push
call
ret
ret
jl
inc
test
mov
xor
hlt
es
mov
sbb
adc
push
clc
lock
or
add
xor
mov
mov
xchg
dec
lock
loope
xadd
stc
xlat
xchg
loop
mov
add
mov
shll
fdivl
lgs
cmp
mov
inc
js
jge
lock
dec
dec
mov
inc
fs
or
lret
dec
mov
rcr
sub
inc
pushf
es
scas
ret
cmp
cmc
mov
mov
cmp
sbb
sbb
xchg
repz
scas
pop
cmc
ljmp
sbb
insb
ds
or
outsb
mov
pop
mov
mov
sbb
mov
nop
sub
and
shrl
mul
enter
mov
push
inc
mov
jge
pop
push
xor
and
sbb
or
inc
ds
sub
shrl
mov
ss
pushf
shll
popf
sub
rolb
sbb
icebp
mov
in
lret
rcl
cmpsl
mov
cmpsl
inc
xchg
add
dec
adc
adc
jno
pop
int3
sarb
dec
in
sub
aad
jle
outsl
fs
xor
inc
and
jne
push
daa
mov
mov
fdivrl
out
xchg
mov
mov
add
sub
dec
pop
mov
jae
fcomip
sarb
and
test
scas
das
add
mov
sub
lret
cmc
xlat
dec
mov
shl
lods
sbb
inc
cmpsb
ljmp
ret
scas
gs
aaa
xchg
shlb
adc
movsb
jp
and
push
movsb
in
push
jo
pop
dec
pusha
sub
inc
push
pop
push
jbe
inc
fcomps
and
rcr
mov
or
test
dec
test
test
jp
scas
xlat
dec
mov
idiv
xchg
mov
in
ja
call
and
adc
sub
jno
or
cmp
and
test
push
mov
xchg
insl
and
imul
in
arpl
jp
les
bound
cmp
xor
or
sysexit
in
ss
pop
xchg
inc
nop
cmp
ret
out
je
int
ret
popa
shll
sub
fildl
adc
jo
xchg
loopne
popf
lock
in
inc
lock
ja
scas
pushf
repnz
and
xchg
int
cmp
or
sbb
fidivrl
xchg
rorb
sbb
leave
and
test
cli
xor
clc
sti
dec
fildl
lods
rcll
cmp
jne
enter
xchg
xchg
rcrb
stc
mov
int
hlt
in
cmp
stos
popa
sbb
sub
test
sub
out
mov
push
or
jle
adc
shlb
add
and
add
jmp
mov
sub
imul
cmpsb
dec
mov
jne
mov
push
cli
cmp
pop
push
dec
xor
xchg
lea
leave
cmpsb
pop
jge
test
int3
push
scas
or
mov
and
mov
add
daa
and
jge
cmc
les
adc
movsb
push
adc
sbbb
lcall
mov
lock
faddl
push
push
in
aas
and
das
mov
pop
push
ja
inc
daa
jmp
xchg
daa
sahf
aam
push
xor
sbb
mov
pusha
cs
and
xor
lods
movsb
lods
cmp
stos
xorl
les
xchg
or
bound
les
movsb
jns
jb
dec
and
xchg
and
xchg
in
sbb
mov
and
fstpt
loope
ljmp
jecxz
hlt
mov
and
jne
jmp
cld
ret
or
fnstenv
fcmove
out
fnstenv
aad
sbb
push
mov
sti
mov
cltd
test
ja
loope
cmp
sbb
test
sub
lods
incb
scas
cmpsl
cmovbe
repz
jno
inc
out
das
stos
aaa
sahf
hlt
movsb
mov
and
sbb
push
pop
push
or
push
mov
pop
and
cltd
es
and
lret
inc
xchg
loope
insb
mov
xor
push
push
sbb
mov
pinsrw
add
test
pushf
std
pop
ss
cs
aam
xlat
in
sub
add
pop
jecxz
lahf
stos
jnp
leave
xchg
and
pop
sbb
push
jb
push
scas
test
cld
xor
pop
scas
mov
imul
andb
cmp
add
or
push
mov
add
sub
cmp
mov
scas
mov
pusha
jno
decb
push
lock
jno
and
stos
inc
pop
aad
sahf
inc
xchg
arpl
add
movsl
xchg
sbb
loopne
andl
xchg
into
ljmp
es
inc
push
push
in
or
adc
imul
xchg
adc
gs
mov
iret
mov
adc
xor
movsb
jns
aas
loopne
cs
jo
ret
mov
cmp
inc
adc
jg
std
add
pop
loopne
fisubrl
mov
inc
xchg
add
jg
in
dec
jl
lret
mov
icebp
std
aad
shrb
inc
rcl
repnz
mov
sbb
fisubrl
sub
jno
stos
push
inc
add
pinsrw
lods
pushf
cmp
inc
sub
enter
std
or
and
movsl
sub
insl
out
ret
jb
adc
push
jl
ljmp
sarl
dec
sbb
jbe
cwtl
fwait
adcl
js
cmp
jmp
inc
cli
dec
xchg
sahf
mov
sbb
jae
imul
sub
out
mov
cmp
add
lret
sub
dec
adc
loope
ss
mov
sbb
push
and
push
push
psraw
inc
push
std
sub
mov
aad
out
jl
push
mov
cmpsb
and
out
xorb
das
push
add
mov
popa
jmp
mov
cld
xchg
aas
push
imul
xor
pop
mov
bound
mov
in
cmp
push
sub
xchg
mov
adc
in
inc
push
lock
mov
mov
mov
jl
fnstcw
shll
mov
fs
push
or
fcom
cmpsb
addb
sti
push
jnp
bound
mov
mov
adc
sbb
sbb
inc
or
adc
es
sub
xor
dec
jbe
sarb
lods
xchg
int
out
or
jecxz
and
fsubs
aas
sub
mov
lret
mov
inc
push
call
repz
cmp
xchg
push
insl
outsl
roll
in
insl
insb
rorb
test
ds
pushf
and
xlat
xor
mov
mov
push
mov
cmp
mov
cwtl
aas
fimuls
stos
lds
mov
pop
stc
jge
xor
mov
insl
cmpsb
outsb
xchg
test
ja
test
xchg
movsl
outsb
mov
stc
mov
in
mov
cmp
xor
jg
mov
aad
ret
mov
push
fwait
mov
int3
adc
dec
jno
inc
cli
push
xchg
adc
jno
fidivs
out
adc
pushl
sub
jns
imul
inc
scas
repz
cs
movsb
flds
ret
mov
rolb
mov
dec
jnp
lahf
and
stc
mov
add
negl
dec
in
imul
push
mov
cmp
ss
movsb
jecxz
mov
and
ret
push
testl
push
fisttps
je
mov
pop
push
daa
or
mov
mov
std
cmp
lcall
push
insb
das
out
xchg
pop
xchg
in
jnp
sub
sbb
mov
add
shl
repnz
scas
mov
sub
mov
mov
ffreep
pmaxsw
cli
fcoms
fcom
cmc
mov
movl
xchg
fdivrl
xor
cs
add
push
test
aas
imul
sarl
clc
scas
test
sbb
pop
add
imull
aam
cmc
icebp
inc
sub
xchg
mov
aaa
int
das
repz
orb
xchg
jmp
pop
xlat
mov
mov
sbb
mov
shr
dec
add
mov
clc
jg
add
cmp
dec
arpl
movsb
or
add
sbb
rcl
or
fldenv
das
ret
popa
ret
jbe
push
sbb
or
pop
mov
in
xor
lahf
jmp
add
dec
fsubl
mov
and
fisttps
cmpsl
pop
adc
sub
mov
lods
enter
lock
je
mov
jbe
repz
movsl
sbb
push
cli
lds
arpl
push
mov
and
pop
add
in
enter
enter
jp
mov
out
or
mov
cs
repnz
cli
xchg
mov
shlb
sbb
insl
inc
sub
repz
dec
jns
push
xchg
movsb
shrb
mov
add
sub
jmp
fs
xchg
cmp
sbb
data16
mov
cmp
imul
xlat
pop
ret
bound
inc
inc
push
addr16
adc
test
add
vmulss
aaa
cwtl
and
ret
ljmp
sbb
push
push
enter
ds
cld
mulb
out
outsb
outsl
fldcw
repz
icebp
sub
push
xor
mov
jmp
outsb
or
xchg
stc
xchg
and
mov
sbb
shlb
fistl
mov
adc
cs
fcomp
loope
fstpt
negb
sbb
mov
add
out
adc
test
aas
cltd
sbbb
aaa
push
xchg
loop
dec
scas
int3
or
in
sub
mov
cmp
xchg
daa
sbb
lods
fcmovb
subl
mov
cmp
popf
cwtl
dec
or
mov
dec
jmp
dec
es
loope
jne
pop
lret
out
call
data16
mov
push
test
push
ss
cld
or
imul
mov
or
bound
lock
inc
pusha
iret
outsb
movsl
push
test
jmp
dec
inc
jl
fstl
popa
or
mov
insb
stc
and
aad
adc
sub
xor
pop
mov
cmc
and
lahf
mov
jmp
dec
std
cwtl
push
mov
unpckhps
or
mov
ficompl
sbb
out
fcmovnb
popa
jnp
lods
xchg
or
or
into
and
hlt
pushf
fsubr
inc
orb
pop
push
call
or
fndisi(8087
xchg
cmc
add
lcall
sbb
mov
pop
adc
aam
loopne
fucomi
cmp
aaa
ret
in
mov
xor
outsl
clc
mov
mov
popf
xor
jp
push
pop
xchg
pop
mov
or
mov
clc
and
stc
pop
notb
sub
mov
notb
std
fcmovbe
sarb
lcall
push
mov
mov
lcall
push
test
adc
mov
jb
out
pop
lcall
adc
adc
sahf
push
add
sbb
leave
popa
cmc
jnp
adc
pop
sbb
inc
mov
mov
jmp
daa
or
aaa
cs
jae
lods
nop
out
pop
or
shrb
adc
jbe
or
sbb
mov
or
xor
loope
add
dec
inc
xchg
lea
jecxz
mov
cwtl
stos
ret
pop
stos
aad
cli
dec
pop
in
je
mov
sbb
test
and
in
loope
xor
fdiv
push
fisubrs
stc
mov
or
cmp
clc
add
adc
adcl
bound
jae
fiadds
ror
scas
xor
xchg
in
loopne
imull
push
jg
adc
faddl
mov
xchg
push
pop
out
popa
das
inc
push
adc
flds
push
out
mov
jecxz
fcmovnbe
cmp
cltd
out
lods
dec
pop
or
jb
jmp
dec
mov
mov
mov
pusha
jo
mov
xchg
pop
lgs
xor
in
aaa
fcoms
popa
lods
pop
pop
and
outsb
mov
cwtl
std
mov
call
sbb
xor
push
push
out
inc
dec
in
es
ret
cmc
sbb
add
pop
sub
jbe
dec
sti
test
pop
mov
inc
mov
and
mov
mov
test
js
sbb
dec
cmpsb
iret
or
jb
pop
repz
aas
loopne
in
push
shr
lahf
jo
xchg
fwait
into
pop
xor
dec
pushf
pop
or
loop
test
decl
and
push
jle
fnsave
push
gs
shlb
adc
outsl
xor
js
xorl
jl
ljmp
into
cld
jbe
sbb
mov
sub
ret
repnz
cmp
cmp
inc
rcr
shll
rcpps
ret
and
jp
fsin
iret
inc
xor
adc
cmp
out
scas
call
jp
call
popa
ja
mov
fsubs
dec
jnp
iret
mov
add
push
cmp
pop
mov
je
fadd
clc
xor
divl
dec
cmpsb
iret
daa
mov
jmp
fildl
insl
xchg
jl
test
mov
mulb
push
hlt
ljmp
xchg
mov
push
addb
mov
sub
in
or
into
xchg
push
dec
pop
lock
mov
mov
push
cmp
and
in
imul
and
xchg
insb
imul
adcb
lahf
jle
mov
jns
mov
mov
je
rorb
out
fiaddl
mov
movsl
xlat
fimull
call
loop
cmc
mov
xorb
cmp
leave
dec
add
pop
lock
xor
pop
jg
sub
and
mov
popa
cmc
jo
lcall
sub
jne
ds
sahf
xchg
clc
add
xchg
gs
adc
test
or
subb
mov
popl
add
jb
sti
mov
jnp
vcvtss2sd
test
not
and
mov
or
ds
mov
fcompl
pop
mov
bswap
scas
out
test
mov
arpl
scas
push
rorb
pop
lret
xchg
jecxz
punpckldq
push
out
or
mov
faddp
xchg
push
jp
push
lods
ja
adc
sub
jmp
shrb
hlt
cld
mov
subl
shl
lods
aam
pushf
lcall
mov
aad
add
jl
xchg
mov
ret
andl
lock
or
subb
decb
hlt
sub
dec
xor
xchg
xor
jmp
lock
mov
mov
sbb
dec
shlb
adc
push
mov
mov
add
mov
push
int3
xchg
subb
mov
sbb
add
fdivs
cmp
xchg
sbb
rorl
mov
aam
adc
add
jp
and
pop
ss
pop
xchg
push
aad
cltd
arpl
mov
mov
mov
sti
push
sbb
fcompl
jmp
nop
pop
les
sbb
mov
loope
sub
or
dec
xchg
ret
scas
mov
xchg
mov
sbb
shl
pusha
das
ds
ret
and
add
nop
pop
sarl
loope
movsl
inc
mov
rorl
icebp
xor
mov
ja
dec
sub
xor
cli
inc
push
and
or
inc
push
or
xor
mov
jbe
or
inc
stc
jmp
movsb
mov
cltd
xchg
cwtl
inc
fisubs
xlat
fidivrl
cltd
sbb
add
sahf
add
xor
popf
std
shlb
loopne
arpl
or
sahf
out
xchg
mov
push
xchg
pop
pop
cmpsb
pop
in
fists
jmp
mov
mov
sbb
add
xor
sbb
lret
test
in
mov
or
xor
and
push
cwtl
into
bound
out
mov
in
shlb
aas
sub
popa
or
xchg
lret
xor
pop
mov
roll
loope
lret
sahf
dec
xor
pop
push
push
fadds
jge
test
repnz
aam
mov
or
jbe
scas
jb
movsb
adc
scas
sbb
adc
cmpsl
es
and
mov
hlt
test
stos
inc
xchg
out
jg
sarl
mov
adc
iret
enter
imull
or
imul
inc
imul
xor
mov
sahf
jp
setbe
inc
sub
push
xlat
fucomp
mov
adc
push
addb
into
in
fs
xchg
mov
mov
into
data16
ja
das
or
jo
cmp
mov
xchg
call
cmpsl
xchg
daa
xchg
enter
int3
stos
sbb
inc
inc
add
leave
aas
sbb
xchg
jbe
jae
push
pop
mov
mov
xchg
cmp
stc
cmp
jmp
dec
or
insl
je
cli
push
js
fcmovnu
mov
ljmp
inc
cmp
and
mov
inc
jg
dec
push
or
cmp
mov
je
mov
mov
sub
mov
test
jnp
cmc
xlat
xchg
sub
pop
jae
movsl
jo
push
idivl
xchg
lods
jbe
sub
adc
imul
xchg
pop
mov
add
movsl
testb
insb
aad
and
lods
cli
cltd
or
dec
push
jp
mov
sbb
dec
dec
insl
or
movsl
lret
loope
psubd
pop
xor
xlat
dec
fwait
cmp
xchg
cltd
pop
dec
xchg
xor
cs
jo
out
xchg
xorl
stc
cmc
cli
in
sbb
mov
out
push
das
and
pop
push
aaa
repnz
stos
mov
add
lods
out
testb
cmpsl
cmc
push
jo
ret
in
pop
psubusb
out
or
mov
dec
aaa
cmp
out
adc
int
in
pop
mov
outsb
jmp
mov
xor
pop
or
cmp
nop
adc
lret
into
test
pop
jo
sub
mov
cmp
mov
loop
clc
fstpl
fmuls
repz
mov
jbe
push
jg
dec
push
js
leave
jg
and
bound
jns
clc
mov
fs
dec
add
stc
mov
repz
pop
xorl
xor
lds
in
sbb
insb
dec
jne
mov
pusha
ret
ja
ss
fisubs
push
ret
and
and
mov
jns
mov
fsubr
outsb
or
dec
andb
test
popl
test
lds
jecxz
or
rcr
ds
imul
jecxz
push
out
mov
mov
lds
ljmp
push
xor
outsl
je
rcrl
sbb
imul
push
jge
cmp
rol
fcompl
adc
xchg
fisttpl
push
cltd
and
and
mov
ret
adc
loop
push
clc
int
push
idivl
add
sarl
aad
mov
mov
jp
pop
push
imul
insb
into
pushf
and
add
rcr
outsl
aaa
mov
push
movsb
imul
je
stos
lea
xchg
cmp
jl
inc
clc
ja
or
xorb
sub
fsubrs
mov
ds
dec
inc
pushf
pop
jno
jg
sub
mov
test
fwait
pop
adc
inc
out
aas
test
cltd
xor
push
or
push
lahf
sbb
inc
pop
outsb
insl
cmc
push
lds
sub
and
imul
stc
pop
aas
bnd
and
out
dec
mov
mov
mov
push
scas
mov
stos
push
sub
rolb
dec
in
xchg
adc
js
pavgb
jns
lret
lock
arpl
cwtl
das
mov
clc
lods
jmp
jnp
xchg
xchg
adc
js
adc
int3
mov
sub
inc
aas
cs
in
js
pusha
sbb
mov
loopne
mov
fcmovu
xchg
inc
push
aaa
xchg
dec
sbb
inc
js
dec
pop
dec
jge
push
popa
xlat
repnz
stc
lcall
repz
dec
sub
stc
and
inc
repnz
pop
xchg
sahf
aam
out
hlt
incb
sub
push
jne
icebp
xchg
fsubrs
mov
pop
into
mov
add
inc
mov
mov
lds
cli
rcr
pushf
sarl
sahf
fwait
jg
lock
jns
in
sahf
rolb
sub
dec
xor
and
push
mov
cmp
sub
das
add
adc
scas
adc
out
adc
insl
pop
ja
shr
cmp
adc
or
fldl
fcmove
cmp
test
mov
push
dec
or
push
xchg
xchg
rcrb
pusha
lock
jb
jnp
jle
pop
dec
daa
pop
fsubp
jecxz
decb
inc
test
scas
mov
push
sbb
mov
xchg
ror
cld
jp
movsl
fnstenv
cmpsl
sub
ljmp
or
xchg
imul
pusha
js
push
or
jmp
loop
mov
sbb
cwtl
rcll
and
jg
out
mov
cmc
sub
fdivrp
sbb
xor
pop
add
adc
push
add
js
es
test
stos
sub
aam
dec
aaa
and
inc
cmpsb
jecxz
mov
ss
in
adc
in
ja
and
lret
dec
add
and
cmp
xor
add
pop
ret
loope
std
cmp
andb
inc
scas
sbb
cmp
ds
pop
sbb
ljmp
aas
and
cmp
icebp
aas
dec
sub
jge
cmp
mov
pop
rorl
scas
ds
mov
loope
aas
lea
mov
adc
addl
push
xchg
fcmovbe
insb
insb
mov
fdivs
int3
aaa
mov
sbb
adc
pop
out
jp
xchg
shl
nop
and
sbb
jb
imul
jbe
fnstcw
mov
push
js
xor
out
clc
mov
jnp
mov
mov
xchg
aas
stos
xor
mov
lret
clc
and
jo
add
pop
xlat
cmpsl
js
lods
ljmp
xchg
inc
cmpsl
xor
xor
adc
data16
push
mov
data16
jo
fsubrl
imul
cmpsb
arpl
lods
xor
rolb
xor
aaa
xchg
stc
inc
sahf
add
addr16
lahf
sbb
mov
xchg
fucom
sub
xor
imul
sti
cmc
aaa
es
int
mov
das
sbb
movsl
adc
sbb
adc
mov
sub
xchg
push
rcrb
hlt
pop
in
adc
testb
push
push
xchg
cmp
jae
fcomps
addb
dec
or
pop
fisttps
ficoms
jb
addr16
sbb
sbb
sbbb
out
movsl
outsl
push
insl
shl
jnp
and
jb
pusha
add
aam
test
aam
mov
xchg
dec
arpl
or
jno
push
add
xorl
cmc
rcrl
sbb
dec
push
push
cmp
sbb
cli
aas
and
shr
repnz
add
addr16
pusha
jns
inc
test
pop
insl
push
test
add
loop
decl
addr16
frstor
into
and
push
or
sbb
inc
addr16
push
pop
pop
mov
sub
cmpsb
aad
xlat
cmp
xor
fldl
pop
or
mov
mov
sbb
dec
loopne
std
ficoms
jnp
cmp
and
lods
mov
arpl
push
test
add
push
cs
test
dec
movsb
pushf
lods
fdivl
outsb
addr16
aad
js
dec
stos
sbb
idivb
xchg
jg
sub
jmp
pushf
cmp
int3
cld
imul
sbb
xor
repz
inc
jmp
inc
orl
mov
dec
mov
pop
aam
iret
orb
mov
inc
xchg
cmp
popa
mov
enter
les
add
mov
inc
addr16
mov
adc
test
mov
in
sbb
cmpsb
add
popf
mov
sbb
cmp
jg
data16
mov
repnz
out
adc
jp
test
imul
repz
cmp
cmp
mov
arpl
aam
fstpl
pusha
inc
jae
pushf
adc
jge
adc
call
ret
ffreep
outsl
jnp
inc
push
and
jno
mov
repnz
jo
pusha
mov
sbb
cmc
jp
sub
cmpsb
aad
lret
mov
or
test
push
mov
or
ds
arpl
fldl
mov
push
clc
push
lahf
sahf
mov
xchg
jl
or
sub
dec
leave
xor
jl
daa
jecxz
test
idiv
inc
add
sti
xchg
jbe
stos
daa
cmp
and
lods
ja
pop
or
push
add
mov
jnp
ss
or
cmpsl
lcall
mov
xor
pop
add
mov
and
je
inc
pop
jno
popa
mov
fsubrp
arpl
xor
dec
outsb
mov
inc
pop
insb
jp
lea
jne
pop
push
sbb
mov
fmul
mov
test
sbbl
pusha
push
aam
xor
std
movsl
shlb
sub
cmp
ss
fcoms
int
out
mov
adc
ja
pop
pop
jmp
fmuls
xor
lods
inc
arpl
lock
cltd
mov
cmp
inc
inc
dec
sub
int3
out
adc
sub
roll
push
icebp
mov
push
jbe
jns
or
mov
cmp
fcomps
mov
lea
push
daa
jle
xchg
push
add
jae
stos
pop
xchg
js
test
mov
and
jge
fnsave
test
sub
fldenv
xchg
cld
push
aad
inc
sbb
aaa
inc
xchg
test
imul
mov
ds
jne
and
out
popa
ss
scas
mov
andb
pushl
jle
ljmp
ds
fmul
add
or
in
xorl
mov
repnz
es
dec
jle
hlt
xchg
testl
xchg
scas
std
fidivrl
adc
jns
jl
arpl
inc
pushf
popl
cwtl
leave
inc
cmp
fadds
fwait
idivb
cmp
pop
hlt
je
mov
push
push
pop
loop
adc
adc
inc
jg
jmp
gs
lea
imul
mov
push
push
pop
in
sub
test
pop
in
push
mov
outsb
loope
das
sbbl
ljmp
in
stos
lret
mov
pop
insl
leave
or
arpl
test
adc
shll
lods
pop
cmp
dec
add
xchg
push
adc
insb
out
or
testb
lods
repnz
and
add
pop
and
inc
mov
or
es
xchg
sub
mov
je
and
push
pop
inc
lret
sbb
mov
imul
push
xor
mov
imul
loopne
testl
negb
shlb
mov
shrl
outsb
bound
mov
pop
sahf
xchg
addr16
sbbb
sub
cmpsb
into
push
nop
adc
out
dec
cmp
int3
cmp
and
adc
mov
sbb
add
or
xor
orb
adc
mov
xlat
stos
icebp
adc
jle
js
fidivrs
lahf
aaa
lock
adc
xchg
adc
xchg
xor
data16
push
dec
das
loope
mov
xchg
xchg
pop
fnstenv
adc
call
mov
push
pop
inc
xor
dec
je
int3
adc
add
cmp
sbb
xchg
lret
movsb
mov
inc
loopne
sub
in
and
aas
aad
lods
pop
negb
or
mov
les
cltd
arpl
add
in
cmp
xchg
mov
mov
push
dec
mov
aas
push
rorb
fsubrl
scas
fiadds
test
cld
sub
push
aam
imul
ret
xorl
out
mov
mov
xor
xchg
cmp
lds
mov
js
adc
mov
mov
cld
lods
jmp
inc
ret
or
test
fcmovnu
mov
arpl
imul
adc
imulb
or
sbb
inc
and
jle
cmpsb
out
sahf
jle
bound
lahf
sbb
imul
add
mov
test
loop
or
dec
sub
outsb
loope
sub
adc
mov
xor
lock
and
mov
pop
cmc
xor
xor
xchg
sbb
push
nop
push
hlt
adc
cmc
rorb
add
mov
fstp
sbb
test
das
xchg
es
test
test
loop
data16
xchg
mov
test
mov
insb
ror
aas
mov
cld
lods
xor
push
dec
push
jmp
cmp
or
ret
mov
mov
lahf
addr16
popf
mov
stos
or
sbb
outsb
sbb
fldcw
test
add
jecxz
adc
pop
mov
imul
adc
lock
shrb
inc
add
sbb
cmp
and
outsl
test
inc
sbb
mov
or
flds
dec
and
pop
lods
cmp
adc
rcll
dec
sarb
push
add
mov
leave
jns
jns
or
xlat
imul
or
adc
leave
xor
fstl
dec
pushl
adcb
dec
sti
or
psraw
cmp
pop
mov
out
xor
aad
add
xor
push
and
mov
insl
push
les
jp
xor
mov
mov
dec
mov
add
mov
popf
jb
jl
mov
out
xor
lods
mov
mov
push
add
dec
jle
leave
and
sub
lret
lods
cmpsl
add
fildll
or
ja
and
push
xor
aas
popa
cmp
jbe
repz
mov
sub
add
jns
pop
loopne
clc
outsb
add
test
leave
aaa
mov
mov
ret
push
in
stc
jmp
push
lcall
in
test
jg
jae
popa
inc
dec
mov
pop
bswap
dec
imul
adc
inc
fcmove
sbb
daa
sahf
shrl
mov
nop
arpl
aaa
push
jmp
in
aad
lret
mov
sbb
jne
mov
and
mov
loope
xchg
inc
adc
jbe
movsb
mov
pop
dec
test
lret
and
ljmp
and
mov
fs
je
or
ds
inc
xor
enter
jge
nop
inc
repnz
xor
lock
test
push
stos
push
out
aaa
cmpsb
push
sbb
push
icebp
mov
add
push
xor
jne
dec
inc
pop
xor
xor
psubd
stos
jnp
outsb
aaa
mov
inc
out
jb
and
and
push
sbb
or
mov
ficomps
sbb
xchg
xlat
sbbl
pushf
mov
mov
jmp
repz
jb
dec
test
inc
push
push
pop
push
fcomi
dec
mov
push
mov
lods
sbb
sahf
aas
rcl
add
dec
les
mov
roll
outsl
sub
in
es
mov
out
dec
out
jne
in
lea
sysenter
sub
std
insb
loope
jge
mov
cmp
lret
adc
and
pop
sti
ret
movsl
bound
sbb
mov
inc
inc
out
addl
ss
outsb
cmpsb
pusha
data16
iret
push
leave
xor
mov
jb
add
xor
dec
loopne
sub
popf
push
nop
inc
jp
popa
or
clc
sar
subb
adc
jne
aam
jb
inc
pop
mov
xchg
popa
cmp
mov
loop
mov
out
or
pop
nop
rcrb
xor
aaa
iret
mov
jmp
fisttpl
ss
mul
clc
test
les
xor
push
pop
js
fiaddl
lret
sahf
push
inc
cmp
mov
sbb
mov
xchg
push
mov
pop
add
addl
jp
push
les
sbb
mov
dec
and
popa
stos
mov
pop
and
fisubrl
int
jecxz
mov
xchg
ret
in
add
int
mov
hlt
in
lahf
jo
inc
div
ss
pusha
mov
pushf
stos
and
inc
pop
out
ss
or
mov
movsl
out
mov
pop
imul
xchg
iret
call
adc
xchg
dec
fs
mov
dec
stos
pop
lock
mov
in
jbe
dec
xor
add
stos
mov
adc
movsl
mov
sub
lcall
pop
icebp
sarb
and
mov
out
add
das
xchg
xchg
dec
loope
mov
daa
das
xlat
lret
cmpsl
adc
cltd
ret
inc
sbb
inc
xor
sbb
add
push
dec
sbb
add
test
ss
mov
pop
out
mov
mov
shl
jl
or
mov
loop
push
inc
xlat
iret
adc
jg
jl
cmp
fmuls
aaa
jle
xor
mov
cltd
faddp
cmpb
loopne
or
pop
outsb
pop
repnz
pop
cmp
cmp
negb
mov
mov
es
stos
mov
jecxz
mov
dec
inc
loopne
stc
movsb
fwait
imulb
cmpl
out
pop
test
inc
inc
adc
cmc
jg
adc
xlat
cmpsl
mov
mov
lahf
sysexit
push
inc
sub
add
cmp
mov
orl
mov
sub
adc
adcb
lock
jns
adc
xchg
into
xchg
out
push
loopne
fisttpl
xchg
sarl
loope
fidivl
dec
imulb
scas
notl
jnp
sub
addr16
mov
fstpl
mov
push
js
or
movsl
dec
out
lret
jg
dec
sub
int
add
sub
fucom
les
stos
cli
xor
push
pop
stc
pop
fistl
xchg
dec
imul
fcmovb
jecxz
pushf
in
popf
add
lea
fdivrs
jnp
or
push
les
sub
fadd
icebp
cmp
inc
xchg
xchg
sbb
jns
add
pop
pop
loop
jo
popa
movsb
mov
inc
lods
sub
mov
dec
mov
inc
aaa
adc
mov
scas
inc
hlt
add
mov
sbb
outsl
pop
fists
das
xor
inc
sub
cltd
inc
psubusb
insl
test
pop
sbb
adc
ljmp
mov
cli
mov
xchg
dec
stos
divb
mov
mov
inc
mov
jmp
pop
and
test
dec
decl
xchg
das
add
in
outsb
sahf
push
icebp
mov
in
es
pop
ja
jge
mov
xchg
push
lcall
xor
xchg
sbb
push
push
cmp
mov
jbe
notb
mov
in
out
push
dec
add
push
sub
jno
inc
icebp
insl
out
call
or
fstp
push
imul
scas
push
daa
cltd
ficompl
ljmp
mov
xchg
xchg
rorb
lds
rep
xchg
lcall
jno
imul
subl
pop
pusha
loop
pusha
mov
xchg
mov
lcall
xchg
in
push
aad
popa
push
and
xor
ficoms
inc
popa
loopne
cmp
xchg
push
inc
xchg
inc
sub
in
mov
mov
xor
mov
rorb
rcrl
mov
stos
outsl
sbb
xor
and
or
pop
and
lret
lds
push
adc
push
xchg
leave
jmp
int3
pop
aam
imul
aas
dec
add
sub
aam
in
mov
mov
push
pop
test
xchg
dec
cmc
push
mov
repz
mov
mov
jmp
lcall
cmpl
or
add
mov
movsl
in
stos
insb
aad
mov
ret
and
inc
and
jo
xor
lret
repnz
cmp
push
nop
add
dec
and
xchg
xchg
xor
pop
mov
mov
mov
push
push
jae
cmpsb
fwait
cli
outsl
inc
jecxz
or
out
mov
or
loopne
mov
pusha
mov
ret
sti
dec
push
shlb
adc
inc
bound
ja
ret
mov
mov
pop
sub
xorl
lcall
xchg
lret
orl
jl
pop
push
out
sbb
arpl
or
stos
shlb
pop
cmp
mov
xor
adc
lahf
push
xchg
push
sahf
and
lret
add
xchg
popa
dec
aam
or
cld
call
cmp
stos
sub
cs
lods
or
in
or
jb
incb
sub
or
pop
mov
loopne
jne
ss
fisttps
cli
enter
testl
icebp
add
aaa
sub
je
hlt
xchg
push
sbb
sbb
addl
jmp
xor
sbb
mov
nop
xor
and
push
inc
or
lock
iret
cli
cmp
mov
mov
jne
sub
or
xchg
xchg
mov
xor
repz
sub
sbb
xor
or
pop
jl
mov
ja
dec
hlt
test
pop
mov
es
mov
sub
loopne
imul
dec
adcb
jb
push
call
loope
add
xchg
and
jo
dec
push
ds
sub
loope
jnp
call
dec
push
jno
pushf
adc
inc
mov
stc
out
lret
push
xchg
lret
rorb
decl
and
pop
cwtl
fiaddl
jg
adc
xchg
ret
in
or
inc
push
out
cwtl
xchg
pop
xchg
fs
std
push
fwait
pop
sub
mov
stc
movsb
in
lock
imul
dec
ss
pop
repz
and
jb
lea
adcl
xor
adc
fcoml
repnz
cmp
pusha
call
push
int3
sub
jb
mov
or
mov
jbe
pusha
xlat
push
pop
ja
mov
and
lock
add
scas
sub
imul
pop
jp
fidivrs
jmp
clc
mov
loopne
lret
jns
xor
lds
pop
xor
rcrl
stos
or
jae
pop
or
lock
les
dec
push
fists
adc
mov
add
cmp
mov
out
jle
jmp
das
xor
mov
mov
xchg
push
lds
imulb
inc
lahf
lods
mov
sub
cmp
je
lret
push
sbb
movsl
addb
mov
jae
inc
ja
ljmp
xchg
lret
loope
xchg
xchg
adc
shll
add
out
xchg
dec
sbb
xor
into
xrelease
add
inc
pusha
nop
aad
cmpsb
push
mov
movsl
gs
leave
mov
pop
aaa
outsb
push
jb
and
sbb
lret
or
mov
out
cmc
push
icebp
adc
ret
rcrb
scas
sahf
aad
mov
sbb
sub
icebp
inc
inc
lret
into
sarb
inc
or
fistpll
shlb
sbb
mov
xor
jae
mov
hlt
push
mov
movsl
jl
inc
mov
pushf
inc
jnp
arpl
lcall
sub
roll
or
js
int
popf
jae
adc
pop
lea
mov
xlat
xchg
rcll
mov
stos
aas
mov
and
mov
pop
loope
repz
lahf
sub
push
cmc
pop
add
lds
ret
ljmp
xchg
fistps
scas
jecxz
lret
mov
inc
jg
cmpsb
bound
sbb
dec
int3
xchg
sub
leave
xor
les
sahf
out
sbbb
ret
mov
jbe
push
in
test
ficompl
jp
add
and
sahf
or
sbb
mov
xor
cs
jl
and
and
arpl
cmp
icebp
sub
dec
aad
cltd
movsl
jns
lcall
imul
rorl
out
dec
scas
cmc
jl
jl
in
jecxz
xlat
inc
mov
mov
mov
xor
mov
popa
lea
insl
pop
data16
pop
jmp
xchg
mov
add
jb
hlt
xchg
fdivrl
dec
cmp
xor
mov
in
or
mov
jae
loope
out
jp
idivl
jmp
jle
mov
dec
fwait
out
adc
decl
stos
sbb
pop
mov
mov
test
cmc
xchg
loope
loopne
push
dec
add
and
xchg
xchg
adc
dec
mov
inc
insl
aas
das
jmp
sbb
bound
test
mov
ljmp
cs
or
push
add
inc
add
mov
gs
loop
rcll
pop
adc
push
dec
scas
adc
pushf
jg
push
pop
cltd
add
out
push
sub
dec
and
ja
push
ret
aaa
out
dec
in
rclb
test
sub
xchg
rclb
lcall
ret
xlat
es
jl
add
adc
adc
xor
pop
lret
and
out
fisttpll
stc
aas
testb
adc
cmc
ret
mov
mov
scas
sbb
xchg
push
scas
daa
in
adc
sti
cmp
xor
insl
pusha
adc
fidivrl
jmp
repnz
sbb
test
lods
xchg
in
ret
mov
dec
push
mov
xchg
lock
sbb
ljmp
lock
adc
inc
sbb
div
xor
int
outsl
jne
add
icebp
pop
jg
and
push
pop
fdivrl
mov
mov
dec
and
inc
dec
mov
xlat
cmp
dec
jmp
inc
dec
xor
xlat
fidivrs
sub
pop
ret
mov
sti
push
aas
sub
nop
or
lds
jmp
add
stos
icebp
pop
and
fstpl
fs
or
inc
ljmp
clc
jmpw
inc
repz
and
movsl
popa
repz
popl
pop
sarl
fmuls
push
cmp
adc
xchg
in
out
loopne
and
movsl
push
sbb
mov
addr16
jbe
ds
imul
or
cld
andb
mov
in
call
enter
fcomip
mov
adc
push
movsl
ret
bnd
cmp
jae
out
movsl
shll
sbb
inc
add
aaa
pop
in
add
jno
shll
sbb
adc
outsb
bound
in
nop
sti
es
jl
jb
jnp
xchg
stos
fistl
fbstp
cmp
call
or
cmc
adcl
mov
mov
jmp
movsl
xchg
jnp
inc
push
inc
sahf
and
inc
shrb
outsb
dec
scas
jp
add
jge
out
inc
mov
pop
jae
sbb
test
xor
aam
sbb
mov
out
dec
add
in
lods
lock
pop
add
dec
push
push
bound
push
cmp
or
ret
lods
xchg
xor
in
xchg
and
stos
je
mov
repz
cmp
push
xor
push
hlt
mov
adc
cmp
cwtl
xchg
or
outsl
out
mov
in
push
or
cs
cmp
sub
xlat
xorl
popa
in
sub
imul
mov
jl
mov
adc
jle
movups
in
out
imul
cmp
nop
test
xor
out
vcvtdq2ps
jmp
sbb
aas
aaa
cmpsb
and
add
jg
shll
lret
inc
jnp
jge
sbb
xchg
pop
push
sbb
and
popa
ss
mov
cltd
dec
popf
int
sbb
cmp
cmc
data16
mov
dec
jg
sbb
stc
orb
roll
repz
cs
call
orb
cmp
sub
pushf
pop
push
mov
roll
adc
mov
xchg
stc
test
cmc
pop
inc
push
jo
jbe
adc
lcall
push
sahf
ds
xchg
xchg
repnz
aad
xchg
push
imul
pop
cmpsb
scas
dec
in
mov
xor
das
dec
cmp
cmp
jmp
icebp
jmp
pop
in
xchg
fdivr
inc
les
push
jp
mov
or
mov
into
xor
push
cs
or
mov
push
out
jne
cmp
xchg
xchg
cmpsb
add
and
push
dec
loope
xor
mov
pop
adc
jno
pop
movsb
jmp
mov
adc
inc
push
cmp
pop
lods
mov
cltd
jnp
lock
dec
fidivrl
pusha
xor
xor
mov
mov
loop
jnp
popa
fs
push
add
pushf
or
outsb
push
mov
jmp
sbb
and
xor
test
or
fcmove
push
mov
or
cmp
icebp
fsubrl
inc
test
pushf
aas
les
scas
xchg
mov
jbe
mov
sbb
jl
lahf
repnz
shr
mov
jmp
test
hlt
push
das
inc
mov
addl
mov
xchg
mov
test
mov
or
add
push
mov
scas
cmp
add
mov
add
cltd
xchg
fildll
mov
iret
in
int
jp
adc
and
orl
popa
add
and
adc
dec
out
into
mov
cltd
mov
xor
call
cwtl
fcomps
cmpsb
add
mov
jp
ljmp
push
lcall
push
dec
or
stos
sbb
or
mov
xchg
xchg
int
mov
cmpsb
mov
and
fcoms
popf
sbb
lock
mov
xchg
sbb
loope
movsb
dec
mov
ret
jl
xchg
adcb
outsb
lret
sbb
hlt
adc
mov
movsb
shll
xchg
and
mov
push
or
subb
testl
and
push
sub
lcall
insl
lret
insb
inc
pop
add
mov
sbb
out
in
sti
inc
adc
push
jns
dec
push
shrl
daa
loop
add
sbb
or
xor
cli
mov
mov
hlt
out
mov
cmp
inc
mov
dec
or
sbb
pop
sbb
movsb
push
dec
dec
aam
mov
adc
jno
negb
insl
mov
adc
mov
lret
stc
je
std
std
xor
mov
mov
dec
arpl
test
stos
es
mov
jecxz
adcb
ljmp
iret
xchg
jp
xlat
je
xchg
in
test
divb
dec
scas
js
pop
lds
xchg
iret
sub
fs
rclb
nop
mov
jl
xchg
sbb
or
sbb
mov
daa
stos
jp
mov
and
inc
addb
insl
add
mov
shl
daa
stos
scas
mov
or
jnp
popf
repz
pop
loop
sub
nop
adc
mov
aaa
lods
xor
push
adc
xchg
data16
xchg
aad
adc
or
in
in
and
push
data16
mov
cmp
enter
outsl
xor
and
js
cmp
cwtl
iret
jns
cmp
adc
or
pop
jmp
adc
sub
xchg
mov
imul
cmp
and
cmc
jg
ret
pop
popf
in
fdiv
mov
sbb
inc
mov
cmp
sahf
leave
pop
mov
push
enter
cmpsl
test
sub
or
mov
or
shlb
cmpsl
add
jo
bound
mov
lret
xchg
leave
adc
daa
dec
arpl
loope
sarb
push
int
sub
dec
mov
test
mov
ffree
test
mov
fisttps
sub
fcmovbe
pop
pop
fwait
and
ljmp
add
push
loopne
adc
ret
or
out
jg
push
cmp
jns
pop
sub
ret
lods
mov
add
jns
cs
sub
rclb
jb
push
push
inc
push
sti
pop
ljmp
push
imul
outsl
pop
mov
divl
push
in
pusha
mov
std
std
mov
iret
andb
aad
fists
inc
mov
jae
push
mov
add
ret
add
and
jmp
ja
aam
fs
outsb
cwtl
lahf
jnp
pop
in
xor
xchg
cltd
push
in
nop
adc
out
mov
lods
mov
jno
out
leave
xchg
and
icebp
mov
lcall
mov
jbe
adc
and
pusha
lret
push
inc
xchg
clc
les
adc
enter
lret
pop
inc
loopne
mov
adc
pop
je
jns
bnd
pusha
jb
int
inc
cmpsl
mov
pop
xchg
and
bound
cmpsb
in
cld
pop
sbb
cli
stc
add
enter
cltd
and
cmp
xchg
sbb
push
inc
push
fistpl
sbb
fimuls
enter
pusha
jns
mov
scas
jne
adc
sbb
aas
scas
lahf
outsb
dec
xorl
cmp
gs
mov
xchg
addb
scas
fbstp
ja
dec
and
test
pop
cmp
and
mov
outsl
sbb
jbe
stos
xchg
loope
paddd
popf
sub
cmpsl
fsubrp
in
cmp
cmp
sahf
lods
fsubrs
fdivrp
xchg
ja
mov
popf
in
xchg
inc
xor
jns
mov
jno
xor
push
pop
fcmovnu
je
and
movsl
push
cmp
icebp
adc
or
setge
pop
dec
xor
into
push
insl
fsub
movb
mov
adc
xor
xchg
pusha
out
sarb
cld
push
hlt
repz
movsl
xchg
pop
sub
cmp
js
or
data16
pop
sbb
inc
xchg
arpl
jg
mov
cli
cwtl
lahf
maxps
pop
pop
dec
jmp
sub
pop
sbb
and
dec
aam
arpl
pop
add
xchg
mov
xchg
jns
push
mov
xor
loopne
add
jnp
mov
xchg
xchg
in
enter
jo
outsl
and
icebp
sub
sbbl
shll
xor
jmp
xchg
xchg
stos
push
mov
fldenv
or
outsb
pop
negb
es
add
inc
scas
out
out
mov
mov
jae
xchg
xchg
sbb
scas
add
test
push
cld
xor
int3
pop
fdivs
fcomip
mov
lahf
sub
mov
or
lret
inc
jmp
mov
pop
lea
jnp
jb
push
imul
scas
int3
push
fwait
sub
dec
daa
imull
daa
icebp
addr16
ret
repz
adc
call
dec
ret
test
rcrb
sbbb
out
stos
inc
inc
lahf
push
jle
mov
or
xchg
hlt
stos
into
lahf
hlt
push
pop
xor
fsubr
pop
pop
xchg
and
mov
clc
rcrl
inc
adc
shrl
sub
sub
push
cmp
jae
and
or
les
sbb
iret
xchg
in
dec
gs
imul
in
inc
sahf
sub
jo
push
idivb
fildll
and
fisubs
call
sub
mov
lret
test
adc
mov
mov
out
add
xchg
pop
xchg
imulb
mov
or
cmp
outsb
addl
pop
ficoml
xchg
mov
pop
sub
enter
mov
mov
mov
jbe
lods
jmp
rcr
xlat
test
mov
out
inc
pop
mov
dec
je
jecxz
add
lahf
or
mov
pop
fsubr
jecxz
insb
jnp
outsb
sbb
outsb
loope
fistpll
aad
sub
sbb
fsts
pop
ds
dec
mov
xorb
and
add
shlb
add
je
mov
mull
js
dec
aam
daa
lea
cltd
fistl
cmp
aas
bound
push
mov
shrl
je
sub
scas
pushf
pop
in
ds
lcall
mov
pusha
pop
xor
mov
xchg
out
xor
in
popa
push
stos
ljmp
sub
mov
fdivrl
shrb
rcrl
ret
jbe
mov
int3
jg
dec
daa
shl
dec
jp
cmp
cli
adc
add
cmp
jecxz
add
dec
lods
sbb
insl
and
scas
sbb
push
inc
je
stos
loope
imul
inc
mov
or
stc
rcl
pop
xchg
std
adc
ljmp
xor
xor
mov
arpl
jbe
jg
imul
and
int
sbb
pop
lods
xor
xchg
ret
imul
push
mov
dec
mov
push
sub
daa
shll
cmp
inc
sub
mov
out
xchg
pop
outsb
jne
inc
xchg
push
jbe
mov
sub
add
cmpsb
pop
adc
out
lcall
mov
cli
adc
mov
dec
xchg
out
rorb
push
mov
cmp
mov
movl
fiaddl
push
add
jb
sub
dec
shrl
and
push
dec
cmpsl
das
cmp
adc
sbb
xchg
cmp
dec
mov
sub
dec
and
divl
scas
mov
mov
or
jne
push
hlt
xor
into
sub
dec
and
stos
sub
shlb
jmp
mov
loope
xor
sub
mov
inc
out
inc
test
ret
adc
les
dec
push
jno
movsl
aas
insb
push
test
enter
in
outsb
adc
mov
fdivrs
xchg
sub
fucomp
push
sub
je
jns
ljmp
shl
enter
ja
movsb
stc
sbb
js
js
into
in
pop
inc
mov
sub
push
push
lods
nop
cmpsb
mov
and
mov
mov
loope
fstpl
shlb
sub
jbe
push
nop
jl
orb
xor
jae
outsl
out
fwait
pushf
add
and
test
je
xchg
push
arpl
xor
xor
rorb
mov
sbb
arpl
xor
sub
icebp
test
js
out
filds
or
add
xor
ficompl
dec
xlat
outsl
cmp
int3
xlat
rcrb
mov
outsl
xchg
cmp
push
add
lret
imul
mov
push
sti
into
mov
dec
xchg
adc
or
cmp
and
adc
push
rcrl
jno
pop
fidivl
ljmp
pop
mov
cld
inc
data16
shll
aam
sbb
mov
sub
loopne
pop
int3
sarl
inc
and
shlb
outsb
jmp
jo
xchg
loop
ss
out
jg
stc
adc
pop
mov
mov
xchg
jae
test
push
insl
lods
pop
jl
cwtl
sti
mov
js
cmpsb
lock
cmp
call
jae
pop
fdivl
icebp
mov
into
data16
sahf
ret
cwtl
lods
cmp
scas
xchg
into
cli
int3
sub
scas
push
pop
lds
push
cwtl
aaa
jp
iret
mov
iret
jo
dec
sub
out
mov
push
sbb
sbb
jg
mov
mov
sbb
xor
cmc
mov
stos
into
or
lahf
mov
xor
push
adc
inc
sbbb
iret
mov
fistpll
daa
mov
repz
push
add
lods
lea
bound
jp
sbb
mov
sub
imul
in
or
adc
cld
pop
jecxz
aas
sahf
loope
cltd
or
sbb
and
stc
xor
mov
inc
cwtl
cmp
out
sbb
loope
or
inc
testb
xchg
mov
pop
in
in
jns
and
cltd
dec
cmpsl
or
or
jno
mov
popf
das
sub
je
idiv
xchg
js
jae,pt
cmp
jno
xchg
mov
jge
sahf
js
insl
js
sbb
jo
jmp
push
dec
js
sub
xchg
push
sbb
pop
cwtl
pop
jne
push
std
mov
mov
jne
or
jb
out
insl
ret
jb
cwtl
mov
mov
dec
mov
cmp
cli
pushf
mov
mov
pop
xchg
mov
icebp
xorb
ror
icebp
in
mov
push
mov
iret
loop
or
out
pushf
out
aad
leave
es
push
xchg
sar
outsb
pop
jo
push
aad
daa
fisubs
iret
jns
shl
icebp
mov
inc
mov
jecxz
inc
xchg
fdiv
cmp
or
jno
dec
and
dec
sub
popa
in
nop
mov
jl
and
movsl
fimull
sub
jmp
push
es
and
pushf
fisubl
pop
xor
js
pop
and
xor
adc
adc
mov
push
addr16
jmp
leave
loope
js
add
movl
cmc
mov
mov
xchg
lea
ja
jl
dec
fdiv
fs
push
ljmp
call
out
adc
and
cmp
loope
ror
cmpsb
rcr
ljmp
jne
mov
daa
xor
mov
fs
and
int
cmpsl
cli
mov
shld
inc
ljmp
test
and
push
sub
lds
fmull
xorl
into
push
ja
sub
pop
add
jle
sahf
stc
cmp
or
push
mov
fstpt
cmc
cmpsb
inc
lret
call
dec
int
mov
lret
xlat
inc
xor
les
out
ds
mov
cwtl
push
sub
stos
in
and
cmp
incb
les
imul
mov
xchg
or
insl
sub
mov
pop
mov
push
sub
add
es
rcrb
jne
push
push
cmc
andb
or
dec
add
clc
loop
mov
ljmp
adc
pop
test
fsubrs
and
inc
mov
pop
pop
xor
xchg
sub
cli
cmpsb
dec
divl
mov
xor
cld
imul
sti
inc
xchg
push
fs
pop
lcall
faddp
jmp
xchg
add
mov
dec
aaa
icebp
xchg
jmp
xadd
pop
push
xor
mov
loop
ret
xor
or
xorb
in
mov
inc
push
xchg
xchg
pop
jg
loop
test
fsubrp
pop
in
push
adc
inc
loopne
sbb
xchg
push
ss
daa
and
jne
add
jmp
das
mov
adc
pop
xchg
or
lods
sti
push
ret
cmp
out
std
jbe
xor
imul
or
mov
std
adc
jb
jg
xor
pop
adc
inc
push
adc
sbb
jecxz
mov
sub
push
or
je
stc
sub
and
faddl
das
and
add
out
in
cwtl
sub
sub
bound
xor
push
icebp
gs
leave
push
out
push
inc
inc
cli
ja
mov
clc
fabs
xchg
mov
mov
ljmp
pop
cmpb
rcrl
xchg
mov
and
incb
mov
sub
push
pop
sti
test
xor
lret
jl
push
xor
popa
xor
test
mov
xchg
outsb
icebp
adc
in
inc
repz
jl
aaa
cmp
icebp
rorl
popf
xchg
dec
mov
arpl
pop
jno
push
jno
mov
jns
aad
cmp
adc
xorl
sbb
aam
and
out
or
js
xchg
jg
dec
cmp
les
mov
sahf
pop
cmpsl
pushf
dec
cmpsl
xchg
call
add
rcr
mov
lock
gs
dec
mov
movsb
cmp
inc
dec
test
scas
mov
fwait
pop
mov
jge
jae
inc
and
jg
leave
sub
imul
mov
scas
stos
loope
sar
or
add
mov
mov
mov
outsl
fsubs
xor
xchg
add
push
into
cmp
jl
addr16
in
and
fstps
nop
out
lea
pop
sub
aam
repz
dec
popa
lcall
jge
frstor
in
in
pop
lret
enter
cmp
xlat
mov
xchg
insl
and
mov
andl
popa
fxam
cmovge
dec
scas
pop
test
shl
ret
xchg
ss
pop
cmp
cmpsl
jp
and
stos
les
adc
inc
or
shl
lds
xor
mov
notb
ja
sub
hlt
add
push
out
xor
mov
cmc
test
call
or
scas
insl
mov
mov
jno
fnstcw
pop
popf
mov
test
imul
inc
mov
test
mov
add
aad
in
cmp
push
aaa
inc
sbb
clc
icebp
mov
xchg
aad
sti
mov
adc
xor
xlat
xor
mov
pop
xor
jne
adc
pusha
xchg
inc
int
xchg
mov
test
stos
mov
jg
mov
insb
inc
jne
outsl
lods
push
inc
cmovp
xor
ds
pusha
inc
push
pusha
lcall
popf
fmul
pop
jo
bound
sbb
test
sub
sbb
loope
push
fisubl
push
std
insb
sbb
fimull
lods
or
and
mov
mov
jl
pop
sbb
fs
pop
dec
jl
xchg
scas
rcrb
test
cmp
arpl
mov
xorb
lods
add
or
sbb
pop
cmp
out
mov
adcb
dec
lock
js
push
mov
xor
dec
xor
mov
sbb
in
fstpt
cmc
rcrb
mull
out
mov
rclb
out
cli
sub
push
lret
or
adc
rep
adc
ljmp
xchg
movd
push
xchg
cmp
mov
add
jp
arpl
lret
dec
stos
push
test
dec
ds
or
lock
cmp
loopne
repnz
or
std
out
incl
es
sub
cmp
mov
jge
xchg
mov
dec
mov
mov
in
insb
sub
imul
or
in
ljmp
push
fadds
mov
adc
pop
lcall
dec
aam
out
dec
xor
cmp
cmpsb
xor
cmpl
aam
xchg
push
jno
mov
sti
int3
sub
sub
cli
test
and
imul
shlb
shrl
test
xor
sbb
mov
aam
arpl
hlt
push
jle
dec
mov
mov
mov
xchg
ljmp
xlat
test
sbb
adc
cs
dec
dec
inc
jge
fistpll
adc
aam
cmc
in
pop
sub
inc
test
mov
je
test
xor
mov
pop
decb
and
adc
add
push
insl
dec
loop
in
xor
fcomp
jge
mov
or
loope
inc
pop
pop
out
push
add
lret
aas
or
rclb
imul
stos
imul
loopne
stos
xchg
repz
imulb
popa
aad
mov
add
xlat
test
jnp
jo
adc
jo,pt
fistps
sbb
and
lret
sub
outsl
push
rorb
cmpsl
faddl
jp
gs
mov
int3
mov
shlb
push
data16
neg
add
mov
mov
adcl
inc
and
or
lret
push
jmp
inc
std
mov
cltd
mov
lods
xor
stc
mov
test
mov
sbb
movsb
fstps
xchg
and
or
dec
jae
lcall
mov
mov
lret
and
mov
or
popa
ja
jle
das
xchg
xchg
mov
fwait
cmp
dec
scas
inc
shll
aaa
int
adc
add
xchg
fistpl
or
out
pop
lret
mov
daa
loop
out
scas
xchg
sbb
in
add
add
int3
data16
and
icebp
arpl
sbb
test
sbb
pop
subb
fcmovnb
or
adc
xor
mov
cltd
loope
hlt
fwait
push
xchg
xlat
nop
mov
fcomip
inc
repz
rcrb
sahf
imul
loopne
jb
push
movsl
pushf
imul
sub
jge
lods
es
stos
xchg
jmp
push
jbe
fstps
mov
push
std
imul
cmpsl
push
jne
lahf
scas
daa
mov
jns
jae
cwtl
sub
dec
lahf
mov
or
mov
popf
or
sete
pop
push
popa
inc
xchg
in
movsl
cmp
lahf
xchg
mov
cwtl
inc
add
mov
je
cwtl
mov
jmp
jne
dec
jge
jno
sahf
lret
xor
std
mov
inc
xchg
dec
inc
lahf
or
mov
sti
imul
jnp
loopne
pop
mov
stc
leave
and
sti
es
inc
pusha
inc
lock
mov
jae
pop
test
mov
xor
mov
adc
int3
pop
xor
lahf
jle
mov
push
pushf
rol
pop
sbb
or
mov
inc
shll
mov
xor
sbb
sbb
adc
pop
dec
push
jmp
sub
pop
adc
les
xor
test
pusha
stos
adc
into
sarl
push
inc
repnz
or
sub
push
xchg
sahf
lret
and
jb
jp
mov
aam
push
xor
mov
imul
test
mov
sub
pushl
mov
xor
adc
clc
xor
into
out
fimuls
js
or
daa
popf
je
js
sub
and
les
xchg
arpl
or
or
xlat
je
pop
lcall
xor
ret
adc
xchg
xchg
or
adcb
stc
movsl
icebp
xor
pop
pop
cmc
lahf
cmp
xchg
adc
cmp
inc
das
movsb
int
enter
pop
inc
cmp
test
or
mov
add
dec
sti
aaa
cld
incb
adc
pop
push
int3
lds
sub
popf
mov
jne
xor
adc
or
jae
jmp
fisubs
jmp
cwtl
jne
and
push
or
lahf
mov
cmpsb
stc
cmp
or
sbb
cmpsb
out
mov
popf
andb
xchg
or
pusha
dec
xchg
adc
or
mov
ljmp
and
mov
loopne
daa
and
push
mov
dec
bound
adc
imul
sbb
dec
jae
add
sbb
adc
cmpl
fwait
out
add
out
sbb
cmc
loopne
mov
sub
mov
enter
mov
es
mov
pop
nop
das
inc
fwait
push
and
cld
inc
inc
jb
xor
mov
and
pop
test
cs
jg
mov
xor
xor
movsb
loope
sub
leave
fimull
arpl
sar
scas
jnp
adc
dec
iret
testb
pop
ljmp
call
pop
cmp
sub
pop
or
push
push
or
dec
mov
mov
xlat
mov
iret
cmp
push
addb
imul
mov
and
js
mov
inc
xchg
pop
out
cltd
lock
sbb
outsl
pop
rolb
ljmp
inc
cld
adc
add
sub
push
xchg
pop
push
adc
outsb
mov
push
pop
push
or
lods
cmpsb
rcll
pop
mov
and
ljmp
lahf
jns
pop
fisttpll
push
mov
mov
aam
xchg
sbb
dec
push
xchg
pushf
push
mov
add
and
hlt
inc
adc
mov
adc
dec
in
ja
icebp
cli
push
test
aas
stos
jle
leave
fstpt
jecxz
test
notb
shlb
mov
sti
sub
mov
mov
lock
dec
fdivrs
out
and
rorb
pop
jb
nop
push
jg
das
test
pushf
jb
out
outsl
adc
inc
add
jg
sbb
dec
and
sbb
or
loop
adcl
pop
sarb
mov
pop
adc
xor
into
mov
cltd
jo
or
sbb
dec
adc
xchg
pop
add
repnz
push
xchg
ret
and
hlt
xchg
insb
cli
or
xchg
lds
jecxz
adc
jge
test
jns
jo
jb
push
sbb
dec
xchg
or
popf
icebp
cmp
push
enter
and
lea
mov
mov
xchg
mov
adc
sbb
into
sbb
rsm
jb
test
aas
lods
cmc
jns
add
out
mov
jge
push
das
mov
jnp
mov
leave
cwtl
and
adc
xor
xor
test
movl
xor
pop
mov
fnstenv
jo
mov
or
stos
push
push
fisubrs
inc
mov
xor
pop
or
sub
nop
cwtl
repz
lock
shll
int3
cwtl
push
xchg
dec
sbb
xchg
out
mov
xor
imul
stc
mov
cmp
pop
mov
mov
repz
fwait
inc
loope
cmp
fnsave
fidivl
push
les
lock
js
ss
leave
arpl
pop
aaa
daa
jp
sbb
cmp
cmpsb
jnp
cmp
repnz
sbb
cwtl
pop
cs
pusha
and
jns
sub
roll
jns
xor
aas
daa
loopne
fsubl
in
loop
dec
mov
lea
repnz
lahf
ljmp
subl
xchg
mov
rorl
pop
xchg
nop
imul
inc
mov
mov
xchg
lret
ljmp
pop
xchg
mov
add
xor
sub
insl
fsubrs
jns
mov
push
fmuls
adc
dec
ret
hlt
rcr
icebp
cmpl
mov
mov
mov
xchg
push
cmp
imul
fists
cwtl
fdivr
or
sub
adc
es
popl
xchg
xor
add
and
jmp
and
je
sub
push
pop
inc
push
es
rcll
push
hlt
jp
sti
mov
adc
ds
fcoms
jno
mov
mov
sbb
xor
mov
insl
daa
sbb
xchg
xor
mov
pop
push
lcall
int
and
icebp
adc
sbb
adc
lret
insb
jge
sub
mov
cs
jns
insl
cmpsl
das
cmp
cltd
icebp
mov
test
cmp
jne
stc
adc
in
std
jp
shrb
add
xchg
movsl
movsl
imul
stos
xor
rclb
cmp
fadds
fistpll
aas
lods
std
shl
push
push
lock
inc
mov
insl
int3
xlat
xchg
movsb
lds
mov
in
mov
dec
addr16
std
adc
jno
jo
push
mov
dec
cmp
scas
call
sbb
in
jnp
xchg
fisttpll
add
mov
mov
loope
test
sub
jl
test
sub
aas
sub
add
xchg
imul
push
and
ret
lret
fisttpll
movsl
in
inc
lret
shll
cmp
sbb
fsub
call
jo
dec
mov
ja
inc
push
lret
push
test
call
inc
cmp
sub
jo
xor
sahf
std
ds
sbb
and
xor
jl
rorb
adc
and
inc
mov
sti
ja
stos
in
sub
add
enter
pop
inc
adc
scas
popa
or
push
cs
cmp
pop
lock
mov
ss
sub
sub
rcl
or
bound
add
and
aam
and
pop
das
enter
xchg
cmpsl
and
push
in
nop
sub
into
stos
mov
fimull
stos
inc
aas
sub
repnz
lret
mov
xor
loop
fimull
lock
jmp
mov
push
pushf
out
mov
cmp
dec
sub
adc
aaa
insl
dec
add
add
stos
add
xchg
jo
sti
les
loop
loopne
outsb
xchg
mov
outsb
imul
into
addr16
cmp
int3
jbe
dec
jns
and
sub
adc
sbb
inc
dec
add
push
inc
nop
cmp
mov
inc
adc
lret
add
scas
addr16
pop
mov
popa
lret
mov
mov
pop
dec
push
mov
test
je
in
out
sar
mov
mov
pop
pop
out
aam
data16
inc
jo
into
lret
mov
movsl
test
frstor
mov
pop
adc
inc
xchg
mov
fs
jo
in
out
ja
movsl
and
lahf
xorps
mov
cmp
sahf
push
lods
sti
mov
andb
scas
dec
or
mov
xor
mov
mov
lcall
mov
push
adc
jg
dec
xor
inc
mov
jge
loop
push
mov
cld
cwtl
jmp
sbb
aas
leave
imul
cmp
imul
mov
rorb
and
je
loopne
aad
jge
mov
push
sbb
arpl
lock
pushf
pop
int
mov
sbb
xor
aaa
test
js
cmp
push
pop
xor
or
xor
and
test
xlat
adc
dec
mov
dec
or
aad
bound
out
in
mov
mov
dec
cmp
ret
inc
inc
ret
negb
or
xor
or
cmp
xor
mov
lock
int
sbb
mov
scas
leave
cmp
jg
sbb
negl
loopne
mov
adc
mov
nop
add
add
popa
adc
adc
inc
lds
in
jge
dec
adcl
arpl
lods
int
mov
sbb
mov
push
insb
jns
cltd
scas
adc
sub
cmp
cmp
and
dec
insb
mov
xchg
clc
pop
cmc
jns
push
into
cmp
fmull
stos
add
push
arpl
popa
jne
imul
add
fwait
mov
std
lods
adc
gs
cld
cmp
mov
ret
push
xchg
fldcw
xor
dec
add
pop
and
or
and
stos
aam
xor
pop
inc
and
adc
adc
imul
mov
push
mov
mov
mov
pop
out
or
daa
cmp
outsl
mov
xchg
in
inc
jne
mov
inc
in
mov
mov
pop
push
xchg
xchg
loope
rcrb
push
sub
or
xor
cmpsl
imul
adc
mov
fnstsw
mov
mov
pop
xchg
pusha
mov
pop
fs
aas
mov
adcl
inc
mov
xlat
addb
out
cmp
or
xchg
push
sbb
mov
xchg
rolb
adc
ss
lea
push
mov
mov
pop
mov
aas
leave
hlt
in
aam
in
hlt
jns
insb
lds
inc
lret
int
and
mov
shlb
sbb
mov
sbb
out
inc
jl
xor
stc
fsts
ret
push
push
popf
cmpsl
xor
arpl
pushf
aam
data16
mov
mov
shlb
andb
imul
in
mov
jge
mov
cltd
ret
lock
gs
add
add
cs
daa
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
cs
daa
add
add
add
add
mov
add
addb
add
cs
daa
add
add
add
add
add
add
enter
add
add
loopne
add
cs
daa
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
cs
daa
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
cs
daa
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
cs
daa
add
add
add
add
mov
add
addb
add
cs
daa
add
add
add
add
add
add
addb
add
add
cs
daa
add
add
add
add
add
add
cwtl
add
add
add
add
pop
daa
add
add
add
add
add
add
test
add
add
add
cs
daa
add
add
add
add
add
add
mov
add
add
pop
daa
add
add
add
add
add
add
enter
add
add
cs
daa
add
add
add
add
add
add
fadds
add
add
add
pop
daa
add
add
add
add
add
add
call
add
add
pop
daa
add
add
add
add
add
add
clc
add
add
add
add
pop
daa
add
add
add
add
add
add
or
add
cs
daa
add
add
add
add
add
add
sbb
add
cs
daa
add
add
add
add
add
add
sub
add
cs
daa
add
add
add
add
add
add
cmp
add
cs
daa
add
add
add
add
add
add
dec
add
add
cs
daa
add
add
add
add
add
add
pop
add
add
cs
daa
add
add
add
add
add
add
push
add
add
pop
daa
add
add
add
add
add
add
js
add
add
add
cs
daa
add
add
add
add
or
add
add
add
pop
daa
add
add
add
add
or
add
add
add
pop
daa
add
add
add
add
or
add
add
add
pop
daa
add
add
add
add
or
add
add
add
pop
daa
add
add
add
add
or
add
add
add
cs
daa
add
add
add
add
or
add
add
add
cs
daa
add
add
add
add
or
add
add
add
cs
daa
add
add
add
add
or
add
add
add
cs
daa
add
add
add
add
or
add
push
add
add
add
cs
daa
add
add
add
add
or
add
push
add
add
add
cs
daa
add
add
add
add
or
add
push
add
add
add
cs
daa
add
add
add
add
or
add
push
add
add
add
cs
daa
add
add
add
add
or
add
add
add
add
cs
daa
add
add
add
add
or
add
add
add
add
cs
daa
add
add
add
add
add
add
push
add
add
pop
daa
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
andb
call
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
shrb
add
add
add
sbb
add
add
in
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
pusha
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
xor
sub
jge
jno
add
push
stos
jp
pop
push
adc
cmp
frstor
sti
inc
bound
add
scas
pop
dec
xchg
jo
sbb
push
test
jb
lock
pushf
aaa
outsl
pop
dec
xor
pop
add
in
test
out
push
mov
repz
push
vmptrld
stos
lock
mov
pop
outsb
push
repnz
js
lods
insl
adc
jb
xchg
add
loop
mov
and
das
in
xchg
push
push
adc
xor
dec
xor
shlb
jb
lahf
fildl
inc
dec
pusha
je
add
in
jecxz
inc
les
sub
sti
cmp
faddl
xor
mov
iret
mov
fadds
sub
push
pop
fptan
xor
add
sub
inc
mov
in
mov
dec
mov
clc
rorl
xor
xchg
mov
out
pop
push
in
imul
inc
orl
fwait
movsb
sub
in
into
out
orl
imul
jae
stc
jbe,pt
mov
inc
int3
lock
ret
insl
dec
pop
jns
xor
bound
lods
pop
jg
push
lcall
in
int3
mov
cmp
and
call
adc
repnz
sti
or
fdiv
mov
adc
dec
or
mov
in
push
and
jb
mov
roll
jle
lods
rclb
inc
pusha
sub
mov
sbb
push
pop
std
out
insl
and
nop
jl
xchg
adc
pushf
in
ja
xchg
popa
adc
test
cmp
mov
cmp
shll
pop
lret
cmp
push
dec
sbb
mov
and
dec
rol
jecxz
xchg
arpl
dec
leave
ret
and
popa
jmp
in
lahf
in
into
into
sbb
mov
mov
outsb
inc
lcall
in
shl
mov
and
sbb
xchg
xlat
inc
or
dec
stos
mov
scas
insl
pop
jge
sbb
es
dec
insl
hlt
add
fdivl
lds
gs
in
ret
test
shll
mov
test
xorl
scas
mov
push
imulb
and
out
leave
pop
push
jbe
push
sbbl
scas
push
out
pop
fcomps
das
fisubrl
test
fmull
js
fmul
cwtl
inc
hlt
inc
test
xor
fisttpl
movl
pushf
rcll
pop
lret
mov
jnp
and
adc
cli
cltd
push
mov
mov
sbb
lea
outsl
dec
notb
mov
in
lahf
pop
add
add
stos
push
dec
scas
fidivrs
std
sbb
mov
lea
pop
sub
pusha
jb
xlat
stos
cmc
out
sar
xchg
or
aas
push
outsl
loope
xchg
movsb
lahf
popf
dec
xchg
fsubr
mov
in
ds
and
shll
imul
push
xchg
into
daa
jb
push
cmp
mov
xchg
fidivl
jg
call
add
sub
div
mov
lret
push
imul
push
shl
ljmp
fadds
add
hlt
ds
rorb
mov
ror
add
in
jl
dec
cmp
jmp
aaa
or
aas
insl
adc
ret
test
flds
out
jle
xorl
mov
jno
imul
loop
out
pop
shl
in
fcomi
and
dec
dec
addr16
pushf
mov
and
outsl
iret
and
es
punpcklwd
mov
dec
lcall
pop
xor
sbb
inc
xor
cmpsb
dec
sub
mov
pusha
scas
mov
das
mov
addl
orl
fimull
mov
fsubl
imul
push
jmp
cmp
lret
ljmp
inc
sub
mov
inc
outsl
ror
inc
adc
pop
xor
or
push
mov
inc
je
cwtl
cld
pop
and
xor
xchg
dec
push
sarb
fdivs
lret
mov
pop
add
adc
stos
jne
sub
add
or
cmp
shll
adc
xor
jmp
aaa
add
scas
cmp
outsl
cmpsb
jnp
adc
je
sub
fs
pushf
xor
add
pop
sub
pop
mov
mov
mov
rcrl
dec
fs
mov
iret
out
xchg
jmp
mov
sub
inc
adc
push
add
in
sbb
mov
xchg
cmc
adc
cmp
sub
dec
je
std
xchg
sbb
dec
sbb
xor
mov
add
sbb
inc
adc
lea
test
xorb
popa
cmp
ds
mov
fisubl
push
jns
std
jecxz
jle
adc
push
out
jmp
cwtl
in
xor
out
leave
xor
inc
rorl
xchg
or
test
inc
sbb
push
cli
mov
add
xor
mov
jmp
inc
and
add
stos
fs
aad
mov
xlat
arpl
movsb
nop
pop
jb
ret
xchg
fistps
popa
xchg
aaa
mov
lret
mov
push
or
lods
sub
sub
add
inc
inc
lods
aas
aaa
addr16
pop
xlat
ret
icebp
enter
ljmp
leave
jae
push
shl
mov
push
movsl
sub
dec
mov
icebp
outsb
stos
lock
seto
pop
out
mov
out
sub
shlb
pop
push
mov
shlb
shlb
rorb
bnd
data16
jl
fwait
and
sbb
pop
pop
xor
lea
popa
int3
jg
adc
les
fsubp
testl
cmc
jmp
adc
test
nop
movl
adc
stos
cmpsb
jnp
mov
mov
rol
xor
jne
push
call
pop
repnz
insl
mov
in
xchg
std
mov
cli
cmp
xlat
cwtl
je
xchg
push
pop
adc
mov
cli
add
mov
xor
xchg
mov
popf
inc
cltd
lea
les
test
div
icebp
outsb
dec
inc
mov
lods
sbb
push
shrl
pop
test
popa
test
push
sbb
cmp
out
mov
btc
in
lcall
mov
test
cmp
bound
pop
js
inc
xchg
cmp
loop
popf
sub
je
jp
jecxz
mov
push
push
lea
fnsave
jno
mov
jg
jnp
dec
pop
adc
mov
jmp
fadds
pop
popa
sbb
sar
dec
sub
mov
or
outsb
mov
mov
mov
in
and
push
lcall
ret
inc
or
jmp
and
jne
fidivrl
sti
stos
mov
cmpsl
jns
push
pop
jl
shll
cmpsl
in
jno
jno
ficoml
jne
dec
or
mov
test
dec
add
fnstcw
rorl
and
stos
push
sbb
mov
test
and
inc
insb
mov
dec
aas
jp
pop
fs
cwtl
pop
cmpsb
cmpsl
add
xor
ljmp
arpl
popf
pusha
push
inc
ret
mov
dec
fmuls
addl
loope
les
mov
jge
inc
sub
in
add
pop
mov
dec
std
add
mov
jne
popf
in
and
leave
test
push
addr16
mov
inc
sti
sub
mov
ret
test
cmpb
jecxz
popa
jmp
in
pushf
add
out
pop
dec
fisubl
inc
leave
in
jl
ret
jb
pop
xor
or
or
inc
cmp
in
adc
adc
cmp
jo
pop
mov
es
cmp
cltd
and
mov
in
negb
xchg
pop
or
mov
out
jbe
movsl
fstp
cli
mov
and
call
sti
mov
xlat
rclb
dec
xchg
push
xor
repnz
push
jge
sbbl
push
mov
pusha
sbb
push
cmp
and
call
leave
cld
mov
jle
push
add
xchg
inc
mov
add
fisttpl
push
inc
lcall
xchg
or
sub
pop
xor
cmp
mov
movsl
pop
jae
sub
xor
sete
popf
loope
repnz
push
shll
cmpsb
pop
ja
xor
inc
inc
jle
xor
jnp,pt
mov
jo
adc
outsb
lcall
aas
sub
dec
cld
jmp
ja
or
les
mov
insl
shll
pushf
xchg
lret
ret
fisttpll
push
sahf
das
outsl
je
addr16
lods
pop
sbb
clc
dec
dec
push
pshufw
xor
sbb
aam
ret
inc
aaa
xchg
pop
rorb
sub
mov
mov
sbb
sbb
cmc
mov
pop
or
in
outsb
push
mov
js
fs
aaa
mull
sbb
add
cmpb
out
cld
ud1
and
loop
xlat
pop
mov
push
clc
gs
pop
js
mov
fs
push
iret
xor
sub
sub
loope
adc
sub
push
lret
and
lock
ss
sub
cmp
cmp
mov
sahf
xchg
pusha
out
jne
adc
mov
aad
add
cli
mov
lahf
pop
nop
fcomps
cld
sub
lcall
fdivrs
cli
pop
mov
or
mov
mov
inc
jg
adc
push
arpl
and
push
push
lret
shlb
mov
jb
and
roll
xor
sbb
pop
out
jecxz
inc
and
test
fwait
pop
lds
cs
adc
mov
push
scas
mov
movsl
jecxz
mov
out
hlt
movsb
js
push
fs
or
cli
popa
push
xchg
sub
aaa
or
cmp
fwait
les
jno
idiv
icebp
in
lds
cmp
mov
clc
mov
cmp
mov
lret
js
sub
test
and
mov
cmp
nop
mov
inc
push
arpl
xchg
inc
jb
pop
jle
iret
and
xor
fnstcw
dec
xor
sub
jecxz
or
cmc
xchg
add
movsl
jo
push
pop
sub
or
pop
das
sbb
ja
mov
stos
mov
adc
rorl
fidivrl
rcrl
jle
and
xor
sahf
jo
xchg
movsb
lcall
out
repz
js
ret
sbb
cmc
sub
jle
hlt
rcrb
xchg
cmp
imul
and
test
mov
scas
dec
int
lea
sbb
movsl
int3
adc
repnz
ror
pop
mov
imul
jmp
push
or
cltd
inc
cmp
mov
shr
movsb
inc
mov
lods
cmp
cmpsl
and
xlat
int
out
lock
xchg
jnp
add
xlat
sub
fldcw
and
loop
leave
and
shufps
cmp
into
ja
and
cli
cmp
mov
jl
test
in
mov
ja
mov
add
in
cltd
arpl
and
inc
dec
fnstenv
cli
mov
push
adc
jb
adc
lcall
jle
jb
dec
adc
dec
mov
loop
jmp
leave
push
aas
ud0
popa
out
dec
xchg
and
aas
sbb
push
js
ret
pushf
divps
add
mov
imul
pop
lea
lods
and
add
jle
jl
stos
sbb
repnz
bound
mov
clc
mov
es
stos
sbb
testl
mov
xchg
jbe
cmc
mov
movsb
nop
add
push
push
adc
jo
mov
mov
mov
pop
out
pop
push
mov
rep
mov
ja,pt
and
leave
rcrl
div
mov
pop
sub
cmp
aas
dec
sub
aaa
movsl
aaa
movsb
inc
sbb
insl
add
push
mov
push
xchg
sbbb
pop
das
cmpsb
lock
mov
and
mov
lock
pop
pop
les
xchg
stos
pop
pop
in
push
jle,pt
adc
in
mov
sbb
in
inc
bound
mov
xor
xor
iret
sti
filds
fsubr
xor
pop
pop
jmp
xchg
enter
insl
push
into
das
out
fwait
jge
and
subb
loopne
jl
mov
insl
inc
cmpb
jmp
sti
mov
jmp
sbb
data16
push
adcb
add
jle
or
xor
cmp
scas
je
scas
nop
inc
in
cmpsl
dec
arpl
pushl
jecxz
jle
inc
cs
xchg
or
inc
stos
ret
sbb
push
int3
imul
test
loop
cmp
iret
test
ljmp
jns
sahf
int
dec
stc
arpl
inc
fsts
popa
jb
pop
dec
loop
push
mov
inc
dec
arpl
fnsave
icebp
aad
sti
add
xlat
leave
fdivl
pop
popf
inc
popa
push
fidivrs
repz
roll
jle
pop
adc
repnz
sub
rcll
lret
jo
cltd
jg
and
mov
in
rorl
sahf
xor
mov
lea
xchg
test
insl
mov
adc
pop
add
mov
mov
push
rolb
jge
xchg
adcl
fdivs
ficoms
or
and
inc
arpl
loop
mov
jne
push
push
scas
adcb
call
inc
inc
push
xchg
add
sub
mov
xor
or
fists
ss
mulb
pusha
dec
in
clc
mov
push
roll
add
pop
sahf
fs
insb
cmp
je
lock
add
pusha
data16
push
adc
mov
jo
es
loop
jle
xor
rolb
leave
mov
mov
xlat
cld
and
or
adc
sbb
cli
je
mov
mov
add
notl
shrb
jne
cwtl
push
int3
rorb
inc
loop
aas
push
fimuls
mov
lcall
sbb
je
sub
aaa
xchg
pop
jecxz
dec
sbb
daa
pop
mov
stc
inc
add
adc
rclb
in
aas
iret
jbe
jbe
push
mov
sub
xchg
seto
jecxz
inc
pmulhuw
in
add
sarb
pop
ja
cs
add
cmp
aad
jnp
int
push
or
cld
mov
rol
xchg
mov
dec
dec
mov
pop
into
mov
sbb
adc
popl
and
cmp
int3
ss
jl
dec
aaa
xor
in
sahf
lcall
sbb
orl
cmp
xchg
or
lea
imul
and
andb
pop
fcoml
out
or
add
repnz
movsb
cmp
fucomip
and
sarl
xor
jp
xchg
xchg
jl
pop
xorb
lock
int
lea
roll
icebp
mov
pushf
push
add
loopne
adc
mov
das
sbb
jecxz
shll
dec
mov
xlat
push
mov
out
das
xchg
xchg
push
push
xchg
cmp
mov
inc
and
pop
mov
sbb
icebp
pop
push
bnd
pop
sub
xchg
mov
add
mov
loopne
dec
sub
mov
cmc
dec
pop
lock
jg
add
pop
movsl
inc
insl
imul
pop
scas
sub
ljmp
packsswb
push
stc
aas
push
js
xor
jnp
jb
cmpsb
sar
cmp
add
adc
pop
or
or
mov
jae
arpl
add
addr16
dec
setns
ret
jg
fidivrs
inc
cmpsb
sar
rclb
insb
lcall
fucomip
outsl
shl
mov
negb
andb
mov
popa
les
push
or
and
and
xchg
jne
mov
push
jle
sbb
ljmp
dec
cmpsb
mov
jle
cmpsl
sbb
jbe
push
push
jge
lret
jecxz
repz
fs
imul
sbb
sbb
in
push
dec
cld
sub
in
or
notl
js
insl
insl
add
push
sahf
jns
pop
aad
stos
add
mov
mov
and
push
cmp
push
je
mov
pop
rcrb
pop
sub
into
fistl
lcall
dec
push
xorb
sub
call
jo
jb
jp
pop
add
fldt
lret
add
xor
sbb
cmc
sti
dec
fistpl
xchg
push
vpmovmskb
fs
icebp
nop
adc
lret
mov
ret
aam
pop
jbe
mov
inc
out
lods
into
int3
push
push
std
mov
fists
sub
push
fstpt
std
inc
lahf
leave
fnstsw
or
test
sub
movsb
push
sbb
sub
mov
lret
jp
pop
mov
mov
rcrl
lock
mov
movsb
push
lcall
sbb
lcall
xor
adc
insb
inc
and
aaa
xchg
push
adc
add
pop
xor
leave
outsl
xor
or
insl
cmovae
or
xchg
inc
repz
adc
mov
xchg
cmpl
hlt
inc
lods
fildll
addr16
mov
push
sub
outsl
sub
jo
pop
push
sarl
mov
movl
rclb
fadds
jg
add
add
jbe
sbb
test
push
dec
push
mov
ss
xor
pop
cmpsl
jmp
mov
mov
sub
xchg
mov
pop
test
cmpsb
dec
mov
inc
sbb
cli
inc
ja
xchg
xchg
pop
insb
test
out
scas
adc
mov
sub
xchg
push
mov
jo
mov
data16
sahf
sarl
inc
dec
insl
push
es
mov
nop
pop
and
mov
jb
jl
lcall
mov
nop
pop
adc
mov
jle
xchg
mov
pop
sbb
dec
adc
or
sub
lods
xor
les
les
sbb
arpl
gs
pusha
mov
in
push
push
xchg
loope
sbb
in
jp
cmpsb
xor
rcr
xor
fwait
aaa
push
lahf
add
fisttpl
jmp
hlt
mov
or
sub
xor
push
repnz
int
inc
cmp
xchg
mov
add
popa
scas
lods
push
out
int3
mov
clc
and
mov
or
insl
mov
sar
scas
stc
adc
xchg
fwait
iret
int
enter
push
jg
popf
or
fnstsw
sbb
sti
cld
xchg
xchg
lcall
cltd
lods
mov
pop
out
lret
jmp
jnp
loope
gs
pop
lock
xchg
sub
lea
cmpsl
aas
xchg
xor
mov
mov
mov
add
inc
call
push
movsb
xchg
ror
fldcw
mov
jns
dec
out
xchg
arpl
rcrl
lock
jg
cmp
adc
pop
xchg
lds
scas
lahf
stos
cmp
repnz
mov
xor
xchg
ss
dec
clc
pop
jle
cmp
dec
sbb
pusha
or
arpl
pushf
movsb
xlat
setno
xchg
outsl
jae
lret
mov
lods
add
jle
pushf
inc
fwait
xor
in
pop
loopne
shl
lock
mov
mov
data16
push
movsb
movsb
pop
fidivl
or
mov
les
fxch
cmpl
pop
inc
xchg
cld
leave
je,pn
fbld
xchg
pop
ss
xor
sbb
mov
sbb
lods
sarb
in
mov
and
pushf
das
int3
and
lahf
pop
leave
test
addr16
jo
clc
mov
movsb
cs
and
and
iret
into
adc
add
and
lahf
xchg
fidivs
out
jl
mov
das
cmpl
cmp
mov
adc
sbb
xchg
dec
dec
ror
or
sahf
aaa
add
icebp
adcb
icebp
ret
stc
xchg
aaa
mov
aaa
adc
stos
or
shlb
or
ret
imul
push
mov
mov
cwtl
js
in
lods
or
ret
pushf
jnp
mov
scas
add
imul
xchg
sub
dec
ljmp
outsb
dec
loopne
adc
cmp
mov
dec
out
sti
push
call
hlt
xor
pop
daa
pop
cmp
aam
and
aad
jnp
lea
je
enter
sbb
fcmovbe
pop
lds
mov
lret
adc
or
pop
jne
mov
inc
adc
cmp
adc
sub
pop
repz
xor
pop
idivb
xor
pop
mov
xor
stc
add
jbe
cmpb
xchg
pushf
loope
mov
ret
lea
dec
sub
mov
xchg
lds
and
mov
sbb
sbb
int
sahf
scas
xor
insl
mov
out
mov
loopne
cli
mov
add
mov
bound
cmp
dec
lods
push
jg
mov
divl
fcoms
movsb
sbb
shlb
dec
or
add
push
xchg
sarl
adc
inc
mov
jo
or
arpl
sub
cmp
pop
test
lods
js
fimuls
or
mov
fildl
shrb
aaa
mov
xchg
mov
adc
daa
push
mov
push
scas
mov
mov
push
cmp
gs
jo
xchg
les
cld
mov
int3
decl
add
lea
xchg
cmp
ljmp
sub
sti
xor
or
pop
or
enter
aas
outsb
inc
iret
dec
pop
lods
movsb
sbb
cltd
inc
jp
cmp
pusha
cltd
cmc
sub
into
data16
outsl
sub
pusha
pusha
lods
out
sbbb
scas
sub
jo
xor
sub
lcall
lret
and
mov
daa
cltd
xchg
push
pop
jge
mov
push
xor
js
add
and
xor
sbb
ds
mov
jo
dec
adc
icebp
xchg
and
stos
mov
push
ret
sub
test
cmpsb
mov
mov
mov
dec
xchg
in
out
mov
inc
cltd
sbb
loopne
xchg
push
mov
fimuls
adc
aaa
inc
das
dec
dec
cmp
prefetchw
or
mov
popf
test
or
inc
xchg
cwtl
loope
sub
dec
pushf
hlt
pop
push
inc
or
jb
addb
mov
pop
mov
mov
ja
mov
das
outsl
xchg
leave
daa
icebp
mov
fbld
inc
jb
lret
or
lock
out
mov
sbb
inc
push
imul
outsb
loop
add
adc
pushf
scas
mov
nop
decl
cmp
add
andl
stc
fsub
push
lcall
repz
cmpsb
dec
inc
add
hlt
pop
push
decl
ja
mov
xchg
push
cmpsl
mov
adc
jge
lret
xchg
divl
out
sub
mov
ficompl
jg
sbb
jbe
jg
xlat
fstps
jns
and
mov
cli
pushf
mov
popf
xchg
lahf
bound
xchg
cmpsb
insl
xchg
in
jb
mov
inc
dec
das
and
jle
lcall
xor
dec
mov
ss
jnp
sbb
mov
rcrb
cmp
and
adc
cltd
add
sbb
jnp
xchg
data16
ds
push
cmpsl
ja
add
jns
aas
inc
ds
sbb
adc
and
cmc
sub
or
daa
repz
outsl
mov
xchg
pop
jmp
inc
mov
dec
add
call
test
mov
mov
xor
pop
sub
cmp
js
push
loop
adc
pop
mov
pop
cmpsl
dec
sub
mov
std
add
testl
aad
sbb
jmp
sbb
rclb
lcall
and
dec
cltd
jo
xchg
or
dec
sbb
xchg
insl
inc
iret
sbb
dec
lds
mov
push
loopne
sub
rcl
xchg
jne
jecxz
inc
sub
push
xor
xlat
and
mov
or
mov
pushf
in
mov
dec
outsb
push
repnz
popa
jge
inc
mov
or
jecxz
inc
cmp
sbb
and
movsl
js
add
mov
sub
push
ljmp
jp
dec
fidivrs
mov
xchg
add
nop
mov
imul
pop
scas
cld
mov
mov
sahf
aaa
outsl
enter
jnp
divb
mov
int3
mov
outsl
stos
or
test
lret
cmpsb
jb
imul
shlb
std
repnz
cltd
out
into
jl
loopne
cltd
adcb
xlat
fwait
push
push
das
or
mov
add
aaa
dec
mov
je
cwtl
sub
push
pop
jae
mov
dec
int
sub
jnp
push
adc
andl
loopne
cld
test
cmp
aam
and
fiaddl
cld
mov
bound
repz
xlat
int3
ja
mov
imul
int3
sbb
mov
push
aam
iret
test
aad
dec
pop
mov
mov
cli
decl
cmp
jae
leave
test
xor
jnp
movsl
insl
push
add
rcr
inc
imul
adc
test
sar
insl
in
and
cmp
and
add
inc
jb
push
mov
dec
jg
xchg
das
es
mov
mov
pop
out
push
jecxz
es
int3
sbb
cmp
and
jmp
and
movsb
sub
push
movsb
xchg
int
xchg
mov
push
and
pop
sub
sbb
shl
or
fistps
loop
dec
inc
shll
aas
jle
repz
es
jecxz
lret
daa
call
mov
pop
mov
bound
xchg
cli
mov
insl
fwait
jmp
outsl
aam
pop
loopne
xlat
pop
enter
push
dec
jle
mov
aad
pop
shlb
or
mov
push
inc
ss
orb
idivl
adc
in
int3
dec
fwait
add
in
fcomps
or
arpl
push
lods
push
jmp
cmp
mov
sbb
push
or
add
sti
mov
notl
aaa
bnd
aam
cwtd
fs
lock
andl
fdivrs
popf
inc
fmulp
in
fcomi
push
call
enter
ss
movsl
inc
mov
inc
dec
xchg
fs
shl
xchg
lahf
add
mov
or
xor
mov
dec
notl
sub
addb
je
push
sbb
lret
rclb
push
fisubrl
les
lcall
sahf
ss
scas
mov
nop
sub
adc
dec
je
mov
data16
jmp
push
lods
out
mov
mov
je
lcall
ljmp
sbb
xor
subb
sub
cmp
jl
push
sbb
data16
push
out
mov
inc
lods
inc
outsl
xchg
mov
repnz
outsl
mov
sub
movsl
orl
jne
cmpsb
jae
cmpsl
lods
pop
int3
xchg
insb
int
add
mov
dec
push
xor
cmp
out
insl
scas
leave
and
imulb
shl
jo
stos
scas
int
mov
scas
xchg
scas
push
push
cmp
pushw
xor
nop
fnstenv
fimuls
arpl
enter
push
cmp
test
adc
inc
jo
push
es
ret
sbb
xchg
xchg
sbb
repnz
fildll
sti
call
inc
ds
lods
aas
fcmovne
xchg
call
inc
mov
push
ret
fisttpl
mov
sub
fnstsw
sub
cmpsb
in
push
rcrl
arpl
dec
push
mov
sub
repnz
adc
jne
lods
or
xchg
out
jne
mov
mov
das
loopne
dec
je
xlat
cmp
in
stc
addr16
mov
icebp
iret
mov
das
jns
or
adc
mov
xor
js
jecxz
xor
shr
or
jge
mov
loop
push
iret
jnp
lods
movsl
xor
test
jb
cmp
xchg
pop
out
pop
cmpsl
add
or
mov
inc
pop
or
push
ds
mov
cli
xor
jbe
aam
push
xlat
inc
xchg
fwait
imul
dec
sbb
daa
push
cmp
enter
pop
pop
xchg
aaa
mov
add
push
jo
inc
push
jne
insb
rorl
xor
push
sbb
mov
aad
test
xor
pushf
dec
xor
or
cmp
rclb
inc
mov
test
in
mov
mov
sbb
data16
jo
or
dec
negl
shl
cmp
movsb
xchg
cmp
jnp
xchg
jecxz
ss
shrl
mov
mov
icebp
into
xchg
jno
popf
stc
aad
daa
push
call
mov
ss
jnp
mov
das
aaa
mov
lret
mov
push
inc
or
mov
pop
mov
jp
faddp
mov
std
sti
out
and
sbb
mov
push
mov
push
rcr
cli
imull
je
jns
mov
push
jp
in
lret
hlt
add
push
push
or
pop
sub
sbb
mov
es
aam
mov
mov
jbe
xor
push
cmpsl
dec
xor
nop
and
mov
and
leave
fsubr
mov
mov
push
arpl
pop
cmpsb
jecxz
mov
and
adc
sub
cmp
pop
inc
lret
aam
xlat
ja
roll
mov
adc
dec
lock
sbb
and
cli
or
xchg
sub
int
mov
or
bound
lock
sti
and
xchg
adc
push
cmpl
sub
repz
inc
fs
sbb
adc
jno
loope
fldt
fnstenv
lcall
jg
icebp
mov
mov
aaa
rclb
pop
xlat
add
lahf
clc
test
adc
mov
ret
push
add
pushf
mov
insb
and
or
mov
sub
popf
cmp
arpl
pop
xor
fisubs
sbb
dec
dec
or
sbb
loopne
mov
dec
add
hlt
or
push
dec
push
sti
mov
sub
pop
outsl
mov
and
xor
lods
mov
inc
getsec
mov
push
mov
pop
test
add
mov
icebp
jno
lcall
sarl
sub
lods
sahf
mov
push
arpl
cwtl
movsl
cmpsl
insl
cmp
push
outsl
and
cmpsb
lods
js
and
mov
sbb
repnz
jp
sbb
dec
mov
jo
in
and
notl
std
and
pop
std
out
jae
pop
test
stos
xchg
xchg
bound
xchg
cmp
imul
push
call
cmp
clc
insb
call
outsl
mov
push
sti
push
or
sbb
outsl
xor
pop
or
push
and
outsb
xbegin
inc
cmpsl
mov
jo
mov
shr
jmp
adc
xlat
push
ss
lcall
add
enter
push
mov
out
and
sub
shr
mov
sbb
hlt
push
cltd
rorl
add
mov
or
push
lcall
mov
aas
sub
jge
test
ret
mov
pop
fs
in
sub
inc
lahf
mov
imul
js
jmp
and
fstpl
jo
cmpsb
leave
nop
shrl
push
lds
jnp
insl
fcoml
jae
push
or
nop
pop
enter
push
sbb
ss
sbb
mov
inc
and
icebp
mov
inc
sbb
adc
cmp
fstps
imul
cltd
and
scas
xchg
jecxz
jo
dec
dec
xchg
lods
stc
and
sbb
call
sub
ja
push
loop
pop
lea
nop
es
jecxz
adc
es
imul
or
or
or
test
mov
jecxz
mov
mov
fmull
mov
or
or
sbb
push
cmp
sub
jl
sub
stc
mov
mov
xlat
inc
add
pop
sub
pop
imul
imul
cmp
pop
repnz
lock
or
inc
inc
mov
jle
rcrl
cmp
ret
mov
js
mov
mov
cmp
rolb
xchg
hlt
jbe
bound
inc
movb
cld
fwait
outsb
fdivrs
aad
inc
sub
fldcw
mov
pop
jmp
bswap
aad
and
sub
dec
push
fwait
adc
out
popa
xchg
inc
je
mov
pop
aam
sbb
mov
imul
jbe
les
clc
push
or
arpl
outsl
inc
mov
adc
shll
sbb
pop
xchg
pop
insb
les
lods
jl
add
add
jnp
sbb
jae
fbld
sub
jp
movsl
in
idivl
outsl
popa
push
jp
sub
push
pop
jno
aam
stc
stos
dec
inc
mov
fs
jl
sub
js
mov
or
xor
inc
sbb
push
lcall
and
mov
fcmovbe
jo
dec
cmpsb
dec
mov
mov
jp
mov
or
push
int
stos
out
jb
sarl
push
jb
add
mov
or
push
loopne
in
ds
outsl
mov
pop
pop
adc
outsl
sub
jp
mov
fmuls
sbb
mov
mov
je
out
pop
cmpsb
arpl
iret
fildll
cmpl
mov
add
mov
mov
cs
sub
push
mov
addr16
xchg
inc
mov
jp
sub
test
or
mov
insb
mov
dec
stos
xor
sub
leave
lret
call
icebp
ljmp
in
xor
jnp
imul
pop
jns
out
xchg
icebp
inc
push
divl
jmp
sub
iret
stc
popa
fcomps
into
aad
lcall
lods
bound
fwait
or
jl
ljmp
xchg
push
mov
ret
cld
ficoms
aaa
xchg
dec
and
xchg
pop
mov
xor
stos
ja
inc
call
out
xor
sbbl
int3
dec
jle
pop
ja
ljmp
sbbl
je
out
pop
sbb
ret
xor
les
int3
sbb
and
ficomps
out
mov
dec
loop
xchg
aas
sub
cmp
loop
es
inc
addb
aam
sbb
sub
jae
cwtl
add
int3
mov
gs
enter
aaa
stos
out
xchg
push
sbb
mov
sbb
sub
xor
cwtl
lds
mov
in
pusha
add
test
divb
push
mov
sbb
insb
in
aad
xor
mov
sub
repz
in
arpl
push
mov
lods
inc
push
push
test
out
dec
in
shll
xchg
push
or
hlt
aaa
adc
jno
sub
ret
add
jne
adc
leave
or
aam
add
jmp
mov
stos
lods
gs
adc
cmc
push
test
aad
xchg
push
inc
mov
jecxz
std
push
in
rcll
xorb
aaa
test
cli
shl
sbb
mov
mov
cmp
sbb
mov
jae
push
or
mov
pop
bound
rcll
shlb
jmp
mov
jo
mov
jae
push
inc
sbb
outsl
jo
xlat
mov
or
inc
mov
cwtl
cli
and
scas
mov
mov
sti
push
fisubl
repz
stos
dec
xchg
xchg
shrl
subb
pop
xchg
test
in
sarl
mov
les
out
inc
add
sbb
clc
jl
fildll
cmpsb
shrb
daa
sub
lahf
mov
mov
dec
or
addr16
adc
mov
outsb
inc
sub
in
add
mov
rorl
sub
pop
xor
or
mov
subl
hlt
adc
xchg
out
mov
movb
mov
add
pop
jbe
repnz
mov
push
movsl
xor
push
adc
cmp
shl
pop
cmp
mov
xor
or
test
test
cmp
dec
inc
mov
les
lods
test
stc
fdivr
jnp
data16
and
inc
mov
mov
sahf
push
xchg
adc
dec
lods
cmp
iret
mov
dec
mov
sbb
push
test
dec
push
scas
out
add
je
int3
jae
push
loop
sar
jb
and
sbb
jnp
js
push
imul
sbb
lret
mov
mov
imul
jnp
jl
lods
and
pop
je
sub
push
mov
xchg
adc
inc
ja
fists
scas
jmp
sub
cmpsl
mov
out
push
divl
adc
gs
adc
in
sti
pop
in
aad
stos
adc
hlt
subl
adcb
and
pusha
repz
jnp
ret
pop
jnp
inc
sbb
cmpsb
sub
aas
pop
mov
repz
lea
rolb
xor
cmp
cmp
push
jg
fldt
int3
ljmp
pop
mov
inc
hlt
inc
xchg
cmp
pop
sti
jl,pn
sbb
ret
or
mov
je
movsb
imul
leave
test
jge
test
imul
inc
push
popa
mov
lret
add
cmp
pop
sub
arpl
mov
push
jecxz
fcoml
pop
loopne
mov
jno
lock
stc
dec
mov
scas
fcomps
pop
ret
rolb
cwtl
push
jecxz
int
xchg
sbb
fimuls
push
fwait
add
xchg
cmp
inc
int3
inc
test
sub
lea
wbinvd
decl
jmp
jnp
insl
xchg
push
pop
aas
push
add
insb
mov
jge
adc
inc
inc
and
xchg
jo
mov
cmp
adc
mov
jne
push
dec
jecxz
ficoml
dec
popf
mov
fs
test
int
sub
fistpl
gs
sar
jg
add
mov
mov
or
popf
adc
push
hlt
fidivs
pop
popa
in
and
mov
stos
and
xchg
sub
mov
jp
push
je
mov
inc
add
push
cmp
ja
mov
int3
out
jo
lahf
in
mov
jg
lods
push
setno
loope
pop
dec
lcall
sbb
xlat
divl
lds
pop
cmp
xchg
repz
xor
xor
sub
call
and
inc
mov
xchg
mov
popf
test
jbe
jecxz
jo
imul
ljmp
test
bound
in
iret
push
mov
popa
cmpsl
mov
arpl
inc
enter
cmp
xchg
pop
and
movsl
insl
cltd
adc
push
push
fs
sbb
or
mov
dec
jnp
mov
repz
nop
mov
cmp
in
xchg
inc
push
ja
mov
cmc
sbb
cmpsb
sbb
leave
jbe
popf
rorl
fsts
addl
and
call
sbb
xor
data16
cmp
xor
jecxz
fs
mov
dec
aaa
stos
sarl
adc
sub
cmc
adc
add
mov
mov
sbb
dec
mov
jb
push
xchg
push
lods
sub
sbb
lahf
ret
cwtl
or
lea
aas
lcall
jle
bound
dec
dec
pop
mov
or
hlt
mov
inc
inc
mov
sub
aaa
sbb
mov
and
pop
fnstsw
xchg
decl
lcall
xor
jbe
push
push
pop
cmp
mov
popf
cmpsl
xchg
push
bound
lods
mov
stc
ret
dec
arpl
stc
decl
ljmp
mov
fcomps
and
sarb
pushf
adc
jl
pop
inc
sub
xor
call
cmpsl
ret
stos
out
or
sub
sub
arpl
push
cli
mov
sbb
push
cmp
sbb
inc
lcall
cmp
sub
mov
mov
insl
ficompl
cmpsl
or
leave
insl
leave
inc
pop
push
pop
sbb
ret
dec
mov
lahf
into
mov
pop
mov
push
xchg
in
mov
imul
adc
jl
adcb
cld
testb
int3
sarl
ljmp
xor
adc
daa
pusha
fisubrs
lods
add
jbe
psrlq
sub
imul
xchg
add
cmc
jmp
mov
lock
enter
leave
adc
les
sbb
xchg
pusha
shlb
sbb
inc
daa
mov
inc
inc
mov
cmp
dec
shll
dec
inc
shrl
js
ret
push
hlt
bound
popa
idivl
faddp
jmp
fistps
adc
mov
mov
add
sbb
js
mov
mov
sbbb
pop
add
rol
fiaddl
push
jno
jecxz
js
insb
and
fsubl
loope
mov
dec
idivl
nop
push
sub
pop
popf
lcall
sub
das
bound
loopne
add
push
jno
stos
push
jbe
int
xor
and
jb
jp
jl
mov
push
cmpsl
jns
pop
scas
out
movsl
and
test
cwtl
lds
fucom
out
mov
sub
mov
rep
mov
ja
cmp
cmp
fnstcw
popl
and
lods
loop
das
icebp
js
mov
lcall
test
fldt
sbb
stos
outsl
aas
repnz
ret
arpl
mov
lods
cltd
mov
add
addr16
insb
mov
jae
in
sub
cmp
or
lret
push
pop
stos
fucomi
dec
xor
inc
push
test
fldt
push
sbb
in
add
xchg
aaa
fwait
std
mov
pop
rolb
ds
jl
mov
in
pop
cmp
hlt
cmpsb
inc
xchg
fcmove
cmc
ljmp
movsb
xchg
push
mov
ret
mov
mov
insl
xor
les
mov
cmpsl
enter
in
lods
push
pop
mov
push
sbb
hlt
mov
push
or
insl
sarb
pop
mov
enter
and
mov
ror
inc
in
inc
rol
test
ja
fildll
aad
sahf
daa
xchg
jge
inc
fmull
push
add
mov
adc
push
xlat
dec
xlat
in
push
mov
dec
outsl
and
adc
mov
adc
test
outsb
data16
sbb
push
je
lret
rol
inc
sub
mov
into
cmp
fcoms
pop
movsl
or
orb
sahf
loope
pop
lods
cmp
je
jno
sub
pop
fiadds
arpl
mov
jne
sub
cmp
inc
popa
cltd
xor
jno
iret
insb
cmp
mov
scas
out
loope
insb
insl
sbb
and
adc
aad
arpl
mov
out
sbb
cs
mov
rorb
cmpsl
mov
les
fwait
and
in
shlb
add
in
test
sub
pop
push
push
inc
jle
ja
out
jmp
int
jns
sub
into
push
or
jb
or
push
ss
les
push
xchg
ds
jns
sub
cmp
dec
nop
mov
lods
sub
aad
pop
mov
xor
inc
out
jae
bound
insl
dec
iret
mov
mov
cmpb
rolb
xor
jbe
je
lods
pop
aas
xchg
testb
jo
dec
jb
mov
sub
and
fwait
sub
out
mov
call
dec
mov
pop
inc
movsl
in
or
push
pop
push
mov
adc
sti
add
pop
inc
out
xchg
lods
sbb
mov
leave
rcrl
mov
sub
adc
stos
and
inc
out
pop
fsts
test
adc
adc
hlt
push
push
sar
xchg
jmp
lea
cmpsb
dec
dec
outsb
ds
cmc
dec
inc
adc
mov
push
lods
sahf
mov
fcmove
mov
mov
pop
jl
push
or
push
jno
loopne
mov
shlb
mov
cs
int3
scas
jae
shrl
mov
cmc
lret
push
in
cmp
cmpsb
daa
mov
arpl
sbb
movsl
clc
and
js
mull
xchg
inc
das
pop
out
xchg
subl
add
mov
add
enter
lea
adc
pop
sahf
jbe
jbe
mov
cmpsb
in
sub
sahf
push
xor
dec
mov
int
test
outsb
sub
test
andl
rolb
call
sub
and
hlt
pop
pop
das
pop
sbb
lret
loope
sbb
pusha
jns
sbb
test
lret
pop
xchg
cmp
addr16
lret
inc
mov
push
fnstenv
xchg
push
insl
inc
movsb
dec
mov
lods
dec
pop
sbb
push
xchg
loope
test
pop
sub
lock
mov
jno
jns
lods
shlb
push
das
pop
inc
xorb
ljmp
stos
xor
dec
popf
dec
arpl
push
and
push
jbe
sahf
cli
cmpl
xor
rcll
rcrb
lahf
fsubl
or
call
lcall
cli
sahf
mov
dec
jge
push
mov
ss
clc
xor
stos
out
xchg
push
mov
jg
outsb
cmpsb
and
sar
in
test
insl
or
pusha
cmp
sbb
jb
notb
outsl
dec
imul
xor
cmc
ja
mov
imul
mov
inc
push
cs
test
and
insb
stc
mov
lret
mov
mov
pusha
mov
imul
lret
ljmp
add
cmp
clc
in
jno
sub
xlat
movsl
shll
add
hlt
cmp
popf
cmpsl
in
jbe
loop
jg
dec
pop
call
sbbb
pop
lahf
movsb
xor
jecxz
hlt
mov
fsubs
or
rolb
test
add
je
jle
je
or
push
xor
xchg
or
das
movsb
mov
jno
push
mov
negb
lret
ljmp
xor
sbb
popa
das
mov
lea
mov
inc
jge
test
sbb
sub
aam
add
scas
cmp
mov
cli
xchg
sahf
adc
loop
movsl
pop
scas
sti
and
add
incb
mov
and
pop
dec
sub
inc
sub
mov
iret
repnz
jo
push
icebp
jo
outsl
aas
rcr
xlat
mov
sub
sahf
jecxz
cmp
pop
dec
fwait
loope,pt
mov
pushf
dec
lret
inc
push
popa
aas
leave
into
adc
jmp
dec
cltd
lcall
pop
mov
sbb
lods
adc
js
xlat
jae
sbb
jg
inc
inc
rclb
pusha
stos
fsubs
in
stos
cs
bound
popa
mov
mov
into
sub
sub
xchg
out
or
dec
sbb
cmp
xor
pushf
ds
push
popa
sti
dec
xchg
dec
mov
mov
divl
cld
sbb
mov
aam
gs
rcrb
xcrypt-cfb
cmpsl
loop
pop
jl
sti
rcll
fucom
and
aaa
fisttps
arpl
xchg
or
lods
sarb
mov
sbb
push
mov
ljmp
in
jp
orb
setl
xor
xchg
mov
loop
inc
aaa
movsl
cwtl
sti
cs
movsb
mov
dec
add
int3
test
push
and
xor
ret
out
insb
xlat
mov
pop
sub
push
fwait
xchg
or
movsl
es
cmc
rcll
cmp
xchg
fldl
add
lea
or
fnstsw
push
jecxz
pop
mov
and
repz
fcmovnu
in
data16
ret
adc
jg
push
jl
bound
aad
sub
bound
test
movl
fsubs
pop
fstpt
lods
out
pop
daa
mov
lock
dec
pop
scas
stos
mov
clc
mov
subl
jno
stos
ret
lahf
adc
imul
push
jne
stc
loope
mov
popf
lret
jge
arpl
clc
jns
mov
mov
imul
inc
std
cmpsl
daa
test
lods
adc
loopne
into
fsubl
pop
adc
pop
adc
aad
sub
sbb
fs
aam
push
mov
mov
sub
inc
adc
cld
mov
rol
enter
pop
jns
xchg
iret
pop
test
clc
sbb
mov
incb
testb
xor
fidivrl
jecxz
clc
imul
sub
sub
jo
or
addb
mov
shr
and
incb
push
push
fldcw
mov
mov
lret
out
into
add
jecxz
loope
fisttps
and
into
insl
sbb
es
lds
add
and
shll
nop
mov
xor
push
stos
es
aaa
movsl
scas
stos
pop
iret
clc
outsb
lcall
loopne
cmpsl
testb
lret
ds
push
pop
daa
jnp
aam
iret
ja
loopne
jno
jnp
inc
nop
cwtl
mov
lret
pop
roll
push
les
dec
sbb
outsb
push
mov
nop
lea
call
outsl
xor
shr
gs
insl
lahf
cmc
jge
lfs
fnstcw
shll
jg
insb
add
cmc
cmc
mov
jbe
mov
test
sub
rcrl
pop
fwait
jge
scas
das
mov
test
aam
adc
jl
xchg
ss
xchg
fcomi
and
imul
popf
call
push
imul
xchg
push
dec
dec
push
hlt
push
pop
shll
out
adc
loop
jecxz
sub
push
in
xchg
and
add
imul
lcall
pop
rorl
loope
mov
jbe
movsl
mov
mov
pop
addr16
jne
jmp
push
dec
inc
sbb
clc
xchg
adc
fwait
cmp
add
les
sbbb
loope
add
xchg
fwait
lock
jmp
mov
lock
mov
pushf
add
xchg
pop
sarl
mov
test
es
mov
fimuls
aam
enter
test
pop
dec
xchg
xchg
movsl
pop
std
outsl
decb
popa
roll
dec
aaa
popa
pop
out
push
push
leave
in
push
fnstsw
add
push
jmp
cwtl
mov
jne
and
mov
xorb
lret
and
pop
inc
mov
imul
in
mov
pop
jecxz
aad
lret
nop
and
mov
cmpsb
cs
or
dec
lret
xchg
mov
out
mov
scas
jns
jg
sub
dec
or
pop
test
sub
and
mov
call
popf
pop
rcr
and
mov
mov
out
push
fcompl
mov
pop
mov
add
sub
cmp
movhlps
adcl
mov
or
and
sbb
jae
test
out
lods
fdivs
loope
movsb
test
mov
mov
add
adc
addb
adc
scas
bound
orb
repnz
ret
js
mov
in
dec
add
push
nop
cmc
mov
lods
jl
adc
clc
jl
push
fisttps
out
out
adc
and
cld
outsl
xor
cld
leave
pop
xchg
mov
mov
lds
xchg
mov
adc
sub
sbb
inc
jge
movsl
jl
es
pop
gs
iret
jecxz
cmpl
sarb
cltd
insl
mov
lock
sbb
dec
fistl
mov
mov
mov
dec
fcomip
xchg
xchg
add
push
popa
fwait
jb
lret
stc
xor
jmp
inc
stos
push
pushf
jge
jae
xchg
jns
jns
js
mov
sti
adc
inc
imul
jle
jmp
fdivl
es
pinsrw
cmpsb
sub
xor
sub
shl
sub
push
cmp
cmp
test
pop
xor
vandpd
push
xlat
adc
mov
push
xchg
push
aaa
cli
outsl
hlt
xchg
les
or
fwait
rcll
mov
xor
nop
lahf
xchg
inc
enter
jae
jge
mov
inc
pop
fmul
filds
cli
adc
and
mov
xor
leave
xchg
ret
mov
cmp
iret
or
leave
xlat
inc
add
or
fldcw
rcrl
into
cmpsb
dec
insb
mov
push
stc
sub
push
cmp
test
das
lcall
out
mov
icebp
pop
push
and
adc
in
sub
es
std
inc
and
xor
scas
ja
jne
jmp
pop
sahf
imul
std
fisubl
mov
icebp
ja
sarb
ljmp
pushf
je
cwtl
outsb
jne
iret
cmp
call
pushl
stc
jmp
and
into
outsl
fcoml
jl
xor
icebp
mov
pushf
push
inc
sub
or
daa
dec
mov
jecxz
lods
mov
or
mov
mov
mov
adc
sti
and
adc
ljmp
enter
xchg
push
dec
inc
cltd
das
stc
sub
sarl
sbb
or
sbb
scas
outsb
sub
int3
cmc
or
jne
jno
and
sbb
adc
cwtl
mov
cmp
mov
fsubrs
cli
xchg
cltd
out
dec
orl
jb
push
adc
xor
out
xor
cmp
into
das
jne
clc
cmc
adc
fdivrl
xchg
and
pop
call
adc
jne
popf
pop
repnz
in
icebp
negb
xchg
mov
mov
push
lods
testl
push
sbb
aaa
pop
inc
mov
inc
lods
mov
fldz
push
jmp
dec
add
adc
lods
xor
aad
mov
fadds
repnz
enter
mov
add
push
aaa
rolb
mov
mov
fldl
jmp
inc
pushf
xor
adc
sbb
fcmovb
mov
jnp
inc
adc
cltd
das
mov
ficompl
mov
popa
movsb
rclb
popf
xor
jle
inc
repnz
shll
test
dec
rol
sub
mov
and
js
nop
xchg
adc
scas
out
adc
pusha
in
inc
jno
not
scas
pop
pop
scas
stos
lret
cmp
out
js
orb
call
mov
leave
in
pop
leave
inc
mov
xor
push
and
mov
push
dec
nop
popf
orl
xchg
sbb
adc
test
adc
icebp
sub
push
repnz
testl
sbb
cmp
mov
adc
pop
ja
nop
insb
mov
test
and
sbb
cwtl
popf
divl
adc
inc
aad
inc
sbb
cwtl
push
je
cmp
je
je
mov
enter
or
jb
add
insl
push
sbb
sub
fildl
adc
movsb
test
adc
cmp
movsl
jmp
fldt
inc
scas
mov
aad
fwait
mov
add
and
jl
mov
xchg
into
cli
dec
cmpsb
xlat
ret
jge
mov
push
xchg
jecxz
loope
imulb
push
cmp
jnp
cmpsb
mov
and
into
bound
pop
in
loop
bound
fldenv
mov
repnz
movsb
loopne
cmp
pop
lret
in
and
inc
mov
jecxz
out
in
inc
aaa
mov
or
subb
and
ret
lcall
shl
mov
push
dec
jns
and
and
jo
es
scas
xchg
ficomps
loope
xlat
faddl
test
popf
mov
sub
imul
xlat
in
repz
cmpsb
add
pop
rcrb
daa
xchg
mov
loope
icebp
pop
in
sbb
inc
fmuls
icebp
xchg
lahf
xchg
call
shrb
adc
ret
jl
mov
je
das
inc
mov
leave
lahf
jno
pop
les
cwtl
mov
adc
push
enter
lahf
outsl
mov
dec
jl
mov
and
jns
stc
movsb
enter
mov
loopne
fwait
xor
mov
loop
pushf
lds
mov
inc
mov
dec
add
pop
test
ss
add
sbb
data16
mov
std
movsb
bound
loop
ljmp
cld
add
lds
cmc
xor
push
sub
sub
lds
lret
pop
fsubrs
aad
sbb
mov
lods
addr16
push
loop
adc
push
jae
pop
lods
push
rclb
cbtw
cmp
jnp
add
pop
out
jmp
jl
jns
cmp
add
je
sub
pop
pop
imul
jo
mov
sbb
std
ret
jmp
lods
inc
movsl
out
fst
shll
subb
aas
int
idivl
sub
cmpsl
test
in
rcrl
adc
xchg
lcall
mov
mov
movsb
inc
daa
int3
loop,pn
addr16
xor
popf
jb
aam
jb
push
rolb
add
pop
mov
out
pop
dec
sub
mov
in
out
subb
xor
adc
push
stos
xlat
xor
mov
test
cmp
jae
pop
xchg
xor
push
lea
mov
ljmp
or
pop
rcll
daa
or
gs
dec
push
stc
xchg
nop
xchg
push
cld
into
xchg
or
sub
jb
xchg
loopne
mov
clc
or
add
cwtl
xchg
sub
test
outsb
jno
ret
stos
dec
sbb
rcll
xor
xor
xchg
cltd
lahf
int3
fimull
mov
imul
pop
jne
int
xchg
mov
loopne
outsb
xchg
xor
cmp
push
in
cld
jbe
add
das
aad
sub
sbb
into
mov
pop
xchg
mov
pop
mov
int
dec
decb
sbb
pop
inc
mov
dec
std
mov
in
push
stc
add
xchg
and
xchg
and
outsb
mov
and
mov
sub
xor
jmp
adc
push
ret
push
sti
xor
or
jmp
mov
loop
dec
cmc
sbb
popa
mov
dec
addr16
mov
xchg
jp
clc
loop
fwait
ret
add
ds
scas
fistps
addr16
add
lods
fcompl
xchg
loopne
inc
dec
xor
pop
sub
and
inc
cltd
sbb
xchg
sub
mov
les
fmulp
sbb
lds
push
imul
pushf
mov
cmp
jl
or
sbb
sbb
dec
push
pop
jecxz
ja
sbb
push
dec
and
add
filds
jo
lcall
fnstenv
inc
pop
int3
leave
or
clc
fmuls
xchg
aam
pop
not
mov
loop
xchg
cli
adcb
arpl
jp
frstor
in
in
loope
xor
divl
test
cmc
jb
dec
xchg
inc
lahf
pushl
jo
push
sti
pop
sbb
shll
out
xor
icebp
xchg
mov
sub
call
mov
gs
jge
movsb
enter
aam
aaa
mov
add
push
pop
push
popf
out
mov
pop
pop
test
imul
adc
in
lods
mov
cs
jg
repnz
xchg
lock
popf
push
in
adcb
sbb
jp
pop
aad
jge
daa
loop
imulb
loop
push
mov
inc
mov
int
pop
or
cli
setg
pop
xchg
or
aas
pop
hlt
sbb
pop
or
mov
sbb
aas
xor
addr16
jg
pop
add
and
jae
push
sub
mov
jbe
mov
or
add
lret
enter
mov
or
call
or
mov
repnz
insl
nop
xor
into
push
cli
lret
mov
imul
xchg
and
sub
inc
les
bound
mov
das
addl
mov
int
mov
add
pop
adc
sub
cmc
rorl
cmc
insl
loop
xchg
xlat
stc
mov
jns
mov
or
xor
push
in
sub
lcall
sahf
insb
cmpsl
dec
inc
push
test
and
sbb
clc
mov
into
jnp
mov
mov
scas
add
push
lds
mov
lahf
sub
fnstcw
stos
add
sbb
inc
bound
mov
dec
and
arpl
inc
adc
loopne
mov
inc
rcrb
adc
and
shlb
push
add
push
fsts
adc
in
es
jno
push
loop
xchg
push
stc
inc
jbe
popa
pop
adc
in
iret
xor
jns
and
enter
ja
jbe
dec
stos
jg
xchg
xchg
adc
nop
inc
int
or
cld
push
xchg
out
sub
xchg
push
andl
and
sbb
push
mov
push
test
loope
push
push
sbb
stos
in
cmp
sti
inc
and
popa
sti
jmp
movsb
xorl
sub
push
mov
mov
leave
fisubs
adc
int
stos
cmp
add
leave
rolb
ficomps
push
adc
push
push
mov
leave
or
pop
mov
int
adc
pop
hlt
xchg
out
lahf
aas
cmpsb
cmp
push
adc
popa
ljmp
adc
xor
adc
cmp
add
push
addb
mov
ja
mov
or
stos
sub
sbb
push
push
out
test
js
xor
sbb
les
push
clc
pop
ret
repnz
vpunpckhqdq
push
mov
fistps
scas
call
mov
out
cs
out
xor
lahf
in
mov
in
out
jl
mov
movsb
adc
pop
sub
push
scas
fstps
mov
adc
push
mov
cmp
bound
mov
loopne
mov
inc
and
lods
loope
aad
shlb
jl
pop
xor
mov
pop
data16
out
dec
nop
pop
cmp
scas
loop
call
cwtl
jl
and
or
mov
jo
sbb
or
mov
fwait
test
testl
jge
cld
inc
jecxz
mov
lods
lret
mov
outsb
and
mov
jbe
jno
inc
iret
mov
js
and
inc
leave
test
imul
out
jmp
push
xchg
xor
dec
add
jns
mov
outsl
sub
outsl
mov
test
mov
ds
mov
jl
fimuls
jbe
mov
out
cmp
sub
call
xchg
push
mov
dec
jbe
fwait
aas
mov
cmc
adc
stos
add
pop
adc
push
aad
push
mov
sub
pop
or
or
fwait
xor
clc
xchg
add
jnp
mov
fwait
mov
push
dec
cwtl
cmpsl
andl
push
lds
sub
imul
pop
mov
mov
push
cmp
and
call
test
push
fdiv
dec
int3
and
xor
arpl
fimull
test
mov
mov
pop
sbb
insb
clc
fidivs
and
shlb
addr16
leave
and
adc
push
pop
mov
cs
adc
pop
xchg
fwait
sbb
jnp
int
mov
mov
lods
call
scas
movsl
jnp
cwtl
push
cmp
mov
xor
pop
shlb
dec
int
or
inc
pop
dec
cwtl
je
cmp
add
pop
lods
jne
aaa
loopne
sbb
roll
mov
test
adc
mov
mov
rorl
jp
pop
jl
cwtl
add
repz
scas
and
fs
xor
gs
mov
enter
repz
ljmp
aam
mov
divl
jnp
jge
aaa
sub
aas
notl
and
jp
mov
push
jno
sbb
lock
nop
imul
adcl
les
cltd
jmp
cli
sub
cmp
pop
xchg
or
add
xor
mov
and
ret
xlat
mov
mov
pop
mov
cs
pop
cmc
jne
cmp
jg
stc
leave
test
flds
jmp
pop
mov
ljmp
fstp
push
movsb
jle
ljmp
cltd
push
sti
bound
xchg
test
in
das
xchg
push
mov
dec
mov
sub
mov
std
push
outsb
jbe
mov
jg
pusha
jmp
mov
cmpsl
sub
or
aas
pushf
pop
mov
push
pop
out
std
add
ja
or
xchg
in
push
iret
xchg
sbb
and
nop
adc
adc
jl
scas
sahf
mov
sbb
pop
fnstenv
xchg
out
roll
sbb
mov
addr16
mov
xchg
ficompl
xchg
lods
jle
cs
clc
jnp
fistl
stos
xor
filds
mov
out
xchg
mov
sbb
push
mov
cmc
jns
push
fwait
sub
je
lret
hlt
xor
adc
jg
xchg
je
add
and
repz
pop
pop
mov
adc
jb
mov
push
xchg
mov
cld
adc
sbb
inc
mov
psubsb
pop
dec
leave
lods
test
icebp
mov
lret
lods
dec
lcall
or
cmp
pop
movsb
das
pushf
int
lret
xchg
cmp
in
sbb
cmp
fbstp
arpl
mov
sub
pop
inc
out
pop
andb
and
in
jecxz
cmp
mov
lret
mov
lret
cmc
cmpsb
in
lcall
or
pop
cmp
repz
or
aaa
cwtl
sub
rcrl
in
loope
jmp
xchg
push
sub
cmpsb
cmp
cs
pop
andb
in
sbb
aad
adc
fstp
push
xchg
mov
mov
insb
sbb
les
push
adc
rorl
rcll
cmpsb
scas
ret
xor
push
jo
jbe
lds
cmpsb
mov
outsl
in
push
fidivrl
xor
mov
sbb
call
xchg
outsb
aad
add
sub
adc
sti
incw
out
sub
lods
xlat
nop
mov
sub
sti
cmp
pusha
int
in
pop
inc
adcb
sub
clc
dec
pusha
mov
pop
push
shll
push
push
leave
push
inc
rorl
cmp
jns
jne
mov
test
jmp
dec
mov
and
mov
pop
cmpsl
sub
dec
das
rolb
add
mov
xor
call
dec
adc
inc
fstpt
xchg
aas
mov
xchg
mov
in
sbb
dec
leave
in
fdivrp
push
add
xorl
dec
ret
repz
cmpsl
dec
or
cmp
push
push
lahf
mov
sub
out
fidivrl
fcos
dec
xchg
xchg
jl
out
lcall
jo
aas
mov
cmp
dec
push
adc
loope
sbb
test
xor
lret
rcr
dec
sub
nop
mov
movsb
xlat
icebp
hlt
lea
mov
scas
jg
fisttpl
push
mov
add
test
arpl
iret
mov
pop
cltd
addb
jle
in
mov
mov
add
sbb
cmpsb
popf
mov
mov
inc
and
xchg
mov
movsb
xchg
fisubl
mov
push
in
out
clc
pop
ficomps
lock
bound
sti
jo
or
jne
jmp
mov
test
inc
jae
sbb
xor
repz
cmpsb
les
mov
xchg
shlb
ss
mov
lret
mov
dec
jl
sbb
rcr
daa
hlt
sub
std
mov
add
cmc
cltd
jns
push
jecxz
inc
ja
pop
adc
shll
xchg
test
xchg
stc
ret
popa
push
inc
xchg
jo
or
jb
or
int3
push
jnp
out
push
mov
aad
andl
jae
loope
ljmp
mov
push
jns
xor
push
xchg
loop
xchg
cmpsl
sub
xor
sub
mov
js
add
adcb
jmp
lea
ss
dec
in
jge
stc
push
and
int3
or
ljmp
bound
inc
cmp
push
mov
jecxz
shrl
in
push
dec
scas
jle
fninit
cmpsb
jg
aad
cltd
pop
stos
insl
sarl
mov
hlt
sub
stc
ficomps
jg
cmc
mulb
in
cwtl
movsl
shlb
stos
aam
nop
mov
sub
jae
loope
mov
push
pusha
or
mov
mov
push
cmpsl
lret
xchg
test
leave
mov
fucomp
push
add
stc
dec
mov
addr16
mov
push
lock
out
mov
fwait
sub
adc
xchg
mov
popa
cltd
movsb
mov
add
int3
mov
bound
push
mov
mov
icebp
movsb
lods
cld
mov
add
mov
push
pop
ds
xchg
repz
sub
xchg
ret
mov
or
pop
and
into
rcrl
aad
xchg
push
push
scas
imul
or
inc
xlat
mov
data16
xor
cmp
subb
orl
mov
adc
jne
pop
pop
xor
adc
mov
lahf
adc
nop
or
xchg
pushf
sub
push
lods
adc
cmp
sbb
xor
insb
inc
sub
sbb
or
inc
fcomip
inc
inc
cwtl
pusha
out
fs
xchg
clc
jle
dec
inc
xcrypt-ctr
cmpsl
fstl
adc
push
popa
insb
push
call
mov
int3
cmp
push
stc
mov
enter
popf
pop
pop
xchg
cmp
or
dec
mov
mov
cmp
shl
int3
movsb
enter
cmp
pushf
gs
push
jo
push
inc
add
xchg
fdivl
nop
mov
mov
loop
xor
flds
mov
outsb
adc
lret
mov
outsl
adc
out
out
or
mov
sbb
imul
dec
pop
sub
cmc
rcr
sar
ror
xchg
lock
adc
mov
aas
and
iret
pop
imul
sbb
adc
inc
iret
cld
jb
push
mov
pop
not
repnz
mov
bound
call
add
cmc
popa
jne
in
jp
pop
mov
add
sub
mov
sbb
push
fildl
jae
add
mov
mov
mov
and
fcoms
test
lea
xor
dec
fidivrl
lods
fwait
sub
aaa
xor
ss
ja
dec
xorl
push
adc
cmpsl
jne
arpl
sub
es
in
mov
jbe
xchg
js
mov
lahf
lods
push
cld
xchg
add
aas
push
sbb
push
insl
cmp
cld
xor
xor
adc
xchg
mov
mov
lods
mov
adc
xlat
jns
scas
fs
dec
loope
adc
std
push
xchg
cmpsb
xor
repz
pop
add
sbb
loop
adc
sbb
add
pop
shll
loop
test
dec
inc
add
leave
sti
aam
xor
mov
jne
sbbb
cmp
notl
adc
adc
lods
ret
add
jge
in
inc
jbe
xor
and
jecxz
sbb
push
inc
sbb
xchg
aam
ret
cmpsl
into
cli
rorl
mov
data16
push
outsb
inc
repnz
fisttps
xchg
test
stos
lods
sub
or
out
jp
lahf
das
xchg
jb
fisttps
mov
mov
xchg
mov
rclb
dec
xor
mov
lahf
loopne
imul
aas
push
mov
pop
sbb
add
jbe
cmpsl
push
in
scas
inc
push
jg
or
cmp
std
pop
sbb
mov
xchg
aaa
pop
xchg
sbb
cmp
cmp
fstpl
pop
pop
mov
add
stos
and
xchg
je
imul
mov
adc
mov
cmovb
in
imul
in
dec
push
jne
mov
mov
dec
jns
cmpsl
andb
loope
xchg
lahf
es
jmp
sub
call
cwtl
sbb
pop
outsl
cmc
cs
inc
jle
jecxz
test
mov
aam
imul
divb
inc
test
aaa
jae
aas
xchg
jo
inc
pusha
add
out
rcrb
add
inc
push
pop
lock
out
dec
ret
arpl
adc
mov
ljmp
mov
clc
pop
dec
daa
cli
nop
adc
dec
sahf
xchg
adcl
xor
mov
push
push
adc
fisttpll
dec
mov
orb
mov
pop
sub
mov
pop
mov
stos
fwait
clc
or
aam
dec
sub
ja
enter
out
push
cmpsb
sub
sbb
negl
jmp
push
loopne
or
dec
fsub
pop
push
pop
arpl
cmpsb
lcall
fldt
and
test
dec
dec
lret
jle
push
int
arpl
lea
pop
in
icebp
call
mov
fstpt
jbe
decl
fstps
pop
lahf
ret
mov
mov
cmpsb
xchg
jmp
sbb
sub
test
add
int
mov
movsl
aas
mov
add
inc
leave
sub
int3
popa
and
stc
data16
movsl
adc
fdivl
cmp
enter
lret
cmp
cmc
cmpsl
sbb
xchg
push
jp
inc
cltd
cmp
xchg
inc
andb
loop
add
fadd
inc
pop
fstps
icebp
push
out
nop
insb
or
add
mov
push
add
pop
pushf
xor
or
pop
popa
mov
mov
scas
jae
and
repz
xor
test
and
add
cmp
push
cmpsb
scas
scas
les
aad
inc
mov
mov
fildll
mov
jo
jp
cmp
int
mov
inc
enter
repnz
dec
daa
xchg
add
repz
into
sub
inc
and
or
inc
mov
or
adcb
bound
mov
enter
lcall
cmpsb
sbb
mov
lcall
xchg
inc
and
int
imul
clc
add
lcall
cmc
cmpsb
cmpsl
enter
push
add
imul
pop
in
pop
hlt
clc
data16
cmpsb
xor
jmp
gs
into
pop
lcall
adc
lock
fwait
sub
add
ret
mov
xor
js
test
pop
xchg
inc
xor
nop
stc
out
fidivs
sub
dec
mov
sti
lcall
jmp
mov
sub
test
mov
push
aad
or
popa
push
cld
jne
add
adc
fisubrl
dec
push
add
or
and
mov
push
pop
decl
fildl
mov
add
cld
and
mov
lds
popf
outsb
xchg
lock
and
popf
in
jl
or
mov
enter
adc
cmp
sbb
sti
stc
mov
push
imul
mov
jge
sahf
cs
or
and
nop
and
lcall
add
or
push
inc
ffreep
aam
bound
and
push
xchg
push
mov
out
sarl
rorb
mov
sbb
dec
inc
adc
push
sbb
pop
rolb
jecxz
repz
mov
cmp
dec
or
mov
lea
icebp
dec
loop
inc
mov
mov
xchg
bound
lock
mov
jg
aas
and
push
in
call
into
lahf
mov
cmp
mov
clc
popf
out
loopne
scas
push
stos
imul
xor
sub
xchg
aad
mov
mov
rcrb
jmp
mov
test
adc
jp
in
sbb
leave
stos
jmp
add
stos
inc
pop
mov
or
cmpsl
push
pop
mov
dec
push
pop
shl
inc
sbb
add
not
and
mov
push
xchg
pop
pushf
out
fwait
sbb
test
imul
idivl
xor
cmp
stos
inc
popf
adc
add
std
jbe
push
sbb
or
pop
fcomps
push
or
push
rol
xchg
or
dec
push
push
push
lods
inc
cmp
inc
and
js
test
push
insl
xchg
dec
dec
stos
in
push
addr16
xchg
and
ficomps
mov
jle
xor
mov
arpl
mov
xor
fisubrl
sbb
adc
push
push
or
push
fbstp
mov
scas
push
push
jns
fistl
sbb
or
outsl
or
jg
mov
mov
js
pop
jns
sub
imul
clc
sub
in
inc
jns
in
or
or
clc
add
imul
and
sub
xchg
push
jecxz
mov
mov
jbe
add
pop
je
dec
sbb
inc
cmc
xchg
jle
mov
mov
cmp
or
mov
adc
fwait
scas
jecxz
inc
mov
cmp
roll
or
cmp
daa
lret
movsl
insb
inc
push
dec
sbbl
arpl
jp
into
push
fwait
ret
xchg
scas
rorl
lcall
pop
fdivrs
test
jne
lahf
jecxz
push
adc
push
stos
stos
rcrl
movl
cld
xor
cmp
jecxz
xchg
ljmp
xor
mov
inc
inc
and
sub
add
mov
cmp
popa
and
cmp
arpl
js
stos
inc
add
xor
mov
dec
sahf
mov
icebp
jl
pop
mov
mov
xor
xor
inc
dec
mov
jle
movsl
out
test
cmp
lret
in
movsb
loop
in
xor
repz
loopne
mov
push
inc
jl
outsl
pop
inc
data16
in
push
insb
les
das
xchg
je
std
aad
jno
nop
sbb
and
mov
shll
leave
mov
push
xor
cmp
dec
repz
mov
xchg
int3
and
out
or
addr16
orb
push
faddl
test
cmp
in
sub
push
loope
mov
ds
hlt
mov
out
jmp
sbb
lret
cwtl
sub
out
into
inc
loop
xor
adc
ror
rorl
jnp
jo
dec
adc
movsb
mov
mov
mov
sarl
jne
jo
inc
rclb
mov
mov
or
inc
push
push
fwait
pop
dec
adc
adc
or
xchg
xchg
jns
cmpsl
fildll
add
push
and
jmp
jmp
jg
cmpb
sub
movsl
ja
sbb
stos
imul
mov
sub
or
cmp
stos
inc
jo
mov
int3
iret
sub
mov
lock
pop
fisttps
mov
testb
jl
and
push
push
pop
push
aam
xor
add
cmp
xor
fcmovu
or
xchg
sub
mov
mov
mov
lret
movsl
dec
insb
add
iret
inc
xchg
shlb
jl
lods
stos
sub
sub
outsb
cmpsl
adc
addr16
addl
xor
cmp
adc
cld
stos
sahf
je
aam
mov
mov
xchg
jo
mov
jle
push
les
shlb
sarl
pushl
test
push
ss
cli
sub
adc
dec
andb
loope
imul
or
and
xchg
rcll
cmp
roll
add
fsubs
clc
and
jl
jae
mov
int3
test
lahf
ds
pop
adc
mov
xor
stos
clc
cmc
or
pop
jecxz
out
nop
in
xchg
movsb
movsb
mov
sbb
and
xchg
gs
sarb
add
dec
mov
shlb
imull
jecxz
out
jmp
push
jo
ja
xor
shll
test
das
xlat
lods
scas
sbb
pop
add
xor
mov
push
cmp
sub
loopne
cltd
addb
repnz
ret
das
inc
add
outsb
dec
enter
stos
dec
daa
or
cwtl
sti
mov
mov
mov
jo
jmp
int
leave
fwait
mov
jge
dec
sbb
jle
xchg
cli
ja
lods
adc
xor
push
adc
out
add
test
mov
cmp
sub
sahf
andl
mov
inc
pop
mov
inc
je
push
jb
sbb
lcall
lret
std
cmp
mov
f2xm1
cmp
and
lea
sahf
or
and
stc
int
lret
sbbb
adc
lret
sbbb
cmp
fimull
aad
pop
inc
dec
ja
mov
mov
hlt
adc
imul
rcll
push
mov
pop
test
pop
push
cmpsl
popa
ret
daa
mov
cmp
mov
dec
or
push
jo
stc
mov
out
imul
xchg
mov
jmp
lock
xlat
inc
std
mov
push
jl
jb
mov
imul
jnp
imul
push
adc
jg
jge
pop
notb
in
int3
scas
pushf
mov
sbb
dec
subb
cmp
insb
into
pop
adc
in
xchg
out
mov
sub
cmp
lods
orb
fdivrs
xchg
scas
out
loope
and
push
cmpsb
inc
stos
mov
pop
cmp
mov
outsl
cmpsl
mov
inc
stc
lods
xchg
and
cmp
mov
sbb
push
rorb
out
test
aaa
cld
sbb
jns
sbb
push
cwtl
js
dec
into
lahf
imul
cmp
cmp
pop
dec
fnstsw
jmp
aam
scas
cmpsb
push
nop
push
pop
mov
dec
dec
xchg
mov
mov
push
in
lahf
xor
adc
push
sub
movsl
outsb
outsb
mov
mov
mov
xlat
mov
mov
out
fwait
mov
jp
jmp
push
inc
fstps
or
add
movsl
cmp
movsb
out
loopne
aam
mov
aad
add
cltd
jae
inc
dec
nop
or
jo
dec
roll
xchg
jmp
push
lds
adc
pop
stos
roll
inc
nop
push
lods
mov
sbb
fistpll
imul
lods
or
xchg
xor
mov
or
mov
stc
pop
loope
enter
mov
mov
test
xchg
adc
popf
jns
aas
mov
negl
pop
lcall
mov
pop
xchg
data16
or
fcmovu
std
mov
data16
dec
push
mov
flds
xchg
xchg
dec
and
push
fsubs
stc
pop
icebp
ja
push
add
iret
sbbl
repz
xor
dec
pop
xor
addr16
enter
xor
jno
fildll
inc
xor
xchg
decb
pop
jne
daa
pop
scas
popa
xor
test
jle
lret
xchg
stos
sti
cwtl
dec
jns
mov
leave
push
loope
sub
sub
dec
jae
add
add
add
aam
dec
hlt
out
mov
rep
clc
push
jno
cmp
inc
jp
movsb
repz
les
inc
pop
fstp
push
mov
sbb
pop
add
sbb
mov
add
out
stos
jle
ss
inc
pop
int3
call
loope
sarb
mov
inc
enter
push
and
ret
dec
push
add
mov
mov
mov
mov
fisubrl
xchg
xchg
insb
pusha
in
lock
lods
subl
mov
lret
jg
jg
sub
jbe
pushf
or
inc
lahf
mov
mov
loop
lea
mov
pop
pop
fwait
lea
das
xor
mov
xchg
jnp
sub
lods
je
ss
shlb
adc
mov
or
mov
sub
lret
cltd
and
cmp
xchg
aas
push
cltd
in
and
jno
inc
push
pushf
adc
cld
gs
pop
mov
inc
loop
pop
pop
in
roll
dec
xchg
xor
insb
mov
loope
in
out
in
jnp
hlt
jge
adc
xchg
cltd
loope
pop
adc
int
mov
mov
push
pop
insl
daa
lds
mov
sbb
mov
pusha
xchg
stc
jo,pn
inc
in
cmp
insl
aam
xor
jae
aad
cmp
xor
jge
dec
sbb
cmpsb
add
pusha
out
imul
xchg
jmp
dec
je
cmp
faddl
iret
mov
icebp
jno
adc
sub
mov
clc
test
inc
aas
cmp
inc
xchg
jne
jns
sahf
inc
maxps
jns
mov
xchg
add
sti
mov
dec
or
pushf
jbe
fnsave
inc
push
sbb
pop
pop
cwtl
je
sbb
mov
mov
leave
aaa
dec
in
js
mov
add
sbb
fldl
shr
aad
xchg
adc
js
push
movsl
sarl
pop
inc
dec
mov
sti
adc
mov
stos
das
shl
mov
adc
dec
mov
dec
stc
push
sbb
stc
negb
out
jecxz
xor
mov
arpl
sbb
or
pusha
push
jb
push
dec
gs
ja
aam
and
out
mov
dec
mov
fs
roll
les
add
call
dec
imulb
pushf
int
inc
push
mov
test
out
insl
jne
decl
aam
mov
ss
negl
pop
mov
repz
into
inc
lret
fs
sar
loope
pop
test
cmp
jns
stc
into
icebp
push
sbb
dec
dec
pop
fcomps
loop
test
lods
push
and
cmpsl
iret
lret
outsl
gs
mov
pop
adc
loope
adc
cmpsb
out
cmc
ret
lock
mov
pop
hlt
ds
int3
es
dec
add
or
dec
fsubl
push
pop
jg
dec
pushf
mov
jmp
aas
pop
mov
cld
clc
cmp
xor
and
test
push
insb
fisubl
std
and
stc
xor
leave
sub
add
pop
xchg
xchg
pop
push
and
mov
daa
add
jl
test
jae
gs
loopne
fxch
in
lahf
cld
lahf
push
cli
ret
stos
xor
and
sbb
or
pop
std
sbb
int
dec
popf
or
mov
xchg
iret
xchg
mov
push
icebp
dec
xchg
cwtl
enter
jno
push
xchg
rorl
mov
jmp
lds
jo
test
fcomi
scas
or
pop
or
int
dec
mov
hlt
dec
fmul
stc
stc
sbb
loopne
mov
hlt
xor
roll
xchg
ret
jb
fsubrs
imul
lock
xchg
adc
aas
out
int
xlat
mov
xchg
into
orl
mov
pop
jns
in
jecxz
pushf
xlat
inc
sub
pushf
test
mov
fidivrl
je
mov
and
mov
out
xorb
jecxz
xchg
test
leave
arpl
popf
out
jnp
mul
pop
jae
sub
test
xchg
and
cmpb
jnp
in
arpl
out
scas
push
cli
xor
sahf
cmc
xchg
mulb
jno
mov
ds
mov
sbb
idivl
dec
andb
xchg
mov
test
xor
aas
in
repnz
or
je
dec
cmc
not
ds
sub
pusha
inc
add
or
jno
std
flds
shrl
pop
aad
xchg
sub
mov
icebp
pop
cwtl
in
push
int3
inc
int
sti
mov
ja
cli
fadds
fisttps
popa
cmp
rcrb
xor
cli
outsl
cltd
mov
and
adc
jne
lds
xor
cld
imull
addb
popf
shrl
push
scas
mull
inc
rolb
outsb
ja
jmp
mov
les
push
fldl
popl
lahf
popf
adc
das
jmp
mov
into
aaa
sub
mov
mov
mov
add
adcl
mov
imul
push
sbb
cmp
or
outsl
jno
and
nop
jbe
pop
les
ljmp
mov
pop
adc
add
fidivl
mov
sub
lahf
cld
add
dec
mov
sbb
gs
xchg
dec
mov
add
add
jbe
cmp
mov
fcoml
add
ljmp
test
sub
sub
add
adc
sub
cmp
sbb
sbb
std
or
test
add
movsl
into
cs
daa
std
jmp
repz
mov
mov
xchg
mov
xor
cld
mul
cltd
sarl
inc
das
jbe
push
outsl
fnstenv
jge
inc
push
inc
cmc
mov
xor
jmp
movsl
add
mov
jle
jl
out
psubq
outsb
and
gs
xchg
mov
sbb
addr16
jno
adc
push
mov
xchg
mov
rolb
xchg
mov
cwtl
xor
sbb
mov
jge
fcomp
xchg
aaa
outsb
sahf
rolb
adc
pop
mov
sbb
xchg
lock
pop
pushf
lret
add
add
andb
jns
arpl
adcl
pop
mov
imul
ss
add
adc
push
fimuls
push
sbb
push
push
nop
inc
cmp
inc
push
cmp
addl
dec
aaa
mov
jne
outsb
js
cmpsl
dec
fcomp
mov
jp
mov
mov
out
push
out
sbbb
in
ds
aas
ja
and
sbb
test
nop
js
mov
pushf
ljmp
pushf
insl
inc
ficoml
dec
in
clc
test
lods
sahf
push
ljmp
sarl
cmp
mov
pop
dec
jl
movsl
lea
iret
in
lock
jnp
aas
jnp
js
aam
stos
sbb
adcb
sbb
dec
sbbb
add
psraw
sub
cmp
das
mov
xchg
pushl
int3
cwtl
add
xor
jp
or
ja
sbb
mov
je
in
mov
inc
stos
dec
xchg
dec
daa
dec
js
loope
add
psadbw
movsl
or
push
ret
mov
inc
jp
lret
sbb
mov
ret
push
mov
lcall
cmp
and
pop
sar
mov
lods
xchg
icebp
xchg
nop
lcall
addr16
aam
rclb
sbb
cmp
gs
sarb
icebp
and
mov
sbb
aas
sub
out
js
dec
xchg
add
fidivrs
sub
fldenv
insb
outsl
fidivrl
mov
mov
mov
inc
or
sub
cmpsb
and
sbb
push
mov
stos
and
jp
lret
orb
jecxz
push
mov
xor
mov
mov
push
shr
xlat
imul
shrl
sub
push
sub
sbb
pop
mov
sbb
mov
cmp
enter
pop
jno
jmp
pop
fdivrl
and
testb
mov
inc
dec
fsubrl
aad
clc
mov
mov
xchg
dec
xchg
adc
and
xchg
lea
push
and
js
push
cmp
or
imul
pop
add
adc
negb
pop
inc
cld
js
mov
out
insl
repz
xchg
mov
js
sub
loop
aam
pop
pop
push
je
jns
call
and
cld
imul
mov
ror
lea
ret
loop
mov
clc
pop
or
dec
jle
xchg
cmp
imul
inc
ror
sbb
mov
andb
leave
es
rorb
repz
ljmp
lods
iret
inc
popa
fidivs
xchg
and
sbb
je
pop
adc
imul
sub
aaa
xlat
cmp
mov
xchg
or
popf
inc
ds
jmp
stos
ss
fistpl
push
aaa
aas
and
jb
pushf
js
mov
imulb
xor
gs
push
test
inc
mov
dec
add
sub
sbb
sub
call
cld
outsl
repnz
ja
mov
jbe
loopne
scas
scas
into
or
inc
outsl
in
cmp
push
or
sarb
mov
sti
mov
sub
cmp
sub
repz
xchg
shll
mov
mov
pop
lods
loop
mov
pushf
ret
cld
ja
mov
into
loop
jp
sbb
fwait
ret
dec
dec
cmp
pop
sbb
jge
out
push
ficomps
xor
ret
jnp
dec
leave
call
fldcw
pop
sub
add
inc
movsb
dec
mov
mov
mov
insb
sbb
nop
and
jge
push
icebp
inc
movsl
out
stc
cli
in
push
add
aaa
lea
dec
call
sub
cwtl
sub
push
lcall
add
lcall
scas
shrb
push
movsb
mov
inc
lea
fucomp
in
aad
push
push
sahf
push
cmp
mov
jae
xorl
mov
add
out
mov
mov
and
pushf
push
cmpsb
lcall
jmp
js
movsb
sbbl
dec
in
ds
and
frstor
aad
push
push
mov
xchg
or
icebp
mov
lea
add
xor
xchg
sub
xchg
mov
adc
fsub
arpl
outsl
inc
mov
hlt
mov
xor
lock
jl
jbe
or
adc
sbb
aas
sub
push
mull
inc
pop
jmp
mov
push
cmp
mov
xor
fldt
add
mov
arpl
fiadds
sbb
or
push
insb
enter
or
cmp
rorb
push
or
cmpsl
dec
jle
mov
cmp
push
jl
leave
or
scas
push
gs
loop
pop
ds
pop
mov
jl
push
mov
cmp
fistpl
sub
lods
mov
je
add
jbe
jmp
divb
movaps
stos
insb
stos
cmp
push
bound
add
mov
inc
sbb
popf
gs
in
icebp
fsubs
sarl
jecxz
lretw
out
cli
mov
dec
movsb
leave
sbb
xor
mov
fs
dec
dec
or
add
xchg
hlt
lcall
adc
in
in
int3
push
push
sti
pop
popa
es
rcrl
arpl
or
pop
nop
into
mov
loop
in
fimuls
push
jp
outsl
cmpsb
decb
out
or
sbb
test
in
scas
or
and
gs
sub
pop
push
icebp
daa
es
xchg
stos
gs
and
hlt
fcmovbe
in
mov
push
or
aaa
xor
xor
mov
mov
notl
aaa
adc
mov
pop
popa
loope
stos
in
mov
rolb
mov
sub
mov
in
stc
jl
xchg
test
fidivs
xchg
das
inc
or
icebp
cmp
aad
push
mov
add
lock
or
jbe
jg
sar
pop
cli
and
push
jecxz
jae
dec
test
scas
dec
push
push
and
fdivrl
mov
lret
pop
fwait
sti
cld
inc
dec
fbld
mov
gs
pop
outsb
pop
ret
xchg
sti
mov
mov
jno
rorb
fadd
mov
jnp
fwait
inc
xorl
aad
loopne
mov
clc
sbb
pop
pop
mov
inc
xor
mov
add
fnsave
lret
adc
cmp
adc
in
insb
jno
mov
cmp
cld
pop
addl
inc
divl
movb
fbstp
xchg
xor
fildl
sbb
push
and
sub
push
sub
scas
test
and
stc
xchg
push
adc
clc
popa
int3
popf
xchg
mov
sbb
icebp
mov
inc
add
sub
fsubl
ret
sub
push
pop
shlb
and
adc
and
cmp
and
mov
popf
jnp
adc
mov
sti
sub
jmp
and
fistpll
xor
fbstp
mov
jecxz
call
or
sbb
fwait
jmp
push
js
imul
jnp
mov
dec
es
pop
int
lahf
mov
xor
inc
bound
data16
shll
pop
stc
leave
notl
mov
outsl
jnp
xchg
mov
pusha
or
inc
sub
push
dec
mov
adc
fidivrs
xchg
outsl
mov
mov
pop
sub
outsl
rorb
loopne
jno
sub
jmp
mov
cmc
rolb
nop
nop
inc
je
pop
mov
into
jecxz
outsl
outsb
arpl
aas
push
insl
int
cwtl
insl
mov
ds
lahf
mov
lods
pop
popa
clc
test
add
mov
sbb
stos
inc
arpl
sub
out
pop
inc
cmp
adc
adc
outsl
dec
pop
aad
add
addr16
insb
adc
je
dec
int
cmp
out
pop
lret
adc
daa
push
sahf
loop
in
jnp
enter
xor
mov
test
or
frstor
add
add
out
std
mov
clc
mov
shlb
inc
movsl
mov
inc
insl
sti
and
mov
test
aad
cmp
inc
lods
andl
fimuls
push
shll
stc
jmp
and
andl
fsubs
inc
fimuls
pop
repz
dec
xchg
xor
sti
sbb
mov
mov
das
les
sbb
cmpsl
daa
int3
int3
imul
daa
daa
fisubrl
aas
daa
mov
jnp
sbb
adc
in
inc
loopne
cltd
arpl
fs
dec
jae
mov
rcll
int3
test
pop
lea
inc
sbb
out
out
imul
repz
fwait
sbb
cmp
and
mov
int
test
les
movsl
sbb
test
xor
pop
cmp
jae
or
in
sahf
js
xchg
mov
test
xchg
jmp
jp
lea
xlat
push
xor
mov
jg
aaa
dec
enter
hlt
dec
ljmp
cs
dec
out
pop
sub
pop
cli
mov
lcall
mov
jge
stos
lock
add
jno
sti
pop
or
jbe
push
push
rcrb
insl
xchg
push
sbb
jle
cmpb
xor
jp
jne
xchg
inc
lock
pushf
pop
in
dec
dec
leave
daa
pop
mov
lea
daa
mull
jge
jecxz
out
fstl
bound
xlat
sub
outsl
xchg
js
cmc
cmp
inc
outsb
pop
js
cli
in
mov
or
insb
add
mov
test
fsubs
out
sahf
addl
test
cmp
fwait
lods
mov
mov
push
mov
xchg
cld
cmpsb
add
call
arpl
mov
out
loopne
xlat
cs
jmp
jg
and
sub
mov
jg
add
xchg
je,pn
fs
mov
and
sbb
rcr
pop
or
loopne
cmp
inc
adcl
mov
or
fiaddl
mov
or
xchg
clc
in
adc
outsl
push
inc
cmp
push
cwtl
lahf
and
movsl
testl
nop
jnp
jp
or
mov
inc
and
and
es
pop
pop
fildl
sbb
popa
call
test
popf
stc
mov
mov
mov
jle
sahf
nop
push
std
pop
pop
popa
ret
int
pop
movsl
pushf
mov
or
xchg
out
sub
or
out
ret
dec
out
sub
add
mov
mul
push
das
fs
sahf
sub
aam
lods
aam
cmp
aam
mov
xlat
insb
ret
push
aad
cmc
push
fdivrs
mov
pop
mov
lds
adc
and
stos
es
enter
call
insl
jae
cltd
daa
jnp
in
lcall
sbb
sub
adc
push
xor
rorb
negl
jnp
mov
loope
ss
insb
cs
fs
out
popa
add
xchg
loop
push
xor
mov
call
or
mov
add
and
mov
xchg
mov
lods
jle
fstps
push
fwait
add
std
inc
ret
pop
dec
mov
sti
xlat
xchg
mov
in
lcall
lret
xchg
jo
pop
pop
inc
sub
push
repz
cwtl
or
mov
mov
popa
xor
mov
pop
inc
mov
movsl
xchg
dec
mov
sbbb
fisttpll
cmp
gs
notl
push
mov
cli
aas
in
les
mov
aad
push
jne
outsl
jae
mov
sub
jg
stos
les
mov
sti
es
push
cmp
push
in
jbe
scas
or
inc
fisubs
leave
addb
icebp
sbb
jb
jo
test
addr16
push
mov
fmull
xchg
xor
notb
sub
js
xchg
push
mov
movsb
and
pusha
aam
jne
dec
int3
push
xor
sbbl
ret
sbb
mov
lret
enter
jl
mov
pop
xchg
adc
out
push
mov
push
or
mov
scas
cmc
outsb
pop
mov
incl
in
cmpb
mov
cmp
inc
xchg
call
cmc
cmc
cmp
xchg
add
xor
cmpb
cwtl
shll
xor
xor
xor
lods
popf
jne
fidivrl
mov
mov
int3
pusha
clc
inc
pop
cmp
test
pop
les
and
repz
mov
int
js
jno
js
gs
loope
jae
add
and
lret
push
sbb
inc
out
imul
cmp
gs
jge
pop
inc
xlat
rorl
gs
enter
mov
and
push
pop
adc
cmp
mov
test
jo
das
xchg
jp
mov
lcall
mov
js
rcl
mov
jne
jnp
lcall
rdtsc
sub
jb
and
sub
sub
int3
add
cwtl
imul
sbb
ficompl
iret
adc
pop
lret
iret
jecxz
adc
test
adc
mov
pop
sahf
pop
hlt
and
push
ja
dec
xlat
add
mov
imul
divb
or
out
xchg
push
push
aaa
scas
cwtl
cwtl
mov
jbe
adc
aaa
lods
fwait
ljmp
mov
mov
cmc
sub
xchg
mov
mov
jle
lcall
cmc
pop
mov
and
xor
push
jmp
xor
mov
mov
fdivrl
pop
cmpl
push
sbb
in
mov
sbb
inc
fldt
dec
sub
and
xchg
into
loop
mov
shlb
pop
testb
aam
dec
out
cmp
jmp
add
test
mov
gs
dec
popf
cmp
aas
es
lods
popf
pusha
sbb
cmc
data16
scas
dec
mov
lahf
iret
scas
stc
fidivl
cmpsb
test
sub
shrl
push
out
stos
and
xchg
stc
out
cwtl
popa
mov
ljmp
imul
push
adc
dec
sub
or
adc
push
adc
fsubl
push
out
cwtl
push
int
cmp
dec
push
jmp
mov
push
jge
mov
xor
xchg
sahf
call
adc
push
adc
test
dec
pop
push
or
das
lcall
jg
sbb
add
mov
xor
rcll
pop
jmp
test
sub
ja
lea
dec
lods
pop
push
aas
pop
inc
mov
push
stos
xchg
xor
je
mov
scas
aaa
mov
xor
mov
add
dec
neg
cmp
sahf
push
jnp
les
cld
fcoms
and
rorb
mov
cmp
jmp
pop
dec
jl
movsb
cs
mov
ljmp
aas
pop
inc
xor
into
loope
mov
jecxz
pop
add
repnz
fdiv
sub
imul
or
sbb
es
test
es
sbb
das
adc
mov
dec
movsl
dec
insb
aam
ss
fs
xor
shrb
clc
subb
mov
sarb
clc
js
xor
lret
xlat
fidivs
cmp
mov
icebp
push
loop
out
jno
jle
pushf
test
pop
jmp
loop
pop
jne
shll
or
into
jo
add
mov
fidivrl
pop
cmp
and
jnp
or
cmpsl
add
inc
mov
xchg
hlt
leave
push
cmc
jnp
les
movsl
mov
fadds
push
gs
repz
sahf
cmpsb
mov
pop
add
add
or
sub
aam
or
mov
xchg
xchg
sbb
sbb
sbb
std
lock
arpl
mov
xor
adc
out
enter
bound
lods
repnz
ficompl
lret
jmp
bound
cmp
push
notl
lret
dec
xchg
sub
fsubrl
jg
push
dec
in
sbb
out
mul
shrl
rcr
jl
aas
jmp
orb
xor
repz
add
movsb
or
inc
aam
std
jmp
cltd
lock
dec
mov
fs
inc
test
adc
jmp
sahf
mov
aad
ret
addb
push
rcrb
mov
xchg
loopne
add
outsl
mov
mov
aad
arpl
orl
mov
call
xchg
aam
idiv
push
mov
push
test
mov
sub
xorl
jbe
or
mov
adc
jl
xlat
nop
inc
test
lock
les
addb
mov
jb
cmp
pop
loop
cmp
sbb
mov
fbld
inc
mov
lock
fisttpl
loop
push
dec
test
dec
xchg
cmp
daa
repnz
push
cmp
jb
imul
dec
jecxz
imul
mov
pusha
in
sti
pusha
pusha
push
add
mov
jno
push
repnz
rolb
add
test
jns
cli
xchg
in
fwait
fwait
push
rolb
mov
jle
cld
shlb
stos
inc
cmc
daa
add
cmpsb
cmpsl
scas
repnz
in
mov
push
add
mov
xchg
push
pushf
cmp
jbe
sbb
ret
leave
pushf
leave
cmp
shrl
fsubrl
sub
movsb
imul
cli
mov
xor
jbe
fdivp
pop
lods
adc
stos
outsb
psubd
push
and
push
int
mov
mov
sbb
ss
pop
addr16
xor
cmpsb
jno
imul
sub
mov
lea
sbb
jnp
cs
mov
fs
push
ret
cld
mov
addr16
rorb
adc
push
dec
add
cmp
jle
inc
and
mov
pop
mull
lds
into
inc
push
shll
popa
fwait
dec
add
fiadds
or
aam
test
jb
daa
or
shlb
push
sub
push
test
aam
aam
leave
movsb
add
inc
jo
adc
icebp
mov
mov
lret
and
in
test
repnz
cmpsl
jmp
fidivl
pop
xchg
sub
popf
add
icebp
mov
cmp
or
mov
arpl
stc
aas
cltd
sarb
insb
xchg
in
sbb
push
clc
adc
adc
les
out
stos
xor
stos
movsl
or
jge
pop
popa
xor
inc
das
adc
mov
fimull
les
ss
mov
push
add
aas
push
pushf
cli
dec
sub
mov
into
lret
and
sub
enter
sbb
sbb
fnstsw
daa
pop
ret
enter
cmc
mov
push
add
rcrb
sub
pushf
out
cmp
gs
jle
mov
movsl
pop
xlat
testl
adc
je
mov
sbb
push
pop
and
aad
push
adc
repz
iret
mov
mov
popa
mov
mov
add
stos
xchg
xlat
idivb
cltd
mov
mov
shll
xchg
mov
jnp
mov
pop
sbb
mov
sarl
in
cmc
xchg
dec
xor
push
push
and
fcoms
cmp
xlat
push
push
push
push
push
subb
mov
lds
and
pop
sub
outsl
and
inc
testl
jg
pop
cmc
ss
lahf
push
scas
popa
jl
pop
sar
adc
push
in
repz
sbb
in
dec
outsb
nop
in
testl
loop
jmp
insb
cmc
stc
vandnpd
movsl
in
add
cwtl
imul
mov
nop
insl
sbb
lcall
setl
call
add
and
xorl
ficoml
addb
mov
outsb
pop
out
push
adc
rcll
xchg
pop
mov
repnz
aad
mov
pushf
xchg
mov
xchg
andl
jle
push
mov
or
push
ss
jae
xchg
aaa
fisttpl
pop
nop
cmp
das
shrb
cltd
add
dec
sbb
pop
stos
cs
jno
addr16
xchg
pop
or
les
ja
xchg
shl
gs
cmp
push
enter
loopne
jecxz
mov
clc
sti
das
mov
loopne
sub
jb
push
xchg
fdivrs
jmp
xchg
gs
sub
cmp
out
pusha
mov
inc
xor
into
jge
stc
lds
ljmp
inc
jg
add
cmpsl
or
in
int3
xor
insl
mov
in
leave
pop
nop
imul
pop
cli
arpl
enter
insl
xchg
not
pop
sbb
stos
jmp
fwait
sub
std
std
mov
mulb
mov
mov
int3
pop
sub
xchg
xor
mov
fisubs
imul
mov
xchg
lcall
loope
cli
pop
xchg
std
jg
dec
dec
mov
fdivs
stos
mov
or
imul
aad
fwait
push
xor
mov
xchg
xlat
cmp
xor
push
gs
ret
test
nop
mov
jae
in
inc
pop
push
call
ret
sbb
popa
imul
mov
sbbb
mov
adc
loop
pop
and
jp
pop
rol
add
xchg
out
subl
pop
mov
mov
fucomp
xor
inc
push
push
fmull
mov
mov
loopne
aam
call
xchg
loopne
pop
cmp
xchg
aad
fucompp
fdivrl
and
mov
cwtl
into
mov
jbe
mov
or
mov
cmp
cs
push
data16
lock
jmp
lcall
loopne
loope
sbb
jmp
pop
out
pop
push
dec
push
jmp
es
in
pop
mov
cmp
add
xchg
inc
addb
pop
dec
scas
fwait
cmp
stos
pop
fstl
notl
into
push
das
mov
mov
pop
jp
stos
jle
add
or
insb
lahf
jle
pop
fwait
mov
inc
add
mov
aam
cmp
ja
cmp
int
int
insl
and
push
pop
xchg
fisubrl
or
xlat
stos
cs
xor
in
orb
or
subl
push
adc
ja
xor
data16
ss
iret
dec
xchg
or
pop
push
rolb
pushf
add
ret
das
test
int3
call
adc
addb
int3
negl
mov
lds
daa
xchg
rcrb
movsb
pop
imul
xchg
in
cmp
mov
orl
cmp
mov
fldcw
pop
xchg
arpl
or
sub
cwtl
adc
xchg
cmp
stos
pop
cmc
leave
nop
cmpsb
stos
dec
dec
cmp
mull
dec
mov
sbbb
adc
inc
out
dec
in
xchg
push
outsl
iret
pop
loope
inc
dec
decl
das
push
out
mov
lcall
lods
sbb
mov
aam
mov
arpl
add
mov
movntq
and
push
add
icebp
dec
push
movsl
sbb
and
mov
adc
int
jg
fdiv
stos
xchg
mov
sub
sbb
cld
mov
jle
gs
mov
dec
stc
inc
sahf
std
add
rorb
in
push
mov
xchg
aaa
aas
xor
lock
mov
add
add
xor
pop
addr16
jbe
js
out
ffree
xchg
mov
xchg
notl
ds
ret
jae
loop
je
out
ss
mov
adc
cmc
inc
loope
push
jecxz
mov
pop
subb
mov
cmp
push
sub
xchg
adc
mov
dec
pop
cmp
push
rcr
popa
outsb
cmc
arpl
int
mov
sub
ljmp
cltd
rcll
xor
ss
icebp
aas
lret
fmulp
xchg
inc
fcmovne
mov
cwtl
sbb
roll
push
fadds
or
jb
out
hlt
insb
sub
mov
outsl
sbb
imul
sbb
jl
call
pop
arpl
xor
jl
and
mov
ret
adcl
mov
insb
repnz
jecxz
pop
lret
adc
cmp
cmpb
ffreep
mov
ja
adc
sbb
mov
imul
dec
test
clc
jne
add
sub
dec
jnp
cmp
push
jmp
lods
mov
pop
dec
les
leave
or
mov
pushf
decl
jbe
scas
mov
sub
js
mov
or
xor
xchg
out
fsubrs
sub
scas
or
faddl
mov
movsb
hlt
cmpsl
lea
popa
or
xor
xchg
push
inc
inc
arpl
push
jge
or
add
or
lods
inc
int
inc
outsb
inc
imul
mov
je
leave
add
jle
dec
inc
insl
dec
inc
inc
pop
decb
lods
gs
pop
into
push
je
dec
jnp
mov
adc
das
lret
stc
loope
cld
sbb
test
data16
js
jae
sbb
add
pop
mov
out
call
sbb
jae
jg
lock
js
inc
outsl
jne
sahf
daa
std
mov
pusha
ret
repz
push
adcl
pop
scas
outsb
clc
fimull
aaa
rorb
fwait
int3
mov
sbb
fwait
leave
jmp
and
dec
shr
xchg
sub
or
pop
push
mov
xchg
hlt
pop
lods
xor
dec
push
mov
add
jbe
rclb
cmp
add
dec
adc
or
and
clc
or
adc
test
jp
jae
pusha
or
dec
adc
or
out
push
lods
ficomps
cs
adc
pop
popf
or
mov
lcall
andl
movl
in
fwait
rorb
jb
scas
insb
xor
xchg
add
mov
xorl
lods
mov
jnp
fld1
sub
push
mov
cmp
push
jno
xor
int
sub
rorb
test
mov
addr16
xorb
call
rcrl
xor
lret
jg
dec
mov
dec
loop
mov
repnz
scas
sub
test
movsb
adc
adc
mov
out
push
movsl
push
icebp
test
imul
adc
add
cmp
jecxz
or
cmpsb
push
jnp
movsb
sbb
aaa
cmp
xchg
pop
mov
js
xchg
shl
push
inc
lret
popa
popf
insl
testb
jnp
icebp
shrb
iret
xchg
push
test
push
inc
daa
add
push
les
and
push
mov
fcoms
mov
psraw
mov
addr16
xchg
lods
push
mul
aaa
mov
jmp
mov
lods
xor
jb
aas
mov
pop
rorb
mov
fcmovnb
fs
outsb
push
jae
iret
ret
xor
cli
push
out
nop
sahf
outsl
xchg
fisubrl
jo
cmp
arpl
push
push
add
movsb
stos
inc
fcmovne
aad
scas
mov
rcll
mov
push
add
cld
add
xchg
and
imul
sub
push
lds
loopne
jo
lret
cli
inc
push
pop
movsl
and
mov
nop
imul
cltd
inc
jge
sti
mov
inc
cmp
fisubrs
hlt
ljmp
push
daa
and
and
push
lods
or
push
sbb
push
aas
cld
mov
add
outsb
mov
xor
push
jnp
inc
jge
jb
lret
mov
enter
sarb
add
dec
lret
jb
std
cltd
int3
xor
pop
push
add
push
test
jnp
stos
rclb
cld
pushf
pusha
pop
std
call
sub
push
pusha
jbe
lcall
icebp
shll
iret
sub
inc
sub
mov
jge
out
inc
aas
test
inc
aad
lock
inc
pop
imul
je
xlat
push
arpl
sbb
mov
xor
mov
ja
popf
jp
mov
repz
jmp
mov
sbb
pop
loopne
lods
cmp
mov
push
in
and
pop
leave
mov
mulb
mov
imulb
and
add
push
dec
xor
popa
mov
xor
xlat
push
add
cmpsb
fwait
out
je
pop
push
je
xchg
inc
mov
mov
push
xchg
dec
mov
pop
test
cwtl
in
sub
xor
loope
arpl
cltd
sub
pop
push
mov
shlb
in
in
popf
loope
push
dec
int3
test
sbb
add
sub
lods
dec
mov
push
mov
cmp
mov
int3
xlat
sub
loopne
push
inc
into
jle
inc
jmp
loopne
ljmp
std
rorb
loopne
daa
add
adc
jge
add
pop
cmpsb
ds
pop
push
cld
shrb
mov
pop
shrl
jecxz
jnp
sbb
outsb
adc
pop
dec
dec
cmp
push
cmp
pop
icebp
cmp
cltd
orb
jl
xchg
xor
cmp
sarb
in
jg
xor
or
fucomp
std
jnp
pop
pop
sub
dec
cmc
out
push
sub
sub
jg
and
and
dec
cmpsb
xor
mov
rorb
cmp
sub
adc
push
pop
fmuls
cmp
push
lret
push
xchg
fistpl
mov
out
pop
jle
int3
mov
inc
int
bound
adc
adc
sbb
adc
xchg
inc
sub
stc
fwait
aas
jae
pusha
jle
jnp
arpl
cmp
outsb
pop
addr16
push
shrb
lcall
popa
or
ret
push
in
jae
cmpsb
sbb
call
xor
fwait
xor
mov
lock
repnz
sbb
in
pushf
add
cs
and
cmpsl
shll
ja
int3
loop
push
in
xchg
dec
movb
rorb
mov
test
jle
or
je
aaa
js
rcrb
fdivrl
sahf
fistps
xchg
jbe
aad
push
mov
adc
and
jmp
mov
out
mov
pop
jle
test
psrad
out
inc
pop
lock
iret
cld
insb
adc
mov
subb
mov
loop
mov
or
xlat
in
mov
scas
mov
stc
and
xor
insb
lahf
mov
test
xchg
cmp
xchg
xor
popa
add
sbb
or
xchg
lods
les
add
out
pop
cmp
scas
aad
aas
lahf
inc
sbb
dec
cmc
js
inc
setae
cmp
sahf
loop
mov
mov
or
je
fstpt
js
lea
mov
aam
sbb
int3
add
mov
and
lcall
lock
das
sub
xchg
sti
cs
in
push
jg
sbb
xchg
xchg
sub
movl
bound
pop
and
loopne
pop
xchg
xor
mov
xor
imul
cmp
sub
add
inc
dec
lods
mov
addl
lcall
jp
into
pop
daa
mov
mov
fsubrp
in
dec
and
pushf
push
sub
cmp
sti
xchg
mov
ror
das
mov
mov
lods
xchg
lret
dec
fxch
push
dec
push
inc
add
bound
push
pop
inc
movhlps
jae
aam
fwait
aad
cltd
shr
adcl
fwait
adc
roll
mov
mov
xor
imul
loope
inc
aam
or
or
jg,pt
test
loope
add
mov
xchg
mov
sti
add
clc
pop
cmp
pop
int
inc
sbb
dec
dec
call
xchg
or
adc
neg
or
dec
pop
jl
and
stc
xor
out
or
and
ss
pop
cmpsl
insl
fldenv
push
adc
sti
jb
cltd
test
jo
loop
enter
popl
pop
insb
or
sub
lret
mov
fbstp
mov
inc
addb
stos
dec
int
fistps
xor
mov
mov
sbb
xchg
push
arpl
cld
xor
mov
enter
icebp
adc
lea
sbb
sub
and
dec
fdivl
insl
jne
lods
add
push
jne
ljmp
das
xor
loopne,pt
outsl
ja
push
push
rcrl
mov
or
xorl
inc
aaa
in
pop
icebp
repnz
icebp
push
adc
ss
inc
adc
sti
leave
insl
mov
pop
into
mov
mov
lret
dec
jbe
lock
out
and
rorb
testb
inc
or
nop
mov
mov
xor
shll
mov
cld
xchg
fisttpl
sarb
sbb
jb
inc
sub
cmpb
subl
pop
push
mov
insl
filds
push
fcoml
lods
scas
sub
stc
loop
jp
mov
rcr
sub
lahf
je
rorl
decl
jnp
or
jbe
xlat
out
xlat
fidivs
int3
divl
inc
into
pop
out
xchg
mov
sahf
sub
enter
into
fsubs
sub
and
fsin
dec
jno
cld
cwtl
push
adcl
gs
fucomi
xor
stos
lods
out
or
mov
sub
adc
xor
inc
out
add
or
in
jmp
cmp
lock
dec
push
mov
sub
mov
in
xchg
adc
sahf
cltd
mov
cwtl
push
repnz
icebp
cmpsb
xlat
jb
push
xorl
in
imul
sub
out
adc
or
fnstsw
fistpl
mov
push
xor
cmp
sbb
push
xchg
or
push
xchg
stos
out
xchg
push
and
test
xchg
rcrb
and
lods
movb
orb
push
push
rcrb
or
data16
sub
or
mov
and
shlb
icebp
fs
fidivrs
mov
mov
mov
or
or
aas
loopne
or
in
lahf
and
cltd
jae
jle
test
adc
cltd
shlb
out
pop
sbb
fisttpl
fnstenv
jge
mov
push
mov
xchg
mov
data16
rol
pop
fsubr
enter
add
push
xchg
pop
lahf
cld
push
or
jb
xor
mov
cmp
pop
jno
into
gs
sub
mov
stc
xchg
add
mov
outsl
icebp
inc
xor
inc
xchg
jbe
inc
mov
xchg
imul
outsl
out
mov
nop
popf
cmp
pop
ss
in
out
notl
rorl
jmp
sbb
mov
cmp
movhps
sub
aad
jne
mov
push
cmp
inc
jmp
clc
fwait
data16
repz
mov
lret
mov
inc
gs
lret
mov
cmp
add
push
mov
insb
and
pop
movsl
xchg
cmc
loop
faddl
cmc
jnp
lret
pop
cli
fwait
mov
jle
in
mov
inc
push
add
dec
lret
orl
imul
mov
jnp
inc
sub
mov
sub
dec
mov
jp
lods
xchg
and
test
js
adc
add
or
and
gs
jmp
push
fstp
and
push
inc
addr16
test
xchg
stos
cli
fldt
daa
ds
aaa
and
sbb
sub
shrl
in
mov
inc
jp
mov
and
negb
push
mov
arpl
pop
lcall
fs
mov
pop
arpl
inc
mov
mov
xchg
add
adc
xchg
sub
iret
bound
incb
insl
stos
insb
scas
lret
push
push
icebp
lds
leave
decb
pop
leave
push
js
scas
stos
imul
mov
xor
add
int3
test
divl
inc
fstl
movsb
dec
xchg
fcompl
stc
adc
xchg
jle
ficoml
movsb
aas
lods
rcrb
shr
jnp
scas
push
test
xor
adc
sbbb
ffreep
mov
aas
mov
xchg
jnp
call
hlt
mov
inc
test
icebp
and
stc
hlt
mov
mov
mov
in
mov
test
xor
lea
inc
in
jg
lahf
inc
mov
jge
mov
shll
cmp
inc
or
divl
lods
mov
mov
push
and
xchg
mov
mov
cs
jno
pop
popf
push
or
jns
and
adc
and
mov
mov
sbb
push
mov
add
pop
mov
dec
dec
sbb
adc
xlat
pop
in
imul
pop
or
inc
jne
shlb
out
push
into
ss
add
cs
aad
cmp
sbb
aas
inc
iret
jae
sbb
mov
lcall
sbb
fwait
add
or
dec
stc
lret
clc
in
lret
cmpsb
cmp
pop
loopne
xchg
pop
les
xor
and
roll
mov
jmp
adc
push
imul
shlb
xchg
lds
shl
test
iret
sub
cs
cltd
pop
mov
push
int3
push
mov
lcall
dec
fdivr
mov
jb
ja
testb
test
mov
cmp
pop
mov
jge
popa
dec
mov
enter
push
adc
xor
in
push
pop
out
and
pop
cltd
subl
decb
loop
adc
std
mov
pop
js
dec
inc
je
sbb
stc
inc
push
push
xchg
mov
jmp
clc
cwtl
mov
loope
imul
insb
and
aad
out
push
orb
mov
xchg
ja
lahf
lea
js
fsubrl
sub
lods
push
lcall
dec
jle
int
push
jb
mov
mov
adc
add
add
ja
test
mov
mov
mov
xlat
mov
aam
cld
push
adc
cwtl
cld
xor
jecxz
imul
aas
adc
xor
xchg
and
fs
loopne
pop
clc
mov
cmp
push
btc
cs
nop
js
push
add
outsl
adcl
andl
jg
mov
sbb
mov
lea
ret
xchg
push
mov
xor
sbb
push
ljmp
icebp
pop
arpl
outsb
add
jecxz
sbb
sbb
push
lods
sbb
mov
aad
scas
xchg
fadd
mov
and
dec
xchg
out
sbb
out
in
jo
mov
or
xchg
jno
pop
fisttpl
push
outsw
rcrl
sahf
jl
ret
leave
jb,pn
js
mov
push
pop
loope
push
jmp
inc
lods
xchg
jne
aad
stos
cwtl
jns
mov
or
xchg
icebp
pop
shrb
fwait
push
mov
cmpsb
mov
jne
adc
rcl
xchg
cli
scas
adc
out
adc
mov
cmp
push
mov
jle
cmc
pop
or
inc
sbb
mov
and
dec
rclb
lcall
inc
popa
xchg
addr16
or
hlt
daa
stc
mov
subb
in
aad
add
std
cltd
dec
fdecstp
dec
mov
fwait
addr16
jecxz
and
fdivl
lds
adc
xlat
pop
popf
icebp
aam
out
fcoml
daa
xor
mov
lret
lret
add
push
mov
mov
sti
dec
pop
jae
fldl
pop
ljmp
add
jnp
mov
jmp
insb
insl
dec
pop
mov
imul
adc
outsl
jns
jns
mov
stos
xchg
add
inc
js
mov
pop
ljmp
push
xchg
inc
inc
cmpsb
aaa
test
dec
inc
mov
xchg
jg
out
jo
and
sub
xor
aad
es
scas
pushf
rep
and
dec
or
mov
and
pop
pop
push
xor
shl
decl
pop
pop
cs
or
lock
cmp
lret
into
mov
loope
xor
nop
decl
add
stos
ret
mov
mov
notl
mov
mov
lock
sub
xchg
and
out
fsts
cld
sbb
sub
inc
xchg
lea
es
ljmp
adc
sbb
add
mov
add
mov
jge
add
js
mov
cmp
fucomp
adc
fisttps
or
xchg
mov
imul
sahf
xor
das
in
scas
fcoms
add
xor
pop
bound
jo
mov
mov
sbbl
and
add
divl
in
ss
mov
cmp
lahf
std
mov
les
lret
sti
push
lcall
sbb
dec
mov
insb
xchg
jmp
aam
hlt
adc
js
mov
xchg
dec
push
hlt
aad
inc
mov
addl
push
push
mov
pusha
xchg
in
lcall
rolb
adc
jecxz
jb
pop
mov
cmp
or
scas
xchg
adc
cmp
push
das
mov
lret
das
pop
aaa
movsl
push
in
fdivl
mov
cs
insl
nop
and
pop
push
or
push
shl
lds
setbe
xchg
and
inc
xor
sbb
lahf
sbb
adc
xor
lret
mov
movsb
adc
pushf
enter
int3
std
lahf
aam
or
add
loopne
add
int
and
lods
addr16
shl
loope
xchg
jnp,pn
push
xlat
out
jmp
push
or
pop
sbb
mov
mov
sbb
fldenv
movsb
fwait
cmp
inc
fs
hlt
test
sbb
insb
lods
push
lahf
sub
mov
sbb
inc
int3
mov
stos
dec
test
cmc
mov
jbe
jecxz
mov
dec
lock
fwait
mov
mov
sbb
sbb
pop
mov
popa
lock
push
push
mov
xchg
and
int3
aas
mov
aaa
in
in
xchg
or
sub
and
aaa
cmp
test
sub
or
adc
xor
or
ja
mov
dec
and
lret
es
jle
imul
push
mov
jne,pn
or
cmp
lahf
mov
lret
cmpsb
into
mov
scas
mov
adc
adc
pushf
fisubl
push
inc
jbe
sbb
adc
ret
mov
clc
xor
and
js
mov
jno
mov
jns
insb
cltd
dec
int3
sbb
rol
mov
clc
xchg
fiadds
test
push
shl
jecxz,pt
orb
push
fnstsw
stos
shl
bound
les
mov
xorb
pop
push
mov
cld
scas
jo
push
dec
mov
out
mov
cwtl
ds
int3
aam
incb
push
mov
xlat
mov
mov
out
push
push
mov
cmp
pop
inc
push
repz
inc
sbbb
bt
mov
mov
xor
clc
xchg
popf
or
mov
jbe
adc
pop
inc
xlat
lods
pop
jmp
jl
call
sub
lea
das
mov
scas
clc
jle
testl
pop
sbb
xchg
int3
shrb
add
pushf
mov
dec
push
inc
sahf
mov
mov
jg
xor
push
fsts
mov
sub
xor
fs
push
mov
gs
in
rcrl
xor
jb
cli
and
xlat
mov
into
popf
mov
mov
xor
lods
jl
push
jmp
mov
cmc
xlat
sbbb
mov
sub
sub
jns
jns
fisttps
mov
pop
js
and
dec
sub
lret
daa
vmovaps
xlat
mov
movsb
stos
ret
cmp
incl
push
aaa
mov
jne
mov
pop
mov
and
mov
int
test
ds
lcall
lcall
aam
cs
pop
je,pt
mov
xchg
pop
add
jl
rcrl
push
mov
pop
xor
orb
xchg
mov
adc
pop
fwait
xlat
dec
add
outsl
xor
ret
or
out
jmp
repz
hlt
or
mov
icebp
xchg
xchg
js
gs
jmp
mov
jae
shrl
enter
lock
jae
add
rclb
cmp
jns
sbb
mov
sahf
inc
xchg
sub
push
pop
stc
jp
sub
pop
pop
dec
mov
sub
mov
icebp
arpl
xor
in
push
stos
loop
loop
arpl
pop
outsb
sub
xchg
sub
dec
mov
fwait
int3
ficompl
ds
push
aaa
sbb
and
or
shrb
sarl
int
xchg
push
fisttps
push
scas
fildl
xlat
mov
std
push
mov
add
mov
sbb
sbb
fildl
mov
in
bound
rcl
inc
push
cmp
jns
or
mov
stos
repz
xchg
jle
push
cmpsl
sar
cltd
mov
out
int
into
pop
xor
scas
push
lcall
xchg
cs
dec
popa
cmpsl
mov
and
pushf
out
popa
jbe
cmp
imulb
in
sub
hlt
sub
pop
push
mov
insl
push
mov
hlt
incb
lods
lods
mov
sbb
testb
add
adcb
pop
test
push
mov
xor
ffreep
movsl
aad
les
lret
ja
xor
or
in
test
movzbl
adc
insl
pop
rcl
or
adc
cmp
std
xlat
movb
mulb
lcall
rcr
push
dec
int3
popa
call
aas
dec
js
push
lods
test
cmpsb
jno
lods
adcl
popf
mov
mov
aad
xchg
stc
call
int3
sub
das
cwtl
push
dec
dec
daa
mov
and
ja
sub
push
iret
ja
pop
push
mov
xor
xlat
ja
and
sub
ret
xchg
jecxz
add
jle
push
xor
xchg
in
dec
adc
pusha
xchg
nop
xchg
jecxz
clc
mov
inc
lret
sbb
fcomi
je
xor
jge
mov
pop
nop
adc
adc
mov
mov
fwait
sbb
mov
fimuls
push
fisttpll
out
mov
test
or
ret
cmp
outsb
in
lahf
imul
add
add
or
fcmovb
pop
cmpsl
popa
inc
std
popa
lcall
imul
fcomi
mov
xchg
outsb
insl
subb
jl
in
dec
dec
cmp
cmpsb
out
lret
mov
bnd
xchg
xlat
lcall
pusha
inc
xor
mov
ds
mov
pop
add
pop
mov
iret
out
mov
pushf
sbb
fbstp
repnz
sti
in
scas
jmp
xchg
scas
inc
add
fadds
jmp
mov
movsb
je
xchg
iret
adc
outsl
pop
ljmp
test
daa
dec
mov
sub
jecxz
test
jns
imull
mov
sti
inc
clc
pop
mov
mov
dec
xchg
addr16
and
xchg
fistpl
inc
inc
cmpsb
mov
xor
jecxz
incl
daa
jge
push
movb
push
lret
imul
std
push
push
jg
sahf
inc
dec
les
sti
test
xlat
addb
pop
dec
mov
push
outsl
gs
test
push
or
pop
js
push
xchg
sub
aaa
or
lds
mov
stos
hlt
cs
negl
sbb
and
push
repz
loope
xor
les
pushf
mov
imull
loopne
cmp
fbstp
rcrb
push
dec
out
mov
xchg
pop
lock
adcl
jbe
popf
pusha
inc
icebp
dec
push
mov
xchg
xchg
insl
mov
scas
xor
cli
xlat
push
ljmp
mov
arpl
cmp
jle
fidivrs
cld
insl
int
rclb
cmc
jle
sub
mov
aas
insb
in
mov
ret
aas
sahf
and
jo
movl
push
push
inc
stc
inc
mov
mov
dec
mov
daa
xchg
subl
repnz
out
pop
push
sub
jl
aas
jo
and
add
adc
adc
sub
cmp
lcall
into
lret
push
xchg
mov
push
adc
insl
jle
pop
shlb
fadd
mov
mov
enter
mov
push
add
pop
rclb
add
ret
inc
mov
cs
fs
movsb
cmp
mov
cmp
mov
mov
cmp
push
jb
ret
mov
test
sub
cs
adc
and
push
mov
scas
xchg
add
xor
dec
and
test
clc
pop
add
push
test
imul
pusha
and
sub
xchg
test
push
insl
dec
and
repz
jno
lcall
fsubrl
std
loopne
test
pushf
mov
ljmp
dec
gs
add
xchg
cmp
xchg
xorb
push
lock
mov
or
inc
cmpl
adc
adc
mov
cmp
rcrl
mov
mov
mov
icebp
dec
sbbb
sub
out
mov
mov
ja
sbb
insl
movsl
dec
fiadds
fadd
push
push
xor
lcall
jmp
jne
arpl
mov
outsl
fidivrs
sarl
add
leave
insb
push
cmp
push
ss
hlt
test
jns
lea
loop
inc
js
iret
sub
push
fincstp
aam
jno
sbb
cltd
scas
stos
das
push
fldl
fdivrp
mov
mov
andb
stos
dec
dec
pop
shll
cmp
push
dec
shll
into
in
fmuls
sub
es
sub
adc
adc
test
sbb
mov
mov
mov
push
sub
xor
repz
mov
hlt
push
cmp
cmp
std
adc
push
xchg
jp
pop
imul
add
daa
ror
ja
clc
das
mov
add
xchg
or
cmp
in
outsl
cld
lahf
adc
xor
xor
movsl
xlat
push
and
ss
ds
scas
fldcw
adc
clc
ja
ds
push
les
sbb
cmp
xchg
jo,pt
test
loope
jo
outsb
sbb
push
dec
sbb
lock
popa
adc
sbb
mov
sbb
sbb
sub
dec
in
mov
mov
sbb
pushw
mov
push
add
loope
aaa
jns
test
cmpsl
adc
add
ljmp
shl
add
jnp
scas
mov
mov
lret
ljmp
pop
mov
leave
enter
cmp
js
lds
sahf
or
enter
dec
push
scas
add
sub
mov
and
sub
ret
add
cmpsb
sub
popf
fimull
pop
cmp
adc
sub
loop
pop
scas
push
mov
ds
fdivs
arpl
mov
fnstsw
dec
push
rcll
sbb
lcall
sahf
mov
cmp
xlat
xor
imul
push
xchg
jo
fcmovu
repnz
add
pop
push
ds
dec
movsl
out
pop
in
lahf
or
out
ja
push
push
inc
and
lahf
movsl
xchg
xchg
mov
push
into
jmp
jns
fbld
add
and
add
aas
popa
xchg
inc
mov
incb
sub
mov
repnz
mov
pop
cmc
sbb
mov
int
jmp
not
push
cmp
push
mov
loop
or
aam
test
js
add
fdivrp
fs
outsb
push
xchg
pop
sbb
push
sti
je
xchg
lea
inc
lods
inc
shrl
aas
push
xchg
jl
push
aaa
arpl
cmc
xor
cmp
aad
cwtl
in
fnstsw
add
push
ret
repnz
mov
jg
and
inc
test
clc
fimuls
jno
lds
mov
adc
ja
pop
cmp
icebp
rorl
push
mov
ds
ret
cmp
mov
cmp
ljmp
sarb
ftst
mov
popl
jno
sbb
mov
scas
jmp
mov
dec
paddb
cmc
data16
pop
xor
add
jmp
push
insl
jae
cmp
xchg
xchg
ret
in
push
bound
adc
test
pop
pushl
mov
mov
sbb
jbe
shrl
sbb
popa
movsl
fwait
dec
cmpsl
push
mov
mov
sbb
jl
cmpsb
adc
jl
arpl
push
lea
andb
sbb
call
pop
imul
mov
movsl
adcb
or
and
repz
pop
sub
mov
sub
repz
jmp
out
lds
inc
aas
dec
lahf
mov
add
shll
cmp
mov
sti
ret
insb
push
loope
sbb
push
daa
jbe
dec
loop
insl
mov
mov
js
cmc
xor
stos
jp
rcrb
inc
mov
pushf
or
xchg
adc
mov
inc
push
inc
mov
sbb
xor
adc
aas
loopne
ja
push
fcmovnu
mov
mov
cmpsl
lcall
mov
arpl
pop
jns
cmp
popf
adc
negb
imul
mov
mov
and
dec
mov
xlat
in
mov
or
fiaddl
xor
js
mov
enter
out
int3
dec
xor
sub
mov
push
test
adc
adc
add
pushf
pop
pop
ret
mov
xchg
cmp
adc
fnstenv
enter
push
add
sarl
shl
pop
pushf
popf
or
shr
lahf
out
jecxz
les
cwtl
icebp
push
inc
xchg
cmp
mov
push
ret
jecxz
loop
add
test
mov
lret
scas
push
cmp
repnz
jne
hlt
pushf
pop
adcb
dec
cmpsl
xor
sbb
sub
fldl
call
mov
jno
stos
xor
adc
push
push
mov
sub
jmp
pop
xor
lret
pushl
push
mov
sub
pop
aad
iret
outsl
or
es
push
cmp
push
pop
jns
xchg
in
loopne
xor
ss
sbb
pop
mov
dec
and
mov
dec
xor
lock
sti
js
inc
shl
cmc
pop
pushf
mov
ret
daa
ret
mov
mov
add
faddl
stos
aam
fstps
inc
push
sbb
ja
jmp
inc
jo
lock
fldenv
mov
sub
add
pop
dec
xor
aas
fucom
mov
add
cmp
fs
sub
call
es
sahf
jnp
mov
push
jns,pt
add
adc
mov
ljmp
aaa
cmpsl
and
fimull
in
repnz
sub
cmp
fisttps
mov
cmp
ds
std
cmp
dec
add
cs
push
stos
cli
aad
cs
out
test
enter
cld
cmp
int3
jo
jp
mov
xor
xor
push
sub
dec
stos
xor
inc
xchg
mov
and
mov
lret
out
inc
sub
stc
mov
push
test
and
push
pop
dec
imul
xchg
cmp
iret
ret
add
pop
jmp
mov
xchg
and
cwtl
sbb
mov
in
bswap
out
pop
mov
or
adc
jne
ret
insl
fdivs
or
push
mov
cmp
adc
aam
fsubrl
or
arpl
mov
loopne
iret
sbb
out
fsubrp
dec
lods
rorl
jbe
les
fcoms
cmp
loopne
cs
cmp
repz
inc
push
mov
push
mov
mov
and
in
xor
dec
jo
inc
outsl
add
arpl
std
pop
jle
pop
add
mov
and
ja
push
sub
je
loop
dec
dec
mov
cltd
and
push
push
ljmp
rolb
jmp
rcrb
test
dec
add
pop
mov
cltd
xlat
mov
leave
jmp
mov
and
push
pop
cmp
pop
inc
jb
ds
imul
std
sbb
jbe
push
clc
ucomiss
mov
shlb
int3
pop
fisubrl
add
fiadds
ljmp
sub
dec
jg
lock
cmp
out
divl
jle
hlt
dec
loop
dec
inc
outsb
jne
sbb
pop
pop
xor
and
shll
jnp
bound
or
mov
xchg
xor
mov
leave
cmp
daa
or
dec
jl
loopne
cmp
xchg
sbb
loope
fisubrs
lods
cmp
imul
sti
loopne
inc
outsl
cmpsb
mov
pusha
clc
leave
shll
and
jge
xor
pop
scas
and
call
dec
jle
out
inc
xchg
cmp
lea
sbb
dec
inc
cmpsl
cmp
xchg
push
test
ljmp
cmp
cmp
int3
push
testl
push
cs
adc
push
int3
inc
clc
inc
dec
xchg
std
sub
pop
rcrb
pop
mov
fisubrs
addr16
shll
scas
jge
and
into
adc
cmp
jne
outsl
les
cwtl
aad
pop
pop
or
jnp
sahf
push
das
pusha
dec
add
shrb
pop
xor
xchg
pop
jbe
jge
inc
lcall
cmp
aad
iret
in
std
fs
dec
mov
lock
addr16
sub
mov
scas
mov
std
rclb
inc
fidivrl
sbb
adc
cld
testl
iret
add
outsl
pop
ja
cmp
pop
je
sti
lds
cmc
cmp
and
fcoms
test
lea
leave
jae
and
mov
int3
lcall
out
mov
fisubs
inc
les
dec
pushf
lods
movzbl
stos
inc
or
inc
cmp
pop
lret
pop
repz
jl
and
pop
adc
cltd
xchg
test
jne
jp
jge
push
pop
les
lods
in
lds
dec
dec
pop
or
sahf
enter
mov
sub
stc
or
dec
rol
rorb
pop
into
xor
lret
and
mov
push
pop
and
lahf
jmp
mov
rcl
inc
push
mov
dec
loop
lea
in
loop
mov
loopne
sub
arpl
sub
jb
and
cmp
jl
xchg
out
loopne
add
je
adc
pop
jne
xchg
call
sbb
data16
cs
cmp
mov
or
add
jmp
inc
cmpb
ffree
push
push
xor
push
mov
and
jbe
iret
cmpl
push
xor
xchg
popa
cld
sbb
loop
push
fidivl
lahf
jmp
call
adc
lcall
lds
xor
mov
loope
push
in
mov
repz
scas
fldl
inc
mov
mov
das
scas
call
into
imul
adc
mov
pop
fsub
outsl
xchg
adc
lods
fadd
hlt
jne
xor
adc
mov
mov
sbb
scas
in
ret
lret
jns
out
int
scas
leave
xchg
inc
dec
push
iret
push
xchg
repnz
xlat
pushf
aad
or
push
xchg
ret
daa
data16
icebp
aam
popf
lods
dec
leave
cltd
sarl
adc
fldenv
sub
pop
mov
lods
pop
js
push
xchg
out
nop
cmp
sbb
sbb
dec
shll
fists
rcrl
mov
repnz
lds
sub
mov
addb
into
lret
push
inc
cmp
sbb
rcrl
mov
push
lods
dec
push
and
dec
addr16
fsubl
sahf
stos
adc
inc
sub
inc
mull
packsswb
pop
fwait
lock
mov
sub
push
fs
jns
mov
fwait
aaa
push
or
iret
mov
xchg
fucomi
rclb
push
sahf
cwtl
shl
test
negb
xchg
outsl
icebp
sbb
aad
xor
add
inc
sub
les
insb
jmp
dec
cld
jle
mov
faddl
lret
mov
es
test
daa
push
jne
iret
or
scas
repz
pusha
jnp
adc
lret
xchg
cmp
icebp
jle
xchg
imul
out
sub
clc
pop
pop
xchg
ljmp
mov
mov
in
dec
cmp
int
dec
in
stc
dec
shll
insb
jno
das
sbb
les
stos
jp
repnz
push
mov
enter
jl
dec
lock
push
ja
fsts
jns
and
cmp
sub
inc
arpl
push
cmpl
movsl
and
push
dec
xchg
rcll
ja
mov
and
jl
mov
leave
lea
fwait
adcb
das
inc
scas
xor
inc
pop
mov
cmpsb
xchg
fwait
sub
ljmp
or
dec
dec
inc
sahf
int
fsubs
repnz
cwtl
loop
xor
mov
or
mov
outsl
lock
sub
jmp
stos
fsubs
and
addr16
mov
leave
push
pop
xor
popa
clc
mov
lods
dec
lds
mov
movsb
inc
mov
fwait
sub
outsl
ss
pop
arpl
pop
les
ss
js
adc
dec
test
jo
cld
pop
dec
mov
and
mov
nop
pop
ds
mov
xor
daa
in
inc
aas
pusha
sbb
arpl
out
call
jle
out
and
daa
cli
cmpsb
lods
fldt
pusha
movsl
cmp
mov
sti
pop
repnz
sub
mov
xor
scas
notl
outsb
clc
xor
mov
inc
je
cmc
xchg
or
or
test
mull
jmp
xchg
int3
add
jne
mov
adc
xchg
in
inc
or
pop
or
mov
cld
mov
stc
mov
jg
mov
pop
and
push
mov
jle
je
enter
test
sbb
js
pop
into
mov
pop
add
mov
addr16
out
add
push
and
xor
loopne
stos
sbb
es
mov
scas
mov
mov
outsl
mov
out
mov
inc
js
repnz
outsb
sarl
jb
test
in
mov
jge
sbb
push
jno
mov
fcompl
pop
das
outsl
es
add
das
or
loopne
aad
roll
inc
add
stos
outsl
cwtl
hlt
dec
ja
mov
xchg
ret
mov
jmp
adc
fidivl
insb
adc
jnp
inc
jge
sub
jb
push
inc
cmp
loop
lds
int
mov
jnp
adc
inc
jne
jb
into
pop
test
fmuls
pop
mov
sub
mov
fdivs
pop
add
pop
test
push
ffree
jl
in
push
jo
cwtl
out
cmp
mov
pop
hlt
xchg
fildll
dec
inc
inc
dec
xchg
inc
cmp
lock
sub
mov
iret
test
sbb
enter
push
fidivrl
inc
cmpsb
incb
in
sub
cmp
test
mov
inc
ss
fsubs
movsl
repnz
shll
mov
adc
dec
xor
jb
mov
mov
test
nop
mov
inc
imul
test
dec
insl
and
negl
jg
sbb
in
stos
mov
nop
je
sub
movl
cmp
xor
mov
imul
int3
mov
mov
sub
inc
arpl
in
lret
mov
xchg
mov
mov
mov
movsl
adc
shr
inc
sbb
push
pop
cmp
je
xor
cmp
mov
pop
notb
divl
adcb
sub
loope
iret
xchg
scas
jbe
dec
out
pushf
jb
add
mov
push
pop
test
test
jmp
js
imul
jmp
sahf
shrb
adc
dec
adc
push
add
mov
and
xchg
adc
push
jns
push
cmc
addr16
test
jmp
mov
jne
fcompl
cmp
mov
sarb
ljmp
xchg
mov
ret
or
xlat
rdmsr
jge
mov
and
mov
sbb
pop
or
rcl
mov
mov
sbb
jle
repnz
mov
sbb
push
lret
adc
adc
loopne
xchg
or
sub
cwtl
in
inc
pop
ss
inc
sti
cld
jnp
dec
mov
xlat
mov
sub
ja
mov
jne
mov
cmpsl
mov
mov
fwait
outsl
mov
pop
add
sub
mov
shl
lock
in
gs
scas
and
adc
out
and
imul
xor
pop
pop
mov
rcrb
adc
sbb
loope
fdivs
jno
pop
inc
daa
nop
sbb
dec
sahf
sub
xchg
xchg
add
sbb
cmovp
mov
lret
cmp
and
inc
mov
repz
push
cmpsb
cmp
shr
cmc
xor
sahf
pop
and
inc
popa
pop
cmp
or
and
xchg
shrl
mov
xor
scas
dec
cs
mov
inc
and
dec
push
adc
movsb
nop
pop
cltd
add
inc
iret
jge
sub
sbb
scas
loopne
mov
lds
mov
jnp
dec
bswap
sub
fwait
hlt
leave
mov
jns
mov
insb
mov
push
sbb
inc
in
shl
imul
lods
movsb
jmp
xchg
xorb
gs
inc
push
and
sub
and
fdivl
fdivl
ds
jl
pop
hlt
insb
js
sahf
jg
cli
adc
lcall
aaa
mov
iret
leave
shlb
scas
dec
stc
cmp
push
cmc
sbb
sbb
repz
ret
cli
jae
shrb
adcb
lret
mov
dec
mov
xchg
push
sahf
jl
add
adc
dec
das
cltd
push
or
mov
es
dec
mov
mov
jp
icebp
push
arpl
push
mov
or
jle
push
mov
pop
cs
mov
sbb
negb
ljmp
test
cmp
adc
mov
iret
js
mov
push
and
inc
pop
sub
test
loop
push
jne
leave
arpl
cmpsb
stos
loope
mov
mull
jle
cmpl
xchg
pop
mov
mov
bound
push
ljmp
out
mov
in
mov
insl
outsb
adc
or
xor
push
sub
enter
jae
jmp
subb
nop
popw
jmp
add
js
sahf
pop
cli
das
into
sub
lods
mov
xor
ds
imul
cwtl
stc
inc
jmp
jae
fwait
cli
add
int
adc
pop
fidivrs
sbb
fimuls
pop
adcl
inc
out
xchg
push
or
aas
cmp
dec
inc
into
movsb
scas
aaa
push
add
test
les
jno
cltd
scas
pop
xchg
jb
adc
popa
jno
bound
jbe
idivl
cmp
xchg
mov
mov
push
jno
mov
lods
push
shll
in
mov
pop
push
push
and
aam
and
mov
outsl
filds
mov
mov
imul
pop
sub
sbb
mov
sbb
push
mov
stos
pop
jecxz
loop
das
scas
mov
cli
mov
divl
push
js
cltd
pop
mov
mov
inc
cmp
push
jmp
and
and
jo
dec
dec
imul
das
add
mov
lock
loope
mov
rep
flds
mov
jno
add
adc
add
push
mov
cmp
sub
and
adc
cld
push
int
pushf
rolb
mov
lds
mov
pushf
dec
sub
add
addb
xor
pop
fcompl
loope
and
cmpsl
xor
cltd
lock
das
or
or
mov
popa
pushf
lcall
negb
add
sbb
jo
cmp
mov
or
rclb
lock
movsb
and
lret
into
pop
bound
xor
jl
lds
jle
sbb
roll
cmp
sbb
repnz
mov
pop
sbb
fsts
cmc
add
mov
inc
xorb
lock
stos
cltd
icebp
sbb
mov
add
daa
enter
jbe
mov
xchg
out
pop
cmp
mov
adc
add
lock
imul
push
inc
mov
mov
pop
mov
mov
leave
fs
or
dec
sbb
inc
push
mov
adc
rcpps
aas
dec
daa
fcmovnbe
cmp
adc
icebp
movsb
notb
push
mov
les
mov
dec
test
cwtl
jl
dec
cwtl
test
les
push
dec
outsl
xor
mov
xchg
repnz
sbb
sahf
add
ja
xor
shrb
sub
jne
adcl
sub
rcll
int3
xchg
inc
imul
sub
dec
inc
cmp
or
imul
jmp
xchg
push
jg
scas
mov
xchg
or
lods
or
mov
pop
xchg
and
jns
sbb
mulb
mov
dec
shl
dec
fs
fnstsw
call
mov
push
jp
daa
dec
dec
xchg
aam
imul
mov
fdivrs
sub
div
daa
xchg
mov
push
inc
push
cmp
add
or
mov
int3
cmp
fidivs
inc
jno
fcoms
test
lcall
cmp
jb
push
jne
sbb
int
out
mov
enter
add
pusha
imull
pop
and
arpl
ret
fwait
push
add
push
rolb
cmc
les
xchg
mov
or
rorl
cmp
test
sub
movsb
cld
cld
xchg
xchg
call
popa
pop
sub
mov
jb
outsb
ljmp
arpl
push
mov
xor
lods
rcll
jle
inc
jmp
lods
and
test
inc
add
mov
cmp
int3
xchg
cltd
ret
sbbl
scas
sub
sbb
mov
jmp
cmp
jp
aas
les
push
and
lods
shlb
icebp
mov
pop
test
push
mov
xor
pop
and
push
in
mov
xchg
leave
cmpsl
fbld
mov
add
lcall
push
in
sub
xchg
incb
and
movsl
out
adc
xchg
pop
daa
xchg
cmpl
cld
sti
cmpsb
mov
jno
mov
mov
sarb
add
and
ja
push
iret
pop
outsb
cli
idivl
sbb
xor
dec
fs
roll
in
sbb
rcrb
je
mov
cli
inc
lret
test
sub
in
gs
fmuls
mov
sbb
daa
sti
mov
jecxz
xor
pop
cltd
inc
sbb
fimull
rcll
clc
aaa
push
fs
adc
pusha
or
push
dec
mov
inc
rolb
pop
scas
cwtl
in
fs
cmpl
sbb
test
mov
ljmp
outsl
je
dec
mov
dec
xchg
in
or
pop
inc
xchg
imul
fiadds
cwtl
mov
in
sarl
push
test
sub
xor
loop
mov
sbbl
cs
mov
add
pop
and
pop
xchg
stos
decl
and
mov
push
mov
sub
jae
or
mov
cmp
and
push
sbb
jp
stos
bt
or
sbb
ljmp
jne
fwait
addl
in
or
mov
or
or
rcrl
and
mov
sub
xchg
push
scas
leave
inc
sub
jnp
adc
push
push
mov
adc
arpl
xchg
lretw
sbb
ds
in
xchg
xchg
jl
xchg
leave
loope
add
test
movsl
cmp
dec
hlt
sbb
je
ficoml
cld
jge
shrl
dec
mov
cmp
lcall
pop
mov
dec
repnz
xor
popf
xor
repnz
fstpt
mov
cmp
jecxz
das
mov
xlat
xchg
loopne
imul
in
and
sub
test
xor
sub
outsl
jg
ja
mov
rorb
iret
pop
add
dec
dec
imull
jmp
sbb
mov
addr16
cmp
mov
sarl
sub
iret
mov
mov
test
rclb
loopne
jge
cld
inc
dec
or
push
add
jg
aad
cmp
test
test
add
popf
loope
scas
cmp
sbb
cmp
xor
adc
dec
mov
mov
cmp
dec
sbb
xchg
jmp
lods
jmp
arpl
mov
sbb
mov
inc
xor
jae
push
lcall
sbb
pop
pop
imul
adc
sub
mov
cld
sbb
jno
notw
xchg
fcompl
mov
fcoml
shll
dec
mov
fmull
lcall
fsubrp
mov
adc
adc
shlb
push
mov
shrb
xor
daa
stc
sbb
fldenv
jl
iret
xchg
sti
jmp
fwait
aam
ja
lock
and
out
pop
movsl
mov
fisubrs
mov
dec
int3
sub
mov
sarb
or
and
sbb
xor
mov
ds
jge
add
pop
ss
push
stc
daa
arpl
scas
sbb
pop
std
cli
enter
sbb
ds
sbb
sbb
add
fcompl
jne
jmp
sub
mov
dec
loop
lock
push
ljmp
aam
fcomip
aaa
jnp
repnz
mov
clc
repz
insl
pop
lcall
xchg
in
mov
sti
mov
std
int
add
popl
in
push
in
inc
in
pop
cld
sahf
call
jle
ret
call
push
fidivl
rol
push
sub
pop
lea
push
popa
scas
push
out
cmp
or
pop
or
xlat
push
pop
pop
jno
outsl
ret
inc
ja
sbb
in
mov
outsb
or
xor
add
dec
cmp
cli
lods
xchg
imul
xor
iret
aaa
jge
xor
sub
mov
mov
jle
nop
es
sub
xor
inc
in
and
push
mov
enter
jnp
lret
lock
push
cmp
cmpsb
rcr
outsb
je
es
push
popf
mov
call
lods
lcall
push
dec
cmpsl
inc
cs
into
testb
cltd
sbb
shrl
push
push
mov
fdivs
js
and
in
pusha
lea
lret
and
test
push
push
arpl
push
lock
iret
mov
popf
jge
aam
sahf
pop
mov
mov
imull
add
jmp
cltd
out
cli
pushf
addr16
dec
outsb
js
mov
jg
mov
dec
repnz
or
jge
insl
ljmp
mov
dec
mov
lret
scas
dec
sub
imul
in
push
loop
stos
cmp
test
jecxz
dec
cld
or
jno
add
cmp
cltd
add
mov
xchg
sub
and
movsb
jbe,pn
mov
movsb
add
inc
mov
pop
mov
sub
mov
or
xchg
iret
xlat
repnz
push
adc
lret
add
mov
lahf
jg
xchg
jecxz
pop
and
xchg
mov
fidivl
sub
sub
xlat
std
push
incl
je
leave
pop
hlt
mov
pop
jle
into
mov
lds
test
orb
je
mov
mov
imul
push
add
popf
sahf
repz
imul
add
mov
jge
aad
loop
pop
popa
movsl
leave
or
mov
xchg
inc
rcrl
push
add
or
ficomps
dec
enter
loope
mov
hlt
sbb
jae
push
push
sbb
test
and
inc
stc
sub
test
push
push
cmc
adc
insb
cmp
nop
pushf
imul
mul
stc
mov
jns
cmp
sahf
stos
add
outsb
push
inc
add
sarb
xor
out
xchg
mov
push
lahf
fcomp
js
jae
scas
add
mov
dec
or
test
and
sbb
jae
mov
pop
imul
jnp
xor
jns
dec
testb
cli
and
add
push
gs
sub
pop
mov
inc
icebp
add
pop
data16
rolb
in
and
insl
and
cld
cs
in
mov
into
push
jmp
inc
in
xlat
pop
loopne
pop
jo
bound
dec
push
lcall
hlt
aaa
mov
sbb
scas
sbb
pop
jno
loope
out
inc
and
pop
sarb
inc
jle
jb
xchg
mov
xorb
daa
test
cmp
ljmp
fwait
mov
cmpl
jmp
xchg
jge
push
fwait
xchg
out
or
rolb
inc
scas
push
jl
mov
pop
pop
mov
adc
cmp
stos
outsb
or
out
test
lods
sub
jae
fldt
jb
aaa
rolb
int3
sub
mov
pop
add
gs
movsb
xchg
cs
test
sbb
adc
lcall
int3
popa
insb
mov
add
or
and
and
dec
sub
test
pusha
fiaddl
add
mov
pop
scas
mov
orl
sbb
test
dec
negl
push
test
int
mov
xchg
lds
cmp
mov
loope
push
data16
cs
arpl
and
test
cmp
imul
push
mov
inc
mov
addr16
cmpsb
xchg
xchg
or
add
arpl
cmp
and
nop
jle
lret
mov
adc
sahf
stc
mov
ret
rorl
mov
push
add
pop
and
mov
mov
das
lcall
or
cs
loope
data16
xlat
les
jmp
fsubs
jge
xchg
xchg
push
daa
dec
ljmp
dec
and
cld
mov
jl
cmp
insb
lret
jne
testl
shll
sbb
and
subl
mov
xor
lock
mov
adc
mov
stos
xor
mov
sub
ret
les
or
daa
sbb
int
mov
jno
push
push
fcoms
mov
jne
in
ja
sub
push
cmp
pop
adcb
xor
mov
std
les
out
mov
sub
jnp
sbb
jecxz
cld
and
and
pop
int3
jmp
jge
gs
fstl
jp
testb
call
jne
sub
stos
dec
lcall
arpl
imul
fmulp
push
cli
subb
leave
and
aad
or
inc
and
test
inc
mov
scas
push
xchg
jg
fs
outsl
push
sbb
imul
aaa
out
rcrl
adc
addr16
imul
mov
lahf
pop
out
fwait
adc
sbb
cltd
cmp
jo
or
movsl
jb
pop
cmp
push
imul
test
pop
mov
jno
push
and
sahf
ret
mov
dec
dec
mov
aaa
fistps
test
movsl
jb
mov
jge
add
fs
pop
xchg
add
fists
nop
notl
lods
sbb
dec
bound
push
outsb
mov
clc
mov
xchg
xchg
sahf
ret
lahf
mov
out
aam
and
and
add
adc
out
dec
cltd
mov
xlat
lret
fucomp
xlat
outsl
sysret
add
mov
outsl
mov
icebp
arpl
push
lret
xchg
in
push
lret
movsb
fwait
insl
and
daa
jnp
ds
xor
push
xor
or
sub
rcll
repnz
jb
jle
mov
jbe
xchg
pop
inc
and
push
and
aam
inc
aas
jnp
pop
jmp
ret
bound
in
cmp
or
xor
rorb
xor
dec
pop
in
pop
int
pop
pop
mov
lds
fbstp
subb
addps
gs
xchg
jmp
sbb
push
dec
aaa
insl
ja
mov
xor
adc
and
imul
movsl
dec
in
sub
add
push
lock
out
iret
call
sub
adc
pop
pop
loope
jb
jo
dec
movb
sbb
int
add
push
mov
adc
sub
imul
insb
das
cmp
pop
ljmp
ds
sub
cmp
int
xchg
std
daa
je
jbe
inc
mov
or
mov
jmp
ret
fbld
imul
jl
mov
mov
xchg
sub
cmp
mov
pop
icebp
adc
mov
add
imul
mov
xchg
mov
mov
icebp
dec
inc
popf
adc
iret
and
mov
and
inc
rcl
jg
xor
sarl
enter
mov
test
lahf
dec
fcoms
jl
mov
jbe
mov
fisubl
inc
insb
mov
fwait
pop
mov
js
dec
inc
cmc
inc
jae
push
ja
enter
and
jbe
dec
mov
or
stc
mov
inc
subb
fnstcw
inc
jne
add
jne
jns
gs
xor
icebp
adc
loope
inc
add
mov
adc
das
push
idivl
mov
test
cmpl
cmpsl
aaa
pop
scas
xor
gs
mov
popf
xchg
fwait
sbb
inc
dec
ds
andb
cmp
mov
mov
cmp
fbstp
leave
imul
push
stc
jge
out
pop
repnz
clc
pop
rcrl
add
xor
aaa
cld
xchg
xchg
cltd
mov
fwait
outsb
mov
scas
loope
rorb
fsubp
adc
cmp
xchg
mov
mov
into
dec
sub
ljmp
icebp
popf
push
lret
loop
mov
jecxz
aas
js
and
mov
mov
dec
sub
push
jl
and
je
cmpsb
and
stos
lock
push
dec
sti
dec
cmc
mov
add
adc
inc
out
mov
sbb
scas
sbb
mov
and
scas
std
das
dec
adc
xchg
mov
sbb
xchg
and
dec
outsl
mov
nop
xchg
push
and
sahf
lock
popa
mov
addb
sbb
daa
inc
push
cwtl
hlt
clc
mov
xchg
add
sbb
andb
inc
divb
pusha
scas
add
xor
cmc
in
jp
lcall
and
jne
scas
cmpsl
popa
jecxz
xor
mov
mov
lods
out
lcall
mov
cmp
push
sub
sbb
stc
push
jns
jge
int
sbb
mov
xchg
xchg
mov
fldl
xchg
nop
fstps
stos
test
mov
cmp
rcl
pop
mov
mov
mov
and
pop
cli
aaa
dec
mov
idiv
enter
insb
out
lahf
jnp
adc
jp
dec
insb
mov
or
inc
shlb
jne
faddl
mov
into
push
pop
out
push
xchg
cmp
gs
cmpsl
clc
lahf
cli
outsw
dec
jno
popa
mov
paddw
adc
sub
outsb
call
xor
sbb
loopne
sub
cltd
push
lock
xchg
mov
inc
jae
bound
test
adc
fldcw
mov
adc
sbb
jmp
add
ljmp
add
insb
dec
mov
stos
fsubl
pop
or
adc
mov
ja
lcall
cmc
pop
je
jmp
and
push
sub
repnz
add
jns
rolb
jg
fwait
shlb
pop
push
jg
sti
xchg
push
movsl
xchg
ja
sub
cmp
and
pop
pop
frstpm(287
mov
push
inc
cmp
ja
mov
xor
adc
add
cmpsb
push
pop
push
jp
jnp
aaa
push
xchg
rcrl
xchg
xor
fstpl
sbb
push
and
lods
int
pop
shrb
or
mov
hlt
inc
push
pop
sbb
dec
adc
push
or
fsub
sbbb
outsb
cmp
sbb
movsl
std
rorl
mov
mov
loope
scas
cwtl
inc
jns
or
sbb
outsl
in
push
sbb
push
mov
xchg
inc
cmp
jb
xchg
adc
sub
lret
call
mov
ss
js
std
jo
js
gs
push
and
sbb
cmc
repz
xchg
xchg
sbb
mov
push
test
mov
sbb
mov
fs
xchg
imul
fldt
push
pop
loope
nop
ret
inc
pop
jbe
push
jmp
jns
fs
jno
cld
ret
stos
loopne
cli
cmc
ljmp
adc
repnz
or
std
cwtl
icebp
dec
cmpsl
cmc
add
add
sbb
and
popa
aas
cmpsl
bound
push
jbe
sahf
add
jmp
mov
fisttpl
popf
aam
pushf
pop
xor
imul
cmpsb
mov
mov
bound
ja
jbe
inc
dec
jnp
jmp
pop
rcrb
jne
imul
cld
jb
cld
lret
cs
cmp
and
xor
and
xchg
sbb
test
inc
sub
mov
push
pop
jnp
out
mov
xor
js
cmp
mov
lods
and
popf
outsb
loope
aam
adcb
cmp
jge
xchg
xchg
mov
inc
push
ja
mov
sbb
cmp
pop
sti
xor
clc
push
mov
pushf
push
loope
cmc
das
sarl
lock
jmp
aam
loop
xchg
cmp
mov
pop
sub
xchg
scas
in
repnz
pop
cmc
test
in
test
adc
icebp
push
es
jo
jae
je
fldl
adc
push
mov
push
scas
fdivrl
lods
adc
inc
aad
fwait
pop
lcall
or
je
insl
sub
shll
outsl
ja
ja
mov
mov
push
test
inc
ja
ja
aam
sarb
loopne
shr
pop
fcomps
mov
add
arpl
xor
push
movsb
pop
aaa
dec
lret
mov
pop
outsb
in
rcrl
ja
lea
in
bound
sbb
xchg
add
loope
fst
es
shlb
adc
xchg
mov
dec
ffreep
cmp
xor
lahf
imul
sbb
rolb
loopne
dec
sbb
stos
sbbl
dec
imul
cmpsl
mov
fsub
into
lock
cmp
adc
fisubl
into
icebp
daa
stos
or
sbb
add
sub
cwtl
jl
nop
or
jecxz
js
pop
mov
xchg
into
jnp
push
xor
fcmovb
xor
and
lods
or
cwtl
and
fldenv
pop
sbb
por
mov
push
loopne
jle
mov
insl
adc
ljmp
rolb
dec
push
rcll
cs
dec
icebp
stos
and
sahf
pushf
cmp
jg
dec
jbe
jl
mov
ss
ljmp
adc
out
maxps
in
and
mov
out
out
add
jge
std
ret
in
not
fisubrl
xor
in
dec
stos
mov
fwait
cld
js
mov
ljmp
arpl
mov
in
or
pop
ds
aaa
dec
sub
pop
add
icebp
loope
aad
es
or
mov
mov
sub
sti
inc
xchg
or
lret
jne
mov
mov
lods
test
xchg
pop
mov
xchg
push
pusha
or
add
mov
cmpl
sbb
xchg
mov
roll
fmuls
dec
in
jmp
cmp
push
mov
mov
sti
cmp
stos
test
cmp
cli
das
sub
ja
mov
mov
push
push
push
jae
mov
or
adc
scas
jecxz
rorb
cmc
js
cmp
out
pop
cmpsb
cld
lock
mov
adc
xchg
mov
cmpsl
je
mov
and
outsb
mov
enter
lock
or
rorl
fcompl
jecxz
push
shrb
jmp
shl
sub
lods
scas
add
mov
addr16
mov
repz
mov
je
fiaddl
repnz
pushf
es
push
aas
push
sbbl
dec
in
xchg
mov
out
dec
mov
push
cmp
xchg
add
test
cmp
or
mov
negl
lret
arpl
and
icebp
das
in
stc
orb
stos
arpl
in
fcom
insb
sbb
sbb
lcall
or
or
dec
push
cmp
mov
scas
dec
add
cli
jae
data16
test
roll
int
xchg
add
test
movsl
jle,pn
cmpsb
cmpsl
sbb
push
js
sub
adc
xchg
push
sysenter
insb
mov
fnstcw
inc
mov
dec
and
dec
int
outsb
mov
fwait
pop
pop
pop
mov
mov
sub
inc
xchg
inc
daa
fnstcw
addr16
popl
in
aad
pop
mov
mov
adc
mov
lock
jecxz
xchg
push
jl
sub
andl
lcall
sahf
lret
add
out
ljmp
sbb
mov
lods
out
rcrb
cmp
xchg
cmp
push
mov
mov
insb
cli
jnp
mov
jns
push
lret
cmp
test
or
xchg
or
mov
leave
jmp
stos
rorb
and
out
mov
imul
or
lock
scas
popa
loope
mov
pop
push
adc
imul
add
insl
movsl
test
cmpsb
mov
add
jnp
sti
in
fcomps
xlat
ss
aaa
dec
push
in
mov
stc
pop
fucom
clc
xor
decb
mov
pop
test
and
mov
mov
mov
xchg
pusha
mov
sbb
pop
repnz
clc
int
out
lock
test
xor
icebp
es
flds
ljmp
push
push
cmpsl
lods
and
and
loop
adc
push
cltd
movsl
cli
xor
jl
cwtl
pop
clc
adc
rol
or
adc
xchg
inc
arpl
stos
xor
sbb
ret
push
sub
add
scas
jmp
mov
int
push
test
push
push
icebp
cmp
in
call
dec
lahf
arpl
sarb
scas
hlt
imul
push
adc
clc
pop
mov
and
rcl
test
test
arpl
into
jle
inc
and
icebp
pop
push
xor
int3
sub
loope
mov
leave
stos
mov
test
imul
add
cmp
stc
jnp
push
subl
out
adc
and
cmpsb
divb
mov
jg
push
dec
dec
sub
and
in
call
jns
mov
lods
rorl
pop
outsl
outsl
push
push
push
popa
jo
icebp
pop
mov
push
pop
inc
call
lods
mov
sbb
iret
subb
ljmp
xor
jb
rcpps
ret
mov
cld
in
pop
outsl
movsl
and
or
xchg
movsl
mov
data16
pop
insb
dec
call
add
push
jb
and
scas
lea
pusha
add
adc
rolb
lret
mov
fisttpl
mov
mov
jg
cmp
imul
stos
out
mov
test
cmpsl
xchg
or
test
pop
aam
jae
add
mov
nop
xchg
lds
bound
push
cs
sub
xor
xchg
mov
int
nop
stc
adc
push
imul
xor
and
ss
or
sbb
rcpps
je
push
lods
dec
fadds
imul
pop
lret
aam
jge
and
outsb
inc
dec
cmc
outsb
inc
jle
mov
push
or
xchg
setae
repnz
mov
pop
icebp
lods
jbe
cmp
icebp
xchg
call
jb,pt
xchg
out
and
pop
ret
call
push
ja
cmp
mull
mov
out
mov
test
lods
mov
hlt
lret
xor
mov
mov
jge
out
out
mov
adc
mov
iret
incl
and
ja
cs
out
adc
xor
gs
mov
pop
pop
shll
sub
sbb
xchg
test
pop
sub
xlat
ja
in
outsl
pop
sbb
jge
xchg
add
inc
add
push
jns
add
mov
sahf
loopne
pop
hlt
add
flds
pop
in
ficoms
push
stos
or
jecxz,pn
fwait
out
mov
out
out
or
shll
add
stos
dec
dec
es
dec
sbb
stos
lock
pushf
popf
sbb
fstps
and
and
and
cmp
hlt
sbb
iret
test
jp
mov
xchg
cmpb
mov
mov
add
mov
bnd
xchg
xchg
sub
add
fdivs
pop
jge
mov
std
mov
jno
addr16
leave
jbe
and
adc
xor
or
repnz
dec
call
mov
adc
cltd
cmpsb
in
add
in
sahf
iret
mov
test
cmc
rorb
mov
adc
cwtl
gs
mov
mov
inc
pop
movsl
push
in
dec
pop
fdivr
or
in
sbb
mov
rep
sub
push
stc
das
jae
and
mov
adc
std
insl
inc
lds
lahf
aas
pushf
xor
pop
roll
push
enter
xchg
fisubl
jmp
and
aam
pop
lods
xchg
pop
jb
lret
push
enter
jnp
and
mov
repz
leave
dec
repnz
push
push
out
dec
cld
pop
mov
iret
std
test
out
and
push
or
jecxz
mov
lret
jae
ds
popf
adc
jmp
stc
and
and
sahf
pusha
pop
dec
push
das
in
inc
inc
push
lock
lods
ja
mov
test
pop
mov
in
cmc
mov
cmp
mov
stc
jle
outsb
lods
xchg
stos
iret
pop
out
cmp
bound
dec
sub
rsqrtps
xchg
repnz
clc
push
or
adc
sub
sub
das
icebp
push
data16
je
xor
rorb
sahf
xor
xor
mov
dec
mov
sub
xchg
mov
pop
shr
jnp
mov
daa
xor
sub
cmp
dec
test
pop
loop
lods
repnz
push
mov
inc
negl
sti
mov
ja
adc
insl
decb
les
sarb
inc
in
bound
test
shl
pop
cmp
jl
and
xchg
adc
cs
inc
mov
sbb
addl
mov
sub
in
rclb
mov
and
jl
push
mov
cmpl
mov
inc
push
rorb
xlat
push
add
mov
scas
xlat
mov
push
stos
popa
cmp
inc
pop
pop
jecxz
fmuls
fstpl
fcoms
insl
push
xchg
mov
cmp
mov
ljmp
and
add
mov
nop
lods
xchg
xor
cmc
jbe
dec
aad
jns
push
and
test
cwtl
lcall
cmp
xchg
jg
sarl
push
loopne
xor
and
mov
xchg
js
pop
xchg
dec
faddl
and
fsts
das
xor
stos
sub
mov
cmp
jo
dec
jb
loop
push
push
xor
fnstenv
gs
cmp
sbb
or
out
pushf
gs
inc
call
std
mov
leave
std
outsb
xchg
int3
mov
inc
loop
pop
xchg
fadds
adc
sbb
std
push
xchg
repnz
sahf
stc
add
mov
jecxz
adc
jg
add
mov
sbb
insl
add
repz
ret
mov
mov
and
pop
mov
sahf
pop
cmp
pop
push
mov
adc
add
push
jae
cmp
xchg
or
push
jno
out
imul
and
bound
xor
sbb
jle
icebp
xchg
push
lahf
lds
adc
jmp
subb
sbb
in
inc
fimull
cmc
call
pushf
mov
and
lret
movsb
lret
cltd
dec
or
inc
xchg
adc
stc
sub
mov
daa
or
jo
data16
and
aad
shll
shlb
std
sub
sar
mov
adc
mov
jne
mov
pusha
add
mov
andl
adc
movsb
cmp
inc
jb
mov
rcrb
push
sahf
xchg
iret
adc
pop
mov
movsb
arpl
loop
fdivp
imul
and
pop
ret
pusha
pop
call
lods
sbb
outsb
pop
repz
hlt
mov
inc
sti
and
and
sbb
outsl
nopl
test
inc
aaa
outsb
mov
dec
fcom
jp
sub
idivb
pop
sahf
mov
mov
pop
pop
push
mov
jl
mov
jne
popf
and
mov
xchg
ret
aaa
pop
lahf
jae
adc
mov
daa
mov
push
aad
sub
sub
inc
push
mov
hlt
cmp
lods
lahf
mov
mov
inc
aam
loop
xchg
shlb
jecxz
lret
sbb
adc
pop
pop
dec
dec
jbe
jmp
daa
imul
rcrb
xchg
daa
iret
lods
or
repz
std
mov
out
xchg
push
inc
push
lds
leave
xchg
test
jno
pusha
or
xor
fmul
enter
and
cmc
push
and
ds
sbb
test
push
movsb
mov
add
popa
dec
sub
sbb
cmp
rorb
sbb
xorb
insb
push
mov
cmpsb
mov
fistps
mov
mov
iret
pusha
xchg
call
repnz
lods
imul
xor
lds
ss
dec
testl
xor
hlt
shlb
daa
xor
push
rcr
sets
sbb
add
dec
pusha
pop
loope
push
sbb
jge
jecxz
dec
es
xchg
pop
test
call
idivb
mov
push
mov
movsl
outsl
or
data16
fisubs
mov
das
out
loope
inc
sbb
mov
imul
leave
gs
test
dec
add
adc
push
addr16
pop
or
push
push
push
push
stos
add
shll
push
ljmp
dec
hlt
stos
sbbb
xor
push
mov
cmpsb
or
cmpsb
or
nop
ret
addl
repz
xor
addr16
cmp
mov
or
add
sub
jp
add
inc
sbb
in
push
sarw
outsb
lcall
push
out
mov
sahf
ljmp
stos
mov
mov
and
or
mov
add
test
push
sbb
or
sbb
or
xchg
loopne
mov
sbb
mov
cli
push
mov
pop
loop
and
cmc
mov
lret
jg
or
mov
dec
cmp
adc
clc
mov
ret
jl
inc
les
aad
test
shl
cmp
ja
popl
pushf
insb
mov
mov
add
dec
xchg
fmulp
sub
test
and
mov
icebp
repnz
jne
jecxz
xchg
add
aad
icebp
sub
jns
push
pop
sahf
inc
inc
add
mov
fiaddl
jmp
inc
adc
jo
adc
pop
cltd
mov
mov
icebp
js
jbe
rorl
mov
ljmp
cmpsl
sub
cli
stos
inc
mov
arpl
stos
repz
mov
cmp
xchg
jb
hlt
sub
sbb
hlt
es
ljmp
das
shll
aad
aas
xor
pop
and
lret
cmpsb
jp
adc
dec
mov
hlt
rolb
xor
adc
mov
jae
stos
scas
push
xor
or
adc
fiadds
pop
roll
add
mov
cmp
cwtl
mov
lock
mov
and
lods
mull
cltd
add
std
cmpsl
shll
stc
mov
repz
cmc
xor
cld
adc
and
lahf
movb
jp
ret
jae
loope
pop
cld
jp
adcb
fs
sub
sub
fdivrs
cmovb
outsl
ss
push
int
xchg
shl
dec
inc
push
mov
lcall
les
insl
ffree
mov
sub
movaps
stc
sub
fdiv
cs
jbe
ret
mov
dec
idivb
sbb
pop
sbb
mov
pop
and
or
jne
rolb
lahf
or
imul
sub
inc
arpl
mov
xor
enter
dec
sti
sbb
divb
jmp
and
mov
mov
mov
aad
and
nop
lret
add
inc
lock
lea
int3
repz
add
ss
cmp
pop
dec
pop
adcl
cld
sbb
dec
xlat
scas
lods
pushf
popf
sti
xchg
in
mov
push
bound
data16
sub
adc
ja
inc
lcall
or
aas
mov
pop
mov
xorb
mov
and
push
sbb
fists
cmp
cs
outsl
xchg
ja
cmpsl
cmp
ror
jne
outsl
aam
int3
xchg
repz
pushf
jns
shll
sbb
xchg
popf
pop
je
push
sbb
aas
adc
popf
jle
nop
sub
jb
test
pop
aad
in
ret
loopne
les
jg
hlt
mov
les
mov
pop
lahf
xlat
fistps
lcall
iret
shlb
jmp
xlat
pop
lret
pop
clc
popf
mov
push
mov
add
fsts
inc
xchg
lds
xlat
pop
test
add
daa
pop
mov
dec
in
test
adc
leave
inc
ss
mov
cmp
mov
mov
and
lock
cmp
fucom
ret
sub
and
dec
movsl
jb
aaa
inc
push
ret
iret
mov
push
fbstp
and
lret
gs
mov
sub
popa
cli
shlb
pushf
in
mov
inc
adc
scas
ss
repz
ja
lret
sbb
js
cmp
xchg
repz
movsl
mov
scas
fwait
mov
pop
shrl
pop
lret
and
xchg
lds
xor
xchg
cmp
fistpl
inc
leave
mov
and
pushf
out
in
cmp
lds
jmp
lahf
xchg
mov
enter
jecxz
adc
sarb
jmp
mov
adc
xchg
cmpsb
jp
outsb
inc
xor
xchg
adc
lock
stc
in
dec
mov
pop
cs
sti
sbb
inc
inc
sub
aas
popf
xor
mov
enter
adc
jl
bnd
xchg
ffreep
and
pusha
cli
stc
mov
adc
jmp
pop
lods
pop
cmp
arpl
sarl
add
aas
nop
inc
sub
adc
test
mov
jae
decl
ret
sbb
pop
push
lcall
popf
ror
xchg
xlat
sub
add
mov
movsb
fistps
sub
loop
and
xchg
ljmp
xor
gs
push
jl
rclb
jbe
push
dec
jb
xchg
mov
jb
sub
mov
adc
mov
outsb
in
sub
sbb
lods
mov
test
pop
testl
push
loop
outsl
add
adc
push
loope
mov
jns
in
lcall
lds
std
pop
pslld
in
lea
rcll
jno
sbb
mov
dec
cwtl
jnp
repz
mov
mov
cmpsl
or
in
movsl
lahf
icebp
jns
cs
jg
cmc
gs
mov
stos
es
movsb
mov
roll
pop
jo
outsb
fidivl
insl
mov
or
data16
divb
inc
lea
mov
mov
loopne
stos
int3
outsl
mov
cmp
std
jmp
lods
daa
lods
cmp
cmp
jecxz
pushf
sub
adc
pop
into
das
dec
mov
mov
gs
cmp
mov
les
divb
push
inc
or
js
pop
and
xchg
nop
xchg
enter
push
je
push
and
ds
inc
jmp
lock
add
pop
mov
cmp
pop
jge
stc
je
inc
push
shrl
xchg
cmpsl
xchg
push
xchg
test
xchg
sbb
test
adc
sbb
imul
ror
add
and
hlt
inc
xchg
jl
fistpll
arpl
repnz
mov
or
ss
and
mov
vpsubusb
xor
push
inc
jbe
rcrl
pop
or
jmp
mov
aam
cmpsb
add
add
lock
fisttps
add
insb
cltd
fnstenv
incb
rolb
sub
fcmovb
sbb
repz
cmpsb
in
mov
add
or
mov
lret
sbb
and
jp
lcall
stc
cld
jge
adc
cmc
clc
jnp
xchg
std
mov
fsts
mov
int3
inc
and
pop
push
cmp
push
sub
dec
hlt
or
push
pop
data16
mov
andnps
jecxz
fs
icebp
push
dec
inc
loopne
sub
iret
dec
push
mov
cmp
xor
cmp
stc
aam
testl
stc
dec
enter
mov
xor
inc
xchg
fists
ficoms
std
imul
mull
sbb
pop
pusha
pop
xor
rcrb
test
out
push
add
ret
jno
push
mov
ss
push
mov
movsl
xchg
sarl
push
fs
xor
sarl
sbb
add
out
push
inc
xlat
and
iret
in
xor
loope
and
clc
push
sbb
and
pusha
sub
lret
icebp
dec
jecxz
fldt
repz
andl
bound
out
imul
aam
sbb
or
mov
ret
xor
cmpsl
add
add
repz
test
dec
xlat
notl
insl
int3
test
test
filds
lea
mov
inc
mov
and
jmp
test
mov
popl
movsl
adc
dec
and
add
pop
mov
stc
jb
repz
jno
bound
aas
sub
sahf
mov
hlt
lahf
sbb
lods
cmp
aas
mov
dec
mov
xor
fwait
adc
js
pop
dec
inc
popf
cmp
ret
lret
sub
addr16
jge
jae
dec
sahf
mov
cli
pop
int3
inc
cwtl
aad
dec
in
loop
in
loop
pop
std
mov
fnstcw
into
andl
gs
repnz
jo
add
jnp
xor
cwtl
push
push
push
mov
fistl
bound
push
xchg
or
and
fiaddl
jo
dec
inc
rol
add
loopne
movsb
pop
out
stos
cmc
inc
mov
sbb
and
jbe
inc
ret
add
add
or
mov
ljmp
ljmp
bound
aam
outsb
shll
out
cmp
or
nop
dec
ret
mov
ljmp
and
dec
dec
xchg
push
jae
cmp
clc
xchg
gs
inc
push
add
es
lret
inc
mov
mov
stos
mov
xchg
mov
adc
int3
stc
in
les
lods
mov
mov
data16
aas
shr
pop
stos
mov
jl
nop
lods
or
cmp
push
push
dec
das
xor
lods
mov
sub
dec
in
add
jmp
xor
add
out
push
orb
lret
cld
rep
iret
hlt
mull
and
pop
inc
xor
mov
jge
testl
in
cmp
cmp
rolb
out
sti
js
xchg
stc
xor
fcomps
add
std
sbb
mov
mov
pop
pushl
jne
jg
int3
ret
cmp
or
pop
inc
je
scas
nop
push
pop
push
jns
xlat
inc
sbb
shl
cmp
cmp
mov
test
das
cld
jno
sub
add
adc
mov
das
adc
dec
mov
push
push
repnz
inc
push
adc
mov
xchg
xchg
add
pop
repz
arpl
aam
mov
xor
inc
in
dec
mov
das
fisubrl
int
int3
ret
xor
imul
mov
sub
adc
xchg
mov
sub
std
xlat
or
mov
jno
push
daa
ffree
test
add
jecxz
fldcw
insb
lcall
adc
fwait
je
dec
pop
jmp
push
push
mov
cmc
mov
sub
pop
jnp
pushf
xchg
mov
insb
cmp
push
lds
mov
mov
fisubrs
test
out
repz
or
add
cmpsb
push
xchg
repz
pop
imul
push
mov
xchg
or
fidivrl
add
cld
adc
pop
pop
xor
cs
andl
cmp
in
cmp
xchg
push
dec
and
dec
xchg
dec
lahf
lcall
add
inc
lea
nop
cmp
stos
push
gs
stc
lock
mov
fistpl
jg
mov
xchg
sbb
test
pop
xchg
xchg
cmp
lods
adc
imul
mov
push
je
bound
enter
mov
call
ss
dec
mov
aam
inc
xor
push
fsubs
jae
or
mov
mov
fs
and
clc
sub
push
dec
outsb
dec
xlat
outsl
or
push
ja
push
mov
into
lcall
adc
outsb
cmp
mov
jae
sbb
in
pop
cmpsl
xchg
call
daa
sub
sub
pop
push
popf
inc
push
jg
and
mov
inc
stos
adc
or
push
into
and
leave
and
aad
jge
cmp
or
rcrl
push
rol
ljmp
cmp
xchg
enter
dec
lret
imul
mov
out
cmp
lods
dec
sbb
and
inc
push
pushf
sub
inc
mov
push
scas
test
pop
out
pop
add
and
and
sub
jp
xor
in
cmp
test
je
mov
xchg
mov
fwait
xor
movsb
aam
push
push
inc
mov
pop
mov
insb
xchg
jne
outsl
outsl
sti
cwtl
push
mov
movsl
shrl
outsl
mov
push
int
xchg
push
repz
adc
inc
mov
sub
pop
jns
sbb
jne
cmpsl
or
lret
jl
sub
adc
ret
and
aaa
xchg
ret
and
into
pop
pop
sbb
outsl
push
sbb
stos
bound
jecxz
xor
fcmovnb
fisttpll
push
jg
loop
stos
inc
push
jo
inc
push
xor
mov
rolb
repz
xchg
je,pt
inc
xchg
cmpsb
enter
rcr
imul
testb
mov
inc
add
lea
repnz
ficoms
push
jo
xchg
outsb
pop
insl
push
xchg
xor
xor
ret
fmuls
mov
int3
jecxz
add
mov
jmp
nop
rcll
jno
nop
push
xchg
movl
sub
pusha
jno
xlat
test
mov
jge
fsubp
sbb
shll
and
fidivs
mov
dec
std
setbe
push
mov
enter
pop
call
jne
cli
cwtl
cli
decl
scas
mov
and
and
fcomps
pop
nop
mov
xchg
ret
call
movsb
and
xchg
sti
add
cli
sbb
out
pop
and
sub
fsubrs
out
hlt
popa
xorb
insb
stos
ss
mov
gs
xchg
lahf
sub
ss
pop
pusha
enter
and
xchg
lods
test
xchg
lcall
repnz
mov
dec
iret
mov
lret
xchg
inc
inc
loopne
ficompl
movsb
mov
lahf
jge
jmp
imul
adc
jl
test
sbb
xor
fistpll
outsb
jno
add
fwait
and
xchg
enter
mov
dec
jle
add
pop
add
mov
mov
jae
cmp
pop
dec
out
mov
mov
fsts
pop
and
daa
sub
cmc
lock
sbb
ja
dec
push
les
fisubrs
orb
or
xchg
sbb
rclb
cmc
or
flds
push
jg
mov
insl
add
aaa
mov
jae
lods
push
outsl
orl
mov
mov
rcr
mov
lods
pusha
das
leave
iret
negl
ret
mov
das
jmp
insb
cld
xchg
std
mov
mov
inc
jno
add
js
stos
mov
jge
push
ja
icebp
sbb
cmp
push
xchg
mov
or
clc
inc
pop
scas
jle
xchg
sub
dec
mov
cmpsl
sti
jne
sub
push
xchg
mov
adc
sub
in
dec
jns
dec
int3
jnp
jno
aas
test
jmp
xchg
test
or
in
je
pop
addl
imul
and
pop
sbb
dec
xchg
and
out
outsb
outsl
sub
fs
or
sbb
sbb
arpl
cmpsl
rorb
fmull
into
lock
add
test
int3
dec
cmp
lea
mov
jl
sbb
std
cmpsb
push
adc
test
movsb
in
lret
cmpsl
lock
scas
inc
fcomip
dec
xor
xchg
dec
sbb
sahf
lret
stos
lcall
jbe
out
dec
cli
xchg
add
mov
add
ret
enter
daa
ja
adc
imul
mov
test
mov
xor
adc
andl
ret
mov
jo
add
dec
ljmp
arpl
out
ljmp
lret
test
je
or
inc
lahf
subl
pop
mov
push
mov
push
mov
inc
call
lock
add
add
push
lods
pop
scas
fdiv
cltd
or
aam
push
sbb
inc
xchg
rclb
inc
mov
and
pop
insb
roll
xlat
mov
mov
sbbb
pop
and
lock
sub
mov
ljmp
jle
jo
mov
das
mov
cmp
pop
mov
sub
adcl
in
mov
cmpsl
subb
xor
imul
push
jle
aad
xchg
mov
fmuls
outsl
repnz
xchg
and
loopnew
repz
push
mov
insb
adc
test
sbb
push
bound
into
dec
mov
movsl
in
lea
popa
pop
sub
pop
mov
and
pop
stos
xorb
cwtl
mov
mov
cmpsl
cli
fsubl
xchg
stc
dec
fadds
add
jns
and
addr16
test
xlat
xchg
cmc
push
xchg
test
popf
rcr
mov
outsl
popf
js
repz
xchg
fs
sbb
scas
ret
or
pop
stos
loopne
aad
rol
mov
in
dec
dec
mov
or
add
lret
or
aas
jns
mov
addr16
jb
stos
mov
movsb
add
cld
xor
push
cmp
push
mov
jnp
and
ds
push
jp
xchg
jnp
ret
jno
ret
fistl
inc
jecxz
xchg
add
pop
aad
xchg
inc
push
xchg
insb
jno
mov
clc
xor
pop
dec
data16
in
dec
xchg
xchg
mov
cli
dec
push
mov
lahf
xor
mov
fcoml
add
decb
cmpsl
jmp
mov
sbb
mov
lret
rcr
in
lods
mov
divl
lods
in
pop
in
sub
add
mov
sbb
and
cmp
sets
pop
sbb
ds
dec
push
hlt
popf
outsl
rcrb
and
push
movsb
sbb
mov
pop
jle
arpl
stos
ficompl
pop
cmp
lret
out
pop
scas
sub
sub
push
inc
inc
mov
cmp
mov
sbb
in
dec
imul
mov
add
pop
stos
bound
inc
or
sbb
push
mov
mov
cmc
push
mov
lods
fs
jecxz
outsb
push
xchg
or
mov
cmpsb
stos
enter
testb
inc
adc
call
xchg
xor
mov
dec
lods
stos
sbb
dec
shrb
adc
in
jns
psubd
inc
pop
stos
inc
jecxz
push
dec
repnz
cmp
push
adc
test
sub
or
cwtl
mov
loop
add
lds
mov
lcall
daa
pop
push
pop
push
dec
out
xchg
mov
or
in
push
in
jae
das
push
sub
daa
stc
rcl
ss
clc
xchg
mov
xlat
sar
push
stc
aad
cmpb
popf
pusha
and
rcrb
in
lahf
or
dec
dec
jno
add
lret
mov
and
aad
jmp
fs
or
int
loope
jl,pn
jo
adc
mov
int3
cwtl
outsb
adc
inc
addr16
xchg
cmp
push
dec
cli
xor
call
or
inc
leave
adc
insb
das
in
mov
cmpsl
out
and
jno
push
mov
jge
in
xchg
fneni(8087
and
mov
pop
cmpsl
mov
inc
or
aas
dec
test
sbb
adc
outsl
test
sub
scas
add
sbb
mov
dec
pusha
push
sub
clc
pusha
push
daa
leave
pop
and
xchg
xchg
xchg
scas
enter
pop
sub
fbstp
xor
popa
jmp
or
dec
popf
mov
add
adc
rolb
jns
imul
shrb
leave
shll
add
add
xor
or
cmp
push
add
mov
mov
xor
stos
js
jmp
or
or
aam
addr16
rorl
arpl
mov
cmpsl
aad
or
mov
push
popf
sbb
jbe
push
inc
cmpsl
mov
and
push
jecxz
xor
fnstsw
push
decl
adc
decb
lcall
dec
out
inc
push
adc
sbb
out
xchg
bound
cwtl
lahf
daa
cmp
icebp
xlat
test
testl
hlt
insl
jp
icebp
sub
addl
or
lods
sub
pop
jecxz
enter
mov
popf
push
jl
lds
adc
jp,pt
push
inc
aam
pop
mov
adc
in
popa
shlb
rol
jno
scas
movsl
pop
imul
pop
xchg
jne
add
lea
adc
xchg
add
cli
or
sti
out
xchg
cmpsb
adc
repz
pop
ja,pn
and
loopne
jns
mov
fisubl
cltd
punpckhdq
sti
add
jle
lds
scas
dec
mov
mov
jbe
out
xchg
jo
repz
jle
pop
mov
mov
sbb
ds
mov
fldenv
sbb
int3
lcall
and
in
mov
mov
mov
aad
data16
pop
or
data16
mov
loop
inc
dec
icebp
fs
cli
xor
xor
ja
loop
xor
les
jle
addl
outsl
nop
adc
clc
sub
mov
int3
std
ja
add
cltd
jl
mov
mov
jp
cmp
sub
int3
pop
xchg
and
orl
arpl
fldenv
dec
cltd
cltd
jnp
sbb
icebp
std
mov
jo
push
popa
add
jmp
push
pop
inc
mov
test
cmpsb
mov
sbb
dec
leave
inc
je
les
data16
movl
or
xor
sub
pop
inc
jb
inc
loopne
das
xchg
out
pop
in
ss
mov
push
and
mov
push
imul
mov
stc
shr
mov
mov
shlb
jp
push
lods
xorb
cmp
jns
out
push
or
insl
sarl
pushf
cltd
outsb
test
mov
push
aad
test
out
pop
inc
add
cmpsl
daa
jp
jo
cmp
mov
lahf
cs
xlat
mov
cwtl
call
mov
sub
push
loop
movsb
repz
push
test
pop
sbb
gs
adc
dec
stos
ret
mov
lock
fwait
out
and
jnp
mov
fwait
aam
fsubrs
add
emms
icebp
sarl
mov
add
daa
arpl
imul
xor
xchg
gs
add
das
ja
fs
ds
xor
mov
add
fbstp
cmp
shll
into
loopne
sub
mov
xchg
imul
into
inc
aad
dec
movsb
xor
frstor
pusha
test
inc
jl
xor
pop
inc
out
pop
pusha
ljmp
mov
push
and
sahf
popa
test
popf
add
cmp
imul
sbb
dec
dec
cmc
in
push
sub
les
in
or
xchg
dec
movsl
or
stos
add
add
std
aad
push
push
addr16
aad
loopne
cmp
xchg
fucom
mov
pop
xor
mov
daa
add
sub
jl
adc
adc
sbb
dec
jb
shll
adc
lods
mov
adc
pop
xor
scas
adc
inc
add
and
pop
add
adc
xchg
ja
push
cwtl
jmp
cmp
jns
mov
leave
shlb
inc
cmpb
xchg
ficomps
insb
lcall
jecxz
lret
add
lret
xchg
cmp
push
mov
je
out
hlt
mov
push
sbb
mov
hlt
ds
fst
jg
pop
push
jne
xchg
mov
aas
rol
fnstenv
in
test
push
mov
xchg
bswap
dec
mov
shr
jle
iret
fistpl
sub
jnp
pop
add
cmp
test
lcall
les
sbb
mov
pop
outsl
pextrw
mov
add
mov
push
ds
add
inc
cmp
cld
and
mov
fwait
in
adc
adc
mov
enter
dec
mov
mov
addr16
cmp
mov
push
dec
popl
es
les
pop
sbb
push
push
dec
dec
pop
xchg
adc
xchg
cmp
mov
daa
push
pop
add
xchg
xlat
outsl
xor
dec
xor
mov
pop
fisubrl
aad
pop
push
imul
adc
sub
jno
xchg
lea
dec
mov
cmc
mov
push
test
stos
mov
je
push
jl
lcall
add
in
movsb
mov
cmpsb
int3
das
cmp
cmp
movsl
sbb
mov
or
sbb
push
psrld
sbb
hlt
xor
lods
fisttps
inc
stc
aad
mov
push
or
lahf
aas
mov
jecxz
xor
cltd
in
ljmp
movsb
in
or
mov
pop
push
sub
mov
mulb
mov
jle
cmp
shr
adc
jbe
mov
push
mov
adc
insb
lcall
adc
inc
push
insb
arpl
popa
pop
or
or
stos
inc
sbb
mov
fdivl
ss
inc
ljmp
pusha
adc
mov
shlb
xchg
pop
dec
sahf
xlat
push
pop
push
xchg
dec
or
shrl
test
adc
dec
shrl
mov
push
lods
sbb
testb
xor
movsb
pop
dec
fcomi
fdivrs
dec
cltd
fcoms
pop
xchg
add
rcll
and
push
into
je
inc
aas
fsubrs
mov
je
xor
popa
mov
dec
push
sbbb
push
ja
xchg
insb
sub
and
cmp
pop
add
nop
cmp
xor
jle
pop
out
pop
jmp
jge
push
adc
cmp
xor
cwtl
fsubrp
daa
xchg
pop
mov
xchg
shll
int
jg
mov
add
insb
je
aas
sbb
shlb
in
enter
ja
bswap
push
dec
cmp
xor
jbe
push
dec
notb
leave
add
cmc
cld
dec
lret
push
adc
mov
shlb
pop
mov
pop
dec
push
fnop
push
jns
idivl
dec
ret
xor
shl
sub
stc
mov
push
fsubl
adc
add
cs
dec
nopl
add
lock
lahf
ljmp
icebp
sbb
ljmp
inc
out
cli
dec
mov
cmp
shrl
test
cld
dec
subb
inc
add
xor
ja
pop
cmp
adc
data16
sbb
dec
lahf
xor
cmp
in
jo
jno
loope
adc
js
in
xor
loope
je
mov
inc
sbb
fiaddl
and
xor
jae
mov
dec
stos
subl
mov
and
outsl
cmp
xchg
dec
sbb
imul
addr16
and
mov
mov
xor
jo
inc
push
out
daa
or
inc
sub
push
xor
js
inc
dec
cmp
jge
and
or
xchg
pop
mov
in
leave
and
adc
out
leave
and
cs
xchg
nop
sti
or
arpl
aaa
jno
xor
jl
xchg
add
pop
and
hlt
mov
insb
fldt
adc
xor
mov
aaa
add
dec
mov
pop
pop
outsb
push
jae
fadd
rorb
mov
add
lcall
aas
sbb
cmp
jge
inc
or
jne
mov
lods
movsb
mov
xchg
xor
mov
sbb
mov
fidivl
add
scas
test
or
jge
pop
ja
pop
imul
adc
icebp
mov
jnp
inc
int
outsb
sahf
push
mov
stc
mov
jge
popf
adc
mov
xor
aas
add
aam
out
pop
or
inc
mov
int
mov
dec
jbe
fisttpll
or
adc
pop
mov
in
lret
ljmp
out
adc
iret
push
mov
xor
adc
lds
lret
mov
jbe
les
mov
mov
test
shrl
subb
xor
xor
enter
mov
add
push
aas
cmpb
adc
add
pop
enter
xchg
pop
fsubr
scas
inc
mov
xchg
lods
inc
inc
mov
xchg
shrb
pop
mov
push
ret
cmc
mov
mov
das
out
or
cs
loopne
push
inc
data16
mov
dec
aaa
add
fcoml
stos
inc
adc
mov
lret
test
jmp
dec
test
bnd
lock
mov
aad
repz
sbb
push
mov
dec
adc
dec
pop
adc
cs
jecxz
fadds
data16
daa
xchg
dec
jg
inc
negl
jbe
push
jg
into
rclb
add
xchg
int3
cmp
inc
test
push
sub
push
or
les
sbb
mov
xor
mov
mov
jmp
fndisi(8087
movsb
into
ss
shr
sub
jbe
outsb
or
sub
lahf
lahf
gs
fstpt
xlat
mov
xor
mov
and
push
int
fwait
ror
lahf
movsb
cmpb
fxch
sti
cmp
dec
push
mov
sbb
ja
fs
lret
repz
ret
rcll
mov
jb
and
mov
xor
iret
cli
sbb
sub
ljmp
in
jmp
in
dec
jle
cmp
mov
adc
jns
gs
mov
jle
nop
and
in
rcr
daa
stc
inc
pushf
push
xchg
test
mov
mov
fstpt
push
stc
xchg
and
test
push
push
pop
cs
xor
movsb
push
xor
lret
pop
push
je
imul
adc
jno
fsubl
je
lods
jb
sbb
lret
mov
in
icebp
dec
jo
add
and
rcl
adc
lds
push
cs
xchg
jo
dec
jnp
sub
cmp
xor
dec
fistps
inc
pop
fildl
aam
dec
leave
mov
pushf
mov
subb
pop
inc
cli
xor
lods
mov
jb
pushf
mov
dec
icebp
mov
mov
xlat
out
ret
xor
fdivs
mov
jecxz
push
lea
fisttps
pop
jo
sbbb
xchg
cmpsl
add
and
lea
fwait
xchg
rorb
cmp
ret
xchg
outsl
xchg
adc
jno
inc
dec
jge
insb
iret
dec
xor
imul
repnz
cwtl
jno
aad
cmpsb
push
daa
test
inc
hlt
jecxz
in
cmpsl
lds
jae
out
xchg
addr16
add
xchg
in
outsl
gs
sbbb
mov
ret
add
push
fucomi
sahf
shll
cmp
add
dec
push
std
repz
jb
sub
mov
sub
dec
jae
push
push
idivb
jne
outsb
in
and
xchg
xchg
insl
pop
std
mov
dec
loop
cmp
pop
xor
lea
in
mov
mov
rorl
js
pop
push
adc
push
in
push
outsb
call
and
mov
loopne
lods
ret
lock
jg
loop
in
lret
shrl
hlt
lods
and
push
sahf
js
xchg
dec
mov
inc
sub
adc
inc
test
pop
mov
dec
hlt
mov
scas
xor
cmp
cmpsb
mov
loopne
push
dec
fsubrl
mov
push
lods
dec
adc
cmp
jo
push
out
lea
xor
les
mov
mov
call
mov
mov
aaa
jmp
push
in
add
hlt
ds
hlt
sbb
hlt
jbe
icebp
xchg
nop
jmp
or
data16
fsubs
cmp
movsb
outsl
sub
jo
and
xchg
jle
mov
jecxz
sbb
ja
and
in
xor
loopne
outsb
daa
sub
push
mov
mov
jb
adc
jns
arpl
sub
inc
pop
mov
cmp
sbb
aas
mov
loope
movsb
sub
adc
add
mov
push
cwtl
jns
push
shl
pusha
dec
fbld
mov
pop
aas
fidivl
imul
int3
mov
xchg
std
pop
xor
ljmp
sbb
test
shlb
iret
fdivrs
rclb
adc
push
pop
sub
jg
out
mov
enter
cmovb
fbld
adc
rcll
xor
imul
xchg
push
test
or
shr
cmp
jl
das
bound
sbb
add
lret
mov
push
inc
subb
arpl
xorb
test
mov
push
xchg
pop
clc
pop
fimuls
dec
fisttpll
adc
push
sub
sub
sahf
outsl
push
test
and
push
push
scas
int
push
mov
subb
daa
and
jno
adc
movsb
mov
mov
popa
out
mov
iret
cld
and
cltd
xchg
je
sub
xchg
cmpsb
lock
shll
fmull
dec
cmp
test
mov
or
cmpsl
xorl
adc
sub
sbb
xchg
adc
sbb
arpl
xor
stc
dec
cmp
inc
les
rcll
ror
aad
rclb
xchg
fs
fstpl
push
jno
inc
push
into
add
data16
shlb
inc
call
je
ja
into
xchg
inc
inc
sbb
jb
stc
dec
stos
repz
icebp
mov
pop
cmp
jae
stc
movsl
movsb
xchg
fs
pop
push
inc
pop
pop
xor
jns
test
ds
lret
fs
pushf
idiv
cmp
xchg
dec
pop
jge
cld
lods
ficoms
daa
add
push
dec
pop
fmuls
mov
hlt
adc
pushf
std
aaa
jle
aad
rcl
push
out
jmp
xlat
fistl
insb
into
test
and
into
je
dec
andl
pop
add
sub
movl
jmp
test
inc
dec
push
cmp
sti
scas
mov
or
int
insl
mov
into
and
insb
popa
xor
aad
fs
jle
or
jb
adc
sbb
and
adc
mov
cmp
mov
clc
cld
test
in
push
cmc
clc
push
pop
fistl
and
icebp
pop
sarl
data16
mov
cli
mov
lods
int3
dec
sbb
shll
stc
lcall
mov
mov
jae
ds
xchg
ljmp
push
jne
dec
push
add
lahf
inc
int3
movsl
lods
movsl
mov
fs
cmp
jge
dec
icebp
adc
repz
jp
or
sub
lea
xchg
pop
pop
sbb
xchg
inc
out
pop
and
mov
mov
out
std
sub
repnz
xchg
sub
add
je
mov
xor
jb
addr16
lods
mov
out
pushf
lcall
push
pop
xchg
hlt
sub
mov
mov
sub
out
jecxz
and
cmpsl
repz
xchg
mov
lock
ljmp
or
mov
sbb
jp
mov
lcall
xor
push
xor
push
js
mov
movsl
sbb
icebp
cmp
leave
loopne
xchg
push
xchg
or
and
sahf
push
mov
fs
fdivl
add
push
pop
adc
and
icebp
iret
ljmp
dec
jne
xchg
inc
je
lods
pop
insl
push
int
or
mov
shrl
xor
ljmp
fcmovne
pushf
cmp
pop
fcmovnbe
jmp
popa
pusha
lods
shl
es
loopne
lret
js
cwtl
sub
fistps
je
ja
out
test
and
lods
push
je
ret
outsl
xchg
imul
cmp
xor
cmp
push
add
repz
cmpsb
jl
mov
jb
mov
inc
pushf
push
enter
xchg
cld
sarl
xchg
pop
lcall
movsl
mov
cmp
mov
bound
jnp
mov
insb
jno
mov
sub
fiaddl
daa
out
mov
cmp
jae
mov
jo
addl
fnstsw
xchg
and
out
test
bound
adc
cmp
lcall
loope
sbb
sbb
mov
je
pop
ja
jmp
jo
adc
jge
ljmp
xor
mov
adc
inc
mov
movsb
xchg
jl
xor
mov
loope
mov
cs
fdivs
adc
outsb
pop
js
into
sti
cmp
out
xchg
add
jnp
icebp
xchg
sub
nop
mov
cld
lret
push
sub
push
sti
jne
push
add
addr16
outsb
mov
adc
jnp
cltd
aad
fistpl
notb
sub
and
or
xor
mov
mov
mov
xor
arpl
mov
cmpsb
test
mov
inc
add
inc
xor
xchg
mov
fisttpl
ret
lret
fcoms
mov
inc
andb
leave
stos
scas
add
je
data16
and
aaa
sub
push
jae
int3
loopne
inc
add
aam
add
sbb
movsb
in
dec
xchg
dec
movsb
orl
das
stc
inc
xor
sbb
lock
inc
lods
bound
data16
sbb
ss
sbb
inc
cmp
push
push
jle
xor
data16
mov
mov
xorl
stos
nop
icebp
xor
sbb
mov
push
mov
xor
lcall
icebp
movsl
xor
je
push
ss
xchg
cmp
or
push
cmp
jb
mov
test
dec
jns
lock
mov
lods
lods
mov
mov
enter
sbb
insl
pop
loopne
dec
fisubs
lea
and
ss
fs
loope
mov
lock
push
pop
subb
into
dec
inc
jmp
add
das
mov
in
sbb
test
scas
xchg
cltd
in
mov
mov
mov
push
or
push
lods
cmp
notb
xchg
mov
cmp
loop
adcb
jne
inc
and
mov
adc
cmpb
mov
hlt
cwtl
adc
mov
flds
push
or
sub
adc
enter
out
add
dec
lock
sub
call
xchg
mov
test
das
mov
inc
push
xor
push
jb
pop
fwait
mov
loope
iret
push
fidivrs
insb
adc
push
xor
fs
stos
xchg
mov
adc
push
jne
test
adc
jmp
adc
pushf
ds
sbb
pop
sub
cmp
mov
jl
ljmp
inc
inc
movsl
mov
fstpt
daa
jne
iret
xchg
idivb
cmp
mov
and
ljmp
nop
por
addr16
decb
aam
adc
push
insb
stc
xor
or
mov
out
xchg
iret
push
fisttps
xchg
jecxz
jbe
xchg
and
flds
dec
fisubs
cli
lock
andb
pushf
clc
adcl
mov
clc
cmp
into
xor
jg
fidivl
dec
jbe
cmp
ret
or
dec
and
mov
cmp
insl
xchg
adc
jns
pop
fidivrl
repz
mov
adc
push
cmp
cmp
insl
ja
push
in
insb
mulb
stos
cmp
les
mov
and
cltd
xor
cmc
mov
into
leave
lock
sub
aam
dec
inc
jnp
and
rolb
pop
test
pop
push
mov
push
ljmp
xchg
popa
jle
mov
inc
xchg
mov
imul
popa
mov
iret
add
cli
orl
mov
xor
dec
insl
inc
adc
dec
inc
pop
xor
test
xor
dec
mov
adc
pop
addb
dec
outsl
movsl
int
orb
xchg
fisttps
add
or
pop
std
or
fildll
pop
push
push
test
in
lods
sbb
lea
push
imul
jb
aad
cwtl
push
adc
scas
aas
pushf
ljmp
dec
mov
pusha
mov
xor
xor
sahf
pop
idiv
iret
push
cwtl
dec
jb
iret
xchg
imul
cld
pop
ret
dec
aad
fsubs
mov
inc
fmull
cmp
enter
icebp
out
and
mov
or
jl
fs
divb
mov
std
inc
adc
aaa
loope
sti
ljmp
jno
mov
std
std
adc
sbb
icebp
xchg
inc
mulb
in
xlat
int
xor
inc
ffreep
sahf
hlt
notl
rol
dec
rcrl
icebp
out
mov
imul
cmp
xchg
pop
cmp
mov
dec
xchg
fldt
inc
mov
xor
js
add
mov
mov
and
pop
cmp
cmp
mov
jg
int
add
arpl
daa
sti
sahf
mov
pop
popf
and
pop
out
ficoms
push
or
testb
add
nopl
movsb
subb
and
dec
leave
xchg
aad
pop
sub
jmp
rcl
sub
roll
ljmp
test
call
push
repz
movsl
je
mov
sbb
outsb
sub
jge
ja
inc
aam
dec
and
cld
lret
divl
or
pop
fisttps
sub
pop
arpl
iret
pushf
mov
pop
je
lock
cmp
cmp
jle
mov
sbb
repnz
mov
push
fisubs
jne
loope
sub
cmp
outsl
dec
loop
cmpb
cmp
mov
les
into
xchg
ret
mov
dec
add
repz
dec
jnp
mov
pop
sahf
xor
xchg
repnz
jg
cmc
lods
adc
mov
cmp
test
stc
mov
inc
or
pop
cmpsl
xchg
inc
mov
mov
iret
daa
push
jo
insb
lds
mov
pusha
aaa
and
sarl
fistl
leave
popa
icebp
ret
add
mov
or
lcall
sub
mov
or
or
xchg
addr16
xor
imul
or
addr16
mov
add
pop
fmul
stos
pop
ds
shlb
pop
mov
and
jecxz
and
jecxz
fstps
cltd
sub
xchg
loopne
mov
push
jl
inc
mov
mov
dec
orb
and
sbb
daa
inc
jle
in
les
add
pop
lret
jmp
sub
push
pop
sub
mov
popf
ret
popf
xchg
cmp
xchg
dec
add
cmpb
dec
gs
dec
adc
cwtl
outsl
andb
popf
dec
add
or
mov
jmp
mov
push
into
add
jno
adc
mov
xchg
sub
mov
mov
test
adc
xor
mov
push
mov
inc
sbb
jnp
fmul
cmpsb
jne
je
jge
es
mov
mov
inc
cmp
jp
or
out
xor
sub
adc
mov
cmp
leave
fstpl
lcall
push
adc
testb
sbb
cli
push
mov
stos
js
shr
cmpsb
pusha
or
fimull
xchg
xlat
add
pop
fists
daa
jo
jge
dec
push
cmp
movsb
sbb
mov
insb
pop
sti
lret
ret
mov
mov
shrb
jbe
pop
jecxz
rorb
adc
jno
test
sbb
mov
lods
movsb
bound
push
and
pusha
daa
subb
push
sub
imul
or
push
mull
lds
push
sub
sahf
jecxz
and
dec
cs
push
mov
mov
ljmp
sbbb
jg
insl
dec
mov
adc
ss
cs
aad
data16
inc
enter
shrl
jnp
sarl
test
ds
pop
pop
xor
jns
out
sub
mov
popf
call
jge
xorb
pop
add
xor
add
lock
push
fstp
add
mov
sti
int3
cs
and
push
gs
ss
les
lret
cmpsl
lahf
push
rolb
xchg
dec
jo
out
push
mov
mov
xor
lcall
gs
sub
lds
int
ss
cli
rcll
sub
adc
jbe
jecxz
lods
lds
gs
fcoms
sbb
cmc
pushf
cli
jne
lods
add
pusha
repz
lret
movsl
sub
xor
stc
xchg
loope
dec
es
push
ja
pop
mov
push
xchg
push
push
shll
outsb
push
xchg
in
dec
fs
inc
xor
add
xchg
into
ret
repnz
and
ja
test
out
jno
xchg
js
leave
mov
pop
aam
inc
addb
das
push
int3
push
push
aam
icebp
mov
repz
and
scas
daa
inc
mov
out
mov
enter
dec
fwait
jne
cli
inc
sar
ret
xlat
jns
icebp
imul
enter
mov
push
adc
push
or
fnstcw
xchg
inc
inc
and
lret
inc
js
pop
mov
jge
into
cmp
shl
sti
push
ficoms
cli
jae
jb
cmp
outsb
imul
pop
mov
jle
inc
dec
xor
or
shlb
out
repnz
and
arpl
xor
jns
sbb
les
adc
cmp
push
mov
xchg
jbe
or
mov
ss
mov
inc
std
xchg
xchg
call
cld
rcll
sub
pop
lock
adc
or
push
cltd
das
test
push
lods
ds
xchg
sbb
ret
iret
jbe
mov
lret
sbb
lret
adc
push
sub
add
mov
xchg
aam
jo
cmpsb
knotb
pop
les
xchg
into
fidivrs
test
mov
cmpsb
adc
sbb
ja
xor
inc
mov
bound
jp
adc
repnz
xor
mov
xchg
pop
in
sbbb
xchg
hlt
lods
add
jbe
test
icebp
jb
mov
outsb
icebp
out
push
js
sub
ljmp
mov
movsl
movsb
cmp
cwtl
pop
leave
je
sub
or
bound
pop
test
jl
mov
push
sub
cli
aad
cmpsl
push
push
push
fadd
test
jb
mov
xor
pop
in
leave
insb
mov
push
fisubs
outsl
push
jae
mov
ret
pusha
mov
sub
arpl
mov
lock
loopne
sti
jmp
incb
mov
iret
aaa
adc
repz
push
dec
out
or
insb
int3
cmpsb
lret
jne
push
out
pop
cwtl
pop
les
mov
mov
xchg
fsubrs
mov
fcmovu
jl
jno
cltd
in
dec
into
dec
sub
mov
xor
jle
mov
xchg
dec
jae
or
cltd
in
pusha
sbb
fisubs
pushf
fisttpl
xor
ja
jp
inc
loop
mov
lods
push
jns
or
aad
in
decb
lock
push
scas
cmp
je
adc
add
int
sti
pop
pop
rcrb
adc
dec
xorps
mov
arpl
inc
jae
fnstenv
pop
call
cmp
jno
lods
out
pop
mov
shlb
xchg
fsubr
adc
ja
outsb
in
bound
test
add
push
push
or
popl
xchg
insb
das
mov
cmpsl
mov
insl
mov
test
push
inc
roll
dec
repnz
insb
loopne
cwtl
xlat
rcll
xchg
test
jl
mov
mov
sti
xlat
iret
xchg
loop
outsl
test
jge
jl
leave
or
mov
mov
xchg
into
pop
push
popf
xchg
imul
popa
push
ss
mov
daa
into
les
jmp
and
test
xor
sub
add
push
nop
pushf
xchg
add
imul
adc
lock
out
or
pop
repz
mov
push
xlat
cmp
add
adc
sub
int3
call
xchg
lahf
cltd
mov
cmp
aam
lahf
fsubp
jl
push
adc
movsb
mov
mov
das
xlat
ror
dec
xor
out
aam
sbb
push
fwait
cli
mov
jp
out
jae
loopne
clc
and
mov
nop
sub
fists
cmp
cmp
shl
and
mov
jge
dec
data16
cmp
inc
mov
and
pop
sub
and
mov
inc
push
push
lock
ds
incb
dec
and
push
lds
push
insb
cltd
xor
ret
jmp
loop
inc
cs
repnz
inc
mov
push
nop
lods
xchg
incb
aas
fidivs
roll
lods
adcl
push
hlt
dec
movsb
xor
add
ret
les
jl
stos
xchg
imul
outsl
lods
cli
mov
fwait
insb
sar
scas
cwtl
in
repnz
arpl
adc
mov
lods
xchg
std
popa
inc
repnz
jo
call
add
sub
jnp
ret
jmp
cmp
add
jle
and
repnz
ljmp
fistl
pop
shll
adc
bound
sub
fs
rolb
js
push
sbb
xchg
shlb
cmc
cld
cmp
xchg
mov
adc
adc
flds
pop
jo
lret
repz
insl
xchg
scas
arpl
jle
sub
loop
rcrl
mov
pushf
test
loopne
pop
inc
pop
in
xor
loopne
jle
bound
pop
addr16
fwait
in
and
push
push
jns
fs
mov
nop
and
dec
adc
fldl
test
dec
out
add
sub
and
fstl
lock
out
outsb
hlt
out
mov
or
lret
out
mov
xchg
fcmovne
push
stos
add
add
shl
cmp
mov
adc
cmpsb
or
nop
icebp
sbb
cwtl
xorb
arpl
pusha
and
xor
mov
fisttpl
iret
out
inc
mov
xchg
adc
or
jp
mov
inc
jl
test
inc
fimuls
xor
jecxz
dec
lea
test
xchg
jmp
enter
push
xchg
lods
popa
aad
push
daa
hlt
in
insl
fwait
test
mov
jecxz
loopne
mov
inc
jns
lock
stos
xchg
inc
mov
push
cmp
xchg
leave
ret
mov
xor
inc
insl
adc
and
fdivrl
jmp
jnp
fs
jmp
pop
jb
ja
lret
loopne
out
dec
and
dec
mov
jp
pop
jo
in
fmuls
adcl
mov
sub
sub
push
aam
sbb
in
pop
mov
pop
mov
imul
xchg
jnp
inc
pop
and
in
dec
lcall
lret
inc
popf
cltd
add
outsb
lods
fstp
std
dec
fldenv
out
je
cmpsl
call
mov
mov
add
sbb
mov
jp
jmp
lods
xor
aaa
inc
adc
aad
div
push
fstl
and
into
test
bound
and
sbb
out
or
ret
imul
in
cmp
jp
mov
out
addr16
fsubs
lret
lds
fs
inc
xchg
and
dec
jp
fstpt
push
cltd
xorb
faddl
or
inc
scas
loopne
and
xchg
clc
test
pop
xchg
fisttps
jle
push
jp
mov
mov
cmpsl
dec
inc
dec
mov
sub
std
xchg
pop
stos
scas
push
in
flds
pop
les
mov
dec
mov
pop
lret
xor
add
adc
xchg
mov
lock
mull
adc
add
mov
lock
pushf
ret
or
icebp
jbe
push
mov
loopne
loopne
mov
movsb
out
mov
mov
mov
push
and
xchg
and
push
xchg
add
mov
ret
push
outsb
sub
push
inc
fmuls
jp
out
mov
loopne
sar
imull
orb
int3
inc
xchg
push
push
jmp
daa
insb
mov
and
inc
lahf
inc
add
push
inc
mov
xlat
movsl
mov
push
std
pusha
mov
pop
mov
dec
mov
and
js
jno
adc
mov
rcll
mov
daa
lcall
cld
test
push
add
pop
cmc
push
aaa
adc
pop
jecxz
pop
jmp
int3
jge
sbb
shll
mov
inc
stos
aas
enter
clc
sbbb
in
sub
mov
out
fcoml
stos
mov
aad
insl
inc
xchg
dec
lcall
stos
ljmp
cmp
cmpsb
push
loope
adc
mov
ret
fisubs
sbb
xchg
fimuls
pushf
jp
push
scas
mov
pop
lea
pop
and
adc
xchg
sbb
and
adc
fwait
dec
lret
sub
icebp
je
js
out
roll
inc
es
sub
sub
cli
mov
xchg
sbb
adc
add
mov
sbb
dec
mov
leave
or
jbe
xchg
adc
nop
cld
das
aad
aad
aad
dec
outsl
scas
push
jle
xchg
add
test
test
lcall
lods
fwait
mov
movsb
and
mov
loopne
out
xor
rorb
sub
imul
add
mov
vmread
cmpsb
add
pop
mov
mov
leave
cltd
bound
sti
imul
or
pop
push
lcall
ss
iret
push
stos
sbb
xor
cmp
stos
xchg
dec
dec
in
xchg
pop
das
dec
add
mov
shll
aad
outsl
rol
mov
sbb
js
cmp
loop
cwtl
and
dec
outsl
mov
fisttps
sub
sti
bound
push
arpl
and
movsl
popa
lock
jg
mov
ja
mov
scas
mov
dec
mov
shlb
fwait
jl
and
outsb
or
ljmp
rcll
testb
daa
push
cli
sbb
push
sbb
jne
jns
in
xor
sbb
jg
out
jecxz
iret
outsl
sbb
or
dec
stos
and
lret
sahf
in
jb
sub
adc
sub
ret
scas
insb
imul
int
inc
pop
pop
dec
jns
cmp
add
into
cmp
pop
sub
add
leave
sbb
add
add
and
cmpsl
idivl
lret
pop
sub
pop
bsr
pop
inc
mov
popw
xchg
es
pop
pop
xor
add
mov
cmp
mov
cmp
outsb
xlat
push
lods
push
mov
fstpt
sub
jg
repz
xchg
lods
rcrb
inc
ja
push
xor
pop
sbb
dec
bound
pusha
stos
das
sbb
mov
sbb
sbb
stos
and
jp
rol
cmp
xchg
into
mov
push
xchg
xchg
das
nop
testb
jb
out
orb
pop
test
and
lcall
jbe
cmp
outsb
push
imul
adc
in
jmp
inc
push
aas
fchs
jne
das
addr16
or
pop
xchg
inc
or
daa
out
loope
push
mov
jnp
bswap
int
inc
and
cmpsb
das
xchg
frstor
das
ret
rclb
nop
loopne
mulb
hlt
lcall
mov
pop
jbe
decb
mov
jae
adc
hlt
jae,pn
sub
adc
pushf
int3
sbb
enter
sbb
inc
mov
ds
popa
or
adc
push
xor
jae
test
push
xchg
aam
addr16
ja
ds
int3
sbb
xorl
jb
mov
out
repz
and
inc
lods
ss
xor
mov
sbb
insl
add
adc
add
in
test
imul
sbb
sbb
cld
aas
push
das
push
xor
rorb
lods
popa
jmp
mov
pop
jge
insb
in
test
inc
fcmovb
imulb
sbb
das
sub
insl
mov
cmp
test
xor
dec
sbb
clc
cmc
mov
shlb
outsb
lds
sbb
popf
in
shrb
add
pop
dec
cs
std
into
cmp
push
inc
mov
mov
popf
jb
jg
or
notl
xor
in
cmp
popa
fstpt
js
outsw
mov
ret
adc
mov
je
adc
leave
lods
mov
cmp
cmp
movsb
out
loope
jmp
imul
add
enter
mov
adc
push
cmp
inc
sarl
xor
xchg
mov
xchg
xchg
jle
mov
lahf
sbb
ret
cmp
push
enter
mov
lock
inc
aas
dec
pop
sbb
stc
mov
bound
sbb
ss
push
jae
cmc
add
and
add
data16
aas
mov
mov
in
xchg
sub
pusha
push
inc
je
cmp
mov
shr
sbb
adc
jo
jbe
movsl
adc
lods
adc
addl
cmp
jle
sti
cmpsl
sub
dec
push
mov
xor
xlat
mov
mov
stos
sub
mov
insb
fnstcw
add
loop
insl
mov
adc
mov
mov
cmpsb
ret
data16
ljmp
xlat
inc
sub
mov
mov
mov
pop
cltd
insb
dec
aam
push
fsts
and
int
push
inc
mov
js
push
jbe
cmp
cmp
mov
inc
pop
popf
pop
sbb
pop
sbb
cmpsb
lret
xor
push
fcomp
les
jmp
push
mov
or
mov
mov
imul
push
mov
shr
sub
add
mov
stos
mov
xchg
mov
or
mov
dec
ja
ljmp
int3
notb
jl
int3
jmp
add
iret
test
pusha
ss
popf
rcrb
icebp
push
pusha
cs
jno
xchg
dec
es
sbb
sbb
out
or
xorb
mov
jne
adc
hlt
push
mov
xchg
mov
iret
outsl
push
movsl
xlat
ja
push
jb
stc
outsl
clc
push
jb
jg
or
pop
inc
pop
xchg
fsubrs
push
inc
jae
mov
mov
lods
cli
imul
lret
dec
popl
enter
fmuls
sub
cmpsl
in
inc
enter
mov
pop
push
cmp
pushf
cmp
daa
add
mov
adc
aad
push
cmp
jo
or
jb
subb
sub
jo
adc
xorl
leave
ret
or
inc
mov
or
rcrb
or
pop
dec
stc
divl
mov
adc
jno
scas
mov
sub
daa
rcll
cmp
cs
dec
loop
xor
fdivl
mov
xor
mov
pop
fucomp
shrb
pop
adc
cli
loop
shll
mov
jmp
sbb
sbb
add
sbb
push
cmpsl
in
idivb
imulb
sbb
cld
push
cmovb
dec
mov
call
inc
outsl
sbb
jl
imul
mov
adcb
adc
out
out
cwtl
mov
add
lret
mov
mov
arpl
jle
jns
xchg
add
pop
ljmp
sub
inc
ret
dec
stos
jmp
push
dec
icebp
pop
sbb
or
mov
jg
xchg
sub
xor
int3
stos
or
inc
mov
in
bnd
fdiv
add
in
dec
inc
cwtl
ja
inc
out
xchg
xor
je
es
xor
rorl
ret
ficoms
stos
dec
pushf
sbb
adc
in
xchg
out
mov
cmp
das
lahf
mov
mov
mov
lods
loop
xor
jg
mov
or
sbbl
push
dec
lock
mov
inc
pop
cmp
cs
out
cs
mov
mov
sbbb
das
xchg
pop
arpl
mov
cmp
and
cmp
xchg
int
push
sub
cvtps2pi
adc
sub
cmc
sbb
scas
push
or
adc
into
or
popa
sti
lahf
out
add
arpl
pop
pop
das
or
call
or
sti
inc
call
fisttpl
adc
int
fdivrp
pop
lret
arpl
das
push
les
rclb
sbb
xorl
jb
scas
loop
mov
loopnew
adc
xor
icebp
lds
insb
xchg
hlt
ret
and
pop
or
filds
push
inc
ja
les
push
cli
dec
fstpl
lcall
mov
jp
repz
dec
fwait
aaa
mov
mov
insl
insl
dec
arpl
clc
cmp
and
fmull
adc
mov
jns
test
enter
outsb
inc
mov
pop
addr16
jle
fldt
scas
addr16
jae
dec
mov
push
icebp
lods
lea
addr16
xchg
insl
jp
loopne
ljmp
and
push
icebp
cmp
pop
cs
xor
xchg
roll
xchg
push
popf
and
shr
das
inc
xor
imul
xor
inc
mov
repz
cmp
mov
mov
inc
mov
mov
sahf
mov
outsb
sbb
das
or
mov
subb
rcrl
aas
imul
sbb
push
fbld
xor
dec
lods
sarb
test
rcrl
dec
mov
ljmp
pop
inc
add
mov
lea
sahf
inc
mov
xor
cmpsb
mov
pusha
inc
add
pop
dec
pop
insb
js
outsl
std
mov
loope
mov
rcrb
push
roll
out
push
aas
sti
dec
stos
cmp
pusha
fldenv
inc
cmp
jb
sbb
push
gs
or
ljmp
push
jecxz
stc
dec
in
dec
jmp
cwtl
cmp
sub
inc
arpl
and
mov
lcall
jg
push
iret
jle
out
sbb
dec
fptan
scas
sbb
fisubl
stc
push
mov
push
xchg
loop
inc
push
sub
mov
inc
adc
stc
popa
jo
ja
xor
add
push
jbe
shrb
adc
or
jecxz
arpl
mov
push
mov
call
dec
add
rorl
jp
mov
mov
xlat
ds
add
sub
push
insl
adc
aam
jge
xchg
pop
ja
sbb
repz
add
lret
lock
add
in
mov
cmpsl
jae
jecxz
iret
jbe
inc
xlat
movsb
aad
push
ret
jmp
add
pop
js
jb
dec
rcr
mov
or
jg
aad
push
push
repnz
mov
test
shr
mov
mull
fs
push
test
sbb
or
adc
loope
out
add
xchg
jmp
inc
xchg
outsl
nop
insb
adc
or
sbb
fwait
jno
lods
adc
push
inc
decb
andb
inc
dec
loope
add
mov
fstpl
add
call
xchg
and
push
sub
sub
aaa
in
popa
sub
sti
mov
jge
fildll
dec
inc
jmp
sub
inc
sbbl
mull
rolb
jae
or
fcmovb
cmp
movsb
out
jmp
int
pop
shlb
cmp
shll
sbb
ljmp
xchg
xchg
fwait
mov
sub
xorl
popa
leave
or
cmp
outsl
and
mov
lea
adc
sbb
leave
jg
pop
jbe
pusha
outsb
push
mov
dec
stc
out
push
jmp
cli
cmp
pop
jbe
xchg
call
mov
test
negb
adc
xlat
jne
mov
dec
pop
adc
inc
cmp
mov
cmp
push
push
sub
mov
popa
shrb
lret
cmp
repz
pop
fcoms
xor
les
xchg
or
movsl
adc
stos
sbb
xchg
pusha
stos
leave
inc
out
jo
sbbb
pop
pop
mov
push
mov
call
jle
jmp
sbbl
lret
int3
dec
inc
cmpsb
jnp
xor
mov
roll
xchg
fidivrs
mov
add
jge
mov
xchg
das
xor
iret
cmp
or
jmp
add
imul
mov
inc
mov
mov
xlat
pop
mov
jne
int
imul
mov
jne
mov
addl
pop
stc
or
sbb
sub
cs
stc
mov
fimull
addr16
fwait
xchg
fbstp
push
cmp
add
pop
lock
jge
ljmp
arpl
mov
dec
mov
rorb
add
std
pop
sub
add
dec
inc
fldcw
mov
in
jae
cmpsl
xor
sub
mov
mov
in
and
dec
sbb
flds
stc
pop
xor
subb
add
shll
inc
out
add
mov
repz
mov
jp
mov
rcr
jns
adc
addr16
jne
xor
mov
mov
pop
and
push
scas
dec
jp
sbb
insb
and
insb
fldt
or
mov
jns
mov
adcb
xchg
pop
sub
add
aas
iret
fsubl
jmp
inc
mov
pop
fldcw
adcl
sub
sbb
lds
adc
aad
cmpsl
lods
icebp
mov
pusha
imul
inc
mov
in
or
sbb
push
in
mov
scas
sti
add
bsr
repnz
jo
inc
mov
cs
in
ret
pop
or
fisubrl
dec
and
fwait
scas
lcall
cs
in
push
jmp
xor
sub
fmull
xor
xchg
mov
push
inc
and
dec
sub
sbb
lea
jno
pop
cmpsb
push
sbb
into
inc
leave
cs
push
xchg
pop
insl
cmp
mov
scas
scas
loop
add
cltd
add
lea
call
dec
push
loop
jb
jp
jb
pop
mov
adc
in
stos
lods
lds
cmp
xorb
add
stc
or
inc
sbb
ret
lret
cmp
std
ljmp
scas
fcmovnu
pusha
dec
fnstcw
aam
jg
ja
sti
cmp
jb
cli
in
inc
pop
test
mov
jmp
jb
aad
outsb
fdivl
sub
inc
gs
cltd
pop
and
inc
mov
xor
mov
scas
mov
ss
popa
orb
jp
and
jo
in
clc
rorl
dec
lods
and
mov
mov
aad
push
les
inc
push
movsl
fisttpll
mov
jns
pop
sbb
dec
aad
pop
inc
add
xchg
and
or
mov
stos
jae
shlb
jb
mov
mov
and
out
sub
push
icebp
mov
and
inc
shr
sub
mov
mov
test
inc
xor
mov
adc
jne
mov
jae
xlat
adc
sub
out
bound
xlat
push
sbb
sub
jno
pcmpgtd
mov
pop
add
in
in
ljmp
jo
les
mov
mov
test
das
scas
cwtl
inc
pop
cmc
loope
ss
fcomps
push
stos
shlb
sahf
in
or
xor
adc
push
dec
lods
stc
stos
idivb
cmp
loope
je
mov
dec
mov
loop
jo
mov
addr16
xchg
test
leave
movb
hlt
cmpsb
rcrb
cmp
pop
inc
shrb
and
rcrl
sbb
imul
pushf
pop
lret
dec
frstor
jb
and
sbb
mov
pop
push
jne
ljmp
inc
push
mov
jp
dec
sbb
int3
mov
jge
fdivl
lock
cmp
lods
inc
stos
pushf
pop
ret
inc
stc
inc
nop
js
xlat
cmp
fwait
movsl
and
mov
or
lods
pop
sub
pop
je
stc
aas
outsl
sbb
xor
fwait
mov
adc
in
mov
push
lahf
mov
and
jae
popa
sub
jmp
repnz
mov
cmp
and
pushf
xchg
pop
aaa
adc
xchg
test
js
dec
push
or
aaa
fcoms
inc
repz
repz
imul
push
enter
int
push
pop
bound
lock
jnp
xchg
fs
test
sub
mov
in
or
or
or
pop
test
sbbl
cmpsl
push
push
scas
daa
call
xor
pop
cmp
loope
dec
xchg
pop
fisttps
and
mov
cmp
lret
cld
fimull
sbb
mov
dec
pusha
push
dec
xlat
pop
xor
enter
nop
iret
inc
repnz
repnz
test
sub
les
lahf
sub
xor
dec
or
outsb
mov
test
dec
in
mov
mov
mov
rcl
add
imul
dec
faddl
pop
xor
sub
push
mov
jo
sti
pop
adc
and
aaa
jns
adc
add
lods
xor
inc
fcmove
sbb
mov
cs
shlb
les
outsb
xacquire
inc
aaa
dec
jp
mov
lret
fwait
rol
repnz
xor
icebp
aaa
xor
jecxz
cs
nop
mov
loop
sub
test
push
inc
add
xchg
push
rcll
add
aam
or
sbb
mov
sysenter
add
xor
aam
mov
xchg
mov
pushf
mov
test
enter
pusha
fcmovnbe
repnz
shrl
push
push
dec
add
lods
sbb
cmp
adc
lcall
or
jb
push
pop
inc
cltd
ret
outsl
iret
pushf
push
test
add
rcr
ret
pop
cmp
adc
push
cs
js
mov
pop
movsl
cltd
sbb
lret
cmp
roll
or
ret
incb
pushf
push
jge
movsl
push
in
ds
or
leave
xor
aas
pop
js
mov
add
mov
ja
movsb
hlt
enter
and
and
jbe
les
sbb
out
lcall
jno
jle
push
or
xor
xchg
inc
ljmp
cmpb
js
cld
jne
xor
lahf
mov
ss
xor
add
xlat
cld
pop
and
jbe
out
cwtl
in
sub
fmull
push
cltd
xor
fmul
nop
inc
mov
push
mov
pusha
sbb
sbb
test
lea
xor
dec
push
shll
or
push
dec
repz
push
push
insb
les
xchg
fldt
sbb
cmp
push
cmc
pop
pop
test
dec
push
jecxz
adcb
or
mov
stos
add
add
mov
sar
outsl
mov
sbb
out
jns
repnz
cmpsl
fcmovu
lock
outsb
inc
pop
rcr
push
inc
cli
sbb
lret
sbb
sbb
hlt
cmpl
xchg
and
push
iret
les
add
xchg
jle
addr16
sub
lcall
jl
add
es
or
xor
jne
cmpsl
push
add
push
and
call
jno
insb
or
insb
ss
mov
ret
add
jecxz
dec
pop
pop
xchg
sbb
mov
shll
leave
gs
xor
mov
jmp
or
xor
and
dec
lahf
insb
cmpsl
xchg
jg
jne
ja
or
push
mov
or
pop
adc
loope
imul
or
or
inc
xor
pop
incb
push
aaa
imul
mov
popf
test
out
daa
sbb
imul
pop
cmp
mov
call
lcall
dec
xchg
bound
dec
mov
leave
lods
and
icebp
jne
jb
lcall
lcall
jg
jns
xchg
sbb
xchg
int
dec
dec
loope
imul
fidivl
mov
ljmp
adc
push
sbb
test
xchg
mov
arpl
enter
fimuls
inc
pop
stos
cmc
cltd
and
scas
in
jne
push
push
pop
add
push
clc
dec
repz
test
popf
ffreep
pop
sahf
xlat
jbe
ja
and
jle
es
xchg
push
mov
mov
lret
dec
pop
lods
adc
push
push
or
cmpb
dec
inc
jns
cmp
xchg
push
fcompl
es
out
ret
mov
imul
cmp
cli
sub
aaa
cmp
adc
scas
push
jnp
out
pop
outsb
std
movsb
test
push
adc
stc
scas
adcl
arpl
repz
cwtl
call
xchg
into
lcall
ret
adc
mov
bound
enter
xor
int
pop
sub
in
inc
or
cmpps
xchg
and
cli
repnz
gs
and
pop
orb
sbb
enter
lea
out
popa
mov
enter
or
and
clc
jnp
mov
add
fnstenv
mov
sub
sbb
in
popa
sub
sub
iret
add
mov
mov
or
cli
sbb
xor
xchg
xor
jle
fsts
lds
push
cmpsl
push
insl
adc
scas
dec
call
inc
inc
jge
ljmp
aam
loope
xchg
ja
int3
push
popf
push
pop
pop
mov
sarl
xor
aam
push
inc
jne
or
and
bound
mov
repnz
inc
jle
dec
or
add
fistpll
mov
in
sbb
adc
xchg
add
das
mov
cwtl
ret
jno
jns
push
jp
ja
jne
mov
xchg
hlt
loop
add
inc
cwtl
js
jl
xchg
pop
popl
js
mov
pusha
repz
gs
std
inc
movsw
adc
pop
inc
das
test
sub
gs
xor
ret
pop
out
in
mov
in
clc
ss
inc
imul
and
and
adc
hlt
mov
in
and
scas
xchg
jecxz
xchg
pop
add
je
add
pop
imul
lret
pop
or
add
mov
call
mov
nop
mov
push
xor
int3
into
lcall
adc
cli
adc
insl
cs
xchg
push
fmull
sbb
xchg
ja
pushf
push
inc
stos
add
xchg
cmp
sub
push
sub
mov
push
mov
jo,pt
pop
imul
aas
pushf
inc
imul
push
mov
cli
mov
xor
jp
cld
push
ljmp
and
jecxz
pop
xchg
lock
popa
mov
cmpsl
ficoml
cmc
sarl
push
mov
jmp
jg
bound
jns
inc
sbb
push
cmp
dec
xor
adc
and
enter
popa
imul
sbb
push
imul
add
push
iretw
insl
mov
pop
sbb
mov
out
sahf
dec
call
lock
imul
sbb
bound
out
push
xor
adc
mov
dec
sahf
push
pushl
les
xchg
xor
sarl
xor
mov
cmp
or
push
insb
xor
pop
rcll
xchg
sbb
aaa
je
add
outsl
xor
jbe
lcall
bound
sbb
push
inc
jne
inc
loope
jne
fsubr
sub
mov
stos
inc
add
xchg
sarb
xor
scas
in
xor
dec
fcoml
cmp
cmpsb
arpl
xor
insl
enter
jae
pop
add
mov
mov
sbb
push
sbb
das
adc
lahf
mov
mov
mov
shrb
add
mov
lock
sbb
arpl
int
xchg
insb
xor
and
lret
mov
sbb
pop
mov
int3
sbb
pop
inc
aaa
cmp
int
inc
in
data16
mov
mov
pushf
cmc
pusha
sub
cmc
sub
adc
cmp
jmp
pushf
stc
test
sub
sbb
cmpsb
inc
dec
ljmp
jno
icebp
dec
adc
test
aad
outsl
jae
negl
mov
aam
pusha
pop
test
inc
lods
dec
sarb
jbe
inc
imul
jle
mov
fstpl
xchg
add
dec
gs
push
push
out
jo
adcb
jg
adc
sbb
roll
pop
jnp
enter
cwtl
movsl
data16
sarb
and
jmp
inc
lea
mov
cmpsl
cmpsb
or
scas
or
std
push
pop
or
cwtl
int
call
pop
xlat
mov
or
out
adc
pop
push
sbb
or
mov
xor
sbb
test
cli
push
ds
popf
loopne
iret
and
gs
adc
adc
stc
mov
scas
out
rcrl
pop
cltd
sahf
frstor
add
cli
fcmovne
es
arpl
adc
jo
push
ds
in
maxps
inc
mov
lods
adc
out
loope
and
mov
cmp
xor
or
int3
insl
nop
xor
pop
cmpsl
sbb
int
inc
mov
xchg
pop
scas
ret
xchg
and
sahf
rcll
xchg
inc
cltd
addr16
mov
mov
xor
int
imul
sbb
insb
imul
js
lcall
aam
repnz
push
loope
imul
testl
test
cmpsl
les
jne
jne
add
inc
call
dec
lcall
decb
xor
popf
bound
stos
pop
xchg
add
push
xchg
xor
dec
sbb
pop
xor
movsb
inc
stos
shl
cld
pop
push
sbb
cmp
pop
ja
add
arpl
inc
int3
movsb
xchg
ret
xlat
movsl
fisubs
jo
aam
push
lock
lds
out
fwait
mov
cmp
or
pop
loope
jns,pt
sbb
orl
dec
xor
icebp
shrb
jg
xor
or
inc
sbb
lret
jge
dec
push
iret
popf
and
iret
movsb
mov
and
outsb
mov
in
enter
rcrb
rorl
dec
cltd
inc
dec
int3
cmp
or
lcall
mov
inc
push
dec
mov
pop
dec
dec
and
jo
push
cld
sub
int3
jno
imull
and
iret
pop
inc
or
dec
sub
xor
sbb
add
push
data16
sub
add
and
das
mov
ljmp
inc
pop
sahf
jo
push
mov
xor
rcrl
enter
popf
loopne
stc
aas
test
mov
fiaddl
xchg
leave
mov
mov
pop
in
mov
fbstp
or
add
xor
incl
pop
mov
jo
cltd
cwtl
sub
jno
out
lcall
adc
imul
aad
dec
in
aam
addb
dec
xchg
clc
sbb
mov
shrb
pop
xor
stc
pop
ret
pusha
cmp
clc
mov
inc
mov
dec
and
ljmp
insl
adc
adc
out
fs
je
out
jno
mov
adc
fisubs
xchg
jmp
and
push
mov
pop
push
test
cmpsb
xchg
lods
or
xor
cmpsl
mov
lds
mov
and
sarb
ret
jb
xchg
mov
pop
adc
dec
or
and
std
mov
stc
pop
and
cmp
clc
xor
icebp
aaa
repnz
rclb
movsl
and
mov
jle
jl
pop
inc
jno
orb
xchg
xchg
aam
int
ror
push
stos
xchg
ds
popf
popf
loopne
jmp
push
out
xor
push
adc
jle
pop
mov
sub
std
sbb
stc
mov
sbb
or
mov
sahf
movsl
push
in
sub
loop
imul
pop
mov
add
sbb
pop
mov
fimuls
lods
or
dec
repz
sti
xchg
sub
cmp
xchg
in
sub
cld
push
or
cwtl
enter
or
xchg
dec
test
adc
jns
pop
cs
cmp
add
pushf
push
ret
lcall
jmp
outsb
xchg
adc
push
shr
sbb
int
int3
sbb
aas
adc
mov
pop
fcoms
xor
add
mov
loopne
inc
test
mov
add
imul
and
in
leave
shl
push
push
mov
push
lret
xchg
in
xchg
cmpsl
mov
stos
xchg
lret
rclb
lds
ret
add
ss
cmp
xor
mov
rolb
mov
xchg
addl
das
push
xchg
lds
inc
pop
aam
cmp
int3
xchg
inc
idiv
xor
mov
or
pop
cmpsb
mov
cmpsl
pop
lret
loope
adc
add
mov
jno
xor
push
jne
and
sub
xchg
movsl
push
xchg
lcall
xchg
pop
lea
jg
cld
pop
inc
adc
and
cwtl
mov
sub
adc
cmp
inc
mov
jecxz
dec
in
sub
add
adc
cwtl
mov
xchg
test
or
cmp
xchg
cmp
aas
mov
nop
and
lods
mov
sbbb
jge
mov
gs
xchg
push
jno
loop
loope
pop
push
dec
popf
sbb
fldt
ja
pop
std
outsb
adcl
std
xchg
jl
mov
cmpsl
aaa
popf
inc
rclb
in
or
lds
fwait
xchg
mull
mov
jo
in
sub
mov
xchg
jmp
sarb
pop
or
or
sub
add
hlt
jp
adc
imul
mov
mov
xlat
push
and
cmpsb
cwtl
inc
adc
cmc
add
or
js
cli
jl
pushf
push
sub
and
pop
insl
ja
jl
sub
ret
stc
out
push
ud1
int
push
cmp
or
nop
popf
sbb
pop
mov
daa
xchg
add
jns
aaa
pop
pushf
and
jecxz
shr
dec
mov
sub
pop
cltd
aaa
scas
add
push
inc
sub
push
cmp
addr16
and
jmp
add
push
pop
mov
dec
fildl
sub
push
imul
push
addr16
and
pop
push
mov
scas
test
mov
rorl
push
mov
push
cmp
pop
ret
sbb
movsb
mov
xor
adc
push
lret
sub
pushf
stos
ds
push
inc
nop
xorb
je
adc
mov
enter
cmp
or
and
mov
inc
dec
pop
mov
pushf
pusha
or
xlat
mov
add
inc
aad
mov
pop
mov
cwtl
or
jnp
in
cmp
and
insb
or
dec
push
ret
popf
ljmp
push
sar
inc
insl
xchg
push
adc
repz
ds
push
mov
mov
xor
cmp
mov
adc
outsb
xor
in
add
test
dec
scas
pushf
or
cmc
xchg
in
call
pop
push
add
mov
mov
dec
pop
orb
pop
jbe
push
inc
fs
pop
outsb
xor
jne
into
or
jg
xor
fcompl
xlat
inc
push
stos
ljmp
xchg
push
xorb
xchg
js
sub
jp
push
mov
jmp
repz
call
push
inc
mov
mov
test
lods
sahf
pop
ret
fs
stc
add
or
pop
testl
cltd
sub
dec
jae
ds
jl
sar
lret
lahf
cmc
movsb
repnz
jle
xor
adc
icebp
scas
lds
repnz
sub
subb
aaa
cmp
pop
insb
or
das
fdivrl
arpl
xor
dec
repz
mov
add
les
pop
ljmp
mov
lcall
jl
mov
xor
shll
pop
add
test
es
and
cmp
sbbl
fmull
inc
arpl
mov
mov
push
adc
push
cmp
add
mov
out
leave
shl
test
lea
push
xchg
sub
sub
mov
out
sarl
inc
push
idivb
jb
fsubrl
enter
int
xor
push
fwait
pop
cmp
adc
test
inc
or
jae
dec
inc
lock
and
sbb
pusha
mov
scas
add
xor
inc
mov
aad
cmp
fwait
pop
les
bswap
dec
sub
sarl
sub
icebp
fistpll
ss
popf
mov
xor
rcll
adc
fiaddl
cs
push
mov
pop
xor
stos
mov
aad
mov
lret
adc
movsl
loope
repnz
outsl
lods
push
add
daa
mov
or
xchg
in
adc
imul
push
std
fs
adc
jg
mov
jmp
es
bound
push
xchg
cmp
gs
addr16
or
frstor
icebp
sbb
out
pop
cmp
lret
neg
enter
roll
in
aaa
mov
in
inc
mov
mov
call
lods
sbb
int
or
pop
xlat
aaa
sub
sub
int
sbb
stos
aas
in
mov
and
xchg
cmp
adc
mov
mov
or
insl
ss
lds
divb
cwtl
dec
jmp
addb
jecxz
mov
pop
inc
sbb
loope
sbb
push
add
dec
cld
pop
xchg
outsl
cmp
psrlq
xor
aam
adc
mov
jge
mov
aaa
and
jne
jnp
dec
mov
popa
mov
aam
jg
movq
xor
insl
pop
pop
jb
ds
add
mov
cltd
call
cmp
sti
mulb
mov
aad
mov
mov
mov
decl
hlt
fildl
pop
lock
mov
mov
push
test
jbe
mov
xor
mov
jl
test
pop
adc
sbb
or
shlb
and
pop
jne
aas
sbb
push
jbe
jp
mov
xorb
jae
dec
pop
lds
inc
lods
gs
mov
push
es
ss
or
jnp
lock
repz
enter
addr16
sub
cmp
pop
xchg
rclb
inc
rorb
into
pop
add
adc
nop
sub
xchg
inc
inc
lods
mov
push
sub
and
lds
push
std
push
cs
mov
shl
or
jle
mov
in
aam
push
hlt
pushf
mov
jl
xchg
push
adc
add
or
lahf
test
jp
push
sub
cmc
push
in
fs
mov
out
push
push
dec
in
lods
cwtl
sbb
out
sub
fistpl
or
xchg
inc
mov
pop
out
or
push
negb
mov
add
push
push
sub
adc
shll
or
dec
pop
add
xchg
imul
sti
xor
je
xor
insb
jns
sub
cmp
mov
xchg
rcll
mov
lock
mov
test
aad
out
mov
xor
adc
mov
rorb
rol
pop
gs
jo
in
jmp
or
test
ja
pop
push
cmp
pop
leave
push
fs
dec
inc
repnz
mov
jns
fstpt
sbb
and
push
aad
xor
pop
stos
adc
jo
call
repz
and
sub
cmp
fidivrs
jno
imul
sub
in
jb
addr16
rcll
out
cmp
mov
imul
mov
aam
and
bound
daa
aas
shlb
lods
adc
dec
mov
lret
inc
cltd
jl
mov
mov
clc
jbe
cwtl
cmp
cmp
dec
stc
in
aam
imul
push
mov
push
pop
and
inc
or
aad
jmp
pop
add
test
mov
mov
fdivrp
xchg
testl
mov
pop
push
stc
push
push
inc
push
and
and
call
and
jg
mov
rol
test
mov
mov
inc
xchg
insb
and
cmp
mov
or
cmp
mov
je
sbb
dec
out
push
mov
loop
sbbl
cmp
andl
repz
test
sbb
pop
in
xchg
rclb
loop
call
pusha
loop
movsl
ljmp
and
out
sbb
push
repnz
scas
lea
sti
stos
xor
rcr
int
xchg
adc
mov
jae
cmpb
stc
adc
mov
shlb
dec
shlb
fdivrl
push
iret
or
sub
clc
cwtl
icebp
or
out
mov
fwait
mov
sahf
mov
rep
pmaxsw
sbb
jo
push
sbb
fwait
sbb
xchg
inc
xor
cli
arpl
sub
mov
in
aam
dec
mov
xchg
fiadds
hlt
dec
lcall
cmpsl
and
inc
mov
scas
dec
push
gs
cwtl
pop
inc
inc
repnz
jno
adcb
sub
and
sti
dec
push
ja
add
xor
or
push
jnp
inc
fdivs
iret
addr16
jg
je
push
mov
adc
adc
add
push
xchg
cmpsb
cmpsb
loopne
ret
in
cltd
add
jnp
mov
dec
mov
cmp
sub
adc
out
xchg
add
orb
ficoms
sub
andl
xorb
out
mov
and
and
dec
inc
hlt
test
and
in
movsb
mov
xchg
jnp
popf
ds
nop
hlt
mov
or
pop
popf
xchg
xchg
sbbl
sub
jp
mov
ss
test
push
fdivr
cmpsl
mov
movsl
mov
sbb
mov
inc
stos
pop
aad
inc
call
and
jmp
xor
mov
jmp
sbb
xlat
and
push
fstpt
fbstp
jg
stos
aas
sbb
iret
clc
out
xor
fidivs
aad
push
repnz
dec
xchg
xor
mov
xchg
je
lcall
cli
pop
out
rorl
insb
ds
repz
cltd
insb
push
adc
das
ss
into
xlat
lahf
inc
push
aas
mov
aam
out
jecxz
aad
das
push
dec
push
daa
sub
pusha
dec
xor
or
notl
clc
rorb
or
insl
adc
dec
sbb
ficomps
sarl
push
aaa
cli
jl
stc
xchg
jno
daa
xor
pushf
insw
push
bnd
mov
or
das
xor
lret
aaa
inc
sbb
lret
mov
lds
fcmovne
es
ds
pop
test
push
fwait
and
jecxz
inc
int
add
movsb
in
jecxz
jns
bound
in
pushf
cmp
push
testl
leave
in
xchg
cmp
test
insb
xlat
andl
sbb
rcr
in
jg
mov
fbld
pushf
pop
pop
push
enter
inc
dec
cmp
clc
call
dec
dec
shrb
nop
sbb
aaa
xor
cmpsl
mov
xor
lret
adc
xchg
pop
sub
xchg
sbb
ret
sub
and
add
arpl
sub
cltd
xor
cld
adc
inc
nop
push
int3
or
jg
xor
pop
shlb
add
mov
jmp
mov
test
push
sbb
add
insb
dec
nop
iret
adc
sub
outsb
loopne
ss
lret
rcrb
mov
or
sbb
jmp
mov
cmp
cmpsb
cmpb
pop
push
test
push
dec
outsb
aas
int
gs
fiaddl
daa
adcl
fbld
mov
mov
mov
cmp
inc
outsb
mov
xchg
call
inc
pop
roll
push
sbb
sub
pop
fisttps
lea
dec
movb
ds
int3
int3
mov
sub
mov
jbe
iret
sub
xor
loopne
stos
mov
aam
mov
repz
les
lcall
jle
pusha
iret
pushf
aas
sbb
push
sub
pushf
and
or
in
mov
ja
aaa
sbb
inc
test
jne
aaa
push
jbe
fistl
mov
or
mov
mov
addr16
out
lahf
cld
popa
rcrb
and
js
xor
into
out
popf
cmp
lea
jo
mov
and
sub
std
jmp
adc
int3
ja
fdivrp
insb
loop
cwtl
cld
test
pop
push
gs
test
or
fdivl
push
rcll
in
pop
movsl
outsl
mov
lods
int
push
aam
je
pop
sbb
inc
mov
push
jns
rolb
or
pop
xlat
addb
add
mov
or
sub
in
mov
int
ret
fnstcw
je
cmpsl
repnz
cmp
adc
movsb
jo
sbb
cltd
or
in
stos
filds
repz
rclb
add
in
in
in
push
xor
movsb
adc
inc
inc
and
mov
out
aas
dec
xor
jmp
mov
out
cmc
xchg
fsubrl
repz
pop
mov
into
aad
mov
lea
test
pop
addb
das
jmp
mov
and
popf
mov
cltd
mov
lods
inc
into
loopne
push
imulb
out
and
lods
mov
movsb
pop
pop
mov
cmp
xlat
pushf
push
sbb
dec
test
and
clc
push
sub
push
sbb
pop
pop
lods
pop
or
add
ds
lods
mov
pop
cli
inc
and
dec
mov
outsl
push
gs
add
and
xor
add
fistpl
mov
testl
in
imul
jge
sub
push
aaa
imul
adc
sub
push
rolb
sbb
lahf
je
adc
jp
add
bound
cmp
mov
inc
arpl
xor
test
mov
xchg
and
inc
mov
add
fcomi
mov
sbb
xor
ret
mov
mov
pop
daa
scas
sub
fmull
jo
adcb
sbb
pop
lcall
mov
sub
mov
mov
or
mov
mov
test
or
sbb
test
mov
sbb
leave
inc
sub
fmuls
pop
mov
jne
in
out
cmp
sbb
fs
mov
lods
fsubrl
adc
xchg
addr16
sub
stos
or
icebp
sbb
int3
add
mov
sbb
sbb
push
test
sub
ss
das
into
jp
popa
jo
popa
push
test
push
mov
cmp
cmp
sbb
stc
aam
ja
aaa
sbb
fdivrs
mov
mov
and
sbb
adc
dec
sahf
outsl
or
dec
xor
xlat
insb
inc
cmc
test
add
xlat
mov
scas
ljmp
call
adc
addr16
stos
sbb
push
mov
cmp
inc
in
jnp
add
imul
gs
push
adc
sub
pop
dec
insb
mov
mov
movsl
addl
jmp
sub
iret
fsts
mov
int3
lock
jg
pop
icebp
pop
adc
xchg
push
push
out
clc
jge
insb
xchg
add
jb
push
outsb
pop
sbb
mov
and
or
stc
out
add
sbb
bound
loope
add
les
and
dec
cmp
pop
push
jge
jbe
arpl
popa
andl
adc
push
cs
out
sub
inc
out
test
sub
rcrb
xorl
cld
ficoml
into
rolb
push
ficomps
test
movsl
and
xchg
out
mov
insl
and
jnp
cmp
clc
inc
fstps
dec
sbb
ljmp
test
dec
insb
push
imul
ljmp
movsl
pushf
cli
sub
mov
lds
push
bnd
xor
push
push
push
xor
xor
jo
mov
xor
ret
jg
lea
push
mov
xchg
sbb
sub
push
sti
inc
push
mov
pushl
hlt
push
int
outsb
in
mov
stc
xor
fiadds
cli
cmpb
push
sbb
out
cmpsb
fisttps
mov
cmp
add
lds
adc
push
aas
insb
js
mov
pop
ljmp
cmp
pop
adc
clc
mov
daa
pop
mov
es
and
test
sub
mov
and
or
jns
test
and
scas
orl
mov
push
cmp
xchg
popa
mov
or
and
jne
loop
push
add
pop
repnz
popf
sub
pop
cmp
std
adc
cld
mov
aas
aas
sahf
add
lret
andb
mov
or
scas
mov
sbb
loopne
inc
xchg
push
outsl
adc
sub
loope
and
pop
xor
or
fnsave
push
imul
sti
xchg
add
push
pop
xor
in
cli
sub
idivb
adc
cmp
enter
jge
ret
jae
and
mov
cs
xor
adc
cmp
in
push
daa
push
dec
or
cs
xlat
ja
hlt
jmp
cwtl
int3
jp
jne
push
push
pusha
adc
lock
sub
mull
insb
dec
xchg
outsb
jno
scas
or
cmc
cmp
lea
shlb
insl
dec
shrl
ficompl
mov
and
lock
call
inc
or
ret
fnstenv
bound
pop
xlat
lea
inc
cmp
pavgw
lcall
mov
xchg
in
add
lcall
mov
popf
xchg
fildll
mov
and
inc
std
insb
jnp
pop
popf
sub
or
scas
mov
fisubrs
push
xor
lcall
sbb
pop
xchg
test
lock
xchg
pop
xor
movsl
cwtl
cs
aad
aas
mov
jg
cmp
xor
icebp
orb
mov
sub
std
mov
aaa
lret
scas
lock
negl
pop
and
add
mov
and
ror
ja
xor
fdivl
mov
stc
push
scas
push
and
mov
sahf
cmp
jmp
dec
loop
in
xchg
enter
mov
add
fmul
or
cmp
gs
stc
cmp
idiv
jnp
xchg
fwait
loop
sbb
push
mov
add
lds
in
jns
jo
mov
sbb
adc
xchg
inc
push
out
mov
fistpl
xchg
testl
negb
sbb
xchg
jl
pop
ljmp
cmp
add
jg
test
arpl
xor
lret
xchg
dec
sbb
mov
xchg
popa
or
js
loopne
inc
jnp
push
aas
ss
idivb
inc
cwtl
ds
cld
lret
daa
dec
cmp
jp
inc
lock
xchg
ds
add
adc
in
addr16
les
fs
push
push
std
daa
mov
idiv
xchg
mov
fcompl
pusha
js
xchg
fmull
repnz
mov
ss
dec
cs
pop
mov
xchg
fcompl
fs
mov
repz
dec
rcrb
rorb
popa
icebp
mov
lds
jo
xor
fbld
scas
cmp
pop
xchg
sbb
sub
in
or
xchg
out
cmpsb
adc
cmpsl
add
push
out
push
lea
push
and
xor
mov
add
hlt
lret
jo
mov
pop
mov
sub
out
fwait
loop
mov
addr16
pusha
adc
xchg
sbb
daa
pop
dec
loope
rolb
test
mov
in
orl
repnz
imulb
sbb
into
aas
inc
cmp
add
inc
movsb
jbe
fistl
add
xchg
mov
repnz
adc
mov
pop
jg
xchg
xchg
dec
dec
into
dec
sahf
mov
cmpsb
add
iret
lret
pop
push
out
sub
or
adc
push
in
cmp
shll
ret
dec
inc
dec
jle
popf
jle
mov
adc
fidivl
add
pop
mov
iret
mov
mov
dec
leave
fisubl
loop
push
push
push
add
push
or
rclb
mov
xor
jg
leave
stos
sbb
cwtl
outsb
daa
jne
cmpsl
sbb
xor
es
cmpsb
pop
movsl
nop
pop
out
sarb
cmp
dec
and
sbb
das
xor
fcompp
xchg
lea
movsl
xor
aam
imull
shlb
sahf
cmp
xor
push
xor
push
orl
jp
mov
mov
into
sbb
inc
nop
in
repnz
orl
push
mov
jmp
ja
je
insb
pop
cmpsb
xchg
push
inc
jno
jg
loop
cli
vmovd
inc
inc
scas
rcll
mov
aad
cmc
ja
jg
stc
xor
cmpsl
jno
and
decb
adc
call
orl
xor
lret
ret
mov
adc
or
adcb
push
into
in
mov
daa
incb
add
cmp
aas
stos
fucom
pop
addr16
inc
std
fldcw
test
pop
jp
movsb
xchg
cld
or
mov
xlat
stc
fadds
js
mov
cmpsb
loopne
outsl
outsl
add
inc
sub
das
sbb
outsb
aad
jnp
mov
cmp
aaa
mov
movsl
inc
lahf
jle
cmp
dec
lods
xchg
adc
inc
movsl
xchg
mov
xor
pop
das
jns
sbb
adc
mov
in
adc
adc
sub
in
push
push
mov
xchg
jno
and
dec
negb
mov
add
jl
arpl
xor
das
jae
adc
movsb
ds
js
movsl
and
jg
das
inc
les
outsb
out
inc
pop
cmpsl
push
popf
push
lods
es
aad
fsubp
cmpsb
cltd
pop
jno
cmpl
sub
roll
fsubl
dec
cltd
jbe
add
shlb
push
mov
inc
inc
mov
scas
test
cli
add
push
cmp
add
aam
mov
das
push
mov
jl
les
fs
loop
push
or
pop
jmp
or
test
xchg
or
push
divl
or
pushf
jg
test
jae
nop
lea
mov
insb
lods
into
sbb
mov
xorb
fbstp
repnz
xlat
push
add
and
mov
dec
jae
jb
sbb
or
loopne
pop
jns
rclb
cwtl
push
pop
clc
xor
and
aad
inc
insl
xchg
repz
out
iret
loopne
cmp
scas
fsubrl
xchg
out
dec
cmp
dec
mov
mov
jb
mov
fbstp
cmp
push
sub
cli
into
add
pop
imul
ret
aaa
bound
pop
dec
roll
ds
dec
xchg
jne
cmc
mov
sbb
adc
and
xchg
sti
dec
frstor
je
test
cwtl
into
ror
hlt
icebp
mov
incl
ret
imul
sbb
cwtl
push
lds
insb
iret
pop
sahf
jl
jae
scas
fisubrl
dec
addb
mov
addr16
cmpsl
inc
fisttpll
aaa
ss
aas
cmpsl
iret
and
mov
lods
xchg
add
int3
mov
cs
bound
inc
mov
scas
movsb
leave
int
xchg
inc
daa
mov
push
jp
or
xchg
mov
adc
push
cltd
test
push
mov
mov
inc
pop
cli
mov
pop
test
pop
mov
and
cmp
test
in
and
repz
loopne
lds
pusha
int3
outsb
xor
push
stc
std
jle
lds
fldenv
add
xor
jbe
sbb
repz
jb
dec
dec
add
jbe
insb
lock
and
dec
inc
pop
or
cmpsb
jae
leave
outsb
mov
mov
push
test
sbb
ja
inc
fbld
subb
inc
push
inc
cmc
ljmp
lret
ss
mov
mov
push
cmp
and
loope
xor
or
cmpsb
mov
out
sbb
push
jge
ret
sbb
or
inc
adc
xchg
xor
fisttps
popf
xchg
je
scas
or
push
ficoms
jg
dec
roll
cmp
dec
and
insb
rcll
mov
paddb
cwtl
xchg
cld
adc
mov
sarb
sbb
and
lahf
jl
inc
xchg
and
and
push
stos
fnsave
sub
cmp
push
lods
mov
xor
fnsave
inc
push
les
roll
pop
in
pop
cmp
sbb
add
lret
addb
test
push
inc
icebp
movsb
xchg
js
dec
fs
jecxz
bound
or
inc
pop
or
sub
pop
scas
daa
ljmp
loope
in
jmp
jb
cmp
sti
lahf
dec
lock
cmp
inc
int3
scas
inc
and
push
add
in
jle
mov
movb
mov
mov
mov
adc
jmp
pushl
stc
or
fstps
cmp
ljmp
push
xor
in
push
jb
leave
mov
rclb
cmp
cmp
jle
insl
mov
clc
push
cmpsl
cmc
inc
mov
jp
ficoms
xchg
lods
mov
inc
cwtl
leave
sbb
inc
mov
xchg
fstpl
lods
cmp
mov
into
push
sub
cmpsl
cmp
inc
dec
outsl
lock
mov
pop
adcl
test
xor
and
xor
stc
adc
add
push
jbe
flds
jge
cmp
dec
fisttps
mov
cli
aaa
inc
js
mov
adc
roll
int3
cmc
sbb
out
mov
jge
ret
adc
xchg
jle
fcomip
dec
test
add
addr16
in
setno
push
sar
push
mov
scas
mov
popf
dec
jnp
sub
mov
aas
xchg
mov
ja
lcall
iret
js
xchg
add
jle
imul
addr16
cmpsl
movsl
sbb
testb
cmp
push
hlt
mov
jp
mov
popa
clc
xlat
scas
xor
mov
mov
xor
pop
scas
xchg
loop
out
loop
inc
xlat
out
pop
and
dec
mov
xchg
mov
int
test
call
aam
sbb
pop
xor
aas
das
jmp
icebp
in
sahf
inc
and
push
jno
int3
aaa
imul
fdivl
sbb
add
push
sub
xchg
inc
add
insb
sub
jb
pop
movsl
xor
insl
push
push
test
or
fdivs
in
stos
sbb
or
fs
movsb
hlt
adc
je
movsb
jmp
movsb
xor
sub
jle
xor
in
rcll
or
clc
dec
push
mov
invd
lcall
movsb
cli
mov
jmp
add
mov
push
sarb
ds
jmp
adc
xchg
call
mov
adc
cmpsb
sbb
insl
notb
pop
int
lea
pop
push
out
sbb
icebp
rcrl
sti
push
pop
je
pop
lods
and
dec
and
jecxz
cmp
or
xchg
in
fcmovnbe
mov
sub
cli
sub
mov
jae
fdiv
lret
cli
or
data16
push
fimull
movsl
cmpsl
inc
xchg
sub
inc
mov
xlat
pushf
repz
out
aaa
add
ja
mov
jno
cmp
push
or
xor
leave
mov
mov
addl
imul
fwait
xchg
daa
mov
mov
sbb
inc
mov
xor
test
xor
mov
shrl
stc
js
sub
lods
nop
and
sbb
fnsave
push
lret
aaa
push
jp
clc
dec
cmc
pop
stos
pusha
mov
pusha
push
jbe
lcall
adc
mov
inc
and
shlb
adc
dec
loopne
sarb
and
add
lock
loope
shlb
rorb
pop
das
jo
jp
pop
out
mov
push
add
dec
and
popa
insb
jnp
mov
dec
fmul
mov
mov
push
mov
add
fsubr
mov
icebp
ljmp
fwait
mov
lret
ds
mov
insl
cmp
xchg
cmp
decb
mov
dec
add
ss
cmc
pusha
ret
test
movsb
xchg
mov
repnz
cwtl
dec
jle
sub
dec
mov
dec
scas
enter
or
xchg
pop
clc
sti
jl
sbb
inc
imul
push
dec
inc
mov
push
pop
and
adc
jmp
cwtl
or
add
jl
sub
xchg
gs
push
lcall
dec
jae
mov
inc
sub
jnp
movsl
mov
rol
or
arpl
add
pushl
mov
int
or
aas
pop
mov
pop
sbb
push
aaa
ljmp
dec
sbb
mov
inc
xchg
xor
add
fisubrs
add
bound
lret
sbb
add
or
mov
repz
les
mov
xchg
sub
push
jg
dec
mov
filds
or
cmp
test
or
es
push
cmp
daa
fsts
popa
cld
repnz
push
subl
add
inc
jnp
push
ret
cmpsl
in
mov
xchg
das
call
mov
fdivp
mov
push
mov
loop
pop
test
test
mov
mov
add
data16
sbb
stos
cmpsl
imull
jnp
shr
ja
or
mov
sbb
ret
insl
aas
jmp
imul
test
ja
imul
sub
int
iret
mov
jae
clc
mov
in
in
data16
mov
sbb
adc
rolb
sti
pop
sbb
loop
dec
in
aam
push
stos
push
xchg
cs
adc
mov
clc
xchg
adc
pop
pop
sub
mov
ljmp
inc
movsb
out
fld
jmp
in
mov
movsl
dec
pop
mov
mov
or
cmpsl
das
fistpll
aam
iret
lock
shll
mov
inc
sub
sbb
mov
add
cmp
xchg
inc
repz
xor
or
pop
dec
mul
shr
and
roll
das
pop
roll
dec
push
ja
xchg
xchg
and
jo
pusha
sub
insb
popa
mov
cmpl
jp
repnz
icebp
fisubl
cmp
jmp
inc
xchg
ljmp
adc
cmp
pop
mov
hlt
ss
rcrl
popf
push
fdivrs
xor
or
std
cmpsb
int
in
jbe
leave
loopne
add
movsl
je
mov
pop
pop
mov
mov
cmc
and
pop
cmp
fwait
inc
inc
cmp
or
int
pusha
dec
ljmp
cwtl
sbb
jno
xchg
cmc
inc
in
shlb
add
mov
subl
and
repnz
fcoml
or
sbb
pop
adc
popfw
lods
jns
mov
sbb
jno
adc
sub
mov
xor
xchg
pop
sub
mov
adc
insl
and
jb
stos
inc
movsb
rcrb
leave
push
dec
repnz
push
mov
sub
movsl
pop
sbb
inc
jmp
adc
mov
pop
fstpt
dec
out
jmp
push
and
cwtl
stos
mov
add
xorb
push
xchg
jb
pushf
xor
mov
pop
rolb
mov
push
mov
inc
push
sbb
xchg
fcoml
jl
pop
sbb
mov
jb
daa
lcall
mov
mov
add
push
aam
lret
inc
pop
ret
je
int
stc
add
mov
scas
clc
inc
icebp
inc
daa
or
sub
add
popl
faddl
inc
mov
clc
cli
jge
xor
xchg
leave
or
sahf
add
adc
rol
cmc
dec
xor
inc
fisttps
sub
jp
pop
jne
mov
xchg
sub
outsb
xlat
data16
push
and
cmp
or
das
add
dec
lret
cld
jle
xchg
mov
int3
lea
stc
dec
lret
pushf
xchg
adc
sub
mov
ret
in
rcr
addb
ficompl
push
into
fbstp
jmp
negb
add
cmp
inc
stos
cmpsl
lcall
add
in
int
push
sbb
push
jbe
stos
cmc
aas
loop
dec
scas
add
add
sbb
mov
iret
push
push
or
ret
stc
add
inc
daa
stc
pusha
sahf
jecxz
outsb
push
mov
outsb
mov
ret
insb
mov
adc
or
dec
mov
lret
incl
repnz
pop
in
sub
or
dec
je
dec
popf
push
jge
shl
inc
jnp
push
cltd
ds
xchg
mov
rolb
jecxz
jmp
jecxz
inc
xor
popa
das
adc
lea
add
sbb
scas
and
adc
push
and
stc
inc
pop
into
in
insl
mov
push
jo
dec
lock
cmp
push
jmp
loop
mov
pop
fistl
inc
les
xchg
lret
je
cwtl
mov
jnp
xor
and
outsl
jl
in
jl
scas
shrl
aad
push
stos
jae
cwtl
aad
cmpsb
sbb
pusha
jae
jge
inc
xchg
jae
movsl
in
jo
shlb
sub
push
data16
clc
mull
jmp
into
add
push
xor
pop
cmp
mov
addb
mov
or
sbb
outsb
in
mov
fsubs
nop
inc
mov
inc
mov
fs
adc
jno
jle
movsl
call
in
mov
push
cmpl
out
sub
mov
push
arpl
inc
js
inc
mov
ljmp
add
cld
call
shl
sahf
scas
sub
mov
sbb
pop
pop
sub
cmp
or
cmp
les
pop
dec
icebp
jle
add
in
mov
xchg
arpl
cwtl
out
in
xchg
shrb
in
jle
rolb
popa
or
jp
add
in
or
push
mov
add
cmpb
adc
pop
mov
mov
outsl
add
push
fsubrl
hlt
cmc
inc
and
js
test
test
jg
lea
mov
stos
xchg
mov
fs
fwait
sbb
mov
dec
push
cmp
imul
or
mov
mov
les
sbb
adc
rorb
jge
shl
cli
push
dec
jmp
push
pause
sbb
fadd
lret
adcb
sub
jo
out
cmp
mov
cmp
pop
and
jecxz
xorb
mov
rcll
lret
mov
dec
jp
rol
js
adc
push
cmc
mov
aad
lods
mov
das
shll
xchg
pushf
mov
ja
sarl
and
xchg
and
sub
andb
mov
inc
hlt
mov
mov
jbe
ret
sbb
add
lock
adc
pop
mov
or
rcll
fmuls
cltd
outsl
shll
test
sub
out
shlb
xor
cmp
repz
push
pop
pop
jg
fs
jp
loopne
fisubrl
jmp
xor
out
cltd
mov
ds
in
xchg
xchg
mov
push
jl
sbb
add
sub
sub
xor
ss
fildl
xchg
sub
js
mov
add
test
push
addr16
jb
pop
xchg
sbb
jne
jl
movsl
pop
cmp
subl
fwait
loopne
or
fstps
cs
iret
daa
repnz
push
int
icebp
add
std
jmp
fwait
add
bound
mov
cmpsl
xlat
cwtl
cltd
arpl
fistpll
dec
cmp
imul
stc
or
jbe
sbb
lods
mov
and
imul
cmp
sbb
push
js
rolb
push
or
pop
xor
or
fstps
pop
gs
pop
xor
sbb
add
js
inc
xor
aad
outsl
xchg
pop
ss
or
mov
fs
outsl
mov
std
idivl
sbb
xchg
mov
mov
inc
mov
fsubrs
popa
lods
push
xor
jns
xchg
cmp
cli
push
xchg
inc
adc
gs
clts
in
shlb
stc
cltd
es
add
stos
mov
idiv
jmp
incl
test
jp
sub
cmp
push
mov
or
ret
aaa
and
cmp
daa
mov
mov
cmpsb
adc
fistl
idivb
xchg
sub
pushf
lret
pop
inc
js
mov
fs
mov
inc
push
push
push
jle
lcall
sahf
rol
sbb
push
divb
sbb
jae
mov
cmc
mov
lods
out
xchg
data16
idivl
mov
push
sub
cmp
orl
loop
xchg
test
inc
mov
test
divb
clc
scas
sub
daa
xor
adc
add
mov
xchg
bound
and
add
dec
stos
dec
add
je
lret
mov
mov
mov
adc
cmp
call
inc
adc
xchg
sbb
mov
shlb
sti
orl
cmp
popa
scas
pop
data16
imul
mov
xchg
call
lods
mov
inc
in
mov
aaa
in
repz
ret
adc
inc
cwtl
push
popl
xchg
lea
pusha
cmp
test
xor
rcrl
mov
rorb
out
std
pop
fbstp
stc
jae
xchg
push
mov
lock
notb
inc
xlat
xchg
push
sub
in
mov
pop
xlat
in
sub
cmp
loopne
cld
fwait
out
xor
mov
push
sub
sub
cmp
and
mov
pop
mov
adc
hlt
jne
push
jle
pusha
adc
xchg
sub
mov
loope
xor
movsb
or
mov
dec
pop
push
jle
test
sub
dec
push
loope
aaa
or
inc
pop
sbb
mov
mov
daa
jp
and
push
or
stos
sbb
push
push
jl
in
sub
ret
adc
out
cmp
xor
xchg
push
imul
inc
out
pop
leave
sbb
sub
outsl
sub
mov
push
xorl
xchg
or
inc
negb
mov
fstpt
sbb
jb
pop
pop
mov
jle
sbb
imul
xorb
stos
cld
fwait
mov
sbb
cwtl
fmull
inc
jne
jmp
xchg
jge
sub
pop
adc
dec
mov
jg
cmp
mov
mov
and
outsb
dec
push
mov
sub
sbbl
mov
pusha
call
jl
jb
pop
testl
push
cmp
mov
andl
ss
es
insb
sti
push
push
push
inc
cmc
push
mov
cmpb
cmp
inc
arpl
gs
push
mov
dec
mov
jno
mov
das
shrb
mov
mov
outsl
dec
shlb
fmul
mov
add
lret
xchg
jmp
push
jmp
and
mov
in
jmp
test
ss
jl
inc
test
pop
fbld
imul
mov
loop
jle
rcr
pop
call
loop
push
je
cld
cwtl
sti
pop
cmc
lret
out
xlat
push
inc
mov
push
pop
out
pop
inc
xor
xchg
in
test
pop
outsb
xchg
fdivrl
cltd
in
or
pop
inc
push
lret
xchg
sub
enter
push
mov
sbb
shr
and
xorl
push
mov
mov
arpl
lods
fldt
arpl
popa
adc
imul
aad
lahf
outsl
inc
in
cli
mov
repz
dec
stos
jns
hlt
adc
xchg
rorl
push
cmp
inc
sub
dec
push
daa
loop
sbb
jb
jle
inc
and
mov
stos
popa
xchg
js
pop
mov
popa
xor
and
in
ret
scas
or
xorl
inc
xor
mov
aam
scas
decb
fdivr
lret
adc
xor
loopne
cltd
nop
jae
mov
ret
test
and
jmp
adc
xchg
adc
push
mov
push
loope
sbb
out
int3
mov
push
das
jle
and
loop
loope
jae
cmp
lods
inc
mov
aaa
xchg
pop
lret
mov
sbb
inc
mov
test
out
rcrl
cwtl
lock
or
or
insb
jns
lock
lret
sti
jle
in
loopne
stos
jl
dec
cltd
push
loopne
fs
push
jge
iret
ss
xchg
stos
orl
shrl
cmp
push
pop
add
jge
out
push
and
xchg
jg
loopne
fcmovne
xor
mov
xorl
rorb
sub
push
or
and
pusha
arpl
mov
mov
fbstp
lcall
dec
push
mov
jecxz
xchg
jg
out
sub
rclb
lahf
cmp
test
adc
aam
mov
xchg
in
negb
mov
push
aaa
pop
pop
xchg
mov
fsubs
inc
stos
xchg
mov
lods
dec
in
add
pop
dec
jle
inc
test
or
inc
gs
jbe
popf
xor
or
pusha
fmuls
jns
scas
mov
xchg
push
ficomps
pop
pop
ljmp
movlps
shlb
test
mov
jmp
stos
bound
sub
out
movsl
mov
ret
or
in
mov
pop
in
push
sub
lret
cli
lock
pop
dec
repnz
rclb
daa
insb
push
pop
jbe
call
xor
int3
jnp
ret
cmp
cs
jmp
ret
push
nop
xor
out
lret
cmpsb
rclb
mov
sub
xor
outsb
pop
add
mov
or
fs
and
decb
popa
cmpsl
stos
lahf
stos
jae
pusha
test
push
push
test
lret
xor
je
leave
pop
bound
fidivrs
out
and
jo
lret
push
mov
das
xchg
hlt
or
mov
or
and
stos
fiaddl
or
stos
dec
mov
inc
mov
pushf
rol
repnz
fs
push
pop
stos
sub
arpl
cmpsl
stc
mov
inc
jb
xchg
movsl
hlt
add
in
imul
int3
or
add
sbb
jl
mov
fidivrl
iret
call
lods
cmpsb
push
clc
inc
pop
mov
mov
shr
loopne
mov
and
test
sub
in
xchg
jle
test
idiv
loop
ja
rcl
es
mov
push
ret
std
dec
cmpsl
mov
inc
jl
fwait
cs
or
aaa
rol
lret
mov
push
mov
lcall
fsts
jg
cmp
xorl
testl
pushf
popf
inc
fadd
xchg
rclb
mov
repz
call
lahf
stos
push
std
cs
leave
fisttps
in
mov
clc
mov
andl
fsubr
xchg
push
js
xchg
into
shr
add
movsb
fs
pop
push
xor
cmp
dec
push
fisubrl
jno
dec
mov
ljmp
cli
inc
sahf
jne
mov
adc
int
and
push
xor
lahf
xor
repz
loope
pop
ja
das
adc
ljmp
inc
push
inc
inc
in
mov
push
mov
cmp
or
out
imul
push
rolb
cmp
jae
xor
jne
mov
mov
jae
add
ret
xor
push
inc
pop
fwait
stc
push
ret
sub
mov
or
pop
inc
aam
push
or
dec
int
mov
and
pop
dec
and
sbb
lock
icebp
jbe,pt
fcmove
adc
mov
cmp
mov
bound
icebp
xchg
enter
sub
cmp
cwtl
push
push
fcoml
aaa
pop
movsl
inc
jl
sbbb
cli
ja
cld
or
add
inc
push
icebp
mov
ds
notb
aad
sub
pop
push
pop
sti
imull
push
fidivs
inc
cld
mov
and
imul
cmc
sub
test
sbbl
ret
sahf
xor
ret
arpl
das
js
cli
addr16
pop
shll
iret
flds
xchg
jae
jp
cmp
xor
lds
outsb
jle
repz
sbb
inc
or
jnp
mov
faddl
mov
pushf
daa
movsl
popa
test
jae
into
fldenv
mov
add
lods
or
aad
jge
clc
test
in
inc
aam
push
fsubs
xor
push
xchg
pop
mov
js
xchg
xor
fsts
call
cmp
push
mov
sbb
into
sbb
add
rcll
dec
cmc
xchg
mov
imul
inc
test
popf
divl
sar
jns
xor
nop
jb
jg
mov
test
and
cwtl
jnp
out
mov
icebp
sbb
or
outsl
cs
inc
arpl
pop
xor
cmpsl
hlt
mov
add
imul
mov
mov
push
sbb
mov
xor
stc
loopne
xor
push
into
pop
sbb
ret
sti
push
mov
repz
out
mov
arpl
in
andl
sti
push
fdivr
in
cmp
cmp
movsb
cmp
xchg
mov
xchg
lret
sub
dec
mov
fstps
push
arpl
sbb
sub
sbb
mov
fisubs
clc
lahf
jle
test
loop
out
lret
sbb
xchg
loope
ret
pop
mov
dec
aas
mov
movb
sbb
enter
jg
adc
fsts
cmp
out
cli
dec
int3
cmp
and
cmp
pop
rcr
jbe
lcall
push
and
mov
shll
cmp
loope
lods
jbe
pop
jge
mov
enter
and
fadd
xchg
push
xor
cmpsl
add
shlb
ret
pop
fimull
lock
ljmp
ret
ret
loopne
movsl
mov
jae
dec
stc
mov
xorl
dec
add
mov
xchg
ret
add
xor
out
mov
fiadds
imul
dec
clc
fisubl
xchg
loope
and
repz
clc
push
popa
nop
inc
imul
into
ss
shlb
or
and
jbe
xchg
test
jo
pop
movsb
sub
pushf
push
cmp
lods
mov
xchg
xor
sti
xchg
pop
mov
stc
inc
mov
pop
je
mov
cmc
lds
and
daa
ss
lcall
mov
adc
in
cmc
jbe
sub
into
jl
daa
icebp
in
icebp
mov
mov
xchg
subl
inc
inc
mov
pop
sub
test
dec
xchg
test
lret
inc
fidivl
std
aas
std
sbb
and
vpavgw
dec
cmc
sar
mov
ret
dec
fs
sub
scas
add
inc
jmp
test
shlb
mov
xchg
sub
popa
push
xor
adc
test
not
push
subb
xchg
xchg
pushl
mov
mov
xchg
push
sub
aam
outsb
scas
test
jg
sub
cmp
jns
or
das
pushf
add
imul
jp
mov
xchg
adc
lock
outsl
mov
jge
test
dec
in
mov
sub
neg
pushl
aam
lea
lret
dec
mov
inc
mov
xorl
mov
repnz
dec
jecxz
xchg
push
add
test
lods
in
mov
lret
lret
sbb
data16
stos
dec
xchg
pop
sub
popl
icebp
stc
adc
shll
dec
xchg
mov
fsub
inc
xchg
aam
mov
mov
in
outsl
andl
scas
sbb
xlat
sub
add
and
dec
or
ljmp
sbb
ret
push
push
mov
lahf
push
mov
mov
dec
das
insb
push
daa
incl
xor
test
push
or
cmc
mov
loop
loopne
cmc
cli
adc
popl
outsl
xchg
lea
xor
scas
cmp
pop
lcall
movsb
jbe
fists
rolb
mov
cwtl
mov
sbb
mov
es
xor
je
push
jge
call
aad
inc
or
inc
adc
push
shlb
imul
out
mull
xor
popa
xchg
jp
insl
xor
loopne
lret
cmp
daa
mov
test
adc
pop
stos
inc
aaa
xor
dec
testb
pushf
popf
xor
ds
loopne
test
mov
push
in
js
popf
cmp
lea
bound
mov
cmpsb
push
arpl
pop
sub
das
mov
push
pop
mov
nop
inc
pop
dec
pusha
fcomi
fbstp
aam
ds
cmpsl
pop
outsb
cmpsl
push
cmp
push
stos
sar
jle
jnp
imul
es
mov
and
or
xor
mov
repnz
lods
dec
imul
sti
inc
enter
rolb
pop
out
dec
movsb
sub
gs
xchg
inc
lock
mov
mov
push
xchg
adc
cltd
fmuls
xor
xor
adc
cmpsl
popa
loop
xchg
subl
ja
test
xchg
or
fistps
push
insb
inc
dec
shrb
mov
cwtl
sbb
mov
lods
inc
jb
mov
pop
test
adc
jbe
bound
jns
or
loop
xor
fwait
mov
pop
call
cmovne
pextrw
xor
subl
cltd
add
pop
xor
dec
in
in
ss
sub
add
inc
inc
sbb
enter
mov
das
cmp
mov
mov
incl
ret
mov
cmc
test
rol
fisttps
les
int3
and
xor
mov
enter
out
mov
lods
test
mov
ret
sbbb
and
pop
adc
test
or
clc
popa
inc
mov
imul
lret
xchg
vucomiss
shrl
mov
out
jnp
out
pop
mov
stos
add
ja
add
lret
pop
dec
stc
xchg
mov
pop
jg
and
pushf
xor
ficoml
inc
mov
mov
test
cmp
add
cmp
mov
icebp
sub
cmp
lret
popa
negl
mov
or
inc
and
xchg
add
adc
xchg
xchg
int
inc
mov
cld
loop
lret
or
dec
add
jmp
call
and
mov
idivl
pop
call
cmp
xor
es
repnz
test
fdiv
mov
cmp
test
sbb
adc
jo
xor
mov
lahf
stos
fisubs
xor
fildl
scas
test
pop
xchg
jo
dec
cmc
jge
push
fisttpl
sbb
mov
and
xchg
cmp
dec
pusha
sbb
xor
les
add
mov
jns
mov
fmul
pop
jno
dec
inc
ja
jae
int3
jno
enter
fistl
xchg
cld
jecxz
js
inc
mov
popa
push
popa
movsl
inc
adc
call
ljmp
rorl
pushf
xor
sbb
leave
xchg
jno
iret
cmp
cmp
xlat
push
repz
push
push
fsts
pop
push
jnp
out
xor
sub
cld
cwtl
cmp
adc
adc
outsb
pop
call
add
loop
shlb
mov
mov
xchg
add
fbstp
sub
rolb
ss
pop
scas
jne
xor
push
out
scas
push
mov
out
mov
hlt
xchg
loope
loop
add
hlt
cmp
outsl
out
mov
pop
iret
inc
sbb
mov
sbb
wbinvd
cmp
xchg
inc
jno
adc
lods
out
int
repnz
adc
mov
cld
ja
and
lret
popf
inc
aam
fisubrl
inc
aas
stos
pop
sarb
dec
popa
fcoml
mov
cld
cmp
mov
vmovd
iret
test
test
aas
jmp
mov
adc
cmp
mov
inc
rclb
fdivr
or
insb
flds
cmc
jmp
scas
or
mov
out
sub
pop
jne
stos
xchg
pop
add
loop
jecxz
mov
orb
loope
cltd
sti
push
int
js
inc
sub
enter
and
arpl
add
add
ret
rorb
das
stos
sub
add
push
es
test
insb
enter
mov
int
shll
andb
add
rolb
fwait
out
or
or
movl
fdivrl
nop
aas
pop
xchg
mov
jg
sub
shrl
add
out
cs
repz
je
lods
xor
int
jmp
mov
das
adc
inc
mov
cmp
in
in
aas
or
hlt
push
ret
out
cmova
scas
mov
jne
mov
push
inc
ficoms
jl
mov
push
imul
das
inc
push
mov
sub
addb
xor
add
fcoms
lods
lahf
dec
es
leave
faddp
adc
arpl
mov
mov
mov
mov
mov
or
xor
cli
inc
lods
xchg
inc
lock
inc
aam
sub
adc
ret
push
or
clc
mov
sbb
pop
pop
mov
cs
cli
das
jno
jbe
call
cwtl
inc
fdiv
fld
js
dec
sahf
rclb
shlb
inc
lret
push
ret
push
les
nop
xchg
mov
sub
int
stos
inc
add
inc
loopne
aaa
xchg
lea
in
jno
into
sbb
sahf
add
adc
rclb
cmpsb
jno
and
in
outsl
cmp
cmp
push
push
popa
jb,pt
outsl
xchg
js
leave
mov
pop
sbb
int
and
mov
aas
sub
pop
and
sbb
js
pop
push
dec
scas
loopne
pop
cld
pushf
jmp
sub
adc
jl
jg
enter
shlb
pop
ss
mov
cmp
mov
push
mov
mov
xor
orb
inc
cli
daa
inc
popf
and
jns
mov
clc
arpl
repz
leave
insb
add
mov
push
rcrl
xor
cmp
and
test
sti
xor
sbb
mov
int3
ja
xor
test
ds
loopne
js
cld
out
jmp
ja
ret
or
sub
pop
sahf
add
je
jno
lret
xchg
xchg
pop
sarl
fs
jo
jae
test
adc
inc
insb
mov
or
aam
pop
mov
aas
enter
dec
push
push
pushf
and
push
jno
inc
out
dec
jo
inc
movsl
cmp
pop
dec
or
out
jbe
es
imul
cmpsb
sub
sbb
and
lcall
shrl
adc
stos
push
xchg
imul
push
push
pop
and
into
sti
or
xchg
les
adc
xchg
push
and
sbb
loopne
mov
rolb
cmp
xor
sbb
add
es
stos
dec
andl
lcall
push
mov
fistpl
fcomps
ljmp
ss
cld
das
shrl
inc
mov
push
add
loopne
imul
push
fnsave
push
loopne
sahf
mov
idivb
out
mov
in
mov
lahf
or
sbb
faddl
inc
mov
popf
es
sub
icebp
sbb
test
hlt
xor
mov
dec
lret
aas
in
sar
pop
std
adc
js
loope
lock
rolb
sahf
in
out
pop
jae
aas
ret
sti
cs
stos
stos
cli
mov
mov
add
sub
add
dec
stc
addr16
test
jbe
jne
call
mov
push
push
sbb
adc
fdivrl
jmp
adc
add
fmulp
movsb
fnstsw
push
nop
cmpsl
sarl
fcompl
jg
xor
pop
stos
in
mov
repz
lcall
hlt
cmp
rolb
rep
outsl
xchg
cmpsl
adc
fmull
inc
popa
add
push
fsts
daa
add
int3
mov
in
lds
ficoml
xor
mov
out
lds
lcall
pop
xor
mov
jmp
dec
pop
sahf
leave
and
add
xchg
jne
imul
pop
inc
mov
mov
rclb
cmp
dec
in
xchg
in
out
jmp
ret
leave
mov
sbb
pop
addr16
ror
sbb
in
insb
ret
fcmovne
mov
imul
xchg
loope
ss
nop
addl
aam
and
mov
lahf
subb
mov
or
mov
push
xchg
pop
fwait
call
xchg
xor
fmull
ffree
cmp
or
sti
xor
sbb
mov
xchg
cmp
rorb
outsl
sub
jmp
mov
scas
mov
and
fimull
inc
loop
sbb
mov
lret
dec
in
js
out
test
daa
mov
or
fsubrs
mov
push
in
aas
dec
in
fimull
imul
mov
and
rolb
addl
pushf
lcall
sub
fldcw
ret
popa
jmp
aad
inc
pop
sub
add
ljmp
or
pop
add
jae
mov
cli
pop
mov
mov
and
pop
xor
push
call
mov
and
stos
imul
test
inc
sbb
popf
jle
mov
dec
shll
dec
imul
jecxz
pop
imul
add
cwtl
add
mov
xor
jl
hlt
cmpsb
jl
xor
and
repnz
push
fwait
out
dec
mov
in
std
cmpl
ds
leave
lock
frstor
xchg
fcompl
mov
mov
test
push
xchg
dec
pop
mov
dec
stc
jle
adc
data16
push
xor
hlt
mov
pop
and
movsl
hlt
push
mov
xchg
lock
jo
sub
mov
mov
loope
leave
into
rol
and
cld
adc
or
cld
xor
je
shrl
jnp
push
clc
lcall
cmpsl
sub
xor
push
aas
mov
adc
int3
pop
or
xchg
and
lret
cwtl
or
add
lret
pop
xlat
movsl
push
fisubl
or
push
sbb
sbb
bound
stc
pusha
or
mov
add
repnz
jmp
rolb
in
fstpt
and
pop
mov
fistps
sub
scas
and
shl
inc
cmpsb
pop
jb
das
cld
pop
loop
mov
sbb
icebp
lea
push
mov
into
pop
ss
out
mov
push
in
mov
pop
mov
gs
sub
and
dec
adc
mov
shrl
adc
popa
in
pop
mov
outsl
push
cld
call
adc
les
outsl
ss
lret
pop
into
inc
ljmp
das
push
int
xor
push
mov
inc
mov
mov
dec
mov
and
add
cmp
in
shl
xor
out
scas
ja
cmp
ret
clc
bound
pop
jmp
lods
and
unpcklps
aad
stc
outsb
pop
cmp
ljmp
jnp
adc
jo
stos
jo
jno
fdivl
pcmpgtb
push
inc
fdivrl
and
addr16
mov
stos
in
ljmp
std
mov
dec
sub
add
in
popf
out
and
ss
shrb
dec
jp
jbe
xchg
fnstcw
sbbl
addr16
outsl
adc
js
sbb
popf
add
popf
pop
sbb
xor
es
mov
jno
lcall
and
and
dec
stos
jecxz,pn
iret
ds
inc
pop
mov
mov
cmpsl
xchg
and
ja
rcll
pushf
dec
mov
inc
add
pop
mov
mov
scas
push
push
mov
stos
cmp
jae
mov
rorl
cmpsb
fimuls
repz
cmpb
lret
clc
jbe
outsl
repnz
cld
pop
fidivs
icebp
mov
add
mov
mov
inc
lods
imul
shr
ljmp
mov
xlat
repnz
cmp
idivb
mov
fiadds
call
sbb
push
jle
movsl
adc
xor
dec
ret
pop
and
lret
out
xor
rep
into
sub
ljmp
out
cmp
inc
fcompl
cwtl
imul
or
xor
adc
push
jl
loopne
fldenv
fwait
push
and
fiadds
cmp
mov
adc
add
inc
lods
cli
lcall
aas
and
mov
movsb
rcrb
inc
movsb
jl
cmpsl
sbb
cmp
xchg
inc
cld
sub
sbb
arpl
xchg
push
xor
xlat
ss
sub
ss
fwait
push
mov
icebp
test
push
adc
inc
jno
out
in
mov
pop
jb
inc
sbb
push
test
pop
xchg
pop
sahf
inc
mov
sbb
das
mov
es
and
cmc
sahf
ljmp
stos
notl
fidivs
into
int
push
movsb
xor
cld
jb
mov
mov
insl
ret
mov
sub
adcl
movsb
aam
xor
jo
jp
push
dec
push
push
pop
sub
xchg
sbb
push
pop
lret
mov
mov
add
mov
add
addr16
jae
in
pop
sub
add
xchg
pop
shll
ljmp
ja
outsb
lcall
xchg
adc
inc
push
jns
imul
clc
fnstcw
cmp
ret
inc
aam
fwait
pushf
inc
push
iret
add
pop
shrb
mov
xor
js
xor
mov
into
mov
mov
je
cli
into
pushl
inc
sub
sbb
sbb
or
es
idiv
cld
mov
inc
jae
outsl
je
cmc
push
mov
ret
call
outsl
mov
jp
pop
jmp
pusha
cwtl
insb
xlat
jo
outsl
and
cmpsb
mov
jmp
adc
sub
outsl
pushf
pop
xor
pop
in
add
js
fcomi
ret
bound
pushf
out
call
rol
iret
test
push
fldl
mov
cmp
call
and
sub
imul
mov
cli
int3
mov
mov
test
lods
cmp
mov
loop
aaa
mov
jge
pminub
or
and
adc
ret
inc
jecxz
sbb
push
sbb
mov
outsl
jecxz
dec
fiadds
les
mov
xchg
sbb
cli
inc
cmp
mov
cmp
mov
and
into
fdivp
clc
lea
ljmp
movsl
sub
fisttpl
push
mov
mov
std
jg
and
movsb
int3
mov
mov
clc
int3
mov
mov
divb
mov
mov
sbb
mov
loop
pop
imul
clc
jecxz
or
fnsave
add
popf
fcompl
xor
lret
insb
pop
mov
setp
insb
inc
icebp
call
gs
and
mov
outsl
fsts
ss
lret
mov
add
sarb
cltd
repnz
pop
mov
adc
clc
inc
adcl
or
mov
mov
shrb
jno
in
mov
mov
sub
lods
jb
inc
lods
pop
pop
enter
mov
xor
js
fimuls
inc
jmp
push
scas
ss
cmc
xchg
dec
outsl
sub
lock
push
push
repnz
ja
fwait
es
mov
lds
cli
lret
sub
aad
dec
movsb
jb
xor
cmp
adc
push
pop
rcr
xor
xchg
inc
call
xchg
pusha
jbe
or
sti
nop
sub
hlt
xor
pop
mov
jno
daa
mov
jnp
scas
mov
roll
dec
orps
mov
dec
push
int
enter
sbb
in
loop
stos
movsl
lcall
out
aad
cmpsl
stos
adc
xor
push
sub
lea
xor
aaa
out
cmp
lret
stos
loopne
pop
ljmp
lret
adc
add
inc
in
ja
imul
std
xchg
lods
lock
push
pop
clc
jp
testl
add
gs
movsb
fadd
xor
das
sbb
enter
xor
ret
daa
sub
popa
aaa
xchg
sub
in
dec
push
test
push
or
mov
out
mov
icebp
mov
popa
repnz
xchg
movsl
test
enter
int
shlb
mov
mov
inc
fs
mov
repnz
lea
aas
imul
lock
sbb
dec
aam
orl
mov
in
push
cmp
mov
iret
rcrl
lcall
and
cmp
cmp
dec
fcmovb
add
outsl
sti
xchg
add
in
out
mov
shll
jmp
jne
inc
and
or
pop
fisubs
adc
push
mov
outsl
xor
insb
fiadds
sbb
jge
pop
addr16
push
push
fnstenv
adc
sahf
or
out
xchg
sub
scas
adc
imul
push
bound
outsb
lret
sub
jnp
repnz
xchg
cmp
dec
scas
and
aad
iret
push
cmp
and
imul
jae
std
in
add
mov
dec
sbb
pop
and
inc
and
ljmpw
sub
data16
movsl
call
push
rolb
orb
lods
je
lahf
adc
dec
fisubl
sub
add
push
pop
mov
rcrl
into
xchg
pop
inc
jecxz
icebp
lods
or
aas
shr
or
mov
dec
xchg
nop
in
hlt
out
aaa
sti
jmp
bound
pop
cmpsb
mov
xchg
cmp
stos
loope
mov
inc
sub
ds
push
test
add
and
pusha
cmc
sbb
and
push
and
pop
mov
arpl
pop
xor
add
mov
repnz
xchg
pop
mov
lds
sahf
enter
jb
movsb
push
cmpl
pop
push
lahf
or
mov
or
adc
stos
pop
push
xor
xchg
jge
loopne
int
loop
lcall
xchg
adc
gs
in
xchg
xor
dec
mov
std
dec
and
mov
rorb
jne
and
adc
test
out
daa
into
or
sub
mov
mov
mov
jecxz
int3
push
mov
or
movsl
loopne
leave
inc
mov
jmp
dec
or
and
add
or
ficoml
pop
popa
scas
test
sbb
mov
inc
jno
push
inc
lods
mov
xchg
notb
imul
movsb
mov
mov
cld
lcall
xchg
cmp
xchg
cwtl
or
popf
mov
test
movsl
pmuludq
push
sbb
jge
xchg
mov
mov
fisttps
loop
sbb
xor
scas
adc
and
or
cmp
das
xor
push
hlt
pushf
lret
fdivl
lcall
sahf
xorb
fisttpll
dec
dec
inc
or
or
mov
cmp
repnz
call
xlat
push
shlb
inc
lcall
out
and
mov
in
inc
cltd
mov
sar
and
flds
ret
mov
movsb
adc
inc
mov
daa
mov
push
sti
pop
xchg
cmp
xor
mov
xchg
lock
jo
mov
jg
lock
das
cmc
adc
aad
loope
ss
leave
adc
not
loopne
pop
out
imul
aas
sub
movsl
or
es
push
mov
fistps
and
jle
pusha
fwait
cmp
test
push
sahf
pop
jecxz
lret
popf
negb
dec
lret
sub
sbb
addr16
sub
push
pop
mov
enter
mov
dec
jle
adc
mov
cmp
outsb
mov
pushf
pop
xchg
mov
repz
add
pop
jmp
inc
stos
or
js
and
out
pop
mov
js
fldl
jmp
ret
cmpsl
dec
inc
xchg
sbb
lods
lret
sahf
std
roll
or
xchg
mov
mov
dec
lret
loopne
in
fists
add
sub
mov
jg
sti
div
js
sub
popf
cli
ds
mov
add
or
insl
fldcw
add
lea
lret
mov
cli
sub
scas
jns
loop
data16
cmpsl
and
fimull
stos
cs
and
shlb
adc
mov
test
cld
std
add
xchg
test
inc
inc
stc
fists
mov
pushf
movsb
lret
push
xchg
lcall
mov
or
dec
inc
sbb
jo
ret
sbb
cmp
mov
pusha
stos
jnp
mov
jp
ljmp
mov
lods
sahf
jae
mov
lret
mov
pop
xchg
pop
pop
jbe
xchg
jl
lahf
jno
test
pop
rclb
imul
mov
pop
out
aad
and
and
add
out
lock
jo
jg
adc
arpl
mov
and
xchg
mov
or
ljmp
inc
sbb
jp
repnz
inc
nop
mov
stos
cmp
fmulp
inc
cmpsb
sub
xor
std
lret
push
pop
dec
loope
mov
mov
in
xchg
cmp
inc
and
into
push
loope
out
sub
sahf
mov
fwait
jb
mov
out
xor
subl
sub
adc
add
ss
or
loop
mov
imul
and
push
je
fsubs
xchg
stos
xor
sbb
test
pop
pop
pop
daa
enter
icebp
or
gs
jns
out
pop
test
das
adc
cmp
mov
jnp
push
mov
xchg
jbe
mov
out
adc
mov
mov
mov
je
add
divb
cmp
lcall
sub
and
imul
adc
shrl
mov
std
mov
xor
or
dec
fs
or
icebp
xor
sub
das
add
mov
and
push
or
in
sub
xor
lods
shlb
outsb
xchg
clc
jo
dec
lahf
out
dec
lods
jnp
mov
jmp
pop
jmp
push
mov
cmp
ljmp
push
call
sub
inc
dec
nop
ret
test
faddl
out
fdivl
out
sbb
test
xchg
dec
adc
fwait
enter
andb
ljmp
jge
shll
pop
sbb
out
mov
jp
cmc
jns
ret
shll
lcall
int
adc
push
cwtl
js
popa
xchg
jl
pcmpgtd
aam
add
int
or
loop
or
jge
aas
hlt
cmp
in
dec
dec
dec
imul
addr16
pop
aas
dec
aas
lahf
xchg
sbb
fisubs
jns
push
mov
jnp
arpl
aaa
cmp
insb
xchg
mov
neg
icebp
jecxz
adc
xchg
cmpsb
pop
sub
xchg
ljmp
aas
mov
push
add
das
or
push
and
sbb
dec
cmpsl
aad
rolb
lock
push
mov
sub
dec
mov
sbb
and
jge
add
aas
fdivl
pop
xchg
pop
dec
cmc
mov
add
pop
xor
std
stos
mov
dec
stos
pop
and
xchg
pop
ss
push
nop
outsb
mov
pop
pop
adc
push
sub
pushf
cmp
es
std
lods
int3
xchg
iret
fdivp
xchg
sbb
dec
xor
clc
fidivrs
les
inc
test
jp
es
outsl
sbb
inc
rorb
stos
push
stos
pop
sti
sub
jb
xor
add
test
fbld
cmp
push
and
sbb
dec
mov
mov
out
sbb
adc
xchg
inc
jle
dec
push
inc
and
jbe
jmp
jns
enter
jmp
mov
sti
insb
xor
sbb
jns
pop
jl
mov
loopne
scas
add
sub
ja
pop
data16
dec
inc
pop
xlat
imul
sarl
and
mov
xchg
dec
out
add
cwtl
test
jmp
das
repz
xorl
loop
sub
sahf
dec
push
test
adc
jns
jo
pop
popa
add
jns
mov
or
inc
sub
cmc
add
pop
sbbb
inc
fsubl
jmp
add
mov
mov
mov
scas
push
jbe
loopne
lock
les
push
sarb
fcmovnu
sub
mov
sahf
or
ret
sbb
sbb
fsub
cld
sub
xor
ds
in
lds
jmp
mov
dec
mov
cmp
movsl
and
mov
mov
loop
sub
and
imul
dec
mov
ja
sub
and
test
aad
in
cmp
imul
pop
insb
xor
push
imul
outsb
add
subl
out
xchg
mov
mov
je
into
cmc
pop
push
add
dec
lods
ljmp
jecxz
sbb
sub
std
fcoms
cltd
imul
cmp
dec
or
jge
and
cmp
xchg
scas
pop
call
pop
mov
sub
je
sbb
cmpsb
sahf
add
inc
xor
je
mul
or
shll
test
sti
js
dec
dec
ret
loopne
jae
xchg
movsb
popa
xor
sub
ret
and
bound
mov
dec
clc
mov
ja
xor
add
sbb
js
cmp
or
mov
adc
and
testb
lcall
inc
add
movsb
mov
xchg
fwait
jg
popa
fnsave
orl
mov
xor
xor
fldcw
lea
fiadds
rcr
and
push
ret
decl
ss
xor
and
testl
subb
xor
int
sub
mov
pop
test
mov
divb
daa
jmp
les
add
gs
push
dec
std
mov
mov
jge
and
aam
cmp
fnstcw
ret
notl
imul
xor
xor
lahf
xchg
test
andl
loope
or
jg
addr16
lret
xor
sub
sub
push
jb
addr16
test
pop
nop
mov
and
rcrb
adc
sub
lods
ret
push
cmpsl
inc
cmpsl
inc
std
inc
xchg
ss
outsl
in
xor
orb
shll
bound
into
outsl
jo
mov
xlat
ret
xlat
pop
test
mov
lods
dec
or
xor
ret
inc
je
jno
xchg
adc
pop
cli
int3
loop
mov
xchg
fldcw
das
xchg
adc
push
pop
sub
out
xor
pop
out
jbe
sub
std
add
sahf
push
shll
fcompl
inc
repz
cmp
cmp
sub
cmp
inc
popa
push
rcl
push
or
sahf
movsb
adc
cmp
pop
out
adc
aaa
add
push
cmp
mov
adc
cs
shrl
mov
fs
scas
pop
xlat
insb
call
andl
pop
cmpsl
stos
inc
shlb
addb
mov
nop
stos
cli
les
or
js
mov
es
popa
cld
push
and
xchg
push
cmp
repz
imul
sbb
jnp
xchg
pop
mov
outsb
pop
jp
aaa
stc
mov
rclb
mov
pop
maxps
jnp
add
add
adc
sub
lret
dec
xor
inc
inc
jns
jae
in
sbb
cmp
mov
xadd
and
es
add
jp
or
xor
call
mov
sbb
test
adc
and
stc
sti
nop
rcll
stc
sti
mov
test
or
pop
mulb
dec
call
or
xor
leave
pop
rep
xor
fiaddl
adc
sbb
xchg
jge
into
jns
push
das
imul
js
fmuls
fdivrl
cmp
cmpsb
aaa
cmp
and
dec
fstl
mov
pop
xor
xchg
les
mov
idivl
or
ljmp
adc
dec
xor
pop
push
dec
fisttpl
sbb
pop
fdivrp
pushf
test
jp
dec
outsl
pusha
pushf
addr16
test
mov
push
loop
jbe
scas
adc
enter
add
in
xor
and
cmp
pop
sub
xor
ljmp
xchg
hlt
sbb
inc
fldt
mov
push
push
xor
adc
add
std
and
jge
std
popa
or
xor
aam
cmc
inc
sti
pop
out
test
clc
aas
orl
push
neg
iret
insb
sub
jecxz
add
in
insl
ret
mov
or
shl
lahf
adc
push
loope
mov
fidivs
push
jge
repz
mov
mov
adc
out
jmp
outsl
xlat
push
sub
sbbb
pop
test
push
adc
lds
out
dec
push
mov
pusha
sbb
stos
mov
and
hlt
or
clc
lock
sti
xchg
push
inc
jmp
mov
adc
or
mov
fcoms
and
add
fbstp
mov
jle
push
lock
in
inc
data16
jg
jg
or
shl
inc
je
xor
inc
xchg
push
daa
adc
jno
gs
daa
inc
or
xor
xor
xchg
stos
fdivrl
pusha
pop
pop
in
repnz
pop
stos
pop
das
inc
mov
pusha
outsl
cli
lds
adc
fsubs
data16
mov
mov
sub
xor
sarl
cld
mov
nop
fwait
jbe
out
add
out
mov
movsl
leave
mov
pop
addl
add
adc
xor
jmp
sbb
or
sbb
ret
pop
mov
mov
mov
cmpsl
mov
je
or
add
push
cmp
jb
xor
pop
shlb
adc
sti
sar
fwait
pushf
jp
or
xor
stos
adc
gs
sub
nop
daa
nop
scas
arpl
subl
lret
pop
dec
outsl
add
inc
mov
std
js
fnsave
shl
or
sub
sub
push
xchg
pop
and
mov
mov
or
add
nop
pop
inc
xchg
aam
cmp
or
stos
sbb
aad
sbb
cmpsl
roll
push
jecxz
clc
leave
aaa
push
rcrb
mov
iret
xchg
test
cmpsl
or
xchg
jo
dec
inc
addr16
sysenter
xchg
js
sbb
add
sub
jg
inc
shrl
dec
mov
testb
movsl
or
push
dec
mov
and
mov
pop
add
movsl
mov
aad
mov
push
push
push
xchg
inc
sbb
and
pop
mov
and
daa
push
and
xor
sbb
mov
jmp
int3
scas
enter
sub
std
mov
mov
inc
or
push
pop
mov
push
xlat
movsb
xchg
xor
adc
mov
lcall
cwtl
ss
dec
mov
mov
dec
movsl
movsb
repz
dec
mov
jl
sub
in
daa
mov
and
lds
jecxz
imul
dec
or
jp
pop
push
jno
sub
xchg
cwtl
dec
aas
adc
mov
inc
sbb
test
or
xor
dec
pop
xchg
fdivl
push
mov
test
jmp
mov
inc
or
pop
aas
pop
daa
outsl
in
adc
cs
imul
cmpsl
popf
test
scas
lahf
sub
xor
mov
loopne
test
jb
aaa
cmp
jmp
fisubl
out
in
test
mov
or
loop
push
pop
es
aam
push
shlb
and
cltd
imul
dec
pop
mov
mov
pop
mov
sbb
into
fxch
jb
push
je
jo
cld
mov
imul
mov
mov
xchg
mov
or
mov
pop
adc
cmp
mov
idivl
mov
pop
xchg
imul
icebp
mov
pop
sub
rcrb
adc
xor
jne
out
mov
in
mov
pop
outsb
adc
bound
xor
mov
fwait
test
cwtl
and
repz
cld
cmc
insb
jb
movsb
xchg
stc
xchg
aaa
and
mov
sub
add
push
jecxz
jae
lds
paddq
push
mov
pop
xchg
sbb
jbe
dec
inc
fisubrl
or
sbb
sbb
push
aad
stos
and
subb
scas
sbbl
out
ret
lds
pop
ror
insl
out
push
ss
and
mov
pop
mov
dec
test
sbb
arpl
fmull
js
sbb
aam
mov
out
jo
rolb
ret
cld
std
cmpl
repnz
int
stos
enter
sarl
mov
cmp
pop
lret
out
adcb
sub
in
pop
fimuls
jg
jb
stos
jecxz
cwtl
popf
add
sub
add
sahf
pop
or
xchg
push
push
loop
inc
sahf
jp
sbb
int
xchg
arpl
in
scas
in
stos
cmp
xchg
hlt
mov
pop
mov
cmp
push
xor
aas
sbb
fwait
sbb
xlat
add
jbe
scas
out
pushf
pop
enter
stos
test
add
lahf
pop
js
popa
and
pop
lea
pop
shr
in
fadd
daa
test
pop
arpl
enter
cmp
les
and
imul
push
es
mov
xchg
mov
insl
orb
ret
mov
adc
mov
daa
fwait
pop
call
shrl
jmp
loop
les
sub
in
lcall
scas
test
inc
dec
daa
psubusw
movsb
jae
and
cmp
push
push
out
cld
and
in
in
sub
dec
pop
sub
mov
scas
xor
lock
pop
mov
insb
aaa
in
lods
incb
mov
pusha
xor
or
jl
sub
lods
inc
loope
imul
push
sbb
loop
imull
dec
jno
sub
scas
jl
in
jmp
and
push
call
jo
dec
fs
mov
ljmp
and
call
jo
cmp
jmp
xchg
inc
push
subb
mov
dec
mov
ret
rclb
mov
repz
xchg
xlat
shr
test
push
mov
jno
das
pop
leave
jmp
jmp
jg
mov
test
pop
imul
inc
sub
call
int
pushl
and
imulb
mov
or
xor
jne
inc
push
cmp
xor
scas
shll
mov
orl
fcoml
xchg
lods
sbb
xor
or
xor
out
shlb
xor
or
shlb
or
sbb
mov
mov
jecxz
icebp
stc
int
das
sub
dec
xor
dec
lea
enter
in
arpl
in
inc
pusha
aad
fcmovbe
jecxz
fsubr
mov
loop
jl
jnp
in
and
xchg
add
jp
ret
add
icebp
test
mov
aam
and
adc
je
das
pusha
pop
test
or
and
sbb
out
pop
mov
fisubs
push
repz
inc
movsl
sub
cmp
fists
push
sbb
add
test
jae
inc
rolb
in
pop
daa
sar
icebp
jae
lods
les
jge
mov
sbb
xor
je
idiv
mov
jg
insl
iret
sbb
add
test
xor
jge
jmp
inc
jl
mov
mov
push
mov
addr16
mov
jns
scas
xor
sub
add
push
ror
inc
jmp
outsl
and
or
push
inc
lcall
jg
flds
adcl
xor
mull
and
jmp
rorl
xor
mov
mov
test
mov
push
insb
nop
outsl
addr16
xchg
jo
jl
fists
das
push
xlat
enter
stc
push
xchg
rorl
mov
push
fistpll
sub
jle
ljmp
and
pusha
js
jl
push
fstpl
mov
push
adc
add
or
sbb
xor
jns
nop
and
mov
push
lret
mov
cld
imulb
xor
xchg
or
jle
xor
scas
inc
sbb
ret
xchg
mov
std
mov
cmpsl
les
sbb
imul
cwtl
pop
dec
sbb
andl
icebp
lret
or
in
mov
xor
mov
push
jae
int3
mov
and
and
or
stos
daa
push
ret
mov
cmp
test
cmp
mov
cmp
add
popf
dec
and
test
mov
les
mov
mov
fists
out
jne
lret
dec
pop
cmpsb
mov
decl
sbb
jne
jnp
push
aam
lock
clc
repnz
out
outsb
aas
dec
mov
pop
stos
hlt
push
loop
js
into
nop
mov
sub
rorl
pop
mov
pushf
lods
sub
jle
adc
das
ret
mov
roll
sbb
and
inc
push
or
inc
test
call
mov
pushf
sub
mov
sub
mov
xor
in
and
add
cmp
mov
xor
and
cmpsb
add
mov
and
and
sub
sbbb
jecxz
cmp
fsubl
dec
mov
loope
cmc
and
add
sbbl
scas
xor
jg
push
int
out
imull
xchg
adc
cld
shll
fdivs
sbbb
push
in
cmpsl
daa
xlat
xor
orl
mov
loopne,pt
or
mov
add
loop
jb
enter
rcrl
adc
push
lods
dec
dec
das
out
mov
js
mov
ljmp
or
mov
stos
pop
xor
jne
sti
nop
std
fwait
pop
mov
and
loop
push
ljmp
and
fistpll
mov
into
aad
lret
cwtl
cld
insl
cmp
addb
cmp
mov
dec
pusha
inc
sbb
lods
aad
int3
jg
and
sbbl
cwtl
pop
sahf
xor
mov
fiaddl
add
fwait
mov
pop
loopne
faddl
movq
adc
sub
into
lods
push
fs
cmp
rcrb
test
mov
adc
cwtl
inc
mov
xor
fisttps
sub
mov
adc
xor
sub
or
leave
push
out
jl
enter
ljmp
lock
incb
inc
arpl
popa
outsl
cmc
mov
fs
movsl
inc
xchg
test
push
inc
pop
push
stc
xchg
mov
xor
and
push
lods
ss
inc
and
adc
xor
and
lods
bound
inc
pop
imul
addr16
out
push
or
fsubrs
loope
jno
or
jge
loopne
cmp
mov
rcrb
outsb
testb
adc
dec
sub
nop
jnp
push
ss
dec
mov
popf
mov
das
sbb
xchg
adc
imul
dec
aas
inc
addr16
xchg
rol
out
sbb
push
scas
sbb
rorb
xor
ret
jns
sub
add
outsb
fiadds
add
push
sbb
test
imul
mov
cmp
jle
jnp
mov
dec
sti
inc
xor
or
rcr
sbb
popf
cmp
popf
dec
mov
mov
jecxz
jns
mov
push
outsl
das
or
mov
mov
outsb
jl
jno
sub
jno
push
xor
lcall
insb
sbb
sbb
jecxz
pop
cmp
adc
xchg
or
xor
repz
push
cmc
push
inc
or
pop
das
mov
push
clc
rorl
aad
cld
jl
hlt
jnp
jb
jecxz
jg
xchg
aaa
lods
jae
insb
xchg
inc
mov
push
inc
insl
xchg
xor
fiadds
js
xor
andl
call
hlt
popa
les
in
mov
push
arpl
fmuls
sbb
cmp
dec
mov
insb
leave
pusha
loope
inc
fists
cwtl
mov
dec
ss
mov
mov
sub
icebp
cmpsb
pop
pushf
leave
mov
pop
notl
cwtl
adc
dec
fbld
stos
pop
mov
insb
push
mov
inc
sti
mov
xchg
inc
daa
xor
push
iret
cmp
outsb
aad
xchg
xchg
cmp
pop
or
inc
or
mov
mov
loopne
inc
mov
mov
lds
test
xchg
or
sub
lea
push
sub
lahf
imul
daa
fwait
dec
gs
push
cmp
ret
bnd
sbb
jne
cltd
out
xor
fsubp
mov
shrl
push
inc
cwtl
pusha
pop
outsb
mov
or
mov
int3
pop
and
mov
xor
std
and
ret
sub
jl
scas
or
or
jb
iret
and
push
fstpl
scas
mov
inc
jne
adc
data16
dec
test
xchg
ret
dec
imul
jbe
sub
je
mov
enter
pop
xchg
push
lods
popa
sbb
and
shll
std
das
mov
sbb
sub
mov
pop
mov
add
rdtsc
dec
or
xchg
subb
popa
ss
adc
jbe
punpckhdq
cmp
push
lds
jb
fs
mov
mov
push
imul
jae
inc
and
dec
dec
and
and
addr16
xchg
inc
aaa
mov
and
mov
adc
xchg
push
lcall
mov
ret
ret
jne
fmuls
inc
push
lcall
mov
mov
roll
daa
mov
and
pop
je
pop
aam
ret
lcall
add
lods
inc
je
xorl
popa
mov
pushf
std
mov
inc
jle
pop
pop
xchg
sbb
jmp
lret
adcb
repz
and
xor
hlt
mov
and
and
jo
xor
stc
mov
stos
rcll
gs
xchg
xchg
lock
rcrl
ja
push
push
dec
inc
dec
stos
inc
addr16
ficoms
cld
cmp
stos
jecxz
arpl
jg
mov
pop
dec
and
mov
fistpll
push
fs
sbb
gs
cs
pop
sar
daa
arpl
js
xchg
add
mov
hlt
movsl
je
stos
scas
inc
add
jp
cld
cmp
mov
sub
mov
jp
call
cmp
ficomps
bound
fs
outsb
les
xchg
daa
into
cmp
jns
cmp
lret
bound
add
pop
xor
dec
in
sub
inc
cmpsb
enter
jle
test
pop
push
adc
cmpl
cs
seto
jne
fldl
mov
fists
jo
and
shll
xchg
dec
add
dec
js
rolb
icebp
push
xor
jno
adc
je
inc
fcmovnbe
jne
pop
sbb
es
cmpsb
push
out
add
mov
addb
je
push
dec
xlat
les
dec
bound
jle
sbbl
push
inc
xor
xor
lret
mov
push
xchg
fldt
mov
rclb
pop
mov
jecxz
loopne
out
lds
jge
push
loopne
mov
mov
dec
lea
dec
fst
mov
loope
scas
aam
sub
fldcw
imul
fisubrl
xchg
xorl
imul
pop
cmp
pop
std
or
adc
sarl
lret
mov
les
cmpsl
cmpsl
xchg
nop
and
jae
out
fmull
je
fwait
aam
mov
out
stos
mov
cmp
iret
lods
rcrl
mov
pop
inc
fdivrl
sbb
addb
incl
and
stos
shlb
das
jae
mov
and
imul
and
xchg
sub
xchg
mov
adc
test
push
addl
add
pop
mov
xchg
pop
dec
pop
incl
push
xlat
jl
pop
sub
ss
decl
dec
fs
or
push
addr16
pop
pop
sub
roll
push
pusha
jg
mov
pushf
dec
mov
arpl
orl
outsl
mov
push
arpl
inc
fistl
inc
or
subb
sahf
lret
jnp
adc
daa
lods
arpl
cltd
inc
nop
xchg
rcl
cltd
cltd
les
outsb
mov
cmpl
cmp
loopne
fnstenv
outsb
or
dec
xor
in
int
mov
mov
sub
mov
hlt
dec
mov
aaa
pop
dec
inc
iret
adc
int3
out
popf
xchg
and
lods
push
cs
rolb
scas
push
pop
inc
ja
mov
inc
xor
stos
sub
xchg
fdivs
adc
inc
push
cmpsl
jae
fdivl
sbb
aas
mov
cmpsl
cmp
jmp
cltd
sub
pusha
pop
and
inc
pop
and
fdivrp
aad
mov
dec
in
out
adc
aas
inc
mov
adc
jmp
sbb
aaa
and
add
sbb
cs
popf
mov
shll
bound
aas
jl
or
inc
xlat
push
imul
fs
das
lods
pop
add
outsw
or
cli
dec
xor
ds
xchg
xchg
nop
popa
xor
cmpsl
inc
mov
daa
mov
adc
mov
xchg
hlt
aam
cld
inc
push
dec
icebp
flds
lea
cmpsl
out
stos
ss
jnp
or
add
jmp
repz
pop
rorb
add
xchg
cmp
enter
dec
cmp
ret
or
stos
jl
jae
aad
insb
stc
or
inc
ja
cmpsb
lock
adc
adc
jg
push
mov
scas
arpl
adc
test
xchg
jl
push
data16
lods
add
out
jle
push
cmp
cwtl
into
jne
loop
and
jmp
mov
loopne
pusha
inc
addr16
repz
cmp
pushf
out
loop
xchg
imul
aas
jmp
jp
lcall
sbb
filds
pop
fisubrl
xchg
out
and
inc
fs
fbld
and
or
mov
loope
je
inc
imul
jae
push
subb
mov
pop
or
push
or
xor
fistpll
scas
and
data16
mov
inc
mov
fildll
jns
dec
std
dec
xor
jle
and
cmpsb
lea
fucom
rep
jb
fs
shll
movsl
aaa
mov
orb
mov
dec
push
inc
ja
int
or
dec
sub
cmp
add
into
jge
iret
ss
jbe
ficomps
jle
xor
mov
repnz
adc
sub
pop
and
icebp
jo
mov
mov
iret
mov
hlt
jnp
lret
adc
dec
cltd
pop
pop
out
push
fsts
sbb
jo
jg
jo
mov
ds
ja
dec
mov
aam
mov
out
push
adc
sub
pop
arpl
hlt
mov
aam
dec
push
mov
out
fbstp
push
daa
mov
cmp
pusha
pop
push
sub
inc
gs
fwait
cmp
inc
push
mov
inc
stos
cmc
aam
ret
gs
iret
mov
push
jnp
iret
mov
or
into
xor
mov
xor
lods
and
enter
ss
add
push
std
in
mov
jne
xchg
cmp
xor
add
push
jge
enter
and
shrl
cmpsl
push
push
ret
bound
inc
outsb
ret
xchg
add
adc
xchg
in
pop
and
cmp
add
push
dec
xor
ss
ffree
cmpsb
popf
lret
add
mov
fwait
push
pop
lret
movsb
mov
push
fidivrs
insb
cltd
mov
pop
mov
add
mov
xor
sbb
and
pop
mov
into
xchg
pop
rorl
inc
inc
pop
ret
jbe
mov
or
push
xchg
roll
xchg
inc
scas
mov
mov
mov
xchg
stos
icebp
dec
xchg
or
cmp
popa
rcl
fnstenv
adc
xor
fsubrl
outsl
aam
aad
in
icebp
xchg
in
andb
and
sub
lahf
or
mov
inc
dec
loop
orb
roll
sti
outsl
or
sbb
arpl
adc
jno
jecxz
fwait
jg
insb
mov
fnstcw
in
mov
add
cmp
jnp
mov
enter
test
adcl
push
push
stc
adc
lahf
adc
cmc
add
outsl
ret
insl
sbb
sub
movsb
jecxz
mov
test
adcb
ret
sbb
push
adc
lds
arpl
sub
jo
int
mov
and
xor
test
xchg
jle
mov
test
iret
int3
pop
push
push
mov
push
xchg
mov
mov
scas
outsb
movsl
xchg
cld
ss
add
mov
rorb
mov
push
dec
negb
mov
iret
rol
insl
mov
mov
test
out
inc
scas
lock
daa
popf
test
xor
mov
or
movsb
in
arpl
push
jbe
and
ret
sbb
inc
js
push
into
orb
aaa
adcl
lcall
pop
data16
out
ja
push
dec
loopne
sbb
jbe
and
xchg
sub
mov
xlat
push
lds
sar
jae
rolb
js
sub
call
push
pop
add
cwtl
sub
dec
stc
mov
push
es
xorl
jns
jmp
add
mov
dec
ja
js
xchg
mov
stos
pop
jmp
fiaddl
out
jecxz
lcall
out
popw
loopne
jo
mov
add
pop
aad
mov
jbe
fidivs
insb
mov
lock
xor
mov
mov
xchg
movsb
push
shl
lock
cs
or
sbb
fidivrl
data16
xor
cltd
aad
sbb
cltd
pusha
mov
mov
and
pusha
bound
mov
fbld
jl
out
shrl
xor
xchg
cmp
inc
fs
imul
and
mov
mov
clc
adcb
je
push
popf
mov
ljmp
inc
jns,pt
jae
jl
inc
pop
dec
mov
mov
js
mov
addb
fidivrs
pop
daa
data16
ret
jecxz
jns
cli
push
push
stc
outsb
pop
mov
je
mov
in
movsl
pop
outsb
add
lods
cmpsb
mov
push
or
xchg
lods
data16
inc
mulb
push
cmovnp
pop
negl
mov
push
cs
mov
mov
test
fmul
add
je
gs
inc
fldl
repz
pop
lds
sbb
fmull
jge
pushl
pop
ljmp
mov
inc
cld
gs
sub
fs
push
pop
or
lods
adc
sbb
sub
xchg
add
ss
and
test
or
mov
jnp
xchg
ljmp
imul
sti
dec
sub
repz
loope
jno
test
sbb
mov
lds
orb
aaa
outsl
jle
icebp
xor
mov
adc
mov
pushf
and
int
int
dec
xchg
pop
loopne
std
dec
and
pop
xchg
sbb
and
push
fmuls
in
xchg
xchg
ss
lret
xor
test
jge
fstl
mov
jl
jae
mov
sub
hlt
jecxz
sarb
fsubp
or
leave
aaa
ret
test
jae
loop
aaa
cltd
ja
gs
and
leave
ror
pushf
incl
in
xchg
dec
cmpsl
dec
cmp
jno
add
add
fwait
add
push
aad
ja
scas
xchg
add
into
imul
test
fwait
xor
sar
push
push
mov
push
scas
call
sub
inc
dec
div
inc
pop
std
xorl
pop
stos
sahf
xlat
decl
xchg
cld
cmp
adc
dec
mov
call
jbe
xor
repnz
loop
add
lahf
fisubrs
sub
in
mov
negl
idivl
dec
and
filds
jmp
js
iret
mov
dec
dec
cmp
mov
mov
push
cld
push
in
or
xor
int3
and
lcall
lret
dec
es
fs
subb
inc
adc
sbb
mov
addr16
push
imul
sbb
stos
cs
jns
sub
sub
mov
aas
mov
xchg
add
out
cwtl
jne
push
adc
xor
sub
jmp
cmp
jge
pop
pop
hlt
sbb
xchg
jecxz
imul
movsb
fdiv
jb
sbb
xchg
mov
add
arpl
mov
js
dec
push
mov
repnz
je
addr16
cmpl
mov
cli
aaa
mov
mov
fisubl
or
enter
xchg
jle
mov
lret
aam
je
and
xchg
and
push
mov
adc
cmp
push
cmp
or
pop
test
popa
mov
push
xchg
jle
stos
test
sub
push
movsl
add
lock
aas
pop
cmp
inc
mov
test
or
dec
and
fcom
insb
xor
insb
dec
repz
xor
pusha
mov
notl
dec
lret
in
js
xor
mov
lret
xchg
pop
jns
clc
mov
imul
js
mov
fcom
add
jae
sub
enter
sub
fs
mov
repnz
jns
ss
push
stos
xchg
dec
imul
inc
cs
xor
mov
out
adc
dec
shlb
xchg
stos
lret
rorl
shlb
das
jo,pn
outsb
insl
out
mov
hlt
cmpsl
push
inc
xor
lret
push
jp
push
ja
jns
dec
push
mov
movb
int3
lea
xor
lods
data16
pop
push
scas
lods
adc
xor
lret
inc
stos
cmpsb
mull
int3
aaa
lods
fxch
and
lods
js
sub
inc
mov
stos
mov
rcrb
mov
rcl
jge
aad
leave
push
mov
daa
or
inc
xor
popa
xchg
ss
es
jg
pop
cwtl
rol
ret
cmpsl
pushf
ds
xchg
xchg
or
in
jae
call
ljmp
andl
gs
fsubrl
scas
and
mov
stos
sbb
xlat
stos
out
dec
sbb
jo
dec
lea
jmp
stos
jp
dec
sti
jg
add
ret
in
in
pop
fdivr
leave
popa
mov
and
pushf
scas
pop
sarb
aad
mov
mov
shrl
fisubrl
cmpsb
and
ret
sbb
imul
scas
mov
jb
in
orb
insb
xchg
adc
repz
or
sub
das
jmp
mov
fisttpl
push
popf
lock
jbe
stc
jge
mov
cmpsb
mov
pop
call
test
or
fnstcw
lock
add
data16
xchg
jns
fidivrl
out
dec
jae
mov
mov
mov
aam
roll
test
cmp
mov
pusha
sbb
push
sub
ret
mov
pop
sahf
cli
mov
lods
rorb
xchg
inc
and
negl
pop
out
or
jge
xorl
jns
cwtl
cmpsl
call
cmp
xchg
or
xlat
repz
mov
divb
xor
sbb
xchg
bound
add
loope
and
orb
dec
dec
mov
xor
sub
ljmp
adc
imul
sbbb
scas
stos
xchg
push
popa
mov
xchg
sub
mov
testl
and
scas
dec
test
cmc
xchg
inc
inc
xor
out
out
mov
or
xor
shlb
fistpl
xlat
push
fldcw
xchg
push
inc
fisubl
fisubrl
stc
cmp
icebp
sbb
loop
push
scas
or
mov
jns
and
in
test
movsb
insb
xchg
sbb
xor
ljmp
xchg
in
or
mov
movsb
shll
fidivs
push
jmp
ljmp
sbb
or
cltd
adc
das
fnstsw
fwait
repz
dec
imul
mov
adc
xlat
push
jle
clc
dec
lock
adc
std
mov
lahf
xor
enter
movsb
dec
jmp
test
sbb
stos
enter
fwait
lds
mov
push
push
pushf
fwait
pop
imul
stc
push
xor
sbb
sub
push
mull
fiadds
cmpsl
inc
ret
and
push
cmc
shrl
in
xchg
mov
cli
shrl
das
sahf
lds
pop
mov
pop
rcrl
add
lcall
cli
mov
shl
in
loope
adc
xorl
pop
ret
and
mov
daa
jnp
inc
mov
hlt
dec
pop
std
xor
leave
cli
cmp
xor
fimull
jmp
rolb
pop
cmp
push
pop
xchg
sub
add
fwait
repz
aam
push
in
sbb
sar
mov
jbe
mov
mov
adc
pusha
pop
pushf
sti
les
xor
cs
push
sub
testl
leave
jp
hlt
ss
ss
mov
popf
ljmp
jle
inc
and
faddl
xchg
adc
sbb
dec
inc
movsl
mov
xor
sbb
loope
mov
enter
mov
sub
repnz
inc
in
dec
cmp
xor
lahf
sahf
in
sahf
and
insb
subl
xor
xchg
int3
cmp
mov
ret
mov
scas
inc
adc
mov
das
out
adc
pop
mov
out
leave
fmull
cmp
shlb
leave
out
cmp
sbb
js
mov
and
arpl
push
mov
xor
iret
jmp
lahf
loope
pop
arpl
out
jae
stc
dec
enter
pop
dec
jecxz
cltd
xchg
fstpt
dec
cli
in
push
cmp
in
jnp
dec
mov
aas
ss
cmp
ljmp
xchg
push
aam
push
and
mov
inc
pop
std
stos
insl
sub
pusha
cltd
or
mov
clc
stos
or
jbe
xor
fsts
cmpsb
cmp
les
cltd
pushf
fstps
jnp
scas
aad
nop
pop
scas
mov
sub
add
fwait
add
in
or
mov
mov
inc
nop
push
adc
sub
outsl
leave
mov
and
push
xchg
dec
pop
int3
adc
add
sbb
mov
cmp
in
dec
call
rcll
std
mov
lods
sbb
jne
jge
out
adc
mov
fs
push
fiadds
jecxz
bound
pop
fdivl
jno
sub
adc
iret
dec
pop
faddp
aam
mov
add
lret
cmp
xchg
push
and
and
push
cld
cwtl
jo
dec
dec
xchg
or
cld
imul
hlt
idivb
mov
bound
pop
cmp
mov
lret
inc
dec
mov
rcrb
sbb
mov
pop
imul
xor
dec
jne
mov
out
sbb
or
jo
in
jp
lods
mov
xor
lret
and
adc
outsl
mov
mov
cwtl
imul
mov
xor
repnz
add
inc
imul
in
ds
mov
xor
ss
push
jae
aad
sub
gs
pop
aaa
jp
mov
push
pop
mov
bnd
xchg
ret
dec
add
lahf
mov
adc
or
add
sbb
ss
pop
or
aad
lahf
in
in
pop
clc
sub
in
inc
out
rclb
push
outsb
add
call
lea
push
fidivrs
shll
ja
arpl
jecxz
or
ret
push
and
inc
jg
adc
or
sub
mov
mov
mov
mov
pop
repnz
jl
lods
cmp
xchg
inc
cmpsl
push
mov
and
jecxz
cmp
xchg
out
cmp
clc
cmpsb
es
outsl
out
ss
dec
and
jl
mov
dec
fimull
addr16
jge
arpl
repz
mulb
pop
dec
lret
rorb
lods
pop
push
arpl
or
iret
push
sbb
lock
addr16
mov
xchg
xor
das
xchg
sub
jo
loop
int
sahf
cmp
arpl
cmp
popa
ja
cmp
das
or
xor
and
push
stos
push
mov
pop
rclb
sbbl
scas
push
mov
fdivrs
add
insl
lods
test
pop
out
xchg
lods
push
inc
sub
ljmp
stos
add
bound
in
out
push
inc
ljmp
rorb
push
rorl
or
stos
cmpsl
sub
jmp
mov
dec
mov
mov
xchg
sub
add
lcall
adc
jp
sbb
insb
ds
bound
xor
mov
mov
xlat
sahf
sbb
rcrl
ret
pop
iret
push
daa
xor
cltd
push
fwait
addl
jne
cmpsl
loop
lahf
mov
in
int3
add
mov
filds
mov
test
sbb
lea
dec
out
sub
push
push
scas
nop
add
ret
sub
nop
xchg
cmp
mov
add
decb
cltd
fldcw
ja
fisttpl
jo
xchg
nop
stos
inc
cmp
insl
mov
cli
or
icebp
fldcw
scas
cli
cmp
roll
nop
push
jbe
enter
mov
adc
std
and
dec
cmpl
and
ss
ja
movl
icebp
mov
xor
ja
repnz
fmuls
stc
ljmp
nop
scas
mov
jle
sub
mov
pop
inc
adc
cld
or
int
psraw
shrb
out
push
sub
sahf
cmp
outsl
xchg
add
push
movsb
js
mov
sub
add
jae
ror
jo
adc
repnz
jle
pop
fildll
pushl
cmc
cld
adc
inc
cmp
cmp
daa
sbb
mov
jmp
ss
jns
jmp
push
mov
push
and
in
out
in
sahf
mov
jno
jae
test
lcall
jge
into
adc
or
imul
inc
push
mov
sub
pop
push
ja
in
xlat
std
pop
mov
push
scas
jp
into
xchg
push
sahf
mov
insl
xchg
js
push
jne
jns
mov
sbb
lret
or
int3
test
pop
incb
sbb
js
jbe
cmp
clc
mov
test
mov
arpl
dec
cmpsl
daa
xor
cs
jae
adc
sub
ljmp
adc
sbb
sbb
jl
sbb
pop
popf
cltd
jne
pop
sub
or
pop
lcall
cs
into
sarl
movsl
data16
arpl
mov
jo
pmaxsw
aaa
hlt
hlt
mov
push
dec
into
pop
stos
sub
jecxz,pt
add
int
or
inc
sbb
xchg
xchg
inc
or
mov
push
xlat
fists
add
or
cmp
mov
aad
rcrl
popf
push
rcll
rcr
punpckldq
and
imul
sahf
fs
sub
js
les
in
shrl
cmp
pop
fstpt
js
xchg
in
add
cs
mov
js
call
out
out
outsb
lret
bound
or
hlt
pop
cmpsb
shll
addl
sahf
jnp
cmp
inc
xchg
mov
into
ds
std
rcrl
mov
push
jae
cltd
inc
jmp
out
fst
pop
subl
xor
jb
jmp
scas
call
cmp
mov
push
adc
sub
mov
cmp
mov
rcr
mov
mov
in
movsl
and
lret
ficompl
push
pusha
add
mov
mov
rcr
mov
mov
mov
es
sbbb
adc
jno
in
jnp
jns
sbb
and
cld
lret
es
push
xchg
or
cld
cwtl
mov
xchg
inc
and
push
decl
lods
jecxz
or
pop
jnp
into
xrelease
ljmp
push
lock
aaa
out
mov
test
mov
push
in
call
loope
xchg
dec
mov
jns
lods
subl
mov
dec
scas
pop
or
jns
xchg
movsl
or
cmpsl
cmp
and
cmpsl
mov
je
mov
outsb
js
push
mov
lock
lret
push
push
fcmove
idiv
push
addr16
pop
scas
mov
inc
psubusw
jmp
add
test
fidivs
mov
push
xchg
push
lret
push
adc
cmp
adc
cmp
and
loop
sbb
lcall
addr16
popf
jmp
out
jae
cmp
add
inc
daa
mov
jae
in
jae
icebp
ret
out
or
push
shlb
push
adc
dec
and
pop
mov
addr16
pop
arpl
mov
dec
dec
pop
mov
imul
mov
ret
fmull
clc
mov
jbe
jecxz
in
jo
ret
mov
std
lods
mov
out
jecxz
je
jge
aaa
xchg
insl
sbb
in
mov
dec
push
daa
inc
sti
rol
push
pop
bound
and
mov
sbb
inc
leave
mov
loop
insl
add
sbbb
push
mov
mov
movsb
scas
out
mov
gs
adc
push
adc
mov
xlat
pop
mov
int
jge
scas
mov
and
std
leave
cmp
shrb
mov
clc
hlt
or
add
lds
fbld
push
dec
xor
mov
repz
inc
inc
adc
dec
dec
fimull
lahf
scas
fcmovnu
out
push
popf
cmp
subl
shl
mov
and
insb
mov
movsl
jle
add
ficompl
xor
call
mov
std
out
sub
jae
dec
and
pop
cs
out
frstor
into
inc
int
xor
cli
push
iret
not
pop
clc
mov
out
sub
jb
pop
imul
mov
push
xchg
cmpsb
out
int3
mov
insb
fbld
pop
cmp
rclb
pushw
in
ret
lods
or
cmp
and
mov
movsl
lods
aaa
jge
mov
cmp
and
mov
popa
decb
enter
andb
pop
call
les
mov
push
xchg
fwait
nop
imulb
fwait
push
push
jle
adc
iret
xchg
loope
xchg
fstpl
outsl
das
gs
arpl
outsl
inc
mov
movsb
int3
pop
nop
mov
sub
movb
add
movsl
enter
das
jne
pop
adc
movsb
cmpsl
dec
shrl
pop
mov
adc
xchg
out
outsb
push
fimull
sbbb
aaa
sbb
cltd
daa
rolb
lea
div
mov
fcoms
jnp
push
call
cmp
xchg
dec
and
cmp
mov
mov
jne
aaa
jg
divb
call
data16
adc
push
fsub
lahf
outsb
inc
pop
xchg
shlb
repz
imul
into
push
pop
test
xor
popf
enter
insl
adc
outsb
inc
mov
sbb
fs
cltd
scas
xor
dec
lahf
xlat
jae
cmpsl
icebp
fwait
add
ljmp
lock
aam
shlb
loop
cmpsl
jns
add
jo
cmp
sub
or
sub
dec
pop
insl
int3
mov
ss
icebp
inc
loopne
repz
fcmovnb
loopne
xchg
iret
sahf
mov
xchg
xor
enter
mov
pop
lds
sti
add
sbb
mov
push
cmp
aam
sbb
fcoms
sti
addb
xor
xchg
imull
sbb
leave
ljmp
xchg
cmpsb
jl
sbb
inc
test
lods
aas
cltd
mov
ret
cmpsb
imul
add
lahf
fsqrt
cwtl
pop
and
push
into
mov
inc
jmp
xchg
pop
sub
xchg
dec
ret
dec
lcall
addr16
bound
addr16
cmpsb
mov
sub
ret
xor
pop
jbe
push
pop
test
push
ficompl
lods
sub
jmp
outsl
xchg
dec
rcll
jle
dec
inc
arpl
mov
mov
daa
pop
mov
pop
outsl
or
lods
xor
call
adc
adc
repnz
inc
ret
movsb
mov
js
pop
daa
cli
xchg
or
fcomps
movsl
cwtl
inc
or
fnsave
divb
pop
fcmovnu
xchg
cmpsb
int
dec
inc
mov
sbb
mov
punpckldq
push
popa
ss
mov
add
xor
pop
cmp
fwait
dec
enter
dec
std
xor
scas
jg
bnd
dec
cltd
enter
data16
test
mov
aas
out
scas
daa
aas
fs
jo
jae
fiaddl
mov
std
in
mov
xchg
scas
xor
in
mov
in
xchg
aad
push
outsb
call
mov
sar
out
pop
pop
mov
fwait
push
test
and
pop
jle
xor
mov
mov
push
rcl
add
mov
dec
scas
nop
test
insb
add
out
push
xor
xor
test
and
ficomps
cmp
xchg
adc
push
fisubl
cmp
adc
inc
fs
out
push
and
gs
dec
incl
js
fidivs
mov
sbb
adc
mov
cmp
test
mov
push
pop
in
cmp
mov
mov
lret
dec
jb
add
lret
sbb
movsl
ja
add
xlat
push
cmp
lretw
jle
fstpl
inc
dec
jb
mov
and
add
lcall
cmpsb
push
cmp
xor
push
sti
mov
stos
cmp
movsl
mov
xor
adc
xor
cld
add
or
shrb
adc
stos
dec
fistpll
mov
lods
xchg
in
ja
or
jl
movsb
pop
sub
testl
mov
lods
mov
pop
mov
and
add
fstl
mov
xchg
pop
dec
adc
in
jg
xor
jl
cwtl
iret
into
pushf
cmp
in
jbe
inc
clc
xchg
inc
sbb
xor
shl
imul
mov
js
stos
hlt
roll
sbb
fwait
in
jle
adc
xchg
fistps
cmp
lds
std
cmp
sbb
sub
pop
dec
or
cmc
inc
cmpsl
push
loopne
dec
mov
mov
xor
push
inc
fsubrl
push
mov
lods
and
xchg
dec
stos
push
movsb
mov
mov
jnp
adc
test
pop
mov
cld
mov
out
mov
in
or
loopne
and
push
pop
sub
xchg
bound
sbb
sahf
sub
shlb
jle
scas
push
out
add
mov
idivb
inc
lahf
mov
and
push
dec
aas
adc
test
test
in
test
or
pop
into
and
sbb
xchg
out
pusha
jo
lods
push
and
sbb
pop
adcl
shrb
adc
int3
test
push
dec
mov
dec
xchg
cmp
dec
fisubrl
xor
mov
or
sarb
push
mov
test
mov
dec
repz
cli
ret
test
movsb
int
scas
std
in
les
dec
cmpsl
outsb
enter
enter
sbb
sbb
cmc
inc
test
jmp
xchg
stc
ret
es
int3
test
push
rorb
mov
sub
push
aaa
inc
cli
scas
xor
jp
lds
enter
jecxz
shll
dec
mov
push
scas
adc
les
mov
sahf
and
cwtl
dec
sarb
test
fildll
mov
push
sbb
pop
pusha
sub
out
lods
mov
and
mov
outsl
inc
jecxz
aaa
leave
shrl
mov
stc
fwait
xchg
test
jg
fwait
out
es
xor
mov
xor
fbstp
ds
mov
fsub
imul
loop
xor
ret
pop
stos
scas
jae
test
imul
mov
int3
jns
cmp
mov
mov
fwait
xchg
clc
dec
mov
hlt
outsb
addl
shrl
mov
mov
out
imul
or
push
in
add
and
stos
cmc
imul
dec
nop
int
stos
inc
sub
movsb
fs
fisttps
ds
in
out
pop
movsl
addl
mov
dec
sbb
inc
or
cmp
lock
lret
pusha
loop
xor
sarb
mov
mov
incb
pop
cmp
pusha
jl
add
movsb
mov
pop
std
dec
pop
pop
jge
ret
bound
inc
or
lods
dec
int
mov
gs
rorb
pop
out
jmp
scas
jge
mov
push
xchg
push
pop
les
sub
xlat
sbb
aas
mov
ja
pushf
fwait
shrl
je
lcall
pop
pop
call
and
mov
data16
ljmp
cltd
adc
seto
insl
daa
test
mov
lcall
sysenter
mov
into
inc
mov
insb
aam
sub
imul
mov
lock
mul
xor
movsl
push
cmpl
decb
rorb
aas
push
sbb
cmp
xor
add
loopne
lock
jmp
jnp
mov
enter
loopne
leave
ret
pop
pop
stc
loop
mov
dec
ja
mov
leave
and
bound
or
jl
jne
adc
pop
shl
mov
jl
adc
inc
fs
pop
test
sahf
mov
xor
aad
sbb
mov
cld
or
or
cmp
nop
xchg
and
adc
daa
loop
or
scas
cmpsb
and
int3
inc
push
cmp
and
insl
adc
sub
movb
lret
xor
inc
dec
shrb
mov
test
jae
outsl
lea
incb
icebp
movsb
stos
or
movsb
xlat
xor
in
jge
adcl
sub
push
push
sbbl
xchg
notl
xchg
es
out
cmp
aaa
subb
push
adc
outsb
pop
sbb
add
repnz
inc
clc
sbb
mov
dec
rol
dec
enter
sub
repnz
adc
jne
pop
leave
cmp
mov
test
mov
mov
pop
mov
lds
hlt
je
dec
and
inc
sbb
testl
stos
inc
divb
ret
aad
dec
sbb
arpl
in
lret
lret
mov
test
aaa
sti
jb
sbb
dec
xlat
cmp
repnz
jns
push
cmp
aam
push
sub
push
mov
fsubrl
mov
sbb
lock
aas
sbb
mov
ja
loope
xor
ds
lock
xchg
inc
mov
test
outsb
dec
adc
leave
xor
mov
jmp
dec
jg
dec
or
lods
scas
cmp
mov
sbb
inc
cli
push
sbb
and
icebp
or
adcb
xor
ret
sub
and
icebp
in
jae
cwtl
orl
sbb
daa
inc
outsb
aaa
scas
and
ffree
scas
cmp
jns
xchg
popa
daa
dec
lods
leave
popf
pop
repz
mov
mov
jae
jg
iret
andb
movsl
mulb
mov
mov
mov
icebp
and
add
add
jge
movsb
dec
xchg
xchg
inc
fadd
xchg
xor
mov
xchg
mov
mov
and
sbb
sahf
xchg
sub
sub
or
lods
dec
stc
and
cmp
jg
jnp
jmp
test
ljmp
sbb
and
add
sub
sbb
push
in
mov
xchg
xor
sbb
int3
mov
pop
je
xor
xlat
fnstenv
pcmpgtb
cmpsb
dec
push
mov
push
repnz
push
negl
popa
mov
mov
push
pop
dec
or
mov
mov
pop
das
cmp
gs
xlat
jno
xor
dec
xor
push
decl
cmpsl
sahf
sub
lock
sub
insb
jmp
nop
shrl
pusha
mov
cmp
push
cmp
push
mov
jno
aam
aam
add
jae
inc
into
jne
popf
fsts
sbb
lcall
adc
orl
out
flds
daa
and
mov
or
fmuls
nop
scas
sbb
shll
mov
adc
dec
jbe
mov
out
gs
bound
push
fld
mov
dec
push
add
mov
xor
cmp
jmp
xlat
ds
and
ret
pushf
repz
fsubs
fmull
push
sub
pop
sub
sbb
xor
mov
pop
add
in
dec
in
cmp
test
inc
scas
into
xchg
aad
or
sub
lret
cmp
sbb
insw
or
or
jp
xor
jnp
and
xrelease
or
fidivrl
filds
out
sbb
mov
ret
jbe
sub
cmpsl
mov
sub
xchg
jne
xchg
mov
or
dec
and
lret
mov
mov
or
in
mov
mov
js
sub
dec
adc
lcall
xchg
xor
and
popf
inc
aaa
mov
in
out
or
adc
andl
arpl
cmp
or
push
dec
push
scas
inc
nop
jbe
xor
lds
rolb
enter
or
aad
test
jmp
push
pop
sbb
ret
lods
fdivl
sbb
repnz
inc
or
out
pop
xor
ss
std
jecxz
cmpsl
sub
scas
jb
fsubrp
addl
inc
jg
dec
nop
sbb
and
enter
or
scas
cmpb
fsts
in
addb
lods
jo
mov
and
clc
xor
jge
fdivrs
adc
mov
push
pusha
fmull
cmc
lods
adc
pop
pop
inc
cmovns
inc
push
loopne
daa
ret
iret
loope
sarl
mov
insl
push
fs
dec
inc
and
test
lock
mov
cmpsl
inc
and
repnz
mov
mov
in
addb
mov
mov
imul
sbb
adc
es
cmpsb
push
stc
xchg
inc
xchg
jp
jns
in
lret
xlat
cwtl
inc
arpl
mov
cmpsl
daa
jbe
push
subl
push
in
loop
xchg
ret
jno
adc
clc
add
mov
mov
sar
cmpsl
xchg
adc
push
sub
jns
imul
add
into
mov
mov
mov
es
int
jge
shlb
fdivs
mov
sti
jg
rcll
and
imul
das
mov
hlt
cmpb
fisttps
jnp
xor
cmp
std
loopne
push
mov
xor
movb
dec
mov
loop
pop
cld
dec
cmp
cltd
repnz
lods
insb
add
sbb
pop
sub
pop
mov
out
pop
icebp
xchg
xchg
rdtsc
inc
fwait
pop
push
mov
inc
scas
in
lods
es
mov
mov
mov
setns
decl
lds
sbb
cmp
cmc
sub
push
push
adc
testb
xlat
xchg
lahf
push
jge
jb
lods
add
sub
jbe
and
or
scas
data16
and
filds
xchg
int3
jns
ja
fcmovbe
xchg
out
jge
inc
cmpsl
movsb
cmp
cmp
cli
sub
imul
and
mov
fcmove
cmp
out
mov
jbe
push
test
push
test
out
jno
and
outsl
xchg
push
mov
sbb
sbbb
sarl
xchg
iret
and
sbb
stc
popl
stc
push
inc
lret
sti
shl
inc
iret
outsb
fisttpl
jns
shrb
dec
dec
adc
cmpsb
and
rolb
mov
xchg
lea
add
mov
push
rcll
shlb
ds
jmp
adc
popa
loope
xor
sbb
in
sub
xchg
cmpsb
xor
sbb
stos
lahf
pushf
inc
push
sub
rorl
mov
adc
leave
rolb
int
outsb
lods
push
cmpsb
cltd
popf
push
sahf
iret
jp
movsb
mov
out
push
daa
push
or
xchg
repz
cmp
pop
divl
jno
add
ljmp
sar
cmp
addb
popf
mov
pushf
mov
clc
popf
into
cmp
outsb
addr16
outsl
adc
push
out
push
dec
jp
sahf
sub
xchg
call
ret
cmp
cmpsb
mov
push
inc
pop
and
lcall
cwtl
enter
icebp
mov
in
lock
std
divl
mov
mov
shl
fnstcw
mov
sub
scas
in
sbb
cmpsl
adc
mov
push
lods
int3
lret
adc
mov
nop
push
cltd
xchg
nop
inc
sub
jo
enter
or
popa
inc
pushf
pop
cli
push
and
push
xchg
mov
int
sahf
shl
das
ret
adc
out
call
fsubs
scas
xchg
xorl
xchg
aas
mov
movsl
mov
orl
lea
insl
cmp
add
sbb
jbe
loope
cltd
adc
repnz
lds
dec
in
iret
testl
sbb
cltd
pop
decb
in
test
sti
mov
rcrb
add
imul
fistpll
notl
mov
dec
imul
or
xor
and
out
push
insl
adc
icebp
cmp
out
inc
cmpsl
push
push
out
xchg
push
jae
sbb
stc
push
push
and
insl
push
lcall
test
jmp
pop
fs
arpl
dec
dec
ret
out
test
aaa
daa
add
je
lret
ficoml
enter
mov
loope
mov
data16
fs
jo
sbb
in
bound
push
decl
push
stos
ljmp
jbe
and
inc
mov
push
xchg
scas
into
repnz
mov
sbbl
xor
imull
out
inc
jnp
and
cmc
std
mov
xor
or
sbb
pusha
insl
pop
push
out
or
ljmp
fdivrs
dec
mov
mov
rclb
sbb
testb
and
shrl
cmpsb
test
das
jo
mov
cmpsb
pop
xchg
jl
sbb
pop
and
pushf
data16
push
mov
inc
das
pushf
outsb
aam
push
fwait
pusha
rcll
mov
xlat
adc
sti
xchg
icebp
idivb
jge
outsl
out
mov
pop
daa
push
std
adc
in
jle
pop
ret
testb
dec
adc
ljmp
push
or
data16
inc
mov
daa
lret
les
test
mov
js
icebp
dec
xchg
movsb
add
inc
or
into
dec
cmp
je
dec
aad
ret
add
sbb
addr16
and
add
cli
call
lret
push
icebp
enter
dec
cmpsb
cmpsl
cmp
fs
clc
imul
stos
loopne
popf
cld
add
adc
xor
sub
hlt
stc
cwtl
push
cmpb
decl
jbe
pop
icebp
shrl
add
and
stos
mov
inc
push
dec
ljmp
fwait
mov
xlat
repnz
inc
and
sahf
xchg
pop
mov
jg
ret
jmp
std
jb
and
xor
jp
hlt
xlat
bnd
xlat
mov
lds
or
pop
enter
jb
or
adc
loopne
gs
fwait
cs
pop
popa
inc
sub
sbb
xchg
xchg
pop
sti
ss
mov
iret
addr16
jmp
xchg
icebp
mov
insb
lea
mov
jb
repnz
mov
sub
cwtl
pop
das
aas
ljmp
jmp
call
sub
imul
pop
dec
push
test
lock
addr16
repz
out
insl
and
ficompl
sub
and
sbb
jmp
mov
scas
stos
aad
pop
jnp
rcrl
pop
sahf
scas
mov
int
repz
cmp
out
mov
xlat
sbb
jmp
aaa
repz
popa
sbb
repnz
pop
adc
imul
push
sbb
ja
xor
and
arpl
mov
xchg
andl
xchg
and
rorl
fidivl
stos
jnp
lret
mov
aaa
xlat
xchg
sub
cmp
int
mov
repz
jl
outsl
test
in
fwait
or
ret
in
out
push
jle
fs
fs
out
inc
xor
mov
and
xchg
scas
stos
lret
mov
hlt
stos
test
mov
sahf
rcr
loope
sbb
ljmp
aaa
xchg
rorb
push
add
inc
jecxz
jo
loop
fcom
add
mov
out
pop
xchg
mov
pop
sbb
wrmsr
insb
pop
add
xor
fildl
je
dec
jecxz
jbe
mov
aam
fsts
mov
andl
cs
roll
movsb
mov
adc
hlt
cmp
loopne
paddsb
and
cwtl
subl
inc
sub
fiaddl
jno
and
ret
cli
in
stos
inc
dec
out
mov
mov
xor
fstpl
fdivl
xchg
sbb
scas
xlat
jo
mov
rorb
mov
pop
jo
add
mov
cmp
lods
mov
lret
xchg
push
sub
aas
pop
fs
pop
shlb
cmp
jg
rcl
test
pushf
lock
sbb
cmp
lods
test
sti
cmp
icebp
jle
loope
sub
jae
inc
mov
push
rclb
popl
mov
data16
imul
aas
add
lods
mov
jae
and
les
pause
scas
adc
andl
push
clc
mov
call
sub
cmp
mov
dec
xchg
push
mov
jge
stc
std
cmpsb
subl
mov
icebp
pusha
cmp
push
dec
into
mov
movsb
test
cwtl
popa
aaa
pop
pop
jb
mov
incb
add
jl
lds
pop
fstpt
not
push
sub
pop
pop
mov
push
aad
int3
push
sub
sti
fnstenv
xor
adc
insl
sub
int
inc
sbb
das
das
and
repnz
or
add
adc
and
adc
es
push
xor
ror
adc
fidivrs
push
pop
ds
xchg
push
andl
dec
sbb
es
sub
sub
sbb
and
cli
mov
cmp
jg
xchg
mov
adc
push
mulb
inc
ficomps
ss
xor
lea
imul
jno
int
mov
jmp
xchg
or
inc
ret
or
test
adc
imul
dec
lahf
sub
scas
mov
cmp
sbb
dec
popa
dec
mov
ds
push
adc
in
xchg
xchg
std
jae
call
mov
or
lods
iret
pop
cmp
out
lcall
inc
cmc
cmp
sbb
pop
jne
mov
leave
mov
mov
cmp
sbbl
add
ljmp
sub
sbb
xor
cmp
imul
push
call
mov
call
inc
aad
popa
and
sub
les
xchg
mov
inc
mov
sarb
push
adc
xlat
leave
int
xor
in
push
pop
xchg
pop
ret
xor
inc
push
fcoms
xchg
ror
mov
arpl
ja
push
test
mov
xchg
test
jns
push
xchg
sbb
mull
leave
outsl
cmpsl
lds
movsl
sub
cmpsl
cmpsb
adc
sub
scas
mov
pop
add
hlt
jp
movsl
movsb
pop
add
and
mov
and
leave
repnz
adc
loope
pop
sub
jmp
push
in
adc
je
stos
inc
mov
dec
subb
pusha
test
dec
mov
mov
mov
jecxz
cmp
cmp
sahf
mov
stc
push
xchg
push
dec
and
cmpsl
adc
mov
arpl
mov
popa
mov
andl
aas
xor
mov
pop
addb
jg
inc
in
f2xm1
sub
push
mov
cmpsb
mov
test
in
dec
aas
pop
stc
in
popf
mov
adc
out
mov
scas
sub
mov
cmpsl
lods
iret
insl
cmp
jecxz
dec
inc
in
hlt
enter
sbb
jbe
sub
arpl
pop
mov
pop
pop
xchg
ds
sti
xchg
pop
enter
not
sub
std
and
cltd
lods
mov
inc
sbb
cmpsb
and
sarb
xchg
inc
fsubrl
call
jbe
jle
sub
ja
jle
cmp
cmp
stc
gs
test
data16
dec
decl
and
pop
xchg
aas
mov
int3
cld
out
push
icebp
cltd
push
stc
or
mov
rclb
xor
dec
addr16
cmp
xor
lahf
jne,pt
int
cld
loop
aas
dec
in
xor
lea
adc
mov
cli
mov
fcoml
mulb
fsubs
sub
in
jb
int3
int
ss
rolb
ljmp
dec
cmp
mov
mov
sahf
mov
add
push
jb
jmp
sbb
cli
fpatan
xchg
sbb
popa
xchg
mov
lret
dec
xchg
lret
mov
cmp
ljmp
inc
loop
movsb
mov
dec
lock
data16
mov
or
stc
push
pop
or
xlat
or
dec
xchg
cmp
jne
adc
pop
inc
push
dec
mov
fst
js
hlt
xor
cmp
daa
mov
xchg
data16
int3
xchg
dec
push
jbe
ljmp
popf
mov
mov
out
cltd
lahf
push
dec
jno
cmc
fs
cmp
jecxz
or
pop
adcb
and
dec
mov
jecxz
movsl
jns
mov
or
sbb
sti
loope
adc
xor
loope
addr16
pop
sbb
and
xor
inc
pop
fnstenv
or
sbb
pop
mov
stos
cmp
xor
adc
dec
adc
dec
inc
ret
pushf
lcall
les
shlb
rol
mov
xorl
stos
dec
jmp
ljmp
jp
es
cli
xor
cmp
jne
enter
daa
test
jp
popa
orb
insl
daa
stos
mov
push
jl
cmp
pop
sbb
mov
cmp
lock
fcoml
mov
sahf
mov
sub
jo
ret
cmp
outsl
jge
shr
ss
or
les
sub
lods
arpl
test
jbe
insb
lret
or
cmp
add
repz
inc
pop
pop
stos
add
jns
lret
cmp
rcll
int
xchg
out
and
mov
icebp
pop
cmc
insb
cmp
loop
popa
scas
mov
shlb
add
stos
sbb
lds
repz
test
scas
sbb
sub
mov
xor
dec
mov
inc
adc
adc
add
fsubr
sbb
xchg
fidivs
outsl
lods
push
xchg
ljmp
loop
sti
jo
jmp
dec
mov
aaa
inc
insb
jae
popf
aam
mov
add
push
sub
mov
arpl
out
push
mov
cmp
mov
adc
test
or
sbb
mov
paddq
mov
pusha
and
insl
xchg
out
cmc
adc
sbb
dec
mov
mov
rcl
pop
pop
mov
pop
sub
sub
pop
call
loopne
hlt
jbe
fnsave
jge
or
ret
sti
mov
fists
cltd
inc
mov
mov
in
fwait
inc
lea
or
mov
mov
mov
aaa
xchg
cld
out
sahf
das
mov
xlat
lret
push
and
pop
out
cmc
dec
sbb
arpl
mov
xchg
mov
sub
sti
jmp
lods
pop
dec
xchg
cmp
fadds
mov
rcll
adc
xchg
adc
testb
or
pop
out
shl
pop
lods
loope
dec
or
add
adc
lea
or
int3
dec
nop
mov
in
xchg
lea
ljmp
and
out
add
fcmovnbe
test
lods
adc
in
roll
jg
cld
pop
pop
sbb
mov
lcall
inc
test
repz
mov
mov
jecxz
cmpb
and
mov
push
sub
pop
adc
cmp
fidivl
arpl
cmp
cmpsb
xor
cmpsl
out
jb
addb
popf
data16
sbb
xchg
sbb
sub
cmp
cmp
mov
shll
clc
jb
rorl
jae
test
outsb
mov
mov
mov
std
pusha
ja
shl
stos
xchg
xor
mov
push
jo
aas
push
fisubl
push
xchg
cld
out
f2xm1
rcrb
dec
decb
mov
bound
jp
cmpsl
xchg
cmpsl
test
lock
scas
xchg
cmp
inc
jle
and
mov
std
mov
jl
cmp
pop
sahf
mov
inc
dec
int3
test
or
addl
push
xor
cs
ret
add
aad
cmpsb
push
lahf
push
push
jno
push
cmpsl
mov
inc
mov
setnp
movaps
xor
xchg
int
bound
inc
rcrb
push
and
notl
daa
out
pop
mull
jecxz
in
dec
cld
test
iret
dec
cld
gs
add
or
pop
sbb
mov
add
add
sub
lods
addr16
test
rclb
leave
and
jae
rcr
inc
fwait
cs
adc
rcrb
or
clc
js
ret
adc
xchg
int3
push
mov
xchg
popf
jbe
adc
jp
dec
sahf
test
push
clc
lods
cmc
mov
xor
loope,pn
mov
scas
loope
jmp
sahf
popa
add
nop
and
pop
cmc
popa
pop
mul
and
stc
pop
pusha
ss
jp
mulb
mov
pop
fwait
imul
inc
sbb
dec
or
repnz
addb
inc
lret
mov
xchg
lods
cmp
fs
aas
js
pushf
bound
xor
jbe
in
xchg
pushf
pop
loope
ja
jno
xchg
sti
lds
pop
insb
ja
xchg
notl
aad
sarb
leave
loop
sbb
pop
pop
fwait
inc
adc
pop
and
mov
fidivl
inc
xor
loopne
dec
pop
lcall
xchg
out
pop
cmp
fldcw
push
sub
sub
cmp
jne
or
imul
and
xchg
jge
mov
jmp
push
mov
scas
lds
or
js
pop
std
stos
xor
add
in
cmp
push
shr
sbb
push
addr16
pop
jae
test
push
lret
shlb
and
aaa
stos
add
hlt
shr
mov
cmp
pop
filds
rolb
fstpt
push
pop
sub
adc
cli
and
bound
sbb
rol
movsb
sub
jae
ljmp
fstpl
mov
push
jecxz
loop
push
jmp
imul
and
inc
fnstsw
sub
ret
xor
cmc
jbe
fsubrl
mov
int3
insb
inc
fstpl
push
stc
xchg
jnp
jo
push
imul
cltd
sahf
sub
es
movsb
mov
xor
jo
jle
add
push
mov
rorb
pop
xchg
aas
lods
and
fldenv
cmp
fbstp
mov
mov
fildl
jmp
ja
mov
jp
cmp
cwtl
xor
out
imul
sub
loope
es
cmp
xchg
cmp
int3
pop
inc
lds
es
and
in
cmp
adc
xchg
push
and
stos
mov
in
jp
dec
out
push
leave
mov
xor
shl
mov
sbb
frstor
add
add
jae
in
or
stos
dec
pop
mov
repnz
push
pushf
loop
lock
test
in
mov
xor
or
xchg
aam
insb
inc
jg
dec
pop
sbb
xlat
loop
inc
lods
mov
inc
and
jge
xor
and
push
clc
push
fdivr
shr
popa
or
inc
sbb
jns
rcll
std
movsl
arpl
aas
lock
push
dec
adc
xorl
aaa
sub
push
jnp
lea
data16
jnp
sbb
sub
adc
in
pop
int
jns
icebp
fst
in
dec
push
nop
cld
dec
fiadds
push
jae
or
xor
popf
cmc
icebp
bound
jae
jbe
lahf
dec
inc
ret
push
adc
push
and
jae
adc
gs
xchg
mov
fs
xor
ret
add
mov
pop
fwait
xorl
push
cmp
pop
jecxz
pop
cltd
inc
push
loopne
mov
adc
xchg
sbb
imul
ds
jl
jae
push
cs
pop
xor
jb
push
pop
adc
xchg
and
lea
jp
mov
cmpsl
out
pop
xor
jcxz
mov
cmp
cmpsl
inc
in
mov
xor
test
outsb
test
frstor
ficompl
and
sub
inc
mov
jl
fstl
jae
stc
aad
sti
or
cmp
push
cli
pop
ret
jl
int3
pop
arpl
sub
mov
js
ljmp
mov
mov
cmc
ss
xor
xchg
out
jo
jne
pop
outsb
daa
arpl
push
divb
or
movsl
dec
and
scas
jl
aad
sbb
jns
jbe
loope
push
lcall
test
cmp
or
inc
or
cli
jne
xchg
pop
pop
fmul
pop
ficompl
mov
mov
or
iret
push
aad
movsl
push
testl
jecxz
pop
je
inc
iret
in
cmp
cld
pop
jge
cltd
adc
or
sarl
xchg
dec
nop
mov
mov
aas
hlt
jle
lahf
adc
mov
iret
cmp
lods
out
cwtl
inc
sahf
mov
jp
or
add
dec
ret
mov
or
push
cmp
lea
iret
mov
mov
mov
and
int3
xchg
mov
mov
int3
cmp
sbb
repnz
mov
pop
test
cmp
ds
xor
mov
mov
fisubrs
mov
push
push
jecxz
and
sub
sub
stc
push
clc
push
cmp
insl
daa
ret
fisttpll
shll
lahf
fucomip
dec
jge
pop
cmp
sub
sub
test
pop
int
sub
mov
int
and
sahf
push
and
mov
int
sbb
cwtl
add
out
testl
scas
dec
adc
adc
jno
loopne
clc
imul
stc
push
xchg
sub
out
dec
push
cmp
sbb
andl
jmp
adc
out
push
or
shl
dec
xlat
bswap
pop
rol
dec
xchg
push
lahf
mov
movsl
sub
cwtl
mov
pushf
aad
das
add
mov
push
lods
loope
and
dec
jno
aas
mov
scas
and
outsl
mov
push
mov
loop
pop
ficoml
cli
setnp
mov
inc
jg
cld
and
test
adc
scas
mov
pushf
mov
int3
bound
mov
mov
xchg
push
cli
lods
xchg
fs
sub
pop
or
push
mov
push
pop
clc
dec
xchg
subb
int3
cs
int
notl
push
jo
mov
pop
iret
nop
mov
xchg
push
jbe
rclb
sbb
cmp
push
sbb
sarb
psllq
jle
loope
fnstenv
loop
xchg
mov
mov
dec
ret
xchg
xchg
shlb
in
fs
cltd
sub
push
cmp
xchg
jnp
cmp
lea
enter
jns
lds
std
ljmp
jae
fsubl
and
inc
cmc
div
mov
mov
dec
add
insb
xchg
mov
cmp
push
adc
mov
push
ret
sub
push
fdivrp
leave
sbb
inc
cltd
sub
jg
pop
push
les
and
popa
int
jns
stos
lcall
jecxz
pop
pop
inc
and
and
push
lret
into
jne
adc
mov
xor
loop
int
cli
aam
movsl
mov
cmp
pushf
out
cld
xchg
jmp
mov
leave
rolb
add
icebp
mov
data16
subl
sub
mov
and
mov
sub
aas
sub
fistps
jnp
repz
cmc
insl
ja
push
rorb
shll
stc
push
cmpsb
dec
scas
fwait
cmpsb
or
inc
cmpsl
jno
aas
pop
sbb
aam
cmpsl
test
in
or
mov
js
mov
js
add
mov
testl
lcall
mov
enter
jb
iret
mov
aam
mov
pop
pop
cmp
xchg
outsb
mov
aas
repnz
loopne
mov
mov
or
xchg
scas
adc
push
push
test
mov
flds
cmp
or
cmp
mov
dec
insb
inc
jl
or
push
or
jg
dec
pop
dec
and
push
aas
push
in
cmpl
test
cltd
cmc
xchg
jge
push
jbe
or
add
adc
sbb
xor
add
loop
js
sbb
test
and
mov
ds
insb
xchg
lahf
mov
jge
xor
jle
inc
inc
mov
gs
js
cmp
jl
popl
sbb
mov
gs
dec
std
and
mulb
xchg
je
cwtl
mul
ss
mov
adc
cmp
push
add
into
sbb
sbb
pushf
pop
inc
int3
lret
out
mov
add
les
dec
jns
add
jns
mov
addr16
sbb
adc
and
push
sbb
jp
cli
andl
je
xor
gs
in
pop
cmp
jp
lahf
mov
mov
adcl
movsb
aaa
shll
sub
std
sub
jne
xor
and
jge
push
or
mov
sub
inc
cmp
mov
rcll
jmp
lret
daa
fistpll
inc
add
in
xchg
jmp
pusha
jae
add
mov
sbb
mov
bound
adc
test
jl
stos
mov
nop
jle
sub
jle
mov
cmp
gs
add
xor
scas
dec
lahf
xorb
mov
add
test
sub
sbb
jae
cwtl
jne
cmpsb
cmc
or
xchg
xchg
and
in
push
popa
es
pop
sub
xchg
mov
imul
insb
fiaddl
lea
jo
leave
xor
and
jbe
das
jns
sub
idivl
in
sti
out
lds
xor
push
pop
out
cmp
mov
ds
cmpsl
rcll
mov
xchg
mov
mov
push
pop
addl
test
sahf
arpl
popa
jl
pop
stos
and
jg
adc
loop
mov
and
jne
xchg
in
imul
cwtl
cmp
fs
push
movsb
imul
icebp
push
sahf
xor
scas
push
loopne
fstpt
mov
xchg
push
enter
xchg
mov
pop
stos
sub
cwtl
mov
test
mov
or
mov
fiaddl
aad
cs
push
xchg
push
add
lea
shll
rolb
mov
mov
bound
pop
ret
shl
and
fldl
in
pushf
push
jb
jmp
cmpsl
mov
outsl
inc
jle
inc
pop
sub
push
fsubl
push
xchg
cmp
and
or
fs
push
rcll
cmpsl
icebp
push
push
shrl
shl
pop
ljmp
repz
xchg
cmpb
mov
insb
insl
stos
jge
ret
shrb
lcall
addr16
xchg
pushf
and
inc
sub
pop
sbb
dec
push
movsl
mov
and
push
test
mov
mov
repz
mov
stc
inc
mov
mov
pusha
mov
lcall
xor
mov
pop
in
les
add
add
push
jg
ljmp
ja
fistps
gs
xchg
stos
mov
push
call
pop
popa
fs
jns
push
or
cmp
pop
or
imul
ret
pop
popa
outsb
sub
scas
add
mov
lret
popf
pushf
dec
dec
in
icebp
aad
ret
mov
mov
jno
sub
out
stc
add
jecxz
mov
js
jmp
add
es
sbb
inc
pushf
sar
les
push
sbbl
sbb
add
lock
fs
add
arpl
and
jp
shrb
mov
jp
stos
imul
out
or
test
aam
jecxz
dec
adc
jp
aam
pop
stos
adc
xchg
push
pop
stc
shll
sbb
lret
mov
sbb
lret
adc
aam
testb
add
xchg
lcall
das
hlt
mov
mov
dec
add
cltd
out
push
adc
idivb
lcall
inc
pushf
mov
and
aaa
jp
or
pop
jp
mov
iret
sahf
insb
jns
pop
sub
or
jecxz
fidivs
sbb
jecxz
sbb
cmpsb
aam
fadd
and
lods
jb
lods
or
leave
cltd
out
loop
jge
insb
cmc
mov
sub
subb
subb
xor
ficoml
pushf
fwait
push
movsl
pop
aas
ror
push
cmc
xor
mov
inc
xor
jl
insl
dec
fists
aad
xchg
shll
stc
cmpsb
mov
push
outsb
lcall
pop
data16
add
sbb
in
lret
jp
mov
repnz
mov
dec
mov
pushf
ss
cs
xchg
and
fsts
add
aam
cmp
lahf
movsl
jmp
adc
mov
movsl
loop
sub
pop
xor
jnp
aam
xchg
mov
mov
shlb
mov
add
adc
mov
orl
pop
mov
push
sub
mov
mov
cld
push
mov
and
shl
std
mov
xchg
push
add
sub
add
xlat
add
repz
and
pop
test
popa
es
stos
xchg
cltd
js
push
hlt
xchg
push
xor
divl
fisttpll
cmp
xchg
sbb
xchg
push
out
sub
aad
inc
cld
adc
xchg
scas
pop
inc
pop
fidivrs
push
shrl
out
cmpsl
cmp
jl
push
in
dec
in
push
cld
repnz
mov
dec
inc
xchg
sbb
fwait
jns
inc
test
popa
rorb
inc
clc
pop
cld
es
int
mov
in
dec
mov
ljmp
sub
jns
test
outsl
push
xchg
aam
mov
lds
add
mov
popa
je
or
pop
add
shll
aam
dec
cld
push
mov
sbb
mov
inc
dec
std
jle
cmp
mov
pop
mov
cmp
out
scas
imul
hlt
loop
ss
inc
adc
leave
jmp
out
fwait
shr
xor
fidivrl
push
insb
sbb
sub
inc
inc
jae
mov
sub
into
pop
and
jecxz
mov
xor
inc
stos
sub
xorb
mov
lods
mov
jno
and
jnp
cmp
ljmp
xchg
dec
adc
xorb
in
lds
sub
jp,pn
xor
adc
and
sub
loopne
lahf
or
cmp
jg
dec
xchg
jb
mov
insl
fcomps
out
dec
out
shlb
fxch
adc
inc
lock
shrl
push
insb
ret
mov
add
rclb
inc
sbb
ret
add
in
insb
push
mov
addr16
dec
lods
das
mov
add
icebp
jge
xor
mov
push
notb
xor
or
jmp
sub
fcomps
jp
fld
fimuls
repz
outsl
popf
xchg
ficoms
dec
mov
repz
inc
add
iret
mov
or
push
push
fstp
fldenv
and
mov
rcll
inc
pop
out
loope
inc
hlt
call
dec
loopne
jl
cli
js
dec
jbe
outsb
sub
shlb
test
mov
pop
frstor
jecxz
dec
scas
cmp
les
sub
cmp
jne
jp
inc
jp
ds
mov
mov
test
roll
cmc
rcr
or
jl
sbb
jno
stos
mov
xor
pop
add
aas
mov
js
mov
lret
ret
repnz
inc
lock
dec
stos
xchg
add
cmpsb
dec
sub
mov
ret
lcall
xchg
or
fildll
jg
or
nop
fxam
fwait
jne
and
scas
dec
mov
cli
xchg
sbb
test
pop
jle
dec
in
push
mov
int
mov
jmp
arpl
arpl
lret
popf
shlb
pop
sub
jmp
data16
imul
insl
stos
ljmp
push
das
or
hlt
leave
loopne
sahf
inc
mov
test
dec
adc
lock
cwtl
shrl
cmp
je
push
and
lods
add
in
fisubl
lahf
xchg
inc
mov
jmp
mov
cmp
dec
pop
dec
mov
pop
mov
and
out
outsl
aaa
lea
push
std
imul
or
loop
movsb
xor
int3
jae
push
nop
sbb
adcl
lret
mov
mov
neg
cmp
or
inc
je
int
sbb
jg
jnp
xor
add
xchg
imul
int
jmp
test
sub
xchg
mov
xor
aas
add
push
cs
mov
lret
rcrl
cmp
rorb
add
stc
sti
pushf
pop
cmc
dec
dec
fldcw
pusha
ror
cmpsl
rorl
jb
adc
xchg
sub
or
mov
mov
addr16
mov
cmp
adc
inc
test
les
sar
jle
mov
es
shll
mulb
sbb
sub
sbb
negl
sub
sbb
popa
and
add
mov
sbb
repz
jbe
movsl
adc
js
in
xchg
movsl
sbb
rcrl
out
inc
adc
xchg
repz
jns
mov
je
mov
mov
mov
push
mulb
inc
mov
cmp
sub
lods
roll
pop
lea
dec
jnp
inc
or
test
mov
mov
es
mov
push
js
sub
imul
push
fldenv
adc
push
data16
pusha
jge
jg
pop
xchg
adcb
cmp
lret
mov
jbe
inc
sahf
jbe
cmp
lods
sbb
jge
mov
shrb
adc
ror
popa
mov
push
imul
or
mov
xor
testl
pop
iret
fndisi(8087
xchg
jp
outsl
out
sbb
ret
jecxz
lret
sbb
mov
dec
lods
mov
out
mov
inc
aas
test
stc
pop
mov
xor
fsts
sahf
inc
mov
pop
out
sahf
lcall
sub
xor
mov
int3
icebp
stos
sbb
mul
mov
mov
incb
es
rcll
xor
pop
lds
and
jnp
lret
aam
adc
js
sbb
or
mov
out
daa
sbb
xchg
add
xchg
cmpsb
fwait
sbb
jne
jae
jg
fldenv
fwait
inc
sbb
nop
divb
or
shr
dec
das
rolb
mov
xor
pop
and
pusha
lds
mov
imul
and
push
xor
mov
sub
fstpt
stos
orb
iret
push
ret
and
jecxz
or
cld
cmp
enter
faddl
jbe
lea
jl
mov
fmuls
je
lcall
push
movsl
sarl
sarb
test
inc
out
mov
adcl
jo
jae
or
or
jle
push
mov
xchg
or
lret
mov
shll
ficomps
mov
ljmp
lock
dec
sub
adc
fwait
jb
xchg
fsubl
jne
lahf
dec
aaa
out
sbb
mov
lsl
insl
shrb
cmp
pop
sbb
jmp
repnz
add
xchg
sbbb
inc
test
push
sub
jle
outsl
push
jno
cmp
inc
sti
pop
push
std
xchg
addr16
mov
mov
mov
or
adc
pop
xchg
sti
mov
fisttps
dec
sbb
out
insb
cmpsl
mov
sub
les
push
jb
lds
xor
mov
int
cmp
sub
jne
jns
rol
pop
mov
imul
fisubs
pop
popa
ret
cli
jne
dec
scas
imul
movsb
fistpl
subl
dec
push
dec
ds
push
ljmp
cli
imul
jo
pop
nop
pop
push
inc
imul
sub
push
mov
in
insb
aaa
mov
dec
cmp
mov
mov
scas
in
repnz
jo
cs
push
xchg
mov
jae
sbb
outsb
cmovge
and
sahf
cmp
pusha
bound
pusha
insb
idiv
jae
mov
mov
movsb
mov
add
add
fisttpll
loope
mov
sbb
adc
lcall
xchg
jnp
lahf
jnp
cld
sub
nop
cli
repz
pop
ja
or
ja
xlat
shlb
sbb
mov
mov
push
pop
mov
push
mov
pop
push
sub
lods
inc
mov
popa
aas
popa
xchg
jae
test
pop
push
mov
xchg
and
test
imul
jb
call
clc
sub
ret
xlat
mov
shrb
ds
loopne
xor
and
test
xchg
cmp
xchg
xchg
shll
inc
xchg
xlat
loope
sti
fimuls
mov
adc
adc
sub
jb
xchg
inc
pop
fistpll
push
cld
lcall
pop
lahf
sahf
into
dec
cli
fldenv
mov
rcl
or
pop
mov
pop
add
andb
add
in
jne
mov
dec
lds
les
cmp
mov
cltd
jmp
cld
ficoms
dec
cmp
xor
fisubl
and
pushf
push
lcall
mov
or
xchg
sbb
jge
js
ss
or
pop
inc
shrb
sbb
ja
repz
addb
leave
scas
into
ja
or
add
mov
sub
imul
pop
adc
push
mov
pop
es
jne
mov
xor
mov
cs
xor
or
pop
push
notl
mov
sbb
adc
sbb
fwait
or
dec
lret
pop
adc
insb
inc
es
sub
fidivrl
icebp
dec
lret
jmp
and
jo
je
xchg
inc
fwait
shrb
dec
mov
mov
mov
jmp
lret
pop
xchg
imul
in
push
and
lea
inc
cmp
xchg
sti
cmp
out
or
adc
stc
sub
or
mov
cwtl
je
add
ficoms
sbb
xchg
cwtl
aad
dec
incl
outsb
pop
aas
fnstcw
sub
outsb
xor
and
inc
sub
sbb
cwtl
adc
adc
cmp
mov
sub
pop
fbstp
popa
push
adc
fdivp
inc
subb
jl
in
push
ds
inc
in
repnz
add
andb
fidivs
mov
test
imulb
jge
dec
aad
mov
test
inc
dec
mov
mov
jecxz
lret
int3
stc
out
or
hlt
or
loope
mov
das
arpl
inc
daa
inc
testb
jge
and
push
aad
stos
push
sub
pop
pop
ja
push
mov
cmp
xor
icebp
aas
fwait
adc
das
adc
subl
mov
and
cli
adc
push
jp
test
pop
mov
nop
int
add
in
jb
mov
push
cmp
and
jae
sub
inc
sarl
scas
lds
xor
xchg
xlat
ret
mov
enter
call
outsl
in
add
mov
dec
popl
fadds
push
xchg
fistl
sbb
addl
orb
insl
lret
pop
js
xchg
ljmp
inc
fwait
pop
sbb
xor
je
into
xor
loope
cmp
mov
jl
or
adc
adc
int
push
lret
adcl
mov
call
fidivrs
cli
jo
ss
push
or
les
cmp
orl
or
mov
addb
loope
xchg
popa
cmp
push
fimull
push
xchg
lret
lcall
out
loop
push
dec
push
negb
adc
lods
scas
aam
les
sbb
and
mov
jae
add
ret
outsl
arpl
shr
mov
cmp
sub
inc
jbe
aad
jmp
lock
xchg
and
imul
fs
dec
xchg
imul
and
pop
push
shlb
and
or
and
mov
inc
sub
fmull
fsubs
clc
aaa
inc
mov
mov
leave
mov
into
fs
cld
jle
sbb
jl
jo
pop
xchg
gs
popa
fwait
rcr
or
fcomi
xlat
pop
sbb
inc
shr
leave
fcoms
cmp
add
fildll
lds
add
mov
aam
scas
inc
fcoms
test
jecxz
les
or
xor
rcr
cli
loop
dec
inc
outsl
inc
xlat
out
sub
lret
in
int
jp
mov
xor
enter
xchg
xchg
pop
ret
fs
xchg
std
je
fimull
icebp
sbb
fs
test
std
pop
loopne
cltd
sti
adc
jmp
adc
jns
ds
cs
fs
add
xchg
sarb
sub
and
add
mov
in
bound
lahf
mov
jbe
xchg
pusha
scas
jb
add
mov
sub
loope
jns
add
pop
jnp
loopne
or
dec
and
pop
mov
adc
pop
cmp
flds
push
mov
xchg
pop
push
sbb
inc
xchg
cwtl
jo
pop
xchg
bound
aas
dec
sti
test
lods
sub
dec
push
sbb
out
mov
aam
cmc
sub
mov
icebp
jb
jge
pop
dec
rcr
andb
mov
jno
push
movsb
xchg
andb
jp
fdivs
mov
shrl
jmp
add
sar
inc
xchg
fwait
insl
cld
in
or
scas
movsb
fnstenv
dec
add
test
push
je
lret
idiv
imul
clc
out
pop
lods
jmp
mov
sbb
shr
jge
mov
jle
in
mov
addr16
aaa
pop
aaa
or
test
dec
nop
and
hlt
inc
adc
lods
pop
xor
push
sbb
mov
lret
adc
scas
stos
xchg
ret
daa
lret
jne
daa
ret
inc
mov
xchg
xchg
push
cmp
push
mov
xchg
xchg
sarl
mov
push
pop
test
das
or
xor
dec
out
scas
daa
lods
cmpl
xor
fildll
push
mov
sahf
push
or
out
outsl
inc
jecxz
mov
mov
mov
ljmp
pop
push
movsl
fsubrl
pop
mov
and
loope
mov
adc
testb
out
mov
or
add
push
dec
jp
or
xor
mov
xchg
lret
push
sub
addr16
mov
pavgb
js
inc
rcrl
arpl
jp
pop
cmp
fucom
mov
xor
cmp
cli
imul
xor
ds
mov
jne
mov
ds
in
ljmp
jno
and
push
xchg
mov
je
sub
loopne
mov
mov
lret
out
fdivs
rcrb
mov
fistl
adc
inc
adc
cmp
cmpsb
mov
shr
lret
popf
js
jb
jne
in
lret
and
iret
jmp
notl
out
mov
or
rorl
stc
jmp
dec
push
xchg
out
cmp
stc
xor
add
push
cmpsb
push
les
or
loopne
iret
push
sub
andb
sub
test
sub
dec
mov
jle
sbb
mov
cmp
iret
pop
pop
or
cs
cmp
js
sbb
add
cwtl
test
std
ret
jo
pushf
shrl
leave
xchg
inc
in
scas
inc
add
mov
pop
decb
jl
xor
push
push
sub
add
fsub
sbb
add
nop
mov
lea
insb
std
xor
sbb
cld
pop
iret
push
outsb
push
call
das
push
ds
jbe
sbb
or
insb
or
jl
hlt
adcl
or
outsl
jp
popf
dec
in
jl
dec
cmp
rorb
pop
xorl
cmpsl
adc
je
xorl
jp
aas
xchg
cmp
mov
movsb
mov
movsb
xlat
xor
ret
ja
inc
fnstenv
mov
daa
mov
sbb
push
pop
sub
cltd
add
aas
outsb
push
addr16
mov
mov
aam
rcll
push
sub
push
rol
mov
ret
iret
sbb
xor
mov
mov
out
sar
jno
or
adc
xchg
or
int
push
pop
mov
pop
leave
in
inc
ret
movsl
dec
xor
mov
adc
sbb
pusha
push
mov
cmpsb
xchg
xchg
inc
mov
mov
mov
and
lds
inc
push
lret
movsl
icebp
jle
ret
add
mov
dec
into
sub
sbb
arpl
pop
sub
pop
ljmp
je
inc
dec
outsl
sbb
inc
jae
and
lcall
mov
lret
cmpsl
push
in
sarb
lcall
ds
daa
aad
mov
xchg
iret
in
xchg
mov
jmp
test
out
andb
fwait
mov
ret
scas
adc
les
leave
push
mov
adc
push
jb
mov
out
push
aam
xchg
sbb
cld
xor
push
fs
pop
jmp
inc
sbb
dec
add
pop
popf
sysenter
or
aas
sti
loopne
nop
jae
mov
jbe
and
out
aaa
push
test
sar
add
cmpsb
stos
scas
xchg
jl
call
cmp
subps
shll
push
and
imul
xor
incl
out
shll
popf
addl
dec
push
into
bound
rcll
inc
jnp
push
add
inc
cmpsb
xor
xor
pusha
cmp
jmp
inc
sahf
inc
ja
jnp
sub
dec
es
xchg
lret
aam
xor
push
in
dec
cmpsb
pop
push
adc
fwait
inc
pusha
mov
pop
fildl
out
lcall
jge
or
cmpb
pop
enter
popa
insb
lods
inc
push
mov
sub
sub
sar
jns
and
in
inc
outsb
ret
mov
cwtl
jg
mov
rolb
fs
insb
jmp
push
jo
push
ljmp
jg
clc
scas
addl
outsb
in
int3
push
data16
xor
adc
popa
bound
bound
xor
aad
cmpsl
imul
gs
inc
out
and
lcall
jns
xchg
cmp
out
adc
add
mov
adc
lds
dec
ficoml
sarb
lahf
lods
test
lds
jbe
add
jl
or
shll
sbb
test
sub
leave
sub
push
dec
pop
sbb
ja
in
orb
pusha
dec
xchg
popf
jno
out
xor
xor
sti
movsb
insl
fcompl
loop
sarb
push
rcrb
js
sub
mov
or
dec
xchg
scas
test
outsb
enter
cmp
push
or
cmp
cld
jnp
stc
sti
nop
gs
into
or
imul
daa
cmc
xlat
adc
clc
xlat
push
mov
adcb
lcall
push
enter
mov
push
jae
adc
sbb
mov
cmp
out
xchg
pop
cmp
sub
push
dec
test
in
or
call
add
cmp
in
and
rcll
fcoms
scas
daa
cmp
cwtl
pop
xor
fsubr
mov
clc
shr
or
cmp
in
lds
jbe
adc
and
adc
or
mov
into
mov
repnz
rol
mov
sbb
sbb
or
xor
xchg
add
sub
sahf
jp
mov
adc
xor
add
stc
loope
loope
fwait
in
int
mov
clc
repnz
das
popa
cli
cwtl
sarb
shrb
cmpsb
shlb
pop
out
cmp
inc
aaa
and
adc
test
mov
cmp
mov
jo
insl
mov
sarb
adc
clc
add
cmc
and
movb
scas
xchg
inc
lret
xchg
inc
sub
mov
push
fsubrl
cmp
decl
inc
loop,pn
cmp
jp
bnd
dec
sub
loopne
inc
push
mov
imul
xchg
mov
ja
add
iret
lahf
mov
sub
fldl
inc
aam
mov
lahf
or
jnp
xor
inc
cli
pop
shl
cltd
notl
xchg
adc
sub
mov
ret
mov
cmp
leave
xor
in
test
movsb
xchg
mov
xor
mov
movsl
fwait
sub
xchg
ss
inc
test
sub
lret
xlat
xor
mov
filds
repnz
cmc
cmp
or
cmc
pop
dec
sub
mov
shlb
lock
push
mov
in
rorb
loopne
xchg
push
sub
dec
pop
mov
jle
into
sub
and
leave
add
lahf
in
adc
imul
jge
dec
push
mov
loope
xlat
pop
aaa
fdivrl
jmp
xlat
fsub
outsb
or
repnz
data16
xlat
ret
jae
cmc
mov
cmp
or
dec
or
xor
cmpsl
inc
sti
or
pop
mov
push
xchg
push
shl
sbb
dec
aam
mov
cmp
loopne
mov
sub
sbb
mov
aad
ja
xor
out
xchg
and
dec
or
jge
xchg
inc
fwait
rcrb
and
rolb
loope
push
mov
call
bound
mov
lea
pop
push
fadd
fldl
xor
lods
ljmp
les
cmp
lahf
movsl
inc
lret
rcr
pop
mov
das
push
fstpl
and
adc
aaa
dec
loope
jno
enter
mov
and
and
sub
mull
into
out
cld
sbb
dec
mov
cwtl
sub
fcoml
je
test
imul
jl
push
cld
je
pop
mov
inc
movsb
and
lods
mov
arpl
jbe
lret
cltd
push
cli
rorl
and
xorb
or
sub
push
or
in
popf
in
xorb
pop
xor
pop
mov
cmp
nop
pop
add
add
jmp
push
xchg
das
ds
mov
add
repz
pop
pop
adc
gs
daa
fnstenv
jp
mov
test
and
inc
mov
sbb
dec
or
mov
cs
pop
mov
inc
pop
xchg
mov
mov
inc
add
sbb
cmp
pop
seta
es
loop
shlb
inc
lds
fs
movsl
scas
add
adc
or
cli
cmc
ficoml
mov
bound
addb
jmp
cmp
andl
jno
outsl
out
lods
outsl
mov
ficoms
cltd
xor
iret
call
cmp
testl
push
mov
jecxz
pushl
sub
xchg
rolb
push
cltd
fstp
das
sbb
addr16
pop
inc
movsb
dec
xchg
xchg
enter
imull
nop
mov
in
mov
inc
mov
pop
data16
imul
sub
cmp
insb
jae
mov
mov
cmc
fwait
push
pop
and
insb
movsl
mov
fs
xor
test
sti
ja
popf
rcr
mov
inc
pop
mov
stos
fwait
mov
imul
shl
sbb
pushw
pop
ret
adc
fstpl
sbb
dec
push
js,pn
push
scas
test
imul
sbb
enter
std
das
inc
int3
pop
sbb
mov
mov
hlt
and
xadd
and
push
sbbb
lahf
aas
pop
lahf
xchg
nop
inc
jg
outsl
push
adc
inc
adc
outsb
adc
je
rcll
adc
cmp
repz
adc
pop
push
push
dec
fcmove
lret
cmp
lcall
gs
rorl
shl
je,pt
or
push
xlat
push
adc
mov
call
xor
test
push
popa
popa
xor
sub
cld
imul
sub
sbb
clc
jbe
mov
stos
fisttps
nop
adc
push
xor
xchg
xchg
inc
fmull
jb
cmpsb
or
jbe
pop
dec
mov
fwait
or
jo
loope
pop
iret
stc
fidivrs
inc
jp
push
int
jecxz
jmp
in
in
cmp
fstpl
cmc
insl
pop
lcall
clc
icebp
xchg
pop
out
xor
scas
dec
jns
add
lds
or
sbb
cmpsb
cmpsb
ds
xor
addb
cld
pusha
iret
cmp
dec
or
hlt
jp
cmp
push
ret
mov
inc
rolb
xor
add
inc
pop
mov
das
xor
jns
cmp
inc
testl
cmp
add
jle
out
pop
mov
dec
jo
adc
popa
nop
dec
adc
adc
hlt
xchg
jge
cmp
scas
mov
dec
arpl
pusha
bswap
mov
adc
daa
shrb
fdiv
sub
add
and
ror
neg
loop
sbb
fs
jns
fisubl
cmp
shlb
das
cmp
inc
mov
pop
loope
sbb
or
loop
insl
int3
cmp
or
repz
repnz
in
popf
icebp
jmp
push
mov
pop
xchg
inc
xor
push
dec
sti
xor
cmp
inc
lods
dec
push
xchg
cmc
arpl
jnp
jb
sub
add
loop
pushf
call
sbb
sbb
imul
sub
stos
les
lods
out
addr16
adc
mov
or
repnz
mov
test
and
push
insl
mov
or
cld
scas
aaa
pop
addr16
cmp
cmp
and
rcrb
mov
inc
call
mov
out
outsl
aaa
fisttps
cld
dec
in
add
int
pop
fsub
add
pop
lock
and
push
dec
fdivs
bnd
push
add
pxor
rcrl
es
idivl
mov
pop
xchg
dec
sub
aam
mov
sti
enterw
jmp
xlat
aad
or
mov
pop
xchg
xlat
leave
out
jle
adc
bound
mov
pop
mov
xchg
and
lret
push
or
cmp
testb
lock
or
add
push
sub
fistps
xlat
mov
aam
pop
sbb
hlt
jge
lods
pop
and
xchg
pop
ljmp
pop
popa
pop
mov
enter
jmp
mov
stc
and
pop
loop
pop
insb
cld
shll
or
and
mov
or
in
lcall
mov
popf
xchg
fcomi
les
leave
addr16
sbb
outsb
push
shr
jge
out
jbe
aaa
push
lret
jae
arpl
push
pop
aam
sbbl
mov
mov
cmpsl
jne
shll
xchg
dec
sub
cs
out
mov
or
test
cmp
xor
and
xor
pushf
pop
dec
cli
push
icebp
push
adc
inc
fcompl
or
push
jmp
mov
xchg
sub
in
bnd
dec
pop
add
inc
sbbl
push
xor
adc
shll
inc
or
jae
mov
mov
dec
sti
es
jne
sbb
sbbl
mov
lret
pop
sarl
add
lahf
hlt
push
test
xchg
mov
mov
mov
ror
es
mov
jmp
cs
mov
sti
fs
push
mov
pop
inc
into
pushf
push
push
pop
xchg
xlat
in
pop
xor
mov
push
aaa
pop
jno
jns
jmp
addr16
lret
mov
out
cmp
mov
mov
and
jb
xor
cltd
in
adc
cmpsb
or
jbe
adc
push
outsb
sub
mov
cs
jp
fsubp
sub
mov
jb
adc
inc
pop
cmpsl
jo
xchg
ja
jmp
das
inc
push
mov
aad
add
sti
lods
je
icebp
xchg
jns
scas
gs
cmp
fsubr
xor
mov
nop
gs
inc
shlb
xchg
mov
mov
popf
sbb
icebp
push
add
push
add
inc
mov
mov
pusha
xchg
notl
movsl
or
shll
sub
mov
lret
mov
clc
pop
jb
sar
fcmovnu
sub
xchg
cmp
mov
std
scas
or
mov
jp
push
jp
push
fildl
ficompl
or
fwait
or
fidivs
inc
and
inc
sub
xlat
mov
icebp
je
xor
jo
pop
inc
jg
sub
jp
add
lcall
clc
fucomp
repz
repnz
sbb
mov
mov
inc
roll
out
std
and
cmp
cmp
mov
dec
test
push
lock
mov
adc
cld
xchg
int
or
mov
lret
push
push
outsl
ror
and
mov
iret
lock
imul
mov
into
pop
fdiv
inc
jno
je
cli
pop
xor
adc
pushf
ja
xor
stos
mov
je
ficompl
gs
add
outsb
or
or
dec
incl
mov
outsb
pcmpeqb
sbb
push
bnd
iret
mov
test
arpl
xor
data16
test
bound
lods
dec
inc
adc
and
lcall
lea
mov
push
pop
or
test
mov
cs
pop
sub
test
xor
xor
outsb
mov
push
dec
lcall
mov
push
xchg
icebp
enter
hlt
iret
nop
adc
outsb
incl
clc
sbb
hlt
ja
jmp
dec
push
call
cmc
and
cmpsl
insb
mov
stc
push
mov
sub
lods
adc
cmpsl
pop
leave
repnz
sar
and
cmpsb
js
jle
xor
imul
and
add
inc
out
stc
inc
mov
aam
sub
mov
imul
aas
lret
repz
sahf
mov
in
and
sbb
xorb
out
cmp
in
popa
ljmp
sub
push
rclb
lcall
add
and
test
ficoms
xor
insl
push
mov
mov
loope
xor
or
rcrb
add
mov
repz
jmp
fnstsw
popa
sub
fwait
lods
stos
hlt
and
jb
and
xchg
dec
mov
in
addl
rcll
jb
pop
bound
jbe
pushf
pushf
xor
les
mov
int3
lret
dec
popa
jbe
test
fnstsw
xor
lds
out
mov
movsb
out
xor
gs
in
cmp
or
pop
adc
xchg
ret
jo
in
ffreep
xor
shlb
sbb
mov
or
imul
adc
data16
xlat
sahf
push
mov
sarl
das
mov
xchg
sbb
movsl
mov
ljmp
imul
leave
imul
mov
icebp
sub
shlb
and
xor
mov
or
pusha
xor
cmp
pop
das
imul
inc
aas
popf
jge
inc
int3
pop
mov
pusha
call
pop
cld
stc
xor
es
notl
test
xchg
cld
mov
lcall
mov
mov
ja
adc
das
or
jne
pcmpeqb
jns
dec
jp
out
xchg
inc
mov
and
jnp
test
fnstenv
jle
inc
ljmp
sbb
outsl
jg
sti
push
imul
pusha
das
dec
leave
push
js
inc
and
test
nop
dec
in
push
leave
cld
jle
inc
shll
xor
mov
out
or
sub
mov
cmp
stos
xor
test
shrb
insb
and
stc
sbb
imul
sbbl
pop
sbb
or
jne
ret
xchg
loop
lods
popf
mov
jo
sbb
or
insl
pop
push
lods
push
pushf
dec
inc
jl
or
sbbb
mov
add
push
fsubs
das
into
mov
sub
test
adcl
xor
rclb
mov
jae
cmpsb
movsb
mov
push
cmp
in
ficoms
sahf
push
add
fs
push
arpl
mov
add
flds
add
sbb
divb
jno
outsb
pop
shl
aad
jne
movd
ds
jmp
jne
out
das
mov
add
xor
and
push
or
mov
fsubp
pop
mov
xchg
imul
inc
repnz
cmpsb
mov
js
mov
push
into
daa
adc
out
loope
inc
lock
ljmp
sub
aas
and
ss
sahf
mov
lret
jecxz
aam
mov
and
pushf
mov
push
sbb
cmp
clc
scas
out
inc
xor
pop
pushw
inc
daa
fisubrl
fimull
pop
cmp
fcmovu
jecxz
dec
nop
and
cli
jae
test
cli
stos
xor
adc
mov
jge
divb
cmp
mov
in
jnp
push
or
cmp
jae
lock
dec
push
jb
test
and
and
sbb
mov
shl
jno
sub
mov
adc
imul
fimuls
aad
cld
adc
mov
and
sbb
inc
in
pop
in
dec
push
fldenv
ljmp
sbb
xchg
mov
dec
mov
xchg
mov
in
imulb
or
rcrb
add
rorb
popf
jle
sbb
dec
xchg
mov
inc
cld
adc
imul
subb
cli
push
and
inc
cld
fdivp
xchg
aas
cmpsl
mov
fiadds
adc
dec
mov
cmp
xor
daa
jecxz
insb
jae
inc
mov
lds
js
mov
aam
xchg
dec
cmp
or
call
pop
inc
mov
mov
outsl
xchg
lock
adc
insl
scas
cmpsb
sbb
sbb
xor
std
mov
push
mov
test
push
mov
movsb
rolb
jecxz
sti
inc
test
dec
leave
inc
movsb
push
dec
jae
insb
sbb
mov
xchg
mov
stos
push
mov
lea
pop
rclb
in
nop
jmp
or
out
fcomps
das
movsl
scas
imulb
scas
fidivl
mov
ret
gs
aad
mov
aas
lret
jb
mov
push
push
scas
cmp
repz
xchg
adc
std
repnz
aas
pop
repnz
add
inc
adc
lods
les
xor
mov
icebp
xor
fadds
push
or
xchg
cli
pop
lea
or
xor
lods
fcoms
jp
std
mov
dec
in
sahf
xor
lret
lcall
push
pop
movl
push
dec
ss
sahf
stos
jbe
jo
and
sarl
and
push
inc
push
pop
loop
cmp
cmpsl
das
add
into
insb
or
xor
jnp
test
std
call
jp
in
adc
int3
push
or
test
addr16
inc
repnz
mov
mov
clc
jl
popa
repz
imul
add
sbb
dec
dec
adc
mov
into
fs
ds
mov
movsl
mov
jmp
xchg
xor
push
fwait
popf
call
jbe
in
jbe
ljmp
call
mov
xchg
xchg
jne
nop
push
jns
push
mov
inc
ja
xchg
in
push
mov
call
inc
xchg
cmp
xchg
pop
aas
push
dec
movsl
jne
cwtl
or
ret
adc
mov
fs
outsl
push
mov
shrb
xor
xor
fisttpl
dec
lret
mov
xchg
jae
inc
stos
icebp
xlat
or
lahf
xor
sbb
outsl
sub
popf
mov
or
push
mov
imul
test
insb
adc
push
stc
jecxz
adc
insb
cmp
ret
xchg
inc
testl
pop
xchg
push
mov
and
sbb
andb
adc
ja
dec
leave
arpl
cld
jnp
or
pop
loope
xchg
gs
cmp
push
dec
cvtdq2ps
or
xchg
mov
filds
mov
xchg
outsb
add
lds
outsb
or
push
xchg
enter
in
icebp
rorl
psubd
repz
and
inc
ss
fmuls
insl
int
fmull
rorl
test
cmc
loope
movl
repnz
mov
mov
rcl
rorl
sub
loope
test
pop
sbb
loopne
lahf
add
cli
add
int3
cs
test
cmp
inc
bnd
in
cmpsb
ss
int
xlat
popa
jo
aad
popa
xchg
xor
ret
dec
or
jp
je
enter
iret
lods
mov
mov
fadd
cmp
pop
in
mov
mov
adc
sub
mov
fwait
pop
push
mov
jo
bound
jo
dec
arpl
scas
aaa
mov
hlt
idivl
push
sbb
int
cmp
push
xchg
pop
out
cmpb
adc
test
cmpsl
cs
les
dec
or
inc
idiv
xchg
xchg
xor
mov
nop
cmp
fbstp
pop
mov
imul
inc
addl
jge
test
int
inc
lods
cmc
mov
cmc
adc
pop
cmp
pop
and
or
pop
scas
arpl
outsl
inc
mov
jo
js
popf
cltd
fstpt
or
pop
jbe
ss
test
and
cmp
fldl
push
test
fwait
stos
in
fadd
lahf
xchg
mov
cmp
fmul
jl
outsl
cmpl
daa
sbb
jns
mov
int
popa
mov
or
cmp
and
movsb
push
sub
daa
fcompl
sub
lea
cltd
jae
imul
in
push
sub
cs
fldl
pop
je
cmc
sub
cmc
sbb
scas
and
int3
fisttpl
cmp
fs
mov
mov
dec
dec
mov
dec
fsubr
outsb
mov
das
aad
test
jmp
lret
mov
inc
jmp
mov
loopne
out
out
mov
xchg
cmpsb
dec
jle
ftst
push
aam
xchg
mov
inc
xor
push
sbb
push
inc
mov
jae
cmp
or
pop
out
out
add
insb
test
es
pushf
out
out
sub
or
scas
sbb
mov
movsl
pusha
mov
adc
adc
in
sub
xchg
test
int
xchg
fdivs
rolb
aas
in
cmpsl
test
cmp
pop
or
ret
or
je
jno
fs
hlt
cmc
loope
inc
jae
pop
std
aam
pop
stos
pop
jae
arpl
add
cmpsl
xor
mov
fldt
rcr
imul
fisttpll
cmp
pushf
pop
shlb
jle
mov
inc
movsb
mov
mov
fstpt
fisubl
pusha
push
xor
repz
add
es
int
int
cld
aaa
mov
hlt
cwtl
shl
rorl
inc
sub
sarb
int
sahf
call
inc
jl
arpl
mov
and
mov
push
pop
rorl
pop
push
adc
jmp
repnz
in
push
fdivl
fistpl
ja
ret
rcll
call
add
icebp
push
and
pop
and
sub
cvtpi2ps
stos
dec
dec
mov
xchg
fsubrl
lock
push
enter
scas
cld
inc
ja
mov
push
out
sub
mov
ja
call
or
aad
push
test
push
imul
lret
fs
imul
jg
mov
push
rclb
mov
hlt
fst
lret
cmp
scas
cmc
jnp
pop
mov
insl
cmp
pop
mov
lret
outsb
imul
push
repnz
movsl
xchg
cltd
push
test
cmc
std
fdivrs
call
int
fcomps
rcrl
adc
adc
cwtl
pop
mov
ficoms
loope
mov
popa
scas
test
cmpsl
inc
mov
cmp
push
jg
sbb
push
fisubs
xchg
or
imul
xchg
mov
push
adc
push
pop
nop
dec
clc
push
jp
ljmp
lods
cmpsb
into
inc
add
pop
jecxz
add
sbb
pop
shrl
ret
addr16
mov
xlat
insb
adc
insb
push
loopne
sahf
jle
adc
aam
dec
push
or
or
push
adc
mov
inc
dec
and
ss
jmp
push
flds
fnstcw
insb
bound
and
add
inc
pop
cmpsb
outsb
jle
jmp
cli
push
push
lret
jp
gs
push
mov
cmp
cs
sbb
ja
and
int
mov
int3
bound
push
cmp
jns
div
xchg
dec
out
and
icebp
cwtl
mov
cmc
sbb
dec
ret
mov
outsb
inc
and
jo
xor
xchg
out
mov
fdivrs
jmp
addr16
xchg
xor
push
stc
cmp
xchg
sbb
call
cwtl
cmp
pop
jle
enter
fs
and
mov
add
ucomiss
mov
incb
inc
lahf
and
aam
jmp
incb
pop
outsl
ret
pop
jne
push
outsl
xorl
lahf
das
cmp
inc
cmpsb
push
push
mov
test
adc
hlt
cltd
fs
pop
and
mov
adc
popf
push
jno
icebp
cmp
mov
movsl
sub
adc
sub
inc
repnz
push
aas
cwtl
push
in
mov
cmp
daa
xchg
xchg
sub
clc
push
fldcw
daa
and
xor
mov
out
add
xchg
and
in
mov
movsb
mov
pusha
jge
mov
adc
cmp
sbb
xor
mov
lcall
insl
test
add
mov
leave
fisubrl
sahf
pop
outsl
and
mov
xchg
xor
and
mov
adc
dec
movsb
fldlg2
cltd
jmp
pop
shrl
sbb
pushf
and
std
sub
lods
addr16
in
in
scas
mov
cli
test
dec
movsl
lea
into
insl
dec
jmp
pop
fwait
mov
in
add
pop
fucomip
lods
xchg
sbb
lcall
mov
push
xchg
shl
sbb
sub
xor
or
mov
incb
inc
aas
add
add
std
sub
aad
lods
stos
mov
jns
inc
sar
add
bound
push
shrb
inc
sbb
inc
cltd
in
mov
or
adc
push
dec
cmp
bound
inc
push
orl
or
xchg
push
sbb
mov
push
andl
cmpsb
and
int3
push
cmp
in
sub
sbb
pop
into
xlat
stos
fcomps
and
xchg
push
mov
divb
lds
out
pop
pop
and
dec
imul
popf
xchg
mov
and
mov
jne
pop
sub
push
test
or
and
arpl
fldt
loop
xchg
sub
es
rcrl
ret
mov
and
cmc
inc
popa
jle
mov
sub
sbb
sbb
mov
pop
repnz
adc
sub
cli
outsb
clc
cmp
out
iret
lahf
arpl
and
fmull
loop
aad
or
mov
pop
push
dec
test
leave
cmp
mov
xchg
sbb
fisttpl
xchg
insl
inc
jbe
and
mov
add
push
push
inc
leave
add
int
shlb
sbb
repnz
ret
and
stos
and
sbb
xor
push
ret
dec
cmp
mov
mov
jl
push
ds
cs
flds
insl
out
cmpl
mov
mov
stos
cwtl
mov
lds
test
push
mov
cmp
ret
aam
lds
pop
and
jbe
sub
jnp
mov
or
test
sbb
outsl
jl,pn
popf
cmpsb
daa
inc
idivb
mov
rcr
imul
cli
ds
xchg
js
sbb
bound
push
push
movsb
cs
gs
dec
xchg
mov
xchg
fsubs
push
mov
in
and
xchg
push
add
inc
mov
lock
mov
insb
cltd
mov
jecxz
push
rclb
fwait
lock
push
jne
loope
ljmp
scas
ja
mov
mov
cwtl
xchg
call
mov
adc
mov
sbb
shr
clc
xchg
inc
cltd
mov
mov
adc
test
sahf
pop
loope
lock
lods
outsl
inc
adc
jge
jns
or
or
out
cwtl
xor
and
mov
in
mov
outsb
in
sbb
iret
mov
xlat
and
xchg
dec
lahf
cmc
aad
mov
insl
addr16
ret
stos
jns
iret
iret
mov
lcall
pusha
and
push
push
das
jnp
loop
bound
mov
repz
test
shll
mov
xchg
mov
adcl
gs
cmp
ss
mov
rorb
sbb
cmpsl
fucomip
inc
icebp
mov
ret
and
and
push
imulb
push
testl
repnz
or
bound
xor
lods
jb
fs
fistl
mov
shl
fadd
mov
fsubr
mov
and
inc
ds
jmp
aas
xor
sbb
and
daa
sub
cmpb
repnz
mov
mov
nop
push
lcall
dec
sub
sub
xchg
lahf
inc
fwait
adc
leave
and
stc
push
or
push
xor
daa
gs
outsb
or
sbb
dec
jno
cmpsb
dec
in
xchg
daa
scas
pop
lret
mov
pop
jae
jo
push
pusha
cmc
scas
aad
lcall
lret
das
pop
mov
je
adc
sbb
aas
jbe
lahf
int3
and
add
imul
mov
sub
inc
hlt
sub
push
out
sti
inc
sub
fidivrl
jno
sub
or
push
nop
mov
shlb
insb
pop
jne
fistpl
ficomps
jnp
push
add
int
inc
test
shr
dec
pop
das
js
aad
xchg
cwtl
sbb
jle
lock
dec
ja
push
mov
es
negl
ret
inc
iret
push
mov
add
cmp
jg
repnz
adc
push
movsb
pop
hlt
ss
sbb
push
push
mov
push
out
pop
mov
inc
lock
ds
dec
lcall
divl
repnz
push
push
mov
cmp
jno
pop
pop
sbbl
sub
jo
iret
push
cs
test
and
dec
sub
xor
insl
lods
jecxz
ja
arpl
dec
xor
xchg
arpl
xchg
jnp
aad
mov
clc
pop
and
push
jg
pop
or
xchg
xor
lock
sub
adc
mov
popf
movb
gs
sahf
and
dec
adc
mov
in
cmp
rcrb
inc
push
jnp
imul
cmc
fnsave
sub
cld
pop
testl
inc
push
push
fnstcw
sahf
loope
int
lahf
dec
add
or
xor
dec
mov
push
mov
test
cmc
insl
sub
xlat
jmp
int
ret
mov
add
xor
movsl
enter
jmp
mov
les
push
into
mov
sub
dec
push
inc
das
mov
andb
dec
jno
movsb
js
jns
ja
gs
fisttpl
push
push
jle
xor
and
lods
jno
fsqrt
dec
push
push
stos
mov
mov
mov
cli
adc
or
gs
cltd
movsb
or
push
mov
push
ja
xchg
out
pusha
mov
dec
aam
aas
inc
scas
orl
sar
mov
movsl
cmp
fs
call
adc
aam
lahf
and
sarl
mov
ret
mov
jno
js
cmp
push
inc
popa
xchg
inc
push
in
pop
movsl
push
rclb
sub
ljmp
stos
adc
cmp
dec
test
sub
cs
mov
gs
test
sbb
mov
add
cld
mov
add
lcall
bnd
les
orl
call
and
push
mov
cltd
cld
cmp
std
adc
mov
adc
mov
push
dec
ja
adc
cli
xlat
insl
addr16
pop
aaa
cmc
orb
mov
shlb
xor
and
mov
jp
mov
dec
dec
push
std
test
xor
push
mov
jmp
mov
aaa
sub
in
shlb
dec
ljmp
lret
inc
in
shll
mov
lods
sar
js
ja
push
fs
cmp
mov
lods
hlt
mov
mov
leave
test
pop
mov
mov
mov
dec
ds
inc
xchg
xchg
mov
push
mov
popf
int
ds
mov
in
pop
xor
popf
and
jb
ficoms
xchg
mov
sahf
dec
cmp
gs
test
popa
lods
sahf
jb
je
push
icebp
push
inc
fdivrl
shll
iret
fld
aam
jns
sbb
sub
shrb
out
clc
or
push
cwtl
mov
sub
rolb
repz
outsl
adc
mov
xor
pushf
repnz
dec
push
or
sbb
mov
cltd
xchg
popl
lock
add
scas
cmp
vsqrtpd
xor
sub
xor
ds
in
jp
adc
xor
push
cmp
cmp
xor
or
xchg
test
push
sub
jecxz
jp
fstpt
pop
xchg
mov
sarl
mov
xchg
adc
cwtl
jnp
ja
stos
and
sti
mov
dec
jge
inc
xchg
mov
adc
cmpsl
and
dec
mov
inc
clc
push
adc
out
ror
enter
xchg
xor
fsub
mov
nop
scas
decl
aam
dec
inc
push
pop
jb
cmpsb
mull
in
push
pop
or
cmp
dec
mov
cld
or
sub
mov
rcrb
mov
fists
or
repz
es
fldcw
aad
cmp
in
hlt
ss
int3
push
ja
or
pop
fildl
cld
ss
mov
cmp
out
push
pop
icebp
cli
push
jp
mov
fsubrs
mov
sbb
gs
fimuls
shr
cmpsb
fldt
add
cmpb
fstps
lcall
xor
pop
mov
mov
pop
fmull
shlb
fisubl
data16
ret
push
cmpsb
jmp
js
shlb
dec
movsb
xchg
pop
push
xchg
insb
mov
mov
or
rcrl
cli
push
sbb
jo
loope
insl
mov
lea
jl
mov
inc
bound
xchg
or
inc
adc
lcall
cwtl
ss
push
pop
scas
arpl
xchg
xchg
jb
cmpsl
inc
repnz
leave
add
add
jb
hlt
sub
out
mov
stos
jl
rolb
cmp
movsl
icebp
fisttpl
dec
shlb
loop
mov
shll
aad
jo
mov
stos
lock
out
mov
lock
inc
sub
ja
daa
std
pop
scas
mov
js
mov
in
fsts
xchg
aaa
pop
out
fsubrl
fiaddl
push
pslld
mov
dec
lds
pop
sbb
xchg
into
inc
icebp
adc
add
cltd
test
lcall
jns
jg
xor
out
sarb
xchg
cmp
hlt
ljmp
pop
aam
mov
movsl
sahf
jmp
mov
mov
xor
pop
repnz
or
sub
push
sbb
jg
in
pop
int3
out
out
jns
adc
pop
fcomi
and
jecxz
jns
btr
xchg
in
jb
and
clc
mov
xor
insb
loopne
test
dec
int3
mov
push
insl
jbe
xlat
inc
and
mov
push
fsts
sub
dec
pushf
pusha
imul
fistl
mov
mov
xor
out
adc
mov
les
jne
and
hlt
xchg
adc
xchg
cld
sbbl
dec
lods
cld
mov
adc
dec
sahf
push
inc
les
insb
sbb
pop
cmp
cmp
inc
mov
icebp
cmpsl
frstor
mov
xlat
stos
jg
pop
fistl
addr16
cwtl
or
lret
out
popf
fwait
xchg
push
ffree
out
sbb
pop
mov
sbb
aad
bound
enter
adc
popa
mov
jle
lock
aad
cmpb
xor
lds
mov
dec
jbe
fstps
and
xchg
icebp
mov
fistps
les
movsb
out
loop
jmp
das
and
or
pushf
aam
arpl
test
cmp
dec
inc
xor
out
pop
push
gs
add
test
mov
push
and
bound
add
scas
sbb
inc
gs
dec
lret
shl
jae
jae
pop
ss
push
jbe
jg
cmc
sub
aas
insb
popl
movsb
jp
std
daa
in
mov
pusha
or
stc
sub
nop
out
pusha
lcall
or
xchg
lods
push
sbb
dec
push
xchg
push
or
sub
jl
adc
xchg
ljmp
mov
loopne
fs
mov
js
pop
add
ljmp
dec
sub
int3
cld
push
add
pop
mov
mov
sbb
mov
ss
push
mov
dec
sub
mov
rorl
lock
lahf
xor
test
popa
push
add
push
inc
mov
push
or
cmpsb
hlt
mov
or
js
bound
cli
and
pop
fldcw
mov
push
add
inc
adc
in
test
and
sub
adc
inc
mov
adc
movups
fisubrl
loope
leave
les
fisubl
pop
test
or
out
jl
cwtl
xchg
incl
mov
pop
rclb
inc
pop
dec
addl
jg
mov
xor
test
sub
mov
sbb
int
jae
aad
fadds
sub
gs
stos
pop
nop
dec
xchg
mov
fildl
stos
and
mull
lcall
jbe
xchg
loope
sbb
jo
rcl
lret
mov
mov
sbb
call
sbb
sbb
jmp
dec
into
lock
stos
lods
inc
mov
xlat
movsb
push
outsl
shlb
aas
mov
and
mov
jae
movsl
arpl
scas
mov
inc
cmp
lret
shrb
mov
dec
jmp
jge
out
cmp
in
es
sbb
push
and
cmp
jbe
pop
movsl
inc
jl
aad
lret
or
jecxz
cmpb
mov
xor
shlb
and
int
mov
mov
jmp
ja
mov
xchg
hlt
dec
or
mov
ss
mov
ss
xchg
roll
int
cli
scas
dec
and
lret
mov
mov
imul
std
cwtl
and
inc
jb
and
or
mov
pop
xchg
xor
push
mov
mov
sbb
mov
cwtl
insb
dec
xchg
dec
movsb
pop
imul
dec
mov
dec
imul
adc
mov
jno
fcmovnb
jno
xchg
dec
nop
into
arpl
cmp
push
popf
jnp
mov
stc
cmpsb
xchg
repnz
or
das
in
xchg
in
lock
push
cwtl
xchg
fildll
pop
pop
xchg
stos
cmp
and
sbb
daa
mov
rorl
jno
ss
mov
jae
int3
mov
inc
aam
ret
lcall
and
fs
mov
ret
mov
cmpsl
push
dec
pop
sahf
pusha
cmpl
lahf
fisubrl
jns
sub
xchg
inc
pop
inc
es
shrl
test
imul
inc
push
repnz
or
lock
mov
and
addr16
stos
fst
pop
lds
movsl
repz
inc
mov
sub
add
in
sub
ss
mov
sbb
dec
push
inc
ss
ror
cli
adc
jns
cmp
in
or
clc
push
lods
add
ljmp
sbb
hlt
push
sarl
mov
pusha
inc
mov
inc
out
and
int
mov
gs
jge
push
mov
gs
fwait
xor
loopne
jmp
in
add
aam
cmp
sub
lahf
addr16
daa
addr16
frstor
int3
adc
jno
jne
aaa
data16
out
dec
pop
out
orl
or
mov
jo
and
push
xchg
incb
xchg
shlb
pop
fisttpll
push
cmc
push
repnz
fstpl
sub
add
dec
and
add
cmc
xor
nop
sbb
and
lods
xor
mov
mov
and
shrb
xor
jno
mov
in
in
addr16
cmp
jmp
mov
jbe
or
inc
push
push
or
mov
aas
push
mov
into
adc
pop
mov
hlt
mov
sub
dec
subl
cmp
sbb
jecxz
add
int
ja
lahf
pop
inc
clc
popa
mov
cmpb
xchg
into
or
jmp
jno
pop
cmpsb
rorb
mov
sarb
mov
into
mov
addr16
push
sbb
out
mov
jne
push
mov
mov
test
movsl
mov
sbb
cmc
dec
or
jo
rcrl
adc
das
mov
fisttpl
add
roll
xor
mov
iret
or
inc
dec
les
mov
stos
mov
pop
js
add
xchg
cmp
or
cmp
gs
cmpsb
or
and
sub
xchg
xorb
ficoml
jle
sub
or
jmp
adc
push
inc
pushf
or
mov
sub
fbld
mov
rorl
sbb
stos
je
jne
out
jmp
in
es
xor
out
lods
jbe
jmp
pop
lods
imul
sbb
jge
in
cwtl
mov
pushf
scas
sbb
movsb
cmpsl
mov
lret
cltd
fwait
mov
jno
push
mov
rcr
fwait
lds
push
jns
xchg
cwtl
out
push
es
push
ljmp
aam
jne
icebp
clc
cmpsl
jns
pop
lds
int
inc
add
pop
cmp
cmp
mov
sub
cmp
sarb
pop
and
pop
mov
or
fidivrs
dec
ficoms
pushf
sahf
addr16
aad
lcall
inc
movsl
lret
or
js
jo
arpl
mov
inc
adc
or
lea
je
lcall
cmpl
inc
push
xchg
pop
sbb
sbb
ja
aas
mov
or
dec
pushf
cmpsb
cmp
mov
lret
xor
xchg
jae
cmp
mov
xor
in
daa
loopne
iret
and
cmp
push
push
xchg
push
cwtl
or
dec
test
jp
and
movsl
or
mov
fwait
test
arpl
nop
jne
dec
jp
pop
add
cmpsb
cmpsb
lret
das
pop
dec
pop
pop
into
adc
pop
lret
out
add
daa
xchg
dec
out
push
mov
js
jp
les
flds
mov
test
mov
out
cmp
pop
repnz
stos
mov
cmp
ss
into
lock
xchg
sub
loopne
mov
xor
cmpsb
dec
add
mov
outsb
push
pop
les
sub
rcrb
fwait
jae
outsb
fs
adc
or
mov
lods
xor
mov
inc
dec
js
outsb
js
mov
jmp
and
jb
sbb
out
or
arpl
repz
mov
data16
popf
fbld
in
pop
push
push
add
push
add
imull
imul
mov
repz
mov
fcmovne
xor
push
sub
fisubs
mov
xchg
js
pop
xchg
sbb
icebp
pop
cli
sub
arpl
scas
lret
aaa
cwtl
subb
xchg
push
cmpsl
call
jg
add
xchg
aam
xchg
cmpsl
call
jne
mov
jo
mov
push
mov
pop
jge
cltd
dec
ret
add
pop
insl
les
xchg
jg
fsts
iret
inc
test
pop
std
cli
dec
cwtl
jno
mov
ja
cmp
mov
mov
jb
outsb
add
fs
jno
popa
dec
popa
sbb
or
lea
mov
mov
pop
movsb
hlt
adc
bound
cld
sarb
or
mov
and
xor
shlb
aas
xlat
leave
mov
mov
daa
bound
mov
jecxz
xor
std
out
jp
cwtl
mov
jo
jg
adc
inc
fwait
std
push
lock
rorb
fcomp
cwtl
js
pushf
rcll
sbb
into
subl
and
adc
dec
cmpsl
imul
scas
ja
enter
xor
bound
pushf
cmp
lret
cmp
inc
js
jg
jno
pusha
fcomp
pop
xchg
sub
jecxz
add
push
cmc
push
popa
clc
out
pop
and
adc
xchg
mov
and
push
jb
jle
adcl
ljmp
arpl
rcrb
dec
aam
imul
into
lcall
jge
xorl
test
xor
inc
in
pop
xchg
jmp
sti
ljmp
repz
js
movsl
cmp
xor
imul
imul
cmp
add
sbb
test
cmpl
push
incl
in
push
shll
pop
call
ja
aam
outsb
adc
push
in
test
sbb
add
loop
rorl
mov
xchg
fisttps
jbe
jcxz
std
mov
jp
iret
adc
mov
dec
jae
loopne
and
call
es
xchg
fwait
lret
inc
pop
in
std
sub
jno
fwait
pop
pop
sbb
or
mov
mov
mov
cltd
ret
xlat
pop
jle
sub
dec
mov
pop
pop
sub
push
push
imul
cmp
sbb
cld
xlat
mov
cmc
mov
movsb
or
call
out
cmp
sub
ret
fstpt
arpl
test
fisttps
call
pusha
push
mov
sahf
pop
adc
sub
adc
aam
aas
shr
flds
push
imul
and
sub
test
shrb
pop
mov
sub
int
dec
mov
mov
arpl
lods
popl
xor
jl
stos
jl
imul
adc
pop
ret
in
and
repz
rorb
xchg
std
pop
hlt
data16
and
adc
std
out
out
loop
fcomp
jecxz
or
inc
pop
pop
pop
ret
sbb
mov
mov
mov
cmp
mov
adc
stos
outsl
or
cmpsb
adc
dec
mov
pop
test
xorb
movsb
aad
sub
add
xchg
push
cmc
loop
add
mov
icebp
cli
mov
divl
add
push
add
add
aas
insl
adc
scas
cmp
shll
rcrl
ja
pop
mov
xchg
sbb
sub
inc
jb
aas
mov
fadds
sbb
dec
pop
pop
mov
add
les
push
jecxz
cmp
ficoml
jmp
sub
mov
pushf
out
stc
stos
ljmp
mov
pusha
adc
adc
inc
xor
pop
xchg
and
push
pop
sbb
in
mov
pop
pop
mov
je
int
ret
incl
movsl
push
inc
add
pop
testb
or
enter
ja
xchg
lahf
cmpsb
cwtl
cmc
les
fwait
lods
xchg
adc
mov
cmc
pusha
push
add
or
sbb
xor
and
xchg
dec
mov
inc
push
or
sub
outsl
cltd
dec
jle
jno
lret
enter
fcoml
mov
push
testb
add
test
cli
imul
add
add
jbe
out
arpl
lcall
leave
mulw
jle
in
bound
mov
pop
adc
adc
mov
jge
mov
fcompl
push
xchg
xor
jnp
mov
mov
pop
sub
scas
push
dec
jb
scas
xlat
dec
fs
xchg
sub
imul
inc
sub
test
fcoml
out
fiadds
xchg
sbb
jb
sbb
repz
mov
subb
movsb
xchg
ljmp
xor
inc
sahf
xchg
dec
gs
es
insl
push
cmc
loop
js
push
rolb
andl
mov
adc
pop
idivl
lods
addr16
insb
mov
xor
mov
sbb
cmp
xor
jbe
daa
add
lret
cmp
loop
out
cmpsl
int3
loopne
xchg
test
jle
repnz
fiadds
mov
push
or
mov
lcall
add
in
outsl
xchg
test
mov
inc
rcr
inc
test
dec
mov
jne
fiaddl
ss
les
repz
jg
adcb
xchg
in
xchg
adc
sbb
xchg
cmp
adc
inc
jno
xchg
sub
push
or
jbe
jg
lods
stc
out
ja
dec
or
sbb
ret
sub
pop
sbb
ss
mov
gs
xchg
sbb
inc
les
add
pop
adc
push
sbb
test
fwait
xchg
jp
add
aaa
inc
jmp
dec
lret
lods
add
rorw
dec
fs
lods
scas
mov
xor
xchg
cwtl
iret
xor
repz
pop
jne
inc
xchg
stos
push
sub
out
jle
sub
push
add
and
lods
xchg
mov
fistpl
pop
mov
idiv
cmp
shlb
mov
adc
aam
or
jb
and
mov
sub
fiaddl
pop
mov
testb
sub
xchg
sub
bnd
xchg
test
daa
pushl
jecxz
test
add
mov
inc
loopne
dec
pop
jp
pop
push
mov
lcall
sarb
icebp
sub
jl
xchg
jl
and
stos
inc
test
loop
repnz
fisttpl
cli
je
xor
nopl
loopne
out
jmp
cwtl
push
mov
mov
sub
mov
dec
cmpsl
lahf
mov
stc
push
mov
mov
or
mov
aam
fwait
xchg
mov
fs
xor
pop
das
or
or
cmc
cli
add
call
imul
in
xor
ror
sub
in
call
bound
in
bound
ja
cmpl
cltd
inc
mov
testl
pusha
mov
rclb
cli
mov
in
pop
fldt
or
enter
icebp
cmp
lret
jle
push
ljmp
je
jecxz
dec
test
inc
xchg
mov
nop
mov
dec
dec
xchg
add
push
inc
and
xor
and
push
sbb
or
lcall
nop
jl
inc
or
and
aaa
or
mov
mov
mov
lret
repnz
xor
lahf
xor
add
out
mov
add
movsl
jmp
in
lea
int
fwait
jne
stc
lret
in
addr16
call
movlps
lods
adcl
mov
popf
pop
in
mov
test
mov
scas
jmp
mov
inc
pop
jb
push
cmp
gs
pushf
fisttps
mov
pop
in
pop
scas
ja
or
repz
sub
adc
jns
hlt
xor
jl
add
ds
subl
aaa
sarl
mov
mov
jecxz
jp
test
loope
sub
pop
lahf
jecxz
mov
mov
shll
inc
andl
adc
cmpsb
gs
icebp
sub
xchg
mov
arpl
mov
decl
mov
sub
inc
insl
dec
or
test
lret
cwtl
repnz
lahf
sub
dec
fistl
cli
cmp
lds
int
ret
fcompl
rcrl
and
cmpsb
adc
pop
ret
jmp
xor
lret
sbb
mov
daa
jo
fs
fisttps
push
sub
pushf
fwait
xchg
mov
or
pushw
jae
clc
xor
push
cmp
mov
pop
xor
sub
dec
mov
jne
imul
in
inc
inc
pop
icebp
daa
push
mov
sub
sbb
and
insb
out
test
mov
int
pusha
inc
xchg
dec
data16
push
aam
lcall
pop
push
int
add
out
jg
mov
test
jmp
cmp
xlat
push
jb
ds
lds
scas
data16
mov
subl
iret
jmp
adc
call
iret
leave
jae
test
bnd
mov
out
pop
pop
mov
orb
loopne
jne
mov
add
outsb
and
int3
add
pusha
shlb
test
outsb
pop
arpl
shl
repz
movsb
scas
incb
sub
mov
jne
dec
adc
mov
mov
lahf
jle
or
sbbb
lods
mov
xchg
mov
or
leave
xor
les
data16
sub
movsl
and
daa
shrl
aas
mov
cmc
and
xchg
sbb
or
sahf
test
outsl
pushf
jbe
fstpl
idivb
dec
push
lret
in
or
lock
cmpsb
xchg
adc
pop
in
sub
jl
push
nop
in
mov
push
mov
knotb
hlt
inc
pop
sub
ret
daa
jmp
jno
gs
shlb
push
xchg
les
or
in
inc
in
xchg
das
push
shl
or
pop
pushf
mov
mov
outsb
dec
sub
and
mov
xchg
insb
jg
sub
fisubs
out
sarl
aaa
loopne
push
jg
jne
rol
popa
sub
bound
imul
mov
loopne
dec
addr16
incb
jg
adc
add
shrb
xchg
test
cli
sbb
xchg
test
cmp
adc
lods
pop
stos
dec
daa
in
xor
sbb
xor
stc
inc
test
mov
push
ret
or
loope
push
xor
pop
cmpl
je
pusha
xlat
push
add
mov
stos
push
add
mov
push
decb
mov
and
push
cmp
insb
sub
adc
lds
mov
jo
or
imul
adcb
mov
add
mov
cwtl
leave
push
add
mov
lret
cltd
mov
cmpsb
leave
mov
lds
mov
push
inc
cmp
pusha
xchg
dec
xlat
ds
insl
or
sub
xor
mov
jge
and
shll
push
lock
pop
outsl
insl
std
jg
pop
aad
jg
popf
cmp
das
outsl
cld
mov
mov
mov
frstpm(287
sub
push
mov
fcomps
push
pushf
mov
mov
adc
call
xor
dec
scas
dec
stc
popa
fbld
jo
xor
cmp
gs
cltd
sub
pushf
outsl
insb
push
xchg
aam
cmpsl
in
pop
arpl
xchg
or
orl
push
sub
outsl
sbb
mov
mov
jge
cmp
shll
mov
xchg
xor
fs
adc
stc
mov
jbe
inc
sub
sub
fincstp
add
mov
add
cmp
cmp
dec
ficoml
mov
cmpl
fnclex
addr16
into
jbe
lods
hlt
mov
fisttpll
add
sub
jmp
lret
in
or
jae
icebp
and
pop
push
daa
repnz
inc
cmp
lock
mov
cmp
and
pop
pop
mov
in
jnp
jnp
out
fisubrs
popa
cmc
loopne
push
sub
push
sets
push
mov
das
shrl
add
and
push
in
mov
jo
dec
sahf
pop
sbb
data16
rcl
out
mov
jno
cmp
pop
pop
xchg
inc
sbb
add
and
fsubrs
xor
negb
adc
push
xchg
fwait
int3
xorl
insb
jae
or
lret
or
stos
pop
ljmp
ucomiss
push
cmp
arpl
sub
xchg
lret
stos
aaa
rorb
orl
in
loope
jae
es
aad
adc
xchg
pushl
iret
sbb
mov
sbb
ret
mov
xor
mov
add
dec
loopne
fadds
push
jmp
in
subl
shlb
cmpsl
das
and
ret
jnp
xor
push
inc
in
daa
shrl
popa
inc
mov
xor
dec
bt
ds
mov
dec
es
fnstsw
add
dec
add
daa
jnp
andb
cli
mov
jmp
push
cmpsb
lds
insb
sub
xchg
or
push
push
dec
loop
push
jo
lcall
rcrb
aam
fsubrs
add
mov
stos
sub
jl
dec
mov
ja
and
mov
jo
int
inc
das
out
aam
outsb
or
mov
cmp
dec
jg
xchg
mov
mov
sbb
cmc
shr
icebp
shll
jmp
fs
and
add
pop
gs
fmull
daa
fnstsw
sub
popa
aaa
int
cmp
xchg
mov
pop
push
aad
shrl
mov
outsl
mov
stos
call
es
je
inc
lods
into
push
adc
mov
daa
out
insb
rolb
inc
mov
xor
cmp
cs
mov
mov
fdivrl
stos
adc
inc
push
and
add
pop
aam
dec
jle
sahf
jge
mov
mov
mov
ja
aas
das
jno
in
or
bound
lods
neg
out
pop
out
div
xchg
divl
push
aas
gs
in
cmp
call
nop
pop
mov
push
sub
xchg
dec
mov
pusha
dec
pop
aad
mov
ja
push
jbe
sbb
mov
mov
fadds
idivl
jae
jne
sbb
inc
sbb
mov
ljmp
cmp
mov
stc
or
mov
push
pop
int
sbb
cmp
and
aas
jne
adc
cmpsb
popf
xorl
dec
mov
push
arpl
dec
insl
mov
fwait
int
jp
add
data16
in
mov
xor
es
int
jg
push
pop
mov
pop
movsb
enter
and
mov
jp
jp
imul
call
outsl
xor
dec
jl
lahf
or
xchg
mov
xchg
add
cmp
or
es
pushf
jl
sub
cld
xor
stos
fimuls
ja
xor
pushf
repz
hlt
inc
movsl
pop
push
jns
sbb
sub
pushw
loope
mov
cs
repz
xor
mov
dec
mov
leave
cli
inc
lods
aas
fnstsw
or
jge
lock
mov
mov
and
cmove
mov
mov
cmp
flds
push
outsl
dec
js
cmp
mov
arpl
repnz
cmp
enter
and
fidivrl
adc
push
xchg
test
int3
xchg
sbb
repnz
aam
pushf
popf
mov
adcb
add
int3
pusha
gs
adc
dec
stos
xor
jl
scas
aas
out
ss
inc
inc
push
test
or
add
insb
adc
in
jle
pop
pop
in
mov
sub
aas
testb
add
adc
add
mov
aaa
push
shl
popa
rcr
cwtl
outsb
dec
mov
push
jbe
pusha
cmp
inc
in
mov
xchg
sti
push
rcrl
jns
popa
mov
inc
push
mov
rcrb
inc
sahf
iret
sbb
shll
xor
lcall
jnp
jb
scas
mov
mov
xor
loop
and
inc
ret
push
ljmp
pusha
sbb
fwait
sbb
into
inc
mov
xor
inc
mov
test
in
pusha
pop
aaa
pop
or
je
in
push
add
std
fs
inc
icebp
mov
sahf
mov
enter
mov
jmp
cltd
jecxz
cs
mov
cli
in
jo
pop
jne
wrmsr
test
aam
rolb
xchg
mov
sub
in
scas
push
fidivl
xchg
push
cld
fcomps
jmp
inc
outsb
sub
hlt
mov
mov
mov
cmp
jae
shll
or
xor
fnsave
jle
push
cmp
andb
mov
add
inc
fs
js
in
and
xchg
sub
xor
call
mov
lahf
jne
jns
inc
sub
ss
pushf
mov
mov
scas
lds
jnp
xor
ret
push
cmp
sbb
and
xchg
sbb
xor
sbb
sub
rcr
mov
cld
or
repnz
flds
jp
adc
pop
enter
adc
leave
lods
cmp
aad
mov
jns
pop
dec
jecxz
jns
inc
fcmove
sbb
push
loope
fwait
lret
movsl
stc
repz
roll
js
test
ret
jge
cli
jns
xor
inc
fdivr
dec
add
in
adc
ds
fldenv
push
out
inc
mov
jle
mov
mov
cltd
jl
sti
cld
movsb
insl
jge
inc
pop
ljmp
in
cmpsl
repz
daa
mov
hlt
push
data16
pop
add
arpl
and
test
rorb
mov
aaa
xchg
xlat
jg
xchg
pop
cld
dec
mov
xchg
jp
adc
js
insb
add
ret
bound
insb
mov
inc
pop
loop
mov
mov
cmp
mov
ret
mov
enter
dec
loope
mov
int3
iret
or
mov
je
lds
inc
movsb
push
push
xor
sbb
ficoms
mov
repnz
int
sarl
ss
das
xchg
mov
es
sub
pop
fwait
pop
sbb
sti
das
pusha
fidivrs
je
addr16
pop
pusha
iret
std
xchg
lock
jae
cmp
bound
add
mov
dec
jle
imul
jmp
andb
mov
adc
lcall
in
dec
add
aad
and
xchg
sbb
add
int3
pop
jae
cmp
or
or
mov
scas
adc
ficomps
jae
aas
stos
pop
icebp
into
lcall
sub
xorb
aas
and
cwtl
repz
jae
pushf
iret
xor
adc
adcb
add
and
cmp
pop
ja
sub
call
xor
adc
mov
xchg
jae
out
add
lea
test
or
popl
scas
pop
adc
mov
and
int3
jle
ficoms
inc
mov
std
inc
setbe
xor
push
cmp
cmpsb
or
adc
and
cwtl
pop
ljmp
loope
mov
movsb
add
xor
jle
and
mov
in
cmp
sub
mov
sub
jmp
mov
lods
jle
test
cmpsl
fsts
adc
rorb
loope
sub
pusha
leave
lods
cmp
lcall
lret
mov
dec
clc
mov
pusha
lock
mov
xor
andl
das
cwtl
push
lcall
or
sbb
stos
lods
lods
fisubrl
mov
stc
and
cmp
mov
push
inc
inc
stos
xor
insb
dec
sahf
fsubrl
jg
and
sbb
or
add
xchg
fisubs
jno
mov
mov
or
cmc
jo
pop
cmpsl
pop
loop
sub
pop
jns
and
cmpsl
lds
mov
inc
cld
pop
xor
fs
mov
push
or
mov
out
shrb
jmp
inc
pop
inc
fs
mov
inc
xchg
pop
test
ret
sub
jno,pt
adc
cmp
sub
sub
inc
cltd
imul
jmp
dec
dec
xchg
jl
bound
dec
ja
pop
jmp
cwtl
sub
outsl
outsl
test
or
mov
or
fstpt
push
cmp
sbb
lcall
dec
or
clc
adc
addb
icebp
cmpl
data16
scas
sti
inc
jae
test
imulb
shll
pusha
pop
jle
sub
test
inc
xchg
sbb
fucomi
sub
mov
cmpsl
or
mov
or
mov
inc
mov
push
ljmp
jge
mov
fs
sbb
pop
push
sbb
imul
adc
ret
lods
push
jmp
push
xor
mov
stos
and
xchg
jnp
adc
pop
add
or
stc
aaa
arpl
add
in
mov
mov
sub
cld
int
js
pop
int3
pop
idivl
cs
leave
xchg
add
or
ret
or
inc
adc
hlt
cld
shlb
scas
xchg
fdivs
adc
shrl
js
in
call
dec
out
jecxz
sbb
int
xchg
mov
imul
push
and
js
sarl
insb
sub
sbb
out
notl
and
stos
fmull
test
das
in
addr16
sti
fisttpll
pop
data16
stos
and
test
das
inc
jo
inc
stos
xor
xchg
outsb
and
in
and
pop
fbstp
dec
fidivrs
std
mov
lcall
out
adc
aas
cmp
bound
cmp
mov
jmp
adc
lock
jbe
jge
js
and
in
jmp
rcrl
lret
nop
jo
xchg
imul
jno
mov
cli
cmp
adc
xlat
or
cld
mov
mov
jle
stos
arpl
jmp
pop
cmp
push
sarb
dec
xor
xchg
sbb
or
adc
mov
pusha
int3
add
adc
pusha
pop
movb
neg
stos
mov
iret
aaa
sbb
daa
insl
add
push
push
jg
sbb
mov
pop
push
jge
stos
pushf
pop
add
cmp
mov
daa
in
pop
cltd
fnstcw
jo
sub
int
sbb
dec
inc
out
jnp
or
mov
stc
nop
movsb
and
es
cs
bound
xor
les
cmp
mov
cltd
and
jge
jecxz
inc
movsb
or
fnstsw
mov
arpl
punpcklwd
test
bound
pushf
cmpsl
test
je
std
dec
rcrb
scas
lahf
mov
xchg
dec
dec
cmp
dec
sub
shlb
sahf
fucomi
out
bound
adc
lock
dec
adc
adc
loop
jp
aas
adcl
movsl
imul
pushf
addr16
push
popf
mov
inc
sub
mov
mov
mov
iret
cmp
push
xchg
or
jo
inc
adc
mov
aaa
scas
lret
ret
ljmp
inc
dec
in
or
cmp
add
fistl
push
lcall
sub
cmp
jbe
and
mov
or
rorl
cli
pop
mov
pusha
pop
stc
and
adc
inc
fistpll
ss
sti
ds
pop
sub
jo
in
jp
std
jecxz
inc
cmp
and
xchg
push
sbb
ror
mov
inc
int3
cmp
mov
mov
lahf
or
or
xchg
call
in
fldt
aaa
lahf
sub
and
mov
mov
inc
lcall
loope
sbb
cmpsb
mov
int3
and
push
xchg
mov
push
dec
sub
mov
xchg
stos
jmp
mov
dec
or
mov
pop
push
inc
sbb
push
shrb
adc
scas
push
push
lods
push
pushl
mov
pop
sbb
insb
xchg
ja
fmuls
lea
inc
mov
add
mov
movsb
jbe
je
cld
and
lods
adc
adc
jns
mov
push
xlat
in
test
into
jnp
sub
lods
bound
les
sub
push
jge
stos
into
mov
mov
dec
icebp
out
dec
scas
jmp
negb
pop
mov
sbb
fs
jle
pop
adcl
jl
testb
add
iret
pop
mov
stos
push
fidivs
adc
addl
push
pop
add
dec
js
adc
push
test
adc
aad
push
mov
loopne
addl
ss
mov
adc
push
adc
xchg
popl
aad
dec
imul
cli
das
aam
mov
cmp
inc
push
or
fsubr
lret
mov
or
shll
xor
push
xor
lahf
xchg
loope
push
push
mov
cmp
xor
push
mov
in
enter
push
push
add
pop
push
sbb
repnz
add
addr16
sub
inc
inc
aaa
ja
add
mov
test
jp
cmc
fisttpl
mov
xchg
jnp
aas
lods
aam
movsb
lock
inc
icebp
pop
or
inc
shl
icebp
dec
and
adc
add
in
sub
cmp
iret
mov
inc
jl
pushf
adc
inc
dec
enter
inc
push
mov
jmp
push
outsb
clc
add
xchg
or
sbb
push
loop
cmp
mov
and
or
enter
sub
fcompl
xor
and
mov
mov
mov
push
mov
call
push
loopne
dec
fisubrl
lds
popa
cmp
in
fdivrs
fsub
fadd
loopne
stos
sub
sahf
or
pop
ja
push
roll
es
inc
and
lods
out
test
dec
test
xchg
push
xchg
cmpsl
jb
sbb
lds
xlat
adc
cmpl
cmc
in
jmp
mov
jne
and
or
mov
or
lcall
xchg
push
int3
xchg
cli
movsb
popf
insl
lret
or
add
push
or
in
int3
in
fwait
pop
and
pop
jae
orl
scas
scas
in
jnp
hlt
mul
cld
iret
shrb
mov
rcll
jne
test
incl
subl
aad
movsl
xchg
xor
gs
sub
bound
inc
mov
pop
and
jecxz
test
into
pop
sub
fiaddl
push
jno
mul
ret
dec
sgdtl
in
loop
xchg
pop
loope
enter
iret
test
sub
les
enter
daa
cmpsb
cli
btl
xor
mov
xchg
cwtl
data16
ficoms
sarl
dec
jae
xchg
sub
pop
fcmovnu
push
sbb
jecxz
cmp
sbb
test
sub
lahf
lahf
loopne
in
dec
push
pop
ljmp
jg
dec
iret
loope
push
std
call
arpl
pop
mov
jecxz
pop
ljmp
push
mov
ljmp
push
subb
outsl
fistps
xor
or
pop
cwtl
push
add
mov
daa
ret
xor
rcrb
sbb
sar
cmp
test
adc
je
arpl
mov
ss
fnstcw
jl
aaa
push
fwait
jp
into
test
je
add
pop
outsl
mov
jnp
lcall
loope
in
rcl
cmpsl
mov
stos
inc
add
loopne
cltd
cmp
pop
in
ret
daa
sahf
int3
dec
call
stc
cmp
jmp
cmp
cli
dec
or
pop
call
dec
dec
pop
movsl
movsl
jne
or
push
adc
js
add
aas
mov
nop
dec
iret
movsb
adc
jo
dec
cwtl
cli
add
scas
cmp
pop
roll
shrb
cmpsb
jecxz
je
in
xor
dec
ja
lret
jnp
pusha
push
add
icebp
xor
jecxz
mov
jns
or
jmp
xchg
out
pop
sub
in
jecxz
or
xor
imul
in
lret
mov
out
mov
xor
mov
fwait
jg
mov
out
jge
scas
add
into
ficoml
movsbl
and
inc
test
or
push
mov
js
movsl
push
dec
ret
leave
insl
lock
xor
into
mov
pop
adc
stos
hlt
sbb
pop
inc
pop
jecxz
outsl
pop
add
scas
pop
mov
xor
enter
push
pop
jo
mov
xchg
imul
stc
xchg
pop
arpl
lea
mov
jmp
xor
add
fwait
out
pop
pop
adc
sbb
js
push
ja
insl
and
into
cmovo
das
cmc
add
sbb
push
and
push
xchg
fldl2e
insl
xor
stos
mov
xchg
roll
inc
mov
push
xchg
test
sub
std
roll
jns
jne
or
and
mov
jae
adc
clc
outsl
sti
xchg
nopl
insl
icebp
push
push
sub
loop
mov
sti
mov
inc
sarl
mov
cli
je
mov
xchg
fsub
xor
and
push
mov
mov
stc
xchg
movsb
sub
hlt
cmpsl
filds
lock
les
loope
cmpsl
and
dec
or
push
xchg
gs
loopne
pop
sti
fisubrl
mov
out
adc
push
inc
push
pslld
ficomps
sub
cli
outsb
xchg
into
dec
jae
and
cmp
and
mov
mov
cmp
push
cwtl
mov
sub
add
inc
sub
es
data16
mov
cmp
and
imul
dec
mov
addr16
mov
and
xorl
roll
lcall
cli
xor
in
mov
and
cs
xor
xor
add
test
push
push
pop
pushf
mov
into
out
clc
int3
push
jecxz
xchg
sbb
adc
jmpw
adc
mov
mov
imul
insl
adc
pop
xor
lret
or
das
mov
lret
sub
sbb
ret
ja
pop
mov
and
mov
xor
cmpsb
fmuls
ret
or
dec
mov
adc
mov
movsl
add
sbbl
sbb
xchg
sub
mov
stos
xchg
into
sbb
pop
dec
push
les
mov
data16
lea
dec
jmp
lret
add
shlb
mov
cs
xchg
insb
jno
popf
ret
xchg
movsl
add
pop
push
push
popf
and
rcr
loope
jnp
ret
jns
aad
push
jle
mov
ljmp
aam
sbb
mov
sbb
adc
adc
pop
lds
jl
dec
repz
fldt
mov
mov
jb
movsl
loope
push
sub
push
xchg
mov
adc
rorl
cmp
xchg
and
sub
aaa
push
xchg
sahf
mov
lds
add
repnz
add
add
mov
push
les
mov
fs
adc
xchg
sbb
cmp
mov
cmp
pusha
and
fcoml
inc
cmp
sti
mov
vpcompressw
sar
pop
arpl
mov
hlt
leave
dec
lcall
je
je
cmp
cmp
pop
mov
sbb
cmpsb
xchg
mov
out
es
pop
ret
sub
and
int
cmp
push
scas
inc
push
outsl
xchg
pop
jno
pop
insl
cwtl
aaa
xchg
lods
lret
push
mov
mov
testl
add
das
inc
nop
push
push
xor
out
pop
ljmp
imul
sub
push
push
adc
adc
pop
stc
mov
rcrb
cltd
xchg
add
insb
push
lods
ret
push
mov
out
xor
dec
loop
fsubrs
or
mov
popf
sbb
xorl
aad
or
sbb
pop
gs
aaa
movsb
sub
jg
mov
cli
xor
loop
call
dec
in
stos
adc
enter
incb
int3
js
popf
pop
xchg
or
mov
xlat
js
or
fidivl
les
xchg
ljmp
add
clc
inc
lret
and
nop
xor
mov
popf
inc
ljmp
fimuls
aad
push
aad
lcall
and
popf
fildl
xchg
test
xlat
outsb
pop
test
fcmovu
daa
int
xor
jle
in
dec
mov
sbb
adc
dec
jno
sub
fs
and
and
mov
sbb
ret
repz
and
in
sub
lahf
roll
int
roll
sub
cmpsb
mov
jns
fisubl
or
repz
or
cwtl
pop
pusha
adcb
out
je
xchg
jge
sbb
test
xchg
inc
clc
loope
jle
clc
shrb
mov
pop
fsubrs
iret
fdivp
jle
mull
sub
mov
nop
pmovmskb
cmp
lds
test
inc
dec
pushf
mov
or
mov
btc
mov
ja
add
mov
popf
out
push
push
shrb
daa
repz
pop
jge
add
cld
call
bound
test
push
add
pusha
mov
cmp
adc
inc
add
ljmp
inc
and
cmpsb
ss
push
sti
add
pop
in
jae
mov
dec
push
xchg
popf
inc
xchg
add
into
movsb
inc
mov
mov
ds
pop
ret
mov
out
xchg
push
out
inc
mov
push
insl
mov
int3
cmpb
lahf
repnz
imul
xchg
add
jmp
adc
loopne
and
aad
pop
in
dec
inc
jbe
inc
movsb
dec
cmp
mov
loopne
mov
pop
pop
movlps
pusha
jae
aad
jg
xchg
iret
and
add
xchg
push
sub
push
cmp
sbb
sbb
insb
rcrb
mov
loop
lret
push
je
aaa
xor
leave
push
mov
push
insl
adc
fwait
push
rcr
mov
sub
and
rolb
arpl
push
jns
mov
mov
fstpt
mov
sti
push
aas
lock
shlb
push
insb
stc
sbb
daa
xchg
adc
push
hlt
mov
jg
jp
shl
or
push
notl
lds
test
ret
pop
addr16
xchg
movl
pusha
fwait
sysexit
and
inc
adc
dec
push
inc
cmp
mov
pop
maxps
in
shll
mov
xlat
lock
das
or
iret
sarb
dec
dec
sub
ja
xchg
aam
or
test
icebp
adc
dec
pop
out
and
sub
xor
mov
jg
xchg
iret
fsubrs
jae
data16
jb
mov
aaa
dec
aas
repnz
adc
loop
cmc
imul
mov
fstps
and
je
add
xor
sub
leave
clc
bound
lds
in
outsl
jne
cltd
ret
jle
or
xchg
and
add
sub
xlat
jmp
or
sub
xchg
mov
iret
cli
lock
dec
lcall
push
and
jne
fidivrs
xchg
aam
movsl
sbb
add
adc
push
sar
xlat
xor
sahf
add
ja
dec
adc
cmpsb
jle
pop
ja
xor
or
adc
fldz
loop
xchg
mov
cmp
ret
push
in
xchg
xchg
je
cmp
push
inc
xlat
sahf
in
inc
les
adc
cmp
add
popf
ret
cs
mov
jecxz
pop
pop
mov
stos
cmp
cmp
rcl
pop
mov
fildl
mov
or
fidivs
loop
push
or
add
adc
mov
loopne
lret
dec
mov
jl
pop
insl
rcll
popa
and
xchg
cmp
fstpt
cmp
call
addr16
xor
add
ret
mov
push
mov
adc
insl
ret
xchg
jl
jg
jecxz
pop
mov
fcmove
mov
in
push
add
stc
mov
pusha
inc
jge
and
inc
stos
dec
rclb
xchg
pop
scas
lods
icebp
mov
and
add
sti
arpl
and
fwait
mov
inc
pusha
dec
mov
mov
lea
mov
shll
xchg
mov
jbe
data16
aad
lret
test
notl
daa
mov
push
xchg
cmp
dec
in
ljmp
xlat
mov
jo
aam
push
push
aam
xchg
inc
sbb
cmpsl
pop
mov
sub
push
insl
loop
jle
lret
push
push
es
xchg
inc
sti
popf
mov
ljmp
shll
scas
jno
cs
push
insb
pop
inc
xchg
cmpsb
call
and
inc
enter
nop
push
add
adc
cmp
pop
sbb
adc
mov
testb
stos
sub
mov
adc
push
movsl
inc
out
dec
inc
mov
push
out
mov
and
cmpsb
jo
stos
nop
je
stos
fisubrl
ffreep
ret
testl
cmp
insl
mov
pushf
mov
push
lock
jmp
imul
scas
push
pushf
adc
imul
xor
inc
subl
movsb
arpl
xchg
out
pop
cs
and
incb
sub
js
adc
or
test
jl
adc
fiaddl
loop
mov
push
popa
mov
popa
xchg
mov
adc
icebp
inc
les
mov
dec
cmpsb
fists
mov
aam
inc
loope
mov
imul
xchg
or
test
inc
pop
pop
lret
jmp
lods
rolb
ljmp
dec
push
lahf
sarl
jle
sub
jbe
or
pop
jne
or
dec
jge
sbb
jge
and
mov
inc
rcll
jno
sbb
or
and
call
lods
sub
ret
cmpsb
iret
xchg
cmp
test
jno
sahf
dec
stos
adc
mov
inc
fld
adc
mov
arpl
hlt
xchg
push
sbb
jbe
mov
ss
pushf
jp
adc
mov
sarl
pop
ret
pushf
ljmp
or
test
sub
cmpsl
mov
jg
enter
in
adc
inc
inc
add
scas
in
loopne
leave
inc
mov
pop
mov
or
and
movsb
sarb
and
cmp
inc
push
adc
addr16
inc
cmp
ss
data16
lods
repz
filds
and
xchg
stos
movsl
mov
lahf
cmpb
and
mov
xchg
mov
std
subb
cwtl
orb
jnp
dec
scas
lahf
lcall
and
push
fsubrl
push
mov
insl
repnz
mov
and
and
mov
and
lods
push
xor
sub
gs
xorl
out
cld
adc
rorl
sub
rcrb
cli
xlat
xchg
sub
adc
into
xor
pop
pop
inc
or
cmpsl
xor
clc
divl
mov
int
rcll
jb
mov
and
mov
jne
fdivrl
ss
roll
ds
aad
jl
insl
jb
out
xor
adc
sarl
popa
xchg
rcl
mov
mov
adc
sub
push
bound
adc
xorl
pop
repnz
inc
fwait
or
and
cmpsl
xchg
mov
inc
inc
and
xlat
test
stos
int3
jl
cmp
lret
sti
push
sub
jmp
testb
add
adc
enter
mov
enter
rcll
bound
divl
xchg
sub
and
fs
aad
jae
clc
lods
fmull
xchg
ret
push
adc
sbbl
jg
adc
or
push
xor
sub
test
repnz
xor
les
pusha
inc
shll
mov
popf
xchg
or
es
mov
pop
test
call
incb
cld
test
sub
mov
mov
cmp
sub
shll
adc
adc
fstpt
dec
push
push
push
shrl
js
jb
insb
sbbl
cmpsb
push
add
loop
fldpi
in
push
stos
mov
mov
or
stc
or
int
add
aaa
jg
jno
test
out
jge
pop
hlt
fbld
add
xor
cmp
and
push
pop
xchg
inc
ss
out
shlb
push
pop
les
or
xor
add
cmp
insl
test
inc
push
push
insl
inc
scas
in
insl
jp
fildll
mov
ss
xor
cmpsl
in
ret
sbb
rclb
and
les
aas
cmp
jge
ret
push
mov
xor
idivl
xchg
push
jbe
cli
sub
out
cvtps2pd
dec
js
es
jno
push
shll
out
movsb
bound
pusha
cmp
or
rcr
ds
cmp
popa
loopne
imul
mov
pushl
in
mov
xlat
pushf
xor
aas
pop
dec
aas
inc
mov
mov
push
dec
push
xlat
adc
js
cwtl
mov
push
ds
push
xchg
in
push
aaa
shrl
scas
fsubl
add
ror
sahf
sahf
loop
ja
jns
js
scas
push
ds
int
pop
jae
sbb
js
xchg
cmp
push
push
sbb
mov
leave
dec
call
add
push
mov
jb
xchg
les
adc
lods
cltd
mov
mov
pop
out
jecxz
daa
dec
sub
add
insl
xchg
orb
add
aad
int3
sbbb
mov
xlat
incb
cmp
and
add
or
xchg
imul
pop
ss
push
sbb
jl
fwait
adc
ret
sahf
fimull
mov
mov
add
or
and
add
movsb
js
pop
jg
testb
out
loop
sub
in
adc
xor
je
adc
repz
cmc
xchg
add
lock
jne
mov
dec
sahf
imul
mov
xchg
loope
cmc
add
ja
sbb
outsl
int3
scas
push
push
mov
aas
cs
xor
sub
out
insb
sub
insl
cmp
mov
pop
jp
adc
lcall
pop
js
loopne
fs
mov
jmp
stc
inc
or
inc
mov
sub
nop
xor
mov
lret
cltd
add
xchg
mov
leave
jo
out
sub
cmp
sub
ret
jnp
inc
fwait
push
lods
add
mov
faddp
push
adc
lock
mov
and
es
ja
mov
push
mov
int
sub
bound
int3
lcall
mov
jbe
mov
ja
enter
aaa
ja
sbb
dec
ror
dec
mov
test
push
jns
pop
xor
cmp
inc
mov
sbb
push
fdivrs
pop
push
jl
push
stos
jmp
inc
subl
mov
xor
and
inc
out
rolb
jl
mov
adc
insb
scas
leave
push
idiv
aad
jge
sbb
xchg
hlt
push
lock
jne
or
jmp
and
xchg
pushf
dec
out
cltd
leave
cli
adc
and
inc
mov
rcrl
cmp
mov
push
sub
cmpb
loop
push
push
cwtl
cs
into
jl
xlat
push
sub
mov
cmpl
pop
loope
xchg
mov
loopne
pop
faddp
ds
lock
mov
dec
leave
das
movb
aad
inc
aaa
scas
nop
push
mov
test
jbe
push
aad
sbb
pop
cmp
dec
inc
ret
mov
fwait
push
mov
push
inc
lods
ljmp
pop
std
adc
mov
jl
out
and
inc
sahf
adc
fwait
or
mov
push
paddq
and
inc
cmpsl
mov
mov
sbb
pop
add
dec
mov
dec
mov
xor
push
inc
shrb
in
fs
sbb
pop
insl
pop
sbb
or
out
pop
loope
fs
cmc
pop
sbb
insl
pop
pop
lock
push
and
jmp
hlt
stc
insl
jae
xchg
mov
fcmovb
loopne
pop
je
mov
bound
mov
pushf
movsb
shll
rcl
cmpsb
ljmp
and
pop
sub
les
in
enter
and
leave
adc
leave
mov
xchg
aad
int
cmp
loope
hlt
jg
mov
mov
xchg
mov
jg
orl
push
adc
add
insb
in
and
mov
in
pop
pop
jge
test
mov
pop
dec
test
mov
or
or
push
fwait
femms
andb
sbb
adc
test
adc
fcompl
insb
rorb
andb
cmp
inc
jp
sub
xchg
leave
mov
inc
inc
and
cmp
pushf
add
fcmovne
add
add
xchg
sub
mov
mov
mov
into
out
cmp
rcl
mov
push
pop
sbb
xor
pop
cmp
orl
sahf
rclb
or
orb
out
f2xm1
jae
sub
mov
daa
jge
mov
xorb
adc
dec
dec
sub
test
sbb
leave
lahf
mul
cmp
fmull
push
js
cmp
cmp
enter
add
scas
xchg
and
sub
xor
lea
or
ja
add
popf
mov
sbb
iret
xbegin
pop
inc
cwtl
add
xchg
push
pxor
call
and
add
jg
pop
mov
mov
test
pop
mov
cltd
shll
mov
mov
mov
lds
les
sub
push
sub
jae
mov
push
stos
dec
pop
lea
adc
ss
xchg
pop
jns
aaa
xchg
cli
sub
sub
pop
vmwrite
or
int
sbb
adc
xor
push
out
insb
out
lret
mov
out
and
adc
sub
xor
and
insl
stc
cs
sbb
or
mov
loopne
imul
addr16
sub
lcall
push
je
bound
lds
les
loopne
out
push
aad
sbb
mov
es
fisttpll
sbbb
imul
popf
ret
jo
pop
sbb
enter
jo
lcall
sub
ds
idivb
mov
dec
or
daa
mov
mov
daa
int
das
jecxz
and
jno
push
test
and
fs
les
ror
es
js
out
lret
fnclex
mov
pop
mov
push
ss
mov
lds
bound
adc
push
push
data16
cs
dec
dec
or
pop
mov
or
sbb
sbb
sbbb
jmp
stc
sahf
add
mov
adc
inc
and
dec
adc
pop
cmpsl
adc
rep
lds
push
nop
mov
push
daa
mov
stos
add
sbb
sub
out
or
pop
int3
in
add
xorb
jnp
mov
pop
das
mov
mov
cmp
add
sub
ret
sahf
out
xor
dec
mov
mov
mov
mov
push
adc
or
mov
shl
pusha
icebp
pop
sarb
sub
pop
testb
cmpsl
in
sub
mov
mov
push
push
movsb
insl
xchg
xor
out
lret
jl
pop
push
out
xor
pushf
xor
sbb
sti
pop
pop
test
cltd
add
fdivs
lods
test
sbb
pop
xchg
sbb
pop
idivl
mov
dec
mov
push
shld
fmull
mov
or
mov
mov
dec
outsb
pushf
xchg
sub
sub
faddl
sub
inc
mov
sbb
insl
nop
mov
cmp
out
mov
rorb
mov
mov
mov
and
cmpsb
imul
fnstenv
adc
aaa
popa
movsb
and
xchg
inc
cmp
push
pop
dec
jge
push
in
pop
insb
fidivl
pop
jmp
and
mov
mov
ret
idivl
xchg
mov
mov
xchg
mul
sub
or
ret
mov
xchg
mov
incl
push
and
dec
add
scas
bound
ja
pop
sbb
cli
movsb
testb
jg
lret
sbb
cwtl
inc
pop
push
and
fistps
or
mov
stos
xlat
stc
cwtl
outsb
jp
push
xchg
cmpsl
jmp
cmpsb
sub
or
cmpl
cmpl
sub
jae
mov
cmpb
mov
sti
loope
lock
fidivs
mov
outsb
and
rorl
addr16
jg
lret
inc
mov
movsb
jp
sti
sbbl
push
xchg
fnstenv
sahf
test
cs
in
mov
dec
jnp
cmp
leave
daa
test
fldt
ja
inc
dec
in
mov
and
cmp
and
stc
dec
mov
add
adc
popa
or
rorb
xor
push
jb
repnz
add
in
arpl
dec
dec
rol
enter
dec
nop
push
jl
in
fnstsw
fcmovnb
ljmp
fwait
jnp
jnp
sbbl
movsb
shll
inc
test
jp
in
push
sbb
cltd
cwtl
daa
mov
les
shll
jg
xchg
xor
out
sbb
adc
mov
push
cmp
insb
imul
rcll
and
cmp
test
test
mov
push
test
inc
push
into
and
xor
push
inc
das
adc
aam
jb
lahf
push
das
jecxz
lret
loopne
mov
sbb
movsl
pop
push
shrl
adc
adc
out
mov
loope
int3
out
cmp
inc
imul
cli
fildl
nop
gs
mov
shlb
dec
xchg
pop
cmp
push
mov
xor
ljmp
dec
test
xchg
sub
sahf
rorb
add
jo
xchg
sub
ficoms
addr16
lret
jge
push
sub
test
or
mov
lret
test
pop
inc
cmp
mov
add
jo
aas
jl
jle
jmp
fnstenv
push
divl
loop
scas
inc
dec
mov
sbb
pusha
pop
pop
repz
add
fisttpl
push
ret
xor
iret
or
lahf
shll
sub
int3
not
lcall
xor
les
push
or
cmp
pop
cmp
jmp
test
lods
mov
into
and
test
jae
jge
dec
jecxz
repnz
repnz
mov
mov
mov
jns
jae
inc
push
adc
xchg
mov
or
fists
roll
mov
mov
push
addr16
push
dec
xor
adcb
rcl
adc
dec
sub
out
in
nop
xor
aad
push
mov
adc
ja
cmp
jns
lret
mov
mov
sub
dec
insl
push
or
mov
rclb
dec
jae
mov
push
mov
push
hlt
mov
add
add
pop
shrl
cli
or
insl
xchg
bound
pop
loop
shl
jbe
mov
mov
pop
cli
pop
mov
je
pop
lahf
addl
inc
into
dec
add
inc
stos
into
es
lods
sbbl
std
dec
and
lds
jp
inc
pushf
cmpsb
sub
and
push
shll
fldcw
mov
fidivrs
lods
test
and
push
add
clc
jmp
add
mov
imul
adc
icebp
dec
sbb
xor
mov
mull
or
ds
sbb
pop
mov
sub
ja
fsubs
add
std
inc
mov
cmc
mov
les
mov
inc
icebp
mov
popf
aas
out
fmul
fnsave
jo
movb
lea
shll
nop
lahf
inc
push
push
jae
mov
in
cmp
adc
ret
cmp
lret
pushf
lahf
jle
mov
mov
xor
test
inc
adc
jo
gs
xchg
fiaddl
lods
icebp
jg
insl
pop
and
push
stos
mov
push
or
ficompl
popa
ret
aad
push
inc
dec
lds
lcall
rorl
jne
loop
push
xor
outsb
pop
ljmpw
jg
scas
cmpb
out
mov
or
outsl
cmc
sub
dec
sahf
add
xor
hlt
push
mov
push
or
pop
cmc
test
iret
popf
cmp
or
cli
movsb
or
lods
mov
mov
jns
xor
mov
cwtl
cmp
int3
cld
sar
mov
sub
and
jl
pop
add
leave
sbb
xor
lret
loop
andl
imul
addr16
and
adc
sub
jg
outsb
lret
icebp
fnsave
pop
dec
ljmp
lock
or
dec
jb
out
cmp
mov
into
adc
or
jnp
push
mov
scas
inc
sbb
and
adc
scas
into
arpl
out
adc
pop
jnp
mov
xlat
adc
push
jg
push
add
lret
dec
xchg
pop
ret
mov
les
mov
cmp
mov
js
or
ffreep
push
xchg
les
test
fisttps
and
cmc
fldcw
cli
sub
mov
jnp
aas
sub
inc
cmc
xlat
add
mov
mov
adc
outsb
dec
cmpl
out
push
addb
sahf
pop
testl
dec
cmp
jno
or
push
jmp
xchg
sbb
fs
xchg
into
out
xor
jg
xchg
jp
add
sub
pop
fistpl
cmpsl
stos
lea
loopne
push
sub
int3
stos
gs
mov
into
and
add
ret
test
cmpsl
push
fs
gs
gs
insb
aas
cwtl
pop
inc
gs
jne
imul
aam
dec
cmp
adc
lcall
enter
xor
and
adc
xchg
dec
pop
out
shll
jo
int3
leave
sbb
rcl
repz
out
out
sub
test
mov
ljmp
ret
and
pusha
sahf
pop
push
mov
jecxz
add
xchg
xorb
es
stos
and
loopne
sub
into
scas
repnz
and
sub
cmpsb
je
add
mov
das
adc
sbb
in
test
push
pop
rorl
xor
sbb
test
adc
int
sub
sti
xor
loopne
jmp
or
cmp
push
push
sbb
inc
cmp
xor
out
pop
sbb
ret
fs
icebp
hlt
js,pn
cld
push
mov
mov
mov
loope
pop
sahf
sbb
cmpsl
les
mov
dec
mov
int
add
andl
sub
push
mov
push
xchg
lea
rcrb
inc
sbb
icebp
jge
xor
push
xchg
push
out
aad
cmp
dec
adc
out
jge
xor
push
cmp
mov
dec
cmp
sbb
rclb
jbe
mov
ret
ss
cltd
pop
addr16
insb
push
or
shlb
xor
lret
xchg
movsb
fs
dec
jo
xchg
push
lcall
testl
mov
push
push
cmp
inc
stc
mov
push
pop
rol
cmp
loope
xorl
adcl
shrb
xor
dec
mov
mov
xchg
mov
sub
hlt
sub
movsb
mov
and
shlb
or
js
inc
js
ljmp
dec
xchg
add
inc
aad
mov
int3
outsl
mov
adc
incb
sbb
and
fsts
popa
sub
repz
sbbb
insb
jae
icebp
js
aas
pop
sbb
inc
rcr
out
addl
mov
outsl
mov
mov
decb
in
push
cmc
xlat
fsubs
inc
cwtl
popa
xlat
mov
or
mov
mov
jmp
popa
les
mov
aas
arpl
in
cmpsb
out
inc
lock
fidivrl
mov
or
filds
or
add
dec
push
test
stos
insb
lret
sahf
in
stos
sub
sub
jno
push
call
cmp
push
sbb
cmpsb
mov
sub
cmc
sbb
mov
testb
add
sti
xor
les
repnz
pop
lret
inc
add
clc
sbb
in
add
xor
fcomps
cvtdq2ps
push
js
out
out
in
enter
xchg
shlb
or
dec
int
mov
int3
in
dec
xchg
adc
xchg
cmp
fsts
push
in
or
xchg
lods
rorb
mov
int
out
inc
into
push
cwtl
mov
or
or
push
dec
arpl
pop
dec
int
icebp
mov
fdivl
cmp
mov
scas
in
or
mov
lahf
fnstcw
jns
nop
jns
aas
scas
dec
xchg
cmpl
jle
test
rcrl
decb
inc
shlb
in
xchg
lock
rorl
xchg
jle
ljmp
cmp
xchg
and
push
repnz
aaa
inc
aas
xor
adc
jle
jecxz
cmp
sub
rorl
cmp
xorb
adc
outsl
inc
fisttpl
insb
cmp
filds
cmp
in
ljmp
mov
mov
mov
bound
or
xor
mov
push
fs
xor
jecxz
mov
cmp
pop
testb
into
and
mov
icebp
add
ret
popf
iret
add
xor
and
cwtl
mov
add
inc
pop
push
jnp
popf
in
xor
lcall
out
sub
ds
jo
xlat
xchg
fistpll
xor
jae
push
sahf
xchg
outsl
adc
std
popl
lods
mov
jb
shrl
fadd
jno
push
jl
cmp
lea
outsb
or
xchg
loop
lods
int
mov
cmp
cmp
gs
jle
mov
dec
dec
les
lcall
mov
cli
jns
xchg
or
wbinvd
inc
and
xchg
inc
xchg
xor
add
arpl
and
mov
fcmovne
sti
lret
mov
or
jbe
pusha
popf
stos
ss
jge
pop
pushl
fsubr
fmul
int
pusha
mov
movsl
hlt
push
mov
mov
sbb
add
dec
inc
or
into
lret
add
and
mov
lea
insl
test
notb
fs
cmp
iret
mov
imul
dec
stc
jl
mov
scas
fimull
sbb
out
fldt
clc
jge
ja
lret
aad
and
leave
mov
or
pop
stos
lahf
mov
xchg
into
popa
push
sti
es
popa
ds
adc
test
ja
cmpsb
mov
pop
sub
out
mov
mov
push
sbb
cmpsb
repnz
adc
ljmp
inc
adc
sub
cmpsb
mov
xor
push
jb
xchg
out
sar
pop
xor
loopne
dec
data16
cmp
scas
loop
ffree
cli
scas
mov
sbb
out
int
fisubs
lock
out
sarb
pop
jmp
dec
mov
les
sub
scas
mov
add
imul
fistpl
jecxz
negl
dec
shr
cmp
jno
outsl
mov
icebp
and
popf
inc
and
scas
scas
mov
jno
sbb
inc
es
jmp
and
andl
push
or
push
ljmp
dec
shr
mov
nop
repz
xor
aad
fdivs
gs
jmp
fdivrs
xor
shlb
cmp
cmp
addr16
cmp
or
add
jecxz
pop
fsubrl
jno
arpl
jge
fidivl
jecxz
pop
popf
mov
dec
js
and
cmpb
fistpl
cmpsl
loopne
mov
addr16
fmul
mov
dec
push
jle
lret
call
insb
and
gs
lcall
daa
pop
push
mov
pop
mov
scas
mov
mov
cmpsb
mov
outsb
jbe
inc
and
mov
dec
add
mov
xlat
cmpsl
iret
je
push
shrl
call
inc
add
jbe
jmp
in
mov
dec
lahf
inc
mov
mov
ja
add
inc
je
mov
and
mov
xor
clc
mov
out
aaa
movsb
inc
or
fs
cmpps
jl
and
or
xchg
xor
sub
fnstsw
dec
movsb
xchg
fsubrs
xchg
push
repz
jmp
mov
jg
or
push
leave
pusha
imul
std
pop
sub
inc
xor
mov
mov
adcl
or
and
nop
rolb
xor
pushf
loope
and
movsl
adc
push
popf
dec
adc
sahf
add
cmp
or
inc
enter
pop
cmc
mov
pop
loop
xchg
les
je
loop
insl
sub
inc
dec
movsb
pop
sbb
mov
data16
jb
imul
add
pusha
mov
lret
iret
dec
or
xor
push
sub
mov
and
sub
push
add
sub
movsl
pusha
andl
pop
xor
mov
dec
daa
xchg
lret
sahf
call
adc
dec
pop
and
mov
xchg
inc
lea
mov
rcll
inc
jp
adc
fistpl
lahf
test
push
jnp
xor
fistpll
ss
mov
clc
fisubrs
and
insb
push
push
xor
pop
jl
mov
cld
cmp
inc
outsl
jp
or
or
pop
std
stc
add
push
inc
pop
stos
clc
jmp
ss
stc
mov
gs
fmuls
sbb
sbb
and
jmp
mov
and
jnp
sarb
mov
lds
mov
xchg
in
fcomps
xchg
adc
rcr
daa
js
mov
inc
stos
push
and
sbb
fnsave
les
sub
shr
or
cmp
sbb
lock
mov
fs
pop
sub
movb
or
stos
pusha
cmp
mov
test
sub
pop
push
adc
andb
or
dec
push
push
mov
enter
cmp
cmp
jge
daa
in
or
lea
loope
cmp
and
hlt
daa
cmpsb
jno
in
dec
clc
mov
jns
adc
enter
pop
sbb
mov
xchg
sub
sbb
xor
or
orb
or
cld
aas
pusha
or
js
aaa
imul
test
pop
loop
mov
xchg
cmp
dec
inc
mov
pop
jge
lds
pop
mov
out
inc
repnz
push
xor
in
aad
xor
lahf
push
fnsave
adc
push
bound
or
cwtl
sbb
fisubrl
inc
and
add
lods
jnp
aad
xchg
mov
jl
inc
push
aad
lds
or
pop
sar
pop
sub
imul
subb
xor
jbe
lret
xor
sbb
lods
pop
pop
jbe
or
jp
sub
push
mov
ficomps
mov
push
inc
imul
idivl
idivl
or
mov
rcr
adc
rorl
xchg
dec
insb
jne
push
mov
aas
jecxz
xchg
xchg
clc
in
mov
inc
call
aaa
int3
mov
inc
and
mov
mov
or
mov
iret
push
sbb
lret
adc
lahf
pop
sub
repz
jns
dec
cwtl
std
dec
ret
repz
fimuls
testb
dec
rolb
or
idivb
loopne
pop
cmpsl
faddl
outsb
test
mov
add
ss
mov
sbb
push
xchg
in
test
inc
jmp
sub
pop
add
xchg
jg
mov
adc
add
not
push
lret
out
out
popf
sub
push
ja
pop
and
and
adc
cwtl
loop
lods
cmp
jle
add
jmp
mov
es
mov
je
shlb
stos
dec
mov
mov
fbld
push
sub
aam
or
pop
push
lds
cs
inc
xchg
ss
stos
jle
and
cmp
mov
shl
jno
xchg
pop
int3
pop
repnz
ja
in
ljmp
jnp
or
lock
fwait
xchg
fnstsw
icebp
clc
punpcklbw
and
aam
jae
cmc
fdiv
popa
mov
jo
mov
pushf
xchg
jne
cmpsb
stos
sbb
loop
lods
mov
jno
mov
or
iret
jno
daa
repz
inc
pop
xchg
cmpsb
xchg
jecxz
test
shrb
jle
adc
jnp
out
jns
mov
nop
repz
xor
adc
rcl
mov
mov
aad
lods
jmp
test
mov
ret
das
pushl
mov
cmc
por
xchg
out
or
mov
jb
mov
push
mov
ror
pop
dec
iret
xor
cmp
and
test
sub
xor
jmp
or
push
sub
sahf
int3
xor
pop
pop
lret
lods
mov
lods
or
cmc
aam
cmp
push
in
fisttpl
fsubr
pop
loope
xor
andl
adc
lret
sub
add
xor
jmp
push
fidivrl
inc
cmp
jo
mov
imul
push
xchg
sti
imul
test
inc
sbb
fisubs
sbb
push
test
out
xor
pop
dec
test
add
mov
cltd
je
add
mov
sti
cmpsb
in
clc
or
pop
les
push
jbe
cmp
and
xor
mov
and
fwait
lock
push
add
cmpsb
ret
mov
addr16
addr16
and
orl
mov
cli
sub
sub
add
jno
nop
xor
add
jecxz
or
xchg
fsubs
sub
xchg
ret
fstpt
mov
cmpsl
out
int3
loope
daa
leave
mov
dec
sbb
paddd
and
fstl
stc
inc
dec
push
add
roll
clc
out
repz
fldl
adc
xchg
dec
test
mov
movl
or
lds
movsl
dec
push
test
outsb
sbb
pusha
lcall
mov
pusha
loope
sbb
cmp
daa
fistps
daa
nop
xchg
cmp
mov
dec
lret
cmc
push
mov
aaa
es
mov
push
dec
adc
sbb
fiaddl
shl
mov
xchg
cld
shrb
icebp
mov
scas
ljmp
jno
mov
push
pop
push
adc
or
mov
jl
cwtl
test
pusha
dec
outsb
add
in
outsl
mov
and
fucomp
push
mov
test
push
dec
sub
icebp
xchg
mov
mov
adc
jns
test
fnsave
push
mov
les
in
mov
cld
insb
or
call
loope
xchg
test
add
jmp
and
shrl
cmp
and
je
jle
daa
gs
pop
and
shlb
sbb
cmp
add
xchg
daa
push
push
pop
sbb
into
jb
rolb
dec
mov
out
sub
mov
xchg
add
cmp
hlt
pop
in
mov
loopne
dec
repz
sub
das
push
mov
cmp
popf
inc
arpl
adc
lret
dec
bound
inc
sub
es
aas
push
in
push
repz
xor
jge
pop
sbb
pop
int
stos
pop
lds
es
mov
jl
xchg
test
sbb
adc
pop
jbe
out
mov
das
jbe
in
data16
xor
or
vmread
pusha
xor
fstpl
sbb
sahf
pop
cmp
daa
sub
fcompl
imul
mov
push
push
and
insb
hlt
fists
cmp
cmp
ljmp
mov
outsb
out
jno
mov
dec
lret
cmp
fidivs
stos
daa
push
data16
sar
fs
loope
addr16
std
push
pop
or
imul
insl
add
inc
mov
scas
out
mov
pop
mov
add
jns
inc
push
ds
dec
xchg
in
arpl
sub
fwait
push
mov
je
adc
mov
cmp
in
mov
into
mov
fs
sbb
mov
lret
sbbb
dec
aad
sub
out
xlat
sub
inc
pop
addr16
dec
xchg
cli
sbb
add
inc
and
add
add
adc
xchg
xor
pop
ljmp
jb
mov
pop
ficompl
xlat
inc
pop
mov
lds
cld
ret
pushf
fldz
xchg
addr16
push
subb
cmp
jne
movsl
sub
and
out
icebp
jl
cwtl
daa
fisttps
push
mov
ret
xor
mov
jl
pinsrw
and
jnp
sub
mov
aaa
cli
mov
inc
movsb
pop
or
adc
xor
fistl
movsb
shll
and
jbe
inc
push
mov
pop
and
int3
jno
notl
stos
aam
xor
xor
mov
jp
clc
scas
mov
inc
scas
lret
pop
movsb
pop
ljmp
cmp
cli
add
pop
push
push
jecxz
add
sti
test
ljmp
ret
jp,pn
mov
or
je
in
andb
xor
adc
pop
xchg
in
loope
adc
sbb
jne
add
movsb
pop
lcall
inc
sti
pop
mov
fsubrs
or
xchg
dec
push
inc
stos
das
jb,pn
ret
mov
cmpsb
lods
fnsave
sbb
xor
mov
jo
fwait
mov
push
testb
scas
mov
push
or
push
mov
add
mov
pop
adc
mov
or
push
popf
ret
mov
jb
orl
aam
fdivrl
jmp
stos
mov
cmp
xor
out
std
ljmp
enter
xchg
popa
xorl
mov
sub
imul
rcrl
pop
mov
outsb
and
push
mov
out
jecxz
gs
out
and
outsb
mov
ds
and
in
xor
pop
in
push
mov
pusha
cmp
cmpb
pop
mov
jne
leave
cmpsl
push
repnz
jae
js
sbb
idivb
jne
lcall
sbb
and
fimull
rep
add
push
sbb
inc
lahf
jge
fstl
jno
mov
insl
into
stos
jecxz
rcrb
mov
hlt
fisttpl
push
mov
repz
sub
outsb
pop
jge
popf
movsb
lahf
aaa
or
jo
mov
fcoms
jge
inc
xor
outsl
sbb
mov
cmpsl
xor
inc
hlt
std
adc
mov
adc
xchg
pusha
sub
scas
cmp
dec
xchg
xor
or
sbb
push
fimuls
adc
in
pop
cmp
sub
and
inc
pop
in
aam
and
push
adc
xchg
xchg
ror
shll
outsb
mov
push
in
jmp
mov
cmp
sbb
jo
lods
shrb
lds
ja
xchg
cmc
movsl
sub
in
mov
jo
push
nop
jnp
mov
push
sarb
mov
jbe
and
mov
adc
fadds
out
and
xlat
lods
sbb
mov
lods
push
mov
add
cmp
mov
lahf
bound
sbb
in
pop
xchg
sahf
loopne
loopne
or
adc
and
mov
jp
or
sbb
into
lods
push
dec
hlt
mov
aam
fnstsw
lcall
stos
idivb
xchg
aas
add
and
or
xor
insb
fucomp
jmp
xchg
dec
mov
xchg
adc
dec
mov
out
es
mov
cmp
fimuls
or
imul
sbb
sbb
das
dec
addr16
push
lret
shrb
jle
cli
push
pop
roll
fstps
insl
dec
sub
imul
jb
incl
out
jb
jp
repz
insb
or
xchg
scas
loop
fnsave
or
ret
pop
push
push
adc
fldln2
ret
movsb
xchg
mov
jo
push
pop
and
icebp
xchg
push
gs
out
mov
xchg
int3
repnz
hlt
fnstenv
mov
frstor
mov
fldl
add
icebp
leave
xchg
mov
ljmp
pop
add
test
sarb
jbe
iret
sub
loopne
nop
movsb
jnp
dec
xor
or
and
hlt
mov
push
gs
scas
xor
stos
sbb
iret
cmp
sub
int
dec
cmpb
push
dec
jne
sub
test
and
xlat
xor
movsl
cmp
clc
popl
cmp
loope
aad
and
push
push
je
fiaddl
arpl
or
cmp
pop
add
adc
iret
lsl
inc
icebp
mov
push
jp
jnp
pop
cs
sbb
insl
scas
jmp
lock
popf
int
lods
and
adc
xchg
loopne
pop
mov
mov
popf
mov
pop
cmp
insl
in
ja
outsl
sub
inc
mov
shrl
test
fcoml
sub
cmpsb
jae
mov
movb
mov
push
sbb
or
stos
bound
inc
dec
inc
cmp
pop
jne
and
and
sarl
mov
inc
idivl
pop
dec
jb
push
insb
inc
lret
sub
xorl
mov
cli
loopne
add
lods
mov
mov
into
outsb
mov
ret
mov
push
test
inc
mov
mov
addr16
jns
jl
cmp
test
std
xchg
xor
adc
js
fidivs
fucom
xor
int
pop
push
fcoml
out
pop
enter
stos
push
sbb
push
jg
pop
xchg
loope
and
ret
dec
mov
cld
pop
das
sbb
lods
xchg
or
or
decb
jp
jno
jae
xchg
jbe
inc
popa
sbb
sbb
fucomi
xchg
mov
insl
mov
mov
pop
and
ja
mov
loopne
or
into
movsb
mov
cmp
sub
jns
pop
ds
lock
jmp
rcrb
and
lret
xor
test
mov
sar
ss
sub
dec
mov
inc
mov
in
cmpsl
sub
jecxz
mov
mov
loopne
xlat
test
lret
rcrb
in
loope
mov
hlt
or
pop
jbe
enter
mov
push
loop
lock
test
xor
into
outsb
inc
gs
push
mov
pop
into
xor
test
daa
mov
fcomps
test
dec
mov
cld
push
ja
in
outsl
stos
insl
fdivr
cltd
std
sti
xor
int3
inc
out
xor
rcl
addr16
ds
loop
or
out
arpl
adc
or
pushf
ljmp
mov
std
jmp
sbbl
mov
mov
mov
sub
sub
cmpb
imul
test
fcompl
cmp
pop
fidivrl
loope
insb
cld
or
aaa
jno
jl
fsubl
ljmp
ret
and
cmp
cmp
jge
pop
pushl
test
out
ficoml
or
aad
icebp
push
rclb
lea
xor
jne
inc
mov
push
aaa
loopne
lret
sub
jl
ljmp
dec
mov
jae
mov
aam
popf
aas
xor
xchg
dec
fwait
ss
lds
xchg
pop
adc
scas
push
dec
les
push
cltd
and
and
and
call
cmpl
jnp
test
pop
test
aad
dec
addr16
sti
xchg
int
mov
testb
pop
inc
fstl
xor
sahf
mov
scas
test
mov
pop
sub
lock
in
cwtl
jbe
push
ret
loop
lahf
cltd
push
in
cs
inc
mov
sbb
ficompl
sbb
push
in
js
mov
mov
pop
cwtl
mov
pop
sarb
cltd
aaa
pop
sub
mov
dec
mov
xor
pusha
dec
adc
mov
into
inc
push
xchg
es
js
xor
or
imul
xchg
loope
xor
adc
inc
jmp
or
les
aaa
divl
inc
arpl
scas
cmpsb
leave
mov
data16
mov
aam
test
hlt
mov
mov
movsl
cld
jecxz
add
xchg
rcrb
inc
or
mov
stos
shlb
dec
cmp
jbe
mov
cmp
cmp
imul
inc
push
das
lret
pusha
iret
js
xor
mov
xchg
jle
cmc
outsb
lock
lcall
notb
xchg
out
out
dec
dec
gs
mov
push
pushf
test
mov
or
fmuls
push
aad
and
lar
popa
inc
push
rclb
push
jle
or
lret
movsb
sub
jnp
lahf
jo
lods
push
fcomps
dec
or
lret
sub
jae
mov
mov
mov
or
jnp
frstor
dec
clc
mov
pop
cmp
fsubrl
cltd
push
movl
xchg
push
andl
filds
daa
call
movsl
mov
jge
inc
call
adc
nop
push
icebp
fisttpll
addr16
mov
inc
or
mov
flds
addr16
or
or
inc
shl
aas
jmp
jge
xchg
lret
sbb
gs
and
inc
sbb
xchg
out
jp
in
clc
int
out
mov
pop
pop
aas
ja
xchg
adc
iret
cltd
cwtl
in
mov
clc
mov
pop
xchg
push
jg
xlat
cmpsb
mov
jmp
shlb
test
jg
fsubs
mov
pusha
mov
lcall
fs
mov
je
push
loope
lock
aam
dec
fwait
in
hlt
dec
les
mov
mov
sbb
les
imul
ja
push
adc
or
cmc
insb
movsb
inc
pop
les
lods
mov
xlat
sub
mov
in
cmpsb
jmp
xchg
add
mov
cli
setae
cmp
pop
pop
test
mov
jnp
xchg
dec
clc
mov
jae
repz
nop
mov
sbb
jns
push
stos
sbb
push
jno
push
adc
mov
inc
loopne
xchg
jne
daa
loop
pop
push
cs
loop
cmpsw
add
aad
test
and
arpl
mov
es
dec
mov
push
dec
sub
xchg
xchg
movsl
or
insl
sbb
shll
xor
jne
stos
pop
lods
jbe
in
stc
jnp
adc
out
hlt
movsl
out
sub
xchg
xchg
into
repz
mov
xor
cs
sub
jecxz
int
cld
jmp
addl
icebp
jecxz
pop
dec
ljmp
and
push
sarb
and
int
mov
pop
jns
or
inc
cwtl
mov
jle
inc
sub
lods
push
mov
inc
pop
inc
aas
lods
adc
mov
pop
xor
lods
movsl
outsl
insl
data16
xor
daa
xor
add
js
dec
xchg
mov
push
mov
cmp
data16
outsb
popf
lea
int3
rolb
push
fs
mov
mov
stc
inc
shll
pop
jecxz
pop
cmp
into
adc
push
cmp
jge
pushw
arpl
mov
xchg
xchg
flds
push
mov
and
scas
jns
imul
dec
rcll
test
push
imul
sub
cmp
lahf
jns
mov
mov
lea
aam
pushf
add
mov
lods
lock
mov
pop
push
fisubl
fbld
mov
cmpsl
mov
je
sub
lcall
pop
idivb
push
push
int
cld
mov
dec
cmpsl
and
cmp
mov
subl
mov
mov
xchg
js
push
fistpll
adc
cld
jge
or
and
mov
sbb
mov
inc
scas
aas
ret
sti
outsb
jns
push
lret
popl
jmp
xor
imulb
cmp
lahf
push
pop
sahf
mov
add
loope
push
js
lock
add
imul
dec
fmuls
cmp
mov
std
lahf
in
jp
insl
test
ss
mov
push
dec
xorl
bound
repnz
add
add
mov
push
int
mov
mov
test
cmp
xor
int3
mov
lock
stc
xchg
in
loope
xchg
mov
adc
jnp
int
xchg
ret
imul
stos
das
mov
fildll
negb
sub
dec
jo
mov
jmp
cs
ret
cld
xchg
lock
sub
pop
ljmp
add
jne
imul
loop
imul
popa
sahf
lahf
or
fisubl
aas
mov
sub
vpshufd
das
aas
pop
or
mov
push
ja
in
stc
jno
cmp
or
mov
test
inc
or
or
lea
call
mov
fisubrs
xor
sahf
mov
push
jbe
mov
test
sar
fldt
mov
leave
inc
jl
xor
lret
adc
fsubs
push
lock
mov
jo
arpl
sbb
or
fldl
les
mov
imul
cmpb
mov
int
adc
cmp
sahf
xchg
push
dec
mov
xchg
sbb
ja
jp
inc
pop
fidivrs
mov
aaa
cmp
data16
scas
leave
or
outsl
push
push
repnz
xlat
xchg
mov
or
sub
ret
jg
mov
or
xlat
push
pop
mov
jbe
adc
adc
cld
xchg
jmp
std
cmp
repnz
call
testb
and
dec
imul
pop
push
xchg
mov
test
push
test
pop
shl
fidivrs
mov
xor
ret
roll
fimuls
sti
fcoml
adc
jp
movsl
dec
imul
add
lods
movsb
data16
jmp
push
mov
lods
pop
sub
addr16
stc
mulb
shlb
push
lock
xchg
cmpsb
inc
dec
dec
push
mov
in
lods
repnz
js
sbb
scas
jle
or
cmp
mov
mov
pop
imul
mov
hlt
jne
pop
jmp
dec
hlt
cmp
test
faddl
sti
es
inc
xor
and
xchg
push
mov
push
testb
lds
pop
adc
mov
insb
and
cmp
inc
aaa
out
xchg
inc
int3
or
jge
jmp
out
add
int3
lods
mov
xor
xchg
ljmp
inc
fcomi
mov
mov
ds
repz
fwait
sbb
sbb
arpl
call
push
pop
cmp
jno
rdmsr
mov
movsb
lret
mov
mov
repz
cwtl
arpl
cli
xor
and
xchg
and
movsb
xchg
iret
rolb
push
jg
mov
sahf
push
int3
add
adc
pop
xchg
loope
aad
repnz
jno
cmp
mov
loope
mov
ds
sbb
cmp
popa
movb
scas
hlt
jp
fistl
lret
clc
fmull
push
movl
sbb
pop
das
lods
in
lahf
test
mov
mov
pop
ret
inc
pop
and
lcall
pop
cmp
jmp
cmc
enter
xor
cmpl
adc
imul
push
mov
sti
ja
mov
pop
mov
into
jecxz
cltd
pop
pop
iret
inc
adc
out
imul
int
cs
stos
dec
out
insb
pop
fs
dec
stos
lret
lods
adc
dec
cld
orl
daa
mov
adcl
rclb
in
mov
les
mov
push
sahf
ret
movsb
jns
xor
in
sahf
sqrtps
sbb
dec
or
xor
cs
dec
std
pop
test
add
js,pn
aas
rolb
insl
dec
dec
int3
enter
out
imul
push
xor
es
ljmp
xlat
cs
hlt
fwait
pop
ss
inc
lock
xlat
or
mov
mov
lret
push
hlt
push
lea
js
or
sub
pop
andb
or
xor
or
xchg
lods
mov
rclb
subb
mov
lret
fdivr
dec
pop
jno
mov
lods
pop
repz
lods
pop
jmp
xor
aad
repnz
push
inc
aas
pop
lcall
adc
inc
dec
sbb
icebp
jnp
dec
cmpsl
and
ds
cmpsl
mov
movb
push
sub
jne
sbb
sbb
addr16
push
lock
sbb
pop
repz
lret
lcall
and
jp
imul
mov
movsb
inc
sbbb
cmp
popa
ljmp
ds
pop
cmp
out
inc
xchg
stos
or
fildl
rorl
aam
imul
aaa
movsb
andl
iret
or
test
adc
sub
xchg
xor
jp
jnp
shlb
add
lea
jbe
inc
add
pop
jp
and
test
pop
cmp
or
mov
sbb
pop
push
hlt
xor
test
int3
mov
filds
cmp
xchg
cmp
lahf
adc
add
lds
jmp
fstpl
mov
ret
sar
xor
ds
cli
into
adc
outsl
daa
xchg
xchg
and
daa
mov
mov
int3
xor
dec
iret
fs
xor
fdivs
sub
test
lods
stos
icebp
cmp
add
adcl
js
ljmp
mov
scas
imul
sti
cmpsb
inc
mov
jnp
cmp
pop
mov
mov
add
sbb
es
or
xchg
scas
fiaddl
adc
push
sbb
arpl
push
dec
jnp
mov
and
lret
out
and
test
jecxz
lret
sbb
mov
jge
lahf
pop
jb
outsl
fistl
jge
jo
pop
sbb
cmp
pop
and
mov
cli
xlat
inc
test
mov
xchg
xor
adc
mov
adc
ds
jae
mov
popf
push
out
cltd
sbb
or
int3
add
lock
out
nop
lcall
jecxz
bound
cltd
dec
push
mov
insb
jae
adcl
scas
push
push
int
push
int3
mov
sub
test
and
inc
shr
push
in
dec
xchg
xchg
std
test
ljmp
mov
lock
jo
call
xor
lods
cs
repz
xor
ret
dec
test
mov
sbb
repnz
hlt
cmp
and
inc
mov
ss
lret
dec
test
data16
adc
out
mov
lods
in
sub
or
stos
jae
dec
data16
negb
cmp
out
mov
mov
cld
push
fdivrs
xchg
add
cmpsb
out
mov
mov
arpl
inc
cs
push
jb
aaa
std
push
xor
fcomps
popf
fistl
fs
cli
cli
xor
aas
ja
pop
sahf
fimull
pushf
fwait
das
sbb
jae
adcb
aaa
add
imul
add
ljmp
adcl
aas
mov
xor
xor
stos
sbb
in
ljmp
mov
fisttpl
sbb
stos
lret
cltd
adcl
loop
jmp
adcl
mov
jo
fidivrs
and
cmpsl
lds
xchg
icebp
or
cli
sbb
pusha
sahf
xor
jle
jle
xor
out
lock
iret
imul
loope
inc
jns
ds
mov
mov
jb
xchg
std
cmp
sbb
je
dec
stos
pop
sbb
fsubr
leave
insb
ss
xchg
xchg
mov
dec
jns
jb
lret
outsb
mov
out
jecxz
daa
divb
cli
adc
xor
test
dec
xor
addr16
sahf
sbb
lods
out
mov
xor
addr16
jle
mov
outsl
adc
test
rcll
mov
pusha
popf
mov
or
sti
dec
dec
adc
aam
aam
dec
mov
fsubrs
enter
jle
insb
jo
xchg
sbb
mov
fidivrs
xor
push
js
mov
add
imul
aad
and
lret
lds
enter
cltd
add
xor
lret
dec
shl
jnp
mov
js
sbb
hlt
lock
mov
dec
jmp
sti
xchg
inc
sub
out
pop
adc
fucomp
xchg
icebp
test
bound
into
inc
cwtl
cmp
pop
sarl
das
lods
push
cmp
out
dec
mov
mov
jg
fwait
sub
add
in
dec
lahf
xor
fs
cli
in
add
pop
ja
ja
xchg
fistpll
dec
sub
push
cwtl
dec
insl
dec
jno
inc
push
xchg
xor
xchg
mov
std
cmp
je
mov
aaa
xor
adc
pop
dec
cmpsl
aam
sbb
sbb
jecxz
into
xor
lahf
fadd
fstps
xchg
sub
and
fisubs
mov
or
subl
push
cmp
mov
enter
dec
rcrl
in
dec
dec
xor
in
push
jmp
pop
shll
xor
push
ljmp
adc
mov
ss
iret
mov
xchg
shr
inc
aas
leave
das
bound
sti
xchg
sbb
dec
cmp
test
xchg
cmp
divb
leave
or
aad
sub
push
pop
js
jae
xchg
mov
arpl
mov
ljmp
xchg
xchg
xchg
xchg
fistps
xchg
cmp
and
stc
in
xor
data16
pusha
mov
or
cld
inc
loopne
add
sub
xchg
adcb
movsb
add
pop
xchg
xchg
xchg
lret
int
jg
jo
or
xchg
outsl
push
or
add
leave
jecxz
adc
sahf
imul
insb
jbe
push
or
das
dec
inc
push
push
loopne
xchg
enter
adc
mov
xlat
xchg
inc
outsb
adc
insl
dec
jmp
xor
mov
insb
add
loope
call
sub
adc
imul
sbb
out
loope
inc
testl
scas
shlb
aam
inc
mov
add
outsb
out
sub
sub
in
pop
sahf
add
sub
sub
mov
mov
dec
hlt
loop
leave
pop
xchg
push
cmp
insb
adc
inc
and
lds
dec
inc
loope
es
ds
mov
or
mov
fidivrl
movsb
mov
mov
imul
lcall
and
xor
mov
gs
push
jmp
loopne
clc
add
movlps
dec
cld
push
pop
or
das
lds
and
adc
mov
inc
into
mov
cmp
cmc
inc
out
sbb
mov
add
aas
dec
jp
add
cmpb
xor
push
lea
add
loope
xorl
aad
mov
sbb
mov
and
add
xor
jbe
fwait
mov
jnp
cmp
sbb
cmpsb
pop
dec
jne
xlat
daa
sar
fwait
xchg
lock
adc
adc
aaa
aas
movsl
sbbl
pop
xor
mov
jo
add
test
aas
shl
mov
xchg
add
sub
sbb
aad
int3
mov
aad
dec
push
cmpl
repnz
icebp
cwtl
mov
mov
insl
mov
push
mov
cwtl
jg
paddusw
or
jnp
pop
mov
fidivrs
ret
push
or
mov
xchg
inc
mov
xlat
cmp
int3
dec
popf
cmp
lods
adc
dec
cmpsb
xchg
and
pop
mov
mov
imul
test
xchg
inc
fistps
shl
lcall
rol
out
mov
push
insb
fwait
stos
sbb
adc
cmp
imul
roll
clc
inc
testl
or
mov
and
in
add
push
bound
pop
jb
cmp
js
pop
cmp
clc
push
movl
fiaddl
xchg
loopne
decb
in
rcll
adc
sti
cmp
pop
loop
popf
jmp
sbb
sub
icebp
or
cli
pop
push
dec
stos
jno
out
pop
cmp
xor
bound
lds
adc
ljmp
cmc
cmc
aam
lret
loop
pop
push
sbb
mov
call
inc
jae
jae
scas
imul
andl
cmp
mov
call
enter
mov
lds
lcall
shll
fisubrs
mov
repz
xchg
outsb
imul
je
push
test
std
js
fcoms
lea
iret
xchg
mov
or
mov
jbe
cli
pop
out
lret
clc
sbb
clc
dec
test
xlat
push
mov
insl
lahf
pop
test
sbb
or
pop
dec
jbe
jb
xchg
icebp
add
fidivrs
sbb
aas
xchg
lods
adc
cmpsl
or
arpl
fcompl
push
shlb
lods
std
xchg
dec
xor
cwtl
sub
adc
loopne
add
mov
test
xchg
dec
sbb
lods
iret
mov
mov
xorb
fisubrl
xchg
dec
daa
mov
enter
fistpll
sub
orl
add
data16
jmp
loope
std
xor
fstl
sbb
dec
mov
addr16
xchg
push
adc
shrl
cmp
add
and
jno
cmc
or
and
fildl
push
xlat
fistpl
dec
xor
das
mov
ret
sarb
stos
loopnew
mov
inc
cmc
gs
or
in
aam
add
mov
stos
jo
or
pop
ficompl
xor
mov
sub
insl
imul
dec
dec
adc
sarb
inc
cmp
push
leave
test
hlt
pushf
pop
xlat
mov
xlat
dec
leave
cs
pop
cli
pop
xchg
jmp
pop
popf
fildl
jg
js
or
inc
in
adc
clc
xlat
adc
sbb
aaa
inc
sub
rolb
sub
daa
mov
out
movsl
std
adc
pop
dec
jae
and
push
pop
leave
add
mov
sbb
repz
bound
xchg
in
and
lret
jae
insl
aam
sub
sti
push
push
adcl
mov
push
sub
dec
dec
das
jmp
jmp
xlat
push
jmp
jo
cmp
push
mov
sbb
adcb
push
loop
mov
addr16
adc
stos
cmp
cmpl
les
xchg
mov
fnstsw
dec
inc
imul
sub
mov
shlb
jp
push
mov
sbb
subb
sub
or
sbbb
dec
lods
into
pop
jno,pn
dec
pop
fdivrl
mov
arpl
call
clc
inc
mov
sub
or
fdiv
out
sbb
jo
hlt
inc
cwtl
cmp
add
fsubs
sarb
icebp
mov
xor
adc
mov
xchg
mov
ja
cs
adc
mov
xchg
in
out
aaa
fmull
loope
push
jns
loope
loop
pop
xor
pop
outsb
hlt
insl
jg
mov
shl
or
stos
push
jp
xchg
scas
dec
pmaxsw
in
xlat
or
dec
ret
pop
js
pop
mov
mov
jl
popa
outsl
add
inc
lahf
movsb
out
or
pushf
sbb
cmp
out
cli
test
mov
mov
stos
aaa
xchg
xor
sbb
hlt
sbb
hlt
push
fucomip
add
das
mov
imull
loope
sar
les
pusha
rol
and
sub
rorb
lahf
fsubrs
cs
call
loop
shlb
or
xchg
clc
adc
es
mov
xchg
jmp
dec
cmp
jp
test
push
int3
lock
mov
cmp
icebp
sti
int
dec
sarb
mov
pop
cltd
imul
inc
jbe
cltd
enter
data16
aad
push
adc
daa
sub
xchg
out
call
pop
les
in
xor
and
or
and
pop
push
mov
rorl
pusha
mov
lea
sub
xchg
loope
mov
sbb
daa
lods
sub
nop
and
cld
xor
or
lods
sub
loopne
mov
mov
ror
cmp
out
and
push
repnz
imul
add
push
mov
out
xchg
stos
shl
mov
aaa
jg
cmpsl
mov
pop
stos
push
shll
fldl
into
push
adc
push
adc
adc
fnstsw
fbstp
add
jg
pop
push
aaa
or
ljmp
shlb
or
idivl
jge
lahf
adc
lcall
testb
aas
insb
mov
rolb
lock
les
outsl
pop
pop
stos
clc
stos
inc
mov
cwtl
cmp
mov
jae
adc
pusha
clc
call
xchg
dec
pusha
sahf
or
inc
or
pop
dec
add
dec
cmp
mov
ret
subl
repnz
push
mov
xchg
push
std
ss
ret
out
mov
pop
enter
add
mov
xor
hlt
hlt
icebp
mov
cmpsl
xchg
add
jl
adc
push
addr16
addb
pushf
scas
inc
xchg
push
nop
ret
xchg
xchg
scas
decl
mov
icebp
add
pop
loopne
sub
je
or
jnp
xlat
scas
mov
insl
lahf
aad
mov
movsb
jne
or
movsb
ljmp
cmpsl
pop
push
outsb
mov
jae
in
aam
fs
rcll
jns
insl
test
mov
cmpsb
jbe
mov
jne
loop
adc
test
mov
xchg
cmp
sbb
nop
enter
push
mov
sahf
in
mov
jbe
ss
icebp
filds
ja
scas
cmp
les
popf
sub
lds
sbb
out
inc
cld
sbb
mov
ja
orl
mov
icebp
fistpl
inc
add
pop
mov
int3
and
xor
inc
mov
jbe
pop
es
mov
mov
cmp
or
popa
or
aad
cmp
or
pop
in
lods
imul
jae
gs
cwtl
adc
cmpsb
xlat
cltd
enter
incb
lahf
into
in
push
into
fistps
mov
filds
out
jo
test
xchg
icebp
in
test
and
mov
adc
xchg
in
xor
sbb
and
sbb
xlat
or
out
fwait
retw
dec
cli
mov
mov
push
pop
add
shll
jmp
lds
xlat
xchg
inc
pop
stos
mov
ret
inc
dec
fstl
jns
loopne
cmp
popl
jne
xor
mov
cmpl
icebp
mov
pop
cmc
call
lods
lock
mov
outsl
sub
xchg
cmp
sti
roll
mov
inc
iret
inc
ret
dec
jle
mov
dec
pusha
aam
xchg
sub
mov
repz
movsl
dec
ljmp
outsb
sbb
mov
jp
mov
dec
push
setge
fisubrs
xchg
pop
jnp
or
cmpl
sti
fidivs
pop
mov
xchg
or
stos
sbb
xor
int3
cmp
sbb
xchg
mov
ljmp
mov
mov
imul
push
fidivs
jo
xchg
and
lret
arpl
hlt
push
ret
aaa
cmp
mov
fdivp
test
sub
testb
ficompl
jmp
pop
xor
pop
mov
sbb
mov
mov
mov
shlb
pop
push
dec
inc
mov
rol
dec
adc
add
dec
pop
iret
into
xor
dec
stc
into
sti
stos
adc
push
ljmp
aam
mov
inc
andb
sbb
pop
arpl
cmpsb
mov
adcb
popa
out
cwtl
mov
cltd
scas
dec
aas
inc
fwait
mov
xchg
sbb
xchg
or
in
movsb
pop
mov
inc
jg
mov
cmc
cmpb
mov
imul
adc
push
push
stc
xor
test
pop
mov
mov
inc
flds
mov
nop
fpatan
ffree
push
fcoml
std
adc
arpl
push
fnstcw
adc
clc
lret
movsl
es
mov
adc
ds
push
in
lock
cs
in
push
and
mov
leave
pop
fdiv
fbld
ret
ds
jmp
cmp
loope
fstpt
outsl
mov
ja
xchg
fucom
stc
addl
pop
push
adc
add
push
test
fsubrs
adc
dec
dec
fisubs
mov
xchg
mul
movsb
or
cwtl
inc
fs
ss
xor
xchg
xor
jnp
sti
adcb
xlat
mov
loopne
cmpsl
cld
lock
inc
xor
sbb
inc
mov
adc
jmp
sarb
test
sarb
stc
notb
out
mov
js
mov
subl
fwait
into
mov
fwait
pop
mov
mov
mov
mov
test
es
mov
pop
cld
aaa
xchg
push
punpcklbw
aad
scas
mov
adc
add
xor
jnp
mov
sub
mov
mov
pusha
inc
lcall
insb
loop
sarl
sub
mov
and
jo
jno
cmc
jl
ficompl
mov
loop
jae
repz
nop
push
cmp
addr16
xchg
and
test
hlt
lcall
pmaxub
push
fstpl
mov
or
sbb
loop
pusha
lods
vmovdqu
xchg
jl
pop
jns
hlt
push
leave
mov
enter
pop
repnz
or
sub
xchg
cmpl
stos
jge
jg
sbb
ja
mov
push
ffreep
fcmovbe
mov
scas
mov
dec
lea
fsubrs
cmp
ret
roll
xchg
cmpsb
or
orb
cmpb
dec
push
fadd
sub
ret
jg
dec
sbb
inc
gs
push
out
jb
out
inc
push
xlat
lret
ljmp
loopne
ret
mov
cmp
out
fidivrs
mov
add
pop
mov
pop
lock
xor
mov
sub
les
in
leave
mov
fistl
dec
lret
insb
sarl
mov
mov
je
sub
ret
mov
jae
adc
mov
std
mov
push
notl
mov
mov
js
sub
and
mov
sti
cmc
inc
lods
lahf
mov
mov
dec
out
enter
add
cli
cmp
hlt
xor
or
loop
add
cld
int3
loop
and
aam
and
fs
mov
mov
sub
push
dec
out
inc
push
xchg
jne
jo
outsl
sub
mov
pushf
in
movsl
push
arpl
jb
aaa
popf
iret
jge
pop
test
push
pop
sub
jp
mov
insl
sub
cmp
inc
call
xor
push
sbb
fdivrs
xlat
into
xchg
jecxz
js
sbb
jl
lcall
out
das
lods
fs
orb
mov
add
mov
push
and
pop
mov
sahf
mov
divb
stc
jecxz
ret
xor
call
dec
movsb
fadds
js
jb
cs
xor
xor
cmpsb
and
fnstcw
test
pushf
push
dec
stos
pop
pop
jbe
and
push
jle
sarb
jl
inc
add
inc
adc
repnz
arpl
popf
sti
imul
or
pop
mov
lret
mov
mov
nop
xchg
xchg
sbb
icebp
sub
sbb
arpl
movq
inc
mov
sub
dec
test
xchg
mov
pop
fimull
aaa
jnp
sbb
movsb
pusha
mov
fcmovnbe
and
imul
call
stos
add
test
or
xor
cmpsl
test
cltd
add
test
sbb
sbb
mov
pusha
push
mov
xchg
bound
ds
xor
clc
mov
or
rorl
repnz
stc
jnp
out
les
and
mov
mov
clc
into
xchg
mov
xchg
jp
pop
in
aaa
xor
push
dec
inc
daa
mov
add
outsb
orb
shll
jecxz
imul
mov
mov
and
aas
loop
in
xor
mov
stc
mov
aad
inc
adc
xchg
jl
pop
loope
cmpsl
loop
scas
je
push
test
repnz
jbe
fs
jne
pop
push
pop
stc
push
int
stc
jp
testl
dec
jge
les
mov
jecxz
in
and
nop
xchg
fs
icebp
mov
jbe
jl
and
or
cli
sub
addb
jns
daa
imul
mov
mov
sub
inc
cld
push
aaa
hlt
sbb
push
inc
xor
pusha
adc
test
xchg
push
sti
adc
jae
loopne
xor
pop
hlt
sub
mov
scas
dec
fildll
or
fisttps
mov
pop
jae
sub
mov
repnz
cmp
std
inc
in
aas
push
subl
adc
test
and
mov
and
loop
or
into
aad
rcrl
aaa
mov
push
xor
and
dec
imul
jg
fsubrs
fneni(8087
out
xchg
dec
lods
ds
xlat
xor
adcl
mov
shrl
ficoms
jb
hlt
aad
das
push
push
pusha
sbb
cltd
popa
dec
sbb
test
adc
lret
cs
ret
fildll
xchg
mov
xor
aad
das
fidivrs
add
adc
mov
punpckhwd
add
aas
addr16
push
xchg
imul
out
jmp
out
adc
pop
lcall
mov
cltd
gs
jnp
push
mov
mov
mov
inc
out
outsb
popa
add
shll
sbb
inc
cmc
test
notb
je
testl
js
adc
dec
leave
add
adc
jne
std
test
mov
ss
cltd
mov
js
sahf
dec
or
test
push
push
sub
aam
push
push
dec
popa
cmpsb
lcall
pop
outsl
or
push
in
arpl
or
out
sub
sbb
fmulp
call
dec
cmc
push
jmp
nop
fisubrs
inc
js
hlt
sahf
mov
or
rorb
cltd
jle
push
or
lods
aad
xlat
stos
push
inc
pop
dec
jmp
mov
jne
inc
out
pop
scas
mov
adc
and
xor
mov
sub
sub
dec
aam
bound
jnp
inc
pop
je
mov
sbb
aam
cmpsb
nop
dec
icebp
mov
bound
jg
dec
adc
ljmp
andl
ss
xchg
outsb
push
lock
sbb
aam
pop
inc
adc
push
xor
dec
ljmp
insl
aas
xor
aas
hlt
sub
stos
or
and
mov
push
mov
ds
lock
mov
add
push
xchg
sti
sub
xor
inc
ficomps
xor
sub
lret
daa
mov
inc
inc
mov
dec
add
add
fcomps
add
adc
fisubl
enter
push
out
pmullw
push
inc
mov
pop
inc
dec
inc
je
fstl
dec
arpl
lock
cli
mov
sub
push
dec
sub
fldt
je
xor
cmp
push
adc
sbb
lret
pusha
shlb
es
movsb
fcomps
test
mov
in
push
add
cmp
push
push
or
lret
jmp
fldl
cmpsl
scas
out
mull
or
cmp
out
out
dec
cld
inc
ss
dec
push
cld
add
adc
jns
sarl
or
mov
mov
pop
mov
es
fsubs
scas
aas
cld
fwait
sub
das
lcall
push
in
leave
out
mov
mov
pop
movsb
mov
icebp
addr16
mov
scas
jge
rolb
sub
jl
adc
adc
adc
push
adc
cmp
lcall
xor
xchg
mov
dec
insl
aad
cmp
cs
addr16
push
xchg
insl
leave
in
mov
mov
sbb
xchg
push
fistl
sub
orb
xor
cmp
inc
adc
or
xchg
popa
pop
mov
adc
and
or
ljmp
push
pop
pop
mov
call
dec
mov
mov
aaa
imul
pop
fisubrl
mov
adc
lahf
sbb
mov
push
dec
in
dec
aam
sahf
lret
dec
in
inc
int3
add
repnz
fidivrs
stos
test
fucom
adc
sbb
rcrb
push
repz
jge
test
xor
mov
shlb
mov
xchg
push
mov
mov
sbb
push
lret
mov
shll
stos
rcll
sub
loop
mov
push
mov
mov
or
inc
lods
int3
clc
xchg
pop
das
push
cmpsl
jmp
push
mov
leave
lods
stos
leave
pop
outsl
cmp
int
rcll
pusha
loopne
cmpl
imul
xor
mov
adc
fs
inc
inc
adc
aad
dec
inc
incl
inc
pop
fistps
mov
xor
ret
add
push
movsl
mov
es
pop
test
mov
insl
inc
imul
stos
inc
imul
rol
or
or
shrb
fwait
push
fwait
mov
pop
sbb
loopne
pop
in
pop
xor
test
mov
xchg
xchg
pop
ja
sub
hlt
aam
jge
into
call
cld
shlb
adc
mov
push
xchg
mov
inc
in
and
add
cmp
mov
dec
cltd
jp
sbb
inc
adc
xorl
add
xor
cmp
es
mov
hlt
test
xchg
push
test
mov
mov
add
add
add
fcompl
dec
push
dec
and
add
fwait
mov
push
pop
push
jecxz
sarl
lahf
or
sahf
mov
add
pop
jb
inc
lahf
push
push
adc
dec
inc
inc
xchg
ja
xchg
sub
inc
mov
xor
push
inc
cmp
fcmovne
dec
jp
cmpsl
pop
cs
mov
push
lcall
jle
aas
ljmp
sbb
out
test
insb
xor
sbb
push
inc
adc
test
nop
lret
or
push
loope
out
aad
je
mov
or
xchg
aam
jle
dec
les
jo
or
push
xchg
into
int
call
out
data16
mov
dec
fistl
pop
add
mov
repnz
add
jae
fwait
xchg
add
cmp
imul
dec
xor
es
cwtl
addr16
clc
pop
mov
popf
lock
js
inc
jo
cmp
mov
stos
lcall
shrb
dec
mov
mov
es
test
mov
xor
pop
stos
push
mov
roll
pop
fwait
lret
insl
lret
movsl
or
pop
lds
dec
scas
iret
push
add
dec
mov
pop
push
pushf
sub
or
jns
xor
sti
ficoml
dec
add
xor
cli
sub
inc
mov
xchg
pop
and
xchg
cwtl
inc
jmp
sub
fst
sbb
xchg
cwtl
add
testb
stos
jle
add
add
cli
fildll
xchg
dec
cmpsl
loop
dec
xchg
xchg
lea
or
sub
xor
adc
mov
inc
push
lret
in
mov
sti
insl
into
shrb
lock
mov
sbb
or
out
cmc
adc
lods
sbb
or
jmp
inc
xor
cwtl
mov
inc
hlt
stos
outsl
mov
movsb
outsb
dec
sub
mov
fstpl
jp
add
xchg
popf
stos
mov
cmp
jp
pusha
push
mov
xor
ljmp
xor
push
pop
out
jp
inc
in
insl
jge
mov
fistl
fadds
add
push
inc
cwtl
adc
and
push
scas
cmpsb
les
or
cmpsl
mov
lods
shl
mov
ret
ds
aam
push
xchg
pop
jecxz
scas
dec
dec
jbe
or
add
pop
test
dec
out
jecxz
in
add
nop
add
adc
mov
jecxz
mov
mov
pushf
push
mov
sbb
and
aad
mov
and
cmpl
fs
roll
out
loope
push
or
les
cmc
lcall
and
repnz
push
jmp
cmpsl
and
scas
xlat
push
and
mov
ljmp
sahf
and
sarb
push
dec
cmp
cmp
add
pop
fmuls
push
mov
in
in
shll
lods
loopne
lods
fucomi
adc
inc
lock
dec
sbb
out
movsb
push
xor
imul
xchg
ret
jl
push
dec
adc
testb
mov
push
rclb
jle
rclb
out
sahf
lret
int3
adc
shlb
sub
fnstenv
movsl
out
mov
movb
sub
inc
pop
push
adc
cmp
push
cmp
adc
in
mov
enter
or
pop
cmpsl
test
jbe
in
jmp
cmp
test
ds
dec
adc
jp
cltd
inc
insb
iret
pop
mov
les
cltd
cli
cmpsl
jp
sub
push
pop
je
lea
xchg
jns
cmpl
jmp
hlt
and
push
and
cltd
pop
adc
xor
adc
pop
push
insb
loopne
fcos
sub
mov
pop
ljmp
cmp
ja
push
mov
inc
sbb
in
inc
daa
lahf
insl
pusha
xchg
mov
ret
mov
iret
cli
ret
pop
ja
push
add
stos
adc
jmp
ret
jnp
push
in
das
mov
aaa
mov
bound
push
and
mov
jb,pn
out
scas
stos
mov
outsl
mov
adc
out
ja
nop
xchg
lcall
mov
testl
inc
fs
pop
cwtl
jns
sbb
aas
push
jo
test
cmp
add
fs
jbe
pop
add
sub
stos
cmp
test
cmp
xchg
bound
pop
out
jp
je
ss
cmpsl
aas
rolb
paddw
in
aaa
mov
and
push
mov
ret
pop
and
in
adc
cmpsb
data16
pop
xchg
xchg
adc
sbb
outsb
cmp
mov
imul
or
in
lods
mov
pop
pop
sahf
ret
xchg
mov
in
pop
cli
lea
lds
shlb
nop
or
or
adc
int3
movsl
stos
clc
lea
jns
dec
cwtl
repnz
int
pop
orb
xchg
sti
test
pushf
int
and
gs
mov
mov
mov
jae
fwait
mov
test
call
or
lock
xorb
mov
inc
mov
outsl
push
jmp
cmp
push
imul
cli
or
push
fmuls
pop
fwait
popa
dec
dec
xor
in
in
pop
xchg
push
ret
dec
cmp
inc
xor
fisubs
fists
in
mov
sarb
rcrb
popa
popa
nop
dec
cltd
mov
lods
jmp
mov
les
scas
out
cmp
cmc
pushf
jns
dec
fwait
xchg
mov
jb
pop
jl
mov
inc
xchg
or
ja
movswl
lods
mov
enter
das
lahf
fidivs
dec
out
mov
sbb
dec
lret
mov
std
jg
mov
in
lret
jo
movsb
into
mov
sbbl
aaa
pop
xchg
hlt
adc
popf
in
leave
and
test
sub
mov
fimull
sub
mov
movsl
lock
repz
push
push
dec
orl
lea
pop
xchg
xchg
xchg
and
into
xchg
divl
push
into
jno
sbb
jg
pop
scas
cmp
jge
adc
add
add
and
inc
adc
out
push
add
leave
pop
mov
dec
cli
add
nop
adc
push
or
or
cmp
adc
mov
loopne
dec
sti
xchg
or
inc
inc
fcoml
mov
mov
sbb
std
jmp
jg
fisubrl
lock
ja
adc
mov
mov
dec
mov
jmp
shlb
test
movsb
movsb
cmp
dec
into
lret
or
and
mov
leave
sub
fwait
adc
xor
pop
dec
jmp
filds
push
jb
dec
addb
and
jp
inc
gs
rcl
adc
fucom
dec
stos
cmp
ja
in
adc
ret
shll
push
insl
sahf
mov
xchg
test
sbb
cmpb
out
xchg
mov
jl
inc
and
xlat
sub
mov
dec
scas
ds
xor
cmpsl
push
pop
add
repz
rolb
fldl
cmpsb
cmp
dec
xor
mov
into
jnp
sti
xor
cmp
dec
push
ljmp
mov
fdivrs
enter
or
and
mov
pop
ds
cmp
hlt
iret
xchg
dec
stc
jno
sub
sub
arpl
je
and
push
js
movsl
xor
dec
xor
jg
fnsave
cli
jo
jb
in
pushf
fisubrs
cmp
add
pop
sbb
adc
add
imul
jnp
jbe
into
mov
xor
add
adc
jns
into
pop
test
int3
rcrl
lret
xchg
les
mov
or
xchg
out
mov
xor
jl
aaa
xchg
fwait
xchg
add
je
imul
ljmp
or
inc
inc
lahf
push
outsl
adc
icebp
jg
xchg
xchg
xchg
dec
sbb
nop
aaa
rclb
fs
add
fcmovb
mov
or
and
cwtl
sbbl
xor
mov
or
aad
inc
pop
shll
mov
pop
push
add
pop
cmpsb
call
lock
pop
push
inc
mov
xlat
xchg
fcomi
inc
adc
or
lret
xlat
or
mov
outsl
int3
pop
loope
aad
xchg
or
shlb
cwtl
mov
pop
xchg
fadds
mov
pushf
sub
in
test
adcb
inc
push
pop
push
sub
add
lods
lock
insb
cwtl
sbb
sbb
mov
das
or
and
inc
ds
mov
inc
inc
jecxz
mov
hlt
sbb
fnstsw
mov
cmp
test
mov
lahf
add
add
adc
fld
scas
sbb
adc
cmc
mov
fmull
aad
stos
push
adc
lcall
arpl
scas
jle
lods
dec
movsl
inc
cld
push
comiss
scas
int
rcll
cltd
push
outsl
sbb
or
je
cmc
lahf
mov
mov
imul
xchg
lods
testl
xorl
mov
cmc
dec
filds
mov
jb
cli
idiv
mov
iret
icebp
inc
pop
bound
loope
cwtl
bound
xchg
repnz
mov
out
aam
scas
jbe
mov
cli
loop
fnstcw
cld
stc
mov
fisubl
mov
mov
in
fmull
mov
test
lahf
cmp
mov
cmp
sub
out
dec
pusha
dec
call
sbb
lods
mov
ds
imul
repz
push
out
xchg
lret
test
stos
test
stc
aad
cwtl
cmp
jl
push
sahf
in
push
inc
xchg
scas
sbb
xor
outsb
mov
and
push
push
jbe
mov
mov
popf
add
xor
mov
test
mov
xchg
movsl
out
mov
movsl
movsl
mov
jne
ret
lahf
dec
and
insl
xchg
mov
push
outsb
inc
movsb
mov
gs
lds
jno
pop
dec
lcall
sub
xor
outsb
shr
pop
faddl
add
dec
pop
rorl
daa
jb
lret
sub
and
divb
stos
fwait
dec
cmpsb
out
pop
push
aas
icebp
jne
adc
outsl
pop
in
outsl
add
shrb
dec
test
xchg
ds
dec
lahf
push
xchg
push
or
cld
mov
xor
and
pop
shl
mov
sbb
xlat
or
pushf
and
push
scas
and
enter
out
pop
mov
sbb
xchg
mov
rcrl
jmp
das
out
bound
dec
out
aas
xor
pop
or
inc
test
mov
and
rcrl
lret
cmp
mov
mov
pop
or
mov
adc
scas
sbb
nop
mov
pop
nop
jle
cs
lods
and
js
push
pop
adc
imul
jbe
cld
cltd
mov
pop
test
sbb
pop
inc
cmp
cli
ret
aad
out
mov
jns
movsl
stc
dec
and
pop
add
insl
movsl
cmp
cmpl
mov
test
push
push
jns
addr16
inc
push
packsswb
xor
fcmovb
pop
sbb
mov
out
mov
xor
imul
add
xor
scas
das
aas
fists
add
pop
sub
mov
subb
fsubr
insb
bound
cmp
push
mov
cld
pop
dec
adc
cltd
and
dec
fdivr
and
sub
xor
pop
add
arpl
and
test
sub
push
shr
cmp
add
pop
lea
loop
lods
jl
sub
cmp
imul
pop
inc
inc
push
hlt
jg
xchg
inc
cli
insl
mov
jge
daa
out
sub
out
stos
lcall
stos
jno
or
push
lods
cld
pop
pop
push
in
sbb
mov
stos
mov
les
ds
sub
faddl
sbb
stos
in
xchg
jnp
mov
inc
mov
addl
ffree
leave
dec
dec
jg
jg
push
sbb
loope
xor
pop
in
mov
loopne
sub
pop
inc
cs
push
cli
jne
xlat
cmpl
idiv
out
mov
push
enter
test
xchg
push
mov
pop
cmp
push
adc
sahf
push
dec
das
test
sbb
jmp
lock
cmp
push
in
call
ljmp
jae
shrl
ja
mov
dec
hlt
in
sbb
rorl
push
std
idiv
cmc
hlt
movsb
jae
adc
inc
xchg
test
stos
or
dec
inc
mov
inc
xchg
dec
aaa
mov
lods
jne
cs
test
sahf
inc
jp
sbb
jb
js
push
pop
mov
xchg
add
cmp
jno
nop
inc
dec
push
or
sub
and
sub
mov
dec
mov
rorb
outsb
mov
inc
sbb
mov
jbe
js
ljmp
in
int
pop
adc
jne
out
repz
or
mov
jo
pop
jg
mov
add
and
fcompl
pop
or
xchg
rcrb
dec
aaa
mov
xor
cltd
and
mov
xor
out
pop
push
inc
xchg
int
xor
lods
mov
inc
bound
idiv
nop
jp
mov
dec
xchg
mov
mov
xchg
jecxz
push
pop
clc
nop
dec
int3
mov
ds
ds
mov
test
xchg
in
arpl
xlat
dec
sahf
out
or
leave
lret
addl
adc
cmc
cs
jmp
mov
aam
outsl
adc
pop
jmp
ficomps
push
sbb
mov
cmpsb
pop
mov
dec
jmp
in
daa
pop
or
mov
rolb
jnp
xor
sbb
aad
mov
gs
jnp
aam
jne
and
fisubrs
lods
sahf
push
dec
cmp
sbb
dec
adc
std
jmp
cmp
push
int
jnp
repz
jbe
hlt
cs
push
in
pop
test
neg
mov
lods
mov
in
popa
sbb
scas
mov
lret
xor
adc
adc
inc
stc
cmc
sbb
subb
pushf
mov
fildll
lret
add
mov
jbe
notl
pop
rcr
rcll
add
idivl
aam
sahf
cmp
movsb
push
inc
scas
mov
shll
shlb
rclb
xor
mov
lcall
fnstsw
xor
movsb
xor
jmp
mov
push
int3
dec
mov
add
icebp
popf
cwtl
loope
mov
int
xor
aad
xlat
sbb
or
xor
xor
mov
incl
push
jb
ds
push
or
lods
sbb
enter
lods
ficomps
scas
mov
int3
dec
or
inc
out
bound
jnp
lret
imul
ja
les
nop
inc
testl
fcoms
incl
mov
cltd
test
dec
cld
out
xchg
xchg
es
mov
dec
es
xlat
out
inc
shr
lods
add
adc
into
mov
lea
pusha
cli
dec
lods
mov
pusha
movzbl
sbbb
lret
add
subb
ret
add
ret
pop
test
es
jmp
mov
add
xor
mov
add
jmp
xor
fldcw
sub
and
mov
mov
stc
sbb
fs
mov
popf
imul
test
outsb
xchg
imul
rolb
nop
and
mov
pop
pop
negb
aad
lds
cmp
psllq
lret
add
addb
ds
jp
and
push
dec
adc
pop
dec
in
lea
xchg
pop
adc
push
int
dec
xor
or
cmp
adc
inc
jp
add
fcom
gs
xor
add
sub
pop
mov
pop
add
and
ja
xor
ss
push
inc
cmp
mov
mov
sbb
fcomps
mov
pushf
mov
scas
sbb
repnz
dec
mull
idiv
xor
and
test
pop
push
mov
ja
and
repz
fwait
mov
push
aam
nop
scas
sub
enter
bound
jge
fwait
xor
sub
ja
jae
dec
push
push
not
jmp
in
inc
out
jbe
out
sub
adc
hlt
pop
outsl
in
push
in
sbb
sbb
pusha
lods
xor
xchg
ja
jmp
or
xchg
hlt
ss
mov
out
out
inc
popa
movsl
xchg
push
add
add
fiaddl
and
loopne
mov
xchg
xchg
mov
scas
sub
jmp
lock
and
mov
jge
pop
push
cmpsb
pusha
test
mov
add
push
lret
mov
lret
out
cli
push
mov
movb
push
outsb
add
pop
mov
pop
add
icebp
stos
subl
ret
lods
xchg
popf
loope
jg
stos
ret
sbb
clc
ljmp
pusha
stos
mov
mov
int
iret
jbe
scas
or
cmc
sbb
xchg
push
std
add
pop
push
fcompl
aaa
mov
inc
in
out
dec
scas
mov
sub
mov
in
pop
rcr
orl
dec
inc
scas
mov
sub
pop
lret
mov
cli
mov
jmp
jne
cwtl
add
and
clc
out
imul
adc
add
ds
push
decl
rol
jl
test
xor
inc
mov
stc
pusha
stos
inc
sub
jo
mov
fldt
and
xchg
add
rcrl
cs
in
loope
xchg
push
inc
jg
adc
fcomps
xchg
aad
sub
imul
scas
xchg
scas
cs
pop
bound
inc
mov
lods
push
das
mov
sub
int
fldl
pop
insb
js
adc
nop
sbb
aas
mov
lods
loopne
mov
sbb
jle
cmc
lea
xchg
hlt
ss
pusha
xchg
xlat
sub
xor
sbb
jnp
add
fmulp
outsb
adc
sbb
xor
out
or
add
mov
fldt
jb
sub
mov
scas
hlt
sarb
test
push
test
pop
popf
sahf
hlt
addl
dec
push
insl
in
xchg
les
mov
sub
sbb
arpl
mov
fs
pusha
inc
fistpll
lcall
jno
dec
outsb
pop
adc
stos
enter
jmp
scas
dec
mov
adc
int
jns
xor
scas
ret
and
lcall
xlat
dec
call
cmc
adc
push
xchg
orl
out
jl
sub
test
sbbb
das
xchg
mov
sub
fistps
and
loope
ret
cmpsb
xor
xchg
cltd
pusha
and
jo
movsb
xor
fwait
das
fistpll
push
mov
shrb
lods
pop
cmp
mov
bound
and
dec
jnp
clc
inc
cmp
mov
fwait
scas
adcl
jp
ljmp
loope
cltd
ja
lods
test
xchg
movsb
adc
nop
push
icebp
daa
adc
or
adc
xor
loopne
mov
cwtl
popf
jecxz
cs
xchg
cmpsl
dec
mov
adc
push
clc
dec
xor
adc
cmpsb
push
dec
rorb
inc
or
int3
inc
push
nop
hlt
jns
retw
lods
jle
mov
out
adc
shlb
jo
push
sub
lret
xlat
fadd
pushf
shll
push
jbe
mov
push
cld
imulb
xor
fisttpll
mov
ret
cmp
cmp
test
into
mov
mov
imul
push
roll
mov
fldenv
sub
aaa
iret
out
xor
push
aam
adc
cmpsb
sub
jge
imul
xor
inc
fcmovnb
cmovns
xchg
sbb
mov
add
sbb
loope
rolb
sahf
imul
popa
js
aam
rorl
sbb
xor
cmp
pop
xchg
push
xor
jl
loope
sbb
xchg
mov
lea
scas
jl
sbb
xor
lds
outsb
shll
xchg
fcoml
in
ret
cmp
push
cli
and
cwtl
sahf
jle
lahf
xchg
sub
xor
test
loop
push
leave
faddl
mov
imul
push
or
fstp
fwait
and
pop
pop
shll
jns
xchg
and
test
xchg
cltd
or
ja
int
scas
int3
mov
fstl
repnz
add
cmpsl
or
insl
insb
loopne
frstor
xchg
jmp
mov
add
imulb
xor
int
into
sub
and
mov
enter
pop
les
movb
mov
adc
nop
or
xor
mov
jne
jne
push
or
xor
fdivrl
mov
push
jmp
test
and
adc
cmpsb
mov
arpl
imul
or
mov
insl
mov
pop
adc
subb
sub
mov
jb
sbb
xchg
pop
sbb
pop
pop
mov
addr16
push
fldl
cmp
jno
mov
cwtl
or
pop
or
aad
push
aad
push
mov
orl
sub
mov
mov
dec
int3
adcl
es
lock
lods
jae
lahf
lahf
push
sbb
popf
add
into
cmp
data16
sub
inc
movsl
imul
mov
xchg
in
roll
cmp
ficoms
pop
cmp
inc
xor
in
dec
push
mov
nop
dec
push
pop
mov
inc
pop
push
dec
or
rcll
push
push
and
mov
jo
sub
lea
repz
mov
dec
ret
stos
and
or
dec
sub
or
cmc
test
add
daa
outsb
inc
inc
in
lret
or
mov
and
rolb
xor
inc
pop
push
scas
push
sub
repnz
gs
cmpsl
cmpsb
mov
xor
xchg
arpl
mov
dec
inc
sbb
outsb
mov
scas
sub
cwtl
push
daa
arpl
pop
pop
adc
into
dec
and
push
pushf
push
rolb
scas
jae
pop
test
or
aad
push
fsubs
push
sbbb
xor
ret
push
mov
bound
adc
sub
mov
jae
adc
xor
sbb
mov
pop
mov
cmp
das
push
insb
aas
jbe
mov
inc
push
lods
or
pop
testb
inc
ret
inc
mov
outsb
out
dec
push
and
adc
jl
sbb
out
mov
insb
xor
gs
or
hlt
sub
shrb
ss
fidivrl
jbe
inc
subl
aas
or
out
and
jo
stos
jg
mov
cmp
adc
lret
xor
sbb
mov
inc
pop
jbe
and
ljmp
lods
dec
sarl
pop
std
sbb
add
mov
data16
daa
mov
adc
xchg
and
fcomip
xchg
sahf
xchg
insb
outsl
stos
insb
jbe
inc
mov
movsb
shrl
in
int3
push
je
push
push
dec
inc
cmp
jb
xchg
cmpsl
imul
cwtl
lods
cs
idivb
adc
pop
repz
push
arpl
out
movl
mov
push
inc
mov
mov
fwait
rorb
xchg
das
jnp
xlat
push
in
fdivr
int
push
add
xchg
push
xchg
jmp
inc
lret
sbb
fsubl
repz
push
hlt
push
mov
lret
jg
cmp
rorb
test
cltd
jns
xchg
jecxz
testl
pop
dec
xchg
jmp
fbld
xchg
mov
ret
cmp
out
aas
ret
sbb
out
cltd
mov
lods
repz
pop
mov
orb
inc
int
loopne
sbb
mov
pop
and
lret
cmpl
fistl
daa
mov
sbb
adc
ja
fidivrs
shl
rorb
fstps
cmp
lods
movsl
divl
cmp
inc
lods
inc
pushf
gs
dec
arpl
dec
and
and
or
stos
les
add
inc
push
popl
inc
push
shr
sbb
jno
data16
pop
xchg
jg
xor
jo
and
dec
jae
or
pop
pminub
mov
push
scas
lods
fwait
xor
adc
mov
fadd
cli
dec
dec
cs
mov
mov
sub
shlb
mov
ds
enter
push
ja
stos
push
cmp
js
dec
addr16
xchg
inc
xor
jg
lahf
cmpsb
xchg
es
push
push
cld
jmp
pop
adc
jnp
inc
lea
mov
sbb
inc
das
in
adc
rorb
mov
icebp
nop
bound
xchg
or
mov
into
jno
ja
das
mov
xor
pop
or
loopne
lahf
mov
in
add
aas
outsl
imul
repnz
dec
fwait
pop
or
xor
sub
xlat
sbb
mov
mov
inc
pushf
or
and
shl
sbb
mov
js
sub
lret
adc
jnp
jno
pop
loope
in
outsb
xchg
iret
xor
std
mov
aam
push
subl
test
mov
cs
cwtl
xchg
dec
lock
adc
cltd
push
inc
loope
or
or
cmp
add
shlb
ss
fucomp
jbe
ss
pop
xchg
and
int3
fcomip
cmpsl
adcl
mov
lock
mov
movsb
loop
lret
or
stos
enter
test
shl
mov
rcl
lds
mov
out
adc
inc
cli
leave
imul
cli
loop
sbb
cs
mov
jge
movsb
sbb
fstl
inc
mov
add
adc
rcrb
pop
and
insl
lret
mov
dec
nop
outsb
mov
out
out
pop
or
lcall
jnp
jmp
jg
leave
mov
jns
js
pop
cltd
inc
insl
iret
dec
sahf
sbb
nop
into
xchg
adc
stos
xor
inc
lea
mov
sbb
pushf
cmp
gs
add
push
adc
xorl
bound
sub
fwait
sysret
pop
rcr
sbb
in
out
xchg
dec
shll
cmp
xchg
push
sbb
cmpsb
push
jmp
lcall
add
mov
xchg
sub
jne
mov
sbb
inc
and
mov
pop
mov
mov
sbb
sub
push
adc
push
or
pop
out
jmp
inc
adc
insb
cli
inc
jnp
movsl
jmp
test
pushf
xor
mov
mov
movsb
sahf
mov
dec
out
arpl
mov
mov
mov
dec
int3
xor
ret
aam
push
push
pop
pop
cli
test
mov
cmp
sbb
fwait
adc
add
mov
fldl
mov
ret
pop
xchg
jge
mov
push
xor
cmpsb
leave
shrl
adc
mov
dec
or
jnp
ror
icebp
adc
push
loope
push
xor
mov
rorl
int3
mov
imul
lret
out
int
dec
iret
adc
int3
popf
pop
inc
inc
lods
mov
imul
mov
lahf
push
shll
mov
or
dec
pop
or
mov
mov
idivl
call
andb
int
iret
sub
push
inc
jmp
sub
xchg
rcr
jb
mov
and
add
mov
std
arpl
sub
in
and
xchg
fdivp
pop
sti
dec
add
xchg
shr
or
xor
repnz
lret
stos
and
cs
imul
out
ret
xchg
cmp
inc
mov
aas
adc
or
push
inc
jns
jmpw
in
xchg
jmp
jb
inc
lret
stos
outsb
nop
fists
je
pop
push
cli
leave
cld
in
sub
ljmp
pop
iret
ret
or
roll
adc
cmp
cmovo
pop
dec
add
xchg
adc
add
cmp
repnz
sbb
and
popf
scas
xchg
ror
inc
add
dec
mov
inc
or
out
mov
cmpsb
dec
sbb
fcompl
sub
les
mov
aaa
mov
and
push
popf
mov
inc
mov
jmp
pop
in
jle
js
sub
jge
mov
in
popa
loope
mov
mov
push
adc
push
cmc
dec
add
fnstsw
in
inc
shlb
addl
arpl
lret
movsb
pop
addb
shrb
scas
out
fisttps
sbbb
addr16
mov
shlb
xchg
mov
test
fsubl
jl
mov
inc
mov
mov
xchg
mov
or
xchg
jne
outsl
lods
bound
addr16
lret
jge
mov
scas
fldl2e
mov
call
imul
loope
mov
loop
dec
out
iret
mov
and
filds
cmp
xor
add
jl
cmpsl
bound
jecxz
cli
mov
pop
cmpl
mov
jbe
clc
movsl
shrb
mov
mov
jmp
lea
ret
jo
and
or
cmp
int
notl
stc
push
mov
mov
xor
mov
in
xor
xor
jg
or
adc
pop
cmpb
cmpsb
jg
pop
hlt
add
mov
cli
jns
cmp
fs
cmp
sub
sahf
sbb
push
aad
jo
dec
lret
mov
add
or
inc
imul
cmpsl
jmp
popa
sub
shlb
insb
adc
iret
xchg
mov
mov
jnp
outsl
shl
sbb
adc
dec
and
mov
pop
xor
mov
mov
add
mov
cmp
mov
inc
ja
data16
nop
loop
pop
lret
test
pop
cmc
scas
mov
sub
outsl
fistpll
mov
sub
sub
loopne
aad
xchg
xchg
imul
jae
jl
jg
outsl
jns
rcrb
fwait
ret
testl
pusha
push
or
adc
insb
cwtl
adc
add
sahf
movsb
mov
sub
fsubs
cld
adc
in
pusha
adc
add
lock
hlt
push
fwait
cmpsl
out
dec
inc
xchg
mov
xchg
push
xlat
xchg
rep
enter
cmp
inc
jmp
xchg
mov
cmovs
jmp
inc
stc
jle
and
mov
frstor
insb
push
std
cltd
mov
stc
push
adc
test
clc
pop
test
push
mov
inc
jmp
jmp
test
dec
pusha
adc
or
sub
pushf
addr16
mov
mov
cs
ss
into
xor
or
js
mov
sarb
and
sahf
mov
cmp
inc
rcrb
xchg
add
scas
mov
xchg
push
and
out
shr
sbb
push
lret
xchg
ss
lock
mov
or
inc
sub
mov
jmp
jge
addr16
or
icebp
popa
mov
bound
sub
ss
iret
insb
push
shlb
popl
pushf
and
imulb
jno
jmp
ret
xchg
pop
hlt
cmp
clc
aad
scas
loop
inc
fbstp
mov
push
sbbl
mov
out
push
imul
sti
ficoml
rcll
subb
test
cwtl
mov
scas
cmp
mov
xchg
jle
pushf
in
icebp
mov
call
lret
shr
icebp
iret
add
aam
or
in
mov
pop
test
lret
adc
in
mov
sub
inc
dec
mov
inc
pop
out
mov
js
pop
clc
adc
scas
and
adc
sbb
mov
xchg
imul
sbb
mov
iret
push
push
clc
fcomps
sub
lret
je
push
mov
add
call
out
inc
xchg
add
pop
push
add
aam
cmpsl
fimull
xchg
sub
jbe
pop
mov
mov
repz
divb
std
push
add
fnstcw
popf
pop
pop
and
xchg
loope
add
repz
cmpsl
jge
xor
or
lods
es
adc
stc
jg
fiaddl
bound
leave
lret
and
call
pop
or
dec
dec
hlt
cltd
std
lret
xchg
cli
fistpl
push
fdivrs
lods
mov
sbb
adc
mov
inc
pop
jae
xor
mov
scas
or
pop
rcr
std
xchg
dec
gs
push
cld
pop
das
addr16
push
gs
adc
cmp
outsl
mov
jno
sub
xorl
xchg
mov
stos
inc
mov
mov
cltd
mov
sahf
subb
ret
inc
cwtl
out
mov
jl
xchg
mov
xor
mov
clc
cmpsb
mov
movsb
push
jbe
cmpl
lds
outsl
inc
movsb
mov
add
sahf
and
rolb
jl
sub
sub
and
jle
sbb
pop
lods
out
sbb
sbb
or
push
or
mul
inc
cltd
lock
add
cwtl
jbe
pop
adc
daa
shrl
jne
sub
lea
je
push
xor
xchg
cmpsb
push
dec
test
neg
cmp
and
xchg
mov
loop
sbb
add
pop
std
ja
gs
push
and
outsb
or
and
mov
add
push
scas
aaa
jnp
orl
sub
mov
inc
out
xor
push
mov
nop
mov
pop
add
fmull
xchg
ds
ljmp
jae
push
aaa
push
leave
fdivrp
mov
cld
lea
ret
cmc
andb
fisubrs
rcr
inc
sub
adc
lcall
aam
push
mov
in
int
jns
sub
push
jb
pop
add
dec
xor
fidivrl
icebp
pop
repnz
mov
insb
bound
mov
out
and
jno
xchg
aaa
pushl
mov
jns
test
dec
and
scas
add
cmpsl
faddp
lock
push
pop
push
sbb
or
or
or
or
mov
mov
sbb
cmp
stos
movsb
or
xchg
cltd
lcall
popa
les
jp
push
push
mov
lret
adc
dec
or
or
cld
ds
xchg
adc
scas
cmp
jns
arpl
lret
mov
lods
inc
dec
inc
into
loopne
and
pop
das
cmp
data16
or
or
shl
xor
mov
scas
push
inc
mov
ja
iret
cmp
data16
mov
push
cmpsb
mov
sbb
push
shl
jno
cmc
je
dec
lret
lahf
lods
pop
mov
dec
nop
pop
xor
fcomps
pop
xchg
pop
inc
inc
xchg
mov
sbb
scas
pop
pop
in
xchg
rcrl
inc
sub
jbe
sub
aad
mov
pusha
aad
inc
insl
sahf
je
sbb
dec
mov
jb
mov
aam
sub
bnd
cli
push
xor
ljmp
into
sbb
xor
stc
add
adcl
jae
jp
cmpsb
hlt
aaa
jb
pop
loope
aas
adc
cmp
icebp
std
xor
xor
stc
enter
mov
adc
outsb
push
xor
mov
pop
arpl
les
mov
ret
repz
cmp
add
pop
inc
lock
testl
pop
xchg
insb
mov
je
adc
push
mov
sbbl
call
push
dec
cld
xor
xchg
dec
pop
int3
push
fucomp
and
mov
popa
call
adc
rclb
stos
into
nop
je
xchg
pop
sub
dec
in
mov
xchg
sbb
hlt
enter
dec
cmp
sub
movsb
jle
jnp
arpl
sar
xchg
sub
xabort
mov
rorl
cmp
roll
rorb
imul
movsb
and
gs
sbb
pusha
stos
pop
dec
fldenv
mov
movsl
cli
lea
add
add
loope
movsb
js
insl
fdivs
sbb
mov
adc
ret
sbb
faddp
inc
adc
stos
push
add
mov
loope
inc
mov
std
dec
pop
into
xchg
lahf
mov
lcall
lret
and
orb
mov
data16
loope
adcb
pop
dec
fwait
stc
jge
ret
lock
xor
jns
or
add
fldenv
sub
mov
ret
outsb
jno
pop
ja
sbb
lahf
fcoml
xchg
push
jg
cmp
sahf
arpl
jb
lds
inc
adc
push
popf
push
pop
dec
xor
sub
dec
inc
adc
int
ja
test
mov
pop
ja
or
sbbl
mov
push
sbbl
push
mov
sub
and
dec
pop
fldenv
mov
cmp
jb
lcall
out
out
pop
pop
xchg
and
sub
add
inc
popa
out
mov
lea
xchg
imul
pop
ss
leave
paddsb
mov
jno
sbb
into
jp
sbb
repz
sub
mov
sbb
das
es
fsubrs
pop
cmp
imul
mov
adc
mov
sub
fpatan
ljmp
adc
insl
dec
jo
jns
inc
mov
xchg
pop
push
int
sub
enter
jecxz
sub
rorb
insl
mov
in
cmp
mov
mov
nop
dec
jge
and
add
incb
push
mov
pop
mov
movsb
jge
call
aam
push
cld
pop
pop
out
dec
fbstp
cmc
clc
in
dec
aam
mov
lahf
or
dec
add
sbb
add
jg
lods
cmc
into
jmp
mov
mov
dec
shlb
aas
pop
aas
test
mov
lods
jns
adc
arpl
jnp
add
mov
daa
push
add
fmul
pop
lcall
jle
push
insl
xchg
push
imul
fwait
pop
jns
mov
pop
in
xchg
push
xor
pop
dec
sbb
fstl
push
stc
dec
es
mov
sbb
mov
adc
outsb
mov
pop
es
test
xor
xchg
ljmp
or
nop
decl
mov
lahf
flds
sbb
fcompl
push
cwtl
jns
cmpsb
fmuls
icebp
push
ja
cli
push
ja
icebp
cmp
scas
fidivs
jmp
xchg
jecxz
out
mov
mov
test
mov
and
fisttps
imul
out
addr16
sub
in
aam
pop
mov
jl
pop
jmp
xchg
insl
push
sbb
jle
mov
andb
ss
stc
mov
sub
mov
ja
stc
mov
in
mov
mov
or
xor
das
add
dec
cmpsb
es
add
aam
fs
les
jb
test
ss
jnp
add
pop
in
aaa
negb
sar
in
inc
test
imul
cmp
je
adc
in
push
stos
fwait
jns
outsb
std
fucomip
push
pop
icebp
adc
dec
bound
cwtl
xor
aaa
or
scas
pop
pusha
lret
sbb
xchg
cmpsb
xchg
or
mov
icebp
and
dec
mov
mov
mov
dec
sub
in
mov
mov
fstpt
jns
fidivl
pushf
outsb
mov
in
dec
jge
nop
xchg
movsl
jle
push
movl
mov
mov
and
cmp
mov
dec
xchg
out
lcall
mov
xorb
bound
push
lea
cwtl
lahf
out
add
and
lret
js
mov
pop
sub
popf
stc
inc
jae
dec
movsb
push
je
aas
enter
add
inc
mov
rolb
cmp
push
xchg
test
push
cmpsl
fwait
pop
mov
data16
xorb
imul
stos
or
cmp
dec
and
clc
lods
enter
sub
mov
cmp
cltd
subl
cld
sub
in
push
sbb
mov
loope
mov
je
rolb
mov
pop
xchg
int3
push
repz
scas
jge
sub
and
inc
movsl
addr16
les
mov
push
lods
inc
xorl
mov
js
sub
loopne
scas
pop
int3
loopne
imul
icebp
push
fwait
add
add
and
fistpl
pop
sbb
inc
aas
fnstenv
xchg
mov
jb
jnp
add
dec
push
jmp
dec
ret
testl
mov
test
dec
inc
or
out
les
xorl
add
xchg
int3
inc
ljmp
cld
cld
call
mov
mov
pop
lahf
es
push
int
pushw
mov
ljmp
inc
adc
xor
xor
test
adc
cmpsl
inc
push
push
aaa
pop
lods
push
aad
jmp
test
int3
mov
shrb
int
jge
leave
test
xchg
fs
xchg
mov
xor
lret
lods
imulb
rol
sbb
sbb
xor
sub
mov
push
add
inc
in
shrl
sub
xchg
mov
cs
mov
dec
repnz
sub
push
mov
and
insb
and
mov
add
sbb
sub
into
fildll
dec
js
xor
enter
das
xchg
rcrb
je
pop
jg
push
mov
add
pop
mov
cmp
lods
mov
je
mov
push
mov
arpl
cmp
inc
sub
adc
cmpsl
int3
ret
cmp
adc
and
push
in
bound
insl
rorb
jnp
cmp
and
in
jo
cmpsb
jae
inc
cwtl
in
fnstsw
mov
or
mov
stc
sti
ljmp
jo
addr16
push
daa
push
inc
inc
mov
or
sarl
sbb
jg
fbld
xor
movsl
mov
ror
dec
lods
pop
push
sahf
data16
shrl
jg
aas
dec
leave
xchg
lret
stos
nop
inc
lret
pop
test
repnz
mov
iret
adc
sub
adc
lods
jge
sbb
icebp
orb
loopne
lret
mov
cmp
xor
aad
push
bound
jns
addr16
lods
pop
addl
movsb
loopne
cwtl
enter
xor
cmp
enter
loopne
mov
adc
enter
in
lret
mov
xlat
add
clc
inc
loop
cmpb
push
inc
pop
lds
mov
cmp
mov
xor
sti
movsb
or
movsb
or
int3
shlb
lcall
cmp
pop
jge
inc
xor
adc
daa
shl
sbb
add
addl
rcll
mov
addr16
lret
jp
daa
es
inc
scas
ss
iret
add
test
or
dec
test
push
shr
mov
and
cmpsl
in
popf
inc
mov
mov
fs
and
adcl
xchg
mov
mov
es
arpl
jmp
sarb
sub
mov
mov
xor
les
fdivl
popf
jbe
je
jne
mov
cli
gs
sbb
test
arpl
addr16
ror
loope
fs
mov
push
andb
xor
lahf
pop
inc
xor
icebp
cld
dec
iret
or
push
adc
out
sub
xchg
sbb
divb
dec
jno
sarb
into
and
xor
add
movsb
stos
sub
adc
cld
out
jp
mov
pusha
nop
inc
das
pop
popf
pop
pop
push
add
adc
cmc
inc
pop
stos
in
sbb
js
push
xchg
mov
adc
rcl
out
push
jne
pop
jb
jecxz
dec
out
dec
push
mov
sti
jg
outsb
cmp
enter
add
cmp
popf
out
add
cmp
jne
jb
sbb
sub
in
mov
sub
push
js
push
xor
and
jmp
in
mov
ret
dec
into
sbb
jb
dec
aaa
xchg
jmp
adc
push
out
mov
xchg
sub
adc
dec
ds
icebp
jne
leave
into
mov
ror
xchg
les
pop
int
fdivrl
ret
mov
push
dec
repnz
int3
pop
jp
xchg
lods
mov
jmp
movsb
xchg
xchg
mov
arpl
push
jne
enter
inc
cwtl
cmc
push
test
and
sub
enter
sbb
mov
out
test
lods
scas
aam
xchg
lahf
xor
mov
mov
mov
cld
std
out
mov
mov
add
mov
jge
mov
lahf
gs
lock
and
into
push
dec
sbb
pop
test
inc
cmp
xchg
ljmp
mov
pop
stos
jno
outsb
dec
rol
icebp
inc
les
xchg
sbb
inc
in
fcompl
jge
xchg
test
gs
adc
xchg
xchg
inc
jl
add
rcrb
mov
lea
testl
xchg
mov
mov
pop
in
mov
cs
cmp
jne
and
dec
roll
clc
out
fisubl
jge
sub
sahf
push
push
enter
fsts
adc
popf
popf
sarb
mov
subl
lcall
int
popa
popf
andl
out
orb
test
xchg
xchg
fsubr
lock
clc
mov
jge
in
mov
xor
lea
cmp
push
and
lods
sbb
int
xchg
jl
outsl
fsubrl
xlat
insl
inc
push
bound
xor
sub
push
xchg
lret
rcrl
dec
cltd
push
andl
pushw
sbb
pop
mov
jecxz
pop
mov
mov
mov
nop
push
addr16
mov
lods
sub
out
sti
dec
cli
mov
lahf
decl
adc
xor
xchg
xlat
sub
jp
or
popa
leave
mov
adc
mov
or
outsl
mov
xlat
mov
outsb
repnz
fimull
loop
or
adc
mov
imul
and
out
ret
push
dec
sbb
sar
shlb
testb
pop
mov
enter
lcall
fisttps
ss
into
mov
in
mov
sarb
xchg
or
sbb
arpl
fiaddl
icebp
push
or
cmp
pop
push
jne
outsb
sub
mov
dec
mov
xchg
inc
jbe
lahf
jge
mov
push
imul
mov
das
hlt
cmp
jns
dec
jge
jb
aas
in
fisttps
sahf
push
jns
stc
mov
add
je
test
dec
xor
jmp
xchg
mov
into
xchg
hlt
jl
fstps
push
int
pop
lods
xchg
sbb
outsb
mov
xor
fucom
xchg
dec
pop
adc
cmp
push
lds
nop
es
cmp
lock
addr16
mov
into
loopne
ja
and
cmpsb
adc
mov
dec
dec
xor
cld
int3
cld
fisttpll
mov
call
mov
pop
inc
or
xor
sbbl
cmpsl
and
pop
aas
ds
push
enter
insb
stos
jo
out
cs
pushw
out
int3
sub
mov
movsb
js
and
repnz
fimuls
adc
fs
pop
lret
icebp
mov
mov
cmpsl
pop
in
push
cmp
call
scas
push
cmpsb
inc
outsb
jmp
xor
insb
sahf
jp
and
je
xor
test
mov
or
xor
dec
adc
jl
push
cli
mov
and
ret
pop
sub
or
fidivs
pushf
xchg
and
xchg
push
les
pop
orl
jo
mov
cmp
mov
mov
lret
test
int
dec
lret
pop
pusha
jne
push
adc
sub
shll
mov
scas
xchg
pop
jl
jg
int3
leave
xor
popf
dec
add
cmp
jg
pop
cmpsl
jnp
pop
jne
sub
lcall
xchg
fwait
cmp
nop
mov
jae
push
pushf
mov
std
jbe
insl
rorl
sub
xchg
int
or
push
js
in
dec
lret
ficoml
mov
pop
mov
dec
push
lock
lods
pop
cltd
push
push
insl
lock
inc
cmp
test
xchg
in
ret
inc
push
ret
into
xchg
and
cmp
cmovne
cmp
sbb
mov
int3
dec
pop
add
data16
ja
rclb
sbb
insl
enter
ud2
scas
jl
int
pop
imul
jle
jecxz
sub
xor
sbbl
jne
push
mov
mov
inc
sbb
int3
push
fldl
pop
mov
cmp
pop
outsb
repnz
jbe
pop
xchg
repz
and
add
mov
sub
dec
lcall
mov
loopne
mov
or
mov
out
mov
iret
gs
pop
es
inc
or
fadd
xor
into
outsl
lret
xchg
xor
pop
shrl
nop
shll
push
test
mov
ss
lock
jbe
icebp
mov
add
push
mov
jbe
adc
fldcw
pop
test
sub
out
pop
sbbb
call
pop
test
push
jp
adc
into
dec
iret
cmp
fwait
add
xchg
imull
dec
push
jne
xor
pop
mov
jae
jl
jb
mov
mov
ds
xchg
push
xchg
dec
jns
mov
pop
push
cs
or
xor
pop
decb
cwtl
dec
and
shrl
sub
add
push
xchg
aam
sahf
mov
fidivrl
pop
add
out
aad
sub
ret
sahf
insl
cwtl
mov
mov
xlat
outsb
xor
popf
adcb
mov
pop
adc
aam
outsl
out
pop
mov
pop
imul
jbe
and
push
and
cmp
push
leave
hlt
add
adc
push
and
cltd
xchg
dec
lods
jl
jns
inc
cmpsb
popa
roll
out
push
ljmp
jmp
inc
out
xor
imulb
and
leave
push
add
enter
into
pusha
rep
fcom
sub
imul
adc
lahf
and
push
sbb
leave
fisttps
sub
popl
pop
idivb
ret
lahf
les
mov
push
bound
xchg
mov
fs
xor
xlat
push
out
and
pop
dec
add
js
stos
sbb
sub
jle
cmpsl
mov
stos
movsl
dec
xchg
je
add
movsb
in
jno
xor
ret
imul
das
inc
push
repnz
shrl
test
lahf
enter
jecxz
mov
movaps
outsl
cli
xor
xchg
inc
jmp
ljmp
test
ret
lret
call
jp
addr16
adc
pushf
mov
pusha
clc
mov
shl
aaa
push
ret
or
mov
cmp
aaa
ljmp
push
call
jg
mov
out
adc
sub
popf
pop
fwait
lea
flds
ljmp
les
dec
mov
pop
into
pop
js
pop
mov
pusha
mov
fiadds
mov
mov
mov
pop
pop
lods
frstor
enter
je
push
out
pusha
add
or
mov
scas
adc
xlat
sbb
mov
add
jle
dec
mov
js
lods
shll
imul
ret
ss
nop
stc
dec
push
stc
mov
nop
or
jne
dec
sbb
addr16
pop
out
repz
jle
fs
ret
into
call
ficompl
pop
mov
rorb
jae
inc
fldcw
sbb
xchg
movsl
mov
pushf
mov
xor
xlat
enter
popf
in
sbb
mov
inc
cwtl
push
xchg
xor
xchg
sbb
fldenv
pop
pusha
decl
mov
repnz
cld
sub
mov
pop
ja
lcall
addr16
lret
and
clc
push
pushf
daa
fadds
inc
arpl
jmp
pop
cld
mov
popf
in
sub
inc
insb
test
mov
daa
or
or
mov
inc
mov
incl
int
pop
das
add
or
mov
in
lock
and
mov
sub
fs
nop
or
mov
stos
mov
popa
jl
fwait
or
mov
xchg
pop
pop
add
xor
rorl
icebp
lock
and
les
dec
sbb
sbb
bound
sbb
cmc
mov
mov
pop
xchg
mov
jl
xor
arpl
das
loopne
push
fisubrl
shr
pop
pop
jmp
ss
shrb
mov
dec
imul
push
loop
dec
sbb
cmp
mov
sbb
pop
or
in
fstpt
enter
leave
jl
cmp
mov
sbb
sbb
sbb
ss
daa
add
fnstcw
jge
jnp
out
pop
dec
hlt
gs
inc
jbe
cmp
mov
sub
mov
aas
gs
lret
mov
mov
cwtl
outsl
sub
mov
mov
fisubrs
int
inc
dec
xchg
mov
pushl
fstps
push
hlt
jge
movsb
xchg
pop
lods
je
push
xchg
jbe
test
repz
ds
hlt
add
adc
ret
out
and
int
cltd
or
loope
out
aad
mov
shl
mov
negl
xor
push
mov
xchg
or
mov
add
jg
add
mov
iret
popa
lcall
mov
popf
shll
mov
dec
stc
aas
daa
mov
cli
pop
cmp
repz
pop
test
or
and
into
movsl
ds
and
repz
add
xchg
mov
jns
scas
out
cmp
sub
ret
sti
outsb
insb
subl
in
and
xchg
pop
movsl
push
xor
mov
dec
mov
repnz
insl
movsb
arpl
sub
fldcw
pop
jp
in
pushf
mov
sti
jno
adc
adcl
shl
or
or
jne
dec
push
mov
into
stos
loop
lods
jnp
ss
test
adc
ja
movsb
popf
sbb
and
push
inc
sarb
xchg
out
insl
imulb
inc
fidivs
rcl
mov
cmp
add
jnp
shr
mov
pushf
mov
jb
mov
rcll
push
inc
bound
jp
mov
push
xchg
sbb
out
or
js
ds
iret
adcl
dec
inc
add
xchg
push
xor
inc
fidivl
adc
xchg
out
pop
pushf
mov
repz
push
dec
xor
test
dec
cmp
pop
adc
sarb
mov
jmp
pop
mov
mov
cmp
clc
in
in
mov
sbb
mov
and
gs
sub
mov
dec
stos
loop
push
inc
inc
loope
ds
js
fistl
or
es
jmp
aaa
adc
and
or
cmpsb
adc
std
xchg
iret
inc
les
xchg
cmp
mov
bound
hlt
pop
mov
add
out
pop
ret
rol
in
daa
call
mov
add
mov
mov
adc
jbe
jmp
xchg
dec
bound
pop
outsl
dec
neg
inc
rcrl
mov
lret
repz
fldl
push
sbb
pop
mov
xchg
in
xchg
sub
inc
nop
fnstcw
arpl
out
xchg
lods
sub
adc
clc
pop
out
mov
test
add
inc
mov
aad
rcrl
nop
jle
sub
es
bound
out
lret
inc
and
hlt
fbstp
xchg
push
sub
rolb
add
jp
xor
outsl
mov
mov
mov
popa
push
js
fsubrp
push
dec
shll
lea
shr
pop
scas
pop
and
pusha
cmpsl
adc
sbb
sub
inc
stos
pop
shrl
dec
das
loope
mov
dec
bound
adc
add
pop
jae
lret
cmp
adc
ds
mov
lcall
arpl
es
aas
push
dec
mov
mov
in
std
ret
js
and
push
lods
mov
les
mov
in
sub
aam
xchg
inc
xlat
add
imul
mov
rcll
gs
in
aas
inc
cmpsb
xchg
xor
adc
mov
inc
cmpsl
sub
into
icebp
or
xor
imul
mov
mov
dec
cmp
outsb
mov
sub
aaa
dec
push
sbb
sub
mov
fiadds
pop
sahf
push
lret
push
int
std
xor
in
fcoms
cmpsb
sbb
gs
pop
xor
fldenv
mov
sbb
aam
mov
out
out
jbe
out
test
mov
pushl
decb
loopne
cmc
pop
ret
and
ljmp
es
xchg
inc
cmp
pop
int3
sahf
outsl
push
arpl
outsb
arpl
or
lea
lock
lds
jp
jne
cmp
cld
in
sub
pop
movsb
mov
sarl
shlb
cld
int
sarl
leave
jne
pusha
mov
xor
jae
decb
lock
push
mov
cmp
hlt
incl
or
hlt
xor
and
ret
mov
pop
mov
sub
adc
pop
sub
in
nop
jge
pushf
movsl
mov
push
cwtl
addr16
mov
mov
movsl
jg
jnp
scas
mov
fwait
jle
aaa
jae
ds
cltd
les
cmp
push
xor
sub
mov
adc
stos
gs
pop
insb
hlt
jne
inc
ss
mov
inc
xchg
shr
lods
xor
loop
and
std
xchg
daa
ja
inc
pop
jno
mov
jmp
fildl
and
es
lods
ss
mov
push
sahf
addr16
or
cld
or
inc
fsubrl
inc
cld
push
jne
mov
ja
inc
cmpsb
cmp
lea
ret
nop
xchg
jbe
mov
sahf
mov
in
or
xorl
cltd
pusha
sbb
jbe
push
out
movsl
rcll
test
subb
dec
out
lods
outsl
add
sub
sbb
inc
mov
and
imul
fiadds
sbb
xchg
jne
mov
add
inc
sub
sbb
ja
sub
mov
jl
xor
pusha
and
adc
ss
jns
push
push
xchg
aad
outsl
decb
mov
xor
jl
or
xchg
cmpsl
sahf
hlt
loope
cmp
movsb
inc
cltd
fwait
adc
push
jg
push
ljmp
sbb
adc
data16
pop
stc
pop
add
adcl
pushf
jmp
stc
pop
pop
leave
xchg
popf
jo
mov
add
push
negb
bts
in
pop
insl
pop
insb
out
addl
scas
orps
daa
jecxz
gs
push
cmp
movsb
lea
jp
sbb
jecxz
jge
gs
push
mov
std
mov
xchg
test
outsl
push
cmpsl
scas
out
add
fs
push
enter
or
insl
inc
data16
shll
int3
rcrl
insl
into
pop
stos
scas
jb
shll
sbb
inc
insl
dec
fcoml
and
jge,pn
out
sbb
nop
movl
popa
fs
mov
mov
mov
call
push
lret
or
lea
stos
or
js
in
sbb
push
andl
adc
andl
add
xchg
jp
jo
stos
daa
cmpsb
fistpl
test
xor
or
dec
leave
mov
sbb
sbb
sahf
pop
push
lahf
mov
and
xor
rol
lret
lret
sbb
test
pop
daa
inc
pop
bound
mov
mov
addr16
xchg
iret
and
subl
aaa
adc
sarb
adc
xchg
xor
leave
push
push
fists
mov
jecxz
pop
xchg
rcrb
add
jge
loop
push
xchg
mov
loopne
and
repz
inc
jns
xor
xor
out
xchg
hlt
cmp
mov
or
push
lea
pop
pop
mov
and
xor
mov
xor
xor
xchg
or
xchg
adc
pop
fcoml
imul
mov
xchg
inc
xor
loop
mov
dec
mov
loop
vdivpd
cmp
ficoms
imul
aas
fcomi
xor
mov
rcl
insb
dec
and
lods
imul
out
or
rcll
sar
cmpsl
inc
jl
mov
cld
mov
lods
cmp
xchg
test
cwtl
sub
enter
in
mov
mov
outsb
fsubrl
int3
pop
add
fs
jno
sbb
add
pop
mov
movsb
arpl
or
mov
scas
ds
movsl
jg
dec
addr16
jecxz
sub
dec
jle
pop
rorb
and
sar
push
mov
fisttps
jle
or
out
sub
xchg
cwtl
in
lods
push
les
jbe
jae
pop
into
dec
fcomps
dec
jo
adc
push
adc
sbb
add
push
dec
inc
jmp
xor
cli
outsb
dec
jno
sbb
mov
mov
xchg
mov
sbbb
ljmp
ret
insb
add
out
negl
mov
mov
cs
sub
jno
dec
ss
rcl
or
outsb
sbb
inc
jmp
jb
push
push
add
add
in
ret
adc
int3
and
push
hlt
and
addb
in
movsl
jp
fistpll
cld
jns
or
xchg
mov
jecxz
xor
dec
gs
add
xchg
pop
bnd
lret
cli
fidivs
pop
add
arpl
sbb
dec
inc
xor
stos
ljmp
push
clc
sbb
subl
xchg
inc
testb
rcll
pop
mov
lahf
test
and
pop
pop
rcll
push
and
or
xor
pop
cld
in
sub
cmp
data16
leave
lds
movsl
push
test
stc
shrb
push
add
xchg
sbb
popa
xchg
sti
xor
and
sub
clc
cmc
sub
push
out
mov
lcall
fidivrl
jg
fdivs
push
insl
mov
fdivp
loop
xor
sarb
dec
sbb
cli
pop
xchg
movsb
dec
pop
ja
sub
cmova
dec
gs
mov
pop
enter
jle
jge
inc
decb
les
pop
inc
idiv
xor
adc
insl
int
icebp
mov
pop
xchg
fsubs
or
adc
scas
stc
push
mov
inc
push
cs
cmpb
jg
xchg
xchg
jo
aad
jecxz
std
lahf
aad
and
ret
daa
sbb
int3
xor
dec
faddl
or
hlt
pop
xor
loope
add
mov
shlb
jo
rorl
pop
sbb
jae
hlt
cli
mov
test
out
aam
fcoms
mov
jmp
push
ds
stos
fs
arpl
lret
insl
jae
xchg
fstpl
repnz
out
dec
inc
out
mov
loop
dec
jo
mov
repz
lock
cmp
cld
jae
insb
incl
dec
ljmp
jae
gs
scas
movsl
adc
sbb
hlt
movsb
nop
or
sub
mov
jmp
adc
mov
fisttpl
dec
xlat
pop
daa
pusha
outsb
xchg
dec
fldcw
test
incl
cmpsb
sbb
push
or
ljmp
pop
and
inc
xchg
movsl
bound
push
xor
daa
or
in
ss
inc
inc
cltd
andb
and
stc
ds
xor
xor
jnp
sarb
inc
jb
ficomps
into
mov
pop
cmp
shrb
mov
adc
dec
mov
sbb
or
sarl
jae
push
add
add
jbe
jle
jg
and
ret
adc
call
jns
arpl
ja
xor
dec
shrb
xlat
jne
incb
push
imul
std
dec
icebp
mov
mov
lods
pop
cmc
clc
mov
aad
jb
std
push
mov
les
dec
mov
jb
ja
dec
or
inc
fsub
bound
inc
pop
fiadds
int
push
jmp
xchg
outsl
pop
adc
popf
mov
sub
ficoms
adc
jnp
inc
or
and
mov
adcb
add
mov
call
xchg
data16
mov
mov
imul
pop
push
push
notl
push
lea
inc
push
mov
adc
push
sub
pop
insb
movsb
aam
mov
push
mov
icebp
mov
pop
cmp
hlt
cmp
fs
push
sbb
mov
std
sub
mov
jbe
aas
xor
rcrl
inc
mov
in
fsts
sub
out
js
ss
xchg
lods
pop
iret
jecxz
jb
mov
divl
movsl
xchg
pop
sbb
push
cltd
adc
push
lds
mov
push
pushf
ret
dec
pop
hlt
popf
mov
xchg
loopne
or
jge
push
pop
jl
cmpsb
rorl
insb
fisttpll
aaa
sub
scas
out
repnz
enter
int
sti
push
in
xchg
mov
test
xchg
and
lods
cli
xorb
sub
rep
pusha
pop
push
jno
fisubs
fistpll
push
push
out
test
daa
mov
dec
lods
cli
ja
push
sbb
repnz
or
inc
cltd
pop
pop
dec
dec
jnp
add
rcll
addr16
stos
int3
dec
and
data16
out
sub
jge
xchg
sbb
int3
fiadds
out
mov
lcall
popf
xchg
adc
xor
dec
xchg
dec
push
jg
arpl
inc
dec
pop
jg
in
scas
xchg
push
push
or
popf
lea
sub
mov
cmpb
and
addr16
pusha
and
ss
popf
and
pusha
push
cmpl
xchg
mov
jge
loopne
mov
pop
xlat
jle
adc
and
xchg
mov
dec
pop
lods
fsubrl
jmp
popa
add
jnp
inc
out
push
pusha
add
in
xchg
xchg
pop
add
xchg
push
sahf
mov
icebp
pop
or
gs
inc
add
add
jg
sbb
sub
cmpsl
add
adc
mov
xchg
inc
xchg
fmull
sbb
cmp
movsl
dec
addr16
lods
iret
or
ja
mov
daa
push
leave
xchg
dec
dec
test
jbe
nop
push
clc
fsubl
scas
mov
pop
mov
fisttps
rclb
jae
lret
mov
dec
sahf
sbb
sub
mov
cmp
add
mov
xchg
xlat
jns
movsl
jne
sub
push
push
jmp
js
into
add
or
imul
mov
popa
ficompl
mov
push
movsb
pop
pop
cmp
cltd
xchg
clc
jmp
mov
jmp
inc
in
imul
sbb
outsl
andb
fsubrp
loop
stos
mov
hlt
and
rcrl
imul
mov
cmp
mov
sub
addr16
sub
outsb
sub
xchg
xor
sbb
inc
mov
mov
mov
ret
and
cmp
test
adc
cmc
or
aam
lea
mov
sbb
popa
scas
adc
mov
mov
sub
mov
push
lods
mov
repnz
jge
xlat
sti
mov
das
inc
jmp
jbe
mov
and
jns
sti
int
add
int3
inc
fldcw
cmp
cmp
xchg
push
test
inc
icebp
sub
add
cmp
idivb
setle
sub
mov
xor
xor
repz
bnd
cmp
insb
push
lahf
sqrtps
cli
mov
js
cmp
jl
mov
cmp
movsb
popa
mov
jmp
push
jge
das
sub
xchg
push
push
jmp
movsb
movsb
pop
adc
ficompl
mov
stos
dec
iret
mov
cmp
mov
mov
xchg
xchg
mov
mov
cli
sti
popa
sub
jp
loope
inc
jne
imul
repz
mov
adc
inc
mov
cwtl
pop
cmp
pop
sub
lret
mov
cmp
imul
add
dec
rcrl
adc
inc
mov
pop
push
jo
or
mov
mov
rorb
insb
lret
clc
repnz
lods
and
pushf
push
fbld
data16
sbb
sbb
xchg
pop
fadds
cmp
inc
pushf
fdivp
cmp
imul
pushf
adc
cli
movsl
jb
jo
mov
jns
push
sbb
xor
ficompl
test
es
iret
pop
xlat
jge
icebp
xchg
xor
das
iret
and
fs
imul
lcall
pop
mov
mov
jl
insb
lds
fs
jnp
aas
xorl
insb
push
add
imul
sbb
fldl
mov
mov
mov
stc
sub
push
dec
dec
bound
dec
sub
cmc
stos
cmp
cwtl
push
aas
lods
or
mov
add
fs
sub
test
add
cmpsb
jmp
sub
repz
push
daa
and
test
sub
or
imul
xchg
cmpsb
mov
jne
or
sub
sbbl
cmp
lds
sbb
jle
lods
shll
outsl
call
sti
cmpl
lock
out
mov
cmp
mov
jo
repz
int
sbb
roll
mov
add
dec
cmp
add
insl
insl
fsubrs
out
jg
les
gs
fstl
ja
jge
pop
jnp
fisttps
aaa
data16
pop
xor
in
js
mulb
fdivrs
pop
in
inc
rorl
dec
in
inc
dec
or
sbb
loop
loope
mov
and
sti
in
xchg
jp
popa
insl
xchg
out
mov
mov
pop
xchg
jge
pop
jge
sbb
sbb
clc
xlat
pop
and
adc
sub
mov
xor
scas
std
inc
push
pop
pop
sbb
fistps
and
jmp
aad
test
xor
sub
cmp
outsb
aam
loope
push
mov
subb
and
lret
fcmovu
pusha
orl
sbb
xchg
ja
jecxz
inc
inc
int3
cs
and
ja
and
jl
jb
lret
pop
mov
scas
in
push
cmp
and
mov
pop
fwait
sti
lds
stc
xchg
jae
push
jno
mov
inc
or
sub
sub
shll
add
jle
icebp
shlb
cli
int
push
fnstcw
dec
movsl
insb
cmp
mov
shrl
adc
cmc
dec
loop
cmp
fdivrl
mov
xor
ljmp
scas
push
xchg
cmp
rcl
mov
rcrb
sahf
or
jno
int3
jne
cmpsb
lcall
int
mov
cli
cmp
cwtl
xlat
and
lods
cmp
sbbb
xchg
cmpsb
les
cmp
mov
mov
les
rol
push
cwtl
jo
clc
sbb
xor
adc
inc
jp
out
fnstcw
push
and
xor
data16
mov
jo
into
stc
sarb
add
mov
ror
mov
jne
inc
fcmovnu
mov
inc
pop
movsb
inc
pushf
loope
xor
lea
inc
pop
jne
scas
or
xchg
mov
dec
pop
mov
xchg
adc
sbb
lods
addr16
adc
add
push
xor
mov
ficoml
mov
fimull
sbb
adc
sbb
les
xchg
lods
xlat
jge
es
mov
mov
cmp
or
inc
cmc
cmp
cwtl
xchg
dec
scas
or
pop
test
popa
insl
je
push
pop
mov
pop
or
pop
xchg
lahf
add
push
xchg
ret
push
mov
shlb
cmp
jl
push
loopne
aas
stos
inc
jne
cmpsb
push
mov
call
shrb
loopne
xchg
cwtl
out
lea
test
jmp
mov
add
inc
int
xchg
push
ss
jl
addr16
jno
fsubrs
dec
or
out
sahf
mov
inc
mov
movsl
pop
pop
fnstcw
mov
push
dec
test
xlat
and
cmc
mov
mov
push
sbb
out
out
sahf
shrl
daa
shll
ret
cmp
mov
sbb
cltd
adc
adc
ja
das
mov
push
mov
vprotq
cld
stc
aas
repnz
inc
add
test
add
repz
decb
loope
pop
lcall
clc
lahf
js
icebp
mov
jno
xor
push
lret
mov
add
and
sti
aam
daa
xchg
aam
imul
sub
fstl
mov
push
dec
inc
fcoms
inc
shrl
frstor
mov
mov
sahf
insl
rclb
fisubs
mov
insl
test
movsl
rclb
das
iret
fcompl
rcr
iret
sbb
popf
mov
or
sbb
sbbl
xor
or
insb
push
testl
adc
xor
jg
sub
add
jp
mov
sub
fwait
jecxz
ficoms
cmp
lds
push
fwait
add
cmp
lret
dec
pop
jnp
fdivrs
dec
les
jmp
adc
call
das
repz
mov
mov
data16
scas
jp
cmp
iret
mov
cwtl
sahf
pop
pop
out
arpl
cmp
negb
lds
call
xchg
sbb
sbbb
inc
movsb
pop
stos
lds
les
push
mov
dec
fisubrs
rcll
pop
ss
pop
xchg
pop
or
jg
ljmp
mov
dec
adc
jg
bound
xchg
xchg
cmp
and
cmp
pxor
call
mov
xor
shrl
stc
std
jb
xlat
call
lret
push
mov
mov
sbb
stc
out
aas
push
mov
pop
cli
sbbl
ret
adc
daa
je
sub
mov
repnz
xor
imul
dec
daa
mov
movsl
daa
adc
jmp
mov
notb
lret
cmp
add
lret
lret
xchg
cmpsl
mov
jo
stc
arpl
fdivp
jbe
imul
mov
fsincos
lret
cmp
call
and
dec
xchg
lods
movsl
xor
pusha
lock
xlat
stc
push
jbe
lock
sbb
fcoms
and
lea
mov
movsl
xchg
pop
dec
xchg
mov
push
lahf
test
sbb
xchg
sbb
stos
push
scas
std
sbb
push
mov
sti
add
xor
stc
lcall
in
loop
cld
testb
int3
jo
daa
bound
and
insl
inc
aaa
dec
movsb
repnz
mov
fcomps
movsb
in
popa
add
mov
out
nop
jbe
cmp
sub
cmp
dec
jmp
rorb
push
adc
ja
cmpsl
inc
in
sub
add
fisubl
fs
sub
sbb
jae
cvtpi2ps
cmp
xlat
push
adc
or
out
movsl
fists
test
pop
arpl
push
fistpl
add
pop
out
rcll
lea
mov
mov
sti
jae
daa
xchg
cmpsb
out
mov
ret
mov
sbb
mov
xchg
mov
jb
call
push
jns
push
inc
popa
add
imul
test
mov
andl
pop
imul
xchg
jb
out
je
movsb
xor
xchg
mov
inc
testb
nop
test
jp
ret
cmpsl
inc
int3
cmp
scas
lds
testl
xor
inc
sub
sbb
pop
clc
push
jecxz
in
xor
daa
lods
insl
mov
sbb
nop
popa
xlat
mov
pop
jl
add
jnp
dec
mov
clc
inc
ret
xor
pusha
push
or
pop
pop
sub
cmp
sbb
pop
aam
jecxz
mulb
mov
es
push
mov
mov
in
push
out
negb
pushf
pop
sbb
or
orl
mov
mov
jno
cmp
cmp
pop
popf
gs
lea
cltd
pop
lods
jg
cmpsl
xchg
and
scas
ret
pusha
adc
xor
jg
outsb
out
sub
sub
sub
mov
ret
add
imul
fbld
sub
mov
in
mov
in
in
std
jmp
sarl
sub
pushf
dec
sbb
inc
test
stos
jle
mov
movsb
repz
cmpb
shl
les
jp
sbb
push
xchg
fldenv
cld
pop
cmp
sti
push
mov
pop
mov
add
mov
sub
lret
in
mov
mov
inc
ja
pmaxsw
stos
std
sub
nop
ret
cmp
ror
pop
cwtl
push
call
and
adc
ret
xchg
dec
pop
clc
cmp
jl
aam
sub
scas
shrl
aam
xchg
sub
xchg
push
insb
cld
stos
je
mov
xchg
mov
fistpll
mov
sub
stc
lret
xor
inc
cmpsl
push
ret
das
cmpsb
inc
or
test
cli
dec
ror
ret
fistl
add
sub
sub
ss
push
mov
dec
lds
xor
imull
push
std
mov
mov
xchg
mov
lods
gs
ljmp
add
adc
addr16
aas
in
adc
cltd
add
sub
sub
nop
movsb
into
pop
inc
and
sub
lea
or
xchg
je
or
mov
mov
cmp
shrl
aad
rcrl
sbbb
popa
repnz
popf
pop
lcall
mov
test
shr
add
aaa
notl
push
lods
push
out
pushf
imul
push
aaa
mov
inc
adc
or
xlat
jo
xlat
rcl
sbb
sub
shlb
and
sub
pop
pop
aam
arpl
movsb
shll
sbb
mov
stos
push
sub
cmp
jnp
sub
roll
out
jne
fmull
nop
lods
ja
cmp
adc
sarb
pop
pop
mov
outsb
xor
push
cmpsb
sub
push
gs
fs
add
inc
adc
sub
and
std
shll
adc
push
hlt
pusha
sbb
or
pop
inc
dec
ljmp
loopne
sbbl
push
cmc
shll
adc
pop
xchg
bound
jecxz
inc
sub
loopne
out
ljmp
pop
sarl
push
lock
in
xchg
pop
and
jle
or
decl
mov
mov
dec
fisttps
pusha
loop
xor
sti
xor
int
jae
xchg
or
mov
push
xchg
pushf
push
jo
lds
add
xchg
sub
and
pop
fwait
mov
sub
sub
lahf
loopne
push
popf
add
cmpl
fsubp
hlt
xchg
inc
loop
dec
lret
fnstenv
dec
aaa
cli
hlt
roll
aad
adc
ss
cwtl
mov
in
test
jns
mov
cld
or
fisubl
aam
jle
loope
aad
sti
cwtl
push
sub
xchg
ss
dec
jge
xchg
sbb
sbb
testl
and
test
shl
jae
pop
inc
loop
mov
inc
sbb
cmc
xchg
jns
jg
adc
pop
loopne
mov
mov
pop
jle
sbb
adc
and
out
decb
repz
and
xchg
pop
leave
js
scas
aad
popa
or
fmull
jmp
xchg
push
mov
mov
adc
mov
in
mov
outsb
sbb
xchg
inc
mov
cmpw
inc
hlt
lcall
push
and
ljmp
and
push
call
fisttps
cwtl
dec
repnz
call
adc
or
call
pop
xchg
testb
and
lea
xchg
cmc
mov
push
mov
adc
pop
xor
movsl
push
lea
push
adc
xchg
push
dec
fcos
stos
fldt
popa
xor
cmc
loopne
jb
shlb
dec
xlat
mov
dec
push
sub
lods
dec
mov
sbb
jo
jae
or
into
faddp
xchg
push
add
insb
ds
mov
xor
mov
sub
mov
nop
inc
es
or
dec
in
insb
xor
addl
jne
out
jmp
scas
jge
mov
and
or
xor
xor
pop
pop
cmpsb
cmc
popa
into
push
adc
jecxz
mov
push
lock
aad
out
pop
adc
shll
sub
inc
stos
xor
mov
in
lcall
call
sbb
jp
or
mov
sbb
xlat
out
sbb
cmc
scas
and
mov
mov
outsl
mov
andb
xchg
jp
pop
xor
pop
adc
and
ja
call
into
push
cwtl
ss
cmpsb
mov
fsubrl
arpl
ret
js
xchg
fsubs
adc
xor
fidivs
jl
insl
xchg
cs
push
jnp
xchg
xchg
sub
mov
movsb
rolb
into
sbb
fld
xchg
lea
xchg
aas
or
rol
in
push
out
mov
xor
xchg
jp
fcmove
pop
cmp
shrb
add
sarl
mov
sub
or
lcall
mov
data16
inc
mov
std
xor
cmp
xor
jns
sub
lcall
movsb
sbb
sbbl
out
rcr
lock
dec
cmp
push
cmpsl
in
ljmp
dec
imul
mov
scas
mov
aas
xchg
enter
jne
fst
or
dec
dec
sbb
lods
inc
outsb
ljmp
js
ja
aas
jle
push
leave
test
lcall
jg
and
ds
mov
fiaddl
mov
in
loope
dec
xchg
jne
mov
or
push
sbb
xchg
pop
addr16
movsl
outsl
popa
sbb
fldcw
sbb
rol
inc
stos
pop
movsl
fnsave
jne
cmp
inc
in
movsb
hlt
dec
mov
pop
push
mov
inc
mov
or
call
lds
bsf
sbb
sub
push
ds
mov
pop
mov
aaa
in
cmp
jne
and
add
jmp
fildl
roll
push
gs
inc
mov
test
aas
or
fsubl
mov
dec
fs
dec
mull
repz
leave
pop
cmp
nop
insb
int3
push
dec
fwait
loopne
sub
loopne
cmpsb
sub
movsb
or
push
ds
addl
push
sbb
pop
or
mov
leave
inc
stc
aad
inc
jg
xor
push
insl
mov
sar
jo
dec
nop
or
cwtl
pop
push
js
xchg
and
inc
adc
shlb
in
cwtl
mov
les
sbbb
mov
test
and
in
sbb
pop
cld
or
and
push
xchg
out
lahf
inc
rcrl
jmp
jbe
or
sarl
loopne
push
and
leave
cli
mov
lret
bound
add
cs
cmp
je
push
lret
lret
jge
pop
in
jbe
shlb
js
mov
adc
lret
sbb
dec
lret
push
adc
das
pop
xchg
lea
mov
sbb
pop
xchg
push
les
mov
fcompl
ss
jle
jge
push
or
popa
test
adc
mov
cwtl
cltd
mov
mov
jbe
pop
repnz
or
xorl
into
xchg
mov
mov
add
xchg
imul
fnstcw
inc
jae
jecxz
cmp
popa
jo
loope
mov
dec
imul
inc
int
sbb
hlt
dec
dec
cmpsb
cmc
cmpsb
mov
fdivr
lods
rol
inc
hlt
mov
imul
dec
jle
std
sub
mov
clc
and
or
add
cmp
jg
pop
roll
cmpsl
xchg
mov
cld
mov
pop
scas
addr16
cmp
and
data16
mov
mov
out
adc
stos
mov
idivb
adc
lods
cmp
adc
ja
sbb
inc
rorl
outsl
addb
lret
lods
mov
or
jg
pop
rcrb
cmp
push
shrl
fisubs
jmp
bound
testl
mov
mov
mov
popa
or
or
insl
cmp
popl
ds
in
lock
icebp
repz
arpl
bnd
aam
and
push
sub
ja
add
pop
cmpsb
ss
xchg
fdivl
adc
jo,pn
xlat
in
mov
or
pop
push
adc
outsb
xchg
sbb
lods
sahf
in
filds
rorb
out
pop
mov
out
mov
lret
stos
add
mov
xorl
mov
xor
add
jmp
sub
test
sub
or
jb
inc
insb
into
sbb
leave
int
sbb
jns
arpl
jae
pusha
ret
push
lret
xor
xor
int
ds
scas
mov
cmc
add
call
loopne
inc
cs
jmp
sbb
insl
leave
pusha
dec
jns
jge
fadds
pop
pushf
mov
xchg
iret
insl
xchg
roll
mov
mov
daa
inc
out
mov
loope
dec
dec
ss
int
pop
inc
dec
outsb
dec
mov
push
cmp
jns
or
movsb
js
mov
notl
sti
popf
dec
fstpt
push
or
fiaddl
jnp
push
pop
push
fcom
jno
enter
xchg
movsb
lahf
lds
xor
xchg
sub
outsl
es
jl
sbb
mov
pusha
sarl
jle
jp
stc
dec
mov
fwait
scas
push
dec
daa
js
je
loop
lahf
jmp
cld
lds
lds
mov
xchg
pop
push
mov
xchg
mov
mov
ret
xor
push
lods
sub
lods
inc
sbb
iret
nop
enter
data16
jp
inc
push
andl
cmp
push
popa
mov
insl
mov
add
or
mov
lcall
gs
mov
xor
xorl
sbb
mov
daa
cmp
sbb
jnp
xor
dec
aam
xor
out
fsts
xor
test
pop
dec
push
out
sub
cmp
push
adc
xor
cmpl
cmp
jmp
out
xchg
stos
inc
loop
fidivrl
mov
xchg
das
mov
adc
jnp
adc
jmp
lea
inc
or
pop
xchg
loopne
pop
mov
imul
add
sub
out
push
cmp
mov
mov
cs
inc
dec
stc
inc
push
jo
push
test
daa
adc
mov
fdivl
mov
jno
cmpsb
int3
pop
arpl
movsb
mov
cmp
mov
mov
out
aas
xchg
in
arpl
adc
mov
push
cmp
or
and
mov
adc
mov
mov
and
and
insb
mov
rclb
rcll
stos
movsb
or
icebp
notl
jle
or
js
inc
inc
fstpl
adc
cli
ss
xchg
movsl
fsts
out
and
jl
and
mov
sbb
jns
jge
out
xchg
outsb
stos
mov
pop
mov
cmp
cmpsl
fimull
pop
scas
mov
mov
fnsave
or
pop
mov
stos
jno
movsb
imul
pop
or
leave
lcall
pop
sbb
aaa
adcb
nop
in
cmp
std
jb
jl
mov
jo
inc
fists
call
insb
cmpsb
loopne
ss
insb
js
add
mov
shll
aam
cld
pop
xor
mov
sti
pop
repnz
xor
repnz
shll
pop
push
jns
mov
ficoms
cmpsb
mov
jl
js
push
inc
lds
mov
pop
xchg
xchg
ja
cld
ret
nop
inc
cmpb
in
xor
push
scas
dec
push
ffree
push
lret
sub
push
cmc
lods
cld
dec
psllq
rclb
pushf
enter
sub
stos
or
popf
cmp
dec
out
gs
stos
add
mov
shll
imul
rorl
push
cmp
js
fsts
bound
inc
jl
push
push
jl
nop
push
pop
pop
jnp
daa
mov
jno
cmc
cmp
je
sbb
mov
rorl
movsb
push
test
fstl
xchg
jecxz
int3
test
lcall
push
cmp
push
push
sbb
sarb
xchg
dec
adc
mov
sbb
arpl
je
jnp
out
mov
dec
mov
cli
add
sar
add
outsb
dec
int
sbb
xor
pop
or
lds
pop
inc
jle
js
cmp
jp
push
fs
shll
lcall
mov
inc
fwait
jge
icebp
adc
insb
or
mov
insl
xchg
rcl
call
addr16
jae
sbb
pop
mov
inc
and
mov
mov
dec
fdiv
pusha
icebp
cld
ss
fnsave
cwtl
sub
insb
das
out
ret
gs
loopne
stos
fs
sub
movsb
sub
cmc
xor
movups
inc
mov
cmc
mov
and
repz
test
nop
inc
inc
xchg
call
mov
cltd
loope
push
bound
fcmovb
in
pop
cmpsl
ret
cmpsb
cmp
xchg
insb
movsl
outsb
push
mov
sub
imul
scas
ss
mov
inc
jno
sbb
imul
cld
cld
mov
jbe
cwtl
xchg
xchg
or
std
mov
add
xor
push
sub
pop
xchg
mov
jmp
pushf
mov
shlb
push
push
mov
pop
repz
loop
test
inc
xlat
adc
jae
mov
sub
in
loopne
mov
in
ret
into
or
dec
outsl
ss
push
and
sbb
mov
lcall
inc
hlt
vpaddusb
jp
xor
test
xchg
clc
or
pop
test
call
jns
cli
xchg
das
add
adc
dec
jo
aam
loop
insl
int3
and
movsb
loopne
mov
mov
mov
jbe
xor
and
or
fdivl
jnp
fidivrs
fwait
loope
mov
adc
xchg
cmp
arpl
scas
fwait
into
dec
dec
arpl
loop
push
add
es
lods
pop
xchg
inc
addr16
ja
cli
es
mov
xor
pop
xor
out
mov
aaa
and
lret
outsl
push
sbb
xlat
ret
adc
aad
xchg
lcall
fs
rol
dec
jb
outsb
outsb
xlat
inc
dec
or
fisttpll
stos
and
hlt
mov
in
mov
xor
or
mov
pop
int3
sbb
shr
xor
sbb
fadds
lods
out
mov
inc
popa
and
ret
pop
push
clc
in
call
inc
into
bound
lock
xlat
mov
xor
push
mov
testl
sbb
add
cmp
sub
mov
mov
fs
xchg
inc
out
cmpsb
inc
jg
idivl
gs
jp
pop
xor
jp
int
rcr
sahf
test
jo
lahf
int
into
push
lods
mov
ja
jl
es
adc
shll
outsb
sbb
loop
out
dec
bnd
pop
outsl
int
mov
and
sbb
arpl
test
inc
jge
fisubl
and
fcmovnbe
cmpl
sbb
push
stos
daa
js
out
fwait
dec
movsl
test
cld
out
sbb
xlat
xor
pop
adc
jno
arpl
fisubl
ljmp
mov
mov
cmp
mov
jne
dec
or
add
xchg
stos
into
mov
leave
sbb
pop
dec
out
xchg
mov
and
sub
fildl
ret
inc
xor
jne
lods
mov
cmpsl
les
aaa
pushf
mov
enter
mov
fwait
les
loope
xchg
add
nop
mov
lock
sbb
movsl
pop
and
sbb
xchg
mov
xchg
sub
or
xorb
outsl
jnp
fdivrs
mov
rcll
xor
cs
mov
sub
pop
dec
xchg
push
ffreep
les
sbb
out
aam
sub
sbb
dec
push
stc
out
xchg
inc
insl
and
jge
jne
adc
ljmp
sub
daa
outsl
inc
and
dec
shlb
cmp
test
les
add
sub
shrl
popf
pop
fistpl
std
xor
shl
and
ficoml
inc
xlat
jl
fwait
cmpsl
mov
loop
out
adc
cwtl
fisttps
inc
jns
cmp
sub
or
sub
mov
sbb
rorl
adc
mov
lret
xor
mov
lods
call
ret
hlt
and
or
icebp
cmc
nop
mov
xchg
jle
bound
dec
mov
pop
adc
add
xchg
lea
xchg
fldcw
hlt
mov
fcoml
jg
mov
push
push
jge
arpl
out
cmp
cmp
cmp
inc
fnsave
insb
sbb
jmp
dec
repnz
mov
push
cld
in
push
inc
jl
jb
iret
inc
mov
sbb
mov
iret
add
mov
pop
out
cs
icebp
mov
repnz
sarl
adc
aas
sarl
rcll
call
ror
notb
idivb
mov
mov
je
mov
push
les
shlb
ret
mov
push
or
js
sbb
ret
repnz
mov
iret
jge
or
imul
add
pop
fisttps
fidivrl
inc
push
inc
fmull
and
push
loopne
ret
xor
cmp
mov
imul
aam
mulb
mov
pushf
adc
jmp
rcll
data16
filds
push
fnstenv
jg
shr
mov
gs
sub
and
mov
xor
dec
mov
mov
mov
add
ja
push
outsb
or
sbb
inc
cld
shl
pop
aaa
xor
lret
outsl
sbbb
pop
stc
negb
jo
mov
inc
push
lock
jge
in
xchg
dec
adc
stos
sbb
fiadds
jl
mull
jl
addb
lcall
outsl
or
pop
sub
ret
mov
insb
mov
pusha
inc
sbb
push
out
push
push
and
adc
sbb
push
jns
and
sbb
xchg
mov
lods
cmp
jo
fcom
lret
imul
cltd
dec
cmpsb
bound
push
lea
addb
mov
repnz
sbb
int3
aas
fdiv
dec
and
les
pop
jecxz
sub
add
sarb
stos
mov
aas
xor
out
lods
push
cmp
mov
jae
pop
repnz
outsl
clc
movb
push
jns
in
lock
xchg
cmpsb
ds
xor
decb
xchg
cmpsb
lret
jno
mov
xor
roll
inc
notb
mov
ret
popf
sub
push
fldcw
inc
pop
inc
xchg
ror
fs
sarb
leave
mov
or
mov
inc
loop
mov
inc
fnsave
cwtl
sbb
or
cmc
jmp
pusha
mov
mov
sub
cld
pop
ret
mov
fisubrs
daa
inc
mov
cmp
movsl
pop
jno
fisttpll
rclb
ret
sub
push
pop
scas
mov
jmp
lret
rcrb
bound
cmp
ss
xorl
inc
popf
mov
in
cmp
dec
mov
mov
xchg
mov
lret
loopne
test
sbb
mov
jp
ret
and
inc
daa
adc
sbb
push
mov
in
movsl
aaa
nop
cmpsb
dec
add
or
inc
jmp
stc
mov
mov
imul
ljmp
in
add
pop
push
mov
pop
out
xor
in
lds
les
or
jge
pop
mov
mov
enter
add
sub
jns
mov
aas
xchg
outsb
mov
out
and
pop
mov
into
and
cmp
dec
pusha
aad
jne
xchg
dec
aad
shrl
inc
dec
xchg
dec
scas
movsb
mov
xor
pop
mov
mov
dec
push
and
daa
mov
inc
out
mov
lret
scas
inc
mov
test
mull
mov
addr16
or
repz
cmp
ret
pop
and
push
mov
ss
cs
ret
and
out
mov
daa
repz
xor
inc
push
or
dec
jl
pop
test
loop
sub
dec
sarl
lret
mov
movsl
push
decb
mov
sti
cs
sub
xchg
cmp
xchg
mov
pusha
fisubrs
push
adc
adc
repnz
cmp
pop
clc
add
cld
xchg
inc
or
jle
hlt
add
stos
leave
cld
in
sbb
repnz
dec
xor
lret
in
inc
and
sub
jmp
clc
mov
fs
mov
push
dec
shrb
lods
jne
test
mov
popf
mov
push
mov
mov
cmpsb
and
cmp
push
in
lock
or
fucomp
ret
lea
dec
inc
adc
pop
int
dec
and
in
aam
rclb
into
je
loopne
unpcklps
clc
or
mov
fbld
pop
clc
lods
push
or
shlb
sti
mov
mov
addr16
cs
add
mov
push
pushf
pop
mov
in
xlat
sarb
into
ja
add
mov
popa
inc
push
push
std
hlt
pop
and
movsb
pop
sbb
push
clc
push
jnp
clc
fs
push
mov
fidivs
outsb
cmp
and
ja
add
andl
sbb
add
pop
inc
sub
mov
out
insl
into
aad
sub
hlt
in
mov
cmpsb
mov
gs
cmp
aas
jnp
cmpsl
fucomp
fstps
mov
lret
lret
xchg
ss
sarb
pusha
jnp
pusha
inc
sti
jmp
and
adc
pop
test
xlat
popf
sbb
pop
std
lods
cmp
push
ret
push
bound
ficomps
test
lahf
adc
xchg
outsb
insb
loopne
mov
jecxz
fadds
jbe
xchg
sbb
push
ret
cmp
gs
fsubs
sahf
fdivrp
adc
pop
insl
adc
dec
mov
cltd
add
jo
pop
pop
xor
rcrl
fists
mov
notl
popf
fwait
or
inc
mov
cmc
jl
shl
lods
mov
dec
xchg
cmpsl
popa
sub
js
add
lock
hlt
mov
out
pop
and
fdivrs
dec
xor
mov
int3
test
stc
sub
lahf
fucom
fbld
repz
push
bound
sbb
push
aaa
fucomi
dec
push
pop
mov
adc
or
inc
push
cmpsb
insb
push
out
aaa
or
fdivr
pusha
xor
xor
sub
xchg
ljmp
fistps
mov
lods
inc
push
sbb
mov
jle
jns
pop
push
add
adc
aam
mov
jp
or
adc
jo
ret
jg
lea
add
inc
movsw
popa
imul
js
rorl
scas
jle
add
sub
es
xchg
mov
cmp
clc
inc
ds
aas
inc
or
decb
or
jo
mov
hlt
adc
aas
and
xchg
xor
or
daa
and
lods
ret
in
and
fcoml
sbb
pop
sbb
push
inc
xlat
cmpl
sbb
xorl
xor
rcrl
sbb
fdivr
mov
dec
repz
mov
cmpl
je
gs
pop
sti
sbb
mov
shl
imul
inc
rol
mov
push
pop
lret
jmp
shll
push
sub
push
push
xchg
jp
out
xchg
adc
cltd
iret
sbbl
sahf
dec
cmp
test
in
pop
in
and
lcall
out
add
push
mov
sub
mov
push
ja
or
out
fs
insb
push
and
sbb
mov
std
jl
dec
fwait
push
sbb
jmp
aad
scas
les
xchg
cmp
pop
stos
out
mov
mov
or
bnd
jg
pop
push
and
fisubrs
add
pop
popa
je
das
ss
int3
jbe
cs
xchg
rol
out
fidivs
daa
cmp
pop
subl
mov
ficomps
cmp
aad
cmpb
cmp
into
scas
push
out
dec
insb
sbb
or
cli
push
or
out
fs
dec
xor
pop
popf
rorl
dec
lret
cmp
dec
shrb
out
cmp
jo
jnp
cltd
call
loopne
xchg
aad
cmp
out
arpl
jns
jl
dec
push
stos
adcb
push
xchg
mov
cmp
sbb
mov
rcrl
ret
sub
or
lods
sbb
inc
inc
fnstsw
lcall
fdivrs
xchg
in
ja
sub
sarb
adc
jecxz
xor
rcrl
inc
bound
js
sbb
nop
and
mov
sbb
or
call
add
je
inc
das
mov
push
mov
mov
mov
sub
jb
mov
xor
add
push
mov
or
and
dec
xor
or
jns,pn
pop
add
popf
jecxz
sub
mov
divl
push
lret
or
cs
ror
hlt
sub
pushf
lret
cmp
cli
rolb
sbbb
arpl
jnp
out
arpl
push
out
push
mov
inc
js
call
cmp
push
xor
fld
sahf
jl
outsb
add
sahf
mov
sub
loopne
inc
or
mov
mov
in
ret
test
outsl
lret
cmp
push
ja
or
jbe
call
xor
iret
pop
jno
int
mov
movlps
and
dec
pop
std
dec
andl
test
dec
ret
xchg
mov
jmp
add
lahf
xlat
enter
sbb
pop
les
jo
adc
dec
insb
shlb
xor
or
mov
mov
mov
fcomip
sub
dec
jnp
sbb
mov
dec
fsubrs
loop
dec
xchg
cs
jno
cltd
std
inc
inc
bound
jmp
cmpsb
dec
pop
inc
repz
les
xor
data16
xchg
xor
negb
fs
clc
or
jmp
jl
fwait
xchg
mov
subl
arpl
mov
arpl
in
cmp
inc
movsl
cmp
mov
aad
and
mov
adc
or
sub
mov
shll
or
insl
lahf
mov
sub
ds
pop
pop
mov
cmp
xor
dec
jecxz,pn
jne
dec
or
decb
test
mov
xchg
mov
in
jle
clc
lods
jg
inc
inc
inc
call
mov
nop
es
mov
pop
or
xchg
bound
dec
pop
mov
xchg
rcrl
cs
xchg
mov
aam
inc
leave
inc
ficompl
mov
mov
mov
test
les
sahf
cmp
data16
dec
xchg
mov
sbb
xchg
xchg
push
push
movsl
mov
cltd
mov
mov
les
subl
and
insl
mov
mov
sub
mov
jge
fcomp
cmp
jg
aam
pop
nop
test
mov
aas
dec
testl
arpl
cs
pop
popf
add
xor
mov
cmp
stos
faddl
daa
in
mov
mov
push
insl
add
push
xchg
adc
push
fstps
or
push
jp
dec
sbb
les
gs
lcall
jg
pop
sbb
inc
divb
lock
pushf
stc
sub
aad
int3
push
mov
mov
xor
jns
xchg
sub
jp
adc
push
jo
sbb
fmuls
adc
lret
es
mov
testl
les
cwtl
dec
lahf
sbb
xor
popa
ret
jae
aam
jns
js
adc
add
cmc
push
lds
inc
in
sub
inc
repz
sbbl
push
adc
adc
push
dec
and
sarb
xor
cmpsl
adcb
mov
scas
xor
scas
xchg
hlt
pop
pushf
imul
fisubrs
cs
adc
lods
and
add
cmp
push
jae
mov
mov
fwait
mov
sub
int
cmp
in
fisttpll
into
mov
imul
enter
popa
push
ljmp
xor
mov
pusha
sbbb
jb
pushf
mov
xchg
test
mov
outsl
insb
inc
push
ljmp
jle
inc
out
inc
pusha
cwtl
shll
jg
cmp
daa
leave
mov
fdivrs
mov
inc
jae
push
mov
push
iret
rorb
mov
popf
scas
dec
test
xor
xor
jno
in
cmc
shl
mov
push
ljmp
insb
ss
rcrl
or
imul
mov
ror
pop
jb
add
adc
ja
cwtl
inc
cmc
cli
sbb
sub
mov
leave
cmp
iret
stc
or
mov
lds
lret
xchg
ret
xchg
push
lea
or
mov
icebp
push
jo
shrb
xchg
inc
out
jbe
aad
mov
fucomip
test
xchg
lock
nop
pusha
adc
lcall
xor
mov
mov
ds
sub
pop
sbb
rcll
mov
or
repnz
test
cld
aaa
or
sahf
pop
pusha
push
push
jl
out
sbb
cmp
xor
jnp
jecxz
dec
lret
or
dec
xchg
aam
fwait
scas
test
jge
xchg
fs
cld
data16
xchg
xchg
jmp
and
xchg
sbbb
rcrb
ss
fs
icebp
stc
xor
xchg
xor
mov
scas
nop
pop
sbb
scas
sbb
pop
aaa
mov
ficoms
xchg
pop
pop
push
imul
movsb
fdivl
push
lcall
pop
pop
imul
fsub
xchg
add
pop
inc
push
mov
clc
and
xor
or
popa
mov
pop
fcmovnb
dec
inc
insl
push
sbb
out
nop
orl
es
push
lods
pop
pop
mov
and
mov
je
mov
mov
mov
int3
out
dec
mov
clc
sbbl
mov
test
xlat
idivl
adc
int
stc
pop
lods
and
add
and
jo
dec
insl
ret
xchg
push
in
or
leave
out
xor
cmc
loopne
cmpsl
xchg
int
sub
mov
jecxz
mov
dec
xchg
cmpsl
jae
add
dec
movsl
lock
in
outsl
jmp
sbb
push
fscale
xchg
add
sbb
push
push
test
add
add
test
mov
jg
lcall
jg
ja
inc
std
mov
in
dec
shlb
hlt
mov
aad
test
mov
adc
xor
sbb
into
ss
inc
dec
filds
push
jecxz
sbb
popf
mov
lret
mov
jle
mov
mov
jnp
loop
mov
nop
pop
mov
mov
dec
das
shlb
lahf
adc
das
cltd
cmpsl
mov
nop
or
aas
add
jp
dec
in
in
orl
lock
add
mov
inc
daa
mov
cmpl
sub
jg
insb
dec
dec
clc
shlb
ds
adc
arpl
push
popa
jl
ja
aad
push
push
xchg
nop
out
loope
les
inc
fmulp
mov
repnz
inc
call
nop
mov
mov
mov
inc
jmp
popa
loopne
bound
sub
mov
sbb
inc
mov
cmc
je
loopne
out
mov
xor
lret
push
cltd
xor
jecxz
jl
push
fists
loope
mov
idivl
jmp
std
inc
cmp
in
lods
loopne
lea
fs
sub
pop
mov
inc
pop
stc
mov
dec
xchg
dec
aam
aad
lcall
jnp
ds
xorb
adc
lret
movl
inc
sub
fwait
scas
xor
add
imul
stos
mov
push
or
inc
cltd
mov
dec
popa
int
pop
mov
adc
pop
negl
inc
sbb
push
xchg
push
jbe
inc
cmp
push
mov
icebp
rorl
insb
ret
mov
mov
out
or
cmpsl
popf
in
lahf
out
push
mov
fmull
push
jmp
mov
add
mov
call
aad
ret
xchg
dec
mov
jo
mov
mov
test
pusha
pop
xor
mov
fidivrl
xchg
add
cmp
sbb
cmp
inc
aas
or
scas
push
pop
jl
out
pop
xor
adc
sbb
cmp
cltd
xlat
pop
push
sbbl
add
push
mov
ljmp
aam
pop
xchg
push
frstor
inc
lock
cmp
jb
scas
lods
mov
push
xchg
dec
mov
jnp
push
mov
loopne
out
add
fwait
mov
or
jo
jp
scas
xchg
int3
lods
outsb
xchg
cmpsl
xor
pop
jge
out
outsl
fnstcw
stos
push
cmp
out
gs
ss
loopne
fwait
mov
cmc
pop
jbe
xor
lret
icebp
jnp
cld
aas
lea
sbb
loope
and
arpl
daa
jno
inc
pop
pushf
mov
xor
inc
dec
test
mov
or
shrb
dec
enter
xor
xor
xor
repz
jns
leave
or
idivl
xchg
or
pop
jl
out
xor
cmp
and
mov
xorb
pop
pop
sbb
fwait
lods
sbb
adc
aas
stos
cli
sub
dec
xlat
jo
movsl
in
xchg
sbb
add
lcall
out
test
jmp
js
popf
ffreep
xor
mov
int
bound
rcrb
mov
mov
mov
pop
push
mov
xchg
js
cmpsl
repz
sub
xor
lods
je
push
shl
xor
cmpsb
xchg
add
xor
orb
or
inc
out
dec
pop
xor
les
and
cltd
xchg
rolb
jmp
add
jecxz
test
mov
adc
xchg
lahf
call
hlt
push
fisubrl
test
imul
mov
sbb
into
mov
adc
pop
jb,pn
gs
jmp
inc
inc
in
ret
mulb
xchg
xor
jno
pop
mov
cmp
and
jecxz
test
nop
gs
push
jne
insb
cmp
dec
fadds
lret
or
insl
mov
pop
insb
nop
jne
jge
and
mov
and
and
popa
adc
inc
outsl
and
jae,pt
aad
and
xor
sub
mov
daa
xlat
xor
loopne
lret
js
imul
pop
jle
fwait
sub
mov
mov
out
push
and
xor
aas
sub
ret
jno
mov
inc
fisubrs
and
sahf
add
hlt
aaa
cmp
inc
xchg
mov
xchg
jmp
add
mov
stc
pop
pop
fdiv
aad
aaa
mov
mov
imul
jp
or
push
cmp
movsl
pop
in
jg
push
mov
add
repz
out
clc
jmp
nop
dec
in
or
push
adc
jl
ja
mov
andb
enter
sub
push
dec
and
mov
xor
dec
popf
dec
sub
cltd
xor
sbb
mov
fstpl
push
xchg
cmp
inc
dec
sbb
dec
dec
or
ja
imul
sbb
and
jmp
repz
push
clc
sbb
out
sub
jb
arpl
sbb
jmp
shlb
je
sbb
out
sub
aad
cmpb
cmp
mov
in
test
movl
jp
bound
adc
cltd
pushf
es
push
shrb
cli
pop
adc
paddsb
test
jge
mov
jne
into
clc
sarb
je
sub
das
ja
scas
mov
ret
mov
inc
cmp
fdivr
xchg
mov
call
shl
mov
testb
imul
test
jecxz
imul
jbe
dec
loopne
aaa
aas
dec
inc
in
mov
stc
or
push
cmp
aas
sub
or
stos
jmp
es
jno
push
mov
inc
sub
dec
fistpl
jg
pop
push
notb
imul
xor
push
int
loopne
imul
lcall
in
xchg
sbb
iret
shll
jae
sbb
jmp
decb
loope
cmp
jo
cmp
mulb
test
mov
lods
outsb
xchg
shlb
outsl
sbb
jge
xor
imul
mov
hlt
adc
out
ja
fbstp
mov
pop
mov
push
adc
nop
push
xor
out
cmpsb
mov
lods
or
jle
pop
push
cmp
add
shl
inc
adc
mov
pop
mov
cmp
into
jp
jg
adcl
adc
fwait
cld
and
cmp
push
lea
clc
xchg
ljmp
push
pop
inc
add
cmp
in
pop
incb
xchg
stos
jb
jmp
xor
cltd
mov
push
adc
lcall
imul
push
jp
sub
mov
ljmp
dec
clc
inc
rolb
mul
in
push
movsb
enter
cld
outsl
or
inc
jg
fisubl
hlt
mov
jno
lds
pop
jb
adc
mov
jns
inc
sbb
cmpsl
dec
div
pop
jnp
pop
push
mov
sub
xor
ficomps
popa
xor
add
or
mov
push
push
pushf
mov
lret
jne
dec
outsl
repnz
outsl
cmp
or
loope
lock
xor
and
push
and
stc
inc
jge
jb
mov
pop
jecxz
jo
xchg
pop
xlat
push
mov
adc
mov
test
int
cwtl
or
xchg
aaa
jmp
xchg
dec
in
sbb
xor
xor
imul
cmpsb
push
rorl
fcoms
xor
orl
push
aad
lret
push
jge
enter
and
jecxz
or
mov
xchg
insl
adc
test
dec
in
jmp
nop
in
rcrb
cmpb
sbb
ret
test
mov
push
inc
cmpl
cmp
rolb
sub
andb
subb
ljmp
adc
xchg
ss
insb
xchg
and
xor
sbb
js
mov
sub
adc
ror
mov
stos
je
popl
mov
andl
fldl
mov
pop
insl
mov
cmp
inc
das
out
jmp
lock
popa
and
jno
mov
in
mov
xchg
insl
imul
movups
jbe
daa
jae
imul
cmp
mov
push
cmp
ss
push
lahf
or
fstl
cmp
ret
pushf
sub
stos
js
sub
pop
rcll
sub
inc
and
js
and
negl
push
fsubrp
data16
xchg
jle
aad
gs
js
pusha
in
xchg
add
fstps
mov
cltd
sub
fs
insb
xorb
add
push
push
mov
fadds
add
mov
cwtl
xlat
sbb
shr
sub
dec
ljmp
out
sbb
jo
mov
mov
test
daa
push
roll
int
xor
mov
jo
mov
xor
or
pop
and
rcl
inc
sbb
repnz
imul
sahf
mov
int
push
push
mov
push
xchg
push
lock
test
sub
xchg
shll
faddl
mov
mov
push
mov
mov
bound
je
call
js
aam
hlt
jl
add
cs
pop
cmpsl
rclb
test
mov
jecxz
jbe
loop
testb
and
std
in
sbb
cmp
mov
xor
jnp
xchg
and
xchg
and
mov
push
into
loopne
adc
xchg
int
repz
popa
xor
out
leave
fwait
xchg
stos
mov
pop
lret
imul
scas
xor
dec
out
mov
dec
mov
test
outsb
add
push
rorb
add
cmp
mov
cmpsl
in
add
rcrl
sbb
fsubrs
dec
int3
inc
inc
inc
repz
enter
dec
repz
es
lret
and
inc
inc
adc
int3
mov
stc
out
lret
inc
ficompl
test
adc
arpl
adcb
andl
push
shlb
mov
sbb
sub
addr16
jmp
fiaddl
sub
ret
pusha
sbb
bsf
mov
insl
ljmp
andb
cmp
pop
jp
ficoml
lods
adc
lea
xchg
inc
pop
pop
push
mov
jnp
lods
lock
mov
and
hlt
fnsave
fidivl
scas
add
xor
std
popa
clc
xchg
push
xor
ret
rolb
jle
rol
mov
jb
in
pop
mov
xchg
mov
jo
and
es
and
mov
mov
jb
rcrl
fildl
cli
adc
mov
orl
iret
sub
lcall
mov
call
cmp
sbb
dec
inc
dec
imul
jge
ret
lahf
pop
mov
cli
ret
mov
out
ljmp
push
add
pop
imul
in
add
dec
mov
xor
or
xchg
fistpll
aad
mov
movsb
xor
aad
push
xchg
fistpll
mov
test
mov
jecxz
xor
lea
mov
push
pop
test
fcmovnbe
jl
jg
inc
bound
mov
stos
enter
add
fistps
out
lret
ja
or
fsubl
fistl
push
or
jne
pop
dec
add
jp
call
aam
scas
scas
dec
icebp
sub
out
out
dec
lods
mov
or
mov
aam
jo
push
cmp
sbb
faddl
frstor
std
xlat
test
push
xlat
scas
push
gs
push
add
inc
cltd
int
cmpsl
xchg
push
cmpsb
rcll
icebp
xchg
push
mov
or
pop
xchg
inc
repz
loopne
test
mov
lret
and
adc
call
dec
scas
cmp
lods
repz
shl
cmp
or
arpl
xchg
mov
iret
je
divb
std
mov
aam
imul
push
es
mov
cmp
and
jge
or
push
xchg
sbb
cmp
loope
add
ret
jp
imul
jmp
pusha
popa
mov
xchg
and
push
pop
cmp
xchg
je
pusha
inc
jp
xchg
mov
ja,pt
jmp
jg
movsl
lcall
sbb
sub
mov
cmp
cmpsb
inc
adc
stc
arpl
dec
mov
aas
dec
mov
sti
ret
aad
jl
imulb
popf
push
cmp
rorb
pop
loopne
jge
sub
or
inc
xchg
cltd
nop
rclb
inc
frstor
rcll
arpl
ljmp
daa
xrelease
fstpt
ret
sbb
test
inc
stc
sbb
xlat
cmp
in
sub
jnp
or
shrb
scas
test
xor
lock
sbb
aaa
sbb
fmuls
shrb
and
int3
pop
mov
leave
in
es
inc
es
vpsubw
xchg
pop
ret
push
stos
xor
into
lods
test
push
mov
dec
aas
fsubrl
lds
pop
lret
adc
push
jg
sub
aad
in
lahf
fwait
in
or
and
push
gs
jb
jns
inc
or
outsb
xor
lahf
dec
mov
cs
mov
enter
adc
mov
es
sbb
and
cmp
mov
es
leave
stos
push
dec
xor
xor
sarl
pop
pop
sub
sub
fildll
lods
sbb
cltd
iret
push
orb
enter
stos
mov
jle
pop
loopne
insb
mov
imul
lcall
js
xchg
push
mov
mov
mov
pop
or
and
pop
and
jmp
add
adc
ficompl
enter
jbe
inc
add
pop
in
adc
mov
jp
or
mov
std
or
out
xor
mov
xchg
jb
into
sub
insb
test
push
aad
sbb
clc
mov
les
or
inc
xchg
inc
lahf
insl
sbb
mov
cld
lods
push
or
sub
cld
and
cmp
ret
shlb
fdivs
int
shll
adc
cmp
push
mov
stos
jne
adc
fmull
jmp
mov
push
xor
jmpw
mov
mov
and
push
push
dec
inc
add
fsubrl
cmpl
cwtl
xor
fwait
and
mov
cmpsl
clc
je
mov
pop
enter
sbb
in
dec
popa
add
mov
jle
hlt
adc
ss
jae
js
pop
in
inc
faddl
cltd
fisubl
lds
add
dec
push
sub
jp
jb
mov
add
or
gs
mov
push
iret
push
insl
mov
dec
ja
sub
mov
push
sub
call
clc
iret
push
lods
jb
mov
lds
adc
inc
lret
mov
ret
pop
inc
insl
and
or
repz
pop
lret
sbb
and
filds
out
shrb
adc
mov
dec
hlt
mov
xchg
jg
es
ds
enter
mov
lods
xchg
add
fisttpll
push
les
js
aam
sbb
ret
sbb
push
jno
popf
flds
mov
mov
cltd
dec
inc
shll
shrl
loop
cwtl
shlb
lock
jnp
mov
shrb
adc
xchg
inc
mov
ficoms
out
xchg
cmp
mov
pusha
lcall
in
adc
sbb
sbb
test
pop
gs
push
bswap
cmc
and
dec
notb
mov
lods
in
mov
mov
movsl
call
mov
and
test
cmp
fdivs
jbe
roll
or
aas
inc
mov
lret
adcl
aas
mov
loope
jnp
pop
mov
inc
stos
jno
stc
lds
daa
sub
test
mov
in
mov
fmull
out
cmpsb
jb
mov
push
movsl
or
aad
push
pop
sti
icebp
xchg
out
fdivs
cmpl
push
mov
adc
jno
mov
dec
or
call
pusha
mov
sbb
cmp
or
lods
and
jnp
mov
sbb
stos
mov
inc
push
or
xor
int3
xor
cs
aad
sbb
js
and
dec
mov
fwait
test
push
loop
es
fwait
mov
mov
nop
rcl
imul
shr
jne
push
xor
scas
push
inc
xchg
sysret
mov
mov
mov
stc
mov
call
xor
mov
mov
outsl
xchg
data16
jnp
addr16
jnp
stc
push
xor
mov
out
or
lods
mov
nop
ds
jmp
and
adc
lret
mov
push
das
inc
push
xchg
mov
lahf
lahf
shlb
shl
fimuls
pop
xor
lods
mov
mov
iret
mov
cltd
aaa
pushf
dec
jns
mov
sub
es
stc
cmp
or
test
rcl
dec
jnp
lea
out
hlt
mov
int3
mov
fs
and
push
scas
jecxz
fisttps
xchg
sti
je
nop
jae
jle
dec
or
sbb
fwait
cwtl
inc
outsl
cmp
inc
enter
add
mov
cmp
ret
and
sub
jl
insl
jbe
xor
mov
out
and
push
rcrl
lahf
loope
stc
jle
pushf
xor
addr16
inc
rcrl
xor
push
lods
test
scas
mov
mov
fdivs
pop
add
mov
xor
inc
cmpsb
push
clc
pop
inc
ds
cmc
xchg
push
and
xchg
sub
push
loopne
imul
sbb
iret
push
add
divl
xchg
mov
out
loopne
adc
add
push
ljmp
or
outsb
mov
adc
out
xchg
in
rorb
sub
pusha
ret
test
sbb
mov
setne
outsl
movb
scas
stos
push
leave
mov
ja
jmp
sti
nop
popf
jl
jns
in
or
dec
repnz
icebp
jmp
sbb
insl
repnz
mov
inc
push
and
mov
ror
or
adc
repnz
mov
out
pop
arpl
jns
pop
or
pop
jns
je
out
bndstx
and
pop
lcall
pop
jnp
or
stos
adc
push
dec
std
dec
popa
sbb
stos
xor
ss
and
mov
mov
xor
ret
mov
sahf
jo
push
inc
sub
pop
fldl
lea
jnp
cli
jb
mov
loope
pop
stos
push
jl
ja
pop
frstor
insl
push
xchg
repz
sar
ret
icebp
jl
aam
loop
jge
xchg
sbb
inc
lea
or
jp
pop
icebp
out
addb
dec
ljmp
je
dec
adc
lods
mov
pop
pop
pop
xor
inc
xchg
flds
mov
mov
aad
in
dec
mov
ljmp
std
cmp
push
loop
out
daa
pop
out
negb
and
mov
movl
dec
and
aaa
add
jnp
sbb
sub
fwait
aam
ret
cmp
je
push
outsb
in
into
sahf
xchg
jb
movsb
lods
mov
in
inc
ja
push
icebp
mov
add
out
mov
pop
loope
and
pop
inc
jge
shrb
dec
jae
insb
loopne
insb
shl
data16
jne
xor
fisubrl
mov
ljmp
xor
and
in
loop
int3
sbb
std
ds
add
ljmp
xor
xchg
sbb
dec
movsl
dec
pusha
cld
pusha
in
jecxz
pop
inc
sub
pop
repnz
test
lock
in
add
dec
jp
jno
mov
pop
and
cwtl
sub
push
pop
rcr
loop
inc
das
mov
mov
das
jne
fists
inc
mov
sbb
std
or
mov
sbb
push
pop
out
in
testb
xchg
push
pop
jge
hlt
mov
or
jp
sti
mov
fistps
mov
jecxz
call
sti
in
nop
sub
test
mov
sahf
push
addr16
inc
xlat
in
xchg
jo
xchg
xadd
pop
inc
and
and
fidivrs
mov
in
mov
jge
jecxz
xchg
mov
ds
int3
sbb
inc
or
int3
mov
mov
test
mov
xchg
rcrb
inc
fisttpll
xchg
rolb
xor
outsb
mov
mov
push
ss
stc
nop
stos
pushf
ds
mull
test
sub
fadds
fcompl
cmp
push
fstps
shlb
sbb
ret
push
repnz
inc
insb
into
aad
pop
cmp
addr16
aas
nop
lcall
add
ss
and
lods
daa
lds
outsl
in
test
dec
cmp
mov
cmpsl
shrb
push
xor
cmp
andb
movsl
jg
xor
add
adc
jp
inc
sbb
std
fiaddl
xor
xor
xchg
mov
xchg
dec
push
mov
mov
lret
sub
test
sbb
jns
lret
push
add
shll
aad
mov
mov
add
cli
stc
fs
daa
daa
or
dec
ficoms
sbb
dec
cwtl
push
adc
pop
pop
jle
cmp
hlt
out
ds
xor
xor
adc
in
loop
sbb
pop
jae
push
loopne
push
cwtl
sub
mulb
dec
mov
and
in
fmull
mov
rorl
sub
push
cmc
es
loopne
movsb
xchg
movsb
out
icebp
lea
cmpsl
clc
xor
pop
in
ret
loopne
pushf
adc
push
lret
inc
bnd
mov
les
push
pop
pop
pop
cltd
mov
insb
aad
adc
inc
or
in
push
in
std
movsl
or
adc
mov
test
out
mov
outsb
imul
pop
jl
nop
lds
daa
inc
cs
inc
movsb
mov
shrb
lods
dec
stos
jg
jle
lcall
xchg
arpl
push
lock
movsl
sbb
mov
push
outsb
xor
shlb
mov
pusha
lock
fidivl
jo
cmp
mov
fsubs
add
mov
push
aas
sub
cld
push
rorl
out
mov
and
xor
bound
pusha
popa
imul
insl
mov
xchg
mov
pop
push
mov
pop
pop
cmc
sbb
and
cs
ror
sahf
arpl
and
movsl
lods
adc
insl
negb
leave
movsb
jbe
fcmovbe
mov
push
icebp
cmpb
repnz
jecxz
sbb
sbb
mov
add
aas
nop
xchg
adc
push
mov
icebp
out
mov
xchg
mov
push
notl
clc
shll
ret
std
lock
outsl
jge
push
inc
cli
aas
fcoms
popa
pusha
into
mov
fstpl
lock
push
ret
test
mov
enter
lret
xchg
icebp
fimuls
push
push
dec
stos
lods
pop
adc
sub
and
es
and
mov
sub
decl
mov
mov
stc
aam
add
sbb
jp
mov
mov
mov
daa
xor
lods
cmp
dec
pop
into
sbb
in
jbe
jle
and
cwtl
test
out
out
mov
and
xchg
test
jb
xlat
or
xchg
mov
outsl
inc
call
jl
cmp
cmpl
mov
icebp
mov
fisttpl
std
nop
pop
sahf
ret
stos
mov
fnstcw
sub
mov
mov
repz
repz
ja
icebp
add
jbe
lcall
out
cmp
cwtl
test
inc
mov
cmp
enter
cmp
or
test
lock
push
pop
scas
rcll
jbe
test
pop
sbb
jecxz
ds
and
cmp
mov
and
xchg
cld
lds
pop
push
sti
mov
pusha
shrb
and
jne
jecxz
pop
jge
mov
cltd
fnsave
movsl
sub
sub
mov
sbb
test
sbb
xchg
push
popf
jae,pt
enter
std
es
call
arpl
push
and
mov
mov
sub
hlt
sarl
mov
out
ficomps
setb
repz
mov
inc
jmp
cmpsl
add
nop
xchg
and
scas
inc
jne
jg
pop
fcom
push
iret
mov
jae
into
mov
fstpt
xor
out
inc
fcomi
pop
scas
xor
jbe
test
lods
shll
adc
dec
fistpl
mov
clc
sbb
lret
mov
and
sbb
imul
test
jae
nop
movsb
ficoml
add
adc
jp
dec
xchg
inc
push
arpl
sub
sahf
push
push
loope
push
cwtl
or
rcrb
xor
mov
and
imul
adc
xchg
in
or
fistps
push
push
xchg
lods
sub
push
jae
adcb
jbe
mov
adc
insl
mov
es
icebp
xchg
push
push
aaa
aam
sti
and
sbb
outsl
gs
in
call
xchg
push
sbb
xor
adc
pop
or
fiadds
adc
add
jecxz
add
cmpsb
clc
or
lock
addb
std
push
push
mov
mov
xchg
adc
in
stos
mov
xchg
ljmp
cmpsb
es
inc
inc
je
mov
movsl
or
sbb
pop
push
scas
mov
sbb
or
sub
ret
jo
ror
push
fisttpll
andl
mov
push
scas
fisttps
mulb
sahf
aad
sbb
insl
in
cs
mov
cs
mov
iret
leave
lds
dec
testl
sub
js
sbb
cmpsl
mov
push
lahf
sub
insb
imul
pop
fisubs
xor
int3
imul
stos
mov
sbb
imul
xchg
and
out
leave
in
sbbb
neg
cmpsb
daa
dec
aam
js
enter
add
cmpl
sbb
fldt
ret
fimuls
rolb
ret
xchg
inc
adc
mov
fnstenv
mov
or
lock
push
jl
lret
cwtl
mov
inc
xor
and
cmp
mov
iret
mov
xchg
mov
dec
ljmp
inc
xchg
in
inc
jge
mov
sahf
lods
or
in
lods
cli
test
mov
in
inc
stos
mov
out
push
xchg
adcb
pushf
jne
jge
push
icebp
dec
loope
cwtl
pop
and
pop
insb
test
loopne
aad
dec
xchg
lds
cmp
mov
mov
shlb
cld
dec
add
add
rcl
xor
mov
fidivrs
xchg
adc
mov
xchg
mov
add
mov
add
pop
dec
sub
inc
rorb
xchg
push
bsf
aas
push
pop
into
mov
cs
push
cmpsl
xchg
subl
adc
or
insb
daa
xchg
lock
lret
cwtl
enter
ret
jmp
outsl
test
add
out
pop
fnstsw
insl
gs
int3
pushf
xchg
mov
xchg
cs
lret
call
xchg
pop
fcmovb
pop
mov
clc
inc
or
mov
jno
leave
or
xchg
bound
outsl
stos
push
adc
add
or
add
fnstcw
mov
fisubl
fistpll
cs
aam
or
push
pusha
movsb
int3
jae
pop
outsb
in
flds
stc
in
pusha
mov
mov
notl
pusha
pop
mov
xor
jae
cmp
adc
pop
movsb
in
call
xchg
pop
daa
scas
sub
popf
dec
les
dec
mov
mov
xchg
fstpt
mov
or
outsb
jnp
pop
sub
je
xor
pop
outsl
ljmp
inc
shrl
out
insb
mov
pop
mov
pushf
test
rolb
inc
ljmp
enter
sbb
mov
repz
sarl
les
test
movzwl
mov
adc
adc
xor
sub
pop
and
call
fidivs
push
iret
pop
inc
or
fcompl
mov
jge
loope
cs
bnd
lcall
outsb
fdivs
xor
sub
pop
xchg
inc
ja
insl
fwait
test
xchg
mov
mov
js
stos
pop
adc
movsl
push
fimuls
sarl
add
ret
push
add
adc
dec
test
and
sti
mov
pop
push
push
mov
rorb
dec
les
sahf
aam
ljmp
dec
rolb
sub
jo
inc
stos
cmp
adc
cltd
pusha
xor
adcb
dec
jo
outsb
add
mov
icebp
and
xchg
ds
mov
sub
insl
stos
aas
jbe
mov
jo
dec
ret
out
outsl
cmpsb
mov
mov
or
sub
nop
mov
mov
push
mov
inc
push
xor
inc
pop
and
test
lret
pop
sub
je
outsl
test
test
je
push
pop
fisubrl
pop
movsl
adcb
ljmp
mov
xchg
adc
sub
ficoml
pop
push
scas
inc
add
sub
leave
out
mov
jp
nop
cmpsb
jae
add
xchg
cmc
push
inc
jp
in
and
insl
add
test
dec
in
sbb
mov
das
inc
xor
bound
or
loopne
mov
in
push
rorl
aad
cmc
fadds
sbb
mov
jne
lods
enter
xchg
or
icebp
add
mov
xchg
and
or
outsl
stos
pusha
xchg
push
and
mov
xchg
ja
subl
pop
bound
popa
in
lret
jle
adc
and
or
mov
xchg
pop
xor
xor
movsb
fmull
mov
in
adc
loope
mov
ss
jns
loope
jg
push
mov
ds
mov
mov
xorb
pop
jae
xor
or
bound
sub
fistl
jo
jno
je
xchg
dec
jmp
sbb
repz
pop
clc
rcl
outsl
dec
mov
jnp
push
mov
and
jns
nop
adc
push
ss
out
xchg
mov
add
push
iret
out
nop
inc
repz
mov
push
ror
fsub
jmp
inc
add
jge
mov
add
xchg
cmp
xchg
cmpb
es
push
xchg
lret
ret
or
loopne
xor
adc
mov
testl
add
loopew
push
dec
stc
sub
xchg
inc
xchg
and
aam
in
inc
mov
scas
repz
outsb
sarl
sahf
std
and
out
and
xchg
inc
pop
or
repnz
adc
and
fsubrl
gs
daa
jbe
add
shll
cs
xor
fimuls
xchg
mov
data16
sbb
cltd
shrl
test
dec
mov
sbb
jecxz
dec
outsl
dec
daa
aad
cmp
sbb
push
cmp
call
std
loop
and
mov
push
push
sub
mov
out
mov
loopne
ret
and
ja
out
pop
mov
pop
mov
pop
fmulp
imul
jl
and
stos
inc
frstor
mov
jle
xor
jb
lcall
mov
xor
bound
fs
movsl
bound
pop
pop
hlt
fildll
rcl
sub
mov
js
xchg
mov
arpl
pop
aad
mov
stos
sub
repnz
gs
pop
mov
in
arpl
fistpl
add
xchg
jmp
push
iret
std
mov
adc
aaa
movsl
rcr
jg
and
mov
movsl
lds
cmp
outsb
sbb
dec
orl
add
scas
inc
cmp
stos
xor
loopne
outsl
ret
negb
sub
and
mov
fnsave
cmp
mov
push
sub
fidivl
pop
pop
hlt
add
and
mov
decb
out
das
xchg
fstl
repz
mov
mov
notl
adc
cmp
xchg
adc
imul
dec
xor
mov
mov
pop
rcrl
cmp
in
cmpsl
cmp
out
xchg
mov
mov
and
stos
mov
loope
and
sbb
mov
and
test
sub
sbb
add
xchg
outsl
mov
pop
fidivs
rcrl
pop
hlt
das
and
in
les
jnp
sub
out
inc
and
lcall
sub
out
into
je
dec
xchg
inc
xor
fdivp
out
lret
ds
call
jns
paddusw
xlat
pushf
stos
push
lea
cltd
mov
std
enter
sub
and
add
or
adc
mov
shrl
dec
and
repz
test
dec
add
cmp
sub
mov
jge
stos
in
xor
dec
jmp
mov
cld
xchg
push
pop
jecxz
push
movsl
shlb
int
mov
sahf
mov
adc
clc
enter
adc
leave
xor
icebp
sub
inc
fs
add
jmp
sub
imulb
insl
and
dec
das
lcall
dec
js
push
repnz
cltd
scas
sbb
data16
addl
cmpsl
int3
mov
lds
fisubrs
sbb
xor
push
mov
push
jle
sbb
aam
nop
jle
xchg
mov
xor
mov
cmp
iret
aas
inc
cmp
loopne
cmpsl
inc
loop
and
arpl
xlat
outsb
mov
cmp
sbb
jb
leave
mov
std
mov
jp
mov
shrb
push
fcom
stos
ret
and
adc
in
or
mov
jns
frstor
imul
add
push
ret
bound
ds
pop
jo
xchg
inc
xchg
repz
cmp
add
mov
enter
sub
aad
lret
imul
mov
aas
pop
aam
or
fsubl
lods
sbb
pop
js
push
cltd
nop
test
aaa
and
cltd
xor
ret
adc
pop
cmpsl
int
sub
or
js
test
mov
in
jno
jae
mov
out
mov
mov
jns
mov
push
fs
adc
cmp
clc
cmp
push
cmp
cmp
int
repnz
call
lods
fmul
scas
leave
out
rorl
mov
jle
mov
and
xlat
and
test
push
and
or
clc
repnz
cli
inc
jle
sahf
ficoml
sub
sub
xchg
cmp
dec
lods
testl
jae
into
movsl
cmp
jb
rcrb
pushf
movsl
jmp
dec
movsl
data16
push
cwtl
pop
es
inc
fdivl
jecxz
mov
adc
fmul
ficoml
xchg
push
cmp
out
inc
inc
gs
scas
mov
push
push
int3
je
adc
inc
sub
negb
aaa
push
xlat
push
lds
ret
repz
inc
xor
repnz
outsl
add
fs
inc
mov
fstpt
lock
fisubrl
and
shll
cwtl
neg
loop
push
out
test
lods
push
xchg
repz
sbb
lods
sar
sbb
leave
sub
repz
xlat
sub
icebp
fstpt
push
push
das
or
negb
adc
xchg
cwtl
jbe
pushf
lods
cmp
push
xchg
fstpt
xor
enter
inc
mov
xchg
dec
and
roll
test
adc
hlt
ficoml
jl
shl
ss
mov
adc
lret
cmp
and
sub
gs
xor
pop
mov
outsb
xor
sub
pop
xchg
div
and
sub
aas
sarl
mov
movsb
movsl
sahf
movsb
xor
mov
jmp
mov
add
out
push
sub
pop
mov
cmc
in
and
fisttpl
or
dec
inc
sub
and
in
mov
jno
inc
out
xor
nop
push
or
stos
push
aad
enter
outsb
das
out
cld
outsl
push
sub
dec
jmp
in
jp
shll
lods
notb
mov
lock
cltd
add
pop
loop
cmp
xor
call
fcomps
les
lock
sarb
xchg
cmp
icebp
add
mov
cli
mov
decb
sub
xlat
push
bound
mov
leave
fs
imul
cld
lcall
dec
daa
xchg
xor
add
xchg
in
imul
mov
adc
and
mov
shlb
adcl
and
jb
insl
popf
xchg
into
stc
enter
mov
cmp
push
sbb
outsb
mov
out
push
push
insl
mov
shl
fwait
in
xor
adc
pushf
jo
fnstcw
push
and
popa
inc
mov
icebp
aad
je
add
iret
push
insb
mov
dec
push
das
jle
xor
imul
mov
pop
sbb
xor
jl
jns
jl
add
out
mov
shrd
sahf
mov
sub
sub
mov
xorps
mov
das
jb
add
in
or
and
ja
mov
dec
push
push
loope
popa
das
aad
add
mov
and
sbb
out
dec
iret
inc
sub
and
jecxz
cmc
leave
shr
sub
jmp
jg
jne
fstp
jns
loope
repnz
test
jl
cmp
dec
adc
add
xchg
xchg
or
push
or
cmp
jecxz
cs
sub
daa
dec
lods
std
mov
add
xorb
sbb
rorb
test
imul
inc
push
cld
pop
mov
adc
sbb
int3
scas
jmp
arpl
popa
xchg
push
bound
hlt
xor
xchg
jne
mov
inc
enter
ljmp
stos
push
les
loope
inc
retw
mov
rolb
lods
shll
in
xor
push
outsl
push
cld
inc
inc
aad
sahf
jbe
sub
sarb
rcrb
push
jp
icebp
cwtl
cwtl
testb
stos
icebp
cld
mov
fcmovb
cltd
jg
lea
pop
mov
cmp
mov
in
lret
out
pop
adc
jb
mov
adc
out
imul
decl
mov
movb
and
bswap
lds
xchg
add
rcrl
xor
push
mov
mov
mov
adc
aaa
push
xchg
add
icebp
lret
fnstsw
jns
popa
adc
adc
mov
inc
mov
scas
int
rcrb
jb
cltd
jmp
push
lods
in
or
jno
mov
loope
sti
push
icebp
add
xchg
xchg
aaa
sbb
push
dec
pop
push
lods
cmp
mov
sti
andl
and
push
adc
fbld
fidivrl
loopne
das
push
xor
push
jb
leave
jle
test
jg
jo
push
or
dec
dec
scas
lahf
in
add
cmpb
into
jbe
dec
mov
xor
push
mov
xchg
inc
push
mov
movsb
pop
pusha
mov
in
push
int3
insl
pop
xchg
ss
inc
popa
or
andl
mov
mov
lcall
mov
sub
ss
cmp
subb
lods
sub
int
jle
shll
insl
jae
sbb
sbb
or
fucomi
testl
sbb
inc
fistpll
push
jnp
jae
gs
sbb
push
inc
inc
push
pop
or
adc
xor
outsl
dec
jmp
lcall
mov
xchg
xchg
ja
int
sub
enter
push
call
xchg
std
stos
jecxz
push
ljmp
call
jle
in
cmp
lahf
mov
mov
xchg
ja
add
jmp
lods
faddl
daa
xchg
outsb
outsl
mov
ret
cmc
in
inc
daa
cmp
dec
and
inc
inc
mov
cmp
pop
sti
ret
mov
pop
movsb
or
es
mov
jns
xor
or
test
aaa
movsl
pusha
push
out
popf
jp
xchg
je
cmp
adc
addb
or
scas
jp
pop
daa
adc
in
ud1
or
syscall
jp
and
lods
inc
fs
mov
test
sahf
and
fldenv
mov
adc
lret
out
rcl
out
or
arpl
mov
js
xor
dec
loopne
data16
inc
and
int
jle
dec
add
das
dec
jb
mov
aas
rcl
ret
rcl
and
mov
dec
rcrb
or
or
std
mov
sbb
or
rcrb
dec
fcmovnu
pop
inc
aam
mov
imul
mov
or
push
jg
mov
imul
push
push
cs
dec
jg
jmp
mov
xchg
mov
and
lods
push
fidivrl
mov
pop
or
leave
push
fsubs
sub
mov
adc
mov
cmp
stos
add
adc
adc
sub
scas
jg
int3
add
xor
mov
lret
add
and
pop
lods
sub
les
sbb
push
and
fisttpl
cmpsb
pop
in
nop
test
icebp
gs
aas
dec
and
cld
jecxz
or
jp
jg
inc
lods
bound
push
movsl
fsubs
push
mov
loopne
inc
push
js
call
mov
sub
es
dec
flds
xor
sub
call
frstor
sub
jmp
lret
or
rol
jbe
jg
dec
pop
jge
jge
mov
sbb
dec
push
xchg
cli
les
xlat
push
sbb
pop
fsubrl
cltd
mov
insl
xchg
lret
adc
inc
mov
lods
sbb
and
fisttpl
cltd
aaa
jg
pop
es
dec
sbb
xchg
mov
push
push
incl
in
mov
or
es
jb
imul
mov
inc
loope
cmpb
add
pop
lock
aam
or
adc
cld
cld
test
call
mov
leave
cmp
sti
cmpsl
sbb
sti
adc
dec
rclb
nop
icebp
mov
iret
cld
sub
jno
jno
aam
arpl
in
inc
cmp
rcrb
and
sub
fistpll
cli
clc
lods
adc
imul
add
pop
loopne
in
in
xchg
repz
lcall
sub
push
jno
sarl
cmp
add
cmp
cmp
ljmp
in
push
out
and
sub
adc
mov
iret
clc
popa
pop
sub
mov
cmpsb
jl
pop
shll
inc
add
sub
in
cmpsl
lahf
loop
test
pop
gs
lret
inc
sti
jno
lret
xchg
or
sti
sub
cmp
filds
mov
pop
cmp
push
jno
or
push
xchg
fstpl
sahf
or
xchg
idivb
mov
cli
add
jp
insb
add
lds
mov
sbb
out
xorl
insb
dec
push
adc
je
sbb
push
xchg
aam
clc
enter
inc
ja
cmp
push
add
loop
in
xlat
mov
pop
jge
lcall
cmp
scas
lret
mov
mov
xor
out
sub
mov
ret
mov
or
sbb
inc
mov
decl
push
xchg
lret
ds
xchg
pop
outsl
fdivs
mov
rol
adc
dec
mov
sbb
out
dec
jge
jecxz
mov
inc
dec
hlt
or
push
pushf
fnsave
leave
cld
xor
enter
sbb
xor
fldt
fsubrp
dec
enter
cwtl
jmp
jbe
daa
push
pop
jp
rolb
or
cwtl
jns
dec
aad
dec
dec
mov
shr
idivl
pop
xchg
fldt
or
dec
enter
push
push
push
dec
das
pop
cmpsb
or
mov
lock
in
ret
add
push
xor
lea
mov
out
out
push
fs
inc
xchg
rcl
pop
fucomip
xlat
add
test
or
and
adc
xor
sub
jge
loope
popa
rcrb
data16
sub
jmp
jl
mov
out
sub
mov
fidivl
mov
pop
gs
dec
jecxz
sub
ljmp
cmp
sub
and
adc
or
xchg
insb
inc
ret
xlat
pop
mov
jecxz
icebp
mov
mov
std
mov
push
hlt
xchg
stos
rcrl
sahf
outsb
fld
dec
cmp
daa
adc
mov
and
outsl
dec
pop
and
push
pop
insl
mov
shr
adc
fwait
lods
in
push
sbb
pop
sbb
cltd
scas
push
push
jns
push
xchg
daa
repnz
daa
inc
rcrl
out
jecxz
fs
fdivr
jmp
xor
adc
aam
jmp
add
scas
jge
lret
sbb
xor
int3
cmp
cmpsl
in
jnp
test
js
fadds
daa
adc
test
mov
pop
js
mov
push
test
bndldx
int
add
jg
and
or
cmp
mov
fistl
cmp
sbb
xchg
ficomps
fs
and
std
repnz
movsb
stos
scas
xor
mov
dec
mov
dec
inc
jle
dec
clc
push
adc
cmc
lret
jae,pt
add
icebp
aaa
lahf
subb
repz
outsl
std
ljmp
dec
push
pop
sbb
pop
cmp
stc
mov
arpl
cmp
scas
shrl
dec
jne
in
sbb
testl
aam
dec
sbb
xchg
xchg
fiaddl
div
lret
mov
sub
dec
push
cmp
lods
push
push
mov
dec
mov
pushl
jae
pop
xchg
mov
andb
stos
sub
sub
ljmp
inc
or
xchg
fcomp
mov
aaa
xlat
or
xor
in
sbb
ret
adc
imul
aad
mov
add
push
aaa
adc
fidivrl
sbb
fs
jnp
push
pusha
test
mov
jbe
ds
xor
and
ret
sub
or
jae
xchg
xlat
jg
lods
into
lret
mov
push
ficompl
les
cld
ret
fisubl
sarb
pop
sub
cmpsl
dec
push
xor
push
leave
orl
shlb
mov
dec
fmulp
and
adc
xchg
fcompl
mov
repnz
cwtl
push
mov
and
pop
cmp
inc
cmp
or
and
shl
hlt
mov
mov
call
scas
xor
adc
xchg
sub
push
rolb
xor
sbbb
cmp
cld
std
testl
jecxz
jno
movsl
cmp
jl
cs
imul
dec
cs
out
aam
mov
data16
ret
lea
dec
or
inc
jae
xlat
jnp
xor
add
fisubs
push
in
push
adc
cmpl
bound
inc
lock
mov
aam
xchg
mov
in
mov
std
loope
repz
dec
ret
call
push
sbb
sbb
stos
mov
rcll
loop
pop
cmp
mov
mov
outsl
pop
lahf
out
xor
xchg
sbb
inc
jp
sbb
jl
popf
movsl
xchg
push
stc
jl
pop
adcb
rolb
das
and
cltd
dec
dec
enter
mov
and
mov
lods
sub
or
fs
sub
mov
push
add
lods
mov
or
and
dec
xchg
adc
mov
clc
idivb
push
jmp
ss
xor
xchg
jo
fisubs
jg
add
rcrl
and
pop
rcrb
decl
fucom
out
xor
cs
mov
idivb
pop
das
ja
push
pushf
fcompl
stos
inc
dec
inc
fisubrl
in
outsl
repnz
add
inc
mov
push
and
out
pop
jmp
sub
inc
jmp
icebp
in
loope
cmp
aaa
lret
ret
add
push
fisubrs
aam
popa
push
adc
add
aad
movsl
xchg
shll
cmp
inc
jbe
and
xor
fisubs
lock
addb
mov
mov
sti
test
add
dec
sub
decb
push
sbb
and
bound
dec
shlb
aas
mov
icebp
mov
lret
push
cmp
and
xor
aam
bound
ret
pop
xor
test
pop
mov
cwtl
stc
aam
addb
mov
lods
es
pop
ret
mov
scas
aam
pop
jp
test
movsl
adc
mov
pushf
cmc
rolb
push
xchg
sarl
cltd
mul
shll
mov
cmp
sti
cmp
add
mov
mov
and
sahf
jae
jge
xor
in
scas
loopne
out
sbb
or
add
adc
test
sti
xchg
js
and
call
cli
pop
in
lods
jg
incl
sbb
lods
add
mov
add
jle
pop
mov
cmc
out
adc
mov
test
push
das
push
mov
subl
pop
dec
adc
out
add
adc
scas
adc
mov
in
mov
iret
jbe
jb
sahf
fistl
xchg
cmp
leave
jmp
lcall
add
rcll
test
add
lock
test
sub
sti
xor
mov
fwait
inc
lret
push
lods
testb
std
pop
aaa
or
loop
adc
pop
jp
mov
repnz
mov
out
shlb
xor
lret
xchg
add
fisttpl
stos
mov
out
test
or
shrb
xchg
xchg
add
or
lds
fs
inc
mov
push
jecxz
inc
adc
sbb
repnz
nop
fs
popa
cwtl
cmp
dec
or
and
pop
add
int3
shrb
sbb
pop
pop
je
imul
sub
xor
xchg
insl
rcrl
add
shll
sahf
ret
mov
clc
das
sbb
inc
scas
popf
pusha
icebp
add
stos
loopne
dec
repz
sbb
outsb
in
and
or
jl
pusha
inc
in
cmc
inc
lcall
inc
std
pinsrw
call
mov
cwtl
mov
push
mov
pop
cli
inc
cmp
adc
mov
ret
sahf
sbb
data16
inc
mov
test
dec
aam
push
mov
fxam
mov
mov
ljmp
mov
popa
loop
xor
out
imulb
fcomp
cmpsl
dec
arpl
and
rcrl
xor
mov
jg
dec
or
mov
mov
je
sbb
aaa
repnz
pop
inc
outsb
es
nop
aam
pop
push
ret
popf
test
sar
xor
cmp
sub
mov
xor
mov
xor
cmpsl
jno
adc
iret
rcll
mov
aam
push
and
sub
sbb
jo
dec
pop
mov
loopne
adc
or
adc
cwtl
sub
sub
fnstsw
js
push
inc
loope
xor
sub
shll
add
jecxz
sub
push
sub
fdivs
rclb
jle
dec
lahf
pop
sarb
fmulp
jecxz
cmp
xchg
clc
inc
and
icebp
mov
rol
mov
movb
stos
ja
push
xchg
mov
mov
inc
adc
ja
and
insl
mov
cmp
negb
sub
movsb
cmp
mov
push
mov
push
insl
mov
std
push
subb
jl
or
pop
xchg
in
fwait
adc
or
insb
adc
test
scas
rcl
jae
lds
push
lea
sub
mov
cmpsl
insb
out
or
roll
out
loopne
push
ret
dec
test
push
mov
pop
sbb
xor
push
mov
fs
xchg
lret
push
mov
add
xor
lahf
push
jns
push
iret
or
les
sbb
mov
xchg
pop
push
lret
ja
push
nop
cltd
cmc
add
mov
sbb
jmp
test
inc
nop
and
xchg
test
in
mov
adc
jg
adc
sar
or
dec
inc
xchg
incl
pop
bound
jno
repnz
inc
jae
xchg
sbb
dec
xorl
fidivrl
shlb
stc
or
inc
push
jb
lods
add
nop
lcall
test
cs
push
call
push
add
cmp
lods
movsb
or
mov
aam
roll
push
xor
sub
jns
fmul
in
dec
ficoms
pop
dec
push
imul
out
sbb
dec
movlhps
mov
dec
jmp
cvtdq2ps
jne
ds
sar
rsqrtps
sub
push
lods
test
sbb
pop
mov
pop
inc
out
lea
xchg
cli
pop
add
jle
aaa
and
xchg
lahf
jne
dec
xchg
mov
daa
je
sbb
dec
scas
fs
mov
lds
sarb
jle
cltd
xor
loopne
inc
insl
lods
add
mov
mov
pop
movsb
mov
push
cs
xchg
clc
rclb
cld
arpl
sbb
sub
call
out
lods
mov
add
ret
inc
pop
dec
cli
cwtl
cmp
push
sbb
sar
jnp
daa
push
rclb
aad
nop
inc
ljmp
ret
and
mov
mov
dec
stc
arpl
xchg
push
mov
js
pushf
addb
lret
lret
xor
sbb
fsts
movaps
sbb
pop
add
mov
jmp
test
daa
dec
mov
add
into
add
xor
jge
push
clc
pop
adcb
fwait
push
inc
push
inc
or
aad
out
fs
xor
into
popl
adc
loopne
inc
int3
jmp
pminsw
mov
and
jmp
je
push
dec
lea
push
ror
cmp
cmp
popa
adc
dec
das
adcl
aad
aam
movsl
arpl
dec
je
and
out
pop
lock
jle
push
fisubl
les
cli
dec
dec
cmc
sub
out
xchg
push
sbb
lods
pop
mov
jle
scas
loopne
lods
loope
data16
cmp
loopne
inc
sarb
sub
movsl
popf
sbb
je
sahf
stos
xchg
inc
les
addb
pop
cmp
imul
subb
das
and
addb
mov
addr16
cli
pop
adcb
cmp
jecxz
xchg
adc
mul
or
mov
loope
mov
cmp
shll
jecxz
mov
std
lock
ljmp
or
xchg
push
les
ret
jmp
xchg
jae
cltd
nop
sarl
insl
les
sub
inc
loope
cmp
push
testl
enter
push
xchg
lods
lock
mov
dec
shlb
jle
inc
mov
daa
ficoml
xor
xor
stos
ja
jo
addb
insb
rcr
or
mov
xor
cmc
sbb
jle
xchg
sbbl
jae
call
mov
das
inc
mov
push
and
mov
movsl
ljmp
insl
mov
fs
stos
mov
dec
xlat
cwtl
int
jne
jno
sbb
pop
out
mov
inc
addb
xchg
in
inc
add
pop
mov
mov
pop
cmpb
cmp
inc
mov
out
sbb
inc
pop
mov
ret
roll
jae
aas
mov
sub
loopne
popf
je
mov
push
inc
fcompl
pop
pop
fsts
fsubrs
clc
cmp
test
sahf
xor
daa
sbb
sub
loopne
or
sbb
sbb
dec
and
sbb
mov
inc
jb
jg
adc
add
ss
ljmp
xlat
mov
popf
mov
pop
stos
jmp
pop
sbb
cmc
aad
sub
xorl
add
mov
loope
mov
or
add
sub
aam
adc
add
xchg
rorb
popf
push
jne
xchg
das
cmp
rorb
mov
stos
fs
repnz
lods
xchg
cltd
frstor
or
mov
mov
jbe
sub
mov
or
mov
aad
pop
jbe
mov
movsl
xchg
in
rolb
mulb
pushf
nop
push
cwtl
xchg
xchg
push
call
sub
dec
mov
fadds
mov
and
ljmp
stc
cmp
andl
mov
push
iret
sbb
mov
movsl
fstps
mov
or
adc
arpl
xor
xor
mov
jae
mov
xor
mov
test
sbb
push
nop
inc
fcmovnu
push
popa
sarb
dec
push
xchg
stos
pushf
dec
ficomps
das
sbb
mov
and
add
sbb
insl
movsl
dec
jo
in
cmp
mov
fildl
xchg
sub
adc
movsb
cltd
push
sbbb
scas
jge
roll
and
mov
push
or
add
lret
sbb
xor
fstps
cmp
mov
fcom
fadds
mov
enter
inc
push
push
call
pop
ss
pop
xchg
sub
mov
adc
mov
mov
cmp
mov
in
subl
sarb
jl
adc
pop
mov
ret
aaa
out
push
sub
mov
xchg
mov
inc
stc
andb
mov
cwtl
sub
push
icebp
adc
jbe
push
aaa
dec
cmp
xchg
pop
inc
dec
dec
jnp
scas
or
adc
imulb
orl
mov
cmpsl
mov
imul
push
sub
or
jne
push
jnp
pop
mov
push
imul
xchg
lods
pushf
add
cmpsb
cwtl
push
jecxz
mov
mov
fisubrl
jae
and
mov
loop
xchg
jae
jl
in
mov
jne
popa
mov
or
xor
mov
lcall
nop
cmp
lea
fs
daa
popf
jge
cmc
addr16
ss
mov
pop
pop
test
mov
faddl
mov
mov
jo
out
pop
xchg
or
mov
fistl
lock
testb
test
pop
sbb
cmpsl
mov
and
mov
mov
fcmovu
loope
adc
loopne
pop
jmp
cmp
push
cmp
mov
mov
sahf
add
or
es
lea
cmc
inc
or
daa
fwait
pusha
data16
mov
or
scas
sub
ret
aad
outsl
out
scas
out
les
cmp
rolb
nop/reserved
cmp
dec
push
xchg
test
rolb
mov
shll
jle
xor
mov
ds
imul
jbe
arpl
cli
or
sbb
or
sbb
dec
orl
shr
mov
sub
call
sti
or
xchg
pop
fdivl
mov
push
rolb
sbb
lods
cmpsl
out
pop
cli
sahf
add
inc
mov
xor
cmp
mov
pop
and
rclb
fidivrs
mov
sub
in
addl
mov
add
lds
jns
sub
push
cmp
adc
xor
mov
push
mov
xor
test
insb
cld
cmp
push
push
imul
jae
icebp
inc
xor
xchg
fdivrl
pop
cmp
mov
imul
pop
pop
stos
pop
mov
int3
fldz
adc
push
sub
mov
cmp
push
jecxz
pop
push
dec
es
jae,pt
loop
xorb
mov
scas
push
adcl
mov
and
popa
daa
adc
xchg
jmp
mov
pop
test
jno
mov
mov
sarb
ds
lret
out
push
xor
pop
ror
cmpsl
add
stos
js
inc
roll
xor
mov
mov
movsl
in
xor
xlat
inc
dec
loope
mov
jecxz
incl
repnz
dec
sub
add
inc
in
into
fsts
push
xchg
js
push
cmp
add
and
in
and
or
xor
pop
dec
adc
js
repnz
lods
cwtl
ret
popf
scas
imul
mov
cmp
mov
push
in
inc
insb
clc
or
out
mov
testl
test
sub
inc
iret
xchg
jp
das
cmp
dec
movsl
test
jmp
popf
xor
stos
js
repnz
rcrb
je
adc
add
adc
pop
mov
lds
and
leave
out
loope
inc
sub
ret
inc
mov
pop
sub
and
outsl
pusha
push
movsl
sbb
jge
xor
cmp
inc
add
pop
pop
add
mov
push
jl
jle
popa
xchg
loop
push
mov
mov
flds
pop
push
outsl
loop
sti
mov
xchg
or
daa
icebp
loope
loop
aam
xor
out
xchg
and
add
pop
sub
es
rcrl
mov
push
mov
cmpsb
pushf
jbe
sub
adc
shl
xchg
dec
mov
push
pop
push
clc
xchg
fstpt
pop
lods
loopne
mov
jp
leave
stc
sbb
dec
mov
jmp
xchg
inc
enter
enter
std
inc
aad
mov
rorl
jmp
sbb
dec
add
xchg
in
push
pop
filds
add
adc
shlb
push
stc
adc
jno
pop
rsm
sub
lret
push
mov
pop
dec
sbb
add
das
rorl
pusha
and
rcrl
sbb
dec
ja
mov
bound
inc
or
fadds
inc
lods
push
stos
scas
jbe
data16
addl
lahf
and
psrlw
jmp
dec
add
testl
rcr
sub
setge
cli
sbb
jl
xchg
mov
lcall
stc
or
inc
cld
mov
mov
add
fisubrs
pop
imul
adc
cmp
pop
repz
test
fcomip
jg
ss
testb
cmc
lret
push
jecxz
scas
dec
cmpsb
je
minps
je
adc
cs
out
or
ret
pop
into
repnz
out
jb
xor
jo
adc
sub
mov
sbb
outsl
add
fs
add
jnp
push
jne
pop
sub
pop
xchg
ret
cmp
cmp
push
inc
push
fistpl
fsubl
xor
test
les
inc
dec
cs
xor
popa
jg
cmp
sti
lcall
aam
and
pop
stos
stc
mov
test
dec
xor
pop
pop
into
jno
adc
imul
addb
insb
and
mov
je
cli
fdivs
jecxz
sub
push
out
mov
orl
popf
js
jno
inc
inc
cli
mov
xor
sbb
or
jae
sub
mov
push
leave
outsl
cmpb
and
ret
jp
lret
js
cmp
mov
das
cmp
dec
adcb
and
out
or
jle
aam
outsb
sub
out
jle
dec
sahf
stc
mov
loop
js
inc
push
mov
jmp
mov
mov
cltd
data16
sbb
jo
inc
mov
ja
arpl
arpl
xorb
bound
mov
dec
jg
fdivrl
sti
sub
mov
rcrb
cmp
icebp
jmp
test
push
out
sub
pop
sub
lds
cmp
and
jns
std
cli
imul
sub
push
jbe
xchg
mov
mov
movsl
sub
and
mov
sbb
fld
dec
aam
and
imul
inc
push
mov
lcall
jno
cmp
enter
pop
push
stc
inc
insb
int
cltd
fs
icebp
sbb
aam
jl
mov
es
add
xor
jecxz
fbld
rcrl
insb
cmp
ja
dec
sub
les
mov
mov
fsub
or
jmp
bound
rcrb
mov
mov
jne
movsb
arpl
es
pop
loopne
js
aam
or
mov
cmpsl
aas
adc
outsl
xor
sub
mov
xchg
cli
sti
ret
mov
cmp
mov
mov
mov
aas
lret
filds
dec
sub
jne
das
icebp
ret
mov
shrb
push
dec
nop
xchg
hlt
std
in
xchg
push
adc
lea
jp
push
cmp
repnz
aas
cmp
aaa
lock
cld
out
enter
push
jmp
push
loope
inc
jg
lods
data16
fcoms
push
out
mov
sub
fbld
add
test
mov
mov
jae
movsb
or
xlat
mov
sbb
jae
xorl
push
or
sarb
pop
jmp
ret
dec
add
arpl
sub
insb
jbe
sbb
scas
clc
pop
loop
xor
fst
xchg
rcrl
inc
jno
push
stc
leave
sarb
mov
aaa
stos
cmp
out
jge
repz
dec
sub
in
xchg
faddl
mov
jbe
fadds
mov
lea
adc
dec
in
shlb
add
jno
adc
std
xor
movsb
mov
mov
inc
je
es
pop
or
jl
mov
mov
mov
jp
xchg
lea
dec
ret
in
in
imul
sbb
pop
in
jno
mov
insb
jg
mov
movsl
mov
sti
adc
es
repz
scas
jb
repnz
jb
pop
aad
add
lods
cmp
les
mov
cld
aam
outsl
ret
mov
lret
scas
fisubs
sub
dec
dec
lds
mov
pop
xchg
inc
lret
sbb
push
mov
sahf
jb
adc
das
mov
mov
xchg
outsl
mov
das
mov
lret
xorl
sub
xchg
loope
or
jl
and
xor
mov
scas
xor
pop
sub
and
adc
jmp
pushf
aas
les
dec
addr16
lahf
mov
inc
and
or
adc
movsl
push
ret
xchg
data16
stc
fistpll
sti
xor
sub
lret
das
mov
into
pusha
and
jae
dec
mov
subl
mov
xorb
stc
push
sbb
mov
imul
pop
sbb
cld
rclb
adc
out
dec
mov
loop
xor
out
mov
rcrl
imul
push
pop
xchg
mov
imul
popf
push
dec
fimuls
lods
cmpsl
or
xchg
pop
add
xor
cld
xor
mov
pusha
and
ret
pop
adc
push
sub
int3
lahf
pop
imul
pushf
fimuls
stos
bound
cmpsb
sbb
in
ficoml
arpl
inc
cwtl
mov
shrb
mov
inc
cmp
dec
lcall
retw
xchg
xchg
mov
aam
jg
pop
adc
pop
xchg
imul
pop
xchg
loope
std
sarl
pop
adc
mov
mov
lock
imulb
je
xlat
iret
lea
cli
in
js
cltd
push
sbb
mov
dec
or
je
dec
sbb
ret
lret
ror
int3
mov
xor
adc
add
push
jle
xor
ret
incb
jbe
leave
xorl
or
cmp
jne
mov
or
push
and
sbb
sbb
mov
lock
imul
cmp
push
gs
icebp
adc
aam
mov
and
mov
pop
int3
mov
loopne
lahf
and
je
dec
popf
nop
jmp
roll
xchg
push
dec
inc
scas
cmpsb
lret
lahf
cmp
fdivs
mov
daa
push
out
cmp
stos
xor
inc
mov
iret
aaa
nop
mov
mov
inc
lcall
jns
test
lcall
sbb
aad
adc
cmp
sbb
imul
out
nop
dec
movl
test
int
nop
outsb
hlt
dec
and
pop
ds
jg
add
stos
push
enter
push
inc
mov
jg
mov
lahf
ds
aam
rclb
mov
mov
push
popa
pop
loope
loope
cmp
push
push
cmp
inc
loope
mov
inc
icebp
mov
mov
cwtl
xor
adc
popa
push
push
push
lea
in
ret
int
push
and
fucomp
lahf
cmp
mov
daa
inc
insl
ja
or
sbb
pushf
dec
and
cmpsl
lahf
aad
inc
fiadds
jnp
les
sub
mov
add
adc
mov
aam
jge
and
push
dec
popa
iret
scas
cld
or
imul
cmp
jnp
add
lods
popa
orb
add
in
mov
clc
dec
xorl
adc
push
xchg
les
or
mov
mov
aaa
out
dec
adc
mov
rcll
jo
sbb
push
sti
xorl
icebp
dec
scas
add
pop
test
repnz
push
cli
bound
pop
mov
inc
sbb
cmp
inc
jmp
sub
mov
xchg
inc
push
dec
jne
insb
push
orb
mov
push
pop
ds
pop
shlb
sbb
mov
cmp
fistpl
outsl
dec
cmp
push
stos
push
mov
jb
les
dec
in
sub
sub
aas
jnp
push
ss
jae
test
out
mov
pop
push
add
cmp
lea
lock
gs
push
push
jnp
lret
mov
mov
lock
inc
adc
cli
dec
scas
xor
cli
push
mov
int
inc
push
decl
cltd
dec
fcoms
loope
es
dec
sarb
mull
push
out
ffree
aas
test
push
mov
dec
pop
sahf
cs
mov
add
dec
outsl
jo
in
xor
adc
dec
push
in
and
jecxz
fwait
ret
or
sbb
dec
orl
add
pop
push
jle
lea
pop
dec
cmpsb
in
jno
fwait
repz
mov
orl
jns
inc
lock
sbbb
and
push
mov
icebp
push
cmovle
scas
rol
xor
dec
adcb
inc
mov
xchg
inc
push
mov
jecxz
push
pop
pop
lods
cmpsl
popf
dec
outsl
add
sub
xlat
or
into
sub
pop
jecxz
and
pop
cmp
mov
jle
or
mov
adc
xchg
jmp
sarb
pop
jg
adc
out
sub
push
movsb
in
sbb
jo
pushf
scas
daa
mov
int
push
icebp
fisubrs
out
adc
push
pop
jge
sar
mov
xchg
lods
fsubrs
mov
int
add
adc
jne
test
mov
xchg
or
popa
adc
xchg
add
push
icebp
lea
mov
mov
movsl
or
mov
lods
ss
push
sti
sbb
lret
push
mov
lahf
aas
lcall
mov
push
push
pusha
out
pop
pop
cld
aaa
lret
inc
test
and
add
adcb
pusha
repnz
fbld
das
sbb
xchg
movsb
and
movsl
inc
test
decl
scas
sub
mov
inc
sub
adc
xchg
inc
sub
jb
aam
mov
sub
out
addb
ret
scas
ss
ret
dec
add
test
loope
arpl
je
ret
pop
push
inc
push
gs
repz
dec
loop
loop
dec
sub
sub
mov
paddd
jbe
sub
rcll
cmp
mov
mov
das
mov
push
cld
fs
cmp
lods
adc
mov
push
push
lea
adc
out
shl
std
xchg
cmc
jmp
cmc
or
mov
scas
xchg
or
sbb
inc
shr
mov
pop
cli
shl
and
sahf
imul
jle
mov
cmp
jle
dec
xchg
lods
push
frstor
sub
daa
je
inc
and
mov
pushf
adc
mov
incl
pop
leave
aas
fadds
ds
xlat
mov
pop
sbb
pop
loop
imul
and
inc
or
jae
mov
sbb
popf
int
out
push
and
lret
popa
mov
sub
cmp
stc
sahf
lea
or
imul
js
mov
cmp
out
pop
or
daa
ss
fbld
lods
cmp
jge
iret
iret
fcomps
pop
or
sub
outsb
in
fdivl
mov
mov
push
pop
shl
or
jl
lds
sbb
push
xchg
sarb
mov
xor
jg,pt
cmp
fwait
xchg
stos
or
ret
lock
ret
push
push
xor
jp
bound
into
enter
jg
lret
inc
dec
rclb
pop
or
and
std
fmull
jl
jecxz
scas
xor
pop
fstpt
jnp
outsb
xor
pop
data16
xchg
jnp
imul
cmc
mov
mov
mov
xchg
lcall
sti
fdivrs
mov
test
das
sub
mov
pop
test
mov
xor
pop
xchg
jmp
sbb
cwtl
aaa
aad
js
jmp
gs
fstp
icebp
lea
add
inc
daa
rorl
mov
loopne
aad
jge
outsb
out
int
rcrl
sbb
sub
aad
push
xor
or
loopne
mov
aad
daa
leave
int3
rcr
fmull
stos
push
rorb
xchg
idivb
inc
loope
mov
sub
or
jbe
rolb
and
push
push
pop
xchg
mov
mov
bound
mov
arpl
outsb
js
cld
out
loopne
invd
jne
ret
loope
hlt
dec
cmp
rcll
push
mov
pop
into
xor
mov
mov
xchg
pop
xor
arpl
xor
mov
mov
adc
stos
insb
inc
push
xchg
test
test
cmpl
sub
fiaddl
mov
hlt
sub
mov
or
mov
add
and
pop
push
fwait
je
subl
rcr
pushl
pop
cmp
ljmp
out
push
jae
div
mov
test
sbb
in
adc
sahf
mov
or
adcl
shrb
aaa
sub
and
push
dec
add
sub
jns
xchg
xchg
dec
dec
cmpsl
mov
movsl
sub
icebp
mov
mov
sbb
jne
aad
xor
dec
push
sahf
enter
push
mov
vpcomd
lods
out
cmp
inc
lea
mov
movsb
sub
js
lods
fsts
jecxz
call
xlat
jae
popf
xor
popa
jle
push
pop
and
pushf
ljmp
out
xchg
push
xchg
mov
dec
inc
outsl
xchg
sub
in
test
cwtl
mov
andl
lea
jno
sub
jge
pushf
addr16
mov
xchg
jp
ds
pop
jle
mov
mov
and
in
into
pop
jmp
dec
mov
xchg
call
jmp
lock
shrd
ljmp
sbbl
sti
jno
cmp
out
scas
loopne
fldt
pusha
jmp
pop
es
push
push
xor
data16
aaa
xchg
imul
cmpsl
push
cmp
xor
pop
adc
sub
push
out
push
jo
sbb
mov
test
std
pop
push
ret
outsb
dec
jb
aam
icebp
mov
lahf
inc
xchg
sbb
xchg
push
push
add
push
shlb
cmc
push
cmpsl
ljmp
push
test
xor
mov
das
clc
pop
jp
add
cmc
sarl
cli
mov
mov
popa
push
enter
lret
cmp
sub
iret
cmp
loope
cld
call
mov
and
ficoms
int
cmpsl
shll
push
xchg
fidivs
push
jmp
or
push
add
cmpsl
mov
insb
scas
xchg
jae
adc
mov
pop
push
jg
and
out
xchg
sub
mov
add
xlat
lds
cwtl
sahf
pop
jo
dec
sub
je
stc
jle
lcall
mov
pop
push
cmpsl
fcmovnb
and
inc
insl
inc
fadds
sub
sub
icebp
jp
clc
cwtl
fisttpl
cld
adcb
fistps
mov
push
inc
sti
push
jo
mov
imul
sbb
add
std
add
inc
push
ret
lcall
enter
arpl
pop
xchg
out
mov
push
adc
push
in
sbb
xlat
add
outsl
std
and
int3
or
repnz
and
push
mov
in
push
arpl
add
pop
push
loop
mov
mov
sahf
roll
or
sbb
push
xorb
sahf
mov
sahf
jg
jae
lret
scas
pusha
insl
adc
and
push
and
mov
ss
cmp
push
mov
jl
and
pop
or
cmp
cmpsl
adc
shl
push
inc
into
mov
test
repnz
stc
out
inc
add
arpl
repnz
xlat
ja
pop
sub
sub
mov
push
call
out
pushf
into
mov
jl
scas
jno
cmp
or
xor
inc
fs
nop
cmp
inc
ror
in
insb
fcmovbe
ficomps
xchg
xchg
scas
cwtl
pop
out
sub
popa
mov
sub
sahf
lock
mov
das
out
push
rcl
jl
pop
mov
xor
sbb
loopne
icebp
sub
and
push
xlat
ret
jae
test
xlat
cmc
lret
icebp
pop
les
mov
mov
imul
lahf
pop
arpl
dec
dec
fsubs
outsb
out
mov
test
cmp
adc
pop
mov
sub
push
sbb
cmp
pop
sbb
adc
subb
xchg
lods
test
push
mov
adc
mov
lds
and
int3
dec
xchg
xchg
push
xchg
stc
push
adc
cld
test
pop
jecxz
push
nop
mov
pop
sub
xor
lea
pop
lock
aad
out
rclb
aas
sti
shrl
imul
stos
fs
push
push
movsb
leave
fldl
div
cwtl
pop
or
xor
jecxz
sub
mov
push
nop
push
sub
cmp
mov
test
test
lds
jmp
push
movsb
imul
and
mov
push
loop
aad
adc
pop
lock
cmp
xchg
mov
stos
sub
mov
jg
es
popa
jp
mov
sbb
test
fcompl
call
fwait
lods
cli
lods
call
sub
pop
and
jmp
imul
pushf
enter
cld
outsl
jbe
pop
test
call
sbb
outsb
in
xor
mov
pop
lock
repz
push
adcl
xchg
push
sub
icebp
movzwl
pop
ror
mov
mov
daa
dec
lret
jnp
pcmpeqb
adc
cmp
sbb
aam
inc
xchg
flds
or
dec
aad
lret
mov
push
sub
push
dec
mov
dec
push
sub
mov
pop
xor
cwtl
sbbl
popf
popa
sbb
rolb
icebp
in
mov
jle
insl
sbb
js
loope
xchg
je
enter
mov
pop
mov
xchg
jecxz
loop
pop
pop
scas
mov
jmp
call
mov
jbe
push
test
cli
push
mov
inc
mov
cmpsl
call
jne
js
push
subb
add
test
in
xor
dec
adc
dec
dec
inc
adc
lret
or
addr16
pop
pop
sub
or
loop
int3
mov
andl
inc
push
and
lds
addr16
sti
mov
mov
ljmp
mov
push
adc
mov
cltd
xor
stc
lods
popa
push
xchg
es
mov
out
jmp
cwtl
into
push
mov
xchg
add
loopne
test
pop
xor
stos
stc
jbe
mov
fldl
daa
adc
lahf
out
xor
adc
jnp
xor
adc
shrb
stos
mov
push
cmp
inc
inc
mov
scas
in
push
inc
in
dec
pop
loopne
rorb
inc
sub
nop
xchg
push
dec
fst
in
jmp
mov
in
sbb
insb
orb
lahf
or
jo
adc
push
mov
adc
dec
inc
lock
enter
inc
push
dec
sub
xor
pop
sub
fnstsw
pop
push
mov
cmp
fiadds
jbe
xchg
nop
inc
or
sbb
jno
mov
js
or
inc
in
adc
inc
push
das
xchg
or
xchg
adc
and
inc
xchg
mov
jl
test
sbb
test
dec
fisttpll
xchg
pop
sub
mov
cmp
sub
fiaddl
sbb
dec
int3
stos
fs
push
dec
sbb
mov
or
xorb
insl
push
aas
push
outsb
jo
hlt
and
cli
push
fmuls
test
xor
pop
rolb
aaa
xor
andb
sub
mov
je
in
inc
mov
ljmp
clc
inc
jne
mov
mov
inc
out
jmp
adc
stos
imul
ljmp
nop
mov
ret
xor
sahf
sbb
push
xor
hlt
jns
inc
pop
add
out
cmp
pusha
and
xor
in
daa
test
insl
jno
add
test
jp
jp
popa
mul
and
jns
dec
sbb
hlt
in
pop
jnp
ret
das
cmp
ja
jns
les
imul
pop
mov
and
jo
movzwl
xchg
push
xor
push
adc
lods
sbb
ret
and
adc
adc
hlt
in
or
dec
js
mov
aaa
in
sahf
pop
xor
jge
add
out
lds
inc
dec
push
mov
ljmp
and
push
mov
xor
sbb
xor
add
loope
repz
lret
jge
push
push
mov
repz
cmc
cmp
xchg
ja
lahf
shlb
stos
mov
setle
mov
dec
push
iret
call
xor
xchg
add
sub
adc
xor
aas
sub
or
mov
mov
jecxz
sbb
push
mov
cmpl
inc
sbbl
sub
and
inc
jo
push
fisubl
sub
mov
outsl
mov
jae
ret
xchg
ror
xchg
in
xchg
mov
inc
jle
fwait
pop
stc
fs
adc
inc
or
ret
js
mov
notl
adcb
lock
test
mov
dec
stc
hlt
cmc
pop
inc
js
pop
ret
andb
lahf
insl
and
jno
xor
stos
insb
sbb
fsubs
sub
ss
aam
call
xchg
xchg
ror
pusha
in
jge
pop
sbb
push
inc
inc
add
dec
xchg
int3
popf
and
xchg
pushl
out
mov
ror
sbb
dec
mov
aad
nop
jno
cs
fiadds
push
jp
imul
lahf
xchg
cmp
mov
sub
mov
push
rcll
arpl
call
mov
hlt
pop
pop
xchg
and
das
xchg
cmp
mul
lds
add
outsb
sub
mov
inc
inc
out
lods
push
mov
leave
push
iret
std
dec
cld
cmpb
nop
and
repz
pop
inc
xor
testl
cmc
insl
ljmp
loopne
decb
inc
test
lret
pop
into
xchg
sub
mov
dec
add
xchg
sub
stos
lock
cwtl
xor
fistpll
push
add
or
pushw
mov
lahf
pop
movsb
xlat
push
lea
xorl
adc
repnz
dec
stos
addr16
hlt
and
sbb
fs
push
push
mov
push
push
lods
fcomi
aaa
pop
in
add
add
int
push
adc
ja
jmp
call
fs
pushf
sahf
add
and
adc
pushf
push
xor
ja
push
imul
int3
aas
pop
cltd
jne
pop
popf
notl
mov
dec
inc
jnp
adc
repz
add
rol
sbb
int
mov
lahf
fdivp
pop
loope
dec
pop
add
sbb
or
rorl
fs
push
aad
adc
xchg
adc
xorl
rcl
sarl
pop
loopne
pop
cltd
dec
mov
loope
rorb
cli
adcb
adc
cmpsb
mov
add
cltd
xchg
inc
loope
in
mov
arpl
xlat
pop
leave
xor
mov
pop
mov
inc
sbb
sbb
dec
sbb
repz
lret
hlt
sbb
fisttps
xchg
inc
or
and
leave
jmp
jbe
cmpsb
inc
jb
dec
or
pop
das
and
loop
cs
sub
jmp
sarb
dec
sub
ret
mov
lods
jno
mov
lret
shlb
adc
dec
mov
mov
mov
in
aas
aam
mov
and
call
jb
mov
mov
mov
adc
sub
in
jae
lcall
leave
pop
add
subl
ds
dec
shll
dec
lea
shll
pushf
in
xor
lcall
shlb
mov
mov
adc
shrb
nop
mov
dec
cs
ficoml
cli
sub
pop
js
lods
out
ret
sub
lock
mov
pop
sbb
mov
xchg
insb
test
sbb
sbb
mov
std
rep
push
ja
lock
add
pushf
xchg
inc
push
std
sbb
jnp
and
cli
outsl
je
pop
ljmp
dec
cmpsl
aad
into
scas
pop
fimuls
adc
sub
mov
cmp
not
jnp
adc
jne
jo
xchg
add
dec
subl
icebp
mov
fxch
cmp
pop
jbe
xor
xor
es
mov
sbb
jge
sub
or
inc
and
in
notl
push
hlt
mull
cmp
stc
repnz
hlt
sbb
popa
ja
sub
xchg
cmp
dec
ja
movswl
fiadds
loopne
out
mov
or
sti
jo
mov
sbb
pop
pop
inc
std
sahf
nop
ret
movl
call
cli
mov
stos
movsb
icebp
test
pop
pop
mov
leave
out
movsl
and
push
mov
loope
jge
push
push
popa
push
inc
scas
ja
push
fbstp
testl
jmp
and
dec
roll
and
idivb
test
test
jg
scas
decl
push
push
in
lods
inc
lret
push
mov
mov
mov
adc
push
sbb
cmp
sbb
pop
outsb
xor
mov
xchg
and
enter
arpl
dec
jle
int3
cltd
shrb
push
pusha
aaa
ds
sub
dec
mov
loop
xor
outsl
repnz
cmp
fisubrs
movsl
mov
adc
sub
adc
call
or
push
subl
pop
and
xchg
add
pop
pop
cwtl
or
cmpsl
sbb
mov
insb
shl
xchg
or
imul
pop
cs
pop
or
adc
mov
sbb
mov
mov
add
cmp
into
adc
outsb
dec
outsb
inc
xor
gs
call
and
pop
dec
push
pop
cmpsl
cmpsb
cli
push
sbb
cmpsb
push
mov
and
pop
sbb
xchg
xor
sub
les
mov
lea
mov
fwait
push
cli
pop
and
pop
arpl
addr16
dec
xchg
faddl
lret
cmp
mov
ljmp
and
sub
dec
ljmp
stos
pop
mov
cli
icebp
mov
push
push
jg
push
xchg
dec
push
dec
pop
movsl
les
jo
adc
into
mov
or
pushf
mov
pop
out
shrb
jnp
pushf
shll
lds
ret
das
jge
sub
ss
add
in
mov
fidivs
or
test
movsb
add
int
mov
and
es
and
mov
pop
ljmp
sbb
test
xor
push
jb
ret
jae
out
out
pop
pop
and
dec
cwtl
cs
lea
inc
xchg
sub
sbb
out
adc
sti
cld
mov
jae
cld
cmp
hlt
adc
test
add
sti
cmp
dec
jl
jp
mov
lds
add
add
pop
outsb
in
push
lods
je
adc
cli
jecxz
sbb
sbb
and
inc
out
mov
fbld
adc
aaa
icebp
add
push
sbb
pop
stos
cmpsb
cmpsb
lock
hlt
insl
and
addr16
pushf
dec
movsl
pop
into
incb
repnz
mov
popf
pop
popf
adc
pop
jg
clc
and
xor
inc
sbb
cmpl
adc
movsl
lock
push
push
test
stos
xchg
imul
add
push
sti
shll
inc
and
ret
scas
xchg
xor
shll
fdivl
push
dec
mov
adcl
xchg
mov
xor
notb
xchg
xlat
cmp
add
xlat
lock
in
or
in
and
mov
mov
mov
daa
mov
ljmp
pushf
je
xor
mov
call
arpl
push
outsb
fistpll
fnstenv
pop
enter
push
sub
sahf
cli
mov
rcl
ret
insb
inc
aad
icebp
bound
fwait
sbb
pop
dec
sahf
push
pop
mov
loope
jmp
push
idivl
and
into
or
cwtl
in
orb
repnz
fs
lods
dec
imul
pop
adc
xchg
jp
test
inc
sbb
xchg
std
mov
jbe
loop
add
icebp
fmul
mov
cmp
fistps
repz
cwtl
mov
lea
fsubrs
lret
jl
push
pop
ret
in
bound
mov
fisttps
mov
orb
loop
mov
mov
dec
xchg
cmp
test
iret
jo
cmp
test
cmpb
xor
jp
mov
fcoml
loop
add
xor
shrb
aaa
pop
mov
std
pop
hlt
scas
rorl
es
sbb
pop
xchg
mov
dec
cmc
cmp
cmp
lds
xor
lcall
inc
or
xchg
pop
xchg
pop
int3
dec
test
sbb
cmp
repnz
int
test
scas
mov
sbb
inc
push
pop
shll
imul
in
shll
mov
add
jmp
popa
mov
push
call
gs
mov
out
pop
bts
and
nop
test
push
push
fnstenv
dec
hlt
pop
and
sbb
adc
add
xor
sub
lret
push
clc
pop
fidivl
add
mov
cld
test
push
ja
into
jnp
sbb
pop
lds
fs
pop
dec
movsb
xchg
js
jg
stc
cwtl
loope
int3
mov
lcallw
mov
in
xchg
jnp
xor
jge
bound
xor
fdivrl
cmp
add
sub
roll
test
inc
sbb
xchg
cmp
iret
aas
mov
mov
mov
mov
aad
and
fnstenv
mov
icebp
mov
and
cld
loopne
cld
cwtl
xor
or
fs
mov
xchg
mov
and
jno
vmwrite
movsb
sub
and
pcmpgtd
cltd
mov
sub
sub
out
hlt
in
push
xchg
jecxz
xchg
imul
pop
cs
lock
fiaddl
inc
sub
ds
adc
mov
mov
push
sbb
and
xchg
mov
fdivr
xchg
or
sbb
add
add
dec
add
sahf
scas
or
outsl
mov
arpl
jno
lcall
jmp
and
test
dec
mov
icebp
mov
jmp
push
adc
mov
dec
sarb
lcall
and
lods
nop
push
mov
sbb
jb
lcall
xor
inc
dec
das
cmp
push
sti
lds
push
pushf
fwait
sbb
in
pop
xchg
fwait
cwtl
pop
daa
dec
in
aam
sub
inc
test
ds
outsl
pusha
fiaddl
xor
xchg
mov
xor
xor
lcall
shll
and
cmpsl
push
add
cld
je
jnp
pop
add
sbb
pusha
pop
lods
and
scas
ret
ja
jb
inc
mov
ss
aas
xor
pop
scas
ja
mov
sbb
mov
cwtl
mov
and
rcl
paddsb
jne
sub
and
mov
push
adc
push
les
cmp
push
fwait
ret
xchg
jo
jl,pt
lods
test
aam
mov
and
xchg
push
fs
xlat
ja
sub
cli
jnp
orl
or
mov
add
lods
xchg
push
sbb
lret
movsl
pop
jl
jge
jle
rcrl
cltd
repnz
shlb
out
fdivs
das
xchg
insb
test
xchg
sub
ljmp
ret
rcr
jg
add
pop
cmpsb
xchg
mov
dec
pop
cmp
mov
mov
xor
sub
or
ds
movsl
jno
test
jae
fcmovbe
stos
lock
popa
pop
sahf
or
push
and
inc
sub
mov
mov
mov
movsb
pop
rcrb
jle
adc
fmull
fwait
xor
jecxz
fmull
inc
cmc
stc
js
push
in
cmc
jg
inc
push
pusha
adc
scas
sub
mov
ljmp
pop
pusha
cmp
les
rclb
out
dec
imul
or
push
cmpsb
push
inc
repz
orl
mov
mov
sbb
mov
outsl
fcoml
bound
dec
ret
lea
stc
mov
xchg
mov
add
pop
cwtl
or
push
mov
push
cmp
fmuls
sbb
cld
jge
scas
ljmp
inc
pop
push
in
push
mov
iret
mov
repnz
stc
pop
lds
add
sub
rclb
scas
mov
into
sub
pop
fsub
aam
sahf
jno
xchg
mov
fwait
lea
ja
outsb
stos
je
mov
push
loopne
mov
insl
add
fucomip
inc
jmp
xor
clc
fdivl
push
loop
ret
push
int3
cwtl
jecxz
add
test
movsb
rcrb
adc
out
cmpsl
shrl
cmp
repnz
test
adc
adc
pop
dec
fwait
sbbl
sbb
lahf
pop
sub
jb
push
adc
push
in
mov
imul
pop
mov
push
adc
dec
cmp
test
push
add
pop
inc
lret
aam
push
jge
cmp
dec
js
mov
hlt
and
scas
jnp
xor
push
mov
data16
out
call
mov
push
cmp
ss
lock
stos
pop
mov
repz
cltd
fcompl
xchg
orl
sbb
movsl
dec
fcoml
shrb
fbld
bound
mov
je
addr16
mov
cmp
push
xchg
cmpsb
je
mov
stc
dec
cmpsl
rcll
push
xchg
dec
insb
sub
cli
mov
popa
push
fsub
inc
cmpsl
jne
stos
and
clc
fiadds
add
popa
pop
orl
test
adc
jl
jg
daa
popa
pop
sbb
out
arpl
and
call
dec
xor
mov
jecxz
xor
push
push
cwtl
mov
mov
xchg
std
and
test
scas
sbb
dec
mov
mov
cmpsl
in
and
xor
aaa
inc
repz
fcmovne
aad
add
popa
out
fs
mov
push
jl
imul
or
pushf
lret
mov
outsl
sbb
fdiv
sbb
mov
inc
mov
shl
in
mov
sub
mov
mov
and
fcom
in
ljmp
ljmp
repnz
out
sbb
mov
adc
cwtl
arpl
int
jne
fs
pop
push
jo
xchg
jno
je
sbb
aas
sub
cld
fidivs
mov
jae
cmpsb
lds
mov
cmp
arpl
jno
push
pop
add
xor
loope
outsl
movsb
jnp
mov
push
stos
rol
das
xchg
push
xchg
sbb
mov
rorl
and
mov
jno
test
je
push
xchg
sbb
mov
dec
rol
out
mov
jno
sbb
leave
jp
cs
sbb
data16
arpl
fmuls
pop
ds
xor
push
push
pop
rcr
orl
sub
ja
aas
int
out
mov
push
test
sbbb
xchg
lret
mov
xor
mov
pop
rcrb
imull
dec
adc
and
mov
sbb
pop
cmpsl
mov
or
inc
sbb
mov
cmp
test
jb
push
lods
push
je
adc
or
daa
outsl
pop
mov
mov
add
sub
mov
sub
xchg
fisubs
mov
push
stc
and
xchg
push
cmc
mov
xchg
insl
outsl
frstor
lea
jnp
xchg
out
in
pop
je
pop
adc
mov
call
rorl
or
mov
adcb
xor
rep
rcrl
mov
rcrb
cmpl
mov
mov
pop
das
adc
popa
mov
ja
inc
js
push
mov
test
push
jle
jle
ffreep
ffreep
insb
js
pusha
jle
div
sbbb
sub
xor
cmp
pop
and
or
dec
and
dec
cmp
std
rol
jne
dec
les
xchg
insb
mov
mov
add
dec
in
stc
addr16
outsl
adc
in
cwtl
jnp
daa
arpl
jecxz
lahf
or
inc
stos
inc
sub
lds
xchg
cld
mov
lods
hlt
gs
pop
jne
aaa
add
adc
lds
or
pop
cmpsb
and
outsb
sbb
add
inc
push
mov
push
ret
adc
call
pop
inc
mov
and
dec
dec
push
repnz
orl
or
aam
and
sarl
je
sub
dec
cli
hlt
hlt
push
dec
sub
clc
lods
mov
pop
aam
and
add
mov
lds
pushf
sub
cmpsb
stos
jge
je
xlat
stc
fnstenv
add
movsb
cmpsb
jle
lcall
scas
fs
sub
or
in
nop
bound
jnp
lods
movsl
je
xchg
gs
andb
lea
dec
das
lret
repnz
loope
lods
scas
lds
leave
pop
add
jo
push
fistpl
test
lret
or
and
out
mov
pop
adc
pop
loopne
add
inc
mov
dec
add
pop
inc
out
pop
ret
aas
and
out
mov
lcall
adc
test
and
sbb
mov
push
jl
push
jno
aad
push
and
mov
lods
xor
lods
aas
scas
xor
mov
in
push
je
sbb
fistl
sub
cmp
or
pop
je
in
pop
scas
mov
call
push
sub
mov
and
sub
mov
dec
pop
and
outsb
push
decl
andb
dec
mov
mov
dec
mov
mov
loopne
xchg
add
push
xchg
insl
lods
icebp
lea
sbb
sbb
add
mov
cmp
adc
add
bound
scas
pop
popa
mov
or
push
cmpb
inc
addr16
xor
push
pop
pusha
in
jmp
mov
xchg
and
jmp
cmpsl
inc
sbb
mov
push
xlat
sti
mov
xchg
aaa
dec
mov
outsl
movsl
xchg
aaa
daa
push
dec
adc
pop
pop
xor
bound
aas
jo
sub
adc
inc
stc
jne
sub
decl
add
insb
inc
dec
loop
pop
jno
dec
sbbb
das
shll
xchg
imul
jg
and
rol
pop
in
cmpsb
mov
or
mov
outsl
jnp
sub
mov
sub
cmpsl
push
jnp
push
loopne
mov
dec
ljmp
cli
call
mul
jp
aaa
ja
inc
or
lahf
cli
lock
push
mov
sub
jno
cld
mov
push
mov
add
inc
lcall
fnstcw
mov
sub
out
and
pop
sbb
or
push
js
cmc
and
negl
es
xorb
sarb
mov
shrl
mov
mov
lock
push
mov
cltd
ss
inc
into
pushf
pop
push
pop
xlat
lea
adc
in
cmp
sub
xchg
pop
fistpl
jns
jmp
jnp
scas
inc
sub
mov
jae
int3
or
mov
sbb
lcall
jg
sub
push
jae
mov
sub
mov
push
enter
les
outsb
dec
lds
lcall
jne
lret
cmp
addr16
sbb
test
sub
mov
xchg
stos
cmp
jp
rcrb
loop
jns
enter
neg
lret
pop
mov
repnz
les
and
pop
cmp
das
loope
cmpb
incl
sub
xchg
test
repz
imul
movsl
imul
and
jo
inc
jbe
lods
jge
sub
mov
movsb
inc
aaa
inc
adc
aad
sbbb
xchg
mov
out
lret
xchg
sbb
lahf
dec
cmpsl
mov
cmp
ljmp
dec
inc
adc
ret
test
pop
cs
mov
ret
out
into
mov
sub
test
xor
mov
cli
rcrl
pop
ficomps
je
imul
jo
out
xchg
popa
call
iret
pop
sti
xchg
pusha
jg
int3
jmp
inc
adc
fistpll
or
inc
and
addl
stos
jle
inc
rcl
inc
sub
adc
pop
xor
adc
insl
rcll
xor
jo
mov
xor
lret
ljmp
mov
insl
fwait
jns
jg
or
sahf
stc
out
pop
xor
scas
mul
out
xor
and
jle
cmp
jno
stos
xor
cmp
aas
dec
sbb
fisubrl
movsb
adc
mov
sub
push
cs
push
dec
insb
fs
data16
xchg
xchg
mov
pushf
fists
mov
das
xor
jns
xor
loope
jle
mov
sub
cmpsb
mov
adc
inc
jp
lahf
lods
add
and
cmp
orb
pop
dec
xlat
cmc
nop
fwait
push
lea
int
scas
stos
adcl
fldln2
xchg
sbb
mov
insb
enter
xchg
jle
in
dec
dec
data16
hlt
in
xlat
or
mov
rorb
cmp
test
fcoms
mov
fldt
mov
inc
sbb
repz
sti
inc
mov
ja
into
mov
adc
enter
cmpsb
sub
mov
sub
cmpsl
cmp
cwtl
inc
mov
cld
add
popl
cmp
pop
adc
insb
push
fwait
add
and
jg
mov
mov
and
lret
cmp
mov
jno
loopne
inc
inc
pop
push
bound
mov
or
add
lahf
scas
insb
and
xchg
push
or
xor
pop
dec
xchg
out
shll
mov
cwtl
in
xchg
rcl
sub
jne
dec
pop
lock
bt
shl
pop
inc
stos
or
and
mov
lahf
mov
sub
adc
and
xchg
adc
mov
in
sarl
dec
fcompl
sbb
imul
adcl
ds
cmp
sub
sbb
mov
mov
test
and
fs
pop
push
out
sbb
cld
das
sbb
lret
cli
jecxz
popf
lds
into
cmp
daa
pusha
xor
inc
rcpps
ficompl
jmp
cs
mov
fmuls
or
mov
cmp
es
ret
mov
fs
jmp
notb
std
repz
es
cwtl
push
and
js
lea
add
ljmp
jbe
je
pusha
sub
in
test
inc
mov
xor
lods
mov
or
pop
ret
aam
push
pop
decb
outsb
jns
mov
adc
mov
mov
fstps
jecxz
xchg
out
jne
stc
or
sarl
jmp
inc
ss
hlt
push
inc
xorb
fs
sub
xor
push
repnz
xor
fsubrl
stos
jge
mov
aam
test
mov
lods
inc
inc
push
jecxz
adc
pop
movsl
add
dec
add
daa
jg
into
andl
lret
ljmp
inc
jne
rcll
mov
scas
sti
rcll
or
ret
and
push
jns
inc
dec
arpl
test
jmp
into
cmp
aam
mov
popa
inc
ficoms
aaa
lret
loopne
sti
inc
aam
sbb
jmp
pop
cs
shl
cld
lret
ds
adc
shrb
repz
sbb
xchg
je
dec
mov
pop
dec
lahf
mov
jne
and
xchg
adc
es
mov
jle
push
or
mov
mov
cli
mov
fistpl
rcr
and
push
movsb
lock
adc
int3
movsb
cmp
sub
sbb
fs
lahf
bound
mov
xchg
jb
xchg
testb
cmp
leave
jbe
push
inc
fldt
dec
xchg
iret
cmp
popf
xor
and
pop
stos
add
inc
dec
jp
sar
xlat
mov
and
data16
addr16
fmuls
iret
mov
pop
or
jno
xchg
in
sub
nop
mov
adc
clc
fsubrs
loop
xchg
adc
ret
add
mov
dec
arpl
imul
jge
push
in
ljmp
pop
inc
sbb
icebp
cltd
movsb
repz
mov
lret
sub
out
insl
out
cwtl
movsb
loopne
xchg
shll
stc
jno
push
insb
aam
push
test
outsb
filds
or
cmp
je
jecxz
int
mov
xchg
sbb
pushf
leave
jecxz
mov
insl
inc
in
push
mov
js
insl
mov
imul
pop
outsl
popf
jnp
arpl
cmc
or
mov
test
sbb
mov
cs
adc
pop
add
jl
sub
push
mov
jb
mov
mov
decl
bound
cmp
stos
outsl
dec
scas
out
jg
and
push
mov
cmp
xchg
mov
jb
jae
into
pop
fimuls
out
and
ljmp
es
mov
fwait
sti
jb
fidivrs
insl
sub
xchg
mov
pop
hlt
cmp
sbb
cmp
inc
sub
leave
scas
test
loope
push
xlat
addr16
mov
sbb
or
lods
sub
cmp
xchg
or
loop
ja
or
in
test
in
divb
sbb
es
sub
mov
xor
mov
data16
mov
push
cmp
sbb
xor
es
aas
jnp
add
insl
sbb
sbb
out
mov
adc
lahf
ds
fisttpll
in
jno
in
push
xchg
addr16
push
fisubs
repnz
test
out
mov
loopne
dec
xchg
daa
xchg
pop
aad
lods
iret
imulb
cltd
jo
mov
sub
add
das
ret
andl
scas
daa
xchg
cmp
inc
aas
jl
fs
in
and
cmp
mov
cmp
clc
pop
dec
push
jbe
xchg
push
xor
lcall
or
into
call
test
jns
int3
pop
push
js
jp
mov
adc
fwait
ss
dec
hlt
data16
out
or
adcl
jae
ds
or
in
iret
pop
lock
std
test
cmp
push
inc
xor
shlb
mov
xchg
mov
adc
and
cmp
sbb
dec
out
out
js
lahf
jle
pop
insl
adc
inc
sub
adc
xchg
cmp
or
mulb
dec
out
push
iret
xchg
das
mov
mov
xchg
mov
in
mulb
mov
nop
push
mov
sub
arpl
loope
xor
fwait
sbb
adc
das
leave
in
inc
jne
dec
and
enter
pop
mov
addb
int
mov
mov
out
sbb
cmpsb
and
addl
mov
push
and
aam
js
push
out
lret
incb
rep
movsb
sub
gs
xchg
inc
sub
adc
dec
cmpsl
jo
sub
ret
mov
testl
push
xchg
add
jno
push
cld
js
push
jp
and
clc
push
hlt
or
shlb
cmpsl
lds
add
xor
sub
out
cmpsb
add
inc
lahf
or
daa
sub
notb
xor
scas
inc
or
sbb
push
and
mov
cld
lret
int
out
xchg
dec
adcl
push
std
rcll
pop
push
xchg
inc
sub
cmp
or
mov
lock
ret
js
push
int3
dec
sbb
mov
dec
in
pop
mov
addr16
xchg
imul
jl
rolb
sbb
add
adc
pop
lea
dec
movsb
adc
xchg
push
insl
jg
jne
pop
xchg
jmp
lods
arpl
data16
and
jecxz
out
sbb
test
and
mov
into
jmp
dec
sub
hlt
mov
xchg
rcrl
mov
sub
stos
mov
das
sbb
incl
addr16
jg
jg
test
jb
or
stos
nop
sub
xor
imul
cltd
sti
dec
arpl
fsubrs
ss
mov
cld
cli
push
sti
pop
xchg
mov
ljmp
mov
repz
pop
sub
aad
and
fbstp
xchg
sbb
daa
test
insl
out
aam
test
cld
dec
cs
jl
push
add
add
pop
xchg
push
daa
in
or
fcmovb
mov
jo
aaa
rcll
lea
sbb
loope
lret
std
xor
lret
aas
add
test
fldcw
in
iret
daa
fs
xor
mov
cld
mov
lret
sub
mov
cs
rorb
jp
stc
sahf
sti
or
xor
shlb
movsl
or
stc
sbb
sahf
lcall
aam
sbb
gs
adc
ljmp
cmp
sub
mov
inc
fsubrl
mov
loop
scas
das
mov
dec
aaa
mov
push
push
sub
xor
push
mov
fwait
mov
jg
icebp
cmp
jmp
jns
cmp
jecxz
into
mov
mov
inc
pop
fidivl
loope
outsb
cmp
mov
clc
sbb
xor
xchg
add
loopne
mov
pop
xchg
dec
mov
jge
inc
in
and
stos
pop
and
and
xchg
ds
add
mov
sub
mov
jb
or
lods
stos
lret
rorl
push
nop
mov
icebp
flds
mov
cmp
adc
pop
sahf
mov
jae
push
adc
lahf
out
stc
inc
inc
rol
mov
mov
adc
push
lock
mov
lds
insl
data16
inc
stos
sbb
stos
jns
test
sarb
in
rcr
dec
mov
pop
repz
dec
shlb
add
mov
lret
xlat
fmuls
or
mov
mov
idiv
sub
xchg
scas
icebp
sti
cmp
in
sbb
inc
dec
int
clc
cltd
and
into
sbb
testl
sti
aad
jo
and
lcall
cmp
idivl
cmpl
pop
test
jmp
pop
test
out
or
and
inc
mov
sub
aaa
mov
jmp
inc
in
xchg
test
xchg
fcoms
cld
inc
mov
sahf
sub
pop
push
fdivs
or
pop
mov
lods
lahf
push
imulb
imul
movsb
jg
hlt
aas
icebp
push
or
cmp
mov
fldl
imul
int
out
jbe
in
stc
add
jle
insl
shrl
push
stos
ja
add
push
lcall
cmp
push
rcrl
dec
sti
out
pop
and
jae
sbb
ficompl
loopne
stos
cld
sbb
rcll
aaa
das
stc
cmpsl
pop
add
push
pop
cld
outsl
addr16
mov
sbb
out
inc
adc
shrb
or
lock
pop
ds
in
add
or
ja
aad
sti
lcall
mov
mov
aaa
ret
ret
call
xchg
outsl
pop
and
mov
adc
inc
dec
jb
outsl
pop
cmp
cmpsb
cmpsb
pop
rolb
lds
jns
cmp
add
int3
pop
adc
sbbb
xor
xchg
out
pushf
sahf
mov
sbb
popf
prefetchnta
ret
pop
sbb
mov
outsl
pushl
sti
mov
cmp
mov
out
lds
pusha
shrb
xchg
adc
inc
xorl
sti
loope
mov
inc
bound
imul
fnstsw
xlat
xlat
xchg
in
ficoms
xchg
mov
sbb
sbb
sbb
je
or
mov
xchg
mov
decl
pusha
mov
cld
or
outsb
mov
inc
mov
inc
cmpsl
loop
jmp
cmp
push
push
pop
cltd
inc
ret
ss
lods
loope
cli
xchg
pop
lahf
lea
lock
call
test
gs
adc
movaps
out
insl
sti
sbb
mov
and
out
aaa
xor
dec
sbb
xrelease
add
loop
cli
test
in
push
sbb
sbb
insl
jne
inc
adcl
and
rcr
sub
jnp
or
mov
mov
pop
or
fcoms
adc
pushf
cmpsl
ds
jnp
xchg
pop
jnp
loope
lahf
or
scas
rolb
xor
icebp
push
sarb
mov
mov
xorl
mov
lock
imul
lret
jecxz
jecxz
fs
fcmove
xchg
ss
clc
xchg
es
mov
orb
xor
ret
mov
xchg
cmp
jb
das
mov
mov
mov
or
sub
push
loop
sub
mov
or
stos
push
enter
inc
lret
mov
stos
ljmp
sahf
movsl
imul
inc
lret
jno
xor
mov
rorb
adc
push
sbb
cmc
push
xchg
or
insb
fimuls
xchg
neg
adc
std
outsl
test
scas
subb
push
or
scas
cmp
or
ficoml
jg
adc
jl
pop
repz
clc
pusha
adc
lock
adc
adc
out
in
cld
popl
inc
and
lahf
dec
cmp
aam
dec
xor
dec
cmp
push
push
mov
cmp
xchg
adc
and
adcb
das
or
loop
pushf
mov
test
dec
aam
mov
stos
out
repnz
in
outsl
jmp
loop
mov
sbb
in
in
pop
mov
nop
xchg
outsl
scas
mov
xor
sbb
pop
xor
leave
jg
jmp
nop
jo
push
out
jle
addb
cltd
cld
fcmovnu
sbb
mov
test
or
fsubl
out
ficoms
and
ret
mov
shl
dec
pushf
mov
stos
add
sub
fs
push
inc
dec
jns
aas
sahf
lods
jbe
xchg
in
insl
jnp
adc
mov
sti
insl
lock
fwait
pop
loope
imul
push
fwait
xor
bound
pop
push
lret
pop
adc
sub
adc
or
inc
cmp
sub
stc
movsl
notl
icebp
imul
in
cs
outsl
jmp
mov
movsl
sbb
lcall
shlb
mov
mov
stc
sbb
out
sub
mov
pop
aad
in
sub
cmp
add
jbe
add
xchg
pop
jns
in
or
cmpsl
dec
leave
aaa
adc
mov
fldenv
pop
xor
push
push
inc
cmc
fldl
nop
lds
loop
or
popf
mov
mov
push
adcl
mov
bnd
ja
mov
dec
daa
cs
into
add
mov
loopne
sarb
push
jmp
into
mov
and
push
mov
xor
push
sbb
pop
mov
fcomps
xor
pop
xchg
lahf
scas
loop
sub
mov
mov
xchg
jecxz
je
imul
push
sbb
cmp
xor
pop
ret
inc
aas
sub
lock
rcrb
jecxz
push
sarb
out
out
cmpb
mov
dec
sub
lds
arpl
int
jns
imul
cmc
std
sti
cmp
fwait
push
xchg
lahf
push
movsb
mov
mov
cli
lock
popa
jae
loopne
lahf
aam
pop
in
shll
in
aaa
fiadds
and
adc
ja
aas
scas
sbb
pop
push
gs
jl
pusha
adc
int
mov
inc
dec
fcom
and
sbbl
test
cmpsl
push
sahf
scas
adc
inc
clc
mov
and
mov
pop
push
pop
jge
lahf
lock
test
jecxz
cmpsb
cmp
mov
inc
jg
dec
repnz
repz
jbe
cmpsl
mov
jge
cmc
loope
loope
sti
add
sub
negb
pop
or
test
out
inc
or
cmp
adc
sbb
or
test
ret
inc
icebp
mov
sbb
rcl
jge
jae
inc
aaa
sub
fisttpl
adc
xor
ret
sbb
in
das
mov
les
xchg
mov
mov
ss
xor
das
out
lock
cmpsl
stc
lea
ja
fildl
and
imul
jb
xchg
pop
xor
in
in
dec
push
dec
xor
or
push
add
fadd
leave
ret
inc
pop
test
mov
and
cmpsl
add
andb
pop
aas
sbbb
iret
pop
sbb
nop
xorl
stc
ljmp
lds
sti
insl
sbb
cmp
mov
enter
inc
mov
fnstcw
into
out
outsb
mov
cwtl
addl
mov
mov
sub
add
pop
jo
add
loope
jmp
lahf
insl
add
xchg
mov
inc
cmc
push
add
mov
jle
jmp
push
cmpsb
sbb
dec
popf
cmp
add
dec
iret
rcll
into
cmc
mov
jl
sub
in
and
jae
fcompl
sub
je
jge
add
push
out
dec
loopne
dec
push
in
insl
jno
and
dec
jbe
push
dec
shr
orb
pushf
sbb
mov
ljmp
xor
or
fnstenv
mov
jmp
xchg
popf
shrl
jno
outsl
cld
inc
jge
lds
inc
pop
sub
aad
outsl
mov
ret
sub
mov
inc
mov
fdecstp
iret
je
push
es
std
push
push
and
sbb
fisubl
lahf
jecxz
popf
mov
outsb
adcb
pop
mov
and
cmp
not
loopne
pop
adc
dec
sbb
cmp
ja
jns
test
mov
pop
mull
imul
jbe
jne
icebp
fsubs
jl
aaa
sub
lret
sarl
push
fnstenv
icebp
push
popa
mov
dec
mov
mov
popf
lret
sub
sub
xor
sbb
inc
pop
mov
and
inc
addr16
push
stc
inc
test
sbb
sub
pop
ss
rcl
nop
jp
xchg
std
jnp
test
iret
mov
adc
push
mov
dec
in
ss
out
cmp
mov
cwtl
ficoms
cmp
lret
push
dec
xchg
test
fwait
popf
mov
xchg
cmpsb
dec
jge
sbb
jle
mov
and
cmp
int3
mov
xlat
lret
cmpsl
fnstenv
or
sub
jg
mov
ljmp
cmc
insb
jle
jmp
insl
jecxz
xor
bound
cmp
push
mov
jnp
push
adc
in
jnp
add
xor
mov
mov
sbb
push
data16
pushf
xor
add
push
jbe
mov
mov
jo
adc
or
dec
stos
dec
stc
repnz
dec
jp
adcl
dec
xchg
sub
repz
addr16
cli
aaa
fadd
pop
movsl
mov
push
lds
lret
scas
out
mov
sub
mov
sti
jnp
mov
cmp
adc
xchg
sbb
xor
jae
jge
mov
ret
mov
loope
mov
cli
dec
dec
jb
out
in
sbbb
xchg
fs
cmp
pop
jg
sub
cmc
mov
jge
cmp
stc
add
stos
call
jno
filds
inc
arpl
bound
jae
cmp
shrb
mov
sbb
xchg
push
vhsubpd
arpl
gs
cmp
and
mov
inc
and
sti
jb
daa
movsl
mov
mov
lret
hlt
push
mov
cmp
repz
mov
je
lods
mov
xor
cmp
sub
fdivrs
sahf
std
pop
jno
clc
popl
sbb
and
push
call
loope
mov
sbb
mov
lcall
test
in
push
jecxz
pop
mov
out
and
pop
flds
repnz
out
mov
jo
mov
pop
push
pop
dec
popa
into
push
roll
pop
xor
mov
addr16
jne
int3
data16
adc
ss
push
dec
stc
pop
btc
andb
cmp
aas
mov
data16
jmp
adc
pop
and
push
jecxz
lret
cmp
push
es
cmp
add
jns
fldt
les
outsb
dec
fstpt
out
adc
pop
adc
adc
cli
adc
ret
idivl
ja
scas
sub
pop
sub
shl
ljmp
mov
pop
out
push
fwait
ljmp
jl
jae
mov
inc
pop
jb
lods
mov
das
lea
popa
adc
push
sub
push
sub
xchg
cmp
jmp
inc
dec
icebp
shll
inc
sub
xor
pop
sti
ja
arpl
pop
xor
test
xchg
mov
mov
xor
push
sbb
lcall
hlt
loope
jnp
push
xor
enter
and
cmp
clc
fsub
pop
ret
mov
popa
arpl
shl
cmpsb
xchg
fwait
addb
arpl
inc
testl
fistpl
inc
fmul
sub
in
test
lcall
in
das
add
mov
cli
sbb
push
scas
arpl
add
gs
adcb
or
popf
and
inc
pop
cmpsb
adc
lods
jmp
test
push
dec
adc
or
jmp
ds
leave
in
cmp
shl
pop
outsb
jne
lods
insb
stos
fadds
pminsw
mov
jbe
mov
mov
pusha
ret
pop
inc
mov
inc
mov
push
fisttpll
loop
push
mov
fidivl
rorl
xor
mov
andb
sahf
cmpsb
and
mov
add
pusha
push
adc
sub
and
test
push
cmp
sub
aas
xlat
decl
dec
in
addr16
jp
sub
test
test
loope
sahf
into
add
pop
push
idiv
dec
adc
mov
out
aaa
addb
test
cli
or
jnp
cmpsl
xor
sbb
mov
stc
or
gs
sbb
jns
flds
cwtl
dec
movsb
mov
fs
sub
filds
stos
xlat
and
xchg
and
bound
into
pushf
lcall
push
sub
or
xchg
test
or
and
pop
jbe
aad
hlt
jg
mov
arpl
insb
xor
lret
cmp
push
jge
rdmsr
call
ljmp
inc
stos
cmp
pop
add
push
push
cmp
test
xchg
rcrl
adc
outsl
or
nop
jno
mov
in
loope
fsts
and
iret
sbb
dec
nop
xor
sti
aaa
add
imul
adc
jbe
and
xchg
xlat
xor
lea
std
mov
add
test
popf
decl
or
outsb
xor
mov
mov
sbb
jae
and
inc
testl
fdivl
jp
xchg
loop
sarl
cli
mov
cmpsl
and
pop
jae
out
xchg
dec
jae
outsl
cmp
mov
push
cmp
fdivrs
rcrb
movsb
xchg
lods
pop
inc
lahf
and
jge
ficomps
dec
jg
mov
mov
inc
es
sbb
adc
test
add
sbb
mov
repnz
lret
push
push
ret
andl
dec
movsl
and
pop
push
cmpsb
insl
push
sub
stos
mov
ja
sub
jl
scas
dec
adc
nop
std
les
fdivrs
mov
js
push
jnp
fs
xlat
pop
into
jle
ds
arpl
std
mov
fwait
or
or
mov
out
push
ret
pop
dec
cmpsl
cmp
push
adc
mov
leave
sbb
push
lret
xor
mov
loope
pop
jae
aam
cmpsb
pushf
pushl
mov
jbe
sub
cmp
scas
inc
outsl
cli
fists
lds
inc
dec
out
jno
aad
jns
mov
fstps
mov
stos
int3
xchg
ja
sub
jbe
xorb
mov
cmp
sahf
outsl
subb
jae
cld
cmpsb
ds
mov
movsl
sub
jno
mov
adc
sbb
movsl
cmpsb
mov
mov
inc
and
jecxz
push
adc
xlat
aam
or
mulb
popa
sub
mov
jmp
aad
aas
cltd
pushf
pop
ret
pop
mov
push
or
add
mov
sbb
jnp
jne
into
cmpsl
and
and
xchg
mov
int
inc
jl
add
push
sahf
or
xchg
jne
je
or
jl
test
out
inc
and
push
xor
shll
nop
pop
push
subl
aad
test
into
lfs
mov
push
movsb
or
inc
xchg
or
pop
enter
xchg
repnz
pusha
ds
stc
sub
lret
adc
inc
pop
cwtl
ljmp
or
pop
pop
rcrb
and
cmc
int3
jno
sbb
cmp
lret
je
add
out
sti
mov
addr16
inc
xchg
in
cltd
rorl
sbb
jmp
in
daa
dec
adc
sub
or
dec
sub
shrb
or
aas
pop
out
pusha
mov
lret
mov
pop
dec
movsb
rorl
inc
xchg
dec
dec
out
loopne
negl
inc
fiadds
lcall
out
jno
xchg
xor
aas
xchg
sbb
aad
push
cli
xchg
mov
mov
lret
andb
clc
lea
lret
pop
pop
subl
sbb
inc
push
adc
lea
js
cmp
jl
adc
and
sub
xlat
pop
add
shrl
sbb
popf
test
pop
aad
jns
fstpl
sbb
jo
cmc
arpl
add
cltd
iret
ljmp
aas
gs
add
rolb
jns
pop
inc
daa
fdiv
lock
xor
mov
and
fwait
jo
xor
xor
mov
sub
test
mov
mov
adc
jbe
inc
es
jg
xchg
mov
orb
movsb
mov
outsl
inc
xchg
mov
inc
cmpsl
sbb
out
rcrl
fiaddl
dec
mov
sahf
iret
incl
int
inc
fcompl
lret
pop
add
push
push
adc
push
mov
mov
stos
push
lods
lret
mov
push
int
push
iret
and
add
imul
nop
mov
add
ljmp
loope
and
xlat
mov
sub
test
sbb
dec
jbe
sub
outsl
pop
or
imul
xor
out
push
rorl
daa
cmc
dec
lret
mov
iret
mov
jle
adc
popw
xlat
lds
loop
out
jl
int
repz
push
pop
pop
jne
push
je
mov
cmpsb
xchg
and
ret
rcll
mov
shr
mov
test
es
cmpsl
mov
pop
cld
jne
outsb
sub
les
ja
mov
jmp
push
adc
or
cmpsl
sub
adc
xor
icebp
roll
popa
and
or
ja
mov
xor
sbbb
or
xchg
int3
imul
mov
mov
fucomi
mov
movsb
adc
sub
mov
das
cmp
pop
pop
shll
mov
data16
mov
pop
adc
cltd
mov
cli
inc
push
xchg
jl
sbb
mov
into
les
push
arpl
cmp
dec
push
cld
mull
cmp
xchg
add
push
jmp
int3
js
xchg
rcrb
cmp
test
or
fs
movb
push
or
daa
ret
rorb
adc
outsb
test
or
add
cltd
add
inc
add
lahf
lock
pushf
jne
jb
in
movsl
lret
jae
inc
or
aas
and
inc
sub
sahf
aam
into
nop
imul
sbb
xchg
or
pop
stc
jl
mov
sbb
stc
aaa
push
jge
mov
inc
insl
pop
lods
test
mov
out
out
jle
and
repnz
in
stc
push
jle
inc
adc
scas
cwtl
xchg
sub
cmp
rcrl
mov
sbb
movsb
mov
fmuls
pop
outsb
xor
and
mov
jecxz
xchg
sbb
sub
int
mov
pushf
jo
or
fsubrs
pop
psraw
cld
popa
sti
dec
into
mov
shl
outsl
repnz
adc
add
sub
lock
and
dec
test
sbb
inc
lret
clc
cmp
inc
or
int3
add
and
push
ss
out
ret
cmp
mov
pop
adc
sub
repz
jecxz
in
fcoms
fsubrp
xchg
xchg
pop
inc
stc
lds
inc
add
out
add
pushf
jecxz
fcmovb
fdivl
ss
fidivrs
inc
mov
mov
lcall
jge
push
iret
mov
std
jp
in
ss
int3
dec
xor
cmp
mov
jl
push
shll
mov
and
xchg
in
movsl
cmc
jecxz
add
shrb
movsb
jl
mov
and
and
shll
fsubl
jle
mov
stos
movsb
jns
mov
jae
in
fstpl
cli
jae
fbld
inc
dec
lret
mov
jbe
insb
mov
cmp
jb
mov
aam
imul
aam
jp
gs
in
or
pop
adc
inc
pusha
pop
jb
push
lahf
sbb
movsb
xor
pusha
xor
hlt
test
pop
pop
je
jne
stos
iret
ss
pop
mov
add
push
push
inc
add
cmp
push
jmp
loop
pop
mov
iret
divb
pop
rol
in
xor
xor
mov
in
popa
sub
push
lock
and
bound
mov
adc
dec
cmp
mov
sarb
sbb
sar
adc
pmulhuw
sub
fldt
mull
ret
add
xorl
addr16
js
lds
mov
mov
popa
push
or
lret
dec
add
lods
dec
subl
mov
into
js
rcr
xor
pop
stc
pop
jmp
add
push
lahf
pop
cmc
add
inc
rcll
out
mulb
cmp
fbld
inc
mov
xor
and
stos
aas
adc
or
inc
add
in
dec
push
sub
dec
loope
fsubs
divl
pop
mov
clc
adc
push
lea
aam
xor
add
out
jns
sbb
out
cltd
in
add
xchg
mov
pop
push
loop
push
out
in
pop
in
jae
mov
je
mov
imul
outsb
lds
sbb
dec
rcr
stos
pop
rorb
rclb
outsl
test
jecxz
inc
xchg
rclb
stc
out
cmpl
out
aam
add
out
cmc
stos
pop
lfs
xchg
xor
in
dec
pop
movsl
xor
fisttps
loopne
xor
adc
and
xchg
or
inc
shl
jo
mov
pop
xchg
sahf
lcall
addr16
insb
inc
movsl
icebp
sub
mov
dec
aaa
test
cli
addr16
dec
pop
movsb
fistpll
fmul
and
mov
pop
and
adc
mov
in
loop
lret
xor
js
test
mov
sub
adc
jle
int3
ficoml
and
push
aaa
sbb
adc
sub
inc
scas
xchg
arpl
jne
rcrl
jmp
fiadds
push
orl
inc
sbb
lret
repz
dec
add
lock
mov
mov
pop
adc
je
out
or
int
mov
sti
popf
pop
or
dec
stc
pop
fidivl
inc
cltd
inc
test
pop
pop
mov
xchg
stos
jmp
dec
push
mov
fmuls
mov
les
outsb
loop
sub
daa
mov
pop
mov
sbb
and
fdivl
in
ljmp
add
iret
sub
loopne
mov
cs
or
imul
or
sbb
ret
fsts
mov
dec
mov
jae
push
loop
into
pop
sbb
adc
sbb
jle
cltd
add
fsubs
jge
fiaddl
xchg
sub
push
sub
push
and
or
ret
dec
xchg
sub
cmp
mov
icebp
out
jecxz
movsb
fsubrs
sub
or
mov
das
dec
gs
cmpsb
push
push
adc
aas
ja
push
pop
push
ljmp
sbb
xor
into
cwtl
inc
imul
mov
and
push
xchg
and
mov
pusha
repz
jge
pop
pop
sti
jg
negl
xchg
sbb
push
sbb
fs
outsl
add
fsts
imul
xchg
inc
movb
mov
and
mov
out
push
es
arpl
psubusw
test
in
jo
dec
popf
das
orl
mov
hlt
cli
stos
xchg
pusha
cmp
inc
cmp
or
iret
popa
jecxz
loopne
add
outsl
cmp
pop
lock
fmuls
scas
mov
mov
and
xchg
jnp
pop
cmc
push
std
jl
pop
jmp
push
cmp
fsubrl
fisubl
clc
mov
mov
fwait
or
hlt
add
pop
inc
adc
push
cli
shll
das
and
push
or
and
test
push
mov
out
stos
popa
int3
sub
rcl
cmp
hlt
cmp
push
shrl
pop
jbe
push
jb
pop
int
pop
cmp
mov
mov
repz
push
adc
loopne
aas
rcrb
roll
mov
pushf
idivb
xchg
aam
sbb
pop
lock
call
cli
or
out
inc
pop
std
add
aad
aas
leave
mulb
xchg
arpl
sahf
inc
or
std
int3
stos
xchg
cltd
mov
mov
xchg
xchg
xor
aas
inc
add
mov
fbstp
and
xchg
and
pushf
inc
lcall
rcrb
mov
ret
movsl
gs
clc
sub
and
push
std
push
xor
dec
insl
test
gs
dec
push
je
ja
cmp
dec
jl
add
lcall
pushf
push
or
cmp
imul
mul
inc
or
imul
xchg
lret
cmp
cmp
push
loop
lea
and
repnz
jle
popa
and
adc
or
loop
rcll
add
dec
fs
mov
test
ret
push
fs
out
jl
sahf
inc
xchg
mov
or
aas
fidivrs
add
sbb
adc
sub
mov
cwtl
cmc
mov
adc
aaa
or
xchg
mov
jmp
setns
pop
mov
int
mov
push
subl
mov
std
adc
aad
push
fisubrs
mov
cmpsb
and
fmulp
daa
mov
repnz
std
iret
data16
push
sub
lods
dec
mov
movsb
mov
cmp
test
sub
mov
jecxz
movsb
cmpsb
jbe
pop
xchg
iret
mov
adc
lock
add
and
frstor
pop
sub
int3
or
repnz
cld
mov
je
pushf
gs
neg
cmpsl
into
lock
ljmp
mov
enter
xor
stos
and
and
pop
out
daa
pop
movsl
outsb
xlat
or
jle
mov
nop
sub
adc
stos
mov
xchg
lea
repz
iret
mov
fiadds
cwtl
mov
jb
ds
stc
push
out
jo
lret
imul
fadd
mulb
xor
jb
in
jns
pop
fadds
fstps
inc
push
imul
ss
test
cmp
sarb
in
jp
enter
or
subb
push
mov
push
loope
jmp
mov
jo
inc
mov
fisubrl
repz
daa
js
push
pusha
nop
and
ja
sbb
jp
pop
rcrb
mov
mov
cmpsl
loop
mov
ljmp
les
aad
mov
bound
imul
jmp
xchg
jne
mov
int3
push
xchg
out
cltd
fcoms
movsb
mov
stos
call
in
addl
lret
out
fnstsw
and
cld
fwait
stc
les
movsl
add
mov
ja
and
sub
mov
adc
or
mov
icebp
sbb
lds
loopne
and
cmc
in
out
jecxz
mov
lcall
aas
pop
add
mov
pop
lahf
push
popa
lods
add
mov
aaa
dec
pop
pusha
ja
mov
inc
push
jp
popa
cmpsl
cmpsl
dec
pop
pop
sub
jb
xchg
or
dec
repnz
inc
cs
inc
ss
sahf
pop
or
inc
daa
aaa
adc
repz
dec
jl
jbe
nop
mov
dec
mov
hlt
movsb
mov
pop
dec
lret
pop
inc
mov
push
jb
test
inc
lock
mov
push
insl
adc
push
outsb
negb
std
ficompl
jb
dec
mov
mov
jne
jg
adcl
add
inc
out
dec
xchg
stos
mov
js
push
fs
shl
sbbl
dec
sarb
jl
sbb
in
xor
xor
push
xor
fistpl
bswap
loop
filds
mov
push
ret
imul
or
and
adc
popf
jmp
inc
jle
pushf
xor
int3
imul
dec
xchg
mov
js
cmp
xchg
imul
fdivrl
sub
adc
loopne
sahf
fbstp
or
xchg
mov
inc
jp
pop
or
adc
repnz
pop
inc
cmc
and
cmp
push
lds
es
mov
adc
cmp
push
adc
or
rcrl
ds
stos
jle
and
shlb
pop
jecxz,pn
sti
or
pop
mov
imul
xchg
sub
sahf
dec
dec
dec
or
sbb
sub
mov
ret
in
mov
sbb
mov
xor
xchg
dec
lret
stc
jl,pt
xchg
or
or
pop
sub
push
xchg
jge
sub
add
or
mov
jmp
andl
pop
adc
jae
lahf
jno
insl
and
and
insl
push
inc
push
and
hlt
cmp
pop
sbb
mov
sahf
push
aam
dec
xchg
dec
mov
imul
jo
stos
jecxz
orl
xchg
shrl
push
jecxz
lahf
and
mov
icebp
cmpb
ljmp
or
sub
decl
and
and
dec
aaa
fs
sub
pop
pop
adc
adc
dec
and
sub
fwait
cwtl
bound
mov
sbb
lds
adc
sarl
mov
hlt
scas
lcall
pop
push
jb
mov
pop
ss
mov
jb
lods
xchg
cmpsb
fs
push
jmp
out
xchg
push
cmp
mov
clc
out
mov
xor
fnstsw
gs
jmp
jo
arpl
iret
jb
xor
sbb
cmpsl
out
mov
insl
pop
outsl
mov
pop
xor
mov
nop
jnp
movsb
gs
stos
rol
loope
scas
orb
imul
adc
dec
es
arpl
adc
mov
repz
or
sub
add
pop
mov
outsl
data16
lds
pop
scas
sbb
divb
mov
aam
loopne
scas
and
inc
jp
xor
cmp
xor
jl
shrb
push
insb
xchg
sbb
mov
cmpsb
std
sub
jge
jl
push
pop
and
aaa
or
dec
and
out
ficompl
ljmp
inc
xor
je
fwait
jne
mov
scas
dec
arpl
inc
and
aad
dec
sbbb
iret
sub
loopne
iret
incb
ljmp
shl
sub
stos
xlat
cmpsb
or
decb
in
shrb
shlb
in
in
shlb
subb
cld
jnp
stc
rcl
outsb
movsb
insb
ljmp
push
and
sbb
jp
repz
cld
push
push
jl
loope
dec
outsl
jb
clc
lds
xchg
jae
pop
xchg
add
and
cld
adc
cmp
adc
fadd
popa
scas
mov
lods
mulb
scas
dec
pop
cmp
mov
xchg
out
mov
leave
jle
adcb
add
clc
inc
movsl
push
in
jmp
gs
pop
repnz
sti
test
ret
xchg
add
cvtpi2ps
add
or
popf
xor
and
test
sbb
rol
pop
mov
mov
sbb
cmp
xor
or
imul
shl
cli
mov
insb
mov
inc
lock
lcall
ss
mov
nop
mov
xlat
daa
add
les
jmp
add
and
jl
lea
out
sub
nop
fnsaves
cmpsb
inc
dec
jge
cwtl
rolb
in
fdivrl
icebp
push
ficoml
cld
cs
call
int3
aad
push
push
sbb
imul
sbb
and
stc
cwtl
int3
pop
ja
lods
xor
jmp
pop
gs
inc
pushf
aas
sub
scas
sbb
pop
rorl
mov
repnz
inc
and
xor
std
shr
fldl
add
jnp
pop
loop
mov
and
pop
nop
adc
cltd
push
jl
dec
ret
push
ret
mull
scas
mov
out
xchg
jmp
push
jno
jle
xor
dec
xchg
popa
fcmovnb
sbb
int3
negl
rolb
popf
mov
cli
leave
xor
jecxz
lret
sbb
mov
shll
inc
popa
fsts
iret
andb
mov
push
xor
gs
cs
adc
jmp
inc
mov
cmpsb
out
sbb
and
xor
mov
pop
je
sub
aam
mov
or
int3
cmp
test
icebp
mov
paddusb
neg
mov
imul
xchg
push
pop
pop
data16
popf
js
pop
or
scas
xchg
jne
add
dec
or
cmp
push
xor
lods
adc
push
inc
inc
lock
pop
mov
mov
cmp
push
jns
pop
jmp
jp
fistpl
es
cmpsl
into
push
in
mov
pop
or
xor
lods
leave
jle
fldcw
outsl
mov
sbb
mov
mov
out
inc
mov
filds
ret
inc
xchg
fstpl
sub
loop
cmp
jle
xchg
jmp
lahf
adc
dec
in
and
fsubs
aam
lcall
cs
inc
fcmovu
lcall
mov
fisubs
mov
into
pushf
mov
aam
movsl
pop
into
ss
inc
xchg
lock
lahf
ja
lods
outsb
in
pop
in
sbbb
rclb
out
inc
movsb
cmp
scas
je
mov
jg
sbb
lods
adcl
and
fdiv
stos
fists
xlat
stos
loop,pt
or
pushf
loopne
inc
fsubrs
std
and
adc
ror
fcomip
fsubl
in
jb
and
loopne
test
jp
cmp
in
mov
xor
push
jge
call
cli
adc
lock
cmp
and
push
gs
in
inc
cmp
mov
out
or
pop
decb
fwait
jns
adc
cmp
and
jp
enter
movsb
lock
pusha
xor
inc
loopne
sbb
ja
pop
jb
sahf
adc
pop
shrl
icebp
outsb
ja
mov
testb
incb
in
int
mov
icebp
out
xchg
lds
mov
dec
fwait
cmpsl
in
sbb
pushf
pop
seto
mov
push
pop
repz
ss
test
das
ret
sbb
movsb
es
sub
insl
int3
push
jo
in
mov
dec
sbb
int3
lock
mov
or
lods
mov
cmp
or
cmc
ret
in
rcll
add
rorb
out
mov
inc
and
fwait
push
cmp
inc
orb
or
movsb
outsl
repz
and
dec
andb
mov
adc
pop
test
dec
jnp
xor
xchg
je
fisubrs
xchg
jecxz
sbbb
add
pusha
jg
mov
fildl
and
mov
jo
std
fbstp
adc
ficoml
fisubrs
rcl
add
fstps
sti
mov
ja
cmp
inc
pop
or
es
adc
jle
push
out
adc
into
mov
xchg
fwait
leave
and
add
or
adcl
lahf
push
and
xlat
test
scas
pusha
or
lock
sti
insl
fmuls
mov
sbb
sbb
inc
in
pop
dec
nop
out
stos
inc
ficoml
lock
fs
dec
rorb
mov
sti
movsb
pop
xchg
hlt
addb
into
push
movlhps
andl
outsb
jne
roll
jg
fiadds
jp
add
lcall
jmp
mov
push
jnp
xchg
lds
fcompl
xchg
adc
stc
js
pop
outsl
daa
dec
adc
adc
fstpl
pop
dec
lea
gs
sub
hlt
ror
out
daa
mov
mov
dec
xchg
add
imul
and
mov
push
sub
testl
addl
ja
mov
mov
js
lret
cmp
popa
mov
sti
push
andl
xorl
pop
push
xor
dec
and
pop
push
nopl
xchg
push
sbb
pop
jmp
pop
pmaddwd
stos
mov
xor
xor
rolb
add
mov
es
scas
adc
jb
lcall
push
jmp
out
cli
sbb
or
jg
cwtl
ret
fcomps
mov
loop
jno
push
ret
stc
jge
out
sub
adc
sbb
scas
cmp
dec
push
fldcw
mov
iret
in
aam
lds
es
in
cli
rcl
out
push
in
mov
iret
arpl
insb
adc
jp
stc
mov
les
mov
daa
lods
push
sbb
pusha
mov
and
sbb
fstl
and
mov
popf
add
xor
aad
mov
test
cmp
mov
mov
ds
test
in
add
adc
inc
xor
and
fdivp
or
jle
jae
mov
icebp
loope
push
pop
mov
xchg
mov
mov
iret
lahf
ljmp
add
mov
mov
or
je
rcl
jmp
test
inc
mov
dec
imull
pop
cld
dec
add
adc
mov
mov
movl
push
pop
lret
mov
aas
call
mov
daa
pop
and
jno
sbb
popa
pop
dec
mov
aad
int
or
and
loop
add
or
ljmp
sub
mov
sbb
inc
fdivrl
xchg
loop
sti
sub
mov
inc
sub
pop
add
sbb
repnz
lret
sti
push
xor
and
mov
adc
lcall
int3
outsl
inc
lea
sbb
mov
add
test
lret
or
popa
filds
fistl
jge
pushf
push
sbb
movsb
sbb
mov
mov
pop
movsl
push
mov
loopne
mov
mov
jge
cmpsb
mov
jo
lods
idivl
and
push
mulb
mov
cmp
inc
xchg
idivl
daa
xlat
cmp
xlat
out
aaa
mov
mov
inc
stos
out
aam
xorl
xchg
fsts
push
rcrb
lcall
inc
jge
dec
and
sbb
mov
add
movsl
stos
inc
xorl
leave
jo
dec
pop
das
fwait
mov
andnps
rcrb
idivl
mov
mov
jns
pop
fstpt
stc
push
insl
lahf
jge
aaa
sub
xchg
add
imul
ds
inc
lahf
rol
loope
mov
loopne
mov
xchg
pop
or
adc
push
mov
jmp
nop
dec
pusha
out
dec
jl
pop
xor
push
rolb
out
aam
xchg
xchg
inc
std
jg
lock
xor
mov
sub
lods
jle
fwait
lcall
aas
rcrb
call
xor
mulps
mov
mov
imul
push
and
inc
xchg
int
sbb
or
sbb
je,pn
push
sub
sbb
mov
dec
jl
sub
cmp
enter
gs
jnp
popf
xchg
cld
insb
inc
push
cmp
cmp
cld
outsl
rolb
add
leave
sbb
loopne
call
mov
pop
cmp
stos
or
arpl
and
push
jmp
xorb
push
push
daa
stos
xchg
cmc
movsl
dec
aas
push
ret
adc
aam
mov
jmp
or
cmc
sub
leave
stos
push
jnp
mov
jp
call
pusha
push
or
adc
xchg
cmp
dec
dec
cmp
js
fchs
jmp
ds
test
js
sahf
xchg
jl
in
aaa
sub
jg
fsubrl
push
xchg
xchg
jmp
or
xor
cmp
or
xchg
or
mov
popf
pop
sar
mov
in
pop
lret
xor
outsb
cmpsl
cmp
and
movsl
and
sbb
cmp
add
repz
push
pusha
jno
mov
mov
shll
mov
mov
push
xor
sub
pop
xchg
cmpsb
enter
jno
adc
or
inc
pcmpgtw
add
fcoms
iretw
add
and
loopne
add
stos
xchg
xchg
adc
in
and
cmpsl
mov
cli
ret
sub
push
stc
psadbw
repnz
adc
movb
mov
data16
pop
xchg
loopne
adc
cmpsl
test
lcall
mov
jge
hlt
mov
pop
ja
mov
xchg
roll
or
pop
stc
test
sbb
cltd
les
jne
push
push
icebp
and
clc
mov
roll
ja
leave
out
xchg
jnp
pop
pop
out
lods
jo
out
lods
jl
mov
cmpsb
pop
loop
mov
cmpsb
repz
pushf
mov
dec
pop
dec
imul
jl
into
xchg
sti
pop
stos
sbbl
push
adc
xchg
inc
mov
vfrczsd
xchg
cmc
sbbl
adc
push
push
test
or
mov
fisttpl
pop
pop
sbb
jnp
out
fsubr
push
outsb
fwait
fs
aaa
ss
cmpsl
add
enter
fwait
sahf
fdivl
mov
xchg
stos
jbe
inc
int
xchg
je
and
push
jle
faddl
insb
shll
scas
pop
inc
or
pop
mov
xorb
pusha
iret
jae
jl
adc
xchg
test
mov
sahf
mov
xchg
mov
mov
pushf
stos
xor
pop
push
je
or
mov
fsubrp
into
fistpll
and
pusha
scas
loope
dec
repnz
push
cmp
iret
outsl
and
ljmp
fcomps
push
sub
es
repnz
inc
adc
fisttps
push
or
fldenv
jb
stos
out
sub
jb
es
je
and
test
xchg
dec
add
repz
adc
fidivrs
es
jl
xchg
or
xor
int
adc
outsb
dec
add
xchg
aas
mov
adc
cmp
scas
xchg
loope
sbb
out
icebp
gs
pop
outsb
sbb
jge
cld
inc
jg
inc
lahf
lock
cmpsb
repz
dec
pop
les
inc
dec
xor
dec
mov
addr16
or
mov
and
test
clc
pop
sbb
sub
ficoml
push
pop
cli
mov
lods
add
jne
mov
xchg
jae
mov
gs
push
je
jge
lcall
sbb
xchg
bound
addl
insl
add
pop
insl
stos
cmp
hlt
subb
repz
cmc
jge
mov
ret
popf
mov
nop
jo
pushf
cli
inc
movl
inc
stos
scas
rorb
dec
mov
cltd
lret
or
cmp
fstps
or
mov
mov
xor
xchg
mov
hlt
lods
out
daa
mov
add
xchg
pushf
push
sbb
xor
adc
pop
push
xorl
mov
mov
and
and
test
loope
dec
xchg
cmpsl
dec
dec
inc
aaa
or
push
test
sbb
mov
cmp
jnp
adc
xor
mov
mov
adc
nop
and
pop
and
mov
sub
fdivs
inc
add
jmp
mov
xchg
outsb
or
adc
cmc
lock
lcall
mov
out
cmpsl
dec
int
setle
arpl
scas
andb
icebp
sub
jp
mov
xchg
push
push
iret
hlt
push
push
mov
loopne
out
sub
push
cltd
mov
mov
mov
pusha
push
mov
mov
daa
xor
mov
pusha
andl
push
das
cli
pop
dec
and
cmp
dec
push
mov
xlat
out
pop
xchg
jo
mov
inc
mov
fisubs
mov
push
mov
sbb
fdivl
les
lret
xor
sub
xor
sti
enter
jnp
enter
jl
cmp
es
insl
push
scas
push
mov
jmp
orl
movb
ds
dec
pushf
jmp
cli
sub
mov
popf
cwtl
clc
push
imul
mov
lea
idivb
jp
sub
icebp
lret
aaa
push
out
cs
dec
fiadds
push
mov
rcrl
fisttpll
sahf
xchg
dec
sbb
lods
loop
push
enter
orb
lock
adcl
inc
sub
inc
dec
loope
sbb
mov
xchg
mov
mov
cmp
adc
movsl
lock
leave
aaa
sarl
rcl
sbb
outsl
out
or
repz
jle
or
or
and
inc
and
ljmp
js
imul
jnp
or
cmp
cmp
ror
lods
xchg
popa
sbbb
mov
mov
push
xor
inc
outsb
in
aaa
sahf
pop
cmpl
xor
popa
insb
mov
fmull
jb
call
pop
and
mov
fdivr
jb
lock
mov
test
or
dec
cmpsb
and
movsl
insl
dec
adc
dec
mov
or
xchg
jo
aam
lock
pop
addr16
or
mov
popa
js
mov
arpl
xor
out
jns
pusha
jbe
lahf
push
test
aas
adc
mov
sbb
push
cld
and
jne
inc
fisubl
and
add
je
fisttpll
add
enter
or
xor
stc
lcall
mov
inc
mov
jp
aas
ds
mov
ficompl
pop
push
xchg
push
push
inc
arpl
call
add
pop
out
rorl
sbb
test
mov
mov
mov
movsl
in
shl
or
inc
sub
vpaddb
fcmove
dec
xchg
pop
sub
cwtl
jno
jnp
fcomip
push
aaa
xchg
gs
shrb
cmc
dec
adc
dec
and
mov
in
lahf
push
out
jecxz
into
xchg
aam
adcl
jp
sub
out
pop
pop
jo
add
mov
inc
mov
xor
sub
outsl
pop
cld
in
in
xchg
mov
push
fstps
inc
lds
rolb
clc
inc
pop
xchg
cmp
mov
jnp
outsb
insb
or
repz
outsl
inc
pusha
push
and
push
lea
sub
mov
jns
lock
nop
cmp
pop
xchg
leave
mov
imul
inc
push
in
mov
cmc
add
insl
push
sub
nop
pushf
add
xchg
mov
into
out
adc
popa
add
pop
dec
cmp
bound
adc
fsubrl
push
cs
mov
mov
mov
sub
movsb
cmpsl
dec
xor
adc
mov
fwait
das
in
outsb
stc
xchg
into
divb
out
dec
ret
cmpsl
repnz
lret
sbb
jae
jecxz
fimull
aam
adc
adc
xor
outsl
inc
loopne
lret
lahf
std
imul
jae
dec
jmp
mov
out
fisubrl
call
movsb
clc
enter
sbb
ds
adc
jmp
or
mov
mov
push
mov
shll
notb
mov
fwait
icebp
pop
push
mov
loop
cmc
popa
loopne
cmp
out
push
adc
sub
icebp
adc
sub
push
inc
out
je
test
imul
loopne
pusha
inc
and
adc
stc
test
sbb
dec
dec
and
lods
es
adc
add
xor
inc
jmp
ret
cmp
fisttpl
test
xor
xlat
movsl
and
jae
test
loopne
divl
xchg
mov
inc
int
loop
rclb
inc
es
push
subb
cli
mov
pushf
xchg
push
jg
sti
std
jo
mov
xchg
sub
outsl
jge
cmp
pushf
movsb
pusha
leave
clc
clc
xlat
imul
xorb
and
gs
fdivr
mov
lret
adc
dec
sti
shr
movsl
lea
cld
mov
and
mov
mov
push
mov
jle
jmp
or
insb
in
adc
loope
dec
es
imul
shll
pop
xor
jae
popf
add
xor
mov
pop
lahf
int3
sub
push
push
mov
sbb
cltd
mov
negb
out
or
imul
sbb
and
xor
mov
xchg
hlt
ja
sbb
popa
sbb
cld
push
xchg
int
jecxz
and
jecxz
pop
push
fdivl
hlt
sub
push
aas
jne
int3
or
cltd
push
xchg
jp
ljmp
mov
mov
frstor
push
lahf
out
pop
and
jge
sub
pop
xchg
lock
mov
pop
enter
sti
mov
pop
dec
popa
xchg
loopne
xchg
push
xor
inc
lea
cmp
cmp
ss
cmc
pushf
pop
test
sub
int3
in
pop
xchg
aas
pop
ret
inc
pusha
into
dec
int3
and
push
lods
ror
bound
push
filds
ljmp
ret
xlat
adc
scas
les
mov
sti
and
or
mov
and
lds
hlt
add
jnp
adc
and
ret
cmpsb
push
adcl
push
xchg
repnz
mov
lods
in
shr
sbb
mov
addr16
gs
hlt
in
stos
mov
stc
imul
scas
mov
mov
es
mov
and
pop
xor
pop
loopne
jns
ret
mov
adc
fists
xorb
loope
shl
sub
jns
sub
cmp
pushf
add
pop
mov
paddq
sub
lods
cmp
lods
mov
push
pushf
add
data16
xchg
xor
push
lahf
mov
flds
xchg
addr16
repz
lds
jno
and
xlat
stc
dec
push
enter
or
add
mov
test
shr
and
adc
in
int3
or
mov
jae
imul
push
idivl
mov
flds
add
sub
push
stc
pop
jnp
imul
push
cmpsb
shlb
mov
testl
pop
sar
mov
pop
jge
inc
sub
sub
inc
call
cmp
pop
mov
out
cmc
push
xlat
adc
dec
mov
sbb
test
in
inc
hlt
es
aaa
ficoml
xchg
jp
es
nop
jmp
repz
dec
cmp
push
or
jge
dec
popa
fnstsw
movsl
mov
xor
push
jne
lret
sbb
and
aam
xor
xchg
pop
adc
in
adc
or
mov
outsb
pop
leave
lcall
int
xor
xorb
mov
push
aaa
out
test
mov
add
sub
sti
push
adc
loope
cmp
jae
mov
push
stos
lock
sub
xor
add
jp
insl
sbb
dec
sub
mov
sub
shlb
or
cmp
mov
pop
jno
popa
rclb
and
sahf
cmp
insl
cmp
pushf
sub
inc
aad
in
addr16
or
outsl
int
mov
mov
xor
ret
fcmovne
out
test
xchg
cmp
mov
aam
push
std
cmpl
xchg
inc
outsb
dec
pusha
outsb
cmp
scas
test
inc
shr
mov
and
xorb
jno
cli
pop
in
lcall
adc
loope
or
mov
and
adc
rorb
xchg
mov
xor
xlat
arpl
xor
dec
jl
shlb
add
iret
push
fstpl
push
bound
sbb
icebp
xor
cmpsl
push
cs
test
dec
popf
fidivl
push
dec
xor
mov
xor
jecxz
pop
adc
xor
mov
test
add
fisttpl
xlat
xor
add
add
add
mov
jmp
jge
scas
test
or
faddl
cmpsl
test
lock
pop
xchg
inc
movsl
xlat
std
or
aam
fwait
and
loop
dec
xchg
jecxz
out
repz
mov
lret
sbb
loop
int3
inc
push
adc
loope
sbb
cmp
jnp
jmp
xchg
inc
jo
out
cmp
xor
jecxz
xlat
inc
and
adc
cmp
jle
repnz
loope
insl
mov
mov
mov
xchg
lods
cld
fnstenv
fwait
cltd
pop
or
push
lock
js
loope
in
sbb
imul
js
fcoms
fimull
xchg
xchg
and
xor
fs
sub
cmp
lcall
jne
dec
cs
pop
sbb
sbb
je
repnz
pushf
mov
mov
fldl
mov
loopne
xchg
inc
adc
mov
sti
scas
xor
fsubrs
and
mov
mov
stc
call
js
pop
std
xchg
mov
pop
cmpsl
insb
push
test
leave
outsb
scas
fwait
test
movsb
adc
jbe
aaa
andl
lea
nop
hlt
adc
std
dec
fcoms
ficompl
mov
push
sub
sub
xchg
inc
scas
jge
mov
cmp
cmp
pop
movsl
dec
push
pop
lret
out
adc
mov
inc
sbb
dec
or
push
inc
dec
cld
push
xor
mull
jecxz
add
fldpi
fucomi
loop
xor
in
test
adc
loopne
mov
lods
scas
insb
rolb
mov
push
lock
sti
push
jp
pop
or
xor
cmpsl
jp
jle
dec
mov
mov
rcrl
nop
cmp
lock
jle
jg
aaa
jg
insb
nop
cld
cmp
outsb
push
mov
loope
cli
xor
movsb
sti
pusha
cvtpi2ps
xlat
mov
or
cmpsl
lods
cld
and
xchg
push
jae
cld
aas
inc
mov
gs
cmp
xchg
mov
xor
pop
xorl
mov
fmuls
in
sarb
insb
scas
xchg
pop
jge
sub
xor
cmp
pop
nop
arpl
push
insb
add
xchg
add
jg
adcb
push
sub
in
pop
inc
and
xchg
popf
sub
jbe
dec
and
or
ficompl
pusha
lods
ficoms
sbbb
movl
test
je
mov
cmp
fsts
mov
bswap
fwait
loope
fistpl
xchg
mov
ljmp
cmp
ljmp
ds
ds
ds
mov
aam
push
shlb
push
xor
movsb
iret
sarl
mov
pop
scas
sbb
dec
shll
jg
adc
fldz
adc
mov
adc
inc
and
ss
dec
and
movsb
or
popa
push
xor
rorl
push
lret
jae
repz
cmpsl
add
roll
pop
xchg
mov
testb
mov
add
fnclex
fisubrl
jns
xchg
out
cmpsl
cwtl
or
mov
clc
stc
jbe
sub
jne
mov
imul
lret
add
arpl
or
movsl
cmp
mov
cmp
sub
imul
arpl
xchg
in
rorl
pop
pop
and
dec
pop
mov
mov
lahf
insl
jne
aaa
lret
mov
ss
jl
cmp
add
aaa
push
mov
push
dec
pop
sahf
dec
ds
lahf
sub
jno
cld
push
pop
not
adc
pop
test
lods
idivl
mov
xor
popa
int
mov
lahf
push
ds
scas
or
icebp
imul
lahf
push
outsb
jne
aam
negb
mov
and
in
stos
xchg
std
mov
lods
lods
cmp
fistpll
rorl
sub
xchg
and
sub
shll
or
xor
daa
rolb
xchg
mov
mov
or
and
fs
mov
sub
xor
sbb
ljmp
sbb
pop
adc
dec
mov
and
push
sbb
fdivl
loop
xchg
iret
mov
andb
dec
xlat
push
mov
rcrl
arpl
and
jb,pt
push
test
xchg
push
or
hlt
cwtl
and
frstor
outsb
andl
inc
and
ret
xchg
push
inc
out
jns
inc
fcomps
cmp
mov
sti
fisttpl
jno
dec
repz
add
dec
sub
dec
ja
inc
mov
fsubl
dec
and
mov
mov
push
out
cmp
jmp
mov
adc
xchg
dec
mov
cmp
mov
jge
test
sub
outsb
push
je,pt
push
call
in
inc
fwait
mov
outsb
sbb
mov
jbe
mov
add
and
pop
jp
es
mov
push
leave
cmpsl
xlat
and
int3
mov
mov
jl
mov
push
pop
bound
xor
fiadds
adc
fiaddl
icebp
lcall
dec
ss
sbb
xchg
das
shll
mull
daa
out
cmp
push
lahf
lret
sahf
or
dec
push
sub
or
cmp
jecxz
faddl
ljmp
enter
cld
cmp
test
ljmp
hlt
divb
add
pop
inc
insl
cmp
rcll
out
xchg
sbb
pop
in
mov
cmpsb
cltd
data16
or
pop
jl
inc
aad
mov
or
inc
jbe
cmp
jecxz
push
jl
xor
jle
mov
sub
jmp
adc
sbbb
dec
mov
cmp
sub
add
into
icebp
ret
xor
add
inc
ret
ret
das
mov
sbb
xor
pop
call
das
xor
fcmovu
pop
xchg
push
inc
push
or
es
adc
adc
fwait
pop
mov
mov
inc
push
and
pushf
or
mov
mov
push
adc
inc
pop
fisubrs
add
in
js
fists
ret
rcl
cmpsb
and
in
stc
rcrb
cmp
in
into
orb
xchg
xchg
pushw
sarb
fwait
mov
push
in
aam
popa
mov
xchg
jae
or
cwtl
clc
lods
push
sbb
jecxz
insb
xlat
shll
enter
sub
popa
mov
or
mov
cli
or
fildl
add
mov
mov
dec
mov
jge
insb
lock
lret
or
repz
loope
cmpsb
push
jle
mov
jge
aas
into
mov
ret
dec
xor
xchg
sub
outsl
lcall
aas
cwtl
ret
add
dec
scas
mov
dec
les
jae
mov
xor
dec
out
sti
dec
addr16
pop
hlt
fld1
fs
mov
mov
mov
test
scas
pop
outsb
mov
mov
push
js
into
inc
aaa
mov
test
iret
outsl
ret
inc
sbbb
pop
cld
inc
bound
subl
cmp
ret
clc
push
stos
imul
adc
xor
daa
test
pop
push
inc
sbb
dec
inc
loop
jnp
and
lods
call
mov
jl
clc
pop
aaa
sahf
push
jmp
push
das
in
inc
imul
movaps
movsb
inc
dec
lods
loop
fbld
push
inc
ds
xor
inc
lahf
jge
sbb
mov
inc
lret
dec
daa
jg
loop
pop
enter
roll
cmp
ficompl
xor
js
mov
mov
xchg
or
mov
adc
or
test
push
push
out
push
mov
rcl
jb
cmpsb
cltd
inc
pop
daa
vmwrite
xlat
mov
ror
or
mov
push
jbe
sbb
xor
popf
cmpb
shr
and
inc
xor
cmpsl
imul
in
pop
jg
jno
shrb
push
shl
sbb
ja
test
dec
data16
imul
push
fstpl
out
test
iret
imul
mov
pop
push
adc
jo
rcll
xor
andb
es
mov
pop
clc
mov
subl
jb
or
cmp
jle
imulb
xor
sbb
pop
and
xchg
mov
out
ljmp
ss
push
inc
sub
xor
push
gs
push
int3
les
mov
push
arpl
xchg
call
idivb
pop
sub
cmc
repz
jns
ret
aad
dec
cli
popf
push
mov
lods
inc
mov
or
dec
and
loopne
xlat
xor
mov
add
cmp
push
mov
inc
push
push
xor
popa
leave
jne
cmp
mov
add
and
stos
sbb
mov
mov
popf
xchg
mov
push
lcall
push
xchg
aas
and
adc
andb
popf
xor
or
stos
lahf
cmp
not
aaa
lcall
out
push
mov
jle
fcompl
jo
testb
mov
pop
dec
jg
sub
nop
mov
mov
add
sti
adc
jg
jl
xor
mov
mov
jg
movsb
icebp
push
jb
push
mov
jbe
flds
jp
inc
jno
adc
aad
push
adc
mov
cmpsl
scas
aaa
jbe
adc
mov
sub
fistl
leave
mov
add
cmp
sub
rorl
and
jbe
in
xchg
rclb
popa
push
jb
xchg
pop
or
movsl
and
adc
and
repz
gs
sub
fsubrs
loop
popf
fxch
loop
xor
sub
mov
pop
fidivrl
nop
push
add
imul
enter
sub
sbb
add
dec
mov
push
and
jae
imul
push
push
lahf
mov
arpl
or
xor
ds
xchg
mov
fidivl
mov
jae
nop
cltd
fildl
imul
push
popl
mov
cli
add
test
mov
jecxz
sub
ret
sbb
add
incl
ja
mov
push
push
add
pop
sbb
adc
andb
stc
and
mov
push
cmp
sbbb
adc
andb
jle
das
mov
mov
out
repnz
lret
mov
aam
movsb
fcomp
sbb
test
sahf
je
inc
pop
sub
je
mov
xchg
lret
jns
push
movsl
lcall
call
sbb
cmp
xchg
pop
inc
mov
and
pop
mov
xor
mov
jb
mov
into
sub
jg
shll
hlt
fisttps
dec
cmp
or
add
sbb
sub
insl
movsl
shrb
dec
jle
out
inc
mov
stos
sbb
cmpb
xchg
jno
jo
lcall
outsl
test
ljmp
out
mov
cmp
cmpl
mov
in
sbb
pop
testl
pop
push
in
clc
xlat
mov
popa
pusha
shll
xchg
mov
arpl
dec
xchg
mov
lahf
test
lcall
lahf
ret
lret
adc
fildll
cmp
mov
inc
lahf
mov
cmpsb
inc
push
in
dec
pusha
arpl
sbb
mov
dec
xchg
cwtl
sub
dec
ret
movsl
and
ds
cmpl
gs
das
popf
lret
and
pop
cmp
sbb
cwtl
xor
incb
jge
push
int3
cwtl
stos
xor
pop
pop
jp
xor
jecxz
sbb
or
push
xchg
fstpl
das
cmpsb
cltd
pushf
fnstsw
mov
push
xchg
lea
xchg
mov
jae
cmp
dec
sub
dec
cmp
fimull
adc
sbb
hlt
mov
inc
sbb
pop
add
fdivp
mov
mov
fwait
jp
xor
arpl
dec
loope
and
adc
inc
iret
cs
mov
outsb
movsb
aaa
mov
mov
mov
xor
stos
mov
pushf
inc
add
and
mov
stos
sahf
mov
adc
and
add
movsb
cmpb
enter
into
shlb
cmp
movsl
or
hlt
adc
fstp
outsb
leave
fcmovu
xor
push
sub
insl
call
fcom
lea
and
and
lods
incb
push
adc
mov
sbb
mov
push
or
pop
loope
mov
or
fldenv
pusha
arpl
test
inc
repz
xor
pop
fs
mov
add
sbbb
mov
sub
sbb
and
rcrb
movsl
fisttpll
neg
xor
scas
aas
adcl
cli
imul
sti
inc
cmp
xchg
xor
pusha
in
push
pop
insb
mov
out
daa
ja
jmp
fninit
in
iret
outsb
pusha
inc
inc
in
pop
fstpt
xchg
add
push
push
mov
jp
push
add
adc
movsb
cmp
cmpsb
dec
mov
cmp
jecxz
xor
pop
sub
mov
cmp
jmp
inc
fisubrs
mov
fists
movsl
push
mov
add
add
fmul
and
xor
lea
shlb
aas
lret
mov
addr16
mov
inc
repz
popf
iret
mov
cmp
hlt
in
pop
mov
lock
mov
push
mov
in
outsb
or
scas
jnp
mov
les
loop
fs
push
xchg
mov
mov
and
mov
aaa
mov
sub
xlat
cmpsl
aas
test
push
push
and
xlat
in
jecxz
stos
mov
in
push
cld
mov
inc
int3
adc
sub
sbb
scas
xchg
aam
xchg
stos
cmp
imul
sti
sub
mov
push
gs
inc
dec
mov
mov
cmpsl
xor
xchg
sub
jecxz
add
mov
jne
outsl
jecxz
mov
mov
jp
flds
cli
je
sbb
mov
mov
mov
sbb
sub
xchg
pop
getsec
pop
lea
aam
sub
cmp
lret
pop
nop
xchg
fs
cwtl
sbbb
cmp
repz
xchg
ljmp
std
lret
xchg
ret
prefetch
cmc
sbb
dec
xchg
pop
push
mov
cmp
aaa
xchg
out
mov
mov
jo
insb
xor
xchg
push
in
or
sbb
sub
nop
or
hlt
into
pop
and
loope
jns
adc
mov
dec
xor
frstor
mov
add
adc
sahf
je
icebp
xchg
or
pop
mov
adc
fstl
push
ret
lods
or
lahf
lcall
nop
sbb
inc
or
sbb
shlb
mov
push
pop
out
xchg
stos
outsb
ja
sbb
shl
pop
add
outsb
into
xor
mov
push
add
fsub
and
addb
xor
cmp
mov
sbb
or
repz
xchg
jmp
adc
mov
mov
push
push
or
nop
push
push
pop
daa
lods
dec
jmp
mov
inc
mov
stc
add
popf
mov
lea
lret
adc
pusha
popf
pop
inc
pop
repnz
or
mov
add
dec
repnz
ret
mov
sbb
test
push
sbb
jbe
sub
dec
dec
out
bound
aaa
ja
mov
push
sub
imul
adc
imul
mov
pushf
push
jno
cmp
jmp
into
rcll
lahf
nop
js
xchg
jnp
sbb
repz
xor
ds
ljmp
mov
ja
in
lock
dec
rolb
xchg
rolb
or
jmp
add
sbb
push
xchg
popf
mov
lds
into
adc
addr16
cmpsb
stc
cmp
dec
cwtl
movsb
cmp
ret
pushf
arpl
imul
outsb
xor
push
xchg
and
dec
rcr
jle
ljmp
xlat
in
sbb
loope
popf
cwtl
push
mov
jge
and
pop
mov
push
fidivrs
pop
mov
push
std
lahf
inc
sub
arpl
inc
stos
and
sbb
fs
and
lock
cmpsb
movsl
mov
xchg
shll
es
add
xor
aas
popa
jge
adc
adc
insb
repz
nop
push
xchg
sub
les
repz
inc
mov
fsts
fadd
pop
dec
and
cmp
add
or
shlb
aam
sbb
jge
and
test
jge
rol
xchg
mov
sub
mov
adc
popf
cmp
mov
cmp
aaa
stos
insb
inc
inc
ret
popf
aas
arpl
xchg
push
enter
test
movb
pusha
popf
mov
ret
movsb
lcall
ljmp
dec
adc
bound
pop
adc
cmp
cli
jl
mov
sbb
loop
push
incb
add
push
mov
xchg
fsubr
lcall
pop
pop
aaa
sbb
jns
sar
dec
imul
mov
mov
insl
test
add
add
or
cmp
add
push
cmp
xor
xchg
mov
ret
loopne
inc
lret
mov
out
adc
inc
xchg
das
movsb
es
cmpsl
cmp
cwtl
test
shll
adc
dec
scas
in
mov
mov
xchg
movsb
mov
pusha
pop
fisttpl
call
xor
and
nop
scas
loop
arpl
daa
cmp
outsl
mov
ljmp
xor
dec
dec
arpl
adc
lds
enter
cmpsb
dec
daa
lds
cmp
lret
lods
cmp
in
out
mov
daa
ret
popf
dec
scas
xor
jge
pop
sbb
xor
int
aad
cmp
scas
mov
add
push
add
xor
adcb
or
push
add
dec
cmp
in
cmp
and
and
stc
pop
pop
bound
fcmovnb
frstpm(287
push
sbb
fmul
inc
cmp
cmp
push
cmp
add
mov
icebp
sub
sbbb
mov
repnz
insl
inc
and
pop
push
shrb
aaa
or
add
jge
insb
adc
shrb
mov
sub
push
jl
idivl
pop
adc
xchg
adc
js
hlt
rdmsr
xchg
fnstsw
adc
enter
adc
push
lret
inc
sub
mov
or
fs
push
or
jmp
push
dec
or
mov
xor
std
rcll
pop
or
xorb
loope
repz
in
addb
xchg
pushf
adc
mov
lods
xchg
out
pop
fidivl
test
cltd
mov
jge
jecxz
push
mov
lea
out
imul
or
loop
mov
inc
sbb
into
xor
adc
mov
loopne
jp
fmulp
fcomps
std
fsts
ret
xor
cs
sarl
lods
and
sarl
pushf
or
aam
sbb
jl
add
out
jae
push
cmp
imul
mov
cmp
adc
adc
rorb
mov
scas
inc
jge
js
cmp
int
popa
out
xchg
data16
arpl
xchg
sbb
xchg
pushl
sbb
loop
cmp
ja
les
stos
in
mov
stc
pop
xchg
mov
adc
ds
clc
andb
xchg
pop
mov
leave
push
push
test
int3
mov
out
cli
test
pop
out
leave
and
sti
mov
sub
add
lods
mov
xchg
hlt
pop
js
popf
iret
push
and
movsl
test
dec
mov
int3
aas
sbb
bound
mov
inc
stmxcsr
ret
xchg
test
andl
std
ds
pop
mov
movl
push
cmc
jp
cs
sti
sbb
aas
ljmp
jg
rclb
pop
dec
inc
jmp
sbb
lds
push
mov
call
int3
out
or
push
inc
lret
mov
inc
negb
xor
nop
cltd
add
xchg
adcl
aas
inc
cs
in
dec
out
mov
push
jge
test
lcall
scas
cmp
stos
push
fwait
jp
jle
sbb
add
inc
insb
ds
ss
dec
add
vandnps
and
not
or
dec
ljmp
loope
stos
sbb
movsl
pop
in
stos
les
in
pop
jmp
or
cmp
rolb
inc
mov
pop
jl
adc
das
mov
mov
pop
xor
add
sub
xor
iret
jnp
and
test
sbb
lret
fisttpll
sub
mov
call
sbb
jp
jp,pt
add
in
mov
mov
loop
int3
fcomip
icebp
xchg
enter
mov
lods
xor
xchg
push
testl
mov
shll
xchg
xchg
subl
push
xchg
jecxz
sub
mov
add
test
ja
arpl
jo
xchg
outsl
addb
add
addr16
adc
inc
sub
xor
pop
hlt
push
lahf
int3
inc
inc
out
flds
push
cmp
xchg
dec
mov
jmp
out
adc
xor
stos
leave
into
pop
mov
mov
repnz
inc
test
scas
test
rcrl
adc
xchg
popf
jnp
inc
js
and
xor
jge
mov
mov
mov
ja
mov
movsl
mov
je
adc
adc
pop
pop
leave
cmc
jp
sahf
cmp
aas
and
mov
mov
jb
mov
pop
test
xlat
clc
filds
push
js
mov
ljmp
mov
sbb
mov
mov
adc
jle
sti
addr16
add
or
imul
icebp
ficomps
mov
jnp
mov
mov
xchg
icebp
pop
aas
pop
xchg
aam
in
int
scas
mov
shlb
adc
cld
pop
mov
xchg
mov
xchg
inc
int3
inc
test
sub
or
fiadds
mov
popa
jnp
lods
aaa
ret
stc
xchg
iret
clc
mov
adc
jbe
sub
stos
fisttps
and
or
jbe
out
jecxz
xor
sbb
pop
add
insl
cmp
xor
xchg
loope
xchg
xor
lods
cmc
sbb
js
ret
clc
adc
sub
and
pop
fwait
mov
or
dec
or
ret
mov
sub
test
mov
test
sbb
xor
sub
insb
pop
adc
mov
jecxz
jmp
test
lret
es
loopne
movsb
jl
add
xchg
imul
push
stos
rorl
sarb
push
mov
mov
add
jb
sub
sub
cmp
aas
sbbb
cmpsl
cmpsl
loopne
scas
sub
push
dec
and
inc
fs
add
imul
mov
xor
adc
inc
push
dec
xchg
and
and
xor
ja
repnz
pop
imul
outsl
push
inc
add
jo
xor
add
ds
add
xchg
dec
push
sbbb
rclb
push
xor
jb
lret
jns
ds
xchg
mov
nop
and
sbb
cmp
inc
sahf
jns
bound
mov
rcll
clc
addr16
jmp
inc
lods
xchg
cmp
xchg
cltd
or
stos
xchg
and
and
xchg
inc
sbb
movsl
or
mov
or
scas
js
jle
lahf
rorl
sbb
not
fldcw
mov
jecxz
mov
xchg
test
ds
rolb
fcomi
aaa
mov
pop
ret
xor
loop
arpl
mov
int3
mov
jecxz
loope
and
add
push
lods
jp
jge
push
jns
mov
sar
ret
adcl
imul
int3
and
pop
stos
ret
test
add
mov
push
push
xor
inc
mov
adc
push
mov
mov
push
daa
mov
cmp
shll
arpl
subb
setne
jns
repnz
add
jp
addb
or
cli
icebp
movsl
lahf
test
pop
sbb
push
add
dec
je
fcmovnbe
mov
test
imulb
or
inc
ret
fimuls
xchg
sub
call
xchg
mov
sub
inc
insl
out
push
cmp
shlb
je
dec
leave
push
fwait
lcall
sbb
mov
dec
pop
jo
js
mov
cwtl
pop
pop
adc
mov
push
add
inc
sub
and
add
dec
sub
mov
rcrb
fiadds
stos
sti
and
data16
dec
scas
push
sub
pop
xor
stc
pop
push
fcompl
push
xor
cld
call
xor
mov
movsl
test
clc
lods
loopne
lods
jns
popf
adc
inc
xchg
cmpsb
inc
je
sahf
pop
mov
insl
mov
movsb
jecxz
dec
jne
xchg
or
and
and
cmp
insb
lods
pop
jno
inc
pop
arpl
test
int
pop
sbb
insb
jae
cmc
and
push
push
pop
lahf
jge
jb
jo
push
decb
dec
mov
test
adc
xchg
mov
repz
xor
test
cld
jge
adc
mov
lock
lods
push
int3
sub
enter
push
push
adc
xchg
aas
lods
mov
jmp
fdivl
xchg
add
loop
push
sahf
lods
loop
in
mov
imul
cmpsb
popa
into
cli
cmpsb
sub
push
sarb
push
cld
orl
ror
adc
bound
push
dec
mov
cltd
mov
mov
rcrb
jbe
clc
nop
neg
nop
mov
aad
in
jge
jg
pop
nop
push
push
out
jnp
test
jge
push
loope
xchg
add
loope
popf
add
sub
jp
dec
fstpt
and
mov
adc
sub
mov
sbb
sbb
jmp
lds
stos
mov
rolb
inc
into
ja
shr
or
push
test
ljmp
xor
sbb
test
inc
scas
leave
mov
mov
push
pop
mov
xchg
jne
and
ds
jae
xchg
push
and
sahf
mov
inc
pusha
shl
cs
sbb
mov
mov
jg
mov
enter
filds
add
inc
xor
je
push
cmp
pop
jge
cmc
pop
insb
cmp
popf
cld
pop
pusha
jmp
decb
je
xchg
and
movsb
xor
test
xlat
dec
wbinvd
xchg
mov
test
aam
aam
fmuls
cli
add
orl
in
and
inc
cmpsl
sarl
in
data16
sub
repz
xor
inc
mov
ret
inc
rolb
aas
xor
lds
jge
into
icebp
fdivrs
into
in
enter
lcall
pop
js
adc
jnp
jl
lods
outsl
jne
fs
inc
cmp
mov
xchg
mov
iret
and
adcb
jae
add
into
add
sub
add
inc
add
jg
andl
pop
pop
clc
mov
sub
cmpsb
mov
leave
fadds
cmp
sub
dec
setbe
jb
lcall
pop
sub
and
adc
push
xchg
mov
sarb
mov
or
cltd
ljmp
push
add
jno
push
leave
shr
sub
lock
test
xchg
sahf
cmp
adc
mov
ret
outsb
bound
jecxz
and
push
sub
jl
ja
pop
and
inc
fistpl
rolb
mov
gs
jle
adc
stos
fnstenv
cmp
outsl
or
pushf
scas
add
inc
filds
jae
xor
lahf
lret
enter
dec
jg
sub
and
pop
rcll
mov
and
mov
mov
fsub
ret
shll
fbld
sub
loop
sub
adc
jbe
outsb
xchg
jbe
stos
gs
sahf
xchg
xchg
imul
ret
adc
pop
ds
or
push
in
movsl
pop
xor
lret
test
inc
aam
jo
xchg
loope
lret
ftst
cmpsl
ds
jp
dec
cmp
pcmpgtw
pop
push
mov
je
aas
out
fiadds
sbb
fisttpll
js
js
ret
movsb
xor
je
jno
lods
and
pop
es
repz
mov
ret
fwait
mov
xchg
add
xor
test
lret
sahf
mov
adc
sub
mov
xchg
arpl
inc
jo
or
int
loopne
sub
inc
stos
ret
fwait
aaa
outsb
pusha
aam
xor
in
mov
jle
ffreep
pushf
dec
outsb
mov
ds
stos
or
jp
cmc
pop
mov
mov
add
sub
out
test
xchg
das
pop
add
mov
mov
xor
fildl
imul
sbb
adc
outsl
jg
in
jge
test
push
xchg
pop
and
mov
insb
in
bsf
xor
add
mov
cmp
movl
les
push
jne
mov
mov
xchg
xchg
test
and
mov
push
and
mov
mov
sti
mov
test
adc
popf
push
mov
adc
lds
cmpsb
stos
sti
xchg
test
rolb
repz
insb
jmp
push
xchg
idivl
xlat
sbb
xchg
mov
sar
adc
fcomps
and
jmp
pop
pop
pop
push
int3
int
pop
jge
mov
xchg
sbb
jle
stos
int3
js
add
pop
cli
mov
mov
or
push
mov
clc
or
cli
push
xchg
out
or
fxch
lods
sahf
jge
mov
jns
mov
mov
xor
in
fstpl
sbb
dec
icebp
rcl
sbbl
mov
inc
mov
jb
and
lcall
cmp
xor
cs
lea
or
or
jnp
pop
xorl
mov
jge
jge
inc
sub
mov
pop
jns
dec
mov
movsl
inc
mov
scas
ret
pop
inc
out
cmpsb
mov
ret
inc
sbb
call
sub
hlt
pusha
fistpl
cmpsl
push
imulb
lea
cmp
bound
xchg
dec
sbb
lret
clc
paddw
cmc
cmp
loope
roll
cli
push
dec
icebp
mov
xor
movl
sub
mov
movsb
imul
je
inc
inc
add
xchg
sub
test
jmp
nop
lods
jg
jmp
addl
sbb
pop
loopne
movl
js
push
hlt
test
sub
xchg
dec
mov
jnp
sbb
incl
xchg
sbb
aad
shr
mov
adc
push
xor
lods
pop
xor
stc
inc
pop
pop
mov
inc
sti
ds
sbb
out
loopne
jp
in
sbb
add
mov
loope
push
mov
push
pop
leave
add
pop
test
cltd
loopne
jno
ja
sbb
subb
sarl
sbbl
jnp
sbbb
aas
in
add
jmp
lret
xor
subl
sbb
shlb
cmp
push
xchg
inc
aaa
sbb
ret
jns
mov
xor
pusha
daa
sti
xor
ret
cmpsb
cld
roll
adc
pushl
ss
imul
xchg
dec
wrmsr
xchg
inc
int3
and
inc
mov
loop
sbbl
jecxz
dec
dec
and
add
iret
mov
jle
push
int
adc
loopne
in
dec
dec
cmpl
pop
popf
and
mov
out
push
fwait
in
cmp
lea
push
lahf
mov
lods
cmp
push
dec
ret
cmp
movsb
mov
fdivs
mov
fists
jne
int
pushf
cmpsb
sbb
in
addr16
int
divb
sub
out
dec
in
pop
pop
out
push
sub
mov
mov
lods
xor
js
cmc
sbb
adc
js
lcall
adc
mov
cmc
inc
or
insl
dec
push
sbb
and
lock
ret
les
push
fsubr
jo
testb
nop
mov
out
xchg
lds
test
cmp
or
pop
ja
bnd
push
repz
mov
pop
daa
nop
xchg
xor
fwait
pusha
dec
pop
dec
sub
cltd
sbb
dec
dec
mov
jg
es
lock
jne
flds
adc
mov
int
lret
outsb
in
adc
mov
xchg
sub
inc
mov
add
fdivrl
gs
jno
xor
movsl
push
or
add
dec
sarb
add
adcl
aam
out
insb
mov
xchg
sbb
les
inc
fstpl
pop
cmp
inc
sbb
sahf
mov
push
sub
rcrb
repz
out
cmp
movsl
fdivs
jmp
aaa
xor
insl
sti
fadds
inc
in
out
mov
jnp
xchg
dec
outsl
in
dec
cli
arpl
int
mov
clc
push
fnstenv
adc
add
jecxz
mov
sub
add
xor
xchg
sahf
into
lds
rcrl
dec
dec
sbb
ficomps
adc
lods
pop
push
pop
or
inc
and
dec
xor
mov
dec
cmp
stos
cli
cmp
popf
sti
lahf
inc
xchg
mov
cmp
push
ret
mov
cmp
adc
cmp
xor
inc
and
dec
xchg
push
dec
inc
adc
out
dec
or
pop
mov
add
repnz
xor
jle
out
pop
xchg
cmc
sub
and
mov
push
mov
ret
or
fsubs
mov
cltd
sbb
shrl
inc
pop
and
outsl
or
or
ret
popa
xor
inc
jbe
adc
pop
jge
jno
aaa
mov
sbb
jmp
sub
or
imul
test
insl
test
nop
jae
jmp
sbb
mov
and
push
leavew
push
and
ja
xor
out
mov
pop
out
je
pop
out
pop
jae
jmp
mov
add
dec
sbb
in
xchg
push
iret
mov
imul
cmp
stc
mov
mov
rcl
xor
add
je
xor
mov
loopne
in
aas
add
test
push
push
mov
xchg
xchg
mov
bound
mov
mov
mov
jmp
mov
int
lock
lret
mov
pop
xlat
lds
leave
adc
mov
cld
push
cmp
insb
adc
inc
pop
adc
cmp
insl
push
mov
sub
mov
sarb
enter
jg
or
aaa
mov
pop
fstps
imul
lds
lods
sbb
out
js
push
fildll
test
mov
rolb
pop
out
cmp
inc
rolb
mov
aam
dec
add
int3
cltd
aas
jne
je
aas
push
in
lock
jb
jne
dec
in
daa
xor
sub
or
test
cld
xor
cmp
push
push
stc
clc
xchg
sbb
mov
js
mov
test
jmp
scas
sub
lds
arpl
test
movsb
xchg
stos
pop
pop
push
cwtl
xor
xchg
leave
sbb
lock
or
pop
subb
dec
into
addr16
add
mov
and
mov
cmp
pop
ss
jle
add
sub
daa
leave
loope
sbbb
push
push
xchg
addr16
inc
xor
mov
pop
adc
sub
cmpsl
xor
mov
loop
lahf
cmpsb
mov
ret
daa
and
loop
xlat
sti
mov
ficomps
notl
shlb
mov
cltd
insb
arpl
push
cld
mov
repnz
jp
cmp
movsb
movsb
xor
mov
jns
mov
lahf
adc
inc
pop
popa
or
ror
es
leave
or
and
jne
scas
jecxz
scas
fiadds
mov
jae
std
pop
lock
rcrl
inc
mov
pop
or
lcall
inc
xchg
add
xchg
push
mov
cmp
pop
mov
sbb
fcomps
xor
jbe
mov
mov
adc
or
loope
jmp
test
mov
fstpt
testl
jae
mov
jae
cmpsb
or
fistps
lods
in
stos
dec
pusha
mov
xlat
or
sarb
out
sbbb
loope
xor
in
xchg
pop
inc
scas
sub
mov
adc
inc
nop
xchg
cli
jmp
mov
loopnew
lds
xor
je
lea
pusha
add
mov
and
jne
ja
in
adc
dec
cmp
jl
aaa
add
add
and
insl
lret
out
insb
push
lcall
stos
pop
dec
les
in
and
dec
xor
push
cmpsl
jecxz
shll
mov
mov
ror
popf
mov
mov
fxch
mov
jne
jmp
fistpll
inc
xor
cmpsl
loopne
jmp
lea
cmp
mov
mov
cli
int3
xor
mov
mov
in
repz
outsb
pop
add
sbb
loope
adc
push
xchg
ljmp
push
repnz
scas
jecxz
call
pop
mov
bound
pop
xlat
sub
dec
dec
mov
or
cmp
shl
add
jns
jmp
sbb
mov
pop
jmp
inc
or
cmpsb
gs
cmp
testl
in
mov
inc
push
repz
inc
mov
mov
xchg
loopne
lea
xor
out
dec
ret
mov
rcrb
js
std
dec
or
adc
cwtl
xor
aaa
mov
js
aam
cmpb
data16
or
or
test
stos
lea
or
sbb
sbb
pop
pop
data16
aad
fsubl
dec
adc
inc
ljmp
test
push
shrl
or
scas
jp
inc
mov
negb
add
mov
inc
xchg
adc
into
cmp
pop
xchg
dec
add
aam
ffree
je
adc
insb
sub
mov
jge
inc
jp
fwait
aad
sub
ljmp
xchg
mov
rcll
fwait
mov
std
ljmp
pushf
popa
in
out
cmp
pop
mov
out
inc
push
xor
jb
push
sbb
xchg
fdivrs
insl
scas
push
mov
adc
stos
cmp
dec
mov
adc
jp
cli
xchg
jge
rolb
xor
aam
stos
dec
mov
inc
mov
ficoml
cmp
addr16
add
mov
mov
in
in
lods
shl
xchg
addb
pop
loopne
imul
aad
add
xchg
fisubl
sbb
sbb
pop
out
repz
divl
mov
pop
pop
pop
lahf
stc
sti
pop
push
clc
adc
adc
andb
cmp
in
aad
stc
cmp
popf
pop
fistl
fwait
outsl
inc
loope
pop
loope
or
cmc
sub
inc
mov
stc
cmp
cmp
rcrl
push
sbb
stc
cltd
les
ljmp
aad
aas
sbb
fldenv
rcrb
fidivs
ret
jg
je
push
adc
adc
sbb
lret
inc
fcmovnu
xor
js
int
push
mov
fcoml
fisubrs
hlt
adc
lds
inc
lds
in
jge
cmp
cs
cmp
inc
mov
or
xchg
xorps
fs
decb
out
pusha
hlt
cmc
jg
movsl
call
sti
nop
aam
cs
sti
jae
and
cwtl
andb
pop
push
outsb
divl
fisubrl
stos
popf
dec
inc
outsl
xchg
dec
loopne
pop
imul
lahf
mov
inc
fistpl
jnp
dec
pop
sbb
cmp
push
insl
ljmp
scas
mov
roll
push
push
jp
inc
insb
jnp
pusha
mov
call
js
pop
test
mov
cmpsb
ret
xor
or
cmpsl
mov
xor
jecxz
add
int
push
push
mov
jecxz
cmpsb
cmp
rorl
leave
addl
adc
fs
dec
mov
test
xchg
dec
sbb
out
fistps
pop
xchg
jae
fsubrl
jmp
mov
std
loopne
pop
inc
push
inc
add
and
adc
loope
or
ljmp
sti
imul
jnp
outsb
cmp
pop
add
test
push
dec
jecxz
jl
pop
xchg
mov
xchg
cmp
fldt
sub
cmp
add
inc
aas
adc
out
add
jbe
jbe
dec
pushaw
fdivr
ljmp
jge
push
mov
pop
mov
jl
push
shlb
into
mov
mov
add
aaa
addr16
jmp
xor
push
mov
push
cmpsb
mov
fwait
sahf
mov
jne
add
out
mov
mov
mov
mov
and
add
jp
mov
insl
popf
call
cmp
push
lret
inc
xchg
cmp
jne
fdivrs
jl
and
stos
test
sbb
fsubrl
fcomps
lret
add
mov
and
mov
jp
aas
jge
cltd
jae
mov
and
xchg
out
add
pop
jno
jns
sarl
inc
mov
ret
idivl
dec
adc
cld
xor
adc
std
mov
sbb
int
popf
imul
mov
jae
xchg
mov
scas
jp
mov
mov
test
sub
ret
jae
mov
outsl
test
xchg
aaa
mov
cmp
scas
push
ret
sbb
mov
cmp
xchg
inc
inc
sbb
pop
lods
dec
inc
pop
dec
cmp
test
inc
push
mov
add
out
sub
lods
js
adc
mov
movsb
inc
add
mov
lret
lret
ss
enter
mov
xchg
pushf
mov
xor
adc
or
sbb
ss
pop
sti
aas
sub
pop
test
xorb
push
inc
xchg
inc
cmpsb
sbb
xor
inc
in
adc
xchg
sbb
and
inc
lock
adc
push
stos
fs
lcall
outsl
inc
outsb
in
jmp
jecxz
or
loope
adc
imull
xor
xor
inc
in
pop
cmp
clc
inc
dec
nop
subl
mov
cwtl
lret
and
in
inc
lods
xor
adc
mov
sub
mov
sahf
lahf
inc
fisubl
mov
dec
int3
and
clc
jnp
jle
add
call
dec
or
push
jp
fwait
out
push
lcall
pop
mov
rcr
jno
in
push
jbe
cld
leave
ret
ds
push
imul
push
adc
popw
test
push
jmp
loopne
dec
add
fnsave
jmp
test
and
xor
arpl
inc
dec
jnp
pushf
xchg
std
repnz
jl
and
mov
pop
dec
rorb
cmp
scas
aaa
enter
adc
sub
mov
add
jae
dec
div
sbb
push
dec
outsb
lock
imul
lock
mov
or
mov
xchg
out
add
js
aas
add
inc
push
pop
out
aam
pop
pop
mov
pusha
enter
add
fldt
es
lcall
push
dec
jmp
lcall
adc
sbb
xchg
fs
pop
enter
fs
dec
inc
lds
insl
addb
pop
xor
ss
sbb
and
jecxz
jg
mov
shll
inc
add
mov
mov
adcb
lea
in
insl
xchg
jecxz
sahf
sub
lahf
dec
jae
mov
scas
xchg
rorl
cld
iret
push
inc
insl
ds
mov
push
xchg
cmp
into
ja
test
cmp
dec
lods
out
push
inc
iret
mov
sbb
xchg
popa
xchg
into
pop
push
dec
imul
paddsw
inc
nop
sub
inc
in
or
pop
and
and
fst
inc
xchg
sar
mov
lahf
dec
xor
push
jle
loop
pop
mov
fldenv
data16
xchg
sarb
mov
cwtl
js
sbb
inc
aaa
in
cmp
mov
int3
inc
xchg
leave
mov
dec
pusha
adc
sub
adc
jns
out
clc
fwait
test
cmpsl
pop
xor
fistpll
sub
scas
sbb
and
sahf
xchg
add
loop
daa
out
cld
nop
cmpsl
cmp
sarb
or
rcrl
in
not
out
dec
or
arpl
lahf
lret
mov
in
jp
adc
adc
ficomps
test
pushf
ret
cli
les
dec
stos
mov
mov
imul
popf
ja
xor
xlat
out
ljmp
mov
sbb
insl
push
and
mov
inc
cmp
out
imul
jmp
push
pop
clc
push
repz
sti
xchg
daa
test
inc
pop
test
lods
pop
sbb
mulb
fxch
out
in
lods
xchg
enter
adc
rorl
pushf
lret
add
in
outsb
adc
cmp
into
mov
push
fwait
enter
jl
in
out
mov
aam
stc
sarl
lea
ret
xchg
xlat
fs
mov
xchg
out
adc
orl
jno
sub
cld
pop
into
xchg
jbe,pt
or
lea
insb
ficomps
rcrl
jnp
enter
addr16
mov
mov
mov
stc
outsb
cmp
inc
clc
push
leave
jae
jnp
or
mov
divb
cmp
inc
in
ret
dec
cmpsl
scas
dec
dec
mov
xor
sub
adc
pop
rolb
aas
mov
and
test
xor
nop
test
imul
push
sub
mov
inc
add
xlat
dec
bound
xor
push
and
mov
mov
in
xchg
nop
lods
jg
xchg
adc
add
int3
cltd
js
dec
sbb
inc
loop
push
sar
jns
mov
bnd
loope
push
ret
sbb
pop
xchg
dec
insb
mov
out
push
fcoml
push
into
idivl
jae
mov
xchg
pop
inc
or
pop
ljmp
loop
into
dec
mov
in
jg
test
nop
sub
lea
gs
insl
add
jno
jp
out
data16
shll
shlb
mov
pop
movsl
insb
or
idivb
mov
and
popl
aaa
dec
push
fiadds
mov
into
push
in
stos
cltd
ljmp
iret
addr16
roll
push
inc
push
rcrl
cwtl
add
dec
shrl
orl
add
pop
push
int3
inc
add
adc
ret
shll
mov
add
rcll
mov
xor
sbb
sub
xchg
loop
fs
pop
xor
aad
adc
insl
cwtl
jne
push
mov
sbb
mov
mov
mov
or
test
pushf
xchg
xchg
popa
jnp
cmp
es
sar
bound
loop
inc
lea
inc
add
jmp
sbb
dec
add
mov
stos
push
mov
ja
leave
insl
mov
shl
fdivrs
call
adc
mov
shlb
mov
jae
push
cmp
sbb
dec
push
dec
jg
jo
lods
fcoms
mov
es
sbb
jb
mov
icebp
pop
add
xchg
mov
cmp
xor
cmp
int3
pop
outsl
shl
inc
test
test
into
xor
idiv
push
or
stos
and
mov
enter
push
loop
xchg
hlt
lds
inc
or
das
scas
or
xchg
or
fs
clc
fwait
cmp
or
dec
mov
jbe
clc
push
das
mov
mov
inc
xchg
sub
dec
test
mov
push
pop
jb
fimull
hlt
pop
and
or
rcrl
and
jne
cmp
dec
jle
rclb
pop
out
subb
out
jns
sbb
and
mov
push
sub
push
sahf
cltd
or
mov
dec
fnstenv
push
dec
cmpl
popa
push
jnp
idivl
nop
xor
mov
add
add
pop
jl
add
jb
dec
sahf
xor
lods
xchg
ljmp
fisttps
lods
ss
cmpsb
pop
jp
mov
movsl
movsb
mov
add
out
xor
inc
add
mov
lret
xchg
jmp
sahf
rolb
adc
gs
test
sub
lret
flds
sbb
sub
add
sahf
repnz
insl
js
loopne
test
mov
push
xchg
or
mov
push
xchg
sbb
scas
test
daa
fadd
inc
mov
xchg
xor
dec
cmp
mov
inc
icebp
lods
mov
or
mov
jl
inc
xchg
lods
add
fisttps
cmp
dec
iret
add
aad
icebp
int
cmp
jae
imul
push
pushf
and
out
jnp
jne
xchg
lret
int3
mov
adc
pusha
adcl
pusha
push
fdivr
in
adc
inc
xor
sbb
pop
xchg
in
push
mov
or
decl
fs
pop
leave
dec
cwtl
adcl
addr16
sarb
pop
and
subb
add
cli
adc
rol
mov
fnstenv
fisubrs
pop
call
or
subl
add
mov
daa
sbb
inc
fstp
push
pop
and
test
stos
jbe
sub
ja
pop
shl
idivl
loopne
stos
pusha
imul
jns
cmp
fimuls
mov
jecxz
dec
gs
lods
cmp
lret
or
jns
pop
in
cmp
or
mov
pop
icebp
iret
sbb
cs
imul
add
mov
lahf
cmc
or
add
sub
js
insb
out
sarb
add
mov
arpl
jne
scas
inc
jg
jb
fisubs
sub
leave
push
pop
jns
xor
pop
shll
inc
pushf
icebp
popa
or
dec
dec
in
int
mov
int
pop
sub
out
mov
cmpsb
cmc
push
addr16
inc
mov
mov
cwtl
sub
cld
inc
inc
cmp
xchg
push
mov
mov
adc
and
jns
lret
mov
cli
push
ljmp
sub
lds
iret
out
outsb
sarl
aad
iret
push
arpl
mov
mov
test
cltd
pop
mov
shlb
lods
add
mov
cwtl
mov
shr
arpl
pop
out
rol
idivb
xchg
add
jle
mul
push
std
mov
mov
xchg
in
add
fstpl
add
push
ss
leave
jbe
lds
mov
ds
dec
or
ljmp
dec
lret
loope
mov
out
ret
in
cld
rcr
fimull
out
xor
xchg
jecxz
pop
jle
pop
insl
jmp
xor
dec
mov
xor
loop
mov
cmp
dec
repz
loopne
je
inc
xorb
imul
hlt
xacquire
pop
pushf
int
movsl
aad
nop
je
lret
xchg
xchg
loop
mov
sahf
ret
cmpsb
fsubrl
push
ds
in
lea
xlat
enter
and
jno
ret
sub
push
push
xor
in
pop
loope
or
ret
add
jns
arpl
mov
lods
stos
push
popf
cmpsl
pusha
jne
xchg
enter
or
adc
mov
movsl
xchg
ss
sub
div
xlat
popa
cmp
push
pop
leave
cmp
scas
jl
insl
test
sub
stos
into
fs
and
cmp
in
inc
clc
jno
mov
add
insb
mov
xchg
popf
ret
into
mov
sub
sarl
loope
xor
fs
es
mov
rcl
ja
sahf
and
nop
or
pop
mov
xor
stc
repz
mov
jecxz
mov
jo
aas
push
sub
aas
and
inc
dec
into
call
cli
adc
fsts
in
pop
cmp
xor
ja
lcall
cmp
mov
sub
pop
adc
in
jns
add
mov
sbb
xchg
cmp
cli
sbb
sbb
pop
mov
sbb
mov
cmp
and
fwait
divl
sub
ljmp
mov
andl
out
mov
test
xor
mov
lret
sahf
in
dec
pusha
mov
and
sub
adc
dec
rclb
sub
shl
xor
cmp
mov
xor
xchg
rorl
jns
pop
xchg
lret
mov
popa
aas
add
je
adcl
rolb
inc
popf
and
lahf
ds
stos
xchg
sti
push
sti
cmp
ret
mov
mov
add
mov
dec
iret
pop
nop
and
mov
fsts
xor
and
mov
xchg
testl
pop
lfs
sti
bnd
js
stc
jl
inc
shlb
test
and
adc
add
cmpsl
mov
mov
call
push
imul
in
pop
fucom
insl
stc
arpl
xchg
sbb
cmpb
pusha
dec
jo
loope
add
aas
lds
push
lods
jo
sbb
and
sbb
into
inc
jno
mov
dec
idivl
mov
cmp
or
cs
rorl
scas
mov
push
xchg
jge
push
dec
daa
adc
decl
mov
xchg
data16
xchg
push
ficoms
add
iret
jmp
cmpsl
and
add
pop
pop
or
ret
adc
push
dec
sarb
sahf
mov
ficompl
mov
out
pop
outsl
and
jo
cwtl
lods
adc
dec
rdmsr
mov
inc
and
push
shrb
icebp
std
jmp
out
int3
or
inc
pushf
adc
shl
jbe
movsb
outsb
lds
adc
add
out
and
aad
jp
dec
fnsave
test
sbb
mov
out
inc
mov
push
push
mov
loopne
loopne
mov
pop
in
jnp
pop
inc
add
xchg
insb
jmp
je
rcll
pop
xor
pushf
mov
add
loopne
lods
stc
sub
clc
sbb
jno
inc
adc
dec
adc
shrl
jno
add
add
clc
cwtl
clc
inc
jne
gs
mov
dec
dec
xchg
dec
test
imul
les
push
in
imul
or
popf
test
and
daa
xchg
inc
pop
pusha
lahf
or
hlt
call
pop
in
adc
aam
out
lret
int
jns
jge
and
push
mov
jns
subb
in
mov
into
pop
sub
enter
sub
push
adc
test
test
cltd
dec
pop
inc
pop
loope
icebp
incb
lret
or
ljmp
or
lock
test
cvtdq2ps
xor
mov
add
inc
xchg
mov
mov
int
outsl
sub
jle
cmp
pop
ficoml
mov
gs
jge
pop
movsl
addr16
push
push
stc
outsl
loope
insl
xor
ret
stc
je
aam
imul
jo
leave
mov
std
add
jne
pop
int
ds
or
xor
enter
push
xchg
jae
rep
jo
jp
sub
dec
lahf
and
andl
jl
sbb
cmp
cmpsl
xor
jl
sub
mov
bound
pop
test
xchg
icebp
dec
cmpb
hlt
inc
repnz
idivl
inc
stos
hlt
sub
stos
sti
stos
in
inc
test
hlt
les
or
int3
cmp
dec
bound
notb
push
in
cmp
inc
ljmp
int
test
loop
xchg
jbe
faddl
push
call
dec
adc
shlb
dec
jmp
mov
iret
or
loope
pop
and
lds
sbb
lea
cmp
add
xor
push
int
pop
sub
xor
aad
movsb
jno
int3
arpl
repz
aam
adc
lods
xchg
arpl
fistps
jg
xor
mov
fisubrl
aaa
leave
pop
ss
add
and
popf
jmp
adc
jmp
leave
jo
push
cltd
or
jae
sub
jno
and
jns
jne
and
jns
lea
movsb
mov
lea
loopne
dec
mov
fisubrl
fcompl
stc
mov
into
hlt
out
imul
push
or
pop
xor
mov
std
movsl
jne
outsl
dec
out
mov
cmp
je
inc
cmp
and
cmpsl
ja
mov
packuswb
aas
outsl
lea
mov
sahf
jnp
push
or
push
in
and
mov
add
cmp
enter
insb
cmp
xchg
frstor
cwtl
fwait
mov
pop
fisubrs
xor
es
scas
xchg
push
lret
push
mov
pusha
pusha
mov
jo
and
out
inc
faddp
test
testb
push
inc
inc
jge
in
mov
ret
cmp
dec
cmp
mov
jmp
xchg
out
lret
push
arpl
cli
int3
mov
add
daa
ja
aaa
pop
repz
sbb
cmp
sub
xchg
shl
lahf
fdivrl
mov
xlat
icebp
clc
out
cmp
push
fisttpl
inc
movsl
xchg
jb
adc
sbb
mov
xchg
js
push
mov
mov
fsubrs
xchg
xchg
lds
sub
adc
jb
xchg
pop
out
adc
xchg
fimuls
stos
or
push
clc
outsl
and
inc
add
mov
xorl
cmc
inc
mov
stos
test
ljmp
sub
dec
es
mov
cltd
int
jne
leave
and
push
xchg
xchg
dec
iret
sub
mov
loop
cmp
jne
cmp
jne
sub
lods
adc
xor
sti
xlat
xor
add
into
mov
dec
fs
mov
xor
xor
pop
sbb
push
mov
push
js
pusha
dec
cltd
adc
cwtl
lea
push
mov
mov
jb
in
cmp
inc
jmp
adc
test
popf
stos
xchg
jns
adc
cmp
in
jmp
sbb
pop
stos
or
xchg
jb
mov
mov
jns
inc
lret
or
or
xchg
sbb
mov
aas
pop
mov
and
mov
and
add
sub
push
std
cmp
push
rclb
adc
add
cs
jnp
sti
ds
cwtl
imul
pusha
repnz
mov
mov
dec
pop
sbb
aaa
sarb
sub
out
cmp
jg
movsb
xchg
cmp
sti
sub
lcall
mov
mov
cmp
jo
sub
xor
and
mov
dec
pop
pop
xchg
mov
ffreep
test
xchg
movsl
mov
add
out
pop
push
xor
cs
rol
je
jo
add
push
mov
mov
icebp
push
mov
out
push
stc
add
adc
inc
ret
xor
mov
adc
xchg
xchg
cmp
lods
in
mov
stos
notl
iret
dec
xchg
mov
push
push
jb
out
adc
es
xchg
test
inc
pop
int
inc
stos
loop
sub
mov
mov
out
mov
mov
adc
mov
lahf
inc
push
xchg
or
insl
arpl
dec
lods
mov
fdivr
pop
loop
rcrb
test
popf
bound
and
mull
push
addl
iret
jge
mov
ret
lret
bound
daa
int3
sbb
and
and
aad
insb
and
scas
cmpsb
out
jns
pop
xchg
scas
jbe
xchg
xor
jo
push
lods
call
mov
mulb
push
inc
cmc
int
dec
mov
push
mov
push
xchg
push
mov
gs
sbb
push
mov
pop
add
popa
mov
adc
sub
sub
mov
fsubl
mov
and
pop
mov
sbb
loop
lcall
icebp
adc
pop
mov
fisttps
pop
cs
pop
rorl
aaa
xchg
jae
sub
stc
insb
adc
incl
fpatan
jp
fisubl
push
or
xchg
dec
lock
push
test
pop
jne
stos
movsb
insb
bt
mov
inc
stc
push
test
test
pop
sub
cmp
movsb
sbb
out
inc
ret
mov
sbb
mov
out
lea
sbb
insb
jmp
fidivl
inc
out
jecxz
adc
sti
inc
push
pop
fidivs
movsl
sbb
test
fidivs
hlt
push
leave
nop
sbb
jnp
jns
and
das
pop
cmp
mov
adc
sbb
repnz
mov
mov
lret
insl
inc
mov
push
call
mov
repnz
sbb
pop
or
xchg
pop
inc
jo
pop
movsl
push
or
shr
push
scas
scas
adc
pop
test
ds
movl
popa
pop
fsubrs
and
xchg
and
xorl
ds
les
pop
fdiv
lock
rorb
add
daa
add
xor
xchg
jbe
pusha
push
inc
pop
ret
fwait
pop
fisubl
mov
and
lods
lahf
add
dec
pop
wrmsr
mov
sub
leave
adc
stos
in
cmpsl
add
lods
pop
aad
repz
ds
mov
lret
mov
repnz
mov
decb
fisubrs
xchg
dec
sbb
into
cmp
repz
imul
daa
in
stos
push
sahf
push
jge
jp
lahf
jbe
arpl
rcll
or
bound
rcl
imul
xor
cmp
in
stos
out
or
scas
pop
adc
adc
data16
test
xchg
adc
lods
and
xchg
push
shlb
mov
sub
lret
cmpsb
lock
inc
xchg
loopne
or
mov
xor
imul
xor
loopne
mov
push
mov
bound
cmp
or
fnsave
sbb
scas
push
cmc
xchg
fwait
mov
dec
imul
or
rol
pop
push
add
pop
mov
xchg
test
in
test
pop
test
pop
arpl
and
and
xchg
mov
mov
mov
push
aas
cmpsl
outsb
cld
std
out
std
mov
ret
sub
arpl
cmp
test
test
out
mov
andl
sahf
sti
lret
dec
inc
std
cld
movsb
cmp
fimull
jg
push
and
sbb
lods
sub
repz
rorl
mov
mov
mov
out
popf
sub
lock
mov
xchg
es
fucomip
arpl
icebp
inc
gs
inc
and
js
aad
lds
adcl
into
sbb
push
xlat
int
cli
fwait
xor
xor
jnp
daa
dec
mov
clc
jl
inc
or
mov
shlb
push
pop
out
dec
sbb
mov
aaa
outsl
out
xor
push
jb
sbb
mov
jp
and
xor
inc
add
out
push
in
mov
mov
push
dec
daa
pop
and
hlt
jb
ljmp
add
jb
outsl
push
jnp
mov
xchg
inc
lock
imul
pop
add
rclw
stos
dec
sbb
mov
aad
push
addl
cmp
test
jno
xchg
test
cmp
or
fnstsw
sbb
data16
mov
clc
loopne
sti
adc
xchg
mov
aas
in
cltd
sbb
faddl
ret
inc
data16
shl
dec
pushf
cmp
inc
add
inc
xor
xor
les
adc
add
std
pop
and
test
fmull
repnz
push
add
xchg
cltd
lret
shlb
andl
fisubrs
test
lahf
xchg
in
xchg
divb
cwtl
xlat
and
cmp
add
dec
or
sbb
inc
inc
dec
dec
xchg
sub
or
or
push
scas
icebp
clc
sahf
dec
inc
sub
xchg
pop
hlt
sub
test
inc
pop
cmp
xchg
popf
pushf
daa
cmpsl
cmpsb
push
or
out
test
cmp
cmp
xor
hlt
mov
xor
aad
shr
pop
out
test
jbe
inc
or
and
sbb
lock
int
fs
scas
lds
jmp
dec
xchg
jge
mov
push
pusha
pop
inc
lods
xchg
push
push
or
daa
insb
or
decb
xchg
ficoms
inc
aad
sub
divl
push
scas
and
xchg
push
mov
mov
rcr
push
sub
icebp
mov
dec
mov
stos
xchg
dec
mov
out
push
xor
adc
aad
mov
mov
call
out
sbb
gs
push
xor
pushf
dec
sarl
mov
sub
rorl
inc
mov
addr16
dec
imul
mov
or
mov
pop
pop
aas
inc
mov
mov
jp
sti
mov
orl
mov
push
pop
popl
push
aam
scas
sahf
outsb
xor
jl
sbb
cmp
and
rorl
mov
push
std
lret
lcall
test
pop
iret
fcoms
in
cmpsb
mov
push
mov
lods
sbb
add
cmp
or
cmp
call
mov
shrl
cmp
push
cmp
mov
repnz
xchg
lret
cmp
pop
test
pop
add
sahf
lods
sub
loop
push
into
imul
cmpsb
fmull
sbb
lret
mov
cmp
push
int
gs
imulb
shlb
popf
mov
jmp
shll
jl
shll
or
mov
sbb
xor
stos
out
cmp
fiadds
pop
mov
loope
jle
push
sbb
iret
pop
push
pop
repz
mov
iret
jg
popf
mov
mov
repz
adc
or
repnz
sub
and
pop
cmpsl
aaa
fbld
jmp
nop
pop
std
and
arpl
inc
andl
dec
push
in
adcb
add
push
mov
cmpsb
or
test
mov
add
dec
movb
pop
sub
jmp
les
xor
insl
hlt
stc
dec
in
push
mov
push
jae
push
call
or
nop
xchg
xchg
mov
sub
cmp
leave
adc
ljmp
sti
mov
mov
mov
mov
pop
movsl
gs
outsl
xlat
iret
dec
pusha
xor
push
lods
xor
jne
int
aam
pop
out
jne
dec
in
add
movsl
mov
fidivrl
and
sub
scas
js
cmp
fsubrs
jge
loop
fimull
int3
iret
ljmp
sbb
mov
test
mov
xchg
lcall
or
std
push
sub
pop
push
insb
xor
push
jle
movsb
mov
pop
cmp
push
push
bound
cmpsl
repz
add
xor
and
fs
sbb
ja
xchg
pop
fldcw
cwtl
jge
add
cs
mov
insl
add
adc
insl
sbb
loope
mov
xchg
mov
pop
mov
lds
aas
daa
mov
jbe
adc
pop
js
adc
cs
ret
test
inc
negb
pop
xchg
adc
es
and
dec
sbb
and
imull
std
sbb
cli
or
xchg
add
cli
sarl
mov
mov
or
adc
sbb
pop
hlt
or
mov
push
lahf
pop
and
mov
int
sbb
jne
xchg
inc
arpl
daa
into
pop
es
js
call
lret
fnsave
ja
shl
in
and
icebp
ljmp
push
mov
in
das
xor
test
es
jp
sbb
aas
sbb
mov
lcall
mov
cmp
pop
push
mov
inc
jb
int
ljmp
mov
shll
add
mov
dec
jge
lcall
sahf
out
pop
icebp
cld
ja
test
xchg
fs
pop
int
push
xchg
xor
or
lods
push
xchg
adc
jnp
or
sub
outsl
cmp
pop
rorb
adc
dec
lret
sbb
jb
sbb
pop
mov
add
cld
push
out
icebp
jno
push
xor
cmpsl
fmul
ds
dec
dec
jecxz
ds
jne
outsl
fistpl
out
cmp
or
aad
arpl
push
int
jge
push
pop
xchg
mov
arpl
mov
out
jle
mov
xlat
insb
dec
pushf
arpl
inc
cmpl
push
movsb
popf
mov
sub
push
cmpsl
mull
and
mov
push
cwtl
push
mov
push
roll
and
fwait
in
xchg
cmp
mov
pusha
ljmp
mov
xchg
cld
pop
test
mov
mov
mov
sub
xor
mov
dec
imul
jmp
data16
imul
cwtl
pop
dec
mov
jns
jae
hlt
sbb
cmc
lret
into
arpl
or
stos
mov
gs
pop
push
inc
dec
std
inc
outsl
call
pop
and
jo
sahf
push
and
jae
out
in
jecxz
daa
adc
cwtl
in
xchg
mov
icebp
push
outsl
aaa
popa
in
outsl
int3
adc
xchg
xor
jmp
movsb
lcall
enter
imul
test
cwtl
cmpsl
test
lock
push
jg
sbb
lahf
sub
into
in
lcall
mov
push
dec
xchg
xor
rclb
xor
scas
loop
lret
imul
adc
jne
pop
test
in
pushf
xchg
cmp
xchg
xor
cli
and
dec
imul
mov
and
adc
insl
daa
testb
pop
adc
push
lods
jnp
mov
and
daa
adc
xor
popf
mov
and
add
mov
push
or
inc
test
aam
sbb
mov
sub
mov
aaa
mov
scas
mov
sbb
mov
cltd
or
or
cmp
add
sub
sub
stos
outsl
adc
and
cld
mov
add
fdivrl
pop
leave
push
jg
cmp
add
popf
mov
push
xor
inc
nop
cli
test
scas
sti
imulb
jmpw
pop
outsl
es
insb
loope
fstps
das
mov
xchg
jae
aam
mov
xchg
mov
sti
mov
pop
lahf
cmp
cmp
filds
maskmovq
notl
sbb
out
cmpsl
addb
mov
neg
inc
sbb
push
cld
in
push
push
les
jo
data16
out
mov
std
mov
add
int
shrb
shll
mov
cwtl
inc
cmp
jo
rorl
notb
scas
cwtl
jl
dec
push
pop
inc
ljmp
dec
mov
out
xchg
adc
jne
jno
mov
push
mov
xchg
pop
out
lahf
in
dec
jno
mov
fwait
into
mov
add
fisubrs
decb
stos
decb
push
xchg
aaa
insl
dec
adc
sbb
add
or
xchg
test
jae
aad
test
xchg
adc
fwait
push
stos
mov
push
imul
sbb
fbld
sbb
pop
mov
inc
dec
faddp
aam
pusha
jecxz
mov
jle
mov
xor
dec
addr16
xor
das
or
push
mov
jo
cmc
sbb
add
call
and
jmp
dec
fcmovnbe
adc
hlt
mov
add
aad
xchg
sbb
js
xor
fs
push
inc
jg
pop
xor
jmp
outsl
aaa
and
mov
lahf
push
pop
add
fwait
jno
sbb
in
inc
add
or
push
or
imul
mov
cmp
mov
and
pop
repz
push
and
xchg
fcmovnbe
pop
stc
gs
sbb
ret
mov
jne
adc
adcl
in
jl
push
lods
pusha
cmp
push
adc
lret
xor
call
add
fs
mov
xor
or
enter
call
add
mov
clc
and
aam
ret
lret
xchg
rorb
mov
mov
jg
jmp
int
popa
jbe
add
in
out
push
jp
insl
ljmp
out
imul
push
or
push
and
mov
sbb
mov
popa
cs
cs
mov
xchg
std
cmp
lods
sub
data16
or
fldl
in
xor
iret
test
out
push
outsl
mov
mov
push
int3
xchg
sti
test
icebp
jp
xchg
scas
inc
mov
jno
das
mov
rclb
fisubs
cmp
test
nop
xor
int
dec
cli
popf
sub
or
push
push
dec
ret
or
cmp
or
mov
repz
adc
add
cwtl
mov
and
mov
sub
orb
cmp
fsubl
aas
mov
pop
in
test
cmp
mov
cmpsb
push
xlat
aam
out
shr
sbb
push
mov
push
or
cmpl
jl
cld
aaa
mov
cli
mov
movsb
pop
sbb
cld
into
cs
xor
das
addps
insb
xor
or
lds
shlb
dec
int3
sarl
cmp
push
cmc
cmp
cmp
cmp
adc
sbb
dec
shlb
repnz
icebp
pop
mov
shl
inc
mov
xor
pop
xor
mov
xchg
cs
sahf
mov
test
test
add
lds
add
cwtl
lret
jns
mov
clc
cmp
aas
jle
push
js
call
out
shrl
ss
push
rorb
cmpsb
mov
pop
or
pushf
loope
jns
jb
hlt
adc
sbb
call
dec
dec
mov
lock
rcr
loope
mov
jae
scas
pop
adc
xchg
xor
cmpsb
pop
loop
cmp
out
pushf
cld
push
ffree
and
mov
xchg
mov
mov
mov
jg
jp
lret
push
je
sbb
in
mov
xlat
push
sbb
xchg
and
jno
and
and
cmc
mov
in
iret
nop
adc
fdivrl
mov
jp
pop
les
inc
iret
ss
jo
and
testl
dec
cmp
cmc
and
pop
and
xchg
scas
js
aam
or
xor
sbb
cltd
in
mov
inc
or
xchg
mov
inc
xor
ljmp
dec
out
aas
or
mov
fs
push
mov
mov
daa
pusha
dec
xchg
je
loope
sub
push
jnp
leave
rorb
out
jnp
jg
jo
hlt
xor
lcall
sub
fisttps
mov
xchg
and
cld
fidivrs
jmp
pop
shlb
pop
mov
mov
dec
repz
inc
ret
gs
or
mov
inc
js
add
sub
aas
imul
mov
fsts
mov
push
ljmp
mov
test
js
popf
sub
and
push
xor
sbb
xorl
push
mov
push
sbb
push
adc
test
incl
loopne
aam
xor
outsl
addr16
pushf
xchg
js
sar
std
jmp
cmp
or
or
js
inc
push
add
mov
or
mov
sbb
pop
dec
dec
pusha
xchg
adc
xchg
les
sbb
dec
push
and
shl
out
popa
and
lea
mov
subl
jle
lcall
int
push
out
mov
mov
sbb
mov
enter
shl
xor
adc
adc
xlat
fxch
adc
sbb
repnz
mov
loope
add
sub
push
dec
jae
shlb
dec
dec
cld
mov
fldl2e
cli
popa
fldl
sub
xor
fs
scas
dec
push
xchg
cs
mov
mov
inc
sbb
in
push
mov
in
sub
pop
push
in
cmp
pop
div
sub
addr16
pop
sbb
rcl
stos
fisttpll
popf
jnp
lds
sub
jmp
mov
icebp
sbb
mov
adc
cltd
in
xor
dec
jg
lds
enter
data16
lahf
enter
sbb
popa
mov
push
test
inc
or
push
dec
bound
xlat
pop
xchg
jmp
in
pop
ds
mov
nop
icebp
inc
movsb
jnp
shll
inc
cli
out
pop
cmpsl
sub
clc
cmpsl
aas
js
pop
sbb
adc
sub
cli
xchg
scas
cmp
jmp
cmp
xchg
push
sub
add
dec
mov
inc
test
fs
add
dec
sbb
jo
in
cli
xchg
idivb
sarb
and
fdivl
repz
gs
mov
dec
sbb
dec
into
enter
cmp
mul
pop
rolb
insl
repz
push
pop
cwtl
dec
stos
shrb
scas
inc
inc
cmpsb
ds
das
or
into
mov
mov
js
xchg
rol
mov
repnz
out
out
jns
into
aam
enter
stos
outsb
dec
push
mov
cmp
nop
jg
jmp
mov
jle
lods
jb
add
pop
hlt
out
shll
aad
mov
rcr
es
dec
ss
mov
into
sub
bound
out
and
sbb
mov
sub
cmc
fstl
iret
add
sub
scas
and
cwtl
fmul
in
insl
mov
push
pop
call
jecxz
cmc
cmpsb
cmp
xor
in
jmp
dec
ficoms
jle
lods
cwtl
push
ss
dec
repnz
out
aad
es
test
or
rol
mov
xchg
shlb
stc
in
xor
add
test
js
lds
es
cli
adc
sbb
xor
sub
cmp
pop
jg
cli
roll
sbb
xchg
jnp
xchg
lock
xlat
decb
cmpl
mov
pop
call
lds
stos
sub
cmpsb
cld
mov
aam
dec
cmp
xchg
loop
or
jb
and
push
mov
add
mov
mov
ljmp
ret
rolb
mov
cmp
mov
jl
or
sbb
sbb
into
insb
xchg
pushf
fs
cwtl
test
sub
dec
jbe
add
pushf
cmp
cmc
test
stos
jns
out
push
repnz
shll
mov
mov
addr16
in
adc
mov
out
inc
mov
adc
andb
into
aam
cld
xchg
mov
inc
sbb
and
aaa
in
arpl
xchg
fnstenv
pop
sbb
inc
xchg
xchg
adc
test
rcrl
sbb
jno
outsb
lock
mov
xor
inc
cwtl
fsubrs
out
lret
jb
loope
ds
shll
adc
push
mov
aad
lock
inc
jns
pushf
push
pop
test
xchg
xor
inc
repnz
imul
in
or
mov
and
scas
loopne
ds
movsl
lea
jo
jecxz
inc
dec
xchg
xor
mov
sbb
hlt
or
out
lcall
sub
add
out
lret
xchg
cltd
fcmovnb
dec
icebp
arpl
leave
ljmp
mov
sub
xchg
jecxz
nop
js
mov
jl
mov
rorl
bound
or
xor
stos
push
loopne
test
cwtl
inc
movsl
test
xor
ss
push
mov
cltd
or
leave
int3
cmp
and
push
and
lock
arpl
sbb
adc
pop
fldcw
test
mov
bound
lret
jae
fildl
jl
or
neg
sub
sub
hlt
adc
in
adc
stc
xchg
cmp
lods
sbb
pop
out
popf
fs
cmp
xor
sub
adc
mov
pop
mov
mov
pop
jnp
mov
loopne
ljmp
pop
ljmp
push
or
push
in
icebp
insl
jne
pop
iret
sbb
mov
enter
pop
sar
insl
xor
push
data16
int3
call
pop
and
mov
rolb
sbb
dec
out
pop
jecxz
jae
ret
xorl
fmuls
push
inc
mov
sbb
sub
or
pop
out
lods
cltd
mov
mov
hlt
ja
mov
mov
mov
dec
mov
hlt
popf
insb
cmp
repz
pushf
scas
adc
test
mov
in
std
out
pop
sbb
xchg
mov
jo
jns
adc
aam
pop
and
pop
xor
cs
movsl
jno
insb
push
cmp
mov
insl
aas
mov
mov
xchg
or
mov
in
test
in
es
push
and
sub
or
and
pop
pop
add
inc
push
arpl
test
push
or
mov
repz
rclb
in
pop
test
jmp
lret
es
je
cmpsl
cltd
cmp
les
xchg
add
mov
dec
aas
jne
aaa
shll
jno
popa
adc
jo
lods
jp
cwtl
sti
in
mov
mov
adc
arpl
jge
add
out
and
push
mov
sub
lahf
pop
jle
inc
stos
xlat
mov
stc
hlt
or
cmpsl
call
add
mov
repz
pop
stc
mov
mov
push
aaa
xchg
adc
int
je
nop
mov
mov
adc
int
adc
lock
and
adc
lahf
add
mov
xchg
sub
pop
push
xor
lahf
inc
mov
test
cmc
and
test
mov
fcompl
xchg
sahf
xor
ja
aas
add
jge
pushf
mov
mov
mov
out
arpl
mov
ret
xor
repz
mov
dec
inc
add
into
sub
popf
lret
int
cmpb
loop
lea
mov
xor
inc
jge
push
call
cmpsb
mov
xchg
bound
je
pop
scas
pop
out
test
xor
sub
notb
xor
pop
int
aad
jl
std
shl
out
adc
fwait
clc
mov
pop
mov
mov
inc
push
movsb
sbb
je
mov
dec
adc
and
ret
xchg
mov
test
mov
mov
cmp
mov
jle
sbb
pop
add
or
arpl
jp
daa
addr16
sub
inc
out
out
sub
rep
mov
push
and
daa
mov
jnp
neg
fsubl
xor
lods
jo
sub
push
or
xchg
push
mov
nop
dec
jmp
decb
testl
ss
ja
out
pop
fidivl
cvtps2pd
out
push
mov
adc
push
pop
mov
adc
addr16
mov
lds
lods
std
mull
adc
jne
mov
mov
sahf
and
or
out
movsb
pop
fcmovu
jbe
push
dec
push
test
jmp
jno
stos
xor
xor
pushf
push
decb
jle
and
inc
fwait
jbe
sbb
cmp
jle
xchg
add
mov
mov
push
dec
mov
roll
add
adc
lds
int3
outsl
ljmp
dec
test
push
add
mov
xorl
push
adc
sti
cmc
mov
sub
push
ret
imul
xchg
sbb
jle
xor
fildl
xor
dec
xlat
jp
add
mov
out
nop
cltd
mov
mov
fcmovnu
bound
jne
daa
sub
jne
mov
mov
dec
bound
or
add
es
int3
inc
inc
add
cli
or
in
fwait
sub
ljmp
cmpl
mov
dec
xchg
das
mov
pop
xchg
fwait
cmp
mov
incb
fwait
cmp
test
mov
jle
xor
imul
test
mov
int
test
arpl
sbb
daa
cmpsb
xchg
sbb
jbe
in
notl
mov
es
rcrb
pusha
xlat
xor
scas
cli
rcl
aaa
adc
aas
dec
sbb
aam
test
arpl
arpl
lods
adc
inc
or
je
xor
test
movsb
pop
lret
mov
sub
pop
pop
push
dec
ja
stos
rcll
loop
pop
cmpsb
int3
xchg
cld
in
cmp
shlb
mov
repnz
mov
xlat
jb
pop
popf
cmc
pop
shll
and
jns
ja
mov
imull
call
popa
pop
fsubrl
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
or
call
add
es
mov
cmpb
push
add
pop
add
adc
sub
mov
mov
mov
xor
and
add
js
xor
sub
add
push
sbb
popl
mov
xor
sub
jmp
mov
jmp
dec
dec
js
or
cmp
jne
push
or
pop
jmp
fs
xchg
ror
into
out
cld
test
or
mov
jmp
xor
sub
mov
sbb
xlat
les
je
push
ja
leave
pusha
and
jle
adc
pop
xchg
cmc
mov
das
mov
mov
fimuls
sbb
pop
ja
and
test
or
adc
mov
lcall
icebp
sub
jo
pop
fisubs
xchg
mov
and
fimuls
dec
add
add
neg
cwtl
repz
scas
fnsave
repz
daa
mov
add
jle
xor
fidivs
rcrl
mov
cltd
pop
mov
pop
ja
inc
lods
sub
cltd
stc
call
mov
repz
mov
inc
lahf
pop
mov
ja
leave
mov
dec
and
sbb
pop
xchg
jbe
or
pusha
cld
adc
sbb
out
lret
xor
mov
push
insl
ret
seta
sub
add
pop
mov
xor
clc
or
jne
mov
pusha
cli
add
jo
sbb
dec
adc
stos
jg
fildll
in
push
push
test
xchg
sub
fistpl
ljmp
or
sub
gs
xor
int
test
inc
stos
mov
adc
xchg
fs
mov
fidivs
lea
stos
adc
hlt
dec
fildll
inc
xor
and
outsl
je
insl
scas
lods
dec
cwtl
lea
mov
jnp
mov
ljmp
mov
push
jo
addr16
jbe
sub
add
out
ror
mov
lcall
xchg
jle
test
push
xor
insl
pop
ljmp
adc
lret
push
lret
clc
jne
cmc
fwait
dec
nop
cli
jecxz
mov
icebp
lret
ret
jo
outsl
nop
xchg
out
nop
test
jbe
dec
lcall
sub
jbe
xchg
stc
mov
in
int3
add
cmc
fwait
js
movsb
into
xchg
mov
incb
push
adc
fwait
or
outsl
daa
add
out
fstpt
int
xchg
pop
call
imul
sbb
adc
fwait
outsl
mov
inc
popa
push
mov
mov
adc
sbb
jnp
scas
std
dec
mov
cmpsb
popf
ret
fildl
mov
out
mov
jecxz
jo
testl
inc
push
dec
push
sti
repz
mov
cmp
pop
mov
cmp
adc
inc
push
outsb
pop
mov
pop
mov
cmpsl
outsl
sub
jb
mov
cmp
adc
mov
pop
mov
and
fildl
inc
mov
fcompl
lods
adc
inc
sar
cmp
cmp
jg
add
xchg
sti
repnz
dec
adc
fildl
in
les
ljmp
mov
xor
icebp
fcmovne
mov
les
in
fildl
int3
pusha
fildl
sti
les
std
pusha
fildl
sti
les
xchg
mov
fildl
sti
lds
sti
les
mov
xchg
or
sti
les
out
jo
testl
sti
les
fs
hlt
push
les
icebp
pop
insl
in
inc
fucomi
mov
inc
insl
pop
std
fucomi
mov
pusha
fildl
pusha
cwtl
rolb
sti
les
xlat
fdiv
int
jb
xlat
adc
scas
dec
pop
fiaddl
sub
push
aad
std
rclb
add
jl
fwait
fs
mov
jmp
sti
mov
pop
std
sub
shll
xchg
jb
lds
xchg
imul
jo
fiaddl
mov
jb
icebp
insl
mov
jo
rolb
pop
mov
sti
les
fstps
jb
inc
lds
mov
fisubrl
std
lds
cld
fcmovne
sti
fildl
sti
fildl
pop
mov
cmc
jb
xchg
pop
jmp
push
jae
mov
popf
cmp
pop
fidivl
xor
pop
xor
imul
jae
push
in
cmp
pop
fidivl
xor
add
fildl
outsb
sub
jno
subb
fnsave
dec
shll
jno
bound
xor
xor
dec
fsubp
or
fnsave
dec
sbb
rolb
dec
shll
jno
bound
xor
xor
dec
jge
fnstsw
test
in
mov
shll
jno
bound
xor
xor
dec
mov
rcl
sub
lods
jno
sub
data16
ljmp
fildl
jecxz
fnsave
dec
shll
rol
data16
ljmp
push
loope
mov
rcl
sub
insb
jle
sub
inc
dec
inc
insl
pop
std
scas
jne
test
push
mov
fcmove
sub
test
ret
jo
xor
jmp
test
push
mov
push
iret
sub
push
ret
jecxz
fildl
xchg
add
and
sti
rolb
sti
mov
mov
cld
fucomi
sub
or
push
mov
push
jb
fcomi
dec
cwtl
fiaddl
std
fucomi
mov
dec
inc
fisttpl
fildl
jl
fstpt
movl
cmp
insl
gs
stc
fildl
in
xor
nop
push
cmp
popf
gs
pusha
xor
les
filds
and
cmpsl
popf
xor
push
jns
clc
cmc
dec
jo
mov
faddl
dec
dec
ficoms
push
fst
sub
sbb
std
orb
hlt
xorb
in
pop
insb
jno
pop
inc
ss
mov
fildl
sti
fildl
sti
fildl
sti
fildl
sti
mov
sub
sti
les
push
fildl
sti
fildl
sti
fildl
std
fildl
sti
fildl
sti
les
jno
push
loope
scas
xor
outsl
or
bnd
fwait
lret
leave
test
in
mov
jne
sub
mov
ljmp
inc
cmpsl
stc
cld
xchg
jmp
sub
roll
daa
fldenv
repnz
mov
inc
mov
scas
push
push
push
shr
shlb
stc
sub
sub
cmpsb
adc
push
sub
mov
jbe
dec
xor
js
jb
jnp
sbb
scas
push
outsb
pop
or
mov
or
jae
add
lret
ja
cmp
stos
lock
inc
inc
jnp
aas
push
lds
fists
lods
rcrb
aas
cmc
das
fidivrl
sbb
jecxz
ljmp
hlt
mov
scas
xor
add
movsl
cli
scas
sub
lds
rcrl
sbb
pop
mov
xlat
add
add
sahf
push
popa
jno
sub
test
fnstsw
inc
add
aad
aas
cmc
fmull
hlt
jbe
add
scas
fidivl
sub
inc
out
sub
mov
mov
lahf
mov
xor
addr16
cwtl
sahf
shrb
sbb
je
ja
push
sahf
sbb
mov
push
scas
xchg
pop
fs
dec
orl
test
mov
mov
std
ror
gs
lock
ficoml
inc
in
ja
in
int
ljmp
mov
repnz
adc
arpl
jnp
bound
sar
bound
cmp
and
clc
dec
std
jle
ret
xor
push
fwait
aaa
cld
movsl
adc
test
mov
aas
ret
pop
mov
ss
xchg
dec
xor
stos
mov
sqrtps
dec
and
in
shrl
fs
les
cmp
in
stc
xor
jbe
fcmovnu
cld
repnz
ljmp
mov
stos
sub
fists
push
rcrl
out
add
push
and
push
les
mov
mov
cltd
jae
loope
clc
adc
push
inc
mov
or
inc
xor
push
adc
mov
std
arpl
mov
les
and
jecxz
sti
test
push
adc
and
cmp
or
push
shll
aam
xor
rorl
es
les
cmp
lea
adc
mov
int3
jmp
xor
adcl
iret
jbe
sub
rclb
cmp
jns
aad
nop
hlt
or
shlb
pop
fsubrs
inc
add
add
add
or
add
adc
pop
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
pop
add
add
pop
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
shll
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
ret
mov
cli
fcompl
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
ret
fbld
cmp
and
mov
ret
rcl
sti
mov
std
popf
jge
imul
out
mov
fsubl
cmp
push
or
scas
pop
pop
bound
sub
sahf
mov
adc
push
mov
xchg
lods
idiv
imul
push
hlt
lea
mov
pusha
sbb
mov
std
shr
xor
sub
dec
fcomps
imul
mov
and
lock
or
scas
mov
imul
in
inc
imul
adcl
mov
sub
jno
stc
in
shll
clc
xor
xlat
pop
lea
sub
xlat
push
or
sub
xchg
mov
push
jbe
or
jmp
out
imul
cmp
mov
pop
mov
aas
hlt
out
in
pusha
sub
mov
jle
aam
xchg
sub
insb
imul
ja
inc
or
iret
mov
lods
mov
inc
and
cld
fcoms
add
sbb
lea
jg
daa
xor
pop
push
negb
fcomip
ja
push
and
loope
dec
sub
iret
rolb
xor
sbb
sbb
fildll
in
rclb
mov
mov
loopne
dec
cmpsb
out
les
sbb
test
sub
popa
loope
ss
fsubrs
mov
ret
les
enter
mov
sbb
rorb
add
add
sub
adc
rcl
xlat
mov
pop
mov
pop
adc
xor
pop
pop
push
inc
xchg
lea
fldcw
add
mov
cld
mov
push
xor
lods
popf
sub
ljmp
scas
aam
mov
pop
stos
pop
daa
movsb
cld
daa
cmp
in
inc
xchg
mov
rclb
xor
arpl
sub
cmp
mov
adc
lret
jb
pop
push
arpl
fidivl
pop
mov
adc
out
sbbb
xlat
je
leave
cmp
dec
cmp
inc
sub
jmp
pop
pop
pop
out
mov
sub
js
cld
push
pop
cmp
data16
push
jne
mov
push
mov
das
push
inc
sar
mov
add
jg
mov
mov
fildll
adc
push
jmp
js
push
dec
push
test
insl
bswap
xchg
mov
mov
arpl
hlt
mov
mov
jnp
ret
cmc
sub
mov
loope
cmp
push
mov
and
or
call
test
decl
xchg
outsl
cltd
pop
push
js
fidivs
dec
nop
xchg
add
xchg
andl
and
xor
mov
pop
dec
jle
push
nopl
mov
movsb
mov
adc
rcrb
aas
adc
fs
xor
imul
jmp
push
ljmp
pop
les
xchg
daa
cmpsl
jecxz
test
fwait
jns
xor
mov
jns
push
dec
adc
or
leave
negl
in
sbb
in
pop
icebp
cmp
popf
jge
scas
jge
mov
add
dec
fcmovu
ds
loopne
push
cwtl
inc
pop
mov
mov
mov
jae
add
cmpsb
in
pusha
mov
add
push
mov
jb
add
movsl
adc
or
outsl
xchg
mov
pop
or
stos
cmp
pop
leave
lcall
add
xor
inc
lret
and
lods
xchg
adc
aam
and
fs
popf
testb
inc
mov
mov
mov
fstpt
xchg
adc
push
sbb
lret
mov
xchg
push
adc
rorb
xchg
jg
cmc
add
fsubrp
lahf
pop
pop
pop
mov
cmpsl
sbb
clc
pop
xchg
mov
cmpsb
mov
push
ret
in
cmc
cltd
leave
adc
fsubrl
push
push
xchg
loope
outsl
mov
xor
adc
rorl
add
cmc
hlt
lock
imul
dec
lcall
testl
sbb
xchg
sbb
scas
push
and
jg
std
ret
sub
into
and
xor
push
mov
int3
hlt
pop
and
cmp
ljmp
sub
inc
adc
popf
iret
cmpsb
inc
mov
push
cmp
xchg
cltd
jmp
sbb
push
pop
inc
movsl
cli
lock
push
push
pushl
mov
test
mov
mov
mov
insb
pop
js
cmc
push
push
in
push
js
rcrb
push
ss
paddsb
inc
and
outsl
fcomps
out
insb
mov
and
test
fcmovu
fdivl
add
push
test
daa
lods
call
and
dec
outsb
in
jle
in
fs
or
ja
push
xor
pop
mov
dec
cmp
pop
icebp
xor
test
aad
push
adc
pop
pop
gs
xchg
xor
sbb
data16
mov
dec
stc
mov
pop
xchg
push
loope
cmpsl
push
idivl
sub
mov
cmpsl
call
pushf
jb
movsb
adc
xor
out
cwtl
lret
push
call
in
mov
or
sbb
push
jmp
out
dec
xor
jp
out
mov
ja
mov
xchg
cmpsb
jg
aad
mov
and
jecxz
xor
push
aaa
lret
mov
jp
xchg
sarl
jbe
push
jmp
lret
subl
or
popf
or
push
mov
enter
jl
test
and
cmp
icebp
imul
leave
out
ja
xchg
sbb
dec
sbb
push
fsubs
jge
ret
movsl
aas
inc
inc
sbb
cld
mov
mov
test
inc
push
enter
imul
xor
movsl
or
test
out
shrb
dec
nop
xor
sarb
sbb
pop
test
adc
lock
and
or
mov
xchg
out
aaa
fimull
das
popa
js
inc
mov
or
pop
mov
int3
mov
fdiv
mov
xlat
sahf
mov
faddl
jl
xor
call
aam
mov
cld
out
jns
mov
cmp
pushf
call
dec
push
repnz
sbb
stc
jbe
cld
pushf
in
out
pop
push
neg
dec
flds
pop
dec
push
insl
add
mov
mov
cmp
push
lods
add
mov
cmp
jne
xchg
pop
outsb
rcll
jae
pop
dec
out
int3
add
dec
ds
adc
xchg
and
int
mov
cmpsl
sbb
adc
push
mov
pop
jae
aam
out
fwait
ss
mov
and
decl
pop
iret
lock
popf
mov
data16
jle
push
jg
mov
mov
pushf
rclb
or
sarb
sbb
inc
fisubs
sub
sub
mull
and
mov
sub
test
mov
dec
sbb
push
pop
test
loope
icebp
xor
sbb
adc
movsb
cmp
stc
enter
sub
xchg
jae
ja
lcall
add
cmc
mov
sbb
in
xor
sbb
jns
mov
adc
adc
jb
sahf
rolb
inc
clc
inc
lret
pop
jno
xchg
push
in
test
xlat
add
pop
mov
dec
sbb
cmpsb
daa
jo
sub
mull
mov
test
sbb
ret
mov
lods
loopne
add
and
mov
mov
insb
pop
aad
inc
dec
cld
jecxz
xchg
mov
dec
xor
dec
add
cs
inc
pop
das
xor
jb
in
leave
mov
test
lahf
je
fst
adc
jecxz
adc
sub
lcall
insb
std
mov
or
mov
xor
xor
arpl
pop
shlb
jno
sub
rcll
rorl
mov
jno
dec
loop
aam
pop
inc
inc
imul
idivb
lret
ljmp
pushf
dec
cltd
jle
mov
cmp
daa
jl
push
sahf
aam
adc
mov
push
insb
push
push
dec
sbb
faddl
jne
jmp
outsb
punpckhbw
sbb
xor
ret
ljmp
sub
cmpsb
and
jecxz
mov
scas
dec
xorl
or
sahf
fmuls
xchg
or
sbb
movsb
sbb
gs
cmp
cmc
lods
push
jae
out
fstpl
aas
adc
xchg
mov
testl
fbstp
nop
pop
pop
xchg
mov
mov
add
xor
sti
test
pop
sbb
out
pop
xchg
cmp
es
fwait
xchg
stos
or
enter
stos
test
mov
mov
mov
mov
inc
inc
and
js
mov
fcomps
imulb
dec
push
mov
sahf
fldt
jae
mov
add
inc
sub
scas
lds
lea
enter
add
dec
fistpll
push
cs
pop
cmp
sub
xchg
mov
ret
push
daa
cmp
in
sub
fisttpl
cmpsb
xorb
rcll
decb
int3
push
jne
jno
pop
sti
daa
lds
scas
mov
insl
sahf
icebp
add
imul
add
inc
or
push
fisubrl
push
or
pop
jp
popa
jns
mov
push
mov
mov
fstpt
pop
xchg
cmp
inc
ret
jbe
outsb
pop
pop
daa
mov
int
cld
das
iret
repnz
sahf
insl
psadbw
adc
loope
lret
adc
into
mov
cmpsl
mov
loopne
pop
push
mov
pushf
ss
and
add
repz
into
push
jno
mul
cmp
insl
xlat
push
pop
es
xor
cli
add
cmp
shl
xor
add
insb
xchg
push
add
adc
push
in
xor
inc
push
pop
jb
cld
mov
cmp
push
mov
jno
and
pop
lret
test
jnp,pn
sub
orb
add
mov
pop
adc
popf
dec
xor
adc
das
and
les
adc
adc
jno
xchg
and
add
mov
lea
adc
xchg
jae
pop
and
jle
cmpsl
stos
test
loop
sbb
test
lock
pop
mov
jae
jg
pop
sub
sub
in
xchg
rorb
pop
xchg
cmp
or
lcall
repnz
dec
and
or
insb
xor
cltd
inc
dec
popf
call
add
mov
jae
push
dec
mov
mov
fisubrl
or
decl
cld
daa
cmp
test
mov
rclb
cs
xor
in
cmp
adc
or
or
xchg
imull
es
enter
inc
scas
mov
imul
cltd
jmp
cltd
movsb
mov
bound
cmpsb
scas
fcoms
push
or
stc
xchg
std
jb
mov
xchg
jl
and
mov
das
lahf
jo
out
fistpl
iret
cmp
dec
cmp
je
cltd
ja
fadd
cltd
mov
push
xchg
out
mov
stos
push
dec
jg
cmp
ss
mov
sub
fisubs
jg
adc
ss
jns
mov
dec
jne
sub
imul
pop
stc
and
pop
jno
out
dec
mov
adc
sbb
sbb
leave
push
fidivrs
adc
add
mov
cld
and
mov
out
dec
int3
jo
lds
xor
adc
shl
dec
pcmpgtb
aad
loopne
lret
or
ret
push
lcall
adc
ds
mov
in
dec
popa
xlat
xor
mov
jo
push
lahf
xor
or
push
push
faddl
jns
jns
stos
leave
ljmp
sub
jno
mov
cmp
inc
hlt
in
addl
call
test
leave
sbb
test
out
jecxz
add
test
fistpll
dec
mov
mov
jno
std
pop
sub
mov
ret
sbb
dec
cmpsl
xchg
nop
lret
cmp
dec
mov
dec
fdivr
dec
xor
popa
imul
bound
push
ret
repz
add
mov
add
dec
stos
sbb
cmp
fadd
andl
test
lea
jge
je
xchg
mov
push
push
test
pop
adc
cld
add
mov
cwtl
into
sbb
insb
js
ljmp
int3
pop
mov
lret
inc
loop
lret
fcomps
xor
out
jbe
sbbl
adcl
adc
fisubrs
add
scas
mov
icebp
sbb
jnp
xor
adc
pop
ja
insl
testb
mov
cmp
mov
ret
repz
pop
xlat
cli
ret
push
jns
jle
daa
imul
sbb
outsl
orl
jmp
aas
nop
hlt
nop
cltd
imul
xchg
movsl
ficoms
inc
and
repz
jmp
jecxz
inc
lret
ret
add
or
xor
pop
cs
or
icebp
test
hlt
in
out
loop
outsb
and
xchg
imul
xchg
cmpsl
cltd
leave
cld
jb
mov
pop
mov
and
ret
mov
stos
roll
sbb
mov
dec
jns
movl
xor
mov
add
movsl
and
dec
xchg
aas
mov
mov
out
imul
fsubr
sbb
aaa
sbb
and
xchg
sub
subl
cmc
sbb
lods
pop
sub
pop
idivl
jb
aaa
mov
lea
adc
jne
mov
jb
pusha
jle
mov
aad
hlt
shrd
popa
fdivrl
inc
loope
daa
shrl
adc
xchg
insl
mov
rolb
pop
imul
inc
add
mov
es
ret
sbb
roll
dec
mov
cmpsb
sbb
mov
add
push
xor
rcl
xchg
lret
repnz
aam
xor
adc
and
cld
int3
out
orps
sub
xor
ss
and
clc
dec
lds
addr16
xadd
rolb
mov
dec
push
sbbb
jmp
pop
test
mov
sbb
mov
movsl
pop
mov
fcmove
popa
loopne
roll
mov
frstor
rclb
nop
pop
into
lock
icebp
sub
aam
mov
jg
inc
leave
sbb
test
push
sub
jp
dec
cmp
test
xchg
pusha
xchg
movsb
add
ret
lahf
movsl
xchg
cmp
test
imul
faddl
dec
loop
inc
add
mov
fstl
in
stos
inc
xchg
pop
inc
ljmp
pop
insb
loop
inc
roll
lods
fwait
adc
mov
mov
loop
mov
stos
mov
insb
test
imul
pop
pusha
hlt
je
dec
rcrl
pop
lret
pop
das
aaa
jb
pop
cmpb
pop
les
imul
xchg
sahf
mov
mov
outsl
dec
inc
ds
push
cli
add
ret
adc
sbb
cmp
add
js
cltd
mov
xchg
scas
sbb
fildll
test
pop
push
inc
mov
aad
xlat
jae
adc
faddl
out
stos
xchg
mov
test
push
jp
orb
sub
push
pop
sbb
data16
dec
out
and
mov
inc
lcall
cli
in
push
out
sbb
cmp
pop
aam
inc
lret
and
movsl
subl
mov
xchg
lret
aam
jg
rclb
push
sahf
jp
fisttps
mov
cld
inc
sbbl
pop
xor
pop
cli
xchg
inc
in
sub
jp
and
sbb
sbb
mov
lret
jge
mov
in
mov
popf
subb
in
lret
inc
pop
xchg
lods
cmp
pop
ja
jmp
out
icebp
lock
or
sub
xchg
xchg
fwait
lock
push
aad
icebp
sub
stos
push
xor
ret
push
sbb
incb
call
push
shll
sub
mov
ljmp
pop
pop
push
insl
mov
fistps
cmpsl
inc
pop
inc
mov
pushf
mov
mov
out
cmovg
cmp
rorl
dec
fcoml
mov
xchg
and
js
das
xchg
out
mov
adc
mov
sbb
cmp
push
test
mull
cmp
scas
sti
jnp
out
movsb
lret
jb
stos
mov
cmp
sub
test
jp
sbbb
lods
test
ljmp
subb
popa
shrl
insb
jl
sub
or
lahf
jns
add
call
push
sub
adc
nop
sbb
sbb
xchg
jmp
test
adc
push
out
or
clc
roll
dec
jne
popf
xchg
mov
movsb
int3
aam
call
sub
lds
fneni(8087
mov
or
jae
push
cmc
adc
sub
adc
sahf
xchg
and
jecxz
test
pop
and
push
fmul
pop
pop
inc
mov
in
das
out
jg
xchg
mov
adc
pop
push
pop
inc
add
and
test
or
inc
stc
mov
xchg
notb
out
push
popa
movsb
add
mov
fidivs
test
sub
je
lret
mov
mov
mov
adc
dec
xlat
andb
dec
cmp
inc
cmpl
mov
adc
testb
push
lahf
mov
push
cmpsb
repnz
into
data16
or
mov
imul
push
fstpl
or
fwait
dec
mov
cmpsb
sahf
cmpsl
lret
mov
adc
push
dec
sub
add
mov
sub
cmp
fs
lahf
dec
rorl
adc
xchg
mov
lock
dec
call
inc
inc
lret
xor
lods
repz
andl
test
pop
xchg
adc
dec
in
addr16
cmp
and
cli
and
sbb
bound
xor
insb
aam
inc
mov
or
in
xor
and
jge
dec
add
shll
push
jecxz
stc
sub
xchg
inc
in
mov
sarb
std
shl
idivl
pop
lds
addr16
jl
fnstcw
or
mov
addb
and
aas
and
mov
popw
jle
fcmovnu
test
adc
cmp
xchg
insl
push
shlb
inc
xor
or
jne
push
lret
sbb
popf
jmp
stos
jmp
aas
or
mov
js
mov
fnstsw
leave
loope
push
mov
xor
imul
inc
std
pushf
adc
dec
fldcw
or
lea
leave
movsl
fisubs
mov
dec
pop
inc
lahf
mov
or
rolb
cmp
mov
adc
fisubrs
mov
fst
cmp
add
jo
jnp
fstl
jns
jecxz
push
mov
aas
dec
out
cmp
jbe
ret
jmp
add
arpl
and
out
into
cwtl
adc
adc
mov
int
cltd
sbb
addr16
xchg
mov
fidivs
int3
inc
xor
or
pusha
lods
xchg
repnz
lret
fld1
dec
enter
mov
dec
or
cmp
into
push
jb
adc
mov
out
mov
add
icebp
leave
lods
mov
outsb
jge
push
inc
jns
adc
sbb
jge
ja
cmpl
iret
das
and
les
mov
mov
and
addr16
sahf
imul
cld
pop
cld
and
out
jl
cmp
mov
mov
icebp
cwtl
movups
ja
shrb
std
popa
sub
popf
cltd
lods
jne
in
test
mov
sahf
push
sbb
lods
push
and
ljmp
popf
fwait
sbb
and
mov
ja
dec
leave
js
lods
xchg
push
cmpsb
cmp
mov
adc
lock
sahf
out
das
les
aaa
xor
fwait
jmp
dec
int
in
mov
cli
inc
ljmp
inc
jmp
leave
stos
cltd
sbb
dec
and
rcrb
pop
sti
jle
xor
xor
fidivrl
testb
jge
int3
and
data16
mov
pop
mov
add
in
dec
icebp
in
add
add
sbb
sti
pop
cli
adc
and
lret
sub
sarl
in
sahf
pushl
mov
subb
pop
mov
mov
mov
mov
icebp
test
nop
push
fwait
pop
add
ljmp
jae
or
and
sahf
and
ret
sub
pushf
mov
in
rolb
xchg
push
mov
lods
hlt
and
lods
jecxz
adc
sbb
std
pop
fidivrs
dec
xchg
mov
xor
movsb
outsb
push
dec
mov
jns
aam
fistps
dec
inc
jl
repnz
loop
leave
clc
loope
xchg
test
loope
pop
mov
sti
and
push
mov
inc
rcrb
sbb
lahf
mov
fdivs
decl
xchg
call
mov
xlat
ret
jmp
or
sbb
adc
mov
and
jno
jno
mov
mov
enter
lret
pshufw
imul
fbstp
lock
xor
jle
pmuludq
pop
sti
pop
repz
or
pop
jo
xchg
push
push
pop
jae
sub
cmp
fistpl
dec
xchg
scas
cmp
rsqrtps
and
sbb
jb
adc
mov
push
stos
gs
inc
stc
xor
sub
xchg
push
dec
push
aad
sub
xchg
sbb
jmp
mov
mov
scas
out
dec
mov
repz
testl
mov
scas
pop
jmp
testl
jno
stos
daa
cmp
and
rol
repz
loope
in
jl
jl
push
xor
xchg
out
sub
adcb
sbbl
inc
cmp
jbe
comiss
cs
cmc
inc
and
sub
lcall
jbe
cmpb
negl
popf
jl
adc
jmp
int3
stos
out
push
fstps
mov
stos
adc
xchg
pushf
lcall
test
into
imul
inc
leave
xlat
sbbl
cltd
aas
sub
push
les
nop
and
xchg
mov
jno
mov
inc
aad
loop
inc
or
dec
jle
cmc
fwait
clc
push
dec
int
sub
mov
xchg
fcmovnb
notb
sub
mov
cmp
pushf
sub
push
pop
or
fdivs
fwait
shl
dec
pop
out
divl
ficoms
movsl
mov
test
push
jmp
repz
rclb
jmp
adc
out
add
movsl
jg
adc
adc
push
das
pushf
xchg
rcrl
xor
sbb
push
lcall
or
dec
sub
cld
mov
ret
inc
hlt
popa
arpl
or
out
lds
jnp
ds
xchg
mov
les
or
in
lds
xor
aas
xchg
shrl
mov
mov
in
insb
aaa
pushl
mov
movsl
sbb
fdivr
pop
add
shrl
xchg
test
mov
addb
out
dec
bound
xor
push
aas
jl
les
and
or
and
push
mov
lods
inc
or
push
xchg
lock
mov
and
jge
and
mov
hlt
nop
pop
jne
es
cmpsl
out
sub
nop
xor
mov
adc
or
mov
jmp
fcoml
mov
or
cmp
mov
add
cmpsl
das
add
pop
jne
or
loope
lock
int
arpl
insb
cmp
pop
popa
xchg
addr16
mov
pop
jecxz
rcrb
xchg
sbb
dec
cld
jle
mov
fs
iret
push
sub
push
pop
sub
or
pop
lahf
int
push
andb
dec
cld
bound
pop
mov
fidivs
jne
stos
dec
insl
mov
mov
popf
cmp
adcb
movsl
adc
dec
push
dec
pop
mov
ss
rcrl
and
int
fs
push
fldl
daa
ret
mov
cmp
mov
test
inc
mov
sub
mov
lret
push
add
sbb
or
mov
and
ret
pop
cltd
out
popf
mov
mov
add
cmp
push
add
push
mov
cmp
inc
andl
ja
jl
sub
sub
mov
roll
test
insl
cli
fdiv
movsl
mov
mov
int
bound
int3
xor
pop
add
or
push
and
fimuls
fld
push
out
sahf
sub
push
jb
sbb
stos
mov
pop
sarl
call
lock
xchg
pop
push
adc
jo
popf
iret
out
imul
loope
or
and
subl
mov
and
push
test
xchg
and
popf
fisttpll
gs
pusha
scas
inc
lahf
jb
aas
pushf
inc
ret
insb
shrl
imul
xor
mov
xchg
mov
cmp
cvtps2pd
sub
cmc
addl
rcrb
mov
test
mov
cs
roll
imul
repnz
adc
inc
mov
and
dec
pop
adc
scas
adc
pop
mov
scas
cmp
inc
les
push
ss
push
inc
jo
xor
inc
cmp
or
into
icebp
jae
sub
mov
icebp
push
cmp
mov
jle
daa
arpl
jnp
cmpsb
jns
testl
mov
add
cltd
cmp
cmp
mov
jle
add
dec
sbb
add
sub
inc
or
push
sbb
icebp
inc
flds
mov
cli
test
push
mov
dec
inc
cmpb
jmp
and
mov
shlb
fstp
push
mov
xchg
and
push
inc
enter
lods
fstps
pop
jb
mov
mov
fwait
std
xchg
and
fadds
movsb
push
mov
adc
push
push
in
xor
push
enter
fwait
stos
sub
adc
adc
mov
xchg
lock
xor
mov
push
jecxz
sub
mov
jns
push
push
pop
jns
adc
insl
clc
and
cmp
adc
and
xor
xchg
cmp
and
jne
std
mov
inc
ja
sub
adcl
mov
gs
pop
in
xor
or
sbb
data16
mov
or
movsb
sub
mov
dec
decb
xchg
or
jge
fcoms
fstpl
inc
pop
pop
movsb
in
je
xor
jg
jne
mov
popa
or
jbe
push
push
dec
popa
xor
sbb
dec
aam
xor
daa
in
loopne
and
and
push
out
xchg
and
mov
add
mov
enter
sbb
mov
mov
dec
xor
subl
add
nop
and
and
and
or
in
leave
mov
adc
xor
stc
sahf
popa
subl
shll
push
fsub
aaa
lds
aaa
mov
or
xchg
ficompl
dec
cli
hlt
testl
sub
mov
mov
pop
movsl
ret
fwait
adc
int
add
xchg
pusha
push
cmp
stos
pop
jmp
cmp
imul
stos
pushf
cmpsb
loopne
mov
lods
in
negb
lods
xor
sarl
data16
les
aas
divl
sti
out
out
mov
jno
cld
stos
lret
xchg
mov
xchg
loop
xchg
lret
loopne
mov
mov
outsl
stc
stos
adc
lret
ds
mov
mov
inc
or
arpl
or
std
xlat
xor
pop
xlat
loopne
cmp
mov
sti
xchg
vpunpckhdq
push
cmpsl
push
dec
outsl
repz
mov
dec
sub
je
cli
mov
cwtl
push
cmp
dec
push
aaa
in
jno
pop
jp
leave
push
test
out
sahf
adc
inc
dec
ficoms
js
dec
movlps
add
mov
push
cmc
lea
lds
cltd
xchg
cltd
out
jno
pop
cmp
nop
idivb
sbb
sbb
inc
adcb
mov
fildll
mov
cli
xor
stc
mov
lret
scas
pop
xchg
add
les
inc
mov
sbb
enter
pop
sub
lret
adc
int3
adc
ret
push
sbb
mov
mov
mov
out
and
bound
imul
mov
and
fbld
mov
frstor
cs
add
jno
mov
push
sahf
cmc
xchg
xlat
ds
mov
rcrl
fdivs
jl
lea
or
xchg
adc
cmp
jne
add
rolb
mov
ss
scas
in
outsl
jl
fcomps
loop
scas
dec
add
push
cmpsl
inc
subl
jnp
ja
ret
jmp
fwait
and
cmp
pop
fistpl
pop
mov
push
sarl
sub
lds
mov
cmp
sbb
pop
rclb
dec
and
jns
shrl
lahf
lahf
iret
repz
add
jae
adc
push
rcr
ss
mov
inc
test
sbb
rcrl
sub
mov
daa
std
pop
test
shufps
inc
sbbb
adc
and
jl
dec
popf
test
sub
jae
or
fdivl
xchg
cmp
or
dec
jg
in
xchg
jno
int
gs
push
movsb
sub
repz
aam
xchg
cmpb
add
inc
adc
jg
mov
push
pop
mov
adc
hlt
sti
xor
fidivl
rorl
xchg
cmp
or
sti
and
push
push
test
dec
ss
mov
pop
fsin
ljmp
stc
cmpsl
lea
jb
pop
jg
testb
sub
outsl
rorl
hlt
and
icebp
xor
aas
test
cwtl
cmp
les
inc
inc
in
leave
xchg
lods
cmp
mov
xor
movsl
sub
pop
pop
push
xchg
mov
mov
fldenv
jl
xorb
aad
decl
xor
or
sarl
leave
sbb
rcl
mov
pop
push
rorb
jo
mov
nop
mov
fists
inc
clc
inc
paddusw
cmp
adc
loope
xor
inc
hlt
mov
pop
and
sbb
xor
ret
push
cmp
insl
std
xchg
cmpsl
iret
out
jl
aam
xor
push
add
push
lret
fwait
loope
popl
cmp
lahf
mov
or
scas
pop
cmpsl
lea
dec
jg
inc
mov
pop
push
sub
leave
test
imul
stos
xor
adcl
mov
les
outsb
cmp
arpl
mov
out
pop
or
test
les
lods
lods
rcr
xchg
jge
in
nop
adc
xchg
pop
and
popf
insb
sbb
sub
add
out
sbb
sbb
imul
jmp
sahf
jae
push
sub
shrb
dec
lret
aam
arpl
rol
ficomps
xchg
cmp
fildl
rcrl
pop
scas
cli
cmp
scas
inc
mov
sub
sbbl
orb
or
aas
cmp
inc
das
jle
mov
gs
test
pop
ds
decb
cld
out
aas
pop
cwtl
call
push
ja
or
outsb
mov
adc
icebp
adc
add
and
inc
nop
in
test
jo
inc
insl
inc
cld
xchg
in
mov
inc
sahf
mov
std
imul
out
mov
mov
or
push
mov
sbb
arpl
stos
leave
or
lock
test
iret
mov
imul
cmp
push
addr16
enter
das
adc
cmp
repz
lret
roll
dec
or
jmp
mov
dec
std
into
jmp
stos
out
mov
mov
stc
sete
insl
mov
ja
mov
in
stos
out
or
add
bound
xor
stc
pushl
in
jae
lahf
inc
arpl
enter
iret
fwait
mov
fwait
rcrl
aam
jbe
ret
push
cmc
inc
test
inc
xchg
flds
jns
enter
je
xchg
adc
mov
bound
add
cld
xlat
idivl
clc
mov
nop
mov
scas
pop
icebp
cltd
cmp
pop
clc
das
push
or
mov
jle
adc
and
pushf
or
add
or
mov
jge
ja
pop
xchg
cld
sbb
sub
xchg
out
jle
enter
nop
std
cld
mov
and
ss
or
les
imul
pop
movsl
ss
or
test
int
or
and
push
jb
ret
inc
mov
xchg
pusha
fcomps
pushf
xchg
mov
or
pop
pop
cmp
std
movsb
jl
das
test
shr
fcomps
enter
js
outsb
mov
int3
lret
lds
js
push
jb
fisubl
xchg
add
sarb
cmp
jae
lods
fsubrl
loope
icebp
adc
mov
daa
fnstenv
data16
loope
xchg
fstpt
inc
mov
inc
int
iret
mov
mov
xor
mov
and
ja
pop
inc
lea
inc
fidivrs
mov
pop
loopne
cli
sahf
decb
dec
push
mov
hlt
movsl
mov
jno
dec
in
out
movsb
pop
mov
fidivrs
scas
mov
sahf
test
adc
cmpsb
sbb
cmp
mov
cmp
test
mov
sti
movsb
mov
imul
adc
leave
mov
inc
idivl
add
mov
jbe
lods
mov
jmp
std
mov
jnp
ljmp
xchg
mov
cmpsl
dec
fisubs
mov
pop
xchg
call
sbb
push
orl
push
or
and
jmp
pushf
xchg
xor
mov
lahf
mov
movsl
sar
mov
cmpsb
int3
pop
gs
rcr
mov
das
sub
ljmp
push
cmpsl
and
rcrb
push
jno
nop
or
xchg
stos
lds
mov
xlat
fwait
jns
ficoml
inc
call
jo
mov
fidivrl
add
jnp
jne
ljmp
or
lahf
adc
fsubrl
pop
cwtl
inc
out
push
clc
jbe
jecxz
xor
pop
push
push
mov
lock
mov
push
movsb
sub
lret
dec
xchg
sub
lea
pop
xchg
xchg
pop
gs
outsl
dec
inc
ret
add
mov
or
call
mov
cmp
sub
dec
xchg
repz
pushf
jnp
popf
sahf
mov
mov
shll
nop
mov
push
and
xchg
or
xor
aaa
repz
xchg
mov
adc
leave
mov
dec
mov
xor
push
sub
or
ss
stos
xor
in
sahf
push
repnz
cwtl
mov
mov
jo
or
push
icebp
dec
mov
xchg
sti
or
out
xor
sbb
test
in
xchg
aas
jno
out
mov
and
repnz
cmp
mov
adcb
xchg
loop
xchg
push
popa
bound
clc
pop
std
sub
mov
pop
cltd
mov
outsb
xchg
sub
dec
mov
jmp
scas
sub
and
stos
dec
xchg
pusha
add
outsb
cmp
mov
xor
add
clc
loope
out
mov
cmc
adc
mov
pop
bound
sbb
cwtl
mov
loop,pn
jg
nop
loope
hlt
xchg
daa
cmp
adc
adc
jp
lods
jg
shrl
out
lret
roll
out
and
std
bound
rorb
ss
bound
sub
cld
rcrl
mov
lock
or
push
cli
arpl
pop
adc
fprem
js
rcrl
je
rclb
out
push
xor
mov
mov
in
outsl
push
ss
pop
sbb
enter
mov
shl
sub
mov
mov
scas
shr
jl
repz
mov
addr16
movsl
mov
aam
ficompl
ffreep
xlat
mov
aam
push
fsubrs
dec
cli
sti
incl
int3
clc
inc
sub
cmp
push
push
dec
sub
call
ja
mov
pop
loopne
or
out
xchg
sub
mov
sub
es
loope
jle
lcall
pop
popa
add
imul
dec
icebp
fsubrs
mov
xchg
scas
inc
jmp
mov
sub
std
aas
cmp
mov
push
push
mov
push
andb
daa
stos
je
dec
cmp
icebp
mov
mov
cwtl
xchg
nop
add
test
inc
das
sbb
push
mov
jmp
push
lock
xchg
test
repnz
sahf
sub
daa
adc
std
lds
addr16
sbb
ret
jg
fsubp
mov
insb
mov
ja
scas
cmp
add
sahf
pusha
and
test
push
out
cld
sub
imul
pop
in
push
adc
je
aas
or
mov
jl
xchg
je
inc
cmp
pop
mov
insl
inc
mov
xlat
lock
add
cmpsb
fbld
dec
mov
lahf
in
scas
push
lods
xor
stos
subps
jmp
jno
je
mov
nop
mov
in
shr
es
sub
adc
push
jo
lret
push
xlat
dec
jp
pop
inc
sar
add
mov
sub
enter
lea
inc
pop
bound
xor
popf
pop
jle
cwtl
sti
mov
mov
cli
inc
mov
and
int
xchg
ret
lahf
jne
lret
stos
in
int3
or
cmp
lods
add
ss
inc
mov
and
mov
popf
cmp
outsb
mov
jae
xchg
stc
std
lea
pop
jmp
daa
leave
xchg
stos
or
jp
jl
stos
leave
test
sbb
inc
imul
stos
cld
addr16
mov
shr
repnz
call
inc
pop
push
test
in
push
mov
addr16
mov
mov
mov
ret
ffree
jmp
push
stos
pop
and
ljmp
enter
xchg
fwait
lahf
enter
loop
inc
push
push
sbb
sub
in
leave
dec
push
fcmovu
cmp
pop
sbb
pop
mov
jb
dec
test
add
dec
daa
fsubl
push
xchg
and
jge
cmp
fnsave
cli
push
mov
mov
vxorps
push
mov
and
test
int
push
mulb
sbbb
mov
dec
or
inc
add
jge
les
pop
push
add
and
sub
arpl
add
push
ljmp
push
int
dec
aam
ret
fldcw
mov
push
inc
jle
mov
aam
jo
or
push
dec
outsl
lock
xor
push
loope
jle
pop
aaa
aam
jnp
fcomps
stc
jp
mov
repz
push
sub
cs
sub
jl
notb
xchg
int3
fcmovbe
mov
mov
jb
testl
xchg
sub
popf
push
sub
cmc
push
push
pop
js
add
mov
cld
lods
data16
xchg
add
xor
pop
pop
cmp
push
and
and
push
mov
jno
decl
sub
push
inc
enter
jge
sbb
xchg
mov
and
out
bound
sti
scas
sub
scas
das
jnp
arpl
je
dec
dec
pop
jge
stc
movsb
dec
xchg
mov
mov
dec
lahf
push
xchg
imul
jmp
cld
pop
in
push
sub
shlb
cs
ret
rclb
cli
cwtl
jle
icebp
loop
xor
mov
loope
mov
out
imul
mov
xchg
adc
in
clc
leave
add
movsl
repz
fstl
mov
lea
inc
jecxz
push
sbb
xchg
or
ficoml
shll
cmpb
arpl
repnz
sbb
popa
hlt
test
pop
xlat
ror
push
scas
or
or
fsin
cwtl
add
cmc
and
mov
mov
stos
cmp
cmp
pop
inc
push
sub
xor
inc
mov
jb
shrb
push
dec
test
shlb
fdiv
loop
pop
pop
mov
aaa
xor
cmp
mov
inc
inc
test
dec
aaa
sub
add
pop
pop
cmp
inc
rclb
sbb
add
cmpsb
mov
mov
xor
insb
rcrl
ljmp
into
sub
in
aam
inc
sarl
and
add
lea
mov
daa
dec
jno
pop
mov
into
cmpsl
adc
pop
inc
add
andb
pop
sbb
sbb
pop
test
hlt
cltd
gs
push
lret
or
xchg
sbbb
fcoml
dec
and
gs
pause
scas
rorl
adc
jae
in
pop
mov
pop
in
and
sub
and
dec
jge
mov
jge
jae
orl
das
aam
cltd
rcrb
out
and
cmpsb
in
js
fadd
cmp
and
out
movsl
mov
jnp
data16
stos
cmpsl
mov
negl
ret
and
pop
cmpsb
ret
movsb
out
lods
pop
jecxz
adcl
mov
sbb
dec
hlt
xchg
jmp
sub
mov
std
xchg
aad
inc
cmp
sbb
shl
sbb
das
les
xchg
lcall
adc
inc
push
sbb
push
sub
arpl
jo
stos
pushf
hlt
repnz
cmpsl
cwtl
test
pop
mov
mov
movsl
cmp
lret
cs
push
jb
pop
sub
sub
in
add
dec
and
sub
pop
sub
push
add
mov
int
adc
imul
das
mov
sub
aad
mov
mov
or
inc
push
and
cmpsb
pop
push
mov
fdiv
cmp
ds
int3
stos
jmp
sbbl
sbb
cltd
orl
daa
out
outsb
push
shrl
scas
jecxz
xchg
dec
mov
sbb
mov
sbb
lcall
add
stc
std
test
sub
push
xor
cmpb
sbb
sub
xor
push
cmp
and
repz
fsubrl
xor
daa
mov
je
jae
mov
shlb
xchg
mov
jg
dec
mov
enter
xor
jle
pop
jo
pop
cltd
inc
mov
or
push
enter
push
push
xchg
repz
shrl
xchg
mov
imul
mov
inc
loop
jp
lahf
xchg
hlt
mov
das
es
push
mov
push
or
in
test
cmp
movsb
fs
and
je
outsb
into
pop
jmp
daa
clc
stc
dec
mov
test
xchg
lret
cltd
pushf
inc
adc
mov
je
decb
dec
mov
jg
jno
mov
cmpsl
sbb
push
addb
test
aad
clc
and
jle
sub
add
jmp
push
xchg
mov
adc
mov
sub
mov
dec
inc
adc
jae
or
movsb
pop
ja
fs
into
idivl
gs
push
mov
inc
mov
add
stos
xor
es
push
mov
jg
es
stos
aam
adcb
pusha
push
test
dec
inc
test
inc
pop
pusha
adc
jp
lret
push
repz
imul
push
sti
cwtl
sbb
cli
cmc
scas
xchg
mov
xor
mov
push
fwait
les
mov
adc
jecxz
dec
scas
leave
sti
jbe
pushf
in
cld
dec
loopne
pop
cmc
mov
lcall
int3
pop
mov
mov
fistpl
arpl
mov
aam
add
popa
mov
stc
push
push
js
jge
dec
xchg
xlat
insb
insb
imul
push
rcll
or
mov
cmp
sbbb
fnstenv
lcall
push
push
lods
rolb
xchg
or
jl
imulb
push
ja
dec
jmp
divl
and
nop
add
or
lret
push
sbb
rcrl
mov
cli
jb
imul
cmp
push
jns
inc
into
xchg
icebp
mov
jne
stos
add
push
repz
push
cmpsb
outsb
sbb
outsl
mov
out
fiadds
repnz
or
cmp
sub
jg
or
or
cmp
pop
hlt
outsb
pop
push
inc
iret
inc
mov
mulb
and
mov
and
inc
jns
clts
es
sub
pop
adc
je
clc
cs
xchg
es
mov
fdivrs
jmp
popf
or
repnz
es
mov
daa
xchg
and
sbb
repnz
xor
and
or
pop
imul
aad
ss
mov
or
xor
test
inc
and
fsts
push
push
fmuls
or
adc
inc
mov
icebp
ja
ja
loope
cmc
cmp
test
pop
mov
add
push
lds
cmp
int3
sub
cmp
mov
inc
loop
sub
dec
adc
out
lret
push
mov
ret
mov
cmp
popf
xor
mov
in
fidivrl
test
fisttpll
int
dec
outsb
or
cmpsb
aad
gs
lods
loop
dec
xlat
jo
and
mov
sub
sbb
jno
fs
ljmp
adc
and
addr16
jge
data16
mov
and
popl
push
sub
int
sbb
aam
cmp
orb
jbe
mov
iret
testl
mov
ret
loop
rcrl
mov
test
jno
xor
andl
test
mov
cld
jmp
mov
xchg
ret
icebp
incl
orb
pop
mov
push
ds
jae
scas
jns
ja
dec
call
dec
jns
lds
stc
pop
ret
xlat
lcall
mov
cmpsb
hlt
ffree
ss
mov
imul
cmp
stos
jmp
divl
mov
scas
lea
jno
popa
je
xchg
cmp
cmp
sbbl
clc
xchg
lcall
dec
jo
out
jne
test
sub
push
mov
dec
and
or
and
ja
ds
push
loop
lahf
push
xchg
mov
cwtl
pop
in
js
push
out
inc
or
xchg
pop
or
and
loop
mov
or
rcll
xchg
out
out
test
xor
loope
shlb
cmp
xor
iret
shrb
jle
loope
movsb
xlat
jae
inc
test
rolb
imul
fstps
shll
push
cmp
sub
in
lods
add
and
sbb
sub
mov
pusha
mov
push
cmp
add
sbbl
inc
cmpsb
cmpsb
lock
outsl
clc
pushf
mov
pusha
xchg
shll
loopne
cmovno
hlt
insb
lock
adc
or
inc
pop
jle
je
push
mov
ss
out
aas
pop
std
stc
dec
daa
pop
sbb
hlt
pop
push
mov
jo
mov
cmc
fidivrl
rol
mov
cmp
divl
out
insb
icebp
lock
xchg
mov
mov
aam
mov
push
jnp
xchg
ljmp
mov
lret
jg
loop
or
ret
lret
xchg
scas
in
jo
push
sahf
jno
or
and
icebp
cmp
imul
jp
dec
or
jecxz
aas
addr16
mov
adc
sub
or
mov
and
mov
mul
adc
outsl
scas
fwait
cwtl
mov
and
mov
outsl
repz
push
dec
dec
out
xchg
call
cs
cmp
cmc
mov
stos
pop
test
shll
pop
rcrb
fsubrs
pop
cmpsb
je
test
sbb
lret
pop
xchg
fmuls
xor
decl
scas
popl
addr16
out
and
pop
mov
cmp
add
adc
ss
cmpsb
mov
es
test
decl
xchg
dec
mov
cmp
adc
sbb
stos
jecxz
enter
fisubrl
ret
mov
addr16
rorb
leave
xchg
je
cmp
lea
jmp
mov
xor
popf
adc
inc
add
repnz
fldl
mov
test
pusha
xor
enter
jg
or
aad
sbb
aad
shlb
add
stos
enter
and
pushf
daa
dec
aam
inc
iret
jp
in
scas
jl
or
mov
cmpsb
pop
lods
push
cmp
jns
fidivs
jmp
jmp
or
or
lods
or
mov
pop
fidivl
pushf
test
cld
enter
xlat
mov
es
cli
shr
mov
ja
xchg
cmpsl
and
push
push
pop
iret
sub
push
cli
repnz
rorl
cs
cld
jns
cmpsb
das
sbb
mov
sbb
dec
mov
data16
fnstsw
movsb
fistl
xchg
fsubl
stos
test
inc
sbb
dec
add
loopne
sbb
jb
or
sub
xchg
sarb
mov
jge
cltd
inc
fdivrl
scas
int3
xlat
add
icebp
push
cltd
aas
push
inc
js
pop
add
into
pop
mov
cs
into
adc
mov
jb
loopne
lods
movsb
lods
fimull
dec
aaa
pusha
push
sub
popf
and
inc
mov
mov
jmp
mov
pop
sbb
mov
mov
fwait
repnz
outsb
mov
mov
lret
add
cmpsb
cmc
xor
xchg
add
adc
push
ja
sub
int3
mov
jo
ret
mov
aaa
ss
addr16
shrb
push
mov
fs
or
lcall
inc
es
xchg
inc
jno
pop
aam
cmpsb
not
mov
and
push
or
icebp
pop
nop
pop
pop
dec
cltd
in
outsl
mov
out
fdivl
mov
sbb
pop
dec
jo
jb,pn
mov
repz
sbb
pop
mov
aaa
adc
icebp
call
hlt
cwtl
out
in
add
pop
popa
push
jo
movsb
stos
lock
mov
adc
push
loopne
ljmp
icebp
mov
mov
dec
imul
scas
sub
adc
cmp
cli
popa
pop
daa
sahf
jns
iret
int
pop
outsl
cvtps2pi
adcb
cmpsl
xor
ljmp
aad
imul
insb
xchg
out
mov
push
test
jbe
addr16
or
mov
addr16
popa
mov
adc
cmp
push
int
push
mov
dec
push
adc
std
push
jne
enter
mov
scas
aaa
out
push
out
loope
jecxz
ss
pusha
addr16
addr16
data16
ds
aas
sbbb
or
inc
stos
into
mov
and
or
adc
push
inc
into
xor
gs
fmulp
mov
cmp
cmpsl
sbb
or
cwtl
data16
scas
jg
fcompl
sub
sbb
xor
sahf
add
jne
data16
mov
fwait
jp
xchg
icebp
jae
pop
enter
mov
sub
pop
out
xchg
push
cld
mov
ja
jne
cmpsb
xor
push
sub
rorb
add
inc
jl
outsl
fstl
inc
lock
nop
scas
xchg
add
js
lahf
jmp
mov
push
je
lock
xlat
or
adc
sti
pusha
pop
cmpl
adc
lods
jl
test
sbb
les
cmc
cltd
cmp
rcl
jno
xchg
pop
out
sbb
mov
roll
pop
and
push
and
xchg
sub
cmpsb
test
scas
add
iret
das
or
enter
sbb
aad
push
inc
int
pusha
inc
sahf
data16
and
sbb
popa
fcoms
les
mov
add
adcb
sub
pop
add
mov
cli
loopne
lock
popf
xor
scas
sub
xchg
dec
enter
push
mov
sbb
hlt
insb
pusha
adc
imul
xlat
test
lret
xchg
sbb
or
arpl
mov
movsb
fisttpll
shrb
fisttps
shrl
scas
adc
xchg
les
subl
or
add
sbb
and
outsb
ja
push
iret
sbb
scas
xor
mov
mov
mov
aas
xchg
mov
mov
js
gs
setp
nop
ret
pop
orb
addr16
es
fs
push
lcall
out
push
in
.byte
