inc
sahf
clc
loope
sahf
and
scas
push
imul
inc
xor
sub
pusha
fiaddl
sarl
inc
xchg
outsb
fs
mov
or
es
dec
int
and
test
std
sub
xor
icebp
scas
pop
aam
testb
das
dec
loop
stos
mov
cwtl
adc
sub
inc
rcrb
sti
and
or
pop
mov
jbe
cmpb
and
xchg
jge
jle
leave
pop
loope
pop
xchg
das
pand
incl
lret
mov
jbe,pn
mov
das
pop
inc
sti
cmp
inc
hlt
pop
mov
mov
in
jp
inc
shl
xchg
scas
adc
push
es
push
mov
out
shrb
sbb
dec
mov
popf
mov
mov
inc
scas
mov
scas
test
jae
push
in
inc
dec
mov
fwait
inc
ja
rcrb
jp
pop
ds
jle
in
repnz
xchg
mov
cltd
mov
test
inc
imul
xchg
repz
pop
xchg
mov
mov
inc
fnstsw
movsl
mov
pop
cld
mov
test
pop
mov
je
pop
into
cmp
loope
leave
stc
ret
cmp
mov
popf
es
inc
sbb
bound
or
push
popa
icebp
imul
dec
jl
jnp
mov
test
sbb
shlb
mov
cmpsl
cs
int3
in
sbb
dec
xchg
jo
push
pop
out
popf
mov
outsb
out
dec
push
add
jae
in
pop
jg
test
push
jnp
imul
aas
pop
and
pop
sbb
out
pop
addr16
sub
out
jb
je
lea
add
adc
mov
and
push
lods
or
cmp
push
ficompl
fwait
inc
cmpsb
and
add
xorb
pop
rol
adc
les
scas
xchg
xchg
scas
and
jno
mov
mov
inc
adc
lret
adc
xor
and
mov
jl
cwtl
cwtl
or
or
cmp
cmp
mov
jo
xor
cmpsl
mov
loopne
lcall
ds
arpl
and
subl
adc
and
cltd
adcb
sbb
jb
scas
sbb
enter
cmc
mov
xchg
inc
test
mov
or
es
and
faddl
push
out
add
or
arpl
ds
rorb
dec
xchg
sbb
xchg
adcl
lret
mov
cmpsb
subl
roll
adc
mov
add
push
fmul
subl
scas
mov
xchg
aad
mov
fnsave
scas
loopne
push
dec
dec
fucom
xchg
dec
mov
dec
jmp
out
ds
cmp
addr16
lods
mov
fldenv
movsl
jno
push
clc
imul
pushf
inc
sbb
or
jae
adc
fidivrs
ja
inc
sub
andl
rcrb
add
pop
cmp
dec
sbb
sub
jne
jl
push
into
or
outsl
call
ret
jnp
leave
iret
sbb
inc
mov
and
and
jg
mov
inc
adc
cs
jne
aas
jl
iret
arpl
and
pop
push
mov
push
jge
cmp
sub
out
hlt
sub
mov
push
shlb
scas
mov
jmp
push
out
bound
outsl
mov
loope
scas
sub
repz
sbb
push
ljmp
mov
clc
call
dec
out
jmp
pop
xor
sbb
movsb
adc
pop
xchg
cmp
jb
jno
int3
mov
jg
pop
pop
xor
and
addl
cmp
cmp
adc
xor
pusha
or
in
push
daa
popf
aam
out
in
push
lret
push
ror
stc
aad
push
fisttpll
push
pop
cltd
mov
scas
cmp
sbb
inc
popa
jae
xor
mov
ret
xor
xlat
push
sarb
mov
sahf
mov
xchg
ja
dec
std
cmp
or
pushf
mov
push
jae
flds
daa
xchg
fcmovu
sbb
shl
iret
sub
sbb
in
xchg
xchg
shlb
xlat
arpl
imulb
rcl
je
aad
sbb
std
xchg
jbe
lahf
inc
lahf
scas
push
out
call
and
and
and
sbb
add
or
test
fdivl
and
shrb
aaa
rorb
and
dec
pushf
dec
mov
jle
aam
lahf
sub
js
jle
and
inc
in
out
mov
inc
add
ds
lcall
push
and
xchg
mov
sbb
cmp
loope
mov
add
fwait
mov
mov
xor
xor
jg
or
dec
dec
push
or
mov
sarb
push
or
gs
stc
cmp
pop
movsl
aaa
lcall
mov
out
hlt
or
imul
add
sub
dec
imul
mov
or
or
cmp
mov
fxam
sbb
ss
cli
dec
mov
mov
add
movsb
paddq
popa
dec
into
or
jle
sub
mov
dec
fidivrs
cmp
mov
cmp
shlb
stos
addl
jecxz
push
adc
sti
or
xchg
pop
mov
mov
xor
push
and
sbb
or
sub
lahf
cmp
mov
xor
jle
xchg
daa
out
fildll
shrl
pop
mov
lods
sti
aas
dec
push
dec
and
out
pop
lods
xchg
jno
jp
aaa
mov
ljmp
mov
mov
adc
dec
sub
in
shll
mov
jl
push
fcomps
cmpsl
std
push
and
rcpps
sbb
imul
jecxz
mov
pop
xchg
jmp
mov
jns
imul
dec
loop
js
jmp
fucom
jecxz
adc
mov
dec
loope
fwait
cmp
popf
insl
movsl
in
mov
jnp
ljmp
xchg
jge
xchg
pop
iret
andl
sahf
mov
mov
xchg
pusha
mov
xchg
mov
int
jmp
and
adc
gs
sbb
xchg
outsl
ret
aad
xchg
cld
adc
lret
sbb
jns
xchg
ss
aas
xor
mov
or
fidivs
xchg
mov
xchg
xchg
jl
push
push
stos
pop
int
and
xchg
push
lcall
ffree
sti
pusha
lahf
outsl
ss
test
aam
rcl
les
pop
dec
cmp
addr16
movsl
sub
xchg
mov
mov
test
in
loop
std
test
pop
fcmovnb
bound
dec
dec
loope
shrl
lahf
inc
das
pop
dec
cltd
push
jae
push
cld
loop
pushf
dec
dec
push
sarl
push
ljmp
ret
mov
call
nop
mov
popa
or
add
push
pop
inc
jge
roll
subb
sub
cmp
and
dec
cmp
int
mov
stc
sarl
dec
ror
inc
pusha
cmp
and
add
and
int3
leave
mov
lds
sahf
fstpl
and
pop
pop
test
jmp
ss
cmp
fiaddl
sub
inc
inc
dec
in
xor
xor
in
movsb
shll
mov
mov
mov
or
and
in
out
cmp
mov
add
out
pop
test
pop
iret
sub
dec
adcl
jne
fcoms
mov
iret
sbb
push
stos
lret
jnp
into
ret
insb
mov
jge
inc
icebp
or
sub
and
cwtl
mov
incl
imul
popa
and
jae
cltd
int
mov
sub
mov
pop
mov
leave
loopne
jne
int3
push
in
mov
xor
jge
mov
inc
xchg
cmp
movsb
aas
pop
repnz
inc
fld
mov
movsb
ljmp
push
lock
inc
and
push
scas
clc
pop
inc
fsubrl
mov
push
sub
lods
shrb
add
push
inc
xchg
jo
push
cld
les
aam
and
ficoml
popf
xchg
dec
jo
mov
fnstsw
fwait
mov
or
sti
sbb
or
xlat
arpl
pop
cld
mov
xor
imul
jnp
pop
mov
out
ljmp
aaa
pop
add
test
pop
push
xchg
add
ret
mov
loopne
and
mov
push
sbb
push
in
pop
and
sub
imul
or
jle
loop
arpl
mov
es
mov
rcr
fwait
mov
cmp
lock
mov
xorb
sti
inc
sub
fwait
imul
jns
and
loopne
push
fcmovnbe
push
std
hlt
mov
imul
movsl
mov
jmp
push
call
lods
push
sti
pop
add
push
scas
jae
adcb
dec
into
pop
pop
notl
aad
inc
scas
rcll
add
loopne
in
popa
sti
xor
xor
lea
pop
xchg
push
pop
push
lods
pop
dec
xor
sbb
mov
push
cmp
call
jb
inc
jno
cmp
arpl
popa
mov
xchg
add
inc
sub
fisubl
aam
push
dec
push
imul
xchg
xor
or
dec
inc
repnz
fs
rcl
movsb
sahf
clc
push
dec
cmp
and
mov
inc
push
mov
data16
test
add
repz
inc
popf
or
jno
xor
jnp
xlat
sbb
loopne
or
je
and
adc
or
sbb
aaa
lods
test
or
and
jge
and
jbe
data16
pushf
or
fwait
add
mov
shrl
dec
push
sbb
fbstp
loopne
pop
je
mov
or
push
bound
jg
mov
subl
scas
push
sub
adc
aaa
sti
inc
aam
insb
dec
or
adc
movsb
faddl
mov
scas
data16
flds
mov
push
xor
and
cwtl
fisubl
insl
adc
mov
test
mov
mov
mov
mov
repz
mov
mov
sti
daa
sub
stos
lods
aas
pop
pop
mov
and
pop
and
in
mov
mov
scas
dec
movsl
fnstenv
pushf
movsl
lahf
arpl
dec
sbb
xor
xchg
xor
jnp
int3
push
je
js
add
jne
mov
repnz
leave
dec
sub
in
test
mov
mov
mov
clc
imul
sub
in
jle
add
out
add
cld
sbb
in
sbb
adc
jmp
test
imul
je
push
fwait
sub
lcall
or
outsl
push
notl
cmp
ljmp
fiaddl
test
dec
sub
incl
push
push
lret
repz
mov
and
xor
scas
xor
pop
lcall
sti
jg
push
mov
rcl
ljmp
orl
aaa
or
out
mov
and
dec
les
int3
mull
pop
aad
test
fistps
stos
add
pop
push
pusha
mov
xchg
fmul
mov
inc
dec
pop
loopne
rcrb
iret
push
aas
inc
mov
shll
or
in
in
movsb
loop
mov
adc
mov
lods
sbb
incl
inc
imul
dec
test
aam
cwtl
pop
ja
xchg
mov
jno
xor
cmpsl
inc
mov
es
and
rclb
leave
push
test
bound
jne
cmpsl
cmpsb
inc
sub
stc
mov
fdivp
aas
xchg
jmp
push
xchg
cmp
sbb
pop
or
dec
addr16
stc
and
out
xchg
ss
clc
cmpsb
rcll
push
cmp
or
jmp
dec
out
test
aad
jmp
std
fs
cmpsb
cmp
out
or
and
icebp
cwtl
aad
or
jmp
push
cmpsl
add
jb
dec
jo
mov
out
dec
call
inc
push
dec
imul
mov
dec
lods
xor
xor
and
ljmp
out
dec
iret
jmp
lcall
mov
cwtl
ret
mov
mov
fucom
mov
xor
ja
js
xchg
ss
test
call
enter
lds
fmul
scas
es
test
or
push
cmp
loop
insl
mov
fbld
leave
inc
lea
fcom
mov
pop
cmpsl
xor
push
xchg
add
xchg
imul
jmp
fldt
repz
inc
aam
cs
mov
add
or
mov
je
lahf
aam
pop
arpl
mov
ss
scas
orl
sbb
push
dec
loope
dec
mov
mov
fsubrl
lret
dec
xchg
adc
adc
movsb
pop
and
mov
jo
push
fwait
mov
insl
in
idiv
inc
cli
push
pusha
dec
and
lods
outsb
jb
mull
shr
and
pop
jb
andl
cmpsb
mov
push
mov
push
add
or
cmpsb
sub
mov
mov
or
sub
add
cmpsb
into
dec
cmpsb
in
aad
jmp
out
or
xor
xchg
clc
lock
enter
inc
xchg
push
imul
dec
popf
dec
daa
movsb
inc
push
add
in
mov
sahf
icebp
mov
shrb
mov
mov
xchg
in
cltd
xchg
jno
imul
ja
int
adc
lods
jno
sbb
jg
mov
sbb
imul
or
pushf
cmp
push
mov
icebp
out
mov
repz
pushf
mov
xor
pushf
mov
push
mov
mov
fsubr
xor
lods
sbb
ret
push
push
sti
jle
or
aas
pop
lret
xchg
les
in
adc
and
decl
sbb
lods
addr16
pop
inc
stos
mov
sub
push
and
stos
pop
and
xlat
mov
out
sahf
xchg
ret
mov
addr16
push
into
adc
inc
in
xchg
push
leave
popf
cld
cwtl
rorb
adc
repz
sbb
pop
or
xchg
mov
mulb
and
outsl
lret
nop
mov
loop
pushf
cltd
rorl
clc
jmp
cs
fucomi
into
out
jns
push
mov
adc
sar
sbb
add
mov
sub
data16
aaa
lahf
popa
sbb
xlat
or
sub
lahf
das
push
mov
repz
xorl
stos
cmc
and
xor
imul
decb
cmp
cld
cmpsl
jge
jle,pt
xchg
scas
dec
xchg
add
jbe
fldl
adc
sahf
xlat
gs
jne
push
gs
dec
jmp
pop
std
insl
cmp
movsb
jl
add
or
popa
cmpsl
jo
xchg
inc
mov
fimull
scas
ret
cmc
test
fs
pop
test
mov
daa
push
lcall
or
inc
sub
int3
and
in
scas
sbb
dec
cmp
lods
jp
push
in
and
fcompl
ljmp
or
dec
dec
data16
pop
adc
in
fwait
cltd
mov
pop
mov
inc
mov
jmp
xchg
pop
scas
sub
rcll
cmp
or
jmp
mov
cmp
cmpsb
out
and
inc
dec
shrl
stc
ljmp
cmc
and
ja
push
jecxz
js
xlat
jmp
pop
add
sub
sti
add
sbb
lcall
in
clc
cmpsb
repz
fsubrs
subb
ljmp
and
inc
leave
mull
shrb
pusha
inc
add
and
cmpsb
inc
or
xor
addr16
jg
outsb
push
rorb
mov
add
push
push
add
mov
cmp
pop
cli
dec
add
or
scas
enter
cltd
stc
sub
add
sub
addr16
pop
aam
popa
shrb
push
nop
fwait
ret
lods
jnp
cwtl
imul
stos
mov
ret
aad
test
pop
push
push
mov
jmp
xor
mov
sti
fstpl
jno
fisttpll
sbb
cs
xor
jo
cmpb
lods
lea
jp
out
sti
cli
sbb
sbb
cmc
shlb
push
pusha
fnstenv
js
pushf
fwait
sarl
mov
nop
jae
scas
xchg
pusha
insl
jae
stc
cmp
mov
dec
push
mov
ljmp
mov
orb
les
mov
gs
mov
pop
adc
push
movsl
push
jmp
inc
cmc
int
pushf
adc
repz
aad
fistpl
mov
adc
mov
cmc
popa
stos
adc
cltd
adc
in
test
pop
lods
imul
push
xor
pop
sbb
dec
insb
call
inc
rcrb
es
popf
push
or
je
inc
int3
adc
dec
adc
loopnew
imul
aaa
pop
mov
jno
js
sahf
inc
mov
ret
andb
mov
jo
test
jmp
mov
insl
nop
pop
ficompl
xchg
rorb
sbb
xchg
cmpsb
aaa
loop
stos
ret
and
daa
stc
mul
sub
add
push
cmp
shrl
add
dec
jmp
cs
dec
in
sarl
mov
fstl
inc
adc
dec
ret
das
dec
out
or
mov
leave
loope
xlat
jae
std
sbb
aad
pushf
add
pop
int3
fmuls
scas
xor
push
cmp
mov
jecxz
cs
or
xchg
inc
inc
lret
repz
push
xor
add
inc
jae
mov
push
popf
adc
push
xlat
cmp
xchg
stos
dec
mov
inc
testl
call
je
cmpl
movlps
inc
mov
dec
lods
mov
rorl
outsb
lds
movsl
xor
in
mov
push
cmp
mov
jnp
push
mov
in
cmp
pusha
fdivrl
pop
daa
xchg
ss
cmp
push
mov
mov
pop
mov
rol
push
mov
or
clc
icebp
sub
inc
fsubs
push
add
dec
nop
cmpsb
scas
adc
ja
loop
push
dec
hlt
xchg
xchg
sub
inc
add
add
divl
lret
xor
add
cs
mov
icebp
movsb
pusha
sub
inc
push
dec
scas
inc
pusha
jns
mov
ret
jo
xchg
xchg
daa
imul
cs
xchg
imulb
dec
or
push
pop
mov
cmc
cli
mov
push
movsl
adc
xor
aam
gs
outsl
mov
in
aas
icebp
test
or
pop
fwait
push
inc
or
sbb
divb
loop
mov
sbb
les
shrb
sbb
lahf
ret
ret
lods
cmp
xor
ret
frstor
add
stos
xchg
or
movb
adc
dec
add
xchg
out
and
jl
stc
je
jg
fmull
mov
pop
stc
into
cmp
mov
sub
push
pop
adc
bound
mov
imull
jnp
jo
int3
dec
lock
int
mov
cmc
push
mov
popf
ljmp
add
test
and
fidivrs
aas
jg
in
xchg
xchg
scas
sub
cmp
xor
mov
adc
mov
add
add
bswap
dec
shrl
je
push
lmsw
pop
jno
les
jge
ss
out
repnz
cld
jg
sahf
outsb
lock
inc
jg
mov
inc
or
popf
mov
nop
pop
movzbl
mov
mov
jns
mov
add
jg
dec
test
jg
mov
cs
scas
leave
mov
mov
inc
movsl
dec
stos
mov
enter
andb
rcrl
cmp
push
and
cwtl
jbe
pop
test
rolb
cli
mov
aad
popf
jmp
out
mov
arpl
jae
mov
lret
and
or
decb
std
aam
ficoml
or
mov
jo
mov
stc
lods
data16
cs
aad
sbb
xchg
in
pop
mov
add
testb
or
aad
jnp
clc
push
mov
popa
cmpsl
repnz
lods
mov
out
jge
je
inc
cmc
mov
mov
push
xchg
pop
call
dec
cld
mov
stos
pop
fistpll
add
push
or
incl
aas
add
inc
mov
addr16
pop
mov
test
mov
enter
sbb
call
jmp
lret
ficomps
fxch
xchg
fadds
clc
lock
add
jle
lahf
subl
push
mov
icebp
in
jp
ds
cmc
jae
ret
and
push
daa
inc
rcrl
sub
xor
cmp
ljmp
cld
ret
sub
push
jno
jns
mov
fisubrs
dec
insl
jl
jno
insl
ret
dec
es
imul
mov
push
loop
jns
and
xchg
loope
add
sub
mov
jne
mov
popf
loopne
ljmp
and
mov
popf
jg
xchg
inc
inc
inc
popa
and
xor
rorb
gs
insl
fstpt
sub
ficomps
in
bound
lea
dec
into
fstpl
mov
push
add
mov
dec
xchg
aaa
cmp
jmp
jge
mov
sbb
mov
mov
cmpsl
xchg
cmp
loope
mov
mov
add
jmp
push
popf
movsl
outsl
mov
xchg
sbbl
das
inc
cltd
lea
bnd
sub
out
shll
fs
sub
in
pop
push
pop
aaa
pop
in
mov
ja
push
jns
lds
mov
xchg
add
cwtl
sub
loop
dec
jo
jl
out
xlat
jle
jb
int3
adc
adc
test
jbe
inc
ror
ja
jno
andb
xchg
xor
push
stos
testb
lcall
xchg
cmpsb
or
jns
adcb
jl
cwtl
lret
lret
inc
insb
out
inc
sbb
mov
iret
or
xor
int
sub
xlat
out
jp
mov
daa
cli
mov
push
and
movsb
push
adcb
insl
movsl
push
pop
jbe
jmp
dec
push
xchg
or
sub
rorb
push
add
adc
jb
shlb
dec
mov
inc
lods
mov
repz
mov
mov
cmp
decb
clc
jmp
arpl
repnz
adc
cmp
pop
adc
call
or
pop
push
xchg
mov
mov
dec
popf
jo
cwtl
stos
mov
add
insb
ds
sbb
loope
add
xlat
cmp
jl
outsl
mov
stos
out
or
inc
inc
adc
inc
mov
mov
shlb
fcomps
adc
xor
push
mov
jecxz
jmp
cmpsl
push
icebp
leave
lcall
pop
sbb
mov
jecxz
not
insb
fistpll
imul
or
add
inc
mov
test
cmp
out
xor
and
mov
loop
mov
jb
adc
or
hlt
sub
loop
sahf
test
xchg
fstps
in
and
pop
dec
adc
mov
sbb
orl
mov
jg
shl
pop
mov
cli
shr
sub
fidivrl
xor
jl
call
std
mov
faddp
push
iret
fidivrl
and
xchg
sar
pop
cmpsb
scas
pushf
dec
and
ficoml
mov
andb
dec
out
sbb
add
cltd
ss
inc
in
fcoml
fwait
lcall
mov
clc
arpl
sbb
and
cltd
inc
lahf
inc
dec
xchg
dec
mov
aad
addl
mov
cmp
sub
or
xor
daa
push
stc
mov
and
dec
lds
repz
mov
das
pusha
pop
ficoms
xlat
out
cmp
mov
xor
fldt
sbb
sub
jecxz
dec
sti
lret
fs
mov
scas
inc
mov
clc
sub
divl
jo
pop
add
pop
dec
push
andb
cmc
incb
repz
test
pushf
leave
inc
jns
inc
push
stc
sahf
jl
jo
loop
sub
xchg
outsb
and
xor
daa
add
cmp
or
mov
push
lock
mov
mov
cmp
les
out
mov
pop
pop
cmc
mov
xor
ret
lods
gs
fdivp
sti
es
andb
lods
cwtl
insb
adc
enter
lea
pushf
stos
ljmp
mov
je
arpl
ss
loopne
cli
or
rcll
dec
mov
jns
cmpsl
negb
hlt
leave
sbb
and
mov
mov
lock
lods
imul
out
or
in
pushl
or
int
push
ja
int
fs
movsl
jne
mov
sbb
and
inc
mov
inc
fisubl
inc
ds
jmp
jns
mov
inc
insb
out
scas
inc
xor
adc
addl
cmp
xchg
mov
sti
add
cmp
pop
into
jp
mov
dec
jo
mov
xor
inc
sti
rol
out
pop
inc
out
shl
sbb
adc
in
jg
mov
shrl
jle
and
cld
test
xchg
cs
call
mov
cmc
xor
std
jo
mov
mov
jb
popf
ret
icebp
jle
or
jbe
fwait
lods
sbb
es
xor
enter
icebp
sahf
mov
testb
and
divb
mov
xchg
daa
ret
outsb
dec
aam
test
sbb
jnp
cli
adc
ror
mov
mov
mov
stos
pusha
xchg
lea
adc
imul
add
cmp
js
lret
mov
xor
mov
scas
or
in
imul
out
mov
fs
rorl
shll
ds
push
push
or
stos
imul
cld
jnp
rcll
aaa
lret
popf
out
pop
out
sbb
mov
xor
mov
mov
test
subb
outsl
icebp
add
cmc
jo
mov
fsubrl
dec
aaa
aaa
fstps
adc
pop
mov
inc
jns
push
xchg
push
mov
mov
adc
pop
fstl
sub
mov
inc
pop
jmp
mov
jle
sbb
lock
out
dec
stos
mov
add
daa
xor
xor
into
int3
mov
push
and
pushf
in
and
pushf
add
add
stc
sti
or
in
lret
pop
andl
push
inc
shll
sbb
rorl
adc
repnz
mov
pop
ret
popf
mov
adc
push
rcll
js
adc
es
rolb
in
pop
or
test
push
push
insl
pop
aam
xchg
insl
movsl
mov
inc
je
fcoms
cmp
mov
addb
pop
bound
jno
js
mov
std
int3
lret
imul
pop
data16
outsl
int3
cmp
xchg
loopne
sbb
lods
xchg
mov
sbbl
pushf
lea
call
jb
lods
xor
jmp
repz
sahf
xchg
into
sbb
movsl
sbb
add
dec
sub
inc
add
in
aad
data16
jns
ret
lret
mov
inc
mov
add
jmp
ret
fldenv
jmp
lods
jno
sbb
mov
jl
dec
add
daa
mov
insb
push
fs
stos
jb
xor
jns
sub
push
sbb
faddl
add
rcll
repnz
jne
add
popa
add
jg
push
pop
mov
xchg
xor
add
xlat
jae
les
cwtl
sub
xchg
inc
mov
cmp
cmp
aas
ret
push
sti
mov
data16
out
sbb
je
push
pop
lret
test
out
sbb
fmull
aas
push
aam
stos
clc
dec
test
sub
insl
sbbl
jb
enter
xchg
sub
inc
xor
jg
out
pop
cmpsb
push
sbb
push
in
iret
xchg
imul
dec
sti
or
jg
jg
pop
pop
xchg
imul
push
push
in
lret
test
fistpl
pop
mov
leave
sbb
pop
pop
dec
in
pop
outsb
xchg
push
mov
sbb
scas
adc
rclb
lahf
mov
cmp
mov
xchg
xchg
add
cmp
dec
mov
sbbb
cmpsb
dec
aad
sub
cmp
ffree
imul
sbb
gs
and
ficompl
int
jge
jo
lea
stos
lock
mov
add
xor
fdivs
add
call
scas
xlat
cmp
pop
sub
mov
sbb
adc
into
jl
movsb
pusha
jbe
adc
mov
xlat
test
cltd
adcl
inc
pushf
jo
insl
lret
inc
nop
lahf
sbb
or
add
dec
movsl
xor
sub
cwtl
repz
decl
mov
imul
jns
aad
push
lret
xchg
xor
aaa
jp
push
je
ret
cld
js
insb
mov
arpl
scas
rclb
mov
shl
inc
test
sbb
or
mov
sub
mov
or
ss
xor
cmp
mov
xor
int3
ss
test
adc
add
iret
cmp
bound
out
frstor
nop
call
ja
xor
addb
out
bound
xchg
push
rol
in
test
jnp
aaa
scas
add
aad
out
pop
xor
test
or
jnp
and
and
mov
push
in
out
pusha
push
rorb
movsb
ret
mov
cld
pop
sub
inc
pop
les
mov
jns
dec
cmp
cltd
push
scas
pop
mov
adc
push
mov
mov
call
push
or
lahf
jl
flds
jecxz
ja
add
push
je
pusha
call
pop
xor
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
fidivs
add
mov
add
add
add
lock
add
push
add
dec
push
inc
dec
pop
inc
gs
inc
push
add
inc
dec
pop
push
insb
popa
jns
dec
push
inc
dec
pop
push
je
jo
