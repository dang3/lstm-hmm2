push
cwtl
fidivrl
sub
insb
push
jmp
pop
cs
int
in
scas
out
aas
sub
xchg
rcll
sti
sub
inc
and
mov
and
adc
inc
shrb
sbb
rcl
dec
iret
mov
pusha
mov
cmp
xchg
test
test
addl
test
add
cmp
adc
je
pop
arpl
xor
sub
fs
xor
inc
push
jmp
dec
lret
or
pop
imul
xor
jae
sub
in
int3
push
sbb
lret
xchg
popa
pop
int3
jns
pusha
or
xlat
test
mov
xor
jnp
aas
aas
jae
push
cs
sbb
xchg
test
jg
or
aam
mov
dec
adc
dec
mov
int3
in
adc
in
fldt
mov
add
dec
dec
lds
push
jnp
sub
aas
sti
lods
sbb
dec
mov
jle
sbb
test
dec
push
push
outsl
jle
sti
mov
fs
lcall
or
mov
push
push
bound
mov
adc
test
sub
mov
andl
ja
outsl
cld
xor
adc
subl
inc
adc
divb
mov
jge
test
mov
dec
imul
test
mov
scas
push
in
addr16
cmp
adc
push
shll
cmp
in
into
inc
dec
fxch
jne
shll
stc
mov
mov
repnz
cmp
jmp
movsb
pop
fldt
js
cs
adc
repnz
cmp
pop
mov
das
roll
fistps
rcl
subb
pop
lahf
adc
clc
pop
and
test
bound
movl
jne
push
or
jnp
sub
lock
repnz
rorl
sbb
adc
jne
ds
shlb
fisubl
sbb
out
lret
lds
aad
sbb
enter
push
cmp
push
jne
lret
sbb
les
push
cmp
int3
inc
inc
dec
and
enter
add
es
pop
jge
mov
mov
movsb
out
jo
and
imull
mov
and
lret
mov
ret
jbe
mov
sti
xchg
xor
xchg
mov
pop
fisubs
shr
iret
or
and
fldcw
cmp
sbb
xchg
push
sbb
scas
and
jb
fcomp
mov
sbb
xchg
mov
outsl
adc
stc
adc
std
lods
hlt
xor
ret
mov
inc
enter
rcl
pop
test
push
inc
je
fcmove
and
adcb
or
ret
imul
xor
dec
mov
das
in
cmpsb
pop
dec
cs
mov
mov
dec
enter
fs
xchg
xor
mov
cmpsb
stc
mov
movsl
push
lods
sub
arpl
outsb
and
pop
ja
xchg
pop
dec
data16
xor
or
and
xor
jno
test
jb
pop
pop
push
sbb
pop
cmp
idivl
adc
in
mov
dec
pop
outsb
inc
pop
iret
loopne
mov
inc
into
adc
cmpsl
inc
xor
in
int
sahf
loope
outsb
jmp
mov
fmuls
daa
imul
data16
stc
rcrl
out
and
fcomps
mov
movsl
push
jno
popf
test
lods
jnp
inc
insl
inc
xor
inc
movsb
je
gs
iret
cmp
and
inc
movsl
xchg
pop
dec
das
test
xchg
xchg
repnz
movsl
dec
jnp
mov
cmp
mov
clc
shrl
jb
xchg
inc
mov
mov
pop
sub
mov
int
aas
xor
leave
mov
rcr
in
sub
push
lods
fcom
push
sti
test
leave
xorl
or
inc
xlat
cwtl
in
pop
lret
mov
insl
aam
and
and
fwait
xor
xchg
dec
fbstp
pop
fsubrs
push
es
and
clc
xchg
sbb
insb
ret
icebp
mov
fistl
add
sub
mulb
pop
push
xor
jmp
loope
and
cmpsl
and
repz
push
add
popf
cmp
mov
in
nop
pop
andl
sub
lods
lods
xor
in
adc
and
xor
jo
jnp
lods
sub
xchg
inc
rorl
pop
dec
loop
andb
in
mov
dec
cwtl
pop
iret
xor
test
lcall
add
in
outsl
push
sub
shlb
jb
movsl
adc
fwait
or
xchg
sti
out
int3
or
mov
xchg
adc
mov
enter
xor
dec
cltd
fadd
and
mov
scas
out
mov
fcmove
rorl
mov
push
aam
xchg
cmp
ds
mov
bound
mov
test
push
and
mov
cmpsl
movsl
mov
sub
pop
in
adc
in
jge
xor
xchg
dec
jnp
shll
popa
jae
xchg
mov
mov
sub
push
mov
and
nop
ret
mov
stos
xchg
dec
xor
scas
jae
inc
insb
in
int3
lret
out
scas
stos
fmul
rcll
popf
fistpll
adc
mov
enter
test
mov
outsb
in
imull
adc
cmpsb
cmpsl
inc
or
ss
mov
rolb
xor
or
dec
faddp
xchg
aad
out
cmp
mov
ret
mov
lods
dec
in
sahf
adc
pusha
mov
fsubrp
dec
cld
jecxz
dec
mov
sahf
enter
and
sub
fimuls
iret
test
outsb
insl
mov
or
jnp
jl
iret
imul
push
mov
cmpsl
lods
sti
scas
push
scas
arpl
testl
fcoml
fcmovu
scas
in
addb
hlt
mov
dec
loopne
push
or
bound
xor
bnd
fnsave
pop
arpl
mov
sub
mov
fdivs
shrb
in
stos
fnstcw
jo
cmpsb
popf
inc
popf
scas
adc
push
push
inc
arpl
add
rolb
repz
mov
push
out
and
jbe
cs
daa
je
push
aas
mov
or
inc
dec
jno
mov
adc
mov
stos
scas
cmc
fmull
mov
push
rorl
popw
sti
push
out
and
lea
arpl
loopne
dec
jg
and
bound
dec
lret
mov
cmp
xchg
sbb
jae
push
ror
icebp
loopne
aam
loop
mov
fnstcw
in
shrl
fildl
add
pop
and
insl
adc
lahf
xchg
xchg
lcall
and
push
movsb
jl
adc
adc
adcb
or
dec
jbe
pop
xchg
xchg
adc
inc
daa
or
outsl
and
fistpll
cli
adc
mov
dec
cli
nop
int3
test
es
pop
cmp
ja
mov
les
clc
mov
cmp
mov
setbe
xlat
pop
add
sarb
jg
cmpsb
sbb
stos
int3
int
int3
xchg
mov
mov
push
mov
mov
rcr
icebp
mov
or
ret
pop
pop
lods
xchg
jl
or
sub
jp
add
cs
cld
jg
lods
mov
pop
push
repz
xor
je
imul
fcomi
adc
xor
xor
xchg
xor
in
pushf
fisubl
lcall
movsl
xchg
jo
or
mov
movsl
sub
adc
sub
lahf
repz
cmp
fnsave
stos
mov
xor
push
mov
add
cmp
aaa
sub
popf
into
sbbl
in
push
sbb
mov
pop
andl
je
adc
enter
inc
push
jb
xor
leave
js
idivb
xor
xchg
outsb
mov
shll
fwait
fs
sbb
rclb
les
inc
mov
test
or
lea
hlt
sbb
dec
sub
andl
daa
lahf
jmp
push
and
sbb
xchg
cwtl
add
jge
adc
mov
stos
dec
loop
mov
mov
inc
movsl
fmulp
mov
leave
loopne
push
test
aas
es
mov
shr
call
push
sub
and
shrb
dec
and
push
repnz
arpl
iret
je
js
sbb
fbld
adc
out
xlat
push
sbb
les
aas
ss
jns
mov
pop
pop
movsb
push
inc
rol
push
inc
test
testl
lahf
orb
mov
sbb
popf
das
jnp
xchg
lret
push
jno
xchg
pop
push
adc
mov
or
dec
dec
fwait
and
dec
scas
or
lods
ret
fcmovnbe
and
or
dec
jge
pop
xor
arpl
pop
dec
jnp
inc
rcrb
out
push
dec
and
mov
xchg
push
aam
loopne
cwtl
ret
sbb
xchg
cld
clc
push
sbb
aam
fstl
sub
lods
lahf
mov
xor
and
push
insb
lahf
pop
xchg
mov
push
test
xlat
mov
xchg
outsl
jge
and
popf
jne
in
fs
push
xor
inc
xor
lods
lret
int3
sbb
mov
popf
aad
loop
ja
cmc
ljmp
fcmove
jbe
jbe
shr
insb
pusha
and
outsl
fmul
inc
mov
xchg
mov
icebp
jge
cmp
push
repnz
xlat
cmp
push
pop
stos
jb
jmp
cmp
cmp
or
mov
int3
lahf
push
xor
cmpsb
sbb
aam
stos
jno
push
fsubr
cwtl
repz
scas
lock
mov
add
jp
dec
dec
jmp
pop
out
loop
pop
cmpsl
scas
sbb
add
lret
orl
fwait
cltd
xlat
lret
out
adc
loop
push
sub
lea
xchg
inc
sahf
lea
xor
lds
add
sbb
pop
cld
pop
scas
sbbl
bound
or
and
add
cli
sub
xor
loope
shll
out
push
inc
dec
es
lock
mov
jno
test
or
xor
call
repz
repz
imul
xor
push
adc
imul
stc
pop
aad
inc
cmp
fimuls
inc
pop
fldt
mov
lock
int3
cmpsb
pop
aam
sbb
loop
rcll
jns
and
inc
aam
xchg
inc
cs
rcl
xchg
loope
or
cld
and
aas
add
adc
dec
mov
cmpsl
push
fsubp
mov
mov
mov
out
repz
jns
push
pop
push
cmp
lds
fsubr
xor
xchg
dec
mov
cmp
dec
cltd
jecxz
mov
aam
js
pop
mov
mov
mov
aas
mov
rolb
push
mov
cmp
or
arpl
jb
sarb
adc
dec
mov
jle
xchg
jo
push
out
sub
lcall
mov
or
fdivr
push
push
pushf
mov
dec
incb
push
icebp
movsl
addb
lret
xchg
push
stc
rorb
scas
mov
push
jg
cmp
push
xchg
mov
getsec
pop
mov
xchg
scas
mov
dec
cmp
imul
pop
dec
lods
hlt
mov
dec
iret
and
jb
in
cwtl
pop
mov
shl
add
inc
adc
je
xchg
mov
adc
add
es
push
imul
dec
jno
cmp
inc
aaa
cmc
inc
mov
xor
inc
in
mov
pop
or
pop
in
push
push
mov
es
aaa
cmp
xchg
daa
inc
cmpsl
dec
cmpsl
stos
xchg
addb
pusha
rorb
lea
out
inc
jp
push
push
pusha
adc
out
outsl
push
cmpsl
inc
lahf
mov
adc
mov
adc
mov
cmc
sub
mov
popa
pop
mov
push
inc
int3
xchg
sbb
xor
sahf
adc
test
daa
shrb
icebp
fidivrl
adc
cs
loopne
nop
pop
test
call
std
bound
out
pop
dec
rorb
xchg
test
lret
mov
jp
xchg
fdivs
stos
test
jmp
aam
outsb
inc
pop
insb
lods
mov
lds
xlat
ljmp
jl
test
and
add
test
xor
mov
push
mov
call
cltd
mov
cmpsl
daa
cmpsl
mov
xor
out
loopne
leave
rcll
jecxz
outsb
cmpsl
stc
fistpl
dec
into
and
bound
addr16
lock
popf
cmp
xor
stc
dec
arpl
or
cwtl
jae
jle
inc
andl
daa
inc
dec
std
dec
loope
mov
insb
fwait
sub
loop
fstps
repz
dec
jge
cmpb
ja
insb
nop
pop
xlat
xor
jnp
sbb
inc
adc
out
sub
in
sub
test
inc
iret
pop
popa
in
jl
pusha
test
fsubl
das
mov
ss
fadds
mov
repnz
and
add
jbe
mov
test
inc
or
addr16
fs
pop
out
mov
testl
cmpsb
pop
mov
jo
fistpl
dec
daa
cmc
xchg
mov
xor
inc
jmp
shlb
pop
stc
cmp
cmp
stos
lock
push
ds
out
or
repnz
out
jo
js
and
dec
xchg
sbb
leave
out
push
mov
int
cmp
mov
mov
mov
inc
and
and
into
jbe
xor
adc
and
mov
dec
popa
add
xchg
xor
mov
pop
inc
mov
adc
daa
mov
repnz
jmp
dec
pop
cmp
loope
jae
sarb
xchg
push
int3
mov
pop
push
inc
or
fdivrl
adc
loope
sarb
fcoms
popa
xchg
or
lret
pop
insl
or
scas
mov
sub
xchg
mov
mov
repz
inc
jl
inc
jg
adc
ret
daa
movsb
fdiv
dec
dec
xchg
xchg
xchg
jb
into
in
mov
inc
loopne
popf
test
fwait
add
pop
jge
insb
fwait
fwait
cltd
out
lods
xlat
js
xorl
fsubrs
or
and
push
cmpl
adc
jl
icebp
ljmp
leave
adc
push
int3
cld
dec
subl
stos
mov
sbbl
xor
cmp
lahf
jl
movsl
cmp
cwtl
mov
xchg
repnz
mov
movsb
xchg
dec
xlat
jns
mov
pop
cmpl
fs
inc
call
les
add
xchg
daa
inc
sti
push
sbb
or
stc
outsl
fildll
sub
test
or
popf
pusha
mov
addr16
repz
pusha
add
pop
dec
mov
movsb
mov
enter
movsb
stos
adc
imul
adc
inc
or
aad
push
mov
in
dec
xor
movsb
mov
addr16
mov
mov
lret
push
push
pusha
mov
cmp
ret
out
mov
xchg
xchg
jecxz
xchg
jbe
jle
adc
mov
ficoms
adc
cmpsl
aas
popf
nop
jg
cmc
sub
ret
sub
clc
cmpsb
shll
and
adc
sti
push
mov
pushf
addb
xlat
test
pop
pushf
rcl
arpl
and
cmc
gs
fbld
push
test
push
jnp
fmull
cwtl
orb
or
clc
pop
push
out
jne
jno
mov
mov
jmp
loopne
fistps
sbb
cltd
xchg
dec
cmp
sub
cmp
mov
rolb
or
sub
sub
outsl
inc
ljmp
push
jmp
xor
ds
sub
out
mov
incb
fildll
push
push
shll
sub
mov
or
xchg
add
pop
jge
xor
xor
xor
mov
lods
jbe
pop
cmp
pusha
mov
cmp
dec
fs
das
push
fdivl
sbb
push
movsb
mov
fdivrl
pop
call
loopne
fmulp
pop
aad
int3
jno
roll
loop
cli
push
sti
inc
movsb
out
cmp
pop
addr16
insb
outsl
shll
popf
es
xchg
stc
cmp
rclb
cmc
pop
xchg
cmpsl
push
or
iret
sbb
mov
sbb
xor
mov
and
sub
dec
decl
mov
addl
push
or
daa
loopne
ljmp
repnz
fisubs
adc
rcrb
test
pushf
and
ret
fisubs
jl
shll
repz
fstl
fcomps
adc
ret
cltd
fsubrl
out
sahf
or
mov
push
outsl
inc
shlb
cmpsl
cmpsl
push
ljmp
jno
xchg
xchg
sub
test
mov
adc
mov
xchg
pop
aam
in
xchg
out
cmpb
call
loope
mov
rol
mov
lods
xor
mov
fisttps
subb
lock
repz
fistps
sbb
jno
jmp
aas
hlt
ds
adc
push
xor
inc
aas
xchg
movsb
dec
jae
sub
mov
inc
mov
js
jo
adc
push
add
jae
lcall
testb
repnz
mov
jbe
ljmp
test
icebp
jmp
inc
imul
ret
fidivrs
pop
loope
jo
sti
jno
add
adc
jnp
aad
cli
jb
rclb
std
cli
dec
push
mov
push
xor
pop
add
push
cmpl
shll
mov
frstor
sub
adc
mov
sub
data16
nop
int3
cltd
loope
xor
int3
pop
push
mov
nop
mov
rclb
sbb
imul
stos
rclb
mov
sahf
es
scas
rclb
in
sbbb
mov
inc
test
dec
dec
jmp
xchg
out
cwtl
lahf
ja
push
or
outsl
in
cltd
xchg
mov
pop
sub
pop
daa
mov
pushf
sbb
outsl
or
daa
in
cli
movsb
add
inc
scas
repnz
mov
adc
pop
lods
mov
sbb
mov
jo
cmp
add
fwait
sub
adc
lret
cmp
mov
mov
mov
dec
pop
sub
stc
jne
dec
mov
outsb
outsl
lret
ss
jo
fsubrp
sbb
daa
dec
out
dec
andb
stos
sti
repnz
pop
mov
inc
push
adc
jle
push
ret
or
mov
aad
or
movsb
adc
pop
mov
mov
xlat
or
fdivrs
pop
aaa
jb
adc
mov
inc
lahf
dec
add
dec
jge
add
push
inc
jg
add
lods
sahf
jo
jb
fdivs
and
out
fistl
in
insl
inc
sarb
cmp
cmp
call
test
iret
sub
mov
mov
cmp
call
fwait
and
and
mov
std
xchg
shl
lret
dec
ja
in
add
sbb
fcoml
sti
int
dec
mov
repnz
and
dec
out
inc
in
inc
cmp
inc
in
and
cmp
ljmp
test
clc
scas
outsb
jae
pusha
jo
adc
nop
mov
inc
mov
test
jo,pn
mov
push
insb
cmp
mov
hlt
incl
aas
push
sti
fcomp
or
jae
stc
or
cmc
sub
and
mov
arpl
xor
and
push
aad
sub
sti
xor
push
inc
jne
ja
in
pushf
cwtl
cld
or
out
loopne
add
jmp
stc
push
add
fadds
inc
lsl
pop
mov
mov
cmp
sbb
popl
sub
push
test
sub
pop
test
lods
jnp
movsl
xchg
inc
mov
jns
fs
fmull
cmp
adc
sbb
cltd
push
pop
js
ljmp
pop
shl
sahf
shll
mov
mov
jle
hlt
add
popa
ficoml
adc
jmp
xor
xchg
loopne
cmp
cmc
into
std
adc
lea
clc
ret
push
jp
test
mov
ds
sti
stos
popf
sub
imul
sub
aas
rorb
jg
inc
imul
xorl
fdivs
jecxz
mov
inc
clc
dec
dec
and
gs
mov
lcall
stos
xchg
xor
addr16
xor
cli
xchg
push
ret
mov
data16
addb
ret
lea
popl
pop
subl
loop
scas
push
mov
movsb
es
call
into
je
test
pop
push
dec
dec
add
sub
adc
jg
adc
jne
push
repz
fcmovnbe
inc
sbb
inc
shl
rcll
push
lret
addr16
stos
sub
sub
mov
shll
lret
les
test
out
outsl
sbb
lret
adc
je
lods
mov
mov
jp
jge
ss
out
fisubrl
push
pop
pop
je
lea
xor
xor
adc
xor
push
btc
pop
mov
xor
neg
cmp
stc
push
push
push
push
lea
push
push
push
push
mov
mov
mov
xchg
call
loop
rorl
adc
mov
btr
movsbl
stc
pop
pop
push
mov
mov
pop
jae
mov
cld
push
pop
je
mov
push
push
mov
pop
pop
cmove
push
xchg
mov
pop
cmc
jae
cmove
cmovge
mov
cmovp
cmove
lea
lea
cmovae
mov
push
mov
cmovns
nop
pop
push
mov
cmovs
cld
pop
cmovne
cmovs
cmovbe
cmovb
cmovp
cmove
cld
call
lea
cmovno
push
cmovns
push
pop
pop
mov
lea
cmove
cmova
cmovge
cmovne
push
push
cmovno
mov
pop
pop
lea
mov
cld
mov
inc
inc
inc
inc
push
lea
movswl
pop
push
cmp
cmc
pop
push
clc
pop
cmc
add
lea
lea
jmp
jbe
mov
mov
mov
push
mov
stc
pop
lea
cmc
xchg
je
neg
lea
mov
cld
lea
push
pop
cmc
push
pop
mov
call
lea
mov
jbe
je
lea
lea
mov
lea
cmp
mov
mov
mov
cld
push
mov
jmp
lea
mov
nop
lea
call
add
in
lea
cld
pop
pop
lea
mov
pop
pop
push
test
pop
mov
mov
cld
add
jbe
push
nop
pop
mov
cmp
jne
cmovle
mov
jae
mov
mov
cld
mov
push
pop
mov
mov
push
mov
nop
pop
jae
mov
rcl
je
xor
mov
mov
mov
neg
nop
mov
push
mov
mov
mov
cld
pop
not
je
cmovae
mov
push
not
pop
push
bt
mov
pop
mov
stc
mov
jo
nop
xchg
push
xchg
stc
pop
test
lea
lea
xor
xor
mov
mov
mov
push
mov
cmc
pop
cmp
clc
mov
shr
test
je
mov
mov
neg
neg
push
mov
mov
cmc
pop
push
not
stc
pop
neg
not
cmc
push
mov
add
pop
neg
not
ja
shr
mov
xor
and
neg
test
stc
xor
je
jno
neg
mov
neg
jbe
neg
imul
movswl
neg
not
not
btc
not
not
push
add
pop
xor
neg
nop
push
mov
push
xor
pop
pop
jo
neg
not
not
xor
clc
not
neg
not
neg
jne
not
cmp
jns
ror
mov
not
xor
neg
stc
lea
not
not
neg
not
clc
neg
stc
imul
test
not
neg
neg
not
cmovo
mov
sub
js
neg
not
not
not
mov
not
not
cld
bsr
neg
cmc
push
mov
push
xchg
movsl
xchg
mov
pop
js
lea
neg
jne
nop
not
mov
jns
neg
shr
push
neg
neg
neg
not
pop
not
cmovbe
neg
jns
not
not
jne
neg
jno
not
not
push
neg
not
neg
pop
bsr
stc
mov
neg
neg
neg
neg
nop
not
neg
not
mov
neg
not
xor
xor
cmp
cmc
inc
nop
cmc
push
not
not
not
not
pop
call
enter
fcomi
shl
shl
shl
fisttpl
scas
repnz
not
not
pop
neg
not
neg
not
not
lea
neg
cld
push
mov
not
neg
neg
neg
neg
neg
not
not
not
neg
not
neg
test
neg
pop
pop
jo
neg
stc
push
neg
not
cld
pop
clc
cld
call
maskmovq
neg
not
push
cmp
pop
not
push
mov
neg
not
stc
pop
pop
jmp
neg
neg
neg
cmovb
cmove
not
neg
neg
jo
not
not
mov
not
push
not
neg
not
neg
pop
mov
neg
neg
not
not
neg
not
neg
not
xor
not
not
neg
not
not
cld
not
neg
cmovne
mov
neg
neg
rol
not
not
mov
cmovle
cld
dec
jne
call
aad
mov
inc
jae
mov
mov
mov
mov
cld
push
mov
mov
mov
mov
mov
mov
mov
not
mov
mov
mov
nop
pop
pop
cld
jne
mov
neg
mov
neg
mov
mov
not
cld
jns
mov
mov
mov
mov
neg
mov
mov
mov
mov
mov
mov
cmc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
not
mov
mov
mov
mov
mov
not
mov
mov
mov
mov
neg
mov
neg
mov
mov
mov
lea
jae
push
mov
not
not
pop
push
clc
pop
push
mov
pop
push
xor
pop
push
cmc
pop
push
pop
push
pop
push
test
not
nop
pop
call
and
add
add
add
add
add
add
push
mov
push
pop
cmp
pop
pop
push
lea
nop
not
pop
push
neg
clc
pop
push
push
cmc
pop
pop
lea
lea
lea
lea
lea
lea
lea
mov
lea
lea
lea
not
lea
neg
lea
lea
cmovl
lea
lea
lea
push
mov
pop
lea
not
xor
cmc
dec
jne
lea
push
lea
mov
cld
pop
lea
lea
lea
lea
lea
lea
lea
lea
lea
push
pop
sbb
mov
fisubrs
push
push
xor
jl
les
mov
push
rcr
ss
xor
cmp
pop
mov
mov
and
push
xor
jnp
mov
ret
push
test
xchg
inc
stos
adc
sbb
push
idivl
sbb
test
cmp
dec
mov
dec
cmp
mov
sub
lahf
add
js
int3
or
or
in
jae
mov
mov
cmc
and
and
pusha
sbb
dec
dec
in
and
jb
loop
mov
stc
outsl
call
cmp
mov
mov
adc
jle
inc
cmp
outsb
outsl
push
xchg
jbe
jecxz
lods
or
sti
addr16
and
repz
or
imul
jns
pop
ljmp
bound
push
jp
mov
shl
mov
lcall
push
sub
xchg
rclb
push
addb
sbb
sbb
or
stc
cmp
jbe
es
icebp
loopne
scas
icebp
jne
insl
out
push
cmp
or
and
in
popa
into
mov
fildll
jp
jb
popa
aam
jmp
arpl
loop
popa
lods
adc
movsb
push
aas
push
inc
push
inc
push
jbe
adc
dec
pop
xchg
out
pop
rcrb
xor
pop
cli
or
pop
fmull
inc
jle
jno
jmp
push
xor
imul
enter
repz
mov
fnstcw
out
mov
jp
and
clc
ja
outsl
aaa
in
push
mov
rclb
add
ret
bound
push
push
pop
mov
cmc
out
xor
dec
add
outsb
or
mov
out
adc
cmp
push
in
into
cs
dec
push
adc
inc
cmp
push
dec
xor
push
push
je
pop
inc
or
or
sarw
scas
jg
in
pop
or
in
lahf
sbb
int3
sbb
loop
cmp
mov
or
pop
and
test
adc
ss
jge
cmp
fildll
adc
in
add
adc
ficoml
fildl
and
dec
pop
and
ret
lds
pop
push
shrl
mov
jne
cmp
fmull
mov
dec
xor
leave
sub
or
and
push
jno
xor
imul
int3
xor
mov
adc
sub
cmpsb
stos
jb
add
aaa
pop
lods
cmp
adc
pushf
mov
push
cmp
mov
test
sbb
lods
jno
lret
in
xlat
or
pop
lahf
sub
mov
insb
imul
ss
and
sbb
sbb
icebp
fisubs
lods
push
stos
mov
inc
jne
mov
sub
fisttps
and
aaa
dec
adc
pop
sbbb
sub
cmpsb
ret
adc
mov
dec
imul
imul
inc
mov
dec
and
das
sbb
testb
daa
bound
sbbb
cli
xor
and
or
jecxz
cwtl
jns
add
ja
enter
push
outsb
mov
add
daa
jne
nop
jle
ljmp
maskmovq
mull
shlb
mov
pop
fs
push
pushw
add
cli
addr16
ja
push
pop
repz
add
sub
and
fsts
fists
jno
pushf
push
ja
insl
jecxz
addr16
mov
stos
call
test
sti
or
lea
bnd
pop
addb
insl
jo
in
lods
imul
int3
clc
push
hlt
stos
in
repz
shl
loopne
mov
mov
push
push
shrl
test
push
loope
test
ja
xchg
shl
cmc
mov
adc
xchg
inc
xor
cli
outsl
lahf
inc
neg
push
jno
std
mov
dec
pop
test
mov
ret
jecxz
mov
in
loope
lea
xor
adcl
out
js
jle
add
das
add
call
stos
push
jge
jl
aas
fmul
js
cmp
addr16
xchg
mov
mov
xchg
mov
pop
call
mov
mull
lods
cmpsl
test
sub
fs
int
bound
clc
fs
cmp
xchg
push
dec
cmp
lds
notl
in
pushf
js
out
repz
lods
mov
outsb
dec
mov
and
test
idivb
sarl
ret
xchg
jecxz
addr16
jns
push
sahf
ffree
sbb
adc
xor
mov
ret
dec
sbbb
xor
xchg
jecxz
mov
push
inc
push
cmpsl
mov
jns
or
push
pop
clc
mov
arpl
jecxz
add
xchg
jnp
pusha
dec
pavgb
lea
push
stc
sbb
or
push
ret
jecxz
jno
ret
std
push
xor
mov
mov
jno
xchg
adc
mov
inc
test
pop
and
arpl
insb
or
lcall
andb
daa
pop
pop
sub
pop
inc
fildl
sub
mov
inc
arpl
xchg
sbb
cwtl
shr
out
cmp
addb
lret
incl
xor
add
add
add
xchg
test
fsubrl
sbb
push
pushf
push
ffree
mov
cmc
mov
jmp
dec
aam
and
sbb
or
or
pop
iret
addr16
and
scas
stos
ds
sbb
sarl
jnp
ss
cmc
iret
rcrb
frstor
dec
pusha
jmp
adc
jnp
inc
les
xchg
sti
mov
inc
add
js
xchg
push
into
sbb
mov
sub
xchg
stc
cltd
fcomp
cmc
mov
lds
loop
lods
test
sbb
dec
cmp
out
pusha
fcmovnb
pop
jae
cmpsb
in
fstp
xorl
das
dec
ds
lret
mov
add
mov
or
mov
jl
pusha
lea
adc
lahf
pop
jnp
clc
aaa
or
outsl
mov
sub
sub
std
jmp
mov
les
xor
pop
aad
imul
pop
jge
pop
mov
cmp
or
shll
pop
loop
loopne
cmpsl
sub
shlb
mov
mov
jge
fwait
push
and
test
pop
dec
push
mov
pop
or
xlat
dec
ror
xor
or
mov
push
mov
pop
and
mov
jno
ljmp
stc
cmpsb
mov
ds
jecxz
jno
mov
or
jp
dec
jbe
fcomp
add
sti
adc
mov
in
lods
loop
jno
inc
mov
iret
aaa
add
jno
out
jmp
fisttpll
push
mov
fiaddl
push
pop
adc
shll
jbe
add
pop
setg
push
add
insb
cmpsb
sbb
xor
push
out
ret
inc
sub
outsl
test
sbb
cmp
dec
pop
xor
cmp
cmp
rorb
in
sbb
daa
test
pop
mov
fistpl
dec
jbe
adc
mov
jge
inc
fdiv
lcall
sub
xorl
add
mov
faddl
push
popa
arpl
sbb
sbb
sub
imul
mov
loop
mov
sarl
fcmovb
and
cld
sub
and
dec
push
sahf
mov
cmp
out
or
lcall
push
mov
dec
cmp
cmp
inc
cmp
test
loop
movsb
insb
das
mov
imul
repnz
addr16
inc
ljmp
mov
mov
xor
mov
and
xchg
xor
test
test
icebp
jmp
or
sbb
test
push
mov
sub
jns
or
jns,pt
dec
xlat
inc
fs
or
xor
xchg
sub
mov
and
jae
imul
cmp
mov
xor
xor
sub
loop
mov
adc
lret
mov
ss
mov
insb
imul
cmp
mov
jno
lcall
mov
rcr
sub
dec
fiadds
mov
hlt
lea
add
lahf
ficomps
cmpsl
sbb
rorl
pusha
xchg
loopne
xchg
pushf
jb
test
or
popa
jnp
data16
nop
orb
xor
mov
aas
test
or
pop
dec
in
and
mov
adc
idivb
cmp
mov
dec
roll
push
pop
hlt
push
xchg
dec
leave
and
scas
jp
jno
push
adc
inc
aad
lock
xchg
sbb
cs
mov
xor
dec
mov
bound
jp
in
pop
mov
xchg
xor
sub
ss
outsl
dec
outsl
sbb
into
cmp
push
adc
lret
outsb
jno
int
out
sub
enter
mov
cmp
and
imul
popf
xor
das
xlat
jb
adc
ds
mov
lods
jg
fidivs
clc
jmp
rolb
lods
cmp
mov
loop
sbb
repz
sahf
insl
in
insl
push
adc
push
mov
jge
mov
dec
sarl
pop
aam
scas
mov
into
cmc
loop
cmp
aas
mov
dec
aad
sbb
pop
xchg
xchg
mov
mov
add
gs
sbb
mov
dec
and
scas
fistpll
xchg
outsb
dec
das
movsb
pop
bnd
les
mov
mov
inc
jp
xchg
dec
gs
clc
push
push
pop
lahf
pop
aas
cmpsl
popa
std
push
push
repnz
xchg
cmp
inc
add
js
dec
daa
fsubr
in
cmc
addr16
xchg
std
xorl
push
inc
les
push
mov
arpl
mov
stos
push
xchg
fistpll
enter
mov
mov
popa
xor
push
push
xchg
pop
and
loopne
xchg
ret
and
fmull
and
insl
repz
inc
xchg
push
pop
test
mov
jnp
repz
push
stos
mov
and
lcall
dec
mov
and
sbb
clc
push
pop
imul
sbb
cli
dec
insb
leave
dec
cmp
jecxz
lahf
jp
pop
les
fdivr
lret
addr16
push
dec
shll
and
and
sbb
js
ja
ret
movsb
sbb
fimull
lret
push
test
jle
mov
xor
adc
cwtl
push
gs
mov
adc
popa
flds
mov
cmpsb
scas
lret
cmp
lcall
mov
xchg
idivl
pop
std
es
push
dec
xchg
mov
or
in
and
pop
xor
imul
xor
int
and
scas
das
sbb
push
mov
fwait
and
inc
jmp
clc
test
jno
popl
add
jnp
out
mov
jno
push
test
ds
jl
xor
mov
sbb
mov
movsb
mov
mov
jg
dec
nop
jno
rcr
sub
or
std
push
mov
or
jb
adc
in
sub
ljmp
xor
push
bound
mov
or
outsl
shr
push
daa
pusha
shl
lock
fsubp
leave
jg
jmp
inc
cmc
fadds
test
fisttpl
addr16
push
pop
jne
data16
ficompl
sbb
or
jg
and
inc
movsl
sbb
mov
pop
jbe
rorb
pop
inc
push
inc
ja
sti
mov
pop
xchg
aas
add
hlt
cmp
shrb
push
lds
pushf
add
dec
stos
lods
push
in
fildll
inc
xchg
xor
faddp
cmp
ljmp
cmp
xchg
adc
aas
jne
fs
pop
in
insl
out
fadds
inc
fstl
inc
out
es
xchg
add
add
jecxz
jae
mov
cmpsl
adc
shll
pop
mov
idiv
xchg
sahf
mov
mov
mov
inc
fnsave
shlb
jecxz
cmpsl
adc
dec
dec
mov
mov
cs
stos
jae
cs
les
push
and
pop
pop
in
or
xlat
ror
lods
cs
xchg
in
sti
lcall
fnsave
in
imul
jl
int
adc
outsb
lahf
or
and
and
sarl
jo
pop
inc
and
es
add
mov
cmp
mov
loope
mov
mov
lock
jb
mov
xlat
jl
mov
and
cs
or
shlb
dec
mov
adc
and
inc
mov
pop
jp
mov
das
xchg
pop
loop
jmp
push
sub
stos
fmuls
roll
adc
out
mov
aaa
inc
push
jne
dec
inc
ds
cs
inc
inc
xlat
loopne
mov
lea
and
lret
test
lods
push
inc
pop
out
xchg
out
xchg
mov
ljmp
clc
not
loope
pop
push
jnp
xor
pop
mov
mov
subb
mov
hlt
xchg
pop
rcpps
fs
inc
aas
add
int
xor
int3
fadds
daa
movl
imul
xlat
or
pop
and
sbb
jg
int
pop
enter
xor
dec
orb
pop
pop
add
mov
adc
sbb
sub
fmul
push
mov
mov
push
mov
dec
push
subb
jecxz
adc
cmc
cli
lahf
mov
mov
out
cmp
icebp
sbb
in
mov
jo
fnstsw
into
andb
push
sub
in
adc
jno
ss
mov
sbb
adc
icebp
cmpsb
mov
xor
lcall
xor
loopne
push
pop
pushf
mov
cmp
lcall
jns
insb
inc
dec
xor
movb
and
jle
rorb
bound
mov
stos
je
or
stos
add
push
es
xchg
or
sbb
cli
loope
push
ds
and
pop
and
cwtl
out
add
pop
cld
adc
hlt
inc
sbb
adc
mov
push
add
pusha
clc
cltd
and
jbe
cmpsb
fsubs
lock
pushf
imul
dec
decl
out
imul
test
stc
mov
add
xchg
and
xchg
into
popf
fdivl
lods
addl
jge
fsubl
sbb
sbb
sbb
xchg
pop
mov
jmp
xor
sbb
sahf
jge
inc
jno
pusha
inc
das
popa
or
xor
inc
fsubs
fwait
dec
lea
loop
arpl
xchg
test
pop
ja
xor
and
sbb
test
adc
sub
mov
int3
pop
dec
data16
or
rclb
mov
aad
xor
mov
fwait
and
insb
test
std
dec
push
test
outsl
xor
adc
stos
lret
nop
cmpl
fcoms
out
pop
stc
test
stc
sbb
lret
push
pop
imul
inc
adc
xchg
mov
nop
call
stos
and
push
sub
pop
mov
mov
mov
sbb
out
aam
push
mov
andb
stc
or
pop
add
xchg
mov
cli
cmp
stos
fstpl
cmc
and
sbbl
inc
sarl
jmp
jp
sub
pop
mov
adc
daa
xchg
jnp
icebp
mov
aad
out
loop
push
sbb
pop
int3
in
cmp
clc
xchg
out
shl
in
out
adc
mov
sbb
pop
sbbb
mov
mov
push
idivl
sbb
fwait
pop
int3
add
mov
dec
push
push
or
jno
inc
clc
pop
fstl
xchg
pop
fcomps
jp
inc
hlt
sub
aad
xchg
xchg
pop
mov
stos
lds
fistpl
pop
lods
std
fidivl
jge
cmp
lds
imul
cmc
mov
sbb
in
sbb
ja
jnp
jb
test
cli
lock
mov
push
push
mov
add
cmp
mov
mov
push
arpl
cmpsl
inc
jge
mov
jb
pusha
mov
add
sub
sti
clc
jle
popa
test
jp
ret
in
idiv
or
pop
hlt
mov
lods
jno
pop
fildll
sbb
pop
pop
cld
dec
insl
and
push
shlb
pop
dec
stc
popf
cmpl
pusha
pop
jns
int
fistpll
jl
nopl
mov
aam
shl
and
sbbl
jecxz
je
mov
push
in
shrd
mov
cmpsl
shr
ss
or
movsb
pushf
mov
mov
lods
aad
jno
cld
sbb
inc
shlb
xor
dec
js
ss
std
adc
fidivs
lods
dec
push
mov
iret
daa
dec
push
dec
out
ljmp
sub
and
inc
xchg
add
in
pusha
aad
fists
add
pop
je
xlat
cwtl
mov
mov
adc
pushf
movsb
mov
ljmp
in
out
inc
xor
hlt
sub
xor
jmp
ljmp
mov
subl
pushf
mov
pop
outsl
fcoml
arpl
ds
js
push
lds
pushf
mov
dec
sbbb
mov
repz
cmp
ljmp
adc
xorl
lods
out
and
test
mov
pop
jle
pop
cltd
pop
cmp
cmpsl
inc
pop
inc
bnd
iret
inc
hlt
pop
xchg
fprem1
rclb
fmull
jae
inc
pop
pushf
iret
jae
sub
int
lcall
clc
push
mulb
lret
push
imulb
mov
mov
test
jae
pop
insl
mov
inc
pop
mov
clc
and
sahf
imul
xor
xor
inc
mov
arpl
or
xor
iret
sbb
jge
push
or
sahf
int
mov
and
int3
pop
xchg
jae
movb
in
mov
scas
jp
enter
shrl
mov
add
ret
mov
test
lea
push
pop
sbb
pop
add
mov
clc
jae
in
fisubrl
jg
insl
stos
ret
js
mov
ret
enter
insb
mov
push
xor
mov
testb
push
fistpl
xchg
push
xor
call
mov
bound
dec
pop
xor
test
aad
dec
lret
mov
push
dec
xor
imul
push
sub
fistl
je
scas
inc
test
sbb
push
push
mov
or
xchg
movsl
cmp
mov
cwtl
inc
out
aam
add
pop
jo
negl
stc
inc
add
loop
aaa
mov
lret
mov
or
mov
xor
jnp
popf
mov
cmc
dec
mov
lock
mov
loope
cmp
jl,pt
sbb
repnz
inc
or
pop
adc
push
push
pop
push
in
movsb
out
call
imul
out
pand
insl
mov
mov
push
xchg
aas
jb
mov
lea
addr16
xchg
xchg
jg
es
enter
xor
push
ds
divb
cmp
mov
les
cmp
xchg
popf
inc
jecxz
arpl
or
mov
sub
popf
pop
fcomi
shll
pop
in
cmp
jbe
test
mov
and
scas
bound
subl
std
call
adc
push
insl
cmp
idiv
push
sbbl
loopne
repnz
lea
cld
lock
sbb
mov
mov
fisttps
call
data16
inc
mov
std
ja
cmp
std
push
insb
movsl
mov
lds
es
adc
roll
pop
data16
xlat
fists
mov
inc
cmpb
mov
lods
sub
xlat
xchg
das
jle
xor
adc
mov
adc
into
adc
repz
stos
subb
cltd
sbb
aaa
lcall
dec
roll
lods
ss
add
push
neg
push
bswap
out
mov
and
pop
or
jne
add
dec
push
nop
mov
ljmp
es
add
lea
imul
and
sbb
or
dec
repz
or
mov
xlat
mov
daa
or
mov
mov
out
xchg
lock
jbe
cmp
push
lret
xchg
xchg
mov
lods
ret
pushf
repnz
in
sarl
cld
inc
or
out
daa
inc
lret
imul
lods
xchg
dec
add
outsb
sub
or
fcomps
jle
insl
sbb
movsb
pop
das
lds
fisubs
movsl
lcall
mov
orl
out
out
mov
xchg
sub
add
loope
cmp
cmpsb
mov
notb
pushf
hlt
fdivrs
scas
inc
repz
pushf
mov
imul
sub
or
mov
pop
mov
ss
lods
mov
jne
loopne
or
out
cwtl
out
dec
out
mov
cltd
push
add
xchg
mov
pop
stos
dec
out
stc
adc
sti
and
push
les
out
loope
cmp
mov
aam
xor
cmp
push
jne
aad
jae
lds
inc
or
shrl
mov
stc
lds
adc
jbe
shr
stos
lock
lock
stc
pop
aad
adc
jo
adc
sbb
adc
mov
mov
cmp
pushf
inc
sbb
or
jne
sub
inc
lea
stos
stos
test
in
push
into
ficomps
sub
pop
leave
shlb
out
sub
jb
push
stc
aam
mov
sarl
popf
push
daa
fisttpll
adcl
imul
sub
push
mov
push
push
inc
call
jp
sub
shrb
cmp
mov
in
jp
js
inc
mov
or
in
test
int
jnp
cmc
je
sbbb
lods
inc
test
push
enter
lock
jl
dec
insl
dec
dec
jno
test
insb
test
sti
mov
jnp
repz
mov
pop
aas
adc
jg
cs
xor
into
insb
adc
add
loop
add
jg
outsb
insl
push
faddp
mov
repnz
mov
add
xor
push
cmpsl
mov
mov
add
dec
add
mov
outsl
aaa
sub
ffree
sbbb
push
or
out
inc
pop
cmp
lahf
loop
popa
data16
ret
cmp
stc
xlat
mov
xchg
cmpl
xor
sub
pop
arpl
mov
sarl
scas
fld
mov
mov
nop
jge
in
sahf
loopne
popl
xor
repz
js
hlt
insl
mov
mov
xor
je
jle
movsl
mov
iret
mov
jnp
add
jecxz
sahf
inc
push
pushf
push
inc
addr16
add
jge
sbb
lahf
sbb
iret
xchg
adc
dec
and
lods
mov
incb
adc
sub
mov
dec
mov
inc
push
loop
inc
loopne
fimull
sti
inc
mov
mov
xchg
pop
sub
dec
and
xchg
jae
in
inc
je
orl
das
inc
into
mov
outsb
jb,pn
arpl
insl
xor
sub
add
fisubl
test
imul
dec
mov
test
cs
jecxz
xor
or
repnz
pop
jae
lcall
mov
in
std
mov
fwait
lea
push
inc
ljmp
jp
pusha
rclb
inc
orb
and
stc
into
sbb
clc
aad
and
lcall
jo
or
cmp
pop
push
mov
aad
xchg
sbb
dec
cli
xchg
pusha
scas
je
in
dec
cmp
ret
enter
int3
sub
inc
lock
dec
dec
adc
out
and
enter
push
push
les
lods
mov
popa
fwait
and
xchg
adc
add
pop
push
add
emms
inc
stos
dec
mov
dec
loopne
sbb
dec
mov
inc
and
dec
in
pop
inc
aaa
pop
xchg
cmc
inc
jno
fsts
push
add
cld
aam
insl
test
icebp
lahf
fnstsw
push
or
jmp
dec
xchg
sahf
imul
pop
dec
lret
jb
jmp
pop
inc
mov
jl
sti
out
dec
push
sbb
insb
add
pusha
adc
out
lods
sarl
popa
outsl
in
test
add
imul
sbb
mov
int3
add
andb
incb
in
test
and
cltd
out
ss
mov
movsb
push
and
dec
test
stos
std
mov
in
push
aas
repnz
mov
sub
hlt
setno
pusha
adc
icebp
mov
dec
imul
dec
sahf
cmp
jae,pn
xchg
or
rcrb
push
jge
ljmp
cmp
jns
aas
cwtl
fs
pop
cmc
mov
mov
inc
out
inc
add
rclb
fidivrl
add
cmpsl
jo
or
bound
xor
pop
pop
cmovl
jp
cmc
push
jae
hlt
jl
xlat
insb
lret
insl
cli
int3
idivb
cmp
xor
loop
leave
sarb
data16
xor
dec
push
xlat
pop
inc
push
sarb
fdivs
stos
or
add
dec
xor
and
pop
cld
aad
add
lret
sub
je
hlt
inc
movsb
push
lcall
pop
push
jnp
mov
pop
mov
cmc
das
bound
and
andb
out
fisubs
adc
movsb
out
adc
mov
sub
imul
in
jecxz
push
sti
mov
push
aad
fwait
push
mov
push
fwait
das
les
mov
inc
jo
out
add
test
pop
fadd
dec
xchg
shl
push
shl
lock
repnz
pop
push
and
xchg
cs
xor
std
mov
sub
sub
xchg
insl
xor
ss
mov
xlat
jg
mov
ljmp
adc
ljmp
jl
mov
cmpsb
or
lods
sub
pop
hlt
ljmp
xor
add
rclb
mov
adc
dec
jmp
adc
mov
sub
lods
cmp
dec
cmp
jnp
dec
jmp
push
dec
cmpsb
or
mov
mov
dec
test
push
xchg
hlt
or
hlt
add
adc
arpl
shl
inc
push
xor
mov
mov
inc
adc
adc
int
pushf
and
push
mov
push
clc
sub
popa
pop
jo
fldl
in
pop
mov
mov
jl
sbb
pop
mov
pop
aas
inc
lahf
pushf
mov
inc
xchg
mov
cmp
sti
dec
adc
and
clc
xchg
bsf
dec
jns
or
ljmp
nop
inc
xor
shlb
daa
test
push
dec
ret
and
xor
loop
es
or
push
cld
cmp
sbb
cmpsb
pusha
pop
shl
xchg
aad
adc
loop
mov
mov
sbb
adc
fidivl
loopne
push
mov
out
mov
lds
or
inc
into
sahf
lahf
cmp
mov
pop
adc
xchg
inc
inc
outsb
adc
inc
add
lock
dec
enter
mov
add
in
push
xchg
and
xchg
clc
cmp
mov
cmpsl
aas
cwtl
inc
xchg
lods
je
int
iret
add
mov
dec
xor
sub
adc
mov
pop
pop
es
cmp
jg
add
ret
dec
rcrl
jnp
mov
lds
insl
sub
jle
add
arpl
icebp
mov
insb
or
mov
pop
jg
fistpll
loope
into
adc
int
pop
jecxz
pop
ss
sbb
lock
in
and
or
mov
add
sbb
xchg
add
subl
xor
lock
cltd
lods
sub
fbld
jo
sbb
xor
pop
mov
arpl
ffree
lret
push
mov
aad
mov
roll
add
sti
sti
and
lods
test
add
into
call
pop
dec
jmp
imul
adc
loop
push
dec
or
movsb
jo
jne
jge
pop
sbb
or
loope
mov
pop
in
pop
mov
mov
dec
inc
add
sbb
loope
xchg
jge
cmp
push
ss
iret
adc
ss
sbb
daa
dec
in
stos
fbstp
cmp
cs
fdivl
mov
mov
dec
xchg
scas
jbe
out
xchg
aas
sub
add
push
push
jbe
aaa
add
mov
dec
mov
or
jmp
addr16
in
push
mov
dec
add
fisttps
sub
push
lret
cs
xor
daa
inc
insl
repnz
and
pop
bound
push
iret
cmp
adc
mov
cmp
enter
out
push
in
loope
mov
jns
adc
xor
adc
cmp
lcall
sbb
inc
xchg
push
repz
mov
sub
loope
pop
jno
xor
leave
hlt
sbb
adc
and
scas
sub
jbe
jp
and
fs
push
xor
shl
push
adc
sub
sbb
lret
dec
xchg
in
inc
jno
mov
sahf
fwait
je
in
cmpsb
adc
add
fnstsw
inc
lods
scas
push
adc
sub
xchg
add
inc
mov
cltd
dec
pop
or
xor
adc
pop
jno
cmp
in
mov
in
cmpsl
inc
push
ljmp
xchg
mov
mov
gs
sub
in
ret
jmp
loopne
jne
add
mov
dec
mov
into
inc
mov
enter
jge
fistps
outsl
jnp
or
test
fcmovnbe
cli
inc
mov
test
sbb
xor
out
mov
call
and
inc
xchg
dec
mov
adc
into
cmp
pop
or
xchg
test
push
add
and
adc
test
add
stos
or
ds
xorb
test
cmc
lock
sbb
jo
add
notl
outsl
sub
fcompl
decl
imul
mov
pop
inc
mov
mov
mov
outsl
lock
jnp
pop
pop
rol
mov
jecxz
movsl
xchg
std
jg
dec
loopne
mov
push
jo
push
or
and
dec
mov
inc
pop
adc
lods
jle
dec
and
jae
fcompl
cwtl
mov
cmp
sub
mov
std
pop
xchg
sbb
test
add
dec
call
fcompl
arpl
or
pop
xor
nop
or
aam
sbb
bound
sbb
lods
jl
xlat
add
fimull
jl
xor
dec
cs
cltd
adc
push
push
or
hlt
sbb
stos
pop
loop
jmp
push
pop
inc
mov
add
arpl
dec
push
mov
int
fbld
outsb
mov
bound
gs
loope
hlt
bound
call
adc
adc
xchg
mov
pop
or
sar
std
sub
pop
imulb
sub
pop
sub
sbb
stos
mov
push
test
add
mov
mov
loop
fidivs
out
pop
jmp
mov
popf
and
cld
data16
cmp
imul
adc
xor
mov
and
pop
adc
aad
xor
les
xchg
jle
movsb
clc
arpl
lret
lret
lods
jle
sub
out
dec
stc
movsl
xlat
jno
inc
lahf
fimull
xchg
jno
adc
or
fimuls
in
and
mov
pop
test
jmp
mov
xchg
add
pop
shrl
cmp
ja
pop
movsb
and
add
adc
push
aas
bound
fwait
or
add
xchg
cwtl
push
sub
das
cmpsl
bound
fwait
lret
xor
out
xor
mov
jp
xchg
ret
in
pop
test
xchg
add
loopne
pop
out
pop
mov
sub
xchg
in
sbb
lds
inc
cmp
enter
add
sbb
out
mov
add
out
repnz
loope
sqrtps
arpl
mov
loope
xchg
adc
gs
dec
into
add
adc
out
mov
xchg
cwtl
xchg
aad
xchg
push
or
and
sub
lods
inc
cs
mov
inc
mov
and
xor
jae
sub
aas
jge
sbb
xchg
mov
sbb
fisubl
adc
inc
cmp
lods
fwait
rolb
inc
lods
sahf
mov
jo
adc
cmp
call
dec
cld
push
adc
xor
sub
leave
outsl
or
pop
lock
ret
jecxz
out
cmc
daa
pop
out
push
data16
in
xorb
std
je
inc
inc
or
dec
jge
add
lahf
ljmp
pop
fidivrs
es
stos
popf
lock
imul
xor
or
jne
xchg
and
fisubl
stos
adc
or
push
enter
es
cmp
jo
clc
shr
xor
je
pushf
jge
push
adc
sbb
fidivrs
push
adcl
sbb
icebp
test
xlat
push
push
test
cmpsl
adc
dec
lret
leave
daa
mov
jle
mov
push
xlat
mov
mov
add
sbb
xor
mov
mov
xor
inc
mul
mov
cmp
loop
and
or
int3
jno
scas
cmp
and
cmp
in
sub
das
stos
mov
subb
jno
push
repnz
xlat
push
pop
push
lock
jmp
stc
lock
aaa
xchg
add
lret
test
or
jb
cmpb
mov
or
js
gs
lret
pop
push
imul
cmpsl
std
and
xchg
ret
push
das
mov
cmpsl
data16
pop
and
cs
rorl
adc
mov
mov
xor
or
xor
aaa
mov
notl
jns
arpl
jmp
sbb
dec
aad
adc
loope
enter
mov
sub
jle
xchg
dec
imul
sub
push
outsb
cmp
fisttpl
jb
xlat
mov
stos
iret
lahf
sahf
push
mov
lods
cmp
mov
cwtl
fildl
mov
je
out
clc
mov
stc
mov
in
rep
mov
stos
add
jg
xlat
ds
jnp
pop
cs
pop
daa
push
fdivl
testl
out
jns
pop
cli
pop
lret
mov
hlt
push
adc
xlat
and
adc
lods
out
or
add
js
bound
fs
int3
inc
in
xlat
add
js
jne
mov
and
sub
cmp
dec
mov
adc
sbb
pop
sahf
nop
fdivrs
ror
sub
jp
or
insb
mov
js
mov
jnp
pop
mov
xor
movl
aaa
adc
pop
ss
add
fnstcw
jo
aaa
rcr
scas
ds
adc
push
adc
nop
out
add
jae
xor
sub
lcall
xor
mov
int
decl
inc
je
pushf
ss
cmp
mov
sub
in
cmp
rcrb
jmp
popa
insl
lcall
in
push
mov
insl
sbb
mov
movsb
cmpb
inc
dec
cs
movsl
stc
das
ss
mov
mov
jge
jle
mov
push
popf
inc
jbe
xchg
mov
mov
sub
xor
pop
and
imul
and
hlt
jmp
adc
add
pop
and
lahf
cmpsl
push
jnp
bound
mov
ljmp
fwait
dec
pop
cs
cmp
out
mov
cmp
mov
mov
or
add
inc
sbb
mov
gs
test
fidivs
sbb
pusha
mov
pop
inc
nop
cmovbe
enter
push
cmpsb
add
xchg
push
mov
cwtl
pxor
mov
push
test
push
pusha
adc
pop
inc
inc
das
add
pushf
push
aas
mov
fwait
push
or
push
inc
out
lahf
add
arpl
sahf
lahf
inc
inc
stos
stos
dec
cmp
jo
sbb
mov
jne
nop
or
xchg
ret
in
lret
movsb
cwtl
jns
cltd
fwait
and
xchg
pop
sbb
test
outsb
pop
lds
sbb
lahf
pop
push
mov
and
dec
pop
jg
shll
fmulp
repz
lds
xchg
adc
andb
sbb
rcll
loop
das
xchg
mov
popa
jmp
mov
adc
cmp
enter
iret
cld
jp
fmuls
or
sub
int
popa
sti
std
adc
mov
pop
mov
into
sahf
jg
jl
test
adc
fcmovbe
mov
pop
pusha
cld
test
inc
je
xchg
std
imul
lds
jb
movl
jbe
cmp
aad
jp
sub
mov
sti
ss
and
aaa
jns
aas
and
mov
cmpsb
pushf
push
cmp
and
addr16
mov
mov
xchg
pop
adc
movsb
bound
cs
mov
adc
mov
add
movsl
cmpsb
pop
xchg
mov
sbb
lea
mov
add
add
pushf
fmull
cltd
pushf
enter
or
and
leave
push
xchg
mov
subb
dec
fisubl
rol
xchg
arpl
jmp
jl
ficompl
xchg
repz
sbb
sbbb
hlt
shrb
cld
mov
testl
sahf
dec
add
ss
push
xchg
dec
mov
ss
bound
ret
clc
add
jl
sahf
lock
shll
cmc
adcl
push
mov
sbb
add
or
jnp
out
jle
insl
cmp
cld
addb
jae
mov
ljmp
sbb
cmp
addl
cmp
cmp
icebp
rclb
mov
jp
shrb
or
and
movsl
dec
adcl
clc
hlt
andl
pop
mov
iret
sub
leave
shr
movsb
sbb
jecxz
cmp
es
outsl
and
subl
push
test
mov
xor
loope
or
inc
int
cmpl
mov
data16
aad
add
mov
add
sbb
sbbb
lock
in
scas
jge
iret
push
test
and
mov
sub
test
mov
clc
push
dec
bound
daa
call
jno
xor
imul
xor
xchg
mov
into
and
jo
jns
or
xlat
mov
fildll
loop
xor
in
sarl
loopne
dec
pop
push
popl
or
mov
pusha
dec
fldcw
jae
cmpsl
jnp
push
push
jge
pusha
ds
jne
icebp
cmpsl
xor
sub
push
lea
jbe
push
jns
sbb
xor
int
insl
inc
insl
adcl
mov
xlat
dec
jnp
cli
movsb
xchg
xor
sbbb
push
cmp
dec
popa
movsl
pushf
lahf
imulb
sbb
push
push
mov
mov
sti
stos
and
sub
div
test
out
insl
mov
js
in
and
inc
std
cmpsb
mov
mov
daa
sub
test
sub
sbb
pop
mov
xorl
dec
das
outsl
stc
sub
in
xchg
sub
push
stos
ret
in
subb
inc
fst
ljmp
adc
sbb
mov
pop
neg
cmp
int3
mov
pop
push
xchg
int3
in
mov
xchg
inc
daa
pop
ret
jg
pop
pop
mov
cmc
sub
sbb
mov
out
aam
pop
fwait
inc
lahf
divb
add
inc
leave
mov
movsl
pop
mov
jae
movsl
pop
js
ret
loopw
add
test
jns
inc
xor
lock
xchg
xchg
xor
xchg
leave
stc
and
push
andl
and
inc
in
negl
scas
ret
add
movsb
mov
mov
into
lret
dec
mov
mov
idiv
mov
jp
test
into
mov
test
mov
std
lds
sub
push
adc
push
inc
mov
or
add
mov
mov
aaa
js
repnz
dec
lret
shl
add
xchg
shrb
sub
mov
lret
icebp
lahf
adc
xor
mov
fldenv
call
mov
bswap
pop
adc
gs
int3
nop
inc
rolb
stos
xchg
pop
sub
mov
fxch
inc
jb
mov
pop
data16
or
addb
sahf
xchg
pusha
sarb
gs
xor
js
dec
clc
lcall
dec
out
xchg
std
loope
mov
pushf
lock
fldcw
mov
dec
add
xor
push
jge
lock
sub
repz
xchg
call
cs
movsb
add
xor
ljmp
jmp
push
adc
mov
push
lds
xor
pop
dec
mov
hlt
inc
loope,pt
push
push
pop
hlt
push
dec
xor
or
pusha
mov
idivb
push
sub
add
popl
cmp
xchg
cli
inc
ret
adc
xor
mov
mov
shlb
jecxz
inc
sbb
rcll
into
icebp
inc
scas
mov
push
ss
jo
sbb
pop
sbb
pop
jmp
xor
mov
jmp
inc
or
mov
fsub
rorl
arpl
int
adc
shrl
mov
xchg
dec
imull
loope
sub
and
lods
outsb
dec
adc
pop
stos
subl
dec
and
dec
mov
lods
xchg
pop
sti
jecxz
jae
hlt
sub
mov
bound
test
jmp
jmp
pmullw
jb
adc
sti
test
push
mov
pop
test
nop
aam
sti
push
imul
lret
sub
sbb
adc
sahf
movsl
movsb
push
ret
pop
inc
loope
in
mov
pop
xor
push
into
add
sub
pop
ja
test
sub
inc
outsl
dec
dec
mov
and
mov
xchg
enter
ss
rcrb
mov
into
pop
das
loope
adc
cmp
enter
sbb
push
adc
xchg
and
xor
mov
fnstsw
inc
or
dec
outsl
out
fdivrl
push
scas
daa
aam
mov
mov
sub
popa
pushf
into
and
loopne
popf
scas
lock
scas
fldl
aas
iret
sbb
scas
fists
add
jne
std
mov
jge
mov
in
mov
sub
add
xor
mov
mov
jecxz
pop
adc
je
cmpsb
gs
push
jmp
xor
faddl
cmp
or
pop
sbb
add
pusha
dec
das
push
inc
out
dec
stos
cld
jle
push
inc
js
ja
rclb
jb
push
scas
bound
pop
mov
es
push
sub
push
xor
mov
dec
xchg
sbb
xor
popa
sub
mov
adc
add
cli
cmp
aad
xlat
stos
out
in
jno
rclb
xchg
data16
sti
adc
shlb
repz
fdiv
test
pop
add
call
mov
clc
xor
insl
mov
pop
push
fsub
push
outsb
fs
push
mov
jae
scas
cmp
mov
sbb
js
fdivl
jecxz
fisubl
and
jmp
adc
dec
movsb
fucom
aaa
jl
jp
or
push
lock
cli
mov
rclb
shl
push
lds
mov
fs
sub
ss
out
sub
adc
pop
xchg
cmp
leave
lods
loope
sub
pushf
cld
xorb
pop
add
mov
jne
lcall
adc
pushf
xor
fisubs
sub
add
and
ds
mov
inc
sbb
movsl
mov
xchg
cmpb
aad
or
ret
popf
test
adc
mov
in
lock
cmc
fldenv
arpl
dec
mov
sbb
fsin
xchg
mov
jmp
shll
fldcw
dec
adc
xlat
lods
fcoml
cld
jnp
ret
in
and
aas
xor
sub
lods
outsb
inc
jmp
ss
mov
scas
or
test
xchg
mov
test
test
sbb
pop
vrndscalepd
mov
mov
or
adc
jbe
xchg
jmp
mov
mov
fldenv
imul
cmp
rcr
push
jno
insl
push
in
push
jle
lret
loopne
jmp
or
mov
xor
push
pushf
shl
outsb
ljmp
aam
lods
cmp
test
ja
cmp
daa
test
dec
pop
add
hlt
cltd
pop
fwait
dec
sub
cwtl
je
nop
mov
add
ret
scas
jge
lahf
into
jo
xor
adc
insl
ret
sbb
loop
jnp
cld
cmp
test
xor
fbld
imul
insb
mov
fstp
fucomip
je
dec
mov
or
les
xor
jae
js
fnstenv
dec
or
xchg
cmpsb
jecxz
xor
push
pop
fdiv
push
mov
and
xchg
sbb
add
pop
jns
push
sub
dec
in
mov
or
add
sub
std
popf
pop
fdivs
adc
test
sub
ja
nop
and
fsubrl
and
test
out
incl
jge
repnz
push
shr
daa
loopne
or
outsl
movsl
push
inc
movsl
push
and
sbb
sti
cmp
gs
xchg
mov
data16
xchg
jle
loope
xor
pop
pop
in
mov
xchg
sub
dec
repnz
cs
push
repnz
jne
dec
dec
subb
ror
stos
jo
fidivrl
gs
jbe
mov
shl
fwait
cmp
xor
jl
mov
icebp
gs
gs
mov
mov
mov
shrl
sti
scas
movl
push
imul
push
push
cli
inc
push
or
dec
push
scas
jb
pop
mov
inc
cli
cmc
dec
mov
stos
and
shll
js
clc
leave
pop
dec
cli
mov
push
xor
pop
icebp
fistpll
out
inc
test
xchg
push
scas
ficompl
xlat
dec
cmp
ljmp
sti
inc
dec
sub
or
jbe
jno
pushf
xchg
pop
inc
lea
daa
cmovp
mov
xor
xor
cld
dec
stos
out
sbb
cmp
data16
mov
adc
inc
repnz
stos
xchg
push
sbb
sbb
cs
addb
add
imul
es
loopne
xor
inc
cmpsb
dec
xchg
xchg
jle
nop
popa
ss
jno
fisttpl
xor
sbb
add
test
cmpsb
jg
mov
fucompp
jns
scas
inc
pop
icebp
shll
daa
imul
sbb
loopne
pushf
imul
scas
adc
pop
and
cmp
aad
pusha
ds
pop
ss
das
sbb
sub
cmp
call
jb
cmc
test
adc
xor
loop
dec
pop
dec
loopne
mov
mov
scas
adc
sub
jo
in
sub
mov
push
add
cmovns
mov
and
jo
jg
or
fldl
dec
cld
jle
push
mov
sbb
or
mov
inc
xor
imul
xchg
es
clc
repz
and
pop
mov
neg
jp
pop
xor
push
xchg
or
mov
lods
insb
or
xchg
and
subb
xchg
xor
mov
cli
ds
ret
jg
lods
and
and
cmp
shll
cmc
outsl
mov
iret
scas
xor
or
lret
addr16
push
or
lea
mov
mov
aaa
in
and
aad
pop
push
mov
or
cmp
mov
dec
loope
adc
sbb
je
mov
loope
inc
int
xchg
inc
std
push
sbb
cmpsl
sbb
je
insb
push
push
xchg
and
lret
mov
push
sahf
and
loopne
lea
push
xchg
pop
icebp
das
cmp
mov
subb
push
stc
outsl
sub
mov
sti
dec
outsb
sbb
mov
int3
push
add
push
lock
push
dec
pop
aas
in
pop
xlat
pop
xchg
sbb
addb
jns
pop
cmp
pop
xlat
jecxz
icebp
sub
dec
or
jp
les
lahf
fcmovu
fstps
pop
enter
sbb
lret
jmp
sub
mov
rolb
insl
dec
push
nop
insb
out
in
sbb
inc
das
in
xchg
in
push
xchg
out
or
inc
test
dec
adc
pop
cli
inc
mov
loopne
es
es
dec
xchg
aam
popa
jb
inc
outsl
xor
cltd
std
and
add
fs
sub
enter
lods
mov
xor
imul
or
cmpsb
or
jl
repnz
scas
cmp
cmp
mov
sbb
cld
mull
out
out
sbb
mov
scas
data16
insl
push
mov
pop
pop
push
mov
xchg
addb
test
cmp
or
dec
frstor
inc
clc
and
xor
stos
adc
sbb
sbb
cmpsl
es
sbbl
cs
scas
scas
out
jo
pop
mov
sub
data16
neg
inc
jne
rcl
jecxz
hlt
rcr
push
shlb
lods
adc
movsl
dec
fcmovb
or
addb
mov
cmp
clc
js
ret
xor
xchg
cmp
push
js
pop
pop
stos
movsl
mov
imul
dec
mov
xor
orl
ss
outsb
daa
mov
and
cmpsl
out
pusha
ja
outsb
add
xchg
and
push
xor
stos
add
xchg
lds
and
push
addb
lock
int3
repnz
or
test
xchg
or
adc
cmc
std
imull
jl
xchg
imul
stos
dec
mov
push
fstps
out
mov
sub
push
in
dec
sub
lret
lds
cmp
sub
inc
test
adc
fidivrl
inc
ss
aad
fidivl
inc
dec
cltd
adc
shll
pop
cmp
rclb
loopne
cmp
imull
fsubl
ret
mov
sbbb
js
fldcw
cmpsb
sub
stc
sarl
aas
fs
mov
cmp
add
dec
mov
sahf
mov
push
push
adc
xchg
imul
neg
cmp
add
loop
outsl
jge
fdivrl
jl
mov
decl
push
repz
loope
fildl
lret
dec
jb
lret
jno
add
and
ja
nop
ljmp
out
inc
bnd
jo
inc
in
cmp
cli
insb
pop
gs
jge
pop
imul
lahf
xor
adc
mov
repnz
xor
xchg
stc
xor
mov
push
out
cmc
cmp
ret
push
rcrb
outsl
lahf
loop
jmp
dec
xorb
inc
fisubrl
push
xor
inc
imul
mov
jle
stos
xchg
shlb
jo
call
imul
arpl
cmp
rcrb
cli
and
mov
adc
sub
in
imul
mov
cwtl
or
jno
xchg
mov
add
mov
adc
jo
lea
add
jp
mov
ss
outsb
jne
mov
cltd
out
movsb
jae
mov
leave
aam
xchg
insb
jle
ds
push
outsl
shrl
jne
adcl
fwait
movsl
push
iret
icebp
pop
test
dec
repnz
add
rorb
jb
xchg
je
imul
mov
xchg
cmp
out
and
jae
in
push
xchg
daa
rcll
mov
test
push
dec
subb
mov
push
addr16
add
push
jbe
lock
stos
pop
cli
out
test
push
inc
into
adc
sub
fmul
out
std
push
sub
dec
push
jmp
push
sub
lret
mov
xchg
insl
sbb
jge
xor
loopne
push
iret
cld
adc
cld
fldt
cmc
in
shlb
cltd
loopne
repnz
mov
mov
adc
mov
rolb
out
aaa
out
fsubl
sbb
add
xchg
cli
dec
push
popf
cmpsl
cwtl
sbb
mov
andl
xor
arpl
stc
inc
pop
mov
test
add
add
push
leave
repz
dec
idivb
or
int3
addr16
lods
push
sti
cltd
loope
popa
and
mov
mov
inc
test
int
lea
xor
jl
add
cmpsb
cltd
ds
and
or
dec
mov
lds
outsb
jmp
and
pop
hlt
sbb
adc
ret
ficoml
std
dec
pop
xor
sti
mov
xor
loop
and
rcll
adc
stc
xlat
loopne
in
mov
inc
leave
and
popf
sub
mov
inc
sub
fcoml
test
xchg
pop
mov
add
mov
cmpsl
sti
scas
mov
int3
cmpsl
pop
imul
orl
out
inc
jbe
xchg
sbb
shll
jmp
fsubs
push
push
dec
sub
push
lods
jecxz
dec
rcll
in
lret
stos
dec
mov
scas
jbe
push
cmp
adc
inc
data16
notb
adcl
jg
dec
shrd
add
adc
inc
mov
icebp
sbb
fstp
mov
out
dec
lds
mov
push
sbb
cmp
in
jns
dec
add
add
push
mov
dec
repz
popa
sbb
cmp
xchg
shlb
mov
jle
pop
in
cmp
jg
cmp
inc
sbbl
les
ss
push
dec
jo
dec
flds
add
gs
ljmp
mov
lods
insb
popa
xchg
fsts
push
orb
xor
xor
js
add
xchg
test
shrb
scas
dec
mov
inc
icebp
ds
addb
je
mov
pop
test
ret
ret
pushl
outsb
rorl
sarb
mov
adc
lahf
inc
lds
mov
rorb
stc
add
bound
fiaddl
cmp
push
or
std
sub
pushf
cs
rcll
ss
xchg
push
lea
sub
scas
jl
push
sub
push
push
ds
popf
lea
mov
sub
jns
shr
cmp
fldl
mov
sbb
leave
adc
jb
sub
jecxz
frstor
ljmp
insl
mov
inc
xchg
xchg
out
in
jne
push
cmpsl
loope
icebp
cmp
jecxz
xlat
into
lret
sub
mov
cli
adc
mov
xor
mov
jecxz
lods
mov
push
inc
xchg
pop
adc
iret
outsb
pop
out
lret
inc
or
icebp
ret
daa
shlb
fmull
dec
repz
insl
or
iret
scas
adc
in
fildl
fwait
aaa
aam
shll
pop
inc
addl
dec
outsb
adc
cmp
xchg
loopne
mov
xor
pushf
cmp
inc
cltd
adc
popf
or
sbb
repnz
shlb
pusha
scas
loopne
aam
shrb
jmp
sub
adc
cmp
repz
cwtl
lods
push
addb
inc
and
cwtl
fists
jp
jge
xor
lret
push
mov
enter
sarl
cmpsb
add
push
nop
mov
adc
mov
fidivs
mov
outsb
div
sbbl
outsb
fs
pop
or
mov
sub
sbb
mov
pop
fdivrs
enter
push
add
dec
dec
and
ja
popf
push
subb
mov
xchg
push
loopne
dec
sub
push
or
cmp
dec
pop
pop
push
adc
sarb
arpl
push
pandn
cwtl
insb
std
sahf
jb
adc
icebp
and
push
pop
int
out
xor
or
in
daa
mov
pop
push
mov
int
fwait
daa
mov
pop
in
jbe
push
sub
cmp
insb
andl
hlt
lret
pop
imul
out
jns
shr
std
aam
xchg
mov
test
test
aam
mov
push
cmc
ss
shr
dec
movsl
xor
movsl
aaa
mov
sahf
mov
cmc
addr16
icebp
mov
add
push
xchg
cmpsl
sbb
jmp
subb
lds
mov
iret
addr16
pusha
cmc
das
jp
xor
dec
popf
xor
mov
std
lret
inc
out
mov
sti
loopne
faddl
sub
mov
push
ret
jns
fildll
mov
xchg
dec
lcall
lret
xchg
push
fwait
fwait
inc
sbb
dec
xor
mov
fidivrl
mov
lea
and
in
popa
xor
out
test
data16
push
test
mov
in
xchg
xchg
cmc
arpl
loop
push
das
dec
and
lds
out
inc
pop
dec
in
mov
adc
sti
xchg
inc
mov
xchg
out
jecxz
fcomip
mull
dec
sub
addb
scas
clc
push
fcomip
or
rclb
adc
cmpsl
or
cmp
xor
out
push
scas
and
pop
xchg
nop
mov
mov
loope
adc
sub
lds
loopne
lods
into
clc
ds
jg
out
mov
add
pop
in
out
cmp
push
jge
mov
jle
jg
sub
inc
pop
dec
arpl
inc
out
xorb
cmc
repnz
and
ret
in
out
xor
lcall
rcrl
setne
ret
jl
sub
gs
mov
iret
out
scas
lret
pop
aas
mov
pop
repnz
shl
pop
mov
jns
jbe
inc
jnp
cli
rol
dec
inc
sub
mov
out
xchg
mov
xchg
addr16
stc
imul
cwtl
xchg
inc
jl
aam
ja
mov
and
push
andb
inc
push
jae
cmp
sti
aaa
sbb
js
and
jle
jmp
and
lods
add
xchg
mov
pushf
mov
adc
loope
push
xor
rcr
xchg
mov
jecxz
insl
or
aad
lahf
daa
inc
push
add
divl
mov
data16
dec
sbb
bound
leave
jl
iret
inc
lcall
or
mov
stos
jne
xor
add
fsubrs
rcrl
mov
ror
pop
inc
insb
inc
mov
dec
sub
iret
add
loop
and
xchg
push
and
pop
iret
jb
insl
pop
and
add
lahf
xchg
cmc
xchg
fwait
xlat
cmc
cmp
push
lods
cmpsl
in
pop
mov
movsb
mov
cmp
add
inc
cmp
cmc
dec
jbe
lret
dec
loop
xor
cmp
outsb
jmp
test
adc
jnp
hlt
dec
xchg
mov
sub
jns
jbe
jae
cmp
xor
outsb
enter
lds
inc
aam
cmp
in
bnd
cmp
cmpsl
jae
movsl
jge
mov
mov
sbb
jae
push
test
aas
mov
and
pop
sub
cmpsl
icebp
cltd
je
mov
push
pop
fnstcw
cmp
rcrb
ret
pop
sbb
repnz
xchg
sub
sub
pop
cmp
cwtl
lods
ja
dec
stc
xchg
xchg
jb
mov
inc
add
add
xor
xchg
cmpb
in
sub
int
lret
mov
ds
jl
fwait
arpl
adc
sub
sbb
mov
enter
dec
fwait
popa
sbb
aas
jbe
loop
and
mov
insb
mov
orb
pop
loopne
or
outsb
addr16
pop
fs
das
jne
and
outsb
inc
fbld
shr
dec
mov
inc
testl
and
adc
lret
fildl
andb
add
or
pusha
or
xchg
insb
cs
stos
addr16
and
lea
std
mov
aaa
inc
cmpsb
or
std
mov
adc
sub
stos
pushf
aad
mov
inc
loopne
in
nop
addr16
push
fs
xor
lret
test
push
call
sahf
movsl
test
sbb
inc
movsl
adc
sbb
add
mov
ja
mov
hlt
and
in
iret
dec
mulb
fdivrs
jbe
out
mov
mov
hlt
rcll
repnz
addr16
repnz
or
add
aam
xchg
out
mov
jecxz
mov
or
sbb
test
cmc
xchg
push
fiaddl
jns
outsl
ljmp
jge
sub
mov
push
out
dec
push
xor
dec
lahf
pop
cmp
addr16
leave
mov
aas
xchg
imul
adc
out
jae
pop
sub
insl
cld
dec
test
adc
enter
push
push
lcall
lret
mov
pop
in
mov
mov
leave
jb
inc
and
ljmp
jae
pop
push
adc
ret
jno
add
sub
sub
fidivl
or
int
jns
in
outsb
rcrb
cmp
lcall
mov
xorl
fwait
rolb
sbb
scas
and
mov
adc
lods
cltd
jbe
imul
mov
add
fdivl
lods
loope
add
leave
push
das
sub
pushf
pop
add
jecxz
xor
les
popf
cltd
sbb
pusha
and
or
fwait
add
pop
ss
movsl
mov
out
stc
aad
sbb
pop
jbe
adc
mov
jmp
scas
repz
xor
push
ja
scas
or
or
add
dec
sbb
xchg
test
jbe
loop
jb
mov
cld
cld
cmc
mov
or
add
or
xor
push
sbb
out
xchg
push
out
in
int
and
inc
cmp
mov
mov
add
xchg
mov
clc
into
out
fwait
lea
adc
and
mov
or
call
xorb
sarb
and
sub
jns
cmpsb
ss
xcrypt-cfb
cmpsl
and
outsl
leave
jne
fucomi
ja
lahf
xor
faddl
cwtl
mov
repz
fstpl
xchg
cld
aaa
in
sub
mov
and
lahf
lock
movsl
cmpsb
jge
mov
paddsw
fcmovnbe
inc
ja
pop
jge
scas
mov
fistl
popf
jg
pop
sub
sub
in
pop
lea
lret
push
aad
mov
int
push
sub
lret
xor
shl
pop
repz
andb
popf
stos
rclb
mov
sarl
bound
add
sub
icebp
out
xor
ret
popf
lods
dec
icebp
sub
mov
or
sub
dec
mov
andb
xor
mov
lret
fcmovne
bound
or
loope
ljmp
add
pop
mov
shlb
and
gs
mov
jbe
out
mov
andb
into
push
jg
cld
incl
sbb
stos
push
stos
adc
sbb
pop
int
sub
out
adc
xlat
test
adc
push
jb
aas
push
lods
dec
enter
es
mov
loope
pop
xchg
cli
outsb
nop
divl
mov
dec
sbb
mov
icebp
push
mov
scas
lahf
das
rcrl
data16
fdivrs
mov
aas
into
jg
ficoms
pop
add
push
cmp
xchg
in
pop
sti
and
dec
mov
test
mov
gs
jp
popf
rcr
jg
jmp
addr16
jle
js
mov
mov
cltd
jmp
push
fucomip
mov
xchg
cltd
rcrl
and
pop
sbb
int
dec
pop
add
cmp
lcall
nop
test
dec
jge
jbe
and
xlat
lret
test
dec
jmp
adc
mov
sbb
sbb
insl
sti
mov
push
mov
shlb
aaa
out
das
call
mov
mov
pushf
sbb
ret
push
dec
pop
inc
aaa
mov
add
jl
pop
mov
pop
mov
mov
jae
aas
inc
ss
jno
scas
loope
mov
lcall
mov
inc
mov
subl
fcomip
sarl
sub
scas
pop
or
push
scas
in
or
mov
cmp
cmpl
int
cmp
lea
ds
out
and
andb
loope
addl
lahf
sbb
pop
cmp
insl
pop
stos
or
addr16
sahf
gs
jae
cltd
cld
mov
cmp
nop
subb
hlt
test
cmpsb
popa
fildll
or
cmp
mov
dec
push
push
jmp
xor
fmull
xchg
test
aaa
das
fsub
pop
cmpsl
and
jae
sbb
cmpsb
xor
insl
enter
mov
jmp
adc
data16
icebp
push
int3
insb
jmp
push
inc
and
ss
xchg
inc
adcl
mov
les
mov
and
jo
add
jno
sbb
jno
mov
std
add
aaa
jmp
cltd
or
pop
pop
inc
pusha
push
sarb
fnsave
sbb
sub
push
pop
sbbl
sub
inc
gs
jb
pop
add
or
les
mov
and
mov
icebp
jno
cmp
rcr
inc
cmpsl
cmp
push
push
bound
es
jns
pop
push
jg
les
lock
push
xorl
stc
movsb
mov
jle
pop
lock
cmp
dec
jecxz
xor
mov
mov
push
jae
add
xchg
movsl
mov
mov
xlat
mov
pop
adc
add
fsubrs
and
and
sub
sarl
push
leave
jle
subl
pop
push
sub
pop
inc
pop
push
cmp
pop
cwtl
test
aaa
pop
sbb
stos
mov
cmp
or
int3
lods
pushf
mov
imul
outsl
lahf
outsl
lret
inc
mov
repnz
test
sbb
pop
and
out
and
cltd
insb
push
mov
mov
nop
outsl
divb
divl
sbb
mov
adc
std
lcall
repnz
nop
and
stos
daa
lret
pop
lcall
lahf
lods
xlat
adc
push
sbb
jmp
ret
cmp
push
or
inc
jae
test
mov
adc
fisubrl
xchg
lret
test
or
push
mov
adc
pusha
jno
fstpl
clc
call
outsl
xor
xchg
xlat
add
out
scas
inc
or
je
push
aam
data16
mov
xchg
sbb
aaa
mov
in
dec
flds
pop
mov
pop
dec
enter
test
mov
mov
sub
or
dec
mov
orb
inc
xchg
pop
lret
movsb
test
idiv
leave
hlt
pop
sahf
out
push
xor
stos
cmpsl
in
pop
or
inc
icebp
daa
dec
icebp
imul
sub
mov
cmp
clc
adc
sub
stos
out
mov
hlt
jecxz
cmc
aam
imul
dec
mov
push
adc
jns
push
pop
add
sahf
pop
rcl
mov
mov
jo
testb
outsb
bound
das
adc
ret
cwtl
sbb
and
xlat
push
outsl
cli
inc
loope
pop
js
sahf
sub
sub
dec
jb
stos
and
test
xchg
movsl
cmp
andb
sbb
jecxz
int3
call
adc
inc
test
sarl
and
mov
push
icebp
jnp
mov
dec
inc
cmp
hlt
xor
mov
scas
ds
sbb
sbb
lcall
jle
dec
and
ja
je
push
movsw
orl
cmc
fmuls
push
jl
jns
xor
xchg
lock
test
cmp
addb
fistpll
sbb
jmp
pop
or
add
add
jb
push
lcall
xchg
mov
or
ja
xor
mov
std
or
sbb
pop
pop
dec
sub
jecxz
sub
aas
sub
mov
icebp
pop
cmpsb
add
shlb
xchg
lret
dec
mov
jle
sar
jnp
rcrl
lret
dec
pop
push
cwtl
outsb
sti
ja
pmuludq
icebp
pusha
xor
xchg
sti
cmp
push
stos
mov
rorb
js
std
cmpsl
js
sub
in
cmp
stc
imul
dec
int
and
movsl
ja
jg
data16
pop
addr16
sahf
or
dec
push
jmp
fadds
sahf
sti
dec
rcrb
mov
cmc
push
int3
das
dec
shlb
xchg
mov
repz
lahf
roll
ror
or
out
jecxz
mov
cmpsb
pop
cmc
or
xchg
or
mov
cmp
mov
fs
test
sbb
lret
push
cltd
mov
jnp
sbb
cmp
ja
icebp
hlt
ficomps
sub
adc
jno
inc
jge
std
or
mov
inc
inc
or
iret
jnp
jb
jl
pop
jns
cld
es
out
push
adc
mov
xor
push
add
shrl
lds
mov
or
ss
cmp
out
lds
shlb
xchg
inc
icebp
leave
std
popa
mov
into
mov
pop
push
pop
shll
mov
pop
jmp
jns
jae
movsl
or
repnz
xor
in
enter
shll
rol
lret
and
jp
pop
push
sub
adc
movsl
dec
mov
add
daa
test
ja
add
jle
std
loop
jae
inc
adc
cmpsl
add
lahf
out
or
std
jne
adc
pop
push
hlt
sub
ljmp
aaa
pop
cmc
lea
lods
inc
mov
cld
pop
jno
scas
in
ret
adc
popa
pop
xor
adc
inc
mov
or
fistps
dec
cld
popf
sub
lcall
fsubr
mov
sbb
sub
hlt
stc
mov
push
rcrb
inc
lahf
mov
pop
pop
scas
mov
xchg
push
add
sbb
or
in
lret
in
pop
out
add
dec
test
cmc
movsb
add
inc
mov
mov
mov
das
mov
mov
pop
add
daa
cmpsl
jle
xchg
mov
sub
add
loopne
push
cld
stos
push
fisubs
sub
pop
fmulp
xor
aas
mov
xchg
inc
adc
jno
pop
and
dec
mov
cld
push
out
jl
mov
pop
mov
leave
jo
dec
adc
mov
adc
call
cmc
adc
das
pop
xchg
mov
lds
testb
cli
sub
adc
stos
pop
dec
push
and
push
lret
pop
mov
sbb
rcrl
outsb
lret
inc
data16
and
subb
pop
andnps
sbb
ret
lcall
outsl
mov
jl
jl
sbb
sbb
mov
mov
pop
shlb
mov
jb
xor
add
jae
inc
incb
mov
cs
add
imul
pop
repz
add
mov
rcll
pop
adc
mov
jge
inc
dec
mov
cmpsl
je
shlb
push
push
mov
insb
popf
test
lock
cwtl
xchg
rcrl
pushf
inc
ret
add
push
stc
lret
negl
aaa
test
out
mov
inc
pop
pop
jo
xchg
stos
jo
xchg
addl
cmpsb
iret
jae
fiaddl
mov
ds
jnp
jno,pn
loop
cwtl
adc
sbb
leave
nop
vpscatterdq
ret
mov
imul
pop
xor
rolb
shl
mov
and
ss
mov
int3
cmpsl
rcll
orl
add
leave
sub
mov
aad
cltd
fsubl
adc
test
into
repnz
xor
ljmp
xlat
mov
dec
sub
push
jns
test
mov
std
push
popa
stos
pusha
shl
nop
cmp
xchg
or
dec
mov
sub
xchg
xor
and
pop
fisubrl
stos
mov
sbb
lahf
or
xor
pop
adc
lock
arpl
stos
je
stos
push
pusha
jge
mov
leave
cmpl
mov
push
icebp
or
fwait
dec
fisttpl
ja
test
ss
xchg
xor
add
stos
dec
int
repz
lods
loopne
adcl
xor
inc
cpuid
and
in
test
out
or
push
lret
mov
inc
repnz
adc
inc
inc
fcoml
jb
pop
xorl
scas
test
addr16
sbb
aad
repz
in
lea
adc
xchg
xchg
jg
mov
mov
add
add
mov
add
imull
data16
mov
aad
ret
sub
movsb
or
mov
add
shll
sbb
into
push
push
or
std
pop
loope
lock
lods
decb
mov
out
xchg
rorl
rcr
pop
jnp
pop
mov
outsl
push
mov
sub
xor
xchg
cmp
xchg
add
add
iret
cwtl
jp
call
and
inc
cmpsl
test
lret
outsl
sub
jge
data16
lcall
mov
addl
iret
dec
imul
xchg
mov
and
pop
cmp
pop
xor
std
or
pop
inc
int3
push
pop
ds
decl
stos
shlb
out
adc
xor
xchg
ss
mov
in
fs
sbb
pop
in
lea
sub
xor
push
mov
sahf
cmp
sbb
mov
sbb
ss
inc
daa
push
jno
clc
add
sub
fisubrs
xor
xchg
stc
repz
in
aaa
scas
pop
fildl
ds
xchg
cmp
inc
pop
idivl
pop
jae
dec
push
push
aaa
sbb
in
sbb
adc
inc
loope
xor
xchg
pushf
push
pop
sbb
mov
mov
shll
sbb
les
int3
mov
out
inc
adcb
movsl
call
push
adc
jmp
mov
jp
in
mov
rcll
cmc
sub
inc
and
lds
jne
pop
xor
mov
lods
les
jae
inc
shr
insb
icebp
mov
adc
addl
mov
cmpsl
add
pop
xor
inc
add
fwait
jns,pt
pop
xchg
pop
call
push
inc
imul
dec
jns
cmp
imul
xchg
mov
movsb
les
mov
mov
xchg
push
jge
orb
and
movsb
out
and
out
jns
xchg
inc
pop
xchg
jp
sbb
int
es
fisubrl
mov
stos
or
cmp
push
popf
cld
dec
and
xor
cmpsl
imul
xor
mov
jmp
lods
mov
enter
sbb
stos
cmc
repz
roll
inc
cli
js
stc
mov
ss
inc
and
push
sub
lcall
sbb
jo
push
lcall
push
and
rcr
cmpsb
scas
ja
sti
xor
call
cs
repnz
out
scas
mov
stos
lock
xchg
test
sub
push
pop
insb
push
add
jge
leave
mov
shrb
icebp
sbb
fstpl
cwtl
pop
push
fadds
cmc
imul
dec
adc
or
jl
xchg
test
fildll
bnd
add
or
in
fwait
xor
roll
sti
and
xchg
lcall
stos
push
pop
adc
divb
cmc
xor
ror
adc
aad
xchg
movsl
cltd
xchg
cltd
js
xor
je
aas
cmpsb
xorb
xor
mov
enter
adc
lods
cmp
lahf
rol
rolb
xor
mov
or
mov
mov
adc
push
das
pop
hlt
fcoms
popl
adc
pop
mov
jmp
mov
call
aas
jae
imul
sbb
je
ljmp
and
popa
imul
aad
out
cmp
sub
inc
sub
aas
ss
pop
inc
out
inc
mov
mov
adc
add
sub
cmp
push
pop
inc
pushf
rolb
dec
mov
add
mov
lods
addr16
lret
das
mov
sub
gs
and
pop
mov
pop
dec
inc
ds
fdivrs
subb
loop
stos
xchg
outsl
stos
popa
adc
dec
xchg
jecxz
push
sbb
lcall
pusha
fisubs
pop
and
sbb
and
mov
mov
cmc
inc
iret
mov
push
dec
sub
arpl
data16
pop
add
jge
lret
mov
pop
shrb
int3
lds
xor
jnp
not
pop
sbb
fidivs
inc
std
pop
leave
loop
inc
shll
pop
mov
call
add
cs
je
andl
inc
test
add
lea
inc
xchg
dec
jo
dec
and
shrl
or
mov
jg
sub
xchg
add
in
cltd
iret
lcall
les
sarl
fnsave
cmp
inc
iret
lods
push
jae
addb
xor
cmp
outsl
jbe
insl
cmp
xor
pop
enter
inc
add
nop
popf
pop
dec
sub
xchg
sbb
cmp
into
mov
mov
push
add
pop
int3
sub
aad
sub
call
sti
ljmp
jle
lahf
add
arpl
inc
add
outsl
jge
lret
es
jp
adc
lahf
adc
adcl
inc
jo
sub
hlt
fidivrs
sarl
push
lock
dec
in
jp
sbb
ja
and
mov
fidivs
inc
mov
cli
repnz
iret
andl
aaa
push
arpl
mov
test
mov
outsb
imul
stos
adc
sbb
cmp
insl
jmp
dec
dec
repz
cltd
setae
sbb
jo
xchg
test
fcmove
fstpt
push
push
int
pop
loopne
and
mov
fistps
cmp
mov
cli
in
sbb
popf
push
mov
and
push
jae
cwtl
int3
push
fistl
rcll
icebp
mov
gs
insl
xor
lret
andb
pop
sbb
and
jl
push
xor
push
add
xlat
push
andb
test
aas
sub
mov
or
and
dec
mov
iret
push
mov
repz
cmp
rorl
es
mov
std
aad
mov
test
mov
inc
add
lret
fiadds
jg
mov
add
cmp
mov
mov
aam
xlat
inc
cld
lret
seto
lret
stc
mov
mov
clc
ss
jg
addb
inc
cmpsb
mov
cmp
sbb
mov
xor
rolb
xchg
pop
ret
pop
sbb
outsb
mov
inc
std
roll
fucomi
dec
xor
loope
push
inc
push
sbb
inc
popf
test
out
mov
mov
int
mull
adc
imul
repz
in
adc
icebp
popl
dec
adcl
sbb
adc
shll
adc
fisubl
jl
bound
lods
inc
push
test
pop
lods
fistl
fxtract
popf
add
aaa
push
and
jb
xor
push
push
out
dec
sub
cmpsb
into
stos
test
mov
mov
adc
scas
jecxz
icebp
sti
lock
cmp
jnp
push
aad
in
adc
dec
pop
mull
aad
cmc
imul
testl
fisubl
pop
xlat
cmp
mov
outsb
pop
and
daa
lcall
fsubrp
sub
sbb
mov
inc
loopne
out
cmpsb
xor
xchg
sbb
cltd
adcl
dec
xor
std
sub
test
push
and
fcoms
es
dec
lods
push
jnp
mov
div
stc
pop
adc
hlt
mov
adc
imul
nop
xchg
cld
add
jecxz
repz
mov
jl
inc
add
sub
cmp
jnp
push
xor
shl
cmp
and
pop
icebp
jns
fadds
sub
pop
fldt
cmp
rdrand
mov
mov
imul
mov
jecxz
test
cmp
push
lock
push
je
or
addl
cltd
mov
jnp
lahf
mov
or
push
cmp
pop
or
cli
std
add
xor
xchg
loopne
mov
cmp
push
push
mov
lahf
icebp
es
jnp
int
mov
test
repz
xchg
ret
or
repz
pop
xchg
mov
inc
mull
add
cld
outsb
cs
dec
bound
ljmp
jae
enter
jg
jae
data16
test
outsb
fs
test
xor
pushf
enter
ret
sti
sub
fwait
mov
lret
inc
sbb
stos
loope
pop
loopne
fstps
aam
lret
fcmovu
or
push
sahf
xchg
stos
sbb
jle
pop
lea
xor
xor
notb
sub
jne
xor
push
sub
cmpsl
cmovp
and
push
or
shl
jnp
push
mov
lahf
pop
pop
in
imul
out
xchg
popl
push
and
xchg
or
imulb
aam
jnp
pop
insb
dec
or
jbe
push
lret
push
jg
and
cs
jge
sarb
mov
mov
cmp
aas
pop
faddl
jns
int3
push
adc
mov
bound
cmpsb
hlt
pop
push
arpl
ds
inc
lret
scas
xchg
mov
ror
mov
gs
scas
aaa
xor
test
loope
lods
gs
cmp
fsubs
push
xchg
xor
jl
xchg
dec
push
jge
mov
loope
add
mov
fldl
mov
xchg
std
cmp
hlt
ja
lods
inc
pop
shl
mov
inc
fdivl
inc
push
mov
or
in
stos
pop
dec
mov
mov
sti
mov
add
sarl
ret
jg
roll
bnd
xchg
bound
lods
add
cmp
xor
xchg
sbb
rolb
in
xchg
mov
inc
in
xchg
and
xor
mov
mov
mov
scas
dec
pop
and
mov
sbb
mov
gs
mov
fs
xchg
loope
pop
mov
aam
dec
mov
push
nop
push
stos
xchg
sub
cmp
mov
dec
push
popf
into
std
inc
xchg
in
push
mov
fwait
push
sub
lahf
mov
outsb
adc
xchg
lcall
dec
cmc
cmpsb
aam
lds
xchg
push
mov
push
into
imul
xor
xor
ret
rcl
mov
test
cwtl
aam
lea
xchg
mov
mov
out
outsl
sbb
dec
jb
xchg
in
add
sbb
mov
cmpsl
std
mov
xchg
fwait
mov
ja
cld
outsb
xorb
push
les
stos
adc
add
jg
cmpsb
iret
cmp
pop
adc
sbb
pop
test
xor
mov
fildl
loopne
push
mov
loop
dec
nop
and
adc
lcall
adc
mov
shlb
loop,pn
xor
gs
jns
cmp
push
fcmovu
inc
cmp
inc
mov
pop
cs
cmp
jg
add
sub
ss
int
jae
fildll
inc
jae
jp,pn
lods
frstor
mov
push
fiaddl
sub
jl
gs
mov
ljmp
jmp
add
push
inc
in
and
int
mov
out
sbb
adc
sbb
sub
fcmove
lahf
inc
mov
test
push
mov
push
ror
fnstenv
inc
pusha
add
sti
mov
mov
leave
push
and
mov
dec
or
icebp
shl
test
xor
mov
cmp
push
push
fisubs
sub
cmp
jb
sub
rcr
mov
sbb
xor
pop
lahf
fwait
imul
fstpl
out
and
sbb
mov
outsb
rcrl
iret
pop
mov
stos
lds
xor
sbb
sbbl
imul
incb
ja
decl
cmpsl
test
dec
and
icebp
ljmp
sub
and
movsb
xchg
mov
mov
test
mov
dec
jle
iret
dec
fstps
mov
push
stc
sub
mov
in
icebp
pop
jl
incb
mov
pop
push
aad
cmp
scas
sub
adc
sbb
jge
mov
test
rolb
add
lock
daa
and
mov
fistpl
sbb
fmuls
inc
out
cmpsb
aaa
testb
dec
or
xlat
jg
or
pop
push
stos
jae
mov
jl
pusha
push
or
call
in
push
mov
cmp
sbb
into
es
push
loopne
inc
imul
push
fs
jmp
mov
pop
xlat
aas
cltd
aas
daa
jmp
mov
or
add
out
sub
cs
jbe
ja
pavgb
rcll
dec
std
in
jne
stos
lahf
and
pop
icebp
cmp
or
xor
pushf
aad
pusha
jne
mov
push
cltd
pop
cmp
cmpsl
lock
rorb
mov
dec
bound
jns
jg
mov
pop
pop
fs
ret
ret
ret
test
push
inc
inc
xchg
dec
nop
cld
insb
adc
push
mov
setb
fstpt
arpl
rorl
shll
mov
push
lds
ficompl
call
js
mov
ja
xor
stc
lock
and
lds
xor
ficompl
orb
sub
repnz
ja
outsl
add
out
jmp
jmp
rol
in
std
sbb
mov
out
cmp
nop
fsub
push
pop
xchg
rcll
adc
sub
dec
mov
mov
add
js
push
icebp
pop
ror
out
ret
cli
push
je
cmpsl
xor
inc
sbb
ret
push
shll
testl
and
mov
lods
mov
push
fistpll
movsb
xchg
sbb
insb
mov
scas
into
js
jecxz
imul
adc
addr16
mov
ficoms
pop
xlat
ljmp
cmc
nop
jp
xlat
mov
sub
mov
sahf
call
xchg
out
mov
adc
jae
stos
pop
lock
mov
ljmp
sbb
add
ret
movsb
sub
mov
ror
lahf
repz
add
mov
jl
das
dec
arpl
cwtl
push
enter
jle
sub
in
int
icebp
pusha
mov
mov
leave
divb
add
inc
inc
mov
dec
out
aaa
imul
or
adc
adc
inc
cmpl
out
xchg
adc
popa
daa
xlat
out
dec
out
jns
repz
add
cmc
cmp
movb
xchg
pop
push
add
xchg
or
aaa
sbb
dec
in
dec
iret
arpl
cld
pop
pop
pop
pop
rclb
ret
sbb
test
jge
arpl
loopne
js
int
jae
mov
fsubl
pop
cli
adc
lock
enter
adc
dec
pop
mov
push
pop
lods
in
ss
xor
lcall
imul
jp
pop
jp
lahf
cmpsb
or
push
bnd
mov
mov
adc
lret
mov
sbb
aas
inc
adc
mov
repnz
sbb
pop
xor
and
jnp
pop
stos
sahf
pop
mov
lcall
mov
push
mov
loope
add
fidivrl
push
xchg
sub
fldenv
and
or
out
jecxz
mov
push
mov
push
gs
fisttps
xchg
das
sub
mov
or
hlt
outsl
jge
dec
sub
int3
jge
rorl
pop
add
leave
leave
cli
rcrb
or
or
xor
test
and
xchg
xchg
mov
adc
insl
or
push
jmp
sti
xor
sbb
nop
cmpsl
enter
sbb
and
pop
mov
sub
out
jp
xor
jo
divl
pop
dec
jmp
xchg
outsb
arpl
lods
push
jne
dec
jecxz
xchg
idivb
lea
adc
sub
or
mov
pop
lds
stc
push
in
jecxz
pop
add
dec
sbb
scas
add
pop
out
fs
sarl
adc
pop
xor
je
leave
pop
inc
mov
enter
inc
sub
insb
inc
sub
push
ljmp
aad
fs
sub
and
mov
jmp
fcoml
jne
pop
push
mov
test
xchg
xchg
pop
in
das
add
mov
jne
sbb
enter
jge
inc
dec
mov
xor
adc
lcall
pop
pusha
jg
adc
daa
mov
jmp
outsb
lcall
xchg
push
mov
into
adc
scas
js
popf
int
jp
or
xor
mov
mov
lods
aas
or
outsl
push
pop
jo
test
cmp
adc
stos
cmp
pop
pop
sub
aam
jg
movsl
leave
aas
js
xchg
push
frstor
bound
adc
aam
scas
jb
es
add
mov
pop
outsl
ss
sub
cltd
pop
stc
xchg
mov
scas
sti
add
cmp
jecxz
outsl
mov
nop
in
xlat
xor
add
and
sbb
test
aas
sbb
fiadds
cmpsl
not
inc
cmp
int
sti
cmc
inc
fdivr
repz
jbe
cs
iret
lcall
inc
lods
xchg
fwait
out
insb
inc
push
ljmp
xor
nopl
mov
and
dec
push
testl
and
push
scas
dec
pop
sub
sub
add
sub
add
mov
inc
add
ficomps
and
testb
mov
sarb
ds
in
fisubrs
add
adc
test
icebp
jle
add
pop
mov
pop
inc
roll
dec
mov
in
xchg
xor
inc
fisubs
sbb
sub
mov
ficoms
out
cmp
ret
pop
xlat
lcall
aas
xor
inc
vmwrite
mov
ljmp
adc
mov
addr16
sti
mov
loop
mov
repnz
test
xor
and
stos
jp
fnstsw
jns
push
push
sahf
pop
imul
mov
or
mov
adc
xchg
out
dec
xor
xchg
je
out
cmp
jne
loope
mov
xchg
imul
sahf
aad
xchg
mov
adc
xorb
shll
sub
popf
iret
or
jnp
leave
call
or
lods
sub
push
dec
xor
mov
les
mov
xor
mov
mov
push
dec
push
push
mov
sbb
jge
sti
xor
pop
cmpsb
test
xor
mov
testb
cmc
nop
push
int
out
and
aam
out
int3
ret
aad
iret
mov
push
subb
push
into
outsl
xchg
or
outsl
into
shrl
mov
jecxz
mov
push
hlt
out
scas
lods
sub
clc
jmp
outsb
mov
dec
sub
dec
leave
jmp
push
pop
dec
nop
mov
out
mov
add
out
rolb
add
adc
stc
jo
push
inc
leave
push
and
mov
push
fcmovb
in
mov
and
jae
imul
and
push
pop
xlat
and
jo
adc
pop
xor
inc
rorl
xor
and
cmp
sti
inc
mov
jo
jecxz
sar
nop
mov
fnstsw
inc
jecxz
test
push
lea
mov
jno
rcrb
enter
inc
scas
push
lods
inc
mov
insb
xchg
mov
lret
sub
mov
xchg
addr16
in
or
mov
icebp
pop
nop
or
bound
rolb
in
jecxz
xor
jp
outsl
xor
nop
xor
xor
inc
test
clc
sbb
sub
ss
insl
pop
inc
imul
and
fstl
jns
xchg
add
dec
xor
cmp
push
imul
jg
jns
or
fists
icebp
divb
cli
iret
jo
xor
sub
js
bound
into
aam
sub
xchg
mov
ficomps
jl
mov
mov
mov
ret
cs
stos
and
xor
xor
push
movsb
out
and
and
bound
or
dec
pop
mov
or
pop
push
iret
sbb
mov
push
sbb
xor
out
jle
mov
sti
pop
int
push
ja
cld
mov
inc
sbb
dec
repz
and
imul
xlat
dec
adc
ret
arpl
in
add
mov
push
rcll
scas
mov
dec
movsl
stos
jo
adc
adc
and
sbb
mov
jle
jb
xchg
rcl
mov
vsqrtsd
xchg
xor
leave
jns
cmp
scas
inc
mov
and
rcrb
jnp
inc
xchg
loop
jl
jp
mov
lods
dec
add
mov
pop
lods
fadds
xchg
xlat
es
inc
fmul
dec
scas
mov
fnsave
jnp
ficoms
dec
xor
cmpsb
out
add
xor
mov
jmp
or
xor
push
adc
cli
sahf
aam
std
or
or
shll
test
mov
adc
push
shlb
pop
orl
xchg
or
cmp
xchg
addr16
adc
mov
nop
jne
mov
lret
testb
mov
cltd
into
xchg
sbb
and
xchg
pop
or
fdivrl
mov
adc
aas
loope
shlb
add
mov
out
fcompl
cmp
lcall
or
or
pusha
mov
adc
out
test
mov
pop
arpl
pop
adc
jg
lods
xchg
add
lock
pop
mov
negl
xor
xchg
mov
pop
add
cmp
mov
inc
mov
mov
dec
jge
arpl
pushf
sbb
push
push
sbb
imul
mov
clc
js
mov
rorl
push
in
and
jmp
sbb
jne
ss
rcrb
test
xor
outsl
and
xchg
pop
flds
fucomip
lret
pop
mov
xorb
mov
inc
ret
lods
jnp
xchg
cmp
pop
push
int3
adc
ss
xchg
inc
sbb
pop
mov
cmp
push
ljmp
or
xor
mov
stos
fsubp
lds
and
and
cmc
filds
xor
jmp
shll
mov
sarb
mov
lods
mov
cltd
mov
inc
sbb
push
cmp
cli
das
test
dec
jle
jp
dec
ret
jp
mov
jne
fstpt
push
bound
mov
jne
fistps
mov
cmpsb
and
mov
fsubr
jle
mov
and
clc
cld
loop
mov
xor
pop
insl
aaa
mov
push
test
push
and
pop
dec
dec
cmc
hlt
loopne
aad
shlb
xchg
inc
stc
js
or
xchg
jb
xorb
outsl
pop
fimull
or
lcall
mov
add
aaa
je
shll
gs
fisttpl
jno
xchg
nop
inc
xor
adcl
cmp
and
mov
pushf
cs
xchg
pop
mov
shrb
xchg
and
add
imul
jp
mov
aas
or
and
mulb
fsubrl
xchg
insb
sbb
sub
shrl
xor
call
push
cwtl
lret
aad
test
jno
sbb
jb
and
and
ret
popf
ret
push
std
cs
cmpsl
shll
ret
push
mov
mov
dec
jo
lret
lods
mov
sarl
and
push
sbb
and
push
xchg
xchg
gs
aas
rorb
mov
dec
sbb
pop
sub
mov
xchg
sub
push
inc
jns
in
das
push
mov
imul
ljmp
push
popf
push
inc
sbb
cwtl
cmp
lea
outsb
jmp
int3
in
inc
push
xchg
jge
xchg
sbb
cmp
mov
cld
mov
gs
mov
and
stos
dec
es
out
sahf
jge
xor
jb
push
daa
lahf
sub
cmpsl
jle
cld
call
ljmp
and
mov
adc
insl
mov
flds
pop
enter
test
add
popf
loope
jmp
inc
call
in
pop
andl
pop
sub
mov
lods
pop
jl
cmp
and
mov
push
pop
loop
dec
ss
in
or
mov
icebp
adc
adc
flds
push
lods
sub
inc
jg
jae
jne
jg
nop
xchg
mov
out
and
adc
cmp
rcll
sub
out
jecxz
scas
inc
insl
sub
dec
enter
jnp
mov
pop
inc
repz
adc
dec
int3
cmpsb
inc
loop
and
and
pop
adc
sbb
ret
fbld
out
xchg
leave
cld
xor
ffreep
in
les
pushf
out
out
and
loopne
fsts
sahf
lock
inc
movsb
sbb
daa
jns
cmp
mov
push
push
imul
sub
xor
movsl
cmp
mov
xchg
mov
sbb
pop
js
rclb
jbe
cwtl
add
mov
in
push
sub
or
mov
shll
aam
xchg
aam
insl
sahf
pusha
cli
inc
imul
sbb
cs
jbe
sub
and
out
data16
inc
aam
push
inc
push
lcall
xor
jnp
jbe
ret
in
inc
pop
xor
jg
aaa
mov
ss
mov
movsb
mov
or
dec
push
aam
xchg
push
sub
stos
inc
adc
dec
scas
and
sub
nop
mov
jae
xor
in
and
orl
bound
iret
mulb
scas
dec
push
les
in
and
inc
mov
pop
stos
in
cmc
and
jge
sbb
and
data16
loopne
mov
or
lods
mov
insl
sub
sub
mov
cmp
inc
lahf
jbe
cwtl
pop
sub
lock
insl
push
leave
lret
adc
lret
add
jecxz
push
push
push
fstpl
int3
in
push
jmp
ret
testl
sub
clc
nop
repnz
inc
hlt
cmc
pop
inc
in
push
push
or
dec
sub
fimull
or
dec
lahf
sbbb
or
inc
xchg
mov
test
nop
cmp
fstp
orb
xor
inc
into
inc
or
test
cmp
lds
out
cmpsb
cmp
sbb
xor
mov
mov
out
repnz
psrlw
mov
mov
test
outsl
mov
fidivrs
rcll
fcomp
shlw
rorb
jmp
push
sbb
out
mov
pop
pop
mov
sub
add
sub
mov
push
sub
ljmp
fldl
push
mov
add
jg
xor
popa
jp
xor
add
sub
pusha
subl
mov
imulb
sub
out
aas
cltd
ss
pusha
imul
call
inc
in
add
and
cld
pushf
pop
xchg
stos
loop
pushf
add
and
orl
add
outsl
filds
cmp
pop
mov
jnp
mov
jp
xchg
cmp
adc
fildll
xchg
and
xlat
in
data16
pop
mov
mov
aaa
jecxz
sub
xor
jnp
movsl
push
andb
es
std
mov
mov
push
test
repnz
xchg
push
cmc
dec
push
int
in
fisubs
add
enter
and
xor
xchg
adc
jno
mov
andb
fidivl
mov
dec
out
pushf
push
popa
dec
in
xchg
outsb
nop
das
add
and
push
inc
mov
std
lods
fsubr
bound
add
mov
mov
out
or
pop
adc
int
jmp
inc
es
repnz
out
test
repz
cmc
int
es
cli
cld
add
inc
mov
dec
sub
in
xlat
dec
cwtl
movsl
xlat
jno
test
stc
cmp
adc
inc
outsl
cmc
mov
adc
pop
aaa
out
cmpsl
daa
mov
adc
and
adc
lods
pop
and
nop
test
sti
push
je
in
and
push
outsl
gs
fcompl
xor
ret
popa
out
mov
stos
xchg
pop
mov
mov
xor
lcall
xor
ss
mov
fsubl
daa
or
das
pshufhw
and
int3
popf
xor
lcall
sbb
and
dec
out
adc
mov
scas
jnp
les
shlb
push
ds
shrb
aas
mov
push
push
push
popf
xchg
les
mov
nop
ljmp
cmp
imul
add
xor
add
dec
jbe
lret
jmp
in
ljmp
arpl
or
jno
lret
push
popf
arpl
ljmp
cs
sbb
mov
cmp
xchg
push
add
sub
xchg
xor
sbb
jecxz
bound
movsb
popa
mov
popa
scas
fcoms
daa
sub
cs
xor
testl
es
insl
cmpsl
mov
and
mov
sub
add
sub
lds
or
mov
sarb
pop
rorl
int3
xchg
push
xchg
sarl
fistpl
rorl
jg
xorl
ret
jmp
enter
lea
outsl
cmpsl
ljmp
in
sbb
push
xchg
lock
fcmovne
fsubl
or
or
insl
icebp
movsl
pushf
aam
pop
pusha
les
roll
jle
mov
lahf
mov
jb
xchg
lods
fisttps
dec
jnp
and
adc
lods
mov
cmpsb
cmp
push
sub
into
cmpsb
push
pop
jg
pop
jae
ja
insl
sahf
imul
add
jbe
add
movsl
pop
test
pop
subl
in
in
js
stos
out
or
cmp
addr16
imul
les
aas
mov
addl
repz
sub
mov
shr
movsl
fidivrl
push
adc
icebp
sbb
bound
cwtl
mov
add
jno
repz
xchg
jecxz
xor
push
xchg
daa
jmp
pusha
xor
ja
pushf
cmp
lock
int
jp
in
mov
mov
dec
adc
dec
insl
in
mov
sbb
hlt
js
xchg
lds
aam
or
push
ja
icebp
fisubrs
mov
push
jb
loop
stos
sbb
loope
sbb
sbb
pusha
into
sub
mov
mov
sub
adc
sub
inc
fsubl
adc
fcoms
pop
inc
or
dec
lock
mov
gs
and
aas
sbb
add
pop
push
jmp
pop
aam
mov
loop
jns
inc
xchg
inc
mov
pop
xchg
pop
in
movsl
fmuls
mov
out
mov
jae
int3
inc
movsl
ja
cmp
xor
xchg
cld
cmp
pop
inc
cmpb
jo
sbb
mov
pop
jecxz
stos
dec
adc
hlt
jecxz
in
shr
cmpsl
mov
les
pop
movlps
push
pushf
or
cli
sub
adc
popa
cld
bound
mov
sbb
xchg
inc
cmpsb
cmpsl
sbb
or
xchg
mov
ret
pop
sbb
lea
jno
mov
mov
insb
fs
xchg
push
lret
rdpmc
and
push
jne
mov
push
lds
ljmp
fucom
iret
js
daa
or
jp
or
ret
lea
jg
lock
inc
fiadds
shrb
out
inc
xor
ja
and
jle
sub
or
mov
std
inc
xor
movsl
xchg
arpl
scas
pop
inc
jns
mov
xor
lods
lcall
int3
pop
addr16
fnstenv
push
inc
or
sbb
nop
jnp
imul
cmpsb
stos
inc
test
pop
mov
xor
sahf
xchg
adc
gs
dec
inc
int
popa
push
inc
sub
iret
xor
popf
or
imulb
lods
push
pop
mov
sqrtps
popa
mov
mov
xchg
lahf
outsb
ret
jno
inc
scas
out
movsl
stos
xchg
cmp
ds
je
fmuls
scas
bound
pop
movsl
cwtl
adc
stc
addl
repz
and
sti
fbld
imul
push
adcl
insb
in
push
outsl
inc
mov
out
pop
jae
es
addr16
mov
dec
pop
sarl
pop
adc
add
or
repnz
lods
push
scas
and
pop
mov
push
test
lods
loopne
jge
or
sub
aam
int3
out
roll
stos
jb
es
mov
push
test
cmp
cmp
lret
cwtl
push
jns
mov
mov
push
fisttpll
pop
imul
das
cmpsb
xlat
hlt
fisubl
xchg
lcall
sub
mov
cmp
and
movsl
jp
js
dec
xor
mov
cli
jb
add
aaa
pop
imul
or
inc
add
sub
jecxz
mov
shlb
mov
cs
mov
movsb
enter
sub
dec
cmpsb
fists
dec
jmp
mov
cmp
pop
xchg
dec
in
adc
ror
outsl
rcl
jecxz
mov
inc
push
pusha
jmp
jnp
lock
and
xor
or
jno
fnstsw
xor
mov
mov
mov
inc
scas
pop
dec
inc
inc
inc
mov
inc
lret
decl
cwtl
sub
adc
inc
adc
sub
jp
add
xor
or
iret
sbb
hlt
mov
mov
sub
sbb
jge
mov
push
push
insb
lcall
xor
xor
lahf
push
mov
xor
popa
cmp
mov
adc
lret
pop
mov
dec
push
arpl
pop
push
mov
sub
rclb
int3
repz
add
inc
push
jecxz
adc
cmp
cmp
mov
ret
add
jbe
mov
sub
je
and
call
aas
cmp
push
pusha
or
test
or
or
insl
mov
xor
and
and
fstps
dec
jl
adc
nop
jb
ret
sbb
mov
cmp
ds
std
and
icebp
push
aaa
jg
mov
jl
xchg
sub
adc
in
fisttpl
cmc
xchg
or
mov
mov
push
stos
push
add
push
jmp
aam
xchg
jle
push
pop
loopne
aad
xchg
mov
mov
shl
mov
hlt
insl
xor
cmp
sti
mov
aam
add
mov
ret
insl
shrb
pop
sub
mov
mov
cmp
push
scas
pusha
or
repnz
movl
jle,pt
mov
push
xor
mov
xchg
mov
fwait
jns
jecxz
ja
test
jl
scas
sub
cmp
fiaddl
les
jge
mov
dec
jne
cmp
fldl
call
out
push
in
icebp
neg
int
or
push
test
sbb
je
pop
mov
fldt
adc
mov
pusha
mov
mov
cmp
fstpt
pushl
lock
dec
sbb
fisubs
xchg
mov
xor
mov
sub
mov
adc
cmpsl
loop
fadds
jno
push
push
adc
frstor
add
or
lock
stc
lods
lret
ja
jb
cmp
sub
subl
jb
test
insl
mov
es
lcall
aaa
cwtl
lods
gs
inc
dec
clc
fnsave
aaa
test
jb
les
add
fs
dec
cwtl
movsl
lahf
in
mov
test
xor
leave
cmp
or
sbb
pop
xor
adc
inc
jnp
lods
hlt
and
pop
xor
in
lods
inc
dec
fdivl
dec
cmpsb
push
inc
lahf
mov
shl
sbb
nop
pop
addr16
call
xchg
insl
pop
hlt
push
lea
loop
pop
shlb
pop
les
adcl
hlt
rorb
dec
orl
je
pop
repz
les
aad
push
mov
shr
ss
cltd
pop
mov
inc
in
loop
sub
stos
in
daa
sbb
pop
imul
mov
push
leave
ljmp
pop
call
jmp
push
rcll
and
add
or
cmpsb
ja
rclb
mov
leave
jmp
xchg
or
cld
outsl
jge
andb
dec
and
dec
out
ja
jb
mov
jo
in
sub
out
jmp
dec
and
jecxz
clc
dec
fdivrl
mov
and
enterw
dec
jmp
dec
mov
sti
movsl
inc
data16
repnz
imul
leave
int
pop
insl
mov
jne
or
and
mov
cmovne
aam
icebp
out
cltd
insl
das
xlat
ss
mul
xchg
fucom
adc
inc
iret
cld
push
add
add
dec
inc
xlat
add
out
js
inc
popf
iret
cmp
push
cltd
mov
cmpsb
and
test
mov
push
pop
out
fs
sub
jne
adc
fcomip
lahf
imul
cmp
xor
mov
cmc
pop
jae
mov
mov
jb
out
and
pop
mov
adc
and
pop
add
push
push
outsl
jp
lret
mov
adc
icebp
mov
jl
adc
pop
repnz
sub
sub
add
psubusw
pop
dec
popa
cmp
in
cmpsb
add
dec
adc
adcl
out
rorb
mov
int
stos
xor
fwait
mov
cs
fists
out
fisubl
lock
mov
mov
dec
mov
cld
push
jmp
xchg
pop
addr16
adc
lret
pop
cmp
clc
mov
mov
leave
repnz
scas
pop
sbb
cmp
ja
add
cs
cmp
filds
cmp
insb
movsb
and
lcall
sbbl
pop
jmp
mov
jp
xchg
mov
ss
outsl
cli
jnp
adc
sbb
adc
xor
sub
loopne
sti
clc
jae
cmp
jl
mov
cwtl
mov
in
cmp
jo
push
and
xchg
add
mov
push
push
fldcw
mov
fwait
cmp
xchg
jge
iret
or
mov
pop
daa
aam
sbb
add
jecxz
push
push
stos
dec
movsb
fbld
sbb
lods
fs
call
adc
ret
mov
inc
mov
and
ljmp
mov
sbb
outsb
nop
in
loop
and
das
add
inc
mov
adc
iret
rclb
out
mov
mov
enter
insl
xchg
mov
dec
int3
sahf
dec
sbb
lds
lea
or
inc
push
mov
packsswb
pop
jmp
in
mov
cltd
sub
mov
frstor
and
sbb
jmp
aad
lock
ljmp
sti
js
inc
loope
popa
lahf
adc
loop
dec
pop
inc
add
xchg
push
jb
adc
popa
cmp
scas
std
aas
xor
dec
xlat
dec
shl
sbb
test
lods
ret
das
aad
adc
cmp
ret
adc
testb
mov
xlat
mov
mov
mov
xor
xor
shll
loopne
movsb
mov
mov
or
sub
cltd
daa
push
fiadds
sbb
mov
addr16
sub
test
inc
ljmp
arpl
or
fsubrs
mov
mov
xor
gs
inc
fcmovb
mov
mov
inc
push
sub
and
dec
pcmpgtb
mov
ss
xchg
mov
sbb
jno
arpl
push
cmp
mov
sub
into
xlat
mov
and
push
je
les
xor
adc
test
das
cmp
cltd
mov
fcomps
aas
inc
and
xchg
lods
or
bound
cmp
fisttpl
pop
inc
dec
or
insb
and
mov
inc
adc
jmp
inc
mov
repnz
jns
adc
adc
scas
adc
imul
mov
mov
ret
pop
scas
dec
sub
repnz
inc
loope
mov
and
push
xchg
imul
scas
mov
mov
nop
pop
dec
lret
push
cmpsb
inc
fidivs
loope
jbe
lods
lods
mov
hlt
pop
fwait
xchg
ja
andl
push
testb
je
mov
das
cmp
push
cmp
sub
dec
mov
fcompl
jg
xorb
inc
xor
aas
xor
mov
pushf
clc
das
movb
pop
push
test
lods
add
push
xchg
mov
sub
stos
pop
xchg
push
pop
sub
mov
mov
mov
mov
xchg
adc
xchg
imul
and
add
push
sahf
je
ficoms
sbb
fwait
clc
fdivr
cmc
xor
dec
inc
jp
dec
add
dec
mov
jae
rcrb
mov
subl
mov
das
xchg
push
push
adc
push
into
lods
mov
loop
ret
sbb
out
mov
sub
icebp
push
icebp
cwtl
xchg
lcall
pop
cmp
ud2
jp
icebp
mov
jno
jb
sub
aad
pop
out
pop
insb
cli
inc
push
fcoml
fwait
cltd
outsb
faddl
mov
fldl
mov
arpl
jmp
out
dec
lock
out
sahf
daa
or
rorl
das
enter
fwait
xor
call
mov
fs
mov
jl
fists
mov
xor
or
movaps
lahf
mov
cmpsl
nop
xor
mov
or
stos
mov
xchg
sahf
push
or
shll
pop
test
jmp
mov
imul
sub
dec
dec
jmp
mov
inc
or
sbb
outsb
mov
or
daa
sar
xchg
xor
das
push
or
mov
stos
repnz
dec
ror
aaa
pop
fidivl
insl
mov
and
jmp
ret
ret
sub
push
xchg
inc
or
add
imul
pop
imul
movsl
fwait
jge
xor
adc
in
pop
in
in
dec
fcmovb
xchg
in
nop
xchg
aam
leave
inc
inc
mov
call
xchg
test
cmc
in
mov
js
fsubs
repnz
lds
iret
pop
movsb
mov
test
sub
arpl
jne
adc
ja
out
push
sub
insl
sbb
icebp
mov
add
sub
push
dec
movsl
cltd
cmp
mov
orl
sub
xchg
iret
movsb
ret
lods
aas
push
cmp
insb
mov
jb
std
outsl
imul
cmp
popa
xchg
jne
cmp
push
lds
adc
or
add
hlt
jns
pop
imul
mov
gs
scas
mov
or
add
add
mov
pop
mov
jnp
adc
stos
mov
xchg
jne
fsubrl
movsl
mov
loopne
loopne
addb
jp
xlat
push
aad
or
fsubl
or
daa
jnp
and
nop
or
fistpl
iret
dec
repz
aaa
lcall
mov
test
movsl
ret
lods
or
sub
cmp
mov
mov
sbb
fidivs
inc
jb
mov
xchg
lea
mov
testl
push
test
nop
adc
push
mov
mov
sti
pushf
or
mov
jp
push
stc
je
adc
pop
bts
xchg
mov
pusha
add
test
add
movsb
mov
popf
mov
roll
or
fwait
cmpsb
sahf
push
and
cmp
mov
popf
popf
out
cmp
roll
lods
stos
sbb
leave
add
mov
stc
pusha
sub
int3
adc
jns
cmpsl
stos
or
lock
xor
aas
sahf
dec
aad
and
mov
cmp
and
mov
dec
es
into
imul
mov
in
jg
cmpsb
fwait
adc
mov
mov
out
hlt
pop
or
or
leave
cmp
pop
adcb
jns
pop
fmulp
sbb
pop
or
dec
fcmovne
dec
pop
stc
ljmp
insl
mov
imul
push
scas
pop
sub
jno
jae
mov
in
sbb
cmp
mov
aas
xchg
mov
dec
rcrb
int3
pop
call
adc
ficoml
xor
mov
and
mov
add
repz
mov
mov
sub
pop
popf
xor
jecxz
mov
dec
decb
movsb
jp
test
cs
fstl
test
cmp
es
xchg
dec
clc
lcall
jo
sub
adc
xchg
push
inc
insb
int3
mov
fsts
cli
mov
mov
cld
jnp
adc
jle
pop
fadds
pop
shl
sti
aam
loope
dec
mov
adc
push
subl
push
fmull
fs
psubw
loop
sub
ret
test
pop
sub
push
sub
sti
fstl
push
fdivl
fidivs
cmpsl
xchg
aad
adcb
popf
aad
int
scas
stc
lcall
xchg
mov
or
cmp
or
lss
jns
jmp
lahf
or
xchg
jg
xchg
mov
enter
dec
cli
icebp
hlt
loopne
and
andl
lds
test
cmp
jae
jno
inc
jbe
pop
xchg
sti
add
jmp
test
enter
push
jno
xchg
xchg
jecxz
mov
sti
jno
pop
call
popf
mov
les
jne
inc
mov
push
cmp
popf
out
xor
aaa
sbb
cmpsb
pop
insl
adc
rorb
in
adc
lea
jle
pop
ss
jl
sub
xor
mov
test
and
inc
cmp
ret
ljmpw
fsubs
pop
mov
std
push
ret
loopne
cwtl
sbb
or
push
cmp
fdiv
mulb
push
daa
in
pop
ret
xor
loope
aas
add
aad
dec
push
test
pop
cmp
aas
dec
mov
arpl
add
mov
jae
ss
push
and
pop
jp
or
jmp
mov
shlb
and
and
std
std
inc
mov
xor
stos
test
pop
jge
add
mov
insl
cmp
or
scas
pusha
xchg
loopne
outsb
inc
outsb
mov
leave
testl
push
dec
or
daa
add
iret
out
mov
into
roll
jmp
movsl
push
mov
jno
mov
mov
imul
mov
lret
mov
xchg
and
mov
gs
aas
jecxz
jo
std
loopne
aam
ss
xchg
jae
jecxz
mov
cwtl
outsl
sahf
dec
mov
lods
mov
dec
or
xchg
movsb
mov
cld
and
cld
enter
div
test
int
aas
rcl
mov
bound
sbb
mov
fisttpl
inc
lahf
sti
popa
ror
lahf
std
mov
decb
bound
insb
cmp
mov
test
pop
fdivs
sbb
nop
sbb
fidivrs
adc
xlat
fcoms
mov
push
addr16
fistl
xchg
push
sub
aas
cli
cwtl
cwtl
sbb
adc
inc
arpl
cmp
test
push
outsb
xchg
xchg
push
daa
pop
imul
and
mov
int
cmp
aam
mov
mov
movsl
movsl
popa
pusha
jb
adc
scas
mov
add
push
cmp
and
dec
cmc
push
cmp
sub
repz
push
xchg
ficompl
ficoms
xchg
sub
pop
out
add
lds
sub
cld
and
adc
jb
inc
push
inc
in
inc
sub
fidivrl
push
adc
mov
gs
mov
dec
je
mov
jle
cmp
dec
rcl
inc
xchg
adc
js
pop
pop
xor
mov
inc
cmpsb
icebp
pop
mov
mov
add
sub
mov
xor
pop
pushf
cmp
mov
out
cltd
pushf
jge
fists
jmp
adc
rolb
pop
out
mov
mov
lcall
jg
push
inc
pop
push
lret
sub
loop
or
loop
test
push
mov
mov
pop
pusha
xchg
xchg
jnp
mov
out
ret
cmp
push
dec
sbb
aaa
sahf
mov
je
cmp
adc
xchg
push
stc
and
iret
sub
xchg
imul
rcrl
dec
lret
xchg
mov
mov
mov
ljmp
cmp
cltd
jg
imul
mov
or
xchg
cmp
stc
cltd
stos
fwait
xchg
lret
xchg
ficompl
fldl
sbb
adcb
in
or
aaa
xchg
sti
lcall
sarl
jne
or
fbstp
dec
insl
push
aad
sbb
xlat
sbb
in
cmp
mov
and
push
inc
in
cld
mov
je
scas
dec
add
imul
adc
inc
push
nop
sub
jle
stc
pop
jbe
out
mov
sbb
sub
adc
pushf
stc
cmp
pop
jnp
lods
int
push
incl
jecxz
leave
inc
cmpsb
or
aas
stc
bound
aad
out
sahf
pop
xor
fs
fdivrl
jmp
xor
int3
cltd
cmp
into
inc
mov
or
js
mov
mov
ret
aaa
ljmp
iret
in
out
mov
std
out
pop
lods
mov
mov
shr
mov
cltd
imul
mov
scas
cwtl
js
fucom
test
or
mov
sub
lahf
mov
clc
leave
ret
xchg
dec
scas
adc
xlat
adc
mov
push
js
mov
ds
sub
xor
cmpsb
push
movsb
inc
test
test
jnp
jp
push
in
cld
inc
jns
or
test
pop
shll
ret
jge
negl
sahf
sub
jle
mov
and
jne
ja
loop
mov
sub
xchg
sbb
xchg
fidivs
jmp
rcr
cmpsb
inc
fwait
push
mov
fwait
dec
fldcw
mov
test
and
das
cmp
test
outsb
adc
mov
test
nopl
int3
adc
and
jne
xchg
addr16
sahf
in
push
test
xchg
fnstsw
cwtl
call
insb
stos
incb
not
cmp
push
jae
cmp
mov
dec
in
lahf
mov
test
int3
jns
push
hlt
fistl
cs
jmp
das
loopne
fcmovu
in
movsl
es
inc
je
mov
add
or
inc
xchg
ljmp
int
ficompl
out
andl
aas
movsb
jno
sti
sti
or
inc
test
ficomps
lcall
icebp
cmp
cmp
stc
into
in
add
testb
das
in
push
push
jecxz
xchg
pop
sub
aaa
pop
jae
aam
xchg
je
out
shrb
mov
jae
popa
stos
hlt
ret
add
in
and
repz
sbb
and
movsb
inc
or
lret
dec
and
lock
out
mov
in
and
push
jg
popf
fs
add
insl
sbb
jne
mov
jo
xlat
jbe
repnz
jno
pop
js
push
adc
loope
adc
aaa
and
jno
xchg
aas
add
adc
lods
cmp
xchg
adc
mov
arpl
mov
mov
pop
in
sbb
jne
shrl
rcrb
pop
lret
add
lahf
and
and
call
call
lock
mov
sub
call
adc
movsb
xchg
xorl
int3
int3
push
inc
into
xor
andl
push
jecxz
fdivl
aaa
cs
mov
js
cmp
int3
mov
mov
lcall
pop
sbb
ss
push
fs
pop
sarl
pop
sub
jl
xor
adc
das
cltd
loop
mov
xor
and
cmp
xchg
shl
test
cmp
pop
adc
jecxz
or
jle
fs
jnp
incl
jecxz
fnstcw
add
ret
add
pop
lret
dec
adc
neg
mov
inc
out
mov
mov
mov
lock
mov
je
add
mov
and
call
je
ljmp
iretw
dec
movhps
push
push
das
push
jecxz
xchg
stos
add
dec
cmp
fiadds
outsb
movsb
push
mov
je
outsb
call
push
loopne
sub
mov
dec
dec
movsb
rcll
adc
inc
or
mov
lcall
repnz
mov
lods
xlat
clc
xor
shll
push
fmull
ss
shl
mov
dec
pushw
ret
rorb
or
jns
pop
xor
imul
les
in
leave
lcall
jmp
cltd
insb
outsb
loopne
cs
jbe
mov
pop
les
cmp
push
jno
out
sub
dec
fidivrs
scas
movsl
fdivrl
cld
cmp
xchg
cmp
xlat
jns
aaa
xchg
cmp
mov
adc
push
mov
enter
xor
jno
push
loope
rcll
movsb
int
insb
lcall
cwtl
lret
mov
jmp
js
test
imul
jg
add
jp
mov
inc
sbb
dec
adc
shrb
frstor
mov
nop
push
mov
int
and
mov
icebp
cmpsb
mov
xchg
fcompl
lds
mov
cmp
push
bound
inc
xor
lock
cmp
dec
pop
or
cmpsl
sbbl
in
iret
jmp
pop
sbb
xchg
cmpsl
call
and
repz
ret
add
xor
into
xor
jnp
sub
pop
xchg
adc
inc
aam
push
ss
ficoml
xor
add
incb
jb
pop
sbb
push
nop
xor
jno
and
and
popa
insl
jns
add
jl
mov
cld
aaa
lock
mov
push
imul
xor
mov
cmc
gs
and
cmp
sarl
or
xor
aaa
lret
daa
lods
lret
cld
pop
repnz
pusha
xor
inc
xchg
clc
push
ret
xchg
mov
lds
jl
push
lods
mov
fnop
loop
ss
or
loopne
clc
inc
push
out
test
subb
aaa
xor
sbbb
lahf
xor
pop
xchg
mov
and
xchg
push
lea
inc
and
xchg
push
xchg
jbe
fs
add
push
inc
mov
shlb
xor
or
push
jbe
xchg
dec
sub
fdivrs
cltd
add
push
sarl
mov
andl
mov
sbbb
jae
cltd
add
cmp
mov
repz
or
negl
jne
iret
sub
mov
je
fistl
testb
inc
adc
jnp
ljmp
repnz
add
mov
std
cwtl
xchg
sbb
jle
call
xor
lock
dec
fcomip
xlat
mov
mov
dec
push
dec
mov
lea
xchg
in
inc
jno
adc
add
movsl
xchg
pop
mov
lret
lret
xchg
sti
in
out
ret
rcrl
jnp
mov
addr16
outsb
push
cmp
jnp
fsubrl
in
pushf
cmpsb
sbb
movsb
inc
sbb
ljmp
int
mov
gs
add
push
push
flds
gs
loope
sub
fdivs
sbb
push
xchg
outsl
mov
dec
mov
push
leave
jp
ds
sub
mov
pop
sbb
jg
adc
ret
dec
add
and
mov
lahf
and
fstl
sbb
fidivrs
jb
aad
or
push
cli
xchg
mov
loop
aad
das
aam
cld
fwait
add
xor
cmp
cmp
fstl
ret
ret
orl
or
mov
fsubp
call
fs
inc
mov
lods
or
cwtl
ljmp
popf
pop
imul
push
mov
or
mov
or
pushf
popa
pop
mov
in
inc
jne
inc
int3
addr16
scas
fidivrl
scas
enter
je
fcompl
dec
pop
xchg
sbb
lret
or
pop
mov
or
inc
ljmp
mov
ret
stc
sahf
mov
cmp
orb
data16
scas
inc
pop
xchg
add
ret
hlt
fmuls
shl
mov
jg
pop
addr16
sbb
iret
stos
and
push
lock
shl
and
xor
mov
leave
xchg
xchg
mov
insb
lds
insl
xor
or
repz
xor
push
cmpsb
out
cmp
cmp
pop
mov
push
mov
mov
cmpsl
push
mov
xor
jnp
push
hlt
add
push
and
cmc
dec
dec
loopne
neg
and
arpl
test
and
insl
lock
repz
cmpsl
and
jecxz
jg
lea
jp
push
jmp
out
cltd
inc
and
cltd
sub
popa
push
les
push
fldenv
lret
fs
inc
or
or
pop
jns
mov
dec
ljmp
leave
inc
jnp
fisubl
loop
cmp
cwtl
push
xchg
jnp
jg
out
push
jno
shrl
cmpsb
out
cli
cmp
das
xor
mov
pushf
mov
mov
push
lds
pusha
ud1
stos
xor
roll
inc
push
outsb
push
test
mov
dec
movsl
rorb
data16
mov
enter
add
ret
jmp
push
testb
jp
jmp
iret
movsl
inc
add
ds
call
cmc
decb
xchg
dec
cmp
ret
mov
aad
inc
out
lahf
bound
mov
je
cmp
dec
mov
adc
push
cmp
xchg
arpl
adc
cli
and
push
in
cmp
mov
or
add
or
in
pop
inc
sub
cmp
fxch
xor
dec
sub
movsb
cltd
xchg
sbb
stc
addr16
dec
mov
and
fnstcw
nop
adc
dec
inc
and
mov
nop
xlat
in
loope
or
dec
mov
xchg
add
xor
and
mov
cmp
push
iret
xchg
jb
mov
jns
faddl
mov
repnz
icebp
insb
xor
ret
scas
fdivr
xchg
sub
in
inc
arpl
pop
add
repnz
xchg
stos
xchg
pop
add
or
rcrl
mov
mov
inc
inc
pop
outsl
loope
cmc
add
test
ficoml
test
or
sbb
shr
push
cmp
fadd
insl
in
imul
push
frstor
dec
cmp
jbe
push
adc
lock
xor
inc
ljmp
adc
ss
sub
xor
lds
hlt
rcl
and
in
mov
rcrb
sub
jb
mov
mov
lods
xor
add
or
adc
xor
loopne
in
cmpsb
loopne
dec
add
cmc
cltd
mov
sbb
int3
push
insl
prefetcht0
push
and
mov
jp
test
cli
dec
ret
movsb
mov
push
mov
sar
pop
ljmp
fadd
adc
cld
loope
mov
jl
mov
movsl
jp
sti
repz
out
and
pop
lahf
bound
andl
mov
and
ljmp
xchg
push
dec
iret
jns
lock
push
rcrl
xchg
outsb
lret
fisttpl
sbb
lods
or
sbb
mov
popa
jge
mov
fisubl
sub
jecxz
jp
movsb
pop
sub
xor
jo
ja
lods
push
add
mov
jmp
mul
adcl
movsl
shlb
js
nop
imul
popa
sbb
mov
ds
push
scas
adcl
ret
stos
aad
mov
inc
push
jne
xchg
adc
loope
sub
cmp
aad
repz
test
xor
and
scas
scas
mov
sub
or
cwtl
popf
pop
pop
adc
add
xor
outsb
sbb
in
inc
icebp
push
adc
push
sbb
pop
in
leave
out
pop
xchg
fistl
sbb
daa
les
xor
out
addr16
push
or
dec
ret
xchg
into
cmp
into
xchg
mov
push
mov
push
je
shr
int3
vpaddd
test
stc
sub
xor
mov
cmp
adc
aaa
rcl
lock
fdivp
test
cld
pop
add
push
mov
sub
lret
movb
cmp
mov
push
lods
ljmp
lret
mov
mov
movaps
mov
inc
subb
push
or
stos
and
mov
dec
loop
shrl
negb
leave
in
stos
push
stc
inc
rsqrtps
aad
jecxz
mov
adc
jmp
cld
sbb
jge
in
pop
or
in
mov
lods
test
into
sbbb
dec
inc
xor
fs
jo
ftst
mov
and
ret
mov
adc
mov
xor
frstor
inc
or
jp
mov
outsb
adc
stos
data16
imul
out
pop
xchg
or
cmp
add
mov
in
fucomp
mov
push
push
fstp
mov
mov
jne
push
shrl
xchg
call
dec
mov
ret
sbb
out
dec
xchg
mov
mov
xor
and
insl
rep
dec
xchg
cmpsb
scas
stc
mov
fstl
push
mov
fwait
ljmp
lock
stos
or
cmp
jnp
mov
and
bound
adc
cmp
lods
iret
imul
push
inc
cmovns
rol
sub
idivl
roll
xlat
bound
shll
aas
jmp
or
cli
ljmp
add
pushf
mov
pop
push
subb
jp
jbe
cmp
jmp
pushf
inc
sahf
pop
mov
popa
inc
lods
andb
push
adc
fwait
mov
test
push
mov
loopne
clc
testb
ss
fwait
inc
fwait
and
les
cmp
arpl
pop
sarb
test
aad
and
popa
mov
push
adc
inc
xor
pop
mov
sahf
enter
mov
bound
adc
lret
aad
mov
arpl
shl
add
inc
sub
shrb
sbb
mov
pop
lock
rol
xor
imul
cmp
das
xchg
push
xor
xor
arpl
insb
repnz
sbb
jecxz
or
cwtl
push
lea
xadd
mov
mov
mov
dec
mov
xchg
xchg
pop
push
repnz
dec
je
add
jne
cmpsl
rolb
cmc
or
rcrl
xor
mov
pushf
push
sub
mov
lahf
cltd
adc
mov
xchg
jg
pusha
inc
and
pop
and
mov
outsb
lret
lahf
cmp
inc
mov
lock
ss
sub
pop
daa
mov
or
push
push
scas
cmc
jmp
call
cmpsb
pop
and
imul
fisttpl
mov
ror
movsl
inc
mov
xor
jns
xor
mov
decb
clc
add
ret
das
push
mov
data16
test
repnz
add
dec
lahf
inc
xor
ja
xchg
or
pop
imul
repz
cmp
pusha
xor
shlb
ja
fmulp
add
or
sub
adc
pop
cwtl
pop
add
inc
cmp
aaa
push
sbb
pop
fisubrl
jo
xchg
test
data16
and
dec
mov
add
mov
sub
dec
dec
je
pushf
or
and
filds
data16
outsb
outsb
mov
jge
aad
rolb
inc
cmpsl
or
sbb
test
stos
dec
lods
popa
sbb
mov
jp
loope
jp
inc
bnd
push
imul
insb
xchg
loop
orl
add
jmp
inc
adc
adc
mov
xchg
mov
mov
add
lods
and
fiaddl
sbb
aaa
insb
jl
movsl
and
push
arpl
enter
xchg
std
add
aad
hlt
sub
push
out
loopne
push
data16
mov
sbb
je
jle
add
adc
mov
mov
xlat
in
call
push
sbbb
or
inc
cmc
push
inc
andb
ss
mov
xchg
pop
into
inc
inc
cmp
insl
add
aaa
xchg
fcmovbe
rclb
pop
dec
nop
mov
mov
mov
adc
sub
xchg
insb
pop
pushf
dec
mov
push
jmp
js
in
fwait
fisttpl
aam
mov
call
mov
push
test
mov
subl
mov
or
fidivrl
cltd
mov
fcoms
into
xchg
imul
xchg
sahf
insl
sbb
adc
xchg
jae
inc
fbstp
ljmp
lret
bswap
loope
xchg
adc
lahf
jle
sub
ljmp
sub
call
shl
sub
jge
mov
test
xchg
or
lahf
cmp
mov
sahf
divb
int
cmpsl
sti
jno
pop
mov
sbb
pusha
mov
shll
mov
stos
inc
ret
jle
add
test
add
mov
loope
push
cmp
gs
xchg
popf
cs
push
cmp
jecxz
sbb
mov
cltd
ja
shll
adc
cmp
dec
dec
sub
fidivs
insb
mov
adc
rorl
insb
out
cs
les
out
add
cltd
mov
mov
test
ds
xchg
pop
fcmovnb
movsb
lock
ja
jmp
add
mov
lock
ljmp
test
xchg
leave
lret
adc
xchg
cmp
lahf
jae
sub
aam
ret
mov
pop
daa
xlat
mov
fsubs
in
and
mov
sbb
movsb
adc
fadds
aaa
test
repnz
hlt
and
movsb
xchg
mov
rcrl
dec
cmp
sbb
rolb
or
arpl
daa
aaa
lcall
sub
out
ds
out
lods
xchg
jne
push
out
dec
inc
dec
fisttpll
xchg
ds
xchg
in
and
add
das
addl
popa
test
js
xchg
shlb
stos
dec
jmp
mov
push
fisttps
fldenv
cmpsl
dec
cmpsl
hlt
jnp
mov
repnz
add
aam
in
das
pusha
dec
pop
mov
iret
or
sarb
lcall
add
pop
inc
mov
or
jge
xor
mov
adc
xor
ret
push
pusha
push
pop
cmp
mov
test
imul
jns
mov
mov
mov
pop
out
ja
sbb
int
sahf
stc
popf
push
mov
aaa
xor
lods
shll
or
lock
mov
mov
sub
mov
stos
push
insb
in
xchg
jb
mov
ja
cmp
sarb
repnz
int3
sbb
sub
push
popf
jns
lret
or
inc
out
jne
fnsave
fwait
hlt
test
xchg
inc
mov
mov
lock
jge
jae
enter
jnp
push
cltd
popa
adc
mov
and
jns
ljmp
out
sbb
out
push
ret
sti
lods
pop
aam
stos
aaa
and
sub
adc
mov
adc
lahf
push
fwait
push
stos
add
and
add
mov
mov
inc
cmp
xchg
xchg
stos
inc
sar
daa
mov
xor
xchg
xchg
cmp
outsl
dec
sbb
mov
aas
movnti
cmpsb
mov
gs
add
enter
ret
cmp
lds
hlt
outsl
xchg
cld
dec
jle
inc
shlb
outsl
loope
push
and
fdivrl
enter
fwait
xor
int3
xor
enter
sub
movsl
iret
flds
sub
int3
xor
push
gs
daa
outsl
adc
and
or
mov
arpl
cmpsb
mov
mov
shrl
mov
push
idiv
cmp
jae
fnsetpm(287
pushf
stos
mov
inc
cmpsb
push
lahf
and
clc
ljmp
test
and
cmp
aaa
push
jno
push
ret
mov
mov
pusha
sti
add
repz
insb
jl
test
stc
mov
syscall
scas
loope
xchg
cwtl
mov
sbb
mov
inc
repnz
shl
lods
pop
or
sbb
addb
xor
int3
pop
push
bound
pushf
sbb
dec
and
mov
sub
dec
cmp
xlat
sub
mov
xchg
adc
popf
push
xchg
cmp
dec
sbb
dec
pop
sub
and
sbb
jns
notw
fcoms
mov
or
mov
adc
shlb
ja
xchg
std
xchg
push
inc
notl
cwtl
fcmovnbe
jb
loop
test
je
repnz
jae
scas
xchg
rolb
mov
subl
mov
stos
mov
adc
jecxz
push
jnp
out
push
add
xor
movsb
aam
add
rolb
fdiv
int3
popf
cmp
sbbb
cmpsb
jns
loop
frstor
divl
adc
mov
repnz
hlt
or
mov
aam
cli
jno
popa
aam
pop
xchg
lock
inc
pop
cli
jo
roll
mov
subb
xor
pusha
sub
dec
adc
adc
hlt
pushf
ja
mov
adc
inc
sub
mov
into
loop
arpl
scas
inc
in
es
inc
jp
sub
lret
push
sub
pop
ljmp
sbb
adc
pusha
stos
jb
negb
test
js
add
sub
jns
stos
aas
pop
iret
cmc
aam
dec
dec
jg
xchg
aam
push
cld
mov
cmpsl
cmpsb
mov
push
sub
repnz
push
pop
and
fistl
adc
jo
add
push
jae
lret
out
mul
repnz
lods
imul
push
mov
xor
insb
mov
ljmp
addr16
adc
mov
lret
sbb
test
xor
xchg
xacquire
cmp
sbbb
mov
mov
xor
pop
cmc
mov
jb
mov
inc
imul
xchg
out
mov
aam
hlt
fisttpll
cwtl
in
lods
lods
cmp
mov
out
aad
mov
push
jb
ja
shlb
jb
clc
shr
imul
mov
pop
rcl
cmp
test
sti
dec
jne
mov
pop
lods
dec
ret
aad
int3
sub
aad
push
nop
cmp
out
pop
ljmp
std
and
loopne
pop
inc
mov
cmp
sahf
add
lret
sahf
dec
adc
mov
mov
sbb
cs
stos
aam
inc
bound
xor
fsin
dec
stc
out
ja
aad
outsb
pop
dec
imull
fldenv
xchg
cmp
mov
push
jbe
mov
jb
sahf
loop
lret
xchg
cmp
fnstenv
push
shlb
mov
mov
fwait
dec
push
dec
adc
rorb
pop
sbb
pop
in
lods
outsl
mov
mov
in
cmpsl
popa
lahf
inc
mov
mov
outsb
mov
cmpsb
or
mov
pop
mov
popa
add
mov
mov
ss
notb
mov
mov
pop
es
cli
clc
arpl
adc
ja
push
fdivrl
into
mov
mov
xor
insl
imul
mov
or
pop
sbb
jmp
adc
push
dec
mov
leave
clc
push
pop
mov
jne
mov
repnz
test
push
popa
sbb
pop
fisttpl
mov
jns
xor
push
jnp
test
xchg
jge
jle
pop
xchg
mov
cmp
xlat
inc
mov
int
push
and
scas
jnp
cmpsb
adc
cli
rorb
jmp
add
hlt
testb
push
or
mov
in
movsl
pop
push
xor
sbb
std
test
mov
cwtl
test
pop
mov
dec
int
xchg
rcr
dec
or
inc
xchg
mov
orb
cmp
mov
jbe
nop
push
incl
sahf
fcompp
inc
jp,pt
jp
mov
sub
inc
jae
je
lods
inc
push
nop
inc
cld
pop
ret
add
popa
js
cmpb
sub
jmp
lea
mov
or
adc
xor
push
sbbb
push
and
ja
push
ljmp
dec
hlt
repnz
cmp
out
pop
cwtl
dec
push
sbb
movsb
cmp
sarl
mov
pop
aam
xor
dec
ret
aad
dec
repz
cltd
popa
mov
std
mov
dec
add
xchg
push
leave
jnp
leave
adc
sarl
jae
and
mov
push
add
into
mov
int
shlb
push
mov
cmc
xchg
je
add
fistpl
jnp
cmp
mov
cmpsl
jmp
inc
jecxz
lahf
shll
imul
pop
inc
pop
pop
nop
adc
sbb
dec
rcrb
scas
jg
ljmp
sbb
rcll
cmc
dec
pop
call
adc
sbb
mov
idivl
leave
fstpt
mov
xor
mov
push
sbb
xchg
inc
aad
shrl
in
cmp
rorb
cmc
or
add
sbb
fwait
inc
lret
fiadds
aam
ret
mov
add
push
mov
or
fs
sub
imul
mov
outsl
mov
mov
lods
mov
lret
loop
mov
add
mov
pop
inc
bound
xchg
adc
cmpsb
xor
dec
xchg
js
ret
fildll
out
test
cwtl
sar
out
xchg
push
and
adc
xor
fucomi
push
out
sbb
mov
shll
cmpsb
xlat
stos
jno
sub
push
outsl
mov
clc
and
cld
dec
pop
mov
and
and
fcmovnbe
popa
scas
mov
fimuls
adc
sub
cs
addb
jmp
pop
or
jmp
and
fstp
enter
div
das
rcll
mov
and
add
xor
stc
sarl
insb
cmp
inc
sarl
sbb
lds
mov
push
ljmp
cs
stc
sub
sahf
jne
fcmovu
imull
lock
leave
jno
je
xchg
add
cmpsl
inc
cmp
mov
loope
mov
imul
mov
inc
addr16
xchg
clc
into
mov
mov
fwait
lret
xchg
pop
in
pop
test
mov
cld
push
sub
push
lods
es
shrb
jle
xchg
neg
jb
adc
push
dec
xor
mov
push
or
mov
mov
mov
cmp
mov
push
fsub
lods
inc
pop
jp
scas
sbb
push
jb
faddl
aaa
js
test
sbb
stos
pop
cwtl
push
pop
stos
jb
add
jg
xchg
mov
mov
adc
push
outsb
mov
pop
cmc
testb
xchg
mov
pop
xchg
hlt
pop
sbb
sbb
jno
inc
inc
ss
adc
rcrl
add
xchg
xor
cmp
cmp
movsl
ja
xchg
and
cmpsl
sub
jns
popf
xchg
pop
push
pop
mov
adc
pop
cwtl
sbbl
mov
pop
or
pop
stos
cmp
js
push
xchg
sbb
leave
mov
mov
inc
sti
fistl
in
push
xchg
dec
fisubrl
inc
popa
in
add
mov
addr16
call
cmp
sub
sub
out
shll
adc
jmp
addb
pop
and
mov
inc
movsl
push
stc
out
rcrl
xchg
aad
pop
lods
sub
jo
pop
popa
gs
mov
decl
out
cwtl
cmp
add
cmpsl
pushl
repnz
inc
adc
jp
out
or
inc
out
les
ljmp
and
push
das
out
cmp
jo
sbb
sub
mov
pusha
mov
je
xchg
pop
stos
mov
jae
jns
mov
loop
push
nop
sbb
cmpsb
sahf
sub
xchg
aaa
sub
and
loopne
pop
push
scas
push
push
fst
sbb
sub
subl
outsb
inc
data16
xchg
mov
push
add
ljmp
push
pop
add
aas
lods
hlt
loopne
xchg
out
insb
lods
push
popa
andl
int
test
stos
inc
and
adc
push
mov
mov
xor
addr16
fisttps
and
or
adc
cltd
arpl
test
leave
cmpsl
pop
jo
push
jnp
or
shll
mov
fstpl
sahf
pop
shl
sti
fwait
pop
push
adc
mov
lret
mov
or
mov
lock
mov
jmp
xchg
loope
mov
popa
and
and
lods
xor
mov
std
sbb
dec
pop
gs
enter
mov
seta
and
lds
push
xor
dec
notb
dec
pop
lea
outsl
cmp
fildll
push
cmpsl
and
repnz
cmp
adc
or
je
insb
loopne
pop
clc
jge
rorl
jl
sbb
push
pxor
fistpl
mov
jb
imul
sahf
test
mov
pop
mov
ss
rcr
mov
test
cltd
push
push
sbb
add
mov
fwait
int3
lret
nop
sbb
ret
xlat
xchg
push
cli
cmp
jo
and
xor
fiaddl
xchg
add
and
xchg
inc
adc
and
stc
mov
rolb
aad
or
movsl
popa
movsl
and
pusha
cmpsl
loopne
mov
test
lds
fsubrl
sub
mov
test
push
cmp
cmc
jecxz
loop
mov
sbb
jp
jo
popa
decl
push
add
pop
in
xor
into
bound
cmpl
loopne
pop
test
loope
push
out
in
mov
popa
aad
xchg
je
mov
adcb
rcll
mov
dec
xor
jle
xor
mov
mov
test
rcr
mov
and
rorb
jmp
push
bound
pop
xor
je
clc
movsb
xor
xor
leave
sub
test
daa
pusha
aaa
push
push
in
pop
scas
jnp
xor
int3
pop
pop
ljmp
push
sub
cmp
push
jno
jns
dec
les
lds
mov
xor
inc
pop
sahf
pop
sti
pusha
inc
and
inc
pop
xor
aaa
fdivs
movl
sti
lods
arpl
push
xor
adc
push
ja
je,pt
mov
add
test
repnz
stos
xor
aad
mov
mov
lcall
sub
ret
jecxz
pop
bound
out
cmpsb
mov
in
dec
in
sbb
adc
xlat
cli
mov
push
pusha
into
and
in
and
cs
pop
idivb
jnp
inc
push
leave
icebp
sar
jbe
adc
scas
clc
jb
inc
adc
sbb
adc
inc
test
xchg
mov
mov
xchg
cmp
push
js
dec
hlt
jg
addl
mov
outsb
cmp
sub
adc
xor
dec
shl
in
mov
das
adc
pop
cmpl
add
fwait
pushf
pop
mov
xchg
mov
cmp
pop
xchg
cmp
pop
push
int3
loop
je
sub
cltd
push
fldl
aas
sub
cld
popa
xchg
mov
hlt
add
pusha
in
xchg
dec
dec
mov
cltd
repnz
lret
cmp
xor
sub
cld
fwait
dec
out
sbb
call
adc
popa
or
leave
pop
fidivrl
mov
cmpsl
scas
mov
mov
lret
sbb
dec
mov
mov
iret
mov
cld
addr16
and
jp,pt
pop
fisubrs
mov
popf
sbb
and
sbb
out
divb
arpl
and
xor
push
mov
and
jmp
jge
mov
push
push
dec
daa
xor
aam
sbb
fcmove
idivb
mov
inc
insl
cltd
jbe
pop
into
and
and
dec
lret
cld
jns
mov
mov
xchg
xchg
pop
jbe
mov
inc
cmp
add
and
mov
call
add
ja
mov
xchg
dec
cltd
mov
outsb
lahf
ss
clc
pop
mov
dec
movsb
jbe
pop
nop
push
imul
or
add
mov
inc
sahf
sahf
inc
lea
shlb
addr16
or
mov
lret
xchg
clc
shlb
inc
mov
lods
jo
cs
xchg
icebp
ja
fdiv
adc
dec
push
pop
add
dec
fnstenv
jns
ret
fwait
lock
pop
popa
mov
xchg
icebp
shrl
push
jbe
cmpsb
pop
rcll
pop
shr
shlb
jp
gs
xchg
mov
imul
dec
fucomip
data16
push
or
inc
rcr
icebp
inc
rolb
dec
test
pop
mov
es
mov
stos
mov
mov
movl
cmc
imul
sub
int
push
jmp
xor
dec
rorb
std
push
or
mov
add
add
int3
lahf
mov
sbb
mov
clc
add
sub
outsl
mov
or
cmc
xor
add
push
lea
loopne
loopne
addb
nop
fcoms
fistpll
dec
stc
jns
xlat
popf
jge
sub
aaa
notb
fwait
adcl
in
in
cmp
cmp
and
xchg
test
adc
inc
pop
js
xchg
cs
iret
mov
add
inc
cs
repnz
cmc
sbb
push
sbb
cmp
xchg
mov
adc
cmp
lahf
mov
jns
in
mov
xchg
imul
adc
mov
lret
add
pop
outsl
xchg
or
inc
sbb
je
out
test
arpl
cltd
mov
jmp
pop
sti
sbb
mov
lds
imul
rcl
jmp
adc
fwait
shll
inc
popa
mov
iret
pop
leave
pop
xchg
mov
dec
mov
sahf
pushf
adc
xchg
dec
fstpt
cld
rcrb
jg
mov
push
mov
adc
adc
mov
mov
xor
sti
sub
jae
xor
pop
or
subb
xchg
icebp
ret
pop
jg
mov
test
or
cmc
addr16
push
pop
subl
arpl
cld
fwait
cmp
inc
loopne
or
cwtl
xor
shll
pop
adc
mov
stos
pop
add
pushf
and
je
cbtw
loop
push
sbb
and
cmpb
mov
mov
fisubrs
outsl
test
data16
sbb
sbb
loope
fs
inc
add
mov
pop
push
xchg
add
call
bnd
cmpsl
lret
push
es
fs
inc
mov
imul
repz
and
jbe
mov
nop
jp
sub
loopne
xchg
imul
insl
roll
inc
je
inc
cs
and
ljmp
ljmp
fcmovnb
ljmp
imul
pop
data16
pop
imulb
jmp
cmpsb
inc
pop
or
push
in
es
les
push
lods
xchg
dec
shrl
mov
dec
cs
cmp
push
push
lds
mov
mov
pop
shlb
push
push
fs
jmp
mov
mov
bound
push
andb
rolb
jp
ja
inc
inc
cmpsb
cld
popf
in
or
sbb
or
or
dec
es
mov
add
cmp
push
cmp
rcll
jecxz
or
out
mov
cmpsl
push
push
pop
subb
pop
push
xchg
and
data16
xchg
mov
nop
inc
mov
xlat
mov
jle
fbld
ror
add
fdivr
and
sub
mov
jae
pop
mov
pusha
xorb
jb
mov
jl
int3
adc
imul
lods
test
lea
jnp,pn
sub
push
sbb
inc
fwait
mov
pop
dec
aas
or
pop
jnp
ficoml
cmp
into
lods
shll
stos
outsb
pop
mov
adc
sub
dec
mov
cmp
pop
sbb
push
popf
mov
sbb
or
pop
and
push
orb
ljmp
adc
jno
and
adc
mov
into
fisubrs
scas
xchg
inc
mov
insb
scas
int3
repz
cmp
dec
jecxz
or
mov
or
stos
sub
mov
and
adc
push
ja
insb
das
loop
movsb
sbb
sbb
aam
popf
scas
addr16
loopne
add
or
loopne
sbb
push
mov
xchg
sbb
adc
or
hlt
shl
ja
xor
in
dec
cmp
push
ds
or
stos
mov
jae
imul
mov
int
sbbb
mov
inc
cmpsb
xor
ret
jbe
add
adc
push
popf
subb
cmp
hlt
pop
add
mov
and
mov
loopne
fwait
popf
addr16
or
mov
shrl
pop
cmc
lret
mov
cltd
fstpl
push
sub
sbb
jg
xchg
test
pop
daa
mov
mov
shl
xor
mov
imul
test
jb
jae
imul
addr16
mov
jne
cmp
icebp
add
lods
mov
sub
loope
repnz
mov
add
adc
dec
jmp
imul
xchg
xlat
push
outsb
mov
enter
push
mov
mov
sbb
aam
rcrb
jp
pop
inc
dec
xchg
mov
pop
cmp
lods
out
mov
scas
call
cmp
sti
cmpsb
mov
int
mov
imul
outsl
or
fstpt
pop
ret
test
fmulp
mov
push
out
stos
adc
or
mov
decl
mov
mov
fwait
push
push
mov
sbb
std
xchg
inc
fdivrl
jb
negb
ja
push
fxch
pushf
and
and
cs
sub
fsubs
mov
xor
sbb
inc
test
sub
mov
mov
insb
dec
jl
js
and
je
divb
mov
out
mov
adc
ret
dec
pop
fcmove
mov
imulb
ret
sub
shl
lods
xor
pop
add
aam
add
pusha
je
inc
cpuid
mov
xchg
xlat
lcall
out
leave
push
test
dec
pop
push
xor
fbld
or
add
and
daa
push
dec
mov
iret
cmp
sbb
mov
lret
scas
add
pop
clc
dec
repz
pop
sbb
or
adc
jmp
push
push
bound
aaa
sbb
push
adc
adc
loope
xchg
outsb
or
addr16
push
adc
scas
mov
or
std
push
shll
pop
jp
or
mov
movsl
rcrb
mov
dec
pop
push
dec
adc
out
aas
jl
adc
outsl
out
loop
pop
jbe,pn
movsl
adc
add
xchg
clc
adc
add
and
ljmp
mov
and
xchg
mov
popf
xchg
out
jmp
int3
test
jmp
andl
in
test
mov
shl
jp
lea
or
cs
loopne
pusha
pop
cmpsb
jno
mov
ja
clc
dec
in
jns
ljmp
dec
xor
int3
cld
mov
mov
pop
popf
or
push
imul
adc
mov
int
sub
mov
mov
adc
xor
and
aas
adc
je
and
mov
cmpsl
test
fldcw
dec
fsubp
outsl
aas
mov
shr
inc
or
sub
mov
outsb
scas
outsb
enter
mov
xchg
inc
xchg
cmp
sbb
add
movsb
scas
repz
ds
lahf
xor
push
mov
sahf
out
sub
addr16
cmp
push
xor
cmpsl
in
sub
pushf
ss
insb
loope
mov
leave
or
je
movsl
testl
push
imull
jns
inc
adc
outsb
dec
fildll
add
push
mov
pop
pop
test
cmp
pop
fimuls
pop
inc
xor
push
sbb
dec
arpl
push
add
push
insl
std
jo
arpl
cmp
xchg
fs
cmp
ss
adc
popf
or
lods
mov
pop
xor
ficoml
dec
aas
add
jl
les
xchg
jmp
mov
dec
pop
flds
in
loop
cmp
jns
cmp
fcomp
dec
ret
jns
mov
lcall
mov
mov
mov
push
xchg
xor
mov
xor
clc
adc
xchg
push
aaa
lock
and
ja
repz
push
adc
mov
push
mov
es
inc
repz
imul
ret
nop
and
jecxz
push
mov
aas
ja
push
das
icebp
or
or
adcb
cmp
add
mov
xor
pop
ljmp
adcl
test
aas
push
cmpsl
mov
lods
sbbb
mov
out
push
and
and
ljmp
fs
sahf
or
movsl
pop
daa
pop
mov
fwait
pop
jg
enter
sbb
lret
aaa
mov
lds
adc
dec
fnstsw
cmpsb
mov
xchg
popa
pop
fcompl
sarl
cmp
fstpt
dec
pop
adc
xchg
mov
push
std
pop
mov
cmpsl
and
rolb
or
cmp
cltd
jns
mov
lods
jb
dec
mov
pushf
stos
movsb
inc
cmc
adc
out
jmp
bnd
add
bound
xlat
stos
pop
mov
call
mov
cmpsb
stc
out
sbb
dec
xor
jo
inc
arpl
dec
add
xchg
aam
jo
stos
dec
outsb
add
mov
mov
test
mov
nop
je
in
cld
jae
pop
xlat
inc
and
mov
addr16
popa
dec
add
cmpsl
in
pop
add
pop
mov
sahf
mov
sbb
pop
in
sub
xchg
lock
out
jmp
pop
lcall
xchg
pop
dec
pop
test
dec
out
aas
and
mov
repz
and
bound
push
sub
mov
repnz
jbe
sub
dec
mov
nop
xchg
imul
push
insl
and
adc
outsl
jmp
imul
sbb
rclb
add
or
xchg
mov
sbb
pop
jmp
sub
push
sub
movsb
outsb
mov
in
pop
cs
sti
scas
arpl
mov
dec
sub
cmpsb
stos
xchg
dec
push
dec
arpl
pop
and
xchg
xor
xchg
lcall
xchg
jle
add
pop
mov
shl
cmc
sbb
add
lods
loopne
inc
push
int
nop
das
xchg
jae
jne
rorb
sarb
cmc
jecxz
cmp
inc
aaa
jmp
mov
or
adc
scas
xor
xor
mov
lret
pop
jbe
mov
cmp
out
rorb
push
jle
mov
std
call
test
lahf
pop
js
and
testl
mov
daa
test
xchg
sti
xchg
scas
lahf
sbb
insl
cmp
mov
pop
cmc
dec
lods
jne
mov
pop
fmull
xchg
sbb
xor
mov
xor
testl
shl
or
scas
xor
pusha
into
cld
jle
mov
out
loopne
test
xor
cmp
and
in
out
sub
into
sbb
popa
adc
enter
adc
clc
cmc
lahf
in
sti
add
mov
jns
jo,pt
sbb
jae
jnp
pop
mov
mov
ss
dec
sti
mov
and
loopne
pop
sub
and
aad
push
jg
outsl
imul
xchg
bound
mov
and
outsl
sub
mov
jp
inc
inc
and
mov
mov
mov
or
sbb
lds
push
imulb
push
adc
xchg
gs
negb
dec
add
cs
mov
std
dec
mov
mov
jnp
inc
pop
xorb
xlat
sub
outsl
pop
fisttps
cmpsb
add
jmp
fldl
xor
pushf
lcall
push
push
or
addr16
adc
stc
cmpsb
fnstcw
mov
xchg
lcall
dec
das
arpl
sbb
mulb
loop
xor
dec
mov
sahf
fwait
arpl
mov
dec
nop
stc
jecxz
les
inc
loop
dec
xchg
dec
jne
cmp
mov
pop
jecxz
push
jge
mov
xchg
adc
lock
das
inc
imul
dec
in
popa
mov
push
add
xchg
xchg
sbb
imull
push
mov
out
xchg
push
stos
sbb
ret
mov
sbb
cltd
fldenv
push
mov
into
call
or
out
mov
das
insb
inc
or
lcall
xor
adcw
sbb
pop
mov
fwait
ret
imul
rcl
push
jno
rclb
mov
pushf
loopne
cmp
push
scas
sub
addr16
aaa
in
add
int3
push
stos
test
shll
int3
jo
adcb
or
xor
sub
jno
fwait
mov
xor
xchg
adc
pop
or
insl
cmp
xchg
jae
neg
enter
jnp
loop
and
mov
pushf
sbb
pop
lods
add
jp
popa
loopne
repnz
das
push
sbb
push
add
dec
push
in
xor
and
jnp
cmp
dec
sar
xchg
adc
in
in
fisttpl
ret
aas
js
out
icebp
pmulhuw
call
dec
pop
into
shll
ficompl
in
out
es
insb
lods
mov
push
sarl
out
jg
outsl
inc
cmp
cmp
xor
fwait
mov
cmp
xchg
mov
or
mulb
into
mov
xor
xchg
test
sub
and
inc
mov
jecxz
add
clc
or
cmp
ss
shll
jle
xchg
outsl
mov
loopne
lds
cltd
mov
sbb
flds
mov
addl
inc
mov
sbb
dec
mull
xchg
sarb
mov
jb
out
dec
out
scas
aas
movsl
jo
outsb
aam
pop
loop
ret
test
pop
insl
add
add
stos
xor
and
xchg
fisubl
sbb
xor
or
jbe
mov
insb
or
xchg
lock
aad
jp
mov
push
inc
call
push
stos
mov
popw
push
negb
scas
cmp
mov
out
adc
dec
fdiv
and
lock
cwtl
add
out
in
sub
call
mov
hlt
sub
push
push
imul
lcall
cld
adc
xchg
leave
pusha
gs
iret
jne
ret
push
sub
add
mov
data16
sub
pop
xchg
loop
aad
scas
pop
mov
mov
sbb
add
cmp
test
jmp
js
inc
mov
aaa
shl
out
fiaddl
andb
cmp
inc
jb
xchg
and
aaa
testb
sub
icebp
je
in
jge
ja
pusha
pushf
nop
jge
mov
paddusw
lret
loopne
loope
add
test
out
mov
mov
ucomiss
add
fwait
jl
xchg
inc
divl
out
and
xorl
and
sbb
inc
mov
je
sbbl
int
jae
lds
repnz
lods
and
dec
adc
pop
xchg
shrl
test
sub
inc
xchg
outsl
mul
mov
jb
iret
lods
je
push
sahf
mov
pop
jns
rorb
mov
xchg
lea
scas
jl
xchg
fistpll
sub
or
or
outsl
xchg
repnz
and
cwtl
into
popf
jo
dec
pop
xchg
pop
pop
fdivrs
cs
ss
xchg
add
sbb
fildll
sbb
sub
push
or
test
cld
rcrb
or
lods
and
push
cmp
jle
das
push
shrl
cmp
stos
jge
add
cwtl
mov
stos
inc
mov
cmpl
dec
nop
fisttps
inc
pop
cld
and
fcomp
xchg
push
loope
lret
das
jbe
andl
shl
sarl
in
pop
outsl
mov
add
xor
das
in
les
dec
int3
push
call
and
sub
shrl
rolb
dec
rorl
xchg
orl
xor
in
out
imul
cld
movsb
cli
mov
mov
loope
jb
jecxz
stos
xchg
push
hlt
pop
daa
xor
fwait
and
std
sbb
push
sub
mov
loop
dec
addr16
aaa
and
xor
das
push
rorb
mov
insl
or
stos
xorl
push
lods
dec
xchg
shlb
and
sbb
xor
adc
cmp
mov
pop
test
imul
ss
jo,pn
or
pop
pop
mov
pushf
mov
jae
xchg
ja
in
add
sbb
sub
mov
es
pop
or
xor
mov
cld
les
pop
in
popa
jb
inc
outsb
lds
mov
xchg
jb
mov
jno
insb
pusha
int
jmp
dec
jg
inc
jb
test
into
pop
or
jno
push
xchg
fldl
mov
jbe
jmp
popf
dec
cmpsb
ficoml
add
adc
jmp
pop
sarb
or
or
lods
xchg
sahf
jne
xchg
sub
push
and
sub
loope
mov
push
or
xor
fstpt
jb
imul
jnp
cmpsl
scas
repnz
test
mov
cmp
fisttps
fxtract
push
jno
out
jno
into
add
imul
xchg
cmp
stc
xchg
fbstp
call
push
sub
cmp
enter
add
hlt
into
and
mov
jae
outsb
lds
fwait
cs
subl
notl
mov
push
in
sbb
stos
adc
push
cmpsb
lret
push
xor
pop
incb
rolb
sbb
loop
push
out
ret
imul
jp
or
out
ljmp
into
bound
ljmp
es
jnp
rorl
or
mov
add
test
xorl
dec
pop
cmp
jne
fdivr
and
hlt
mov
xchg
cmp
andl
fldl
mov
sub
aas
pop
add
nop
or
cltd
inc
daa
repz
xor
adc
mov
push
in
mov
sti
mov
push
jge
pop
imul
repz
daa
mov
cmp
mov
ret
sbb
mov
dec
movsb
cmovno
scas
shrl
and
adc
dec
cmpsl
inc
movsb
mov
lock
push
dec
add
mov
fimull
cmpl
xchg
clc
mov
mov
pop
and
es
dec
lea
mov
push
pop
inc
add
pop
test
lret
jb
mov
fldl
push
cmc
testl
xchg
dec
mov
cmp
jae
sub
adc
sbb
xor
and
and
or
repnz
rorb
mov
rcrb
sbb
cld
popa
mov
cmp
inc
scas
mov
push
out
mov
sbbl
jmp
leave
outsl
mov
push
sbb
xchg
filds
cmp
outsl
in
fwait
in
pop
cmp
xchg
mov
cmc
mov
fidivs
xor
jbe
xchg
adcl
push
outsl
js
roll
lcall
xor
sahf
cmp
popa
rolb
or
xor
push
sub
ljmp
bound
nop
stc
arpl
int
and
cmp
ljmp
clc
cs
in
push
es
lret
pop
gs
cmpb
rdpmc
jl,pn
and
outsb
push
sbb
test
inc
fldl
in
xor
mov
mov
ror
test
outsb
repnz
in
ja
pop
icebp
aam
xchg
push
enter
sahf
mov
popa
call
pop
jns
mov
xchg
mov
leave
and
push
sti
xor
jb
xor
inc
xlat
dec
pop
rorb
or
sub
andl
cli
sub
or
mov
mov
mov
push
nop
insb
jge
ja
jge
pop
sub
ja
dec
cmp
les
and
adc
ljmp
jne
jmp
and
cs
adc
out
aam
cld
loop
xor
insl
bound
push
test
xor
movsl
fildll
repz
xchg
or
jae
and
sbb
jle
add
into
pushf
mov
sub
call
dec
pop
int
ja
outsb
push
ss
sbb
dec
mov
pop
in
mov
cmc
mov
int
rcrb
push
movsl
in
xor
test
jae
sbb
adc
enter
cmp
leave
inc
or
jmp
andb
cli
aad
adc
xchg
or
shrb
imul
mov
shrb
cmpsl
fildl
mov
sub
cmp
ret
movsl
mov
lret
inc
pop
mov
js
lahf
pop
cmp
mov
enter
mov
cmp
stos
or
ja
xchg
ljmp
leave
pop
nop
movsl
into
dec
into
mov
movsl
clc
mov
bound
push
ja
mov
mulb
adc
or
test
fst
add
cmp
scas
sub
or
and
or
dec
pop
int3
dec
arpl
shrb
iret
pop
jge
in
push
scas
sahf
sbb
aam
sbb
pop
clc
iret
xchg
mov
pop
jo
xchg
cmp
mov
hlt
add
pop
mov
cld
jmp
cmpsb
and
xor
adc
push
addr16
leave
adc
mov
push
sbb
mov
inc
fstpl
movsl
bound
pop
sub
shl
mov
mov
and
and
dec
idivl
pop
fwait
mov
adc
roll
mov
rorl
fmulp
mov
push
das
repnz
or
cmp
sub
movsl
cmp
rorb
push
and
mov
in
sub
mov
add
and
mov
pop
cmp
xchg
leave
inc
inc
inc
es
mov
sub
lret
cld
cmp
int
cli
adc
sahf
push
int
jbe
mov
std
dec
inc
roll
outsl
or
adc
xchg
mov
inc
je
mov
insl
test
mov
stos
xor
sub
sub
mov
pop
dec
addr16
pop
mov
or
movsl
lock
sub
or
or
pop
leave
cwtl
pushf
sahf
mov
insl
pop
idivl
fwait
sub
push
sbb
lds
add
or
sub
dec
sub
outsl
add
and
stos
add
ret
inc
jge
pushf
or
stos
jmp
stos
test
fdivp
add
fwait
add
into
shrb
mov
daa
or
mov
or
mov
xchg
mov
nop
sbb
dec
pop
cs
mov
cmpb
sbb
jge
jg
jns
ljmp
cmp
insl
jecxz
dec
stos
xchg
push
pop
mov
jb
imul
push
inc
leave
ss
or
int3
rcl
adc
mov
push
sub
jb
clc
inc
lods
mov
cmp
lods
sbb
out
inc
fsubp
mov
jp
sarb
pop
and
or
mov
pop
repz
std
cmp
pop
jb
dec
jne
xchg
test
cmc
pusha
fistpll
cmp
imull
stc
imul
stc
scas
sbb
gs
jo
outsl
mov
out
or
cltd
sbb
ss
mov
scas
add
out
pop
mov
movsb
jl
xchg
xchg
in
mov
movsb
push
pushf
mov
adc
stos
sub
push
jbe
les
mov
fimull
ret
outsl
test
inc
push
cmp
in
add
push
sti
sub
mov
inc
sarl
insb
mov
sbb
add
ss
mov
inc
outsl
pop
jns
shl
push
fildl
jbe
lret
push
hlt
mov
dec
ljmp
sub
test
and
mov
mov
add
movsl
aad
add
xorl
sbb
jmp
jnp
movsl
fstpt
int3
insb
push
ret
insb
xchg
mov
imul
into
xor
bound
repnz
push
sub
and
loop
mov
repnz
popl
xor
mov
lock
mov
xchg
stos
adc
in
mov
add
mov
push
fdivrp
jbe
mov
dec
or
xor
shr
sarl
sbb
out
cmp
mov
pop
push
shl
repnz
jns
or
jbe
out
sub
std
mov
pop
in
loopne
out
outsb
inc
nop
jb
sbb
push
dec
pop
fildll
xor
sub
mov
ja
in
pop
sahf
std
mov
std
sbb
lea
or
ret
mov
ja
lods
dec
and
dec
stos
xor
sbb
or
iret
into
fisttpll
aas
jnp
mov
inc
mov
and
adc
movsl
push
add
cs
xlat
xlat
imul
sbb
imul
push
mov
add
testb
xor
mov
fildll
push
bnd
clc
pop
pushl
mov
ror
movb
cwtl
sub
xor
mov
imul
push
sbb
dec
insb
and
cltd
pop
sbb
push
js
mov
and
sbb
cwtl
cmpsb
in
sti
jp
rcll
or
push
push
ds
mov
insl
push
jb
cmp
push
pop
test
cli
jl
xchg
pusha
push
mov
fwait
imul
jmp
push
arpl
out
shrl
mov
sbb
pop
stos
push
xchg
mov
dec
mov
push
movsl
cmp
std
fnstcw
jbe
in
mulb
loop
sub
inc
or
lods
xor
icebp
pop
mov
pushf
lahf
add
xor
pop
lds
jo
scas
sar
gs
inc
xor
into
and
adc
movsb
mov
mov
cmp
adc
xor
movsl
lods
lds
lods
push
rsm
call
bswap
xor
inc
ficomps
in
mov
push
int3
movsb
fisubs
xor
fistpl
xchg
rcrb
imul
outsl
shll
out
dec
dec
mov
ret
out
sub
pushf
arpl
mov
inc
push
mov
cmp
adc
setno
int3
notb
push
mov
call
xchg
lock
jbe
xchg
sbb
pop
mov
sub
jo
dec
jb
ret
mov
ljmp
dec
loope
outsb
sub
nop
test
add
mov
ror
dec
jns
div
inc
inc
cmp
pop
mov
fs
out
jp
test
addr16
mov
jp
mov
mov
ds
push
ds
movsl
in
adc
shrb
loopne
fldt
push
push
mov
dec
xchg
cmp
into
nop
insb
or
adc
jo
bound
in
xchg
cltd
xchg
cmpsb
sbbb
or
inc
std
arpl
aad
mov
or
stc
ds
mov
in
xlat
mov
mov
lods
jp
bound
push
mov
sahf
mov
adc
mov
fdiv
cmpsb
xor
dec
test
nop
mov
mov
pop
push
add
scas
std
mov
test
mov
mov
mov
push
cmp
xchg
sub
pop
test
xor
aas
shr
xchg
xor
dec
mov
int
cmp
xchg
rcl
hlt
xchg
mov
clc
cmp
and
inc
jmp
outsb
adc
out
mov
mov
inc
movsl
icebp
ljmp
in
adc
adc
xchg
mov
dec
xor
pop
clc
cwtl
push
xchg
push
cmp
inc
sbb
push
scas
cwtl
movl
js
jge
into
push
shlb
ja
mov
mov
into
mov
add
js
aas
and
and
xchg
add
pop
into
mov
mov
xchg
mov
mov
lahf
lea
mov
sahf
adc
inc
pop
jp
jno
icebp
add
xor
mov
add
or
mov
pop
out
inc
push
outsb
sub
xchg
iret
mov
push
lock
call
xchg
add
cld
mov
pusha
imul
push
pop
leave
fsubl
test
cltd
or
push
ds
mov
mov
jge
adc
sahf
mov
xor
inc
repz
lods
rcrl
or
mov
mov
xchg
push
sub
cmp
test
xlat
mov
sbb
call
add
xchg
sub
pop
imul
or
xor
bound
lds
je
mov
fdivrl
rol
adc
mov
fdivp
xor
cli
test
jnp
dec
cld
pop
pop
cmpps
inc
jno
add
in
jmp
mov
add
pusha
jns
sub
adc
xchg
jmp
fisubs
sub
ja
fstps
ret
dec
xor
jg
inc
inc
ljmp
push
fwait
out
outsl
or
pop
or
dec
push
and
jmp
sub
and
fisubs
or
std
pop
sti
sbb
aad
adc
ds
cmpsl
xchg
movd
and
daa
loope
mov
lds
in
aas
outsb
sbb
andb
push
mov
mov
mov
fstpt
inc
fadd
cltd
xor
arpl
sbb
lret
dec
test
fcoml
xchg
push
mov
xor
push
sbb
lahf
mov
add
andl
mov
out
in
lretw
pop
jb
cmp
add
ret
xchg
aam
xchg
xor
jle
aaa
ds
push
insl
cmpl
dec
mov
jg
pop
and
sbb
mov
jno
scas
dec
mov
pop
jae
adc
and
scas
addb
das
sub
lahf
fcmovnb
xchg
popf
stos
out
pushf
adc
scas
and
nop
cwtl
fsubrl
jb
mov
mov
or
push
add
imul
in
push
aaa
inc
inc
xchg
in
adc
push
push
stos
adc
nop
jg
xor
mov
and
lcall
pop
cwtl
jg
stos
mov
outsb
xor
pop
push
fwait
daa
test
push
decl
fiadds
pop
adc
pop
lret
sub
outsl
jg
jg
filds
inc
pop
mov
into
xchg
xchg
mov
icebp
lock
aad
mov
scas
jb
sahf
mov
add
mov
cmc
jne
in
stos
or
inc
mov
jne
stos
jecxz
loop
jbe
std
in
jmp
insb
cwtl
mov
pop
incl
mov
popf
cmp
movsb
pusha
ss
push
mov
add
sti
add
add
xchg
sbb
mov
inc
pop
fcmovnb
lods
fistl
leave
fnsetpm(287
pop
pop
xchg
xchg
movsl
fsubrl
ljmp
adcl
in
mov
and
or
xchg
lods
push
inc
clc
ret
mov
enter
jno
adcl
pop
shlb
pop
rolb
test
adc
out
lret
repz
int
jnp
out
mov
lock
aad
jle
sarl
or
jb
sub
loope
sub
sub
fldcw
mov
push
add
and
sarl
das
jp
ret
ja
jmp
xchg
sahf
cwtl
dec
or
in
adc
or
or
hlt
mov
addr16
sarb
mov
mov
mov
outsl
or
inc
or
lcall
ljmp
int3
mov
sub
rorb
inc
push
push
pop
xchg
aad
mov
repz
jns
dec
mov
cli
and
in
lahf
cmp
sub
popf
sub
lahf
and
cmp
xlat
push
cmc
push
hlt
pop
scas
movb
out
repnz
jbe
and
shlb
lods
cmp
push
insl
sti
push
dec
popf
pop
xor
inc
mov
lcall
pop
dec
mov
push
push
scas
aaa
mov
cmp
mov
repz
ds
mov
pusha
bts
mov
movsl
sbb
mov
inc
xchg
push
mov
pop
movsl
lock
js
pop
lods
adc
fiaddl
sbbl
stc
xor
dec
inc
adc
push
and
xor
jecxz
ficompl
mov
cld
cmp
add
push
fwait
test
adc
mov
fsubs
stos
sbb
push
outsl
ret
push
cwtl
sbb
pop
dec
adcb
pop
out
cmpsl
sahf
sbb
or
jno
or
bnd
cmc
add
out
xor
ss
and
cmp
inc
jmp
push
sub
cmp
aad
pop
adc
jl
test
xor
mov
pop
jne
lret
lods
push
or
sub
clc
aam
cltd
sbb
mov
int
in
xchg
mov
sbb
repz
testb
rcr
adc
or
stos
cmc
sub
movsb
gs
inc
cmp
or
mov
fnstsw
fsubl
xchg
ljmp
out
cmp
xchg
add
pop
push
push
inc
dec
popa
pop
mov
out
dec
movl
push
xchg
cmpsl
push
push
xchg
mov
scas
and
and
jae
neg
shlb
push
mov
adc
int3
inc
outsl
repnz
pop
lahf
lock
icebp
lret
jne
jle
call
xor
cld
fstpl
mov
scas
outsl
test
mov
add
pop
adc
xchg
cmovl
xchg
push
cmp
xlat
and
sub
lods
or
or
test
lcall
fcmovb
dec
pop
enter
push
rcrl
in
ja
popa
cld
sbbl
xchg
dec
xchg
imul
std
in
jle
std
je
in
sub
sbb
mov
out
mov
xor
inc
out
inc
mov
dec
out
push
mov
jecxz
dec
pop
and
cmp
mov
jmp
imul
ss
xchg
push
fadds
lret
xchg
andl
sub
aas
lods
js
push
das
inc
mov
movsl
sub
mov
mov
test
inc
fs
std
daa
das
daa
push
sub
loopne
or
aaa
outsl
repz
cmc
mov
xchg
in
ljmp
ret
mov
adc
jns
lahf
dec
in
iret
mov
and
push
fists
adc
aaa
shr
cmpsl
test
imul
cld
cwtl
cmp
in
xor
int
adc
in
aas
data16
sub
adcl
addr16
pop
xchg
pop
sub
jae
out
xor
fs
pop
sahf
int
test
pop
or
cld
add
les
pop
sbb
mov
jp
js
jne
addr16
xor
cli
xor
sub
adc
lret
fiadds
ret
and
in
mov
dec
ja
test
xchg
xor
cli
adc
iret
mov
xor
lret
push
push
fwait
pop
pop
ret
loope
testb
mov
sbb
stc
and
shr
movsl
leave
add
jbe
hlt
cmp
push
mov
out
push
dec
es
mov
mov
popa
lods
fcompl
jecxz
nop
test
dec
push
out
push
sahf
dec
cmpsl
and
imul
push
fldl
testb
push
fnstcw
rorl
mov
bound
lret
aam
xchg
xchg
lea
or
cmp
or
pop
jae
xchg
jge
or
inc
mov
sub
add
out
push
fsubrs
repz
ror
push
aaa
xlat
mov
push
cwtl
sti
xchg
and
imul
ljmp
ret
cli
aam
jg
pop
xor
jg
push
sbb
add
push
hlt
out
mov
push
pop
or
push
add
cwtl
push
mov
add
rcl
xchg
and
scas
bound
sbb
mov
loop
cld
xchg
xchg
push
lods
push
insb
push
xchg
mov
xchg
arpl
dec
xchg
cmp
iret
jl
mov
or
mov
wbinvd
xchg
sbb
cmp
cltd
imul
pop
and
and
add
mov
push
mov
adc
cmpsb
iret
mov
pop
in
jb
test
mov
push
js
aaa
sub
cmp
aas
add
test
jae
cmp
push
fidivrl
iret
sahf
and
adc
xorl
cmpb
imul
stos
inc
xchg
mov
mov
loop
jne
addr16
mov
leave
les
sub
lret
xor
test
cmp
or
ljmp
fisubl
ret
cmpsl
jnp
xchg
xor
dec
pusha
jne
adc
push
sbb
adc
push
mov
add
push
nop
mov
push
or
cmc
jge
shll
jge
stc
xor
fistps
jne
lods
arpl
cmp
out
cmpsl
iret
test
xchg
jg
outsl
popf
fmuls
jge
mov
popf
jae
push
shrb
or
and
andb
adc
jmp
shlb
mov
aad
stos
dec
mov
xor
mov
pop
mov
rcll
ffreep
jnp
cmp
out
xor
imull
xor
cwtl
cli
movsl
jae
cs
dec
mov
in
mov
movsb
cmp
pop
xchg
sub
mov
mov
adc
inc
frstor
pop
mov
jg
lods
repz
and
jne
call
xchg
mov
out
and
cli
test
push
outsl
rorl
jno
aad
test
pushf
insl
dec
into
insb
dec
add
xchg
push
mov
enter
filds
rclb
xchg
sub
cltd
sbb
shlb
add
push
pop
fdiv
scas
sub
leave
in
mov
pop
mov
mov
dec
sub
inc
pushf
xchg
aaa
out
push
inc
stos
inc
imul
inc
dec
loope
jne
push
arpl
xor
aad
aam
cli
shlb
and
mov
sub
fcoml
aaa
mov
push
lret
and
dec
mov
push
dec
xchg
xor
mov
ds
sub
rcl
pop
or
push
cmpb
mov
jmp
scas
pop
jl
inc
dec
into
sbb
xor
add
gs
pop
lcall
pop
clc
fldenv
clc
shll
loopne
fs
push
mov
ja
dec
pop
xlat
cmpsb
test
mov
xor
sub
xor
sbb
out
pop
shlb
dec
add
mov
push
arpl
dec
or
pop
add
inc
push
setne
xchg
aas
sbb
dec
jnp
xor
in
pop
arpl
cli
ja
popa
sbbb
sbb
sar
sub
pusha
jl
sub
cmp
jae
and
jbe
jno
roll
sbb
add
sbb
sub
mov
mov
shll
arpl
dec
outsb
enter
adc
mov
lock
andb
or
sbb
imul
mov
addr16
cmc
jmp
cmpsb
inc
pop
fisttps
xor
mov
push
cmp
jge
bswap
add
xchg
pop
ret
data16
cli
fsubrs
xorl
mov
lods
inc
daa
hlt
or
or
mov
mov
clc
inc
jae
push
mov
sub
push
call
pushf
jmp
xor
fcmovb
hlt
pop
cltd
pop
push
push
scas
aad
or
out
call
pop
push
subl
mov
mov
lods
loope
movsl
insl
jg
mov
test
xor
dec
inc
add
and
add
int
pop
aad
jle
xor
in
icebp
sbb
insb
mov
roll
mov
shll
lock
mov
dec
shrb
stos
inc
movl
into
roll
or
lret
cmp
scas
enter
inc
dec
sub
push
xor
cli
adc
jne
es
pop
push
fwait
sub
dec
adc
cmp
sub
push
xchg
adc
sub
dec
fchs
jle
sti
sti
add
xchg
fmull
hlt
jg
ss
hlt
cltd
dec
and
gs
xor
pop
mov
sbb
cmpsb
inc
js
in
mov
scas
push
inc
xchg
stc
lods
sub
push
lds
in
lds
xor
and
cvtps2pd
sub
jnp
or
mov
jo
jg
or
movl
popf
mov
movsl
mov
jg
enter
lcall
sbb
fnsave
rcl
xchg
cmp
push
push
enter
adc
push
int3
pop
sbb
jp
lcall
sbb
mov
dec
repz
imul
pop
adcb
jno
arpl
push
jecxz
pop
pusha
movsb
xor
in
stos
test
faddl
xor
icebp
push
and
jb
xchg
fsubr
loopne
enter
or
sbb
int
outsb
adc
rcrb
adc
in
repnz
leavew
and
jo
mov
bound
sub
jbe
pop
inc
lods
jecxz
cmp
xchg
xlat
mov
outsb
hlt
jo
movsl
xchg
jne
add
mov
xchg
loop
shr
jo
add
movups
dec
out
adc
inc
or
call
add
fisubl
loope
pop
loop
push
jns
and
and
in
cmp
ljmp
pop
or
mov
pop
shll
mov
jb
arpl
enter
mov
xchg
test
push
lock
mov
xchg
cwtl
popf
dec
inc
sbb
or
jnp
shl
pop
and
imul
notl
push
jnp
sub
gs
jnp
outsl
ret
xchg
lcall
repnz
inc
ds
push
mov
pusha
or
andb
imul
cmp
jno
dec
shll
daa
mov
pop
inc
push
daa
loope
in
push
loope
rcll
cmc
sti
popa
leave
in
jo
push
rcrl
push
pop
sti
pop
mov
xchg
int
dec
outsl
cmpl
push
mov
popf
xchg
fnstcw
int3
push
imul
or
out
xchg
data16
push
popa
test
hlt
pop
cmpsb
dec
rorb
or
ja
test
mov
fwait
and
subl
push
int
out
pusha
movsl
call
shlb
cmp
sbb
iret
rolb
jnp
loopne
mov
aaa
out
pop
pushf
fimull
xor
mov
and
fdivrp
sub
stc
movsb
mov
cmp
jbe
inc
cmc
pop
mov
add
pusha
sub
in
jmp
dec
jae
mov
cmp
mov
adc
adc
push
loopne
ss
popf
mov
fxch
inc
lcall
aad
pop
sub
adc
xchg
jmp
sub
adc
shlb
adc
xor
insl
sbb
xor
cmp
push
scas
mov
jg
sahf
jo
xchg
dec
pop
xchg
insl
and
lods
push
adc
repz
jb
stos
and
scas
xchg
mov
hlt
dec
push
shll
stc
arpl
add
xor
mov
daa
xchg
aas
je
das
sub
jmp
fld1
sub
dec
or
xor
bound
rcl
inc
lods
or
movl
inc
pop
les
adc
adc
push
fcomps
jmp
int
mov
pushl
popf
push
lahf
xor
jmp
pop
inc
mov
popf
xchg
enter
je
mov
fwait
cltd
mov
push
mov
testl
sub
mov
sbb
mov
and
bound
jle
dec
lret
repnz
mov
shl
or
mov
or
inc
add
test
dec
call
orl
cltd
and
and
pop
push
jbe
aaa
fldt
cwtl
sub
pop
jns
aam
movsl
hlt
call
movsl
pop
pop
mov
es
ftst
lock
jo
imul
rorl
fiaddl
es
and
leave
adc
sub
mov
sub
sbb
int3
stos
int3
jmp
inc
sub
ja
rep
pop
mov
in
push
incl
or
outsl
mov
jp
xchg
mov
mov
inc
mov
mov
in
xor
mov
imul
movsb
mull
ret
imul
inc
data16
movsb
sbb
mov
je
add
aas
ja
mov
dec
cmpsl
sahf
adc
push
in
mov
cmc
mov
or
fwait
sahf
movsb
push
or
sub
iret
lret
push
jae
rcll
cmp
xchg
jp
fadd
ljmp
xchg
ret
sub
pop
inc
pmullw
mov
and
push
cmpb
xchg
dec
pop
outsb
sub
cmp
fs
jecxz
push
adc
cs
mov
pop
daa
hlt
stos
xchg
and
ret
xor
xor
call
pop
mov
adc
stos
stc
movsb
pop
shll
dec
and
or
in
xor
jbe
or
lret
les
cmp
movsl
movsb
lahf
sub
movsl
out
or
mov
in
ret
push
lock
data16
xor
mov
cmp
cmp
push
rorb
std
cmp
xlat
lods
repz
jmp
adc
xorl
mov
pop
mov
dec
mov
jo
bound
xchg
fiaddl
dec
call
sahf
xor
lods
fs
mov
popf
or
ds
test
outsl
jnp
cmp
fiaddl
jmp
xor
inc
cmp
mov
in
sbb
jae
push
dec
ret
and
jle
push
popa
sbbb
gs
arpl
push
mov
push
mov
es
lcall
sub
fwait
pop
fldl
pop
jl
dec
es
clc
hlt
jae
rorl
sbb
pop
mov
stos
ds
cmp
mov
cmpsl
jbe
and
out
outsb
out
rolb
add
jle
and
jle
test
fcomps
aad
sti
inc
add
ret
lea
jbe
pop
jb
dec
inc
sub
and
xor
push
jg
xlat
push
andb
mov
rcll
push
fsubs
aas
pop
push
mov
cmp
mov
mov
iret
movsb
pop
je
push
adc
add
xchg
ret
push
inc
dec
cltd
xchg
aam
mov
inc
movsl
jmp
mov
jge
rolb
adc
test
push
push
dec
lahf
insl
adc
testl
mov
negb
push
or
push
sahf
xchg
mov
aam
imul
push
add
jecxz
js
lods
push
dec
popa
sub
pop
ljmp
jecxz
mov
inc
cmp
push
mov
icebp
adc
xchg
lea
sub
sbb
lcall
loopne
cltd
ja
imul
int
xor
mov
int3
mov
cltd
in
dec
mov
sub
scas
jae
mov
push
or
push
aaa
xchg
std
mov
adc
shlb
xor
cmc
jg
fimull
push
mov
imul
adc
mov
inc
popa
jbe
icebp
popa
rcrl
jmp
nop
jno
je
mov
pusha
jns
inc
jge
fbstp
mov
ret
push
fldcw
xchg
cmp
mov
or
insl
add
inc
pop
repz
insl
in
arpl
fidivs
push
mov
pop
xchg
jnp
sbb
lcall
sbb
jle
lcall
fbstp
das
roll
popa
stc
repnz
cmp
cli
xchg
inc
dec
lahf
xor
mov
pushf
inc
outsb
fxch
mov
ds
loopne
sbb
popa
cltd
int
inc
xchg
nop
mov
movsb
xchg
dec
fsts
mov
or
cmp
inc
pushf
filds
push
sti
ds
ljmp
les
mov
and
arpl
mov
sarl
andb
adc
fdivrs
xorb
pushf
flds
fmuls
fs
std
test
xchg
mov
adc
mov
hlt
jb
pop
mov
xorb
roll
aas
fld
xchg
insb
dec
adc
mov
push
sbb
push
repz
pop
dec
lods
mov
ljmp
pushf
sarl
add
cmp
push
and
add
push
ror
shrl
add
mov
mov
sar
cmp
add
dec
aad
ret
dec
sbb
test
cld
pop
idiv
int
lcall
or
mov
rcrb
roll
dec
jp
adc
daa
test
xchg
push
lea
pusha
cmp
or
sti
stos
pop
xchg
mov
mov
cli
mov
xchg
mov
xchg
inc
jno
cld
mov
jecxz
cmc
mov
xchg
sub
add
andl
inc
or
pop
push
ret
inc
mov
push
outsb
hlt
pop
cmp
cmp
das
leave
sub
or
or
in
xchg
xchg
dec
mov
mov
shll
or
adc
ja
shrb
adc
push
cwtl
mov
cmp
xor
popa
test
push
inc
shlb
inc
sub
lahf
push
ficompl
jb
xchg
cmp
popf
imul
push
repz
xchg
jl
js
out
jns
repz
or
xchg
fsubrs
sub
repnz
push
dec
mov
dec
jns
gs
mov
fwait
mov
sbb
aas
xchg
out
cmp
adc
fbld
test
or
ja
mov
je
pusha
cmpl
daa
sbb
lods
sbb
fnsave
sub
mov
shl
clc
pop
sbb
pop
out
push
fdiv
mov
push
and
adc
mov
shrl
cmpsl
inc
test
fldt
stos
or
mov
out
inc
push
pop
push
pop
dec
pop
push
fdivrs
mov
add
mov
cmp
cli
sub
repz
pop
call
pop
add
xor
mov
inc
icebp
arpl
ja
add
inc
inc
aas
lret
push
insl
add
jo
xor
mov
pop
and
mov
jno
fcmovne
loope
mov
or
sub
ret
hlt
nop
or
xor
das
les
ret
sub
sbb
data16
ss
cmp
push
push
insb
pop
jae
shrb
cmp
add
mov
add
jnp
in
add
hlt
or
movsl
adc
sub
lret
adc
bound
add
mov
rcrb
or
mov
sbb
sub
or
not
out
pop
in
movsl
std
aaa
add
xchg
sub
lret
paddsb
pop
sub
push
in
jns
test
lock
imul
repnz
adc
push
sahf
dec
mov
mov
outsb
fistpll
sarl
xchg
xor
js
mov
jmp
push
fcoms
push
hlt
dec
ss
popf
je
out
sub
je
outsb
daa
out
xor
pop
loope
sub
movsl
jg
les
sbb
popf
test
pop
rorl
xchg
lea
nop
adc
mov
clc
in
arpl
iret
push
iret
add
stos
sti
sbb
mov
jb
ret
mov
and
push
inc
mov
ret
push
jno
cmp
mov
mov
mov
int
ja
sbb
and
insl
lds
das
gs
inc
jl
lods
mov
push
sub
shrl
out
pop
push
enter
inc
int3
out
lods
xchg
dec
xchg
arpl
clc
scas
xchg
mov
push
add
mov
jp
add
int3
mov
popf
mov
lret
arpl
lock
inc
jne
lcall
xchg
xor
fs
adc
xchg
xchg
sbbl
mov
inc
lret
rol
sahf
test
mov
mov
orb
mov
lods
out
ret
insb
sti
movsl
xor
mov
fsubs
cmp
lds
or
mov
push
lods
pop
ds
scas
sahf
jl
mov
sbb
shlw
cmp
loopne
mov
pop
mov
mov
xchg
jo
les
fwait
mov
cmpsb
xchg
outsb
sub
push
adc
adc
xor
jbe
aad
hlt
push
cmp
or
sub
call
in
dec
idivl
arpl
incl
add
mov
cmp
xor
movsb
and
test
adcb
fidivl
cmp
rcr
inc
sbb
sub
data16
jae
pop
lock
ja
sub
mov
cmpsl
pop
sbbl
mov
mov
pop
xchg
shlb
mov
mulb
dec
in
pop
mov
pop
sahf
lret
addr16
jns
insb
xlat
les
sti
cmpsb
cltd
jmp
push
negb
mov
rclb
sbb
adc
jnp
pop
stos
pop
cwtl
imul
or
cmpb
test
outsb
ss
or
push
adc
mov
nop
lds
and
or
mov
jecxz
cmc
in
cmp
clc
fmuls
sti
and
ljmpw
sbb
push
mov
dec
and
ljmp
fdivrs
pop
repz
hlt
pop
lock
inc
sarb
jnp
fcomp
adc
and
shll
inc
rcrb
lahf
fnstsw
pop
add
pop
and
and
mov
adc
inc
fmuls
addb
int3
or
push
lret
pusha
jne
adc
jg
icebp
es
lods
dec
out
or
filds
lea
sbb
cmc
loopne
mov
popf
jle
push
pop
cmpsb
jl
push
mov
sub
lock
and
fsts
cmp
dec
mov
mov
adc
movsb
add
adc
mov
clc
pop
testl
and
in
xchg
call
das
cmp
jp
cwtl
xor
sub
dec
add
imul
push
pop
imul
rorl
das
cli
push
push
lock
mov
ja
or
cs
push
lret
fstpl
dec
lea
rcll
into
xchg
rclb
addb
loope
inc
jmp
add
ss
lret
ja
imul
ja
clc
mov
sbb
inc
popa
mov
mov
sbb
jb
jp
jne
mov
xchg
push
dec
cmpsb
mov
in
add
push
shll
fmull
movl
in
add
or
js
outsb
mov
in
cmpsb
dec
fs
gs
mov
xchg
pop
mov
add
out
aam
mov
adc
push
lods
cs
ja
mov
and
sbb
lcall
mov
scas
jg
mov
mov
call
push
ficomps
xchg
pop
fs
or
loop
pop
xor
hlt
adc
and
sti
inc
stc
enter
daa
push
cwtl
shrb
pop
dec
fdivs
negb
xchg
add
data16
dec
inc
aad
mov
iret
lods
and
lret
sub
movsl
push
repnz
dec
ret
jb
call
or
outsb
test
fistl
bound
mov
daa
mov
push
push
sbb
aas
fadd
jp
cmp
push
adc
mov
imul
dec
daa
pop
mov
inc
mov
lret
xor
sub
and
mov
movsl
cmpsb
shlb
fidivrs
pop
lcall
add
call
push
and
mov
cmp
mov
mov
in
repz
inc
or
push
mov
jno
cwtl
lret
daa
and
cmp
repz
icebp
mov
test
cmpsl
mov
outsb
sub
int3
lret
push
inc
sahf
arpl
xor
pop
sub
jne
cmp
dec
out
add
dec
enter
pop
je
xchg
lock
fidivs
adc
call
and
mov
enter
jle
sbb
xor
outsb
pop
ror
mov
lret
fsubr
aad
fdivrl
sub
stos
xor
mov
mov
sub
or
outsl
add
nop
ds
xchg
sbb
or
mov
adc
iret
rcll
mov
cmp
xor
sub
xchg
int3
xchg
nop
arpl
sbb
fmul
adc
lret
mov
and
and
sbb
cmpl
int
mov
fildl
imul
or
lret
dec
dec
adc
sub
sahf
pop
inc
gs
xor
fs
mov
fistps
cmp
push
dec
leave
pop
dec
ja
stos
add
mov
in
push
xchg
dec
push
cmp
push
in
loopne
mov
shr
repnz
lods
loop
xor
lods
push
sub
insl
push
cmpsb
jp
int3
shrb
or
mov
sbb
mov
repz
mov
fwait
push
inc
insl
int
lods
adc
xorb
cltd
aaa
jge
rclb
adc
dec
lea
lret
cmp
or
loop
pop
hlt
or
shll
gs
cmp
pop
mov
jl
js
and
jo
mov
mov
in
jns
pop
test
mov
lods
jnp
xlat
rclb
dec
std
inc
iret
jmp
adc
pop
in
cmpsb
cmp
lret
aas
and
mov
repnz
push
out
dec
sub
mov
push
lret
cmp
jne
cmp
mov
adc
cmp
mov
aaa
fadds
xor
jmp
fldt
das
dec
lods
pop
in
mov
lods
inc
pop
ret
out
inc
xor
cmpsb
rol
lods
or
mov
mov
lret
in
add
sbb
xchg
popf
loop
mov
aas
inc
mov
jl
aaa
dec
pushf
shlb
push
dec
sbb
cld
mov
cmc
cltd
hlt
adc
xor
cmpsl
mov
fwait
popf
dec
negb
ret
xor
iret
jmp
loopne
mov
add
jno
inc
mov
movsl
jg
jnp
insb
movsl
xor
popl
dec
mov
cmp
cmp
je,pt
stos
imul
imul
mov
jl
cs
stos
ret
fwait
xor
and
mov
xchg
shlb
jne
cld
outsl
sbb
ja
add
cli
mov
nop
adcb
fsts
js
testb
sbb
rorb
movsb
call
icebp
into
jmp
inc
movsb
mov
loop
test
lods
and
ljmp
sbb
test
repz
xchg
or
dec
xchg
cmp
clc
and
mov
test
jp
mov
pminub
rcrl
push
sub
in
pop
dec
out
mov
js
aad
out
pop
mov
enter
sbb
push
aaa
das
cmp
jne
dec
nop
popf
mov
dec
out
imul
push
sbb
inc
dec
mov
pop
mov
scas
andl
mov
rorl
loop
lret
outsb
imul
mov
inc
xor
repnz
jae
icebp
mov
fnsave
in
mov
jg
push
int
sub
push
imul
mov
xor
mov
adc
inc
adc
xor
xor
pop
pop
ja
mov
in
int3
sbb
pop
cwtl
adc
inc
mov
mov
jb
rorl
dec
cmpsl
pop
cwtl
fcoms
dec
sub
ljmp
bound
lret
and
add
jmp
pop
xor
mov
jle
std
dec
sub
mov
xchg
mov
mov
xor
dec
out
insl
jnp
xor
fistpl
jmp
stc
dec
scas
mov
cltd
xchg
in
xchg
lods
stos
fidivl
push
jmp
sti
stos
add
jnp
xor
jne
dec
mov
jnp
xchg
or
dec
mov
jg
sarb
fcmovu
mov
inc
cmp
sti
jmp
cmp
js
stos
pop
push
clc
mov
push
sbb
adc
lcall
subl
push
xor
mov
mov
jmp
call
or
bswap
dec
pop
push
push
mov
jne
pop
lcall
sbb
gs
sti
cmp
jmp
xchg
push
bound
dec
out
ficompl
arpl
rolb
cltd
stc
xchg
rorl
out
add
jle
push
das
push
xlat
je
stc
jp
test
adc
jmp
sti
outsl
xchg
mov
sar
add
fcompl
lds
mov
pop
test
dec
push
popf
lret
cld
mov
pop
push
xchg
icebp
inc
sub
jge
pop
cmp
xlat
jmp
lret
sbb
mov
pop
push
sahf
adc
mov
xchg
pop
outsb
into
xchg
add
xchg
mov
test
push
pop
incb
push
mov
xchg
out
push
in
xchg
into
jb
add
cmp
cmp
iret
ficomps
je
out
sti
fldenv
mov
xor
push
call
aam
out
adc
shrb
mov
mov
sbb
xor
add
add
pusha
aad
mov
xor
and
nop
inc
arpl
iret
cwtl
fistps
push
push
rcll
dec
push
das
popa
mov
xchg
mov
jb
and
test
mov
add
sbb
inc
adc
rcll
mov
adc
subps
call
cmp
cmpsl
insb
rcrb
std
lcall
push
inc
push
or
sub
ljmp
adcb
or
mov
out
mov
xor
dec
shlb
mov
jecxz
and
inc
pop
ljmp
mov
jbe
fldt
jb
movsb
test
scas
jp
out
test
cmpsl
jecxz
out
add
adc
or
inc
pop
sbb
adc
call
in
dec
pop
dec
cmp
in
mov
add
cmc
or
mov
outsb
jno
xchg
add
mov
mov
das
notl
sub
pop
das
mov
xor
jl
in
loop
je
daa
push
addb
dec
call
test
loop
clc
mov
popa
test
jmp
xchg
test
mov
outsl
jbe
ss
pop
mov
xchg
nop
cmp
mov
sub
cmp
cmpsl
es
inc
or
clc
and
stos
dec
popa
sar
movl
pop
arpl
inc
repz
cmc
adcb
mov
pop
mov
imulb
pop
and
roll
pop
sub
jo
fstpl
dec
movl
lods
push
fisttpl
mov
call
out
in
ljmp
in
int
sub
mov
popa
int3
push
inc
jae
xchg
enter
lds
cmp
jb
out
adc
scas
cmp
xor
xor
in
push
fsubp
fisubs
std
dec
mov
je
cmp
call
mov
aad
stc
cmpsb
xchg
cmp
ficompl
in
dec
push
mov
shlb
lds
pop
inc
sbb
cs
mov
fbld
pop
lock
rclb
aas
cmc
inc
in
xor
mov
andl
push
and
cwtl
mov
jl
aad
dec
into
lds
test
or
push
cmp
xchg
push
js
insl
lahf
test
mov
jmp
dec
inc
pop
cmpsb
sub
add
out
or
jo
xlat
mov
out
adc
leave
fadds
scas
mov
xchg
out
mov
es
mov
enter
or
jne
mov
xor
pop
xor
and
jg
pop
fimull
pop
dec
mov
push
adc
fiaddl
pop
iret
in
xor
jae
jl
push
sub
fstps
addl
arpl
in
test
xchg
js
inc
aam
leave
mov
sub
add
decl
shl
sub
cmp
dec
outsl
clts
stos
loop
add
nop
mov
xchg
fimuls
inc
es
inc
loopne
xchg
and
push
push
xchg
adc
xchg
arpl
int3
ljmp
cltd
dec
imul
ja
imul
insb
popf
mov
mov
lret
or
mov
cld
xchg
push
cmp
rolb
dec
loopne
cwtl
xchg
adc
xchg
movsb
xor
jo
andl
cli
sbb
icebp
es
pop
aam
jmp
mov
in
call
lcall
or
dec
lret
int3
cmp
pop
fidivrl
xor
outsl
sub
push
test
addr16
lcall
mov
loopne
push
sbb
jp
aad
adc
pop
lock
inc
mov
jae
cmp
fst
xchg
pop
dec
fnsave
pop
push
cmp
hlt
jnp
and
fidivs
in
lds
lods
sbbb
mov
xor
or
dec
add
loop
cmp
and
mov
push
xchg
scas
mov
movsl
iret
or
loope
das
xchg
adc
loopne
dec
mov
dec
sbb
les
or
stos
fwait
jb
mov
push
lcall
push
pop
xchg
or
pop
loopne
iret
in
jo
leave
in
push
fcmovb
jnp
add
cmp
cmp
mov
scas
and
into
push
and
orb
ret
out
push
lds
push
jno
cwtl
add
outsb
stos
nop
loop
jns
mov
add
dec
and
loope
imul
enter
nop
cmc
dec
pop
jge
sbb
add
scas
xor
add
pop
pop
cwtl
test
push
and
fcoml
add
stos
cmp
xor
sbb
add
pop
scas
add
outsl
cmpsl
iret
leave
fwait
xchg
data16
in
jg
cmp
inc
addl
xor
push
movsl
rorb
or
pop
adc
mov
xchg
cmc
stos
fs
sub
repnz
dec
xor
pop
or
mov
adc
sbb
pop
lods
fwait
addr16
pop
out
ja
fstps
jo
add
push
in
rcll
loop
icebp
xchg
xchg
and
xlat
push
ljmp
push
lods
cmp
cwtl
js
adc
js
add
iret
cmpsb
aad
aas
sbb
adc
push
jp
sub
cmp
sbb
push
adc
mov
cmp
inc
pop
xchg
push
sub
pop
jbe
cmc
add
dec
cmp
fdivrs
insl
mov
bound
insb
pop
rclb
lods
cmp
adc
aaa
xor
int3
mov
push
add
jne
pop
or
sub
ftst
mov
fmuls
sub
dec
or
adc
jno
fstpl
addr16
xor
mov
xor
add
jle
fs
repz
iret
dec
rcr
jmp
xor
or
xor
pop
dec
daa
sti
pushf
add
in
inc
cs
or
loopne
xchg
pop
fwait
ss
les
int3
inc
movsl
sub
in
loopne
in
push
inc
push
mov
add
push
in
mov
inc
and
push
add
mov
mov
dec
push
mov
lret
test
cmpsb
jae
inc
fnstsw
or
add
icebp
int
orb
jecxz
dec
cld
xchg
aad
lret
iret
xchg
outsl
add
mov
cmpsb
mov
push
mov
subb
pop
clc
and
pop
pop
xor
mov
call
mov
push
stos
jnp
ficoms
sbb
ret
movsl
test
test
xorl
cmp
mov
pop
add
rorl
or
enter
xor
adc
popf
sar
jns
push
into
add
adc
mov
dec
fidivl
jnp
int
inc
pop
xchg
cmp
pop
sbb
fcomps
fdivs
test
in
sar
inc
add
dec
inc
sbb
dec
push
dec
fs
add
in
push
outsl
sbb
xor
xchg
jg
fildll
in
jp
arpl
cmp
lcall
mov
fucomp
xchg
jno
out
fistpll
gs
cmpsl
out
shrl
xchg
adc
mov
add
adc
push
push
jbe
push
push
mov
mov
lds
js
xchg
test
sbb
adc
stc
xor
sbb
mulb
mov
rorb
push
or
lds
push
lods
sub
repz
push
xchg
rol
in
sbb
mov
mov
fcmove
icebp
jp
xorb
or
mov
iret
pop
rolb
ja
and
xchg
out
sbb
loop
leave
aas
dec
mov
xchg
adc
movsl
inc
test
dec
lods
imul
inc
dec
stos
jae
or
gs
mov
test
jnp
xor
xor
loopne
out
aam
adc
rcrl
decb
xchg
pop
jge
mov
mov
and
je
add
jp
xchg
cld
mov
jnp
addl
aad
dec
jle
dec
pop
mov
stos
cwtl
sub
push
xchg
pop
les
pop
and
pop
shlb
stos
mov
arpl
out
scas
xchg
jmp
adc
push
mov
push
push
adc
test
leave
sub
inc
mov
push
sbb
jo
and
call
and
imul
dec
into
sub
push
inc
mov
cmp
inc
pusha
imul
dec
push
add
mov
leave
cltd
repz
in
lds
add
xchg
jg
in
push
or
cmc
popf
int3
inc
nop
filds
sbb
ret
sbb
or
std
dec
inc
jne
stc
fwait
jle
pop
cli
or
pushf
sub
insb
std
repz
cmp
cld
ja
lods
daa
dec
xor
js
lret
and
jg
cmp
inc
xor
jge
jne
nop
and
pop
fwait
roll
loopne
adc
icebp
mov
jbe
or
push
jne
inc
adc
xchg
adc
xor
int
pop
in
adc
jae
sahf
in
out
push
and
bound
mov
mov
popa
mov
jns
int3
adc
movsl
scas
xor
test
fs
or
xchg
adc
adc
jecxz
pop
adc
lret
inc
pop
cmc
dec
jae
scas
enter
and
add
popl
mov
shll
push
mov
out
xor
lods
clc
add
fsubrs
push
testl
test
movsl
sbbl
outsl
dec
lods
dec
xor
pushf
jno
lea
push
shl
fimull
lret
mov
cmp
push
into
push
fcoms
push
ucomiss
mov
cmp
mov
adc
in
inc
movsb
aad
test
sbb
cmc
lret
scas
inc
xchg
lock
mov
push
test
ss
lret
xchg
shlb
insb
xchg
mov
push
lods
ss
fistpl
mov
push
push
cmp
push
inc
or
pop
sub
rolb
cmovs
and
aad
loop
aaa
clc
enter
loopne
cmpsb
mov
mov
imul
sbb
mov
das
ficoml
or
jmp
sub
push
pop
mov
movsb
jl
es
dec
dec
jae
dec
aaa
addr16
adc
mov
in
xor
adc
rep
mov
cs
push
pop
mov
pop
aam
adc
sti
popf
sbb
xor
xchg
outsl
xorl
insl
sahf
cmp
mov
inc
adc
movsb
ss
stc
lret
jo
in
pop
scas
lret
cmpsb
cmc
inc
and
stc
cmpl
push
lahf
or
jbe
popf
sbb
js
mov
lea
mov
push
stos
lret
mov
jl
jle
fiaddl
xlat
repnz
repnz
xor
out
loop
lds
mov
out
es
mov
inc
or
xor
inc
cmpsl
xchg
daa
cli
mov
cmp
lahf
popf
lret
fcmovu
ds
in
aas
es
bound
cmp
xchg
add
jg
out
fstpl
je
inc
mov
movsb
or
lock
push
sahf
pop
mov
pop
pop
fsubr
xorb
mov
xchg
mov
fdivl
jb
xchg
insl
xlat
dec
adc
mov
cwtl
arpl
inc
std
jbe
rcrl
loop
xchg
add
lds
inc
mov
outsl
cld
ljmp
lock
enter
xchg
xchg
xchg
or
push
enter
push
jp
aam
push
adc
xor
jmp
outsl
dec
or
sbb
mov
cmpsb
adc
movd
sbbl
xorb
adc
and
sahf
aas
sti
hlt
sbb
scas
pusha
out
in
xchg
adc
rcrb
mov
xchg
cli
pop
das
push
imul
mov
xchg
and
movsl
ror
call
out
loop
clc
cmp
xchg
and
stos
movsl
test
mov
leave
push
xor
subl
xlat
mov
pushl
mov
test
pop
stos
sbb
push
testb
jl
xor
add
sub
daa
daa
jp
stc
push
es
hlt
movsb
movsb
bound
add
sub
rcll
int3
cmp
and
nop
mov
lret
out
jmp
push
mov
daa
inc
lret
add
lods
dec
sub
add
xorl
or
jmp
repz
or
mov
push
inc
cltd
push
cmpsl
das
jbe
pop
inc
bound
into
lret
or
jg
leave
and
pop
sub
mov
pop
and
xchg
bound
inc
sub
and
scas
aas
popf
mov
cmp
pop
dec
dec
das
sub
sub
out
mov
js
adc
fnstcw
add
or
xor
and
jb
mov
mov
xchg
imul
fiaddl
mov
sub
addr16
lods
push
xchg
add
repz
inc
fmull
cltd
xchg
loope
push
flds
mov
mov
nop
jo
and
sub
cmc
cld
fistpl
shrb
dec
ljmp
pop
ror
push
sub
jmp
sbbb
in
arpl
or
orb
sbbb
pushw
pusha
negl
push
into
push
or
or
popf
cmp
dec
mov
sub
and
jp
pop
inc
repnz
sub
ret
dec
or
cmpsb
inc
sbb
mov
stc
stos
xor
xor
lcall
test
cld
jno
test
ficoms
mulb
cmp
cs
push
icebp
testb
test
aad
inc
pop
sub
push
mulb
ret
je
test
pop
mov
popa
jno
or
mov
hlt
movsb
nop
scas
add
xor
mov
pop
addr16
je
adc
push
adc
dec
pop
ja
aaa
mov
dec
jl
jns
shll
or
mov
pushf
movsb
out
dec
fwait
and
add
sti
addr16
gs
pop
xor
push
or
in
pop
push
daa
fldenv
pusha
fisubrl
jg
adc
mov
adc
inc
mov
mov
fisubrl
imul
daa
stos
movsl
fidivrs
push
dec
push
insl
nop
xchg
imul
mov
into
sbb
sbb
sbb
mov
xchg
push
sub
push
aas
add
jo
cmpsl
push
sbb
adc
and
aam
int3
adc
xchg
jl
stos
lcall
jb
push
cmp
sbb
dec
out
push
adc
pop
cmp
andl
ret
bound
add
stc
pop
cmp
out
dec
push
xchg
push
and
mov
jbe
nop
fsubrp
dec
jns,pt
and
movsl
sbbb
fidivs
mov
loopne
orb
syscall
cs
movsl
fcomps
loope
int
cmc
das
mov
mov
ja
or
jnp
subb
fs
dec
inc
push
scas
xorb
mov
cld
dec
mov
int3
mov
aas
lcall
mov
push
inc
insl
cmc
out
xor
es
fildl
popa
jmp
xor
sbb
lcall
pop
push
mov
dec
enter
loopne
test
sbb
inc
pushf
out
mov
icebp
jge
imul
jae
sbb
push
ss
testb
shlb
pop
adcb
aas
xor
push
mov
sub
jne
test
outsl
sub
sti
push
and
scas
ljmp
sub
call
adc
mov
idivl
mov
or
aas
cmp
adc
inc
mov
mov
jl
mov
fdivrl
pop
jb
xchg
push
push
xchg
ja
pop
jns
xor
scas
loopne
insb
in
dec
jb
and
cltd
dec
mov
pop
and
frstpm(287
mov
jns
jle
roll
add
jae
iret
daa
push
dec
push
imulb
movsb
bound
mov
push
outsl
fistl
adc
inc
mov
add
ja
add
sbb
iret
jns
iret
jp
lcall
jns
inc
pop
adc
mov
mov
out
push
arpl
lods
lret
add
xorb
fcoms
hlt
test
mov
or
rcr
xchg
lods
call
xor
cmpsb
jg
push
in
pushf
dec
mov
sub
out
es
mov
fldenv
pop
mov
push
cmp
fcomps
add
dec
pop
fs
loopne
leave
mov
addr16
addb
mov
pop
fcomps
dec
repnz
xor
in
push
dec
movsb
ret
cmc
nop
jnp
je
push
pop
mov
mull
into
sub
ds
arpl
std
lock
inc
mulb
adc
pop
mov
and
mov
outsl
mov
int
xchg
mov
insb
cmp
push
fadd
incb
mov
enter
xchg
clc
js
jp
mov
cwtl
movsb
sbb
cmp
mov
sbb
imul
jge
lahf
inc
push
in
sbb
xorb
out
mov
xchg
add
xchg
sub
lea
mov
xchg
std
pop
pop
xchg
out
add
ret
test
sbb
stos
roll
inc
or
push
adc
push
mov
add
jns
xchg
cmpsl
insb
add
mov
and
outsb
mov
arpl
jne
cli
in
into
push
inc
int
sbb
test
mov
push
xchg
mov
push
mov
outsl
cmc
inc
mov
cwtl
xor
jb
push
repz
and
repnz
pop
sub
mov
xchg
xchg
imul
imul
sahf
ret
cmp
mov
xchg
int
repnz
ret
or
xor
jno
push
repnz
aas
or
fdivp
xlat
popa
fsubrs
xor
or
push
pop
lret
jp
pop
rolb
sbb
pop
fdiv
vpshld
shlb
outsb
test
cltd
int
dec
popf
or
aad
insb
xor
adc
push
push
mov
loopne
outsl
sbb
lock
orb
idiv
test
add
sarb
dec
push
sbb
in
scas
pop
mov
out
stc
pop
ret
and
addr16
cmp
push
loope
test
dec
movsb
xchg
cmp
adc
stos
ss
inc
das
imul
push
or
jne
add
inc
cmp
dec
rcrb
adc
push
add
sbb
add
jb
mov
movsl
outsb
loope
cmc
inc
in
push
add
insl
mov
out
push
add
inc
adc
mov
inc
fsubrs
insl
xchg
movsb
cmp
mov
sahf
push
test
push
cli
call
ljmp
sub
push
jo
mov
insl
je
jl
cld
int
pop
dec
pop
fs
lock
dec
repz
ret
xchg
lds
add
and
imul
and
mov
dec
pop
push
mov
xchg
imul
movsb
outsl
lahf
stos
push
sub
mov
iret
arpl
rcrl
in
sub
in
inc
mov
cmp
das
in
sub
adc
ret
outsl
imul
xchg
mov
sbb
add
dec
gs
jg
or
dec
xchg
xor
jle
rcrl
shrb
inc
adc
jo
ret
or
and
push
aas
sub
add
shrb
push
lock
test
push
mov
jb
jbe
sbb
sbb
andl
adc
xchg
jp
sbb
mov
fistps
and
inc
pop
aam
movsl
rcrl
and
sub
xchg
jae
jns
jmp
push
push
mov
test
xchg
push
jno
and
fdivrs
dec
pop
fmull
inc
imul
or
jno
test
fsubs
push
pop
loope
out
mov
insl
sub
mov
loop
sahf
in
fsubr
inc
bswap
inc
fcomip
mov
rol
push
pop
xchg
fsub
loop
mov
cmc
and
fdivrs
xchg
retw
xor
shlb
gs
popf
xchg
cmp
add
aas
add
rcrb
imul
psubd
pop
and
loopne
mov
movsl
scas
int3
push
shlb
nop
adcb
fwait
in
mov
xchg
fsubrs
out
jne
push
out
ret
xchg
pop
jl
test
dec
jns
sarb
cmpsb
push
pop
js
mov
inc
mov
dec
lahf
aam
or
imul
push
adc
or
cltd
inc
sbb
adc
inc
test
jge
sub
jecxz
addl
push
scas
testl
lds
xor
pop
pop
xor
cwtl
mov
adc
dec
push
pushf
outsl
cs
movsl
sbb
cli
push
in
test
xchg
cmpsl
out
inc
iret
pop
ja
or
jno
mov
pusha
int3
ret
call
pop
imul
stos
jbe
mov
add
call
mov
push
mov
jb
into
les
adc
add
popa
ss
mov
cmp
pop
lahf
sbb
jge
imul
pop
nop
int3
shrb
sti
decl
and
pop
sbb
ljmp
scas
pop
mov
movsl
add
add
and
xchg
inc
xchg
push
leave
arpl
rcll
mov
iret
cmp
lods
cmp
test
and
jns
inc
xorb
ss
mov
mov
stc
cmpsb
ret
lods
icebp
mov
lea
mov
jb
sub
aad
les
int
add
lods
jmp
lcall
pop
push
aad
mov
sbb
push
xchg
dec
in
in
add
je
pop
aam
lea
jl
inc
stos
pop
xor
aad
out
std
jle
xchg
into
mov
call
inc
dec
jl
sub
push
sbbl
stos
xchg
lds
mov
jle
test
addr16
or
aad
sbb
sti
mov
jb
andb
sbb
xor
pusha
sub
rcll
xchg
lea
fs
and
mov
shl
xchg
dec
mov
popf
mov
adcb
inc
dec
fidivl
test
outsl
sub
cmc
shrl
loope
movb
dec
int
sub
fcomp
add
jp
sti
or
es
cmc
sub
decb
cmp
jnp
or
sub
or
ds
mov
cld
pushf
or
sub
push
push
movb
inc
out
lods
xchg
mov
xchg
mov
addr16
adc
push
pop
mov
arpl
enter
lods
cmp
xor
mov
js
jmp
mov
cmpb
inc
in
push
push
push
pushf
testl
push
loope
xchg
cmp
popa
pop
icebp
mov
or
repnz
and
cld
mov
adc
mov
jmp
ds
jge
cmp
adc
insb
out
pop
jae
xchg
pop
nop
mov
negb
aas
cmpsl
jle
fisubrs
pop
cmpb
add
add
cmp
mov
aaa
sbb
cwtl
movsb
aam
mov
stos
insl
cmp
pusha
lret
mov
int3
pop
pop
pop
pop
ljmp
outsb
imul
add
mov
call
es
xchg
sbb
test
insb
ret
cmp
ret
mov
cmc
add
sbb
or
and
out
sub
cwtl
cmp
js
nop
or
andb
lahf
inc
cmp
mov
sbb
and
fnstcw
and
adc
pop
mov
jmp
jecxz
lods
leave
sub
jb
insl
lods
call
pushf
jns
push
fwait
pusha
ljmp
cltd
jns
lret
lcall
in
xchg
mov
int3
mov
and
in
out
dec
sbb
inc
xchg
jb
cmp
mov
lcall
pop
sbb
dec
inc
sbb
loopne
add
inc
mov
call
or
sti
aam
adc
mov
xchg
in
loope
lret
mov
data16
push
push
stc
and
pavgw
dec
pop
test
movsb
out
lahf
mov
cmc
dec
sahf
jecxz
outsb
pop
add
insl
inc
pop
test
or
outsl
xchg
frstor
push
into
sub
std
or
fstl
loop
xor
sbb
sbb
mov
jno
push
sbb
sub
cmp
or
push
loop
stos
out
out
mov
and
sbbb
dec
hlt
scas
adc
in
loop
jle
ficompl
out
xchg
sub
pop
dec
daa
add
cli
cwtl
or
shlb
push
outsl
mov
dec
push
adc
pusha
lods
les
aad
pushf
aad
mov
cmp
xchg
push
or
sti
repz
adc
pop
mov
mov
mov
push
xor
adc
mov
mov
ret
js
or
dec
jle
sbb
mov
cmpsl
fadd
jle
adc
rorb
ret
inc
push
mov
nop
jle
fs
fsubr
shll
adc
es
imul
mov
andl
xchg
int
sub
mov
outsl
jne
stos
push
divl
cli
pop
clc
cmc
sub
int
jnp
ss
add
cld
rorb
shrb
push
adc
ja
mov
adc
sar
add
xchg
xlat
jno
sti
sbb
mov
std
cli
imul
lahf
dec
and
pop
aad
fldcw
inc
sub
mov
jge
cld
loop
xor
icebp
cld
jne
pop
bound
push
rcll
push
push
or
cmpsb
jae
das
and
sbb
sub
or
xchg
push
enter
sub
sub
adc
and
fwait
arpl
jl
cli
pop
in
push
mov
mov
repnz
daa
jne
add
icebp
add
mov
pop
test
les
push
mov
push
mov
repz
dec
xor
jle
stos
adc
cltd
ja
into
daa
cli
test
sbb
cmp
call
repnz
or
sbb
je
adc
out
add
cld
pop
xchg
stos
xchg
mov
adc
mov
movsb
push
mov
lods
ret
aad
cltd
jnp
repz
push
pop
dec
jg
dec
pop
pop
pop
cltd
mov
cwtl
push
sbb
out
mov
sbb
and
xlat
sbb
xchg
fwait
pop
add
adc
popf
sub
and
in
decb
cli
jnp
inc
push
push
inc
rolb
lret
mov
sbb
push
and
xorb
inc
arpl
add
cltd
xchg
dec
jle
xorb
stc
jle
mov
push
push
mov
imul
sbb
es
sahf
and
out
lods
das
xor
cs
adc
push
in
aad
pop
std
mov
rclb
mov
test
xor
xchg
adc
mov
mov
jb
or
lret
fs
mov
rcr
cmc
xor
mov
jecxz
dec
cli
cmp
dec
xchg
add
or
jne
das
icebp
int
jbe
push
mov
jnp
mov
hlt
mov
fisttpll
sub
sbb
sbbl
roll
test
mov
jns
movsb
fnstenv
leave
lret
rcrl
scas
push
out
ret
push
xor
add
pop
xor
icebp
fwait
sub
sbb
sbb
dec
jns
out
mov
pop
lret
xlat
rcrb
pop
stos
lret
mov
push
sbb
mov
cmp
les
das
lahf
sti
mov
mov
dec
outsb
mov
fwait
incl
mov
mov
push
lret
mov
call
je
and
jo
mov
inc
movsl
add
arpl
pop
sub
cmp
push
imul
sahf
jg
lds
repnz
outsb
cld
xlat
sbb
fadds
cltd
xchg
mov
in
mov
mov
mov
mov
mov
cmpl
jbe
mov
cmp
cmp
ja
pop
xorb
push
xchg
int
aad
mov
or
out
inc
test
push
test
push
cli
lock
xchg
xchg
jbe
fcmovnbe
divb
xor
popa
pop
and
iret
push
push
xorb
cld
enter
dec
lds
mov
scas
inc
mov
adc
jno
cltd
fcompl
xor
ret
pop
dec
sbb
cs
mov
dec
push
loop
mov
mov
ror
imul
js
andb
pusha
or
dec
fcmovu
and
test
ret
daa
add
push
sbb
out
insb
inc
pop
in
sbb
jno
mov
lods
xorb
pop
mov
mov
das
enter
sbb
add
mov
loopne
mov
stos
cmp
xchg
sbb
jle
push
xchg
cmpsl
push
aaa
lret
insb
loop
lods
js
xor
int
jb
jnp
dec
out
push
pop
aas
test
jbe
mov
fstl
loop
aaa
mov
adc
aam
decl
adc
stos
rorb
sub
test
loopne
jnp
inc
inc
data16
lock
cmp
or
loopne
xchg
adc
rcrb
ret
leave
mov
mov
inc
cmc
dec
addr16
data16
fwait
lods
stc
ret
mov
add
lcall
daa
cmp
add
push
xor
aas
pop
nop
sub
inc
push
cmp
mov
das
jbe
call
rcrb
loopne
icebp
and
xchg
imul
fs
dec
mov
xchg
test
movsl
sub
lods
add
jne
adc
push
push
cmp
pusha
jmp
movb
movsl
cmp
pop
fwait
xchg
add
xchg
imul
mov
ficomps
pop
xchg
mov
stos
push
push
mov
loop
sbb
push
fcmovbe
test
loope
jecxz
add
repnz
xchg
lds
shlb
cmp
mov
int3
adc
lret
push
and
and
adc
dec
dec
pop
test
xchg
or
sahf
sbb
pop
lret
stos
push
jns
nop
pop
out
std
loope
add
sbb
mov
dec
pop
lea
xchg
push
stos
mov
pop
dec
cmpsl
push
xchg
ljmp
aaa
xchg
dec
push
fistpl
pushf
ss
mov
bnd
pop
shll
shl
sbb
or
ret
push
cmp
pushf
adc
cmpsb
cltd
push
or
jnp
and
inc
loop
lcall
stos
cmp
mov
test
cli
fcmovnu
les
in
inc
ss
cmp
fisubs
je
ss
cmpsl
in
jbe
mov
mov
sti
cmp
insl
dec
add
in
outsl
imul
outsl
or
pop
and
iret
ret
lret
loop
xor
test
cltd
roll
rolb
test
sbb
fucomp
and
jecxz
pop
xchg
xchg
mov
cmp
push
out
pop
cwtl
mov
sub
je
out
add
fsubs
add
dec
jge
xchg
mov
cmpsl
dec
inc
test
jecxz
popa
jecxz
aaa
mov
fcmovu
jns
subb
imul
push
movsl
dec
fisttpl
loop
mov
xor
lcall
pop
cmp
fldl
mov
jno
loop
inc
sar
inc
dec
or
scas
movsb
ss
inc
add
sbbl
push
xor
mov
mov
push
jns
cli
sub
lock
push
addl
lret
sub
popa
sti
stos
add
rcll
mov
aad
cwtl
sti
es
test
ss
jg
or
or
popf
cwtl
mov
cli
jns
mov
adcl
iret
fmuls
sub
jge
into
add
xor
mov
jns
inc
test
out
lcall
mov
das
fs
cltd
inc
int3
push
adc
out
enter
jg
cmpl
loop
xchg
pop
mov
stc
mov
stos
sub
fildl
or
outsb
push
cmc
in
lret
adc
testl
jg
movsl
push
clc
jl
fsubrl
lahf
shrb
sbb
loopne
ds
stos
mov
mov
inc
pop
cmp
xor
ret
inc
outsb
mov
adc
rorl
mov
movsb
add
lret
jno
cli
sahf
and
loope
pop
xchg
jno
int3
fimuls
xor
add
push
xlat
mov
jns
add
out
es
adc
fbstp
sub
push
jae
testb
lock
xchg
scas
mov
jb
into
dec
sbb
or
mov
gs
sti
lcall
cld
sbb
rcrb
mov
icebp
jo
scas
popf
hlt
dec
in
enter
jno
aad
or
add
push
fs
test
push
popa
sbb
mov
nop
push
lds
mov
lahf
cmp
mov
pop
xchg
fdivrs
cmpsb
test
ret
inc
cmp
inc
pushf
pop
outsb
out
icebp
jne
enter
adc
enter
mov
or
daa
sbb
and
adc
jmp
or
jge
imull
in
and
aad
hlt
push
out
sbb
fdiv
das
js
cmpsl
insl
mov
dec
arpl
shll
mov
sahf
jo
hlt
push
jmp
nop
mov
aad
cwtl
cmp
add
rdmsr
outsl
dec
lods
decb
outsb
in
repz
sbb
and
or
inc
aad
dec
or
inc
arpl
mov
test
cmpsb
mov
xchg
out
iret
fldl
sbb
daa
jecxz
std
imul
repz
adc
lret
mov
in
sarb
xorl
in
inc
fists
jl
mov
je
sbb
cli
lret
and
cmp
dec
test
or
mov
jle
pop
fwait
pop
ja
fidivrl
out
cmp
ficomps
popf
aaa
mov
stos
or
pop
out
aam
mov
jb
movsb
xchg
jmp
cld
pop
fbld
sbb
mov
mov
xchg
test
pop
cmpsb
mov
xor
xchg
xor
aas
mov
adc
scas
pusha
pop
pop
adc
fidivrl
jne
push
pushf
ljmp
sahf
pop
iret
mov
mov
fstps
ja
sub
push
add
mov
ds
pminub
shl
loopne
sub
hlt
mov
rorb
or
rolb
xor
sahf
scas
push
scas
shll
adc
mov
pop
jecxz
pop
test
aam
pop
xor
adc
mov
push
imul
jl
push
mov
cli
adc
pushf
add
idivl
bound
cmp
in
sbbb
pop
pusha
pop
rol
pop
and
in
icebp
pop
jle
cmp
pop
add
std
and
cmp
leave
add
ret
lods
aam
pop
pop
add
push
pop
sub
push
sbb
add
mov
lea
pop
aam
icebp
adc
pop
cwtl
xchg
mov
dec
insl
jg
mov
aad
push
mov
and
sbb
data16
sahf
outsl
xor
data16
mov
and
adc
fwait
xchg
dec
fldcw
arpl
je
insl
faddp
pop
mov
push
bound
mov
sbb
lock
scas
xor
jo
mov
dec
push
cmpb
or
arpl
dec
pop
js
mov
daa
scas
adc
ret
stos
mov
mov
dec
enter
js
int
or
icebp
outsl
add
or
leave
jp
adc
push
cli
xor
adc
outsl
sub
or
sti
or
mov
pop
inc
mov
mov
pop
jecxz
les
push
stos
jb
les
xchg
hlt
divb
jnp
pop
jg
lock
int3
xchg
addl
inc
sub
sub
fwait
dec
in
inc
jns
negl
lock
in
fmulp
or
not
push
push
jg
scas
pop
adc
mov
stc
cld
add
bound
insb
sbb
aaa
sub
xchg
stos
into
dec
mov
and
nop
mov
outsl
push
icebp
mov
cmpsb
push
into
xor
mov
adcb
test
les
pop
and
loope
sbb
add
mov
mov
popa
movsl
and
sti
xchg
mov
and
sub
xchg
mov
scas
cli
cmp
mov
lds
lcall
cmc
inc
inc
jno
mov
mov
in
in
ret
movsb
cltd
in
rcl
out
fs
jne
shlb
jmp
leave
jle
pop
fnstcw
xchg
jl
sarb
xchg
mov
sub
inc
mov
cwtl
cmp
mov
cmpsl
test
add
cli
sti
dec
add
pop
movsb
jb
push
lods
stos
jecxz
xlat
adc
mov
je
lds
fidivrl
lods
mov
sahf
add
cld
and
cmp
std
test
hlt
inc
adc
inc
push
mov
xchg
std
lods
sahf
test
icebp
adc
fnstcw
sub
mov
popf
arpl
fistps
outsl
mov
loop
movsb
stc
sbb
pop
in
cmp
arpl
std
movsl
cmp
pop
xchg
xorl
fwait
std
addr16
insb
insl
ds
int3
xlat
sti
mov
lret
mov
mov
fwait
loopne
push
mov
xor
bound
or
arpl
loope
or
lds
jecxz
xor
lea
xor
lahf
cmp
mov
shll
rcrb
cmp
jg
mov
sub
jge
adc
movb
add
cmp
cmc
jns
push
or
sub
xor
popf
negb
aam
jle
xchg
fnstsw
sbb
cmc
ss
daa
push
int
lods
sub
inc
imul
fiadds
fildll
push
data16
mov
loope
call
loop
mov
xchg
pop
divb
in
xorb
dec
xchg
jge
loopne
mov
mov
push
adc
and
loopne
pop
xchg
popa
repnz
dec
xchg
jmp
repz
mov
sahf
aad
or
or
and
pop
cs
arpl
mov
and
mov
inc
fmuls
pop
add
xchg
inc
sahf
adc
cld
movsb
out
cli
es
or
in
mov
imul
icebp
imul
inc
out
add
pop
outsl
inc
mov
loopne
xlat
pop
out
xlat
xor
jmp
cmp
lods
dec
and
fildl
pop
fs
mov
pop
je
mov
cltd
fnstsw
cmc
mov
dec
inc
pop
in
xchg
outsb
add
cmpsb
lock
jno
mov
mov
shr
adc
shl
or
in
sbb
mov
mov
xchg
inc
lahf
fs
mov
mov
xchg
fst
das
pop
lds
lods
cmp
loop
pop
adc
sbb
int3
mov
into
push
lock
jns
cs
lahf
stc
mov
scas
or
mov
mov
xor
stos
repz
mov
dec
jp
mov
hlt
mov
sub
imul
sub
mov
inc
lret
or
das
sbb
sub
jle
inc
xorb
jp
xchg
iret
pop
and
and
mov
arpl
lock
outsb
dec
int
push
int
push
dec
dec
fdivrl
sub
shlb
adc
mov
movswl
push
outsl
pusha
mov
daa
push
ja
add
inc
mov
adc
pop
outsb
lret
les
and
mov
mov
aam
sub
pop
fwait
jb
pushf
in
mov
sbb
add
fidivrl
cmp
sbb
cltd
push
jns
mov
sbb
lea
arpl
cmpsl
js
mov
mov
cmp
xchg
daa
subl
scas
lret
mov
lret
clc
lods
jg
js
xor
cmp
stos
jnp
aas
sbb
inc
loop
imul
xlat
jo
pusha
ror
arpl
pop
sbb
mov
pop
loopne
jp
cwtl
mov
in
test
fldt
adc
dec
sbb
jno
test
into
enter
xor
xor
mov
jo
stos
ret
xchg
and
mov
int3
ret
mov
aam
xchg
push
mov
enter
popa
jae
incl
cmc
pop
je
mov
les
mov
out
mov
mov
mov
out
push
stos
out
mov
dec
test
lahf
pop
xchg
int3
repnz
sti
cmp
ficoml
pop
xchg
inc
sub
loope
fmuls
testb
mov
dec
ret
ja
inc
stos
out
xchg
call
in
jbe
jbe
call
data16
jns
les
xor
add
adc
mov
bound
popf
and
inc
clc
and
xchg
inc
stos
xchg
test
jmp
dec
xchg
add
cld
mov
loope
loopne
movsl
jno
sbb
stc
es
xchg
cmpsb
mov
mov
test
push
sub
decl
into
jl
xor
push
pop
inc
ud2
in
test
lds
aad
push
xor
jbe
inc
xbegin
test
ret
sbb
mov
or
inc
pop
js
mov
xor
inc
xchg
mov
sub
and
rolb
scas
pop
push
mov
and
xchg
xchg
inc
leave
lods
mov
neg
dec
push
pop
mov
dec
arpl
xchg
mov
out
xor
mov
mov
roll
lock
mov
dec
cmc
leave
sbb
insl
sub
subb
push
and
mov
pop
inc
dec
and
pop
mov
add
pop
xor
and
fwait
addr16
or
pop
sub
sbb
fiadds
lea
mov
jne
and
icebp
xchg
lods
sub
dec
add
inc
imul
xor
es
mov
xchg
or
sbb
xor
xchg
insl
aam
fnsave
jo
psllw
cwtl
aas
mov
lods
out
cmpsl
hlt
xchg
rorl
jle
mov
dec
filds
inc
lret
inc
lock
fwait
jmp
lret
cvtdq2ps
pop
push
gs
sub
pop
les
and
cs
sbb
and
or
or
lcall
push
pop
xchg
sub
add
adc
movsl
jb
sbbb
mov
jb
ljmp
mov
das
stos
xchg
pop
adc
adc
sbb
dec
xor
adc
lcall
in
popf
lcall
ss
stc
push
add
mov
sub
gs
stc
popf
scas
rol
inc
packuswb
je
push
int3
testl
and
in
hlt
clc
outsl
test
xchg
jo
adc
popa
sub
sub
stos
les
test
push
imul
pop
out
cmpsl
out
out
mov
xor
repnz
filds
push
fisubl
test
xchg
std
xor
rcr
xchg
cmpsl
push
decl
mov
sub
jecxz
ret
inc
xchg
loopne
cmp
push
inc
repz
or
je
fdivl
mov
cmp
or
jns
idivl
roll
outsl
xchg
je
jecxz
xchg
sub
jbe
mov
cmpsl
add
xlat
dec
pop
aad
mov
mov
mov
pop
aam
push
dec
jns
dec
popf
pop
mov
cmp
mov
sub
daa
and
xchg
leave
loopne
aas
mov
scas
xor
hlt
mov
and
push
cltd
arpl
add
pop
cs
cmp
mov
inc
rorl
inc
pop
jg
std
in
and
sbb
scas
out
dec
xor
imul
xor
aas
push
sbb
pop
pop
mov
cmpsb
jmp
faddl
adc
xchg
cmp
inc
clc
repz
xchg
jle
in
xor
scas
inc
jns
or
push
inc
and
mov
xchg
repnz
push
sub
mov
std
cmpsl
or
jo
jg
bound
push
push
ja
mov
bound
fidivl
pushf
lods
add
push
xchg
jp
icebp
stos
fcmovbe
xor
xchg
push
iret
inc
rcr
push
dec
or
shrl
sub
sub
in
xlat
add
sub
xchg
mov
pop
push
aam
mov
xchg
add
lock
mov
inc
mov
fcomip
cmp
fwait
cmp
xchg
add
xchg
ffree
xchg
cmp
sbb
mov
mov
out
push
sarb
xor
pop
lds
mov
loopne
xchg
push
mov
loop
xchg
mov
pushf
rcr
add
push
and
jmp
pop
sub
lea
frstor
inc
or
sbb
mov
shl
aaa
addl
or
sti
lret
adc
in
xor
loopne
ja
imul
push
xchg
inc
insb
mov
lret
lods
test
pushf
inc
sti
inc
sti
xor
inc
ret
leave
or
dec
in
push
mov
sub
push
sub
cli
mov
loope
in
stos
and
mov
mov
jecxz
jge
xchg
outsb
jb
pop
lods
js
mov
add
out
mov
pop
cltd
pop
rolb
cmp
int3
lods
setns
scas
shl
inc
jg
xlat
xchg
mov
push
mov
sub
inc
bound
mov
pop
cmpl
sarl
adcb
mov
sub
jae
jo
out
jl
jne
adc
sbb
stos
sbb
cmpsb
rorb
or
sbb
pop
cmp
pop
cltd
fwait
or
jae
cwtl
xchg
mov
push
mov
addl
or
push
shlb
cmp
sbb
sbb
pop
mov
mov
cs
repz
cltd
jbe
sub
les
sbb
lret
ja
cld
mov
outsl
inc
test
xor
ret
jo
jp
in
lret
popf
mov
sbb
mov
inc
movsb
jb
and
in
and
jb
xchg
sub
popf
pushf
xchg
inc
ret
sbb
mov
sbb
adc
dec
bound
and
repnz
pusha
sahf
sbb
shl
jecxz
fsubs
or
mov
into
psubw
push
scas
enter
arpl
mov
testl
into
lret
test
out
cmp
js
jl
xchg
xor
push
pop
pop
dec
out
movb
fnstenv
adc
mov
arpl
fiadds
xor
jnp
add
jmp
jle
cmp
lahf
aad
negb
mov
out
pop
adcb
mov
cmpsl
mov
mov
sahf
int
ja
pop
pop
jge
jmp
bound
std
dec
and
push
mov
enter
out
add
inc
frstor
mov
adcl
cmpsb
sub
stos
and
movb
scas
fstpl
mov
dec
xor
mov
and
sub
mov
cli
jns
repnz
mov
fs
sbb
cmc
mov
xor
in
jne
xor
mov
push
je
inc
call
cmp
out
inc
or
pop
test
cmp
clc
lret
iret
mov
mov
rcrl
jg
fcoms
add
lds
push
nop
xor
daa
fdivs
push
mov
lcall
jo
jge
iret
adc
jbe
rcrb
xchg
pop
cli
pop
loope
pop
push
in
je
das
xchg
rorl
les
dec
sbb
xchg
mov
imul
push
cli
sbb
in
dec
dec
mull
dec
lock
inc
and
fnsave
jmp
jb
inc
sub
test
xchg
btr
xor
push
jmp
push
stos
and
ret
cmpsb
mov
mov
pop
lods
push
xor
sub
jae
js
idiv
lahf
aas
xor
daa
inc
fs
and
xchg
mov
cmp
and
push
jmp
mov
aam
push
insl
lock
shl
lods
rclb
push
jl
mov
addr16
inc
mov
fadd
pop
mov
sbb
sub
push
cmpl
jb
out
cmp
add
cmpsl
insb
push
fstpl
push
jne
xchg
pop
stc
push
icebp
xlat
cmp
mov
jb
lock
fstps
xchg
inc
xor
add
mov
ror
pop
jae
les
popf
xorb
movsb
push
mov
push
dec
mov
jge
jl
pop
adc
sbb
cmc
cmp
and
mov
push
and
out
clc
data16
scas
cmp
fimuls
or
lret
lahf
dec
mov
and
pop
outsb
test
cltd
mov
lahf
inc
adc
or
sub
adc
std
jg
lea
push
and
lods
rcr
xor
sub
cmpl
cmp
insl
imul
pop
insl
notl
aas
push
loopne
loop
mov
push
roll
mov
or
out
cmpsl
lods
lcall
adc
fdivl
cs
idivb
cmc
sbb
addl
lds
adc
bound
cmpsb
pop
outsb
pushf
rcrb
sti
loopne
push
push
shrb
xor
fidivl
scas
or
arpl
cmc
xor
pop
cltd
sub
dec
jne
iret
shlb
sbb
test
pop
mov
cmpsl
add
int3
cs
cmp
pop
mov
mov
push
int
imul
movsb
shrl
push
call
pop
dec
daa
repnz
int
add
out
stc
jbe
int3
add
out
jp
xor
outsl
lcall
pop
aad
inc
sahf
test
das
loop
mov
outsb
outsl
mov
dec
test
leave
rorl
out
divb
not
mov
in
mov
fwait
lods
pandn
cmp
pushf
xchg
lds
add
dec
pop
scas
dec
adc
mov
xchg
cmpsb
cmp
pop
sbb
xchg
pop
mov
out
in
adc
xor
in
sub
shl
xchg
adc
sbb
fnsave
push
jg
outsl
mov
sbb
call
mov
mov
mov
mov
call
mov
test
mov
movsb
fildl
dec
dec
xor
fs
sarb
pop
mov
pop
fs
sahf
fidivs
mov
dec
cli
repz
jmp
mov
cmp
jno
enter
xchg
sbb
xchg
call
xor
test
hlt
arpl
aas
mov
cmp
in
mov
lods
enter
sbb
popf
mov
push
jnp
lret
bt
mov
mov
mov
loope
das
xor
fstps
paddd
paddq
psubsb
inc
ljmp
or
sub
sahf
inc
jp
in
sahf
sub
push
shlb
push
inc
jge
jno
movsl
das
mov
gs
adc
inc
js
cli
sub
dec
dec
daa
stc
fidivrl
pminub
ljmp
or
lock
and
mov
cs
fcoms
cltd
jp
outsl
loop
rcr
push
bound
fists
int3
mov
dec
and
xchg
lods
push
mov
icebp
aad
loop
xchg
mov
mov
icebp
adc
add
ret
imul
and
push
ja
xchg
adc
in
into
in
push
imul
mov
subl
sub
xchg
xor
scas
ret
fcmovnu
jns
sub
jo
sbb
nop
adc
pop
inc
andl
dec
add
stc
movsl
xlat
inc
out
or
mov
jbe
rcrb
push
iret
sub
mov
cli
pop
inc
cmp
cmc
push
xchg
or
or
xchg
or
cmpsb
inc
push
loopne
jle
aaa
mov
jmp
fucomp
daa
stos
cli
mov
inc
cwtl
mov
or
pusha
sbbl
xchg
loope
pop
movl
jg
mov
lcall
repz
xor
icebp
enter
ja
xor
cld
adc
mov
push
scas
mov
jmp
add
push
fisubs
pop
mov
jg
cmc
dec
jmp
and
mov
adc
negb
in
or
lods
jo
sbb
test
add
xchg
lods
inc
lea
sbb
lock
dec
gs
or
sub
xchg
jne
cli
mov
shl
push
pop
leave
add
xorl
jmp
mov
popa
sub
mov
lret
leave
jb
js
popa
in
arpl
and
xor
clc
xorl
idivb
sbb
push
pop
or
clc
jle
pop
cmp
pop
scas
test
insl
mov
push
jg
xor
xchg
and
push
push
pop
mov
mov
push
lret
pop
mov
in
dec
std
pushf
mov
cli
insl
insb
enter
lret
repz
or
cmpsb
mov
enter
dec
stc
xchg
loop
call
or
and
test
fwait
jno
ret
test
sub
jl
sti
mov
jecxz
cmp
shrl
int3
cltd
pop
dec
pushf
in
dec
movsl
jnp
mulb
inc
cld
ja
jl
ficompl
lahf
imul
xchg
cmp
push
jle
dec
in
pop
aad
repnz
mov
enter
pushf
sbb
sbb
xchg
xorl
mov
pop
inc
loop
call
and
out
pushf
inc
xorl
fimuls
stos
mov
mov
int3
jo
hlt
xchg
jb
push
add
xchg
inc
xor
pop
lcall
jge
add
cltd
sub
or
stos
pop
ret
mov
add
out
mov
rolb
inc
xchg
dec
push
enter
ffree
sbb
adc
push
sar
orl
fnsave
sub
add
andb
pop
aaa
inc
cs
xor
fimuls
xor
cmp
lahf
aaa
mov
scas
mov
lds
adc
cwtl
xchg
jbe
in
sbb
fucom
inc
movl
out
sbbb
push
cmp
arpl
nop
xchg
mov
loop
fucomip
fadds
shll
mov
xor
int
mov
push
outsb
mov
pop
lds
xchg
insl
mov
push
sbb
and
loope
sbb
je
adc
inc
std
popa
cmp
in
arpl
test
add
frstor
xchg
popf
sbb
cmpsb
push
inc
sbb
lds
or
xor
add
divl
in
test
cmp
and
ss
leave
ja
jg
in
lret
mov
nop
push
inc
adc
sahf
int
mov
push
jbe
mov
sub
fisttpl
push
std
cs
pop
sub
adc
push
outsl
pop
sbb
scas
jl
cmpb
in
repnz
icebp
mov
sti
dec
sbb
or
mov
jl
dec
pop
jns
jne
or
inc
aas
sbb
btc
dec
jbe
les
mov
dec
sub
in
in
mov
inc
sarb
jle
dec
pop
mov
aam
ljmp
cmp
pop
cmp
mov
repz
cmpsl
and
flds
ret
insl
bound
fdivrl
pop
push
std
bound
insb
fildl
test
stos
push
adc
sti
in
mov
pop
lods
fwait
outsb
xchg
adc
pop
push
js
aad
cmpsl
idivl
jmp
aaa
stos
and
leave
pop
enter
inc
inc
jae
mov
loope
push
daa
int3
test
test
inc
xchg
rcrb
inc
jno
inc
outsl
enter
xor
jne
mov
push
fucomip
stos
pushf
mov
inc
vmovaps
add
pop
push
pop
sarb
icebp
gs
insb
les
rcll
add
pop
pop
and
and
cmp
test
pop
stc
in
incl
scas
ja
mov
or
lahf
and
nop
cltd
sbb
sub
dec
pop
mov
adc
dec
dec
outsb
ljmp
sub
enter
inc
fidivrl
sub
mov
aaa
sbb
jp
rcrb
repz
and
lods
inc
popl
mov
fsubp
stos
mov
cmp
cmpsb
and
jno
jmp
sub
xchg
push
inc
cwtl
dec
sub
mov
pop
mov
dec
inc
dec
mov
sub
out
xlat
lahf
sub
ds
shll
pop
shll
jb
pushf
sub
mov
pop
nop
xor
test
sub
dec
je
inc
push
loope
adc
in
jle
push
mov
enter
mov
sub
test
xor
subb
xlat
mov
sub
das
loop
add
pop
in
sbb
xor
outsl
shrb
movsb
xchg
in
jno
add
ljmp
jmp
mov
lcall
in
mov
cmp
push
mov
pop
pop
dec
inc
add
imul
cmpsb
stc
mov
pop
scas
mov
out
mov
adc
es
insl
dec
das
xor
mov
int3
test
pop
js
xor
jbe
and
mov
pop
or
dec
dec
lret
inc
lret
into
mov
add
call
test
gs
lods
fldl
frstor
shlb
hlt
adc
test
ret
mov
inc
enter
in
push
jp
out
insl
pop
movsl
and
jb
mov
mov
stc
mov
mov
ds
iret
ja
dec
mov
leave
clc
pop
dec
dec
mov
and
lods
xchg
adc
fiaddl
inc
imul
addr16
lds
scas
jo
mov
into
sti
sti
mov
ss
sarl
fisttpl
mov
push
pop
pop
mov
loope
test
std
xchg
rclb
data16
jle
leave
sub
dec
inc
push
in
push
adc
push
shrb
and
mov
in
cli
sbb
mov
dec
bound
stc
pop
scas
lcall
loop
add
jmp
arpl
fistl
and
fwait
decl
lods
aam
sahf
out
push
scas
js
mov
aas
xchg
adc
mov
icebp
sbb
add
push
xlat
daa
sub
inc
push
stos
mov
add
or
insl
jnp
lods
insb
mov
ds
jno
std
mov
daa
sbb
sub
sub
insb
and
push
in
mov
loope
lock
push
add
in
dec
fyl2xp1
pop
pop
xchg
dec
insb
ds
out
cmp
out
test
dec
sbb
aas
xor
mov
out
sbb
in
or
movsb
into
ret
dec
fistps
inc
popa
jecxz
push
or
dec
xorl
fistps
mov
lods
pop
stc
les
mov
mov
out
mov
cs
pop
push
mov
jle
clc
xchg
adc
gs
sbb
push
jb
pop
mov
inc
adc
jp
cmp
or
das
jmp
pop
xor
sub
inc
push
push
jns
rolb
cmp
stos
call
pop
dec
in
sub
sub
add
mov
pop
jecxz
ljmp
pop
xchg
mov
push
pop
mov
lods
setnp
mov
dec
sub
pop
popa
push
adc
xchg
and
icebp
aas
jecxz
mov
popf
jne
fwait
stos
mov
mov
andl
mov
push
gs
and
push
cmpsl
push
pusha
jg
xor
repz
jecxz
xchg
push
inc
adc
imul
jecxz
jae
adc
idivb
dec
dec
aam
push
mov
loope
inc
gs
je
xchg
xchg
jle
cmp
adc
inc
fs
fnstenv
insb
jb
call
lock
out
push
xchg
lret
cmp
sub
push
popa
push
and
jb
and
out
out
cmp
test
and
sub
add
adc
jae
mov
aad
arpl
sahf
stc
adc
stc
out
test
push
pop
sbb
jl
mov
nop
pop
mov
xor
insb
daa
ljmp
stos
xchg
pop
je
ret
dec
xchg
and
mov
adc
ss
mov
insb
jg
cmp
add
test
aad
gs
mov
adc
lock
repnz
xlat
dec
les
cmp
jb
mov
aas
test
mov
cmp
cmp
je
insb
out
inc
cmpb
mov
and
and
add
mov
lods
cwtl
fxtract
adc
ss
sub
in
or
in
jbe
mov
insl
add
cs
mov
addl
in
fwait
iret
adc
and
xchg
add
ret
inc
pop
and
dec
fdiv
jb
add
jle
rcrb
lods
xchg
repz
scas
inc
movsb
pop
add
testb
arpl
mov
out
fcmovbe
std
scas
xchg
and
lods
xchg
mov
pop
test
lds
lret
sbb
pusha
mov
inc
loopne
fisttpll
fwait
les
pusha
jne
and
cmpsb
dec
cwtl
test
pusha
cmp
sbb
or
and
and
cmp
xchg
jno
test
ljmp
mov
xor
inc
cmp
dec
call
mov
fldt
lcall
inc
pop
mov
mov
jecxz
push
jo
jg
data16
xchg
movsb
cld
mov
mov
ret
into
push
cmp
xor
adc
pop
cmc
pop
popa
cltd
mov
lea
fs
in
xchg
mov
mov
and
sarl
cmc
stc
insl
ret
pusha
addr16
sub
jo
pop
cmp
cmp
jb
sbbb
or
test
add
cwtl
mov
jo
sysenter
and
dec
xorb
inc
les
jecxz
cs
push
or
mov
add
add
rolb
repnz
enter
in
add
lret
sub
mov
and
jno
fists
jns
push
jo
pop
push
mov
jns
sbb
pop
pushl
cmpsb
es
cld
cmp
clc
fldz
fistl
xchg
pop
je
jnp
scas
jecxz
or
jg
pop
sub
xor
mov
jbe
enter
pop
push
arpl
push
rolb
ret
adc
lea
lea
xor
dec
imul
dec
sbb
jl
stos
add
aaa
out
jmp
sub
cmpsl
xor
pop
je
push
jmp
sub
mov
fstpl
pmaxsw
subl
ljmp
or
lock
mov
sub
push
adc
aam
or
outsl
insl
or
ss
data16
fldl
call
push
jecxz
in
and
jg
call
mov
iret
daa
pop
hlt
aaa
sub
lahf
adc
scas
jae
sub
mov
aad
test
mov
shlb
add
lea
ss
test
in
loop
mov
sti
shrl
das
inc
in
push
int
hlt
add
mov
cmp
xchg
pop
cmp
popf
xchg
pop
ljmp
out
mov
adc
add
jge
aad
mov
cmp
icebp
adc
fcomps
out
fdivs
stos
sti
pusha
or
xchg
xchg
mov
mov
fs
jbe
add
js
cmpsl
push
xchg
xchg
jo
stc
cmp
popa
xor
iret
sbb
mov
cmp
mov
cwtl
fidivrs
xchg
repnz
into
pushf
popa
outsb
cltd
fs
loope
aam
mov
pusha
jecxz
dec
mull
clc
scas
sbb
mov
icebp
mov
xchg
pop
add
pushf
cmp
push
nop
lcall
mov
push
orb
mov
jp
daa
mov
push
dec
mov
cmpsl
mov
lret
push
inc
or
test
dec
or
mov
mov
mov
in
add
xor
leave
cmc
insb
movsb
jno
add
cmp
lea
in
aam
xor
loop
sarb
or
aad
sbb
dec
pop
inc
call
cwtl
loopne
mov
and
cmp
aam
stos
in
jne
mov
xchg
int3
rorb
xor
jecxz
or
out
jle
mov
xchg
mov
mov
mov
call
cmc
lea
cltd
test
inc
std
lcall
mov
add
aas
adcb
cs
xchg
xchg
fildll
jno
insb
imul
push
adc
add
dec
lcall
jbe
andb
stos
or
mov
fcmove
xchg
rorb
pop
sub
lods
ja
push
pop
or
addb
sub
arpl
mov
pop
ret
sbb
sahf
int
mov
adc
push
scas
adc
scas
shlb
call
hlt
cmpl
pop
push
pop
jecxz
adc
in
jo
or
xchg
jmp
sub
outsl
out
push
repz
bnd
sub
cwtl
ret
cltd
outsb
mov
lret
sub
decb
icebp
in
nop
lods
in
jg
ret
test
mov
fwait
and
pop
call
cmp
imull
rcrb
mov
loop
insl
stc
jg
ret
cmpsl
mov
cmp
push
insb
rcl
or
pop
sbb
mov
cs
cltd
jbe
mov
mov
mov
inc
cltd
aad
lret
mov
int
sbb
in
stos
cs
gs
repz
in
sbb
lock
jne
mov
xlat
jno
ds
cmp
push
prefetch
pop
out
xor
pop
dec
rcr
enter
pop
jns
scas
mov
test
adc
subl
xlat
enter
clc
dec
stos
mov
int3
div
adc
inc
inc
jl
repz
push
inc
xchg
enter
cli
dec
std
test
adc
scas
mov
sahf
jae
push
addr16
cmpxchg
andl
jno
cmpsl
and
pop
push
mov
add
int3
xlat
inc
mov
xor
adc
jmp
dec
in
mov
jno
in
stc
aas
cmp
dec
mov
xchg
xchg
xchg
jb
ja
push
cs
xchg
sbb
cmp
adc
pop
pop
inc
fnstenv
rolb
xor
dec
inc
push
mov
jns
mov
call
scas
or
sbb
ret
hlt
call
adc
insb
pop
add
jle
notl
or
out
jb
push
adc
mov
and
or
test
xlat
jbe
movsb
dec
cmp
pop
arpl
push
or
dec
ret
add
xor
add
push
cltd
sub
imul
in
and
or
das
cs
into
xor
pop
test
divl
lcall
call
fnstcw
pop
xor
xchg
fbld
xchg
sbb
in
jbe
cld
lea
int3
xchg
dec
mov
and
xor
mov
shll
push
mov
sub
out
out
pop
inc
in
xchg
dec
xor
fldl
xchg
push
rorl
popf
lock
or
and
xchg
jne
sahf
out
add
xor
fiadds
push
xchg
mov
cmp
std
out
aam
and
fsubs
loop
xor
add
add
xor
sub
nop
dec
addl
cld
mov
jmp
push
mov
or
push
mov
push
mov
pop
imul
pusha
repz
mov
dec
push
es
inc
rorb
jns
outsl
negb
mov
xchg
fildl
out
cmp
icebp
ret
aas
xchg
out
adc
aas
loopne
in
int3
outsb
loopne
aam
mov
push
dec
je
cld
jecxz
rcrb
je
in
add
mov
jb
test
testl
in
lcall
and
jne
iret
out
inc
sub
clc
pop
mov
ja
les
cmc
std
lods
sahf
lea
int3
mov
ljmp
ljmp
jmp
imul
es
mov
repnz
out
mov
or
xor
mov
fcompl
adc
je
cmp
sbb
inc
xor
dec
ljmp
cld
les
add
jo
xor
lds
cs
cmp
test
testb
cltd
jne
ds
xchg
mov
inc
pop
dec
pusha
mov
in
xchg
dec
mov
mov
mov
mov
and
popa
or
xor
xor
andl
xchg
jnp
sbb
sbb
rorl
cmp
adc
mov
bound
dec
adc
js
clc
fiadds
aam
pop
sbb
daa
scas
xor
daa
out
jecxz
push
xchg
ss
sub
sbb
sbb
inc
fwait
pop
dec
sqrtps
sbb
push
xchg
scas
or
push
in
jae
adc
adc
pusha
lods
inc
aaa
jl
ljmp
inc
xchg
cmp
mov
int
push
outsb
cli
dec
lds
aad
jge
mov
push
sbb
push
cmp
arpl
sub
jo
lock
int3
xchg
add
fdivrs
xchg
out
lock
adc
and
cmc
jo
lret
adc
into
mov
sub
and
flds
mov
icebp
cld
sahf
jmp
and
pop
mov
clc
or
push
push
push
out
push
mov
sbb
mov
push
mov
cmp
mov
mov
xorb
ja
jo
xchg
pop
fwait
adc
ljmp
mov
sub
push
adc
stos
pushf
jmp
mov
in
or
inc
ret
int3
adc
jb
pop
mov
xor
mov
xor
aas
ror
mov
push
rorb
mov
mov
mov
in
adc
sub
loope
cld
int3
shlb
daa
inc
jno
mov
jno
mov
mov
mull
inc
push
jecxz
data16
sahf
xchg
ret
out
or
aad
cmp
push
cmc
jno
test
xchg
repnz
mov
dec
fwait
push
mov
mov
pop
push
inc
stos
jb
xor
and
adc
xorl
jnp
sarl
jo
mov
inc
push
push
rorl
dec
push
hlt
jmp
pop
jge
loope
push
ja
or
orb
adc
sbb
cmp
push
or
lea
dec
sub
test
xor
test
push
sar
cmpsl
imul
je
popf
xchg
mov
mov
mov
xchg
stos
mov
popa
enter
mov
sbb
dec
lds
test
test
pushf
add
loope
mov
in
ficompl
into
xchg
cltd
xchg
aaa
xor
and
add
into
add
pop
cmp
movsb
ds
mov
and
push
outsb
pop
sub
fiadds
dec
out
jp
dec
loopne
push
int
int
repz
repnz
loop
adc
xor
jne
in
mov
sarl
stc
xor
sub
sbb
pop
push
aas
adc
es
and
fcoml
dec
fnstsw
loope
adc
or
dec
test
fisttps
mov
pop
push
js
cmp
mov
negb
outsb
inc
ficomps
push
test
stos
inc
pop
mov
cmpb
xchg
xor
mov
stos
jo
fwait
inc
test
and
jecxz
das
or
or
dec
bound
cmpsb
dec
mov
xor
mov
in
clc
jns
mov
js
cltd
inc
cli
push
push
imul
push
push
lcall
imull
dec
or
int
pop
clc
xchg
push
lock
in
jmp
mov
mov
in
mov
or
ljmp
in
in
bound
enter
fisubs
rol
bound
test
and
inc
push
cmpsl
mov
push
iret
add
dec
xor
ds
dec
int
jo
addr16
dec
mov
sbb
int
or
aaa
adc
popf
mov
cmp
cmp
mov
cmp
mov
sbb
call
adc
lock
icebp
daa
push
or
fcoml
cmp
jge
popf
sub
xor
adc
cwtl
sub
sub
and
cmp
inc
jbe
mov
xor
repz
xchg
push
xor
insb
insb
dec
mov
and
and
xchg
in
mov
and
js
inc
fsubs
dec
and
pop
mov
xchg
mov
lcall
inc
in
daa
repnz
xlat
pop
mov
loopne
icebp
loope
push
int
jmp
jecxz
inc
icebp
bound
mov
and
pop
jo
addr16
imul
lods
daa
push
pusha
orb
ret
test
dec
pop
repnz
sbb
loope
aas
pop
jnp
mov
test
inc
xchg
lods
and
test
xor
mov
out
ljmp
mov
ljmp
adc
sar
adc
xchg
lret
fdiv
subl
aam
add
pop
and
orl
or
int
outsl
idiv
sub
mov
push
movb
push
loope
sub
add
lods
add
loope
mov
jg
push
sbbb
xchg
adc
enter
add
and
imull
shlb
xor
je
xchg
popf
push
std
xchg
push
push
jmp
xchg
pop
jp
pop
add
jmp
mov
mov
pushf
jne
rclb
sbb
leave
push
push
xchg
inc
test
dec
add
cmpsb
shll
xchg
fs
add
adc
jg
fwait
add
lret
mov
mov
outsl
ljmp
xchg
mov
enter
ljmp
sub
outsb
sti
push
jge
cwtl
mov
mov
pusha
cwtl
mov
roll
test
bound
rcr
push
push
test
test
jmp
mov
mov
rcrb
movsb
daa
push
and
inc
sbb
ret
je
jl
jne
sub
xrelease
push
std
fcomip
cld
sbb
push
addl
pop
frstor
repnz
add
sub
xchg
dec
jp
adcl
rcl
scas
add
push
jl
sbb
cmpsl
test
shl
add
daa
fs
cmp
imul
push
ljmp
test
and
xchg
icebp
ret
lea
jae
lods
leave
or
sub
jns
xchg
push
lret
rcr
pushf
mov
inc
loope
loop
fs
jne
xor
jmp
mov
xchg
jns
faddl
jnp
in
nop
adc
xchg
push
mov
sub
cmp
out
das
fidivrl
fmulp
pop
out
pusha
aaa
lret
test
je
mov
add
xor
das
pop
nop
sarl
jae
dec
or
inc
cmpb
vprotw
sub
mov
xchg
imul
negl
xor
pusha
gs
out
cld
sahf
shrb
pop
cmp
or
xor
out
pop
xchg
daa
sub
xor
nop
in
stc
lret
xchg
call
loopne
mov
das
pslld
mov
addr16
dec
pop
or
loop
daa
dec
xchg
test
sbb
dec
aas
jmp
sub
aaa
fs
fs
dec
cli
fstl
pop
xchg
sub
xor
dec
inc
adc
sbb
jge
mov
jmp
sahf
and
pushf
sub
adc
outsb
cli
aam
cwtl
mov
adc
xor
pop
push
insl
xchg
cs
pop
ss
jmp
fcomps
mov
movsb
sahf
pop
stos
jns
jns
dec
dec
addr16
jl
mov
jne
cmpsb
xchg
push
and
test
or
cmpsl
add
xor
inc
shll
aam
ja
inc
stos
push
shlb
icebp
loop
ficompl
or
movsl
jbe
iret
movsb
dec
scas
and
stc
in
test
mov
js
jl
adc
sti
jmp
leave
pop
mov
mov
jg
cmpsb
xor
dec
test
outsb
jg
mov
adc
call
ljmp
test
aas
shl
or
icebp
lods
mov
mov
or
mov
in
in
jge
pop
idivl
and
pop
sbb
jl
adc
pop
ljmp
push
dec
jo,pn
mov
insl
scas
mov
inc
xchg
outsb
dec
fildll
mov
mov
ret
imul
push
mov
or
or
loop
add
jnp
das
popf
mov
jge
scas
adc
adc
ss
add
xchg
mov
mov
pop
outsl
rolb
sub
xor
arpl
push
scas
je
daa
clc
sbb
cmpsl
loope
out
mov
sbb
and
in
test
push
aaa
cmpsl
rcll
jge
jecxz
xor
push
sbb
clc
jae,pn
ljmp
addr16
inc
ja
xchg
xchg
dec
ljmp
jg
pop
enter
and
out
and
jns
decl
inc
adc
subl
std
lcall
push
outsl
test
ret
sub
mov
in
aas
or
sti
pop
in
xor
pop
dec
out
lret
xor
sbb
xor
lods
xor
or
pop
dec
das
mov
subb
and
pop
jo
dec
fisttpll
mov
mov
sub
sahf
add
jmp
xchg
in
sbb
mov
sub
mov
pop
add
fwait
add
je
inc
mov
mov
xor
lods
inc
jno
mov
test
inc
mov
test
jne
arpl
jae
mov
xchg
fldl
mov
lcall
ljmp
and
pop
lret
and
sbb
and
out
loope
xchg
js
inc
pop
adc
mov
jbe
out
dec
test
fstpl
in
inc
aas
cmp
xchg
dec
push
faddp
and
xor
mov
lahf
sahf
daa
dec
pop
repz
jge
insl
fidivrs
lret
dec
jge
adc
sbb
jno
or
jno
jle
call
pop
fwait
imul
pushf
jne
and
push
xchg
lods
xor
imul
aad
shl
xchg
mov
mov
pushf
call
or
subb
add
fdivrp
stc
ds
xchg
mov
arpl
xor
lcall
pop
cmp
adc
mov
cmc
dec
cmpsb
pusha
rol
sub
popl
xor
sbb
sbb
mov
stos
add
enter
pop
or
outsl
aas
stc
and
sbb
pop
mov
mov
xor
ds
inc
jp
iret
cmc
adc
dec
fs
test
adc
popl
insb
push
push
shl
pop
inc
jp
add
mov
mov
das
pop
mov
mov
movsl
and
lret
stos
aas
dec
xchg
js
mov
adc
pop
push
xlat
shrl
fwait
lods
daa
insl
std
inc
icebp
xchg
xor
sbb
aaa
iret
dec
dec
add
andb
cwtl
xlat
popf
sub
and
sub
aas
out
imul
push
fs
jmp
xchg
cli
rorb
aaa
std
pop
lret
lret
and
pusha
pop
add
es
ss
shll
add
cmp
pop
adc
cwtl
sbb
sbb
je
sub
js
mov
cld
pushf
pop
xchg
sarb
lret
repnz
push
mov
cmp
sbb
jne
in
sub
roll
loopne
ja
and
inc
push
lret
jb
add
pop
mov
cmp
mov
lahf
push
fwait
mov
jbe
in
fsubrl
aaa
push
mov
mov
jle
dec
icebp
inc
loopne
fldenv
cwtl
jmp
mov
aaa
lods
in
adc
sub
aam
incb
pop
jne
ret
push
test
add
xorl
shlb
inc
leave
push
mov
push
mov
mov
std
xlat
or
shlb
outsl
inc
adc
fsub
and
xor
pop
movsb
push
out
cli
dec
and
int3
sub
ret
jo
and
cltd
mov
dec
sub
subl
mov
mov
push
leave
out
adc
movsb
je
adc
dec
or
into
add
andb
mov
or
cs
xor
and
adc
data16
sarl
int3
insl
inc
sti
insb
in
mov
dec
ja
lahf
test
sub
xor
ds
cmp
lea
mov
mov
shll
cmp
in
dec
rorl
push
mov
push
jbe
mov
jle
or
mov
and
pop
pop
test
repnz
pop
repnz
or
jg
mov
pop
cmp
out
movsb
mov
testl
andb
movsb
sub
xlat
pop
xchg
mov
inc
imul
xchg
xor
add
xchg
dec
xor
pop
loope
push
jg
dec
ds
popf
fnstcw
pop
mov
and
push
xor
xchg
sub
add
push
into
imul
call
cmpb
shlb
lea
rclb
test
cmp
cmc
xor
or
lcall
adc
jecxz
ret
fldcw
in
shrb
addl
fnstenv
clc
fs
loopne
add
lret
dec
ja
xor
insb
imul
loopne
pop
push
xlat
xchg
inc
cwtl
mov
inc
mov
push
sbb
jg
mov
xchg
mov
sbb
push
pop
imul
dec
add
mov
cwtl
adc
cmp
sub
sub
and
out
mov
add
sub
ret
jb
out
add
jae
sbb
pop
cs
and
lea
fs
shll
into
inc
sub
jbe
push
lret
pop
jp
call
inc
jle
and
aaa
das
add
pop
ja
jbe
xor
leave
fsubl
aas
inc
inc
out
lea
mull
imul
and
mov
ret
imul
xchg
rolb
in
fdivr
xchg
pop
test
adc
jmp
push
sbb
mov
cmp
fstpt
inc
sar
inc
pop
ds
xlat
pop
stc
push
push
cmp
cli
enter
xor
je
pop
leave
test
fldt
push
cld
push
push
and
inc
inc
fisubrs
jbe
mov
lret
xchg
out
mov
sti
shl
cmp
cmp
adcl
cmp
jne
mov
mov
add
mov
mov
aam
pusha
js
imulb
push
pop
or
shlb
mov
pusha
xchg
int
push
inc
cmp
outsl
ljmp
aam
outsl
adc
jns
adc
ljmp
enter
enter
cmp
jbe
movsb
dec
add
and
sti
sub
outsl
cmpl
loopne
sbb
insb
or
aam
out
imul
or
je
sbb
aaa
push
jns
es
movsl
orb
cmp
xchg
add
sbb
mov
jbe
xor
push
sub
test
jg
add
push
fcmovu
std
mov
shrb
adc
std
adc
pop
and
push
insl
inc
inc
stos
jecxz
xchg
mov
dec
jo
adc
and
pop
sub
and
in
fs
nop
fsubrl
mov
subl
sete
pop
xchg
pop
cmpb
xlat
fidivs
frstor
dec
arpl
mov
in
mov
mov
std
jns
pop
mov
cwtl
lea
jb
movsb
dec
inc
repz
lods
fldt
inc
xlat
adc
jno
dec
push
in
mov
add
lahf
nop
pop
dec
mov
fnstcw
mov
hlt
jns
cmc
popf
loopne
popf
push
cmp
or
les
or
sbb
loop
push
or
or
ret
sub
lret
das
mov
aad
stc
mov
rorl
ud1
xchg
sub
int3
aas
sub
test
daa
popa
out
mov
fwait
mov
nop
mov
or
sub
dec
mov
andl
sbb
cmpsl
dec
in
enter
cmc
sub
adc
insb
xchg
lret
jecxz
jp
push
out
int
roll
rorb
andl
sbb
jo
in
clc
jnp
call
mov
pop
jb
sub
jecxz
cli
xchg
or
mov
jmp
push
into
adc
fisttps
push
iret
mov
xchg
mov
dec
leave
lcall
cld
pop
fldl
sbb
jmp
std
mov
enter
imul
in
dec
lahf
pop
lods
push
into
mov
in
and
pop
leave
xchg
dec
mov
push
pop
insl
sarb
mov
jp
ss
push
in
test
rcrl
fucomip
sti
orl
imul
push
ss
jne
sub
popf
imul
adc
dec
adc
pop
stos
xor
jge
test
insb
int
mov
loopne
sub
lods
data16
sub
xchg
jg
adc
or
jae
cmp
sti
adc
push
pop
cmc
shrl
push
ss
pusha
adc
jne
pushf
out
addr16
jne
es
jl
loop
or
int
dec
jge
xchg
mov
leave
idiv
imul
insb
mov
mov
lods
ds
inc
dec
ljmp
sti
xchg
mov
mov
into
jecxz
cwtl
movsb
cmp
mov
xorb
sbb
into
ret
xor
out
mov
mull
std
movsb
pushf
ret
pop
fdivs
inc
mov
jle
ja
cmp
aas
inc
xchg
cwtl
adc
outsl
mov
push
jne
adc
in
in
aas
push
inc
xlat
jmp
push
movsl
pop
sbb
lret
inc
lea
and
or
hlt
jp
mov
imul
out
movsl
sbb
push
push
mov
xchg
jecxz
test
adc
dec
or
lods
sahf
das
sahf
out
movsl
inc
fwait
ret
aad
lea
dec
push
mov
test
xchg
out
mov
jo
mov
popf
orl
jbe
mov
sub
jb
or
pushl
add
inc
xchg
imulb
call
cmp
cmp
xchg
popa
outsl
inc
jbe
mov
push
notb
fisubl
and
movsl
mov
add
pop
sbb
movswl
insb
outsb
cmp
bound
pushf
mov
pop
div
addb
pop
sbb
push
cli
xchg
sti
popa
mov
jg
jb
add
lcall
int3
mov
shrb
xchg
rorl
push
mov
push
pop
and
mov
test
jmp
mov
or
fdivl
mov
adc
outsb
and
sarl
pop
fistpll
push
pusha
lds
fdiv
sti
maskmovq
testl
pop
stc
inc
lds
test
aaa
or
pop
shll
imul
pop
push
push
popf
mov
jno
aaa
mov
cmpsb
pop
std
fistps
mov
daa
inc
scas
in
pusha
outsl
lcall
jecxz
popf
bound
pop
ljmp
mov
and
lods
fwait
add
sbb
jle
testb
and
cmc
push
and
std
push
cmovb
movhps
and
xchg
movsb
sbbl
loope
imul
int
xor
sbb
lret
adc
in
inc
adc
mov
xchg
cmc
hlt
jl
iret
in
cmp
and
xor
push
mov
add
jmp
enter
fbstp
inc
mov
scas
pop
mov
stos
add
adc
lds
mov
movsl
xchg
repz
jns
pop
cmp
inc
adc
fs
inc
or
icebp
mov
std
call
rcl
shl
leave
movsl
sti
mov
scas
subb
dec
jg
roll
pop
adc
adc
icebp
sub
mov
fildl
xchg
jno
leave
loope
loope
sub
adc
adc
lods
mov
out
pop
aaa
mov
std
out
cli
and
pushf
cwtl
pop
fcmovb
jge
cmpsb
cld
rorb
pop
loope
push
frstor
and
push
jecxz
jns
jecxz
lret
rcrb
pop
data16
fs
sar
cmpsl
lods
popf
sub
push
fiaddl
stc
call
les
pushf
dec
or
add
push
dec
and
in
sbb
add
mov
icebp
mov
mov
rcll
in
mov
or
lcall
mov
sub
jb
nop
sbb
xor
push
es
dec
jns
add
ret
jo
rcll
ja
mov
fisubs
test
arpl
lods
mov
mov
lret
das
iret
sub
lret
in
xchg
sti
dec
mov
out
pop
pop
jns
les
in
sbb
add
cltd
jae
dec
into
jmp
fadd
ret
nop
js
sub
orb
imul
and
addr16
stos
fsubr
sbb
sub
jae
lahf
pop
in
fsubrs
push
adc
or
xchg
or
aam
jo
add
clc
pop
xchg
rorl
aad
pop
cmp
fidivs
mov
pop
fidivrl
sub
mov
insb
jle
scas
xor
shlb
cmpb
mov
mov
insb
xor
loopne
xchg
xchg
xor
xor
call
xor
out
bound
inc
push
mov
je
outsl
and
mov
leave
add
dec
imulb
xor
xlat
sub
sub
xor
mov
jl
les
adc
mov
sub
dec
fs
int3
adc
xor
test
mov
lds
sbb
movsl
sub
jns
mov
setns
and
loope
sarl
addr16
mov
adc
lahf
in
aam
shrl
test
inc
gs
sub
fiaddl
bound
loope
mov
mov
dec
mov
mov
inc
mov
mov
test
stc
scas
cmp
cmpsb
sbb
movsb
fildll
cmpsl
inc
arpl
mov
dec
pop
pop
sub
rorl
filds
mov
xor
sub
mov
mov
dec
repnz
int3
leave
aas
cmp
ret
inc
inc
push
inc
movl
adc
hlt
xchg
testb
scas
dec
xchg
jne
das
fdivl
pop
cmp
jle
mov
sarl
mov
loopne
sub
push
das
pop
fscale
test
loopne
sar
sahf
cld
cmp
popa
dec
jo
cs
rcrb
inc
jmp
icebp
adc
fs
das
xlat
mov
mov
sarb
aam
mov
sub
jge
in
jle
loopne
mov
adc
cmp
fwait
push
aam
in
in
cmp
out
mov
ret
into
jno
cmp
test
mov
clc
mov
push
ret
cli
sbb
xchg
aaa
sub
sbb
xor
pminub
mov
cmpsb
fisubl
mov
scas
popa
sub
adc
clc
cmp
cmc
mov
dec
popa
jnp
jg
xchg
xchg
mov
inc
stos
fwait
mov
mov
mov
cli
mov
adc
dec
cmc
cmp
sahf
aam
sub
adc
loopne
mov
ds
popa
cmpsl
inc
into
cmp
push
sbb
xor
inc
sbb
mov
push
ss
rcrl
ja
inc
xchg
rorl
sahf
in
hlt
push
out
mov
mov
or
pop
sahf
cli
sbb
call
sub
loop
test
add
fdivs
adc
imul
dec
mov
pop
stos
rcrb
repnz
jmp
xlat
nop
cmpsb
mov
inc
mov
sbb
nop
sub
imul
xchg
incl
dec
push
fstl
arpl
add
pop
sub
xor
insl
lods
icebp
sbb
sub
add
fstl
adc
clc
popf
push
ret
pop
outsl
lret
mov
jp
out
mov
fdivp
add
ja
scas
jno
lahf
adcl
aaa
ja
popf
or
out
dec
ret
xlat
sub
dec
lahf
mov
lods
xor
push
fs
xchg
ss
filds
pop
push
adc
push
outsb
inc
fstpt
jno
jns
stc
les
sub
xor
push
lock
mov
sub
enter
add
hlt
add
mov
xchg
insb
lods
repnz
sbb
imul
into
xor
push
enter
push
mov
push
push
push
mov
pop
push
dec
inc
bound
in
test
adc
push
cli
lds
fcoms
push
sbb
dec
dec
push
in
popa
addl
ss
sarb
mov
imul
std
fcom
jae
pop
cmp
cld
pop
inc
or
mov
je
mov
xchg
imul
fdivs
push
incb
movsl
push
lods
xchg
imull
add
mov
ficoml
push
mov
sarl
cmp
fcoms
jae
add
pop
pop
xchg
repz
std
jg
adc
pop
iret
pushf
sub
mul
sub
test
inc
out
or
add
sbb
inc
xchg
dec
aas
imul
rcrb
jmp
add
in
mov
call
in
mov
dec
push
sub
sub
out
popa
out
loopne
add
lret
loop
or
roll
cmpsl
stos
and
out
bound
out
xchg
push
mov
out
or
outsl
inc
xchg
jmp
loop
aad
jbe
dec
pop
pop
mov
sbb
hlt
das
decb
loop
adc
add
fmuls
jbe
mov
mov
mov
into
adc
adc
iret
pop
or
add
stos
xchg
xchg
xor
push
pop
xchg
sbb
push
stos
inc
and
xor
ret
mov
jb
mov
push
sub
pop
iret
loopne
push
jne
loopne
pop
push
stos
sub
mov
loopne
or
mov
imulb
call
mov
movsb
daa
and
mov
jle
jb
mov
jmp
inc
push
mov
mov
iret
lea
or
inc
mov
cmpsl
mov
std
mov
in
mov
mov
mov
xchg
xchg
sti
xor
sbbb
shll
dec
mov
and
or
testb
movsl
aad
xor
movsl
pop
cmp
cmpsb
xchg
daa
and
push
jo
pushf
fsubrl
jecxz
js
jmp
push
add
mov
jmp
pop
cltd
iret
jp
mov
fwait
lods
in
mov
cmp
rclb
dec
adc
fisubrl
popf
inc
jno
fidivl
adc
arpl
loop
and
pop
sbb
stc
imul
in
pop
data16
scas
cli
push
add
mov
add
repnz
outsb
add
mov
jae
notl
xor
and
dec
pop
int
jb
fldl
xchg
daa
mov
test
mov
test
cmpl
xchg
lret
stos
sbb
pop
mov
aas
push
lea
decb
or
pop
fdivrl
repz
fnstenv
sbbb
movsb
addr16
xchg
push
cmc
negb
mov
xor
or
enter
adc
mov
rcll
push
repz
loopne
xor
fisttpll
xchg
fildl
xchg
jle
out
inc
iretw
mov
out
js
into
or
out
mov
outsb
cmp
dec
insb
lock
pop
int3
das
xchg
ss
insb
popf
roll
rclb
mov
mov
add
lahf
pusha
imull
lock
arpl
les
lock
js
in
jg
clc
pop
std
push
mov
xlat
outsl
inc
dec
iret
xchg
lods
dec
inc
int3
push
imul
mov
fdivl
out
inc
inc
nop
cmp
sahf
leave
mov
jmp
and
xor
cmp
sub
pop
push
in
mov
fists
jmp
push
sub
mov
xchg
icebp
add
ret
mov
jle
and
or
mov
cli
loope
jl
fldt
frstor
sti
fisttpl
or
jecxz
lahf
mov
jecxz
cmpsl
jmp
in
mov
fsubrl
test
fistps
pop
and
mov
pop
and
jo
cmp
pop
xchg
cmp
xchg
sub
pushf
sub
pusha
pop
pop
push
das
mov
fnstcw
adc
mov
add
fildll
inc
aaa
dec
rcl
mov
das
fadds
out
sbb
pop
daa
xor
in
mov
xlat
fs
clc
jnp
xchg
stos
mov
jecxz
xor
dec
jnp
mov
mov
mov
adc
bound
sub
xor
cmpsl
addr16
movsl
mov
je
jecxz
jl
dec
sahf
fwait
scas
sahf
or
xor
push
xchg
dec
mov
or
fisubrs
push
aad
sub
gs
xor
jp
mov
icebp
adc
or
cli
icebp
test
mov
arpl
mov
nop
sub
add
cmp
xchg
nop
jge
test
xchg
aas
cmp
neg
hlt
out
push
aad
es
mov
je
mov
sub
lds
imull
sbb
xor
mov
jmp
inc
iret
sti
outsl
repnz
jnp
scas
cs
mov
inc
xor
fcmovnu
jge
pushf
mov
pop
pusha
cli
or
jecxz
or
cmp
rorb
cwtl
ja
push
shr
lea
pop
into
cs
rcll
fildl
mov
aad
call
sbb
aad
pop
xorl
scas
fstps
jmp
movb
cld
repz
movsl
sbb
leave
pop
dec
lret
xor
imul
push
cs
add
shlb
repz
sub
mov
fs
mov
dec
int
mov
jns
std
jge
jp
xchg
sub
addr16
dec
mov
pop
lods
rcrb
dec
aad
cmpsb
cwtl
lcall
inc
into
push
sti
fimuls
je
sbb
mov
or
sub
sub
mov
pop
push
jae
dec
enter
imul
xchg
pop
dec
popf
lds
sbb
jl
insl
movsl
notl
int
adc
jo
int
and
adc
pushf
js
lods
or
jns
aas
js
cmp
iret
xchg
xor
daa
js
jl
out
cmpsb
push
in
or
jl
out
xor
inc
cmpsb
call
add
ficoml
lret
mov
test
inc
cmpsb
xchg
imul
bound
adc
fidivl
xchg
sub
jns
push
or
iret
out
and
lods
pusha
test
xor
movsb
pop
stos
shrl
mov
lret
dec
stos
adc
adc
in
xchg
xor
xchg
pop
cmp
adc
add
inc
jbe
sti
sub
int3
fisubs
mov
ja
mov
andb
xor
int
or
lret
adc
sbb
jae
nop
outsl
orl
cmp
aad
cmp
inc
jno
test
mov
mov
addr16
inc
jp
adc
call
mov
mov
rcrl
mov
imul
inc
test
push
mov
jae
lock
mov
adc
imul
lahf
mov
in
push
push
icebp
leave
lret
cld
sti
leave
xchg
ljmp
inc
and
or
push
punpckhdq
and
push
outsb
pop
push
mov
add
lahf
mov
mov
pop
jge
inc
push
enter
out
push
gs
inc
pop
int
inc
xchg
mov
xchg
inc
js
aam
xor
test
movsl
arpl
roll
add
pop
mov
loopne
sub
in
icebp
cmp
mov
mov
inc
aaa
or
xchg
insb
push
cmp
adc
test
cli
sti
sarb
jle
pop
xchg
test
pusha
mov
pushl
pusha
jae
sahf
push
dec
cmove
push
xor
or
imulb
aam
adc
inc
clc
xchg
sub
jmp
repnz
and
pop
sbb
lcall
in
rep
mov
stos
pop
dec
pusha
ss
jo
rclb
mov
cld
loopne
adc
aam
sti
outsb
hlt
inc
mov
shll
push
clc
mov
add
cmpsl
test
fimuls
bound
fisttpl
cmp
xchg
dec
out
stos
cs
xchg
lock
lcall
jb
in
pop
negb
cwtl
xchg
or
mov
jo
push
sbb
jge
mov
mov
ds
push
jl
jnp
ds
cmp
lahf
lock
cli
data16
scas
js
push
ja
cmp
pop
lea
dec
insl
stos
xchg
mov
push
xchg
sbbb
iret
fcomip
xchg
idivb
pop
cwtl
push
popf
loopne
outsl
add
add
push
and
mov
daa
movsl
or
std
sub
mov
and
push
fstpl
cli
pop
jge
je
ljmp
mov
dec
cmp
leave
xor
into
push
mov
mov
lret
ljmp
mov
popa
push
into
sbb
push
cwtl
adcl
xor
out
jge
and
int3
cli
add
stos
dec
incb
xchg
inc
xchg
dec
cbtw
add
adc
sub
sub
or
testb
lret
adc
or
loop
pop
loop
testb
aad
repnz
dec
fstpt
sbb
scas
mov
ffreep
popa
or
in
popf
sti
push
das
jge
cmp
cmp
icebp
mov
jns
mov
and
mov
mov
std
ret
mov
mov
push
psraw
jns
les
aam
in
fadds
add
sahf
sbbb
scas
push
cmpsb
repnz
dec
adc
add
lea
add
sub
out
test
cmp
mov
fs
push
hlt
fists
loopne
nop
adcl
js
call
ljmp
shll
pop
icebp
es
mov
adc
sub
dec
adc
mov
gs
cmpsb
rcll
leave
push
pop
pop
out
movsb
push
mov
sbb
je
pushf
adc
cltd
push
fsubrs
sub
push
inc
test
pop
dec
out
ror
cmc
hlt
jmp
filds
int3
mov
call
or
push
sub
scas
std
dec
adc
and
mov
test
fsubrl
sbb
out
enter
mov
xlat
shrl
fpatan
fadd
cwtl
sub
faddl
mov
push
jae
gs
sub
jnp
sti
cmp
sub
adc
aas
and
out
or
jne
movsb
lret
outsb
push
mov
icebp
add
insb
adc
mov
jp
mov
ud0
clc
repnz
mov
mov
cmpsl
adc
aam
cmpl
adc
mov
inc
imul
xor
sbb
cmp
push
in
dec
test
aaa
xor
or
dec
push
fdivl
pop
mov
pusha
out
sbb
loopne
jmp
xor
movsb
inc
mov
rolb
adc
ret
pop
movsl
push
push
das
push
aas
mov
mul
add
ficompl
enter
cmpsl
inc
sub
add
xor
jge
cmpsb
in
aaa
jecxz
dec
lods
xor
pop
outsb
pusha
mov
cld
ret
and
jge
mull
pop
scas
add
sbb
fmulp
or
pop
xor
cli
ja
movsl
cmc
sub
and
mov
adc
mov
sti
push
daa
add
add
push
cltd
mov
push
adc
testb
mov
pop
push
sub
les
into
add
imul
aaa
data16
sub
sub
pushf
inc
xorl
sub
cmp
pop
jb
adc
add
movsl
arpl
push
rolb
fimuls
insl
jmp
in
test
xchg
movb
inc
push
je
lret
iret
scas
addr16
push
je
rep
je
jp
cli
dec
je
cmp
sub
mov
ret
pop
dec
pop
test
cli
test
arpl
mov
ljmp
jne
jnp
cmpsl
or
dec
or
mov
pop
mov
loopne
rcrl
adc
inc
leave
mov
int
daa
cli
insl
lods
or
push
cmc
mov
and
pop
mov
and
pushw
mov
fcmove
sbb
aas
mov
jae
fprem1
insb
bound
cmpsl
rorl
add
test
cltd
jg
add
or
adc
jno
jmp
out
inc
dec
dec
sti
sub
flds
cmpsb
mov
idivb
cmp
sbb
push
xor
xlat
xor
sbb
adcl
insb
addl
cwtl
shll
je
xchg
lea
repz
jg
push
test
enter
cwtl
xchg
add
pop
sub
or
mov
mov
scas
adc
sub
fwait
jo
push
push
jne
mov
lcall
aaa
ret
pop
xor
fisttpll
sbb
mov
fcmovb
cltd
mov
push
push
imul
adc
stos
inc
push
sub
rcr
xchg
ret
xchg
call
mov
add
add
push
push
dec
sbb
push
pop
js
mov
sbb
mov
and
sbbb
xor
cmp
aad
push
sbb
jae
rol
movsl
fucom
push
loopne
das
mov
lahf
subb
xor
xchg
lahf
mov
pop
les
out
mov
jecxz
push
lret
mov
jns
sti
bound
push
leave
in
lock
xlat
call
fdivl
jmp
jno
mov
ja
mov
jp
jbe
inc
jno
jmp
rcrl
dec
loop
mov
pop
push
das
loopne
sbb
jo
cld
cmpl
jle
sbb
out
lods
movsl
call
sbb
push
push
outsl
test
sub
icebp
addl
xchg
mov
in
or
in
or
cmpsl
dec
push
lock
imul
test
pushf
js
adcb
pop
repnz
push
dec
into
lods
fsubrp
pop
fwait
push
mov
out
in
orl
fmul
sbb
aam
std
clc
int3
mov
push
mov
aad
mov
js
cmp
adc
and
cmpsb
jnp
mov
int
out
into
loope
stos
into
jb
jp
sub
push
mull
gs
jnp
xchg
icebp
cmc
inc
adc
or
stc
pop
cmp
fcomps
lods
mov
sbb
adc
and
fcmove
lret
in
push
cld
inc
cs
mov
sbb
stos
fstpl
aaa
arpl
dec
test
push
or
in
addr16
mov
mov
aas
inc
cwtl
lret
pop
cmp
ret
insl
mov
shr
rclb
aaa
adc
adc
popf
jg
ret
mov
shrl
adc
dec
mov
or
xor
ret
mov
ss
mov
dec
fcmovnb
xchg
enter
cltd
mov
dec
fstl
push
xchg
sbbl
add
and
fs
ljmp
push
xchg
and
pop
ss
ret
cmp
sub
sahf
out
or
aaa
sti
xor
mov
dec
nop
mov
cmpsb
adc
push
nop
cmp
loopne
jnp
out
cwtl
lds
push
in
jge
je
or
push
imul
fstpt
aam
ret
xor
lea
mov
scas
jecxz
stc
push
add
pop
pop
push
xor
jno
outsb
pop
fisubrs
pop
sbb
rol
xchg
mov
imul
scas
test
mov
push
mov
pushf
fcoms
adcl
push
lods
ds
pop
adc
in
dec
imul
pusha
test
push
inc
fstpl
addr16
int3
mov
inc
movsl
lret
lods
xor
clc
add
jge
dec
inc
xchg
inc
fwait
aam
lcall
pop
mov
sbb
add
mov
loope
outsb
lods
mov
in
pop
mov
jns
insb
sbb
and
mov
aas
dec
or
and
iret
testb
sub
stc
push
pusha
sbb
dec
lods
mov
mov
sarb
xor
jno
sbb
mov
mov
mov
sub
fidivrs
push
sti
lock
inc
movsl
fmuls
pop
xchg
jne
or
mov
xchg
sbb
in
xchg
lret
call
sub
sbb
mov
sahf
add
pushf
mov
ret
popa
sub
mov
das
mov
out
aas
fisubs
test
jbe
mov
dec
addr16
addl
ficomps
movb
pop
cmpl
and
and
negb
pop
lds
push
mov
jge
arpl
rol
popf
and
out
mov
jb
clc
mov
push
adc
dec
das
add
rolb
push
xchg
call
jo
push
sub
cltd
mov
mov
ljmp
dec
fldenv
mov
add
test
out
pop
sbb
cmp
jno
adc
es
jns
sahf
xlat
pop
popf
das
sbb
mov
mov
stos
pop
pcmpgtb
movsb
pop
flds
addr16
push
outsb
mov
adc
aas
inc
scas
loopne
stc
fdivs
add
insl
dec
int3
fiadds
bound
lock
jecxz
dec
test
scas
cmpsl
push
scas
in
and
mov
or
jg
imul
xchg
xchg
push
imul
add
stc
push
daa
iret
int
mov
adc
js
mov
repnz
adc
cmp
fidivl
sbb
dec
daa
jno
mov
inc
mov
aas
repnz
fadds
stc
in
stc
aas
movsb
xor
push
popf
xchg
mov
xchg
into
xchg
and
adc
xorb
sbb
daa
xchg
mov
ljmp
mov
push
xor
int3
ss
sub
or
mov
sub
lock
data16
out
fdivr
ds
popf
stc
jle
push
stc
test
stos
and
fidivs
imul
cmp
mov
lods
rcrl
jmp
mov
xchg
lods
and
sub
sub
pop
stc
rclb
es
adc
sbb
pop
lods
and
ret
or
xchg
test
add
mov
mov
insb
mov
stc
mov
lods
jne
aas
fidivl
dec
aas
pushf
xchg
adc
sub
mov
addr16
clc
in
mov
mov
pop
es
mov
icebp
cmp
clc
int3
push
repnz
cwtl
dec
sbb
xchg
cmpsl
popa
scas
leave
std
aam
jno
into
hlt
mov
push
roll
or
stos
aas
fimull
adc
mov
in
fstl
and
je
mov
lret
xor
sub
jno
mov
sub
aad
int
adc
push
out
mov
outsl
outsb
and
inc
ret
imul
jno
jnp
mov
data16
addr16
cmp
mov
scas
fs
xor
push
and
or
aas
fwait
mov
lret
jp
push
push
sbb
push
push
out
es
outsb
mov
out
repz
add
mov
leave
rep
jno
jle
int
dec
movsl
pop
mov
adc
xchg
lds
xchg
lods
scas
mov
cwtl
nop
lret
and
aaa
and
cs
and
adc
jecxz
test
movsb
pop
stos
shrl
mov
mov
inc
mov
push
or
push
mov
pop
movsb
pop
fidivl
lds
xchg
xchg
scas
mov
aam
out
in
aaa
fistpll
cltd
dec
or
dec
stos
out
fistpll
stos
mov
fsubrp
push
push
adc
jg
jo
aad
inc
add
pop
mov
dec
cwtl
cmp
sub
insb
insl
xchg
dec
imul
pop
jp
mov
cwtl
sbb
mov
jg
lods
fcoms
cmpsl
mov
lret
add
push
push
movsb
rcrb
test
jns
cmpsb
inc
pop
sub
pusha
xchg
adc
addl
das
add
movsl
adc
dec
stc
rol
cmp
and
jecxz
dec
daa
inc
in
adc
sub
inc
insl
inc
adc
sbb
in
pop
cli
jmp
cltd
sub
sub
in
jecxz
mov
mov
cmp
movsb
sarl
test
push
mov
push
adc
pop
cmp
sbb
pop
idivb
mov
scas
and
and
push
lea
push
stos
loopne
xchg
enter
icebp
xlat
mov
cltd
out
ret
in
jmp
mov
jnp
pushf
jmp
pop
adc
cmc
scas
sbb
pop
daa
loopne
loope
add
fidivrl
dec
imul
cmc
int3
test
popa
push
andb
repz
subb
gs
mov
pop
push
sbb
in
cmpsl
lret
mov
xor
dec
jne
jmp
clc
stos
imul
js
or
cmp
inc
mov
mov
mov
in
data16
sub
pop
into
movsb
sub
std
sarb
jge
ret
add
add
lock
and
xchg
imul
xorb
push
and
xchg
fbstp
add
movsb
dec
testl
icebp
pop
cli
popf
aaa
adc
insb
push
sbb
inc
pop
insl
and
lock
xchg
mov
sti
xor
mov
sbb
push
mov
pop
ret
xchg
cmp
push
sbb
and
add
jg
jmp
pop
pop
mov
push
mov
sub
pop
inc
cs
mov
lahf
push
jg
scas
popl
nop
pop
or
xor
and
dec
or
dec
das
xor
in
repnz
mov
lcall
mov
in
jp
push
sbb
cmc
stos
inc
jmp
mov
loop
outsl
jbe
jge
outsb
push
int3
jecxz
xchg
add
in
sbb
pop
loopne
sbb
sbb
mov
jno
mov
insb
pop
call
push
gs
or
cmp
cmpl
in
loop
pop
loop
dec
jge
jg
cli
jmp
or
dec
dec
addl
lock
aaa
dec
push
dec
inc
aaa
dec
jl
rol
or
stos
inc
outsb
movsb
incb
into
cli
cld
fisubrs
add
jle
mov
xchg
jp
sub
pop
dec
add
insl
test
pop
adc
ljmp
add
testb
pushf
jbe
nop
mov
mov
maxps
push
movsb
test
sbb
inc
cmp
xchg
movsl
addr16
sbb
add
adc
loope
mov
repz
insl
cli
cmp
je
mov
call
lret
jmp
daa
jp
push
inc
jne
jnp
pop
dec
sbb
test
xchg
mov
fldl
mov
leave
lea
dec
pop
lods
lods
fsubl
pop
mov
lock
jecxz
jp
and
mov
jmp
cli
jae
jae
cmpsl
jne
sbb
adc
adc
js
xor
adc
jnp
or
sbb
add
inc
sbb
mov
clc
xchg
cli
jb
push
stos
sub
dec
xor
icebp
push
mov
cs
dec
pop
dec
cwtl
bound
pop
ds
shlb
adc
rolb
pop
jo
cmpsb
fcmovbe
int3
dec
xchg
xlat
int
and
popf
jp
sbb
cmp
mov
sbb
push
push
aaa
pop
push
dec
add
pop
sub
push
sbb
pusha
mov
hlt
jecxz
push
and
xchg
out
sub
decb
leave
arpl
repz
mov
aam
mov
out
out
and
aad
mov
enter
push
mov
jb
mov
cld
xchg
pop
inc
aaa
orb
pop
shll
add
sarl
cld
scas
add
add
stc
mov
adc
push
js
xor
repz
adc
std
fidivrl
js
jno
data16
enter
scas
movsb
mov
insl
inc
or
cmp
icebp
fs
mov
call
aaa
cmp
or
dec
data16
push
jmp
mov
test
push
hlt
xchg
pslld
sti
stos
test
and
inc
test
loopne
in
les
xor
sti
shrl
pop
jnp
jle
push
mov
cmc
call
imul
les
es
mov
fbld
cmp
dec
mov
loope
mov
outsl
aam
in
nop
sub
and
movsl
cmp
mov
imul
sarl
cwtl
xor
cltd
jns
movsb
push
mov
fsubs
fisttps
call
dec
cld
in
xchg
in
test
outsl
clc
mov
lcall
scas
push
jge
adc
push
add
pop
and
dec
dec
inc
data16
push
mov
fnstsw
pop
xchg
xor
inc
mov
bound
arpl
jl
add
cmp
pop
sahf
dec
bound
mov
and
pop
stc
xchg
and
xchg
sahf
push
jae
dec
ja
push
push
dec
hlt
lret
add
incl
popf
mov
repnz
movsl
push
mov
push
mov
mov
lock
dec
mov
adc
js
add
xor
sarb
jmp
hlt
lea
mov
mov
sbb
je
inc
mov
adc
daa
call
ljmp
xor
mov
loop
imul
fstl
lret
sub
xor
jo
and
xlat
jg
ret
jp
pop
xchg
lds
xchg
add
push
pop
mov
mov
aaa
jbe
sbb
fistpl
into
add
xchg
pop
dec
es
incl
jge
ds
gs
in
mov
cmc
inc
cwtl
loopne
clc
loop
xor
mov
mov
dec
adcl
or
sti
xchg
aam
or
std
aad
mov
jp
cmp
in
repz
xchg
dec
rcrb
mov
mov
jo
pop
adc
test
jnp
shrl
aaa
scas
divb
cmpb
aaa
add
int
pop
push
in
imul
dec
fldenv
fdivp
cmp
push
arpl
dec
mov
xchg
pop
push
mov
pop
das
dec
mov
sar
subb
das
leave
lock
pusha
mov
mov
ficoms
add
jl
mov
jbe
xor
sub
jp
aam
pop
out
xchg
dec
outsb
or
sahf
cmpsl
push
int3
fsincos
sbb
xor
ljmp
xchg
aas
dec
sbb
pop
mov
push
and
dec
movsl
pop
jb
loop
dec
fsub
inc
cmp
push
push
test
es
sbb
sub
adc
mov
testl
stos
and
jecxz
sub
mov
push
popf
pop
mov
sar
jle
jbe
cmp
cmpsb
dec
into
jnp
lret
inc
fs
int
es
push
inc
sbb
mov
cmc
bound
dec
repnz
out
pop
fucomp
and
pop
push
sub
sub
sub
cli
jle
arpl
out
movsb
cmovl
in
xor
das
add
ljmp
jns
cmpsl
imul
fstl
sbb
fisttpll
loop
sbb
adc
inc
call
mov
mov
test
adc
pop
pop
insl
adc
test
xor
xchg
outsl
jbe
push
mov
jge
fnsave
popf
and
cs
jge
fistps
jl
mov
sahf
hlt
xchg
push
std
cmp
jp
pop
repz
and
sti
sbb
cmp
xchg
aam
cmc
pop
push
lret
jae
popa
sbb
ljmp
mov
leave
in
in
jg
lret
and
int3
or
xor
cmpsl
cmp
repnz
stos
lea
test
adcb
lods
pop
into
jb
ja
sub
je
adc
je
push
dec
clc
dec
xchg
and
jp
test
mov
gs
nop
push
pop
sub
inc
mov
dec
loope
repz
cmp
rcrl
out
cmovbe
push
scas
jmp
and
mov
cmp
rclb
jo
shrl
rclb
push
xchg
push
out
pop
addl
sub
and
xlat
or
rdtsc
insl
inc
es
outsl
cmpsb
loop
cli
xchg
dec
add
in
push
das
cmpl
adc
lcall
pop
xor
jmp
jp
xchg
adc
sub
in
add
daa
xchg
jbe
cmpsl
repz
mov
scas
mov
cmc
mov
sarl
mov
add
insb
jp
cmpsl
sbb
xor
sbb
adc
sbb
add
sub
xchg
scas
mov
in
or
add
push
push
jmp
sarb
pop
adc
inc
pop
stc
mov
sarb
push
sub
jl
mov
or
xchg
sbb
jbe
fldenv
out
adc
mov
es
out
shl
jge
icebp
sub
lcall
roll
popa
inc
and
fcomps
add
sub
sub
xchg
addr16
in
and
jae
inc
stos
mov
repnz
pop
cmp
sbb
nop
fistpl
xchg
and
cmp
mov
sub
imul
fsubl
push
clc
xchg
mov
les
adc
rcl
adc
pop
mov
push
es
cmp
out
xchg
out
or
lock
push
pop
inc
mov
and
xlat
addr16
in
mov
push
xchg
cmp
mov
jge
aam
aaa
orl
cmc
pop
xchg
dec
jge
addr16
in
fcompl
cmp
stc
std
sbb
jle
sbb
enter
cwtl
fdiv
lahf
mov
daa
addr16
xor
jl
jecxz
mov
xchg
pop
inc
popa
sub
pop
pop
cmpsl
inc
inc
pop
jecxz
cmpsb
sub
sub
push
movsb
lods
inc
loopne
aam
mov
pop
mov
lea
mov
ljmp
mov
mov
dec
cli
enter
psubb
lds
cmp
ds
ds
inc
shlb
dec
cltd
mov
fcoms
jnp
mov
mull
mov
cmovne
lea
adcl
sahf
adc
inc
xchg
and
ja
jne
push
arpl
xor
sbb
cwtl
push
int3
lds
out
cmp
push
cwtl
cmpl
lock
jp
orl
push
das
cwtl
sub
jnp
loopne
out
faddl
push
and
in
orb
pop
popf
push
adc
pop
pop
out
mov
sub
sbb
cmp
and
and
inc
aad
into
xor
mov
or
cmc
add
xlat
xchg
mov
aad
inc
and
adc
xorl
mov
mov
add
aam
mov
daa
in
push
jns
pusha
insb
mov
xchg
lods
flds
pop
daa
push
repz
popf
lcall
fs
nop
jecxz
or
xchg
sahf
cmpsl
mov
inc
enter
repnz
loop
dec
dec
ret
fdivrl
xlat
sub
rclb
inc
into
xor
sbb
jmp
sbb
in
les
jns
fisttps
imul
outsb
sti
bnd
call
adc
in
sti
inc
dec
mov
psubd
add
push
inc
jno
jns
dec
movsl
and
or
cmp
xchg
pop
iret
lods
and
sbb
or
mov
inc
and
movsb
inc
and
pop
sub
mov
lret
dec
push
scas
pop
out
cltd
push
adc
or
xor
in
jmp
add
data16
fildll
stos
ljmp
ss
outsl
mov
comiss
xor
loopne
test
ja
xor
inc
push
sub
mov
rcrb
mov
inc
fs
adc
sbb
cmp
lcall
or
mov
pop
icebp
push
in
test
test
push
or
outsb
mov
xlat
or
popl
xor
dec
repz
shll
mov
adc
stos
adc
push
jbe
fstps
es
imul
cmpsl
lret
aas
int
scas
lret
fistpll
mov
mov
faddl
movsl
push
mov
sub
push
add
adc
enter
insb
cmpsl
mov
pop
adc
call
or
scas
jo
push
fwait
lcall
add
xor
mov
inc
das
push
in
jg
adc
jecxz
testl
mov
sub
std
xchg
fstp
pop
out
mov
sti
lret
cmp
in
sub
imul
sbb
fisttpll
ljmp
loope
mov
jns
pop
push
cmp
xor
ret
xchg
shll
ja
xchg
jecxz
jg
stos
std
sbb
insl
jecxz
aad
lahf
adc
ja
or
lcall
cmp
sub
and
data16
iret
pop
xor
cli
mov
mov
sub
fstps
out
int
and
inc
jecxz
imul
je
out
xchg
mov
outsl
push
aam
loopne
mov
push
lods
fbstp
mov
rep
mov
inc
xchg
mov
or
jl
or
jb
cmpsl
mov
mov
xchg
popf
xor
and
inc
sbb
xor
xor
data16
push
cwtl
xor
stos
mov
enter
cmp
push
dec
inc
lods
sub
in
adc
aam
cld
out
call
sti
mov
add
add
cmp
fldl
out
outsl
jl
add
mov
inc
icebp
loopne
jae
or
jg
mov
not
cmp
fcoml
sbb
notl
mov
scas
lods
stos
jae
add
xchg
mov
mov
mov
mov
mov
nop
xchg
sub
xchg
aas
mov
lods
xlat
movsl
call
and
movsl
into
nop
aad
test
dec
sub
mov
icebp
fists
sbb
je
cs
cld
inc
shrb
int3
adc
jmp
iret
out
xor
popf
rorl
lret
mov
cld
call
dec
pop
stc
and
xchg
mov
mov
mov
out
mov
arpl
out
add
adcb
into
adc
adc
or
jmp
jnp
mov
adc
mov
jmp
mov
ja
bound
jge
andl
jge
push
lods
inc
dec
sbb
jno
ret
enter
dec
movsl
testb
pop
loopne
adc
pop
or
dec
xor
call
outsb
lcall
ret
divl
add
adc
lcall
lahf
dec
inc
js
sub
or
pop
push
push
fsubl
inc
pusha
cli
pop
bound
aam
es
stc
mov
mov
negl
int3
xor
xchg
adc
adc
xchg
dec
in
lods
lods
xchg
sti
xchg
and
mov
add
push
enter
jb
push
jg
jp
icebp
bnd
sti
jmp
pop
inc
sbb
sub
or
insl
jge
mov
mov
dec
movsl
popl
xchg
cmpsb
mov
in
add
mov
pop
cmc
pop
mov
mov
call
push
mov
push
pop
or
repz
popa
cmp
jp
pop
dec
add
inc
loop
movsb
in
add
test
iret
bound
aaa
push
jecxz
sbb
daa
mov
jecxz
cmpsb
dec
pushf
es
dec
xor
cmp
jns
xchg
adc
xor
xor
dec
and
fmuls
fisubl
xchg
pop
dec
xchg
jle
cmpsb
jne
push
mov
add
cltd
mov
leave
jg
xlat
stos
stos
cmp
jne
sub
sub
ljmp
rcl
mov
xchg
ds
xchg
xchg
adc
outsb
mov
mov
or
jbe
addr16
lret
mov
sahf
test
jg
inc
rcl
pop
std
inc
pop
je
imul
sub
lea
cmp
test
pop
loop
push
cli
insb
jg
mov
cs
pop
or
xchg
jmp
mov
lret
ja
cmp
xchg
or
test
push
test
push
mov
repnz
or
jl
xchg
lahf
vhsubps
int
xchg
rcl
je
mov
popf
adc
dec
addr16
das
inc
jp
jge
jb
mov
pop
xchg
mov
sub
repnz
psrlq
cmpsl
sub
push
stos
mov
dec
jmp
mov
push
sbb
push
cwtl
arpl
push
add
dec
add
adc
rcl
jle
fninit
cmp
xchg
out
push
adc
push
shrl
mov
push
arpl
mov
ret
jle
loopne
mov
adc
add
gs
in
pop
mov
test
test
mov
mov
dec
lods
lahf
mov
jg
out
test
jg
ds
mov
xchg
out
out
xchg
dec
mov
in
sbb
adc
jmp
jnp
xlat
imul
enter
fistps
cli
xchg
xchg
pop
xchg
popa
es
sbb
std
push
in
xchg
adc
pop
lret
mul
add
mov
test
pop
repnz
mov
cs
adc
pop
xor
arpl
dec
rol
mov
sub
dec
in
in
and
test
test
lods
push
arpl
es
xor
mov
jbe
pushf
in
xchg
lret
adc
jae
lret
jae
mov
insl
cmpsb
inc
psrlq
adc
repnz
push
shlb
inc
mov
and
xor
pop
adc
in
test
test
mov
call
mov
pop
cmp
fdivs
lods
push
pop
inc
sub
out
loopne
push
sub
inc
outsb
out
aaa
jge
jge
cltd
adc
mov
loope
gs
movsl
fld
lcall
sbb
mov
xor
mov
enter
pop
xor
ret
or
insb
movsl
inc
rolb
addr16
xchg
sub
inc
cltd
inc
mov
stos
fcomps
push
push
mov
pusha
push
sub
xlat
cmp
jb
xor
ja
aad
jg
dec
test
xchg
shrl
jmp
mov
ss
invd
sbb
xchg
shl
dec
loopne
outsl
aaa
lret
out
lods
mov
inc
hlt
or
sbb
dec
jns
mov
in
popa
sbb
adc
test
and
lds
scas
inc
xor
or
jbe
movsb
movsb
inc
mov
adc
dec
mov
lods
sub
fldt
inc
scas
arpl
sbb
movsl
fmull
adc
xchg
cmp
dec
mov
jo
lods
xchg
in
cltd
repz
outsb
mov
cmp
sub
pop
jmp
cli
lcall
icebp
xchg
inc
cli
movsb
xchg
mov
frstor
loopne
and
out
mov
xchg
flds
push
push
mov
pushf
ss
inc
int
shll
ljmp
scas
jnp
in
hlt
fwait
test
xor
adcb
fwait
xor
pop
fdivrl
inc
sub
sbb
jns
pop
adc
mov
insl
inc
stos
mov
testb
adc
lea
incb
sbb
inc
je
gs
int
fmull
call
add
fwait
test
jbe
push
cmp
mov
cmc
xchg
lret
sub
or
lods
movsl
jmp
adc
mov
pop
out
add
xchg
es
test
inc
pop
ja
sti
and
push
arpl
int3
testb
popl
xchg
fs
mov
sub
testl
movsl
pop
jne
xchg
das
out
incl
sarl
inc
inc
mov
push
lods
loope
jb
pop
sbb
inc
cmp
enter
notb
sub
fcoml
xchg
jb
cmc
xchg
dec
call
repz
inc
test
jne
dec
test
cmc
enter
jle
std
pop
js
jl
and
cmpsl
clc
jne
jnp
push
and
test
sar
adc
in
call
cli
sbb
mov
jl
push
inc
mov
fnstenv
dec
or
sub
xchg
aam
or
cmp
ret
test
mov
xor
das
jb
add
rol
je
in
fisttpl
test
inc
xchg
dec
lods
sub
sbb
xor
xchg
and
sti
mov
sbb
and
jl
rol
in
fwait
dec
push
in
icebp
lods
inc
cmc
xchg
rcll
mov
xchg
push
ss
popf
cwtl
cld
shrl
dec
stc
sbb
push
mov
sbb
xorb
jp
cmp
call
outsb
jmp
mov
push
add
insl
es
jnp
lcall
inc
cltd
sti
push
or
pop
jecxz
fcmovu
pop
loopne
rolb
jns
push
sbb
pusha
pusha
push
loope
aaa
fbstp
or
xchg
and
push
xor
and
das
ds
notb
push
adc
arpl
mov
mov
and
cmp
inc
pop
test
nop
test
ficoml
outsl
pop
mov
sbb
in
dec
movsl
int
cmp
movsb
adc
sub
sbbl
ret
mov
push
cmp
mov
jl
fs
add
or
xchg
out
cs
ja
xor
ret
loope
pop
cmp
ljmp
mov
idivl
mov
pop
adc
rcrb
les
decl
mov
nop
adc
ljmp
ds
xor
xchg
movsb
cmpb
mov
bound
xchg
push
std
cmp
ja
xchg
sbb
sbb
imul
dec
cmc
arpl
jge
lahf
loopne
addb
mov
add
dec
push
push
ds
out
repz
sahf
stos
add
xor
cmpsl
dec
rcr
sbb
inc
in
push
das
aaa
mov
or
xchg
pop
sub
push
popa
loop
jo
out
and
mov
jmp
pop
clc
push
adc
and
inc
test
inc
in
fmull
in
pop
jp
jb
inc
cmpsl
push
mov
cwtl
pusha
jb
loope
fidivl
jbe
push
mov
or
inc
test
inc
jno
fnstenv
add
nop
inc
rolb
dec
mov
sub
adc
cmp
je
hlt
mov
mov
xor
mov
jge
push
adc
cmp
insb
cmp
jno
imul
cmpsl
por
mov
stc
jge
xlat
push
add
push
cmp
jno
xor
in
xor
les
aas
mov
pop
jl
pop
add
mov
gs
pop
ret
cmp
mov
outsb
out
adc
adc
pop
cwtl
cmpsb
sbb
or
es
hlt
ret
jle
dec
ret
cmp
repnz
gs
pop
in
repz
push
faddp
dec
mov
mov
fldl
push
cmp
mov
inc
adc
js
or
jbe
inc
ds
cld
fidivrs
pushf
adc
dec
jns
lods
insb
dec
es
and
dec
push
jo
xor
out
cltd
movsl
popa
stc
or
ja
cmp
outsl
subl
sbb
or
adcl
or
pop
es
cmp
pop
popa
daa
popa
sub
xchg
pop
nop
stc
lahf
popf
mov
shlb
mov
dec
push
daa
in
mov
push
push
jl
cmc
pop
dec
cmc
adc
xor
cwtl
xor
xchg
xchg
test
jmp
mov
popf
push
dec
js
or
scas
cmp
xchg
push
sbb
adcl
mov
test
jbe
in
imul
inc
fwait
dec
xchg
push
pusha
dec
in
and
jle
fs
and
add
xor
int3
adc
lret
jbe
repz
xor
add
fstps
leave
mov
gs
add
repz
mov
push
pop
sbb
lds
dec
call
leave
aad
mov
push
ret
insb
cmp
mov
out
dec
fisubrl
adc
call
pop
cmpsb
mov
pop
out
stos
xorl
loop
dec
ljmp
sbb
lret
jns
cwtl
shlb
mov
mov
cld
pop
mov
addb
xlat
loop
adc
bound
hlt
mov
imul
outsb
imul
cmc
int3
ljmp
xchg
xchg
in
push
lods
cmpsl
rcr
pop
mov
dec
imul
js
mov
inc
ljmp
jl
outsl
xchg
sbbl
xchg
push
scas
in
xor
pop
sbb
aad
mov
and
adc
jo
add
arpl
cmp
shll
or
cwtl
jl
addl
arpl
mov
rolb
mov
add
hlt
jnp
push
test
xor
int
fs
jo
in
adc
aas
insb
js
dec
cltd
xlat
ds
pusha
sbb
ficoms
mov
pop
stos
jbe
inc
jnp
sahf
lds
int
jmp
mov
inc
adc
sub
push
mov
add
push
add
mov
pushf
dec
lret
lods
pop
xor
push
lds
cmp
jmp
and
push
cmp
jg
sub
out
stos
dec
mov
js
sarb
ret
adc
outsl
mov
and
out
add
add
jbe
and
testl
add
mov
cs
jmp
cmpsl
imul
in
lock
je
mov
lds
rcr
gs
testb
and
lods
xchg
cli
push
sbb
rorb
fs
jb
mov
and
std
out
fcmovu
adc
dec
push
or
lahf
es
lds
xorl
cwtl
out
je
xor
ss
sti
push
jle
fwait
pop
cmp
mov
test
xor
push
scas
jbe
insb
inc
int
je
cmp
leave
pop
rclb
pop
shll
sub
pop
push
movsb
shlb
xchg
js
pop
mov
jne
jno
lea
dec
mov
enter
das
push
lods
pop
lret
int
xchg
jno
inc
insl
or
ret
xchg
shr
test
mov
aaa
out
insb
cltd
lods
pop
add
dec
ret
das
add
mov
repnz
setae
fimull
pop
push
adc
icebp
mov
dec
cmp
jmp
cld
xchg
add
sbb
add
mov
or
dec
mov
xor
xchg
pop
xor
pop
ficoms
dec
inc
das
push
fnsave
xor
fmul
wrmsr
mov
pop
push
lock
add
push
or
mov
icebp
dec
sbb
mov
or
mov
mov
inc
sbb
out
add
or
les
push
inc
sub
stos
lock
or
popf
xor
mov
sbb
test
mov
fwait
sub
sbb
mov
mov
or
es
call
sub
je
adc
xchg
xchg
sub
add
scas
cwtl
cwtl
and
fwait
pop
jb
xor
addr16
push
adc
push
pusha
arpl
xor
cmp
popl
fisubrs
xor
loopne
mov
nop
rorb
mov
sahf
sub
jl
cmp
out
inc
xchg
data16
pop
fists
pop
pop
sbb
stos
popa
cs
aam
repnz
dec
lret
in
pop
push
ss
sub
pushf
jp
push
imul
add
push
and
insl
mov
cmpsb
or
negl
cmp
add
pop
hlt
mov
pop
jnp
xor
inc
shlb
sbb
mov
mov
adc
mov
incl
dec
mov
daa
xchg
xchg
xor
cli
scas
mov
mov
fs
shll
test
das
lods
sub
sbb
jmp
mov
test
mov
xor
jge
mov
adc
jb
mov
in
rorb
cli
xchg
movsl
leave
int
sti
jmp
cmc
test
pushf
add
and
movsl
mov
bound
jno
xor
mov
cmp
add
or
jge
shl
mov
mov
stos
jae
push
mov
xchg
pop
xor
andl
xor
sarl
sub
cmp
ljmp
ja
push
dec
rcrb
jp
jl
and
stc
ds
addr16
dec
sbb
jle
jne
add
push
pop
pop
sub
or
cmp
and
cmpsl
pop
pop
pop
jecxz
std
mov
stos
cmpsl
in
dec
mov
mov
sbb
hlt
mov
lods
cwtl
fsubr
insl
cld
dec
sahf
mov
adc
test
repz
lods
lds
je
xchg
cmp
lods
stc
cmp
mov
test
or
mov
dec
inc
xchg
clc
adc
icebp
in
out
iret
or
mov
inc
scas
movb
pop
fadds
jne
push
lods
rorl
sarb
mov
pusha
clc
mov
notb
faddp
mov
out
dec
lods
imul
xchg
mov
add
xchg
out
pop
test
popa
xor
scas
mov
mov
pop
xchg
jecxz
pusha
pop
fsts
push
popf
sub
mov
das
orb
push
and
adc
movsb
sbb
dec
add
mov
rorb
xchg
imul
add
mov
fwait
iret
dec
xor
ficompl
es
push
dec
mov
std
popf
js
push
in
pushf
loopne
outsl
or
inc
sbb
xchg
adc
jo
xchg
aad
jb
cli
das
jmp
jge
jbe
xor
dec
pop
adc
lods
mov
repnz
pop
iret
iret
seta
xchg
pop
adc
adc
pop
pop
pop
je
dec
adc
adc
push
sub
inc
push
mov
fisubl
cmp
mov
push
dec
clc
mov
pop
dec
pop
add
and
mov
lss
xchg
mov
aaa
cwtl
fdiv
out
cli
xchg
divb
sbb
push
arpl
mov
inc
mov
jl
dec
test
fs
jle
lea
jp
sbb
jb
mov
movsl
jle
and
jb
psubw
insl
dec
stc
push
out
ret
ja
adc
jecxz
jns
sbb
jmp
xchg
and
and
mov
fstpt
push
add
sbb
xchg
jnp
inc
data16
rcrl
loop
mov
sub
or
pop
test
int
insl
inc
pop
test
or
sub
clc
add
inc
xor
add
or
add
sub
jmp
test
mov
cltd
pushl
cmpsl
imul
pop
sub
shl
cmpsb
lea
add
mov
xchg
mov
push
push
dec
and
cmp
out
cmp
test
jl
outsb
push
pop
scas
mov
xchg
adc
adc
push
jbe
insl
inc
pop
mov
dec
test
loope
mov
pop
dec
nop
icebp
notl
xor
add
notb
cltd
add
and
push
or
fiadds
add
adc
icebp
aas
dec
adc
mov
xor
fsts
xchg
leave
push
mul
mov
ja
ja
dec
jl
loopne
ds
mov
or
and
jl
imul
fstpl
int
and
inc
push
dec
ret
lahf
js
ds
xchg
or
add
lock
bound
ret
sbb
icebp
test
scas
bound
mul
movsl
cltd
sub
repnz
add
ds
std
aaa
push
mov
mulb
or
lret
pop
adc
dec
inc
ja
push
nop
jbe
xchg
sbb
sub
or
call
lret
cmp
dec
ss
mov
dec
pop
in
sbb
push
mov
lahf
mov
out
cli
cmp
fisttps
je
leave
dec
iret
jmp
jmp
outsb
jbe
jae
shr
pushf
and
cmp
movsl
aas
mov
aam
mov
mov
jge
in
fdivrl
push
pop
rcll
push
or
mov
pop
sub
mov
into
insl
xchg
in
ret
roll
insb
push
cltd
xchg
pushf
dec
fidivs
inc
dec
dec
mov
and
xchg
push
int
and
mov
int3
pusha
and
add
sub
and
inc
rcrb
xlat
pop
lods
into
pop
test
int
pop
scas
and
shll
call
popl
scas
aad
sbb
adc
inc
xor
iret
and
fstp
aam
sub
dec
cli
dec
jl
insb
pop
dec
lods
nop
jne
sti
push
dec
mov
adc
mov
push
mov
ljmp
jp
adc
imulb
shrb
sub
movsl
je
movsl
fiadds
push
rcl
cmpsb
cmp
fidivs
and
enter
addr16
xchg
dec
cmp
inc
mov
jle
lds
sbb
rclb
sub
sub
pop
mov
lahf
rcrb
cmpsb
cmp
pushf
loopne
jne
popf
or
ss
jnp
stc
pop
jb
jbe
fwait
mov
invd
inc
adc
pop
push
jmp
inc
scas
js
mov
inc
adc
pop
xchg
mov
mov
pop
test
addr16
movsb
jecxz
call
jge
leave
fidivrs
mov
mov
or
jge
lcall
aad
adcb
addb
scas
test
popl
xor
pop
dec
sarb
lahf
dec
jne
adc
or
insb
pusha
rolb
add
int
add
movsl
lock
loopne
cmp
push
mov
test
shll
or
xor
cltd
xchg
jg
inc
mov
out
jb
push
push
cmp
movsb
xor
adc
xchg
and
adc
sbb
pop
sbb
jl
xchg
or
fistps
inc
mov
xchg
test
push
movsb
sbb
movsb
dec
ret
xor
xchg
ret
test
das
dec
data16
in
push
mov
xor
push
das
pop
jo
sub
mov
cwtl
icebp
mov
add
loop
sub
mov
xor
sbb
xchg
push
dec
mov
outsb
lcall
sbb
inc
jle
cmp
xor
dec
aaa
xchg
int
mov
stc
mov
ja
inc
mov
icebp
jecxz
daa
adc
inc
subb
push
xchg
jno
mov
movsl
xor
add
jns
es
adc
and
mov
inc
hlt
insb
das
cmovbe
xchg
aam
jp
push
inc
aas
mov
lods
adc
lret
clc
mov
adc
lods
mov
mov
push
pop
dec
and
rclb
aaa
inc
pop
not
ss
sbb
jb
hlt
sub
fstl
sbb
mov
mov
stos
push
in
loopne
pop
inc
pop
scas
incl
inc
popf
cmovns
lods
in
mov
in
or
jge
imulb
ljmp
ret
faddl
sti
in
aad
cmp
push
out
clc
fs
clc
inc
jns
ljmp
adc
jl
jb
cmp
imulb
outsb
hlt
pop
pop
push
xchg
xchg
cmpsb
push
xor
push
daa
loopne
loope
addb
jne
sub
je
jae
scas
leave
icebp
jno
rorb
sbb
ljmp
push
push
xchg
sub
test
imul
jle
mov
cmp
enter
lahf
or
jmp
cmp
les
push
fs
andl
enter
fildl
daa
out
xchg
push
push
fwait
adc
push
and
xchg
mov
adc
or
push
inc
jl,pt
fsubrl
lock
inc
in
inc
cmc
repnz
adc
xchg
xor
decb
dec
sbb
jns
jecxz
lea
lock
push
aam
mov
pop
repnz
xchg
movsl
dec
outsl
add
test
inc
and
popa
push
xor
ds
lret
mov
jno
fadds
arpl
fwait
adc
inc
push
dec
addl
jg
notb
inc
jbe
rclb
mov
shrl
enter
cld
lcall
cmpsl
xchg
insb
dec
adc
ss
jp
shrl
xchg
es
push
xchg
pop
jno
insl
sbb
mov
lret
push
mov
or
pop
add
in
push
push
std
into
js
popf
dec
fcomi
push
fs
orl
xor
dec
test
nop
dec
jae
adc
dec
test
lea
xchg
cs
lods
movsb
loopne
xor
mov
mov
jns
std
in
je
cmp
xor
ljmp
icebp
mov
fidivs
mov
lret
mov
jno
movsb
push
or
clc
jo
pusha
lret
pop
mov
loop
leave
push
sti
or
aas
add
ss
rcrb
rcrl
dec
cmpsl
imul
jno
inc
mov
mov
je
push
mov
jb
stos
adcb
fistps
adc
mov
aad
xchg
popa
and
push
xor
shlb
inc
mov
int
jae
adc
push
mov
mov
dec
iret
jae
in
aad
push
and
and
inc
adc
call
shll
lods
pop
adcl
adcb
and
jns
aad
pop
outsb
notb
cmp
pop
sbb
daa
sbb
arpl
mov
or
shl
push
or
test
imul
inc
inc
jo
mov
mov
mov
dec
push
push
jge
push
incl
bound
sbbb
inc
imul
adc
sub
inc
push
shl
movsl
or
push
mov
push
dec
pushf
cmp
jnp
dec
pop
loop
sbb
lcall
popa
test
mov
incl
stc
jecxz
scas
push
pop
ret
sub
push
and
inc
cmpl
loope
cmp
dec
fsubs
jge
dec
add
push
or
or
out
sahf
or
mulb
lret
sbb
enter
nop
add
xchg
cmp
lcall
lahf
test
sub
xor
pushf
mov
test
pop
ja
lods
aam
and
ud0
and
daa
xchg
lahf
add
dec
push
inc
insl
loop
mov
adc
xchg
mov
test
sbb
jg
adc
ljmp
fs
addb
mov
jbe
dec
repnz
xor
mov
pop
popf
and
int3
cmpsb
cli
jp
lret
repz
loopne
mov
xchg
out
flds
scas
mov
inc
fsubl
fcomps
sub
pop
mov
xchg
mov
cmp
pop
mov
jmp
or
mov
mov
jae
notb
sbb
dec
shr
push
loop
insl
andl
inc
cmp
loopne
or
les
ret
jl
nop
clc
inc
jns
movsb
inc
icebp
and
std
les
and
and
mov
mov
test
sbb
sbb
movsb
push
stc
jecxz
jg
or
stc
pop
pusha
jbe
lahf
and
push
adc
or
mov
stos
inc
movsl
pusha
xchg
push
mov
pop
pop
mov
sbb
inc
xlat
mov
dec
adc
pushl
cmp
popa
rclb
fwait
cmp
sbb
rclb
sub
inc
shlb
call
and
lock
mov
mov
push
add
add
dec
xchg
and
pop
sbb
sbb
sub
xchg
aaa
aas
mov
and
push
xor
sbb
or
sub
pop
dec
add
mov
xchg
lahf
mov
into
divb
ljmp
add
les
loopne
stos
mov
ja
cltd
test
and
inc
jne
xor
lods
out
pop
jae
pushf
mov
cmp
and
stc
pop
xchg
pop
inc
cltd
push
lods
sti
inc
aas
fistpll
cmc
cmc
sbb
cld
mov
sub
jg
mov
scas
mov
inc
mov
and
js
stos
dec
jg
lea
sub
dec
ret
rcll
scas
pop
push
cmpsl
aad
pop
aad
jno
enter
int
jp
jbe
pop
mov
sub
lcall
mov
sahf
std
sbb
or
daa
pop
pushf
jmp
pop
push
mov
hlt
int
cmp
lods
mov
mov
xor
lds
out
clc
insl
scas
add
jge
inc
daa
fs
fimull
push
test
mov
push
int
jno
mov
movsb
mov
sbb
cmp
adc
addb
sub
jne
and
frstor
sub
insb
mov
in
push
out
cmp
pop
leave
pop
xlat
and
test
icebp
fstps
mov
or
das
and
xchg
add
and
xchg
cmpsl
sbb
mov
sub
imulb
push
push
ror
cmp
xor
outsl
aad
out
xchg
lods
adc
mov
fs
call
cmp
sub
loop
into
cwtl
fisubl
push
adc
adc
and
js
test
adc
cld
adc
jmp
add
jmp
aaa
ret
jmp
movl
dec
cmpl
mov
gs
adc
fiadds
aam
fisttpl
test
mov
inc
sub
and
stc
sti
fdivs
jg
insb
scas
fldt
push
cli
aad
clc
push
mov
mov
adc
mov
jbe
jae
mov
cmpsl
test
adc
hlt
sti
dec
divl
mov
stos
test
rcll
pop
add
sbb
xchg
std
sahf
imul
add
jle
gs
lods
icebp
pop
stc
iret
jmp
addl
stos
repz
sbb
adc
sahf
mov
stos
out
dec
ret
push
inc
mov
test
mov
mov
rep
mov
sub
fadds
sbb
lock
adc
pop
fldl
pop
xchg
adc
sbb
pushf
lds
xchg
cwtl
repz
into
scas
push
imul
fucompp
cwtl
loop
lock
pop
sub
imul
pop
aam
jae
adc
push
daa
adc
repz
insl
xchg
inc
jl
xor
stc
mov
rcll
pop
mov
out
fsts
testl
jo
sub
mov
aas
or
mov
add
daa
jo
test
cmp
xchg
inc
cmp
pop
fnstcw
add
adc
mov
xor
out
aam
mov
add
movsb
jge
mov
xchg
or
pop
sub
inc
sbb
adc
cwtl
shr
mov
mov
dec
jo
clc
or
or
xor
data16
pop
lods
lcall
jbe
inc
mov
stc
ljmp
mov
repz
test
das
ret
mov
xchg
testb
and
into
xchg
sub
ljmp
sub
adc
fcoml
sub
push
cmp
and
dec
xchg
jbe
pop
cmp
je
push
cmpsb
pop
sar
add
push
aam
cld
ss
mov
lock
xor
in
and
xchg
fcmovb
jmp
stos
jnp
mov
push
cli
ret
xchg
loop
jge
pop
cmp
add
adc
inc
les
aaa
rorb
adc
xchg
and
pushf
push
xchg
idivl
jle
or
fisubrs
leave
lahf
pop
int3
popf
inc
mov
mov
imul
jg
addr16
cmp
lods
xor
xrstor
jb
bound
push
xchg
out
dec
pop
sti
inc
packuswb
popf
aad
mov
dec
out
sbb
jl
in
push
or
lods
and
add
xor
dec
push
inc
mov
stos
and
and
lahf
out
adc
add
outsl
push
dec
cmp
cltd
aas
cwtl
jbe
cwtl
popa
popa
or
adc
loop
lods
dec
icebp
jg
push
addl
mov
inc
xchg
inc
push
es
or
fwait
pop
pop
and
cmp
or
daa
jbe
fcomip
xchg
xchg
lods
clc
jge
int3
jnp
sbb
lea
or
xchg
mov
jb
dec
or
repnz
fisttpl
cltd
pop
adc
mov
insb
cli
mov
dec
cmp
jge
pop
adc
mov
pushf
test
clc
int
push
inc
dec
loop
lds
std
push
mov
sbb
add
or
js
ret
mov
ret
xchg
mov
or
xchg
cmp
ret
in
ljmp
movb
rcrb
fists
sbb
dec
fldl
jle
xor
mov
test
push
ljmp
jmp
pop
xchg
push
mov
out
mov
pop
jmp
pushl
movsb
shlb
frstor
out
popa
dec
sbb
xchg
pop
cli
jl
dec
mov
movsl
mov
insl
or
int
sbb
sbb
push
xor
sub
lds
jo
add
jne
xchg
adc
add
outsl
mov
mov
mov
pop
in
loope
mov
lods
sahf
cld
call
mov
or
lret
mov
jo
jl
jl
pop
sub
and
movsl
icebp
lods
mov
cmp
rorl
xchg
and
hlt
cwtl
sub
push
sub
mov
pop
sub
aad
dec
mov
pop
ljmp
adc
inc
jns
in
out
sub
jg
and
jne
ret
popa
shr
stc
or
lea
imulb
ljmp
jge
sub
es
mov
pop
dec
mov
sub
xorl
lods
or
icebp
cmc
stos
mov
jmp
dec
adc
mov
or
js
clc
out
and
mov
cmp
lock
jecxz
int
test
mov
shr
aas
cltd
sbb
je
popf
or
sahf
inc
jle
pop
sbb
adc
test
out
faddp
outsb
or
shlb
lea
aaa
mov
loop
sbb
jo
inc
or
adc
fs
call
pop
test
rclb
scas
fistps
fcomps
sub
lods
in
xor
sbb
paddsb
push
mov
pop
pop
daa
aam
cwtl
xchg
out
pushf
and
inc
lds
inc
jae
xchg
pushfw
outsb
mov
iret
inc
pop
lret
xor
repnz
cmp
dec
jns
add
loopne
and
mov
jecxz
push
cltd
dec
jno
jmp
dec
mov
sarl
dec
sahf
cmp
add
mov
dec
ficompl
sbb
ret
shll
add
in
jbe
fnstenv
cmp
pop
lods
out
popa
xchg
xchg
xchg
jle
xlat
inc
stos
and
xor
inc
add
fsubr
popf
sub
adc
dec
inc
popa
push
cmp
mov
push
sbb
dec
test
fs
pop
sahf
outsb
push
shrl
pop
cmp
jp
jae
push
subb
iret
dec
xchg
jecxz
mov
les
imul
and
sub
inc
push
xchg
mov
lods
pop
loope
add
cwtl
push
cmp
or
pop
scas
mov
popf
inc
pop
hlt
roll
std
push
mov
jbe
dec
adc
or
cmp
cmp
in
mov
fiadds
cmp
push
js
das
pop
das
loope
push
sahf
pop
xchg
sbb
push
add
or
dec
pusha
dec
mov
xchg
cmp
sub
jmp
iret
lret
scas
and
int3
add
cmp
jae
inc
mov
push
xchg
imul
mov
test
mov
cmpsl
push
mov
mov
sub
iret
adc
dec
shlb
sti
fucomp
lret
pop
push
and
pop
ret
cmc
fisubrs
push
xor
adc
cli
push
mov
jp
mov
push
loopne
sar
js
subb
outsb
inc
in
fnsave
into
xchg
and
or
movsb
shlb
jmp
std
movsl
adcb
jno
lret
cmp
vcvtdq2ps
stc
jmp
insl
mov
negl
jmp
sbb
gs
dec
push
or
cmp
aam
dec
cli
iret
xor
add
xchg
ror
mov
add
mov
inc
and
adc
imul
pop
inc
jecxz
movb
push
jmp
mov
rcr
stos
aam
pop
add
jbe
mov
or
or
xor
xchg
dec
push
sarb
sub
inc
in
idivl
bnd
cmpsl
out
xor
push
aam
mov
outsb
or
insl
jbe
rcr
imul
dec
inc
mov
dec
xchg
lea
nop
dec
jae
xchg
inc
ljmp
inc
test
sti
pop
shlw
ficoml
leave
mov
push
insl
push
insb
aas
or
ret
lahf
das
pop
inc
mul
xchg
jns
push
add
inc
rolb
fsubl
into
jecxz
ljmp
inc
push
lcall
pop
push
lods
hlt
in
outsb
xor
push
and
dec
subb
in
enter
fdivrp
pusha
out
js
adc
mov
push
cmp
lret
aam
out
inc
test
add
ficompl
or
xchg
cmp
push
xor
shrl
movsl
push
sub
pop
rclb
dec
out
rclb
dec
fsubl
sbb
add
mov
inc
inc
neg
shrb
out
push
daa
cmc
adcl
in
and
lahf
aam
push
ss
jl
movsb
lea
jg
pop
icebp
pmaxub
dec
filds
or
jbe
cmp
cld
imul
clc
es
movsb
mov
jg
cmc
push
inc
lret
mov
ja
aas
std
cmp
xchg
xchg
lds
and
idivb
test
cmp
popf
iret
pusha
sub
cmp
xchg
mov
mov
sub
add
js
mov
into
and
jno
insb
scas
in
jl
push
leave
jecxz
mov
dec
out
push
icebp
mov
int
pushf
xchg
int
out
sbb
pop
xchg
sarb
movsw
shll
jbe
insb
and
sub
mov
jmp
ror
imul
cmp
je
push
int
test
popa
fwait
pop
test
and
push
out
aam
repnz
popf
lea
test
adc
test
and
nop
lock
mov
push
imull
xor
and
insl
gs
pop
mov
rorl
cmp
sbb
dec
pop
cmc
cli
ds
push
outsl
push
lds
xor
es
or
ds
jns
and
vpaddq
out
jb
inc
mov
jmp
lcall
adc
mov
cmp
pop
stc
xchg
mov
jns
xor
pop
sbb
cmpsb
mov
fidivrs
mov
sub
pusha
xchg
call
ds
or
stos
jmp
cmpsb
cmpsb
xor
faddl
or
enter
stc
push
pop
jno
jmp
and
call
dec
pop
mov
test
cmp
jecxz
aam
push
cmc
sub
xrelease
or
pop
add
dec
fistpll
mov
stos
enter
sub
dec
push
xor
and
nop
jge,pn
xor
fs
stc
jns
push
inc
xchg
dec
adc
dec
imul
in
test
lret
pop
std
pusha
pop
sbb
cltd
sub
xchg
jo
jns
push
and
dec
or
inc
xlat
add
mov
xor
adc
inc
nop
dec
cmpb
cmp
into
xor
mov
adc
jne
out
pop
sbb
cmp
cmp
dec
mov
lret
movsb
pop
mov
es
push
popa
mov
inc
mov
into
pop
sub
pusha
je
xchg
xchg
sub
mov
sar
test
xor
int3
cmp
jle
mov
clc
sub
jo
inc
mov
jmp
popf
mov
outsl
inc
cwtl
pusha
mov
adc
jp
cmpsl
in
ret
xchg
stos
inc
pop
in
lock
or
jmp
outsl
xor
pop
int
dec
std
cmp
push
pop
lds
add
cmpsb
mov
adc
decl
std
mov
leave
sahf
je
jle
pop
cli
testb
cmp
jae
in
pop
les
add
mov
mov
xor
adc
mov
test
inc
jae
push
mov
addr16
adc
push
push
jecxz
jo
movsl
fstpt
in
test
dec
stos
daa
dec
cmpsl
nop
out
push
cld
cmp
cmp
pop
push
add
inc
mov
xchg
xor
aam
mov
popf
in
lret
or
dec
shlb
inc
xor
lock
rorl
push
iret
xor
ljmp
mov
xor
cmp
mov
inc
sbb
insl
cs
clc
xchg
push
push
sbb
push
mov
pop
bnd
es
insb
lcall
repnz
xchg
pushf
in
pusha
imul
mov
je
sbb
daa
fucomip
push
mov
inc
add
add
mov
jb
pop
inc
pop
xor
cmpsb
mov
jo
jne
xor
std
std
push
inc
scas
je
jle
xchg
popf
fbld
adc
or
dec
addr16
fcompl
lcall
inc
lods
outsl
and
jns
adcb
pop
insl
pop
repz
dec
inc
push
in
jnp
sbb
es
aad
xchg
add
mov
aaa
jns
std
stos
pop
mov
test
pslld
adcl
xchg
aam
inc
pop
movsb
cmp
push
and
rcrl
mov
cmp
mov
mov
pop
test
out
inc
push
fbstp
aad
mov
out
rcll
fcomps
dec
loopne
xchg
or
lds
mov
jecxz
cmp
adc
nop
cld
repnz
push
mov
imul
push
xlat
loop
out
movsl
push
test
imul
icebp
push
add
push
int3
inc
cltd
flds
xor
pop
jp
push
xchg
out
push
jns
pop
sahf
loop
push
and
pusha
mov
dec
dec
scas
push
push
cmpsb
loopne
mov
repz
stos
dec
pop
bound
js
cld
pop
pop
mov
xchg
mov
mov
cmp
or
stos
dec
xor
inc
in
stos
adc
mov
lret
lret
fs
add
out
mov
and
push
cltd
cs
dec
adc
mov
ss
mov
xorl
inc
bound
scas
stos
std
fsubrs
push
in
mov
fcmovbe
stos
and
repnz
pop
ret
mov
clc
dec
fiaddl
xchg
aas
scas
mov
out
sbb
jbe
popa
inc
sub
out
mov
sub
mov
outsl
cmp
xor
pusha
loop
scas
mov
cmp
sbb
pop
nop
ss
pop
add
pop
jl
and
inc
mov
stos
cmpsl
xor
dec
cs
pop
mov
xchg
rclb
fwait
mov
std
lods
adc
add
sub
enter
sarb
pushf
ja
mov
ss
adc
fistl
sub
ds
mov
push
push
andb
mov
xchg
jge
stos
adc
mov
push
jecxz
mov
inc
mov
orl
xor
push
sub
loopne
aad
rclb
and
jecxz
stos
cs
iret
test
pop
outsl
dec
call
test
fmuls
aas
pop
cmp
fwait
dec
int
push
pushf
aad
shrb
push
mov
call
mov
sbb
mov
stos
and
adc
call
das
cmpsl
pop
cmpsl
in
mov
test
xor
mov
adc
push
xor
and
ljmp
jle
fldt
xor
mov
loopne
or
leave
aad
xchg
lock
xchg
ret
xchg
arpl
mov
scas
and
fmulp
xchg
lahf
data16
call
fwait
es
inc
inc
pushf
sub
sbb
mov
cmp
and
jbe
dec
xchg
stos
clc
jmp
cmc
fdiv
sub
nop
adc
sbb
mov
cwtl
inc
out
rcrb
ja
aam
jnp
push
mov
pop
popl
mov
push
fisubs
scas
call
in
imul
mov
scas
or
test
mov
mov
push
lahf
xchg
pop
in
or
sub
test
pop
push
aas
fisttpl
mov
loope
sub
lock
xor
mov
fsubrl
shll
enter
pop
popa
xor
adc
cmpxchg
mov
loop
add
cltd
dec
dec
testb
mov
or
add
pop
and
add
stos
mov
xchg
sbb
or
dec
or
out
ret
dec
push
aad
xor
xor
xchg
rorb
xor
or
inc
mov
mov
mov
dec
fiadds
jae
mov
xchg
lea
or
sub
leave
inc
movl
or
adc
inc
mov
lds
clc
jno
xchg
and
dec
stos
jmp
xchg
push
and
in
repz
cltd
out
push
mov
cwtl
scas
add
outsl
incb
cmp
imul
leave
aaa
inc
cmpsb
pop
bound
fwait
ljmp
mov
fs
xor
adc
lods
sbb
ret
inc
jbe
stos
dec
in
cltd
xchg
pushf
push
gs
pop
movsb
pop
jecxz
mov
mov
insb
cltd
xchg
sub
ret
mov
mov
sbb
and
fisttpl
mov
or
push
gs
in
leave
fmuls
lahf
or
std
dec
mov
lret
cmp
outsb
icebp
mov
cltd
dec
imul
enter
and
dec
lds
fs
js
sub
dec
ds
sub
dec
adc
xorl
mov
jg
insl
mov
icebp
or
fucomip
sbb
in
in
pop
out
cwtl
es
js
pop
shl
stc
and
cwtl
mov
push
jl
cmpsl
popf
insb
xor
adc
inc
ret
rcrl
fistpll
addr16
lcall
fidivrs
fnsave
ret
outsl
sar
sub
sub
adc
leave
ss
sbb
dec
xchg
or
popf
xor
or
loopne
push
push
xor
ljmp
sbb
cmpsl
inc
testb
bound
mov
or
dec
pop
frstor
subb
push
jecxz
insl
movsb
cmpsl
sbb
lcall
lock
neg
in
dec
adc
call
shrb
out
mov
push
fs
fs
adc
pop
inc
push
xor
imul
add
scas
test
jmp
jno
mov
add
pop
lea
shl
roll
mov
mov
xchg
ret
inc
jecxz
mov
xor
js
xor
xchg
aaa
or
xor
push
push
lods
std
inc
ds
js
icebp
lcall
xchg
imul
adcb
repz
push
inc
bound
movsb
or
sbb
add
in
ficoms
filds
mov
cmc
push
sbb
aad
sbb
cmp
mov
xchg
mov
xor
js
xor
mov
xchg
ss
xor
mov
mov
fucomp
xor
data16
lret
inc
mov
pusha
jo
jns
jmp
mov
divl
or
mov
xor
cmp
ja
jmp
stos
jb
int
addl
call
mov
cmp
jmp
std
jge
dec
mov
in
push
jb
loopne
mov
ret
xchg
lret
add
mov
xchg
daa
in
push
pusha
ljmp
aas
and
movsl
inc
jae
aaa
push
dec
pop
lods
and
in
lret
aad
xchg
mov
in
xchg
ds
jns
push
mov
iret
sbb
pushl
jbe
mov
sbb
icebp
ljmp
push
or
inc
xchg
add
dec
lcall
push
mov
jg
cmp
sub
pop
imull
sub
add
fadd
fisttpll
mov
int3
mov
fisubl
fucomi
pop
and
cmp
mov
repz
mov
mov
jne
les
and
sti
hlt
jge
aad
scas
lock
add
lods
add
sub
push
loopne
jl
outsb
sbb
push
push
popf
out
je
dec
or
adc
push
mov
cmp
cmpsb
dec
push
or
aad
sbb
lahf
repz
repnz
xchg
or
das
fstpl
push
jl
and
sbb
fcmove
xor
test
cmpsl
dec
add
ret
shrb
cmp
and
out
fldenv
dec
pop
jns
hlt
jno
xor
movsb
fdivrl
cld
xchg
mov
sbb
inc
push
pop
xor
mov
add
push
fnstsw
and
lcall
ja
lret
mov
push
sbbl
inc
inc
or
stos
dec
fdivrl
mov
repz
shl
cltd
jnp
dec
mov
dec
cmp
mov
cs
xor
sbb
cltd
jne
inc
and
inc
jno
cmp
shr
into
xor
mov
mov
mov
aad
mov
xchg
repnz
or
add
add
jae
in
inc
imul
loope
test
xchg
and
les
add
mov
mov
fwait
je
ljmp
mov
and
insb
test
mov
jae
mov
sti
das
cmp
out
out
jnp
int3
pop
shll
fsubrs
ds
hlt
mov
not
sbb
pop
sbb
cwtl
pop
adc
or
mov
clc
jne
xchg
idiv
sub
fwait
cli
bound
sarw
in
mov
js
loop
lock
cmc
mov
lods
lahf
sub
int
and
or
mov
hlt
add
fsts
sbb
push
inc
rcl
test
push
fucom
mov
pop
push
or
mov
or
inc
leave
sub
fld
enter
cld
ds
pop
inc
dec
cmpsl
popa
int3
and
pop
mov
sahf
int3
cmp
and
adc
test
hlt
mov
sarb
xor
and
cmp
pushf
scas
rorl
mov
lcall
mov
pop
sub
rorw
andl
inc
sbb
fdivl
and
and
add
cli
idiv
mov
pop
sbb
add
mov
idivb
ror
mov
cmpsl
stos
mov
fnstcw
or
mov
fwait
js
in
insl
cmpsl
popf
lods
stc
jb
daa
sbb
ss
movsl
in
and
add
xor
mov
inc
inc
int3
lret
sar
mov
sbb
stos
icebp
cwtl
loope
or
push
or
push
mov
fldt
out
repnz
loope
lods
sbbl
xchg
stos
xchg
fdivs
outsl
ja
ficoml
in
mov
jp
dec
jae
out
inc
sub
inc
clc
xchg
inc
sub
shl
roll
adc
hlt
cld
ds
lods
jnp
pop
in
dec
out
add
insl
js
mov
sub
rcll
push
mov
mov
in
lahf
fs
js
mov
adc
outsl
mov
add
push
jge
imul
and
xchg
cmp
arpl
int
ljmp
xchg
push
js
fistps
adc
and
cmp
mov
aas
popa
mov
xchg
ftst
mov
xor
outsb
xchg
cs
sub
mov
sub
je
mov
outsb
movsb
pop
pop
out
push
das
ds
mov
andl
adc
jae
inc
cmpl
mov
aam
mov
loope,pn
cwtl
mov
jmp
sbb
mov
push
and
sbb
repnz
sti
js
cmp
in
inc
lcall
or
and
cmp
dec
cmp
js
mov
push
pop
inc
and
push
ja
dec
cmp
arpl
jb
fcmovnbe
test
aam
mov
or
push
jae
iret
frstor
mov
fwait
cmpsl
roll
adc
loop
mov
inc
sahf
aam
mov
dec
ss
insb
pop
dec
jp
out
push
in
mov
lahf
mov
add
pusha
cmc
inc
imul
jp
sbb
mov
cmp
push
sti
and
sbb
push
sbb
gs
xor
xchg
and
sahf
cld
or
adc
jp
dec
lahf
sti
pop
or
mov
xchg
pop
add
dec
add
imul
sbb
test
in
jno
mov
test
cwtl
sub
cmpsb
int3
rcrl
xchg
out
sbb
roll
jg
daa
ficomps
dec
pop
enter
sbb
in
je
cmp
mov
and
sub
fcomi
sub
pop
fwait
jbe
mov
cmpb
jne
sbb
jns
arpl
mov
inc
add
inc
cmpw
outsb
cmp
clc
aas
hlt
aaa
or
out
jnp
stc
push
and
jg
cmpsl
enter
ficomps
or
or
enter
or
ds
or
icebp
push
add
nop
daa
shll
lahf
xchg
je
or
stos
push
push
loop
fsubl
sub
add
pop
int
leave
adc
testl
out
pop
or
and
mov
in
sub
lock
shrb
lret
sub
mov
js
xchg
or
sub
push
xchg
imul
popa
add
push
das
push
out
or
stos
cmp
ret
or
test
jbe
jecxz
cld
inc
clts
movsl
cltd
in
xor
sbb
enter
dec
sahf
mov
sarl
push
ds
push
sub
or
std
cmp
xchg
neg
lods
leave
xor
or
xor
mov
or
pop
insl
ja
push
pop
push
lods
and
adc
cmp
xchg
mov
iret
push
outsl
lock
cld
sbb
mov
scas
loop
mov
cmp
xor
jb
outsb
lock
pop
scas
rolb
dec
int
xor
mov
in
push
mov
dec
push
loope
or
push
jle
lock
dec
int3
inc
sarb
shll
push
pop
mov
mov
mov
into
xchg
add
adc
xchg
stc
ret
movl
xor
cmpsl
xchg
add
test
cmp
jmp
dec
sbb
rorb
cmp
sbb
outsb
jnp
sbb
adc
xor
cld
dec
jg
fisubrl
fiaddl
add
lods
inc
jge
mov
int3
xorl
cs
cmp
aaa
ss
and
mov
fcoms
jge
lret
int
mov
or
xor
sbb
add
fiadds
fisttpll
sti
fbstp
push
es
daa
add
lock
fidivrs
mov
into
and
sub
sub
cmp
mov
push
inc
movsl
mov
add
mov
addl
mov
cld
fucom
push
push
leave
and
pop
cmc
add
sub
lcall
outsl
sbb
jns
pushf
pop
mov
jp
lret
repz
add
popf
and
cmc
push
pop
inc
insb
sti
jle
jp
pushf
push
and
sub
jnp
aad
int3
daa
repz
mov
into
leave
jnp
add
aad
xor
jecxz
mov
rolb
mov
jbe
repz
inc
jb
data16
lods
mov
xor
push
jp
fldcw
xchg
add
xchg
sbbb
sbb
js
jmp
mov
xchg
dec
lea
mov
cmc
ret
sti
mov
pop
loopne
js
dec
ret
fcmovnbe
mov
out
dec
add
sub
or
and
ror
loope
lock
scas
addr16
dec
imul
fcomp
xor
lret
sub
into
bound
add
mov
call
mov
sbb
mov
sti
test
dec
cmp
and
dec
sub
je
dec
stos
jnp
out
test
das
std
add
cli
lret
inc
gs
push
je
in
cli
sbb
gs
pop
fistpl
cld
leave
and
xchg
movsl
push
cmp
push
jne
mov
jp
mov
test
xchg
pop
pop
lods
dec
xchg
xor
pop
test
in
xchg
scas
jb
and
les
out
cs
add
test
jbe
push
add
mov
fsubrs
bound
call
inc
mov
push
inc
push
imul
mov
into
mov
nop
insb
jle
popf
mov
clc
jl
or
sahf
jb
jb
cmp
pop
push
sar
mov
mov
push
adc
sub
mov
pop
popf
push
cltd
add
mov
in
push
dec
xchg
lcall
xor
jno
ss
xchg
addr16
jo
xchg
dec
jb
adc
xlat
rcll
js
dec
cli
jg
test
or
lods
mov
add
push
mov
iret
dec
sti
ds
adc
or
jmp
jno
push
pop
ret
fmuls
mov
cli
sbb
xor
lahf
pop
outsb
xor
push
sbb
js
aam
lods
sub
pop
sub
mov
inc
adc
cmp
push
add
sub
fwait
int3
cs
push
je
pop
or
jbe
repnz
movsl
sbb
cs
mov
cli
xchg
mov
sbb
push
or
sahf
xorl
test
iret
loope
fabs
mov
pop
push
add
in
xchg
xchg
sub
loopne
aam
dec
xor
sub
lea
data16
test
rcl
insb
or
insl
cmc
add
xchg
es
mov
test
out
loope
and
cld
or
xchg
int
fcoml
adc
and
movsl
mov
fstpt
mov
push
jae
mov
pop
push
mov
popf
push
xor
cmp
jmp
cmp
cmpsb
xchg
cmp
insb
jns
dec
stc
mov
test
stos
add
aas
adc
inc
sub
or
sbb
insl
mov
sub
scas
out
ret
stos
test
sarb
test
xor
push
imul
loopne
mov
shll
test
cli
lret
nop
cmp
add
xor
sub
add
lcall
xlat
push
push
iret
push
lcall
cmp
mov
mov
or
xor
jae
adc
jnp
hlt
dec
stos
lods
sub
aam
mov
cli
andl
lcall
jne
push
fsubrl
push
jp
xor
jne
push
idiv
push
push
cmp
pop
jmp
sahf
fldenv
mov
inc
or
jne
iret
int3
lret
xor
xor
xchg
jae
push
jg
ret
add
push
xlat
mov
xor
sbb
mov
mov
in
aaa
popf
stc
xchg
or
or
into
repz
daa
add
inc
test
mov
xchg
add
testl
cmp
stos
xchg
aad
daa
rcrb
push
adc
stos
std
jmp
jb
popf
pop
jge
add
mov
pop
pop
cmc
stos
call
xor
mov
or
rcrb
mov
imul
out
cld
in
push
jp
jle
adcb
or
or
outsl
stc
or
int3
inc
aam
mov
mov
and
idiv
es
je
sbb
popa
ss
fsubrl
pop
jmp
popf
stc
jnp
dec
test
adc
dec
mov
sbb
test
and
mov
fldl
dec
jl
outsl
mov
jmp
out
dec
rclb
in
sbb
out
xchg
mov
or
sbb
jnp
jecxz
out
and
out
gs
lret
mov
cs
jle
or
imul
outsl
dec
xor
ret
inc
xchg
es
cmp
push
xchg
jecxz
mov
das
xor
and
or
sbb
test
jo
fsubrs
push
push
dec
hlt
hlt
or
jno
mov
mov
xlat
adc
movsb
jns
mov
mov
fimuls
lds
or
mov
mov
push
icebp
test
nop
shll
stos
cmp
adc
hlt
inc
and
fadd
xchg
sbb
out
jo
fistl
inc
push
imul
pushf
mov
test
pop
iret
jp
bound
fwait
mov
addr16
inc
cmp
mov
mov
inc
rorl
inc
inc
inc
rcrl
xchg
mov
notl
push
push
jns
dec
mov
addr16
loope
popa
stc
cli
push
testb
and
pop
imul
adc
cmp
xlat
xchg
adc
jns
sahf
std
cmp
jne,pn
push
cmp
rorl
loope
mov
sub
lret
inc
pop
add
push
cmpsl
xlat
cmovb
fs
rcl
ja
mov
out
dec
xlat
icebp
sub
adc
scas
or
clc
cmp
movsb
mov
and
sar
or
mov
jge
jbe
mov
int3
fbld
sbb
xchg
into
hlt
xor
jne
rcr
push
cli
pop
in
cmp
lcall
inc
scas
pop
cwtl
call
lods
cs
adc
push
test
mov
ljmp
fs
loopne
mov
repnz
xchg
aas
shll
aaa
loop
in
movsb
xor
mov
push
scas
stc
push
loope
sbb
push
sbb
test
xchg
mov
std
xlat
sbb
xlat
mov
cmp
xlat
add
lods
scas
jle
xchg
xlat
jbe
add
push
aaa
or
ss
int
xchg
loopne
pusha
push
jne
or
inc
adc
mov
in
scas
and
stc
arpl
sub
fdivs
mov
mov
cmp
int3
jae
mov
loopne
lahf
out
imul
sbb
xchg
xor
stc
dec
in
aad
sub
dec
xchg
push
stc
jl
bnd
imul
jb
xchg
stc
inc
cmp
fdivrl
outsb
aam
pop
mov
jae
xor
loope
sbb
mov
lret
sar
pop
int
shll
popa
pushf
jl
lret
mov
lcall
cmp
push
mov
jne
add
pop
mov
aaa
dec
ret
xchg
xor
jmp
inc
lods
push
fstps
adc
stos
fdivrl
nop
sub
daa
add
std
push
push
mov
hlt
mov
add
cmp
dec
jns
dec
push
inc
mov
cmp
jmp
adc
stos
lea
cld
pop
dec
lret
iret
jle
jae
jle
fisubrl
mov
cli
inc
ja
mov
shll
movsl
pop
daa
or
arpl
clc
mov
sub
les
and
mov
xor
and
outsl
or
dec
jle
rclb
shr
mov
adcb
int3
jg
mov
iret
rcrb
mov
into
push
mov
and
ljmp
sti
test
fwait
movsb
jp
inc
mov
imul
inc
jp
mov
mov
xchg
xchg
or
push
xchg
xor
call
push
inc
pop
or
or
insb
adc
ja
imul
adc
aad
or
subl
dec
int
ffreep
mov
iret
and
ljmp
and
add
xchg
pop
mov
xchg
push
cmpsl
ja
jb
push
sub
add
nop
pop
xchg
push
lods
xor
lods
lcall
test
mov
jne
or
mov
repz
fs
xor
fiaddl
lret
scas
nop
lock
xlat
cmp
mov
data16
lcall
mov
aas
sbb
insl
icebp
push
mov
jno
testb
mov
enter
sub
push
xor
test
das
dec
imull
movlps
leave
ret
or
add
xlat
cmp
push
cmp
xor
dec
lods
and
push
in
adcb
cmp
clc
xor
ds
push
xchg
out
pushf
jo
cmp
jge
adc
popa
mov
pushf
test
mov
icebp
in
hlt
push
sbb
mov
xor
cmpsl
pop
jnp
dec
lret
adc
inc
add
sub
jg
xchg
cmpsb
subl
lea
xor
pop
push
mov
and
jle
inc
enter
addr16
inc
les
push
insl
out
aad
adc
jbe
enter
jge
jle
pop
call
lret
insl
fs
pop
xor
push
jge
mov
orb
pushf
je
cltd
insb
mov
loop
mov
js
mov
stos
pop
sub
aam
aam
bound
mov
incb
cmpsb
jmp
push
fnsave
shrb
or
xor
je
outsb
or
inc
jnp
enter
adc
cmp
sbb
xchg
stc
jg
pop
pop
lds
mov
nop
addb
add
xor
addl
add
jae
mov
push
cmp
or
clc
icebp
test
inc
inc
scas
jne
fnop
jl
or
lret
arpl
test
sub
cmp
in
shl
inc
cmp
xor
sbb
adc
cmc
inc
daa
mov
pop
movsb
jle
mov
jns
add
mov
shrl
jp
sti
out
mov
loopne
leave
push
xor
and
mov
lock
fwait
mov
ret
std
sub
fcomps
jp
repz
call
jle
xchg
push
xor
xor
cmp
movsb
data16
fnstenv
xchg
into
push
out
in
xchg
js
cmp
test
xchg
push
arpl
mov
jecxz
inc
sub
xor
dec
imul
mov
mov
adc
sahf
enter
or
push
fcoms
outsb
xchg
mov
cli
sbb
adc
fwait
jo
shl
divb
mov
adc
in
cmp
add
movsl
filds
orb
daa
mov
adc
rcl
jae
and
popa
shlb
incl
ja
vpaddusw
popf
add
out
ja
push
out
inc
repz
jle
test
es
rcrb
inc
xor
add
pop
mov
outsb
pop
idivl
test
out
sub
push
inc
mov
mov
xor
sub
mov
push
movsl
add
sbb
jg
xor
mov
pop
mov
pusha
push
neg
shll
mov
lret
jmp
filds
xor
mov
mov
in
xor
mov
push
fstpl
aad
push
cmp
test
subl
sub
imul
dec
sub
sbb
ret
ret
shrb
out
repnz
mov
outsb
xchg
lds
hlt
xchg
imul
out
sbb
sbb
pop
mov
cli
cmc
or
aaa
pop
fcmovu
jb
cmpsl
data16
fdivs
rcrl
ss
mov
sub
xor
sub
mov
cmp
mov
cmp
mov
stc
push
lret
fsubs
jns
aas
into
dec
cs
mov
xchg
dec
dec
andb
pop
into
out
and
push
cmp
mov
fwait
in
mov
push
push
push
pop
inc
popf
mov
adc
xchg
push
dec
adc
fwait
dec
mov
xor
lods
cli
and
in
adc
add
xchg
xchg
fs
add
fisttpl
xor
sbb
xor
jno
es
lret
mov
scas
pop
push
sbb
mov
ret
sub
mov
adc
ret
imul
bound
mov
adc
lret
leave
pop
or
xor
and
push
andl
inc
add
fcoml
dec
movl
clc
and
loopne
in
stos
lock
pop
add
das
je
add
sub
pop
xor
lods
cld
les
jl
inc
test
xor
pop
inc
add
mov
jle
adc
popa
std
cwtl
adc
add
shrl
pop
sub
mov
xchg
and
sbb
imul
inc
into
mov
ret
insl
add
sub
not
dec
cmp
xorb
lods
mov
xchg
notl
or
hlt
mov
jb
cmp
cwtl
cmpsb
outsl
xor
jle
ret
pop
test
mov
mov
test
ficompl
push
mov
repnz
xchg
cwtl
lcall
insl
iret
adc
push
mov
adc
mov
lock
movsl
pop
pop
dec
mov
xchg
pushf
xor
add
dec
neg
inc
pop
in
jns
dec
je
pushf
out
andb
inc
mov
xchg
push
or
std
enter
inc
andl
pop
xchg
fs
stc
jbe
lods
cmp
popf
test
xlat
pusha
pop
fsts
sub
jp
adc
aas
mov
or
jns
adc
xchg
dec
ret
jg
imul
jl
xchg
aad
maxps
out
mov
imul
popa
sbb
stos
pop
dec
ljmp
mov
mov
mov
cld
scas
mov
rol
adc
jne
mov
iret
cli
cmp
pushf
mov
mov
out
scas
xchg
jns
cmp
mov
sahf
push
das
call
sub
lahf
push
pop
xlat
cmc
es
fidivl
ret
add
jb
xchg
mov
dec
movsl
hlt
into
inc
test
push
sbb
mov
pop
aad
adc
aaa
in
mov
pop
and
pusha
or
stc
or
or
jmp
jp
ret
mov
imul
cmpsb
shll
test
or
aas
mov
int
imul
cmp
xchg
inc
cmp
and
les
icebp
inc
iret
push
sub
mov
add
mov
or
movsl
push
push
cmp
and
mov
pop
xor
mov
push
idivl
mov
out
sahf
pushf
add
push
loop
cltd
sarb
mov
xchg
shlb
nop
mov
stos
jbe
and
sbb
jecxz
pop
add
or
push
mov
mov
movsb
sbb
xchg
mov
pop
push
mov
inc
cmp
xor
xchg
or
lds
cltd
iret
mov
xchg
jbe
or
leave
mov
lret
addl
push
scas
out
and
movsl
xor
shll
cmp
or
and
jmp
lds
inc
aad
or
rcrb
sbb
inc
leave
andb
add
shr
jns
jmp
xchg
mov
cltd
xchg
xor
and
xchg
insb
mov
call
push
dec
inc
outsl
out
sbb
xchg
mov
nop
repz
js
push
enter
call
cmp
bound
inc
push
jecxz
xchg
cmp
das
or
repnz
repnz
jb
jmp
sbb
sbb
mov
add
xor
aad
mov
aas
sti
test
and
aas
cmpsb
xor
xchg
cmp
cltd
pop
push
das
cmp
ss
jl
lcall
loope
mov
test
push
xchg
sub
or
dec
test
mov
mov
lret
mov
dec
jae
ret
push
dec
call
mov
movsl
adc
cmpsl
mov
pop
pop
dec
mov
das
mov
push
cmp
jbe
aam
int3
nop
pusha
roll
xchg
jecxz
push
shlb
xchg
sbb
pop
movsl
mov
jl
call
mov
mov
es
lcall
cwtl
pushf
jae
add
fidivrs
arpl
test
test
sbb
jmp
popf
lds
fwait
push
popa
cmp
sub
sbb
push
andl
push
scas
xchg
sbb
push
mov
push
and
mov
jg
movsb
sbb
movl
push
push
sub
cwtl
mov
xor
lcall
inc
call
adc
test
dec
mov
ret
jp
mov
sub
push
xchg
or
loope
test
jle
pushf
mov
sbb
push
clc
bound
and
shll
ret
push
aad
pop
inc
sbb
fwait
ror
mov
push
cld
add
shlb
and
movsl
movsb
sti
jne
das
sbb
popf
out
mov
cmp
cmpsb
mov
ror
mov
fldt
mov
push
loop
hlt
sub
daa
lods
loope
dec
outsb
or
xchg
mov
mov
stos
add
out
inc
or
test
stc
test
ret
dec
pop
movsl
aas
dec
push
gs
subb
mov
xchg
mov
in
jae
mov
pop
test
scas
std
dec
mov
mov
mov
fdivs
pop
rcrb
xchg
adc
leave
jmp
jbe
push
sub
adc
daa
dec
filds
sub
sahf
or
lcall
inc
jl
shlb
mov
addr16
adc
cli
testl
jmp
sub
adcb
in
enter
shlb
sbb
mov
sbb
mov
rcl
fsubs
push
pop
jae
fistpll
mov
push
lcall
dec
mov
outsl
inc
das
cli
or
loopne
ffree
shl
fidivrl
mov
mov
pop
xchg
xor
icebp
fiadds
jno
pop
xchg
jl
test
ss
add
aam
push
or
in
or
cld
xor
ffree
hlt
xor
or
insl
sbb
lods
in
outsb
sbb
insb
cmp
sete
ja
jge
pop
nop
xchg
mov
mov
stos
into
pop
cmovs
insl
xor
sub
jp
or
dec
cmc
sub
push
mov
sub
outsl
push
mov
mov
xchg
cmpsb
add
xor
popf
icebp
jae
out
pop
adc
push
adc
or
rol
add
push
xor
cmp
stc
adc
push
jg
cmp
ret
push
popa
imul
pop
sbb
ljmp
mov
insb
je
hlt
lahf
mov
adc
xchg
scas
xlat
stos
bound
jb
mov
push
add
out
add
subb
pop
ds
rorb
and
jne
adc
ret
int3
mov
dec
mov
and
push
adc
scas
imul
js
test
insb
sub
sbb
int3
add
push
rclb
out
xchg
fwait
dec
mov
dec
add
insl
mov
pop
movsl
sti
outsl
sub
mov
in
subl
push
adc
nop
pop
sub
sti
repz
sbb
xchg
pop
add
ret
or
pop
ss
push
lret
mov
stc
aaa
fstpt
xchg
insb
es
add
add
fs
jbe
dec
xor
pusha
and
testl
cld
imul
test
lea
inc
add
add
jle
mov
sub
ret
jmp
fbld
xor
rorb
cltd
pop
icebp
jecxz
jp
clc
add
aad
pop
pop
leave
sbb
push
popf
mov
dec
cmp
icebp
repnz
adc
pop
push
sarb
lcall
push
lahf
sbb
adc
gs
mov
mov
stc
lea
fs
addl
int
dec
jbe
mov
pop
inc
scas
cmp
xchg
mov
jb
cmc
enter
mov
stos
imul
cmp
stos
and
xchg
sahf
ffree
sbb
add
pop
xor
jle
nop
mov
shr
loopne
fsubr
lock
outsl
mov
inc
ret
pop
insb
test
mov
and
pushf
out
dec
std
sbb
sti
xchg
xlat
xchg
adc
cmpsl
xchg
repnz
pop
jo
outsb
lds
add
divb
daa
daa
ljmp
in
dec
push
test
sbb
push
pop
mov
pop
jge
pop
sub
jb
test
ret
out
shrb
jne
sbb
mov
xchg
clc
cmpsl
add
sarb
lods
cmpsl
push
pop
xor
push
test
xor
pop
sar
ja
cmpsl
movb
add
or
sbb
repnz
iret
xchg
push
iret
in
ss
adc
pusha
push
mov
mov
lods
into
xchg
imul
shlb
adc
aas
mov
and
dec
pop
dec
push
sarb
fisubrs
nop
mov
clc
sbb
movd
int
mov
dec
sub
jge
pop
cmp
gs
shr
sbb
mov
dec
sub
rclb
mov
les
sahf
and
lahf
pop
xlat
push
pop
jnp
adc
push
ss
imul
and
pop
sbb
cmpsb
jge
decb
xchg
mov
mov
xlat
nop
test
push
outsl
lods
inc
dec
jmp
dec
lds
idivb
imul
stos
jmp
loopne
jo
pusha
dec
push
jmp
in
movsb
in
pop
push
add
jno
jae
dec
stos
cmp
push
aad
fcoms
outsb
mov
mov
xor
insb
imul
sbb
es
lock
xor
sbb
mov
daa
or
xor
and
xor
xchg
loop
cld
and
iret
mov
mov
mov
hlt
mov
daa
xchg
loop
fs
or
xchg
xchg
push
sbb
repz
mov
mov
and
cmp
jp
xchg
jle
cmc
xor
and
addb
cmpsb
or
jnp
inc
jo
call
dec
jb
adc
dec
mov
mov
shlb
insb
movsl
decl
iret
xchg
inc
adc
cmp
sub
out
mov
adc
xlat
lret
inc
push
pop
clc
stos
xchg
add
stos
mov
mov
int
int3
push
adcb
repz
mov
sub
sub
notl
pop
ss
mov
loope
sbb
popf
fstpt
add
fisubrl
lods
push
lret
insb
jmp
notl
add
mov
lds
push
imul
mov
mov
fstp
lock
inc
mov
out
imul
push
lds
push
dec
lock
lahf
lods
inc
jmp
scas
hlt
out
int3
lret
pop
pusha
jae
mov
enter
out
jnp
cmpsb
xor
push
sub
ror
inc
aad
xchg
fmuls
inc
ficoms
mov
in
or
mov
lds
sahf
sbb
or
ja
mov
push
push
add
or
addl
fcoml
dec
test
jnp
or
fistpl
or
ljmp
arpl
add
pop
push
inc
xor
dec
andb
or
lcall
stc
jo
add
cmpsl
addl
add
ja
lock
lahf
je
dec
orb
popf
popa
sbb
xlat
shlb
aad
xlat
pop
xor
outsb
and
mov
pop
outsl
add
clc
leave
pop
leave
fcompl
dec
and
dec
pop
mov
xchg
mov
mov
in
dec
jp
incb
stos
hlt
das
cmp
sti
les
or
stos
or
xor
jecxz
mov
push
xor
cmp
mov
xchg
js
sub
push
mov
stc
hlt
sub
jo
loopne
sbb
bound
cmp
sbb
iret
add
mov
adc
enter
mov
lcall
xor
jge
lds
aad
lea
test
pusha
sub
aaa
scas
stos
enter
sbb
repz
sbb
out
int
into
mov
adc
mov
leave
cmpsl
pop
jmp
sbb
es
jnp
outsl
jnp
test
jg
cld
xor
sub
sub
cmp
mov
leave
jnp
push
mov
push
ljmp
mov
insb
je
lock
out
in
bound
aad
pop
inc
arpl
outsb
inc
outsl
mov
pop
mov
addl
jl
sar
fisttpll
pop
cmc
fwait
cli
fadds
sbb
adc
jg
nop
mov
sub
sbb
pop
or
fisubrl
pushf
movsb
mov
lock
popf
cli
mov
test
outsl
sbb
cmpsl
mov
fisubrl
lods
out
jmp
push
jmp
xchg
cmp
xchg
xchg
sub
jae
sbb
mov
mov
mov
rorb
es
sti
insb
dec
cmpb
cli
push
jmp
cld
popf
into
cwtl
mov
fcoml
push
sahf
leave
xor
ror
add
xchg
stos
bound
int
inc
ret
lret
idivb
mov
clc
adc
ljmp
lcall
out
stos
sub
push
inc
shll
fcoml
loopne
pushf
jo
insl
mov
push
and
xchg
clc
adc
cmp
sbb
cmp
mov
jbe
leave
ss
add
je
cmp
scas
sbb
xor
xchg
sub
fs
pop
lods
clc
or
jns
fnstenv
dec
and
jg
adc
xchg
push
adc
xchg
cmp
sti
jp
imul
xor
and
or
pop
jbe
sahf
sub
hlt
jnp
ss
aas
sti
dec
xacquire
push
testb
lcall
add
or
pop
xchg
aaa
jg
inc
in
add
daa
and
or
mov
sub
dec
mov
mov
or
insl
push
jp
mov
daa
les
loope
dec
mov
xchg
or
enter
mov
incl
out
jnp
fldl
xor
mov
fisttpll
insb
cmp
lods
je
mov
adcl
mov
jge
bound
cmpsl
imul
mov
xor
nop
iret
lret
cli
mov
mov
or
pop
mov
ja
pop
loop
sub
adcb
popf
and
bound
into
lret
out
xor
add
cs
outsl
or
dec
shlb
adc
mov
movsl
insl
xchg
jp
ds
xchg
outsb
inc
clc
scas
in
hlt
dec
pop
mov
addl
inc
int3
inc
inc
sub
and
or
xlat
in
mov
fidivs
addr16
pop
pop
cmc
sarb
cmp
repz
sub
scas
arpl
int
pop
les
adc
cmp
jns
pop
lds
js
push
adc
mov
bound
test
mov
dec
mov
jge
pop
cmc
mov
pop
lock
repnz
in
hlt
sbb
dec
cmp
gs
or
xor
stc
stos
cmp
push
mov
cwtl
cwtl
js
pushf
fildl
add
push
mov
movsb
mov
jae
shlb
or
lcall
test
mov
mov
icebp
insl
sub
sar
pusha
pop
std
xorl
test
jne
rorl
loop
lcall
jae
mov
cmp
sahf
mov
mov
bound
sti
sbb
adc
mov
adc
jno
sbb
mov
sbb
mov
icebp
adc
out
hlt
lahf
dec
pop
mov
sti
mov
mov
sahf
test
push
jno
jmp
inc
loope
and
out
and
movsl
lock
lcall
sub
lods
mov
out
mov
pop
push
repnz
cmp
pop
xor
mov
inc
jae
int
ret
cmp
sbb
bound
sub
xorl
push
pop
sub
xchg
jo
push
and
sbb
lock
sub
aaa
mov
cmpsl
jge
fnstenv
stc
xchg
jns
pop
sbb
out
inc
vminps
lods
dec
fs
repnz
add
nop
idivl
lcall
adc
jge
lcall
lret
nop
cmp
jle
inc
push
dec
push
jl
lods
jg
xchg
mov
push
out
push
movsl
sbb
jbe
or
imul
addb
ja
xor
cld
mov
pusha
and
dec
pop
repnz
test
mul
pop
stc
lds
cmc
cmp
mov
rcpps
xor
mov
pop
movsb
xchg
pop
cmpsl
push
pop
add
je
sbb
aas
pop
aas
mov
sub
lods
sbb
push
out
push
adc
pop
cmp
or
ljmp
test
out
mov
push
push
arpl
das
jnp
aam
in
fmulp
ja
inc
andb
inc
daa
xor
fildll
jno
cmp
fnstenv
and
inc
aam
xlat
jae
mov
mov
pop
nop
dec
daa
jle
call
mov
mov
loope
mov
into
decb
and
mov
sahf
sahf
adc
std
gs
stos
insb
mov
testl
adc
sahf
jnp
stc
stos
mull
je
pop
and
push
bound
rcrb
fwait
mov
sbb
dec
test
gs
scas
xor
nopl
adc
ja
inc
fmull
sbb
repnz
dec
fcomi
rcrb
fiadds
xchg
sbb
dec
mov
daa
outsb
push
mov
sub
mov
hlt
sub
lahf
and
in
xor
mov
jmp
orl
push
mov
loopne
addb
sbb
ret
mov
and
push
arpl
xor
repnz
iret
sti
nop
sub
inc
push
out
cmc
sub
and
scas
push
and
xchg
jae
in
sub
loope
adc
xchg
aas
adc
stos
push
xor
shll
das
inc
inc
jge
push
and
or
int
mov
xchg
pop
xchg
scas
push
jns
subb
popa
pop
outsb
test
sub
fs
pushf
mov
adc
push
xchg
test
test
adc
push
pushf
icebp
pop
sbb
imul
mov
icebp
and
mov
add
shl
dec
sub
inc
int
fisubrs
push
test
dec
mov
inc
push
adc
mov
push
int
insb
inc
mov
xchg
les
loope
mov
jge
add
into
pusha
lods
xor
xor
ret
mov
or
sbbl
xchg
pop
arpl
in
sahf
ret
and
js
outsl
and
inc
dec
jbe
aam
mov
jp
and
push
ret
xorb
mov
sub
insb
or
mov
mov
loopne
cld
aaa
dec
push
stos
loopne
ja
cmp
adc
pop
pop
data16
jg
out
cmpsl
stos
aaa
or
dec
aam
cli
cmp
imul
xchg
adc
jo
in
ds
jo
call
popa
jne
aad
imul
lds
cwtl
push
and
mov
xchg
and
inc
in
dec
test
adc
loop
mov
xchg
jl
mov
mov
fcompl
mov
or
mov
mov
jb
sub
std
cld
loopne
ficomps
pop
mov
pop
jg
push
lea
test
cltd
bound
xchg
scas
dec
mov
inc
mov
add
les
or
pop
jbe
lret
inc
pop
mov
insl
push
xchg
mov
in
or
cli
jle
inc
fdivrs
adc
outsb
cmpsl
nop
sbb
mov
mov
test
mov
in
jne
popa
push
inc
mov
mov
push
inc
or
aam
loope
xor
pushw
adc
les
mov
fs
jge
and
ss
mov
popa
dec
in
iret
mov
jb
sbb
pushf
sbb
roll
cmpsl
sahf
jge
inc
jmp
push
mov
test
sbb
xchg
cli
xor
mov
jb
push
adc
sahf
fisttpl
push
xor
out
pusha
fisubrl
add
enter
out
inc
scas
hlt
enter
loope
jne
in
imul
bnd
jo
mov
scas
fistps
sub
rolb
lea
xchg
ja
jge
jne
ret
xchg
cmp
add
fisubrl
lret
xlat
mov
or
ret
inc
cltd
dec
or
push
les
fucomi
mov
jae
jmp
dec
or
mov
xchg
sbb
repz
jbe
jae
movsb
lcall
in
jmp
pushf
pop
pop
xchg
cmp
andl
mov
push
mov
pop
xlat
scas
and
mov
mov
andl
test
adc
movsl
xchg
mov
das
pop
sbb
hlt
or
nop
xor
notb
cmpsl
mov
xor
mov
xchg
iret
adcl
mov
and
push
dec
sar
das
cwtl
popa
test
lea
cli
aam
ss
mov
loop
rcl
xchg
xor
jle
sbb
dec
test
out
jns
or
dec
cs
test
cmpb
mov
test
cwtl
cli
pop
adc
mov
jecxz
cli
jge
fadds
lods
iret
std
je
jl
xchg
popf
add
sbb
xlat
insb
adc
lea
mov
jp
xchg
enter
pop
adc
push
adc
and
add
push
inc
and
inc
sti
popl
insl
dec
lods
mov
scas
inc
aam
lret
lods
es
or
jb
mov
mov
and
loopne
push
cmc
mov
cs
inc
pop
in
iret
push
neg
or
pushl
sub
lods
pop
add
mov
ja
push
jg
testb
subb
push
jns
rcl
jnp
int3
or
mov
mov
jmp
inc
xchg
sbb
add
mov
cmpsb
mov
pop
shrl
fidivrs
lahf
sub
imul
pushf
cli
in
or
sbb
dec
dec
xor
xchg
mov
mov
pusha
push
adc
sub
sub
cmpsb
jge
pusha
adc
inc
xchg
aad
push
aam
ret
mov
or
inc
scas
pop
rcrb
js
pop
std
icebp
xchg
add
push
add
mov
adc
inc
jnp
into
data16
or
dec
pop
aaa
xchg
inc
or
lds
popa
lret
cwtl
or
lret
pop
mov
test
in
stos
sub
divb
in
pusha
ds
gs
js
femms
pop
and
lods
dec
notb
rolb
push
xchg
jno
add
ljmp
push
mov
mov
fnstsw
jno
mov
cltd
inc
xor
dec
lahf
or
lock
mov
mov
aas
jge
sbb
mov
dec
out
ljmp
xchg
shlb
or
dec
sub
jns
sbb
mov
loop
ret
push
in
sub
adc
inc
test
fistpl
lret
mov
aas
sti
iret
fcoms
cmp
jl
xor
clts
fbstp
push
xor
insl
loop
and
xchg
fdivl
or
cmp
hlt
dec
fwait
data16
pushf
movsl
jnp
jbe
enter
insl
insb
cwtl
ret
mov
bound
arpl
pop
sbb
dec
popaw
nop
lea
jo
popa
popa
out
je
jbe
pop
pop
dec
cmpsl
lock
nop
lahf
mov
dec
imul
push
push
in
and
cld
aas
cmp
aam
fdivp
cld
pop
or
stos
ds
mov
cld
pushf
aas
jmp
jno
dec
or
and
je
lods
add
inc
jp
bnd
cmp
outsb
out
mov
add
dec
aas
lods
push
test
in
jmp
ror
in
mov
insb
pushf
es
test
jbe
es
inc
nop
sbb
test
xchg
rcrl
js
or
jne
or
cmpsb
jmp
pusha
dec
xor
rcrl
aam
data16
cmp
rcrb
sbbl
mov
cltd
adc
loope
aam
mov
cmpsl
push
into
pop
pop
xor
loope
xor
stos
push
ja
mov
imul
bound
mov
mov
roll
xor
jle
sbb
cmp
and
imul
cmpsl
enter
daa
popa
insl
mov
movsl
dec
sbb
mov
mov
mov
dec
fwait
add
and
int3
ss
or
shl
and
bound
xchg
shlb
mov
dec
mov
xor
adc
stos
js
jge
inc
and
xor
xor
stos
cmpsl
push
shlb
incl
sub
mov
out
adc
dec
pop
xchg
not
outsb
shll
mov
popf
sbb
adc
repz
icebp
cmp
bound
sti
xchg
loope
inc
push
xchg
das
push
mov
sub
clc
sbb
les
cwtl
mov
test
sub
stos
mov
inc
fidivs
cli
cmpsl
fldenv
loopne
cmp
dec
dec
mov
push
addb
insb
arpl
sahf
imul
pop
sti
inc
stos
add
stos
sbb
sub
jecxz
pop
test
imulb
push
cmp
and
outsl
mov
sub
iret
pop
mov
sbb
mov
push
push
int3
sub
mov
test
das
mov
cmpsl
xchg
cli
jmp
mov
mov
xchg
fcoms
pop
mov
es
out
stos
or
xchg
scas
and
pop
mov
dec
inc
lock
cwtl
jecxz
mov
sti
mov
pop
sahf
mov
adc
adcb
cmpsb
fistl
int3
cld
daa
stos
das
pop
sti
mov
and
stc
arpl
shll
inc
xadd
adc
jmp
jne
adc
lret
jle
in
les
push
in
sbb
insl
repnz
dec
cmp
sbb
push
mov
sub
cmc
dec
sub
push
push
adc
fisubl
xor
iret
int
push
cmp
out
fcomp
mov
pop
enter
jo
cmp
bound
push
pop
mov
inc
xchg
jo
pop
pusha
repnz
sahf
xchg
mov
aad
and
popa
lods
sub
loop
imul
xlat
jbe
dec
pusha
xchg
jbe
xchg
jns
stos
data16
add
mov
outsl
or
push
sbb
int
scas
push
cmpsb
movsb
adc
hlt
movsl
cld
pop
ja
sbbl
insl
rol
repz
lahf
mov
aam
sbb
pop
popf
add
arpl
pop
and
incb
sub
sahf
add
and
rorb
xchg
adc
cmp
std
aam
jecxz
jb
push
cmc
xor
mov
xchg
jmp
or
jnp
scas
in
in
jns
mov
cmp
and
leave
movsb
in
hlt
lcall
daa
pop
sub
jo
mov
jp
cmp
repz
xchg
in
cmpsl
pusha
pop
inc
push
cmpsl
ret
mov
aad
and
dec
push
in
call
inc
in
arpl
mov
sti
ss
or
outsb
aam
sbb
shlb
xor
cli
xor
push
sbb
clc
in
or
push
mov
call
mov
imul
jno
or
mov
add
cli
sbb
adc
mov
iret
jl
outsb
sti
test
push
mov
sub
fdivl
or
fadd
std
cmp
fs
testl
lds
int3
and
push
add
jns
imulb
mov
xchg
mov
xchg
cmpsb
addr16
jns
jne
sub
cmp
inc
xchg
jb
rol
xor
push
xor
rorb
cmc
jge
xchg
mov
test
jnp
into
mov
roll
xchg
add
cmpsb
cmp
roll
cmp
and
xchg
in
call
aam
out
andb
adc
out
shll
or
mov
ret
pop
cltd
js
add
pusha
flds
movsb
insb
jne
fadds
fcoml
ret
jb
xchg
mov
out
or
in
fsub
arpl
xchg
add
ja
xchg
cmp
shll
push
and
ss
push
in
cmpsb
xor
in
push
add
lahf
or
xor
xchg
xchg
loopne
inc
pop
xchg
or
stc
repz
fists
dec
jnp
jl
push
daa
pop
cmpsl
inc
xchg
pop
test
popl
cmp
xchg
clc
in
stos
in
rcll
js
dec
bnd
inc
cli
xchg
xchg
mov
movsl
cli
stos
test
into
push
cmpsb
cmp
adc
push
cmp
out
or
decb
dec
cmp
pop
xchg
pop
jnp
vpsubd
std
test
mov
and
rcrb
xor
inc
push
bound
outsb
js
adc
int
mov
mov
mov
inc
into
push
jge
aas
and
cwtl
cs
lahf
pop
cmpsb
cwtl
inc
lods
lret
adc
int
cs
dec
or
jecxz
sbb
in
in
inc
cmp
add
sbb
movl
pop
sub
pusha
sbb
ds
jmp
xor
pusha
sbb
pushf
gs
dec
std
pop
insb
bound
idivb
jge
dec
daa
mov
mov
stos
mov
xchg
outsl
pop
ret
and
mov
cmp
roll
pop
mov
fcoms
and
repnz
xlat
outsb
test
fcomi
fiaddl
cmp
shrb
out
push
shrl
rcrb
divl
sti
pop
add
sub
adc
daa
adc
jle
int
dec
popf
jmp
push
iret
es
xchg
faddl
or
mov
bound
notb
ljmp
pop
fcmovne
daa
insl
push
mov
lcall
lret
dec
cli
xchg
js
and
pushf
add
popa
clc
add
pusha
jb
xor
cs
push
add
jns
cmp
mov
cwtl
sub
jne
in
aam
stc
sarb
imul
add
scas
cmpsl
push
cmp
xchg
out
orl
dec
xlat
mov
arpl
add
scas
cli
push
and
xor
xor
sub
sub
cmp
imul
test
mov
fsubrs
dec
jne
or
push
jmp
jae
test
dec
push
or
lods
sbb
mov
push
push
xor
sub
sbb
pop
mov
ljmp
pop
mov
fsubrs
and
int3
push
jb
int
sub
out
jae
jne
jg
add
lods
dec
popa
mov
jbe
pop
jecxz
test
cmpl
fildl
mov
mov
cmp
fiaddl
ficoms
push
inc
jbe
xor
popf
dec
scas
mov
pusha
out
sub
mov
stos
lret
movsb
dec
outsl
cmpl
cmpl
push
stos
std
and
iret
adc
stc
or
sti
pop
pop
mov
inc
pop
rcl
mov
add
xchg
icebp
dec
add
cmc
mov
aaa
sub
jbe
push
mov
gs
orb
hlt
pushf
push
pop
into
jno
popa
aaa
dec
das
cmc
sbb
in
je
mov
pop
in
jno
pusha
push
int
cmp
or
adc
repz
lahf
aas
cmp
xchg
pop
gs
mov
push
mov
das
push
pop
fldl
or
jno
test
push
out
pop
sub
fsts
fwait
sbb
or
mov
and
and
inc
popa
cmp
jmp
pop
loopne
in
mov
or
clc
in
adc
jns
adc
sub
xchg
ret
sbb
dec
fildl
adc
insl
loopne
in
stos
mov
out
test
cmp
movsb
bound
dec
popa
leave
sbb
mov
loopw,pn
jne
ret
adc
repz
cmpl
sbb
lods
inc
jp
imul
int
pushf
sbb
dec
push
xchg
out
cltd
and
add
jno
lcall
inc
ss
push
fs
pop
into
sbb
mov
stos
popa
test
daa
out
xchg
les
stos
insb
mov
outsl
adc
or
mov
sbb
rcll
negb
out
popa
add
lea
mov
out
mov
das
xchg
or
dec
popf
jno
mov
mov
daa
sub
and
mov
in
enter
mov
xor
cs
fprem1
sbb
out
jl
out
ffree
fistpll
jmp
add
aam
dec
enter
idivb
mov
xor
xchg
add
inc
or
icebp
mov
xor
inc
push
lds
ds
or
dec
mov
pop
cmp
xor
adc
test
shrb
cmc
dec
cmp
ds
dec
imul
pop
inc
mov
bound
cli
mov
xor
inc
cwtl
mov
sarl
andl
lea
adc
sti
cmp
aas
lods
ja
aaa
mov
pop
in
add
and
add
dec
pop
inc
inc
aaa
cmp
lahf
loopne
lds
insb
ret
shrl
or
subb
out
out
xlat
mov
cmp
ret
insl
ds
sarb
sbb
in
fadds
cld
mov
lock
cmpsb
fcoms
xchg
and
aaa
sahf
fidivl
std
mov
push
jae
call
xor
ret
fstl
push
scas
stos
in
xorl
repnz
loope
add
jo
in
fimull
int3
sub
daa
rolb
mov
jns
iret
insb
pusha
inc
and
sub
and
xchg
mov
adc
int3
bound
std
xchg
add
push
add
mov
cli
arpl
jnp
adc
add
es
dec
xlat
mov
jg
push
addr16
jo
xor
dec
sahf
add
lea
lods
pop
mov
in
mov
cmp
imul
xchg
push
ror
ds
enter
push
adc
je
dec
dec
aas
aam
sbb
inc
popf
rorb
sub
mov
cmpl
out
inc
mov
gs
jecxz
outsb
or
dec
sub
mov
jnp
sub
mov
xchg
in
lahf
mov
pop
roll
roll
push
and
mov
dec
xor
fcmovnb
cli
mov
das
fcom
pop
dec
sbb
loopne
jge,pn
cmp
into
add
sbb
jno
jb
out
addr16
sbb
and
das
stos
out
push
sub
mov
mov
pop
cmpsl
adc
xchg
mov
sub
xchg
clc
pop
mov
sbb
les
stos
or
xchg
fiadds
cld
jb
es
push
push
mov
push
pop
das
jp
loopne
cmp
xchg
loopne
adc
fs
movl
mov
xor
pop
and
aam
xchg
pusha
in
or
bound
sbb
push
roll
pushf
pop
js
lcall
push
pop
std
pop
add
je
push
movsl
xlat
jge
insl
push
jnp
fnstsw
adc
fwait
inc
out
mov
and
mov
cwtl
stos
jb
adc
mov
mov
nop
sub
push
repz
stc
adcb
clc
mov
movsl
inc
roll
test
lods
hlt
or
loopne
fwait
jmp
dec
cmp
dec
test
cmpsl
xchg
jbe
or
icebp
imul
mov
mov
sbb
jl
sbb
mov
push
cld
mov
or
xchg
jns
inc
or
jo
les
scas
stos
iret
lret
jb
popa
adc
repnz
data16
orb
scas
mov
push
xchg
add
xchg
mov
std
jecxz
loopne
jg
lcall
roll
jns
lahf
xchg
or
inc
pop
gs
rcll
push
jne
mov
into
cmpsb
sub
dec
lret
stos
cmp
fstl
outsl
popf
sbb
jge
adc
sub
jmp
cmp
gs
out
rcrl
or
in
les
pop
hlt
lods
inc
xlat
cld
stos
les
movsl
lea
inc
sub
add
cmpsb
push
sbb
inc
sub
je
jbe
rclb
mov
int3
movsl
out
pop
and
jecxz
aam
xchg
or
mov
push
int
cmovns
out
out
arpl
lcall
mov
lahf
and
jp
mov
dec
test
ds
xlat
ret
cmp
push
xchg
gs
push
ja
inc
pop
and
fisubrs
mov
xlat
imul
lcall
inc
inc
xor
pop
loope
mov
jb
lds
rcrb
clc
add
loopne
xchg
mov
xor
out
mov
mov
je
xlat
stc
test
aaa
adc
pop
mov
cmpsb
push
testl
pop
int3
inc
ss
cmp
movsl
and
ss
stc
imul
iret
fwait
icebp
xchg
pop
cld
or
xchg
jbe
repz
sub
cmpsb
and
cmp
out
add
xor
aaa
push
inc
pop
xorb
test
cmp
into
es
xlat
mov
rcll
pop
pop
cmp
dec
out
xchg
or
mov
pop
mov
mov
jl
xchg
imul
aam
ds
jns
mov
andl
fldln2
dec
imul
add
mov
or
mov
cmc
or
push
cmpsb
addb
daa
scas
xor
jnp
lcall
movsb
ljmp
or
popl
mov
sub
adc
mov
pop
jnp
dec
add
cmp
popf
out
push
in
sbb
nop
adc
xchg
sbb
sahf
jno
jmp
mov
mov
into
adc
test
xchg
jnp
stc
leave
adc
cmpsl
rcrb
add
cmpsb
ja
test
or
div
mov
fcmovnbe
xor
fldt
and
jae
and
dec
idivb
and
add
sub
xchg
fs
and
adc
lea
leave
xchg
push
iret
jge
add
push
sti
pop
jo
mov
frstor
pop
inc
and
xchg
cmp
push
dec
in
data16
jmp
sbbb
push
ret
mov
pop
gs
mov
movsl
mov
jnp
out
or
push
xchg
mov
mov
mov
jecxz
je
push
shlb
cli
inc
inc
notl
jb
int
in
ja
pusha
push
xor
fidivl
lret
mov
or
cwtl
pop
cmp
aam
add
pop
test
jmp
dec
cmp
es
lahf
pop
pop
aad
xor
in
push
jp
loopne
xchg
mov
sbb
pop
sbb
shlb
inc
jo
add
mov
fcompl
fildll
je
cmp
ja
pushl
fdivrs
lahf
xor
jmp
push
repnz
lods
xchg
pop
or
std
addr16
sbb
xor
repz
clc
mov
or
or
movl
xlat
push
cs
sbb
cld
xor
sbb
xchg
xlat
inc
ret
int3
and
or
pusha
daa
shrb
xorb
mov
or
bound
daa
repnz
jmp
cmp
aam
push
xor
test
push
fldenv
mov
out
pop
aad
clc
push
aaa
mov
xchg
mov
scas
xor
gs
movl
jb
xchg
push
inc
mov
sbb
pusha
fldt
cmp
xor
jae
mov
popf
loopne
sub
shl
out
mov
fsubl
flds
add
mov
jns
cmc
dec
dec
or
leave
cld
adc
sti
xor
std
push
mov
adc
ficoml
call
sbb
cltd
out
test
mov
scas
ret
push
into
pusha
sti
push
inc
jecxz
cmp
sub
push
mov
jle
jle
outsb
jecxz
int
ret
inc
arpl
add
sub
pop
aad
das
movsl
xchg
mov
cmpsl
xor
mov
out
icebp
gs
movsl
inc
aad
mov
jae
in
add
movsb
lods
push
inc
iret
rcl
stos
mov
xor
sbb
jo
mov
ljmp
mov
dec
int3
mov
cltd
adc
and
movsb
hlt
cltd
mov
ret
fwait
mov
jns
xchg
sti
inc
sahf
sbb
or
mov
arpl
or
mov
xlat
ds
mov
inc
es
test
inc
and
enter
jbe
sbb
adc
fdivl
imul
dec
sbb
sub
test
nop
pop
pop
popa
lods
push
xor
mov
jg
lock
push
ficompl
xchg
std
out
cmp
mov
mull
arpl
xorl
fsts
cmp
out
aaa
mov
fildll
add
iret
cld
hlt
jne
sbb
mov
jne
daa
or
and
jecxz
stc
fstpt
dec
mov
iret
inc
lcall
xchg
arpl
fisubl
adc
fadd
push
test
cmp
pop
xchg
dec
jle
cmp
xor
ror
fmuls
repz
jo
mov
bound
mov
xlat
pop
std
jge
cs
iret
jg
adc
xchg
add
outsb
dec
and
sbb
push
cli
pop
aad
je
jns
xchg
xchg
lret
imul
mov
ss
push
ret
add
in
cmpsb
push
shll
pop
outsb
cmp
or
loope
dec
mov
jge
sub
stos
jp
ret
pusha
cmpsl
adc
pop
mov
fldl2t
sub
mov
push
test
test
stos
test
mov
dec
push
jle
xor
xlat
dec
ljmp
ficompl
out
jns
lods
pop
enter
out
fisubrl
int
sahf
daa
call
cmpsb
loopne
sub
fisttpll
push
mov
fmull
mov
imul
push
outsb
sbb
xchg
add
mov
cmp
bound
es
add
inc
insl
pop
jne
lret
or
imul
mov
out
mov
jns
adc
test
fs
push
aam
mov
xor
add
loopne
popf
pop
cmp
lods
out
and
dec
adc
mov
jae
push
xchg
inc
je
stos
sbb
fsubs
jbe
add
out
jmp
in
and
inc
lods
sti
lds
aaa
and
sbbb
cmp
sub
jl
xor
xchg
or
clc
adc
inc
bnd
push
data16
enter
mov
repnz
rcr
in
sub
mov
or
popf
inc
orb
lods
inc
cli
imul
bound
jmp
cmc
adc
add
mov
orl
fnstenv
leave
scas
adc
nop
and
fiaddl
icebp
arpl
sub
inc
add
clc
inc
inc
jbe
ljmp
test
lcall
or
adc
loop
subl
in
or
sub
lds
lods
insl
push
mov
or
call
nop
inc
sub
mov
gs
fsubs
add
stos
xor
and
pop
jnp
imul
int3
push
fcmovb
sbb
pop
aam
pop
imul
pop
mov
add
mov
inc
cmovle
mov
loope
icebp
pop
bound
out
mov
std
mov
cs
out
lods
bound
mov
test
pushf
nop
test
in
pop
bound
ss
repnz
fxch
jecxz
adc
pop
testb
xlat
sub
ja
aam
cmpsl
xor
xlat
into
bound
out
cmp
stc
cmp
push
mov
mov
cltd
sub
xchg
stc
ffree
shlb
and
ficoml
push
bound
sub
adc
out
xlat
ja
xchg
bound
jmp
dec
mov
loop
or
ss
vcvtdq2pd
lea
sub
nop
stos
xchg
jle
adc
lret
js
cmpsb
and
or
or
fmul
xor
mov
mov
cmp
cmpsl
loope
xchg
lret
xor
mov
mov
test
loop
cld
jge
xor
lods
fwait
sbbb
shrb
out
out
xor
pop
push
cmp
or
in
imul
mov
sahf
das
call
out
jb
cmc
out
pop
inc
pop
les
sbb
pusha
ret
push
mov
add
in
ret
scas
call
es
cmp
xchg
adc
mov
ret
pop
sbb
jae
outsb
or
dec
mov
out
stos
cmp
mov
pushf
pop
mov
mov
mov
mov
mov
jp
and
mov
jb
dec
mov
mov
xchg
je
rolb
xchg
int
and
cwtl
pusha
fistps
fldl
inc
or
outsl
jbe
and
loope
call
fstpt
push
enter
cmp
std
mov
jnp
xchg
gs
int
cmpsl
fisubs
ljmp
sti
out
loopne
pop
adc
xchg
mov
mov
and
sbb
mov
mov
lock
shrb
mov
mov
jno
sti
jp
js
pminub
inc
ret
clc
jns
cmpsl
out
test
loope
ss
pushf
lret
fnstsw
adc
aam
adc
je
push
mov
adc
inc
adc
iret
mov
xor
xchg
ds
add
push
xchg
mov
imul
cld
in
xchg
enter
pusha
shrb
rol
and
jmp
inc
ss
les
fisttpll
push
adc
mov
xor
add
addr16
loope
sti
cmp
ljmp
call
and
idivl
iret
jo
or
aam
rol
jge
xor
dec
loop
xchg
pop
and
das
cs
scas
into
divl
xor
jbe
sbb
out
scas
jns
sbb
push
je
sar
inc
repz
cmp
mov
enter
push
xchg
sbb
in
ret
stos
dec
add
mov
mov
arpl
addb
adc
xchg
mov
jno
movsl
mov
ljmp
loop
dec
out
andb
in
cld
inc
mov
test
adc
mov
out
cmp
dec
sbb
mov
call
pop
and
cmp
gs
sbb
fsub
sbb
idiv
sbb
pop
ja
or
mov
outsl
js
or
xchg
in
loopne
push
sbb
sbb
movsl
sbb
mov
sub
or
add
loop
fs
js
inc
mov
xchg
xchg
sbb
loope
orl
gs
dec
lret
daa
adc
cltd
rcrb
fcmovne
pop
sbb
or
cmp
xchg
loopne
xchg
push
xchg
stos
outsl
lods
in
sub
test
jo
fadds
into
sbb
pop
pop
dec
cmp
test
enter
ja
in
adc
push
addr16
ja
out
jg
pop
or
mov
mov
enter
hlt
andl
neg
mov
std
push
sar
mov
push
push
sbb
adc
pop
mov
xchg
inc
mov
addr16
inc
outsb
add
aam
or
icebp
mov
je
mov
push
push
cltd
rolb
dec
sub
mov
mov
push
pusha
mov
sti
push
outsl
cmp
inc
adc
dec
xchg
cmp
ffree
or
loop
insb
loope
iret
mov
push
stos
in
mov
add
adc
int3
in
add
mov
jge
movsb
and
push
mov
popl
lret
aas
mov
into
dec
mov
mov
outsl
popa
pop
sti
jmp
insb
dec
lods
and
out
dec
pop
cmp
out
jmp
mov
cwtl
mov
rcrb
lret
mov
and
push
shl
fistps
xor
loopne
or
cmc
lret
fsubs
push
ja
fsubrs
fwait
mov
ret
es
mov
dec
inc
cmp
jbe
jp
mov
push
xchg
fstps
pusha
gs
dec
push
fidivl
push
pusha
pop
xlat
mov
pushf
vpmaddwd
cmp
stos
popa
mov
outsl
loop
mov
xor
sub
or
addb
sbb
cmp
or
sbb
pop
and
ret
and
sub
lods
fwait
or
jno
notb
xchg
sti
jae
stos
lea
sbb
push
outsb
jmp
cmc
aam
mov
cs
mov
je
sar
add
and
add
fidivrs
jb
das
mov
inc
push
pop
sti
cmc
repz
jmp
or
adc
cmc
in
and
dec
cli
sub
jae
jg
or
mov
lds
mov
jb
add
sub
je
push
xchg
leave
stc
mov
and
xchg
cmp
mov
mov
decl
test
add
sbb
xchg
xchg
rcrb
in
mov
jnp
cmp
ds
dec
rcr
cmp
dec
adc
and
sti
push
dec
arpl
push
cmp
inc
jmp
popa
fs
das
or
and
or
jle
lcall
sub
push
add
mov
add
cmp
pop
mov
or
mov
push
es
cmpsl
movsl
andb
add
dec
ljmp
sbb
lea
mov
mov
mov
test
in
fucomip
int3
popa
inc
aam
mov
adc
pop
xchg
mov
jbe
jp
shrb
clc
pusha
test
mov
lcall
aas
clc
cmpb
aad
testb
jle
out
ret
mov
imulb
imul
popa
int
adc
dec
scas
jecxz
mov
jl
movsl
ja
push
jecxz
out
inc
inc
fxch
add
xrelease
mov
loop
dec
cmp
mov
add
pop
jp
or
jno
add
sarb
cmp
clc
aad
lret
out
lcall
and
inc
out
repnz
xchg
std
jmp
movsb
adc
idivl
mov
cld
xchg
repnz
or
ret
push
mov
js
adc
cmp
inc
or
mov
mov
and
jg
sbb
cmp
jmp
repnz
add
cmp
xor
arpl
push
jmp
mov
pop
xchg
cmpsl
jno
movsb
mov
xchg
arpl
jl
mov
decl
js
enter
repnz
call
mov
jb
push
adc
pop
mov
cs
mov
push
mov
mov
aam
fs
mov
cmp
icebp
jge
test
sti
call
clc
add
stos
jge
mov
or
lea
mov
adc
std
lcall
inc
lods
sub
sbb
inc
fstps
ficoml
push
mov
dec
cmpl
xor
mov
popa
daa
out
mov
icebp
add
add
aad
clc
stc
and
shll
dec
loopne
or
nop
repz
insl
loop
add
add
in
dec
lods
popf
xchg
scas
dec
nop
mov
fwait
sub
cmp
sbb
out
cmp
mov
iret
out
dec
das
in
mov
sub
dec
push
imul
out
add
cmp
jmp
test
ja
js
jle
add
mov
lahf
fs
movsl
jle
cmp
stos
mov
aas
loopne
sbb
sbb
adc
insb
xchg
popf
cmp
jbe
jnp
jle
call
jo
adc
dec
fnstcw
cmpsb
adc
mov
pop
cmp
sti
ret
add
shll
inc
xchg
sub
jns
pop
and
shl
xchg
daa
lea
sub
xchg
jl
in
into
cld
inc
out
out
stos
ret
addr16
push
xor
test
jb
sti
xor
jl
sub
push
in
fiaddl
sbb
shl
inc
movsb
arpl
nop
pop
movsl
into
lret
es
adc
adcl
xor
pop
into
rol
sbb
out
js
js
ds
sbb
out
fcoms
into
cmc
push
nop
adc
sub
mov
jns
jns
sub
xchg
test
cmp
jp
aad
scas
outsb
leave
int3
or
movsl
lds
sbb
scas
sti
jg
xchg
jno
dec
int
xchg
jae
mov
adc
dec
add
aad
mov
and
inc
pavgw
addr16
and
repnz
xacquire
dec
pop
mov
push
push
cltd
test
cmp
inc
lea
adc
inc
mov
push
cli
mov
pop
xchg
js
add
in
je
mov
stos
ss
pusha
shll
mov
popf
mov
push
ret
mov
adc
lret
mov
mov
repz
pop
adc
push
in
adc
mov
cs
add
adc
and
cmc
out
push
sbb
push
popa
lods
testb
shr
push
aam
sbbl
enter
pusha
inc
in
mov
adc
dec
mov
xchg
stos
xchg
xchg
xchg
imul
aaa
hlt
mov
push
jmp
test
loopne
cs
mov
xchg
aas
outsl
xor
and
imul
push
jbe
xchg
in
rorb
lock
mov
dec
push
int3
cmp
or
xor
jmp
test
jmp
pop
xchg
repnz
add
ljmp
jbe
jmp
clc
adc
cmp
xlat
nop
out
in
out
inc
mov
imul
fidivrl
or
jnp
cs
pop
xchg
jmp
ljmp
call
sbbb
scas
ds
das
movsl
lret
sti
push
inc
es
fisubrl
in
scas
or
push
xchg
test
cmp
mov
mov
xor
xchg
push
shrb
shr
iret
stos
cs
sbb
adc
repnz
adc
fdivrs
xchg
pop
aam
or
adc
push
addr16
mov
jge
xchg
adc
call
cmp
fdivp
leave
mov
jne
and
push
cs
icebp
aad
mov
sbb
pop
sub
je
pop
dec
add
and
iret
lods
fwait
data16
jbe
fwait
cmpsl
test
cmpsb
dec
cmp
and
cli
push
imull
jle
or
lds
or
std
sbb
mov
mov
leave
push
dec
xor
sbbb
mov
xchg
sub
inc
xchg
scas
incb
es
lock
ret
std
adc
fdivrp
lcall
out
push
test
dec
call
mov
xor
sub
addl
out
aas
hlt
ret
push
dec
mov
std
rorb
movsb
rclb
pop
in
push
and
mov
cmp
cld
mov
in
ret
lret
ficompl
int3
dec
ficompl
xchg
test
push
ret
cmc
ljmp
in
jo
mov
xchg
lret
imul
mov
jmp
test
call
cmp
jg
cmp
hlt
cmp
mov
jp
cwtl
in
divl
push
jl
inc
cli
sub
dec
loop
jbe
adc
fwait
emms
daa
cmp
cmp
dec
ss
sub
ljmp
fwait
lea
pop
int3
cs
es
fs
mov
cs
mov
xchg
push
push
cmp
lcall
add
xor
std
dec
andl
int
mov
jp
cmpsb
push
enter
aas
push
divb
lcall
and
or
or
sub
sbb
clc
pop
add
xor
lret
in
and
lds
cmp
clc
in
test
cmp
ret
pusha
cmpsb
test
idiv
pusha
mov
mov
out
or
cltd
mov
and
mov
test
or
add
push
movsb
or
ret
int
pusha
push
adc
sbb
imul
or
mov
arpl
scas
fstps
push
pop
subl
js
daa
cs
adc
scas
dec
jmp
in
data16
lods
mov
ret
mov
pop
pop
rcrl
xchg
inc
inc
mov
fwait
outsb
ficoms
stc
pop
popa
loope
ss
xchg
cld
xchg
add
inc
dec
push
mov
hlt
sbb
faddl
push
outsb
cmpb
jne
enter
inc
xchg
sub
adc
cmp
jl
mov
jp
push
std
mulb
push
push
stos
nop
mov
outsb
push
cltd
dec
inc
inc
mov
jb
push
or
xchg
sahf
stc
stos
ljmp
sahf
sbb
gs
repnz
add
aam
in
shrb
xor
cli
push
push
dec
ja
inc
cmp
je
addr16
movsl
jl
pop
test
push
popa
dec
pop
fcompl
cmp
popa
mov
cwtl
popa
mov
lods
cmc
scas
mov
repz
lock
mov
repz
mov
rcr
dec
in
sub
mov
mov
mov
dec
and
cmpl
iret
int3
jbe
inc
rol
test
hlt
mov
nop
cltd
xchg
dec
pop
or
lods
out
mov
nop
mov
sub
xchg
in
mov
and
rorb
xchg
shll
xchg
mov
js
sbb
dec
aas
clc
jge
mov
and
insb
mov
add
jp
bound
int
ds
inc
aas
outsl
and
xor
inc
test
inc
fbstp
lcall
sub
jg
cli
mov
mov
ficompl
inc
out
std
sarb
gs
xchg
inc
adc
cmpsb
and
mov
mov
loopne
mov
test
pop
addr16
pop
enter
shl
inc
inc
push
mov
sub
and
pop
imul
pop
pop
inc
ret
rcrl
jp
cmp
inc
andb
or
jge
dec
mov
cltd
les
jno
push
pop
xor
fidivl
mov
data16
mov
mov
insb
repz
ficoml
xlat
aaa
adc
push
daa
xor
fptan
aaa
or
rcrl
popa
inc
fstps
clc
xchg
pop
iret
push
insl
lcall
mov
mov
test
or
adc
lods
clc
jg
adc
sub
hlt
xchg
pop
mov
fmul
mov
jmp
cmp
out
inc
cmp
mov
push
inc
into
dec
mov
mov
sbb
ds
cwtl
sub
ja
jecxz
jmp
dec
cs
jo
test
push
cli
sub
cmp
or
scas
sbb
inc
sub
mov
popf
fcomip
out
mov
cmp
cmp
and
inc
sbb
imul
orb
sbb
pop
jo
xor
ds
mov
test
xor
mov
aaa
or
pop
dec
and
pop
sbbl
loop
mov
pop
dec
sbb
ja
fidivs
bound
andb
jns
lret
push
stc
push
dec
dec
mov
and
sti
xor
jge
xchg
or
scas
les
mov
cmp
mov
outsb
js
pop
mov
call
movsl
movsl
aam
jle
call
mov
push
aad
mov
xchg
lock
xchg
enter
addr16
aad
pop
lahf
daa
or
test
jl
or
pop
popa
outsb
jmp
cmp
loope
and
data16
mov
cmp
loopne
popf
ficomps
cli
fcoms
popf
je
jle
pop
and
cmp
dec
pushf
jae
sbb
lcall
add
out
pop
lods
in
sub
mov
sub
popf
je
push
pop
push
rclb
out
xlat
push
outsl
adc
es
movsl
in
push
hlt
jmp
jb
adc
pop
leave
out
jnp
xor
inc
ljmp
xor
xchg
mov
jl
or
std
push
outsl
or
and
sub
outsb
outsb
outsl
stos
pop
mov
out
cmp
fildll
incl
es
lock
cmp
outsl
es
sbb
int
lods
xchg
jl
jnp
sub
loope
cwtl
popf
xor
cld
das
jo
clc
addl
push
pop
push
mov
inc
popa
jecxz
push
bnd
sbb
or
fs
iret
ret
idiv
push
fwait
mov
cmp
jns
push
sub
push
xchg
jo
je
sbb
lods
sbb
out
pop
pushf
jb
pushf
add
mov
xor
push
push
sub
xchg
push
ljmp
jl
xchg
cli
fistpll
in
dec
cmp
ds
sarl
lock
lret
add
xor
cmp
or
dec
lret
shl
pop
mov
and
or
cmp
cmp
jl
outsb
cltd
xchg
fs
dec
lcall
mov
inc
cltd
rorb
adc
pop
mov
stos
fiadds
lea
aad
and
fwait
mov
push
mov
sbb
sti
pop
cld
loope
daa
lahf
cmpsl
in
inc
test
pop
iret
cmp
xor
push
aaa
add
mov
es
jo
cld
cmp
push
xchg
stc
scas
pop
pop
imul
nop
mov
std
add
lock
xchg
mov
pop
jae
pop
in
ja
iret
ffreep
mov
aas
sub
je
outsb
sub
lods
jo
fistl
xor
xor
movsb
stc
mov
fwait
jns
out
and
in
jmp
lods
fldl
mov
sahf
fwait
sub
insl
and
push
pop
rorb
pop
insb
pop
mov
jl
icebp
insl
repnz
mulb
je
cmp
dec
and
push
push
add
testb
push
div
mov
push
jle
enter
mov
mov
cmpsl
xor
scas
scas
into
add
xchg
movsb
xor
jecxz,pn
add
cmp
cmc
push
xchg
adc
imul
push
dec
xor
imul
jbe
adc
jle
mov
dec
sub
mov
push
test
sbb
adc
push
int
push
sbb
dec
xchg
mov
cmp
mov
lret
in
cmp
mov
pushl
mov
out
pop
mov
or
jmp
leave
mov
rcrb
or
pop
xor
dec
cmpsb
inc
lahf
push
push
jmp
xor
fiadds
sub
sub
add
push
xor
hlt
lahf
push
jns
and
jg
out
mov
bound
jo
add
xor
or
adc
aad
ds
mov
sbb
push
xorb
and
mov
push
or
inc
mov
test
pop
stos
push
rcrl
cs
adc
js
jg
loop
jo
loop
mov
in
repz
fneni(8087
dec
out
outsb
or
call
push
sub
scas
sbb
sahf
aam
hlt
mov
jl
cwtl
add
and
and
negb
das
insb
lods
sbb
cmp
repnz
push
or
outsl
push
mov
xchg
test
jnp
jmp
dec
fsubs
nop
xor
inc
test
push
div
jnp
das
dec
push
mov
push
stos
and
and
push
sub
iret
repnz
xchg
pushl
enter
daa
and
aaa
shrb
sbb
arpl
inc
add
xchg
xchg
shlb
lret
and
stos
rorb
inc
add
xor
or
push
pop
test
insl
test
outsb
inc
jne
mov
xor
add
mov
cli
aaa
mov
xorl
cmp
lahf
out
mov
or
mov
push
mov
jmp
xor
pop
jmp
pop
add
push
movsl
or
ret
das
cmpsb
push
cmp
xchg
nop
xchg
cmp
push
nop
sbb
test
add
xlat
sub
shrl
insb
outsb
sub
dec
lret
xchg
fwait
pop
outsb
and
cmp
in
add
bound
mov
das
inc
aam
nop
loopne
xchg
mov
mov
fcoms
cmp
std
adc
fcomip
mov
push
cmp
sub
fimull
push
sbb
add
lcall
fbstp
sar
lds
lock
inc
decb
mov
jbe
fcmove
xchg
lret
out
out
lea
das
cmpsl
dec
xchg
sahf
inc
js
into
sub
ret
imull
and
mov
dec
or
clc
jns
jnp
sbb
mov
mov
sbb
sub
cmc
sbb
andb
xchg
jecxz
orl
lods
dec
push
lcall
pop
in
int
xchg
in
and
mov
lea
xchg
and
push
mov
cwtl
test
daa
push
popa
add
gs
push
mov
insl
leave
push
js
enter
lret
push
in
ret
adc
testb
cmpsb
ljmp
shl
jg
push
aad
add
into
fdivrl
mov
push
sarb
xor
rcrl
mov
movsb
mov
mov
adcl
jo
push
imul
xchg
adc
mov
loop
cs
jno
push
xor
stos
loop
data16
or
fistpll
cmpsb
fmull
imul
inc
pop
sub
inc
xor
mov
stos
int3
sub
jl
adc
testl
cmp
jg
pop
insb
rclb
cli
xchg
pushf
out
mov
ja
adc
in
popa
mov
and
cmpsb
fs
daa
in
scas
lea
jns
enter
loope
pop
lock
fimull
mov
xor
orb
fidivl
or
loop
fisubrl
pop
pusha
je
mov
mov
add
enter
mov
inc
leave
mov
fisttpll
dec
hlt
mov
sahf
insl
clc
dec
mov
repnz
jp
cmp
ret
and
adc
pop
in
jnp
xor
pop
jnp
cld
mov
inc
cmp
mov
jp
rcrl
push
jo
and
push
inc
adc
das
in
pop
push
in
loope
sub
pop
stc
fstps
sub
insl
scas
or
dec
out
outsl
mov
cmp
icebp
mov
subl
popf
mov
rcl
mov
sub
dec
fcmovne
mov
xchg
pop
sub
xchg
mov
mov
int
aaa
push
adcb
aam
jge
push
cmp
mov
pop
fisttps
cmpsl
jg
pop
adc
mov
fxam
fsubs
ja
and
pop
test
push
aas
dec
movsl
icebp
aaa
clc
cmp
aaa
lahf
xor
sub
jg
jecxz
dec
sub
orl
jg
ffreep
ret
cmp
xlat
cmpsb
test
insb
sub
xchg
xor
sbb
add
test
or
cmp
mov
cmp
and
jb
or
xchg
add
pop
push
mov
push
addr16
mov
mov
lret
out
shlb
fidivrl
cmpl
enter
insb
cmp
lret
adc
ret
or
nop
push
xchg
cwtl
jmp
inc
dec
fisttpl
shll
push
push
mov
jns
sub
cs
subb
push
gs
inc
inc
inc
mov
out
out
xor
int3
add
es
xlat
inc
stc
add
push
aas
pusha
repz
mov
cmp
icebp
orb
xchg
cli
cmp
xchg
jno
xorb
xor
mov
adc
pop
imul
jae
or
mov
push
outsb
ret
push
and
cltd
push
mov
shufps
lahf
out
fwait
repnz
pop
loope
data16
outsb
popa
lods
jl
je
xchg
inc
ss
shll
scas
sbb
sbb
sub
and
cmp
outsl
movsb
or
jbe
dec
mov
jge
mov
andb
push
jae
arpl
mov
adc
sti
sbb
popf
sub
cmp
pop
sbb
xor
ret
insb
pop
mov
inc
adc
push
xlat
push
test
or
adc
mov
inc
mov
int3
add
and
dec
add
adc
cmp
sub
dec
dec
loop
xchg
push
addr16
sbbl
and
or
flds
add
push
mov
adc
cmp
cmp
jo
xor
sahf
xor
mov
iret
filds
xor
or
push
iret
shll
add
cli
iret
inc
pop
push
xchg
xchg
out
outsb
and
decb
rcrl
scas
jmp
add
out
jno
pop
imul
mov
cmp
mov
add
mov
mov
inc
mov
cmp
mov
fsub
sub
outsl
jmp
inc
jae
xor
lahf
add
push
pop
cmovae
mov
jg
sbb
mov
jp
into
ljmp
push
push
add
insb
push
mov
push
lret
mov
test
jecxz
mov
mov
cmp
sub
push
int
pusha
adc
mov
or
push
cltd
repz
sbb
pop
mov
jl
scas
mov
inc
jg
and
mov
cmp
and
cli
mov
mov
ja
in
or
push
into
cwtl
push
shll
rcrb
jl
call
mov
mov
repz
or
mov
push
or
jo
aas
xor
pop
and
aaa
mov
xchg
lret
ret
xchg
and
jo
jns
lea
div
test
add
mov
mov
roll
js
orl
in
xchg
imul
and
xchg
fldenv
aad
aam
lock
push
das
and
movsb
mov
add
out
pop
or
mov
xchg
xor
mov
jae
or
fwait
sub
das
add
sbb
repnz
sub
dec
rol
jb
popf
int
sub
je
inc
repz
nop
sbb
mov
clc
std
mov
out
add
movsb
inc
ss
lods
inc
inc
lock
dec
inc
and
je
lret
popf
xchg
or
repz
jae
movsb
pop
and
jmp
fiadds
sub
loop
or
mov
lods
dec
inc
insb
add
mov
and
add
jmp
lds
inc
cmp
popl
mov
stos
mov
call
stos
push
jmp
shll
arpl
movsl
add
and
notl
clc
int
loope
push
stos
shlb
pop
adc
mov
fiadds
sbb
jle
test
popf
xchg
mov
mov
cmp
test
aad
inc
scas
hlt
insl
lret
and
loop
outsl
mov
and
xor
inc
mov
xor
xchg
in
mov
loop
sbbl
repz
mov
adc
mov
add
and
fwait
inc
jg
gs
jnp
mov
inc
jl
inc
add
push
fs
push
sub
rcll
lds
pop
sub
push
sub
popf
lods
sub
popa
cltd
mov
sti
and
stos
xor
inc
adc
jnp
mov
cmc
mov
push
or
fdivp
jp
adc
sub
cmp
hlt
fstl
jns
scas
push
shl
add
pop
ret
push
xchg
cmp
lock
shl
mov
fsubr
in
jmp
mov
jnp
cmp
push
jp
mov
adc
fwait
jg
and
add
inc
xor
xchg
vcmpunord_sss
shrl
push
lret
dec
mov
pop
inc
sbb
and
sbb
and
add
add
fxch
pop
sbb
imul
repnz
cld
int
mov
pop
lods
pop
pushf
and
movsb
sbb
inc
xchg
in
rcll
stos
sub
ss
in
dec
push
sbb
out
sub
inc
and
or
and
insb
cmp
mov
out
icebp
add
ret
iret
inc
aam
stos
imul
or
and
xchg
jg
jmp
out
add
sub
loopne
xor
cmpsl
pop
push
mov
sbb
je
aad
push
int
loope
mov
xchg
push
mov
movsl
leave
cmp
into
xor
xor
mov
dec
sub
mov
rol
sub
cld
ja
dec
jo
cltd
jno
mov
mov
data16
and
adc
idiv
sub
xchg
sbb
lods
add
cld
and
dec
mov
loopne
shl
dec
loopne
popf
addr16
push
sbb
push
xor
movsb
out
sub
inc
fisubl
int
push
mov
pop
push
les
fadd
or
nop
jle
adc
cs
and
jne
or
cltd
test
cmc
lods
jnp
cmp
push
insb
sbb
or
adc
pop
jae
adcl
mov
mov
out
popa
jp
ss
insl
or
sbb
out
sub
sbb
push
pop
rorb
inc
sar
movsl
jg
xchg
lret
push
outsb
mov
js
add
roll
fisubs
jb
cli
or
test
fdiv
fwait
add
stos
jns
add
or
js
sub
into
mov
daa
in
or
out
jbe
mov
xchg
cmp
loope
in
loope
lahf
inc
in
jne
lock
pop
sbb
xchg
cmp
ss
lods
gs
cwtl
outsl
stos
jp
cmc
mov
jno
jl
ret
rolb
pop
int3
mov
push
lds
pop
dec
jae
add
push
sub
int
imul
fsubr
jmp
cmp
push
cwtl
popl
pop
mov
xor
dec
insb
mov
cld
mov
add
and
add
mov
and
je
mov
or
das
or
jns
sbb
pop
jg
xchg
push
cmp
xchg
pop
push
add
out
pop
inc
push
pop
ss
xchg
iret
imul
imul
xchg
cmp
dec
mov
dec
mov
sahf
movb
lret
or
pushf
pop
cmc
jle
jmp
and
dec
jo
pusha
adc
sbb
jbe
movsl
orb
in
ret
mov
shr
flds
das
inc
decl
add
adc
xchg
ja
push
mov
push
leave
or
mov
mov
imul
daa
inc
sub
sbb
test
inc
incl
aaa
push
cmpsl
scas
push
or
and
enter
pop
mov
mov
cmp
pop
or
movsb
or
outsb
jnp
out
bound
jle
dec
daa
push
inc
and
sub
stos
out
add
xchg
nop
mov
int
or
xorb
or
inc
push
adc
aas
sub
mov
call
mov
or
xchg
hlt
pushf
pop
sbb
pop
jns
popa
cmp
in
push
xor
sbb
cld
mov
rcrl
push
movsl
mov
push
sub
xor
xor
lcall
imul
fldl2t
mov
popa
test
das
js
sub
push
xor
inc
add
int
js
mov
adc
iret
cmp
inc
push
adc
pop
mov
jbe
loopne
jns
jno
jge
adc
push
andb
jne
inc
fsts
xchg
das
bnd
pop
das
mov
xchg
in
rolb
lods
sub
sahf
lcall
dec
nop
jl
arpl
rclb
adc
sbb
imul
rol
add
and
add
mov
mov
adc
xchg
lret
das
dec
mov
sub
cwtl
jmp
clc
xor
push
jge
clc
push
out
out
into
cltd
ret
pop
mov
lret
scas
jge
push
ss
dec
pop
xchg
push
aad
scas
mov
popf
xor
add
mov
icebp
aas
scas
int3
push
int
jns
out
pop
mov
mov
adc
addr16
ja
lods
ljmp
and
inc
jmp
xchg
es
mov
or
or
dec
inc
cmovge
lods
sbb
arpl
xchg
fucomp
adc
adc
xor
inc
repnz
call
mov
mov
jo
push
pmulhw
push
lods
lcall
jne
cmp
mov
cmp
inc
pushf
cmc
sahf
push
arpl
pop
sar
push
and
gs
sbb
insb
xchg
add
dec
and
jmpw
int3
sbb
cs
mov
jns
dec
sar
fwait
inc
xor
push
es
and
stos
adc
ss
out
and
dec
mov
stos
cmp
loop
out
les
in
push
xchg
jmp
mov
lcall
pop
aad
popa
pop
fidivs
push
pop
jns
or
jo
fwait
pusha
inc
in
push
lods
icebp
lcall
mov
stos
add
jmp
xchg
fidivrs
inc
mov
xchg
sub
lahf
push
inc
sub
dec
cmp
sbb
sbb
mov
mov
sbb
push
mov
sbb
data16
inc
loop
rcrl
pop
push
jo
sub
repnz
jno
mov
cmpsb
mov
data16
in
push
inc
push
ds
rcll
test
fs
aaa
cmpsl
jp
enter
fisubrs
xchg
repz
jle
adc
mov
cmp
cmpsl
test
int
pop
jge
pop
xor
mov
or
push
push
mov
jl
or
push
fmull
jns
push
lcall
xchg
iret
sbb
rorl
pop
xor
mov
sbb
std
jp
fs
push
cmp
imul
push
rcrb
xchg
clc
push
mov
lods
leave
mov
andl
push
jno
xor
jmp
stos
and
orl
mov
stos
mov
les
pushf
pop
sub
or
jnp
mov
cmp
sbb
iret
hlt
push
stc
cmpsb
or
sub
jns
inc
cwtl
bound
sahf
jb
sub
mov
mov
aaa
or
sub
jb
add
mov
mov
inc
mov
insl
jecxz
je
fisubs
add
or
dec
in
mov
xlat
loop
lret
add
lods
subb
stos
jo
pop
cmp
test
or
add
dec
dec
cwtl
insl
repz
jno
lret
fcoms
scas
and
out
xchg
pop
xchg
jp
mov
hlt
in
xchg
out
push
sub
cmc
adc
adc
aad
lds
stos
cmp
pop
cmc
jl
out
icebp
xor
push
xchg
notb
js
daa
aaa
cmp
scas
mov
sbb
js
in
aad
in
sbb
std
fidivl
das
lods
and
into
pop
and
fimull
daa
sbb
xchg
xlat
push
addb
out
insl
je
sub
psrlq
and
out
insl
inc
push
pop
aaa
jmp
inc
aad
pushf
push
movsl
ss
lcall
dec
pop
insb
mov
ret
cwtl
pop
outsb
inc
loope
cwtl
jns
or
cmp
dec
push
xor
jo
pop
xor
inc
push
insl
push
mov
or
dec
cltd
sbbl
aaa
dec
pop
test
out
popa
jp
adc
and
mov
shr
jp
jmp
je
das
test
push
pop
imul
les
xor
js
mov
pop
add
test
pop
popa
loope
and
sarb
sahf
inc
inc
fildl
cmp
push
rcr
sub
sub
pop
push
div
and
add
adcl
pop
fcmove
in
mov
mov
aam
sbb
enter
shlb
push
pop
cmp
pop
mov
xchg
mov
popf
nop
rorb
cwtl
sub
inc
inc
adcb
jno
or
loopne
sub
dec
test
cli
roll
jno
movb
xchg
ret
adc
cmp
icebp
out
lret
rorb
stos
mov
sbb
test
frstor
les
pop
jl
mov
test
and
cmp
xchg
jns
popf
mov
xchg
push
sbb
scas
xor
sahf
sbb
mov
push
leave
lods
pop
jbe
lcall
pop
push
sahf
iret
push
xchg
pop
cmpsb
and
xor
pop
push
cmp
xlat
ret
inc
lahf
adc
sbb
shlb
xchg
cld
je
insb
mov
aam
rcrb
stc
mov
aad
int3
ja
leave
push
test
jae
cwtl
mov
mov
push
add
int3
nop
aam
sub
fisttpl
pop
fwait
adc
test
and
enter
je
aas
pop
cmc
and
jno
outsl
nop
mov
fidivs
popa
int
inc
repnz
adc
mov
push
notrack
dec
push
shlb
mov
or
adc
insb
adcl
inc
pop
outsl
push
pop
inc
sub
insb
dec
test
mov
into
into
outsl
pop
xlat
sub
jae
into
mov
rcll
xchg
sub
clc
clc
test
ret
std
jp
push
popa
sbb
mov
in
call
sbb
lock
cltd
das
roll
and
mov
popa
idivb
rcll
push
mov
mov
pop
les
aad
cltd
rep
stos
fidivrl
adc
cmpsl
paddusw
je
nop
mov
fisubs
lods
push
cmpsl
lcall
adc
push
mov
and
xchg
daa
std
movsl
popa
jp
int
pop
xlat
shlb
iret
popa
and
dec
mov
mov
dec
ja
sbb
pushl
std
fmull
shrl
insl
or
cmp
fwait
fs
test
push
mov
and
mov
mov
mov
sub
into
cmpsb
mov
pop
ljmp
mov
xchg
push
pusha
inc
repz
cmp
iret
imul
mov
mov
sbbb
xor
out
and
dec
shll
push
inc
inc
mov
das
ret
mov
push
scas
push
test
push
adc
cmp
push
cs
test
loope
sub
push
rorb
mov
dec
inc
insb
in
loop
cltd
jne
xchg
arpl
jnp
popa
mov
sti
imul
hlt
scas
lret
stc
cmp
jecxz
push
mov
dec
fcomip
mov
repz
mov
popa
mov
add
pop
pop
xchg
add
divl
sbbl
lea
push
scas
push
mov
inc
cli
mov
ds
add
dec
mov
xor
aaa
sahf
push
cmp
push
test
enter
adc
lcall
mov
adcl
or
jb
lcall
sbb
mov
jl
pop
test
outsl
lds
xchg
adcl
sbb
ret
mov
dec
pop
iret
hlt
mov
push
mov
xchg
and
or
bound
jo
xchg
jge
dec
icebp
frstor
insl
popf
gs
or
shll
adc
fistl
inc
negl
cmp
adc
mov
enter
adc
pop
mov
clc
imul
push
popa
andl
pop
icebp
xchg
xchg
repz
sbb
fidivrs
popf
mov
sub
cmp
aas
fstl
pop
cmp
dec
fwait
dec
sub
gs
cltd
jbe,pt
filds
mov
cmp
mov
lods
insb
dec
in
out
jge
lahf
inc
add
cltd
test
imul
imul
inc
mov
jb
xor
push
fisubrs
jne
add
dec
add
add
inc
push
ret
out
imul
sub
add
add
adc
or
loop
and
sub
push
or
test
arpl
add
sbb
rcll
dec
movsl
jle
aad
syscall
decl
outsb
pop
pop
and
sarl
mov
xchg
push
rclb
popa
cmp
int
mov
sub
jl
idiv
into
inc
rcr
and
xchg
inc
and
xchg
cmc
add
push
nop
jno
sub
or
icebp
or
mov
aad
cmp
jl
fdivr
cmpl
xor
outsb
loop
jp
dec
loop
jp
pop
cmp
std
cmp
push
mov
testl
push
or
and
insb
cs
outsb
sbb
js
xor
sbb
xchg
xor
cltd
ret
push
mov
jbe
mov
cmpsb
ds
lods
pop
sub
sbb
xor
mov
adc
and
push
sub
push
aas
cld
dec
ss
jle
sbb
sbb
jge
in
push
stos
imul
pushf
les
dec
pop
xchg
hlt
jle
aaa
xor
cli
repnz
lret
popa
mov
mov
push
jl
sbb
inc
mov
out
pop
sbb
popf
lods
aaa
dec
je
xorb
xor
and
pop
lahf
cmpsl
mov
mov
loope
movsl
push
int
cmpsb
ljmp
sar
mov
adc
sbb
pop
addr16
les
out
mov
mov
cmovo
shlb
insl
lea
hlt
or
inc
mov
cs
mov
or
scas
enter
and
mov
fwait
ja
fstps
cld
push
xor
cmpsl
aad
loope
das
fildl
dec
pop
imul
mov
pop
jl
sbb
mov
int
mov
adc
xchg
lcall
in
inc
scas
dec
adc
mov
cmp
popf
int3
xchg
lock
push
sub
cltd
push
out
aas
das
xor
jle
ret
xor
cmp
push
stos
lret
scas
push
aaa
or
adc
sbb
in
or
ljmp
std
sub
mov
jbe
pop
or
inc
inc
loop
cld
inc
cwtl
mov
cmc
jnp
into
loop
push
das
cmp
imul
mov
mov
cld
mov
or
or
enter
jmp
jmp
pop
xchg
jae
and
out
data16
data16
jp
xor
xor
pop
sbb
lds
lods
or
fstpt
stos
xchg
dec
sbb
insl
push
std
push
cli
push
leave
clc
into
js
xchg
or
js
or
inc
sbb
xor
xchg
push
add
mov
xchg
mov
sbb
xchg
jl
push
xor
sbb
cmp
idiv
jge
cld
fdivrl
das
xchg
adc
call
ds
lcall
inc
adc
xor
test
pop
imulb
sbb
out
mov
xchg
cmp
pop
mov
inc
cmpsl
mov
aam
mov
notb
aam
lods
pop
std
push
adc
jp
pop
push
fsubs
aad
xlat
repz
sub
cld
adc
pop
jo
xor
ret
mov
lods
fs
lock
mov
cld
push
fsts
xor
fsubr
loopne
jb
and
push
aad
test
leave
jne
adcl
test
cmp
cmpsb
adc
cli
icebp
push
xor
pop
into
dec
lahf
push
push
and
jb
les
lret
loopne
sub
test
popf
xchg
nop
cmpsb
pop
jg
sub
xchg
jbe
stos
rorb
mov
xor
sbb
pushf
mov
mov
adc
repnz
cmp
test
and
fmuls
std
cmp
xor
ret
mov
push
in
cld
sub
add
mov
daa
and
cmpsb
lods
sub
mov
ficoms
adc
pop
xor
or
sub
dec
pop
add
xor
fwait
mov
dec
mov
xchg
mov
mov
pop
cmpsl
subl
xor
or
loop
push
lods
orb
outsb
sarl
jae
mov
jns
lds
push
sti
bound
pop
or
inc
cld
ret
sti
es
pusha
mov
inc
cmp
les
sbb
fldcw
push
sub
loope
aas
pop
cmp
jns
pop
xor
sub
inc
shrb
cmp
mov
mov
and
aad
repnz
push
ficompl
xlat
fwait
inc
and
cmp
iret
xchg
jmp
shlb
imul
rorl
pusha
sub
jmp
out
or
ljmp
sti
dec
aam
jg
lods
lods
xor
dec
mov
lea
rclb
jno
mov
inc
in
mov
dec
pop
in
js
pop
idivb
push
test
mov
cwtl
mov
mov
pop
fstl
stos
pop
cmp
pop
jnp
decl
jmp
xchg
scas
push
shll
push
aad
addl
pushl
orl
fcmove
xchg
mov
push
and
push
push
xchg
pop
lcall
movb
sbb
xor
cltd
xchg
arpl
pop
jne
mov
xlat
mov
test
test
mov
dec
into
mov
je
cs
icebp
sub
push
out
jae
cmp
adc
insb
sub
mov
lcall
negl
ss
pop
or
and
data16
or
pop
or
outsl
je
cwtl
stc
cmpb
cmpsl
push
mov
push
mov
mov
out
fmulp
adcl
pop
mov
icebp
shll
adc
int
adc
dec
lock
mov
test
out
into
sbb
inc
or
mov
xor
repz
xor
lds
scas
pop
mov
mov
dec
inc
mov
nop
call
test
or
fdivl
int
push
clc
stc
sbb
dec
sbb
hlt
or
lock
mov
movsb
js
cmp
les
adc
loope
sahf
sbb
jmp
shl
xchg
xchg
jge
mov
or
dec
push
lds
push
xchg
scas
mov
lea
mov
add
jno
xor
xor
pop
adc
cmp
cmp
mov
fstpl
int3
lcall
loope
test
and
clc
lret
pop
add
or
dec
xor
mov
mov
pop
dec
in
hlt
cmpb
shll
aaa
jo
cli
divb
ds
sbb
xchg
and
jg
repz
fs
or
movsb
aas
inc
das
js
lea
sbb
sub
add
arpl
insb
or
ss
push
setp
dec
cmp
xchg
lock
fdivs
cmp
push
imul
xor
fidivrs
mov
ss
std
adc
jg
or
mov
jae
in
pop
mov
jl
in
add
adc
insb
xor
popf
pminsw
add
mov
dec
pop
push
sub
repnz
inc
adc
jns
inc
mov
push
xor
cmp
repnz
cmp
mov
subl
push
inc
and
popf
ljmp
ret
mov
sbb
pop
add
outsb
ret
dec
mov
push
push
or
lds
mov
frndint
push
mov
xor
push
subb
fdivs
pushf
lods
xchg
jnp
loope
push
insl
roll
xchg
pop
int3
add
xor
inc
jp
add
adc
lock
lock
fsubr
ret
mov
lahf
daa
jmp
cwtl
mull
sbb
lock
push
sbb
xor
jns
xchg
push
push
mov
push
mov
nop
adc
mov
adc
je
jne
pop
fldenv
xchg
idiv
mov
dec
push
mov
out
sub
fs
in
push
loopne
sti
data16
sub
pusha
push
orb
aad
out
lcall
test
enter
dec
aam
add
jle
cmpb
add
data16
aam
cmc
clc
bound
lods
push
loop
out
lods
push
cltd
hlt
fnstenv
in
clc
push
sbb
inc
or
scas
push
call
divb
leave
fistl
dec
in
cwtl
xlat
es
cltd
jne
outsb
subb
jb
enter
jae
and
mov
jecxz
rcrb
jg
and
repz
sub
lods
out
daa
sub
sbb
in
out
repz
xor
shll
xchg
jle
xor
fldcw
mov
popa
movsl
or
xchg
loope
jnp
and
sub
outsl
mov
out
call
imul
push
lds
push
or
push
rorl
hlt
cmp
lcall
fwait
add
or
mov
xchg
mov
adcb
lods
jbe
xchg
or
arpl
fistps
xor
ja
lahf
push
rol
sub
loop
mov
pop
call
and
cmpsb
mov
mov
xchg
add
mov
rclb
mov
lods
out
sub
xchg
sbb
cltd
aas
imul
cmp
mov
insb
vpshufhw
loop
and
cwtl
jg
add
pop
icebp
call
cmp
cmp
inc
sarl
sti
lds
lods
push
or
cmp
inc
ret
loop
pop
dec
xchg
stc
jecxz
push
loop
movsb
mov
push
out
ljmp
sbb
push
arpl
lds
pushf
ficoms
mov
into
les
and
or
fistpll
jp
add
inc
xchg
cmpsb
cmp
lea
loop
add
stc
dec
jnp
mov
push
aas
mov
dec
call
jns
jb
jne
mov
mov
or
xor
push
jle
insb
sbb
mov
loop
pushf
sbb
std
pop
push
push
cmp
sti
mov
leave
repz
sbb
hlt
inc
mov
loop
fs
lret
jge
pusha
push
outsl
popf
enter
xorb
mov
cmp
idivb
jmp
in
divb
or
sbb
js
call
pop
jmp
sarb
sub
jp
sahf
jl
mov
fldenv
mov
mov
lcall
pusha
inc
into
lods
mov
lds
mov
jl
adc
sti
adc
push
sbb
xor
or
inc
leave
lret
add
or
adcl
insb
jg
mov
daa
push
popa
fwait
push
dec
or
inc
add
inc
xchg
xor
out
addr16
or
sub
pop
and
test
xorb
dec
adc
je
xorb
mov
lret
flds
inc
xchg
gs
insb
pop
popf
ss
data16
movsl
xor
mov
cmp
sub
or
xlat
stc
repnz
mov
push
xchg
push
fsubrs
and
pop
and
xchg
icebp
stos
jno
mov
mov
ja
mov
outsb
pop
adc
sub
cs
cmp
notb
enter
in
push
sub
fisubs
call
push
or
and
adc
movsb
adc
xor
cwtl
and
xorl
sub
sbb
or
mov
mov
mov
inc
inc
adc
arpl
dec
push
stc
jne
jb
aad
and
xor
mov
jo
int3
sti
aaa
in
jnp
or
cmpsl
pop
lea
imul
inc
cmp
notl
inc
pop
int
out
leave
cwtl
or
and
daa
loope
jb
test
push
jge
dec
lahf
pushf
sbb
pop
push
pop
cmpb
call
push
rcrb
add
jne
test
and
mov
fnsave
dec
fidivs
ljmp
or
cld
jl
jae
xchg
ret
movsl
inc
and
push
sahf
inc
cmpsb
call
add
pop
jno
in
and
imul
aaa
add
addb
jp
dec
mov
clc
pop
shl
push
test
push
out
adc
cmp
xor
and
cltd
pop
fidivrs
fistpll
adc
fildll
icebp
gs
das
mov
lea
mov
pop
lods
imul
mov
test
jge
inc
xlat
sub
adc
mov
ret
fidivs
adc
loopne
cmp
push
dec
outsb
pop
mov
pushf
mov
adc
int3
sub
pushf
jae
and
mov
out
push
stc
scas
cmp
addr16
xor
jnp
push
or
ss
adc
fisttpll
or
sub
or
add
or
push
inc
shr
rolb
sbb
push
or
xchg
sbb
add
pop
add
push
jp
cmp
mov
enter
arpl
mov
dec
sbb
hlt
sbb
or
push
mov
imul
adc
or
icebp
scas
roll
or
mov
and
sbb
sbb
loopne
int
cwtl
std
shll
adc
push
xchg
imul
loopne
cs
stc
pop
das
leave
icebp
jae
sbb
mov
into
sarb
jle
decb
int
xchg
push
mov
je
push
frstor
ret
jae
or
xchg
pop
iret
jno
repz
test
inc
dec
stos
jne
and
ss
sbb
or
mov
push
adc
ds
ljmp
jle
mov
mov
lock
in
push
std
lock
mov
jmp
movsb
shlb
jmp
lret
cmpsl
cld
push
pop
cmc
xchg
push
or
cmpsb
test
sbb
jne
xchg
mov
das
repnz
pop
rclb
inc
loop
fwait
jle
and
xor
pusha
xor
aad
dec
push
fidivs
or
mov
fwait
sbbl
inc
or
rcrl
add
inc
mov
int3
inc
rclb
lret
add
lods
dec
fildl
or
icebp
lret
jo
xchg
lcall
lret
push
outsb
fistpl
inc
fs
xchg
xchg
and
loopne
sbb
lods
dec
int
enter
sub
xor
mov
xor
or
or
cmp
pop
es
mov
movsl
or
and
sub
or
push
xor
fldt
shr
add
xlat
mov
jbe
mov
push
addb
jmp
sub
dec
mov
cmp
pop
js
adc
aam
insb
lods
inc
aas
ret
shlb
add
sbb
xchg
or
xor
fdivrs
dec
test
cs
xor
fwait
out
cmpsl
xlat
xchg
jns,pn
fucom
outsb
push
mov
xchg
aam
mov
jle
sub
stos
jbe
pop
scas
inc
mov
xchg
je
sahf
inc
xchg
xor
push
sbb
xor
test
push
xlat
and
sbb
xor
mov
fbld
lea
stos
dec
and
ja
int3
lds
push
sarl
in
in
sub
rdtsc
adcl
mov
jb
or
adc
jecxz
dec
pop
dec
pusha
cmp
lahf
jb
jo
ret
les
mov
mov
lods
jecxz
aam
inc
adc
mov
sarb
fadd
leave
seta
sbb
push
and
pop
mov
div
adc
mov
int3
xchg
aam
cmpsb
fisubrs
mov
sbb
push
mulb
orl
mov
lret
sub
jo
pop
aad
mov
mov
popf
push
lret
loope
in
cmp
adc
popf
loope
ja
push
lock
daa
adc
cmp
or
sbb
imul
push
lods
mov
dec
stos
mov
cmpsl
xor
dec
dec
loop
or
pop
out
dec
movsb
rcrl
push
negb
shll
outsl
movsl
xor
and
gs
xorl
mov
in
pop
gs
mov
and
sub
pop
cs
xor
aaa
bound
cli
sub
cmc
jae
ja
enter
outsl
and
fs
push
inc
inc
cwtl
xor
fwait
sar
fcompl
adc
cmpsl
cltd
je
xchg
mov
cmpsl
jnp
xor
cmpsl
popa
mov
mov
mov
xlat
ret
andl
cwtl
loope
fwait
addl
movsl
lret
cmp
loop
or
xor
jmp
xor
pushf
mov
outsb
or
mov
inc
inc
aam
int3
push
cmp
xor
or
mov
pop
cltd
dec
lods
jmp
insl
sti
dec
mov
cmp
push
popa
inc
iret
xchg
popa
adc
in
sub
push
loop
or
stc
jl
aas
sti
cmp
mov
sbb
mov
loope
outsb
mov
scas
dec
xor
push
cmp
inc
cmp
call
or
addl
cltd
mov
es
pop
or
loop
sub
fldl2e
movsl
out
aam
sub
and
and
cltd
mov
pop
leave
imul
or
cmp
ljmp
mulb
movsb
push
adc
push
pop
cmpsb
push
clc
mov
and
cmp
daa
cmp
popf
shl
cmp
push
mov
rcr
cli
and
cmp
xchg
cs
xor
pop
sbb
cltd
sarb
pusha
add
jmp
lea
inc
cmc
or
hlt
add
push
fdivrl
sbbb
loop
jge
xor
ret
push
ffreep
and
popa
cmpsl
cs
cmc
sar
pop
mov
cmp
stos
movsl
loope
pop
mov
xor
sub
icebp
shll
arpl
sub
or
cmpsb
pop
mov
and
lahf
sub
push
cmp
sub
ret
icebp
addr16
add
les
pop
cmp
and
inc
push
nop
jne
cmp
xchg
and
mov
dec
cmp
test
add
mov
add
sub
mov
mov
mov
outsl
int
mov
lods
insl
cmp
jo
cmpl
adc
mov
xor
out
popa
pop
jne
mov
sub
mov
push
dec
xchg
push
out
jnp
mov
dec
pop
call
mov
scas
fcmove
jns
cmp
mov
adc
xchg
aad
je
push
push
inc
dec
insb
mov
add
je
mov
loop
xchg
xchg
iret
fmuls
rep
lret
rcrb
push
ds
pop
jnp
xchg
cmp
push
psllq
cmp
sbb
dec
jge
pop
repnz
inc
jno
mov
inc
arpl
pop
dec
popa
or
dec
fimull
mov
cmpsl
fs
mov
push
pop
mov
cs
jg
push
hlt
add
xchg
push
mov
inc
cmp
inc
cmp
aad
sub
lods
mov
adc
add
jge
mov
pushf
xor
jae
nop
sub
dec
mov
add
popa
inc
push
outsl
jle
xor
in
fisubrs
dec
cld
ds
lds
or
mov
sahf
push
das
add
popa
sub
mov
or
pop
leave
cmp
mov
sbb
jle
mov
ss
xchg
popf
rclb
sub
gs
lea
inc
dec
test
dec
pop
mov
mov
jge
stos
lahf
pop
lcall
sub
rol
jb
cvttps2pi
fidivrl
hlt
cs
jne
test
jb
negl
push
sub
sub
je
movsb
lcall
std
sub
js
mov
inc
or
cld
stos
fstpt
sbb
loopne
push
fdivp
xchg
outsl
mov
movsl
jbe
ja
mov
dec
add
xchg
inc
sahf
adcb
mov
addb
ficomps
cmp
mov
mov
fildl
mov
imul
test
stc
clc
cmp
mov
cli
sub
jo
fsincos
pop
xor
fs
mov
mov
fstl
inc
push
xlat
sbb
pop
and
xchg
popf
stos
add
int3
repz
stos
sub
out
mov
xor
xorl
pop
rclb
sbbb
mov
out
xor
cld
stos
mov
loop
pop
sbb
mov
rol
mov
cmc
mulb
dec
out
sarb
adc
add
lahf
test
pop
insl
std
adc
test
mov
clc
stos
sbb
push
jno
jle
ja
adc
sub
movsl
test
ss
inc
mov
test
fcomi
sub
mov
repz
cmpsb
lods
insl
std
adc
xchg
jbe
cmpsl
jp
stos
insl
test
inc
sahf
js
pop
adc
xorb
push
and
nop
mov
add
xorb
xchg
mov
or
xchg
pop
mov
int
and
mov
sarb
jle
jb
mov
inc
insb
xor
int
sbb
adc
pop
cmp
xchg
pop
fcomip
sahf
mov
pop
ja
fs
sub
les
mov
or
js
int3
mov
cmp
push
and
aas
inc
ss
in
pop
mov
add
lahf
daa
cmc
jae
inc
mov
sub
jl
push
mov
jl
add
cmpl
loope
pop
loopne
pusha
inc
xchg
push
pop
ss
sti
in
fwait
insb
mov
mov
fimuls
pop
add
jmp
movl
ss
sbb
lahf
jge
into
pop
negl
sub
push
push
add
cmpsl
adc
aad
je
sahf
push
inc
jae
sahf
mov
push
dec
lods
sbb
loope
into
aad
push
push
ret
jno
push
inc
arpl
jecxz
or
dec
cmp
in
adc
nop
mov
push
jge
push
xchg
pop
insb
xchg
arpl
popf
sub
jecxz
xlat
inc
adc
pop
jle
pop
into
push
in
mov
pop
ret
add
sbb
or
test
sub
ljmp
sbb
and
shrb
xor
dec
push
sub
and
movnti
sub
mov
std
pop
dec
dec
or
lods
pusha
fcoml
out
movsl
cwtl
or
mov
jge
jmp
lods
push
inc
jae
rcrb
mov
inc
js
lock
dec
dec
sbb
jle
lods
movsl
jecxz
jbe
pop
mov
mov
adc
sahf
inc
dec
hlt
adc
loop
xorl
mov
xor
mov
test
iret
xor
or
mov
pop
jo
ja
adc
and
mov
or
rcrb
cmp
fwait
and
scas
out
push
sti
sbb
lea
pop
outsl
dec
jns
popa
pop
xlat
push
das
sub
test
je
out
and
popf
mov
enter
sub
lock
adc
inc
lcall
sub
dec
xlat
in
xchg
or
xchg
xchg
ret
or
push
les
sub
icebp
sahf
clc
add
cwtl
cmpsb
lods
push
dec
iret
mov
adc
ja
xchg
xor
rol
push
mov
cmp
push
pop
pop
sub
fists
dec
add
jp
xor
mov
inc
and
inc
push
mov
in
faddp
popf
mov
jp
nop
add
mov
pop
aad
test
mov
mov
fsts
xchg
mov
fcoms
dec
je
mov
or
test
call
mov
add
outsl
mov
push
dec
mov
orb
pop
add
fbld
pop
idiv
mov
dec
adc
xchg
pop
daa
mov
pop
lret
out
js
dec
sub
and
and
jbe
xchg
ret
loopne
xchg
insl
push
imul
jge
dec
cmp
or
inc
sub
cmpsb
inc
loope
mov
scas
jecxz
fldenv
push
sub
mov
fbld
shl
sub
pop
scas
cmp
test
out
jne
lds
fwait
push
dec
sarb
loopne
cmp
jp
push
dec
sub
fucomi
jno
stc
jg
insb
adc
cltd
pop
out
adc
add
mov
cmp
mov
and
mov
mov
push
xor
sbb
and
scas
sub
xor
pop
mov
jg
fcmovnb
insl
insb
mov
mov
testl
lods
dec
mov
sub
rcrl
sahf
lods
adc
sub
popa
popf
insl
xor
inc
push
ljmp
mov
lods
push
int
push
sbb
ffreep
jl
add
imul
push
xchg
push
ret
ljmp
xchg
jl
in
test
nop
jmp
add
mov
in
mov
fiaddl
scas
dec
aaa
js
pop
int
adc
mov
popa
mov
cmpsb
daa
pop
sbb
addl
inc
dec
push
cmp
arpl
inc
int
icebp
cmpsl
dec
adcl
mov
xor
mov
into
call
int3
mov
in
push
sbb
xchg
lds
mov
mov
sarl
loop
push
push
ljmp
dec
movl
push
push
sub
push
sarl
jns
xor
push
mov
and
xor
loop
mov
ret
jecxz
test
movsb
cmpsb
hlt
sub
test
cmpsl
hlt
imul
xor
aad
adc
fwait
push
pushf
push
adc
jmp
add
ljmp
std
xchg
adc
ret
xor
cmp
and
notl
frstor
mov
pop
stc
adc
out
xchg
pushf
pop
push
xchg
sarb
mov
daa
cltd
flds
and
test
sbb
cmp
inc
jge
leave
mov
or
inc
push
cmp
sub
or
mov
jae
inc
loopne
cmp
jo
push
sub
adc
or
sbb
and
and
and
in
sub
xchg
les
dec
xor
data16
leave
sub
out
jo
push
add
arpl
repz
push
scas
das
int3
push
out
test
jp
jmp
adc
lret
ficompl
dec
add
cmp
enter
xlat
movsl
push
je
dec
loop
arpl
cmp
adc
sti
adc
and
iret
std
outsl
xlat
fildll
test
int3
shl
sub
or
mov
add
pop
data16
cmp
or
pop
lcall
ljmp
add
in
cli
inc
call
sub
push
insl
movsl
xor
jbe
mov
ret
addr16
enter
xchg
rcll
ja
xchg
outsl
mov
out
jo
jle
and
jnp
lods
jo
add
roll
mov
dec
in
adc
jo
mov
movsb
push
cmp
aam
sub
fdivrl
rclb
test
popa
in
mov
fcoms
mov
fwait
js
mov
or
adc
movsl
add
cld
imul
push
movsl
jle
roll
jns
sbb
outsl
test
hlt
mov
repz
repz
push
bound
fldt
pop
enter
sub
cmp
pop
popf
ficoms
sbb
lahf
lret
jp
dec
gs
xor
jle
xchg
fisttpll
mov
out
inc
jnp
mov
cmpsb
clc
or
xchg
or
sbb
insb
push
mov
adc
jbe
jle
mov
push
enter
cld
shlb
cmp
hlt
outsl
ja
shrb
dec
jns
scas
rcrl
ret
mov
mov
cmc
std
dec
or
mov
lea
in
bound
and
or
pop
dec
dec
mov
outsl
mov
push
pop
fucom
andb
shrl
scas
push
mov
push
enter
pushf
stos
xchg
jne
insl
inc
xor
inc
lret
and
ljmp
icebp
dec
or
adc
push
pop
movq
shll
push
sbb
adc
inc
dec
mov
sbb
mov
loope
adc
dec
into
fmull
pop
xchg
subb
aas
xchg
jmp
and
xchg
jle
rclb
je
dec
push
leave
mov
sbb
mov
ja
scas
push
icebp
repnz
es
test
xor
fbstp
es
shl
out
inc
xchg
test
push
jecxz
adc
lahf
fsts
xor
cld
xchg
cmpsl
test
sub
and
xor
dec
pop
ret
loop
movb
mov
aam
fmull
dec
dec
mov
mov
jnp
pushf
clc
push
popf
insb
jle
out
jo
rcrb
loop
add
push
pop
mov
push
push
dec
push
push
pushf
iret
rorb
daa
lods
stos
push
in
cmpsb
test
sbb
bound
dec
xor
inc
cld
pop
pop
push
inc
cmp
mov
push
aaa
addr16
mov
dec
inc
sub
sahf
push
cmp
or
xor
popf
sahf
adc
imul
sbb
or
inc
in
mov
cmp
inc
dec
imul
lret
sti
jle
jge
mov
push
insb
cli
push
popf
mov
inc
adc
cs
jae
mov
jl
pusha
xor
or
cmp
icebp
cmc
mov
add
insl
xchg
xchg
cli
xor
push
in
idiv
ljmp
adc
xchg
enter
enter
pop
popf
in
push
xchg
fnstsw
lret
mov
das
cmp
mov
rcrb
push
and
cltd
jp
xor
push
cmp
and
int3
jmp
inc
and
xlat
icebp
popa
xor
mov
dec
fadds
xor
xchg
jmp
imul
in
test
jns
js
mov
mov
and
in
fsubrl
shl
stos
hlt
idiv
fs
mov
dec
je
and
les
mov
push
push
lock
cmp
lahf
dec
push
int3
daa
cld
jecxz
cs
ja
mov
or
inc
lds
cltd
pop
aam
cmp
push
xor
jmp
push
loopne
ljmp
xchg
stc
out
mov
aaa
icebp
and
shll
cmpsb
xchg
stos
dec
aam
and
cwtl
cmp
push
int
adc
mov
test
in
adc
cmp
dec
xchg
push
xchg
fistl
jle
lods
and
push
add
cmp
or
pop
mov
cmp
xor
lret
cmp
mov
push
and
ljmp
xchg
out
xor
dec
adc
dec
jae
ljmp
aas
gs
pop
rcrl
aaa
push
ret
cmp
xchg
and
dec
sub
aam
lahf
mov
fidivrs
add
pop
cltd
arpl
pop
and
ficompl
mov
mov
xchg
lods
movsb
test
dec
xor
out
mov
add
mov
mov
rcrb
lods
sbb
adc
xlat
mov
mov
dec
arpl
mov
mov
mov
and
mov
addl
cmp
mov
push
sbb
add
dec
mov
aas
loope
scas
stos
cmp
add
fistl
imul
repnz
div
mov
insb
jg
jb
andl
sub
jbe,pn
decb
dec
addr16
out
mov
inc
scas
dec
xor
hlt
pusha
adc
mov
xor
adc
adc
dec
xchg
div
push
into
pushf
jae
sub
fcoms
xchg
cmp
sbb
pop
mov
shlb
cmp
or
mov
rcll
ljmp
leave
pop
push
outsb
pop
sub
and
loop
cmp
pop
mov
xor
sbb
and
and
sbb
sbbb
add
pop
cmpb
movsb
sbb
add
and
sbb
ds
cmpb
addr16
pop
jae
jbe
push
jg
jno
cwtl
andb
dec
dec
shl
lcall
std
adc
mov
adcl
adc
sbb
lods
mov
xlat
cmp
xor
aam
lock
dec
jbe
cs
aas
loope
out
mov
dec
data16
out
adc
dec
inc
fs
ja
imul
inc
add
sub
push
pushf
and
sub
or
inc
or
sti
lcall
jge
add
jno
inc
sub
call
jo
inc
jmp
rcrb
mov
cmp
pop
jo
decl
cmc
call
fcmove
cmp
imul
mov
inc
sub
arpl
pusha
inc
fxch
std
outsb
ljmp
add
mov
test
popa
shll
scas
sub
mov
in
inc
mov
pusha
int3
pop
jg
movsl
sub
and
sbb
icebp
lcall
mov
add
mov
mov
je
pop
in
movsl
sub
loope
push
jns
xor
mov
negl
add
sub
mov
cmc
das
xor
pop
cmp
dec
push
arpl
fs
push
push
out
nop
mov
stos
je
jecxz
ja
push
add
es
lahf
test
add
or
xchg
out
xor
cmp
xor
mov
mov
mov
pushf
fistl
push
cli
ljmp
jnp
inc
xchg
xchg
aam
cmp
jb
push
fistl
test
xchg
loopne
outsl
add
cmp
dec
mov
pop
psllq
ja
sbb
mov
adc
clc
adc
xchg
add
jl
inc
int
cmp
push
sbb
xchg
sarb
stos
filds
mov
or
adc
mov
sahf
fsts
xor
jmp
adc
rcll
leave
push
ror
push
aas
mov
push
inc
enter
into
decb
mov
ret
adc
add
xchg
mulb
add
sub
push
inc
lsl
sbb
fdivl
outsb
jl
or
mulb
ja
xor
into
add
mov
push
sbb
mov
scas
pop
lret
dec
xchg
cmp
or
arpl
shr
jo
into
sbb
push
adc
aas
and
out
jmp
adc
lods
jecxz
add
inc
add
mov
mov
daa
lret
push
sub
or
or
shr
loop
mov
arpl
sbb
cmpsb
mov
stc
mov
sbb
in
xchg
sub
mov
dec
jg
xor
out
fcmovnb
push
out
sti
lods
xchg
dec
adc
jns
test
xor
pushf
mov
or
pop
pop
cwtl
xor
in
inc
or
test
and
push
jns
icebp
cmpsb
mov
xor
in
pushf
in
aas
push
imul
insl
jp
iret
adc
in
jp
mov
adc
in
mov
adc
insb
fsubs
decl
push
sarb
xchg
ljmp
mov
pop
lcall
cmp
and
sahf
mov
adc
fistl
add
aaa
or
or
sbb
mov
pop
and
push
lds
pop
xor
adcb
jbe
out
ret
fdivrs
popl
push
mov
add
aam
and
xor
pop
std
cmp
inc
leave
inc
in
pop
dec
fisubs
jo
daa
outsl
lds
sbb
mov
cmpsl
mov
add
pop
cmp
cltd
popf
fiaddl
mov
xchg
pop
outsb
xor
push
inc
xchg
fimuls
xor
push
cli
mov
pop
jbe
cmpsl
in
mov
xor
inc
push
ljmp
push
xchg
sbb
add
push
fidivl
repz
inc
push
cmp
xor
test
out
push
or
out
sub
in
fwait
push
out
ss
out
mov
dec
loop
fadd
cwtd
arpl
adc
mov
jno
xchg
fcompl
out
pop
jg
pop
stc
dec
push
jmp
pushf
test
xor
fcmovb
push
repz
adcb
cwtl
jmp
lea
adc
fcoml
add
xchg
xor
cmp
repz
sub
sub
jge
test
cltd
bound
psraw
inc
enter
jae
popf
js
cmpsl
jl
push
cld
jmp
cmp
mov
mov
adc
test
scas
in
out
and
jmp
pushf
testl
fwait
or
data16
in
xor
notb
sub
pop
sub
xchg
nop
cmp
cmp
and
push
negb
push
xchg
dec
lcall
into
aam
fsub
ljmp
and
pop
or
mov
pop
insb
sbb
adc
sarl
repnz
inc
insb
inc
mov
push
sbb
outsl
xchg
push
xchg
mov
pop
add
clc
mov
add
clc
push
mov
pop
or
cltd
mov
ja
incb
hlt
cli
inc
stos
cmc
add
xor
loop
cmp
adc
outsb
mov
insb
pop
out
mov
or
andb
cmp
xchg
push
imul
push
xchg
jns
jae
cltd
push
add
lock
cmpsl
dec
mull
pop
out
push
xorl
icebp
out
dec
pop
mov
jb
mov
adcb
mov
xorb
or
inc
lret
inc
out
inc
stos
mov
adc
ja
adc
je
sbbb
cmc
out
or
fwait
mov
in
jo
insl
outsl
fcomps
pop
test
rorb
aam
mov
dec
ja
cwtl
dec
add
loope
jns
and
dec
push
cmp
aad
scas
sbb
test
lcall
cmp
gs
mov
cmpsb
fst
int
sahf
mov
imul
adc
adc
dec
stos
les
enter
fcoml
movsl
add
jl
pop
ss
test
pop
jno
sbb
shll
add
lods
mov
add
cltd
movsb
or
adc
mov
jmp
mov
movsb
xchg
push
dec
inc
std
iret
cli
cmpsl
hlt
hlt
repnz
in
sbb
stc
jb
xor
bound
push
mov
out
mov
cmp
or
push
popf
pop
in
cmp
adc
and
mov
loopne
xor
ficoml
nop
and
and
aam
fwait
inc
icebp
adc
cmpl
dec
cmpsb
cli
pop
sub
xor
sub
gs
push
jbe
sub
test
jmp
or
or
jb
int
fwait
push
mov
sbb
add
fistl
jg
fstps
dec
stos
adc
push
cmpsl
sub
xchg
xor
insl
adc
mov
or
pop
inc
movsl
xor
leave
lds
inc
mov
pop
xor
in
sbbl
in
push
mov
mov
shll
push
pop
jns
aam
jbe
push
leave
out
mov
lahf
outsl
ret
aas
mov
xor
xchg
ret
xchg
jmp
pop
adc
sbb
in
jmp
xchg
push
fwait
adc
test
fsub
mov
aad
cwtl
pop
push
lds
mov
daa
and
mov
movsb
xor
int
adcb
js
rcll
icebp
ret
sub
in
test
sbb
adc
test
outsl
fidivrs
sub
xor
jp
jle
lods
lret
add
mov
imul
test
add
pop
ljmp
cmp
inc
pushf
jbe
insl
cmc
mov
xor
adcb
ret
xlat
xchg
pop
fs
shll
je
shll
fisttpll
pop
xor
add
fisubs
jg
ja
push
popf
add
fnstsw
das
in
fnstsw
sbb
loop
iret
pop
out
repz
add
gs
mov
xchg
sbb
cs
test
js
adc
cltd
insl
cs
pop
xor
notl
movsl
push
mov
cmp
jnp
faddp
inc
mov
js
or
mov
int3
mov
scas
mov
aaa
cmp
fistl
dec
jle
ja
subl
push
into
pop
mov
cwtl
imul
dec
push
pusha
inc
adc
push
or
jnp
xor
loope
and
out
addl
lret
sahf
outsl
es
iret
push
dec
aaa
add
loop
adc
outsb
adc
sbb
jnp
sbb
xlat
add
pop
dec
jg
ljmp
in
xchg
mov
push
xor
dec
xchg
sbb
xchg
shrb
aaa
call
movsb
dec
cltd
mov
pop
jns
aaa
push
dec
sbbb
or
jne
inc
mov
pop
sbb
or
adc
arpl
aad
inc
inc
fnsave
jg
rcrb
dec
mov
adc
adc
dec
jge
mov
pop
dec
inc
jns
mov
or
pop
insl
nop
ficomps
fisubrl
fdivr
hlt
das
pop
ja
mov
filds
dec
mov
mov
dec
hlt
mov
and
fcmove
insl
or
xor
enter
pushfw
inc
mov
mov
sub
call
int
mov
shr
dec
xchg
mov
cmp
mov
mov
loopne
pop
sbb
mov
add
sub
popa
jo,pn
scas
mov
test
sarb
push
outsw
jmp
repz
jne
xor
xchg
jne
fildll
lods
dec
ret
push
inc
cld
pop
pop
imul
scas
stc
jle
out
mov
xchg
mov
pusha
mov
imul
mov
mov
sub
icebp
jns
xchg
imul
out
rcrb
pop
imul
clc
xchg
xor
dec
filds
cmp
xorl
and
cmp
stos
dec
pop
scas
loop
mov
out
adc
shlb
popf
mov
lea
pop
lock
das
lock
in
cmp
pop
out
sub
xchg
fistl
cli
fildll
push
xlat
aad
xchg
insl
dec
jbe
das
sbb
cwtl
scas
push
stos
jmp
pop
push
and
fsubr
push
aad
xchg
les
sbb
movsb
cli
cmc
js
push
sahf
movsb
ret
addr16
fsts
cltd
scas
clc
push
test
inc
push
adcl
xor
ss
mov
inc
movsb
into
push
add
lahf
loope
iret
cltd
inc
sbb
test
jg
mov
push
add
mov
xchg
nop
pop
or
sbb
js
jno
test
les
sub
and
jb
sarl
mov
arpl
imul
outsb
push
push
and
push
repnz
enter
les
in
loope
mov
ss
add
inc
jbe
push
insb
jns
in
push
icebp
enter
icebp
ljmp
xchg
pop
add
in
or
pop
mov
pop
jnp
push
call
sbbb
mov
adcb
test
mov
cs
jo
sbb
adc
mov
xchg
idivb
lcall
dec
jecxz
cmc
into
mov
out
jmp
jae
movsl
je
outsb
outsb
cmpl
fwait
popf
insl
push
pop
xor
fs
pop
hlt
inc
sub
and
push
aad
push
push
out
daa
inc
pusha
cmp
xchg
in
stos
imul
das
aas
pop
mov
loope
popa
or
adc
cmp
pop
in
lea
in
mov
mov
mov
rcrb
xchg
movsb
aad
inc
in
ja
imul
sub
subb
lods
pop
sti
out
call
fiaddl
les
rol
inc
test
lods
pop
xor
cmp
dec
arpl
sub
test
dec
bound
sub
js
dec
adc
jb
divb
xor
sub
movb
mov
stos
add
xchg
or
int
lods
mov
pop
aam
cmp
imul
mov
std
lds
insl
add
lret
les
jge
ret
test
jnp
inc
and
add
inc
jmp
mov
aaa
loop
movsl
push
loop
lds
mov
cmp
ret
mov
fldt
imulb
dec
xlat
push
xor
sbb
mov
ror
xchg
pop
sub
sbb
and
push
pop
jecxz
dec
mov
adcb
xchg
mov
and
lcall
adc
clc
pop
stos
mov
imul
cli
mov
mov
mov
sub
int3
or
adc
fwait
enter
rcll
jmp
xchg
inc
xchg
fs
aad
xchg
out
bswap
adc
add
sub
xor
fisttps
xchg
or
xor
cmpl
pop
mov
mov
rorl
inc
ds
jecxz
sub
sbb
sub
adc
clc
mov
jp
arpl
test
cmpsl
adc
lods
mov
in
cmp
mov
xchg
pop
mov
and
cmpl
int
mov
movsl
test
fadds
xor
js
jno
scas
jnp
inc
add
ret
add
into
cmc
test
loopne
test
daa
dec
clc
loopne
test
cmpsl
ret
jno
push
pop
orl
xor
addr16
std
or
cmp
or
cmp
ret
sub
dec
xor
adc
mov
lret
sar
mov
xchg
andb
add
int3
int3
dec
xor
dec
movsb
xchg
mov
dec
divb
sti
dec
imul
repnz
jae
jns
mov
das
and
jae
popf
mov
and
cld
pop
ljmp
push
add
push
bound
xor
ja
lret
in
incl
out
es
xchg
hlt
insb
jae
dec
mov
dec
outsb
and
pushf
xchg
lret
fxch
push
xchg
mov
push
lahf
cs
xlat
cwtl
add
push
lds
iret
mov
adc
stos
mov
fstl
jp
fpatan
sub
pop
es
mov
cmp
adcb
jns
cmpsl
xor
adc
sbb
inc
xlat
lahf
cmp
adc
dec
out
inc
mov
inc
addr16
xchg
mov
lock
lret
shll
jp
jle
push
adc
enter
scas
aaa
rclb
movb
leave
enter
pushf
inc
cmp
ficompl
mov
mov
inc
data16
fcmovne
mov
inc
loop
stos
clc
xbegin
cmp
adc
pushf
push
testl
mov
jbe
popf
add
fcmovnbe
test
sub
mov
cmc
cmp
or
inc
std
scas
enter
pop
inc
aas
pushf
xchg
push
mov
xor
pop
jg
in
popf
test
shlb
jmp
in
sub
imul
cmp
ja
or
jp
cli
cmp
xchg
mov
or
movsb
xchg
lea
inc
leave
icebp
mov
fbld
aaa
stos
fwait
push
xchg
xchg
shl
sbb
and
les
sti
std
iret
mov
xchg
lds
sbb
cmpsb
jmp
push
mov
ja
jno
mov
mov
es
mov
lcall
or
sub
loopne
inc
mov
fsubr
xor
std
mov
sub
imul
into
xchg
and
push
call
int3
out
adc
imul
in
aad
data16
xchg
les
push
jae
add
or
mov
dec
xchg
out
sbb
test
adc
mov
sbb
cmp
loop
mov
mov
mov
xor
sbb
adc
push
sahf
dec
sbb
mov
popa
jne
test
inc
jae
add
xchg
xchg
out
xchg
addl
ret
out
mov
cmpb
xchg
xorb
xchg
jge
fmuls
dec
scas
dec
rol
mov
adc
roll
lret
xor
in
fsubr
lret
cmp
cld
cmp
xor
fdivrl
add
jns
dec
outsl
mov
mov
dec
out
or
roll
lock
jle
inc
and
jae
mov
out
push
cmp
adc
inc
in
cmp
aas
sbbb
add
lret
mov
jecxz
sub
pop
mov
scas
dec
and
mov
jbe
movsl
cmp
pop
test
aaa
xchg
jge
push
mov
aam
movsl
jp
mov
iret
into
je
test
inc
lret
call
mov
push
loop
dec
nop
xlat
mov
mov
mov
dec
adc
call
push
rcll
hlt
sub
jecxz
and
in
cmpsb
inc
hlt
cmp
xchg
test
sub
lret
jecxz
mov
aad
push
dec
pop
xchg
mov
lcall
dec
fisttps
aaa
outsl
fldcw
or
stos
dec
cld
mov
shl
mov
lahf
int
push
loopne
add
ljmp
mov
jp
push
or
neg
into
icebp
mov
dec
aas
dec
fnstenv
leave
test
loop
xor
push
jae
push
lea
flds
inc
aam
aaa
je
daa
sub
and
in
mov
xor
and
test
jmp
inc
add
test
mov
testl
dec
cmpb
orw
push
out
and
daa
mov
cmpsb
push
shll
push
xor
dec
leave
aad
xor
fiaddl
xchg
aas
xlat
jg
xchg
in
mov
test
subb
sub
pop
jo
jmp
xchg
cmp
cmpsl
imull
dec
test
xchg
cmp
pop
test
and
push
test
outsb
xchg
xor
jno
sbb
adc
shlb
push
fwait
icebp
xchg
mov
xchg
dec
sbb
mov
mov
insl
and
popa
mov
mov
daa
cli
adc
popf
cmp
pop
adc
inc
stos
jge
xlat
mov
ud1
cs
bound
add
jno
loop
inc
jp
movsb
test
aad
cwtl
cmpsl
adc
enter
fimull
pop
fnstenv
jns
out
scas
push
ret
daa
icebp
outsl
mov
movsbl
fsubrl
mov
jp
sbb
outsl
fwait
mov
rcrb
xchg
cld
out
pusha
adc
add
sahf
cmp
fstl
xor
fsts
outsb
loop
xchg
xchg
cmp
gs
pop
pop
sub
mov
das
scas
and
bnd
sti
js
je
cld
js
jecxz
ljmp
lock
das
and
xlat
xchg
movl
repnz
scas
je
jo
mov
mov
xor
or
inc
jo
sbb
or
dec
xor
insb
pusha
xchg
dec
out
xor
xchg
add
add
icebp
add
lock
add
out
cltd
ret
lahf
xchg
mov
shr
lds
add
add
in
roll
xorb
or
fidivs
xchg
mov
mov
pop
cmp
testb
mov
cmpsb
jbe
ljmp
sub
adc
test
mov
fidivrs
insb
push
addb
sbb
lret
cwtl
ss
push
inc
sbb
subb
addr16
pop
js
cltd
mov
sbb
add
cmp
icebp
shl
push
clc
mov
or
cs
fstl
ljmp
cmpsl
add
and
add
in
ljmp
icebp
mov
in
cwtl
inc
xchg
bound
fldl
jne
scas
mov
shl
leave
ret
loope
sub
movsl
lahf
and
orl
test
mov
vsubpd
or
dec
jmp
mov
inc
dec
mov
or
jno
hlt
mov
xchg
pop
fldenv
inc
adc
mov
dec
jg
cmp
dec
inc
fwait
lcall
sbb
or
or
xorb
out
or
sub
popf
mov
mov
jg
add
xorb
cli
data16
loopne
cmp
pop
jge
and
inc
stos
jl
jge
sub
imul
inc
sbb
xchg
lds
adc
popf
push
cmp
aad
jg
lret
xor
ret
mov
test
push
or
mov
enter
pop
aad
ss
cmp
stc
xchg
cmpsb
xchg
js
pop
loope
stc
je
push
test
enter
mov
jle
xor
fldenv
mov
comiss
add
fnstcw
mov
pop
pop
daa
and
data16
stos
sbb
andl
call
mov
jmp
dec
mov
hlt
push
popf
fisttps
movsl
and
js
mov
mov
out
mov
bound
jo
add
dec
dec
movsb
sub
cwtl
test
sbb
and
dec
pop
cmp
xchg
cmovs
into
int
add
notl
bound
mov
cmp
ds
jnp
cli
jnp
pop
cwtl
mov
xchg
xor
mov
xchg
or
pop
adc
inc
jp
scas
pop
or
pusha
scas
pop
cmp
out
bound
stos
mov
out
cmp
div
pop
roll
movsb
jle
incl
leave
into
push
mov
dec
push
nop
repnz
jmp
sub
shlb
push
divb
hlt
jno
rorl
pop
decl
inc
es
repz
shr
xor
and
ret
cld
sarb
rcrb
inc
negb
lret
lcall
pop
mov
adcb
jmp
or
fldl
xor
add
repz
and
out
mov
sarl
jmp
sub
inc
cs
add
dec
pop
cmc
into
decl
scas
mov
fwait
push
add
insb
in
xchg
xchg
test
and
bound
jmp
popf
xchg
jo
call
ss
pop
lret
test
repnz
sub
shll
fcoms
and
aad
xchg
loop
out
and
mov
push
flds
shl
xchg
adc
jbe
decb
jnp
outsl
rclb
adc
in
bound
adc
add
clc
sub
jg
push
into
pop
sbb
nop
dec
filds
test
push
dec
in
push
add
movsl
fnsave
sub
or
sub
insb
leave
push
test
add
sbb
ret
adc
lods
movsl
mov
mov
mov
jae
js
loopne
insb
jno
popf
rcrb
testb
jle
lods
inc
inc
stc
inc
pop
fdivl
and
xchg
lahf
aad
mov
sbb
bound
pop
out
lcall
movsl
inc
jmp
cwtl
dec
cltd
xorl
xchg
scas
outsb
ror
or
lock
sub
aaa
ss
lret
inc
and
insb
dec
pop
outsl
ret
ljmp
fsts
lods
outsl
mov
jns
mov
cwtl
xchg
xchg
cld
lret
leave
aas
imul
xchg
out
add
rol
sahf
jne
mov
jno
lea
lret
movsl
aam
faddl
adc
faddl
les
data16
shl
lods
mov
mov
pop
adc
fldl
and
int
rcl
jno
adc
aad
push
arpl
mov
int
test
subl
dec
pop
pop
bound
jns
ljmp
in
xlat
and
jno
mov
sbb
push
jne
bound
gs
leave
rclb
push
inc
dec
or
cmp
mov
ds
sub
xor
xor
add
inc
jge
lret
stos
fisttps
mov
sub
and
bound
pop
sub
data16
xchg
mov
and
cs
or
push
daa
lods
cmpsb
loope
stc
notl
push
iret
adc
test
jl
mov
insb
cmp
fisubs
xchg
ljmp
inc
sub
jle
mov
jmp
sub
adc
lds
inc
insl
sbb
sub
in
mov
subl
repz
stos
mov
mov
jbe
pop
adc
fcom
enter
cld
lds
jecxz
testl
sbb
inc
jmp
notl
stos
and
xchg
int
adc
call
mov
sub
jl
or
out
push
rclb
dec
cmp
das
push
xchg
in
xchg
sti
push
mov
scas
push
ret
inc
cld
lods
sub
scas
mov
fdivrl
cmc
pop
xor
fadds
adc
int3
mov
jne
or
adc
imul
hlt
mov
dec
aam
mov
cmp
add
pop
jmp
add
push
cmc
push
and
nop
xor
pop
xchg
popa
cli
jae
xor
notl
mov
int
cltd
lds
and
loope
hlt
cmp
popf
mov
ss
xchg
xchg
cmc
sti
mov
sbb
xchg
test
pop
rorl
xchg
push
xchg
add
and
ljmp
jmp
jb
popf
jp
movsb
inc
pop
mov
push
add
test
add
sub
mov
dec
mov
imul
and
in
sbb
mov
addr16
add
rcrb
out
test
pop
pop
mov
lret
scas
lods
mov
push
iret
les
xlat
jl
adcb
or
mov
mov
jno
dec
out
out
cmp
jecxz
in
xchg
pusha
stos
mov
pop
xor
and
popa
fdivs
test
cmp
mov
movsb
jle
bswap
shr
xchg
ret
cmp
dec
xchg
out
or
daa
push
mov
push
mov
lahf
mov
dec
sbbb
add
in
cmc
mov
lock
lock
fdivrs
lcall
adc
or
add
call
test
xchg
repnz
stos
in
sub
popa
inc
lods
and
dec
pop
adc
inc
or
pusha
sbb
test
or
popa
out
stos
js
dec
stc
mov
fincstp
sbbl
lret
mov
out
int3
fistl
imul
or
stos
sti
nop
in
add
sbb
jmp
mov
fnstenv
lret
repz
dec
hlt
mov
popa
pop
in
mov
xchg
xchg
mov
fadds
sti
xchg
inc
push
sbbb
push
mov
pop
adc
jmp
dec
outsb
push
push
pop
mov
jns
rolb
ja
push
jns
jl
lahf
or
sbb
insb
jg
lock
jns
jbe
sbbb
push
push
jae
in
xchg
icebp
cmc
adc
lods
js
cmpsl
or
push
data16
jecxz
pop
cmpsb
sub
xchg
mov
mov
mov
add
ds
jge
jae
dec
movsb
pop
addps
int3
xor
xchg
inc
or
call
and
shrb
push
out
cwtl
jno
adcb
call
dec
int
inc
sub
adcb
pop
cwtl
mov
and
cmp
shl
mov
movl
sbb
mov
sub
mov
cltd
mov
fsubl
mov
jp
add
xor
push
in
scas
ret
nop
push
adc
idivb
push
xchg
mov
adc
add
mov
imul
stc
sub
mov
xchg
push
push
add
inc
or
loope
aas
mov
jg
mov
dec
sbb
xor
dec
in
enter
imul
mov
mulb
sub
jbe
bound
mov
nop
mov
aad
push
mov
adc
andl
cld
sbb
xor
and
add
lret
stos
rorb
mov
dec
cmpsl
sbb
out
mov
add
add
cmp
xchg
ljmp
loopne
andl
adc
jb
aam
add
xchg
mov
dec
mov
fmull
mov
ljmp
cmp
mov
pop
and
cmp
dec
pop
rclb
dec
add
dec
jmp
movsb
dec
or
cmp
inc
cmpsb
pop
push
fs
mull
dec
or
inc
push
add
cs
lods
fsub
cmpsl
lea
test
addr16
adc
adc
les
mov
sarb
sbb
cltd
inc
fcmovnu
bound
ss
mov
sub
and
cld
das
cli
adc
xchg
xchg
adc
pop
out
scas
out
pop
xchg
push
imul
lahf
and
aas
mulb
adc
lock
jo
xchg
out
test
in
pusha
mov
scas
mov
pop
inc
bound
je
add
or
test
push
hlt
jae
lret
rcll
aam
imul
jmp
mov
or
adc
mov
mov
sub
adc
fldt
jb
rcl
std
out
fwait
jno
push
and
sub
sbb
mov
pop
out
cwtl
ret
jp
pop
inc
in
lods
push
sub
pop
ficoms
lret
stos
mov
dec
cli
cltd
adc
adc
sub
xchg
rorl
insl
les
shll
pop
mov
in
popf
test
xchg
adc
inc
nop
pusha
shlb
inc
mov
jp
xor
or
lods
dec
out
in
in
int
arpl
adc
jno
mov
xor
xchg
clc
mov
xchg
lods
jne
cld
sub
test
jne
cltd
mov
add
xchg
stc
pop
fimuls
cmp
jns
sub
insb
add
adc
fisttpll
cli
xchg
stc
fsubrp
lock
cmp
es
fbstp
inc
out
test
adc
jo
cmp
test
stc
pop
push
or
sbb
fdivs
xchg
jae
imul
addl
pop
and
cltd
adc
and
fs
jge
mov
ljmp
fsubrl
stos
pop
mov
mov
pop
test
jmp
sub
out
pusha
mov
loope
push
hlt
out
mov
data16
or
push
jg
hlt
lahf
add
sbb
in
add
xlat
push
pop
ret
jnp
aaa
in
xor
into
repnz
cli
push
sahf
push
imul
rorl
not
outsb
add
lods
insb
push
mov
std
ljmp
fsubs
js
shl
push
xchg
jecxz
push
xor
adc
jnp
jae
das
cmp
mov
ret
and
push
pop
or
jne
inc
mov
ret
sub
add
adc
cmp
mov
dec
xor
ss
xlat
mov
xor
mov
cmp
add
addr16
jns
lds
scas
test
push
test
sub
cmp
call
cmp
dec
std
rcr
xor
adc
pop
fcmove
or
cltd
pusha
xchg
das
es
cmp
bnd
inc
cmpsb
insl
or
ja
ljmp
rorb
ret
dec
adc
sbb
mov
pop
adc
mov
repz
push
pop
lds
jae
and
cmpxchg
and
dec
push
inc
mov
pop
sbb
movsl
pop
in
popa
inc
push
cmp
rcl
jge
jbe
xor
xor
push
and
shr
xor
das
loope
les
test
movsl
pop
cmc
xor
int
cmpsb
jno
ja
mov
mov
jbe
jbe
pop
daa
repz
negl
ficoms
stos
rorl
xor
jge
sub
mov
mov
fsubrs
imul
mov
mov
lcall
xchg
xchg
out
lahf
lahf
out
cli
jns
outsb
mov
pop
jg
pop
nop
and
inc
sti
push
pop
jns
lods
mov
jno
adc
jb
mov
push
mov
test
cmp
cmp
lret
pop
xor
xchg
jae
sbb
sub
std
scas
xchg
stc
inc
xchg
cmp
and
sub
push
adc
add
imul
outsb
loop
xor
push
cmpsl
cwtl
xchg
sub
or
int
xor
in
cmp
add
xchg
stos
or
and
aas
jb
test
jnp
add
inc
iret
or
jne
fdivrs
lahf
call
pop
pop
popf
outsl
mov
push
test
jns
addr16
mov
pop
mov
fld
in
andl
jmp
mov
sarl
scas
pcmpeqb
ficoms
cs
inc
mov
jne
push
dec
pop
lahf
pop
or
stos
push
add
pusha
cmp
fistpll
sbb
mov
dec
inc
sbb
in
cmp
ljmp
mov
pop
lock
test
incl
or
scas
fstpt
insl
xor
sub
pop
je
push
iret
sahf
dec
lock
and
push
into
lea
sub
dec
rcrb
sbb
push
aad
push
push
lahf
into
push
mov
mov
lods
lahf
add
out
jl
mov
xchg
add
push
pop
or
xchg
mov
jp
cmp
aaa
push
nop
stc
rep
dec
mov
mov
xor
pop
bound
stos
aam
inc
cmp
lcall
mov
adc
pop
jae
jecxz
cwtl
push
les
jmp
xchg
mov
ss
cmc
and
out
sub
incb
out
fmul
push
fldcw
add
adc
test
mov
add
and
fimull
sub
icebp
xchg
inc
scas
clc
xchg
add
pushf
and
popa
jle
outsb
insb
xchg
push
mov
bswap
out
and
insb
or
mov
mov
lretw
das
dec
inc
mov
pusha
jle
inc
pop
cmpsl
jbe
es
fsubrl
adc
enter
sbbb
inc
pop
push
jle
lods
ss
add
xchg
and
jg
or
std
dec
or
loop
lret
dec
add
adc
sub
sarb
test
push
std
scas
mov
jns
xor
je
test
add
cmp
jmp
in
cmp
mov
adc
ss
stos
mov
enter
sti
mov
aas
repnz
xor
sub
imul
in
add
andl
lcall
cmp
pop
mov
lds
push
push
jecxz
add
push
ret
mov
ret
insl
pop
gs
repz
push
push
loopne
push
cld
mov
js
pusha
stc
int
test
push
mov
ret
adc
into
daa
lcall
pusha
repnz
dec
nop
nop
add
cmp
cld
mov
mov
or
lcall
inc
icebp
push
add
lds
or
pop
pop
adc
repnz
jno
stc
incb
jmp
pop
inc
sub
in
aam
movsb
jae
rorb
cmpsb
adc
xlat
aad
xchg
cmp
daa
movsl
cmp
fnstcw
int3
orb
add
roll
lea
gs
jo
jae
xchg
test
cwtl
xor
mov
dec
or
adc
iret
push
stos
scas
es
rorb
push
arpl
push
aam
push
lods
test
dec
lock
push
jne
dec
jae
mov
pop
mull
mov
rclb
nop
pusha
ffree
and
xchg
fbld
aaa
jl
and
xchg
jo
and
cmp
mov
rcl
mov
incb
push
mov
push
outsl
jl
push
mov
rorb
movsb
pop
aaa
hlt
jge
and
jg
lahf
rorl
stos
jle
repnz
enter
out
dec
or
mov
mov
fcmovu
lds
test
and
in
xchg
mov
fst
in
in
push
mov
mov
push
adc
push
inc
aaa
int
test
pop
mov
ficoms
jnp
sbb
lea
jg
imul
in
rolb
mov
fcompl
imul
ret
fildl
xor
dec
xor
lods
mov
cli
sub
lcall
scas
and
lds
stos
fst
mov
xlat
std
or
jmp
les
dec
mov
ljmp
add
addr16
xchg
xor
lods
fldl
lds
push
mov
sbb
xchg
inc
add
or
sbb
rorl
rcrb
push
pusha
cs
lods
stos
lcall
push
pop
arpl
cli
jns
ret
lret
sub
fisttps
mov
int
hlt
cmpsl
jecxz
add
jecxz
cmc
pushf
shrb
jge
fcoms
push
call
adcl
sub
pushf
pop
testl
aaa
sahf
add
xchg
std
mov
leave
mov
fisttps
test
js
inc
stos
and
ret
scas
ret
sbb
mull
out
movsb
aam
mov
adc
fisubs
mov
loopne
mov
test
jp
ljmp
push
lea
andl
mov
jle
push
jecxz
nop
lea
dec
pop
xor
sub
push
outsl
aaa
popf
fldt
and
xor
dec
gs
icebp
imul
or
cld
sahf
xchg
imul
roll
lea
add
mov
mov
lret
mov
and
adc
push
jge
jle
sti
lods
pop
jle
jl
add
mov
mov
mov
das
mov
push
mov
or
mov
ja
je
and
jns
push
shlb
pop
fisttps
cwtl
out
cmp
str
dec
cwtl
outsb
imul
inc
sub
jno
dec
push
ss
shrb
jle
adc
xchg
inc
nop
das
outsb
addb
ret
addps
ret
loop
jg
movsl
cltd
call
mov
mov
test
movsl
sbb
movsl
testb
cmpsb
test
jnp
je
xor
xor
sbb
push
mov
std
ljmp
insl
mov
shll
lock
mov
pop
xor
and
fcoml
sub
in
scas
clc
fldcw
xor
cld
loop
out
or
outsb
sbb
cli
popa
movsl
add
cmc
cmp
arpl
cmp
fldt
mov
jb
enter
dec
dec
xchg
xor
xchg
mov
aam
jecxz
push
add
or
cmp
inc
mov
pop
cmp
outsl
cmp
call
adc
aaa
aad
mov
sub
jae
ret
mov
sbb
xchg
pop
xchg
xor
pop
pop
icebp
sub
or
jle
sub
add
jmp
imulb
cmp
ds
mov
lahf
jno
subb
xor
dec
and
adc
fbld
es
xchg
aam
insb
das
dec
lock
pop
enter
push
push
xor
test
push
cmpsb
movups
jno
lahf
push
int
in
fisubrl
mov
add
push
sub
fs
mov
int3
test
fs
pop
aam
imul
pop
lcall
xor
shrb
mov
leave
repz
jecxz
ret
aam
sub
adc
xor
fwait
in
jmp
pop
lods
mov
lret
adc
insb
mov
ds
or
push
insb
push
out
orb
add
jge
out
pop
cmp
mov
pop
aaa
sbb
xchg
sbb
repnz
and
add
mov
xchg
jnp
jns
mov
xlat
mov
push
mov
mov
daa
stos
and
sti
insb
sahf
popf
and
decl
sti
push
lea
movsl
cli
inc
xor
mov
mov
mov
pop
mov
leave
test
sbb
add
push
mov
lea
nop
and
pushf
dec
sub
xor
sti
inc
das
adc
jle
mov
mov
fistpll
sub
lods
out
cmpsb
stos
test
mov
sub
pop
dec
and
mov
repnz
mov
push
popf
and
daa
out
scas
in
ljmp
sbb
jge
cmp
pop
lods
xchg
pop
push
dec
mov
mov
or
or
stos
adc
mov
imul
popa
add
jg
mov
in
enter
and
in
loopne
sbb
jo
mov
fsubs
cmc
dec
adc
cmp
xchg
dec
xor
pop
fists
xor
sbb
out
mov
test
jl
cmp
dec
in
xor
mov
mov
mov
imul
mov
and
sub
mov
outsl
pop
mov
xchg
cmp
jp
test
mov
push
dec
pusha
scas
pusha
push
sub
lcall
jae
mov
gs
cmp
mov
fadd
push
ss
ljmp
stos
pop
std
sbb
shll
adc
pop
fmuls
cmpsb
ljmp
pop
xchg
ficompl
out
iret
mov
pop
loopne
fldl
sbb
mov
and
xchg
mov
les
dec
rcrl
pusha
fsubl
pop
jb
clc
add
push
out
shll
rorb
addr16
dec
sub
xchg
xchg
scas
dec
jbe
bound
inc
xor
ret
cmpsl
xchg
add
test
fs
jmp
pop
popa
push
js
lods
cli
sub
shr
add
in
add
push
int3
mov
cmpsb
mov
stc
push
scas
lahf
lahf
mov
in
jp
or
jno
gs
lds
pushf
cld
sbb
xor
sub
mov
xorb
arpl
mov
xchg
mov
add
xchg
mov
mov
add
pushf
push
inc
out
push
and
xchg
pop
lahf
out
push
mov
into
in
out
iret
or
xchg
je
sbb
cmpsb
push
ret
xchg
ror
sahf
pop
or
int3
fimuls
pusha
push
mov
lret
cmp
out
lods
inc
adc
add
mov
xlat
outsl
dec
cmp
es
loop
ds
mov
mov
adc
xchg
lock
sbb
int3
and
sub
xchg
pop
ss
add
inc
ss
lret
sub
and
arpl
lcall
pushf
gs
and
push
mov
xor
test
jge
xchg
test
cmp
mov
mov
std
mov
std
mov
add
mov
xor
xchg
imul
jge
mov
insl
ret
xor
add
arpl
imul
jle
push
add
rorb
pop
dec
inc
sbb
lahf
xchg
push
fldenv
jmp
jae
jbe
in
push
es
data16
inc
add
inc
jmp
js
cld
call
mov
dec
xchg
subl
push
leave
sbb
icebp
fdivl
cmp
adc
out
or
scas
mov
push
cld
add
sbb
xchg
in
xchg
and
lock
inc
and
xchg
lahf
jmp
mov
adc
jmp
add
xchg
sbb
pop
loop
push
cmpsb
out
add
arpl
pusha
dec
or
insl
push
jns
jl
mov
and
lods
or
push
bound
sub
push
lret
pop
lret
xor
or
push
cmp
push
test
pop
xchg
rcrb
jmp
fidivl
stos
ss
insl
pop
and
jmp
jnp
sub
aad
jae
mov
adc
mov
mov
pop
dec
in
test
test
adc
sarl
push
dec
lds
ja
je
mov
or
bound
aam
rcll
pop
mov
mov
mov
push
or
ljmp
push
mov
and
mov
imul
mov
inc
and
push
aad
pop
in
jbe
fldt
mov
xchg
push
in
inc
jg
xchg
scas
cmp
pop
adc
and
popa
lock
ficompl
mov
or
dec
sarb
imul
xchg
inc
es
mov
push
clc
add
and
dec
sahf
pusha
mov
xlat
mov
cmpsl
add
inc
leave
jp
test
adc
dec
js
test
aas
mov
icebp
sahf
mov
ds
or
adc
lret
lods
jp
dec
cltd
js
dec
sbb
sbb
mov
outsl
or
xchg
push
andl
and
mov
mov
mov
rcrb
xor
mov
mov
xchg
out
and
mov
lock
in
insl
mov
pop
and
dec
xlat
mov
push
add
and
inc
inc
stos
and
push
push
into
in
or
xchg
rclb
lahf
pop
movsl
inc
imul
loop
notl
dec
and
mov
xchg
loopne
jl
pusha
adc
je
pushf
call
lret
inc
test
sub
inc
xchg
scas
movsb
loope
push
popl
fbld
or
sbb
push
cmpl
out
jno
aam
jmp
mov
xchg
and
mov
lods
sbb
insb
repnz
mov
lock
repnz
mov
ljmp
cwtl
or
shr
xchg
cmp
cmc
lods
imull
mov
daa
xchg
popa
in
inc
dec
mov
movsl
and
mov
aad
mov
or
imul
add
and
push
and
inc
inc
jnp
mov
jns
cltd
jg
adc
cmpsb
movsl
mov
std
xor
dec
inc
es
mov
movsb
xor
in
subl
pop
cmpsl
clc
and
mov
js
ljmp
xor
or
jne
push
push
pop
pop
cltd
loopne
jcxz
popa
pop
xchg
xchg
dec
xchg
xchg
cwtl
sbbb
insl
icebp
jns
pop
faddl
push
or
pop
add
add
test
addr16
aaa
pop
test
pop
call
daa
sbb
cli
xor
loope
inc
jle
pop
icebp
sbb
jle
and
in
pop
mov
addr16
mov
xor
cmp
inc
cltd
xchg
cmp
pusha
scas
loop
xlat
test
outsb
icebp
rclb
pop
fimuls
jg
sbb
das
mov
mov
lods
mov
xor
sub
bound
dec
jbe
dec
ja
jb
sahf
outsl
mov
pop
push
adc
cmp
fcomp
insl
lock
lret
pop
cmp
xor
mov
or
lods
push
in
pop
dec
push
addr16
mov
sbb
int3
jae
adc
add
jno
lret
cwtl
fwait
ret
pop
fisttps
ret
jne
pusha
sbbl
jmp
inc
cmp
movsb
add
dec
xor
mov
push
push
hlt
fstpt
and
jnp
jg
add
dec
aad
test
mov
out
mov
or
test
fistpl
mov
xchg
jne
je
mov
jns
sti
notl
fcompl
int
loop
inc
fcompl
inc
push
out
mov
aam
dec
lods
pop
loop
mov
jecxz
jo
xlat
push
out
add
or
mov
aaa
xchg
fists
mov
inc
and
leave
loope
pop
addb
push
jns
fucom
loope
ss
dec
pop
pushf
mov
in
stc
pusha
cmpsl
mov
cli
mov
mov
push
add
sub
jbe
dec
aas
dec
xor
pop
add
push
rcrl
xchg
mov
cmpsl
pop
mov
adc
ret
dec
loop
jecxz
sahf
lcall
arpl
call
lea
testl
mov
xchg
stos
pop
jb
repz
pop
mov
iret
in
pop
mov
test
push
insb
movsb
mov
decl
cld
push
jae
popf
cmp
out
dec
rclb
popa
stc
or
je
xchg
jns
fnsave
mov
xor
mov
or
fcmove
sahf
mov
rcll
pop
decb
xor
add
aam
pushf
jge
fimuls
test
lods
cmp
outsl
pop
stc
rorb
xchg
xor
and
and
sti
mov
push
movsl
cwtl
xchg
aad
out
fnstsw
lock
sbb
negb
ret
mov
cmpsb
cli
sub
inc
sbb
sarb
pop
and
add
fbld
inc
aad
pop
xor
loope
notl
mov
xor
dec
xchg
scas
fldcw
jmp
add
jecxz
or
ds
sub
popf
hlt
sub
repz
and
push
cmp
stos
call
outsl
pop
out
lahf
cmpsl
mov
jp
sub
fdivrl
stc
cmp
psrlq
inc
ja
outsl
je
cs
adc
push
add
lds
pop
mov
xor
dec
sti
mov
adc
loope
pop
and
mov
push
fcmove
arpl
or
loope
sbb
jo
push
push
arpl
imul
jl
lock
lock
lret
inc
std
jmp
andb
push
xor
aas
in
mov
dec
push
into
lahf
loop
mov
cmp
loopne
jge
imul
aad
or
mov
enter
adc
mov
in
and
inc
dec
cmp
and
mov
dec
jnp
shll
lds
dec
fcompl
inc
inc
rcl
mov
out
outsl
rcll
outsb
movsl
mov
push
iret
inc
pop
call
jp
jo
mov
stc
cmpsl
cltd
xchg
push
jbe
xlat
jae
mov
int
pop
ja
aad
push
fdiv
xchg
add
fisttpll
ds
jno
push
outsb
xchg
mov
sub
dec
sub
hlt
push
insl
aaa
inc
jne
or
pop
lods
mov
xor
fsts
imul
mov
jecxz
mov
cmp
scas
push
cmpb
rorl
not
cwtl
stos
fidivs
cmpsb
lock
sbb
popf
add
ja
mov
mov
push
dec
cmp
ret
lods
rcl
bound
ret
xchg
pop
movsb
popl
dec
das
outsl
dec
add
lods
and
sub
dec
adcl
ret
outsl
repnz
jne
lret
xor
dec
aam
push
add
cmp
jl
or
xchg
shl
aam
xlat
cmp
test
inc
mov
mov
sub
add
jg
ficomps
popf
pop
repz
xlat
sub
in
ss
xchg
sub
mov
arpl
sar
and
adc
xchg
inc
xor
das
pop
stos
movb
xor
jg
test
sub
cmp
es
stc
std
sahf
mov
sub
mov
mov
push
sub
fldl
add
jecxz
mov
mov
out
push
mov
out
pushf
or
or
pushl
mov
sbb
or
jg
out
sbb
lods
dec
xchg
adc
push
aaa
xchg
add
adc
or
add
adc
clc
sub
push
repz
dec
gs
and
in
jne
mov
pop
pop
inc
add
scas
mov
mov
sub
pop
and
pop
cmpsb
pop
or
xor
sbb
pop
arpl
cwtl
mov
cmp
stos
out
rcr
pushf
lock
mov
sti
xchg
mov
push
imul
adc
inc
jno
xor
clc
movsb
jp
inc
std
test
inc
jo
cwtl
jo
popa
cmpb
cmpsb
cmp
sub
jle
mov
cwtl
add
xor
repnz
aas
nop
push
pop
add
imul
outsb
popa
dec
or
aad
mov
dec
xchg
roll
mov
push
xorb
pop
test
stos
xor
outsl
push
push
pushf
xchg
movsb
mov
adc
stos
pop
sti
sbbb
dec
xchg
xchg
jnp
cli
adc
mov
or
repz
pop
clc
lds
outsb
mov
call
xor
lods
mov
push
push
dec
fldl
call
push
mov
daa
in
jg
mov
add
pusha
sahf
mov
cltd
inc
lea
aad
or
hlt
or
aad
mov
jmp
push
orb
adc
popa
xchg
cld
jge
stc
lods
call
pop
jnp
adc
sbb
mov
cli
pop
inc
pop
cmpsb
repnz
cs
pushf
jb
jns
cmp
pop
in
and
pusha
mov
hlt
push
shlb
cltd
js
sub
leave
xor
icebp
ja
push
jmp
and
pushf
int3
mov
mov
push
sbb
shl
adc
shrb
adc
ret
repnz
cmp
mov
subl
lret
inc
push
pop
insl
repnz
lret
inc
xor
or
daa
cmp
adc
aam
fsub
repnz
mov
loopne
dec
sbb
push
daa
mov
jp
pop
je
sub
cltd
lcall
adc
sbb
cmp
divb
sysexit
add
pop
fidivrs
popa
xchg
sbb
ja
sbb
subl
dec
mov
pop
pop
in
or
sbb
or
bound
xchg
out
loopne
adc
dec
leave
add
mov
jge
insb
mov
rclb
outsl
mov
shlb
inc
roll
sub
jne
xchg
jp
fistpll
movsb
add
jnp
push
pop
hlt
xchg
in
mov
bound
sub
adc
cltd
cmp
shlb
dec
loop
inc
push
inc
pop
cmp
andb
xchg
in
xchg
shrl
push
dec
clc
adc
cmp
and
data16
mov
daa
inc
icebp
xchg
out
push
jmp
ja
test
out
das
out
xor
adc
push
mov
ljmp
inc
cld
hlt
add
hlt
pop
dec
test
lea
jns
mov
sub
mov
lods
xor
or
mulb
mov
mov
es
xchg
ja
mov
adc
cmp
mov
fadds
xabort
dec
aad
data16
sbb
and
fs
cltd
adc
stc
sbb
fsubs
out
addr16
jmp
shl
scas
jp
aas
lahf
ret
mov
lods
push
mov
adc
test
sti
and
dec
push
imul
loop
repz
ret
adc
icebp
pop
push
out
dec
scas
dec
adcl
xchg
cmpl
push
fcomps
inc
testb
cs
jo
push
mov
mov
dec
ja
daa
inc
xchg
mov
pop
leave
mov
cmc
mov
andl
mov
rcll
mov
jo
inc
in
xchg
xchg
cs
popf
xchg
pop
cmp
movsb
pop
mov
add
jae
icebp
ss
jns
rcrl
inc
addr16
in
cmc
flds
cmp
xchg
mov
mov
inc
pop
hlt
arpl
clc
and
jmp
mov
ret
cmp
pop
adcl
test
dec
mov
add
pop
add
xchg
or
mov
fiaddl
cwtl
adc
lret
pop
mov
jp
inc
add
fdivrs
cmp
pop
mov
push
lds
adc
in
int
pop
inc
fnsave
dec
out
iret
push
adc
mov
xchg
out
dec
push
outsb
add
push
les
adc
imul
sub
rorl
mov
inc
addr16
cmp
push
daa
mov
mov
inc
aam
outsl
adc
inc
push
sti
scas
ja
mov
lcall
iret
movntps
adc
mov
in
adc
lcall
addr16
xlat
out
mov
and
pop
dec
mov
xor
pop
cs
push
out
movsl
and
enter
jo
sahf
loope
add
stos
mov
mov
shlb
mov
push
inc
fistpll
fists
push
mov
push
inc
fisubrs
mov
and
push
popf
cmp
adc
fsubl
rorb
ljmp
cwtl
es
orl
xor
pop
fisttps
inc
pop
test
sub
adc
out
jg
cmp
clc
mov
adc
pushf
negl
xor
xchg
sti
lret
mov
cli
push
call
mov
jae
inc
js
xchg
inc
mov
mov
inc
repz
lret
adc
outsl
das
or
insl
mov
fs
ret
mov
popa
mov
cmpsb
push
sub
je
js
in
sti
lods
mov
inc
ret
xchg
mov
mov
hlt
sub
lds
hlt
adc
iret
pop
inc
dec
lret
insb
pop
push
add
lea
mov
or
fcmovbe
ljmpw
inc
mov
dec
push
sbb
sub
push
shrb
cmp
das
inc
test
test
out
movsl
shlb
popa
push
mov
pop
pop
dec
dec
fs
inc
das
je
pop
sub
imul
push
fisttps
cs
and
mov
in
pop
shlb
stc
xchg
mov
adc
pop
push
and
pusha
cmp
in
into
mov
cmp
sub
sti
movsl
mov
dec
negb
mov
rcll
cli
insl
mov
dec
call
xor
subl
in
lds
jge
mov
lret
lcall
negl
sbb
in
pop
lods
je
jmp
call
xchg
cld
push
cmpsl
adc
std
iret
xlat
lret
test
or
icebp
pop
ljmp
movsb
lret
test
imul
rorb
mov
gs
sbb
inc
in
loopne
adc
int
aaa
aaa
shrl
jmp
dec
mov
jmp
sub
in
stos
stos
dec
adc
xor
mov
sub
inc
dec
andb
cmpsb
cmp
mov
iret
lret
fistl
sub
push
scas
enter
fwait
test
push
js
sbb
ljmp
sub
int
push
cli
push
insb
jo
push
add
jg
leave
mov
daa
jmp
sub
mov
jne
lds
jl
mov
jb
shl
jae
jp
xor
jo
orb
movsb
xchg
mov
mov
call
cmp
xchg
divb
pop
popa
sub
dec
negl
inc
cmp
xor
lods
push
cmp
lret
mov
jbe
icebp
pop
insb
and
movsb
inc
hlt
int
mov
stos
push
xchg
pop
fstpt
cltd
pop
rolb
add
or
add
jbe
rcrl
rol
push
and
inc
ret
add
pop
add
mov
push
jns
std
ret
sbb
dec
lea
movsb
pop
push
mov
dec
jp
popa
cltd
in
dec
js
adc
pop
mov
mov
pop
test
mov
std
push
mov
mov
jp
and
enter
into
test
xchg
shl
inc
jo
lret
out
or
adc
scas
and
orl
jge
scas
je
mov
fwait
jb
jne
andl
insb
jmp
repnz
push
out
orb
andb
and
inc
aam
dec
aad
addr16
clc
cmp
jl
loop
inc
stos
pop
pop
and
adc
mov
pop
mov
enter
lods
dec
push
int3
cld
into
lret
pop
jbe
push
rol
jmp
add
sti
int
cmp
fcompp
insb
push
pop
and
filds
out
inc
inc
aam
dec
pusha
cwtl
mov
push
xor
idivb
pusha
push
mov
xlat
cmp
dec
jne
push
push
push
sti
andl
push
mov
popa
sbb
push
cli
das
fiadds
lcall
push
rorl
and
lret
in
loope
popf
iret
rcrb
test
aad
rclb
fidivl
flds
fs
sarl
jo
adc
insl
add
or
cmpsl
fdivrl
shll
pushf
rcll
gs
addr16
dec
xchg
fs
into
in
mov
xor
icebp
ja
cmc
push
inc
add
in
popf
cmp
mov
les
jbe
scas
ret
daa
std
pop
das
stos
lahf
imull
repz
mov
mov
adcb
pop
cmp
xchg
adc
inc
sub
fwait
mov
mov
jl
xor
xor
pushf
jb
lret
cmp
imul
ds
lods
rcrb
and
mov
ja
cmpsl
cmp
ljmp
inc
addr16
push
or
xchg
push
or
or
or
shll
call
xor
cld
sbb
into
in
lock
enter
inc
test
mov
add
sbb
pop
scas
mov
lret
inc
inc
jmp
sarb
stos
neg
imul
lahf
jge,pn
dec
or
push
dec
pop
mov
bound
cld
sub
lret
jnp
in
fwait
sahf
enter
mov
xchg
jns
adc
mov
into
popl
aam
hlt
jbe
xchg
enter
jae
push
inc
cmp
sub
daa
es
mov
sub
ffree
aaa
icebp
inc
fs
push
xlat
push
mov
mov
cld
mov
test
xchg
or
jae
sub
mov
push
or
mov
in
add
mov
or
arpl
aaa
sti
lock
xchg
stos
adc
daa
outsb
dec
fsubrs
push
pop
and
adc
mov
pop
fldl
mov
sbb
loop
pop
push
xor
and
call
mov
inc
jnp
and
fisubs
inc
movsb
lahf
inc
inc
sbb
xchg
push
adc
pop
mov
jp
loopne
inc
add
xchg
mov
sahf
or
or
xchg
out
pop
inc
mov
subb
or
in
loop
adc
jp
dec
mov
scas
pop
jne
test
icebp
pop
fnsave
add
mov
sbb
add
cmp
out
leave
mov
mov
cld
mov
push
push
cmp
xchg
sbb
fucomip
gs
mov
cmp
adc
cmpl
pop
lds
pop
test
or
clc
std
mov
sbb
pop
mov
test
orb
cmc
loopne
sbb
enter
fisubs
sub
faddl
adc
sbbl
lret
xor
mov
fnstcw
xchg
imul
hlt
cmp
js
jbe
mov
xchg
sbb
adc
and
aam
adc
and
add
scas
pop
fisubrs
jg
cs
mov
arpl
push
cli
dec
aad
dec
cld
insl
stos
mov
lods
cmpsl
out
outsl
adc
fldl
fidivrs
pop
popa
adcb
pop
icebp
data16
jae
jmp
test
and
hlt
out
leave
jne
test
dec
or
xor
push
and
mov
cmpl
int3
or
bound
cli
xchg
dec
fwait
xlat
lds
addr16
ds
jb
mov
adc
mov
movsb
add
lret
mov
lock
adcl
adc
sbb
and
popf
fwait
inc
add
pusha
xchg
mov
pusha
orb
jecxz
std
pop
mov
cmpl
icebp
leave
dec
divl
adc
repnz
dec
sbb
aas
adcb
cmp
mov
jnp
cmp
mov
cmp
ret
jae
mov
popa
mull
repnz
loope
lods
add
aaa
add
and
loop
popa
enter
mov
outsb
outsl
push
or
adc
cmp
mov
or
or
pusha
lea
fwait
sbb
jae
out
testb
inc
mov
pusha
mov
xchg
jl
es
rolb
pop
imul
jnp
mov
repz
pop
and
and
pop
into
mov
sbb
inc
ja
test
shl
mov
sub
sub
ret
jae
lret
jmp
add
sub
jns
fmuls
push
adc
test
xchg
push
stos
fidivs
sub
mov
shlb
mov
push
insl
xor
pop
testb
pop
cli
mov
push
xchg
push
push
std
add
jno
inc
stc
sti
je
dec
leave
fdivrs
test
sub
lcall
mov
gs
add
movsb
in
xor
xor
or
gs
add
int3
lahf
fnsave
sbb
sbb
scas
out
mov
jo
mov
mov
add
adc
cmp
cltd
aas
sarb
js
inc
push
mov
cs
testl
cmp
jnp
jo
inc
pop
aas
mov
sarl
jne
pusha
adc
test
loopne
arpl
fdivl
xchg
push
cmp
mov
or
adc
stos
add
mov
les
loope
and
xor
js
cmpsl
add
mov
xchg
das
push
push
xchg
out
inc
jge
movsl
jmp
push
dec
das
daa
inc
pop
push
jmp
ret
lcall
stos
or
scas
mov
xchg
xchg
mov
lds
in
jmp
ror
jnp
add
push
fs
cmp
mov
add
lfs
mov
sub
and
bound
cmp
or
cmp
sti
cli
cltd
push
cwtl
jecxz
cmp
shl
ret
push
je
popa
fnsave
pop
nop
pop
or
cli
add
jle
or
mul
mov
mov
pop
popa
mov
sbb
fadds
add
je
cli
cmc
dec
pushf
cmp
xchg
mov
push
dec
mov
sar
mov
inc
fdivrl
push
push
fimull
stos
loop
js
cmp
push
add
iret
cmp
sub
push
push
shlb
sub
into
jo
out
mov
shll
sbb
push
sub
jecxz
sub
int3
cmpsb
xchg
pop
call
push
out
shll
bound
test
ret
lahf
xchg
adcb
mov
cmp
or
lea
xor
leave
loopne
cmp
adc
xchg
jle
xor
jge
sbb
push
cmp
jne
sti
or
inc
mov
add
outsl
push
dec
test
cmp
shlb
xchg
sbb
push
lcall
mov
ljmp
stos
imul
mulb
pop
sbb
icebp
fs
mov
fwait
sbbb
adc
cmp
cmp
insb
jp
xchg
out
add
xor
cmpsl
mov
sbb
jle
loop
mov
sub
lcall
in
sub
ljmp
add
pushf
rorb
pop
sbb
mov
fsubr
mov
or
nop
femms
mov
inc
inc
int3
iret
mov
movsl
add
ss
scas
pop
repnz
xor
cli
and
dec
sub
mov
push
xchg
pop
jecxz
testl
testl
xchg
xor
cs
xlat
push
outsl
fdivs
sub
mov
in
adc
lret
andl
fisubrl
in
push
lock
dec
movsl
test
cs
jbe
jb
dec
jb
stos
js
test
mov
mov
orl
ret
sub
add
lahf
rcr
ss
imul
and
push
mov
mov
inc
loope
leave
cmpsb
jp
fists
pop
daa
dec
xor
mov
jl
dec
sub
movsb
mov
dec
jmp
aam
cmp
cmc
pop
xchg
jb
or
sbb
loop
and
test
insb
adc
add
je
mov
movsb
sti
stc
pop
or
mov
sbb
ds
xorl
je
jb
cmp
sti
sbb
and
fidivl
cmc
movsb
sti
test
and
mov
call
jb
cltd
jbe
aas
call
sahf
repz
add
pop
jl
mov
pop
xchg
shll
mov
pushf
popa
adc
aaa
in
sub
pop
xchg
push
in
push
mov
mov
je
fwait
jge
ds
inc
jns
and
dec
std
sbb
movsb
sahf
rcr
fcomps
lock
xchg
jbe
mov
add
daa
cs
jmp
and
xor
repnz
mov
inc
xor
leave
jae
pop
push
mov
add
fnstsw
mov
sub
jecxz
jmp
into
sub
jp
push
outsb
out
repnz
sub
jbe
add
in
sti
in
jmp
xor
add
xchg
jmp
sbb
xor
popa
nop
data16
dec
enter
hlt
addr16
sub
and
out
or
scas
frstor
adc
hlt
call
icebp
fnstcw
sub
sahf
addb
mov
outsb
cmp
fwait
jg
sbb
cmpsb
out
jmp
xor
jecxz
mov
cltd
test
shlb
xchg
subl
cwtl
inc
xchg
pusha
add
data16
out
lock
or
cmpsb
aaa
push
movsb
pop
adc
shr
push
hlt
mov
sbb
ja
jg
outsb
iret
inc
sbb
add
popf
sbb
sub
inc
jmp
add
dec
sbb
subl
sub
mov
arpl
adc
mov
mov
pop
mov
popf
imulb
adc
mov
push
add
dec
jp
cwtl
incb
xchg
sbbb
or
je
out
xchg
xchg
pusha
sub
push
and
sbb
insl
insl
dec
push
mov
or
push
or
cmp
lret
or
add
int3
jbe
cmpsl
add
lods
dec
mov
mov
loop
in
add
or
mov
mov
sub
mov
popa
nop
dec
shr
add
lods
stc
ja
insb
dec
sub
mov
pop
mov
imul
mov
jo
das
aas
adc
mov
fdiv
cmp
testb
push
out
lcall
jg
mov
dec
jecxz
sub
push
jnp
jb
add
push
scas
add
mov
popa
int
sbb
inc
jnp
lock
int
insb
or
fwait
inc
mov
arpl
nop
sub
and
sbb
xchg
mov
dec
hlt
inc
shll
mov
pop
and
loopne
js
int3
lea
inc
jno
xor
test
ret
ss
cli
lea
sbb
nop
sub
dec
mov
pop
jae
dec
xchg
ja
sub
fistps
xlat
lock
dec
push
dec
test
jge
inc
xchg
pop
dec
add
lods
adc
xor
or
xlat
push
daa
pop
sub
sub
out
mov
jno
mov
xor
push
test
inc
mov
in
nop
outsl
insb
decl
inc
add
sub
xchg
inc
repz
cltd
out
xor
cmp
jecxz
jae
les
ss
ja
stc
pop
cmpsl
int3
loope
ljmp
or
clc
loopne,pn
lcall
lea
cmp
push
div
negl
cwtl
test
in
fadds
sub
js
fwait
or
mov
mov
sub
push
inc
cmpsb
cwtl
enter
outsb
and
mov
cltd
addr16
dec
lcall
mov
dec
add
jl
jb
ret
gs
iret
dec
jg
add
lods
nop
fildl
sub
mov
xchg
inc
xor
test
orb
xor
cld
jl
arpl
popa
dec
xchg
out
enter
inc
mov
out
stc
push
sbb
lahf
je
icebp
jg
and
push
dec
push
pop
fwait
decl
xchg
sbb
fsubl
test
and
ljmp
mov
movhlps
mov
sub
pop
js
adc
into
push
xchg
inc
push
mov
scas
mov
sbb
adc
dec
cmp
sub
in
mov
ret
scas
mov
sub
into
pushf
cs
and
add
aad
dec
mov
into
sbb
mov
aas
inc
xchg
cmp
push
xchg
jnp
cmp
pop
jg
and
jge
sub
xchg
xorl
sbb
and
adc
insb
pop
test
fidivrs
lock
mov
ljmp
mov
in
imul
xlat
adcb
inc
add
inc
aas
stos
sbb
iret
cltd
push
mov
cmp
data16
mov
stc
push
jbe
int3
sub
fsubs
push
adc
adc
shll
sti
ror
daa
mov
or
pop
int
lods
loopne
outsb
mov
jo
lcall
call
int3
in
cmpsl
frstor
pop
sti
std
je
rcrb
mov
sbb
push
pop
xchg
mov
icebp
es
and
aad
arpl
clc
mov
lcall
in
pop
lods
add
push
or
clc
mov
inc
mov
lock
mov
sbb
sbb
mov
mov
pop
imul
test
daa
int3
adc
cltd
xor
ss
mov
imul
xor
ljmp
push
xchg
add
dec
jae
xchg
push
mov
cmp
mov
pop
lret
out
out
lahf
adc
adc
mov
int3
sub
or
cmc
inc
push
xor
addb
push
xchg
les
andb
add
clc
mov
ds
ljmp
arpl
test
mov
cld
int3
jecxz
scas
jno
fisubrs
lret
bound
pop
dec
sbb
sti
push
iret
mov
jp
cld
cmp
aaa
dec
shll
lahf
dec
aaa
mov
sub
or
or
sbb
les
andl
dec
or
in
inc
lea
adc
out
sub
push
cwtl
push
mov
dec
insl
inc
mov
jnp
imul
ror
cld
sub
notb
jbe
xchg
fwait
inc
dec
test
insl
jnp
jmp
inc
push
insb
add
call
enter
push
fnstsw
pop
xor
outsl
jp
mov
je
or
inc
push
data16
aaa
xchg
icebp
jge
sbb
icebp
test
inc
sbb
cmpsb
nop
add
cltd
shrl
cs
icebp
stc
add
clc
xor
outsb
stc
stos
clc
jae
jo
out
fstpt
popa
inc
push
nop
loopne
rorb
mov
push
or
or
mov
cltd
mov
xchg
jae
out
jne
into
dec
daa
pop
push
lods
xlat
push
push
inc
add
sbb
sbb
pop
cmp
push
fstl
mov
mov
mov
in
xchg
mov
pop
movsb
mov
pusha
lods
mov
add
fwait
inc
jg
out
lahf
shrb
adc
js
call
sarb
in
mov
mov
xchg
inc
and
sbb
xor
xor
xchg
outsb
test
mov
loopne
mov
pop
mov
dec
cltd
xchg
cli
push
cmpsl
cltd
jp
or
mov
and
pop
aad
xchg
out
cmp
xor
out
int3
imul
sub
sub
or
xchg
xchg
push
fimuls
add
mov
lods
push
adc
dec
dec
add
inc
lret
xchg
adc
test
stos
xor
aad
iret
push
add
loop
loop
add
mov
movsb
fs
ret
pop
adcl
pop
test
sahf
push
repz
inc
jle
sbb
notb
insl
lock
outsl
out
outsl
int3
cmp
jmp
xchg
in
scas
in
arpl
pop
test
fidivrs
popf
and
cmp
enter
dec
mov
push
jo
dec
nop
sbb
cmp
dec
pop
pop
mov
or
fadds
out
adc
pop
pop
or
mov
stc
rorl
pusha
mov
out
nop
xchg
mov
add
in
adc
xchg
stos
shlb
push
cld
or
scas
out
in
scas
sub
fwait
enter
and
add
xlat
dec
rdmsr
call
or
dec
out
inc
xor
add
filds
mov
cli
out
mov
in
mov
in
inc
dec
or
or
jo
mov
mov
jns
xlat
mov
dec
lds
jne
mov
inc
ljmp
rorb
mov
mov
jo
push
dec
mov
pop
enter
xor
rclb
xchg
jmp
jle
loopne
les
add
leave
fsubs
mov
pop
call
push
popf
inc
mov
test
insb
lds
lahf
xchg
mov
popf
adc
mov
imul
pop
das
xor
mov
or
in
lcall
stc
xchg
jge
sub
sbb
cld
leave
adc
push
jno
pop
movsl
and
aas
popa
cmp
cmc
xchg
xchg
out
ja
inc
xor
icebp
ret
clc
pop
sbb
insb
addr16
repnz
ja
sub
mov
pop
inc
sti
mov
dec
iret
push
enter
dec
inc
shl
inc
add
arpl
outsl
dec
insl
inc
lock
or
sub
jg
xchg
pusha
fadds
loopne
adc
dec
mov
push
push
test
sbb
push
pushf
je
popa
rclb
push
fsubrs
push
add
lock
push
add
add
dec
add
pop
dec
cmc
jp
dec
and
mov
mov
popa
ret
ss
dec
add
adc
dec
jle
cmp
jns
push
insb
mov
xor
aam
cmpsb
sbb
pop
pushf
sub
inc
pop
sbb
js
or
aad
fisttps
outsb
add
iret
arpl
cmpsl
aad
leave
ljmp
ds
sbb
inc
jnp
ljmp
adc
ds
lea
lcall
dec
js
or
fsts
push
push
and
stc
and
push
mov
lahf
les
xchg
ds
xchg
push
mov
xor
adc
cs
add
mov
mov
push
mov
mov
sbb
inc
cmp
aas
push
mov
mov
cmp
leave
jo
aas
cmp
mov
xchg
jo
pop
fidivrs
imul
adc
xchg
sahf
dec
lea
rorl
std
out
sub
mov
mov
xor
pop
aaa
mov
sbbb
inc
push
mov
repnz
xor
iret
adc
and
cs
inc
jmp
sbb
adc
aaa
loopne
int
push
clc
xchg
mov
mov
ret
call
mov
add
es
rcl
iret
add
mov
call
stc
in
neg
aam
xchg
xchg
or
mov
and
addl
in
bound
sbb
pop
sbb
aad
push
test
or
fs
mov
lret
imul
add
pop
cmp
adc
lahf
cmpsb
je
sbb
stos
inc
daa
jo
push
xor
mov
loopne
dec
ret
mov
nop
out
sbb
add
ror
stos
pop
jge
repz
mov
jnp
pop
icebp
std
ficompl
mov
push
inc
repnz
xchg
and
mov
insb
inc
inc
mov
add
mov
nop
popl
sbb
pushf
out
lret
ss
mov
fs
in
aam
pop
out
push
ja
and
jbe
cmp
push
mov
inc
and
and
pop
in
imul
xchg
xor
fs
sub
outsb
push
and
or
notb
dec
fs
pop
stc
data16
jo
mov
test
sbb
xorl
ror
push
cmp
test
int
fwait
push
sar
xchg
and
sbb
inc
and
fnstcw
aad
cmp
lahf
mov
jae
int
je
inc
or
negb
jg
jbe
nop
sti
out
add
fs
mov
out
pop
lcall
pop
mov
jmp
adc
mov
leave
cmpl
sub
fisubs
lds
js
pusha
dec
imull
push
sbb
fsubp
loop
jmp
out
inc
sub
add
int3
mov
mov
movsb
stos
or
inc
mov
scas
idivl
sbb
out
imul
mov
jo
push
test
sbb
or
lea
aaa
mov
push
lahf
push
lods
mov
negb
mov
popa
out
loope
mov
stos
cltd
mov
pop
or
clc
mov
test
shlb
pop
call
lea
add
es
mov
popf
imul
and
add
jge
mov
jne
ljmp
jb
imulb
outsl
mov
int3
sahf
xor
pop
adc
mov
mov
fucom
pusha
je
push
insb
in
sbb
push
fldt
mov
cmp
popa
mov
cmp
test
arpl
and
dec
mov
sti
aaa
add
jle
scas
sbb
test
pop
cmp
and
lods
xor
or
fisubl
xor
xchg
add
inc
mov
sbb
idiv
repz
arpl
decb
pop
insb
roll
xchg
dec
sbbl
xor
add
mov
and
aaa
xor
xchg
inc
push
sbb
xor
and
sbbl
negl
in
ret
shrl
aam
mov
cmp
dec
sti
lock
out
lds
pop
imul
adc
push
popf
mov
xor
test
pop
out
sub
xchg
jbe
pop
mov
outsl
bswap
push
jno
icebp
adc
jae
or
test
lds
lret
ret
dec
in
dec
pop
dec
push
js
add
pop
aad
mov
clc
and
enter
mov
call
ds
mov
fs
cmp
cmp
int3
roll
jno
or
aam
in
pop
pop
ljmp
les
test
fucomi
jns
loope
mov
rorl
jb
add
rcrl
adc
or
aas
out
lods
outsl
dec
jo
pop
mov
and
adc
and
mov
insb
into
xchg
xor
inc
aaa
cmp
dec
push
or
mov
and
fwait
pop
and
pop
in
cs
sbb
cs
cltd
nop
jno
repz
fwait
or
pop
dec
add
aaa
lahf
lret
jns
das
rcrl
mov
xor
push
aas
mov
stos
in
pushf
test
jg
xor
rolb
lret
jns
mov
fnstsw
jnp
mov
jmp
lods
jp
data16
pop
sub
xchg
loop
xor
in
push
mov
and
cmp
fldenv
movsb
xlat
shrb
inc
mov
xchg
jl
lret
push
cld
fcompl
adc
ljmp
lods
jo
int3
pop
movhps
shlb
cld
jno
cmp
jge
repz
xchg
add
mov
ja
adc
test
daa
test
cmp
gs
mov
cmp
cmp
aas
adc
ret
add
scas
mull
push
xor
xor
xor
sbb
data16
enter
int
push
lods
add
xchg
dec
or
fisubl
int
lret
cmp
sbb
pop
sub
movsl
cmp
add
jbe
stc
into
push
cltd
pop
gs
xlat
arpl
decl
fdivrs
in
jb
flds
pop
mov
add
loopne
adc
inc
monitor
xor
rcrb
mov
xchg
call
adc
out
xor
sbb
push
dec
lcall
fsubr
sbb
dec
cmp
pop
fbld
dec
cs
cs
xor
add
lea
cmp
clc
stos
sbb
ret
push
sbb
lret
ret
jnp
sbb
aas
mov
and
outsl
push
xchg
faddl
aas
ret
insl
mov
dec
lods
sbb
sti
rcr
jecxz
ficoml
xor
mov
cmp
push
pop
in
jno
icebp
sub
inc
mov
arpl
mov
sub
cmp
mov
mov
ljmp
loop
mov
mov
ret
movb
jns
hlt
cmpsb
or
lock
inc
inc
fcomps
jnp
movsl
push
push
mov
movsb
mov
stos
adc
xchg
sbb
xchg
int
inc
push
ljmp
add
jno
cmp
sbb
cmp
out
pop
leave
insl
lods
add
lcall
sbb
test
iret
add
push
cwtl
call
xchg
jae
enter
lahf
lods
lock
lahf
shrl
inc
sahf
mov
push
xchg
xor
push
and
sub
pop
sbbb
mov
xor
scas
push
xchg
rolb
outsb
push
lea
jmp
out
pusha
mov
xor
mov
das
pop
adc
daa
mov
fstl
test
lea
fwait
push
mov
push
mov
fwait
cmp
loope
mov
mov
out
xchg
in
icebp
das
ja
pop
inc
sbb
stos
ds
in
cmpsb
push
push
adc
pop
ret
lret
jl
push
sbb
popf
jns
pop
lret
mov
xchg
mov
popl
lods
push
inc
cld
push
sbb
add
mov
sub
loop
sub
xor
repnz
mov
cmp
xchg
lods
cmp
fisubs
das
add
dec
xor
test
pop
sahf
xlat
leave
lds
adc
mov
cmpsl
in
mov
pop
mov
movsl
pop
in
nop
fisttps
mov
cmc
icebp
add
cmpb
cmp
jmp
mov
cmpsl
pop
jge
imul
or
pop
jle
mov
sub
xchg
cmp
pop
mov
mov
adc
add
jb
add
movsb
imul
pop
sbb
jle
adc
mov
js
sbb
or
push
pop
addr16
mov
dec
sub
ja
test
dec
out
mov
xor
adc
fisttps
ret
inc
mov
xor
ss
cld
push
sub
std
testb
fidivs
cmc
add
jb
jno
cmp
jns
push
dec
in
pop
lds
fs
or
arpl
fsubl
and
sub
mov
rcrl
push
cwtl
lds
loopne
lods
sbb
or
in
or
test
mov
jl
cmp
inc
pop
inc
add
ret
push
xor
popa
outsb
jp
out
jnp
jnp
or
insl
addb
push
mov
add
repz
and
mov
pop
cmc
xchg
les
push
insl
inc
push
es
lret
movl
sbb
pop
adc
mov
push
inc
lret
mov
adc
jg
xor
mov
pop
mov
xchg
adc
fcmove
insb
sub
mov
imul
inc
add
mov
hlt
jns
lret
mov
js
std
cwtl
mov
add
or
mov
pop
inc
int
popa
pop
sub
jle
sub
cld
mov
xchg
and
cltd
cmp
mov
mov
jle
mov
adc
jo
in
jp
mov
xchg
stos
and
mov
sbb
scas
mov
popa
xorb
inc
xchg
dec
cmpsl
mov
leave
dec
pop
xchg
mov
in
pxor
jge
add
aam
adc
adcb
dec
add
sub
cmc
and
fimull
mov
jle
orb
leave
mov
pushl
shll
sahf
lds
popf
inc
ja
xlat
stc
or
or
and
test
push
insb
das
iret
xor
mov
js
rcrl
jle
adc
lods
pop
ss
and
lods
cmp
sbb
dec
jge
out
andl
loop
imul
ftst
je
pop
adc
outsb
cmpl
adc
sbb
sbb
push
es
mov
fcmove
int3
pop
and
cmp
cmp
cli
and
in
xchg
push
push
sbb
sub
sub
test
inc
fstp
loope
lahf
out
dec
mov
and
jno
xchg
pop
cmpsl
mov
faddl
loop
ds
mov
cmpsl
sbb
sub
and
cmp
cmp
lret
insb
mov
xor
sub
lret
sub
and
mov
push
fidivs
xor
in
shrl
sub
adc
adc
repnz
or
rcrb
sti
mov
adc
xchg
es
mov
and
nop
or
add
ds
xchg
cmp
lods
stos
cwtl
lock
cld
lahf
cwtl
jmp
push
xor
jb
js
nop
aaa
sahf
or
dec
mov
or
rcrl
fmuls
into
cli
mulb
xor
inc
aad
push
movsb
push
iret
mov
addr16
inc
cmp
sbb
lds
fistl
shl
xchg
and
movsl
pusha
push
dec
adc
outsl
jge
sub
pop
aas
mov
sti
pop
repnz
in
mov
test
ja
or
popa
aad
sub
lcall
dec
loope
xchg
aam
add
pop
push
repnz
mov
push
test
cmp
shlb
roll
push
add
jo
pop
xchg
shl
fisubs
lods
faddl
pop
dec
aaa
push
call
enter
inc
jmp
jecxz
js
push
lahf
lret
push
call
adc
adc
jo
or
xor
inc
mov
leave
pop
arpl
in
sar
ds
jmp
cmp
or
add
test
adc
push
fidivs
cmp
lds
jle
and
pushf
out
sbb
xlat
scas
mov
loope
mov
int3
in
jnp
in
adc
sbb
sub
push
idiv
data16
jns
push
lds
mov
mov
lock
and
mov
lcall
call
pop
jp
fisubrs
push
daa
cmc
and
out
dec
pop
dec
dec
and
adc
leave
push
je
rcll
outsl
mov
xchg
fwait
rorb
mov
scas
pop
iret
aaa
xor
jle
add
stos
adcb
mov
push
add
push
fimull
xchg
mov
adc
sahf
vmread
xchg
repz
jmp
xor
mov
fisubrs
stos
pop
or
push
cli
xor
mov
inc
insl
jb
test
fdivrs
xchg
psrlq
mov
jmp
idivl
mov
call
pop
popa
sub
mov
dec
call
adc
cmpsl
in
jb
push
imul
arpl
sahf
mov
test
imul
nop
inc
inc
cmp
test
bound
test
xchg
subl
sub
mov
stos
insl
dec
xchg
mov
jle
sbb
jnp
leave
add
insb
ja
rcrl
mov
xchg
jno
pop
pop
push
push
mov
pop
cmc
cwtl
mov
js
push
mov
xor
ss
outsl
pop
push
fiadds
sbb
dec
xchg
stos
adc
orb
push
mov
in
xchg
or
loop
faddl
fld
stc
fwait
mov
or
xor
push
cmc
mov
fsubrs
repnz
lds
jo
aaa
stos
outsl
jb
mov
inc
add
adc
testl
cmpb
test
jns
in
fistl
jmp
push
repnz
add
shrl
in
mov
mov
lods
gs
es
jo
daa
jmp
sbb
bound
nop
fmull
shl
push
ja
push
shlb
pop
jl
aaa
cmp
push
mov
jge
pop
fwait
mov
sbb
sub
mov
or
subb
sbb
hlt
adc
daa
int3
dec
xchg
inc
jl
lret
cs
call
popl
xor
repz
aam
mov
jnp
or
sbb
in
or
inc
lods
psubusb
rcrl
jmp
hlt
sahf
ficoms
in
movups
dec
neg
aad
mov
rcrl
dec
mov
es
imul
sbb
jmp
subb
shlb
sub
arpl
rcll
xor
pop
xchg
mov
xor
dec
jg
and
shll
mov
add
jp
pusha
xor
or
aas
mov
stos
mov
push
xor
lcall
test
inc
nop
fdivrl
into
push
subb
mov
push
jne
fiaddl
push
fsts
mov
fisubrs
shrl
or
pop
or
mov
cmp
and
sub
loopne
jbe
cmpsb
pop
sub
dec
out
xchg
xor
jmp
sub
lahf
push
jnp
out
or
cmpsl
scas
sbb
loopne
je
sbb
xor
iret
stc
sbb
stos
stc
movl
adc
and
fmull
out
cmpsl
js
sub
jmp
jg
icebp
ret
pushf
int
enter
fs
push
lcall
loop
lcall
movsl
shl
and
insb
pop
xchg
in
add
rolb
push
clc
or
inc
jb
fs
test
pushf
sti
subl
or
jecxz
test
xchg
rcrb
stc
leave
bound
mov
hlt
xchg
sbb
out
add
loop
and
es
or
mov
adc
or
shld
or
test
out
imul
inc
adc
xchg
or
das
sahf
out
mov
pop
test
cmp
jne
mov
dec
inc
into
cmpsb
leave
sub
stos
jle
lock
mov
popf
pop
clc
xor
in
xchg
jmp
jae
pop
fwait
inc
imul
or
and
sub
and
sbb
xor
adc
cli
or
dec
mov
ret
sub
rclb
sbb
dec
orl
push
adc
push
add
inc
adc
push
popa
jp
lds
sub
orb
push
pop
xchg
movlps
sbb
movsl
jno
mov
addr16
cmp
out
repz
push
or
sbb
adc
xchg
xor
aad
jae
push
or
icebp
fld1
ret
mov
sbb
xchg
pop
insl
cmp
push
loop
inc
stos
cld
jecxz
mov
scas
push
cmpsl
hlt
sbb
in
dec
cld
lods
fs
loop
inc
aaa
in
add
adc
and
adc
cld
leave
or
cmc
pop
cmp
mov
stos
dec
push
ret
dec
push
xchg
inc
and
push
push
pop
mov
or
ss
dec
push
idivl
adc
cs
jge
lret
imul
mov
inc
hlt
mov
adc
jb
and
mov
pop
ror
mov
mov
ret
shll
pop
mov
inc
jae
cmp
sub
mov
xchg
or
fdivl
or
pop
pop
jle
sarl
mov
jne
push
outsl
pop
sub
stos
push
cmp
movsl
push
and
nop
mov
ljmp
lea
inc
cmp
sti
in
pop
mov
push
inc
shlb
push
subb
xor
push
fcompl
add
cs
sbbl
add
lock
push
jl
or
or
leave
push
xchg
adc
dec
shlb
movsl
pop
jne
gs
rolb
adc
arpl
xor
repz
scas
mov
mov
stc
cwtl
dec
les
popfw
ds
jns
xchg
push
push
push
fldl2e
aad
movsl
push
push
push
pushf
mov
push
xchg
adc
les
pop
stos
clc
repnz
and
pusha
pop
pusha
push
jp
popa
cmp
les
fists
cmp
xor
sbb
xlat
pop
in
sub
sbb
rcll
imulb
xchg
int3
cmp
in
ja
fmull
aad
sahf
test
jmp
adc
outsl
adc
fs
cmpsl
shrl
cmp
out
mov
xor
pusha
rclb
sbb
add
cmc
aas
and
push
pop
add
xchg
ljmp
ret
ljmp
insl
jne
or
mov
jno
popa
add
mov
push
sahf
mov
sarb
in
scas
outsb
xchg
inc
xchg
inc
xchg
cmp
mov
and
lods
mov
stos
pushf
sbb
push
cmpsb
ret
mov
pushf
int
add
cld
dec
add
daa
ret
dec
jmp
ret
xor
rol
or
popf
sbb
scas
fnstcw
and
gs
outsb
push
cmpsl
cmp
and
fcompl
mov
adc
repz
ljmp
fidivl
push
aaa
push
xor
insl
cs
push
ret
mov
in
gs
xchg
lds
lcall
inc
pop
subb
pop
dec
inc
sbb
int3
mov
xchg
sub
add
and
sub
fildl
movsb
nop
loop
sbbb
push
xchg
xor
mov
lahf
cld
lea
test
hlt
sbb
insb
int
xchg
std
nop
out
push
pop
cmp
pop
pushf
push
testb
jmp
dec
cmpsl
movsl
pushf
stos
cmp
fstpt
inc
shll
cmp
add
imul
cwtl
xchg
not
adc
shlb
push
bound
cmpsb
mov
aam
scas
lcall
jle
jnp
inc
push
push
adc
sub
sbb
push
sbb
mov
in
mov
pop
sub
rcll
aad
add
lret
aaa
mov
sub
cltd
das
mov
xchg
jno,pt
lahf
jle
push
mov
jb
pop
cli
sbb
sbb
xchg
int3
and
xchg
sub
outsl
mov
mov
test
xor
lea
push
xchg
xorl
and
hlt
fwait
cmp
divb
mov
mov
push
out
push
lds
xor
jge
mov
pop
add
add
fmul
jbe
addb
test
xor
cld
sti
pop
shll
mov
push
sub
movsb
nop
add
daa
fldenv
pop
pop
mov
scas
mov
cmpsb
mov
and
fiaddl
jbe
mov
aad
inc
xor
stos
jno
mov
testl
mov
popa
data16
push
mov
dec
aam
rorl
out
push
xchg
les
push
in
mov
push
adc
test
and
mov
sbb
fimull
hlt
mov
sahf
mov
fldcw
lock
jbe
ret
movsl
inc
cmp
cs
pop
inc
negb
loop
pushf
fisubs
outsb
out
adc
test
ds
scas
jnp
call
mov
movb
jl
lock
ss
mov
imul
push
fs
and
xchg
mov
pop
or
lahf
mov
cmp
mov
lcall
div
jb
jno
pop
lret
inc
pop
loopne
xchg
mov
pusha
xchg
mov
xchg
cmp
pushf
add
insb
and
inc
jo
pop
movsl
xchg
movsb
jnp
sbb
push
push
int3
jae
and
lock
addb
adc
frstor
mov
sbb
push
outsl
pop
orb
ret
cmp
jecxz
ficompl
out
adc
repz
mov
loope
cmp
cmpsb
dec
adc
xchg
cld
movsl
or
ja
push
test
adc
repnz
sbb
stos
push
mov
sbb
loop
mov
repnz
lods
hlt
xchg
xchg
cmp
stos
cmp
out
rorl
in
es
lock
pop
add
add
xlat
outsb
xchg
sarl
in
popa
dec
jp
jp
and
rolb
xchg
fucompp
push
jg
mov
daa
repz
mov
sub
and
notb
dec
xor
sbb
stos
testb
or
mov
loop
in
cmpsl
mov
and
loope
xor
movsl
and
sbb
stos
rorb
arpl
aad
fidivrs
cwtl
imul
xor
jecxz
jo
xor
idivb
test
pop
fisttps
repz
fdivrl
andl
jle
repz
negb
outsl
leave
xchg
or
ss
xor
xor
mov
push
mov
jecxz
sarl
lock
int
add
inc
popa
ds
inc
fbld
push
ja
add
cmpsb
xor
xor
push
mov
mov
pop
mov
cwtl
inc
leave
in
je
inc
inc
mov
popa
xor
push
sbb
pop
adc
outsb
or
push
xchg
xorl
addl
test
in
sti
add
fs
or
mov
std
adc
push
mov
pop
jnp
xchg
add
pushf
mov
dec
sarl
adc
pop
and
out
inc
jecxz
or
int
inc
cltd
push
xchg
rorb
std
mov
push
mov
inc
jnp
xor
dec
jo
sbb
repz
cmp
sti
xor
jo
add
jl
out
sub
xchg
adc
cmp
sbb
lahf
lahf
in
bound
jo
enter
repz
jb
and
and
and
scas
rcrb
and
pop
mov
test
inc
aaa
movntps
jecxz
xchg
push
sub
ret
lea
push
pushf
and
aad
sbb
mov
rorb
cmpb
xor
pushf
outsb
popa
mov
jno
sbb
clc
inc
mov
xchg
pop
int
xor
cmpsb
mov
and
movsb
jle
pop
adc
mov
adc
lahf
pop
xor
daa
pop
sub
stc
mov
pop
out
sti
cwtl
xchg
test
orb
push
mov
ljmp
mov
jo
pop
leave
arpl
or
cwtl
mov
cmc
cmovno
je
fstpt
leave
push
lret
dec
jo,pn
imul
fyl2x
add
or
dec
mov
orl
fadd
lret
stc
jno
in
insl
jl
out
sub
in
int
xchg
push
std
pusha
xchg
jbe
mov
mov
test
pop
cmpl
jle
dec
inc
inc
iret
and
mov
dec
int
xchg
mov
and
xorl
std
hlt
loopne
jo
ss
mov
dec
mov
inc
cli
ljmp
insl
lea
fistl
adcb
std
cld
cmpsb
sbb
inc
inc
xor
adc
inc
cmpsl
xchg
dec
movsb
and
push
inc
or
int
mov
popa
push
mov
jbe
add
ja
add
sub
lret
mov
push
mov
enter
sbb
out
inc
cmpsb
inc
lds
and
jbe
or
mov
aas
jnp
sub
jne
movsl
and
jecxz
cmp
inc
or
loop
fwait
hlt
daa
fisubs
ss
lock
rorl
push
in
inc
pop
dec
mov
dec
add
data16
cltd
subb
sbb
xor
cmp
and
adc
call
adc
jbe
fnstcw
dec
or
or
push
cmp
and
inc
insb
test
adc
mov
add
roll
subl
and
insl
or
adcb
dec
push
or
pusha
loop
jne
adc
addb
mov
dec
sub
mov
inc
in
mov
leave
pop
adc
lds
test
pusha
push
pop
jnp
push
add
push
push
bswap
inc
adc
mov
jecxz
adc
mov
cmp
loope
mov
call
or
ljmp
push
repnz
loopne
fwait
sbb
loope
daa
pop
ljmp
ss
push
cli
xor
push
lock
fcmovnb
push
ret
stos
xchg
pop
pop
xor
inc
icebp
xchg
mov
imul
lret
xchg
lock
mov
mov
jne
fimuls
ret
cmc
and
sbb
inc
das
jne
pop
jg
mov
push
cmp
fiaddl
push
in
xor
dec
xchg
jno
popf
cmpsl
jbe
aaa
add
xor
out
movsb
out
xchg
out
jl
inc
jae
scas
dec
dec
xor
cli
jecxz
adc
jmp
jne
test
iret
dec
jle
cmp
data16
outsl
add
pop
ret
pusha
out
int3
pop
or
test
int3
test
shl
bound
scas
or
lcall
decb
sub
ds
icebp
adc
shr
xchg
fidivrs
xchg
push
push
inc
inc
cmpsb
add
data16
push
insl
shl
mov
jl
scas
adc
mov
jle
icebp
jp
scas
mov
cli
mov
dec
nop
add
and
enter
adc
adc
sub
insb
cmp
lcall
and
pop
decb
lea
fistpll
imul
and
in
movsl
mov
loopne
pop
mov
data16
jmp
outsb
add
push
mov
repz
and
rclb
sbb
cld
enter
inc
nop
pop
ljmp
daa
mov
scas
jl
push
dec
and
cmp
cld
xchg
sub
sti
std
dec
ret
jae
idivl
stc
xchg
imul
lods
pop
adc
movsb
xor
shlb
dec
out
xchg
dec
shll
jecxz
daa
cmp
and
cmp
adc
cmp
push
fwait
jo
shrl
shrb
push
call
sbb
clc
jae
fstpt
and
lds
cs
add
rolb
shl
push
jae
pop
mov
cmpsb
add
push
mov
or
jle
add
dec
jge
sahf
insb
lahf
pop
push
push
cs
sti
and
test
add
les
sarb
xchg
mov
mov
out
movsb
and
cld
int
mul
mov
sar
pop
cmp
mov
push
sbb
and
push
sub
repnz
cmpsb
sub
shll
sbbb
stos
out
clc
pop
and
in
repnz
icebp
and
pop
cwtl
ljmp
fistpl
xor
or
pusha
enter
fiadds
rcrl
inc
push
scas
mov
mov
je
lds
jbe
push
ds
xchg
aad
insl
nop
int
mov
outsb
into
push
pop
xchg
out
mov
push
shll
sub
sbb
ror
mov
mov
inc
push
movsl
xor
xor
test
push
fldl
fidivrs
stos
xor
hlt
stc
jo
cmpsb
jne
dec
xchg
push
jge
mov
adc
xchg
or
shrb
adc
pop
mov
cltd
ds
lret
iret
add
test
cmp
cs
push
or
cmp
inc
lret
pusha
imulb
lcall
mov
adc
gs
inc
dec
mov
xchg
sub
in
inc
repz
push
cmpsb
jecxz
ss
add
cmpsb
shrb
dec
push
loope
dec
fldcw
pusha
jns
in
popa
cmp
mov
sbbl
push
inc
aad
and
inc
fwait
addr16
rorl
jmp
stc
jae
aaa
out
pop
sahf
and
push
cmpsb
hlt
dec
jbe
outsl
jb
cmpsb
xchg
push
imul
jecxz
mov
lds
lret
fcomps
mov
sbb
mov
aad
es
adc
ljmp
pushf
add
and
faddl
push
fistps
idiv
cmp
addr16
stos
loopne
pusha
scas
int
fildl
das
mov
je
pop
notl
sbb
mov
jnp
stos
cmpsl
jbe
adc
stos
fs
mov
loopne
aas
push
push
xor
iret
aaa
jne
mov
daa
add
cli
xchg
lahf
fistpll
mov
push
dec
mov
leave
fsubp
mov
mov
or
cmp
ljmp
or
push
in
pop
data16
jno
or
mov
mov
cwtl
xchg
enter
stos
inc
ss
mov
cli
test
cld
mov
out
bound
ds
negl
fstpt
adc
pop
lods
rcll
sarl
stos
push
fnsave
inc
sub
xchg
lahf
jle
xchg
mov
pop
mov
lea
add
ss
mov
push
mov
sbb
dec
sbb
outsb
lret
pop
adc
sbb
fwait
sbb
sub
mov
shrb
lods
in
fldenv
mov
xor
data16
fnsave
fstpl
or
jge
into
mov
sbb
sub
push
pop
jbe
jne
xor
fs
leave
pusha
push
adc
adc
addr16
or
std
pop
mov
cmpsb
mov
test
inc
mov
mov
sbb
sahf
push
mov
pop
loop
mov
jle
insb
push
sarl
inc
sub
mov
xchg
rcrl
add
lahf
xchg
sbb
out
jno
mov
dec
jns
xor
mov
sub
call
pop
in
cmp
mov
inc
sub
shll
xor
pop
mov
or
dec
mov
shll
inc
das
inc
nop
popf
mov
cmp
mov
mov
cmp
push
cmp
lea
xchg
jecxz
ja
int3
enter
subb
inc
stos
sbb
or
clc
stos
push
in
pop
sub
add
cmpsl
dec
clc
test
pop
jg
mov
dec
add
xor
je
sbb
and
jne
add
rorb
sub
sbb
push
or
ja
mov
call
dec
adc
lods
and
daa
and
jae
sbb
xchg
inc
ret
xor
sbb
xchg
movsb
dec
sub
sub
dec
xchg
inc
scas
inc
mov
stc
icebp
addr16
or
and
stos
jge
add
pop
popf
and
arpl
push
dec
cmp
or
xor
pop
or
sarb
dec
sub
mov
dec
lcall
dec
dec
mov
dec
scas
fldt
gs
arpl
xor
push
adc
mov
ret
aaa
sahf
adc
jl
out
sub
movsb
sbb
pop
push
ficoml
addr16
jnp
inc
sbb
outsb
fdivs
or
xchg
and
lds
stos
mov
cmp
mov
xchg
sbb
push
fsubrs
cltd
test
jo
sti
adc
scas
cmpl
inc
lds
mov
mov
aaa
mov
int3
mov
loope
movsb
cmpl
cmpsb
dec
push
jle
pushf
pop
jle
and
ret
sbb
icebp
aaa
pop
imul
pop
inc
out
movsl
pop
loopne
nop
add
xor
mov
jnp
shlb
shll
std
mov
add
out
cltd
popf
xchg
aas
jle
dec
or
pop
jecxz
imul
push
push
mov
out
and
out
in
add
movsb
rcl
movsl
cmpsb
and
mov
cli
jno
ja
scas
mov
movsb
aam
aas
out
mov
fbld
repnz
xor
xchg
pop
xchg
rcrb
das
sbb
xchg
inc
cmp
ds
push
mov
mov
xor
mov
fisubs
mov
ljmp
inc
push
insl
pop
add
or
scas
fwait
mov
push
sbbl
push
mov
fistps
lds
mov
mov
js
and
mov
es
dec
lcall
rorl
pushf
std
cmp
mov
jbe
sbb
or
and
xlat
es
test
dec
jmp
xor
jne
dec
add
mov
sbb
test
out
or
xor
inc
imul
in
cld
sbb
lcall
adc
lods
stos
jae
pop
mov
es
inc
sub
pop
adc
push
stc
pop
cli
movsl
adc
inc
sbb
or
inc
xchg
or
push
out
sahf
movsb
insb
inc
mov
jecxz
rclb
test
outsl
mov
cltd
jbe
add
lcall
sbb
bnd
dec
jnp
dec
inc
cmc
testl
sbb
cmc
xchg
mov
jmp
sbb
sti
loope
pop
dec
mov
push
mov
mov
mov
and
mov
and
cmp
cmp
lret
data16
cld
sub
mov
sub
scas
loope
loope
cltd
dec
push
in
adc
push
scas
decl
imul
sti
mov
adcb
in
outsl
xlat
notl
mov
inc
xlat
call
addb
mov
dec
push
out
adc
nop
ficoml
in
les
jo
mov
xchg
mov
or
jae
push
add
or
jl
xchg
jo
test
mov
fwait
sub
mov
xchg
cmp
fiaddl
stc
addr16
call
neg
insb
add
ss
xchg
dec
or
jmp
or
sbb
mov
push
adc
inc
push
xchg
inc
inc
sub
xor
xchg
adc
in
push
and
fistps
jne
jmp
into
mov
xor
outsl
and
cmc
shl
sub
mov
xor
mov
pop
jp
adc
push
jp
sbb
enter
push
push
xor
sub
dec
mov
je
cld
mov
shrb
cmp
mov
sahf
adc
lea
jg
je
dec
mov
dec
pop
inc
mov
lahf
sub
add
int
in
mov
push
dec
mov
out
xor
sbb
ficomps
popa
sub
pop
dec
cli
cmp
test
clc
and
xlat
mov
imul
sub
insl
mov
pop
xor
lahf
cwtl
inc
icebp
mov
xchg
lret
in
lcall
test
mov
dec
mov
and
mov
cmpsl
push
lods
mov
xor
ljmp
mov
ror
dec
mov
push
bound
jl
add
push
adc
insb
sub
xchg
test
and
mov
ds
cmpsl
repz
aaa
dec
mov
mov
ficoms
imull
add
fldt
sahf
lea
lea
lahf
iret
sub
sbb
push
aad
mov
dec
sub
dec
push
cmp
lods
ret
das
out
and
cmpsb
cmp
stos
pop
fldl
jge
xor
push
daa
mov
mov
xor
inc
leave
push
mov
cmp
lea
push
push
add
sbbb
es
push
cmp
imul
push
mov
imul
and
iret
dec
scas
fldcw
inc
add
xor
xlat
mov
out
mov
add
pushf
das
add
and
sub
jb
inc
hlt
xor
lods
sub
mov
xchg
outsl
mov
xchg
in
push
call
shl
sub
test
pop
pop
add
rol
jecxz
push
push
fcomi
es
jo
cmp
ret
adc
movsl
pop
rcr
femms
add
ret
orl
mov
pop
mov
pop
add
mov
jmp
sub
push
dec
sbb
mov
divb
movsl
nop
shlb
pop
ja
push
inc
cltd
out
insl
movsb
sbb
sbb
or
in
xor
push
in
or
cltd
pop
jo
hlt
mov
jnp
es
inc
dec
jno
enter
mov
and
ret
nop
data16
pop
or
loop
mov
ret
pop
repz
jae
xchg
cbtw
push
adc
push
dec
call
xchg
xor
dec
mov
dec
xor
sbb
sbb
clc
repnz
push
inc
lea
cwtl
mulb
jne
sub
in
dec
push
sbb
movsl
adc
xor
mov
sub
pop
icebp
add
cmpsl
inc
mov
sub
out
push
imul
cmp
push
test
pop
repz
mov
movsl
into
movsl
cmpsb
fbld
lret
out
pop
xchg
mov
daa
xchg
aad
test
push
cmp
or
aad
insb
rclb
pop
mov
rorl
stos
push
pop
add
or
and
test
scas
cmp
fnstsw
mov
adc
jne
test
insb
out
mov
pop
and
sti
shll
add
pusha
negb
xor
or
or
addr16
jmp
mov
sub
sbbb
cmc
pop
sub
out
jae
sub
ss
data16
adc
xorl
cmpsl
sbb
mov
mov
push
mov
inc
int
push
sub
pusha
mov
nop
add
jbe
mov
aad
mov
loope
and
outsb
sub
pop
ja
out
repz
neg
sbbl
popa
icebp
popa
enter
cmp
push
in
pop
push
pop
dec
mov
add
popf
dec
pop
aam
xchg
mov
jecxz
and
loopne
scas
mov
stc
test
xchg
in
popf
lret
scas
or
rclb
xchg
jne
mov
das
int3
jbe
adc
add
ficompl
daa
loope
xor
rcl
pop
sub
jns
int
jns
fwait
mov
sub
xchg
pop
xchg
xor
sbb
fiaddl
in
stc
xchg
adcb
push
out
repz
fldl
jle
pop
roll
scas
sub
cs
sub
push
sub
xor
stos
pop
and
cwtl
jns
stos
lcall
aas
push
xor
test
orb
repnz
push
mov
push
pop
daa
push
int
cmpsb
inc
or
sbbb
cld
fldl
aam
pop
or
push
cld
cmp
xor
out
cwtl
dec
xchg
fldt
or
xor
pop
outsb
faddl
sub
jecxz
dec
cmpsl
cmpl
nop
pop
push
dec
sub
pusha
cmpsl
or
xchg
pop
mov
xchg
nop
add
xchg
add
xor
test
fs
cmp
sub
add
and
push
icebp
pop
pop
test
jp
pop
out
mov
add
lods
fimull
dec
jg
loop
sbb
lahf
add
aaa
nop
mov
cmpsl
pop
cmpsb
inc
sahf
stos
nop
stos
stos
pushf
rcl
and
pop
and
ja
fcmovb
dec
dec
xchg
dec
test
cmp
push
cli
mov
bound
cbtw
pop
pop
lcall
mov
or
lret
lods
cltd
pusha
test
jae
rcl
mov
ljmp
inc
fst
jns
push
adc
div
aas
mov
in
notb
in
sbb
out
xlat
shrb
jge
cmp
sbb
and
shll
in
xchg
shll
lods
push
ret
or
imul
arpl
push
push
daa
dec
xchg
xor
pop
in
int3
push
mov
out
fucom
mov
mov
pop
inc
icebp
push
mov
add
ret
xor
fisttpl
push
fidivl
dec
xchg
pop
jg
lret
ss
add
ds
repz
mov
xchg
insl
fdivs
or
cmp
aaa
xchg
clc
jae
lahf
pop
cmp
push
aam
lret
push
add
cmp
cli
and
inc
and
pop
mov
in
dec
rcr
and
sbb
or
push
lret
push
fstl
adc
enter
add
ret
sbb
adc
push
mov
inc
adc
pushf
pusha
in
into
ret
std
out
xchg
in
or
out
int3
or
sahf
outsb
dec
dec
cmp
pusha
and
test
add
dec
sbb
jp
fistl
scas
pop
push
stos
xor
stos
insb
push
test
mov
repnz
and
cmpb
out
sbb
loopne
cwtl
and
mov
xchg
sti
adc
xor
movsb
adc
add
sbb
xchg
adc
and
outsl
jecxz
sbbb
jb
loopne
pop
addl
and
push
pushf
xchg
mov
lock
inc
xor
xor
dec
sub
in
loop
mov
arpl
in
shlb
inc
mov
mov
loope
lds
jmp
in
sbb
adc
xchg
adc
sbb
or
in
mov
addr16
mov
cmc
dec
aas
adc
mov
outsb
pushf
rolb
sub
divb
mov
pop
lods
inc
push
fmull
inc
je
add
daa
mov
enter
push
test
push
je
or
xor
inc
loopne
movsl
ljmp
pop
loope
cmp
stos
fdivp
in
mov
sahf
pop
sub
inc
mov
scas
lea
lods
sbb
daa
jle
or
add
lds
testb
xor
mov
gs
sub
or
xchg
mov
add
int3
out
add
jge
pop
xchg
jnp
push
xchg
mul
int
and
outsl
mov
call
inc
xchg
test
jecxz
dec
int
cmc
adc
add
aas
pop
and
mov
jae
adc
sub
mov
mov
mov
sti
addr16
loope
aas
jecxz
xchg
dec
incb
outsl
mov
scas
adc
ljmp
cs
jle
dec
inc
lods
dec
repnz
int
push
xchg
dec
in
je
or
push
aaa
pop
lret
inc
xchg
xchg
mov
and
jae
ret
pop
push
jge
popf
daa
push
mov
int3
call
xchg
push
fwait
loop
adc
xchg
mov
mov
jb
aas
add
pusha
inc
push
stc
xor
hlt
call
jb
mov
dec
push
hlt
test
xchg
lcall
adc
pushl
movsb
in
dec
js
sub
popf
testb
pop
inc
dec
mov
fisubs
idivl
fisttpll
xor
jb
sbb
add
lret
inc
aam
stos
lret
mov
sub
add
mov
mov
lods
push
insb
lret
or
xchg
mov
cmc
in
icebp
mov
dec
mov
jle
mov
dec
push
sbb
push
jp
movsb
xchg
add
outsb
sub
mov
clc
lods
lds
test
int
test
mov
scas
popa
sbb
or
lods
negl
outsl
es
mov
sub
mov
iret
or
pop
int3
or
nop
les
sub
jb
bswap
addr16
mov
xchg
addl
ret
adc
stc
shll
popf
lahf
dec
enter
mov
inc
pop
mov
in
mull
aam
adc
lret
nop
clc
sti
cld
xlat
push
mov
stc
xchg
iret
cld
inc
mov
jp
pop
test
push
jmp
and
jge
add
outsl
cs
xchg
pushw
sbb
loop
data16
mov
pop
or
stos
dec
and
jg
cltd
out
rcll
das
sbb
sub
and
aas
icebp
lea
add
ja
or
out
daa
sub
sub
sub
leave
mov
mov
mov
insb
sbb
addr16
sbb
jae
loopne
xchg
je
cmpsb
stc
dec
mov
ds
and
pushf
xchg
adc
pop
dec
sti
imul
pop
and
sub
lcall
mov
shrb
dec
in
test
or
add
sbb
sub
xlat
rclb
mov
mov
and
cld
lret
popa
arpl
inc
mov
and
xor
push
scas
inc
stos
enterw
sub
pop
fbld
fs
cltd
xor
js
push
jae
insl
jle
sub
aas
inc
outsb
lds
adc
mov
push
out
orb
test
xor
hlt
filds
mov
mov
cltd
add
insl
lahf
outsb
adc
clc
mov
push
push
cmp
popa
je
jne
lcall
or
push
aaa
js
call
int
stos
add
inc
mov
add
adc
mov
dec
add
push
data16
mov
lock
xchg
ret
stos
out
sbb
ss
mov
push
lahf
mov
enter
mov
or
cmp
leave
shl
lret
incl
pop
cmp
sbb
dec
lods
xchg
movsb
inc
rcrb
ljmp
dec
push
loopne
pop
push
cmp
or
adc
mov
outsb
xor
dec
mov
in
dec
inc
inc
dec
sarl
es
sub
dec
pop
js
int
nop
mov
xor
rol
jp
jmp
test
ss
aad
fldenv
insb
xor
or
add
mov
or
xor
xchg
cmp
and
ljmp
fnstcw
jne
out
outsb
outsl
cmovb
or
fs
sub
xchg
loop
clc
ret
or
fs
pop
mov
and
sub
inc
fcomps
cmp
cltd
call
insb
xchg
mov
pop
hlt
lea
ja
in
fmull
pop
sahf
cmpl
out
icebp
push
mov
rol
add
aas
or
stos
jo
icebp
icebp
jne
lcall
cmp
adc
pop
stc
insb
mov
imul
mov
sub
inc
cmp
mov
and
js
into
or
call
push
test
dec
mov
test
outsb
cmp
sbb
jbe
push
mov
dec
mov
outsb
imul
cmp
xor
bound
xchg
mov
lahf
jae
add
sub
or
mov
es
insl
in
push
pop
pop
rolb
lods
ss
push
test
adc
cmp
fcmovnb
clc
jmp
add
ja
popf
add
sbb
je
fcomps
es
retw
xchg
xor
mov
out
leave
mov
sub
pop
inc
aad
aas
push
repz
addr16
xchg
lahf
pop
jle
hlt
sahf
testl
gs
jae
and
in
jge
rclb
subb
inc
cmp
xchg
es
inc
sub
rorb
sub
adc
cli
or
mov
in
sbb
ret
push
ja
js
fldz
jnp
in
pop
jae
pop
fucom
mov
icebp
and
test
and
nop
pop
push
xchg
and
fs
xchg
outsl
jecxz
nop
out
sbb
xor
jb
or
ljmp
jg
ret
out
sbb
addr16
dec
andl
pusha
push
movsb
cli
cmp
sub
xchg
xorb
mov
push
xlat
iret
mov
stc
dec
insb
cmp
inc
xor
or
xor
jge
dec
arpl
in
xor
and
jnp
into
sub
mov
dec
jmp
hlt
or
je
xlat
xor
xchg
ja
sbb
xor
gs
adcl
pop
lret
push
mov
enter
jmp
pop
call
jmp
mov
mov
add
sbb
fcmovne
cmp
mov
cmpb
les
fs
test
scas
and
std
mov
jns
mov
mov
sub
push
fisubrl
adc
pop
inc
loopne
add
push
in
js
hlt
fneni(8087
inc
mov
pop
xor
mov
mov
mov
hlt
shl
fsubp
mov
lds
out
sbb
popw
mov
push
cmp
sbb
scas
movsl
mov
pop
shll
lret
rcrl
mov
and
in
mull
out
push
xchg
into
push
jp
adc
add
lea
jbe
and
ja
out
scas
add
pop
ret
or
ds
sti
repz
mov
subl
in
outsl
repnz
in
xchg
mov
test
in
andb
lock
aaa
aas
or
add
fists
pop
xchg
les
pop
xor
adc
mov
jnp
std
hlt
fsubrl
mov
aam
add
sub
lock
jnp
inc
push
subl
push
jne
adc
gs
iret
adcb
pop
std
addr16
add
inc
sub
loopne
std
cs
jnp
or
cmp
pop
icebp
mov
scas
pushf
push
cmpb
pop
stos
sbb
fmuls
cs
pop
xor
scas
push
jl
sbb
cmpl
outsl
pop
fs
cmp
adc
pop
rolb
mov
mov
jmp
dec
push
jecxz
pusha
scas
push
mov
ljmp
inc
or
push
loop
jns
cli
adc
ss
imul
or
sti
mov
inc
call
pop
sahf
mov
in
add
adc
js
inc
stos
mov
call
fdivl
outsb
ss
xchg
outsb
mov
sub
test
and
xor
iret
insl
pop
and
cmpsb
cmp
es
sbb
jns
cli
pop
sbb
lcall
out
fs
xchg
test
push
iret
sbb
stos
mov
bound
mov
ljmp
inc
pusha
lds
xchg
movsb
test
xchg
cmpsl
add
js
jp
xchg
lods
insb
cmp
mov
stc
mov
mov
mov
dec
imul
loopne
frstor
jl
aad
bound
pusha
std
das
and
and
jbe
arpl
movsb
jns
insb
jnp
orb
and
idivl
push
xor
jno
and
iret
mov
inc
repnz
and
dec
arpl
pop
push
dec
xor
mov
movsl
pop
mov
in
sbb
pop
jb
xorl
push
mov
shrb
mulb
fidivrs
notl
pop
xchg
in
and
inc
mov
inc
pop
jl
add
repz
mov
fistpl
out
mov
fisubrl
sbb
cwtd
sub
add
add
loopne
rclb
jbe
shlb
mov
shll
sbb
dec
cmp
lret
inc
pop
add
cltd
mov
loope
shrb
mov
xor
out
stos
push
enter
xor
data16
ljmp
push
rolb
rorb
outsl
mov
pop
or
adc
xor
mov
filds
xor
xchg
vdivss
fisubrl
inc
push
in
mov
xchg
jecxz
mov
xlat
mov
xchg
out
sub
and
sbb
sub
or
pop
push
add
aas
dec
popa
cmp
jnp
lret
jmp
mov
sub
jo
jmp
ret
inc
cmpb
mov
cmp
xchg
jg
inc
scas
into
push
adc
dec
bound
mov
and
xchg
jl
decl
mov
jns
push
push
xchg
dec
and
outsb
mulb
mov
clc
fisttpll
xor
mov
stc
dec
rcrb
iret
mov
into
outsb
mov
test
cmp
repnz
or
scas
aam
cmp
cs
xchg
je
lds
jbe
xchg
int
push
test
and
mov
incl
mov
pop
or
inc
cs
sarb
sahf
pop
lds
in
jecxz
nop
mov
sbb
pushf
xchg
loope
data16
fstps
mov
aas
mov
js
inc
pop
lret
cmp
jmp
fwait
ds
push
pop
fisttpl
add
pop
inc
mov
jle
hlt
and
lret
pop
leave
jnp
jns
in
std
inc
pop
das
mov
fsub
or
mov
iret
xor
sarb
dec
aam
push
mov
outsl
push
mov
outsl
cmc
cmpsb
into
fs
out
sbb
pop
lock
xor
or
ja
rorl
movsl
jecxz
xchg
push
sbb
loope
inc
pop
shll
rcll
arpl
lret
je
icebp
mov
and
jne
inc
cmp
cmp
inc
jmp
ret
pop
lds
inc
test
rcrl
std
dec
inc
subl
inc
in
dec
push
gs
mov
and
iret
adc
insb
fdivr
sbb
xlat
and
in
xchg
in
out
std
sbb
mov
mov
adc
mov
and
add
xchg
sbb
xchg
cmpsb
ret
jl
xchg
fisttps
ds
mov
insl
jns
mov
mov
mov
test
and
mov
pushl
pop
lcall
and
jle
sub
push
adc
xchg
in
pop
jns
sbb
pop
lret
loopw
sbb
xor
jp,pt
inc
daa
push
stos
add
icebp
add
aaa
out
popa
aaa
xor
cltd
xor
push
inc
mov
leave
daa
sub
inc
xchg
dec
mov
pop
mov
push
imul
pop
pop
inc
pop
test
adc
mov
stos
bswap
jecxz
inc
mov
in
repnz
and
dec
dec
inc
or
fidivrs
repz
cwtl
loopne
subl
repz
push
call
push
leave
and
mov
movsb
pop
dec
inc
adc
fidivrs
mov
dec
pop
rcl
leave
mov
out
popf
jae
scas
xlat
arpl
mov
cmp
pop
sbb
xor
fstpt
hlt
nop
addb
lods
imul
and
pop
pop
jno
mov
sahf
pop
push
ret
mov
mov
push
lods
int
pop
imul
add
lea
sub
jae
movzbl
lock
daa
jge
sub
testb
mov
jbe
outsb
std
mov
xchg
push
fimuls
mov
xchg
call
jmp
sub
shr
faddl
int
push
mov
ljmp
cmpsl
faddp
mov
mov
iret
cmovae
lea
xor
xchg
mov
mov
cs
in
cmc
into
outsb
mov
jecxz
mov
add
jne
outsb
sti
pushf
dec
inc
cwtl
dec
adc
mov
scas
loopne
inc
adc
xor
push
fsubrl
sub
add
lret
push
repz
pop
dec
dec
cli
lock
jno
add
outsl
adc
cmp
dec
iret
dec
inc
leave
bnd
dec
mov
mov
mov
adc
mov
push
sti
cmc
xchg
mov
test
ret
adc
jne
and
and
out
xchg
pop
and
xchg
dec
mov
jg
dec
gs
sub
out
push
dec
jo
mov
and
jmp
push
cmpsb
mov
cmpsl
inc
gs
std
loopne
and
sub
or
mov
ja
in
pop
jecxz
imul
outsl
dec
pop
push
xor
inc
sub
xchg
add
ljmp
inc
xchg
int3
pop
imul
fisubl
push
sbb
lods
ror
add
xor
mov
mov
outsb
popf
jmp
loop
mov
sub
out
mov
and
aaa
cli
test
lcall
popf
sahf
mov
mov
lret
out
lock
push
daa
adc
or
dec
and
insl
scas
sub
adc
iret
jae
int
mov
mov
aad
mov
push
aam
nop
sub
int3
add
aas
loope
pusha
lock
mov
movsb
jg
fstp
cmp
popa
arpl
pop
xor
loopne
les
stos
lret
cli
add
inc
xorl
shrl
mov
ret
inc
mov
lds
add
in
sub
mov
push
or
lret
xchg
addr16
sbb
inc
popa
clc
out
std
test
add
adc
push
lret
xchg
movb
or
lea
inc
sbb
lahf
mov
mov
xorl
dec
pop
mov
stos
outsb
mov
mov
fldpi
popf
push
lcall
xor
xchg
sti
mov
lret
arpl
iret
repz
daa
pop
inc
cltd
sarl
mov
xlat
dec
loope
imulb
flds
ds
jb
inc
andb
sbb
pop
out
mov
test
lock
jmp
or
mov
lret
test
inc
add
sahf
nop
jmp
dec
test
aaa
dec
lods
imul
decb
mov
std
clc
or
testl
dec
inc
mov
mov
lea
pop
inc
xchg
mov
inc
or
movsb
es
dec
xchg
mov
push
jge
inc
mov
fbld
xor
add
dec
hlt
or
mov
inc
imul
or
test
pushf
mov
push
sti
mov
movsl
mov
adc
add
dec
nop
sub
lods
xor
cld
jae
stc
xor
cwtl
xorb
shrb
mov
out
mov
add
pop
and
call
mov
ficompl
int
std
popa
jecxz
cmpsb
scas
ret
stos
enter
lods
test
std
aaa
pop
mov
xor
push
adc
sub
int
adc
and
dec
xchg
mov
pop
pop
fcoms
cltd
adc
test
out
clc
or
out
xor
adc
push
testb
outsb
pop
adc
dec
punpckhwd
lahf
sbb
sbb
imul
aam
mov
in
aaa
movsl
aaa
cld
sbb
sbb
pop
inc
pop
out
pop
jge
imul
int
or
adc
pop
xchg
jne
and
xor
cmc
or
or
xchg
pop
inc
nop
iret
push
popf
call
push
or
add
dec
bound
and
jmp
xor
jno
loope
dec
add
mov
fldpi
and
sbb
divl
mov
jo
in
sbbb
push
les
inc
insb
inc
lcall
or
xor
or
add
push
jno
pmaxsw
out
push
mov
fwait
nop
lods
outsb
and
mov
roll
repz
jge
hlt
int3
cli
inc
push
pop
push
inc
roll
xor
mov
mov
inc
dec
jp
xchg
push
xchg
dec
dec
cld
push
cwtl
nop
lcall
les
pushf
inc
mov
in
jle
or
call
mov
push
adc
test
add
or
jecxz
push
fisubrs
jb
adc
add
adc
pop
pop
mov
jp
mov
adcb
scas
mov
cmpsl
insb
bound
pop
adc
adc
leave
or
dec
lods
pop
add
mov
aaa
jbe
jmp
and
mov
jo
add
or
pusha
stos
aaa
sbb
add
xor
fiaddl
jns
xchg
popa
dec
mov
pop
fstpl
sub
mov
ja
in
cwtl
sbb
mov
repnz
xchg
inc
rclb
inc
scas
leave
jecxz
push
cmp
gs
bound
fsubl
mov
xlat
cmp
push
out
pushf
rol
fdivl
cs
sbbb
pop
ret
push
add
repnz
xor
inc
test
in
mov
das
test
cmpsl
sbb
jns
movsb
lret
test
movsl
or
and
sub
jge
and
es
sbb
sub
or
movsl
int3
cltd
add
ficomps
pop
push
jne
scas
lcall
dec
mov
xchg
mov
xchg
or
lret
mov
jne
adc
cmp
adcl
out
lock
insl
cltd
mov
dec
insb
adc
mov
je
out
inc
and
aam
cmpsl
aad
scas
repz
das
movsb
int
add
cmc
cmp
shrl
lock
ret
sub
and
push
jns
idiv
rcr
mov
mov
lret
dec
mov
cld
test
int
or
lret
lods
popa
sbb
add
out
mov
push
fwait
out
stc
inc
xor
add
arpl
in
sub
sub
sarl
jne
in
jns
mov
shll
aaa
cmp
ret
pop
mov
dec
sub
jl
mov
mov
pop
rclb
mov
outsb
repnz
xchg
xor
pop
sbb
xchg
pop
push
mov
xchg
mov
dec
cmp
daa
imul
jns
imul
dec
push
lods
mov
dec
lret
sbb
pusha
testb
jg
pushf
out
lahf
inc
mov
ret
xor
and
sahf
jmp
scas
icebp
fldt
inc
icebp
inc
iret
xchg
xchg
mov
lret
out
aaa
int3
cld
jnp
xor
call
bound
cmp
pop
mulb
jo
pop
xchg
ljmp
das
dec
sbb
es
test
lds
shll
adc
pop
sbb
jg
inc
sbb
cld
dec
xchg
xchg
cmp
cwtl
mov
cmp
dec
push
in
mov
push
and
pop
shl
mov
cltd
das
ss
adc
andl
scas
stos
mull
xor
fadd
and
jle
mov
loop
cmp
mov
sub
mov
or
cld
fbstp
in
cmp
pop
push
imul
iret
insl
adc
adc
out
sub
or
addr16
sub
jnp
jae
mov
jmp
mov
and
lcall
in
mov
and
jne
push
scas
or
enter
mov
in
shrl
fistps
mov
dec
dec
dec
enter
ds
fs
xor
lods
in
fldt
js
cmp
arpl
in
in
js
lcall
and
js
fldt
shlb
cmp
sub
xchg
lcall
sbb
push
rcrb
push
jbe
roll
jo
sbb
scas
jnp
je
shrb
push
mov
jl
divb
sub
push
jnp
and
add
fistl
inc
jbe
sub
je
cld
pop
gs
jnp
daa
add
xchg
sbb
imul
xchg
js
outsl
cmc
push
or
inc
aas
into
shlb
inc
adcl
andb
hlt
pushf
push
dec
fst
lock
cmp
mov
mov
js
lret
mov
mov
sbb
daa
and
ljmp
loop,pt
int
xor
or
jne
cmp
jnp
ljmp
push
add
movsl
cwtl
xor
sub
push
lods
int3
pop
pop
fildll
mov
mov
imul
mov
push
sub
mov
cmp
pop
pop
pop
test
mov
cld
xor
dec
subl
lods
data16
movsl
fldcw
andb
jle
ja
repnz
or
and
mov
call
stc
cmp
in
repnz
stc
adc
movsl
popaw
ficomps
imul
ljmp
adc
inc
adcl
mov
mov
sbb
push
inc
inc
mov
popf
lock
scas
pop
jb
jb
sbb
push
add
push
mov
test
push
xor
cwtl
jbe
int
mov
movsb
push
test
data16
ja
xchg
cmp
jmp
push
inc
into
xor
ds
stos
push
int3
jg
mov
push
mov
pop
mov
push
push
mov
mov
cmp
mov
cltd
std
jbe
jge
or
jle
jg
mov
push
mov
sbb
adc
lret
icebp
cwtl
mov
pop
popf
add
xor
fidivrl
inc
mov
mov
imul
mov
fwait
js
lcall
test
xor
cld
stos
out
nop
pop
mov
mov
dec
jns
inc
ret
call
gs
pop
loopne
cmpb
addr16
ffree
ja
sub
jge
ss
mov
inc
ret
pop
mov
mov
add
adc
push
and
push
scas
aam
push
es
cli
fs
cwtl
add
loope
aas
scas
and
icebp
stc
push
mov
add
movsb
xor
fimull
inc
jmp
repz
mov
sbb
clc
call
and
fsts
or
in
cmpsl
push
ss
out
push
popa
int3
movsb
inc
jle
mov
bound
inc
push
mov
insl
enter
jbe
scas
sub
subb
shl
lock
push
popa
out
lcall
xchg
repz
jmp
mov
inc
mov
mov
cmp
jb
mov
lock
push
add
dec
std
scas
dec
sub
push
scas
pop
fstl
addr16
out
pop
lahf
jmp
fbstp
leave
in
pop
stc
repnz
add
dec
mov
sub
add
sbb
loop,pt
jae
sub
or
subl
popl
jnp
imul
pop
pop
mov
test
fisubl
adc
mov
out
mov
sbb
sti
xor
ja
cltd
test
or
adc
cmp
mov
pop
xchg
jl
setnp
inc
sbb
bound
testb
pop
movsl
mov
js
inc
add
sti
push
inc
jmp
xlat
cltd
dec
ja
andl
and
and
cmpsl
cmpsb
rcll
test
pop
xchg
shll
scas
mov
stos
dec
outsb
out
adc
pop
mov
sbb
mov
into
popa
test
pop
or
add
out
cmc
and
loope
cmpsl
enter
cwtl
mov
dec
push
add
in
test
rorb
repz
hlt
push
les
popa
push
mov
pop
rclb
out
js
xor
loopne
stos
rolb
lods
call
mov
pusha
fwait
mov
xorb
pmaxub
ret
jo
add
andb
xchg
inc
pusha
int3
jl,pt
cmc
adc
xor
sbb
sti
scas
inc
fwait
sbb
adc
inc
je
enter
insl
stos
rcrl
bound
test
or
push
fcmovu
mov
filds
loopne
push
testl
jge
jge
push
fmuls
or
dec
ss
mov
dec
in
push
and
out
shlb
lahf
or
call
xor
xor
sahf
inc
mov
jle
sbb
out
xor
fbstp
ljmp
jbe
icebp
mov
lock
push
out
and
sbb
cwtl
add
dec
xor
mov
fwait
iret
xchg
lock
sub
mov
stos
bound
mov
jge
aas
cmp
cmp
arpl
adc
mov
movsl
adc
bound
sub
or
and
jle
mov
ficompl
adc
sub
jae
or
gs
xor
pop
pusha
mov
pop
inc
jg
xchg
xchg
pop
insb
mov
cs
sub
imul
sub
outsb
push
cwtl
xchg
loop
mov
scas
xchg
dec
dec
test
jb
dec
movsl
sub
rorb
push
mov
loope
imul
inc
in
dec
xchg
xchg
shl
popa
fstpl
add
repz
popa
cmp
scas
push
out
sahf
mov
ja
shrb
bnd
adc
inc
adcb
fmull
rcll
jp
int
xchg
inc
mov
sbb
cli
push
scas
sub
out
xchg
fcmovne
repz
sbb
lahf
mov
orl
push
scas
pop
or
dec
jecxz
repz
notl
scas
mov
adc
push
insl
loop
xor
test
mov
cwtl
enter
ret
cmpsb
lods
xor
jge
or
mov
in
xchg
imul
add
xor
stos
sub
lahf
inc
fwait
stos
scas
decb
xorb
testl
sbb
cltd
fisubrl
ljmp
mov
pusha
test
les
pusha
xchg
xor
movsb
or
xchg
lret
loopne
popf
test
xor
int3
pop
jge
mov
cld
jecxz
aad
sti
mov
cmc
add
icebp
in
mov
mov
inc
dec
or
adc
fistps
sahf
jge
xor
dec
push
mov
cmc
push
cmc
iret
mov
push
sbb
add
fdivl
stos
sub
dec
xchg
data16
es
sbb
dec
loopne
pop
xchg
inc
arpl
jno
repnz
imul
popf
xchg
fidivrs
push
dec
je
pop
sbb
aam
repnz
out
inc
decl
push
add
cmp
dec
mov
insl
jecxz
add
lahf
pop
int3
std
jge
fwait
jno
test
rol
test
inc
out
sbb
xlat
or
mov
or
scas
movl
lahf
push
mov
cli
clc
sbb
into
mov
sub
pop
imul
cmc
lret
popa
adc
lds
fdivl
fisttps
shlb
in
sub
mull
xchg
cmpsl
xchg
or
clc
xchg
imul
push
adc
dec
xchg
or
mov
inc
movsb
mov
mov
pop
push
imul
sarl
imul
and
xor
and
lods
inc
push
cmpsl
test
fadd
push
daa
cmp
scas
mov
out
rcr
xor
sbb
mov
sub
call
shll
pop
mov
pusha
sahf
mov
lea
icebp
in
mov
xchg
stos
xchg
cmpsl
repnz
movsl
mov
cwtl
clc
je
push
sbb
or
int
int3
xor
orl
push
cmp
xor
std
jns
pop
les
jle
cmp
inc
cltd
int
pop
mov
jg
rcrl
cld
jns
shr
add
sbb
lods
lret
cmp
push
ljmp
and
ss
aaa
test
test
adc
les
push
insl
nop
or
mov
dec
jb
leave
add
mov
inc
mov
and
imul
xor
xor
fbld
mov
test
push
mov
pusha
pop
push
ds
cmp
shrl
or
push
sti
subl
add
pop
mov
push
lods
push
repnz
inc
je
test
std
std
xlat
mov
and
addr16
mov
pop
pusha
mov
jb
daa
in
jle
pop
dec
inc
mov
xor
lods
outsb
in
test
addr16
test
xchg
fcmovne
dec
inc
adc
sarl
loop
xor
mov
in
or
push
test
stc
in
cli
fadds
jecxz
inc
push
ljmp
jo
in
jo
and
call
enter
mov
scas
push
add
inc
push
add
repz
dec
sbbl
push
les
test
out
mov
aad
fisubs
jbe
xchg
jmp
in
pusha
imul
xchg
and
dec
std
push
mov
hlt
fimuls
lods
lds
leave
mov
rclb
cmp
jp
inc
je
mov
gs
xchg
adcl
movsl
leave
inc
or
add
fisttpl
loop
sub
and
das
popf
rorl
shl
scas
xlat
mov
ret
sub
and
cmp
cs
scas
dec
jae
lods
fsubrp
cmp
and
sub
inc
mov
mov
bound
jl
imul
mov
push
ret
mov
ljmp
sarl
lods
lcall
test
or
lods
xlat
mov
lahf
push
lea
int
insl
test
jae
sti
cmp
mov
mov
fmull
xchg
popf
dec
add
cwtl
cmpsl
xchg
mov
fdivl
push
sub
mov
std
mov
sub
clc
ja
mov
jg
es
mov
lret
out
sbb
cwtl
xchg
andl
out
lea
das
in
leave
jmp
outsb
push
dec
sbb
xchg
mov
add
jo,pn
dec
xchg
repz
addr16
add
push
popf
mov
push
xlat
incl
fsubl
push
dec
ret
mov
and
repz
test
lret
outsb
shll
sub
fmulp
je
jmp
ds
ds
popa
push
movsb
xorl
sub
jnp
push
jmp
adc
cmp
test
cwtl
stc
lock
int
daa
inc
mov
lea
test
mov
frstor
insl
adc
or
and
jb
in
push
test
mov
cmp
insb
ret
cmp
jg
pop
rcrb
or
sbb
stc
mov
mov
iret
cli
test
pop
xchg
in
push
fisttpll
cmp
hlt
inc
mov
psubq
adc
jb
movsb
cltd
mov
xchg
lcall
push
mov
push
or
mov
cmp
std
ljmp
cmpsb
and
xor
popa
aas
lcall
out
jae
or
dec
inc
orl
mov
mov
mov
push
shr
std
sub
or
scas
jg
mov
adc
cmp
push
xor
inc
das
icebp
sbb
ljmp
aad
or
push
push
cmp
cmp
cmc
filds
pop
cmpsb
cwtl
mov
shrl
in
fmul
dec
lea
shll
jle
mov
cmc
mov
es
cmpsb
adc
mov
sti
outsl
mov
setg
notl
and
or
dec
adc
sub
imul
cwtl
imul
sbb
js
add
pusha
jo
add
in
mov
je
sbb
jb
shrb
sub
hlt
pop
jp
mov
loop
fdivs
loop
jg
mov
stos
fsub
jnp
push
xor
aam
filds
push
addl
es
add
dec
cmp
inc
bound
adc
cmp
fidivs
push
imul
lds
scas
lret
sbb
flds
popf
ja
jle
stos
enter
ds
loopne
cmp
push
inc
mov
push
pushf
gs
mov
mov
loop
push
push
push
pop
fwait
out
sub
call
call
mov
adc
addb
fs
sbb
sahf
push
cmp
aad
cmp
add
cmp
jle
pop
mul
push
out
jo
scas
sti
adc
pop
adc
dec
testl
call
fsts
mov
es
pop
mov
stos
loope
xchg
out
or
rcrb
and
hlt
loop
movsb
cmp
and
cld
mov
pop
push
dec
and
push
pushf
mov
aam
cmp
jge
lahf
jne
adc
das
lock
int
inc
sub
ret
lock
into
push
sub
and
outsb
aad
jle
cmp
rclb
add
mov
or
popf
mov
dec
xchg
scas
and
int3
call
das
mov
std
sbb
shll
imul
adc
ds
inc
jno
sbb
fstp
insl
std
sbb
and
inc
jp
dec
dec
lret
lcall
sbb
mov
cmp
xchg
inc
mov
bound
cmc
and
hlt
inc
xor
ret
imul
pop
pop
sub
adc
push
lcall
lock
ss
cwtl
dec
xor
dec
popa
push
add
and
cmpsb
enter
pushf
daa
popf
push
xorl
adc
shr
xchg
add
adc
cmp
lods
mov
popf
aad
inc
test
icebp
mov
orb
jne
scas
mov
out
inc
or
push
repnz
xorb
fnstcw
insb
or
repnz
mov
cmc
fs
movsl
or
and
cmp
push
daa
popf
gs
loopne
mov
mov
and
sahf
in
hlt
rolb
xor
adc
dec
mov
bound
sti
jne
loopne
outsb
push
xchg
push
in
fcmovnb
fst
jp
lods
addr16
push
enter
les
dec
mov
xor
outsb
adc
clc
aas
lahf
notb
popf
int3
push
fcompl
rcl
mov
shrl
je
inc
out
xchg
lock
sbbl
fisttpl
push
in
sbb
cli
jne
jmp
sti
push
add
xorl
or
test
test
cwtl
fdivrs
or
out
and
pop
pushl
sub
aas
xchg
dec
scas
lahf
mov
jmp
lods
les
lret
push
cmpsl
dec
cmp
repnz
cmp
push
ja
jl
cltd
pop
mov
sti
sub
sbbb
push
add
in
and
movsb
fnstsw
mov
mov
sub
arpl
sub
xlat
out
adc
ret
ficomps
add
bound
push
fisubs
ret
sub
pop
add
pusha
shll
cmpsb
call
sub
outsb
jmp
inc
popa
mov
popa
xchg
pushf
and
pop
rcrl
and
cmp
out
inc
pop
mov
pop
xchg
xchg
das
insl
js
add
mov
or
inc
bound
fs
lods
and
test
xchg
xchg
or
pop
repz
jg
repz
cmp
xlat
mov
push
add
insb
push
repnz
aad
sub
insb
sub
sub
aas
sub
adcl
mov
scas
in
call
add
sti
repnz
push
ret
data16
adc
inc
leave
sbb
push
jns
and
leave
jnp
mov
or
aam
mov
and
dec
sub
inc
and
cmp
mov
adcl
repz
jecxz
repnz
sbb
movsl
nop
addb
jecxz
lock
add
fcoml
stos
xchg
xor
into
push
mov
das
add
movsb
mov
cld
in
push
mov
js
mov
push
imul
mov
inc
rcll
pop
push
lds
outsb
rcl
adc
cs
fsubrs
pop
addr16
rolb
stc
xchg
les
mov
popa
mov
jp
add
sub
sbb
inc
shlb
insb
jns
jno
std
jg
ficoml
sub
adc
test
jmp
mov
loope
int3
mov
fcomps
pop
out
and
das
inc
mov
jno
push
in
ljmp
imul
enter
jmp
stc
cmp
cmp
push
mov
shlb
into
pop
adc
leave
mov
movsb
mov
jmp
cmc
xchg
sti
xorl
adc
negl
dec
int
mov
jnp
iret
xor
pop
xchg
push
xor
pop
fiadds
outsb
faddp
dec
es
or
imul
rolb
fidivrl
fcoms
add
xlat
lea
jns
or
data16
sbb
loope
call
fcoms
mov
hlt
mov
imul
iret
sbb
enter
leave
or
jl
hlt
loop
mov
xchg
dec
xchg
and
xchg
xchg
loop
js
mov
xchg
inc
push
sub
and
jnp
shl
mov
mov
into
popa
ret
sbb
add
mov
lahf
mov
out
mov
aas
insl
data16
ss
jmp
xchg
sub
adc
jmp
fs
fldcw
jl
mov
inc
adc
add
or
movsb
inc
cld
je
icebp
pop
ljmp
and
mov
jp
gs
lods
xchg
xchg
mov
add
jmp
pop
je
lea
shlb
push
jo
ret
mov
inc
jp
enter
inc
mov
inc
clc
dec
cli
xor
dec
fs
frstor
jecxz
icebp
mov
xor
mov
add
mov
xchg
loope
mov
mov
ss
push
mov
pop
pop
mov
mov
adc
mov
shl
inc
adcl
pop
das
mov
dec
ljmp
in
push
in
cmp
mov
in
jnp
xor
mov
and
imul
jno
lds
xchg
or
lock
ljmp
xchg
loope
mov
pushf
or
adc
push
push
xor
push
arpl
xlat
add
repz
push
adc
mov
cld
stc
mov
pop
and
aaa
jo
es
push
jnp
sub
jae
pusha
mov
mov
sti
aaa
xchg
rolb
push
lock
xchg
and
xchg
mov
mov
das
orl
stc
mov
loopne
pushf
fisttpll
push
sub
out
jbe
or
xor
out
add
dec
mov
imul
mov
int
and
dec
cmp
xchg
sbb
fmull
lods
inc
jne
sahf
jo
jbe
and
rcrl
in
out
sti
or
jno
sar
sbb
jo
push
movsb
pop
or
add
mov
or
clc
add
inc
iret
roll
ret
xorb
pop
mov
les
mov
jmp
mov
dec
jge
imul
hlt
pop
sub
cmc
or
aam
das
mov
iret
jge
jno
in
mov
mov
scas
sbb
adc
mov
ret
pop
or
ret
jae
enter
into
repnz
cwtl
or
repz
movsl
push
iret
jbe
push
dec
dec
loope
mov
loop
outsb
into
inc
cmp
sbb
jmp
mul
ds
xchg
in
loop
out
xor
pop
dec
ja
and
nop
pop
clts
cli
adc
ljmp
mov
xor
add
mov
inc
mov
leave
pop
mov
ss
pop
jle
sub
test
dec
mov
out
jne
fiadds
sub
xor
lret
cmp
ljmp
lea
sbb
cmpsl
ret
lret
ljmp
cltd
push
sbb
mov
dec
mov
shll
mov
xchg
push
cmp
xchg
jno
adc
popf
pop
sahf
inc
loope
fs
scas
scas
inc
push
jle
shl
scas
out
xchg
and
fs
push
sbb
jg
add
sub
rcrb
add
loopne
iret
pop
repz
cmp
out
clc
sub
sbb
push
data16
fisubs
mov
mov
adc
test
pop
xlat
lcall
push
icebp
outsl
jmpw
aam
xor
fnsave
bound
repz
mov
adc
add
mov
leave
mov
mov
pop
lock
add
arpl
in
adc
mov
push
xchg
roll
jecxz
pop
xchg
pop
dec
mov
or
insl
inc
and
xchg
pusha
sbb
inc
adc
xor
pop
mov
icebp
adc
cli
shrb
sbb
mov
and
mov
lcall
daa
xor
mov
fistl
je
push
push
xchg
and
xlat
lods
mov
cmp
std
movsb
fs
or
lret
pop
stos
cmp
cmp
xor
push
hlt
int3
notb
pop
add
and
and
pop
rclb
lahf
in
cmp
ljmp
inc
adc
xchg
push
dec
out
sbb
popf
inc
mov
inc
push
cli
jb
pop
mov
imulb
xlat
bound
movsl
fwait
test
je
pop
sub
push
stc
and
stc
and
dec
adc
into
jle
ja
jmp
jo
xchg
fcmovu
je
daa
fwait
ja
repnz
movsb
mov
stos
addr16
push
decl
sub
cmp
lds
loope
test
jge
insb
es
or
jge
or
push
sbb
stos
fdivrl
push
dec
lods
sub
and
pop
dec
or
ss
aam
ds
les
loopne
cwtl
xor
jp
inc
mov
xlat
dec
jno
jg
pop
cmp
xchg
sub
sub
ljmp
fstp
dec
cwtl
scas
insb
inc
pop
dec
popa
add
fucom
daa
push
jb
adc
in
xor
arpl
pop
ficoml
mov
adc
mov
int3
loopne
nop
lret
inc
jmp
push
jecxz
and
mov
push
cmp
dec
pop
in
bound
mov
or
jns
pop
jae
xor
push
or
daa
popf
testb
push
push
jns
ja
push
bound
sub
or
push
and
mov
push
jno
adc
loope
sbb
into
mov
into
add
dec
push
sarb
scas
fnsave
int
pop
push
inc
xor
jno
xor
pushf
cli
in
out
mov
cmc
cmpsb
std
mov
pop
inc
stos
pop
mov
pop
sahf
jp,pt
into
cmp
dec
mov
or
inc
outsb
negl
scas
pop
fmul
xchg
cmpb
xor
sbb
test
stc
push
jle
xchg
add
dec
leave
push
mov
loope
and
stos
out
aam
out
cmp
or
dec
aam
mov
xor
aas
or
jnp
mov
call
lods
adc
lea
cmp
inc
scas
xchg
orl
bound
xor
push
outsl
shlb
ret
push
std
pop
mov
addr16
fcom
cli
and
mov
data16
jp
mov
xor
cmpsb
pop
and
ficomps
cltd
aad
sbb
jb
repz
pusha
push
mov
or
cmp
mov
movsb
and
push
mov
cmc
pop
and
inc
loop
mov
or
ljmp
adc
mov
cld
into
pop
test
inc
xchg
sbb
inc
in
push
ljmp
or
das
sbb
sub
xchg
cmpsb
divb
push
aad
push
in
pop
jo
mov
push
loope
outsb
or
lock
lods
add
cltd
mov
sbb
mov
jo
mov
jg
fucomip
leave
or
pop
adc
pop
in
inc
or
add
lods
lods
mov
push
stos
pop
shlb
ds
dec
jecxz
sbb
fimuls
stc
insl
jge
lcall
jge
dec
mov
nop
shll
jmp
mov
js
hlt
repz
xor
xor
push
mov
arpl
xchg
lods
popf
mov
mov
sbb
fs
sbb
test
or
sahf
dec
aaa
dec
push
out
pop
stc
pop
shr
stc
daa
xor
push
stos
test
and
dec
mov
insl
repnz
addl
movsb
and
in
test
mov
lret
mov
mov
adc
pushw
jp
sbb
ret
lock
and
cmp
cmpsl
pop
lcall
inc
sahf
push
xchg
stos
out
outsl
jbe
popf
sarl
leave
jo
jl
inc
ljmp
add
xchg
popa
fld
push
xor
leave
inc
pop
mov
cmp
xor
sbb
test
sbb
or
imul
jl
std
dec
mov
cs
xchg
or
mov
jge
mov
fidivl
dec
imul
cs
or
add
adc
ret
push
mov
icebp
sbb
jne
mov
cmpsl
and
test
frstor
dec
lods
cmp
or
mov
xor
xor
and
sbb
cmp
scas
xchg
jne
sarl
pop
lret
push
or
xchg
cmp
mov
test
aaa
cmp
mov
loope
mov
jnp
icebp
loopne
xchg
inc
adc
mov
ret
rol
imul
lea
ret
in
mov
xor
inc
sbb
lods
adc
inc
rcrl
push
jbe
imul
push
pop
aam
dec
sti
mov
pop
adc
mov
mov
in
ret
xor
sbb
xor
jmp
loope
ror
mov
cmpsl
push
iret
jp
xor
mov
xchg
mov
push
fsubr
dec
aas
mov
insb
jle
mov
mov
int
cld
lcall
xor
xor
push
cli
pop
xor
dec
add
push
xor
cs
dec
mov
popa
in
push
insl
dec
shr
push
cmp
aad
bnd
filds
push
sub
xor
mov
pop
mov
lock
subb
lret
nop
cltd
jo
pop
dec
das
scas
pop
les
xchg
not
nop
jb
subb
cltd
loop
fmul
rolb
cmp
xlat
lea
out
test
push
ss
xchg
decb
pop
cli
inc
mov
sub
into
push
mov
js
mov
jne
cmpsl
adc
pop
enter
mov
lcall
icebp
lcall
sub
shlb
push
test
sbb
dec
adc
mov
adc
in
movsl
sbb
out
cmp
stos
movl
push
sub
lret
cmp
xchg
popf
add
fs
stc
inc
lds
xchg
aam
inc
mov
js
and
fistl
cld
mov
jnp
dec
pop
pop
jmp
cmp
sar
add
sti
pop
push
mov
and
mov
ljmp
lock
aaa
mov
mov
xchg
inc
lret
pop
sub
mov
mov
adc
les
inc
dec
fnstsw
sbb
mov
mov
arpl
call
push
jp
or
rorb
arpl
cmc
xor
jmp
std
cmp
outsl
pop
insl
add
icebp
mov
pushf
andb
mov
or
sbb
cli
mov
and
xorl
test
pop
pop
mov
out
push
xor
std
loope
jnp
push
dec
adc
mov
jmp
inc
rcrl
pop
add
subw
sub
push
bound
push
mov
ja
pop
test
popf
dec
out
insb
jge
mov
jae
ret
out
adc
int3
xchg
scas
inc
xor
add
pop
aam
outsl
test
jl
arpl
mov
inc
fldl
jmp
ja
fldl
test
xlat
mov
cwtl
ror
jg
movsb
enter
lods
jle
xlat
ret
imul
sub
fistps
fstl
scas
mov
hlt
jle
loop
sub
pop
imul
in
push
fmull
jecxz
pop
not
fsubrs
mov
bound
lds
testb
sub
loop
shlb
add
dec
orl
cmc
ret
cld
ret
insb
and
cmp
inc
lods
pop
popa
cli
sti
pop
dec
lret
aas
sahf
imul
rcr
mov
ljmp
push
or
sub
mov
mov
sub
int
les
aad
mov
aas
dec
stos
sub
ljmp
int
in
lret
sahf
and
or
jle
shll
xchg
sub
ja
mov
xchg
xchg
arpl
push
mov
mov
arpl
lret
sub
dec
jno
dec
loope
in
pop
mov
and
inc
sbb
xchg
repnz
cmc
outsb
xchg
and
aaa
popa
jle
fisubl
adc
dec
lods
xor
icebp
outsb
pop
jns
sbbl
push
mov
cltd
push
mov
cli
data16
or
js
mov
stos
xchg
fwait
iret
lock
std
addr16
sbb
pop
add
pop
int
sub
mov
dec
inc
adc
scas
dec
xor
inc
dec
inc
dec
ret
stos
push
adc
out
mov
test
es
mov
sbb
rorl
sub
lock
adc
xchg
pop
shr
push
pop
int3
add
cld
shll
out
inc
loopne
scas
add
sti
mov
loope
inc
out
data16
mov
shll
mov
push
jns
mov
fcoms
sbb
push
or
xchg
call
inc
aaa
xor
bound
inc
mov
cmp
cmovo
cs
mov
stos
in
cmpsl
loope
imulb
loop
call
push
mov
and
test
add
pop
fnsave
addr16
mov
inc
fiaddl
pop
xchg
xlat
and
in
mov
xchg
sti
push
sbb
cmpsl
mov
iret
xlat
inc
stc
sahf
cwtl
mov
rorl
or
push
mov
icebp
push
js
ret
cmp
lds
notb
mov
cmpsb
xor
mov
loop
xchg
not
loopne
insl
cli
sti
sub
mov
mov
xorl
pop
mov
xchg
dec
pusha
mov
or
std
pop
xlat
xorl
adc
xor
pushf
outsl
and
mov
aad
push
jmp
inc
ret
cmc
sub
sbb
pop
dec
andl
xchg
push
sbb
int3
stos
les
sbb
pop
imul
pop
and
mov
pusha
dec
fwait
push
int3
rcr
pop
sub
rolb
pop
mov
imul
rcrb
scas
in
out
sahf
mov
dec
mov
test
sahf
mov
and
jg
sahf
mov
out
fisttps
decb
xor
jecxz
repz
cld
and
sbb
shll
es
mov
lret
and
repz
loopne
push
mov
outsl
movsl
fnsave
fwait
push
mov
adc
movsb
add
inc
cmp
push
lock
push
xor
mov
cmp
or
mov
fbstp
mov
in
cld
inc
cwtl
stc
inc
cmpsl
sbb
jle
cwtl
mov
adc
mov
inc
jo
addr16
arpl
xor
in
mov
gs
cmp
test
cmpsb
and
es
test
scas
xlat
hlt
loop
push
pop
cmc
pusha
add
insb
or
xlat
sbb
andb
pop
mov
add
in
out
cmc
xorb
in
xchg
xchg
shrb
xchg
xchg
push
inc
dec
pop
xchg
fadd
dec
dec
lds
rol
xchg
pop
sbb
loop
outsb
jo
out
cmp
or
les
cwtl
fdivrp
push
ret
adc
daa
jae
pop
call
mov
cmp
inc
jnp
jo
mov
inc
sbb
cmpb
mov
repz
pop
and
pop
icebp
xor
lret
imul
jae
fdivr
shlb
fidivrs
outsl
xor
or
faddl
add
jmp
mov
std
enter
jns
inc
mov
push
mov
loop
jnp
aam
add
into
mov
or
aam
xchg
inc
lea
adc
out
scas
in
popf
shll
in
jecxz
jb
push
loope
imul
ficompl
mov
lock
mov
pop
aas
pop
add
pop
sbbl
negl
xor
inc
cs
cmc
je
xchg
aas
or
xlat
dec
imul
fwait
sbb
pop
xchg
dec
stos
in
sbb
ljmp
iret
in
xorb
adc
imul
int3
mov
xchg
and
xchg
push
and
outsl
inc
rorb
mov
pop
add
cld
neg
push
subb
in
push
adc
mov
mov
mov
js
sbb
test
lods
enter
bound
add
cltd
pop
lock
jb
test
arpl
clc
sbb
cmpsl
sbb
mov
test
jns
push
xchg
inc
in
sub
scas
cld
mov
pop
mov
mov
mov
lds
leave
xor
xor
aam
stos
adc
jae
fiadds
push
mov
stc
std
int3
mov
popa
pop
push
mov
push
jae
lods
outsl
push
aad
sub
sbb
mov
or
outsb
mov
mov
adc
pop
push
leave
or
jae
cmpl
int
inc
inc
bswap
bound
push
or
bound
into
rolb
andb
stos
fldl
add
sub
adc
jle
dec
loopne
jne
fstps
and
xor
cmp
pop
rcrl
loope
ljmp
test
subb
in
ret
pop
add
mov
inc
and
enter
xchg
dec
pop
xor
movsl
lret
xchg
push
or
lcall
adc
dec
add
popf
mov
fdivs
das
ds
push
loopne
xor
mov
mov
lret
push
cmp
into
cmpsl
push
or
push
inc
das
adc
mov
lahf
movsb
xor
cmp
dec
mov
inc
inc
lds
sbb
iret
cmpsb
and
outsb
xor
aad
or
lea
jle
xchg
mov
or
addr16
dec
inc
jle
lahf
jbe
or
pop
jno
jo
shll
mov
inc
ret
es
fiaddl
movsb
loop
jecxz
or
pushf
xchg
sahf
push
add
arpl
mov
andb
in
iret
mov
sbb
pop
sbb
add
push
xchg
jo
cli
mov
jp
std
jmp
jb
dec
mov
iret
inc
mov
nop
sub
insl
cld
jae
shl
daa
movb
pop
jb
cmp
push
movsl
notb
pop
aad
xlat
jns
or
mov
in
pusha
pop
mov
mov
into
and
mov
es
jle
lahf
mov
lea
push
xor
push
cmp
push
leave
pusha
cmp
sarl
add
cld
xor
mov
sti
lods
iret
bound
out
sbb
pop
xchg
cld
xchg
icebp
movsl
add
mov
pop
test
xor
lock
xor
push
pop
rol
scas
adc
inc
pop
add
aaa
lods
or
inc
pop
mov
setp
push
cmovae
lea
out
dec
in
popa
push
sbb
sbb
add
xorl
fwait
ss
stc
adc
push
leave
or
pop
lcall
adc
idivl
mov
dec
add
test
fdivrp
je
jb
sub
inc
ja
push
popf
out
inc
jecxz
xchg
les
scas
push
popf
stos
and
mov
and
ljmp
nop
in
jbe
shlb
stos
mov
push
push
xor
jbe
pusha
aaa
dec
mov
aas
dec
pop
test
fnstcw
stos
and
xchg
fsubrs
or
std
scas
aam
leave
popf
xchg
insl
xchg
xchg
fxtract
daa
mov
sub
es
xor
cmp
jbe
mov
cmp
addb
mov
sub
es
sub
mov
outsb
inc
ret
imul
test
mov
mov
cmp
or
leave
lock
jbe
lock
ret
pop
xor
push
fstl
jbe
push
jae
sbb
and
and
dec
lods
fbld
xchg
lock
inc
and
sbb
push
xor
fistpl
cmc
xchg
lods
lret
cmpsb
sarb
test
sbb
sbb
sbb
or
mov
xchg
inc
xlat
jl
mov
sub
movsb
inc
in
mov
insl
rorb
jmp
xchg
enter
or
mov
rorb
sbb
bound
cmp
in
pop
hlt
lods
push
add
scas
push
inc
das
aaa
decl
mov
pushf
js
rcll
out
mov
lock
js
in
cmp
ss
loop
mov
sub
jmp
mov
shll
jge
aad
cld
push
addr16
test
push
iret
stos
lret
mov
mov
fs
or
stos
out
loopne
and
insl
add
xchg
jne
jge
clc
ljmp
jnp
dec
int3
add
push
and
dec
loope
movsl
mov
stos
bound
rcll
mov
and
repz
out
fnsave
jbe
lret
or
push
out
sbb
stos
shrb
loop
outsl
in
pop
xlat
cli
mov
inc
sahf
cmpsb
insl
and
loope
stos
push
enter
inc
lahf
hlt
fdivrs
mov
dec
adc
test
stos
rolb
mov
icebp
or
push
insb
push
push
push
xor
xchg
adc
in
xchg
aad
imul
lock
push
addr16
test
xchg
daa
lock
in
mov
es
xlat
mov
dec
mov
pop
repz
in
fsubs
out
ja
cs
sbb
cmpsl
push
ds
and
int3
mov
cwtl
lods
and
xlat
xchg
scas
dec
ljmp
rorl
stos
push
push
mov
cmc
rorl
lods
testw
mov
and
pushf
sub
or
mov
js
pop
xor
loopne
mov
cld
mov
jle
sarl
test
mov
dec
movsl
mov
lea
jno
mov
lods
out
fiadds
xchg
inc
inc
push
cwtl
jg
sub
cltd
or
das
mov
in
insl
test
scas
jle
cmp
test
mov
inc
xchg
sub
push
cmp
das
fisubrl
stos
int
nop
outsl
cmp
es
cli
and
dec
int3
jle
pop
lods
add
data16
sti
add
jg
xchg
adc
aam
movsl
nop
push
pushf
add
pop
mov
daa
iret
cmp
popf
or
xor
sub
arpl
stos
add
call
shl
insb
fwait
stc
push
push
stos
and
ss
andl
mov
dec
movsl
inc
test
movsl
inc
jl
cwtl
das
mov
xchg
fbld
inc
dec
arpl
loope
mov
mov
sbb
call
xlat
jae
add
jnp
cs
ss
js
sbb
inc
add
cmp
stos
and
lret
push
repz
js
mov
dec
mov
cwtl
les
xchg
insb
imul
dec
in
lret
cmc
mov
xchg
outsl
movl
mov
mov
lods
fs
in
jmp
fmull
add
fstp
adc
es
and
in
adc
addl
sub
ljmp
cwtl
imul
jns
inc
out
sbb
jp
ss
inc
mov
dec
lock
sarl
sbb
mov
push
inc
sbb
push
jns
cli
mov
insb
sahf
jg
cmp
inc
push
out
cli
repnz
shrl
aas
xchg
orl
ret
loopne
insb
shl
pop
mov
cmp
call
pop
rorb
inc
ret
flds
cs
aaa
and
xchg
cmp
pop
insl
adc
inc
mov
lods
test
pop
push
xchg
ja,pn
or
out
pop
dec
sub
stos
popl
dec
data16
in
in
mov
mulb
outsb
int
test
or
les
sub
fmull
xchg
jne
mov
jmp
push
pop
fsts
imul
out
push
add
xchg
rcrb
mov
das
jnp
daa
mov
loop
loopne
pop
cmp
sbb
dec
lcall
andl
cwtl
push
push
je
add
or
scas
inc
cmpsb
in
cmp
mov
sub
cld
xchg
push
pop
mov
ret
sub
lret
mov
test
xchg
les
mov
aad
call
sub
pop
mov
movl
imul
andl
push
movsl
icebp
cltd
cltd
test
imul
es
hlt
lds
push
jecxz
outsl
addr16
add
dec
cmp
adcl
pop
jnp
jnp
mov
sarl
lock
ret
sti
imul
cmp
mov
in
outsl
mov
ret
ret
ja
pusha
mov
addr16
pop
push
xor
cmp
repnz
xor
shrb
scas
cld
shrb
and
xor
enterw
mov
dec
outsb
pushf
xchg
lds
mov
or
pushf
pause
sub
test
inc
inc
or
xchg
fildll
sbb
xor
jmp
xchg
loop
lret
mov
xchg
pusha
jnp
cmp
js
xchg
dec
mov
dec
dec
lcall
push
adc
idivb
dec
sub
push
insb
test
out
xor
pop
mov
dec
mov
cmp
and
cli
call
movsb
cmpsb
clc
cmp
xchg
sub
cmc
and
jmp
cld
sub
cmp
push
nop
xchg
imul
out
xlat
loopne
inc
mov
cmpsb
es
rol
test
icebp
xchg
test
jmp
and
cmpsb
lret
orb
add
cwtl
xchg
cmp
push
stos
mov
orl
cmp
cmp
jecxz
xor
add
lahf
fmull
jne
push
xor
aaa
jnp
dec
addr16
aas
iret
mov
cmc
jbe
hlt
into
jne
mov
xchg
pop
dec
fcomps
xchg
test
rorl
cmc
cmp
mov
mov
adc
push
cmc
mov
ds
push
lea
int
imul
push
shlb
sub
mov
add
sub
pop
jmp
fdivs
mov
push
and
dec
or
ss
pop
loope
mov
dec
jmp
mov
mov
adc
cltd
outsb
rorl
sub
out
pusha
cld
mov
mov
ljmp
adc
dec
movsl
arpl
mov
addr16
into
dec
jb
and
sbb
aas
lea
and
outsb
cmp
cmpsb
inc
cmp
xchg
fdivs
jp
or
jmp
jne
mov
mov
xchg
pop
mov
xlat
cli
fnstenv
rcll
fisubrs
ret
lea
mov
and
xorl
jb
and
sahf
mov
cmp
pop
jns
xchg
les
repnz
in
repnz
pop
ret
xchg
and
cmp
cli
test
std
repnz
xchg
jae
testb
add
negl
cmp
fstps
xlat
out
mov
or
push
and
stc
cmpsb
jge
out
shlb
push
into
pop
icebp
mov
or
lahf
dec
pop
pop
push
xchg
and
sub
push
sti
push
shll
mov
pushf
das
sbb
pop
xchg
insl
xor
mov
push
dec
mov
outsb
repz
scas
pcmpgtb
int3
dec
ret
pushf
pop
cmpl
sti
ss
push
add
gs
push
js
cmpsl
adc
test
and
mov
add
test
adc
push
int3
insb
mov
and
stc
fldl
push
movsl
xor
sub
in
fsubr
or
push
lret
add
mov
mov
daa
mov
ret
loop
lods
lods
mulb
cs
mov
lret
xor
xor
xor
sbb
jb
push
xchg
jne,pn
jbe
ficoml
rcr
sbb
into
jb
test
mov
sub
int
pop
jo
inc
ss
xor
outsl
sub
ret
hlt
and
aas
push
xchg
in
decl
insb
sub
aad
imul
sbb
pop
pop
or
aaa
mov
imul
scas
cltd
out
xor
mov
out
inc
mov
mov
lods
lods
psubusw
push
int
int3
ret
gs
mov
pop
roll
ret
mov
and
icebp
push
dec
in
inc
add
in
pop
loop
pop
std
loop
pop
call
fisubrs
pop
push
and
roll
imul
mov
cmpsl
and
into
mov
lods
sti
cltd
push
inc
xchg
xorps
push
aas
pop
push
rcll
xor
bound
cmp
movsb
mov
adc
dec
sahf
ret
cmpsb
push
inc
sbb
push
xlat
xorb
rclb
inc
std
lods
push
dec
stos
insb
jnp
daa
ljmp
scas
sbb
sbb
xchg
das
xor
push
jne
jle
cs
pop
push
hlt
and
test
lods
lea
cmp
and
iret
inc
or
daa
mov
ret
and
pop
mov
int
mov
sbb
xchg
jecxz
loop
int3
sub
inc
andl
mov
add
imul
cwtl
in
lds
pop
imul
lods
mov
cmp
int3
pushf
lods
and
xchg
cwtl
dec
daa
cwtl
cli
sarl
mov
or
ljmp
jbe
fadds
gs
mov
push
int3
shlb
adc
addr16
push
movsl
and
xchg
dec
lcall
les
fisubl
add
outsl
xchg
push
test
xor
outsb
aam
loop
fcoml
popf
mov
cmp
dec
push
mov
scas
inc
out
ds
jmp
dec
stc
add
lcall
fs
je
int3
or
mov
pop
cld
mov
mov
loop
cs
sbb
test
les
mov
add
fs
and
jp
push
xor
adc
clc
movsl
cmpsl
es
jb
mov
mul
incl
cltd
movsl
repz
cmp
mov
cltd
in
jecxz
adc
rorl
loopne
mov
lds
cmp
divl
dec
dec
out
xchg
push
lret
rsm
xor
leave
into
les
popf
cmpsb
sbb
xor
je
scas
sub
int3
ljmp
pop
pop
stos
notb
outsb
adc
in
or
sub
mov
sti
cltd
dec
inc
pop
xlat
inc
scas
movsl
int
push
adc
loopne
dec
sbb
lret
flds
aaa
pop
fwait
and
cmp
cmp
mov
inc
mov
pop
add
mov
xor
ds
outsb
lret
mov
push
stos
and
jno
mov
std
les
cmp
hlt
sbb
inc
pop
and
mov
or
ja
arpl
jp
and
and
or
add
add
and
push
and
outsl
clc
mov
mov
mov
xchg
stc
push
mov
mov
mov
cwtl
or
xchg
push
sarb
stos
pop
and
mov
imulb
ds
pop
icebp
out
aaa
outsb
dec
mov
jg
push
push
aas
push
test
mov
mov
shlb
jp
dec
scas
and
cld
pop
movsb
inc
mov
mov
mov
ret
insb
xchg
testl
movsl
and
add
adc
xchg
xchg
loopne
push
lock
cmp
sarb
ss
aad
test
jp
mov
jae
jg
mov
scas
pop
jg
mov
bound
jb
sub
loop
push
loop
arpl
push
jg
imul
mov
test
jl
cld
xchg
lods
cmpsb
inc
insl
mov
or
cmpsl
sti
cmc
test
push
push
xchg
loop
jecxz
mov
mov
movb
js
inc
cmp
inc
pop
mov
pushf
xchg
xchg
jp
ja
adc
pop
mov
pop
jb
test
adc
mov
cmc
mov
jnp
sahf
cmp
call
adc
inc
sub
popa
lock
sbb
mov
iret
mov
jl
fmul
push
bound
clc
sbb
or
sub
das
test
xchg
adc
sbbl
mov
call
in
aaa
pop
lods
pop
xchg
icebp
imull
jb
pop
imul
jg
jge
push
or
hlt
sbb
mov
incb
imul
cmp
adc
pop
idivl
rcr
jle
mov
sub
xor
movsb
cmp
dec
shlb
xor
lods
add
sbb
inc
xor
inc
dec
adc
jg
pop
dec
inc
xor
lds
cs
push
and
aaa
movsb
rcll
pop
cmpb
xchg
mov
pop
dec
and
out
mov
mov
test
ret
insb
test
sti
jnp
fisttpl
xlat
and
sub
xorl
aas
fcoms
daa
xlat
pop
add
fwait
loopne
decb
pop
mov
pop
pop
sub
pusha
or
call
faddl
adc
sub
jl
xchg
mov
loopne
orb
push
add
add
aad
and
push
inc
clc
scas
mov
fisubl
sub
cmpsl
inc
mov
fcomi
jo
movsl
pop
dec
test
push
pop
sub
fidivrl
xchg
inc
lcall
incl
sar
sub
in
push
xor
out
push
pop
mov
mov
daa
mov
adc
shl
jmp
ljmp
pop
mov
xor
repz
leave
leave
lds
lds
popa
outsb
repnz
xchg
ss
lds
and
push
lds
sub
insl
loop
je
test
test
mov
adc
es
inc
mov
xor
out
clc
mov
cltd
add
and
push
mov
aad
xchg
or
jbe
xor
jmp
sbb
movsb
adc
or
mov
test
mov
cmp
rcpps
lahf
pusha
aas
mov
sub
test
pop
in
mov
iret
cmpsl
inc
cmpb
cltd
stos
int3
xor
filds
lods
sbb
data16
dec
xchg
sub
insl
jno
sub
sti
cmp
sbb
jl
out
mov
cmpsb
cmp
aaa
inc
cmpsb
bsf
subl
mov
es
es
lds
inc
and
rorb
ss
adc
arpl
mov
orb
dec
dec
dec
sub
pop
mov
ss
or
insb
nop
jns
or
shlb
outsl
cmp
jge
out
and
scas
and
or
in
jne
jbe
push
pop
pop
cmp
xor
jl
add
or
mov
int3
mov
out
leave
mov
outsl
out
jmp
jmp
xchg
int3
inc
mov
mulb
inc
stos
jg
adc
imul
hlt
inc
or
rcr
mov
daa
fwait
pop
adc
add
and
mov
inc
loope
fwait
sti
loope
jl
push
xor
push
ds
push
push
push
xchg
and
and
fwait
xchg
adc
and
fisttpll
pop
mov
iret
test
adc
jno
int
insb
ds
push
imul
mov
mov
cmpsl
lea
mov
sbb
cmc
add
xchg
xchg
mov
sub
js
sbb
inc
jne
scas
inc
xchg
repnz
and
jecxz
inc
mov
or
adc
inc
adc
in
xor
jmp
shll
dec
pop
xchg
cmpsb
and
xchg
out
test
std
mov
push
mov
into
js
adc
jae
mov
xchg
and
rolb
ret
mov
loop
ficomps
popf
push
divl
sbbb
js
jge
xor
dec
fldl
mov
lods
lret
and
or
xchg
daa
sbb
xchg
movsb
xorb
push
insb
inc
adc
adc
mov
cmpsl
jecxz
pop
adcl
mov
sbb
push
xor
std
jne
inc
mov
mov
push
inc
lock
ss
mov
or
mov
mov
fcoml
in
enter
mov
sub
mov
and
addr16
mov
jnp
jecxz
mov
fs
outsl
xorl
insb
pop
outsb
lds
cs
cmpsb
lea
ss
xchg
jg
hlt
cli
leave
pop
mov
push
mov
outsl
out
mov
sbb
jp
or
or
or
ret
ss
std
jmp
add
enter
mov
jmp
xor
push
inc
or
lahf
xor
cld
dec
fs
je
dec
repnz
rol
sub
mov
call
test
ja,pt
mov
mov
out
cli
pop
and
aad
mov
loope
xor
pop
mov
inc
add
xor
jnp
pop
cmp
mov
popf
and
mov
mov
jns
scas
push
call
mov
sub
pop
pop
ljmp
mov
push
mov
sub
pusha
mov
into
test
add
sub
scas
pop
gs
test
jo
cmp
sbb
or
je
dec
cmpsb
das
xor
lods
jecxz
mov
hlt
jb
orb
mov
xor
stc
inc
adc
xchg
scas
push
lcall
push
iret
jns
fstps
add
imul
adc
fnsave
stos
sub
xchg
imul
cmp
sbb
daa
test
dec
sub
cmpb
roll
stc
dec
sbb
sbb
sub
adc
push
or
add
shrb
rorl
cmp
enter
xchg
jo
push
imul
out
lcall
mov
imul
adc
cs
cmc
cmp
ret
ret
cmp
dec
notb
inc
lret
jmp
insb
imul
icebp
xchg
clc
mov
es
loopne
and
add
xchg
imul
pop
push
jge
imul
cmp
push
push
mov
sub
cmp
leave
cwtl
jb
sbb
rcr
dec
jb
repz
push
les
adc
push
iret
push
jbe
pop
xor
pop
cmp
cmp
cs
jnp
sbb
les
jne
push
or
add
push
mov
sub
push
das
mov
repnz
add
fidivs
lea
in
lock
stos
bound
or
cli
mov
and
inc
mov
sti
les
mov
xchg
push
je
add
test
loope
fs
adc
loopne
lret
test
dec
push
mov
jno
xor
push
icebp
sbb
fdivrs
bound
pop
sbb
xchg
push
mov
sarl
mov
mov
test
push
shr
sub
jns
ror
jno
jp
and
pop
xchg
dec
in
dec
mov
or
cmp
arpl
cmp
addr16
mov
fs
rol
shrl
sub
mov
mov
int3
jb
xchg
add
or
ljmp
add
jg
ja
pushf
std
pop
out
jg
mov
sub
cltd
cvtdq2ps
lahf
and
adc
xlat
cmp
dec
stos
push
in
mov
cwtl
enter
insl
std
stos
faddl
sarb
xchg
lds
repz
das
psadbw
movsl
or
or
dec
lds
xchg
mov
sub
test
xchg
xchg
andnps
xor
int
leave
test
push
mov
xchg
rolb
pop
dec
test
hlt
sub
push
sub
mov
outsb
jge
xchg
outsb
pop
jp
cmpsb
dec
ret
push
int3
nop
push
out
pop
lret
cmp
ds
enter
add
scas
movsb
test
pop
pop
arpl
sub
popa
shr
idivb
rorb
xchg
jbe
mov
mov
pop
mov
jmp
xchg
arpl
out
lcall
pop
inc
dec
mov
xchg
cli
out
dec
rorl
cli
out
es
pop
mov
repnz
popa
in
clc
dec
adc
or
dec
popf
pop
ret
lods
jns
mov
sub
fmuls
jg
jmp
fimuls
stos
sub
xchg
adc
mov
clc
adc
into
mov
mov
push
mov
and
jbe
shlb
ret
clc
jns
mov
jcxz
fimuls
fs
cltd
xor
ficompl
xor
sub
mov
cmpsb
loope
mov
push
cmp
out
sti
pop
inc
push
dec
add
xor
ret
pushf
inc
add
dec
or
inc
aas
xchg
and
xlat
push
inc
xor
clc
jecxz
in
cs
dec
lret
mov
outsl
or
bound
out
cmp
lods
xchg
repnz
gs
jmp
ss
sbb
leave
jae
mull
stos
fistpll
dec
insb
pop
xchg
xchg
lds
cmp
adc
filds
je
dec
cmp
pop
insl
fisttpl
ret
lods
lods
lea
loopne
cmp
shlb
push
xorb
or
clc
notl
rcr
insb
sbb
add
or
loop
subl
testb
ja
lods
xchg
jae
icebp
push
and
lock
sarl
orl
test
fnstcw
push
ljmp
or
jl
movsb
fcomps
rcrb
xor
lock
mov
loopne
into
incl
or
cmpb
leave
faddp
pop
int3
mov
sub
nop
sbb
pop
pop
inc
mov
sub
je
xchg
push
push
or
dec
cli
mov
dec
sbb
outsl
mov
fdivr
push
cmpl
push
fcmovb
inc
sbb
cmp
pop
jnp
iret
adc
inc
test
add
scas
cs
dec
xlat
pusha
lret
lahf
pop
adc
pop
fmull
mov
push
cmpsl
shlb
in
xchg
aaa
push
movsl
push
int
adc
int3
jno
gs
in
mov
jae
jbe
mov
adc
loope
sub
ja
dec
cltd
push
mov
jnp
mov
cwtl
xchg
ret
je
pop
mov
xor
sbb
mov
sub
lods
jg
popf
outsb
and
sbb
iret
sarl
jg
hlt
fstpl
mov
mov
sti
pop
pop
jp
rcrl
jo
jo
xor
mov
and
adc
jg
mov
cs
cld
jbe
lcall
adc
insl
pusha
push
rcl
push
out
sub
mov
add
lds
leave
push
test
xchg
cmp
mulb
inc
sbb
lods
jo
rol
sbb
lahf
mov
dec
add
push
mov
mov
out
adc
xor
mov
add
test
jne
out
test
add
push
dec
mov
stos
leave
xchg
cmp
fucom
cmp
jo
mov
xchg
ja
dec
pop
cwtl
in
jp
inc
daa
fdivrs
dec
jns
inc
imul
mov
sbb
mov
out
scas
push
ds
mov
mov
sbb
outsl
mov
shlb
xchg
xor
ret
cmp
mov
test
shrb
cltd
xor
and
pop
cmp
cmp
les
je
mov
leave
out
mov
cli
loop
xchg
cmp
insb
aas
dec
pushf
movsb
lahf
jbe
xor
adc
and
mov
in
push
ret
push
fsubrl
xor
inc
cwtl
jmp
xchg
fmull
and
pop
in
pop
push
pusha
and
xor
adc
cwtl
cwtl
or
test
ljmp
adc
or
and
dec
mov
pop
cmpsl
push
lret
inc
jo
dec
push
pop
es
sbb
or
and
aas
jo
in
pop
lahf
adc
sub
xor
fidivrs
sti
pop
lahf
ret
pop
mov
pop
push
jl
loop
xchg
cmp
test
pmulhw
lds
jecxz
rcrl
pop
ret
mov
lret
outsb
cmp
out
clc
lock
or
mov
or
mov
cmc
gs
mov
push
or
jae
sub
or
pop
or
addr16
and
xchg
out
or
jb
in
dec
dec
mov
iret
shrb
aas
jl
push
aas
mov
popa
rorl
subb
fadds
cs
mov
cmpsl
push
cmp
lret
adc
mov
sbb
out
enter
loop
push
dec
xchg
subl
scas
das
pop
adc
push
sbb
cmc
pop
pop
xchg
test
mov
cmp
clc
and
xorl
in
jp
les
xchg
popa
xor
hlt
cltd
test
xchg
ffree
fwait
add
push
cmp
divl
push
fwait
int
jg
rcll
nop
push
dec
test
cmp
fcoml
mov
jmp
jl
cmp
leave
push
or
jno
loope
push
jno
mov
cmpsb
or
xchg
fs
cmp
clc
rcl
dec
xchg
ljmp
xchg
push
dec
lods
or
mov
mov
sub
outsb
in
arpl
mov
test
loope
push
iret
cmp
sub
mov
fwait
movsb
mov
aaa
popf
mov
push
adc
sbb
bound
outsl
adc
xchg
jl
mov
frstor
and
cli
jo
sub
imul
aam
mov
hlt
lods
mov
cmp
xor
call
shl
stos
int3
aam
out
mov
adc
jmp
pop
fwait
mov
push
xchg
cltd
mov
sbb
data16
rcrl
std
mov
insb
popf
in
mov
xor
gs
out
fdivl
mov
scas
push
int3
mov
insb
push
jb
mov
cmp
ss
fldl
lret
cmc
mov
sti
jmp
xor
leave
stos
iret
scas
incb
xchg
cmp
inc
inc
cld
fs
mov
mov
xchg
cs
jae
and
pop
mov
mov
data16
cwtl
push
les
or
mov
insb
xor
jl
sahf
jne
cmc
outsb
lret
fucomi
jl
stc
sbb
jo
and
shll
jmp
loope
inc
dec
jae
stos
lods
popf
aas
int
inc
ret
in
jecxz
fnop
call
sahf
xor
inc
andb
xchg
xor
add
mov
pop
pop
jle
and
pop
cmpsb
inc
mov
imul
movsl
scas
xor
imul
or
cmpsl
loope
xor
cwtl
pop
inc
push
xor
fwait
insl
adc
or
cmpsl
sbb
negb
add
sbb
pushf
adcl
movsb
cmpb
fisubl
fadds
inc
pop
and
xchg
push
idivl
adc
cwtl
sbb
addr16
push
mov
hlt
mov
push
push
cmp
shll
pop
adc
or
repz
gs
jno
mov
in
mov
ljmp
and
imul
js
cli
jge
imul
sti
rol
add
mov
daa
shrb
jae
mov
mov
call
sbb
cltd
sbb
or
ds
push
pop
fdivr
lock
jb
movsb
cmp
subb
int
lcall
push
push
cmp
rcrl
cwtl
sub
mov
push
repz
sbb
sbb
mov
push
jo
mov
adc
push
jmp
pop
add
push
rcll
mov
sub
push
aaa
inc
test
inc
stc
add
cmc
fwait
test
xchg
cmp
insl
add
add
or
add
sub
addl
aaa
and
into
xor
push
sub
mulb
in
and
gs
adc
push
mov
and
mov
sub
jg
ljmp
icebp
adc
pop
adc
xchg
push
icebp
data16
testl
int3
mov
sub
ljmp
js
fdivrs
mov
lds
shl
mov
lods
mov
push
mov
add
ljmp
pop
lcall
sub
xor
rcrb
mov
faddl
gs
dec
mov
pop
sub
jp
mov
stos
jae
sbb
lahf
cwtl
jmp
hlt
sbb
mov
inc
cltd
ftst
pop
dec
test
in
loope
aad
mov
dec
in
cmpl
inc
out
mov
cmp
in
push
cmp
add
dec
inc
hlt
pusha
movsl
test
jne
and
repnz
pop
ja
nop
sub
and
mov
sbb
sbb
adc
fldt
inc
cmp
or
out
rcrb
xor
movsl
xor
dec
cli
add
jb
xchg
out
sbb
adc
or
data16
sub
outsb
mov
mov
mov
or
mov
sti
add
cld
mov
cmpb
inc
loope
sub
push
fwait
adc
stos
push
add
sti
push
js
inc
mov
push
aam
adc
sub
sbbl
repz
pop
dec
xor
daa
mov
inc
pop
fwait
mov
xchg
mov
lahf
pusha
jl
mov
fcom
gs
mov
pop
adc
mov
or
call
jno
in
dec
sub
cmp
pop
jmp
in
mov
and
in
fmull
xor
sub
jnp
xchg
call
mov
push
jecxz
leave
push
lret
insb
dec
push
ficomps
scas
mov
lahf
test
pop
jmp
jp
out
or
xor
ficoml
in
test
fstl
bound
arpl
xchg
repnz
lcall
dec
in
ror
jg
mov
or
jge
stos
jg
mov
add
jmp
xchg
dec
dec
pop
xchg
call
loope
push
sbb
es
stc
loopne
or
cmc
cltd
stc
sub
out
jmp
xchg
sub
or
fucomp
std
shlb
mov
push
mov
xor
cmp
mov
test
popa
dec
int3
xorl
sahf
mov
adc
and
push
js
mov
cwtl
xor
mov
mov
cmc
mov
mov
punpcklwd
xlat
sub
xchg
inc
lret
dec
out
movsl
inc
push
lea
jnp
xchg
jb
sar
mov
mov
imul
js
pop
and
push
aam
mov
add
and
addr16
ljmp
dec
dec
test
pushf
icebp
xacquire
ret
mov
xor
pop
or
aam
les
mov
fdivrl
int3
mov
adc
cli
fstps
dec
inc
mov
addr16
jnp
sub
sub
lcall
lret
push
call
mov
aaa
jmp
push
xor
in
and
or
xor
add
xchg
mov
inc
lcall
ljmp
test
and
lahf
out
xor
mull
int3
xchg
lea
mov
dec
jno
mov
inc
imull
add
in
mov
adc
out
outsb
loop
xchg
pop
popa
lods
sub
popf
out
xor
adc
or
mov
mov
es
sub
fdecstp
sub
adc
mov
andb
xor
and
loopne
xchg
popf
jg
bound
xor
xlat
push
ss
out
aam
or
loopne
xchg
pop
xchg
push
sub
push
lods
jbe
in
inc
add
inc
sub
mov
pop
repz
fdivrl
sub
pop
addb
or
dec
mov
pop
sub
data16
xor
lret
xchg
insl
iret
scas
mov
fwait
test
jne
int
fs
jmp
adc
in
addr16
js
lods
mov
cli
nop
and
cmp
cmp
nop
cmp
mov
jle
jge
nop
loop
into
mov
and
pushf
mov
loope
push
icebp
out
sbb
xor
loop
inc
daa
mov
andb
adc
jg
pop
or
dec
icebp
dec
ds
ss
sub
fwait
push
adc
enter
ja
xchg
and
inc
pop
jo
cmp
into
ljmp
mov
or
xchg
fs
adc
dec
cltd
cmp
xlat
aam
mov
xlat
fs
mov
adc
mov
insb
cmpsl
fldenv
jp
sbb
jge
xchg
mov
out
mov
sub
sahf
sti
nop
jne
cltd
outsl
xor
push
cli
cmpsb
movsb
pop
add
test
addl
mov
mov
jmp
mov
xor
xchg
in
in
stc
or
pop
xchg
dec
or
flds
test
adc
mov
push
mov
pop
cs
jae
jnp
dec
inc
mov
xchg
fmull
jb
loop
mov
inc
add
xlat
in
xchg
pop
adc
hlt
aaa
pop
inc
sbb
idiv
cltd
daa
fcmovnbe
test
loopne
in
mov
xchg
or
shrb
sbb
inc
jecxz
repnz
cltd
push
adc
repz
fcmovb
fmul
dec
shr
inc
enter
mov
add
push
gs
addr16
in
data16
xchg
xchg
mov
clc
fistl
or
inc
cmpsb
adc
daa
pop
lock
imul
lcall
clc
mov
lock
sub
outsb
sti
add
test
jbe
shrb
dec
sub
sti
jnp
dec
jecxz
xor
pop
sbb
in
shl
sahf
js
sub
stos
shrl
dec
jns
vmovapd
cmp
inc
cltd
dec
out
lahf
mov
dec
insb
sbb
stos
cmpsb
mov
imul
mov
pushl
cs
das
mov
ret
leave
in
sahf
mov
xor
jp
cwtl
ds
ret
push
mov
imul
imul
jne
ljmp
push
addb
xchg
inc
fisubs
andl
pop
subb
fsubrs
cmc
xorb
cmovl
pop
ret
enter
fwait
add
js
jbe
fxch
xor
and
push
add
push
jnp
and
sub
sub
call
js
pop
push
adc
std
sub
xchg
sbb
mov
xorl
push
scas
aam
and
lcall
std
jae
and
push
sbb
jl
rorl
sbb
cmp
cmp
pop
mov
xchg
inc
jmp
add
dec
dec
and
xor
cmpsl
aam
stos
mov
sbb
gs
cmp
jg
push
push
and
into
nop
les
ret
nop
push
add
insb
mov
mull
mov
or
sahf
ficoms
lret
xchg
adc
jns
aam
push
sbb
dec
xchg
fsubs
add
jo
jmp
rclb
pop
fmuls
mov
push
ja
push
sbb
in
pop
pop
mov
shrl
mov
push
lret
or
inc
push
fldenv
push
ret
addr16
xor
scas
inc
adc
push
ret
loopne
stc
lock
sti
lea
lahf
nop
neg
loop
jp
adc
pop
loope
leave
pop
aas
shll
jae
addr16
addb
mov
lcall
xchg
mov
lods
sti
sbb
loope
jl
sti
arpl
xchg
leave
xchg
daa
sbb
stos
aad
mov
dec
fstp
push
lock
push
int
or
call
cmp
jg
iret
mov
lcall
add
fldt
mov
int3
xor
lahf
mov
outsl
iret
call
push
adc
lods
xor
inc
data16
fildl
cli
or
xor
mov
rcrl
leave
push
push
push
adc
adc
xchg
push
jecxz
mull
and
out
scas
cmpsl
and
pop
mov
mov
pop
pop
inc
dec
test
nop
mov
insl
mov
repz
mov
mov
mov
jg
adc
fstpt
fwait
rcr
imul
jno
mov
adc
xor
dec
lcallw
adc
sbb
scas
and
and
out
in
sbb
sbb
shrl
lcall
mov
inc
ret
mov
mov
enter
out
fstl
int
repz
les
and
int3
jnp
and
and
rcl
gs
test
mov
adc
push
sbb
test
cmp
mov
jmp
fwait
popf
xchg
ljmp
adc
out
or
test
xchg
mov
push
mov
ret
dec
aaa
or
mov
bound
lret
mov
cs
mov
stos
cmp
int3
inc
out
inc
inc
mov
addr16
xlat
mov
fucom
imul
iret
nop
andb
jge
shll
or
sahf
mov
iret
add
mov
or
xchg
and
aas
adc
cmc
loopne
sarb
add
stos
fnstenv
js
incb
add
cmc
mov
fbstp
movsb
xor
iret
push
lea
push
loop
ljmp
adc
insb
adc
lret
push
pop
icebp
jle
cmp
jnp
mov
mov
pop
shrb
or
mov
jns
dec
aad
pop
jno
add
jp
sbb
pop
mov
push
add
int3
es
ret
adc
xor
js
dec
add
out
push
mov
lods
mov
mov
mov
lock
cmp
rclb
sub
adc
mov
shlb
sbb
test
movb
push
xchg
xchg
lods
in
cmp
movsl
push
and
pop
push
out
xor
push
dec
push
dec
addr16
test
mov
popa
cmp
add
es
repz
loopne
decb
andl
jmp
jnp
popf
adc
in
popf
sbb
mov
mov
sbb
outsb
lock
dec
lods
mov
into
cmpsb
aaa
push
sub
xor
pop
hlt
mov
add
hlt
jne
sbb
and
mov
enter
cmp
push
dec
jl
xor
xor
je
cmpsb
sbb
xor
sub
inc
test
jmp
push
orl
cli
mov
cld
dec
pop
aad
out
push
xchg
push
fidivs
xchg
ds
jnp
pop
cmpb
dec
push
fsubl
iret
insb
cmp
mov
daa
xchg
in
shlb
mov
test
xor
daa
filds
push
or
in
jecxz
popa
xchg
das
ss
lods
repz
popf
and
adc
and
sub
add
or
xor
aas
lods
aas
inc
push
and
or
pop
mov
push
cltd
cmpsb
jbe
lea
psrlq
cmp
lds
sbb
addl
mov
or
in
cmp
mov
outsl
jae
mov
jl
and
mov
fistpl
jmp
fistps
or
lea
cmpl
lods
ljmp
pushf
pop
sbb
outsl
cmp
popf
ss
ja
lret
mov
js
aas
fimull
jbe
pop
jns
mov
fsubr
sub
xor
sahf
adc
in
inc
lret
add
pop
push
or
mov
rol
ljmp
stos
sub
insb
mov
mov
cld
mov
pop
sti
xchg
mov
dec
out
repz
push
stc
xchg
xchg
aas
ljmp
add
lods
jp
cmpsb
mov
idivb
dec
roll
movsb
push
dec
dec
pop
jl
lcall
aad
inc
jbe
fisubs
jge
lcall
sbb
jle
sahf
xchg
xchg
ret
fcmovnbe
jmp
cmp
sti
adc
cmp
jno
jl
pop
inc
fcmovbe
or
in
pop
and
dec
push
cmpsb
mov
in
jb
jo
push
or
adc
cmp
push
jae
and
jg
stc
cs
sarb
cld
and
pop
js
pushfw
fs
inc
or
add
test
scas
pushf
sub
dec
sbb
ret
pop
mov
sbb
adcl
mov
pop
jg
ret
in
cld
sbb
int
inc
jno
adc
jge
lahf
push
in
xlat
push
stos
cmp
arpl
es
cmp
sahf
jmp
pinsrw
shr
stos
decb
js
xorb
push
aad
fcompl
in
and
push
xchg
adc
or
mov
mov
push
xchg
ret
pop
dec
scas
enter
dec
or
mov
mov
push
outsb
or
lds
pop
gs
pop
push
or
dec
cmpsl
pop
addb
vcvtqq2pd
hlt
and
test
and
repz
cmp
fs
testl
scas
js
mov
ljmp
xor
cmp
pop
outsl
in
jl
adc
nop
or
mov
xchg
mov
mov
iret
jmp
jb
test
mov
push
popf
push
push
push
jo
imul
fidivl
sub
popa
mov
or
out
lret
jl
sub
in
jnp
pop
test
lcall
mov
jge
in
sub
cmp
lock
push
clc
int3
stos
arpl
mov
ret
aam
inc
roll
mov
and
cmpsb
outsl
movsl
and
aad
and
sub
and
bound
lahf
add
jle
enter
jecxz
sarb
and
fadds
and
push
pusha
xchg
loope
leave
jp
fmull
inc
in
cli
sub
insl
or
push
xor
adc
fldenv
lcall
inc
lcall
aad
pop
pop
xchg
call
dec
mov
call
dec
in
pushf
pop
xlat
sub
mov
dec
aaa
inc
mov
cmpsl
sub
js
movsl
lret
mov
stos
push
pop
imul
jo
shl
lods
xchg
mov
sbb
es
sub
inc
call
cli
sarl
adc
mov
fldcw
test
push
mov
inc
in
das
cmp
in
cmp
faddl
xchg
in
and
mov
jge
sti
icebp
popa
pop
loop
cmp
add
push
mov
cmp
sub
jns
cld
mov
xor
mull
in
in
nop
push
outsl
lods
mov
das
or
in
xorb
jl
jns
dec
inc
fists
and
inc
xor
mov
popa
fwait
iret
in
cltd
jbe
cmp
fisttps
inc
and
mov
outsb
les
jp
jmp
pop
lock
cmp
jl
xchg
jae
imul
lods
add
adc
fistl
icebp
cwtl
arpl
mov
call
jno
jle
stos
out
cmpsb
push
sbb
push
or
repz
sub
mov
ss
pop
into
cmp
arpl
push
inc
sbb
lods
and
jns
outsb
nop
stc
sbb
jge
mov
ret
mov
xorl
cli
test
jne
dec
dec
pushf
aam
das
xchg
jp
cmpsl
imul
lret
push
and
jne
xchg
or
dec
ret
mov
lods
std
push
out
add
inc
push
iret
xchg
mov
mov
shll
pop
pushf
dec
jb
stos
push
sub
lds
int
cmpb
xchg
aad
icebp
inc
xchg
inc
mov
or
sbb
add
and
pop
iret
aas
mov
xchg
mov
xchg
arpl
mov
fnsave
pop
loope
fmuls
sub
jmp
mov
pop
mov
shll
loope
mov
sahf
inc
test
cmc
inc
sbb
inc
ja
push
mov
add
mov
fists
jmp
and
or
fldenv
push
mov
mov
or
aas
sti
adc
cmp
arpl
std
mov
addl
int3
pop
pop
call
mov
mov
fidivs
sub
cmp
cmpsl
adc
int
scas
xchg
mov
pop
dec
jns
out
insb
jle
jae
lods
and
sbb
jge
lods
stc
mov
inc
push
lcall
mov
ljmp
inc
push
inc
cwtl
push
cli
mov
mov
push
adc
cmp
ljmp
aad
cmp
imul
push
rolb
xor
jl
int3
adc
lds
sub
mov
ja
ds
dec
fndisi(8087
xchg
pop
lea
outsl
rcrb
fisttpl
imul
in
pop
pop
cmp
mov
cmc
sub
fdivrs
add
imul
add
and
les
inc
clc
das
mov
xchg
fdivl
leave
push
cs
jmp
fisttpl
adc
negl
push
stos
pop
repnz
frstor
ljmp
or
lea
mov
lods
test
add
loop
xchg
loopne
bound
and
icebp
sbb
hlt
lea
aaa
sub
mov
sarl
mov
scas
push
rcrl
xchg
ljmp
je
cmpsl
xchg
lret
push
push
and
push
jge
fildll
cmp
cmpsl
dec
sbb
mov
add
lahf
inc
call
cltd
sbb
test
fstp
xor
out
mov
pop
jns
lret
aam
data16
in
add
inc
xrelease
int3
popa
jg
or
pop
pusha
or
int
add
xchg
shll
sub
mov
out
gs
sbb
inc
cmp
lea
jb
push
cld
cmp
popa
fcoml
out
adc
ret
jo
inc
test
adc
lds
loopne
and
frstor
std
push
movsb
mov
lds
push
jns
fsubrp
pop
sub
jecxz
movsl
lea
pop
test
jb
dec
out
mov
jecxz
ja
test
aad
ret
sarl
js
mov
pop
iret
call
cwtl
mov
es
leave
add
jae
out
dec
sar
adc
call
cmp
xchg
imul
inc
xchg
jg
push
jnp
or
inc
sbb
or
orl
xchg
jns
aaa
mov
jg
fwait
int3
jl
js
xorl
sqrtps
xchg
pop
adc
leave
daa
call
pop
icebp
push
jae
stos
loopne
mov
outsl
fnsave
pop
mov
xor
test
pop
dec
das
outsb
ljmp
jo
push
add
xchg
dec
je
lret
or
lods
loopne
stc
sti
mov
push
in
cmp
insb
push
lea
mov
rclb
jnp
je
dec
xor
bound
push
ret
lret
sub
dec
mov
enter
and
or
inc
push
xor
fcmovne
cmpsl
push
xor
pusha
mov
mov
and
aad
xchg
jl
pop
or
in
push
push
pop
out
cmp
call
decl
sbb
inc
pop
xor
add
fidivs
or
adc
inc
addb
dec
mov
ret
imul
test
lret
and
clc
fbstp
pop
fcmovu
in
shll
into
int3
dec
fs
dec
inc
rolb
ljmp
mov
test
insl
and
xchg
or
test
mov
cltd
bound
nop
notl
push
and
fs
mov
mov
xlat
aad
jg
mov
out
dec
mov
dec
sub
mov
mov
lds
jg
ret
sbb
dec
lret
or
out
adc
push
in
sub
scas
orb
mov
ret
ret
test
jecxz
jl
pop
out
test
imul
ja
or
push
add
push
mov
xchg
addl
pop
insb
add
shl
push
mov
jl
movsb
add
jmp
inc
mov
test
sub
pop
or
daa
nop
pusha
cwtl
leave
adc
jb
movsl
lret
stc
xor
inc
stos
in
jno
pop
push
cli
cld
add
jp
lods
out
fld
cmp
adc
mov
push
mov
dec
aas
out
add
lret
lahf
mulb
mov
xor
xor
mov
std
dec
divb
xor
jmp
mov
aad
repz
xchg
adcb
pushf
mov
cmp
mov
lock
out
mov
enter
mov
push
stc
jl
data16
sti
jl
ja
aas
xor
fsubl
mov
ja
inc
jae
and
sub
cmc
sbb
lods
cwtl
mov
mov
sub
mov
lods
movhps
push
test
pop
lcall
jb
cmpsb
outsb
scas
clc
mov
mov
imul
ss
fninit
out
xchg
lods
adc
jecxz
xchg
nop
outsb
mov
shl
js
mov
insb
test
mov
jnp
xor
pushf
or
test
int
and
dec
pop
mov
loope
push
xchg
data16
push
and
jecxz
push
in
push
leave
movsl
leave
mov
nopl
pop
and
push
jp
mov
and
aas
or
call
cmpl
popa
mov
cmpsb
and
scas
ret
int
dec
mov
and
cmp
xor
pusha
fistps
outsb
or
jecxz
inc
fnstsw
sarl
sahf
xchg
insl
ret
push
dec
in
pop
push
xchg
lds
rcrl
pop
or
push
cmpsb
jp
cmpsl
std
shrl
or
negl
cs
xlat
mov
inc
jae
lret
push
in
add
mov
xchg
rcrb
cmp
jne
lea
in
lock
test
add
xor
mov
xor
mov
mov
cmc
mov
loope
xchg
xor
test
out
push
mov
push
scas
int
mov
lods
into
sub
push
notl
jno
jnp
cmp
subl
xchg
pop
pop
push
notl
icebp
and
dec
cmpsb
pop
or
popf
scas
adc
ds
adc
or
and
mov
out
xor
dec
adc
stos
or
es
adc
lret
jg
dec
add
std
or
inc
out
dec
fnstcw
xor
or
add
fs
shl
jmp
push
js
jo
push
hlt
xor
or
mov
push
sub
mov
sbb
push
mov
cltd
fcomps
adc
shll
xchg
aad
mov
push
mov
xchg
in
andb
das
out
jmp
pop
je
decb
xchg
test
xchg
sbb
lret
pusha
xchg
cmp
xor
je
pop
imul
lea
sbb
dec
cltd
add
push
sbb
push
lcall
sbb
mov
or
decl
cmp
xchg
loopne
and
addl
adc
cmp
xor
cwtl
lcall
pop
mov
outsl
daa
cli
sbb
mov
ret
lea
scas
in
lahf
mov
xchg
aaa
repnz
mov
sbb
cs
stc
inc
push
cmp
inc
cmpsl
sbb
push
cmpsb
je
jmp
ja
ss
xchg
mov
je
xchg
xchg
addr16
jle
mov
lods
orb
cmpsl
xchg
shlb
jae
pop
popa
sbb
mov
outsb
js
cs
loop
xchg
dec
jmp
test
mov
ljmp
rcrb
mov
mov
cmp
jp
dec
adc
mov
orl
lock
cmp
scas
mov
add
inc
repnz
push
scas
inc
xor
xor
lds
mov
jmp
orl
mov
mov
or
dec
popa
sub
outsl
mov
aas
xor
fadds
outsb
das
cmp
out
test
scas
aas
test
in
and
sub
sbb
mov
pop
dec
mov
cmpsb
rorl
lret
into
lret
dec
loop
add
sub
sub
or
lcall
pop
sub
mov
out
cmp
xchg
adc
xchg
into
inc
enter
leave
into
cli
icebp
xchg
in
out
lret
ja
or
int
arpl
pushf
pop
test
test
mov
mov
jb
cld
sbb
out
movsl
leave
cli
sub
loopne
pop
sbb
adc
mov
std
lods
push
loope
or
mov
rclb
xchg
and
sub
and
filds
movsl
imul
mov
pop
imul
mov
and
sahf
jae
mov
daa
in
xchg
lods
rcrb
stos
pop
rorl
adc
lret
mov
cmp
jp
push
and
push
insl
fs
sti
aam
adc
or
xor
ds
mov
mov
imul
imulb
jmp
xchg
pop
sti
inc
jge
icebp
and
pusha
mov
js
cmp
pop
inc
sti
in
icebp
test
movsl
mov
stos
inc
add
aam
and
inc
and
loopne
pop
pushf
addl
insl
sbb
lock
mov
fadds
push
mov
mov
popf
mov
int
pop
mov
into
and
fwait
adc
adc
fstps
sbb
xor
pop
jmp
adc
mov
pusha
xor
cwtl
lods
dec
jecxz
lret
ss
rcl
pop
shlb
cmp
push
popf
jne
sbb
lret
xor
fs
mov
in
push
xchg
fildl
aaa
xor
mov
out
in
jno
add
dec
adc
icebp
mov
sbb
rcrw
pop
push
push
add
sbb
mov
nop
and
loop
repnz
pop
adc
mov
imul
lds
cwtl
sub
add
adc
into
jns
sub
nop
and
cmp
aaa
paddusb
inc
hlt
add
test
adc
test
orl
out
mov
test
push
jmp
or
sub
fstpt
les
ret
jae
pop
cmp
cmp
push
aad
add
cs
push
or
push
imulb
imull
insl
sub
in
jg
movsb
mov
das
out
ret
push
xchg
ficoml
cltd
rcrb
pushf
push
pop
dec
fwait
sub
mov
ljmp
int3
shll
fists
jge
add
call
dec
insb
es
mov
shlb
outsl
into
lret
push
sahf
mov
sarb
add
sbb
and
push
xor
mov
xchg
ja
out
fists
addl
cmp
dec
mov
pop
mov
sbbb
lcall
out
movsl
inc
lahf
push
cwtl
mov
imull
les
sub
adc
dec
cmp
gs
les
jb
xchg
adc
pop
pop
or
xchg
jns
cmp
decb
pushl
or
xor
sbb
inc
icebp
ret
sub
popa
popf
arpl
shll
sbb
xchg
adc
jae
shlb
int3
repnz
dec
pop
cmp
mov
js
cmpb
sub
push
adc
xchg
jle
push
data16
fidivs
popf
sbb
jae
mov
mov
mov
pop
jnp
push
or
pop
das
and
jne
call
adc
cmp
jb
mov
mov
inc
mov
aam
cmp
ljmp
jmp
and
and
pop
adc
pop
int
cltd
jg
mov
jle
pop
or
jb
mov
or
icebp
sbb
xchg
jmp
mov
hlt
sub
xchg
mov
mov
movsb
dec
gs
dec
jae,pt
mov
jg
xchg
vmread
jg
xchg
adc
andb
xchg
or
mov
inc
mov
je
loopne
ja
ret
lahf
mov
unpckhps
mov
mov
add
inc
insl
or
loope
fs
out
sub
fldcw
xor
outsl
fwait
je
push
jl
jp
sbb
xchg
nopl
mov
xchg
xchg
shl
lds
jmp
int
insl
cmc
call
leave
xor
sahf
aad
mov
std
mov
xchg
int
dec
adc
jecxz
ret
xor
jne
mov
outsb
inc
push
adc
push
mov
sub
addr16
dec
enter
cmp
ds
rorl
loope
xor
lahf
push
loopne
ljmp
push
mov
mov
sbb
cmp
repnz
mov
pop
sub
mov
insb
jmp
mov
add
push
leave
mov
shl
addr16
test
repz
or
mov
imul
push
sbbl
push
test
xchg
mov
sub
sbb
xchg
push
pop
push
js
mov
push
jne
cmpsb
pop
pop
xchg
lods
sbb
test
imul
cmpsl
adc
adc
mov
roll
push
shl
sti
cmc
dec
repz
jns
movaps
ror
aaa
mov
dec
push
jl
adc
in
or
sub
mov
mov
clc
inc
push
inc
jmp
leave
inc
test
in
jecxz
xchg
cld
xchg
mov
cmp
adc
call
shl
lods
dec
cmp
sbb
enter
pop
pop
mov
mov
dec
data16
sbb
push
cltd
push
lret
iret
add
test
shlb
inc
clc
lock
adc
mov
fstpt
mov
sbb
fcomi
cmp
xchg
inc
sti
cmp
sub
ret
pop
push
mov
cmp
jmp
ljmp
subb
test
mov
jne
das
xchg
aas
pop
dec
ja
test
push
sbb
pushf
es
int3
int
or
push
aas
test
std
fdivrl
or
ret
mov
jnp
ret
inc
mov
inc
sbb
pop
divl
data16
test
mov
adc
test
push
cmpsb
ljmp
fdivrs
pop
jle
test
mov
inc
inc
cmc
fcmovnbe
or
cmpsl
mov
push
sbb
push
mov
adc
mov
movsl
xor
stc
adc
ljmp
xor
fistpll
pop
or
adc
sub
ljmp
cmp
push
js
sti
sbb
adc
mov
fisttpll
enter
xchg
mov
push
mov
outsb
scas
decb
inc
cmc
lcall
js
mov
cmpsb
pop
inc
ss
or
loope
sbb
inc
shlb
fidivrs
jp
cmp
cmc
and
mov
mov
push
xchg
fisubl
sbb
jl
hlt
sub
xchg
or
sub
and
sub
sti
cld
sbb
test
adcb
adc
jmp
xor
xlat
fdivrs
leave
adc
add
test
jne
and
mov
int3
ss
mov
and
gs
xlat
test
mov
icebp
into
sbb
xchg
addr16
loop
mov
sub
and
imul
lds
inc
loop
adc
push
insb
jp
pop
ljmp
or
cmp
gs
cmp
jmp
aam
or
inc
mov
ss
xchg
adc
imul
mov
out
imul
out
cmp
gs
loope
aam
xchg
jp
push
test
mov
xchg
frstor
repnz
mov
lea
out
out
mov
push
cmp
leave
pop
mov
insl
mov
divb
les
mov
push
add
push
inc
mov
movsb
add
add
jnp
movsb
test
add
dec
dec
mov
insb
cmp
and
cli
std
es
into
inc
sub
xor
mov
clc
rclb
pop
divb
mov
inc
pop
sub
or
adc
adc
mov
cmc
and
ljmp
sbbl
push
cmp
fnstsw
test
sbb
mov
sub
or
xlat
mov
xlat
cmp
subb
push
popa
or
dec
std
ror
clc
add
shlb
sub
repz
pop
cmp
cmp
push
iret
ljmp
pop
sub
or
outsb
dec
adc
push
cmp
arpl
sbbl
mov
mov
push
jno
add
arpl
push
sub
mov
xchg
mov
mov
rcll
push
pop
cmpsb
aad
aad
rol
mov
bound
or
inc
jns
fs
loop
push
xchg
outsb
push
and
repnz
add
dec
int
add
sahf
mov
lods
insl
jecxz
jmp
clc
and
das
cmc
jno
sbb
in
aad
repnz
adc
mov
repnz
adc
push
scas
push
add
stc
daa
loopne
roll
std
fsubl
mov
sbb
mov
hlt
in
stos
pop
push
sbb
sarl
adc
mov
rorb
jae
inc
cmpsl
call
lahf
inc
hlt
dec
leave
clc
aaa
sbb
xchg
stos
or
cmp
jne
repnz
ret
fsubl
ret
daa
jl
inc
cltd
cmp
leave
test
jge
sub
aam
movsl
xchg
stos
adc
subb
lahf
loop
mov
cwtl
ljmp
in
out
loop
mov
fidivrs
push
and
test
lret
sub
xor
sbb
test
xchg
bound
loopne
inc
cmc
cwtl
adc
cmp
test
push
push
cmpsb
aad
mov
notb
fmull
sbb
mov
push
and
stc
in
lods
inc
sub
jmp
inc
pop
pop
lods
aam
xchg
repnz
mov
jne
mov
adc
sub
pop
mov
add
adc
cmp
aas
jnp
int3
bound
mov
rcr
in
ficoml
mov
fwait
push
lds
inc
das
out
push
sub
fstl
sbb
pop
xor
xchg
cmp
mov
adc
mov
mov
enter
ret
enter
in
fidivs
adc
mulb
cmpsl
jae
mov
push
inc
pop
out
xor
test
out
popa
inc
adc
pushf
sbb
add
or
xorb
mov
xlat
cmpl
lret
test
sub
stos
lock
ja
nop
pop
lret
jp
add
or
xor
shl
les
test
xchg
lcall
stc
rcll
add
loopne
iret
dec
rol
mov
pop
dec
mov
lret
sub
shl
enter
lock
or
mov
loop
mov
jmp
inc
shr
push
mov
filds
repnz
addr16
in
in
jge
jl
cmp
cltd
out
jp
test
adc
or
imul
dec
rcl
cltd
and
inc
sub
popf
mov
sahf
test
mov
mov
adc
add
insb
aaa
cli
pop
mov
ret
test
mov
mov
in
or
mov
push
xor
sbb
mov
adcb
jl
xchg
out
fs
mov
and
sub
ret
fs
or
enter
push
jns
dec
xor
adc
fildl
jge
sti
mov
or
insl
cmc
mov
ss
rcr
sbb
xorl
sub
cmc
test
aad
enter
mov
test
stos
imul
fisubl
push
into
mov
xchg
adc
sbb
inc
lret
mov
xchg
add
test
mov
cmp
add
sti
jnp
clc
or
aas
mov
and
into
jbe
ret
jns
add
adc
adc
push
jge
sub
call
push
pop
push
mov
mov
mov
mov
ss
mov
mov
xor
or
add
mov
jne
push
xchg
cmp
out
mov
xlat
mov
test
out
sbb
pop
lds
mov
or
xor
xchg
xchg
inc
ret
out
movsb
adc
shll
pop
cmp
movsl
aas
clc
adc
int
jl
xor
adc
cwtl
out
lea
sti
jbe
mov
push
gs
xchg
dec
mov
push
inc
push
test
mov
add
arpl
sahf
int3
iret
call
test
icebp
xor
and
and
and
sub
lea
pop
out
push
lahf
mov
fdivrs
jl
fidivl
es
mov
pop
cmp
out
xor
nop
sbb
sub
add
add
cmp
pop
or
rcrl
dec
pop
mov
xor
mov
push
gs
jb
stos
fcoms
bound
or
mov
sbb
sarb
pop
push
push
mov
inc
addr16
mov
jno
or
aaa
dec
xlat
repz
add
icebp
leave
stc
in
cmp
lea
dec
out
jb
ljmp
ljmp
xchg
fisubrl
fidivrs
rcll
pop
xchg
cwtl
push
shrb
xor
aad
lret
pop
add
inc
jge
iret
leave
nop
dec
push
in
jb
jle
test
xchg
add
dec
dec
pop
jo
leave
cmp
ss
adcb
dec
and
and
push
mov
mov
and
fistpll
rep
in
mov
jbe
stc
aam
js
xchg
mov
dec
add
inc
mov
call
lcall
ret
movsl
jecxz
xor
scas
out
in
push
cli
push
ds
ret
in
and
fmull
sbb
xchg
and
aad
out
inc
inc
pop
test
lods
andb
lret
enter
insb
aaa
push
mov
push
sbb
fidivl
xor
leave
js
mov
mov
jmp
ret
cmp
push
pusha
shlb
sahf
movsb
cmpsb
outsb
out
gs
push
test
xor
aad
in
pop
jo
dec
rclb
mov
js
cwtl
test
add
xor
es
push
xor
and
jns
xchg
or
mov
pop
in
sahf
sub
shll
mov
sbb
push
addr16
imul
lret
aas
adc
xchg
cltd
dec
aad
pop
pop
mov
mov
mov
lods
dec
outsb
cwtl
or
adc
insb
jb
lds
cld
test
sub
lods
xor
dec
sbb
das
fucomip
sahf
lods
cmpl
jecxz
rolb
xlat
mov
ljmp
cmpsl
std
lods
mov
xchg
sbb
mov
in
adc
scas
mov
in
out
pop
push
rclb
les
mov
xchg
data16
or
mov
shlb
lea
and
mov
push
out
fnsave
dec
xor
xor
push
add
xor
and
xor
pop
imul
push
or
inc
inc
xchg
mov
aad
inc
mov
cs
fsubrs
shlb
push
xor
das
es
add
aad
or
sub
pop
push
cmpsl
adc
mov
mov
pop
sarl
xchg
xor
out
dec
es
stc
mov
mov
xor
push
jge
jge
or
sbb
ficoml
in
inc
rorb
pop
adc
push
and
pop
ficoml
cmp
and
rclb
mov
adc
popa
lret
sarl
out
mov
stc
fnstenv
lret
or
and
mov
xorb
ret
mov
enter
test
add
aam
jno
les
stos
cmp
mov
inc
sub
arpl
clc
cmp
bound
cmp
inc
mov
clc
cmp
mov
xor
dec
inc
sahf
icebp
cmp
push
xor
pop
fadds
mov
mov
cmc
dec
mov
mov
pop
mov
mov
dec
mov
mov
aas
inc
jne
jno
call
xor
sub
push
xchg
mov
mov
or
ret
les
mov
push
dec
incb
add
lds
roll
filds
jg
xchg
add
lcall
rcll
push
lahf
aas
xchg
pushf
int
and
push
aam
or
stos
dec
aaa
push
jnp
mov
leave
rorl
shlb
sti
mov
data16
mov
mov
or
pop
mov
out
imul
and
mov
pop
xchg
into
int3
test
divb
and
les
adc
incl
les
push
scas
jg
pop
stc
sbb
dec
movsl
rorl
outsb
pop
push
insb
aam
cmp
and
push
ds
movsb
cmp
mov
xchg
sub
mov
push
adc
push
jae
fmull
pop
adc
jo
imul
shll
push
jmp
das
repnz
xor
mov
pop
push
cs
data16
loop
adc
push
mov
and
call
mov
add
je
lret
push
loopew
sub
or
test
cwtl
sub
mov
jp
mov
es
xchg
test
daa
fcoml
mov
call
movsb
test
xor
inc
or
pop
in
xchg
or
bound
fsts
dec
mov
adc
xlat
out
icebp
xor
fldt
mov
mov
jecxz
jnp
rcr
into
fs
aaa
pushf
out
mov
movsb
clc
and
sbb
cmpsb
mov
add
fcoml
lcall
or
or
mov
jle
call
cmp
test
icebp
mov
jp
lods
out
cmpsb
std
leave
jno
in
ret
push
dec
push
or
xlat
test
fwait
cmpsl
test
xor
ja
jmp
outsl
inc
gs
pop
fs
cmp
lods
push
fisttpll
ja
mov
adc
jno
out
bound
cld
jb
pop
dec
mov
pop
push
inc
or
sbb
ljmp
cmp
xchg
imul
jbe
or
xor
ss
daa
fs
sub
in
out
ja
jecxz
mov
call
jb
cli
mov
jl
in
cs
mov
insl
cld
sub
pop
in
jge
fs
ds
loopne
xchg
xchg
movsb
fisttpll
pop
lret
jge
fs
xchg
aaa
push
jb
xor
ljmp
push
mov
mov
jnp
in
xor
data16
sar
aam
mov
push
dec
loope
mov
xchg
inc
xor
test
mov
xchg
imul
xchg
lcall
nop
mov
mov
repnz
add
pop
inc
popa
push
fldcw
icebp
rcll
popa
dec
in
add
xor
adc
jge
out
cmp
mov
mov
push
pop
lock
les
add
bnd
loope
sbb
clc
stos
scas
inc
push
inc
jbe
dec
movsb
and
fs
jne
xchg
sub
loopne
jl
into
sub
and
pop
xchg
enter
ds
push
jge
pushw
enter
sub
es
pop
test
out
or
adc
es
fdivrp
mov
adc
and
in
imul
lcall
dec
mov
js
shll
xlat
pushf
sbb
ret
hlt
xchg
dec
jg
and
jns
add
sub
fdivs
sbb
sbb
fstps
pop
leave
dec
lea
jo
ror
iret
fs
inc
mov
and
sahf
xorl
shr
repnz
cwtl
sub
repnz
mov
fildl
ss
push
dec
shlb
xchg
scas
enter
fcmove
repz
lods
icebp
push
outsb
add
jae
and
or
mov
cmovae
mov
pusha
jge
or
aas
push
loop
mov
test
and
sbb
inc
lock
push
sbb
mov
adc
rcl
sbb
jae
sub
lea
push
or
rcrl
push
add
pop
mov
ljmp
jmp
push
sarl
iret
jmp
mov
aad
cmp
adc
jns
lock
mov
cmc
jno
dec
clc
repnz
and
add
or
dec
pop
push
inc
aad
sti
push
push
pop
je
adc
mov
jecxz
push
mov
ja
cmp
fmull
out
js
pushf
xlat
lcall
je
dec
call
shrb
pop
mov
leave
mov
ja
call
and
push
sub
sbb
jae
mov
push
into
fstl
clc
add
das
push
insl
cmp
scas
jecxz
sub
test
pop
pop
popf
push
mov
or
cmp
xor
push
out
rcrb
xchg
push
rorl
cli
fistl
mov
jp
jmp
push
xor
leave
pop
in
mov
fistps
mov
pushf
out
pop
mov
subb
push
ficomps
jle
sub
mov
dec
repnz
pop
sbb
or
and
imulb
or
hlt
into
stc
mov
xor
in
cmp
insl
push
cmp
pop
cmp
mov
inc
lods
int3
xchg
push
cmp
lahf
rolb
roll
ja,pt
sub
sbb
sub
mov
push
aad
or
push
fwait
add
repnz
xor
jo
popa
ds
mov
fimuls
mov
in
sub
push
leave
xor
inc
xlat
adc
imul
mov
adc
pop
sbb
jp
rcrl
push
sbb
lret
leave
sti
fnsave
mov
inc
jge
push
cltd
call
cs
xchg
imul
fwait
lcall
mov
mov
loopne
inc
adc
add
or
shl
ljmp
cltd
aaa
jmp
add
int
sbb
xchg
mov
or
test
inc
in
inc
pop
mov
sub
pop
leave
clc
out
outsl
sub
mov
aad
test
imull
cwtl
call
insb
movsl
data16
out
out
sub
push
stc
rol
sbb
icebp
sbb
mov
sub
or
cmp
push
dec
inc
or
sub
or
cmp
jecxz
mov
dec
jp
dec
mov
dec
xchg
push
push
imul
mov
std
adc
cmp
inc
and
sbb
pop
scas
insl
cld
xchg
in
inc
rcrb
mov
nop
out
repnz
fwait
addr16
aad
ret
test
test
adc
mov
int3
or
lret
cmpl
mov
sbb
push
adc
pop
mov
sub
das
jno
mov
jmp
fistl
test
push
cmp
sub
enter
mov
mov
push
jns
or
pop
scas
sub
or
sbb
int3
lahf
call
cwtl
inc
movl
dec
out
mov
nop
or
pop
sub
imul
mov
rcl
jb
inc
or
cmp
fildl
jb
in
cmpb
lret
movsl
mov
clc
lods
imul
mov
leave
inc
add
in
mov
mov
adc
insb
sub
icebp
mov
das
andl
xchg
clc
or
fdivrp
in
sbb
dec
das
xor
lds
or
push
mov
adc
jnp
jnp
aas
xchg
call
nop
insl
jnp
or
adc
inc
aad
push
sub
mov
or
or
jae
insb
inc
stc
inc
test
fs
push
fstpl
adc
out
imul
or
aad
mov
sub
xor
jmp
mov
pop
xchg
xor
cmp
cmp
dec
jno
xor
mov
mov
out
icebp
es
sbb
cs
jmp
int
push
and
int3
lds
orb
cmpsl
aam
jge
xchg
dec
pop
cmp
inc
repnz
dec
cmc
lds
nop
gs
lcall
cmp
fisttpll
adc
jno
mov
arpl
outsb
arpl
inc
sub
sub
clc
mov
shl
divb
dec
test
jbe
lea
test
mov
loop
cwtl
jmp
xor
stc
cmpb
sub
ljmpw
and
mov
cs
push
and
pushf
dec
jmp
fs
mov
out
sti
sub
and
gs
mov
mov
lcall
adc
cmp
or
out
mov
jl
aas
adc
xchg
int3
mov
add
lret
sahf
je
mov
aas
cmc
dec
dec
daa
mov
outsb
outsb
mov
dec
xchg
nop
insl
adc
cmp
enter
sub
aaa
call
std
adc
psrld
imul
mov
arpl
cwtl
gs
sarb
push
adc
pop
dec
int3
out
rep
mov
call
testb
int
lods
mov
adc
or
mov
sub
lods
in
jo
stc
jle
add
mov
sti
cltd
or
hlt
or
insb
cwtl
mov
popf
add
dec
mov
cli
in
out
xorl
sbb
jle
insl
and
xor
out
imul
rcrb
xchg
mov
pop
inc
pop
mov
add
sbb
jecxz
jbe
fwait
outsb
jg
xchg
or
inc
sarb
sbb
push
and
pop
nop
cmp
push
jnp
mov
mov
aad
pop
push
loop
inc
out
stc
xchg
inc
or
test
stos
sbb
push
mov
fisttpl
dec
into
mov
pop
adc
push
test
inc
push
adc
sbb
adc
add
xor
jge
adc
and
stos
sbb
andl
lods
sti
push
popa
cmp
push
xor
dec
push
popf
pushf
lcall
xchg
mov
rolb
pop
or
lret
test
rorb
inc
sbb
repz
stos
sbbl
jmp
xchg
xchg
aaa
stc
fcom
daa
xlat
andl
ds
cli
jbe
jmp
sub
cmc
inc
mov
dec
fldenv
loop
push
inc
stos
lods
jmp
hlt
sub
xchg
xchg
lea
in
dec
inc
cltd
inc
xor
imul
xor
jae
jns
out
xchg
dec
xor
xchg
or
lods
fsincos
lahf
mov
pop
jns
ljmp
inc
imul
mov
popf
adc
xor
cmpsb
or
push
imul
mov
fistps
sub
arpl
insb
mov
jge
hlt
xchg
sbb
xchg
jbe
stos
push
sub
in
filds
sbb
mov
aad
mov
pop
gs
or
pop
roll
stos
push
cmp
sbbb
pop
or
in
aam
mov
jl
mov
jl
stc
in
xchg
push
cmpsl
in
jbe
sub
push
lods
and
lcall
fimull
dec
fdivrl
sbb
repz
pusha
test
jmp
lock
sahf
insb
cs
popf
data16
testb
orb
je
jp
mov
js
jns
add
cld
leave
jmp
pop
fld
and
jne
xchg
push
sbb
or
jb
mov
inc
les
xor
and
xchg
jl
stos
inc
sarl
xchg
and
adc
jg
mov
js
mov
addr16
iret
fiaddl
in
push
addl
sub
pop
or
pop
daa
jg
orb
jge
scas
cmc
sub
das
xor
push
gs
push
or
lock
dec
inc
push
cmp
inc
fisttpl
inc
mov
mov
cs
scas
mov
jge
lock
xchg
ret
pop
in
ficoml
and
pop
add
dec
movsb
jmp
mov
cltd
es
leave
mov
fildl
and
int3
pop
add
jmp
sbb
sub
push
dec
mov
negl
mov
out
js
sbb
mov
cmc
lahf
adc
jb
mov
jmp
jmp
popf
xchg
in
push
test
push
outsb
xor
adc
and
push
in
mov
out
jae
add
push
loop
xchg
xchg
mov
jmp
and
and
inc
rolb
mov
dec
jge
sbb
sub
mov
stc
jl
test
je
sub
popf
jb
pop
data16
inc
dec
movsl
lret
ficoms
fldenv
mov
popa
lock
fwait
fwait
adc
add
xchg
inc
dec
movsl
pushf
xchg
cli
sbb
add
xor
push
push
sti
push
lret
xchg
and
pop
cmp
push
int
xchg
or
cmp
outsl
xor
mov
adc
test
stc
sbb
push
sub
add
xchg
popf
add
pop
pop
test
fmulp
inc
test
mov
push
xchg
mov
mov
leave
notb
lcall
pop
fsubrs
mov
mov
fcmovbe
sbb
pop
lock
clc
jb
cmp
sbbl
jmp
mov
jnp
xor
dec
inc
add
mov
fstl
mov
dec
outsb
lahf
ret
xchg
dec
call
inc
jne
xchg
loop
outsb
mov
jmp
outsl
jnp
fwait
into
dec
lahf
stos
out
mov
mov
fdivr
or
movsl
adc
pop
in
cmpsb
and
inc
adc
subl
dec
and
inc
cli
out
mov
adc
ficomps
mov
and
les
jae
pop
pop
sarb
push
mov
sbb
popa
test
jo
inc
mov
jns
xchg
dec
das
lds
mov
sub
pop
movsb
push
mov
out
inc
xchg
pop
xchg
outsl
jl
lahf
sar
incl
into
mov
lds
pusha
fxch
dec
ret
push
jmp
iret
pop
imul
es
vmwrite
adc
pop
sbb
add
dec
push
add
dec
fsincos
adc
dec
mov
data16
stc
test
jmp
sbb
sub
mov
jnp
fdivs
cld
stos
or
and
push
mov
dec
mov
mov
int
jno
int
jae
arpl
mov
hlt
dec
out
movsb
jmp
iret
int3
insb
mov
shlb
mul
sub
add
jmp
inc
dec
mov
jb
ljmp
insl
out
mov
inc
jnp
inc
es
inc
out
inc
cld
jno
or
and
inc
and
and
test
or
jmp
add
outsl
cmp
dec
dec
rol
mov
cld
pop
in
cli
stos
pushf
repnz
fwait
mov
je
push
scas
lcall
mov
jo
aam
cmc
mov
mov
std
cmp
mov
xchg
mov
rcll
cmp
cli
sub
and
out
icebp
aad
xor
adc
outsl
adc
pusha
stos
push
xlat
gs
fs
add
shlb
cs
cmpsl
sub
das
sbb
in
or
decb
adc
fisubrs
add
xlat
imul
pop
dec
std
pusha
push
and
mov
push
cli
fistpl
add
mov
adc
lahf
aam
add
pop
sub
adc
push
xchg
int
adc
mov
aam
jnp
pop
mov
rol
mov
mov
dec
push
push
adc
mov
inc
cld
out
int3
lret
cltd
mov
add
or
addl
dec
cwtl
lods
dec
push
dec
inc
cwtl
jg
dec
jmp
jl
mov
dec
pop
test
push
cld
scas
cmpsl
gs
in
outsl
cmp
cs
lret
data16
cmp
movb
or
jecxz
jge
push
clc
jg
jae
mov
sti
xlat
scas
push
inc
sub
fnsave
jl
xor
mov
insb
mov
aaa
js
jae
mov
xchg
mov
mov
lea
std
lods
sbb
pop
aam
scas
lods
addl
sbb
leave
adc
mov
jge
jnp
mov
mov
aad
dec
cmp
adc
prefetch
shrl
push
and
pushf
lret
jns
mov
jnp
into
roll
cwtl
movsb
jnp
cmp
and
lret
inc
cmpsb
lahf
jne
push
lahf
inc
sbb
rcl
sub
out
jne
imul
inc
mov
jns
cmpl
das
jle
sbb
mov
adc
fmull
popa
inc
mov
ret
cltd
in
sub
out
sbb
dec
shlb
xchg
sub
xchg
push
push
sbb
xchg
jg
mov
loope
roll
clc
pop
test
sub
mov
sbb
sub
int3
ret
push
dec
dec
and
pop
mov
insb
push
fwait
dec
xchg
scas
out
fdivrl
fst
lea
push
xchg
inc
ss
jo
cmp
and
adc
addr16
popf
bound
push
repnz
pop
jmp
jno
ja
lcall
cmc
mov
push
add
mov
nop
cli
mov
ljmp
inc
dec
jle
test
jle
mov
data16
mov
and
negl
in
mov
sub
pop
in
out
jno
orb
out
arpl
xor
movsl
pop
push
dec
out
or
xchg
outsl
aaa
loope
aaa
inc
mov
cli
popf
enter
das
loope
pop
add
daa
test
push
cli
popa
hlt
test
inc
inc
jns
shrb
fildl
push
cli
shr
jbe
mov
incb
pushf
lds
or
mov
dec
push
and
inc
in
sbb
mov
adc
push
test
bnd
flds
push
repz
push
jae
mov
dec
or
aas
sbb
jp
mov
cld
in
push
mov
xor
andl
jle
jae
mov
push
fnsave
sbb
jge
in
xchg
test
shll
sub
sub
push
mov
push
inc
movsl
dec
loope
jnp
cmp
outsl
ds
in
lea
mov
dec
mov
sti
out
popf
js
add
inc
xor
mov
ret
clc
int3
xchg
enter
adc
mov
push
sbb
icebp
shlb
inc
push
cmc
inc
arpl
and
ror
sbb
mov
lret
and
jae
dec
sti
xchg
cmp
mov
mov
insb
pop
jge
lahf
cmp
not
mov
xor
and
push
std
repz
inc
jb
fincstp
aaa
fs
dec
pop
ss
and
cmp
lods
les
cmpsb
cmp
nop
xor
scas
clc
sar
int
jbe
mov
inc
outsl
or
sub
jo
mov
sbb
ss
dec
push
dec
xchg
add
sti
pop
gs
push
sti
xor
sub
fcoml
frstor
lret
js
test
dec
subb
push
lcall
jno
js
outsl
xchg
ljmp
stos
sbb
pushf
cmp
sbb
test
mov
inc
aad
aam
inc
ljmp
add
cmovne
and
jns
mov
add
inc
sub
nop
aad
shl
pop
and
sbb
sbb
jno
dec
ljmp
inc
popf
mov
adc
popa
shlb
pop
pop
imul
inc
pop
mov
leave
fnstsw
xor
mov
xchg
add
jbe
out
cwtl
imul
in
cld
jl
flds
dec
fnstenv
fsubr
rclb
jmp
adc
lcall
sbb
mov
out
rolb
cmp
fistpl
data16
jg
mov
inc
adc
aaa
jg
shr
dec
outsb
or
stos
pop
jl
notl
push
push
sbbb
mov
sbb
fsubs
out
mov
sub
or
sub
pop
imul
mov
out
xchg
adc
and
and
pop
or
das
loope
add
pop
cmp
test
xlat
lods
mov
in
and
sub
jb
xchg
mov
scas
xor
cli
jle
js
je
xor
inc
xor
mov
aas
test
aaa
xor
aad
aad
lahf
adc
movsb
mov
loope
out
inc
add
ss
jmp
dec
or
pusha
xor
xchg
xchg
push
fldt
fs
leave
nop
in
sub
loopne
mov
es
xor
pusha
xor
xchg
fnstcw
jnp
jle
ret
out
dec
stc
sub
sub
ss
mov
add
cmp
sti
cltd
xor
adc
gs
cmc
mov
clc
xchg
lahf
cld
testb
xor
enter
add
ficompl
aas
popf
sub
mov
lret
or
lcall
fwait
inc
fwait
mov
and
enter
loop
sbb
lahf
inc
pop
dec
in
insl
jnp
clc
test
loope
and
sub
daa
adc
outsl
pop
add
xorb
shl
decb
cmpsl
inc
mul
int
adc
mov
out
shlb
mov
inc
mov
push
insb
sbb
lods
cmp
enter
xchg
jns
dec
xor
dec
out
std
test
mov
cltd
pop
adc
xor
pop
rcll
pop
mov
dec
cmp
jns
cmp
mov
push
test
cmpsb
push
pushf
mov
mov
flds
and
sbbb
inc
lret
out
push
xchg
out
repz
sub
fs
rclb
rorl
outsb
data16
insl
mov
test
sbb
js
icebp
addl
fistpl
mov
nop
fidivrs
ljmp
movsl
ja
mov
inc
idivb
loopnew
xchg
aam
mov
sbb
aad
adc
enter
pop
jne
mov
aam
sub
movsl
jne
fs
out
outsb
mov
in
mov
xchg
scas
insl
or
mov
lcall
mov
jns
imul
scas
xchg
sbb
enter
push
sbb
and
jl
in
stc
add
movsb
dec
dec
repz
lock
cmpsl
stc
and
lds
fimuls
inc
mov
xor
data16
mov
repz
mov
shl
test
sub
das
repz
push
pusha
outsl
dec
jae
loop
sub
jp
daa
test
inc
dec
mov
out
clc
pop
mov
jecxz
repnz
popf
aad
dec
push
pop
ret
test
popf
mov
sbb
ss
mov
and
test
leave
dec
adc
into
scas
mov
pop
push
xor
pop
pop
inc
mov
fsubs
inc
sbb
jbe
mov
scas
push
push
test
mov
sub
push
dec
sbb
cmpsl
jne
aas
or
outsl
pop
dec
cmpsl
mov
mov
push
lcall
in
jb
lds
and
jnp
aas
push
push
pop
popa
dec
adcb
jmp
xchg
cmp
ja
fldcw
pop
addr16
int
std
mov
shl
sti
test
jge
inc
scas
stc
dec
cmp
call
imul
movsl
test
lret
cmp
lahf
cmp
push
jmp
je
call
fcmovb
fcomps
inc
das
push
pop
cli
xor
mov
sbb
sahf
mov
mov
cs
data16
sbb
out
and
push
out
out
not
es
mov
das
cmp
mov
inc
loop
sti
cmp
mov
popf
int
dec
cltd
cmp
pop
mov
fdivr
pop
ljmp
sbb
cmp
out
and
loope
add
sbb
loope
xlat
dec
fisubs
mov
ja
mov
in
adc
daa
or
jbe
or
and
mov
ret
je
insl
mov
fstpt
lsl
nop
cltd
sbbb
jno
xchg
dec
stos
ret
daa
dec
popf
mov
lods
in
adc
pop
outsb
pop
loop
loop
adc
or
loopne
orb
adc
mov
out
dec
sahf
pop
jle
mov
movaps
sub
test
lahf
hlt
pop
cli
mov
mov
ret
rcrl
in
lock
lcall
loope
push
addb
fs
jmp
mov
push
aas
inc
mov
cmc
jmp
push
and
cmp
push
addb
scas
jecxz
sbb
aad
cwtl
aad
sbb
in
dec
adc
push
sbb
out
mov
movsb
sub
xchg
cmp
jl
hlt
dec
movsb
lods
push
fcomps
push
adc
sahf
add
jle
push
mov
push
jne
mov
arpl
mov
leave
sbb
sbb
bound
push
loopne
sub
cmpsl
adc
stc
aaa
xor
sub
cmp
add
xchg
inc
dec
pop
repz
sub
inc
cwtl
push
stc
lahf
adc
ret
fldcw
dec
dec
mov
mov
pop
mov
into
pop
dec
push
cmp
sub
sub
in
insb
ss
xchg
rclb
push
orb
adcb
out
je
mov
sbb
add
in
cmp
mov
inc
cmp
cmpsb
call
xlat
xchg
adc
inc
insl
rcll
add
fsubs
cltd
cld
sub
test
std
shll
sub
mov
mov
and
mov
int3
ljmp
mov
dec
fmulp
sub
std
ret
jmp
push
mov
adc
inc
cltd
mov
push
lcall
fldt
aad
loop
sbb
hlt
popa
imul
push
lds
mov
repz
ja
cmc
dec
xchg
or
mov
popf
call
push
xor
ss
fsubr
aaa
cli
pop
cmpsb
cmc
sti
out
inc
lock
clc
pusha
repnz
mov
add
mov
sub
jl
loope
mov
sbb
fisttpll
pop
ficomps
in
dec
dec
cmp
mov
out
dec
or
xor
sahf
fdivr
lcall
mov
cli
xchg
call
pop
push
push
add
xchg
scas
pop
ret
cmp
call
mov
mov
sahf
cmp
jmp
nop
out
and
ja
add
rcrb
jecxz
and
sub
cmpsb
mov
mov
push
ljmp
dec
cmp
ret
orl
je
pop
xorl
jbe
jne
mov
fldenv
inc
pop
stos
mov
lret
test
cwtl
adc
ret
mov
in
cmpsb
jge
imul
fistl
mov
lahf
repz
xchg
js
addb
jmp
xor
call
pop
into
inc
cmp
adc
pop
dec
lcall
and
and
push
pop
mov
loope
push
push
mov
jle
jmp
arpl
sbb
loopne
add
test
add
outsl
pop
inc
nop
out
mov
inc
jge
push
in
adc
mov
adc
pop
add
fbld
cmpsl
and
fwait
cmp
adc
dec
sarl
mov
in
ss
jnp
bound
mov
mov
sub
into
lods
in
jecxz
jo
stos
dec
mov
jae
add
mov
fdivl
mov
mov
mov
pop
cmp
mov
fcoms
pop
imul
imul
rorl
pusha
pop
mov
mov
addr16
sbb
mov
leave
mov
push
jmp
lret
sbb
sbb
jb
mov
xor
add
add
xor
inc
out
inc
aam
pop
mov
loop
in
xor
xchg
lods
adc
jmp
adc
nop
cmp
std
xor
mov
xlat
push
xor
ret
mov
test
es
mov
into
mov
xor
cmp
lahf
xchg
pop
pop
cmp
pop
or
push
or
cltd
pusha
xlat
std
inc
push
loopne
sub
in
cmc
dec
inc
inc
add
adc
dec
mov
xchg
cli
movsl
lods
mov
push
lret
dec
mov
aaa
add
pusha
and
sbb
and
xchg
jp
mov
xchg
inc
push
xchg
js
and
test
cmp
sub
cltd
stos
out
dec
test
pushf
fs
push
das
xor
sub
jle
pop
lea
push
iret
ds
loopne
in
and
clc
mov
or
adc
out
imul
fs
fldl
mov
xchg
and
jmp
fwait
out
jmp
out
lret
movsl
loopne
sbb
inc
shl
loop
cmc
divb
rcll
sahf
jns
in
idivb
repnz
iret
add
sub
xor
mov
xchg
sbb
sub
in
lcall
lret
hlt
ds
cmpsl
rcr
fs
push
bound
jmp
jle
jl
mov
das
pop
and
add
mov
pop
pop
and
mov
cs
test
insl
cmp
int3
bound
cwtl
dec
pop
pop
es
test
or
and
push
pop
xchg
pop
xlat
pop
pop
dec
movsb
les
inc
into
les
pop
xchg
popl
pop
std
lock
insb
adc
mov
dec
jp
es
enter
lret
jb
pop
cmp
shrl
pop
loopne
pusha
mov
imul
xor
movb
mov
xor
xor
push
addb
add
push
ja
insb
rclb
jp
adc
lods
dec
outsl
lods
insb
movsb
mov
dec
shlb
mov
sub
lea
xchg
pop
es
adc
stos
inc
mov
dec
fistps
fbstp
cmp
shlb
call
mov
sub
inc
push
in
cmpl
jecxz
icebp
ds
sbb
lret
cmp
jp
lea
and
leave
pushf
hlt
push
xchg
sbb
stos
cld
xchg
add
repz
jnp
mov
adc
mov
dec
add
out
pushf
mov
ret
pop
pop
jp
fdivp
dec
repnz
insb
mov
stos
jle
or
ficoml
cmp
sub
push
xchg
lods
xchg
in
sbb
xchg
jnp
cli
adc
pop
js
loopne
sub
or
sub
repz
xchg
xchg
or
adc
cmpsb
pushf
xor
sbb
xchg
aaa
dec
pop
push
fistpll
xchg
pop
jno
lahf
js
push
std
testb
ja
jnp
lcall
xor
std
or
xchg
adc
push
jae
mov
lret
push
mov
dec
mov
dec
and
xchg
sub
xor
push
jmp
lds
sub
pop
xlat
sahf
push
mov
cmpsb
jecxz
jmp
sub
xchg
mov
or
in
pop
mov
pop
adc
pop
xchg
mov
jle
pushf
mov
or
insl
es
mov
stc
outsl
jne
cmp
outsb
fptan
sbb
dec
or
push
in
outsl
mov
cmp
cmp
cmp
push
pslld
sahf
mov
sbb
jbe
or
push
push
or
inc
xlat
sarb
popa
bound
mov
push
int3
push
je
jne
gs
sbb
pop
inc
icebp
cmp
adc
pusha
and
fcomp
test
jns
lret
subl
push
lods
lds
add
sahf
daa
mov
lds
insb
fisubrl
mov
in
add
ss
pop
in
aas
pushf
mov
out
leave
dec
xor
out
pop
adc
jmp
mov
stc
mov
sub
jno
shr
xchg
loop
repz
or
inc
dec
pop
jo
fildll
out
dec
sub
xor
jnp
xchg
into
push
xchg
mov
sub
push
stos
loope
push
mov
cmp
pop
cs
popa
test
jmp
cltd
mov
mov
stos
mov
std
mov
mov
movsb
dec
addr16
popl
popf
cmpsl
ljmp
hlt
mov
add
pop
add
push
lds
mov
arpl
div
subl
inc
pop
push
xchg
testb
pop
icebp
mov
add
out
mov
popa
es
push
ret
push
add
xor
push
and
mov
or
mov
push
mov
aas
sarb
insl
fsubrl
jge
push
push
mov
sahf
sub
dec
mov
pop
xlat
cvtpi2ps
jecxz
mov
or
in
lahf
out
cmp
inc
push
xor
sbb
mov
fdivl
mov
mov
fsts
sbb
cltd
inc
std
mov
cmp
adc
fstpl
pop
inc
out
push
xorl
xchg
aad
ret
jb
adc
adc
mov
sbb
leave
mov
xor
add
dec
setbe
pop
xchg
cld
jecxz
xor
jns
fmul
and
pop
mov
push
mov
es
shrb
mov
adc
loop
rcpps
pop
jo
mov
loope
iret
fiaddl
sbb
push
mov
xchg
out
or
pop
sbb
mov
xor
std
or
pop
test
jbe
or
xor
addr16
dec
add
ljmp
pop
mov
test
pop
lds
sub
daa
jmp
dec
cmp
adc
pop
cmc
pop
and
pop
cmp
push
jo
and
sub
lds
xor
in
mov
push
popf
je
sub
or
xchg
cmc
xchg
scas
cmc
out
fdiv
roll
jns
fnsave
rcrb
mov
jl
xor
outsl
fbstp
lcall
or
cmp
or
rcl
cmpsb
and
cmp
mov
das
rorb
and
mov
popf
andl
mov
pushl
adc
nop
addr16
push
mov
inc
add
or
ja
pop
mov
in
sarb
aaa
jg
pop
adc
call
adc
cmp
push
loop
dec
mov
lret
les
pop
cltd
and
push
add
pcmpgtb
test
dec
scas
and
adc
repnz
repz
and
jg
push
jg
push
fnstenv
jge
add
shrl
rorb
push
aaa
dec
mov
in
mov
mov
pop
push
outsl
or
or
arpl
lret
movsl
movsl
ds
jae
sub
nop
test
push
dec
push
mov
dec
out
jbe
xlat
test
aad
push
mov
rcrl
xor
out
push
orl
jecxz
mov
fdivs
xor
shll
test
inc
mov
or
adc
fs
mov
cmpsb
mov
and
mov
add
inc
mov
xchg
cli
and
lds
mov
repnz
das
loopne
pop
gs
movb
ret
jb
es
cmp
lret
outsb
cltd
ficoml
mov
sbb
dec
popf
cmp
fidivl
and
mov
add
out
dec
jne
sbb
js
test
les
mov
or
sub
stc
mov
popa
sbb
adc
jne
mov
inc
mov
rcll
sbb
stos
cmp
shlb
arpl
jne
pop
push
dec
adc
xor
lret
mov
pop
ficoml
add
jne
in
popf
xchg
roll
sbb
sub
jp
dec
mov
out
fs
andl
jge
push
movl
hlt
mov
ret
cli
push
outsb
jno
pop
sub
in
icebp
pop
push
aam
outsl
icebp
sub
add
scas
jle
xor
sti
mov
mov
out
push
jg
fiadds
xchg
int3
xchg
data16
pop
jp
push
out
in
loop
or
and
sub
ljmp
rcl
and
mov
pop
mov
repnz
mov
mov
mov
push
sub
mov
idivl
or
xor
imul
fs
sbb
cmp
xor
orb
fisubs
outsb
add
jge
pop
lock
sbb
xlat
dec
loop
jmp
arpl
aas
add
add
or
aaa
cmp
cltd
cmp
subl
add
add
fcmovb
and
xlat
enter
scas
sub
fcmovu
add
jne
sahf
and
cltd
cs
mov
je
cmp
add
shlb
sti
test
fbld
das
roll
pop
sahf
hlt
jnp
lahf
dec
data16
loopne
imul
cli
sub
jne
dec
push
jno
mov
mov
cli
pop
cmp
cmp
in
jp
jbe
or
sub
inc
out
and
and
adc
aam
fwait
arpl
mov
test
fimuls
xchg
add
scas
shl
ret
int3
es
test
dec
or
imul
sub
cld
iret
inc
mov
out
or
and
mov
xor
ret
inc
or
rol
dec
lods
inc
ss
out
addl
pushf
js
loope
pop
lcall
negb
or
push
ja
inc
popf
and
or
jmp
nopl
cltd
or
xchg
push
inc
ljmp
jl
sub
cmp
jl
xchg
in
leave
cmp
ss
xchg
jns
push
push
sbb
xor
call
inc
pusha
icebp
cmp
mov
mov
shlb
mov
sbb
jp
test
mov
cmpsb
sub
out
cmp
or
scas
test
sahf
les
je
mov
mov
inc
push
jge
sub
es
test
cs
add
and
test
lods
sbb
mov
out
stos
push
sub
or
xchg
fs
ljmp
add
outsl
enter
scas
mov
jnp
dec
int3
sarl
push
loope
std
dec
push
loop
mov
add
dec
mov
dec
outsb
xchg
sub
lods
repnz
jbe
dec
mov
popf
sti
jmp
lahf
xor
mov
xchg
add
je
jns
push
data16
sbb
cmpsb
arpl
fdivs
cmp
jp
xor
inc
es
movsl
in
mov
lcall
xor
cmp
jo
rcrb
popf
mov
jge
popf
sub
jo
xchg
mov
mov
pop
mov
mov
xor
insb
cli
and
fwait
idivl
push
pop
out
mov
jbe
loope
mov
jbe
sbb
out
push
push
sarb
insl
xchg
orb
clc
sarl
add
inc
into
mov
fsubrl
jae
shlb
sahf
mov
cwtl
mov
cli
xor
dec
sbb
mov
pop
xchg
fucomi
jnp
push
fsub
mov
insl
js
sbb
repz
lahf
loop
js
pavgw
sub
roll
lret
decl
fiaddl
inc
adc
in
lcall
push
dec
mov
mov
bound
sub
test
fisubrl
imul
jmp
sub
jp
idivb
imul
test
ret
push
pop
repnz
inc
xor
xlat
lea
dec
sub
test
mov
xor
xor
xor
sbbl
ja
repz
xlat
sub
mulb
xor
push
jbe
sbb
int
sub
xor
lods
aad
mov
xchg
lods
xor
popf
xchg
outsl
mov
mov
test
mov
xchg
sub
mov
inc
and
shlb
push
shrb
imul
hlt
hlt
jmp
sbb
xchg
js
pop
pop
aam
xor
repz
mov
push
add
push
dec
arpl
mov
arpl
iret
aad
jp
push
xor
push
or
ss
dec
insl
jecxz
lret
ljmp
push
test
mov
call
dec
inc
mov
sub
ss
sub
lcall
out
pop
push
xor
jbe
push
dec
fisubrl
cs
scas
dec
or
inc
jmp
mov
cmc
and
rcrb
pop
add
push
es
sub
enter
or
cmpsb
and
stos
xchg
add
jmp
jmp
pusha
fistpl
inc
sub
insl
jl
pushf
icebp
stc
or
and
clc
add
jp
sbb
shlb
or
faddl
and
les
add
pop
fcmovnbe
int
mov
ret
ja
dec
sahf
ljmp
inc
fisubrl
jge
adc
and
mov
add
les
in
xchg
enter
adc
cmc
scas
lahf
fisubrs
out
push
leave
mov
jl
cmpsl
mov
jle
imul
test
pop
push
inc
add
out
int
out
int3
int
dec
daa
adc
adc
movsl
lea
or
pusha
aad
push
pushf
pusha
ds
int
rsm
mov
test
fistpll
repnz
adc
clc
loope
nop
icebp
xchg
push
into
and
test
jb
sbb
sub
sbb
dec
sbb
jl
pop
icebp
cmp
adc
in
mov
jno
add
add
stos
pop
nop
and
clc
mov
push
clc
add
xchg
fisubl
push
cmpsb
jg
scas
es
inc
nop
adc
pop
fisttpll
out
push
fs
rcrl
lds
inc
cmpsb
dec
xchg
pop
dec
add
popa
pop
and
jns
jb
mov
lock
jne
lock
insb
fnstcw
push
addr16
fistps
push
sbb
sbb
xchg
inc
dec
lods
xor
cwtl
divb
mov
out
cmpsl
dec
sbb
xchg
push
dec
adc
mov
sbb
insl
sbb
nop
mov
mov
pop
jns
sbb
and
xor
xchg
push
cmp
pop
cmp
rcrl
xor
in
sub
and
xor
das
loope
movsl
fstps
loop,pt
mov
ja
imul
lret
outsl
fists
mov
cwtl
and
int3
pop
into
mov
aam
fstp
pop
jb
mov
aam
xchg
popa
ja
ja
popf
stc
ja
icebp
sbb
stos
divb
out
adc
sub
dec
xlat
mov
pop
inc
ljmp
call
xchg
bound
and
pusha
sub
das
jge
enter
mov
pop
adc
rep
sahf
xchg
jb
sahf
sbb
or
fs
call
loope
inc
mov
pop
dec
sbb
cmp
sbb
mov
inc
fdivrp
les
addb
in
sahf
and
pop
loope
mov
adc
push
fstpt
add
or
or
fbld
jecxz
loop
repnz
mov
lret
inc
mov
xchg
leave
push
cmp
add
out
fdivs
rorb
je
insl
dec
push
cwtl
rolb
fcoms
sub
or
mov
dec
ljmp
sbb
jno
or
cs
sti
or
xchg
xchg
push
repz
out
and
stos
inc
cmp
ljmp
sub
fstpt
jg
dec
cwtl
repz
cmp
sbb
adc
cmp
mov
idivl
outsl
cmpsl
scas
cmp
clc
jp
sub
test
jne
mov
mov
sub
negl
add
movsl
sahf
scas
mov
stc
sti
xor
push
fistpl
std
test
pop
pop
dec
mov
inc
push
mov
adc
call
and
add
loopne
ret
or
inc
popf
cmp
sti
movsb
sbb
lods
loope
add
daa
loop
in
jnp
popl
in
xor
jmp
add
jle
pop
lret
aas
push
aaa
inc
orb
movsl
cmpb
pop
ret
mov
incb
add
rcrb
sbb
adc
mov
inc
std
or
xchg
test
dec
pop
and
sbb
decb
scas
bound
and
xchg
lods
push
mov
adc
cli
adc
inc
push
xlat
pop
sahf
xchg
icebp
mov
scas
addr16
dec
push
push
mov
cmc
cmp
mov
int
jg
rol
stos
jns
call
push
inc
sbb
mov
in
jmp
ficoms
inc
cmc
xor
data16
outsb
aaa
or
enter
adc
inc
daa
in
jnp
sbb
adc
add
pop
xor
sbbb
or
cmp
push
xchg
push
out
mov
lahf
push
in
and
stos
cmpb
cmc
jecxz
pop
aas
xchg
inc
lret
jl
jmp
push
repz
decb
js
push
pop
inc
or
lahf
pushf
popa
mov
into
cmpsl
pop
in
push
ret
push
or
testl
sbb
sub
cs
jle
icebp
ds
gs
arpl
aam
sarb
dec
jnp
pop
sti
push
pop
outsl
pusha
xor
fnstenv
xchg
jns
jecxz
xor
push
push
jg
or
xor
movb
call
out
faddl
adc
jmp
das
ret
adcl
cmp
mov
lahf
jecxz
jg
jns
jg
jmp
jno
iret
divb
lret
jns
inc
mov
cmp
mov
jl
adc
std
rep
out
out
mov
cli
aad
jmp
lds
add
fwait
jmp
popa
out
or
mov
push
pop
push
push
jl
rcl
sti
je
or
xchg
ja
imul
mov
push
xor
mov
xor
mov
xor
cmp
test
clc
cltd
imulb
in
and
int3
sub
sub
cld
sub
fdivl
leave
stos
push
jb
and
xchg
leave
mov
dec
movsb
call
inc
imul
sub
ret
jae
mov
xor
aaa
gs
sahf
pushf
jbe
push
pop
mov
repz
dec
adc
cmpsl
cmp
pop
sbb
sbb
jle
aaa
or
int3
addb
xchg
inc
push
jbe
cmp
test
sbb
xchg
out
push
pop
stos
push
xor
jo
ud0
mov
jnp
fisubrs
fdivrl
and
pusha
jp
test
mov
es
add
sub
nop
push
aad
jmp
jo
mov
mov
in
mov
fildl
cld
cmpsb
pop
std
ss
andl
mov
aas
inc
mov
add
scas
xchg
orb
lds
aam
jb
xor
es
push
cmc
test
test
sti
sbb
ret
popf
mov
or
jns
stc
sub
sbb
adc
inc
xchg
cmc
jecxz
inc
mov
adcb
dec
iret
cmp
out
out
out
jns
push
fidivs
lods
ljmp
push
cmpsb
out
dec
dec
loope
push
daa
add
insl
sub
out
scas
lods
mov
dec
xor
shl
aad
push
icebp
add
mov
push
dec
cwtl
ljmp
inc
cmp
cmpsb
ljmp
ljmp
jne
mov
mov
mov
imul
push
sub
shlb
xor
imul
inc
mov
add
scas
dec
pavgb
cltd
pop
mov
jmp
xor
cmpsb
sub
xor
pop
push
mov
nop
idivl
adc
dec
lret
out
lods
test
shr
inc
popa
mov
stc
dec
dec
adc
push
dec
fsub
dec
and
xchg
pop
cmpsl
mov
ja
jae
push
dec
movsl
aam
xchg
dec
sub
mov
iret
fisubs
loope
push
sbb
xchg
pusha
clc
xchg
add
xchg
fisttpll
insl
das
cmp
mov
scas
xchg
or
jno
rsqrtps
jne
inc
and
ficompl
mov
sarb
sbb
int3
cmc
or
xor
mov
cmpsl
dec
sub
and
mov
mov
in
fstl
mov
in
push
aam
in
sti
inc
je
mov
ja
in
xchg
ja
lds
cmp
push
xchg
loopne
pop
jns
leave
insb
push
adc
pop
dec
pop
sti
jecxz
and
rorl
sub
sbb
cmp
or
int3
sub
inc
cmp
cmp
lahf
in
loope
sbb
loop
pop
jge
adcb
lods
push
out
add
nop
inc
cltd
inc
inc
push
lahf
int3
popf
call
ljmp
gs
frstor
sbb
ja
mov
cwtl
mov
jg
mov
and
or
lret
sbb
dec
xor
lret
or
mov
xchg
jns
in
ret
and
inc
xchg
xchg
add
mov
mov
xchg
mov
fwait
daa
test
test
pop
clc
and
cmp
or
or
mov
jno
fcoml
cmp
inc
mov
js
push
xor
ret
xchg
or
mov
clc
in
inc
lcall
mov
cmp
popl
or
fcomps
test
sti
mov
mov
mov
mov
inc
rcrl
sub
test
pop
jno
out
xchg
ss
fwait
sti
sbb
imul
jb
test
add
clc
dec
hlt
cmpsb
lahf
or
inc
daa
mov
or
fiaddl
xchg
mov
fsts
insb
jecxz
mov
adc
xchg
fwait
mov
pusha
xor
negl
hlt
aad
lcall
inc
in
loope
fisubrl
xor
das
jl
sbb
inc
fucomip
dec
cmp
mov
les
mov
jb
fsts
lods
std
pop
inc
mov
jne
pop
cmc
dec
pop
push
and
pop
xchg
in
adc
mov
outsl
adc
cmp
pop
cmpsb
imul
mov
aaa
mov
lcall
cli
adc
outsl
inc
pop
mov
stos
push
bound
dec
icebp
pop
mov
push
dec
out
xchg
sub
mov
pop
push
sub
xlat
xlat
mov
mov
jbe
jbe
sbb
jg
jg
decb
sahf
in
arpl
pop
scas
adc
jmp
out
or
into
inc
inc
and
cmc
xor
test
and
or
inc
fnstsw
push
or
mov
sbbl
cmp
jle
movsl
ret
dec
sbb
adc
shrl
sub
mov
je
cmp
ror
jbe
lahf
sbb
cli
and
xor
out
sub
adc
clc
aas
jecxz
mov
cmpsl
mov
insb
jmp
inc
lahf
repnz
mov
sbb
mov
or
subb
xchg
jb
xor
add
in
mov
xor
sbb
mov
sbb
in
aad
sbb
adc
das
xchg
and
scas
int3
push
push
cmp
scas
add
jmp
mov
ret
fiadds
jecxz
jl
repz
popa
subb
cmpl
xchg
adc
xor
pop
and
dec
jp
jl
out
out
lcall
fs
xchg
xor
push
lcall
mov
or
aad
mov
movsb
imul
jle
pop
xor
dec
push
dec
test
xchg
and
out
in
push
mov
dec
jo
mov
inc
xchg
jb
or
jmp
inc
lcall
arpl
sbb
insb
jb
repz
cmpl
add
test
fsubrl
xor
insl
and
movsb
xchg
jl
jp
lahf
dec
mov
xchg
aam
sub
xchg
mov
js
push
sbb
dec
int
loop
sub
sbb
test
inc
mov
jp
jne
loop
or
and
jle
mov
clc
xchg
pop
insl
cmp
stos
nop
into
popa
mov
stos
push
xchg
fisttpll
cli
sbb
sbbb
jecxz
negb
scas
jg
sub
cmp
dec
inc
ljmp
jp
add
sub
jns
mov
dec
pop
lcall
push
frstor
adc
pop
jb
add
xor
mov
add
fucomp
test
mov
scas
cli
iret
loop
in
push
mov
adc
xor
pop
xchg
out
out
add
push
sub
mov
push
sbb
ss
cli
pop
mov
bound
jno
movsl
sbb
jge
cmp
shl
or
dec
jle
inc
or
mov
mov
out
hlt
bound
jo
adc
js
dec
pop
inc
pop
addr16
les
cmp
adc
into
xchg
pop
pop
push
fildl
jg
arpl
or
nop
sub
ja
aam
xchg
mov
rorb
mov
in
roll
lcall
cli
test
xor
outsb
aam
xor
aam
lock
xchg
cmp
xchg
dec
sbbb
mov
push
dec
and
out
jmp
xchg
int
inc
fnop
idivb
cwtl
in
add
pop
rolb
push
mov
cmpsb
lahf
orb
inc
es
push
add
ret
xchg
fstpt
rcl
lret
stos
fsubrp
popf
inc
mov
mov
subl
shrl
push
shrl
push
jne
or
addl
shrb
lock
ret
data16
inc
mov
rolb
mov
pop
sub
cmovge
add
imull
and
cmp
or
dec
fdivs
fstpt
cmp
jmp
ret
mov
mov
mov
push
jne
lret
pop
sti
incl
adc
push
out
clc
imul
test
clc
cmp
inc
stos
negb
xchg
pop
jae
cli
cmp
mov
pop
popa
out
push
dec
mov
sahf
es
jo
mov
inc
add
inc
lods
jmp
fisubrs
sarl
pusha
push
iret
insb
or
imul
adc
bound
or
adc
mov
rclb
mov
mov
sbb
out
cmp
cmpsl
mov
pop
cli
mov
xchg
iret
cmpsl
sbb
imul
sbb
int3
mov
sub
push
sbb
sub
fcoml
in
sub
push
pop
es
sbb
std
inc
pop
leave
and
push
hlt
repnz
fmull
daa
lret
shrb
and
stos
popa
in
nop
and
push
insb
repnz
out
xchg
add
add
mov
leave
orl
popa
jmp
jp
mov
mov
add
mov
push
jg
rorl
mov
cmpl
in
loope
popa
mov
inc
jae
cmp
cmp
sahf
lahf
cmp
loopne
out
xchg
mov
mov
shll
xor
ror
xchg
push
xchg
iret
imul
out
lahf
cld
sub
repnz
cmpsb
add
mov
adc
pop
mov
popa
and
inc
push
aad
das
add
jae
lea
shr
rorl
mov
in
enter
lods
punpckldq
scas
adc
aad
adc
mov
test
xchg
ljmp
test
inc
jbe
cmp
cwtl
lods
pop
jae
xchg
push
or
scas
sbbb
cld
imul
in
stos
dec
sbb
pop
pop
test
push
movb
cmpsb
testb
cld
cmp
pop
lcall
lret
jno
loopne
jno
aad
mov
sarb
mov
sub
sti
aas
neg
push
mov
adc
jno
out
fstpt
rorl
loope
filds
pop
test
cmp
ficomps
outsb
test
push
pop
aaa
lods
fdivrl
std
aas
subb
fdivrl
insb
xchg
out
mov
repnz
nop
adc
icebp
xlat
sub
sub
das
adc
mov
fwait
or
dec
lods
jp
dec
or
sub
mov
outsb
test
fmull
int3
push
enter
hlt
cmp
and
pop
in
dec
movsl
xor
aaa
pop
cs
leave
push
jge,pt
rol
in
pop
stos
xchg
mov
insb
pusha
jb
clc
shrl
xor
mov
sub
xlat
lcall
adc
enter
aas
or
push
dec
jg
push
pop
insb
pop
cmp
fisubl
enter
jl
push
adc
and
pop
mul
fadd
mov
sbb
hlt
mov
sahf
cli
js
push
and
inc
loop
jae
inc
filds
frstor
jmp
jle
and
jl
aad
dec
jle
mov
lea
dec
adc
push
loop
cld
pop
sub
bnd
lret
xchg
dec
xor
daa
mov
ficoml
cmp
mov
ret
clc
and
rcrl
sub
lock
pop
pop
daa
into
mov
or
lcall
aaa
stc
dec
add
lahf
xor
repnz
cli
and
mov
iret
ret
or
daa
jg
repz
pop
pop
xchg
push
adc
jns
les
mov
cmp
in
sbb
push
jg
push
dec
pusha
stc
rclb
lods
test
fmull
sbb
jbe
mov
shlb
pop
jg
jno
adc
fimull
aaa
sbb
push
inc
push
lds
hlt
cmp
xor
xchg
mov
cmp
inc
dec
pushf
clc
jo
test
cmp
sbb
cwtl
jnp
push
fstp
mov
mov
jg
test
push
jp
cwtl
cs
push
pop
mov
mov
lahf
int3
sbb
mov
int
js
sbb
pop
sbb
repnz
dec
mov
pop
mov
in
aaa
fcoml
jne
shlb
sub
cld
clc
inc
clc
aas
jne
out
dec
adc
inc
inc
std
mov
adc
out
jo
inc
ja
dec
push
xchg
js
lcall
outsb
hlt
sbb
cmp
dec
jnp
or
mov
push
dec
and
and
inc
cli
lcall
and
flds
roll
lock
cmp
push
mov
pop
push
or
out
add
insl
pop
dec
sbb
cmpsl
ds
mov
lock
inc
inc
out
pop
push
clc
cli
mov
shl
aas
pop
add
out
jmp
ret
xchg
sbb
ja
sahf
inc
add
pop
sbbl
xchg
rorl
xchg
lods
aaa
fidivl
in
adc
jbe
cld
push
cmpb
pop
pop
ljmp
lock
sbb
int
addr16
insb
je
sbbl
mov
push
roll
repz
shll
test
dec
fsubrl
mov
xchg
jg
aad
jb
stos
das
mov
lret
and
mov
sarb
cmp
pusha
and
mov
gs
mov
xchg
es
and
mov
sbb
adc
aaa
neg
pusha
dec
cs
inc
dec
mov
sub
outsb
adc
bound
mov
dec
clc
stc
cmp
popa
les
test
test
push
ficompl
xlat
mov
cs
jp
daa
hlt
bound
jp
movsb
lret
fmulp
pop
stos
jns
mov
pop
enter
mov
mov
inc
add
pushf
push
xchg
stos
lds
leave
push
aaa
sub
arpl
movsl
ficoms
out
mov
push
ss
cmp
es
or
sub
dec
into
sbb
pusha
repz
daa
xchg
fwait
jecxz
aam
fildll
stos
mov
push
out
cmp
ret
sbb
inc
mov
insl
inc
pop
sbbl
scas
stos
in
xorl
add
inc
adc
jne
pop
fptan
xchg
clc
inc
mov
mov
push
popa
loop
jmp
mov
pop
pusha
sub
les
lods
fidivl
push
push
insb
sub
rol
pop
shrb
scas
cli
sbb
fs
in
xchg
fstpt
out
enter
mov
or
pushf
jnp
mov
jg
aad
pop
inc
aad
iret
and
stc
mov
or
scas
in
and
jge
popf
je
clc
or
in
bound
pop
or
inc
xlat
jbe
cli
add
repz
in
mov
call
cmpsl
clc
push
lret
push
adc
xchg
gs
push
inc
leave
jae
int
fldenv
jle
jns
loopne
xchg
shll
inc
lods
fidivrs
jl
into
insl
test
jae
or
mov
popa
hlt
sbb
fisubrl
push
jle
sbb
mov
add
cs
mov
sbb
lahf
or
adc
out
adc
scas
or
jp
out
fldcw
pop
jb
scas
add
stos
push
scas
mov
sub
insb
je
ljmp
adc
xchg
jbe
movsl
adc
sub
int
insb
cmp
repnz
addr16
pop
pop
mov
sbb
pop
addr16
gs
dec
mov
xchg
inc
mov
lahf
js
push
cmp
and
mov
jle
dec
push
aaa
adc
or
and
add
xchg
mov
xor
in
ja
and
jle
loopne
inc
jbe
dec
sti
int3
jb
lahf
cmp
pop
xchg
jnp
jl
xor
adc
loopne
lcall
cmpsl
pop
sti
aam
hlt
pusha
aas
push
jp
in
xchg
movlps
push
sub
mov
dec
lret
aad
push
pop
dec
jne
pop
inc
lea
mov
and
ja
sub
adc
ds
inc
sbb
jae
jp
pop
xor
faddl
push
xorb
out
int3
push
and
xor
cmp
out
bound
jecxz
and
mov
cltd
mov
adc
dec
fwait
adc
cs
fistpl
roll
cmpsl
icebp
sbb
mov
decl
in
xchg
pop
mov
mov
xor
gs
pop
out
push
ret
outsl
popa
adc
aad
adc
adc
xchg
mov
sahf
cld
pop
aas
sub
mov
jp
sub
mov
fldcw
lret
out
in
fdivrs
cmp
push
or
xchg
adc
add
or
sbbb
mov
popa
into
mov
stos
inc
out
cmpsl
mov
scas
sub
lods
mov
insb
fstpt
and
or
repnz
mov
mov
int
aam
les
and
push
fdivrp
shrl
push
jbe
enter
mov
sbb
xor
add
mov
sub
pop
cmpl
in
xchg
loop
mov
sub
push
lods
leave
dec
jecxz,pt
jo
ret
ljmp
adc
push
movsb
cmp
repz
mov
movsb
cltd
rorl
jge
popf
inc
ret
sub
xor
aad
jp
adc
jmp
insb
or
mov
push
mov
stc
lret
jbe
js
ficompl
aam
lock
addr16
cmp
pop
call
mov
mov
pop
pop
inc
dec
push
in
dec
and
iret
cmp
movsl
push
jmp
sti
sbb
xchg
dec
jge
rcl
adc
jo
call
jbe
out
lea
or
xor
loop
and
cs
jg
lea
insb
in
add
rcr
dec
out
std
dec
mov
dec
add
cmpsl
in
clc
test
sub
shrb
push
inc
fisttps
add
mov
cmp
ja
and
push
cmpsl
stos
lret
mov
inc
mov
ljmp
xor
pop
push
pusha
stc
mov
mov
cli
xor
mov
movsl
or
mov
push
aam
cmpb
loopne
or
test
mov
sub
pop
int3
pop
dec
xor
in
out
lds
lock
jge
fsubrl
vpsrlq
jmp
pop
lret
pusha
call
jb
mov
addr16
push
jge
and
iret
out
jnp
cli
pop
lcall
lods
js
mov
pop
fldt
imul
and
dec
inc
pusha
sub
pusha
hlt
mov
mov
cmp
outsl
fiaddl
xor
sub
aad
adc
out
lcall
in
jb
insl
push
push
popa
mov
fists
cmp
std
lea
movsb
stos
test
xchg
pop
mov
ret
flds
inc
icebp
jle
or
leave
jo
adc
movsl
jmp
lods
and
cmp
ret
xchg
mov
and
push
cmp
bound
les
push
and
aaa
ror
sub
repz
fsts
dec
mov
and
outsl
push
lcall
mov
xchg
sar
hlt
dec
shl
sub
sbb
lods
aas
daa
mov
hlt
sub
mov
xor
cmc
sbb
add
cltd
nop
aaa
sarl
xchg
mov
and
jmp
pop
out
rcrl
outsl
push
sub
pop
push
dec
and
cltd
ja
in
mov
inc
insl
jbe
ja
jae
out
pop
cmp
sub
repz
and
and
cltd
lods
popf
mov
xchg
adc
int3
or
jb
sarl
sahf
mov
pusha
test
fistpl
ds
out
cmpsb
cmp
and
push
les
mov
rorl
cmpsl
sbb
sub
test
inc
ficompl
mov
push
mov
push
je
mov
dec
aas
xchg
pop
mov
pop
idivl
and
jl
les
mov
mov
lret
lea
stos
add
jnp
sbb
arpl
test
cmp
nop
test
mov
mov
popa
pop
sbb
adc
inc
fstl
jecxz
mov
xor
movsl
mov
rcr
gs
loope
xchg
sub
adc
lock
xor
and
cli
daa
xchg
and
out
xor
int
notl
sbb
jmp
mov
cwtl
orb
mov
or
movsl
nop
cmpsb
add
pop
cs
sbb
pop
out
movsb
mov
jge
std
mov
xor
cmpsl
xorl
lds
dec
pop
mov
mov
scas
pop
scas
fisttpl
inc
and
js
cmp
insl
inc
jb
gs
lea
insb
push
mov
jb
mov
rcrl
imul
mov
shll
jbe
lea
rol
mov
je
dec
mov
xchg
icebp
inc
mov
sbb
int3
mov
mov
sbb
sub
js
xor
inc
xchg
aas
lock
arpl
add
inc
xchg
scas
cmc
mov
ret
mov
jae
ja
xchg
mov
mulb
push
push
in
and
mov
push
rsqrtps
movsb
inc
rorl
jp
cmp
nop
mov
mov
mov
mov
pushaw
and
mov
dec
inc
out
daa
xorl
add
aam
pop
push
pop
hlt
inc
jecxz
das
sbb
cmc
addr16
daa
push
cli
sub
and
jp
aam
popa
iret
je
jnp
add
inc
cmp
push
jge
xchg
push
ficoms
jecxz
iret
xor
fmull
cmp
adc
shl
xchg
call
pushf
stos
into
ja
pop
fldcw
mov
sti
mulb
rolb
jnp
fst
in
inc
cmpsl
into
fisubrl
sbb
mov
enter
es
movsl
xchg
and
inc
lea
xor
gs
sbb
push
movsl
mov
mov
push
dec
cmp
testl
and
and
mov
jmp
test
cltd
xchg
pusha
push
jmp
sub
in
vpsubsb
xchg
inc
mull
jbe
bound
test
mov
push
and
xor
ret
xor
sub
in
cli
jl
nop
dec
sbb
fldt
popf
in
mov
sub
mov
push
push
fstl
and
icebp
insl
xchg
dec
jle
pushf
cli
and
jle
mov
dec
xor
push
mov
das
inc
and
shlb
imul
cmc
sbb
stos
jno
pop
stos
lcall
xlat
or
shrb
jne
in
xor
scas
in
imul
push
sub
in
scas
movsl
jecxz
inc
and
fsubl
arpl
xchg
daa
mov
fldcw
inc
jmp
jmp
sbb
pop
in
add
jnp
addr16
mov
add
cmpsl
rorl
pop
rcll
lea
push
adc
adc
and
xchg
push
lea
icebp
mov
jp
popl
mov
add
cmpsb
jecxz
aaa
cmp
pop
sbb
fbstp
and
cmc
mov
jg
sub
sbb
mov
clc
stos
adc
cwtl
mov
stos
and
mov
or
mov
mov
add
or
mov
ret
enter
dec
pop
es
mov
and
test
fstpt
inc
int
subb
xor
fmulp
int
push
adc
jno
jnp
lea
sbb
add
in
xchg
add
movsl
int
jle
lods
jb
lods
and
adc
lahf
imul
rorl
cmp
sub
and
mov
sub
push
or
push
jle
andl
sbb
repnz
jge
pop
lods
dec
dec
or
dec
add
xor
mov
inc
mov
sub
hlt
or
cld
sti
push
into
dec
mov
clc
call
sbb
or
lea
std
test
js
fisubl
mov
aas
inc
xor
jmp
inc
push
push
push
aad
ds
xchg
mov
imul
jno
stc
std
int3
mov
inc
jl
add
les
jne
inc
sarl
jb
std
inc
inc
imul
stos
in
nop
loopne
add
aad
sub
dec
jecxz
sbb
ret
mov
add
or
data16
hlt
mov
or
test
adc
mov
jecxz
gs
push
aas
push
in
mov
pop
call
jbe
sub
inc
lods
jle
inc
scas
cli
test
aaa
loope
push
pop
push
out
insb
mov
mov
into
xor
push
int
xchg
imul
pop
popf
sbb
cmpsl
test
pop
and
mov
sub
mov
jmp
sbb
daa
cmp
lahf
movsl
jecxz
push
pop
xchg
inc
jne
outsl
pop
loope
cmpsl
aas
arpl
cmp
out
leave
inc
mov
mov
out
adc
mov
cltd
or
fidivs
popf
pop
ja
test
popf
mov
jo
mov
lds
sbb
pop
popa
sbb
dec
inc
push
mov
stos
nop
out
dec
or
js
outsb
cmpsb
mov
dec
repz
jbe
adc
add
lds
mov
push
aas
cmp
xchg
fstp
lahf
xor
mov
push
sub
shll
or
push
aad
pop
test
sar
lds
sbb
leave
ret
and
test
dec
ja
inc
outsb
mov
pop
xchg
subb
sbb
adc
mov
in
in
pop
mov
jg
dec
cmp
stc
adc
dec
xor
cmp
cmp
sar
fldenv
pop
jp
push
lds
xor
clc
jp
dec
xor
inc
das
push
call
clc
inc
popa
stc
es
loopne
jmp
pop
mov
in
cmp
stc
mov
sub
mov
int3
shrl
lock
and
lock
ja
pop
xchg
mull
inc
les
jne
mov
sub
push
ja
fs
movsl
or
mov
xchg
sbbb
sbb
xlat
stos
jae
mov
jmp
lock
pop
dec
xchg
leave
test
xchg
mov
fisttpl
dec
outsb
mov
or
aam
jne
xlat
mov
mov
xchg
stos
gs
xor
test
outsl
lods
xor
adc
test
int
mov
sub
mov
jnp
je
mov
cmp
arpl
push
popa
jecxz
sarl
lods
sub
aad
push
paddb
nop
js
mov
mov
test
push
sub
cmp
push
pop
pop
pop
adc
jb
mov
cmc
fstl
movb
or
mov
xchg
mov
mov
clc
sti
fsubs
out
shll
mov
daa
mov
mov
lahf
jns
dec
stos
mov
sti
sbb
dec
xor
cmp
nop
fidivrs
lcall
leave
lock
rol
movsb
inc
cmp
mov
pop
sub
hlt
inc
jle
stc
mov
and
sarl
fisubs
test
and
lahf
not
add
inc
jbe
imul
imul
fisttps
push
lea
ss
or
jmp
cmp
out
add
out
push
pop
and
lret
ret
sbb
xlat
or
sbb
inc
xchg
mov
popf
mov
push
fistps
cmp
inc
sub
pop
xchg
pop
aaa
pop
and
int
mov
ja
out
shll
lcall
inc
mov
jecxz
dec
hlt
lods
mov
push
mov
and
pop
xor
js
test
jp
and
and
insl
test
fnstsw
jno
pushf
je
sti
fidivs
sub
add
push
pop
mov
lcall
gs
nop
sbb
mov
push
mov
sub
ss
and
dec
out
dec
mov
push
icebp
add
push
push
jg
mov
sub
adc
aad
inc
and
mov
repz
sbb
test
dec
movl
cmp
sub
icebp
pop
mov
nop
pop
xchg
or
jns
cmpsb
icebp
flds
insb
popf
fcomip
push
jnp
lcall
stc
pop
arpl
jo
add
jge
jo
add
xchg
cmp
test
mov
mov
je
fs
jne
aaa
out
sbbb
loop
btc
leave
mov
and
adc
mov
xchg
icebp
mov
fwait
cmp
cld
movsl
int
or
mov
mov
mov
cld
cmpsl
or
cli
idivl
mov
and
mov
js
icebp
adc
daa
jle
je
je
push
addr16
je
mov
push
sahf
cmpl
cmp
pop
shr
adc
iret
xchg
push
mov
out
jl
push
sub
es
ret
ljmp
sub
mov
dec
fdivl
xchg
mov
negb
std
lods
pop
out
mov
inc
or
jge
fnstsw
cwtl
sub
adc
pop
stc
pop
loope
arpl
push
cmp
call
ss
xchg
mov
mov
jp
hlt
and
out
xchg
sbb
jbe
bound
sbb
jecxz
shl
cmp
ds
adc
mov
loope
lret
jge
xorb
mov
aad
insb
mov
test
stos
cmp
xlat
aas
outsb
call
popa
dec
rcl
lods
mov
add
mov
test
pop
mov
addr16
dec
adc
fistl
fcmovnbe
mov
xchg
shrl
and
idivb
clc
ret
sub
lcall
pop
gs
mov
jge
stc
mov
mov
xor
lahf
xlat
mov
es
mov
in
xor
iret
pop
icebp
pop
test
aad
or
test
lea
xchg
jnp
fcompl
adc
loop
mov
xor
std
pop
dec
xchg
das
dec
xchg
mov
jge
ds
mov
xor
adc
out
es
push
sbb
add
sbb
test
jl
xchg
into
sbb
into
adc
dec
int
adc
jo
mov
inc
or
and
jbe
mov
xchg
cmp
push
js
inc
iret
mov
stos
mov
mov
xchg
and
loope
and
fs
inc
xlat
lods
xchg
and
add
dec
push
mov
mov
lds
out
pop
mov
scas
scas
mov
xor
push
aad
ficoms
push
insl
in
ljmp
mov
adc
sbb
cld
xor
test
adc
aas
mov
cld
dec
ret
push
das
sub
xchg
inc
movsl
inc
lahf
sub
popf
ret
xchg
push
mov
dec
push
dec
lret
jb
or
insb
arpl
clc
dec
lds
and
out
add
sub
mov
cltd
call
fwait
pusha
in
out
sbb
enter
xchg
leave
jns
mov
pop
inc
xchg
subb
cmp
ret
scas
bnd
jnp
je,pt
inc
subl
les
mov
xor
lret
lret
inc
dec
popa
adc
mov
aaa
pop
xchg
lea
push
mov
xor
int
in
sti
jae
sub
mov
pop
adc
daa
push
push
mov
fildll
clc
gs
mov
pop
cs
dec
ss
sbb
mov
sub
fimuls
scas
and
ss
sub
cli
cmpsl
unpckhps
stos
sub
adc
cmp
inc
jbe
test
hlt
fwait
push
xchg
jb
cmc
lret
jne
cmp
imul
pop
fisubl
enter
shrl
divb
cmp
jne
js
mov
pop
cmp
enter
inc
jle
scas
and
push
lret
test
aad
jnp
repz
or
xchg
in
js
imul
jmp
ja
mov
int
add
push
lret
nop
cmp
pop
dec
bound
sub
mov
jns
mov
jne
orl
adc
sbb
fs
and
sarb
push
sbb
jns
cmp
jne
dec
test
fildl
imul
sub
sbb
cmpsl
outsl
dec
mov
imul
jns
inc
mov
ja
lret
inc
adc
dec
int
test
cld
xchg
fmull
bound
ds
in
push
imul
gs
das
xchg
stos
mov
idivb
mov
jo
xor
cmpl
inc
jbe
imul
sahf
pop
adc
scas
or
out
xor
push
mov
fs
xchg
vpunpckhdq
xor
rclb
pop
int
ret
push
sub
dec
cmp
xchg
fstl
popa
leave
popa
lds
dec
ja
cld
mov
rorb
das
sub
sbb
cmc
add
cmpsl
push
inc
or
roll
cmpl
lods
mov
adc
out
or
insl
sbb
xchg
addb
sbb
push
hlt
jbe
test
sbb
outsb
rcll
pop
cltd
and
shlb
fsubrs
psubb
pop
cmp
jae
enter
sbb
jnp
mov
rolb
std
dec
adc
mov
and
jb
mov
ds
push
add
mov
adc
inc
adc
mov
in
xor
lds
mov
and
add
cmp
jecxz
lcall
xor
dec
xchg
add
rcl
jg
sbb
decb
mov
and
xlat
aad
mov
jbe
ss
sti
xchg
pop
imul
adc
adc
push
loopne
cld
lods
leave
jge
out
stos
xchg
mov
rcpps
ret
negl
negl
or
testb
iret
ja
xchg
clc
movsl
aad
xorb
inc
js
imul
mov
sbb
jmp
mov
push
inc
pop
xchg
xchg
jmp
add
add
xchg
xchg
sub
add
dec
addr16
nop
push
mov
inc
push
idivl
aad
xchg
xor
sub
dec
in
hlt
icebp
push
dec
nop
add
test
test
ja
xorb
xchg
mov
cmpsl
mov
cltd
int3
shl
jno
std
je
mov
imul
push
insb
aas
imull
or
xchg
iret
jge
jmp
cmp
dec
addr16
pop
cmp
xchg
mov
gs
daa
dec
ret
insb
int
int3
sub
sahf
xor
scas
popa
shrl
sub
dec
clc
stc
mov
and
in
loop
out
stos
ljmp
clc
stos
adc
sbb
test
lods
mov
out
add
xchg
pop
int
pop
sbb
add
jo
push
scas
jmp
aad
push
scas
xchg
sub
mov
mov
scas
pop
dec
rolb
mov
push
iret
pop
lods
add
jg
insl
inc
out
cmp
xchg
mov
mov
sbb
sbbb
iret
shlb
xor
aaa
mov
ja
xor
push
or
in
or
jbe
push
dec
ds
insl
inc
cmc
lea
sub
mov
mov
out
sbb
adcb
int
add
mov
and
mov
jmp
daa
pop
bound
or
push
clc
jb
push
lret
enter
add
adc
dec
ljmp
outsl
ja
pop
jno
add
xchg
xchg
or
xchg
inc
lods
jp
popa
scas
inc
das
jmp
test
dec
pop
xor
int3
imul
sbb
roll
cld
mov
mov
jmp
movsb
mov
nop
mov
loope
std
pop
and
xchg
rcl
adc
mov
sbb
sbbl
dec
test
mov
adc
std
cmp
aad
sbb
sti
xor
hlt
jns
fsubr
inc
imul
lahf
push
or
je
sar
insl
pop
outsl
subb
cmp
mov
in
ljmp
add
jl
sub
or
daa
aam
pop
sarb
push
ficoms
jb
int
fsubs
test
adc
inc
jmp
xor
int
and
loope
mov
jbe
push
cmp
mov
sbb
mov
fwait
leave
cs
sbb
adc
pop
cld
push
mov
jne
jns
mov
xchg
mov
jg
fldcw
dec
not
shll
lods
pop
add
inc
cwtl
mov
imul
pop
mov
cmpsl
jbe
sbb
jg
repz
lods
xor
decb
xchg
popf
pop
rcll
add
out
pop
or
cmp
hlt
movsb
mov
test
roll
mov
mov
mov
adc
lods
and
add
sarb
insb
xor
int
sub
adc
or
adc
mov
or
jno
aas
loop
and
push
adc
pop
fwait
insl
sub
cmc
testl
in
sbb
mov
ss
and
filds
sbb
idivb
sbb
jp
mov
inc
enter
jp
push
jge
or
sub
nop
cmp
sub
dec
or
pusha
jae
push
or
or
loope
add
test
js
push
xchg
jp
xchg
mov
adc
xchg
or
mov
inc
add
and
xchg
clc
jno
mov
mov
jo
sbb
das
sbb
fwait
sbb
into
movsb
push
int3
fnstsw
outsl
insl
pop
dec
testb
add
mov
xchg
popf
enter
outsl
push
xor
sub
push
xchg
cmp
and
ja
mov
cmp
or
xchg
repnz
push
mov
fcmovb
inc
ret
cmp
fnsave
les
push
push
cltd
fisubs
add
xor
add
or
push
push
add
pop
cmp
and
sub
adc
pop
mov
dec
dec
ss
xor
rcrl
push
popa
int3
cmp
cmpsl
jecxz
jl
inc
mov
bound
in
mov
xor
leave
dec
push
pop
aas
repz
jle
rep
mov
mov
daa
xchg
push
xor
test
mov
negb
fcoml
inc
iret
and
dec
mov
cld
cmp
and
mov
imul
js
mov
inc
xchg
inc
jno
daa
dec
das
push
enter
mov
sub
inc
push
shl
aam
xlat
imul
test
in
jg
fnstsw
push
cld
jae
sub
cli
sarb
daa
aas
outsl
outsb
sbb
mov
adc
test
xchg
pop
sub
jnp
ljmp
pushf
cmp
cmp
add
in
out
inc
sbb
cmp
sbb
mov
push
or
mov
xchg
lcall
inc
push
lds
push
mov
dec
dec
mov
lea
sbb
stc
dec
pop
js
mov
or
shrb
add
add
push
sub
js
inc
imul
sbb
xor
add
negb
mov
andb
pop
jmp
mov
subb
fcoml
push
out
jge
arpl
std
jg
inc
mov
notl
ret
mov
cmp
xlat
test
jp
xor
insl
call
pop
adc
ret
jae
or
aam
pop
dec
pop
cmp
out
out
insb
push
mov
shrb
adcb
xlat
dec
sahf
call
shrb
fldl
into
faddl
ljmp
xor
dec
sbbl
mov
cmc
mov
and
inc
cmpb
pop
pop
inc
loopne
ficoml
addr16
push
lret
push
stos
repnz
ficoml
xchg
inc
bound
push
jge
popa
cwtl
mov
xchg
and
xor
imul
scas
icebp
pop
js
push
leave
test
push
loopne
pop
sub
ret
adc
cwtl
imull
stos
out
fs
push
jne
mov
sbb
aam
fdivs
lcall
jbe
jmp
fs
cmc
bswap
cli
pop
cli
adc
jne
negb
pop
mov
pop
lahf
stos
fsubrs
shr
mov
pusha
push
jnp,pt
xor
sbb
or
daa
dec
push
stos
scas
inc
outsb
adc
cmpsb
aas
pop
jno
mov
lret
cmpsl
mov
jae
ljmp
jl
mov
hlt
jge
sbb
push
push
jno
xor
lds
and
xor
or
lahf
mov
fcompl
mov
adcl
test
aas
mov
push
enter
mov
in
sbb
les
add
push
aam
inc
or
rorb
mov
inc
leave
std
mov
inc
lahf
rcrb
sub
mov
mov
mov
inc
cs
jbe
pop
jecxz
mov
stc
cli
stos
fdivl
push
mov
pop
mov
test
lahf
mov
pop
or
outsb
outsb
data16
xor
add
inc
cmp
sarb
sub
pusha
enter
xor
or
test
mov
mov
mov
mov
lds
gs
stos
mov
leave
add
outsl
pop
out
in
sbb
repnz
dec
sub
jae
adc
int
sbbb
xchg
adc
loop
inc
popf
xchg
adc
stc
addr16
int3
cmp
push
adc
ror
shlb
out
sbb
andb
jns
dec
push
push
ds
sbb
shll
xlat
mov
inc
cmp
push
mov
cltd
or
mov
add
pushf
iret
fisubl
push
leave
js
loopne
mov
test
cld
scas
mov
push
insl
xchg
adc
ljmp
in
lods
sahf
xchg
inc
pop
int
jnp
fs
js
or
mov
inc
inc
adc
mov
insb
push
sub
jle
imull
je
dec
test
in
test
jne
popa
ret
pop
sub
xor
sbb
adc
sub
fcomps
clc
addr16
jbe
push
or
add
nop
cmp
push
movsl
pusha
push
pusha
xchg
mov
sub
and
popf
loope
lock
lods
ljmp
jb
pop
fistpll
add
jo
jae
adc
add
push
mov
or
scas
push
add
aam
mov
mov
jg
lret
push
into
mov
xchg
push
pop
mov
shrl
add
and
aaa
loopne
aas
stos
jb
and
xor
fnstsw
popa
fwait
mov
pushf
aam
cmp
mov
lods
mov
mov
enter
stos
inc
in
sbb
jo
push
mov
add
push
js
negl
push
xchg
int
lock
pushf
xor
add
out
rorb
inc
push
dec
cmp
cwtl
xchg
test
mov
lods
sbb
out
aam
sbb
cmp
lahf
filds
mov
push
mov
or
mov
aaa
enter
xchg
cmp
je
mov
push
fdivrs
ret
mov
or
cmc
xchg
jns
dec
popl
and
adc
xor
jl
sub
xchg
sub
dec
sbb
inc
pop
or
pop
jb
mov
pop
cmp
test
push
push
pusha
mov
data16
gs
xchg
add
ja
or
int
aaa
push
adc
sbb
sbb
jbe
cmp
int3
sub
cmpsl
aad
lds
cs
lods
sub
xchg
mov
enter
lahf
mov
inc
cli
lds
dec
add
push
shll
lods
ss
sbb
je
xor
aaa
es
push
daa
mov
xlat
jmp
mov
je
fdivrs
sub
push
enter
ss
jne
pop
mov
orb
test
inc
int
xor
sbb
sbb
outsl
gs
lret
xor
and
int
adc
lcall
ss
jo
test
push
sbb
loop
shll
ret
adc
mov
sub
std
in
ja
fidivrs
les
gs
sbb
rol
or
les
addr16
sbb
cmp
stos
out
into
fisttps
lret
ror
shl
fidivl
lds
push
xchg
adc
jmp
jl
mov
call
cmc
mov
xor
pop
insb
enter
dec
sbb
mov
inc
bound
test
pop
jne
icebp
shll
iret
cs
loopne
clc
lea
js
out
mov
hlt
lods
dec
push
je
imul
scas
push
dec
fneni(8087
cwtl
mov
cs
pop
jge
hlt
inc
pop
jb
cmp
push
mov
inc
push
jl
sbbl
mov
movsb
mov
lcall
andb
xchg
les
push
inc
icebp
xchg
sbb
ret
out
pop
cmp
add
pop
pop
sbbl
hlt
cli
ja
mov
popf
sub
insl
cltd
orl
out
xchg
push
fsubl
and
xchg
adc
pop
bound
pop
fstpl
frstor
jo
jmp
or
fcoms
iret
dec
push
xchg
gs
add
clc
jg
ficompl
sub
daa
int3
push
or
nop
call
fsub
fisubrs
jno
call
add
pop
inc
sarl
add
push
in
fsubrs
sti
es
jp
clc
arpl
mov
push
mov
push
dec
sbb
adc
mov
loopne
xor
adc
jle
enter
scas
faddl
xor
xchg
loope
mov
pushw
dec
dec
adc
js
lahf
cli
push
in
shl
movsb
push
jmp
sahf
cli
push
push
test
mov
jb
jl
sub
sahf
inc
cmp
jo
and
rcrb
pop
stos
out
xchg
push
adc
xor
loop
dec
pop
cmpsl
dec
mov
mov
dec
bound
xor
sub
outsl
lcall
xchg
cli
ja
cmpsl
mov
inc
xor
js
int3
test
test
inc
xchg
jg
repz
sar
lcall
xor
jg
mull
loopne
int
rolb
add
fdivr
push
pop
clc
pop
fucomp
sub
adc
mov
aas
jb
sarb
lahf
inc
enter
out
or
mov
fisubl
pop
inc
rorl
xchg
ds
loop
fdivp
aaa
sbb
cmp
cli
leave
dec
stos
rdtsc
jbe
aam
fisttps
cld
pop
add
xor
or
push
test
jle
jg
mov
int3
cld
sub
js
jnp
gs
mov
jmp
and
jle
js
jae
cmp
inc
or
jne
mov
xor
add
xchg
cmp
das
mov
xor
sub
cmpsb
or
pop
xor
in
fdivl
pop
fsub
mov
cmp
dec
clc
and
stc
sbb
fisttps
test
sbb
sub
sbb
cwtl
out
int3
add
call
pop
lock
adc
mov
fdivs
mov
cwtl
sbb
add
mov
ljmp
dec
mov
faddp
loope
and
mov
movsb
popa
mov
and
mov
dec
aam
cmovs
ret
mov
out
cmpsb
ja
out
inc
je
lods
jo
mov
lds
xlat
aad
clc
lahf
popa
aas
dec
es
push
nop
mov
daa
loope
sbb
stc
xor
inc
xor
xchg
push
out
sti
xchg
push
or
scas
or
aad
dec
cmpsb
adc
movsb
out
aad
push
jecxz
leave
stc
sbb
dec
push
out
sahf
add
sbb
rorb
cmp
push
je
mov
pop
mov
in
push
or
nop
mov
loopne
into
mov
mov
mov
imul
movsl
push
inc
lock
int
daa
nop
jg
mov
rorl
pop
inc
pop
jl
mov
xor
add
loop
push
push
orb
jle
fsubl
jge
les
xor
dec
mov
push
xor
leave
insl
test
aas
mov
xchg
mov
add
and
fidivrs
mov
pop
outsl
out
mov
xor
dec
jp
jg
repnz
pop
bound
mov
or
dec
lahf
mov
xchg
inc
pop
jl
out
icebp
jae
dec
lret
dec
movsl
and
mov
fsubs
mov
mov
adc
movups
mov
std
dec
das
inc
imul
pushf
jmp
pusha
xchg
add
mov
mov
push
cmpsb
push
add
stc
pop
adc
or
in
outsl
dec
sbb
sbb
inc
aam
jns
pop
and
mov
cltd
outsb
dec
pushf
cmp
lret
push
push
xchg
xor
push
cmp
xchg
dec
jb
shll
lds
inc
and
pop
out
incl
sub
jnp
adc
test
jge
and
js
or
pushw
das
sahf
lret
out
inc
jg
jb
insb
pusha
pop
sub
out
scas
stc
idivb
xchg
cwtl
in
out
faddl
rcr
and
es
repnz
add
out
inc
push
fistpl
mov
les
shll
sbb
and
xchg
testl
decb
sarl
pop
test
dec
pop
pop
daa
stc
pushf
mov
aam
push
cmp
xchg
add
add
mov
cmp
movsl
mov
mov
mov
dec
pop
iret
dec
push
dec
test
cmp
imulb
pop
xchg
sub
mov
pop
out
dec
mov
testl
pushf
lea
add
mov
cmp
out
popa
xchg
dec
repz
in
sti
push
movsb
orb
shl
ljmp
add
shlb
lock
ret
or
push
lea
mov
push
add
lods
aas
add
push
push
and
lahf
stc
sub
andb
mov
inc
sbb
and
filds
pop
loope
mov
push
clc
insl
jnp
pop
mov
dec
lret
xchg
mov
push
popa
push
sbb
and
xchg
inc
mov
les
inc
dec
test
mov
lcall
add
pop
lea
pop
or
ds
fstl
cmc
mov
loope
pop
jno
inc
xor
jmp
dec
mov
cli
inc
push
pop
jno
jg
mov
loope
dec
cmp
jg
mov
stos
xchg
jl
xchg
sti
cmp
lcall
xchg
inc
mov
mov
jle
mov
ds
push
mov
dec
fistpl
dec
add
jl
sti
lret
add
stc
cs
mov
in
gs
push
jae
sub
cmp
inc
cmp
pop
fmul
xchg
lcall
aam
add
push
mov
push
cmp
inc
add
inc
arpl
jecxz
aam
call
cmc
xor
ud1
mov
call
push
mov
lods
xor
xor
aaa
push
inc
mov
test
fisubrl
stc
sub
xor
sbbb
mov
inc
dec
fildll
mov
xchg
rcrl
xchg
push
adc
mov
andl
dec
or
sub
test
push
push
cmp
pop
fwait
rolb
ss
fs
pop
mov
test
inc
xchg
ffreep
pusha
inc
dec
fsubrl
int
ss
fldcw
dec
andb
sarb
sbbb
mov
jnp
add
icebp
push
stos
push
mov
scas
mov
imul
push
ftst
adc
mov
adc
xor
xchg
inc
sbb
mov
xor
aas
mov
pop
int3
shrb
push
mov
andb
or
mov
xchg
dec
pop
or
add
dec
add
push
cwtl
loopne
mov
adc
jl
push
mov
mov
mov
xchg
repz
lock
push
cmc
out
and
push
pop
and
fstpl
pusha
scas
sub
and
in
test
addr16
dec
out
imul
lea
or
add
push
fstps
insl
aas
mov
rcrl
iret
and
mov
fstpt
mov
in
inc
adc
lods
pop
cmp
mov
xor
imul
mov
xchg
dec
push
pop
aam
sub
in
xor
sbb
xchg
push
inc
push
clc
push
pop
stc
or
scas
jae
insb
xchg
iret
cmc
sub
mov
cmc
mov
outsl
inc
ret
cmc
icebp
pop
xchg
clc
lcall
icebp
stc
outsl
pop
dec
pop
aaa
jnp
inc
dec
cld
mov
sbb
cmp
jbe
pop
int
popf
shl
in
sbb
hlt
pop
fcoms
ja
sbb
out
cwtl
push
xchg
pop
fs
clc
inc
fldcw
fidivrs
movsb
push
stos
inc
mov
scas
xchg
dec
jae
enter
data16
fldenv
enter
adc
cli
repnz
or
add
sub
pop
mov
fwait
lods
mov
xor
jnp
or
mov
sha1msg2
mov
jmp
jbe
mov
mov
cmp
in
jae
mov
mov
lret
imul
xchg
add
jae
push
loopne
fadds
mov
jecxz
fstps
or
dec
dec
cmp
pusha
mov
dec
std
xchg
mov
in
jo
je
lock
or
fwait
repz
xor
push
mov
cmp
add
pop
mov
sub
mov
imul
jnp
lods
arpl
adc
imul
or
fsubs
loope
cld
xchg
insb
adc
push
cmp
js
lods
andb
lret
pop
jle
stos
cmpb
rclb
cwtl
inc
scas
fbstp
int3
push
loop
ret
mov
dec
inc
push
mov
mov
call
xor
lcall
cli
cmp
cmp
jg
dec
push
xchg
cmpsl
scas
test
cmp
test
jo
out
mov
movb
dec
mov
sbb
scas
inc
add
aaa
aas
aaa
ja,pt
adc
dec
int3
inc
clc
add
push
lods
fistl
sbb
movsl
or
icebp
in
push
insl
andl
iret
inc
int
dec
sar
negb
xchg
sub
dec
popl
xchg
inc
mov
sbb
negb
outsb
js
lahf
fdiv
jo
jmp
test
xchg
push
movsl
and
fcom
nop
shrl
into
jae
cmp
outsb
xor
lods
in
cmpsb
xchg
xor
popf
ficomps
push
xchg
sub
insb
ljmp
lret
stc
in
inc
adc
cltd
popf
push
jge
or
mov
mov
aaa
jg
lds
xchg
push
pop
ja
jo
scas
add
push
mov
mov
jg
iret
inc
and
pop
cmp
lret
icebp
cmp
and
out
shr
dec
lcall
fsubrl
dec
add
adc
ds
or
outsl
pop
xchg
jp
fnstsw
std
sbb
cs
mov
sbb
sbb
cld
sahf
mov
pusha
movsb
add
push
and
mov
out
and
jnp
mov
cli
sti
adc
nop
sahf
mov
popf
inc
ret
sbb
lea
cs
gs
mov
ja
shlb
mov
push
pop
mov
and
jne
jns
mov
mov
cmpb
stos
add
scas
movsb
loop
dec
movsb
pop
fcoms
aas
jb
outsb
xchg
test
jp
rep
sbb
push
ficompl
xor
lods
sub
sahf
daa
cmpl
cltd
dec
xlat
or
xchg
inc
sahf
xor
xchg
into
fs
pop
fadds
data16
push
ds
adc
xor
cli
pop
std
sbb
les
mov
jmp
in
repz
cmp
lahf
push
sbb
cmp
test
je
movsb
jae
lret
inc
pop
fldt
mov
mov
push
movsb
pop
arpl
mov
ret
sub
fists
int3
scas
sbb
adc
pop
adc
cmp
es
pop
push
jecxz
cmpsb
or
sub
clc
or
fs
lret
cmpsb
mov
out
mov
mov
mov
jmp
lds
cmp
les
loop
mov
mov
ror
xchg
mov
js
in
lahf
xor
jb
pop
divb
dec
push
gs
cmp
lret
stos
sarl
mov
rol
rclb
js
adc
outsb
push
cmp
and
pop
aam
add
push
xchg
fiaddl
xchg
mov
mov
pmullw
push
xor
and
std
mov
dec
mov
pop
add
inc
bound
arpl
xor
lods
andl
scas
sub
push
mov
and
ret
mov
imul
adc
stos
xchg
call
test
sub
or
pop
subl
ljmp
pop
iret
cmp
rcl
test
outsb
gs
jmp
mov
repnz
cmp
sar
fsubrp
push
movsl
push
test
sbb
es
out
and
mov
popf
cmpsl
adc
popf
repz
cmp
inc
mov
fimuls
out
xor
scas
and
out
mov
sub
xor
into
pop
sar
aad
test
xchg
icebp
sar
dec
out
repz
push
vfrczps
leave
mov
repz
xchg
scas
ret
pop
mov
sbb
loope
mov
add
in
test
and
pop
cli
jecxz
inc
adc
jle
int3
pop
xchg
or
std
inc
call
cmp
or
xlat
cld
cmp
xchg
sub
inc
jae
test
xor
adcl
jg
or
cmp
jns
inc
hlt
xchg
sbb
test
pop
cmp
jge
jmp
xchg
mov
addb
js
loope
mov
int3
mov
mov
sti
lret
addl
mov
push
pusha
pop
sti
aas
dec
in
cmpsl
push
lods
fwait
pop
add
fsts
popa
sbbl
in
in
cmpsl
pop
sbb
jp
sbb
add
push
jge
jne
push
adc
gs
div
outsl
pushf
cmpsl
or
lcall
hlt
ror
insb
mov
inc
cmpl
mov
test
jle
iret
sub
lcall
or
mov
pop
jge
sar
mov
jns
enter
mov
das
xchg
cmp
mov
idivb
inc
fldt
adc
xor
shll
push
mov
pop
test
dec
xchg
cwtl
push
hlt
inc
sbb
imul
jnp
andl
imul
loop
imul
stos
into
pushf
fsubl
push
lahf
subb
pop
mov
jge
repz
out
rcl
pop
sub
pop
jg
sahf
arpl
cli
sub
pop
ljmp
sub
adc
cmp
xor
jb
mov
sbbl
adc
jbe
arpl
shrl
pop
dec
and
test
sti
fs
mov
out
push
xor
xlat
jns
pushf
and
cltd
or
mov
in
js
inc
out
push
xchg
adc
adc
pop
and
stc
insb
fnsave
mov
into
cmp
jns
xor
aam
in
or
push
outsl
aaa
rorb
push
mov
jns
aaa
push
or
aam
xchg
push
sbb
fisttps
test
movsl
adc
mov
das
iret
mov
or
gs
sbb
fdivrp
cld
adc
aaa
inc
in
gs
in
mov
sbb
xor
mov
xorb
add
pop
mov
mov
mov
int3
mov
lcall
addr16
daa
jge
sbb
sahf
inc
sti
jecxz
add
cld
push
fdivr
insl
shlb
mov
cmp
cmc
mov
insl
mov
push
cmp
pop
inc
out
imul
add
sbb
push
ljmp
mov
pusha
sbb
cld
dec
sbb
rcll
xchg
add
xorb
mov
inc
xchg
dec
xlat
orl
push
fstpt
inc
and
or
inc
cli
or
aad
sub
lds
mov
mov
enter
daa
pop
adc
lds
sbb
jg
cvtdq2ps
mov
fwait
push
bound
push
mov
fsubr
jo
ret
dec
adc
and
in
or
xchg
jnp
jb,pn
jae
stos
cmp
lea
xor
sub
mov
mov
cli
scas
lahf
inc
int
mov
jbe
push
mov
rcrb
daa
fsub
dec
rorl
jecxz
push
out
xchg
xchg
pop
sub
imul
out
push
out
das
cmp
push
inc
dec
data16
sub
and
cmpsb
jbe
setae
mov
and
dec
adcb
mov
aad
imul
int3
popa
push
mov
cli
cmpsb
sub
cmp
sub
loopne
add
bnd
and
popa
fistl
ret
popf
loopne
icebp
filds
mov
into
jo
mov
loope
or
mov
inc
mov
incb
aaa
hlt
popa
cld
xchg
lds
into
jne
jns
in
cmpb
adc
enter
adc
mov
mov
lods
in
sub
int3
xchg
hlt
out
shll
popf
lahf
xor
ja
push
ror
cmpb
ds
shl
xchg
test
icebp
call
mov
xchg
push
adc
pop
push
pop
lods
shr
lret
inc
lret
push
xchg
in
mov
aas
xor
push
test
inc
fdivs
pop
or
ja
xor
fildll
outsb
fcmovb
jmp
lret
ds
cld
xchg
rclb
add
sub
iret
in
jno
popf
stc
sub
cs
jmp
cmpsb
jmp
rclb
mov
and
in
pop
push
ljmp
js
out
adc
js
pop
and
clc
ror
sti
cmc
sbbb
shr
sahf
lods
mov
sbb
sub
std
push
xlat
inc
push
ja
cld
mov
dec
adc
jl
repnz
sub
test
test
mov
imul
scas
shrl
jge
push
inc
movsl
ds
mov
dec
sbb
and
out
xor
pop
sti
into
push
rol
movsb
aad
out
lods
inc
push
pop
out
sbb
xor
or
cmp
push
and
shll
xor
pusha
jo
sbb
adc
loope
adc
jmp
repnz
lock
scas
aad
sbb
sbb
jb
fwait
pop
pop
in
cld
icebp
test
in
mov
sbb
xchg
out
dec
pop
jp
sub
loop
add
add
ret
sub
enter
ss
pop
and
sbb
xchg
std
sbb
push
scas
mov
cbtw
iret
rolb
jb
aaa
pop
into
ja
aam
aam
mov
ret
lods
mov
lcall
and
mov
jnp
mov
sbb
sub
fucomi
xor
pop
fnsave
insl
inc
leave
loope
pop
and
iret
rcr
dec
dec
sbb
and
xchg
pop
arpl
pop
imul
xor
testl
mov
aam
mov
leave
cmp
and
add
leave
adc
add
push
subl
mov
and
sbb
inc
push
std
movsb
mov
pop
mov
mov
loop
sbb
adc
stc
inc
pop
xorb
xchg
sub
in
iret
test
pop
dec
fmuls
and
sti
fldenv
jo
xor
into
push
cli
or
data16
adc
sahf
adc
rolb
inc
cmp
and
sub
xchg
mov
xorl
popa
jne
jb
fwait
add
rol
subb
std
enter
dec
dec
aad
shrb
lods
push
mov
movsb
jge
push
rclb
pop
ror
jno
mov
mov
ret
sbb
jbe
dec
dec
jne
mov
jo
call
dec
test
push
sbb
lods
popf
adc
push
push
lods
jp
xchg
cmpl
inc
sbb
xorb
pop
cmp
repz
and
imul
mov
ljmp
adc
jp
xchg
fst
cltd
and
int
or
xchg
mov
push
adc
in
rolb
and
add
push
mov
fadd
ret
test
mov
push
push
outsb
push
pushf
xor
out
dec
mov
push
or
ljmp
sbb
dec
bound
inc
or
pusha
popa
dec
jmp
mov
hlt
pop
loopw
fistps
or
sub
push
push
or
sub
inc
dec
stos
cmp
subb
sbb
mov
cwtl
and
dec
ljmp
cmp
scas
out
aam
cmp
pop
xchg
test
xor
inc
inc
bound
aam
loopne
inc
or
mov
stos
out
jno
imul
lcall
les
test
scas
adc
sbb
or
adc
ja
imul
sub
and
xorl
xor
xor
pop
mov
sub
mov
jge
mull
mov
movsb
out
push
and
mov
sarl
sbb
pusha
xchg
fsubrp
dec
mov
dec
stc
movsl
or
adc
mov
jmp
mov
sub
ret
push
xchg
mov
retw
cmp
or
imul
lea
icebp
cmc
sbb
ja
dec
out
or
dec
stc
pop
jne
sbb
jp
push
add
insb
adc
shl
dec
mov
mov
mov
and
pusha
inc
xchg
ljmp
std
dec
adc
pop
arpl
pop
ror
js
push
lock
xchg
mov
mov
mov
rorl
jae
inc
test
cmp
pop
mov
jne
loope
push
sub
arpl
cmp
sbb
movsb
and
loopne
pop
jmp
bound
inc
scas
out
cltd
mov
hlt
xchg
lea
push
gs
pusha
ret
adc
xchg
cli
fstl
dec
inc
sub
mov
dec
sti
jb
sbb
mov
jecxz
or
jecxz
mov
mov
xchg
cmp
jmp
inc
jns
ljmp
mov
dec
aad
imul
pop
loop
out
out
or
stc
gs
mov
push
fwait
sbb
call
les
fwait
mov
lds
adc
jmp
mov
cltd
pushf
rol
lcall
xor
inc
add
jge
xchg
jl
jge
and
mov
add
mov
movswl
push
jns
fwait
roll
aad
inc
xor
jno
dec
pop
in
loopne
cmpsb
lods
adc
mov
adc
inc
fimull
aam
int
and
loop
testl
imul
sub
dec
cmpb
cld
xor
les
jnp
or
push
call
adcb
pop
xchg
in
push
mov
sub
movsb
sbb
pop
es
mov
and
aaa
ret
stc
pop
pop
sbbl
shlb
cmpsl
sbb
subb
and
mov
add
pop
popa
lcall
xor
sbb
xorb
adc
dec
dec
pop
test
cwtl
js
mov
addr16
mov
aam
imul
dec
ret
fmulp
push
int3
out
or
adc
xchg
jle
jmp
aaa
je
sub
cmp
pop
push
ljmp
xchg
mov
ja
push
js
clc
push
aas
dec
or
inc
ror
sbb
lea
and
aad
push
add
fsubr
cld
daa
xchg
xchg
jnp
cmp
mov
test
mull
push
mov
rclb
into
add
mov
pop
mov
mov
jl
dec
in
repz
aam
jo
mov
jo
ret
in
out
adc
fimuls
dec
addl
fistpll
mov
fadds
shll
movd
xor
insb
cmp
stos
aad
mov
mov
xor
mov
push
aam
cltd
xchg
lds
dec
mov
stc
push
pop
pop
mov
xchg
xor
repz
out
xor
aam
fsts
xor
pushf
adc
mov
mov
ret
push
pusha
clc
cltd
jecxz
test
xchg
sub
jmp
inc
xor
jl
loopne
jg
inc
negl
push
shr
test
ja
cmp
and
jge
cltd
out
push
call
nop
stos
mov
pop
xchg
sar
cli
push
cmpsb
cmpsl
mov
movsl
dec
out
repnz
loopne
stos
mov
imul
dec
pop
sub
push
lds
dec
push
mov
mov
add
sbbl
inc
xor
inc
mov
mov
stc
pop
in
xchg
mov
push
repnz
mov
insb
mov
jno
out
xchg
insl
push
lcall
cmp
std
stos
gs
sbb
je
and
ficoml
inc
outsl
xchg
rcrl
ja
fsubrl
repz
imul
repz
or
je
or
es
mov
and
pop
psubsb
fsts
mov
mov
pop
push
lea
inc
dec
push
lds
jp
lods
adc
mov
adc
shlb
es
xchg
bound
cmp
add
inc
insb
sahf
mov
ss
pop
icebp
movsl
int
test
or
faddl
cs
lahf
inc
fdivl
scas
jb
xchg
cltd
lods
sti
stc
cmp
lcall
insl
push
xor
and
xor
repnz
inc
cmp
mov
and
ja
mov
mov
jmp
pop
jns
and
addb
arpl
pop
sub
xchg
leave
lods
add
stos
sahf
mov
scas
es
adc
inc
jnp
cmp
jle
mov
andl
fwait
int
xchg
enter
mov
mov
xchg
mov
int3
aam
cmp
add
cmp
and
test
add
pop
out
ficompl
out
jl
mov
push
pavgw
ret
das
mov
hlt
mov
mov
mov
ss
push
pushf
xor
xor
pop
push
adc
popa
sti
lahf
dec
lcall
xchg
testl
dec
je
js
jnp
mov
mov
insl
push
push
mov
inc
ret
imul
jnp
xor
arpl
xor
jno
cs
xchg
push
lahf
xlat
cmp
aas
andl
roll
imul
xor
movsl
loop
movsb
push
in
out
mov
dec
adc
daa
mov
xchg
pop
and
pop
cmp
push
cmp
xchg
jl
adc
je
or
cld
testb
scas
jne
test
cmp
fwait
bound
cmpsl
dec
repnz
xor
push
shlb
cmp
or
cmpsb
addr16
inc
test
loop
stos
iret
adc
cmp
rorl
scas
adc
dec
aaa
cmpsb
xorb
mov
adc
pop
sbb
hlt
subb
sti
xchg
cmpsl
dec
jg
test
jne
inc
or
sahf
cmp
sub
lret
xchg
mov
lock
jne
dec
scas
jbe
iret
xchg
test
push
mov
pop
scas
pop
icebp
insb
inc
cmp
lods
out
xlat
insl
or
sbb
gs
cwtl
ja
outsb
fmul
jo
cltd
pop
test
push
sbb
mov
mov
or
jle
push
call
bnd
sub
push
scas
push
pop
jecxz
fimull
dec
and
dec
xor
or
repnz
aaa
xchg
das
cld
or
add
or
nop
jo
outsl
push
mov
movsb
in
xchg
bound
mov
jmp
sub
xlat
fwait
test
sub
test
imul
jnp
sub
jno
sbbl
cltd
mov
adc
aas
ficomps
fistpl
orb
xor
add
mov
leave
mov
in
sub
test
ljmp
aam
sbb
jae
sbb
inc
shlb
movsl
pop
sti
repnz
stos
cmp
mov
aaa
ret
adc
xchg
push
sbb
loope
xlat
cmp
pop
stos
jecxz
add
mov
dec
lods
int3
or
bound
cmpsl
out
cmp
mov
and
aam
push
mov
lods
or
mov
out
ret
leave
pop
or
ja
mov
jg
mov
addb
jl
dec
add
xor
ja
daa
jno
xor
xchg
sub
aaa
hlt
popf
jl
in
shll
lret
jmp
add
or
fcompl
idivb
xor
jecxz
jb
add
jmp
les
pop
imul
add
inc
ljmp
jb,pt
inc
xor
adc
pop
jecxz
flds
push
int
lret
jb
js
add
mov
outsl
fnstcw
mov
push
xlat
push
adc
or
jle
sub
sti
xchg
or
xor
aam
xor
movsb
dec
jl
or
loope
fcos
jno
push
js
sahf
mov
mov
icebp
imul
pop
cltd
in
int
into
mov
add
jg
fldenv
decb
insl
in
cmp
adc
sbb
shlb
das
inc
fnstcw
mov
aas
lods
push
mov
inc
mov
outsl
xchg
bound
xor
test
cmp
shr
pop
inc
shrb
pop
push
jo
pop
dec
mov
xchg
jmp
scas
fstl
inc
das
arpl
add
fwait
jno
cmpb
adc
outsb
add
sbb
xchg
xor
sbb
pop
aad
fsubl
push
mov
aam
cmp
cmp
pusha
sti
out
pushf
sub
popa
xchg
mov
hlt
popa
repnz
jge
test
mov
rclb
iret
imul
test
ja
sti
and
mov
mov
and
out
cs
mov
fsts
mov
sbb
or
inc
test
loope
dec
push
pusha
mov
push
icebp
cli
or
xor
out
mov
daa
xchg
sub
sbb
insl
dec
dec
ja
out
and
push
jb
or
scas
testb
adc
lds
jl
outsl
in
jecxz
rcll
xor
xchg
gs
pop
pop
inc
cli
jge
pop
mov
int3
stos
cmp
push
push
lods
mov
dec
jb
or
push
imull
addl
push
xor
dec
fwait
lcall
pop
sbb
movsb
rcll
mov
and
insb
add
ficompl
cmp
imul
add
pop
mov
mov
push
daa
pop
cmpsb
in
lock
cmp
pop
call
xchg
xor
cmp
aam
arpl
dec
jge
fs
sub
jl
mov
add
sbb
aas
int3
sub
push
mov
icebp
xor
inc
jmp
push
scas
xor
imulb
mov
inc
out
ret
scas
lea
push
add
sbb
inc
mov
jp
or
shrb
jb
sub
sbbb
ja
sbb
mov
mov
int
xchg
fdivs
jae
jne
in
adc
dec
add
sbb
cmp
add
mov
popf
push
inc
hlt
orb
xchg
jmp
jecxz
add
das
and
jg
test
mov
sbb
jl
pop
ss
hlt
mov
jmp
andl
jg
std
xor
data16
and
bnd
sub
cmp
mov
push
in
sti
push
add
pop
lret
push
or
les
jb
imulb
pusha
inc
mov
dec
jl
lock
aas
enter
mov
sbb
pusha
rcrl
xchg
in
mov
aad
push
jmp
jnp
fstl
in
cmpl
pop
fldl
dec
int3
sub
pop
cs
add
add
popa
adc
sbb
cmp
and
scas
movsl
in
cmp
rcl
addl
pop
mov
adc
sbb
ret
pop
mov
dec
scas
frstor
xor
or
push
fwait
pop
jle
sbb
aaa
xchg
mov
leave
cld
aas
mov
jge
pop
mov
repnz
push
xchg
out
xchg
test
inc
mov
cltd
ret
mov
pushf
cmp
xchg
stc
push
pushf
push
push
jns
xor
inc
mov
enter
mov
pcmpgtw
sbb
adc
mov
int3
and
pop
sub
and
push
jmp
adc
mov
dec
loopne
xor
xchg
pop
push
pusha
jp
push
dec
lock
ret
in
cltd
dec
mov
adcl
out
push
inc
aas
mov
push
push
jg
push
stc
cmpb
into
ja
repz
call
xchg
sub
stos
cmpsl
sbb
sbb
or
adc
jp
movsb
out
mov
and
inc
mov
push
rclb
push
add
mov
jp
fbld
cld
lahf
lea
pushf
sbb
out
jp
adc
aas
mov
pop
lds
inc
psrlw
sahf
fisttpl
out
xchg
test
sub
outsl
fnstenv
filds
lea
movsb
sub
mov
cs
es
sbb
jne
das
dec
inc
std
inc
push
ja
shll
push
ficomps
cltd
xchg
jg
loope
push
xor
push
shrl
and
mov
addr16
ret
pop
and
loopne
pop
xchg
cld
test
rep
add
in
mov
insb
mov
pop
or
or
push
fidivl
aam
ds
push
jb
int3
jl
testl
push
mov
cmp
dec
sbb
arpl
aad
movsl
cmp
push
add
jl
out
xchg
push
mov
mov
mov
and
xchg
dec
gs
xor
insl
out
pop
pop
stos
lds
xor
lods
aaa
sub
sub
jb
jb
inc
mov
aas
sub
xchg
xor
arpl
outsl
ret
icebp
ja
xor
pop
aam
mov
pop
aas
negl
je
mov
dec
pop
xchg
rclb
iret
xchg
or
adc
dec
scas
push
cmp
xchg
jg
sbb
rcrb
movsl
inc
and
movsb
pop
es
mov
dec
and
mov
mov
in
les
or
mov
and
leave
outsl
xchg
sbb
ja
xor
jnp
jae
aad
sti
mov
les
push
jmp
sti
lods
inc
mov
lret
test
test
in
loop
push
arpl
and
xor
icebp
pop
xlat
sbb
xchg
pop
sub
push
adcl
fists
cmp
jle
ja
mov
stc
cmp
xchg
aad
ret
or
xchg
push
push
sahf
xor
sbb
jl
test
sub
xchg
xchg
daa
or
jmp
sub
fwait
jle
loopne
push
loope
cmp
push
ret
sbb
or
mov
cmp
arpl
mov
mov
movsb
mov
icebp
xorb
ficoms
lret
imul
adc
mov
xorb
ret
addr16
mov
pop
jae
ficomps
pushf
adc
xlat
jmp
mov
gs
flds
or
ljmp
orb
bound
inc
pusha
test
xor
cmc
sub
mov
ja
adc
cli
jle
mov
inc
push
mov
mov
adc
mov
out
int
mov
iret
and
cld
insb
shrl
mov
cmp
dec
jmp
mov
imul
inc
mov
sub
mov
adc
addr16
or
cmpsb
fisubrs
sub
push
add
dec
rcrb
xchg
mull
lods
sub
mov
cmpsl
icebp
dec
pop
sub
daa
mov
js
in
adc
adc
arpl
outsl
jb
call
nop
outsb
stos
loopne
inc
or
sarl
arpl
mov
movsb
in
in
les
js
jmp
jecxz
and
mov
sbb
adc
std
jp
popw
and
leave
dec
aam
test
inc
cmp
in
mov
dec
adc
into
aad
mov
int3
dec
rorl
mov
out
outsl
aaa
lds
pushf
sub
cwtl
cmp
rolb
add
pop
dec
jmp
cmp
std
push
push
push
xlat
jg
push
fs
push
test
std
pop
pop
sti
pop
xchg
cmp
fidivs
arpl
xchg
fidivs
out
lock
pop
add
xchg
or
dec
sub
pop
dec
repz
lcall
movsl
maxps
push
lds
scas
inc
aaa
jg
push
mov
cmc
push
xor
mov
cli
xor
push
and
mov
rcrb
insb
cltd
fildll
jle
push
nop
xchg
aaa
and
inc
enter
repnz
ljmp
sbb
lret
gs
scas
orl
sbb
xor
jb
mov
dec
sbbb
inc
fdivrl
xchg
leave
push
aad
adc
das
mov
cmpsl
cmc
inc
jge
scas
bound
movsb
loopne
mov
in
rol
pushf
adc
xorl
push
stos
jne
aam
dec
lock
mov
mov
insl
xchg
int
adc
loopne
cmpsl
sbb
arpl
mov
outsb
jge
data16
ljmp
mov
or
in
xchg
adc
mov
mov
addr16
push
call
stos
jno
test
mov
repz
into
dec
adc
add
xchg
loop
cltd
sbb
mov
jge
repnz
pop
test
cwtl
pop
adc
push
out
jmp
sub
cli
mov
imul
dec
fbld
enter
sbb
ds
adcb
mov
je
mov
pop
lret
ljmp
mov
loop
jle
leave
lods
test
test
movsb
xor
jne
ficoms
arpl
cmpsl
mov
jg
loopne
jle
mov
push
push
lods
repz
dec
fwait
mov
mov
pop
pop
mov
pushf
dec
in
and
mov
lret
sbb
leave
mov
repz
inc
sbb
ljmp
das
iret
and
adc
xchg
lret
push
mov
ss
into
sbb
xchg
or
in
lahf
fwait
mov
stos
clc
lret
into
aas
sarl
aas
cmpl
push
jo
dec
jb
repz
push
dec
ljmp
faddp
in
sbb
and
outsb
fwait
xchg
clc
xor
lret
add
fisttpl
jl
cmp
fsubl
pushl
push
insl
or
jecxz
testb
xchg
mov
mov
or
inc
ret
add
mov
in
push
lret
mov
outsl
xchg
push
sbb
mov
cld
mov
addr16
adc
sub
int3
mov
nop
or
mov
icebp
std
imul
fnsave
out
jae
cmp
xor
xchg
test
repnz
clc
loope
psrlw
repnz
insl
pushf
orl
adc
push
lcall
push
mov
pop
pop
mov
in
jb
adc
sahf
lock
jns
pop
or
insb
inc
pushf
dec
pop
insl
clc
jno
ret
fmulp
adc
test
rcr
insl
test
mov
add
or
icebp
sahf
leave
push
xchg
ljmp
outsl
add
aaa
sbb
jae
xchg
jae
mov
inc
xor
cmp
xchg
rcr
xchg
int3
and
in
std
mov
leave
sarl
pop
loopne
insb
bound
stc
and
lret
in
daa
mov
xor
pop
push
push
out
lock
gs
in
bound
xlat
pop
jle,pn
cmp
lret
and
push
mov
popf
lock
dec
or
fldcw
mov
outsl
hlt
xchg
add
sbb
push
mov
adc
sbbb
int3
push
lret
lahf
mov
roll
mov
push
ljmp
fidivl
jo
ret
mov
scas
and
pop
fisttpl
clc
or
pop
or
movsl
inc
sbb
sbb
fmull
ljmp
pusha
mov
add
mov
fists
mov
xchg
mov
cmp
push
cmp
mov
fcoms
add
and
or
push
aaa
das
push
sti
movsb
in
adc
jecxz
stos
ret
add
jle
int3
pushf
sub
pushf
mov
jmp
icebp
xchg
mov
or
mov
mov
ficompl
inc
cmp
sarl
mov
jmp
push
mov
push
cmp
jmp
jg
add
xor
js
and
xchg
orb
pop
cmp
xchg
loop
mov
add
insl
jnp
jmp
jl
mov
xrelease
mov
xchg
idivb
xchg
xchg
out
mov
mov
std
stos
sahf
xchg
dec
roll
fisttps
dec
or
loop
xchg
fnstsw
push
popl
cmp
into
aam
or
mov
mov
gs
dec
inc
sbb
xor
add
cmpsb
adcl
divl
imul
cmpsb
inc
add
dec
icebp
decl
xchg
ret
xor
or
pop
sahf
test
leave
sub
out
ficompl
jmp
jb
ss
mov
out
repnz
sahf
stc
shrb
xor
insb
sub
add
add
dec
push
cmp
pop
aas
sahf
out
and
pop
mov
movsb
imul
pop
dec
sub
dec
adcb
aam
pop
mov
pushf
addb
jle
int
cmp
inc
adc
sti
icebp
call
aad
ja
nop
sahf
or
cmp
inc
lcall
mov
repnz
outsl
lret
or
and
dec
jbe
or
test
dec
dec
push
sahf
fs
pushf
cwtl
sbb
sahf
mov
or
hlt
aam
popf
mov
daa
pushf
jb
add
push
cmp
lds
int3
mov
cmp
or
ljmp
mov
sub
punpckhwd
imul
jmp
dec
xchg
xlat
jo
mov
add
fsubl
mov
fwait
and
ds
xchg
js
repnz
sti
lods
xchg
js
jbe
insl
adc
push
dec
adc
xchg
movsb
js
sbb
mov
in
and
lea
shll
outsl
jecxz
add
es
mov
and
cltd
rolb
dec
les
adc
ja
adc
pop
push
ret
mov
cmpsb
loope
cmp
adc
add
push
cmpsb
add
adc
repnz
adc
or
addb
pusha
popa
lods
rdmsr
xor
arpl
jl
js
pop
out
mov
mov
mov
dec
les
andb
push
scas
andb
int3
push
js
cmp
xor
xchg
pop
inc
fcmovb
add
xchg
mov
fnstcw
mov
imul
xor
adc
scas
bound
sub
ljmp
xor
test
adc
dec
cmp
idiv
enter
jns
fwait
outsb
sbb
sbb
arpl
jg
sarl
mov
jmp
lods
out
test
inc
mov
jne
push
mov
scas
or
cmpsl
test
and
jno,pt
push
dec
xchg
leave
ret
xchg
int
push
pop
or
adcb
mov
add
jae
pushl
mov
sub
nopl
sub
loope
xor
gs
sbb
mov
push
scas
enter
mov
pop
in
add
push
stos
xchg
test
add
stos
je
lods
leave
sbb
jnp
jl
and
pushf
mov
and
push
mov
stos
andl
shl
andl
daa
pop
stc
push
sti
fstpt
jb
or
add
fs
js
icebp
xchg
sbb
dec
jg
cmp
jae
aaa
stc
test
scas
jae
inc
xor
and
xchg
mov
jle
daa
pop
lods
fildl
mov
aad
int
ja
call
dec
sub
fsts
and
or
push
scas
call
fcoms
lods
push
jns
mov
dec
pop
push
mov
push
out
adcl
jmp
push
xchg
hlt
ret
push
ds
cmc
dec
out
sbb
mov
ja
xor
adc
jmp
mov
add
scas
shlb
sbb
out
out
xor
movl
in
mov
pop
pusha
or
push
ret
leave
mov
test
hlt
dec
shlb
lods
sub
mov
daa
movb
loop
jp
mov
and
pop
insb
mov
stos
jge
cmpsb
xchg
stos
lret
notb
inc
lahf
xor
push
jae
push
fsubrl
out
mov
lods
sbb
xor
cmp
mov
into
dec
addr16
sub
jmp
mov
pusha
xor
fidivrs
sub
pop
int
sbb
test
das
arpl
mov
lcall
loope
stos
je
jecxz
enter
loopne
outsb
sahf
pushf
lret
sbb
add
push
push
mov
xchg
cli
inc
push
orl
cmp
imul
notb
inc
dec
test
xchg
jae
out
add
sub
mov
lret
adc
or
and
je
daa
loope
sub
inc
xor
repz
sbb
pop
mov
xor
or
insl
mov
orl
push
or
pcmpgtw
bound
in
jl
jle
pop
aad
lods
mov
out
repnz
ret
arpl
pop
sub
pop
xor
cmp
xchg
in
jle
jne
or
push
pop
pusha
fcompl
sti
aaa
fbstp
cmc
jle
mov
jo
out
pop
ss
repz
sbb
mov
jg
icebp
pop
push
cltd
ret
inc
icebp
int
cmp
adc
pushf
lret
loop
push
dec
js
push
dec
popa
and
xor
push
cltd
push
jne
xchg
dec
jge
xchg
add
sbbb
sub
outsl
loopne
iret
cld
sahf
mov
cltd
cmp
out
xchg
je
sub
stos
or
iret
jmp
adc
jmp
daa
lock
test
mov
adc
lods
pop
iret
dec
mov
push
sti
sub
gs
ds
iret
mov
push
fisttps
inc
push
cmp
in
lahf
out
and
mov
sbb
or
adc
scas
pusha
fiadds
xchg
push
adcl
sar
jecxz
nop
mov
mov
das
scas
xor
mov
imul
push
imul
cmp
cld
cld
rolb
in
push
xchg
push
push
mov
or
xchg
mov
pop
ret
add
dec
lods
test
xor
add
pop
in
in
hlt
jg
push
scas
sbb
cltd
bnd
sbb
or
pop
pop
xchg
daa
sub
daa
stos
dec
mov
add
jns
mov
fildl
dec
lret
jg
or
xor
pop
mov
stos
es
int3
jg
cmp
hlt
mov
dec
dec
add
js
fdivp
mov
sbb
lahf
adc
data16
xchg
daa
inc
mov
movb
adc
idiv
scas
loop
es
sub
push
out
loop
inc
push
jge
cltd
pop
and
jle
inc
mov
gs
or
xchg
jp
imul
sub
mov
mov
sub
aad
dec
push
jno
add
adc
addb
dec
sarl
or
int3
jno
or
hlt
cmove
cs
add
les
cmpsb
push
inc
sbb
fistpll
cmc
ds
dec
stc
loopne
and
pop
pop
mov
outsl
loopne
xchg
push
sbb
ficompl
cmc
sbb
in
add
and
cmp
inc
jne
rclb
fnstcw
cmp
in
pop
iret
mov
cli
loopne
push
lods
mov
aaa
pop
pop
arpl
das
divb
jmp
push
fcmovne
mov
jae
clc
and
sub
pop
jno
pop
xor
dec
xchg
sbb
inc
int3
imul
aam
popa
mov
dec
adc
in
dec
shll
iret
sub
ja
jg
pop
data16
dec
popa
les
pusha
out
es
push
sbb
inc
out
std
dec
xchg
test
push
jl
pop
inc
sub
cli
flds
inc
dec
fwait
hlt
xchg
or
iret
pop
dec
push
cli
dec
push
outsl
rdtsc
jecxz
outsl
lret
add
mov
rorl
mov
xlat
addr16
in
mov
out
lcall
inc
arpl
dec
je
mov
mov
push
aad
or
imul
iret
mov
xor
loop
cmp
dec
test
sub
push
mov
ja
xlat
jmp
stos
sbb
pop
or
icebp
inc
std
sbb
jbe
push
sbb
inc
call
dec
and
jnp
mov
adc
bound
inc
ljmp
cmpsl
xor
adc
fidivl
out
out
loope
or
xchg
lds
outsl
iret
jnp
jle
lea
clc
push
mov
out
jne
jl
pop
nop
xor
in
pop
in
mov
repz
jp
int
push
jecxz
mov
lds
adc
dec
js
cmpsb
cwtl
rcrb
mov
stc
gs
fwait
push
aam
shlb
cli
cmp
outsb
filds
xchg
js
dec
pop
insb
push
test
rorl
jl
jns
scas
out
adc
mov
mov
sub
int3
test
dec
test
out
mov
xchg
out
sbb
xlat
ja
jbe
sbb
int
xor
xchg
cmpsb
test
sbb
xor
in
pusha
pop
mov
movb
xchg
mov
pop
cmp
test
sub
mov
pop
xchg
and
enter
jne
push
adc
and
sub
adc
sahf
cmc
push
add
std
aas
outsb
lcall
aas
pop
aaa
movsl
pop
hlt
sbb
insb
push
adc
test
cmp
mov
inc
and
adc
test
lock
inc
pop
add
dec
loop
inc
sub
dec
xchg
into
sahf
test
out
xchg
pusha
fsubs
dec
mov
dec
and
and
es
push
push
mov
mov
scas
inc
adc
jb
fmul
pusha
outsl
or
adc
xchg
inc
ss
pop
sub
addl
mov
xor
ja
decl
jns
cli
push
insb
cmp
jne
xchg
fildl
loopne
lock
sbb
sbb
fs
scas
xchg
mov
mov
sub
adc
or
xor
call
push
cmp
cli
push
adcl
fdiv
jo
sub
out
xchg
mov
sarl
lods
fildl
aam
mov
cld
mov
xlat
sub
iret
inc
pop
xchg
lret
icebp
test
and
popa
and
cwtl
sbb
cmpsl
js
push
push
shr
mov
mov
and
push
pop
inc
out
pop
mov
push
ror
inc
call
cmp
outsl
xor
lahf
mov
or
outsb
cli
cmp
or
xchg
push
xor
mov
adc
pop
mov
or
sub
jnp
inc
int3
jle
cwtl
or
sub
mov
rorb
shll
pop
xor
imull
sub
leave
push
add
mov
sbb
jns
movb
dec
nop
sahf
mov
jmp
xorl
push
ds
jbe
stos
jp
aas
adc
sbb
mov
int
dec
daa
stos
lret
imul
bound
mov
add
jo
adc
fwait
gs
dec
addr16
and
jns
jmp
mov
insl
sbb
fsubl
mov
mov
and
push
mov
imul
dec
stc
sub
shrl
cmp
int
nop
add
xchg
clc
push
inc
or
push
mov
xor
mov
into
mov
aam
in
stos
rclb
or
fstl
and
in
sti
cwtl
sub
mov
xchg
das
xchg
add
mov
adc
sub
popf
push
sub
sbb
out
movsb
rol
jge
mov
dec
icebp
dec
mov
adc
mov
rol
repnz
mov
outsb
lock
push
mov
out
push
pushl
out
adc
popa
inc
sahf
jl
or
movsl
pop
repnz
dec
in
inc
and
loope
cld
xor
fiadds
lods
inc
sub
and
mov
test
jmp
mov
xchg
scas
pop
mov
pop
jecxz
cmp
xchg
dec
push
dec
and
and
jne
sbb
jecxz
ljmp
adc
push
stos
mov
aaa
mov
add
shll
and
jo
mov
lcall
fsubs
imul
mov
inc
movsb
fcmovbe
cmc
movsb
inc
fistpl
cmp
testl
lods
idivb
sbb
nop
lcall
loope
sti
adc
push
jecxz
fwait
jle
cmp
cld
jb
in
mov
out
incl
aaa
lret
mov
xchg
xchg
xor
stos
pop
adc
pop
add
inc
fsubs
mov
sti
xor
or
test
inc
or
xor
xchg
mov
jbe
insb
imul
outsb
bound
xor
push
in
inc
and
mov
adc
jo
pop
cmp
dec
cmpsb
add
psubw
mov
inc
out
sbb
loopne
mov
dec
inc
cmc
add
inc
cmp
cmc
mov
xchg
xchg
push
push
popf
bound
push
sbbb
sti
xchg
outsl
sahf
jmp
movsb
adc
sbb
mov
mov
scas
xchg
dec
sbb
dec
pop
xor
ret
mov
insb
mov
shl
test
repz
jne
mov
inc
mov
pop
shl
ret
js
popf
xchg
jns
int3
fbstp
pop
dec
mov
cmpsb
mov
ss
adc
lcall
push
mov
push
into
dec
subl
cmp
jp
outsl
push
add
in
xchg
nop
shl
jb
adcb
lock
jno
fwait
pusha
add
push
enter
in
mov
or
test
push
and
xchg
daa
xchg
lea
xchg
aad
pop
fwait
jp
xchg
cltd
movsb
out
jmp
inc
sbb
lret
andl
bound
out
fldenv
cmc
xchg
popa
or
scas
or
xchg
push
dec
out
xchg
jns
in
mov
push
xchg
clc
ficomps
sar
pop
fistl
repnz
in
add
xchg
ljmp
ret
add
test
mov
add
imul
shrl
cmp
lahf
imul
adc
ds
push
je
in
mov
add
mov
imul
sbb
and
loope
jnp
fcoml
mov
mov
inc
xor
sbb
mov
sub
push
sub
add
or
add
cwtl
ficomps
inc
inc
loopnew
inc
add
fwait
movsl
sub
jo
xor
and
pop
pop
mov
leave
fsubrs
xor
xchg
inc
pop
xchg
nop
or
call
idivb
jp
stos
call
mov
cltd
push
mov
stc
lcall
pop
mov
aad
pop
push
lret
cmp
lret
shlb
lock
sub
jmp
lods
mov
popa
sarl
cmp
mov
fidivs
cmpsl
push
and
sbbb
outsb
std
jno
lahf
or
mov
xchg
fmull
cmp
lods
add
sti
paddw
xor
mov
pushl
out
mov
int
movsb
js
pop
pusha
push
jmp
out
xlat
xor
cltd
mov
pop
fdivrs
rclb
nop
mov
out
add
cmpsl
shll
sbb
into
cltd
dec
xor
sbb
out
stos
cwtl
xor
dec
std
pushf
jg
test
push
loop
rorb
shrl
loop
cmp
xor
adc
mov
mov
cmp
aam
shr
jmp
adc
xchg
xor
jo
pop
jg
outsl
testb
jge
xchg
cli
fs
adc
fistpll
xor
jp
or
jo
mov
cld
imul
xorl
xlat
test
leave
mov
mov
fildll
and
dec
cmpb
inc
fwait
adc
call
mov
dec
mov
dec
add
das
sahf
jl
fwait
jmp
jb
hlt
sub
icebp
bound
test
mov
mov
add
push
popf
popa
aaa
lahf
xlat
sahf
mov
jo
adc
js
dec
pop
jle
inc
addr16
and
aad
inc
bound
jb
pop
sahf
int3
jmp
cli
insl
and
adc
pop
pop
faddl
in
jns
addb
imul
xchg
mov
shll
int
mov
test
ficompl
fsubs
xchg
mov
cmpb
cmc
mov
sub
mov
cmpsb
loop
mov
sti
xchg
mov
mov
fimuls
repnz
xchg
loop
fiaddl
jae
xchg
pusha
or
testl
out
in
in
sbb
nop
mov
das
loope
mov
mov
imul
sbbb
xchg
inc
jno
fsub
jns
pop
mov
test
pop
cmp
bound
sub
pop
adc
lds
pushf
sub
cmp
jmp
lea
sub
mov
xor
push
mov
cwtl
pop
jb
jmp
in
or
sub
push
cmp
loop
arpl
rcl
jge
orl
push
fcmovne
or
pop
push
mov
sbb
cmp
sbb
sbb
sub
loopne
in
clc
cmpsb
lret
mov
mov
subl
mov
sbb
movsl
test
pop
fcomp
lret
inc
aam
inc
push
lcall
jge
cmp
das
sahf
cmp
dec
das
adc
sub
xchg
jae
adcl
cmp
push
push
ss
jp
xor
dec
daa
push
js,pn
xor
les
inc
std
dec
cmp
shlb
push
push
cld
mov
ds
icebp
jb
jle
jg
ret
sub
subl
daa
xor
mov
je
aam
nop
sbbb
subl
loopne
or
lret
inc
and
es
sub
xor
inc
xchg
in
push
mov
jae
jg
ret
or
int3
stos
out
dec
jge
mov
dec
pop
or
fdivr
enter
rcl
aaa
push
in
repnz
jbe
xchg
dec
sahf
xor
call
cmp
or
movsl
lods
idivl
add
popa
in
mov
add
mov
jmp
sbb
jbe
and
dec
insl
push
adc
sbb
fstl
inc
iret
ret
adc
mov
lock
or
insl
add
fwait
mov
leave
mov
popl
xorb
popf
inc
cs
dec
out
out
fildll
shll
mov
inc
iret
xor
sub
fisttpl
fnstenv
popf
xor
repz
and
jl
inc
adc
mov
pop
popa
es
and
ss
cmp
jo
add
pop
fisttpll
lods
jp
sbb
cmpsl
lcall
test
int
lods
das
aaa
addr16
mov
and
xchg
fwait
jbe
jo
push
daa
mov
push
loop
pushf
out
jae
or
adc
add
je
xor
mov
cmp
add
loopne
lock
test
hlt
lahf
lea
lds
pop
lds
inc
sbb
lock
push
psubsb
roll
cmp
lock
push
scas
jge
ret
jl
pop
jmp
pushf
mov
xchg
scas
adc
sub
gs
or
jns
or
test
movsl
movsb
pop
mov
pushf
cmp
shlb
je
mov
scas
mov
adc
icebp
fsubr
and
dec
sbb
xlat
xor
ljmp
test
mov
aas
ret
pop
in
add
lahf
testb
aam
jl
inc
cmpsl
pushf
repz
push
xor
stc
jae
mov
std
aad
jno
sub
and
sub
testb
mov
mov
enter
std
es
lods
cmp
cmpsb
pop
inc
shlb
xor
mov
repnz
dec
dec
mov
bound
in
outsb
dec
into
inc
adc
pushl
jb
scas
sub
sub
push
inc
lock
cs
mov
or
xlat
les
in
push
clc
mov
dec
cmp
jnp
out
push
mov
jg
mov
fwait
add
fistpl
mov
lcall
test
push
mov
sub
loop
dec
xor
mov
std
and
in
or
push
rcrl
cmp
cli
jle
mov
loop
mov
ja
push
shlb
pop
jae
sbb
mov
insb
fwait
inc
test
cmp
mov
mov
lock
add
fwait
cld
cmp
ret
stc
stos
inc
jg
push
ret
mov
jne
fsubr
mov
icebp
mov
out
movsb
inc
mov
repz
xor
ds
test
loop
stos
jg
jae
add
mov
lea
fwait
sub
mov
jne
push
and
imul
mov
es
cwtl
push
ret
add
fwait
cmpsl
jecxz
es
inc
dec
popa
dec
cmp
rcr
cwtl
aas
es
jo
adc
push
xchg
sub
es
and
pusha
aas
xor
or
mov
sbb
adc
call
test
jmp
and
daa
scas
sti
clc
add
mov
pushf
lea
xor
test
jmp
fwait
jmp
mov
jno
movsb
mov
fmul
std
or
out
and
call
xlat
lcall
icebp
mov
fmuls
mov
pop
imul
mov
aad
pop
mov
pushf
jmp
pop
xor
jae
testb
jno
xor
sbb
mov
fsubp
mov
sbb
cs
lock
jl
stos
outsl
xchg
or
mov
add
mov
arpl
les
insb
and
mov
gs
repnz
cs
mov
je
mov
mov
cmp
inc
imul
lods
mov
xor
or
sub
xchg
lret
or
inc
dec
push
or
push
hlt
jne
divb
add
mov
call
push
pushf
lahf
xor
jns
mov
inc
popa
dec
pop
cmp
loopne
cmp
test
mov
out
xor
icebp
lea
sahf
xchg
fldl
lcall
inc
out
mov
sahf
xchg
fwait
sub
cs
xchg
fcomps
enter
adc
inc
push
push
add
pop
jmp
mov
xor
mov
mov
mov
sub
sti
icebp
jg
or
stos
or
pop
ljmp
imul
scas
pop
loopne
push
icebp
rolb
adc
or
inc
xorb
mov
addl
mov
sti
hlt
fdivrs
add
cmpsl
rcrl
mov
or
dec
int
xchg
stos
mov
in
mov
pop
aas
mov
mov
movsl
push
push
test
call
aam
sub
scas
sahf
and
push
and
arpl
imul
xor
pusha
adc
inc
jns
add
mov
add
pop
test
cs
outsl
jmp
jae
xlat
or
aam
fdiv
js
jnp
adc
inc
fdivs
stos
sbb
icebp
add
cmpsl
cld
jns
or
push
rorb
call
aad
ljmp
popa
in
les
imul
and
cltd
mov
sbb
iret
dec
jmp
sbb
xchg
adc
inc
mov
mov
adc
popa
iret
call
dec
in
test
jp
mov
sub
in
es
js
insb
lods
cmp
jle
sbb
xchg
int3
push
and
and
out
and
ds
cmpsb
jo
inc
ficompl
push
push
pop
flds
xlat
jmp
jle
mov
cmpsl
into
add
add
sub
addl
clc
and
sub
adcb
jle
cs
out
adc
and
jae
pop
pop
mov
adc
cmp
ja
out
xlat
mov
dec
leave
pop
gs
or
jle
mov
ds
fcomps
push
test
inc
sub
push
cmpsb
xchg
pop
mov
leave
adcl
fwait
inc
mov
pop
mov
and
xor
adc
or
lods
iret
lods
add
dec
into
repnz
mov
jo
jge
loopne
sub
or
jno
mov
jne
gs
pop
sub
movsl
loope
push
push
mov
push
mov
sub
fst
repnz
call
scas
add
ret
xor
mov
fistl
int3
mov
sub
shll
sub
in
xchg
xor
mov
imul
or
xor
adc
ja
ljmp
xor
xchg
sar
hlt
xor
imul
mov
sub
insl
in
mov
lahf
sarb
mov
jo
mov
loop
adc
shrb
dec
inc
push
dec
cmp
mov
dec
sub
mov
addr16
pop
push
gs
loope
aaa
dec
xchg
pop
data16
ret
mov
in
dec
xchg
push
adc
sbb
mov
mov
xchg
sbb
xchg
adcb
ret
sbb
xor
jp
jge
inc
lods
cmp
dec
or
mov
jae
xchg
out
jmp
lret
data16
and
mov
add
dec
mov
dec
add
sti
mov
mov
jnp
or
pop
pop
mov
xor
fdivrs
xchg
xchg
jne
mov
dec
pop
xor
andl
inc
dec
mov
or
jno
ret
mov
das
popf
lahf
mov
aaa
cmpb
out
out
sbb
out
jne
lret
jo
dec
jge
test
leave
xchg
popa
out
mov
aad
cmp
jbe
add
push
dec
mov
pop
push
jno
jb
lcall
sbb
add
pop
adc
cli
fdivr
pusha
sbb
inc
hlt
mov
cmpb
aam
fiadds
or
push
mov
sub
insb
jmp
mov
fwait
cmp
cmp
repz
and
push
add
jno
cs
pushf
mov
repnz
out
jae
jle
xor
cmpsb
stc
adc
lods
cmovne
mov
xor
dec
and
mov
pop
inc
sub
pop
jge
mov
xchg
test
pop
inc
jae
test
shlb
out
int
jle
adc
loopne
jae
js
fwait
jno
ja
inc
movsb
or
lret
pop
adc
or
dec
cmp
int3
xchg
jbe
cld
xchg
dec
lcall
pusha
movsb
xchg
inc
sub
aas
test
mov
in
imul
outsl
pop
inc
adc
leave
adc
repz
scas
or
clc
dec
lock
fsubrl
mov
pop
xchg
ja
les
jg
jnp
push
fiadds
testl
push
pop
inc
insb
es
add
jle
sbb
lret
fmuls
movsl
pop
pop
adcb
std
imul
adc
pop
in
push
jp
pop
mov
xor
ret
test
sub
outsb
lahf
test
mov
mov
das
shrl
jle
cmp
cmp
pop
inc
enter
push
scas
jmp
add
clc
mov
arpl
in
iret
pop
inc
aam
mov
fistl
sbb
cmp
or
cltd
mov
mov
dec
call
dec
es
dec
jbe
mov
outsl
lods
lods
shr
lcall
mov
ret
xchg
and
int
rorl
loop
iret
and
js
sbb
pop
int
mov
dec
sti
jmp
xchg
dec
mov
fcoms
cmpsl
mov
lea
dec
pop
fadds
lahf
add
dec
xchg
add
pop
aam
cmp
cs
add
push
push
sahf
outsb
icebp
xlat
inc
fwait
jl
xchg
and
and
loopne
pop
pushl
call
sub
les
inc
xor
jle
inc
popf
shll
sbb
sbb
mov
pop
test
insl
icebp
sub
ficoms
enter
stc
mov
in
pop
loop
fwait
inc
push
pop
in
ds
dec
push
and
scas
sbb
add
call
push
xchg
fldcw
lds
jge
lock
leave
scas
mov
aaa
jnp
jge
adc
stos
ficoms
addb
fadd
imul
mov
add
test
adcb
daa
lods
dec
fwait
xor
in
xor
or
sbb
xchg
popa
imul
sbb
mov
mov
ret
jge
mov
pop
mov
pop
test
mov
call
icebp
add
fsts
dec
jns
lock
and
shll
sbb
fsubs
cmp
enter
aam
in
mov
mov
xchg
lock
inc
adc
daa
into
and
inc
sub
jecxz
and
insl
gs
aas
mov
test
lds
push
pop
adc
lods
push
or
stos
sub
xlat
daa
mov
inc
xchg
sbb
push
inc
jo
ljmp
push
popa
sbb
inc
cmc
inc
leave
sub
mov
push
popa
xchg
mov
out
pop
xor
pop
mov
pop
and
ret
pop
es
fimuls
vunpcklps
xchg
pusha
cltd
shll
xchg
rcr
lahf
jns
shrl
lods
push
orb
loopne
mov
jl
or
mov
mov
loop
pop
adc
pop
shll
pop
dec
add
jns
or
out
loop
lock
cmp
cmp
js
mov
ret
add
sbb
push
dec
in
sub
mov
cltd
fstl
xchg
inc
mov
push
iret
jle,pn
fsubs
test
dec
aam
out
outsb
pop
inc
popa
pushl
lods
pop
fsubrl
out
repz
into
xlat
xor
iret
jge
mov
mov
mov
data16
in
push
mov
test
dec
negb
jge
out
add
ret
pop
push
add
pop
jbe
xor
in
jne
mov
pusha
int
xchg
inc
jge
ret
or
pusha
mov
adc
aad
jbe
mov
outsb
mov
test
leave
es
pop
xchg
xor
add
mov
jg
sbb
int
sbb
data16
mov
inc
fildl
movsb
out
jno
je
push
in
fstps
xor
scas
rclb
mov
or
adc
sub
xor
pop
outsl
fmull
pop
frstor
ret
push
sub
push
fdivr
add
jmp
or
dec
insb
push
jbe
push
xchg
push
mov
clc
lods
test
jbe
sbb
ja
push
xor
mov
jecxz
add
in
lods
xchg
enter
sarl
mov
pop
mov
jae
cmp
lods
pusha
pop
add
dec
cmp
rcr
not
lea
pop
and
movsl
sbb
xchg
hlt
push
xchg
subb
adcb
rorl
pop
fisubs
je
aam
lods
icebp
shll
dec
fildl
fistps
dec
inc
fsubrp
cmp
mov
mov
out
add
pop
loope
movsb
scas
jmp
dec
sub
cwtl
int3
mov
inc
addr16
fidivrl
movsb
push
mov
mov
jno
clc
loopne
push
nop
mov
inc
cltd
inc
add
aad
mov
push
sub
rcr
jp
call
xchg
adc
xchg
add
xchg
mov
mov
xchg
movsb
imul
iret
push
mov
sub
cltd
sub
in
loopne
orb
shrl
int
movsl
add
adc
sub
movsb
jne
das
lea
dec
fstpl
xchg
ss
push
imul
add
imul
jl
icebp
jmp
xchg
sub
push
adc
mov
orb
pop
sbb
mov
push
ds
push
in
cs
sbb
sbb
test
inc
cmp
mov
pop
in
faddl
lahf
xor
add
mov
cmp
cs
dec
jl
mov
push
nop
pop
and
fiadds
shll
daa
inc
ljmp
das
int
add
daa
hlt
inc
or
sbb
fndisi(8087
xor
adc
jns
push
iret
inc
jecxz
das
jb
cs
mov
pop
ljmp
xor
cmp
xchg
xlat
adc
mov
sahf
jns
mov
cmp
incb
and
mov
adc
xor
stc
ja
cli
dec
in
push
mov
xorb
adc
cmpsl
lcall
xchg
mov
repz
jns
out
add
in
xchg
enter
insb
orl
xor
bound
jmp
pop
dec
dec
push
cs
xor
push
fmul
in
sub
test
into
cli
insb
add
mov
sbb
aad
pop
dec
mov
pop
ret
adc
fldenv
xchg
out
pushf
mov
fistpll
push
imul
inc
jb
cmc
or
and
and
xchg
xor
jbe
xchg
dec
cmp
pusha
xor
jno
cld
nop
push
pop
das
mov
leave
inc
movsl
ss
xchg
push
inc
test
sub
syscall
add
inc
into
cwtl
jge
aad
popa
xor
xor
mov
or
inc
mov
xchg
mov
call
jp
jmp
cs
cmp
or
pop
mov
movsl
pop
xor
jmp
sahf
es
fisubs
jnp
push
imul
test
shrl
in
repz
jl
inc
cmp
adc
sbb
lods
ret
bound
add
mov
popa
mov
sahf
lret
js
int
dec
inc
push
out
lahf
mov
mov
mov
cmp
cli
int3
push
lret
xchg
pushf
xchg
insb
addb
mov
das
dec
shlb
popf
outsl
dec
fbld
mov
imul
push
dec
jl
xchg
shrl
push
xor
repz
std
addr16
int
pop
dec
or
pop
push
bound
xchg
mov
ret
cli
jns
imul
cmp
push
int
pop
rcl
sbb
or
sbb
hlt
popa
iret
xchg
xchg
fisttps
xchg
ds
mov
fidivl
mov
mov
pop
mov
test
imul
jno
ljmp
clc
aaa
cmp
pop
xor
fcmovnu
xchg
mulps
add
jl
mov
push
cs
push
cli
daa
insl
icebp
mov
inc
inc
bound
push
mov
imul
fucom
or
imul
into
cmp
gs
lods
pop
adc
xor
clc
xor
lea
loope
xchg
outsb
scas
cmp
and
pop
mov
push
mov
cmp
pushf
add
jnp
lods
mov
sub
push
sbb
xor
cltd
push
rorb
and
cmp
push
dec
test
icebp
push
test
lods
lock
or
ffree
sub
arpl
scas
or
jp
adc
jbe
sti
xor
outsl
jb
lret
pusha
iret
lods
push
ficoml
xor
dec
add
fsubs
scas
pop
mov
adc
jge
mov
mov
cmpsb
jmp
cmp
movsb
je
je
mov
dec
shll
inc
shlb
addr16
rcr
cltd
sub
out
es
add
and
es
aam
mov
cmp
adc
xor
adc
or
aam
mov
shrl
lds
notb
jae
popf
pop
test
mov
icebp
ror
add
or
jmp
nop
cld
cmp
test
or
aaa
test
sahf
int3
jns
sbb
iret
push
pop
mov
sub
lcall
pop
cmp
jmp
pop
jg
push
jbe
repz
pop
pop
inc
pop
jae
mov
jo
xlat
inc
jno
jecxz
cwtl
mov
js
pop
xorl
jg
cld
jge
sbb
rcr
iret
pop
bts
cld
bound
cli
xorl
leave
rorb
or
sar
push
mov
or
mov
nop
shl
clc
dec
cmpb
cmpsb
loope
pop
xchg
daa
jno
cmp
gs
lods
jns
cwtl
pop
mov
mov
subl
cwtl
fbld
mov
xchg
scas
lods
mov
mov
and
push
cmpsl
adc
ss
fnstenv
pop
incl
iret
gs
mov
pop
cmc
lods
adc
xchg
or
dec
std
nop
mov
mov
outsb
push
outsl
jne
stc
push
idivl
ficomps
scas
ret
jbe
mov
jg
pop
or
sub
push
aas
xor
out
cmpl
or
xor
jmp
lahf
mov
sbb
dec
popa
sub
adc
jno
pop
jg
aaa
mov
cmp
mov
mov
loope
mov
xchg
push
into
add
mov
mov
mov
repz
mov
in
xchg
or
pushf
jmp
jge
pop
cmpsb
sbb
xor
and
mov
aas
xchg
sub
test
mov
scas
mov
lods
xorl
mov
push
xchg
fs
jle
dec
fdivr
fcomps
in
movsl
push
pop
and
push
cli
lret
lahf
mov
or
mov
fwait
je
jecxz
movups
xor
pop
les
xchg
adc
adc
jmp
shrb
cmc
imul
das
jno
insl
or
xlat
test
out
or
xor
sub
sarb
loope
movsb
int
xchg
cmp
in
rcll
enter
js
cmpsb
pushl
sbb
push
stos
jns
and
dec
xor
ror
cmp
ja
push
aaa
cmp
aam
pop
sbb
imul
mov
sbb
xchg
jmp
les
dec
and
cmp
mov
inc
mov
sub
pop
mov
xchg
sub
inc
fiadds
cmp
fcomps
and
divb
sbb
adc
movl
xchg
hlt
pop
cld
movsl
dec
mov
inc
push
aam
xor
cmp
pop
arpl
sbbl
or
fildll
mov
adc
add
fwait
lahf
xor
push
and
mov
fstl
ja
sar
fwait
sub
inc
push
xchg
xor
pop
mov
pushf
stos
stos
pop
jo
inc
cmp
push
dec
leave
xchg
pop
adc
sbb
add
sti
sbb
lahf
jl
shrb
mov
bound
adc
loopne
insl
les
add
lea
outsl
out
lret
fadd
pop
leave
pop
or
div
gs
xor
icebp
lea
mov
sahf
add
sub
popa
arpl
fs
inc
jge
jmp
loopne
or
aam
jmp
shr
inc
push
lret
jns
add
fldenv
or
push
jmp
out
fmul
decl
loopne
add
pop
sub
and
pop
mov
inc
jle
ss
test
pop
and
clc
sbbl
xchg
push
pop
repnz
xor
sub
outsb
clc
fs
inc
mov
sbb
lret
cmpsb
cmp
arpl
out
fisubrs
stos
aaa
xchg
loope
ficoml
adc
add
adc
cmp
jp
insb
and
lea
andb
pop
sub
leave
inc
jle
mov
and
shll
mov
imul
cli
jg
pop
and
movsb
addr16
xor
inc
pop
out
ror
imul
insb
ss
push
push
pop
leave
push
xchg
jle
sarb
adc
je
push
aaa
inc
push
js
stos
jo
fisubl
xchg
gs
push
out
inc
pusha
push
aas
and
jne
shrl
or
jge
xor
jle
cmp
inc
and
inc
aas
push
pop
ja
mov
aad
adc
ret
lods
rorb
or
shr
cmp
fsts
aaa
mov
push
cmp
jg
push
push
xor
xor
xor
rcll
test
xchg
repnz
fs
stos
mov
test
iret
jnp
test
inc
inc
pop
push
sub
push
into
in
out
mov
push
pop
es
fnstcw
push
test
xor
cmp
sub
mov
dec
bound
push
dec
iret
sbb
clc
sarb
add
xor
test
shlb
fdivl
imul
lret
pop
scas
rclb
sbb
jge
in
stos
xor
es
das
dec
int3
jnp
iret
imul
test
pusha
push
pusha
lcall
out
sbb
in
jae
xlat
mov
jmp
inc
cmc
adc
push
lret
movsb
push
popa
inc
push
push
xrelease
pop
loop
adc
sahf
mov
inc
aas
xchg
jecxz
mov
bound
lock
test
flds
lock
xchg
fistpll
movsb
insb
ja
out
cmc
movsb
and
into
repnz
push
fsubrs
or
arpl
cmpsb
cmp
push
and
and
xchg
mov
movsl
leave
inc
inc
or
jl
push
or
test
mov
adc
dec
outsl
and
push
cmp
inc
add
xor
pop
addb
lds
or
mov
mov
je
xor
movsb
sbb
mov
cmp
inc
xchg
xchg
push
inc
or
cwtl
mov
test
clc
roll
xor
sub
jg
xchg
dec
and
lcall
push
aam
loopne
in
sbb
jae
cwtl
test
mov
andb
jae
mov
jle
push
out
cs
or
cmp
hlt
stc
lahf
or
or
cmpsl
mov
js
xor
aaa
inc
pop
cmpsb
cmp
xchg
pop
lods
clc
pop
jge
adcb
mov
cmpsl
cmp
data16
or
mov
adc
ds
mov
sbb
sbb
fimuls
dec
push
mov
and
cmp
out
cld
in
pop
hlt
xchg
leave
jmp
ljmp
test
push
cld
sbbb
mov
cmp
cmc
adc
fld
pop
and
imul
mov
dec
jecxz
inc
lock
inc
sti
pop
ljmp
lock
dec
jmp
xchg
addr16
fstpl
ljmp
cmpsb
in
add
cmp
push
sbb
stc
and
push
lods
fistpll
das
out
cmp
mov
inc
outsb
mov
jecxz
sahf
inc
cmpsl
cltd
out
int3
jno
outsl
dec
nop
push
mov
divl
stc
and
mov
or
or
sbb
cmc
repz
fisubs
out
push
mov
je
andl
dec
inc
jge
inc
cmp
lret
jg
lods
outsb
lret
fldlg2
mov
sub
push
stos
jle
push
xchg
sbb
nop
mov
dec
or
cld
or
dec
jg
mov
cmp
call
mov
in
pop
push
inc
adcb
cmpsl
into
div
adc
shlb
cltd
testb
sbb
call
add
add
aad
test
jnp
testl
lods
cmp
add
mov
adc
or
jp
js
sub
xchg
inc
fidivrl
movsl
and
jecxz
push
leave
pusha
xchg
push
xchg
and
xchg
pop
sbb
nop
cmp
mov
hlt
arpl
inc
in
sub
xor
fstl
xchg
inc
aas
inc
mov
mov
mov
push
jne
cmp
mov
mov
jg
cwtl
lea
fbld
and
sbb
outsb
hlt
int3
sbb
or
adc
mov
mov
sub
cmc
js
xor
divb
pushf
pop
pop
xor
outsb
in
mov
xor
roll
sub
push
enter
jecxz
adc
jge
nop
std
pop
loop
out
insb
inc
mov
cmp
out
mov
cmpl
jle
jge
repz
xchg
jnp
adc
mov
popa
or
aas
sbb
shrl
inc
rclb
adc
mov
lea
jmp
das
out
add
insb
test
add
mov
cmp
cmc
testb
inc
fcmovu
test
or
mov
fld
scas
xchg
xor
in
push
in
clc
lahf
push
mov
sub
xchg
sbb
hlt
stos
xor
les
and
push
cld
scas
std
xor
sti
pop
ret
bound
cmpl
shl
add
notl
imul
and
lret
in
repnz
iret
aad
insl
repz
or
clc
add
inc
in
xchg
out
aas
mov
insl
and
pop
pop
cmp
leave
les
mov
or
ljmp
cmp
loopne
in
mov
jnp
mov
pop
ja
inc
cmc
loop
or
sbb
cmp
out
xchg
aam
xchg
sub
add
pop
out
xor
pop
addr16
arpl
sbb
pop
pop
pop
cmp
mov
inc
cld
out
mov
jne
aam
add
cmc
lods
and
decb
jg
ss
jl
sbb
fiadds
stc
fisubrs
daa
fs
cmp
or
cmc
and
stc
insb
mov
add
rorb
inc
pop
jb
lcall
xor
mov
lea
orb
decl
iret
lahf
and
mov
add
clc
jo
das
ja
mov
scas
jmp
pop
cs
and
rcrl
out
out
popa
mov
aad
xor
call
xchg
cmp
scas
inc
adc
xchg
dec
and
xor
inc
rcr
js
lcall
xor
push
test
arpl
mov
add
inc
fucom
mov
dec
mov
inc
repnz
arpl
mov
lret
addr16
ret
rcl
mov
stos
mov
jmp
xchg
sub
scas
dec
push
mov
or
mov
scas
mov
sarl
stos
xchg
ret
rolb
icebp
iret
std
sub
mov
sbb
mov
push
lea
imul
lret
test
inc
insl
xlat
addb
and
adc
pop
adc
jl
aad
xor
loope
loop,pt
xor
adc
and
sarb
popa
lret
insl
adc
jbe
push
push
icebp
mov
cmp
mov
mov
notb
mov
dec
pop
out
add
in
into
mov
addr16
dec
scas
mov
jecxz
pop
and
adc
mov
sub
xor
mov
out
out
ljmp
int
cmp
push
aam
test
or
push
lods
pusha
jmp
or
xchg
imul
jns
clc
test
push
pop
mov
outsl
jno
jg
das
xlat
sub
es
rorb
sub
lock
pop
xor
dec
inc
cmp
andb
sti
xor
mov
ja
push
xor
lds
fistl
into
shrb
or
mov
insb
or
jne
xlat
mov
or
shlb
bswap
outsb
ret
ret
jecxz
lcall
pop
mov
or
jl
pop
jmp
repnz
stos
jecxz
add
jae
mov
pop
sub
mov
test
xchg
dec
cld
dec
cmpsb
sar
lea
lods
xchg
movl
xchg
in
out
mov
push
out
cld
dec
loopne
pop
adc
addl
jg
dec
cmp
xorl
xchg
jmp
leave
push
add
or
outsb
mov
clc
pop
out
test
cs
xchg
lret
sbb
jl
jge
push
ret
mov
inc
rcrl
fistl
push
sub
mov
test
mov
or
pop
insb
sti
dec
or
jns
adc
or
or
cmc
cs
mov
dec
push
sbb
mov
jg
imul
insl
jg
dec
leave
sti
or
ljmp
mov
loop
das
sub
lds
popf
daa
cmpsl
mov
dec
cmp
xor
clc
std
lea
es
in
mov
out
int
icebp
inc
xchg
arpl
xor
cltd
mov
pusha
inc
sbb
inc
aaa
imul
fistpl
ja
je
out
cltd
ja
fninit
cwtl
pop
nop
sbb
jnp
dec
and
ljmp
insb
sbb
scas
jmp
push
icebp
lea
xchg
pop
lahf
dec
mov
xchg
hlt
xor
mov
jo
sbb
or
mov
je
jb
mov
daa
js
add
stos
mov
jge
adc
repz
mulps
inc
adc
push
mov
mov
pop
jae
enter
pop
pop
xchg
inc
popf
pop
fcomip
test
push
xor
xor
cmpsl
fnstsw
jb
inc
adc
jbe
addr16
mov
fnsave
loopne
sbb
ret
cmp
push
or
adc
sbb
shl
jbe
adc
scas
and
std
pop
push
jg
push
mov
push
in
push
mov
sti
push
jbe
fstpl
outsb
mov
test
lret
inc
xchg
cmpsb
sbb
xchg
and
mov
push
xchg
cmp
dec
adc
sbb
adc
insl
pushl
add
or
xchg
fsts
xor
mov
not
leave
add
cli
movsb
dec
pop
dec
out
iret
mov
cmp
je
cmpsb
xor
mov
inc
jge
aad
mov
cmp
aas
push
mov
fs
and
stc
or
sub
leave
imul
data16
fstpl
mov
adc
mov
sub
dec
test
mov
or
xor
movsl
and
sub
lret
mov
or
jmp
mov
jg
push
dec
adc
pop
inc
lcall
add
inc
rol
cld
adc
cmp
jecxz
xchg
cmpsl
loop
cmp
inc
xchg
mov
test
pusha
push
fsubl
sbb
das
push
imul
mov
add
xchg
imull
hlt
mov
test
mov
mov
repnz
aad
addl
cli
push
ljmp
fistpl
add
push
or
adc
scas
dec
out
jg
lds
cmp
mov
pop
sub
fadds
out
jno
repnz
cwtl
subl
std
ret
mov
mov
out
test
pop
popa
xor
cltd
sbb
jns
mov
neg
cmp
inc
push
mov
push
mov
sahf
push
dec
sbb
pop
mov
paddb
pop
xchg
mov
or
xchg
sub
lret
sub
fdivrl
sub
rep
fst
mov
push
pop
dec
movsl
nop
cmp
out
mov
jae
test
sub
hlt
test
int3
push
test
lret
cltd
xor
dec
out
mov
pop
inc
rcr
shlb
cmc
in
js
je
add
pushf
test
iret
jno
aas
sbb
dec
les
sbb
mov
jno
xchg
jp
lds
pop
lds
cmpsl
loopne
lods
inc
into
loop
repnz
sub
push
adc
jecxz
cli
daa
out
dec
adc
mov
imul
cli
lahf
call
mov
pop
xchg
cmpsb
icebp
mov
leave
fmulp
loop
pop
xchg
jl
pop
lds
push
push
enter
mov
sbb
mov
xchg
movsl
pusha
and
push
rol
outsb
or
sub
fmull
int
sub
pop
and
icebp
mov
push
movsl
dec
loopne
and
xchg
xchg
loope
jg
mov
test
aaa
je
mov
ret
aad
cli
mov
je
movsb
lret
shrb
je
mov
ja,pt
sub
or
jo
sbb
cltd
mov
push
sbb
jg
add
adc
mov
es
pop
aas
sbb
jmp
icebp
inc
shr
leave
repz
jl
repz
cld
iret
add
mov
jns
test
push
bound
cmp
jno
mov
xor
sti
stos
fstl
mov
push
jecxz
pusha
push
xor
enter
out
seta
xorl
lods
js
mov
aad
cmpl
sub
cmp
decb
mov
stc
mov
push
cwtl
mov
jne
stos
imul
jl
mov
pop
add
cli
cmp
sub
repnz
push
je
int3
daa
add
push
dec
les
inc
xlat
rclb
adc
cmp
les
mov
insb
xchg
arpl
mov
jno
lea
pop
jecxz
add
inc
mov
mov
sub
inc
sti
pushf
push
aaa
pop
xor
jnp
mov
mov
mov
pop
or
push
cmc
popa
cmp
leave
and
fs
cli
dec
gs
add
aam
adc
cmp
push
nop
mov
test
xchg
out
les
imul
and
jb
out
mov
pop
inc
in
jecxz
xlat
shlb
push
sub
mov
int3
lock
gs
ret
jns
or
clc
push
int
imul
xchg
mul
dec
pop
lods
cmpsb
shl
mov
stos
rep
mov
std
mov
test
rorl
out
push
sub
adc
xor
pop
sbb
mov
add
mov
shrb
or
jge
imul
jge
mov
push
add
clc
inc
xor
push
out
pop
cmp
lcall
or
xor
ds
jo
mov
pop
xchg
sub
stc
jae
sub
push
xor
insl
out
adc
push
cmpsb
hlt
push
sub
dec
adc
adc
cmp
lret
andb
pop
mov
cmc
jle
mov
data16
adc
push
enter
mov
fcmovbe
inc
sbb
pop
xchg
adc
test
xor
leave
jecxz
jl
add
nop
incb
xchg
mul
push
or
ret
inc
xchg
xor
mov
aaa
push
call
test
sbb
lods
inc
or
mov
sti
jb
push
stos
push
fstp
push
add
push
pop
jle
addr16
mov
xor
mov
ja
loope
xchg
cmp
out
shl
inc
lret
push
icebp
fiadds
xor
push
fst
mov
aaa
fcomps
sbb
stos
imul
aas
xchg
add
mov
dec
mov
pushf
mov
push
inc
jnp
dec
inc
into
cmp
test
dec
sahf
lret
xchg
xchg
jmp
sub
or
je
xor
mov
and
jge
xchg
lcall
add
scas
outsl
pop
cmp
inc
clc
pop
lods
xor
cwtl
dec
gs
popf
andb
adc
in
push
mov
movsl
cli
fldz
ljmp
or
bound
sbb
sub
stos
into
fs
cmpsb
push
inc
dec
cmp
in
mov
sub
cld
popf
scas
adc
ds
xor
in
je
sub
mov
and
scas
aas
nop
shlb
pushf
call
popl
fdiv
pop
inc
hlt
mov
fcomps
mov
aaa
rclb
pop
lods
jle
pop
jmp
call
out
xchg
mov
pop
pop
jl
xchg
arpl
out
mov
out
sub
sub
scas
repz
cmpsb
call
mov
xlat
push
fimull
cmp
and
jo
xchg
lock
and
pop
cwtl
inc
mov
mov
jl
pop
rcl
jmp
cmp
jno
jmp
gs
sub
fsubrl
sbb
sti
clc
test
int
inc
stos
movb
xor
fwait
subb
xchg
dec
hlt
xchg
or
adc
std
jb
mov
dec
push
sbb
mov
sbb
dec
gs
js
test
push
jg
fnsave
scas
mov
aaa
mov
imul
fwait
xchg
outsb
fadd
push
in
pop
mov
mov
movsb
jecxz
aas
call
ficompl
xchg
cmp
int3
dec
jae
inc
dec
mov
pop
cld
jl
out
mov
daa
mov
or
lds
aas
or
dec
sbb
cmp
jne
andb
fadds
sbbl
or
aaa
xchg
jae
imul
insb
push
cmp
inc
push
jbe
testl
ficomps
fisubrl
mov
mov
inc
pop
hlt
imul
and
mov
lds
fwait
cmp
ror
mov
inc
insl
xchg
scas
enter
sub
stos
das
or
sub
mov
std
das
fs
adc
push
rolb
ror
lds
notl
jbe
mov
mov
cmp
daa
add
inc
mov
add
pop
call
adc
ss
icebp
lock
mov
xchg
xor
push
mov
pop
inc
or
mov
mov
xor
aad
scas
fadds
dec
fcomps
pop
es
inc
jae
adc
mov
xchg
std
dec
cmp
inc
repz
test
adc
repnz
mulb
adc
and
jno
shlb
cmp
popa
shrb
and
inc
out
add
fldcw
mov
xor
imul
fldenv
ret
stos
inc
mov
and
and
jo
fwait
addr16
scas
add
lret
mov
or
scas
mov
ss
subl
mov
mov
and
aas
xor
jle
cmp
je
insl
stos
push
mov
sbb
adc
arpl
cmpsb
add
pusha
ljmp
and
push
dec
fwait
test
aam
std
imul
jl
js
cli
fnstsw
arpl
sub
dec
in
sub
cmpsb
into
and
ret
popa
add
sub
sti
and
sbb
push
fs
fldl
pop
dec
adc
xor
push
cs
movsl
in
in
les
mov
inc
fs
lcall
repnz
cmpsl
cmp
and
pushl
xchg
movsl
fists
test
lcall
and
mov
add
and
je
mov
in
mov
stc
mov
adc
xor
clc
mov
ss
inc
rorl
sbb
test
xchg
movsl
cmpsb
dec
mov
dec
sti
xchg
dec
mov
xchg
jb
ds
repz
out
out
dec
mov
arpl
xlat
xchg
and
fstpt
push
inc
dec
inc
ljmp
push
pop
int
push
shlb
iret
into
mov
lret
push
sbb
out
movsl
bound
icebp
hlt
lret
icebp
sub
cld
fnstcw
mov
xchg
ljmp
popf
dec
aad
out
xor
or
jno
test
dec
xor
jle
jne
xchg
mov
mov
adc
sahf
ss
icebp
arpl
inc
and
adc
jmp
sbb
outsl
inc
and
push
scas
ret
xor
jno
clc
push
enter
mov
push
dec
mov
sti
adcl
cs
outsb
inc
sub
push
add
sbb
lods
sbb
iret
adc
xlat
sub
cmpsb
xchg
ds
bnd
push
jb
ret
nop
add
nop
shll
je
movsb
jl
xchg
adc
inc
fs
sub
repnz
cltd
push
xlat
adc
cmp
fwait
test
in
xchg
ret
jae
in
push
fstpl
test
arpl
test
das
mov
cmp
jb
and
fcoml
ds
cmpsl
in
jmp
jg
xchg
sti
or
sbb
out
pop
push
push
aas
lea
inc
sub
adc
adc
lret
inc
jl
pop
test
mov
dec
repz
dec
pusha
push
or
and
xchg
mov
push
ret
lret
movl
icebp
add
cmc
test
adc
int3
or
mull
sbb
outsb
out
fidivs
or
xchg
repz
sub
lea
push
inc
cmp
subl
sti
into
adc
cmp
pop
pusha
aas
sarl
or
adc
mov
mov
mov
mov
adc
fsubrl
inc
jnp
lret
mov
lods
xchg
mov
xchg
mov
xor
and
add
js
mov
sbb
sbb
mov
xchg
or
imul
or
sbb
lahf
fisubrl
cltd
push
inc
hlt
dec
adc
add
push
sub
or
push
repnz
add
jmp
mov
mov
adc
imul
xor
sarw
sbb
aad
mov
cmp
dec
mul
cmp
mov
clc
into
mov
mov
popf
or
sahf
xor
mov
cmp
mov
mov
aad
pop
mov
push
jae
or
js
adc
in
and
xor
jp
sub
push
mov
das
mov
xor
xor
cs
jmp
daa
push
sbb
xchg
daa
mov
push
and
clc
dec
dec
mov
out
push
inc
in
add
pop
int
xchg
outsl
fstl
rclb
push
rcrl
movsb
icebp
push
adc
adc
mov
cmp
inc
adc
das
xchg
movsl
test
gs
sti
jle
dec
add
fsubrs
lods
pop
push
push
mov
arpl
insl
enter
push
out
cmp
sbb
sarl
dec
sub
push
adc
stos
aad
jl
data16
mov
jg
mov
and
mov
push
je
ss
in
icebp
iret
xchg
sahf
mov
cmp
les
sahf
mov
and
adc
mov
lods
pop
mov
loopne
jo
or
mov
mov
hlt
cmc
loopne
inc
adc
shll
lret
lods
inc
pop
add
cld
repnz
cmp
sahf
dec
aaa
mov
outsl
pushf
jb
push
in
xor
in
sbb
divb
js
pop
in
pop
cmp
xchg
pop
test
and
xchg
adc
mov
or
iret
push
xchg
adc
sbb
xor
cwtl
xor
sbb
sub
xor
addl
rclb
pop
jecxz
add
lods
testl
sbb
cmp
jne
mov
or
push
adc
sbb
inc
or
sbb
jecxz
xor
dec
fisttpl
shl
repz
add
in
push
dec
mov
pop
mov
xchg
jecxz
adcl
xor
subl
mov
dec
ficoms
in
icebp
pop
pop
lcall
and
xor
jns
jge
test
lahf
iret
jmp
jb
adc
mov
add
int3
adc
jno
or
mov
lods
xchg
xchg
call
iret
mov
pop
cld
div
or
lock
inc
sbb
pop
jne
xchg
scas
in
cmpsb
mov
movsb
incl
adc
jbe
add
nop
and
mov
inc
adc
out
out
lods
push
dec
adc
fucomi
mov
cmc
jmp
push
into
sbb
xor
push
outsb
sti
pop
xor
jae
mov
cmpsb
ds
cmp
stc
addps
add
imul
mov
pop
xchg
ja
and
imul
push
cld
or
andb
out
jl
call
dec
sub
add
test
xor
clc
sbb
push
push
into
jnp
iret
das
or
fs
ficomps
or
jecxz
inc
fs
xchg
mov
out
fdivrl
push
fstl
xor
scas
push
aas
dec
push
fists
sahf
nop
call
aaa
pop
inc
jno
adc
cmp
cmp
adc
lret
jo
ss
cmp
sub
addr16
or
lcall
xchg
sbb
cmc
lahf
fwait
aas
icebp
les
mov
xor
stos
jmp
mov
shll
jne
jge
push
pop
xlat
fsub
mov
cmp
mov
push
es
cmp
xchg
stos
or
xchg
add
pushf
hlt
out
lods
jo
dec
aaa
fsts
shl
xor
cmp
dec
push
cmp
mov
mov
lahf
clc
mov
fsubs
xor
lahf
xor
inc
push
and
cmpsl
hlt
fcmovnbe
mov
jo
xorb
xchg
pop
call
in
mov
sbb
insb
ss
and
sbb
es
sbb
movsb
lock
add
or
pop
push
push
add
in
pop
lods
jecxz
in
mov
decb
jle
add
div
cmpsb
std
inc
or
outsb
xlat
lea
add
lahf
cmovg
aam
push
mov
lcall
push
daa
hlt
imul
mov
push
dec
pop
xor
test
out
jmp
inc
negb
enter
jbe
bound
mov
inc
out
aam
jb
scas
bound
cmp
mov
hlt
lods
dec
lcall
xor
aas
stc
xchg
das
fsubl
insl
push
or
cmpsb
repnz
jns
add
fimuls
xchg
je
inc
add
ljmp
xchg
repz
sbb
icebp
aaa
mov
and
add
xchg
mov
mov
dec
xor
mov
rcr
xor
or
mov
push
xorb
in
and
push
jne
pop
popf
das
sub
iret
pop
mov
xchg
sbb
lea
xlat
xorl
inc
cmp
dec
ljmp
xchg
scas
insl
je
push
xor
sub
xor
gs
sbb
movsb
std
es
into
mov
sti
das
mov
repz
mov
inc
cltd
and
out
loop
jg
mov
push
sahf
push
test
push
movsb
out
or
inc
aad
sub
out
adc
loop
jo
imul
outsl
arpl
repz
fildll
cmp
insb
sbb
imul
adc
out
sbb
lds
fst
cmp
out
mov
lret
pop
ja
pushf
add
or
test
stos
push
sub
dec
cmp
jnp
mov
notl
jns
cli
outsl
push
cs
shrl
fnstsw
add
push
gs
and
les
paddsb
sub
data16
ror
mov
ljmp
xchg
jbe
insl
ljmp
sbb
mov
xchg
or
inc
cli
pop
xchg
mov
adc
fistl
dec
push
stc
xchg
dec
cmpsb
or
jb
jecxz
cmpsl
sbb
pop
cwtl
mov
mov
or
mov
inc
sub
push
movsb
mov
enter
cs
sbb
ja
or
mov
mov
pop
insl
or
cmp
shrl
xchg
fabs
add
ljmp
sub
sbb
stos
in
push
cltd
mov
rcrl
iret
add
mov
int
lea
dec
dec
lret
xchg
cmp
pusha
push
jl
sub
and
adc
inc
cwtl
in
inc
cs
adc
push
push
push
hlt
mov
loopne
rcl
or
sbb
popf
aam
mov
xchg
outsl
iret
push
sbb
adc
jmp
mov
in
fistpl
pushf
mov
xor
bound
rcll
push
xor
jae
push
in
adcb
sbb
dec
cs
fwait
jge
and
pop
or
testl
inc
rcll
das
inc
pop
xor
aam
sub
in
insb
cld
mov
dec
dec
stos
cmp
lahf
mov
cld
testl
sub
or
rorl
rol
adc
popa
ret
lds
mov
xor
into
dec
xor
in
mov
ss
xor
pop
ffreep
ss
repnz
ret
sub
push
jle
xchg
jo
cmp
mov
add
cmp
addl
adc
call
movsl
fwait
jecxz
insl
addr16
inc
inc
cmp
push
insb
pop
fiaddl
or
xchg
jae
outsl
pop
aad
into
mov
adc
jne
cmp
cs
test
adc
lcall
mov
pop
cmp
inc
es
rcll
inc
xor
lods
aam
stc
mov
push
out
push
push
inc
mov
jbe
ret
mov
insb
les
sar
sub
pop
pushl
pop
fisttpll
cli
add
sbb
add
cmpsb
mov
add
lcall
sbbb
rclb
jns
into
pop
loopne
int3
insb
das
fldl
pop
dec
push
xor
aad
or
insl
xchg
sub
lock
mov
dec
cltd
push
xchg
dec
dec
ja
mov
repnz
push
lods
cmp
fdiv
xlat
lahf
xor
aaa
inc
daa
pop
movsb
or
or
xchg
xor
push
cmp
mov
cltd
add
stos
add
inc
dec
in
mov
sbb
xchg
ja
es
inc
mov
fldl
xchg
sub
add
or
sub
pop
pop
aaa
aaa
mov
adc
xchg
mov
mov
fwait
jnp
aaa
mov
push
push
and
ficoms
fsts
sbb
ljmp
adc
insb
out
loopne
mov
dec
fs
mov
clc
cld
std
lahf
dec
shlb
sub
int
fnsave
or
enter
call
repnz
repnz
cs
roll
mov
jo
mov
push
clc
xchg
in
sti
fwait
insl
out
xor
push
movsb
testb
push
push
divb
in
mov
mov
repnz
fists
rcrl
das
jp
adc
mov
mov
jl
or
push
repnz
inc
enter
push
sbb
pop
push
lahf
mov
mov
lret
mov
pushf
push
push
mov
nop
pop
sti
cmp
jg
popf
scas
scas
xor
insl
gs
hlt
push
jae
add
xor
mov
pop
hlt
movsb
fdivrl
out
fs
lods
fildll
hlt
outsb
int
push
mov
jle
adc
jb
test
push
int
mov
jne
push
pop
bound
cmpl
jle
or
movsl
pop
fucom
stos
call
std
pop
into
daa
cs
adc
mov
ret
xchg
imul
cltd
dec
outsl
fsts
push
inc
pop
jecxz
fsts
ror
and
push
xchg
dec
jp
iret
xchg
and
inc
sub
inc
outsb
sub
test
daa
push
test
mov
jo
in
ffreep
jmp
push
mov
and
mov
cmpsb
sub
in
cltd
mov
arpl
xchg
mov
jg
pop
jbe
cmp
mov
add
xchg
mov
std
xor
sar
cmpsl
test
pusha
jne
mov
mov
jl
jbe
xchg
icebp
dec
mov
dec
push
idivb
call
inc
in
mov
je
jns
lods
stc
repz
fisttpll
xor
xor
mov
xchg
les
pop
in
sbb
jmp
pop
fists
pop
and
minps
sbb
cmc
or
ficomps
or
dec
pushf
mov
add
push
mov
cmp
stos
jecxz
mov
jl
adc
jne
bnd
iret
ret
mov
sbb
adcl
dec
pushf
and
push
insb
mov
jae
inc
pop
adc
ret
sub
jecxz,pn
xor
mov
icebp
sbb
sbb
add
mov
andb
add
cmp
lahf
jmp
jecxz
dec
nop
shll
nop
xchg
cmpsl
cwtl
jb
sub
outsb
imul
jg
jbe
sub
int3
incl
xor
movsb
aas
sbb
mov
dec
fsubr
xchg
inc
mov
inc
pop
mov
jb
mov
xor
icebp
test
jl
or
pop
fucomp
lds
cwtl
js
das
decb
dec
xchg
js
mov
gs
mov
lock
into
adc
cmc
hlt
push
adc
fnstenv
and
jb
push
mov
or
fdivs
and
scas
cmp
pop
mov
sub
aad
insb
popf
push
cwtl
fbstp
jl
loop
sub
js
adc
scas
cmpsl
mov
out
stos
clc
inc
call
sti
xchg
cmp
dec
add
out
mov
push
or
pushf
pop
cld
xchg
bound
in
xchg
les
out
lret
dec
mov
repnz
fisttps
add
and
in
or
stc
icebp
jmp
in
xchg
pop
call
lcall
cmpsb
movsb
movb
sub
jp
mov
pop
cmpsl
or
xor
ficoms
and
sub
je
clc
jns
push
xlat
inc
jecxz
insl
scas
cmp
inc
pop
aam
cmpsb
in
push
and
leave
insb
adc
das
jp
add
jb
inc
scas
pop
dec
fdivrs
cmp
mov
fcomps
movsl
dec
sbb
ja
arpl
das
inc
cmpsl
mov
out
mov
jo
lea
push
push
movsl
xchg
out
out
xchg
popa
pop
mov
loop
repnz
sbb
cmp
xchg
mov
dec
aad
jp
lahf
xor
leave
loop
pop
mov
movsl
es
int
aam
out
jmp
sbb
mov
dec
in
or
sahf
div
dec
sbb
sti
dec
xchg
fnstcw
popa
lcall
cmp
add
iret
jge
push
inc
lea
je
and
or
add
push
int
mov
push
xchg
pop
dec
je
sbb
xlat
jae
into
sbbl
scas
mov
dec
sub
addr16
dec
hlt
shr
mov
push
push
push
je
dec
popf
je
cmp
lock
pop
lods
lahf
addr16
scas
mov
adc
sbb
mov
mov
popl
xor
mov
dec
fsubrs
icebp
mov
mov
sub
push
inc
in
mov
repnz
scas
test
imul
arpl
adc
and
mov
xchg
ds
cmp
test
push
jns
sahf
dec
jb
popf
insl
rclb
dec
push
pop
mov
push
or
cli
in
cmp
stc
test
dec
xor
pop
repz
mov
xor
inc
dec
call
jb
scas
xor
jmp
and
sbb
repnz
jae
shlb
pop
fnstsw
pop
popl
mov
pop
mov
and
shrl
andb
sub
test
lret
add
gs
movsl
dec
filds
and
mov
movsl
pop
fwait
dec
lahf
inc
sahf
mov
sar
rol
repnz
clc
mov
popf
repnz
jg
mov
sarb
in
int
sub
pop
ret
nop
ss
sbb
lret
xchg
mov
pop
lds
xchg
loop
mov
pop
cmp
test
jecxz
movsb
test
dec
pop
xor
fdivl
aam
movsb
or
jle
in
aas
clc
pop
ret
xchg
lea
add
pop
lds
push
lds
iret
imul
aad
jg
movsl
fisubrl
and
mov
sar
cmp
jb
adc
and
mov
dec
ja
mov
clc
aad
mov
sub
subb
sti
je
mov
xor
sti
adc
xor
fisttpll
cmp
shlb
repz
and
xor
test
jecxz
pop
sbb
je
or
lods
movsb
fs
jne
imull
jb
imul
out
mov
sub
dec
xor
push
push
cmp
test
jecxz
icebp
mov
stc
xor
jmp
daa
fdivr
mov
int3
or
mov
push
jnp
push
fidivrs
lea
or
jl
adc
jb
shll
cmp
dec
or
enter
mov
push
loop
dec
jg
stos
xchg
xchg
les
mov
dec
or
hlt
cmpsw
or
jle
jbe
cmp
lods
enter
or
xorl
flds
dec
mov
mov
or
or
mov
push
jecxz
rorb
or
jmp
mov
leave
or
push
push
aad
push
call
jecxz
xlat
add
mov
es
addr16
ljmp
mov
clc
lret
aad
xchg
xchg
mov
adc
popa
and
sub
xor
stc
test
pop
dec
ja
xchg
and
icebp
jnp
mov
lods
xchg
mov
out
and
divb
out
adc
pop
mov
adc
stos
mov
shrb
and
imull
stos
xlat
adc
sbb
adc
pop
in
sub
mov
add
add
cmp
in
xor
stos
xchg
cmc
mov
mov
hlt
xchg
loop
in
fst
push
mov
mov
addr16
mov
mov
mov
aam
sub
sbb
mov
add
adc
push
add
cld
cvttps2pi
int
and
dec
dec
jae
push
addr16
cmpsl
and
jno
cs
adc
movsb
jecxz
cmp
mov
jo
mov
and
sbb
mov
arpl
roll
add
ljmp
mov
addr16
aas
and
push
mov
cmpsb
and
aaa
into
xchg
aam
sub
xor
push
or
popf
dec
mov
push
cld
or
or
cld
mov
iret
mov
data16
dec
cmp
popf
xchg
xchg
imul
movsb
mov
and
lahf
adc
mov
pop
dec
les
mov
jne
pop
adc
adc
lret
cmpsb
ret
mov
loope
xor
popf
push
push
cmpsb
lods
popf
ja
mov
dec
loope
fstps
out
lahf
pop
xchg
adc
mov
sub
add
adc
or
add
call
jge
mov
imul
cmp
lds
in
lcall
and
mov
arpl
frstor
mov
xor
or
pop
jno
call
lret
ret
pop
pop
ss
enter
mov
negl
lahf
push
les
cli
mov
sub
mov
mov
mov
int
inc
jno
add
lods
cli
fwait
mov
add
xchg
iret
sub
insb
ds
sahf
dec
shll
test
cmpsb
pop
fbstp
adc
cmp
faddp
push
pop
push
cmc
sub
insl
dec
and
push
daa
addr16
inc
icebp
and
lahf
mov
xor
ss
and
testb
pop
repz
rcrb
aad
mov
cmp
fnstenv
push
push
inc
aam
jnp
and
in
das
adc
fnstsw
ret
xchg
in
and
lock
pop
push
fcmovnbe
xor
daa
pop
ficoms
push
push
lcall
sub
outsb
repnz
js
clc
mov
cmp
jae
mov
and
pop
mov
adc
pop
sub
or
xchg
xor
ret
jb
inc
clc
push
sbb
sub
or
add
scas
cmp
push
jb
cwtl
sahf
or
add
pop
mov
out
mov
mov
pop
insl
jns
lods
xchg
cmp
pop
adc
aaa
push
jo
loope
cmp
fsts
mov
int3
data16
insl
in
insl
push
adc
push
loop
iret
cmp
rcrb
sub
cmpsl
stc
jbe
adc
test
divb
pop
and
out
mov
cltd
fmull
iret
jg
sub
cmp
inc
fs
push
sbb
imul
dec
cs
mov
inc
sbb
mov
push
and
xchg
xor
fdivs
in
push
ja
jo
fidivl
inc
and
mov
sbb
jo
or
inc
push
pop
jne
out
bswap
add
int3
out
je
cmpsl
into
aas
dec
add
push
ret
push
cmpsl
sbb
les
filds
pop
sub
out
mov
test
lahf
dec
sarb
gs
les
fwait
movsb
push
sub
jmp
xchg
sbb
loope
fwait
add
mov
and
xlat
push
ret
xor
cmpl
test
sub
adc
dec
sbb
sbb
xchg
cmp
xchg
sahf
xor
dec
les
cmp
cmc
xor
push
xor
fiaddl
out
dec
inc
cld
xor
pop
repz
push
stc
or
aas
jb
lds
imul
int
mov
cmpsl
pop
dec
test
mov
insl
dec
push
out
cmp
cwtl
aam
mov
negb
sbb
int
inc
xchg
sbb
push
lea
outsl
icebp
in
push
insl
ljmp
ret
inc
jmp
and
pop
inc
jno
mov
push
outsl
js
or
imul
jle
into
xor
sbb
repnz
jb
and
cld
push
insl
lock
jns
sti
jge
movsl
xlat
pop
mov
jno
loope
mov
push
shr
add
jae
push
adc
in
jl
cmc
push
loop
dec
dec
dec
icebp
mov
shlb
enter
mov
jnp
mov
push
cmpsl
jmp
push
cs
or
pop
rclb
into
sarl
mov
movsb
call
xchg
cmp
inc
shr
xor
idivb
dec
inc
js
mov
scas
sbb
adcb
enter
das
orl
ret
push
push
gs
fwait
outsb
icebp
xchg
inc
sbb
xchg
pushf
loopne
stos
mov
scas
jl
jmp
xchg
ret
mov
sbb
dec
pusha
out
inc
mov
jae
push
push
mov
xchg
sbb
push
or
cmpsb
and
std
sub
das
push
inc
scas
xchg
dec
dec
add
sbb
xchg
mov
repnz
jge
cmp
imul
jae
loop
out
xchg
lods
dec
scas
sahf
jbe,pn
pop
ret
ja
push
dec
sbb
movsb
inc
dec
test
cmp
into
xor
sbb
pop
test
loope
mov
xor
mov
or
stos
idivl
sbb
push
fiadds
lahf
int
inc
pop
fisubl
aas
mov
icebp
sahf
jo
push
mov
test
test
sbb
sub
repnz
sub
pop
out
adc
mov
fs
iret
jb
clc
jle
and
push
xor
into
stos
imulb
loopne
dec
xor
bound
stos
ret
and
mov
push
push
dec
pop
out
lea
ja
xor
inc
popa
out
imul
ror
cmp
imul
cmpsl
mov
push
js
jg
xor
push
and
xchg
dec
sbbb
or
or
movsl
call
push
pop
divl
mov
xchg
outsb
cmp
repz
sub
push
stc
leave
push
es
negl
xchg
mov
jg
lahf
sbb
invd
push
pop
inc
iret
sub
pop
mov
xor
xchg
cltd
out
das
call
add
jno
ljmp
daa
jno
jnp
mov
test
cmpsl
pop
adc
cmp
lods
sub
lcall
mov
lods
xor
or
inc
cmp
pusha
mov
sahf
jne
and
and
xor
jae
stc
fdivs
aaa
add
fstps
xchg
jmp
icebp
enter
xlat
aam
cmp
jb
lods
loopne
test
js
stc
scas
movsl
pop
jecxz
push
jo
sbb
push
test
js
mov
lds
add
xchg
out
in
out
int
fcompl
lret
or
int3
lods
repnz
add
lret
sarb
or
popa
inc
xchg
ljmp
sub
in
and
mov
push
in
ret
mov
xchg
pop
push
jmp
mov
xchg
jl
jns
lods
and
inc
xlat
stc
ljmp
push
in
xchg
sbb
popf
pop
and
add
inc
and
popf
cwtl
ss
jmp
popf
ljmp
outsb
cmp
adc
xchg
sahf
pushf
scas
popa
sbb
idivb
addr16
aam
bound
mov
mov
push
rcll
clc
mov
scas
xor
and
cmp
jnp
pop
pop
and
imul
outsb
es
in
pop
arpl
inc
dec
popa
mov
dec
scas
icebp
insb
icebp
or
xorb
les
popa
add
rcrl
xchg
cmp
loopne
std
movsb
add
inc
jp
fsubrs
ljmp
xchg
pop
jp
scas
xor
fsubs
call
adc
dec
xlat
leave
rcrb
inc
lret
stos
and
jle
or
orb
and
xor
sub
adc
jb
jae
cmp
xchg
and
push
dec
cmp
sahf
arpl
fnstcw
xor
pop
xor
xchg
int3
gs
adc
loopne
lods
mov
mov
ret
clc
cltd
rolb
movsb
shrl
pop
fcompl
xchg
rcrb
sbb
pop
add
inc
nop
rcr
push
cmpsl
mov
mov
xchg
xchg
xlat
loopne
inc
sarl
adc
mov
stc
sbb
es
xchg
dec
inc
mov
shll
pop
add
dec
fwait
or
cmp
mov
ret
inc
pop
push
sub
clc
mov
adc
xchg
popf
subb
loope
das
jg,pt
mov
jae
jl
push
in
nop
sbb
jns
outsb
lea
cltd
jmp
gs
imul
int
fcmovne
loope
loopne
ja
mov
xor
int
jecxz
and
pop
pop
inc
sarb
and
xor
les
lods
ja
mov
popa
hlt
pop
clc
and
imul
insl
js
push
pop
scas
fisubrs
mov
inc
mov
std
jmp
fisubrl
orl
mov
adc
lret
pop
adc
div
psubusb
sbb
aad
pushw
stc
js
or
pop
xor
pop
and
rcrb
sub
out
in
or
mov
and
movsb
inc
xchg
in
sub
popf
adc
fst
enter
adc
cltd
dec
add
and
out
jmp
jmp
stos
adc
shlb
leave
mov
lods
nopl
jmp
adc
jae
test
in
inc
imul
push
xlat
sti
repnz
xchg
movsb
jecxz
sar
out
add
imul
dec
mov
push
jge
arpl
ret
ljmp
faddl
sub
mov
mov
pop
lods
pop
inc
fists
sub
adc
outsl
notb
andl
xlat
cli
aad
cs
jge
inc
movsl
adc
inc
jmp
lahf
aas
inc
hlt
std
jno
dec
push
jb
inc
adc
lret
popa
aad
xchg
xor
dec
cmp
aaa
push
xchg
xor
daa
test
in
add
or
je
jp
js
shll
dec
mov
popa
cmpsl
stos
cmpsl
mov
arpl
inc
int3
sub
mov
sbb
sbb
pushf
push
adc
xlat
rcll
popa
jnp
push
ss
cltd
mov
xor
inc
notl
cmp
test
imul
lock
cmp
push
mov
mov
xchg
stos
lods
mov
sbb
addb
sub
mov
inc
mov
mov
lcall
dec
cmp
mov
pop
mov
aad
mov
aas
cmp
cmovae
in
push
mov
lahf
mov
inc
mov
jne
mov
dec
mov
jo
lahf
inc
mov
mov
out
lret
addr16
sti
sbb
pop
jo
jge
fmul
and
push
fs
cmp
loope
adc
jne
inc
or
mov
mov
add
int
jne
orb
loopne
imul
sbb
sahf
std
ljmp
sti
arpl
sbb
imul
xchg
xor
aas
dec
push
arpl
add
fistps
xorb
xchg
aaa
or
dec
fistl
dec
lods
dec
inc
sti
outsb
inc
inc
xchg
enter
adc
sbb
mov
jge
jmp
mov
popf
test
jmp
pop
pop
and
dec
outsl
inc
push
pop
mov
push
push
mov
sub
js
inc
mov
jbe
jnp
imul
js
xchg
push
fmul
and
inc
and
mov
adc
std
popf
mov
mov
dec
pusha
jo
pop
mov
and
mov
pop
pop
sbb
push
push
or
dec
mov
iret
js
pop
bound
pop
adc
dec
pop
lahf
mov
add
in
xchg
cmp
jg
out
int3
jb
cmp
or
cmpsl
inc
sbb
mov
test
jb
sbb
pop
push
sbb
out
or
lds
jmp
mov
inc
and
shrl
pop
sub
jmp
xchg
xlat
sahf
cmp
pop
aam
inc
lods
stos
loopne
test
inc
sub
cmp
shlb
lret
lahf
bound
mov
jmp
pop
xor
lcall
pop
cmp
dec
repnz
push
fwait
push
or
mov
shrb
icebp
push
cmpsb
je
mov
les
jg
out
lods
push
mov
and
cmpb
js
dec
add
cmp
lock
pop
inc
cli
adc
mov
push
movsb
cmp
adc
push
or
leave
jge
cwtl
inc
cli
mov
xchg
test
inc
cmp
sub
jns
nop
cltd
fiaddl
insl
mov
and
leave
lret
fistpll
js
or
push
and
rclb
adc
shll
sbb
add
sub
lods
xor
mov
inc
push
ja
ss
sbb
jo
loope
fisubl
pop
cmc
fcompl
jbe
ja
push
pop
or
mov
clc
aam
jl
fs
inc
inc
hlt
test
mov
xchg
and
das
push
pop
fisttpll
jnp
push
add
inc
add
cmp
xor
pop
xchg
sub
dec
mov
jp
divl
pop
xor
mov
mov
sahf
xor
ds
dec
cmp
movsb
cmp
fwait
cmc
sbb
test
sbb
stos
dec
and
jecxz
fcoml
shl
xchg
or
xchg
in
sub
mov
in
or
mov
fnstenv
and
cmp
push
cmp
push
sub
lahf
je
dec
wrmsr
js
lret
cmp
in
and
cwtl
dec
popa
out
cmpsb
pop
mov
fwait
aas
pop
cmp
lret
and
lcall
sti
idivl
addr16
aaa
dec
std
in
cmp
adc
push
jo
add
mov
push
or
sub
xchg
adc
pushf
sahf
enter
mov
in
xor
cwtl
mov
adc
xchg
test
push
xor
aam
jg
xchg
jge
adc
or
ds
or
iret
xchg
aad
decb
cs
nop
xchg
cld
testb
lock
push
adc
cld
jg
push
nop
ljmp
fcmovbe
jb
mov
push
les
mov
lock
movsb
adcb
incb
push
call
dec
iret
out
xchg
mov
add
push
popf
lods
nop
pop
jb
sub
in
aas
je
pop
push
in
mov
mov
inc
mov
movsl
mov
cmp
cmp
cmp
shl
lock
push
aad
aaa
mov
icebp
je
enter
xor
xchg
dec
mov
dec
fcomps
push
repnz
lret
in
adc
mov
aas
cmp
jo
jle
repz
push
pop
lcall
int
xchg
mov
imulb
lret
sub
push
dec
and
push
mov
or
push
xor
dec
jbe
mov
fisubs
jo
mov
or
fs
xchg
xchg
xchg
jl
fbld
je
aas
aam
xor
add
rclb
xchg
mov
in
mov
int3
out
mov
popa
xor
out
inc
push
sti
subb
ds
repz
inc
add
arpl
lock
pop
mov
cmpsb
rclb
or
cmpsl
jp
or
xchg
fs
nop
fwait
aad
pop
push
aaa
stos
lock
shl
enter
jno
out
pop
push
mov
ret
xchg
fcmovnu
xchg
adc
mov
in
mov
fucomp
and
xor
int3
add
enter
or
cmc
sub
addr16
pop
movsl
inc
xchg
lret
gs
xchg
pushf
pop
fsts
test
out
dec
outsb
pushl
into
sbb
std
out
insl
and
add
adc
es
sub
xlat
push
sbb
daa
sub
adc
xlat
aad
movb
stos
cmpl
in
test
jo
mov
loop
lock
lahf
ja
rcrl
sbb
popf
enter
cs
inc
rcl
inc
xchg
insb
jnp
mov
orb
outsl
dec
andb
jne
xchg
stos
roll
pop
out
aad
or
daa
xchg
aaa
jno
int3
pop
das
adc
mov
out
cmp
idiv
clc
mov
xchg
jmp
cmp
jmp
in
sbb
js
scas
xchg
aaa
clc
arpl
push
adc
ja
je
jno
lock
cwtl
call
cmc
mov
in
arpl
stos
sbb
sub
aad
andb
lret
das
push
es
sbb
hlt
xor
sub
adc
sti
jle
dec
push
jbe
pop
push
lea
cltd
ljmp
jle
subb
sbb
cmp
aaa
clc
imul
mov
add
pop
cmp
ret
lret
lret
add
aam
in
je
frstor
pop
mov
cmp
push
enter
icebp
xchg
and
and
sub
jae
sti
jmp
cmp
pop
int3
push
adc
outsb
mov
aas
loopne
push
jmp
jp
and
mov
mov
xchg
jecxz,pt
lret
inc
adc
pop
es
loop
into
outsb
xor
xor
pop
fs
in
popa
orl
call
and
into
add
jge
mov
add
jo
daa
fst
jo
add
pop
sbbl
test
pusha
in
rcrl
je
cmc
add
in
jle
icebp
cmp
add
inc
lods
sbb
jne
test
stos
mov
mov
push
sub
sub
inc
hlt
lea
or
adc
fmull
lcall
inc
jg
or
cltd
add
shl
loop
mov
popa
cld
js
dec
cmpb
nop
sbb
fldt
jae
push
mov
push
push
pop
ret
aas
add
or
xor
rcrb
out
sbbb
stos
mov
dec
imul
pop
xchg
inc
subl
adc
repz
scas
fcomp
and
fisttpll
stos
jbe
lret
xlat
dec
push
je
inc
pop
leave
out
jle
dec
subb
dec
xchg
outsl
icebp
aas
out
push
rcrb
fdivl
aas
ret
inc
push
dec
je
call
pop
jne
out
ror
aam
lret
or
ret
and
stos
movsb
xchg
les
push
lret
mov
cmpsl
fisubs
test
aad
arpl
ds
add
int
hlt
cmp
cmp
jnp
xor
push
jecxz
xchg
and
ret
pop
mov
xchg
outsl
movsb
jmp
je
mov
addr16
inc
stos
test
inc
jae
xchg
inc
mov
add
cwtl
in
call
lds
and
cmp
lods
jb
or
stc
sbb
push
jmp
push
or
sbbb
cmp
jno
sbb
dec
out
test
cltd
pop
and
sbb
push
insb
mov
pop
fs
int
xchg
and
mov
jge
fidivrs
or
xor
bound
inc
gs
mov
mov
xchg
jb
dec
add
mov
adc
mov
and
sub
mov
sbb
pop
push
imul
push
mov
pop
push
xor
loopne
daa
jns
push
or
iret
lret
test
cwtl
cmc
in
adc
sbb
call
adc
in
cld
call
in
insb
into
or
inc
mov
cmp
mov
iret
xor
dec
addl
imul
out
clc
ja,pt
xor
xor
shrb
jb
sbb
xchg
inc
clc
sbb
dec
cwtl
push
and
adc
fdivrl
push
test
sti
push
les
jb
fidivrl
orb
mov
xor
outsl
loopne
loope
ret
rolb
mov
mov
mov
outsb
ss
jno
xchg
out
aas
sub
shrb
insl
imull
jbe
fistpl
pop
jmp
shlb
or
inc
fwait
xchg
mov
xchg
or
ror
movsb
jo
and
test
push
stos
xor
pop
loopne
push
dec
daa
out
push
pusha
inc
cmp
push
out
aaa
outsb
or
jno
sub
push
adc
call
xchg
sub
mov
mov
out
jmp
jmp
or
add
in
add
popa
clc
mov
mov
adc
and
jecxz
pop
outsl
sub
lods
mov
adc
inc
rcrl
ss
dec
and
lock
cmp
dec
insl
pop
mov
leave
out
inc
cwtl
divl
mov
aad
test
subb
in
mov
push
jo
loop
call
sahf
sahf
nop
sarb
adc
test
cmpl
xchg
jl
xor
iret
cmp
xchg
pop
filds
inc
push
jne
imul
xor
cmp
into
popa
jp
sub
mov
lock
cmpsb
clc
pop
jmp
push
jmp
stos
lods
and
popf
or
and
hlt
ds
orb
jmp
fnstcw
mov
lret
cmc
shll
lods
shlb
popf
pop
adc
subl
sbb
jge
fdivl
int3
mov
xchg
mov
loope
imul
imul
push
sbb
rcrl
stos
pop
add
inc
xchg
adc
cwtl
scas
sbb
sub
int
stos
ret
out
sub
mov
int
add
lahf
push
lock
ss
or
add
mov
lock
jnp
or
insl
sbb
aas
aas
ljmp
sbb
jae
sbb
dec
mov
lods
mov
scas
loop
cmp
shlb
int
mov
aaa
cmp
push
je
mov
jns
ja
in
and
xchg
xor
xor
sbb
je
cmc
sbbb
fidivrl
mov
sbb
fcmovnu
cmp
ret
jp
mov
xchg
adc
push
push
adc
out
push
fs
call
dec
test
mov
inc
fwait
adc
add
movsb
fiaddl
dec
in
sahf
push
or
pop
test
ss
sub
test
xchg
add
inc
or
and
cmp
pop
rcrb
push
sub
mov
pop
loop
inc
mov
xchg
cmpsl
xchg
or
and
push
jae
jne
sarl
pop
push
pop
push
dec
lret
iret
cmp
in
or
in
add
xor
pusha
test
adc
iret
cli
sub
xchg
jb
lret
inc
aad
das
sahf
dec
int
inc
loopne
sub
pop
push
ret
add
mov
mov
xor
cs
lods
sub
pop
push
xchg
xor
dec
in
adc
in
int3
jecxz
scas
mov
fcomp
inc
xchg
or
popa
ret
loope
aaa
xchg
xchg
add
jae
mov
and
aas
push
pop
inc
push
mov
dec
cmp
push
popa
in
sbb
cmp
cmp
adc
mov
sub
xor
lcall
cwtl
mov
lods
sub
faddp
jnp
pusha
jmp
jae
icebp
fadd
fildl
mov
pop
repz
jp
into
dec
push
pop
inc
pop
jnp
push
rorb
add
sbb
adc
gs
or
aad
jno
jg
cmpb
jbe
pushf
jg
aas
lods
ss
mov
das
out
mov
jae
orl
mov
ret
loope
outsl
sbb
test
and
push
clc
inc
mov
jmp
fsubl
lcall
push
mov
in
idiv
dec
mov
jg
xchg
sbb
push
xchg
in
push
fstpl
xor
ret
xchg
xor
xlat
push
pop
int
shlb
aam
push
or
jne
and
test
push
mov
loopne
mov
lret
sti
pop
push
loopne
popf
lods
mov
mov
das
mov
test
mov
movsb
outsb
nop
and
sub
and
xlat
push
pop
pop
in
cs
out
pop
push
lods
sbb
xchg
jne
push
or
sbb
std
scas
mov
push
call
jmp
cmc
ljmp
inc
and
mov
sbb
add
bound
insb
jecxz
xchg
mov
fldl2e
ss
inc
mov
aad
faddl
icebp
sub
movsl
sarb
mov
out
add
or
js
aad
aas
insb
cmpsl
aad
int3
sbb
add
imul
add
imul
xchg
xchg
mov
cmp
jne
nop
ja
mov
imul
cmp
and
fisubs
mov
loopne
mov
and
out
lods
loope
push
test
mov
cltd
push
adc
out
into
out
je
fiadds
data16
lock
std
mov
shlb
movsb
xchg
xor
sbb
test
jmp
xchg
inc
cs
pop
iret
cltd
dec
xchg
loop
or
popf
lods
iret
or
push
bound
pusha
and
inc
std
das
rorb
hlt
leave
pop
int3
xchg
out
or
hlt
cmp
incb
fisttps
andl
fs
mov
fdivrp
fbld
roll
jl
push
cmpsl
sbb
jle
sbb
xchg
fdivl
out
icebp
sub
inc
pop
mov
add
mov
mov
test
xchg
mov
jb
nop
inc
sbb
sbb
lret
pop
lahf
sub
lahf
sbb
push
xchg
lods
ja
jo
adc
loopne
mov
ret
jo
leave
xor
jle
ljmp
or
mov
cmp
pop
rorl
xchg
cltd
xor
insl
push
lcall
test
adc
inc
cmc
cmp
aam
cmp
andl
push
push
cmpb
cmp
adc
scas
push
fistpl
inc
dec
fsubrs
jp
fsubs
push
lea
insl
jecxz
fldcw
popa
push
ficompl
xchg
jl
xchg
mov
inc
shrb
in
ss
aas
jp
sub
outsl
les
push
mov
push
pop
and
popa
add
sbb
push
xor
mov
cmpsl
popf
cmp
loop
gs
xor
mov
cmp
adc
aad
push
cmovs
rolb
jbe
sbb
fcomps
or
sbb
add
xor
int
jge
push
std
dec
je
lret
in
pop
xchg
enter
mov
add
ja
in
xchg
movsl
adc
inc
mov
daa
jne
mov
cmc
fwait
stc
xor
jmp
scas
push
cs
adc
out
mov
xchg
sahf
daa
jmp
icebp
pop
mov
bound
cmp
mov
jne
and
nop
sbb
pop
xchg
pop
bound
add
cmc
sub
or
test
adc
jle
lods
jae
mov
sti
ss
js
jb
mov
xchg
and
mov
lret
test
xchg
test
leave
inc
repnz
lahf
or
sbb
adc
adcb
imul
lods
mov
mov
lods
and
ffreep
xchg
arpl
fs
pop
sub
mov
addr16
push
sbb
push
jnp
loopne
imul
push
aas
outsb
lea
int
add
and
gs
imul
out
jg
es
pop
jl
loope
cli
andl
das
dec
pushl
push
lret
lea
jno
push
daa
inc
dec
movsb
imul
lods
or
cmc
dec
inc
das
and
addl
sub
shl
sub
adc
jns
mov
jmp
mov
inc
jp
add
outsl
out
xor
aaa
jbe
xor
pushf
mov
int3
es
jecxz,pt
movsb
pop
mov
jb
lea
in
cmp
dec
fstpt
jmp
mov
push
mov
adc
jae
pop
push
or
add
scas
add
inc
xchg
xor
mov
out
jl
pop
daa
roll
pop
test
mov
ljmp
int3
pop
or
repnz
lahf
xor
insb
inc
cmp
mov
mov
ds
sub
lock
jmp
adc
insb
arpl
mov
icebp
sub
inc
sub
cmp
dec
out
xor
mov
ljmp
daa
ret
adc
push
push
or
insl
repnz
fwait
int
and
mov
pop
sub
xchg
mov
inc
dec
pusha
out
xor
or
stc
adc
adc
dec
sub
add
lock
fwait
jmp
push
andb
cmp
popa
add
pop
push
loopne
shll
enter
or
repz
push
or
push
and
rcrb
jns
addr16
push
xchg
xchg
mov
shrb
loop
cmpxchg
dec
rcrl
xchg
pop
xor
add
and
pop
mov
pushf
stos
test
in
mov
xor
sbbl
ja
cltd
mov
sbb
sub
pop
add
andl
pusha
fimuls
jle
or
outsl
sub
mov
or
xchg
out
loop
sbb
stc
dec
dec
mov
xchg
mov
in
loop
sarb
pop
lret
das
sbb
rorl
int
mov
inc
cmp
xor
dec
fiaddl
sub
cmpsb
inc
and
jbe
lret
sbb
mov
push
hlt
mov
mov
in
inc
loopne
dec
negl
xchg
popf
adc
or
dec
sub
push
cmpsb
adc
sub
or
lcall
test
adc
shll
add
inc
fxch
imul
leave
jne
lret
xor
jge
jno
jbe
push
and
push
insb
cmp
scas
enter
scas
xorb
enter
sbb
sub
lcall
insl
xlat
mov
push
cmpsb
sti
mov
mov
ret
lret
sbb
scas
je
iret
push
movb
sub
icebp
dec
jbe
sub
fsubrs
leave
dec
test
jmp
sbb
or
pop
inc
add
cmp
outsb
and
fst
daa
daa
adc
pop
cld
dec
sub
mov
xlat
xchg
jno
push
sbb
push
jl
mov
push
fcmovne
dec
xchg
inc
outsl
outsl
cmp
andb
es
push
stc
xlat
mov
jmp
in
popa
inc
mov
nop
push
mov
jnp
or
dec
add
das
cmp
cs
test
cltd
mov
imul
jle
repnz
or
or
loopne
in
cld
ds
dec
pop
cli
arpl
jne
or
add
dec
and
push
aad
inc
adc
call
mov
mov
sub
inc
push
popf
and
dec
dec
clc
sbb
pop
fisubrl
and
fldcw
ss
aam
dec
mov
xchg
dec
imul
shrb
out
dec
pop
je
jmp
pushf
fisttpll
sbb
dec
sbb
lahf
xor
dec
mov
fld
jge
mov
shrb
jb
ljmp
leave
out
lock
pushf
lret
jb
jnp
dec
popf
pusha
clc
sub
mov
in
add
push
push
jecxz
and
sub
movsl
mov
jb
das
int
add
mov
add
mov
push
gs
dec
lods
dec
xchg
ljmp
push
jl
lods
arpl
mov
sub
mov
hlt
popa
dec
xor
xor
xchg
ret
subb
jg
stos
add
inc
popa
mov
push
xchg
data16
add
xchg
std
push
inc
aam
cmp
data16
addr16
pushf
popf
pushf
jg
stos
cwtl
xchg
mov
xchg
inc
cwtl
cmp
pop
sbb
mov
and
xor
and
mov
pop
jmp
out
aam
xor
cld
inc
ret
sbb
pop
repnz
pop
xchg
sbb
bound
mov
push
push
xchg
popf
mov
pop
adc
jecxz
mov
insl
push
sub
mov
in
cmpsl
push
fstl
push
and
sub
std
or
pop
mov
leave
test
rol
shll
pushaw
add
jmp
pmulhuw
outsb
je
inc
or
pusha
add
cmp
cmpsl
mov
dec
jnp
test
xor
pop
test
adc
push
xchg
xor
lods
rcl
jmp
pop
insl
or
shlb
dec
xor
xchg
jmp
add
lods
test
mov
add
mov
sbb
and
pop
in
arpl
fimull
add
dec
test
shl
sqrtps
mov
stos
shlb
cwtl
fs
cmp
pop
push
mov
scas
test
push
test
mov
popa
and
xor
xor
push
std
lahf
push
sub
ja
adc
pop
gs
lods
js
outsb
dec
jne
and
jb
jb
mov
mov
xchg
cmc
dec
add
mov
push
ljmp
arpl
mov
mov
cmp
shlb
sub
rclb
arpl
push
add
testb
insl
outsl
pop
outsl
mov
xor
das
shr
mov
add
pop
imull
or
push
imull
subl
adc
sbb
mov
fnstcw
test
jmp
sbb
mov
addb
jo
ret
cwtl
sub
jne
test
sahf
adc
iret
les
add
jmp
dec
les
pop
idivl
sahf
aas
push
out
and
jg
fyl2x
dec
int
lahf
roll
and
dec
mov
push
pop
out
pop
mov
xchg
decl
cmp
dec
or
daa
xor
scas
sbb
popf
mov
clc
aas
mov
imul
mov
pusha
aaa
xchg
mov
adc
lock
lock
stos
mov
loop
sub
das
mov
scas
mov
inc
bound
jp
dec
jne
jl
das
push
and
push
adc
inc
mov
sbb
lret
jp
repnz
jnp
sub
inc
jge
rclb
jo
sbb
mov
dec
leave
xor
xor
sub
insb
sub
fs
push
ja
and
push
mov
lret
cltd
pop
mov
jp
and
sarl
jle
stc
jmp
cmp
xor
inc
sub
pushf
stos
cltd
add
xchg
pop
mov
jnp
or
pusha
xchg
mov
mov
ljmp
arpl
mov
aam
and
add
add
fistps
and
push
rorb
cs
repnz
movsl
xchg
or
cmp
lahf
jmp
pop
mov
in
sbb
rorb
pop
jl
std
push
mov
stc
mov
cmp
jb
or
jae,pn
xchg
pushf
push
pop
loope
dec
sbb
stc
bound
sarb
mov
mov
xlat
xchg
aad
xor
xor
push
enter
cmp
xchg
jp
pop
in
sarl
mov
add
or
xrelease
ljmp
fldt
out
icebp
mov
and
add
psubq
in
in
mov
lods
cmpsb
dec
fwait
pop
or
jns
xor
mov
mov
in
cltd
sahf
xor
xlat
mov
sbb
loopne
lret
and
push
fisubrl
lods
add
insl
xor
cmp
push
cmp
push
mov
add
icebp
or
sar
jbe
das
jmp
fistl
push
mov
xor
bswap
mov
jl
mov
mov
sbb
rcrb
mull
ss
bswap
sbb
mov
inc
xlat
and
add
mov
dec
notb
fcompl
es
push
and
imul
or
inc
xchg
inc
push
inc
stos
jg
scas
ja
push
lods
jno
adc
in
test
xchg
out
sbbb
adc
sbb
jge
int
jns
movsl
imull
outsl
xchg
out
xchg
cltd
das
nop
pop
lcall
pop
ds
data16
nop
lret
or
sbb
pop
test
iret
cli
mov
das
shrl
adc
gs
gs
pushf
scas
inc
sub
jle
pop
xchg
mov
aaa
fldcw
in
ret
int
mov
mov
mov
out
sti
stc
xchg
in
cld
or
stos
cld
mov
mov
mov
mov
push
lahf
xor
negl
and
sti
push
lret
js
adc
iret
inc
or
aas
cltd
mov
sbb
lods
call
dec
out
callw
jmp
icebp
lock
sbb
aas
or
in
xor
push
pop
in
push
out
std
sbb
popa
add
movsb
xor
push
add
insl
mov
ret
test
mov
mov
inc
std
mul
lcall
pop
push
repnz
inc
repz
xor
fstpt
or
test
mov
js
mov
xchg
ret
psllq
repz
mov
fidivl
in
shll
sub
pop
pop
cld
dec
lods
lret
xchg
aam
sub
push
cmp
jno
pop
pushf
lret
fptan
dec
les
sbb
fisubs
call
repz
arpl
adc
pop
xchg
loopne
cmp
add
sti
inc
and
cmp
in
sbb
inc
add
mov
stc
mov
sbb
mov
xchg
cltd
test
and
loope
cmpsl
dec
push
and
fdivrp
cmpsb
sub
movlps
mov
andl
lret
push
jg
mov
add
jmp
cmp
imul
mov
fs
pop
and
fadd
cmp
mov
cmp
push
call
sbbl
repz
inc
cmc
pop
jo
aaa
xor
jnp
push
outsl
and
mov
push
movsb
ja
sbb
and
dec
in
inc
push
inc
subb
orb
mov
pop
add
mov
mov
data16
push
jg
cmp
int3
sub
jno
int
add
cmp
inc
mov
pop
popa
das
sbb
imul
mov
pop
cmp
cs
clc
idivl
adc
pop
repnz
repnz
sbb
popf
in
mov
sbb
pop
cmp
push
push
sbb
fldl
or
cwtl
rclb
mov
mov
jmp
mov
jo
jo
push
inc
aas
cmp
enter
scas
or
lds
dec
test
mov
mov
gs
js
lods
xchg
lcall
inc
jbe
xchg
dec
enter
or
push
sbb
push
xor
std
in
sub
aam
hlt
cld
jle
cmp
std
jno
push
movsl
test
bound
movsl
cmp
je
inc
lea
fneni(8087
and
loope
inc
cmp
repnz
dec
sbb
data16
pusha
cwtl
scas
jmp
ss
pushf
xchg
pop
adc
xchg
and
shr
int3
add
das
adc
mov
add
arpl
fsubp
stc
mov
es
aaa
pop
test
add
in
add
push
xchg
sbb
ror
pusha
pop
loopne
and
insl
lock
test
mov
fwait
sbb
xchg
push
outsl
rcrb
pusha
dec
dec
jb
insl
into
in
push
sbbl
imul
sbb
push
jno
adc
test
or
mov
aaa
mov
sbb
dec
adc
int3
jns
inc
outsl
int3
lahf
loope
sub
stos
aad
scas
inc
inc
loopne
and
xchg
push
cmc
adc
sub
dec
and
jmp
dec
mov
push
or
in
push
cmpsb
ret
mov
ret
nop
ficoms
dec
xlat
push
add
mov
addb
push
mov
in
aas
subb
scas
hlt
xchg
jecxz
push
jl
mov
test
jnp
ror
pop
dec
and
push
pop
sbb
negb
stos
insl
sub
jb
dec
loope
shl
rorb
xor
aam
xchg
or
sub
ljmp
dec
frstor
push
insl
and
cmp
fsts
sarl
cld
sbb
xor
stos
movsb
ss
dec
sbb
xor
push
mov
js
mov
cltd
movsb
nop
divb
aaa
clc
outsb
fiaddl
pop
test
rol
jo
jbe
push
adc
and
or
in
cli
inc
mov
in
inc
xchg
fwait
enter
xchg
mov
mov
sahf
dec
mov
adc
jo
or
xor
sbb
daa
jno
inc
daa
dec
leave
inc
jg
jne
into
push
mov
xor
lcall
inc
clc
shl
lahf
add
adc
or
lcall
loope
fadd
inc
faddp
pop
scas
pop
xchg
mov
xchg
xor
sub
adc
daa
cli
into
or
xchg
push
mov
cmp
adc
jno
pop
adc
jecxz
sbb
incl
jnp
in
inc
jg
pop
mov
sti
inc
je
add
rorb
dec
pop
in
jns
in
inc
xor
lret
sahf
insl
adc
mov
mov
sbb
imul
mov
insb
addr16
and
mov
adc
aad
dec
jnp
iret
adc
out
jge
push
dec
jae
adc
insb
and
or
or
xor
xchg
cs
ficomps
sub
leave
dec
and
nop
jbe
pop
call
push
cld
test
mov
mov
cmp
xlat
pop
push
mov
push
pop
sbb
dec
test
jge
push
adc
push
inc
loop
xchg
and
ret
cmp
xor
and
cmp
or
sub
inc
dec
js
cmp
jbe
loopne
fsubrl
repz
xchg
fstps
cmp
jbe
pop
rol
push
rcr
add
pusha
xor
jmp
mov
sub
and
sbb
outsl
std
repz
mov
lods
test
cmp
popa
xchg
out
dec
adc
add
jl
inc
aam
vandnps
test
lea
mov
popa
add
hlt
mov
cmp
jmp
inc
mov
aam
mov
push
repnz
xchg
mov
cmpsl
inc
jmp
jp
xlat
jae
cmp
dec
les
js
cmp
pop
and
ret
dec
jge
lea
sub
pop
xchg
aam
pop
cli
sar
xor
jo
sub
inc
pop
mov
dec
mov
push
ret
mov
and
push
into
ficoms
mov
dec
jae
mov
stc
mov
mov
and
lock
nop
pusha
ficoml
xchg
push
leave
mov
push
sbb
mov
sar
adc
inc
cmp
je
je
and
test
mov
sub
mov
icebp
bound
push
mov
push
mov
push
xor
mov
jmp
ret
jecxz
imul
cmp
enter
push
dec
mov
jp
in
pusha
iret
inc
rorl
in
adc
xchg
or
mov
aad
into
imul
or
adc
les
iret
or
arpl
xchg
xchg
or
cmp
loope
ja
cmpsl
mov
push
jae
or
push
jnp
lea
roll
pop
jecxz
adc
test
cmpsl
xor
or
push
mov
sub
aad
popa
iret
or
fadds
cmpsl
sahf
xor
dec
orl
fsubs
mov
mov
idivl
push
or
jns
mov
or
sbb
shll
loope
xor
ds
lret
mov
inc
pushf
adc
hlt
or
rcll
pushf
add
mov
mov
test
sbb
scas
cmpsb
and
test
cwtl
dec
movb
sbb
filds
ret
xchg
jp
bound
icebp
shll
pushf
stos
add
mov
mov
ffree
mov
nop
mov
test
lods
loop
mov
pushf
mov
fs
sbb
dec
jmp
adc
xor
outsl
popf
inc
ja,pt
data16
jno
push
push
cmp
xchg
imull
and
dec
cmp
fnsave
lret
pop
arpl
xor
sub
stc
incl
mov
out
xor
push
mov
inc
push
je
in
imul
sbb
lds
mov
jp
adc
lret
or
mov
jb
out
orl
xorl
mov
fwait
sbb
lock
xor
push
cmp
mov
rcrl
out
cmpsb
sub
dec
int
xor
test
lret
mov
adc
xchg
inc
jl
aad
jge
ljmp
test
cmp
mov
mov
adc
adc
test
fabs
hlt
lods
mov
add
mov
xor
out
push
inc
dec
fidivl
inc
push
roll
sbb
xor
dec
loopne
xor
ljmp
lock
fildll
mov
sub
push
cli
pop
inc
xor
cmp
popf
fstp
cmp
fbld
ss
ja
cmpsb
inc
imul
sub
dec
mov
leave
rcrl
cwtl
stc
dec
adc
pusha
inc
cmpsl
cmc
les
dec
jp
lcall
jbe
lea
aad
sub
pop
and
and
xchg
adc
call
outsl
sbb
hlt
push
bnd
sub
sub
pop
mov
cld
adc
stc
leave
sbb
jb
mov
jne
mov
movsb
pop
inc
cmp
jl
push
enter
push
xchg
mov
inc
cmpsl
cs
mov
xchg
movsb
jle
sub
cmpsb
mov
cmp
jle
cmp
xor
ficoms
rcl
jge
divb
xchg
subb
fmull
inc
push
into
pop
jg
adc
test
clc
jne
pushf
mov
int3
getsec
scas
xor
dec
dec
xchg
int3
sub
inc
xchg
dec
xchg
notl
repnz
movsb
inc
outsl
cmp
nop
pop
hlt
pop
lods
test
fcoms
add
cwtl
rcl
adc
cmp
xor
xchg
ret
stos
xchg
pop
loope
push
loope
lret
in
jbe
std
pop
mov
test
dec
out
lea
xchg
outsl
insl
pop
into
lcall
jge
sahf
and
outsb
outsl
lcall
hlt
inc
orb
push
and
ret
mov
pusha
shll
or
popa
test
mov
cli
cmp
enter
fsub
pusha
mov
lahf
mov
pop
or
xchg
mov
repz
xor
out
lock
mov
addr16
mov
scas
mov
popa
loop
stos
dec
in
jl
pop
mov
jle
jecxz
outsb
add
test
xchg
xchg
push
mov
test
xor
addl
jl
fnstenv
shrl
lret
addr16
add
mov
xchg
and
cmp
lock
push
mov
mov
mov
in
imul
push
mov
dec
int
inc
lret
loop
sbb
out
and
loop
dec
mov
lea
adc
pop
fmuls
shrb
not
add
xor
cltd
xchg
imul
imul
mov
out
xor
xchg
rolb
jb
andl
push
inc
mov
aas
shrl
sbb
loope
sbb
mov
into
inc
mov
or
imul
rcrb
fsts
mov
jp
xor
cmpsl
dec
ret
test
test
call
cmp
pop
mov
adc
cmp
jno
jmp
jne
cmp
xchg
pushf
jmp
ret
mov
aam
ret
test
push
scas
pop
repz
stos
cld
sub
mov
mov
mov
push
push
sbb
sbb
and
aas
in
cmp
fnsave
js
lret
fstps
jp
enter
popf
or
or
test
mov
push
add
pop
inc
shr
mov
jmp
jno
fwait
xor
incl
stos
push
jnp
adc
mov
in
scas
pushf
dec
mov
mov
adc
int3
out
pop
shrl
adc
mov
je
arpl
push
and
pop
lock
pop
das
fldenv
xor
mov
sub
addr16
push
das
outsl
push
lods
push
sbb
pop
cmc
ret
lret
add
adc
and
mov
sub
sub
pusha
mov
dec
mov
mov
add
pop
mov
pusha
int
cli
adc
outsb
adc
sub
cmc
add
push
sar
mov
xchg
lahf
jg
pop
cld
jne
cmp
mov
inc
addr16
nop
push
je
dec
cwtl
movsb
sbb
pop
inc
outsb
push
pop
jno
cmpsb
dec
pop
insb
clc
dec
fwait
loope
mov
and
addr16
mov
jp
aam
push
imul
add
sbb
imul
loop
pop
xchg
pusha
dec
es
sbb
sahf
loopne
xchg
imul
pop
xor
mov
movsb
cmp
ds
push
sub
push
cmp
dec
fidivrs
lods
mov
inc
fisubs
pop
dec
dec
pop
aas
inc
pusha
add
and
loopne
iret
adcl
decl
jnp,pt
inc
adc
add
jecxz
std
jne
sbb
cs
jbe
cmp
mov
loop
xchg
fs
ret
cli
adc
scas
iret
pusha
sarb
xor
pushf
fstpl
and
lds
fnstsw
das
scas
fiaddl
insl
leave
notb
in
cmp
push
dec
or
dec
aad
xchg
xor
incb
lret
movsb
push
stos
lret
hlt
mov
mov
and
dec
or
mov
or
das
xor
cmp
sub
ret
push
mov
insl
loop
xchg
mov
mov
jmp
push
xor
cmpsl
jle
pop
stos
mov
into
xchg
adc
cmc
fidivs
and
cltd
xchg
sbb
dec
outsl
lods
jno
push
aaa
mov
cwtl
pop
iret
jae
push
xor
and
sbb
add
test
dec
loope
mov
lods
decl
cmc
adcb
jae
or
sbb
sub
and
adc
jbe
jbe
pop
mov
or
inc
cmp
cmp
sbb
jmp
aad
dec
cmp
lea
cmp
add
jmp
pop
mov
adc
adc
mov
pop
and
lds
sahf
stos
push
decb
out
je
loopne
sub
and
inc
mov
cmp
hlt
test
dec
inc
push
adc
bound
fcompl
cmp
and
pop
mov
add
les
sbb
outsb
in
leave
push
cmp
repz
jmp
push
cmc
add
jno
inc
jo
out
jo
mov
dec
movsb
int
and
push
mov
xchg
dec
push
mov
or
cltd
lret
scas
fidivl
adc
stos
loope
add
in
mov
movsb
cmpsl
loope
and
in
iret
adc
jo
rcr
cmc
push
hlt
mov
xchg
outsl
stos
subb
popf
push
and
jno
mov
add
mov
adc
int3
cmpsl
push
and
icebp
pop
pop
jp
movsl
adc
cmp
ret
out
mov
lock
sbb
dec
add
jp
or
je
jecxz
subl
mov
lcall
addr16
leave
xor
pop
adc
sub
cld
push
dec
mov
and
idivb
fwait
push
outsb
loop
movsl
pop
fdivrp
jmp
add
aas
out
pop
hlt
data16
adc
in
hlt
call
mov
xchg
repz
xchg
mov
pop
out
add
cmp
and
pop
sbb
push
jae
scas
mov
imul
fdivr
fnsave
filds
enter
cmc
data16
ss
les
jne
cmpsl
repz
pusha
mov
cmpsl
hlt
xor
pop
das
add
stos
in
mov
xor
jno
sbb
and
rcrb
inc
pop
sub
mov
dec
dec
divl
ds
jle
push
enter
pop
mov
push
lods
pop
test
fsubrs
pop
dec
cmc
adc
pop
push
jae
stos
fsubrs
inc
cmp
sbb
add
inc
mov
and
jo
pop
cltd
dec
sub
cltd
loope
jo
notl
test
loope
push
adc
cmpsl
and
dec
xor
cmp
push
enter
push
dec
in
sub
xchg
xchg
add
sbb
loop
pusha
push
cmp
out
mov
and
loop
adc
divl
stc
movsl
call
fdivl
aam
push
push
sahf
add
ss
loop
mov
sub
notb
std
dec
inc
repnz
cmp
or
stc
pop
add
pop
and
adc
mov
ljmp
aaa
jo
lock
jbe
pop
cmpsb
mov
mov
pop
inc
jmp
xlat
mov
mov
push
xchg
jg
mov
adcb
out
out
neg
lea
dec
mov
xchg
lret
int
or
popf
push
jge
scas
push
popa
inc
mov
aaa
jae
sub
sbb
into
fidivrl
in
push
xchg
push
test
fsubl
test
sub
jle
xchg
or
test
pop
aad
or
mov
mov
push
pop
push
dec
test
fwait
ret
push
test
pusha
xchg
dec
xor
mov
insb
cli
xchg
andl
adc
pop
mov
aam
mov
pop
mov
popf
pusha
adc
jmp
lahf
test
mov
lret
mov
pop
ds
js
call
loop
or
into
test
jmp
dec
loop
mov
mov
stos
mov
sbb
jbe
jo
or
dec
sbb
or
xchg
rorb
sarl
jl
cwtl
mov
mov
jp
lea
icebp
xchg
pop
or
mov
das
adc
daa
and
push
fmuls
loope
inc
lods
jns
add
scas
sub
ljmp
bound
ljmp
mov
xchg
sbb
sub
jnp
orl
pop
jae
enter
sbb
lock
dec
push
mov
push
xchg
sbbb
jnp
sti
xchg
mov
push
test
sub
lahf
out
shll
xor
pop
scas
and
pop
or
popa
ficoml
mov
in
je
add
inc
inc
out
or
aam
subb
aad
movsl
or
pop
dec
jbe
decl
jbe
xchg
out
adc
or
mov
in
ret
push
mov
leave
inc
mov
sbbl
mov
cmpsl
jns
mov
ficoml
push
faddp
stos
or
sub
jmp
jne
lds
jecxz
dec
jg
fcmovne
sub
inc
xchg
jns
cmpsb
cs
mov
dec
xor
aas
test
inc
xchg
inc
push
popa
jnp
and
in
xor
inc
shrb
cmpsb
xlat
ljmp
mov
sbb
in
jbe
mov
mov
xor
push
mov
pushf
xchg
jl
and
add
and
mov
into
jg
rcrl
jb
addr16
mov
outsl
mov
xor
repz
add
pop
xchg
and
inc
dec
xor
add
dec
imul
push
movsl
fsubr
clc
or
fbld
bnd
jb
je
cmc
jle
xchg
daa
fcmove
adc
loopne
jecxz
ja
mov
ret
sbb
sbb
pop
or
loop
leave
push
inc
mov
jnp
adc
mov
dec
and
test
jb
ret
push
inc
sub
adc
mov
sub
stos
cs
andl
mov
loop
aaa
add
movsb
fbld
push
or
and
dec
add
sbb
int
nop
jg
push
mov
add
cmpsl
push
dec
push
movsl
leave
pushf
and
cmp
cli
mov
clc
adcl
loope
insl
add
insl
add
sahf
bound
popf
mov
lret
mov
inc
iret
mov
jb
loop
cmpl
lds
pop
push
push
cs
sbb
pusha
add
push
mov
fistl
pop
mov
push
dec
xchg
jle
cmp
jno
sbb
mov
movsb
test
pop
pop
in
in
push
xlat
outsb
dec
inc
push
adc
push
int3
cs
or
enter
popf
sbb
xor
std
shl
adc
fs
mov
jmp
and
mov
mov
mov
and
popa
jle
nop
cld
cmp
in
mov
nop
insl
inc
inc
inc
cmc
add
loopne
mov
adcb
sbb
in
jns
xor
mov
mov
arpl
sahf
pop
and
cld
dec
lods
add
mov
xchg
cmp
add
dec
pushf
sub
mov
call
mov
sbb
aas
ret
inc
outsb
pop
mov
cmpsb
jecxz
cmp
adc
pop
into
scas
dec
push
dec
jae
inc
insb
fstl
pop
mov
mov
imul
xor
cltd
xchg
xchg
lea
jmp
in
arpl
jp
jno
sbb
xchg
aas
sbb
sbb
push
mov
mov
testl
xchg
loop
inc
fiaddl
cmp
jno
xor
lcall
add
sbb
jp
adc
je
bound
dec
cmp
dec
lea
inc
dec
in
jl
mov
push
inc
push
mov
shrb
lret
out
add
or
adc
outsl
fs
fmuls
aaa
inc
lcall
cmp
fwait
jp
push
fsubl
push
or
fs
ror
popf
dec
mov
popl
mov
aam
mov
repnz
adcl
lea
cmp
fs
push
lret
data16
js
mov
shll
testl
dec
pop
xor
es
push
sub
xlat
lcall
jnp
in
sbb
inc
dec
lcall
cwtl
xchg
add
cmc
dec
cli
xchg
xchg
xor
or
pop
in
jg
xchg
test
add
mov
lahf
jg
gs
mov
mov
mov
xor
std
mov
push
repnz
mov
test
jae
add
shrb
cmp
lods
shrb
xchg
in
sbb
mov
xchg
subl
add
mov
clc
bound
or
lahf
xlat
or
and
sbb
insl
mov
scas
cmpsl
xor
ss
arpl
push
imul
mov
fs
or
lret
mov
jmp
out
push
leave
jp
inc
cwtl
mulb
call
cmp
in
std
cwtl
jmp
clc
jge
nop
lods
cmp
stos
or
or
pop
jecxz
pop
sahf
pop
jae
lea
inc
dec
mov
dec
mov
clc
daa
or
or
out
and
notb
test
imul
xchg
out
add
push
push
adc
adc
or
mov
cmpsl
and
and
jg
adc
mov
xchg
dec
sbb
pop
adc
cmp
lcall
mov
outsb
cmp
bnd
push
xchg
mov
push
imul
mov
hlt
imul
outsl
ja
pop
push
outsb
outsb
dec
xchg
rcll
sbbb
cld
pushl
lock
mov
mov
jbe
cmp
adc
xchg
imul
ret
js
xor
fwait
mov
icebp
and
shll
xchg
sub
fdivrl
xchg
xchg
xor
dec
mov
es
jbe
pusha
dec
arpl
imul
lock
and
das
test
adc
push
or
sbb
fwait
xchg
xlat
add
mov
and
pop
jns
push
jno
sbb
bound
push
lods
xchg
ficoml
mov
jae
push
sbb
icebp
pop
cmpsl
lds
andb
mov
in
dec
xchg
mov
insl
shlb
sbb
pop
cmp
and
push
add
pop
in
ja
push
add
xor
pop
ror
popf
lret
fwait
adc
mov
cmp
shr
mov
out
call
add
int
in
sub
inc
fisttps
sbb
dec
fsubp
mov
notl
mov
aam
imul
sbb
and
enter
repz
fst
push
insb
in
sub
mov
jbe
dec
cmp
fs
mov
lea
mov
aad
inc
inc
cmc
scas
and
sub
xlat
insb
and
cltd
push
int3
lods
or
push
lods
or
inc
dec
mov
sarl
xchg
cld
into
cmpsb
leave
lcall
mov
adc
call
jecxz
sbb
add
int
int3
in
and
daa
fisubs
cmc
out
inc
call
popf
xchg
in
sbb
jg
push
sub
jp
cmp
xchg
mov
inc
mov
jle
nop
mov
mov
cwtl
dec
push
outsl
xor
xchg
cmp
sahf
xor
jl
in
adc
std
inc
dec
leave
push
xor
in
movsb
call
xor
jecxz
movsl
arpl
inc
push
cmp
rorb
adc
push
mov
cmpsl
hlt
cli
fistps
jmp
mov
pop
push
and
cwtl
pop
loopne
sub
std
xchg
adc
into
fisubs
sbb
xchg
loope
jb
jo
mov
mov
loopne
mov
and
xchg
xchg
fmuls
sub
adc
in
pop
shl
stos
jae
and
push
adc
sub
lahf
dec
int3
or
lea
or
xor
movsb
bound
pop
jmp
mov
mov
xchg
cmc
xchg
jnp
xchg
mov
inc
arpl
in
jns
mov
clc
cmpsl
adc
roll
daa
sbb
stos
pop
shlb
add
dec
popf
cld
enter
sbb
inc
sub
mov
xchg
sbb
push
xlat
push
mov
jle
jb
inc
mov
out
lods
cltd
lock
mov
bound
icebp
fimuls
rcr
mov
cltd
lods
test
sbb
xor
or
pop
pop
add
ret
jo
mov
lcall
stos
cmp
mov
mov
xorb
lds
iret
add
fmuls
dec
sbb
mov
subl
fwait
insb
pushf
jae
call
popa
sti
lea
in
int
xchg
mull
fbstp
sbb
or
loop
movsb
cltd
ss
mov
cmp
xor
loopne
nop
or
in
dec
jge
sub
mov
icebp
aam
sub
clc
into
fstpl
jl
push
xchg
sub
and
xorb
jo
jo
or
or
cli
jo
sarb
jl
mov
dec
xchg
pop
or
jmp
mov
sub
cmpsl
aas
loope
loope
js
sbb
std
mov
cmp
pop
mov
mov
sarb
dec
cmp
xchg
inc
cmp
inc
pop
dec
xor
xorb
and
orb
dec
adc
sub
inc
outsl
xor
mov
adc
jne
xchg
add
xlat
or
ret
iret
test
mov
ss
enter
pusha
mov
or
leave
icebp
sub
pop
xor
pop
cmp
gs
ss
clc
repnz
pop
pop
xchg
cmovns
aas
lahf
es
aad
ret
inc
inc
mov
ret
popa
mov
and
test
mov
addl
test
fxch
test
mov
dec
inc
jno
push
das
push
jns
jnp
daa
sub
in
add
leave
xor
xchg
mov
mov
lret
and
or
repnz
int3
shrl
or
add
fistpll
shlb
int3
cld
push
lds
sbb
es
out
call
adc
inc
pop
int3
js
add
sbb
inc
jl
ror
sub
sub
xor
out
daa
enter
dec
mov
add
mov
pop
mov
sbb
dec
mov
lahf
cmp
out
addr16
insb
jp
sub
jns
popa
lret
inc
aad
andl
popa
loop
arpl
mov
sbb
lods
sbb
in
cmp
sbb
insb
arpl
push
cmp
inc
fldl
jg
in
sahf
jl
xchg
test
pop
jbe
test
hlt
fisubs
fdivrs
icebp
test
cwtl
mov
scas
mov
lds
dec
mov
aas
push
xor
rcrl
jle
or
imul
into
add
pop
xor
jne
jg
dec
movsb
sub
roll
xor
mov
scas
call
or
mov
arpl
pop
adc
sti
imull
les
aas
cmc
xchg
data16
adcb
out
xchg
inc
cmp
jo
sub
sarl
or
adc
loop
add
and
mov
fsubrp
adc
pop
xor
addr16
and
ror
mov
xchg
mov
sarl
clc
inc
dec
rorb
in
nop
xchg
or
and
movsl
in
lea
jnp
dec
cwtl
push
dec
push
mov
jecxz
mov
sub
sub
add
push
pop
in
push
ret
pop
push
lock
in
lahf
pop
xor
imul
scas
xchg
push
fs
cmpsl
inc
mov
sub
mov
sti
pop
pop
popa
dec
into
sub
or
dec
hlt
stos
and
push
cmpsb
mov
cmp
pop
out
cmpsb
divl
stc
out
arpl
jg
add
lahf
lds
pushf
gs
gs
pop
fildl
negl
mov
icebp
aam
scas
or
xchg
movsl
lcall
jg
mov
stos
loop
repz
push
sbb
stc
or
orb
dec
dec
and
loope
stos
cmc
cmp
jns
ja
jg
adc
cltd
subb
ffreep
out
mov
in
adc
cli
cltd
sub
mov
test
jg
push
pop
sti
push
outsb
mov
sbb
mov
test
inc
lcall
push
int3
mov
test
dec
xor
inc
pop
in
and
mov
aas
mov
aam
xor
lahf
subb
xor
repz
ja
addr16
or
jp
test
aaa
adc
in
sub
mov
cmp
popa
mov
ljmp
add
jne
ss
add
jp
insl
fwait
out
sub
sub
inc
jg
jle
add
loope
inc
cwtl
sar
lahf
daa
push
mov
mov
imul
scas
inc
mov
push
ret
dec
mov
sahf
mov
push
inc
ds
lahf
iret
jle
sti
das
jno
aad
pop
imul
call
adc
cmp
data16
sub
mov
inc
jmp
orb
testb
sbb
enter
imul
inc
rol
nop
mov
inc
addb
dec
subb
adc
or
mov
out
loop
fldl
sar
fxch
pop
cmpl
or
icebp
push
movsl
pop
mov
mov
mov
mov
stos
sub
sub
jle
xchg
bound
xor
int
inc
sbb
out
cli
push
shl
or
mov
notl
and
test
sbb
int3
xchg
arpl
ret
xchg
jbe
mov
mov
adc
out
cmovle
mov
lea
push
mov
jno
mov
je
cwtl
pushf
int
inc
mov
adcb
sti
cltd
stos
scas
mov
in
mov
out
scas
imul
sbb
pop
rolb
shll
cmp
jno
cmp
rclb
arpl
xchg
mov
iret
lret
jecxz
into
loope
mov
mov
jl
mov
fcomip
imul
pop
cmp
jno
movsl
imul
jbe
fs
testb
insb
mov
pop
adc
test
imul
dec
repnz
pop
push
xlat
push
mov
jle
mov
or
jb
mov
jae
push
sbb
cmc
out
dec
fnsave
adc
adc
nop
dec
pop
jge
push
fisttpl
mov
lods
xchg
push
aam
popa
adc
rcll
mov
das
sar
xchg
cmpsl
sbb
loope
ljmp
push
xor
adc
popa
jl
mov
popf
shll
push
or
cmc
orl
inc
xor
test
mov
lods
mov
mov
aam
sbb
mov
test
mov
or
push
xchg
inc
ljmp
mov
ret
xor
inc
push
je
or
dec
jge
ret
push
xor
and
add
loopne
mov
ficompl
or
movsb
mov
pop
jge
inc
adc
pop
mov
xchg
sub
outsl
fistpl
mov
add
dec
adc
cmp
pushf
lret
aas
push
inc
dec
pushf
jmp
mov
lock
sub
cwtl
loopne
cmpsb
pop
dec
mov
mov
and
out
fs
and
sarb
orl
jnp
imul
adc
dec
insb
cli
xchg
mov
sti
dec
mov
pop
mov
arpl
out
mov
adc
out
jp
outsb
ret
jns
aas
sub
adc
dec
cli
add
pop
and
jno
insl
pusha
jbe
add
frstor
and
outsb
call
iret
add
repz
xor
in
xor
stos
sub
sbb
and
sti
lahf
sbb
add
pop
jge
fstps
add
cmpsl
cs
jge
in
xchg
lret
cwtl
adc
loop
fldt
sub
outsl
gs
mov
iret
rcrl
lret
int3
push
or
add
add
bound
add
bound
mov
xor
pop
test
bound
adc
das
xor
bound
in
adc
xor
int
call
mov
divl
stos
fcompl
sbb
cmp
in
add
jp
dec
push
push
jl
and
mov
sub
cld
insl
in
xor
scas
xor
cmp
push
mov
jl
inc
cmp
cmp
jmp
repnz
mov
sti
jb
cs
push
filds
es
xor
pop
lea
and
int3
mov
jb
rcr
in
push
xchg
push
lret
mov
cmp
xor
push
jle
xchg
lcall
outsb
push
js
xchg
addl
add
push
xchg
stos
push
mov
cmp
popf
in
or
pop
push
mov
enter
cmp
and
and
push
sub
popa
jns
add
add
movsb
negb
dec
inc
roll
cld
jae
fiaddl
adc
icebp
stos
loopne
dec
cmp
stos
flds
mov
mov
mov
pusha
loope
xor
xor
and
out
icebp
cmpsl
cs
scas
sub
mov
jne
jg
insl
dec
mov
sub
add
pop
cmp
pop
lret
xlat
rorl
adc
xchg
sbb
dec
mov
mov
xor
add
repz
adc
push
ds
icebp
adc
int
cmp
movsb
nop
mov
fwait
dec
mov
filds
insb
or
xchg
cmp
pop
lods
rep
ds
cltd
jle
imul
xchg
ljmp
push
inc
xor
push
aas
idivl
cmp
pop
scas
sbb
cmp
insb
pop
fldt
inc
add
loopne
mov
cltd
lahf
xchg
pop
push
int3
mov
daa
movsl
mov
mov
movsb
rcrl
xlat
aam
mov
xchg
pushf
mov
lea
fwait
popa
icebp
dec
sub
jno
mov
mov
jge
cmp
add
pop
loopne
cwtl
pushf
xchg
sub
mov
mov
es
out
fcoms
cmpsl
shlb
test
push
inc
jecxz
mov
div
fadds
stos
adc
lret
movb
pop
cli
mov
jnp
frstor
ss
sbb
jbe
scas
inc
call
jmp
enter
popa
hlt
jp
inc
ret
fidivrl
sub
push
pop
sbb
inc
add
inc
sub
aaa
push
cmp
pop
add
insl
stos
lcall
je
adc
pop
out
mov
stos
loopne
or
xor
add
ret
xchg
insl
sbb
ja
jae
add
pusha
jo
cwtl
push
rcrb
mov
inc
push
xor
mov
mov
mov
cmc
es
xchg
inc
dec
dec
pop
leave
repnz
hlt
std
xchg
inc
push
mov
mov
mov
mov
and
jg
mov
jb
lods
add
add
jno
sub
add
mov
sub
icebp
push
push
popa
xlat
pushf
nop
out
iret
fwait
test
sbb
mov
in
mov
jbe
jne
push
sbb
or
and
sbb
jl
adc
stos
insb
mull
xor
mov
ficoms
jp
mov
fdivr
out
js
lea
or
cmpsl
dec
into
sti
mov
fsubrs
movsb
and
inc
mov
dec
mov
jne
cmp
mov
out
cmp
inc
sbb
shrl
jle
mov
mov
or
lods
es
roll
mov
pop
jmp
push
jno
pop
stos
int
out
pop
je
pop
mov
insl
sbb
pushl
mov
xchg
sbb
lret
pop
adc
lds
fdivr
jo
xor
call
inc
subb
push
sub
fdivrl
xor
add
inc
das
int3
pop
daa
jecxz
arpl
mov
fscale
addr16
lcall
call
pop
fbstp
pop
ror
inc
fisubrl
mov
call
xor
lock
xchg
mov
loopne
pop
inc
cwtl
addr16
and
es
neg
xchg
pop
sbb
scas
aad
cwtl
pop
dec
pop
daa
cs
and
mov
sbb
test
cli
cwtl
aaa
sbb
pop
add
addl
dec
mov
fisubl
pop
push
sti
xor
jno
and
inc
mov
mov
pop
out
sub
dec
sbb
pop
movsl
jg
or
dec
loopne
adcb
dec
stc
sbb
cld
out
lock
mov
sub
dec
adc
or
in
xchg
jle
push
push
out
inc
iret
push
mov
mov
jno
xchg
pop
xchg
jae
call
add
lret
mov
adc
xor
push
neg
xchg
pop
mov
lret
rorl
xor
dec
sahf
or
les
pop
imul
fisubl
pop
loopne
out
loop
mov
mov
ja
sub
mov
ret
cmp
aas
or
adc
mov
jp
sbb
sti
push
outsl
aaa
xchg
outsl
adc
xor
imul
xchg
sub
push
pop
jne
lret
cmp
adcb
cs
daa
std
icebp
and
xchg
js
inc
mov
std
pusha
fisubs
sub
jbe
xor
mov
icebp
sar
xor
push
xor
pop
rcrl
stc
test
mov
lahf
xor
pop
or
out
repz
aam
xor
jb
jle
out
sbb
in
pop
adc
popf
xchg
pop
jo
inc
int
jge
fwait
sbb
add
cmp
das
push
jg
mov
fs
cmpsl
cmpsb
xchg
xchg
xchg
add
push
xor
jo
xchg
int
or
out
add
mov
into
cmp
mov
out
jnp
fwait
in
aad
and
stos
loop
mov
aam
push
push
push
xchg
pop
aas
pusha
xchg
pop
sbbb
jbe
call
aam
sbb
pushf
int
mov
jnp
mov
in
cmp
lea
loopne
dec
je
xchg
sbb
stos
jp
fstps
xor
cld
push
adc
sbb
out
imul
shrl
pusha
or
lods
es
cmp
pop
jle
cmp
out
or
push
sbb
pop
fsubrl
inc
enter
inc
inc
icebp
mov
fisubrs
xchg
roll
clc
rolb
test
loop
cmp
addr16
xor
or
incl
cmp
sbb
ss
cmp
mov
and
push
inc
es
push
test
aam
ss
rclb
dec
cmp
and
test
test
lock
pop
outsb
les
mov
loopne
clc
sub
pop
push
imull
loope
loop
insb
jne
inc
push
jno
stos
stos
pop
jp
inc
aad
fnstcw
dec
mov
mov
mov
subb
subb
dec
iret
mov
mov
mov
fwait
jle
or
sahf
jne
cmp
mov
cmp
iret
ljmp
daa
push
fnstsw
loopne
testl
std
dec
out
mov
jle
mov
mov
sub
stos
roll
jge
icebp
out
pop
shll
dec
pop
imul
rep
mov
ds
arpl
sbb
out
or
lds
and
dec
cmp
test
lret
pop
jle
mov
int3
cmp
bound
jbe
das
jne
fcmovne
mov
sbb
sar
or
repnz
into
and
mov
mov
mov
mov
dec
popa
adc
sar
out
push
das
sti
xchg
icebp
jns
in
pop
ljmp
xlat
jns
adc
jl
negb
fsub
and
and
fstpl
dec
sti
fidivrs
test
sbb
sub
push
push
test
imul
insl
sbb
fstpl
lock
pop
inc
pop
pop
mov
int3
icebp
les
filds
mov
jg
fildl
hlt
rcrb
fiaddl
lret
dec
pop
xorl
dec
inc
mov
push
push
aam
lahf
inc
push
dec
mov
dec
out
dec
xchg
pop
xchg
mov
mov
cmc
inc
add
cmpsb
cwtl
xlat
xlat
mov
mov
xor
xchg
add
ljmp
inc
lahf
mov
cmp
xchg
lods
lret
mov
lea
mov
xchg
pop
in
pop
clc
pop
andl
inc
pop
mov
or
fisttpll
sbb
sbbb
push
inc
xchg
jecxz
cs
aaa
dec
sti
fimuls
incb
xchg
shlb
mov
cli
pop
mov
mov
in
or
push
cmp
pop
dec
adc
loope
push
sbb
stc
orl
aam
mov
mov
popf
jecxz
jnp
inc
and
pop
mov
test
jge
push
mov
push
or
add
mov
sti
orb
in
or
sub
add
lahf
jl
xchg
or
inc
lret
sti
in
ja
addr16
add
dec
add
mov
aaa
sbbl
test
fs
push
xchg
sbb
dec
sbb
mov
jns
jg
mov
and
fwait
adc
jg
mov
adc
int
into
add
adc
in
dec
stc
jmp
out
push
or
jmp
in
mov
scas
xor
pop
stos
popf
push
inc
mov
out
imul
pop
mov
pop
push
and
inc
push
out
and
dec
sbb
popa
mov
int3
pop
xor
inc
sub
inc
push
outsl
push
nop
inc
jg
jl
mov
sti
jae
or
adc
jb
fisubrs
cwtl
add
or
pop
fucomp
outsb
mov
test
int
and
jbe
divl
sub
mov
sub
inc
push
push
xlat
push
mov
push
movsb
pop
dec
pop
fimull
test
mov
repnz
sbb
or
sub
xchg
push
loopne
xor
mov
std
sub
enter
in
jo
leave
pushf
ljmp
das
ret
in
bound
jne
push
fs
inc
xchg
add
mov
dec
int
data16
outsb
cmpsb
or
imul
xchg
jecxz
sbbb
outsl
out
push
mov
aam
in
xchg
test
or
add
loope
xor
arpl
mov
cmp
or
xchg
insl
adc
adc
ret
xchg
popa
pop
push
enter
jle
out
test
or
lds
popf
mov
mov
fs
in
adc
insl
sbbb
adc
bound
jmp
adc
adc
xchg
out
mov
add
lods
cltd
test
inc
int3
or
cmp
sbb
sub
inc
loopne
and
outsb
dec
aam
adc
ret
sbb
jne
mov
xorb
xchg
pop
lea
cmp
les
or
lahf
fiadds
inc
outsb
repnz
out
add
movsl
dec
jnp
mov
inc
jne
cwtl
mov
mov
jmp
cmc
push
sub
cmp
js
xor
sub
mov
nop
mov
call
add
hlt
mov
roll
stos
in
sti
jo
dec
xchg
cli
adc
or
push
movsb
xor
inc
icebp
mov
out
adcl
adc
das
mull
leave
enter
push
mov
mov
mov
fisttpll
daa
notb
mov
jmp
fsub
sub
enter
sbb
aas
xor
mov
iret
or
mov
gs
push
in
push
mov
mov
mov
xorb
dec
inc
pop
mov
stos
cmp
add
xchg
sbb
out
mov
int
push
gs
cmp
jecxz
dec
lea
mov
es
pop
outsl
test
inc
sbb
int3
cwtl
movsb
outsb
ds
loopne
dec
scas
shlb
leave
push
sbb
shlb
xchg
adc
rorl
in
push
fisubl
xchg
jnp
addr16
movsb
push
das
mov
push
dec
iret
test
mov
ljmp
in
and
pop
out
stos
and
jne
dec
adc
sbb
push
sbb
xchg
icebp
cmpsb
ret
or
mov
lods
in
lea
lcall
into
in
pop
scas
rcl
xor
jecxz
xchg
int
push
mov
jg
pop
dec
cmpb
xorb
inc
pop
pop
cmc
out
jae
push
adc
and
sub
in
pop
int3
push
jle
xor
sbb
jp
inc
addr16
jbe
popf
pusha
imul
test
jmp
bound
daa
inc
lcall
push
push
lods
mov
or
inc
outsb
enter
in
insw
mov
xor
je
imul
add
sbb
scas
xor
mov
jbe
jbe
pop
xchg
adc
int
pop
call
lret
mov
xor
mov
nop
inc
xlat
lods
lcall
sub
jnp
dec
lret
scas
dec
out
push
fs
addr16
xor
xchg
mov
pop
loopne
adc
mov
and
test
jmp
sti
pop
popf
insb
cwtl
cmp
bound
aad
mov
and
es
push
testl
xor
ss
sbb
jle
and
sets
dec
push
into
jno
sahf
xor
or
fdivp
test
loopne
sbb
mov
xchg
arpl
cmp
jle
push
cmp
xor
outsb
add
adc
adc
scas
jle
fldcw
cmp
push
add
stos
stos
cli
push
xchg
je
push
lods
out
jmp
mov
popa
sbb
in
outsb
adcl
movsb
mov
or
or
mov
enter
bound
dec
xor
stos
fucomi
push
je
inc
repz
and
inc
xchg
sub
jo
cmp
or
out
es
test
popf
jp
fcoms
mov
stos
sub
cmp
cmp
lret
fiadds
adc
lea
sarl
clc
push
out
pop
lret
inc
into
mov
xorl
sub
pop
mov
jle
or
out
ret
inc
inc
push
jg
test
xor
clc
roll
daa
cmp
das
stos
sbb
inc
jmp
xlat
rol
test
test
repnz
or
cmc
sbb
sbb
bound
mov
sbb
xor
mov
sbb
lret
inc
mov
add
xlat
add
arpl
clc
jg
mov
fwait
cli
sbb
mov
add
hlt
das
jne
cld
out
into
cld
fs
mov
outsl
outsl
xlat
outsb
sbb
fdivs
ljmp
imul
jns
pop
inc
sbb
lret
das
test
xchg
push
push
out
pop
or
dec
lock
into
dec
test
pop
lahf
fwait
fwait
inc
les
inc
push
ret
sub
sbb
mov
scas
test
pop
inc
gs
rol
jp
jmp
mov
xchg
add
ljmp
outsl
mov
mov
mov
in
data16
pop
push
xchg
mov
cmp
mov
adc
xchg
inc
xchg
pushf
add
in
out
stc
jecxz
xchg
mov
jmp
fchs
dec
xor
test
jb
jg
jmp
insb
and
or
and
push
lock
stc
loope
aad
fwait
or
dec
sbb
push
mov
aam
ror
pusha
repnz
rcrb
pop
cmp
out
push
rclb
cmp
mov
mov
dec
gs
mov
loopne
sahf
mov
icebp
loope
bound
pop
notl
rcr
cmp
lret
in
mov
jo
lods
mov
in
ret
test
and
xor
pop
pop
mov
jp
push
insl
or
frstor
jge
push
outsl
jae
out
push
les
xor
fdivl
mov
ljmp
and
aas
cmpl
lahf
or
xor
pushf
mov
lea
mov
stos
adc
lret
mov
out
push
loopne
lods
xchg
repnz
les
lret
leave
sub
jecxz
rorb
mov
jge
popl
jb
xlat
ljmp
sub
mov
stc
mov
roll
lcall
jl
inc
xchg
std
fiadds
mov
mov
jbe
xchg
dec
or
dec
clc
mov
or
bnd
jns
sub
and
and
or
in
imul
mov
pop
into
ret
jo
jp
cmc
scas
fisubrl
push
imul
cmp
lcall
cmp
stos
xchg
dec
jge
insb
test
mov
sbb
push
aas
push
repnz
pop
fs
xor
je
cmp
in
mov
pop
sti
je
and
insb
lret
icebp
xchg
es
fdiv
mov
jge
inc
push
fisttpll
push
sub
inc
jnp
lods
dec
add
fcoms
mov
pop
stc
aam
jae
pop
dec
fbld
movl
lods
xor
xor
and
enter
leave
mov
and
ret
push
aam
inc
dec
out
jge
or
push
push
int
jb
out
std
fmuls
fbstp
out
dec
testl
daa
adc
sbb
mov
pop
pop
pop
js
adc
jae
push
daa
and
pusha
xchg
jno
std
or
mov
dec
sub
in
into
rclb
inc
lock
pop
stos
cmpsb
mov
aam
in
xchg
cmp
add
cmp
cmc
hlt
rorl
jle
mov
daa
xchg
in
pushl
adc
fdivr
cmp
fistl
cmp
pop
mov
pop
int
std
sbb
or
fs
sbb
lods
add
xor
jg
xor
mov
pop
xchg
and
jo
loopne
xor
adc
mov
push
mov
in
xchg
push
popf
movsb
push
cwtl
pusha
mov
lcall
mov
xlat
bound
lods
popf
cmovbe
fbld
adc
ljmp
and
push
sbb
repnz
lods
xchg
cmp
cltd
sbb
fisubrs
js
int3
push
mov
sub
jbe
push
clc
test
add
sbb
mov
add
imul
fs
test
fiaddl
inc
fs
imul
out
inc
loope
test
fwait
lods
mov
gs
or
sti
jmp
sbb
mov
sub
cmp
popa
push
cwtl
pushf
cmc
in
mov
mov
ss
lods
dec
xchg
int
stos
jbe
mov
jmp
mov
je
add
out
fstpl
outsb
loop
inc
jo
sub
mov
scas
and
data16
fists
rolb
nop
mov
mov
sbb
std
sub
into
jne
test
imul
imul
in
dec
out
jle
mov
hlt
jmp
mov
in
cmc
dec
xchg
lock
mov
les
push
sahf
xor
stos
and
mov
add
sahf
mov
xchg
mov
dec
dec
push
xlat
adc
mov
push
fistpll
aaa
sub
cmp
cmp
mov
push
push
and
cld
push
push
jmp
jae
push
in
jb
ret
push
std
outsl
jmp
adc
enter
mov
pop
imul
jg
loopne
sahf
jecxz
lods
xor
imul
and
mov
cli
cmp
fs
push
cltd
aad
shll
insl
in
and
jo
out
dec
or
mov
cwtl
and
ret
pop
push
mov
jle
sti
jne
ljmp
fstl
mov
aas
mov
stos
jae
es
cmp
imul
sub
inc
rorb
or
in
add
xchg
fldt
fistps
push
jle
cmp
out
mov
add
sub
mov
mov
lcall
out
inc
xchg
push
cmp
fldl
das
pop
jbe
pop
inc
mov
xlat
call
push
inc
pop
inc
mov
sbb
rorl
push
fisubl
xchg
dec
test
cmpsl
xchg
in
mov
jmp
shrl
outsb
xor
test
xor
adc
push
rorl
imul
mov
repz
add
sub
xchg
mov
cmp
adc
pushf
pop
rorb
lahf
aas
adc
xor
adc
inc
pop
and
nop
in
addr16
jmp
xchg
fidivs
add
loop
cs
push
loop
fwait
mov
xchg
cmp
sbb
mov
pop
xor
cmp
dec
daa
mov
stc
xchg
cmpsl
movsb
loopne
stos
andl
icebp
pop
scas
adc
ficompl
mov
pop
repz
lret
xchg
xor
mov
mov
mov
inc
mov
mov
inc
ja
or
mov
test
mov
cld
jp,pn
jmp
stos
js
inc
cli
sub
hlt
movsl
pop
in
push
add
fisttps
sbb
ss
in
and
lock
ret
ds
mull
mov
sbb
divl
sub
xchg
cmpsl
mov
int3
add
xor
bound
xchg
stos
jl
aam
ret
inc
push
popl
lret
mov
mov
inc
test
and
mov
out
jmp
popa
aaa
xchg
aaa
mov
mov
ljmp
cwtl
inc
push
sahf
xor
hlt
shll
fdivrs
data16
cwtl
scas
sub
pop
xor
cmp
sub
jp
push
adc
adc
adc
adc
pop
stos
test
das
sbb
in
mov
xchg
sbb
loop
data16
out
add
das
mov
push
pop
add
loope
cmpsl
outsb
dec
mov
sbb
mov
jl
adc
jge
or
jnp
pop
pop
inc
xor
mov
adc
test
lcall
ret
inc
pop
int3
dec
in
add
ror
cld
inc
pop
pop
fsubl
sbb
add
test
sbb
adc
iret
out
add
push
xor
push
fldcw
cmpb
inc
in
inc
into
aad
mov
les
and
cmp
aad
add
incb
dec
xor
sub
add
mov
mov
jg
pop
and
cmpsb
jb
ss
mov
addr16
lret
or
cli
addl
push
lds
mov
xchg
into
loopne
stos
cmpsl
mov
sahf
add
xor
mov
std
adc
jge
sub
les
orl
adc
les
ja
cmp
xor
mov
testl
popf
or
dec
xor
aad
fstpt
xor
and
inc
mov
push
pop
movsl
mov
or
push
mov
cmp
push
push
mov
xchg
add
sbb
rolb
mov
scas
mov
js
roll
adc
mov
sub
fstpt
pop
xor
and
sub
cmp
mov
xchg
rcr
cld
dec
adc
mov
push
xchg
loope
pop
pushf
lret
jae
loope
lods
subl
jnp
arpl
stos
sbb
dec
call
cmp
sahf
cmp
add
rorl
jo
int3
faddl
mov
lahf
jnp
mov
xor
pusha
in
int
out
cmp
mov
sub
push
push
add
icebp
jnp
xor
roll
pop
jne
push
sub
hlt
cld
data16
jle
cmp
bnd
fwait
cmp
in
push
movsb
xchg
stc
imull
mov
addr16
out
mov
in
dec
add
imull
xchg
lods
fdecstp
outsb
cld
inc
add
mov
das
dec
cld
adc
cwtl
xor
sbb
es
xchg
mov
mov
pop
movsb
mov
mov
sbb
xor
lcall
adc
pop
mov
xchg
pushl
popf
inc
cmp
dec
shlb
out
lods
cltd
xchg
jge
pop
test
push
mov
mov
pusha
cltd
push
sti
in
insl
daa
inc
inc
jno
cwtl
test
hlt
dec
lock
cmpsl
pop
cmp
sti
pop
int3
into
mov
jmp
jmp
add
repnz
sub
dec
or
inc
cwtl
test
fsubr
test
ret
mov
cmpsb
into
rcrl
mov
and
aam
out
and
and
sbb
pop
xor
jo
or
pop
push
xchg
leave
mov
dec
sbb
in
daa
push
cld
aam
mov
cmp
adcb
jecxz
cli
in
sub
lcall
lcall
sbb
sbb
outsb
cmp
test
pop
mov
imul
movsb
es
in
inc
int
pop
mov
repnz
xor
mov
and
cmc
aam
test
add
orb
imul
xlat
add
inc
lock
add
aad
mov
push
fchs
cmc
shlb
and
push
aas
xorb
rorb
add
mov
in
nop
cmp
mov
addl
push
sub
nop
push
movsl
mov
pop
xchg
loopne
mov
enter
xchg
loop
xchg
mov
sbb
push
pop
hlt
pop
frstor
fmull
cmp
shrb
mov
in
leave
ss
inc
scas
push
pop
mov
test
jmp
shll
xor
push
cmp
sbbl
imul
jmp
push
pop
adc
bound
dec
ret
shrl
inc
xor
add
loop
dec
aaa
bound
stc
jge
inc
aaa
cmp
and
in
cmc
lahf
add
mov
loop
fldt
je
adc
bound
jecxz
push
cmpsl
xchg
pushf
test
sub
filds
sub
pusha
pop
inc
mov
mov
shlb
ficomps
stos
dec
ret
pop
mov
adc
cli
movsb
pop
inc
pop
push
or
pop
and
fdivrl
or
lret
ret
pop
popf
lret
mov
inc
stos
mov
loope
addb
daa
movsl
sbb
dec
shrb
pop
mov
pop
rcll
int3
mov
fcmove
repnz
mov
or
mov
stos
mov
mov
test
fists
roll
jmp
mov
cmp
push
repnz
push
je
mull
scas
xor
das
sbb
sbb
dec
sub
adc
push
outsl
or
ljmp
adc
push
lcall
loop
imul
xchg
or
sub
vmwrite
xor
fdivr
lret
xor
popf
or
mov
dec
call
xchg
pop
mov
or
cltd
loop
xor
adc
outsb
cmpsb
std
xor
aaa
jbe
inc
bound
leave
sub
or
fnsetpm(287
jmp
cmp
sub
test
dec
and
fdivl
cmpsb
in
mov
xor
mov
lcall
adc
nop
inc
mov
jo
cs
test
hlt
push
dec
stos
adc
outsb
repz
out
cld
repz
mov
mov
hlt
pop
fisubrl
inc
sub
jbe
pop
xchg
inc
andl
jb
dec
sub
jle
out
leave
ret
xor
mov
add
icebp
pop
aam
js
in
xchg
sti
cmp
cmc
punpckhwd
or
jno
pop
mov
loop
pusha
aad
mov
jmp
xor
jmp
jb
les
sub
push
lods
into
sbb
in
cmc
sbb
in
and
pop
cmpsl
je
shlb
bswap
inc
inc
inc
sahf
jg
test
lock
mov
fwait
jnp
lahf
pop
gs
push
fs
ds
stos
test
bound
or
and
jne
imul
xor
dec
cmc
mov
adc
push
dec
bound
xor
jnp
nop
shl
fbstp
ret
dec
dec
divb
cmp
push
stos
jle
mov
mov
push
stos
out
fwait
enter
cmc
insl
adc
mov
out
dec
ljmp
push
pop
jnp
mov
stos
scas
inc
cmp
arpl
mov
jp
pusha
jns
lahf
addl
pop
inc
ud1
inc
adcl
les
mov
sub
sbbb
or
aad
and
mov
or
lods
pop
sub
mov
or
mull
dec
das
lahf
and
ss
scas
sbb
popa
repz
movsb
push
add
cld
xchg
popa
dec
sub
sub
adc
movsl
lahf
enter
mov
xchg
repnz
cmovs
es
cmp
cmp
sbb
les
mov
cmp
sub
ljmp
stos
gs
xchg
es
or
lret
movsl
stos
xchg
xchg
sbbb
mov
repnz
xchg
xor
es
inc
cwtl
out
lcall
add
pop
mov
daa
movsl
jne
popf
inc
test
push
fisttpll
repz
mov
xor
jle
lods
pop
mov
loopne
leave
sbb
outsb
out
dec
and
add
xchg
mov
cmp
jecxz
xchg
hlt
xor
push
xchg
mov
pop
arpl
xchg
out
jne
bound
outsl
popf
push
fcoms
fnsave
out
je
adc
jae
test
dec
scas
sarl
stos
lea
jg
fnstsw
test
ftst
aaa
dec
xor
rorl
lret
xor
sub
inc
xor
fs
test
xchg
push
dec
iret
pop
add
loope
cmpsl
sahf
aad
push
jne
fidivs
movsl
loope
mov
dec
aad
test
pop
push
inc
cld
pop
into
or
outsl
push
out
scas
mov
mov
push
or
mov
je
and
jmp
mov
test
sar
in
dec
jnp
jmp
js
xchg
loope
push
jns
fstps
mov
rcrl
cld
adc
sub
mov
cmpsl
push
in
adcl
push
or
mov
faddl
scas
mov
cmovns
push
mov
add
ds
ret
jg
aad
es
and
xchg
and
xor
sahf
mov
jl
add
dec
incb
test
addr16
pusha
pop
cmp
mov
mov
scas
lcall
fisttpl
ljmp
js
pushf
and
mov
xchg
dec
mov
repz
cmc
ja
cli
movsb
enter
imulb
push
mov
inc
bound
xchg
int
mov
cmpsb
add
mov
scas
inc
push
pop
imul
mov
stos
clc
ja
arpl
mov
call
mov
adc
imul
cmp
cmp
pop
cmp
mov
jl
push
cmp
aad
fldt
arpl
arpl
pop
hlt
xchg
imul
jl
push
mov
movsl
mov
mov
aas
push
mov
fsubs
pop
or
xchg
xchg
popa
scas
sahf
pop
bound
adc
push
mov
addr16
jae
mov
cwtl
jl
add
mov
mov
fidivl
je
ja
xor
test
xchg
sbb
adc
rcl
sub
std
jns
push
out
jns
loopne
mov
fstpt
aad
jecxz
cmp
push
hlt
int
add
xor
xor
bound
in
out
mov
das
hlt
or
mov
push
jbe
int3
movsl
lea
sub
cld
inc
outsb
xchg
sahf
fs
lods
dec
addb
adc
ret
mov
jb
xor
push
dec
sbb
dec
mov
adc
xchg
sbb
inc
test
pop
or
rcrl
test
push
call
inc
or
mov
les
dec
cli
rcrb
sti
xor
sub
rorl
mov
push
in
popf
rcl
jecxz
dec
xchg
push
and
jbe
jne
pop
inc
push
pop
and
loopne
daa
sbb
cli
out
in
xchg
aaa
cmp
pop
cmp
fmuls
icebp
cmc
cwtl
add
ret
out
jl
pop
inc
lcall
mov
test
rcl
adc
mov
jnp
push
ret
int3
std
popf
hlt
testl
lods
mov
dec
xchg
out
shrb
push
repnz
pop
mov
sahf
adc
gs
xchg
insl
xchg
inc
sbb
jne
fidivs
add
cmp
or
xchg
inc
mov
fucomp
ret
pop
mov
push
scas
rorb
call
xchg
cmpsl
inc
cltd
insl
jbe
cmp
iret
push
pop
cmp
jge
sub
jo
xchg
ss
ret
ret
aad
sbb
jne
gs
pop
jb
push
lock
fstl
pop
sarb
popa
int3
outsl
jg
adc
and
inc
nop
pop
cld
mov
movsl
cmpsl
testl
cld
call
inc
mov
xorl
ss
test
mov
push
cmpsb
push
dec
pusha
adc
xor
movsb
cwtl
fnstcw
popf
push
movsb
sub
pop
jecxz
inc
xchg
mov
mov
jbe
mov
mov
xchg
shlb
adc
push
pop
in
popf
or
lds
sbb
adc
inc
inc
shrl
ja
pop
popf
fidivrl
int3
xor
stos
imul
out
adc
cmp
cwtl
xchg
notb
xor
push
mov
sub
mov
cmpsl
gs
fisttpl
fmull
insl
add
adc
pop
sahf
fistps
imul
mov
cwtl
push
rolb
aam
mov
or
mov
lahf
adc
sub
xor
push
sub
add
ss
xchg
mov
jno
jecxz
xchg
xchg
lahf
sbb
mov
and
adc
mov
jecxz
mov
out
push
mov
push
adc
scas
jne
outsb
push
test
inc
push
jae
cmpsb
cmp
mov
add
fwait
pusha
test
or
std
testb
or
mov
mov
test
sbb
push
or
popf
and
orb
test
push
cmp
sbb
mov
ss
mov
cmp
sti
loop
mov
and
pop
push
jo
fdivrp
and
add
ret
cmp
cmp
pop
ja
fs
jmp
sahf
repz
in
jne
xor
mov
mov
add
lcall
out
ja
adc
cld
jno
lods
hlt
imul
sbb
xor
movb
xor
jp
xchg
xor
adc
or
int3
bound
add
dec
push
divl
xchg
sbbl
adc
stc
fldl
dec
xor
xchg
bound
cmpsl
test
add
in
pop
or
and
inc
dec
dec
rorl
pushf
andb
dec
les
mov
inc
lret
outsl
jnp
lods
test
dec
test
adc
inc
xlat
sbb
jge
dec
mov
jno
sbb
push
push
cld
in
ss
in
ja
push
mov
gs
adc
mov
or
cs
iret
lods
cmc
mov
es
mov
or
insl
popa
cmp
xlat
inc
or
mov
mov
mov
jno
pop
ficoml
out
dec
iret
mov
pop
push
and
pop
pushf
movsb
mov
sub
in
std
stc
ss
sahf
in
outsb
mov
jno
int3
inc
lock
in
sub
cmp
adc
aad
das
add
std
xor
add
or
cs
sbb
sbb
mov
les
inc
inc
inc
rorb
mov
jmp
xor
cld
mov
cmp
and
push
scas
test
inc
push
stos
fs
pop
xchg
in
xorb
mov
add
ficomps
push
dec
int3
mov
imul
ljmp
inc
sahf
jl
xchg
push
mov
mov
sbb
inc
xor
push
movsl
cwtl
xor
fdivp
pusha
cmc
xor
scas
mov
mov
xchg
fmuls
ret
push
vmwrite
les
int
shrl
mov
jae,pt
push
call
add
jmp
inc
mov
fwait
repnz
adc
daa
cltd
rcrl
cmp
add
xchg
xchg
das
das
and
jge
push
iret
cmp
xor
dec
xchg
jb
jb
and
movsl
dec
cmp
pop
add
pusha
cmc
js
mov
jno
mov
aam
sbb
leave
push
nop
cmpb
bound
adc
dec
mov
ja
mov
dec
push
ret
dec
xor
fbstp
int
andl
sub
adc
sbb
xor
mov
lret
mov
fs
add
pop
jnp
lcall
mov
or
xchg
sbb
mov
dec
daa
int
and
rcrl
imul
mov
add
and
mov
lds
ror
out
lret
addr16
sbb
pop
mov
outsb
movsb
jp
push
jmp
les
bound
js
cmpsb
sub
mov
rcll
xchg
aam
mov
ret
adc
enter
sarb
sub
repz
xor
nop
xchg
and
jmp
daa
and
leave
imul
mov
lods
inc
jno
mov
popf
sbb
cmp
pusha
ljmp
stos
sbb
mov
add
pop
rclb
xchg
filds
cltd
sbb
mov
cwtl
pop
ljmp
mov
mov
aaa
fs
cmp
out
mov
inc
inc
fs
inc
clc
ror
stc
push
lcall
push
push
sbb
and
jle
or
addb
xor
pop
xchg
dec
mov
nop
sub
xor
stos
add
imul
dec
fildl
or
sbb
mov
sub
adc
rcll
adc
xchg
aaa
ret
cmp
jecxz
jecxz
in
cmp
inc
add
lods
sbb
in
adc
fisubrl
rcrb
test
jle
sub
inc
imulb
sbb
inc
dec
imul
dec
add
in
sqrtps
leave
mov
xor
jne
mov
repz
lea
out
sub
arpl
mov
push
xor
insl
test
xchg
scas
mov
mov
jne
xchg
sbb
or
xchg
mov
xchg
sbb
data16
sbb
fwait
adc
scas
jno
imul
fbstp
mov
cmp
push
push
lods
xchg
inc
clc
sbb
outsl
xor
cmpsb
add
rol
arpl
jecxz
mov
lock
loope
daa
mov
xor
rcll
inc
mov
xchg
sub
push
inc
xchg
dec
scas
or
inc
push
ret
popa
push
or
pop
movsb
icebp
or
pop
xor
inc
cwtl
or
jle
aad
xchg
xchg
push
xchg
sbb
lods
pop
and
push
aas
popf
subb
sub
xorl
jl
mov
ret
mov
mov
cmc
push
xor
lcall
loope
push
dec
shrb
adc
mov
fimuls
mov
fcmovbe
pop
cmpsb
push
fwait
jg
int3
cmp
lds
cwtl
xor
adc
inc
dec
addr16
adc
cmpb
sub
add
dec
xchg
hlt
pop
cmp
into
bound
rclb
jns
sub
add
hlt
mov
push
push
xchg
ret
or
setg
shlb
cmp
lds
mov
jb
ret
mov
enter
mov
test
and
clc
test
dec
mov
in
sbb
movsb
or
ljmp
nop
in
sub
mov
mov
mov
jg
sbb
lcall
out
pop
adc
mov
dec
push
mov
mov
mov
pop
add
fld1
into
push
fldpi
in
cmc
dec
sbb
adc
adc
push
push
not
lea
scas
enter
sbb
xacquire
cmp
sbb
mov
pop
mov
ljmp
enter
ret
mov
loopne
imul
in
movsl
shll
cmp
jg
stos
ficompl
pop
shlb
in
xchg
mov
test
stos
repnz
jne
add
daa
adc
dec
xlat
fnsave
inc
sbb
push
mov
ds
jmp
xchg
jbe
mov
imull
pop
xor
dec
inc
cwtl
add
sbb
cmp
xor
pushf
lods
in
cmpsb
or
pop
lahf
mov
inc
sbb
rcrl
shrb
testl
call
xor
mov
insb
jl
xor
arpl
xchg
jge
xor
inc
pop
adc
cltd
int
xchg
jbe
add
push
insl
fisubs
into
pop
and
into
stos
mov
lret
in
mov
cwtl
sbbl
xchg
lods
mov
fwait
mov
cmc
mov
fnstcw
jg
mov
and
mov
sub
and
fcmovb
sahf
pop
mov
mov
add
xchg
mov
cmp
je
mov
rcr
pushf
xlat
pusha
popa
inc
dec
jnp
push
gs
shlb
fwait
aaa
xchg
xchg
rol
aaa
push
adc
and
rorl
fbstp
popa
jl
adc
cmp
jnp
mov
mov
jecxz
xchg
xchg
mov
test
enter
xchg
and
pusha
rcr
or
push
mov
inc
fcmovnb
push
stos
pop
mov
add
sbb
pushf
or
lret
add
es
std
and
mov
push
push
cmpsl
mov
push
and
push
jg
sahf
pop
mov
mov
cmc
mov
imul
movsb
loopne
fwait
cld
ret
jp
mov
mov
andb
push
mov
lret
pop
dec
cmpsl
cmc
mov
movsb
jb
lahf
out
xor
call
bound
adc
xchg
push
test
sar
inc
subl
xor
sbb
jns
dec
mov
fisubs
out
fs
cmpl
icebp
and
mov
mov
sub
icebp
and
lods
mov
mov
push
in
pop
test
subl
lcall
dec
or
push
mov
movsb
push
jmp
push
xor
add
adcl
jbe
mov
jmp
and
in
add
xchg
lods
and
and
ss
add
dec
fwait
ja
xor
lds
nop
popa
sub
icebp
mov
sub
push
xchg
cmp
sub
jns
add
mov
add
inc
in
in
gs
dec
xchg
ds
xchg
addr16
icebp
lods
add
and
fnstsw
test
fwait
dec
jae
cmpsl
mov
xor
flds
cld
pop
xchg
jl
lret
out
jnp
mov
push
jnp
pop
fwait
cli
hlt
or
xchg
inc
jbe
push
rcrb
cmp
mov
daa
aam
test
mov
cmp
rclb
sub
imul
fnclex
mov
xchg
repnz
sub
xorl
lock
jmp
sbb
mov
out
jno
stos
sub
dec
popf
sbb
in
scas
lcall
mov
pop
sbb
mov
fs
xor
aam
andb
dec
push
push
enter
mov
sub
mov
cld
mov
mov
fstpl
sbb
xchg
xchg
js
xchg
adc
mov
mov
in
in
mov
xchg
mov
mov
cwtl
cmpsl
dec
jp
clc
mov
cmpsb
aam
ror
jmp
pop
mov
jp
std
lods
hlt
mov
data16
ss
jge
sbb
mov
mov
fcoml
imul
pusha
jecxz
mov
int3
inc
mov
shlb
xchg
fadd
fwait
cld
push
cmpsl
pop
mov
out
test
das
jmp
mov
or
pop
repz
inc
xor
xor
mov
xor
das
xor
sub
ret
cmpsb
sub
icebp
push
fistps
jmp
and
sbb
inc
push
jge
lods
jl
fdivrl
in
pop
adc
mov
mov
jb
jae
mov
in
inc
xchg
pop
push
int
loop
leave
out
mov
out
lock
cmp
sub
mov
nop
mov
or
out
sahf
int3
cltd
xchg
inc
outsl
loopne
mov
scas
jle
mov
push
cmc
inc
dec
mov
push
xchg
repz
imul
mov
push
mov
and
inc
aam
xor
out
add
jmp
push
into
push
jo
mov
in
loopne
data16
addl
clc
fidivrs
sarl
out
adcl
cmp
push
in
fsubp
stos
rcrl
xchg
push
jl
outsl
jmp
jb
lods
jns
pop
dec
js
jb
xchg
in
add
add
or
lods
xchg
les
add
cwtl
pop
and
das
or
jecxz
or
pop
bound
pop
xchg
into
stos
cmp
flds
adc
sub
out
adc
xor
mov
push
mov
push
mov
stos
push
xchg
movsl
lahf
dec
loopne
adc
andl
pop
xchg
gs
std
fnsave
mov
ror
mov
push
pop
or
aas
leave
inc
outsl
movsb
xchg
or
mov
aaa
xlat
add
pop
scas
mov
enter
mov
enter
pop
pop
pop
ljmp
in
xor
and
mov
add
pop
sub
ds
call
clc
ds
mov
cltd
test
ret
into
out
mov
je
mov
test
mov
adc
roll
shll
xchg
jmp
add
sbb
dec
cmp
ret
movsb
mov
loop
cmp
push
pop
mov
add
and
cmp
pop
mov
push
sub
int3
popf
frstor
std
rcll
add
add
sahf
cmp
arpl
je
lret
mov
push
jbe
ljmp
xchg
mov
push
mov
ficompl
mov
jmp
push
loopne
out
pop
push
adcb
enter
push
dec
mov
cld
sbb
push
dec
loope
push
cwtl
popf
outsl
ficoml
ret
sbb
push
sbb
or
push
push
js
repnz
mov
sbbb
int3
and
sub
dec
lock
enter
and
pop
cmp
push
cmp
mov
andb
add
jmp
cmp
ficomps
mov
or
inc
dec
movsb
repnz
push
scas
sub
mov
pop
ds
push
shr
scas
insb
shlb
std
shlb
lock
sbb
mov
sahf
insb
scas
ds
xchg
lea
adc
fmuls
mov
repnz
fwait
mov
jge
sbb
outsb
in
sti
xchg
sub
pop
test
mov
push
das
out
loope
sub
lods
adcl
sub
addr16
rcll
inc
rcr
ss
push
sub
and
add
cld
mov
leave
loop
dec
sub
leave
cmpl
xchg
push
pop
mov
test
mov
mov
xchg
jnp
push
shr
enter
add
fisubs
xor
inc
pop
cli
movsl
pop
inc
test
inc
mov
subb
call
pop
in
mov
into
pop
mov
push
sbb
je
inc
fsubs
and
add
movsl
pop
xlat
popf
testb
insl
call
lcall
decl
popl
jb
cmp
aas
insl
pop
mov
and
dec
push
jns
jae
jp
push
lea
or
xchg
cwtl
insl
pop
lods
and
sti
jo
and
cs
icebp
insb
cmpsb
fs
mov
xor
shlb
call
icebp
int3
fstl
das
pushf
mov
dec
fbld
push
ss
arpl
or
cmpsl
fisttpll
xchg
jb
xor
and
sub
adc
ret
jno
mov
or
movsl
dec
jecxz
xor
fdivl
fwait
scas
fadds
sbb
jg
jg
or
push
mov
mov
stos
ss
adc
jno
xchg
lahf
push
movsb
mov
pop
cltd
loope
add
and
add
jne
mov
lret
jmp
mov
inc
mov
iret
dec
movsb
mov
fisubs
jmp
pop
stos
out
icebp
fsubs
inc
push
xor
lahf
lods
xchg
push
cmp
inc
add
push
ja
std
inc
hlt
push
test
inc
pusha
xchg
mov
inc
pop
pop
roll
add
push
cmpsl
loopne
daa
fcompl
adc
xchg
sub
popa
xor
adc
lock
add
jl
pop
movsl
sbb
and
xchg
lret
jb
scas
je
cmp
or
mov
jbe
and
and
xchg
jo
cmc
mov
lahf
dec
scas
daa
cwtl
sbb
icebp
sbb
outsl
lcall
inc
shrb
sub
jle
mov
jg
imul
or
xor
in
pop
int3
dec
jae
aam
faddp
daa
cmp
call
lock
xchg
pushf
push
ror
ret
int3
push
std
dec
add
out
pop
movsb
jmp
outsl
mov
jle
adc
lret
add
pop
test
insb
mov
inc
data16
lahf
xchg
jl
pop
adc
inc
pop
xchg
mov
test
and
iret
sahf
cmpsl
pop
add
loop
pusha
cmp
test
push
pop
in
lcall
int
lods
and
cmp
fildll
test
jecxz
out
loope
in
mov
dec
inc
cmc
jl
sub
push
inc
mov
cmp
inc
sbb
push
inc
mov
ja
loope
push
ljmp
mov
mov
add
jge
pop
fistpl
rclb
push
lahf
cltd
jae
sbb
inc
int
jnp
pop
add
fnstcw
out
fistpll
jnp
leave
std
inc
mov
cmp
mov
adc
repz
xor
cmp
nop
inc
inc
lret
cmc
int
cmp
jns
add
or
jns
push
les
test
mov
mov
repz
mov
xor
stos
pop
add
mov
mov
mov
mov
or
lcall
fcmove
psubq
sbb
inc
lcall
fists
inc
and
and
mov
sahf
jns
mov
in
aaa
inc
mov
xchg
arpl
loope
add
mov
push
xchg
dec
test
mov
out
push
pop
daa
cli
shlb
jg
adc
xchg
adc
mov
pop
jp
movsb
add
mov
jb
sub
push
jl
cltd
add
mov
jb
fisubrl
xchg
sub
jns
xchg
jb
idivl
sahf
jns
xchg
mov
sub
hlt
pushf
aas
mov
cmp
pop
cmp
sbb
aaa
cmp
push
js
push
push
cmp
leave
push
fxch
pop
shr
adc
cmp
xchg
fstps
in
xchg
mov
dec
dec
stos
scas
mov
arpl
lds
push
aam
adc
sbb
js
insb
jns
mov
or
imul
pop
ret
out
lods
dec
and
cmc
xchg
rorb
lahf
loop
cld
shr
mov
dec
mov
lcall
lcall
xchg
mov
dec
xor
lret
sti
push
cmp
icebp
cli
dec
das
lret
imull
movsb
sbb
xor
ljmp
dec
jns
imul
test
cmpsl
fstpl
sbb
xchg
ret
adc
or
fwait
popa
adc
rcrb
int
or
push
lret
lods
push
pop
sar
add
test
adc
arpl
aad
or
shl
mov
or
ja
pop
aas
and
push
arpl
mov
addr16
fiaddl
out
out
addr16
mov
pop
push
shrb
shrl
and
or
pop
stos
sub
fistps
stos
imul
and
xor
push
adc
movl
mov
lods
or
jb
xlat
testb
or
movsl
lods
stos
sbb
nop
ja
leave
adc
fbld
nop
sub
push
fistpll
in
mov
cmpsl
inc
fildl
stc
xlat
mov
or
push
and
insb
cmpsb
xor
stos
fs
js
or
enter
pop
mov
xchg
in
mov
xchg
hlt
pushf
subb
scas
mov
mov
outsl
push
add
in
repnz
je
movsl
scas
decl
adcb
xchg
fucomp
mov
push
in
faddl
jg
add
iret
and
inc
sub
and
jbe
inc
xchg
cmp
cwtd
insl
dec
imull
cmp
das
arpl
inc
cmpsb
xchg
dec
out
decb
add
mov
pop
jge
or
sar
push
xor
xchg
dec
in
stos
jle
jge
mov
dec
lods
push
adc
daa
dec
imul
jp
push
xchg
inc
mov
cld
xor
ss
dec
in
add
aad
loopne
jae
test
ret
loopne
mov
das
push
in
popa
sbb
popa
xchg
loope
xor
lret
loopne
inc
mov
pop
pop
aad
add
nop
mov
push
outsl
in
inc
pusha
add
enter
stos
xchg
enter
movsb
lcall
mov
pusha
push
int
imul
div
aad
dec
xor
mov
mov
push
lods
jp
data16
add
mov
push
fidivrl
jg
scas
shrl
sub
jmp
xor
fcmovnu
sub
mov
dec
orl
jo
mov
cmc
mov
repz
aad
sub
mov
aaa
lret
mov
mov
in
dec
jle
xor
cmpsl
cmp
mov
mov
les
lret
dec
scas
and
add
testl
fldenv
test
or
or
leave
push
xchg
adc
jle
das
dec
loop
cs
in
out
mov
addr16
lea
jnp
repz
outsl
pop
push
out
mov
xor
lcall
cmpsl
push
cltd
in
jl
jns
mov
pop
xchg
xorl
nop
test
mov
mov
call
sub
sahf
cmp
add
nop
dec
push
pop
cmp
mov
mov
fwait
xchg
scas
lock
mov
inc
aam
xchg
fucom
cmp
rcll
movsb
mov
xchg
lods
arpl
inc
leave
js
aaa
adc
add
popa
mov
and
and
cmpsb
jbe
cwtl
bound
pop
cmpsl
sub
ljmp
into
dec
div
mov
aas
addl
or
orl
lods
mov
nop
jne
js
inc
outsb
sarl
sbb
add
fldt
cmp
int
outsb
xchg
jno
jle
mov
jno
sub
sbb
cwtl
adc
jl
push
dec
arpl
aas
lea
bnd
mov
scas
ja
push
and
sub
mov
repnz
adcl
mov
dec
pop
mov
subps
mov
nop
mov
xor
sbb
push
adc
jle
xor
or
popa
sar
mov
jns
push
add
outsl
mov
adc
insb
pop
sarb
xchg
sbb
xchg
inc
pop
stos
je
jno
rol
jmp
inc
mov
mov
xor
fwait
mov
pop
call
ficoml
jmp
testl
ds
or
push
push
scas
sub
cmp
mov
pop
popa
adc
jb
pop
je
mov
aaa
cmp
sub
dec
aam
sbb
push
sahf
push
ret
and
xor
cmpb
ret
sbb
call
test
call
sbb
in
insl
mov
sti
rcrb
sbb
sbbl
mov
and
clc
cwtl
mov
push
mov
mov
nop
sub
push
negl
rclb
pop
fstpt
ret
notl
imul
or
jbe
add
into
mov
lods
out
outsl
mov
mov
cltd
add
in
push
jne
xchg
in
jecxz
sbb
inc
mov
out
mov
cmp
and
add
icebp
cmp
ja
and
lods
daa
inc
mov
andl
mov
mov
das
push
add
dec
pop
test
ret
push
or
das
xchg
rcrb
hlt
jno
icebp
js
fsubrl
or
pushf
jge
mov
cmpsb
push
adc
adc
push
lcall
sbb
jp
mov
js
ret
pop
mov
add
pusha
mov
cmp
cmp
mov
xor
pop
les
scas
cmp
outsl
mov
jno
mov
enter
stc
jge
mov
push
cwtl
fs
cmp
mov
mov
cltd
sbb
mov
iret
mov
inc
lods
je
out
and
decl
xorl
xor
es
add
loopne
sub
std
xchg
or
stos
xchg
cmp
into
aas
xchg
nop
in
insl
int
pop
add
mov
fwait
sub
sbb
mov
pop
loopne
in
rcll
sti
std
les
mov
iret
in
inc
sub
fcomi
gs
sbb
loop
inc
mov
and
pop
cmc
stc
inc
mov
in
push
jle
addr16
test
lahf
jle
mov
hlt
and
mov
xchg
adc
rorb
sbb
int3
xchg
dec
xchg
cld
jno
addb
adc
push
mov
adc
scas
push
inc
pop
mov
stos
mov
pusha
adc
repnz
mov
sbb
imul
lods
push
in
movl
repnz
clc
cltd
push
mov
push
adc
fs
push
mov
push
lea
push
mov
lods
dec
push
push
test
daa
add
repz
and
cmp
mov
mov
iret
adc
pop
ljmp
jg
lds
outsl
fwait
jns
xchg
mov
mov
jb
insb
dec
sbb
ja
je
xlat
stc
sub
mov
mov
jle
cmp
in
fsts
adc
mov
repz
cwtl
jo
jno
xchg
enter
xor
jne
addl
push
mov
out
pop
mov
xchg
xchg
pop
test
dec
or
repz
cmp
movsl
xlat
shlb
and
push
leave
adc
jnp
ret
notl
mov
push
fcmovb
jecxz
sub
xor
sub
shll
pop
pop
lods
sub
leave
or
pop
decl
add
idivl
pop
cmpsl
sbb
inc
rorl
jecxz
les
test
add
push
xor
les
rcll
mov
adc
jbe
xor
or
pop
dec
js
data16
cmp
lock
inc
sub
shlb
das
in
leave
hlt
xchg
adcl
gs
in
cmp
and
mov
mov
lea
or
push
push
test
jl
adc
not
aad
fidivs
adc
lods
leave
ret
mov
adc
fists
sub
testb
and
std
dec
mov
dec
and
cwtl
inc
adc
pop
lds
ja
push
mov
lcall
mov
movb
lcall
xchg
push
imul
inc
dec
pop
in
subb
add
in
enter
or
or
push
sbb
mov
push
test
movsl
inc
inc
dec
push
or
fistps
lahf
pop
jmp
sahf
aaa
pop
insl
jae
clc
mov
jp
test
push
jo
pop
rcrl
lods
test
popa
xchg
dec
addr16
adc
push
xor
cmp
xchg
in
aaa
fdivrl
int3
dec
cmc
lcall
mov
xchg
xor
lods
dec
into
cs
call
xchg
jmp
roll
dec
lret
ror
addr16
xchg
bound
stos
cwtl
inc
fwait
pop
mov
push
loop
jns
dec
fs
packssdw
out
fldcw
pop
daa
cmp
mov
dec
cwtl
xchg
inc
push
fidivrs
cmc
add
dec
mov
inc
stos
or
cld
fisubrs
xchg
sbb
imul
into
pop
jge
xor
ja
and
cli
pop
sub
mov
fs
aas
xchg
xor
push
cmp
add
scas
mov
in
dec
xor
mov
push
es
cmp
sbb
sbb
cli
sbb
loop
into
mov
add
pop
outsb
sub
dec
cmpsb
sub
lcall
out
pusha
lds
and
xlat
sub
xchg
loop
pop
adc
add
pop
fs
sub
test
inc
shll
push
sti
inc
je
xchg
inc
enter
test
testb
jns
mov
subw
test
icebp
maxps
test
seto
out
and
call
jle
xchg
ss
jno
mov
inc
xchg
outsb
xor
xor
jae
rcl
xchg
insl
xchg
dec
sbb
pop
dec
sahf
outsl
pop
xor
insl
mov
gs
and
pop
xchg
enter
mov
dec
cltd
xchg
push
xchg
mov
outsl
dec
cmp
scas
sarb
xchg
xchg
repz
and
and
cli
cmpsb
jnp
fsubs
in
dec
adc
out
cli
lods
jp
mov
mov
cltd
popf
icebp
mov
jmp
pop
fistpll
aaa
xchg
rol
shl
adc
adc
jns
dec
dec
das
sbb
ror
adc
movb
stc
xchg
xlat
mov
xorl
xchg
js
push
xor
pop
fimuls
sahf
lods
mov
mov
xor
fisubl
insb
add
pop
or
sbb
mov
in
pop
or
fwait
inc
outsb
aas
cld
adc
call
jmp
and
jg
adc
cmp
xchg
mov
mov
and
xor
cwtl
cmc
mov
adc
bound
adc
lret
push
pusha
addb
cmp
xchg
stos
arpl
push
lret
fld
iret
out
mov
cmp
xchg
adc
dec
sub
bound
lods
jae
push
aaa
test
lcall
adc
sar
xchg
stc
jnp
xchg
pop
mov
fisubl
pop
std
rorb
cli
stc
dec
add
cld
cmp
or
push
ret
and
inc
sub
xchg
pop
add
and
xchg
mov
test
orb
push
mov
lds
push
adc
fs
nop
jae
sbbl
out
shlb
or
xchg
nop
push
fnstenv
adc
insl
or
cmc
fwait
sub
mov
xchg
movsl
arpl
cmp
sbb
leave
scas
pop
into
add
orl
sub
adc
and
lret
nop
add
scas
test
mov
sbb
mov
add
lret
out
mov
xchg
cli
inc
and
fs
fmuls
sbb
ret
or
in
jnp
xchg
dec
cmp
enter
xchg
rcl
cmp
out
xor
sar
js
cwtl
lcall
sarb
mov
push
push
jnp
cmp
aad
adc
aam
lock
mov
mov
shr
das
fmul
in
in
pop
pop
lock
mov
sub
xchg
mov
cmp
mov
popa
dec
xchg
pop
ficompl
sub
int
jp
pusha
jne
xchg
lahf
mov
sub
mov
fs
pop
insb
adc
inc
dec
cmpsb
inc
pop
lcall
loope
cmp
in
xor
mov
pop
jp
enter
out
jno
pop
clc
test
push
jne
xchg
mov
test
xchg
mov
mov
shll
pusha
lods
adc
lods
ret
jbe
push
mov
sub
insb
xlat
fsubs
mov
pusha
out
mov
in
cmp
push
sub
push
aaa
addl
or
and
and
jecxz
pop
jmp
sarb
inc
pop
dec
repnz
es
xchg
and
popa
or
movsl
xor
pop
sti
leave
jge
mov
lods
stc
push
mov
aam
adc
loop
push
xchg
ret
fidivl
or
mov
add
ss
xchg
jl
popa
rcrb
mov
clc
mov
jl
negl
dec
and
xchg
loopne
jmp
xchg
jbe
adc
mov
dec
adc
jb
sbb
sbb
push
cmc
dec
or
sub
jns
cmp
ss
mov
in
test
bound
in
mov
lret
mov
xor
cmp
in
fistl
sahf
push
pusha
sub
adc
add
dec
aaa
xor
ret
sbb
mov
pop
mov
jnp
add
ja
loopne
test
or
pop
sub
addb
lods
jg
hlt
test
cmpsb
xchg
mov
xchg
pushf
stos
inc
je
icebp
pop
dec
and
sahf
add
in
dec
pop
adc
inc
cmpb
jmp
outsl
adc
add
inc
inc
lods
mov
jb
ret
dec
mov
arpl
sbb
mov
clc
shl
dec
add
fistps
jmp
aaa
pop
mov
scas
leave
nop
dec
notb
xor
les
hlt
clc
xor
xor
test
pop
add
or
xchg
or
imul
gs
out
push
scas
mov
call
frstpm(287
mov
inc
xchg
aaa
push
dec
cmpsb
or
xchg
mov
iret
shr
lock
shll
stc
ss
insl
pop
lret
aas
out
dec
cmpl
ja
into
mov
xor
jb
stos
es
lock
inc
clc
dec
cmovs
out
je
sahf
dec
pop
movsb
xor
mov
jg
rol
xchg
test
and
inc
pop
ljmp
sbb
ret
xchg
add
add
and
push
in
fldcw
rolb
pop
adc
repz
adc
inc
mov
pop
popa
cs
loope
in
imul
mov
sub
push
and
push
add
sub
pop
lock
insl
pop
stos
insl
scas
adc
mov
xor
mov
jnp
or
and
leave
and
out
sbb
push
les
pop
test
or
imulb
push
cld
mov
inc
decl
fmuls
adc
mov
loopne
jecxz
pop
pop
ret
fcmovne
repz
mov
xchg
js
rcll
mov
sub
sub
outsb
cmp
mov
push
std
clc
xchg
mov
dec
nop
pusha
sbb
add
inc
lock
sqrtpd
sub
test
and
push
outsb
jge
add
dec
sti
outsb
mov
xchg
in
filds
pop
xchg
ret
mov
fs
jns
movsb
xor
lock
xor
inc
dec
daa
stos
stos
je
mov
lods
insb
out
insl
inc
addr16
fisubl
movsl
data16
loopne
popf
dec
pop
mov
mov
and
xchg
rcrl
push
in
aam
popf
int
pushf
cwtl
xchg
adc
jg
dec
sub
loopne
pop
push
or
mov
fistpll
decb
mov
inc
shrb
fldl2e
jmp
jge
cmp
fisubrl
push
fwait
inc
inc
mov
divl
repz
dec
dec
xor
and
fimull
imul
xor
movsl
insb
popa
push
jecxz
mulb
jle
lahf
xchg
push
push
cmp
mov
and
std
jb
stc
insl
or
test
or
cmc
and
xor
inc
or
clc
jo
inc
aaa
repnz
xorb
lods
sarb
mov
mov
mov
pop
adc
xor
dec
cltd
xor
outsb
push
adc
imul
and
sbb
xor
inc
dec
and
sub
jnp
cmc
adc
jmp
xlat
add
imul
les
cltd
cmp
mov
rolb
cmp
es
push
imul
or
add
or
cmpsl
pop
mov
push
cmpsb
rcrl
ss
sub
out
fwait
sub
cmp
addl
in
in
pop
bound
clc
filds
repz
movl
sub
jb
movsb
aas
idivl
jl
and
inc
xor
daa
outsb
or
ret
mov
imul
and
aam
jne
mov
daa
mov
fcompp
push
add
xchg
xlat
dec
repnz
movsl
push
bound
dec
cmpsb
es
sbb
subb
mov
gs
outsb
pusha
test
xadd
fwait
cs
cmp
out
arpl
xchg
cli
js
inc
mov
in
daa
add
jno
xchg
in
js
mov
dec
mov
push
push
mov
adc
pop
ss
test
mov
adc
inc
pmulhuw
in
call
in
enter
movsl
in
lock
pop
mov
or
sbb
insb
gs
push
lcall
jae
and
dec
stc
lahf
fwait
cmpsb
test
lret
push
jae
clc
add
mov
cmc
inc
cs
sbb
int3
jge
jnp
or
mov
jmp
and
pop
fidivl
xor
fcomps
fucomip
jne
ss
arpl
xlat
std
cmc
xchg
push
mov
lahf
stc
xchg
testb
int
sub
cmp
mov
mov
loope
push
xchg
js
ss
inc
jle
sub
cmp
and
icebp
and
sbb
mov
leave
add
icebp
mov
mov
push
mov
imul
cli
mov
in
xchg
xor
add
sbb
mov
jmp
lret
ljmp
or
aad
rcll
sub
sbb
lock
jmp
xor
stos
stc
mov
lock
mov
ljmp
loope
adc
clc
pop
test
sahf
lods
sub
pop
cmp
mov
fsubrp
in
rcrl
ficoml
hlt
mov
lods
jmp
out
in
pop
dec
mov
scas
cmpb
mov
sub
cs
pop
mov
inc
xlat
stos
orb
fwait
xchg
cs
lock
jmp
testb
bound
add
outsb
in
mov
dec
in
arpl
fidivs
cmpsb
or
jmp
mov
outsb
mov
js
je
popa
and
mov
add
mov
mov
insl
mov
sbb
pop
dec
out
add
jb
mov
or
inc
sbb
movsl
in
push
jmp
or
fwait
xor
adcb
xchg
adc
pop
xor
ret
mov
jns
adc
test
add
pop
adc
mov
in
xchg
cmpsb
xchg
ds
repnz
cmp
sub
dec
add
fdivr
fidivrs
nopl
aad
in
mov
insl
loopne
negl
pop
dec
mov
pop
inc
lret
jl
mov
mov
jp
xchg
rcrb
insb
mov
call
inc
out
mov
and
jecxz
mov
mov
add
xor
dec
lahf
adc
sub
stc
stc
popf
mov
sarl
imul
daa
push
imul
dec
sbb
xor
negl
or
and
mov
mov
add
lods
movsl
das
inc
cvtpi2ps
arpl
addl
in
cmp
push
mov
gs
cwtl
dec
dec
hlt
addr16
loop
cmp
les
fs
xchg
sub
ljmp
adc
mov
ds
cmpsb
and
rcrl
mov
cwtl
push
fwait
sbb
mov
ret
push
pop
icebp
jnp
or
pop
idiv
ficompl
loop
sub
jne
jmp
mov
setb
add
add
add
jb
sub
lea
mov
iret
mov
ja
or
inc
adc
xchg
les
jmp
lahf
movl
xchg
orl
adcb
pushf
add
rcrl
mov
subl
mov
mov
lret
jmp
cmp
inc
add
popf
stos
inc
stos
fadd
xchg
sbb
test
es
mov
stos
daa
lcall
push
sub
dec
shll
xchg
fdivs
out
ljmp
mov
cmp
out
push
lock
outsb
xor
into
jnp
mov
inc
and
cli
call
scas
leave
sub
add
jbe
mov
test
jae
xorb
inc
add
mov
inc
jecxz
cmpsl
add
ljmp
ja
and
push
lock
jg
and
fisubrl
inc
pop
or
lock
cli
jae,pt
nop
scas
and
xlat
sbb
into
sub
or
jp
cmc
out
jb
insb
gs
ficomps
add
sbbl
push
pop
mov
jl
enter
enter
or
sub
sbb
dec
icebp
xorb
icebp
addr16
dec
dec
repnz
inc
mov
mov
sahf
cmp
xor
cli
mov
push
sarl
cmpsb
pop
sarb
add
fcompl
pop
cmpsb
call
push
ljmp
lds
mov
dec
pop
popl
push
mov
shl
mov
les
pop
cmp
jbe
outsl
push
bound
jae
ja
movsl
outsl
xchg
sub
push
movb
scas
mov
jg
pop
lea
sub
mov
aas
mov
fiadds
jns
call
loop
insl
lds
mov
and
inc
pop
jo
in
negb
pushf
jl
mov
mov
jmp
push
scas
inc
fs
je
push
or
push
sub
insl
out
and
and
stos
push
mov
xchg
jnp
and
cs
ja
ficomps
scas
cmp
aas
cs
pop
fwait
lahf
cld
adc
iret
lahf
and
pop
add
xchg
popf
movsl
mov
add
add
aad
movsl
add
xchg
mov
fs
sub
push
adc
or
repz
sti
cmp
enter
sub
pushf
pop
push
xor
cli
mov
test
lret
addr16
push
xchg
inc
add
sub
nop
push
out
mov
mov
test
arpl
jecxz
adc
mov
mov
in
int
cmp
and
mov
sub
out
sarl
jle
cld
inc
in
lods
push
aad
call
mov
mov
pop
mov
test
outsb
mov
and
gs
push
xor
pop
ljmp
gs
and
jp
mov
mov
xchg
arpl
ds
outsb
mov
popa
outsb
aaa
lods
jp
cmp
mov
arpl
pop
cmpsb
fiaddl
add
xor
pusha
jns
cli
mov
or
out
aad
mov
xor
pop
movsb
jno
in
scas
pop
movsl
lret
xlat
push
sub
pusha
iret
mov
jnp
scas
pusha
mov
aad
rcrl
mov
add
pop
mov
insb
xchg
jmp
cmp
mov
inc
dec
cs
sub
mov
cmp
mov
adc
jnp
mov
push
xchg
rcll
fnstenv
hlt
jnp
pop
pop
stos
push
inc
adc
ss
or
or
push
fwait
repz
imul
inc
rclb
mov
mov
test
push
movsb
bnd
fldt
mov
mov
jae
arpl
cmc
push
fs
shll
add
lods
popa
xor
jle
jne
mov
imul
and
pop
loop
dec
xchg
fcmovu
cmovp
movsb
rcrl
cmp
shrd
data16
inc
lods
or
pop
cmp
clc
jge
out
fbld
jg
pop
mov
jle
sbb
mov
mov
js
or
xor
stc
dec
or
inc
cmp
scas
les
push
andl
push
pushf
dec
push
mov
bound
push
das
push
inc
cltd
dec
add
cmpsl
xor
push
pop
pop
popl
jmp
jnp
into
je
sbb
or
and
dec
int
cld
mov
fsubs
mov
jbe
js
fstpt
shrb
std
push
dec
cmp
and
in
pushf
fsubrs
xchg
dec
sbb
jns
sbb
ja
aas
outsb
sti
fsubp
add
setg
imulb
mov
fisubs
stos
scas
pop
sub
in
cmp
jl
icebp
lods
mov
shlb
arpl
xorl
lahf
fistps
cmp
daa
jnp
lds
ljmp
rcll
out
xchg
pop
orl
nop
outsl
shll
loope
ret
pop
insb
jbe
in
adc
stos
jg
xchg
add
cli
mov
xchg
daa
dec
xchg
and
inc
jecxz
push
sbb
ja
test
sbb
imul
add
insl
adc
rcl
out
add
jo
movsl
push
repnz
sub
andb
and
or
pop
mov
data16
sub
add
and
fcmovnu
adc
jbe
mov
ja
xchg
pop
sub
test
adc
xchg
sarb
adc
add
push
mov
push
sub
repz
dec
adc
adc
test
out
xchg
sub
packsswb
pop
ret
loope
mov
je
popf
jmp
dec
mov
push
gs
fcomip
sbb
stos
movsb
xchg
loop
mov
data16
cmp
xchg
cmp
and
lea
mov
out
mov
arpl
push
jecxz
xchg
sbb
xchg
mov
insl
jmp
mov
fldcw
xchg
add
jge
rcrl
pop
and
sbb
add
call
dec
sbb
mov
test
fistps
aaa
ljmp
movsb
adc
movb
fistl
test
sub
sub
in
mov
push
or
test
push
je
fsubr
cli
or
xchg
mov
repz
sbb
mov
mov
nop
xor
scas
pop
fs
mov
add
inc
or
aad
add
stos
fwait
push
and
mov
leave
xchg
and
mov
xchg
mov
jbe
mov
inc
outsb
cmpsb
push
inc
dec
pop
xchg
jle
loope
and
orb
xchg
mov
int3
cli
and
inc
push
sbb
stos
jg
dec
ss
out
rclb
push
xor
sahf
in
mov
clc
lcall
push
outsl
cmp
jecxz
in
mov
sti
jnp
loopne
mov
test
or
xor
in
scas
popa
js
stos
push
lahf
push
mov
push
mov
imul
mov
jge
incb
xchg
imul
cwtl
pop
in
or
movsb
out
xchg
loop
jg
int3
shr
std
das
mov
flds
cmp
pop
xor
and
fadd
jno
in
xchg
cmpb
pop
mov
adc
jecxz
mov
inc
stos
mov
movl
mov
adc
pushf
dec
sub
push
mov
inc
push
cwtl
clc
mov
xlat
movsl
adc
cwtl
mov
inc
loop
rcl
imul
or
xchg
mov
in
out
cmp
in
xchg
out
bnd
mov
xlat
jg
and
mov
cli
cmp
sub
jb
sub
scas
scas
jmp
data16
in
mov
shlb
jge
cmp
imul
pop
cmp
lret
mov
dec
outsl
dec
and
sarl
push
outsb
test
ret
jo
add
mov
mov
xchg
dec
xchg
popa
leave
mov
cmp
lret
xchg
inc
ja
imul
push
movsl
loop
jne
jp
scas
xor
fs
add
lock
icebp
lock
cli
test
ds
xchg
mov
imull
lret
mov
stos
dec
aad
lods
outsl
xor
sub
push
mov
dec
jl
mov
push
je
aam
int
add
fimuls
ret
adc
cwtl
imul
jp
sbbl
ret
lea
pop
cli
push
or
jmp
jns
lcall
fstpl
mov
mov
xor
maskmovq
notl
mov
xor
or
xor
mull
in
mov
movsl
outsb
inc
xchg
in
test
incl
leave
pop
iret
not
popf
push
cmpl
or
aaa
insl
cwtl
add
test
jne
imul
inc
lret
inc
or
pop
add
call
in
dec
sbb
sbb
test
nop
mov
dec
cmp
pop
fnstsw
hlt
sti
inc
js
inc
dec
into
lea
cmp
inc
pop
lock
das
sti
inc
aam
loope
jg
xchg
push
hlt
in
adc
push
xor
inc
jae
mov
daa
jge
imulb
ret
jp
test
push
pop
pushf
repz
dec
lods
sub
sbbb
fisttpl
lea
lods
ret
in
xor
mov
and
sbb
xor
pop
xorb
push
xlat
das
mov
lret
lahf
jmp
mov
adc
shl
pop
test
pop
jnp
adc
daa
insl
mov
stos
sbbb
mov
xchg
adc
or
jp
cmpsl
xor
mov
das
add
push
nop
cvtdq2ps
pop
add
cwtl
aas
insl
outsl
jo
aam
mov
xorb
cli
sbb
scas
or
dec
sbb
xor
jno
lcall
imul
ds
loop
out
mov
inc
mov
inc
movsb
out
adc
push
lock
cmp
inc
outsb
and
push
divb
adc
movsl
add
popa
and
dec
xchg
in
dec
shrb
rorl
orb
lret
or
dec
test
loop
imull
icebp
adc
and
lahf
std
fsubrp
divl
test
call
sti
mov
adc
pushf
pop
add
or
or
int3
pop
out
add
dec
sti
mov
shll
and
xchg
imul
shlb
shll
add
push
xchg
sub
or
mov
bound
inc
push
sbb
daa
push
call
and
ljmp
push
dec
loopnew
aad
fidivl
lds
insl
int
mov
jb
xor
dec
dec
jg
repnz
mov
inc
negb
inc
xor
xchg
cli
test
sub
push
or
das
loopne
jle,pt
or
aam
sbb
jns,pn
arpl
insl
and
imul
inc
das
imul
and
test
xor
into
or
jmp
fs
cmp
push
int
loope
addl
xchg
rcll
sbb
mov
sbbb
xchg
add
push
xchg
imulb
inc
lcall
nop
lret
sahf
iret
jmp
shll
call
and
xor
mov
test
cmp
inc
push
das
jmp
mov
xchg
cmpsl
xchg
pop
nop
adc
negl
or
andb
shlb
sub
sbb
out
fldcw
addr16
xchg
jno
sub
push
sbb
mov
push
fs
jecxz
ret
cs
es
ljmp
lods
pop
push
ljmp
push
jmp
call
mov
dec
push
cmpsl
gs
repz
push
xor
cs
scas
fdivr
addb
sti
out
ss
movsl
aaa
mov
mov
sbb
pop
mov
ljmp
push
mov
push
inc
imul
xchg
push
sbb
subl
mov
popf
es
cltd
mov
and
pop
mov
xchg
mov
insb
jbe
int3
stos
mov
lock
movsl
cmp
sub
push
dec
xchg
pcmpeqb
push
loop
lret
idivl
mov
push
inc
fs
pop
fnsave
jbe
movsl
aas
sbb
rcll
mov
xchg
lahf
je
out
into
add
dec
mov
ds
lods
xchg
add
jge
adc
lock
cmpsb
mov
sbb
or
and
cmp
mov
inc
shll
inc
mov
push
mov
push
out
loop
or
popa
mov
cld
mov
push
loopne
inc
xorb
jp
mov
or
mov
xor
ret
sub
xchg
jg
xor
or
testl
push
mov
mov
movsb
fwait
push
aaa
mov
jo
jl
rorl
dec
cltd
xchg
jbe
pop
fldcw
lcall
into
pop
or
and
and
gs
push
stos
and
outsb
incl
lods
lods
mulb
cmp
dec
pop
mov
jns
test
unpckhps
stos
jno
into
out
cs
clc
or
xor
in
xchg
jbe
in
fsubs
adc
adc
fcomip
mov
aad
add
or
xor
or
xchg
mov
mov
inc
imul
pop
push
jle
mov
cmpsl
leave
inc
stc
adc
jnp
out
fmul
arpl
movsbl
jns
sbb
xor
lret
jb
xchg
loopne
lock
jp
sarl
cmp
push
scas
add
daa
sbb
rorb
adc
mov
jns
cmp
and
out
lods
mov
popa
sub
inc
dec
add
sub
loop
aad
add
adc
add
xchg
mov
pop
sbb
pop
stos
repz
sub
lcall
sub
fsubs
xor
insl
dec
push
ror
pusha
jg
int
xor
xchg
hlt
in
jmp
inc
mov
mov
pop
shlb
fsts
andb
jne
scas
ds
aas
jae
popw
aaa
adc
inc
js
xor
scas
fsubl
sarb
icebp
jae
daa
imul
pop
or
daa
gs
stc
mov
ljmp
js
js
rcr
clc
stc
enter
mov
mov
pop
lret
fdivl
pop
out
push
sarb
add
xlat
in
cmp
cmpsb
ja
mov
outsb
pop
xchg
jo
cmpsl
lock
lods
lock
ret
mov
cmp
popa
iret
xor
fdivl
mov
jp
addr16
lds
mov
mov
xor
fst
lods
rorb
jmp
add
popa
inc
movsb
test
and
add
or
add
or
sbb
bound
xor
pop
test
cmp
add
decb
into
dec
or
sub
mov
fwait
cmc
movsb
mov
aam
cmp
mov
mov
inc
sbbb
mov
sti
jae
imulb
insb
lret
inc
popf
jae
bound
adc
icebp
cli
call
xor
rorl
xchg
inc
jnp
adc
cmpsl
jmp
xor
jb
fistps
mov
xlat
mov
ds
or
sub
cmpl
sub
or
imul
divb
cld
inc
push
cmp
jnp
fldt
add
rolb
shrl
dec
jne
movaps
ljmp
adc
mov
imul
dec
sbb
sbb
scas
inc
lods
fistps
mov
pop
std
mov
dec
repnz
rol
loop
rclb
mov
mov
xchg
pop
rol
push
add
adc
add
ror
mov
iret
jo
fwait
mov
pushf
push
stos
mov
sbb
js
lock
lds
lea
dec
data16
test
notb
idiv
jbe
shlb
test
nop
les
or
loopne
lds
out
int3
mov
test
cmp
fidivs
dec
sahf
mov
xchg
jg
in
push
mov
cmpl
in
ss
ja
fsts
pop
jbe
inc
arpl
cmp
es
mov
push
fs
xorb
in
mov
jp
inc
mov
repz
test
lcall
in
mov
andb
inc
ret
repnz
jp
xchg
mov
sbb
sub
jnp
xchg
loope
out
or
xchg
test
push
and
push
ljmp
test
daa
jno
js
out
or
aas
call
loop
dec
inc
test
lahf
pushf
outsb
jmp
lea
inc
stos
cmp
add
ficoms
aad
pushf
or
repz
test
or
sbb
mov
mov
inc
jnp
std
cmpsb
dec
xchg
push
cmp
add
cmp
push
xor
and
cmc
jno
mov
push
cmpsl
pop
mov
cmpsb
in
sub
xchg
js
jne
filds
mov
jg
test
lds
cli
sarb
int
std
daa
push
mov
ret
push
adc
dec
inc
sub
cmc
js
inc
mov
in
inc
mov
dec
popf
push
jmp
jo
int
dec
jl
xlat
xchg
out
push
inc
lock
ds
and
bound
cmpsl
je
jl
movsb
lods
data16
fidivrl
into
insb
add
pop
pop
lea
rep
mov
fdivr
dec
xor
out
sbb
jae
outsl
add
cltd
jns
hlt
xor
pop
dec
sub
jb
jp
outsl
pop
push
add
mov
ret
or
in
outsl
in
lret
dec
lret
mov
mov
xchg
popf
bnd
jne
xchg
ret
xor
jbe
scas
stos
inc
mov
cwtl
frstor
mov
outsl
out
fldcw
into
pop
and
mov
fstpl
xchg
cli
pop
cmpsl
in
mov
sub
pop
inc
ret
push
cld
inc
cmpsl
ret
enter
test
xor
pop
arpl
add
adc
into
lret
insl
mov
xor
mov
sub
jb
sbb
aad
push
cli
lret
movsb
mov
inc
fs
cmp
fs
pop
mov
test
repz
or
mov
mov
dec
popa
jg
fisubrs
pop
iret
mov
lods
or
cld
in
test
cmp
sbb
jecxz
ret
push
jmp
cmp
insl
hlt
movsl
xor
loope
mov
aad
pop
scas
push
xor
inc
pop
das
outsb
xor
lahf
dec
lret
or
test
out
add
in
or
popa
or
mov
clc
cmp
ss
pop
mov
jo,pn
fnstsw
in
cmp
fs
lds
pop
cmpsb
pop
lahf
jge
roll
mov
dec
out
outsb
pushf
imul
sbb
xor
jns
shrl
jae,pn
scas
mov
xchg
dec
jp
push
cli
fsubs
out
loopne
mov
stc
push
push
imul
mov
xchg
xchg
mov
addr16
rorl
andb
or
add
repnz
push
jp
sti
add
out
lds
mov
cld
mov
pop
cld
rolb
pop
mov
xlat
sbb
mov
sti
pop
pusha
xor
and
mov
inc
mov
int3
jo
dec
cmp
ret
pop
xlat
cmp
aad
and
movsl
std
pop
pop
sar
inc
test
cmpsb
int
push
insb
push
gs
push
push
addb
dec
push
das
imul
outsb
sbb
cmp
mov
outsb
mov
inc
insb
jbe
and
fidivrl
inc
push
push
xchg
shl
mov
dec
cmp
push
les
push
popf
adc
inc
mov
mov
imulb
cmpl
or
fstpl
sub
jb
fdivrs
jbe
xchg
mov
aas
pop
pop
jge
fsts
and
jb
rcrl
icebp
xchg
cmpsb
inc
cli
push
dec
push
xchg
lds
push
leave
fstps
lock
popf
rorb
sahf
jg
mov
pop
fmull
bound
pushf
ficompl
loope
int
mov
pusha
ret
mov
imul
mov
xchg
mov
pause
fistpl
dec
lods
sub
mov
and
mov
sub
pop
ds
add
jo
mov
js
add
fcoms
and
in
pop
cmc
mov
jae
add
lods
imul
add
inc
sub
loope
data16
xor
inc
out
rclb
and
loop
push
jmp
jne
add
push
inc
jnp
ja
sbb
cld
add
rcr
insl
addl
cmp
stos
fldl
scas
push
adcb
jmp
jle
jae
jmp
mov
inc
mov
push
jmp
cmp
loope
dec
test
mov
xorl
aaa
lods
adc
arpl
subl
test
dec
pop
in
popf
add
test
stc
mov
ret
xor
inc
popa
push
or
inc
pop
add
iret
hlt
mov
std
mov
insb
lahf
cwtl
inc
frstor
cmp
xchg
imul
jg
shl
inc
je
sahf
test
sbb
in
add
les
or
mov
add
icebp
out
popf
in
iret
xor
mov
inc
and
inc
or
inc
add
adc
jnp
add
xchg
fcoml
sarl
or
sar
mov
cmpsb
mov
mov
dec
shr
lea
ljmp
cli
jns
cmpsl
into
and
daa
mov
insb
push
fldt
cmp
mov
push
jns
in
xor
shlb
mov
ss
repz
ret
inc
push
sub
aas
fstl
std
pop
ficompl
out
push
rcll
popf
test
sub
fisubrs
ja
pop
addl
adcl
addr16
add
inc
jg
in
rorb
lock
cwtl
xor
sub
out
sarb
add
mov
xchg
outsl
lds
add
jae
inc
mov
xchg
stos
pusha
arpl
and
lahf
mov
cmpsl
stos
cli
push
push
and
data16
fwait
cwtl
out
adc
clc
mov
js
sub
inc
pop
fidivs
jb
cwtl
testl
lea
push
inc
mov
cmp
xchg
imul
jge
sbb
das
pop
sub
jnp
addr16
adc
lds
mov
jg
add
insl
mov
loopne
lds
arpl
pop
mov
or
stc
mov
jle
test
pusha
add
xor
sub
or
dec
bound
dec
repz
add
addr16
push
mov
aas
mov
jecxz
test
ficompl
xchg
int3
pusha
cwtl
or
enter
cmpsl
fidivl
into
add
fistps
lahf
loop
mov
lods
shl
shr
lea
in
imul
or
dec
ficomps
sbb
add
mov
push
sbb
sub
aaa
or
loop
lcall
jb
and
imul
or
jo
or
inc
mov
sub
jl
jp
cmp
fistpl
sti
sbb
xor
fwait
or
popa
addr16
ss
lret
repz
cmp
add
ret
dec
xchg
cmp
out
xor
cmp
lcall
pop
lea
inc
aam
iret
mov
sar
repnz
jno
push
or
std
xchg
adc
adc
mov
aad
outsb
lds
xlat
adc
cmpsb
pop
imul
or
fimuls
fistpll
hlt
xchg
and
mov
push
sub
in
sub
inc
sbb
and
std
loopne
cltd
xchg
jecxz
push
scas
push
cmp
adc
stos
jae
cmc
inc
push
or
xor
cmp
cmp
jne
and
cmp
popf
and
inc
movsb
stos
insb
les
cmpsb
or
jo
pop
stos
jge
outsb
imul
adc
pop
pop
adc
inc
cmpsb
inc
popf
jns
cmpsb
insb
stc
loope
in
and
mov
outsb
icebp
fistpl
xchg
sbb
sub
lods
mov
xchg
sub
mov
aaa
int
xor
lret
inc
add
sbb
adc
xchg
out
jp
jge
dec
sub
stos
cmp
or
pop
insb
push
sub
sti
mov
insb
xchg
cltd
fisttpl
ret
fstl
or
test
test
mov
out
arpl
mov
sbb
mov
hlt
cltd
add
mov
js
sbb
call
imul
js
mov
ud0
test
mov
and
int3
inc
mov
pushf
sarb
mov
sarl
inc
pop
roll
lods
jg
loopne
es
aas
js
sub
cli
rcrb
js
pop
repnz
ret
outsb
fstpl
push
add
mov
test
pusha
jle
jmp
sahf
xor
xchg
add
addr16
jl
cmp
scas
in
add
test
push
or
pop
or
lret
sbb
cld
mov
sub
xor
sti
outsb
mov
stc
imul
pushf
stos
sbb
xchg
fistpl
push
scas
rcrl
pushl
inc
ljmp
inc
in
fnstsw
cmp
pop
movsl
cmp
test
imul
pop
xor
jb
daa
mov
adc
enter
lods
arpl
push
out
dec
fdivrl
jo
or
lock
sbb
mov
push
iret
in
push
mov
insb
mov
cld
inc
push
es
pop
xchg
jnp
xchg
jnp
sub
fs
pushf
push
add
or
ja
leave
bound
orb
push
lahf
fstpl
mov
int3
pop
mov
gs
jg
sbb
and
ljmp
inc
cld
add
movsl
imul
adc
out
out
cwtl
gs
jle
adc
xchg
test
mov
dec
push
jge
out
adc
dec
je
out
jle
jmp
cmp
mov
inc
mov
mov
fcmovnu
cld
subl
dec
mov
cmp
or
cli
add
loopne
ret
out
insb
xchg
xor
cmp
in
jl
insb
sub
popf
adc
lds
cmpsb
inc
xor
lods
push
pop
rorb
mov
jecxz
mov
adc
mov
filds
add
mov
sub
out
les
cmpsb
fimull
pop
xchg
cltd
std
mov
jno
sub
fmuls
mov
mov
xchg
mov
mov
rorb
adc
std
scas
xor
xchg
add
call
xchg
sub
mov
pop
cmpsl
sti
push
shrb
push
jg
add
fists
xchg
mov
mov
mov
pop
add
lret
mov
jle
cmp
mov
pushf
dec
dec
loope
and
add
mov
mov
sub
xor
mov
xchg
dec
sbb
loopne
mov
mov
mov
or
sbb
push
sbb
mov
test
daa
stc
push
sarb
hlt
movsl
xchg
add
es
and
or
loop
js
je
mov
pop
add
subb
inc
loop
repnz
in
adc
out
add
push
icebp
xor
xorl
push
mov
xchg
outsl
leave
aam
sub
mov
or
lahf
aaa
and
add
dec
cmp
and
outsb
cmpsl
mov
ds
repnz
xor
pop
sarl
dec
jo
movsb
loope
into
xchg
pop
pop
sti
mov
adc
cld
push
ss
nop
fcomps
loop
cmp
cmp
add
push
push
xor
push
fdivrs
fdivrs
adc
cmp
cld
mov
add
leave
into
jbe
ret
mov
into
push
mov
mov
aam
cmc
push
mov
aam
mov
pop
into
xor
mov
fistpl
xchg
push
cld
adc
xchg
lock
fnstcw
mov
lret
mov
enter
add
mov
roll
xor
jnp
fs
movb
push
pusha
add
mov
adc
xchg
insl
mov
mov
shl
in
aaa
sub
push
and
xor
iret
mov
ds
inc
in
push
sbb
ss
lods
aas
cmp
mov
mov
dec
movsl
cmpsl
loop
mov
adc
xor
xor
imul
fldcw
out
mov
adc
aas
jmp
inc
add
push
call
add
sbb
in
bnd
notb
mov
pop
sahf
jecxz
repnz
movsl
push
fldt
cmp
loopne
mov
pop
mov
fbld
jnp
inc
sub
movsb
movsb
pop
movsl
mov
pusha
xor
jl
stc
jns
sahf
push
ficompl
mov
jg
jnp
enter
daa
inc
push
xchg
cltd
lcall
inc
and
mov
into
out
arpl
dec
ss
ret
inc
pop
xor
push
arpl
pop
enter
dec
mov
sbb
dec
pushf
pop
sbb
mov
hlt
inc
inc
adcl
cld
jmp
in
adc
rcl
dec
scas
xchg
dec
and
sbb
sbb
push
and
gs
lea
xchg
imul
or
inc
sub
scas
jbe
jge
fwait
adc
loopne
divl
dec
dec
ljmp
xor
inc
pop
and
pushf
in
pop
mov
fstpt
mov
cmpsl
and
in
scas
outsb
sbb
leave
bound
inc
cmp
pushf
out
sbb
pop
jecxz
incb
out
stos
ss
mov
inc
mov
out
pop
mov
pop
xchg
inc
icebp
aad
nop
in
es
sub
sbb
push
inc
mov
mov
xor
dec
or
fwait
pop
sbb
in
sbb
jle
pop
dec
sahf
aas
pop
jecxz
rorb
shll
dec
int
cmp
lds
mov
fucomi
mov
std
in
mov
imul
or
xchg
mov
xchg
mov
inc
sbb
sbb
loope
cmpsl
scas
jl
frstor
push
les
lock
sbb
dec
push
sbbb
fwait
xor
mov
mov
rorb
sbb
pop
sub
push
cmc
mov
out
jne
cmpsl
pop
into
lret
test
mov
clc
cmp
push
lds
mov
lock
xor
sub
clc
cmc
scas
cmp
cmp
ret
fcmovu
xchg
jbe
test
inc
roll
add
dec
test
dec
cmp
inc
clc
xor
add
insb
mov
sub
jmp
and
xor
cmpsl
pop
xor
push
iret
loope
push
jmp
jmp
push
shrl
ja
pop
mov
or
cmp
rcll
shl
leave
sbb
inc
mov
fwait
push
pop
pop
psubusw
mov
imul
dec
mov
dec
loope
popa
mov
movsb
jmp
mov
jmp
in
xor
inc
sti
xchg
push
dec
xchg
clc
mov
inc
cmpsl
sbb
mov
outsb
sbb
dec
in
mov
gs
pop
mov
push
lods
repz
inc
mov
pushf
stc
push
popa
mov
daa
mov
decb
jnp
lock
sbb
mov
notb
push
xchg
leave
sti
std
mov
in
std
dec
sbb
cmp
arpl
mov
popf
mov
sbb
scas
outsb
mov
leave
mov
fidivs
ss
mov
pop
and
in
add
hlt
pop
push
ja
loop
sub
sbb
jp
test
mov
mov
je
adc
jno
and
xor
inc
std
pop
xchg
iret
dec
xchg
insb
pop
push
xor
lret
mov
mov
test
mov
sbb
xor
cltd
mov
std
xor
in
pop
jbe
fcoms
les
ljmp
xchg
jbe
cmpsl
mov
xor
pop
je
mov
lds
inc
or
mov
jo
cmp
push
add
les
cmc
imul
subl
push
fsubrl
push
dec
lds
jmp
pop
test
scas
mov
cmpsl
rep
into
xor
lret
aam
fnstsw
or
testl
cwtl
stos
push
inc
test
jp
stos
push
push
cmp
mov
pushf
pop
jno
repnz
mov
ret
je
xor
and
xchg
jmp
mov
fstpl
sti
cld
jne
pop
in
xor
lret
xor
jno
les
test
inc
add
jne
inc
test
mov
dec
jmp
into
enter
ljmp
jne
sti
add
mov
push
movsl
gs
mov
mov
jge
mov
test
aad
fwait
mov
enter
inc
adc
mov
shll
test
in
adc
or
stos
mov
fcomp
scas
les
mov
adc
ja
sbb
subb
call
pusha
addr16
ret
shrl
push
xor
cs
fwait
push
pusha
pop
subw
xchg
mov
call
stos
push
xchg
pop
push
sbb
testl
jbe
sub
cmp
pusha
imul
xor
mov
xor
popf
int
mov
aad
test
cwtl
fistpll
push
add
cmpsl
xchg
jg
ds
das
jb
sarl
cwtl
xchg
and
cld
sti
sub
cwtl
add
jne
jne
xchg
pop
inc
jmp
jmp
inc
push
xor
ss
mov
jae
sub
push
call
icebp
jne
scas
cmp
xor
add
insb
pop
mov
mov
inc
jnp
inc
mov
adc
lods
testb
xlat
popf
dec
loopne
popf
jno
mov
push
sub
shr
mov
repz
adc
scas
pop
inc
sbb
xchg
add
stos
or
xchg
xchg
mov
mov
fldl
mov
cmp
enter
fsts
pop
lret
pusha
rcll
in
dec
sti
mov
lfs
inc
gs
test
mov
inc
pop
in
int
mov
lcall
cmp
pop
mov
fstl
mov
popa
rep
jl
adc
scas
lock
arpl
cmpsl
pop
in
int3
push
xrelease
fisubl
ja
mov
lcall
pop
inc
scas
aam
cmc
imul
xor
inc
test
push
and
adc
lcall
sbb
lret
or
mov
stc
jmp
sub
jnp
in
shl
jle
jg
dec
sbb
sbb
scas
in
jp
xchg
insl
roll
mov
cmp
pop
xchg
sbb
out
scas
test
xchg
popa
das
pop
stos
test
and
cli
pushf
cmp
clc
xchg
psubd
testl
pop
fwait
mov
popf
adc
mov
xrelease
fidivrl
or
cmp
xchg
fcmovnbe
movsb
pop
adc
or
sbb
test
push
mov
outsl
mov
repnz
scas
test
xchg
push
push
aaa
es
pop
hlt
hlt
mov
xchg
pop
movsl
outsl
rorl
out
dec
iret
sbb
nop
and
int
and
loope
movsb
push
adc
out
inc
add
loope
sbb
mov
data16
lret
out
int
negb
lods
xchg
fildll
xchg
imul
sti
push
xor
sub
fstpt
outsb
dec
rol
mov
lret
movsl
xor
or
ficoms
mov
cmp
pop
mov
shl
push
dec
fsubl
aaa
in
jecxz
jbe
pop
ret
fstpt
adc
add
lods
or
outsl
sub
iret
bound
fucomp
sub
aaa
or
mov
mov
mov
jne,pt
push
jp
xor
cmp
push
scas
xchg
test
cmp
in
add
nop
mov
cld
mov
mov
in
adcl
divl
js
cs
add
push
or
or
fldcw
cltd
mov
sbbl
inc
out
notb
shll
lods
hlt
lock
lods
rcr
icebp
shlb
add
in
mov
xor
aas
xlat
mov
dec
sub
das
jl
mov
mov
mov
outsb
sub
fwait
push
clc
fsub
xchg
daa
xchg
xchg
mov
lock
and
xor
insb
sbb
mov
adc
mov
fldcw
arpl
jp
adc
sub
pop
in
mov
movb
or
imul
sar
inc
pop
pop
inc
cmc
lret
jg
jecxz
and
mov
rcll
xlat
popf
movsb
sbb
mov
mov
scas
adc
push
lods
dec
fbstp
subb
imul
lods
lcall
jge
push
ds
and
shlw
bound
push
dec
aad
push
jp
out
lret
cmp
pop
push
cmpsl
je
das
shlb
lret
or
jmp
sub
adc
mov
sbb
out
jne
mov
dec
and
or
dec
or
mov
cmpl
or
mov
inc
or
addb
dec
push
leave
out
xor
jle
sbbb
fildll
fiaddl
cmp
dec
cmp
addr16
aad
mov
dec
jmp
cltd
jne
mov
pop
lea
and
and
inc
ret
sub
out
scas
inc
adc
xchg
cmpsl
mov
test
sti
adc
divl
mov
sbb
lds
imul
in
jle
pop
xchg
cmpsl
test
bound
callw
int
inc
add
dec
ds
lret
lock
cmc
std
mov
into
push
out
lods
rclb
pop
jno
and
and
cwtl
jae
fldcw
call
insb
psraw
pop
xchg
or
gs
je
testl
and
scas
mov
pusha
fcmovbe
xchg
in
or
and
jo
xor
inc
sbb
shrl
push
or
sbb
clc
add
or
jmp
sbb
cmp
test
lds
cmpsl
push
cmpsb
jp
lock
adc
push
lret
scas
les
jno
imull
cmp
mov
pushf
in
stc
cmp
push
pop
imul
in
push
movsl
mov
shl
icebp
dec
mov
mov
lahf
std
les
push
cmp
sbb
adc
mov
cli
mov
cmp
mov
mov
icebp
lcall
fxch
movsb
insl
orl
pop
loop
cs
push
aaa
mov
inc
push
fcmovnbe
ret
fs
push
sub
adc
cmc
pop
ljmp
stc
xchg
das
mov
mov
cwtl
ja
pop
inc
push
cmpsb
movb
sbb
xor
mov
inc
movsb
cli
sub
lods
test
test
or
loope
xor
xchg
cmp
sbb
shr
or
or
pushf
sbb
lret
test
in
fadds
pop
add
push
mov
repnz
fidivl
jp
xor
mov
dec
mov
movl
dec
jae
or
fistps
mov
lods
stc
fiadds
pop
mov
xchg
lea
fwait
and
sub
jmp
addr16
sub
inc
push
adc
jmp
lea
jb
lods
push
pop
fyl2xp1
and
hlt
aaa
mov
sbb
inc
dec
mov
mov
or
shrb
push
adc
inc
dec
mov
insb
fwait
xchg
rcll
in
or
cld
call
xchg
or
sub
fnstenv
popl
dec
sahf
sahf
mov
andb
add
sub
and
jmp
sete
je
mov
mov
and
pmaddwd
imul
scas
out
pop
addr16
xchg
xchg
lock
adc
xchg
pop
jl
ret
mov
xchg
outsl
add
and
and
mov
mov
sbb
inc
pop
outsl
dec
adc
popf
cmp
sti
mov
fsts
sbb
jmp
xor
into
mov
out
call
xchg
idivl
jmp
incb
not
sub
mov
jns
fistl
lret
data16
sub
push
les
xchg
mov
lcall
xchg
lods
jae
pushf
jp
cltd
bound
ja
scas
push
mov
dec
fwait
movsl
add
ss
or
ficomps
add
mov
jp
call
dec
xlat
pop
sub
lret
sbb
jo
call
push
loope
push
rcl
aas
dec
push
or
jae
shl
xchg
scas
ficompl
or
popfw
scas
nop
je
stos
cmp
fstps
shrb
mov
popf
ljmp
rorl
lret
inc
stos
incl
push
in
mov
out
push
mov
adc
inc
pop
stos
inc
and
clc
add
mov
and
stos
xor
xor
cs
shll
mov
aas
mov
push
inc
mov
cmpb
notb
rcrb
pop
dec
dec
in
xor
inc
imul
jge
cltd
cmp
pop
sub
imul
into
imul
out
adc
rclb
roll
fstpl
pusha
aam
movsl
push
stos
jo
dec
xchg
dec
ja
xor
sbb
les
dec
dec
dec
pop
popf
in
pop
shrb
mov
cli
push
xchg
jo
jp
stos
jp
cmp
jl
mov
or
mov
punpckhdq
test
push
fbld
hlt
inc
out
mov
scas
in
mov
enter
cmp
dec
lcall
jmp
cmp
jp
popf
nop
or
cmpsb
dec
xchg
out
pop
adc
jl
js
mov
pop
inc
push
test
and
jmp
sti
test
into
ficompl
out
pushf
shlb
arpl
cwtl
jp
loop
inc
fwait
pop
cmpsl
xor
test
pop
cs
mov
imul
data16
push
push
xor
mov
push
inc
mov
in
aaa
test
inc
lods
cmp
inc
iret
in
scas
pusha
nop
jns
add
sbb
lret
add
aam
mov
lods
iret
mov
mov
add
cmpsl
cmc
sbb
xchg
xchg
sbb
shrb
fwait
inc
xchg
push
or
sub
andb
pusha
jbe
daa
ret
dec
iret
lret
sbbb
aad
or
addr16
popa
jp
mov
xor
xlat
mov
rcll
cmp
cmp
repnz
stos
aam
inc
cs
das
ja
sub
push
adc
inc
mov
mov
fsubs
stc
daa
shlb
dec
sbb
arpl
ret
mov
aam
ds
push
push
push
iret
arpl
xor
xor
cld
xor
pop
xorl
les
nop
arpl
or
jno
or
test
mov
cmp
ss
inc
int3
or
mov
adc
pop
push
mov
shll
outsb
sbb
ds
xchg
das
fimuls
outsb
lods
xor
adc
inc
push
mov
imul
fbld
jbe
out
push
das
imul
sbb
mov
fcomi
ja
rcll
pop
sub
mov
pop
mov
push
clc
popf
inc
inc
lret
jno
push
or
lock
or
push
loop
push
mov
filds
mov
lods
inc
cmp
xchg
in
les
fs
daa
fistpl
mov
in
and
add
adc
out
cltd
and
mov
and
push
fdivrl
loop
push
jnp
inc
mov
ja
mov
jns
and
cmp
fs
dec
xchg
mov
popa
push
adc
jae
std
jb,pn
or
cs
stos
and
sbb
mov
es
int
repz
inc
call
mov
and
pop
es
pop
push
jo
sar
xchg
in
mov
xchg
ret
faddl
inc
jne
pop
pop
xchg
cmpsb
lock
xchg
xor
xor
out
xchg
sbb
and
inc
std
xchg
aam
sub
jo
pop
inc
fnstenv
mov
xor
rorl
mov
push
scas
sarl
adc
inc
pusha
cmp
mov
orl
pop
dec
jns
sbbl
stos
push
clc
mov
push
clc
loope
out
cltd
sbb
mov
lods
push
pop
ljmp
push
xor
fldl
js
in
in
jge
aas
aad
mov
movsb
jb
mov
mov
mov
xlat
out
push
es
sbb
xor
xor
cmc
push
adc
jnp
xlat
xchg
mov
mov
mov
push
dec
repnz
sub
cs
sub
fwait
cmp
cmp
add
cmc
out
stos
movsb
lods
iret
dec
jb
push
add
mov
xlat
notl
adc
and
lcall
adc
cmpsl
fisttps
xor
insl
sbb
xor
add
fs
mov
out
fadds
fiaddl
mov
pop
dec
adc
sbb
mov
movb
cmp
push
mov
test
test
ja
int3
rclb
push
in
iret
cmp
adc
xor
mov
int
ret
std
jle
shll
std
jae
mov
xchg
inc
jno
xchg
dec
stos
jae
in
test
lock
lret
or
loopne
cmpsl
and
sbb
pop
sub
push
pop
mov
adc
mov
mov
ljmp
out
mov
jno
inc
neg
push
add
cmovp
aaa
push
pop
pop
fistpl
iret
nop
repz
dec
inc
popf
ljmp
fstl
pop
imul
fucom
cmp
or
imul
cmp
call
orl
idivl
xchg
loopne
outsl
sahf
push
jmp
insb
mov
pop
in
enter
xor
sahf
sub
inc
xchg
jle
sahf
sub
cmp
cltd
lea
adc
fstpl
inc
xor
inc
iret
fcmovnbe
or
jmp
shrb
pushl
rclb
jge
aas
dec
fsubrp
femms
cmpsb
jge
rclb
push
push
pusha
imul
popa
push
arpl
mov
out
lods
addr16
cs
call
inc
mov
outsl
and
dec
push
sub
sti
repz
xchg
push
add
call
sbb
inc
inc
dec
adc
jp
hlt
cmc
pop
xchg
or
sub
andb
loop
cmpsb
cmpsl
js
add
test
sub
or
aas
mov
stos
mov
int3
push
xlat
dec
pop
push
fcom
lahf
jne
test
fldl
bound
jae
repz
fmuls
pop
stos
in
sub
decl
push
loopne
inc
cmp
hlt
nop
jb
xor
popa
cmp
test
daa
js
sbb
aad
adc
jl
mov
fistpl
fdivl
ret
push
outsb
push
ror
sahf
aam
out
xchg
loope
scas
lcall
jbe
mov
fimull
dec
add
add
xor
push
sub
insb
jp
icebp
xor
sbb
les
mov
xlat
je
test
push
pop
fidivs
mov
clc
cmpsb
adc
inc
and
leave
or
int
mov
mov
jge
in
ret
pop
cmp
and
xor
es
data16
pop
hlt
dec
xchg
dec
iret
xchg
inc
cmp
mov
negb
push
lods
fistl
test
lahf
jae
sti
clc
sub
adc
ds
mov
mov
jns
and
add
mov
decl
mov
fadds
cmp
cs
cmp
and
jp
idivl
fisttpl
mov
cmpsl
sub
je
sub
fucom
push
mov
adc
inc
dec
in
imul
cwtl
enter
add
mov
stos
xchg
sub
cltd
mov
fcomp
in
fists
hlt
scas
mov
pushf
push
sbb
push
mov
pushf
loop
xlat
sub
cmp
inc
or
mov
sbb
mov
xchg
rclb
outsl
bound
xor
and
repz
int
mov
fsubp
test
jle
mov
xor
push
movsl
lret
in
lret
cmpsb
sbb
mov
cs
jae
clc
cmpsl
mov
adc
dec
sub
sarb
jb
jno
sub
xchg
in
sub
jae
ja
jbe
fstpl
sbb
dec
imulb
mov
push
into
ja
push
dec
cmpsb
in
shl
adcb
mov
arpl
idivl
fs
xchg
sbb
mov
xor
popa
jns
xor
mov
scas
out
lock
pop
jg
mov
sbb
pusha
insl
adc
addr16
fistpll
test
inc
out
sub
jae
mov
rclb
ss
imul
jmp
adc
icebp
test
dec
jb
pop
mov
xchg
pop
repz
mov
dec
enter
push
lock
sbb
inc
jbe
mov
jne
lds
dec
inc
lcall
enter
xor
mov
in
in
xchg
inc
clc
jge
mov
cmp
jae
jl
xchg
insl
add
ret
lods
push
cmc
enter
and
std
imul
test
test
aaa
inc
cmp
jb
add
mov
rclb
ss
les
adc
mov
dec
push
pop
and
ljmp
test
icebp
out
out
aad
jg
push
or
cmp
adc
cmp
fsubr
mov
loop
xor
aaa
les
fnstsw
vorpd
repz
add
and
xchg
ja
movsl
andl
mov
dec
inc
push
cmp
push
push
cmp
xor
add
xchg
lcall
sbb
jno
mov
mov
xchg
lock
push
inc
cltd
jbe
in
daa
xchg
sub
aam
sbb
mov
jmp
adc
stos
dec
lcall
mov
in
mov
shlb
dec
cmp
jae
jp
or
pop
add
adc
fwait
addr16
insl
sbb
cltd
cld
aad
sub
jmp
sub
test
pop
cld
out
jmp
mov
fdivl
cmp
pop
cmp
mov
inc
pop
cmp
xchg
daa
mov
mov
loope
rolb
test
ja
out
pop
cli
jp
fwait
movsl
ret
adc
pop
aam
mov
shrl
faddp
sub
data16
or
pop
lock
fwait
and
mov
cmp
pop
pop
mov
dec
cwtl
and
inc
cmp
adc
pusha
adc
xorl
icebp
es
jge
add
inc
cld
fdivrs
fadd
push
imul
popa
mov
aam
dec
push
or
int
cmc
add
int3
jl
jmp
lcall
cmp
insb
dec
lcall
add
xor
jb
xchg
repz
xchg
mov
loop
mov
mov
mov
or
or
adc
sti
mov
orl
out
push
aam
pop
dec
addr16
aas
add
cltd
je
mov
jle
aad
dec
xor
shrl
js
push
push
cmp
mov
out
push
sub
pushf
dec
and
cwtl
push
cld
jne
fwait
add
mov
lds
adc
add
jecxz
push
and
icebp
adc
dec
lahf
mov
test
rcrb
jno
and
mov
xchg
push
ficomps
push
fcomp
loopne
mov
or
pop
imul
push
mov
insb
jae
call
call
jns
pop
out
fwait
or
cmpsb
decb
xchg
lahf
aam
je
dec
jmp
stos
sbb
hlt
push
ret
das
xor
shlb
lds
retw
xor
lcall
jo
cmpl
repz
lock
jecxz
insb
or
push
lods
ret
ret
jno
mov
jno
out
mov
pop
adc
pop
or
cli
mov
push
jecxz
xor
pop
cmpsl
cmp
cltd
xchg
in
into
sahf
enter
fidivrl
inc
testl
xor
call
mov
mov
inc
fucomip
mov
pop
xor
and
mov
jecxz
lcall
add
jo
xchg
ljmp
cmp
sbbl
dec
cs
sub
mov
cmpsb
jecxz
iret
in
or
dec
cli
rcrl
add
or
decb
xlat
shll
test
call
cli
in
and
push
mov
das
lods
mov
ficompl
fstp
shll
xacquire
sub
dec
dec
into
fists
out
addr16
and
xor
dec
pop
xchg
cwtl
dec
xor
push
push
mov
cmp
call
xchg
jno
leave
dec
mov
jg
sahf
out
dec
fistl
sbb
sub
stos
mov
fs
pusha
movsl
jo
add
pop
lret
repnz
ret
and
xlat
mov
cmpb
lahf
icebp
and
mov
mov
add
adc
stc
cmp
insl
add
mov
xchg
movsb
and
mov
in
and
push
jne
xchg
not
test
pop
mov
push
push
out
inc
dec
mov
out
das
xchg
mov
sbb
sbb
lods
cmp
push
mov
xlat
daa
and
dec
divl
inc
xchg
or
inc
ja
cltd
jbe
call
fcmovne
pop
jmp
xor
dec
test
aam
loopne
xchg
mov
test
jecxz
mov
or
repnz
aad
or
and
add
into
mov
outsb
inc
das
rcll
lret
aas
inc
or
rclb
xchg
js
mov
push
pop
adc
in
test
leave
test
rorl
dec
pop
dec
mov
fisttps
mov
dec
stos
jae
xchg
jbe
mov
repnz
ret
mov
lret
sbb
mov
fnsave
mov
inc
dec
cmp
cmpsl
mov
sahf
out
and
test
adc
cs
sbb
repz
pop
push
out
repnz
bound
popf
pop
mov
shll
mov
inc
sahf
scas
mov
xchg
mov
sbb
xchg
out
pop
cmpsb
sbb
adc
jbe
add
into
ficomps
hlt
and
and
and
test
dec
fdivl
xchg
ljmp
jnp
inc
push
push
outsl
cmp
inc
mov
sar
push
sahf
dec
mov
lahf
js
cmp
out
out
dec
push
mov
mov
lret
andb
jno
shrb
addb
cmpsl
jo
adc
ds
sbb
lock
cmp
out
ss
inc
imul
loop
add
fisttps
dec
mov
insb
sar
mov
js
loope
mov
xor
and
cmpsb
cmp
subl
fidivrs
jne
addr16
fisubs
out
push
mov
pop
push
adc
decb
ljmp
fiadds
sub
sub
pop
rol
or
popf
adc
and
sbb
mov
xlat
fadd
jnp
mov
data16
ffree
push
insl
mov
add
xlat
adc
subb
add
pop
addr16
fistpl
jo
into
mov
fs
hlt
push
test
and
test
cmpsl
ss
mov
adc
mov
enter
sub
mov
aam
inc
sbb
mov
jmp
inc
inc
or
xchg
inc
dec
iret
shr
outsb
and
aaa
sub
aad
cmp
jmp
mov
pushf
xchg
out
cmp
mov
jb
xchg
mov
test
mov
movsl
adc
xchg
data16
jge
or
add
mov
mov
push
push
test
jnp
repnz
in
add
in
mov
push
shlb
mov
into
popf
or
or
mov
adc
fwait
ljmp
shlb
inc
mov
xor
adc
mov
sub
pop
mov
xchg
lret
test
xchg
xchg
push
cld
lret
pop
push
ja
inc
jne
lods
test
lds
push
pop
cmp
cmp
xchg
sbb
pusha
pop
fistl
fbstp
or
imul
xor
jbe
jg
xchg
and
lahf
pop
ja
in
scas
scas
or
push
shrb
pop
jnp,pn
push
mov
mov
shrl
repz
pusha
dec
xor
int3
push
test
mov
movb
add
push
aaa
cmp
repnz
add
pop
inc
jmp
fimuls
outsl
gs
mov
mov
sub
stos
and
or
cmp
nop
xchg
bound
and
jge
in
xor
nop
push
jecxz
loopne
outsl
leave
jne
mov
mov
inc
ret
mov
test
leave
shlb
xor
cmp
push
inc
pop
lods
mov
outsb
lock
sti
daa
insb
adc
or
inc
sub
loope
adc
xchg
xchg
aad
fnstenv
mov
int3
xchg
movsl
enter
mov
outsl
movsl
gs
add
pop
sbb
out
and
inc
das
lea
lea
xor
or
mov
ficoms
add
xorl
je
mov
jge
repnz
pop
loope
adc
xchg
adc
mov
sti
loop
and
fwait
pop
imul
push
xchg
fbstp
xor
sbb
dec
scas
ret
push
aaa
mov
push
out
cmc
cmp
push
std
mov
dec
push
xchg
pusha
jl
push
fmul
xor
mov
push
lcall
inc
adc
pop
cmp
jb
out
stc
jmp
xor
pop
cmp
imul
jl,pt
dec
aaa
xchg
ret
jl
dec
rol
movsb
rcr
xlat
push
push
inc
dec
fildll
in
leave
jno
push
sub
mov
adc
cmpsb
and
push
sbb
cmp
imul
aam
addr16
cmpsb
nop
jp
pop
mov
lcall
int3
lret
movsl
icebp
mov
mov
and
mov
mov
je
ja
dec
push
test
inc
and
cmp
ret
rorb
xor
cs
mul
mov
sahf
inc
test
cmp
rcll
sbb
mov
sti
mov
idivb
adc
mov
mov
mov
ret
jp
out
test
jns
pop
int3
add
mov
movsl
stc
push
iret
and
out
aam
icebp
sbb
test
mov
jb
push
fidivs
and
and
mov
stc
popf
add
and
in
sbb
cmpsl
loopne
std
pop
push
mov
fsincos
jmp
stc
insl
clc
mov
pop
loop
jo
int
mov
fucom
pop
lahf
leave
push
push
xor
push
out
sbb
or
push
or
negl
jne
mov
mov
mov
js
mov
inc
mov
mov
int3
ds
dec
pushf
je
mov
rcrb
mov
ficoml
testb
sub
mov
sub
mov
sbb
adc
mov
test
pop
push
mov
and
fbstp
sub
adc
cli
xchg
jb
js
andb
xor
inc
cmc
movsbl
arpl
js
mov
xor
pusha
rorb
call
cmpsb
and
imul
sarl
fsubs
jb
dec
jnp
dec
push
insb
es
xchg
mov
insl
cmpsl
cmp
xchg
jge
mov
dec
push
sbb
mov
sub
dec
jnp
fwait
in
mov
mov
repz
mov
call
add
xchg
adc
jecxz
pop
inc
orb
jg
xchg
test
push
mov
pop
pusha
push
das
mov
addb
push
leave
sub
pop
jge
push
or
loop
cs
scas
mov
icebp
scas
inc
xor
xchg
dec
ret
inc
add
or
pop
jge
call
xor
jl
outsl
into
xor
loope
mov
pop
shll
dec
mov
and
pop
jp
ret
sub
int3
in
ret
mov
add
jp
in
mov
mov
xchg
adc
push
and
leave
int
adcl
popf
adcl
jmp
cmp
push
sbb
mov
adc
mov
jnp
push
jmp
mov
sub
sub
pushf
and
jne
mov
inc
mov
sti
int
push
push
xchg
dec
fiadds
test
aad
test
in
repz
popf
push
in
adc
call
push
xchg
movsb
outsb
or
adc
jp
sarl
inc
ljmp
mov
stos
push
shll
insl
addb
jne
mov
inc
cmp
out
outsb
xor
into
mov
outsb
or
sub
mov
ss
and
hlt
shll
pop
stos
cmp
xor
inc
fwait
push
enter
aaa
hlt
sbb
jl
arpl
not
out
push
cmp
cmp
sub
push
mov
nop
in
mov
jmp
or
or
push
cmc
adc
xor
lock
push
cld
cmc
cmp
sbb
inc
sub
out
cmp
pop
xchg
shlb
lret
test
mov
inc
sbb
sub
dec
sar
repnz
insb
movsb
xchg
fisubrs
or
ljmp
loopne
adc
hlt
les
jno
test
and
dec
icebp
jo
adc
xchg
jnp
inc
out
aam
jecxz
fsubrs
jnp
in
jnp
int
std
pop
jge
sbb
xchg
aam
ror
cmp
mov
pop
jl
jne
shrl
jmp
cmc
adc
push
mov
sub
aam
in
pushf
je
fidivl
fwait
lahf
jg
in
scas
mov
jg
push
fimuls
jnp
ret
push
mov
fwait
sbb
iret
pop
in
daa
mov
jne
hlt
lahf
adc
xchg
bound
out
sbb
mov
arpl
fsubr
jp
arpl
xor
adc
hlt
and
mov
or
lahf
jnp
cmp
shrb
cmpb
popf
xchg
fiaddl
bound
icebp
jnp
fdivrs
pop
mov
xchg
dec
enter
rclb
fsubs
out
insl
and
push
pop
jno
or
ss
into
mov
pop
mov
xor
sub
popf
sbb
dec
lea
push
repnz
cmp
mov
mov
adc
mov
mov
push
ret
xchg
cmp
xlat
push
popa
sbbl
inc
add
inc
pop
sar
cltd
cmc
jmp
cli
adc
push
or
pop
jle
movsb
mov
and
pop
mov
cmc
jnp
or
out
lods
aas
jbe
push
jmp
cld
out
cmp
xor
hlt
addr16
pushf
sub
mov
fiaddl
xchg
adc
inc
mov
hlt
push
adc
cmpsl
mov
fsubl
call
mov
jbe
mov
xor
xchg
adc
dec
add
es
ljmp
out
repnz
push
int3
pop
adc
mov
xor
mov
stc
jle
fsubrl
cmc
jnp
dec
pop
into
xchg
cmp
addr16
jbe
mov
push
std
fs
mov
in
les
sub
adc
outsb
scas
jne
inc
jecxz
sbb
sub
test
inc
cmp
adc
mov
stos
in
sub
negb
pop
mov
sbb
std
push
stc
and
mov
or
cmp
adc
loope
cmp
mov
clc
xchg
add
outsl
push
popa
adc
xlat
pop
fmuls
insl
gs
popl
ljmp
mov
add
loopne
xor
xor
ja
jg
mov
sub
test
sub
cmpsb
scas
or
jecxz
int3
inc
outsb
fmul
int3
and
fs
sbb
mov
dec
ljmp
pop
and
mov
jnp
nop
or
push
pop
pop
nop
loop
icebp
fmuls
adc
fistl
pop
pop
cwtl
xlat
into
mov
jl
mov
mov
loop
sarl
movsl
ds
repnz
mov
out
ss
adc
sub
movsb
sbb
aas
fwait
add
divb
sub
int3
jg
xor
aas
rorb
daa
ds
into
mov
push
or
dec
stos
aam
push
pop
arpl
int
dec
or
jno
arpl
sahf
lods
in
aaa
gs
jns
mov
mov
push
leave
enter
pushf
in
rcrb
xor
and
sbb
xchg
push
arpl
stos
test
sbbl
and
mov
or
and
xchg
xchg
adc
pop
add
clc
std
mov
cmp
lahf
mov
test
inc
fcoml
adc
xchg
rcll
loopne
mov
lahf
mov
adc
adc
lock
push
idivb
adc
inc
xor
cmpsl
scas
push
ljmp
stos
pop
fucomp
xchg
loope
mov
cmp
jmp
test
adc
sub
les
xchg
test
xor
sub
mov
sbb
xor
lock
cs
aad
mov
mov
mov
nop
mov
pop
insl
outsl
and
xor
pop
shrb
fwait
pop
test
push
sub
addr16
test
movsl
fdivs
mov
sub
gs
pusha
xchg
inc
xchg
inc
in
mov
aam
adc
mov
std
dec
sbb
xor
add
ret
sub
outsb
int3
lods
add
lret
ljmp
mov
mov
outsb
adc
aad
sub
loope
lock
push
aad
clc
mov
nop
pushf
mov
pop
movsb
jmp
dec
xchg
scas
xor
adc
std
std
push
inc
cmp
imul
aas
sub
pop
push
dec
mov
sbb
std
add
iret
scas
push
xchg
mov
jo
repz
inc
mov
inc
rcrb
inc
mov
sbb
imul
xor
leave
out
loope
xchg
jo
outsb
jmp
mov
sbb
add
push
push
add
or
iret
sbb
lods
test
bound
sahf
push
cld
in
xor
fcmovnu
bound
in
cld
inc
dec
sub
or
test
pushf
lahf
call
jge
sub
nop
inc
sub
xchg
ficompl
pop
mov
jmp
pop
mov
lcall
push
dec
scas
pop
mov
pop
and
cmp
ljmp
xchg
xchg
pop
pop
rcrl
sbb
js
sub
out
das
data16
xor
int
test
and
or
jl
sbb
add
xchg
lret
addr16
repz
adc
add
or
aam
push
push
hlt
in
std
inc
inc
mov
cmp
ficoms
addr16
fisttps
aam
push
add
and
mov
insb
lock
mov
sbb
mov
bound
xchg
dec
lods
in
dec
ss
scas
inc
jnp
imul
popl
mov
mov
imul
lret
sub
repz
scas
pop
mov
sti
inc
addr16
cltd
mov
out
nop
xchg
fnsetpm(287
jne
mov
fistpl
shufps
add
cld
aaa
xchg
inc
xor
out
jae
sub
gs
xchg
mov
addl
pop
shl
add
pop
data16
sti
pop
lock
inc
cmc
cmp
fnsave
arpl
les
pop
scas
or
std
and
push
in
xor
fisttps
dec
popf
or
push
int
mov
std
cmp
sahf
in
mov
mov
cltd
mov
xor
sbb
add
jecxz
dec
cld
jno
movsl
and
mov
and
test
mov
sbb
xor
sahf
rorl
leave
outsl
lods
mov
sbb
dec
cmpsb
dec
push
out
leave
and
jae
adc
jae
mov
dec
stos
jnp
and
sbb
test
fucomi
or
sbb
pop
adc
jne
inc
mov
setl
loope
pop
inc
in
cltd
push
loop
orl
mov
cmpsl
hlt
push
sahf
lock
mov
xchg
cwtl
cs
inc
addr16
popa
pusha
mov
push
sbb
sub
loopne
lahf
cli
xor
hlt
mov
fwait
inc
fisubrl
sub
xor
xchg
or
inc
arpl
stc
pop
add
hlt
in
scas
shr
insb
mov
adc
addr16
fisttpll
sub
mov
mov
xchg
mov
fcoml
shrb
jge
sbb
xchg
or
adc
test
int3
in
inc
leave
mov
jb
mov
ss
fcomp
mov
inc
mov
loopne
int
sub
jg
mov
js
cltd
or
test
mov
pop
stos
or
test
push
das
push
movsb
decl
sbb
inc
sbb
mov
xchg
out
pop
sbb
jecxz
xchg
aas
push
push
icebp
mov
push
out
rol
xchg
inc
cmp
cwtl
shll
mov
sarl
or
and
flds
test
out
add
xor
jno
lods
xor
xor
fmull
movsl
ja
cltd
push
popa
dec
test
dec
js
addl
je
or
data16
aas
mov
xlat
push
mov
cmp
test
xor
cmpsl
jbe
cltd
xchg
inc
addb
mov
movsb
jecxz
add
push
je
and
nop
dec
xor
jl
sbb
rcr
test
push
es
push
ds
inc
add
sbb
jl
test
xor
flds
aam
and
fnstcw
add
cld
mov
or
pusha
shr
outsl
sbb
push
and
or
xor
imul
jbe
push
lods
jl
movsb
call
cli
and
outsb
xor
push
loope
out
jg
mov
jbe
ret
pop
cli
pop
jae
rol
and
push
jns
inc
loop
cmp
gs
add
push
sub
xor
das
pop
xorl
popf
icebp
je
stos
into
lock
aad
jp
jno
sbb
xor
psubusw
repnz
movsl
test
pop
or
fistpll
adc
dec
pusha
xor
mov
int
jge
les
adc
jg
ds
xchg
sub
cmp
pusha
negl
lret
stc
adcb
sbb
xchg
cvtps2pd
mov
cwtl
pop
mov
nop
and
inc
into
cwtd
xor
fwait
cld
out
lahf
hlt
fildl
int
cld
push
mov
mov
ficoml
daa
jns
daa
scas
jns
xor
jb
test
mov
inc
rolb
test
int3
pop
mov
or
and
std
pop
scas
push
int3
sub
inc
xchg
cmc
jecxz
sub
sub
insb
fs
shll
movsb
pop
call
inc
in
divb
test
push
adc
insl
add
mov
pushf
repz
jecxz
movsb
pop
inc
hlt
fistpl
inc
out
xor
nop
lea
adcb
add
xor
lds
push
mov
xchg
cmpsl
or
jmp
mov
xor
out
gs
bound
mov
mov
jbe
in
cmp
leave
push
imul
in
cwtl
and
jecxz
inc
mov
cmp
out
sub
test
add
mov
cmp
sub
xorb
dec
pop
movsb
xchg
push
sahf
fcmovu
xchg
stc
ret
fstpl
jecxz
fisubrl
cltd
mov
movsl
into
jecxz
hlt
das
aaa
pop
and
inc
pop
sti
mov
gs
in
popa
pop
mov
jb
push
cmp
cwtl
mov
mov
ja
lods
roll
sbb
mov
mov
lret
inc
sub
dec
ja
imul
fs
mov
call
adc
sub
sahf
flds
in
or
dec
push
jge
popf
hlt
shll
out
or
loopne
repnz
jbe
and
pop
test
jno
adc
outsb
loopne
ljmp
sbb
ds
push
mov
int3
pushf
ficoms
or
mov
faddl
in
lods
dec
xchg
pushf
xchg
xchg
ret
inc
jo
or
push
cltd
sarl
cwtl
sub
ss
pop
xchg
mov
sbb
test
xor
mov
jno
test
sarb
cltd
loop
enter
outsb
xchg
rolb
into
aad
sti
shlb
sub
and
add
xchg
mov
sahf
adc
mov
pop
pop
xchg
xchg
cmc
dec
or
or
imul
xor
outsb
inc
push
lock
pop
les
sti
dec
lods
push
outsb
mov
scas
out
mov
mov
int
test
add
stos
mov
dec
pop
mov
popa
out
dec
test
movsb
aad
push
mov
divl
in
cmp
pop
arpl
pusha
adc
subl
lahf
sbb
jne
xchg
adc
lods
addl
xchg
and
into
mov
sub
fimuls
add
xchg
sub
stc
das
sbb
in
mov
sub
xchg
xchg
xchg
push
cmpsb
xlat
cmp
sbb
sti
cmp
sub
jb
xchg
clc
loope
sbb
mov
repnz
jnp
mov
ret
inc
xor
out
dec
in
mov
xchg
adc
push
fmuls
mov
call
sub
cs
inc
scas
push
push
sahf
enter
push
testb
arpl
xchg
mov
mov
pop
loopne
stc
shlb
cmp
je
inc
sbb
mov
mov
inc
shrl
popf
test
pop
lods
cli
jecxz
sbb
ficomps
sub
iret
jmp
frstor
cld
add
outsb
push
rol
outsb
pop
sbb
ss
jno
sarb
mov
lret
fbld
dec
mov
arpl
fs
pushf
pop
ret
mov
movsl
push
dec
shll
xchg
push
add
lock
fisubrs
rolb
adc
jno
aaa
int3
data16
notl
push
imul
jnp
and
aas
sub
sub
xchg
imul
pop
std
aas
outsl
pop
sbb
out
mov
pop
xor
mov
and
xchg
repnz
add
lds
pop
icebp
jbe
fsubrs
imul
mov
cmp
and
std
sbb
push
cli
into
cmp
push
loopne
jle
push
fdivr
xchg
lcall
repz
in
fstps
mov
add
sbb
std
jbe
dec
cld
push
add
adc
sub
out
jns
pop
dec
daa
pop
add
icebp
subb
cli
mov
fs
rcrl
xchg
lods
inc
cltd
sarl
ror
adc
mov
movsl
cltd
or
repz
imul
fdivrl
lret
cmpsl
or
jno
push
cli
jmp
xchg
mov
and
add
lds
ret
addr16
imul
cwtl
add
cmpb
lret
pop
dec
pop
adc
jl
je
divb
adc
jb
shlb
lock
or
push
or
hlt
mov
enter
mov
std
jo
ja
aaa
mov
out
push
cmp
push
xchg
xchg
xchg
negb
dec
pusha
push
pop
xchg
bound
addr16
xor
setnp
popa
xor
mov
and
inc
xchg
ficoml
mov
notl
or
fldt
xchg
ds
imul
ja
sub
mov
and
or
out
adc
and
divb
jle
or
mov
aam
insb
jno
outsb
pushf
push
or
jae
pop
fsubrs
sbb
inc
xor
roll
cmp
mov
mov
jno
mov
inc
or
test
add
scas
jae
cmp
into
test
aad
cmp
adc
addr16
out
loope
je
dec
enter
jae
sbb
pop
push
mov
into
pop
sub
das
jp
pop
add
jle
mov
insl
xchg
add
aaa
into
xchg
xor
je
shr
push
in
cmpsb
fwait
loop
lahf
fdivrl
push
mov
in
push
fsts
adc
lcall
loopne
ficomps
xor
and
filds
xor
mov
iret
dec
bound
sarl
pop
stos
mov
fnsave
mov
inc
sub
es
adc
daa
mov
sarl
ds
lock
aam
jecxz
fnstenv
xor
movsb
pusha
stos
jnp
paddusb
sub
xchg
fadds
and
xchg
test
xor
sbb
scas
adc
dec
mov
xchg
test
adc
xor
push
pushf
or
fmul
pop
orl
pop
sahf
shll
sti
fsubs
or
ret
les
insl
pop
aad
inc
pop
jns
sbb
fdivr
in
add
repz
inc
sub
mov
xlat
xchg
adc
adc
adc
fwait
mov
dec
cld
pop
add
cs
ja
pop
fldz
and
sbb
sub
mov
mov
mov
movsb
adc
sbb
add
paddusw
dec
aaa
in
subl
stc
aad
push
jns
xchg
push
shrl
mov
aaa
cltd
pop
adc
xchg
cmp
ljmp
cwtl
fwait
pushf
mov
mov
mov
dec
aam
mov
add
mov
push
adc
imul
jns
jno
shlb
leave
les
cmp
out
xchg
loop
jne
divl
loopne
fnsave
scas
xor
adc
dec
rcll
push
icebp
dec
add
and
mov
push
in
arpl
gs
test
xlat
mov
add
pop
nop
sub
xlat
movsb
pop
test
pop
sbb
js
and
xchg
fildll
jmp
jp,pt
cmp
pop
mov
cmp
out
lock
push
pushf
in
sti
fwait
aaa
add
adc
pusha
mov
shll
adc
repnz
add
test
idiv
movsl
enter
mov
popa
frstor
iret
rorb
repnz
fdivr
cmp
jb
movsl
push
xchg
xchg
mov
fucomp
fstl
les
and
insb
cmpsl
sbb
cwtl
inc
cmpsb
adc
pop
mov
in
sub
and
daa
pop
mov
rorb
adc
mov
xor
testl
orl
push
testb
idivb
sbb
mov
mov
ljmp
lock
outsb
es
inc
mov
fmulp
mov
cltd
int
jl
mov
mov
mov
add
xor
std
sbb
mov
lret
pop
lods
mov
iret
andl
jne
mov
data16
sti
mov
leave
sub
int3
cmp
pop
cmp
jmp
int
or
xor
mov
outsl
pop
insb
push
pop
jmp
inc
pop
jne
mov
movsb
xor
and
lods
cmpsb
jecxz
pop
outsb
jnp
and
sub
std
aaa
int3
pushf
pop
insl
push
shr
jp
mov
xchg
es
jle
ljmp
mov
les
dec
test
cmp
in
inc
or
sti
stc
push
pop
ss
clc
jo
jns
leave
out
add
sub
bound
mov
cmc
adc
push
and
mov
ret
push
aam
in
ja
add
insb
pushf
push
into
cmp
xor
push
in
push
cmp
fists
cltd
cwtl
mov
movsb
mov
dec
jmp
inc
aad
push
xchg
cmp
mov
mov
std
cld
sbb
mov
push
rclb
and
jne
add
addr16
or
mov
dec
mov
int
lret
cmp
into
and
les
sbb
adc
mov
push
mov
fistl
sub
sbbb
inc
add
sub
stos
arpl
out
xor
insb
cmp
adc
cmp
dec
add
aad
lock
xchg
cmp
add
mov
and
inc
aad
movsl
add
mov
mov
xchg
negb
les
jmp
pusha
pop
inc
shll
push
ljmp
cltd
mov
xorl
repnz
stos
xor
jne
je
pop
jnp
cli
mov
testb
mov
jb
mov
out
jecxz
sbb
cmc
adc
rclb
arpl
roll
sbb
push
sub
cmp
iret
cmp
int
decl
orl
je
data16
push
or
jae
xchg
dec
iret
insb
imul
dec
pop
inc
cmp
jo
mov
mov
jp
insl
add
mov
add
mov
je
pop
ficoms
fadd
rcrl
scas
lods
dec
xor
add
test
aas
popa
dec
add
cmc
pop
pusha
push
mov
jl
into
jmp
int
lods
addr16
mov
push
aad
sbb
jno
sub
aad
jno
add
sbb
dec
popf
test
push
addr16
movl
push
and
std
jb
loopne
inc
jnp
sti
adc
inc
and
lret
add
jmp
push
sub
mov
aam
sbb
xchg
xchg
mov
mov
push
shr
sarl
mov
in
call
jecxz
inc
inc
push
and
lahf
pop
clc
jge
sbb
mov
imul
pop
pop
mov
insl
ss
inc
mov
test
lods
xchg
fldenv
out
sub
xchg
dec
dec
iret
inc
arpl
aad
sbb
mov
pop
and
int3
data16
or
aaa
mov
sbbb
decl
in
orb
into
jbe
mov
and
stos
js
fstpl
loop
xchg
movsl
pop
pop
lods
xor
cmp
dec
pop
shrl
inc
jo
sub
movsb
pop
loopne
jp
lds
loope
ja
jp
xor
xchg
flds
movsb
imul
or
inc
mov
lahf
out
mov
cmp
gs
mov
dec
adc
mov
cmp
inc
lods
and
jecxz
imul
clc
pop
iret
fcomi
outsl
jbe
movsb
aad
pushf
fidivrl
mov
rcrl
jecxz
or
pop
sub
jmp
cld
and
fsubrl
outsl
xchg
cltd
adc
cmp
ja
loop
sarl
push
xchg
out
and
xchg
sbb
adc
mov
cmc
mov
aam
push
lds
push
in
jae
ret
movq
push
inc
push
nop
xchg
lds
sbb
mov
mov
mov
call
ss
xchg
repnz
movsl
lock
test
add
xchg
pop
negl
fsubl
pop
lahf
fidivrs
test
inc
cmc
inc
cltd
fndisi(8087
cwtl
mov
shlb
sub
lods
insl
lods
push
inc
mov
data16
iret
incl
jmp
sbb
repnz
cmp
pusha
jle
addr16
or
sti
fcoms
sub
push
in
jb
add
cli
lret
inc
clc
jle
cmp
lcall
addr16
cmc
outsl
aas
ret
call
jbe
adc
xchg
jb
loop
sub
add
lods
xchg
push
shll
testb
jb
in
sbb
or
inc
adc
jle
shrl
loope
push
iret
xchg
sbb
and
cmp
cmp
mov
mov
stos
mov
loope
sub
rolb
lea
flds
insb
insl
xlat
stos
aad
push
cmp
je
sbb
or
sub
mov
das
test
outsb
jbe
ljmp
sbb
scas
mov
shl
shl
push
inc
lcall
push
xlat
mov
xchg
ret
ret
lods
ss
mov
inc
sub
int
lret
ds
aas
xor
mov
jo
cmp
xchg
jns
mov
add
in
dec
pop
xor
pop
int3
je
xor
mov
ja
cld
sti
in
movsb
lods
bound
out
adc
bnd
inc
test
iret
roll
mov
jns
cli
aam
pusha
sbb
jg
icebp
mov
or
xor
add
fwait
inc
or
aad
cmpsb
leave
mov
adc
mov
cmpsb
out
push
idiv
mov
or
shlb
jns
fdivrs
fidivrl
inc
jo
lock
add
inc
out
rclb
mov
lods
ljmp
sbb
popa
push
in
loope
xchg
lock
sbb
jnp
xor
mov
stos
sub
cltd
adc
jmp
push
add
addb
test
jbe
sbbb
mov
dec
dec
cmpsb
loope
test
fisubl
aam
lods
mov
iret
mov
pop
push
mov
lea
les
mov
mov
testb
out
out
xchg
xchg
dec
xor
lret
sub
add
adc
aad
xchg
mov
sbb
out
fistpll
ss
lods
lock
jle
push
jb
adc
dec
jno
dec
outsl
jb
cli
xor
jne
mov
outsb
imul
stos
xchg
sahf
ret
mov
pop
push
dec
arpl
sti
push
push
jne
cmpsb
sti
movb
ds
inc
mov
insb
sbb
jo
sub
lahf
dec
fildl
in
test
cwtl
inc
pusha
lea
out
popf
sbb
lcall
mov
sbb
pop
jae
and
push
imul
push
pop
or
aad
mov
arpl
ds
mov
mov
mov
pop
xor
int
imul
xor
mov
addr16
mov
pmaxsw
cmpsl
sub
sti
inc
cmpsl
sub
jecxz
bound
aas
lahf
push
fcompl
or
scas
mov
bound
pushf
das
mov
xor
mov
pop
push
xchg
push
call
dec
pop
xchg
push
mov
dec
xorl
add
push
xchg
sub
jge
push
xor
sbb
out
orl
inc
leave
sbbb
in
cmp
cli
jnp
mov
xor
jecxz
lret
pop
mov
call
fbld
inc
sub
jno
and
push
shll
rorb
mov
lahf
mov
in
pop
xor
lock
nop
dec
mov
inc
fdivrp
mov
xchg
daa
mov
sub
sbb
xor
das
mov
and
push
std
jmp
sbb
inc
jecxz
test
sbb
popa
mov
adc
mov
dec
mov
jle
out
jb
mov
lahf
push
insb
cmp
aas
sahf
mov
lahf
mull
lock
loop
xchg
loope
out
pmulhuw
and
loop
xlat
push
cmp
cli
sbb
iret
mov
dec
insl
and
out
jae
or
hlt
xor
call
loope
jo
inc
mov
push
mov
rorl
push
mov
lahf
stc
inc
xchg
outsb
int
sub
movsb
sahf
aad
repnz
inc
and
addr16
mov
fisubl
dec
incb
sbb
adc
pushf
loop
push
cmp
mov
sub
in
rcl
add
mov
shrl
daa
jns
lret
cld
into
test
fisttpll
leave
sbb
xor
arpl
call
gs
mov
xchg
jmp
push
cmp
daa
jbe
test
pop
sysret
mov
ss
test
ja
inc
pusha
cmp
in
jp
stos
test
ja
mov
loope
outsb
and
js
iret
xchg
insl
repnz
in
mov
rcrb
lods
mov
sub
pop
or
push
cs
push
xor
addr16
xor
fidivrs
into
cmp
fwait
xor
inc
into
leave
enter
mov
mov
lcall
adc
adc
leave
adc
lret
or
cmp
xchg
inc
enter
mov
mov
cmp
test
loope
xchg
sub
pop
jbe
repnz
jbe
incb
and
xlat
dec
sti
bound
dec
dec
push
jo
stc
std
adcb
in
aaa
dec
mov
sub
mov
mov
adc
js
pusha
insl
test
outsb
xchg
xchg
int3
out
add
xchg
mov
lds
ficoms
sbb
jle
dec
testl
push
adc
repnz
adc
cmp
mov
insl
cmpsb
jmp
scas
movsl
roll
xor
sbb
fnsave
js
mov
daa
pop
or
cmp
popa
push
int3
lahf
push
je
ljmp
pop
mov
lds
das
out
mov
push
sbb
ljmp
pop
push
pop
jmp
out
add
imul
pop
lret
out
push
shl
xchg
loopne
aaa
sbb
dec
fs
lcall
rcll
xlat
in
lcall
or
sub
pop
jl
fwait
stc
xlat
mov
outsl
mov
mov
mov
std
mov
shrb
jge
mov
fsubr
sub
movsl
pop
inc
add
or
jns
cmp
cmp
sahf
mov
cmp
fisubrs
dec
jo
sarb
es
les
movsl
lcall
push
divl
filds
mov
insl
out
cmpsb
pushf
sub
cmp
cmp
out
repz
push
dec
cmpsl
inc
aam
xchg
lock
les
movsb
leave
push
subl
xchg
gs
je
leave
dec
popa
fildll
lcall
mov
pop
dec
cmp
mov
int3
hlt
mov
cmp
pop
ud0
stc
jne
sub
adc
jbe
aaa
push
xor
jae
cmp
and
pusha
std
imul
dec
in
loop
adc
xor
lret
mov
jne
pop
xor
xchg
sub
mov
xchg
test
fdivs
cwtl
sarl
mov
movsb
sub
inc
xchg
jbe
and
les
out
mov
xchg
cmc
adc
dec
inc
inc
dec
in
mov
inc
push
mov
cli
xchg
insl
jl
mov
mov
sub
insb
push
mov
movsb
jg
mov
frstor
sbb
sub
insb
cs
mov
fcoms
inc
pop
mov
arpl
js
lods
jns
push
xor
push
mov
popa
pop
aaa
and
inc
stos
shlb
xchg
stos
mov
test
sbb
negl
xchg
cld
push
out
push
inc
inc
std
push
adc
sub
mov
jmp
movsl
js
sub
and
pop
or
cwtl
add
and
push
add
add
lods
cltd
jle
sysenter
fwait
push
call
stos
lock
sti
jge
insl
bound
lret
inc
xchg
xlat
aad
mov
outsl
mov
jno
mov
jecxz
pop
jge
jp
loopne
cmp
shll
jle
in
mov
add
or
popf
iret
mov
fiaddl
orb
es
push
ss
push
hlt
jns
loope
repz
das
sbbb
lahf
gs
push
mov
cmp
dec
push
stos
sub
cmp
in
jg
insl
mov
or
xor
or
out
pop
sbb
in
xchg
shll
sti
out
pop
inc
and
pop
dec
sub
sbb
dec
enter
cmc
xchg
xor
idivb
cmpsb
push
out
ds
shrb
ficoml
mov
sub
xchg
repnz
jns
in
sbbb
and
fcoms
mov
mov
je
push
ficoml
aas
sub
pop
push
or
dec
pop
mov
cmp
popf
sbb
pop
ds
test
std
pop
imul
sti
mov
rol
jno
jge
hlt
mov
xchg
cld
std
and
inc
testb
int3
inc
shlb
leave
jne
push
cmp
mov
outsl
jmp
iret
int
push
sbbb
jecxz
aaa
xlat
xor
insl
rclb
xchg
leave
xor
mov
popf
cmp
daa
push
addr16
or
jmp
jle
in
das
in
out
les
pop
ds
cld
mov
jle
add
rorb
xor
shll
rcrl
int3
push
mov
push
int
dec
rolb
aad
and
loopne
pop
pusha
pop
push
out
lret
pushf
divl
jl
inc
xchg
jp
mov
into
xor
scas
inc
je
or
outsb
std
jle
jne
inc
gs
xchg
push
cmc
cwtl
jg
or
adc
xor
stos
xor
inc
dec
and
cmpsl
fistpl
inc
imul
jecxz
sbb
stos
in
inc
cmp
or
lods
out
mov
punpckldq
cld
mov
das
pop
ljmp
std
xchg
inc
arpl
arpl
cmpl
out
aaa
cmpsb
daa
jl
ret
inc
push
out
leave
sub
rcll
movsl
sbb
iret
insl
dec
fidivl
dec
and
mov
sti
jg
pop
push
jmp
movsb
scas
xlat
call
pop
xor
cmp
popf
test
mov
jns
lret
or
pop
cmp
jle
je
mov
mov
cld
or
pusha
push
mov
sub
fidivrl
push
call
inc
jne
ds
jp
sbbb
add
movsb
es
jbe
int3
out
push
or
jmp
and
stos
dec
icebp
outsb
inc
imul
xor
sbb
imulb
stc
xchg
dec
inc
movsl
and
lcall
mov
inc
pop
movsb
pop
pusha
mov
mov
or
xor
inc
jo
jg
in
sahf
mov
jbe
sub
pop
popa
or
test
adc
lds
mov
addr16
andl
mov
iret
sub
push
sbb
mov
popf
iret
pop
icebp
push
adc
jnp
adc
mov
test
in
or
sbb
pop
clc
int
mov
xchg
test
ficomps
scas
das
je
into
int
sbb
push
adcl
in
dec
lret
pop
ljmp
outsb
out
push
xchg
hlt
lahf
fisubrs
inc
jns
jne
and
mov
push
sub
or
fldt
push
xchg
xor
aaa
test
subb
adc
mov
sarl
jg
movsb
push
mov
mov
outsb
xor
inc
iret
push
add
aam
push
das
in
add
or
jne
sbbl
cmp
jle
adc
xchg
ret
push
sub
int3
ljmp
imul
push
inc
daa
rolb
jl
icebp
adcb
in
shll
jae
adc
fbstp
mov
pop
xacquire
lret
insb
movsl
mov
lock
mov
stos
inc
sbb
ret
mov
add
or
mov
xchg
sahf
aam
repnz
cwtd
mov
call
jecxz
add
sbb
sarl
push
and
mov
out
mov
aam
es
push
xchg
jo
sub
bound
xchg
dec
mov
mov
roll
sbb
stos
inc
bound
jnp
test
add
mov
mov
stc
inc
test
jp
add
fstpt
adc
cmpb
in
dec
pop
movsl
mov
xchg
loope
and
pop
cmp
cli
jl
inc
test
pop
xchg
loope
jge
sub
inc
jb
stos
test
out
test
sahf
push
inc
and
and
dec
outsb
mov
ret
mov
push
scas
or
in
scas
fxch
mov
leave
daa
mov
and
clc
mov
pop
shll
rcll
push
cmp
xchg
sti
into
movsb
jno
and
out
sbb
add
dec
pop
sbb
fld
or
into
push
nop
stc
rcrl
inc
adc
popf
cs
les
pushf
xchg
jmp
adc
xchg
sbb
movsb
xor
out
dec
xchg
xlat
push
sbb
xor
adc
subl
xlat
sti
subb
sti
add
stc
movsb
ss
push
popa
adc
add
push
sub
add
sahf
rcr
aas
inc
lahf
sub
ret
inc
mov
filds
jne
and
daa
leave
loopne
outsl
dec
mov
mov
jne
or
sbb
es
jp
adcb
xchg
scas
sbb
inc
or
ljmp
mov
xchg
hlt
repz
fidivrs
xor
insb
lds
push
cmc
xor
ret
insb
fsubrs
jge
movsl
cltd
adc
nop
sub
fs
std
pop
pop
sarl
in
cld
pop
dec
rcrl
paddsw
call
push
sub
pop
pop
adc
push
lea
fisubs
push
pop
cmp
leave
mov
push
jno
cmp
mov
xchg
adcl
add
push
and
fcoms
mov
sbb
movsl
in
pop
fsubl
jecxz
jg
or
das
add
ds
test
cmpsl
arpl
stc
out
addl
mov
ret
les
add
jns
imul
sahf
push
test
sub
jb
lret
adc
fbld
dec
and
inc
lcall
pop
sbb
push
jb
xor
add
mov
loop
mov
cmp
fiadds
scas
mov
lea
inc
adc
aam
lods
pop
imul
aam
xor
lcall
ret
dec
lcall
pop
fwait
sub
xchg
mov
xor
or
add
or
in
push
fnstcw
inc
in
xchg
sub
jo
clc
movsl
mov
dec
push
sub
jecxz
out
ljmp
dec
xchg
sub
in
mov
jge
and
or
cmp
rep
jl
lea
jle
fs
xchg
orl
mov
xor
leave
clc
aam
sub
movsl
scas
out
push
test
into
or
pop
xchg
aam
call
jp
insb
std
push
imul
jo
outsb
pusha
add
push
sti
and
adc
dec
add
inc
sub
into
mov
sub
xchg
mov
mov
je
icebp
outsb
movsl
pop
add
jae
dec
inc
shr
cs
jg
fsub
imul
push
lds
lds
push
in
ja
pusha
cmp
jne
mov
in
sub
imul
out
jge
in
xlat
cs
mov
scas
jmp
pop
adc
or
push
nop
bswap
loopne
mov
sub
adc
pop
test
popf
sub
out
mov
xchg
mov
adc
loopne
xchg
or
icebp
and
ret
mov
jnp
or
add
pop
mov
rorb
xor
pop
sub
sarb
cli
or
ja
movsl
mov
adc
or
out
cmc
mov
loop
in
pop
call
rol
xor
jmp
push
push
sub
inc
adc
mov
adcl
test
or
sahf
inc
sbb
push
lret
test
mov
push
jns
inc
push
mov
sbb
arpl
pop
inc
dec
lock
xchg
sarl
push
enter
sbb
or
sub
dec
out
and
aam
das
sahf
dec
mov
and
in
and
xchg
rcll
popa
xlat
test
in
cmpsl
clc
in
pop
nop
inc
incl
incb
adc
jb
mov
cmp
sti
pushf
in
dec
and
pop
fimuls
or
addb
js
inc
das
and
ret
daa
adc
cli
pop
mov
inc
jns
roll
push
dec
add
inc
mov
pop
lods
outsl
cmp
inc
xorl
and
lock
xchg
jae
push
sbb
inc
test
mov
pushf
insl
mov
test
xor
fmulp
fmull
addr16
enter
xchg
loop
and
lcall
add
nop
mov
push
add
or
cmp
bnd
add
stos
scas
stos
adc
loop
fwait
sbb
scas
mov
or
stos
adc
popa
inc
pop
and
es
fmul
cmp
dec
mov
fidivrs
jnp
shl
jae
sub
mov
sub
addr16
aas
xor
sbb
jbe
xor
dec
adc
mov
push
mov
lods
mov
out
xor
sbb
push
or
add
lahf
dec
movsb
loope
xor
jl
mov
fsts
mov
sub
push
sarl
hlt
in
shl
inc
rcrb
cmc
repnz
dec
push
mov
fbld
sub
pop
mov
push
lock
add
adc
xor
sbb
mov
pushf
sbb
lea
sub
popa
pop
and
mov
or
jmp
test
cmp
mov
add
mov
imul
mov
scas
inc
popf
fcmovb
cld
mov
mov
mov
sbb
and
lret
dec
fistps
lock
jl
dec
sub
xchg
xchg
outsb
mov
jns
popa
in
shl
jge
seto
and
mov
in
out
aas
sarl
xchg
ret
pop
sbb
pop
dec
stos
in
iret
or
outsl
ljmp
inc
inc
and
add
xchg
aam
sbb
in
sub
or
rcll
pop
xor
lods
xchg
jmp
sbb
xor
add
insb
push
push
xlat
push
bound
lret
loop
lock
pushf
lock
mov
cmp
push
shlb
add
movsl
jecxz
sbb
stc
inc
push
stc
dec
in
xchg
push
insb
mov
cmp
jl
adc
and
dec
mov
mov
adc
and
cli
cmpsl
repz
je
test
xchg
add
mov
fs
or
inc
cmp
orb
sbb
dec
lret
ljmp
cmp
and
test
sub
cmp
mov
push
mov
aam
pop
rcl
adc
cs
dec
cmp
arpl
std
ds
jg
les
pop
stc
js
dec
adc
sub
pop
adcb
push
repz
inc
pop
sbb
inc
and
push
cmp
jle
repnz
and
or
mov
stos
jo
xor
adcb
push
ja
push
inc
jbe
mov
inc
ret
mov
adc
scas
sbb
dec
jne
push
jbe
dec
test
cwtl
mov
pop
call
or
push
pop
or
sub
add
pop
lcall
cli
fdivr
out
mov
mov
inc
sub
jge
fwait
and
mov
sbb
xor
jns
jno
push
fwait
cltd
rol
sbb
ds
xor
inc
ds
js
in
dec
in
cmp
or
addr16
inc
push
mov
aas
cli
arpl
adcl
pop
jmp
rcll
and
push
pop
divl
rcrb
cmp
std
test
mov
lods
lret
xor
sbb
setb
mov
enter
lret
sub
xor
stos
push
push
in
or
lcall
out
sub
mov
lock
aad
ds
dec
bound
pop
je
cmpsb
jg
mov
mov
xor
nop
das
test
push
mov
pop
push
jns
xor
call
dec
in
push
jecxz
xchg
jecxz
sub
push
pop
sub
push
push
push
inc
mov
mov
mov
out
jbe
ret
in
and
inc
aaa
mov
sub
movsl
or
not
sahf
sub
sarb
vpslld
out
push
sti
mov
sbb
cmp
cmovnp
mov
push
sub
pop
mov
cwtl
inc
push
mov
dec
dec
pusha
inc
aas
loopne
jmp
mov
outsl
fwait
js
xchg
leave
dec
jb
jl
mov
dec
push
dec
out
das
lret
jle
mov
adc
inc
lcall
out
mov
fisubs
js
lcall
mov
pop
addr16
cld
into
fcompl
pop
iret
ja
stc
jle
push
into
rcrb
sarb
mov
nop
lea
push
add
out
mov
push
mov
orb
sub
mov
jge
loop
mov
call
xorb
or
mov
jns
rolb
sarl
mov
lret
xor
xor
dec
mov
and
ds
adc
mov
xchg
fsubl
mov
jmp
shl
sahf
add
into
int
ret
pop
xchg
ja
mov
push
lods
xchg
add
dec
into
sub
add
cmpsl
aaa
inc
or
inc
jno
cwtl
ds
std
dec
loope
lret
clc
scas
fimull
sub
dec
into
adc
push
lahf
jge
icebp
ret
jle
mov
jle
pop
adc
pusha
mov
mov
cmp
lds
sbb
loopne
mov
cmp
ret
and
pop
fsubr
xorb
cmp
fadds
dec
cmp
xor
pop
out
inc
mov
and
jbe
xorb
and
jbe
lret
xor
fldlg2
pop
push
mov
nop
mov
dec
push
adc
push
cmp
lds
das
jg
sbb
pusha
pop
scas
cmpsl
xchg
lock
dec
adc
jle
int3
push
jae
fcomps
dec
js
dec
mov
or
aam
inc
pop
xor
and
lret
pop
mov
sbb
sbb
fisttps
pusha
pop
dec
adc
and
jge
push
loopne
push
pushl
xor
ret
fisttpll
out
or
xchg
sbb
adc
sub
jg
xchg
cwtl
repz
mov
jns
push
xor
pushf
cmp
fcoms
and
out
sub
lret
dec
rorl
sbb
fs
scas
pop
or
add
pop
sbb
cmp
sbb
ljmp
rep
in
cmp
aad
aam
dec
sar
flds
pusha
dec
pusha
jmp
sbb
xor
outsl
mov
stc
int
stos
mov
sub
insb
pop
ret
push
scas
sbb
clc
xchg
mov
movsb
jmp
add
xchg
dec
int3
idivl
fsubr
sub
frstor
enter
xor
cld
imul
shlb
pusha
mov
inc
xlat
out
lcall
outsl
push
stos
mov
stc
arpl
sub
push
dec
leave
sub
dec
jae
pop
add
adc
inc
stc
negb
pop
outsb
fbld
mov
mov
mov
push
push
sti
outsb
xchg
sbb
inc
test
fnstsw
pop
sub
sti
in
push
or
jp
out
push
shrb
scas
cmp
xchg
or
xchg
loop
mov
in
cmpsb
and
and
in
test
das
inc
je
and
inc
daa
scas
fsubr
sub
jb
push
jbe
pop
rcr
bound
push
sbb
add
mov
cmp
push
cmp
gs
data16
sub
sbb
bound
fsubr
sbb
lret
les
imul
cmp
mov
mov
insb
mov
mov
inc
cli
fldl
adc
jne
fdivs
ds
xchg
mov
jae
mov
ljmp
lahf
mov
xchg
mov
fwait
or
push
inc
pop
xchg
stos
in
bound
cs
dec
xor
lock
cmc
ja
cmp
loope
rcrb
sarb
pop
adc
and
fstps
pusha
aas
ja
loopne
mov
movsl
jns
adc
int3
es
sbb
cmp
mov
mov
cltd
inc
out
movsb
adc
jno
scas
add
xchg
enter
adcl
push
jne
inc
arpl
dec
xor
adc
pop
and
cmc
hlt
xor
stos
das
xchg
xor
adc
xchg
mov
dec
cmp
test
sub
mov
dec
mov
fdivrs
push
pop
pop
jb
cld
xlat
and
xchg
and
push
mov
cmpsb
xor
mov
push
mov
lea
jne
xor
aas
push
pop
mov
addr16
out
repnz
aas
rclb
dec
outsl
mov
jb
lret
fcoms
mov
pusha
cmp
lret
jp
loop
adc
mov
loope
mov
fdivrp
mov
inc
fcoms
pop
sbb
shlb
js
push
lret
jp
sub
daa
fldt
daa
dec
mov
mov
xor
out
ja
int
mov
rcrb
rclb
push
movsl
popf
jge
xchg
inc
pop
mov
jl
mov
inc
cmpsb
push
test
or
adc
xlat
aaa
push
subl
jo
das
or
dec
fs
stos
xchg
cmpsb
pop
pop
add
cli
and
aam
jp
lahf
pop
cmc
mov
mov
xchg
sahf
mov
mov
outsb
orl
test
jge
mov
cmp
and
loop
xchg
sahf
push
sub
mov
inc
ret
sub
push
push
cmpsl
test
sbb
jmp
js
inc
mov
and
xchg
addr16
ret
xchg
notl
popa
jae
add
fs
cs
dec
leave
icebp
mov
add
adc
add
jmp
insl
in
sbb
mov
int3
lods
xchg
or
adc
ljmp
mov
push
adc
push
enter
inc
loope
iret
cmp
je
dec
xor
addr16
movsl
daa
adc
inc
xchg
cmp
adc
mov
cmp
fisubs
js
sahf
jo
out
dec
mov
dec
or
dec
and
mov
adc
jle
in
fpatan
cmc
cli
adc
fcoms
test
lcall
std
cli
xchg
lahf
imul
std
pop
cwtl
ja
pop
sbbl
add
aas
adc
int3
insl
es
aas
in
test
or
cmpsb
fwait
xor
in
dec
jle
imul
sub
and
icebp
les
pop
outsb
pop
mov
fwait
or
sarb
aam
jno
adc
loopne
pusha
push
mov
test
sarl
aas
pusha
push
ucomiss
mov
aam
es
sbb
inc
sbb
loopne
test
jle
test
lret
je
push
popa
add
sub
xchg
xor
push
ljmp
pop
xchg
sbb
push
cli
sbb
test
xor
ja
shl
xchg
pushf
mov
shlb
insb
sub
mov
inc
cmp
dec
mov
cltd
pop
or
sbbb
outsb
lds
lock
mov
negl
dec
pushl
xchg
adc
loope
repz
xchg
test
subl
ljmp
jns
add
sti
fsin
movhps
inc
sub
inc
sub
std
jecxz
sbb
jnp
xchg
xor
pop
xor
mov
int3
scas
lea
mov
mov
inc
lahf
pop
cmp
imul
mull
adc
out
xlat
pop
jns
mov
xchg
out
dec
cmp
lock
and
das
lock
popa
shr
mov
and
lds
scas
rorl
test
sub
jno
iret
mov
stos
das
mov
xchg
dec
in
ret
cmp
pop
out
cmp
add
sub
pusha
es
jecxz
jecxz
jle
and
lret
xchg
mov
cmp
pop
mov
cmp
test
orb
enter
mov
je
mov
fildl
ja
jle
fistpl
fbstp
mov
cmp
add
mov
add
js
movsl
nop
mov
das
icebp
mov
out
xchg
xor
mov
test
xor
es
idivl
cmpsl
inc
mov
fstl
adc
movsl
mov
iret
mull
push
pop
jmp
xorl
ja
dec
mov
add
jo
fs
jmp
sbb
bound
sarb
bnd
lds
daa
sbb
lock
inc
shlb
xor
jno
int
dec
aad
fstps
repz
dec
popa
cmp
into
aaa
lods
in
jg
pusha
out
frstpm(287
adc
in
sub
lds
pop
adc
out
cmp
testb
adc
in
movsb
pop
ss
insl
out
push
sub
sub
xor
cmp
pop
jne
mov
mov
xchg
jne
fimuls
js
adc
arpl
pusha
into
outsb
cmpsb
inc
add
mov
mov
cmp
xchg
jg
pop
cmp
mov
aam
test
xor
mov
mov
mov
sub
test
in
lret
inc
in
iret
sbb
cmpsl
mov
dec
pop
inc
push
mov
lods
rorb
push
fimull
add
pop
jmp
mov
out
mov
js
mov
aad
or
repnz
mov
test
sbb
pushf
sub
enter
mov
repz
xor
movsl
dec
lret
loope
mov
adc
push
push
xor
cmp
or
pop
mov
or
inc
cmpsb
sub
scas
xor
std
shrb
pop
and
mov
sbb
jge
rol
out
in
mov
lahf
inc
push
mov
int3
push
out
gs
ljmp
push
stc
rcl
ss
inc
inc
aad
inc
dec
addl
or
xchg
and
cmpsb
mov
sub
test
stc
cmp
testl
lds
stos
jg
cs
pop
shl
js
les
rcr
jne
sub
pusha
rcrl
push
cli
dec
or
xor
les
jne
call
add
out
bound
xchg
std
out
cmp
xchg
dec
outsb
movsl
insl
mov
xchg
pop
sahf
out
imull
aam
push
sbb
std
fisttpl
pop
cmp
fmull
dec
enter
je
sub
hlt
jg
xor
xchg
push
cmp
dec
mov
jmp
loopne
shlb
mov
xchg
fists
cli
test
and
sti
aas
xchg
arpl
mov
sti
dec
jb
pop
mov
xor
lret
repz
xorl
fs
mov
pop
stc
lods
sbbb
inc
imul
popa
inc
loopne
pop
jl
dec
shrl
xchg
aaa
movsb
add
movsl
pop
repnz
jb
movsb
mov
mov
lret
xlat
jecxz
sub
loope
loope
add
or
pop
test
pop
stos
sub
pop
iret
xchg
jae
bound
and
sbb
jge
mov
push
adc
or
adc
cmp
pop
pop
dec
mov
pop
mov
sub
mov
xor
push
lods
pop
aam
loopne
fsts
addr16
mov
ja
jg
add
adc
pop
dec
dec
cmpl
mov
pop
jecxz
rep
ss
push
and
dec
jge
test
jl
in
pop
fs
mov
sahf
or
push
mov
jb
push
int3
ss
lds
fwait
sub
cwtl
popa
inc
and
mov
dec
lock
into
inc
hlt
pop
mov
shrl
repnz
jne
mov
mov
shll
push
cmc
pop
aam
push
pop
jo
sub
push
pop
cmp
faddl
cmp
notb
push
outsb
push
adc
sbb
sbb
dec
inc
inc
inc
cmp
push
mov
sbb
setge
mov
cmp
and
das
and
fistpl
or
push
add
mov
mov
stc
or
and
or
jl
xor
sbb
cmpsl
popa
adc
movsb
movsb
insl
rcrb
mov
dec
scas
add
shrl
jnp
mov
jecxz
pop
adc
cmpsl
mov
xchg
aaa
enter
fcomip
fidivl
adc
jg
rorl
test
leave
mov
mulb
popa
pop
mov
jle
repnz
cltd
push
jge
inc
push
xchg
and
out
mov
adc
scas
cmp
add
inc
or
fld
add
add
pop
lods
mov
cmp
imulb
cmp
dec
loopne
es
add
sub
jmp
and
iret
movsl
xor
lahf
cld
fisubl
insb
std
out
xor
jecxz
adc
cld
dec
ljmp
dec
lret
fsubrl
jo
pusha
into
xchg
push
lock
testb
enter
pop
xor
xchg
pmaxsw
and
out
adc
cltd
cmp
lods
xlat
dec
adc
loope
pusha
mov
push
push
cmpsb
push
jo
push
push
dec
xchg
xchg
mov
jae
mov
add
std
int
lea
in
fucomi
clc
pop
sub
jbe
out
out
push
popf
fsubp
cltd
fwait
repz
add
mov
shr
add
jle
or
je
sbb
cli
outsl
inc
call
pushf
aas
lock
lock
cmp
mov
outsl
orl
es
inc
mov
and
leave
loopne
or
in
mov
lret
mov
mov
mulb
sti
adc
stos
popa
jle
jne
push
repnz
inc
jmp
aad
imul
loopne
xchg
sbb
cmp
fldl
dec
jge
scas
pop
dec
ljmp
lea
or
sub
push
cmp
xor
cmp
aam
loopne
mov
ljmp
cmc
or
xor
xor
pop
lret
aaa
scas
addl
push
es
jbe
xchg
aaa
into
xchg
scas
and
mov
sbb
push
push
js
std
cmpsl
sub
jo
mov
xlat
fmuls
jne
rorb
lods
push
movsl
cmp
mov
mov
lcall
icebp
mov
push
add
and
adc
dec
jae
hlt
popa
mov
sub
fmul
and
push
add
les
imul
icebp
or
dec
pusha
mov
mov
lret
repnz
stc
fdivrs
xor
sub
rclb
sbb
test
addr16
jns
lea
mov
adc
mov
dec
dec
sahf
xchg
into
xor
out
lahf
fs
dec
mov
loope
mov
mov
or
dec
cmpl
adc
sbb
pop
outsb
scas
int3
inc
lret
inc
scas
sbb
xor
test
or
cmp
in
sub
sbb
insl
sub
sti
outsl
in
cmp
dec
push
out
decl
jl
out
mov
subl
in
pusha
sbb
push
fildl
int3
or
push
dec
lea
or
dec
push
jmp
xchg
daa
jecxz
call
push
fildll
xor
out
cmp
lods
js
inc
fbld
rcr
sub
cli
push
rcrb
adc
sbb
ss
fistpl
sahf
js
pop
add
inc
ljmp
jo
rcrb
adc
test
inc
xchg
jmp
add
dec
loop
or
in
call
in
or
lret
es
xor
jno
dec
call
xchg
push
shrl
cmp
jl
lock
xor
pop
push
adc
push
repz
pusha
jae
cmp
add
mov
sbb
mov
pop
mov
adc
pop
lock
popf
ret
addr16
pop
cltd
jns
pusha
mov
mov
mov
bound
cmp
retw
push
orb
mov
icebp
int
das
lods
sub
pushf
adc
and
push
cs
add
cmp
cwtl
int3
hlt
sbb
pop
gs
test
sarl
pop
xor
sub
in
jns
lret
and
fistl
in
aas
or
loope
ja
jp
subb
or
orb
rorl
scas
cwtl
loop
xlat
rcll
add
adc
cmp
mov
push
dec
xchg
and
cld
push
stc
push
out
ret
jo
mov
andb
xor
xor
sbb
inc
adc
xor
cmp
icebp
xchg
jb
daa
jecxz
jmp
jno
jnp
cmp
add
fsubrp
fidivs
lods
inc
lret
and
mov
lock
je
loopne
sahf
pop
jno
pop
push
scas
xchg
iret
test
addr16
fwait
movsl
xor
arpl
addr16
stc
xor
cmp
xor
out
push
lock
out
scas
scas
addr16
jle
leave
sarl
js
hlt
stc
out
jbe
xor
fsubs
movsb
lods
test
push
xor
popa
pop
sub
das
or
jnp
fwait
add
scas
adc
int3
cld
cs
or
mov
dec
jae
fldpi
je
xlat
jbe
cmpsl
or
loop
pusha
adc
mov
sbb
outsl
in
push
or
addr16
push
arpl
sbb
shrb
push
loop
adc
xchg
or
icebp
mov
shl
add
mov
pop
mov
add
cs
and
loopne
ss
adc
gs
pop
add
or
test
std
mov
and
ljmp
sahf
insl
pop
xor
or
cmpsb
mov
dec
cmp
leave
mov
daa
test
pushf
mov
scas
dec
push
push
call
into
fcmovne
mov
or
imul
incl
lea
aaa
iret
mov
pop
push
int
imul
adc
mov
xchg
adc
adcl
inc
inc
mov
jmp
std
dec
pop
adc
jmp
add
dec
sbb
movsb
fcomi
test
push
or
push
dec
and
cmp
cmpb
and
and
sbb
inc
in
xchg
inc
cmc
inc
in
addr16
scas
insb
out
scas
jmp
nop
or
adcl
inc
lds
cli
sbb
mov
mov
sti
or
xchg
add
mov
je
jecxz
scas
jecxz
hlt
cwtl
test
and
jg
push
fstps
inc
inc
out
adc
cwtl
push
jae
testb
ja
pusha
sub
pop
sarl
inc
mov
fstpt
jge
inc
and
cmpsl
scas
sbb
ret
xchg
iret
test
mov
pop
push
leave
gs
jne
not
rcrl
daa
fucomi
inc
sbb
xchg
popf
sub
decl
sbb
sub
int3
rcll
mov
sbb
adc
push
aad
or
popf
mov
mov
pop
cld
mov
add
outsl
out
push
mov
mov
mov
cmc
inc
cmp
daa
daa
mov
cmp
push
pop
es
cmp
je
sub
negl
mov
lods
fidivs
negb
pop
loope
xchg
or
push
aaa
lcall
fcmovne
std
pushf
cltd
inc
ja
in
mov
pop
mov
cmp
repnz
popf
cmp
jns
xlat
pusha
pop
dec
rep
jmp
adc
into
and
adc
insl
push
hlt
xor
loope
js
loopne
ds
mov
sbb
ret
popa
or
sbb
loope
or
fisttpll
jmp
test
cmp
adc
push
pop
jnp
jnp
lret
insl
call
xchg
push
mov
adc
jle
push
cmp
sub
notl
adc
int3
lea
ret
push
call
sbb
inc
cmp
push
repnz
ja
push
pop
jmp
out
into
inc
add
scas
repnz
cmpsl
cwtl
xor
lock
dec
ret
lret
adc
xchg
sub
int3
das
push
xchg
cmp
popl
sub
sub
sbb
test
call
insb
and
adc
xor
add
aad
cmpsb
and
scas
inc
dec
outsl
es
dec
in
xchg
mov
dec
xchg
repnz
xor
mov
add
and
lahf
lods
lds
shl
inc
inc
or
or
mov
test
xchg
cltd
js
and
push
mov
add
fistpll
int3
and
lea
inc
add
xor
pop
lcall
mov
xchg
adc
test
and
popf
out
fwait
xor
jne
imul
sub
arpl
push
fidivs
xchg
or
dec
push
jns
scas
xchg
pop
pop
inc
mov
or
test
cld
testl
ds
push
and
cmp
std
imul
xchg
jno
sbb
push
mov
cmp
jb
rolb
movsl
ja
or
sbb
js
mov
loopw
cmp
xchg
lea
pop
pop
scas
roll
icebp
out
dec
inc
iret
sbbb
sahf
cmc
idiv
icebp
mov
sub
mov
cs
inc
cltd
xor
mov
stc
push
dec
ljmp
test
xor
mov
xlat
cld
cmp
mov
daa
pop
and
cmpsl
or
sahf
ja
sub
xor
jg
pop
dec
jbe
pop
xlat
stc
es
jle
scas
into
std
sbb
pop
adc
or
lods
addr16
mov
outsl
sbb
mov
fdivrl
rcl
sbb
mov
ljmp
jo
bound
inc
push
jge
push
push
pop
rclb
lock
xchg
jae
jbe
dec
hlt
ss
movsb
lret
dec
clc
push
jae
out
pop
fists
sbb
mov
pop
call
lea
loopne
inc
sbb
stos
mov
push
xor
fcompl
repnz
ret
inc
dec
inc
test
pushf
repnz
dec
out
mov
cmp
rorl
in
popf
movsl
sbb
mov
dec
pop
das
int
adc
jge
lea
pusha
add
movsb
test
jmp
jne
daa
sbb
push
sbb
cmp
mov
div
push
test
jno
xor
dec
mov
ljmp
aas
mov
aam
cmp
push
cmpsl
hlt
xchg
popl
inc
inc
push
inc
and
aad
into
pop
cmp
mov
push
bound
cmp
icebp
or
shlb
push
mov
pop
lds
test
xor
jecxz
jo
jp
decl
stos
inc
cmpsl
fwait
inc
xor
stos
pop
jge
cmc
lret
pop
adc
movsl
add
mov
cwtl
push
hlt
into
movb
sub
cmp
dec
xor
mov
out
iret
cli
mov
inc
mov
notl
outsl
sub
into
push
mov
jae
inc
push
popa
movb
mov
add
jecxz
xor
jo
or
call
in
loope
jmp
jae
fwait
mov
xor
fs
pop
dec
add
xorb
rolb
push
int3
mov
sub
gs
fs
mov
das
add
insb
cs
mov
scas
add
pop
addr16
out
call
pop
lcall
mov
cwtl
xchg
jg
hlt
hlt
mov
das
xor
xchg
push
sub
js
iret
xchg
fwait
mov
mov
sarl
aad
divb
fwait
shlb
fisubrs
test
inc
mov
pop
xchg
insb
xor
adc
imul
add
hlt
les
cmp
push
pushf
mov
test
cmc
or
insl
dec
pop
stos
sbb
ret
pushf
js
sahf
add
pop
ret
and
jl
xchg
mov
dec
ret
gs
das
imul
xlat
inc
in
gs
dec
sub
call
je
je
stc
ret
and
jge
inc
mov
push
mov
cld
dec
shrb
gs
xor
and
out
sub
fs
add
xor
test
imul
repz
mov
mov
sub
pop
mov
mov
push
mov
insb
add
jg
ret
insl
insl
popa
pop
adc
cwtl
sub
sbb
pop
js
ret
inc
repnz
xchg
std
loop
jmp
jmp
dec
pop
mov
cmpb
jg
bound
scas
xchg
sub
andl
hlt
jg
test
mov
jecxz
ljmp
mov
rcl
lcall
pushf
cmp
cmp
xchg
inc
dec
xchg
fbstp
dec
xchg
push
mov
sbb
shl
xor
push
fldt
xchg
cwtl
loopne
imul
cltd
mov
std
sti
pop
jg
or
push
mov
ljmp
mov
jnp
inc
and
push
cs
mov
push
pop
push
in
or
mov
aas
lea
jg
repz
out
pop
pop
mov
fstps
ret
testl
mov
pop
lods
shrd
xor
mov
mov
popa
syscall
popa
mov
xlat
rclb
aaa
cmp
mov
insb
inc
roll
pmaxub
testl
or
lock
mov
leave
cmc
fcmovb
push
orl
ss
stos
imul
mov
jns
movsb
fucomip
jp
push
adc
aam
loop
xor
adc
imul
add
pop
cmp
push
gs
in
pusha
int3
mov
push
int3
cmp
push
mov
fwait
jno
inc
daa
cmp
repz
popa
int
push
out
int3
push
xor
xchg
mov
adcb
das
jne
in
outsl
adc
jg
fimuls
push
stos
cwtl
jmp
pusha
push
sar
stos
xchg
mov
pusha
mov
int
jo
loopne
and
test
inc
pop
xchg
pushf
lds
or
leave
mov
add
cltd
les
mov
inc
xor
push
push
lock
je
bnd
jle
mov
sbb
outsb
fdivrl
and
das
mov
out
fs
push
dec
sub
js
mov
cli
lea
out
add
icebp
loope
pop
sbb
push
xchg
push
pop
xor
mov
lock
push
cmp
sbb
and
xchg
and
lods
xchg
movsb
or
jecxz
push
mov
mov
sub
clc
pushf
cwtl
testb
cmpsl
xor
push
movsl
dec
dec
or
push
xchg
lret
mov
pop
mov
and
add
loopne
cmpsb
lcall
in
mov
movsb
add
les
pop
movsl
dec
mov
fdiv
add
and
adc
and
jle
mov
and
pop
popf
aam
dec
mov
cld
add
sbb
xor
jecxz
rcr
mov
and
dec
push
cmp
sahf
sub
dec
xlat
stc
or
jno
add
cmp
addl
sbb
incl
sbbb
fldl
cmp
mov
dec
xchg
fadds
ja
or
push
fs
pop
loopne
js
lret
dec
notb
jecxz
push
clc
out
fcompl
push
adc
icebp
stos
fucomi
js
jnp
out
adc
pop
ljmp
push
xlat
in
dec
test
jnp
test
scas
repnz
test
cmp
out
mov
shll
fistpll
pop
rcrl
jno
push
add
lock
or
pop
daa
sub
and
jl
ljmp
testb
inc
outsl
mov
jbe
imul
add
push
aad
jmp
cltd
fwait
push
dec
mov
add
xchg
mov
sub
sbb
add
push
notb
inc
mov
mov
add
sub
sub
mov
test
nop
lods
mov
popa
movsb
dec
ret
push
shlb
xchg
fsqrt
push
jmp
mov
int3
mov
addr16
mov
push
pop
int3
sbb
dec
mov
scas
mov
mov
outsl
push
test
mov
jae
cmp
loop
fbld
out
push
mov
mov
dec
lret
in
ror
in
or
call
mov
imul
mov
shl
cltd
out
cmp
and
cltd
push
jle
mov
js
adc
adc
jp
fscale
ret
jle
out
stos
ljmp
jo
into
in
arpl
fildll
add
sub
sbb
mov
cli
and
ds
out
dec
nop
cs
mov
and
xchg
out
jge
pop
cmp
pop
aaa
adc
sbb
mov
pop
daa
pop
fidivrs
mov
daa
inc
loope
aad
inc
mov
pop
push
adc
pop
add
movsl
mov
decb
jmp
sub
mov
and
pusha
pop
adc
call
pusha
or
cltd
xchg
aas
sbb
dec
xlat
mov
int3
pop
das
aad
mov
push
cmpsb
popa
fildll
xchg
add
mov
ljmp
popa
mov
movsl
repnz
adc
imul
icebp
lret
mov
cmp
ja
test
cs
sbb
mov
out
xchg
outsl
add
inc
xchg
inc
adc
or
fistpl
out
pop
jae
pop
sbb
sbb
push
aad
jmp
imul
adc
lahf
or
push
ss
inc
fimuls
xchg
pop
nop
cmpsb
test
es
push
cwtl
pop
lret
inc
decl
adc
inc
xor
xchg
jbe
cmp
xchg
xchg
push
xchg
mov
or
test
xor
jo,pt
popf
pop
sub
mov
and
sub
cmp
add
and
xor
and
sub
test
mov
jb
or
popf
add
mov
mov
scas
sar
xor
pop
push
inc
push
and
jmp
nop
scas
in
jo
add
pop
and
xchg
jns
sbb
ret
mov
inc
inc
push
das
inc
add
push
pop
in
adc
push
pop
inc
mov
repz
fs
rcll
mov
mov
leave
push
sar
add
mov
movl
and
sub
pop
fistps
clc
je
add
mov
push
cmp
pop
mov
push
jecxz
xor
outsl
lock
rcrb
daa
cmpsb
mov
add
and
orl
out
sub
in
pop
push
sbb
scas
cli
mov
push
call
pop
int3
xor
js
aaa
mov
cmpsl
inc
ljmp
dec
push
push
inc
adc
mov
adc
cld
push
add
mov
xor
cmpsl
cmp
add
popa
mov
in
pop
and
not
imull
rcl
loopne
imul
lods
inc
test
pushf
lock
aam
adc
mov
mov
adc
pop
cmp
loope
imul
loope
in
int3
add
repz
xchg
mov
popf
ds
mov
cmc
jmp
js
sbb
iret
push
push
adc
and
pop
ror
sub
xchg
test
mov
inc
aam
pop
adc
adc
popa
in
out
push
fnstcw
lock
cmpsb
orl
sub
mov
cmp
ljmp
icebp
lret
aas
aaa
push
dec
sub
lret
pop
jne
decl
dec
gs
outsb
in
sbb
call
imul
sbb
mov
test
shl
push
mov
negl
je
test
test
in
adc
in
xchg
scas
add
lock
dec
cmpsb
add
loope
mov
inc
dec
nop
push
add
fstl
int
push
and
dec
adc
jbe
dec
cmp
sub
int
leave
pop
or
push
stos
rcll
rclb
inc
inc
ss
add
pop
xchg
pop
xchg
adc
xchg
cld
repnz
imul
ss
xchg
in
fdivrp
jl
stos
inc
xchg
addr16
lret
mov
mov
mov
xchg
jns
push
cmp
cmpsl
stos
fsubr
ds
xchg
fmull
mov
xor
mov
add
inc
jno,pn
push
dec
lret
movsb
add
jmp
inc
mov
cmp
gs
xor
mov
cmp
cmp
pop
loopne
push
outsl
xor
adc
orl
jp
fisubl
lret
push
test
aaa
int
bound
fstps
inc
fisubrl
pop
mov
rclb
push
mov
cltd
add
mov
movsl
xor
aas
sbb
es
mov
push
movsb
es
leave
cmc
pop
mov
jno
fsubrs
jbe
pop
dec
andps
push
insb
add
adc
movsl
test
jns
stos
and
fwait
ja
adc
dec
call
add
pop
dec
push
xchg
lret
in
out
mov
add
ljmp
arpl
xchg
clc
inc
sarb
lcall
test
out
pop
stos
inc
sbb
sbb
and
cmpsl
aad
outsb
in
mov
and
hlt
lcall
clc
orb
test
dec
mov
loope
rol
adc
std
sets
fists
inc
mov
repz
jg
test
jmp
inc
das
xlat
pop
cld
cld
aam
inc
push
loope
pop
lcall
xchg
ret
imul
pop
fsubs
adc
jge
and
xchg
rcl
stos
pop
inc
jg
test
and
pushf
xchg
xchg
in
ret
fdivrl
jbe
aam
inc
test
and
insb
int
stc
mov
aam
sub
adc
in
jge
mov
sub
fs
stos
mov
pop
rcll
pusha
cltd
imul
and
mov
and
shrl
hlt
cmpsb
push
test
mov
push
sub
out
rcll
int3
jo
mov
fldl
cmp
cld
xchg
imul
js
cli
test
push
or
mov
into
and
cmp
cld
cmpsl
icebp
inc
lret
enter
cmp
sbb
xor
xchg
xor
cs
cmp
idiv
pop
pop
mov
data16
xor
std
xor
into
and
in
out
sbb
cld
adc
xchg
cmc
fsubrs
add
stos
sti
jnp
std
test
add
push
dec
mov
cmpl
xor
mov
aaa
shll
sbb
xor
in
mov
xor
add
cmp
mul
lahf
in
adc
mov
pusha
push
xor
mov
push
cwtl
jno
jno
outsl
inc
lods
push
jb
sbb
mov
adc
cwtl
cmpsl
mov
out
iret
out
pusha
ds
mov
lret
pop
mov
int
pop
aaa
pop
push
repz
pop
pop
sbb
pop
jmp
push
daa
mov
xchg
xor
hlt
sub
outsl
icebp
add
lret
ja
divb
mov
ret
icebp
aas
inc
arpl
dec
loope
cmp
fisttps
jns
push
pushf
mov
test
clc
pop
imul
mov
lret
jl
dec
rcrb
ret
sbb
push
adc
jecxz
jge
xor
or
inc
push
cwtl
and
cmpsl
xchg
add
and
sub
int
fistl
cmpsb
adc
loopne
pop
int3
pushf
fwait
inc
sub
or
add
jmp
mov
enter
sbb
mov
jo
cmp
out
movaps
jo
xor
test
fdivs
lea
dec
dec
sbb
adc
lret
out
jne
xor
lcall
cmpsl
jo
mov
dec
push
mov
adc
clc
ret
lea
imul
dec
out
cmp
adc
jg
sub
xchg
lock
push
out
movsl
pushf
dec
xchg
ja
fisttpll
test
jne
sti
inc
inc
push
xor
jle
sbb
pop
test
push
pop
inc
fxch
out
push
mov
hlt
pop
fcompl
xchg
and
jge
xchg
sahf
int3
mov
pop
push
jnp
xor
lret
icebp
inc
adc
jle
shrl
mov
add
inc
sub
mov
iret
cmp
loop
xchg
xchg
xchg
negl
jecxz
cmp
push
mul
and
add
repnz
xchg
xchg
cmpsl
scas
pop
or
push
les
mov
mov
xorl
stos
xlat
inc
lret
mov
mov
out
lock
push
bound
test
lock
test
daa
mov
inc
mov
push
ljmp
adc
pop
mov
mov
pop
fildll
adc
lahf
pop
fbstp
sub
int
mov
xor
sub
test
loope
push
test
or
push
fisubl
mov
lcall
fbstp
ss
jl
mov
dec
outsl
into
push
fcoml
sbb
xchg
in
stos
mov
lret
mov
mov
xor
inc
pop
outsl
fisubl
scas
bound
pop
movsb
out
mov
movsl
jmp
push
imul
mov
mov
dec
cmp
or
icebp
movsl
xor
cmpsl
mov
outsb
mov
bound
sbb
inc
rcrl
aaa
repnz
or
jmp
psadbw
sysenter
pmaxsw
jl
jb
pop
aad
js
adc
aas
push
add
fs
mov
jmp
ja
aad
aam
movsl
jl
xor
push
dec
xchg
add
lahf
adc
inc
push
adc
movsl
fidivl
pop
xchg
push
loope
dec
push
popf
das
movsl
sbb
jl
addb
es
sbb
adc
pushf
and
mov
andl
sbbb
cmp
and
xor
dec
mov
call
sub
inc
ud1
ljmp
cmp
das
adc
lret
je
in
push
outsl
add
adc
push
xchg
test
inc
xchg
pop
lds
repnz
lock
fistps
ja
xor
scas
or
xchg
mov
std
push
push
xchg
movb
xor
dec
stc
lret
scas
loope
daa
sbb
fucomip
stos
outsb
cmp
popf
mov
mov
lret
add
outsl
or
popf
popl
mov
andnps
fidivl
orl
cmp
lea
xor
out
paddusw
add
lahf
repz
arpl
xor
ljmp
and
inc
xlat
inc
push
stc
add
xchg
cmp
push
push
mov
cmp
push
rcl
xchg
ret
mov
pop
push
pop
jae
mov
hlt
bnd
inc
lahf
flds
addb
mov
cmp
xchg
popf
enter
in
xorl
cmp
inc
cmpsl
push
cli
pop
cltd
jbe
jbe
insl
cmpl
jmp
xlat
ljmp
out
das
inc
outsb
add
and
pop
sahf
push
repz
inc
push
push
loop
push
inc
jmp
jae
out
pop
mov
sahf
clc
cmpsl
xchg
inc
mov
loopne
xchg
popf
mov
fidivrs
push
inc
xchg
fistpl
in
pop
pop
push
push
popf
dec
fsubr
mov
fistpl
popf
outsb
jnp
sbb
push
mov
or
arpl
jno
sbb
dec
outsb
mov
mov
or
cwtl
in
sahf
sti
dec
mov
cltd
cmp
pop
inc
cmc
iret
insl
push
mov
xchg
hlt
or
test
cmp
adc
mov
push
stc
mov
gs
ja
mov
in
rolb
stc
adc
mov
lret
fwait
imul
shlb
xor
or
aad
xchg
mov
sbb
out
mov
dec
sbb
std
movsb
leave
dec
pop
jle
xchg
fwait
movsl
icebp
sbb
repnz
test
fwait
js
mov
dec
jmp
sub
cli
adc
cs
in
aaa
pop
int
fsubr
fdiv
sub
outsb
mov
push
pushf
sbb
ja
inc
xchg
jne
inc
stos
mov
mov
mov
push
jmp
dec
xor
jbe
lock
lret
pop
repnz
in
pop
mov
or
nop
arpl
push
ja
ljmp
rcrb
fcom
ja
test
push
cmp
push
cmp
sub
jmp
push
sub
add
mov
cli
inc
daa
inc
cmp
in
je
test
mov
mov
out
xchg
ficompl
gs
in
repz
push
es
jge
pop
sub
rcrb
push
push
pop
shlb
pop
dec
jge
mov
call
dec
loop
adc
clc
int
and
fisubs
pop
lock
cld
sbb
cmp
loopne
xchg
pop
pop
add
inc
int
ret
inc
jne
lcall
or
and
mov
gs
sbb
jne
mov
push
setne
ficoml
or
or
xchg
inc
mov
cmp
jbe
jg
jbe
dec
mov
mov
test
sub
jmp
cmp
sub
cld
xor
jo
jle
lods
in
das
testb
popa
and
jb
inc
pop
leave
in
fs
fistps
int
repnz
stos
je
jecxz
lea
cmp
mov
insl
sarb
mov
out
mov
test
push
outsl
lds
cwtl
mov
lds
sub
jbe
xchg
xchg
and
sbb
shlb
mov
add
dec
cmpsl
mov
xor
jb
xor
cltd
pop
loopne
clc
inc
xchg
outsb
mov
outsb
mov
and
js
jg
pop
xor
icebp
lret
xchg
stc
fwait
push
call
insl
sbb
les
popf
pop
popa
flds
cmc
push
mov
outsb
mov
sbb
scas
stos
xchg
xlat
push
lret
jne
add
or
add
mov
jo
stos
sub
xor
sbb
xchg
xlat
jg
add
inc
add
mov
sbb
aaa
fsubrs
inc
pop
adc
lea
or
loop
int3
jg
cmp
aas
divl
sahf
sarb
add
testl
mov
sbb
ror
push
repnz
ss
cltd
jne
adc
sub
std
les
fmull
inc
fidivrs
pop
xchg
and
xchg
mov
jmp
and
push
inc
cmpsb
add
std
iret
insb
xchg
sub
js
cwtl
lods
into
pop
xchg
movsl
pushf
stc
les
xlat
aad
push
mov
dec
sbb
and
dec
xor
and
push
insb
xchg
daa
ljmp
sti
cmp
cli
repz
lods
and
xor
and
sbb
xor
lods
les
std
push
or
sbb
ja
inc
cmp
sbb
into
or
sbb
mov
das
fldenv
fwait
insb
cli
cwtl
mov
and
inc
and
lret
roll
ss
push
ret
fnstenv
dec
aad
std
xchg
inc
sbbl
inc
mov
mov
jmp
cmp
sbb
jmp
mov
and
mov
pop
std
leave
dec
jno
leave
mov
pop
mov
imul
test
cmp
and
xchg
push
arpl
push
mov
addr16
stos
pop
dec
popf
repnz
cwtl
dec
pop
and
sub
int3
sbb
rclb
insb
xchg
adc
jmp
inc
pop
std
aam
lods
dec
das
sub
subl
xchg
fisubs
adc
adc
lret
push
pop
test
xchg
repnz
sub
cwtl
rcll
push
movb
gs
int3
movsl
pop
mov
cmpsl
jp
xlat
sbb
fbstp
das
idivl
and
cmpsb
push
or
adcl
mov
out
dec
and
xor
dec
cmp
push
inc
shrl
xorb
test
pop
mov
mov
subl
cld
push
push
in
lock
nop
or
xchg
pop
int
mov
sbb
sub
iret
cmp
stos
fyl2x
popa
push
lds
movsb
sbb
in
mov
xchg
daa
jnp
push
cltd
sub
vpmacssdd
in
or
inc
mov
outsb
push
cld
push
ffreep
sbb
pop
outsl
sub
in
jno
mov
inc
ret
and
xchg
movsl
insb
dec
inc
insl
jp
mov
inc
ss
add
aad
jg
int
jl
imul
sbb
xchg
fs
sub
lahf
push
inc
pop
leave
push
cld
sbb
inc
flds
cld
xor
inc
sbb
mov
jbe
aaa
rorl
mov
cmpsl
dec
pusha
pusha
jge
lret
push
adc
aas
cmp
outsb
test
inc
xchg
out
xor
mov
sub
mov
stos
inc
subl
xor
enter
mov
stos
jne
std
sbb
cli
jno
cld
das
cmp
repz
jnp
push
pop
movsb
or
imul
and
or
int
inc
add
les
or
xor
lock
shll
pop
push
mov
daa
mov
sbb
or
shlb
sub
xchg
inc
cwtl
push
inc
mov
mov
repz
aas
stc
mov
xor
stc
pop
dec
push
mov
mov
insb
sub
adc
lods
xchg
or
pop
mov
fidivs
push
ret
cmpsl
repnz
inc
orb
jnp
xor
inc
cmpsl
mov
sbb
dec
ret
rcll
lret
xlat
mov
int
cmc
jmp
xor
push
pusha
sti
repnz
jmp
cwtl
add
mov
mov
mov
lea
and
or
cmp
sbb
mov
jb
cmp
push
push
ficoml
fsubp
aam
das
outsl
push
add
shrl
es
adc
dec
cmp
push
popf
cmp
dec
fldcw
xor
mov
push
sub
jl
cltd
mov
ds
ret
adc
xchg
lcall
outsl
jmp
push
shrb
ret
and
ljmp
and
daa
and
jo
aas
xor
pop
insb
aaa
xchg
xor
xor
hlt
add
div
lea
xor
push
xor
gs
data16
and
es
in
aaa
mov
mov
sub
mov
aas
loope
data16
push
pop
dec
cmp
jbe
inc
int
pop
inc
in
jg
jmp
pop
jns
push
nop
pop
fdivl
inc
pop
mov
xchg
mov
xchg
rolb
lret
sarl
mov
fwait
in
fbstp
pop
std
jnp
popf
mov
mov
sub
pop
sbb
aam
cmp
mov
sub
xor
lret
mov
and
scas
rcrb
mov
jg
fs
loope
jbe
jo
call
shl
insl
je
stos
iret
pop
jle
cld
xchg
pop
cmpsl
dec
es
addr16
adc
push
maxps
mov
xor
jecxz
push
push
mov
iret
or
subl
mov
icebp
ljmp
repnz
mov
or
jno
mov
mov
sbb
outsb
jno
cltd
adc
js
push
mov
cmp
mov
mov
push
ljmp
out
and
mov
cld
loop
fistl
ss
cmc
sahf
pushf
stos
fsubl
dec
sbb
pop
std
inc
adc
mov
leave
fsub
mov
adc
cmp
notb
mov
roll
xchg
mov
cmp
dec
nop
jo
mov
stc
mov
add
iret
stos
aam
xor
pop
push
jbe
rcr
andb
gs
add
scas
cmp
fistps
jo
cmp
scas
lods
out
inc
add
rcll
arpl
shlb
push
xor
pop
adc
sarl
xorl
jge
mov
pop
scas
arpl
mov
movsl
outsb
jb
push
xchg
es
pop
jge
aad
in
sar
push
loop
in
pop
cmp
into
add
jl
mov
cs
js
push
dec
xchg
sti
jle
push
enter
xchg
jp
mov
inc
sti
sbb
inc
popa
rorl
xchg
fiadds
add
in
test
xchg
mov
cltd
shrb
or
mov
mov
and
push
aas
stc
enter
in
xchg
pop
data16
jnp
pop
add
addb
rorl
or
out
xchg
mov
or
cmp
mov
xchg
sub
sarl
xlat
ret
jns
sbb
pop
adcb
data16
loope
int3
xor
mov
bound
push
sbb
xlat
mov
call
adc
inc
stos
icebp
inc
jb
repnz
in
ds
jmp
mov
jbe
pushf
pushf
aad
test
shlb
add
adc
push
pushf
mov
dec
int3
xchg
xor
in
ret
test
cmp
pop
mov
cmpsl
pusha
nop
rcrl
pop
sub
es
rorb
sub
or
mov
jo
mov
icebp
je
xchg
int
fisubrl
icebp
stc
imul
jmp
fsts
es
inc
jae
mov
fldl
sub
outsl
add
mov
enter
repnz
fwait
dec
inc
mov
cmp
add
cltd
fs
scas
or
sub
test
mov
pop
lcall
xchg
xlat
idivb
adc
sub
call
sub
movsb
pop
insl
pushf
imul
fcomps
into
xor
cmpsb
mov
xlat
push
js
jl
daa
push
stos
jmp
fbstp
adc
mov
adc
ret
xor
adc
lahf
adc
adc
inc
mov
jmp
das
pop
mov
xchg
cltd
popf
ja
sbb
and
push
push
cld
adc
ss
sub
sahf
cmp
cli
aad
hlt
push
xchg
fs
jbe
loopne
mov
lcall
add
cld
lea
daa
jg
jge
iret
outsl
insb
jne
cmpsb
shrl
mov
andb
clc
pop
push
xor
add
test
ljmp
rolb
dec
pop
sbb
test
bound
push
fisttpll
cmp
call
lds
fcmovne
test
cmp
inc
clc
shlb
test
xlat
aad
inc
lods
xchg
fimuls
adc
sub
cwtl
cmp
ja
stos
mov
cmp
or
gs
pusha
into
icebp
leave
and
jae
mov
jp
adc
inc
imul
cmp
test
outsb
shlb
movsl
ljmp
xchg
sbb
and
and
int3
mov
push
mov
sbb
hlt
adc
sbb
push
mov
mov
xlat
in
xchg
subl
push
cmc
cmp
mov
jl
mov
sti
test
ljmp
test
mov
or
shlb
insb
sar
pop
aaa
subb
fwait
dec
ss
mov
pop
test
mov
shrl
fistl
enter
into
mov
jecxz
cmp
pop
lods
ss
fcoml
mov
outsb
dec
add
fisubs
lret
shll
rol
sbb
aas
dec
jbe
push
mov
mov
std
subl
mov
stos
std
outsl
dec
mov
test
arpl
stc
mov
or
in
mov
test
into
in
test
loope
push
push
lret
push
imul
xchg
sbb
rolb
pop
loop
inc
scas
push
add
add
sbb
imull
inc
mov
adc
rcl
mov
mov
cmpsb
cmp
fadds
cmp
jg
fnstsw
mov
jns
psllq
ljmp
jne
cmp
fsin
sub
xchg
mov
push
inc
pop
cli
add
sub
in
mov
lods
in
sbb
mov
cmp
cmp
or
cltd
aaa
cmp
xchg
xchg
orl
scas
cmp
and
add
jmp
icebp
sahf
adc
pushf
popa
pop
les
cmpsl
push
pop
xor
add
cmp
xor
andl
sub
dec
movsl
jp
shll
inc
insb
cmpsb
pop
jmp
lock
pop
push
or
aas
cmp
cmpsb
in
jg
fs
sub
xor
cmc
xlat
test
push
loopne
mov
dec
dec
push
sub
out
adc
sub
shlb
inc
imul
jle
cmp
lods
jmp
pushf
fldcw
cli
dec
shrl
sbb
cltd
dec
inc
lcall
jno
add
mov
jnp
leave
sub
mov
jb
or
mov
adc
lds
cmp
imul
mov
aad
add
outsb
push
inc
mov
cmpsb
mov
lcall
aaa
loop
ja
loop
sti
add
rorl
pop
test
sub
movsb
mov
sub
dec
xchg
inc
lods
loopne
mov
fwait
pop
pop
sub
dec
es
adc
or
iret
lods
movsb
jb
stc
sub
stc
push
mov
mov
test
out
xchg
je
xchg
sbb
dec
push
pop
sbb
jg
push
mov
mov
pushf
mov
inc
scas
push
jge
adc
push
sbb
xor
adc
adc
ret
xchg
mov
pop
iret
push
data16
or
jecxz
cld
mov
mov
mov
push
pop
out
mov
test
dec
jle
and
daa
lcall
jecxz
adc
jnp
xchg
insl
aaa
aad
das
xchg
lds
xchg
cmp
push
fisubl
inc
xchg
or
nop
sub
mov
cld
push
cld
fwait
xor
xor
sbb
mov
pop
ret
jnp
mov
jecxz
adcb
pushf
faddl
mov
sbb
mov
std
sbb
and
jp
icebp
xor
jns
mov
pop
or
cmp
and
lret
in
ud1
push
repnz
fisubl
jmp
xchg
in
sbb
nop
mov
fwait
stos
dec
ljmp
dec
cli
push
cmp
adc
cld
xor
sub
sub
and
xchg
inc
in
jle
stc
and
ja
pushf
cltd
mov
and
aam
fwait
test
jmp
inc
adc
fnsave
mov
les
stos
dec
pop
cwtl
jns
sbb
fdivrs
div
dec
sub
fildl
pushf
enter
push
mov
into
in
aam
pop
aas
jmp
inc
es
lock
push
pmuludq
xorb
lahf
cltd
mov
dec
leave
pushf
fidivrs
mov
bound
mov
lret
movsl
fwait
adc
mov
pop
ljmp
shlb
add
inc
cmp
xchg
loopne
jl
jge
sbb
imul
mov
cwtl
out
pop
mov
test
enter
xor
loop
or
arpl
es
jg
test
add
into
loope
or
ljmp
cltd
incb
test
inc
shrl
pop
decb
pusha
jecxz
jg
out
adc
adc
dec
add
pushf
cli
test
arpl
inc
lods
sahf
daa
or
mov
cmp
sub
dec
test
popa
xchg
negb
pxor
cmp
in
xchg
dec
xorl
xchg
sub
aaa
rcl
aaa
out
movsl
enter
test
movsl
int3
cmp
bsf
xchg
jge
push
inc
sub
stos
adc
sti
dec
or
push
xor
mov
imul
mov
pushf
stos
mul
mov
enter
mov
fstps
es
pusha
stos
repz
cmpsl
in
lods
enter
and
adc
movsb
pop
lds
mov
mov
rcrl
xor
cltd
sbb
ret
or
subb
sub
mov
pop
imul
in
repnz
in
mov
mov
popf
sub
call
and
inc
dec
jp
adc
lret
jns
or
jo
xor
aaa
movsl
mov
subb
mov
mov
sahf
bound
push
in
pop
repnz
mov
inc
ret
cli
push
lcall
jp
jno
bound
bound
pushf
push
push
jns
bound
cli
test
sti
repnz
push
lcall
mov
sti
pop
pop
push
sti
inc
lds
lds
dec
and
scas
imul
mov
or
imul
mov
push
imul
dec
or
dec
or
sub
cli
aad
pusha
push
int3
sbb
pop
add
adc
aad
jns
add
xchg
mov
test
mov
ljmp
and
out
push
push
insb
icebp
movsl
xchg
or
push
sbb
jmp
jb
aaa
and
adc
pusha
mov
int3
pop
cmp
ret
lods
insb
xchg
mov
popf
mov
inc
xor
fstps
stos
decb
xor
xchg
xchg
cwtl
jne
in
xchg
stos
mov
mov
or
pop
insl
xor
into
loopne
mov
clc
sbb
and
cmp
add
test
dec
xchg
iret
jbe
sub
inc
mov
adc
lret
mov
or
dec
fwait
inc
scas
or
je
xor
lock
xchg
bound
or
mov
test
mov
mov
jle
ret
mov
movsl
add
xchg
push
jns
data16
aaa
xlat
icebp
filds
fsubrl
mov
enter
cmp
daa
testl
push
out
push
mov
mov
dec
xlat
cmp
rcrb
pop
push
cmpsb
xchg
jmp
sub
loope
je
jecxz
inc
xchg
out
and
leave
xchg
mov
inc
imul
xchg
into
dec
dec
mov
jge
dec
call
mov
std
out
adc
test
nop
inc
gs
pusha
cmp
cltd
fdivrl
mov
cwtl
in
add
jno
adc
les
je
in
push
mov
testb
sbb
call
clc
mov
dec
jbe
leave
lcall
movb
mov
jg
xor
sbb
pop
xchg
test
repz
movsl
cmp
and
mov
lock
ficoml
dec
out
add
xchg
fs
insl
testb
ds
mov
sub
sbb
mov
sbb
mov
mov
stos
fwait
sbb
sub
mov
cld
mov
and
or
sarb
pop
in
rcr
xchg
aas
cmp
xor
mov
pusha
xchg
out
insl
orb
std
mov
sti
jl
out
fcoml
test
aad
adc
dec
add
orl
and
hlt
rcll
sbbb
adcb
mov
jg
sub
in
lock
std
sahf
mov
test
xchg
aas
pop
mov
pusha
pop
dec
cmpsb
loope
mov
mov
adc
shlb
cmc
movsb
fisubrl
mov
fbld
mov
andb
pop
movsl
gs
ds
in
add
jae
rclb
inc
add
mov
jo
inc
gs
adcb
adc
pop
stos
or
repnz
ja
xor
dec
sbb
xor
push
push
test
std
lods
mov
and
cltd
insl
scas
sbbl
out
fiaddl
push
das
adc
xor
aam
pop
sub
fidivrs
jmp
xchg
in
jns
fcoml
test
repz
xchg
push
sbb
xor
cmp
pop
pop
push
call
insl
sahf
ds
cmpsl
and
inc
lock
push
lahf
push
xor
ret
ret
fdivrl
pop
out
xor
sub
adcl
jmp
clc
fcompl
xor
adc
push
jp
movsb
ficoml
loop
sub
sbb
ljmp
imul
cltd
notl
mov
jbe
cmp
dec
or
pop
push
fdiv
mov
pop
and
pop
cwtl
cmp
adc
xor
and
das
inc
jb
jo
loop
pop
lret
dec
jo
repz
out
nop
sbbb
xor
push
ffreep
fiadds
hlt
das
es
pop
xor
adc
add
scas
movsb
jmp
mov
xor
sbb
es
mov
mov
lea
dec
push
bound
es
idiv
mov
inc
xchg
loopne
std
sub
jns
cli
cmp
je
ja
pop
loop
loope
nop
je
leave
fs
fsubr
mov
imul
je
pop
mov
push
cltd
into
loopne
lcall
pop
mov
sbb
pop
fs
mov
xchg
mov
enter
pop
and
adc
pop
adcl
dec
mov
les
std
out
cmp
jb
lret
mov
sbb
mov
mov
sub
scas
jbe
xchg
negl
push
imul
icebp
bound
cmp
loop
add
jcxz
xchg
dec
aas
cwtl
add
jge
repz
cmpsb
das
ret
mov
dec
pop
jge
and
ud2
sub
pusha
aaa
push
test
retw
sbb
jbe
test
mov
sahf
lcall
fistpll
dec
ror
fldl
jecxz
mov
imul
dec
push
ja
sbb
lods
shr
cwtl
aam
clc
xor
adc
push
xor
xor
std
bound
bound
in
xor
xchg
xchg
push
in
adc
dec
mov
push
pushf
push
push
adc
xchg
es
push
repz
push
sbb
or
inc
lret
xor
pusha
ficomps
call
dec
or
outsb
inc
test
ret
xchg
jbe
xchg
inc
and
negl
lods
fildll
inc
sarb
xor
jbe
push
inc
sahf
stos
pop
subb
cmp
pusha
xchg
cmp
lods
out
iret
dec
loope
loop
xlat
in
pusha
hlt
std
hlt
adc
popa
pop
lds
fnsave
daa
pop
cmp
push
rol
mov
adc
xor
sbb
movsl
movb
arpl
movsb
lcall
xchg
pop
das
int
jnp
jecxz
dec
cltd
jne
pushf
into
cmc
xchg
fsubrs
inc
jns
idiv
aam
fldl
and
out
mov
andl
mov
popa
mov
stos
loope
dec
sbb
shrb
jb
add
ret
and
pop
pushf
loopne
movsl
xchg
iret
pushf
xchg
repnz
outsl
outsb
adc
jb
jg
cmpsl
cmp
lds
and
xchg
or
mov
insl
add
adc
mov
cltd
and
test
and
iret
push
cmp
xchg
and
insb
jo
repz
insl
insb
lret
outsl
inc
fcmovnu
dec
adc
dec
xchg
dec
cs
hlt
or
xchg
mov
stc
xor
xchg
je
xchg
mov
iret
and
xor
cld
jns
imul
add
ljmp
scas
pop
jmp
push
dec
int
movsb
pop
pop
jge
ret
divb
mov
and
sbb
pusha
xchg
jg
popf
imul
cvtpi2ps
pop
icebp
dec
mov
push
or
mov
scas
enter
xor
dec
mov
jnp
enter
add
add
cmpb
scas
fcomps
clc
mov
add
mov
mov
jmp
mov
push
mov
dec
decl
aaa
sub
int
xor
sbbl
lods
xchg
jg
movsl
push
dec
mov
sbb
inc
mov
pushf
movsb
mov
jb
lret
cwtl
jbe
mov
pushf
test
and
sbb
test
adc
cmp
sbb
cmp
xlat
jno
xor
sub
popa
mov
pop
movsb
daa
push
clc
jmp
lret
push
jns
mov
mov
push
xchg
pop
mov
mov
stc
pop
pusha
pop
int3
dec
mov
out
and
and
test
lcall
and
sub
push
andb
sbb
jnp
sub
xor
mov
test
add
mov
sub
mov
mov
push
ljmp
addr16
xor
divb
xchg
insb
sub
out
sarl
out
mov
cmp
dec
in
in
shrl
pop
dec
mov
xchg
out
xchg
fbstp
test
pop
cmp
in
sub
movsb
jnp
data16
or
jns
std
shl
mov
inc
inc
sbb
dec
fidivs
add
add
push
pop
roll
lea
out
mov
pop
and
cltd
jo
cmp
jns
xor
xchg
fistps
push
jl
push
mov
dec
add
stos
mov
mov
mov
negl
lahf
test
imul
in
pop
call
rclb
cmp
inc
adc
insl
cmp
out
imul
jnp
ret
dec
inc
frstor
ja
lds
lock
xor
sbb
movsb
inc
mov
fdiv
sahf
mov
sbb
and
ljmp
or
rcl
dec
adc
xchg
outsl
bound
pop
div
lods
inc
mov
data16
jecxz
xor
inc
test
jbe
and
lods
cli
shl
into
add
push
jno
push
gs
xchg
es
out
pop
xchg
sub
cmpsb
cwtl
jb
sbb
xchg
stos
cmp
les
pop
pop
dec
jmp
fdiv
and
xchg
in
push
mov
inc
or
and
jno
cmc
inc
sbb
bound
push
bound
inc
mov
jp
or
inc
push
nop
sbb
mov
sti
fnstcw
enter
cmc
fldcw
mov
mov
adc
fisttpll
cmp
loope
jns
dec
fdivs
jns
or
popa
xchg
xchg
cwtl
nop
sub
sbbl
pop
pop
lods
mov
test
inc
test
ror
test
sbb
xchg
popf
in
push
cmp
loopne
int
into
adc
rcrl
dec
or
xor
std
icebp
outsl
aam
outsl
xchg
push
pop
xchg
and
adc
aas
andb
loopne
xor
icebp
jle
scas
inc
cmp
sbb
filds
adc
lock
dec
xor
sub
mov
repz
test
sarb
ss
ljmp
imul
rclb
push
icebp
ja
sub
dec
push
mov
xor
add
push
xor
jne
sub
cli
lock
frstor
inc
loope
lods
outsb
int3
xchg
cmp
ficoml
xchg
add
sbb
loope
sbb
das
fstps
fwait
mov
pop
cs
inc
push
neg
cmp
push
sub
mov
sarb
enter
insb
cld
cmc
imul
sbb
pop
inc
pop
cmp
hlt
pop
sub
jne
cmp
lahf
sti
inc
mov
mov
xchg
andb
or
bound
cmpsl
fmuls
fwait
aas
inc
ljmp
addr16
in
cmpsl
adc
add
out
dec
jg
test
dec
stos
lods
aas
xorb
xchg
test
or
flds
add
popa
insl
fstl
dec
loop
imul
jmp
mov
es
fs
shrl
insl
sahf
aas
sbb
adc
mov
or
out
test
xchg
dec
cmp
push
xchg
je
ret
push
stc
pop
aas
movsb
xorl
jne
xlat
int
xor
popf
cmpsl
call
out
pop
mov
xchg
mov
push
push
mov
sarl
jo
popf
mov
test
aaa
icebp
add
mov
icebp
mov
daa
add
cmpsl
test
cwtl
in
lcall
adc
push
cs
or
insb
cmc
jns
jno
out
out
push
repnz
sbb
stc
inc
arpl
loopne
popa
mov
add
jb
dec
sub
les
cmpsl
jge
iret
add
enter
xor
xor
lods
arpl
fstpl
insb
das
fs
xchg
xchg
xchg
mov
and
jb
pusha
xchg
pop
mov
push
lds
popa
sbb
shrb
or
jp
and
pop
cmp
je
mov
cltd
ss
mov
ret
sbb
out
sub
inc
pop
stc
je
xchg
xchg
jg
lea
popf
sbb
mov
pop
test
pushf
cwtl
or
imul
jnp
push
inc
mov
sub
iret
inc
pop
scas
add
and
mov
dec
mov
xchg
sbb
xchg
scas
jbe
loop
aaa
out
mov
enter
hlt
fwait
clc
cmc
mov
hlt
and
jmp
int3
or
pop
scas
xchg
insl
sub
add
push
xchg
nop
lds
loop
rclb
movsb
mov
adc
sub
xor
call
rcll
fdivrs
jge
fcmovne
jp
cwtl
aas
movsb
or
push
dec
add
repz
jo
xchg
scas
divl
stc
push
push
aaa
dec
xor
jmp
in
rcll
ja
aam
dec
push
imul
repz
mov
loope
insl
iret
add
mov
ficomps
or
dec
dec
xor
lods
pop
fwait
shl
arpl
and
sahf
mov
jp
ja
mov
std
f2xm1
cmpb
xchg
mov
je
fcompl
sbb
mov
xchg
xor
fisttps
sub
mov
pop
pop
pop
insb
ljmp
pop
dec
dec
in
and
pop
inc
sti
mov
gs
xor
sub
pop
jecxz
in
mov
fs
and
ljmp
js
cmp
cmp
adc
mov
mov
divb
xchg
sub
or
adc
xchg
out
jle
xchg
call
out
sbb
js
mov
faddl
cmc
sarb
mov
cmp
outsl
imul
push
ss
cmp
sahf
aam
mov
rcll
inc
stos
xchg
aam
adc
xor
cmc
xchg
mov
int
xor
add
loop
stos
add
imul
aam
push
jb
or
ss
insb
push
mov
mov
repnz
sub
jne
insb
jg
cmc
rcll
aas
imul
pop
mull
cli
leave
mov
ret
imul
sbb
pop
dec
mov
mov
xchg
dec
imul
push
mov
adc
shl
cmp
imull
aad
in
pop
sbb
xor
aas
test
jp
jb
cltd
add
lds
insb
mov
out
outsb
fwait
push
adc
cmovl
pop
push
adc
dec
add
out
lahf
mov
addl
out
push
mov
mov
fisttpl
jbe
imull
int
and
mov
stos
pop
push
loope
xor
lahf
pop
je
lock
push
mov
ljmp
jmp
push
mov
in
cmc
mov
pop
mov
or
ret
fildll
repz
rcll
push
in
in
jle
pop
inc
mov
mov
xor
lods
pop
scas
cmpsb
lods
out
add
stos
push
mov
sbb
mov
push
popa
lods
push
pop
ss
mov
push
mov
out
xrelease
sub
adc
push
push
add
push
repz
addr16
fwait
jg
push
das
xchg
hlt
or
add
and
dec
adc
addl
push
cmp
addr16
mov
sbb
and
jg
daa
dec
aam
xchg
pop
sub
cmp
push
mov
xchg
pusha
xchg
adc
ljmp
lock
iret
xlat
pushl
add
and
ret
adc
pop
daa
adc
lock
jno
xchg
aas
pop
loop
mov
pop
stos
out
and
adcb
push
sbb
fld
jecxz
pop
push
fistpl
cmpsb
sbb
xchg
push
stos
add
outsl
mov
pop
std
scas
pushf
repnz
inc
adc
add
jmp
or
push
popa
popf
inc
jmp
mov
pop
sbb
or
sbbb
out
lods
popf
pop
int
ss
dec
pop
lods
inc
fs
pop
adc
adc
xchg
lcall
imul
or
cli
inc
push
out
mov
mov
in
inc
add
jmp
jg
and
dec
enter
xchg
dec
je
icebp
inc
or
out
mov
vpunpckldq
mov
in
leave
xchg
mov
repz
pop
leave
add
add
jmp
fcoml
pushf
stc
ret
ljmp
mov
cltd
sub
shrl
adc
aam
orl
mov
fistpll
adc
lahf
or
cli
dec
inc
cmp
jmp
pop
dec
and
jmp
jns
and
mov
je
cmpsl
adc
js
dec
and
jae
mov
lds
ss
aad
and
lods
adc
inc
jb
cmp
pop
je
scas
or
out
pop
pop
xorl
jo
scas
lret
setl
jmp
pop
in
mov
sub
es
lods
mov
push
dec
mov
mov
sub
jmp
xor
jb
decb
mov
inc
inc
pop
cmpsl
fstpt
shll
ja
clc
into
push
jl
shrb
stos
mov
cmp
inc
aas
pop
pushf
faddl
xchg
mov
je
mov
in
sub
scas
stc
sub
mov
loop
je
shlb
es
push
xor
mov
jge
arpl
test
xchg
and
push
loope
repnz
pop
arpl
int3
sbb
mov
pushf
lret
cmp
out
lds
xor
sti
cld
mov
pop
adc
xor
dec
cmpsb
lock
and
push
pop
sbb
xchg
fidivs
add
push
pop
dec
in
mov
jmp
aas
movsl
adc
jno
cmc
mov
stos
pushf
fisubl
scas
cmp
iret
movsb
sbbb
scas
pop
mov
inc
es
mov
mov
test
cs
and
xchg
fsubl
jp
xchg
mov
mov
iret
jo
les
fs
mov
aam
test
je
xor
add
pop
adc
adc
je
out
jmp
push
inc
and
aad
or
loop,pn
and
scas
push
jo
ljmp
adc
xor
addl
add
fwait
jo
and
pop
or
and
lahf
lret
xchg
xchg
cmp
sbb
mov
xor
sub
jecxz
js
inc
outsb
mov
ds
and
aas
mov
jp
ljmp
jo
or
xor
stc
add
mov
lods
push
pop
iret
mov
test
sbb
movsb
xor
das
mov
inc
outsb
xchg
and
test
lods
mov
insb
dec
aad
pop
inc
ror
push
imul
cmp
sbb
sti
clc
jns
lret
dec
xor
mov
or
outsl
mov
lds
jg
pushf
ds
jbe
enter
imul
xor
sub
insl
std
inc
das
jne
and
push
das
and
sbb
push
jp
jbe
sbb
cs
in
adc
or
sti
xchg
das
sub
push
rcrl
call
cmp
and
scas
stos
jnp
xor
out
xchg
and
pushf
test
shr
jge
pop
xor
lcall
movsb
and
popa
add
stos
fabs
dec
fcmovu
mov
shll
xor
test
fwait
cltd
loope
or
rcll
pop
adc
in
dec
mov
push
and
mov
add
dec
sub
mov
xchg
pop
rclb
sahf
aam
sbb
cmp
push
ret
lea
mov
subl
jae
rolb
push
xchg
mov
out
jbe
xor
mov
lcall
mov
sbb
cmc
fisubrl
pop
or
pop
in
lock
push
push
fcmovnbe
sub
fwait
in
rorb
xlat
push
cli
shl
imul
pushf
movsl
les
ror
sbb
inc
pop
push
flds
fdivrs
scas
out
xor
jmp
mov
repz
sub
xor
ja
ljmp
into
xor
xchg
sbb
lock
aam
push
xchg
stos
push
insl
das
jbe
sbb
es
outsl
mov
push
sub
ret
ljmp
inc
inc
ret
add
aad
xchg
dec
in
cmp
push
push
xchg
es
sub
daa
cld
jge
adc
sahf
insl
mov
mov
jo
mov
or
jae
xchg
mov
stos
jb
cwtl
sbb
cli
cmp
push
arpl
hlt
mov
add
idivl
ljmp
sti
stos
push
sbb
inc
daa
pop
int3
pushf
fdivs
mov
and
enter
popa
out
das
inc
ficomps
in
sbb
or
xchg
add
fistps
push
into
cltd
outsl
stos
jno
and
xchg
adc
fmull
sub
into
push
cli
scas
xchg
movsl
sbb
shlb
jl
xor
lds
jno
xor
test
in
sbb
in
shr
iret
adc
xor
mov
pushf
pop
decb
movsb
popa
lds
sahf
andb
pusha
mov
cmp
dec
mov
call
jl
cmp
test
adc
iret
shlb
inc
in
out
pusha
lock
mov
int
out
push
sahf
mov
or
mov
push
dec
pop
cmp
imulb
leave
dec
xchg
dec
arpl
add
leave
xchg
hlt
fidivl
repz
sub
decb
sti
mov
xchg
jnp
pop
cmc
mov
sbb
xor
out
and
add
imul
and
mov
xor
cmpsb
mov
popf
fwait
repz
loopne
add
pop
fs
es
ljmp
dec
pop
jl
push
hlt
ss
imul
cmp
sbb
dec
cmp
mov
mov
fistl
cmp
out
mov
cmpsb
insb
push
cld
aaa
mov
or
mov
cmc
xchg
outsb
push
lods
adcl
jo
cli
jae
mov
push
iret
enter
sub
pop
daa
jo
sbb
mov
push
in
or
lds
aad
mov
sub
shll
inc
lcall
add
imul
inc
and
inc
dec
inc
fists
jno
inc
xchg
cld
sti
roll
cmp
and
sbb
ja
loope
std
pop
negl
add
pop
lds
dec
cs
fisubrs
pop
sbb
mov
xor
hlt
push
xchg
scas
mov
dec
pop
mov
das
mov
out
xor
imul
push
nop
inc
xor
out
sbb
pop
cmpsb
xchg
jns
sbb
adc
jle
jae
test
jnp
imul
sub
xchg
push
add
sbb
push
pop
push
dec
lods
shlb
push
or
or
sub
xchg
in
or
ret
and
or
and
sbb
cltd
sub
hlt
dec
pop
scas
jno
adc
std
mov
cmp
incl
jo
xchg
rolb
das
movsb
dec
mov
insb
leave
outsb
cld
mov
xchg
mov
in
jb
adc
fidivrl
sbb
lahf
cld
arpl
inc
popa
jae
scas
lds
inc
push
inc
jecxz
or
xor
push
push
in
fcompp
movsb
push
pop
lods
jns
pushf
push
or
sbb
out
enter
mov
mov
add
cmp
pop
dec
clc
push
test
inc
push
insb
fstpt
adc
out
mov
inc
testb
jmp
or
sub
icebp
sub
lods
out
adc
jb
or
insl
mov
inc
ss
pop
add
adc
inc
xor
inc
mov
xor
mov
dec
mov
adc
shlb
cmpsb
out
pop
cmpsb
and
call
mov
fsubs
scas
pop
mov
mov
popa
punpcklbw
sub
repz
call
pusha
movsl
cli
shlb
pop
add
pop
push
mov
add
jb
out
ret
xor
inc
xchg
sbb
roll
sub
in
fimuls
xchg
dec
and
adc
mov
std
sbb
adc
adc
jns
xor
xchg
mov
stos
std
cld
adc
stos
test
push
iret
jnp
add
dec
fdivs
aas
ss
mov
ljmp
cmp
push
pop
or
insl
sar
int
aas
aam
filds
stos
fwait
test
mov
jae
adc
adc
clc
popa
cli
lods
test
jecxz
mov
fucompp
xor
test
addr16
es
fs
lahf
aas
lahf
push
inc
popf
dec
mov
ja
or
enter
enter
test
dec
mov
lret
leave
cli
cmpsl
shll
ret
inc
mov
rclb
inc
add
fwait
jecxz
adc
cmp
mov
and
mov
sub
fwait
lahf
std
adc
cmp
xor
bound
pushf
pusha
push
movsl
popw
inc
mov
out
jle
testb
sub
cs
jnp
inc
inc
sahf
popa
std
int
sub
mov
push
dec
sub
mov
mov
mov
mov
and
outsl
push
or
and
mov
or
fbld
ds
mov
fsub
push
xor
sbb
aaa
push
loope
mov
jo
lret
adc
mov
inc
add
sub
mov
les
xor
pop
imul
adc
inc
cmp
push
inc
das
push
push
fucomip
outsl
and
fstpl
int3
loope
adc
repz
adc
xchg
call
mov
into
test
ret
out
pop
sbb
mov
cmc
lcall
test
andl
and
stc
fwait
add
mov
inc
addr16
fcmovnbe
int
mov
xor
repnz
adc
push
xchg
lods
mov
cltd
push
lcall
and
imul
or
pop
mov
xchg
and
in
dec
push
mov
lret
jne
cmp
sbb
lret
push
cli
jge
push
lahf
nop
call
dec
stc
push
iret
cli
stos
cmp
shlb
sub
mov
notl
inc
jmp
icebp
dec
add
pop
sahf
jge
insl
cmp
mov
inc
sub
push
xchg
push
mov
bound
push
sub
pop
adc
dec
icebp
xor
pop
cs
cwtl
sub
adcl
call
lcall
xchg
loopne
hlt
add
dec
sbb
xchg
add
dec
test
out
repz
roll
ret
lods
mov
inc
jae
pop
pop
stos
out
sbb
subl
adc
aam
mov
iret
xorb
xor
xchg
pop
sbb
push
adc
ret
xchg
dec
jb
or
fistpll
subl
ret
jno
clc
das
add
outsb
mov
stc
mov
mov
cmpsb
lahf
jmp
pop
cli
lds
out
addr16
xchg
daa
xor
test
call
adc
movb
fisubl
mov
fisttpl
or
mov
xor
bound
shrb
add
leave
mov
add
insl
xchg
out
loop
and
stos
mov
cwtl
mov
shr
out
pop
or
adc
ljmp
fisttpl
testb
test
mov
scas
push
test
sub
push
jnp
push
and
enter
or
mov
dec
ret
sub
jg
insb
adc
test
shll
shlb
pop
jl
test
jno
out
sbb
sub
loop
mov
mov
mov
xorb
cmpsb
cmp
xor
sti
jge
pop
cmp
out
push
inc
test
dec
outsb
inc
adc
leave
ret
out
mov
arpl
and
cmpsl
bound
mov
xchg
cli
mov
dec
inc
jg
and
pop
cmp
jns
jno
leave
mov
mov
daa
das
divb
dec
pop
add
dec
xchg
testb
mov
adc
dec
insl
out
inc
adc
mov
test
or
gs
push
push
cwtl
xchg
decb
or
into
in
jns
addl
pop
xchg
shll
sub
mov
push
ret
adc
add
push
loope
jae
scas
aam
mov
outsb
mov
mov
mov
daa
shl
adc
xchg
xchg
shll
int3
pop
xor
jbe
cltd
fs
lds
test
inc
data16
push
test
mov
cmp
lods
adc
add
dec
sarl
call
std
pop
lcall
or
dec
or
xchg
push
cld
xor
scas
and
cmp
dec
xchg
sahf
out
aaa
adc
and
in
sbb
sub
rcr
and
mov
fstps
out
pusha
std
fcmovnu
mov
enter
sbb
fwait
call
mov
fsubrs
sbb
sbb
pop
xchg
nop
push
pop
in
js
popa
cmpb
dec
int3
arpl
mov
fnstsw
pop
sub
out
xlat
lods
adc
push
push
pop
push
cld
mov
loop
jbe
nop
mov
insl
mov
cmpsl
ds
mov
inc
mov
add
cmpsl
dec
or
add
jb
or
sub
jle
add
fisttpll
adc
mov
mov
add
imul
push
sahf
int3
dec
ret
mov
jp
inc
outsb
push
in
pop
ret
mov
call
sarb
ficoml
adc
repz
test
lret
cwtl
add
adc
jg
loope
mov
cltd
cwtl
push
lods
stc
movsl
push
cwtl
push
cmp
xlat
xor
dec
inc
popf
push
push
lea
cld
sti
sub
insl
loope
jl
popa
sub
aaa
add
or
arpl
aas
popf
loopne
out
pushf
movsl
sub
pop
push
sub
imul
lods
xor
xchg
sbb
mov
mov
pmullw
ja
xchg
jg
mov
or
pushf
ja
loop
outsb
test
push
rol
sbb
cmp
jl
repnz
lods
add
rolb
add
not
ljmp
shll
jns
or
mov
dec
outsb
lock
push
enter
jns
lahf
fmulp
icebp
xor
jmp
dec
mov
movlps
mov
cli
fstps
mov
leave
ja
push
dec
pushf
jl
lahf
mov
dec
test
out
andb
adc
or
xor
lret
rol
das
push
xchg
or
xchg
imul
xor
outsl
into
cmp
mov
inc
sbb
push
and
inc
push
or
lods
addr16
lea
enter
sbb
fisubs
imul
xor
mov
std
ficoml
popf
sbb
and
mov
dec
lret
jp
jo
lds
aas
test
fcmovbe
cmpsb
xchg
jle
xchg
icebp
xorl
cmc
mov
push
fldenv
xor
xor
pop
dec
adc
and
xlat
xor
sub
pop
into
sti
xchg
out
imul
or
push
scas
int
xor
pmullw
rclb
and
js
add
sti
lcall
xor
mov
pop
adc
mulb
inc
sbb
mov
inc
sbb
push
int3
sbb
lods
mov
lret
dec
push
jae
das
inc
mov
inc
mov
rcll
push
rcll
add
sti
out
pop
enter
inc
sbb
fnsave
lret
mov
filds
mov
cltd
mov
les
xor
fwait
jo
js
inc
fwait
and
rorl
cli
mov
cmc
mov
es
sub
lock
imul
aam
mov
sbb
lds
jae
loope
cltd
and
inc
div
mov
and
jmp
mov
xchg
xor
loop
lods
mov
cmpsl
mov
mov
push
xor
fildll
adc
icebp
pop
or
xor
xchg
dec
mov
jno,pn
lret
in
or
ds
rorb
mov
sahf
les
mov
outsb
loopne
js
and
mov
cwtl
lret
imul
int3
pushf
mov
xchg
fimuls
leave
lahf
xchg
movsl
sbb
sub
aas
jae
leave
sbb
add
mov
cwtl
sub
iret
sub
jmp
addr16
pop
pandn
or
aas
dec
sbb
imul
or
cmp
ja
std
loopne
xchg
or
xlat
notb
xor
jmp
or
mov
cmp
cmp
mov
xor
in
insl
mov
pop
loop
sarl
test
pop
les
sub
add
adc
push
rcrl
pushf
rcrl
test
lahf
shll
cwtl
jne
xrelease
mov
scas
pop
pop
js
pop
xor
je
cltd
inc
insl
addb
add
adc
adcl
or
enter
sahf
pop
fs
cwtl
inc
jb
adc
push
loope
dec
mov
xchg
jle
dec
call
mov
adc
cmpsb
xchg
cld
inc
setnp
hlt
add
stos
push
xor
cmp
xchg
in
std
xchg
mov
xchg
xchg
add
xchg
or
cmpsl
jne
pop
xchg
lret
fcmovnbe
push
gs
mov
mov
mov
mov
pop
rcl
and
jnp
repnz
sub
and
mov
mov
pop
loopne
fyl2x
push
rorb
fnstcw
sahf
mov
sbb
mov
unpckhps
test
sub
test
push
out
cmc
insb
mov
xor
cmp
hlt
and
test
popa
xchg
mov
call
sbb
in
jbe
inc
jno
fbld
movsl
inc
fidivrl
leave
dec
add
push
fcoms
mov
shrl
xlat
jle
sub
out
xor
xchg
int
inc
dec
mov
push
sbb
lcall
jbe
mov
and
or
loop
ret
pop
shll
cld
rorl
imul
lcall
mov
add
lea
cmpsb
push
imul
sub
iret
mov
dec
pushf
lods
jno
dec
jge
jge
dec
imul
and
xchg
inc
das
clc
fisttpll
and
cmpsb
adc
sbb
xchg
imul
imul
mull
mov
inc
ja
bound
rcrl
inc
adc
pushf
les
inc
inc
jle
aad
jg
subl
push
lahf
jb
dec
loopne
jae
cmpsb
add
lock
insl
push
leave
xchg
adc
xchg
mov
sub
lret
scas
xchg
jb
cmpsl
inc
xchg
jnp
push
lcall
aam
dec
lcall
mov
in
cli
xor
add
add
andl
inc
add
sbb
mov
mov
mov
cmp
iret
int
add
add
daa
xchg
inc
lods
mov
sbb
loopne
or
out
add
sub
xchg
loop
xchg
scas
sarl
jb
pop
or
rcr
jge
ss
add
pop
out
mov
mov
jl
pop
pop
push
imul
fisttps
push
aam
pop
test
mov
call
or
enter
or
loope
ss
icebp
jns
mov
inc
stos
mov
popa
sbb
inc
imul
repz
ds
out
jmp
les
icebp
pop
jle
mov
and
mov
clc
fld
push
fstpl
adc
nop
iret
pop
mov
push
jno
mov
mov
and
or
aad
or
das
jl
fs
insb
add
lret
sti
push
jae
pop
cmc
sbb
xor
stos
push
jb
inc
push
pushf
arpl
js
dec
adc
inc
testl
scas
int
xchg
sub
mov
aad
mov
mov
mov
inc
int
cmpsb
bound
out
mov
pop
sbb
sarb
aaa
push
fwait
mov
xor
dec
sahf
call
pushf
mov
dec
test
add
rorb
ss
lea
xor
mov
pop
pop
aad
maskmovq
testl
jae
sbb
adcl
roll
in
test
push
leave
xor
orb
js
cmp
outsb
lcall
insb
or
lret
dec
sbbl
icebp
lock
or
repz
pop
sbb
imul
jno
sahf
leave
jmp
test
dec
pop
cmp
sub
cmp
jns
sub
inc
bound
pop
jg
repnz
fdivp
aas
es
ret
pop
lret
cmp
es
adc
add
inc
loop,pt
daa
jne
test
jge
xchg
insb
adc
xor
lods
pop
ret
andb
mov
fwait
icebp
divl
movsb
cld
inc
push
andb
cmp
cs
jno
outsb
adc
imul
push
cmc
loopne
dec
add
and
adc
in
popf
iret
icebp
pop
fbstp
mov
or
add
popa
mov
push
hlt
mov
js
mov
int
mov
mov
or
push
dec
mov
ja
pop
mov
xchg
sahf
or
jecxz
mov
mov
hlt
add
fiadds
inc
test
adc
mov
fcompp
std
popa
ds
cmpsl
lock
cld
lods
push
push
fstl
mov
rclb
mov
pop
jnp
mov
daa
mulb
push
cmp
xchg
add
ja
mov
call
inc
lds
sarl
sbb
push
cmpl
push
test
fadd
test
jnp
call
loop,pt
mov
fstpl
mov
pop
or
fistps
push
cmp
mov
push
dec
dec
inc
pop
xchg
pop
daa
lea
movsl
js
loop
inc
inc
mov
cmp
jno
icebp
push
inc
xor
aaa
popa
mov
xor
fiadds
xchg
call
outsl
ficomps
clc
iret
rorl
jl
adc
aaa
xlat
aas
xchg
fldcw
xchg
enter
pop
icebp
or
or
mov
pop
pcmpgtb
pop
rcr
xchg
xor
inc
cmp
lcall
mov
ret
ficompl
inc
aaa
decb
adc
pop
cli
sti
or
xchg
dec
sub
pop
push
cmp
adc
fisubrs
push
pop
cmp
mov
arpl
push
pop
call
jg
ret
negb
jp
in
sub
sbb
dec
push
addr16
movsb
xor
sbb
icebp
nop
inc
dec
pop
dec
adc
cmp
sbb
movsb
shlb
repz
sub
stos
shl
mov
rolb
ss
andl
outsb
stos
imul
mov
lahf
xchg
xchg
sub
jg
push
jp
loop
mov
dec
outsb
jp
jbe
jmp
fisttpll
jg
into
xor
lcall
xchg
std
popf
sub
sahf
sbb
loop
clc
mov
call
dec
or
aam
addl
out
mov
jp
into
jb
loopne
mov
push
repnz
cmpsb
imull
xchg
aaa
cmp
jno
sahf
adc
inc
or
mov
fnstenv
and
push
out
push
hlt
pusha
sbb
sub
xchg
bound
xlat
rorb
sub
dec
inc
cmp
inc
sti
cmp
mov
adc
fwait
andb
mov
cmp
mov
repz
cmovne
cmp
enter
stos
rcl
adc
ljmp
push
push
test
arpl
pop
popf
adc
xchg
push
inc
sti
inc
int
dec
sti
push
ljmp
lods
and
scas
inc
cmpsb
inc
jo
sub
aad
enter
mov
test
and
cwtl
mov
sub
pop
mov
test
call
rclb
mov
lret
std
aas
cmp
fcoml
xchg
sbb
push
cltd
pop
and
mov
lds
and
jns
xor
inc
testb
clc
outsb
imul
jae
in
stos
in
xchg
pop
std
xchg
cmp
rorl
insb
shl
xor
push
push
mov
lods
ret
xor
or
inc
addr16
lret
cs
popa
xor
push
cmp
shr
mov
aam
xor
bnd
add
pop
sub
or
mov
in
dec
mov
mov
mov
inc
push
inc
mov
push
sbb
sub
and
mov
adc
mov
fcomps
xor
sahf
and
sbb
xor
push
and
std
xor
dec
fs
mov
pop
into
lods
arpl
cs
fstpt
jb
out
mov
or
mov
mov
enter
mov
mov
testl
inc
and
aas
sub
lods
cwtl
xor
aam
int
loopne
imul
stc
les
lods
and
in
pop
inc
mov
jns
mov
movsb
inc
cmp
pop
add
stos
lcall
push
insb
lcall
lods
div
fwait
xchg
fcoml
ret
sbb
mov
inc
insl
movsb
jl
pusha
aaa
int
jnp
daa
scas
sbb
std
and
xchg
int3
add
mov
xchg
js
mov
cmpsb
jo
aam
testl
ror
adc
inc
or
popa
pop
in
adc
into
inc
cmp
add
iret
xchg
hlt
inc
in
pop
cmpsl
cmpsb
out
jne
or
lods
out
scas
adc
js
pusha
mov
rcrb
inc
aam
push
push
pop
lods
aad
sbb
and
pop
lock
stos
in
imul
mov
pop
mov
orb
imul
push
rcr
arpl
mov
mov
and
mov
ret
sbb
sbbl
sbb
mov
ljmp
daa
push
or
add
mov
xor
and
je
shll
mov
inc
mov
or
jne
jb
dec
push
or
fwait
cltd
lahf
dec
popf
aas
in
jnp
cmp
out
arpl
xchg
mov
or
xchg
out
mov
sar
arpl
into
push
cmpsl
mov
dec
lret
cmpsb
jge
out
ja
scas
mov
cmp
cs
jb
mov
jae
adc
inc
inc
cmp
jns
mov
jmp
jmp
ficomps
cmp
stos
xchg
test
push
ret
lcall
cmp
repz
clc
mov
xchg
add
inc
jns
add
sub
scas
sbb
jp
sbb
or
push
jle
xor
inc
repz
mov
repz
xorl
xchg
outsl
mov
or
sub
cmp
fisttpl
jns,pn
divl
mov
pop
test
mulb
cmp
cli
pop
std
gs
mov
in
cmpsl
xor
or
aas
fxch
jmp
clc
lods
pop
inc
mov
mov
stos
inc
aas
outsl
xor
mov
or
fs
sbb
or
add
cmp
pop
xlat
das
mov
cmp
jb
jle
arpl
xchg
xchg
xchg
lock
lret
add
mov
incl
or
sbb
or
cmp
aaa
cld
pop
mov
add
mov
jno
xchg
in
rcrb
mov
ja
ds
test
dec
add
sarl
insl
les
sbb
fsubl
cmp
sbb
in
jne
mov
or
frstor
ret
je
jmp
push
inc
or
js
out
bound
clc
sbb
lcall
imul
pop
add
mov
and
ljmp
xchg
pop
dec
jmp
fmulp
popa
dec
les
sahf
es
lods
cmp
aaa
ret
cmp
daa
andb
dec
ficomps
addr16
mov
iret
push
mov
sbb
xor
lds
es
sub
adc
mov
rcrb
and
je
jmp
mov
mov
adc
xchg
dec
clc
in
inc
test
aad
xor
loope
mov
sbb
popf
pop
into
test
or
mov
mov
ficoml
in
xor
cli
mov
imul
adc
pop
push
xchg
add
scas
cli
jns
fnstsw
scas
adc
push
pop
loop
cmp
and
into
jge
clc
push
int3
sub
into
scas
cltd
es
and
fwait
pop
shl
jns
popf
adc
add
sbb
shll
push
fs
and
stc
dec
cmc
xchg
xor
and
lods
stc
xchg
insl
jns
push
ljmp
idivb
test
ss
popa
divb
pop
mov
ret
push
sbb
mov
mov
daa
mov
je
mov
ds
dec
imul
or
inc
rcrl
jle
mov
cmp
inc
popa
adc
cltd
das
mov
jmp
and
cmpsl
hlt
cmpsl
fxch
pushf
loope
int
lcall
or
lods
out
xchg
lods
pop
cld
xchg
sub
fs
xor
leave
jecxz
stos
movsl
push
test
or
clc
and
mov
and
je
mov
pop
in
testl
jl
push
lods
adc
push
sbbb
jge
dec
adc
ds
fwait
mov
stos
in
dec
mov
pop
jl
stos
and
jo
mov
cltd
mov
dec
out
jns
int3
fldl
inc
scas
mov
in
xlat
cmp
pop
int3
bound
test
sbb
push
mov
and
daa
cmp
popf
mov
cmpsb
cs
or
lcall
jnp
mov
jecxz,pn
pop
lods
xchg
mov
out
mov
fwait
imull
fbld
mov
add
sbb
cmp
inc
arpl
test
nop
std
pop
and
push
shlb
cmp
push
xchg
add
testl
loop
out
sbb
fstps
cmpb
sub
xchg
movsl
imul
ljmp
adc
sahf
jl
cld
adc
add
push
push
incl
adc
xchg
mov
es
mov
movsl
lods
sbb
mov
xor
fmuls
addb
fdivrl
in
jecxz
dec
std
cli
push
lock
out
mov
pop
push
xor
jle
lea
xor
jbe
mov
idiv
and
inc
mov
jge
add
and
popf
push
sub
jmp
shrb
je
ficompl
in
in
sub
xlat
lock
std
dec
movsb
xor
and
push
imul
push
inc
and
adcb
xchg
lods
fdivrl
adcl
xor
cld
addl
rolb
popa
mov
aam
roll
test
gs
pop
imulb
adc
aam
ret
mov
adc
test
ror
ret
adcl
sarb
leave
mov
mov
cmpsb
jecxz
or
xor
sbb
out
add
jae
jb
inc
cs
adc
and
das
sub
insl
movsb
sub
outsb
testb
nop
xor
sub
lock
sbb
xor
movsb
jo
movsl
adc
int
or
and
sbb
jle
into
pop
lret
test
outsl
or
lods
idivb
out
std
cwtl
call
cmp
outsb
adcb
xor
dec
pop
sbb
pop
orl
mov
dec
ds
scas
insl
pop
lret
bound
cmp
bound
add
mov
movsb
dec
add
mov
shll
es
jge
ret
fcoms
jmp
fldcw
ja
push
mov
mov
loope
add
imul
push
inc
pop
loopne
mov
or
mov
std
xchg
cmp
je
js
mov
cmp
dec
enter
fcmovnbe
mov
inc
push
sub
hlt
xor
loop
aad
je
xchg
test
cmpsl
or
iret
cmp
pop
clc
xor
imul
dec
cmp
lcall
sub
xchg
cli
pop
mov
les
popa
push
rorb
ja
cld
push
xchg
xchg
xchg
mov
fstl
aas
inc
out
cli
and
inc
dec
lahf
repz
ret
push
jo
popa
movb
xchg
mov
imul
fisttps
pop
icebp
sub
mov
leave
ja
scas
stc
enter
out
mov
inc
pop
mov
pop
ja
icebp
loop
add
aas
in
pop
mov
or
and
jl
pushf
mov
outsl
pop
lds
subb
mov
sbb
jge
das
ss
fwait
xchg
and
dec
pushf
mov
mov
mov
mov
jecxz
or
cmp
inc
cld
jbe
xor
out
repnz
sahf
xor
aaa
mov
pop
jle
pop
inc
adc
loop
jecxz
mov
cmovnp
push
jle
add
jmp
mov
adc
sbb
jo
dec
lret
dec
push
and
inc
stos
xchg
sbb
push
and
or
mov
push
cld
sbb
popa
mov
xor
dec
addr16
jmp
jecxz
ss
call
add
les
bound
push
movsb
subl
imul
xchg
push
test
pop
int
dec
scas
data16
ss
adc
sarl
sarb
push
idivl
sarb
pop
ljmp
pop
aam
dec
mov
push
ret
jo
subb
jne
test
leave
xor
out
dec
adc
xor
mov
pop
jae
push
sub
mov
push
pop
jle
cld
mov
dec
out
sub
cmpsb
sar
jnp
jmp
and
adc
pop
cld
xchg
lods
std
pop
pop
hlt
test
jle
push
xor
les
mov
lds
in
ljmp
mov
outsb
inc
movsb
xor
sub
scas
adc
cwtl
and
cltd
pop
out
call
cld
inc
and
cmpsb
daa
mov
mov
mov
enter
pop
jmp
pop
shrl
push
ror
bnd
adc
sub
sbb
dec
xor
mov
xchg
jbe
mov
shll
popf
sub
mov
jae
es
mov
sub
mov
cli
sbb
push
fwait
xlat
aad
xor
sbb
xchg
lcall
and
lods
test
mov
repnz
pop
mov
mov
ljmp
call
xor
or
filds
sbb
stos
sub
fdivrl
jns
or
dec
fsubrs
pop
shl
js
inc
testb
sarl
xor
adc
int3
mov
das
sbb
sub
arpl
shrb
jne
sbbb
aas
add
jmp
jecxz
mov
stc
fisttps
scas
xor
add
aaa
fabs
or
or
addb
stc
jl
jl
out
mov
out
inc
in
shr
push
push
xor
out
pop
adc
adc
loop
loop
ds
xchg
arpl
aaa
sub
pop
cmp
dec
jno
negb
out
cltd
lret
push
mov
mov
inc
int3
adc
pushf
es
repnz
in
ss
jmp
sbb
push
mov
test
push
mov
cmp
fsts
mov
mov
push
pop
and
test
inc
cmp
xor
push
adc
mov
rol
insl
mov
push
sbb
movsl
jmp
or
push
pop
push
movsb
pop
push
aam
int3
push
scas
adc
je
mov
jno
and
pop
fadds
roll
jp
jbe,pt
lods
push
mov
sbbb
int
lods
dec
testb
and
testb
cld
rcll
enter
push
add
sbb
push
cmp
sbb
rorb
test
scas
fcoml
xchg
cmc
loop
mov
aas
or
test
iret
ja
mov
outsl
mov
mov
xor
pop
xchg
xchg
inc
loop
cltd
jmp
shl
mov
hlt
cs
and
mov
xchg
or
dec
add
loope
jns
pushf
jg
push
cmp
mov
nop
aad
or
fisubl
shlb
rcr
or
call
push
pop
cltd
lret
pop
mov
mov
out
and
inc
inc
cmp
xor
jmp
push
lods
add
adc
lret
jle
loope
sub
push
and
bound
and
or
mov
jo
fmuls
mov
orl
insb
and
xchg
in
inc
xchg
pushl
and
xchg
jns
jne
rcl
out
pop
mov
stc
movsl
je
sahf
jmp
sbb
hlt
mov
xorb
clc
pop
clc
ljmp
xor
inc
loop
in
or
lods
dec
stc
xchg
jno
lret
pop
jb
and
testl
aaa
psraw
push
jge
insl
mov
or
lret
leave
mov
or
jge
fbld
adc
adc
daa
cmpsb
push
lsl
mov
jnp
ja
fcoms
pop
push
iret
aas
ss
int3
ljmp
mov
lret
mov
mov
movsl
in
cmp
xchg
lock
push
test
xchg
pop
jg
iret
cmp
ds
mov
or
loope
clc
sub
dec
test
shl
adc
mov
mov
fwait
into
cwtl
push
or
roll
pop
in
dec
and
pop
add
fisubs
xlat
les
outsb
clc
xchg
out
int3
loopne
cmc
push
pop
jle
pop
mov
add
repz
cmp
sub
jecxz
stos
pop
push
jo
pop
mov
add
push
cmp
arpl
lods
fs
test
add
imul
clc
lock
leave
loopne
jp
push
cmpsb
jno
imull
cmp
push
cmpsl
jecxz
sbb
jmp
dec
imul
enter
imul
dec
cwtl
sti
ljmp
and
mov
lods
xchg
shr
adc
push
xchg
xor
add
rorb
std
lret
cld
rorb
fsts
mov
cwtl
add
pop
inc
jnp
lea
push
inc
inc
add
daa
xlat
xchg
jmp
pop
add
xchg
jg
adc
arpl
shlb
lahf
imul
stos
loopne
add
dec
jb
out
cmpsl
popa
sbb
sahf
push
mov
mov
dec
notl
movsl
push
sub
sub
push
stos
add
cmpsb
or
fstp
and
pop
xchg
dec
out
cmp
inc
add
stos
fisubrs
pop
add
int3
mov
xchg
enter
in
repz
xchg
stos
fisttps
daa
ja
mov
rep
mov
mov
sub
lods
inc
ret
xlat
mov
out
jno
pop
scas
loope
pop
ror
lahf
mov
sahf
dec
add
imul
clc
je
dec
mov
or
insb
inc
cmp
pop
cmp
or
mov
mov
daa
fbstp
jne
loopne
movsb
lcall
sahf
push
adc
jb
in
pop
cmp
jnp
push
fmull
lret
cmp
out
push
shlb
repz
pop
cmc
push
xchg
jne
or
push
cmpsl
adc
jnp
lret
pop
loopne
lret
ljmp
xchg
xlat
or
pop
mov
shr
xchg
in
mov
lea
xchg
test
mov
in
and
es
cld
aaa
inc
adc
pop
push
mov
xchg
loope
shl
loopne
or
fs
lahf
pop
lcall
inc
jne
pop
jae
xchg
pop
mov
push
push
imul
add
xchg
rsqrtps
out
adc
test
imul
push
cmp
outsl
jl
dec
xor
fistps
mov
mov
jno
imul
jmp
imul
jbe
fcomi
scas
xlat
aas
cmp
rcll
lock
sbb
add
mov
xchg
inc
sarb
cmp
popf
push
inc
or
inc
arpl
sti
adc
cmp
push
pop
in
dec
push
adc
adc
popa
es
push
sahf
aad
xchg
pop
or
push
rcr
jnp
dec
scas
xlat
mov
loop
dec
cli
pop
gs
int3
hlt
xchg
aam
sahf
push
lahf
jmp
or
dec
test
jl
mov
push
popf
fsts
xlat
nop
cmp
mov
scas
movd
bound
jecxz
mov
sbb
shlb
mov
dec
jae
imul
shlb
out
int3
pop
idiv
cmp
jge
dec
cvtps2pi
dec
sarb
pop
aaa
repnz
dec
jne
pop
loope
jnp
pop
cmp
bound
lock
data16
loop
aam
leave
sbb
dec
push
jmp
xlat
xor
inc
insb
add
mov
xor
or
push
fcomps
push
lods
mov
into
sbb
fsubl
jmp
sbbb
and
push
dec
and
fldt
or
cmp
addr16
cmpsl
or
jb
lret
mov
insl
mov
sbb
sbb
cmp
stc
xchg
xchg
cmp
in
int3
cmc
jno
mov
jb
aad
test
inc
sbb
push
sub
dec
rorl
fmull
mov
shll
sub
inc
call
jge
push
daa
or
scas
pop
shlb
cmp
or
cli
or
xchg
adc
xchg
xchg
test
inc
int
push
xchg
xchg
sti
inc
and
or
fbld
pop
fidivrs
push
pop
fidivl
pop
cmp
xchg
adcb
out
cld
lock
pop
mov
ret
push
mov
popf
iret
or
aaa
sub
xor
cs
sub
sbb
and
xor
scas
jl
inc
xchg
jmp
aad
repz
scas
out
sub
pop
je
cmp
enter
rolb
mov
lret
mov
xor
add
cltd
mov
cmpsl
lea
dec
xchg
push
fnstenv
imul
das
rcrb
mov
jmp
and
aaa
xchg
outsl
stos
xor
rcll
push
and
loop
pop
ljmp
mov
xchg
mov
push
xchg
pop
push
ja
sub
sub
sarl
mov
sti
jns
xor
or
xor
xchg
and
sahf
sub
jne
pop
ffreep
jge
cmp
jae
lcall
in
push
mov
push
add
mov
rcl
lds
jg
fs
clc
movsl
pop
jmp
jbe
mov
sahf
adc
sbb
andb
cmp
mov
ret
fbld
int
loope
or
lds
cli
les
movsb
jb
addr16
cli
jp
mov
push
nop
mov
sahf
jp
fs
sarb
add
push
movsb
icebp
scas
cmpps
jbe
cmc
addr16
popa
xor
loop
imul
rorb
flds
lcall
cld
cmc
dec
pop
push
daa
pop
pop
aam
jmp
cmp
fnsave
int3
dec
jno
dec
in
pop
sbbb
mov
fsubs
and
lahf
into
or
mov
push
imul
lods
jmp
dec
cmp
mov
pop
imul
cwtl
inc
sub
sbbb
repz
mov
insl
or
adc
hlt
add
xor
or
mov
jecxz
js
mov
cmp
and
out
test
shrb
pop
pop
cld
insb
lret
dec
mov
cltd
jle
inc
mov
leave
jo
and
repz
jbe
je
out
scas
outsl
lcall
push
shlb
clc
mov
push
add
and
addr16
imul
movsb
icebp
inc
xchg
push
xchg
pop
testl
shrl
andps
pusha
pop
dec
lods
test
xor
pop
jae
icebp
sbb
jge
ljmp
mov
cltd
dec
push
jnp
mov
insb
lcall
inc
cmpb
add
movl
insl
dec
xchg
nop
stc
jmp
inc
xchg
test
inc
cmp
add
mov
cmc
stos
dec
push
lcall
push
lods
and
fadd
mov
leave
push
xchg
sub
xchg
je
fmull
jno
out
mov
scas
movsl
loop
or
or
roll
push
cmp
jnp
or
mov
fs
notl
dec
or
and
loop
xchg
sub
dec
stos
inc
shl
mov
sbb
rclb
ss
in
lock
adc
ficomps
jo
inc
xchg
stos
sbbb
mov
lret
or
fwait
out
outsl
sbb
test
jo
adc
mov
sub
lret
icebp
out
xchg
js
int3
leave
mov
mov
add
aaa
popf
test
jbe
shlb
mov
jmp
aad
lea
lods
jmp
or
inc
fcoml
int
cmp
xchg
and
clc
xchg
mov
and
jno
pop
arpl
gs
insb
test
in
sbb
pop
ret
rcll
std
mov
dec
mov
mov
push
mov
in
insb
lea
inc
mov
pop
popf
sbb
mov
cmc
xor
enter
push
mov
movsb
jmp
xchg
adc
cmp
out
rcrb
inc
fiaddl
shll
sbbb
incb
and
jno
sub
xchg
std
stos
jmp
mov
out
xor
lods
jae
add
out
jnp
cltd
adc
push
add
dec
xchg
std
ja
mov
mov
js
ret
sahf
and
pop
fs
sub
mov
aad
mov
in
pushf
add
xor
mov
sub
inc
leave
pop
mov
dec
cltd
jnp
jecxz
mov
outsb
ret
pop
add
rcrb
jmp
xor
in
or
scas
pushf
push
leave
not
in
and
decb
in
mov
lea
add
loop
add
and
sbb
add
xor
nop
aas
xor
lods
sbb
adc
pop
nop
addb
mov
cmp
mov
sub
out
sar
in
pop
repz
mov
xlat
das
inc
jecxz
dec
sahf
pop
xchg
xchg
scas
mov
xchg
cmp
out
arpl
sti
iret
aas
pop
xor
out
sub
add
aas
xchg
adc
jl
lea
shlb
push
mov
fisubrs
xchg
inc
push
mov
inc
shrl
imul
add
fdivrl
cli
cs
adc
cmp
outsb
in
inc
push
push
xor
ds
push
inc
adc
xor
cmp
inc
je
and
pop
sahf
leave
aaa
inc
das
ret
push
test
xor
insl
add
mov
push
pusha
cmp
adc
out
dec
jp
pop
iret
push
icebp
mov
shll
mov
pop
ret
lahf
daa
aad
inc
mov
shl
sub
inc
sahf
lcall
cmp
ja
insl
es
mov
mov
loop
jnp
out
cmp
inc
push
add
xchg
xor
hlt
xchg
xchg
dec
jge
stos
js
add
inc
cmp
jp
cmc
out
jno
int3
test
test
push
scas
cmp
mov
jle
sti
inc
loopne
xor
in
mov
xchg
xlat
dec
push
or
out
cmpsb
int3
mov
js
inc
sub
into
or
les
into
shrb
or
xor
addr16
mov
mov
loopne
add
outsl
mov
loopne
insl
fcoml
and
jns
or
cmpl
test
mov
in
push
sbb
xchg
gs
adc
mov
jg
shlb
ficoml
lcall
or
dec
iret
shl
gs
mov
test
sarl
add
mov
ret
xchg
aas
enter
adc
mov
xor
or
push
sbb
ret
test
inc
test
leave
lahf
fldcw
pusha
add
jecxz
ds
out
push
push
xchg
fwait
repnz
sub
pusha
mov
xchg
out
es
dec
mov
push
das
rol
xchg
xchg
mov
iret
popa
test
and
mov
dec
xchg
lods
cli
inc
cmp
cltd
out
or
xchg
xchg
imul
ss
or
mov
hlt
fs
mov
mov
repz
dec
lods
out
in
and
daa
jp
xchg
mov
ljmp
mov
mov
imulb
js
mov
inc
sub
fsubp
paddsw
shlb
mov
js
std
test
push
sub
rcrb
push
ret
in
sbb
xchg
xor
add
cmc
dec
cmpsb
dec
jp
mov
mov
ret
cltd
lds
lcall
clc
test
fsqrt
dec
lcall
mov
movsb
enter
pop
ljmp
pop
popa
aas
out
and
mov
jo
xor
dec
xchg
int3
loopne
push
lahf
sbb
cwtl
cmpsb
cmp
nop
aam
dec
dec
sub
fcmovu
push
movsl
pop
iret
idivl
test
pusha
std
int3
sarb
inc
dec
pushf
xor
out
aas
mov
fcom
sub
xchg
stos
add
inc
out
das
fsub
xchg
aas
inc
cwtl
in
adc
lcall
inc
mov
sbb
dec
in
push
dec
jl
loop
mov
push
cmp
filds
dec
or
das
ja
sti
jmp
mov
cmp
je
xor
jg
frstor
xor
int3
cld
xorl
fisttps
and
divl
ffreep
rclb
adc
pop
fisubrs
adc
jge
sti
movsb
leave
push
inc
cli
in
stc
lea
pushf
lods
fsubrs
pushf
js
lods
mov
cli
pop
add
cmp
xor
inc
xchg
inc
stos
dec
jb
les
jecxz
and
fnstcw
adc
dec
xchg
and
mov
dec
pop
mov
rcrb
push
mov
aam
push
icebp
or
push
and
ficoms
sub
sbb
js
adc
in
mov
insl
ret
lock
xchg
movsl
sub
inc
int
mov
icebp
sub
je
push
es
sub
inc
push
fsubp
mov
das
popf
mov
and
lret
in
cwtl
jle
bound
mov
cmp
jne
mov
cs
push
push
stos
mov
fistps
cmp
jecxz
jns
pusha
dec
imul
xor
xlat
mov
sub
and
inc
mov
jae
sub
jne
mov
xchg
push
inc
je
xor
cmp
adc
jmp
cmpsb
test
aas
fwait
int
loope
xchg
dec
pop
mov
aaa
lods
testb
out
hlt
out
pop
test
dec
push
in
mov
lds
push
inc
push
mov
sbb
xchg
repnz
push
cmpsl
faddp
jl
push
outsl
shll
mov
inc
repz
xchg
out
int
aas
cmp
inc
out
into
xor
xor
data16
push
in
shll
rep
cmovnp
push
xor
dec
mov
fmull
mov
icebp
adc
mov
jnp
in
cwtl
mov
jae
jge
or
scas
insl
stos
lods
push
outsl
lods
out
cltd
scas
fbld
cmp
xor
lods
jle
scas
in
xchg
ror
sti
or
outsl
lret
push
push
rol
lock
orb
imul
les
jmp
lods
mov
out
cmp
jbe
inc
out
inc
iret
jmp
xor
push
mov
xor
ja
ds
fsubrl
cmpsl
mov
mov
out
dec
vorps
insb
add
arpl
ljmp
pushf
sbb
fcoml
jg
add
and
jnp
or
mov
out
sbb
xchg
jb
fidivrs
in
sub
lods
add
aas
cltd
jmp
xor
leave
mov
test
repnz
push
sub
cmp
pop
add
inc
lahf
sub
and
or
jae
test
das
jge
out
push
shrb
imul
das
adc
mov
sub
mov
int3
repz
add
adc
push
jne
rcll
xorl
in
mov
outsl
mov
lret
jnp
in
sbb
test
pop
jbe
adc
mov
mov
daa
fimuls
jge
sub
imul
out
inc
ljmp
or
xchg
adc
and
pop
mov
add
rcrl
fildl
dec
xchg
jg
ljmp
pushf
test
and
rol
repnz
jbe
push
sbb
insb
arpl
xor
adc
mov
push
xchg
cli
bound
cmp
cmc
dec
gs
push
or
out
cmpsb
les
shlb
pop
insl
scas
fidivrs
scas
mov
shl
jnp
ljmp
sbb
mov
lds
xchg
cmp
push
mov
int3
fnstenv
leave
adc
shlb
dec
pop
jnp
sahf
inc
out
pop
adc
aas
testb
mov
and
add
in
sbb
mov
scas
xchg
fstl
jle
sub
or
iret
inc
outsl
mov
sbb
cmp
mov
sub
outsl
or
inc
jno
adc
jecxz
in
arpl
mov
lods
cmp
sub
mov
adc
xchg
and
mov
ffreep
mov
jno
subl
roll
loop
push
mov
sub
nop
js
leave
pop
fsubp
xor
lods
ret
jbe
cmp
loopne
test
mov
outsl
adc
fs
mov
mov
push
push
sbb
jb
aam
in
push
jle
adc
add
shlb
jae
xchg
cs
mov
loopne
roll
out
add
add
loopne
ficomps
inc
xor
fidivl
push
push
into
dec
jnp
fucompp
sbb
mov
xchg
pop
pop
push
lds
adc
les
add
add
call
jne
push
test
xor
loope
arpl
sub
test
repnz
xchg
outsb
es
sub
xor
cli
popa
or
flds
cmp
lea
pusha
into
ja
add
lock
xor
sbb
test
push
sbb
repz
mov
lea
mov
push
mov
dec
ljmp
insb
dec
xor
fstps
or
push
push
pop
das
push
inc
adc
mov
je
test
stc
jnp
pop
mov
popf
sbb
dec
add
loope
leave
stos
pop
push
sbb
cwtl
push
sti
and
call
and
aas
jecxz
push
ljmp
xor
aam
push
fs
xchg
dec
mov
les
lods
jns
loop
sbbb
dec
or
mov
pop
loopne
xor
mov
shr
or
subl
loope
inc
inc
jns
out
cli
in
mov
aam
lock
int3
rolb
gs
test
sbb
sahf
cmp
mov
sub
testl
mov
pop
popf
stc
add
aas
or
es
lcall
sbb
pop
dec
shll
shl
cmp
jbe
mov
fwait
dec
fdivrl
push
mov
mov
xorb
add
pop
xor
aam
iret
inc
ds
mov
subl
add
aad
fs
sub
xchg
out
jmp
push
pop
rorl
xlat
adc
dec
fcoml
xchg
call
mov
push
vpshufd
ffree
or
outsb
nop
loop
dec
and
sti
xchg
dec
popa
push
jp
pop
xor
push
aaa
add
sub
push
adc
scas
xor
add
xchg
dec
mov
dec
in
sbb
shl
cs
adc
cltd
insb
and
and
test
fldl
mov
pop
and
imul
in
jecxz
mov
std
or
cmp
daa
cmp
out
adc
jp
lea
and
rcll
push
xor
inc
lcall
or
jbe
pop
cwtl
jnp
in
inc
inc
leave
ds
jle
pop
stos
cmc
fs
add
fwait
nop
jnp
fs
push
xchg
lds
jmp
filds
repnz
add
jb
testb
jno
popf
rclb
mov
testb
mov
push
or
bnd
lcall
clc
sti
movsl
jl
fisubrl
es
addr16
inc
and
or
mov
mov
mov
push
or
pop
pusha
stc
pop
mov
mov
mov
fdivrs
in
nop
mov
sbb
test
imul
mov
fcmovb
mov
dec
adc
in
mov
jae
fists
es
ljmp
inc
fwait
xchg
cmpsl
and
xchg
repnz
add
insl
pop
jb
xchg
inc
sub
in
mov
push
out
jle
and
roll
adc
imul
inc
and
mov
std
loope
xchg
cmp
clc
leave
push
ds
jmp
add
loope
ret
mov
xchg
ljmp
dec
pop
pusha
stc
addr16
ss
sub
mov
sbbl
and
popf
popa
and
mov
xchg
add
ret
dec
add
and
and
int3
sbb
dec
ret
mov
iret
fiaddl
imulb
sahf
or
fdivrs
cmove
ret
inc
mov
inc
mov
mov
shrb
cmp
adc
jno
decb
mov
mov
inc
mov
fcmovnb
jl
shll
inc
push
jnp
icebp
inc
std
imul
idiv
sub
cmp
mov
gs
jle
testb
xchg
cmpsb
sub
adc
push
xchg
insl
adc
cwtl
mov
mov
arpl
mov
mov
jecxz
ja
sahf
fstps
add
mov
shlb
adc
test
sbb
out
ja
push
ljmp
ja
jne
mov
jl
push
pop
xchg
sbb
lods
pop
das
sbb
insl
jp
rol
lahf
imul
stos
or
ret
rolb
mov
scas
aad
lods
or
jno
jge
sbb
dec
imul
shlb
pop
jle
movsl
mov
shlb
push
fcompl
jp
ja
lods
cltd
adc
fwait
sub
and
pushf
xchg
mov
aaa
cmp
pop
insb
or
out
sbb
rcr
adc
arpl
js
sub
jle
xor
sbb
mov
int
ror
in
shlb
pop
idivb
insl
push
mov
aam
dec
add
fisubl
lds
mov
repnz
adc
test
fucomi
mov
mov
cmp
das
insl
dec
mov
and
repnz
popa
icebp
or
rcll
popf
jge
cmpsb
mov
pop
xchg
pushf
sahf
xchg
stos
sbb
inc
dec
testb
dec
icebp
sbb
clc
insl
jmp
jg
fistl
rolb
fidivrs
add
pop
mov
bound
movsl
cmp
in
xor
xchg
leave
push
adc
jmp
push
lret
mov
pop
add
popf
mov
mov
imul
lods
cmp
xor
rorl
rorb
push
lods
add
or
sbb
out
xor
xchg
cmp
aad
test
les
mov
addb
subl
add
add
orl
adc
mov
sahf
or
jp
push
decb
std
cmp
ds
inc
ds
adc
repz
cld
jge
xrelease
outsl
xchg
stos
xchg
sub
out
repnz
xorl
jnp
xor
scas
and
push
and
cmp
jle
xlat
repnz
cmp
gs
lret
pushf
in
sub
push
sbb
repz
push
and
in
mov
pop
pop
in
mov
adc
adcb
sub
int3
call
out
into
adc
fdivr
and
sub
pushf
mov
imul
inc
add
jle
pusha
retw
xchg
mov
jb
jno,pt
jp
jnp
cltd
cmp
pop
cmp
loop
fisubrs
inc
cltd
rolb
push
mov
pop
divb
pop
xchg
outsb
xor
dec
cs
jmp
std
negb
adc
inc
ret
pusha
ret
sub
ljmp
sbb
mov
xchg
push
mov
lds
sbb
sub
pop
sub
inc
lea
aad
inc
movb
fisttpll
test
mov
cli
fcoml
cmpsb
dec
fmuls
mov
mov
clc
mov
inc
mov
pop
je
hlt
mov
lock
push
into
push
insb
ss
cwtl
ja
fcmovbe
and
mov
outsb
stc
popa
xor
jge
scas
mov
into
sbb
test
outsb
or
sbb
mov
outsl
leave
jge
mov
mov
cltd
add
into
jmp
pop
mov
xchg
mov
xchg
push
aad
mov
push
cmp
in
inc
int3
jle
lcall
mov
mov
cmp
xchg
popl
lock
addr16
das
fsubrs
add
add
push
sbb
scas
add
sub
pusha
imul
hlt
dec
jmp
jbe
jbe
sbb
mov
movsb
add
mov
xor
dec
test
pop
cmpsb
pop
jnp
sarl
test
sar
push
mov
push
pop
data16
je
cmpl
dec
les
add
dec
divl
mov
or
outsb
scas
cmp
stos
mov
push
push
fs
imul
sub
xlat
mov
adc
sub
out
jle
inc
das
cmp
arpl
or
mov
sbb
inc
or
or
push
adc
or
cmpsb
xchg
xchg
cmp
fsubrs
int
shl
or
sbb
pop
repz
popa
addr16
xor
mov
add
insb
push
cmp
push
addb
add
ja
cmp
stos
lods
pop
out
sbb
add
aaa
push
sub
pop
pop
mov
cmc
out
jp
nop
mov
dec
or
ds
cmp
cmp
hlt
mov
cltd
fists
mov
out
imul
jle
and
sbb
xchg
repz
addr16
add
and
rcll
lods
add
ss
enter
add
add
in
xor
push
and
outsl
inc
movl
jle
fdivrl
or
xor
push
fdivrl
std
sbb
hlt
sub
xor
pop
imul
adc
push
mov
pop
xchg
jge
xor
inc
adc
js
pop
jo
mov
in
mov
sbb
shlb
int
mov
les
and
inc
insl
es
and
jae
fadds
stos
bound
add
lods
jl
cmp
push
xor
lods
mov
movsl
adc
adc
movsb
xchg
sbb
cmc
mov
mov
xchg
lods
xchg
aam
dec
mov
lret
cld
mov
adc
adc
jo
sbb
lea
into
adc
jp
mov
cmp
fldt
das
cmp
jb
push
inc
and
inc
cwtl
sub
in
mov
push
int
enter
lods
aas
add
lds
scas
push
and
mov
jnp
mov
scas
adc
sub
test
push
jg
adc
xchg
divl
addl
and
mov
mov
push
rol
fistps
nop
lcall
mov
xlat
andb
adc
pop
jp
imul
andb
mov
aaa
lahf
sub
mov
push
or
mov
or
pop
push
jmp
inc
cmc
adc
or
mov
call
sbb
and
cld
loop
mov
lock
mov
pop
out
jg
jge
stc
and
pop
pop
outsl
xor
and
fimull
ja
inc
mov
cmp
mov
push
jb
cs
scas
movsl
mov
test
es
loopne
ss
mov
or
push
or
je
sbb
insl
movsb
shrl
mov
xor
mov
dec
das
jge
cpuid
inc
fsubl
loopne
sub
sar
add
cmpsb
iret
popf
adc
xlat
or
pop
jmp
cmp
xor
dec
dec
dec
sahf
fisubrl
xchg
push
mov
pop
dec
cmp
icebp
cmp
testl
shlb
dec
sbb
es
shlb
sahf
cmpsb
adc
inc
subl
repnz
lock
sub
cmpsl
js
sub
insl
cmp
jbe
adc
inc
cltd
lret
cmp
jo
mov
mov
pop
insb
ficompl
fwait
push
push
mov
pop
push
inc
cmp
cs
sbb
mov
cmpsb
push
pusha
aaa
push
cmp
push
mov
shr
jecxz
jle
test
pop
or
aas
cmp
in
add
cmpsb
cmc
pushf
xchg
imull
call
or
ljmp
adc
loop
push
jno
lea
pop
cltd
sub
outsb
scas
inc
rclb
lods
rcrl
mov
or
dec
xchg
xchg
xchg
and
push
sbb
mov
sti
and
ds
cmp
xor
jge
lret
mov
or
movsl
dec
adc
add
les
stc
and
out
daa
dec
fadds
push
movsb
imul
hlt
push
add
mov
and
cmp
xor
inc
inc
cvtps2pd
aas
mov
pminub
enter
out
push
add
test
ret
xor
movsb
lret
aaa
inc
cvttps2pi
push
sub
hlt
pop
mov
pushf
leave
out
daa
cmp
stos
lahf
push
mov
movsb
mov
push
fcomip
or
test
test
mov
mov
fnsave
jecxz
sub
dec
rclb
xor
pop
push
jmp
or
cmpsb
sbb
sar
loope
ficoms
jmp
jne
int
scas
mov
popa
loopne
push
mov
add
ret
sbbl
xchg
popf
mov
jge
mov
xchg
insb
inc
xchg
dec
jp
jg
mov
imul
dec
fsubrs
mov
ret
sarb
add
and
add
xchg
cmp
and
dec
movsb
mov
xchg
or
xor
xchg
cld
mov
arpl
pop
mov
mov
out
fwait
push
push
sbb
mov
mov
xchg
lcall
sti
mov
inc
or
addl
leave
sub
dec
gs
psadbw
or
mov
mov
mov
cmpsb
push
sti
jecxz
xor
lcall
push
dec
test
stc
test
movsb
xor
mov
xchg
sbb
add
decb
inc
mov
icebp
jbe
mov
push
aad
jno
test
sub
push
xor
std
jbe
pop
push
mov
test
lods
fwait
or
rol
sahf
and
push
push
pushf
add
xor
jle
ret
test
jo
push
and
aam
mov
fisttpl
aad
imul
in
xor
push
gs
sarb
jo
add
xchg
sahf
rcrl
mov
jp
repz
cmp
je
add
fiadds
cld
fldlg2
push
push
push
lods
xor
sbb
and
push
pop
lahf
inc
enter
jecxz
inc
or
add
addr16
sti
add
es
sub
cmpb
pop
pop
mov
mov
scas
insb
push
in
add
inc
popa
adc
cltd
repz
out
push
cli
mov
pop
push
aas
stos
sub
jge
jg
xchg
xor
adc
jne
fwait
push
jnp
cwtl
jnp
icebp
rep
inc
cmp
adc
daa
cmp
js
inc
scas
sub
arpl
scas
test
out
in
int
xchg
pop
jno
jo
out
cwtl
adc
mov
inc
push
ljmp
outsl
stos
loope
fnsave
imull
mov
stos
sti
cmp
cmc
sub
fcompl
xchg
stc
sbb
sbb
jge
outsl
and
add
loop
cmp
jecxz
dec
loope
loopne
mov
xchg
clc
xorb
pop
loope
shlb
pop
test
pop
push
aas
push
add
fcmovne
pop
lret
jecxz
decb
mov
jns
jnp
fdivr
xchg
push
pop
push
inc
xchg
ret
mov
or
scas
lds
fnop
push
jge
pop
jg
out
std
cld
xchg
jbe
xor
mov
and
mov
mov
cmc
jb
adc
inc
adc
nopl
pop
mov
outsb
pop
mov
inc
jge
push
sub
push
es
cmpsb
into
dec
imul
imull
ss
pop
push
outsl
maxps
stc
jb
add
mov
mov
inc
cwtl
ret
out
cmpsb
ss
fwait
ret
mov
lcall
rorb
insb
clc
jnp
pop
jg
mov
push
mov
mov
sub
ds
dec
sbb
add
sbb
aad
cmp
mov
cld
repz
imul
xchg
in
xor
pop
inc
shll
stos
sbb
pop
jg
inc
push
icebp
mov
nop
adc
fwait
rorb
mov
pop
cmp
pop
add
add
pop
inc
add
push
iret
pusha
pop
adc
mov
xlat
mov
pop
add
dec
leave
pop
ja
inc
rcrb
inc
out
adc
cmp
pop
popf
xchg
mov
mov
or
hlt
popf
or
mov
test
mov
adcl
iret
add
mov
sub
out
mov
inc
xor
or
outsb
gs
fld
test
sub
or
jnp
sti
stos
sar
das
gs
or
stos
pop
scas
daa
addr16
fsubr
cs
mov
xor
fdivl
cmpsl
cli
cltd
fcomps
adc
repz
repnz
pop
pusha
jno
clc
das
mov
pop
add
lock
jecxz
jb
insb
data16
jp
mov
sub
mov
clc
pop
sub
in
pop
icebp
jg
sub
dec
xchg
mov
stos
xor
dec
popa
popf
in
je
jp
lds
inc
out
div
mov
pop
mov
push
cmpsb
cli
cli
pop
fisttps
arpl
ss
div
addb
jns
cmp
adc
inc
aad
test
mov
inc
adc
fmuls
les
andb
fwait
stc
pop
cmpsb
mov
lret
jns
aaa
ljmp
lock
mov
jmp
aam
repnz
lahf
das
jnp
mov
loop
pop
popf
sbb
xorl
inc
sbb
inc
xor
test
shl
dec
lret
xlat
fistpll
insb
stc
jnp
outsl
in
pop
es
cs
inc
xor
and
out
jg
mov
and
hlt
stc
pop
lock
fs
out
movsb
into
sbb
into
mov
xor
out
or
mov
adc
pop
mov
jge
mov
jmp
jg
aaa
xor
jle
rorb
dec
loop
or
call
fs
fwait
adc
out
and
xor
pop
cs
inc
sub
sbb
aad
loope
jb
sbb
jb
push
nop
push
ret
push
test
pushf
push
jge
and
add
inc
sarb
and
mov
cmp
pop
outsb
xchg
sub
arpl
cmp
jp
leave
jle
cli
in
mov
xlat
adc
mov
stos
inc
nop
addr16
xchg
data16
xchg
shrb
out
pop
call
add
mov
mov
cmp
push
in
mov
mov
mov
jb
pusha
popf
inc
pushf
and
imul
mov
shr
mov
and
inc
push
sbb
sbb
roll
push
into
loop
repnz
or
jmp
jae
lret
add
xchg
icebp
pop
cmp
mov
mov
inc
repz
inc
jns
int3
insb
iret
dec
test
sub
jnp
xchg
in
xchg
mov
adc
jno
cmc
push
adc
xlat
xchg
and
lea
mov
inc
sbb
stc
out
cmp
dec
xor
out
ret
jp
jmp
pop
movsl
jg
jp
test
cs
inc
add
aad
xor
or
shll
fcoml
pushf
add
popa
stc
stos
addl
out
fisttpll
mov
lea
mov
js
adc
or
shlb
int
ds
push
js
mov
and
fildl
imul
test
in
adc
cwtl
sub
push
ret
mov
shl
mov
fstpt
insl
aam
xchg
push
mov
push
push
movsl
pop
xor
sub
sub
xchg
aas
mov
xchg
pop
xchg
pop
std
rcll
fsubl
mov
jbe
add
sbbl
jp
ret
insb
dec
push
and
test
jbe
inc
das
mov
mov
push
jp
ficoms
mov
dec
xchg
in
clc
clc
es
ss
aas
nopl
sahf
pop
enter
ja
push
in
aad
idivl
fmul
add
pop
add
jl
add
push
cld
inc
ds
movsb
dec
dec
inc
test
ss
fwait
add
pop
ret
iret
dec
fcoml
aam
decb
movsl
adc
mov
sbb
jle
xchg
rcrl
inc
pop
rclb
adc
xchg
dec
outsb
xchg
insb
cli
xor
adc
pop
es
test
fs
andl
or
add
ljmp
cmpl
in
in
test
add
lds
inc
adc
dec
cmpsb
sahf
inc
lea
xchg
enter
add
pop
arpl
aam
cltd
lret
jp
dec
xor
fidivrs
and
repz
adc
nop
sbb
ret
xor
push
dec
test
ljmp
mov
push
sub
sbbb
pop
pop
sahf
leave
repnz
push
jmp
outsl
jnp
sub
push
sub
and
imul
ss
js
xchg
push
adc
mov
xchg
mov
call
mov
popf
sbb
sahf
in
fistl
inc
pop
jae
pop
jg
jp
cmp
cwtl
repnz
lahf
mov
cmp
fsubrl
jnp
jecxz
xchg
jg
mov
lahf
pop
jo
sahf
mov
cld
mov
fsqrt
add
jge
mov
push
enter
idivl
dec
sti
pop
xor
push
stos
rorl
jp
sbb
and
sbb
outsb
push
iret
add
xchg
sub
inc
popf
mov
pop
mov
fdivs
push
push
notl
and
xchg
test
clc
ljmp
inc
cmc
and
adc
popw
rorl
sbb
movsb
cmp
mov
dec
in
push
xlat
ficomps
cmp
cli
es
inc
stc
in
rolb
push
dec
in
jne
out
popf
insl
lds
inc
cli
int
pop
add
xchg
sub
test
lret
loop
push
push
and
fldenv
scas
std
mov
pop
push
ja
pop
push
out
cmpl
mov
out
mov
dec
popf
mov
sub
push
pop
cmp
add
fxch
mov
pop
adc
jg
jl
pop
rclb
cmpsb
lods
stc
xchg
insl
std
push
sar
cmp
popa
in
lcall
testb
repz
adc
and
jns
std
xor
mov
leave
mov
shll
nop
dec
jge
or
es
out
pop
sbb
cld
jb
lahf
mov
shll
sbb
in
push
add
mov
xchg
test
pushf
loop
loop
dec
inc
filds
jecxz
jl
je
inc
jge
inc
mov
sub
repnz
fidivs
and
mov
popaw
aaa
std
filds
test
je
dec
lods
inc
or
fsubs
insl
mov
popa
inc
and
imul
jp
loope
sahf
push
jb
push
add
push
xor
into
sar
cs
push
into
jo
sub
or
add
push
aam
shlb
ljmp
and
pop
imul
rorb
jb
cmc
mov
mov
adc
jnp
sbb
xchg
and
call
add
in
inc
arpl
push
pop
xor
xchg
pop
popa
pushf
jmp
lret
add
add
cli
add
lret
ret
scas
push
pop
xor
push
jbe
sbb
ja
test
jp
fadd
xor
xor
cmpb
jbe
push
inc
inc
lret
mov
bound
sub
dec
out
outsl
mov
fiaddl
xor
jo
mov
int
movsb
call
mov
ss
in
shrl
cmp
lods
xchg
xor
jmp
int3
mov
push
ret
aam
sbb
mov
aaa
je
lret
les
repz
xor
xchg
xchg
mov
xchg
into
roll
adc
push
pop
incl
in
jp
jl
call
mov
adc
xchg
jg
pop
push
mov
mov
pop
pop
fdivrs
mov
sbb
arpl
fstl
lahf
das
adc
notb
lahf
cmp
cmc
insl
mov
loope
pop
es
sbb
iret
rcr
test
xchg
cmp
push
add
lods
or
iret
dec
out
in
lret
cmp
push
sub
movsl
xor
or
ljmp
js
hlt
ret
pop
ret
aas
mov
mov
inc
dec
pop
xchg
xorb
pop
insb
rcll
data16
pop
outsb
popa
clc
cmpsb
jnp
std
mov
iret
pop
inc
xchg
je
movl
popa
negb
addr16
call
push
aam
adc
daa
adc
divb
fisubrl
push
inc
ds
add
lods
mov
orl
imul
imull
loope
sub
lock
nop
sub
aam
in
fdivl
xor
sti
data16
shr
cmp
rorb
popf
insb
imul
mov
ret
jns
lds
rcrl
negl
insl
std
mov
and
or
jge
into
loopne
negb
jns
test
and
dec
lds
ss
push
iret
mov
ror
cli
cltd
aad
add
in
das
ds
ficoml
sub
sahf
in
inc
mov
xor
flds
test
out
or
scas
ret
jae
sub
sub
repnz
push
adc
adc
xchg
sbb
mov
aaa
jnp
loope
mov
jne
sbb
dec
lcall
dec
push
mov
js
repnz
in
test
cmp
xor
addb
aas
or
cs
mov
jecxz
nop
sbb
or
push
dec
xor
imul
cmp
pop
int3
aaa
mov
pusha
push
push
insb
loopne
xchg
and
ljmp
xchg
je
mov
xchg
xchg
popf
cli
cld
inc
push
ficoml
popf
data16
movsb
mov
add
rolb
xor
loopne
add
jmp
lods
or
bound
scas
pop
mov
pushf
popf
pop
xor
pop
cmp
cmpsb
push
iret
mov
add
jb
xchg
mov
icebp
shr
cmp
jl
stc
insb
inc
stos
int
pop
pop
sub
mulb
filds
dec
mov
or
ret
and
bound
gs
fnstsw
mov
and
inc
mov
stos
js
cwtl
mov
dec
sub
and
sub
sub
lret
add
and
pusha
daa
sub
mov
and
add
mov
jp
and
test
xchg
loope
fstps
sbb
sub
mov
stc
pusha
int
mov
aaa
dec
jo
cmp
sub
adc
fldcw
adc
xor
cmp
leave
cmp
mov
out
add
dec
test
add
sbb
adc
sub
mov
movsb
cld
sbb
dec
test
and
es
gs
ret
or
pusha
mov
mov
ss
dec
arpl
rolb
ret
inc
pop
mov
test
repz
repnz
jb
xchg
mov
mov
mov
mov
inc
inc
adc
bound
xchg
mov
scas
outsb
scas
push
mulw
inc
pop
sahf
inc
mov
xchg
or
cmp
out
adc
push
pop
movsl
push
jmp
fcmovnu
das
cmc
scas
pushf
pop
mov
mov
pop
dec
or
call
in
xchg
and
inc
jo
and
jl
jg
test
rolb
std
rclb
jae
or
mov
cmp
add
or
jmp
add
adc
cmpsl
push
inc
nop
vcvtsi2ss
dec
dec
mov
cs
xor
cmpl
test
mov
imul
aam
xor
lock
adc
movsb
push
leave
inc
leave
andb
loopne
push
cmpl
dec
pushf
stos
and
mov
add
jo
enter
cmp
xchg
jge
fstpt
dec
enter
mov
popa
mov
mov
mov
aam
loope
idivl
jle
xchg
pop
sarl
test
gs
ja
mov
mov
dec
pop
cmp
cmp
sbbl
mov
lds
add
mov
test
xor
dec
pop
push
jle
mov
lcallw
jb
push
ficoml
xor
leave
push
test
rcrl
xchg
data16
jnp
orb
pop
xchg
mov
lds
movsl
fstpl
cltd
scas
add
jno
pop
mov
out
mov
mov
jp
aas
add
pop
mov
sbb
ret
lock
outsl
add
addb
or
pop
cmp
jbe
dec
das
sub
popf
adc
push
xor
lods
push
outsl
std
into
mov
out
je
cwtl
inc
cwtl
aaa
sub
mov
orb
mov
ja
movsb
aaa
movsl
jo
out
mov
jne
rclb
cli
cmp
lods
frstor
cmp
inc
inc
fldl
stos
xchg
push
pop
push
fs
mov
xchg
and
cmp
das
in
loopne
pop
mov
push
pop
rorb
addr16
std
adc
cs
hlt
adc
jge
sbb
std
lret
sbb
lea
jp
lea
adc
stos
sbb
mov
pop
lcall
inc
jmp
push
icebp
daa
and
in
xlat
ja
jl
pop
aaa
xor
arpl
fsubr
inc
shrb
cmp
push
sti
sahf
jnp
repnz
xlat
push
fisubl
push
inc
ds
mov
in
xchg
xchg
movsl
push
aas
cmc
sbb
inc
push
fnstsw
adcb
inc
jb
mov
sarb
out
adc
xchg
mov
dec
push
mov
mov
and
dec
mov
ss
xchg
push
int
orl
into
stos
idivl
cmp
inc
maxps
jmp
sbb
aas
xor
xchg
inc
test
push
addr16
mov
mov
and
in
jl
inc
in
dec
call
mov
mov
add
cld
nop
data16
lret
pop
pusha
sbb
ja
addr16
push
mov
sub
mov
or
cmp
in
cmp
add
xor
rcrl
ret
enter
mov
cmp
es
add
ret
ds
and
std
sti
jo
inc
fsubl
push
loopne
pop
adc
inc
cld
arpl
adc
cmp
shrl
sub
pop
fists
fdivl
int
pusha
cld
fdivs
push
pop
add
jmp
jp
sbb
sub
push
sbb
jmp
inc
hlt
push
mov
into
mov
daa
es
bound
xchg
std
movsb
sarb
cmp
jne
test
push
or
xchg
xchg
lcall
hlt
js
pop
mov
mov
mov
sbb
imul
xchg
imul
cmp
jle
mov
lds
call
call
sbb
cmp
sub
imul
insl
sub
outsl
loop
push
xor
loope
dec
xchg
scas
iret
out
pcmpgtw
xchg
cmp
mov
outsl
pop
daa
mov
push
dec
sub
outsb
out
mov
loop
dec
in
pusha
sbb
and
xchg
stos
pop
fs
jp
mov
push
pop
add
and
out
leave
lcall
stos
inc
sti
notb
adc
fwait
jl
mov
inc
push
cmpsb
rcll
sarl
stos
add
xor
add
std
rorl
push
cmc
push
push
xor
hlt
adc
stos
insl
sti
pushf
xchg
adc
fsubl
jle
shr
movsl
mov
lock
sbb
and
out
dec
adc
sub
std
imul
add
int
out
push
adc
in
mov
int3
lea
stos
inc
sub
push
xlat
and
nop
xor
jg
cmp
fldln2
shll
cmc
push
adc
loope
or
mov
int
push
lods
cmp
decb
loopne
xchg
sbb
imul
pop
cmp
test
aas
cwtl
popf
fwait
out
pop
cs
push
es
pop
lods
lahf
mov
push
push
test
insl
sbbb
xchg
loope
arpl
or
pop
and
imul
push
pop
ficomps
repnz
or
or
mov
mov
push
fcmovnu
fcompl
fldcw
pop
xchg
push
in
xchg
inc
add
fs
mov
ret
lret
jecxz
rcrl
rcll
subl
mov
cmp
pop
mov
fxch
in
mov
movb
outsb
xor
data16
and
and
lcall
stos
adc
fildll
lea
cmp
aam
jmp
fnclex
lods
xchg
arpl
inc
aam
stos
pop
fbstp
add
andb
mov
pusha
ljmp
mov
xchg
jl
lahf
jae
lds
cli
mov
lret
xor
jp
mov
sar
test
push
cmpsl
stc
mov
pop
cwtl
inc
in
sbb
mov
xchg
js
lahf
lock
shlw
dec
sbb
sbb
shll
sub
adc
test
mov
xor
scas
add
mov
rcr
mov
xor
in
pop
imulb
jnp
dec
push
inc
jg
dec
test
inc
pop
test
scas
jecxz
mov
mov
lock
and
and
inc
cmpsl
sub
leave
pop
push
xchg
pop
lods
popf
repnz
mov
cmp
shr
lods
ret
test
inc
mov
stos
movsb
sub
adc
push
mov
mov
mov
imul
lods
cmp
push
cmp
and
repz
rcr
mov
jp
mov
mov
mov
lods
and
fsubrs
ficoms
mov
into
out
gs
sbb
in
mov
iret
insl
ret
pop
notb
mov
and
dec
mov
pop
adc
and
push
fbld
int3
jmp
push
cwtl
adc
xchg
xchg
negb
and
push
mov
hlt
ja
dec
js
or
add
ret
lcall
inc
repz
mov
nop
rorb
sbb
cmpsb
xor
dec
sbb
push
sub
cmp
push
enter
push
sub
jno
in
fdivl
sbb
loop
dec
push
loop
sub
rolb
enter
xlat
jae
scas
cmp
adc
std
mov
addr16
enter
fimull
cld
ret
mov
add
xchg
lahf
mov
adcl
loope
mov
push
inc
or
and
xchg
mov
fildll
jno
jg
insb
icebp
jns
jle
aad
push
movsl
jmp
lea
adc
add
jbe
shrb
out
js
inc
cmc
pop
push
dec
jecxz
lcall
std
cmp
stc
and
subb
data16
ja
inc
sbb
add
dec
mov
mov
mov
stc
sub
push
jmp
pop
fdivl
xchg
int3
pop
insb
rclb
stos
insb
js
inc
pop
and
mov
and
lock
mov
jge
lods
mov
xchg
int
cltd
add
xor
test
mov
xchg
xchg
mov
int
mov
scas
out
mov
xchg
push
call
into
push
scas
xlat
add
shll
popf
xorb
inc
std
jmp
or
mov
pusha
clc
jecxz
sbb
or
repnz
hlt
push
sahf
add
mov
inc
add
cmp
outsl
test
ja
ljmp
pop
mov
adcb
xchg
push
loop
jnp
mov
push
les
mov
cmp
dec
mov
xor
mov
int3
dec
test
pop
int
in
and
call
dec
pop
push
adc
push
and
in
add
cmpsl
scas
mov
add
jmp
pop
jecxz
xor
mov
sub
iret
add
test
mov
into
pop
sahf
mov
les
and
and
mov
push
cld
pop
xchg
movsl
aas
and
xor
xor
pop
stos
pop
push
and
push
out
push
push
mov
inc
dec
mov
out
jp
fwait
cmp
pusha
sbb
pop
fmull
sbb
dec
lret
rorb
subb
push
out
mov
or
sbb
lea
cld
push
dec
cmp
and
mov
dec
pop
dec
dec
cmp
mov
xchg
mov
push
in
into
aad
xchg
in
xchg
bswap
repz
lcall
add
mov
pop
fisubs
jecxz
mov
push
xchg
movsl
jne
push
cld
sbbl
push
mov
test
call
cs
xchg
jb
mov
lahf
mov
pop
mov
pop
push
push
cmpsl
and
jge
cmpsb
push
fidivs
aaa
pop
cltd
cmp
sti
repz
mov
imul
std
adc
iret
xor
mov
cmp
sti
loope
cld
dec
cmp
ljmp
inc
mov
jb
add
mov
cmp
jl
lret
cmpsb
lret
mov
arpl
leave
jl,pt
lods
sub
mov
loope
inc
mov
sti
lods
andb
repnz
mov
push
push
jno
jmp
scas
jns
jg
pop
mov
sarl
bound
fdivs
insl
out
ss
dec
loop
add
nop
ja
movsb
in
jecxz
divb
and
mov
cmp
xlat
and
push
rcrb
popl
orl
or
dec
cwtl
test
xchg
dec
icebp
ret
push
push
es
pop
imul
shrl
and
cmp
xchg
pop
jb
ret
mov
test
sti
jl
mov
xchg
lret
imul
mov
out
sbb
jo
test
sbb
inc
mov
sub
lret
call
jg
pop
inc
test
mov
addb
pop
cmp
add
jge
add
add
mov
cmp
inc
cmc
pusha
scas
mov
jne
shll
call
dec
enter
jae
sti
or
xchg
lret
cli
fs
and
mov
addr16
fwait
mov
sbb
mov
cmp
dec
cmp
inc
pmuludq
pushf
movsb
mov
outsl
js
fdivrs
pop
pop
xlat
cmp
jne
out
mov
xchg
pusha
lcall
xor
and
cmp
loop
lds
ljmp
mov
repz
push
xor
inc
lds
pop
inc
inc
pop
sbb
lods
push
in
jmp
push
cmp
roll
and
dec
ds
into
pop
sbb
int
push
test
repnz
in
jns
icebp
cmp
fs
pushf
ljmp
inc
xchg
cld
in
ljmp
imul
ret
xor
xor
jge
mov
xor
dec
xchg
hlt
fdivr
cwtl
cmp
mov
jp
fnsave
insl
scas
ja
push
dec
arpl
mov
xchg
movsl
cmp
xor
lcall
dec
mov
dec
cmpsb
pop
xor
nop
cld
push
add
cmpsl
xchg
sbb
xchg
lds
ret
pop
cmp
into
dec
mov
mov
scas
std
sbb
jg
arpl
xor
push
std
jl
idiv
jns
cmpsb
fsubs
fists
push
and
jno
xor
cmp
xor
mov
push
cmp
je
cli
dec
jb
leave
adc
cltd
fcoml
sbb
push
arpl
outsl
inc
roll
testb
mov
pop
fldt
mov
call
inc
xor
icebp
mov
loop
scas
pushf
xchg
cltd
lahf
jne
outsb
adc
push
push
cli
inc
push
push
mulb
fstp
in
cmpsb
cmp
dec
pop
cmp
sub
loop
cmp
test
inc
and
mov
sub
sub
sahf
add
mov
sti
fisubrs
loope
in
arpl
push
lds
inc
cmp
inc
sahf
xchg
jbe
loop
gs
add
mov
sbb
sbb
pop
cmpsl
int3
int3
push
mov
jnp
and
mov
push
push
push
mov
ljmp
jecxz
rcl
sti
fcomps
jg
imul
adc
sub
push
jle
fmuls
cmc
ffreep
aaa
xor
ds
or
fnstcw
cmc
mov
dec
adc
push
jl
pop
jg
add
push
rep
sub
pop
clc
pop
in
sbb
je
or
shrb
daa
push
mov
jg
mov
lods
mov
xor
fs
aad
imul
inc
inc
jo
sub
fdivl
mov
scas
cmp
mov
inc
dec
cli
mov
es
mov
cld
or
push
or
ss
out
into
sahf
rorb
xchg
icebp
pop
and
dec
and
xor
push
ljmp
movsb
test
fmull
push
ljmp
dec
bound
imul
ss
sbb
adc
les
repnz
mov
inc
aas
cmpb
stos
adc
mov
add
aaa
cmp
push
ficoms
inc
cmpsl
add
pop
lods
popa
mov
xchg
gs
mov
loopne
and
sbb
mov
xchg
push
sysenter
testl
aad
movsb
stos
add
inc
js
clc
pop
loopne
ja
mov
dec
fsubl
xor
scas
push
add
adc
mov
movb
pop
ret
push
adc
sbbl
pushf
ljmp
inc
dec
fwait
sub
mov
fs
mov
xor
les
pusha
cmc
mov
pop
aas
mov
cmp
push
addr16
mov
inc
adc
out
adc
or
sbb
jo
fwait
out
add
lcall
movsl
inc
lret
outsb
stc
cmpsb
mov
insb
es
sub
pop
clc
sub
sub
aad
jno
xlat
js
scas
xlat
mov
loop
jae
push
stos
fs
cltd
xor
arpl
pusha
pop
repnz
rclb
cs
ja
shll
aaa
scas
aam
shlb
fidivrs
dec
pusha
daa
cmp
clc
loope
pop
out
fistps
pop
mov
cmpsb
std
mov
inc
out
and
ret
pop
jno
adc
pop
aas
inc
and
fcomps
mov
cmp
mov
enter
pop
mov
mov
push
ret
ljmp
fdivrs
mov
adc
mov
mov
and
xor
xchg
pop
or
inc
mov
mov
sahf
mov
jl
cli
aad
fdivrp
lcall
push
je
rol
lods
pop
repz
mov
les
push
movsb
movsl
cmp
into
push
push
jb
push
dec
cmpsb
orl
pop
stos
pop
sbb
jmp
jecxz
icebp
mov
lret
pop
jmp
cld
cmp
jne
shlb
aas
mov
xlat
push
cmpb
add
adc
push
in
add
add
aam
xchg
mov
movsb
or
mov
dec
fwait
sbb
popf
sbb
lret
mov
adc
rcr
andnps
lds
mov
sub
cmpl
lea
xor
push
mov
fcoml
gs
leave
push
lock
inc
clc
and
push
fbstp
out
mov
cmpsl
push
xlat
sbb
sbb
sbb
pusha
out
add
lahf
out
inc
mov
fs
mov
ret
push
push
int
ret
movsl
jl
fiaddl
dec
sub
mov
dec
imull
cwtl
enter
mov
jmp
pop
jns
repnz
pop
xor
xor
testl
ljmp
xlat
leave
mov
adc
lahf
ljmp
nop
movsl
in
mov
pop
fwait
mull
aad
dec
and
cmp
fildl
or
jmp
sbb
push
sub
sar
mov
fiadds
lret
mov
cs
cmpsb
addl
insl
add
jnp
jle
fsubr
push
and
or
sub
cmp
or
int
movsl
xor
mov
jecxz
scas
icebp
js
mov
cmp
mov
mov
mov
push
rolb
cmp
jecxz
shl
push
adcb
scas
inc
lods
jmp
clc
dec
push
and
dec
mov
aaa
xor
and
cmp
jp
enter
ljmp
popa
in
lcall
scas
dec
scas
pop
imul
add
movsb
jg
jb
mov
mov
inc
mov
add
ds
rcrb
out
lock
lcall
das
push
call
cld
cltd
out
pop
adc
aad
test
aad
lret
xlat
sub
lret
lods
jecxz
sub
out
stc
mov
jae
mov
test
push
btr
and
hlt
lea
into
xchg
mov
loop
popf
xchg
lea
pop
dec
stos
pop
pop
in
repz
and
jns
push
or
xchg
xor
out
xchg
cmp
pop
sub
repz
adc
es
sti
out
notl
adc
popa
jae
pop
and
ret
mov
test
imul
and
out
mov
adc
rcrl
fstl
enter
mov
fnsave
setle
in
sub
dec
aad
cli
push
jnp
ret
js
cli
outsl
cmp
xor
scas
inc
in
test
mov
daa
mov
je
cmp
arpl
mov
and
cmp
jne
add
test
ficoms
neg
ds
lcall
mov
lds
pop
and
push
mov
jle
loop
cmpl
mov
jae
and
popa
pop
in
cs
popf
xlat
fiaddl
inc
mov
icebp
mov
xor
inc
or
and
cli
stos
clc
mov
jmp
push
in
icebp
jo
or
push
push
or
clc
lret
test
add
gs
sti
xchg
lods
mov
les
imull
inc
cld
adc
bound
imul
or
add
inc
divl
pop
xor
or
add
dec
mov
sub
cmpsl
dec
inc
jmp
aad
ret
iret
es
adc
icebp
xchg
xlat
arpl
push
aad
decl
cmp
add
gs
inc
fsubl
mov
mov
stc
cmpsl
dec
sarl
dec
out
in
xchg
leave
insl
adc
fwait
dec
xor
mov
imul
push
dec
insb
sub
mov
aad
jge
adc
jmp
mov
dec
xchg
pop
lods
call
cmp
inc
sub
adcb
and
andl
ja
out
jmp
pushf
pusha
xchg
pop
call
insb
aad
dec
cmp
sahf
jne
cwtl
xor
out
and
adc
ret
adc
xchg
and
push
add
andb
push
dec
pop
aad
fildl
or
adc
lods
jp
ficoml
add
cs
gs
icebp
xor
idivb
or
ss
icebp
stos
cltd
xor
jmp
mov
jl
adcb
pushf
xchg
movsl
or
inc
mov
xchg
adc
and
adc
inc
sbb
test
nop
inc
cmp
stos
pop
lret
pop
cs
ds
mov
and
sbb
adc
dec
loopne
fmull
sub
xor
or
cmp
mov
sbb
xlat
out
pop
add
lahf
icebp
inc
daa
sarb
jge
je
sbb
popf
xor
push
js
aad
insb
testb
cmc
pop
pop
test
xchg
xchg
or
dec
stos
jae
inc
xchg
jp
iret
inc
je
cs
inc
ret
xchg
dec
fwait
shll
jno
push
pushf
cmpsb
aaa
sahf
nop
fidivrl
or
mov
or
cltd
jl
xchg
icebp
push
cwtl
cld
loop
daa
or
imul
aam
jno
or
lcall
xor
decb
or
je
mov
cmp
adc
mov
xchg
push
fstl
rcll
fldcw
loope
mov
mov
xchg
jl
out
jnp
xchg
push
pusha
outsb
sbb
adc
jbe
adc
imul
sub
jae
cld
lret
dec
cmpsb
inc
fs
mov
loopne
jb
jl
jg
mov
aas
enter
loope
dec
ljmp
push
jecxz
call
mov
fcomip
jmp
inc
ret
jl
outsl
push
sub
in
out
dec
addl
loope
adc
je
cmp
sub
xlat
stos
stos
sub
mov
xchg
in
insb
andb
es
pop
sbb
rcll
or
imul
mov
cmc
cli
insb
jb
pop
cld
lahf
xchg
imul
jg
xchg
out
in
sahf
fiadds
add
sbb
inc
lods
dec
push
lret
push
fs
mov
sub
xchg
cmp
scas
cmp
lret
ret
test
sbb
push
xor
mov
inc
lods
mov
sbb
jne
mov
ljmp
aas
cltd
cmp
sbb
inc
lcall
rcrl
jnp
pop
push
js
mov
decl
test
sti
into
call
mov
xchg
ror
insl
add
mov
mov
ret
testl
mov
repz
fst
xchg
pop
mov
sbb
mov
into
ds
int
ret
cmp
mov
add
rep
scas
inc
repz
aam
or
jecxz
mov
jbe
les
cmpsl
sub
mov
xchg
push
loop
xor
in
jo
lds
ds
cwtl
scas
in
cmp
mov
xor
or
in
test
add
mov
fnstcw
movsl
xchg
pop
jb
decl
dec
sub
push
add
push
mov
mov
xor
add
mov
insb
push
push
jb
mov
leave
mov
inc
iret
rcl
push
mov
mov
loop
cmp
or
rol
sub
lea
jecxz
scas
dec
add
mov
jge
mov
mov
das
testb
cmp
loopne
sub
in
cmp
fdiv
aaa
cmp
pop
filds
in
lds
jae
xor
or
test
cmc
test
aaa
pusha
adc
mov
cmc
pusha
or
roll
xchg
sahf
daa
loope,pn
pop
lock
rcr
stc
dec
loop
out
xorl
jne
adc
push
std
stos
ja
mov
cmp
aaa
mov
pop
repnz
push
dec
loope
into
out
rolb
lods
mov
adc
push
push
mov
xchg
sbb
imul
pop
xor
sub
or
lret
pop
pop
add
addl
ss
andps
lods
int3
mov
imul
lahf
adc
sub
fiaddl
sub
sub
mov
cmpsb
pop
mov
cmpsb
fistpl
push
cli
xlat
clc
dec
or
mov
push
jge
hlt
test
pop
call
push
lods
ljmp
jne
mov
and
xchg
mov
inc
jne
mov
mov
stos
mov
loop
cmp
lods
loopne
int
jl
pop
out
movsl
mov
outsb
pusha
pop
cmp
loopne
andl
pop
mov
and
and
lods
jnp
insb
push
int
out
pop
inc
icebp
in
orl
loope
movsb
sbb
xchg
imul
and
push
cmp
pop
mov
aad
xchg
outsb
mov
pop
ret
andnps
dec
cmp
xor
arpl
xor
mov
mov
mov
arpl
sub
and
jbe
stos
or
dec
mov
mov
aaa
dec
ss
push
std
ret
es
mov
xchg
enter
push
push
xchg
inc
outsb
js
stos
sub
mov
push
stos
insb
jl
mov
rorb
pop
dec
stos
mov
outsb
inc
add
sub
dec
clc
jae
xchg
mov
xor
jg
das
outsl
gs
xchg
sbb
icebp
test
dec
pop
xor
mov
das
jne
repnz
roll
mov
sbb
push
lds
insl
cmp
lcall
fbstp
or
sub
xchg
pop
insb
mov
xchg
les
out
xor
mov
bound
mov
xor
sbb
test
pusha
jg
out
pop
mov
test
push
push
ss
ror
repz
mov
lds
cli
dec
sub
mov
aad
jmp
xor
pushf
adc
movl
mov
stc
scas
icebp
jg
xchg
pop
out
nop
bound
js
xor
push
addr16
scas
inc
imul
sub
pop
jl
jno
aas
movsl
jge
addl
mov
xor
sbb
mov
mov
int
push
mov
lods
xorb
popf
ljmp
je
loop
enter
and
or
stos
pop
xchg
loopne
sub
sahf
mov
sbb
mov
sub
testl
dec
adc
jle
add
gs
and
and
loopne
fisttpl
out
or
jg
js
arpl
jle
pop
pushl
aam
clc
pop
jae
lods
lea
pop
xor
fsubrl
push
sahf
popf
sbb
adc
adc
mov
std
out
xchg
lods
and
rcll
adc
pop
and
cmc
in
fsts
idiv
int3
jae
loope
inc
push
jnp
xor
stc
and
in
or
or
call
mov
repnz
stc
movsb
jle
loope
mov
or
pop
adcl
cs
sbb
jmp
std
pusha
pop
mov
push
les
mov
enter
adc
test
lock
sarb
test
mov
ljmp
mov
cmc
sbbl
cld
loope
xlat
lcall
sbb
aaa
js
xrelease
orl
mov
loopne
mov
pop
add
push
add
gs
sub
shlb
and
dec
lods
pop
mov
xor
inc
imul
les
out
cmp
fldt
ret
mov
xor
mov
inc
pop
mov
cmp
push
xor
xchg
xchg
xchg
les
cmp
es
push
repnz
add
xor
adc
sub
mov
es
rol
rol
xlat
mov
movl
jns
add
ja
jo
das
xor
insb
mov
das
negl
adc
jecxz
inc
dec
jb
imul
enter
cmc
adc
xlat
int
sub
and
xchg
roll
jge
ljmp
lcall
das
sbb
jp
pop
mov
cltd
xor
pop
aam
les
inc
or
imul
rorb
aam
cmp
cmp
cmp
out
mov
pop
dec
daa
dec
jecxz
mov
xchg
hlt
dec
sub
cmp
repnz
jnp
push
jl
cmpsl
rcl
in
mov
push
push
in
iret
ds
xchg
mov
popa
xor
xchg
xlat
xchg
into
and
ret
inc
or
xchg
loop
mov
cmc
rclb
ljmp
mov
out
daa
fidivrl
int
pop
aaa
add
dec
pop
loopne
push
stos
cmp
mov
movsb
sti
lods
mov
cmpsl
dec
imull
inc
and
push
out
mov
add
leavew
pushf
xchg
or
into
xor
and
cmpsl
cltd
arpl
cs
cltd
in
in
sub
dec
ljmp
mov
dec
lret
cmp
pop
sub
add
scas
pop
xor
inc
out
jge
lods
shlb
sbb
inc
push
push
adcl
mov
testb
notl
out
mov
jle,pt
fimuls
fmulp
scas
jmp
daa
push
xor
push
xchg
xchg
jle
xor
fsub
outsl
push
mov
aad
dec
pop
dec
outsl
daa
repz
fnsave
je
xor
pushf
inc
pop
sub
dec
cli
cmpsl
mov
sub
arpl
scas
mov
or
and
test
stc
dec
lea
icebp
jae
stos
scas
fnstsw
in
and
xlat
add
test
les
push
jecxz
in
xor
and
movsl
imul
push
icebp
dec
jno
and
fldenv
lret
insl
gs
xor
sub
popaw
ljmp
inc
mov
adcb
hlt
ljmp
hlt
andl
ret
and
mov
cmp
cmp
mov
mov
aad
mov
insb
and
or
and
push
pop
and
lods
fdivl
inc
xchg
insb
or
jns
pop
out
sbb
xchg
jmp
insl
test
adc
add
inc
mov
jle
dec
push
enter
mov
pop
pop
loopne
jno
mov
popf
xor
sbb
fistpl
dec
sbb
jno
sahf
scas
mov
pushf
mov
int
pop
lret
and
leave
dec
lahf
xor
and
sub
jmp
and
cmpsl
icebp
mov
mov
mov
dec
ficompl
and
lahf
jae
pop
sbb
lret
in
bound
fdivs
xchg
andl
orl
aaa
pop
push
push
cmc
jle
ds
push
jmp
add
inc
xchg
fidivs
pusha
sbb
insl
jo
push
popa
int
push
mov
push
cmpsb
mov
dec
sarb
cmp
jge
inc
std
xchg
das
imul
cmp
jg
mov
faddl
lds
sarb
and
pop
testb
ss
xchg
or
in
xchg
lret
cmp
mov
dec
bound
add
adc
aas
mov
jecxz
fsts
data16
xchg
adc
out
iret
jp
sbb
mov
xor
ret
adc
or
adc
pop
test
jns
lcall
sbb
bound
fadds
clc
inc
fdivl
mov
and
inc
lahf
lahf
mov
sub
pop
dec
jae
cmc
sbb
cs
mov
lea
aaa
mov
mov
mov
and
pop
adc
jecxz
xchg
outsl
or
cmp
inc
mov
mov
push
sbb
and
dec
and
nop
clc
jne
fildl
popf
mov
add
lret
sbb
js
aaa
push
xchg
push
jb
es
and
movsb
adc
popa
sbb
ss
pop
sub
das
push
repz
data16
ret
testl
cmc
mov
adc
stos
jmp
add
dec
mov
pop
xchg
adc
mov
lahf
imul
fwait
sub
out
mov
popa
ret
pop
gs
stc
mov
adc
pop
jo
inc
sarl
call
mov
and
fnstcw
push
cmc
je
jae
cmp
jno
mov
and
repnz
test
inc
push
popa
ds
sbb
imul
pop
push
jp
aam
jne
pop
mov
cmp
int
or
ss
mov
and
dec
iret
cmp
ret
jg
add
inc
push
fsubs
pop
push
andl
aam
les
nop
inc
xor
add
insb
mov
mov
push
rcll
fdivrs
mov
pop
enter
scas
cld
xchg
insb
pusha
sbb
jo
mov
fnstenv
cmp
test
sub
push
or
rol
in
add
mov
jae
push
into
fistps
addb
jnp
jmp
loope
cmp
push
adc
mov
adc
adc
popf
in
ss
loopne
mov
aam
inc
sbbb
mov
bsr
mov
sti
mov
popf
jo
test
cmp
nop
stc
loop
sub
rcr
push
inc
in
sub
fists
and
aam
cmp
cld
mov
dec
push
loopne
mov
and
and
pop
mov
mov
fs
fildll
xchg
aad
int
iret
out
push
dec
mov
pop
popl
xchg
outsb
pop
daa
mov
xor
mov
repnz
or
les
lock
cmpsb
shlb
out
mov
xor
mov
mov
lahf
out
dec
loopne
add
xor
xor
sub
lea
stos
fdivs
mov
jle
push
push
mov
dec
testl
aas
mov
fnstcw
push
cmpsl
es
sbb
cmp
mov
icebp
insl
es
andb
loopne
dec
and
sub
cmpsl
repz
pop
adc
sbb
andl
js
clc
sbb
into
bound
popf
dec
sub
add
mov
ds
cbtw
mov
push
pop
add
lret
outsl
mov
test
mov
outsl
addr16
outsl
pop
inc
in
inc
mov
adc
fdivs
cmp
shll
insb
shrb
inc
cmp
push
orb
sbb
sub
sub
dec
lret
and
popf
outsl
cltd
aam
nop
sahf
pop
xlat
aad
add
inc
dec
mov
inc
push
push
and
or
jl
xchg
dec
mov
add
fcoml
pop
arpl
loopne
inc
jg
sub
mov
fists
sub
push
loopne
inc
iret
mov
mov
leave
jns
in
pop
or
push
jg
gs
pop
xchg
cld
out
xchg
testl
shlb
jp
aad
and
je
dec
outsb
pop
sti
jle
xchg
jle
dec
cmc
push
inc
mov
pop
pop
push
stc
cmp
lock
pop
cmp
stc
lcall
xor
mov
ja
dec
jo
out
mov
addr16
push
je
int
mov
push
lahf
push
xor
lea
xchg
fistpll
jle
jecxz
push
cld
sbb
aas
test
in
bound
movsb
cltd
and
adc
test
pop
leave
sub
xor
add
test
popf
imul
das
mov
push
inc
ss
jb
push
scas
push
cld
ljmp
jg
bound
lock
cmp
into
test
xlat
or
inc
test
mov
push
fildll
add
lock
mov
pop
es
jb
in
jl
ret
sbb
fcomps
pusha
lds
push
sub
dec
int3
jbe
ljmp
add
fstl
mull
idivl
inc
iret
jne
pop
mov
push
lret
push
sbb
add
xchg
testl
sub
lods
imulb
xor
ret
xchg
cmp
testl
sub
xchg
adc
repz
rorb
sub
in
mov
icebp
xchg
imul
pop
xchg
push
mov
pop
inc
adc
fs
pop
cmp
fwait
jmp
xchg
mov
lods
filds
cmp
mov
lret
mov
out
in
fsubp
push
ja
cmp
test
inc
dec
pop
adc
xor
jl
mov
adc
xchg
test
sub
xchg
loope
mov
add
aas
mov
xchg
loop
xorl
pop
mov
bound
movsb
roll
fucomp
sbb
jge
in
xor
jne
xchg
push
push
hlt
xor
and
outsl
enter
xor
int3
adc
dec
jo
in
cmpsb
aaa
push
jge
xor
cli
pop
pop
adc
add
and
orb
nop
leave
jl
xchg
xor
lret
movsb
imul
dec
xor
mov
jns
xchg
xchg
iret
cmp
pop
dec
cmp
mov
push
push
pop
movsb
aas
divb
mov
stc
pop
dec
mov
call
gs
mov
scas
xchg
dec
outsb
mov
cmp
clc
pop
std
out
es
sub
push
hlt
les
mov
sbb
loope
stos
pop
adc
mov
mov
xor
add
push
xchg
addl
inc
das
add
sti
ret
negb
dec
leave
insl
jle
or
and
test
sub
test
adc
push
mov
push
cmp
cmpsl
shll
sti
push
pusha
std
in
xlat
testb
lea
test
cmp
jns
adc
push
cli
cmp
sub
gs
mov
cwtl
sbb
decb
lock
stc
nop
jbe
out
pop
mov
cmp
push
jmp
leave
and
push
ljmp
dec
js
add
fwait
mov
scas
push
add
fistps
jno
ret
adc
mov
mov
shrl
inc
pop
out
enter
inc
mov
inc
jmp
jns
push
pop
ljmp
mov
inc
jae
pop
dec
cmp
iret
popa
adcb
cmc
lock
push
mov
fildl
push
shlb
sbbb
xor
pop
iret
out
fldl
pop
inc
push
jae
leave
rcrl
pop
cli
fstpl
pusha
or
mov
outsb
lcall
sub
aad
xlat
loop
cmp
jmp
fmuls
lods
mov
mov
or
and
xor
test
adc
addb
inc
dec
xchg
pop
dec
pop
mov
arpl
arpl
filds
psubusb
daa
sub
into
test
mov
in
aas
jnp
loopw
and
dec
std
jne
aas
cmc
mov
or
outsl
inc
pop
ret
push
ret
jno
jge
cmp
lods
xchg
cmp
stos
inc
fcmovbe
mov
enter
mov
xchg
xor
mov
xchg
cmp
or
xor
cmp
movsb
aad
inc
sub
in
mov
and
test
jecxz
xor
in
mov
movl
sub
fbld
lret
mov
out
lods
mov
loopne
pushf
mov
inc
inc
shll
adc
in
adc
jnp
and
fcoms
shlb
xor
insb
jne
out
add
test
jge
or
lcall
mov
iret
inc
sub
or
inc
lods
mov
test
push
or
je
sbb
lret
cmpl
fstpl
movsl
inc
jb
shll
ds
adc
pop
sbbl
fldl
jmp
push
mov
stc
cld
out
sbb
xchg
adc
iret
jmp
scas
cmp
inc
dec
jecxz
es
hlt
and
stos
pop
xor
call
dec
or
xchg
scas
scas
lea
xchg
pop
ret
insl
test
data16
xchg
sub
scas
and
pushf
aam
add
jl
outsl
and
aad
imul
jae
lea
xor
jb
cmp
pushf
adc
cli
jmp
mov
movsb
hlt
dec
shll
pop
xor
push
mov
nop
loope
repnz
cs
jae
ret
pop
lea
mov
lahf
fldl
cmp
dec
xor
sub
test
or
les
mov
lods
cmp
cmp
adc
sub
jge
xchg
out
pop
push
cmpsl
inc
cmp
lods
push
adc
mov
test
jmp
adc
jle
icebp
mov
or
ret
push
push
sahf
insb
lds
je
divl
lret
stos
xchg
stos
xor
loopne
shr
cmp
push
aas
dec
pop
mov
pop
or
sub
cli
xchg
adc
ret
out
mull
imul
push
xor
les
push
stos
pop
or
ja
jmp
adc
sub
add
sub
dec
and
shlb
mov
pop
xlat
out
jle
inc
cmp
push
aad
cmpsl
out
mov
sub
lcall
pop
out
jnp
pmaxub
je
adc
shr
inc
cwtl
inc
cmp
adc
into
xor
loopne
and
testl
scas
cmp
push
dec
in
adc
inc
mov
sub
inc
mov
inc
cli
sub
cmc
mov
jbe
into
push
movsb
mov
dec
jle
inc
add
andb
xchg
jo
xchg
imul
test
fdivs
or
pop
movlps
sbb
aaa
outsb
sub
xor
jge
push
js
clc
sti
sbb
push
push
sti
addl
idiv
mov
fimull
shl
in
sbb
and
into
scas
imul
mov
add
jge
pop
dec
das
outsl
and
adc
or
add
mov
dec
aam
jns
or
repz
sub
outsl
add
push
inc
inc
test
sbb
js
add
push
pop
sarb
add
and
lds
out
mov
aas
xchg
nop
cwtl
das
dec
jl
mov
pop
mov
jns
sub
mov
fwait
sahf
add
mov
aam
pop
pop
sbb
rol
in
push
imul
xchg
mov
pop
cmpb
repnz
adc
or
aas
cmp
pop
jge
aad
shl
pop
int3
lea
pop
arpl
daa
mov
hlt
fwait
push
clc
pusha
into
pop
popf
cli
add
std
lret
into
pop
stos
jb
adc
leave
jb
or
push
lock
insl
repnz
push
hlt
and
ret
cmp
jae
test
enter
sub
jo
xchg
in
scas
xor
or
inc
or
push
negb
loope
mov
jg
push
inc
jecxz
stc
loopne
sub
aas
push
shrb
push
mov
fs
adc
imul
push
mov
int
pop
push
mov
xlat
push
and
sbb
dec
repnz
mov
std
lods
adc
mov
cltd
adc
mov
sbb
push
jnp
mov
ffree
sbb
xchg
cli
fsubl
mov
sahf
sbb
lret
push
scas
and
and
mov
aam
inc
mov
sub
xorb
arpl
ret
out
jle
xchg
dec
decb
outsl
adc
in
adc
sbb
lret
std
std
or
xor
ficoml
xchg
add
mov
pop
xor
adc
xor
lods
sub
orb
xchg
aaa
mov
lods
out
sbb
lret
inc
mov
je
cmpsb
or
sbb
out
hlt
lret
int
add
std
dec
sahf
clc
sbb
cmp
shrb
nop
mov
xchg
fs
movl
loop
in
inc
daa
inc
ss
xor
jo
jmp
inc
test
pop
and
push
pusha
mov
lret
and
add
inc
or
xor
cwtl
fwait
and
in
push
lods
jle
xchg
pop
cmp
push
movsb
or
push
dec
imul
xchg
sti
cmp
daa
ffreep
xor
icebp
std
lods
and
add
lret
mov
cs
nop
push
nop
repz
loope
insl
or
roll
jl
jbe
mov
insl
into
mov
push
mov
push
mov
in
dec
lods
dec
dec
inc
and
add
scas
fucomp
gs
repnz
sub
dec
repnz
cmc
fcoml
inc
cmpsb
pop
inc
ret
fisubs
xchg
push
pop
cmpsl
jb,pn
and
mov
sub
cmp
in
or
mov
add
pop
dec
jp
stos
in
subl
mov
test
mov
js
addl
mov
das
sbb
pop
leave
mov
adcb
stc
or
ret
pusha
xchg
ja
bt
stos
subl
repz
daa
xor
notl
cmp
xchg
mov
xchg
dec
mov
out
mov
jb
mov
and
sbb
in
divl
push
fldl
jb
ljmp
inc
in
jne
mov
or
movsb
push
icebp
mov
faddl
add
clc
xor
adc
sub
or
jnp
lcall
imull
push
dec
or
mov
inc
mov
sub
leave
pcmpeqb
jno
ja
std
mov
bound
mov
dec
push
jmp
pop
or
sbb
and
ja
inc
pop
sbb
sub
aad
sbb
adc
xor
lret
test
notb
test
lods
loopne
test
ret
les
add
xchg
orb
sbb
addr16
arpl
cs
insl
push
push
rorl
adc
popf
ja
loope
jno
sbb
cwtl
xorl
jg
sahf
jb
movsl
jbe
ss
cmpsl
outsl
outsl
push
or
jp
xchg
mov
in
add
dec
out
adc
inc
js
jmp
lret
jmp
data16
jae
movsb
addr16
rolb
or
jle
scas
in
add
loopne
ja
aam
sub
sti
dec
and
call
int
test
sbbl
repz
pop
jo
mov
or
mov
into
outsl
lret
test
xchg
sub
xchg
xor
adc
lahf
dec
adc
divb
xchg
xlat
mov
mov
jo,pt
jecxz
cmp
leave
push
mov
push
mov
bound
ret
mov
and
mov
mov
jg
pop
adc
inc
dec
ss
jl
cmpsl
cli
mov
sub
cmp
jo
or
frstor
mov
sbb
aas
mov
lret
sub
add
out
xchg
xchg
clc
jb
cmp
mov
push
inc
mov
pusha
movsb
xchg
mov
movd
push
adc
mov
inc
fwait
xlat
daa
and
jb
popf
mov
in
pop
mov
or
xchg
jg
jae
xor
mull
inc
cltd
fmul
mov
xor
and
shll
das
mov
test
ret
jnp
rclb
inc
push
rol
inc
xchg
xor
in
mov
pushf
je
cltd
loope
data16
dec
or
xchg
fsubrp
stos
push
adc
int
sbb
aad
es
lcall
jl
cld
jg
mov
xchg
scas
insb
cmp
push
loop
subl
or
jne
xor
cvtps2pd
or
movsl
and
cli
mov
push
xchg
lret
inc
lret
stos
inc
dec
adc
push
outsl
mov
leave
and
adc
lods
stos
push
jmp
mov
pop
dec
out
jl
movsb
imul
addl
jnp
sbb
mov
arpl
out
mov
adc
sbb
pop
and
ds
dec
sub
iret
sub
call
in
psubsb
test
ret
jmp
jnp
fdivrl
pusha
sub
and
xlat
imul
add
stc
xor
add
mov
adc
xor
mov
mov
movsl
mov
xor
stos
cmp
add
dec
pop
add
inc
shl
imull
push
push
sbb
sub
jg
push
xor
push
shll
out
xor
adc
fisubrs
andb
imul
lcall
cmc
xchg
push
loopne
daa
aad
ja
mov
int3
vmread
pop
das
mov
pop
dec
out
sub
xor
xor
lock
psraw
fisttpll
sub
ss
int
leave
lret
clc
fs
sub
pop
jp
push
dec
ret
scas
push
out
pop
xchg
clc
jle
sub
push
int
mov
out
push
popf
mov
xchg
pop
stos
cmp
movsl
jl
movsl
or
mov
jg
mov
lahf
xlat
in
or
xchg
aas
cli
jno
and
pusha
jns
adc
or
pusha
pop
mov
lods
es
es
je
outsl
jno
pop
pop
das
das
and
std
fxch
sti
hlt
cmc
xchg
rcl
int
subl
sbb
inc
mov
and
fisubrl
cmc
rolb
test
leave
dec
mov
fucomip
mov
pop
lods
cmp
jno
fcmovnu
dec
inc
mov
mov
clc
fidivs
lods
int3
jl
mov
les
ficomps
push
add
xor
mov
add
cld
inc
pop
push
pop
sbb
jge
xor
adcb
pop
push
repz
push
pop
xor
xchg
push
mov
jnp
sub
add
into
ret
jae
sub
fwait
push
sub
xchg
mov
mov
iret
bound
loope
mov
cltd
repnz
cld
ret
jge
fwait
cmp
pop
jae
mov
lds
jp
rclb
loope
or
add
pushf
cmc
mov
icebp
stos
lret
dec
lock
jb
cmp
in
lods
fdivs
lods
into
fs
mov
xchg
xor
xchg
shlb
or
mov
mov
fs
fisubrs
inc
repnz
out
insl
push
shrb
pop
or
hlt
sti
hlt
sbb
push
mov
xchg
cld
xchg
dec
push
out
sahf
hlt
push
test
ret
mov
and
fnsave
aad
xchg
jo
pop
enter
lods
movsb
dec
in
cmp
jl
jge
testb
cmpb
lea
adc
inc
repnz
push
rcrl
icebp
inc
mov
aam
pop
fucom
push
imul
pop
insb
mov
and
xchg
ljmp
mov
sysret
mov
lock
jno
leave
push
sub
push
stc
shll
adc
inc
mov
cmpb
ret
cwtl
in
push
addl
sbb
mov
jmp
xchg
cmp
nop
jno
lret
or
clc
push
test
mov
incl
repz
mov
jno
lock
jge
mov
jmp
sbb
inc
mov
pop
pop
cmp
fcoml
sub
add
and
ret
ss
daa
or
xchg
add
xor
sbbl
int3
cld
lahf
push
testb
and
pop
imul
aad
mov
pop
mov
jl
or
jg
loopne
sub
lret
cmp
clc
roll
imul
imul
fidivrl
fsubrs
pop
jb
jno
ret
cmpsb
or
pop
sbb
cmp
mov
data16
scas
shlb
jecxz
inc
adc
mov
xchg
stos
lock
ret
jae
dec
xor
cmpb
xchg
es
cmp
inc
mov
movd
sbb
xor
jp
sbb
gs
les
inc
jnp
push
sbb
shr
sbb
jl
xor
mov
pop
pop
int3
sbb
mov
add
jge
in
sub
adcb
in
jo
loop
cmp
cs
mov
rcll
sbb
cpuid
pusha
js
ljmp
or
adc
sbb
push
cmp
lds
push
mov
jno
xor
movsb
aas
dec
mov
insl
sub
push
pop
arpl
mov
sti
or
pop
movsl
rcll
pop
inc
adc
int
cmp
push
jb
test
fists
test
push
cmpsb
lret
movsb
cwtl
jb
pop
mov
cmc
xor
fstpt
pop
fdivs
lods
mov
lret
mov
jnp
push
cmp
fmuls
fwait
cmp
lock
jmp
movsb
orl
dec
adcb
sbb
adc
pop
pop
pop
pusha
xchg
sub
adc
mov
ja
nop
js
mov
pop
ret
enter
aas
imulb
pop
mov
outsb
sub
add
fbstp
cmp
aas
push
push
mov
lods
test
push
cmp
rorb
loope
push
jne
cwtl
mov
push
ljmp
ss
hlt
fsts
xor
testb
cmp
xor
jl
mov
sub
fs
add
pop
or
add
mov
adc
xchg
outsb
and
xchg
adc
dec
jecxz
or
test
push
push
cmp
ja
dec
hlt
rorb
mov
mov
pop
fmull
imul
push
inc
aad
andl
lahf
ret
add
jnp
cmp
cmp
loope
adc
les
sub
xor
jnp
dec
sbb
cmp
or
test
pushf
movsb
dec
scas
push
mov
sbb
mov
xchg
icebp
sbb
std
inc
out
arpl
pop
loope
imul
rolb
jg
push
xchg
loopne
sbb
outsl
fmuls
pop
imul
or
daa
stc
ljmp
arpl
js
pushf
mov
enter
sbb
das
sbbb
test
flds
xchg
xchg
lret
faddl
or
lcall
adc
sub
cmp
push
sub
iret
or
and
je
push
nop
popa
insb
push
andb
mov
stos
jmp
rcrl
lods
add
std
js
pop
inc
nop
pop
les
les
jecxz
pop
mov
enter
dec
inc
ficoml
push
test
pop
fimull
stos
scas
pop
dec
mov
les
cmc
jge
dec
insb
loopne
addr16
xor
pop
out
lds
shll
and
xchg
clc
lds
fwait
ret
aaa
popf
ds
cmc
imul
push
add
adc
cmp
sub
bound
xor
mov
add
cmp
rol
xchg
xchg
push
cmpl
dec
fldt
dec
jns
dec
mov
sbb
and
dec
movsb
push
jnp
inc
ja
movb
pop
jl
push
int3
dec
xchg
test
ja
testb
nopl
mov
test
cmp
mov
in
adc
jns
insb
popf
pop
cmp
mov
and
pop
sub
enter
lea
cmp
cli
mov
pop
jmp
mov
pusha
dec
pushf
out
cmp
push
mov
js
lcall
cwtl
insl
sti
add
mov
pop
ja
jno
fcompl
les
xchg
outsb
xchg
fnstcw
sbbb
jle
and
jb
int3
push
arpl
push
add
adc
push
fadds
inc
js
fs
xchg
adc
nop
dec
or
insb
aam
sahf
inc
test
mov
push
sahf
fisubl
push
imul
add
xchg
loopne
pop
mov
nop
stos
mov
mov
sub
xlat
and
into
mov
stos
or
jle
jb
mov
scas
js
sub
arpl
dec
adc
aad
sub
repz
xchg
jp
adc
cwtl
cli
xchg
xlat
insl
mov
pop
add
mov
xchg
lret
or
sti
dec
popf
sbb
xor
cld
inc
sbb
leave
imull
xor
xlat
lcall
push
and
test
popa
imul
mov
in
xchg
bound
jge
sbb
subps
inc
xor
in
adcl
test
adc
or
fwait
pop
fwait
insl
mov
cwtl
testb
push
sar
stc
add
pop
add
stos
outsb
jne
loope
mov
aas
mov
fistl
mov
ds
xor
inc
leave
adc
jge
xchg
inc
cmc
push
aaa
mov
adc
inc
cwtl
cmpsl
adc
mov
repnz
clc
and
mov
imul
or
sbb
sbb
dec
dec
int
mov
and
or
adc
and
push
movsl
cmp
sub
insb
clc
scas
enter
push
sar
push
cmpl
scas
pop
sub
fsubrs
subl
in
ljmp
andb
jo
mov
jnp
imul
jns
xchg
in
jmp
loopne
pop
xchg
jns
lea
push
push
push
imul
push
std
gs
dec
mov
mov
cmp
add
push
adc
mov
cltd
jle
cmp
adc
xorb
sbb
cmpsb
inc
pop
push
sarl
stos
cmp
inc
das
sbb
mov
pop
xchg
sbb
in
push
les
repnz
inc
imul
call
repz
test
clc
push
lods
and
cmp
repz
scas
aad
cmp
mov
dec
fcoms
int
aaa
mov
pop
fcoms
push
lret
out
pushf
sbb
call
inc
jecxz
stos
lret
in
xor
ds
outsl
xchg
cmovge
pop
xor
es
movsb
push
test
shrl
push
cs
mov
mov
popa
add
lret
add
rep
int
cmp
adcb
daa
dec
inc
cmp
ds
inc
xchg
sbb
scas
pcmpeqd
mov
imul
push
fistpll
push
fnsave
pop
das
mov
pop
scas
jno
popa
or
stos
cmp
jbe
pop
and
cmp
out
adc
inc
xor
jb
jmp
xchg
js
lods
into
mov
mov
xor
jge
mov
push
bound
cmp
lock
sub
pop
jns
cmpsl
jnp
xor
scas
shl
and
jge
and
sub
loopne
cwtl
jnp
and
xchg
xchg
popf
fwait
inc
and
sti
and
xor
out
mov
dec
ret
ss
xor
add
pop
lret
fnstenv
ss
push
movntps
test
and
jmp
insb
out
or
je
fiadds
ss
scas
mov
cwtl
outsw
mov
push
or
outsb
insl
insl
rol
arpl
rcrl
enter
test
pop
mov
aad
in
dec
repz
ss
repnz
jne
insb
jmp
cld
add
fimuls
enter
mov
das
jnp
pop
fmulp
hlt
mov
cltd
arpl
hlt
xchg
mov
in
movsl
je
xor
add
add
mov
popf
xchg
push
leave
stos
out
pushf
pushf
movsl
out
cmp
pop
add
dec
aad
sub
xor
jbe
or
ss
das
notl
pusha
dec
mov
test
dec
xor
inc
ret
push
push
dec
mov
lcall
pop
sbb
push
jo,pn
sub
sti
xchg
mov
inc
mov
sti
lret
arpl
roll
stos
pusha
icebp
loope
xor
dec
mov
jmp
rcpps
xor
cmp
xchg
jnp
cwtl
fwait
dec
out
std
out
movsb
dec
rorl
inc
fst
rolb
scas
add
lcall
mov
adc
lds
add
mul
stos
in
loopne
mov
fs
into
mov
cmc
dec
or
cli
ret
into
mov
jp
adc
push
xchg
add
out
jb
aas
lea
stos
mov
pop
lret
lds
stos
fadds
adc
icebp
fdivrs
dec
rcrb
inc
jb
sub
push
push
fwait
xor
popf
jg
fcompl
adc
sub
hlt
out
fwait
imul
imul
subb
cmp
push
lret
jp
mov
daa
stc
loop
push
in
mov
filds
add
divb
jp
repz
pusha
adc
jb
pushf
jmp
push
jmp
mov
insl
test
call
lock
fstpl
shl
fwait
or
fmull
jmp
jp
xchg
ret
ret
pop
push
add
aaa
and
addb
or
mov
call
or
jae,pt
xor
repnz
cmp
stos
push
and
jne
test
mov
pop
ss
fsubs
sub
push
sahf
sbb
ds
pusha
loop
mov
mov
fistl
inc
sbbl
daa
ljmp
incl
xlat
cwtl
movsl
je
insb
mov
inc
add
add
out
jbe
andnps
inc
out
popa
xor
sarl
ja
ret
clc
enter
ficoms
dec
ficoms
mov
rep
dec
sahf
mov
mov
stc
mov
arpl
add
or
sbb
inc
jbe
cmp
adc
sahf
shrl
pop
mov
adc
pop
jle
jl
adc
imul
pop
mov
sbb
lcall
cli
cltd
subb
and
shll
pop
outsl
aaa
pop
jnp
dec
jbe
sub
sti
sahf
int3
cs
cs
stos
push
dec
cmp
cwtl
sti
out
mov
sub
mov
sbb
aad
mov
scas
push
inc
incb
adc
cmp
pop
lock
mov
push
sbb
in
inc
sub
subb
pop
fsub
pop
inc
loope
mov
inc
lret
je
pusha
fisttps
mov
faddl
pop
mov
mov
mov
xchg
popf
out
inc
cmpsl
xor
cli
in
adc
icebp
sbb
xchg
nop
sub
loop
sub
and
fiadds
xor
pop
sti
cmp
xor
bound
shll
mov
or
mov
mov
mov
aaa
xchg
andb
cmpsl
push
adc
jle
outsb
sub
das
sub
push
loopne
cwtl
dec
xchg
in
sub
or
push
ficompl
pop
addr16
test
cmp
and
or
fimull
cli
mov
out
lods
add
pop
or
sbb
mov
cmpsb
mov
pop
pusha
in
test
rcr
push
jb
xchg
stos
or
jb
mov
pop
and
shlb
jp
xchg
dec
mov
leave
fcoms
aad
bound
mov
enter
push
insb
sub
mov
pop
orb
dec
mov
shrl
sbb
pop
negb
addl
inc
dec
in
insb
dec
test
mov
xor
pushl
xor
xchg
xchg
fmull
push
shl
mov
shlb
scas
repnz
pop
inc
pop
xchg
add
test
in
sub
dec
pop
shll
jo
mov
add
jno
test
clc
pop
ljmp
or
es
stos
lods
pop
btc
sahf
sub
outsl
es
pop
andl
dec
lcall
pop
bound
stc
pop
imul
sub
cmp
aaa
push
xchg
cmp
mov
inc
arpl
and
or
das
mov
cli
leave
push
sbb
in
mov
sarl
cmp
repz
aas
fsubp
loop
inc
sbb
sbb
or
je
out
aam
and
sub
sub
xchg
adc
clc
bound
pop
xchg
mov
test
pop
hlt
mov
repnz
in
sbb
add
push
push
push
idiv
out
negb
dec
or
inc
push
sbb
or
and
jle
inc
and
popa
lods
insl
lahf
cs
cmpb
cwtl
and
pop
pop
push
cmp
fadds
ficomps
roll
jl
rcrl
scas
fildll
xlat
insl
lahf
arpl
je
cmp
out
js
bound
xlat
leave
clc
cwtl
clc
bound
jg
das
divl
lcall
xor
xor
stos
inc
dec
outsl
jae
xor
cmc
add
cmp
add
pop
add
push
ss
push
push
cmpsl
pop
sarl
xlat
xchg
adc
imul
fisttpll
cmc
shll
pop
mov
fcmovbe
pop
mov
hlt
popf
fwait
out
stc
push
fs
insb
sbb
insb
mov
xchg
xlat
push
std
outsl
test
bound
or
in
jns
adc
add
lcall
cmpb
cmpsl
adc
cmp
fldenv
cmpsl
lret
xchg
jl
xlat
out
clc
jp
xchg
add
loope
jb
cmp
or
decb
pavgw
mov
lock
xchg
pop
push
cmpsb
lret
movsb
movsl
lods
xchg
fisubs
dec
xchg
mov
push
and
jle
xorb
add
outsb
das
clc
jno
cmpsl
mov
xchg
test
dec
mov
and
fadds
mov
push
popf
cvtdq2ps
push
je
and
daa
ds
xchg
push
rclb
outsb
push
stc
sub
gs
or
into
in
and
jb,pt
push
sbb
cmc
dec
insl
lods
cmp
notb
push
lods
push
jge
adc
xchg
adc
cmp
jmp
lret
mov
movsb
mov
jmp
les
cltd
fwait
mov
push
clc
in
je
push
xor
lcall
loope
add
xor
push
mov
fstps
xor
xchg
sub
movsb
icebp
mov
lea
jecxz
pop
adc
and
lods
gs
mov
movsb
sub
mov
sti
jmp
sbb
cmp
imul
add
inc
xchg
sub
cs
adc
into
pop
cmp
and
sbb
popf
or
cmpsb
inc
cmp
das
mov
or
push
mov
add
decl
cmpb
jl
mov
jne
dec
dec
orb
into
js
lret
xchg
dec
mov
lahf
lret
in
dec
mov
test
repnz
into
push
mov
xor
cmp
sbb
mov
sub
out
inc
push
cwtl
jmp
shll
cmp
add
and
outsb
jnp
cmc
add
fmul
in
sbbb
sti
sub
jnp
mov
mov
add
loope
cmpsb
xchg
mov
in
sahf
mov
ret
jbe
scas
fs
xor
ljmp
test
loop
xorb
push
lock
pop
call
into
add
dec
xchg
cmp
push
or
notl
mov
xor
xchg
or
aaa
rcrb
mov
mov
aaa
stc
pop
mov
scas
sbb
adcb
push
inc
jmp
out
hlt
mov
sbb
pop
test
fwait
inc
mov
lods
aad
xchg
pushl
sbb
dec
test
or
mov
dec
cmp
gs
test
dec
push
mov
xchg
sub
pop
popf
fcompl
fcomip
jp
inc
dec
push
scas
mov
daa
out
inc
jecxz
ret
mov
in
dec
dec
insb
clc
mov
jnp
es
jb
andb
lahf
adc
pop
mov
sbb
xchg
ss
pushf
mov
jb
vpunpcklwd
jo
leave
and
aaa
sahf
mov
mov
std
or
xor
xorl
xor
push
rolb
and
sub
imul
nop
add
push
sbb
lock
fiadds
lret
aaa
ljmp
test
add
cmc
mov
push
ja
mov
mov
mov
and
cmp
adc
lea
dec
subl
add
inc
mov
inc
xchg
mov
call
sbb
in
and
jb
and
bound
bound
sbb
repnz
xor
cltd
push
jecxz
loop
addb
out
mov
dec
dec
insl
movl
iret
sbb
imul
out
jmp
cmp
and
push
adc
ror
and
sub
fsubs
push
and
push
stos
outsl
mov
mov
jne
adc
les
mov
xor
jae
pushf
jl
pop
mov
iret
and
lahf
xchg
shrl
jp
scas
mov
roll
pop
stc
jmp
into
push
push
pop
add
fiaddl
adc
mov
mov
jno
lcall
adcb
cmc
pop
xchg
jb
imul
movsl
dec
outsb
push
xor
ljmp
inc
mov
shlb
and
ljmp
das
pop
shlb
ds
pop
jp
mov
cld
fs
push
mov
test
inc
decl
pop
jl
daa
jecxz
adc
push
ret
mov
ss
cmp
inc
push
pop
std
sarl
movsb
adc
mulb
lcall
xor
jno
rcl
sbb
adc
sti
jns
popa
jge
inc
add
push
idivl
lods
add
lret
pop
push
cvtps2pi
or
nop
icebp
dec
pop
imul
call
mov
xchg
mov
pop
sbb
lret
cmp
ja
sbb
out
mov
pop
imul
paddsb
bswap
sbb
mov
dec
dec
sbb
pop
popf
mov
adc
pop
push
and
in
sbb
mov
push
pop
push
jo
out
aas
movsl
out
sti
lea
inc
push
lahf
hlt
sub
mov
cs
cmp
xor
jb
xor
test
jg
inc
mov
outsl
or
or
popa
dec
cmp
aad
es
sti
xchg
lea
ljmp
pop
insl
es
pop
inc
cmp
mov
pop
movsl
clc
cmp
jbe
adc
mov
pushf
pop
shr
xchg
jge
dec
mov
pop
shr
or
ja
mov
daa
or
mov
test
iret
addr16
ss
jl
xchg
sub
imul
pop
inc
push
fcomps
sti
fnstcw
daa
mov
mov
test
test
test
stc
aam
test
inc
iret
inc
sbbb
orl
or
outsl
pop
fst
or
frstor
aas
out
stos
ffree
loope
inc
mov
movsl
and
push
test
push
mov
fstpl
arpl
jmp
mov
dec
mov
bnd
cmc
cld
scas
cli
hlt
out
push
inc
jmp
call
mov
jne
xor
mov
mov
stos
mov
jae
mov
ja
test
sbb
inc
pop
sub
sub
shr
jge
insl
sub
xchg
adc
or
or
cli
xchg
pop
lock
fwait
inc
or
cmpsb
std
sub
fadds
and
fcoms
insl
icebp
scas
sahf
mull
mov
adc
sub
outsb
imul
mov
xchg
test
enter
adc
les
pusha
mov
out
jne
push
fldenv
jnp
cmp
xchg
cmp
jns
and
rcr
das
sbb
lahf
clc
sti
aad
aas
sarl
sbb
fnstcw
or
jg
mov
mov
nop
ret
popa
xchg
mov
popa
icebp
pop
xchg
test
or
sub
pop
sbb
data16
pop
mov
hlt
rorl
stos
dec
or
jne
xor
jb
xlat
repz
shrl
adc
call
cli
mov
ret
pop
inc
aas
in
inc
add
imul
int3
lods
sbb
cli
sbb
fsts
pop
lret
outsb
rolb
jp
xor
sbb
cmp
incb
add
push
inc
clc
jp
mov
and
adc
loopne
cltd
xor
ljmp
adc
inc
into
push
sub
jno
ret
test
sbb
gs
rcrl
incl
enter
jg
or
sbb
inc
mov
adc
inc
repz
pop
sub
loope
lods
mov
jmp
jecxz
sahf
lcall
cmp
pop
mov
dec
push
or
push
cs
or
pop
xchg
xchg
inc
inc
fwait
jno
sub
or
aas
sub
pop
and
cli
xchg
movsl
sbb
mov
fsubl
jae
fcoml
xchg
sbb
push
arpl
jmp
dec
gs
adc
out
pop
xchg
adc
or
push
addl
xlat
cmp
sub
dec
insl
imul
xor
insl
insl
ror
pop
sbb
call
in
xor
xor
out
mov
iret
mov
jmp
test
lret
jne
popa
arpl
insl
stos
fdivrp
loop
das
andl
imul
mov
push
mov
jns
pop
sbb
sti
push
mov
test
pop
and
ljmp
or
bound
push
adc
pop
push
cmp
loope
add
lcall
mov
push
push
sbb
cmp
push
inc
pop
cmp
mov
in
shrb
out
mov
pop
cmpsl
cmpsb
outsb
lds
movsl
adc
pop
push
adc
cmp
cmp
or
shr
mov
cmp
jns
imul
push
insb
insb
loop
dec
adcl
scas
pop
jo
or
and
popa
jg
fistpll
xchg
adc
pop
xchg
insb
mov
pop
sub
mov
sub
xchg
aam
mov
dec
or
adc
and
or
rorl
xchg
enter
push
push
into
xchg
lods
hlt
hlt
int3
lea
adc
popf
jno
or
jno
pushf
sub
scas
out
rcl
test
xor
inc
jg
scas
xchg
js
insl
dec
shl
dec
testl
daa
ret
ret
push
jmp
dec
pop
or
loope
cli
xchg
mov
divb
inc
mov
push
popf
mov
add
sbb
jne
in
adc
fwait
add
scas
dec
push
loop
int
rorb
sbb
imul
and
leave
test
insl
loope
mov
std
int3
jbe
fnsave
pop
mov
shll
adc
imul
mov
imul
fnstenv
pop
and
std
or
mov
dec
ljmp
movsb
mov
decl
dec
fs
push
sbb
shrb
xor
fcmovu
cmp
lret
out
xchg
jge
mov
loop
pop
mov
xchg
mov
sahf
ljmp
inc
mov
jg
and
in
testl
xchg
jb
fucom
jbe
push
cmp
std
gs
js
aas
lea
add
jp
fadds
sub
add
sub
stos
cltd
lar
or
out
aam
pusha
inc
add
jl
test
sbb
adc
sarl
dec
push
stos
pushf
pop
adc
iret
add
mov
fadd
xchg
test
pop
dec
dec
adc
mov
cmp
fbld
cmc
subb
test
loope
movsl
and
sbb
push
popf
cltd
jg
decl
or
orl
dec
add
mov
and
mov
or
or
sbb
xor
repz
push
movsl
adc
adc
inc
add
int
mov
fistpll
aas
or
lods
shll
fildl
lahf
or
bound
cmp
and
movsb
jle
sub
pop
xor
fs
jge
mov
nop
les
leave
xlat
into
cmp
add
int3
loopne
mov
or
or
pop
js
scas
cwtl
xor
bound
call
adc
dec
push
xchg
sub
lods
aad
stc
je
data16
cli
js
out
ret
xchg
fimull
fwait
loope
sti
jmp
sbb
jae
mov
adc
sbb
roll
and
and
arpl
mov
mov
ds
or
and
mov
or
sub
ficoms
jge
call
out
jne
xor
sar
cmp
or
add
mov
scas
jne
leave
pop
mov
sarb
daa
cltd
or
or
cmpsb
mov
xchg
inc
ljmp
sub
ljmp
popa
inc
cmpl
inc
mov
call
xor
loope
lret
push
addr16
sbb
fwait
or
popa
rorb
std
xchg
xchg
push
sub
pop
popa
or
xor
jno
aas
pop
jns
pop
rcrb
jle
mov
lcall
imul
push
cld
dec
mov
sbb
mov
iret
push
int3
lret
shrl
loopne
fwait
outsb
inc
out
dec
outsb
cltd
cmp
push
adc
xor
or
popf
inc
xchg
push
jmp
js
push
fcom
int
add
mov
push
xor
sbbl
call
adc
negl
jp
popa
jb
int
inc
inc
mov
sub
ljmp
sub
mov
iret
and
js
int
mov
xchg
mov
dec
adc
in
pop
sahf
into
cmpsb
or
cld
xchg
ds
mov
dec
jmp
stc
mov
rcll
fiadds
push
xchg
add
ffreep
xchg
addl
ret
and
xchg
dec
sub
dec
xor
xchg
push
push
ret
movsb
push
jo
xor
add
imull
cmc
sub
cmc
shll
xor
or
mov
sub
cli
mov
pusha
call
pop
sub
dec
pop
outsb
stos
out
outsl
cmp
pop
imulb
mov
fsubr
incl
scas
ljmp
dec
pop
pop
mov
adcb
std
leave
xchg
insb
jno
fs
cmp
inc
imul
cmpsb
add
pushf
adc
mov
inc
shrl
jmp
addr16
jae
cmp
js
mov
insb
mov
pop
mov
push
loope
nop
inc
js
inc
sbb
hlt
lods
or
fsub
mov
cmp
xchg
sbb
rclb
mov
inc
xchg
xor
cmp
push
rcr
jo
aad
lcall
call
sub
xor
aam
mov
das
pop
or
cmp
shrl
adc
testb
xor
mov
idivl
ja
imul
jmp
push
ljmp
and
jne
je
ffree
dec
sub
fucom
lret
js
shlb
xor
mov
inc
xor
pop
lret
or
mov
xor
adc
mov
or
mov
adc
mov
aas
sub
mov
outsl
movsl
data16
adc
hlt
fsubs
daa
or
fnsave
ja
add
sub
lods
mov
and
jno
push
and
dec
cwtl
pop
popf
sub
sub
add
jle
mov
or
push
loope
jnp
push
ds
pop
and
inc
add
lret
adcb
lods
cmpsb
push
dec
jg
mov
in
pop
jg
pop
pop
inc
cmc
pop
add
inc
add
dec
mov
lock
cmp
inc
enter
fdivrs
lret
inc
idiv
xchg
es
cwtl
frstor
loopne
push
sbb
rorb
fisubs
and
pop
xchg
adc
aas
mov
mov
cmp
mov
jns
push
fs
sti
add
xor
xor
pop
xor
jmp
std
and
subl
loopne
cmp
sbb
push
mov
dec
movsb
add
sbb
cwtl
xchg
pop
pusha
pcmpeqw
xchg
outsb
lock
inc
cmp
repnz
adc
mov
imul
mov
sub
sub
dec
cmpsl
mov
scas
cltd
xchg
and
out
icebp
enter
lods
cmp
cmp
push
xor
jecxz
popf
jne
xchg
fs
inc
sahf
rorl
add
out
fildll
inc
sub
adc
adc
jmp
lods
mov
sub
sahf
pusha
mov
call
fwait
in
mov
add
inc
rclb
pusha
jbe
xor
lahf
mov
hlt
add
inc
mov
xchg
xchg
pop
jg
mov
cmp
test
dec
cmp
push
aad
dec
js
push
pop
leave
outsl
adc
jne
mov
jp
pop
fwait
iret
out
mov
xor
jmp
cmp
xchg
mov
nop
and
mov
ss
bound
or
jmp
fcom
fcmovnu
sub
and
enter
ret
jnp
jae
fsubp
cmp
adc
mov
mov
popf
add
sbb
lahf
aad
and
sbbl
scas
sub
scas
lret
xor
dec
test
outsl
cs
sub
fucomi
lret
rcl
add
scas
sahf
lret
inc
sbb
hlt
arpl
cmp
aad
in
jb
jb
and
pop
cmpsb
cmpb
adc
jb
jae
adc
adc
punpckhwd
xchg
insl
and
lret
stc
and
sahf
das
stos
xlat
cmpsb
hlt
insb
and
out
and
mov
in
test
xor
mov
rcrl
out
lahf
je
mov
test
sub
push
sahf
add
and
aad
ret
rclb
jecxz
negb
adc
sbb
fs
in
mov
push
sub
loope
loope
pop
ljmp
add
shl
in
into
repz
sbb
dec
addb
mov
cld
pop
and
pop
test
mov
fnstsw
sahf
ss
and
sbb
or
jo
scas
fcomps
xchg
mov
cmpsb
jno
out
loope
mov
in
cmpsl
xchg
popf
daa
push
lahf
es
mov
iret
mov
fildll
sbbl
test
mov
and
mov
andl
movl
insl
adc
push
push
mov
mov
cmpsl
int
or
mov
pusha
xor
cs
std
mov
insb
shrl
push
fidivs
into
add
loop
dec
push
xchg
mov
cld
jnp
mov
popf
mov
mov
jns
jge
leave
pushl
push
push
inc
jecxz
mov
and
mov
adc
inc
clc
lea
test
adc
repnz
xchg
adc
inc
fwait
mov
insl
push
pushf
mov
and
mov
push
pusha
jg
xchg
ret
or
pushf
jecxz
in
lds
mov
cltd
xchg
shl
shlb
rolb
and
pusha
jne
or
push
sahf
jae
ljmp
mov
outsl
cmp
jo
sbb
jecxz
movsl
repnz
mov
push
les
xchg
cltd
xchg
fs
jecxz
ljmp
or
movsb
pop
push
or
popf
popf
gs
enter
sbb
int3
pop
add
mov
adc
push
jmp
and
cmp
mov
pop
fidivrs
sbb
mov
sub
mov
push
scas
out
sub
push
or
cmpsb
cmp
push
or
cwtl
pop
jge
into
dec
pop
cwtl
ss
xchg
lret
lret
ja
and
arpl
repnz
push
fcomip
or
cmp
mov
fwait
pop
rcll
rep
shll
jmp
sub
lret
into
mov
testw
dec
push
push
adc
lock
sarb
hlt
cli
adc
adc
xor
pop
mov
jecxz
mov
aam
outsl
dec
sub
xor
std
sbb
push
pop
xlat
adc
pop
sub
fsubs
nop
mov
pushf
mov
dec
push
sarb
mov
xor
jecxz
jmp
jnp
test
mov
dec
xorl
cmp
cmp
xor
push
mov
mov
imul
xor
clc
xchg
lret
dec
lret
into
jnp
xchg
dec
es
mov
test
aaa
jne
ds
sbb
xchg
pushf
movb
push
push
ja
push
sahf
push
movl
mov
jl
or
aad
fisubl
sbb
fdivl
jle
jno
xchg
mov
adc
push
dec
or
ror
pop
fbstp
sub
xor
pop
push
lods
sbb
xor
fmul
xor
das
push
mov
test
scas
clc
je
int
and
lea
in
mov
rolb
adc
cmp
push
cmpsb
shr
inc
mov
jbe
mov
add
incb
movl
jecxz
stos
inc
push
mov
mov
mov
or
je
fdivrs
jecxz
loopne
sub
scas
or
aaa
jnp
ret
jl
fs
sub
leave
dec
bound
inc
lret
arpl
int
inc
movsb
mov
decb
pushf
popf
mov
call
sbb
movsb
sbb
push
cltd
or
sub
or
mov
out
std
inc
adc
mov
add
dec
leave
xor
outsl
arpl
pop
add
insl
cltd
and
dec
lds
and
push
test
out
or
loop
push
jo
inc
inc
push
cwtl
add
inc
dec
sub
aam
jecxz
movsl
push
mov
adcb
gs
sbb
xorb
out
pop
mov
jb
in
stc
dec
int3
inc
pusha
mov
or
push
lea
pop
xchg
jge
popf
jge
pushf
adc
int3
push
adc
cmp
add
pop
or
jp
das
int3
mov
clc
fs
and
ja
lahf
aas
xchg
out
in
sar
mov
xor
push
insb
adc
mov
sub
cmp
mov
ljmp
mov
out
mov
mov
or
bts
add
dec
push
or
hlt
out
add
ss
cmpsb
popa
inc
jno
ja
push
sbb
mov
popa
pop
lcall
push
stos
mov
add
mov
add
popf
inc
xchg
mov
das
mov
leave
push
push
in
popf
dec
mov
add
and
negl
daa
leave
div
mov
push
dec
in
mov
xor
out
xor
push
pop
and
sbb
jmp
pop
jnp
xor
cmp
in
inc
mov
mov
imul
fcmove
mov
push
cmp
or
push
jo
imul
fcoms
cmpsl
cmpsb
das
aaa
push
adc
mov
jg
fcom
lods
in
adc
mov
fs
inc
xor
mov
dec
fdivrs
cmp
rorl
jae
frstor
xchg
add
sbb
jno
test
sbb
cmp
or
push
sbb
aad
mov
scas
dec
xlat
inc
push
mov
mov
dec
data16
add
push
cmpsl
adcb
cs
jge
shrl
mov
lds
pusha
in
out
mov
enter
xor
out
mov
xor
or
pop
sbb
cmp
inc
lock
push
mov
mov
cltd
mov
in
aas
add
stc
cmp
jge
in
imul
push
ds
mov
and
imul
ljmp
push
sbb
ja
iret
xchg
inc
leave
push
mov
xor
call
or
dec
sub
inc
cmp
inc
rcrl
sbb
and
xchg
mov
mov
cmp
popa
inc
lcall
aas
dec
jns
ljmp
xchg
in
ret
sbb
fdivr
arpl
fmul
mov
repnz
movsl
push
inc
mov
inc
cmp
push
insl
in
push
outsb
dec
or
sbb
push
ss
cld
adc
cmp
mov
jo
std
sti
inc
sub
pop
cwtl
xchg
mov
jbe
mov
xchg
sub
fcmovb
lahf
orb
jne
bound
add
push
push
or
cmp
sub
lea
inc
out
push
stos
xor
incl
mov
push
mov
fmuls
jnp
dec
pop
jne
dec
sub
cwtl
repnz
iret
lock
cld
ljmp
and
shlb
mov
fmull
pop
stos
adc
adc
pop
mov
sbb
mov
sbb
push
lods
pop
mov
pop
push
push
adc
data16
push
jl
cwtl
xlat
sbb
add
or
push
and
mov
aas
lods
pop
test
xor
loop
dec
jae
int
xlat
mov
mov
mov
enter
test
lahf
mov
imul
push
mov
lret
mov
jl
inc
mov
dec
push
xor
inc
dec
ror
or
pop
stos
and
xor
lods
scas
inc
out
ds
daa
inc
scas
js
add
repz
dec
mov
add
or
clc
gs
mov
pop
dec
scas
xor
cwtl
inc
cld
je
push
jle
adcl
rcrb
push
call
aam
add
out
jmp
push
stos
inc
push
daa
fwait
xlat
pop
add
fnstcw
and
divl
pop
add
mov
pop
and
mov
xchg
lods
xor
icebp
push
shll
movsb
dec
out
mov
dec
dec
cwtl
jmp
shll
add
fcmovnu
jb
lcall
push
mov
hlt
stc
mov
ljmp
subb
fsubrp
lock
shlb
mov
int
push
jge
cld
test
adc
push
and
repnz
jecxz
lahf
test
add
mov
in
xlat
std
shll
int
clc
sbb
fldpi
pop
xchg
or
adc
dec
add
xlat
dec
lods
jmp
push
pusha
loope
fnstenv
bound
inc
cmp
scas
xchg
jnp
pop
arpl
mov
cmpsl
loopne
insb
int
shl
or
pop
mov
imul
push
xchg
test
xchg
mov
fisttpl
mov
hlt
ja
in
fs
aam
and
in
mov
js
mov
inc
test
pusha
sbb
iret
hlt
push
inc
call
leave
shrl
fiaddl
data16
mov
xchg
add
cmp
das
es
cmp
pop
clc
inc
movsb
push
in
push
pushf
jg,pt
xchg
mov
int3
pop
out
andb
or
lahf
cli
dec
pop
cmp
sbb
inc
xor
shl
mov
movsl
sub
push
jecxz
aam
mov
das
adc
daa
adc
push
inc
lret
inc
jge
je
ret
xchg
cmp
jbe
xchg
push
push
xchg
add
add
sbb
inc
test
pop
sub
fs
int
popl
es
lods
push
cltd
mov
sbbb
lods
cmpsb
mov
pop
inc
mov
xchg
dec
inc
mov
fbstp
pop
lret
inc
or
out
lret
and
mov
dec
jl
movsb
stc
or
mov
jmp
and
inc
mov
outsl
cltd
pop
in
enter
and
cmp
cmp
std
aam
xlat
jmp
enter
fists
fidivrl
mov
adc
scas
rcll
dec
scas
scas
pop
jb
mov
das
inc
and
clc
sbb
rcl
cwtl
add
cmp
in
mov
push
repz
jb
pop
imul
adc
nop
call
imul
push
repnz
mov
cmp
es
inc
cmp
xor
out
cmpsl
imul
fiaddl
adc
fcoms
lahf
shrl
xchg
int
fcompl
out
fsubl
fadds
cs
xchg
jo
add
xchg
jl
mov
fstpt
sub
addl
rcrb
push
mov
leave
ficoml
mov
inc
push
mov
xor
jl
out
xchg
xchg
cmp
xor
jae
add
xchg
dec
xchg
ret
cmpsl
mov
testl
mov
pop
push
pop
test
pushf
xlat
jae
pop
and
inc
push
pop
lret
adc
inc
pop
inc
loopne
fwait
dec
loopne
js
scas
in
daa
cmp
push
push
cmp
and
mov
or
cld
icebp
lcall
sub
test
enter
ret
call
shll
push
out
das
lock
and
mov
or
dec
add
loop
lds
jmp
jne
sub
jl
cmp
xchg
sbb
es
stos
in
fdivrp
fdivrl
lock
icebp
mov
ret
mov
inc
sub
jnp
pop
pop
or
js
add
pmulhuw
data16
push
push
pop
cmp
and
cs
iret
mov
or
mov
shr
shll
push
ds
xchg
es
stc
push
jbe
push
ret
xchg
stos
out
dec
int3
jae
jl
xchg
jmp
adc
fiadds
out
mov
fdivs
push
fcmovb
cmp
enter
ret
jo
push
pop
inc
aaa
fs
es
movsl
add
aam
add
test
out
rorb
and
test
adc
fdivrs
out
jb
in
lret
in
andl
in
push
xchg
sbb
sbb
jnp
mov
dec
imul
pop
inc
in
pop
rol
je
inc
ja
sub
rcrb
cld
js
mov
pop
add
mov
call
jmp
xor
inc
punpckhdq
adc
mov
nop
aad
std
mov
push
inc
adc
sbb
mov
pop
inc
test
adc
subl
adc
or
xchg
or
cli
mov
imul
mov
mov
jge
out
mov
out
mov
or
jge
inc
cltd
out
out
push
mov
adc
sub
dec
movsl
mov
data16
or
sbb
pop
lods
add
jle
xchg
dec
mov
std
pop
sarb
das
or
lahf
fwait
cmp
leave
cmp
push
mov
inc
in
dec
out
arpl
push
or
dec
pop
sub
cmp
into
mov
sbb
xchg
icebp
add
in
inc
loopne
ja
inc
or
sub
cli
sub
andl
and
and
insb
push
sbbb
cli
call
and
roll
sti
popf
sbb
shl
pop
adc
popa
dec
pop
aas
dec
in
jg
pop
sub
stos
lahf
icebp
fistpl
dec
leave
jmp
or
stos
leave
cwtl
pop
fildll
sti
inc
cmp
fwait
popf
mov
or
test
adc
lock
add
dec
inc
or
pop
jae
push
push
insl
cltd
int
push
sbb
outsb
mov
ret
sbb
mov
std
in
mov
enter
mov
xor
movsb
outsl
push
stc
ss
fdivl
jb
insb
pop
push
add
push
or
add
fwait
add
add
fwait
lahf
sub
add
pop
push
cwtl
les
inc
jl
dec
cli
test
test
jno
in
xchg
es
insb
add
pushf
push
mov
sbb
shll
or
mov
popa
mov
lods
scas
jl
ret
xchg
cmp
sbb
xor
push
xor
cmp
lods
pop
inc
movsb
sar
sub
lds
inc
sub
pop
add
jmp
cld
mov
xchg
loopne
or
stos
fwait
lds
push
jg
sar
jns
xor
push
dec
jns
adc
dec
das
ror
scas
loopne
lock
cmpsl
fdivrl
movsb
sub
push
daa
mov
les
xor
fucomip
sahf
mov
mov
les
inc
loopne
mov
loope
lcall
add
cmp
jmp
ljmp
lcall
call
daa
movsl
lret
leave
int
das
aam
aas
div
xchg
xchg
push
xchg
das
sbbl
push
pop
daa
inc
mov
repz
mov
and
repz
or
ja
xchg
push
or
aam
sbb
and
push
adc
pop
pop
sub
xchg
and
pop
sbb
add
lret
xchg
cmp
cmp
cwtl
mov
adc
sbb
repz
cmp
mov
mov
push
imul
adc
sbb
adc
jbe
jmp
out
xlat
pop
mov
rdtsc
movsl
outsb
jno
mov
sbb
pop
jge
stc
jmp
jae
orl
fmul
xchg
in
int3
lahf
jmp
push
out
mov
ficoml
mov
jns
jo
xor
sub
add
push
push
push
and
sbb
lods
lea
fabs
ja
jnp
mov
mov
ror
insb
mov
subb
js
xlat
repz
mov
jo
sub
or
cmc
xor
jnp
es
cli
js
and
sti
pop
and
xor
xor
and
mov
orb
sbb
push
fwait
loopne
test
or
lock
push
popa
imul
inc
jmp
or
mov
testb
mov
jge
push
or
test
filds
je
xor
rcr
xorl
inc
les
fisttpl
lock
push
mov
lret
jle
sbb
push
pop
mov
std
cmpsb
jo
shll
dec
pop
lea
xchg
fiaddl
hlt
or
sti
arpl
or
ret
rorl
push
ficomps
or
pop
cmpsl
and
mov
jl
mov
mov
xchg
inc
add
push
push
xchg
add
sbb
or
lods
fildll
arpl
lds
imul
rorl
cmpsl
cmp
out
call
push
dec
mov
inc
add
dec
lcall
push
pop
push
aam
lock
add
mov
faddp
div
adc
jo
pop
mov
rorl
fnstsw
stos
sbb
leave
mov
sahf
test
push
mov
vcvtpd2dq
out
test
cmp
mov
mov
fldl
add
add
jg
xlat
shll
mov
cmp
jb
cli
pop
scas
es
cmpsl
xor
inc
mov
push
xor
cmp
mov
repz
lahf
call
or
sbb
in
sub
mov
fwait
out
aaa
push
andl
xor
in
out
scas
stos
pop
adc
cmp
sti
push
cli
cmc
insl
mov
incb
lahf
addr16
out
in
lods
cmpsl
mov
cmpsb
mov
cmpsl
fisubrs
cmpsb
lock
dec
inc
fstpt
je
cmpsb
push
add
fs
xor
out
xor
call
cld
gs
insb
stc
lret
int3
lock
movsl
arpl
mov
in
maskmovq
negl
es
and
mov
arpl
inc
mov
rorb
mov
xchg
movsl
mov
add
lahf
adc
add
jg
fwait
push
sbb
pop
mov
les
data16
sub
pushf
mov
das
cmp
pushf
inc
out
cwtl
sahf
out
dec
mov
sti
in
aad
arpl
cmp
fistps
and
loop
adc
sahf
stc
mov
rorl
and
out
dec
movsl
out
mov
out
lods
pushf
adc
nop
pop
out
cmp
xchg
inc
xchg
xchg
push
xchg
je
pop
push
mov
icebp
push
leave
push
mov
push
jge
mov
pop
adc
jg
sahf
jns
fdivs
gs
xor
test
push
es
fcmovbe
push
dec
ds
pusha
stc
cs
daa
insb
or
in
sbb
dec
sahf
lods
push
and
sbb
xor
test
push
cmp
sti
daa
in
jne
inc
insb
insb
jnp
add
testl
jmp
js
sub
lahf
lret
shlb
fdivl
mov
out
pop
fsubrl
fs
arpl
mov
fwait
fs
xor
and
xor
dec
ja
nop
fsubrs
or
adc
repnz
add
dec
push
xchg
jb
je
mov
push
sub
ljmp
inc
push
xor
cmp
out
push
fimull
cmp
push
sbb
inc
loope
xor
loope
nop
sub
pop
jmp
push
lea
mov
dec
sub
pop
aad
push
pop
sbb
mov
sbb
adc
and
mov
test
mov
scas
fwait
adc
jo
idivb
dec
inc
out
roll
push
xor
aas
nop
or
cmp
push
insl
inc
xor
jnp
xchg
sbb
mov
insl
insb
mov
sarb
add
aas
pop
xor
test
scas
xchg
pop
ficoms
stos
jmp
inc
mov
adc
adc
mov
inc
scas
inc
mov
or
out
push
mov
and
cmp
rorl
les
sub
mov
push
sub
jbe
lret
ja
or
imul
inc
inc
dec
mov
mov
pop
adc
xchg
jb
jmp
scas
mov
jmp
enter
mov
or
aas
add
daa
add
mov
call
pop
jnp
popf
repnz
sbb
rcrb
imul
push
es
out
in
js
repnz
je
lds
fnsave
mov
mov
cmp
adc
ret
jne
movsb
das
xor
xchg
fnsave
les
test
pop
repz
adc
jne
xchg
xor
icebp
jg
pop
out
shl
push
ja
sbb
xor
cwtl
insb
dec
aas
test
imul
sub
add
add
cmp
hlt
lret
popa
mov
sbb
jg
jmp
mov
aad
and
movsb
in
add
out
push
into
xchg
add
xchg
or
fwait
inc
pusha
mul
and
stos
lock
mov
scas
jge
sub
dec
stc
jg
test
xchg
ror
fistl
mov
scas
pop
out
jb
sbb
push
push
sbb
movsb
test
aas
lcall
es
jb
sti
push
pop
pusha
sbb
sub
mov
cmp
pop
mov
xor
in
mov
shlb
mov
inc
mov
mov
nop
cmp
outsb
pop
sbb
pop
push
sbb
sbb
notl
lods
and
iret
repz
icebp
mov
inc
xor
mov
repnz
pop
sub
int
xor
shlb
inc
mov
mov
jl
dec
mov
mov
inc
leave
sbb
xchg
lea
gs
xchg
jecxz
sbb
fistl
push
fwait
pop
push
lock
fcmovnu
jp
das
jae
into
sbb
mov
xchg
stos
add
int
push
testl
outsb
xor
gs
xchg
sub
mov
jmp
out
dec
loopne
push
cli
lahf
std
jbe
jl
ret
and
addr16
fistpl
mov
push
imulb
sbbl
lcall
xchg
stos
mov
mov
pop
pop
cmp
pop
hlt
or
sbb
cld
adc
mov
jg
dec
pop
dec
xchg
cs
push
pop
daa
add
or
loop
imul
bnd
jge
test
xchg
outsl
das
lcall
mov
sbb
lock
arpl
movsb
xchg
push
stc
push
lcall
dec
arpl
pushl
es
jbe
dec
lods
ljmp
dec
push
dec
leave
hlt
mov
bnd
and
repnz
popf
xchg
fcmovnbe
xor
aad
test
xchg
call
push
out
mov
pop
push
cmpsb
mov
xor
adc
add
int3
aam
fisubrs
jg
shll
ret
ljmp
pop
pop
or
sahf
xorb
cmp
repnz
mov
out
lahf
les
inc
addr16
outsl
sahf
pop
cwtl
idiv
and
mov
adc
lret
and
xor
ficoml
add
test
mov
lods
mov
jb
dec
arpl
xor
cmc
fwait
xchg
out
sbb
sbbl
mov
push
jmp
pop
cmpsl
insl
sbb
int3
dec
inc
cmp
cmp
insl
add
push
cmpsb
fimull
xor
test
movsb
cltd
mov
sbb
cltd
mov
int
aas
js
arpl
push
xchg
fldcw
popa
outsb
and
aaa
mov
sub
jbe
sub
rorb
sbbb
mov
out
mov
push
jp
sub
xor
inc
sahf
sbb
and
sub
out
xor
adc
roll
into
or
fdivl
mov
sub
sahf
sub
daa
pop
loop
pop
clc
or
bound
iret
js
gs
int
outsl
sbb
cmc
ret
out
adc
pop
pop
cmpsl
leave
aas
mov
inc
push
fdivrp
jb
sbb
adc
mull
sti
xchg
loope
cmp
pop
dec
mull
das
xchg
sbb
bswap
and
sbb
enterw
or
fisubs
ret
fcoml
sbb
cld
fwait
cld
cmc
pop
andl
fisttpl
outsl
mov
xor
scas
xor
fwait
inc
das
or
inc
mov
mov
adc
pop
ss
jmp
nop
fyl2xp1
sub
cmp
dec
jo
fildl
lret
jl
mov
mov
sub
mov
jmp
inc
mov
mov
sbb
cmp
aaa
mov
call
sbb
lods
lea
cmpsl
aaa
je
jne
pop
sub
cs
pop
adc
mov
xchg
scas
popf
fadds
xor
sbb
jp
call
jb
test
ja
pop
cmp
shrl
sbbb
out
push
dec
add
cltd
or
dec
imul
jmp
movsb
jle
imul
mov
and
add
in
sub
imul
int
stc
pop
mov
ja
lret
xchg
jne
xlat
and
push
stos
xor
xor
rcrb
pop
add
std
rcll
adc
aam
mov
or
push
mov
arpl
insb
inc
inc
sbb
mov
fcmovb
call
pop
xorb
push
nop
loope
outsl
and
cli
sbb
inc
pop
movlhps
aas
lahf
lods
enter
inc
cmp
arpl
rcrl
push
lea
loop
test
daa
testl
lods
repz
das
arpl
and
cmp
shrl
into
mov
hlt
rcll
data16
fwait
pop
mov
push
sub
mov
popf
jge
popf
push
cld
imul
fisubrs
aas
cmp
out
outsl
mov
sarl
ljmp
in
pop
rolb
scas
cld
mov
xchg
and
rolb
dec
jbe
lret
pop
test
mov
or
mov
sub
in
daa
push
mov
daa
mov
lock
insb
mov
or
mov
sbb
xchg
cmpb
cmc
sbb
xchg
fadds
popf
jbe
daa
adc
inc
pop
adc
adcb
outsl
insb
push
inc
mov
mov
adc
rorl
or
push
cmp
sbb
subb
cmp
cli
jo
adc
and
cmp
in
in
cmp
mov
or
popa
sub
sbb
sbb
jae
mov
bound
aam
testb
sub
lret
popa
jg
mov
stc
add
jbe
push
test
into
dec
mov
inc
xchg
pop
test
lret
pop
mov
mov
jmp
inc
xchg
sbb
jmp
push
divl
xor
rcr
ret
pop
push
sbb
mov
ret
movsb
add
jle
xchg
sub
testl
test
jbe
add
lret
iret
jae
dec
stos
out
mov
les
je
xchg
incb
dec
sbb
lret
mov
or
loop
lret
ret
lcall
jnp
insl
or
inc
into
inc
leave
push
out
xchg
xchg
mov
pop
push
xchg
int3
pusha
and
xor
or
pop
push
sub
addl
pushl
es
dec
adc
mov
ret
sar
pop
inc
push
movsl
mov
or
sub
jne
dec
xchg
add
add
pop
enter
cmpsb
adc
pop
sahf
mov
sarl
or
cmp
and
mov
xlat
out
xchg
pop
sbb
int3
jg
lock
cwtl
pop
dec
pop
sbb
out
pushf
outsl
dec
mov
test
movb
and
xchg
jl
fstp
out
mov
cmp
movsb
repz
pop
or
mov
hlt
fdivrl
aas
mov
cmp
xlat
adc
daa
jl
xor
xchg
sbb
cltd
jmp
mov
dec
sub
add
sub
adc
jg
push
pop
fdivr
adc
sub
movsb
xorb
xchg
jne
pop
jp
call
sbbb
inc
and
hlt
and
jns
add
cmp
sbb
test
int3
xorl
mov
jns
nop
out
dec
mov
pop
xchg
outsb
fidivl
hlt
dec
negb
xchg
xchg
and
push
orl
loop
enter
push
pop
lock
mov
test
cmpb
test
pop
sahf
adc
or
fidivrs
cmpsb
enter
stos
cmp
and
add
stc
test
pushf
push
cwtl
sarb
jp
data16
or
lret
lods
push
lock
cmpsb
in
rcrb
in
inc
aad
adc
stos
cmp
test
dec
pop
or
ss
int
dec
fisubl
dec
ret
insb
and
adc
push
lcall
fisubs
test
popa
add
mov
adc
cmp
imul
sbb
inc
add
mov
and
push
jl
jecxz
mov
and
or
fcmovb
jno
push
test
int
js
ds
mov
push
mov
jno
inc
stos
mov
jg
jnp
mov
mov
dec
lahf
xchg
dec
pop
jle
or
mov
push
adc
les
repz
lods
mov
daa
pusha
cld
dec
push
jg
add
repz
jp
pop
lock
cli
inc
in
and
movsl
ljmp
mov
shll
pop
mov
gs
xchg
ljmp
sbb
and
popa
jae
or
inc
loop
lds
mov
mov
mov
dec
xchg
hlt
add
push
roll
push
lret
sub
ret
shl
cmp
imul
stc
cmp
or
or
ds
jmp
or
sti
stos
inc
test
lcall
fwait
notb
mov
xchg
scas
jbe
cmp
sbb
decb
or
out
cwtl
xchg
xor
test
mov
sub
cs
das
push
xchg
jnp
fidivl
adc
lret
jge
aam
adc
shll
in
xlat
jno
lret
xchg
xlat
insl
or
out
jne
push
repnz
out
pop
cmp
jl
lea
fimuls
imul
inc
cmc
xchg
dec
xchg
dec
scas
sub
dec
iret
pop
xlat
xor
test
jmp
xor
or
int
inc
fidivs
push
leave
push
and
pop
xor
in
das
dec
inc
jnp
push
rcrb
xchg
ja
in
lods
xchg
in
sbb
mov
movsl
mov
jns
adc
subb
loopne
and
or
repz
adc
add
jns
test
dec
push
je
insl
dec
mov
pop
popa
add
out
jle
cli
mov
and
mov
sahf
mov
inc
int3
stc
cli
push
jle
jno
jbe
adc
sub
pop
dec
and
adcl
inc
jno
movsl
pop
jns
mov
sbb
adc
fisubl
mov
xchg
negb
xchg
scas
sbb
popa
and
push
xor
popa
mov
sbb
sub
scas
es
les
xor
mov
xchg
daa
leave
inc
cs
push
je
mov
std
sub
scas
lret
pop
std
jmp
push
repnz
pop
xchg
ljmp
pop
ror
cmp
out
xchg
lcall
test
jns
mov
gs
arpl
xor
das
fwait
or
and
mov
sbb
ret
aaa
sbb
push
pop
xchg
fldenv
in
loop
icebp
inc
mov
mov
lods
mov
cmp
sarb
imul
sub
cmpsb
jle
scas
mov
inc
mov
scas
xor
and
filds
cwtl
and
ret
inc
mov
sbbl
and
push
test
mov
pop
sbb
xchg
adc
mov
add
jp
sub
fdivrs
adc
mov
pop
xor
daa
xchg
les
cmp
int3
push
sub
cmp
iret
and
mov
popa
adc
hlt
cli
icebp
cltd
xchg
shld
lcall
enter
dec
dec
icebp
xchg
jecxz
inc
or
push
ds
ljmp
push
push
test
push
orl
repz
test
adc
mov
sbb
imul
pop
or
push
imul
mov
sbb
cmp
dec
xor
or
xchg
rcll
cmp
push
out
lods
out
pop
xlat
sbb
jge
jnp
fldcw
cmp
ss
jp
mov
or
and
jge
push
push
add
dec
cmp
cmc
int3
mov
inc
mov
mov
sub
mov
sti
movsl
cwtl
gs
mov
inc
sbb
inc
call
leave
jmp
push
push
int3
icebp
pop
cmp
out
lret
adc
int3
cmp
mull
cs
mov
inc
xor
pop
test
pop
pop
dec
ss
mov
rcll
xchg
xchg
push
or
mov
testb
dec
pushf
add
movsl
arpl
lret
or
test
inc
mov
cwtl
fs
cltd
enter
orb
mov
ss
and
mov
sbb
inc
in
inc
imul
jle
stos
push
xchg
add
adc
and
and
sbb
sbb
out
add
imul
notl
add
and
pop
mov
test
arpl
cwtl
jmp
pop
repnz
xor
arpl
hlt
daa
pop
pop
pop
out
xchg
mov
push
aad
adc
iret
push
cmc
mov
xchg
repnz
movsb
pop
dec
pop
sbb
dec
js
dec
lods
in
adc
rcrl
sbb
fnstenv
xchg
and
shrb
lods
mov
xor
jne
lods
push
xor
enter
inc
repz
rcl
shll
and
sub
sub
pushf
ljmp
push
cld
jmp
in
es
fsubrl
lahf
mov
pop
mov
xor
out
sub
ret
lcall
xor
cmp
clc
lret
inc
xor
dec
fisttpll
mov
testb
pop
mov
stos
dec
xor
int
jb
mov
jno
xchg
push
and
pop
pop
dec
icebp
mulb
mov
aas
push
jns
dec
scas
mov
popa
in
stc
js
xchg
mov
dec
mov
fdivr
add
cmp
or
dec
jl
inc
out
inc
outsl
daa
popa
dec
insl
lret
int3
imul
pop
orb
test
xor
dec
out
dec
es
adc
mov
outsb
dec
loop
sbb
test
cmp
sti
sbb
dec
outsb
cmp
mov
cltd
call
popa
dec
mov
sahf
cmp
jp
jbe
add
or
out
jbe
shrl
jnp
or
pop
fisubl
xor
and
dec
das
ret
stos
inc
mov
loopne
mov
cs
in
cli
clc
jp
cmp
dec
or
xchg
nop
daa
xor
inc
ljmp
mov
push
cmpl
pusha
inc
aad
cld
in
xor
inc
jo
fists
xchg
sti
cwtl
mov
jecxz
inc
lds
inc
fisttps
jns
andb
lahf
les
aam
add
data16
lods
mov
adc
test
rcrl
popa
cmc
mov
mov
cs
jge
xorb
addl
out
add
lock
out
aam
sbb
stos
daa
roll
push
stc
mov
jbe
je
sbbb
mov
add
cwtl
movsl
into
and
dec
add
push
loop
fwait
imul
push
push
and
fimull
fs
cmp
pop
push
imul
pop
add
pusha
and
inc
pop
dec
inc
loope
int3
pop
xchg
fstpt
test
push
ds
xchg
sub
movsb
or
fs
dec
push
lret
xchg
cmp
xchg
das
adc
mov
cld
or
adc
repnz
outsl
pop
lret
add
pop
addb
mov
pop
mov
mov
movsl
xor
xchg
add
pop
jle
jae
in
cmp
inc
pop
inc
rcrb
mov
nop
xchg
loopne,pt
push
dec
xlat
sub
lret
mov
pop
das
pop
pop
scas
lds
cmpsb
out
pop
pop
cmpsb
in
mov
loope
push
mov
roll
test
into
xchg
js
dec
scas
aaa
push
out
out
sbb
daa
mov
fimull
int3
mov
fwait
dec
pop
adc
pop
pop
stos
or
scas
inc
dec
mov
mov
cmp
insb
add
shlb
xor
in
push
or
fsub
sbb
adc
xchg
jnp
xchg
inc
aaa
pushf
inc
fsubrl
fsub
jae
inc
jge
inc
cmpl
popa
sarl
xor
dec
repnz
pusha
jne
push
xchg
or
xor
mov
mov
push
repnz
sub
cmpsl
or
adcl
ja
jbe
loope
push
data16
cmpsl
fstpl
je
cmp
sbb
pop
xchg
or
cltd
fstps
push
clc
push
negl
sub
jmp
cltd
test
jg
push
xchg
pop
pop
mov
xor
lcall
mov
mov
sbbl
sahf
rclb
sbb
and
sbb
lret
clc
gs
shll
sub
loope
xor
inc
push
stos
mov
dec
push
cmp
sub
and
push
and
fistpll
pop
sahf
xchg
push
and
lret
pop
int3
cmpsb
clc
add
aas
xchg
ss
cmp
and
stos
jle
pop
fiaddl
orl
jb
iret
lahf
inc
pop
shll
lcall
inc
adc
push
outsl
push
aas
sarl
imul
jp
jo
and
daa
orl
xor
or
insl
ss
mov
scas
jns
adc
stos
jb
lret
popa
sti
inc
xor
sbb
scas
jecxz
inc
neg
mov
out
les
jle
mov
pop
js
jbe
insl
movsl
loopne
dec
mov
sbb
lea
fistpl
dec
cwtl
and
mov
enter
cld
mov
testl
mov
ret
cmpsb
xchg
testb
jecxz
mov
stos
mov
lea
push
dec
lds
pop
lock
repz
rcll
mov
mov
int3
cli
jne
xchg
out
pop
aam
shll
jecxz
fmuls
ja
fisubrs
inc
nop
or
sbb
into
xchg
push
dec
imul
sub
mov
mov
sbb
leave
xlat
push
stc
jp
into
pop
and
push
cmp
push
dec
rol
pop
popf
inc
mov
loope
dec
into
in
inc
xor
sbb
push
inc
mov
repz
cmp
push
out
shl
gs
pop
bound
pop
xor
clc
and
mov
insb
push
dec
das
mov
js
movsb
mov
jg
ds
popf
loopne
mov
or
add
into
or
out
adc
repnz
inc
loop
ja
sub
xor
cmpb
push
js
into
inc
data16
sbb
xchg
mov
cwtl
mov
or
sahf
out
pop
sahf
push
test
pop
cs
adc
popa
outsb
sahf
out
cmp
cmp
jne
xlat
loopne
mov
mov
inc
push
pop
pop
fstps
dec
inc
mov
sbb
pop
fldt
imul
or
insb
inc
cmp
fstpt
subb
rcr
pop
ret
adc
stos
ja
js
test
inc
mov
arpl
sub
xchg
popf
jecxz
cmp
inc
adc
popa
jbe
ret
xor
and
jge
push
jle
sarl
mov
pop
dec
pop
sub
dec
pop
mov
mov
push
add
push
and
rclb
cmpsb
xor
or
add
jmp
push
inc
dec
pop
lret
sar
xchg
dec
imul
enter
pop
je
inc
addr16
stos
outsb
fisubrs
cmp
mov
vminps
push
imul
sub
push
push
repz
lods
xchg
xor
or
cmc
adc
adc
hlt
cmp
fwait
xchg
dec
mov
xchg
add
fldt
xorl
push
pusha
push
ja
pop
mov
pop
out
adc
loop
roll
in
cs
dec
sbb
push
fwait
pusha
arpl
gs
adc
das
iret
mov
dec
into
sbbl
inc
xlat
daa
out
adc
mov
in
bound
scas
jl
mov
dec
das
xchg
lea
cld
inc
in
dec
lcall
pop
pusha
mov
shrb
mov
or
stc
outsl
push
ja
aad
jnp
push
fidivs
imul
call
es
lock
dec
popa
sbb
pop
loope
inc
lret
jmp
int3
mov
in
outsl
das
mov
cld
mov
ret
xchg
add
aas
test
mov
adc
roll
jns
or
repnz
inc
int
daa
test
das
pop
or
leave
push
xor
xor
lods
pop
xor
out
sub
and
xor
add
jge
add
adc
sub
fidivl
add
pop
lods
inc
or
clc
sarl
xchg
shll
sub
das
pop
ljmp
or
cmp
in
push
movsb
lret
inc
adc
mov
cmc
lret
cmpsl
call
cld
and
mov
xchg
sbb
orb
loopne
jge
imul
inc
inc
jb
sub
push
sbb
shll
sbb
ja
movsl
fsts
and
imul
jno
dec
movsb
jl
add
cltd
jne
and
xor
popa
pop
sub
ds
jg
int3
and
cmp
arpl
inc
pusha
loop
lret
push
fmull
xor
imul
testl
pop
stos
mov
das
mov
mov
mov
mov
xchg
inc
int
imul
mov
int
movsb
lea
adc
mov
adc
cli
xchg
jbe
rorl
pop
cmpsl
imul
xor
ljmp
lahf
ror
fs
stos
push
sub
adc
in
or
xor
sub
add
decb
dec
orb
inc
jnp
xchg
cwtl
cmpsb
in
inc
pop
sub
cmc
leave
loope
pop
inc
adc
pusha
test
push
aaa
sbb
inc
jo
mov
pop
loope
add
or
outsl
mov
inc
jae
sbb
mov
adc
jle
cld
not
jae
add
movsl
fisttpll
cmc
hlt
xor
lahf
test
adc
jno
icebp
sub
pop
sbbl
mov
mov
inc
mov
cmp
add
mov
lret
add
jbe
pop
push
jo
sub
jp
cmp
jb
mov
mov
aam
pop
xchg
jmp
mov
push
pushf
dec
in
push
sub
or
push
inc
fs
addr16
push
gs
test
mov
cmp
in
test
push
push
pusha
adc
or
fdivrs
or
ds
movsb
inc
mov
std
gs
dec
lea
mov
inc
fnstsw
movsb
xchg
xor
adc
mov
jne
push
add
cmpsl
dec
pop
sbb
push
push
xchg
mov
hlt
test
push
iret
add
add
rorl
sub
mov
faddl
loope
ja
inc
dec
movsb
into
xchg
sub
mov
jns
inc
xor
jle
add
xor
out
and
push
test
adc
scas
repnz
mov
scas
repnz
inc
aaa
xlat
ds
out
aam
jge
and
mov
lret
out
je
ss
push
outsb
xor
adc
cmp
outsl
push
fcmovbe
out
popa
mov
xchg
and
fnstcw
mov
iret
ss
mov
repz
adc
pop
ret
jecxz
scas
mov
sbb
mov
mov
sub
imul
andl
shlb
lea
dec
add
call
fadds
dec
xchg
cmpb
pop
arpl
adc
sti
add
mov
push
je
lock
pushf
mov
lahf
je
or
jp
fsubrl
ficoml
mov
subl
aam
into
lods
pop
lret
loop
jmp
cli
stc
aad
lcall
adc
stos
inc
inc
cmpsl
dec
dec
iret
aas
add
fildll
jge
outsb
and
and
and
xor
mov
jl
jmp
sub
or
std
cmc
dec
jb
pop
mov
push
mov
jns
mov
or
add
loop
or
gs
xchg
jns
xchg
xchg
or
into
adc
into
fdivs
jle
xchg
mov
dec
mov
mov
sub
or
adc
lea
xor
fcompl
mov
mov
stc
mov
mov
in
adc
out
loop
mov
inc
movsb
ret
sahf
out
dec
sti
jmp
xchg
ret
fisubrl
and
mov
xchg
pop
cli
imull
xchg
insl
inc
push
mov
lock
dec
xchg
fdivr
lret
pop
add
jbe
andb
call
mov
lret
mov
xor
out
into
lods
pop
fadd
push
mov
adc
mov
dec
loope
pushf
std
jnp
lods
push
cmc
out
sub
repz
sarb
inc
adc
inc
inc
mov
cltd
and
sbb
sbb
add
mov
icebp
or
outsl
icebp
movsb
or
out
push
sahf
mov
cmp
jbe
pop
out
notb
xor
cmp
xor
sbb
xorb
cli
xor
idivl
sbb
ret
inc
les
push
fidivs
pop
movsb
popf
call
addr16
insl
dec
push
adc
icebp
repnz
push
nop
loopne
cmp
shrb
or
out
sub
cmpsb
cmp
ret
push
add
mov
enter
pop
push
js
ret
mov
fwait
or
adc
jne
xchg
jae
cmp
push
adc
pop
xor
out
and
dec
ss
jle
stos
pop
ds
aaa
pop
pop
push
jne
icebp
js
ljmp
dec
mov
or
and
js
orb
mov
and
sbb
jmp
mov
ror
fdivrs
les
arpl
out
inc
jnp
push
mov
sbb
insl
fstps
xchg
push
add
jno
jne
shl
out
cmp
daa
pop
jbe
movsb
push
pop
test
ja
fbld
push
cmp
daa
je
stos
ret
or
and
stos
ret
push
push
mov
jo
cwtl
adc
imul
es
mov
push
mov
icebp
adc
cmp
movsb
push
das
ja
fimuls
and
add
addl
push
sahf
lods
loop
and
adc
stos
hlt
mov
repz
insl
and
cmp
clc
arpl
stos
cmp
dec
push
js
movb
or
aaa
gs
inc
mov
xlat
mov
das
mov
xor
jmp
mov
mov
sbb
adc
pop
or
push
loope
in
mov
push
mov
xor
cmp
lret
out
cs
nop
pushf
sbb
xor
inc
or
mov
adc
cld
mov
lods
or
xor
cltd
gs
sbb
or
adc
xor
add
or
and
mov
xchg
scas
aas
add
push
dec
popf
cmpsb
clc
cli
mov
mov
cmp
jp
aaa
scas
mov
adc
stc
scas
mov
and
call
sbb
mov
hlt
cmp
pop
cmp
inc
mov
fistpll
ret
neg
test
mov
popa
or
mov
inc
je
iret
rcr
inc
sub
mov
pop
dec
adc
jmp
push
stos
adc
xor
jae
dec
jo
outsl
pop
aad
popf
das
or
or
ficoml
dec
cmc
pop
fnstsw
dec
and
repz
data16
outsl
and
das
jp
inc
icebp
inc
incb
leave
lds
in
pop
ljmp
and
xor
into
sti
jbe
outsl
stc
mov
icebp
adc
sbb
out
leave
int3
inc
loopne
pop
decl
popf
imul
xor
sub
mov
cmpsl
pop
ficoms
adc
nop
mov
mov
push
test
sub
pusha
sbb
pop
in
fstp
shrb
mov
mov
aad
ficoms
cmp
lods
ja
cmp
and
ret
lret
push
mov
imul
or
mov
lea
add
jge
psadbw
add
or
pop
rolb
out
fs
mov
or
inc
pop
add
ds
or
mov
lahf
and
xor
gs
xchg
mov
ret
xchg
cltd
shll
pusha
mov
xchg
cmc
cmp
inc
push
out
in
jne
gs
jl
andl
pop
mov
pop
or
mov
aad
lahf
mov
or
test
aas
rorl
pop
aaa
jmp
lods
jnp
pop
lods
shlb
cltd
inc
ror
divb
sub
xchg
in
iret
or
jno
push
mov
icebp
add
xchg
scas
popa
jns
mov
cmc
add
xchg
jns
mov
jg
test
and
inc
ret
fdivp
jbe
pop
leave
xchg
sbb
js
jge
insl
pushf
mov
push
fsin
mov
addr16
test
repnz
enter
add
inc
pop
push
dec
icebp
popl
in
fmuls
dec
cmp
cmp
data16
cli
sub
mov
cmp
adc
enter
mov
int
aas
leave
clc
add
shrb
lcall
cli
loop
push
ret
ja
inc
mov
ret
jnp
int3
cmp
xor
dec
dec
fs
jne
cli
and
and
aam
jae
imul
push
jne
mov
inc
cmc
or
cmp
daa
push
into
stc
cld
fs
lea
inc
lock
repz
std
lret
scas
xor
loopne
cwtl
mov
or
jb
in
imul
rorb
mov
sub
les
cmc
add
mov
loopne
and
jl
leave
sbb
int
pop
cmpsl
dec
hlt
and
add
push
pushf
clc
fnstsw
lahf
fcoms
ljmp
xchg
inc
or
add
cmp
scas
sub
xlat
mov
inc
test
mov
and
jo
adc
es
xor
inc
cld
xchg
inc
out
cmpl
mov
scas
cltd
clc
dec
xor
ja
fwait
mov
mov
lods
or
push
outsl
pop
dec
push
mov
inc
repz
aas
insl
insb
xlat
test
sub
push
sbb
jns
loope
sahf
mov
lea
test
xchg
gs
lods
mov
sub
int3
jecxz
das
clc
iret
pop
jo
mov
add
dec
icebp
jg
daa
popa
gs
mov
or
pushf
adc
enter
movsb
xchg
cmp
sub
faddl
jb
mov
or
dec
mov
mov
xlat
mov
xchg
gs
push
aaa
fmul
jecxz
pop
into
mov
outsl
mov
jno
pop
addr16
fistl
jle
sbb
xchg
nop
leave
mov
rcll
adc
jecxz
ret
ds
xor
jno
ficoml
jae
mov
jne
mov
fdivrl
inc
int3
cli
mov
es
mov
mov
inc
sbb
jg
push
stc
insb
pop
fdiv
cmp
pop
mov
jne
mov
pushf
xchg
mov
jl
in
je
fistl
cmpsl
mov
sub
push
or
mov
loop
cmc
mov
push
lock
mov
leave
mov
dec
cmp
ret
mov
sub
rcr
repnz
stos
inc
cs
push
fsub
lds
fisubl
xchg
imul
or
mov
enter
inc
push
adc
or
call
xor
mov
lea
gs
and
test
pop
dec
test
cli
loopne
push
dec
push
adc
out
cmpsl
and
and
hlt
jg
pusha
sub
mov
sbb
xorl
adc
std
cmp
lret
inc
mov
and
push
sbb
or
movb
pop
or
insb
fidivl
or
shll
mov
pusha
pop
pop
jmp
cmp
xor
ds
or
adc
pop
jmp
insb
cmp
aad
xchg
fnstenv
sbb
cmc
fcoms
leave
ret
add
into
into
pop
call
lret
rorl
add
sub
ret
iret
mov
mov
fsubr
mov
sub
xor
lds
sbb
sbb
adc
rclb
in
popl
jg
lock
lds
lods
adc
push
pop
sbb
leave
jp
mov
test
cmpb
push
rcrl
cmp
inc
jno
sahf
push
mov
fsubs
mov
loop
or
and
fldenv
adc
cli
daa
mov
adc
adc
imul
test
dec
sub
dec
out
aam
mov
data16
mov
out
repz
ficomps
subb
push
mov
in
adc
dec
es
sub
adc
or
dec
ret
pop
hlt
and
mov
sub
pop
inc
ja
xlat
sbb
cmp
add
jecxz
xchg
mov
imul
ds
int3
sahf
cmpsb
sub
pop
outsl
jecxz
jmp
adc
xchg
lods
jbe
push
adc
sub
lods
or
orb
imul
mov
icebp
push
scas
cli
sbb
cli
test
mov
mov
cli
push
rolb
xor
cmc
js
out
jge
jne
repnz
daa
out
dec
shlb
cmp
bound
jmp
fs
cmp
jb
adc
dec
cltd
jae
mul
cmp
out
test
pop
lahf
outsl
lds
mov
mov
push
in
addl
push
cmp
stos
out
pop
ret
bound
mov
and
leave
scas
mov
in
aaa
ds
inc
cmp
inc
or
mov
sbb
mov
out
subl
pop
ss
mov
cli
sahf
adc
call
lahf
cmpl
repnz
leave
add
mov
andb
cmpsl
iret
or
movsl
outsb
push
jbe
in
xchg
dec
push
clc
out
iret
idivb
mov
mov
sub
dec
fs
push
mov
stc
add
adc
lock
and
adc
dec
push
jns
shrl
push
mov
sbb
or
lahf
ljmp
fst
adc
xchg
repnz
pop
jg
stos
lret
subl
cmp
push
mov
mov
pop
data16
fisubl
cmp
dec
inc
mov
bound
shrb
outsb
inc
aas
insb
mov
sahf
add
sub
and
cltd
xchg
dec
lods
fcmovnbe
mov
sbb
dec
add
push
rcll
inc
aam
mov
test
xor
jle,pt
ret
mov
xchg
xchg
sahf
je
push
mov
popa
clc
test
movsb
xchg
cmpsb
lcall
sub
pop
fstpl
mov
cli
push
push
dec
out
inc
jnp
mov
les
mov
cwtl
cmp
jbe
mov
popa
add
movsb
inc
inc
mov
dec
push
stos
jg
adc
jge
popf
daa
sub
cwtl
sbb
jg
pop
mov
dec
mov
xchg
lock
mov
cs
pop
push
sub
mov
dec
jb
mov
mov
loope
add
push
fstpt
daa
push
push
out
pop
jge
sub
inc
add
add
add
add
fninit
xchg
loop,pn
jne
fwait
imul
je
push
in
mov
ror
mov
int3
dec
out
adc
pop
lret
mov
ret
sub
imul
xchg
pop
je
jmp
or
inc
pushl
cld
mov
loop
movsb
jle
mov
outsb
xchg
and
inc
pop
cmp
sub
pop
aas
mov
test
xor
shl
mov
xor
test
cmp
aaa
jp
call
dec
or
cmp
outsb
inc
es
fdivrl
pusha
mov
repnz
lods
jmp
mov
addr16
mov
mov
testb
shll
popf
jo
inc
aas
jg
mov
pop
and
loopne
push
push
sub
stos
ja
and
repnz
ja
sub
inc
push
pop
and
lods
movsb
xor
je
and
fwait
mov
mov
repnz
aaa
xchg
fsubrl
pop
test
pop
imulb
aaa
mov
or
ja
loop
push
int3
ljmp
stos
jg
or
fidivrs
push
and
scas
and
push
or
pop
lds
out
mov
mov
add
jnp
mov
dec
pop
sub
xchg
jge
test
cltd
mov
aaa
and
into
jmp
movsl
icebp
shlb
aad
scas
je
sub
jmp
test
sti
xorb
hlt
clc
das
jg
bound
test
lock
or
mov
lahf
or
mov
movsl
lret
jno
pop
scas
xchg
push
mov
inc
cmp
std
jno
int3
cs
scas
in
cli
movsb
nop
sbb
or
scas
movsl
inc
pushf
lods
mov
les
and
insl
bound
clc
pop
cmp
sbb
sbb
push
mov
in
inc
inc
out
loop
icebp
mov
pop
in
mov
xchg
pusha
mov
or
sahf
add
imul
lea
clc
xchg
sbb
sub
xchg
and
mov
je
test
inc
xor
mov
jns
xor
cmpsb
mov
mov
push
jns
xor
out
inc
jae
lods
pop
enter
mov
insl
mov
inc
cmp
fwait
movsl
in
dec
test
data16
xchg
mov
inc
mov
es
xchg
mov
or
out
daa
jp
stc
lcall
sbb
mov
sub
dec
insl
xchg
pop
jns
nop
fimull
std
adc
inc
inc
xor
cltd
cmc
in
or
mov
adc
cmpb
inc
jp
xor
or
in
outsb
lods
mov
xchg
sub
xchg
jo
in
jp
cwtl
fadd
mov
rorl
bound
add
jmp
push
gs
add
popa
sbb
mov
cli
sbb
arpl
leave
mov
xor
adc
ret
das
add
or
loopne
cwtl
in
mov
mov
fidivl
mov
pop
addr16
outsb
and
and
in
sti
jl
and
push
sarl
clc
xor
add
mov
push
or
mov
gs
out
mov
out
sar
mov
ds
int
imul
int
xor
sbb
mov
xchg
push
jmp
sub
stos
add
cmc
mov
sub
add
daa
inc
mov
out
push
outsb
xchg
in
mov
in
sub
ja
cltd
ja
das
fcmovb
pop
mov
push
mov
daa
sahf
sbb
arpl
and
push
mov
inc
lret
imul
cltd
sar
enter
or
xor
clc
daa
aam
mov
call
pop
hlt
iret
sub
jb
out
inc
xchg
cmp
mov
push
movsb
stos
sti
mov
les
and
in
inc
dec
push
dec
jne
dec
ss
lret
and
dec
and
sbb
loop
test
adcl
pop
jae
sub
add
ret
inc
mov
jle
or
xchg
xor
mov
outsb
aad
mov
mov
into
in
nop
lret
xchg
jle
push
in
mov
jne
mov
mov
bound
mov
fwait
jmp
dec
sub
mov
rorb
rorl
fsubrp
sub
inc
mov
jns
cmc
repnz
cmp
add
pmulhw
sarb
daa
aaa
mov
xchg
imul
cwtl
pop
call
lock
lock
cmp
xor
or
inc
sbb
inc
je
andb
push
addr16
sahf
mov
insb
jbe
adc
clc
inc
mov
shrb
insb
cmp
lretw
inc
inc
int3
dec
push
mov
jnp
cmp
mov
shrb
and
xchg
ror
cs
sbb
mov
xchg
popf
and
lods
in
inc
xor
hlt
bswap
popf
mov
mov
pop
jmp
xchg
sub
rolb
pushl
out
xchg
dec
mul
inc
dec
dec
sub
outsb
lods
jno
cwtl
and
dec
jb
jo
scas
mov
push
fwait
mov
lret
cli
dec
add
mov
mov
es
ja
aas
cmpsb
or
sub
adc
setbe
jae
out
fs
outsl
out
push
jmp
and
pop
mov
repnz
popa
pop
xchg
ss
jp
pop
xchg
je
les
sbb
mov
fwait
stc
stos
xchg
sub
insl
xchg
rcll
jp
sub
test
pop
or
psubq
popa
xor
sbb
addl
mov
jo
addb
testl
into
push
and
repnz
sbb
or
push
leave
xor
shl
sub
adc
test
mov
lods
lods
scas
mov
mull
xchg
mov
xor
fsubrp
lds
mov
lret
movsb
fnstsw
cmp
mov
jg
jp
bound
movb
push
pop
fnstenv
add
pop
aam
loopne
aad
pop
cmpsb
fldenv
popa
in
ficoms
mov
pop
xor
mov
lds
sub
or
inc
jecxz
pop
jle
cmp
addr16
in
mov
out
stc
nop
cmp
jecxz
pusha
inc
int
out
jbe
popa
mov
add
insb
jbe
lods
push
push
push
xor
xlat
mov
shlb
adc
pushf
out
and
push
push
ds
sbb
xchg
insl
xor
int3
sbb
cli
cmc
ret
divb
popf
lahf
inc
push
cmp
jo
add
mov
adc
shl
cmp
movsb
or
sub
leave
fistps
xchg
loopne
xchg
cmp
inc
mov
in
push
iret
in
loope
popf
xlat
and
xor
xor
mov
pop
movsb
pop
lret
sahf
cmp
xor
lods
xor
cmpsb
out
mov
cmp
mov
pop
xchg
and
and
jl
cmpsb
lds
mov
jmp
pop
aad
sbb
pop
adc
fsubp
mov
mov
nop
inc
lods
cltd
adc
xor
stos
pop
testb
stos
cmc
push
push
push
nopl
xchg
and
movsl
fisubrs
test
icebp
mov
xor
ret
push
xlat
xor
aas
inc
mov
and
pop
mov
sbb
mov
add
clc
sbb
das
mov
out
clc
rolb
roll
bound
jmp
aad
clc
divb
pop
ds
cld
jne
arpl
call
nop
sti
scas
add
sbb
imul
cmp
pop
cmpsl
mov
jnp
add
mov
mov
mov
xchg
xor
les
jnp
jg
jp
sub
fisubl
jp
fwait
push
adcl
jge
sub
add
pushl
mov
or
jo
in
pop
imul
mov
data16
push
pmullw
jmp
roll
insl
scas
add
sub
or
lds
adc
test
movsl
jne
ret
pop
mov
pop
inc
imul
movb
psrlw
mov
lock
leave
clc
orl
test
or
push
push
imul
ret
adc
cmpsl
mov
xor
xchg
cmp
cmc
pop
lahf
add
and
outsb
test
stos
and
mov
inc
lods
or
lcall
or
cli
inc
sub
cmp
xchg
jp
repz
rcl
jne
and
je
mov
jo
cmp
bound
in
dec
test
cmp
js
xor
pop
arpl
xchg
pop
rorb
push
orb
push
call
cmp
push
mov
scas
xchg
cmc
jp
add
roll
pop
mov
inc
in
lcall
out
shlb
es
mov
xchg
aam
pop
aaa
xlat
imul
aaa
and
icebp
enter
lock
and
fwait
add
aas
lods
xchg
aas
call
mov
sbb
mov
std
inc
inc
push
fisttpl
repz
mov
sub
fstl
push
adc
push
or
int3
lds
sbb
add
pop
insl
inc
jns
mov
add
add
jecxz
jmp
les
push
dec
cmp
fildl
es
mov
lahf
jl
jnp
lcall
pushf
xchg
mov
jo
fisubs
cs
push
fdivs
mov
test
leave
or
sub
xchg
cmpsb
int3
filds
jecxz
pop
scas
lea
push
jg
popa
pop
sahf
jl
mov
into
mov
sbb
adc
aaa
sub
xor
jne
xor
rcrl
scas
dec
rclb
divl
cwtl
jl
jbe
movsl
adc
lahf
lock
sub
pop
mov
fbstp
ljmp
or
shrb
lret
mov
mov
or
jo
xor
mov
andb
int
mov
lcall
sbb
inc
nop
sub
xor
cmp
cmpsb
movsl
jae
stos
jg
mov
jbe
cmp
add
int3
pop
mov
mov
push
stos
cld
cmp
xor
push
pop
and
and
inc
jo
repnz
pop
inc
xor
popf
addr16
sbb
inc
xchg
lods
sub
mov
or
mov
out
movups
add
dec
out
dec
mov
mov
push
mov
jbe
mov
add
lahf
jne
cmp
mov
and
jmp
xor
jl
push
into
inc
scas
mov
fstpt
or
mov
mov
pop
push
out
in
nop
inc
push
add
push
sbb
push
sub
gs
xor
fldt
cmc
test
das
xchg
push
dec
jne
sub
scas
fcomps
ja
or
mov
notl
jge
movsb
inc
cmc
cli
mov
dec
fwait
aaa
or
mov
dec
jae
loope
mov
mov
aaa
pushf
or
popf
pusha
es
jns
push
sub
icebp
in
xchg
test
call
pop
pop
push
mov
nop
loop
shl
sub
inc
sub
pop
fcmovnu
or
inc
cmp
or
pop
cmp
pop
adc
sub
pop
pop
arpl
ja
pop
xchg
test
leave
ret
jl
rcr
out
add
call
inc
jno
out
fadds
and
adcl
pop
cli
das
add
sub
sarb
bound
mov
sarl
stos
ljmp
sbb
addr16
shlb
add
xor
push
cmp
or
into
insl
lret
dec
aas
imul
scas
loope
stos
int3
add
sub
int3
dec
sub
fcoms
rcl
popa
jmp
loope
cmp
out
mov
lcall
aaa
es
popa
loop
xor
cmp
out
insb
dec
stos
in
or
or
push
push
dec
xchg
int3
sbb
push
and
lret
repnz
sbb
mov
repz
aad
pushf
lahf
fisttpll
out
mov
test
inc
out
pop
inc
dec
pusha
stc
lret
push
outsb
in
test
cs
aad
icebp
js
dec
rcll
sbb
push
xchg
sti
dec
call
or
imul
xchg
xor
dec
jnp
jmp
push
cmc
push
push
cs
xchg
and
mov
movsl
and
mov
scas
test
jo
xchg
cmp
jbe
adc
cli
cmp
in
rclb
scas
sar
test
stos
into
dec
rolb
gs
fwait
inc
loopne
jl
push
inc
jle
jno
pop
push
xchg
cmpsl
rclb
inc
pusha
test
stc
aad
sub
das
stos
and
fcoml
repnz
cmp
pop
test
adc
addr16
pop
into
pop
jo
movsl
xor
ds
or
pop
xchg
pop
lods
test
push
rcrl
sub
daa
pop
mov
ss
hlt
fildl
mov
lret
cmp
inc
or
pop
push
xchg
loope
dec
mov
das
aas
push
outsb
not
hlt
pop
imul
cmp
repnz
push
outsl
push
push
stc
adc
in
xor
aam
xor
std
insl
inc
xchg
adc
test
mov
or
stc
push
cmp
shll
xchg
lea
in
push
outsb
cmp
sti
push
add
inc
mov
dec
add
imul
push
add
fists
xor
lock
jle
xchg
inc
int3
pop
test
out
lcall
lods
push
cld
adc
jecxz
xchg
fistl
xlat
pop
movsb
scas
sbb
sahf
add
mov
enter
inc
and
out
aam
ljmp
mov
mov
jbe
mov
add
scas
out
aaa
std
loop
mov
or
aam
jge
dec
or
adc
test
fdivrp
add
adc
test
jne
outsl
push
push
mov
add
sub
mov
mov
in
in
in
dec
adc
push
xor
sbb
sub
and
sbb
movsb
sbb
fistps
lea
iret
arpl
nop
push
xlat
mov
fisubl
mov
inc
pop
movsb
mov
push
scas
sbb
add
fldl
jp
mov
sbb
jne
call
jae
pop
add
sub
cltd
pop
je
inc
jle
mov
lods
inc
sub
test
frstor
lock
dec
dec
not
dec
scas
mov
mov
mov
xchg
clc
xchg
icebp
cmp
outsb
xor
and
mov
sub
mov
jg
testl
stos
mov
cli
jae
scas
test
jge
or
js
dec
sub
fs
das
xlat
stc
mov
cltd
sbb
outsl
ss
sbb
mov
mov
xor
adc
mov
sub
mov
fistpll
jne
fisttpll
stos
xchg
leave
sub
rorl
cs
js
jle
notl
and
inc
scas
in
shll
leave
lods
jecxz
stos
mov
insl
sarb
orb
cli
pusha
lods
adc
mov
push
add
push
aas
pop
xor
popf
ret
mov
pushf
shll
mov
lea
mov
jge
icebp
into
dec
sbb
fwait
inc
ret
jge
repnz
pop
xchg
pop
std
and
std
pop
sub
sarb
xchg
and
sahf
loopne
mov
mov
in
adc
mov
stos
sub
outsb
dec
scas
aas
adc
int
add
adc
clc
adc
and
dec
or
aad
aam
iret
push
inc
in
pop
fwait
pop
inc
xor
loop
imul
scas
sbb
mov
inc
shll
inc
or
mov
sbb
mov
mov
adc
adc
icebp
outsb
test
scas
sar
out
pop
mov
insb
cmp
mov
arpl
bound
add
pushf
cmp
dec
push
pop
xchg
rolb
xchg
insb
in
push
pushf
inc
cmp
outsl
xor
mov
out
xchg
jecxz
leave
imul
and
sbb
daa
fidivl
fcomps
mov
jg
sarb
mov
push
fstp
inc
adc
push
cmp
mov
add
notl
add
or
insl
lcall
leave
cld
or
test
lds
jb
out
arpl
bnd
daa
hlt
lds
sar
mov
imul
jno
inc
ja
dec
jecxz
push
pop
notl
das
mov
and
rolb
sub
call
mov
or
fldcw
into
and
inc
jnp
les
jno
inc
pop
mov
adc
pushf
sub
jbe
sbb
lods
fcomi
mov
popa
jl
push
gs
sub
inc
jne
pop
in
bound
leave
or
adc
sbb
ja
sbb
cmp
xchg
mov
cmpsl
imul
scas
jp
push
call
shrb
insl
out
xchg
add
fstl
mov
loop
jge
out
lea
pop
das
not
mov
lahf
paddusb
dec
sub
gs
mov
mov
add
lock
or
push
push
scas
mov
mov
sbb
dec
cli
mov
out
andb
inc
xor
xchg
mov
xor
cmp
pop
dec
aad
dec
ror
mov
cs
imul
decl
sub
mov
out
or
cmp
mov
xchg
xor
pop
xor
and
pop
fcoms
lock
sub
pushf
sbb
insb
sbb
mov
xchg
cmp
push
and
sub
dec
repz
mov
je
xor
sub
adc
mov
ss
leave
mov
jl
xchg
outsb
ret
cltd
sbb
fadds
imul
adc
or
fmul
or
cwtl
pushf
dec
mov
pop
push
lods
repz
outsb
movsb
inc
sub
cmp
cli
das
mov
jp
pmaxsw
daa
mov
test
shrl
and
sub
cmpsl
fs
push
lret
aad
test
cmpsl
xchg
popf
jp
cli
les
inc
and
jbe
mov
dec
xchg
sub
rcrl
andb
or
cld
mov
add
adcl
les
mov
push
mov
fcomps
ljmp
push
adc
lods
xchg
ret
punpckldq
pop
inc
jb
jns
clc
in
inc
stc
je,pn
mov
inc
jmp
mov
mov
test
jne
decl
pop
push
mov
sbb
jp
daa
mov
nop
mov
adc
push
ljmp
push
mov
clc
mov
lret
push
sbb
sbb
sbb
and
pop
jno
data16
jno
inc
and
js
test
je
lea
jae
mov
sbb
ljmp
nop
push
sbb
lods
push
add
mov
addr16
xor
and
xchg
aas
mov
push
mov
xchg
push
pop
jno
dec
fwait
loop
cmp
imul
cli
xor
mov
sbb
sbb
lock
scas
in
sub
or
hlt
or
xor
mov
pop
mov
inc
pop
pop
sti
cmpsl
sbb
adc
ljmp
cmp
scas
mull
and
push
shl
jecxz
movsb
jae
mov
in
es
inc
mov
ja
cli
inc
jge
mov
mov
arpl
adc
ljmp
cmc
out
xchg
and
out
lahf
mov
test
mov
jmp
jecxz
cmp
pushf
leave
fisttpll
jne
xchg
cmp
adc
cmp
mov
ret
call
mov
decl
outsb
xchg
inc
bts
pop
or
push
lcall
repnz
fwait
xchg
push
outsl
mov
imull
je
sbb
pop
xchg
sbb
les
ja
cmpsb
js
push
cwtl
sub
xor
mov
mov
mov
cmp
or
pop
fdivrl
shlb
gs
movsb
pop
daa
or
inc
mov
mov
jmp
cli
xchg
dec
ja
xchg
push
ficompl
sbb
mov
adc
nop
scas
popf
xchg
test
aas
insb
lret
lea
aam
add
ret
dec
andb
mov
loope
testl
sub
pop
cmp
or
fwait
sub
cld
add
xchg
cltd
dec
arpl
movsb
gs
add
and
jmp
ret
xchg
mull
dec
or
arpl
push
es
bound
sub
popf
out
pop
and
cld
ret
rcrb
addr16
mov
in
push
mov
xchg
mov
mov
mov
pushf
lret
sbb
xor
jb
lods
cmp
cltd
repnz
mov
adc
mov
mov
push
inc
sub
inc
push
scas
dec
cltd
fwait
pop
add
add
jl
aad
sahf
pushf
or
lods
aas
popa
movsl
clc
rorl
stc
mov
fwait
test
repz
push
sub
xchg
mov
fidivl
inc
xor
cmpsl
loop
aam
fdivrs
insb
movswl
jl
test
bound
add
stos
xor
sbb
xchg
rolb
adc
je
mull
stc
bound
out
or
inc
sahf
or
and
cld
inc
test
push
pusha
inc
fistl
data16
daa
cmc
sahf
dec
dec
lahf
pop
jge
fidivrl
sarb
aad
lcall
mov
icebp
jge
hlt
jecxz
xchg
dec
sbbl
mov
sbb
mov
cmp
je
aas
inc
mov
pop
or
sub
out
or
in
xor
mov
jmp
lret
lods
jno
inc
out
outsb
push
mov
cmp
sub
adc
repnz
fimull
inc
jge,pt
fcomip
imul
js
out
xor
or
test
out
popa
sbb
pop
sbbb
mov
outsl
addr16
ss
int3
xchg
and
xlat
mov
mov
or
cmc
lea
rcrb
mov
testb
subb
sbb
loopne
ds
int
arpl
out
dec
jg
lret
jge
dec
inc
push
int3
leave
xchg
sub
xor
jno
in
js
push
adc
mov
addl
dec
dec
lahf
ja
cmp
pop
test
jg
cwtl
loop
pop
out
adc
enter
dec
sbb
insb
pop
pusha
lea
pop
adc
add
xchg
mov
cmp
mov
ds
jbe
mov
movsb
sti
shll
sbb
enter
dec
ja
mov
add
sub
or
in
sbb
jo
inc
aad
dec
subb
into
and
dec
divl
inc
or
into
loope
fnstenv
add
mov
addr16
mov
sbb
out
js
outsl
movsl
cmpsl
inc
lea
aad
jnp
sti
dec
push
add
mov
movsb
or
lret
adc
lcall
stos
ret
mov
xchg
pop
sbb
cwtl
imul
adc
andps
fs
xchg
fwait
std
lds
jle
jnp
and
fisubs
jmp
test
adc
ds
and
clc
fwait
and
or
xor
mov
mov
xchg
call
fs
mov
dec
jns
imulb
add
add
pop
mov
mov
adc
pop
xchg
ljmp
aaa
ja
xchg
cld
ficomps
gs
add
push
in
iret
or
inc
mov
sbb
int3
in
pop
mov
movsl
mov
fcoml
mov
jo
in
pop
mov
add
xchg
test
sbb
pop
test
ja
movsb
jg
mov
mov
inc
push
pop
dec
data16
jns
xchg
pop
outsl
ja
mov
ds
test
sti
or
pop
cs
fisubrl
cmp
test
xor
aas
notb
ret
insl
loop
jbe
inc
adc
jg
push
xchg
cmp
mov
xor
xchg
cmp
imul
pop
mov
stc
fcomp
arpl
pop
mov
pop
lahf
test
lahf
stos
xchg
fs
cld
add
push
mov
mov
or
mov
inc
std
sar
test
pop
mov
xor
test
xchg
scas
cmpsb
out
hlt
push
ficomps
add
inc
nop
fbstp
jmp
push
push
aad
outsb
add
jnp
fcoml
bsr
push
dec
ret
push
enter
jno
jmp
and
mov
leave
xlat
aas
pop
xor
jecxz
push
sub
push
jmp
xchg
push
xlat
xor
mov
test
pop
out
inc
cmp
xchg
and
add
daa
hlt
mov
mov
shrb
push
aaa
pop
cmp
and
sbb
aad
jp
iret
gs
xchg
jns
out
into
jecxz
int
inc
dec
lcall
pop
nop
pop
out
ficomps
cld
mov
push
xor
add
add
mov
std
push
cmpb
pop
pushf
sbb
xor
xchg
sbb
dec
inc
mov
nop
das
scas
lahf
sbb
jmp
ds
loop
mov
cli
add
cmp
popf
push
repnz
xor
dec
test
xor
cmpsb
or
shlb
into
and
iret
xor
jnp
and
add
adc
adcl
cmpsl
inc
scas
je
fs
or
shl
lods
ficomps
pop
or
pop
int3
adc
repz
cmp
add
testb
mov
and
cmp
cmp
or
iret
movsb
icebp
mov
das
test
mov
mov
xchg
mov
xor
inc
cmp
mov
xchg
lcall
fsubr
lds
sbbb
inc
roll
add
mov
inc
fldt
out
xor
aam
add
mov
ror
ficomps
addl
movsb
pop
mov
loop
adc
shl
in
cmp
fadd
add
add
mov
add
popa
sbb
jg
or
mov
dec
in
dec
cmc
jp
or
fwait
mov
and
jl
loope
insl
inc
adc
jae
jae
pushf
jbe
ljmp
rol
sub
dec
and
xchg
mov
xor
xchg
jo
xor
jecxz
xor
pop
push
xchg
add
mov
adc
aaa
inc
mov
cmp
inc
sbb
in
and
pop
xor
push
xor
mov
ficomps
or
xor
stos
inc
in
dec
aam
inc
imul
xor
iret
jns
xchg
cmp
cmp
lea
and
fmul
dec
xchg
mov
jno
aam
add
jns
fstpt
vmovq
jno
setbe
xor
xchg
or
shlb
lds
or
ljmp
fdivrl
jmp
or
pop
mov
lods
std
rolb
cmp
mov
fisubrs
fcmovu
sbbl
gs
mov
cmp
jbe
scas
xorl
pop
clc
fcomi
dec
iret
out
mov
push
cmp
mov
and
movsb
scas
add
mov
add
cmp
sbb
popl
push
mov
movsl
pop
jecxz
stos
jnp
xchg
mov
je
test
movl
adc
mov
xchg
lahf
pop
push
add
hlt
jmp
adc
and
mov
and
popl
sub
mov
jg
jl
pusha
cmp
stos
lret
pop
xor
xchg
mov
mov
sbb
in
andb
repnz
stos
xor
lds
arpl
in
repz
push
jo
loope
pop
loope
fwait
pop
push
jecxz
gs
ret
xor
inc
and
sub
out
cli
mov
add
arpl
mov
cld
jle
adc
push
fwait
mov
add
xor
and
inc
xchg
fmuls
dec
pop
arpl
gs
pop
sbb
jne
ja
int3
mov
lahf
mov
inc
psrlw
test
movsb
cmp
nop
mov
dec
pushf
icebp
sbb
mov
fistpl
rcll
test
dec
das
adc
push
bound
mov
test
or
push
or
loop
and
in
inc
mov
std
cmp
push
daa
cs
mov
in
ret
cmp
push
mov
and
jle
mov
icebp
lods
adc
xchg
dec
lret
addr16
mov
push
fwait
sub
sarb
movsb
or
push
in
jp
repnz
dec
out
aas
cwtl
addr16
xchg
or
popa
rcr
jb
fmul
in
add
mov
in
adc
das
fidivs
notl
and
mov
push
aad
ds
sti
push
pop
movsl
nop
cld
dec
dec
popf
inc
dec
movsl
out
mov
jg
sub
in
sub
pop
sub
mov
sub
lret
pop
fcompl
jne
mov
lret
pop
and
pop
lea
inc
push
or
inc
xlat
out
and
pop
sub
int3
out
gs
sbb
mov
sbb
add
mov
into
daa
jne
lea
jb
push
lcall
jno
inc
icebp
ds
sub
icebp
and
pop
loopne
mov
jae
and
push
popa
imul
bound
mov
insb
dec
mov
lods
push
lea
dec
popa
sub
or
push
scas
xchg
cmpsl
jecxz
roll
ror
cld
jno
inc
clc
test
pop
shll
popa
fisubs
jmp
addl
sub
cmpsl
cmp
inc
inc
add
mov
aam
in
scas
inc
mov
aad
and
jge
mov
arpl
pop
push
fnop
popf
into
push
jo
inc
dec
mov
daa
mov
xor
mov
into
sbb
daa
ret
pop
fidivs
test
mov
and
in
pop
sub
daa
xor
fprem1
xchg
lret
cmpsb
lea
leave
inc
jns
lahf
negl
mov
test
stc
scas
adc
pop
testl
and
sbb
je,pt
and
vhaddps
mov
sub
and
cmpsb
icebp
mulb
cmp
mov
mov
fsub
sub
mov
adc
lcall
jns
popf
add
mov
push
call
fcoms
mov
mov
inc
jecxz
in
and
divb
cmp
mov
cmp
cmpsb
mov
adc
push
jmp
pop
inc
mov
push
andb
shrl
mov
enter
ss
ljmp
leave
bound
mov
arpl
inc
xchg
jg
mov
mov
ds
xlat
popf
jbe
mov
add
xchg
in
int3
inc
push
xchg
scas
dec
inc
rcrb
jne
and
pop
dec
lret
hlt
adc
stc
lahf
mov
sbb
cs
mov
xchg
add
ret
js
loop
sub
jle
xchg
push
out
push
imull
cmpsl
mov
cmpsb
dec
dec
sbb
push
add
sqrtps
scas
sbb
scas
xchg
xchg
rclb
fs
mov
aad
sub
pop
push
stos
inc
xor
sbb
stc
jb
mov
das
pusha
mov
push
adc
mov
cld
in
dec
and
push
int3
subl
fsave
pusha
dec
mov
xor
es
and
add
adc
nop
jnp
insb
pop
pushf
mov
sbb
div
aad
scas
lret
sahf
jl
outsl
imul
daa
fimuls
or
es
xchg
cmp
xor
xchg
ljmp
mov
ljmp
movsl
jnp
push
mov
scas
xor
cmp
sub
sub
sbb
lds
pop
fwait
pop
adc
adc
arpl
mov
cmp
mov
mov
aas
test
jbe
push
in
jnp
dec
add
sbb
mulb
mov
repnz
addr16
jno
leave
mov
loopne
jb
lods
cmp
mov
lahf
mov
out
mov
xor
hlt
es
aad
ss
jmp
adc
idivb
mov
cmpsb
lcall
sub
mov
jge
xor
sti
fs
clc
jb
dec
jle
mov
sub
mov
mul
xorl
rcrb
repnz
lahf
cltd
ror
pop
test
xchg
lock
sbb
fldt
mov
cmp
pop
loopne
aaa
xchg
sub
mov
shrb
popf
enter
sbb
mov
cmpsl
mov
add
sub
mov
rorl
sahf
idivb
hlt
sbb
xchg
sub
push
sbb
subb
sub
jae
je
mov
mov
out
dec
lea
jp
cli
iret
mov
or
out
sub
push
xor
and
or
pop
lahf
repz
loopne
and
shrl
fs
push
popf
aas
int
shr
sub
pop
loope
adc
adc
test
stc
dec
ljmp
std
jnp
pop
push
loope
push
stos
fcompl
and
cs
pop
popf
jo
xor
jb
dec
xlat
jno
mov
loope
dec
sbb
push
and
fwait
push
popf
and
lret
xchg
pop
dec
pop
nop
lret
dec
mov
es
xchg
dec
dec
cmp
sub
xchg
aas
pop
xchg
mov
pop
adc
mov
hlt
shll
outsb
pop
stos
sub
incb
cmp
lcall
add
shll
insl
shl
mov
pop
jp,pn
add
sti
inc
dec
imul
jge
int3
lahf
ss
imul
shrl
add
mov
push
jbe
divl
add
cltd
push
fsubrl
jle
mov
or
int
dec
jbe
bound
std
iret
fld
push
push
addr16
push
fwait
daa
push
jns
mov
jge
dec
das
wbinvd
mov
jb
pop
sub
repnz
jmp
hlt
inc
ja
ret
dec
jae
xor
pop
je
insb
sahf
adc
sarl
inc
cmp
loop
fistps
out
repz
nop
mov
fnstenv
cld
aaa
mov
inc
fs
dec
and
icebp
daa
inc
add
in
inc
push
mov
jle
xchg
outsb
repz
push
fneni(8087
xchg
out
jne
negl
mov
jge
test
int3
xlat
add
ss
fwait
lods
jo
cs
sbb
adc
clc
xor
mov
fsubl
add
pushf
std
push
mov
push
data16
in
dec
and
das
add
arpl
sbb
mov
mov
sbb
roll
jmp
mov
push
push
imul
daa
pop
aas
out
mov
jno
fmull
cmp
add
xor
adc
jecxz
push
add
fcomi
std
and
imul
call
out
addr16
lods
or
inc
in
pop
into
xchg
out
jle
stos
or
jecxz
inc
sub
jbe
les
loopne
pop
push
sti
lds
in
outsl
jecxz
xor
shlb
pop
mov
movsl
mov
addr16
ficoms
cmp
subl
lds
out
cmpsl
sbbb
pop
loop
into
pop
subl
sbb
es
fs
xchg
andb
int
xor
repz
cmp
aaa
fisubl
mov
mov
pop
int3
lds
cmp
sbb
adc
jno
fimuls
adc
aas
cmp
jp
dec
popf
mov
xchg
xlat
bound
ss
test
push
xor
lahf
stos
mov
int3
out
mov
ds
mov
inc
stos
ja
add
loop
pop
roll
jo
adc
in
mov
mov
jno
mov
jecxz
mov
enter
mov
cmpsl
negl
ds
scas
push
jmp
inc
cmpsl
int3
mov
adc
sub
inc
shrl
fs
inc
mov
faddp
gs
or
and
inc
fisubrs
xor
cmpsl
sbb
xor
xor
sbb
fdivs
andl
xorl
adc
adc
rcrl
sub
jb
outsb
and
pushf
into
fidivs
xor
js
in
das
lret
sarl
mov
loope
dec
jns
imul
ds
movsb
sbb
sti
fisubs
aam
shr
fwait
rorb
loop
ret
ss
adcb
or
int
xchg
mov
inc
adcl
fdiv
xor
lods
sbb
daa
pop
xor
test
inc
sbb
pop
jmp
gs
add
inc
inc
mov
in
push
or
ret
loope
push
or
jo
int
sub
nop
pop
xor
push
push
sbb
ret
int
push
pop
outsb
xor
nop
lret
jo
push
test
inc
sub
mov
adc
pusha
test
pop
and
pop
adc
push
jns
push
xchg
push
ftst
jecxz
pushf
dec
mov
testb
cwtl
jle
mov
push
ret
sub
xchg
mov
dec
aad
arpl
push
mov
inc
mov
dec
mov
sub
xor
pop
fwait
jl
mov
ret
pop
fs
imull
mov
jg
dec
int3
dec
fcomip
nop
stos
dec
pop
and
or
or
mov
push
push
movsb
and
dec
pop
pop
push
aaa
or
sub
xor
sbb
xor
inc
incl
shl
arpl
xchg
cwtl
test
jmp
loopne
dec
das
imul
out
in
subb
xchg
popa
dec
sbb
sbb
outsl
pop
dec
or
sahf
xor
and
jmp
pop
sub
mov
and
inc
dec
pop
xchg
xchg
mov
rolb
sub
or
sbb
out
push
jae
adc
and
fs
mov
dec
negl
dec
jo
xchg
andl
mov
js
mov
std
pop
out
push
adc
aas
dec
sbbl
push
lret
sahf
inc
cltd
iret
sbb
sub
jns
mov
push
jno
xchg
xchg
ret
fimull
inc
test
sbb
mov
lahf
pushf
jecxz
mov
sbb
mov
mov
and
pop
jnp
xor
push
lret
popf
adc
jns
dec
enter
jno
jge
outsl
jno
jne
lock
push
sub
dec
shll
jmp
push
xor
aas
and
jbe
leave
test
lret
lods
enter
icebp
daa
xchg
pop
mov
das
dec
jg
xchg
xor
cmp
xchg
xor
sahf
push
jo
pop
add
pop
sarl
stos
or
mov
das
jg
add
and
mov
in
fwait
dec
cld
mov
jo
push
cld
dec
mov
xchg
imul
stos
jl
jnp
iret
xchg
cli
btc
and
dec
mov
out
aaa
call
xchg
pop
mov
mov
andl
mov
decl
cmc
sti
into
dec
or
xchg
out
int
pusha
jmpw
bound
gs
lcall
test
enter
mov
divl
lds
hlt
xchg
inc
addr16
testb
leave
inc
movb
das
adc
mov
int3
imul
dec
push
fildll
add
shl
mov
into
cmp
xchg
dec
lahf
outsl
cwtl
mov
adc
in
push
mov
push
inc
mov
mov
into
popa
sbbl
xor
push
xor
cld
popa
les
iret
xchg
mov
mov
lahf
jbe
pop
sbbb
xchg
jmp
out
and
mov
movsl
ficomps
jbe
add
sti
xchg
nop
dec
stos
push
inc
dec
xor
shl
xor
push
mov
push
shlb
mov
sub
notl
mov
jge
add
push
arpl
jbe
rclb
xchg
jle
bound
addl
and
jns
test
jl,pn
mulb
loop
je
lret
cmp
and
push
int3
addr16
add
int3
rolb
xor
ds
je
aad
inc
mov
xchg
or
xor
ja
hlt
push
cli
push
nop
mov
or
xchg
push
loope
pop
mov
cld
in
jle
jbe
cmp
inc
dec
sub
and
adc
fmuls
subl
mov
test
dec
dec
dec
jp
lret
xchg
dec
xchg
ljmp
push
inc
jecxz
iret
aas
inc
ret
fidivs
inc
mov
insb
pop
or
or
aaa
xor
cmpsl
mov
shll
xchg
sub
pop
loope
lods
out
mov
mov
xchg
cmpsb
aaa
jns
lcall
mov
add
pop
jmp
loopne
mov
sbbb
mov
sub
dec
cmp
dec
orl
add
jge
and
push
xchg
pushf
inc
and
inc
xchg
sub
mov
ljmp
leave
imul
cmpsb
andl
stos
leave
lds
in
scas
pop
out
ss
push
pop
ret
bound
cld
mov
addr16
mov
arpl
mov
sub
sbb
mov
lahf
lock
in
fldcw
movsl
in
jg
rcl
mov
dec
add
ja
fwait
pop
xchg
sub
xchg
jno
out
rclb
pop
call
in
test
mov
xor
jae
xchg
cmp
pusha
shl
in
movsl
fdivs
push
aas
leave
mov
arpl
sarl
cmpsl
and
fwait
add
stc
add
pop
pushf
cmp
sahf
add
sub
dec
ret
cmpsl
mov
mov
push
dec
jns
pushf
mov
jo
mov
and
test
ficoms
jmp
jg
dec
pop
ficoml
repnz
sbb
and
push
xchg
sub
cmpsl
lods
mov
xor
sti
or
lds
notb
jge
mov
sarb
dec
xor
bound
lret
je
pop
cli
push
xchg
add
cmp
icebp
shrb
mov
fmulp
jns
lahf
sbb
cmp
pop
cmp
pop
lcall
loope
out
loop
in
fmull
push
sub
jp
lds
mov
aad
aad
pop
test
movsl
adc
push
xchg
dec
xor
in
mov
iret
jne
cmp
cld
push
leave
arpl
andb
nop
repnz
adc
xchg
leave
pop
outsb
fdivl
adc
pop
jnp
jecxz
mov
push
mov
or
test
add
cmpsb
and
test
scas
push
call
cmp
pop
stos
nop
sbb
inc
dec
dec
in
or
aaa
addr16
stos
pop
adc
pop
mov
outsl
dec
js,pt
pusha
stos
cmp
daa
pop
jmp
mov
pop
dec
mov
or
jp
mov
xor
js
addb
insl
shl
sub
std
mov
lahf
pop
sub
hlt
adc
add
mov
test
lods
scas
stos
add
inc
fldl
movsl
xor
outsb
leave
xchg
outsl
addr16
push
dec
sarb
push
mov
cli
int3
inc
stos
xor
lret
ret
mov
cmp
mov
lock
push
popa
push
out
dec
test
cld
mov
pop
xchg
fwait
sub
not
bound
inc
mov
movsl
add
lods
cmp
cmp
push
shll
data16
cwtl
inc
fwait
dec
push
je
jg
out
mov
stos
sbb
add
ret
scas
fcmovbe
mov
adc
dec
cmpsb
jle
mov
clc
adc
or
pop
fists
imul
and
repz
popf
xor
adc
hlt
pushf
sbb
lret
sub
pop
xchg
ds
xchg
xchg
stc
adc
fsubrs
std
inc
lods
jge
in
test
and
out
rcl
lcall
xchg
jnp
jbe
or
add
adc
push
jno
dec
dec
in
lcall
inc
clc
movsl
cli
xor
fistl
sub
adc
call
add
loopne
xlat
insb
lret
dec
loop
rolb
fsubl
out
cmpsl
popf
cmp
shlb
jmp
mov
out
and
xor
mov
roll
fdivrl
aam
mov
inc
fldln2
cmpl
mov
xadd
test
sub
in
pop
lock
push
out
mov
xchg
in
pop
xor
in
adc
cld
inc
sbbb
inc
pop
mov
leave
daa
sbb
inc
imul
punpckhwd
xor
sbb
lahf
sub
pop
aaa
daa
mov
mov
push
xor
fdivs
push
int
mov
in
cmp
dec
xchg
or
cmp
add
mov
testb
pop
lods
xor
je
shlb
movsb
insl
mov
dec
mov
dec
fists
cltd
jns
jp
push
out
jnp
mov
mov
inc
and
mov
pop
int
adc
dec
cmp
shrb
adcl
out
leave
arpl
mov
dec
sbb
jmp
add
inc
and
add
push
sub
pop
shll
jns
push
icebp
mov
inc
cmp
mov
sahf
test
jbe
jg
mov
add
mov
lcallw
push
push
fstl
pand
stos
inc
or
cwtl
ss
clc
pushf
in
xchg
fsubl
cmc
pop
mov
push
pop
ret
sub
mov
sti
iret
mov
lock
in
cmp
movsl
fsubl
ret
out
push
out
jecxz
gs
fldt
jno
ss
scas
pop
or
or
cmp
jae
int3
dec
stos
pop
out
fs
movsb
push
mov
jno
insl
jo
xor
jae
inc
fsubr
cld
add
int
test
loop
and
rcrl
xchg
rorl
and
test
outsl
les
stos
out
jb
lock
lcall
xchg
push
xchg
mov
scas
jmp
or
sub
imul
cltd
or
jge
lods
jge
dec
push
call
cltd
cmp
push
mov
lret
jae
out
lahf
data16
adc
test
dec
aad
insb
sub
icebp
ljmp
mov
push
scas
and
and
cs
mov
clc
repz
and
cld
repz
repnz
addr16
mov
je
imul
loope
cmp
xchg
mov
push
repz
imul
in
inc
xor
push
add
loope
out
pop
pop
lret
sbb
test
xlat
adc
mov
test
or
dec
dec
leave
addr16
mov
or
dec
je
test
inc
mov
inc
mov
xor
hlt
xchg
jnp
pop
jmp
inc
ja
inc
mov
or
js
lds
jecxz
jne
les
das
fcompl
or
adc
adc
xchg
or
mov
shr
pop
daa
sub
push
dec
rclb
adc
or
push
mov
inc
cmpsl
sub
and
lcall
out
push
in
daa
sub
ret
in
jae
aas
xchg
inc
or
mov
inc
jecxz
test
leave
mov
and
dec
sub
addr16
cmc
dec
jae
jecxz
mov
cmpsl
adc
lahf
adc
cmp
mov
jle
inc
mov
and
call
test
movd
jne
je
insb
sbb
ja
jecxz
out
sbb
mov
movsb
push
xorb
pop
cs
ss
jg
pop
sub
cmpsl
jl
inc
je
xor
or
push
xor
cltd
test
test
arpl
push
dec
js
push
aad
outsl
aad
imul
xor
subl
push
push
fldt
es
or
mov
cmp
scas
pop
mov
adc
and
sub
pop
sub
jb
imul
xrelease
fwait
je
xchg
add
lret
sbb
sub
push
cmp
test
cld
mov
mov
outsl
sub
push
in
xor
lret
stos
sub
pmullw
mov
xchg
imulb
mov
ret
les
push
sbb
inc
jne
orb
mov
mov
shl
and
loop
pop
cld
out
pop
cmp
mov
outsb
out
push
jg
jns
in
fcomip
jbe
xor
push
xchg
test
fwait
enter
ss
xchg
adc
fsub
sbb
inc
xchg
insb
xor
cmpsl
jg
outsl
lds
or
pusha
mov
gs
fidivl
inc
test
xchg
jns
and
lahf
xor
jp,pt
roll
cmp
fidivrs
loope
mov
push
jno
add
jge
mov
xchg
dec
pusha
xlat
cltd
add
pop
add
push
add
and
push
jmp
add
lds
lock
cmp
ja
dec
rorb
inc
jp
jge
xor
or
mov
add
out
adcl
ja
pop
inc
inc
and
and
loop
movsb
sahf
dec
jmp
shll
fwait
cmp
jbe
lret
mov
call
pop
leave
push
lods
dec
stos
and
sbbb
and
mov
push
sbb
into
push
fisubrl
or
dec
stos
lret
dec
out
jno
out
sarb
inc
dec
inc
das
fdivrl
sub
push
cmp
dec
imul
pop
das
loop
lret
call
outsl
cmp
call
lret
mov
out
and
jle
pop
xchg
insb
add
mov
sub
fnstsw
and
cmp
mov
in
cld
movsb
stc
clc
sub
rclb
dec
and
mov
mov
pushf
xor
adc
or
lret
add
xor
pop
fmul
dec
ret
adc
mov
imul
sbb
int3
movsb
pop
dec
rorl
inc
gs
adc
mov
cmp
inc
nop
inc
mov
jle
gs
jne
inc
pop
gs
cwtl
stc
or
jb
jp
adc
movsb
in
pushf
xor
mov
mov
xchg
out
push
lds
push
fs
mov
in
out
xchg
xor
lret
inc
dec
lret
dec
mov
sub
sbb
add
lea
fwait
leave
hlt
mov
xor
mov
ficomps
loopne
jne
js
mov
jb
sbb
shll
push
jnp
dec
adcb
mov
leave
mov
push
mov
xchg
push
out
xchg
test
sbb
mov
or
inc
test
xchg
mov
add
in
rcrb
or
cmp
stc
jo
mov
mov
add
jle
lea
pop
ss
in
les
out
movsb
into
mov
mov
mov
mov
fcmovu
jne
jle
jo
imul
pusha
sbb
add
jp
adc
movsl
jne
add
lds
add
insl
cmp
mov
movsb
les
jnp
jle
xor
shr
and
sbb
outsl
jno
sbb
cld
cmc
jnp
jmp
inc
cmp
push
lock
pop
push
push
dec
jp
push
or
push
scas
in
orl
xchg
sahf
sbb
push
fmuls
mov
pop
mov
sub
movsb
xchg
rcrw
ljmp
clc
pop
aad
stc
push
sub
sahf
movsl
aaa
roll
xchg
add
addr16
clc
mov
add
shrl
mov
outsb
pop
xor
adc
sub
stos
out
ja
xor
test
out
mov
das
jo
neg
push
mov
or
stc
ret
out
sahf
orl
jmp
push
inc
lea
mov
jmp
cmpsl
mov
cwtl
gs
lods
or
mov
out
jns
data16
int
fidivs
sarl
in
ucomiss
pop
in
sub
test
stos
add
or
je
mov
into
es
sbb
bnd
dec
dec
sahf
xchg
mov
mov
ss
pusha
lret
jae
fwait
mov
aas
xor
rcrb
in
es
mov
xor
push
mov
mov
mov
xchg
push
mov
add
in
sti
sub
inc
ret
push
pusha
das
xchg
subw
and
and
xor
repnz
xor
pop
add
inc
int3
cmp
cmp
pop
dec
rclb
imul
sub
ja
mov
test
outsb
jp
xorl
xchg
sub
mov
xchg
dec
push
jns
pop
shlb
mov
arpl
fwait
cmpb
repz
gs
mov
stos
push
pop
call
inc
or
aaa
testb
repz
das
mov
mov
jbe
rol
inc
or
or
mov
and
ja
xchg
je
inc
jne
pusha
push
cmpsb
cwtl
maxps
xorl
rorl
ja
inc
cmp
ss
lcall
in
fidivrs
inc
aaa
mov
fistps
push
loop
or
adc
adc
push
sub
mov
and
xchg
sub
add
mov
nop
adc
icebp
jl
or
rorl
add
sahf
loopne
inc
push
inc
mov
movsl
mov
stos
ror
aam
push
sub
int
sub
push
jb
jle
pop
pop
dec
stos
dec
pushf
jge
or
cmp
adc
xchg
sahf
xor
aad
sbb
sahf
sub
frstpm(287
dec
loope
imul
popf
test
sub
in
mov
xchg
sahf
jl
fiadds
into
orl
mov
jmp
mov
pop
xchg
adc
lret
cmpsl
call
sbb
nop
test
push
add
inc
aad
aaa
mov
mov
aaa
pop
dec
mov
xchg
popa
std
pop
and
xor
and
mov
xchg
js
cltd
scas
out
pop
push
mov
lods
xor
lret
inc
lret
mov
adc
dec
pushf
enter
sub
in
mov
gs
cli
pop
je
pop
dec
push
inc
mulb
cli
clc
push
aam
incb
ss
fiaddl
sbb
xchg
sar
xchg
das
jle
cmp
add
sub
adc
push
pusha
and
adcl
jbe
sub
inc
xchg
sar
add
out
sahf
and
lods
int3
cmpsb
dec
scas
fldt
das
push
imul
imul
das
adc
xchg
outsb
addb
push
gs
pop
inc
dec
pushf
rol
mov
jp
pop
sub
imul
mov
or
testl
dec
shr
add
and
in
or
jno
jbe
js
dec
das
iret
int
xor
pop
inc
mov
or
cltd
mov
lock
push
addr16
dec
pop
fldl
lret
addr16
sub
lods
gs
jecxz
sti
mov
dec
negb
sbb
xchg
shrb
sub
cmp
pop
ficompl
add
dec
mov
aad
gs
mov
xchg
cwtl
ja
xchg
mov
inc
out
out
sbb
mov
std
fcompl
nop
nop
in
div
cltd
hlt
testl
ds
popf
sarb
lock
adc
cmp
shlb
xchg
sahf
dec
adc
mov
pop
adc
outsl
jle
xchg
out
push
xchg
aam
les
cmpsl
mov
sarl
insb
inc
insl
push
fld
jne
loope
shlb
rolb
inc
add
and
mov
divb
xlat
jbe
test
mov
pusha
inc
mov
mov
stos
xchg
stc
ljmp
inc
add
imul
jno
xchg
mov
fs
popf
das
lds
lcall
mov
fwait
jnp
add
push
es
jmp
lods
jns
popf
movsb
or
lock
shl
in
addr16
xlat
mov
leave
jecxz
out
jbe
adc
ret
cmc
lock
popa
mov
and
push
testb
adc
in
push
out
test
add
push
mov
addl
hlt
test
js
mov
ret
xchg
mov
cmc
mov
fcomi
inc
data16
icebp
xlat
imul
test
ljmp
and
enter
add
cmc
aas
push
sbb
ja
jg
or
icebp
gs
mov
out
repnz
adc
pushf
lahf
adc
mov
dec
fwait
push
lcall
pop
sub
cmp
add
mov
sti
lock
mov
mov
jns
jg
mov
es
imul
add
xlat
fsubrp
push
adc
out
lods
dec
loopne
ljmp
mov
pop
out
addr16
fnstenv
les
push
sbb
daa
pusha
das
pop
mov
inc
fisubl
daa
mov
jno
or
decl
lock
push
jno
lods
fisubs
xchg
movsl
rorl
xor
jne
mov
out
lods
cmp
lcall
mul
xor
jnp
push
cmp
adc
nop
aaa
fnsave
lds
int3
ja
jnp
mov
adc
mov
inc
xchg
mov
loop,pn
xchg
cmc
nop
fldcw
cli
or
ss
call
jae
jne
adc
xchg
hlt
fimuls
cmp
add
in
jmp
inc
fcmovnu
pop
fdivrs
mov
repnz
sbb
test
jecxz
or
shlb
cmpsb
push
lret
mov
jb
sbb
outsb
lret
adc
arpl
cmp
outsl
enter
cmp
sbb
clc
sbb
cld
mov
mov
or
sbb
push
es
mov
call
insb
cltd
inc
xor
adc
xor
and
insl
ret
or
mov
dec
pop
and
in
mov
inc
nop
aad
xor
lds
jo
mov
andl
and
dec
ljmp
inc
loope
pushf
shlb
pop
roll
mov
mov
add
ret
leave
push
cmp
add
pop
and
xchg
adc
cmp
mov
push
inc
cmp
movsb
fcmovb
loope
arpl
mov
pop
sbb
andps
mov
inc
xor
xor
leave
rcrl
sub
xor
test
sub
inc
bound
jmp
outsb
pop
cmp
lret
xor
adc
mov
dec
cmp
xchg
iret
mov
or
mov
cmc
jns
clc
popa
push
cmp
sahf
push
mov
pop
dec
imulb
lret
jnp
mov
cmp
sti
clc
adc
fisttpl
test
stc
icebp
cld
sub
orl
push
sbb
test
imul
mov
push
outsb
xor
stos
sbb
cmp
mov
or
lds
push
and
ja
fidivrl
movsb
imul
les
movsb
xlat
mov
sub
dec
cmp
cltd
ss
push
testb
subb
jno
incb
ljmp
or
jecxz
push
mov
xchg
test
push
fisubl
push
data16
lods
cmpsb
xchg
adc
add
add
inc
push
xlat
int
aaa
lods
loopne
mov
mov
test
or
orb
out
notl
xchg
jne
mov
pop
ret
jo
add
fcomi
push
or
mov
pop
pop
sbb
cmp
sbb
mov
add
insl
pop
push
xorl
lret
xorl
inc
xchg
mov
popa
cmp
mov
js
pushf
test
push
push
loop
les
loope
outsl
cltd
mov
loop
shlb
add
lea
dec
pop
add
test
or
outsl
mov
pop
push
daa
mov
cmpb
leave
je
sub
lret
cld
xor
push
cwtl
cmp
aam
movsl
addb
test
pop
stos
mov
inc
mov
pop
inc
pop
xchg
adc
enter
flds
lahf
faddl
std
xor
and
outsb
cmp
xchg
jl
fstpl
push
icebp
int
cli
sub
out
adc
lea
cld
sbb
mov
into
orl
arpl
cld
mov
cmp
std
sbb
push
pop
insb
lods
mov
dec
ja
mov
repnz
in
push
push
int3
mov
sbb
pop
and
cmpb
xlat
xorb
sbb
mov
lret
cmp
sub
jge
leave
and
and
cmp
adc
xchg
mov
mov
cmc
es
fimuls
repnz
xchg
ret
xchg
test
push
popf
jge
mov
loop
mov
fstpl
mov
mov
lret
je
rcr
xchg
dec
int
jb
push
dec
and
mov
cli
lret
mov
jae
je
jp
jl
sub
mov
out
stos
out
and
xchg
cmp
push
je
lock
fwait
insl
iret
mov
fldcw
push
add
cmpb
fdivs
test
fmull
push
cmp
push
fcmovbe
popa
jns
test
adc
sub
or
cwtl
xchg
and
shll
out
adcb
inc
cld
nop
sarl
dec
cltd
jne
lods
sbb
or
adc
inc
sbb
dec
pop
and
pusha
insl
shll
addr16
fcoms
mov
dec
push
out
ds
push
imul
inc
js
movsb
mov
in
lds
mov
arpl
out
lods
cli
cltd
or
mov
pusha
mov
xor
test
test
xor
push
or
loop
adc
out
mov
leave
iret
loop
out
outsl
jb
test
lcall
xchg
ret
cwtl
or
out
xorl
cli
jne
repnz
cmp
xchg
mov
iret
pop
outsl
sub
int3
insl
dec
outsb
or
lar
mov
dec
dec
fsubrp
and
lcall
pop
pop
sti
mov
sbb
or
adc
jns
aad
or
mov
outsl
scas
cmpsb
ret
fs
pop
nop
popf
and
push
and
sbb
int
imul
cmp
in
loopne
iret
xor
adc
nop
sub
cmpsb
jne
imul
dec
or
jecxz
inc
in
les
fwait
or
push
sahf
or
sub
pop
test
dec
ljmp
sub
or
lret
dec
stc
sub
pushf
call
jecxz
outsl
sub
aam
dec
pop
clc
jle
popa
adc
mov
jle
or
mov
movsl
movsl
test
mov
jbe
leave
pop
or
cmpsb
xorl
int
push
inc
inc
xchg
sbb
inc
xchg
hlt
sbb
pop
cli
jle
add
add
testl
push
dec
insl
sbb
mov
mov
popa
inc
movsb
pusha
subl
icebp
pop
jg
push
imul
mov
not
in
sahf
out
leave
cmp
aam
and
xchg
lcall
pop
ds
or
shll
pop
inc
and
adc
ja
roll
repz
pop
in
fs
scas
cmp
cmp
and
inc
or
mov
sti
inc
cwtl
cwtl
call
loope
sub
push
jle
sub
xchg
nop
int
outsl
cld
imul
add
xchg
int3
sbb
stos
adc
mov
loopne
mov
push
gs
gs
mov
ja
sbb
paddsb
dec
js
fistpll
pop
xor
sbb
je
xchg
mov
test
shrl
push
inc
mov
add
push
lret
in
jnp
pushf
sub
push
iret
push
movsb
aas
mov
lods
mov
cmc
jo
pop
or
or
mov
xchg
lds
pop
mov
stos
sbb
mov
xor
push
pop
and
cmp
pop
je
jb
sub
inc
pop
jne
ror
enter
fst
mov
test
add
scas
in
sub
mov
adc
pop
and
mov
sbb
sbb
test
rorb
in
lahf
rcrl
inc
mov
call
mov
in
xor
out
adcl
ret
sub
pop
sub
clc
nop
jl
add
mov
pushl
shrb
xor
push
or
dec
add
fwait
clc
insl
imul
jmp
xchg
mov
cld
sub
xchg
dec
jno
pop
jae
or
jg
ret
pop
arpl
lods
xchg
mov
sbb
or
adc
xchg
jb
sar
pop
clc
jmp
fs
test
aaa
jp
mov
pop
imul
push
add
mov
jle
sbb
xor
movsl
cmpsb
push
jge
or
cwtl
mov
int
pop
inc
xchg
fdivs
or
cwtl
xchg
imul
movsb
pop
pushf
cmp
mov
dec
and
aas
sub
icebp
cmp
repnz
popf
out
imul
jecxz
pop
sub
xchg
testb
push
jecxz
lret
nop
scas
ja
aad
aas
mov
pop
mov
dec
idiv
mov
add
mov
mov
mov
xchg
filds
std
cmc
sahf
dec
pop
sbb
jecxz
loop
in
lea
int
aas
out
inc
insb
or
movsl
jns
enter
call
jp
jle
jae
or
xchg
fs
mov
push
cmp
test
or
testb
std
test
shlb
scas
and
test
pushf
imul
dec
int3
mov
dec
js
mov
das
stos
arpl
aaa
daa
in
rcll
test
test
sub
cmp
dec
popa
lods
outsl
pop
int
xchg
insb
loopne
dec
mov
fwait
mov
or
lods
lret
adc
add
jns
ja
pop
lock
in
mov
rcll
xchg
aaa
sbb
lcall
scas
leave
sub
mov
std
clc
pushf
cltd
test
psrlw
bound
scas
popa
mov
fidivrl
pushf
fbld
or
sub
mov
adc
lods
xchg
pop
es
shlb
sub
enter
xchg
dec
rol
add
loop
iret
in
xor
mov
into
and
jns
out
test
sbb
in
add
hlt
xor
cs
inc
sahf
pop
xchg
lret
ret
add
jo
mov
fildll
es
shll
or
bound
lods
in
jo
cli
mov
int3
mov
lea
sahf
sarl
jb
aam
call
and
cmc
aam
lcall
push
adc
cmpsl
xchg
jmp
add
stos
in
jp
hlt
mov
or
mov
cmp
ljmp
out
nop
out
ds
loop
jns
sbb
inc
sahf
aas
pop
dec
pop
fldl
fs
in
push
push
and
xchg
jnp
push
repz
push
inc
pop
dec
jl
test
das
mov
out
test
adc
jbe
jmp
js
les
cmp
mov
das
out
mov
lods
or
hlt
dec
mov
push
xchg
cmp
rcll
pushf
loopne
rcrl
bound
xchg
leave
adc
adcl
mov
icebp
fildl
inc
es
test
adc
test
test
das
push
push
ss
scas
pushl
adc
cmc
cmp
mov
ret
xor
sub
test
xchg
pop
xchg
sbb
xchg
cs
lods
mov
js
inc
sbb
int3
cmp
fnstenv
imul
test
loopne
popf
sahf
or
dec
jmp
fs
dec
insl
push
xchg
aas
mov
mov
jns
xchg
sub
adc
dec
add
test
ljmp
jg
mov
test
inc
int3
and
sbb
dec
push
jmp
lcall
int3
lock
cmpsb
mov
pushf
in
lds
sahf
xchg
add
outsl
int3
mull
out
sub
push
xchg
testl
mov
xlat
rorl
fwait
xchg
sbb
xor
push
xor
stc
sub
cwtl
inc
add
scas
fsubs
stc
inc
filds
pop
xchg
notl
push
jle
xchg
jb
sub
out
scas
xor
cmp
and
xchg
rolb
push
in
mov
jns
jb
sub
int3
rclb
dec
dec
int3
or
divb
mov
adc
pop
test
xor
push
jnp
add
es
lret
inc
push
lds
testb
sarb
cltd
sbb
xchg
add
scas
inc
ret
rorl
popa
dec
lock
dec
iret
mov
in
sub
push
mov
mov
test
mov
arpl
imul
jnp
inc
mov
lea
xor
out
xor
inc
pop
scas
xchg
dec
pop
xor
xor
ret
les
or
lret
in
insb
cltd
adc
jge
in
cmp
cli
addl
inc
cmpsb
pop
ds
push
sub
lret
ss
or
lcall
xchg
sbb
pop
aaa
mov
mov
mov
sbb
lds
enter
inc
scas
gs
jno
jecxz
sub
sti
push
mov
pop
xchg
push
push
fs
dec
dec
push
pop
cli
jae
std
mov
out
adc
or
je
pop
mov
cmp
popf
dec
fadd
fmul
mov
ret
inc
das
pop
iret
in
pop
xchg
test
or
rorb
into
xchg
orl
aad
pop
and
pop
add
lods
cmp
ss
lea
pop
adc
idivb
adc
cld
jge
mov
js
mov
outsb
in
sbb
aaa
in
adc
pushf
mov
mov
jno
push
ds
jns,pn
cmp
test
ror
inc
mov
xor
mov
pop
shl
test
andb
out
cmp
mov
fmull
jg
add
mov
in
fidivl
fwait
aas
and
lahf
lahf
adcb
or
js
jmp
jg
mov
movsl
icebp
add
and
sti
or
sub
lds
cmpsb
in
mov
sub
xchg
loop
test
or
xor
jb
jg
and
sahf
aad
mov
insl
mov
xor
fdivrs
rcr
pop
das
pop
push
push
and
orb
xchg
enter
inc
add
std
push
jae
lea
or
sub
mov
out
cmpsl
xchg
add
clc
mov
sar
sti
cmp
sub
call
cs
sarl
bound
adc
mov
pop
mov
in
pusha
xchg
aaa
and
outsl
in
out
insl
pop
ret
jecxz
dec
jns
cmp
dec
sbb
pop
pop
mov
adcb
mov
inc
add
movsb
test
and
cmpsl
and
stos
jmp
clc
pop
movsl
jns
xor
push
lds
mov
or
ljmp
test
mov
js
pushf
adc
mov
fdiv
insb
mov
int3
fwait
mov
mov
adc
jge
mov
and
sahf
mov
repz
ss
loopne
pop
sbb
xchg
iret
in
addb
pop
rclb
jbe
push
or
addr16
dec
xor
es
cmp
repz
xorl
stos
ret
lods
xor
add
ret
mov
fimull
push
into
jl
out
inc
push
ret
or
lret
ret
lea
call
xchg
cmpsb
adc
mov
iret
push
add
and
ds
outsb
lock
lds
cmp
sub
mov
xor
push
lret
cmc
leave
inc
sbb
sti
clc
imul
mov
enter
and
pop
out
or
jae
into
lds
shrb
fistpll
out
jle
adc
push
test
arpl
and
or
or
orb
jle
xchg
dec
cmp
ret
in
add
stos
das
pusha
icebp
pop
jns
and
mov
cwtl
pop
or
out
mov
inc
fsubrs
test
repz
mov
sti
mov
dec
arpl
mov
mov
fcompl
and
ret
ss
xchg
pop
out
and
mov
xlat
lret
cli
pop
inc
pop
idivl
jl,pt
fld
or
mov
mov
push
stos
outsb
xorb
cmpsl
mov
insl
xor
gs
scas
push
pop
adc
mov
xchg
cmpsl
addr16
xor
out
iret
dec
bound
jl
out
push
cmpsb
push
push
mov
push
xor
int3
cmpsl
mov
sbb
mov
movsl
xor
leave
les
mov
inc
aaa
mov
gs
xchg
mov
cs
jne
outsb
roll
fisttps
ds
inc
mov
stos
jns
mov
push
out
mull
fs
bnd
dec
push
fucom
mov
pop
fisttps
and
xlat
js
inc
test
das
fisubrs
xchg
xchg
cltd
add
and
xchg
adc
int3
sbb
aad
mov
imul
leave
mov
shll
hlt
pop
jb
cwtl
cmp
pop
mov
test
lret
pop
aam
lret
test
xor
or
xchg
jne
sahf
daa
jbe
inc
out
int
fnsave
push
push
dec
xchg
shrb
add
ficoms
mov
je
rclb
int3
push
push
push
mov
fwait
jge
mov
inc
shrb
dec
jnp
sti
jo
mov
push
mov
fstps
repz
pop
outsl
mov
dec
add
in
test
cmp
cli
imul
and
ja
mov
or
xchg
rcr
shrl
mov
sti
xchg
cwtl
mov
sbb
pop
sahf
jle
movsl
mov
sbb
cld
lcall
in
jo
jmp
mov
popl
push
mov
ljmp
mov
fldcw
sbb
aam
mov
pop
adc
pop
frndint
sub
mov
pop
lahf
add
push
inc
dec
or
mov
mov
aad
pop
mov
or
notl
out
lock
pop
mov
push
ficoml
push
push
fimuls
cmp
js
das
shr
stc
and
sbb
je
movsl
push
mov
mov
and
fnstcw
sbb
mov
adc
xor
mov
dec
mov
out
sub
xor
faddl
jle
push
adc
jecxz
mov
jno
inc
sbbb
dec
dec
shrb
decl
push
aaa
fwait
cli
es
lods
xchg
adc
fimull
jmp
imulb
mov
cs
int
sbb
or
loopne
lds
clc
lock
xor
int3
scas
cmp
ret
stos
cli
loopne
mov
movsl
jl
mov
repz
gs
and
and
out
mov
cmp
in
aas
adc
stos
andl
sbb
dec
shl
repz
sub
ficoml
xor
arpl
inc
into
nop
les
jno
mov
mov
cmp
int
sbb
lea
xchg
andl
fisubrl
jns
dec
add
and
push
jmp
fistpl
xchg
sarl
fcomps
lds
lret
inc
icebp
mov
les
or
je
sub
mov
jg
mov
mov
add
xorl
nop
or
dec
lea
xor
dec
mov
add
out
dec
dec
pop
inc
or
inc
rcll
cmpsb
test
jae
jp
sub
xchg
pop
push
xor
cwtl
fmuls
cmp
outsl
jp
mov
mov
lahf
pop
lods
mov
inc
test
js
add
push
jp
mov
aam
hlt
mov
mov
scas
jp
jno
push
dec
call
add
dec
jae
hlt
cmp
arpl
clc
lret
xchg
and
adc
lret
mov
out
jl
cmc
adc
mov
mov
xchg
push
mov
jge
ret
stc
subb
or
ret
xor
mov
out
jno
loope
mov
mov
fmul
es
fldcw
add
lea
pop
fldl2e
fs
repnz
xor
fidivrl
push
adcl
mov
mov
loop
push
imul
insl
jp
jns
mov
dec
xor
jecxz
int
mov
cmp
cmp
es
inc
int3
imul
sbb
cs
jecxz
jg
les
outsb
and
clc
sbb
insl
dec
or
mov
out
mov
jb
mov
lcall
imul
jmp
icebp
mov
cltd
inc
mov
rolb
cmp
push
test
mov
lret
test
stc
inc
push
mov
stos
out
cmpsl
pop
xor
daa
scas
popl
movsl
jne
sub
inc
out
jmp
test
mov
popl
or
scas
out
add
repz
pop
call
mov
cmp
xchg
fwait
jo
scas
js
fdiv
push
add
push
loope
stos
mov
clc
push
and
mov
mov
outsl
cli
mov
popf
jmp
ret
popf
or
push
inc
inc
pop
sub
ljmp
add
sbb
dec
jnp
xchg
test
cmp
rcrl
in
mov
mov
or
out
xchg
dec
jmp
cmpsb
shll
inc
or
imul
and
sahf
jns
ja
pusha
rclb
adc
je
and
push
push
frstor
mov
test
xchg
push
sub
sub
dec
sbb
jl
xchg
xchg
je
pop
mov
adc
scas
out
fwait
sbb
jbe
arpl
insb
inc
aaa
scas
aas
or
jne
sbb
inc
inc
mov
lods
fdivr
loopne
inc
mov
adcb
cld
pop
icebp
nop
lahf
add
pop
testl
inc
dec
icebp
or
arpl
mov
or
insl
pop
pusha
pop
fwait
inc
push
xor
rcrl
shl
movsl
out
adc
and
xor
jns
and
int3
jbe
mov
lea
out
mov
xchg
push
add
xchg
push
lock
push
or
mov
sub
gs
cmp
leave
rcl
std
stos
fdivrp
in
adc
lahf
mov
fidivrl
sbb
or
aad
sub
test
gs
int3
dec
or
nop
subb
xor
lcall
push
adc
push
rcll
inc
or
in
mov
adc
cmp
in
jbe
xor
shlb
jge
cld
icebp
lods
dec
sub
mov
repz
movsb
jnp
adc
outsl
rclb
shlb
lods
ljmp
aam
sbb
mov
pop
mov
mov
repnz
les
push
inc
push
testl
ss
mov
sarl
or
sarb
lret
pop
sub
sbb
dec
adc
leave
cmp
mov
xor
sbb
cli
mov
mov
inc
ss
in
add
pop
mov
mov
dec
push
sbb
fsts
iret
jmp
fdivs
mov
pushf
test
pop
inc
sbb
out
cli
cld
add
mov
dec
movsb
pop
dec
and
and
ljmp
out
outsl
and
inc
xor
test
mov
sub
cmp
push
popa
fistl
cmp
mov
mov
inc
pop
mov
xlat
out
idiv
xlat
or
jo
cmp
pop
xchg
cmpsl
push
cmp
repnz
lds
repz
cs
ret
imul
xchg
aaa
sbb
sbb
mov
int
fcmove
stos
inc
clc
and
push
ljmp
mov
andb
mov
inc
mov
adc
fwait
mov
test
cmc
in
fidivrl
push
clc
mov
push
push
xchg
pop
aam
push
pop
xchg
fidivs
mov
cmc
cmp
imull
jae
dec
jge
sbb
and
add
or
cmp
nop
subl
leave
scas
adc
loop
pop
sbb
fcomps
and
push
dec
adc
stc
jnp
mov
mov
or
mov
mov
inc
inc
insl
or
mov
mov
outsl
out
push
sub
pop
mov
hlt
pop
orb
ja
or
lods
or
mov
loopne
test
sbb
push
repz
hlt
pop
push
fcmovnu
sti
push
mov
pop
fisttpll
adc
je
mov
popf
jns
adc
inc
xor
jl
dec
cmpsl
xor
pop
push
jae
cmp
imul
test
and
dec
add
push
adc
xorl
sbb
pop
cmp
in
lret
fmull
ret
ljmp
mov
mov
sub
sub
hlt
add
pushf
rcr
bound
mov
mov
xchg
movsb
les
cmp
mov
pop
add
xlat
push
iret
dec
mov
jae
jnp
cwtl
mov
jb
addr16
int3
dec
or
mov
movsl
daa
inc
xor
movsl
and
aad
lret
mov
orb
leave
xor
mov
or
out
push
repnz
dec
jmp
jno
add
cltd
sub
outsb
lahf
push
sub
and
mov
scas
ret
outsb
lods
jbe
mov
lds
imulb
in
int3
mov
cmc
dec
mov
push
repz
out
movsl
movsb
cli
xor
cwtl
jp
mov
pusha
xchg
cmpsb
sub
xchg
dec
lds
pop
mov
jae
lret
in
ss
test
jne
test
loope
sbb
fcomps
dec
fsubrs
lds
mov
sbb
mov
push
adc
and
sub
ss
xchg
repnz
gs
stos
cli
fs
neg
cltd
out
stos
lds
mov
inc
fisttpl
jae
aas
push
lock
jno
pushf
stos
leave
mov
lds
and
inc
shrl
jno
mov
xor
mov
xor
lods
icebp
jmp
ret
jne
adc
sub
ds
dec
jno
push
daa
in
fistl
jecxz
scas
fsubrp
scas
repz
fcomps
pop
adc
fwait
xor
xchg
fistl
pop
sbb
loop
jnp
sbb
and
sbb
jnp
js
push
movsb
fidivrl
js
pop
lock
fdivs
stos
cld
pop
jbe
sub
jo
setb
xor
or
add
data16
and
sbb
pop
xlat
sub
call
inc
push
sub
jb
movsb
push
sbb
nop
mov
mov
mov
mov
sahf
testb
icebp
cmpsb
cwtl
sbb
enter
inc
jne
mov
dec
bound
negl
test
xor
popf
stc
adc
sub
or
andl
mov
adc
mov
push
int
stos
push
popf
insl
movsl
mov
add
xor
call
int
inc
lret
cmc
shl
sbbb
mov
lock
push
inc
js
aaa
mov
xchg
push
jle
test
insb
cld
arpl
hlt
sbb
stc
xchg
jo
rclb
jle
icebp
lret
pop
sub
sub
dec
sbb
imul
popa
jno
push
outsl
cli
rclb
jae
ja
xchg
jb
shll
sbb
or
cmp
loope
xor
cmpb
sub
push
add
dec
jle
cmp
aaa
sub
push
sbb
shlb
outsb
pop
clc
fwait
sub
sarl
pop
imul
push
inc
mov
mov
mov
js
sub
add
imul
pop
and
dec
inc
lods
cmp
test
and
push
pushf
add
mov
out
inc
mov
xor
aam
jns
push
push
mov
xor
push
js
adc
pusha
and
leave
xor
xor
and
jb
xor
push
inc
into
lock
xor
fidivl
iret
inc
lret
push
dec
dec
adc
lock
mov
mov
adc
and
aad
push
sub
cmp
xlat
enter
xchg
leave
xchg
xor
jo
mov
push
adc
adc
xchg
mov
mov
or
push
xchg
sbb
mov
lds
imul
push
dec
adc
dec
hlt
mov
adc
or
into
stos
incl
ret
sbb
outsb
mov
cmpsb
fst
pop
fisttpll
je
cmp
cmp
adc
inc
adc
negb
into
adc
mov
add
pop
add
jmp
mov
xchg
add
insb
nop
jae
sub
iret
stos
arpl
cmpb
cmp
jge
rorl
inc
or
xchg
pusha
cmpsb
fisubl
js
mov
aam
mov
stos
ret
adc
in
mov
pop
popf
jbe
jge
xor
enter
mov
push
pop
cmpsl
cmp
xor
cmp
jecxz
out
je
push
xor
in
xchg
rcll
sbb
pop
mov
xchg
insl
mov
mov
movsl
std
movsb
jecxz
xlat
out
leave
inc
and
ret
ss
or
xchg
adcb
fstl
xchg
scas
xchg
pusha
mov
imul
aam
mul
out
int
dec
or
sub
or
clc
and
sbbb
addl
cmc
inc
sbb
les
stos
jp
inc
push
dec
or
jbe
mov
test
int
fnstenv
jns,pn
sbbl
jge
rolb
mov
cmc
or
fisttps
adc
stos
loope
ds
push
repnz
enter
ja
ret
arpl
std
into
lret
pop
jb
push
outsb
sub
adc
mov
xorl
push
mov
shl
cwtl
sti
scas
dec
cltd
pop
mov
and
movb
popf
mov
push
cmp
dec
mov
mov
imul
or
fst
stos
mov
pop
js
popa
les
push
push
cld
cmp
loopne
out
fsubs
xlat
cs
fcmove
in
mov
clc
sub
cmp
cmpb
ret
cmc
mov
xchg
lcall
int3
jl
pop
fldcw
sub
in
inc
ja
fldt
inc
mov
test
or
push
popl
mov
push
cmc
in
adc
imul
pop
hlt
nop
add
fstpl
or
imul
dec
cmp
or
popa
xor
and
fcmovne
ljmp
cwtl
pop
jno
pop
dec
mov
insl
push
sub
push
loop
xchg
fisubrl
mov
sub
repnz
adc
negl
fcmovnu
mov
xchg
mov
and
les
dec
shrb
push
lret
xchg
sub
xlat
adc
negb
js
adc
sub
inc
inc
fistl
dec
cltd
icebp
mov
cwtl
loopne
sub
mov
jmp
pop
or
dec
sbb
inc
sbb
ret
cmp
add
dec
scas
mov
rclb
sub
pushl
shll
inc
test
loop
mov
and
and
pop
mov
pop
subb
sbb
or
jge
mov
stos
andl
lds
or
je
mov
test
mov
aam
lret
dec
add
lock
xor
jmp
mov
call
jg
rcrb
pop
out
enter
push
cmp
sub
add
out
xlat
in
add
jb
add
out
in
pop
xchg
pop
sbb
dec
in
sbb
fcomi
out
shlb
arpl
fldcw
pop
mov
neg
jle
or
adc
inc
call
mov
jmp
movsl
andb
outsl
push
xor
es
adc
and
mov
aas
mov
or
mov
dec
cmp
test
push
daa
push
cmpsl
sahf
adc
repnz
test
pop
pusha
std
sbb
cwtl
or
add
mov
aam
fidivs
pushf
mov
sahf
push
mov
shll
and
lods
xor
out
repz
rorb
dec
lods
xchg
pop
imul
jmp
sub
or
mov
mov
jno
mov
dec
inc
daa
jecxz
movsb
inc
xchg
cmpsb
push
insb
lock
jnp
dec
mov
loop
mov
andl
cmp
fdiv
in
mov
in
inc
outsl
mov
push
or
xchg
jo
call
icebp
push
jnp
push
mov
xchg
fnsave
mov
adc
sbb
sti
in
in
push
mov
sbb
cwtl
push
es
pusha
lods
aad
sub
jno
push
rolb
push
lret
add
mov
shl
and
and
mov
mov
outsb
or
inc
xor
lahf
adc
pusha
mov
push
mov
push
cld
mov
in
mov
cmpsb
pop
cmp
rorb
xor
imul
sub
les
pop
adc
pusha
hlt
dec
ljmp
rcr
mov
aad
mov
xor
dec
mov
pushf
mov
and
inc
sahf
aam
outsl
xor
mov
inc
ds
and
xor
test
lret
or
add
outsl
push
sbb
bound
shr
sbb
xchg
jbe
and
mov
add
test
mov
xor
cmp
pop
and
mov
je
in
out
push
je
lods
mov
pusha
adc
faddp
sbb
push
outsl
ret
fs
pop
push
push
mov
fisttps
jle
sbb
and
push
lahf
lods
dec
pop
lea
push
add
jb
out
sbb
adc
add
cmovo
int
pop
xlat
testl
mov
arpl
cmp
ja
mov
pusha
int
cmp
and
cmp
pop
jnp
xchg
push
dec
jae
aad
mov
cmp
movsl
outsb
xor
jne
das
and
fs
and
sub
mov
mov
jns
xlat
jb
or
inc
in
mov
cmp
repnz
sub
mov
pop
sub
xor
sub
fidivrs
sar
mov
cmp
test
dec
mov
xor
mov
mov
xchg
sbb
loop
or
jge
ret
decl
dec
aas
xchg
adc
mov
icebp
andb
les
pushf
nop
out
clc
cmpsl
lret
jge
lahf
mov
rolb
shl
xor
inc
mov
cli
sub
cmpb
lds
dec
pushf
psllw
loopne
lahf
xchg
cld
adc
mov
cwtl
addr16
mov
js
mov
das
jmp
mov
mov
ret
sarl
lods
cmpsb
lods
sbb
cmp
sbb
and
push
fpatan
leave
adc
mov
outsl
fldl
jp
cmp
and
or
aaa
ret
mov
arpl
test
ds
in
es
std
inc
dec
mov
mov
dec
in
int3
bound
std
push
inc
or
adc
sub
and
jmp
pushf
stos
jno
lret
pop
add
sub
or
test
scas
push
sbb
xor
icebp
sbb
popa
in
push
pop
and
jns
shll
xor
ret
fdivs
mov
mov
repz
inc
xchg
enter
and
push
mov
inc
aad
rcr
dec
lret
aaa
cld
or
fsubs
push
stos
out
arpl
mov
pop
lahf
sarl
pop
xchg
jg
rorb
fldln2
jne
out
cltd
fistl
sbb
push
lods
dec
scas
sbb
jo
addr16
jne
mov
lods
shlb
icebp
lea
outsl
lds
gs
cmp
mov
add
shll
add
popf
sbb
xor
sbb
ja
adc
add
mov
push
add
add
xlat
jecxz
clc
add
jecxz
jo
popf
jb
in
sub
mov
dec
pop
cld
jecxz
push
sbb
inc
mov
packssdw
loope
push
fists
out
or
repz
or
into
ljmp
sub
inc
movb
cmp
int
iret
insb
pop
jne
inc
je
in
pop
rcl
or
mov
or
repnz
push
mov
push
jecxz
mov
jnp
or
cmp
test
push
rol
jp
ds
mov
xor
lods
popa
add
mov
mov
dec
cmpl
lcall
enter
push
mov
and
sbb
adc
cmp
lds
adc
lods
pop
inc
sahf
mov
xor
insl
sbb
fisubrl
add
inc
or
outsl
mov
sub
jecxz
pusha
std
in
mov
scas
cwtl
push
pop
lock
loop
sub
leave
xorb
mov
mov
mov
sbb
jnp
std
push
rolb
mov
mov
sbb
cwtl
xchg
inc
push
xchg
jne
sub
or
fwait
jns
push
cmp
sub
out
pop
mov
mov
das
mov
out
pop
sti
in
add
pop
mov
das
imul
add
pop
sbb
adc
push
xchg
lock
hlt
add
mov
push
jl
bound
lea
out
in
mov
dec
jo
sar
mov
mov
mov
mov
sbb
pop
mov
pop
sub
test
sbb
adc
mov
pop
dec
or
dec
ds
mov
aas
outsl
xor
mov
inc
push
cmp
and
mov
jmp
dec
lods
dec
sbb
and
push
pop
cmp
xchg
jg
sub
movsl
outsl
out
test
sbb
adcb
xchg
stos
inc
xor
ds
push
arpl
cmp
gs
in
adc
jp
add
scas
out
scas
cmp
mov
pop
test
stos
stos
mov
fdivl
cmpsb
into
push
loop
xchg
xor
cmp
in
sub
add
xor
dec
jmp
pusha
lret
or
push
addr16
nop
in
mov
pop
inc
push
fs
add
mov
hlt
inc
int
jo
jmp
fcoml
mov
sahf
scas
insl
mov
xor
rol
mov
les
jl
cli
cmp
dec
sbb
andl
add
xor
jnp
xor
dec
or
cmpsl
dec
cwtl
sub
enter
jg
xor
mov
push
xchg
cmp
push
jmp
xchg
push
cmp
sub
in
stos
frstor
push
push
jecxz
out
push
mov
es
mov
mov
fpatan
idivl
xchg
xchg
lock
data16
pop
jecxz
jecxz
jae
xlat
lods
push
inc
inc
outsb
stos
sbb
sub
and
insl
jo
arpl
ret
insl
into
cmp
xchg
push
fwait
jp
hlt
mov
jecxz
in
fstl
xchg
fyl2xp1
cmpsb
fistps
faddl
pop
scas
lret
out
push
inc
inc
idivb
xor
ficoml
mov
jns
addb
jno
push
push
mov
jmp
movsl
mov
dec
ficompl
fists
dec
cmovle
cld
aad
out
vcvtdq2ps
or
mov
jp
sub
jno
in
xchg
jl
adc
ret
pusha
faddp
out
pop
subl
mov
orb
push
jbe
cmc
int
cmp
inc
push
mov
mov
addb
xor
xorb
or
push
ficompl
push
sarb
xchg
jmp
xor
repz
push
dec
jo
idivb
jbe
in
ds
or
xchg
mov
mov
push
jbe
lcall
pop
lods
jmp
pop
aas
or
adc
and
cs
jg
loop
js
dec
fists
fsubp
fwait
mov
jns
inc
cli
lods
repnz
cs
movsb
push
cld
je
xor
jge
leave
orb
adc
pusha
mov
push
mov
or
xor
cvtps2pi
xor
je
int
and
aam
arpl
cli
xor
push
cwtl
stos
xchg
mov
popf
ja
inc
cmp
sahf
jl
bound
test
xor
stos
addl
repz
adc
jmp
push
fstpt
inc
fcom
adc
push
pop
loopw
inc
cmpsb
loopne
pop
cmpsb
or
outsb
mov
movsb
stc
test
stc
mov
dec
or
mov
mov
sbb
js
or
jnp
mov
xchg
jno
imul
lods
xor
scas
fcomps
in
insb
data16
mov
mov
jg
aam
mov
inc
mov
call
aas
inc
stos
adc
scas
adc
cmpsb
xor
lret
bnd
mov
xlat
sub
mov
xchg
inc
gs
rcll
inc
mov
movsb
mov
xor
dec
repz
mov
inc
cmpsb
xor
adc
push
es
dec
jbe
mov
xchg
adc
jae
push
dec
push
mov
stos
sub
pop
inc
cmpsb
fnstenv
or
add
ljmp
in
mov
fsubrl
cltd
sbb
and
sbb
leave
add
mov
fadds
jmp
in
jle
sbb
mov
nop
sbb
pop
int3
test
jne
push
leave
sarl
pop
push
leave
mov
sbb
adc
pushf
nop
gs
jns
xor
loopne
mov
test
nop
addr16
adc
cmp
lea
sahf
lods
push
pop
in
loop
subb
inc
push
mov
sbb
lret
popf
ljmp
sbb
mov
frstor
pushf
aad
fcmovb
in
and
and
aaa
push
add
xor
arpl
sbb
dec
mov
mov
sbb
and
cmp
aas
movsl
lods
mov
add
push
mov
test
adc
ficompl
lahf
in
push
adc
push
fwait
out
orl
je
fnstenv
dec
jg
xchg
adc
int3
std
mov
push
movb
and
repnz
pop
add
je
loopne
push
sub
shrl
jmp
in
jae
adc
ficoml
or
pop
int
addr16
gs
inc
sbb
cmp
outsl
mov
imul
sbb
adc
jne
out
mov
xchg
test
js
adc
sbb
jecxz
iret
xchg
push
adc
xorb
push
sub
mov
sahf
int
add
in
fisubrs
fsubrs
mov
adc
add
insl
mov
or
stos
cmp
sti
loopne
negb
pop
cmp
xor
loope
lahf
add
ret
cltd
mov
push
js
dec
xor
adcl
inc
mov
mov
lcall
aad
push
mov
push
fsubs
mov
insl
jns
dec
adc
mov
shll
sbb
push
cmc
mov
cmp
xlat
pop
add
or
pushf
out
outsl
or
aas
jnp
or
lods
push
and
dec
fisubrs
jle
insl
lods
mov
jmp
adc
lods
sarl
push
loop,pn
mov
and
mov
mov
inc
add
repnz
aam
xchg
divl
xor
mov
jbe
sub
inc
add
push
sbb
adc
sbb
scas
pop
and
mov
lods
lahf
sub
xchg
jp
in
push
dec
fidivrs
push
cmp
pop
jb
fmuls
dec
ja
lock
lea
out
lods
or
idivl
in
push
cltd
jp
jae
add
adc
inc
xor
es
mov
cli
mov
ja
movsb
std
mov
pop
add
repz
and
addr16
ror
test
stos
leave
lea
cld
fiadds
jmp
mov
in
fisubl
int
shr
enter
fdivp
inc
out
cmpsb
cmp
rolb
mov
mov
movsb
shr
and
add
aam
js
jne
add
mov
mov
pop
popa
clc
pop
mov
xchg
jnp
mov
adc
data16
jmp
ss
push
cltd
rol
gs
add
outsb
enter
pusha
xchg
or
sahf
inc
iret
unpckhps
sub
sub
inc
dec
adc
jo
or
lea
in
cld
aas
dec
sub
in
mov
push
iret
idiv
imul
add
mov
pop
test
shlb
pop
xchg
cmpsb
sub
insb
fmull
int
imul
sub
pop
loopne
repnz
mov
mov
jge
jns
cltd
sub
fdiv
adc
aad
mov
fwait
jne
ss
mov
jmp
adcl
mov
cmp
mov
shl
xor
mov
add
jbe
or
adc
jno
xor
xchg
xchg
ja
fsubrl
or
arpl
outsb
cltd
ljmp
sbb
les
nop
scas
jmp
push
mov
dec
xchg
bndldx
in
dec
pop
or
cmp
adc
ljmp
lods
loopne
dec
insl
popf
mov
seta
xchg
push
mov
int
out
push
cmc
mov
xchg
sbb
inc
mov
sbb
out
das
cld
jo
sti
push
xchg
inc
jne
xchg
push
int3
dec
outsl
cmc
loope
movsl
push
je
popa
lret
mov
mov
lea
jne
ja
frstor
lret
pusha
popf
adc
stos
pushf
and
xor
mov
sahf
out
lret
lahf
lods
pushf
fimuls
arpl
mov
ret
popl
push
dec
mov
and
inc
xchg
data16
out
or
rol
js
sub
ds
cmpsb
fwait
test
dec
loop
in
push
jp
mov
pop
out
testl
ja
inc
fdivrp
aas
xchg
les
mov
ss
and
fists
in
pop
mov
pop
xchg
jl
ret
subb
mov
pop
mov
cmp
adc
out
movsb
aad
in
mov
mov
dec
std
sbb
outsb
shl
sbb
push
std
push
das
mov
push
lea
fldl
cmpsb
adc
gs
lds
lret
inc
dec
adc
lea
les
je
xchg
rolb
dec
jg
dec
mov
jo
jbe
xchg
notl
push
rep
jmp
ret
push
lods
push
push
ljmp
dec
sahf
adc
xor
sahf
mov
jb
jecxz
mov
xchg
outsb
pop
hlt
pop
jl
mov
mov
sub
in
fidivrs
add
and
inc
mov
add
scas
add
xor
imul
adc
add
inc
push
adc
lods
add
clc
rcll
mov
inc
fwait
outsl
sub
fdivrs
push
loopne
cwtl
jg
out
rcrb
mov
pop
xchg
and
push
repz
std
rcl
inc
xchg
lea
shll
sub
fcomps
push
daa
cmpsb
int
nop
xchg
push
data16
std
jbe
mov
pop
repnz
inc
mov
pop
and
adc
push
sub
dec
notb
sub
mov
cmp
xchg
or
jp
push
mov
shll
shll
sub
lods
cmp
out
mov
adc
daa
test
ss
gs
bound
push
pop
rcl
das
stc
mov
mov
push
xchg
rdmsr
out
mov
push
lcall
push
adc
stos
or
push
repnz
lods
pop
lcall
mov
in
pop
loope
xchg
fstpt
lods
sbb
movd
into
not
dec
outsb
cltd
dec
data16
pop
dec
add
aam
sbb
and
ljmp
add
jl
leave
mov
cmp
lcall
sbb
xor
int
or
adc
mov
loopne
cmp
pusha
loope
mov
mov
pop
dec
roll
push
sbb
add
or
inc
mov
test
pop
inc
dec
dec
ficompl
pushf
test
decb
push
inc
or
pushf
aam
insb
xor
enter
inc
mov
fildll
popa
cmp
add
rcl
pop
cmp
xlat
add
dec
outsl
cmp
test
mov
sub
mov
jo
iret
jnp
in
pop
dec
dec
jne
ret
pop
dec
rorl
or
push
shrl
repz
xlat
push
or
jne
aad
or
lahf
fildl
jnp
sub
data16
sbb
push
clc
out
mov
les
mov
cmp
jecxz
sbb
lock
cs
test
sbb
popa
adc
xchg
xor
lret
pop
repnz
mov
jle
mov
pop
xor
mov
adc
cltd
dec
xchg
adc
mov
stos
mov
repz
adc
push
bound
mov
fs
xor
push
jae
cmpl
pop
pop
jno
jne
dec
pushf
or
inc
xchg
mov
stc
hlt
jle
xor
leave
pop
or
cltd
push
dec
ljmp
or
cmp
fsubs
xchg
movsb
add
adc
dec
call
ror
mov
xor
pop
lods
xor
sub
cmp
mov
mov
push
xchg
mov
insb
mul
fbstp
sbb
fwait
xchg
outsb
in
std
push
sub
clc
arpl
and
fcmovnu
in
sbb
aam
push
aaa
addr16
cvtps2pd
ror
push
jae
inc
lret
repnz
in
jbe
add
in
adc
repz
adc
scas
popa
cltd
xchg
sbb
imul
cmpl
adc
ljmp
push
fcmove
mov
sub
pop
fstpl
imulb
test
pop
sbb
dec
pop
ljmp
and
mov
jb
or
fistps
add
xchg
add
movsb
test
arpl
xor
test
pusha
cwtl
repz
mov
pop
ds
push
popa
and
rolb
xor
mov
pop
cmp
or
arpl
cmp
cmpsb
push
push
pop
xchg
push
push
xchg
outsl
add
jp
dec
ljmp
sub
mov
jnp
pop
lahf
dec
mov
in
setge
add
jecxz
lahf
mov
hlt
lahf
mov
mov
xor
ret
dec
hlt
inc
punpckhbw
or
popa
gs
xor
hlt
or
rorl
fiaddl
mov
pop
xorl
mov
jbe
jae
popf
ss
mov
cmp
cld
mov
sub
test
jnp
lea
jo
dec
leave
and
lcall
enter
sbb
add
sub
sub
inc
and
xor
add
ret
mov
outsb
pushl
sub
leave
add
aas
lods
out
xchg
ljmp
mov
mov
repnz
dec
mov
jnp
push
es
mov
rcrb
adc
add
lea
inc
lea
dec
stos
jno
and
enter
or
pusha
pop
rcl
addr16
fiadds
or
mov
xor
sbb
sub
mov
mov
or
out
jnp
daa
sub
cli
stos
stc
negb
dec
rcll
inc
jbe
or
jae
mov
inc
insl
rcrb
adc
or
add
mov
call
push
push
or
mov
ds
loopne
addl
gs
pop
scas
inc
push
mov
dec
mov
jp
roll
arpl
adc
cmpsb
sahf
jg
pop
fsubs
movsl
cmp
push
mov
lods
mov
insb
add
ror
mov
lea
mov
imul
sti
repnz
and
enter
mov
js
push
mulb
into
jno
or
int
mov
and
fs
mov
jle
cmc
inc
and
out
scas
jo
mov
pop
mov
xor
fldt
pop
aas
insb
fwait
add
outsb
dec
mov
arpl
aad
jle
sub
popa
dec
das
pusha
add
xor
inc
andl
mov
aas
aaa
mov
cmp
dec
adc
mov
mov
aad
movsl
jmp
xor
scas
movsb
lcall
call
call
inc
mov
das
inc
movsb
pop
xchg
xor
sti
cmp
push
cli
lret
pop
cltd
pop
cmp
mov
push
sbbl
mov
cld
inc
xor
cmp
jnp
stc
ss
stos
push
mov
dec
mov
mov
pop
cltd
push
sbb
sub
ret
cmpsb
xchg
sub
sti
in
mov
fwait
jne
xor
pop
sub
fdivs
gs
pop
shl
or
imul
in
jge
cld
mov
mov
push
mov
push
xor
test
jae
movl
sub
scas
in
std
cmp
or
pop
xor
adc
cmp
mov
test
and
add
cmp
xor
negb
xchg
addr16
xchg
sti
stos
dec
add
jle
xlat
pop
cmp
xor
adc
jbe
mov
lock
xchg
and
daa
or
lret
rcrl
fildl
adc
cmpsb
mov
sbb
ret
addl
sarl
out
imul
xor
ljmp
int3
in
test
out
sbb
lret
add
inc
jle
imul
flds
pop
aam
fnsave
cmc
dec
aas
lea
fsubp
subb
sub
inc
pop
sbb
arpl
and
shl
pop
add
inc
or
daa
push
imul
adc
fnsave
mov
jmp
mov
push
jl
xor
mov
push
xor
cmpsl
cmp
pop
in
shl
add
or
jb
xor
in
pop
lret
testl
fwait
ljmp
leave
xor
into
jo
callw
sub
nop
out
jmp
imull
sub
imul
scas
mov
xchg
lds
mov
pop
inc
int3
add
jmp
lock
xchg
xor
sti
dec
cmpsb
push
mov
mov
imul
cmp
daa
jnp
push
mov
xor
cltd
fsubp
or
movsl
sbb
pop
xor
out
mov
loope
push
push
cmp
aad
and
pop
pop
inc
mov
cld
dec
nop
inc
inc
mov
femms
and
ljmp
adc
and
fadds
loope
cld
cmp
and
push
stos
shlb
xorb
test
icebp
ljmp
lahf
mov
jns
mov
mov
sti
ss
sub
jge
and
jnp
loope
aad
std
jge
sbb
fmul
xorl
loope
in
test
out
cmp
insl
inc
pop
ss
dec
sbb
aad
inc
jne
xchg
dec
jle
xor
sbb
inc
stc
pop
and
lods
aad
add
mov
leave
dec
popl
imul
rcll
jmp
movsb
sti
sarb
cwtl
fsubs
jle
push
cmpsb
and
push
jns
push
inc
ljmp
mov
inc
lret
jmp
sub
mov
jp
fmuls
xlat
xchg
and
xchg
push
fs
or
gs
jo
jbe
xchg
jle
add
into
aaa
mov
dec
scas
adc
inc
aam
push
push
insb
xor
mov
push
xor
stos
jmp
cmp
mov
fnsave
pop
imul
insb
xor
mov
rcll
ljmp
cmpsb
mov
push
mov
enter
or
pop
mov
mov
jl
addr16
lret
int3
sbb
test
mov
sub
inc
mov
lds
jae
and
dec
jl
les
loop
or
push
inc
or
adc
push
rcr
out
and
adc
daa
adc
in
shrl
test
lcall
addr16
lods
das
faddl
cmp
lret
cmp
cmpsl
adc
sub
jge
push
inc
icebp
scas
or
jl
das
and
cmp
pop
pusha
jmp
sbb
mov
dec
rorb
in
add
pop
icebp
mov
xor
or
mov
int
fs
outsb
xor
aaa
ss
cmp
shlb
out
sub
xchg
or
data16
fadds
scas
ss
inc
mov
lods
out
ffree
sub
into
xor
fldenv
jbe
push
sahf
icebp
xchg
xor
dec
adcl
hlt
mov
fsts
lcall
xchg
aam
arpl
pop
and
lcall
dec
js
cld
ret
xor
mov
cmp
bound
lcall
and
out
adc
and
out
mov
xor
and
call
jl
sar
test
jno
jno
jecxz
mov
mov
test
mov
inc
adc
xor
rorl
lds
inc
cli
and
or
sbb
inc
scas
cmpsl
cmp
push
add
in
jne
or
mov
sub
outsb
push
dec
or
pusha
add
cmp
cld
cmpl
fisttps
in
incl
add
lods
pusha
je
add
cmp
xchg
or
out
aam
gs
testb
push
push
add
inc
insl
cwtl
pop
in
testb
arpl
outsl
std
mov
mov
mov
lods
in
sbb
xor
pop
dec
cs
mov
sbb
push
cmpsl
or
or
ret
sbb
test
out
fimull
or
bnd
icebp
daa
cmp
cmpsb
mov
int
cli
out
jl
movb
clc
mov
mov
loop
call
stos
pop
ret
ljmp
stc
movq
repz
lods
pop
lods
enter
cld
je
ret
inc
loopne
aam
in
clc
outsl
stc
outsl
adc
ss
jbe
dec
xor
test
ficomps
arpl
adc
and
data16
scas
adc
notb
and
adc
int3
ficoml
sbb
mov
add
cmpsl
cltd
mov
fs
jg
and
lahf
cmc
sahf
push
mov
dec
jo
ds
adc
lods
loopne
sarb
push
jno
dec
enter
repnz
or
cmp
mov
add
jg
mov
jns
xchg
push
adc
inc
rcr
jno,pt
mov
sbb
insb
xor
fwait
mov
mov
lahf
in
or
cmp
cmp
mov
push
jne
xchg
shlb
lret
push
cmpsl
lret
mov
popf
std
and
into
addr16
push
cwtl
push
ss
mov
and
scas
bound
orl
outsb
xchg
decb
fildll
jo
int3
outsl
arpl
push
jmp
mov
std
adc
lods
ja
shlb
xor
xchg
pop
mov
push
cmp
xchg
mov
jge
or
jbe
sub
aaa
xchg
in
mov
add
negb
or
jne
xor
data16
xor
sub
popaw
je
stos
outsl
popa
pop
bound
jnp
mov
cmp
test
xchg
sbb
pop
cltd
or
pop
and
pop
leave
sub
and
aaa
mov
outsb
push
mov
lds
pop
arpl
jnp
mov
mov
xchg
pop
xchg
fstps
add
xor
rolb
mov
flds
xchg
inc
ss
adc
mov
daa
pop
sbb
adc
popa
icebp
dec
push
fcomi
sbb
incb
repz
jns
push
jno
loop
mov
sbb
add
push
xchg
push
in
push
and
inc
lret
sbb
ret
fsubp
adc
fidivl
cmpl
mov
aaa
cmp
leave
push
mov
mov
das
and
push
fimuls
loop
fistpl
leave
pop
imul
pop
cld
sti
cli
cld
out
stc
ljmp
dec
rcll
pop
cmp
popf
and
aaa
scas
andb
les
pop
loop
add
pop
mov
idivl
pop
std
jl
fmuls
cmp
repz
dec
fisttpll
adcb
push
ljmp
xchg
scas
daa
test
dec
mov
mov
pop
or
adc
adc
lret
int
dec
cmp
ja
dec
les
xchg
xor
loop
xchg
jl
adc
mov
or
sahf
and
sbb
aas
test
fsubrs
push
dec
rorl
dec
in
inc
jb
fwait
dec
push
sbb
add
repnz
xor
sbb
and
fs
pushf
add
ss
out
adc
orb
sti
xchg
mov
aad
xchg
xchg
outsl
aaa
ss
push
mov
shrb
xor
push
leave
jnp
sbb
and
clc
or
testl
hlt
ja
jo
jb
fs
lds
mov
inc
rolb
xacquire
push
inc
out
arpl
sbb
or
leave
popf
or
cli
add
hlt
cmp
lock
xchg
dec
mov
into
pop
imul
push
pop
lcall
fst
push
aad
fs
pop
aad
xchg
test
inc
xlat
push
ret
jo
mov
das
loop
mov
push
popf
in
fnsave
add
xor
inc
lret
push
call
adc
mov
test
jo
andb
sbb
xchg
xor
ds
inc
rorb
cmp
inc
jl
sbb
js
nop
mov
daa
lods
xor
cmp
outsl
lret
movsb
fists
push
pop
mov
in
rcl
inc
or
and
cmpl
dec
testl
xchg
sbb
or
sbbl
or
out
pusha
imulb
dec
je
mov
rcrl
in
mov
cmp
ret
or
fwait
test
mov
scas
sub
hlt
lods
mov
aad
sti
pop
inc
xchg
lock
loope
pop
and
fistps
int
lcall
cld
in
fmull
data16
std
in
jmp
adc
push
stc
xor
pop
addr16
jle
loope
popf
popf
mov
scas
mov
cwtl
adc
jle
int
rclb
repnz
mov
clc
or
and
mov
fidivrs
mov
xchg
clc
movsb
mov
xor
push
adc
dec
ds
das
and
and
rcrl
push
mov
subb
pop
jg
push
add
xchg
movsb
repz
bnd
test
lret
hlt
mov
mov
jne
hlt
idiv
xor
add
aas
in
mov
pop
push
pushf
lcall
ja
and
clc
xchg
out
xchg
sti
and
imul
pop
fwait
mov
insb
vdivps
stos
xor
adc
lods
inc
adc
fisttpll
dec
xor
nop
es
cli
gs
sub
mov
mov
mov
mov
clc
push
out
test
lods
lahf
aad
movsb
test
fcmovu
push
dec
inc
add
push
shrl
popw
jl
and
je
or
push
push
push
fcompl
inc
fbstp
aad
mov
data16
add
call
aad
cmp
push
mov
fcmovu
imull
pop
push
fwait
jno
fstpt
mov
cmp
dec
fwait
nop
out
mov
dec
jg
cmp
cmp
repz
adc
idivb
mov
pop
test
leave
sarb
imul
sahf
mov
shrl
sub
sub
mov
loopne
xchg
cmp
and
test
stc
pop
mov
xchg
jnp
pop
popa
stc
mov
insb
andl
lock
cmp
sub
test
aad
mov
mov
iret
adc
sahf
xchg
pop
dec
icebp
shlb
sub
cmp
xor
xor
sbb
jb
mov
xor
inc
xchg
ss
fstpt
lock
xchg
xchg
lret
jo
iret
mov
fcmovbe
mov
xor
xchg
cmpsb
jl
aas
jecxz
jae
cmp
jmp
dec
pop
sarb
outsl
lcall
inc
cmpb
dec
imul
mov
push
jo
fcomip
or
sbb
inc
movsb
jecxz
push
pop
fucomip
aad
gs
push
std
sti
js
dec
popa
rcll
clc
xor
add
cs
pop
fsubr
add
xor
push
pop
mov
add
fs
cmp
data16
lret
fs
sti
add
xor
subb
cld
push
jo
sbb
pushf
addb
jle
iret
mov
and
pop
movsl
or
jg
in
pushf
xchg
inc
cwtl
loop
je
shr
loopne
mov
adc
inc
pop
loop
cltd
add
jno
sub
mov
les
dec
daa
mov
push
out
dec
outsb
mov
hlt
xchg
in
push
inc
enter
popa
imul
movsb
outsl
ror
lods
push
aam
cmp
mull
sahf
sahf
lret
imul
push
insb
rorl
cmpsl
repnz
aad
dec
lods
into
inc
lock
mov
adc
inc
mov
arpl
leave
bound
shll
sbbb
add
bound
mov
mov
adc
xor
sbb
dec
ret
les
es
jle
or
pop
hlt
mov
sub
pop
and
xchg
sahf
cmp
popa
mov
cmp
mov
into
das
and
sbb
pop
mov
cwtl
lahf
sbb
mov
out
daa
mov
jge
xor
mov
pushf
ss
pop
fimull
jge
sahf
push
cmpsb
cmp
cwtl
imul
cwtl
xlat
add
fisttps
lret
popf
xchg
push
mov
dec
mov
sahf
das
cmp
sahf
mov
cmp
pusha
iret
sbb
xor
dec
stos
lahf
mov
cmpl
fidivrs
leave
mov
sarb
in
mov
or
sub
pop
lods
jo
inc
arpl
and
aas
addb
jl
out
adc
fwait
repnz
cld
mov
xchg
scas
inc
lods
adc
cmp
lea
add
and
mov
sbb
mov
lret
mov
jge
hlt
int
sbb
or
sub
cmpsl
jg
hlt
mov
mov
dec
cmp
loop
fdivrs
mov
adc
shl
dec
hlt
cmp
in
sub
pop
jae
and
mov
out
aad
push
push
psubusw
push
push
sbb
je
jb
arpl
and
imul
jl
fcomps
jl
xchg
push
jmp
scas
and
shr
mov
mov
xor
pushf
push
mov
and
xor
mov
dec
test
xchg
call
sub
movsb
mov
fwait
mov
adc
into
repnz
or
xchg
push
aas
xchg
sbb
enter
sbb
clc
adcl
xor
jp
icebp
xor
cs
jl
int3
addb
in
cmc
add
filds
sbb
fists
sub
xchg
add
nop
jle
push
sti
sbb
xchg
in
jnp
or
pop
mov
mov
xor
sub
inc
sub
mov
fsubr
mov
je
pop
and
pushf
ja
jb
rorl
inc
out
inc
repnz
xorb
adc
xchg
cmpsb
lock
in
in
fs
fsub
mov
pushf
int
inc
imulb
mov
sbb
mov
mov
xchg
std
xor
cld
cwtl
notl
mov
add
js
aaa
cmpsl
out
push
imul
cltd
sarb
sub
mov
pushf
sbb
bound
aas
rcrl
jae
and
jle
mov
lock
or
cmp
testb
outsb
movb
mov
lds
xchg
and
mov
fistps
inc
andl
enter
and
ficoms
movsb
into
mov
fstl
mov
push
push
mov
call
mov
or
or
fisubl
or
mov
cmp
adc
push
mulb
fsubrs
jle
and
mov
push
cmp
add
hlt
outsb
ret
outsb
inc
cld
hlt
or
dec
stc
adcb
arpl
and
add
movsb
mov
or
xchg
pop
dec
testb
push
repnz
adc
lods
sub
js
jo
jne
flds
cwtl
insb
pop
les
add
in
leave
leave
test
xchg
popa
dec
jmp
or
xchg
xlat
lahf
lret
rcrl
repnz
push
sahf
xchg
stos
xor
incb
cmp
test
sbb
addr16
sub
mov
lea
scas
hlt
push
pop
xor
jbe
fiaddl
mov
lret
lea
cmp
test
movsl
lcall
xchg
xchg
dec
jbe
scas
lahf
sbb
mov
js
jnp
xchg
cmp
add
add
sbb
add
fs
mov
loopne
aad
inc
add
scas
mov
data16
mov
arpl
adc
jmp
aas
cmc
adcb
inc
ret
jns
fadd
or
sahf
in
sub
pop
orl
jg
pop
push
cmp
loopne
push
xorb
and
push
pop
pushf
inc
sbb
test
mov
clc
and
inc
xor
iret
loop
js
adc
mov
adc
call
lock
xchg
pop
adc
mov
pop
data16
pushf
sbb
mov
lahf
shrl
push
sub
iret
sahf
inc
add
mov
pusha
add
movsb
and
outsb
mov
movsl
test
les
cwtl
and
jns
mov
push
sahf
push
cli
pushf
out
inc
push
mov
fisttpl
sub
xchg
jno
and
pop
ss
xor
add
sahf
pop
outsb
mov
test
inc
addr16
stos
frstor
adc
inc
jle
sbb
and
mov
arpl
call
pusha
lcall
lock
xchg
push
sub
inc
cmp
jl
inc
add
pop
sbb
push
stc
fdiv
daa
pop
movsl
sub
push
cmp
mov
sub
popf
in
arpl
jge
mull
dec
pop
pop
and
cmp
sahf
mov
std
jge
mov
loopne
push
mov
cld
jmp
lahf
lds
js
icebp
lcall
push
bound
ret
or
and
jl
xchg
push
in
pop
int
pop
imul
nop
daa
into
dec
jp
mov
mov
push
add
daa
shll
rclb
repz
cmc
mov
and
mov
jecxz
mov
add
adc
je
insb
inc
xor
clc
add
test
shlb
xchg
mov
pushf
or
clc
bound
sbb
int
rcll
inc
test
loope
pop
pusha
inc
xchg
shll
xor
je
cmpsl
jmp
sub
adc
dec
xorl
xor
push
xchg
push
cs
jno
pop
jo
imul
push
data16
sarb
daa
stos
cmp
mov
popf
lcall
scas
adc
add
inc
jno
aaa
mov
inc
or
jmp
jmp
sub
iret
vandps
fwait
in
push
dec
push
imul
popa
pop
pop
xor
ret
jno
xchg
scas
movsb
nop
andl
jae
mov
cld
cli
gs
insb
push
xchg
sbb
pop
dec
inc
xchg
out
sub
data16
in
mov
inc
sub
mov
data16
dec
pop
pop
not
gs
icebp
mov
insb
xor
xlat
fwait
xchg
push
pop
loop
gs
loopne
push
imul
int
es
cmp
adc
stos
inc
inc
jmp
jo
mov
adcl
fisubrl
iret
aam
aaa
out
scas
sub
test
cmp
lds
push
jmp
cltd
sub
and
mull
into
sbb
shll
test
xor
push
or
pop
xlat
dec
and
data16
jb
mov
daa
sbb
enter
add
cwtl
mov
or
addr16
cld
jg
rcrl
pop
mov
xor
pop
jecxz
ds
jae
and
jnp
ljmp
push
mov
mov
inc
loop
mov
fcompl
mov
xor
pop
jae
push
pop
outsl
push
push
xchg
jmp
test
or
movsb
cmpsb
push
cmp
cmp
mov
mov
pop
js
shll
out
jle
xchg
inc
inc
sub
test
mov
sbb
push
mov
sub
add
add
aaa
jp
pushf
je
xchg
loopne
mov
adc
jns
ja
adc
push
push
lret
ja
std
adc
xchg
pop
mov
pop
jge
inc
popf
sbb
cmp
icebp
jecxz
fs
pop
fsubrl
fnsetpm(287
jmp
repnz
xchg
out
int3
repnz
add
adc
shlb
push
sbb
and
outsb
push
xchg
ja
cmp
sti
incl
pop
out
or
push
mov
outsl
add
lret
push
or
aas
jae
scas
sbb
pop
fs
cmp
adc
pop
icebp
cmp
sbb
jmp
pushf
pop
xor
pop
insb
into
jl
cmovb
add
div
push
addb
cld
xor
mov
bnd
inc
xchg
cli
rcl
add
jbe
dec
scas
sub
jnp
je
push
mov
bound
out
mov
inc
xor
mov
mov
pop
stos
pop
push
loopne
pop
loopne
sub
ret
icebp
jns
loope
movsl
jge
sbb
push
ja
sbb
mov
jmp
inc
int3
out
lea
in
jnp
fs
test
and
or
dec
inc
sub
xchg
scas
sbb
cmp
pop
dec
les
push
push
adc
push
cmp
dec
ja
push
mov
jns
ror
push
jge
mov
hlt
cld
mov
lcall
shl
or
aaa
push
push
arpl
pop
xchg
sub
mov
andl
xchg
filds
fsts
add
push
cmp
rolb
cmc
jb
imul
outsl
mov
dec
jno
push
or
mov
pop
ret
xor
jle
mov
ret
jl
pushw
fsubrl
stc
sub
cmpsl
and
pop
sub
lock
insb
lret
jg
sarl
xor
fbld
xchg
rorl
call
jb
das
jmp
cmpl
jecxz
outsb
les
jbe
mov
sbb
ljmp
sbb
xchg
stos
ret
fidivrl
xchg
insl
aam
push
scas
repz
test
adc
movsb
or
std
xchg
sub
xchg
repz
les
push
clc
pop
jno
ja
xchg
xor
scas
cmpsb
mov
lahf
dec
and
ss
cmpsl
push
mov
inc
dec
adc
adc
add
jo
xor
dec
je
adc
push
jb
cmp
and
int3
cmp
pushf
pop
or
ljmp
dec
inc
push
insb
dec
jecxz
xchg
cld
mov
test
and
adc
out
dec
lds
jmp
mov
scas
addb
pusha
aad
dec
dec
push
jmp
mov
mov
cli
add
test
js
mov
jmp
enter
cmpsl
sub
jecxz
or
pushf
cli
sbb
sub
nop
std
test
and
pop
imul
jmp
sub
or
jl
out
iret
fld
xor
mov
jb
add
call
and
ss
jno
cmpsb
repnz
insl
movsb
sub
shll
push
dec
fcompl
clc
xchg
cltd
mov
scas
add
imul
mov
arpl
and
sarb
icebp
icebp
push
stos
add
fnstenv
sub
arpl
cmp
jb
bound
inc
rcrb
cmp
mov
dec
push
mov
xor
mov
outsb
adc
stos
jle
xchg
cltd
mov
xor
adc
mov
dec
loop
mov
into
sbb
inc
ficompl
je
out
push
notb
jnp
sub
or
and
push
mov
pop
lock
fcoms
mov
mov
out
pop
adc
call
into
cmp
mov
mov
jo
sub
lods
loop
dec
jecxz
lods
out
pop
and
dec
testb
pop
jg
fbld
pushf
push
xchg
xchg
fsubrs
or
adc
cmpsl
mov
out
out
mov
fcomps
lret
xchg
in
dec
loop
sbb
mov
test
push
inc
nop
xor
sub
jns
out
loope
mov
sbb
rorb
adc
sbbl
stos
gs
cmovne
or
ret
dec
and
loope
pop
inc
les
aad
ret
out
cmp
aad
mov
xorb
mov
jl
mov
or
add
mov
mov
shr
and
inc
mov
mov
cwtl
push
pop
add
adc
jnp
in
gs
mov
insl
mov
mov
dec
rorb
int3
ja
xchg
jae
int
add
and
mov
and
xor
pop
dec
cmp
idivl
adc
jno
icebp
dec
xchg
into
lods
mov
out
incl
data16
enter
nop
inc
in
mov
outsb
sbbl
mov
test
in
xor
mov
mov
fildll
xchg
inc
rcrb
mov
stos
mov
jecxz
push
jb
iret
jge
mov
clc
roll
shlb
fisubrs
dec
and
xchg
outsl
xchg
cmp
add
inc
mov
testl
divb
and
sbbb
mov
ja
scas
call
test
xchg
mov
mov
shrl
gs
xchg
cmp
jge
fnstcw
shr
push
xor
sbb
mov
cmp
repnz
jmp
hlt
or
mov
mov
dec
mov
enter
push
or
pop
xorb
jno
lods
lcallw
cltd
xchg
xchg
les
adc
ja
add
pop
enter
cwtl
or
jg
pop
out
in
cwtl
mov
add
cli
les
mov
sub
add
adc
push
cwtl
dec
push
arpl
psllw
out
loop
rclb
push
imul
or
xchg
push
xchg
sti
jecxz
xorl
jno
fiaddl
addr16
ret
aaa
pop
pop
popf
dec
icebp
cmp
mov
int
repz
push
inc
mov
test
in
mov
pusha
mov
jecxz
adc
out
iret
daa
pop
int
pusha
pushf
add
roll
mov
ds
addr16
ret
mov
mov
les
ret
sahf
imul
inc
and
dec
inc
or
ds
push
or
lahf
mov
jg
fcomi
or
je
push
push
test
dec
cs
mov
sbb
pop
clc
adc
add
rorb
ja
cmp
cmp
decl
push
dec
out
roll
mull
adcb
cwtl
outsl
lret
bound
mov
fisubrl
gs
loopne
shll
out
int
sub
push
xchg
push
das
pop
jae
dec
pop
mov
xchg
outsl
es
mov
push
dec
cmpsl
aaa
and
jbe
cwtl
jnp
xor
mov
insb
pop
cmpsl
mov
flds
cld
cs
out
cwtl
adc
and
pop
inc
scas
pop
lcall
andl
es
jo
les
xchg
mov
in
and
push
subb
dec
adc
sub
mov
lock
enter
mov
out
mov
imul
std
xchg
dec
mov
sbb
hlt
nop
es
push
flds
dec
cmp
out
pop
sahf
adc
loop
adc
inc
in
or
push
lods
push
dec
movsl
or
push
fnstenv
in
adc
xchg
ret
or
negb
push
sbb
or
or
jbe
mov
mov
dec
das
dec
inc
xchg
adc
fwait
xchg
add
lods
jns
pop
mov
jo
in
inc
mov
sub
imul
pop
in
dec
cmc
dec
xor
repz
add
dec
sub
popa
xor
jnp
decb
xchg
sub
cmp
jo
sti
push
jecxz
shlb
test
sub
and
mov
ret
ss
ljmp
push
sahf
lods
dec
ds
repnz
mov
mov
inc
std
iret
xchg
jg
and
movsl
les
mov
sbb
xor
sub
mov
add
jmp
fnsave
push
mov
or
mov
sbb
push
nop
lea
mov
bound
sbb
ja
xchg
inc
cltd
stos
imul
push
movsb
mov
pop
adc
popf
popf
add
dec
das
adc
pop
pop
pop
sub
negb
icebp
inc
enter
lds
ret
push
mov
adc
mov
adc
mov
loopne
out
push
inc
mov
or
push
mov
mov
inc
loope
pop
stc
mov
in
jb
cmp
inc
mov
scas
pusha
and
push
dec
adc
and
inc
cmc
adc
jae
jmp
aam
mov
sbb
testb
inc
loope
or
push
push
lcall
sbb
mov
xchg
push
data16
pop
or
xchg
lock
stos
je
pop
jbe
cwtl
in
inc
jp
mov
test
push
in
mov
xor
xchg
inc
mov
cwtl
mov
sahf
in
cmpsl
andb
ja
jecxz
jg
inc
and
mov
test
xor
inc
or
bound
jle
xchg
sub
xchg
push
fldln2
inc
push
fdivrp
xchg
push
lods
lret
push
push
and
test
js
push
adc
and
es
cmp
mov
lret
sub
sub
lret
sbb
out
aas
lods
jmp
cmpsl
push
cmp
jo
xor
xchg
rol
adc
testl
sub
outsb
sti
out
push
mov
push
cli
sbb
jg
cmc
pop
or
hlt
jbe
cmp
push
push
or
jne
mov
dec
ret
mov
rorb
cs
xchg
push
dec
ret
aam
sti
mov
mov
call
ljmp
cmc
jmp
jecxz
jl
ja
stos
pop
ja
sar
int
or
push
pop
jg
movsb
mov
repnz
and
adc
cmp
dec
xor
jb
icebp
push
fisubs
dec
mov
or
mov
cltd
add
mul
pop
sarb
sbb
pop
mov
lret
dec
ret
bound
lcall
adc
call
sahf
sbb
mov
sahf
repz
fidivs
jmp
push
mov
insb
ret
insb
mov
push
cld
loop
testb
xchg
imul
fisttpl
push
jl
out
jp
arpl
and
imul
int
add
movntq
aaa
ljmp
mov
mov
lds
add
testb
aam
dec
pop
mov
jl
jle
test
or
imul
jmp
cmp
mov
sub
cmc
clc
or
sub
pop
push
pop
movsl
out
fimuls
dec
in
jl
mov
push
mov
loop
cmp
fwait
pop
push
adc
repz
mov
dec
xchg
ja
jle
fmull
push
bound
jb
pop
pop
adc
lret
out
rcll
mov
aas
jno
adc
out
clc
pop
in
add
and
ret
add
into
sbb
into
push
jg
loop
xchg
push
lcall
insb
cmp
aas
pushf
pop
sbb
jno
or
dec
pushl
mov
push
aaa
shr
stos
arpl
xchg
inc
fildl
or
mov
gs
shld
xorl
add
push
in
mov
aaa
xlat
fbstp
es
popl
mov
int
cmpsl
mov
sarb
roll
sahf
and
and
sub
outsl
xchg
ljmp
stos
push
stos
das
loopne
out
push
cmp
enter
xchg
fistpll
jle
sub
pop
aam
pop
mov
or
dec
jo
imul
js
or
rcl
fs
bound
shll
bound
insb
in
and
pushf
and
dec
test
lds
dec
adc
test
cmp
add
push
xchg
arpl
repz
loop
ds
xchg
xchg
or
inc
loope
in
adc
mov
int
mov
jge
xchg
lds
sub
sti
in
inc
or
sub
mov
mov
loopne
aad
pop
repz
add
and
jb
sub
popa
or
add
jns
shrb
mov
xchg
or
in
and
lea
pusha
push
mov
test
pushf
outsl
xchg
sub
out
sub
mov
and
xor
aam
mov
lods
xchg
push
sbb
and
js
add
shrb
cmp
jo
jg
aas
and
fcoml
mov
mov
sbb
imul
xchg
lods
mov
mov
add
pop
popa
xchg
fcoml
in
adcb
jb
fsubr
inc
inc
jmp
sbb
mov
shlb
out
push
test
jp
jmp
push
loope
cmp
mov
fsubs
mov
aad
nop
mov
and
xchg
out
or
mov
fstl
jbe
sbb
dec
push
adc
and
and
sub
lahf
das
cmp
loopne
fadd
dec
push
jns
xchg
pop
xchg
mov
dec
cli
clc
jne
bound
ficomps
push
add
and
aas
setno
jmp
jle
outsb
lea
adc
test
cmp
int
pop
fwait
pop
cli
imul
ss
xchg
jp
sbb
cwtl
mov
mov
xchg
xchg
rol
dec
mov
add
stos
enter
call
movsl
call
fidivrs
mov
cmp
fnstcw
jp
shl
cmp
and
sbbl
dec
add
repnz
inc
inc
pushf
inc
mov
shrb
jnp
vunpcklpd
inc
cmp
push
test
mov
adc
mov
pop
jmp
mov
adc
sub
sbb
int3
lret
iret
aas
mov
loopne
outsb
popf
adc
push
mov
push
call
cmp
lds
push
xchg
xchg
sbb
adc
std
push
pop
dec
shlb
cmpsb
outsb
addr16
mov
gs
inc
rorb
xor
xchg
add
in
inc
add
cmp
jle
jnp
cmpsb
and
cmp
lret
bound
stos
mov
rorb
test
fildl
into
and
popa
fstps
cld
rcr
leave
push
inc
outsb
lcall
scas
fmul
fwait
insb
out
push
jns
movsb
and
negb
loope
sti
pop
lret
das
in
pop
adc
shl
addr16
dec
jo
je
aam
scas
cmp
lock
cs
dec
push
xor
cmpsb
loopne
in
lret
inc
test
or
xor
push
jg
lcall
mov
int3
cld
and
cmp
xchg
jp
repz
rcl
xchg
jne
mov
aas
sub
dec
lret
nop
jns
xchg
inc
insl
xchg
or
push
cmp
pop
fwait
lret
xlat
add
xor
pop
pop
cmp
fisubrl
std
test
movb
mov
out
addb
enter
xor
pushf
daa
cs
dec
or
pop
mov
imulb
movsb
testl
dec
mov
int3
add
xor
psrlw
or
call
arpl
repz
xchg
inc
jge
das
sbb
mov
inc
in
mov
jmp
ja
jmp
addb
xor
adc
mov
mov
cmp
xchg
out
scas
pop
add
mul
dec
push
pop
sbb
xchg
dec
cmp
insb
lock
fsubl
pop
dec
imul
sti
adc
mov
xchg
add
ja
aam
ret
mov
sbb
icebp
adc
shlb
in
mov
lock
cld
xor
cmp
dec
pop
pop
popf
sub
into
insl
ja
stos
fwait
sbb
fistps
push
mov
dec
ljmp
aaa
xchg
mov
repnz
outsl
xor
lods
outsl
iret
inc
fbstp
inc
mov
xchg
insb
mov
or
inc
roll
inc
jno
lds
adc
clc
cli
and
fidivrs
mov
dec
xchg
gs
jo
xor
mov
mov
les
cwtl
dec
es
push
jle
loope
in
nop
ficoms
xor
pop
push
in
out
jecxz
xlat
push
push
test
push
in
test
mov
stos
dec
clc
test
mov
push
clc
mov
mov
pop
jg
leave
xchg
cltd
mov
cmp
inc
iret
mov
mov
mov
shll
ret
enter
aaa
fs
mov
les
adc
and
enter
sahf
push
push
pop
aaa
test
sbb
and
aas
stc
inc
rorl
lret
sub
mov
popf
and
cmp
jmp
sbb
jae
pop
dec
jmp
fwait
jno
xchg
jmp
jge
insl
fucomp
xchg
inc
inc
icebp
test
sbb
shr
icebp
lcall
test
gs
ret
pop
mov
pop
cmp
lods
dec
push
mov
sbb
test
repnz
mov
jo
xchg
stos
xor
jnp
mov
and
mov
xor
push
sbb
test
xor
popf
dec
dec
enter
pop
aam
lds
enter
sarb
pusha
push
jae
std
fistpl
dec
push
das
inc
mov
mov
pushf
jno
cmp
fsubrs
mov
or
pop
add
fsubs
ffree
add
mov
stos
adc
push
xchg
fucomp
dec
cmp
adcb
ret
fsubl
clc
xchg
push
add
stos
ret
sahf
mov
daa
push
xlat
mov
sub
mov
gs
rclb
jp
push
das
add
xchg
sub
mov
lods
jge
cmp
cmp
push
jne
adc
shlb
mov
sbb
cmpsb
xchg
mov
push
dec
pushf
lock
sbb
jnp
or
mov
orb
dec
and
mov
add
adc
insl
cmp
inc
pop
mov
outsb
stos
or
mov
rclb
idivb
subl
popa
or
lea
add
pop
fsubl
shr
mov
dec
xchg
jg
adc
ret
out
sub
pop
fcmovbe
in
mov
js,pt
pop
iret
int3
xchg
mov
mov
ss
and
xor
mov
test
and
or
sub
cli
mov
in
lods
arpl
add
sarb
movsl
xchg
bound
sub
in
fsubl
xor
fstps
cmp
cmp
addl
xor
aas
sub
pop
push
icebp
data16
in
test
push
dec
imul
sub
cmp
and
mov
xchg
das
xchg
ja
lahf
inc
iret
mov
iret
imul
pop
mov
sbb
pop
fisttps
push
push
mov
out
mov
inc
mov
pop
in
xchg
daa
nop
mov
dec
inc
adc
fmulp
scas
fildll
sahf
addr16
cmp
pop
subl
push
in
mov
push
add
pusha
inc
xchg
xchg
adc
icebp
hlt
addr16
mov
jge
cmp
fwait
xchg
cmpl
and
adc
jl
add
push
movsb
mov
loope
jne
orb
in
ljmp
adc
bound
js
out
jns
fadd
sbb
mov
hlt
jg
cmpsl
pop
sbb
sbb
or
mov
dec
cmpsb
iret
shl
mov
add
out
add
in
in
fbstp
jecxz
movsb
mov
cwtl
std
jae
cltd
xchg
loop
dec
xchg
aam
lret
jmp
sti
dec
mov
movsb
mov
push
stos
pop
sbb
loope
icebp
sbb
fcoms
in
push
test
push
jmp
bound
pop
jo
test
sbb
cmpsl
mov
jbe
int3
push
mov
iret
aad
push
pop
xor
inc
iret
mov
adc
fldl
sub
clc
fistpll
fcmovu
in
ss
pushl
add
adcl
adc
clc
sahf
and
pop
enter
ja
outsb
xchg
mov
pop
push
int
fwait
ret
imul
ss
add
outsl
sbb
ss
inc
cli
adc
dec
push
fsubrs
loopne
addb
pop
stos
imul
xchg
into
dec
mov
cld
pushf
std
add
sarl
into
push
jno
das
test
dec
daa
loopne
jb
and
call
pushf
ljmp
ret
push
daa
dec
rcr
push
jg
xlat
mov
or
cmp
mov
fcomi
out
fisubl
or
and
and
sbbb
mulb
in
in
lock
mov
addr16
dec
ret
dec
mov
inc
inc
xor
in
mov
dec
xor
lcall
mov
jg
test
lea
rolb
das
hlt
mov
mov
mov
push
cmp
ds
sahf
lea
and
outsb
add
enter
mov
mov
bound
jp
dec
inc
dec
in
rorl
les
cltd
sub
push
pop
add
jae
enter
mov
js
pop
mov
xchg
into
mov
jb
dec
outsb
mov
aas
orb
mov
jne
xchg
cmp
inc
test
out
jmp
test
xor
in
mov
xchg
xor
stc
dec
rep
add
add
xchg
mov
cmc
xor
sbb
mov
pop
arpl
add
inc
mov
scas
roll
test
inc
pop
mov
xchg
or
sbb
pusha
inc
je
lahf
stos
out
push
lret
aad
dec
test
and
push
aas
fimull
dec
imul
adc
cmp
adc
lcall
add
push
jmp
insb
decb
push
mov
leave
and
adc
mov
ficompl
sbb
mov
inc
mov
pop
jle
or
cltd
pop
dec
orl
icebp
dec
mov
into
dec
lahf
pop
fstl
mov
clc
cmp
repz
pushf
rcrl
mov
cmp
add
mov
int
xchg
dec
pushf
outsb
out
fcomp
jne
jns
xor
cmp
cld
and
movsl
add
movsb
icebp
mov
jle
adc
insb
iret
adc
mov
je
dec
push
mov
dec
inc
jg
clc
inc
in
dec
or
mov
sbb
daa
lock
pop
int
adc
iret
and
add
data16
les
push
cmp
aas
mov
scas
int
std
pushf
jg
in
push
movb
mov
and
ss
test
jno
jg
pop
mov
sarl
xchg
adc
mov
stos
int3
iret
push
imul
jecxz
xchg
jb
xor
xchg
testb
in
sub
dec
les
aad
lds
fnstenv
cmp
clc
subl
pop
fs
test
mov
scas
ljmp
push
nop
lahf
inc
jo
loope
bound
rclb
sub
mov
pop
cmp
mov
and
pop
mov
mov
icebp
pop
sti
enter
mov
mov
ret
jge
mov
sbb
bound
imul
xchg
jae
adc
pop
dec
mov
shll
jge
fdivs
push
scas
xchg
int
pop
push
mov
jle
lods
sbb
push
inc
daa
movsl
mov
dec
inc
jmp
push
adcb
push
inc
mov
cmp
sub
push
inc
mov
jno
mov
dec
pop
or
cmp
mov
jecxz
inc
xchg
std
sbbl
lret
loopne
jg
imul
faddl
adc
push
jo
sub
das
pusha
lahf
aas
sub
loop
mov
loope
cmp
jecxz
lods
adc
dec
push
popa
add
push
push
cmpsb
mov
pop
xor
imul
ret
stos
dec
adc
mov
adc
push
mov
cmpsb
mov
pop
fldt
cmp
xor
stos
cmc
addr16
mov
les
shlb
mov
cmp
add
push
or
sbb
faddl
scas
call
fstps
jnp
rcl
sub
sbb
sbb
inc
stos
ret
in
pop
sbb
fwait
lret
pop
lods
and
pcmpgtd
jb
imul
mov
xor
push
lahf
lock
std
mov
fldt
ficompl
push
mov
pop
push
mov
push
inc
lea
mov
adc
sub
lds
xor
sbb
adc
popf
jge
mov
or
lea
push
pop
lods
lock
sub
mov
rorl
data16
rep
out
jbe
clc
add
pop
jae
jge
dec
imul
out
test
int3
clc
nop
cltd
dec
or
jb
out
filds
xchg
push
lcall
negb
inc
shrl
dec
dec
movsl
jg
nop
loope
popa
gs
popa
cmp
shlb
out
mov
lock
std
pop
inc
dec
mov
arpl
sub
adc
out
xchg
ds
bound
pop
std
jno
xor
xor
dec
movsb
mov
aam
mov
les
pop
ja
pop
jne
push
outsb
in
mov
dec
test
pop
push
shlb
das
mov
mov
popf
add
shll
jl
mov
repz
xor
adc
sbb
add
popf
into
adc
adcl
push
popf
pop
dec
cmc
iret
aaa
gs
gs
aad
nop
push
test
cmp
arpl
in
orl
xacquire
out
sbb
mov
or
loop
out
pushw
jne,pt
pop
movsb
adc
xchg
push
jno
int
cmc
dec
mov
push
ret
rcll
shll
jp
call
es
jle
lods
sub
imul
mov
lret
cmp
sbb
aad
xchg
ds
lea
fldl
stos
pop
fiaddl
sub
sahf
dec
repz
cwtl
adc
popa
mov
adc
mov
push
call
mov
and
add
call
outsb
into
cmp
into
push
mov
pop
push
or
fs
movsl
adc
mov
and
xor
outsb
idivb
call
jo
xchg
fwait
scas
jo
fidivrs
ss
data16
dec
adc
icebp
cmp
js
jns
push
mov
ret
pop
fstp
lcall
cld
mov
out
xchg
push
dec
pushf
dec
dec
push
icebp
sub
inc
and
lds
add
pop
test
add
mov
and
fs
xchg
addb
out
mov
push
rclb
xchg
aas
lret
rcr
push
ficoml
nop
push
mov
xlat
ret
cld
pop
ds
es
mov
pop
sub
cmp
jmp
aas
ret
mov
inc
rcr
mov
sti
loop
lods
fists
fnstcw
cmp
cmp
cli
mov
fistpl
fdivs
movsb
ficoms
test
lret
test
dec
loop
inc
hlt
cmpsl
push
clc
stos
mov
das
cmp
cmpsl
subb
push
sahf
jne
mov
iret
ret
int3
inc
pop
cmpsb
idivl
scas
jno
pop
mov
popa
imul
sbb
sbb
cld
mov
mov
adc
int3
repz
sar
roll
sub
bnd
mov
das
mov
mov
scas
cmp
adc
push
sbb
nop
sub
adc
sub
cld
pop
and
loopne
push
push
sbb
pop
sbb
and
xlat
pop
jae
mov
add
movsl
push
jno
sub
adc
fildl
dec
add
push
cmpsb
leave
mov
lea
push
mov
and
cmp
and
lods
enter
ss
mov
outsl
movsb
xor
xor
sub
or
mov
adc
mov
jnp
fsubr
hlt
lock
loopne
or
mov
ja
mov
jno
or
cmpl
push
in
mov
out
roll
push
add
sub
fcmovne
add
lcall
fstpl
cmpsb
sbb
rcrb
pop
mov
cltd
inc
xor
rorl
xor
or
leave
stc
add
pop
mov
rcr
jg
inc
call
cmc
shlb
je
loop
mov
xchg
dec
loope
xor
sbb
add
push
push
fprem1
xchg
ss
shll
inc
fisttpll
sbb
icebp
push
test
out
aas
lods
shlb
pop
nop
jb
inc
jecxz
subps
adc
cwtl
jmp
in
and
int3
pushf
divb
fnstcw
adc
push
push
sbb
jno
fwait
jbe
adc
xchg
xor
add
addl
mov
shll
addl
loopne
pop
cmpsl
xor
faddl
insl
gs
pop
pop
in
imul
rcrl
add
jecxz
arpl
mov
cmp
fsubr
and
dec
ret
sarb
cwtl
xchg
mov
adc
int
mov
icebp
sub
outsb
shrl
ja
sbb
int3
test
mov
sbb
mov
cmpb
xchg
push
ficoms
cmp
test
jno
fsubrl
lock
jno
pop
in
pop
fldcw
or
lds
nop
sbb
mov
dec
or
rcrl
mov
ret
cltd
adc
pop
cwtl
inc
insb
data16
cmp
dec
lock
fs
adc
inc
xchg
sub
je,pn
and
xchg
push
enter
xchg
and
sub
adc
or
popa
pop
dec
dec
sub
cmpsb
loopne
es
stos
les
pushf
mov
nop
divl
and
dec
adc
inc
or
adc
in
push
ljmp
pop
push
fcoms
stos
mov
movsb
mov
int
jp
stos
jbe
cmp
popa
pop
cmp
inc
and
push
xor
insl
testl
shlb
xchg
or
cmp
int3
pop
icebp
js
or
push
inc
cmp
js
xor
bound
cmp
adc
sbb
fldcw
xchg
mov
mov
mov
and
xor
push
jmp
mov
jbe
sub
push
lock
fnstsw
and
and
cltd
inc
mov
or
add
sub
sbb
popa
jge
fstps
and
inc
jp
or
call
inc
test
subb
js
sbb
call
cmp
adc
jle
sbb
arpl
fwait
icebp
lods
ret
ja
pop
cli
mov
sub
or
jne
adc
daa
push
movsb
xlat
pop
and
adc
sub
test
sbb
jne
outsl
sub
pushf
mov
inc
fildl
adc
sub
mov
or
add
ss
nop
inc
push
test
adc
add
cmp
mov
loop
clc
popf
push
add
inc
jne
xchg
subl
adc
fidivl
cmp
push
test
je
mov
enter
pop
jmp
jl
outsb
imul
bound
loope
jo
push
jnp
insb
loope
pop
insl
mov
clc
out
lcall
addr16
add
or
add
adc
mov
mov
shl
mov
dec
repnz
into
xlat
fidivrl
int3
fs
insb
fistl
inc
mov
cli
mov
enter
call
dec
jnp
dec
iret
dec
push
or
ja
fsts
dec
out
pop
in
cwtl
shll
fs
pushf
arpl
mov
xchg
lret
je
dec
mulb
xchg
addr16
sbb
push
sti
cld
sub
mov
jnp
jge
aas
test
jecxz
dec
in
xchg
in
popa
mov
rcr
push
jle
jmp
pop
jae
incl
ficoml
jo
inc
cmpsb
adc
cmp
pop
mov
rorb
nop
fcmovb
sub
ss
dec
repz
out
ja
mov
xor
outsb
lds
xor
lret
push
push
mov
mov
mov
fimull
lret
cltd
lock
arpl
pop
mov
sar
imul
push
inc
lock
out
int3
cmp
push
ss
mov
and
mov
hlt
out
cmp
cld
xchg
inc
pop
jbe
pop
cmc
aam
inc
mov
mov
stos
pop
mov
and
ret
rcrb
adc
push
mov
mov
push
mov
adc
fidivl
cmpl
in
aad
lret
out
sbb
mov
int
push
xor
orl
mov
in
xor
das
sbb
xor
jmp
dec
inc
add
adc
cmp
xor
adc
cmp
mov
fistpl
rclb
sahf
sub
mov
jmp
cli
js
fidivrl
mov
inc
sbb
xor
ljmp
es
and
jle
xchg
test
scas
xor
ret
daa
js
jmp
sti
and
loop
mov
lods
lahf
cmp
mov
mulps
pop
xchg
push
pop
cmp
insb
dec
add
or
incb
popa
hlt
pop
cwtl
dec
aad
mov
mov
mov
movsl
push
pop
out
inc
cli
fnstenv
push
mov
adc
loop
clc
adc
inc
test
add
stos
adc
ret
ja
pushf
inc
imul
lods
leave
mov
pop
sub
scas
adc
fisubl
sbb
sbb
pop
jne
add
lods
int3
mov
outsb
mov
mov
mov
add
sub
xchg
popa
addr16
popfw
in
mov
popa
test
data16
call
or
xchg
daa
aam
xchg
fisttps
sbb
inc
add
lods
aaa
cltd
mov
cmp
mov
adc
testl
cmp
cmpsb
sub
mulb
jg
add
jo
mov
push
pop
push
mov
cwtl
ror
or
and
js
mov
ljmp
fbld
push
add
pop
out
inc
xor
clc
aaa
sbb
pop
inc
dec
pop
jns
push
aam
arpl
push
jg
fidivl
imul
sub
xchg
push
push
imul
outsb
dec
cmp
mov
ficoml
bound
xchg
imul
xchg
fwait
adc
mov
hlt
sbb
imul
mov
js
ss
jecxz
xlat
sbb
or
cmc
xchg
xchg
push
loope
jnp
stc
mov
dec
inc
int
mov
push
xor
push
dec
lock
inc
aad
mov
push
loope
or
insb
xor
fwait
sbb
add
sbb
cmpsl
int
mov
and
jecxz
mov
push
pop
cli
add
mov
pop
mov
sub
adc
jb
sbb
add
push
rcrl
cmp
push
gs
mov
pop
ret
iret
sub
cmp
xor
push
jo
out
push
daa
mov
adc
mov
dec
xor
and
sbb
cmp
jns
and
mov
leave
inc
imul
mov
and
jae
inc
add
jge
scas
or
mov
adc
stos
fnstcw
cmp
pop
imul
xchg
mov
sub
inc
add
fidivrs
es
stos
or
sbb
inc
adc
xchg
aad
xor
out
sbb
lahf
add
xchg
cmp
sbb
or
push
sbb
push
mov
adc
mov
data16
shll
cmp
adc
lahf
jne
xchg
repnz
dec
xchg
cmp
or
pop
xor
lret
xchg
jg
data16
push
fs
out
dec
mov
jp
xchg
insl
je
adc
outsb
fwait
in
push
ss
add
mov
xchg
jno
mov
pop
cmpsl
push
addr16
es
push
xor
cmpsl
mov
adc
push
mov
les
cli
lcall
pushf
ss
sbb
cmpb
xchg
mov
aas
addb
jmp
fistpll
cmpsl
fidivrl
aas
and
mov
mov
inc
cmp
nop
mov
arpl
push
out
pop
in
pop
ljmp
cli
pop
gs
and
add
pop
sti
adc
in
div
lods
dec
mov
lahf
loope
xor
insl
xchg
in
lret
sbb
neg
out
mov
mov
push
aas
nop
push
faddp
aas
cmp
adc
stc
pop
mov
out
sub
cmpsb
aam
fdivrl
daa
jns
outsl
test
mov
jge
adc
je
mov
adc
xor
ffree
adcb
and
mov
popa
dec
xchg
aad
inc
orb
mov
pushf
jo
ds
sub
adc
scas
aam
rcr
inc
cmpsb
mov
push
add
aas
test
mov
push
jmp
cmc
inc
outsb
sub
aas
imul
imul
enter
test
inc
mov
pop
lcall
fcoml
shrl
out
jecxz
push
lret
fs
stc
stos
mov
mov
mov
shll
ror
lcall
and
fisttpl
aas
cmp
ret
aaa
scas
pop
mov
inc
addb
lods
ret
cmp
inc
add
adc
xchg
push
or
mov
mov
mov
sbb
ficoml
mov
sarl
scas
loop
repnz
fsubrl
dec
comiss
pop
xorl
xchg
gs
xor
xchg
mov
clc
pop
lea
jg
stc
mov
clc
sub
mov
cmpsb
pusha
sub
adc
lods
and
dec
dec
mov
shll
mov
jp
add
and
repnz
xor
pop
and
mov
ficoms
xchg
mov
xor
shlb
repz
push
lods
icebp
shlb
mov
push
jg
les
mov
aam
or
cltd
ss
push
int
mov
out
mov
xchg
shrb
dec
testl
push
cmp
mov
mov
addl
popf
insl
into
lods
cltd
ret
mov
mov
movsb
stc
mov
pop
mov
imul
popf
addr16
mov
jg
mov
jmp
sub
fdivrp
xchg
mov
lcall
jb
dec
imul
xchg
adc
mov
call
mov
and
xchg
xchg
idivl
jp
lcall
adc
das
arpl
sbbb
push
stc
dec
test
ret
adc
les
gs
icebp
cmovne
cli
cmp
inc
sbbl
mov
mov
outsl
jmp
sub
pop
aad
decl
insb
pop
cmp
mov
pop
loope
add
sbb
fnstsw
loop
jle
jecxz
mov
push
cmp
fldcw
add
and
adc
mov
clc
xchg
xchg
xchg
std
es
mov
sub
ds
pop
pop
sbb
popa
insl
in
pop
xor
or
pop
push
pushf
add
insl
je
adc
dec
xchg
sbb
out
inc
imul
roll
in
rcrl
imul
dec
movswl
dec
sbb
sti
adc
adc
jp
daa
fildl
xor
jae
jo
fbstp
sti
sub
adc
inc
sbb
lcall
mov
test
outsb
neg
cmp
xor
pop
add
cltd
cmp
insl
push
sub
scas
dec
xchg
subb
xchg
inc
cmp
adc
add
lds
push
idivb
or
loopne
ljmp
das
dec
fwait
xor
add
inc
add
jbe
xchg
mov
cmpsl
cmp
xlat
push
sti
xor
cmp
into
jmp
xor
sub
push
mov
or
enter
push
xor
or
xor
fistps
dec
ds
mov
dec
dec
push
int
into
pop
rol
mov
pop
int3
cmp
xorb
sbb
mov
mov
aas
repz
xchg
sbb
push
adc
jp
and
mov
inc
insl
ss
mov
xlat
dec
xor
test
test
xchg
sub
mov
inc
sbb
cmp
push
sub
sub
sbb
jl
xchg
cld
pusha
mov
aaa
dec
ficomps
imul
cmp
adc
int
or
pop
imul
cld
sub
and
lods
pop
repz
out
lahf
or
jno
sub
test
add
cmpsb
es
dec
cmp
pusha
sbb
test
sub
mov
inc
outsb
nop
js
ficoms
cmc
sub
or
push
outsl
stos
xlat
add
sbb
adc
movsl
xor
xor
mov
cwtl
and
dec
adc
dec
pop
and
mov
aaa
jno
mov
mov
add
inc
pop
sbb
jmp
and
ss
add
lods
in
filds
mov
lahf
bound
lret
das
rcrl
mov
mov
inc
movsl
lock
xor
mov
repz
dec
ret
lea
inc
and
pusha
cwtl
push
add
cmpsl
mov
sahf
adc
xor
fdivrl
mov
cmp
xor
cmp
mov
lods
notb
xchg
push
loope
test
pop
adc
fs
push
mov
mov
roll
adc
push
push
jmp
adc
aad
push
add
mov
or
test
aas
cmp
sub
xor
or
inc
fbld
sti
iret
pop
xchg
fnstenv
iret
adc
dec
clc
sub
stc
bound
mov
dec
jmp
repz
sub
sbb
fcomps
jge
test
repz
push
decb
insb
adc
mov
cmp
dec
adc
bound
insl
dec
incl
sar
loop
test
mov
jmp
push
sub
stc
inc
xchg
push
pop
and
adc
movsl
mov
incb
xchg
or
xlat
dec
or
mov
push
push
gs
js
push
ds
push
lock
add
inc
pop
or
inc
scas
fsubr
dec
add
in
jp
ljmp
xor
pop
ss
xor
addr16
mov
rcrb
adc
push
bound
push
pop
mov
repz
hlt
insb
adc
push
xchg
cmp
push
subl
add
or
and
add
mov
imul
nop
mov
inc
mov
in
push
pop
out
mov
stos
push
jnp
xchg
inc
jmp
push
aas
icebp
imul
lods
clc
addr16
idiv
dec
mov
mov
jae
inc
mov
into
xlat
mov
mov
mov
xchg
repnz
andb
cmpsl
int
mov
adc
lret
test
push
cmp
mov
lahf
xchg
cmpsb
lds
outsb
xchg
das
add
jae
push
stc
and
mov
push
roll
rcrl
stc
pop
fildll
adc
sbbl
scas
fidivrs
movl
in
sbb
shll
pushf
xchg
jbe
loope
and
notb
lahf
shrb
sub
xor
and
imul
mov
mov
inc
mov
repnz
ret
dec
sti
mov
mov
rcll
test
daa
or
dec
cmp
jbe
pop
pop
jno
pop
dec
jge
push
or
fstps
push
addl
push
std
or
mov
xchg
dec
mov
sub
test
insb
cvttps2pi
mov
movsb
lea
pop
adc
sub
imul
xor
push
push
out
in
xchg
ret
lret
enter
sarl
push
sbb
xchg
mov
aad
movsb
shr
es
fadds
movsb
dec
xor
dec
push
inc
ret
pop
jb
push
xor
cmp
sbb
jp
inc
mov
xor
or
loop
xor
into
pop
inc
cmp
pop
insl
inc
nop
dec
call
pop
test
in
xchg
stc
mov
pop
in
lret
push
push
loop
sub
fidivrs
dec
mov
or
mov
data16
pop
push
mov
fldl
test
inc
mov
push
outsl
dec
test
or
sub
shlb
cmp
movsb
sbb
or
mov
mov
aaa
stos
cmp
popa
dec
or
inc
mulb
push
lret
mov
aas
std
aam
push
loopne
pop
mov
sub
inc
movsb
cmpl
icebp
mov
mov
movsb
inc
jnp
xor
mov
jl
pop
fstpl
std
nop
push
push
mov
mov
push
jmp
movsl
test
repnz
mov
leave
popa
and
insb
loopne
push
mov
movsb
fstps
aaa
cmp
mov
xlat
fs
fnstcw
push
in
mov
aas
add
pushf
call
pop
pushf
enter
shlb
xchg
sahf
ljmp
add
std
int3
icebp
mov
rorb
rclb
daa
andl
repz
jg
mov
xchg
cmpl
outsl
insb
or
or
adc
cmc
movsb
cmp
leave
jmp
in
rolb
nop
push
jns
cmp
xlat
push
push
pop
push
mov
mov
mov
or
cwtl
xchg
mov
adcl
dec
test
lock
jecxz
std
cmpsl
pop
ja
daa
sub
lahf
mov
sub
mov
sbb
push
je
dec
pop
pop
inc
xchg
int3
cmp
into
lock
pop
sub
jnp
data16
lods
mov
repz
xlat
stos
test
dec
cmp
pushf
fs
dec
xor
rolb
jae
lahf
clc
cmp
ret
repz
sub
aam
push
and
jle
sub
mov
mov
insb
ljmp
subb
mov
jbe
and
ss
int3
and
mov
shr
enter
cmp
jb
inc
push
mov
cltd
fldenv
shl
arpl
shlb
mov
jecxz
or
mov
mov
jge
lcall
scas
jns
fisttpll
popf
fs
push
push
js
aas
mov
les
pop
jae
frstor
stc
xchg
scas
mov
pusha
xchg
mov
xor
fbld
xor
cmp
xchg
arpl
cwtl
inc
hlt
mov
push
ds
pop
dec
pop
movsl
jmp
hlt
xchg
aas
jne
and
stos
jne
jge
mov
lock
cmp
test
sub
mov
mov
push
iret
add
push
adcl
mov
push
lret
inc
ljmp
cmp
cmp
mov
cmc
adc
mov
scas
add
pop
mov
dec
loopne
xor
hlt
dec
xlat
leave
mov
sub
sub
imul
scas
ret
jb
in
or
ds
pusha
mov
je
or
test
bound
shrl
mov
mov
sbb
sub
shlb
mov
cltd
xchg
stos
xchg
dec
lods
or
mov
xchg
dec
dec
mov
movl
mov
push
cli
popf
scas
jmp
div
outsl
dec
addr16
and
notb
lock
sti
and
gs
inc
xchg
cmp
stc
adcl
xor
outsl
mov
arpl
into
fwait
lcall
mov
int3
popa
mov
fbld
mov
inc
ljmp
hlt
orl
std
cmp
lret
xor
loopne
in
test
sbb
xor
fwait
mov
test
mov
psllq
dec
fxch
mov
ljmp
mov
sub
loop
fs
pop
jle
repnz
adc
mov
mov
andl
jecxz
scas
rolb
xchg
call
inc
adc
cli
lods
scas
outsb
into
or
or
lcall
inc
cld
or
cli
jbe
mov
xor
add
add
add
in
movsb
idivb
subl
repz
pop
stos
outsb
cmp
sub
dec
stos
sahf
sahf
inc
loopne
subb
xchg
shl
enter
lods
jo
push
dec
xor
pop
cltd
int3
sbb
sbb
test
mov
fimuls
outsb
jmp
enter
lds
repnz
push
mov
ds
out
in
sub
xchg
xchg
data16
daa
xchg
mov
xor
subl
test
inc
cld
pop
adc
movsl
jo
lods
ja
push
push
jecxz
call
bound
lods
enter
xchg
push
ss
or
mov
xchg
outsl
sub
out
mov
jns
push
jmp
pop
ret
movsl
or
or
repnz
rclw
idivb
loope
sti
adc
jns
lods
push
dec
cwtl
xrelease
shr
dec
mov
mov
sub
aad
scas
jge
push
pop
mov
xor
jmp
jg
pop
inc
sti
jne
imul
sbbb
scas
movsb
push
sarl
aad
sbb
lret
sbb
pop
xchg
sti
jle
aaa
jl
call
dec
outsb
cld
mov
into
aaa
cmpsl
push
lds
rcl
mov
pop
test
inc
cmp
inc
subl
sub
adc
push
fldenv
ss
inc
scas
popa
xor
fwait
shl
mov
adc
jns
negl
and
xchg
test
jg
mov
fisttpll
loop
inc
lret
add
sub
mov
and
sbb
leave
xorb
mov
jl
mov
mov
and
sbb
ds
sbb
loope
dec
aaa
mov
jp
lcall
imul
fmul
dec
das
mov
inc
out
xchg
incl
cmpsl
into
insl
push
lock
rcl
icebp
loopne
ss
cmp
hlt
cmp
dec
adc
and
lock
pop
sbb
or
push
sbb
rcrl
pop
ret
sbb
cmp
push
xchg
insl
loopne
xchg
andb
into
imul
dec
adc
aas
mov
add
in
push
lds
ljmp
call
sub
lock
xchg
lret
shll
cmpsl
jg
cmp
mov
pop
std
and
add
loope
pop
and
pop
xchg
loopne
loope
push
xor
mov
push
rcr
or
lds
shrb
jle
mov
outsl
sbb
test
pop
push
xor
call
adc
pop
pusha
push
and
pop
pop
aam
addr16
out
or
cld
scas
pop
dec
mov
je,pn
xor
add
add
mov
cmpsb
out
shrl
jo
xchg
ljmp
pop
cmp
imul
xor
pushf
mov
ljmp
das
stc
xor
rclb
xchg
and
or
fst
sahf
je
ficoml
aam
push
pop
pop
push
adc
hlt
jno
adc
cwtl
ljmp
es
mov
pop
fistpll
jns
inc
ret
push
in
inc
sub
add
iret
inc
in
fs
iret
xor
mov
jno
cmp
sbb
lods
shll
mov
repnz
stos
sarl
out
mov
movsb
rcll
ss
xchg
int3
xlat
in
das
or
mov
popa
mov
inc
loope
aad
jmp
call
and
loopne
cltd
jge
cwtl
add
push
into
js
sbb
cmp
test
pop
popf
lea
pop
loope
outsl
mov
bound
test
sub
mov
stos
shl
scas
js
mov
jno
in
and
sub
pop
mull
xchg
mov
adc
scas
insl
mov
push
pop
test
jb
push
xor
jo
mov
sbb
cs
cmp
fdivrs
fwait
mov
and
mov
xchg
jbe
dec
test
and
stc
aaa
push
ret
cwtl
pop
mov
mov
add
sti
cmc
mov
pop
and
sbb
push
nop
lock
gs
insb
stc
cmp
mov
inc
sbb
es
push
ret
aam
and
popl
mov
ss
fwait
inc
adc
into
xchg
xor
sub
pop
adc
dec
pop
xchg
inc
push
in
stc
adc
add
iret
xchg
pop
pop
andb
cmpsb
mov
aas
into
rcrb
jmp
jno
rolb
imul
aaa
lret
ficoml
cmpsl
lds
jb
and
mov
ret
arpl
adc
or
xchg
or
push
std
ret
cmpl
pop
add
sbb
and
xchg
iret
mov
daa
test
xor
nop
fists
sub
push
lcall
sub
or
mov
popa
push
outsb
and
clc
adc
loopne
xor
ljmp
mov
loopne
stc
ret
roll
out
and
and
faddl
push
shrb
and
pop
data16
jp
mov
je
cltd
cmp
shlb
pop
ja
fwait
or
mov
lret
mov
mov
pop
stos
mov
mov
xor
sahf
xlat
test
adc
mov
insb
push
or
mov
arpl
nop
mov
pop
fistpll
xchg
mov
xchg
iret
push
or
data16
fs
sbb
insl
or
loopne
test
fiadds
adc
fsubs
mov
cld
xchg
test
rcll
or
xchg
daa
adc
imull
repz
cwtl
hlt
mov
cmpsl
std
and
sbb
dec
mov
or
jne
sbbl
push
rcrl
in
pop
adc
mov
fildll
lock
dec
fcoml
push
loop
dec
sub
in
pcmpeqw
dec
push
cmp
jmp
adc
imul
imul
lcall
addr16
andb
lret
nop
lret
ror
cmp
xchg
jle
push
sahf
inc
pop
mov
stos
push
add
dec
or
push
dec
mov
or
stc
int
jbe
test
rcll
test
repz
test
push
push
stc
or
dec
add
pushf
dec
lds
inc
lret
xchg
jnp
pop
pop
sub
pop
push
test
pop
movsb
faddl
dec
sbb
xlat
or
adc
lea
insb
mov
out
jo
mov
push
sub
movsl
xchg
inc
enter
push
mov
cmpsl
popa
shlb
mov
sbb
jmp
and
cmp
fisubl
xorl
adc
call
ss
lret
sbb
pop
clc
and
mov
movsb
mov
pop
cmp
dec
xor
push
mov
mov
cmp
push
xchg
cmp
mov
xor
out
pusha
inc
push
movsb
pop
inc
push
add
push
mov
outsl
pop
xchg
push
xchg
popa
daa
and
int3
push
jecxz
cmc
std
daa
test
mov
sub
push
fdiv
jnp
loop
mov
inc
pop
pop
or
xchg
pop
inc
imul
and
shr
stc
fwait
xchg
into
imul
stos
pop
xchg
cmc
divl
scas
jo
ficomps
in
mov
sub
mov
scas
jnp
push
icebp
out
lods
push
dec
movsl
xor
cmpl
int3
outsl
call
xchg
mov
dec
mov
je
sahf
dec
sub
mov
dec
repnz
je
xor
pusha
pop
ja
insb
mov
adc
mov
jb
jge
jns
adc
fmull
je
lret
lods
addr16
add
cltd
xchg
xchg
xchg
xor
jp
rclb
sahf
out
mov
lods
cld
test
mov
sbb
or
cmp
out
jmp
sbb
and
mov
push
in
cmp
cltd
cmp
mov
adc
stos
add
ja
jns
cmpsb
jae
enter
pop
hlt
sbb
mov
jg
ret
xchg
dec
movsl
ret
negl
cmp
insb
jecxz
mov
shll
mov
adcb
lcall
in
out
call
sbb
mov
dec
outsb
movsb
ret
dec
push
xchg
mov
movsb
movsl
jbe
xchg
pushf
mov
jnp
pop
and
cli
fdiv
mov
std
jae
push
hlt
cmc
mov
mov
mov
mulb
xchg
mov
or
sub
cli
dec
fsubrp
cmp
xchg
or
jae
pop
jge
mov
and
test
ret
scas
movsb
outsl
fcomps
stc
rorl
jb
cmpb
out
test
aas
repnz
mov
sahf
and
sbb
ss
pop
out
mov
nop
ljmp
clc
pop
xor
int
and
lods
sti
pop
cmp
jge
jmp
test
and
mov
pop
dec
call
mov
or
lcall
shrl
and
clc
cmp
sbb
push
sbb
xchg
jo
cmp
adc
sahf
sbb
jle
jle
cs
mov
out
or
mov
bound
loop
gs
push
mov
push
and
sbb
jp
aad
xchg
xlat
xchg
jb
sub
add
int3
fdivrs
add
and
roll
push
jg
cld
sub
std
movsb
iret
xchg
nop
test
scas
push
lcall
mov
fadds
or
stos
movsb
xchg
mov
stos
cltd
jl
das
std
mov
mov
jno
in
int3
adc
inc
hlt
out
es
in
icebp
cltd
test
repnz
xor
sub
stos
stos
cmpsl
mov
sti
mov
push
cmp
outsl
or
adc
jecxz
nop
mov
xchg
fdivrp
fstl
push
f2xm1
dec
push
out
call
xchg
ret
push
push
packsswb
adc
inc
xor
arpl
push
add
xor
test
movsb
fisubrl
stos
and
shrl
add
ds
jmp
es
cmpsb
pop
inc
ret
adc
int3
pop
adc
mov
repnz
faddl
movsb
testb
push
ret
jnp
stos
lock
in
repnz
out
loope
popf
cld
fsts
loopne
roll
push
mov
test
adc
push
test
xor
lret
push
lret
cmp
adc
add
dec
sbb
push
scas
movsb
rorl
mov
jno
int3
add
out
das
add
cwtl
fildl
aas
dec
adc
fwait
repnz
testb
aaa
jmp
rcl
mov
scas
or
jle
inc
notl
pop
add
add
pop
dec
xchg
and
sub
add
push
orb
scas
into
mov
cmp
cmp
mov
mov
pushf
lcall
sti
ret
cmovnp
aam
mov
pop
mov
mov
pop
mull
or
push
mov
lret
and
frstor
in
shrl
jb,pn
rolb
xor
test
jns
out
popa
fstps
popa
fadd
jge
ja
and
xor
sbb
sti
xorb
jecxz
iret
div
ja
repz
fmul
dec
sarl
inc
push
add
inc
fs
scas
mov
lahf
xlat
jae
lods
pusha
loopne
aaa
loope
xor
shr
push
add
cmp
mov
cwtl
push
push
dec
push
pop
cmp
inc
data16
or
sub
fcompl
fiadds
or
out
push
pop
jnp
movsb
es
xchg
rorb
out
cwtl
cli
stos
stos
push
sbb
cmp
in
dec
in
outsb
sti
xor
imul
mov
out
cmp
inc
mov
jl
fsubs
stos
push
in
test
sub
cmpsl
cmc
jg
xchg
sbb
jno
dec
adc
mov
mov
shr
sub
cmc
shll
dec
xchg
sbb
cmpb
xlat
jno
mov
jae
pop
enter
sarl
shrb
hlt
popa
xor
test
push
mov
lods
mov
push
mov
jl
js
sub
js
add
in
jmp
add
sbb
mov
cmp
addl
imul
loopne,pn
and
test
adc
sbb
sysenter
push
and
popa
xlat
sti
fbld
mov
test
mov
ss
jne
loop
pop
enter
xlat
ss
pop
or
decl
nop
iret
fnstcw
lods
push
es
sbb
movsl
iret
rorb
loopne
xchg
pushf
cmp
pop
lods
rcrl
inc
sub
ss
push
in
jp
cmp
inc
or
fistpll
adc
xchg
lahf
insb
aad
push
mov
jge
mov
add
sti
push
mov
push
cmp
inc
out
fists
adc
int3
sbb
inc
loop
hlt
mov
pop
mov
fs
jnp
pop
sbb
lret
aam
push
pop
mov
jae
mov
xchg
mov
inc
inc
xlat
pop
je
test
jecxz
jns
inc
mov
pop
les
pop
fucomp
int
insl
mov
shll
jmp
adc
in
pop
push
lahf
sarb
dec
outsb
test
outsb
sti
cmp
sti
sarb
push
outsl
cli
dec
ja
insl
add
stc
orb
add
loopew
sti
adc
insb
jbe
ljmp
adcb
mov
dec
stc
jno
lock
cwtl
notl
pop
inc
dec
pusha
mov
fwait
les
or
mov
divb
out
int3
loopne
add
mov
add
es
push
sarl
or
fsubr
push
sbb
mov
pop
out
jo
xchg
push
mov
fnstcw
outsb
and
jno
loope
movl
lret
push
pop
fsubrs
mov
mov
lds
stos
cmp
xchg
push
jg
add
add
sbb
les
mov
in
orb
inc
fdivrs
mov
leave
fcoms
xor
dec
xorl
movsl
lret
pusha
inc
adc
addr16
jbe
jbe
ss
nop
test
pop
mov
sub
mov
pop
fucomp
sahf
mov
outsb
bound
jno
sarl
ja
push
bound
dec
jnp
call
imul
mov
outsl
aaa
stc
rol
add
movsl
inc
test
mov
adc
dec
pushf
xchg
xchg
add
in
mov
sbb
orl
aaa
jl
shrl
scas
fldl
or
dec
mov
movsb
fs
fidivl
mov
pop
nop
push
dec
add
xlat
fcmovu
movsl
rcl
adc
js
add
iret
push
rol
xor
xlat
sub
mov
insb
inc
add
iret
out
lock
ss
fs
jecxz
or
ss
incl
rol
xor
arpl
pop
cmp
test
cmp
int
push
clc
or
fs
sbb
out
sub
js
mov
sub
mov
test
mov
call
xchg
mov
jbe
ss
mov
push
addl
adc
and
fs
out
lahf
fmulp
repz
pop
gs
int3
sub
iret
stos
mov
jp
icebp
sbb
inc
ret
call
xchg
clc
sub
fsubs
inc
in
pop
push
cs
cmpsl
mov
sbb
dec
popa
loope
adc
mov
push
jo
sbb
add
ljmp
imul
push
inc
add
stos
push
stos
mov
or
pop
cmp
sbb
jle
iret
dec
gs
enter
adc
jno
out
clc
or
movsl
in
leave
bts
lds
nop
inc
sahf
pop
pop
sub
fwait
test
jl
je
and
push
mov
hlt
mov
pop
cmpsb
lods
cmp
js
lcall
insb
stos
sbb
aaa
mov
adc
shl
adc
dec
jmp
insl
sub
push
cmpsl
shll
xchg
pop
jge
arpl
sub
shll
testl
test
sbb
mov
dec
out
out
imul
dec
or
sub
mov
mov
pop
bound
in
jno
jns
dec
lds
negb
aam
bnd
popf
pushf
mov
int
outsl
jmp
pop
aad
pusha
sbb
cmp
faddl
ret
mov
mov
add
and
mov
mov
out
xor
imulb
dec
add
jns
ljmp
movsl
popa
into
jbe
xchg
inc
adc
mov
lods
arpl
popa
mov
icebp
test
ret
out
sbb
push
sbb
outsl
xchg
ret
xor
jp
push
pop
mov
cmp
mov
adc
sub
mov
sub
jbe
xchg
pop
faddl
cmp
orb
bound
icebp
push
sbb
push
lods
test
in
sub
movsb
adc
pop
and
test
inc
int
leave
pop
xchg
fiaddl
stos
pop
arpl
xchg
lcall
rorb
aam
jmp
es
stos
sub
jne
push
lret
imul
jge
mov
sahf
pop
sbb
inc
mov
subl
in
test
test
es
push
insb
test
push
scas
push
xor
and
cmp
sbb
int3
mov
lods
push
pop
cli
jmp
cwtl
sub
scas
jge
mov
faddp
jns
ljmp
ror
data16
popa
mov
jns
cmp
lods
loope
push
fs
sbbl
int3
repnz
dec
lds
hlt
cltd
andl
xor
call
cli
xor
mov
xor
fwait
cmp
mov
inc
or
lret
incb
adc
fsts
jne
mov
fists
clc
dec
int3
push
paddb
and
xchg
mov
jge
xchg
mov
pusha
out
popf
add
adc
sbb
fidivl
js
jp
mov
push
pop
inc
jae
cmp
adc
sub
sti
xor
pushf
adc
stc
push
mov
fistl
inc
push
cmp
mov
xchg
and
xlat
xor
jecxz
test
call
inc
mov
imul
pushf
jecxz
push
push
mov
int3
dec
pop
out
test
pop
jne
pop
das
inc
mov
dec
jo
jge
leave
popl
daa
std
call
test
mov
insl
cli
call
enter
jno
cmp
mov
xchg
mov
fs
push
ds
jge
dec
testl
out
mov
ret
aaa
dec
cli
out
lret
push
dec
push
insb
pushf
mov
add
xor
cmpb
cs
loop
in
push
hlt
movsl
and
add
insb
hlt
pop
scas
inc
ljmp
adc
popf
pop
loope
inc
xchg
and
out
mov
cmc
mov
arpl
jle
mov
mov
icebp
mov
pavgb
jle
and
adc
shrl
or
xchg
cmpb
fidivrl
pop
out
lds
inc
jnp
aam
popf
xor
je
mov
in
cmpsb
pop
mov
jae
aas
mov
in
dec
and
mov
push
push
cmp
jmp
sbb
push
test
xchg
sbbb
jo
jae
hlt
aas
mov
cltd
fldcw
xchg
xor
rolb
shl
mov
repnz
add
mov
cld
mov
jae
add
push
add
test
ds
sub
fimuls
sub
inc
popa
pop
or
add
fcoml
nop
cwtl
mov
test
mov
pop
fucomp
sahf
fnstenv
dec
inc
test
cmp
test
jg
xchg
gs
ljmp
movsl
xor
movsl
xchg
dec
jnp
cmp
subb
cld
pop
push
mov
push
pop
inc
cltd
imul
fwait
sub
sub
cwtl
addr16
cli
jbe
xchg
decl
mov
pop
push
jecxz
jns
dec
mov
cltd
sub
cwtl
ret
mov
arpl
mov
inc
out
andb
lret
mov
xchg
je
in
test
fcom
mov
mov
mov
sbb
clc
int3
cmpsb
dec
outsb
test
lods
lds
add
mov
mov
adc
testl
or
add
out
inc
test
xchg
andb
cli
sbb
mov
fptan
or
mov
sub
ss
mov
xor
lret
sahf
xchg
fmuls
jge
jl
mov
sbb
mov
aad
add
fnstsw
das
xor
std
mov
test
std
jb
insl
sub
pop
repnz
xchg
add
cmp
insl
loopne
xlat
lods
roll
aam
push
and
gs
insl
negl
xchg
push
xchg
fidivs
cli
nop
dec
cltd
notb
stc
rorl
jecxz
sbb
jne
fcoms
cmpsl
mov
mov
fimull
nop
imul
ret
popa
insl
into
cmp
add
and
cs
dec
out
push
outsb
push
stos
int3
pop
adc
cltd
xor
call
jo
sub
out
rcll
or
adc
adc
daa
jo
pop
pop
lahf
mov
test
or
dec
insb
jo
dec
shlb
insb
sbb
aad
jmp
enter
or
xor
cmp
and
insl
inc
pop
add
mov
adc
nop
pop
push
mov
push
xchg
sbb
out
lahf
push
xchg
mov
mov
lods
scas
rcrb
insl
int3
sti
or
and
or
dec
and
sbb
mov
sbbb
mov
mov
sahf
aaa
xchg
stos
daa
adc
lsl
test
xor
mov
int3
cmp
loopne
cmp
jne
mov
mov
std
or
in
adc
xchg
mov
cld
jle
adc
xor
xor
fcomi
cmc
hlt
jmp
push
outsl
ja
mov
mov
inc
fwait
shl
mov
pop
lret
pop
push
cmpb
xor
sbb
pop
dec
fsubrs
dec
mov
inc
out
inc
dec
adc
fcmovne
scas
mov
add
pushf
and
inc
inc
jge
in
nop
into
pop
cwtl
mov
sbb
int3
fstpl
aam
jmp
sub
xchg
and
cmp
xchg
rorb
clc
pop
mov
mov
insb
push
xchg
ret
xchg
enter
icebp
lahf
ja
lea
sbb
into
push
push
ja
out
cmpsl
stc
add
loopne
ret
in
jge
inc
or
aad
sbb
lea
dec
xor
push
mov
jl
push
cs
cli
test
inc
rep
jl
int
stos
loop
ss
adc
repz
cmp
push
add
popf
insl
inc
pop
repz
push
sub
mov
lea
jp
cmpl
popa
movsl
push
ds
add
pop
fistl
and
and
call
pop
mov
stc
fsubs
pusha
andb
sub
cltd
jbe
mov
xor
jg
and
idivl
das
icebp
pop
mov
mov
pop
mov
scas
outsl
jo
sarb
insl
outsl
sbbl
sbb
popf
test
mov
loope
mov
push
or
scas
sub
cmpsl
jmp
ret
adc
mov
mov
scas
fcmovne
jae
lcall
xchg
jno
mov
add
xchg
mov
pop
cmc
enter
mov
pop
fsubrp
call
sbb
sbb
pop
idivb
add
jo
xchg
inc
jge
mov
frstor
ja
sar
xor
pop
in
out
imul
or
add
mov
mov
push
iret
cmp
dec
cmp
xchg
mov
out
sub
mov
fistl
aaa
jno
out
clc
sbb
mov
popa
jmp
mov
mov
or
or
mov
jl
push
mov
out
xchg
jg
shl
or
cli
sbb
test
or
outsb
jae
or
pop
rcrl
movsl
inc
bound
pop
mov
sbb
sub
fiaddl
stos
lahf
jl
xor
jl
xor
adc
adc
and
lret
cmp
dec
nop
aad
jp
pop
imul
in
push
inc
adc
sbb
sbb
pop
mov
push
sub
push
repz
cld
mov
repnz
cld
ret
adc
jecxz
test
sbbl
sbb
xor
pop
outsl
jns
sbb
pop
xchg
daa
ljmp
pop
push
mov
fdivl
inc
pushf
cs
or
xor
xor
enter
adc
into
sbb
push
cmp
mov
push
inc
fisubs
hlt
in
adc
into
mov
adc
cmc
mov
pop
pop
and
xlat
cmp
push
clc
adc
pcmpeqw
repnz
mov
cmpsb
cmp
bound
imul
imul
repz
push
push
rorb
xchg
sbb
ret
add
pop
cmc
subl
rol
xlat
rcrl
jl
mov
inc
adc
std
mov
sbb
daa
mov
stos
imul
shlb
xor
and
mov
inc
push
or
mov
xchg
add
in
mov
mov
shlb
add
repnz
mov
in
std
push
xor
push
out
mov
subl
xor
in
out
ret
movsl
std
mov
cli
iret
enter
subl
je
dec
pusha
jae
dec
xor
repnz
std
mov
adc
in
mov
test
aam
bound
movsb
mov
cmpl
mov
cmp
in
and
outsl
inc
cmpsl
mov
push
mov
ror
arpl
icebp
mov
lret
lock
xchg
ret
fcmove
sub
data16
jmp
pop
pop
mov
out
lret
jp
push
imull
lods
mov
jns
mov
gs
dec
push
sbb
cmp
xchg
test
in
push
and
or
push
clc
and
push
or
inc
inc
sti
mov
ficompl
lods
subl
insl
push
outsl
jnp
loop
or
jns
mov
inc
jg
leave
pop
bnd
mov
sbb
push
dec
mov
in
inc
mov
adc
mov
jg
stc
call
lahf
inc
xchg
fwait
cld
add
fscale
and
test
imul
loopne
jp
movq
inc
outsb
outsl
leave
ret
push
rorb
inc
cli
pop
fistpl
inc
push
out
rorb
and
mov
stc
out
dec
sub
pop
adc
test
fsubl
cmp
push
jnp
and
inc
pop
xlat
ja
sub
lods
mov
dec
dec
sub
push
cmp
lret
and
pop
pop
lret
popf
ja
sti
icebp
cs
sti
adc
roll
data16
mov
xor
pop
sub
jmp
mov
sbb
jno
mov
fcmovnb
stc
mov
push
mov
cmc
fists
arpl
sbb
adc
ss
popa
in
rorl
dec
arpl
lcall
xchg
cmpsl
sti
mov
fwait
adcb
fisubl
push
or
loop
loope
or
leave
inc
call
fbld
iret
cmc
jp
int3
mov
sbbb
out
movlps
cmp
arpl
sahf
inc
inc
scas
cmp
shll
push
dec
dec
out
add
push
xlat
mov
inc
mov
in
aaa
cmp
lds
adcb
scas
sti
das
jb
and
lret
imul
jmp
sbb
mov
jne
rorl
cmp
and
movsl
xchg
orl
xchg
cwtl
inc
dec
aaa
movsl
jo
push
inc
xor
push
add
imul
sbb
pop
out
cmp
das
and
jo
sbb
scas
mov
in
out
push
sub
add
xchg
push
test
leave
sub
mov
xor
call
cld
sub
pop
rol
test
mov
fimuls
fiadds
sbb
fadd
jns
mov
enter
test
stos
incb
xor
call
insl
cs
clc
mov
add
xchg
inc
outsl
jnp
sub
mov
aas
push
jne
outsl
fnstcw
jle
mov
mov
mov
or
mov
xor
adc
jo
subl
mov
pusha
ret
mov
in
jmp
mov
mov
sbb
mov
fdivrl
ret
xchg
xor
push
cmp
ret
data16
xchg
add
lahf
shlb
add
icebp
test
nop
and
adc
lock
fstps
xchg
ljmp
shll
fbld
pop
or
lods
lock
add
jmp
call
imulb
mov
lock
nop
pop
mov
xor
shlb
xchg
outsl
fcomi
loop
or
cmp
stc
stos
lods
mov
sub
call
mov
aad
sub
mov
cmc
jbe
pop
mov
shl
lock
pop
lret
enter
xorb
and
push
pslld
mov
xchg
add
sbb
sbb
mov
faddl
and
int3
jl
adc
outsl
movsl
xlat
bound
hlt
adc
fcoms
dec
jmp
sbb
out
lret
fcmovb
xor
xor
hlt
sub
in
popa
mov
test
mov
test
cmpsl
ss
lea
mov
test
sub
pop
fidivs
lock
add
fcmovu
in
roll
adc
or
cmp
loopne
shlb
inc
jb
push
inc
mov
dec
sub
pop
movsb
pop
push
popl
jb
xor
ret
adcb
fcom
lahf
mov
push
jecxz
xlat
popa
dec
gs
cmp
pop
in
leave
data16
pop
or
mov
rclb
sbb
stos
sbb
xchg
jbe
jl
clc
mov
and
cld
push
ret
icebp
lods
dec
jns
cmp
fbstp
ss
jno
jp
pushf
std
data16
mov
pop
xchg
sub
adc
mov
arpl
out
movsb
ja
cmpsb
mov
jmp
into
jle
push
bound
iret
adc
jl
dec
push
xlat
cmovbe
sbb
rcr
test
js
sbb
mov
mov
cmp
lods
xchg
lret
adc
mov
xor
dec
jp
mov
fnstsw
gs
pushf
adc
pop
aas
dec
dec
adcb
movsl
sti
and
jecxz
inc
mov
add
sub
mov
fstps
xchg
mov
dec
mov
pop
xchg
mov
dec
xchg
xor
push
pop
xchg
dec
push
pop
dec
je
xchg
clc
clc
sbb
and
aas
adc
in
or
jne
fnstcw
imul
jae
push
ret
fiaddl
or
push
ror
jmp
incb
dec
push
mov
fidivl
push
ds
push
data16
dec
stos
mov
aad
pop
je
xor
cmc
sbb
fs
xor
mov
dec
dec
add
into
pushf
pop
inc
jo
insl
sahf
movsb
xor
xchg
fists
hlt
fildl
push
and
popa
push
leave
xchg
nop
xor
or
cmc
dec
sbb
mov
cmp
mov
inc
xor
inc
xor
cli
mov
addl
mov
enter
mov
push
sbb
add
add
outsl
jae
clc
pushf
aad
in
cli
jno
pop
scas
fsubs
test
test
jecxz
addr16
mov
dec
mov
lahf
imul
xlat
ljmp
xchg
stc
outsl
outsl
mov
dec
js
sbb
out
daa
jae
cmc
faddl
push
mov
ds
ja
mov
shlb
or
lods
popfw
aam
push
frstor
pop
imul
dec
je
jae
lods
stc
xchg
int3
loope
mov
je
lea
jnp
lods
sbb
mov
jg
cmp
add
mov
imul
and
setns
and
fcmovne
pop
mov
xchg
cmpsl
mov
inc
test
in
es
cmp
movsb
or
cltd
adc
dec
fisubs
icebp
pop
and
and
rcrb
mov
fcmovb
clc
jle
jns
or
outsl
pop
mov
loope
lret
ljmp
mov
xchg
fcomip
pop
adc
add
add
bound
sarb
mov
rcr
addl
jbe
xchg
scas
sarl
fmull
pop
stos
pop
sub
inc
push
loope
aaa
inc
inc
sub
arpl
mov
adc
out
inc
clc
pop
lods
push
and
mov
fcmovne
aam
aaa
daa
sub
sbb
movsb
push
xor
jne
or
lret
fldenv
insb
loopne
mov
scas
jg
in
pop
mov
cmpsl
imulb
pop
mov
cli
mov
inc
dec
sti
test
subb
push
in
or
inc
aam
rorl
sbb
es
lds
jb
mov
clc
mov
inc
pop
sub
clc
mov
xor
xchg
pushf
mov
cmp
outsb
jecxz
push
pusha
repnz
xchg
jno
lock
mov
shl
pushf
or
cmp
lret
push
mov
cmpsl
inc
pop
jp
test
xchg
aas
xlat
out
or
adc
xor
xor
enter
mov
and
xor
adc
pop
mov
xlat
mov
clc
insb
inc
cmp
mov
and
lods
adc
out
incl
pusha
int3
addl
mov
aam
iret
lret
xchg
cmpsb
cltd
cmpsb
mov
int3
sbb
bound
pop
dec
mov
fwait
mov
sub
dec
or
dec
jle
iret
xor
add
int
iret
mov
sbb
jle
mov
mov
arpl
add
sahf
pop
adc
test
xchg
mov
clc
jp
sbb
repnz
pop
sub
leave
xor
in
mov
xchg
std
push
push
xchg
mov
negb
in
je
mov
ljmp
call
mov
mov
mov
sub
fsts
jo
rol
mov
ss
pusha
sti
jecxz
addr16
jnp
les
jo
jnp
adc
popa
or
inc
mov
in
test
bound
dec
jno
in
je
xor
add
and
or
xchg
dec
add
jecxz
mov
mov
subl
and
lret
stc
icebp
int3
mov
fsubs
sarb
dec
push
cmpsb
adc
mov
mov
mov
sahf
and
add
cmpsb
clc
dec
sahf
mov
add
dec
scas
mov
add
dec
es
subb
rolb
adcl
adc
sbb
mov
and
jp
adcl
dec
sub
clc
aad
pop
pop
das
pop
cld
test
xchg
les
jnp
sub
adc
fcom
repz
jge
ds
out
and
ja
cmpsl
add
repz
adc
cmp
outsb
sub
mov
xor
sub
cmpsl
mov
push
test
inc
jmp
in
sti
pop
into
call
xchg
mov
sub
lret
in
aaa
dec
dec
xchg
add
hlt
dec
test
pop
sub
dec
lcall
xor
and
pop
pop
fwait
adc
insl
mov
pop
scas
or
push
js
je
lds
sbb
push
adc
push
adcb
gs
inc
sbb
or
pop
push
dec
mov
pop
dec
mov
loope
filds
sub
pop
notb
pop
add
jmp
mov
pop
pop
xchg
mov
dec
sbb
push
das
adc
pop
inc
sbb
gs
imul
jo
sbb
aad
imull
pop
mov
cmpl
inc
fldenv
mov
mulb
lret
pop
push
inc
ss
add
mov
push
mov
fiaddl
and
stc
jge
mov
cwtl
and
int
sti
leave
mov
pushf
jno
xchg
cltd
dec
jge
arpl
pop
push
cmp
mov
jns
fstl
scas
push
dec
ds
adc
dec
mov
xor
shl
dec
inc
xor
xor
adc
sti
and
inc
sbb
movsb
sbb
xor
lret
es
lea
pusha
arpl
in
fs
subl
and
pop
pop
ret
fisubrs
mov
push
jae
xor
add
xor
add
call
push
les
and
push
pop
push
cli
sar
clc
call
imul
fnstsw
mov
fsubrl
loop
in
xchg
adc
inc
mov
mov
pop
xchg
jg
adc
mov
lds
sbb
addl
push
mov
xor
add
and
ror
in
sbb
push
xchg
arpl
xchg
xchg
push
push
jne
lret
lods
dec
cwtl
jnp
xor
xchg
fcompp
and
orl
icebp
loopne
hlt
mov
push
and
xchg
mov
push
or
mov
lret
bound
stc
mov
xor
data16
std
cmpsl
shr
test
jne
lahf
jg
mov
and
fwait
lea
sub
dec
jo
lods
xor
mov
adc
inc
iret
les
mov
push
stc
pushf
add
jne
cs
cmp
sub
fbld
imul
jbe
aam
loop
mov
and
ljmp
xchg
jbe
xor
test
shrl
pop
ss
stos
fs
mov
dec
iret
sub
test
icebp
out
pop
imul
pop
mov
sbb
fwait
and
inc
leave
dec
and
inc
scas
or
and
roll
lea
mov
inc
inc
icebp
xchg
sbb
imul
push
xor
outsl
inc
out
push
int
cltd
iret
mov
test
outsb
jnp
mov
out
sbb
mov
xchg
pop
daa
dec
jne
arpl
jo
dec
xchg
roll
out
mov
in
pop
rolb
sub
shlb
and
inc
jp
or
cmpsl
jp
push
jmp
js
add
adc
adc
push
fcompl
or
sub
cmc
and
mov
das
push
and
inc
std
popf
test
js
sti
push
and
sbb
and
xchg
ja
call
adc
pop
idivb
icebp
outsl
pop
inc
pop
loopne
or
cmpl
push
js
jp
stc
aas
push
inc
pusha
sti
mov
sub
je
stos
cmp
push
fucomi
sub
add
hlt
test
dec
jmp
scas
mov
pop
jecxz
std
or
jbe
jmp
out
in
iret
dec
scas
add
loop
dec
push
pop
mov
out
ret
in
mov
mov
push
inc
mov
dec
in
push
mov
test
ja
aas
int
or
dec
insl
int3
cs
dec
pop
mov
dec
dec
das
into
jo
jl
mov
adc
lret
jp
cld
into
daa
xor
jge
mov
xchg
cmp
divl
cmp
jno
or
stos
lret
cmp
cmpsb
je
sbb
outsb
jp
xor
push
cmpsb
mov
push
push
jle
test
dec
push
fnstsw
icebp
mov
repz
pusha
in
ljmp
fcom
mov
cmp
jb
aad
loop
lea
sub
ds
scas
mov
bound
popa
repz
push
or
fidivrl
sahf
push
mov
dec
test
xor
and
shll
jo
repz
xchg
dec
sbbb
je
and
and
jae
aam
je
or
push
cmp
pop
dec
dec
or
pop
lcall
out
inc
jbe
in
fistpll
cmp
addr16
add
push
daa
popf
lcall
xor
sub
push
ret
and
or
subb
mov
sbbl
lods
test
lods
jl
std
cmp
call
or
mov
int
adc
jmp
jne
dec
pushf
cmp
mov
jae
inc
push
mov
pop
stos
xor
jmp
in
shll
push
push
xor
scas
jmp
lock
inc
cmpsb
cmc
jbe
js
fadds
pop
sub
and
jle
adc
jns
fnstcw
aaa
mov
cmp
lret
inc
dec
arpl
mov
sbb
bound
inc
add
xchg
cs
jecxz
xchg
jmp
xor
jl
push
test
out
xor
addl
icebp
int3
adc
xor
jns
pop
pop
mov
and
or
sbb
lods
fs
test
cltd
xchg
pop
adc
les
sub
andb
dec
aam
or
xor
test
inc
leave
movsl
insb
roll
lret
or
lcall
pop
mov
enter
mov
push
lods
mov
add
jo
cli
out
push
in
cmp
sti
pop
push
hlt
xchg
test
inc
push
sub
push
sub
bnd
lcall
std
mov
stos
testl
dec
jl
test
loope
mov
cmp
addb
or
popf
sti
shl
in
test
std
inc
in
int3
test
mov
inc
and
dec
fwait
add
test
inc
jbe
in
shl
pop
add
cs
add
movsl
lret
jge
test
les
mov
push
cwtl
jmp
and
push
lret
dec
fdivrl
ljmp
stos
scas
sub
out
imul
fldt
mov
rolb
dec
cmp
push
ljmp
jb
addr16
cmpb
dec
or
push
add
insb
test
mov
sub
mov
mov
cmpsl
mov
pop
les
sub
orl
mov
fdiv
adc
inc
sbbb
dec
pusha
fs
gs
fnstsw
lret
loope
adc
adc
jns
repnz
mov
xor
sahf
jle
pop
inc
addb
push
arpl
outsl
jp
test
and
ret
and
or
fldlg2
sbb
mov
jge
xchg
mov
push
loop
and
out
sub
push
in
fs
mov
mov
mov
sbb
fcoms
bound
in
dec
pusha
xchg
aad
les
push
incl
dec
cltd
sti
test
imul
mov
sub
loope
stc
pusha
adc
in
inc
sub
cmc
jbe
arpl
mov
or
push
mov
sbb
mov
out
sub
push
cs
xchg
xor
mov
scas
jnp
fstpt
std
mov
aaa
arpl
imul
out
push
hlt
out
jmp
jp
push
es
test
ljmp
xchg
scas
add
cli
jb
rorb
cld
mov
inc
shr
daa
or
loope
out
xchg
mov
inc
sbb
outsl
imul
add
pop
jl
mov
jae
adc
xor
ss
movsb
push
mov
or
mov
ss
fstl
aam
lret
insb
mov
push
sub
inc
dec
insb
lods
dec
adcb
jae
dec
xchg
out
or
hlt
jb
push
pop
fcompl
sub
repnz
cld
repnz
inc
dec
dec
dec
cmpsb
dec
idiv
aam
push
lahf
mov
xor
sbb
xchg
out
fisttps
in
lahf
sbb
sub
icebp
or
es
sub
mov
mov
out
push
xchg
or
xchg
pop
dec
jne
jno
jne
fucomip
daa
inc
nop
add
int
cld
out
ljmp
les
mov
daa
adc
and
lods
or
pop
adc
jg
sbb
out
jae
inc
inc
inc
jns
repz
scas
out
and
or
imul
mov
adc
sbb
movsl
loop
lret
out
jnp
mov
xchg
int
sahf
mov
push
movsb
cmpsb
out
insl
mov
movsl
jmp
jns
dec
mov
imul
ret
cmp
mov
mov
adc
and
push
leave
inc
ret
mov
ret
lret
adc
jb
lahf
push
mov
adc
loopne
xchg
enter
test
sysenter
or
xlat
mov
or
das
shl
int3
loope
in
xchg
neg
pop
inc
lds
add
lret
popa
in
test
stc
insl
out
sahf
sub
mov
lea
cld
jae
sbb
jae
int3
in
mov
je
inc
mov
in
adc
xor
sbb
adc
push
and
add
test
mov
jb
inc
stos
pop
push
insb
dec
jg
insl
je
pop
loopne
loope
mov
mov
repnz
leave
fildl
cwtl
inc
and
pop
sbb
ds
test
pop
push
cmp
pop
or
fldt
and
or
xchg
xchg
inc
inc
leave
jg
mov
and
xor
js
in
xchg
into
shrb
cmp
cmp
repz
and
jb
pop
xor
mov
pop
into
push
mov
sub
cltd
fsubrs
rdpmc
adc
enter
mov
xchg
movsb
mov
orb
ficompl
int3
outsl
clc
dec
sub
push
push
mov
and
addb
jg
fwait
popf
cld
out
mov
nop
mov
fisubrl
inc
xchg
push
jno
loop
out
lahf
lods
lods
pop
repz
push
and
test
add
add
jmp
repz
fldenv
ret
fstpl
cmpsb
jl
jp
xchg
out
aam
mov
or
push
push
adc
fidivrs
repnz
scas
xchg
jno
jne
push
xlat
fisubs
jle
jecxz
fisubrs
jmp
ss
leave
fs
ljmp
add
or
loopne
sub
mov
shl
sarb
rcrb
popa
mov
sub
xchg
test
or
xchg
sub
aas
inc
ljmp
lret
fs
loop
xchg
jbe
lcall
stos
mov
adc
aaa
or
mov
mov
ja
enter
cmp
push
movsb
cmp
repz
push
adcb
lahf
push
mov
xchg
inc
je
lock
jbe
push
ret
andb
push
mov
sahf
xchg
or
lock
sar
icebp
sbbl
xchg
test
xor
lock
mov
aad
pop
pop
leave
pop
fidivrs
int
pop
xor
mov
and
movsl
out
push
das
xor
pop
stos
sti
aaa
inc
insb
int3
daa
out
jnp
sub
xor
das
add
inc
popa
sub
mov
jle
lahf
mov
mov
addr16
mov
jae
inc
iret
pop
pop
cmc
mov
scas
repnz
dec
test
fimuls
dec
or
inc
cmp
mov
inc
ljmp
cmp
fidivrs
sbb
xor
ja
xorl
imul
test
test
adc
cmp
mov
xor
and
scas
mov
mov
mov
loope
cmpl
incb
mov
fs
or
incl
outsb
add
fidivrl
push
out
push
out
jb
xor
jnp
and
jle
and
lds
cwtl
int
movsl
lret
ds
mov
inc
fstl
cmp
in
movsl
leave
das
lods
mov
mov
and
lcall
out
push
mov
mov
adc
xor
scas
in
sbb
popa
mov
push
add
or
mov
and
push
and
pop
std
in
mov
aad
mov
mov
push
ret
dec
jg
jbe
mov
out
jg
imul
fiadds
outsl
cmc
xchg
test
fildll
mov
scas
in
dec
call
es
jo
fwait
pop
call
and
push
nop
or
pop
xor
vphaddbq
and
jmp
xchg
rcrl
scas
xchg
es
pop
inc
out
xlat
mov
stos
test
lahf
enter
push
iret
stc
fwait
sub
mov
push
push
fisttps
aam
push
and
adc
dec
in
fisubrs
test
pop
pop
cmp
fadd
xchg
es
cmp
enter
adc
lret
xor
add
pusha
dec
jg
inc
mov
or
addb
dec
jle
mov
jle
add
mulb
fdivrp
dec
int
mov
call
pcmpgtw
jecxz
loop
mov
add
lock
lds
pusha
pop
jle
pop
decl
ljmp
pop
scas
ja
cmp
ret
push
stos
mov
sbb
cltd
popf
cs
mov
lret
addr16
andl
insl
addr16
pop
rorb
or
icebp
nop
push
aad
or
nopl
clc
sar
pushf
pop
xchg
mov
fwait
sbb
cli
add
push
adc
or
je
cmpsl
stos
jl
cli
imul
push
movsl
jns
add
jl
cmp
push
add
test
and
iret
push
imul
lret
lret
jmp
sub
dec
cli
push
out
add
xchg
xor
adc
sbb
loopne
shl
or
mov
and
push
cmpl
aas
xor
inc
jns
loope
push
hlt
inc
rcrb
dec
mulb
scas
xchg
pushf
jae
je
fdivrl
cmp
cmc
lds
pop
das
mov
lods
je
cmc
inc
jl
ss
stc
cmp
xchg
test
xor
and
fstpt
xor
outsl
xor
lods
fwait
mov
pop
fdivrp
roll
jbe
mov
stos
pop
shrl
sbb
push
mov
inc
cmp
cmp
pushf
or
hlt
lret
imul
addb
pop
out
je
jg
xor
push
inc
inc
pop
jns
into
lods
push
mov
xchg
movsb
std
testb
decb
stos
jb
sbb
sbb
scas
call
aad
sarb
pop
lret
fs
pushf
dec
out
out
push
ficomps
test
pop
xchg
out
mov
cli
mov
bound
inc
enter
fidivl
cli
xchg
mov
mov
lds
ret
jnp
imul
insb
dec
cmp
repz
push
cmpsl
cmp
xchg
sub
mov
lret
and
test
mov
repnz
push
push
cltd
push
out
jle
cmp
das
xor
or
or
out
or
pop
dec
mov
dec
inc
jnp
fldl
cmp
cmpsl
sub
cmp
rorl
jle
pushf
out
test
push
push
out
fisubl
push
lcall
popf
shll
or
ss
jne
add
pusha
mov
cs
push
clc
popf
inc
jno
das
daa
jp
add
xchg
test
push
or
add
pushf
cmp
aad
ljmp
mov
sub
mov
aad
out
pop
inc
fsubl
cli
xor
pop
and
sbb
lods
dec
sbb
or
add
inc
str
xor
scas
cld
aas
imul
mov
sub
ss
jns
mov
stos
mov
mov
jns
popf
mov
dec
shlb
sub
sub
inc
sbb
sarl
into
push
mov
or
fs
mov
data16
xlat
fdivrs
sahf
jae
movsl
bound
fdivs
int
in
pusha
or
or
xchg
cli
in
fsts
out
das
mov
movzwl
insl
jmp
push
sbb
jnp
sahf
ljmp
xchg
aas
adc
add
out
push
out
sub
fcom
mov
push
rcll
push
xlat
lcall
aad
ljmp
jle
mov
push
in
lret
insl
jmp
es
rorl
mov
lret
mov
stos
mov
lods
adc
out
pop
sbb
add
imul
sbb
pop
sub
mov
bound
mov
push
ret
mov
jbe
rorl
sub
cmc
add
or
cltd
incb
test
lahf
jo
test
adc
mov
fsubl
and
fisubl
les
push
in
imulb
pop
out
fistps
add
pop
push
add
rorl
sbb
sub
adc
fsubrl
std
xchg
mov
xor
out
icebp
add
out
pop
push
por
les
aam
add
cmp
pop
lea
out
test
dec
push
push
inc
inc
push
roll
pop
xchg
sbb
shll
sbb
dec
adc
out
insb
rclb
sbb
mov
repz
push
aad
pop
cmp
stos
sub
dec
xor
in
cmpsb
mov
sub
ficomps
vandps
fdivl
jb
jns
sub
fildl
add
ret
mov
cmp
fwait
out
xor
gs
dec
divb
stos
mov
mov
jmp
je
shl
xor
pop
lods
gs
aas
cmp
jb
mov
stos
push
ficoml
mov
leave
push
xchg
inc
xor
fs
xchg
ja
outsb
cmpsl
push
mov
cltd
outsb
dec
in
jl
sub
cmpsl
outsb
push
fwait
inc
mov
xchg
adc
inc
mov
fnsave
add
dec
mov
pop
pslld
dec
mov
lret
pop
out
lret
xor
jno
xor
lods
cmp
nop
push
push
and
lock
hlt
xchg
mov
adc
data16
push
daa
pop
and
aas
cmpl
inc
mov
hlt
stos
js
and
xor
out
xor
sub
shll
sub
hlt
inc
cmp
aas
dec
xlat
xchg
out
and
lcall
mov
jbe
xor
mov
sbb
jecxz
and
pop
leave
stos
daa
add
test
fs
dec
sub
shr
mov
push
rclb
xchg
addr16
repnz
orb
mov
scas
pop
xchg
push
adc
cld
dec
sti
outsb
xor
imul
and
cmp
aam
jnp
lret
xor
pushf
inc
scas
iret
adc
lret
scas
clc
mov
in
push
jle
xchg
or
adc
inc
jl
xchg
repz
aad
and
push
jo
rcrl
push
add
lea
std
cwtl
push
pop
insl
or
or
lahf
fwait
sbb
ss
sub
in
mov
shl
loop
mov
das
cs
add
sub
adc
cmp
mov
ror
inc
bound
mov
add
mov
enter
mov
jbe
lcall
data16
stos
fistpl
pop
push
fstl
fldcw
stos
stos
cltd
mov
mov
push
fmul
cmpl
out
lock
mov
push
insb
add
out
les
sub
fs
scas
jae
adc
and
pop
mov
add
jmp
add
ret
orl
pop
sub
jle
shrl
andb
push
test
aad
das
push
push
xor
sub
mov
test
mov
imul
xchg
call
adc
insb
popa
push
repz
cmp
jno
pop
stos
sub
sub
loop
ficomps
dec
jmp
popl
xor
or
mov
notl
fadds
ds
cmp
popf
scas
mov
mov
cmp
cmp
xchg
xchg
test
ja
outsb
outsb
fwait
mov
push
mov
or
pushf
xlat
ja
hlt
dec
xchg
jg
pop
pushf
ljmpw
xor
leave
xchg
push
pop
imul
push
xor
scas
add
jle
fldenv
push
fcomi
mov
lock
insl
add
ret
movsl
gs
outsb
scas
sbb
ss
test
rolb
push
addr16
and
jbe
xchg
pop
pop
or
or
jmp
cmpsl
push
or
jnp
inc
andb
cmp
shlb
sbb
movsl
imul
push
int
popa
push
fwait
jle
or
mov
cltd
mov
or
inc
push
xor
cmp
push
jb
movsl
aaa
inc
test
sub
mov
dec
stos
iret
testl
jle
or
sti
ljmp
add
std
dec
mov
push
sub
fsubrl
cmp
xor
lods
mov
inc
andl
or
xlat
jne
insb
cmc
cmpsb
or
jns
dec
pop
pop
test
loop
sub
enter
pop
loop
and
xor
jmp
in
sbb
add
js
mov
in
out
nop
fists
pusha
push
xchg
outsl
jl
cmpsl
out
xchg
pusha
loopne
pusha
sbb
in
lahf
push
das
and
ficompl
fldln2
cld
int
pop
adc
inc
sub
push
and
ss
mov
adc
xor
dec
rorl
sbb
adc
sub
lcall
outsb
call
sbb
inc
sub
and
ljmp
push
cli
out
inc
jp
or
cld
xchg
adc
scas
adc
and
mov
mov
clc
sbb
stc
scas
and
adc
jecxz
mov
adc
pop
sbb
daa
scas
mov
or
xchg
std
adc
mov
or
jge
lahf
lret
insb
add
sub
adcb
dec
adc
insb
xor
mov
pop
notl
sbb
cmpsl
jae
ja
xor
addr16
lahf
mov
dec
adc
cmp
sbb
mov
jecxz
lds
cwtl
in
lds
fisttpl
xor
dec
loope
cmp
and
adc
xchg
fdivl
or
test
icebp
cmp
pop
mov
lea
or
out
gs
insb
sbb
mov
addr16
in
insb
ss
enter
or
jne
or
cmp
pop
cli
scas
cmp
mov
xchg
cld
adc
add
pop
and
sub
pushf
lock
daa
fistps
mov
mov
jmp
jno
pslld
rcr
fistps
mov
stos
mov
stos
inc
ret
and
icebp
jg
jge
repz
xchg
sbb
pushf
xchg
and
cs
orl
adc
xlat
aas
fwait
aam
jns
or
inc
push
mov
mov
cmpl
icebp
cltd
push
mov
sub
mov
and
in
add
xlat
inc
xor
mov
in
scas
mov
aas
sbb
testl
jmp
jecxz
fidivrs
push
xor
pushf
dec
pop
mov
lods
bound
inc
dec
jp
push
pop
inc
inc
loope
sub
jl
mov
mov
pop
cltd
dec
xchg
mov
add
mov
lcall
loopne
data16
in
cmp
xchg
loope
sbb
or
ficompl
inc
out
negb
idivl
aas
loop
lods
fbstp
and
mov
mov
sub
loopne
inc
into
fsubrl
lea
inc
sbb
ss
cmp
jae
pop
rcrb
pop
std
cmp
sbb
test
cs
push
in
adc
imul
jae
cmp
repnz
mov
pop
popa
subl
scas
jno
adc
dec
sub
push
in
push
popa
imul
inc
adc
lcall
sub
stc
sbb
movsb
cld
push
call
lock
jmp
popa
movsb
pop
gs
cmp
pusha
incl
test
inc
push
pop
stos
cmp
lock
into
roll
idiv
inc
mov
add
out
gs
jle
cmp
fsubs
call
push
in
lods
icebp
stos
mov
push
xorl
add
insl
lcall
inc
mov
into
inc
fimuls
gs
fiaddl
das
adc
nop
enter
loope
jae
stos
jecxz
pop
and
sbb
test
fistps
mov
test
data16
jnp
mov
mov
in
arpl
mov
jb
pop
test
cmpsl
cmp
shl
daa
pop
inc
jle
stos
lahf
add
dec
ffree
mov
pusha
mov
cmc
cmp
jl
jae
repz
in
popa
outsl
sub
mov
das
icebp
je
mov
fimuls
jg
jl
lcall
xchg
cmp
sub
cmc
dec
es
lods
stos
ja
bound
ret
add
push
repnz
xlat
sbbb
inc
sbb
psllw
sbb
push
je
jecxz
xorl
cmp
xchg
push
add
jb
ret
cmp
cmp
xor
ficoml
lods
mov
push
adc
call
push
cltd
stos
dec
sbb
and
xchg
push
push
push
adc
sub
xor
loop,pn
adc
sub
es
or
or
ljmp
mov
stos
cwtl
lds
jae
add
jmp
jno
jnp
cmp
hlt
negb
daa
jp
dec
cmp
mov
jmp
lods
data16
out
aad
jno
test
sbb
in
fnstenv
sbb
inc
movsb
inc
int
mov
out
xor
pop
sbb
popa
sub
adc
call
pop
and
fs
xor
add
and
xchg
jae
add
hlt
shlb
mov
in
xor
lea
mov
adc
call
insb
xchg
adc
pushf
dec
push
sbb
pop
mov
ja
test
insb
popa
enter
lcall
sub
dec
sti
adc
in
mov
es
les
sub
aaa
imul
cmp
cmc
lds
mov
iret
adc
and
iret
mov
shll
mov
pop
cmc
xor
push
jg
mov
jmp
xchg
test
repnz
inc
pop
mov
iret
xor
in
inc
push
ret
sbb
pop
movsl
jnp
mov
mov
mov
adc
xor
out
movsb
cli
outsb
addl
inc
mov
ret
and
and
in
adcl
popl
rcrl
push
cmpl
or
jle
and
in
dec
adc
ret
xchg
push
inc
xchg
insl
lods
inc
in
jge
lret
stc
push
mov
fcomp
mov
cmp
cmpsb
mov
sub
pop
cltd
ljmp
cmp
mov
shl
sub
xchg
mov
sub
or
pop
sbb
jno
add
arpl
mov
push
adcl
jns
pop
fdivs
mov
pop
arpl
popf
cmpsl
ljmp
jecxz
repz
repz
mov
popf
in
pop
or
mov
and
ljmp
incl
inc
add
and
imul
pop
les
or
je
cld
pop
xor
imul
es
fcmovne
js
les
inc
xlat
pop
mov
cmp
push
inc
pop
repz
into
adc
sbb
sbb
mov
cmpsb
add
pusha
mov
mov
loope
ret
cmp
sbb
mov
sbb
or
out
les
mov
jmp
mov
lock
in
sbb
xchg
cmp
pop
leave
rcr
jge
call
xor
push
xlat
nop
fwait
and
imul
jle
and
mov
lahf
add
mov
cmp
loop
divb
mov
aas
mov
adc
push
xchg
clc
fcmovnbe
je
pop
or
ds
mov
mov
xor
sub
lret
bnd
mov
rcl
sbb
leave
out
mov
xchg
lret
lret
jae
mov
popf
rcll
es
mov
fwait
arpl
adc
int3
inc
xor
push
adcb
push
dec
mov
jle
mov
mov
inc
dec
add
cmp
dec
and
add
ret
mov
int3
data16
inc
sti
push
push
rclb
dec
ds
dec
sbb
xor
cmp
pushf
sti
leave
sti
cmp
test
jbe
push
push
mov
adc
push
jnp
xchg
jmp
mov
sub
mov
mov
gs
mov
out
fwait
pop
adc
leave
fistpll
inc
mov
and
lods
out
inc
fistpll
in
repz
outsl
pop
cmp
in
and
and
xor
shl
jg
in
xchg
mov
inc
call
pusha
mov
push
and
push
mov
mov
test
jp
inc
ja
mov
and
cmp
in
pop
sub
aaa
and
sbb
push
and
sub
jle
mov
pop
or
dec
cmpsb
push
hlt
shll
sbb
xchg
sub
sbb
stc
and
lds
pushf
icebp
aad
xchg
pop
sahf
stos
fs
test
nop
imul
inc
and
js
into
push
xor
das
or
sub
fistps
sub
pop
jbe
jo
insl
and
enter
aam
add
popf
mov
icebp
adc
scas
push
iret
cmpsb
in
lret
mov
cmpsb
clc
xchg
popa
adc
decb
int3
fdivl
sbb
pop
cmpsb
mov
inc
andb
add
push
lea
cltd
mov
pop
xor
aas
xor
add
loop
xchg
jge
mov
push
dec
jp
jnp
in
push
cmp
lods
bound
js
or
and
test
mov
out
inc
jae
jne
or
icebp
cmpsl
jbe
xchg
sub
dec
cmp
xor
and
fistl
inc
inc
aam
pop
ds
adc
xor
and
pusha
xor
cmp
inc
mov
inc
jae
mov
push
xor
les
cmpsb
xor
dec
push
jmp
lods
mov
sub
cmpsl
aas
pop
xchg
in
inc
xorb
outsb
push
cmp
mov
mov
pop
push
data16
dec
sti
lock
outsb
rcrb
cli
pop
cld
imul
movsb
mov
sbb
dec
pop
dec
xlat
lahf
shl
ljmp
inc
adc
cltd
adc
out
mov
push
pop
add
lcall
or
pusha
scas
fiadds
xor
cmp
pop
dec
in
popa
sub
int
xor
mov
shlb
into
and
arpl
lock
enter
push
sbb
adcl
lret
lock
jge
add
inc
sarl
ljmp
add
or
push
aaa
or
sbb
push
loop
dec
jl
ja
das
lods
in
adc
inc
xchg
pop
hlt
jne
jbe
lret
sub
sti
in
pop
adc
shlb
or
and
and
insl
push
mov
xchg
cmpsl
outsb
test
add
lret
int
jecxz
shrl
sarb
sarb
dec
in
xlat
adc
repz
sbb
or
sbb
getsec
fwait
int3
jg
cmpsb
mov
pushf
clc
cmpsb
aam
cli
orl
hlt
dec
loope
ss
cmpsb
cmp
xchg
shrl
and
pop
addr16
fstps
sub
push
adc
pop
adc
repz
mov
mov
xchg
ljmp
sub
aam
fcoms
mov
scas
mov
rcrb
mov
add
pusha
mov
jp
enter
xchg
xorl
and
push
jae
es
xchg
fsts
mov
inc
jg
mov
mov
push
xor
jb
jl
mov
or
push
mov
aaa
imul
andl
jbe
fwait
call
push
mov
jge
push
adc
dec
ret
jb
cmp
push
loopne
sbb
dec
dec
jle
mov
push
mov
adc
cmp
fimuls
cmp
push
clc
outsl
jno
jne
pop
jmp
pop
pop
xchg
dec
pop
pop
ljmp
sbb
cltd
iret
outsl
cmc
mov
xchg
imul
in
mov
out
pop
add
sbb
or
idivb
sbb
subl
addl
xchg
sbb
lock
mov
adc
jbe
push
roll
movsl
inc
jmp
inc
cmp
loope
add
add
lods
xor
lret
sahf
ret
iret
jns
pop
loop
dec
arpl
rcll
xchg
into
and
push
jae
aam
out
xchg
mov
add
out
mov
test
adc
cmp
push
cmp
repnz
testb
sbb
lret
dec
jb
iret
sub
les
mov
out
movsb
in
jmp
les
xor
daa
stos
jle
cltd
jge
sub
dec
and
adc
push
addr16
rorl
scas
insb
xlat
lea
ret
xor
jmp
inc
adc
insb
jmp
sub
mov
lds
aad
or
sti
push
mov
arpl
and
cmp
jae
lods
mov
outsl
xor
in
in
pushf
pop
or
jge
ja
fnstcw
mov
adc
jp
outsl
mov
loopne
dec
adc
adc
in
cmp
pushf
leave
mov
out
mov
into
sarl
mov
aam
sbb
subl
loope
mov
outsl
inc
lret
mov
mov
mov
cli
test
lcall
cmp
into
inc
jecxz
daa
mov
cmp
call
jae
and
mov
pop
pop
push
inc
ja
jbe
les
mov
icebp
fimuls
cwtl
pop
lock
mov
mov
sub
outsl
pop
push
ja
adc
test
mov
mov
pop
push
sub
adc
test
addl
sbb
jp
fsubl
xchg
fwait
cmp
movl
mov
dec
in
jg
xchg
les
into
cltd
call
add
ficoms
or
and
mov
jae,pn
fwait
add
das
ss
scas
mov
fucomp
mov
or
filds
sbb
roll
mov
jp
push
push
inc
fstpl
inc
test
push
imul
jb
push
jge
or
adc
jmp
jg
and
out
in
fwait
or
pop
push
inc
xor
aam
imul
push
dec
sti
add
mov
fucomi
sarb
movsl
lret
repnz
dec
jb
out
jg
daa
lods
pop
aam
test
pop
mov
inc
out
push
scas
insb
cmp
stos
cmp
stos
sarb
jmp
dec
loop
push
gs
imul
nop
cmp
sub
pop
mov
push
sbb
xchg
jo
lods
sbb
and
je
mov
aaa
pop
add
lods
jl
and
imul
jo
xchg
aas
jns
xchg
jp
jne
xchg
xchg
movsb
daa
insl
pop
mov
hlt
push
push
jns
push
ss
lods
sub
loop
dec
dec
fadds
inc
stc
lods
and
mov
cld
adc
push
sahf
add
pop
cmc
insb
stos
xor
lcall
mov
mov
cmpsl
add
popf
sbb
mulb
pop
aaa
icebp
xchg
adc
dec
out
and
mov
aad
pop
repnz
push
movsb
cli
pop
push
adc
hlt
int
mov
shlb
dec
dec
adc
andl
loop
mov
xor
and
fsts
addr16
ret
lods
pop
imul
jg
inc
sub
jg
sbb
jg
pop
icebp
add
idiv
dec
sarb
push
ja
andb
xchg
lds
pop
mov
insb
dec
mov
in
add
xor
enter
or
lods
fisubl
mov
cmpb
in
xchg
inc
and
lahf
dec
sbb
roll
scas
sbb
dec
push
fwait
std
mov
je
and
jbe
insb
sbb
mov
mov
imul
fsubrp
or
shll
mov
push
mov
adc
call
fimuls
sub
adc
sbb
and
subl
pushf
cltd
arpl
adc
mov
lock
arpl
pushf
dec
mov
mov
add
in
leave
mov
loope
mov
or
sahf
sbb
adc
mov
push
out
popf
sub
add
fldl
bnd
push
cmpsl
adcb
adc
aam
adc
push
and
popa
loopne
sbb
sbb
je
and
cmpsb
jge
testb
pushf
or
sti
fiadds
mov
push
mov
lret
stos
mov
jnp
and
gs
imul
push
push
rep
aam
push
data16
jo
mov
mov
add
loop
rorl
mov
dec
stc
add
into
jb
push
iret
and
pop
cmp
call
add
push
ret
dec
fbld
xorl
es
adc
cld
lds
out
subl
push
ss
or
mov
imul
shlb
nop
clc
mov
loop
out
mov
ds
xor
inc
cmp
pushf
dec
mov
jge
jge
jae
je
adc
rorl
xor
xchg
and
pop
jbe
sub
cmp
dec
int
adc
xor
leave
mov
jne
mov
popf
adc
repnz
cmp
sarb
push
movsb
inc
xchg
inc
add
out
cwtl
js
inc
sbb
mov
test
jmp
cmpl
dec
data16
cmc
mov
fadds
fdecstp
rorl
xchg
lret
xchg
cltd
push
xchg
jecxz
out
je
cmpsl
cs
lods
fimull
sbb
sbb
fdivr
jmp
pop
enter
mov
rorb
mov
mov
test
cs
push
fisttpll
jg
or
stos
and
or
aam
cs
dec
xchg
inc
je
es
cmpl
cmpl
test
dec
ljmp
add
fwait
xor
or
dec
or
dec
pop
push
push
mov
fcomp
cmp
push
aam
out
icebp
jmp
jle
push
cmp
outsl
dec
push
push
sti
rol
dec
push
xchg
mul
or
mov
jnp
out
dec
addr16
pop
mov
add
cmp
outsl
mov
sar
mov
shl
aad
inc
add
fcmovnu
std
sti
lcall
test
add
or
mov
adc
xor
addr16
mov
inc
stc
jmp
sahf
in
xchg
and
js
push
cmp
out
movsb
xchg
leave
adc
mov
and
jo
jg
dec
lock
int3
lea
push
mov
jns
popa
rcrl
adc
lods
sbb
sub
sbb
lahf
lahf
fistpl
out
xchg
iret
push
and
jno
outsb
xorl
mov
test
ret
pop
jae
mov
xchg
xor
shl
mov
adc
push
cld
jge
fistpl
rorl
das
mov
pop
inc
mov
lea
or
cmc
ret
addl
jnp
mov
aaa
pop
push
push
std
test
iret
ja
adc
mov
es
xor
ret
xchg
ja
pop
outsl
ljmp
fwait
xchg
xchg
mov
inc
adc
pusha
push
jle
cmpsb
ret
in
mov
push
popf
sub
movsl
movsl
std
and
movsl
cmpps
pop
push
imul
adc
daa
cmp
jmp
inc
movsb
arpl
cld
adc
fcoms
mov
into
outsl
inc
jg
lock
cmp
gs
enter
jp
lock
clc
and
dec
stc
inc
imul
lcall
cwtl
in
mov
ja
iret
dec
dec
xlat
mov
inc
stos
fidivs
in
pop
jle
ret
into
cwtl
movsl
fstps
mov
push
sbb
aam
mov
adc
xchg
jl
outsb
xor
cltd
fnstcw
mov
outsb
or
xchg
inc
xor
incl
addr16
dec
push
lahf
je
dec
shll
cmp
les
add
into
jbe
cmp
inc
sti
or
or
andl
or
adc
dec
ljmp
icebp
jmp
pop
mov
cmpsl
out
sti
dec
cmp
and
xor
iret
cmpsb
inc
aas
and
fdivrp
sbb
xlat
dec
pop
fisubrs
fwait
adc
mov
inc
or
movsl
xor
aam
inc
aam
fiaddl
adc
sub
lret
je
mov
mov
xor
xchg
dec
stos
inc
pop
jmp
cmpb
sbb
jmp
push
shl
loope
mov
lods
lods
ret
pop
pop
test
fcompl
push
int3
xchg
inc
and
xorl
push
inc
mov
cwtl
ja
test
pushf
add
cs
pushf
mov
xchg
loop
dec
movsl
scas
jge
push
mov
mov
xor
in
stos
mov
mov
or
shrl
mov
iret
in
mov
mov
or
pop
je
in
or
aas
insl
shrl
loop
jbe
rorb
sub
xchg
adc
rcll
iret
imul
addr16
cli
test
loopne
ret
aaa
mov
hlt
jbe
cwtl
ljmp
cmp
or
cmp
stos
xchg
testl
dec
push
pop
and
mov
add
aam
push
clc
or
leave
sub
inc
ds
das
jo
add
lods
push
push
std
movsb
inc
repnz
daa
dec
js
mov
aad
iret
push
pop
push
mov
subb
imul
mov
dec
mov
fimuls
push
xchg
xchg
pop
xor
dec
push
add
enter
xor
ljmp
insb
mov
faddl
mov
or
cmp
cld
aas
aam
pop
mov
adcb
lods
iret
jg
aam
mov
xchg
cmp
lahf
orl
jno
lods
add
fdivs
pushw
pop
ret
cmpsb
mov
xlat
lret
and
stos
pusha
push
les
leave
js
xchg
aam
jbe
pushf
frstor
insb
or
cmp
scas
xchg
push
in
sar
imul
lods
add
fwait
mov
test
lock
ss
sub
insl
xchg
pop
push
cmpsl
aad
mov
push
loop
mov
lret
sbb
pop
xorb
push
outsb
scas
data16
or
push
jne,pn
lock
aam
hlt
lds
lahf
pop
in
es
mov
in
loope
xchg
sbb
inc
push
enter
adc
stos
cmpsl
daa
leave
popa
sbb
inc
imul
sbb
rcll
push
pop
dec
stos
sbb
in
jp
mov
pop
lret
or
cmp
mov
sbb
clc
std
es
and
out
push
gs
test
scas
lds
in
dec
push
imul
fbstp
jmp
fimull
push
shrd
mov
mov
mov
int3
push
les
xchg
das
xchg
sub
jl
lods
sbb
sbbl
aas
xor
enter
lcall
mov
add
ficomps
mov
inc
sbb
mov
scas
push
enter
adc
add
inc
sub
cmpsl
decl
sbb
adcl
mov
dec
je
or
xor
pop
xor
pop
das
adc
sti
jae
js
test
sbb
loop
notl
iret
mov
xor
cld
in
cmpsb
add
cmp
push
mov
movb
and
sbb
mov
xchg
das
dec
popa
call
cwtl
shl
dec
mov
inc
sbb
push
andl
xor
push
and
and
pop
xor
arpl
push
pop
jo
cmp
pushf
fcomp
sahf
mov
jecxz
loope
pusha
xchg
dec
jo
rorb
sbb
jmp
jl
pop
add
push
and
adc
and
clc
mov
inc
mov
jo
sbb
add
cwtl
and
cmp
xlat
fld1
pop
repnz
in
mov
in
push
mov
fs
mov
imull
lcall
loop
stos
adc
aaa
cli
lret
stos
push
xor
divl
inc
mov
aaa
cmp
cmp
pop
inc
repnz
mov
enter
adc
lret
xor
sub
sarb
adcb
push
cwtl
add
sub
in
out
mov
into
js
jb
jmp
pop
fsubp
inc
adc
xchg
xor
orl
ret
cmc
mov
jp
cmp
cmp
shrb
aas
adc
xor
mov
mov
idivl
or
aaa
lret
bswap
test
loope
movsl
push
ja
mov
rep
jns
shl
mov
mov
in
aam
pop
dec
cmp
or
loop
mov
test
or
out
imul
ret
dec
mov
push
adc
or
mov
push
out
popf
add
mov
jge
xchg
lahf
out
mov
xchg
dec
xchg
shlb
loop
jae
in
add
shrb
cmp
or
pop
jle
inc
mull
mov
pop
xchg
adc
fidivrs
sbb
sbb
xor
loope
rcl
insl
das
sbb
sbb
insb
iret
jno
and
ds
inc
addr16
jp
iret
xchg
sbb
scas
inc
pop
xor
lods
call
sub
jmp
divb
or
cmpl
daa
fidivrs
lea
fmuls
cmpsb
and
inc
sub
aam
movsb
insl
push
mov
or
sub
mov
xor
dec
aam
cmp
out
lret
push
iret
xor
push
sbbb
in
aaa
arpl
xor
or
jle
sub
subb
cld
mov
xchg
scas
nop
pusha
dec
add
scas
sbb
sbb
mulb
scas
imul
xchg
scas
add
and
enter
hlt
adc
cmp
aaa
mov
cltd
jp
jl
mov
xor
pusha
mov
lods
iret
push
in
cld
push
push
push
jns
dec
pop
jle
mov
and
mov
add
les
ret
enter
in
outsl
cmp
pop
loop
pop
loope
add
int
push
in
sbb
gs
fsts
insb
jns
adc
pop
popa
stos
dec
loope
xchg
scas
xchg
scas
testl
mov
aam
mov
fwait
dec
xchg
inc
xchg
or
daa
scas
daa
mov
push
lods
in
lods
stc
out
mov
sub
jb
xchg
rolb
aas
adcb
pop
fwait
adc
in
cmp
scas
jecxz
std
pop
mov
jnp
or
fwait
mov
es
push
cmp
pop
adc
cmc
mov
xchg
sbb
roll
add
mov
lods
inc
pop
fistpll
mov
push
and
sub
xchg
ret
cmp
push
hlt
ss
jmp
pushf
scas
pop
cmc
add
mov
loopne
out
inc
add
hlt
lods
mov
xchg
mov
cmpl
push
rcrl
add
pop
xchg
testb
movsl
cmp
push
or
and
mov
int
adc
xchg
out
mull
mov
ljmp
xchg
or
sub
pop
add
jge
stos
stc
subl
ljmp
mov
xchg
jecxz
inc
push
pusha
popa
sub
loop
mov
std
inc
dec
sarl
and
shll
into
mov
loop
das
stos
aaa
in
and
or
xchg
and
leave
iret
test
add
dec
mov
jge
cmp
fmul
mov
cmc
fwait
cmp
pop
fcmove
fwait
in
pavgw
dec
pop
sub
outsl
fidivrs
xor
xlat
jl
enter
inc
lea
push
sub
push
bound
xor
jb
jecxz
mov
movsl
sub
push
cmp
loope
add
mov
mov
or
gs
xor
bound
js
arpl
pop
cmp
pop
or
push
out
mov
or
leave
outsl
jo
stos
sbb
roll
xor
test
pop
std
jmp
les
pusha
push
xchg
cmp
imul
cmc
popfw
fnstenv
test
test
cmp
xchg
push
mov
or
cmp
and
ja
imul
add
ret
out
jp
leave
cmp
sbb
movsb
jl
cmp
jne
mov
mov
push
in
lret
lret
das
dec
scas
sti
xchg
cli
xor
inc
inc
outsb
sbb
xchg
fwait
mov
mov
int
mov
out
dec
cmp
or
xor
jl
mov
sub
pusha
adc
std
xor
lret
jmp
push
mov
mov
in
mulb
fnstenv
pop
pop
int
cwtl
mov
cmpsb
mov
cmc
xchg
sbb
and
jno
dec
jae
dec
xchg
bound
jb
adc
or
mov
je
cmpsb
sbb
dec
outsl
add
sub
push
cmp
lods
js
jmp
decl
push
daa
and
mov
adc
sub
adc
inc
lods
in
jne
mov
pop
in
cmp
pop
cli
push
jno
jge
rcrl
aas
cmc
stc
lods
lds
mov
icebp
xlat
xchg
mov
inc
xor
xorl
add
push
scas
std
jle
inc
cmp
jmp
sahf
push
arpl
scas
addr16
xchg
gs
mov
out
cmpsb
adc
jp
lret
sarb
das
nop
leave
pusha
push
mov
push
incb
sub
mov
jle
xor
push
fcompl
pusha
out
outsl
mov
lods
stos
subb
adc
xchg
cmc
xchg
or
sbb
xlat
xor
xor
sub
int
testb
pop
xchg
mov
cs
xor
ss
or
hlt
fbstp
adc
fsts
jl
aas
out
mov
cmp
mov
sbb
sti
push
dec
dec
lahf
sbb
lea
mov
in
test
hlt
lds
fldenv
loopne
jne
in
add
push
adc
scas
fwait
arpl
dec
sbb
jno
leave
test
rcl
leave
out
push
mov
cmp
sbb
add
clc
push
fsubrs
rol
test
pop
enter
mov
or
fsub
jmp
mov
iret
sub
mulb
xor
jl
arpl
fisttpl
mov
and
testl
inc
pop
jle
sbb
xchg
pop
sbb
loopne
das
mulb
add
mov
nop
addb
pop
call
jl
xor
nop
mov
add
add
pop
pop
push
ljmp
xchg
mov
dec
jnp
mov
es
test
ljmp
mov
les
xor
into
inc
cltd
or
inc
imul
scas
dec
mov
lea
aam
cmp
icebp
push
inc
repnz
or
dec
sbbl
test
sahf
or
xor
sub
neg
lcall
jne
mov
pop
and
inc
add
fcoms
pop
inc
pusha
arpl
hlt
loope
test
daa
xor
subb
add
fsubl
les
jae
inc
mov
jns
in
inc
jl
popf
ror
data16
jg
push
sbb
xor
dec
out
outsb
sbb
or
sbb
or
insl
lods
pop
cmp
mov
push
add
cmp
lret
push
cmpsl
sub
cmp
push
subb
cmp
movsb
pop
imul
cmp
sbb
lea
rcrl
cld
insl
push
pop
mov
and
fisttpll
lahf
mov
push
or
inc
aad
pop
arpl
xorb
inc
ret
xchg
mov
push
arpl
and
and
cmp
or
cwtl
and
dec
jmp
mov
shll
inc
fsubl
xchg
mov
aas
and
movsl
lea
ja
ss
sub
push
pop
xor
aas
outsb
sub
std
xor
pop
adc
cs
inc
add
and
mov
jp
sbb
push
scas
pushf
mov
es
lds
mov
xchg
xlat
shll
pop
mov
or
movsb
xchg
cmpsl
rcr
inc
push
sub
adc
jp
fadds
movhps
repz
in
stos
fistpl
aaa
mov
fidivl
mov
xchg
and
dec
lds
fcompl
ret
xchg
into
sub
lds
scas
mov
fs
fmull
sbb
shll
mov
sbb
loopne
xchg
xor
das
or
rcrb
lods
dec
adcb
sbb
adc
push
jge
pop
add
add
mov
test
mov
sahf
jp
jp
dec
push
rcrb
mov
cld
mov
jl
sahf
js
out
xor
and
xchg
je
pop
daa
xor
shlb
push
mov
mov
cli
mov
dec
fnstcw
iret
stos
sbb
mov
repz
add
iret
scas
push
test
je
lods
pusha
imul
aad
push
lahf
push
addr16
sbb
lea
and
mov
pop
jo
mov
out
pop
into
pop
cmpsb
sbb
cltd
pop
shlb
cmp
cmp
or
scas
int
fisubrs
or
insl
imul
stos
inc
or
pop
js
scas
arpl
push
sar
and
jl,pn
push
mov
lods
popf
adc
add
arpl
rol
imul
pop
ljmp
xchg
icebp
xor
ds
sub
pop
into
add
daa
pop
js
insb
jmp
mov
ret
adc
mov
aam
repnz
shrl
or
jnp
mov
ja
fimull
cmpsb
stos
mov
enter
pop
inc
and
fs
fs
push
sbb
sbb
and
sbb
rol
push
popa
mov
or
fs
insl
test
adc
mov
dec
pcmpgtw
fcmovnbe
in
in
xorb
test
mov
fwait
stc
jnp
cs
dec
mov
ret
insl
movsl
jl
aas
stc
xchg
jmp
cwtl
sar
pop
xchg
ss
sbb
incl
shlb
nop
jmpw
shrl
mulb
sbb
test
dec
je
cmp
imul
aaa
inc
je
xlat
xchg
fwait
push
jne
inc
and
ret
lahf
jmp
xchg
test
mov
inc
pop
sub
rolb
dec
test
jg
int
push
sub
inc
pop
inc
cmpsb
lds
aad
jo
sub
inc
mov
and
cmp
int
outsb
dec
mov
xor
stos
sub
clc
jmp
jle
pushf
int3
and
jle
fistl
hlt
inc
sub
scas
adc
jns
push
adc
sar
pushf
js
dec
mov
dec
mov
mov
mov
add
and
sub
idivb
pop
cs
jmp
jg
mov
dec
jmp
mov
and
mov
cltd
jo
nop
xchg
shll
sbb
int3
sub
and
sub
sub
cmp
dec
fimuls
clc
cmpsl
ja
pop
outsl
mov
clc
and
dec
xchg
xchg
sbb
mov
out
jle
loop
or
test
add
jno
and
cmc
xor
dec
dec
mov
les
or
mov
data16
jle
test
mov
out
add
push
rcrb
int
loop
mov
xor
add
roll
jae
cltd
sub
stos
ja
das
jp
or
xlat
iret
movsb
sbb
cmp
jmp
mov
cmp
xor
or
mov
in
and
cltd
pop
jns
cmp
cmp
dec
push
insl
or
add
pop
pop
inc
fstpt
dec
mov
fucomi
outsl
sub
jmp
adc
iret
mov
fs
inc
push
sahf
push
pop
push
inc
lods
or
push
lock
iret
addr16
lods
adc
test
lahf
pop
and
enter
pusha
mov
xlat
inc
stc
sub
pop
pop
imul
dec
rolb
fiaddl
adcl
lret
lods
adc
xchg
xor
sbb
hlt
mov
xchg
push
stc
in
es
jno
shll
shrl
cli
jmp
xchg
sbb
cld
sbb
aas
xchg
enter
arpl
cltd
ds
imul
adc
icebp
mov
mov
push
loope
insl
push
scas
loopne
inc
mov
mov
add
mov
popa
cltd
fisubl
scas
pop
clc
enter
cmp
jmp
cs
mov
push
mov
mov
sub
xor
test
inc
into
icebp
into
out
cltd
in
mov
cli
ret
icebp
xchg
out
mov
rorb
sub
cmp
jecxz
imulb
aam
xchg
icebp
je
jbe
push
popf
js
aam
mov
pop
xchg
jae
mov
xchg
inc
out
roll
nop
ljmp
repz
inc
xor
and
ss
xor
or
mov
fs
cmp
nop
ss
xlat
cwtl
jl
decb
ret
inc
mov
add
xchg
mov
dec
or
idivl
aad
out
xchg
shr
into
cs
mov
mov
pop
out
xor
out
fs
test
adc
dec
lcall
push
xchg
adc
bound
push
and
stc
les
shll
fcmovnb
into
mov
pop
in
cmp
jp
subl
iret
cmp
leave
xchg
neg
jecxz
pop
jne
push
cwtl
dec
cmpsb
test
test
jmp
std
sbb
jb
out
jae
pop
xchg
fsubrs
pop
jae
frstor
loopne
stos
fidivl
rol
out
mov
cmp
push
insl
add
xchg
aam
jns
dec
mov
and
sub
cwtl
or
neg
xchg
xlat
popa
cmp
movsb
inc
jg
test
in
and
xlat
jns
push
push
test
add
mov
test
repz
shl
setno
jmp
adcb
mov
jae
inc
dec
xchg
imul
mov
mov
fistps
push
xchg
mov
pop
lcall
cmp
mov
mov
xor
inc
gs
popa
cwtl
inc
push
dec
call
xor
jnp
push
mov
inc
mov
lods
jg
xchg
ret
test
mov
push
push
inc
inc
sbb
ljmp
out
call
xchg
push
push
in
scas
and
push
sub
sub
sbb
pop
xchg
fs
out
stos
cmp
fsubs
scas
mov
lock
stc
jp
jnp
ss
xlat
pushf
sahf
in
lea
ja
pop
mov
faddl
sahf
pusha
mov
add
jns
dec
ja
stos
jmp
aaa
sbb
insb
sbbb
cmc
imul
sub
pop
inc
pop
mov
jnp
dec
aaa
push
add
jae
push
jg
mov
and
jle
ret
imul
push
jmp
and
movsb
pop
cmpsb
aam
xor
dec
aas
add
inc
cmc
fldcw
sub
xchg
dec
xlat
pop
fstps
or
inc
inc
aad
daa
jge
sbb
inc
hlt
sbb
ret
cmp
adcl
test
mov
dec
mov
or
adc
lcall
repz
xchg
push
inc
sub
cmp
in
aad
sub
and
shll
adc
sub
and
or
addl
pop
je
sub
out
or
pop
xor
mov
jo
fisubs
fistl
adc
xor
cs
cmp
sub
ror
jmp
add
sub
and
leave
out
dec
mov
mov
popa
iret
and
adc
addr16
in
and
les
sbb
mov
or
cltd
push
jle
popa
push
stos
decb
int3
adc
fsubrl
xor
sti
movsl
das
inc
pop
push
mov
dec
push
enter
sbb
test
xor
push
mov
ficomps
pop
sub
cwtl
je
loopne,pn
dec
push
dec
adc
adc
popf
cmpsb
or
mov
mov
push
fstps
dec
hlt
bound
add
jmp
aad
rclb
mov
gs
mov
push
push
mov
sahf
sub
adc
cli
mov
jb
loopne
in
cmp
xor
add
into
sub
mov
pop
push
cs
add
xor
push
roll
or
and
sbb
push
cwtl
les
pop
mov
pop
push
es
push
jmp
jl
aad
imul
leave
in
int
nop
mov
ret
inc
inc
lcall
cmc
dec
inc
push
adc
pop
test
cmp
mov
es
les
add
sti
jle
outsl
mov
jo
loop
dec
test
add
mov
loope
and
enter
jns
dec
flds
in
xor
sub
fbstp
xchg
sahf
mov
dec
jb
fwait
orl
test
add
mov
dec
push
les
mov
or
pushf
jns
aam
scas
jmp
rcrb
lods
out
mov
mov
push
aaa
lret
jg
adc
cmpsl
dec
loope
imul
clc
mov
xlat
pop
cmp
mov
mov
les
adc
add
into
lcall
mov
cwtl
xor
data16
add
xchg
adc
movsb
clc
mov
cmpsb
xor
or
push
mov
cli
test
push
mov
and
add
cltd
xorl
mov
sti
add
and
mov
adc
jecxz
cmp
dec
or
push
int
lods
jmp
dec
dec
pop
push
push
adc
push
dec
call
xchg
outsb
not
sti
fldenv
icebp
pop
mov
xchg
scas
adc
xlat
xor
shlb
pop
fldt
inc
sub
cld
xchg
push
or
incl
int3
or
inc
lcall
mov
lea
or
mov
icebp
dec
shll
xchg
sub
or
adc
mov
lret
lcall
jp
push
iret
push
mov
xor
jo
addb
or
je
es
xchg
push
sbb
cmp
pop
pop
mov
lcall
pop
xor
pop
jecxz
clc
and
inc
or
jne
daa
cld
mov
sub
xchg
adc
sub
xchg
sbb
add
xchg
pop
mul
mov
push
scas
inc
xchg
jns
inc
mov
ljmp
lods
test
outsl
lods
cwtl
lcall
jl
fbstp
pop
add
mov
insb
inc
loop
cli
cmp
icebp
mov
testl
movsl
icebp
cmp
clc
xchg
imul
in
or
pop
push
sub
adcb
repnz
pop
adc
inc
mov
loopne
push
test
movsl
mov
sahf
vcvtsi2ss
pop
mov
pop
fisttps
xchg
out
inc
jbe
lret
repnz
scas
mov
fcompl
arpl
jnp
pop
adc
xchg
arpl
jle
cwtl
xor
test
addr16
outsb
leave
inc
sub
jo
outsb
pop
std
push
dec
adc
loopne
lods
push
sub
mov
and
stc
outsl
popf
subb
xor
and
adc
xor
sbb
pop
mov
out
and
fisttps
test
cmpsb
js
xchg
addl
popa
push
mov
jmp
fisttpl
and
adc
xor
cli
pusha
imul
movsb
pop
mov
dec
rcrl
je
lock
sbb
rcl
outsl
cltd
jp
and
cmp
cmpb
mov
jmp
enter
add
pop
ret
sub
mov
fistps
pop
das
ljmp
jb
or
adc
and
mov
popa
mov
cld
xchg
cli
adc
mov
shlb
fstl
lret
cwtl
push
insl
cmp
test
mov
or
addr16
ss
mov
shl
popf
les
dec
sbb
fisttpll
ret
sub
rclb
dec
jle,pt
int3
pop
cmp
add
dec
push
pop
ss
clc
push
pop
fdivs
loopne
int
dec
jo
push
ret
push
call
std
or
add
testb
popf
xchg
icebp
fstl
es
in
push
out
mov
xor
push
ljmp
mov
movsb
nop
repnz
add
lds
xchg
push
jg
jecxz
add
push
call
dec
xor
ss
stos
jo
ss
pop
xchg
mov
sub
dec
cmc
and
xorb
push
pop
dec
push
push
insl
push
sarl
xchg
dec
pop
outsb
aaa
mov
inc
mov
push
pushf
ficoml
adc
sahf
mov
stc
pop
cmp
mulps
add
repz
call
xchg
pop
int
sub
fdivr
mov
push
cmc
cs
inc
ret
sub
int3
mov
mov
iret
ljmp
fcoms
sbb
mov
fnstenv
aad
nop
cwtl
mov
xchg
pop
add
cmp
jp
lea
lods
push
inc
pop
lods
aas
push
imul
lcall
aam
mov
nop
and
into
cmp
stos
jnp
outsb
and
aaa
fldcw
test
push
out
hlt
xchg
mov
xor
cmp
xchg
sti
fcomps
sub
faddp
sbb
jl
dec
mov
xchg
mov
in
add
jne
ret
cmp
hlt
int3
dec
pop
ljmp
mov
ljmp
std
lods
rolb
xchg
int3
cltd
stc
mov
and
movsb
aam
mov
fldcw
jg
out
inc
imul
xor
mov
push
fs
movsl
aaa
cltd
add
lds
or
mov
gs
scas
add
stos
mov
scas
adc
enter
lcall
xchg
scas
adc
jg
jl
dec
clc
sub
lods
mov
sub
inc
add
aad
push
add
and
imul
dec
les
adc
pop
push
mov
rolb
adc
call
lret
xchg
filds
lods
jecxz
mov
push
into
sub
sub
fdivl
cmpsl
stc
adc
lock
mov
and
cmp
mov
xor
lret
add
mov
incl
loopne
outsb
jnp
xor
repnz
gs
mov
lcall
enter
fbld
cld
and
paddq
bound
sub
fisttpll
pop
sbb
in
out
mov
xor
lds
adc
dec
icebp
loop
dec
daa
pusha
in
fiaddl
scas
shrl
push
cwtl
popf
movsb
add
psrld
dec
dec
aad
enter
mov
dec
mov
andb
sahf
out
lahf
and
pop
mov
scas
mov
pop
mov
inc
push
mov
mov
call
popa
nop
jnp
jno
dec
xor
movsb
or
pop
mov
pop
mov
popf
xchg
les
add
push
imul
sub
adc
es
mov
mov
std
inc
loope
insb
cmp
lcall
lret
in
mov
loopne
insb
sbb
push
sub
int3
mov
pop
push
mov
xchg
dec
lcall
sub
add
jmp
scas
mov
inc
aam
mov
loop
mov
pop
imul
mov
or
and
outsl
adc
inc
daa
xchg
mov
cmpsb
mov
lods
lcall
inc
out
out
bound
dec
ds
jno
into
ljmp
loope
mov
inc
jl
shrl
fsts
jle
cmp
arpl
add
shlb
add
jbe
push
dec
addl
or
shlb
js
or
inc
insb
jecxz
pop
or
pop
scas
pop
xchg
in
rclb
pusha
das
out
ljmp
andl
or
mov
push
mov
in
pop
mov
sub
out
in
or
add
js
pop
push
push
inc
mov
daa
xchg
leave
lds
enter
push
icebp
xchg
xor
pop
es
sahf
push
mov
incl
mov
iret
imull
lahf
jno
jmp
hlt
test
push
mov
imul
shlb
dec
jmp
xlat
repnz
enter
mov
fidivs
lret
jo
sti
int3
push
pop
adc
mov
sub
call
ret
xlat
ds
cmp
mov
ret
sub
hlt
push
and
nop
in
sbb
and
mov
jne
cmpsb
or
cmp
lcall
imul
jl
xor
cld
pop
sub
sub
testl
cmpb
sti
test
mov
std
addr16
pop
lock
pop
mov
js
sbb
pop
sbb
mov
add
xlat
addb
or
mov
les
fs
ret
pusha
sub
lahf
dec
mov
test
in
push
fcmovnbe
adc
das
hlt
rcrl
xor
sub
outsl
les
dec
and
and
jae
mov
addr16
inc
pop
sarl
test
mov
movsb
push
xchg
jae
fstl
popa
inc
push
aas
lock
jge
or
ds
pop
add
mov
inc
mov
sbb
orb
ja
jae
cmp
stos
push
inc
push
pop
pop
loop
xchg
ret
inc
stos
insl
out
inc
xchg
lret
mov
sbb
mov
fisubrl
inc
mov
jg
mov
mov
sbb
xchg
adc
imulb
sub
pushf
idiv
sub
fnstcw
adc
jbe
jno
and
inc
push
inc
push
and
sub
push
and
subl
stc
mov
xchg
pusha
inc
push
push
leave
mov
pop
pop
add
mov
inc
inc
cmpsb
into
xlat
js
mov
mov
jb
push
repnz
adc
test
mov
mov
jne
cmc
add
dec
or
mov
jmp
adc
sti
inc
and
into
mov
dec
add
push
je
rol
mov
jmp
xchg
push
sbb
fwait
mov
sub
mov
vpshlq
adc
insb
lods
repz
jge
mov
stos
ret
jns
push
or
xchg
aad
fimuls
and
jns
mov
pop
inc
insb
out
mov
lret
in
ret
cpuid
mov
cmp
mov
and
cmpsb
lret
fstl
pusha
popaw
jns
xchg
decb
or
sub
mov
iret
jle
sbb
sub
pop
and
xorb
xchg
xchg
rcr
push
jne
jbe
cmpb
jl
ret
rolw
test
jp
test
std
jecxz
js
cmpl
adc
adc
sbb
push
popa
sub
rcrb
push
mov
mov
pop
inc
out
push
push
divl
daa
fisttpll
jns
popf
jbe
cmpsb
bound
test
pusha
push
test
lahf
test
pop
fcmovnu
jecxz
aam
into
and
mov
ss
sub
sbb
xor
jb
movsb
mov
mov
add
inc
or
inc
sub
aam
fildll
mov
popf
mov
in
jbe
aaa
test
pushf
insl
xlat
add
or
and
or
pop
les
xchg
test
add
mov
mov
or
dec
es
mov
jo
and
xchg
lock
push
rclb
xchg
xor
add
pop
addb
out
mov
cmp
stc
cmp
xchg
cmpsb
aad
lret
jae
pop
ds
lret
inc
xor
mov
sub
or
mov
mov
inc
std
xchg
fnstsw
loope
mov
sbb
push
xor
loopne
test
inc
mov
jge
jl
pushf
fs
in
mov
into
cmpl
sub
jp
rcll
push
shll
sub
cmpb
lds
mov
in
mov
sub
jl
ljmp
xor
mov
bound
fbstp
mov
int3
enter
mov
fwait
enter
inc
std
test
inc
and
mov
sub
call
pusha
mov
imul
fsts
add
sar
mov
pop
mov
in
or
ss
dec
push
sub
or
dec
dec
xorb
add
js
call
sub
shr
mov
into
jecxz
xor
mov
in
es
cmp
movsb
shlb
addb
mov
repz
std
or
loop
shrb
mov
mov
jns
push
mov
mov
add
lret
inc
popa
push
fistpll
and
sahf
ds
aam
mov
arpl
mov
pop
cs
jl
mov
cli
xor
xlat
lods
inc
imul
inc
adcl
loop
mov
daa
jno
pop
ja
imul
sub
inc
out
push
insl
out
dec
inc
jg
mov
mov
clc
or
lret
push
sbb
adc
stc
cmc
push
test
sbb
sti
insb
jae
push
xlat
jb
mov
add
inc
push
push
int3
jb
and
addb
pop
pop
add
xor
adc
sti
push
addr16
sbb
jg
pushf
or
pop
adc
sub
sahf
or
pop
xchg
fbld
hlt
cs
pop
addr16
outsl
push
fisttps
pop
xor
add
xor
jno
dec
pop
pop
movsl
fidivrs
aam
pop
mov
cmc
pop
test
push
iret
pop
subb
aam
imul
testb
xchg
lods
fildll
adc
or
jb
mov
test
dec
jge
cmp
outsb
out
mov
xchg
pop
jmp
xchg
mov
daa
movsb
mov
mov
js
push
out
sub
or
test
mov
ja
push
insb
lock
add
xor
mov
mov
sbb
sti
ficomps
aaa
fcmovnu
add
push
int3
imul
mov
mov
dec
repnz
mov
push
stc
mov
sub
push
cwtl
test
fwait
xor
adc
jle
fwait
cvtps2pi
in
and
in
xchg
sbb
jle
xchg
add
cmpsb
in
andl
or
inc
stos
neg
xor
into
rcr
shll
xor
in
lret
xorl
lods
pop
scas
push
loope
js
clc
cwtl
rcl
int
sub
or
mov
addr16
and
insb
sbb
into
int3
mov
add
xchg
jg
jge
insl
push
xor
sbb
test
push
sbb
les
adc
sub
shll
test
jmp
or
or
and
int3
js
cmpsb
lcall
inc
or
pushf
mov
mov
sbb
cmp
pop
das
shl
ror
aas
jp
cld
lock
in
adc
sub
ret
pop
mov
push
jbe
imul
insb
inc
sub
cmp
or
inc
loop
pop
rclb
dec
std
mov
repz
mov
xchg
ficompl
aaa
movsb
add
aam
out
jb
xor
fnstenv
push
inc
ja
adc
xor
bound
mov
test
adc
inc
cltd
sub
jle
orb
arpl
mov
in
add
pop
push
mov
out
je
inc
test
in
push
in
ret
xchg
popa
ja
shll
jle
bound
lods
mov
lods
add
push
stc
cmp
or
mov
jbe
and
inc
pop
rcrl
mov
jle
xchg
adc
shll
test
adc
fcoml
cli
mov
sbb
push
inc
sbb
and
xchg
mov
in
scas
out
fcomi
sub
xor
push
mull
add
inc
scas
add
inc
repnz
dec
jne
pop
lods
pop
mov
mov
pusha
xor
cmp
add
mov
adc
cmp
ds
or
cli
ds
fisubs
adc
xor
push
push
cld
dec
divl
and
ror
outsb
adc
xor
xor
and
cmp
mov
sti
es
bound
jge
aaa
pop
jbe
jge
jge
push
fwait
inc
out
xor
inc
push
ljmp
test
add
mov
and
mov
lret
es
ret
jne
testb
insl
push
cmp
dec
fdivrl
es
dec
adc
and
test
add
in
and
xchg
cwtl
mov
inc
cmp
mov
movntq
xchg
lret
daa
es
xchg
and
inc
sbb
imul
add
ficoml
cmp
add
dec
xchg
adc
jnp
cmp
fcoms
aad
arpl
sub
out
inc
mov
push
hlt
push
inc
jae
or
mov
and
sti
sub
push
cltd
cwtl
mov
int
inc
cmp
cmp
pop
leave
mov
xor
dec
add
cmpsb
les
or
inc
and
arpl
test
insl
mov
jmp
aas
adc
jne
psubsw
sbb
xor
ret
sbb
xchg
jbe
dec
jge
jecxz
aaa
into
fnstenv
fildll
lret
psubusw
xchg
mull
hlt
jecxz
pop
adc
popf
dec
sub
test
mov
mov
fmulp
xchg
repnz
pop
icebp
mov
cmovp
lods
jmp
ds
into
rcrl
ret
je
cld
push
adc
and
stc
imul
mov
mov
ljmp
or
mov
mov
out
outsb
push
jnp
push
inc
cmp
les
xor
sbb
repz
cmp
out
jno
jmp
les
ret
or
mov
sub
jecxz
aas
fisttps
pop
mov
cltd
dec
call
dec
sbb
sbb
lahf
jno
call
pusha
mov
pop
or
outsb
jno
mov
js
xor
das
orl
inc
xor
dec
lock
adc
and
push
inc
adc
aam
xchg
mov
push
lods
cmp
mov
mov
fwait
rorb
mov
sbb
repz
popf
jns
pop
daa
inc
pushf
int3
xchg
mov
pop
ror
mov
imul
icebp
cmp
lret
push
into
out
and
jecxz
inc
pop
je
dec
jg
ljmp
ljmp
out
pop
dec
into
cmc
or
mov
mov
or
roll
imul
jmp
stos
jl
jb
mov
out
cld
mov
fcomps
push
push
push
lods
scas
xchg
lahf
cmp
cmpsl
jbe
mov
es
push
pusha
jo
adc
dec
xor
stos
jnp
mov
sbb
int
xchg
push
outsl
adc
pop
xor
insb
mov
sbb
push
stos
movl
popa
cmc
std
insl
stos
mov
andb
dec
arpl
cmpb
or
fadd
scas
fcmovb
inc
out
lds
repnz
inc
push
movsl
movsl
or
adc
addr16
fildl
cmc
push
ds
mov
out
sbb
mov
outsb
mov
idiv
push
pop
stos
mov
cmpsb
enter
and
jmp
dec
jg
xchg
popa
or
mov
jno
sbb
sbb
rcrl
cltd
ljmp
sbb
pushf
sub
pop
call
fbstp
jmp
std
jns
sbb
jne
push
roll
int
fwait
lcall
and
ror
or
mov
cmp
sahf
or
jns
sbb
jecxz
adc
dec
mov
mov
aad
jo
and
pop
les
jne
or
xchg
cmp
or
jb
xchg
divb
iret
movsb
adc
push
imul
mov
ja
popa
stc
scas
jne
or
fwait
sub
mov
sti
es
sarb
sahf
adc
test
push
or
insb
adc
mov
mov
dec
iret
addb
dec
mov
xor
inc
or
filds
mov
cmp
jg
gs
leave
jp
cmpsl
fcomp
icebp
add
insl
sub
mov
or
dec
inc
adc
push
iret
rcrb
subl
enter
into
cmp
cli
adc
sbb
adc
jae
in
xchg
xchg
push
lock
push
sub
cmpsb
in
push
push
dec
add
ljmp
xchg
dec
and
push
out
mov
mov
xchg
or
xchg
push
jge
push
push
mov
pop
add
lock
stos
jnp
jle
in
mov
mov
jg
mov
jbe
jg
mov
test
aaa
mov
aaa
add
push
daa
or
sbb
insb
lods
pop
sub
bound
in
cmpsl
xor
rcr
jno
scas
xchg
subl
xor
fucomi
pop
shlb
mov
dec
loop
inc
jmp
mul
mov
leave
loopne
shlb
loop
push
std
mov
repz
xor
fs
andb
adc
in
fucomip
push
fistpll
and
daa
push
xchg
jbe
add
out
int3
inc
xor
xchg
mov
jmp
negl
xchg
push
dec
lods
xchg
mov
mov
clc
insl
push
jge
je
mov
cmpsl
ret
std
fldenv
mov
popf
nop
inc
ss
sarl
add
mov
jns
fildll
ljmp
add
divb
clc
movsb
daa
pop
jg
mov
cmpsb
aam
pop
rorl
sub
fmull
push
mov
loope
sbb
jmp
jno
mov
push
in
jnp
sarw
movsb
movsb
sub
or
xor
mov
popa
ja
inc
aam
mov
cs
fidivs
adc
data16
fsubp
das
scas
jae
call
sbb
mov
jbe
adcl
enter
mov
loopne
lret
fadds
jge
cmp
mov
aaa
sahf
js
xchg
mov
aas
es
mov
into
testl
pushl
push
add
je
lds
sahf
sahf
sub
xchg
cmp
test
push
fsts
lods
cmp
or
xchg
scas
cmc
sub
bound
movsb
mov
push
ret
sbb
jo
or
call
cmpsl
stc
or
xor
pop
mov
dec
cwtl
xor
pop
xor
sbb
lock
mov
adc
pop
xchg
mov
lds
dec
js
ljmp
in
lods
ljmp
cmp
es
fwait
test
push
pop
fldl
loopne
mov
or
in
lcall
shlb
or
dec
lcall
addr16
movsl
data16
xchg
jg
cmpsl
and
fcomip
cmp
mov
dec
adc
xor
push
push
cmp
pop
dec
sahf
sbb
rorl
in
mov
xlat
lods
inc
pop
pop
and
sub
imul
dec
push
mov
lret
mov
xchg
clc
popf
mov
aam
lock
and
rcll
js
aad
xchg
sub
push
dec
push
lock
jbe
mov
loop
stc
ret
hlt
push
addr16
push
inc
mov
out
je
or
mov
xchg
mov
jae
fwait
inc
pop
xchg
into
mov
call
movsb
in
mov
cmpsb
jns
imull
mov
jmp
or
pop
ficompl
jno
jecxz
in
hlt
xchg
mov
rclb
out
mov
inc
xor
je
push
pop
cmp
shr
lret
mov
insl
mul
mov
dec
mov
mov
lds
mov
hlt
push
push
mov
je
lahf
push
and
mov
mov
mov
lock
pop
filds
sub
lret
lds
pop
sarl
cmp
dec
cmp
sub
xchg
xor
and
jo
lea
popa
in
dec
les
loopne
mov
adc
xor
daa
push
sbb
repz
jns
rorl
stc
push
mov
cmp
aam
inc
jb
out
repnz
cmpsb
scas
cs
fwait
pop
pop
sub
cwtl
cmp
mov
hlt
push
fdiv
or
push
mov
movlps
repz
add
mov
stos
push
push
push
add
jo
or
cmp
sahf
and
mov
inc
ss
inc
mov
jo
bnd
xchg
sbb
cwtl
cmp
std
aaa
sbb
add
fistpll
mov
sub
cmpsb
jl
mov
mov
dec
popf
jne
into
jl
mov
dec
insb
sub
cwtl
std
fnsave
pop
sub
out
test
adc
or
sub
mov
sub
fisubrs
xlat
mov
dec
mov
pop
imul
loopne
dec
xor
push
and
repnz
mov
fsubrs
add
outsl
out
sbb
clc
jle
mov
mov
push
mulb
mov
inc
mov
hlt
push
xor
rcr
pop
inc
lea
dec
pop
push
aaa
jnp
pop
adc
in
jae
cwtl
lods
in
mov
push
adc
adc
sub
int3
cli
or
dec
xchg
sbb
dec
pop
fstpt
dec
mov
pop
stos
and
mov
cli
or
and
lods
mov
out
shrb
inc
pop
loopne
movsb
cwtl
push
outsl
mov
mov
in
cmpsl
and
loopne
xchg
out
pop
hlt
dec
sub
orl
jne
push
xchg
out
push
ret
push
inc
adc
leave
mull
mov
mov
or
push
mov
mov
jns
add
cwtl
loop
fiaddl
stos
or
ljmp
mov
int
and
andl
and
ror
mov
inc
add
ss
outsb
les
cmc
sbb
leave
mov
stc
add
pusha
lock
pop
push
jge
push
or
fs
mov
sahf
push
test
cs
pop
xchg
xchg
pushf
add
aam
push
stc
mov
xor
gs
push
and
loop
lock
fstps
rcrl
sti
gs
xchg
js
testb
xchg
push
andb
cwtl
sub
xchg
out
rcrb
movl
and
repnz
fcompl
jle
xchg
ret
and
sbb
cmp
cld
adc
sbb
or
sbb
into
dec
loop
mov
dec
lea
push
les
xchg
fisubrs
mov
inc
in
fnstcw
pop
add
mov
popf
sbb
or
or
mov
cmpsb
push
cmpsl
fldl
jmp
mov
int3
jmp
cmp
std
loope
sbb
cmc
data16
pop
mov
popf
stos
test
idivl
inc
add
mov
dec
dec
jle
mov
lcall
pop
daa
test
jl
jne
roll
and
pushf
in
orb
sub
repz
xchg
adc
cmp
insb
push
xor
and
test
data16
movsl
test
movsb
jle
sbbl
pop
lahf
packuswb
in
mov
adc
push
inc
pop
mov
push
insl
inc
les
clc
mov
jns
lock
outsb
xor
repnz
movsb
push
popa
aaa
mov
cmp
mov
lods
stos
jl
jb
data16
xchg
jge
push
std
mov
and
sub
out
lds
push
addr16
mov
xlat
adc
jae
out
into
bound
jp
jmp
push
mov
lods
mov
fimull
pop
push
clc
fs
mov
inc
jecxz
sahf
xor
xor
repnz
out
pop
pop
bound
push
inc
inc
cmp
jge
sti
jae
mov
jle
jg
or
push
aas
enter
sub
or
cmc
dec
sbb
or
jecxz
cmpsb
pop
outsl
pop
cmc
xor
pusha
jnp
add
cmp
mov
fdivl
and
dec
adc
pushf
int
mov
and
mov
mov
push
sahf
sahf
pusha
sbb
iret
icebp
push
mov
insb
mov
xor
jge
ss
stc
xor
pop
mov
jmp
sub
or
xchg
inc
stos
andb
mov
inc
imul
xor
or
loopne
mov
jmp
mov
hlt
inc
mov
aad
jae
jmp
les
mov
in
push
sbb
xchg
mov
pop
mov
cvttps2pi
xchg
repz
in
and
cmp
fcoml
bound
ret
test
pop
jns
inc
cmp
cmpsb
push
lahf
mov
jp
jecxz
fsubp
mov
pop
mov
ficoms
cmp
rorl
xchg
mov
sarb
jns
mov
iret
jecxz
outsb
cmp
mov
scas
jecxz
and
mov
and
jle
adc
cmp
enter
adc
test
and
jecxz
fists
jne
sbb
pop
mov
cmp
mov
mov
xlat
popa
cmp
push
adc
hlt
cmp
cmpsb
in
inc
pusha
shl
ficoml
dec
adc
into
dec
mov
adc
mov
jl
cltd
sbb
pop
xchg
mov
add
bound
rol
adc
jg
arpl
cmpsb
sub
mov
cs
pop
inc
ljmp
mov
gs
fimull
lret
inc
mov
fisttpl
ret
mov
cwtl
gs
loopne
adc
dec
mov
jne
iret
pop
jbe
and
cmp
js
pushf
adc
inc
push
jl
lret
rolb
fisubs
jle
pop
movsb
adc
ret
loop
mov
push
jno
mov
popf
outsl
test
in
pop
test
ja
push
hlt
cmp
cmp
mov
mov
cmc
mov
cmc
cwtl
fdivr
and
add
and
xchg
adc
shlb
pop
push
orb
push
push
movsb
jae
mov
cld
push
xor
cmp
sbb
mov
xor
stos
sbb
cmp
jne
sbb
cmp
fidivrs
std
pop
and
adc
hlt
xor
mov
or
jo
jno
push
jmp
pop
jne
data16
imul
xchg
ret
dec
fs
mov
mov
xchg
mov
pop
pop
inc
cmpsb
jp
rorl
pop
dec
cmp
jl
cmp
rolb
scas
xor
testl
outsb
or
test
cmp
adc
cmp
sbb
and
add
push
xchg
sbb
or
xchg
lock
or
in
pop
mov
movl
out
ficoml
mov
out
ss
cmp
repnz
ret
iret
enter
notl
and
es
jp
push
arpl
sbb
cwtl
xor
mov
add
xor
rorl
inc
popf
mov
stos
mov
stc
in
rol
push
rcl
pop
cmpsb
add
repnz
xor
mov
cltd
iret
test
in
call
pop
movsl
loopne
rorb
fxtract
xor
dec
cli
xchg
loop
add
jle
lock
mov
cmp
ljmpw
xor
popa
mov
and
sub
pop
in
aad
jl
inc
fildl
pushf
cmpsl
mov
mov
lcall
stos
insl
lods
popl
inc
push
sub
inc
mov
lods
loope
jp
in
std
sbb
decl
shll
adc
adc
jl
mov
xchg
pop
dec
test
sbb
ljmp
pop
xlat
dec
in
and
cmpsl
xchg
aad
push
push
fwait
push
sti
and
fldl
dec
rcrb
dec
nop
xchg
xchg
out
ret
dec
fsubr
and
insl
cmp
add
xlat
cltd
into
ljmp
ljmp
mov
shll
mov
dec
xor
scas
sub
fdivl
xlat
std
sub
shrd
dec
sti
push
cmc
addr16
sub
loop
mov
clc
rcr
add
cld
xor
push
scas
pop
jmp
mov
mov
push
push
push
call
jns
je
xchg
inc
scas
int3
sbb
dec
push
test
stos
jb
mov
push
pop
ja
jnp
and
in
test
or
test
scas
rcll
xor
push
adc
int
notl
lcall
iret
add
push
cmpsb
rol
push
sahf
cltd
and
mov
fprem1
mov
xor
es
jne
lds
mov
or
je
sub
sub
repnz
xchg
nop
mov
jo
aaa
dec
jmp
inc
subl
ret
mov
mov
in
add
rcrl
subb
stc
mov
mov
sahf
lret
pop
pop
mov
cwtl
adc
inc
rorb
rol
les
addl
sbb
cmp
in
push
in
mov
cmpsb
das
mov
lret
mov
sti
or
loop
cli
jno
std
inc
outsl
test
push
push
jo
pushf
outsb
adc
and
mov
dec
and
jb
and
mov
mov
leave
mov
and
pop
sahf
and
dec
mov
mov
xor
stc
push
dec
stos
call
divl
xchg
inc
or
xchg
cs
sarl
mov
sbb
outsl
stc
jb
lea
push
mov
cmp
adc
cld
fcmovnu
lds
shll
shlb
icebp
lods
ds
mov
pop
sbb
cmpsb
lods
dec
inc
lods
add
mov
leave
and
sahf
movsl
test
jns
xchg
xchg
inc
add
loop
aaa
inc
xchg
lret
cmp
stos
add
xchg
cmpsl
adc
lods
andl
mov
fdivp
aas
test
flds
mov
leave
mov
xlat
lods
adc
add
sbb
sub
dec
or
xor
mov
push
mov
or
insl
sahf
ret
int3
decl
cmp
cmp
push
ja
and
ss
jge
inc
and
out
lret
and
imul
bound
into
movhlps
cmp
jmp
cmp
jnp
sbb
lea
out
mov
add
push
popf
inc
mov
aad
or
mov
outsl
fcmovnu
mov
mov
jb
pop
or
and
and
xchg
into
sbb
jge
mov
cmpsb
mov
ret
jmp
xchg
mov
das
inc
push
out
fistl
int3
mov
cltd
jg
pop
stos
or
ljmp
mov
shrb
inc
fmull
imul
jp
jle
daa
inc
faddl
cmpsb
repnz
rcll
push
mov
ret
js
test
push
mov
sbb
rcl
jle
out
xchg
mov
fcomps
pop
inc
test
insb
cmc
pop
xchg
cmp
ds
adcb
adc
je
cmpsb
cmp
dec
pop
lock
in
mov
fcoml
lods
mov
pop
jmp
sub
data16
xor
ret
xor
push
adc
mov
insl
sbb
outsl
dec
jl
adc
sahf
xchg
adc
mov
xchg
lods
add
lods
jle
jp
addr16
or
mov
cli
cmp
repnz
or
addr16
das
pop
mov
inc
pop
xor
sbb
jb
adc
or
xchg
pop
enter
push
mov
mov
jg
or
sbb
cmc
pop
push
mov
adc
adc
lds
jp
insb
sahf
jns
orb
or
push
or
xchg
adc
sub
push
jp
into
jge
fldt
dec
and
cli
and
add
xchg
sbb
cmp
test
sbb
scas
ds
ja
sbb
mov
xor
sahf
add
add
mov
adc
or
jg
test
or
xlat
jg
cwtl
xor
mov
aad
pop
call
and
pop
mov
sbb
popf
push
jp
xchg
pop
out
outsl
mov
xchg
xchg
mov
xchg
test
push
jno
sbb
sub
mov
dec
adc
jg
daa
dec
mov
lea
add
out
jl
adc
add
shrl
add
xor
mov
cld
cmp
dec
daa
dec
adc
xchg
scas
loope
js
pop
sbb
or
add
jns
fwait
cmpsl
sti
sub
arpl
jnp
inc
or
and
in
arpl
jns
inc
ljmp
mov
cmp
enter
mov
test
dec
xor
ror
repnz
ret
lods
adc
insl
enter
mov
cld
push
ret
fmull
mov
mov
in
xchg
push
scas
push
imul
out
xor
repz
fucomi
inc
test
add
xchg
add
daa
cmp
addr16
jns
aas
std
sub
cmpb
int3
push
cs
inc
mov
xchg
lods
mov
adc
cmp
out
mov
pusha
sbb
dec
arpl
mov
sbb
out
mov
push
xor
jmp
cwtl
enter
add
xchg
ret
call
inc
enter
pop
xchg
and
xor
pop
sub
xor
or
xchg
mov
push
fimull
outsb
repnz
ret
ret
sbb
ss
stc
jp
subb
mov
mov
fs
ret
jge
pop
jg
pushf
jecxz
and
cmp
push
mov
jge
out
push
mov
mov
lods
ljmp
lret
sbb
cmpsb
mov
pop
ficoml
cltd
test
or
xchg
sub
in
repz
mul
rorb
or
jg
sbb
jne
cli
lods
sub
stos
movsb
pop
icebp
repz
dec
sub
stos
and
dec
cmp
ljmp
inc
xchg
insb
jle
mov
ret
sbb
arpl
mov
pusha
adc
dec
int
or
adc
pop
mov
mov
aas
xor
pop
cmpsl
cmc
pop
inc
jg
in
and
add
push
aas
pushf
push
mov
xor
and
jmp
jo
jge
into
lret
shl
jb
xchg
rolb
pop
xlat
xor
cmc
mov
pushf
dec
jg
test
pushf
pop
aas
push
cmpsb
add
out
dec
push
stos
mov
jno
pop
or
cmp
jp
aaa
mov
scas
stos
add
out
jno
mov
sub
and
sub
adc
add
mov
mov
adc
push
mov
mov
dec
out
ss
sub
or
and
adc
mov
pop
push
xchg
jge
jmp
and
adc
stc
cld
shlb
push
lods
clc
es
jne
fbld
dec
mov
cmpsb
out
jg
insl
add
inc
xchg
cmp
std
or
push
jbe
and
xor
test
and
pop
cld
in
pop
sub
lds
push
test
les
push
adc
addr16
xor
jns
push
call
lcall
fcomp
xchg
lcall
stos
cmp
fnstenv
mov
lcall
lods
lock
popa
scas
dec
insb
movsb
out
xchg
icebp
rcr
lds
or
xchg
jns
cmp
xor
and
subl
dec
addr16
xor
mov
sbb
inc
jae
and
pusha
imul
loop
sub
xlat
push
pop
jl
rcrl
andl
inc
fwait
sub
js
cmp
xchg
pop
cltd
and
lret
insb
leave
sub
call
stc
sub
imul
sub
cli
pusha
sub
inc
test
and
lock
mov
das
out
jbe
lret
incb
push
movl
jnp
mov
ljmp
add
insb
cs
xchg
inc
ret
xchg
cs
aas
test
push
insl
inc
movsb
xlat
sub
push
outsb
mov
xchg
ja
mov
add
test
mov
and
add
je
nop
jno
rclb
scas
inc
dec
dec
imul
das
push
rcrl
xor
pop
dec
mov
adc
inc
into
pop
les
in
push
xchg
push
fadd
fwait
jge
mov
dec
xchg
sub
mov
fbstp
repz
jne
cmpsb
popf
jmp
mov
mov
jecxz
mov
mov
xchg
or
pushf
mov
xor
lahf
sti
lret
in
les
jg
mov
hlt
lret
sub
ret
lcall
xchg
fadds
mov
sub
mov
ss
outsb
xchg
aam
pusha
imul
std
iret
mov
bound
mov
sub
jecxz
mov
in
iret
or
scas
les
xchg
sbb
cli
fs
mov
imul
in
inc
inc
cmp
sub
pop
imul
insb
sbb
dec
inc
pop
ljmp
stos
fwait
out
adc
in
jno
lcall
dec
cmpsw
jae
mov
je
arpl
cs
aas
dec
inc
and
test
lcall
shl
repz
cmpl
andb
sbb
push
or
or
xchg
imul
add
les
pop
jnp
or
nop
mov
mov
test
cmp
push
push
mov
je
pop
jae
mov
pop
daa
adc
pop
clc
mov
fnsave
sti
sub
push
jae
push
outsl
inc
ret
aam
and
or
xchg
jl
mov
lds
nop
std
sub
or
lock
xor
inc
cli
mov
sahf
push
adc
movsl
lock
cmpl
cltd
cmp
lcall
inc
iret
lock
es
out
in
aad
add
gs
inc
ds
jmp
xor
lahf
mov
jne
jl
adc
xchg
cmp
out
cltd
pop
push
lds
stos
pop
test
dec
ret
paddb
icebp
out
lret
fdivs
stc
sbb
cmp
and
inc
cmp
jl
inc
repz
rclb
lret
hlt
mov
shll
or
mov
pop
movsl
jl
jbe
or
sub
adc
push
mov
inc
or
lods
movsb
adc
ret
out
les
inc
icebp
jne
mov
sbb
add
mov
popf
push
mov
cmp
jg
pop
inc
jns
dec
mov
mov
push
insb
mov
pop
dec
xchg
push
cmp
mov
enter
outsl
push
pop
stc
std
stos
xor
jmp
add
cmpsl
jnp
cwtl
mov
daa
and
jp
mov
loop
push
xchg
adc
outsb
sub
jbe
inc
inc
lahf
add
fisubl
scas
pop
inc
daa
jo
xor
mov
jnp
adc
xchg
lcall
cmpsb
sub
add
fnstcw
loope
cmc
cmp
cmp
out
push
jge
sahf
decl
pop
and
enter
dec
popa
mov
mov
jl
ret
xchg
and
cmp
adc
mov
mov
out
adc
cmp
mov
nopl
pop
push
push
mov
sub
or
xchg
sbb
fsubrl
in
cmp
test
jo
mov
imul
jnp
sub
shrb
imul
push
loope
sti
clc
push
cltd
fidivl
dec
mov
jge
loopne
push
ret
sub
sbb
out
daa
jp
and
dec
mov
aad
push
mov
mov
cmpsb
insb
inc
imul
mov
push
mov
xchg
mov
dec
cmp
ljmp
cmp
pushf
xor
jmp
sbb
in
cld
xor
add
lret
test
andl
lds
push
clc
aad
and
xor
loope
dec
mov
out
lahf
jmp
imul
out
lcall
cld
pusha
pop
dec
cmp
add
test
daa
scas
dec
push
imul
inc
std
jo
std
push
in
out
push
js
jp
in
push
xor
xchg
mov
out
mov
shl
sbb
inc
out
dec
scas
or
or
int3
popf
and
pop
sarb
rolb
push
xor
pop
push
clc
mov
inc
addr16
je
jmp
sbb
inc
test
xor
dec
adc
cli
call
push
sub
pop
movl
xor
test
mov
dec
cmc
xor
out
jecxz
ljmp
sub
jl
xor
outsb
adc
jnp
and
sbbb
sub
mov
sbb
mov
icebp
lret
lahf
leave
adc
xchg
mov
rcl
fldt
and
insl
out
sar
lea
fisubrs
mov
ret
mov
mov
in
sbb
ret
out
and
xor
inc
fcoml
pop
and
idivb
pop
dec
out
cmp
jnp
xchg
pop
stc
lcall
scas
pop
push
cmc
imul
test
lock
and
mov
xor
sbb
dec
push
fiaddl
dec
push
jno
add
dec
sahf
push
jg
xchg
add
mov
stc
fs
test
add
pusha
subl
jb
inc
es
imul
scas
ret
stos
or
es
jae
sub
and
xchg
daa
mov
mov
mov
cmp
pop
jo
inc
push
and
sbb
mov
dec
mov
inc
or
iret
js
hlt
adc
shrb
pop
shl
enter
iret
and
jno
fmull
cwtd
aam
cmp
and
stos
aas
adc
push
push
rcr
rcrb
add
call
mov
data16
and
mov
les
lods
cmp
xchg
jns
cmp
pminub
addb
xchg
push
inc
mov
jb
sub
xchg
mov
xor
xor
lods
mov
push
lahf
push
xor
jns
test
push
frstor
shlb
xor
scas
idiv
flds
int
push
scas
fld
scas
lods
push
lret
aam
jo
test
dec
xchg
in
sbb
out
shlb
xor
fadds
cmpsb
or
je
jle
sbb
pusha
xlat
bound
add
cmpl
cmpsb
movsb
out
fdivs
xor
inc
insl
orl
aad
or
lret
mov
xor
rcrl
rcr
mov
pusha
or
add
xor
mov
push
pusha
jnp
jae
into
mov
mov
faddl
ja
sbb
nop
xor
mov
sub
into
xchg
push
movsb
lods
push
push
cld
lods
push
roll
pop
add
jle
pop
movsb
cld
xchg
pop
hlt
in
imul
les
out
pop
mov
and
mov
or
movsb
sub
shr
sbb
sub
cltd
aas
mov
jl
inc
inc
int3
popf
xor
mov
pushf
and
dec
jae
lahf
mov
es
adc
jnp
ss
jo
dec
ljmp
fstl
insb
mov
push
xchg
lds
fstpt
lcall
adc
icebp
push
add
rcll
icebp
and
jge
lods
jo
and
loope
test
jns
jle
pop
sub
add
sub
aas
push
push
or
aad
sbb
sbb
sbb
ret
insl
shrl
jb
aad
jmp
lcall
xchg
outsl
mov
push
push
sub
xor
daa
imul
in
or
add
faddl
mov
cmpb
pop
and
mov
add
std
mov
or
and
sahf
pop
add
into
in
insb
push
sahf
icebp
scas
insl
jno
mov
pop
fst
movsl
mov
insl
jne
push
push
and
mov
cltd
mov
inc
sbb
mov
clc
daa
adc
sbb
or
sahf
imulb
adc
and
mov
out
xor
mov
dec
pop
xchg
lcall
add
adcb
cmp
dec
mov
mov
push
adc
xor
movsb
mov
fwait
or
xchg
rcrb
icebp
arpl
jb
xor
aas
leave
push
xchg
mov
dec
mov
lcall
dec
bound
pop
ja
filds
aas
sub
outsl
push
jle
add
fmull
xor
push
xor
xchg
push
icebp
sbb
mov
mov
in
aaa
push
pop
fdivs
es
jl
cwtl
fldt
test
dec
pop
adcb
lret
sbb
cmpsb
xor
int
add
cli
ja
repnz
fadd
dec
daa
mov
loopne
xor
cmp
test
jecxz
enter
cli
ja
jb
push
movsl
mov
fisubl
lea
pushf
movsl
push
lods
dec
xchg
sarb
inc
xor
inc
in
loop
pop
jno
sbb
adc
lret
fsub
cmp
jns
les
daa
add
aaa
in
popf
mov
rclb
pop
enter
and
add
push
fbstp
stos
inc
ficompl
pop
fldenv
bound
mov
aaa
movb
mov
push
rcrb
xchg
out
js
cmpsl
cmp
jo
js
lret
pop
icebp
sub
je
sbb
jl
rol
jecxz
push
ficomps
inc
or
out
lods
daa
mov
sub
mov
das
push
mov
or
or
sbbb
jg
push
and
rorb
daa
dec
xchg
mov
fwait
js
lds
aas
sbb
dec
loop
sub
mov
cld
dec
cli
dec
cmpl
xchg
mov
int3
dec
sub
add
out
or
incl
mov
stos
adc
loop
jne
stos
sbb
iret
lds
rcrl
clc
mov
or
in
int
mov
cmp
adc
jg
cmp
fsubrp
std
cmp
or
pusha
sub
movsb
xchg
in
fsubrs
push
pop
je
popf
sbb
ljmp
inc
mov
or
mov
cmp
fcoml
or
cmp
inc
adc
add
leave
add
inc
or
mov
negl
push
divl
loopne
cmp
add
mov
outsl
loop
or
aad
fwait
xchg
adc
lock
fdivr
cmp
jecxz
lcall
jno
sub
in
fsubrs
imul
es
sbb
xor
in
xor
movsl
dec
pop
mov
lods
rorl
std
mov
pop
pop
daa
mov
sti
mov
shl
dec
inc
mov
xor
andb
adc
and
scas
sub
loope
jae
jecxz
mov
and
sub
jg
mov
sbb
sub
adc
hlt
mov
and
fistps
and
mov
or
lock
mov
xchg
xor
into
jne
ljmp
rcrb
sub
or
mov
mov
mov
sub
jmp
inc
mov
jp
lock
sbb
test
daa
cmp
aam
xor
popf
xchg
movsl
fidivs
mov
xor
pop
jmp
in
clc
mov
sub
mov
pusha
xlat
inc
xchg
mov
scas
inc
iret
xchg
loop
dec
sub
add
or
movsb
jb
cmp
in
xchg
mov
sub
shll
inc
sbb
dec
add
or
or
negl
push
imul
popf
lea
and
sbb
jmp
add
cmp
enter
mov
bnd
cmc
inc
xchg
test
add
hlt
scas
lock
int3
icebp
les
inc
shll
inc
pop
xor
movl
iret
inc
xor
out
fisttpll
xchg
and
arpl
cmp
fs
imul
inc
test
adc
sbb
sub
ret
mov
out
scas
sbb
jp
negb
fldt
adc
lods
jae
js
sub
dec
jno
faddl
add
xor
cwtl
lahf
xlat
jns
xchg
negl
sub
popf
sti
mov
mov
arpl
sub
xchg
loope
and
call
out
xor
addb
aam
jmp
push
test
adc
fstpt
sbb
call
mov
mov
add
and
xor
cmc
jmp
sub
std
insb
rclb
push
mov
jg
sbb
imul
int
cwtl
dec
leave
xor
out
cmp
xchg
clc
xor
and
xchg
fldl
cmp
dec
jmp
sbb
pslld
mov
mov
icebp
dec
addr16
add
or
scas
jne
sub
rcrl
fildl
dec
sbb
scas
xchg
xchg
pop
aaa
xchg
sbb
rorb
adc
inc
mov
enter
sub
push
inc
loope
push
mov
sbb
fidivs
repnz
repnz
into
ds
and
pcmpeqw
xor
mov
pop
rclb
jne
dec
imul
push
push
jmp
cmp
in
into
and
outsl
cmp
test
mov
cwtl
jns
sbb
dec
clc
jl
mov
sbb
push
insb
dec
in
icebp
adc
push
vminss
lcall
insb
mov
or
jnp
or
iret
inc
mov
negl
sub
jl
cmpsl
loope
xor
stc
cmp
push
movsb
movsl
or
xchg
add
daa
icebp
inc
push
in
loopne
sbb
sbb
xchg
in
mov
lret
imul
jns
ret
push
mov
xchg
xor
fmul
xlat
stc
lcall
xor
rcl
arpl
aad
icebp
movsb
push
pop
leave
sahf
push
fistpll
ds
mov
cmpsb
aad
divb
jns
testl
mov
xor
sub
inc
xor
in
inc
inc
shlb
pusha
dec
scas
icebp
cmc
sub
push
pusha
data16
scas
out
push
xor
out
orl
jl
mov
dec
push
xchg
fwait
jge
jg
pusha
iret
aas
int3
adc
mov
bound
adcl
popa
mov
or
sbb
inc
and
cld
fists
fs
lods
cmc
test
leave
or
aad
push
push
out
loop
lret
lret
sub
sahf
out
int
jne
add
movsb
clc
enter
in
add
aam
cltd
dec
in
jo
mov
push
xlat
shl
cmp
std
mov
mov
pop
jns
mov
imul
ret
hlt
lcall
js
push
sub
loop
dec
dec
cli
addb
aaa
add
nop
jbe
pusha
jns
jp
test
es
movsl
sbb
cwtl
lea
ffreep
mov
or
push
inc
inc
and
cltd
sbb
ds
cmp
sti
inc
jecxz
jecxz
xchg
repnz
popf
fcmove
lods
loope
push
push
imul
test
sub
out
pusha
push
xlat
mov
fmull
dec
inc
sub
imulb
xor
push
int3
and
stos
jne
popa
add
sub
xchg
aad
mov
sbb
mov
hlt
rclb
or
push
scas
and
add
pusha
mov
xchg
xor
loopne
mov
arpl
inc
pop
fdivrs
shl
ret
outsl
xchg
jg
aaa
lock
pop
or
cld
insb
mov
test
int3
and
push
xchg
loopne
sbb
mov
pop
push
mov
add
ficompl
hlt
add
pop
pop
out
jo
psubb
cld
mov
test
add
test
adc
xlat
jno
adc
push
mov
add
push
cwtl
xor
sbb
jnp
icebp
jae
ljmp
mov
out
dec
loope,pt
fnstenv
lods
fistpll
mov
movsl
roll
testl
mov
lret
ret
repz
orl
sbb
dec
add
shl
pop
or
push
mov
push
or
leave
sbb
cwtl
xor
arpl
or
lret
pop
std
loopne
sub
clc
push
out
sbb
xchg
cwtl
stos
pushf
popa
sahf
jb
pop
sub
adc
test
out
sbb
jnp
fstl
ficoml
test
and
mov
jo
and
out
out
pop
push
inc
xlat
dec
mov
jp
xchg
call
in
jne
enter
mov
cmp
mov
xor
add
mov
xchg
dec
xor
mov
ret
lock
xorl
mov
std
mov
cmpsb
dec
xchg
dec
je
mov
mov
mov
lods
jne
iret
gs
js
pop
jle
lods
les
mov
push
xchg
mov
inc
dec
cmpsb
xor
pop
mov
inc
sbb
cmp
mov
or
sahf
stos
test
pusha
add
push
mov
std
xorl
dec
scas
jae
test
cmp
pop
pop
mov
cmp
inc
and
mov
ret
std
les
mov
in
fnstenv
sahf
mov
sbb
push
mov
sbb
pop
es
push
popf
mov
jecxz
mov
nop
xchg
pop
xor
rcrl
imul
insl
bound
xor
or
push
jne
mov
call
push
ljmp
int3
jmp
fs
loop
mov
mov
pop
pop
loope
mov
dec
rorb
jbe
push
sub
popa
fcmovb
add
lock
fsubrs
idivl
push
popa
xlat
add
out
and
cmp
cmp
and
call
sbb
es
js
ds
ss
lahf
pop
xchg
mov
add
jmp
insl
xchg
lcall
inc
dec
pop
test
andl
cmc
cmp
in
pop
faddl
cmpsl
popf
push
test
ss
or
push
pop
sub
lret
aam
pop
fwait
arpl
inc
sub
loopne
rcr
lret
xor
stos
or
or
ljmp
inc
dec
jne
fdivrl
mov
push
imul
icebp
push
or
pop
fdivrp
jl
push
xchg
fsubl
fisubs
lods
sub
cltd
xorb
or
pop
fidivrl
add
push
test
lds
inc
insb
jbe
and
filds
xchg
in
pusha
lcall
sbb
ja
jbe
mov
dec
je
lahf
pop
sbb
and
jns
adc
test
ret
ret
jno
or
shlb
popa
push
leave
add
popf
sarb
pop
popa
ja
stos
aaa
mov
add
lret
sbb
add
lret
push
pop
adc
push
jo
inc
jns
stc
xor
push
mov
mov
inc
call
rorb
pop
sbb
adc
cmp
inc
leave
jmp
cmp
jge
push
loope
outsb
fstps
xor
and
in
shrb
add
imul
or
ja
ror
add
mov
rol
jno
cmp
push
and
mov
ficoml
pushf
adc
test
out
int3
adc
popf
xor
add
push
ss
shll
adc
fwait
data16
ja
cmp
aas
jb
adc
fidivl
push
mov
ret
or
rorl
sbb
int
test
sbb
sub
int3
rcrb
dec
xchg
pop
mov
sub
push
jne
add
in
in
fisubl
xlat
in
jb
or
int
dec
inc
mov
or
cmovns
dec
push
inc
fwait
rorl
cmpsb
aaa
mov
sub
or
xchg
or
pop
sub
pushf
les
loopne
sub
dec
imul
out
pop
lret
daa
mov
cs
frstor
add
pop
mov
ret
inc
pushf
stc
icebp
add
mov
adc
lods
push
fwait
in
enter
clc
std
or
dec
lea
scas
xchg
andl
repnz
sti
test
int
mov
test
loope
push
loope
daa
pusha
cmp
movsl
stos
or
orb
jg
repz
cli
pop
mov
js
mov
inc
data16
mov
js
inc
push
jmp
mov
ss
mov
mov
addl
sub
pushf
jne
fwait
mov
ljmp
jg
add
inc
xor
loope
negl
aas
or
repz
push
jnp
pusha
mov
adc
inc
xlat
inc
addr16
out
fdivs
into
and
jbe
adc
ja
rorl
iret
cmp
push
xor
cmp
sub
daa
lahf
lods
aam
push
repnz
and
add
push
mov
jne
push
mov
xor
push
jae
mov
sub
xor
ss
mov
adc
or
push
xchg
shll
pusha
pop
push
hlt
cli
lahf
ja
pushf
add
adc
dec
pop
rcrl
lock
jno
dec
cld
je
aam
mov
xchg
ss
mov
mov
mov
add
xor
test
push
lahf
out
jbe
stc
mov
loop
add
push
cmpsl
in
cmp
or
add
mov
xchg
jne
xchg
movsb
xchg
pusha
sti
xor
jmp
push
rcrl
dec
ret
js
push
xchg
jae
pop
mov
jne
test
xor
mov
cmp
shr
sti
add
jg
pop
xchg
jl
lods
xchg
mov
sub
sbb
enter
and
outsl
xor
outsb
jne
mov
ds
pop
lods
xchg
rclb
clc
adcl
sub
add
daa
pop
les
add
jns
in
adc
or
adc
jns
lds
movb
push
and
test
mov
dec
jb
pop
xor
int3
xchg
jnp
jbe
and
testl
mov
jnp
data16
push
fcmove
mov
jo
stc
ret
adc
and
pop
cmp
stc
cwtl
mov
sbb
les
pop
adc
sbb
mov
mov
popf
rcrl
pop
dec
mov
jnp
adc
bound
lcall
mov
enter
orb
movsb
fcoms
outsl
cld
xor
cltd
cmp
in
stos
fiaddl
stos
jb
mov
push
jne
xlat
ljmp
sub
jge
test
pop
sub
sbb
jne
mov
add
cwtl
bound
sub
dec
es
cmpsb
xor
mov
and
cs
inc
mov
ja
mov
les
js
mov
adc
fisubrs
fwait
pop
and
mov
je
das
mov
movsb
cld
out
and
ljmp
sub
movsb
rorb
jae
pop
sub
xchg
orl
mov
and
js
sarb
in
insb
push
inc
push
bound
mov
cmc
ljmp
subl
inc
jne
pushf
pop
mov
lret
jne
ja
outsl
and
or
inc
cli
pusha
mov
xchg
mov
cld
int
pusha
call
mov
pushf
sub
cmc
jnp
or
gs
cmp
xor
add
sub
imul
sarl
inc
fs
jne
or
jno,pt
xlat
jb
arpl
in
mov
ljmp
not
stos
pop
inc
adc
neg
and
dec
jp
push
popa
mov
addr16
jno
inc
mov
adc
mov
shlb
or
and
mov
lcall
xchg
pop
shl
push
jmp
add
dec
popf
push
mov
inc
and
jle
push
or
nop
repnz
jb
lock
out
xchg
dec
add
popf
sub
imul
loope
sahf
xor
jmp
cmc
sbb
cmc
xchg
jl
inc
stos
popf
add
jle
fmul
negl
cmpsl
lea
call
push
jle
addb
lahf
inc
jno
mov
cmp
xchg
and
adc
insb
sbbl
cwtl
push
test
add
pop
rcrl
dec
popf
or
add
push
rorl
mov
arpl
xor
add
cmpsb
mov
rcr
sarb
das
std
movsl
outsl
psrad
jo
clc
clc
mov
loope
outsl
fmuls
pop
adc
or
call
jne
movsb
mov
and
iret
add
gs
inc
movsb
les
dec
imul
std
dec
jns
mov
jo
xchg
bound
lods
les
subb
faddp
divb
out
pushf
mov
mov
pop
lods
sahf
movsl
aaa
cmp
fldl
xlat
bound
lahf
mull
rcrb
lods
dec
jae
into
sub
or
push
mov
addr16
enter
mov
xchg
or
xor
rcrb
shll
jbe
push
push
or
cmp
xchg
lahf
aad
fidivrs
cs
mov
fwait
inc
leave
inc
dec
push
outsb
lret
pop
arpl
jo
mov
dec
scas
cmp
cmpsl
xchg
add
adc
insl
rcll
inc
pop
popf
popf
fwait
dec
xor
shl
gs
cltd
push
mov
call
dec
pop
adcb
mov
out
pop
sbb
test
aam
test
xor
rorl
mov
cmp
push
js
jle
or
pop
or
mov
xorb
fcomip
cld
int3
dec
andb
sbb
lcall
pop
popf
pushf
loop
outsb
shr
jecxz
sbb
push
xchg
pop
mov
shrl
ja
decl
xchg
mov
mov
jle
inc
xor
leave
out
jb
jge
or
insl
sbb
das
cmp
mov
mov
lahf
and
out
enter
jb
cmpsb
sub
mov
ret
lahf
mov
add
enter
jl
and
add
mov
je
out
mov
in
cmp
sbb
aad
std
das
jo
movsl
imul
jns
fnsave
lods
dec
cmp
pop
call
imul
fs
in
sbb
or
sub
jns
or
dec
lock
inc
roll
mov
inc
ds
pop
inc
fisubs
xchg
icebp
mov
pushf
cmp
les
les
mov
xor
inc
mov
cmpsl
stos
xor
lcallw
push
inc
mov
add
rol
inc
mov
push
ret
scas
or
cmp
imul
insb
xchg
mov
movsb
mov
mov
std
repnz
test
lods
ret
pop
add
mov
adc
jno
repz
movsl
insl
in
icebp
lahf
jno
mov
dec
leave
notb
stos
iret
jl
xor
jne
jbe
mov
mov
or
inc
stos
sub
sbb
jbe
scas
push
mov
xchg
or
lret
movsb
pop
addr16
mov
jbe
xor
data16
jg
xor
xchg
insl
fnstsw
popa
lahf
inc
int3
std
ret
push
test
xchg
mov
cmpl
mov
push
stos
mov
xchg
xor
stos
pusha
inc
in
jae
inc
movsl
and
aas
mov
fcoml
stc
lret
cwtl
pop
dec
fcmove
push
divl
sti
dec
push
push
data16
xlat
cmpb
sbb
pop
xor
popf
jbe
pop
loop
xor
lcall
cmp
fistps
mov
ss
cltd
mov
mov
xor
loop,pt
fdivl
daa
fists
push
mov
ja
mov
sub
xchg
idivl
fwait
and
inc
lds
and
gs
jg
adc
test
add
int3
cmp
sbb
mov
gs
ret
jb
stos
ljmp
fwait
rcr
and
testl
pop
loop
mov
out
mov
dec
imul
pop
dec
aam
mov
out
aas
and
out
xor
mov
icebp
test
lret
push
rol
mov
push
je
sti
add
cmc
imul
xor
mov
frstor
test
mov
add
inc
mov
push
jns
xchg
das
cmp
out
lret
push
and
fmull
shll
fwait
test
cmpsb
sahf
inc
push
sahf
cmp
sahf
stos
xor
add
ret
mov
in
int
mov
les
jge
cmp
sub
sub
inc
cmp
push
nop
pushf
enter
test
scas
mov
shrl
out
xor
and
xchg
or
sub
sub
rclb
daa
pusha
out
sbbl
loop
mov
jl
ss
js
in
add
rorb
jmp
cmpsb
into
jp
or
cmp
fwait
sub
jnp
push
xor
cmp
fldenv
or
xor
outsb
lahf
sub
mov
pop
xchg
add
mov
inc
or
data16
clc
xor
aas
dec
insb
xor
xor
sub
xchg
cmp
sbb
sbb
mov
mov
cmp
cmpsb
pop
xchg
pop
sbb
test
mov
xchg
jns
cmpsb
dec
jecxz
decb
bound
adc
jb
mov
push
gs
std
mov
push
sahf
sub
andl
ret
test
adc
pop
inc
leave
xor
rcll
cli
lods
pop
jne
mov
popa
jge
mov
stos
mov
call
repz
xchg
mov
aad
mov
jbe
addb
lret
adc
lds
push
xor
mov
fldcw
add
icebp
outsb
mov
push
sbb
lea
adc
or
stos
and
xchg
mov
sub
cmp
lods
push
mov
add
in
testl
sbb
in
ficomps
sub
xchg
enter
fisttpl
flds
jo
ja
pushf
inc
mov
add
cmp
pop
or
repnz
gs
shrl
stos
push
sub
xor
adc
icebp
inc
xchg
mov
mov
add
add
dec
inc
rorb
add
push
fldt
insb
loop
outsl
enter
cmp
fisttpl
sahf
pop
xor
push
je
jae
and
cmpsl
leave
fwait
test
fisttpl
cmp
push
sub
int3
dec
out
idivb
jmp
xchg
les
pop
cmp
mov
sub
out
cltd
mov
test
inc
and
movsb
lcall
popf
loop
pushf
xorl
fwait
mov
adc
pop
adc
insl
shl
rcl
pop
in
mov
mov
adc
bound
scas
cld
xchg
pusha
mov
inc
bound
pop
cmp
push
out
arpl
mov
jle
push
xchg
scas
dec
cli
lret
lret
cmp
dec
out
les
xchg
cmpsb
xchg
cmc
das
sub
push
int
sbbl
cmpsl
cmpl
cmpsb
pop
ret
mov
loopne
dec
pop
fwait
arpl
stos
bound
cli
test
ret
or
addr16
mov
daa
and
adc
stos
cwtl
jbe
subl
popf
mov
setns
xchg
inc
lret
in
inc
adc
mov
bound
enter
push
iret
adc
inc
shlb
push
imul
adc
sub
add
add
sub
movsb
sarb
es
leave
cwtl
dec
cld
mov
jnp
sub
jl
dec
pop
enter
cwtl
in
and
enter
sub
jge
aaa
dec
in
dec
jbe
adc
fcomp
sbb
mov
add
sub
pop
sub
xchg
or
pop
and
jge
mov
xchg
test
dec
in
lock
imulb
in
mov
andl
les
cs
out
dec
jmp
inc
scas
pop
mov
cld
dec
enter
int
in
and
or
or
sbbb
sbb
sbb
sub
and
add
movsl
push
xor
insl
in
or
out
adc
sub
out
jmp
push
leave
dec
pop
bound
ja
jge
jnp
sti
clc
imul
sbb
adc
lret
jo
movsl
sub
cs
pop
ja
xchg
cli
dec
pop
xchg
mov
jo
iret
lds
lea
nop
dec
jbe
jl
push
outsl
adc
xor
fwait
movsl
ss
cmc
mov
ret
aam
inc
imul
cmp
jnp
jnp
ljmp
cwtl
xchg
scas
jp
add
jp
ds
fwait
jle
out
inc
add
repnz
inc
out
sti
pop
pop
xor
mov
add
or
pop
arpl
push
andb
insl
sub
push
xor
push
shll
aad
ja
jnp
pushf
jl
fists
sbbl
push
es
mov
xchg
scas
lret
je
push
mov
ds
fidivs
xlat
jmp
push
lds
lods
lods
les
scas
call
and
clc
iret
das
xchg
mov
pop
fcoms
and
test
xchg
jge
xor
push
pop
test
dec
pushf
mov
mov
insl
inc
pop
imul
adc
pop
sbb
sbb
mov
dec
stc
pop
in
pop
cld
arpl
sbbb
inc
inc
leave
sub
sbb
mov
jge
sub
shlb
mov
push
bound
jmp
or
mov
pop
nop
pop
pop
movsb
repz
mov
insb
lret
pop
cwtl
adc
push
cmp
push
std
mov
cli
push
inc
sub
repnz
int
mov
xchg
bound
ljmp
pop
lcall
idivb
lcall
cmp
sbb
stos
roll
and
pop
pop
je
cmp
cmp
js
adc
cmp
jle
and
rolb
movsl
add
neg
imul
mov
inc
jbe
movsl
ljmp
inc
cmp
ss
insl
xchg
xlat
sub
bound
in
std
jecxz
dec
pop
lock
mov
repnz
in
jle
add
jns
cmpsb
and
rcrl
aam
adc
out
xor
xchg
cmpsl
jnp
rclb
ss
out
fistpl
in
testl
scas
shrb
mov
pop
inc
lahf
scas
xchg
pushf
fs
ljmp
idivl
cld
sbb
add
incl
jnp
test
aaa
iret
andl
add
std
and
cmp
pop
mov
sti
arpl
sbb
inc
and
xor
out
mov
mov
mov
push
cmp
mov
js
and
and
cld
lahf
hlt
xchg
clc
xchg
sbb
mov
aaa
xchg
mov
test
les
jg
das
adc
pop
sbb
sub
push
mov
ffreep
inc
add
cmp
xchg
sbb
push
fsts
jmp
in
in
aaa
fsts
xor
push
ds
sbb
xchg
rolb
pop
xchg
xchg
mov
cld
pop
inc
stos
xor
ret
scas
add
es
inc
add
out
mov
out
mov
xchg
mov
out
jg
mov
push
mov
lods
jge
pop
pop
xchg
and
arpl
adc
in
ljmp
rsm
pop
in
mov
loop
ljmp
sub
cmp
shll
outsb
mov
mov
add
push
dec
ret
add
cmp
adc
leave
mov
jo
fucomip
cmc
xchg
test
jmp
cmp
xchg
clc
mov
jae
test
pop
adc
bound
popf
sub
or
rclb
sbb
aaa
mov
arpl
and
push
add
sarl
sub
xor
cmp
mov
lock
inc
cmp
mov
ljmp
push
add
scas
xor
das
std
jns
in
stos
push
iret
xor
dec
mov
popf
fistps
xchg
call
rorl
clc
stos
test
andb
cs
mov
rol
cmovb
jmp
loopne
xlat
push
xorb
add
pop
inc
inc
cld
inc
cwtl
lret
xlat
repnz
mov
adc
jae
insb
cwtl
mov
and
ror
and
mov
mov
adc
inc
xor
dec
sahf
xchg
adc
pop
pop
notl
fnop
and
mov
repnz
cmp
xchg
js
cmc
or
push
lods
pop
xlat
mov
cmc
out
or
iret
mov
push
ds
jo
sbb
insb
shl
rol
das
bound
fisttpll
sbb
pop
xlat
or
orb
mov
mov
pop
mov
sti
add
rol
mov
dec
cwtl
sbb
scas
test
mov
imul
inc
mov
mov
aam
jns
ds
je
xchg
mov
jle
rcr
sbb
popa
ljmp
or
mov
dec
mov
sub
xchg
pop
mov
jle
xlat
popa
aad
imul
lret
subl
dec
pop
rcll
adc
dec
daa
cmpsl
cmp
icebp
loope
mov
jmp
cmp
aas
jle
mov
pop
or
call
jecxz
loopne
xchg
mov
sub
cmp
mov
rorl
xchg
inc
movntq
out
pop
ss
push
adc
repnz
dec
xor
shlb
sbb
cmpsb
fwait
mov
push
cwtl
rcrl
push
imul
jle
ljmp
cld
int
mov
jg
das
or
cmp
enter
sub
mov
jns
loop
sbb
mov
and
aad
in
sub
dec
hlt
aas
mov
inc
test
xor
leave
ds
jnp
mov
ds
jle
pop
jb
push
je
xchg
xchg
ljmp
mov
xchg
inc
fsubl
pop
xchg
push
hlt
pushf
mov
mov
es
sbb
mov
mov
push
dec
loopne
xchg
cmc
es
add
jle
in
insl
fsubrl
out
push
xchg
and
mov
inc
ljmp
mov
out
cmovbe
mov
pop
cmp
push
inc
pusha
jmp
aam
popf
mov
inc
jecxz
push
mov
data16
xchg
mov
mov
or
sti
cli
and
stos
push
fisubrl
add
adc
dec
xchg
sti
imul
jae
xlat
in
push
inc
outsb
xorb
adc
pop
into
ja
lret
cmpsl
andl
rclb
pop
ljmp
cmp
imul
mov
sbb
int3
push
xlat
push
lods
leave
mov
sbb
call
es
enter
daa
jno
lret
imul
lods
add
cmp
call
loop
icebp
inc
mov
out
in
xor
bound
clc
pop
adc
mov
lods
and
shrb
icebp
dec
lock
ss
repnz
gs
or
orb
sbb
movsb
and
pop
and
insb
cmpsl
push
cmp
pushf
cmp
aas
hlt
jle
test
int3
sbb
inc
into
fcom
sti
mov
xchg
mov
ja
inc
xor
pop
rcl
and
in
jns
sbb
jns
or
mov
std
sarl
jbe
sbb
dec
sbb
pop
mov
mov
push
or
push
fldcw
xor
mov
in
cmp
push
cli
aad
leave
mov
test
jne
pop
xchg
clc
and
push
jno
clc
insl
inc
shll
stc
jo
fwait
lret
sub
cmc
dec
mov
pop
hlt
dec
scas
push
es
ficoml
ljmp
xor
adc
sbb
stos
and
fs
dec
jmp
jbe
cwtl
cmp
mov
shlb
out
test
jl
lock
pop
stos
jl
cmp
or
push
pop
inc
stos
mov
jno
ds
rolb
scas
mov
sahf
pushf
addr16
jns
inc
inc
iret
aaa
mov
sub
arpl
jmp
adcb
pop
add
popa
fcompp
in
sub
imul
xchg
rcrl
mov
adc
xlat
imul
mov
rcll
push
xchg
maskmovq
dec
jge
hlt
imul
sbb
stc
movb
adc
sbbl
pop
xchg
icebp
inc
jge
sub
inc
xor
fwait
dec
mov
cmp
repnz
je
dec
jnp
xchg
mov
fs
inc
movsl
push
xor
mov
sub
out
adc
js
in
lea
xchg
lock
pop
sub
sbb
pop
shl
dec
fistl
pop
arpl
jl
rcl
sti
xor
jmp
jbe
data16
sarl
into
sub
mov
xchg
popa
popf
ds
mov
in
ret
gs
xchg
test
mov
cmp
sbb
or
adc
lret
sub
fs
mov
push
mov
xor
adc
inc
ret
jle
test
jmp
jge
enter
inc
push
andl
pop
push
aad
test
or
leave
stos
mov
cmp
push
dec
out
pop
fwait
inc
ss
aam
add
sub
cld
cltd
sbb
add
addl
or
or
daa
insb
hlt
fs
rclb
mov
jnp
pop
ss
aaa
int
adc
xor
push
fwait
cmp
mov
rcr
xchg
cmp
jmp
pop
rol
xchg
daa
aaa
lret
inc
jno
cmp
cs
cltd
pusha
xor
loope
shl
sub
enter
jb
add
mov
sti
ja
sahf
inc
sub
pushf
int3
leave
es
mov
movsl
mov
sbb
xor
sub
fldcw
mov
mov
mov
lahf
xchg
mov
pushf
fsubs
adc
dec
sbbb
sub
sti
lret
xchg
mov
mov
imul
inc
dec
aam
js
or
dec
repnz
inc
mov
sub
js
outsl
xchg
mov
ret
mov
addb
mov
add
adc
sti
pop
inc
in
loopne
inc
gs
add
push
cltd
mov
bound
lcall
out
clc
leave
lds
and
and
mov
mov
sbb
pop
mov
mov
fstpl
mov
adc
into
pop
mov
addr16
lea
test
or
add
pfcmpgt
inc
test
into
mov
xlat
and
dec
dec
push
adc
out
sahf
ljmp
pop
xchg
loopne
divl
pop
push
je
lcall
bound
jb
xor
mov
addb
ds
test
push
pusha
push
popa
lock
or
xor
xchg
ds
dec
dec
shrb
dec
rcr
sahf
ljmp
clc
loope
test
imul
mov
sub
fimuls
shll
mov
sub
bswap
iret
dec
ret
push
jl
push
lods
repnz
add
lcall
sbb
ja
mov
push
mov
jl
and
je
jo
or
ficomps
out
inc
sbb
pop
adc
sub
imul
sub
pop
push
pop
mov
mov
cmp
inc
mov
sbb
ror
dec
imul
push
dec
outsl
pusha
es
in
shrb
fcoml
test
pushf
cltd
xchg
pop
and
adc
sbb
dec
mov
movsl
popa
pop
dec
hlt
xor
out
add
lahf
ja
mov
jl
mov
lods
mov
push
xor
push
sub
pop
gs
xchg
push
out
sbb
xor
mov
xchg
lock
push
aaa
adc
cmpsb
xor
and
and
loop
add
cmp
mov
jae
pop
or
add
insb
mov
ficompl
icebp
mov
or
pusha
fdivs
sub
cmc
leave
mov
sbb
repnz
stos
jmp
hlt
std
sbb
mov
pop
pop
repz
outsl
aas
std
adc
std
addr16
loop,pt
mov
out
mov
sbb
pop
pop
adc
ficoml
mov
xchg
and
rorb
aam
addr16
lahf
adcl
or
addr16
subl
mov
or
sub
xchg
sbb
and
call
jmp
push
cwtl
cli
jae
mov
mov
mov
and
jnp
fneni(8087
ljmp
sub
fstp
inc
jg
enter
shll
xchg
movswl
sbb
fidivs
je
mov
adc
jp
bound
les
mov
jns
and
ret
adc
sub
and
imul
and
data16
sbb
aam
int3
adc
aam
sti
lds
mov
xor
loope
or
lea
repnz
dec
jecxz
pop
or
fldenv
sub
dec
rorb
js
mov
enter
mov
cmp
xchg
mov
popl
sbb
das
add
mov
push
push
nop
xchg
es
or
inc
dec
mov
sbb
fisubrl
dec
xor
pushf
mov
add
pop
stc
aad
orb
jge
je
push
add
out
loopne
repz
ret
sbb
or
into
xlat
js
jle
ja
push
push
fnsave
ja
mov
mov
mov
insb
and
mov
dec
loope
ds
jbe
pop
in
bound
jmp
lods
mov
loopne
xchg
shlb
and
cmp
test
xor
jbe
lods
xorb
imul
lret
rclb
imul
jns
cli
pusha
pop
mov
sbb
cmp
push
jmp
mov
out
aad
mov
stc
lds
imul
sbb
out
adc
mov
lock
aaa
test
test
mov
mov
jo
and
cmp
negl
pop
popf
add
std
push
cmc
mov
and
adc
xor
mov
add
xchg
pop
push
mov
push
notb
add
dec
imul
out
outsl
xchg
data16
inc
pop
jmp
idivb
pop
pminsw
vmovlps
int
es
shrl
cmc
mov
xchg
adc
push
adc
cmp
sbb
adc
fdivrl
rcll
mov
fstpt
ss
clc
gs
push
mov
mov
mov
leave
icebp
mov
jmp
push
shll
popf
rorb
push
mov
stos
gs
sub
in
fmulp
ja
jle
and
xchg
xlat
sbb
inc
dec
insl
bound
or
inc
test
inc
or
ret
cwtl
popa
lahf
push
push
inc
pop
mov
lahf
push
fimull
mov
jg
fidivrs
pop
cmp
adc
sub
dec
call
fs
sbb
sbb
xchg
cmc
jne
sbb
jns
hlt
pop
movsl
push
inc
mov
aaa
jecxz
adc
in
xor
dec
ss
js
mov
cmp
shlb
mov
cmp
push
cmp
test
cmp
sbb
cmp
scas
repnz
xchg
sbb
lock
or
pop
xchg
hlt
movsb
push
dec
and
jmp
xor
in
sbb
call
and
add
daa
arpl
data16
out
xor
pop
sahf
jae
lock
xchg
add
cmpsb
and
sti
stos
sbb
and
ficomps
loop
int3
sti
jge
pop
mov
jg,pn
or
pusha
sti
outsl
inc
mov
push
les
enter
shlb
clc
inc
fistpll
mov
pop
imul
pop
jl
xchg
push
xchg
fs
mov
shll
hlt
mov
xchg
sahf
inc
push
dec
sbb
xchg
sbb
pop
jns
pop
popl
xchg
ja
sbb
call
sbb
out
pop
inc
adcl
mov
outsb
iret
rcl
mov
xchg
loope
imul
outsb
and
aas
outsb
rcl
maskmovq
testl
ds
push
mov
scas
frstor
fwait
xchg
mov
nop
pop
daa
xlat
jne
sahf
je
mov
inc
sub
lock
in
cwtl
dec
or
mov
je
dec
dec
mov
or
xchg
add
or
pushf
lahf
xor
aaa
scas
out
ds
pop
imul
aaa
inc
push
into
rorl
push
fwait
aam
inc
or
clc
and
cmp
fs
sub
sbb
ret
popa
jle
lret
jno
out
mov
add
addr16
dec
xchg
jne
lret
scas
xor
cmpsl
inc
sub
arpl
xlat
mov
scas
orb
mov
das
cmp
addb
xchg
lods
ret
lret
leave
cmp
jae
mov
add
jl
scas
sub
cltd
xor
inc
add
test
negb
fmull
pop
xor
sbb
and
inc
stos
mov
aam
mov
out
xchg
je
scas
leave
xor
out
sub
sub
add
lret
add
stos
iret
push
push
inc
dec
pop
ss
aam
add
das
sbb
outsl
int
inc
test
iret
inc
and
jmp
and
dec
xchg
pop
lods
mov
dec
adc
clc
adc
fwait
sub
mov
cmp
dec
xchg
push
loop
and
orb
cmp
adc
lahf
xchg
pop
pop
or
hlt
adc
pop
xorb
cmp
xor
imul
mov
imul
pop
cmpsb
or
ss
mov
in
and
add
shl
sarb
mov
mov
adc
pop
shll
pop
stos
iret
out
push
push
add
push
in
popf
xchg
loop
lret
ds
mov
mov
jbe
mov
mov
pushf
arpl
loope
lret
out
es
test
and
push
push
addb
leave
in
out
insb
and
sbbl
jmp
loopne
jns
inc
mov
dec
or
idiv
pop
cmp
jl
sub
mov
insb
lea
pusha
jno
aad
mov
inc
cmp
pop
mov
jl
mov
imul
in
shlb
mov
sbb
sbbl
pop
adc
or
ret
xor
lret
gs
lret
not
inc
and
dec
lcall
dec
aaa
mov
xchg
jo
stc
push
push
xorb
popa
fs
lock
hlt
sahf
xchg
inc
xchg
mov
dec
mov
lahf
fwait
and
xchg
xchg
iret
xor
xchg
sbb
push
scas
sub
stos
xor
xor
btc
pushf
cld
xor
out
mov
je
test
push
pop
adc
xor
add
fcmovb
stos
scas
outsb
das
adc
sbb
enter
lret
call
test
and
lahf
mov
cli
fnsave
je
pushf
dec
aam
inc
addl
test
sub
ret
jnp
lahf
add
pushaw
insl
xor
test
dec
sar
cs
pop
xor
cmp
or
into
ds
mov
out
test
push
test
lcall
cmp
pop
inc
pusha
add
push
lcall
xlat
adcl
jmp
sbb
mov
add
jge
dec
xor
add
rcrb
gs
mov
cmp
nop
jno
andb
xchg
inc
sbb
loope
sbb
sti
push
shlb
fsubrl
and
in
xor
addr16
push
dec
ret
icebp
or
test
dec
movsb
jle,pn
dec
test
jl
push
xorb
sarb
cli
cmp
scas
out
pop
out
int3
adc
loope
push
imul
js
or
dec
adc
std
lahf
shll
test
pop
rorb
sarl
push
ja
repnz
andl
mov
daa
cli
jne
in
ret
dec
fcomps
jnp
xchg
sub
in
pop
pop
std
mov
int
nop
int3
add
std
xor
pcmpgtd
loope
and
shll
arpl
and
jb
push
iret
jae
pop
sub
inc
adc
mov
lods
mul
mov
sub
push
rcll
add
add
lahf
inc
mov
or
ret
ja
cwtl
jb
cmp
idiv
mov
mov
or
and
adc
pushf
cmp
call
adc
nop
out
sahf
cmc
mov
ret
dec
cltd
lret
adc
push
fsubr
pop
repnz
repz
lea
mov
jno
pop
pop
insb
pop
xor
out
popf
rcrl
inc
cmp
pusha
insl
or
mov
test
aad
inc
test
inc
into
roll
xchg
adc
shll
mov
dec
div
fwait
xor
push
mov
inc
xor
cmp
xchg
int3
xor
ret
mov
pushf
xchg
xor
xor
inc
ss
pop
mov
fs
and
cwtl
outsl
push
fldcw
cmpsl
cltd
gs
mov
sub
push
mov
push
mov
mov
mov
fdivr
push
outsb
stos
jge
mov
es
or
sbb
and
xor
daa
pop
inc
clc
mov
les
dec
bound
add
xor
out
lock
xor
fs
daa
push
out
xchg
enter
movsb
int
lahf
mov
leave
sub
dec
js
sub
int3
xor
pop
jg
pop
rcll
pop
shr
inc
and
cmp
fwait
or
xor
push
pop
pop
push
cmp
ja
popa
xor
xor
aad
inc
inc
mov
mov
sbb
dec
jne
push
jno
aaa
test
cmp
and
inc
les
cmp
lock
lods
pop
push
jae
dec
mov
jmp
in
inc
gs
jecxz
or
test
cmpb
scas
sub
out
je
mov
inc
pop
lods
inc
pop
rclb
sti
push
fnsave
add
lcall
cmp
jbe
inc
jne
jl
cli
out
mov
icebp
or
or
inc
push
push
popf
jbe
or
pop
sub
stc
inc
test
sahf
movsb
call
mov
jg
jbe
ds
mov
fldenv
dec
je
je
inc
hlt
adc
pop
imul
jmp
cmp
mov
adc
jb
push
fisttpll
shlb
daa
lret
ja
mov
inc
push
into
jg
sub
xchg
loope
stos
sub
mov
xor
enter
push
mov
cmp
xor
repz
and
xchg
movsb
sub
sahf
gs
mov
push
iret
dec
inc
cmc
sbb
cmpsb
data16
adc
jp
repnz
stos
mov
loope
pop
xor
mov
out
sub
fnstsw
push
and
test
lret
stos
mov
sub
lcall
pop
cmp
push
mov
inc
add
out
loop
aam
faddl
sbb
push
adc
mov
adc
xchg
call
mov
push
xchg
mov
dec
cmpsl
dec
cwtl
stc
push
mov
jmp
fs
push
les
jnp
mov
aad
push
jmp
inc
fcoml
xor
enter
arpl
pusha
dec
aam
sub
jp
subl
push
mov
jl
mov
test
out
int3
sahf
xlat
xchg
lahf
xchg
in
fisttpll
arpl
test
adc
lahf
gs
push
in
inc
leave
enter
and
lahf
fidivrs
cs
push
push
mov
sti
sbb
jo
cs
sbb
dec
and
adcb
xchg
cltd
jmp
push
adc
cmpl
sbb
adcl
mov
jo
jmp
xchg
mov
mov
xchg
add
inc
fld
arpl
mov
ljmp
fs
rolb
push
sarb
enter
es
enter
in
adc
in
daa
mov
xor
cmp
mov
lds
pop
fnstenv
jb
and
sbb
adc
fildll
fcompl
clc
cwtl
jns
pop
movsb
test
test
jl
in
adcb
mov
dec
out
add
sbb
cmp
sub
rep
shl
loop
and
jbe
dec
jl
or
cmc
ret
fcmovne
push
jb
ss
sahf
lret
jle
sub
lods
mov
movsl
dec
leave
push
mov
jns
lods
fucomp
adc
push
jle
outsl
les
out
jmp
ja
cmp
fs
jno
jo
fadd
ss
outsl
mov
cmp
and
pop
adc
test
xor
sbb
out
cmpsb
pop
cmpsb
test
rcrl
xchg
add
pop
push
out
jp,pt
xor
jmp
sbb
shrb
dec
pop
and
popl
mov
push
xor
add
xor
cwtl
ret
test
cs
mov
mov
sbb
outsl
insl
xchg
movsb
rorl
in
mov
loopne
fcomps
in
gs
imul
xor
pop
in
pop
int
push
out
pusha
mov
xor
push
loope
rorb
cwtl
icebp
in
and
scas
lods
fwait
adc
ljmp
scas
insl
mov
aas
xchg
adc
xor
fcomip
lret
popa
lock
enter
jecxz
ret
out
scas
jnp
jl
inc
xchg
andl
inc
cs
ja
inc
in
sahf
sub
xchg
loope
or
cmpsl
in
xor
stos
inc
fists
add
loope
adc
scas
loop
mov
pop
mov
dec
mov
sbb
loope
ret
cmp
jp
sbb
push
mov
or
adc
push
or
inc
test
push
fsubr
dec
jp
xchg
inc
lods
aas
jmp
sub
popa
xlat
dec
daa
jg
or
pusha
xchg
cmp
scas
sbb
lods
xchg
rcrl
mov
xlat
iret
xor
lods
pop
mov
lret
movsb
fldt
sbb
push
loopne
mov
test
push
pop
pop
jg
push
adcl
cwtl
mov
enter
fbld
sub
adc
shrb
pop
mov
fistpll
pop
inc
push
add
xchg
das
dec
call
mov
es
insb
sbb
ss
cld
shrl
fidivs
ficompl
in
pop
inc
clc
mov
call
loop
adc
xor
mov
or
mov
mov
cmp
sub
pop
jns
or
fwait
sbb
push
sbb
add
jg
jne
sbb
mov
ja
lods
dec
jecxz
push
fldcw
mov
inc
cmp
fs
add
cltd
aaa
pusha
sub
push
sbb
into
xor
testl
test
dec
sti
xchg
and
jno,pt
xor
lret
insb
fists
sbb
shrl
cmpsb
add
push
pop
insl
push
sbb
addr16
xchg
packuswb
lret
rcl
inc
outsl
pushl
pop
nop
pop
mov
sbb
mov
and
push
lods
ss
sbb
jmp
mov
test
into
out
xor
test
push
lcall
fisttpll
sub
inc
mov
lcall
pop
mov
ja
pusha
sbb
mov
leave
call
mov
sbb
cs
iret
fdivrs
cs
aam
jns
daa
les
aas
sahf
jb
insl
jb
cli
adc
imul
mov
cmp
in
pop
stos
pop
inc
fnstcw
mov
xchg
push
sbb
push
mov
push
mov
cmpsl
into
lret
cmp
sbb
shrb
fsub
and
ret
dec
xchg
jbe
inc
or
dec
push
or
mov
inc
push
sbb
cmp
or
inc
adc
subl
sub
pop
mov
dec
cmpsl
sub
sarb
mov
lahf
inc
xchg
or
and
jle
jle
cld
sbb
std
sub
popa
jo
test
repnz
fmul
dec
test
dec
into
leave
mov
scas
or
mov
mov
in
stos
out
cmp
mov
pushl
call
xor
flds
xor
jle
pop
out
push
scas
bound
imul
push
es
sti
sub
ja
out
jbe
in
mov
pop
ljmp
addr16
inc
shrb
fucomip
rcll
int
inc
sbb
js
push
pop
cmc
jge
ja
stc
jnp
cmp
and
mov
ficomps
mov
dec
jl
aaa
ret
aaa
sub
mov
lods
mov
push
stos
mov
std
flds
sub
ss
mov
sbb
push
aaa
pcmpgtw
mov
mov
xchg
xchg
mov
test
pop
stc
push
loop
sub
pop
or
sub
iret
inc
aam
pop
pusha
stc
cmp
test
iret
arpl
and
loope
pop
inc
jo
cmp
loopne
mov
push
cli
adc
test
cmpsb
mov
xor
loope
and
fs
xchg
sti
movsl
xor
sbb
andps
xchg
rcrl
jbe
addb
fimuls
push
lret
cltd
mov
mov
cmc
outsb
out
dec
clc
out
outsl
mov
xchg
mov
mov
mov
mov
push
cli
out
xchg
movsl
unpckhps
sub
or
adc
cmp
orl
dec
out
mov
lret
icebp
push
repnz
bnd
pop
pop
mov
les
les
or
pop
xor
pop
sub
push
pop
xchg
sahf
or
sub
adc
repnz
xchg
add
pop
jg
inc
in
add
push
xor
adc
sbb
mov
mov
addr16
cmpsb
out
cltd
scas
dec
in
std
dec
sub
mov
jnp
movsb
hlt
mov
pop
scas
mov
and
xor
int3
push
popa
mov
call
mov
jmp
add
leave
les
test
loope
mov
xchg
or
in
dec
inc
jmp
gs
mov
scas
pop
iret
jge
push
inc
dec
cmp
dec
sub
out
jb
mov
add
push
sbb
sahf
jae
je
dec
movl
orl
push
mov
mov
sbb
fcom
mov
sbb
pop
xchg
mov
insb
pop
jae
jb
adcl
insb
outsl
mov
cmp
xchg
pushf
lock
aam
mov
lahf
jae
fsubrs
pushf
xor
push
push
mov
cmp
and
mov
jl
mov
mov
push
mov
inc
int
mov
pop
mov
jecxz
or
dec
loop
shlb
sbb
push
mov
popa
mov
cmp
out
call
adc
in
inc
icebp
xlat
fwait
or
mov
arpl
lret
aad
aaa
adc
idiv
or
mov
ret
xor
lret
push
lret
addr16
jge
in
mov
mov
dec
cld
push
mov
mov
test
jle
loopne
mov
lock
mov
out
sub
mov
push
int
mov
cli
lahf
movsb
ja
and
fstl
aaa
xchg
loop
jg
xor
jecxz
aad
or
mov
add
scas
and
add
js
jmp
incl
ss
xchg
imul
xor
movsl
cmc
fdivrl
or
jae
pop
mov
xchg
out
in
movsb
sub
jg
into
sahf
sbb
fisubs
mov
sbb
mov
jae
push
add
insl
or
addr16
jecxz
mov
pop
cmp
jl
jb
dec
add
cmp
sti
pop
jb
pop
popf
cmp
ds
gs
loope
mov
jne
sub
loope
xor
sbbl
xor
loope
je
or
add
push
cli
jae
shrl
pushf
mov
cltd
fwait
pop
enter
inc
out
pop
sti
shrb
insl
add
jns
pop
les
dec
push
mov
js
jne
xor
sbb
pop
hlt
call
fwait
cltd
fcmovnu
sbb
sub
aad
cmp
or
cmp
fs
mov
ljmp
inc
jnp
push
xor
pop
add
cmp
shlb
addr16
mov
ss
stos
xchg
loope
add
mov
test
sub
and
sbb
fcomps
ds
dec
adc
or
inc
mov
cld
aad
or
xor
push
dec
sbb
out
repz
push
xchg
stos
rcrl
or
xor
in
dec
dec
outsb
push
pop
sub
pop
imul
pop
inc
pop
clc
roll
pop
push
inc
push
push
out
out
cmp
pop
mov
hlt
jnp
cwtl
test
dec
fisubrs
mov
xchg
sub
divb
cmpsl
shll
push
imul
sbb
sahf
movsl
mov
or
iret
and
adc
fiaddl
aad
pop
xchg
pop
jne
push
aas
adc
pop
in
sub
loope
cmp
push
shrl
lea
mov
iret
fldpi
arpl
push
mov
cld
jnp
cmpsl
and
test
mov
repz
pushf
mov
dec
jne
aaa
mov
or
add
dec
adcl
xor
fnstenv
fcomps
push
pop
sbb
cmp
out
outsl
loop
ds
inc
mov
js
jl
mov
mov
filds
sub
bswap
out
imul
or
and
jo
push
push
gs
sub
mov
lret
loope
aas
lods
jne
mov
xor
rorb
arpl
xor
pop
and
rcrl
popa
sub
push
inc
lods
sbb
pop
xchg
xor
xor
sbb
out
inc
pop
imul
push
mov
push
or
mov
pop
out
xor
test
mov
outsb
dec
cmp
sti
out
pop
adc
lock
cs
std
lods
cli
jno
jo
mov
dec
jecxz
aad
jo
in
push
jle
icebp
mov
or
xor
xor
pushf
xchg
xlat
inc
shrl
adc
jb
push
xchg
mov
mov
shrb
inc
inc
mov
ljmp
ss
dec
stos
test
aaa
jns
nop
inc
dec
inc
aas
imul
cmc
and
dec
repnz
sub
call
xchg
sub
dec
mov
jno
or
or
les
cmpsl
repz
push
test
rorl
out
cld
test
clc
sbb
imul
xorl
xor
fld
jecxz
cmp
int
dec
and
inc
pop
jne
and
jbe
cltd
and
ljmpw
mov
icebp
fwait
ja
add
jp
lods
aaa
in
pop
or
cwtl
test
imul
shufps
jle
mov
jnp
cmp
into
and
jmp
push
jecxz
popf
ficompl
or
mov
test
loopne
out
xchg
dec
ret
push
mov
jg
ljmp
lcall
int
out
or
std
dec
pop
pop
cmp
jge
adc
insl
sbb
xchg
arpl
pop
pop
adc
push
xor
dec
inc
lret
aad
xchg
pop
and
fmuls
iret
pushf
push
push
dec
sarl
cmp
dec
insl
das
cmp
mov
imull
pop
in
test
inc
rcr
inc
adc
add
fsts
mov
push
mov
pop
jg
addb
icebp
mov
push
xor
dec
jge
fwait
mov
sbb
in
push
adc
dec
jne
lock
push
mov
fcomi
xchg
add
int
das
pop
jecxz
adc
or
and
in
decl
mulb
jns
ja
push
shll
call
dec
ret
sub
jns
push
enter
in
fwait
mov
inc
and
mov
insl
mov
jnp
cmp
pop
pop
fidivrl
jns
addl
push
lods
inc
dec
xor
push
leave
sbb
mov
sub
dec
xor
rcrb
rorb
jb
mov
cmpb
xor
dec
inc
dec
subb
leave
scas
sbb
shll
loop
xchg
jmp
aas
loopne
mov
jno
bound
ja
sti
mov
insb
repnz
xchg
mov
gs
or
add
in
imul
xchg
sub
pop
sbb
fstps
add
loop
and
mov
nop
inc
fwait
xchg
xchg
add
mov
xchg
roll
mov
jne
out
cwtl
xor
je
dec
mov
inc
fistl
inc
jno
int
mov
pushf
inc
adc
loope
loope
mov
mov
rolb
pop
pusha
movsl
cld
jmp
push
insl
imul
add
popa
xchg
adc
xor
mov
jne
in
insl
adc
fcmovbe
lret
mov
cltd
push
mov
jo
pushf
roll
ds
xchg
arpl
and
mov
lcall
pushf
adc
gs
sbb
outsl
pop
call
repz
xchg
xor
outsl
push
clc
mov
sti
popa
movsl
mov
push
out
pop
lar
dec
mov
out
ljmp
cmpsl
shlb
cwtl
jg
rcrb
icebp
mov
lods
addr16
push
fldcw
xchg
sbb
pop
inc
aam
mov
xchg
enter
cs
and
xchg
int3
cmc
adc
enter
adc
sti
gs
enter
jg
pop
jmp
sub
dec
lods
ljmp
pop
sbb
loop
mov
fcom
js
popa
fs
push
mov
pop
jbe
mov
fistpll
shrl
mov
stc
xchg
mov
scas
hlt
sti
leave
or
cmp
shlb
mov
stc
push
stos
mov
sbb
pushf
dec
rcl
push
clc
sbb
mov
xchg
stos
dec
imul
jb
mov
adc
fistpl
xor
cmp
nop
aaa
bound
add
arpl
mov
arpl
leave
fstp
jbe
nop
jecxz
cmc
jo
sbb
mov
ja
jmp
js
iret
push
mov
adc
push
ret
add
mov
xor
xor
inc
or
lahf
push
in
pop
xchg
ss
rcrl
fsubrp
jnp
ss
testl
inc
test
fisubs
stos
push
fidivs
mov
cmp
jmp
xor
mov
sbb
out
pop
stos
rorl
mov
fs
stos
pop
xchg
lods
push
adc
xor
adc
jae
insl
push
and
pop
rol
shlb
mov
rep
vsqrtpd
xchg
cld
pusha
fdivrp
lret
out
mov
xor
loopne
inc
lret
cli
xchg
ljmp
flds
ljmp
enter
sub
fs
or
int3
xorl
out
or
dec
jae
test
add
xchg
ss
cli
aad
mov
sbb
fmuls
jbe
int
scas
cmp
sbb
xchg
jnp
stc
sarb
hlt
aam
ret
fldl
push
mov
jle
cmp
sbb
xchg
mov
xchg
shll
lock
or
pop
out
dec
aas
or
addb
sbb
fstpl
jno
rol
add
mov
cmpsb
jns
and
pop
push
aad
insb
adc
mov
mov
mov
les
ja
test
test
jl
outsl
sub
nop
stos
mov
pop
ret
psubb
test
cmp
outsl
or
jbe
inc
stos
loope
mov
xor
cmc
punpckhwd
sbb
daa
lods
cltd
pop
sub
lret
imul
enter
adc
xchg
and
pop
int
mov
xorb
loopne
gs
orb
adc
outsb
scas
sbb
push
inc
mov
pop
sub
aam
repnz
rcr
test
clc
and
jge
std
jae
mov
xor
out
xor
cwtl
xchg
les
rol
out
lea
xchg
in
fs
movsb
and
mov
int3
orl
jmp
jl
jne
mov
sbb
js
pushf
pop
pop
and
test
sbb
push
push
popf
repz
loopnew
leave
mov
pusha
dec
sub
ds
jae
ret
pop
sub
adc
out
loopne
movsb
sub
adc
sbb
push
or
int
sbb
gs
lds
dec
mov
lea
mov
fisubs
int3
fdivs
push
test
xor
cmp
roll
xchg
test
ljmp
imul
xchg
add
mov
dec
dec
adc
push
adc
loope
mov
add
rolb
insb
pusha
test
movhps
mov
jl
sbb
shrl
dec
stc
into
jae
jae
and
shl
ss
ret
out
pop
pop
jle
dec
lock
push
ret
repnz
adc
push
cld
aam
in
push
push
pop
pop
dec
stos
test
cmpsb
jae
xchg
das
push
and
or
clc
push
mov
mov
cmp
bound
hlt
mov
inc
test
xor
xchg
pop
ljmp
and
pop
push
sbb
loope
lds
cmp
rolb
insb
jne
popa
stc
fists
lea
xchg
aaa
ljmp
inc
push
mov
adc
mov
push
sub
and
out
inc
dec
insl
gs
lret
outsb
or
negb
jle
adc
sbb
add
aam
and
or
mov
fdivl
push
nop
add
sbb
insb
insl
movb
xchg
jecxz
aad
push
pop
jmp
or
fsubl
dec
sbb
icebp
aam
xor
lea
aad
ret
outsl
xor
pop
fcomip
fsubs
mov
ds
push
cwtl
pop
inc
movsb
dec
lret
cwtl
jne
std
push
xchg
cwtl
repnz
ficomps
lods
pop
dec
out
push
or
push
fsubp
inc
fldenv
push
inc
jno
jae
fisubrs
inc
pop
xchg
jae
rcrb
xchg
push
xchg
test
mov
adc
xlat
dec
pusha
andb
xor
scas
mov
mov
movl
pop
aaa
andb
jnp
mov
jo
or
cmp
pop
inc
jno
cmp
js
lahf
dec
test
pop
xchg
daa
andl
mov
popa
stos
dec
aam
insb
out
je
mov
jl
imull
pop
inc
add
or
mov
pop
js
push
das
in
insb
je
add
rorb
push
shrb
bound
dec
imul
inc
inc
add
iret
ret
xor
test
sub
ja
aaa
xchg
push
out
mov
add
push
pop
xchg
dec
push
pop
lea
ret
shlb
out
aad
mov
jbe
mov
mov
mov
sbb
sub
xchg
pop
jl
pop
xlat
and
hlt
shlb
jecxz
stc
ret
test
popf
dec
js
es
adc
or
jmp
cmp
out
mov
dec
fwait
rcrb
fcoms
test
gs
sub
push
mov
sub
orb
sahf
jge
enter
imul
push
adcl
in
adc
fldcw
add
push
sub
jecxz
sbb
scas
and
fldl
jmp
add
and
add
mov
push
loop
aaa
repz
cmp
xchg
mov
das
imul
sub
sbb
dec
inc
in
adc
jmp
push
sbb
xchg
loopne
ss
cmpsl
jecxz
inc
adc
sarl
aas
pop
aaa
mov
mov
adcb
sbb
xchg
mov
decb
cmp
loop
adc
xor
mov
mov
dec
and
lds
ret
jp
sbb
cmp
xchg
push
dec
mov
xchg
push
cmp
mov
sti
mov
pop
mov
repz
enter
adc
iret
adc
or
jnp
jb
rorl
xsaves
sub
inc
xor
or
popa
out
mov
cld
cmp
icebp
xchg
int3
inc
push
adc
xchg
jmp
add
mov
ljmp
lds
inc
jns
mov
xor
in
sub
jns
dec
daa
imul
xor
test
xlat
fimuls
popa
icebp
sub
movsb
sbb
sarl
cld
adc
mov
sub
jbe
sahf
push
movsl
jle,pn
lds
jno
clc
movsb
pop
and
sub
stos
ljmp
dec
mov
aad
pushf
mov
jae
mov
js
sub
adc
pop
loop
pop
mov
cs
xchg
pusha
test
cmp
lcall
inc
sub
cld
mov
mov
pop
mov
jns
cmp
inc
imul
lcall
jge
jno
push
hlt
or
stos
lcall
sbb
fsubl
addl
jb
cmp
xchg
pop
stc
xor
and
outsb
test
pop
xchg
sub
movsl
sub
inc
imul
jnp
out
push
andl
dec
fsubl
mov
lock
stos
and
stos
push
mov
cltd
mov
push
mov
or
inc
add
dec
lcall
lcall
xlat
fsubrl
fdivr
aaa
push
jp
loope
xor
adcb
andb
sbb
outsl
inc
movsl
ret
gs
call
cmp
mov
xchg
outsl
cmp
pop
ss
repnz
shlb
outsb
jnp
outsl
add
test
loop
fstpl
mov
mov
mov
pushf
mov
leave
imul
lods
rcrl
mov
jno
lret
or
js
sub
sbb
sub
cmc
jne
fdivl
cwtl
stc
cmpsb
xor
call
je
jecxz
push
call
outsb
cmpsl
loop
subb
loope
push
or
mov
or
sub
pop
scas
sbb
lcall
std
jp
enter
push
mov
popl
in
and
mov
mov
sbb
sub
je
adc
stos
in
notl
add
inc
dec
push
dec
pop
mov
pop
jno
cmp
shll
push
adc
js
and
add
cltd
or
adc
mov
sub
xor
mov
and
pop
int
popf
xor
test
call
test
lcall
jge
pop
ret
push
shlb
cmc
scas
fisubrs
mov
inc
and
pop
sub
jo
pop
outsl
sub
sub
xchg
aam
add
in
and
xchg
cltd
mov
add
outsb
out
cmp
in
pop
xchg
imul
addr16
sub
mov
jb
std
mov
add
ja
adc
xchg
xchg
mov
arpl
jb
jns
add
out
lahf
xchg
add
nop
adc
daa
cwtl
cli
push
mov
or
push
in
mov
pusha
in
mov
repnz
movsb
outsb
push
push
pop
in
loope
lods
in
jb
push
outsb
jbe
or
dec
ja
or
pop
add
dec
jecxz
or
add
mov
andl
popf
pop
les
pop
xchg
sbb
iret
push
push
ds
fs
mov
outsb
out
js
lahf
scas
jno
cmc
fwait
and
aad
mov
cld
mov
or
pop
popa
outsb
mov
popa
mov
insb
jns
lea
or
mov
pop
cmp
mov
jb
fwait
pop
and
mov
xor
dec
cmp
cmp
scas
sbb
popa
mov
ds
mov
ds
adc
cld
adc
idivl
xchg
pop
xor
test
iret
jo
xchg
and
fistpl
je
bound
xchg
cwtl
mov
jge
jae
std
in
in
dec
stos
ja
jae
pop
inc
fcompl
int3
jne
lock
arpl
mov
jo
fwait
sbb
cmp
jae
mov
jb
shr
inc
pop
mov
cli
dec
jo
mov
adc
mov
outsb
scas
idivb
pop
push
ss
negb
or
and
in
sub
aas
mov
jmp
push
add
test
std
dec
fildl
cmp
mov
push
xchg
and
adc
jg
jne
add
bound
rcrl
pop
cld
cmp
roll
test
ss
shlb
out
pop
push
xor
push
lock
pop
repz
push
clc
sub
out
cmp
test
pop
lods
and
xor
sub
pop
cld
lock
mov
test
in
lds
xchg
dec
stos
aam
adc
sbb
adc
addl
and
pop
and
mov
sbb
mov
in
shrl
cmp
scas
sub
add
push
push
mov
outsb
lret
loop
add
lock
mov
sbb
jecxz
adc
mov
mov
mov
dec
les
jp
dec
jno
push
lds
mov
mov
call
jge
stos
test
sub
cmp
insl
fsts
or
out
insl
mov
dec
cs
dec
dec
pop
inc
cmpsb
sub
or
cwtl
push
inc
adc
mov
ss
fwait
mov
and
insb
push
lcall
xor
subl
inc
pop
pop
jle
lahf
insb
lret
fnstsw
inc
lea
iret
xor
jo
add
mov
mov
xchg
jne
outsb
mov
rcrl
adc
loopne
xor
inc
enter
push
cmpsl
mov
adc
cmc
call
sbb
add
and
push
rolb
mov
pusha
flds
push
sub
mov
xor
es
ret
daa
sub
adc
pop
cli
in
mov
jecxz
or
lods
stos
sub
das
popf
aas
mov
mov
fists
mov
xchg
test
pop
mov
xchg
jae
add
jns
inc
leave
inc
mov
int
jecxz
xchg
adc
icebp
cmpsb
ds
std
and
ja
scas
lods
sahf
jl
idivb
inc
je
xor
mov
mov
mov
scas
stos
adc
icebp
fnstsw
xor
fwait
mov
sub
stos
icebp
push
or
hlt
pop
sbb
dec
cmp
pop
clc
xor
fdivrs
inc
stc
cltd
cmpsl
pop
nop
in
push
cli
pop
add
scas
mov
mov
add
addr16
adc
lcall
cwtl
push
or
sub
mov
sbb
mov
addb
cmp
test
xor
loopew
cmpb
jmp
cmp
pop
pop
inc
sbb
hlt
push
push
mulb
xchg
in
push
mov
fmul
dec
xor
xor
push
adc
mov
jne
mov
xchg
cmpsb
mov
mov
jns
or
jne
outsl
mov
xchg
jmp
aas
adcl
pop
rorb
jbe
mov
repz
outsb
fcompl
and
cmp
cwtl
jl
mov
loop
xor
mov
les
dec
test
mov
fwait
mov
mov
fs
xchg
cmpsl
popa
jmp
mov
ret
dec
pop
xchg
ret
outsb
add
inc
add
popf
inc
cmp
orb
mov
mov
push
inc
repnz
sub
test
sbb
rcll
dec
add
data16
ror
lcall
push
jns
xchg
xchg
imul
xor
pop
arpl
testb
sub
out
xor
mov
add
dec
push
lods
push
jp
cmc
mov
lcall
and
les
pushf
inc
mov
test
pop
adc
inc
and
lea
in
lret
out
mov
jl
xor
in
dec
repnz
adc
inc
bsr
sub
in
add
mov
std
dec
inc
pushf
mulb
js
mov
shll
xor
sbb
inc
push
sbb
aad
inc
add
outsw
add
mov
test
cmp
outsb
pop
testb
mov
lahf
cmpsb
adc
cmpsl
mov
mov
add
xchg
or
lods
xchg
into
xchg
push
sbb
popf
shlb
aad
aaa
jg
jnp
inc
ja
scas
scas
jmp
xchg
xor
mov
adc
push
mov
inc
sub
enter
adc
pop
inc
jp
cmp
cmpsl
clc
add
mov
pop
es
mov
into
add
sbb
adc
sbb
push
movsb
je
cmp
in
jge
jbe
insb
push
mov
aas
neg
mov
mov
adc
sbb
dec
insb
mov
pop
jno
mov
lock
in
and
mov
movsl
jns
jecxz
sbb
repnz
mov
js
stos
enter
push
jg
scas
stos
mov
repz
imul
xchg
ror
push
or
shll
sub
pop
into
mov
je
in
mov
jne
shlb
call
dec
sbb
lock
xchg
scas
and
pusha
jp
adc
lods
mov
scas
lods
es
lahf
and
es
push
mov
dec
ss
xchg
mov
lods
xchg
jne
xor
mov
cmp
out
jg
inc
es
aam
sub
popfw
cmp
pop
std
mov
xor
and
jns
sub
cwtl
sub
iret
jmp
dec
cmc
push
mov
cld
arpl
sub
into
icebp
ja
es
stos
push
push
iret
xchg
xchg
lret
test
test
dec
or
mov
push
sbb
cmp
movsb
in
mov
inc
jns
push
dec
sahf
sub
mov
add
push
sub
sub
mov
lds
inc
es
mov
push
adc
add
add
mov
mov
das
xor
sbb
push
mul
adc
and
dec
cmp
xorl
repnz
stc
sub
stos
push
push
out
xchg
mov
orb
add
cmp
jb
dec
cwtl
push
out
push
jg
adc
out
xchg
sub
sbb
stos
mov
add
sbb
xor
add
out
or
add
push
rcrl
sub
or
faddl
xchg
sarb
cld
pop
pop
xor
inc
dec
loope
pusha
outsl
sub
pusha
dec
or
mov
push
movsb
inc
test
mov
inc
sbb
mov
cmp
popf
adc
movsl
dec
dec
inc
stc
push
out
std
cmp
mov
nop
ficoml
inc
sbb
fs
xor
imul
dec
cmpsl
jbe
sbb
je
xor
mov
jno
stos
inc
cld
adc
or
adc
jle
mov
leave
lea
push
arpl
jae
push
out
cmp
insl
push
xchg
das
ds
aam
inc
and
mov
xor
adc
rcrb
outsl
mov
push
jle
mov
lahf
das
rol
pop
shll
mov
icebp
push
ret
scas
test
mov
test
ss
mov
push
incl
dec
adcl
dec
and
inc
fldt
dec
xchg
jo
mov
ds
mov
repnz
arpl
and
cmpb
cmpsl
sub
dec
jle
cmp
int
sub
adc
out
dec
pop
cmpsb
jbe
xchg
cltd
popa
jmp
rolb
or
hlt
cmc
popa
stc
mov
data16
sub
pop
push
stc
int3
notb
sbb
inc
imul
fdiv
cli
fistps
aad
bnd
cmp
adc
mov
mov
or
stos
inc
pop
mov
pop
xchg
roll
lcall
or
mov
gs
mov
js
inc
and
sbb
add
movsl
sti
xchg
rclb
inc
pop
pusha
jl
pop
sti
mov
and
cli
dec
pop
lods
xchg
ss
add
pushf
dec
fistl
pop
icebp
sahf
mov
sbb
scas
xchg
in
adc
mov
outsb
scas
mov
jns
pop
jns
jo
adc
imul
jmp
out
jbe
add
gs
sbb
cs
xor
mov
repz
mov
jmp
or
cmc
pushf
jo
pop
xchg
mov
cmp
addl
in
adc
dec
xchg
mov
test
cs
dec
aad
inc
xchg
inc
lods
xchg
and
jnp
mov
loop
adc
mov
xlat
fsubrl
jl
mov
icebp
mov
inc
cmpsb
mov
imul
in
je
test
adc
push
pop
hlt
cmp
and
addr16
cmpsb
adcl
sbb
cmp
cli
in
sbb
movsb
sub
mov
sub
and
pop
mov
jae
inc
cmpsb
sahf
add
movsl
cmp
iret
push
ljmp
jg
sub
adc
jno
stos
js
sbb
sbb
adc
das
movsl
and
popa
add
inc
xor
insb
jmp
stos
inc
inc
jge
and
inc
push
pushf
jb
into
pop
mov
imul
inc
hlt
xchg
scas
mov
xchg
jp
call
dec
ret
mov
push
adc
sbb
jo
cmp
xchg
or
inc
js
adcb
add
jae
in
xor
jecxz
clc
and
les
mov
push
mov
add
jbe
loope
out
stc
xor
scas
insl
aaa
bnd
cmpsb
inc
mov
lds
out
roll
mov
outsb
xlat
push
movl
add
sbb
lcall
stos
push
outsl
sub
scas
cmp
add
bndstx
xchg
add
xor
sbbb
hlt
ss
inc
jnp
andl
fadd
add
mov
nop
or
push
inc
clc
mov
mov
stos
sub
jb
jnp
into
dec
push
mov
fcos
pop
fistpll
push
rorl
pusha
inc
or
jae
ret
pop
sbb
xchg
push
jl
inc
sbb
push
mov
xor
icebp
lret
push
jns
xor
xchg
mov
clc
xchg
aaa
das
addr16
mov
add
addr16
mov
cmp
add
mov
jne
and
xchg
mov
xor
lock
imul
stos
cs
ljmp
mov
or
ja
or
xchg
movsl
decl
mov
jle
mov
enter
inc
out
inc
mov
out
pop
lea
pop
pop
cmp
repz
inc
cs
push
ret
fidivs
adc
push
cmpsb
add
stos
aaa
xor
and
cwtl
imul
jns
mov
mul
mov
jns
cmpsb
sbb
mov
enter
sub
popf
mov
adc
or
cld
jmp
fldt
pop
and
loope
lahf
jne
jp
cld
imulb
lahf
cli
add
das
ja
fnstenv
rorb
inc
in
ss
and
mov
clc
repnz
xchg
mov
ret
sub
mov
ljmp
mov
aad
cmp
xor
xchg
mov
mov
push
ljmp
sbb
jmp
out
fmuls
inc
insl
jmp
aad
repz
fistpl
pusha
shrb
shll
int
repnz
or
out
or
and
add
mov
cmp
adc
data16
add
pop
xchg
call
jb
jnp
and
lock
faddl
push
shll
outsb
dec
inc
or
lods
or
push
cli
insl
push
push
adc
insl
or
daa
mov
sbb
add
aad
cmp
pop
ljmp
fdiv
push
add
lods
clc
mov
loopne
in
ret
push
test
cli
ds
sbbb
rorb
fistps
jne
xchg
cltd
aam
icebp
mov
dec
inc
outsb
test
cwtl
out
popa
add
je
insl
dec
sbb
xchg
das
mov
fbstp
mov
pushf
sbb
push
xchg
mov
lods
inc
andb
mov
test
call
mov
fiadds
std
inc
mov
pop
call
sub
jae
sbb
or
adc
clc
cli
xor
fwait
and
idiv
iret
add
sbb
pop
mov
sub
adc
popa
jmp
imul
loop
push
sbb
imul
inc
push
subl
push
and
add
outsb
adc
pcmpgtb
mov
pop
mov
sbbl
mov
out
sub
insl
pop
pop
adc
add
imul
lret
mov
sahf
std
iret
adc
in
scas
fldt
push
xchg
jl
cmpsb
mov
cwtl
push
and
cmpsl
mov
dec
cmpsb
ja
ds
mov
ja
ljmp
push
xchg
or
and
loop
negb
mov
mov
fisubrl
xor
adc
cmpb
and
mov
adc
sbb
jbe
test
inc
rcrb
mov
repz
and
lret
gs
loope
dec
aas
dec
inc
out
jge
cmpsl
push
filds
inc
scas
add
dec
sti
xlat
scas
xor
rorl
les
sub
adc
and
maskmovq
imull
mov
pop
push
ja
mov
push
adc
std
pop
sbb
adc
lahf
stc
xchg
scas
mov
lahf
add
adc
sarb
sbb
fsubrs
xchg
adc
adc
pushf
in
lods
or
sar
int
mov
mov
mov
sbb
adc
shrb
shrl
outsl
jbe
pop
das
call
mov
jae
adc
testl
mov
lods
cmpsl
aaa
lahf
or
outsb
das
divl
imul
aaa
add
pop
lcall
mov
or
hlt
or
aam
jo
call
add
jbe
cwtl
test
icebp
dec
nop
test
icebp
xor
or
push
cmp
sbb
loope
xor
sub
jbe
mov
fidivl
leave
pop
jae
mov
xchg
cltd
jnp
test
pop
push
ljmp
or
adc
movsl
or
adc
jnp
mov
in
lret
xchg
cld
gs
cmc
jne
inc
pop
jbe
jge
push
insb
sti
and
stos
rorl
cs
lret
je
in
push
je
mov
ret
sbb
jno
mov
adc
xor
scas
cmp
push
stos
dec
push
out
sub
cli
inc
mov
mov
fstpl
push
dec
or
insb
jbe
pop
movsb
sbb
enter
push
imul
lret
test
scas
add
mov
es
sub
adcl
adc
adcl
sahf
aad
cwtl
sbb
sub
or
jbe
sbb
xor
aad
sub
push
bound
lcall
cmp
sbb
mov
mov
mov
out
and
and
popa
push
dec
rcl
xor
jne
xor
inc
gs
mov
mov
rcll
fucomi
sub
mov
mov
jmp
call
inc
push
cmpsb
das
out
mov
mov
cwtl
lods
rclb
je
inc
cmp
sbb
pop
and
push
pop
cli
mov
jecxz
andl
andb
pop
mov
fwait
push
jl
cwtl
out
pop
and
fwait
mov
inc
lret
jno
add
or
mov
loopne
cmpsb
cmpb
popa
pop
sbb
out
int3
dec
ja
inc
inc
mov
cld
es
cs
push
adc
xchg
imul
cmp
jo
movsl
inc
mov
movsl
jb
mov
xor
mov
out
ffreep
movsl
and
lea
fnstenv
fists
push
inc
popa
mov
pop
leave
jmp
sti
fistl
fwait
cs
cs
pop
test
jne
std
mov
mov
test
cmpsb
add
pop
add
leave
data16
leave
mov
or
fmull
pop
cli
mov
lret
imulb
call
out
xor
aam
out
or
cli
jbe
cmp
addr16
or
adc
pop
xchg
lret
fmuls
jo
popf
mov
cwtl
jb
movsb
jmp
pop
push
xor
jo
mov
adc
push
xor
fcoml
inc
cmpsb
or
jp
xor
cmc
pop
xchg
mov
mov
cli
cmp
sub
orl
and
data16
stos
mov
sar
pop
xlat
dec
iret
cmp
dec
dec
fcomps
jne
adc
mov
push
fistl
fists
xchg
pop
add
and
xchg
ffree
sahf
dec
push
sub
or
and
scas
out
fcompl
int3
add
out
cli
xor
inc
mov
inc
and
jo
fadds
or
and
adc
in
addr16
mov
stos
jae
cmp
push
pop
sti
pop
mov
inc
inc
mov
in
push
lahf
jp
jbe
data16
pop
pop
aaa
jl
cmpsl
xchg
arpl
mov
pop
push
pop
xchg
in
push
xchg
leave
mov
jns
xchg
cltd
sub
hlt
cmp
stos
adc
aaa
mov
mov
iret
lods
cmp
xor
mov
mov
enter
lea
popa
in
jge
cmp
je
push
pushf
push
aad
les
dec
std
mov
cmp
out
or
es
jecxz
inc
xor
fcomps
and
sub
cld
dec
push
push
insb
xlat
jl
adc
push
popf
and
and
aas
shrl
xchg
pop
pop
je,pt
loop
xchg
cmp
daa
addr16
jmp
push
mov
jg
mov
pusha
jno
mov
frstor
fisttpll
jns
cmpsb
bound
nop
les
and
pop
pop
jae
push
and
scas
test
leave
data16
cmpb
pop
mov
in
inc
outsl
cmp
pop
xor
cwtl
fistps
cmpl
sbb
mov
int3
dec
or
mov
xor
mov
lahf
dec
mov
xorb
inc
stc
es
xlat
stos
lds
inc
xchg
mov
cmp
xor
in
aas
inc
ds
xchg
mov
adc
std
jns
jo
call
adc
idivl
mov
repnz
mov
mov
rol
stos
aas
xor
push
sbb
sub
add
mov
mov
mov
pop
push
pop
jns
add
pop
dec
sub
jns
ljmp
adc
data16
out
daa
mov
fisttps
js
and
mov
cmp
sub
pop
xor
jg
mov
ficoml
sub
sahf
fisubrl
xchg
inc
fisubl
popa
icebp
out
in
jns
jecxz
mov
xlat
mov
daa
mov
mov
rcrb
pop
int
int3
or
test
add
out
icebp
rorl
jecxz
popa
scas
loopne
jl
pop
pushf
ret
mov
out
xchg
inc
jae
push
out
popf
rclb
push
sub
mov
pop
or
rcrb
mov
mov
mov
popa
leave
icebp
xchg
stos
push
cld
lods
push
jo
push
jl
jecxz
lahf
repnz
and
mov
repnz
fs
out
into
ficomps
repnz
pop
pop
icebp
int3
clc
cwtl
js
dec
imul
icebp
or
mov
push
sbb
xchg
xchg
inc
jmp
ds
pop
ss
sub
inc
ret
call
loopne
pop
je
and
enter
orb
push
in
fdivs
add
lds
std
in
sub
popl
cmp
and
xor
jmp
negb
loop
arpl
mov
mov
out
xlat
ficomps
pop
ja
xchg
push
inc
adc
mov
shl
mov
test
cmp
movsl
mov
xchg
jns
cmp
adc
jo
push
stc
mov
mov
pop
xchg
data16
mov
in
stos
lcallw
imul
popf
out
notb
sbb
icebp
pop
mov
jnp
test
xchg
cmp
add
mov
int
inc
sub
jns
mov
xchg
pushf
pushf
mov
sub
adc
cwtl
imul
mov
pop
push
subb
mov
aas
adc
push
lahf
and
push
push
lods
mov
into
push
test
subb
cltd
das
xor
mov
loop
shl
jnp
xchg
icebp
cld
pop
pushl
add
add
or
mov
insl
or
fstpl
mov
repnz
imul
push
imul
negl
ds
mov
mov
ja
int3
mov
cltd
push
jl
xor
mov
cltd
push
mov
pop
push
mov
ss
mov
xor
pop
bound
or
and
jg
ds
xor
inc
sub
xchg
mov
adc
in
adc
sub
shlb
out
sub
repz
jecxz
pop
mov
add
es
xchg
xor
or
into
popa
iret
fsubl
inc
inc
movsl
sbb
add
push
xchg
cmp
out
mov
sbb
outsb
es
inc
shr
sti
inc
mov
insb
imul
addr16
ret
sub
jbe
lret
cwtl
xchg
pop
dec
mov
xor
lods
jle
js
and
scas
cmp
or
cmp
inc
rorl
and
cmp
pop
ss
adc
sbb
dec
mov
sub
inc
xchg
push
jp
cmp
cs
leave
mov
rcll
test
jmp
xor
push
std
xchg
pop
push
mov
push
jecxz
aas
mov
jl
std
fwait
subb
test
push
fcoml
jno
stos
hlt
test
ss
jns
lcall
insl
cmp
inc
push
xchg
sti
sbb
test
loopne
rol
jae
mov
mov
cltd
sbb
xor
push
pushf
mov
jbe
es
insl
sbb
xchg
push
cmp
xchg
cmp
push
popa
xchg
inc
je
inc
jp
or
mov
mov
popf
push
out
fldt
dec
gs
aam
cmp
and
mov
sub
pusha
cmpl
sbb
cs
rcrb
add
hlt
jae
adc
movsl
in
xor
sub
out
lea
out
cmp
pop
sub
scas
test
popa
aad
je
inc
popf
mov
jns
shll
xchg
mov
loop
ret
and
and
cld
sbbb
int3
dec
les
or
shrb
lea
xchg
or
sysenter
or
sub
aas
sbb
pushf
or
shlb
mov
clc
push
in
cmpsb
jp
mov
add
push
lret
stos
xor
jmp
pop
in
inc
jae
fidivrs
inc
or
jne
int3
subb
outsb
fst
and
mov
repz
sub
push
push
push
pop
push
lods
fstps
or
adc
sub
jno
jle
adc
sti
lret
xchg
addr16
repz
pop
sti
ljmp
jmp
and
dec
pop
push
jle
mov
bound
xchg
ljmp
scas
test
ja
and
call
sbb
pop
fwait
imull
jb
dec
push
ret
jg
sub
jae
mov
and
push
js
insl
pop
in
push
out
daa
xchg
inc
add
fs
mov
pop
or
sar
nop
dec
jl
ss
cmp
fimuls
push
cmp
js
mov
test
add
inc
lret
or
pop
cmp
push
test
iret
dec
std
jmp
inc
sbb
in
shlb
xchg
int
fistpll
push
push
inc
test
push
xor
fsubrs
jbe
inc
add
cmp
mov
sub
pop
and
xor
dec
movsl
lcall
cltd
adc
in
cmp
push
jns
xchg
pop
mov
pushf
and
inc
int3
mov
std
jge
xor
dec
mov
adc
and
push
pop
cmpb
jbe
sub
lahf
daa
sbb
fstps
inc
dec
mov
loop
orb
cmp
mov
mov
sub
cmp
sub
fiadds
fstpt
cltd
mov
popf
pop
out
push
adc
insl
cld
fnop
fidivrs
movsb
lret
sbb
test
icebp
jnp
sub
in
call
pop
fistpll
aad
sub
pop
or
test
inc
mov
jb
jmp
lds
pop
iret
jg
dec
and
lods
add
repz
and
in
in
fimuls
dec
pop
inc
or
cmp
in
cmp
ljmp
cmp
scas
sub
adc
mov
int
push
loope
jne
add
adc
fisubrl
movsl
inc
sahf
or
pop
loopne
or
lcall
xor
loopne
sub
mov
push
out
bnd
dec
mov
add
and
icebp
jnp,pt
shll
pop
and
jl
adc
popf
inc
pop
fucomip
fldcw
pop
adc
xor
aas
mov
mov
imul
inc
repz
lret
divb
hlt
jmp
daa
leave
adc
std
ret
mov
jmp
lret
push
sub
dec
mov
into
add
cmc
loope
inc
lods
cld
js
xchg
inc
sbb
fwait
shrb
rcrb
cmp
xor
insl
pop
cmp
bound
and
dec
pusha
pop
sti
lods
rclb
sahf
mov
sbb
lahf
add
out
inc
jne
orb
push
cli
fmull
sub
pusha
jnp
movsl
push
push
inc
add
xor
test
adc
xchg
cmp
iret
xlat
stc
xor
push
movsb
mov
cld
cmp
inc
nop
mov
mov
dec
sahf
sub
fisttpl
leave
cli
xchg
cmc
jae
xchg
cmp
adc
stos
ds
mov
add
sub
mov
push
imul
popa
push
or
pop
inc
mov
daa
fadd
movsb
and
adc
clc
dec
popa
or
dec
and
mov
popa
adc
ljmp
inc
in
lods
addr16
add
push
mov
mov
clc
lcall
add
xor
dec
out
popa
xor
push
adc
and
notb
cmpsl
pop
arpl
leave
ss
inc
mov
sbb
jne
xor
jne
xchg
pop
idivl
int3
dec
sbb
outsb
cli
mov
cwtl
enter
xchg
decb
push
cmpsl
clc
pusha
mov
stos
out
jmp
js
rorb
xchg
out
out
and
inc
es
cmp
call
mov
ss
sub
lcall
pop
hlt
fstpl
mov
rorl
cmp
cmc
mov
es
fwait
cltd
pop
sti
and
push
xchg
pop
arpl
push
sbb
notb
push
add
and
jg
sbb
add
pop
ret
adc
ss
clc
icebp
cmc
sub
sahf
fnstsw
inc
repnz
dec
jp
add
dec
adc
clc
cmpsl
cmp
lahf
mov
lcall
push
mov
and
insb
rorb
adc
and
in
or
xor
leave
mov
js
sbb
outsb
cmp
sbb
aaa
std
dec
mov
in
test
add
shl
es
sbb
std
mov
mov
jns
movsb
add
adc
jmp
imul
addb
leave
mov
mov
mov
in
insb
das
inc
mov
cltd
mov
bnd
jp
inc
and
fs
loopne
jp
shrl
out
adc
pusha
inc
int3
jmp
std
mov
jb
or
leave
shl
loop
inc
jl
outsl
or
sbb
inc
mov
pushf
sbb
push
inc
not
rorl
int
lds
xor
sarb
add
sbb
clc
mov
sub
movb
ss
sbb
add
xchg
leave
out
loop
inc
mov
setl
pop
leave
pop
mov
aas
push
inc
jo
and
cld
addb
cmp
pushf
or
xlat
repz
add
and
xor
jne
in
mov
sbb
lahf
in
fdivr
cli
rcll
je
es
jp
jle
fisubs
xor
jmp
loopne
popa
int3
sbb
daa
je
xor
sbb
arpl
arpl
fidivs
movsb
ficoml
in
xlat
scas
ficomps
mov
dec
cmpsb
in
lahf
lock
test
or
jne
loopne
mov
idivb
pop
popa
or
adc
imul
aas
push
sub
mov
sub
mov
jecxz
stos
popf
sub
movsl
lods
popf
cwtl
push
cwtl
cmp
lahf
mov
pushaw
xor
cli
cmp
cmpsb
add
mov
gs
sub
fisttpll
unpcklps
adc
cli
mov
mov
mov
sub
cwtl
das
push
jno
stos
test
sahf
push
hlt
pop
je
into
icebp
dec
arpl
out
cld
in
stos
jg
mov
push
out
pshufw
ljmp
jae
push
push
hlt
mov
js
aas
ds
or
cmp
das
hlt
mov
push
les
adc
cmpsl
clc
gs
adc
sbb
jne
jg
jmp
jecxz
mov
cmp
movsl
xor
cmp
mov
repnz
xchg
adc
xor
sub
fildl
insl
and
add
lcall
sub
and
and
sub
mov
data16
xchg
cmp
and
pop
mov
xchg
adc
or
jmp
out
jp
aaa
jmp
mov
ja
inc
and
test
sbb
daa
lcall
test
push
jb
imull
cltd
in
push
xor
xorb
sbb
movsl
nop
sbb
pop
add
subl
jl
inc
es
lcall
jne
ja
inc
jb
push
cmp
or
imul
les
mov
scas
dec
jb
push
xchg
das
push
fadds
test
and
rorl
out
adc
push
in
repz
inc
in
adc
mov
adc
in
fwait
aas
call
insb
cld
popa
pop
inc
decb
clc
lds
jp
int
sbb
rorb
outsl
int
call
cmp
imul
dec
pop
mov
fnstenv
andb
adc
xor
pop
pop
lds
pusha
stc
out
pop
jmp
push
cmp
xor
inc
les
ret
mov
mov
mov
stc
out
std
test
inc
and
cld
out
and
call
fisubl
ss
iret
into
adc
sarb
pop
shld
mov
sbb
jo
std
pushf
xchg
adc
aad
xor
mov
fistps
sub
cld
push
jp
enter
dec
mov
pop
test
xchg
outsl
test
stos
clc
popa
addr16
negl
add
mov
or
adc
mov
loope
outsb
cld
xchg
or
into
mov
ret
adc
dec
dec
neg
mov
je
or
push
stos
je
jmp
sti
lods
cld
dec
shl
push
leave
das
sbb
outsl
lds
xchg
adc
int3
loopne
cmpsl
cltd
add
dec
rcll
push
fldl
xchg
pushf
push
fs
xor
into
cmp
jl
pop
mov
popf
adc
pop
sahf
lods
movsb
mov
cltd
insb
repz
test
push
cmp
pop
mov
add
push
subb
add
fwait
sbb
dec
mov
or
mov
mov
js
and
or
xchg
aad
adc
mov
or
addl
mov
loop
pop
jns
lods
xchg
imul
cmp
jp
clc
push
mov
scas
ror
fucomip
ret
rcl
adc
gs
sahf
jns
popa
lock
loopne
out
out
pop
inc
push
call
out
popa
cli
pop
movsl
test
add
pop
lds
push
out
pop
dec
mov
push
lahf
jb
xchg
std
sbb
mov
loope
in
mov
and
xchg
imulb
fwait
cmpsb
loopne
xchg
xor
stos
xor
mov
pop
sbb
and
xor
mov
mov
dec
fcmovne
filds
mov
inc
dec
hlt
cmp
xchg
jge
jge
or
mov
addr16
testl
sbb
mov
addr16
jbe
clc
ds
cmp
cld
push
push
jmp
adc
xchg
add
lods
sbb
lahf
ret
les
stos
mov
push
call
pop
jnp
mov
roll
call
pop
popa
mov
jne
ds
repz
mov
pop
mov
sub
scas
test
jnp
mov
orb
leave
mov
data16
iret
dec
or
std
aam
cmp
jo
mov
inc
pop
dec
test
vsqrtpd
add
dec
add
repz
sbb
lea
roll
mov
inc
xor
ret
push
add
push
insl
movsl
dec
iret
jg
inc
aad
adc
clc
mov
pop
and
mov
dec
jo
fcom
pop
add
icebp
mov
rcrb
xor
outsl
or
jo
sbb
or
pop
jb
mov
push
shrl
test
out
adc
cmp
xor
cmpsb
mov
out
mov
call
pop
bound
adc
in
in
adc
xchg
push
lahf
jle
xchg
mov
cs
jae
lods
cmp
mov
xchg
movsb
sbb
mov
ljmp
pop
stos
aaa
and
movups
and
push
cmc
xchg
mov
mov
bound
jns
jge
mov
cld
mov
andl
add
addr16
cmpsl
fildll
hlt
inc
mov
push
test
mov
or
pop
xor
sub
int3
and
adc
fwait
mov
push
rcll
mov
dec
in
add
call
test
js
sar
mov
mov
push
test
das
pop
add
ja
dec
test
hlt
idivb
pushf
stos
jns
bound
dec
push
mov
pop
outsb
push
out
xor
mov
iret
loope
lcall
data16
dec
sbb
pop
xor
xor
dec
sbb
loope
ja
inc
mov
iret
stos
and
in
sbb
mov
mov
adc
mov
js
xor
mov
jae
dec
xchg
mov
outsb
movsb
mov
in
xor
das
mov
fstpl
sub
xlat
repnz
std
cmp
hlt
push
rorb
push
jmp
pop
xlat
push
dec
test
out
hlt
insb
push
or
loope
pushf
push
nop
mov
pop
mov
inc
mov
clc
adc
fwait
pop
push
xor
adc
test
mov
lock
mov
imul
js
repz
inc
add
jmp
cli
mov
jne
pop
fdivs
mov
mov
out
nop
xor
leave
test
sti
and
or
aas
mov
mov
fwait
or
out
shl
push
add
stos
lods
js
outsl
sub
sub
and
arpl
dec
or
nop
mov
outsb
cli
sbb
or
xchg
adc
mov
cmp
xlat
cmp
mov
arpl
in
cli
lret
popf
mov
inc
adc
inc
mov
sub
mov
stos
repnz
pushf
jb
test
and
jmp
fwait
test
and
shlb
adcl
sbb
adc
loope
pop
std
mov
inc
adc
lret
pop
fmuls
imull
jge
cmpsl
sbb
and
sbb
sub
sbb
adc
adc
cli
test
lds
fidivl
sbb
xor
xor
sbb
cltd
pop
aaa
cltd
out
pop
push
xorl
or
rcrb
je
pusha
scas
sbb
xchg
add
shlb
jp
push
sub
mov
pop
or
mov
push
sub
rorl
xchg
dec
jbe
xor
xchg
test
push
mov
jl
mov
ljmp
inc
test
jae
test
mov
aas
shll
imul
shl
cmp
pushl
movsb
xor
xor
lcall
cmc
inc
xchg
mov
push
shrb
subb
test
imul
bound
and
sahf
mov
ja
mov
push
dec
pop
mov
mov
push
pop
movsl
fisttps
sub
mov
stos
int3
inc
sti
xchg
jnp
cwtl
testl
das
loop
jo
mov
push
mov
mov
jg
add
pop
or
cmp
call
test
repnz
dec
push
inc
or
test
mov
pop
pop
insb
inc
aad
stos
pop
pop
push
pushf
adc
mov
push
pop
add
dec
call
imul
cmp
jmp
jo
cld
stc
push
aad
outsb
mov
mov
shl
and
fsts
push
push
push
outsb
cmp
outsb
insb
js
sbb
outsl
add
insb
stos
fsubl
aam
insl
mov
add
ffree
sub
shl
call
adc
mov
aad
repnz
add
ss
lea
aaa
mov
dec
lret
sbb
movsb
xchg
sbb
shrl
cld
dec
lock
test
push
push
scas
cs
test
xchg
aas
pop
and
cld
fiaddl
in
mov
data16
roll
jl
roll
dec
and
es
mov
sahf
and
enter
shrb
fdivrl
jb
xchg
or
lock
lods
arpl
add
add
les
rcl
cmpsl
lods
insb
xor
insb
jb
and
fwait
stc
dec
dec
std
repz
imul
lahf
cmp
and
xor
add
icebp
addr16
out
inc
popf
inc
push
lcall
mov
dec
out
std
mov
xchg
out
outsb
ud0
es
jl
daa
jge
fcompl
jo
in
pop
mov
inc
pop
mov
sbb
int
int3
cmp
cld
pop
xor
shlb
xchg
dec
fidivs
sub
sbb
add
cmpsl
adc
out
add
dec
or
out
adc
cmp
mov
std
rcrb
out
test
xor
fsubs
rorl
lahf
shrd
push
decl
xor
gs
insl
or
imul
int
lea
aas
enter
repnz
xchg
cld
xlat
push
mov
movsl
scas
mov
in
divl
adc
fstl
xchg
xchg
add
or
xor
push
sahf
sbb
stc
mov
mov
aas
pusha
cmp
add
test
add
imul
movsl
sbb
or
das
popa
pushl
cltd
xchg
loop
cmp
fdivrp
xor
into
movsl
add
scas
cmp
push
cmc
clc
dec
fistpll
int3
imul
push
dec
jno
rcl
int
mov
mov
dec
dec
push
int3
filds
out
int3
fs
adc
jl
cmp
fnstcw
mov
jl
mov
push
dec
xchg
xor
lahf
test
andl
cmp
jnp
dec
add
push
sub
xchg
mov
jl
js
adc
add
or
in
int
mov
sub
mov
dec
fs
add
sti
mov
clc
leave
lahf
lock
fcoms
pop
outsb
sub
xchg
ja
add
mov
cmpsl
popa
bound
sbb
in
cmp
out
and
out
je
fnstenv
inc
dec
push
fwait
es
rclb
imul
lcall
dec
push
mov
and
pop
lea
mov
sbb
aas
cmp
sahf
or
pop
pop
sbb
das
mov
loope
dec
sbb
pop
xchg
divb
xchg
xor
mov
ljmp
movsl
mov
jl
mov
mov
add
ja
les
mov
int3
mov
dec
lret
xchg
popf
ficompl
loope
dec
adc
push
pop
pop
jge
jne
ljmp
nop
mov
leave
fucomp
jno
loope
mov
mov
loope
mov
mov
dec
pop
fnstcw
scas
hlt
push
pop
mov
negl
pop
lret
test
lock
mov
mov
movsl
jbe
mov
xlat
xor
xchg
dec
leave
das
push
mov
repz
inc
jb
repnz
xchg
inc
dec
pop
add
in
ss
jge
fistpll
xchg
jmp
push
sbb
inc
leave
inc
movsb
loopne
cmp
ret
rcll
and
and
jb
jns
scas
sbb
xor
pop
mov
sbb
int3
xchg
cmp
fisubrl
pop
imul
fmuls
les
std
mov
xor
cmp
dec
popa
pop
test
lods
mov
lea
push
repz
mov
jno
sbb
imul
imul
adc
loope
mov
xor
aaa
mov
mov
adc
mov
sbb
ret
xchg
sub
mov
shlb
lods
fcomps
or
popa
jecxz
mov
fmul
stc
jle
dec
push
pop
mov
lcall
sub
xchg
pop
pushw
mov
das
xchg
pop
adc
sbbl
or
or
jge
or
inc
add
sub
fbstp
cmp
sub
lock
pop
xchg
lds
inc
mov
xchg
xor
xor
ret
mul
loopne
fisubl
ja
lret
cmp
mov
mov
push
loop
pop
pop
push
aad
shl
jl
insl
add
push
dec
cltd
mov
xor
clc
loopne
xchg
mov
ja
outsl
mov
sbb
ret
rclb
and
movsl
ljmp
addb
pop
test
push
dec
out
jp
addl
insl
jne
add
loope
jne
push
ss
fisubrs
enter
jp
lretw
sahf
out
sub
pop
dec
and
sub
rorl
lods
dec
push
jo
in
lock
pop
divb
insl
or
mov
filds
jns
sub
push
mov
gs
pushfw
shr
fwait
sti
imull
cmp
lods
fiadds
jno
jecxz
adc
sub
lahf
orb
adc
cmp
and
fldenv
pop
popf
push
cmp
cmp
in
mov
pushf
xlat
add
inc
jp
adc
iret
outsl
mov
outsb
cmpsl
or
adc
popa
sub
cli
hlt
arpl
or
mov
lahf
aaa
movsb
fildl
push
pop
add
hlt
stc
push
sbb
cmp
in
push
lods
and
out
and
and
xchg
daa
xchg
movsl
pop
nop
in
popf
test
out
int3
mov
push
and
fiadds
mov
mov
pop
das
or
mov
sbb
mov
enter
add
notb
notl
or
adcl
arpl
xor
jmp
jge
xchg
push
or
or
jns
mov
ds
mov
xor
rorb
popa
mov
arpl
pop
mov
fistpll
fcoms
xchg
adc
loop
sbb
dec
scas
mov
jl,pn
cmp
cmp
out
hlt
or
mov
pusha
mov
aad
sub
cmp
fsubrp
repz
mov
push
or
in
popa
cmpsb
cmpb
sub
mov
jnp
call
and
push
jle
inc
gs
addb
gs
dec
addr16
daa
sti
movsl
push
xor
in
xchg
ljmp
aam
loopne,pn
lcall
pop
rclb
scas
stc
mov
sbb
lcall
mov
adc
loop
jae
mov
add
push
or
dec
add
lahf
mov
fcmove
push
mov
inc
in
out
sub
out
inc
inc
aad
pop
push
stc
std
and
jecxz
xchg
fdivrs
push
outsl
ds
imulw
or
bound
mov
add
add
cltd
lock
inc
mov
pop
scas
xchg
ss
shll
out
jns
test
mov
jne
out
mov
scas
xlat
sbb
sbb
pop
pop
jle
cltd
mov
xchg
popw
mov
mov
inc
pop
jecxz
pusha
adc
fprem
cmovle
cmp
jo
aas
dec
arpl
bound
fidivs
mov
fs
loopne
aam
adc
mov
xchg
enter
jp
or
pop
test
popf
inc
dec
add
add
xor
cmp
imul
and
js
mov
insb
mov
lea
mov
in
push
dec
scas
add
and
cmp
sbb
pop
dec
mov
push
rorb
pcmpgtb
xchg
fs
add
movsb
stos
pop
loopne
ljmp
xchg
mov
jl
cs
xchg
and
fisttps
jge
loop
xor
mov
test
fdivrl
dec
push
cmp
pop
cmp
adc
adc
arpl
in
les
dec
jae
xchg
mov
sbb
sbbb
jle
jne
or
addr16
cmp
shlb
test
mov
lds
mov
pop
pop
sub
dec
xor
mov
adc
sbb
unpckhps
shr
popf
mov
sbb
aad
cmp
js
jb
jne
pop
and
xor
outsb
pop
dec
aaa
push
mov
fnstcw
sub
push
inc
pop
out
imul
out
out
out
movsl
fwait
pop
and
sbb
sbb
and
mov
insl
adc
fistpll
xor
add
add
or
jns
or
lock
test
mov
movsl
add
inc
mov
adc
test
inc
nop
sbb
pop
adc
addl
adc
dec
mov
dec
mov
nop
icebp
or
outsb
cs
stos
int
out
cmp
gs
inc
fsubs
add
adc
lds
or
mov
xchg
out
pop
ret
jl
mov
aam
or
fimuls
push
mov
imul
push
jae
mov
ss
lcall
mov
lods
xchg
inc
and
int
cli
xchg
wrmsr
mov
shrd
into
mov
cmp
sub
xchg
stos
js
pop
and
inc
and
sub
lock
mov
push
mov
mov
pop
jno
mov
imul
fiaddl
shlb
fdivrs
sbb
add
xchg
popf
sub
aaa
xor
jo
pushf
jno
insb
mov
movsl
rcl
cmp
ja
movsb
testb
es
push
call
pop
pop
fdiv
inc
in
cld
out
loop
push
shlb
pop
lods
lods
dec
dec
mov
inc
pop
jecxz
push
mov
ljmp
xchg
jg
sbb
pop
fldcw
or
imul
ret
fmuls
or
cld
lods
outsb
mov
pop
or
xor
test
and
test
je
xchg
outsl
shlb
psrld
popa
mov
mov
cwtl
cmp
cmpsl
dec
xchg
mov
shll
in
mov
adc
xor
cld
and
mov
sub
mov
test
or
fwait
dec
inc
popf
or
jbe
push
jmp
iret
sub
sbb
pop
push
in
in
mov
or
or
cld
shll
lcall
mov
sub
leave
xchg
push
xor
inc
bound
push
inc
jmp
stos
clc
test
out
or
es
xor
rcll
movsb
sbb
fildl
ret
stos
cmp
jle
imul
pop
mov
dec
cmpsb
jo
pop
pop
dec
pusha
addps
dec
or
insl
faddl
sub
pusha
stos
or
dec
in
int3
cmc
pop
mov
test
sbb
ja
into
sub
cmc
adc
push
jp
dec
push
jmp
mov
test
out
sub
inc
test
inc
les
loop
bound
arpl
je
sub
lds
jnp
loop
sub
push
clc
test
movsl
push
sub
mov
mov
dec
repnz
and
mov
mov
ret
and
insl
into
dec
into
fwait
mov
cmp
adc
outsl
es
dec
mov
lea
push
sub
or
push
lret
mov
mov
or
decb
cmpl
test
cmpsb
in
pop
xchg
push
adc
fstp
jecxz
sbb
mov
mov
mov
cmp
mov
mov
or
jnp
mov
pop
mov
sub
push
jno
pop
cmp
in
cmp
scas
arpl
inc
dec
repz
popa
and
push
les
call
fadds
xchg
imul
cmpsb
pushf
out
std
inc
push
push
lock
pop
enter
arpl
notl
sub
mov
push
fldl2t
lret
int
out
push
clc
fdivl
xchg
sbb
sub
pop
mov
rorb
pop
mov
loopne
ret
idiv
xor
imul
cmc
out
jo
idivl
dec
lret
sub
hlt
pushf
jb
rcrb
je
sub
push
test
insl
out
negl
and
fs
dec
pop
adc
dec
cmp
data16
mov
jecxz
cmp
movsl
mov
xchg
pop
push
ret
mov
out
xchg
insl
int3
mov
dec
cmp
pop
mov
popf
pop
lock
aad
jecxz
pop
push
cmpb
movsb
xchg
les
or
xchg
mov
imul
push
pushf
pop
stos
xchg
jg
pop
xchg
imul
cs
pop
mov
push
xchg
lahf
pop
popf
mulb
mov
push
rclb
sti
add
push
or
imul
pop
daa
iret
out
add
inc
test
daa
and
jg
aam
jmp
add
in
cmp
dec
pop
cmc
pop
loope
push
cli
xchg
xchg
xchg
test
lret
and
clc
hlt
push
sbb
arpl
xchg
sbb
xor
mov
inc
mov
jne
cltd
ds
aaa
or
inc
or
xchg
mov
inc
sub
rolb
das
mov
and
outsl
loop
mov
push
and
jg
mov
jle
lods
mov
sbb
jmp
push
ja
addr16
inc
mov
pusha
pop
shll
out
push
jle
lret
dec
push
bound
and
xchg
mov
add
adc
test
inc
cld
std
aad
adc
loop
adc
sbb
or
sahf
int
mov
sub
xchg
sub
fcmovnu
inc
cmp
pop
scas
or
add
add
sbb
insb
dec
jp
pop
jne
adc
popa
inc
mov
popf
cmc
push
dec
push
or
mov
and
dec
xchg
xchg
out
xchg
ret
lahf
dec
aam
cltd
jp
adc
sti
rcl
inc
pop
sub
jp
push
clc
movsl
pop
sbb
clc
xor
xchg
jae
add
adc
fnsave
xchg
iret
call
mov
push
into
dec
rol
sub
subb
dec
cmp
iret
xor
inc
jbe
mov
jg
pop
pop
dec
add
in
rorl
xor
or
int3
fwait
mov
lahf
aam
mov
psadbw
ret
test
js
popf
cltd
jmp
jecxz
imul
fsubr
jns
les
xor
cltd
loop
inc
std
xchg
xor
enter
mov
mov
ret
fsubl
flds
or
inc
aam
into
mov
loopne
sbb
jge
jle
adc
cmp
adc
pop
aas
loopne
inc
xlat
pop
sub
sub
lods
inc
mov
push
pushf
cmp
xchg
push
sbbl
out
xor
addr16
test
jmp
out
push
call
hlt
hlt
inc
gs
les
lret
adc
xor
inc
mov
mov
inc
pop
fstpl
mov
outsl
inc
or
nop
cmp
add
aad
adc
xor
stc
mov
cmp
loope
cltd
push
loopne
jp
jae
inc
adc
dec
mov
fisubl
cmp
xchg
or
jg
xchg
cmp
mov
xchg
cmc
cmp
cmpsl
out
repnz
cmp
lahf
mov
testl
jg
xor
dec
dec
sub
pop
outsb
stc
or
scas
stc
jmp
std
cwtl
loop
subl
and
cwtl
cmc
dec
in
dec
ret
mov
push
test
lods
xor
adc
sub
inc
or
test
push
test
aam
stos
test
iret
push
add
or
lock
cmp
and
jmp
cmpsl
mov
mov
cmp
addr16
dec
aad
daa
pop
ret
pop
lcall
xor
addr16
sbb
hlt
lret
push
jns
sub
mov
and
pop
xchg
fcmovne
cmp
jns
adc
xlat
fbld
add
mov
jge
xorl
dec
jbe
outsl
int3
rcrb
pop
lret
iret
pushl
jnp
negl
cmp
dec
sub
sahf
dec
pop
lcall
or
mov
dec
jecxz
adc
imul
inc
fidivs
dec
loop
sbb
stc
add
mov
mov
sub
dec
mov
mov
sbb
clts
orl
pop
or
stos
mov
mov
js
cmpsl
adc
loopne
push
cwtl
insb
decl
xor
cld
test
jp
inc
mov
jae
stc
mov
xchg
movsb
inc
mov
scas
lcall
jae
add
loope
jne
push
scas
jp
in
sbb
lahf
adc
mov
jl,pn
movl
movsl
or
into
les
mov
push
pop
movd
mov
push
dec
push
popf
cmp
xor
bound
mov
fistpl
mov
or
push
xchg
repz
out
pop
imul
scas
push
jp
jno
xchg
inc
or
sbb
lret
xchg
cmpsl
sahf
xchg
pop
mov
aas
test
inc
inc
mov
nop
cmp
gs
mov
add
adc
add
add
sbb
cmpb
cmp
ja
jmp
mov
pushf
jp
pushl
fnstcw
icebp
fs
jb
inc
xchg
outsl
or
xchg
cld
mov
mov
imul
pop
xor
jp
jo
lret
push
jmp
arpl
imulb
daa
je
std
and
lods
lock
pop
xchg
int3
xor
js
mov
cli
mov
xchg
mov
arpl
je
fcos
in
out
in
sbb
adc
nop
in
sub
je
push
add
daa
ljmp
add
push
repnz
outsb
out
jb
and
loop
jp
mov
pop
mov
add
xchg
leave
xchg
je
sbb
cmp
lods
lcall
and
push
fstpt
adc
ret
jno
push
cmpsb
xor
adc
cmp
xor
add
fists
mulb
sub
aam
jmp
xor
ret
xchg
aam
jns
shlb
ret
fs
xor
addr16
sub
and
cmp
mov
and
jb
mov
daa
stos
cmp
divl
adc
or
inc
mov
xor
jp
imul
push
pop
push
bound
int3
ds
add
push
xchg
cltd
cld
push
mov
nop
push
test
test
xor
xor
inc
xor
jns
push
sub
xchg
dec
xchg
inc
outsl
fisttps
and
clc
syscall
inc
in
push
lret
aad
lods
xor
insl
sbb
das
and
jae
jl
xchg
lods
test
lea
repz
push
xor
pop
popa
push
push
loopne
lret
aaa
xor
pcmpeqb
xor
push
fadds
lahf
xchg
sti
sti
mov
loope
stos
or
lds
faddl
stc
pop
xor
cmpsl
cmc
xor
cmp
push
imul
cmpsl
cmp
mov
dec
cmpsb
stc
xor
pop
imul
das
popl
test
push
jb
pushf
dec
pushf
pusha
inc
sarb
hlt
mov
cmp
cmp
fidivrs
dec
and
or
outsl
jbe
and
test
pushf
xor
sub
ds
xchg
sbb
lds
cmp
or
adc
jo
xchg
jecxz
aam
int3
out
fidivrs
aam
test
push
shr
repz
mov
outsl
lods
xchg
sbb
into
mov
inc
fdivrs
jge
sub
in
scas
lds
adc
or
inc
arpl
imul
xchg
xchg
idivb
push
scas
lret
mov
fwait
jmp
bound
ljmp
jge
lods
mov
push
mov
pushf
cltd
lea
inc
push
xchg
fimuls
out
mov
xor
xor
mov
pushl
inc
rclb
mov
je
sub
loopne
das
icebp
rcll
pop
hlt
jl
lcall
sti
test
cltd
cmpsl
jecxz
dec
mov
repz
out
or
push
xor
xor
lcall
movb
les
stos
ret
add
stos
xchg
testb
cli
sub
rcr
xor
sub
popf
xlat
into
fisubs
rcrl
or
hlt
add
sti
push
inc
inc
lret
dec
ret
xchg
js
rcr
aam
adc
inc
fists
sub
pop
inc
xor
adc
sbb
test
rcrl
dec
push
xor
cmp
and
je
adc
sub
iret
inc
clc
sbb
xchg
loop
inc
dec
xchg
inc
jo
lods
test
push
clc
andps
jecxz
xor
xchg
outsl
cwtl
shll
jae
fs
jp
aas
mov
inc
dec
lcall
lret
adc
inc
mov
sub
imul
mov
add
fldcw
lahf
dec
pushf
cmp
push
lods
xorl
mov
cli
jg
out
data16
push
xchg
dec
pop
pop
pusha
mov
and
movq
mov
cmp
subl
or
cld
push
jno
pop
xor
test
jmp
and
shl
rcr
mov
adc
and
leave
lret
adc
in
fsubs
mov
cltd
lods
loopne
inc
dec
inc
hlt
xor
ljmp
jmp
push
inc
ss
cmp
mov
outsb
aaa
jl
sbb
cli
jecxz
and
popa
fstps
mov
ret
repnz
movsb
add
mov
pop
outsb
test
sbb
jno
dec
cmp
call
cmp
xchg
test
repz
adc
jl
inc
imul
pusha
xor
popa
stos
fimuls
jge
andl
cmp
not
jbe
jae
lock
dec
push
dec
xor
mov
sub
sarl
test
xchg
sti
xchg
dec
push
add
jns
shrb
dec
and
pushf
push
sbb
xlat
jp
pusha
jmp
adc
dec
in
cmp
push
sarb
or
and
mov
pop
adc
and
xchg
cmp
in
divl
or
cmp
fldl
and
mov
mov
fimull
into
sbb
jecxz
sbb
in
jg
cli
popa
ficomps
adc
pop
mov
cli
jbe
aas
jnp
neg
or
mov
test
inc
ret
pop
pop
ss
inc
mov
sub
sub
lock
out
mov
pop
cmp
call
cmp
pop
cmpsb
movsb
jmp
mov
mov
mov
lea
fstps
iret
popf
scas
das
mov
xchg
xchg
cli
insb
icebp
jns
jp
add
cli
jmp
lahf
push
loop
sub
xchg
into
pop
jl
and
jl
insb
push
xlat
je
pop
jb
sbb
dec
mov
inc
jnp
xor
inc
jge
mov
lods
les
push
add
pop
imul
cmp
mov
lods
cs
pop
sub
inc
rclb
inc
in
push
cmp
mov
and
push
dec
in
loope
xor
aad
mov
mov
mov
inc
mov
mov
xchg
jl
ljmp
fisttps
jnp
or
hlt
cli
ja
inc
push
imul
sbb
outsl
sbb
mov
inc
push
mov
or
aaa
mov
mov
sub
jo
pop
push
aam
test
xor
rorb
ret
xlat
or
into
jecxz
sti
pop
xchg
pop
fimuls
enter
pop
lahf
xchg
mov
popa
jae
xor
lds
popf
xchg
jo
lock
cmp
xlat
aam
lods
xchg
cmp
sub
xchg
push
inc
pop
mov
mov
mov
inc
mov
repz
scas
sub
sarb
testb
push
aam
mov
int3
imul
jne
xchg
xor
int3
jmp
addr16
push
xor
inc
or
push
push
sbb
rcrb
mov
mov
stos
lds
lds
sub
aas
mov
push
dec
lcall
test
sbb
insl
es
xchg
out
mov
cmp
cmpsb
inc
ss
out
jmp
cmpsl
sbb
or
flds
mov
mov
sub
stc
push
int
stos
xor
repz
in
movsl
neg
add
xchg
scas
cmp
mov
mov
sarl
adc
jbe
jge
dec
clc
xlat
adc
cmpsl
xor
in
loope
lock
mov
mov
scas
push
sub
pop
ret
arpl
jno
aam
sub
test
jmp
mov
cwtl
icebp
in
imull
jae
rep
jns
nop
or
int3
push
int3
neg
dec
ffreep
popa
ljmp
mov
in
jb
ficompl
pop
jns
insl
xchg
dec
pop
add
mov
rcr
jg
push
mov
cmovb
jo
data16
movsb
mov
in
inc
sti
or
cmp
xchg
add
iret
mov
and
mov
push
xchg
mov
push
in
adc
jno
push
sbb
sub
out
xchg
mov
sahf
add
lret
movb
lcall
outsb
adc
adc
ret
xor
mov
add
ret
ror
cmpsl
jae
cmpsl
cld
cli
or
cmpsb
and
inc
sti
daa
cwtl
pop
out
loope
xchg
fisubrl
mov
mov
and
dec
add
nop
das
or
popa
lods
dec
cmc
or
jae
jne
xlat
testl
movsl
push
fwait
lds
fadds
pusha
xchg
xchg
mov
fstps
sahf
pop
std
outsl
or
into
lret
adc
xor
adc
std
mov
push
push
sub
clc
cs
xor
mov
mov
sti
int3
mov
mov
and
outsb
add
pop
push
push
sub
sbb
mov
pushf
xlat
sti
lods
cmpsl
scas
repnz
jge
jmp
ret
xor
ja
movsb
ljmp
add
inc
out
hlt
xchg
push
leave
xchg
lea
testb
scas
adc
pop
sub
mov
cwtl
push
adc
jns
iret
jb
repnz
inc
sub
mov
ds
inc
orl
add
cli
xchg
sbb
mov
ss
cmpb
nop
popf
or
aam
repnz
dec
xchg
jnp
arpl
cmp
cmpsl
xchg
sub
pop
mov
pop
add
fisubrs
iret
adc
fstps
jno
add
test
cmp
mov
bound
adc
daa
xlat
adc
stos
addr16
loop
sbbb
or
mov
mov
xor
out
inc
dec
jo
jnp
xchg
mov
fsubrs
repz
xchg
xchg
mov
fsubl
jbe
and
or
fsub
sbb
mov
xor
daa
pop
aaa
fwait
mov
lahf
dec
pop
jns
mov
out
or
and
xor
jge
mov
std
mov
or
pop
sub
and
in
inc
test
inc
cli
mov
pop
mov
imul
push
jb
push
push
xchg
pop
cld
xchg
dec
or
sub
adc
out
ret
out
pop
or
hlt
push
push
es
loope
addb
scas
iret
mov
xchg
pop
divl
sbb
mov
sub
sub
jns
shlb
cmp
fldcw
dec
fwait
jns
arpl
mov
xor
dec
add
addr16
imul
pop
dec
mov
adc
outsl
inc
xor
stos
mov
popa
out
cmp
fwait
and
xor
mov
inc
idivb
mov
inc
dec
cmp
mov
cltd
dec
mov
call
jp
outsb
mov
pop
cmp
push
jns
repnz
pop
adc
sub
pop
and
sbb
mov
jbe
xor
nop
mull
xorl
jmp
jg
or
mov
test
bound
xor
jbe
xchg
xor
int3
push
and
adc
arpl
leave
jne
or
cli
xor
rolb
inc
jb
out
das
je
cwtl
jne
cmc
in
mov
cld
sub
stos
adc
adc
sti
into
in
cmp
fisttpll
or
push
rclb
dec
insb
in
movsl
sub
xor
cmp
sbb
ljmp
push
xor
jb
aam
call
mov
pop
aaa
or
or
cltd
adcl
cmpsl
rol
mov
cli
ret
je
pop
mov
dec
popf
sbb
lds
push
cwtl
fwait
popa
das
adc
add
mov
inc
ljmp
sbb
shll
adc
push
hlt
popa
mov
in
dec
and
adc
cmp
sbb
cmpsl
popf
xor
mov
cmp
cwtl
inc
sbb
jmp
imul
mov
dec
push
fistl
mov
push
cs
loope
xchg
xchg
jg
sti
sub
mov
sub
lods
xor
xor
push
lret
cmp
ss
ds
xor
or
pusha
sbb
sub
xor
daa
push
pusha
fwait
sbb
xor
pop
and
loop
and
cld
push
mov
cld
repz
decl
or
mov
clc
out
xor
call
loop
shll
cmc
mov
xchg
dec
repz
cli
enter
gs
stos
jmp
push
test
fdivrl
and
pop
jl,pn
jns
into
push
or
aas
or
mov
cmp
iret
in
push
pop
sub
outsb
and
xchg
popf
imull
add
popf
aas
pushf
sahf
scas
push
pop
jbe
negl
mov
or
push
cmp
mov
jp
push
dec
add
gs
ds
test
stos
andb
pop
mov
cmp
repz
mov
cmp
cs
adc
daa
shufps
add
aam
les
rcr
xchg
pushf
stos
inc
fisubrl
movsb
sbb
in
sahf
jne
adc
mov
cs
add
cmp
dec
and
xor
mov
iret
jecxz
xor
add
test
mov
push
dec
scas
inc
jnp
pop
lahf
je
adc
sbb
outsb
cmpsl
lods
sbb
stos
fnstsw
sbb
adc
dec
repnz
xchg
and
lds
pop
mov
stc
adc
add
out
fidivrl
les
pushf
inc
fisttps
arpl
or
cmovl
mov
int
mov
add
fsubp
cltd
in
jmp
pop
test
cmpsl
add
jns
xor
jmp
fs
sti
leave
es
push
loopne
adc
pop
fcompl
addb
dec
mov
xchg
add
dec
lods
push
les
cmc
loopne
push
arpl
sub
sub
ss
pop
movsl
mov
nop
and
inc
fmuls
or
loop
pop
bound
fsubs
sbb
into
xor
jg
pop
jnp
sbbb
test
mov
je
pop
jnp
fcoms
push
das
aas
xchg
push
addr16
int
lahf
cmp
mov
add
mov
test
mov
int3
rorb
mov
test
out
sub
pop
push
cs
rsqrtps
sbb
and
push
scas
dec
xor
icebp
outsb
cmp
push
pop
in
xor
inc
clc
enter
loop
xchg
data16
jnp
mov
dec
jnp
setl
in
pushf
test
adc
sub
pop
adc
sbb
inc
sub
mov
testl
jl
call
dec
mov
arpl
ret
pushl
aam
js
pop
xor
clc
push
adc
mov
lcall
rorl
xor
shr
aam
mov
mov
enter
xchg
popf
jmp
jns
xchg
outsl
mov
sub
jecxz
jbe
mov
sbb
or
push
aad
jns
xor
push
repnz
jb
jne
mov
mov
fbstp
ficoml
sarb
pop
outsl
lods
mov
or
mulb
sbb
push
pop
xor
mov
adc
adc
sbb
cwtl
fsubr
xor
push
lods
out
mov
scas
sub
je
loope
in
movsb
or
xchg
aad
jb
pop
adc
mov
adc
cmp
push
fldt
movsl
mov
inc
sbb
sub
inc
cmp
xor
or
adc
pop
insb
das
mov
sub
out
fisttps
lahf
aam
cmp
adc
inc
and
stc
scas
test
push
je
mov
pop
or
dec
mov
cli
and
sahf
cmp
dec
loope
dec
into
cwtl
mov
mov
push
push
in
xchg
inc
push
daa
imul
fwait
ss
dec
mov
and
jne
jno
fmul
sub
cmp
fisttps
leave
mov
out
or
scas
cld
mov
in
into
inc
mov
movsb
sub
ljmp
cmp
fidivrs
addr16
cmpsl
mov
xchg
dec
jnp
fidivrs
dec
push
push
fsubp
push
cmp
sub
movsl
and
ss
test
xchg
xchg
mov
call
jae
mov
sub
test
popf
mov
ja
test
inc
jae
xchg
shlb
fisttpl
mov
cmp
fcomip
inc
inc
and
movsl
mov
or
mov
mov
lret
fs
push
or
xor
hlt
xchg
sbbl
hlt
test
push
pusha
or
ret
fcomi
imull
in
je
mov
dec
xchg
sub
sahf
xchg
lock
insl
stc
fcoml
xchg
daa
jb
mov
xor
push
stc
in
sti
push
loopne
fisubrs
imul
xchg
mov
das
in
push
fimuls
adc
fs
add
mov
push
fucomp
jno
fisubrs
cmp
jmp
rcrb
adc
in
pusha
mov
rcl
mov
ss
cmpl
mov
push
lea
jge
jo
xchg
jo
shlb
mov
fstps
popf
mov
jnp
imul
loope
fsubl
sbb
fcmovu
stc
mov
pop
jnp
test
iret
cmpl
jl
cmpsb
push
mov
sbb
aaa
out
leave
fldcw
and
push
pop
and
add
movsb
je
icebp
sar
fisubrs
inc
and
xchg
push
push
cmp
push
dec
xchg
mov
ljmp
pop
mov
push
mov
xor
xchg
fistps
out
and
sbb
sub
xchg
cmpsb
jmp
and
push
je
mov
std
les
mov
subl
stc
push
int
sbb
pop
push
jb
int
adc
pusha
scas
inc
div
pusha
pop
jg
xor
inc
xchg
clc
cld
adcl
andl
jge
and
or
cwtl
lea
inc
or
jp
mov
jo
aas
push
jecxz
fldl
call
pop
adc
jp
mov
movsl
arpl
adc
fldt
lret
dec
and
je
mov
cmp
dec
test
add
ds
dec
in
xlat
lea
adc
nop
and
adc
and
lea
xor
das
out
arpl
inc
ficompl
lock
pop
mov
and
mov
push
gs
adc
fwait
mov
pop
outsb
aaa
ljmp
ds
insb
icebp
shrb
aam
xor
xor
sub
dec
sub
icebp
stos
and
out
cld
xchg
xor
xor
hlt
scas
rcrb
test
and
or
push
pop
cmpsb
inc
and
inc
repnz
pop
dec
push
mov
sub
data16
pop
fsubl
or
or
xor
xchg
out
add
xchg
fnstenv
out
insl
insb
seto
inc
sub
jl
dec
inc
mov
test
mov
xlat
sub
sbb
pop
std
out
and
in
int3
pop
jl
cmpsl
inc
mov
sbb
loopne
pop
jmp
and
pop
jmp
xor
fidivs
push
gs
lods
sbb
xor
out
loop
in
xor
sti
shll
cmp
test
cmp
imul
pop
popa
dec
adc
shll
xchg
jmp
addr16
sub
xchg
mov
pop
mov
pop
adc
stos
inc
into
icebp
xchg
jnp
sahf
cmp
sbb
pushf
out
icebp
mov
test
movsl
xor
xchg
mov
dec
rorl
cmp
in
sub
repz
pop
mov
add
add
dec
sbb
ljmp
in
out
icebp
out
in
cmp
or
inc
lcall
push
into
xchg
enter
or
and
inc
hlt
ss
xchg
push
insl
arpl
call
adc
or
or
add
insl
jo
mov
decl
mov
fxch
mov
mov
lret
add
mov
mov
xchg
movb
mov
mov
cmpsl
sbb
mov
pop
leave
sbbb
sub
shl
insl
inc
popf
or
xor
xor
adc
pop
xchg
nop
dec
lock
nop
sub
sub
lcall
cmpsl
jno
inc
mov
mov
leave
push
push
hlt
dec
inc
jle
and
push
mov
rcl
sti
mov
jl
test
std
in
popf
fsubl
movsb
lods
das
shll
pop
decb
int
xchg
nop
in
scas
out
push
adc
sbb
addr16
aaa
ljmp
hlt
pop
xor
push
out
adc
push
push
jno
stos
movsb
mov
fwait
xor
cmp
mov
fidivl
gs
cs
sub
rorb
dec
shrb
fists
mov
sub
divb
out
mov
and
or
pop
jmp
sbb
mov
add
ljmp
test
xor
xor
adc
push
pop
pop
jb
in
imul
aam
inc
cmp
ja
add
push
jns
mov
scas
ds
aam
mov
addr16
rorb
inc
mov
test
pop
adc
add
cwtl
sarb
fmuls
jbe
mov
clc
inc
xor
les
or
insl
fnclex
push
mov
xchg
dec
mov
loope
insb
fcmovnu
push
cmp
dec
mov
orl
out
mov
inc
or
dec
aam
movsl
int
jo
and
inc
push
cmp
sbb
sbb
vsqrtss
popa
pop
dec
fwait
dec
mov
icebp
popf
mov
xor
lcall
wrmsr
sbb
pop
add
xchg
dec
dec
cmc
cltd
adc
mov
and
or
rcr
test
ret
js
and
push
xor
out
inc
lds
push
stc
pop
bound
dec
sbb
movsl
je
scas
cmp
sahf
dec
cld
aam
add
repz
add
xor
lods
fdiv
cld
sub
daa
lcall
int3
fdivs
push
fistpl
iret
out
mov
dec
pusha
adc
sbb
js
les
adc
mov
in
xchg
push
push
ja
push
fucomp
hlt
and
in
aaa
inc
jns
dec
dec
xchg
xchg
cltd
inc
push
lock
mov
cmp
mov
cwtl
xchg
adc
xor
mov
enter
and
es
mov
xorb
xchg
inc
mov
push
push
push
push
out
shrl
sbb
mov
push
test
inc
daa
xchg
daa
jne
mov
xchg
roll
mov
jb
mov
pop
mov
mov
mov
test
mov
ret
inc
mov
xchg
sub
push
dec
xchg
scas
mov
add
and
cs
inc
mov
ja
mov
xor
cmc
mull
js
notb
xchg
dec
mov
xchg
iret
les
call
lret
stc
in
inc
mov
sti
xchg
sub
xchg
push
and
add
mov
ret
pop
dec
and
faddp
jecxz
mov
repz
loope
ja
lret
xchg
mov
bound
and
dec
dec
jno
xchg
push
movsb
in
push
fnstenv
shll
je
jmp
insl
xchg
xor
lds
push
ffree
pusha
lahf
mov
test
sbb
push
or
mov
sbb
into
sbb
xchg
mov
jns
dec
add
adcl
in
sub
lock
clc
push
cmp
mov
sbb
in
data16
roll
pusha
xchg
mov
add
jns
out
ret
push
fiaddl
push
shrb
jae
test
push
mov
push
int
dec
in
loopne
mov
or
int
mull
add
mov
lahf
cmp
mov
dec
mov
lods
pcmpeqw
data16
mov
ss
cmp
in
add
lods
mov
cmc
jno
addr16
rcrl
jb
insb
fbld
js
arpl
sbb
lret
out
adc
lret
mov
stos
cs
fcomip
nop
mov
insb
ss
sbb
jle
push
nop
test
cld
aam
push
testb
leave
pusha
movsl
add
cmpsb
xchg
subb
pop
je
push
adc
xchg
pop
in
pop
add
insl
fmul
xbegin
xlat
cmp
sub
popf
icebp
inc
ficomps
movsl
gs
pop
pop
mov
fsub
jmp
cmc
sub
xchg
xchg
push
and
repz
sub
inc
into
mov
adc
jo
xor
jecxz
iret
pop
repz
js
pushf
call
and
notb
xor
xchg
lahf
dec
je
in
fidivrs
sub
pop
cs
pop
cmp
add
subb
int3
fdivrs
mov
add
xchg
bnd
inc
out
fwait
inc
test
or
sub
inc
fimuls
dec
les
mov
push
pop
movsl
adc
pop
std
int3
mov
inc
xorb
frstor
jmp
xlat
aad
jmp
lea
jge
lea
pop
arpl
push
cmc
jecxz
es
jp
cmp
hlt
inc
imul
in
icebp
imul
rorl
arpl
push
mov
popf
daa
cmpb
add
pop
jl
push
push
fmulp
or
loop
aaa
push
and
fs
jbe
jae
dec
jb
dec
push
xor
and
popa
insl
in
inc
lock
xchg
fiadds
int3
adc
imul
outsb
fstpt
negl
sti
or
shlb
mov
mov
jne
cmc
push
jae
jmp
xchg
inc
and
into
shrl
mov
enter
lea
cmp
mov
mov
inc
lds
adc
xor
xchg
ljmp
cld
enter
and
lret
add
dec
mov
sub
cmp
inc
adc
rcrl
push
ja
or
sarl
xchg
inc
adc
pop
add
and
xor
lret
sub
fs
sbbb
or
outsb
pop
mov
jg
sbb
popf
inc
jmp
jb
push
push
mov
repz
shll
add
jg
inc
popa
mov
dec
pop
adc
push
or
pop
insb
push
addr16
dec
push
fiadds
ljmp
adc
sub
push
mull
xchg
mov
pop
ret
mov
mov
shrl
pop
pop
sahf
daa
mov
and
mov
lahf
bnd
test
outsb
lahf
sahf
in
shll
nop
push
mov
sidtl
sahf
stos
push
insl
mov
mov
and
dec
pop
mov
repz
cli
dec
add
or
push
call
dec
or
xchg
push
push
or
das
mov
jnp
add
mov
je
cmpl
std
imul
inc
sbb
mov
dec
imul
mov
loopne
jle
inc
sbb
xchg
pop
sbb
ljmp
daa
pop
pop
and
scas
mov
jnp
add
mov
rclb
mov
popf
push
mov
repnz
out
mov
dec
pop
mov
sti
push
cmp
pushl
mov
repnz
mov
ss
shll
repnz
mov
jbe
stc
cltd
addl
pop
jge
dec
iret
adc
popa
sbb
pop
call
mov
or
outsb
push
mov
sti
cmp
arpl
add
push
jb
in
jl
mov
movsl
mov
inc
mov
mov
mov
sub
jge
cmp
outsb
mov
inc
lret
out
out
out
dec
push
in
push
mov
push
rclb
pushf
or
test
dec
xchg
dec
icebp
pushf
push
inc
aas
pop
push
movb
leave
aad
inc
mul
or
ss
cmp
leave
pop
fs
jmp
jns,pn
pushf
repnz
cmpsb
cmpsb
pop
jle
insl
xchg
xlat
push
rcll
mov
lock
xchg
inc
fwait
mov
mov
aas
mov
xor
hlt
lcall
ret
or
test
mov
push
add
imul
out
dec
xor
sahf
jbe
testl
cmp
or
ficoml
enter
lret
rorb
mov
cmc
mov
xchg
mulb
jne
rorb
push
mov
and
sbb
loope
insb
movsl
repz
lcall
cmpsl
mov
inc
or
mov
pop
arpl
pop
sub
fwait
pushf
push
sbb
sti
popf
and
dec
and
dec
adc
std
rorl
mov
add
xor
testb
call
sub
mov
stos
arpl
dec
lcall
and
cmp
sbb
cmpsb
pop
ret
xor
jl
sbb
fmull
dec
js
lods
mov
lds
mov
xor
sarb
inc
stos
lods
imul
push
inc
adc
aam
dec
or
in
xor
jmp
add
pop
add
and
xor
mov
fdivrs
or
inc
cmpsl
mov
ret
adc
ret
mov
xchg
add
xor
andb
mov
lcall
mov
ja
dec
insl
xchg
ljmp
sete
test
push
mov
jno
in
cs
mov
sub
inc
sbb
mov
and
lock
movsl
pop
sub
and
in
push
jmp
aam
je
aad
stos
adc
or
and
adc
bound
out
xchg
icebp
dec
cltd
mov
or
xlat
cmpsl
addb
add
lea
lret
dec
xchg
and
movsb
lock
andb
push
xchg
mov
inc
stos
inc
call
xor
jecxz
mov
mov
sub
call
movsb
loopne
push
adc
daa
push
dec
or
fistps
pop
in
shl
test
fldenv
mov
inc
and
je
stos
cmp
sub
add
lret
scas
repnz
inc
dec
bound
mov
jnp
adcl
lods
push
jno
test
xor
call
ret
mov
sti
neg
int3
dec
fcoms
pop
dec
movsb
push
mov
aaa
das
dec
sti
ret
push
push
cmc
pop
out
cmpsb
fsub
in
and
lahf
pop
sahf
loope
add
adc
pushf
test
lret
aad
jne
sbbb
mov
lea
xchg
mov
rolb
aaa
movsl
pop
pusha
xchg
adc
je
cmpsb
add
addl
mov
push
popw
je
cmp
scas
cmpsl
mov
xchg
pop
scas
js
loopne
pusha
stos
or
fcom
sub
loope
fisubrs
call
stos
hlt
icebp
lret
pop
or
loop
xchg
lds
mov
mov
add
rorl
mov
sbb
jg
adc
scas
mov
mov
loope
leave
pop
fcoms
mov
icebp
outsl
aas
xor
loop
pop
mov
add
cmp
loope
sub
cmp
inc
fnstcw
addr16
sub
iret
ds
mov
jp
lds
xchg
push
in
sti
mov
arpl
mov
or
cltd
jbe
xor
aas
xor
or
movsb
pop
mov
fistps
shl
into
rorl
push
arpl
cmp
pop
movsl
test
into
sbb
mov
iret
mov
sbb
cli
sub
cmp
out
daa
inc
rorl
popf
int3
fs
sub
pusha
push
push
add
gs
mov
aaa
or
mov
cli
inc
and
pop
sub
pop
jnp
fisubl
mov
lods
push
outsb
rclb
xor
adc
fisubl
shrb
ficoml
test
outsl
divl
jb
sbb
pop
cltd
add
cmp
or
hlt
dec
js
arpl
inc
sbbl
clc
adc
adc
into
xorl
cmp
lretw
jmp
inc
lea
addl
pop
and
push
jnp
sub
hlt
push
lret
mov
add
fnsave
xchg
out
pop
sbb
cmp
aas
dec
pop
inc
cmp
adcl
out
sub
enter
or
jp
jp
cli
mov
std
in
mov
xchg
arpl
jno
mov
loope
push
adc
sub
xchg
lds
and
das
dec
fcoms
push
and
dec
hlt
lods
je,pt
add
icebp
lahf
pop
push
sub
cmp
mov
mov
jo
out
push
add
jmp
cltd
sub
inc
enter
jl
cltd
mov
sbb
dec
repnz
loop
dec
pop
nop
push
adc
test
bound
leave
mov
xor
push
subb
pop
xchg
addb
pop
or
cli
jae
rcrb
push
loopne
in
cli
sti
shrl
sbb
xchg
in
out
push
test
push
pop
notl
or
jp
loopne
fisubs
dec
push
adc
adc
movsb
popa
stos
mov
jmp
data16
mov
cli
inc
jge
call
xchg
dec
sub
fwait
mov
jle
sub
dec
jnp
push
cmp
xchg
gs
sarl
cmp
jo
sbb
sbb
rolb
mov
out
or
daa
cmc
mov
lock
fisubrs
jo
xor
arpl
mov
cltd
mov
aas
inc
mov
sub
fisttpl
xchg
bound
insl
pop
push
add
dec
cld
and
sbb
jge
push
sub
and
scas
xchg
pop
jmp
add
inc
push
es
in
std
in
sbb
and
dec
stos
push
mov
shrl
mov
cmp
movsb
jmp
out
or
inc
fmull
xor
push
mov
cs
hlt
mov
pop
je
out
ret
mov
mov
fadds
add
cli
and
sub
push
test
imul
into
jmp
mov
inc
ret
mov
sbb
movsb
mov
xor
sub
in
xchg
in
clc
cmpsb
push
sbb
push
mov
mov
inc
mov
pushf
dec
pop
xor
xchg
sbb
mov
push
mov
cmpsl
sbb
fwait
xchg
loope
cmp
add
insl
stos
jmp
lods
add
in
add
jge
ss
cltd
mov
mov
sbb
mov
mov
sbb
cld
or
lret
shlb
sbb
adc
jb
pop
call
inc
mov
movsb
scas
dec
xor
nop
push
mov
push
jno
outsl
add
push
adc
ljmp
xchg
aas
test
or
jnp
or
xchg
and
inc
aas
paddsb
dec
loope
std
cwtl
out
fs
and
test
test
out
push
add
mov
imul
mov
outsb
jmp
dec
pop
sbb
pop
in
out
fists
cli
mov
nop
push
xor
dec
pop
ret
stos
and
adcl
inc
xchg
rorl
sub
adc
sar
or
or
or
jns
loopne
mov
in
pop
mov
mov
dec
in
dec
cmpsl
xchg
add
stc
sub
xchg
cmp
xlat
or
adc
mov
jl
fbld
jno
sar
scas
shrb
fidivrs
cld
push
sub
aad
aaa
es
mov
shl
sbb
addr16
and
jge
xchg
dec
inc
pop
push
jle
repz
fiaddl
lret
mov
jg
das
in
add
hlt
rcl
ret
mov
aaa
insb
push
ss
sbb
std
sub
shl
mov
shlb
sti
ret
test
cwtl
adc
and
push
pop
shl
mov
and
enter
sub
push
cmpsb
ljmp
cwtl
bound
fwait
mov
roll
cmp
mov
daa
adc
sub
dec
stc
mov
sbb
jae
es
dec
add
mov
push
add
xchg
roll
sti
and
sub
push
push
mov
push
mov
fstp
xor
ja
jg
ds
add
jp
in
in
out
xor
mov
xchg
cmp
adc
ret
xchg
xor
add
ss
jmp
jbe
jo
adc
cmp
or
cmpsb
inc
test
repnz
stc
imul
sub
daa
jmp
lahf
ss
mov
cmpsl
cwtl
std
pop
sbb
inc
dec
inc
xchg
sbb
push
repnz
loopne
ror
xchg
add
lcall
sahf
pop
pop
cmpsb
outsb
addl
dec
subb
lods
or
push
mov
sub
sbb
mov
adc
xchg
leave
add
cmp
adc
fbld
push
shrl
dec
mov
sbb
out
push
cmp
outsb
into
test
mov
cli
mov
je
fsubr
ret
add
es
pop
inc
repz
into
pushf
jb
aam
xchg
xchg
lods
sub
inc
cmp
aam
notl
and
mov
mov
push
sbb
dec
loopne
jp
and
scas
push
movsb
mov
pop
mov
mov
addl
int
mov
sub
mov
cmp
pushl
data16
out
test
inc
inc
push
popa
loope
aam
lock
and
nop
mov
xchg
and
insl
jne
lret
aas
pusha
or
or
in
stos
ljmp
orl
xchg
mov
inc
clc
xor
jmp
mov
pop
int
adc
leave
and
mov
fisubs
push
mov
ret
sub
jne
and
popf
push
in
mov
cmp
jns
cmp
cmp
and
aas
and
pop
pop
shr
lcall
js
insb
xchg
pop
leave
cld
xor
stos
bound
pushf
gs
mov
ds
cmp
jne
pop
adc
or
test
pop
mov
int3
inc
arpl
lret
ss
mov
outsl
xchg
dec
jb
fdivs
not
push
in
lret
dec
test
mov
aaa
ret
insb
push
jp
mov
loopne
sub
sbb
outsl
cs
rorb
mov
addr16
mov
mov
or
pop
ficoml
cmp
sub
inc
pop
nop
cmp
and
cld
inc
mov
scas
mov
jp
unpckhps
adc
and
pop
xchg
cltd
std
cmp
cwtl
or
ret
or
cld
xchg
pop
repnz
inc
stc
dec
xor
aaa
mov
insl
sti
pusha
ds
and
and
inc
cmp
insb
jg
out
movb
push
push
pop
mov
jae
data16
inc
cmp
popa
and
cltd
dec
sub
stos
cmpsl
mov
daa
aaa
xor
sbb
shlb
int
adc
test
inc
cmp
adc
out
push
gs
adc
adc
mov
loope
fwait
mov
sti
mov
sub
adc
nop
fnstenv
and
outsb
clc
sti
popf
test
mov
jl
sub
pop
mov
repnz
mov
scas
xor
lahf
cmpsb
fwait
xchg
adc
dec
and
sbb
inc
shll
ret
adc
and
dec
sub
lods
rcll
bound
in
out
ds
ja
jge
loop
mov
pop
jecxz
fndisi(8087
mov
pop
mov
loopne
add
dec
pop
adc
stos
xchg
sbb
iret
rorl
dec
sub
test
inc
and
push
jecxz
cmp
sub
mov
sbb
add
outsb
mov
jb
repz
lods
jb
addb
test
pop
and
dec
xchg
sub
imul
adc
dec
loop
arpl
stos
aad
call
and
add
xchg
stc
jge
les
push
mov
imul
fsubp
adc
loopne
adc
js
cmp
test
stos
aad
imul
repz
test
inc
jo
js
lods
in
or
enter
cmp
cmc
scas
stos
clc
ds
adc
cs
sbb
jb
adc
stos
jmp
xchg
mov
addl
scas
xchg
or
cmc
sbb
test
mov
xor
adc
adc
cmpsl
movsl
sub
cmp
std
jg
pop
fsts
dec
into
and
push
mov
dec
enter
xlat
cmpsb
ret
ds
dec
into
cltd
outsb
bound
mov
jmp
adc
xchg
lret
repz
addr16
xor
or
cwtl
clc
cmp
adc
or
cmp
lahf
mov
jno
mov
gs
mov
neg
push
fldt
pushf
subb
cmc
icebp
cmp
fwait
push
mov
les
addr16
sub
xchg
scas
loope
es
popf
mov
out
dec
or
popf
into
dec
packssdw
add
lock
pop
ljmp
mov
cwtl
push
push
leave
mov
sbb
push
rorb
jmp
nop
mov
data16
imul
adc
sbb
add
pop
sbb
cmp
xchg
pushf
jno
xchg
ljmp
jbe
pop
enter
les
sub
mov
mov
rcll
movsb
jne
cli
or
shr
iret
sub
mov
push
stos
addr16
jp
pop
cmp
push
inc
push
pop
flds
jnp
xor
or
fimull
mov
cltd
adc
stos
xchg
sub
inc
fwait
jp
xchg
adc
test
push
fidivrl
scas
imul
stc
inc
lods
inc
xor
outsb
outsb
shll
jmp
and
idivb
sub
or
and
jae
jle
mov
adc
std
lcall
cmp
aaa
cmc
call
xchg
adc
adc
out
inc
jl
idivl
ds
mul
adc
sub
dec
jnp
pop
mov
popf
frstor
and
fs
data16
int
and
push
mov
es
push
xor
lods
dec
lds
ljmpw
xor
add
pusha
mov
rorl
push
mov
dec
lods
sbb
pop
ret
pushf
push
call
movsl
cmpsb
xchg
jle
scas
js
stc
mov
mov
push
bound
or
mov
stos
jbe
or
push
addr16
out
fsubs
pop
push
cltd
pop
movsl
mov
sub
sbb
divl
push
jge
repnz
push
insb
pop
dec
jb
push
rorl
cwtl
imul
iret
dec
outsb
dec
lret
mov
xor
mov
pop
loope
test
imull
adc
push
incl
and
dec
mov
lret
xor
cmpl
into
ja
lret
daa
mov
mov
mov
test
div
mov
jl
or
imulb
lahf
or
jge
loope
dec
adc
fs
push
dec
and
pushf
bound
xchg
push
mov
orb
pop
xchg
jg
jl
xor
pop
sub
add
in
ds
imul
dec
lret
aas
daa
outsb
add
and
lods
mov
into
lods
sahf
and
adc
jecxz
dec
aad
aas
pop
adcl
jecxz
mov
fsubl
and
out
je
dec
stc
add
add
xchg
sarb
rclb
fadd
out
divl
mov
inc
mov
jmp
imul
pop
mov
enter
int
push
mov
pushf
fistps
rolb
int
shr
test
shrb
jg
mov
sti
rcrl
loopne
pop
aam
cmpsl
cmp
lods
test
inc
sbbl
inc
dec
sahf
or
loop
ljmp
mov
xor
aas
xchg
or
cmp
dec
xor
in
cmpsb
push
and
sahf
shll
inc
cmp
aaa
testb
outsl
movsb
push
sub
pop
rcrb
in
sub
dec
aaa
push
push
cmpsb
popa
sub
mov
popa
cmpl
lret
and
push
sbb
and
jle
mov
mov
pop
ljmp
inc
ficompl
fwait
or
jo
addr16
iret
xor
test
fstpl
loop
popa
ljmp
push
or
rol
and
cmpsl
mov
loope
hlt
out
movsb
xchg
push
cmc
imul
add
inc
pop
in
jg
nop
gs
out
mov
aad
sbb
repnz
xchg
aaa
and
xchg
mov
mov
jp
cmc
mov
cmp
je
lahf
test
xchg
or
out
hlt
hlt
jo
or
and
xlat
std
addr16
repnz
adc
xchg
jae
fadds
pop
add
out
out
jbe
jle
hlt
out
ficoms
inc
sti
add
repz
loop
inc
mov
mov
lock
or
jle
cltd
fwait
dec
cmp
sbbl
jbe
aam
add
sub
push
pusha
sbb
or
mov
sbb
sti
xor
imul
aam
mov
pop
sahf
fidivrs
sub
aad
sahf
lcall
push
fsubs
test
sbb
int
stos
dec
or
lret
nop
sbb
xor
stos
stc
pushf
push
sbb
jle
icebp
lods
inc
jb
inc
rorb
sbb
mov
test
call
adc
push
fistpll
sub
cld
dec
nop
insl
ds
inc
mov
movsl
imul
push
and
js
hlt
dec
xchg
xor
push
dec
cmp
jle
mov
das
jp
adc
pop
hlt
rolb
inc
inc
xlat
jl
xor
je
sbb
lods
jae
iret
jle
aaa
pop
mov
adc
clc
jbe
sti
and
jmp
push
out
mov
scas
sub
jl
xchg
push
dec
xor
aad
jl
dec
jnp
mov
jbe
dec
dec
addr16
cld
jo
pop
or
fcoms
and
jge
xchg
icebp
shll
jge
jne
popw
inc
jecxz
js
repnz
dec
mov
enter
shll
daa
inc
and
push
xor
sbb
insb
arpl
sub
pusha
aam
fwait
jle
dec
cli
ret
xchg
punpckhwd
pop
jns
adc
jle
movb
icebp
xor
insl
xchg
jne
adc
jle
dec
mov
ljmp
dec
stc
push
fisubrl
mov
in
popf
imul
fcmovbe
sub
in
cltd
cs
popa
je
ljmp
push
push
das
sub
pop
push
push
xor
roll
out
js
notb
rcrl
fidivl
pop
out
loop
imul
inc
or
inc
mov
dec
dec
aaa
adc
in
ret
mov
adc
cli
loope
adc
push
outsb
daa
and
test
xor
gs
hlt
or
and
jge
mov
ss
mov
scas
or
pop
sub
mov
es
repz
test
fwait
cld
mov
cmp
mov
loopne
inc
cmp
aam
inc
inc
xchg
fbstp
icebp
imul
ffreep
pop
sub
insl
sub
or
lcall
cmpsl
jl
pop
lahf
into
cltd
shlb
mov
adc
cmp
call
add
stos
jl
jge
jl
mov
test
xchg
sub
sub
sbb
adc
ss
add
dec
sti
sub
inc
jns
jp
add
mov
xchg
sub
xchg
loope
xchg
iret
bndldx
inc
stos
mov
lcall
shrl
icebp
cmp
sbb
adc
mov
adc
test
pop
outsb
cld
mov
div
fwait
inc
xor
push
push
pop
dec
frstor
pop
je
xchg
sub
popf
and
jge
nop
sbb
mov
and
fisttpll
cmp
push
test
push
movsb
sub
jp
and
dec
sbb
adc
je
imul
mov
pop
in
push
leave
ss
and
ds
outsl
jecxz
xor
pop
sbb
pop
and
adc
pop
jae
lds
sub
cmp
xor
ja
adc
cmp
inc
pop
xor
call
and
mov
mov
cmpsl
arpl
repnz
test
lahf
test
jp,pt
add
out
mov
sub
les
imul
js
push
pop
inc
add
jne
out
xchg
jle
mov
bound
lods
mov
test
enter
lret
fucomip
push
cmp
xlat
out
jmp
mov
pusha
push
out
lods
pop
or
es
mov
lods
ljmp
repnz
test
nop
jb
mov
and
mov
inc
cmc
adc
adcl
mov
or
shr
lock
gs
dec
xor
push
orl
inc
push
mov
in
xorl
sub
lods
into
arpl
fstpl
cmp
mov
test
rclb
xlat
int3
mov
dec
sar
xchg
sub
push
and
cmc
push
push
cmp
add
mov
cmp
addr16
adc
or
fisttpll
imull
pop
dec
jg
jp
int3
add
cmp
int
shrb
or
enter
sahf
in
pushf
cld
and
ror
nop
sti
xchg
mov
push
aam
jbe
fmulp
jo
adc
push
jns
mov
outsl
inc
bound
loope
push
jo
out
dec
lods
xchg
pop
add
inc
insl
fldcw
or
sbb
sarl
lret
shll
cli
aaa
test
repnz
mov
loop
repz
sub
pop
cmp
jns
ret
adc
sub
stc
mov
push
sub
jmp
and
fs
cmc
arpl
loop
mov
nop
pop
imul
in
loopne
xchg
pop
mov
rcl
fwait
lods
js
push
push
fcmovnu
rcll
fwait
clc
outsl
mov
inc
add
xchg
addr16
push
scas
inc
ror
xchg
mov
lcall
and
dec
push
adc
adc
push
jne
int
xorb
icebp
je
incb
mov
inc
test
int3
aaa
dec
popf
and
mov
sbb
xchg
shll
xchg
adc
and
pop
xchg
and
dec
push
jbe
jae
inc
xchg
popf
xchg
cmp
aad
xor
mov
mov
mov
cmc
cltd
xchg
and
mov
jnp
aas
cmp
xlat
outsb
and
push
sarb
jmp
sub
cmp
pop
and
nop
sub
out
xchg
jno
out
hlt
xchg
fistl
cmp
std
fildl
stos
stc
outsl
mov
dec
loopne
stos
call
pop
mov
pop
roll
ret
cld
xor
out
inc
data16
sbb
es
fidivrl
sbb
test
les
test
insb
xorl
jbe
xlat
jmp
inc
mov
fbld
push
xchg
cmp
mov
mov
mov
pop
mov
sbb
aas
mov
icebp
imul
enter
sbb
mov
or
test
and
mov
lods
mov
roll
inc
adc
out
cmpsb
xor
nop
mov
andb
das
inc
and
pop
mov
loope
jno
dec
std
pop
cmp
insl
lods
call
out
add
imull
bound
data16
add
stc
mov
jb
insl
lds
xchg
jnp
mov
cmp
pop
bound
mov
repz
xchg
pmullw
push
iret
pusha
xchg
inc
lcall
and
dec
pop
es
dec
loope
lret
lret
ja
dec
rcll
imul
jae
fsubp
imul
popf
sbb
cmc
pop
int3
pop
jmp
mulb
add
xor
rcl
or
adc
cmc
jo
cs
arpl
nop
jb
cmpsb
dec
icebp
xor
mov
outsl
lcall
sarl
imul
rclb
lahf
cmp
push
cmp
pushf
xlat
jle
mov
scas
lock
xchg
das
or
cwtl
inc
adc
enter
mov
int3
lods
adc
push
dec
and
arpl
enter
scas
les
enter
sbb
mov
pop
aam
addl
xchg
int
jge
push
mov
push
or
aaa
aad
or
mov
add
lcall
cmp
fistpl
push
sub
aam
mov
sub
jmp
es
push
test
dec
sti
or
shlb
test
pop
sub
cmp
lods
push
rcrl
inc
dec
mov
mov
mov
push
aam
and
xor
xchg
cmp
outsl
lea
scas
orl
xor
pop
rcrl
push
pusha
es
les
jecxz
sub
fisubl
or
insb
mov
daa
daa
scas
mov
sbb
shll
mov
icebp
jbe
mov
jb
mov
push
mov
popf
pop
inc
ja
cs
lock
dec
pop
addl
mov
sbb
cmp
lret
orb
jno
stc
inc
pop
imul
sub
and
sub
outsb
inc
push
jno
add
dec
mov
inc
xchg
pop
aam
mov
inc
xor
jecxz
sbb
mov
lods
popf
mov
mov
xchg
mov
addr16
sbb
bound
cmpsl
les
into
je
cmc
ja
je
repz
ljmp
insl
fsubrl
pop
xchg
lods
inc
jo
cmp
es
popf
mov
aad
movsb
add
add
dec
outsl
xchg
jno
insb
mov
loop
out
loop
cmp
and
xlat
sarb
nop
jl
fildll
cs
jecxz
lods
mov
mov
adc
les
push
ret
lock
push
inc
lret
imul
push
flds
das
fdiv
clc
xchg
add
nop
cmc
and
or
or
movsb
sbb
movsb
rep
jo
ds
leave
cmp
cmp
lcall
call
pusha
mov
je
push
sub
imul
out
mov
pop
add
sbb
pop
je
scas
je
jb
dec
and
outsl
imul
inc
mov
mov
ds
icebp
out
jge
xchg
xchg
stos
jp
mov
imul
jne
cmpl
cmp
dec
adc
mov
pop
xor
cmp
notb
mov
push
xor
inc
icebp
xor
dec
lret
fmul
mov
add
lahf
into
imul
inc
jb
mov
imul
mov
lock
arpl
lock
outsl
pop
int
lock
jb
add
mov
out
pop
leave
sub
fadd
out
cmp
mov
int
fldenv
mov
add
stos
into
push
fsts
lods
call
call
pop
ret
inc
pop
mov
mov
cld
adc
or
lods
and
xchg
imul
sub
mov
int3
dec
and
in
pop
out
lods
pop
mov
sbb
sbb
sbb
les
mov
dec
push
loopne
js
mov
mov
jecxz
and
mov
bound
int3
in
stos
mov
cmp
lret
lret
popa
mov
mov
out
mov
adc
fimuls
arpl
mov
out
enter
push
imul
pop
fdivp
aaa
fnsave
mov
rorb
inc
clc
addr16
push
adc
outsb
mov
cs
xorb
pop
xchg
and
scas
jmp
sahf
pop
or
push
push
rorl
fsubl
dec
jmp
push
icebp
pop
sub
addb
pop
test
jo
shlb
or
push
sub
mov
dec
mov
jne
push
gs
fmuls
jne
dec
pop
cmp
dec
rcll
fs
movsb
mov
jecxz
lock
fistl
stc
xor
sbb
xchg
or
xchg
jae
aas
jge
hlt
cmp
jle
leave
and
jae
or
gs
loopne
jmp
mov
sbb
clc
sbb
adc
mov
popa
push
ret
adc
stos
or
in
xor
add
add
or
and
pop
add
push
dec
shrl
fs
int3
xchg
lods
xchg
test
pop
jae
icebp
daa
jne
adc
push
add
stc
pop
jb
jnp
repz
popf
and
mov
int
shll
gs
mov
mov
mov
jae
sub
pusha
sub
aaa
out
das
leave
insl
out
adc
xor
adc
jb
sub
insb
jno
lret
jmp
sub
arpl
cltd
cwtl
push
lcall
into
add
push
mov
mov
xor
es
rcll
call
insb
arpl
xchg
out
jecxz
mov
push
add
mov
incb
testb
push
xchg
ds
into
and
and
and
lret
pop
cmp
fisubrl
mov
out
mov
leave
clc
mov
aas
hlt
dec
mov
fbstp
adc
mov
in
pop
out
jg
hlt
into
adc
aam
mov
in
cwtl
inc
push
jbe
xor
dec
mov
dec
hlt
pop
fcompl
pop
jb
mov
jb
out
mov
movb
insl
sub
sbb
jl
jb
lret
rcll
mov
scas
jge
jno
inc
insl
push
sub
sahf
mov
in
dec
les
das
add
mov
inc
std
inc
mov
loope
xlat
in
mov
xchg
insb
out
movsb
into
and
cs
les
rdtsc
les
push
std
push
and
adc
mov
int3
inc
mov
push
add
pop
into
std
push
push
sbb
cmp
dec
int
or
pop
pop
in
xchg
mov
push
xorb
int3
dec
sahf
mov
int
cmp
popf
cmp
jl
mov
loopne
loope
add
or
arpl
pushf
pop
xor
fs
stc
leave
mov
mov
xor
daa
mov
sub
add
clc
stc
lods
jne
sbb
jle
sbb
adc
cmp
or
sub
test
fsubs
push
mov
fldt
test
jno
jl
adc
imul
or
adc
insb
rclb
ljmp
cmp
andl
and
aad
int3
push
xor
xchg
and
cmpsl
sub
aas
das
dec
sarl
jo
jno
xchg
pop
and
outsl
mov
push
mov
orl
mov
popf
lock
xchg
sar
aad
adc
lret
adc
xlat
aam
push
pop
std
aas
push
and
jns
mov
pop
jae
adc
mov
add
add
inc
mov
ds
out
ds
std
lea
repnz
dec
xor
pop
lret
cltd
rcll
leave
divl
mov
sub
inc
aad
nop
add
jmp
pop
sbb
aaa
or
in
jno
gs
cmp
push
xorb
push
pop
xor
mov
mov
mov
sahf
push
andl
cmpsl
jae
js
push
xchg
or
ljmp
and
ss
dec
outsl
movsb
rolb
clc
in
xchg
sbb
icebp
orl
mov
and
shrl
add
xor
fcoml
push
dec
or
or
pop
xor
test
sub
push
insb
sub
mov
jae
sbb
sbbb
jb
xlat
mov
add
lcall
les
test
out
mov
push
xchg
loopne
push
rcll
push
push
sbbl
adc
xor
jg
into
ljmp
fcompl
in
inc
ja
and
dec
pop
outsl
nop
fidivl
or
xchg
xchg
sub
cltd
and
mov
aas
add
push
cmpl
and
inc
inc
pusha
mov
repnz
jl
xchg
xorb
test
mov
mov
jg
out
cmp
jp
jl
or
add
lods
insb
mov
icebp
out
cmp
sbb
pop
adc
test
cmpsl
cmp
std
xchg
bswap
jmp
dec
test
pop
stos
movsl
pusha
mov
jne
adc
jo
pop
xchg
and
ljmp
pop
push
add
push
mov
sbb
pop
fnstenv
mov
xor
xchg
mov
mov
inc
mov
shr
xchg
xchg
mov
sub
or
jmp
pop
ret
inc
jbe
xor
hlt
in
xor
or
sbbb
call
and
and
push
xchg
mov
stos
and
dec
fcmovnu
xor
jl
stc
pop
add
in
lock
test
imul
pop
jno
push
ss
or
sbb
scas
mov
shll
jmp
jmp
test
pop
imul
jnp
sub
xchg
cmp
push
cltd
cmp
or
pop
lods
fnstcw
push
ljmp
inc
jno
pop
inc
int
clc
xchg
mov
or
push
iret
lock
mov
leave
shl
push
xchg
push
add
clc
push
dec
lcall
fnstenv
ja
int3
dec
pop
pop
das
pop
ja
jecxz
loopne
lods
orb
jb
dec
add
ret
and
stos
outsl
add
add
inc
mov
sbb
jg
shl
je
imul
cmp
sti
mov
inc
jae
mov
call
dec
cmp
inc
xor
lock
sbb
mov
lret
clc
inc
mov
sub
out
movsl
dec
pop
ret
xor
add
jl
pop
nop
mov
sbb
in
fbstp
adcb
stos
scas
fsubl
inc
inc
sbb
ret
insl
sbb
sarl
mov
push
shl
xchg
test
cmp
pushf
jae
enter
jmp
jb
dec
pop
inc
popa
cli
testb
xchg
outsb
add
adc
rolb
mov
sub
mov
repnz
push
lock
jae
cmp
cmpsb
inc
and
cmp
jecxz
fwait
add
xchg
int
sbb
cld
dec
loop
outsb
xchg
clc
jg
out
sbb
scas
mov
call
push
fstl
ja
outsl
ss
dec
cmp
or
stos
and
stos
cmpb
es
adc
sub
xchg
jg
cmp
pop
loopne
pop
cmp
sbb
mov
mov
rcrl
aam
lcall
arpl
sahf
in
in
enter
jae
ds
leave
pop
popa
pop
or
pusha
pop
inc
loop
pop
adc
push
push
jg
dec
es
arpl
pop
nop
sbb
or
insb
out
push
push
inc
xor
pushf
push
js
inc
int3
push
out
cs
push
iret
or
pushf
pop
testb
adc
xor
xchg
subl
inc
mov
shrb
xchg
test
or
adc
inc
cmp
dec
mov
lods
sbb
shlb
dec
xchg
dec
push
mov
test
push
lods
mov
das
pop
data16
shr
adc
dec
rclb
int
daa
popa
imul
push
and
fcmovbe
fs
enter
sbb
mov
dec
cmp
scas
inc
and
pop
outsb
es
stos
push
jl
hlt
inc
ja
mov
ret
fdivs
sub
jae
scas
shlb
adc
mov
out
lcall
xchg
xor
push
mov
das
lret
lods
enter
bound
mov
add
lods
adc
jmp
loop
pop
inc
xlat
xor
pop
jmp
jo
adc
enter
xor
jae
inc
and
and
aas
or
cwtl
push
xchg
scas
scas
stc
mov
mov
sub
dec
jno
sub
xchg
into
jbe
adc
lock
jns
pop
mov
fidivrs
insl
mov
push
xchg
inc
jno
sbb
xchg
je
dec
add
cmpsl
iret
fisubrl
mov
jg
sbb
outsb
sbb
imul
clc
addb
and
enter
xchg
mov
and
repz
sti
jmp
cmp
add
dec
rorl
mov
fldpi
xlat
jl
mov
gs
adc
loop
lea
pop
mov
stc
je
je
adc
subl
arpl
sbb
inc
addl
flds
push
cmp
xor
add
int
repz
unpcklps
inc
jae
ljmp
int3
fadd
lds
jo
outsb
mov
inc
push
push
stc
jp
push
pusha
and
push
or
ss
std
popa
sbb
pop
jae
mov
in
or
xchg
adc
cltd
push
cmc
inc
sub
in
mov
adc
push
xlat
mov
inc
movl
insl
pop
sahf
cmp
dec
jno
adc
cmc
xchg
aaa
out
xchg
cmp
outsb
jmp
xor
push
notl
fisubrl
push
movsl
in
pop
dec
cmc
xor
xor
push
icebp
pushf
sbb
jge
ja
dec
mov
pop
negb
insl
fidivrs
scas
movsl
pop
lds
sub
push
mov
clc
mov
mov
xchg
fs
test
sub
sub
inc
imul
adc
mov
in
inc
cmp
es
dec
add
jl
or
dec
fdivrs
out
mov
mov
push
inc
jp
adcl
js
sub
push
pop
mov
sub
cmpsb
mov
xor
loopne
test
and
push
sub
mov
sub
and
and
push
cmp
sub
cmc
mov
mov
ss
push
popa
add
inc
add
inc
mov
jge
mov
cmp
jbe
pop
push
repz
push
lahf
inc
xor
fcoml
xor
and
loope
lret
inc
mov
mov
cli
mov
mov
nop
fistl
mov
cwtl
std
test
sub
fcmovu
xor
mov
jae
mov
lcall
lea
mov
mov
repz
fwait
push
cmp
push
pop
cli
and
cmpsb
xchg
pop
je
pop
ss
incb
or
xchg
scas
sbb
xchg
out
and
mov
fnsave
iret
xor
nop
fsubs
mov
and
movsl
lret
scas
sbb
ret
adc
mov
jmp
sbb
push
lret
jnp
and
add
js
xchg
ja
fildl
stc
bound
adc
icebp
adc
add
mov
mov
ss
lods
stos
jmp
dec
jmp
shl
inc
mov
jp
cmp
cli
out
mov
in
ret
andl
out
push
inc
mov
lahf
into
cld
pop
xchg
shl
sub
mov
addr16
into
mov
and
stc
and
rcrb
gs
inc
into
mov
push
mov
fidivrs
inc
adc
xor
and
mov
add
xor
cmp
icebp
sub
test
sbb
xor
pop
push
out
push
orb
out
ret
repnz
test
stos
xor
out
pop
lea
les
aad
and
bound
imul
xchg
mov
cwtl
xor
sbb
pop
sub
jmp
cmp
fnstcw
jne
pushf
adc
push
enter
jbe
outsl
mov
aas
dec
cmp
test
loop
fisttpl
jle
mov
add
leave
data16
or
pop
cmp
cli
mov
mov
mov
dec
mov
inc
sub
push
sub
hlt
popa
out
pop
sbb
sbb
or
inc
sti
adc
or
js,pn
in
push
sub
mov
and
push
rclb
mov
xchg
clc
mov
add
test
xor
insl
stos
cmp
cmp
into
push
das
stos
int3
dec
shrb
adc
mov
scas
aaa
push
cmp
pop
push
xor
call
gs
cmc
xor
push
pop
out
test
data16
jmp
cltd
insl
hlt
sub
lret
clc
xchg
fisubrs
pusha
jno
loop
test
add
test
inc
push
jb
jge
mov
iret
mov
ret
xor
adc
mov
push
pushf
xchg
jbe
pushf
inc
fists
cli
xchg
sti
jle
push
testb
inc
mov
pop
push
das
test
jbe
ret
inc
mov
movsb
shr
test
pop
push
test
xor
cltd
repnz
jno
mov
das
or
push
in
rolb
ja
pop
ret
push
jge
orps
test
mov
xchg
sarl
pop
cmp
test
dec
adc
ljmp
xchg
mov
addr16
mov
or
xchg
xor
mov
icebp
jo
mov
cld
in
xor
pusha
nop
xor
xchg
dec
lcall
aaa
out
push
rcrl
stos
mov
push
jne
mov
ds
xor
jae
push
fcmovb
mov
and
and
mov
mov
sbb
scas
movsb
cli
mov
pop
cwtl
add
xchg
pop
scas
lods
mov
mov
hlt
mov
dec
inc
lret
data16
add
adc
inc
rolb
sbb
push
fsts
hlt
xchg
mov
mov
xchg
and
and
ret
aam
insl
out
aas
inc
mov
pushf
mov
or
cmp
jecxz
pushf
or
addb
lock
xor
push
dec
aam
int
imul
sbb
cmp
dec
int
ret
mov
aas
push
fnstsw
jo
push
sub
stos
pop
hlt
les
leave
sub
ja
mov
sbb
jne
das
std
subl
test
xchg
xor
or
scas
sbb
in
pop
out
push
hlt
jb
sub
jne
fistpl
mov
jge
lds
aas
or
shlb
jp
push
inc
xchg
or
lret
fs
inc
adc
jo
mov
pop
in
out
jne
scas
adc
sub
sbb
out
arpl
xchg
hlt
pop
pop
mov
sbb
xchg
prefetch
repnz
push
mov
push
adc
mov
xor
pop
cmp
pop
leave
daa
inc
testl
scas
push
sub
scas
or
in
cli
push
fadds
ret
iret
mov
and
andb
out
lcall
push
mov
in
sub
cli
sub
les
test
iret
and
push
jge
loope
test
add
mov
adc
cmp
pop
scas
add
insb
test
mov
cltd
adc
in
cmp
and
xchg
mov
and
sub
loop
negl
dec
and
movsb
sarb
repnz
fcmovbe
pop
xchg
out
add
test
adc
das
mov
cmp
cmp
mov
jmp
test
stc
aaa
jmp
or
push
dec
inc
xchg
int
mov
and
cmp
aad
jmp
pminsw
icebp
sbb
in
push
repz
fisubs
xchg
js
add
mov
into
or
iret
stos
fsts
cli
push
add
push
add
lret
fabs
sub
sbb
inc
jge
adcl
push
rcrl
pushf
inc
jne
pop
hlt
in
dec
ljmp
das
and
fistl
xchg
mov
or
daa
or
aas
jp
dec
daa
mov
mov
mul
mov
or
out
ja
jle
sarl
ror
adc
xor
mov
xchg
jmp
add
dec
dec
add
inc
cmp
sahf
loop
test
cmpsb
imul
sub
mov
mov
push
pop
lods
paddw
push
and
ja
test
mov
sub
loope
jecxz
push
fstpt
cmc
cmpsl
and
dec
lahf
imul
out
mov
aad
fildl
adc
adc
out
add
xlat
in
sub
std
fcomi
push
fdivp
int3
int
sbb
pop
loop
imul
pop
fnsave
add
mov
sar
ret
jmp
cmp
aam
jbe
int
mov
int3
mov
xchg
xor
mov
push
into
jno
stos
inc
vcvtss2si
adc
adc
pop
lea
outsl
lret
into
arpl
jns
mov
aad
xchg
mov
sbb
loope
pop
adc
sub
fsub
int
decl
sub
mov
pop
and
inc
cmc
xchg
pop
sub
pop
pusha
jae
cs
les
rcl
dec
xor
mov
cmp
fisttpl
loopne
push
inc
lods
pop
das
icebp
cld
cmp
daa
push
mov
sbb
negb
aaa
and
sub
push
in
dec
lods
push
jl
inc
add
push
mov
inc
add
fchs
addr16
mov
je
cmpsb
xchg
adc
test
push
dec
mov
push
into
setg
mov
fmull
mov
iret
imul
sub
test
push
daa
jle
cmp
loope
stc
js
cmp
test
sub
ss
xor
mov
mov
cmpsl
sub
mov
add
inc
dec
cmpsl
pop
insb
add
xchg
pop
pop
and
popa
ds
ret
mov
jmp
add
inc
xlat
ljmp
pop
je
data16
fildl
adc
mov
std
in
aam
subl
jg
and
sti
mov
xchg
pop
push
adc
mov
add
cli
fdivl
lods
mov
ljmp
push
push
mov
outsb
xor
movsb
rcr
push
xchg
cs
mov
ja
shll
cwtl
jecxz
pop
stos
insl
inc
dec
push
insb
jl
dec
les
mov
pushf
mov
bound
shlb
or
mov
sbb
or
lret
xor
mov
or
shrb
int3
ds
dec
hlt
es
out
jns
inc
mov
add
xlat
mov
push
sub
mov
xchg
jl
insl
repz
into
xor
mov
mov
sarl
xchg
inc
sub
push
mov
movsb
mov
sbb
lcall
aam
out
pop
lahf
ja
popf
dec
xorb
xchg
in
loop
divb
test
mov
jnp
pop
lret
loop
mov
movsl
or
mov
add
cs
insl
aad
xor
mov
test
gs
fistl
inc
js
loop
jnp
and
inc
pusha
insl
popa
push
stc
sbb
sub
and
and
rolb
movb
sbb
in
mov
mov
mov
cmp
dec
shrb
shlb
jmp
or
dec
xchg
icebp
adc
push
add
mov
dec
clc
xchg
jb
push
imull
push
pop
dec
xchg
mov
int3
fmuls
cmp
cld
popf
inc
pop
arpl
mov
or
jmp
xchg
adc
mov
vpsubd
mov
into
xor
aaa
sarl
jp
mov
dec
jo
cwtl
repnz
fisubrl
js
add
xchg
mov
and
jmp
mov
movsb
and
push
and
shlb
inc
mov
sahf
popf
pushf
jno
mov
xor
xchg
mov
inc
mov
jmp
cli
jg
stos
mov
adc
adc
sub
dec
sub
mov
push
aaa
mov
lret
xchg
pop
test
fimuls
loop
inc
mov
cli
push
stos
mov
shll
in
imul
in
xor
popa
pop
icebp
dec
shrb
sub
mov
in
mov
push
and
filds
ret
sahf
xor
orb
movsl
cmp
nop
stos
sbb
sub
inc
sarb
pop
push
mov
inc
mul
sub
and
sbb
jmp
push
repz
cld
das
ficoml
mov
shl
mov
fdivrl
fstps
pop
adc
and
mov
pop
inc
cltd
shrl
iret
sub
fistpl
cmp
sub
dec
push
lcall
cmp
jnp
das
scas
imulb
sub
lret
or
mov
xchg
js
sbb
fadd
test
sub
pop
push
repz
xchg
lcall
add
and
add
xchg
icebp
sbb
or
outsb
mov
pop
mov
popf
mov
xchg
leave
js
sub
and
cwtl
dec
jp
add
sahf
in
jo
or
jns
ss
or
xchg
and
mov
xlat
xor
jbe
ljmp
and
in
das
clc
or
mov
enter
and
mov
push
dec
push
push
jge
jns
divl
add
adc
pop
sub
xlat
lahf
lods
add
add
test
push
cmp
mov
lods
mov
sub
cmpb
fbstp
lods
jge
repz
lock
and
inc
fwait
ja
fidivl
dec
mov
sbbb
test
inc
pushf
xchg
jo
repz
cmp
and
repnz
xchg
xor
xor
subl
dec
test
in
xor
xchg
je
sub
dec
or
sbb
scas
xor
jle
rcrl
xor
dec
loope
mov
xlat
loop
adc
xor
ljmp
mov
dec
push
iret
insl
cltd
sbbb
add
outsb
js
sbb
outsb
ljmp
js
jmp
das
mov
les
test
xchg
xchg
and
div
jmp
cmpsb
data16
rcll
pop
popa
loope
mov
data16
or
jmp
mov
aas
add
add
dec
mov
mov
int3
outsb
outsb
rcll
cmp
fcoml
loope
repz
add
mov
sub
in
or
xor
pop
fsubl
pop
rorl
mov
lock
insl
mov
lea
in
mov
aas
nop
daa
add
inc
sbb
lea
out
out
test
bound
insb
mov
dec
or
inc
loop
sbb
outsb
cs
sub
popf
sub
je
lret
sub
bound
aas
lret
adcb
arpl
push
dec
push
pop
mov
add
stos
push
xor
stos
xchg
aad
repz
xor
inc
push
mov
movsb
add
and
mov
and
movsb
movsb
inc
test
ja
es
xchg
jno
push
scas
stc
xchg
ss
les
inc
lods
xlat
and
jbe
sbb
pop
mov
sti
adc
jl
test
into
int3
fistpll
jecxz
sahf
cltd
xchg
sbb
lods
inc
cmp
leave
dec
lret
add
sti
pop
dec
aas
jnp
adc
pop
push
pop
jmp
dec
sbb
mov
cmp
mov
movsl
sahf
stc
lods
pop
jb
push
mov
xor
xchg
mov
shlb
push
or
js
subb
fisubrs
imul
xlat
cmpsl
lcall
addr16
mov
notb
repnz
fistl
xor
adc
mov
pushw
adc
push
xor
push
sub
mov
push
xor
push
repnz
ror
adc
call
pop
ds
aad
ss
fnstsw
fsubp
arpl
jl
and
mov
dec
or
stc
inc
aam
xor
lahf
fdivs
push
mov
xor
sbb
mov
repnz
mov
jo
push
or
dec
push
xor
jmp
or
cmp
adc
mov
cmpsl
lods
ja
xchg
sbb
push
mov
xchg
stc
lock
cwtl
lods
outsl
mov
mov
dec
sbb
outsb
jle
or
shll
bound
mov
std
faddl
pop
iret
push
xor
lods
ljmp
lret
push
pop
mov
mov
push
mov
push
out
and
xor
dec
and
push
add
push
fdivp
inc
imul
sub
pmaxub
aam
jne
lret
cwtl
fs
cmpsl
outsb
jno
mov
imul
mov
nop
xchg
cwtl
jns
sahf
push
and
cmpsb
inc
or
int
mov
imul
push
in
cmpsl
mov
mov
out
mov
sbb
fadd
adc
inc
int3
addr16
pop
or
xchg
inc
sbb
sti
mov
popa
in
push
sti
adc
jb
add
mov
ret
inc
mov
arpl
adc
jecxz
sarb
push
nop
lret
ds
push
add
aam
dec
daa
in
push
mov
and
pop
jle
loope
jo
mov
clc
ret
iret
add
sbb
lret
xor
cmp
add
loop
lods
sbb
cmpsl
je
shlb
js
push
mov
jecxz
cli
popf
push
push
lahf
fcmovnb
cmpsl
dec
push
add
hlt
pop
loope
jno
imul
insb
mov
inc
inc
idivl
int
push
mov
pushf
daa
pop
dec
popa
inc
push
add
or
ss
xor
sbb
and
loope
xor
dec
je
jg
lods
into
cmp
call
fcomp
fsts
subb
mov
pop
pop
mov
pop
inc
lock
mov
cld
popl
sti
xor
fidivs
push
push
repnz
mov
and
pop
jno
add
scas
out
flds
scas
push
jmp
stos
daa
fsubl
ja
add
xor
or
and
xor
xorb
xchg
and
out
jg
mov
into
xor
and
or
ret
es
aaa
jbe
push
sub
jge
je
mov
fisubs
sub
stos
dec
lahf
nop
xlat
adc
mov
push
imul
mov
pop
jecxz
outsb
jae
dec
inc
lds
clc
or
mov
inc
adc
mov
or
gs
sbb
push
out
cwtl
xor
rcll
jle
in
dec
sti
iret
aas
dec
push
lahf
popa
inc
lret
jne
mov
cmp
test
push
add
push
addb
push
mov
sub
mov
mov
subl
add
xchg
xchg
push
jns
xor
nop
mov
dec
cmp
pusha
int
in
cmpsl
push
cs
or
xchg
xor
jmp
subb
repz
daa
jnp
mov
fidivl
push
rorl
mov
lods
fadd
jl
mov
rclb
rolb
dec
sub
xorb
neg
push
cmp
jns
fcomp
xor
and
int
xchg
adcl
lcall
or
lret
fwait
mov
lcall
jmp
sub
cmp
xchg
jbe
ljmp
adc
inc
mov
scas
push
das
int
add
adc
cwtl
out
pop
pop
push
mov
pop
loope
xor
dec
and
and
cli
loop
adc
mov
fdivl
iret
out
push
jle
sub
jle
stc
sbb
mov
loop
bound
iret
jle
push
inc
push
inc
cmp
dec
jecxz
mov
sbb
dec
inc
jge
fisttps
dec
xchg
xor
dec
pop
loope
xor
fcomps
cwtl
pop
negl
gs
pushl
mov
shr
and
cmp
scas
cmpsl
push
mov
cmp
and
xchg
loop
or
or
nop
adc
cltd
dec
movsb
frstor
add
aas
sahf
or
rcr
mov
jmp
push
in
cltd
jmp
xor
test
push
cmovo
push
add
daa
mov
sbb
sbb
inc
adc
test
fisttpll
dec
dec
dec
sub
fsts
or
xchg
lock
fistps
or
inc
test
add
cmp
cmp
mov
cmp
sbb
push
ret
mov
push
andb
sahf
pop
das
pop
push
sbb
andl
inc
shrl
fstps
lcall
xor
sti
inc
pop
mov
sti
jne
mov
lret
adc
dec
cli
jnp
or
das
cmp
pop
pop
sti
mov
sub
xchg
lret
dec
shrb
push
sbb
les
sub
test
aaa
or
push
leave
fs
mov
mov
lods
sub
xor
xchg
xor
ror
and
insl
shll
ret
jecxz
shlb
ds
outsl
bound
push
jp
jmp
psubsw
aaa
insb
and
inc
fs
or
stos
jae
jne
lahf
arpl
stos
out
push
xchg
or
repz
mov
xchg
cmpsb
push
or
mov
mov
mov
or
sti
add
in
cmp
addr16
cwtl
lds
jl
mov
hlt
imul
sub
ret
out
lret
sti
xchg
ret
jge
and
insl
jg
push
hlt
or
jo
fs
out
add
jl
lock
pop
loopne
jecxz
ds
xor
ret
loopne
cmc
and
dec
outsb
jb
shlb
mov
imul
scas
mov
mov
mov
xchg
dec
pop
xorb
inc
stc
mov
cli
xchg
mov
lret
pop
dec
jae
insb
lds
jns
cmp
pop
cs
rcll
pusha
and
mov
xchg
cld
mov
test
shll
or
leave
sub
cwtl
fstps
rclb
push
in
xor
scas
sub
js
and
xchg
stos
sub
or
fsubrl
push
lock
or
sub
mov
js
jmp
test
push
cmc
cmpsl
aaa
aam
sbb
cmp
inc
mov
shrl
ficoml
lret
mov
rcrl
dec
dec
fstp
fsubr
xor
scas
in
loop
outsl
and
scas
mov
mov
pop
fdivl
xchg
hlt
push
mov
cwtl
mov
fdivrs
jno
push
jae
dec
std
das
inc
pinsrw
and
lea
push
out
xchg
addr16
xchg
es
mov
pop
sub
and
fmuls
adc
mov
insl
dec
mov
adc
rorl
cmp
adc
fstp
pop
pop
jbe
xor
movsl
add
scas
addb
inc
dec
push
in
movsl
fwait
out
push
mov
push
mov
pusha
and
xor
pop
pop
adc
pop
cmpsl
sub
sbb
inc
push
mov
test
push
dec
stos
and
fdiv
sbb
push
adc
or
clflush
sarl
mov
je
dec
mov
jmp
xor
mov
push
test
jns
xchg
negl
sbb
test
fldt
or
sub
popf
cltd
mov
roll
mov
push
xchg
mov
stos
mov
mov
inc
xchg
adc
xchg
or
jnp
cmpsb
rep
sub
subb
shll
xor
jle
sub
push
lea
lods
pop
add
inc
pop
dec
pop
inc
sub
or
daa
inc
mov
pop
xchg
jle
push
fsubp
or
dec
lahf
jge
clc
incl
icebp
out
or
aad
int
sbb
ljmp
mov
cmp
fsub
sub
lahf
shll
outsb
jae
xor
pusha
adc
sbb
sbb
hlt
mov
push
mov
call
bound
push
loope
push
mov
leave
sub
pop
push
jl
xchg
mov
leave
dec
jo
jo
mov
add
mov
sub
dec
nop
mov
jl
mov
aam
cmp
jne
fbld
dec
outsl
mov
test
cmp
imul
pop
pop
hlt
dec
cmp
add
pop
sbb
add
fs
add
addr16
sub
nop
fcoml
into
mov
fldenv
je
rclb
xor
icebp
xor
imul
dec
or
inc
gs
test
push
ja
in
jbe
leave
inc
mov
lcall
int3
movsb
sti
cmp
push
out
jne
in
js
dec
lahf
pop
cltd
sbb
jbe
or
pop
push
or
push
xchg
mov
stos
pop
sub
mov
fs
js
push
sub
out
rorb
xchg
data16
shll
fists
push
aaa
fcmovbe
lock
mov
mov
shll
aas
mov
xlat
jg
mov
pop
xor
outsl
jb
xor
int3
imul
es
lods
loope
loop
dec
mov
js
inc
jb
add
sbb
or
aam
inc
push
sbb
push
add
xchg
sub
mov
xchg
xor
jns
xchg
dec
xchg
push
aaa
popa
mov
add
push
pop
dec
jecxz
add
fcmovnbe
pop
sbb
push
cmp
jl
in
xchg
xor
addl
nop
in
mov
xor
adc
pop
push
add
xchg
push
fists
add
ret
call
std
cmp
mov
push
cmp
loopne
dec
pop
data16
pop
dec
loop
mov
sbb
mov
cld
sarb
inc
out
cmp
hlt
ret
jecxz
push
data16
xor
das
jne
xor
cmp
sub
cld
cmp
ret
out
arpl
mov
sub
adcl
cmp
loop
jo
and
and
daa
out
cmpsb
jg
and
ljmp
mov
inc
repnz
icebp
push
or
rcll
cmp
or
fcoml
insb
push
mov
jno
outsb
ffree
pop
mov
pop
or
test
jmp
jnp
jecxz
ljmp
js
adc
pop
dec
push
xchg
das
test
dec
fadd
loopne
ds
mov
or
rorb
inc
jmp
xchg
leave
imul
dec
jne
shrb
cmp
sbb
popf
loopne
mov
add
or
test
int
data16
out
scas
inc
xor
xchg
mov
cmpsl
sbb
scas
mov
out
add
push
xor
mov
rolb
xchg
es
fisubl
mov
pop
popl
aam
dec
cmp
out
std
test
int3
fstl
or
cmp
xchg
outsl
rolb
int
movsb
xor
test
jns
mov
pop
testb
into
and
xor
cmp
inc
inc
sub
jnp
add
imul
add
iret
notb
jle
and
addr16
adc
xor
sbb
mov
sub
aam
lcall
lea
xchg
push
dec
enter
test
mov
pop
push
jmp
jmp
int3
loop
dec
and
enter
push
mov
mov
adc
add
fnstsw
xchg
sbb
inc
jb
clc
lods
cld
pop
mov
jnp
push
sbb
xchg
pushf
lret
clc
out
divb
cli
push
nop
add
cld
out
dec
fwait
pop
fadds
and
arpl
rcl
push
popa
insl
js
sub
clc
repz
jne
mov
test
pusha
mov
outsl
jge
xchg
mov
xor
xchg
test
in
add
jle
push
lds
mov
jl
ljmp
jnp
push
mov
pop
aas
stos
mov
pop
mov
addr16
out
jp
push
jno
pop
xor
xor
test
lret
movsl
repnz
fwait
xorb
mov
and
sbb
add
fs
lahf
push
push
dec
dec
xor
loopne
imul
lret
sub
add
cwtl
movsl
adc
jo
xor
dec
mov
out
jmp
jecxz
lret
testb
inc
imul
in
clc
fiadds
fsubl
or
inc
mov
adc
inc
mov
scas
addl
or
xchg
xor
pop
leave
sub
xor
mov
ja
ds
jg
adc
sbb
lock
ret
push
cwtl
loop
pop
lahf
mov
idivb
sbb
cli
sub
cli
mov
bound
stos
addb
or
jo
jnp
iret
push
adc
sub
scas
stos
cmp
xchg
mov
add
add
sarl
xor
in
mov
cmp
cld
sub
xchg
add
jg
ret
js
pop
or
int3
sbb
sub
outsl
sti
pop
cs
xor
ret
sub
jno
push
adc
fisttpll
push
cmp
mov
jbe
popa
ficoms
cmpsl
xlat
inc
push
lock
imul
push
ljmp
dec
cmpsl
add
shr
in
test
push
push
xor
xchg
fs
fisttpl
insl
data16
fisubrl
sub
icebp
outsl
push
sahf
dec
mov
mov
mov
mov
xor
xor
int
xor
divl
jg
pop
jge
cli
ss
pop
and
cmp
xchg
and
dec
sub
mov
in
sbb
mov
xchg
jae
in
adc
xor
outsb
inc
mov
adc
push
adc
decb
rclb
adc
push
pop
test
or
out
sbb
push
xchg
sub
fsubs
in
lock
or
into
loopne
into
mov
imul
mov
mov
cvtdq2ps
fcoml
mov
jecxz
adc
or
sub
es
xorb
ds
adc
mov
inc
sbbb
mov
mov
std
xchg
test
sbb
ljmp
cmp
in
in
dec
jbe
sbb
loop
imul
mov
jle
mov
jno
jle
sub
inc
cld
pop
inc
insl
outsb
sub
or
aaa
stos
loop
and
pop
sub
xchg
stc
mov
xor
push
pop
and
lahf
jl
cmp
adcb
mov
daa
test
loop
out
sbbl
scas
add
sbb
jns
not
pop
lret
aas
xchg
int3
jne
imul
push
test
cmp
sub
cmc
mov
fcmovne
and
inc
frstor
add
test
cs
push
shrl
jg
repz
jns
push
mov
jle
sarb
mov
mov
push
sbb
inc
jg
rcrl
mov
test
les
int3
fnstcw
pop
dec
or
sub
and
add
les
sbb
mov
lods
cmp
sbb
ret
sub
adc
out
repz
popa
outsb
lcall
sbb
mov
fsubrl
pop
push
nop
pusha
dec
sub
lea
adc
lods
mov
into
es
mov
jnp
cmp
adc
shrl
in
ds
inc
pop
pop
jnp
dec
mov
aad
mov
mov
inc
outsb
rol
cmp
jbe
or
cmp
clc
mov
scas
and
inc
test
jg
or
fcmovnbe
or
or
imul
jb
int
shrl
cmpl
rclb
es
or
dec
sbb
out
xchg
bound
les
sbb
pop
nop
cmpsl
add
lcall
icebp
and
mov
sbb
xorl
insl
fiadds
push
sbb
adcl
jp
sbb
or
sub
fistps
xor
pop
jmp
dec
sub
sub
mov
test
sbb
outsl
mov
mov
insb
sub
outsl
cmpsl
adc
push
in
add
or
bnd
movb
lret
test
sub
xchg
add
movsb
add
shrl
adc
std
fists
out
movsb
jp
xchg
popa
ljmp
movsb
jg
jbe
xchg
mov
pop
pop
mov
and
movsl
push
jae
fcoms
jle,pt
sbb
sbb
sub
jne
jbe
leave
mov
sub
je
and
or
sub
dec
movsl
cmpsb
ljmp
out
stos
popa
and
push
xor
popa
sti
and
dec
mov
cli
fisttps
adc
lret
int
mov
loope
out
mov
in
mov
xor
fnstcw
inc
xor
cmp
cmpsl
scas
jecxz
sub
js
lea
incb
dec
leave
adc
inc
sbb
and
mov
loop
mov
sbb
sub
mov
adc
cli
call
or
inc
sub
push
out
shl
fucomp
or
out
jmp
or
mov
cmp
sbb
pusha
movl
sub
std
imul
rdtsc
iret
xlat
ss
sbb
mov
sbb
pop
jno
push
mov
mov
dec
loope
stc
cwtl
mov
inc
jecxz
ret
pushf
inc
movsb
in
xor
shr
repnz
insb
shrb
mov
scas
in
aam
int
lret
pop
scas
loope
mov
xchg
lods
xor
fcomps
out
adc
add
cmp
fcoms
cmpsb
imul
jl
shlb
test
repnz
idiv
mov
add
cmc
and
sti
enter
sbb
shlb
loope
jl
and
not
mull
and
popf
push
pop
fnsave
fildll
cmp
add
pop
mov
add
pop
push
test
dec
add
pusha
pusha
test
popf
aas
test
clc
test
fwait
cmp
lods
aam
shll
mov
lods
outsb
mov
or
mov
adc
and
dec
sub
popf
aaa
mov
das
sub
pop
fucomip
aad
mov
sahf
and
sti
mov
shlb
mov
mov
fucomi
in
push
inc
sbb
andl
cmp
inc
xchg
into
add
les
sbbl
test
std
mov
pop
daa
call
mov
sub
push
loop
lahf
mov
icebp
hlt
movsb
and
fcmovbe
dec
or
cld
out
sub
dec
movsl
xchg
rcll
push
push
jg
mov
sub
jg
icebp
movsb
dec
scas
xlat
leave
mov
pop
dec
mov
adc
out
push
cmp
scas
test
pushf
jp
push
loope
clc
jns
jo
movsb
jecxz
mov
mov
xor
xchg
fcoms
insl
les
or
or
cltd
lods
cmp
mov
or
dec
test
mov
push
cwtl
shrl
sbb
stos
cmpsb
xlat
sub
sbbl
mov
adc
lret
add
je
or
dec
popa
adc
dec
xchg
xor
xchg
inc
dec
in
xchg
sbb
cli
mov
shll
inc
xor
mov
je
clc
xor
sbb
jb
icebp
cmpsl
jnp
addr16
jecxz
out
cmp
mov
jbe
inc
pop
mov
xorb
gs
pop
jns
scas
pusha
xor
ds
jb
pop
mov
push
rcrl
jl
cld
or
pusha
in
xchg
and
pop
push
enter
xchg
xchg
pop
jmp
jbe
adc
int3
leave
arpl
out
inc
lods
dec
pop
ds
stc
loope
insl
lcall
clc
pop
jbe
out
test
xchg
and
addr16
inc
sarl
popf
mov
arpl
add
call
inc
arpl
les
add
mov
cli
cltd
arpl
add
imul
out
jg
jo
add
lret
pop
mov
jae
lret
les
aad
mov
adc
lock
or
popa
mov
sbb
int
call
fisubl
and
hlt
in
in
pop
pop
cmp
dec
aaa
sbb
pop
aaa
punpcklwd
shlb
push
xor
aad
inc
push
test
jbe
jbe
shll
fyl2x
pop
xor
gs
sub
xchg
das
inc
add
xchg
xor
jno
and
cmp
jne
jb
mov
adc
xlat
jbe
cmpsb
out
orl
sbb
xor
add
inc
mov
jbe
xor
in
mov
cmpsl
adc
pop
pop
mov
sahf
aas
aaa
aaa
stos
bound
cmpl
jl
pop
lea
pop
jae
cli
cmp
jns
outsb
sbb
pusha
mov
insl
jp
and
test
sub
cli
mov
mov
scas
adc
pop
jo
rol
pop
push
out
xor
jmp
mov
pop
add
out
add
mov
das
lods
sbb
loopne
or
lock
pop
cvtps2pi
jecxz
insb
add
jle
cmp
sub
lods
scas
in
frstor
cmpsb
pop
push
sub
sbb
dec
fnstsw
push
add
hlt
mov
out
cli
pop
jbe
cmp
cmpsl
xchg
iret
mov
dec
mov
adc
sub
shll
scas
or
sbb
mov
xor
add
loopne
mov
dec
call
adc
inc
mov
insl
sarb
mov
cld
aas
shlb
loope
mulb
push
cld
out
mov
jns
push
add
mov
mov
in
jnp
punpcklbw
movsb
cmp
outsl
aaa
mov
pop
jle
mov
lods
shll
ret
push
sbb
push
sub
mov
mov
les
testb
or
mov
dec
inc
cld
push
int3
cli
insl
mov
sti
imul
push
xchg
aaa
pop
jl
repnz
movsl
cmp
lret
jmp
fbstp
push
sbb
mov
jbe
and
mov
and
cmp
jge
mov
xor
mov
pop
sbb
adc
lea
pop
in
mov
push
pop
data16
les
fs
jmp
xchg
jge
sahf
iret
jecxz
or
jae
mov
ss
sub
lret
pop
xchg
in
sub
pop
mov
mov
shrl
incb
stc
mov
mov
or
jnp
push
dec
sub
scas
hlt
outsb
stc
xchg
sub
clc
mov
fdivrs
sub
mov
movsb
mov
pop
sub
push
lret
aad
das
imul
add
imul
inc
lret
mov
push
cmpsb
mov
cmp
loop
mov
xor
lret
scas
push
jae
mov
fadds
jns
mov
scas
andl
jmp
mov
mov
pusha
test
push
test
xchg
inc
arpl
std
cld
xor
rol
lret
sti
aad
fcomps
push
adc
jne
and
cmpsl
xorb
jo
dec
outsl
in
jle
and
sub
neg
fs
adc
push
cmp
inc
fistpl
sub
mov
repz
in
pop
out
push
imul
mov
add
les
mov
inc
pop
clc
outsb
popf
aaa
cs
add
and
xor
sbb
sub
mov
jno
inc
stc
addr16
into
icebp
hlt
mov
adcb
lcall
aaa
mov
nop
imul
dec
ret
xor
stos
pop
fwait
cmpsb
pop
inc
cmp
add
mov
xor
jne
and
mov
xchg
nop
mov
lahf
jl
ror
fs
inc
sbb
or
mov
pop
sbb
stos
lahf
cmpsb
adc
xchg
jns
fs
fsub
cli
xchg
xor
mov
xor
int
fs
cmp
inc
shrl
add
psubb
nop
mov
lahf
adc
pop
inc
out
xchg
sub
sub
sbb
and
dec
jle
repz
lods
movshdup
xor
pop
shld
push
jp
addb
es
ficompl
daa
xchg
scas
adc
cmc
pushf
adc
hlt
das
in
into
push
push
inc
sti
xchg
enter
xchg
sbbl
fcoml
jle
aam
xor
in
push
push
data16
xchg
in
pusha
stc
cmp
mov
or
mov
ja
mov
out
cmp
sti
sub
int3
jge
adc
adc
dec
nop
inc
and
jae
push
jge
mov
cmp
mov
sbb
push
push
bound
add
jp
dec
popa
mov
ret
or
cmp
ljmp
in
iret
int3
fisubl
andl
and
mov
mov
pop
mov
pop
scas
mov
pop
fldt
leave
mov
pop
push
enter
push
sbbl
rorl
jne
imul
sub
cmp
and
scas
sahf
push
cmpsl
add
fisttps
ficomps
mov
and
and
repnz
mov
clc
xchg
clc
fimuls
fs
or
dec
int3
test
ljmp
and
pop
add
cmpsb
repnz
lods
mov
cwtl
enter
out
bound
add
push
xlat
and
sbb
pop
mov
out
and
loop
push
lock
mov
das
or
sahf
dec
ja
push
xchg
addr16
and
pop
lods
fsubrs
or
loopne
fiadds
clc
dec
scas
mov
ficoml
arpl
stos
mov
and
cvtps2pd
sub
insl
xor
pop
std
xchg
fildll
mov
imul
mov
pop
in
gs
clc
mov
sbb
jp
adc
shl
push
test
dec
imul
out
push
mov
jno
xor
xchg
stc
adc
xor
jecxz
dec
pop
xor
inc
xchg
fs
dec
adc
dec
aad
xor
add
in
push
inc
aaa
repz
push
mov
sub
mov
or
imul
stc
popa
cmc
popl
loope
mov
ror
iret
push
popf
dec
inc
rcr
hlt
xor
out
sti
inc
inc
enter
fdivs
mov
rdtsc
mov
pusha
push
xor
addl
xor
xchg
les
lcall
scas
aad
aam
xor
imul
inc
test
mov
xlat
bound
add
outsb
mov
outsl
add
pop
aaa
aaa
jo
insl
pop
mov
fmul
mov
out
or
sbb
data16
and
xor
xor
fidivrs
fcoml
std
mov
jge
inc
and
xchg
mov
sbb
popf
cld
pop
sub
push
jbe
out
sbb
call
mov
filds
xchg
test
negl
shll
jns
popf
cmp
pop
pop
insl
cmpsb
or
xor
lahf
imul
dec
into
dec
roll
dec
mov
stc
xor
xchg
push
mull
dec
outsl
ficomps
dec
in
cmp
xchg
push
imul
sbb
cmpsb
es
and
fwait
cmp
dec
call
movsb
clc
inc
xchg
dec
jmp
addl
fisubs
push
test
aam
stos
cmpsl
mov
dec
mov
xchg
xchg
jno
loope
cmp
dec
lahf
fldl
dec
imul
mov
or
fwait
dec
movsl
int
adc
xchg
insb
lds
sub
test
pop
aad
adc
adc
out
jmp
imul
repz
fcompl
dec
mov
jnp
jmp
adc
popa
into
adc
push
xchg
jg
xchg
clc
mov
enter
lods
lret
jecxz
loopne
loop
mov
je
stos
outsb
xchg
inc
lds
cmp
popa
rorb
andb
idiv
pop
dec
cs
jbe
rolb
lods
pop
xor
xchg
imul
jl
sbb
imul
adc
jg
xchg
mov
push
and
aad
idivb
dec
push
dec
lcall
iret
cmp
push
mov
jecxz
fucom
outsl
sub
mov
push
in
shll
xor
adc
xchg
lds
imul
or
lods
sub
lea
push
insl
jmp
ret
movsl
scas
pop
popa
push
stos
sbb
rcl
lock
sbb
rorl
push
inc
xchg
inc
adc
sti
fsubrs
add
pop
mov
addr16
lcall
and
sti
int3
xor
mov
inc
jnp
aaa
cmc
xor
mov
lahf
or
mov
lock
mov
insl
and
enter
mov
mov
push
mov
push
lea
andb
pushf
lcall
in
rcrb
push
push
mov
cmp
fsts
js
ja
mov
enter
sub
mov
mov
repnz
xor
fwait
mov
dec
movsb
arpl
cmp
jae
or
movsl
out
ja
mov
stc
cmpsl
mov
jne
pop
push
shrl
lock
add
stos
movsb
test
repz
outsb
dec
lock
dec
jge
jmp
and
jnp
sti
adc
cmp
dec
inc
sbb
leave
mov
sbb
dec
mov
push
mov
lahf
xor
cltd
jbe
xor
lcall
sbb
cwtl
xchg
cmp
jp
sub
xlat
rcrl
in
and
mov
lea
and
das
inc
xchg
mov
imul
arpl
cwtl
loop
shrl
pop
test
scas
aam
lret
out
es
mov
nop
into
or
lods
mov
lcall
lods
repnz
adc
shll
inc
jecxz
pop
sub
clc
daa
sahf
sbb
push
jnp
mov
bound
ret
pop
hlt
fistps
push
scas
mov
adc
pop
popf
fstl
sarl
fsubrp
or
shll
jae
jbe
cli
xor
cli
fldcw
pop
xchg
fidivrs
outsl
add
arpl
mov
int
scas
inc
mov
push
mov
pop
add
push
movsl
leave
sbb
cmc
sub
das
lock
shlb
scas
lahf
mov
cltd
mov
jne
xchg
add
in
js
in
insb
faddp
fnstsw
stos
mov
imul
xorb
pushf
lea
add
sbb
dec
and
and
rolb
jge
nop
mov
jle
push
xor
mov
xchg
int3
mov
std
xchg
loop
ret
push
inc
dec
mov
cmp
fs
test
mov
push
lods
sub
cmp
sbb
ds
cltd
hlt
out
xor
cmc
fs
decl
loopne
lods
jg
dec
das
repnz
xchg
mov
pusha
sbb
enter
fisttpll
push
int
jbe
shll
pushl
adc
mov
cmp
push
xchg
pop
movsl
sub
fdivl
add
sti
in
lahf
test
fistpl
mov
or
out
sbb
movsb
in
je
outsl
cmc
sahf
popf
fcoml
cmpl
xchg
daa
adc
or
mov
inc
test
push
loop
das
mov
xor
lcall
and
push
mov
and
jne
lret
sbb
imul
stc
xchg
or
rol
dec
jae
cmp
enter
sub
ss
mov
imul
mov
nop
or
xor
cmp
sbb
arpl
lock
dec
sub
out
dec
add
les
lods
and
pop
xchg
mov
adc
clc
jne
inc
int3
push
adc
cltd
dec
xor
and
gs
mov
outsb
fildl
das
subb
jl
hlt
outsb
pop
lds
cmp
andb
and
xchg
or
mov
sbb
xchg
fs
sub
inc
stc
iret
and
and
sub
lds
lods
leave
cmp
sub
fwait
jbe
outsl
stc
fidivl
sbb
add
xadd
rdtscp
jg
xchg
pop
ss
add
jmp
scas
push
stc
pop
es
mov
push
stos
sub
dec
test
repz
sbb
xchg
scas
xchg
ret
cwtl
adcb
popa
adc
cmp
sub
rorb
xor
push
or
and
xchg
mov
cmpsb
pop
push
jg
or
adc
addl
adc
add
mov
fisubs
imul
xchg
lret
in
or
and
dec
adc
pop
jge
jne
xchg
mov
mov
js
jmp
lahf
jp
in
outsb
daa
add
inc
fidivrs
inc
adc
cli
test
hlt
jecxz
rcll
call
shlb
ffreep
imul
mov
push
js
imul
adc
mov
mov
bound
jle
inc
xor
mov
ret
mov
lret
pushw
enter
xor
lret
jno
jo
mov
pop
ret
stos
ret
shll
ret
lods
mov
enter
out
movb
pop
pop
in
pop
out
push
jle
imulb
fs
dec
in
pop
not
xchg
mov
adc
out
fcoms
inc
fcoms
test
push
dec
xchg
cltd
test
repz
cmpsb
or
mov
or
fwait
mov
cmp
lock
inc
test
cs
push
xlat
and
sub
movsb
add
sub
inc
test
shr
pop
lret
push
stc
aaa
fcmovu
fdivrs
dec
ds
lahf
inc
cmpsl
jnp
jb
sub
in
cmpsl
nop
jp
outsl
enter
in
lods
dec
rorl
mov
and
xlat
imul
orb
and
mov
mov
rclb
inc
lahf
in
daa
mov
cmp
inc
sbb
dec
ds
sarl
cwtl
sbb
imul
dec
fildl
mov
int3
xchg
sbb
jne
addr16
inc
pop
lock
ss
pop
add
xchg
inc
xor
dec
add
mov
cmp
arpl
sub
dec
mov
cs
cmp
rcr
push
xor
stc
jbe
movsb
andl
mov
pop
xor
dec
scas
adc
push
jle
sbb
adc
movsb
xor
dec
test
in
jge,pn
insl
mov
in
shll
sbb
sahf
push
cmpsb
mov
les
lock
jns
inc
pop
inc
and
jg
add
shl
adc
out
mov
add
mov
inc
cmpsl
push
stc
xchg
dec
decb
push
shll
bswap
pop
dec
call
push
jae
in
sub
leave
mov
test
xchg
in
add
mov
sbb
inc
adc
mov
dec
les
jb
sub
movhps
leave
test
dec
roll
andl
xchg
rclb
scas
ret
push
mov
and
inc
jnp
xor
jp
add
insb
add
hlt
cmpb
jnp
popa
les
jno
or
add
sub
mov
stos
neg
mov
dec
inc
hlt
inc
jne
xchg
dec
adc
lds
and
arpl
dec
lods
sbb
popa
arpl
leave
pop
sub
cltd
mov
sbb
and
pushf
dec
inc
ja
sub
jmp
ret
int3
mov
subl
sub
push
sarb
jecxz
test
pop
mov
pop
aas
stos
mov
dec
sbb
dec
jae
cltd
and
decl
addr16
xchg
jge
stos
jg
sbb
sbb
data16
int
mov
xchg
adc
popa
mov
mov
cmpsb
xchg
cmp
cli
inc
jbe
mov
popf
outsb
mov
ds
push
in
fcompl
xchg
dec
dec
icebp
jne
movsl
cmp
lods
dec
lahf
or
out
popa
lcall
aaa
mov
push
int3
sbb
repz
pmulhuw
bound
insb
enter
int3
dec
adc
stc
sub
mov
rorb
xor
out
jns
sarb
cmp
inc
cli
mov
mov
stos
hlt
adc
fdivr
call
mov
mov
push
mov
cld
jbe
pusha
and
jo
mov
pop
pop
cmp
cltd
push
scas
ljmp
fcoms
mov
insl
cmpsb
dec
sub
nop
outsl
dec
pop
inc
jae
cmp
pushf
lea
push
mov
stos
cmp
mov
cmp
sub
sbb
stos
pop
xor
pushf
mov
adc
daa
in
push
and
xchg
fiadds
pop
rclb
lea
out
xchg
aam
xchg
and
xor
mov
cmp
sub
jecxz
pop
cmp
in
dec
cmp
sub
dec
sbb
inc
bound
adcl
jmp
ret
or
mov
and
gs
popf
movsb
jecxz
popf
fwait
mov
bound
popf
call
outsb
pop
jp
push
inc
sbb
loop
test
mov
fwait
dec
jbe
jp
inc
inc
scas
int
mov
stos
sti
ret
inc
push
pop
dec
mov
jecxz
ret
mov
pop
shl
sub
sub
dec
ficoml
test
push
clc
push
dec
ds
jg
mov
jb
dec
incb
inc
or
in
test
movsl
fs
sub
mov
pushf
shll
fisttpll
leave
pop
mov
xchg
xchg
movsl
cmpl
repz
lahf
iret
out
push
add
dec
or
cmp
pop
int3
das
push
cmpsb
fcmovnu
pop
xor
pop
repz
jno
adc
jnp
xor
push
mov
dec
ret
fistpl
jne
jno
icebp
jp
addb
push
add
mov
cmp
push
test
adc
pop
cmp
sub
sbb
jns
xorb
add
arpl
push
pop
and
pop
mov
orl
pop
adc
popf
icebp
jbe
jno
fwait
xchg
addr16
shl
loope
jns
mov
test
mov
sbb
sub
pop
icebp
je
jecxz
sbb
pop
ret
jmp
dec
lret
mov
xor
pop
jno
and
lods
sbb
jb
cmp
pop
outsb
jmp
dec
ja
jmp
dec
in
fwait
scas
clc
scas
popa
mov
adc
out
sbb
test
and
scas
les
adc
push
pop
sub
push
scas
mov
in
sbb
cmc
xor
mov
mov
insb
mov
in
jne
sarl
movsb
push
sbb
mov
insl
test
mov
push
cmp
xchg
rclb
aas
jae
repz
add
push
arpl
int
or
call
ret
cmp
mov
xor
xlat
dec
sbb
test
leave
je
cmpsl
rcll
in
pop
push
lods
pmulhuw
and
pop
or
fimull
fistpll
iret
dec
lahf
sub
mov
pop
ret
cmp
xchg
insb
sub
in
push
xchg
dec
mov
jecxz
pusha
sahf
aaa
fidivrs
mov
lods
xor
fisubrl
fsubrs
cwtl
ss
dec
mov
dec
add
push
xor
scas
mov
xchg
jae
xor
in
fsub
dec
mov
fst
repz
popf
or
lock
lods
mov
outsb
mov
inc
sub
lret
les
ret
jmp
push
pop
scas
push
sar
push
adc
jl
push
inc
xor
mov
fcoml
fsubr
cs
mov
pop
or
jle
ret
lods
in
dec
popa
int
arpl
out
push
repnz
jg
cmp
push
jge
xor
sub
or
sub
push
faddl
sbb
xor
addr16
scas
mov
inc
and
jo
rcll
jne
sbb
lock
push
fadd
pop
lods
imul
dec
loop
mov
cmpsb
mov
xor
push
addr16
dec
cs
aad
enter
add
stos
les
pusha
rcll
cmp
out
dec
mov
and
inc
das
mov
test
sub
push
pop
scas
adc
das
hlt
daa
iret
add
cmp
out
xchg
mov
fs
popa
movaps
jl
xor
bound
lret
push
push
sahf
push
sbb
sarl
sub
jmp
dec
mov
out
pop
out
mov
xchg
stc
cs
popa
into
adc
lea
and
cmpsb
repnz
mov
and
mov
ss
dec
dec
fimull
sbb
mov
and
rclb
popf
inc
mov
xchg
das
jmp
loope
or
scas
xorb
pushf
js
mov
cmpsb
iret
insl
adc
dec
xchg
das
stc
fs
sub
push
push
aaa
gs
mov
jb
sbb
push
repz
adc
fdivs
vunpckhpd
popa
insl
push
call
inc
and
incl
out
cli
imul
aad
and
in
lcall
nop
aad
dec
jns
add
lods
mov
mov
push
mov
test
out
mov
xchg
xlat
and
mov
push
and
arpl
sub
cs
and
sti
in
jne
sbb
repz
mov
faddp
cmpsl
rclb
sbb
ret
or
xor
movl
pop
lret
subb
lds
mov
mov
or
jg
jmp
je
xchg
add
xchg
ret
xchg
gs
int
inc
xchg
xchg
div
xchg
xchg
iret
das
xor
jg
push
pop
sbb
add
cwtl
mov
xor
mov
xchg
ss
sub
cmp
aam
xchg
xor
mov
sti
arpl
and
stos
push
inc
mov
mov
mov
les
or
pusha
sbb
sub
ja
test
jo
push
test
jae
dec
mov
lahf
cmp
fadds
inc
and
sub
fiaddl
cs
dec
push
jp
pop
mov
xchg
repz
in
dec
flds
lock
mov
mov
pop
js
insb
pop
and
push
rcr
dec
mov
cmp
sbb
xchg
addr16
sarl
cmp
imull
clc
scas
xor
aam
out
sub
jp
mov
fistpll
sub
push
movsl
add
daa
mov
sub
mov
add
pop
jge
mov
int
loope
cli
mov
jno
fs
adc
in
inc
cmp
fists
jbe
jl
push
fadd
jns
aam
in
cmc
loop
jbe
mov
addr16
xchg
sub
aam
lret
pop
mov
ljmp
mov
loopne
and
dec
sarl
jns
dec
data16
jecxz
pop
mov
movsl
nop
test
int3
pop
sti
cmp
into
jecxz
push
out
mov
rcr
or
es
xor
mov
out
paddb
sub
jb
loopne
es
or
clc
or
push
repnz
cmp
stos
test
popf
enter
insb
rcrl
mov
push
iret
adc
in
adc
adc
imul
fwait
out
bound
bound
and
xor
mov
jmp
and
pop
jae
rcrb
imul
daa
cltd
jnp
fildl
inc
sub
mov
pushf
aad
std
push
insl
cli
cmp
call
das
movlps
dec
in
or
sbb
fwait
out
mov
mov
bound
jmp
push
push
xor
cmc
or
pop
jmp
orb
push
mov
divl
loope
outsl
into
int3
int3
jnp
lcall
movsl
outsl
pop
push
jns
or
sahf
shll
mov
or
fcomps
or
shrl
mov
xor
push
mov
cmp
add
addr16
jbe
mov
test
pop
sarl
neg
aas
js
mov
in
push
xor
jo
mov
ret
les
js
xchg
inc
xchg
cmp
je
insl
adc
out
jl
stos
movsb
sub
aas
sbb
cmpsb
jmp
mov
pop
popa
call
add
ljmp
dec
mov
in
xor
adc
fisubs
in
in
cld
pop
pop
push
and
add
pop
pop
mov
cmp
in
fucomip
and
and
mov
mov
dec
mov
andl
mov
leave
mov
cmp
cmpsb
pusha
dec
pop
xor
or
aaa
cmpsl
popa
das
in
inc
inc
test
in
jg
jecxz
pop
test
ds
mov
xchg
cld
and
inc
mov
loop
cmpsl
jnp
push
push
jo
sub
testl
jl
mov
push
sbb
rolb
sarl
cmp
test
cmc
sbb
leave
mov
pusha
ja
adc
test
addr16
lods
ljmp
mov
movsl
cmp
push
sti
mov
jb
xchg
je
fstpl
mov
jnp
in
test
add
mov
int
push
in
and
jb
and
fucom
adc
loopne
mov
outsl
dec
ja
jg
ja
loop
popa
in
popa
inc
dec
lahf
pop
inc
pop
jle
dec
cmp
sub
mov
loop
add
stos
enter
jl
test
inc
jne
test
scas
jecxz
jmp
pop
dec
dec
inc
fstpl
mov
jo
or
and
sbb
jb
ljmp
clc
hlt
loop
adc
test
mov
mov
jp
ljmp
cwtl
or
dec
jns
insb
les
mov
lcall
xor
mov
sarl
pop
push
fwait
in
pop
ss
das
dec
ret
inc
and
outsl
sub
pop
xor
jecxz
dec
arpl
mov
mov
jns
imul
add
aas
popf
and
lcall
inc
push
sbbb
adc
pop
roll
or
mov
loopne
out
add
mov
fsubrs
dec
mov
fcmovnbe
add
cmp
loope
addr16
rolb
mov
ret
push
scas
mov
mov
adc
inc
adc
push
inc
add
mov
scas
adc
es
insb
cli
cld
ret
mov
jmp
or
sbb
ja
xor
push
and
xor
movsl
js
nop
jbe
repnz
mov
lahf
mov
dec
mov
mov
hlt
adc
data16
mov
cmp
inc
or
pop
pushf
mov
add
cli
or
mov
loop
fucomi
popf
jo
pop
push
mov
sub
sbb
mov
scas
push
mov
add
insl
loopne
sub
imulb
stos
add
rcll
leave
pop
pop
pushf
mov
rcll
pop
in
jecxz
cmp
sbb
mov
mov
ds
cmp
inc
jns
outsl
cwtl
repz
call
negb
sbb
dec
or
jne
repz
shrl
test
xchg
int3
or
fildll
jmp
icebp
xchg
jne
test
enter
jae
daa
mov
push
in
jnp
inc
add
in
push
pop
adc
mov
sbb
mov
test
xor
cltd
mov
jge
xor
mov
out
sbb
nop
movsl
nop
lods
andl
inc
loope
std
movsl
xlat
scas
js
enter
ret
lds
mov
imul
adcb
pop
and
imul
dec
and
xchg
ds
movsl
pop
sbb
push
adc
icebp
push
push
pop
mov
js
sub
sbb
in
clc
pushf
stos
lret
or
xor
ds
xor
pop
mov
gs
mov
xorb
jne
jl
xor
or
jp
pusha
xor
into
xchg
lret
and
adc
pop
or
fldcw
dec
aas
ja
dec
pop
add
cmpsb
hlt
mov
mov
outsl
sbb
dec
adc
movsl
push
fwait
xchg
pop
dec
and
xchg
imulb
shl
repz
gs
test
cmp
and
cmp
inc
incb
push
ret
lret
insl
push
cmpsb
or
stos
shlb
mov
adc
int3
adc
stos
adc
jns
mov
sub
push
push
call
rclb
xchg
mov
add
jo
cld
pop
pop
iret
call
loope
inc
pop
jno
sbb
adc
fwait
je
jecxz
mov
cmp
mov
hlt
std
jle
js
in
daa
dec
cmpsb
push
cmc
das
add
test
in
cmp
test
and
mov
lds
fwait
popa
nop
mov
xor
mov
cmp
jmp
xchg
enter
clc
test
lret
out
xchg
sbb
int3
sub
xchg
add
stos
mov
loop
test
cmp
in
inc
sub
mov
sub
add
push
inc
mov
leave
aaa
outsl
roll
and
jl
jne
je
add
or
and
fwait
cmc
out
cmp
or
popa
ret
pop
inc
jmp
and
inc
jbe
or
jnp
je
dec
je
add
lock
js
xchg
or
mov
ds
pop
xor
xchg
inc
mov
push
mov
jmp
call
pop
and
mov
mull
scas
xor
pop
dec
mov
sub
dec
popa
adc
icebp
je
push
das
pushf
pop
lret
or
mov
cmp
imul
mov
mov
mov
add
sbb
shl
dec
cmpsl
fiaddl
clc
in
adc
test
leave
push
movsl
repz
in
xor
xchg
jo
pop
in
mov
pop
jle
sarl
insl
pop
mov
pop
xchg
mov
mov
daa
jo
inc
scas
xchg
mov
push
shlb
and
outsb
outsl
xor
and
lds
inc
stc
data16
iret
les
je
adc
xor
lods
and
fldt
adc
adc
sub
lods
mov
mov
daa
mov
xor
fnstsw
sahf
je
push
jne
pushf
jbe
jecxz
push
and
sub
loop
cmc
push
aas
cmp
gs
inc
mov
jecxz
test
inc
cld
aad
loope
xchg
icebp
xchg
adc
jno
push
orb
insl
sbb
or
cltd
jno
dec
mov
dec
cld
inc
mov
xor
outsl
mov
scas
mov
sub
lret
loop
and
mov
push
push
sub
arpl
sub
or
push
jnp
out
or
out
ds
mov
sub
xchg
ja
hlt
cli
or
adc
and
inc
sub
xchg
test
push
mov
fnsave
and
xchg
mov
xchg
or
pop
push
testb
adc
jae
mov
xchg
ss
popf
cmp
lret
and
pop
mov
and
mov
jb
fidivs
and
adc
mov
shlb
push
push
lcall
or
xchg
sub
jmp
xchg
ljmp
or
or
inc
fistpll
adc
in
cmp
imul
rcrb
pop
mov
pop
fisttpl
outsb
add
jge
jo
push
sub
int
mov
jns
ss
jae
out
and
scas
repnz
dec
xchg
add
ja
inc
in
pop
mov
jecxz
cltd
in
mov
xchg
mov
push
mov
ret
repnz
mov
mov
out
jno
pushf
or
ror
fwait
mov
enter
xchg
leave
jbe
push
jno
mov
adc
sbb
push
sbb
pop
and
sbb
push
cmp
cmpsb
adc
and
sti
adc
into
mov
lods
cmp
aas
ficoms
xchg
movsb
push
pop
push
test
inc
aad
sbb
xor
or
int3
dec
sbb
xchg
adc
mov
gs
cld
or
sbb
xchg
inc
in
inc
addl
bound
inc
jge
cld
xchg
std
mov
sti
mov
xlat
mov
les
or
fildll
imul
rorb
adc
pop
popa
xchg
mov
jg
insl
pop
push
dec
and
mov
in
mov
mov
mov
cmc
jbe
push
addr16
pop
inc
nop
loope
add
in
push
mov
mov
mov
mov
sarl
dec
out
aas
mov
loopne
movsl
mov
sub
aad
pop
add
cmpsb
outsl
jp
testl
jno
jnp
xor
ss
lods
jno
aaa
enter
stos
mov
out
loope
mov
pop
roll
out
pop
pop
lcall
dec
inc
and
jbe
ret
mov
push
cmp
push
loopne
cltd
pop
cmpsb
mov
xor
sbb
fnstsw
je
add
push
ret
add
push
int3
gs
pop
fdivl
or
cmp
sub
xlat
cmp
pop
addl
cmp
sbb
lcall
pushf
cmpl
mov
cmp
fldl
imul
mov
jb
adc
or
pop
mov
inc
lds
xchg
aam
xlat
fucom
inc
mov
adc
outsl
cmp
jno
out
dec
mov
mov
inc
push
xchg
iret
adc
mov
repnz
in
jns
xor
aaa
stc
popa
xchg
add
jge
lret
xor
push
test
xchg
add
push
inc
out
inc
push
push
lock
sbb
add
out
jbe
pop
aas
mov
je
das
outsl
clc
or
or
fsubr
test
sti
aaa
mov
pop
pop
shll
push
mov
xchg
roll
inc
adc
push
inc
stos
push
rcrl
mov
cmp
xchg
push
fyl2x
sbb
clc
cmpl
das
pushf
arpl
mov
jno
faddl
test
inc
fwait
cmp
adc
sbb
adc
fisttps
int3
xchg
jae
or
outsb
jle
push
mov
adc
jle
push
testb
mov
adc
inc
mov
jmp
testl
mov
sti
in
and
cmp
push
or
lret
dec
aaa
mov
mov
pop
inc
stos
jecxz
imul
subb
jl
rep
cmp
push
xchg
jns
ja
push
sbb
daa
lods
out
push
movsl
push
inc
addr16
in
pavgb
add
loopne
insb
adc
xor
sahf
mov
inc
std
dec
enter
pop
data16
jg
xchg
cwtl
fs
adc
lcall
jns
mov
dec
jb
mov
lret
mov
xchg
scas
sub
or
sti
int
push
cmpsb
leave
add
scas
inc
sub
lahf
in
aaa
xor
insb
sub
std
jns
stos
sub
cmp
mull
aad
mov
xchg
cmp
leave
mov
sbb
mov
xchg
subb
push
in
xchg
outsl
adc
or
xor
xor
push
jmp
daa
fbld
add
cmp
movsb
mov
or
test
xor
das
mov
dec
scas
jo
mov
xchg
mov
cmp
push
push
mov
int
mov
jo
fcomi
mov
sar
lods
xchg
lahf
mov
push
push
lods
mov
pop
mov
sub
jb
ja
push
jecxz
inc
jle
add
mov
das
dec
push
dec
int3
pop
sub
pop
imul
das
inc
test
cmpsl
das
fstpt
mov
rcl
cmp
push
cmp
jns
stos
push
jecxz
subb
xchg
push
mov
adc
sub
subl
scas
xor
mov
and
mov
mov
pop
jb
inc
outsb
je
sbb
push
loopne
pop
sbb
lahf
dec
dec
inc
jae
mov
pop
pop
cmp
jp
and
clc
jmp
jnp
sbb
dec
scas
lahf
xor
add
fs
enter
daa
mov
mov
shr
flds
ret
mov
imul
bound
xchg
rorb
adc
mov
in
xor
js
pop
test
test
pop
shrb
mov
add
mov
scas
add
dec
xchg
inc
adc
xchg
or
clc
lret
mov
clc
in
mov
cmpsb
sub
add
rcl
int3
and
push
sbb
jne
jb
xlat
mov
ljmp
pop
insl
dec
xchg
in
test
mov
cmpsb
inc
pop
cmp
adc
es
stos
insb
sub
xor
and
jle
shll
dec
shlb
mov
lds
xchg
daa
jo
int
in
test
sub
nop
push
stos
sahf
les
push
xchg
pop
xor
sub
or
popa
scas
sub
es
in
shrb
stc
adcb
cmpsl
fcoml
sub
ss
push
aam
mov
mov
mov
mov
in
addb
mov
xchg
rorb
repz
mov
rcr
mov
mov
lods
cs
in
inc
gs
ficomps
sti
sub
mov
movsb
lcall
lea
mov
sbb
aas
sub
xchg
test
mov
mov
inc
stc
dec
dec
fcoml
pop
leave
roll
es
lock
mov
sub
incl
andb
push
mov
ss
pop
jns
mov
mulb
hlt
js
mov
pusha
gs
add
pop
jo
cld
fucom
cmp
int3
lea
lret
adc
push
adc
aas
in
inc
dec
dec
leave
das
cmpsl
bound
daa
mov
bound
cmp
push
mov
xchg
test
jbe
addr16
cmc
int
push
sar
and
mov
daa
lret
das
sub
into
or
sahf
mov
mov
movsl
into
adc
aaa
dec
clc
ss
jne
mov
insl
ds
add
insl
push
ficoms
push
dec
or
push
repnz
out
mov
xchg
sbb
add
inc
outsb
push
arpl
mov
shrl
out
in
xchg
dec
pop
stos
sahf
mov
es
xlat
sub
and
arpl
pop
movsb
cli
and
daa
mov
adc
inc
fisubl
and
ficoms
and
jle
loop
inc
inc
ds
mov
sbb
in
push
enter
ret
divb
test
add
push
mov
aas
insl
inc
cmpsb
xchg
sbb
or
cmc
roll
pop
loopne
xor
jge
and
fcmovne
xchg
clc
sahf
xchg
or
lods
or
xor
stos
cmp
and
cmp
inc
cmp
repz
xchg
jle
lods
cmp
add
push
mov
cld
dec
jmp
pop
or
in
inc
pop
sub
and
mov
sub
test
adc
push
dec
insb
sub
mov
repz
push
inc
and
mov
xor
test
pop
outsb
gs
push
lret
jmp
or
or
and
nop
in
pusha
jno
insl
sub
xor
xchg
cli
iret
sbb
xchg
jo
jmp
bound
mov
and
aas
imul
jp
loop
lret
jp
adc
mov
xchg
inc
jge
xchg
pushf
test
dec
aas
mov
xor
and
dec
jno
inc
push
and
rol
lock
shlb
int
mov
adc
sbb
add
fwait
jecxz
push
pop
mov
shr
lret
xor
mov
mov
flds
mov
xchg
addr16
hlt
fmuls
cmpsb
fisttpl
xor
jno
push
pop
cmp
sti
icebp
adc
test
and
outsb
xor
loope
xor
mov
arpl
arpl
or
loopne
pushf
jns
imul
jnp
mov
pop
ja
cli
and
push
cmp
jmp
jns
roll
or
dec
add
push
xchg
in
aad
adc
fcomps
add
mov
scas
cld
xlat
pop
and
mov
push
int
mov
dec
push
xor
mov
jp
pop
push
push
dec
adc
aam
sub
mov
in
outsl
adc
push
dec
pop
mov
scas
lods
fbstp
fs
test
mov
lcall
notl
push
fwait
cs
rcll
jbe
inc
in
push
inc
sbb
decb
scas
adc
and
rcll
dec
mov
out
adc
cmp
daa
sahf
ds
subb
inc
xchg
cmp
mov
jg
cmp
xchg
fbstp
lret
jb
push
jl
jle
pop
pushf
push
cmc
mov
and
outsl
cmpb
xchg
inc
fidivl
js
and
fstps
jae
out
pusha
mov
iret
in
push
jmp
popf
fistpl
add
lahf
out
movsl
mov
outsl
repnz
sbb
mov
push
sbb
pop
pop
out
xchg
mov
mov
or
mov
lea
add
xor
aad
mov
xchg
jns
adc
jecxz
insl
push
or
mov
fidivl
adc
xor
std
inc
bound
push
cli
loopne
or
fidivs
out
int
xor
pop
cmpsb
roll
cmp
nop
or
jge
cmp
mov
nop
jae
dec
jb
pushf
stc
es
add
mov
mov
xchg
jo
xor
mov
pop
mov
aaa
pop
xor
out
push
iret
enter
popf
cld
mov
dec
xlat
push
mov
fwait
ds
jecxz
xor
sbb
fdivs
loope
sub
sbbl
jp
aad
sbb
imul
dec
lods
xchg
pop
push
ds
jge
insl
xor
bound
adc
movsl
sahf
adc
and
roll
sub
inc
push
push
js
test
or
das
ret
aam
add
jne
jg
adc
sub
sti
mov
sub
lea
pop
ret
xchg
bound
ret
push
sbb
leave
lock
push
dec
fstl
pop
out
pop
inc
stc
xlat
pop
outsb
push
aam
pop
lods
mov
cmpsb
and
hlt
jae
sbb
cmp
xor
dec
rol
mov
or
dec
out
pop
enter
movsb
stos
test
push
dec
push
pop
hlt
adc
sub
adcl
cmpsb
loope
lock
enter
inc
pop
cmc
mov
punpcklwd
xor
aas
adc
loopne
or
dec
lock
sub
push
xchg
jno
add
xor
jno
cmpsl
xor
js
out
sub
in
mov
xor
and
fcmovnu
cmp
lock
sbb
adc
clc
sub
sub
inc
andl
pop
div
cwtl
fwait
iret
std
mov
orb
stc
popa
xchg
add
cmpl
jnp
mov
fs
lcall
fwait
in
mov
mov
jb
rclb
stos
adcl
ds
mov
jl
jecxz
fsub
scas
aas
cmpsb
std
sub
jl
mov
out
lds
lret
stos
adc
cmp
mov
jg
cmp
in
lods
scas
and
and
jg
pop
repnz
pushf
popa
stos
mov
lcall
cmp
lret
inc
sub
jl
cld
outsl
test
jecxz
cmpsb
mov
xchg
aas
xor
dec
data16
pushf
idiv
ret
ds
rcr
jp
pop
xchg
dec
inc
cmp
mov
or
mov
test
fs
mov
fildll
dec
pop
test
ds
in
aaa
ret
mov
mov
std
dec
repnz
push
add
jg
sbb
popa
pop
and
add
mov
test
mov
dec
ffreep
mov
dec
testl
cmp
repnz
sub
sub
and
arpl
movl
call
or
inc
push
sbb
sub
push
ret
or
and
std
cmp
mov
lods
jo
push
mov
orb
idiv
xchg
test
js
inc
mov
stos
lods
lret
sti
add
cmp
in
dec
ret
loope
mov
jge
lret
lock
push
sahf
subl
imul
fmul
js
outsl
sub
lahf
sarb
fwait
push
hlt
fwait
xchg
rorl
dec
xchg
in
xchg
lret
popf
cmp
out
jo
xchg
scas
neg
inc
mov
inc
add
int3
and
or
mov
aad
push
xor
add
cwtl
inc
push
out
inc
out
vmwrite
jo
lods
mov
rclb
cmp
jge
add
mov
add
push
pop
dec
call
and
pushf
jg
js
xchg
add
dec
cmp
call
mov
int3
in
arpl
arpl
pop
aas
cli
mov
aaa
sbb
daa
rcrl
inc
or
fisubrs
mov
ret
xchg
cmp
cmp
mov
dec
popf
shrl
cmp
jo
mov
mov
rcr
lods
insl
stos
repz
mov
sbb
int3
jnp
jmp
scas
jmp
bound
out
xlat
mov
repnz
popf
lret
sub
jg
aas
jns
jno
push
mov
jb
ror
adc
in
aad
shll
inc
lret
imul
or
lret
xlat
sub
add
or
cld
push
repz
mov
mov
pop
mov
sarb
cmpb
ds
xor
lret
shll
in
mov
cmp
xor
or
out
add
addr16
in
into
scas
cmp
test
mov
dec
ljmp
int3
iret
insb
jle
es
pop
or
lock
jp
mov
pop
cmp
imul
pop
add
jns
gs
dec
or
imul
cmp
stc
outsb
lcall
add
pop
aad
aaa
adc
dec
mov
mov
aam
out
out
out
or
cmp
leave
push
lods
outsl
sarb
xchg
cmp
cmpb
add
orl
lds
loopne
inc
inc
lds
rolb
popa
jmp
pop
int
inc
fcompl
out
and
dec
xor
fldenv
cli
dec
test
hlt
lock
jae
adc
iret
cld
sub
jns
jne
cmp
pop
sti
repz
lock
mov
adc
into
xor
cli
fwait
add
inc
ds
mov
ret
test
jb
ret
adc
cmp
negb
ret
mov
popa
cli
stos
shrl
fisttps
inc
mov
lcall
shll
push
jb
rcrb
jmp
testb
xchg
push
jge
or
cmp
cld
aaa
pop
xchg
jae
or
nop
add
hlt
inc
pop
cltd
jmp
loope
cmpsl
movsl
jo
push
add
lock
push
sub
mov
add
pop
adc
adc
lret
aad
int3
sub
dec
aaa
xchg
andl
push
pushf
out
mov
fistpll
addr16
xchg
add
pushf
push
lcall
es
pop
mov
mul
dec
hlt
sbb
mov
popa
inc
out
ljmp
or
sbb
cli
enter
xchg
cmp
and
cmp
popf
dec
inc
das
into
imul
or
nop
cmpsl
sbb
adcb
sub
negb
pushf
push
add
fwait
lret
cltd
jae
shrl
dec
fsts
fwait
mov
repz
jmp
jnp
lods
mov
insl
jmp
push
pop
cmc
insl
and
xor
mov
cwtl
call
mov
loope
inc
in
sub
xchg
rolb
or
cmpsl
and
ret
out
int
mov
dec
out
inc
test
jl
roll
mov
bound
xor
xlat
xor
dec
loope
adc
rep
cs
xchg
out
fsubrl
pop
dec
xor
push
out
jmp
and
xchg
sbb
pop
gs
or
call
push
cmp
ss
notl
inc
pop
adc
xchg
mov
adc
and
imulb
jge
add
jecxz
push
js
cld
ret
jae
push
xor
loopne
inc
je
add
in
sub
cmp
jbe
test
and
scas
mov
stos
push
pushf
icebp
mov
call
mov
popa
ljmp
into
int
in
outsb
push
cwtl
stos
jae
stos
sub
jb
mov
cwtl
push
dec
xlat
or
sbb
pop
stos
test
fwait
dec
add
cmp
lcall
xor
cmpsl
in
scas
sti
bound
sub
and
stos
lods
loope
push
xchg
mov
or
mov
js
dec
xchg
test
jecxz
iret
stc
imul
std
aaa
jmp
gs
popf
or
xor
dec
ja
rcrl
mov
or
andb
mov
xchg
mov
push
mov
hlt
xchg
or
je
xor
clc
lcall
mov
and
mov
ja
and
test
pop
mov
push
sbb
test
ret
jmp
fbstp
jno
jg
out
int
jo
sub
movsl
inc
add
int
ljmp
mov
sbb
sbb
xor
push
mov
adc
mov
sbb
and
bound
test
cmp
dec
rorb
jp
sub
lods
test
outsb
cwtl
xchg
jp
loopne
inc
xchg
jb
cmc
setg
or
aam
sub
push
out
push
adc
dec
mov
loopne
sub
jg
psubw
pop
fistpll
pushf
loopne
mov
sti
daa
xor
inc
pushf
stc
into
or
fs
lcall
xor
pop
add
fmull
push
push
inc
test
insl
insb
add
xchg
mov
jge
push
cs
push
sahf
dec
and
subl
pop
push
andb
mov
pushf
nop
push
enter
or
mov
cld
shrb
dec
jecxz
inc
push
sbb
adc
pop
and
inc
das
mov
jmp
jno
cmc
and
sbb
jo
sub
adc
mov
mov
and
dec
lahf
add
loop
mov
pop
xchg
fwait
push
je
adc
xchg
cli
es
andb
shll
mov
mov
mov
fstl
inc
mov
pop
in
add
sub
jle
adcl
sub
xor
in
push
das
adc
pushf
mov
cmpsl
inc
jmp
xchg
fisubrs
scas
std
cmpsb
cmp
leave
inc
mov
mov
imul
mov
mov
and
bound
mov
rcrl
aas
jle
shl
pop
jno
neg
fisttps
in
push
add
pop
pop
out
or
mov
xor
rcrb
cmp
test
jmp
ja
adc
xchg
xor
pop
push
sbb
iret
mov
cmp
insl
jno
cltd
adc
cmpsb
pop
in
mov
out
lods
xor
mov
cwtl
pop
ljmp
aaa
rolb
roll
outsb
stos
jae
cmp
or
xchg
scas
fiadds
repnz
testb
test
sbb
jae
adc
mov
call
std
std
int3
scas
out
add
lea
aaa
push
xchg
mov
pop
inc
or
push
or
jnp
ljmp
divb
in
xlat
into
cli
leave
loope
repz
dec
mov
add
popf
jo
jp
shll
xchg
inc
jmp
adc
frstor
test
xchg
mov
rorb
cmp
sub
jbe
jo
xchg
cli
pop
mov
pop
aam
jle
notl
push
sbb
cld
pop
add
or
vpsubsb
xchg
imul
fcoml
dec
outsl
fildl
outsl
xchg
jne
pop
outsb
jp
mov
add
stos
int3
mov
ret
scas
out
sti
into
js
shlb
loopne
sub
into
test
add
mov
and
add
jb
das
push
push
in
sbb
les
mov
je
adc
cmp
cmp
push
sti
adc
fcmovne
cli
push
push
fiadds
int3
test
mov
sbb
inc
outsb
and
push
ljmp
imul
lock
insb
fs
out
stc
pop
ret
in
xchg
push
fisttpl
sbb
pop
and
sub
les
mov
push
xor
xchg
or
cmp
inc
dec
adc
addl
add
sub
inc
orl
sub
jle
sub
jl
gs
pop
adc
std
decb
jne
xorl
shll
dec
jne
xor
mov
jmp
add
pusha
nop
xchg
fimull
cs
int
out
arpl
roll
call
xor
mov
adc
inc
mov
inc
add
push
dec
pop
cmp
das
imul
or
dec
dec
iret
mov
dec
inc
out
mov
sbb
sbbl
jp
insl
sbb
imul
cmp
subl
out
mov
ds
add
cltd
int3
aas
mov
stc
fisttps
ret
pushf
mov
leave
pop
scas
sbb
sub
lcall
movsl
pop
rclb
dec
aad
cmp
icebp
int
cmpsl
test
js
aam
aam
push
sahf
sub
push
add
xchg
clc
and
sub
or
out
mov
mov
jg
aam
cmp
add
inc
jnp
jne
lret
mov
jle
mov
xor
mov
add
mov
lds
adc
pushf
shl
xchg
pop
mov
xchg
insb
addr16
xchg
mov
mov
ja
mov
cld
nop
add
insl
sub
insb
inc
ret
inc
or
gs
jae
mov
push
das
inc
add
cmp
or
scas
pop
sbbb
shll
xor
es
xlat
add
inc
lds
and
testb
rcrl
mov
mov
scas
shll
push
fwait
popa
mov
mov
std
fs
adc
stos
mov
add
out
out
adcb
dec
push
xchg
inc
cli
cwtl
sbb
cmc
jbe
cmp
loopne
mov
dec
bound
ret
bound
lret
lods
cmp
loope
scas
pushf
cmp
paddsb
lahf
cld
jg
fs
dec
push
cmc
jne
or
fmull
or
add
dec
jle
es
or
push
or
sub
shrb
dec
popf
fwait
clc
pop
fs
mov
xchg
push
dec
test
mov
xchg
push
xchg
stc
sbbl
test
pop
sbb
fs
ljmp
nop
cli
inc
jo,pt
push
mov
dec
test
sub
cmp
daa
fdivrl
rolb
adc
mov
adc
mov
mov
xor
or
jne
push
sub
lods
mov
rcrl
scas
in
mov
mov
xor
adc
std
mov
out
mov
push
leave
addr16
sbb
mov
xor
loop
ret
sub
push
mov
or
sbb
cltd
and
pop
ljmp
pop
mov
arpl
jae
xchg
mov
popa
std
add
lahf
cwtl
std
push
adc
adc
xchg
adc
push
icebp
ss
shlb
cltd
es
ret
aas
repnz
xlat
adc
daa
stos
insl
jp
movsl
xorl
mov
mov
insl
imul
mov
jae
xor
mov
xchg
adc
xchg
movsb
imul
cli
or
out
cwtl
scas
leave
cmpb
mov
inc
xchg
test
repnz
pop
or
shr
out
in
push
cmp
repz
sbb
icebp
add
lcall
lret
in
xchg
jns
lret
rorb
test
lcall
std
cmpsl
stos
iret
sbb
mov
loopne
mov
in
test
dec
outsb
cli
adc
xchg
faddl
push
adcb
xchg
clc
inc
clc
fnstsw
out
lods
in
push
and
arpl
adc
xchg
push
xchg
jbe
xchg
stos
ja
mov
mov
sbb
les
in
push
cmpl
inc
movsb
fdivrs
inc
popa
enter
xor
fisttpll
cmp
jl
mov
test
mov
pushf
mov
xor
cltd
dec
xor
mov
or
mov
sbb
lahf
mov
js
xor
fsubs
sub
jb
rorb
lds
fbld
inc
xchg
flds
js
inc
clc
lahf
test
mov
rcrl
sbb
xchg
ja
imul
jecxz
test
fdivs
addr16
out
cli
inc
sub
arpl
inc
inc
inc
mov
fdivs
jbe
cmp
xorl
mov
cmp
fs
xchg
adc
xchg
mov
jmp
outsl
les
xor
orb
packssdw
dec
out
shll
add
add
dec
ficomps
fists
sub
pop
cmp
fisttpll
pop
cmp
fucomi
sub
push
mov
fdivp
outsb
push
js
ret
mov
in
inc
jne
push
adc
xchg
add
iret
ja
and
push
adc
fimull
int3
inc
xchg
xor
push
daa
daa
add
out
mov
ljmp
sbb
int
xchg
pop
loop
adc
adc
fs
xchg
jge
pop
xchg
dec
scas
sub
adc
xor
ret
in
in
lods
stos
push
cmp
fwait
outsl
pop
jl
jmp
lret
mov
add
dec
jmp
lret
pop
imul
push
test
pusha
aaa
icebp
mov
push
xlat
lcall
out
das
or
arpl
inc
sbb
or
jmp
push
add
frstor
stos
nop
out
cmp
sbb
push
pusha
ret
pushf
ss
daa
mov
testb
adc
mov
or
lods
das
rclb
adc
push
push
pushf
jmp
or
sbb
or
ret
jge
testb
gs
popa
cltd
add
add
lahf
shll
sub
jo
mov
push
mov
lods
loop
popf
or
pushf
je
scas
inc
push
inc
pop
pop
jbe
cmp
cltd
or
addr16
sbb
or
imul
mov
sbb
mov
pop
xchg
mov
jle
add
pusha
push
sub
adc
xor
push
mov
enter
movsb
das
xchg
inc
add
fwait
movl
inc
jp
in
leave
adc
jne,pt
xchg
xchg
std
jne
addr16
cmpb
xchg
xor
add
push
xor
adc
jp
ss
jbe
fwait
xchg
and
pop
das
pusha
ja
fbld
mov
adc
inc
out
fistps
push
iret
mov
mov
dec
dec
pop
dec
popa
test
mov
xor
cmp
hlt
mov
dec
aas
mov
sbb
data16
sbb
lea
insb
popf
mov
mov
mov
ret
pusha
sub
lock
fldl
pop
mov
and
pop
inc
add
push
mov
jne
push
or
shrb
inc
pushf
adc
mov
mov
sarb
mov
cld
xchg
test
xchg
mov
add
or
mov
stos
pop
lea
test
adc
mov
pop
and
fisttps
and
cmp
adc
adc
lahf
lds
push
arpl
sarb
mov
enter
jl
push
xchg
jo
jb
scas
xchg
sahf
hlt
dec
xor
push
pop
mov
xor
aas
insb
aam
adc
scas
add
or
fwait
jecxz
mov
mov
gs
jne
xchg
mov
das
out
sub
ja
fstpt
cmpb
push
xchg
cmp
pusha
aad
and
fnsave
inc
xor
xchg
orb
shl
sahf
and
mov
push
jo
jns
scas
out
add
mov
pop
dec
xchg
fwait
gs
cmp
addr16
and
mov
sbbb
adc
pop
adc
sahf
lret
pop
fdivs
mov
jae
cmp
or
mov
mov
in
pop
arpl
rolb
push
lods
and
insb
sbb
movsl
sub
aas
mov
and
sub
pop
lret
sub
inc
pop
jmp
subb
call
xchg
test
pop
cmpsl
daa
mov
enter
pushf
lret
adc
aad
lods
sub
sub
ret
movsl
jecxz
loop
jl
add
inc
in
jbe
cltd
add
lret
and
sub
add
scas
in
dec
iret
mov
mov
data16
pop
mov
daa
mov
filds
int
push
xor
je
dec
ds
sub
das
jl
arpl
test
fcmovu
jno
xor
scas
mov
sbb
pop
mov
mov
mov
mov
or
and
add
out
lods
pop
scas
mov
push
jns
insb
aas
jnp
fs
fnsave
cmp
aam
push
lahf
fstpl
sbb
push
add
add
adc
xor
js
mov
jo
sti
jno
mov
add
rcrl
mov
pop
push
pusha
mov
jae
arpl
lea
xchg
out
divl
jno
jo
mov
jae
ficoml
test
mov
push
adc
dec
lahf
cli
sbb
push
xchg
pop
pop
je
bound
mov
out
push
mov
gs
js
mov
dec
rorb
and
jg
cmp
iret
mov
daa
mov
pop
scas
add
fdivr
jmp
xchg
pop
xor
loop
in
insb
je
or
inc
fsts
loope
fs
push
stc
sbb
and
jmp
ss
or
gs
loopne
pop
outsb
sbb
cli
pop
jmp
add
fidivrl
popaw
pop
ret
test
sbb
mov
pop
rorl
pop
add
push
fcmovnbe
push
loop
rorb
and
daa
jae
test
inc
scas
cmp
push
icebp
adc
or
adc
jg
neg
ret
xchg
nop
cmp
lret
and
jle
pop
add
push
sbb
fnstsw
add
push
incl
mov
xor
sbbb
testb
push
cmp
jne
or
sbb
jle
jmp
bound
test
jns
das
xchg
shrb
popf
fcompl
aas
ret
jmp
sbb
mov
insb
and
aaa
cmp
testb
lods
ret
and
xchg
jae
push
push
ljmp
notb
mov
scas
or
inc
cmpsb
popa
insl
lahf
mov
jecxz
push
dec
fsubr
out
sub
sbb
xchg
lds
mov
adc
cld
stos
sub
xchg
mov
addl
shlb
not
xchg
stos
sbb
in
bound
pop
adc
mov
aad
mov
out
mov
fucomp
xchg
fisubl
rcl
int
pusha
add
jae
mov
inc
es
jmp
pop
scas
out
jge
mov
xlat
pop
fmull
push
inc
pop
cmpb
and
out
out
mov
xchg
cmp
cltd
push
and
pop
pop
and
mov
in
dec
int3
jo
jmp
mov
push
push
jmp
add
push
inc
ficoms
mov
inc
test
call
ret
inc
mov
cmp
mov
ja
xor
lret
mov
inc
mov
iret
and
push
xor
pushf
inc
mov
mov
fdivl
aam
dec
cmpsb
xchg
sub
iret
cmpsl
js
mov
iret
out
fprem1
sbb
cli
shl
movsl
lret
insl
imul
clc
hlt
pusha
mov
outsb
inc
daa
outsb
stc
mov
jne
fwait
add
jecxz
add
mov
out
push
out
repnz
cltd
outsl
add
iret
push
adc
aam
pop
out
add
mov
mov
sbb
sti
out
pop
push
mov
es
jb
add
stos
aad
lahf
push
sbb
shlb
jae
in
sub
jmp
imul
loop
out
push
je
lcall
ret
pop
adc
out
xor
in
push
lahf
daa
es
shrl
or
sub
fisubrl
dec
sti
stos
loopne
bound
dec
popa
pusha
mov
fdivrs
xchg
mov
aaa
psubsw
gs
rolb
loopne
shl
in
enter
adc
or
dec
in
fistpl
mov
push
pushf
pop
mov
inc
andb
pop
lahf
push
push
fmuls
fwait
stos
mov
and
push
hlt
dec
sbbb
fsubl
add
cmpsb
sbb
mov
movl
cmp
xor
adc
js
and
dec
jmp
int
xchg
and
mov
jg
cmpsl
je
jns
sub
hlt
imulb
loop
dec
das
pop
mov
cmpsb
mov
push
mov
jns
dec
mov
lcall
mov
mov
lods
fsubl
cmp
fcomp
lcall
inc
ret
pop
in
add
add
jg
mov
jmp
fisubs
or
loope
jl
loope
fidivs
and
test
or
int
ret
sub
pop
mov
repz
jnp
pop
push
dec
outsl
aam
sbb
imul
leave
adcl
mov
call
ffreep
stc
sbb
sbb
sub
notb
shlb
or
push
repnz
and
lock
mov
call
jae
loope
mov
cwtl
mov
mov
mov
add
int
adc
xor
fiadds
nop
iret
lds
stos
add
inc
sub
pop
dec
xlat
pop
fildl
push
sub
dec
shrl
mov
adc
mov
add
mov
mov
test
daa
lods
mov
pop
pop
jge
addb
add
and
bound
and
push
rep
mov
cmp
adc
and
inc
mov
xchg
arpl
mov
sbb
add
ja
mov
gs
pop
push
add
dec
scas
fs
mov
in
mov
sub
popa
scas
mov
gs
mov
lea
adc
ss
cmp
je
dec
adc
lret
mov
lret
das
or
lret
out
std
js
pop
fsubl
add
mov
pop
dec
jns
pop
in
jmp
adcl
mov
jg
xchg
mov
mov
std
rcr
lods
cmpsl
or
adcl
rolb
repnz
mov
cltd
dec
mov
repnz
fnsave
gs
push
xor
cmp
inc
jp
pop
int3
fistpll
sub
inc
mov
mov
jecxz
mov
lahf
popa
je
xchg
stos
mov
es
adc
mov
mov
cmp
test
add
jecxz
jle
out
es
ljmp
push
push
mov
mov
mov
cld
lahf
mov
push
mov
pop
and
divb
dec
xchg
add
sahf
jbe
sub
scas
dec
jmp
xchg
rolb
out
fidivrs
or
out
sbb
popf
cmc
insl
ljmp
mov
int
jp
in
pusha
clc
or
xchg
cs
push
push
and
ret
shlb
ret
dec
inc
and
mov
push
ror
xor
sbb
notb
pop
pop
fnsave
leave
movsb
sbbb
dec
mov
das
ds
call
movb
sbb
pop
dec
out
sbb
pop
clc
ja
cmp
addr16
loopne
jmp
push
lcall
pop
lock
sub
repnz
jne
sti
enter
das
adc
imulb
aam
sub
add
mov
pop
lods
jl
mov
adc
dec
xchg
sti
and
out
enter
ds
hlt
insb
inc
jno
push
test
inc
cltd
xchg
mov
out
stc
xor
in
jne
mov
jmp
pop
lret
mov
sub
out
cmp
daa
xor
xlat
sub
ficoml
mov
xchg
pop
mov
xchg
mov
sti
and
lea
nop
fcomp
push
lret
aas
push
scas
lds
mov
enter
test
inc
and
cmp
push
cmp
gs
out
adc
inc
cmpsl
cmp
push
jne
lods
outsl
xchg
add
push
movsb
insl
add
shl
mov
out
fdivrs
incb
jl
aas
call
sub
xchg
mov
xchg
aam
and
test
mov
fimuls
mov
sbb
and
into
mov
mov
mov
xor
fstps
mov
testb
push
gs
mov
xchg
push
add
and
or
pop
fisttpll
data16
or
jg
push
enter
insl
mov
in
shll
jle
mov
iret
mov
push
jmp
push
lods
pop
cli
not
in
lods
jecxz
pop
mov
outsl
into
popa
pop
or
pop
stc
mov
pop
rclb
cmc
rorl
inc
out
mov
or
jno
sub
inc
push
xchg
pop
cmc
clc
aaa
fmulp
out
cwtl
dec
ja
inc
jo
and
fmull
test
dec
jae
push
or
sbb
out
xchg
imul
jg
das
add
push
fstpl
jl
xor
push
inc
pop
arpl
add
mov
pop
cmpl
les
adc
push
cs
sub
push
fidivrl
dec
rcll
inc
std
rcl
mov
and
cmp
loopne
adc
insb
lds
fwait
xor
std
daa
out
decl
das
push
negl
lcall
sub
sbb
negb
adc
into
cmp
sar
scas
in
add
xor
and
xchg
testl
sub
or
popf
icebp
clc
ror
in
shrb
xchg
and
add
stos
shr
mov
or
pop
dec
movsl
clc
test
outsb
int3
das
or
fisttpl
movsl
mov
xchg
cmp
std
mov
insl
xlat
xor
in
push
and
ds
ljmp
or
jae
enter
hlt
sub
cmp
addr16
loope
jge
dec
lock
mov
lret
shlb
enter
orb
pusha
push
and
clc
and
in
cmpsl
dec
cmp
loop
in
ljmp
mov
lahf
adc
sbbl
hlt
adc
sbbb
or
dec
cs
push
cmp
jno
xor
pop
pop
inc
push
shll
out
push
adc
sub
std
loope
jle
mov
adc
push
lock
daa
and
shl
cltd
xor
int
mov
sbb
and
or
sub
inc
sub
scas
push
push
xor
cmpsb
or
inc
dec
dec
mov
jl
pop
pop
or
int
jo
pop
pop
xor
pop
mov
fcomps
rcrb
shlb
push
das
lcall
loop
lods
adc
in
inc
xor
and
mov
dec
repnz
lock
pop
negl
sub
movsl
mov
dec
xchg
dec
mov
sbb
or
or
push
xchg
jb
push
loop
jno
cld
popa
sub
and
add
mov
mov
sahf
pop
cmc
mov
xor
xor
jne
add
ds
aad
sbb
lahf
add
and
repz
sbb
add
push
insb
sbb
in
movsb
adc
jae
push
fs
fmuls
sarl
jo
mov
das
cmp
insb
mov
mov
jp
fs
mov
cli
je
pop
pop
adc
outsl
js
mov
test
push
mov
push
ds
mov
sbbb
xor
mov
out
cmp
jg
jnp
popf
setge
push
daa
add
divb
push
cmp
sbb
popf
push
mov
ss
or
jle
mov
pop
mov
shrb
int3
data16
adc
xor
xor
aam
mov
insb
pop
or
sbb
cmp
in
in
or
or
jg
jl
cmpsb
in
pop
cli
inc
cmp
dec
int3
and
xchg
lds
mov
sub
iret
mov
pop
mov
xorb
icebp
ret
inc
call
inc
enter
das
cmp
lcall
dec
pop
pop
and
aam
in
data16
xor
lds
adc
out
sbb
sbb
movsl
push
and
mov
popf
cli
lret
and
push
and
mov
scas
dec
sti
js
les
jae
hlt
jno
sub
xchg
jns
add
mov
and
push
shll
mov
xor
xor
call
insl
xchg
or
js
xor
sti
jne
fldl
call
mov
sahf
ljmp
mov
cmp
mov
or
adc
sbb
aas
adc
cmp
imul
dec
mov
ss
mov
push
loope
roll
mov
mov
jnp
xor
push
sub
jnp
adc
mov
fldt
jp
aas
sub
sbb
mov
push
daa
cltd
pop
or
mov
orb
jb
push
jae
mov
dec
xchg
jl
rcrb
xchg
add
sbb
inc
xor
mov
mov
jecxz
andl
sti
lcall
jp
movsl
test
sub
mov
pushf
popa
adc
cmpsl
das
adc
hlt
push
sbbl
ret
mov
adc
int3
xor
xchg
sub
mov
push
cli
xchg
push
pop
pusha
mov
cmpsl
inc
add
popf
cmc
jmp
cmpsl
fistps
add
or
test
f2xm1
sbb
sub
xor
pop
in
sub
adc
lock
imul
fnstcw
pop
pop
cmp
jnp
clc
push
adc
sub
sub
pop
xchg
bound
cltd
mov
testl
push
dec
push
iret
push
insl
icebp
cs
sahf
mov
or
test
test
and
mov
test
add
int
mov
addr16
push
jbe
jg
es
mov
scas
mov
mov
scas
fcoms
iret
aas
sbb
insb
xor
testb
bound
std
lret
daa
adc
fmuls
pop
inc
xchg
xor
mov
imull
lods
aam
xor
xchg
inc
xor
insl
mov
mov
mov
divl
clc
adc
sub
aam
push
daa
jg
jne
ss
mov
mov
jae,pt
insb
fsub
xor
xor
xlat
fwait
arpl
sbb
cmc
sbb
add
shlb
sbb
cltd
pop
pop
or
int3
call
jge
xchg
cmc
or
lret
pushl
push
roll
dec
es
cmp
lock
add
lahf
rcrl
inc
cld
xlat
ljmp
outsl
jmp
pop
and
leave
les
jbe
std
and
dec
xchg
movsl
ds
push
inc
dec
sub
add
divb
loop
push
dec
sub
jmp
sbb
mov
mov
sub
cmpsl
mov
push
mov
cmp
data16
adc
push
in
cmp
js
ret
xchg
fstpl
lock
xchg
lahf
pop
dec
dec
mov
jg
pop
cld
fdivrs
dec
xchg
xor
mov
int
pushf
pop
outsb
dec
ja
fwait
xor
test
sbb
xchg
xchg
in
shrb
fs
dec
sti
mov
cmp
mov
mov
hlt
fdivrl
shrl
xor
lret
inc
fwait
gs
sub
loop
cmp
push
xchg
sub
imul
data16
jge
xchg
xor
push
icebp
cld
cmp
xchg
fisttps
push
jg
push
sbb
negb
or
and
repnz
and
lock
scas
lahf
imul
test
je
and
mov
sub
jp
out
gs
xlat
clc
push
jbe
xor
push
das
lock
mov
pop
es
int3
jne
and
push
test
xor
imul
cmc
shlb
fsubl
mov
je
icebp
cmp
xchg
inc
xlat
shll
or
pop
mov
inc
incb
dec
xchg
xor
js
sbb
or
mov
mov
and
shrb
and
pop
in
subl
shrl
rcrl
daa
jecxz
mov
outsl
xchg
aad
inc
lahf
xor
or
or
fcmovu
xchg
xor
popa
xor
jno
adc
mov
sti
std
xchg
sub
xor
jns
sbb
ss
out
mov
repz
pop
imul
adc
pop
sbb
rorb
in
lret
mov
xchg
mov
nop
jmp
cmp
fs
sbb
add
xor
xor
and
data16
mov
mov
xor
jge
xchg
decb
std
imul
das
fs
fisubrl
cmp
out
adc
out
xlat
push
mov
fisttps
pop
cmp
insl
jns
popa
ss
iret
imul
push
cmp
movsb
lock
loop
xlat
call
jnp
scas
cmc
out
jl
rcrb
pop
jecxz
dec
push
lods
add
push
add
repz
xor
and
repnz
mov
fwait
inc
loope
movsl
jbe
dec
dec
push
cltd
inc
in
xor
sarl
push
cmpsb
rolb
xor
pop
ds
dec
xchg
fdivp
sub
jnp
push
xchg
out
inc
mov
inc
push
cmpsb
lret
xchg
push
ret
jge
ss
in
rcr
std
das
hlt
lret
dec
shr
cmp
add
mov
mov
mov
mov
test
in
add
pop
pop
cmp
sub
and
fcoms
mov
xchg
jg
cmp
enter
or
jg
test
int3
out
fwait
lahf
add
idiv
dec
popf
sbb
mov
loop
mov
scas
or
or
ljmp
lea
xchg
jp
push
pop
jbe
dec
int3
int3
push
bound
test
ljmp
out
addb
cmp
pop
cmpsb
cwtl
out
sbb
and
mov
sub
loop
xchg
hlt
adc
cwtl
xchg
fsubrp
js
mov
jno
popf
movsb
lret
dec
das
iret
or
jne
or
dec
cmp
add
pop
arpl
inc
mov
cmp
popa
test
lods
jb
xchg
fisubs
in
xchg
nopl
jns
mov
cwtl
xor
jecxz
sub
sbb
fs
and
enter
lods
xorl
test
mov
xchg
cmpsb
cmpsb
adcb
nop
lcall
clc
inc
arpl
push
sbb
mov
jge
sub
in
push
or
push
mov
xchg
nop
or
sbb
push
loopne
or
sbb
xor
dec
pop
sahf
or
js
pop
loopne
mov
leave
add
inc
test
push
mov
inc
dec
loopne
hlt
pop
aad
cmp
inc
aas
mov
shrl
sub
frstor
in
dec
push
repz
cwtl
lods
ficoms
jp
mov
pop
dec
clc
adc
inc
push
cmc
inc
mov
popa
mov
addr16
out
jge
iret
in
testb
and
mov
test
xchg
mov
add
pop
aas
or
shll
in
loope
test
xor
out
ljmp
addr16
add
sarl
add
push
addr16
mov
aaa
inc
jnp
cmp
jp
sub
rclb
push
pop
cld
imull
dec
mov
dec
push
pop
inc
jne
shlb
inc
dec
mov
mov
adc
pop
mov
sbb
mov
pop
dec
mov
fstpt
mov
jg
mov
cmp
pop
orb
outsb
fadds
pop
inc
cmp
lods
sub
push
xor
stos
push
and
mov
sahf
pushf
inc
pop
inc
or
jnp
sbbl
in
out
push
mov
jne
jnp
dec
fsub
xlat
sahf
ljmpw
and
mov
jp
int3
dec
xor
mov
mov
out
out
cmovp
xlat
cmp
aaa
jae
adc
out
inc
aam
in
sub
mov
ljmp
adc
jns
pop
and
es
push
cld
dec
xchg
sub
js
clc
push
cmp
xchg
cmp
pop
cwtl
addr16
shlb
lea
mov
lock
cmp
sti
jns
xor
jl
mov
cmp
dec
cmp
mov
std
retw
pop
jns
inc
adc
and
popa
sbb
and
in
lods
dec
push
hlt
push
xor
mov
mov
stos
mov
repz
pop
repnz
or
pop
ljmp
std
mov
mov
aaa
inc
scas
and
ja
push
add
shlb
outsl
daa
loope
jns
icebp
cmp
jbe
sub
in
fidivl
cli
jno
das
cmpsl
mov
xor
and
xchg
xchg
inc
pop
test
insl
lods
sub
stos
mov
mov
xlat
push
inc
xchg
je
jl
and
inc
cmp
imul
xor
ss
shll
dec
jmp
test
into
push
xchg
test
add
mov
stc
int
cmp
dec
mov
frstor
push
push
sub
mov
pop
sti
out
inc
mov
cli
adc
cmp
add
sbb
scas
lret
push
in
clc
dec
mov
ja
mov
lods
loopne
loope
jae
jmp
xchg
imul
sbb
fbstp
shlb
mov
adc
fisubl
inc
sbb
add
fxch
push
xchg
test
mov
jle
dec
pop
lock
outsl
fld
in
sub
inc
cmp
addr16
sub
nop
push
movsl
jbe
dec
adc
sbbl
cmp
fstpt
ror
test
daa
push
cmpsb
jo
xchg
inc
jmp
lret
sub
insb
es
jmp
movsl
pop
shll
out
aam
movsb
or
sbb
lock
in
or
shl
jno
movsl
mov
psllw
pop
call
mov
xchg
sti
in
movsb
imul
ret
arpl
pop
push
rcr
ret
or
cmovb
mov
ror
push
jae
cli
mov
mov
fidivl
outsb
xor
test
mov
out
or
mov
jecxz
aas
mov
fldt
pop
fisubrs
popa
ret
cld
aaa
sbb
lahf
sbbb
scas
xchg
fbstp
insl
push
das
test
test
or
push
cmp
xchg
inc
nop
fidivl
xchg
and
xchg
pop
outsl
or
sub
adc
jb
shll
dec
sbb
gs
push
fnstsw
mov
pop
cs
out
dec
jno
mov
scas
push
daa
pop
mov
jne
sub
test
xchg
mov
cli
adc
frstor
jnp
cmp
push
inc
aad
stos
mov
pop
int
inc
mov
push
xchg
call
xchg
inc
jmp
std
out
xchg
xor
pop
imul
inc
mov
cmp
movsl
mov
sbb
push
test
stos
mov
popa
roll
lret
sub
sub
mov
xorl
jge
push
dec
ss
test
fadds
jmp
es
mov
xchg
rorb
mov
mov
lret
jle
out
mov
xor
or
mov
cmpsb
loop
dec
ja
dec
call
dec
mov
aas
outsl
cltd
xor
sbb
mov
lods
add
aas
or
cmp
ja
pop
call
aam
add
mov
movsl
test
aad
and
mov
push
nop
inc
mull
mov
push
xchg
jl
adc
sub
push
and
xchg
popf
push
xor
cmpsb
das
jb
arpl
shlb
mov
std
mov
das
hlt
push
mov
push
imul
in
cmp
pop
jmp
test
mov
mov
or
rorl
aad
inc
es
push
jecxz
push
out
cs
sbb
repz
lods
cmpsl
or
in
into
cli
xor
jns
and
jne
mov
test
adc
js
pop
or
mov
push
pop
ljmp
jmp
gs
arpl
mov
sbb
std
lods
or
or
loopne
ss
push
jb
sub
add
lock
push
mov
iret
sub
ljmp
lds
fisttps
xchg
xor
mov
jl
repnz
sbb
mov
out
in
add
or
or
push
pop
jae
xor
adc
ja
nop
pop
je
sub
cmpsl
dec
loop
aas
les
shl
xor
popa
xchg
call
fbstp
add
cmpsl
cmpsb
mov
pop
shlb
sub
testb
int3
adc
cmpsb
and
add
fiadds
push
push
dec
pop
stos
out
cmp
xchg
push
jmp
pop
fs
and
adc
cmp
inc
outsl
lret
cmovge
movsl
rorb
add
shll
inc
mov
pop
cmp
repnz
es
loopne
inc
fwait
cmpsl
adc
xor
mov
pop
add
inc
loope
stc
cs
ret
out
idiv
adc
mov
cmp
jns
ret
push
add
mov
lods
xchg
xchg
sbb
sahf
fs
jge
adc
mov
outsl
mov
or
or
mov
adc
daa
in
and
inc
mov
mov
mov
leave
je
mov
and
stos
cmovne
jecxz
dec
push
mov
cli
aaa
jo
xchg
lods
nop
jo
inc
mov
js
xchg
add
divl
xchg
sbb
xchg
mov
mull
sbb
sbb
hlt
mov
daa
add
leave
or
sub
stos
cli
adc
xchg
scas
fmull
jp
jne
pop
jmp
pop
adc
test
pop
pop
cmp
cmp
int
and
mov
cmpsl
mov
sub
cmp
add
cmp
mov
pop
ss
sbbb
nop
mov
push
out
jmp
cli
lret
lods
mov
add
mov
mov
inc
xor
xchg
ror
sbb
and
sub
pmullw
mov
addr16
pop
lods
xor
cmp
push
sti
push
mov
js
das
lret
ja
inc
test
sbb
cmpsl
push
sub
add
shrb
lods
push
xchg
fdivr
call
ja
mov
les
clc
mov
sahf
mov
sub
fwait
lods
inc
add
shrl
mov
cmp
pop
scas
shrb
dec
push
lret
push
push
pop
lea
mov
cmp
dec
mov
das
push
data16
xchg
sbb
sub
and
je
pop
test
mov
and
cmp
ret
or
int3
push
adc
push
adc
mov
lods
cltd
pop
push
imul
psraw
add
inc
jge
out
dec
adc
popf
mov
dec
mov
push
and
mov
xor
adc
pop
and
out
push
js
push
out
jo
mov
cmp
pop
cmp
mov
bound
mov
dec
jecxz
fcoms
mov
pop
mov
xchg
xchg
push
fistl
fisttpll
cltd
scas
push
pop
cli
test
lret
xor
or
hlt
aas
mov
jno
cmp
dec
out
pop
loop
mov
fsubs
int
out
push
inc
fsubrs
sti
add
cmc
sarl
jp
push
ljmp
mov
adc
lea
and
push
loopne
cs
int
adc
loope
jmp
pop
push
ljmp
fcomps
push
fmuls
repz
outsb
mov
sbb
stos
xchg
repnz
inc
pop
std
lcall
lea
cmp
and
dec
cmpsb
sub
xor
mov
cwtl
rcl
fcompl
test
dec
push
push
sbb
dec
fcoml
and
shll
jmp
aas
call
insl
xchg
inc
test
fmulp
push
xchg
lds
mov
adc
dec
mov
dec
inc
push
fcmove
sbb
mov
add
jge
adc
xor
mov
mov
mov
pop
add
ret
dec
adc
cmpsb
cmp
ss
popa
jo
cmpl
mov
pop
or
xchg
into
test
push
out
dec
mov
lret
mov
lret
lds
lcall
es
loop
incl
adc
hlt
mov
fmuls
push
sub
ja
sbb
xor
std
sub
rclb
push
sbb
call
dec
inc
jge
test
movsl
arpl
adc
mov
arpl
clc
xchg
mov
jmp
xchg
xchg
and
rolb
pop
repnz
out
ljmp
pusha
dec
cmpb
push
inc
or
mov
xchg
lods
cmp
pop
cmp
push
mov
ds
adc
loope
pusha
scas
stc
xor
pop
testb
aad
add
ss
outsl
adcb
jle
popl
aas
jae
in
movups
lea
cs
fcmovb
push
inc
inc
and
dec
es
sti
or
push
test
or
xor
cmp
stos
into
stos
sub
in
mov
enter
jge
jmp
gs
lds
cmp
js
in
popf
jp
xchg
and
sbb
icebp
loopne
out
inc
cmp
xor
sarb
push
cmpsb
hlt
adc
inc
jecxz
inc
lods
xor
dec
and
std
cmpsl
mov
push
push
insb
jge
and
aaa
rcll
and
and
inc
pop
mov
jg,pt
test
je
aaa
sbb
fiadds
lds
lods
jb
bound
aas
jo
adc
andl
lods
mov
mov
add
push
mov
test
lds
xor
cmp
aaa
dec
ror
adc
test
sub
in
and
pushf
or
xchg
pop
shlb
push
mov
pushf
xchg
jnp
fsts
fs
pcmpeqb
adc
inc
dec
sbbl
xor
sbb
out
out
int
call
or
dec
out
aam
test
mov
push
sub
xchg
in
sub
mov
sbb
out
subb
pop
hlt
enter
decb
jmp
repnz
out
daa
into
aad
dec
cmpsb
sbb
int3
inc
adc
rcrb
push
mov
pop
and
mov
and
and
iret
mov
sub
call
insb
xchg
cli
and
or
rclb
inc
cltd
add
loope
out
dec
hlt
in
popa
test
gs
ds
aam
mov
outsb
ds
bound
insl
and
int3
xor
ret
cwtl
xor
outsb
cmpsb
dec
pop
inc
or
subl
add
sub
cmp
aam
in
loope
out
add
add
int
ja
jbe
or
fisttpl
lahf
inc
arpl
in
jecxz
jae
aas
sbb
fsubrl
pop
pop
js
push
mov
dec
jl
imul
pusha
movsl
pop
es
loope
jecxz
cs
push
push
mov
insb
adc
repnz
test
dec
xor
pop
sbb
pop
ss
mov
sub
lock
adc
push
js
sub
pop
inc
aas
in
lahf
mov
fisubrl
push
adc
sub
pop
sub
movsb
dec
sub
ljmp
jae
ss
or
stos
inc
mov
and
je
dec
cmp
dec
lret
push
decb
push
sbbl
inc
lcall
repnz
inc
cmp
frstor
or
push
mov
loopne
dec
jo
addr16
jno
and
cmp
adcb
xchg
mov
xchg
add
daa
sbb
sub
in
mov
je
insl
mov
clc
and
subl
dec
push
pop
in
lret
outsb
pushf
sbb
pop
xchg
jge
push
in
jl
xchg
push
inc
pop
dec
mov
pop
jecxz
ja
movsl
jns
sahf
xchg
or
or
fbstp
jnp
mov
testl
movsl
arpl
xchg
repz
push
insb
xchg
pop
fildl
stos
daa
jne
mov
adc
push
add
cltd
test
js
fadd
aas
leave
xchg
test
ss
push
popa
nop
sbb
lea
bound
fstl
adc
jns
icebp
and
data16
adc
js
mov
stos
or
mov
inc
push
jmp
or
clc
xchg
aas
ljmp
ficoms
lods
mov
mov
dec
xchg
test
je
jg
pop
jge
push
cmp
pop
adcl
cmp
jnp
xor
jo
jmp
jmp
stos
mov
shl
add
test
or
or
push
dec
fldenv
negl
jge
mov
mull
dec
in
xchg
pop
scas
in
pop
sub
sbb
and
mov
jo
jb
inc
int
mov
mov
sub
stos
push
xlat
jge
stos
xchg
pop
mov
loope
pop
xchg
jp
mov
xor
dec
mov
mov
mov
stc
pop
fucomi
nop
mov
loopne
lock
popl
das
inc
pop
inc
sets
icebp
loope
insb
cmpsl
mov
ret
notl
addr16
shll
in
call
sbb
rcrb
add
or
push
loope
add
mov
xor
aaa
or
mov
pop
cs
out
dec
lcall
or
out
sarl
outsb
push
xor
out
test
fwait
pusha
fcoml
jno
adc
iret
ja
mov
mov
add
cmpsl
xchg
sarb
ljmp
mov
add
push
cs
lods
cmp
inc
subb
inc
imul
cs
stc
sbb
inc
and
add
scas
icebp
mov
add
fs
jne
out
and
sbb
insl
lret
and
inc
daa
fimull
fdivl
cmp
out
jbe
cld
and
dec
dec
adc
add
icebp
or
xchg
inc
arpl
xor
xchg
add
sub
sub
sub
xor
mov
out
inc
fwait
in
xchg
push
sbb
inc
loopne
jp
sbb
mov
push
in
push
das
xchg
and
aas
add
add
inc
iret
lods
insl
cmp
jl
sbb
mov
inc
inc
inc
lds
or
adc
adc
outsb
xchg
sbb
sti
out
roll
mov
lret
mov
loop
sub
icebp
and
jns,pt
inc
lock
sub
mov
loopne
adc
mov
loope
adc
mov
imul
cmpsl
and
out
call
enter
lock
cs
inc
lret
sbb
mov
and
jns
pop
clc
lock
and
add
dec
testb
loopne
aas
test
xchg
pop
inc
jecxz
pop
jl
repnz
add
data16
or
jne
dec
xchg
sbb
shl
jo
mov
jmp
loopne
out
or
mov
mov
and
xchg
xor
pop
xchg
xor
outsb
jnp
push
lods
and
fwait
cli
leave
push
sbb
mov
insb
loop
pop
push
sahf
ja
psubsb
cltd
iret
loopne
xor
repnz
aad
xor
movl
addl
mov
iret
mov
mov
sbb
jmp
xchg
pop
insl
inc
inc
and
jbe
addr16
push
enter
sbb
in
ret
shrb
cld
pop
dec
test
mov
xor
or
xchg
add
and
ret
jmp
rcrl
dec
add
xor
push
imul
sub
cmpsb
mov
push
popf
dec
decb
mov
popf
push
mov
int3
or
mov
fsubrl
scas
sbb
xor
ljmp
js
mov
or
inc
inc
test
clc
stc
push
xchg
mov
lds
xchg
test
jbe
adc
or
sbbb
xchg
out
in
fstl
pop
or
pushf
jo
rol
aad
mov
dec
mov
add
loop
mov
jmp
push
add
aam
adc
lret
loopne
ds
pop
xchg
jp
pusha
cmc
dec
cmp
test
sub
dec
mov
xchg
in
or
dec
sub
cmpsb
lret
js
push
fxch
test
inc
shll
xor
insl
ss
xor
cld
les
and
xchg
mov
shll
cmpsb
lods
inc
mov
xor
cli
jnp,pt
mov
gs
shl
and
jmp
xchg
xchg
mov
sub
popa
add
fisubrl
subb
mov
sub
push
iret
testl
lea
jae
js
adc
dec
adcl
cld
mov
std
mov
cwtl
lcall
rcll
int
mov
mov
pop
push
fcmovne
fs
and
mov
cmp
loop
mov
inc
push
into
sbb
add
sahf
movsl
dec
sbb
iret
cwtl
push
das
dec
or
sbb
in
adc
and
orb
cmpsb
rorb
xchg
cwtl
out
jmp
mov
cli
or
inc
jo
sub
test
sbbb
insl
jo
mov
adc
jge
ret
jg
adc
sahf
scas
int
cltd
fdivrl
cltd
das
rcr
jo
xchg
jne
cwtl
cmpsb
xchg
or
and
jg
xchg
mov
cmpsb
mov
adc
dec
and
aad
fdivrl
push
pusha
vmovlps
push
out
test
sbb
cmpsb
and
cmp
mov
fisubrl
sbb
push
sub
frstor
dec
mov
cmp
cltd
and
add
ja
add
scas
lret
adc
xlat
adc
addr16
aas
incl
stos
cmpsl
inc
or
lcall
pop
add
call
pop
je
pushf
xchg
sub
jge
scas
rcrl
dec
out
xor
cmp
pop
jns
pop
jbe
adc
enter
xchg
sti
push
out
dec
jg
in
dec
icebp
subb
test
aam
pop
lock
or
loope
pop
mov
xlat
adc
add
pop
xlat
jae
lock
mov
into
loopne
out
pop
add
and
mov
int
insl
test
std
xchg
icebp
adc
add
jne
mov
pop
out
movsb
adc
negw
sbb
aam
and
dec
xchg
pusha
aam
jns
xorb
in
stc
stc
lods
pop
cli
add
cmp
popf
pop
addr16
push
cmpsl
andl
push
iret
and
test
add
pusha
push
dec
dec
addr16
pop
ja
pop
add
iret
pop
push
or
sbb
sub
out
int
lods
add
mulb
addl
inc
test
push
pop
fdivr
sub
pop
inc
out
testl
xor
add
call
sub
or
ret
lea
add
pushf
mov
insb
loopne
sub
in
cltd
popf
dec
adc
add
dec
sti
mov
fnsave
mov
jle
adc
lea
push
pop
xor
lods
lahf
out
fidivrs
push
ret
test
sub
pop
sbb
and
add
out
cmp
stc
sahf
stos
xorb
fsubr
mov
pop
pop
les
sub
pop
push
int
leave
or
scas
paddw
sbb
ds
nop
cmp
jl
jle
mov
cmp
sub
cmp
nop
mov
movsb
mov
mov
lahf
push
cmp
mov
mov
and
pop
fidivs
pushf
and
xor
int3
lods
aad
das
test
aas
pop
test
aad
adc
pop
jl
mov
xor
out
movsb
push
sub
das
cmp
and
int3
add
inc
xchg
inc
subl
inc
lret
orl
loop
adc
cmp
mov
jmp
or
sbb
add
dec
movsl
dec
xchg
lods
sbb
cmpsb
xor
loop
outsl
in
out
push
jno
out
lods
cmp
lahf
cmpsl
aaa
or
xorb
sbb
mov
mov
rclb
mov
jmp
push
leave
sub
xlat
pushf
das
lea
aam
push
ret
int
out
fidivl
or
std
dec
inc
pop
outsl
cld
jb
jge
jg
cmpsb
inc
psrlq
push
aad
pop
inc
inc
xchg
std
notb
xchg
xor
cmc
ret
or
mov
xchg
bound
aaa
add
push
lds
inc
and
stc
fisubl
pop
lock
add
sub
ja
scas
sahf
pop
pusha
pop
cmp
lahf
or
xlat
out
xchg
clc
cld
inc
jno
cmp
xchg
pop
loope
ret
mov
rcrb
pop
push
test
lret
jmp
pushf
std
and
push
pusha
jbe
mov
repnz
push
push
cmp
inc
into
enter
outsl
stos
je
and
loop
arpl
aas
jae
loop
pop
xor
inc
adc
add
mov
lods
fbstp
mov
insb
shlb
lods
adc
and
or
jge
gs
mov
nop
sarb
out
lret
nopl
inc
mov
adc
xor
imul
jl
inc
aaa
mov
out
cltd
xchg
xchg
ss
cs
lret
ja
std
push
push
leave
mov
aam
sub
in
inc
push
push
mov
sbb
mov
jnp
xchg
mov
mov
jmp
jns
mov
and
cmp
inc
cli
std
aaa
xchg
push
int
insb
adc
outsb
cmp
mov
mov
cmpsb
jb
scas
outsl
lret
shrl
out
add
jl
add
nop
mov
add
sbb
inc
jp
pop
popf
les
test
fldl
add
jns
xor
mov
cmp
addr16
rol
add
mov
mov
rorl
push
in
push
aam
clc
mov
insl
sbb
and
adc
mov
pop
add
inc
cltd
push
das
ret
sti
repz
pop
nop
out
insl
ret
dec
and
cmpsb
dec
outsb
sub
cmp
or
test
insl
mov
inc
lods
adc
cltd
jb,pn
loopne
jae
mov
sub
daa
cmpsb
cmp
aam
out
or
xlat
jmp
sub
add
cwtl
add
aas
sbb
mov
stos
adc
or
imul
inc
jp
jno
cmp
xor
sar
adc
fistpl
jbe
pop
or
std
sub
out
jg
sub
gs
add
mov
sbb
add
test
mov
xchg
stc
sub
fcompl
cmpsb
shlb
cwtl
scas
mov
mov
test
mov
js
cmc
push
add
fadd
push
bswap
sbb
pop
test
ret
rcr
mov
cwtl
xlat
pop
negb
cmc
push
pop
sbb
jmp
out
mov
mov
in
scas
shl
adc
inc
aas
mov
es
add
and
loopne
cmp
testb
jno
jge
push
and
add
dec
enter
cwtl
out
sub
movsl
das
imul
movsl
into
je
mov
jno
call
out
cmc
xchg
adc
push
gs
hlt
andb
loope
cwtl
lods
mov
test
sub
cmp
lock
loope
inc
shrl
lret
out
or
sbb
test
sti
adc
jns
sti
inc
dec
adc
fs
in
mov
loope
or
push
xchg
rorb
mov
arpl
pop
cmovp
push
das
inc
fmul
inc
mov
stc
mov
xor
cli
sub
cmp
xor
add
add
mov
add
int
ja
adc
leave
pop
sbb
sbbb
mov
lock
fisttpll
mov
inc
cmpsl
mov
adc
fisttpll
xchg
mov
mov
jnp
les
mov
pop
sbb
jp
mov
or
xchg
nop
mov
imull
jne
xchg
push
frstor
call
shrl
push
aaa
xchg
test
jnp
hlt
mov
call
fmuls
arpl
je
jbe
daa
jge
inc
or
imul
sbb
push
pop
lods
fwait
movsb
daa
push
adc
push
inc
pop
mov
dec
lods
xchg
add
fmull
mov
mov
cs
cmp
dec
cmpsl
xor
add
sbb
add
jno
jns
inc
mov
lods
mov
cmp
jnp
cmpsl
pop
jo
jbe
out
outsl
mov
sbb
lods
mov
mov
push
mov
inc
jecxz
adc
out
movsb
in
mov
mov
mov
fs
mov
adc
scas
mov
mov
fwait
out
add
mov
and
pop
fwait
lock
scas
test
lea
out
test
std
aam
xchg
inc
sbb
dec
ds
mov
jecxz
mov
sbb
shrb
xor
in
add
cmp
es
movsl
fistps
gs
mov
cltd
fcompl
mov
push
rep
imull
sti
aam
xor
add
mov
sub
jo
xorb
push
idiv
aam
pop
mov
or
mov
lcall
and
fsubs
lahf
xor
or
inc
scas
add
cmp
faddl
inc
adc
clc
mov
fmul
add
mov
inc
add
pop
mov
inc
push
xchg
cwtl
pop
inc
lret
in
sub
movsb
mov
scas
xor
pop
xchg
in
sub
push
fwait
lret
sub
inc
movsl
adc
dec
and
jge
inc
mov
inc
jg
pop
subb
std
nop
shll
xchg
jbe
xor
gs
mov
cld
cld
pop
outsl
push
jnp
test
outsb
dec
testl
aaa
push
mov
repnz
outsb
popf
xchg
add
mov
pop
fldcw
test
dec
iret
rolb
lahf
fimull
push
dec
adcb
cmp
dec
cmpsl
cmpsb
ficomps
outsb
daa
mov
ja
xchg
cmpb
pop
jnp
mov
outsl
pop
mov
movb
sbb
xchg
jl,pn
adc
arpl
xchg
sbb
std
call
imul
cmp
stos
imul
inc
sbb
sbb
or
cli
adc
sbb
add
jo
outsb
cli
arpl
mov
adc
clc
pop
inc
fwait
cs
cwtl
int3
xor
mov
and
sub
loopne
testb
pop
xor
ficoms
ficoms
int
or
stos
cmpsb
js
lret
andl
es
or
cmp
es
fisubs
xor
insb
sbb
xchg
leave
inc
scas
push
mov
xchg
pop
xor
stos
sarb
addr16
push
or
shlb
fdivrl
jge
fdivrl
outsb
jno
jae
mov
xor
sbb
push
mov
xchg
sbb
testb
adc
ja
dec
sub
int3
xchg
add
call
mov
sub
pusha
je
push
dec
or
jg
sbb
sub
ljmp
fcoms
int3
xchg
cmp
lea
test
out
fs
cmp
jae
mov
lea
dec
loopne
sbb
lret
sbb
pushl
mov
movsl
mov
sub
movsb
cwtl
lds
out
add
addl
arpl
repz
mov
inc
inc
lahf
mov
jnp
movsl
dec
lret
aam
mov
fcompl
add
lret
cmc
out
xor
sub
jmp
mov
fcompl
add
mov
mov
shrl
mov
pop
ret
fstl
xchg
xor
movsb
es
std
pop
xor
mov
pop
insb
jl
iret
mov
jp
and
pop
or
int3
fistpl
mov
rcl
dec
test
cwtl
mov
mov
sarb
std
pop
lcall
jge
pop
adc
fwait
dec
mov
test
shlb
push
push
test
pop
or
je
int
xchg
out
and
mov
dec
sbb
ret
jb
fldenv
pop
fcomps
mov
scas
shrl
jbe
pop
loop
lret
in
dec
fmul
cli
dec
fdivr
shrl
pusha
cld
int3
mov
cmc
loop
cwtl
pusha
push
push
mov
inc
inc
aam
mov
xor
stos
lods
das
dec
xchg
test
xchg
xchg
int
test
lcall
pop
outsb
fadd
cmpsb
scas
std
test
add
mov
push
roll
mov
mov
ret
push
xchg
mov
dec
mov
ds
nop
cld
loope
and
sbb
jecxz
pusha
or
sub
subb
popa
add
test
push
repz
fcomp
call
sbb
rcll
bound
popf
mov
pop
jg
pop
das
adc
mov
mov
jle
pop
ljmp
jle
negb
lods
fs
add
mov
cs
add
inc
dec
mov
pop
das
loop
iret
out
jno
fdivs
insl
ror
sarb
loop
popf
sbb
cmp
fxtract
dec
addr16
shll
jecxz
fistps
addr16
dec
mov
outsb
pusha
add
ds
movsb
scas
xchg
push
lahf
jb
add
xchg
int3
ds
les
lahf
stc
mov
popa
dec
test
push
adc
mov
push
mov
mov
xor
jns
or
sahf
addr16
xor
lret
mov
cmp
and
inc
push
adc
cltd
lods
mov
pop
iret
in
push
dec
mov
add
bound
lea
pop
xor
jno
sbb
jle
cmpsl
add
ljmp
in
jg
movsb
adc
sub
inc
pop
bound
jnp
or
repnz
pop
shrl
and
adc
cmc
ret
cmp
cmp
or
mov
mov
jno
and
xchg
leave
imul
dec
mov
imul
and
scas
enter
fwait
and
add
subb
pop
out
sarb
sbb
in
insb
je
clc
or
adc
es
xchg
addr16
xorb
mov
in
push
std
pop
pop
lods
xchg
push
mov
mov
loopne
mov
sbbb
add
mov
out
cmpsb
cltd
scas
sti
stc
or
inc
xchg
hlt
mov
lcall
fwait
push
popf
jbe
xchg
pop
cmp
mov
enter
fwait
sarl
mov
or
push
outsb
xchg
les
nop
movsl
insl
mov
imul
sbb
fidivrl
pop
rorb
ror
rcl
fadds
xchg
sub
inc
cli
mov
fidivl
fnstenv
negl
test
mov
gs
pop
mov
xchg
lea
mov
pop
and
lret
mov
lods
dec
mov
int
push
pop
sub
dec
js,pn
mov
cmp
mov
insb
aas
jle
mov
xor
dec
jp
add
sbb
lahf
mov
xlat
getsec
and
inc
les
int
ljmp
dec
dec
xchg
jp
mov
cmp
mov
ret
in
mov
inc
xor
nop
xchg
and
pop
outsl
stc
mov
imul
sbb
cmc
jno
fnstenv
cli
sub
dec
lods
stc
and
cmpsl
inc
stc
pop
lcall
popa
dec
dec
lcall
hlt
cmc
cmp
leave
insl
xor
test
mov
testb
dec
add
push
xor
or
mov
dec
push
xchg
mov
mov
sub
sti
jge
sahf
xchg
aas
and
xchg
xor
dec
cs
or
cmp
movsl
jns
mov
sarl
call
insb
inc
imul
bound
popa
push
jg
cmp
int
xchg
popf
out
xchg
rolb
cmpsb
sbb
in
aaa
inc
pop
scas
fcompl
mov
cmp
push
adc
push
adc
jecxz
inc
subl
and
pop
pop
aad
fnstcw
sbb
pop
inc
mov
xlat
mov
sbb
inc
mov
test
dec
xchg
push
pusha
xchg
in
add
pop
shlb
pmullw
test
mov
ret
jbe
repnz
pop
je
xor
xor
jns
xor
add
push
movsl
cmp
dec
cmpsb
repz
dec
insl
add
imul
mov
lock
adc
pop
xchg
repnz
or
testl
out
stc
jg
dec
addr16
mov
aas
lods
xor
cmp
xor
cltd
inc
xchg
cmp
cli
inc
fldenv
jg
fcoms
cmp
pushw
cmc
mov
dec
sub
jp
mov
andb
pop
jbe
mov
or
lea
cld
adc
mov
or
mov
xchg
adc
dec
fstp
xor
push
mov
mov
jge
mov
push
mov
sbb
add
test
in
mov
call
aaa
pop
pmaddwd
dec
js
jg
pop
lods
and
pop
andb
mov
mov
pop
dec
add
pushl
shl
xchg
out
stos
sub
jl
cld
lret
push
add
popw
cmc
movsl
cmp
pushf
xchg
inc
enter
je
cltd
add
xchg
push
test
inc
lahf
lahf
xchg
xchg
mov
test
pop
inc
ja
xchg
sbb
paddw
mov
jae
xchg
add
notb
sar
aaa
mov
sub
sbb
stos
xlat
aad
popf
xlat
cmpsl
pop
jge
push
out
sbb
push
inc
pop
imul
mov
cmp
xchg
scas
and
movsl
mov
repnz
psllq
cld
mov
jne
mov
test
xor
roll
sub
lret
add
inc
add
das
repnz
into
sbb
pop
jmp
cmp
popf
add
xor
cmp
sub
or
or
mov
adc
addl
push
push
push
mov
push
icebp
leave
aam
mov
push
mov
rolb
imul
jnp
leave
test
dec
ljmp
das
lahf
inc
dec
movsl
mov
repnz
push
ret
addr16
mov
leave
lock
and
fstps
push
push
imul
pop
lods
js
xchg
pop
xlat
add
and
mov
jbe
je
arpl
mov
push
mov
mov
out
stos
dec
and
daa
cmpl
push
and
mov
mov
pop
xchg
pushf
inc
fwait
or
inc
and
out
ds
sub
mov
xchg
mov
mov
cmp
xor
fidivrs
xchg
or
mov
sub
mov
std
lods
adc
ja
les
cmp
jae
rsm
bswap
fdiv
fwait
scas
dec
cmp
jmp
rcr
daa
mov
mov
nop
xchg
repnz
fisttpll
cwtl
xor
inc
lods
push
in
movsl
pop
mov
pusha
fmul
inc
mov
sub
mov
int3
ret
push
aam
sarl
xor
inc
fdivrs
ret
in
in
push
xchg
inc
lret
push
xchg
mov
scas
movb
xchg
icebp
sub
test
es
je
lods
hlt
cmp
out
js
mov
cmpsl
or
sbb
pop
jle
add
imul
std
jle
mov
add
ret
repnz
in
rclb
or
pop
or
mov
add
sub
clc
mov
pusha
mov
iret
dec
sbb
cmp
fmul
mov
fnstcw
testb
sbb
dec
jne
mov
xchg
jp
movsl
jg
xor
mov
push
inc
jae
outsl
pop
lcall
cwtl
add
aaa
fisttpll
ret
movsl
pop
mov
in
cmp
leave
or
add
or
test
xchg
sti
orl
adc
nop
cltd
jmp
mov
repnz
and
dec
jg
sub
sub
popf
insl
lods
cmpb
rcl
insb
dec
push
lahf
cwtl
jno
js
sbb
sbb
mov
lret
xchg
sbb
fiadds
inc
pop
cmp
or
mov
int
imul
stc
cmp
imul
xchg
cmp
outsb
test
adc
jecxz
aaa
mov
or
cmc
pushl
mov
scas
lret
movsl
push
push
mov
inc
and
push
int3
mov
scas
clc
js
ljmp
out
cli
add
and
cmc
xor
and
jb
andl
or
imul
jecxz
add
dec
repnz
xchg
loop
dec
jno
xor
mov
add
ficompl
lds
mov
xchg
push
xchg
xchg
inc
cmp
xlat
or
leave
pop
push
xchg
inc
call
orb
dec
or
or
in
cs
int
ja
leave
pop
jnp
sub
cmp
cmp
cmp
xchg
adc
jbe
push
pop
mov
roll
mov
loope
test
jne
icebp
movsb
clc
push
sub
xchg
sub
xor
cs
das
adc
dec
xor
push
and
push
push
xlat
movb
xchg
dec
push
addb
dec
outsl
cmp
dec
jnp
xor
stc
loop
stos
into
daa
stos
pop
pushf
cmp
movsl
mov
xor
ficoml
test
roll
jbe
push
sub
push
sub
sbb
mov
or
mov
sahf
dec
xchg
mov
pop
or
pop
sbb
sbb
adc
movsl
add
mov
dec
xchg
xor
loop
pop
out
xchg
pop
xorb
cmp
inc
pop
addr16
pop
out
loope
pop
and
dec
call
sti
lds
out
fimuls
cwtl
loopne
dec
pop
jecxz
xchg
xor
inc
pop
cli
add
or
repz
or
inc
and
lret
xlat
dec
adc
dec
jmp
testb
pop
movsb
test
mov
push
les
jne
test
or
add
scas
test
pop
repnz
and
iret
arpl
je
jecxz
add
sub
mov
pusha
sub
mov
popa
movsb
cmp
mov
scas
popf
xchg
mov
jmp
cmpsb
movsb
and
sub
fs
jmp
insl
sub
or
pop
sub
bound
jge
ds
jns
and
imul
rcr
out
jl
dec
sahf
cmpsb
push
inc
mov
punpckldq
cwtl
inc
and
mov
lods
pmaxsw
repnz
popf
push
jge
xlat
lsl
inc
test
outsl
fistpll
inc
sbb
mov
sarb
mov
push
insb
and
cmp
hlt
mov
adc
orb
bound
je
xlat
cmp
daa
int
cmp
rcrb
push
sub
xor
fnstcw
aas
mov
mov
xchg
cmc
fsubrl
js
sbb
push
in
popf
fstl
cmc
mov
pop
push
pushf
adc
cmp
jne
jb
sbb
xor
xchg
adcl
inc
lods
or
jmp
in
sbb
lds
imul
jl
adc
mov
mov
daa
mov
sub
jl
dec
lea
sti
movsl
jmp
dec
sbb
cmpsl
xor
jp
popa
cmp
pop
inc
xchg
loopw
icebp
inc
ljmp
dec
cwtl
rcrb
pop
inc
mov
inc
shlb
jp
nop
jbe
add
or
das
je
inc
rcll
push
fistl
and
push
fisttpll
xor
hlt
mov
scas
pop
mov
pop
xor
ret
jae
adc
cmpsl
fwait
mov
xchg
stos
in
pop
jbe
test
xchg
lock
rorb
hlt
sbb
sti
jecxz
push
push
mov
in
mov
in
imulb
pop
cli
cwtl
std
ret
scas
out
xor
fadds
fs
lahf
pop
push
mov
push
insb
outsl
mov
aam
pop
mov
out
loop
aam
xlat
icebp
js
repnz
stos
inc
pusha
push
dec
testb
pop
dec
or
cmp
or
arpl
jecxz
repnz
push
inc
loopne
loope
mov
dec
movl
loopne
jmp
repnz
in
cs
fs
repz
cwtl
int3
inc
cmpl
push
xchg
push
shrl
mov
ret
mov
jbe
hlt
mov
jmp
test
arpl
add
leave
ss
pop
inc
movsb
xchg
jecxz
in
scas
mov
movsb
inc
pop
inc
ss
ljmp
dec
push
cmpsb
mov
cld
sbb
sahf
cs
pop
or
mov
push
mov
lods
jnp
mov
fnstenv
ljmp
stos
mov
push
or
aas
aas
jecxz
leave
push
jb
xchg
scas
ret
lret
mov
xor
and
mov
sub
les
push
clc
cmp
sub
pushf
aas
push
and
mov
addr16
jle
stos
sahf
leave
popa
or
inc
rclb
cwtl
inc
or
lret
inc
add
cmp
sti
pop
nop
aaa
loop
test
dec
nop
and
fdivrl
mov
mov
jle
mov
repnz
pop
bnd
jmp
add
dec
loope
fld
dec
clc
out
mov
fmuls
xchg
stos
dec
mov
in
dec
mov
int3
xor
adc
and
sahf
pop
cltd
mov
and
mov
xor
outsl
mov
jb
out
loopne
sbb
adc
or
push
dec
jp
mov
nop
sar
mov
xchg
jnp
jno
gs
repnz
dec
mov
dec
jns
mov
dec
xchg
testb
or
subl
add
jb
pop
or
inc
imul
or
or
jecxz
xor
mov
jne
xchg
adc
sbb
mov
shll
ss
or
adc
push
rcl
scas
mov
xchg
push
repz
in
fs
pop
or
cmp
fwait
cltd
jg
jo
xor
repz
jmp
gs
aad
mov
out
and
cmp
sar
in
aad
in
mov
mov
push
jo
jo
out
and
imul
jle
loopne,pn
pmaxub
jae
int3
icebp
roll
fsub
enter
push
psraw
mov
xchg
mov
lods
add
add
fnstsw
jmp
xchg
test
daa
push
pop
cltd
mull
jp
xchg
lcall
dec
les
call
addr16
xor
and
enter
inc
xlat
mov
xchg
mov
ss
and
push
sbb
jo
pop
add
or
mov
lea
jge
into
nop
sub
lcall
xor
leave
addr16
aad
and
in
mov
and
imul
fstpl
bnd
scas
idivb
or
mov
mov
jb
xchg
iret
gs
movsb
jnp
outsl
cmp
int3
mov
cmpsl
cmpsl
lea
adc
or
ds
xchg
sub
xchg
mov
movsb
inc
lcall
enter
inc
cmp
fisubrl
sub
inc
and
push
lcall
std
mov
adc
mov
pop
subb
jb
dec
pop
je
jp
mov
pusha
aad
pop
jge
sub
iret
xlat
push
js
nop
add
clc
cmp
jge
push
fxch
lahf
jae
cmc
dec
leave
jo
push
adc
xchg
sub
sub
or
add
fwait
loopne
nop
push
rcrl
mov
sti
xor
lock
stos
cli
or
jmp
push
cli
in
dec
mov
mov
cld
xlat
insb
or
pop
pop
stos
push
pop
out
dec
xor
sbb
pusha
sbb
popa
sbb
sbb
loope
jb
xchg
pop
sub
mov
and
ss
fildll
pop
xor
mov
stc
xchg
dec
mov
mov
lock
sub
lods
scas
mov
mov
xor
fs
push
or
stos
dec
lea
pop
aad
xor
sbb
and
jnp
es
cmc
ljmp
mov
sarl
getsec
psllq
jne
jle
loopne
mov
fwait
fs
push
mov
ja
pop
jp
inc
cmc
ja
sbbl
lcall
dec
mov
ret
nop
fwait
pop
ficoml
out
mov
ss
cmpsb
lds
pusha
add
cmp
dec
int3
lds
lock
dec
dec
or
scas
pop
xchg
psllw
xorb
fcmovb
or
stos
imul
mov
sarb
or
jle
push
jmp
pop
lret
test
ds
push
nop
sahf
aas
repz
jmp
cwtl
out
ja
sbb
jbe
cmc
sahf
in
lcall
outsb
negb
mov
repz
inc
jle
pop
or
sbbl
sub
dec
scas
sarl
cmp
xchg
in
clc
mov
dec
adc
sbb
pusha
push
popa
sub
pop
hlt
push
push
ficomps
inc
cli
xor
inc
and
xor
and
lret
iret
inc
ds
leave
repz
sti
mulb
xchg
sti
stc
cmc
iret
je
cmc
mov
cwtl
ljmp
dec
in
rol
cmp
fidivrs
mov
bound
mov
adcl
sbb
into
and
xor
sub
mov
fmuls
outsb
in
int3
icebp
data16
adc
movsb
stc
ja,pt
cmpsb
mov
loop
bswap
fwait
outsb
js
sub
sahf
or
adc
cmp
add
sub
lods
xchg
inc
lods
orb
pop
add
rorb
sahf
iret
jnp
add
mov
pop
mov
test
sti
lds
mov
cmpsb
inc
mov
cmpsb
outsl
aas
lret
jns
ja
ror
fstps
pop
out
lahf
aas
jns
rep
gs
mov
stos
pop
mov
mov
gs
cmpsl
mov
orl
mov
rorl
and
jae
insb
cmp
out
xchg
outsl
mov
sbb
lret
fsts
jp
or
jno
aas
adc
stos
mov
std
mov
fs
mov
lret
ret
adc
clc
xchg
adc
fadd
stos
add
xchg
and
movsb
push
leave
lock
mov
xchg
aas
jmp
push
std
ja
sub
fcom
add
push
popa
enter
ljmp
lods
fs
fsubl
lcall
xlat
scas
insb
bound
push
dec
pushf
in
test
pop
dec
push
push
movsl
jle
jmp
mov
pop
out
out
inc
jns
imul
inc
roll
lods
cmpl
and
std
sub
or
inc
or
push
divl
icebp
icebp
mov
jmp
mov
adc
or
adc
inc
push
clc
pop
aas
mov
mov
popa
jle
sbb
ret
push
pop
xorb
rorb
lods
lock
imul
xchg
stc
jmp
jb
ret
test
andb
stc
sbb
mov
inc
aam
insl
std
sahf
cmp
inc
orb
adc
cmc
mov
nop
pop
fsts
clc
push
fsubl
jns
and
push
loopne
adc
jnp
leave
lods
fidivrl
sub
xchg
inc
jns
inc
push
or
cmc
je
and
and
jecxz
addl
jnp
jmp
xor
push
inc
testb
ja
fsubrs
sub
add
jecxz
and
push
int
pop
clc
jl
call
into
ds
add
push
sbb
push
out
cmp
sbb
and
pop
scas
arpl
inc
and
daa
in
mov
lods
xchg
push
clc
push
incb
or
test
frstor
in
js
cmp
sub
or
out
push
ljmp
mov
daa
and
or
std
pop
sti
sahf
lock
sbbl
div
add
dec
ja
popf
cmc
insb
jo
in
add
fs
and
pop
scas
and
pop
int3
inc
and
xor
out
lret
ret
jge
jne
sbb
add
addr16
mov
bound
pop
addl
jo
fbld
mov
push
fistps
pop
ret
scas
push
into
mov
mov
dec
jo
cmp
mov
sub
shll
pop
sar
or
jmp
js
lahf
rcr
les
xor
mov
adc
mov
jnp
xor
mov
sbb
cmp
push
mov
ret
dec
testb
repnz
jns
leave
add
pop
fwait
je
dec
push
push
outsl
shrl
and
jne
cs
dec
inc
mov
nop
xor
cmpsl
jge
jb
jb
add
mov
es
adc
mov
cld
jp
jmp
cmpsl
lds
add
test
mov
mov
jl
push
enter
push
sbb
jle
mov
rorl
push
mov
push
dec
dec
pop
lock
jo
rcll
add
jmp
push
fsubrs
lret
dec
arpl
stos
leave
push
lcall
lods
das
dec
fidivrs
hlt
xor
xchg
xor
fwait
mov
push
xlat
xor
mov
push
push
dec
in
loopne
shl
outsl
data16
mov
mov
bound
aas
xor
push
push
dec
push
fstps
cld
mov
jne
jo
sti
icebp
xchg
pop
stos
cmp
cmpsb
pop
pop
push
popf
mov
inc
push
push
jle
leave
shll
add
add
iret
sub
sbb
cmpsb
mov
sbb
xchg
lcall
out
pushf
pop
cli
aaa
mov
fdivl
add
add
pop
enter
mov
filds
mov
inc
mov
bswap
xchg
test
data16
arpl
sub
jle
mov
cmp
mov
mov
ret
iret
loop
mov
adc
sbb
outsb
cmpsb
fdiv
outsl
fistpl
mov
or
cmpsb
mov
dec
sub
loope
xor
cltd
sbb
jae
cltd
loop
fistpll
lret
adc
aam
scas
add
dec
lahf
test
call
scas
push
jb
and
cmp
fs
fiadds
test
shlb
in
push
inc
out
pop
hlt
and
pushf
dec
scas
and
add
pop
xlat
inc
xchg
in
cmpsl
sbb
aam
fbld
into
add
cmp
popf
ss
hlt
stos
mov
scas
push
test
cltd
and
jle
test
pop
and
ljmp
sbb
adc
jl
mov
and
push
cmp
ss
push
and
xor
nop
loopne
insl
mov
add
insb
outsb
mov
mov
cmc
push
inc
addr16
mov
inc
lret
neg
cmp
pop
addr16
repnz
xchg
js
fadds
xorb
mov
and
gs
andl
ds
cmp
shrl
cwtl
sbb
lea
adc
xchg
pop
or
mov
pop
dec
mov
push
and
ja
test
pop
xor
loope
dec
psllw
or
mov
and
out
xchg
test
adc
popf
pop
fwait
in
negb
lea
mov
sub
or
cs
jle
mov
pushf
int
stc
lock
outsl
push
repz
jns
aaa
fstps
jne
sbb
into
data16
cmpsl
push
scas
sub
stc
inc
scas
xor
mov
xor
out
ror
cmpsb
mov
inc
inc
fiaddl
aaa
mov
sub
scas
scas
int3
leave
add
ja
call
lods
inc
sub
inc
daa
das
insl
or
ljmp
sbb
adc
mov
in
and
pop
mov
xor
out
push
aam
jge
into
add
ljmp
adc
sbb
sahf
inc
int3
bound
jnp
dec
jle
jl
into
lea
dec
aas
jp
movsl
int3
gs
mov
aas
mov
je
jb
add
xchg
inc
mov
mov
adc
inc
and
inc
xlat
fwait
xchg
mov
in
imul
sub
pusha
out
in
rcrl
dec
lock
sub
dec
ss
mov
pop
ss
xor
or
xchg
cli
jne
test
or
or
push
imul
mov
jmp
push
add
xchg
or
sub
repnz
mov
mov
add
jnp
je
xor
pushl
add
cmp
into
repnz
test
into
and
stos
sub
fbstp
mov
add
mov
or
repnz
push
add
movntq
out
mov
mov
jns
and
cmpsb
lcall
pop
mov
xor
out
sub
outsb
mov
test
push
push
in
lea
lahf
mov
pop
xlat
daa
jl
repnz
inc
sbb
dec
inc
lock
lock
mov
pop
mov
sub
xor
push
lcall
data16
jge
inc
mov
ret
pop
lcall
cmc
mov
dec
xchg
fmull
pop
xorl
rcl
sub
loopne
pop
add
fs
sahf
inc
pop
add
mov
aaa
mov
xchg
outsb
cmp
je
jmp
mov
jp
ss
loope
add
jmp
push
xor
leave
cmpsl
xchg
ljmp
pop
notb
loop
pop
inc
mov
ret
jmp
sub
sub
ljmp
sbb
push
xchg
ret
fcmovbe
push
and
inc
repz
xorb
or
xor
orb
or
jmp
push
insl
addr16
in
push
xchg
in
sahf
repnz
lahf
je
push
sbb
add
push
dec
out
xor
push
mov
and
xorb
cmp
insl
es
cmpsl
dec
mov
xor
add
es
cltd
pop
das
and
scas
jae
je
lea
cmp
and
jo
jl
pop
mov
jl
pop
jae
aas
push
push
pop
mov
mov
aaa
popa
mov
and
lock
jmp
sbbl
and
call
call
mov
lret
imul
mov
testb
das
outsl
mov
scas
xchg
pop
xchg
loop
xchg
jmp
mov
shl
dec
stos
js
ftst
cmp
nop
test
lahf
sub
sub
pop
sub
iret
pop
push
cmpb
sub
cmp
in
xor
pushf
push
inc
xor
and
mov
xchg
sbb
insb
adc
xor
or
sbb
fimull
xlat
mov
mov
ret
aas
inc
adc
popf
ret
cmp
or
jns
xchg
fs
jae
push
lcall
rcrl
lods
insb
std
mov
sub
adc
xor
push
cmpb
rolb
sbb
bound
stc
sub
pushf
mov
mov
rolb
bound
add
jno,pt
add
sbb
mov
pop
fcomp
aam
jo
leave
js
push
jecxz
adc
testl
fbld
popf
repz
in
inc
xor
xchg
lcall
mov
cmp
sbb
mov
push
dec
push
push
jecxz
push
loope
mov
mov
and
imul
push
push
pop
jbe
pop
mov
xchg
pop
shrl
mov
push
fwait
leave
jmp
inc
les
dec
mov
scas
push
fimull
push
jp
adc
out
jno
mov
ret
mov
and
stc
pop
xlat
xchg
inc
push
in
imul
mov
icebp
movsb
test
int
pop
sbb
push
jns
lret
nop
movsb
mov
mov
add
shll
loop
sbb
cli
lcall
scas
mov
imul
mov
rol
mov
int3
nop
mov
push
data16
or
fiadds
xor
hlt
mov
mov
pusha
mov
jp
lods
std
ja
fbstp
mov
inc
je
jg
out
xchg
jnp
add
out
or
je
adc
xchg
les
adc
ss
mov
mov
sbb
push
jp
loop
pop
jb
stos
imul
scas
loopne
dec
aaa
sarb
sahf
test
and
xchg
mov
jns
mov
insl
cmp
dec
ljmp
and
fdivrp
cmp
lret
cli
inc
sbb
nop
adc
or
lcall
pop
ror
jecxz
fistpl
std
js
hlt
bound
sarl
cmp
call
iret
icebp
daa
rorb
ds
sti
mov
and
dec
mov
sub
inc
push
or
mov
add
add
pop
mov
leave
mov
and
loop
push
repz
shr
pop
push
movb
mov
out
xorl
xchg
bound
ss
test
jne
popf
jge
loopne
into
rorb
cwtl
mov
xchg
stos
popf
mov
clc
lcall
cli
in
addb
add
jmp
xorb
aad
dec
and
jp
push
sarb
ficoms
push
lret
testb
xor
clc
ss
jnp
ja
pop
xchg
and
scas
xor
push
pushf
mov
loop
xor
inc
jl
js
lcall
js
adc
idivl
jmp
out
gs
fcoms
fcomi
jnp
add
jle
daa
jae
inc
pop
xchg
pop
mov
sahf
test
call
addb
xor
ljmp
dec
in
cmp
and
cld
pop
lock
cmp
insl
bound
repnz
std
cmc
pop
pop
push
inc
in
sub
jmp
jge
pop
or
xchg
push
and
les
or
pop
ret
jo
imul
aaa
lea
call
stos
mov
pusha
adc
pop
ficoms
icebp
jge
push
xor
mov
sub
mov
or
dec
test
mov
cmp
xorb
pop
push
repz
sub
sbb
mov
push
fwait
and
push
cltd
mov
mov
pushf
mov
mov
orb
add
mov
xor
in
adc
dec
loop
adc
in
add
mov
enter
pop
mov
push
je
out
shlb
mov
cld
aam
push
push
ror
stc
xor
frstor
cmp
bound
mov
jmp
scas
mov
pop
hlt
xlat
adc
pop
enter
cli
mov
xchg
nop
and
xchg
dec
sub
xor
xor
inc
mov
loope
mov
and
mov
jb
mov
rolb
mov
jg
je
test
repnz
push
pop
mov
outsb
inc
das
pop
xor
popf
and
sub
ficomps
sbb
mov
xchg
daa
xchg
pop
inc
xlat
push
mov
in
adc
mov
movsl
imul
and
cmp
sarl
jbe
pop
aas
mov
lods
pop
xor
cmp
pop
outsb
cmp
cmpsl
inc
jo
xchg
lahf
out
jo
shll
inc
mov
fists
inc
cmp
cmp
gs
cld
insb
ffree
adcl
push
cmp
aas
scas
aaa
adc
dec
movsl
mov
adc
xor
fs
and
sti
pop
or
pop
jmp
nop
aas
pop
xchg
movsw
add
inc
ret
inc
or
enter
rclb
sbb
pop
jle
aaa
lock
pop
jno
inc
pushf
xchg
pop
xchg
mov
adc
arpl
mov
xor
and
jnp
push
arpl
into
movsl
aam
sbb
pushf
stc
adc
jae
mov
mov
ds
je
add
aam
xor
imul
sbb
or
mov
dec
std
popa
nop
movsl
jo
call
je
xor
lods
sub
ror
dec
cmp
add
jmp
mov
mov
std
in
loope
or
jge
fnstcw
push
js
cmpsb
mov
xchg
pop
push
loopne
out
add
lods
fisubrl
and
shl
shll
push
pusha
ljmp
repz
push
shll
loope
fnstsw
cli
fwait
adc
cmp
ljmp
and
mov
pop
jnp
push
xchg
pop
push
clc
stos
push
adc
xchg
cmp
imul
sbb
mov
jno
lret
push
int
fwait
shll
mov
and
pop
lds
out
dec
pop
add
jp
std
lea
mov
ljmp
mov
xor
lds
xchg
sbb
mov
jl
mov
in
stos
cltd
hlt
jo
add
repz
in
shll
test
int3
mov
movsb
std
dec
or
mov
mov
cmpb
jnp
call
fdivrp
or
das
insl
sub
mov
mulb
jmp
mov
push
cmp
fldt
das
cld
lods
filds
mov
mov
cmp
xchg
and
push
sti
mov
cmp
js,pn
arpl
and
xchg
add
in
lret
dec
fisubrl
xchg
mov
sub
jp
inc
adc
test
mov
fsubs
mov
stc
mov
jmp
cmpl
cs
push
cmp
inc
shrb
cmp
mov
loop
repz
outsl
xlat
or
cmp
popa
adc
or
mulb
scas
roll
inc
imul
mov
ficoms
inc
sbb
test
dec
imul
cmp
pop
in
cs
xchg
dec
and
js
ja
scas
test
lret
inc
jnp
sub
das
mov
dec
repnz
or
xor
jecxz
addl
mov
or
and
jp
push
pcmpeqw
aas
incl
in
hlt
mov
sahf
sub
add
loope
adc
dec
sti
xchg
mov
cmpsb
sbb
mov
pop
adc
aaa
xchg
repz
and
mov
sbb
bound
add
mov
scas
lcall
call
xchg
int3
and
sub
scas
ljmp
js
scas
fucomip
push
adc
lahf
and
icebp
nop
mov
inc
movsl
xchg
add
cltd
mov
andb
lcall
stos
lret
test
daa
add
movntps
inc
int
mov
or
fwait
pop
cltd
test
push
jns
lds
pop
mov
lret
cmp
push
pop
std
or
jo
jle
jbe
mov
in
push
fisttpll
fistpll
and
out
push
in
adc
jns
xor
lret
mov
icebp
pop
jnp
scas
popf
data16
jle
mov
sbbl
inc
jbe
pop
sbb
movsl
inc
xor
push
jl
mov
lods
out
push
dec
or
cld
imul
inc
sti
ret
call
cmp
imul
mov
add
mov
push
pusha
add
push
test
in
mov
cmp
sub
shll
ret
inc
lods
xchg
jl
and
xchg
jmp
mov
dec
pop
test
out
or
push
test
pop
push
rolb
push
push
imul
imul
jecxz
out
add
push
mov
nop
jmp
jge
out
daa
mov
mov
push
pusha
jno
dec
cmpl
fsubrp
fcomp
cmp
push
dec
mov
data16
or
lcall
fld1
enter
jle
sub
inc
into
xchg
data16
push
iret
and
lock
fwait
lock
xchg
aad
mov
xlat
rcrl
nop
pop
xchg
xor
sub
jg
mov
mov
lahf
push
jnp
cmp
rcr
sbb
in
xchg
in
sbb
loop
xchg
ja
enter
pop
push
icebp
loopne
xor
sub
push
daa
inc
mov
popa
incb
int3
out
das
dec
or
mov
es
dec
cmp
mov
mov
xor
mov
scas
mov
and
mov
cmp
lea
mov
ret
imul
cli
add
mov
pop
in
test
fldt
fwait
add
cmp
sbb
sbb
scas
adc
lea
mov
add
out
icebp
lods
xor
adc
or
xor
cmp
jns
movsl
paddb
mov
jecxz
adc
mov
scas
nop
int3
xor
cmp
mov
adc
lock
les
adcb
and
dec
pop
jecxz
insl
scas
or
test
pop
add
jnp
sahf
xor
into
push
pop
out
das
dec
push
movsl
push
mov
cs
add
jmp
dec
sbb
adc
stc
fwait
jp
push
adc
pop
and
jbe
fwait
push
lret
dec
dec
iret
subl
mov
dec
lock
jmp
dec
insl
loopne
addr16
out
cmp
sub
xchg
xor
fadds
and
in
jne
int
pop
and
lcall
fwait
js
fisubl
xchg
or
andl
cltd
test
jp
pop
inc
adcb
fucomip
dec
xor
out
dec
jmp
jo
call
lea
fistpll
sbbl
add
sbb
xlat
xchg
es
sbb
and
cmp
hlt
lcall
adcb
inc
xchg
push
test
adc
or
jl
imul
fildl
test
and
repz
inc
jo
or
jge
ljmp
adc
mov
jmp
or
out
pop
mov
outsb
push
insb
imul
ret
notb
mov
in
add
lea
adc
movl
xchg
xchg
add
adcb
js
lret
cmc
test
mov
leave
arpl
test
stos
xlat
fdiv
dec
xchg
pop
popa
pavgw
addr16
je
xor
mov
xor
inc
xchg
and
or
add
repnz
nop
loopne
dec
pusha
cmp
ret
ret
rclb
cmp
sbb
cmpsb
mov
ret
call
cmpsl
xor
cmp
arpl
incl
jne
cmp
outsb
sbb
mov
ret
push
rcrl
add
jae
mov
mov
push
or
mov
xor
jge
pop
ret
push
jne
jo
test
iret
pop
mov
clc
loope
popa
lods
lahf
sub
or
stos
dec
call
in
out
fdiv
and
mov
ds
nop
enter
dec
daa
dec
roll
inc
repnz
cwtl
cmp
aaa
insl
popf
and
and
repz
or
adc
cmp
aad
sbb
cwtl
stos
in
mov
retw
popf
push
shrl
pusha
lret
enter
sub
je
mov
jmp
mov
js
popa
cli
and
push
fadd
daa
xor
lcall
aaa
mov
adc
dec
inc
shrb
ds
and
js
sub
inc
loopne
adc
call
or
lods
je
sbb
imul
and
into
sub
jbe
mov
mov
xchg
mov
and
hlt
pop
lret
data16
filds
daa
scas
iret
xchg
xor
sbb
rorb
xchg
loope
xchg
adc
jl
repnz
out
leave
in
ret
mov
mov
iret
sbbb
in
cmc
jmp
sahf
cmp
sbb
push
add
jmp
scas
xchg
jecxz
cmp
roll
and
loope
call
push
lcall
dec
repnz
xchg
movsl
lea
lock
xor
in
xor
inc
sub
dec
push
or
or
add
ss
test
fnstenv
adc
ss
inc
dec
cmpsl
cmp
negl
lahf
mov
push
icebp
in
jg
hlt
add
sbb
xor
decb
sbb
je
lods
ljmp
sbb
inc
in
push
jb
mov
popf
sahf
xor
sbb
cld
les
lock
push
inc
imul
xor
cltd
dec
loop
nop
out
bound
dec
mov
mov
push
cmp
inc
in
insb
pop
mov
decl
clc
idivl
or
pop
movsl
data16
movsl
pop
mov
jbe
ficompl
xor
loop
jns
imul
dec
cli
loopne
ficompl
sahf
mov
mov
mov
pop
leave
cmp
adc
arpl
clc
mov
pop
pop
fisubs
xchg
mov
xchg
negb
lods
xor
pop
push
popl
hlt
fsubl
or
gs
xor
ja
cmp
jle
mov
mov
cmpsb
jno
push
push
sbb
sub
scas
dec
lret
aad
jo
jae
dec
lcall
fdivrp
lods
fisttpll
in
push
pop
test
shll
pusha
add
outsl
pop
mov
mov
cmp
addb
sub
scas
xor
test
push
stc
adc
outsb
mov
popf
jmp
test
push
data16
pop
mov
push
pop
pop
mov
sbb
fists
or
fs
push
or
xchg
out
push
mov
popf
ja
es
pop
push
mov
and
sbb
stos
mov
int
clc
or
daa
out
jmp
mov
ret
popa
pop
and
fsubrs
push
dec
inc
cmp
xchg
adc
add
cs
negb
iret
mov
leave
imul
mov
pop
adc
and
sub
pop
inc
and
testb
mov
lea
mov
outsl
popl
mov
arpl
mov
inc
xor
or
scas
insb
pushl
mov
sub
pusha
mov
fstp
cmp
sbb
in
ret
mov
adc
adc
roll
and
shll
mov
xor
xchg
add
cmp
mov
jmp
addr16
fidivrs
adc
nop
mov
pop
lods
jo
iret
xchg
sub
add
in
stc
jecxz
sbb
fadds
or
cmp
inc
int3
jno
jg
pop
fistl
xor
int
cs
bnd
inc
stos
sbb
shrl
mov
addr16
sbb
adc
push
fs
shl
sub
dec
das
and
out
jno
nop
jg
jmp
lahf
inc
mov
arpl
adc
lods
clc
or
mov
mov
push
push
fisttpll
pop
xchg
insb
mov
mov
into
add
stos
jne
cmpsl
hlt
hlt
mov
inc
pusha
jl
bound
notb
jo
test
dec
sbb
fdiv
mov
cmp
push
xchg
dec
cmp
sahf
xchg
hlt
mov
addb
dec
push
xor
lret
or
hlt
out
lahf
aam
mov
popf
int3
xor
jns
xchg
je
sbb
ds
dec
jge
clc
js
insb
pushf
data16
cli
mov
out
test
fimuls
xor
push
ljmp
std
push
adc
add
clc
inc
sbb
and
test
call
insl
call
pusha
mov
xchg
outsl
jmp
xchg
or
xchg
adcb
out
push
mov
ret
ljmp
aas
arpl
dec
loopne
bound
shrb
inc
lea
pop
mov
in
outsl
mov
jbe
jne
sub
xchg
bound
pop
adc
shlb
ss
cmp
les
push
cmp
mov
fsubrl
push
and
cld
call
jmp
aas
push
cmp
fldcw
xchg
push
daa
xchg
ret
push
sub
lock
pop
mov
jns
shrb
inc
jge
push
pushf
ja
out
pop
sbb
jno
movsl
cmp
push
mov
dec
notl
dec
mov
sbb
add
jne
sub
cmp
int3
cmpsb
scas
xor
jns
add
popf
aaa
sub
nop
xorb
testb
leave
dec
adc
cmp
push
xchg
mov
push
adc
xor
loope
fadd
push
jb
xor
adc
mov
xlat
aas
imul
sbb
rcrl
cld
les
dec
cmp
rolb
jb
aas
add
push
stos
inc
arpl
sbb
sbb
in
mov
lods
sbb
aam
cmc
mov
dec
es
lock
sbb
clc
adc
mov
mov
shll
mov
daa
mov
int
les
fnstsw
ljmp
sub
or
lds
push
push
and
cltd
lods
xchg
cwtl
aam
jne
std
std
les
xchg
test
sbb
xchg
out
cld
aas
iret
pop
inc
stc
hlt
dec
pop
es
adc
les
sarl
fwait
stos
cmp
mov
xchg
mov
cs
xchg
sub
mov
adc
into
and
js
push
scas
andl
js
xor
xchg
xchg
pop
cmp
inc
mov
pop
repz
call
cmp
fidivs
add
jns
call
incb
pop
lret
or
jge
cwtl
mov
ret
pop
cmpb
test
or
divb
add
and
xchg
test
out
clc
mov
ror
test
sbb
jecxz
mov
sti
sbb
aad
popf
cltd
or
mov
lret
ds
mov
mov
aam
push
push
pop
mov
push
mov
pop
push
cmp
mov
jmp
mov
lods
sti
mov
popf
fildl
or
mov
cli
aaa
out
gs
shr
xchg
into
rorb
sahf
je
mov
sub
negl
enter
cltd
push
js
or
jg
stc
or
roll
fs
out
pop
sbb
cld
nop
fsub
push
mov
popf
jp
incl
outsb
pop
lods
mov
jno
xor
push
fidivrs
cs
je
xchg
pop
and
or
dec
ret
cmpsl
shlb
test
xchg
lahf
aam
loop
mov
push
inc
pop
and
daa
push
cmp
lret
push
xchg
push
scas
mov
insl
shr
outsl
pop
jbe
xchg
pop
push
mov
push
mov
sbb
cmp
sub
push
mov
mov
rolb
jecxz
sbb
ret
jnp
sub
sub
in
jnp
dec
sbb
or
cmp
mov
xchg
sarb
sbb
dec
test
mov
repnz
sbb
add
les
clc
adc
sti
mov
daa
cltd
lahf
jno
cltd
pop
pop
bound
enter
stc
pop
bound
sub
shrb
andl
add
sub
mov
sti
inc
inc
leave
push
sarb
in
and
jg
mov
out
loope
add
movsl
test
push
inc
int3
sub
adc
stos
sbb
andl
mov
mov
jg
in
stc
loope
subb
mov
xor
out
cld
adc
out
out
jne
dec
jbe
or
ret
aaa
in
mov
ficompl
push
test
aad
mov
pop
inc
adc
mov
cwtl
jg
arpl
inc
mov
dec
outsb
mov
stc
loop
sbb
push
jl
clc
scas
aaa
stos
jnp
sbb
mov
and
stc
int3
xor
ret
popa
mov
sti
xchg
frstor
fdivrs
test
lcall
pushl
cli
or
pop
outsb
aad
pushf
fsubrl
mov
sub
gs
pop
sbb
dec
lret
push
dec
inc
xchg
xchg
push
test
lods
ljmp
jnp
push
or
mov
push
push
stos
mov
ret
and
jns
jns
fbstp
or
out
add
jg
pusha
add
cmpsb
ret
push
push
sub
mov
sub
rcll
jnp
dec
pop
xor
fucomi
clc
push
sbb
pop
sti
mov
jno
jecxz
push
pop
insl
mov
push
lret
aad
xorb
test
cmp
or
dec
sub
popf
xor
cmp
jl
test
mov
fsts
add
mov
incb
or
inc
dec
cltd
out
fisubs
jno
jecxz
sbb
out
push
push
adc
sub
adc
sbb
fndisi(8087
orb
cmc
cmc
dec
push
xor
int
ret
cld
xchg
movsb
iret
mov
movsl
lcall
sbb
mov
jne
sbbl
push
loopne
divl
es
jmp
push
aas
xchg
data16
mov
jl
jo
fs
pop
test
mov
fwait
sub
lock
in
in
mov
nop
cmpsb
or
xchg
inc
dec
cmp
nop
fcomps
or
sbb
dec
sbb
jns
sbb
mov
inc
cmp
imul
sub
add
adc
or
clc
inc
xchg
xor
enter
xor
imul
fs
or
xchg
andl
imul
mov
sub
out
and
fldenv
or
xchg
in
fdivs
push
xor
dec
sti
and
jmp
outsb
mov
out
ret
pop
sub
jle
add
sbb
ret
inc
add
pop
iret
shlb
cwtl
xor
and
pop
shll
cmp
mov
pop
rorl
mov
push
movsb
in
sbb
sub
cmc
mov
mov
out
out
shlb
rclb
mov
xchg
neg
aam
out
inc
pusha
or
pop
in
push
mov
jno
out
sarb
add
mov
hlt
pop
push
repz
add
jl
movsb
loopne
sub
xchg
jle
sbb
add
es
sub
loope
repnz
test
cwtl
test
cmpsb
and
inc
arpl
negb
les
fcompl
stc
dec
mov
leave
in
pop
xlat
cli
int
aam
jo
cmp
pop
xchg
in
xchg
rclb
mov
xorl
shll
mov
lret
inc
add
dec
mov
test
fs
pusha
neg
fcom
push
pop
es
xorb
dec
loopne
mov
fldl
mov
mov
insl
mov
and
repz
ljmp
into
aaa
sbb
pop
leave
sbb
xchg
inc
mov
lods
stc
mov
je
pusha
and
insl
mov
sub
ss
inc
lahf
rcrb
mov
out
test
sub
movsb
jp
fdivrl
adc
lea
add
stos
icebp
lahf
sbb
mov
fs
jle
cld
inc
mov
mov
mov
cmp
lahf
mov
incl
popa
mov
sbb
arpl
rcr
outsb
cmpsb
mov
cmp
and
in
and
cmpsl
xchg
mov
in
mov
xor
adc
and
jmp
arpl
adc
push
sbb
movsl
divl
mov
fidivrl
xor
les
imul
addr16
or
or
imul
dec
jo
aam
jg
push
clc
pop
xchg
push
pop
addr16
sbb
sbb
push
xor
pop
addr16
jno
mov
add
pop
sbb
fdivs
xchg
pop
cmp
nop
fwait
adc
dec
test
mov
push
ret
arpl
scas
pop
pop
sti
test
jg
outsl
loop
sti
mov
je
mov
inc
or
into
popa
popa
fwait
xchg
xor
nop
loopne
test
push
pop
xor
xchg
inc
in
lock
popa
jp
inc
aaa
xor
popf
repnz
push
mov
push
xor
fcoms
cmc
pop
mov
pusha
dec
mov
cmpsl
push
add
jmp
adc
stos
mov
xlat
sub
mov
push
pop
cmpsb
sti
sub
aas
xchg
lock
sub
push
das
addr16
mov
into
cmp
push
or
mov
jl
sbbl
ljmp
stc
cmp
inc
mov
or
mov
repz
cwtl
cli
movsl
dec
push
loop
jnp
es
or
mov
cld
pop
pop
adc
in
cmovs
lock
lods
mov
xor
jo
ss
xchg
push
pop
xchg
out
push
icebp
mov
pop
fadds
xchg
inc
mov
std
ficompl
pop
ret
dec
les
mov
sti
ror
das
add
das
imul
push
ja
adc
lods
adc
mov
cmp
push
mov
lahf
addr16
dec
ljmp
mov
sbb
mov
ss
mov
sub
ja
ror
dec
cmpsl
push
adc
inc
jb
mov
popf
outsb
repz
aam
lods
lods
imul
lods
ror
mov
mov
jno
pop
shlb
push
mov
sbb
add
add
mov
adc
fsubp
and
clc
call
fsubrl
das
mov
pop
cmp
mov
mov
lods
mov
in
lret
xor
mov
add
icebp
inc
and
insb
mov
enter
mov
in
test
mov
nop
mov
fwait
mov
clc
add
fs
fstps
repz
fxch
xlat
pushf
jp
dec
aad
dec
aas
cmp
sub
addr16
loope
ds
cmp
iret
push
int
push
inc
dec
push
roll
adc
cltd
push
adc
jp
int
push
xchg
std
xchg
mov
mov
mulb
sub
fisttpll
aam
or
shll
and
mov
cmp
cld
inc
rcrb
push
mov
js
add
stos
stos
or
lock
sub
pop
and
stc
mov
lret
nop
lahf
cmp
test
mov
jns
inc
iret
shrb
pop
aad
shll
xor
je
mov
sub
xchg
mov
ds
jge
mov
add
or
test
dec
mov
pop
xchg
rcrb
ret
push
fucomp
push
and
das
das
pop
xchg
pop
dec
xchg
out
insb
add
cmp
mov
inc
or
cmc
sti
push
enter
sbb
lret
es
aam
mov
fidivrs
ret
and
mov
ss
and
sub
xor
push
pop
call
scas
out
dec
outsl
inc
roll
ret
sub
jb
subb
hlt
mov
sahf
out
mov
push
sbb
bound
xor
dec
sbb
loopne
insb
jbe
sub
mov
rorl
and
pusha
scas
and
stos
inc
mov
mov
push
push
dec
shl
movsb
cmpsl
mov
inc
sbb
inc
pop
sbb
js
not
xchg
and
repz
cmp
mov
divb
inc
adcb
push
roll
mov
pop
stc
mov
cmc
lods
in
xor
lea
hlt
enter
pop
cmp
or
sar
mov
es
jno
add
inc
loop
in
xchg
lcall
inc
lods
rcrl
or
ror
lret
inc
inc
sub
cmpsb
aas
mov
sbb
sub
mov
leave
iret
push
dec
ret
movsl
rorb
pop
je
or
outsb
decb
pop
in
pop
mov
jo
push
aad
mov
ss
adc
mov
mov
pop
cmp
xchg
repnz
in
sbb
mov
pop
sub
test
mov
out
adc
add
push
and
and
cmp
xchg
xchg
cmpsb
dec
jbe
dec
lret
xchg
out
xlat
lods
or
mov
mov
outsb
jnp
cmpsl
nop
mov
or
xor
xorb
pop
sarl
xlat
sbb
lock
icebp
jecxz
loop
out
sub
mov
fwait
gs
cmp
fmull
lods
fs
xchg
and
outsb
repz
call
shl
xchg
sti
jmp
stos
iret
ljmp
jb
add
jb
push
and
out
mov
mov
mov
push
dec
mov
mov
mov
loope
loope
pushl
pop
jae
aaa
xchg
movsl
cmp
in
push
mov
sub
out
adcb
or
clc
lret
icebp
sbb
call
mov
into
in
into
lret
xchg
mov
and
je
mov
jle
push
cmpsb
jbe
rorb
sbb
mov
in
shrl
push
fadd
cmc
fidivrl
adc
fwait
push
mov
dec
roll
jl
cmpsl
fdivs
jl
movsb
sub
cli
inc
or
fadd
cmp
cld
xchg
iret
imulb
cmpsl
iret
ja
mov
inc
cwtl
push
pop
push
mov
sahf
bound
or
cmp
add
loopne
mov
in
cmp
lods
jnp
xor
sbb
outsl
jle
mov
xchg
in
push
aam
addb
jnp
mov
out
pop
push
mov
xor
int
aas
xchg
inc
push
push
push
sbb
imul
mov
xchg
aam
lcall
loope
add
inc
jae
fistps
push
mov
or
scas
add
mov
in
jae
xchg
sahf
call
sub
repnz
and
xchg
push
mov
xorb
sub
shrl
inc
call
bound
arpl
scas
xchg
enter
adc
pop
mov
repz
and
or
add
mov
lods
std
in
sbb
fimull
aas
sbb
or
sub
imul
dec
aas
leave
sbb
xor
pavgb
mov
adc
lret
cs
jbe
push
fxch
shll
add
mov
sub
aas
or
into
jmp
pop
rolb
stos
xor
sub
jl
and
add
or
and
sub
cmpsb
pop
data16
jl
jno
aad
std
or
mov
adc
cli
cmp
andb
push
and
ds
jecxz
dec
int
or
adc
add
lock
jo
pop
loop
pop
aas
cmpsb
lea
insb
fucomip
imul
mov
ror
push
inc
jmp
dec
fiadds
fdivrs
repnz
call
scas
imul
inc
jecxz
cmpsb
mov
push
mov
xchg
xchg
ja
negl
pop
push
cmp
mov
sbb
push
sub
cwtl
ret
dec
sub
dec
cmpsl
cmpsb
adc
clc
mov
mov
fsub
xor
push
cmpl
mov
mov
jae
je
js
setg
ret
mov
pop
adc
xor
push
xor
push
repz
cmpsl
push
fiadds
jbe
outsb
setge
xor
ret
test
das
dec
rcll
insl
or
ss
cltd
and
push
sub
in
repz
and
sub
mov
or
stc
addl
mov
inc
inc
jnp
roll
popf
ja
bound
and
push
int
movl
add
dec
ljmp
sub
movb
insb
imul
mov
nop
jp
xchg
or
mov
dec
in
enter
jle
enter
add
xor
sahf
insb
gs
int3
shrl
or
push
repz
xor
sbb
movsb
pop
mov
gs
add
cmc
insb
sahf
xor
stos
xlat
rorl
call
popf
test
je
sub
mov
xchg
imul
bound
mov
fisttps
cmp
pop
out
push
arpl
cld
shl
in
scas
xchg
pop
jb
push
push
dec
repz
jo
scas
aam
ret
jno
inc
out
cmc
icebp
dec
call
sub
ret
pop
xor
xor
arpl
lcall
sbb
mov
out
scas
dec
popa
aam
cmp
lahf
add
int
jp
xchg
jmp
xor
repnz
and
jns
pop
repnz
movsb
test
imulb
cmp
xchg
lcall
lret
scas
pop
pop
ret
mov
adc
lret
cmp
imul
push
adc
pop
addb
jns
stos
int
dec
popf
mov
scas
mov
paddb
mov
cmp
mov
xchg
xchg
jnp
into
test
aas
test
fcompl
mov
pop
dec
jns
and
imul
aas
cld
int
or
mov
or
pop
xchg
pusha
sbb
out
cmp
pop
popa
xchg
mov
add
mov
mov
enter
pop
jae
or
hlt
inc
adc
rorl
ret
shll
mov
std
cmp
xchg
dec
pop
loopnew
mov
xor
pop
push
clc
scas
cmpsb
inc
pop
ret
clc
in
stos
std
and
js
pop
js
ljmp
sub
insb
subb
sbb
inc
push
dec
enter
add
dec
pusha
or
or
jbe
movsl
jge
add
test
and
ss
outsl
adc
pop
sbb
shll
push
push
xor
imul
push
sub
mov
test
leave
ror
mov
push
in
outsl
lcall
lcall
or
sbb
add
push
mov
push
ljmp
or
mov
pop
mov
inc
adc
lock
dec
aas
sbb
cwtl
stos
lret
jb
cs
push
cmp
jae
aad
pop
pop
pop
and
adcb
stc
outsl
add
mov
fidivs
sbb
jnp
insl
mov
ljmp
jno
xchg
in
repnz
inc
js
adc
add
mov
cmp
cmpsb
xchg
call
jge
icebp
pop
loopne
in
pop
je
outsl
jae
mov
mov
rcrl
push
shrl
js
pop
out
cmpsl
push
cld
fsub
pop
fs
imul
inc
fwait
jbe
jle
sbb
clc
push
test
adc
dec
cmpsl
inc
sarl
imul
add
jecxz
mov
push
ret
scas
dec
inc
insb
js
lds
loope
jne
adc
test
push
mov
push
adc
std
call
or
inc
fs
pop
shll
test
mov
cwtl
movsl
repnz
and
jns
adc
movsl
mov
pusha
lock
lcall
test
sbb
jmp
loope
inc
out
adc
aad
rol
imul
jnp
push
or
out
push
jmp
shlb
pop
or
notl
je
int
aaa
jge
pop
test
shll
cmp
loop
push
aas
imul
mov
inc
and
pop
or
jo
push
cmp
pop
lret
push
pushf
call
inc
ljmp
sub
jmp
mov
addr16
dec
inc
mov
repz
pop
sub
xchg
sub
adc
jecxz
fdivrs
inc
je
outsl
nop
xlat
dec
call
and
iret
and
stc
mov
es
aam
aaa
cmp
or
loopne
add
int
das
rcll
cs
leave
das
in
mov
jmp
or
repnz
and
iret
xchg
and
mov
jae
xor
imul
mov
rol
lods
mov
xchg
imull
push
dec
adc
lret
mov
mov
btc
idivb
loope
add
movsl
vmovaps
and
das
fstps
jg
lahf
int3
scas
nop
mov
aaa
inc
repz
and
les
dec
popf
inc
jb
fimuls
subl
mov
ljmp
push
cmp
or
inc
stc
std
cs
mov
xchg
xchg
mov
mov
mov
std
push
dec
rcll
push
sbb
test
decl
pop
and
dec
lret
mov
fcomps
mov
and
push
vpmacsww
pop
fistps
jae
sti
sahf
and
outsl
jle
lods
test
lret
loope
xchg
mov
das
or
dec
outsb
cld
test
adc
lret
inc
fstp
pop
adc
mov
pop
popa
push
in
ss
neg
cmp
mov
addb
pop
testl
shlb
mov
nop
int3
out
pop
popf
xor
lea
in
lods
js
or
cli
and
xorb
andl
or
pop
cmpsl
cmp
dec
jge
pushf
sti
es
arpl
stos
rorl
mov
std
addr16
jnp
push
dec
sahf
mov
fnstcw
divb
mov
jge
fsubrl
cld
cmpsl
daa
xchg
or
and
push
ret
in
clc
pop
fldl
subb
mov
movsb
cmp
jno
in
dec
and
add
push
repnz
imulb
dec
dec
andl
into
mov
mov
out
cmp
sbb
pop
arpl
mov
sbb
push
fbstp
mov
sub
cmp
insl
faddl
fimull
ss
cld
into
xor
pop
notb
push
fnstenv
mov
sub
data16
push
adc
repz
clc
arpl
mov
or
adc
or
jnp
and
sbb
cwtl
arpl
adcl
movsb
fdivrs
lret
into
or
or
inc
dec
cmp
inc
das
dec
push
push
sbb
call
pop
cld
ds
sub
dec
fcoms
fimull
lahf
xchg
pop
push
cmp
and
adc
push
pop
adc
jge
fisubs
or
sub
pop
bound
xchg
shl
popf
jae
in
call
out
inc
cmpsb
nop
xchg
les
mull
push
mov
movsl
jecxz
fwait
or
xor
lea
mov
cmp
lds
scas
arpl
lret
in
add
pushf
outsl
gs
mov
addb
xor
jns
sub
test
test
subb
add
lock
sub
pusha
pop
je
xor
cmp
sub
lahf
dec
or
in
dec
leave
push
xchg
or
pop
jp
out
fsubr
lret
jae
loop
push
scas
popf
out
shll
jno
dec
scas
imul
xor
add
and
popf
add
inc
pop
pushf
or
push
mov
inc
sahf
das
xchg
or
loope
push
pop
in
sbb
enter
mov
jl
cld
xchg
out
push
xchg
orb
cmc
outsb
stc
jecxz
aam
or
dec
scas
test
cmpsl
push
lahf
sbb
inc
lret
jb
cmpsl
sbb
xchg
cmpsl
out
adc
icebp
inc
pop
scas
xchg
icebp
fidivl
iret
mov
cmpsl
inc
or
push
repz
rcl
repnz
js
je
in
pusha
ret
mov
inc
xlat
xchg
jno
and
jg
inc
inc
inc
xchg
pop
mov
not
adc
push
xor
sbb
mov
mov
xor
test
sub
and
std
pop
pop
adc
pop
jnp
fiaddl
mov
xchg
sub
ss
aad
ret
fidivl
mov
jb,pt
or
mov
xchg
addr16
adc
sub
dec
jae
das
xchg
les
mov
cmp
jns
repnz
xor
and
push
push
test
mov
mov
add
adc
inc
pop
add
sbb
iret
cmpsb
xor
test
lock
imul
mov
push
cmpsb
dec
cli
js
fldt
das
clc
in
dec
fadds
loope
jp
xchg
popf
jg
xchg
hlt
repnz
std
popf
fsubr
adc
popf
movsl
ret
mov
push
dec
cmpsl
sub
jo
test
jecxz
roll
out
pop
mov
add
inc
cmpb
xchg
int
push
ljmp
jge
in
daa
cmp
and
inc
pop
sbb
fistl
sahf
mov
mov
mov
mov
bound
xchg
dec
aam
add
push
cli
in
sbb
aaa
int
stc
mov
inc
stos
sbb
jmp
sbb
or
insb
mov
pushf
dec
push
sbb
test
repz
pop
push
mov
pop
movsl
jnp
mov
mov
mov
mov
in
or
cmp
loopne
inc
xchg
add
mov
ror
xor
and
adc
inc
fcomps
ss
push
lds
mov
push
or
popa
fldcw
mov
data16
pop
push
pop
mov
cmp
mov
jg
loop
nop
add
rclb
jno
mov
add
jmp
inc
les
ss
xor
lock
push
push
xchg
scas
insl
ds
and
arpl
data16
pusha
loopne
jecxz
in
lods
sbb
pop
andl
inc
mov
xchg
mov
mov
clc
dec
les
inc
adc
clc
and
push
push
fistps
sub
daa
jle
das
scas
cld
inc
lods
loop
mov
adc
push
daa
xchg
cmp
sbb
sbb
or
jecxz
mov
dec
cltd
push
or
and
inc
les
jmp
stos
dec
jg
pop
inc
cmpb
mov
xchg
jno
dec
cmp
out
shrl
xchg
ficomps
sbb
pusha
pop
sahf
test
jmp
and
mov
add
cmpsb
stos
mov
into
lcall
pop
xchg
inc
mov
in
pop
pop
xchg
jns
cmp
xchg
jns
sahf
mov
enter
cmc
jp
sahf
jge
test
mov
add
cmp
xchg
fimull
xchg
outsb
rcrl
push
and
sbb
arpl
fisubs
insl
cs
std
xchg
xchg
mov
lds
ja
xchg
mov
xchg
push
loopne
pop
or
iret
mov
gs
decb
nop
push
xchg
mov
jnp
or
mov
cmp
dec
pusha
push
scas
arpl
aas
ja
push
add
icebp
push
loop
jae
imul
push
cmp
imul
int3
adc
xor
and
lods
call
out
sbb
xor
add
push
ljmp
insb
out
mov
mov
dec
sti
in
push
mov
lods
aam
test
jno
in
loop
jg
aas
cmp
and
sub
out
ficompl
push
cmpsl
fld
fiaddl
call
add
or
sub
scas
inc
xor
mov
xchg
daa
xchg
mov
cmc
xchg
mov
pop
fs
out
sub
xchg
out
jo
movsb
xor
into
adc
sbb
jns
inc
mov
data16
and
sti
ljmp
and
xchg
in
shll
adc
hlt
xlat
sub
dec
inc
jge
cmp
push
xchg
addr16
cmp
shll
inc
xor
nop
cmp
xchg
adc
mov
mov
in
mov
jne
adc
adc
stos
dec
cmp
cmp
loopne
xor
mov
xlat
popa
and
dec
testb
ss
pop
je
inc
test
or
rcr
adc
sub
adc
cwtl
and
and
jo
push
xchg
push
xorb
dec
jecxz
not
or
jo
les
jg
ljmp
scas
cmp
jmp
sub
mov
iret
or
les
lcall
xchg
inc
aas
cmp
mov
mov
pop
int3
jmp
jmp
repz
jae
xchg
cld
add
es
pop
xchg
adc
add
and
shl
loopne
mov
fildll
popa
add
or
aaa
icebp
sbb
insl
repz
pop
xchg
in
inc
pop
pushf
out
std
inc
iret
arpl
fs
repz
rclb
xor
pop
lret
xchg
jecxz
pop
gs
jle
push
add
mov
pop
clc
hlt
push
ss
sub
ljmp
jo
jno
sub
mov
inc
aam
lods
inc
stos
sub
adc
push
jnp
data16
mov
jge
dec
lahf
adc
call
notb
pushf
inc
pop
scas
test
insb
jmp
pop
sub
jmp
bnd
mov
sbb
int3
jl
mov
mov
movsb
fisubrl
lods
xchg
pop
xchg
mov
test
es
sbb
add
lods
lea
leave
hlt
jae
dec
adc
int3
adc
subb
pushl
push
mov
xchg
add
daa
push
pop
fiadds
fwait
sbb
add
insb
mov
adc
call
subb
xchg
push
ret
dec
jl
lcall
xor
xchg
push
add
cmp
push
in
mov
adc
addb
cmp
xor
xchg
daa
stos
shl
sti
jns
jmp
sub
movsl
popf
jle
add
out
push
sbb
orb
mov
adc
pop
fwait
push
pop
rcrb
xchg
into
or
sbb
mov
stos
push
bound
rcll
lea
xor
adc
nop
addr16
repnz
cmp
lret
xchg
xor
cltd
repnz
mov
mov
mov
add
cltd
leave
and
lahf
mov
mov
mov
clc
mov
ficoml
ror
dec
jae
adc
push
mov
inc
sbb
pop
fldt
push
adc
mov
pop
and
inc
into
lahf
mov
lcall
xor
lahf
aam
int3
xor
xchg
dec
pop
data16
mov
nop
loope
bound
and
mov
scas
jmp
push
jmp
push
clc
xor
or
mov
xor
or
inc
xchg
jecxz
push
out
stos
xor
stos
out
cld
pop
sahf
inc
and
inc
hlt
or
or
aaa
movsl
xor
imul
rcr
dec
push
lcall
cmpsl
test
fcoml
mov
aaa
add
sbb
mov
inc
lds
fwait
popa
les
mov
rolb
or
out
lods
jp
mov
jle
xor
dec
mov
lahf
cmpsl
nop
cs
in
sub
aam
fnstenv
bound
mov
mov
stc
leave
cmp
mov
jmp
scas
jae
out
and
subb
decb
jmp
negl
push
dec
fwait
mov
int3
nop
xchg
insb
mov
cmc
subl
jb
lds
arpl
or
mov
push
jbe
es
dec
jno
std
mov
jnp
rcrl
sub
repnz
and
arpl
or
js
out
xchg
dec
pop
imul
cltd
insb
xor
stos
or
add
clc
mov
leave
bound
dec
mov
dec
jo
dec
leave
and
testb
jno
mov
jnp
xchg
inc
rolb
lcall
scas
loopne
jae
sub
pop
pop
add
inc
jne
adc
pop
adc
adc
or
aad
pop
leave
std
hlt
mov
pop
test
or
out
cmp
stos
jmp
test
sbb
jle
shrb
mov
pop
inc
mov
aad
int
inc
adc
sub
imul
push
push
mov
mov
frstor
testb
sbb
dec
aad
bound
add
adc
addr16
movsl
xchg
imul
jb
inc
popa
cs
sub
adc
stc
daa
sbb
mov
sar
jns
adc
push
gs
mov
xor
adc
jno
loop
and
xor
or
test
and
es
inc
stos
sub
sub
out
enter
stc
jg
scas
xor
sbb
add
fbld
fs
mov
push
stc
movhps
sub
xchg
dec
fnstenv
xor
popf
and
imul
xchg
les
mov
and
mov
aas
add
test
clc
adc
xchg
hlt
adc
shll
int
xchg
lret
xchg
sarl
lods
inc
dec
pop
and
aas
les
mov
and
mov
or
mov
pop
xlat
stc
scas
in
cmc
rclb
test
sahf
jmp
adc
jne
bound
mov
mov
adc
mov
mov
mov
lcall
mov
out
ja
pop
xor
adc
sbb
data16
jnp
xlat
jecxz
shlb
rolb
add
lcall
adc
xchg
xor
loopne
add
pusha
add
mov
and
aaa
inc
loop
int3
push
lret
sbb
fidivl
lcall
mov
into
mov
leave
jmp
loop
add
imul
mov
addr16
pop
push
inc
iret
repz
movsb
scas
xlat
cwtl
gs
mov
fcmovnb
out
mov
out
inc
ret
mov
les
inc
pop
inc
cmp
jmp
ret
inc
incl
outsb
ffreep
mov
clc
and
cmp
sub
lock
mov
cmc
cwtl
jg
in
popa
pop
xchg
push
jg
or
dec
pop
and
outsl
push
cmp
cld
sbb
cmp
sbb
cld
insb
mov
add
or
ret
xchg
add
popf
cmpsl
lahf
insb
fisttps
push
jmp
pop
cmp
jo
mov
imul
adc
inc
mov
sub
jg
cmp
bnd
outsl
pop
and
fstpl
cltd
jns
fs
mov
pushf
dec
dec
mov
and
and
shrb
push
lret
sub
jbe
xor
xor
repnz
mov
gs
pop
popl
mov
push
mov
sbb
dec
subl
adc
mov
pop
out
je
jmp
ds
and
outsl
jl
adc
clc
cmp
add
les
incb
incb
out
cmp
mov
in
adc
shrl
dec
xchg
test
mov
pop
add
std
push
sub
sbb
into
repnz
pop
pop
sbbb
adc
in
sub
sub
popa
pop
mov
aam
and
lret
sbb
cmp
xor
or
add
pop
insb
xchg
xor
pop
add
inc
jge
mov
inc
xchg
out
jmp
adc
mov
cmp
popa
aam
js
or
cmp
mov
sbb
bt
adc
push
adc
mov
cmc
shlb
test
mov
pop
mov
sbb
in
pop
pop
xchg
jl
inc
out
and
fadds
lret
mov
mov
jno
sbb
enter
test
inc
loopne
sahf
mov
pop
rorl
jns
sti
es
insb
fs
sub
popf
push
in
sub
and
push
idiv
scas
jb
frstor
xchg
and
in
ficoml
int3
inc
fists
lock
fwait
cmp
icebp
mov
stos
push
dec
xor
jnp
cmp
cmp
mov
enter
loopne
mov
in
clc
sbb
and
xor
xchg
add
mov
add
mov
jnp
jmp
decl
jne
test
add
lea
fidivl
ss
mov
cltd
sbb
xchg
test
push
cld
loope
std
mov
xchg
jecxz
cwtl
sarb
out
and
adc
sub
inc
cli
dec
sub
cmp
xchg
nop
or
cwtl
mov
or
xchg
stos
push
aad
dec
pop
rorb
cmp
sar
lcall
rcrb
fimull
dec
adc
or
dec
pop
in
lock
divb
mov
cs
mov
fbstp
stc
and
lahf
mov
pop
aam
jo
fsubs
xchg
pop
lret
inc
loope
add
in
cwtl
fst
daa
mov
stc
xchg
push
jae
aas
stc
std
xor
or
jae
sbb
std
out
push
inc
fucomp
outsb
xchg
in
adc
push
mov
fnstcw
out
cltd
mov
adc
pop
das
sti
or
leave
call
push
sub
fcoml
addr16
pop
push
inc
jns
movsl
aam
decl
data16
insl
mov
stos
jbe
adc
int
aam
xor
cvtps2pi
or
loop
ficomps
cmp
cmpsb
mov
or
aad
xchg
rorl
adc
xor
or
into
mov
pop
jno
pop
shll
push
cmpsb
mov
xchg
push
mov
stos
or
ret
xchg
pop
out
mov
es
push
cmp
cmp
xor
pushf
lret
pop
int3
jl
adc
aam
push
orb
jno
jnp
aas
xchg
enter
repnz
aas
scas
stc
aas
lcall
mov
sub
call
xor
in
lret
mov
and
ficompl
xor
sti
jo
pop
or
mov
mov
stos
dec
sbb
fsqrt
push
rcrb
addr16
sbb
push
std
sbb
outsl
add
pop
inc
mov
test
sub
mov
inc
mov
arpl
jo
popa
xchg
loopne
clc
fwait
sub
pop
mov
shll
decl
loope
add
adc
loope
dec
int
pop
aad
cmp
cwtl
dec
icebp
fisubs
add
pop
addr16
out
and
mov
fildl
pop
stos
enter
sub
stos
lds
pxor
jg
ja
sub
sbb
jns
jns
push
jge
add
icebp
dec
inc
xchg
movsl
out
test
in
mov
push
xor
adc
push
pop
scas
mov
out
mov
mov
in
sbb
pop
cmc
mov
imul
insb
les
mov
shlb
inc
in
add
lcall
mov
ret
in
and
jmp
inc
jno
movsb
push
imul
ljmp
add
dec
inc
pop
or
jnp
push
cwtl
movsl
push
dec
test
mov
outsl
dec
mov
xchg
hlt
xchg
arpl
popa
fs
repz
dec
sub
outsl
stos
jae
test
inc
dec
push
aas
inc
jo
sub
aas
dec
dec
or
adc
rorb
pop
push
jb
inc
xchg
xchg
lds
pop
fucomp
pop
pusha
push
ja
flds
daa
jp
and
xlat
jo
mov
js
mov
lock
and
in
add
fimuls
adc
sbb
enter
pop
ficompl
shlb
adc
push
test
shlb
repnz
ss
movsb
jnp
out
sub
jae
mov
pop
addr16
outsl
addr16
and
sahf
push
clc
fiadds
push
aaa
mov
ret
ds
nop
cmp
sbb
xchg
addr16
outsl
jns
push
xor
mov
cmpsl
push
xchg
push
pusha
loope
aad
bswap
jmp
jnp
push
or
sbb
repnz
inc
mov
jb
jmp
inc
lret
jb
pop
push
hlt
cmp
imul
cmpsl
rolb
ds
sahf
fisttps
es
xlat
or
dec
movsl
xor
hlt
cmpsb
mov
pop
icebp
xchg
mov
dec
xchg
mov
mull
arpl
sub
jp
mov
adc
or
divb
xor
call
add
mov
cmp
icebp
jp
idivl
inc
sti
mov
xchg
in
out
xor
xchg
adc
data16
adc
orl
jno
xor
sub
daa
repnz
adc
lret
add
sub
leave
mov
add
pop
xchg
push
add
push
xchg
adc
mov
add
ret
lahf
xchg
sar
cmp
push
flds
xor
notl
mov
inc
out
fsubs
xchg
fsubs
and
popa
jl
ret
sub
stos
sbb
and
arpl
fs
lods
mov
fwait
sub
mov
daa
scas
fmul
into
pop
push
dec
cmp
sahf
jns
push
sbb
xchg
sub
push
out
mov
mov
inc
pop
fiadds
sub
sub
jae
movsb
and
arpl
sarb
je
enter
cld
pop
imul
in
dec
lock
xor
out
mov
arpl
in
repz
icebp
mov
fstpt
mov
mov
xorb
lcall
sub
test
mov
imul
in
push
ret
pop
add
xchg
jns
and
mov
ret
xchg
xchg
mov
mov
sub
dec
cmp
jb
and
xchg
mov
and
sbb
xchg
stc
xchg
dec
ja
mov
stc
or
mov
sbb
push
cmpsl
testb
ficomps
ljmp
push
lea
enter
dec
sbbb
pop
js
cmpsl
mov
mov
clc
or
aam
xchg
cwtl
sbb
lret
sbb
je
lahf
cmp
cld
sbb
and
adc
mov
loopne
jno
xor
cltd
shll
and
testl
or
cld
add
daa
loopne
in
daa
fimull
jo
xor
pop
jecxz
andb
cltd
xorb
sub
clc
inc
mov
push
jle
mov
mov
adc
aam
in
mov
push
js
popf
pop
jmp
mov
xchg
sahf
aas
push
fucom
in
idiv
dec
mov
mov
cli
mov
shll
loope
pop
test
add
rolb
mov
pushl
mov
aas
ret
pusha
in
pop
xor
xchg
adc
mov
std
movsl
into
daa
movsb
cmc
outsb
out
shrl
sbb
rcrl
xor
scas
jge
in
out
mov
pop
out
ja
lcall
add
rorl
adc
or
ja
insb
cmpsb
test
xor
mov
inc
push
push
pop
das
push
je
mov
push
fldcw
js
cmp
dec
outsb
or
mov
push
outsl
bound
call
push
inc
shll
scas
xchg
mov
sub
test
inc
lods
cs
aam
aaa
add
cmp
jo
pop
dec
push
xor
push
gs
jb
add
dec
shlb
sarl
popf
xchg
jmp
mov
cmpsb
and
ret
in
inc
jle
and
fnstsw
insl
hlt
pop
iret
dec
inc
insl
adc
add
mov
int3
jnp
sbb
out
sub
pop
lahf
test
inc
adc
push
outsl
and
lods
outsl
lcall
inc
into
aam
sub
xorl
ljmp
or
mov
lahf
in
fsub
mov
pop
ljmp
out
xchg
sbb
scas
fidivl
aad
sbb
imull
decb
pop
inc
mov
pop
in
sbb
push
iret
and
mov
adc
ja
mov
and
dec
or
je
push
pop
jge
into
dec
fldcw
leave
push
mov
sub
or
or
or
mov
xor
aaa
mov
cmp
or
sbb
nop
cld
add
mov
xlat
fbstp
inc
imul
outsl
dec
aaa
inc
scas
add
inc
ds
sub
call
sbb
jg
pop
sub
xor
inc
sub
cmp
nop
dec
or
pop
adc
mov
push
inc
popf
cmc
push
inc
imulb
call
daa
push
mov
pop
xor
or
test
sbb
sub
xchg
pop
and
add
lret
add
add
daa
faddl
xchg
jne
sbb
rclb
jge
ljmp
push
insl
xor
or
mov
lds
mov
stc
mov
xor
stos
jge
sbb
mov
adc
shlb
mov
insl
add
and
addl
pop
popa
jmp
jnp
add
imul
mov
and
es
mov
jle
lret
std
gs
out
push
sub
cmp
in
add
jae
pop
pop
mov
scas
cmpl
hlt
jnp
cmp
adc
loopne
movsl
divl
xor
testl
sbb
add
jo
push
push
rorb
adc
push
in
out
in
aad
idivb
sub
push
jo
push
das
gs
mov
int
or
push
xchg
cld
push
inc
test
movsb
sahf
iret
mov
xchg
std
inc
mov
mov
les
das
jl
mov
or
push
movsb
shll
jbe
xchg
mov
cmp
mov
push
in
cld
xor
pop
lcall
adcl
push
fidivrs
sub
inc
inc
jbe
inc
mov
mov
pushf
push
cmpb
lcall
push
cld
or
in
adc
xchg
xor
jo
popa
or
xchg
mov
pop
dec
cmp
fwait
notb
insb
cmc
in
jmp
mov
mov
adcb
push
mov
test
dec
std
imul
lret
jno
roll
jns
add
inc
jg
adc
filds
loope
xor
pop
test
push
int3
mov
push
repnz
fsubr
aam
shll
movsl
cld
or
mov
jp
sub
sarb
xchg
sbb
aas
add
xchg
sti
dec
dec
fwait
arpl
mov
test
clc
add
push
push
mov
pop
xor
lea
cmp
push
mov
in
inc
push
ret
pop
mov
sbb
mov
dec
fldl
js
push
inc
fdivrp
aad
rol
rolb
in
cmp
gs
dec
mov
in
sub
xchg
fs
lds
sub
dec
dec
ds
arpl
in
test
das
mov
inc
xor
out
in
pop
inc
data16
sub
adc
rcr
std
lret
repz
mov
fldt
adc
sub
pop
xchg
jmp
je
mov
cmp
push
cld
jge
mov
adc
push
push
int3
push
jl
inc
cmp
cmp
jp
sbb
pushf
lods
into
mov
das
adc
cmp
cltd
aaa
loopne
mov
insb
sarl
cwtl
loope
ds
push
push
push
and
frstor
movsl
mov
pop
mov
nop
jne
shrl
cmp
dec
add
inc
movsb
dec
mov
imul
dec
pusha
fstl
and
mov
dec
mov
xor
mov
jl
cmpsl
imul
mov
jbe
push
test
fists
mov
ja
add
cmp
sbb
outsl
jno
xchg
enter
call
in
xchg
jb
lcall
mov
add
push
jns
lods
arpl
out
mov
jmp
psrld
js
movl
scas
dec
fs
mov
imul
nop
jne
scas
dec
add
mov
andb
sarb
imul
dec
mov
icebp
xchg
lea
jle
mov
loopne
inc
popa
inc
das
dec
sbb
inc
mov
and
mov
mov
mov
shlb
mov
mov
dec
test
cmp
sti
jne
xchg
sbb
xlat
cltd
pop
or
push
fucomi
jmp
mov
pop
pop
xor
out
push
push
sbb
ja
xchg
adc
bound
push
lods
jae
xor
xchg
mov
sbb
xchg
enter
mov
mov
mov
cmp
shl
cmp
and
sbb
cmp
adc
out
xchg
lods
mov
sarb
xchg
sub
fists
mov
icebp
jge
loop
call
movsl
add
mov
mov
bound
pop
adc
sub
insl
fistpl
sub
cwtl
push
mov
cltd
call
sub
mov
or
test
dec
addr16
fucomp
cltd
mov
inc
sbb
je
les
ds
bound
lahf
cmpsb
jecxz
push
cmpsl
push
cwtl
jns
cmpsb
mov
mov
cwtl
cmp
jno
push
popa
dec
ds
xlat
pop
movsb
sub
mov
out
lea
in
or
pusha
sbb
movsl
adcb
push
call
jnp
and
jecxz
lret
mov
lea
jp
jae
xchg
loopne
xor
add
lds
fcoml
ret
lcall
jmp
cmp
add
ret
dec
addb
and
cltd
mov
pop
int
dec
dec
mov
dec
lcall
mov
jnp
xchg
adc
bound
iret
fldenv
mov
jmp
lret
outsb
lret
inc
fs
ret
sbb
add
and
xor
aam
movsl
mov
pop
jg
scas
add
push
rcrb
lods
xor
push
addr16
cmpb
push
jns
fucomi
or
das
out
repz
jl
cmpsl
movsb
mov
jl
dec
jle
dec
dec
sbbl
pusha
xchg
int3
jo
cmc
mov
cli
rcrl
sub
add
adc
xchg
cld
stos
stc
adc
fs
xchg
xor
call
dec
inc
mov
jl
data16
fsubrp
scas
mov
daa
cmp
sub
push
inc
mov
mov
xor
or
das
stos
int
pop
xchg
aas
loope
cwtl
hlt
je
sbb
mov
lret
popf
movnti
movsb
fnstenv
push
jp
mov
xor
push
in
adc
xchg
mov
rcl
sbb
stos
push
cld
xchg
test
into
popa
in
inc
mov
push
push
pop
adc
cld
jmp
push
mov
and
ret
pop
pop
inc
mov
mov
add
mov
jns
out
jg
cmpsb
leave
jp
fisttpl
call
int3
xor
pop
clc
addb
push
jns
div
jecxz
xchg
mov
repz
adc
xchg
sarb
das
movhps
mov
imul
xchg
mov
mov
mov
pop
iret
dec
xchg
ror
loop,pt
fwait
mov
mov
mov
clc
lret
test
sti
adc
jne
cmp
or
mov
loopne
leave
pop
gs
xchg
mov
stos
mov
stc
scas
out
shll
ja
add
add
into
mov
inc
push
xchg
lcall
leave
daa
xor
sbb
add
fwait
jl
lret
movsb
dec
jne
loope
dec
ds
dec
fs
and
dec
enter
cltd
pop
fs
inc
add
sub
outsb
incb
and
add
sbb
and
dec
jno
shl
or
rorb
loop
sbb
mov
fs
push
bound
inc
mov
inc
iret
ret
fidivl
sub
imul
xor
scas
push
push
shlb
int3
loope
arpl
outsb
sbb
ljmp
in
adcb
jg
sahf
cmpsb
in
std
or
mov
ds
and
out
shll
pop
adc
int
adc
jns
push
xlat
or
and
dec
das
xchg
stos
shlb
pop
inc
fmulp
dec
inc
dec
lret
test
ficoms
negl
aad
lds
movsb
out
pushf
ds
adc
test
push
sub
pop
and
mov
dec
fisubrs
pop
sub
jne
cmp
inc
fstpl
negl
xlat
pop
out
push
ret
mov
xchg
push
out
mov
adc
xchg
pop
out
push
jmp
in
xlat
dec
adc
xchg
arpl
adc
pop
mov
jmp
pop
insl
test
idivb
das
pop
les
or
sbb
mov
jge
jmp
lret
adcl
enter
fcomi
mov
insl
mov
cs
fcoml
addr16
jg
push
lret
fwait
or
xchg
and
xor
psrlq
jne
add
std
jnp
mov
fdivrs
add
sub
loop
and
stc
xchg
addr16
dec
pop
test
lds
mov
insb
dec
push
fabs
xor
inc
addr16
mov
inc
pop
ficoms
mov
movsl
loope
push
mov
mov
dec
push
push
faddp
add
icebp
adc
dec
mov
fs
mov
dec
sub
das
adc
fldcw
in
movsl
insl
dec
cs
push
push
push
lahf
hlt
test
xchg
loopne
enter
mov
jb
std
pushf
call
arpl
int3
ret
push
loope
jb
inc
movsl
and
xchg
mov
jmp
fs
call
cmc
dec
cmp
test
fmuls
ja
push
or
and
sub
clc
pop
das
call
jne
not
sub
lock
lods
push
sbb
clc
adc
aad
sti
cmp
xor
sbb
ljmp
cmp
push
mov
mov
sub
xchg
jecxz
push
pop
dec
leave
rcr
lods
mov
movsl
loope
fdivl
fxch
out
sub
dec
repz
lret
cmp
jb
cmp
push
scas
jno
ret
adc
lds
xchg
mov
xchg
jmp
mov
mov
dec
out
and
sub
dec
jae
xor
jle
mov
push
dec
xlat
xchg
stc
jg
xchg
and
and
jmp
dec
xor
imulb
ror
repnz
dec
pop
adcb
clc
mov
mov
loopne
or
dec
movsl
lods
push
inc
sahf
imul
ret
inc
enter
inc
pop
xlat
cmpsl
insb
dec
ss
aaa
add
cmpsl
out
aaa
push
outsb
outsl
push
aad
jnp
adc
push
mov
cld
mov
jge
xchg
bound
xchg
adcl
out
mov
nop
mov
push
mov
nop
hlt
nop
int3
pop
sbb
ss
fidivl
cmp
mov
sbb
cmpsl
movsl
mov
call
and
mov
fldcw
daa
fists
ret
nop
test
lret
idivb
xchg
inc
xchg
jnp
mov
pop
leave
notl
test
ljmp
pusha
xchg
pop
and
js
jl
sti
mov
jns
jge
jae
xor
mov
rorb
ror
fwait
or
fnstsw
sarl
add
and
fnstcw
pusha
and
or
ja
pop
lret
or
outsb
lret
push
lret
jb
lahf
jecxz
sbb
movsl
jne
imul
xchg
adc
lea
jne
adc
pop
pushf
aam
xchg
cmpsb
out
shll
lret
subw
mov
insb
mov
pop
cli
cmp
mov
cmp
add
inc
xor
or
test
xlat
pop
adc
fsubs
adc
lcall
jmp
out
loop
jb
rcrl
sbb
mov
idivb
les
in
jb
or
mov
dec
xchg
loop
push
add
adc
ret
insb
ja
push
bnd
mov
push
nop
xchg
jmp
les
pop
mov
test
mov
ret
testl
dec
jb
jge
xor
mov
jb
mov
add
cmp
or
ljmp
popa
and
or
jmp
lods
enter
ss
pushf
fwait
or
xor
or
inc
gs
jo
push
mov
xor
cltd
xchg
push
rcl
and
add
jns
fisttpl
adc
mov
test
sbb
into
cmp
repnz
lods
ss
das
and
lea
out
mov
adc
pop
ret
push
mov
enter
or
notb
mov
and
jo
dec
movsl
or
int
xchg
rcll
int3
sbb
inc
mov
add
in
clc
lcall
pop
sub
xchg
js
enter
mov
cld
daa
movsl
outsl
subl
out
and
pop
inc
roll
loopne
aaa
icebp
mov
fs
and
and
lea
mov
sbb
mov
in
xor
out
fsubrl
or
sahf
dec
mov
jmp
or
inc
out
iret
jbe
mov
es
jmp
cltd
inc
lock
pop
out
into
hlt
scas
push
repz
fsubrs
int
sbb
aas
jge
mov
imul
dec
dec
ds
pusha
jbe
test
xchg
leave
jp
popa
fs
test
mov
mov
mov
lea
fidivrl
add
pop
mov
pop
and
sub
xchg
push
xor
and
stos
mov
or
xchg
aad
pop
or
sub
pop
ds
dec
mov
xchg
stos
pushf
xor
jp
adc
or
icebp
mov
std
pop
fs
mov
or
cmpsb
mov
lahf
mov
push
aam
cmc
dec
subb
popa
or
mov
and
test
jae
lahf
mov
push
jmp
push
mov
sbb
enter
test
dec
push
cli
inc
lods
lcall
and
pushf
or
and
sbb
add
jle
and
insb
xchg
out
inc
mov
icebp
dec
xchg
ret
rorb
ljmp
or
into
lret
add
inc
pop
mov
xchg
mov
aad
hlt
jp
mov
mov
mov
add
or
mov
imul
int
push
xchg
push
inc
popa
jo
xchg
scas
ja
mov
stos
fcomp
sbb
das
mov
xchg
into
mov
rorb
sbb
and
xchg
je
std
xor
mov
sti
test
mov
jns
js
insb
pop
lcall
cmp
inc
lock
out
mov
jp,pn
xchg
push
pop
div
sub
mov
or
jp
nop
lcall
shrl
gs
xchg
pop
testb
xor
mov
push
iret
and
add
fsubp
lods
fwait
push
mov
add
jle
jnp
cmpsb
xchg
push
mov
xor
xchg
int
jb
cs
jns
adc
popf
das
test
push
cmp
mov
decl
jae
add
inc
adcb
cltd
repnz
jp
pop
adc
mov
sbbl
adc
ds
and
hlt
inc
add
pusha
and
insb
pop
xor
pop
cmp
fnstenv
or
cmp
xor
rcl
dec
cmp
mov
adc
enter
faddl
loop
testb
or
xchg
ret
insl
inc
stos
stc
fadds
imull
dec
enter
sbbl
movl
in
mov
pop
push
jp
cmp
fildl
mov
cmp
cwtl
push
push
add
cmpsw
pushw
orl
aaa
pop
mov
jge
pop
imul
or
and
or
or
push
in
mov
and
jno
pop
int3
jne
out
xchg
add
mov
push
xor
adc
push
cmpsl
test
bound
inc
in
and
insb
movsb
das
arpl
jmp
movsl
inc
xorb
enter
jb
and
popfw
adc
sbb
mov
adc
insb
push
aam
mov
pop
orl
push
daa
test
mov
mov
mov
nop
sbb
movsl
cmpsl
pop
imul
in
popa
lock
enter
push
mov
and
mov
add
inc
daa
jl
add
fxch
jo
ja
aaa
sbb
xchg
push
mov
fnsave
adc
add
cmp
or
test
faddl
add
pusha
and
pop
adc
cmpsb
lret
dec
pop
and
or
cli
out
adc
add
movsb
into
arpl
xchg
cmpsl
dec
cmp
lods
out
fcomp
aad
push
sub
sti
mov
cld
fidivrl
hlt
xor
testb
in
mov
mov
enter
xchg
cmp
stos
sbb
sbb
jl
nop
jnp
jo
mov
ret
pop
shlb
xchg
movsb
jb
ljmp
mov
pop
mov
sbb
pop
xor
cmp
or
add
mov
push
cmp
leave
jmp
push
lock
fidivrl
movsl
clc
aaa
je
imul
faddl
mov
pop
jae
js
push
movsb
shrb
mov
das
add
xchg
in
call
leave
jb
mov
mov
push
pusha
mov
inc
out
aam
scas
mov
cmp
subl
fisttpll
mov
cmp
cmpps
pusha
std
cmpsb
jno
inc
xlat
push
hlt
ss
insb
rcll
aas
pop
and
test
cs
cmp
xchg
push
cmp
addr16
outsl
push
pop
add
lock
sub
xlat
cs
mov
jge
xchg
and
pop
aas
lret
mov
lock
lds
xor
xor
pop
jb
daa
add
mov
push
das
dec
mov
loop
sbb
push
clc
dec
jne
sub
inc
loope
xchg
adc
loop
mov
fists
inc
lret
jo
jo
inc
in
pop
add
imul
mov
cwtl
pop
dec
pushf
mov
sbb
nop
adc
cmp
in
mov
fwait
popa
insl
dec
mov
mov
rcrl
lods
fs
ja
mov
inc
es
cmp
in
out
mov
adc
mov
sbb
fs
loopne
out
xchg
xlat
pop
inc
jb
ss
imul
push
andl
mov
in
aam
xchg
xchg
push
xlat
clc
adc
movsb
pop
cwtl
push
imul
pop
adc
pop
cmpsl
xor
mov
dec
xchg
jl
aad
jnp
mov
xor
cmpsb
sub
out
dec
mov
jnp
push
pmuludq
mov
ficompl
jbe
fbld
mov
dec
mov
mov
push
jbe
push
fidivl
mov
hlt
dec
int3
adc
imul
mov
dec
cmp
mov
adc
lock
mov
lret
imul
pop
pop
xchg
out
xor
out
dec
ds
mov
jg
cld
adc
jne
incl
jge
ret
or
cmp
mov
lret
dec
inc
sub
cs
movsl
clc
jp
pop
jle
int
repz
mov
shrb
adc
pop
pop
adc
adc
in
mov
fs
push
inc
mov
sub
pop
lret
shrl
dec
std
aam
aam
sbb
and
sti
add
sub
cmp
mov
sub
sar
int3
jnp
mov
scas
cmc
mov
push
fldcw
in
dec
inc
push
add
adc
ficoml
out
mov
ja
movsl
ljmp
pop
icebp
jg
jb
fsubrl
xchg
jmp
in
lcall
lds
jnp
xor
fcomp
mov
mov
cmp
rcrb
out
popf
call
shl
call
sub
insl
cmp
scas
int
push
repnz
sbb
iret
cmpsb
cmpsb
fcmovnbe
movsb
dec
sbbl
sbb
push
inc
inc
cmpsb
je
sti
mov
jbe
lea
jb
arpl
cmp
xchg
aam
adc
push
cmp
xor
pushf
add
ret
push
sub
inc
cmpb
shrl
mov
fisubl
jecxz
in
fildll
adc
jo
jl
pop
inc
sahf
adc
push
add
or
imul
or
repnz
push
sbb
cmp
orl
or
mov
outsb
inc
pop
push
inc
imulb
sub
mov
xor
imul
outsl
xchg
xchg
gs
repz
push
imull
mov
cmpsl
hlt
std
push
std
lret
fiaddl
aad
dec
outsl
fidivl
add
or
inc
adc
jmp
xchg
imul
mov
lret
add
stc
xchg
sub
adc
cmpxchg8b
mov
test
pop
stos
loop
cmp
gs
mov
in
sub
cltd
or
cmp
mov
enter
clc
lahf
jo
mov
ret
pop
iret
mov
xchg
push
dec
mov
nop
dec
jle
fstl
and
jmp
xor
mov
mov
js
inc
popa
das
mov
add
or
idiv
push
hlt
outsb
cmp
jl
add
sub
aad
sub
repnz
iret
xchg
jle
adc
gs
enter
clc
cmp
into
cmp
clc
dec
and
xor
mov
xor
mov
push
inc
and
xchg
mov
xchg
pop
frstor
sub
mov
nop
sti
shll
sub
inc
or
add
mov
ret
nop
dec
sbb
outsb
push
cmp
ret
out
dec
rcrb
dec
inc
mov
push
imul
mov
popf
test
sbb
xorl
ss
aas
jle
shll
jno
mov
ljmp
hlt
mov
fimuls
std
out
sub
dec
lods
dec
mov
push
inc
scas
xchg
ja
jbe
pop
mov
lea
adc
std
adcl
and
dec
cmp
cmc
pop
pop
jnp
dec
or
dec
stc
jb
cmp
xchg
lcall
loopne
dec
pop
mov
mov
idiv
jg
jo
jle
push
xchg
mov
pop
sbb
cli
in
int
outsl
add
or
dec
pop
jne
and
je
jae
imul
push
ds
sub
scas
movsl
pop
ds
inc
add
lods
cwtl
movsb
ret
pop
xchg
lods
mov
cmp
and
aad
mov
jns
daa
sbb
jbe
fcompl
push
xchg
and
and
adc
adc
sbb
cmpsl
out
rorl
xchg
xchg
hlt
sarl
pusha
stos
mov
iret
xchg
adc
dec
push
sbb
mov
cli
pusha
shrl
sub
nop
mov
sbb
fs
jb
popf
iret
mov
cs
dec
jp
imul
cmp
mov
pushf
ss
mov
xchg
adc
pop
cld
call
in
or
jno
pop
or
dec
sub
xchg
test
sbb
pop
inc
xor
mov
fsubl
inc
les
ja
xlat
outsl
jmp
ret
adc
frstor
jp
push
icebp
popa
imul
fs
cs
mov
and
lea
fildl
add
pop
icebp
mov
pop
lock
pop
cltd
mov
cmp
pop
iret
cmc
push
ret
adc
cli
adc
or
fstl
cmpsb
fisubl
loopne
adc
add
ficompl
push
mov
add
pop
lds
xchg
inc
test
andb
jmp
push
mov
xchg
xchg
mov
lds
mov
popa
mov
push
mov
leave
jmp
cmp
in
and
pop
adc
sbb
cwtl
push
sbb
out
call
rcrb
jle
mov
or
test
adc
dec
test
cmp
cltd
inc
hlt
lock
fs
jp
aaa
popa
push
stos
imulb
xchg
add
out
pop
mov
cli
sbb
xchg
inc
fisubs
rol
loopne
aaa
mov
std
and
int3
pop
mov
js
mov
test
les
pop
cmovno
lds
inc
repz
and
push
in
mov
hlt
mov
mov
daa
mov
js
pop
or
xchg
popa
test
inc
daa
imul
cmp
ficomps
adc
mov
or
pop
sbb
xchg
mov
jae
jns
dec
sarb
cmp
jecxz
mov
ss
xor
in
cli
jp
cmp
xor
adc
push
ret
fs
loopne
mov
mov
fnstsw
stos
pop
outsl
and
add
dec
in
jle
mov
outsl
xor
repnz
int
sbb
push
lcall
mov
push
mov
mov
dec
jbe
pop
fs
data16
or
inc
adc
jle
sbb
loop
mov
push
fisttpl
daa
mov
and
mov
or
pop
mov
pop
js
jp
mov
sbb
mov
jecxz
jbe
inc
xchg
push
fcomip
cmp
push
xor
sbb
push
cwtl
xchg
test
retw
push
aad
sahf
adc
cmovns
dec
jbe
mov
mov
mov
xor
sub
push
js
sbb
cmp
dec
pop
mov
mov
mov
stos
stos
loop
xor
xor
mov
aad
add
and
jp
pushf
pop
sbb
jmp
not
inc
mov
or
fs
mov
push
jnp
inc
pop
test
popf
cmpsl
cmc
cmp
notl
xor
inc
ja
lods
xchg
icebp
dec
nop
mov
inc
add
loopne
dec
push
push
push
mov
std
mov
cmp
repz
jl
cmp
das
hlt
cmp
inc
enter
movsl
mov
mov
aaa
gs
jb
push
outsl
out
cwtl
mov
jecxz
push
push
or
adc
inc
into
cmp
jno
repnz
pop
mov
sub
pop
push
arpl
push
movsb
adc
scas
repz
out
js
loope
ret
addr16
push
pop
push
add
rorb
push
sub
pop
aad
pop
fs
jo
inc
sub
jp
mov
fstl
jbe
xlat
mov
xchg
xchg
mov
lock
das
xchg
pop
inc
das
dec
dec
cmp
aaa
mov
insl
cs
mov
lahf
mov
cmp
sub
jb
jbe
test
popf
xchg
and
rclb
add
push
call
jae
pop
sti
ljmp
outsl
adc
mov
fcoml
shlb
iret
arpl
cld
and
push
cltd
xor
rclb
sbb
jae
arpl
jnp
int
adc
ja
pusha
sub
into
nop
rcll
pop
cmp
xchg
mov
jl
lock
and
jne
insl
rcll
jo
push
es
hlt
adc
call
sbb
sub
push
test
lods
push
dec
addb
movsb
data16
lret
mov
mov
lret
lret
inc
sbb
or
inc
scas
ja
jns
ror
mov
xchg
pop
mov
mov
out
push
add
and
pusha
xor
dec
popa
ret
dec
and
mov
lcall
sbb
push
insb
sbb
push
mov
stc
es
int
jl
sarl
mov
mov
jnp
pop
ret
dec
xchg
mov
js
add
jecxz
leave
popl
popa
mov
shl
in
aas
sbb
mov
adc
inc
push
pop
sub
push
test
subb
mov
icebp
sub
sarb
xchg
add
out
and
add
in
pop
push
xchg
addr16
lods
imul
imul
jle
dec
pop
iret
imul
jecxz
stos
stos
stc
icebp
xor
dec
cmc
sub
aas
jp
add
addb
push
es
ss
icebp
filds
call
pop
lea
in
mov
in
xor
les
sub
push
xchg
pop
push
fwait
dec
add
add
adc
adc
aad
xlat
movsl
sarl
in
pop
stos
movb
imul
and
in
sub
jecxz
sbb
lret
jbe
cltd
and
mov
jbe
or
std
test
faddl
pop
or
add
sti
push
repz
dec
or
xor
xor
push
push
movb
inc
xchg
int3
nop
jbe
cmpsl
das
mov
clc
lock
loope
mov
test
jno
mov
scas
mov
lea
insb
loopne
repnz
stos
lret
enter
shrl
and
pop
inc
mov
in
das
fnstsw
insb
loopne
sub
adc
clc
sbb
aas
and
jbe
out
fld
fcmovnb
cmpsl
ret
jp
mov
add
cmc
outsb
mov
mov
popf
test
mov
fidivl
ss
jno
add
push
popf
jb
bound
fimuls
inc
push
in
cs
push
inc
push
jo
fidivl
in
or
sbb
iret
mov
cmc
cmp
lret
xor
add
aad
cltd
mov
ficomps
mov
inc
mov
sbbb
mull
push
cmc
sub
mov
aaa
push
mov
sbb
lds
call
jg
stc
pop
popf
aam
xchg
jmp
lret
scas
and
popf
cmc
stc
dec
outsl
repnz
mov
jl
mov
jno
mov
and
and
lods
bound
stos
arpl
pop
iret
sub
mov
out
jbe
out
testl
daa
xor
xchg
aad
idivb
notb
add
lret
fwait
or
dec
sub
nop
sub
xor
pop
repnz
out
xchg
into
mov
mov
inc
out
loopw
hlt
xchg
push
sbb
mov
mov
cmp
pop
pop
or
into
jl
sahf
dec
sahf
push
js
nop
xor
int3
rorl
add
testb
sbb
pop
mov
notb
les
sti
mov
pop
pusha
jae
ja
rcrb
aam
xchg
mov
adc
jbe
popf
addr16
dec
cmpsb
dec
stos
and
xchg
into
inc
mov
push
js
and
mov
clc
shl
or
push
add
pop
xchg
mov
int
mulb
lods
dec
push
or
cmc
push
das
std
ja
js
fisttpll
push
lods
xchg
sub
lds
call
int
mov
sbb
ret
and
js
repnz
push
mov
daa
jno
enter
cmpb
xor
dec
fists
sbb
hlt
sbb
sub
pusha
in
ds
repnz
outsl
insl
mov
jno
js
xchg
jp
xor
push
pop
loope
mov
in
rorl
xchg
jecxz
mov
sbbb
sti
stc
push
dec
jae
jno
adc
dec
mov
out
mov
mov
push
add
add
lcall
inc
bound
lahf
jecxz
jae,pn
push
cmp
cmpsl
inc
imul
repnz
fstps
dec
icebp
jb
push
cmp
sbb
inc
and
mov
mov
mov
popa
mov
out
mov
push
push
inc
dec
push
sub
aad
cwtl
lods
sbbl
fiadds
cmpsl
mov
sti
inc
rclb
jne
sbb
fisttpll
push
adc
lret
cmp
lock
push
pop
insl
mov
ds
push
btr
add
into
sub
or
xlat
dec
ds
mov
push
js
int
cmpsb
adc
and
cmp
data16
aas
jnp
xchg
addl
inc
test
add
fwait
stc
mov
les
cld
jb
int3
jbe
popa
js
daa
clc
aaa
pop
push
or
cmpb
xchg
inc
shl
imul
dec
cwtl
out
dec
clc
and
push
pop
jb
push
push
mov
fists
inc
daa
icebp
mov
mov
push
fs
enter
and
xor
icebp
adc
push
xor
gs
jmp
call
adc
pop
xchg
xor
call
cmp
jno
das
cmpsb
int3
add
inc
adc
sub
sub
call
fildl
lea
adc
in
fiaddl
xlat
xchg
push
cwtl
xchg
je
jmp
xchg
shlb
dec
scas
shr
cmp
pop
inc
in
cmpsb
mov
mov
inc
in
adc
divl
adc
in
sar
enter
test
inc
in
repz
mov
xchg
cmp
sbb
push
xor
cmp
adc
call
test
adc
nop
xlat
jl
or
mov
inc
ret
ljmp
out
test
cli
xchg
dec
imul
js
inc
nop
add
cli
jns
push
cmp
daa
mov
mov
mov
mov
mov
inc
pop
loop
jmp
xchg
fcomps
mov
popa
add
sub
xor
daa
jmp
fnstsw
inc
mov
inc
sarb
fcomps
test
aad
and
push
cmpsl
nop
and
xchg
or
pop
jae
xchg
lcall
insb
pop
jno
insl
adc
cmp
jmp
or
out
sbbl
jmp
add
shrl
ss
lea
sti
daa
jne
mov
call
cmpsb
jo
mov
or
mov
sbb
and
pop
mov
mov
fwait
pop
jo
cmp
and
jno
xor
sbb
mov
inc
adc
aam
mov
ljmp
arpl
sbbb
les
std
cmp
jne
or
jecxz
fdivrs
pop
loope
mov
sbbb
inc
and
adc
or
mov
insb
aas
mov
incb
xor
addr16
jbe
or
dec
mov
push
insb
dec
mov
test
sbb
movsb
inc
mov
add
or
nop
pop
adc
loopne
jnp
pop
call
pop
sub
clc
in
in
push
jmp
loopne
lcallw
or
cwtl
mov
rorl
push
mov
jl
out
movsb
js
scas
xchg
xchg
inc
cs
or
subl
xchg
add
dec
mov
fdivrl
or
fmul
pop
fwait
out
sbb
in
call
dec
or
pusha
mov
push
pusha
pop
push
movsl
jb
jae
pop
cmpsl
push
push
jp,pn
sub
add
es
cs
adc
xchg
std
xchg
daa
inc
lds
lock
cwtl
mov
je
popa
dec
inc
rcll
mov
jns
outsl
or
xchg
cmpsb
fwait
add
loope
out
or
test
nop
mov
fldl
sbb
idivl
std
jne
fwait
mov
cmp
aas
cmp
cmp
dec
sub
mov
sbb
push
xchg
lret
and
dec
adc
mov
insb
lcall
int
mov
mov
mov
sub
clc
jge
gs
movsb
iret
out
out
mov
dec
addr16
xlat
adc
lods
arpl
aas
leave
add
bound
stos
inc
cltd
pop
mov
and
gs
xchg
xchg
fdivrs
mov
std
mov
jp
out
int3
test
insl
jne
mov
xchg
add
fisttpl
mov
adc
jecxz
pop
sti
mov
inc
pop
inc
lret
pop
inc
xchg
push
movsb
outsb
adc
rep
xor
xchg
jb
cmpsb
xchg
mov
sarl
xchg
xor
add
int
mov
sbb
pushf
stc
mov
xchg
mov
inc
sub
ljmp
loop
mov
je
mov
stos
and
push
jecxz
push
enter
sub
push
sbb
fnstsw
xorl
into
ret
inc
mov
jno
gs
stos
mov
rcrl
mov
adc
cld
pop
pushf
and
outsl
jo
scas
xchg
adc
mov
rcll
xor
mov
icebp
or
push
xchg
push
sub
fstps
pusha
sbb
fdivrs
adc
xor
and
aas
pop
fs
jmp
dec
lret
sbb
mov
add
lcall
or
inc
inc
roll
cli
jb
mov
adc
mov
mov
sub
clc
out
push
xor
imul
sti
jp
sar
add
ds
sub
mov
repnz
sbb
pop
sub
cwtl
xor
dec
call
gs
cmp
sub
rol
es
in
jnp
enter
rcrb
dec
push
cmp
fcmovbe
out
int
icebp
icebp
dec
hlt
sbb
jge
lret
iret
jbe
cwtl
fistl
xchg
pop
cmpsl
and
test
dec
or
jo
popf
enter
in
int3
stos
loope
mov
out
es
mov
dec
push
int
js
pop
mov
dec
fidivrl
cmp
repnz
mov
xor
repnz
outsl
andb
pop
cmp
jg
shrb
inc
xchg
data16
adc
les
fdivl
in
jbe
pop
into
imul
sbb
inc
pop
inc
cmpl
or
cmpsb
fnstsw
dec
cmp
dec
mov
lahf
pop
add
insb
cmp
int3
adc
mov
or
sub
out
mov
push
stc
test
jecxz
dec
decb
sub
xchg
pop
mov
ret
outsb
and
inc
xchg
xchg
pop
mov
push
pop
xor
notl
dec
xor
lods
cmpsb
pop
enter
mov
mov
rorl
sbbb
inc
inc
popa
out
insb
ficoml
jge
adc
xor
or
divb
call
insl
movsb
sbb
sbbb
dec
inc
add
call
and
out
adcl
jp
aaa
or
dec
cwtl
push
push
sbb
cmp
sub
push
mov
fsubrs
test
xor
mov
jo
xchg
pusha
pop
scas
hlt
mov
adc
pop
fwait
int
out
adcb
shl
mov
jb
cmp
mov
arpl
and
add
dec
lea
adc
mov
scas
add
iret
notl
nop
jg
dec
cmp
call
lahf
push
loope
shrl
xchg
mov
das
inc
out
push
mov
adc
sar
lcall
aad
sti
inc
ficomps
rcr
jl
jae
fildll
mov
mov
flds
xor
mov
fldl
xor
pop
mov
stos
mov
push
sub
repz
ljmp
jp
jo
mov
test
popf
repz
xchg
test
inc
mov
mov
push
and
mov
pop
loope
jle
sub
lea
in
ret
shrb
fisubl
leave
into
rcr
enter
int3
clc
xchg
pop
bound
mov
adc
and
jbe
loop
imulb
shr
inc
mov
shrb
lods
repnz
mov
dec
jle
or
lret
xabort
sub
mov
sti
or
and
aam
insb
js
sbb
mov
aaa
sbb
bound
push
clc
add
dec
lods
data16
insl
les
or
and
jge
stos
mov
in
xorl
adcl
bound
or
aad
push
aas
in
lret
aam
sti
jg
popa
cld
shll
mov
cmp
push
in
cld
inc
fwait
cmpsl
fdivrl
call
xlat
fidivrl
and
rcll
insl
dec
ds
cmp
push
lcall
xchg
shll
jmp
cs
add
lods
push
mov
out
pop
lds
add
in
mov
adc
push
xchg
cltd
sbb
lcall
cmc
sahf
xlat
sahf
mov
xchg
sub
into
fsubr
mov
loop
or
out
int3
leave
rcrl
xchg
jo
jmp
xchg
cld
loop
push
lods
int3
xorl
les
faddp
xor
sub
push
hlt
out
ja
stos
mov
and
aas
inc
out
inc
fs
shll
js
sub
cld
jle
mov
lock
shufps
das
fisubrl
sbb
cmpsb
cmp
mov
cmp
ret
fmull
xchg
ret
push
aas
sub
lock
mov
arpl
ret
lret
out
cmp
mov
sub
and
pop
das
sbb
out
mov
movsb
dec
dec
popa
mov
aas
in
rdmsr
xchg
movsl
jbe
loopne
shll
out
sub
repz
push
dec
jns
shrb
sub
pushf
icebp
les
mov
fisubs
dec
mov
cmp
out
xor
test
xchg
stos
add
and
xor
push
aad
jecxz
les
stos
mov
xor
xor
fisttps
cmc
jns
shll
mov
adc
mov
ret
mov
fwait
ret
push
loope
das
jge
jbe
cmpsb
pop
stc
inc
mov
dec
push
shl
sbb
mov
dec
xchg
xlat
cli
out
jl
mov
ljmp
mov
out
inc
fisubrs
andl
subl
jmp
lret
cmp
sub
loop
sub
push
fldenv
dec
xchg
cld
leave
mov
xor
cli
in
lods
call
sbb
scas
and
into
push
in
jnp
in
fidivrl
hlt
dec
sbb
push
sbb
sub
fldenv
aas
push
dec
mov
mov
push
imul
out
int3
push
negl
mov
push
dec
movsb
add
and
mov
into
mov
dec
subb
sub
ret
pop
pop
enter
cmp
mov
test
xor
popa
mov
adc
lea
pop
mov
mov
aad
dec
or
mov
jl
xorb
in
jne
outsl
out
pop
cmpsl
fwait
push
daa
jo
push
stc
sbb
aaa
in
pop
idivl
dec
xor
pushf
and
xchg
jbe
pop
enter
adc
inc
sbb
push
lea
inc
adc
sbb
or
fs
out
push
fistpll
pop
mov
scas
in
adc
cmp
es
cld
push
or
je
xor
add
in
jmp
dec
daa
call
jns
mov
lret
sbb
arpl
sti
adc
fdivp
cli
aas
xor
loopne
rorl
sbb
ret
notb
lcall
movsl
push
jl
gs
jmp
and
ds
loop
mov
push
aaa
add
mov
popa
push
xchg
aas
lret
stos
clc
in
push
and
dec
lock
test
jb
mov
mov
jp
xchg
in
lock
aam
sarl
pop
out
adc
inc
rcll
out
mov
arpl
push
xor
or
mov
ja
cmp
mov
dec
xchg
or
aaa
lods
js
add
outsl
sbb
imul
std
xor
sqrtps
test
or
movsbl
rcll
in
rorb
mov
outsb
out
xchg
je
add
jne
mov
insb
xor
adc
adc
mov
push
mov
jb
hlt
repz
xchg
mov
mov
arpl
mov
mov
leave
cmp
lock
ja
and
inc
pop
jle
dec
sub
test
add
cmpsl
push
xchg
ret
xchg
jno
insb
sub
jecxz
jb
mov
xor
fcmovnbe
orl
dec
sbb
mov
cmc
pop
rorl
sarb
cmc
lock
mov
mov
xlat
rorb
sub
lcall
cmpsl
fsub
pop
xor
or
jmp
mov
aaa
add
adcb
pop
or
jecxz
fbstp
js
insb
mov
cmp
notb
iret
cmc
scas
pop
aaa
ret
dec
push
pop
out
hlt
adc
adc
sti
mulb
push
icebp
addr16
add
mov
mov
stos
push
sbb
or
inc
sbbb
mov
or
and
and
sbb
les
mov
xor
push
or
mov
sbb
addr16
test
lret
inc
imul
iret
or
add
outsl
in
test
inc
jns
mov
mov
cld
sbb
aad
es
sub
es
aam
popa
aad
pop
arpl
test
imul
imul
in
scas
clc
add
popa
mov
test
movsl
fadd
into
ja
push
test
xchg
hlt
push
fsubrs
pop
icebp
in
mov
add
mov
jae
sub
add
in
cli
pop
sub
bound
pushf
push
mov
xchg
mov
xor
outsl
loop
mov
mov
cmpsb
loop
and
outsl
je
decl
pop
inc
iret
lods
int3
dec
or
mov
xchg
out
int3
arpl
jbe
inc
ret
ret
lock
movsb
pop
shlb
add
subl
subb
mov
ret
mov
rclb
mov
dec
stos
mov
leave
std
jmp
push
lods
pop
inc
loope
popf
dec
je
sarl
push
mov
iret
xchg
jnp
lret
pop
aad
loopne
inc
insl
and
cmpsb
adc
pushl
adc
in
out
sub
popf
mov
push
cmp
aas
and
stc
ljmp
insb
roll
fwait
xchg
and
adc
and
pop
lcall
fcom
and
adc
xor
pop
mov
ljmp
mov
test
repnz
enter
jg
arpl
jno
xchg
inc
lods
lcall
imul
jo
dec
out
movl
sub
mov
add
cmp
stos
xor
dec
jmp
mov
das
push
cmp
bnd
out
adc
rcr
jnp
pop
cmp
scas
mov
in
pop
fs
mov
loope
fiadds
subl
frstor
enter
xchg
xchg
mov
jecxz
cltd
bound
jo
push
sbbl
sub
push
cmpsb
xchg
test
daa
cli
mov
mov
dec
in
test
xorb
xchg
fisttpll
cmp
outsl
adc
ss
xlat
jge
mov
cmpl
sub
sub
jo
mov
mov
fdivrs
shlb
mov
call
lods
jecxz
cmp
pop
jno
shll
mov
pushf
icebp
inc
mov
mov
mov
jmp
push
mov
loopne
mov
addr16
repnz
pop
addr16
pop
sbb
mov
push
and
sub
lret
roll
xchg
pop
xor
jmp
jb
call
inc
lds
addb
movsl
pop
push
mov
xor
inc
xchg
daa
xor
xchg
cmc
or
cwtl
or
rorl
mov
aaa
sti
mov
mov
das
dec
movsl
pop
ss
hlt
pop
lods
ljmp
in
adc
xchg
shll
stos
movl
ret
mov
dec
mov
imul
xor
clc
lock
leave
icebp
jns
push
push
adc
sti
sbb
int3
push
lcall
inc
jecxz
out
or
pop
cmp
ficoms
dec
shll
or
das
cmp
in
rol
fisubl
leave
mov
adc
xchg
jns
repz
daa
imul
ficomps
popf
rcll
pop
xchg
icebp
cli
loope
cmp
cmp
loopne
pop
adcl
push
cli
and
insl
aas
clc
push
hlt
and
jns
mov
lret
dec
sahf
lahf
cmp
aaa
adc
out
jns
pop
in
insl
nop
sub
dec
aas
repz
ljmp
shll
lds
call
jmp
push
hlt
pop
or
xor
mov
xor
mov
xor
xorl
lock
leave
mov
xlat
cmp
cmpl
lret
xchg
push
mov
cmp
mov
lds
sbb
sbb
or
jp
mov
pop
stos
out
mov
or
movsl
daa
sbb
lcall
repz
testl
decb
call
xor
adc
dec
sarb
test
pop
ret
mov
das
mov
jb
addr16
data16
sahf
sub
add
sbb
fadds
jle
out
lahf
add
push
fsubs
mov
fdiv
les
mov
cltd
sub
cltd
or
sbb
and
xchg
mov
pushw
std
nop
jae
es
bound
pop
fsubp
lret
xchg
or
or
jo
sahf
push
pusha
cmp
inc
adc
lret
lcall
add
sub
add
jne
lcall
mov
mov
aad
xor
push
repz
cmpb
mov
int3
outsl
push
testl
and
sti
fiaddl
sbb
xchg
iret
repnz
sbb
xchg
mov
dec
lret
movsb
jp
sub
jne
push
sbb
ret
outsl
and
and
fwait
xor
aas
jle
or
cmp
mov
push
movsl
shll
mov
pop
mov
inc
xorb
dec
outsb
out
and
push
push
cmpsl
test
fcoms
xlat
sub
test
enter
cmpsl
push
sahf
call
mov
inc
or
mov
pop
ljmp
mov
gs
and
jle
cmp
xchg
in
adc
xor
push
dec
mov
cli
iret
xor
ficoml
cld
js
div
cmp
ja
test
xor
jno
cwtl
mulb
jecxz
inc
sti
sub
repnz
fdivrp
xorl
add
xlat
cltd
lods
sbb
stc
mov
int3
cwtl
out
or
inc
jb
data16
sub
mov
addr16
sahf
add
mov
out
arpl
xchg
pushf
les
popf
test
sbb
or
loop
repnz
inc
and
adc
mov
inc
aaa
test
call
cmp
paddw
icebp
mov
cli
rcrb
movsl
sbb
fstl
int3
insl
cmp
push
pusha
icebp
in
das
push
push
push
inc
inc
sahf
data16
fcomi
adc
fxch
push
subl
roll
mov
inc
out
shrb
inc
pop
daa
imul
push
mov
mov
push
add
aas
mov
mov
jnp
xor
mov
jmp
sti
cld
pop
xor
inc
int3
int3
inc
mov
add
mov
cld
mov
push
jne
pop
jp
and
loopne
sub
add
sub
das
mov
aad
dec
fsubrl
in
insl
test
test
out
mov
jns
jg
dec
push
in
ret
or
iret
lret
pushl
push
cwtl
test
scas
lea
and
sub
sti
sbb
fimull
pop
in
jne
pslld
popf
pop
shrb
pop
stc
data16
sub
idivl
xchg
fsubr
daa
mov
in
adc
jbe
lret
mov
cs
rcrb
push
mov
push
push
je
inc
xchg
aaa
out
shlb
cmp
mov
stc
cmpsb
in
mov
or
es
pop
ret
mov
arpl
outsb
scas
xchg
xor
pop
mov
xor
mov
cmp
aam
mov
dec
adc
fstpt
out
add
dec
or
dec
xchg
jmp
rcrb
xchg
fwait
repnz
mov
push
sahf
sbb
pop
jb
bound
sbb
and
shlb
sysexit
bnd
gs
rcl
leave
push
add
mov
and
imul
mov
neg
mov
out
ss
adc
stos
inc
ja
mov
pop
push
push
in
insl
add
xchg
inc
aas
cwtl
dec
xor
pop
xchg
mov
cmp
inc
inc
pop
imul
imul
sub
int
fcompl
inc
arpl
pusha
sub
or
mov
mov
push
pop
lahf
dec
das
mov
jb
xor
and
ss
fisttpll
stos
scas
add
mov
xchg
fidivrl
mov
shll
call
int
cmp
dec
out
and
push
imul
stos
mov
jmp
cs
jnp
ficoms
cld
push
and
mov
inc
inc
pop
outsl
movsb
push
pop
jo
subl
mov
iret
clc
inc
in
mov
aas
out
adc
dec
jae
lcall
sbb
pop
xchg
pusha
dec
stc
cmp
add
in
sbb
outsb
dec
sub
adc
in
cli
pop
push
mov
mov
and
inc
push
imul
stos
imul
jns
jge
pop
mov
cmp
and
ret
mov
jbe
or
add
cmp
cmc
out
add
cmpsl
sub
gs
pop
dec
test
push
hlt
adc
mov
cmpsl
pop
mov
xorb
add
xor
jp
pop
call
xchg
bound
pop
loop
data16
lcall
insb
lahf
cltd
and
daa
cmc
popa
loopne
fs
ret
dec
ds
mov
dec
rolb
aam
vmovddup
jecxz
data16
daa
cmp
mov
cmp
and
addr16
in
mov
movsl
popa
cmp
add
and
mov
mov
mov
out
sbb
lcall
aad
sub
add
gs
ret
out
mov
pop
xchg
scas
ret
jge
scas
push
lret
mov
dec
ljmp
in
in
mov
cmc
add
lods
imul
test
fsubrs
ret
addr16
xor
jp
jp
inc
xchg
cmpsl
call
mov
sbb
mov
bound
lret
in
fidivl
push
mov
scas
mov
fdivs
add
mov
inc
and
test
xchg
jge
out
jb
sbb
pop
xorb
cmp
bound
and
not
xchg
mov
sbbl
pop
pop
mov
cmp
scas
dec
les
popa
dec
es
rol
jl
aas
shrw
push
repz
push
mov
xor
add
pusha
movsb
push
and
stc
inc
or
shlb
in
sub
faddl
jnp
xchg
mov
cmp
inc
or
inc
fdivrp
mov
sub
mov
movl
adc
jp
push
rolb
clc
mov
mov
push
jle
aam
test
out
mov
xor
mov
mov
into
dec
das
cmpl
cmp
xorl
push
orps
stos
into
mov
cmp
leave
jmp
push
mov
mov
or
fiaddl
insl
mov
jo
pop
sahf
xchg
mov
push
fdivp
adc
cmpsb
cltd
sbb
iret
aas
repz
into
cmp
addl
add
lret
add
push
pop
pop
es
add
scas
das
or
aas
in
ret
aaa
add
fsubs
push
movsl
lret
dec
scas
mov
xor
or
xor
into
add
jmp
jbe
sub
std
cld
lret
scas
pop
jae
push
and
addl
push
sub
out
cmpsb
es
cmp
movsb
clc
test
adc
notb
push
out
cli
mov
stc
ja
xchg
push
mov
push
imul
mov
push
xchg
insb
sbb
mov
dec
outsl
sarl
jmp
test
cmp
out
jle
adc
push
push
push
xchg
loopne
push
cltd
sbb
or
shl
inc
daa
push
cmp
movsl
aaa
mov
push
push
dec
xchg
out
push
and
out
fistps
cmp
pop
faddp
xchg
lods
push
ss
mov
rolb
xor
adcb
mov
cmp
sub
or
or
fwait
jne
es
inc
mov
dec
les
cmp
inc
dec
adc
inc
add
gs
scas
les
daa
aam
sub
mov
inc
adc
pop
lods
push
mov
xchg
ljmp
jp
das
outsl
and
mov
popf
lahf
rolb
sbb
std
aad
inc
outsb
mov
xchg
mov
stos
lcall
enter
and
sbb
and
jg
push
lcall
cmp
ds
mov
stos
and
fnstcw
call
or
adcb
aam
or
fwait
xchg
dec
lds
mov
int
aam
push
incb
xchg
add
mov
and
out
mov
lret
sub
xchg
andb
mov
pop
imul
bound
sub
add
jp
adc
inc
adc
cmpsl
dec
or
adc
fldl
filds
cmp
adc
push
aad
imul
aam
xchg
jo
ss
or
inc
mov
xor
mov
lcall
jmp
or
adc
lea
imul
push
push
sub
and
inc
lea
inc
pop
orl
sub
xchg
roll
mov
fistps
mov
test
in
ja
pop
adc
out
adc
hlt
push
pushf
in
jno
sahf
jmp
mov
rol
cmpsb
mov
mov
fucomp
push
test
cmp
loop
sbb
lock
ja
daa
xor
mov
mov
insb
push
jno
addr16
shll
cld
test
decl
and
in
pop
adc
jb
testb
jp
je
pop
dec
mov
bound
idivl
js
push
fisttps
xchg
xor
loope
test
jp
ds
lods
sbb
dec
add
sbb
jg
std
push
cmpsb
jb
std
push
jae
ljmp
xor
xchg
xor
sub
aam
int
shl
lret
mov
rol
and
divb
enter
pop
adc
les
addr16
pop
sbb
or
lods
lahf
fistpll
enter
test
loope
push
call
xor
movsl
fdivs
xor
loope
jno
cwtl
cltd
cltd
cmp
ja
je
inc
inc
push
imul
mov
push
inc
addr16
fs
xchg
xlat
pop
lods
call
dec
dec
xchg
fstl
or
mov
pop
adc
dec
in
jb
cmp
sbb
xchg
int3
fdivp
sbb
dec
lods
inc
push
sbb
xor
dec
jle
insb
stos
je
adc
into
sub
push
xchg
inc
mov
mov
andb
jl
push
jns
daa
xlat
mov
jecxz
inc
add
sti
mov
lods
in
icebp
add
sahf
inc
in
dec
dec
cmpsb
sub
daa
lods
test
je
and
popa
jae
xor
pop
add
inc
mov
jae
lock
imul
insl
sbb
inc
dec
and
cmp
add
inc
push
fiadds
ja
mov
test
add
bound
xorl
or
jge
dec
lahf
xchg
cmpsl
xchg
xor
xor
pop
sbb
inc
xor
and
int3
ret
sub
add
loop
lret
and
iret
xor
cwtl
cwtl
pop
xchg
sbb
sahf
loop
enter
cmp
dec
inc
xorl
cmpsl
xlat
ret
xchg
and
dec
mov
out
mov
rclb
adc
je
sub
mov
jno
adc
test
hlt
lods
scas
mov
pop
add
xchg
out
test
and
pushf
jb
mov
cli
sbb
xchg
out
xor
lret
jae
xchg
ss
dec
mov
jl
push
inc
mov
cmp
xor
pop
ret
dec
cmp
sbb
lahf
mov
je
lock
pusha
xchg
sbb
fiaddl
mov
push
push
sti
sbb
data16
push
lock
or
in
mov
mov
push
rcrb
lcall
jno
xorps
inc
sub
inc
lock
ret
sub
call
mov
pop
sub
jl
inc
mov
mov
push
leave
pop
int3
repnz
jl
mov
sbb
pop
pop
repnz
pop
call
addr16
cli
in
test
xchg
outsl
addr16
xor
cmp
jno
mov
movsb
stos
test
lock
rolb
jbe
inc
in
call
pop
xor
adc
lcall
iret
push
or
adc
insb
dec
jns
jmp
mov
xor
sub
dec
cmp
cmp
movsl
loop
cmp
xlat
movsl
call
mov
gs
inc
pop
lds
data16
mov
int
out
cmpb
push
lcall
dec
adc
imul
inc
dec
mov
popf
xchg
idiv
sub
and
into
sar
fdiv
inc
pop
cmp
faddl
or
cmp
fcomps
les
adc
and
movnti
xor
cmp
je
jp
push
popa
push
stos
lcall
std
adc
jno
xchg
enter
imul
pop
or
loope
cmpsl
jne
stos
outsb
roll
pop
test
xchg
inc
test
xchg
inc
sub
scas
or
mov
xor
lea
push
scas
xorb
loope
cli
sahf
fs
sub
pop
push
ret
mov
xchg
ljmp
mov
xchg
sbb
pop
call
mov
repz
and
in
aam
xor
inc
sub
adc
fnstenv
inc
add
jg
push
pop
sbbb
stos
ret
insb
cmpsb
stos
mov
add
adc
mov
js
clc
lds
jge
rcrb
js
in
stos
lods
or
popa
or
je
cmpsb
fdivrs
or
or
cld
les
leave
mov
fs
imul
jg
xchg
dec
mov
and
sarl
sarb
jecxz
dec
xchg
arpl
add
add
xchg
add
mov
pop
xor
xchg
push
sub
dec
aad
mov
adc
pop
enter
mov
mov
int
lods
jg
aas
clc
xlat
mov
lret
daa
aaa
lret
cmp
inc
add
xor
adc
dec
mov
jl
sbb
jecxz
mov
pushf
arpl
loop
aad
mov
sbb
jp
jns
push
cmp
mov
mov
js
enter
adc
cmp
mov
add
imul
jns
inc
outsl
mov
pop
or
sbbb
pop
mov
mov
push
test
test
push
or
repnz
jp
lock
jmp
clc
scas
hlt
inc
rcr
das
cltd
sub
es
lea
sub
sub
mov
gs
mov
mov
mov
mov
dec
sub
and
shl
add
push
and
icebp
inc
iret
dec
hlt
loope
mov
inc
aad
dec
mov
insl
js
add
cmp
cmp
icebp
jge
std
sub
sbb
daa
xor
sub
int
inc
xorb
jmp
pop
or
imul
cmc
and
stos
dec
sub
test
sub
lahf
ljmp
cmpl
incb
and
in
sbb
pusha
push
jp
lret
inc
inc
adc
xchg
mov
adc
sbb
lret
mov
insl
jb
imul
dec
or
std
insl
pop
jecxz
loope
insb
imul
cli
fisttpl
sahf
leave
push
ror
dec
or
sub
stos
sbb
in
andl
push
push
pop
aaa
mov
ror
cmp
int3
jbe
imul
sub
push
fadd
xlat
sbb
mov
pop
mov
loop
or
addr16
fdivl
pop
jb
aas
sarl
and
mov
dec
and
enter
jae
stos
push
sub
dec
scas
mov
nop
out
arpl
jbe
xchg
les
movsb
xchg
fld
xchg
sbb
mov
push
daa
mov
sbb
xor
cmp
or
mov
fisttps
adc
xchg
jge
pop
fisubs
adc
jmp
push
mov
jne
xchg
test
jmp
leave
xchg
inc
mov
fisttpll
adc
add
pop
xor
push
aam
fidivs
scas
push
popa
xor
ds
in
push
xor
repnz
das
fdivrl
les
das
stos
or
inc
mov
and
bound
xchg
or
pop
xchg
sbb
push
cmp
mov
add
xchg
call
add
cmp
sub
jne
xor
push
cmp
repz
scas
dec
dec
movsl
mov
test
cltd
ss
subl
jnp
mov
stos
enter
adc
ja
inc
fistpll
ja
or
mov
push
inc
mov
inc
sbb
adc
mov
jmp
jecxz
ljmp
arpl
push
pusha
jne
fisttpl
adc
pushf
jmp
pop
aas
mov
insl
mov
popa
popa
or
imul
iret
daa
out
out
mov
insl
fwait
mov
pop
inc
aam
add
xor
or
rorl
arpl
jmp
cmp
inc
call
movsl
fsubrs
sbb
jno
rol
addr16
nop
jne
cmp
scas
push
lahf
and
sahf
icebp
xchg
clc
sbb
ret
pop
cmpsl
jl
adc
cmpsb
ljmp
in
addr16
pushf
push
loop
in
cmp
adc
xor
scas
aad
mov
pop
ds
jae
shrl
mov
pop
fwait
adc
sbb
mov
add
mov
sbb
testb
addb
sub
test
xchg
stos
fnclex
ss
lcall
repnz
jne
add
add
mov
sub
repnz
sub
int
negl
movsb
sbb
dec
jl
jne
jecxz
es
mov
lods
addr16
scas
pop
lcall
push
ja
mov
bound
mov
adc
mov
dec
jg
stos
fisttps
xchg
imul
jg
pop
lret
cmp
enter
mov
jb
and
out
lahf
outsb
fsub
js
pop
push
lret
addr16
pop
es
stos
cmp
pop
ret
xlat
mov
imul
mov
mov
dec
mov
jmp
mov
je
sub
jecxz
loope
cmp
mov
imul
mov
outsb
es
jae
dec
mov
mov
out
lahf
mov
jg
sub
xchg
adc
sbb
cmp
mov
sub
clc
imulb
ficomps
and
adc
cmp
dec
fistpl
inc
loopne
mov
mov
or
call
out
and
imul
out
sbb
movsl
int
ss
pop
adc
jo,pn
mov
dec
loope
mov
loopne
inc
jge
cmp
add
stos
jb
rcrl
insl
or
push
cmpsb
sbb
scas
adc
out
leave
out
sbb
loop
and
mov
mov
popf
lret
sti
mov
call
int3
imulb
and
movsb
fisttps
neg
fldl
jecxz
mov
and
xor
popf
adcl
fwait
and
fbstp
dec
pop
add
xchg
sahf
cmpsl
dec
jno
adc
fidivs
fistl
add
cmp
pop
mov
mov
ret
mov
sbb
push
pop
xchg
std
test
sti
sbb
jge
movsb
shrb
insb
xor
jo
pusha
jno
fwait
mov
mov
scas
mov
data16
dec
bound
or
repnz
test
pop
mov
mov
iret
sbb
movsb
xor
je
xchg
pop
jb
push
outsl
bswap
add
lea
cltd
mov
mov
cmc
das
call
fldt
lock
add
sub
mov
pusha
les
jmp
imul
jge
lret
xchg
push
sbb
daa
dec
cmpsl
xchg
cmpsb
inc
repnz
sub
push
pop
push
inc
dec
fs
ficoml
and
jb
test
movsb
or
add
jmp
gs
pop
push
adc
lret
adc
sub
mov
loope
in
adc
dec
xchg
jo
push
icebp
cs
inc
pop
imulb
imul
inc
repz
mov
fs
pop
insb
pop
mov
ja
dec
pop
and
lret
sbb
adc
push
jge
andb
int
mov
in
je
ds
mov
and
movb
mov
jp
push
or
incb
inc
adcb
ret
fwait
sub
out
inc
or
mov
dec
mov
nop
pop
into
in
mov
insb
pop
inc
dec
jl
mov
or
gs
lods
ret
xchg
pop
rorl
jbe
pop
fdivrs
ds
popa
jae
fwait
in
gs
movsb
push
fcoml
mov
push
movsb
loope
sub
add
mov
mov
rcrl
push
add
adc
mov
loopne
addr16
sbb
mov
mov
xor
fs
xchg
push
repnz
out
mov
cmp
dec
inc
push
jo
mov
jge
adc
js
out
out
mov
icebp
pop
int3
add
scas
ficoms
mov
jl
jecxz
popf
rcll
inc
cmpsb
mov
push
rcll
mov
adc
push
sbb
data16
inc
dec
mov
bound
filds
jns
and
and
leave
sarb
push
jp
xchg
sarb
cmp
mov
fimuls
insl
daa
cmp
loope
lock
lcall
pop
xor
xlat
repnz
inc
jns
jle
popa
mov
imul
cmp
jl
mov
mov
clc
jmp
int3
daa
imul
int3
xorl
xor
popf
mov
pop
sub
in
bound
adcb
repz
enter
jnp
cwtl
sbb
bound
cld
mov
popf
ret
stc
test
cmp
xchg
je
mov
sub
mov
pop
jge
clc
loop
popa
sahf
in
inc
test
sub
add
jnp
xor
xor
movsl
pop
sub
out
pushf
xchg
cld
cmpsb
mov
mov
jb
aaa
fimull
push
jno
lods
scas
stos
mov
lods
popf
leave
les
int
pop
xchg
cli
adcb
sbbl
fcompl
or
and
arpl
mov
jge
ja
repz
xor
ret
movsb
mov
xor
iret
arpl
sbb
cwtl
dec
call
test
out
pop
xchg
mov
dec
push
and
sbb
mov
outsb
into
aas
push
pop
in
subl
xchg
and
xlat
sti
dec
xchg
sub
xchg
fistpl
in
fisubl
ret
out
mov
or
jp
rcll
fldt
mov
loop
add
dec
addl
test
mov
fidivrs
pop
push
adc
sub
dec
insl
stos
xor
nop
enter
sbb
xor
jo
out
scas
popa
cld
sub
push
pop
cs
cld
clc
dec
sub
pop
xchg
xchg
inc
ret
cmc
cmp
imulb
dec
addr16
ret
sub
or
push
cmpl
call
lock
sarl
fldl
fsubs
adc
repz
dec
sub
pop
inc
inc
jg
cmp
ja
testl
xchg
adc
xchg
and
gs
scas
dec
inc
mov
mov
popf
aam
xchg
mov
dec
adc
js
mov
jb
lahf
mov
inc
mov
xchg
add
pop
xchg
iret
dec
jnp
mov
add
cmp
pusha
out
dec
adc
mov
add
xchg
dec
js
mov
pushf
cltd
inc
push
pop
mov
inc
push
pusha
or
jo
pop
mov
imul
arpl
int3
popa
cmp
jmp
add
inc
mov
or
fdivl
push
in
pop
adc
outsl
sti
clc
mov
mov
sbb
inc
test
mov
xchg
sbb
sbb
mov
pop
mov
cmpsb
std
mov
dec
scas
dec
nop
sub
lret
xchg
or
lret
xor
inc
mov
dec
movsl
sbb
aas
aad
ficomps
sub
add
mov
or
mov
les
lret
xchg
and
mov
mov
sbb
inc
inc
mov
dec
pop
das
adc
arpl
push
dec
lods
jmp
adc
pop
mov
xchg
test
clc
insl
jp
repz
add
or
pop
addr16
outsl
or
xor
push
cli
sbb
mov
fdivrs
test
xchg
mov
lods
mov
add
pop
add
xorb
adc
sbb
xchg
mov
add
fsubs
addr16
mov
cmpsl
mov
leave
and
imul
fisubrs
push
repnz
mov
je
dec
dec
pop
and
stos
cli
cmp
jmp
outsb
rcr
lock
xchg
enter
inc
push
cmp
pop
ret
ss
xor
pop
je
iret
and
mov
xchg
sub
packuswb
jmp
pusha
jmp
push
adc
movsb
pop
inc
stc
pop
loop
mov
popf
add
or
es
xor
cmp
loop
cltd
dec
mov
mov
mov
mov
adc
pop
inc
xchg
and
push
insl
repz
jnp
dec
xchg
or
and
add
ja
inc
dec
adc
cmp
shr
popa
sub
dec
icebp
repnz
pop
das
or
jno
mov
jns
dec
mov
stc
orl
or
hlt
mov
push
adc
xchg
mov
inc
sub
popf
cmp
imul
popf
mov
jg
stos
adc
xor
std
pop
sub
wrmsr
adc
xor
mov
push
dec
fbld
sbb
in
int3
in
in
pusha
mov
adc
dec
fdivs
arpl
jg
pop
outsl
and
cmp
push
fisubl
cmp
into
dec
inc
les
jg
jge
outsl
push
xchg
ret
push
or
push
in
inc
jno
push
push
pop
std
sub
xor
adc
test
jae
sbb
pop
dec
mov
push
rorb
icebp
loopew
cmp
sub
adc
pop
sbb
sub
ret
pop
cmpl
scas
jo
dec
mov
call
sub
sbb
dec
inc
lret
cmp
xor
jp
mov
aam
in
mov
loope
sub
out
daa
inc
mov
cmpb
and
test
lea
xchg
scas
das
pop
fisttps
mov
dec
mov
fistpll
mov
inc
es
jb
and
push
sub
mulb
xchg
jl
ficoml
push
stos
pop
mov
dec
xor
frstor
push
xchg
out
out
push
mov
stc
loop
repz
sub
add
or
pop
cld
add
repz
cld
cwtl
jnp
sbb
jnp
lds
sbb
pop
dec
imul
dec
fmull
jno
push
mov
fistps
into
cmpsb
pusha
cs
ror
bound
mov
nop
sbb
push
or
or
pop
cmp
cs
adc
jbe
push
icebp
mov
icebp
fsubrl
lret
pop
dec
sbb
xchg
or
pop
imul
sbb
sbbb
add
or
mov
dec
mov
mov
sbb
scas
test
call
sub
imul
pop
push
sahf
mov
jge
adc
cmpsb
cwtl
cmp
mov
cs
push
jmp
xchg
bound
push
ret
sub
lcall
mov
lahf
mov
fs
fsubl
mulb
xchg
int3
outsl
mov
jmp
imul
mov
pop
xchg
fs
das
sahf
or
push
xchg
pop
xor
icebp
jg
data16
sub
inc
inc
push
stos
stos
mov
dec
pop
sbb
repz
scas
jp
push
push
scas
sub
push
jnp
insb
jo
cmp
test
add
cmc
rcll
fstpl
cmp
mov
cmp
aad
mov
jg
cmp
outsl
lahf
jge
xor
jns
fnstenv
mov
add
pop
je
xor
xchg
fs
add
inc
push
fwait
inc
pushf
mov
dec
sarb
add
jno
push
test
and
nop
push
push
xchg
mov
std
dec
inc
pop
popf
sbb
mov
test
mov
sub
mov
test
imul
mov
dec
or
lcall
ficompl
and
jae
cmp
mov
rolb
xor
push
int
aad
popa
sbb
dec
scas
or
xchg
in
pop
push
xor
repz
xchg
mov
push
mov
fnstcw
push
pop
jns
in
in
cs
sbb
insl
test
add
std
rcll
divb
cmp
pop
lods
dec
and
test
fst
jmp
dec
test
hlt
mov
repnz
adc
das
ss
pop
sbb
inc
aaa
jmp
mov
jno
cld
xor
xor
push
push
push
inc
jmp
mov
loop
cmp
std
pop
bound
shl
add
jmp
push
push
pop
aaa
insb
pop
icebp
shl
xchg
inc
clc
push
dec
adc
jg
int
push
stos
cwtl
jle
addr16
loope
push
push
cld
jae
or
fisubrs
xchg
mov
arpl
cmp
xchg
pop
rcll
stc
ret
leave
test
adc
pop
xchg
out
movsb
dec
add
adc
daa
lea
out
push
mov
lods
push
popf
repz
xor
push
xchg
jl
xlat
mov
enter
push
dec
jne
fnstsw
leave
adc
adc
sbb
cmp
fistpl
ja
data16
pop
pop
repnz
adc
cmc
popf
repnz
sbb
sub
jne
and
cmp
push
scas
push
call
adc
sbb
and
sub
mov
inc
push
add
mov
sub
dec
jns
imul
and
cmpsb
loope
mov
and
insb
ret
inc
mov
adc
add
aaa
cmp
mov
sub
ds
jecxz
dec
inc
and
test
lock
push
sarl
dec
xchg
adc
iret
pop
mov
mov
push
insl
jge
jge
js
xor
outsl
and
mov
mov
cmp
or
das
sub
call
fadds
push
and
dec
push
push
dec
jb
mov
jle
cmp
dec
bound
jbe
adc
fmul
es
mov
pusha
push
addr16
jmp
push
sbb
jge
loopne
cmc
adc
leave
mov
int3
xchg
loop
loope
mov
cmp
frstor
mov
push
adc
cmp
test
mov
and
fsubl
pop
rcll
jnp
jmp
fiadds
int
cltd
mov
sub
ja
sub
mov
movsb
lock
movsl
push
shll
cmp
pop
aam
subl
dec
rcrl
mov
sbb
mov
out
dec
pusha
xchg
loopne
cmp
rcrl
icebp
mov
js
ja
ja
jae
xor
push
aam
mov
and
test
fists
rorl
loop
in
jae
lods
dec
iret
xchg
xor
data16
out
data16
in
stos
nop
in
sub
bound
and
sbb
dec
cmp
xchg
loope
out
sub
jge
push
ret
imul
mov
icebp
fisubrs
lret
int3
cli
pop
jmp
fsubs
jns,pt
imul
jecxz
lahf
js
lret
cmc
ret
fwait
into
jns
mov
cmp
ret
cmp
fldl
xor
lcall
jle
sub
icebp
xlat
sbb
clc
out
mov
push
das
dec
aad
rorl
inc
imul
add
mov
dec
das
fstp
pusha
mov
jbe
fnstsw
popf
inc
je
movsl
push
jp
rcrb
call
jecxz
cmp
inc
std
jno
sub
jae
fs
xor
cmp
mov
push
rol
and
and
pop
test
sbb
xchg
in
cmp
adc
into
out
pop
jb
add
ja
pop
mov
test
in
jp
xchg
pop
cltd
mov
adc
std
xchg
aaa
jne
aam
adc
adc
push
inc
test
out
out
push
xchg
les
jnp
andl
loope
or
sysexit
in
dec
pop
inc
jecxz
inc
and
adc
imul
mov
xchg
xchg
dec
mov
popa
cld
pop
add
xchg
adc
sub
mov
pop
and
xor
or
ja
mov
popa
cmp
fstpl
adc
subb
nop
shrl
gs
jbe
nop
xor
and
enter
xchg
notb
or
pop
pushf
mov
dec
daa
push
pop
popa
jmp
pop
jle
in
rclb
test
shr
sub
iret
push
or
daa
add
push
sbb
icebp
cmp
push
call
mov
and
and
rcll
sub
adc
cmp
cmp
mov
add
in
push
jne
ljmp
test
and
jmp
lret
push
lret
cmpsl
push
aad
fdivrl
xchg
jp
cmp
popf
xor
dec
cmp
pop
cmp
mull
lret
mov
sbb
fnstcw
jae
adcl
push
add
fistpll
imull
and
imul
cmp
jo
jge
adc
shl
or
sub
mov
jo
cwtl
faddl
inc
and
popa
dec
inc
cmp
subb
daa
sub
test
xchg
jae
sub
pop
fistl
aaa
lds
push
mov
jne
push
rorb
dec
push
push
add
arpl
insb
dec
shlb
ja
daa
aaa
add
and
mov
insb
mov
mov
les
inc
rcrb
xchg
mov
bound
ljmp
cmc
test
lock
or
mov
push
lock
dec
dec
adc
test
loop
mov
sbb
mov
push
les
enter
cmpl
jmp
pop
fcompl
in
mov
inc
push
jecxz
icebp
cmpsl
loop
dec
mov
loope
popf
mov
ja
popa
add
sti
pop
stos
pop
jmp
xlat
lea
scas
mov
fdivrl
punpckhdq
lahf
dec
or
imul
mov
jbe,pt
imul
mov
movsb
cltd
xor
ret
test
add
adc
jmp
xchg
inc
fisubrs
daa
inc
pop
ret
adc
lcall
or
adc
popa
shll
dec
xchg
inc
cmpsb
cwtl
imul
dec
sahf
dec
mov
jno
xchg
jo
xchg
mov
stos
lret
scas
ljmp
aas
out
adc
mov
xchg
mov
inc
pop
test
xchg
mov
dec
xor
cmp
mov
cltd
mov
movsl
cmpb
jle
cs
movsl
popf
xchg
mov
lods
test
sub
jb
push
mov
stc
xchg
dec
cwtl
jnp
sub
fisubrs
sbb
scas
and
sahf
mov
loopne
jl
aad
cli
jno
fdiv
mov
into
mov
push
add
out
movsl
jne
sbb
xor
sub
repz
push
rorl
rcl
or
mov
or
aaa
aas
add
cmpl
dec
add
push
mov
orb
and
dec
jg
jp
dec
out
call
sub
std
icebp
mov
jle
adc
push
popa
xor
add
sbb
add
js
ret
loop
daa
add
and
pop
xchg
adc
imul
loop
push
setns
insb
loope
sarb
cld
outsl
or
loope
add
mov
push
in
xlat
jno
pop
jb
inc
pusha
or
mov
fs
jbe
xor
and
xchg
adcb
loope
inc
adc
mov
add
xchg
pop
aas
mov
or
in
xor
jo
repnz
push
adc
jb
sbb
decl
xchg
aam
dec
fisttps
push
in
mov
xchg
mov
sar
xor
inc
lea
push
jae
cs
shll
in
mov
sub
popl
pop
mov
xor
out
mov
push
mov
or
repz
jbe
inc
fisttpl
xor
push
and
mov
mov
add
and
das
movsl
daa
xchg
and
fucom
pusha
dec
fmull
xchg
jp
rolb
loope
jo
pop
and
add
lock
subl
cs
mov
js
pushf
mov
and
adc
imul
dec
outsb
lcall
jecxz
loopne
push
cmp
cmp
mov
enter
decl
pop
shrl
les
xchg
je
int3
inc
inc
test
aad
and
outsb
fmull
daa
ss
cs
mov
mov
dec
cli
mov
pusha
dec
test
cmp
inc
xor
sbb
xchg
pop
cmp
stos
cmp
dec
mov
xor
test
stc
ss
movb
jl
imul
or
in
js
adcl
faddl
xor
and
fucom
or
jg
lret
mov
aaa
xor
mov
xchg
jae
test
push
mov
sbb
icebp
push
push
dec
sti
push
pop
adcb
sub
xchg
mov
dec
jmp
sub
aam
fstpt
rcll
cmp
iret
sub
sbb
movsb
loopne
rcl
cmpsb
or
push
push
sbb
mov
fsts
sub
and
jp
int3
pop
adc
cmc
xchg
outsb
test
jmp
in
fdiv
and
or
loop
sub
outsb
jecxz
or
adc
xor
and
dec
dec
and
sti
fbld
shrb
lret
shrb
add
mov
mov
inc
dec
sub
adc
mov
push
lret
and
mov
adc
adc
inc
push
ljmp
xchg
adc
cmp
out
loop
xchg
xor
adc
pop
in
shr
inc
cmp
push
call
mov
scas
int3
jb
imul
shlb
sub
or
arpl
sub
dec
sub
in
fsubl
int
inc
xlat
daa
out
scas
add
mov
pop
icebp
mov
push
xor
fisttpl
repnz
pop
aas
mov
cs
dec
push
jnp
pop
inc
rcrl
xor
clc
mov
mov
mov
cwtl
daa
mov
sbb
lock
mov
loop
or
adcl
jbe
inc
mov
repnz
shrl
adc
call
les
imul
nop
inc
xchg
std
mov
ljmp
cmp
mov
rcrl
loope
pop
or
sbb
xchg
mov
int
clc
fwait
jp
xor
add
nop
jno
xchg
in
in
stos
aad
jecxz
nop
test
nop
les
pusha
pop
ret
cmp
sbb
sarl
lahf
in
inc
out
xor
bnd
sbb
sbb
not
cmpsb
inc
in
pop
fstpt
les
cmc
out
xchg
cs
cmp
je
pop
pop
loop
jl
lcall
or
mov
or
outsb
mov
mov
andl
jmp
and
xchg
inc
pop
add
adc
lret
and
mov
cmp
pop
and
test
lret
jecxz
lcall
ret
pushf
popf
sub
mov
cmp
movsl
and
xchg
inc
movsb
cmp
aam
adcb
and
xchg
movsb
mov
movsb
add
daa
mov
mov
cwtl
add
pop
pop
arpl
push
push
fsubl
arpl
data16
movsb
cli
jne
xchg
mov
imul
nop
pushf
mov
shll
xlat
jge
insl
pop
scas
dec
jno
iret
cmpsb
mov
add
fldl
cmpsl
stos
add
imul
into
or
repnz
lds
push
and
push
cmp
test
lahf
fld
inc
add
jmp
mov
adcl
pop
les
fnsave
jno
and
sbb
test
iret
jmp
out
pop
cmc
dec
in
sub
loopne
rcr
outsl
cmpsl
mov
jg
inc
dec
notl
clc
mov
inc
outsl
push
cmp
lahf
adc
xchg
fistps
neg
adc
nop
inc
out
cmc
mov
mov
fistpl
lock
push
adc
xchg
cld
out
out
push
ja
fcomi
xor
test
in
lret
jg
imul
loope
pop
test
push
loope
xchg
cmp
fdivl
mov
icebp
mov
loop
or
fwait
jns
jmp
sbb
xchg
mov
lahf
add
lahf
ja
cmp
sti
negb
imul
inc
sbbb
jge
es
pusha
push
enter
adc
loopne
sbb
pop
ds
addr16
push
sarl
movsb
mov
xchg
adc
bound
stos
lock
push
fldenv
stos
imul
aas
in
or
lahf
imul
fwait
sub
mov
sahf
push
ja
shrl
test
sbb
rcl
lods
add
sbb
das
movsb
sahf
and
cs
and
je
cmp
int
cmp
and
fldcw
sbb
iret
add
dec
lret
or
jno
int3
ret
inc
push
popf
push
aad
jo
subl
shll
or
cmpsl
outsl
sbb
inc
dec
dec
test
push
adc
test
xor
movsl
xlat
cmp
rorl
xchg
mov
push
aad
out
sub
fmul
out
push
or
sub
push
jo
insl
pop
enter
dec
push
rorl
arpl
loopne
mov
pop
enter
fnsetpm(287
jp
xchg
orb
popf
or
or
imul
int3
mov
dec
lods
push
cltd
in
cs
mov
pop
push
lcall
in
pop
adc
dec
dec
or
outsb
cmp
mov
pop
add
and
hlt
push
xchg
cmpsb
mov
sub
mov
mov
mov
or
add
pushf
popa
cs
pop
jmp
mov
les
movsb
lods
fdivrs
inc
mov
push
lods
call
jmp
sub
mov
out
lock
and
mov
add
dec
push
int
sub
and
lret
jge
dec
out
dec
outsl
cmp
inc
test
bound
mov
nop
lahf
jnp
xlat
dec
or
cli
push
mov
shl
negl
lds
mov
mov
dec
cli
sti
push
out
add
ficomps
pop
mov
inc
shll
mov
fildll
imul
or
lahf
std
xchg
fs
mov
xor
cld
lds
xchg
fmul
pop
cmpsl
lcall
testb
and
or
pop
dec
ret
dec
adc
add
cli
rorb
aaa
push
in
sbb
cmp
sahf
sbb
sub
fiadds
inc
push
pop
leave
add
inc
sbb
popa
arpl
adc
fwait
dec
jg
cmp
mov
call
repnz
inc
movsl
iret
mov
jne
jle
cmpsb
jle
jp
lock
and
sub
sub
lcall
add
jbe
xchg
in
inc
mov
lret
pop
incl
cmp
jge
xor
in
mov
jnp
sbb
sub
or
out
xchg
inc
mov
scas
or
imul
out
xchg
xchg
inc
fdivr
xlat
cmp
inc
jnp
cmc
cltd
repz
lds
shlb
mov
je
add
cmpps
sbb
or
push
mov
leave
ret
stos
mov
and
cmc
dec
sbb
mov
mov
fs
pop
xchg
sbbl
and
sahf
xor
loopne
hlt
and
and
mov
cmp
cmc
jmp
xor
cmp
andl
mov
ret
into
pop
shrl
xor
aam
pop
xor
xchg
cs
clc
repz
sbb
xor
lret
movsb
adc
mov
lret
xor
bound
sbb
and
sbb
jns
or
mov
jns
repz
outsl
mov
and
lret
sub
shll
push
push
imul
dec
stos
insb
push
cld
test
jns
xor
jecxz
sub
cmc
lahf
inc
dec
imul
push
pop
out
lcall
push
push
in
sub
clc
shll
je
mov
mov
js
or
push
pop
and
inc
mov
js
fdivrs
pushf
fmuls
sti
xchg
cld
stos
in
repnz
mov
ja
push
call
div
popa
sarb
aad
fcoml
sbb
cmp
xchg
adc
sahf
dec
fucomi
shl
out
decl
out
pop
sub
mov
aad
push
mov
mov
xchg
leave
mov
rcr
fldenv
push
stc
push
add
daa
push
into
cmc
adc
xor
push
jge
mov
xor
syscall
dec
jno
ss
mov
ja
mov
mov
mov
mul
xor
rolb
mov
push
jns
dec
mov
mov
mov
out
outsb
test
jbe
or
dec
hlt
pop
lret
fistpll
in
inc
les
xor
fstpl
cmc
lods
aaa
ds
cwtl
push
test
push
xor
aam
mov
ss
inc
das
cmp
icebp
jge
les
inc
sbb
mov
aas
inc
fwait
pop
mov
mov
jmp
pop
cwtl
loop
sbbl
adc
add
iret
notb
and
loopne
subb
add
shll
or
mov
lds
mov
inc
jle
out
and
shlb
pop
int3
mov
into
dec
push
jle
mov
es
adc
andb
jl
filds
add
push
aad
mov
xchg
arpl
or
sub
cmp
and
xlat
mov
mov
xchg
mov
jge
sarb
pop
sbb
shrl
mov
cwtl
push
sbb
in
xlat
aad
push
out
iret
mov
aaa
push
jecxz
sub
push
movsl
mov
jecxz
jp
gs
sbbb
ljmp
sbb
cmp
fisubs
mov
mov
xchg
mov
xchg
push
mov
xchg
cmp
push
rolb
mov
cli
sbb
fcmovnu
cmp
lret
push
movsb
sbb
cmc
and
xlat
lret
xchg
ds
add
jg
dec
adcb
push
sub
stc
fildl
jno
clc
addl
push
mov
xor
dec
xchg
inc
in
cmp
lods
mov
and
lcall
fcomps
in
jmp
mov
popf
pop
incl
aaa
inc
loope
cs
sub
jp
inc
fucomp
adc
add
push
dec
scas
push
cmp
leave
add
shrl
pop
mov
xor
mov
fmull
push
push
xor
arpl
mov
xchg
mov
inc
out
sbb
imulb
arpl
dec
mov
mov
mov
pop
nop
icebp
push
sbb
das
ret
xchg
pop
add
loope
jmp
fstpt
jno
clc
icebp
jmp
cltd
std
jg
jb
xchg
scas
in
insl
lea
mov
push
add
mov
pop
or
or
sbb
push
sbb
dec
cmpsb
lods
cltd
pop
movsb
inc
mov
lret
cmpsb
cld
sbb
sbb
pop
mov
mov
lcall
push
sbb
ss
push
and
push
mov
adc
and
xchg
data16
add
aad
xchg
repz
mov
inc
mov
push
cs
fnstsw
jmp
in
data16
imul
stc
dec
cld
outsb
ljmp
cmpsl
and
sahf
and
xor
mov
jbe
jns
sub
repz
mov
popa
pop
ljmp
rorl
mov
shll
or
das
call
jae
push
lds
shrl
xor
fcmovnbe
jmp
loope
clc
sub
rcr
call
inc
sbbb
fnstcw
out
mov
cli
cmp
shlb
xor
cmp
dec
rclb
js
sbb
jmp
push
mov
adc
cs
fwait
jmp
inc
jno
mov
ss
test
leave
push
add
ja
dec
adc
jb
sub
add
out
sub
and
je
adc
mov
daa
fsts
cmp
and
stc
neg
or
out
pop
je
mov
mov
adc
mov
ss
sbb
jle
inc
cli
xlat
mov
push
testl
arpl
test
jmp
mov
jmp
push
jg
sbb
inc
xorl
outsl
xchg
xchg
dec
das
mov
loop
push
in
adc
pop
imul
faddl
mov
inc
cltd
cmp
sbbb
pop
dec
pop
in
loop
incl
les
cmp
mov
mov
jb
and
cld
xor
cmpsl
stc
xchg
mov
dec
pop
sbb
cmpsb
mov
dec
popa
mov
lds
pop
push
out
dec
bound
fldl
fstl
xor
inc
imul
sub
rorb
mov
cli
push
fmuls
sub
xchg
jae
outsb
jmp
sahf
int
shl
xor
cmp
xlat
cmpsl
cli
shr
sub
dec
xor
jecxz
flds
sub
fwait
cmp
mov
jo
sbb
xchg
push
leave
ret
add
inc
push
and
pop
pop
mov
hlt
push
xchg
sub
in
in
aad
aam
lcall
dec
outsl
cli
loope
sub
pop
outsl
inc
inc
inc
mov
sbb
pop
mov
and
cld
fidivs
cli
repnz
scas
ds
xchg
jns
jmp
inc
push
imul
adc
outsl
pop
cmp
push
movsb
stc
repnz
stos
xchg
inc
adc
push
mov
or
and
dec
xor
stos
sub
xor
xor
or
sub
dec
xor
xor
mov
xchg
test
xchg
jecxz
or
popa
mov
movsl
loope
sbb
sbb
pop
pusha
mov
or
hlt
dec
cltd
mov
das
inc
or
pop
pop
lret
mov
mov
push
mov
and
xchg
jo
outsl
sub
les
mov
mov
xor
test
or
hlt
dec
cs
out
dec
push
or
stc
imul
inc
sbb
out
pop
mov
mov
mov
int
mov
adc
repnz
add
xor
andl
cmp
or
scas
dec
mov
push
adc
jnp
adc
das
jb
mov
mov
lds
xor
lea
es
adc
incb
es
mov
cmc
imul
xchg
dec
xchg
mov
sahf
lcall
jno
mov
push
cmp
sbb
lds
scas
adc
dec
stc
mov
out
lahf
fisubrl
mov
fsts
adc
xchg
sub
cmpsb
mov
dec
jb
pop
mov
xchg
cmpsb
mov
pusha
idivl
aaa
jae
or
nop
push
dec
xorb
jo
jne
jecxz
mov
dec
pop
cmp
mov
inc
mov
pop
sbb
in
or
push
shll
test
idivl
xlat
and
lds
dec
add
inc
pushf
push
mov
andl
dec
aam
and
xchg
pop
add
xor
inc
insl
cwtl
pushf
cs
and
adc
xor
mov
xchg
fcomp
popa
push
pop
xor
js
int
adc
stc
lods
mov
lds
daa
out
push
cmpsb
mov
loop
ss
adc
xchg
test
fadds
fxch
loopne
repnz
dec
enter
sub
adc
popf
mov
cmc
fisubrl
push
xchg
jb
dec
loope
xor
mov
lahf
inc
adc
sub
shrb
sub
insb
xchg
pop
cmc
aaa
dec
bound
xchg
pop
cli
stos
btc
xchg
stos
and
cmp
lcall
jne
bound
sbb
arpl
outsb
shll
adc
push
test
xor
xor
ljmp
call
rcrb
jnp
push
js
pusha
loop
int
shl
insb
sub
push
sbb
pop
iret
idivl
xor
xchg
cmp
sub
pop
mov
add
inc
lahf
cmpsb
pop
sti
adc
and
out
test
lret
push
inc
sbb
cmp
call
jl
les
xor
mov
subl
into
std
sbb
call
int3
push
gs
fisubs
inc
test
cmpsb
ret
push
out
mov
mov
or
mov
int3
push
adcb
std
push
popf
push
je
push
andl
inc
jo
mov
mov
xchg
adc
dec
shrb
add
stos
cmp
jle
popf
xor
mov
cld
sub
push
pop
adc
adc
lds
insl
cli
test
xor
arpl
retw
push
aas
push
jae
popa
adc
movsb
leave
add
popa
popa
inc
into
adcl
pop
jnp
xrelease
mov
jge
sbb
mov
and
push
or
mov
lret
jb
lods
add
daa
sbb
push
jg
adc
fiadds
or
mov
dec
push
icebp
bound
fdivs
mov
dec
scas
cld
sbbl
mov
insl
push
loopne
sbb
sbb
push
das
rcll
push
out
out
popf
mov
out
aaa
mov
adc
adc
loop
into
icebp
clc
xchg
jmp
loop
lsl
mov
jle
call
fcmovne
int
pop
call
cmpsl
sub
adcl
pop
ljmp
push
inc
pop
xchg
lret
stos
loop
nop
xor
mov
xchg
pop
sub
shll
push
sub
cmpsl
scas
and
and
nop
clc
aaa
fcoml
lods
das
or
xor
scas
sbb
pop
mov
push
mov
pop
les
mov
aaa
cmc
mov
mov
iret
addr16
aam
adc
pop
ss
dec
mov
repz
cli
mov
jbe
lea
mov
push
mov
es
sub
cmp
out
out
or
out
adcb
mov
add
not
jle
or
dec
xor
push
push
sbb
cmp
mov
cli
cmp
push
shll
popl
pop
jmp
loope
push
sbb
push
scas
cltd
daa
push
sub
xchg
mov
test
cmpl
sub
mov
test
adc
test
pushf
or
sbb
dec
movsb
leave
lret
push
cld
sub
xor
ret
mov
orb
dec
ret
xor
dec
jmp
mov
scas
add
popf
popf
cld
out
xchg
dec
xor
rcrl
sub
and
js
inc
push
xor
push
and
jo,pt
cltd
mov
and
lahf
cltd
fsubl
sub
shl
dec
mov
fdivrl
outsl
adc
sbb
and
decl
lds
je
repz
sub
mov
jmp
and
fwait
testl
insb
fdivs
das
mov
pop
movsb
int3
push
repz
mov
jae
add
xchg
decb
fiadds
lcall
out
ficomps
add
pop
pop
inc
pop
push
mov
mov
jecxz,pt
nop
pop
nop
decb
push
loop
in
fadd
or
aad
sbb
aad
jge
cmp
xchg
imul
push
add
add
jle
pop
std
xchg
loopne
mov
or
addb
or
stos
fistpll
adc
sub
mov
fstpt
shll
dec
mov
cs
adc
xor
dec
cmpsb
aad
lods
mov
lock
or
push
cwtl
dec
cmc
icebp
sub
lea
sub
jbe
mov
pop
shlb
or
and
mov
in
loope
outsl
js
dec
jae
sub
fnstenv
pop
mov
cmpsb
xchg
cmp
lds
rolb
pop
adc
cwtl
repnz
jmp
outsb
clc
add
jecxz
mov
loope
xchg
mov
in
dec
pop
mov
jmp
jmp
mov
push
sub
push
js
inc
mov
pop
pop
test
mov
aad
in
ljmp
xchg
push
cmp
jnp
inc
push
stc
jmp
mov
xchg
repnz
test
cmpsl
aaa
aad
cli
xor
cmp
js
fbstp
cwtl
or
stos
popa
ja
sbb
xor
pop
add
js
mov
mov
xchg
outsl
xchg
rorl
or
js
sbb
cli
pop
fdivl
mov
mov
outsl
xchg
and
lcall
sbb
or
add
cwtl
lahf
fs
pop
jbe
shll
jg
js
fdivrs
add
fsubrs
dec
inc
xor
in
sbb
addr16
hlt
xor
ss
syscall
sti
stc
push
dec
in
push
sbb
cwtl
hlt
icebp
inc
cmp
aad
push
dec
dec
cltd
shlb
mov
push
testb
shl
push
insb
jb,pn
ffreep
xor
xchg
enter
push
cmp
mov
pop
iret
sbb
ss
lea
cmp
fwait
xlat
mov
test
daa
mov
loop
inc
stc
ja
cmc
dec
mov
movsb
in
mov
in
loop
push
sbb
mov
push
ret
fs
xchg
xchg
loop
sub
pop
stos
mov
lcall
cmp
stos
and
cmpsb
aad
popf
and
lahf
movb
cmp
inc
sbb
movsb
lods
negb
in
or
cmp
or
inc
into
or
out
movsb
fstpt
pop
sub
add
out
adc
add
adc
pop
inc
aas
dec
mov
adc
mov
ja
cltd
clc
cli
push
sbb
ljmp
lcall
cli
jp
lods
in
scas
mov
mov
imul
mov
push
imul
cpuid
push
or
xor
mov
pop
test
pop
pop
mov
push
mov
scas
lcall
int
xchg
jmp
cld
mov
sub
adc
sub
mov
jo
cmpsb
stos
mov
push
in
mov
ficompl
and
in
inc
dec
aam
or
xor
jle
lock
mov
ffreep
add
xor
dec
fildll
int3
dec
xchg
sub
push
lret
mov
ss
lods
and
fs
xchg
add
ss
call
mov
jmp
jb
and
inc
test
scas
iret
in
mov
popf
lock
lock
test
fucompp
test
sbb
mov
and
outsb
xchg
mov
movsb
andl
loop
pop
push
xor
mov
xchg
or
jae
pop
cmp
sbb
lret
push
test
test
ds
sbb
xor
mov
jbe
fadds
jl
out
push
shrl
mov
out
or
mov
iret
out
pop
pop
sub
xchg
or
icebp
cmp
imul
pusha
push
cld
ljmp
pop
jp
jg
adc
mov
imul
push
pop
clc
inc
xchg
sub
test
stc
popf
scas
lods
cmp
cmc
out
adc
cmp
and
and
enter
push
push
js
out
or
shll
ret
mov
sub
into
repz
int
leave
scas
jl
and
popf
pop
sbb
push
in
hlt
xlat
icebp
push
iret
xchg
xchg
adc
jp
mov
pop
daa
adcl
pop
fwait
adc
sbb
pop
or
adc
xlat
dec
ja
sbb
add
test
rcrl
shl
sub
in
dec
pop
jge
js
scas
jle
and
xor
lahf
outsb
mov
int3
inc
insl
aas
xlat
ja
fdivs
pop
and
fdivs
dec
in
jmp
loop
pushf
fsubs
outsb
clc
cwtl
movsl
out
adc
xor
push
mov
jg
loop
das
sub
fildl
popf
add
jae
int3
xchg
and
mov
addr16
outsl
dec
mov
xchg
fmulp
addr16
movsl
push
sbb
push
sbb
or
pop
xchg
inc
dec
mov
cmp
into
sub
inc
add
in
les
dec
xor
into
xchg
dec
in
in
jl
ret
arpl
cld
push
int3
push
mov
push
movsl
sub
xchg
inc
popa
adc
icebp
lcall
fildll
push
pop
std
loop
push
outsb
sbb
fs
xchg
roll
xchg
xchg
mov
push
add
cli
aas
sbb
sbb
push
nop
and
stos
mov
jge
xorb
cwtl
push
jg
and
mov
pusha
jbe
fwait
and
cwtl
xchg
test
pop
ficompl
mov
ljmp
js
cmc
jl
xchg
sbb
jne
lret
jl
sbb
mov
stc
adc
sbb
movsb
rorb
pop
out
sti
and
imul
shl
iret
cmp
mov
xchg
rol
bound
push
fwait
xchg
xlat
xchg
std
or
mov
insb
scas
xor
bound
arpl
add
cli
cmc
in
xor
stos
adc
or
int
xchg
dec
cmp
push
sub
je
dec
adc
addb
push
fildl
inc
lods
and
mov
iret
fldl
push
cli
mull
jo
pop
inc
je
jno
push
arpl
inc
mov
mov
pop
test
nop
movsb
sub
shrl
sub
test
push
pop
cs
and
fisttps
fisubrs
add
pop
ret
jnp
jns
or
cmp
cltd
jmp
sti
jmp
je
cmc
lea
and
xor
jge
push
jo
cmp
mov
add
and
scas
movsb
call
add
mulb
aad
sub
stc
xchg
imul
fistpll
mov
mov
or
pop
insl
xchg
or
push
push
std
sbb
pop
dec
lds
jnp
gs
fsubrl
push
jmp
or
cmpsb
cmp
js
dec
lahf
jno
lcall
outsl
dec
and
shr
dec
push
cwtl
cmp
cmp
lds
mov
add
dec
cmp
inc
cmpl
cmpsb
xchg
cli
call
pushf
jg
das
jmp
popf
popl
cltd
call
add
dec
sub
repz
or
scas
ficoml
pop
pop
lahf
les
pop
mov
push
pop
or
fdivs
xchg
push
insl
lock
dec
dec
mov
stos
push
sbb
xchg
les
cmp
hlt
mov
sbb
mov
rol
add
mov
jns
and
dec
push
dec
add
adc
jmp
insb
lcall
ljmp
iret
push
leave
pop
or
push
push
nop
cld
add
clc
xchg
scas
je
or
cmp
adc
mov
loopne
cli
inc
cmp
fisubs
dec
xorb
aaa
nop
scas
mov
rcrl
shrl
cli
jg
rep
ret
ja
cmpsb
or
cmp
sub
dec
xchg
inc
or
xor
adc
fists
xor
sti
jne
loop
cmpb
cld
decl
pop
jns
stos
enter
push
popa
sbb
bound
fists
xchg
mov
popf
pop
jmp
jae
in
and
or
addr16
dec
push
xor
andb
das
sbb
xchg
cmp
inc
rcr
ficompl
jne
inc
pop
outsb
dec
cmp
dec
push
test
out
push
or
mov
mov
cmpsl
add
inc
fs
stc
jb
adc
into
sahf
mov
cmp
jbe
stos
xchg
into
icebp
and
adc
xchg
shrl
daa
xor
fs
ds
scas
imul
jno
cltd
icebp
adc
push
cld
or
fidivrs
or
rorb
enter
cwtl
dec
mov
les
cmp
ljmp
fisubl
arpl
xchg
inc
icebp
pusha
jge
adc
add
out
stos
testb
and
mov
add
xorb
sbb
dec
sbb
fcoml
nop
fucom
inc
push
gs
mov
inc
test
js
subl
scas
xor
lods
jae
pop
push
cmp
mov
insl
shlb
aam
leave
cld
pop
sbb
in
shrl
pop
cwtl
mov
inc
aaa
fidivrl
push
aaa
out
mov
in
sbb
sbb
jecxz
fucomip
cmc
jg
mov
add
xchg
int3
mov
adc
and
out
lret
movl
in
aam
sub
dec
pop
mov
insb
rcl
mov
add
sbb
push
repz
jne
push
mov
sub
mov
ljmp
or
mov
dec
into
and
sbb
dec
pop
push
lock
xchg
dec
xor
push
cmpsl
fs
fsubp
stos
out
imul
add
inc
xor
push
je
lods
imul
jle
mov
push
rcl
loop
pushf
iret
in
leave
mov
mov
mov
adc
jle
and
mov
mov
mov
push
pusha
jbe
pop
xchg
scas
fcmovne
popf
out
sub
fists
arpl
das
aas
xchg
ds
out
mov
lock
xchg
pop
scas
mov
cwtl
jecxz
lea
and
mov
or
jnp
dec
pushl
fdivrs
ss
lret
cmc
icebp
leave
inc
inc
mov
inc
mov
mov
sub
jns
or
sub
push
pusha
cmp
mov
pop
xchg
aad
sbb
imul
inc
aas
aaa
movsb
jnp
iret
les
dec
daa
lahf
into
inc
popa
lahf
imul
push
jp
lea
out
std
sbb
nop
gs
mov
in
scas
jno
push
scas
jo
push
xor
jnp
mov
jnp
shl
dec
aaa
lods
std
mov
or
jl
clc
fwait
rcrb
mov
dec
rcl
es
scas
push
sahf
fildl
fbstp
std
fbstp
in
fcompl
cmpsb
fidivs
mov
xchg
das
test
cli
mov
repz
inc
lock
or
xor
jbe
clc
paddw
fistps
mov
pop
gs
lret
mov
xlat
pop
push
repz
cmc
icebp
jnp
pop
dec
mov
leave
inc
pop
push
or
and
les
cmpsl
loope
lods
cmp
call
roll
mov
fldl2e
movsl
clc
mov
mov
movsl
rclb
jge
pop
dec
push
cmc
cmp
cltd
and
mov
test
and
mov
mov
popf
ficoml
popf
cmp
inc
not
jne
sub
or
xchg
sbb
lret
xchg
add
cmp
jae
scas
xchg
inc
loope
ljmp
call
enter
push
inc
and
jb
test
call
scas
mov
cmpsb
shrb
ss
xchg
inc
sbbb
pop
or
inc
xchg
out
js
outsl
sahf
lock
fstpt
mov
mov
dec
mov
pushf
push
cmp
ret
movsl
sub
mov
shrl
cmp
adc
push
mov
movsb
add
pop
xor
xchg
sbb
shlb
loope
or
icebp
mov
cli
inc
outsl
and
mov
arpl
mov
cmp
sti
or
xor
mov
in
fcoml
sbb
and
out
call
and
mov
mov
pop
push
gs
push
xor
into
mov
je
sub
mov
adc
stc
xor
pop
aas
push
pop
mov
dec
lahf
and
push
repz
cli
enter
push
fstpt
mov
int3
icebp
mov
and
mov
fsts
push
xor
pop
pop
jno
outsb
sub
mov
add
mov
jp
mov
xchg
dec
mov
pop
bndldx
andl
push
movb
gs
xor
addr16
jnp
mov
iret
popf
pushf
dec
nop
mov
mov
mov
fnstcw
pop
mov
add
lods
stc
dec
dec
push
mov
pop
cmp
call
push
pop
fsubl
test
pop
test
enter
push
pusha
or
sub
xchg
push
pop
arpl
cmp
push
add
scas
hlt
es
aam
jno
stos
lods
xchg
or
sub
testb
mov
jnp
mov
inc
cmp
or
xchg
mov
cmp
sarb
mov
pop
inc
jl
push
test
adc
cmp
mov
arpl
sbb
add
lods
repz
and
jns
or
sarb
push
jp
push
mov
das
ret
les
xchg
scas
jae
lock
or
adc
push
and
jns
or
push
enter
add
js
jmp
mov
minps
adc
jne
push
xchg
std
test
cmp
repz
lcall
cltd
jns
bsr
mov
cwtl
mov
sbb
mov
xchg
jbe
jbe
push
lcall
pop
je
xchg
stos
or
jmp
gs
shrb
lret
or
stos
cwtl
mov
fimull
movsl
jae
lret
xchg
sub
push
jg
addr16
xchg
ja
jb
pop
or
or
xchg
dec
inc
xor
fisttps
subb
lret
cltd
mov
test
jbe
mov
sub
dec
ljmp
cmpsb
xor
pop
outsb
std
sbb
aaa
lea
fucomip
push
inc
pop
inc
fidivrl
push
out
addl
stc
mov
add
fucomp
lahf
adc
mov
mov
je
in
ret
add
push
test
arpl
ja
out
jbe
repz
inc
test
cwtl
popl
xchg
mov
jnp
out
fdivrs
xchg
int
sbb
mov
clc
aad
inc
mov
xchg
inc
testb
mov
popf
mov
mov
mov
imul
jg
stos
dec
loop
sahf
inc
jecxz
pusha
add
mov
mov
jnp
pop
inc
in
out
cmc
xadd
scas
mov
fwait
jp
mov
or
adc
mov
cmpsl
mov
iret
in
xor
xchg
inc
popa
mov
out
fsubrl
cld
push
or
dec
loope
ret
dec
in
inc
in
je
outsb
fidivrs
xchg
pop
aad
push
jg
or
push
clc
add
xor
sti
cwtl
mov
out
cmp
mov
and
jl
lcall
cmp
movsb
dec
inc
mov
sarb
or
adc
int3
dec
sahf
inc
lahf
pop
lods
sahf
imul
fiaddl
push
mov
cmp
xchg
xlat
mov
mov
nop
ds
adc
and
ret
nop
dec
inc
adc
mov
out
adcb
mov
mov
iret
inc
mov
push
ja
inc
das
inc
jo
cmp
adc
lds
mov
mov
xor
outsb
and
or
add
lcall
aad
cmp
lock
loope
inc
mov
and
push
sbb
push
sub
aad
add
cmp
ds
fiaddl
test
sti
dec
mov
sbb
sbb
inc
lret
lock
and
pushf
adc
mov
add
pusha
jmp
daa
lret
mov
js
bound
lret
imul
push
xor
movsl
test
sub
out
and
fwait
inc
fdivrp
les
sub
fsubs
sti
dec
adc
jae
jmp
aad
mov
lods
xchg
and
test
pop
dec
mov
xchg
nop
cmp
fucomi
imul
addr16
decb
pop
out
pop
sahf
adc
push
test
iret
cli
dec
repz
mov
jge
push
adc
dec
xor
fisubrl
mov
aam
ljmp
shl
in
fcomip
das
inc
inc
loop
dec
and
push
or
mov
out
pop
bound
loope
xchg
fadds
sbb
mov
jl
in
loop
mov
mov
jl
or
ret
stc
sub
push
ds
sub
lahf
arpl
js
je
push
dec
int3
add
push
push
popf
dec
sub
jmp
out
xchg
lret
or
mov
jge
movsl
xchg
test
pop
push
dec
dec
mov
mov
into
js
daa
jo
jle
pop
jecxz
xor
lock
loop
cmc
orl
and
std
sub
cmpsl
subl
aad
adc
add
addb
mov
cs
repnz
movsl
les
imul
and
inc
cmpsl
pop
pop
fcomps
mov
rorl
rorb
lahf
pop
jecxz
inc
sub
xchg
sub
inc
cmpsl
xlat
dec
mov
jmp
mov
jae
loopne
pop
ss
ficompl
fnstcw
xlat
fstps
xlat
jae
push
mov
jmp
shll
addl
pop
add
push
mov
sahf
int
cmp
cwtl
sbb
push
sub
lock
aas
inc
mov
mov
dec
cld
pushf
fistpll
and
add
adc
adc
cwtl
pop
cmp
lahf
xchg
sub
add
xor
jmp
jle
xchg
out
add
bound
popl
daa
loopne
dec
mov
into
lock
mov
push
pop
xchg
mov
jecxz
or
sub
cmp
insb
inc
push
popa
mov
pop
adc
aaa
sub
adc
lret
mov
popf
in
inc
add
out
push
push
dec
cmpsl
mov
mov
fildll
lahf
mov
loopne
pusha
in
inc
lock
cmpsl
out
in
aaa
mov
fcmovne
hlt
inc
sahf
in
pop
call
xchg
add
pushf
sub
cmpsb
jle
lcall
in
arpl
mov
dec
dec
fisubs
ret
pop
ffreep
or
and
xchg
adc
in
decb
mov
lds
jb
psrlq
movsb
hlt
fidivrl
xchg
clc
cmp
adc
ds
push
clc
dec
jecxz
push
push
jmp
stos
pop
push
mov
jne
xchg
inc
jns
loop
inc
scas
push
dec
test
mov
adc
mov
mov
inc
jg
jo
or
and
push
jle
or
mov
lds
pop
imul
pop
data16
cs
cmp
or
inc
adc
pop
push
ss
sbb
inc
ds
fdivr
fisttpll
jl
outsb
or
imul
shlb
faddl
out
push
push
rcrl
xor
imul
jecxz
stos
xorl
xchg
push
subl
fldenv
cltd
inc
rorb
popf
pop
in
addr16
pusha
pop
or
insb
fdivs
lret
jno
push
mov
lods
dec
dec
jae
lods
jae
cltd
scas
scas
mov
xchg
cmp
mov
sbb
dec
cld
mov
cltd
in
fadds
jns
cmp
or
in
dec
inc
pop
into
pop
scas
test
addr16
sbb
jb
dec
xor
cltd
clc
imul
clc
mov
cs
pushf
sub
or
xor
shll
scas
loopne
cmp
sbb
stos
xlat
popa
jns
adc
icebp
cld
jg
aam
cmpsl
pusha
add
sub
insb
cld
je
dec
fidivs
or
in
ds
and
or
cmp
mov
push
test
popl
das
imull
dec
enter
cmp
leave
add
cmp
popa
mov
hlt
enter
mov
pusha
popa
sub
inc
inc
je
insb
out
and
mov
mov
and
mov
sbb
sahf
cmp
and
sbb
sbb
fs
push
fisubl
fists
adc
sbb
mov
mov
add
dec
aaa
sub
daa
push
pop
mov
pop
mov
jns
mov
lret
das
cmc
fsubrl
scas
mov
sti
sbb
cmp
outsb
rcrb
jle
xor
add
test
dec
xchg
lahf
fcoms
incl
sbb
mov
xchg
iret
into
cmpsl
shl
push
xchg
dec
sahf
inc
mov
enter
xchg
jbe
sub
mov
out
outsl
xlat
jo
ljmp
add
in
js
out
out
into
sti
fmuls
fnstcw
bound
dec
cmp
sub
int
pop
pop
fnstsw
sarb
pop
popa
lret
jle
scas
dec
and
aaa
pop
lahf
js
leave
shlb
in
xor
mov
fstpt
cmpsl
mov
sub
jge
mov
popf
shll
jmp
notl
xchg
ss
or
cmpsb
or
jecxz
js
inc
jp
add
sbb
or
ss
repnz
sub
or
lret
jle
pop
icebp
and
cmp
or
cmpsl
ret
into
jmp
daa
pop
jmp
pop
enter
sbb
mov
xchg
pop
mov
enter
pop
movsb
pop
xchg
lea
repz
movsb
xchg
pop
adc
ja
mov
out
jecxz
out
mov
pusha
mov
jl
dec
or
push
mov
mov
das
adc
bound
lret
aam
je
pop
sti
int3
mov
insb
sbb
xchg
mov
enter
stos
dec
ret
repz
push
call
hlt
push
or
lret
clc
insl
ja
jmp
lret
or
mov
out
inc
add
or
cli
add
cmp
fs
adc
stc
fisubrl
mov
or
daa
ljmp
push
std
jge
xor
cmc
sub
sub
shlb
mov
int3
and
jno
sub
jge
dec
xor
lods
jge
xchg
popf
repz
xlat
roll
stc
int
cmp
jns
dec
ret
stos
pop
sbb
fsubrl
pop
in
pop
cli
xchg
mov
xchg
in
fwait
push
sbb
inc
in
jns
je
pop
pop
imul
push
lods
sub
push
ror
mov
jns
scas
stos
data16
cmp
push
sbb
idiv
cltd
jnp
movsl
mov
add
div
sub
cs
or
or
js
int3
cmp
dec
sti
mov
imul
mov
add
sbb
xchg
cmp
in
push
arpl
sbb
or
dec
mov
push
out
add
pop
mov
xor
cld
sahf
stc
int3
inc
imul
xorl
pop
cwtl
push
mov
mov
leave
mov
je
jo
cwtl
clc
shrl
lahf
push
imulb
or
pop
pop
xchg
les
pop
stos
sti
enter
jno
mov
jnp
xlat
pushf
cld
dec
push
cmp
dec
push
rorl
mov
call
xlat
mov
enter
push
in
lea
pop
fidivrs
mov
jno
inc
sub
inc
lcall
mov
test
lds
stos
mov
popf
stc
inc
mov
cmp
pop
jno
jbe
test
in
pop
fwait
repz
pusha
imul
jg
aas
xor
std
push
lahf
repz
or
xchg
pop
cmp
pushf
cltd
ss
and
dec
inc
sbb
cmp
test
stc
in
je
pushf
clc
outsl
inc
addb
jns
push
sbb
bound
das
add
push
jp
es
or
aaa
xchg
or
sbb
fst
mov
test
pop
mov
mov
jmp
xlat
cmp
mov
push
push
in
ds
imul
xor
add
not
sub
or
ja
xchg
sbbb
mov
adc
cli
inc
push
int
push
inc
test
and
lcall
xchg
stos
fnstsw
xor
add
lret
or
rclb
shl
pop
or
ret
dec
cmp
and
dec
sbb
iret
cmpsl
ret
inc
jo
add
pop
imul
mov
cmp
xor
aad
addr16
cmp
cmp
mov
dec
cmc
fdivr
mov
adc
sbb
and
mov
or
in
mulb
loope
or
push
in
je
or
sub
pop
test
mov
and
adc
and
pusha
xor
pop
loope
test
call
push
arpl
icebp
mov
xor
inc
aam
push
js
xchg
scas
fisttpl
push
aaa
jb
mov
test
icebp
jae
push
xchg
sub
xchg
or
pop
in
pop
sbb
cwtl
jl
push
mov
mov
xchg
enter
stc
out
ja
and
mov
les
sub
shll
pop
lods
fldl
sub
outsl
mov
andb
cs
pushf
inc
and
push
mov
xor
mov
shl
pop
sti
outsb
adc
adc
test
fmull
push
pop
sbb
ds
mov
mov
cmp
dec
push
inc
sbb
mov
ja
lret
xor
cmp
cld
jmp
adc
imull
jmp
lret
cmpsl
sbb
inc
sbb
mov
adcl
dec
cmp
fstpt
jle
push
cmp
lahf
jle
jle
js
mov
loopne
sti
sub
jmp
mov
fmul
insl
clc
push
lret
and
inc
sbb
or
subb
js
pop
icebp
cmp
stos
mov
adc
aad
cmpsb
and
scas
cmc
mov
mov
jnp
movsb
cmp
jno
fisttpl
idiv
mov
mov
outsb
or
and
pop
add
mov
sub
divl
cmp
shlb
or
jae
mov
imul
mov
lock
xor
sbb
fsubl
inc
out
leave
adc
aam
call
stos
cmp
mov
loop
stc
sub
repz
sub
lods
mov
mov
loop
pop
pop
inc
lds
jb
dec
xor
fmuls
aad
mov
sub
pop
mov
insb
stc
xlat
mov
mov
push
adc
test
push
rcrb
std
in
int3
adc
fbstp
rorl
mov
xor
adc
xchg
adc
push
dec
aas
sarb
jb
mov
inc
es
add
icebp
jne
stc
stc
rol
lds
out
imul
mov
stos
int3
ja
adc
test
xor
xor
push
inc
xchg
sbb
mov
bnd
sbb
dec
add
jmp
sub
jmp
fcomip
fstl
lret
mov
or
xchg
bound
repnz
dec
or
jo
inc
iret
pop
inc
lcall
test
pop
mov
ss
sub
test
sbb
xor
fcmovu
dec
dec
icebp
adc
sbb
popaw
std
fidivrs
pusha
adc
std
fstl
cmp
aas
xor
cltd
sbb
pop
or
testl
inc
gs
outsl
iret
inc
fsubr
scas
mov
insb
aaa
test
pop
fstpt
dec
adc
out
shr
mov
dec
cmp
mull
push
scas
add
jge
and
out
cmc
les
cmp
lds
scas
repz
inc
out
cmc
mov
inc
mov
movsl
pop
push
fsubl
sub
add
mov
movsl
mov
dec
adc
mov
lods
sbb
push
sub
jae
cwtl
sbb
loopne
pop
cmpsb
sbb
cmpsb
push
insl
sub
pop
jno
adc
adc
das
aad
and
insb
push
xchg
ror
pop
dec
or
rcl
inc
lret
and
push
sub
dec
cmpl
xor
stos
xor
xchg
mov
jnp
pop
mov
gs
pop
jae
mov
ja
mov
repnz
pusha
lods
movsl
faddl
cld
sti
inc
mov
pop
in
sbb
test
add
add
cld
out
imul
jp
repnz
pop
inc
cmp
outsb
pop
xchg
pop
mov
loop
mov
lret
sahf
rorl
cli
adc
fldenv
aaa
das
adc
sub
lcall
test
pop
sbb
cmp
sbb
sub
pop
movl
nop
pusha
out
rorb
cmp
andl
stos
icebp
push
mov
leave
xchg
daa
mov
cmp
xlat
jl
sub
imul
shrb
sbb
adc
pusha
add
sbb
bound
adc
adc
push
gs
cs
and
js
xor
daa
data16
dec
ss
cmp
adc
cmp
sub
aaa
movsl
lods
pop
pusha
push
fdivrs
jecxz
pop
rcr
pushf
lods
rorl
jne
xor
dec
and
mov
mov
jle
in
lahf
out
pop
test
inc
xchg
xchg
hlt
int3
and
pop
push
clc
mov
xor
jne
cmp
dec
xchg
jns
daa
mov
rorl
adc
shrb
std
ficompl
ljmp
add
imul
sbb
inc
mov
mov
lods
outsl
sbb
jge
popf
addb
outsb
sub
pop
leave
int
sahf
dec
cli
add
xchg
cmc
int3
fidivl
sub
ret
push
pop
and
pusha
fmull
fwait
out
sti
nop
mov
fcmovnb
adc
js
pusha
pop
sbb
xchg
or
sahf
adc
out
jae
xchg
adc
data16
xor
inc
pop
popf
mov
ja
icebp
pop
pop
ja
dec
fbld
sbb
fists
mov
dec
mov
or
add
mov
adc
stos
push
in
xchg
push
stc
pop
arpl
sub
mov
mov
inc
push
mov
mov
cld
sbb
xabort
jo
pop
cmp
cld
clc
inc
adc
push
test
jo
jl
sbb
xor
mov
jle
dec
fildll
test
inc
mov
ds
jno
push
add
mov
int3
push
in
stc
jne
insl
and
out
push
jno
out
ficoml
lock
std
ljmp
mov
and
cmp
daa
or
mov
stos
lods
mov
shlb
cmp
movsb
cmp
sub
mov
pop
push
jnp
lods
add
mov
pop
repz
lcall
scas
pop
pop
mov
jecxz
xchg
sub
inc
das
loope
test
cmp
pop
jecxz
outsb
decl
repz
paddd
inc
fistpll
push
push
and
repz
ss
adc
xchg
xchg
lea
inc
sbb
imul
gs
jbe
lea
call
lock
std
dec
jbe
xlat
loop
into
imul
or
movsb
push
data16
test
or
out
xchg
lcall
inc
stc
test
xchg
inc
xchg
cld
push
sub
lret
add
dec
sub
sbb
cmpsb
ret
jp
daa
and
jmp
push
popa
sub
rclb
push
enter
test
in
xor
adc
mov
test
outsl
addr16
punpckhbw
jb
jne
gs
add
rcrl
xchg
adc
es
and
addr16
fstpl
cmpsb
cmpb
fdivl
int
aam
insb
jne
xor
sub
and
push
outsb
sub
jmp
out
js
xchg
mov
or
push
sub
sahf
daa
sbb
cli
dec
fiaddl
jbe
orl
jp
push
mov
div
std
xor
mov
cmpsb
jne
insl
call
sti
adc
scas
jle
fwait
arpl
out
arpl
or
sahf
and
and
mov
xchg
pop
adc
mov
xchg
data16
iret
movsb
cmp
out
dec
jecxz
cmp
and
sub
lea
jecxz
sub
xlat
ret
adc
gs
mov
rol
push
push
and
sub
pop
push
mov
and
mov
add
mov
mov
pop
cld
jb
adc
pop
xchg
xchg
adc
mov
push
jge
scas
mov
inc
rorb
test
sahf
add
push
mov
push
pop
out
cmp
decb
xor
dec
shlb
jb
and
into
push
lret
popf
push
mov
pop
jl
xchg
cld
inc
lea
subl
adc
pop
add
loopne
hlt
in
mov
xchg
jns
inc
mov
or
xchg
pop
shrb
aas
pop
jo
lods
add
dec
pushl
sub
and
aaa
or
sahf
es
sti
pop
and
push
mull
lods
test
push
test
dec
jle
jl
mov
pop
and
sti
mov
push
add
test
jae
xchg
dec
and
ja
adc
xchg
cmpsb
cmc
sbb
in
es
fisttpll
pop
xchg
fisttpl
pop
outsl
inc
jno
std
rsm
add
mov
test
sub
bound
and
lcall
int
pusha
loope
dec
ljmp
jl
stos
xchg
incl
adc
dec
jmp
dec
cmc
or
cmp
push
lods
inc
lcall
adc
int
inc
filds
adc
test
rcrb
add
inc
test
loop
xchg
push
je
cmp
subl
xchg
fs
jne
test
jb
imul
jle
mov
jbe
out
xor
sub
in
lret
jmp
shll
loope
cwtl
lods
jmpw
divb
in
mov
pusha
fnstsw
loopne
xor
mov
mov
or
fbstp
stos
inc
loop
xor
mov
js
inc
xchg
mov
mov
mov
mov
aad
nop
or
cs
leave
xor
mov
jno
jl
mov
stc
push
mov
les
adc
pop
push
mov
xor
mov
or
iret
cmp
fistpl
mov
push
insb
aam
jne
pushf
sahf
lods
sub
dec
cs
leave
fisttpl
add
or
out
insl
iret
sub
jb
mov
pusha
push
jne
jbe
popf
mov
inc
jl
shl
jle
loopne
ljmp
das
in
xor
pushf
cmp
mov
xchg
fcomi
hlt
fcmovb
repz
xor
push
outsl
mov
cmp
jle
outsl
hlt
push
add
hlt
jno
repz
stc
inc
mov
lods
mov
push
xchg
ja
mov
std
lods
fs
js
cmp
and
lock
or
mov
and
jge
cmp
popf
dec
sbb
xor
aaa
repnz
and
rorl
in
inc
push
xlat
addr16
aas
into
mov
and
sbb
pop
std
jae
hlt
mov
inc
dec
pop
lcall
add
jp
xchg
in
mov
jmp
push
paddd
loop
mov
rolb
mov
adc
enter
movsl
cmp
pop
pop
dec
jp
or
push
ds
dec
dec
in
and
push
icebp
scas
jne
mov
insb
sbbl
jb
jns
mov
lods
fnsave
pop
mov
movsl
add
adc
xor
xor
enter
stos
leave
call
in
stos
fs
lret
sbb
jle
push
sti
push
repnz
std
jmp
aam
cwtl
cmpsb
xchg
out
lds
pusha
inc
xchg
mov
hlt
jo
out
jnp
inc
movsb
aas
cmp
fldt
adc
inc
cld
js
ljmp
jmp
test
fs
sti
push
cmc
popa
enter
arpl
xchg
pushf
sub
inc
xlat
mov
xchg
mov
jb
add
mov
dec
jb
sub
sbb
loope
pop
repnz
repz
lock
mov
aaa
jnp
pop
testb
or
shlb
adc
fld
stos
outsb
jge
push
fwait
mov
inc
pop
ljmp
dec
shll
mov
call
pop
arpl
adc
jmp
aas
out
cwtl
in
lds
xchg
dec
mov
cmpsb
das
rcr
push
and
add
mov
cmp
push
leave
adc
out
loopne
jle
mov
in
lret
pop
pop
adc
jnp
test
cmpl
ret
sbb
sbb
adc
dec
loopne
xchg
pop
lcall
mov
loope
sbb
mov
lahf
rclb
xor
jge
bound
in
outsb
out
aaa
sarl
rorl
test
stos
inc
xchg
repnz
and
mulb
out
xchg
enter
jb,pt
stos
fmuls
stos
lret
ret
xchg
inc
scas
push
out
aas
adc
std
and
jno
andl
xchg
pop
inc
pop
or
dec
and
int3
push
movsl
bound
push
mov
mov
aam
shlb
dec
and
fucomi
in
push
cmp
daa
xor
movsb
outsb
xor
std
mov
cmp
jo
ja
xchg
nop
mull
sbb
pop
ret
pop
data16
es
cwtl
jbe
inc
movsl
stos
mov
push
into
inc
int
add
cmp
push
jnp
stos
and
sahf
cmp
mulb
inc
ja
adc
ljmp
ss
clc
das
imul
sahf
mov
mov
clc
cmp
out
mov
adc
gs
mov
sub
xor
lcall
mov
stos
sahf
dec
add
xchg
out
pop
popf
push
mov
sar
xor
push
adc
repnz
pop
outsl
adc
mov
mov
stos
mov
fdivrl
add
add
cmp
lret
push
push
inc
push
pop
popa
dec
pusha
and
mov
push
les
or
enter
repz
and
dec
dec
addr16
jo
out
lods
pop
out
imulb
push
shlb
dec
lods
inc
stc
movsl
cwtl
daa
inc
sub
sbb
scas
ds
loopne
test
mulb
push
sub
adcb
inc
push
sbb
mov
fiaddl
push
sub
adc
add
add
push
sbb
mov
mov
add
into
imul
mov
dec
cmc
cmp
add
jo
pop
cmp
insb
dec
push
fwait
sub
hlt
inc
fld
loop
cwtl
js
add
ficoms
cs
adc
mov
rcl
loope
lds
or
int3
loope
outsl
pusha
push
cmp
jne
leave
add
jecxz
lds
mov
adc
rol
pop
iret
jnp
aas
bnd
cmpsb
dec
movsl
pop
addr16
out
insb
pushf
std
arpl
pop
cs
popf
inc
add
mov
lods
pop
out
std
dec
push
sar
rcll
jp
fwait
sahf
xor
stos
adc
cmp
ret
cmp
shl
leave
movsb
ficoml
pop
pop
mov
ror
xchg
sbb
mov
andb
in
jp
xlat
sahf
pop
iret
or
popf
jbe
mov
sub
les
add
shl
out
xchg
into
lret
lret
inc
js
sub
or
fistps
xchg
and
jae
cwtl
call
jno
daa
jo
jns
loopne
jo
jle
mov
push
pop
fcmovne
and
and
xchg
leave
notl
aas
xor
pop
iret
inc
mov
mov
cmpsb
es
sub
mov
arpl
test
xor
sub
sub
push
outsb
sub
dec
sub
mov
adc
popf
jno
in
xor
int3
cmpsb
pop
push
xchg
inc
stos
push
cmp
push
sbb
add
or
and
fcomps
and
gs
push
adc
pop
push
adcl
imul
and
push
out
and
xor
mov
jge
fdivl
mov
add
lcall
add
and
jne
int
scas
dec
test
divb
in
dec
enter
test
add
mov
mov
out
cmp
mov
ss
psadbw
lret
mov
or
enter
divl
or
pusha
cmp
cmc
cmp
adc
mov
sub
orb
and
enter
adc
inc
sub
pop
mov
repz
ljmp
stos
jne
adc
daa
pop
jne
pop
sub
clc
loop
dec
test
in
or
pop
es
xor
in
add
jle
xchg
dec
test
lahf
mov
loopne
outsb
insl
cmpsb
aas
jle
sub
add
pop
js
ret
jns
cwtl
shll
popf
push
sbb
je
jmp
cmp
xchg
mov
in
jmp
mov
cmc
mov
cmp
push
insb
jo
sub
fwait
outsl
mov
push
scas
gs
sbb
pop
ja
and
push
dec
sarb
adc
jb
xchg
xchg
pop
adc
mov
addb
adc
fs
adcl
lcall
pop
rorl
jno
mov
inc
enter
mov
je
sbb
xchg
dec
lea
xorps
jno
mov
adc
stos
jge
push
push
and
stc
lcall
add
and
pusha
mov
in
jb
xor
push
sbb
mov
push
lcall
pop
pop
lahf
and
push
inc
mov
jp
mov
mov
push
pop
aad
cwtl
std
shrb
adc
push
jne
loopne
push
rcrl
rcll
adc
xlat
insl
data16
addl
cmpsl
xor
pop
adc
add
cmpsl
jae
scas
mov
pop
push
jnp
sbb
fstps
dec
popa
mov
and
xor
mov
lock
in
mov
mov
xlat
or
jg
fidivrl
pop
jno
loope
fs
pop
int
neg
lret
sbb
loopne
or
inc
mov
stc
fildll
mov
sbb
jns
dec
lret
or
inc
loop
push
in
and
sub
adc
jmp
fisttps
int
fcmovnbe
ret
loop
dec
psubusb
or
cmpsb
in
xchg
mov
lret
sub
cmp
dec
insb
imul
pop
mov
fsubrp
enter
cld
sub
dec
push
add
dec
or
dec
int
std
inc
sub
js
cli
test
outsl
xor
fwait
dec
xchg
mov
outsl
adc
out
imul
sub
sub
aas
jp
test
inc
push
mov
jmp
mov
xor
push
fstps
cmc
mov
mov
cmp
adc
bound
aaa
fwait
mov
loope
and
hlt
je
nop
xchg
jp
std
sbbb
in
aas
loop
push
std
iret
push
jmp
or
push
ljmp
es
xchg
push
aas
test
aas
jae
cltd
movsl
add
mov
rclb
fisttpl
movsl
inc
iret
fsubl
adc
cmpsl
push
vmovntps
icebp
jno
mov
add
mov
xor
push
in
in
sbb
aas
sti
jns
fwait
hlt
add
pop
fiaddl
fldcw
sub
dec
hlt
lret
push
mov
rep
xlat
cwtl
inc
hlt
call
mov
stos
xchg
std
cld
dec
fbstp
inc
inc
pop
ret
sub
add
mov
sbb
and
xor
mov
pushf
repz
mov
test
mov
sub
sub
push
mov
push
popa
aas
inc
out
outsb
xchg
in
pop
adc
movsl
or
inc
sti
mov
daa
sub
push
stos
ja
push
cltd
inc
in
jge
int3
jmp
icebp
mov
in
cmc
les
aas
xor
fisubrs
inc
push
dec
rcrb
cmp
stos
mov
sbb
add
ret
clc
fbld
mov
mov
cmp
packssdw
lea
call
lea
xor
xor
clc
dec
lret
data16
aam
add
hlt
pmulhuw
cmpsl
mov
jp
push
cmp
clc
sahf
addl
in
and
sub
les
cmpsb
hlt
aas
xchg
sub
xor
ret
xchg
cs
xchg
jo
push
sub
int
xchg
sbb
nop
or
fs
cmp
mov
cmp
shr
xor
sub
mull
scas
pop
sbb
pop
adc
inc
dec
mov
xchg
jnp
dec
push
stos
and
dec
in
jnp
sub
mov
xchg
leave
fildl
jne
fsubrs
andl
mov
scas
sbb
rorl
icebp
mov
mov
dec
sbb
ds
les
add
inc
push
push
mov
enter
in
ljmp
out
and
xor
sub
pop
ljmp
add
roll
mov
shr
sub
int
and
jecxz
call
pop
adc
cmp
adc
je
cmp
pop
je
sbb
int3
repz
mov
jns
mov
xchg
fdivl
lods
mov
jns
jle
sub
shll
or
add
cmp
cltd
scas
jmp
iret
lds
divb
lahf
mov
cld
push
sbb
push
movsl
mov
inc
jmp
jae
pop
dec
repz
xchg
xor
xchg
sub
jecxz
pop
mov
xor
pop
jge
ficoms
leave
push
incl
popf
pop
xchg
movaps
sub
loope
pop
mov
xchg
movsb
push
test
jmp
mov
sbb
xchg
ret
scas
cmp
fnstcw
and
scas
mov
jae
adc
les
xchg
pop
jle
cmp
cmc
mov
icebp
jecxz
and
std
loopne
fstpt
or
fsubrl
mov
leave
cmp
repz
orl
adc
and
push
jnp
out
lods
cwtl
leave
mov
mov
and
jbe
or
outsb
mov
into
mov
dec
sbb
and
and
cmp
fbstp
push
jo
jp
mov
imul
dec
sub
mov
adc
inc
push
dec
adc
stc
cmp
and
adc
lock
add
and
and
jl
je
inc
out
mov
cmp
mov
push
repnz
jno
cmpl
nop
divl
cmpsl
xchg
aad
out
mov
jne
data16
pop
mov
ret
lock
lcall
mov
lret
mov
jae
mov
pop
mov
mov
xchg
and
sub
jno
clc
push
adc
dec
out
fidivl
adc
xrelease
cli
push
pop
cmp
pop
je
cmpsb
mov
add
push
mov
sub
sub
imul
leave
daa
ja
adc
scas
fdivl
fistps
iret
mov
mov
mov
rclb
pop
mov
xchg
lret
xchg
mov
mov
xlat
stc
movsl
scas
adc
cld
dec
movhps
xor
or
jecxz
insb
ss
xchg
stos
jmp
stc
cmp
adc
hlt
pop
pop
inc
sbb
cmpsb
cmp
cmc
rorl
nop
insb
dec
pop
inc
sbb
mov
jns
ljmp
mov
sub
cmp
push
cmp
jmp
push
sbb
or
imul
aaa
and
roll
ljmp
shrb
jmp
xor
scas
ja
dec
mov
push
dec
ficoml
mov
mov
adc
mov
xchg
pop
in
cs
fs
push
aam
xor
jmp
stc
jnp
int
inc
aaa
mov
adc
xchg
lods
std
addr16
bswap
jle
or
je
out
imul
push
mov
cmp
stos
xor
adc
or
call
ds
scas
cmp
and
inc
mov
call
push
aaa
xchg
jmp
xlat
sti
cltd
pusha
xor
std
cmp
and
lea
into
mov
sahf
push
shr
lods
insb
inc
xchg
aas
adcl
add
xchg
cmc
ret
scas
mov
flds
xor
mov
fnstcw
scas
jb
or
push
pop
popl
mov
aam
and
jne
xchg
popf
mov
sbb
push
inc
in
imul
jb
loopne
and
mov
mov
loope
shr
mov
in
int
test
pop
cmp
sbb
shl
dec
or
mov
mov
mov
test
lock
push
cmp
push
cmp
inc
dec
data16
repnz
cmc
loope
push
bound
leave
sbb
shl
cwtl
adc
das
sbb
ss
adc
hlt
xchg
cmp
mov
out
sub
lds
jl
xchg
sbb
mov
and
lods
cmp
xor
adc
test
and
ljmp
outsb
cld
xchg
jno
push
idivb
push
repnz
dec
pushf
hlt
lods
loope
cmp
cmovle
vmread
cwtl
mov
mov
mov
cli
xorl
mov
mov
aam
mov
pop
movsb
and
cmp
push
adc
mov
movsl
jns
loop,pn
cmp
adc
jo
and
sbb
leave
mov
cmp
mov
cmp
adc
pop
dec
fwait
inc
mov
dec
jo
or
cmp
shrb
cwtl
mov
sti
aas
imul
cmpsl
push
or
push
in
pop
adc
sub
das
push
and
pop
movsb
je
fs
or
inc
cmp
add
rorl
jp
dec
ja
into
mov
add
ret
adc
adc
push
pop
mov
xchg
pop
xlat
adc
or
or
dec
xor
push
jbe
sbb
cs
imul
arpl
adc
subl
dec
push
sbb
fwait
scas
push
sbb
stos
out
cli
fwait
pop
jnp
lods
movsb
and
mov
lahf
jns
scas
xchg
or
mov
add
hlt
and
inc
mov
sbb
pop
mov
or
pop
and
js
jno
push
sbb
ret
fisubrl
xchg
inc
daa
adc
sbb
jbe
mov
mov
rorb
test
jnp
pop
inc
jl
mov
outsl
leave
lds
sbb
pop
or
add
adc
nop
jae
push
ss
daa
arpl
cmp
test
xchg
sbb
ret
dec
jl
lock
and
or
hlt
pop
sub
mov
mov
cmpl
pop
test
push
or
jle
test
stos
mov
aas
push
rolb
aad
stos
jbe
add
stos
out
movups
mov
sti
cld
mov
lds
std
je
arpl
aam
mov
lods
cld
test
insb
mov
push
jge
mov
mov
push
cmp
loope
xor
sti
imul
in
or
popf
outsb
aam
add
mov
fucomip
add
pop
rcrb
mov
inc
stos
pop
and
stc
adcb
xor
jne
xchg
adc
pop
xchg
cmc
outsl
sar
sahf
adc
dec
gs
test
subl
aaa
in
jmp
sbb
imulb
fimull
scas
add
adc
incl
sbb
daa
leave
mov
cmc
mov
in
pushf
movsl
das
add
jno
fimuls
mov
add
jb
lahf
cmp
or
push
popf
test
das
inc
jmp
mov
imul
pop
push
shll
or
sbb
out
gs
pop
sub
inc
jmp
imulb
aad
loopne
rolb
pop
xlat
pop
jb
cltd
cmp
add
mov
sbb
push
mov
add
or
ds
pop
or
xor
fucom
fpatan
std
fsubs
mov
aaa
rcll
outsb
lahf
or
repnz
int3
clc
bound
test
fwait
adc
leave
lods
std
inc
aam
test
ss
add
xchg
and
or
pop
iret
dec
inc
les
test
jge
push
mov
jle
lcall
hlt
xchg
xchg
mov
lods
sub
add
rorl
out
stc
xchg
nop
jo
pop
mov
cmpsb
rolb
mov
scas
ljmp
sti
cmpsb
or
jo
imul
xchg
xrelease
fst
in
xor
push
ljmp
popa
cwtl
mov
or
cmp
push
mov
lods
jle,pn
cs
push
cmp
sbb
push
addr16
gs
push
gs
mov
jmp
mov
dec
jb
test
in
push
push
adcl
das
xchg
sbb
pop
data16
pop
ss
cmpsb
repz
loopne
repnz
shr
push
ret
mov
mov
pop
aas
push
fsts
bnd
lea
sub
pop
add
ljmp
stos
ds
scas
fs
in
xor
movsl
call
scas
push
jp
arpl
add
pop
or
mov
inc
imul
push
push
sbb
cmp
clc
and
iret
mov
push
sbb
bound
sbb
hlt
mov
popf
and
pop
test
push
ftst
fldl
xchg
sub
iret
cld
add
popf
sahf
subl
xchg
pusha
loope
dec
insb
ja
imul
jb
or
xchg
pusha
out
repz
lea
in
aas
out
int
mov
cmp
dec
and
cmp
xchg
je
adc
xor
cltd
inc
rcrl
in
pop
iret
push
scas
bound
inc
pop
scas
jo
push
ret
push
mov
adc
daa
in
repz
fs
xchg
pop
xlat
iret
mov
or
mov
hlt
jne
mov
repz
ljmp
int
add
mov
jne
out
ret
out
mov
jmp
pop
dec
loopne
xchg
fdivs
mov
push
ljmp
jge
push
test
xchg
dec
dec
jle
pusha
scas
inc
sbb
popa
inc
je
inc
inc
test
repnz
dec
inc
fnsave
pop
rcll
jge
test
add
or
push
lahf
icebp
add
mov
aaa
cli
adc
xchg
jmp
pop
inc
xor
ja
aas
imul
ja
push
xchg
mov
and
enter
cs
sub
xchg
loop
jb
mov
dec
fsin
ds
jns
jecxz
daa
sbb
orl
xchg
xchg
fisttps
dec
pushf
sub
adc
shl
push
fwait
cli
js
xor
sub
sti
add
in
mov
pop
lret
pop
push
sub
jno
sbb
cmpsl
dec
or
shrl
sti
ds
scas
push
dec
out
and
or
jg
jge
pusha
enter
xor
rcll
jno
and
xlat
cli
inc
adc
inc
xchg
aad
imul
cltd
cmp
pusha
int
sbb
sub
ds
aaa
insb
in
shl
pushf
repz
xor
movsb
add
pop
push
or
addl
mov
sub
cmpsl
mov
mov
out
sbb
testb
in
mov
mov
and
es
add
mov
in
in
ret
inc
test
xlat
mov
xor
jl
insl
test
jno
mov
fdivrs
mov
jne
das
addb
enter
inc
sahf
sbb
cld
push
xchg
pop
shll
fisttpll
mov
movsb
push
aam
aad
es
mov
sbb
or
arpl
sub
stos
je
mov
cmp
fistl
add
mov
sbb
divb
sbb
and
loop
in
hlt
add
test
iret
pop
test
adc
dec
movsl
dec
pop
lea
nop
inc
out
jl
jge
js
lcall
xor
popf
fcmovnbe
jo
sarl
pusha
hlt
addr16
mov
outsl
nop
scas
sbb
mov
sti
jge
fstps
hlt
addr16
xchg
ret
xchg
xor
inc
push
movsl
or
push
sub
sbb
dec
lcall
add
gs
ss
push
ds
xchg
sbb
jmp
das
pushf
or
jne
pop
pop
in
fnstcw
cli
in
mov
and
jg
nopl
icebp
imul
in
or
sti
xchg
test
and
xlat
es
inc
push
sbb
mov
inc
cwtl
dec
xchg
cs
movsb
xchg
int3
aaa
dec
andb
xor
inc
cmp
xor
popa
cwtl
fimuls
ja
shl
jno
sbb
jle
mov
xchg
push
test
cmpsb
xlat
add
mov
xchg
stos
stos
data16
xchg
bound
mov
popa
or
pop
inc
and
and
not
cli
into
mov
mov
and
mov
add
add
add
jle
mulb
bound
ljmp
xor
fwait
test
clc
or
sub
inc
lcall
add
push
mov
lahf
mov
into
lret
ljmp
lahf
jecxz
mov
xor
inc
pop
xchg
jae
dec
sbb
pop
das
les
outsl
cmp
xchg
adc
or
outsl
lods
mov
jns
std
lods
popf
call
jle
cmp
add
stc
inc
sub
in
jle
push
arpl
sub
fdivr
out
pop
aas
lods
dec
inc
aaa
test
push
cmp
in
rolb
add
ret
sarb
cmp
movsl
cmp
mov
les
sbbl
stos
dec
xchg
fistpll
or
push
femms
jp
jnp
xchg
daa
push
test
pop
movsl
sub
jl
jns
movsb
mov
sub
inc
or
add
and
push
inc
shl
mov
adc
sbb
adc
xchg
sub
mov
mov
in
xchg
lods
bnd
fwait
pslld
popa
xchg
cmp
clc
insb
arpl
mov
in
jb
mov
pop
xchg
jg
pop
mov
add
mov
xor
sbb
mov
jns
es
jecxz
clc
pop
xchg
js
pop
nop
scas
pushf
add
push
pop
sar
mov
shr
adcb
xchg
test
es
repz
fdivp
ror
in
lcall
and
mov
inc
inc
or
test
aad
enter
call
ficompl
sbb
add
cmp
out
inc
ret
and
cmpl
cmp
cs
scas
shlb
adc
dec
insl
stos
mov
inc
mov
andb
aaa
int
cmpsl
push
insl
stos
mov
setp
or
fsin
shlb
pop
inc
jb
idivb
rcll
add
shl
mov
mov
mov
out
mov
pop
add
icebp
xchg
push
sbb
cmpsl
mov
push
sahf
xchg
adc
jge
pop
fiaddl
jno
fucomp
imul
push
fidivrl
ret
aam
subb
mov
mov
std
scas
hlt
clc
fcoms
ret
xor
add
sub
into
aam
or
imul
mov
iret
xor
pop
and
cmp
sbb
ds
out
lods
lds
lock
je
sbbb
and
and
add
push
xchg
je
and
cmp
xor
rorb
subl
xor
pop
inc
cli
push
dec
out
and
or
call
lods
and
add
mov
jge
and
stc
sbb
xor
sub
ds
enter
xchg
xlat
mov
fwait
fwait
jecxz
lret
fs
pop
dec
and
inc
ljmp
imul
mov
pop
mov
ficoms
inc
data16
cltd
jg
mov
int
jae
xchg
push
push
cltd
sbb
pop
ds
inc
out
testb
cmpsb
jne
clc
lds
mov
cmp
add
xor
jne
or
mov
sbb
test
rorl
sub
cmpsb
dec
pushf
data16
mov
adc
loop
scas
adc
repz
pop
mov
xor
fistps
push
xor
test
out
inc
push
mov
inc
sarl
inc
add
mov
btc
add
out
mov
out
dec
mov
or
xchg
push
shlb
mov
outsb
test
in
sbb
jle
sbb
pop
rcll
pusha
repz
addr16
insb
cli
pop
mov
sti
mov
fcompl
sub
and
mov
push
icebp
icebp
push
idivl
and
popf
sub
lods
inc
int3
mov
and
call
pop
es
ret
bound
and
xchg
lret
out
mov
sub
call
push
cmp
add
stos
stos
xchg
repnz
clc
cmp
leave
lea
xchg
mov
fiadds
in
in
mov
pushf
movsl
imul
dec
or
pop
adc
mov
ss
push
xchg
bnd
inc
sbb
jo
stc
int
fld
mov
sahf
loope
xchg
popa
out
or
leave
mov
mov
xchg
scas
sub
pop
movsb
icebp
shrl
inc
in
lea
rclb
test
sbb
les
and
out
push
mov
xor
dec
add
sub
into
sub
rol
lock
add
mov
mov
mov
das
fcomi
mov
lret
mov
icebp
mov
cmpb
jbe
jmp
cltd
pop
iret
add
xor
jmp
inc
mov
mov
incb
dec
xchg
adc
xor
add
sub
and
sahf
xchg
mov
je
incb
cmpsb
pop
lcall
jns
xchg
decl
hlt
imul
and
mov
mov
leave
mull
pop
mov
lock
std
aaa
cs
pop
ret
pop
pop
dec
mov
stos
sbb
jns
repnz
jp
mov
lcall
sbb
mov
pop
mov
fiadds
stc
fildll
xchg
test
cmp
push
shrb
repz
sub
addr16
or
xchg
aaa
gs
outsl
jge
sbb
fsubs
sbb
fidivrl
fstps
lods
das
and
mov
clc
xchg
repz
pop
and
sub
jb
inc
loop
xchg
add
mov
icebp
sub
push
sub
mov
jne
popf
add
push
add
xchg
and
cmc
mov
sbb
add
dec
sbb
movsl
jle
stc
or
push
cmpsb
push
mov
testl
jo
add
jns
inc
je
jne
push
imul
add
pop
xorl
into
dec
loope
cmp
sbb
call
mov
and
inc
push
mov
mov
xorb
mov
mov
aas
add
dec
mov
lock
add
jb
jl
or
and
outsb
mov
shll
jl
mov
xlat
jle
sub
jl
test
cmp
rcrl
mov
cltd
in
mov
dec
jmp
mov
adc
sbb
and
and
pop
addb
test
adc
and
push
rcll
out
loop
bound
out
lret
mov
add
xchg
fwait
imul
and
dec
jmp
mov
sbb
sub
aaa
sbb
mov
dec
mov
leave
adc
mov
push
imul
fistpll
repnz
cli
dec
push
push
push
shr
sahf
psrlq
fdiv
data16
xchg
outsb
cmp
insl
lods
ljmp
movsl
pop
mov
sub
inc
pop
sbb
mov
lods
test
cmc
xor
sub
cmp
aad
or
jno
xor
jg
mov
fldl
cmp
mov
loop
mov
dec
adc
jns
dec
mov
inc
hlt
out
jle
adc
or
iret
scas
mov
xchg
iretw
pop
loopne
in
jbe
mov
hlt
xor
nop
dec
xchg
data16
lret
and
fucom
sub
push
add
call
xor
cmc
hlt
lea
sub
sub
cmp
imul
mov
xchg
stos
sahf
mov
arpl
jle
mov
jb
shll
jge
out
pop
jp
jo
sub
mov
xor
mov
pop
inc
gs
adcb
outsl
addr16
rcr
mov
dec
enter
repnz
xchg
imul
clc
jne
mov
sub
test
sbb
or
call
adc
test
jg
or
repnz
mov
popf
cmp
push
arpl
aaa
nop
adc
mov
aam
sbb
cmp
jae
or
sbb
lock
adc
or
enter
stc
in
jno
add
fwait
sbb
jb
push
gs
imul
outsl
inc
mov
or
shr
dec
sti
dec
lcall
in
ret
and
push
repz
mov
pop
mov
cmc
mov
shl
sbb
setle
hlt
andl
mov
fmull
add
iret
or
and
lcall
xor
adcb
stos
dec
repnz
cmp
push
push
jp,pn
sub
shll
adc
jae
jne
std
and
iret
mov
movsl
cmp
add
pop
test
push
pusha
es
fcoml
roll
jmp
dec
sar
mov
in
call
dec
inc
imul
iret
mov
mov
and
in
xor
mov
addl
and
stos
and
inc
inc
ss
out
cltd
out
sbb
inc
lahf
mov
xlat
inc
dec
dec
push
push
push
mov
test
xlat
inc
ja
xor
mov
sub
jbe
and
or
je
xchg
shll
sti
mov
repnz
mov
popf
add
sub
or
hlt
repz
out
repz
add
adc
cmp
xchg
pop
test
or
jmp
lods
scas
ds
and
xor
jne
mov
sub
dec
cmpb
mov
int
jne
dec
mov
mov
jbe
add
repz
data16
xchg
stc
std
mov
cltd
mov
pop
clc
or
imul
jne
jns
arpl
cmc
add
push
or
orb
fnsave
mov
std
cmpsl
inc
call
xor
jns
in
dec
mov
fsts
and
jge
lret
sbb
popa
imul
push
xor
and
mov
sub
hlt
xchg
js
js
and
jl
adc
dec
test
xor
outsb
add
xchg
aad
push
mov
incb
pop
int
dec
stos
and
lods
lahf
xchg
data16
mov
dec
cmp
jno
inc
ja
mov
mov
sbb
jnp
out
xchg
and
sti
fcomps
in
push
push
and
mov
jbe
jmp
cmc
xchg
sbb
xchg
and
adc
jge
mov
and
lret
mov
std
iret
jge
movsl
sub
fists
mov
xchg
xchg
inc
loop
add
sub
cmp
xchg
icebp
push
adc
sbb
add
xor
inc
in
or
rcr
sti
cmp
les
cld
les
jno
fildl
or
xchg
xor
out
jg
jmp
or
es
xchg
inc
adc
js
jmp
ret
adc
mov
lahf
test
xor
shl
push
cmpsl
cs
fistpl
push
repz
lea
das
pusha
ljmp
sub
mov
add
jnp
ficomps
mov
xchg
loop
cmpl
dec
arpl
orl
rol
fcompl
scas
xchg
sub
inc
push
xlat
mov
aaa
xor
cmp
or
lret
aas
sub
pop
outsb
sub
in
lcall
lcall
dec
repnz
addr16
repnz
imul
aam
xchg
std
ret
jmp
xor
sbb
jae
mull
lods
adc
dec
and
fsubp
push
xlat
mov
inc
inc
mov
pop
push
jecxz
or
cmpsb
mov
jle
in
sbb
in
lea
mov
mov
pop
addl
arpl
into
or
lret
fisttpl
filds
dec
dec
out
mov
mov
inc
dec
icebp
or
sbb
dec
cmp
outsl
jge
test
sbb
bound
xchg
fsubl
jb
repnz
cmp
add
scas
iret
xchg
dec
mov
cmp
ss
pop
popf
dec
out
adc
push
hlt
ret
aaa
dec
repnz
sub
mov
jmp
mov
mov
in
mov
imul
cmp
test
sub
xchg
out
cmc
lods
jbe
shlb
in
jno
insb
mov
pop
shll
jnp
sbb
push
rol
arpl
aaa
xor
and
mov
xor
les
lahf
adc
jecxz
pop
enter
ret
icebp
inc
stos
inc
aad
jp,pt
aas
cmp
push
std
mov
aas
dec
gs
popf
rorl
dec
loopne
sub
adc
push
fstpt
and
lcall
outsb
lret
jbe
pop
push
mov
jg,pt
jae
bound
pop
cmp
pop
mov
mov
inc
fucomi
push
fildl
mov
xor
das
jnp
xor
jg
outsb
adc
sub
jns
notb
dec
es
loopne
fiaddl
cmpsb
jbe
test
mov
push
adc
aad
inc
cmp
shll
iret
sahf
rcr
mov
dec
xchg
inc
xchg
movsb
xor
insb
test
xor
dec
mov
mov
dec
adc
lret
jno
insb
push
mov
push
ret
xor
inc
scas
ja
xor
xorb
lds
pop
inc
sub
mov
xchg
fadds
push
lahf
jns
dec
or
jae
add
div
mov
mov
jecxz
mov
and
push
xchg
dec
movsb
pop
lret
sbb
sarb
add
hlt
out
out
jb
ret
ret
sar
cmpsl
mov
inc
add
push
and
cs
dec
push
addr16
pop
mov
imul
cwtl
shl
addl
hlt
rclb
test
mov
sbb
loope
push
mov
and
push
stc
push
or
mov
mov
and
stc
push
out
mov
xchg
sbb
mov
arpl
mov
fwait
jp
fmull
sub
lret
xor
sub
mov
aad
pop
inc
inc
lock
in
adc
popf
ja
jns
push
pop
sbb
inc
addl
mov
cmp
test
mov
xchg
ret
cmp
std
sub
dec
aad
or
mov
inc
xchg
push
sbb
mov
in
and
push
lods
in
xlat
sub
and
xor
rorb
cmp
mov
fisubs
div
mov
mov
mov
pop
cmp
and
mov
in
ss
and
mov
fsubr
jnp
adc
jp
push
or
push
sbb
mov
lds
stc
ret
adc
add
ficomps
les
movsl
lods
lcall
or
push
xchg
mov
add
or
cli
mov
lret
mov
shlb
add
xlat
test
mov
subb
cli
mov
fsubrl
and
dec
or
push
outsl
fcmovne
movsl
dec
int
sbb
aam
cmove
aaa
dec
ja
test
outsl
pop
into
inc
popf
dec
dec
inc
cli
adc
out
lret
jecxz
mov
pop
clc
aam
pop
les
subl
nop
decl
and
leave
push
xchg
aam
or
sub
rorl
sbb
xor
hlt
lods
push
repz
testl
in
jecxz
jge
loop
sub
fwait
shrl
lahf
lea
jge
out
mov
lcall
loope
inc
add
shll
jecxz
jne
js
test
fimull
aaa
pushf
mov
fidivrs
jle
sti
repnz
cltd
in
mov
aaa
jo
cwtl
pop
cltd
ret
adc
jecxz
in
and
dec
inc
jg
dec
int3
and
lods
movb
daa
jg
add
lea
cwtl
cmpl
push
inc
and
or
push
sub
pop
dec
add
xchg
inc
std
cmp
xchg
push
or
push
dec
mov
xchg
rcrb
lret
push
push
pop
sahf
mov
pop
cmp
sbb
es
sbb
loopne
push
clc
sbb
ret
rcr
fcom
mov
or
jbe
xchg
mov
movsl
mov
js
icebp
or
aas
push
data16
sbb
add
xchg
fcomps
dec
jl
loopne
mov
jge
xchg
into
jne
jg
cmpsb
pop
sbb
out
xchg
dec
xchg
mov
test
repz
adc
cmp
call
stos
jae
mov
xor
arpl
fnstcw
pusha
and
cltd
xorb
mov
xor
sbb
xchg
int3
pop
pop
das
pop
push
cmp
sete
adc
add
repnz
das
pop
fisubl
dec
lods
sbb
lcall
test
in
es
inc
xchg
pop
into
pop
addr16
sub
add
in
je
fisttpl
xor
data16
cwtl
mov
pop
jnp
sbbb
sahf
sbb
mov
stos
pop
push
hlt
cmp
daa
mov
jmp
mov
mulb
mov
mov
orl
mov
dec
jecxz
xor
jo
jbe
stc
dec
fnstsw
sub
jmp
pop
mov
cwtl
push
out
out
out
cmp
pop
push
dec
or
jg
out
adc
push
jnp
stos
push
lret
imul
add
aad
repz
push
add
jle
aaa
clc
nop
mov
push
pop
mov
mov
xor
push
out
lret
inc
into
xchg
subl
xchg
inc
mov
jbe
aaa
ret
mov
sarb
in
pop
neg
lds
cmc
insb
enter
lret
push
inc
xchg
mov
pusha
inc
sub
repnz
mov
mov
push
shrl
and
loopw,pt
pop
fsubr
movsb
gs
pop
adc
xchg
push
sahf
bound
std
jae
ss
fwait
sbb
inc
fisubrs
lods
fidivrs
xor
xlat
mov
lods
xchg
ds
xor
lahf
mov
jl
imul
dec
mov
out
jno
or
idivb
imul
repz
ds
mov
lcall
mov
xchg
mov
and
ret
cli
jns
out
rorl
pop
movsb
out
mov
movb
cmp
push
xchg
adc
loop
pop
cwtl
mov
sub
mov
pop
jp
adc
out
popl
fstl
inc
ljmp
dec
push
mov
jg
pop
loop
lods
push
lret
fldcw
movb
mov
adc
in
imull
inc
je
xchg
std
arpl
push
cmpsl
imul
cltd
hlt
jle
cmp
pop
aam
adc
mov
and
mov
or
dec
inc
outsb
adc
jle
clc
cmp
stc
mov
f2xm1
pop
pop
sbb
mov
push
test
arpl
xchg
sbb
daa
es
outsb
xchg
pop
fstl
mov
adc
iret
push
iret
js
mov
mov
xchg
xchg
fmull
cmp
loope
icebp
cmp
and
xor
std
dec
shlb
mov
jno
jp
cwtl
inc
aas
sahf
xor
sarb
popa
add
je
xor
xchg
xchg
mov
in
or
sub
mov
fs
mov
ficomps
insb
in
stos
push
mov
or
push
push
fldenv
inc
and
out
dec
and
incb
xchg
push
pop
mov
cmp
insl
repz
test
xchg
call
cmp
das
out
pop
test
inc
mov
in
inc
mov
stc
push
movhps
add
mov
icebp
or
pop
xor
cmp
out
add
ljmp
pop
subl
adc
jno
lret
jns
out
jecxz
inc
mov
popa
ja
loopne
arpl
mov
roll
cmovg
inc
inc
inc
cmp
mov
cli
mov
outsl
mov
mov
lret
out
mov
pop
repz
ljmp
lds
ss
outsb
rorb
push
sbb
mov
jle
aaa
scas
and
cli
mov
mov
imul
dec
les
pushf
fs
pop
jl
xchg
inc
nop
xor
test
xor
out
popa
aaa
inc
fcoml
and
enter
dec
dec
stos
add
push
cs
push
mov
outsb
sbb
arpl
adc
popf
xor
pusha
dec
push
push
cwtl
adc
jb
and
mov
inc
jno
dec
lret
jl
jae
inc
mov
imul
out
mov
hlt
mov
loope
mov
dec
mov
add
pop
add
cmp
cltd
dec
inc
pop
clc
arpl
inc
dec
mov
dec
outsl
cmp
clc
xchg
adc
mov
pop
mov
mov
int
mull
notl
xchg
int
into
sub
sbb
insb
in
xor
jmp
or
cmp
addb
or
inc
ror
xchg
jmp
das
scas
dec
sahf
pop
pop
insb
jge
fs
rclb
rorl
fdivrs
into
cmp
adc
dec
nop
cli
jmp
dec
mov
aaa
xchg
sbb
rcl
fs
mov
sbb
mov
add
pop
pusha
inc
jmp
movsl
cmovs
mov
fs
adc
loopne
repnz
pop
mov
aas
mov
shlb
cmc
push
loope
ret
out
jnp
in
mov
mov
inc
dec
jg
jae
adc
sub
inc
sbb
jne
or
in
adc
mov
push
xchg
mov
mov
xchg
insb
jbe
jne
pop
cmpsb
cmp
mov
lcall
lahf
jmp
xor
sub
fistpll
in
clc
hlt
shl
cli
dec
popa
push
push
xor
or
repnz
mov
or
lds
int
xor
dec
dec
dec
xchg
push
test
and
mov
sub
pop
mov
fsub
gs
push
ds
cwtl
lds
sarl
mov
sbbl
ss
add
or
inc
repnz
push
fucomip
push
dec
test
in
mov
test
pop
pop
mov
call
popa
call
fistpl
lcall
adc
mov
or
sub
jns
and
enter
pusha
rorl
jge
xor
pop
xor
jg
js
fnsave
in
push
nop
jae
inc
rcll
hlt
in
pop
jp
aaa
xlat
cltd
es
repnz
and
or
loopne
cli
arpl
jge
push
jecxz
jno
mov
mov
push
pop
xor
out
xorb
sbb
std
add
push
loopne
test
dec
sub
rcll
enter
adc
or
fmull
cli
push
test
pop
jp
inc
leave
movsl
fnstsw
adc
stos
aaa
fwait
int
pop
jno
dec
mov
roll
mov
das
lods
nop
cmpsl
inc
lods
jne
in
stc
cltd
js
jg
push
sarb
shll
outsl
jne
fldt
pop
stc
outsl
popa
pop
add
insl
jno
clc
dec
popf
lods
fs
ljmp
rcrl
sub
sbb
add
sub
rclb
std
and
jmp
das
dec
ret
mov
lret
imul
mov
adc
pop
pop
call
sti
jp
xchg
fwait
add
clc
lock
xor
mov
and
fwait
mov
sub
aaa
inc
mov
rcl
movsb
aaa
sub
out
adc
mov
testb
mov
test
cwtl
push
in
and
xor
add
fisubl
sbb
xchg
dec
sub
sub
test
popa
xor
jg
popf
fisubs
cli
addl
inc
pop
ss
arpl
xchg
data16
ljmp
test
push
hlt
sub
lods
mov
repz
cs
push
aaa
movsb
iret
sbb
scas
and
lahf
cli
or
in
mov
out
aad
push
pop
les
xor
pop
dec
mov
sbb
pop
mov
mov
mov
xlat
cwtl
lret
adc
xlat
out
test
je
imul
mov
aam
movb
sbb
push
stc
push
jp
dec
mov
mov
fisttps
int
add
insl
pop
in
adc
movsb
mov
stos
adc
mov
pushf
add
mov
loopne
fistps
sarb
mov
out
test
lods
cli
or
cs
icebp
add
paddsb
lret
scas
movsl
sbb
addr16
mov
mov
fbstp
pop
and
mov
fstl
lahf
pop
push
pop
jbe
xor
sbb
jp
in
lods
dec
xchg
jne
out
push
pop
repz
lods
jmp
pop
cmpsl
into
imulb
stos
js
mov
mov
stos
xchg
mov
add
cltd
repz
mov
mull
sbb
pop
fidivrl
xchg
pop
xchg
pusha
aas
sub
push
xchg
sub
mov
das
inc
loop
mov
out
jnp
xor
icebp
hlt
xor
sub
and
xchg
pop
jb
mov
iret
xchg
dec
push
mov
mov
xchg
sahf
pop
addr16
cltd
dec
xchg
mov
pop
adc
add
sbb
in
mov
pop
or
lcall
insl
int3
push
inc
lret
in
hlt
std
mov
out
clc
mov
cmp
sub
daa
int
shrb
lret
lock
sub
mov
xchg
xchg
sti
enter
arpl
push
cmpsl
sahf
das
scas
xchg
fwait
mov
lods
iret
adc
jae
cmp
aas
or
je
rclb
insb
inc
imul
mov
rclb
mov
pop
xchg
aad
add
pop
sub
stos
das
flds
ucomiss
add
pushf
sub
cmove
in
cmp
test
xor
inc
les
fildl
push
out
and
xor
inc
scas
in
or
jge
inc
popf
int3
mov
fbstp
into
les
and
sarb
shlb
jge
push
clc
and
inc
mov
mov
into
xchg
out
pop
insb
repnz
dec
push
cld
fsubrs
jmp
out
push
data16
lds
jecxz
dec
sbb
aaa
les
nop
mov
hlt
das
sbbb
xor
and
inc
cmp
adc
shll
jecxz
fisubrs
loope
insb
mov
in
xchg
xor
stc
arpl
jge
scas
cmp
repnz
and
into
incb
push
les
sub
push
jl
add
xor
in
fdivs
call
stos
sub
repz
mov
sbb
mov
js
mov
js
xchg
xor
dec
dec
add
pop
lcall
pop
popa
lds
and
sub
cmp
cmpl
push
subb
lret
sbb
inc
mov
sbb
imul
aas
aaa
inc
push
pop
rcll
mov
mov
or
into
fwait
push
sahf
jg
sahf
lods
dec
jbe
cmp
jmp
lret
sub
push
xchg
xchg
mov
add
dec
int3
push
mov
push
cmp
mov
stos
addl
mov
push
xchg
les
lods
int
or
lea
add
hlt
outsb
cmpsb
lahf
mov
mov
fwait
add
mov
xchg
jne
or
mov
popf
push
gs
add
sbbb
mov
pop
pop
and
push
stos
es
test
mov
mov
pop
adc
ret
test
mov
mov
push
in
pop
lahf
inc
aam
shl
adc
push
xlat
mov
push
cmp
fcmovb
push
insb
adc
jne
nop
int
dec
mov
push
ss
xor
sahf
cmpsb
shrb
or
push
inc
lahf
xor
scas
push
fwait
out
out
repnz
add
sub
jmp
push
sub
mov
mov
int
dec
cmp
xor
mov
repnz
fs
and
inc
jmp
cmp
movsb
outsl
js
sub
inc
inc
cmpsb
inc
xchg
stos
xor
stc
lock
jo
scas
movsl
gs
call
pop
push
in
aaa
dec
sub
lds
mov
and
mov
pop
addr16
xchg
mov
in
mov
stos
imul
sbb
jns
adc
dec
fildll
pop
inc
sbb
orl
jne
jne
lcall
dec
add
jb
mov
lea
mov
test
cmpsl
cmp
pop
jno
inc
insb
adc
orw
mov
icebp
imul
sahf
dec
xor
int3
call
or
sarb
mov
xor
adc
mov
lea
repz
loopne
les
jns
sbb
cmc
jge
stos
dec
pop
int
sahf
xchg
pop
lods
mov
int3
mov
pushf
lret
jl
mov
das
arpl
dec
shlb
imulb
jle
xchg
enter
mov
jge
or
fmull
std
aam
sub
add
bswap
dec
jp
jecxz
inc
stc
dec
data16
pop
inc
sub
movsb
repnz
ret
jge
cmpsl
add
push
in
sbb
pop
cmp
in
aad
les
fwait
cmc
ljmp
xor
cmp
cli
stc
test
imul
push
lret
pop
lcall
movsl
iret
clc
push
test
adc
or
fidivs
out
pushf
hlt
dec
mov
jnp
adc
ljmp
movsb
mov
sub
mov
test
sarl
movl
pushw
xchg
fiaddl
aaa
adc
pushl
pinsrw
inc
fsubrp
popf
jecxz
mov
js
repnz
fmuls
addr16
jmp
fmuls
dec
adc
nop
insl
inc
pop
xchg
xchg
jnp
push
movsl
xor
test
adc
leave
sbb
jecxz
movsb
cmp
xchg
dec
ret
mov
decb
xor
mov
push
and
test
xor
bound
stos
cmp
loop
jmp
jb
rcll
mov
popf
into
dec
pop
cmp
fsubl
gs
fildl
mov
add
pop
xchg
imul
jmp
xor
fdivrs
cs
push
cs
push
mov
pop
data16
dec
ja
add
mov
inc
mov
push
push
int3
inc
cmp
in
add
xchg
rcl
pop
gs
int
es
adc
push
sar
inc
xlat
shl
sub
mov
inc
inc
or
int
xchg
push
mov
push
dec
cmovbe
ffree
jge
push
call
and
shll
jp
into
lret
push
pop
dec
std
dec
add
dec
mov
fcoml
test
pusha
sbbl
fistpl
and
xor
mov
sti
pop
jge
out
test
cld
ficoml
add
sub
dec
shll
adc
movsb
push
nop
and
mov
pop
cltd
leave
je
fisubrs
decb
leave
incl
push
scas
xor
data16
outsl
je
mov
adc
push
add
popa
cs
insb
cmpl
sbb
sub
shl
ja
cmp
push
subl
xor
xchg
sbb
out
mov
repnz
sub
test
xchg
inc
dec
mov
jo
inc
insb
or
mov
inc
fbstp
pop
repnz
orl
shlb
jns
repnz
outsb
popf
lods
lea
cmp
sub
jge
in
sub
jl
popf
stc
roll
mov
repz
mov
jp
outsl
popa
clc
imul
push
adc
mov
add
icebp
sub
push
repz
xlat
xchg
test
jle
stc
add
mov
outsb
dec
sub
rorl
mov
jnp
mov
icebp
xor
int
and
mov
lahf
std
or
fwait
aas
lds
stos
lds
ljmp
mov
dec
sti
lret
mov
mov
ss
sub
sahf
icebp
sub
mov
adc
into
jecxz
lahf
add
enter
xor
test
int3
bnd
ror
int3
push
mov
in
pop
pop
mov
mov
idivl
stc
pop
scas
std
xchg
mov
or
cmpsl
pop
xchg
pop
ljmp
mov
inc
add
pop
out
iret
push
pop
bnd
jecxz
xlat
aaa
orl
ret
je
call
sbb
cmp
add
xchg
sub
out
pop
fwait
pop
add
mov
xor
aas
andl
mov
mov
xlat
mov
rcrl
sahf
add
ds
enter
push
or
cmp
inc
dec
jns
and
add
sti
lock
scas
cld
inc
insl
cmp
lods
jecxz
pop
add
cmp
and
jo
call
loop
adc
es
aad
adc
data16
aad
and
adc
call
hlt
shll
mov
and
or
sbb
sbb
dec
test
js
push
stc
aas
push
dec
cs
ss
rcrl
fmuls
sbbl
lret
pop
clc
push
stos
mov
mov
sahf
lahf
sahf
inc
ds
add
or
inc
push
fistl
mov
repnz
adc
enter
push
or
push
pop
lock
into
sub
xor
fmull
vpslld
inc
gs
lret
int3
das
and
lahf
pavgw
lock
mov
fwait
movsl
sbb
sbbl
in
pop
jne
mov
dec
jmp
xor
shlb
imul
lahf
scas
cld
xor
adc
enter
imul
out
mov
cmc
mov
mov
sub
je
aam
ss
imul
sarl
pop
and
arpl
adc
dec
sbb
pop
add
clc
jne
fcoms
and
ja
jno
orl
adc
hlt
outsb
popa
mov
jnp
addb
adc
sbb
ffreep
fsub
xchg
test
pusha
movsl
pop
push
and
jo
pushf
mov
xor
lret
out
fisubs
mov
cltd
push
sub
loopne
ret
sbb
out
pushf
pop
fidivs
insl
rorl
pop
push
pop
jae
aam
ja
xchg
sbb
jb
dec
lcall
xor
push
pop
jmp
pushf
cltd
in
dec
inc
int
or
and
test
xchg
sahf
xorl
in
out
sbb
xchg
jl
daa
sub
inc
sti
cmc
out
sub
mov
cmp
jle
mov
inc
xchg
cmp
int
shll
cmp
aas
push
mov
xchg
push
and
sahf
lcall
xchg
lds
jns,pt
mov
rcrb
dec
add
jnp
test
push
faddp
mov
popf
mov
fs
mov
cld
lock
notb
sub
popa
mov
push
cmp
sbbl
push
lahf
jbe
pop
sub
shll
inc
into
jo
mov
sahf
sahf
out
cld
sub
xor
jmp
jnp
push
mov
sbbb
cmpsl
pop
mov
imul
sub
jl
dec
lods
out
mov
add
shrl
lret
jae
imul
push
pusha
push
mov
mov
pusha
xchg
call
or
call
or
mov
cmp
xchg
ds
pop
dec
mov
inc
jecxz
inc
xor
andb
es
mov
push
jb
adc
int3
jnp
mov
cmp
inc
mov
inc
push
xlat
add
jl
fs
mov
pop
mov
loopne
jae
jo
adc
sbb
dec
or
add
data16
cmp
sbb
adc
sbb
scas
xor
std
shl
cld
mov
adc
call
test
ljmp
fcmovbe
add
das
inc
inc
cmp
add
mov
push
int
enter
dec
or
bound
filds
xchg
loope
adc
inc
lea
fsub
arpl
or
xchg
xor
rorl
add
cwtl
icebp
and
and
ja
stos
sbb
cmp
leave
xchg
mov
fwait
sahf
iret
mov
enter
jns
nop
lret
add
xchg
movsb
cmc
js
jnp
ss
pushf
jb
xchg
ja
scas
stc
clc
cwtl
sub
push
orb
mov
cmp
data16
adc
test
inc
jmp
movsl
lods
mov
xchg
lret
pop
push
push
cmpsb
xchg
out
jecxz
setbe
ret
adc
inc
mov
add
call
repz
sub
iret
jp
add
lods
fidivrs
std
mov
xor
mov
mov
ret
xorl
lds
ss
xchg
mov
movsl
pop
mov
aas
xchg
hlt
lahf
cli
adc
incb
mov
mov
clc
rolb
sbb
xchg
sbb
cmp
cmp
dec
lds
dec
push
cmp
dec
std
lea
mov
cmp
jle
fdivrl
rcll
test
inc
jno
xchg
lret
shll
cmp
fildll
repz
pop
cld
push
pushf
sbb
arpl
dec
mov
int3
mov
sbb
pop
pop
inc
les
push
jno
shlb
mov
cmp
xchg
add
test
cmp
int
jg
jbe
cmp
add
xor
jne
pop
adc
in
inc
mov
push
stos
mov
xorl
rcl
mov
jp
addr16
push
inc
es
mov
mov
inc
scas
out
add
nop
idivl
ss
sub
repz
into
xchg
fcmovne
out
add
pop
xchg
xchg
fistl
scas
dec
into
xor
scas
scas
xor
add
and
xchg
add
frstor
scas
jg
insb
sub
inc
mov
push
fdiv
pop
rcrl
pop
pusha
cmp
cmpsb
movsl
cmpsb
mov
jbe
stos
jg
xchg
and
mov
popf
loop
stos
loopne
jae
out
insl
clc
movsb
jns
cmp
out
leave
push
jns
js
pushl
cmp
fistps
int
imul
hlt
dec
cmp
adc
imul
shl
dec
mov
mov
inc
or
fldl
test
ds
mov
push
in
sbb
cli
xchg
dec
jb
dec
lret
or
nop
inc
and
pop
repz
cld
hlt
xchg
and
jbe
jb
xlat
arpl
fldl
or
push
stos
ret
fidivrl
sahf
push
fcompl
jmp
dec
pushf
adc
mov
cmp
pop
scas
inc
test
sbb
or
push
jae
data16
xorl
adc
in
lods
dec
aaa
sub
in
sbb
mov
lret
inc
adc
sbb
pop
lock
lods
insl
imul
xchg
xchg
cmp
fwait
dec
cmp
pop
lcall
or
dec
pop
std
rclb
imul
imul
mov
loopne
pop
push
mov
test
jne
sub
scas
mov
sub
pop
loope
outsl
mov
in
lret
js
out
inc
or
and
cmc
mov
clc
stos
mov
xlat
sbb
int
jge
xchg
mov
xchg
mov
stc
ljmp
sub
out
cmp
jge
push
movsl
jl
loope
xchg
test
pop
mov
out
dec
js
mov
pop
and
ljmp
jae
cmpsl
out
fldenv
je
xchg
and
shlb
xchg
push
in
sbb
test
mov
stc
ficoms
or
dec
movsb
sbb
cmp
arpl
movsb
testb
fcomps
xor
lods
push
stos
in
ja
add
fisubrs
out
gs
movsb
stos
icebp
mov
mov
insb
jmp
cmpsl
bound
jae
enter
mov
gs
and
aas
fistl
sub
cmp
cmc
cwtl
sbb
sub
sarl
fs
pusha
adc
lock
call
data16
or
mov
ret
or
jle
mov
test
clc
imul
jae
fistl
mov
cmp
cmp
lods
shll
mov
mov
mov
insb
bound
cmp
add
fwait
or
mov
cmpl
hlt
arpl
xor
mov
jb
xor
inc
lea
cmp
push
cmp
aad
arpl
clc
adc
cmp
add
test
fstpt
ret
lret
std
xchg
push
or
pop
jno
push
dec
fbstp
std
sub
jp
dec
cs
jae
push
fsubr
mov
xor
sbb
stos
sub
mov
lock
inc
xchg
xchg
sbb
mov
push
jno
sub
mov
xor
sub
gs
xlat
lahf
nop
enter
mov
inc
sub
arpl
dec
ss
xchg
xchg
ljmp
in
sub
ror
xor
arpl
and
cmpsb
jb
fwait
add
sub
mov
je
fwait
add
shlb
cmp
cmc
imulb
imul
adc
imul
lock
in
scas
aaa
into
stos
mov
aaa
addr16
inc
pusha
jb
cmpsb
and
xorb
jg
sbb
adc
iret
dec
push
mov
cld
stos
jmp
dec
sub
jns
mov
push
rorl
fisttpll
lods
mov
xor
mov
xor
push
inc
fstl
ljmp
mov
or
aas
je
fsubp
jge
cmp
adc
cmp
addr16
push
mov
je
dec
or
jl
xchg
mov
or
popf
mov
mov
icebp
inc
adc
sbb
fbld
mov
ss
iret
add
dec
mov
in
dec
setns
pop
in
addr16
sub
addb
add
and
jne
out
or
adc
and
inc
lock
inc
fmull
jp
sahf
out
pop
sahf
sbb
xchg
imull
pusha
xor
sbb
div
and
aaa
in
sub
popa
iret
lret
push
mov
shlb
in
or
or
adc
jp
mul
hlt
sbb
out
jne
pop
adc
insb
aaa
and
xorl
shl
aad
fmull
xchg
repz
ret
cmpsl
jmp
bound
lcall
sub
cmc
and
push
movsb
xchg
mov
iret
xchg
mov
fistpll
pushf
fmuls
jge
and
push
pop
mov
mov
pop
adc
out
lds
fs
xor
aad
push
xor
mov
dec
push
imul
in
ret
inc
dec
and
xchg
fiaddl
inc
or
mov
sbb
fcmovu
std
adc
mov
push
jg
mov
sbb
push
xchg
sbb
mov
cmp
ss
jbe
xor
push
inc
iret
shrd
xchg
mov
pop
adc
add
je
stc
cmp
pop
adcb
jo
mov
das
in
adc
in
dec
loop
bnd
xchg
daa
shlb
xlat
mov
lods
mov
adc
ret
icebp
jp
sub
test
je
pop
orb
adc
daa
je
xor
in
sub
in
xchg
addr16
sti
pop
jns
mov
jmp
sbb
lock
aam
mov
cmc
cmpb
pop
das
xchg
pop
sub
stos
inc
adc
add
mov
pop
in
insb
jbe
sbb
push
les
bound
clc
pop
xor
xor
cmp
push
nop
in
test
cmpsb
mov
jle
cmpsb
push
jmp
leave
loop
stos
lods
mov
stos
cli
clc
push
add
mov
or
sub
jl
fs
push
outsl
jle
ja
dec
dec
jb
mov
push
cwtl
xchg
mov
push
stos
fs
xorl
jns
lcall
jbe
adc
push
inc
and
into
sub
push
inc
push
push
inc
xor
ljmp
loop
and
dec
test
cmpsb
in
mov
out
adc
push
popf
cmp
jle
mov
mov
sub
add
sahf
lcall
aam
ret
outsb
rorl
orb
lret
leave
addr16
mov
test
sbb
aam
fsub
xor
cmpsb
mov
in
lret
xor
stos
and
sub
add
and
orb
pop
xchg
adcl
xchg
mov
jg
sub
loopne
mov
or
cld
sbb
push
cmpsb
or
sbb
pushl
bound
and
nop
cmp
iret
add
aas
int
pop
pop
mov
sub
mov
mov
xchg
xchg
retw
mov
out
inc
mov
xchg
mov
mov
sub
test
pop
cli
test
jmp
loop
and
clc
cmp
cmp
xchg
mov
jp
aaa
sbb
jg
mov
stc
in
xchg
mov
jb
in
dec
sarb
jb
fsubrp
jmp
aaa
popf
push
daa
std
ret
daa
fdivrp
fdivrp
jmp
mov
jnp
loop
xchg
adc
cmp
adc
cmp
addl
mov
inc
mov
push
popa
pop
pop
mov
pop
stc
xchg
push
sub
xchg
daa
callw
fadds
push
stos
mov
xchg
pop
pushl
gs
lods
jb
mov
jg
cmpb
iret
adc
sub
mov
jb
or
fs
push
dec
out
popl
lock
cs
cmp
lret
xchg
sbb
hlt
adc
dec
arpl
pop
fcmovu
dec
int3
into
aad
repz
xchg
test
pushf
add
daa
repnz
notb
push
out
fbstp
pop
mov
or
loopne
or
rcr
fcomps
mov
ljmp
lcall
out
popa
push
dec
dec
xlat
rol
pop
xchg
pushf
shlb
fisttpl
or
stc
xor
or
scas
js
inc
sbb
cmp
mov
cmp
mov
jmp
adc
mov
data16
aas
sti
add
test
and
xchg
shl
mov
aad
or
sub
enter
push
xchg
adc
cmp
push
movsl
lods
cwtl
push
dec
add
std
inc
fisttpll
lea
stos
xchg
addr16
test
lcall
sub
adc
add
loopne
cmp
loop
add
es
rorl
sbb
jb
xor
inc
sub
mov
push
je
mov
das
sub
pop
xchg
adc
push
sarl
sbb
sub
lahf
or
int3
push
ljmp
ss
shll
push
jb
popf
add
add
pop
aad
xor
stc
pusha
xlat
lods
mov
hlt
inc
lea
or
ret
jp
loopne
mov
inc
mov
sbb
cs
mov
mov
cmp
shlb
inc
fcompl
inc
fildll
ret
bound
dec
and
lock
ljmp
push
lods
cmp
idivb
dec
cs
xchg
jecxz
and
mov
add
mov
fs
stos
sub
inc
mov
push
ss
scas
and
pusha
adc
jmp
ss
inc
push
xchg
ljmp
loopne
xor
aaa
mov
fs
cmp
cmpsb
mov
in
test
adc
rorb
test
icebp
enter
pop
pop
pop
sahf
pop
loopne
das
cmp
pop
out
and
fisubl
push
mov
mov
mov
into
cwtl
jne
fdivrl
pop
and
mov
sbb
decl
aaa
rolb
push
mov
adc
inc
shrb
xchg
std
out
jle
lock
mov
loopne
lret
pushf
pop
inc
or
xchg
push
lcall
imul
repnz
cltd
sub
pop
scas
mov
add
inc
xchg
mov
add
lret
imul
and
jae
pusha
popf
repnz
rorl
push
mov
dec
jnp
fisttpl
mov
cmc
dec
aam
subb
cmpsl
faddl
scas
xchg
sti
loop
or
iret
gs
push
or
popf
cs
cli
out
sti
sbb
rorl
mov
mov
mov
or
repnz
and
or
adc
arpl
push
mov
imul
outsl
pop
or
arpl
pop
insb
sbb
enter
lcall
mov
xor
cmp
daa
pop
mov
dec
mov
leave
repz
mov
or
test
dec
jb
add
sbb
and
cmpsl
inc
push
mov
insb
cmpsb
arpl
aad
jge
jbe
in
pop
sub
mov
push
mov
mov
xchg
or
mov
push
hlt
movsb
pop
xlat
and
xor
iret
inc
jle
xchg
xor
push
fs
sti
xor
popa
push
mov
int
lret
insb
scas
sub
arpl
jl
mov
xchg
lret
rep
xor
or
mov
jp
inc
and
xchg
inc
sub
dec
dec
push
push
mov
cmp
in
xchg
mov
push
ror
mov
fwait
test
dec
repnz
iret
push
jae
xchg
mov
inc
sar
pop
push
add
jno
xchg
ja
clc
xchg
sbb
es
push
cs
into
mov
cwtl
xchg
adc
mulb
pop
pop
ret
lock
sar
push
cmp
and
mov
ret
call
cmp
sub
pop
and
scas
out
xor
dec
loope
fs
sub
xchg
mov
popa
mov
aad
push
sbb
lcall
sub
dec
mov
sbb
out
mov
or
jl
andb
adc
xor
out
into
adcl
inc
int3
daa
std
bound
mov
insb
test
push
xor
add
dec
lods
fwait
xchg
fwait
and
rcrl
cmpsl
ret
mov
outsb
pop
fcoms
clc
imul
mov
cmp
or
push
push
mov
ds
subb
mov
pop
leave
cmpsl
inc
rcrl
add
mov
stc
scas
fisttpl
mov
aam
mov
dec
cli
lcall
push
test
xlat
cmp
inc
xchg
popa
std
sbb
inc
flds
imul
testb
icebp
outsl
jbe
icebp
clc
stos
cmp
xchg
imul
scas
lds
testl
inc
inc
inc
aas
pop
xchg
pop
xchg
lahf
adc
jge
stos
mov
outsb
iret
cld
repz
ja
cli
scas
fists
out
or
call
jne
jnp
push
std
out
add
xchg
repnz
mov
push
sub
jle
push
fwait
mov
adc
aad
mov
xchg
push
pop
push
int
sbb
fiaddl
jmp
xlat
jns
dec
push
mov
mov
and
or
mov
lods
cmp
mov
test
cwtl
xor
mov
jb
xchg
jns
je
sti
ja
shrl
mulb
and
sar
jmp
dec
imul
cmpb
pop
jnp
sahf
divl
jno
xchg
outsb
repz
push
pop
iret
dec
cmp
and
push
cmp
mov
addb
lods
cmp
jl
pop
or
push
lods
imul
incl
ljmp
cwtl
fucom
out
into
xchg
in
cld
cmpsb
popf
cmp
xor
lock
mov
add
sbb
aam
cmp
inc
push
and
dec
repnz
xchg
sub
add
push
jns
in
sub
sub
xchg
pop
cmp
mov
stc
inc
xchg
jnp
xchg
out
or
sbb
push
out
adc
and
push
push
in
inc
stos
cmp
decb
sub
popf
lret
test
repnz
movl
test
mov
sub
clc
shl
cmpsb
push
sub
mov
lods
cmp
xchg
pop
cwtl
xchg
std
out
add
hlt
cmp
iret
jp
aaa
out
sahf
xor
sub
jge
lahf
pop
enter
ljmp
shll
jge
lods
cmp
mov
mov
dec
xchg
mov
fidivrl
cmpsl
jnp
pop
sub
mov
sbb
cmpsb
jo
in
dec
fwait
ja
in
xchg
add
dec
sbb
imul
jb
push
xor
mov
mov
lea
jnp
xor
mov
mov
test
sbb
sahf
adc
push
mov
test
fisubs
jnp
aam
cmpsl
xor
shll
mov
pop
sbb
sbb
xchg
xor
mov
pop
xor
xchg
fcmovu
dec
iret
mov
pop
xchg
gs
inc
inc
mov
or
pop
dec
gs
mov
push
rcrl
mov
test
xor
loope
jae
jo
push
cmp
or
packssdw
hlt
pop
ss
dec
or
into
lahf
xchg
push
push
mov
enter
add
out
sbb
fucom
jmp
mov
mov
iret
fadd
jnp
cltd
adc
push
pop
xor
jnp
push
mov
sbb
xor
repnz
adc
fs
in
dec
mov
mov
addr16
cmc
shrl
fdivl
xor
add
movsb
or
clc
add
insb
imul
stc
das
in
leave
xchg
dec
mov
xlat
jmp
adc
inc
hlt
fnsave
scas
insl
add
insl
mov
pop
sbb
fcoms
jns
pop
xchg
mov
add
xlat
gs
loope
mov
add
clc
mov
mov
nop
jmp
dec
jne
sahf
jp
out
inc
popf
imul
loope
xchg
push
into
mov
xchg
pop
sahf
xchg
mov
jo
adc
add
push
mov
lahf
fscale
or
lahf
ret
cmpl
lea
and
je
jle
sbb
push
int
push
pop
mov
notl
dec
cltd
gs
pop
jno,pn
sbb
gs
and
mov
and
add
incl
lea
push
loop
pop
push
add
add
js
and
fbstp
bnd
pop
inc
push
xor
out
inc
frstor
pop
call
sbb
movsb
sbb
add
pop
leave
or
imul
adc
push
push
sarb
and
fsub
mov
pop
shrl
and
add
stos
movsb
xchg
rolb
out
gs
outsl
push
sti
stos
pop
mov
std
mov
popf
out
mov
lods
cmp
lret
xchg
xor
adc
inc
sub
hlt
imul
bound
jl
cmp
mov
hlt
push
add
and
and
sbb
pop
fwait
cmc
inc
lret
cmp
push
and
ficomps
bound
and
add
out
push
mov
pop
pop
cmpsl
or
fldl
in
addr16
xchg
cmp
sub
push
je
fsub
or
push
cmp
testb
inc
push
int
fmul
int3
stos
lahf
lret
xor
dec
fidivrs
inc
out
jle
push
ret
sbb
int
cmp
loope
xchg
outsb
pop
mov
jg
push
and
inc
pop
sbb
mov
inc
xchg
and
sub
and
lahf
stos
adc
and
inc
mov
imul
loope
test
push
fucomp
inc
dec
rcrl
insb
in
add
cmp
cli
pslld
addr16
add
push
push
test
cli
cmp
xchg
mov
mov
xor
or
cmp
adc
push
jbe
sbb
out
or
fsts
xchg
adc
sub
or
jb
cmp
outsb
cmpsl
mov
pusha
jno
lcall
cmp
sbb
roll
hlt
pop
pop
enter
in
popa
scas
cmpsl
xorl
sbb
in
adc
mov
fistpll
push
fiaddl
frstor
loope
clc
test
outsl
loope
lahf
rcrb
xor
sbb
mov
stos
in
jno
mov
out
dec
scas
insb
push
or
stos
sbb
loopne
jp
add
loope
in
push
mov
cmp
xchg
and
jg
add
or
fsubr
add
xchg
or
push
bound
or
dec
pop
fldl
stos
clc
es
sbb
fwait
testl
mov
sti
xchg
lock
rorl
cli
xor
fwait
push
bound
aas
scas
dec
repz
call
mov
pop
cwtl
dec
lahf
lds
jns
ljmp
jae
jmp
xchg
mov
dec
or
jmp
rclb
popf
mov
ffree
ds
pop
add
in
dec
stos
imull
loope
push
cwtl
pop
xchg
mov
insl
xor
fldl
sbb
fists
push
xchg
sub
and
dec
jns
or
adc
push
sarb
rolb
cmp
cmpb
mov
inc
pop
scas
inc
mov
ja
pop
imul
dec
in
cmp
data16
and
push
ret
xchg
pop
cwtl
pusha
mov
push
insl
sbb
mov
andl
cmp
popf
adcb
int3
jecxz
dec
jae
fwait
data16
mov
push
sub
mov
and
imul
aad
adc
pop
push
inc
mov
mov
popf
xchg
xchg
cmp
jbe
rorl
add
adc
dec
pop
lods
cltd
cltd
xor
mov
outsl
or
lret
mov
pushf
std
xchg
mov
cmc
mov
dec
popa
mov
cmpsb
or
lea
incb
fs
mov
add
pop
pop
sbb
or
div
xchg
cs
push
test
push
mov
daa
movsb
push
adc
cmp
pop
pop
ror
cmc
test
xchg
ds
addb
gs
jge
fnstenv
sbb
lock
pop
xor
int
push
jno
aaa
cmp
inc
notl
cmp
or
mov
rolb
dec
sub
lods
jmp
cmp
sbbb
push
adc
repz
sbb
pusha
xor
inc
sbb
fcmovbe
mov
arpl
lock
movsb
jg
mov
sbb
add
xchg
mov
and
mov
test
out
or
fs
or
xchg
cmp
shll
mov
repnz
sub
aaa
pop
and
cltd
aad
mov
adc
pushf
and
lods
les
repnz
xchg
adc
adcb
xchg
pop
ds
movsb
jo
movsl
mov
insl
mov
pushf
mov
repz
cmp
pop
loop
out
jl
or
mov
movsb
cwtl
shr
jl
int
dec
into
shlb
or
leave
inc
loopne
fisubrs
and
and
mov
jle
je
loop
dec
mov
dec
ret
xor
cli
sbb
ds
pop
cvttps2pi
scas
push
lcall
aam
jle
adc
xchg
leave
sbbl
repz
jmp
in
add
in
insb
rcll
andb
jle
mov
nop
add
inc
stos
rorl
test
aaa
sub
addr16
lret
push
inc
xor
js
mov
add
or
xor
sbb
mov
sahf
adc
adcb
jne
add
jmp
ja
outsl
pop
cmp
mov
mov
test
out
rcl
mov
mov
mov
xlat
rcll
cmpsl
pop
mov
aad
popa
jge
bound
cmp
xor
in
out
or
inc
test
mov
and
pop
jl
mov
xor
dec
add
pushf
jbe
xchg
add
ds
aas
out
inc
push
jae
xorb
subl
push
adc
mov
dec
nop
rcl
mov
pop
out
jbe
and
int
test
xor
or
clc
mov
fldenv
push
outsl
jbe
fcomip
pop
mov
imul
lahf
rcrl
shll
orb
xlat
dec
ret
sbb
ret
pop
cmp
scas
out
add
sub
insb
xlat
push
pop
lcall
jnp
xchg
pop
xchg
inc
adc
scas
pop
icebp
dec
inc
mov
xchg
jae
cmp
add
adc
ret
lcall
pop
sti
pop
fsts
adc
jg
inc
cs
xor
in
xchg
cmp
push
ja
or
nop
mov
outsl
xor
push
inc
fwait
arpl
andl
insl
mov
jecxz
ja
mov
pop
sub
insl
ror
mov
inc
addl
stos
imulb
fnstsw
scas
add
or
xchg
movsl
xchg
sub
adc
add
dec
push
icebp
sub
pop
xchg
iret
and
leave
mov
adc
dec
stc
lret
pop
scas
mov
lock
dec
sahf
jle
aaa
lods
mov
fidivrl
add
xchg
shll
stos
cmc
jne
out
dec
adc
adc
daa
pop
inc
adc
cld
mov
push
add
pop
clc
xor
add
int3
mov
lcall
xchg
dec
push
inc
sub
or
daa
adc
cmc
mov
or
or
mov
scas
iret
inc
push
jbe
sbb
cltd
cmpsl
add
mov
cmpsl
mul
mov
jl
mov
loop
xchg
call
repz
pop
popa
stc
jl
jge
vpmacssww
xchg
int3
inc
ds
mov
inc
ljmp
cwtl
lahf
scas
out
std
mov
pop
xor
push
push
movsb
outsl
pop
nop
sbb
std
pop
cmpsl
test
stos
add
or
dec
sti
outsl
jmp
mov
std
test
mov
push
add
sub
ret
pop
add
addl
pop
mov
pop
dec
push
push
push
in
cmp
add
bsf
dec
xchg
jecxz
shr
and
ret
mov
jnp
loope
xorl
or
dec
fidivrl
xchg
stos
stos
or
les
loopne
fdivrl
iret
mov
int
sbb
int
js
and
ljmp
cmp
mov
fistpl
push
jp
sub
fldl
adc
xchg
xchg
jg
push
aad
mov
adc
into
mov
cmp
scas
cs
enter
push
imulb
cmpsb
ds
jbe
sub
aaa
push
xchg
sbb
jbe
and
fwait
ror
adc
add
jno
pusha
das
mov
enter
aaa
dec
jno
xor
scas
roll
xor
adcl
stc
xchg
pusha
dec
adc
ret
inc
pop
jno
xor
inc
sub
xor
dec
movsl
dec
dec
sbb
rcrb
xlat
jp
lret
insb
repz
mov
or
in
addr16
lahf
lea
sub
xchg
ja
push
mov
inc
mov
xchg
loopne
insl
js
icebp
das
lods
dec
mov
bound
sub
bound
add
pusha
xor
pushl
int3
push
xchg
js
sahf
out
pusha
xchg
jnp
iret
gs
repnz
ret
decb
or
out
adc
sub
sahf
adc
aaa
push
dec
jp
rcrl
out
sbb
xchg
addb
mov
adc
cmc
pusha
test
mov
jmp
sti
sbb
xor
cmp
int3
aad
pushf
jns
in
addb
daa
xor
data16
dec
scas
or
popa
or
mov
mov
sbb
mov
pop
mov
adc
repz
dec
inc
jecxz
sti
pushf
popa
fsts
adc
pusha
push
or
mov
add
cmpsb
push
gs
and
outsl
add
aad
or
ret
cmpsl
in
adc
call
mov
stos
leave
adc
outsl
mov
nop
pop
test
inc
fs
loop
xor
int3
movsb
orb
sbb
and
mov
and
imul
dec
pop
sti
sbb
sbb
jae
jl
mov
and
dec
jne,pt
ret
mov
jl
repz
push
popa
rclb
mov
aam
in
jae,pn
scas
xchg
loop
and
xchg
push
sbb
push
sahf
in
fsubl
pop
imul
je
mov
shlb
xlat
adc
push
jne
pop
ror
adc
lods
scas
add
test
jnp
call
lret
imul
es
out
iret
adc
loop
dec
pop
adc
insb
mov
clc
push
ret
mov
mov
push
fstpl
mov
cwtl
dec
in
push
jmp
xor
dec
xchg
in
into
sti
inc
and
pop
xor
inc
ret
xor
xchg
out
mov
repz
out
xlat
push
loopne
in
mov
xor
fisttpl
inc
sbb
mov
bound
subb
sub
pop
aaa
sub
ffreep
or
and
sbb
mov
mov
pop
cmp
pushf
jl
bound
dec
inc
cltd
cmpsl
movsl
mov
inc
loopne
outsb
popf
popa
dec
add
into
mov
jecxz
fisubrl
jl
or
rep
jae
out
jns
loope
mov
mov
cld
inc
sysret
push
lods
xor
subb
std
pushf
roll
jo
es
test
cmp
push
adc
mov
hlt
pop
cmpsb
cmp
popa
bound
xor
or
and
nop
and
loopne
iret
shrl
ds
push
jae
loopne
mov
sbb
xchg
test
push
stc
mov
mov
into
popf
fwait
push
xchg
out
sbb
xchg
mov
mov
daa
call
into
xlat
outsl
push
pusha
jnp
sub
cli
dec
xchg
cli
push
fwait
xor
ja
dec
or
cmp
imul
sub
ljmp
insb
adc
jg
movsb
push
sub
xor
push
mov
add
mov
and
test
and
xor
cmp
mov
inc
cmp
aaa
addr16
mov
lock
xchg
out
rcr
cmp
pop
in
lock
clc
ds
or
push
jne
cmp
sub
dec
repnz
test
shrl
pop
int3
and
shlb
loop
jg
scas
in
ss
pop
cmp
push
icebp
pop
dec
jg
mov
xor
mov
adc
call
mov
cs
in
in
mov
je
sub
inc
or
cmp
push
outsb
adc
sbb
fmuls
sub
adc
test
inc
and
jge
xor
inc
xchg
push
sub
xchg
pop
lods
fisubl
sub
ljmp
loop
stc
fnop
popf
cmp
jg
ss
sti
loope
push
adc
mov
add
lret
mov
add
cmp
sar
push
jmp
je
in
imul
pop
mov
or
xor
movsb
sar
or
xor
test
pop
mov
inc
shrl
push
xchg
inc
jmp
pop
es
mov
or
loope
mov
dec
mov
jl
adc
fcmovnu
shlb
adc
popl
mov
lahf
bnd
xchg
adc
inc
add
mov
adc
addb
in
fildll
mov
call
mov
bound
hlt
pop
mov
je
pop
inc
fdivs
test
incl
fiadds
ss
and
dec
ljmp
imul
mov
insb
hlt
inc
stos
mov
mov
pop
fimuls
jge
inc
cmp
xor
jo
idivl
stos
aaa
push
cmp
iret
lock
pop
aad
adc
jb
push
mov
fnstenv
sbb
das
sbb
push
rorb
es
and
in
add
push
xor
cmp
xor
xchg
xor
gs
stc
test
jns
jmp
rorl
adc
add
xchg
pop
aas
fwait
nop
mov
mov
bound
loope
and
js,pn
in
pop
lock
lds
dec
push
cwtl
aad
pop
mov
sarb
loop
ret
gs
cmp
xor
lods
cmc
mov
fdivl
add
hlt
pop
ja
lock
hlt
fdivr
mov
mov
mov
cmp
loop
xchg
lock
ret
push
sub
insb
or
lock
andb
or
test
push
repnz
cld
inc
push
jle
jnp
and
iret
inc
les
in
add
popa
es
sbb
add
movsb
jne
iret
push
nop
or
imul
pop
inc
sub
cld
mov
mov
sbb
xchg
hlt
test
jne
stos
xor
jno
jno
cli
insl
stos
shrb
dec
or
repz
das
inc
and
cmc
sub
xchg
add
scas
mov
push
mov
mov
fdiv
mov
mov
xchg
mov
rolb
loopne
sbb
xchg
xchg
movsl
sub
cs
and
mov
cmp
fcmovu
sahf
fwait
and
shlb
add
shl
sub
sub
in
mov
roll
hlt
fnstcw
out
push
jp
or
sub
sarl
push
dec
stc
mov
ljmp
inc
stos
int
inc
lock
inc
sbb
repz
mov
popa
inc
loopne
outsb
outsb
mov
dec
or
xor
xchg
rcrl
inc
repnz
out
mov
lds
adc
gs
mov
lcall
pop
fsubp
xor
inc
in
ror
and
adc
pop
sbb
test
rorl
idivl
jno
cmpsb
orl
dec
inc
cmp
mov
add
adc
or
xor
pop
or
test
mov
xchg
repz
jg
inc
out
push
test
mov
call
lea
or
nop
mov
xor
sub
pop
in
inc
inc
mov
push
into
jno
push
xor
aad
jg
js
ret
mov
sbb
stos
add
xor
mov
mov
add
push
test
mov
lods
in
stc
push
jns
pop
loop
inc
add
cli
arpl
andb
les
xor
xchg
jge,pt
cmpsb
xor
inc
sbb
push
mov
sarl
mov
push
ret
dec
push
mov
cmpsb
pop
dec
mov
cmp
push
dec
stc
mov
pushf
js
jbe
addr16
mov
or
es
imul
push
sub
jl
jg
or
aad
outsb
es
mov
cltd
sti
mov
push
cmp
mov
and
push
aad
test
das
scas
add
lcall
sub
neg
inc
dec
ds
jmp
andb
jmp
mov
adc
and
or
fsubrs
outsl
int
test
divl
lods
js
jg
add
cli
mov
sub
add
insl
lods
push
clc
aam
jno
mov
out
fidivs
xchg
mov
adc
lret
sub
movsl
xchg
icebp
pusha
pop
xchg
jg
sbb
lds
fldl
popf
xlat
cmp
lcall
jnp
xchg
pop
jg
inc
mov
cmpsb
ret
fwait
gs
jmp
repz
xchg
loope,pt
dec
xor
clc
sbb
push
jle
dec
xor
jmp
mov
mov
xchg
xchg
mov
add
fs
test
daa
mov
int3
adc
addr16
out
stos
xchg
jmp
bound
lock
cmp
inc
or
cmp
sub
mov
adcl
pushl
or
out
ret
daa
mov
mov
orb
mov
lock
mov
lret
xor
lds
xor
sarl
sbb
mov
mov
out
mov
fwait
add
insl
and
xor
jbe
data16
insl
das
cs
push
adc
cwtl
sti
out
cmp
mov
pop
or
addr16
rolb
cvttps2pi
scas
mov
push
clc
push
fs
outsl
sti
shr
dec
adc
add
ljmp
or
inc
insb
aad
jb
flds
mov
loope
mov
jns
dec
out
mov
shl
out
imul
push
cmp
xlat
xchg
mov
fwait
mov
sti
adc
jg
inc
ljmp
das
mov
mov
andb
aam
imul
pop
and
les
pusha
std
dec
lcall
add
add
pop
mov
jno
sti
adc
ds
add
data16
xchg
sbb
scas
pop
mov
orb
inc
xorl
push
add
xor
add
cmp
sub
test
sub
shl
into
adc
outsb
jp
test
add
bound
test
mov
jg
outsl
push
or
xchg
mov
sti
and
jmp
cmp
add
xchg
fisubrs
gs
add
jle
sub
imul
ja
jbe
mov
and
mov
mov
bndstx
push
aad
test
jbe
cltd
gs
test
fistpll
in
dec
idivb
pop
jmp
cmpsb
fists
jmp
call
out
nop
push
loopne
jae
or
lock
fmul
push
or
inc
jbe
inc
lcall
iret
mov
icebp
fisttpll
fwait
das
sbb
lods
jp
mov
decb
jecxz
or
mov
inc
xor
das
dec
sahf
mov
jne
orb
std
mov
mov
push
sub
jmp
popa
mov
jo
je
xchg
pop
inc
xchg
nop
scas
xchg
mov
rcll
inc
lods
shll
xchg
je
into
push
mov
pop
in
cmp
cmp
jne
loopne
in
mov
lcall
push
scas
scas
pushl
lock
and
ljmp
or
shll
ljmp
xlat
xchg
pushf
push
cmp
push
pop
xor
es
shlb
iret
mov
push
sti
or
cmp
sbbl
aad
adc
mov
lahf
jno
js
test
shr
stc
aaa
test
jo
pusha
inc
xor
mov
cmp
and
pop
in
dec
ja
mov
sub
lea
cwtl
xlat
add
push
cld
adc
sbb
dec
stc
or
cmp
mov
push
jmp
add
loopne
pmulhuw
pop
sbb
in
and
inc
xchg
add
mov
jle
mov
neg
mov
xchg
sbb
repz
ret
xchg
icebp
insb
jmp
mov
push
in
or
enter
insb
nop
mov
data16
inc
push
mov
xchg
jp
jle
out
lret
pop
cmp
mov
lock
fisubs
push
cltd
sbb
mov
push
scas
mov
xor
jg
mov
pop
jno
pop
push
mov
mov
xorl
add
shrb
xchg
dec
lahf
subb
xor
or
fildl
or
in
adc
jmp
dec
repz
fucom
lcall
addr16
add
jg
mov
or
mov
leave
test
push
mov
subps
jbe
jg
pop
outsl
and
jg
gs
dec
and
cwtl
mov
xor
mov
pushf
lock
ja
sbb
cmp
lret
inc
mov
mov
push
insl
adc
repz
fimull
lret
jnp
and
mov
mov
mov
pop
repnz
mov
pop
inc
xchg
in
cld
xor
mov
xchg
inc
out
outsl
test
ljmp
pop
iret
dec
and
les
pop
lcall
mov
ret
fwait
add
mov
pop
and
arpl
pop
mov
ja
sbb
xor
in
orl
lock
mov
xor
push
xchg
aaa
mov
xor
fsubr
add
ret
pop
push
adc
cmpsl
push
inc
stc
xchg
xor
mov
adc
or
stc
sbb
imul
dec
enter
xor
adc
repz
jle
nop
daa
and
dec
and
xor
aam
shll
cltd
pop
cmpsl
push
and
movsb
jle
int
fldl
jne
mov
fidivrl
mov
push
inc
pop
push
mov
add
rcrb
adc
mov
out
loopne
mov
mov
mov
mov
dec
lcall
pop
cmp
mov
inc
pop
inc
add
push
push
xchg
test
test
nop
mov
mov
ja
imul
fcom
imul
dec
lds
mulb
xchg
mov
sbb
inc
sub
and
xor
sbb
inc
and
sbbb
in
cmp
test
scas
jle
push
mov
or
jno
jg
mov
jae
pop
icebp
hlt
cltd
pavgb
sbb
mov
pop
add
or
mov
jge
jae
js
test
lret
stos
or
daa
cli
stc
jl
jle
int
les
call
jl
sti
dec
ror
mov
pop
fdivr
orb
jge
mov
or
dec
icebp
cmpsl
and
add
fisttps
lret
xchg
in
ss
pop
or
cltd
push
and
in
scas
addr16
popf
nop
mov
and
stc
cmpsb
mov
adc
pusha
pop
dec
xor
loop
inc
add
call
fwait
stos
adc
je
data16
sti
xchg
enter
pop
in
in
xor
push
and
push
ja
fiaddl
rcll
sub
into
es
sbb
lods
iret
je
shr
ret
lea
xchg
sbb
pushf
fs
mov
add
and
outsb
mov
int
cmp
jae
xor
pushf
inc
iret
sub
add
xlat
mov
xor
arpl
mov
out
adc
mov
cwtl
mov
cmpsb
push
pop
and
inc
nop
jbe
inc
loope
xchg
mov
xchg
mov
clc
cmp
icebp
cld
bound
cmpl
sub
sub
jp
xchg
pop
aam
push
jl
js
xor
and
pop
sbb
inc
inc
divps
adc
sbb
sbb
push
cltd
sub
dec
push
jl
aam
dec
pop
sub
in
and
and
sahf
inc
add
iret
fmulp
xor
roll
dec
dec
loop
andl
push
and
pop
mov
mov
rcrl
fs
scas
sub
sti
cmp
push
add
ss
adc
xchg
jl
ret
test
sbb
mov
lods
arpl
and
xor
ss
jle
fdiv
rorl
cmp
movsl
clc
cmp
mov
movsb
adc
inc
inc
inc
xchg
scas
push
fs
outsb
push
jns
cmpsb
scas
in
dec
adc
loope
stos
outsb
pop
mov
sub
addb
push
into
mov
sbb
mov
sbb
inc
cmp
xchg
dec
data16
dec
inc
mov
mov
cmp
js
enter
mov
lret
xor
out
adc
push
ss
enter
scas
movsb
pop
cwtl
xchg
inc
jg
or
pop
inc
adc
add
jno
dec
sub
insb
loope
dec
jmp
ja
cmp
aaa
and
sarb
and
sub
pop
pushf
test
es
pop
pop
shll
repz
sbb
xchg
dec
fucomip
lret
movsb
das
mov
xor
decb
push
cli
nop
add
add
xor
imul
jb
mov
repnz
pop
pcmpgtb
mov
fisubl
or
jmp
stos
or
push
adc
rclb
pop
mov
pop
ud1
cld
sbb
adc
pushf
cmc
cli
cmp
sub
shrb
je
push
push
jg
ds
lahf
pop
xchg
loop
nop
lods
dec
and
or
xchg
aaa
ja
rorl
call
xor
ret
sbb
dec
add
cmp
xchg
xor
stos
add
mov
rcl
arpl
dec
pushf
jmp
aad
jge
add
lret
jnp
pop
in
sbb
mov
adc
dec
clc
dec
int
xchg
xor
xor
out
sub
insb
jb
rol
adc
inc
je
cs
negl
inc
cli
mov
dec
and
push
sub
or
in
push
xchg
fidivs
ljmp
jno
xlat
fwait
mov
push
lcall
mov
push
loop
adc
mov
push
pop
fdivs
test
js
mov
cmc
xchg
xor
inc
dec
pop
mov
in
mov
popl
mov
in
les
fildl
and
jle
sub
fisttpl
dec
roll
leave
arpl
xor
ret
sub
in
std
inc
sbb
ds
xor
xchg
inc
or
fimuls
mov
mov
ja
dec
insl
jbe
es
flds
mov
xchg
or
sbb
addr16
mov
jbe
in
jnp
inc
fwait
sbb
mov
int3
and
aaa
jmp
test
std
mov
adc
iret
je
mov
xor
enter
sub
mov
movl
pop
xchg
gs
cwtl
cmp
pop
cmp
add
fcoms
inc
xchg
adc
xchg
sub
repnz
insb
or
pop
daa
clc
imull
into
roll
xchg
or
aaa
adc
rcrl
cmp
jnp
or
lock
push
nop
das
sub
js
mov
je
fistpl
mov
xchg
insb
sbb
jno
imul
bound
cmp
push
cltd
and
cmp
adc
adc
scas
jge
out
xchg
outsb
push
xor
pop
imul
and
mov
sahf
adcl
cmpsl
and
ds
lret
cmpsb
bound
dec
insb
xor
inc
dec
aaa
or
cld
lcall
inc
mov
inc
cmp
jmp
mov
jae
in
nop
and
add
jecxz
insb
fbstp
movsl
or
aas
dec
aas
xchg
roll
aam
or
out
mov
sub
les
js
ja
dec
int
inc
push
xor
sbb
push
jmp
mov
notb
bound
inc
popf
test
insl
repnz
inc
and
notb
sub
int3
aas
mov
fdiv
jns
enter
ret
push
adc
int
ja
xor
cmp
stc
or
and
wrmsr
out
or
pop
xchg
int3
push
test
and
jmp
rcr
jns
dec
fsubrp
rcrb
mov
xchg
dec
cs
aad
and
int3
xor
pop
jl
pop
cwtl
out
jo
repz
lods
mov
rcrb
adc
shlb
test
pop
inc
inc
and
in
insb
std
loop
lret
insl
js
in
decl
and
insb
dec
cmpsb
add
dec
adc
imul
test
xchg
or
clc
lock
cmp
imul
stos
addb
mov
and
loopne
adc
jge
lock
cld
pop
rol
lea
repz
aaa
clc
fidivs
in
xchg
es
xchg
fmuls
xorl
inc
lds
in
sbbb
sbb
inc
and
dec
stc
inc
lret
and
call
push
outsl
xchg
fsubrs
shll
sbb
dec
xor
mov
cld
fsts
rcrl
mov
cmp
imul
mov
pusha
push
test
push
add
divl
xchg
int3
add
inc
add
sbb
in
imul
xchg
clc
cmp
jl
insb
repnz
xorb
sub
sbb
test
sbb
jnp
jle
in
cltd
and
cmpsl
mov
inc
pop
mov
cmp
mov
fs
je
subb
pop
addr16
push
mov
mov
add
and
or
adc
xor
repz
sbb
je
jecxz
sbb
inc
adc
stc
lock
xchg
or
aam
ret
lahf
pop
mov
xor
mov
and
aam
xchg
pop
test
xchg
xchg
and
xchg
insb
clc
shr
call
andl
add
pop
xchg
jmp
pop
lret
repz
fstpt
cmpsl
or
loop
push
pop
sti
hlt
sbb
int
sbb
enter
test
or
fstl
fimuls
sbb
sub
fs
fstpt
lea
rcrl
scas
bound
or
dec
sbb
test
mov
fcmovne
or
test
dec
subb
out
jb
lods
inc
ljmp
cmp
fwait
insl
adcb
hlt
out
mov
popl
push
mov
icebp
repnz
mov
stos
pop
inc
jb
int3
mov
or
xor
xchg
and
sbb
testl
add
jmp
or
gs
ret
pop
sti
xchg
jp
lods
or
les
cmp
cld
fisubrl
add
and
hlt
fisttpl
push
pushf
icebp
mov
in
sbb
push
imul
mov
push
leave
cmp
bound
mov
es
js
and
sub
jnp
sub
mov
mov
mov
mov
and
sbb
jo
and
cs
data16
pop
loope
mov
mov
dec
mov
dec
mov
sub
icebp
adc
jle
xchg
dec
push
lret
leave
test
and
repz
lock
xor
xlat
dec
ljmp
imul
inc
dec
mov
fxch
ja
imul
cmp
clc
jb,pn
and
dec
nop
and
dec
les
jle
cmp
mov
dec
fdivl
add
cmp
test
mov
js
lock
jno
les
cmp
pop
pop
push
movsl
inc
outsb
in
sbb
pop
mov
test
push
push
ds
nop
or
sbb
xchg
lock
jle
mov
and
push
idivl
scas
fs
push
lcall
mov
mov
cmp
insl
xor
mov
iret
sub
or
ds
aam
cmp
arpl
addl
das
jge
mov
push
cmp
inc
fmul
insl
fwait
cmp
sahf
bound
mov
inc
lds
es
xchg
aaa
pop
mov
adc
ljmp
mov
dec
mov
sbb
jp
mov
aad
cmpsl
sbbl
sbb
mov
fdiv
adc
jge
iret
push
mov
and
test
je
test
movb
fld
sbb
lea
lahf
imul
subl
popa
add
popf
cmc
cmp
xchg
int3
xchg
push
push
js
mov
xchg
mov
fnstenv
repnz
cmp
movsl
aaa
inc
sub
cli
nop
mov
or
xchg
fcomps
in
out
add
rorb
or
lgs
mov
fsubs
adc
jmp
dec
in
sub
mov
fcoml
cli
inc
jle
mov
cwtl
icebp
jg
or
dec
aaa
iret
xor
mov
xchg
arpl
cmp
mov
addr16
jmp
lahf
mov
inc
imul
loopne
out
push
in
cld
lret
or
push
gs
add
and
add
int3
sbb
push
mov
fsubs
mov
ja
es
clc
aad
fcomip
clc
xchg
rolb
dec
mov
movsb
adc
leave
insb
test
push
ret
xchg
sub
push
clc
or
pop
dec
pop
gs
pop
hlt
dec
repz
popl
sbb
ja
jecxz
or
insl
in
push
dec
fs
pusha
add
popa
add
insb
jbe
insl
imul
popa
sarl
add
jbe
push
cmp
push
adcb
mov
add
adc
push
ret
cmp
mov
sbb
or
jle
fwait
push
or
cmp
jle
cwtl
cmp
jg
jns
pop
lods
xchg
fidivrs
and
sub
es
addl
mov
test
rcr
jecxz
mov
jmp
xor
inc
les
mov
ljmp
popa
mov
daa
mov
pop
ljmp
cmpsl
lret
and
mov
loope
pop
pop
mov
mov
push
fiadds
mov
clc
jnp
cmpsb
adc
inc
or
out
adcl
clc
fcmovu
negl
stos
or
inc
int3
and
xor
mov
cmpsb
test
pop
sbb
xor
stc
pop
and
xchg
sub
xor
fucom
lcall
out
js
mov
loope
dec
cmp
gs
filds
fimull
jp
mov
and
push
sub
cmp
lods
sbb
dec
in
std
add
push
je
stc
ret
inc
add
nop
cmp
addb
mov
repnz
and
and
ljmp
imulb
movsl
mov
cli
jns
inc
jb
jmp
inc
dec
arpl
mov
cs
inc
push
insb
cmpsb
mov
call
adc
jge
add
xchg
or
orl
cmp
lods
pop
sbb
mov
mov
dec
mov
add
shll
lret
aam
jno
loope
fisttpl
xchg
out
add
ret
negl
xchg
and
orl
fs
outsb
outsb
stc
out
scas
test
int
fadd
pop
xlat
lods
mov
jle
daa
cltd
test
xchg
lods
jge
enter
xor
fisttpl
sub
mov
in
cli
mov
or
xor
hlt
sbb
jl
ficompl
fs
icebp
cmp
in
in
mov
mov
ljmp
mov
repz
aad
mov
adc
add
mull
int
xchg
cmp
mov
insb
mov
pop
and
loope
clc
sti
scas
dec
pop
repz
notb
sbb
ds
and
mov
dec
xor
jmp
icebp
mulb
or
xchg
push
xor
lods
leave
xor
mov
cld
pusha
adc
jge
arpl
test
add
movsb
mov
inc
fisubl
loope
push
pop
jmp
aaa
sarb
loope
dec
sub
cwtl
cbtw
popa
hlt
mov
mov
loope
rcrl
sbb
sub
call
mov
int3
lahf
jbe
fsubrs
ss
lock
mov
jns
push
xchg
clc
mov
and
push
mov
xchg
int
imul
in
dec
or
bound
and
push
int
pop
dec
stos
out
lret
inc
in
and
sbb
dec
xlat
push
push
sub
ljmp
gs
es
mov
cmpsl
and
mov
add
lds
adc
test
sbb
ss
pop
out
fwait
test
scas
sub
sarl
shr
loopne
inc
xor
lock
mov
idivb
in
loop
ret
repnz
mov
adc
mov
push
mov
add
repnz
movl
mov
outsb
mov
mov
aad
push
or
ljmp
xchg
mov
add
decb
push
loopne
jnp
fld
loope
imul
dec
pop
add
push
aaa
aaa
cmp
cmp
xlat
push
pusha
jne
add
dec
dec
jle
cmp
outsb
xchg
sbb
jle
dec
dec
inc
es
xchg
xchg
fs
pop
iret
push
mov
enter
pop
mov
outsb
jecxz
lea
dec
in
out
jp
imul
fdivs
mov
rcrl
neg
dec
adc
inc
pop
sub
daa
stos
or
add
sub
jb
xor
sbb
jge
push
xchg
and
and
pushf
add
add
into
pop
add
popf
rcrl
adcl
sbb
add
sbb
sub
inc
jb
mov
lret
popf
sbb
inc
push
subb
inc
mov
jg
cmp
mov
or
xchg
adc
stos
pop
inc
in
in
fisttps
pusha
push
cwtl
lods
out
jns
sub
mov
mov
push
lds
jg
adc
loopne
mov
sbb
sbb
dec
ret
and
lods
or
or
sahf
out
mov
stos
mov
mov
js
pop
imul
adc
cwtl
and
int3
mov
fistps
loope
inc
xor
aas
or
mov
lcall
nop
pop
pusha
add
mov
hlt
repz
std
out
mov
or
lcall
jg
inc
std
shlb
dec
inc
test
decb
outsb
je
pop
data16
stc
arpl
mov
push
or
pop
push
into
add
mov
mov
testb
and
adc
int
add
cmp
sub
and
mov
aaa
mov
imull
shrb
dec
mov
xor
jo
int3
xor
xor
mov
pop
jns
xlat
out
push
test
fwait
shlb
sub
adc
mov
push
outsl
sub
jno
cmp
enter
mov
ljmp
sbb
sbb
mov
inc
lret
lock
mov
xchg
fst
loope
jp
mov
stos
xchg
scas
mov
pushf
or
cmpsb
xor
scas
loopne
mov
cmp
sub
mov
add
aas
js
inc
sbb
add
cli
push
fmull
xchg
loopne
test
rorl
mov
cs
or
sarb
xor
gs
hlt
jl
xlat
mov
leave
ds
mov
pushf
cli
mov
cmc
flds
cltd
xor
push
scas
aaa
inc
lret
cli
imul
jp
mov
mov
pop
and
mov
insl
mov
jns
arpl
int
rclb
leave
pop
pop
push
movl
adc
mov
push
mov
ss
lret
inc
adc
jo
enter
lods
mov
or
gs
rcl
stos
inc
ds
cmp
jmp
jne
mov
mov
xchg
ss
ret
dec
fwait
out
adc
cltd
rorl
mov
push
inc
and
jge
imul
xorb
sahf
xlat
mov
in
ret
dec
pusha
repz
mov
jo,pt
cld
mov
cmp
js
push
sbb
xchg
stos
mov
mov
sbb
loope
ljmp
icebp
mov
sbb
jne
lret
stc
cmpsb
mov
adc
sub
xor
out
xchg
xchg
xchg
insb
movsb
xor
mov
mov
cli
js
cmp
sub
jb
mov
sub
movsl
cli
jns
push
pop
imulb
sub
ljmp
xlat
les
or
repnz
mov
in
adc
jnp
add
loop
adc
cmp
leave
pop
mov
cmp
push
inc
cmp
pop
dec
jecxz
rcrl
sbb
xor
shll
ret
ret
fnstenv
cmp
fstps
mov
sub
gs
iret
movsl
sub
sbb
mov
xchg
aad
dec
movsb
out
iret
pop
and
xchg
popf
scas
xchg
mov
aaa
push
ljmp
and
fsts
add
dec
mov
sbbl
pushf
and
sbb
pop
xor
cmpsb
rolb
xlat
lahf
in
and
mov
mov
jmp
out
xlat
fsubrs
jge
rorl
cmp
sahf
mov
and
xchg
or
jns
mov
and
cld
xchg
mov
and
lock
cmp
cmc
sti
xor
cli
inc
and
popf
sahf
sub
cmp
jo
mov
xchg
cmpsl
cltd
or
mov
adc
mov
rcrl
cld
mov
ja
or
daa
jne
mov
xchg
js
sti
add
loop
push
mov
or
xor
sbb
sahf
out
sbb
loop
fwait
push
mov
pop
sub
dec
ja
addr16
icebp
int
in
jmp
addr16
clc
pop
and
hlt
notb
ds
sub
dec
ja
ret
jle
int
pop
sbb
loop
and
lock
push
cltd
push
lods
sbb
fmull
add
lret
call
jno
imul
or
insb
outsb
jmp
test
push
or
xor
push
les
pusha
jge
inc
xchg
mov
jb
enter
ljmp
jl
xlat
lock
push
pop
or
dec
je
mov
clc
rclb
call
idivl
leave
push
rclb
daa
pop
imul
or
inc
pop
ret
pusha
inc
scas
xorb
jg
addr16
movsl
adc
fisubrs
popf
fistpl
arpl
cmpb
jb
test
jmp
int
lock
pop
jae
xor
sub
jb
lods
pop
xchg
sub
popa
outsb
sbb
loop
adc
fcomi
push
imul
or
imull
or
cld
fmuls
outsb
fldcw
jl
cmpsb
scas
iret
inc
sub
push
insb
xor
in
xchg
cmp
imul
dec
pop
pushf
cmp
mov
xchg
jnp
fs
mov
and
lret
jmp
shl
pop
adc
addr16
popf
fstpl
movsb
mov
outsb
notb
in
mov
pop
inc
dec
sbb
sub
inc
ds
fsubs
jg
cs
xor
iret
ja
inc
shlb
mov
xchg
cmp
xor
jge
jg
fmulp
mov
scas
mov
dec
sarb
mov
cmp
mov
ret
and
das
dec
or
mov
je
sbb
dec
xor
ret
fs
lahf
fcmove
nop
in
pop
mov
xchg
pop
and
push
xchg
add
jl
insb
mov
xor
adc
dec
mov
jo
movsb
and
push
aas
fcmovb
and
xor
cli
xor
call
enter
sbb
cmp
add
mov
push
or
pushl
out
mov
ds
push
or
daa
adc
pop
add
aaa
jp
pop
sub
or
cmp
mov
aas
push
and
mov
aaa
lds
push
xor
mov
xchg
mov
pop
jge
add
adc
cltd
or
cwtl
stos
movups
or
sbb
mov
jmp
in
aas
pop
loope
or
cmp
je
jl
inc
pop
and
loope
mov
lds
mov
fcomi
and
enter
sarb
or
dec
ljmp
iret
push
lret
and
ret
sbb
movsl
je
les
test
sbb
adc
sti
add
int
jecxz
pop
fildl
mov
cld
adcb
push
pusha
jle
sub
lcall
xchg
stc
outsb
imul
sbb
push
bound
mov
cli
aad
in
clc
leave
mov
jns
inc
mov
pop
loope
jmp
jp
dec
test
into
xchg
jp
jle
shr
mov
clc
jnp
mov
int3
int
jbe
nop
mov
aam
jge
js
and
int
data16
inc
in
loop
rcrl
xchg
push
clc
fcoml
mov
jle
bound
lods
es
repz
pop
fisubrl
jg
sub
into
pop
and
test
cmp
add
cmpsb
cmp
cmp
push
in
lds
sbb
jo
nop
mov
inc
cld
jl
sti
push
test
xchg
sarb
fistl
cli
ja
fs
add
adc
jo
adc
fdivs
add
adc
lock
add
adc
push
jno
add
add
mov
jo
add
add
add
jo
add
add
add
jo
add
add
add
jno
add
add
add
jo
add
add
add
jo
add
add
add
jo
add
add
add
jno
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
popa
fs
jo
xor
cs
insb
add
add
inc
jb
gs
imul
je
xor
fs
insb
add
add
push
jns
inc
jb
gs
je
imul
jb
xor
fs
insb
add
add
inc
push
js
inc
