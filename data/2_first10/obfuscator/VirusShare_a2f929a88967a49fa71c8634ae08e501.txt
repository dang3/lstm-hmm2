and
xchg
push
orb
roll
sbb
addr16
ljmp
adc
mov
loopne
cmp
ja
test
sub
test
mov
frstor
sbb
push
frstor
mov
call
pop
movsb
call
outsb
dec
dec
and
pop
ret
push
sbb
cmp
in
and
and
imul
js
xor
jb
lret
cld
cltd
xchg
mov
rol
sti
add
in
arpl
mov
scas
pop
or
fs
mov
push
push
std
dec
jmp
lods
cmp
add
in
lods
jg
stc
repz
push
jmp
cmc
testb
rcl
in
dec
mov
sbbb
mov
aaa
jge
xor
mov
or
and
xchg
adc
call
pushf
call
mov
push
mov
lea
jmp
jmp
jmp
das
js
push
xchg
xor
sbb
fmull
rolb
mov
cmp
xlat
adc
loopne
xor
sub
mov
jno
inc
test
or
test
or
fnstcw
movsl
jecxz
aad
adc
call
cmp
or
lcall
lods
mov
jno
out
dec
push
cltd
push
xor
inc
jae
imul
mov
mov
outsl
jb
add
mov
pushl
pushf
pusha
pushl
ret
lods
pushf
jmp
jmp
pushw
popfw
jmp
mov
pushf
pushl
ret
jmp
lea
ja
jmp
movsbl
lea
pushf
call
push
pusha
pusha
mov
setae
mov
push
movb
jmp
lea
jne
pushf
stos
movb
pushl
pushf
lea
jmp
mov
push
push
movw
push
pushl
ret
jne
movzbw
call
mov
pushf
xchg
pusha
pusha
movl
lahf
jmp
pusha
push
movl
jmp
in
inc
cmp
adc
lds
sarb
shl
jne
lret
addb
test
aam
movsl
into
cmc
fadds
cld
scas
pushf
push
and
icebp
xlat
mov
pop
push
out
cmpsb
push
test
mov
out
rcrl
fadds
push
fstpl
scas
mov
push
in
bound
fidivs
jecxz
dec
mulb
ss
xchg
pop
jg
or
mov
inc
and
mov
fildll
cwtl
ds
pop
lds
pop
cmpb
inc
sbb
push
inc
fildl
insb
xor
es
inc
cmpsb
adc
scas
and
mov
and
pop
pusha
and
pop
push
sub
push
not
outsl
sub
flds
mov
sbb
outsb
mov
loop
xchg
mov
rorb
mov
push
xor
xchg
fildll
add
or
fisubrl
jnp
flds
jne
sbb
or
aam
cmpl
iret
cmp
lock
cmpsb
outsb
inc
sub
dec
inc
and
jp
or
mov
pusha
or
inc
push
arpl
xchg
xchg
outsl
dec
xchg
jb
mov
sbb
jmp
jmp
jmp
push
movl
jmp
movw
jmp
lea
jne
pushf
mov
mov
pushf
jmp
dec
mov
test
push
call
lea
jne
lea
cwtl
lea
mov
pushf
pusha
mov
lea
jmp
movsb
jnp
sbb
sub
or
mul
fcmovne
mov
xchg
in
pop
sub
je
add
stos
dec
insl
cld
jg
fisubs
jo
inc
xor
adc
imul
push
xor
or
popa
int3
inc
inc
cmpb
stos
cwtl
xchg
push
sub
frstor
scas
adc
call
lea
call
jmp
sub
bt
bt
test
cmp
mov
lea
ja
cmc
pusha
push
bt
imul
bt
pushf
add
pushf
mov
mov
pushf
lea
jmp
adc
sub
add
test
sar
mov
cmp
bt
test
pusha
lea
je
shl
pusha
add
rcl
adc
dec
mov
jmp
lea
je
bt
clc
jmp
dec
lods
popf
fldenv
popf
jp
addl
mov
bound
push
out
insl
lret
cmp
jae
fisttpll
scas
and
jecxz
xchg
mov
dec
js
aad
test
subl
pushf
jle
adc
cmpsl
subl
sub
ret
inc
and
inc
aad
mov
jp
rcr
lock
sub
jb
scas
mov
ja
or
pusha
stc
cmp
call
pushf
lea
jae
push
cmp
call
pop
subb
or
cmp
loop
xchg
jge
and
insl
sub
adc
jb
clc
xchg
push
cld
pop
test
test
cmpsb
aad
in
xchg
scas
jecxz
mov
loope
and
cltd
pop
add
mov
cmp
inc
nop
loopne
not
sahf
jecxz
hlt
fmul
sbb
fists
dec
icebp
aas
push
sbb
xchg
in
leave
cs
push
fbld
xchg
mov
push
pusha
push
xor
dec
aad
xor
icebp
out
jp
cmc
push
jle
mov
lret
cmp
fistl
aam
jb
lods
dec
mov
inc
and
mov
pusha
pushf
pushl
ret
add
inc
gs
outsl
fs
gs
imul
add
add
add
ret
cli
aaa
enter
mov
aaa
enter
cmp
enter
jns
enter
mov
enter
enter
stc
mov
test
cli
aaa
enter
cmp
cmp
mov
cmp
cmp
enter
pushf
movl
jmp
jmp
imul
gs
and
arpl
cld
roll
ret
insb
sub
inc
dec
push
xor
test
dec
ja
pop
rcrl
insb
in
std
aam
ret
jb
ljmp
int3
mov
sbb
iret
sub
jae
rol
loopne
dec
das
scas
test
adc
data16
jno
fwait
jo
dec
jno
sbb
pop
iret
xchg
cmpsb
mov
pop
xor
icebp
xchg
pop
xor
cmc
jmp
mov
sbb
sti
ficomps
insl
mov
negb
mov
push
pop
jb
lods
rcr
xor
inc
and
loopne
push
aad
xorl
outsl
jb
lods
push
shlb
es
or
vmovdqa
mov
lahf
cmp
jmp
je
push
pop
push
ljmp
jb
stos
jp
ljmp
stc
ljmp
push
push
pop
sahf
sbb
les
push
mov
adc
stos
movsl
scas
jmp
aaa
dec
bound
inc
movsl
push
neg
div
mov
popf
jecxz
mov
nop
cs
or
mov
aas
daa
xor
insb
sahf
lahf
xchg
dec
mov
push
xchg
loop
popw
xchg
jmp
scas
add
ss
mov
mov
xchg
mov
jge
and
imul
ret
push
xchg
icebp
in
mov
and
dec
sub
cmpsl
jo
scas
jb
stos
loopne
jae,pt
jmp
and
inc
xor
sbb
leave
mov
adc
addl
xor
push
xchg
cmc
repz
push
mov
je
or
icebp
cltd
jno
rorl
loopne
pusha
jle
out
inc
dec
cld
ret
jns
pop
shll
xchg
jb
stos
mov
inc
and
mov
jno
jmp
movb
push
xchg
fildll
aad
jg
aas
in
mov
mov
cmpl
adc
ret
inc
and
out
mov
fistpll
adc
je
adc
stos
lods
jb
stos
and
loop
adc
jae
lcall
mov
repz
in
add
jbe
mov
pop
rcl
cld
sbb
fcomps
sub
pop
in
out
mov
xor
adc
dec
pop
aas
inc
sahf
mov
or
sbb
mov
outsb
sub
xchg
cltd
mulb
mov
and
xchg
jecxz
xlat
mov
cmp
mov
gs
es
test
jb
stos
movb
lea
js
pushf
lea
jne
btr
xor
rcl
mov
ror
shrd
movsbw
sub
not
mov
jo
sub
push
pushl
popl
push
call
cmc
cmp
jle
pushf
mov
lea
je
pusha
pushf
pushf
mov
lea
jmp
movl
pushf
lea
jmp
add
pusha
pushl
cmc
or
jmp
lea
jne
pusha
call
lea
call
jmp
call
cmc
cli
mov
lret
mov
negl
pushf
popa
push
xor
mov
and
lock
iret
in
mov
xor
dec
xchg
or
mov
and
push
push
cmp
dec
mov
sub
addb
or
add
out
xor
dec
jae
test
inc
mov
addr16
cmpsb
jns
jp
xor
mov
neg
sarl
ja
mov
or
test
or
fdivrs
stos
jge
jg
arpl
xchg
aam
pusha
or
mov
int
insb
in
sbb
sub
test
imul
cmp
jge
fsubl
lods
repnz
das
test
movsb
add
inc
pop
in
sahf
je
pop
ss
aaa
ficompl
pop
xchg
sti
iret
and
cmp
dec
sti
dec
ret
mov
aas
scas
adcb
call
xchg
jb
test
adc
lea
daa
sbb
fistpll
and
ds
cmp
sti
dec
lds
fdivl
ss
adc
aaa
ficompl
nop
push
ds
or
mov
pop
negb
fs
add
xchg
lods
adc
jo
adc
clc
jb
cmpsl
shl
jnp
xchg
rorl
and
cmp
inc
lock
pop
push
loope
or
jle
out
repnz
pop
jnp
cmc
add
out
test
pop
fmul
lcall
sbb
mov
cmp
in
hlt
fdivr
stc
jmp
cmc
call
dec
scas
mov
hlt
imul
test
mov
sub
xor
sahf
repnz
adc
mov
and
jmp
lea
jae
jmp
and
ret
push
push
jecxz
xchg
gs
int3
mov
out
call
jns
outsb
mov
outsl
clc
sbb
loope
scas
repz
mov
out
add
loopne
add
jecxz
mov
cmp
into
sbb
std
push
aaa
push
stc
xchg
mov
mov
mov
adc
mov
inc
loop
cmp
push
out
jecxz
sti
inc
movsb
fs
mov
dec
into
ljmp
pop
movl
hlt
sub
movsb
inc
xchg
adc
arpl
xchg
add
inc
mov
bound
jnp
jmp
pop
pop
mov
jnp
push
das
mov
popa
es
addr16
insb
mov
inc
imul
xchg
imul
arpl
mov
mov
pop
mov
xor
call
dec
cltd
aaa
jle
popl
jge
stos
arpl
filds
aad
rsqrtps
jge
push
sbb
stos
mov
arpl
aad
das
xor
fldl
lods
lret
aam
addl
dec
mov
jge
xchg
adc
or
js
fs
pop
mov
fs
fwait
ljmp
in
pop
int
pop
je
in
xor
xor
not
jle
inc
or
jge
mov
push
or
jns
rclb
scas
dec
loope
shl
cmpsl
mov
les
mov
shrl
add
lea
jne
lahf
mov
pushf
movb
push
movzbl
mov
mov
movsbw
cwtl
cwtl
lea
jmp
movsbl
mov
jmp
scas
repz
xor
jg
push
call
repnz
es
aas
stos
mov
jno
lea
ret
sub
ret
dec
mov
test
jo
inc
jmp
pop
adc
enter
jecxz
stos
mov
imul
rcrb
pop
push
popa
inc
add
imul
ret
aaa
add
sub
test
daa
pop
rcll
push
imul
sbb
inc
insl
roll
sub
xor
sbb
aad
sbb
inc
addl
pop
lods
clc
inc
cmp
out
adc
xor
sti
and
shr
inc
mov
mov
test
dec
repz
cmpsl
icebp
jbe
sbb
mov
ds
mov
jl
pop
inc
sub
shlb
push
frstor
sub
fwait
sub
dec
adc
mov
or
mov
jb
movsb
sbb
pushf
pushl
lea
jb
pushf
lea
jne
jmp
jmp
push
lea
call
pusha
pushf
lea
jne
pushf
mov
pushf
pushf
lea
jmp
push
call
sbb
dec
fstpl
dec
sahf
ljmp
aam
mov
fimull
cmp
mov
xlat
add
sub
pop
outsl
cld
push
loope
repnz
out
pop
scas
outsl
sbb
or
mov
lahf
test
add
jno
call
fdivs
pusha
pusha
sub
pop
sahf
lock
inc
int
mov
adcb
and
or
fs
xchg
mov
test
es
or
stc
shll
jb
mov
movb
movl
pushf
movl
lea
jmp
xor
imul
sbb
adc
ret
ja
xor
fcoml
jb
add
ficomps
jmp
push
hlt
pop
xchg
mov
add
adc
jmp
and
xor
xchg
loope
push
cli
sbb
mov
js
pop
test
in
decl
mov
push
cwtl
adc
adc
adc
and
test
rcrl
pop
pop
inc
and
cmp
daa
mov
dec
fsubl
mov
xchg
jb
mov
lods
fwait
xchg
lret
cli
and
lahf
dec
xor
out
mov
ret
cmc
out
leave
jno
xor
icebp
fsubrl
testl
mov
mov
sbb
inc
test
imul
or
mov
inc
lock
cwtl
divl
xchg
in
cmpsl
outsl
push
xor
out
inc
jns
jb
mov
sbb
mov
clc
call
push
pushf
repnz
jmp
lea
je
call
not
mov
lea
jmp
clc
movzwl
sub
clc
mov
push
bt
cmp
movb
add
push
cmc
clc
mov
pushf
stc
test
jmp
mov
jmp
dec
mov
loope
or
add
outsl
push
sub
mov
push
scas
or
pop
and
cwtl
je
adc
jg
xor
gs
aas
or
or
push
push
inc
enter
sti
aas
popa
bnd
dec
xor
mov
ret
lahf
into
xchg
mov
dec
out
mov
daa
lret
addr16
ret
dec
loopne
dec
push
gs
mov
jle
mov
inc
and
cmp
es
mov
pop
sub
cmpsl
lcall
imul
sbb
add
pusha
mov
imul
pushf
add
pushf
push
pushf
movw
lea
jmp
pusha
push
movl
pushl
movl
push
movb
push
pushf
lea
jmp
mov
jmp
push
pusha
movl
pushf
pushf
pushf
pushl
popl
push
pushf
pushl
ret
push
mov
movsl
jmp
mov
dec
out
shlb
mov
dec
push
sub
xchg
shrl
rcll
loop
sbb
jle
repnz
cmpsb
test
or
aaa
scas
and
and
mov
gs
push
bound
sub
popa
mov
insl
mov
sbb
xlat
call
and
daa
ss
mov
push
push
adc
negl
sti
push
movsl
jle
cs
insl
inc
sbb
add
inc
cmc
pushf
jmp
pushf
lea
jae
pusha
pusha
movb
pushf
lea
jmp
call
movl
rep
lea
mov
pushl
lea
jmp
pushf
pusha
pusha
lea
jne
sbb
bts
bswap
mov
pusha
stc
add
bt
stc
movzwl
cmc
shrd
cmp
bts
mov
jmp
lea
ja
cmc
stc
push
movb
imul
call
hlt
cmpsb
test
rclb
sbb
cli
fcmovnb
lea
sub
xchg
jo
out
nop
xor
sbb
mov
loop
lret
lcall
out
mov
je
jp
or
cli
sub
aas
loope
and
adc
cmp
mov
inc
test
sub
sbb
fs
push
add
xlat
xchg
aaa
repnz
lahf
and
mov
xor
mov
pushf
push
and
scas
orl
sar
clc
pop
jle
jl
outsl
repnz
in
push
dec
aam
arpl
jl
pop
sbb
push
mov
and
repz
jecxz
lock
push
dec
out
sbb
cmp
stos
inc
stc
sub
cmpl
mov
mov
imul
insb
jno
dec
xchg
inc
pushf
inc
outsl
xor
int
insl
ss
sahf
push
pop
stos
add
add
pusha
call
lea
fisttpll
mov
outsl
es
mov
lahf
mov
or
repnz
jbe
mov
inc
cmp
fs
icebp
test
mov
jns
jns
or
inc
jecxz
scas
mov
pop
or
inc
cmp
jmp
xchg
mov
sahf
add
pushl
popl
mov
push
pushl
ret
pushf
lea
lea
pushf
movb
pushf
movl
call
mov
lea
jne
daa
cmc
sub
movzbw
stc
not
mov
dec
add
shl
mov
cmc
push
pushf
push
test
pusha
lea
je
clc
sub
clc
call
lea
jne
not
movzbw
movsbw
mov
pusha
lea
jmp
lea
jne
clc
mov
push
rol
bsr
sbb
sub
bt
or
bts
lea
pushl
sub
cmp
pushl
popl
test
cmp
pusha
mov
call
sbb
mov
jo
jb
bound
pop
stc
fadds
pop
jp
lcall
push
and
push
add
stos
daa
jl
imul
pop
hlt
es
pop
and
pop
das
mov
mov
pusha
pusha
bound
mov
dec
mov
cs
jg
mov
shlb
ss
sarb
xchg
push
pop
push
imul
rorl
dec
pop
inc
inc
and
es
and
nop
test
xchg
and
mov
xchg
push
lahf
dec
std
ficoms
mov
pop
inc
sbb
and
bound
mov
repnz
xchg
xor
roll
inc
mov
gs
pop
push
gs
jae
jle
add
outsl
push
test
and
lret
mov
ficoms
jbe
dec
das
in
fnstenv
mov
push
ds
jo
and
std
out
mov
push
cmpsl
movsl
mov
adc
iret
sbb
ljmp
es
dec
fsubp
pop
popa
push
rep
inc
xor
fwait
xchg
bound
xchg
dec
sti
cld
and
repnz
pop
gs
mov
into
icebp
loop
push
mov
movsb
mov
shrl
push
xchg
jge
cwtl
out
push
pop
loope
popf
jb
stc
popf
adc
loop
and
pop
inc
mulw
inc
jp
inc
fldln2
clc
loope
xchg
arpl
ljmp
fwait
lcall
or
mov
roll
add
lea
call
pushf
jmp
lea
je
push
clc
cmp
pushl
lea
jne
pusha
pusha
call
push
mov
inc
call
jmp
mov
pushf
lea
jmp
jno
je
ljmp
pavgb
out
iret
fwait
pop
dec
repz
mov
jge
ret
push
sbb
mov
push
push
xchg
push
push
dec
sub
add
stc
sub
mov
je
and
loop
mov
jb
fwait
out
sti
lea
jb
pushf
cmp
pushf
movb
pushf
lea
ja
jl
pusha
bt
add
add
cmp
cmp
clc
or
pushf
pushf
lea
je
pusha
mov
cmp
mov
push
lea
jne
push
movb
movw
lea
jno
inc
push
movb
inc
movb
push
lea
jmp
push
movl
mov
lea
jmp
lea
je
pushf
pusha
adc
mov
pusha
lea
jmp
movl
movb
jmp
out
push
add
out
movsb
sahf
mov
cwtl
pop
sub
call
lret
stos
inc
mov
jb
xchg
pop
loopne
outsb
addr16
dec
dec
fsub
lret
movsl
out
aas
or
mov
inc
lea
outsb
out
icebp
into
into
test
test
and
xor
nop
shrl
loopne
fdiv
mov
mov
inc
out
adc
inc
lods
cmp
call
imul
test
sub
jl
pop
fstpt
das
xchg
inc
xchg
mov
add
pop
cli
mov
jp
in
adc
lret
repz
inc
test
pop
mov
les
mov
clc
lcall
sbb
testl
mov
pop
dec
test
dec
mov
inc
inc
inc
stos
xor
movsl
cs
jge
mov
adc
mov
popf
je
mov
push
lahf
push
mov
shrb
es
sbbl
sbb
scas
jb
cltd
loope
xor
push
popf
sahf
mov
jl
mov
shrb
xchg
jg
inc
push
push
andb
sub
in
les
mov
or
lret
adc
mov
mov
js
sbb
in
cmp
inc
ja
dec
aad
and
pop
out
sbb
fs
jb
cwtl
jge
call
pushf
pushf
lea
ja
push
movsbw
movzbw
not
mov
movzbw
mov
xchg
lea
jg
not
pop
movsbw
bswap
call
lea
jne
call
xchg
lahf
jl
scas
mov
inc
push
stc
int
mov
neg
mov
add
out
int3
loope
ss
push
imul
jp
seta
cmpl
sbb
insb
clc
sub
daa
jecxz
bound
mul
ret
xor
add
sub
call
jmp
push
lock
std
std
mov
jb
test
pop
enter
sub
pushf
mov
pop
push
ss
rorl
cld
lods
jge
or
push
fmuls
dec
and
aam
pop
roll
aad
adc
test
loope
cmp
inc
xchg
mov
test
xchg
cmp
sbb
cmpb
jmp
pop
fimuls
scas
cmp
pushf
lea
ja
add
not
sub
btc
sub
cmp
rcl
add
shr
ror
or
stc
mov
and
mov
test
jmp
mov
test
cs
mov
or
jmp
test
out
je
and
in
mov
cld
sub
xchg
repz
inc
and
and
or
clc
lahf
or
icebp
into
into
ret
sti
push
xor
jo
push
mov
mov
out
lea
stos
cmp
sbb
push
jno
mov
or
imul
data16
lcall
xorb
mov
inc
or
inc
xor
add
add
jmp
not
stc
rol
cmc
sub
jns
clc
pusha
add
pusha
pushl
movb
pushl
not
movb
pushl
jmp
add
test
movzwl
xor
movzbw
neg
mov
cmp
clc
add
bt
jmp
cmp
or
pusha
jmp
cld
insb
push
insb
jo
jns
add
add
push
aad
imul
test
movsl
and
xchg
std
mov
imul
enter
jno
pushf
sahf
in
call
xlat
jnp
jnp
xor
mov
push
dec
push
mov
add
add
mov
xchg
test
push
je
xchg
push
inc
imul
adc
jo
cmp
jnp
repz
aam
loop
orb
mov
icebp
mov
les
loope
imul
mov
out
mov
add
push
rorb
ljmp
add
mov
jge
or
add
xchg
xor
and
lea
je
cmp
cmc
sub
pushf
bt
bt
cmp
push
call
pushf
pushf
jmp
call
call
ficoms
movsb
inc
xchg
and
xor
add
andb
into
fcmovnb
testl
pop
add
out
test
cld
cmp
icebp
nop
add
push
imul
adc
lds
xchg
mov
cltd
jb
xchg
lret
and
pushf
call
pushf
lea
ja
pushf
lea
jb
cmc
stc
bt
pusha
cmpb
pusha
lea
jl
jne
pusha
push
bsr
mov
push
pushf
stc
push
add
call
or
call
str
push
pusha
movl
pushf
jmp
xchg
fidivl
inc
adc
inc
sbb
pop
fsubl
rorl
mov
mov
fstps
mov
inc
movsb
xor
jp
inc
xor
fists
adc
mov
cmp
mov
sub
in
loop
lea
lock
xchg
outsb
jnp
add
xchg
adc
adc
mov
pusha
jb
and
mov
ret
jnp
xchg
cmp
lcall
sub
dec
mov
push
rcl
cmpsb
mov
vpsadbw
cld
popf
andb
daa
push
cs
rol
mov
xchg
inc
and
add
mov
sub
aaa
push
jmp
cs
addr16
adc
mov
push
mov
adc
sub
xorl
ds
lahf
icebp
test
popf
outsb
je
pop
mov
and
lea
cmp
aam
mov
enter
jb
xchg
ds
mov
and
pushf
jmp
pusha
or
pushf
pusha
push
lea
jne
bswap
bsr
push
mov
clc
or
mov
lea
je
bswap
lea
not
movzwl
call
add
add
call
push
cmp
xor
mov
test
stc
jmp
bt
stc
bt
add
push
pushl
not
pusha
inc
clc
clc
shr
call
test
jmp
jmp
mov
in
cli
movsb
cmp
jecxz
pop
cs
add
mov
mov
cmp
repz
dec
mov
adc
or
es
mov
add
add
adc
stos
mov
sub
repz
add
cmpsl
xorb
cmpsb
dec
sbb
mov
jb
xchg
and
jmp
lea
jae
bsr
jmp
test
btc
rol
sub
mov
pusha
xadd
add
xor
mov
lea
adc
adc
rol
ror
mov
clc
mov
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
lods
add
xchg
cmc
mov
inc
adc
jb
jle
inc
in
aam
repz
movl
jbe
jns
jae
je
xor
rol
out
mov
idivl
sub
insb
jmp
adc
mov
sarb
cli
rol
dec
sub
cltd
push
cmpsl
jmp
mov
dec
scas
jge
push
add
out
dec
lahf
cmp
xchg
jb
movsl
ds
clc
mov
inc
adc
xchg
pop
push
sub
fmuls
pop
pop
pop
xor
pop
cli
mov
inc
or
xor
xchg
ss
dec
push
push
push
cmpsl
mov
movsb
fwait
jns
ss
cmp
fmull
pop
clc
in
cmpsl
jno
push
push
mov
cmp
inc
mov
iret
sbb
xchg
lcall
cmpsl
sti
ja
push
imull
movsl
add
pusha
push
pop
or
xchg
clc
and
mov
or
mov
jb
xchg
fucomip
and
loopne
rol
sub
arpl
scas
jge
cmp
sarb
and
sub
pop
dec
dec
or
loope
add
dec
mov
inc
popf
cmp
leave
push
cmc
icebp
add
sbb
cld
inc
pop
test
lcall
insb
xchg
aam
mov
and
in
ja
jle
cmp
adc
enter
dec
cmp
clc
sbb
inc
and
cld
adc
cmp
inc
sbb
or
nop
cmp
mov
pushf
call
mov
mov
call
in
mov
lea
xor
ds
mov
movsb
jbe
push
daa
push
dec
and
and
mov
mov
adc
mov
xor
inc
sub
push
subb
pop
jle
sbb
dec
in
repnz
sbb
push
adc
sub
mov
add
jecxz
mov
mov
lcall
ds
js
sub
pop
adc
cmpsb
je
push
fimuls
add
lea
jne
pushf
pusha
mov
pusha
movb
lea
lea
movzbw
mov
movsbw
setbe
seta
lea
jmp
cmp
clc
xor
mov
imul
hlt
in
sub
pop
lret
sub
aaa
jge
les
add
loope
pop
lds
cmc
popa
sbbl
pop
mov
dec
shld
insw
iret
inc
adc
mov
call
cmp
xor
outsb
cmc
lea
add
fisttps
xor
fildll
xor
push
call
adc
cmp
dec
push
orl
enter
push
aam
enterw
mov
repnz
jecxz
fndisi(8087
inc
insl
bound
xor
jb
mov
and
jae
xchg
mov
pusha
pushf
setp
inc
setl
pushl
mov
jmp
call
pushl
clc
not
sete
jmp
shl
jmp
or
xor
in
sbb
mov
mov
cld
lret
movsl
xchg
push
ljmp
add
repnz
inc
sub
clc
add
aaa
arpl
xlat
sahf
xlat
xchg
loopne
xor
std
mov
add
enter
mov
lea
jae
pushf
lea
jne
pusha
jmp
push
movb
jmp
push
movsb
aaa
push
insb
mov
xchg
jge
cs
movsl
pop
mov
xor
mov
dec
stos
jnp
mov
mov
test
push
fstl
int
xor
repz
inc
es
xor
mov
in
mov
cvtps2pd
lea
dec
insl
lea
jae
cmp
clc
test
xor
pusha
pushf
pushf
lea
call
pusha
lea
jae
stc
pusha
pushf
xor
pusha
lea
call
jae
push
pushf
lea
jae
pushf
call
pushl
pushl
movl
mov
mov
lea
jmp
mov
sub
push
call
cmp
inc
sbb
pop
adc
nop
aas
sbb
into
mov
xor
or
addr16
sarl
cld
out
lods
or
xchg
push
jo
xor
jne
rclb
xorl
jecxz
data16
repz
ud2
in
shrb
xchg
xchg
jl
add
push
pusha
pusha
movl
pushl
lea
jmp
inc
ret
xchg
jmp
loop
jl
or
add
ret
xchg
jo
sub
jns
push
add
or
pop
scas
out
fst
cmp
adc
inc
fwait
gs
xlat
mov
jns
fistpll
cli
inc
cmpsb
aaa
outsb
cmp
stos
dec
cwtl
je
ljmp
pop
sub
ljmp
sbb
push
or
movsb
test
mov
ret
push
cmp
fadd
into
jb
mov
orb
or
or
inc
not
push
lea
mov
and
jmp
call
pushf
pushf
pusha
xchg
pusha
movl
pushf
lea
jmp
push
lea
je
pusha
lea
jmp
lea
jmp
pop
push
mov
mov
pushl
ret
imul
pusha
push
pushf
mov
add
pushf
pushf
pushl
lea
jmp
shl
or
sub
ror
shr
shr
mov
shl
sub
bsf
mov
movzbw
rcl
ror
add
bswap
btr
add
sub
shl
mov
cmp
pusha
cmc
bt
shr
cmc
call
pop
lcall
das
xor
jecxz
or
mov
jo
hlt
xchg
jnp
jne
popf
pop
jbe
fs
jno
dec
jl
fcomip
dec
jle
pop
or
out
mov
incb
jl
mov
cli
jo
push
sub
xor
xchg
rcll
cmp
loopne
push
mov
sahf
pushf
sub
test
daa
adc
aam
cwtl
mov
std
leave
js
sbb
ret
mov
jb
mov
cli
inc
stos
ljmp
inc
ds
xchg
cmp
jmp
xor
pop
xchg
xchg
std
xlat
data16
or
mov
cs
hlt
into
movl
imull
rclb
cmovg
mov
daa
push
push
loopne
mov
xor
ss
popf
mov
lods
sub
lret
add
push
inc
adc
xor
stos
pop
bound
idivb
jl
mov
lret
mov
ja
cmc
lret
idivl
loop
dec
jl
cmp
jne
lock
out
sahf
mov
inc
hlt
xor
adc
inc
fimull
xchg
lret
into
insb
fcoml
cmp
xor
lea
push
add
test
sub
shrb
addr16
and
outsl
pop
push
add
dec
push
mov
int3
ficompl
leave
add
scas
pop
mov
mov
inc
inc
push
insl
dec
push
add
mov
cs
mov
mov
and
leave
pop
cwtl
jle
jno
sbb
add
cmpb
cmp
and
cmp
xchg
out
out
pop
push
pusha
cmp
std
out
mov
mov
fwait
mov
pop
adc
xchg
addl
xchg
xorl
gs
push
sbb
pop
jg
jmp
xchg
out
push
fwait
hlt
pop
int
jne
test
mov
mov
mov
das
ret
lret
mov
and
fistps
scas
jne
jb
add
leave
push
dec
mov
cmp
inc
lds
aaa
ret
pop
inc
cmp
push
mov
add
pushf
cmp
jmp
pushf
pushf
mov
lahf
mov
pop
movl
not
cwtl
lea
pushf
movl
pushf
call
movl
mov
push
call
pushl
lea
ja
jmp
sub
call
mov
pushf
lea
jmp
stc
cmp
call
cltd
lods
lahf
int
or
lods
test
adc
xchg
pop
xor
in
mov
mov
xor
xorb
xchg
pop
stos
inc
outsl
into
outsb
adc
pop
adc
test
mov
cwtl
or
push
loopne
mov
mov
inc
cmp
pop
jb
mov
mov
cs
sub
out
xchg
imul
ds
ret
ja
mov
lods
call
inc
push
and
imul
sbb
xchg
ficomps
scas
leave
jge
es
mov
out
mov
mov
cmp
cmp
or
sbb
bound
ss
adc
pushf
hlt
aaa
push
inc
cmpsl
mov
mov
pop
pop
iret
jbe
adc
push
sbb
test
dec
sub
lret
repnz
aaa
push
or
add
pushf
call
push
pushf
mov
push
call
call
movl
pushf
push
pusha
lea
jmp
xchg
sub
mov
jmp
lea
ret
pushf
movsbl
xor
add
inc
cmp
pushl
mov
test
not
cmp
not
add
inc
sets
pushf
mov
clc
test
call
add
add
push
xchg
xadd
mov
rcl
and
push
dec
shrd
jmp
xadd
lea
lea
mov
inc
lea
xor
add
lea
mov
pushf
movb
mov
pusha
setle
pushf
not
lods
pushf
call
pushf
cmp
stc
add
pushl
lea
je
pusha
mov
add
pusha
lea
jmp
in
out
jmp
xchg
xor
xchg
mov
pop
add
jl
push
jle
sbb
aas
mov
loope
subb
xchg
pop
inc
xchg
push
sbb
aam
mov
pop
mov
mov
popf
sahf
mov
mov
jmp
xchg
sti
cmpb
ret
push
jbe,pn
ror
fistpl
inc
stc
adc
cmp
pusha
dec
add
stos
and
xor
push
in
mov
pushf
nop
shrl
leave
pop
ljmp
dec
pop
jo
rol
add
xchg
bt
rol
clc
movb
add
push
jmp
push
fwait
jle
add
enter
dec
mov
cmc
les
pusha
mov
dec
dec
pusha
sti
or
insl
mov
or
xor
clc
jbe
inc
sub
les
and
out
xor
cmp
mov
and
push
rcll
mov
hlt
cmp
pop
iret
jmp
adcl
ja
push
inc
es
mov
aas
push
adc
mov
mov
pusha
shll
jle
sahf
movsb
inc
dec
cmp
adc
rcll
loopne
adc
push
std
and
inc
das
pop
mov
ljmp
mov
xor
push
pushw
inc
pusha
lods
out
test
fistps
test
test
dec
daa
test
xor
into
fadds
addb
rcrl
dec
and
int3
mov
pop
lcall
lcall
das
pop
lea
and
iret
pop
or
cmp
sub
inc
and
out
mov
ret
arpl
dec
mov
pop
mov
ja
cmpsl
daa
icebp
push
adcb
inc
cmp
jo
xor
lock
xor
and
mov
test
je
mov
mov
sub
in
or
sbb
decl
mov
les
push
out
pop
scas
sbb
jnp
jne
push
cmp
and
dec
dec
popf
jmp
cmc
fbstp
fldl
iret
stc
jb
pusha
jg
inc
nop
rorb
dec
pop
and
jmp
aam
jb
test
std
pop
mov
lock
fsin
pop
sbb
and
je
sub
ret
movb
orb
mov
jge
inc
sub
daa
pushf
mov
incb
and
scas
push
jecxz
bnd
xchg
xchg
xor
ret
bound
xchg
add
call
or
cmpb
fcoms
mov
out
push
mov
mov
lea
mov
sbb
decl
repz
test
movsl
inc
mov
cmpsb
inc
and
jne
mov
or
stc
xor
xchg
fidivrs
pop
stc
mov
add
repnz
clc
arpl
mov
pushf
pop
rclb
pop
mov
sarl
push
imul
int3
push
cmp
gs
xlat
and
inc
cmp
cwtl
adc
outsb
insb
xchg
lods
xchg
push
lcall
fldcw
cld
push
scas
jl
inc
mov
in
add
mov
mov
pushf
pushf
call
push
movl
pushf
pushl
movb
movl
pusha
mov
movl
pusha
lea
jmp
push
js
lods
xlat
sahf
bound
or
aad
mov
or
aam
imul
sbb
sbb
imul
mov
jmp
cs
lods
test
sahf
test
addr16
cs
lock
xchg
adcb
imul
test
add
jns
fsub
in
jg
outsl
jle
mov
adc
insb
movsb
push
lock
jl
out
loop
stos
cwtl
jns
and
out
mov
popf
lods
mov
push
out
cmp
push
xchg
or
pop
test
add
ja
mov
fsubl
inc
sub
ljmp
subb
cs
std
adc
push
xchg
adc
inc
movsb
cmpl
cmp
sbb
imul
das
jno
out
sbb
ljmp
push
adc
jnp
add
cmp
cmp
stc
bt
and
test
clc
test
call
mov
cld
fs
int3
int
mov
mov
dec
ss
shll
mov
insb
sti
sub
pcmpgtd
cmp
dec
lods
int3
ljmp
into
jmp
mov
cmp
cmp
add
hlt
inc
ljmp
in
imul
scas
mov
aam
add
cmp
lods
sahf
insb
push
sub
bswap
cwtl
bound
shll
xorl
or
xchg
add
rol
add
shl
test
clc
mov
pushf
pushf
stc
cmc
cmp
movb
jmp
lea
jbe
sbb
xor
dec
add
mov
shr
shrd
btc
shl
add
bswap
mov
and
stc
shl
shrd
add
bswap
movl
call
mov
or
imul
sub
xchg
inc
dec
or
sbb
mov
push
bound
and
fs
in
sbb
movsb
push
std
pop
mov
in
mov
cmpsb
jp
sarb
push
inc
jb
xorb
jb
add
jns
out
mov
push
sti
or
scas
xor
jle
mov
xor
mov
sti
je
mov
inc
rcrl
clc
orl
dec
fsincos
or
mov
sub
mov
xor
lret
gs
mov
je
push
add
movsb
call
jno
pusha
call
rorl
fstps
mov
lcall
jge
call
mov
cmp
xor
sbb
cwtl
cmp
push
sbb
xor
leave
and
fs
xor
push
shll
sarl
inc
sbb
pop
cmpsl
sarb
int
push
sbb
testl
scas
add
pop
jbe
iret
outsb
add
cmp
sbb
add
or
lea
inc
sti
sahf
sbbl
fidivl
mov
cmp
xchg
pop
jmp
or
cmc
lret
add
push
xor
pushf
lea
call
pusha
movb
movb
lea
jae
cmp
stc
xor
call
pushf
call
mov
movl
lea
jne
cmc
xor
shrd
mov
shl
or
add
and
mov
clc
test
push
jmp
mov
or
adc
sbbb
icebp
ficoms
mov
xchg
sub
js
mov
mov
loope
mov
fbstp
cmpsl
lret
xchg
adc
or
outsl
xor
mov
in
inc
bound
mov
cltd
stos
or
sbb
aam
mov
jo
mov
dec
repz
cmpsl
ja
sub
push
lret
or
push
xchg
sub
incl
hlt
mov
push
or
add
dec
gs
cmp
call
mov
cmpsb
sti
xor
mov
mov
mov
pop
out
iret
orb
ds
mov
jne
outsl
jge
dec
sub
inc
push
push
mov
sub
cwtl
sbb
out
popa
cmp
xchg
mov
decb
loope
cmpsl
subb
out
fidivl
push
and
mov
cmpl
loop
insb
aaa
cmp
jle
fildll
scas
lahf
fwait
push
xchg
fistpll
add
push
xor
inc
fisubl
out
pop
xor
or
mov
push
adc
cmp
cld
movl
inc
jns
mov
stc
add
mov
dec
pusha
adc
rcrb
xchg
sti
adc
pop
and
ret
out
or
xor
mov
adc
bound
sub
push
iret
and
fcomi
push
push
xor
push
sub
sbb
out
xor
add
das
pop
push
fistpll
or
icebp
in
scas
stos
cmp
jl
push
iret
aad
xchg
xchg
push
xor
aas
sbb
push
mov
pop
fmul
outsl
mov
mov
jb
mov
pop
sbb
push
mov
jmp
scas
stos
iret
test
jo
inc
jge
xchg
fstl
inc
or
pop
gs
iret
mov
mov
xlat
mov
pop
sub
scas
and
fldenv
icebp
sbb
adc
ror
pushf
cmpl
mov
add
dec
cs
out
fistpll
push
in
and
or
cltd
leave
insl
dec
and
mov
pop
loope
loope
push
rcrb
cmp
cli
nop
pop
cli
push
push
sar
mov
jle
jle
or
mov
xchg
aaa
cltd
les
pop
call
cmp
fldenv
push
mov
mov
sub
ss
jp
bound
push
inc
cs
test
push
std
lahf
jmp
push
push
push
cmp
add
adc
test
int3
sahf
mov
jb
jl
bound
inc
and
stos
rcll
call
shlb
andb
movsb
outsl
inc
xor
imull
mov
jns
icebp
xchg
push
sti
pop
mov
push
fmull
or
in
imul
test
jl
movsl
and
out
mov
push
and
frstor
push
jb
jnp
fdiv
mov
inc
cmc
test
cmc
neg
jmp
xchg
xchg
add
cmp
ljmp
xchg
push
xor
lret
adc
inc
dec
add
jl
in
sub
fcompl
mov
aad
loop
cmp
outsb
push
and
mov
mov
testl
sarl
push
into
xchg
shll
movsb
jo
pusha
mov
push
pushf
cmp
scas
xchg
subb
push
bound
nop
divb
xor
xorl
pop
or
es
jmp
mov
dec
add
roll
xor
ffreep
mov
jb
jnp
out
mov
mov
lea
call
pushf
call
test
add
cmp
movb
stc
pushf
not
push
mov
sub
stc
cmc
neg
jmp
ljmp
sub
cld
lret
dec
push
cli
repnz
ja
dec
std
lea
mov
push
cld
cld
lret
mov
push
mov
jnp
sub
popl
mov
pop
mov
das
or
lock
push
add
stos
jnp
pop
inc
adc
test
cmp
add
xchg
bsf
mov
test
shl
push
movzbw
mov
push
mov
test
cmc
stc
or
pushf
movb
call
cmc
call
call
pushl
jmp
push
call
pushf
movl
movzbl
lea
pushf
pushf
movl
push
push
jmp
lea
call
pushf
call
mov
jmp
clc
test
mov
pusha
mov
jmp
xor
dec
test
test
sub
lea
repnz
jecxz
ja
mov
add
pop
adc
mov
inc
mov
fbstp
cmpsb
iret
mov
rcl
in
mov
jecxz
cmp
test
dec
pop
push
push
aam
mov
call
mov
jmp
popf
sub
xchg
cmpsb
cmpb
or
mov
cmp
mov
jb
jns
pop
movl
pushf
pushf
pushf
lea
jmp
cmp
stc
stc
sub
call
jmp
movw
call
pop
push
sbb
and
jbe
cmc
enter
and
out
xchg
inc
push
ljmp
testl
jp
cs
xor
mov
mov
add
pop
and
mov
insl
imul
sbb
outsb
loope
lret
outsl
cmpl
mov
add
movb
or
jmp
push
or
call
scas
mov
xchg
repz
test
outsl
and
int3
mov
adc
jno
jl
inc
shll
push
loopne
push
repz
sbb
pop
dec
add
mov
fstpl
xchg
fistpll
lahf
fldt
inc
mov
in
mov
and
loopne
sbb
adc
cmpsb
xor
rclb
rorb
inc
jno
mov
adc
pop
iret
ljmp
stc
inc
add
int
sbb
cmpxchg
jns
arpl
dec
push
xchg
aas
mov
cmp
mov
enter
pusha
and
mov
outsb
cld
jns
and
cmp
cld
das
iret
icebp
dec
or
in
fmul
test
jb
ja
insb
lret
and
loop
pushf
pusha
pushf
lea
jmp
test
ljmp
movsb
lock
push
add
adc
add
es
andb
push
je
and
and
and
stc
push
jnp
xchg
jnp
pop
das
inc
popf
pop
enter
cmp
mov
rep
xchg
mov
push
push
push
push
hlt
or
pop
popl
sbb
xchg
rol
ljmp
mov
mov
loope
rolb
dec
iret
xchg
jnp
outsl
adc
hlt
xchg
pop
stos
sub
jno
leave
rcrl
movsl
pop
mov
pop
cltd
notb
mov
or
jp
mov
icebp
jecxz
jge
inc
orb
inc
fwait
sbb
int
jbe
or
pop
enter
dec
lcall
ja
adc
gs
add
fisubl
movlps
sbb
mov
dec
pop
cmpsl
arpl
add
inc
mov
mov
push
mov
xor
or
call
aam
fwait
lret
aad
fcmovnu
jle
push
xor
cmpsl
stos
dec
test
es
mov
add
dec
in
fwait
cmpsb
inc
pop
or
and
inc
ja
and
faddp
xchg
adc
test
dec
ds
jb
jbe
test
cmc
sub
aam
cmp
lret
or
mov
lcall
ret
addr16
pop
out
lcall
inc
and
cmp
cld
or
clc
loop
inc
jl
add
lea
jae
sar
mov
adc
shr
or
mov
ror
setbe
movsbl
setae
mov
stc
xor
test
cmp
repnz
jmp
or
pusha
pushf
pushf
lea
jne
xor
pusha
mov
test
pushl
cmc
clc
or
jmp
movl
mov
pushl
popl
mov
pushf
push
pushl
ret
pushl
adc
pushl
lea
call
jmp
jb
addl
mov
ror
lahf
xorl
and
hlt
inc
xchg
ljmp
add
fcoml
push
int3
notl
lcall
jno
dec
subb
and
sbb
das
xchg
mov
sub
push
push
shll
cmp
cmp
mov
out
push
mov
popa
dec
sti
xor
jp
mov
mov
xchg
stos
cmp
iret
inc
scas
mov
test
adc
mov
cmp
rcrb
jb
je
sbb
pusha
movl
call
mov
inc
pop
insl
xchg
mov
add
enter
cmp
mov
push
add
xor
xorb
loop
iret
daa
dec
xor
pop
clc
pop
sub
mov
lds
jbe
call
mov
lock
and
sarb
cmp
pusha
les
push
mov
xchg
loopne
lea
hlt
leave
scas
xchg
div
push
and
add
dec
cwtl
cmp
lea
dec
jae
dec
in
inc
cmp
lea
ficoms
sub
lcall
int
int
xlat
inc
ljmp
mov
mov
std
mov
sbb
and
push
out
in
aad
fistps
jmp
dec
movsb
pop
cmc
aaa
fstps
imul
rorl
or
cmp
mov
xchg
pop
outsb
mov
sbb
mov
pop
xorb
stc
cmp
dec
mov
sbbl
adcl
imul
aam
sbb
mov
test
iret
outsb
lcall
sarl
movsb
xchg
loop
lret
jnp
pop
inc
mov
jmp
arpl
push
xchg
jb
xor
out
jge
add
aaa
or
mov
pop
loope
mov
fldenv
sub
sbb
shrl
loop
dec
add
push
push
mov
xchg
push
jecxz
movsl
imul
pop
xor
shll
jae
fdivl
add
dec
outsl
popa
fs
imul
add
xor
xor
push
movw
pushl
ret
lea
call
pusha
call
call
call
stos
pushf
lea
jmp
rorb
pop
movsl
add
lea
fld
andb
mov
aam
das
cmc
imull
pop
fsubl
subb
mov
clc
stos
mov
lock
sbb
in
fs
mov
cmpb
pop
adcl
mov
sbb
lcall
push
aas
pop
repz
xchg
cmp
jb
inc
test
push
ljmp
or
add
push
xchg
sbb
mov
js
sti
xchg
xchg
outsb
imul
push
inc
ds
lldt
cmp
outsl
aaa
sti
xchg
sub
jne
loopne
dec
push
inc
xor
loope
sub
xchg
mov
pop
adc
jno
aas
cld
lret
mov
scas
mov
add
movsb
inc
inc
mov
cltd
push
push
sub
fsts
and
ds
std
pop
mov
loopne
push
cltd
adc
and
sub
icebp
push
xor
push
adc
or
adc
int
ds
test
iret
push
jb
jno
push
call
not
mov
mov
pusha
mov
setle
pusha
mov
pop
pushf
lea
ja
movzbw
pop
jmp
bt
ror
cmp
cmc
pushf
pushf
add
test
movb
stc
movb
xor
test
cmp
not
jmp
std
mov
mov
xlat
fsub
lcall
inc
in
cmpsl
ja
js
cli
pop
outsl
or
xchg
subl
dec
xchg
enter
push
cmp
into
xchg
pop
sahf
popf
loop
fwait
inc
sahf
jmp
pop
add
cmc
sti
cmpxchg
jnp
xor
xchg
stos
push
aas
jns
inc
cld
and
jmp
adc
call
and
inc
mov
fbld
jne
lods
imul
out
dec
or
fidivrl
xchg
in
adc
lock
lret
test
xchg
xor
sub
cmp
mov
test
fstps
xor
cli
cmp
xor
loope
cli
and
or
mov
loopne
dec
xchg
mov
lretw
inc
stos
sbb
pop
addr16
in
subl
add
stos
push
lea
jmp
lea
lea
xchg
push
movw
movzwl
pusha
movsbw
call
popf
out
xchg
ficoml
push
adc
sahf
xchg
adcl
sti
out
shll
jecxz
xchg
or
mov
pop
clc
js
outsl
and
dec
mov
icebp
ret
xchg
cltd
jb
jo
sbb
rol
add
test
xor
push
add
jnp
mov
adc
movsl
dec
sbb
mov
insl
sbb
or
outsl
jo
mov
fwait
repz
mov
jmp
les
mov
ret
add
insb
jmp
push
mov
aad
popf
into
inc
imul
loope
mov
xchg
mov
push
popa
shr
sbb
adc
int3
push
mov
pop
jmp
faddl
sub
in
loope
mov
aas
out
xchg
mov
repz
jo
enter
pop
fldl
pop
mov
sbb
les
jb
outsl
cmp
in
xchg
fildll
out
out
sub
outsl
shll
push
lock
push
pop
lahf
push
jg
dec
xor
xchg
insl
xor
mov
dec
mov
mov
xchg
dec
pop
out
fsubrs
imulb
dec
test
les
push
cmp
and
mov
cmpsb
jb
outsl
fsub
sbb
cmc
call
shrl
jg
add
cmp
xor
sbb
mov
add
testl
xor
cmp
aaa
arpl
mov
and
mov
inc
cmp
aam
cmpsb
test
clc
in
leave
movsl
shlb
fwait
lea
jne
push
pushl
movsbw
mov
pushf
lea
jmp
pushl
mov
mov
movsbl
bswap
lea
lea
pop
pusha
pushf
pushf
movb
pushl
ret
pushf
mov
pushl
lea
jb
cmp
cmp
pushf
pushf
jmp
pusha
pusha
push
movl
call
stc
andl
sbb
push
sub
mov
fists
adc
pushf
divb
daa
int3
xchg
pop
lret
inc
inc
mov
jae
sub
imul
push
ss
movsb
nop
xor
lods
dec
rcrl
adc
test
fisttpl
xor
insl
sub
mov
and
jb
insl
cwtl
movsb
in
sahf
cmpl
xor
jecxz
je
out
leave
lahf
fs
aas
loop
jnp
jp
js
mov
shll
sub
mov
push
dec
xor
iret
cltd
jb
stc
lret
mov
jb
insl
aaa
inc
fwait
aaa
fistl
ror
lods
subl
pop
popa
pushl
cmpsl
icebp
jbe
cmpsb
sbb
cs
aad
out
mov
cmpsl
cmpsl
addr16
mov
fwait
sbb
mov
imul
xlat
mov
insb
cmpsl
pop
out
lods
insb
adc
jno
lahf
and
loop
xor
testb
ljmp
arpl
pushf
mov
sub
or
stos
jne
jmp
aas
cmp
in
icebp
xor
pop
mov
sbb
out
cmpsl
lea
int
rcrl
dec
adc
dec
jne
sub
lahf
push
mov
in
hlt
cltd
stos
push
adcb
sahf
xchg
mul
cmpsb
and
mov
enter
inc
outsl
cltd
xchg
dec
fldenv
cmpsb
fdivs
repnz
std
pop
arpl
cli
add
push
in
jge
dec
adc
add
and
mov
test
sub
rcrl
popa
sbb
aam
push
jb
ljmp
aaa
fimull
stc
jge
jle
jle
or
push
pushf
pop
pushf
stos
dec
shll
mov
pushf
sub
in
push
aaa
ja
dec
ljmp
shrb
mov
mov
aam
cmpb
push
dec
add
fcomi
mov
icebp
mov
adc
mov
adc
in
imul
mov
lock
xchg
js
push
les
add
call
mov
stos
mov
pop
pop
xor
shrl
or
xchg
cmp
mov
std
xor
out
mov
mov
divb
iret
sbb
sbb
fdivr
and
or
lods
lods
cmp
sub
outsb
pop
push
cmp
lds
add
std
inc
and
xchg
mov
test
hlt
fmuls
faddl
pop
and
scas
inc
sbb
dec
sub
adc
or
mov
popf
aam
rclb
sti
lcall
mov
jns
das
mov
enter
pusha
clc
stos
pop
adc
movsl
and
insl
or
das
xchg
call
push
dec
cmpsl
push
xor
xlat
scas
xorb
daa
sub
arpl
mov
jne
cmp
lock
jnp
add
mov
leave
adc
jb
imul
std
std
lea
xchg
insl
aad
adc
sub
jb
inc
xchg
mov
sbb
mov
pop
out
xor
decb
test
inc
sub
add
in
and
test
insl
xchg
adc
push
hlt
add
jnp
inc
push
out
in
xchg
push
data16
movsb
in
pop
sbb
test
add
jmp
adc
inc
call
add
dec
outsl
arpl
inc
jb
gs
push
xlat
jmp
inc
mov
je
or
loop
decl
movb
inc
pushl
push
pushf
lea
jmp
xchg
lea
xchg
movzbl
pop
xchg
not
pusha
mov
pushl
lea
mov
bswap
movsbw
pushf
mov
mov
pushl
movb
pushl
ret
mov
and
data16
enter
jb
adc
cwtl
fs
mov
popf
std
or
sbb
testb
es
jp
sbb
push
xchg
adcl
fstp
pop
mov
and
fsubrl
mov
mov
aam
or
imul
add
push
pushl
ret
cmc
stc
movb
not
bt
pusha
rol
bt
cmp
cmp
add
pusha
call
add
in
mov
lods
cmpsl
pop
jge
loop
lds
jne
jge
jae
je
out
out
hlt
loop
cmp
xchg
jne
sub
mov
les
mov
xor
pushf
mov
mov
lea
jmp
addr16
push
cld
pushf
cmp
push
ja
push
lcall
mov
add
add
pushf
pop
push
jae
lea
cld
sub
cmp
and
movl
pusha
push
movw
lea
jmp
call
mov
pushl
popl
pushf
mov
pusha
pushl
ret
setge
mov
pusha
movsbw
movsbl
lea
jmp
subb
outsb
out
call
outsb
ss
push
out
lods
inc
ret
inc
cmp
jecxz
dec
lret
das
add
sub
das
pop
or
mov
inc
test
call
sbb
lret
loopne
cmpsb
xchg
jae
jb
push
hlt
pusha
pusha
mov
mov
lea
jmp
or
pushf
pushf
lea
je
movsbw
mov
jmp
pushf
mov
push
movl
call
pop
or
add
movsb
inc
jp
sbb
push
clc
lods
xchg
orl
addr16
push
std
push
cmpsl
pop
sbb
jo
stos
cmp
loop
or
mov
fldenv
fsubp
lea
sbb
jmp
sbb
addr16
movb
pusha
dec
clc
shl
call
call
pushl
pushf
pusha
lea
je
call
clc
cmpb
pusha
pusha
push
lea
jne
push
bswap
lahf
daa
sub
rcr
shl
mov
shl
add
rol
rol
adc
push
mov
clc
test
pushl
pushf
movl
lea
je
jmp
jmp
movsb
inc
push
xor
ds
fstpl
ds
lea
lods
push
std
sub
inc
jno
push
lods
mov
stos
cmp
mov
dec
fisubrs
sbb
cltd
inc
inc
or
les
inc
jb
mov
pushf
clc
rol
mov
add
pushf
not
movw
jmp
not
movb
not
mov
lea
lea
push
movl
push
call
mov
or
xor
lods
movsb
xchg
sub
pop
out
dec
popa
sbb
add
sub
cmp
mov
xchg
cmp
insb
addr16
nop
aas
add
stc
mov
test
and
movsl
xchg
pop
gs
lcall
iret
or
adc
cltd
xor
clc
iret
xchg
cltd
push
fmuls
in
mov
mov
stc
mov
cmp
into
fwait
cmpb
jb
data16
cld
inc
or
pusha
call
pushf
inc
pushf
pushf
pusha
pushl
inc
pushf
and
rcr
xchg
neg
cmp
not
rcl
mov
cmp
setbe
setg
inc
mov
cmp
xchg
bsf
btr
mov
pushf
sub
call
setnp
push
movzbl
pushf
lea
call
fistps
cmp
insl
jb
jmp
add
lcall
cmp
scas
sbb
out
inc
jns
push
mov
add
adc
lret
mov
add
cld
ds
mov
inc
test
movsb
and
sarl
aam
xchg
imul
outsb
add
mov
fildl
xchg
sarl
jmp
push
arpl
and
jne
cmp
mov
clc
cmc
bt
jmp
push
lea
call
jmp
push
lea
je
cmc
test
test
clc
add
cmc
test
cmp
pusha
pusha
movb
jmp
movzbw
xchg
pop
push
xchg
not
mov
lea
mov
push
pusha
mov
jmp
inc
mov
pushf
lea
jb
call
stc
test
cmc
cmp
push
lea
jae
bt
cmp
push
call
dec
rorl
inc
gs
push
and
dec
sub
sbb
out
daa
daa
cs
push
mov
aad
mov
mov
cmp
inc
lods
mov
movsl
shll
ljmp
pop
lret
jb
cmp
cld
lea
jno
jae
cmp
add
pushf
jmp
movzbl
not
mov
push
lea
push
not
lea
pushf
movl
pushf
mov
pushf
movw
pushl
ret
call
push
call
std
pop
cmp
hlt
imul
mov
shlb
ret
pop
or
ljmp
js
aas
aad
sub
std
rol
paddb
rolb
std
pusha
jns
xchg
jl
jmp
jle
divl
mov
pop
lods
into
xchg
fstps
mov
lahf
xor
pop
out
pop
or
and
mov
insb
cltd
push
les
adc
dec
mov
push
mov
aad
ret
mov
mov
sub
cmc
jg
xchg
lret
mov
cmpsb
lret
faddl
data16
pusha
shr
jne
xor
and
cmp
inc
jg
fnstenv
or
mov
mov
bnd
loopne
xor
call
test
les
pop
adc
scas
sub
mov
mov
mov
sub
clc
rcrl
push
lret
jmp
mov
ds
test
shrb
jmp
test
dec
in
cmp
push
cwtl
fs
pop
inc
jb
bound
roll
movl
movsbw
not
pushf
lea
pushf
movl
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
in
das
jmp
jmp
pusha
pusha
push
call
pushl
popl
push
movb
movb
movl
pushl
ret
mov
pushf
movb
pushl
ret
mov
test
cmc
bt
cmpb
pushf
jmp
xchg
movzbl
not
movsbl
movzbw
mov
setns
pusha
lea
pushl
mov
movsbl
pop
bswap
movl
lahf
lea
pushl
call
mov
out
filds
icebp
ret
movsl
lcall
lcall
ss
out
push
sbb
push
mov
adc
fs
push
mov
mov
out
add
shll
or
mov
ds
stos
ret
popa
xchg
popf
mov
pushf
add
pusha
test
mov
jmp
inc
jmp
lea
jne
btr
bsr
push
cmp
xor
movsbl
bsr
cwtl
mov
setne
bt
add
mov
rcr
sub
and
mov
clc
call
pushf
pushf
pushf
mov
pushf
pushf
pushl
ret
lea
jb
clc
pusha
not
stc
call
jmp
movl
lea
jns
pushl
pusha
pushf
pushl
mov
pushl
ret
not
movsbl
mov
bswap
movzbl
cwtl
movl
movsbw
pusha
push
lea
jmp
mov
pusha
movb
movb
pushl
ret
movl
push
inc
call
stc
bt
call
call
aam
sbb
mov
hlt
mov
mov
mov
jecxz
lds
sahf
push
roll
in
out
insb
into
aas
jbe
shll
call
mov
dec
nop
ljmp
mov
xor
in
add
mov
add
dec
ja
xlat
adc
fsubrs
cli
push
pop
jp
pop
sbb
pusha
out
xor
sbb
int3
mov
mov
jb
pusha
add
xor
jmp
cmp
mov
inc
sbb
pusha
mov
bt
rol
shr
lea
or
mov
pusha
test
clc
jmp
pushf
call
inc
stc
neg
movw
call
pushl
call
movsl
lret
mov
cmp
data16
cmp
xchg
fs
cli
scas
pop
or
jns
test
icebp
daa
cmp
adc
pop
sbbb
inc
loopne
loopne
push
mov
lods
cltd
mov
imul
outsl
mov
xchg
mov
in
mov
add
sbb
xchg
enter
in
stc
adc
popa
or
in
jg
inc
test
push
in
cmpsl
adcb
xor
xchg
insl
jp
add
fiaddl
adc
fcmovb
jl
ss
add
inc
dec
mov
sub
lock
pop
dec
sub
sahf
sub
stos
inc
and
test
sti
jecxz
pop
jo
pop
cmp
xor
jb
pop
enter
imul
lea
jne
rcl
rcr
clc
mov
stc
add
stc
cmp
movzwl
lea
jmp
call
lea
pushf
call
push
movl
push
call
jmp
clc
shl
lea
jns
pusha
push
lea
je
push
pushf
mov
call
cmc
stc
bt
call
pushf
pushf
pushf
lea
je
bt
rol
adc
rcl
sub
clc
call
pusha
pushf
push
lea
je
pushf
call
movb
pushf
call
dec
add
out
mov
leave
andl
mov
inc
adc
xor
insl
mov
pop
sub
pop
jmp
jp
ljmp
ljmp
dec
mov
or
fs
cwtl
leave
test
xor
leave
movsl
mov
pop
adc
or
dec
mov
add
ss
aaa
dec
push
sbb
adc
jg
sbb
mov
fs
enter
in
inc
ds
js
lea
andl
in
sub
cmpsl
fwait
xchg
cmpsl
jb
pop
sbb
movl
push
pushf
push
pushf
lea
jmp
outsb
out
mov
insb
fisubs
movsb
jge
xor
xor
into
scas
pop
sub
xor
out
shll
push
jmp
pushf
cmp
adc
outsl
out
xchg
mov
jae
test
arpl
jg
push
repz
or
mov
out
incl
imul
in
push
ss
rcll
outsb
test
lods
stos
arpl
shrb
clc
das
iret
shlb
in
aad
shll
cld
sbb
imul
mov
sbbb
push
mov
stc
sar
push
dec
loope
repnz
out
cld
jmp
or
iret
mov
xor
lock
sbb
push
shll
mov
push
mov
inc
xchg
xchg
push
pushf
push
cld
loop
out
pop
aad
pop
mov
mov
mov
mov
dec
mov
test
xor
mov
xchg
jle
push
lock
mov
stos
out
sahf
mov
mov
xor
sbb
xchg
repnz
cli
arpl
adc
ljmp
mov
ret
outsl
jne
sub
mov
xchg
push
fucomi
push
mov
mov
inc
inc
xor
fistps
fdivs
adc
roll
cld
out
clc
arpl
sahf
div
outsb
or
cmpsb
xchg
lahf
ss
mov
mov
movsl
xlat
int
jecxz
es
xchg
inc
repz
adcb
sub
cli
jge
add
adc
jbe
xor
sbb
mov
das
xor
or
js
cmp
sbb
sub
sub
push
mov
icebp
push
int
sbb
mov
mov
xor
in
cmp
jns
or
jo
ds
push
mov
mov
add
insb
ljmp
sti
pop
sbb
sahf
in
adc
adc
lock
mov
jo
xchg
push
bound
std
cmova
imul
into
test
fimuls
into
call
leave
xchg
imul
jl
outsl
jbe
data16
inc
mov
mov
out
dec
xchg
ffree
fcomi
arpl
mov
dec
jno
repnz
call
add
pop
xor
ret
sarb
shrd
mov
scas
xor
xchg
and
pop
xchg
loopne
ja
jl
clc
push
add
mov
sbbl
cltd
outsl
out
mov
xchg
imul
or
jne
lcall
imul
aad
mov
jg
xor
push
std
xchg
push
sbb
xor
cmp
mov
adc
xchg
ret
lret
mov
xor
dec
aad
mov
ror
jo
xchg
fnstenv
adc
mov
lret
mov
arpl
js
push
mov
dec
cmp
out
insb
pop
clc
push
setbe
jmp
mov
add
ror
clc
fdiv
cltd
outsl
and
cld
dec
cli
repnz
cs
cld
in
outsl
and
xlat
out
call
push
mov
mov
imul
arpl
loop
mov
adc
mov
push
adc
push
clc
sahf
inc
pop
outsb
js
icebp
xchg
cmc
mov
loope
imul
fildl
test
out
inc
mov
outsl
xor
push
xor
neg
push
adc
jge
lcall
fld
jl
sahf
mov
fs
sti
loop
xchg
lahf
mov
sub
in
lock
add
out
mov
dec
adc
stos
sbbb
push
sbb
arpl
ret
xchg
mov
pop
hlt
mov
movsl
repnz
add
and
sub
sbb
xchg
adc
sub
mov
push
fdivrl
je
imul
lcall
pop
cwtl
xchg
loop
fisttpl
cmp
xchg
stos
hlt
jbe
mov
movsl
call
push
adc
mov
ljmp
push
xor
idivl
jb
push
add
dec
andl
insb
push
aam
mov
xor
sbb
or
inc
cwtl
sub
push
daa
xchg
ljmp
ffree
push
jge
push
sbbl
test
inc
loopne
mov
push
jae
into
rorb
sbb
push
and
sub
fisubl
xor
jmp
std
sub
rorb
loop
inc
pop
mov
push
icebp
push
mov
sub
xor
push
in
stos
mov
incb
jns
xchg
and
push
int
adcl
mov
fisttpll
inc
mov
xchg
xchg
mov
xchg
cmc
jae
mov
push
nop
arpl
xor
in
mov
xor
mov
adc
mov
js
loop
aaa
xchg
lods
jne
andb
jno
les
aaa
negb
subb
cmpsl
loopne
xor
add
jno
push
sbb
and
loop
fnstenv
jmp
and
inc
lahf
add
pop
inc
fdivp
mov
testb
mov
xor
test
sbb
repnz
push
loop
xchg
mov
sbb
sub
adc
mov
sbb
loop
sub
hlt
xchg
cmc
jecxz
and
lods
sbb
jge
iret
out
mov
loopne
popa
mov
in
lahf
imul
not
push
loop
icebp
outsl
scas
insb
ds
jbe
int3
nop
cltd
mov
jg
push
loopne
mov
nop
fsubl
mov
fidivl
sub
mov
scas
push
mov
loop
sbb
mov
cmp
ja
rolb
xor
sbb
mov
jne
shr
pop
jne
movaps
ljmp
push
xchg
testl
xchg
or
in
mov
adc
mov
cmpsl
jae
push
add
adc
pop
jge
jge
jbe
jns
pop
pop
cmp
jo
mov
jb
insl
xor
sub
orl
addr16
movsl
inc
or
js
add
mov
xor
imul
ret
xlat
imul
mov
sbb
jg
es
imul
lods
inc
mov
hlt
fdivp
pop
sub
or
adc
add
outsb
js
pop
mov
mov
sahf
adc
testb
sub
mov
jne
icebp
mov
loop
popf
mov
cs
lret
fidivl
rclb
inc
ja
mov
or
inc
out
xchg
mul
xchg
repz
jg
pusha
incl
cmp
arpl
and
add
test
cwtl
inc
adc
adc
and
inc
push
cwtl
sahf
divb
xor
call
lock
jne
hlt
sub
jae
xor
inc
arpl
xor
mov
pop
jo
in
push
sahf
xor
loop
or
stos
dec
xor
or
imul
xchg
andb
push
les
incb
ficomps
hlt
dec
loop
xor
jnp
ds
outsb
dec
int3
mov
outsb
shr
fdivl
cmp
or
dec
xchg
test
lahf
inc
ficomps
xchg
scas
into
xlat
imul
out
daa
mov
mov
dec
mov
add
xor
jb
imul
loop
xchg
push
mov
dec
jmp
jae
in
mov
lock
mov
pop
shrl
shrl
jne
fwait
popa
cmc
mov
xchg
in
arpl
into
shlb
dec
xchg
cltd
adc
ljmp
and
insl
mov
imulb
repz
imul
fisubs
aad
mov
jmp
pop
push
xchg
repnz
sub
xor
push
nop
scas
xchg
shll
add
ret
and
gs
inc
in
mov
inc
ror
repz
out
fdiv
scas
in
ret
jl
je
pop
movsb
mov
inc
push
cmp
aaa
push
jns
lahf
add
scas
andl
das
imul
push
je
loop
add
aaa
test
jp
mov
negb
mov
xlat
fldcw
jae
imul
aam
mov
sbb
xchg
xchg
fwait
xchg
fidivrl
cmpsb
mov
test
and
adc
testb
testb
or
arpl
sub
aad
lret
jge
movsb
fisubs
imull
into
stc
push
scas
arpl
mov
jb
pop
jne
pop
xor
bswap
dec
and
dec
push
adc
jae
arpl
mov
xchg
push
je
dec
xchg
mov
fidivrs
scas
cmp
or
mov
ficoml
mov
shl
mov
cmp
das
in
sub
daa
mov
jae
hlt
or
push
xchg
leave
ja
cld
je
jecxz
cmp
scas
test
gs
and
imul
scas
divb
aas
addr16
xchg
mov
repnz
jbe
leave
sbb
ja
mov
mov
nop
in
add
mov
js
outsl
xor
pcmpeqd
gs
fisubs
test
test
shrb
fildl
outsb
divb
cmp
dec
dec
jo
arpl
aam
xchg
cmpl
loop
cmp
dec
out
aad
jbe
mov
push
xchg
push
push
jge
lods
or
sti
cmp
fidivl
adc
insl
nop
lret
dec
data16
xor
fwait
cmc
or
imul
mov
jo
cmpsl
jae,pt
imul
in
cs
add
jo
jbe
push
fists
leave
dec
xor
mov
mov
mov
icebp
push
into
mov
mov
scas
sbb
adc
lods
mov
js,pt
lret
jmp
jb
std
lea
arpl
ljmp
les
scas
jno
mov
rcl
test
mov
fnstsw
or
jecxz
insb
sub
lahf
clc
fucomip
jecxz
inc
les
clc
testb
insl
int3
jbe
repnz
pop
comiss
lahf
into
in
lahf
mov
movsb
sbb
loopne
adc
imul
dec
or
icebp
pop
sub
loop
jae
lock
cmpsb
sarl
pop
call
xor
jae
adc
pop
outsl
ljmp
xchg
mov
repnz
sar
lret
hlt
inc
ljmp
jne
mov
push
mov
jp
xchg
mov
bound
sub
outsb
sbb
loop
mov
dec
pop
shrl
xchg
or
test
loopne
imul
sbb
js
daa
fdivs
mov
test
nop
arpl
inc
scas
xor
cmp
icebp
mov
sbb
xor
xchg
jae
jge
cmp
mov
mov
adc
es
lret
mov
cmp
pop
rclb
add
rorl
icebp
mov
popf
ret
xchg
aas
mov
or
xchg
loope
sbb
sahf
sub
in
mov
aad
add
lret
xor
cltd
xchg
int3
sbb
shlb
in
outsl
jae
scas
outsb
sarl
mov
mov
pushf
arpl
dec
mov
xchg
mov
jecxz
cmpsb
test
jnp
xor
jge
mov
mov
subb
or
or
rcrb
mov
push
mov
movsl
sub
add
cli
push
push
ds
sub
cmp
pop
fwait
arpl
pop
jno
loop
insb
xor
mov
cmp
into
das
insl
push
mov
adc
das
lds
jae
jmp
mov
std
imul
aas
mov
mov
lret
lret
scas
mov
adc
push
jne
jmp
js
xchg
pop
and
xor
call
mov
push
push
jo
push
imul
bound
imul
outsl
xchg
scas
outsb
and
loope
cli
sub
addr16
out
bound
testl
push
xor
mov
cld
xchg
decl
sbb
pop
cmpsl
pushf
mov
shr
adc
shlb
mov
mov
pop
adc
imul
xchg
int3
lret
out
scas
loop
movl
sub
outsl
out
xlat
add
iret
jno
fidivs
iret
pop
fcmovnbe
push
out
sahf
nop
mov
add
xlat
daa
call
mov
in
hlt
shlb
sbb
sbb
sub
xor
push
es
or
test
out
test
fdivrl
adc
packsswb
fs
sti
xchg
int3
sbb
pop
aaa
xlat
sub
pop
aad
or
in
inc
and
push
test
ret
jns
xorl
ja
ret
add
movsb
fcoms
loop
xchg
lret
xchg
divb
mov
sub
mov
fisttpll
sbb
mov
ljmp
sahf
scas
notb
test
outsb
inc
fst
movsb
pop
xor
sbb
inc
jb
jbe
iret
mov
sub
mull
xchg
xor
lret
sahf
pop
popa
mov
jl
shl
lock
xlat
xor
adc
xchg
insb
xchg
into
shl
fs
pop
or
popa
imul
inc
loop
call
xchg
sbb
add
sbb
mov
es
push
mov
push
mov
cs
adc
jno
adc
rcl
sarb
js
arpl
xorb
adc
stos
mov
iret
adc
jbe
mov
dec
insl
jno
xstore-rng
cmpsl
xchg
arpl
movsl
mov
inc
scas
lock
ljmp
fildll
push
mov
jecxz
push
fdivs
add
dec
xchg
scas
je
data16
ficomps
push
xor
ret
xchg
adc
fdivs
into
shl
adc
push
shl
psubsb
xchg
mov
sahf
das
jmp
outsb
rclb
adc
iret
insb
testb
leave
push
and
mov
ror
jl
jl
jp
adc
dec
or
and
out
pop
add
ljmp
sbbl
pop
adc
pop
iret
sti
sub
lret
mov
or
cli
movsb
or
sbb
add
push
insl
or
and
stc
add
adc
repnz
loopne
sahf
mov
adc
cmp
and
mov
test
fsts
clc
negb
xchg
mov
jae
and
xor
cmpsl
xchg
aam
sbb
xor
push
out
inc
fld
pop
imul
or
pop
push
sti
and
mov
mov
aas
or
xlat
arpl
xchg
in
jl
adc
jb
repz
inc
sahf
scas
movsl
shl
loop
icebp
in
jmp
repnz
outsl
xchg
fwait
mov
lahf
sbb
roll
pushl
shl
in
cli
cmc
mov
rclb
repnz
test
out
repz
jno
ja
cli
mov
pop
pop
negb
pushf
mov
idivb
mov
lcall
das
push
out
aam
negb
in
jnp
negb
stc
repnz
xor
mov
push
incl
scas
repz
and
mov
idiv
xchg
sahf
jg
jnp
mov
rcll
mov
xchg
jg
jns
mov
sarb
dec
cmpsb
cmp
cltd
mov
idivb
cwtl
mov
scas
div
lods
aam
sbb
mov
repnz
int3
nop
nop
repz
repnz
jno
hlt
stos
insb
idivb
cli
shll
stc
out
in
nop
xor
lods
sbb
xchg
dec
mov
mov
enter
xchg
addr16
mov
movb
cmpsb
scas
hlt
ja
gs
sahf
sub
enter
jno
hlt
cwtl
inc
orb
repz
repnz
fldcw
mov
xchg
loop
shl
ret
mov
neg
xor
xchg
stc
clc
mov
in
mov
xchg
pop
in
jae
lock
testb
add
mov
imulb
xchg
not
stos
idivb
subb
add
add
add
divb
fadds
call
mov
divb
outsl
xchg
sub
jg
aas
call
mov
adc
lock
mov
mov
scas
xorb
ret
sbb
hlt
xchg
mov
scas
movsl
fwait
das
lahf
lahf
xchg
mov
push
adc
test
mov
mov
idiv
or
mov
out
repnz
jno
or
xchg
aam
cli
mov
lods
testb
mov
xchg
jne
push
sbb
int
xchg
loop
mov
test
sbb
test
cmp
and
jbe
fdivp
xor
mov
xor
xlat
xchg
loop
inc
xchg
data16
pop
arpl
out
xlat
jnp
xchg
mov
sub
cmp
push
decb
shrl
add
sahf
fildll
stc
je
add
mov
jmp
divb
enter
das
or
pop
lods
sbb
mov
lret
jg
pop
iret
jnp
inc
push
repz
sub
out
dec
popa
out
arpl
adc
adc
hlt
adcb
cltd
orl
insl
or
in
dec
adc
mov
jnp
sub
xor
imul
xchg
mov
cltd
loop
pop
testl
shl
loop
add
jns
xchg
pop
mov
push
xchg
sbb
jno
jp
mov
out
fcomip
shl
jecxz
jo
mov
dec
add
arpl
test
mov
adc
repz
add
mov
mov
jbe
sarb
jmp
sahf
ret
mov
jnp
jge
push
stc
outsl
mov
lock
mov
cltd
ljmp
insb
pushf
addl
add
adc
stos
aas
scas
clc
hlt
arpl
or
cld
mov
pusha
scas
nop
dec
dec
out
xchg
mov
pop
inc
xor
out
sub
mov
test
frstor
out
ljmp
sub
mov
out
xchg
arpl
jmp
xor
push
or
adc
aad
lock
jp
cwtl
jbe
inc
sbb
mov
sbb
sub
jne
dec
addb
push
js
inc
pop
push
in
ljmp
arpl
inc
inc
rcrl
fsub
scas
inc
sub
loopne
xor
daa
data16
ljmp
shr
aam
out
jo
mov
inc
into
xchg
nop
sbb
mov
xchg
jmp
and
sbb
out
or
sarl
fstps
add
loop
adc
add
cmpb
mov
and
cmc
out
dec
scas
mov
daa
sbb
xor
xchg
mov
mov
sbb
sarb
cmc
inc
dec
loope
or
mov
addr16
arpl
lea
push
pop
mov
imul
mov
jae
lret
push
fs
push
cltd
movl
push
stos
cli
cmp
xchg
sub
stos
ja
and
cmpb
adcb
mov
cmp
inc
insb
stc
repz
jb
sarb
daa
loopne
inc
add
shr
mov
sbb
movsl
push
imull
sub
popf
addl
mov
dec
dec
out
push
test
pand
out
imul
xlat
loope
stos
and
lret
sar
pop
js
mov
outsb
push
cmp
into
mov
sbb
inc
cmp
movsb
mov
jnp
arpl
fnstcw
jns
xor
xchg
out
mov
adc
stc
data16
jns
mov
cmpl
sarl
in
iret
or
push
cmp
push
push
sahf
je
pusha
push
add
cmpsb
into
pop
or
xor
jmp
cmp
call
xor
rorb
jmp
xor
xchg
iret
fs
repz
and
jne
adc
xchg
imul
repnz
and
xor
fnstcw
fcomi
rcrb
ficoml
dec
shl
sahf
xchg
nop
mov
or
rcr
mov
jmp
or
test
arpl
not
xor
xor
imul
or
pop
adc
je
popa
aaa
repz
or
cmpsl
out
sbb
or
pop
sbb
mov
mov
mov
mov
arpl
dec
mov
jb
bound
loope
sbb
das
mov
shrb
sub
inc
push
in
jno
imul
in
mov
pop
cmc
gs
mov
xor
jecxz
mov
dec
adc
lahf
push
xor
pop
imul
sub
mov
icebp
jae
scas
insb
rcrl
fwait
xchg
pop
roll
mov
pop
mov
shlb
movsb
xlat
add
loop
adc
arpl
cs
mov
xchg
std
rclb
jp
shr
shrb
pop
addl
repnz
arpl
fisubs
add
sarb
jp
pusha
and
mov
add
loop
or
or
jno
dec
xlat
fcmovbe
mov
jmp
sub
jg,pn
jge
into
fcomip
add
xor
xor
das
and
mov
popf
ljmp
pop
mov
mov
mov
fsubrp
push
movsb
xor
cmpsl
mov
or
push
pop
cwtl
cmpsb
inc
ljmp
dec
mov
xchg
loopne
std
xchg
add
hlt
inc
imul
fucom
pop
icebp
ror
xlat
jo
insl
stos
leave
cmp
add
shrb
jb
rcll
fisubl
jo
jo
dec
lea
xchg
rcrl
push
in
cmpsb
mov
xlat
pop
out
xorb
jmp
jne
loop
mov
adc
or
cli
fs
in
lret
mov
lock
inc
out
daa
jae
arpl
rclb
hlt
xchg
dec
out
aam
xor
adc
jb
dec
icebp
and
jge
loope
loope
js
shrb
pop
jp
xchg
mov
jb
nop
add
mov
shl
or
pop
push
cld
cmc
in
mov
repnz
push
push
inc
hlt
sub
add
scas
in
dec
loop,pn
xchg
iret
arpl
stc
mov
into
mul
ds
adc
push
aam
popa
adc
notb
sbb
cli
loop
jecxz
fbstp
int
sarl
pop
mov
push
bound
lret
mov
push
into
in
cmp
ljmp
add
imul
jnp
adc
pop
dec
mov
ja
mov
not
pop
sub
int
loop
mov
adc
xor
xor
push
arpl
xchg
jg
jo
repz
pop
xchg
js
inc
fprem1
xor
mull
fnstcw
sbb
and
push
and
adc
fst
enter
jmp
mov
loop
jmp
or
xor
dec
mov
je
sbb
xlat
loop
lcall
xor
arpl
dec
je
xlat
loopne
test
dec
sbb
loop
adc
xchg
and
cltd
cwtl
dec
inc
call
mov
mulb
lahf
unpckhps
sub
fwait
ss
jb
jne
push
jne
jg
cmp
push
xor
mov
pusha
out
sub
sbb
clc
mov
shr
nop
arpl
mov
mov
mov
outsl
mov
loop
pop
sbb
mov
shlb
push
jge
mov
push
xor
cs
pop
sub
addb
mov
sbbb
mov
test
lods
arpl
xchg
inc
popf
mov
xor
insb
testb
clc
nop
push
out
mov
jae
fidivs
sub
and
jle
push
jae
lock
fdivp
arpl
int3
clc
mov
daa
and
sbb
dec
mov
subl
push
xchg
loopne
mov
stc
dec
iret
sbbb
xchg
imul
icebp
daa
in
sarl
and
aaa
cltd
xor
mov
stos
lock
push
outsl
scas
jge
add
xchg
lods
push
inc
or
sbb
sbb
fndisi(8087
cmp
insb
loop
push
andb
nop
ja
jge
ljmp
fs
arpl
ret
and
in
push
push
xchg
iret
cwtl
xor
nop
mov
aaa
mov
add
imul
arpl
stc
add
aaa
mov
mov
into
jne
push
rorb
xlat
loope
ja
cmp
cmp
call
pusha
mov
dec
adc
add
std
adcl
sbb
es
mov
mov
arpl
outsl
aaa
add
ljmp
mov
dec
jno
arpl
mov
repnz
or
andb
outsl
std
inc
dec
out
pop
loop
hlt
and
adc
outsl
test
insl
pop
jp
js
mov
adc
jecxz
in
in
fwait
xor
fdivrs
push
fwait
mov
push
icebp
mov
mov
sti
sahf
jg
imul
jns
scas
xchg
sub
sahf
aas
mov
idivb
ss
mov
jnp
dec
or
mov
xor
xchg
fildl
scas
aas
fisubl
cmp
push
mov
hlt
or
add
aas
mov
xchg
dec
and
daa
jno
test
sar
xor
or
roll
dec
adc
dec
xchg
das
xor
rclb
dec
pop
xchg
push
aad
xchg
jl
lahf
mov
sub
aas
int3
sbb
outsl
hlt
mov
mov
jle
loop
std
xchg
sbb
icebp
mov
jmp
mov
rclb
xchg
das
mulb
mov
rorb
pop
xchg
cmpsl
out
shlb
push
imul
hlt
lock
sti
aaa
cli
mov
add
push
push
dec
cmp
pop
push
outsl
mov
cltd
sti
in
add
movb
out
mov
push
mov
lret
aaa
xor
ret
adc
mov
pop
fcomi
mov
adc
stc
mov
mov
sarb
sbbl
loopne
and
cwtl
mov
push
lea
ret
or
leave
push
pop
scas
test
cmpsl
jno
movsb
les
cmp
cmp
sbb
idiv
adc
and
sbb
jae
mov
jbe
nop
hlt
les
or
pop
sahf
out
loop
pop
mov
lret
insl
aam
iret
pop
mov
dec
push
jo
sbb
mov
fldl
pop
in
mov
sahf
push
cmp
jae
cmp
iret
pop
dec
popa
cli
mov
arpl
scas
test
fstps
jno
push
xor
or
shlb
pop
imulb
push
xchg
das
bound
jae
insl
popa
scas
push
xlat
hlt
sar
cmpsl
shr
xor
fistl
fidivs
sub
xlat
xchg
mov
jecxz
xchg
in
aad
aas
lods
les
mov
call
paddb
rol
sub
dec
jle
es
iret
xlat
movsb
inc
arpl
shr
out
xor
xor
out
mov
mov
js
cli
jl
xchg
cmp
mov
sbb
lahf
jno
jae
cli
test
fnstsw
or
cmp
jae
push
fstpt
or
cmc
cld
xchg
pop
and
fsubrs
loopne
leave
pop
into
ljmp
pop
pop
push
push
mov
shlb
ja
pop
xor
das
jmp
pop
sti
pop
cmc
xorb
div
push
jae
into
jl
push
arpl
xorb
xor
test
cwtl
addr16
out
cmp
mov
fnstenv
mov
mov
insb
divb
mov
in
push
loop
xor
fildl
imul
lahf
or
mov
stc
aad
mov
jmp
lcall
arpl
fstl
mov
xor
shlb
scas
xor
mov
mov
stc
sbbl
lock
push
nop
ss
in
mov
xor
loop
sbb
int
loope
sub
pop
lahf
mov
mov
cli
das
pop
gs
add
jb
pop
add
pop
lock
jmp
lahf
jmp
cltd
int3
clc
mov
sub
subb
and
outsl
mov
and
cmp
sub
orb
jp
outsl
mov
adc
daa
insl
js
loop
mov
jmp
and
das
or
fsts
addr16
test
jnp
push
jne
dec
das
sbb
pop
sbb
pop
and
test
idiv
sub
lret
lea
and
mov
cli
cmp
imul
lods
outsb
bnd
add
mov
fidivrs
cld
pop
popf
push
xor
push
add
in
xlat
das
and
cmpsl
mov
fstpl
sub
loop
pop
and
fistpll
xor
sti
ljmp
in
pop
lret
mov
insl
test
jo
subb
ljmp
cli
jno
cvtdq2ps
hlt
arpl
cs
sbb
divb
xchg
dec
mov
dec
sbb
dec
aad
dec
inc
lods
mov
or
gs
mov
push
mov
cmp
das
push
sbb
and
dec
out
xor
arpl
rclb
enter
dec
dec
xchg
mov
stc
sub
shl
dec
sahf
xchg
call
adc
mov
ljmp
jae
lcall
jge
loop
in
pop
xchg
imul
sbb
inc
xchg
adc
aas
clc
test
mov
jge
fisubs
lods
imul
dec
lock
xor
xor
loopne
ret
mov
mov
pop
mov
lret
loope
xor
imul
cmc
arpl
neg
ljmp
mov
jbe
js
xchg
arpl
pop
cmpl
push
push
xor
or
in
inc
imul
mov
xlat
xor
in
mov
ljmp
lds
int3
lods
je
add
fsubrs
cmp
inc
jbe
jnp
loop
xchg
sbb
jnp
inc
fsubs
mov
and
mov
or
mov
in
mov
and
mov
mov
mov
push
lahf
adc
or
cmp
jae
test
and
ljmp
outsl
mov
jbe
push
jmp
cmpsl
mov
adc
psrad
push
xchg
mov
xchg
xchg
sub
xchg
jns
or
es
mov
xlat
pop
imul
jno
insl
rcl
out
xlat
imul
push
repnz
pop
jb
jg
in
scas
lock
mov
xchg
insl
mov
dec
mov
mov
pop
fidivs
mov
cli
js
push
xor
and
mov
stc
loopne
pop
outsl
sub
push
xchg
mov
les
xchg
pop
loop
mov
js
jl
mov
inc
sub
xor
adc
and
lcall
push
sbb
cmp
jae
inc
rcr
sbb
jl
or
repnz
cltd
jl
jg
add
add
add
sub
popf
jbe
loop
inc
push
mov
dec
test
notl
je
pop
cmpb
bound
ds
mov
push
jb
dec
sbbb
adcb
and
jae
xor
icebp
scas
pop
jp
lock
pop
xor
dec
lcall
je
mov
das
mov
ljmp
pop
or
push
mov
or
in
xchg
popf
jecxz
jbe
and
pushf
aam
inc
sbb
xor
push
jae
jnp
sbb
pop
add
bound
daa
mov
sub
lcall
arpl
xor
cs
sbb
dec
or
icebp
mov
fstpl
push
sbb
push
xor
mov
cli
fidivrs
imulb
in
mov
das
loopne
xor
lcall
jb
push
inc
pop
push
sahf
enter
and
iret
gs
and
jp
jae
adc
cwtl
outsl
push
mov
stos
in
cltd
int3
cmpsb
cmp
arpl
divl
and
cmp
std
jae
mov
mov
insb
jae
xchg
pop
ret
jle
ja
loop
setno
cmp
push
xchg
jmp
loop
sbb
add
push
rcrl
fmuls
movsl
loop
test
mov
sub
push
lcall
xchg
xchg
mov
out
mov
xor
in
testb
xchg
push
jmp
fiaddl
pop
neg
inc
and
inc
lock
iret
int3
inc
pop
mov
sbb
xor
inc
insb
adc
push
pop
fwait
jae
mov
jmp
inc
leave
out
iret
shrl
push
push
imul
xchg
loop
mov
je
xchg
pop
int
push
into
movsb
add
imul
shll
sbb
insb
lcall
sub
jnp
loop
push
inc
in
adc
jp
arpl
xchg
insb
cwtl
and
popa
pop
jne
sbb
pop
icebp
jp
pop
lret
sbb
notl
or
mov
mov
ljmp
fisubs
lcall
xor
cli
pop
mov
xlat
arpl
sarb
adc
cli
jbe
jno
pop
jecxz
loop
sbb
xchg
pause
mov
pop
sub
jp
adc
mov
push
arpl
jecxz
aam
test
sbb
movsb
lods
dec
push
or
outsb
adc
mov
imul
adc
test
into
adc
jp
loop
mov
out
mov
dec
mov
imul
push
cwtl
test
jg
push
sub
cmp
xchg
addr16
cwtl
or
arpl
sub
pop
scas
push
push
sahf
xchg
das
out
pop
and
clc
popf
loop
aaa
push
push
mov
imul
arpl
insl
in
pop
adc
mov
fsubrp
push
sbb
paddusw
adc
mov
cwtl
xchg
cmp
cli
pop
shll
xchg
arpl
fbstp
mov
cltd
xchg
mov
cmp
aaa
add
popl
pop
stc
dec
std
mov
xchg
mov
repnz
pop
testl
xchg
xor
push
xchg
psubw
fsincos
rol
aaa
idivb
or
ficompl
xor
scas
push
sub
jecxz
lret
fcompl
push
jbe
sub
jbe,pn
arpl
leave
mov
sahf
je
or
icebp
arpl
inc
mov
mov
xor
hlt
xor
mov
jecxz
cmp
jo
sahf
add
dec
arpl
push
int3
arpl
scas
mov
xlat
push
fistl
fwait
cmp
bswap
mov
xchg
mov
xor
mov
repz
pop
sub
syscall
insb
stc
push
xchg
scas
in
cmp
sbb
je
cmp
cmpsb
sub
xor
cld
xchg
mov
lods
ficomps
flds
testl
jmp
cmp
loop
sub
sub
shlb
shll
adc
jecxz
faddp
popf
mov
mov
dec
shl
and
outsb
lret
mov
xchg
insl
lret
add
cmpsb
pusha
dec
mov
inc
notl
lcall
sbb
in
loop
leave
cmpsl
pop
hlt
imulb
mov
loop
lock
aam
gs
arpl
lret
jae
push
push
faddl
cli
jbe
decb
fistps
add
push
sbb
pop
push
mov
xor
and
pop
add
pop
sti
jle
ds
add
cmp
lods
lods
cmp
aaa
sbb
fldt
mov
xchg
sbb
and
das
imul
and
jge
adc
loopne
xchg
in
out
mov
mov
mov
sti
call
jbe
shr
push
mov
scas
sti
icebp
sahf
push
loop
jns
div
scas
push
ret
xchg
pushf
mov
adc
adc
or
repz
xchg
cwtl
pop
cmc
jmp
mov
jmp
imul
mov
mov
orb
andb
jp
cltd
xor
dec
and
inc
lea
in
out
mov
int
mov
aaa
dec
out
add
cs
push
xchg
cmpb
mov
inc
inc
aaa
addb
addb
dec
pop
lss
mov
popf
mov
cmp
cmp
jo
mov
jbe
repnz
pop
repnz
movsl
daa
xlat
cmp
inc
push
mov
sbb
jno
lods
push
adc
into
pop
jae
or
mov
repnz
mov
inc
adc
repz
aam
rcrb
add
ret
jl
add
xlat
call
bound
hlt
add
ljmp
rclb
inc
repnz
cmp
orl
das
add
mov
fsubl
pop
add
insb
mov
in
dec
pop
inc
rcl
insb
jg
and
xchg
mov
shr
mov
mov
pop
adc
cli
ljmp
mulb
mov
xchg
mov
outsb
adc
pop
sahf
mov
sahf
loop
and
daa
and
out
mov
push
repnz
and
mov
std
mov
movsl
jno
push
in
popf
push
mov
ja
shrb
insl
lods
repnz
mov
push
out
xchg
outsl
xor
sahf
stos
int
jb
pop
insb
popa
sahf
cmpsb
loop
sub
add
adc
fmuls
movsb
into
jbe
call
fadd
dec
mov
subb
sti
mov
mov
sti
sahf
loop
shl
or
loop
sbbb
pmullw
mov
arpl
aaa
sahf
lea
push
push
sarb
sbb
pusha
mov
pop
pop
sub
xor
pop
xorb
fisubrs
rcr
dec
jge
insb
jge
inc
jbe
sbb
dec
addr16
mov
jae
sahf
mov
mov
and
mov
test
xor
sbb
mov
hlt
and
imul
in
push
jnp
loop
test
popf
pushf
xchg
mov
push
jb
inc
pushf
jmp
push
cmc
xchg
in
cmp
mov
lods
repz
icebp
test
inc
lock
ljmp
clc
arpl
xchg
out
into
mov
mov
mov
xor
scas
add
adcb
adc
xor
loopne
ret
lock
out
add
into
xor
mov
aam
xor
fadds
jo
fcmovne
imul
cmpsb
sbbb
push
push
xor
fsts
add
loop
mov
jecxz
xchg
adc
rcll
addl
mov
add
fildl
mov
or
icebp
sub
pop
or
xor
je
aam
cli
pop
push
cwtl
add
clc
jbe
icebp
jnp
test
dec
lahf
movl
and
call
outsl
mov
or
sub
add
cmp
dec
dec
xlat
pusha
push
enter
xchg
movsb
outsl
sub
loope
in
jnp
push
add
fs
mov
pop
jns
or
addr16
subb
imul
loop
loopne
pop
lods
arpl
jg
es
leave
xlat
push
dec
jmp
subl
out
outsb
jmp
loop
add
mov
jo
mov
test
mov
out
fwait
adc
call
sbb
add
jns
cmp
incb
xor
mov
loop
lcall
incb
outsl
xchg
into
dec
add
inc
adc
mov
sbbl
fmull
sti
sub
mov
movsl
push
cli
or
fnstsw
pop
adc
divb
cmp
cmp
mov
in
push
insl
aaa
pop
xchg
add
mov
mov
push
mov
inc
daa
mov
ret
rcl
jae
add
sahf
cmp
add
mov
xchg
jp
lods
inc
jo
mov
xor
iret
hlt
jno
insl
scas
jmp
mov
fisttpll
dec
pop
jge
lret
inc
cmpsb
je
out
in
sub
mov
xor
icebp
das
pop
inc
dec
mov
js
ret
es
cld
lcall
jbe
cmpsl
pop
mov
cmp
sub
std
push
adc
mov
aaa
jb
and
xchg
fistpl
stc
jne
jb
jbe
loope
mov
fisubl
mov
ss
cld
push
push
dec
mov
push
or
mov
icebp
aas
lock
loop
mov
leave
mov
xor
cli
into
shrb
fsts
dec
popf
into
outsl
arpl
xchg
pop
stc
aad
out
adc
mov
stc
cmpb
adc
mov
int3
dec
mov
mulb
dec
scas
xchg
cmp
das
imul
xor
xchg
pop
fdivrl
pop
xlat
dec
rcrb
hlt
imul
insl
mov
and
aad
mov
imul
xchg
cwtl
loope
add
jo
cmp
stc
sub
cmc
call
inc
fildl
aam
mov
icebp
les
mov
and
jbe
xor
int
mov
jp
mov
test
lahf
divl
mov
test
aaa
cmp
or
mov
mov
fcmovnb
lahf
mov
nop
mov
dec
imul
int3
xor
jecxz
fwait
hlt
add
jae
xlat
jno
arpl
lock
mulps
scas
aad
cs
lock
mov
push
xor
imul
sbb
ret
lret
xchg
jmp
inc
mov
or
call
outsl
mov
imull
lds
pop
adc
xchg
mov
adc
mov
push
sbb
js
add
push
jno
int
lods
mov
pushf
das
jl
fbstp
repnz
mov
popf
nop
lock
push
fdivrs
das
jnp
sbb
nop
lcall
push
mov
repnz
jb
mov
jge
pop
loope
test
out
push
pop
fcompp
mov
pop
test
or
cmp
jp
ljmp
pop
shrb
in
xor
arpl
mov
rol
mov
jmp
inc
out
push
aam
sahf
mov
mov
pop
call
jmp
jne
loop
push
push
repnz
lock
ds
shlb
insb
fistpl
jae
scas
ja
out
pop
int3
jnp
mov
sarl
std
insl
je
dec
adc
scas
pop
cwtl
inc
jmp
adc
js
je
sahf
jmp
jp
and
xor
push
lea
pop
adc
xorl
xor
xchg
ficomps
jb
push
shl
mov
es
cmp
push
or
inc
cltd
inc
cwtl
cmp
dec
pop
adcb
cmp
xchg
mov
sar
in
jo
scas
into
mov
mov
arpl
in
jno
or
mov
xchg
sbb
lods
mov
out
mov
adc
mov
scas
stos
mov
cmp
into
pop
pop
lock
adc
aam
loop
in
ja
dec
add
xchg
jo
and
hlt
push
cltd
and
pop
xor
stos
xlat
daa
in
js
inc
fisttpll
mov
hlt
push
xchg
push
aad
sub
inc
mov
adc
xlat
fucomp
into
jmp
das
in
mov
push
popf
cld
xlat
push
cmp
sahf
xchg
xor
xchg
xor
fistpl
into
in
icebp
shrb
xor
js
mov
addr16
stos
cmp
adc
arpl
inc
add
fldl
xchg
xchg
outsl
scas
sahf
loop
arpl
cli
pop
mov
movsl
out
popf
adc
xchg
ret
fs
test
lock
xor
rclb
mull
subl
into
sbb
not
cltd
into
sbb
scas
cmp
aam
jle
sbb
cmp
mov
out
add
cwtl
fwait
das
dec
inc
adc
sbb
and
or
push
xor
sbbl
imul
adc
xchg
out
mov
lahf
cmp
jbe
sbb
scas
mov
mov
mov
cltd
and
outsb
je
imul
or
add
pop
lock
sbb
dec
pop
push
pusha
icebp
and
and
addr16
add
icebp
push
jae
dec
cmpsb
cltd
pushf
clc
and
into
adc
xor
ljmp
mov
cli
sbb
sub
mov
jb
arpl
fnstcw
xchg
or
mov
insb
add
cwtl
pop
into
sub
loop
jno
imul
test
jno
xchg
add
fsts
jbe
bound
out
jmp
fbstp
mov
scas
shlb
in
fldl
les
push
add
cli
shl
push
mov
insl
add
cmp
addr16
ja
mov
jb
arpl
inc
orb
loop
clc
pop
outsl
enter
arpl
pop
or
sahf
cs
fadds
pop
notl
fistps
mov
fcmovnb
ja
loopne
sbb
enter
push
sahf
xchg
enter
mov
xchg
ret
xchg
loop
sbb
mov
mov
pop
pop
mov
aam
mov
push
dec
inc
mov
mov
jae
ljmp
es
dec
push
clc
fldenv
lcall
xor
subl
lock
insl
test
jne
dec
cmp
repz
out
xor
add
jno
es
push
and
cmp
or
adc
add
shlb
mov
loopne
add
jno
mov
push
das
cmp
aad
in
std
xor
add
jge
repnz
add
scas
cltd
cwtl
mov
xchg
shrl
push
cmp
in
mov
inc
jns
shl
fwait
in
sbb
add
pop
ds
popf
in
loopne
pop
iret
mov
push
repz
inc
ja
clc
lahf
jl
dec
addl
or
in
aam
mov
pop
scas
out
xchg
inc
xchg
movl
and
xchg
loopne
mov
in
mov
lret
fisubrs
sbb
or
dec
shrb
rep
sbb
lods
js
enter
lcall
add
inc
dec
mov
imulb
add
pop
in
je
fs
lock
mov
adc
push
movsb
cmc
xchg
notb
orb
mov
clc
dec
aad
loop
pop
popf
lock
adc
jo
cmp
loope
inc
scas
xlat
push
mov
push
iret
not
xlat
das
pop
pop
and
imul
loope
jmp
fiadds
pop
stc
sbb
xor
std
adc
xchg
adc
sahf
sbb
loop
and
dec
mov
xor
ljmp
scas
lods
or
lds
das
xor
ljmp
lods
bound
stc
arpl
div
lock
lret
pop
fstpl
test
notl
ret
xchg
insb
mov
cmc
add
mov
mov
cwtl
iret
lcall
mov
sbb
inc
push
cmp
je
das
jmp
roll
fs
sar
jg
outsb
mov
dec
pop
sbb
mov
xlat
shrl
stc
outsb
push
sub
pop
in
inc
or
inc
fnsave
in
mov
arpl
hlt
cli
mov
jmp
inc
xlat
mov
jg
sahf
stos
cmp
add
xlat
xor
xchg
int3
pop
xchg
jle
mov
imul
xchg
xchg
mov
cmpl
in
andl
das
push
xchg
stos
jb
outsl
movsl
ljmp
negl
sub
push
jno
cli
or
gs
cwtl
movhps
xor
or
sahf
push
lock
add
jae
jg
mov
add
sub
jecxz
push
push
mov
sahf
mov
movsl
mov
or
aaa
fidivs
inc
xchg
inc
or
push
jnp
sahf
adc
xchg
dec
shrl
push
xchg
pop
inc
add
xchg
xor
xchg
and
cwtl
scas
jle
xor
or
shlb
mov
xchg
arpl
imul
xor
fimuls
xlat
mov
imul
clc
mov
jns
sbb
nop
sbb
dec
je
imul
sahf
mov
jo
lock
push
aaa
das
and
inc
lods
je
loope
add
imul
dec
js
xlat
movsl
clc
ljmp
adc
push
inc
dec
push
xchg
inc
sbb
lcall
xchg
int
stc
fs
test
fnsave
jbe
movsl
cwtl
stc
loop
int3
push
cmpb
popf
sahf
aam
sub
dec
mov
loopne
push
cltd
mov
push
call
shl
js
jo
loope
xchg
loope
arpl
je
pop
xchg
jecxz
clc
std
decb
push
xor
fwait
push
notl
out
jmp
ljmp
hlt
push
mov
scas
mov
sub
cld
cmp
lahf
pop
rcl
sahf
aad
cmpsl
sbb
add
ss
pop
std
cmc
sub
xchg
push
clc
fisubrl
jmp
fnstcw
xor
hlt
lea
fdivrl
in
pop
adc
add
xor
mov
out
in
cmc
adc
stc
sti
filds
insb
push
insb
into
push
adc
pop
insb
repnz
mov
mov
cld
das
jmp
jb
jo
push
xchg
pop
out
das
in
xchg
testl
shr
dec
mov
insb
in
das
cmc
pop
loop
call
xchg
cmp
aad
push
out
mov
jae
jg
or
xchg
mov
fstpl
imul
jg
insl
push
scas
out
jo
je
loop
mov
inc
sub
inc
and
jmp
cltd
outsl
mov
lock
inc
rcrl
xchg
fisubl
mov
add
and
ss
pop
dec
push
pop
sbb
mov
ds
jbe
cmp
mov
xchg
sahf
fidivrl
mulb
loope
imul
in
movsb
dec
movlps
mov
jcxz
mov
insl
pop
and
xor
imul
ficoml
sbb
mov
loop
sbb
pop
cmp
mov
xchg
cwtl
mov
cwtl
jmp
pop
push
mov
dec
push
cmp
negl
jge
xchg
shlb
mov
imul
inc
test
dec
add
xlat
fisubrs
mov
cwtl
xchg
or
lods
dec
ret
xor
nop
je
paddsw
jp
fnsave
push
shrl
out
mov
cltd
cmpsb
push
cli
mov
imul
sti
cmp
mul
lock
outsl
aaa
jp
adc
repz
in
inc
cli
cmp
xchg
mov
popa
nop
cli
loop
fimuls
mov
nop
rolb
repnz
and
cmpsb
ficoms
mov
test
xor
sbb
inc
imul
inc
jg
cmp
jno
nop
xor
pop
push
out
sti
jbe
gs
pop
xlat
pop
xchg
out
mull
fldl
subl
cli
adc
test
mov
cmc
cmp
outsl
fiaddl
daa
add
rorl
sbb
out
mov
nop
negl
mov
xchg
cld
popa
cmp
ficoms
movsb
cmc
mov
mov
jo
mov
out
jg
ljmp
repnz
addr16
repz
cmpsb
int3
fcompl
cmp
outsl
sbb
dec
out
mov
add
lock
lea
jb
out
rcrb
scas
outsb
jae
lea
cli
sbb
cmp
push
cmc
mov
arpl
frstor
mull
push
cmpsl
pushf
scas
mov
rcll
jo
xchg
push
lds
sbb
outsb
cmp
hlt
mov
cmc
or
in
jae
lahf
ret
lods
ret
push
adc
pop
inc
movsb
out
cmp
jnp
pop
jmp
adc
xchg
sbb
pop
hlt
das
pop
test
sti
sbb
icebp
outsb
push
mov
mov
jno
xor
insl
js
jns
xchg
mov
cmpb
mov
jl
int3
out
mov
jmp
sbb
xor
cmpsb
sub
jmp
outsl
dec
xchg
jnp
outsl
push
xlat
popa
imul
jae
scas
push
sbb
outsb
mov
pop
jg
mov
or
mov
cmpsb
push
dec
loop
jnp
add
repnz
xchg
mov
xor
xchg
insb
out
mov
push
xor
clc
pusha
in
rolb
xchg
stos
out
in
sbb
ret
add
xchg
je
lcall
rorl
mov
xor
jle
das
aaa
inc
out
fstl
mov
cmc
cmp
mov
outsb
xchg
jnp
into
iret
shrl
fwait
xor
push
out
int
jp
in
aad
jmp
mov
iret
jno
xchg
icebp
add
sub
pop
lret
fwait
jns
hlt
sbb
fisubs
xor
movsl
xchg
jge
test
push
loope
in
rclb
fwait
idivb
cmc
jbe
xchg
into
stc
mov
outsb
lret
arpl
cli
in
aaa
sti
sahf
fwait
cwtl
push
push
test
out
cmc
jae
scas
mov
mov
add
mov
mov
cmp
jno
xor
cmp
push
in
push
xlat
sub
mov
shl
ret
cmp
inc
or
icebp
movsl
pop
aas
stc
cwtl
arpl
ret
ret
dec
iret
add
push
mov
pop
iret
cwtl
add
push
jbe
cmp
sub
xchg
cmp
in
pusha
jae
cmp
or
lds
or
shr
push
push
mov
adc
insb
xor
mov
or
loopne
jo
jo
dec
pop
int3
loop
mov
fdivs
push
fsubr
add
out
jp
mov
das
repnz
mov
push
mov
stc
mov
out
cli
hlt
js
mov
mov
aaa
std
cmp
les
roll
mov
mov
add
adc
test
pop
mov
mov
fidivrs
push
or
xlat
sbb
sbb
mov
push
jp
js
jge
xchg
sarl
outsl
lock
mov
inc
push
test
sbb
jbe
iret
xchg
arpl
movsb
int
mov
mov
dec
add
leave
in
xchg
xchg
ds
lret
addr16
pushf
jno
xchg
scas
mov
aas
mov
lds
or
insl
inc
test
xchg
test
xchg
fistps
dec
xchg
jns
xor
loop
mov
mov
arpl
pop
sub
outsl
fnstenv
mov
pop
adc
repnz
lea
aad
xchg
and
xchg
jge
inc
clc
jmp
pop
adc
mov
in
adc
addb
dec
pop
iret
call
cmp
lock
jb
pusha
je
dec
cltd
mov
inc
mov
pusha
sbb
int3
fstp
pop
xor
popa
jno
adc
cmp
push
fnsave
sti
scas
in
out
sbb
rcr
pop
xchg
push
stc
hlt
pop
repnz
leave
add
std
inc
iret
and
repz
int3
test
add
idiv
fldenv
xchg
push
xchg
faddl
fidivs
addb
ret
repnz
pusha
out
jmp
inc
mov
xchg
and
loop
dec
fs
lds
xlat
in
arpl
and
mov
push
enter
out
and
divb
insl
lods
adc
push
jbe
lret
xor
cmc
lock
inc
sbb
aaa
in
xchg
rcr
dec
xor
cwtl
jnp
enter
popa
mov
push
add
and
cmp
testb
sub
xchg
cmp
and
dec
shr
das
and
fs
lock
fstpt
daa
shrb
gs
lret
push
imul
imul
adc
arpl
stc
dec
mov
adc
adc
cmpb
adcb
fs
loop
push
inc
ds
cmpsb
into
jae
arpl
push
sbb
pop
pop
dec
aaa
popf
mov
adc
xchg
stos
sbb
test
clc
xor
xor
mov
mov
ljmp
les
adc
testl
push
lds
or
fstl
mov
out
subb
jmp
mov
jmp
pushf
iret
jle
lea
nop
sub
jg
push
mov
imul
jmp
jmp
xor
pop
pop
inc
lds
movsb
add
es
popf
add
pop
scas
xchg
xor
dec
in
outsl
outsl
into
mov
daa
in
jmp
cmc
insl
xor
xor
arpl
aaa
lock
dec
xchg
push
in
xchg
dec
lcall
outsl
sbb
testb
jne
scas
push
inc
push
mov
pop
jo
popf
mov
loop
pop
adc
fwait
mov
cmc
mov
mov
popf
xchg
push
mov
jbe
clts
sub
dec
jge
notb
jge
jecxz
fwait
cmpsl
mov
inc
cmp
and
setle
outsl
dec
cmp
pop
dec
or
add
ret
adc
ljmp
xorb
lea
mov
loop
pop
pop
ljmp
mov
and
mull
icebp
test
ds
push
push
add
add
push
inc
repz
push
cmc
aaa
jbe
lock
mov
out
aam
mov
hlt
mov
xchg
mov
sub
xchg
ljmp
insl
push
dec
xor
lods
mov
js
lock
stos
or
jp
test
xchg
mov
or
sbb
mov
in
xlat
jae
jbe
cmc
xchg
lahf
call
inc
jp
xor
or
mov
push
daa
cmc
add
mov
mov
lods
xchg
cmc
test
sti
dec
iret
int3
divb
xor
jmp
and
fildl
jbe
mov
loop
test
test
jno
adc
test
mov
xor
mov
andl
xchg
add
xlat
mov
fbstp
out
cld
inc
popa
test
dec
int
arpl
stos
call
out
popa
adc
repz
and
xchg
inc
inc
sbb
cmp
sbb
mov
or
jge
push
arpl
ret
mov
in
nop
pop
dec
mov
ss
sahf
pop
jmp
jg
mov
fldenv
subb
lods
ljmp
insl
shlb
sub
repnz
sahf
cmp
push
cwtl
pop
sbb
lret
mov
sub
dec
pop
add
mov
call
sahf
pop
and
inc
lret
outsb
push
or
movsb
jle
fs
adc
les
cmc
push
inc
jl
push
xchg
fwait
jo
jmp
xchg
pushf
mov
inc
mov
xchg
mov
nop
jecxz
jmp
xchg
into
sti
jo
imul
jecxz
and
adc
dec
dec
shll
mov
mov
mov
or
cmp
mov
jecxz
and
and
cli
je
xchg
xchg
xlat
fcoml
imul
or
jecxz
jle
xchg
mov
mov
xchg
into
outsb
roll
fcoml
and
xlat
dec
adc
dec
add
repnz
ja
in
mov
jmp
pop
pop
out
cld
scas
in
repnz
lahf
out
jbe
sub
mov
cmp
test
xor
scas
jmp
fisubs
int3
or
sbb
pop
xchg
push
add
addr16
scas
cwtl
arpl
call
cltd
mov
jle
add
loop
xorl
out
adc
mov
idiv
jno
push
addr16
into
push
out
mov
xlat
into
dec
xchg
fcomps
cs
mul
cld
sahf
imul
andl
add
iret
fmuls
jl
jae
mov
pop
nop
gs
mov
pop
push
pusha
cmp
xchg
inc
adcb
xor
in
sub
cli
fdivs
sbb
jmp
pop
sarb
out
xor
jle
idivl
mov
out
and
rorl
scas
pop
adcl
cmp
sub
mov
loopne
clc
mov
xchg
nop
icebp
loop
scas
mov
imul
cwtl
lods
shl
mov
loop
add
aam
mov
xchg
aaa
push
xor
push
xchg
insl
jae
sub
mov
mov
add
jns
rcrb
imul
movsl
fcomps
stos
jge
sahf
idivb
push
data16
sbb
in
lock
fwait
hlt
cmp
xchg
fsin
jmp
insl
ffree
add
jae
out
sbb
movsb
gs
roll
sti
jne
imul
push
aaa
or
inc
mov
jno
mov
inc
xchg
cwtl
dec
inc
or
cwtl
test
jge
arpl
xchg
mov
jbe
in
or
aaa
ljmp
repnz
push
cmc
pop
cmpsb
pop
andb
out
cld
jp
cli
divb
scas
andb
out
sbb
test
mov
imul
adc
repnz
cli
in
rolb
pop
mov
xor
xchg
rorl
outsl
repnz
add
mov
mov
stos
icebp
test
sbb
mov
cmp
in
push
hlt
mov
mov
push
out
jae
mov
sahf
jbe
aad
mov
xchg
or
cli
pop
mov
repnz
data16
outsb
push
or
test
xchg
addr16
mov
je
mov
fcoms
mov
adc
pop
cli
mov
arpl
jns
adc
mov
mov
mov
fsts
testb
clc
stos
mov
mov
notb
adc
lods
out
test
outsl
jne
jae
adc
mov
scas
loop
sahf
ret
hlt
lret
and
clc
sbbb
pop
push
adc
in
int3
ja
xorl
lret
div
fsubrl
mov
sahf
pop
xorb
cli
int3
pop
sbb
test
lcall
shl
sti
ss
cli
jns
and
cmpsb
pslld
mov
mov
test
sbb
jg
movsl
jns
repnz
scas
mov
out
adc
fcmovnb
xchg
testb
ljmp
lret
jnp
jg
jae
adc
enter
test
mov
decb
cmpsb
nop
movsb
orb
out
movsb
pop
mov
sbb
xchg
in
mov
popa
xor
xchg
inc
loop
xchg
outsl
mov
fwait
add
and
push
cmpsb
dec
pop
lods
loop
push
hlt
addr16
out
mov
xchg
xchg
mov
insl
sbb
fbstp
inc
lahf
fsub
loopne
int
push
pop
popf
pop
mov
dec
mov
in
lret
jmp
ljmp
xchg
cmp
arpl
int3
adc
mov
loop
int
negl
lock
test
mov
dec
outsb
testl
arpl
lds
roll
lea
sbb
aaa
test
call
mov
lret
dec
test
cs
ret
pusha
jb
xor
sub
pusha
adc
dec
lahf
loopne
ffree
adc
or
pop
mov
mov
pop
push
lds
or
enter
cmp
ret
test
popa
out
sahf
mov
imul
lock
lock
cld
jl
cmp
dec
sarb
mov
adc
out
and
jbe
add
push
shlb
lret
xchg
leave
rcl
sub
sbbl
lock
shll
pushf
push
in
orb
nop
fnsave
arpl
fwait
ljmp
push
imul
jne
pop
test
lods
mov
xchg
mov
add
or
dec
imul
mov
mov
insl
arpl
push
iret
cmp
jae
sahf
jb
jg
fwait
push
enter
or
cmp
icebp
mov
stos
int3
hlt
das
popa
iret
fwait
repz
lock
pop
cmc
out
nop
dec
xor
enter
ljmp
pusha
ljmp
push
arpl
popa
outsb
orl
push
loopne
je
arpl
jb
jns
dec
cmp
mov
xchg
fsubrl
xchg
nop
pop
mov
push
sbb
adc
ja
jmp
jae
imul
jae
fs
loop
int
test
inc
iret
xor
pushf
and
mov
xor
mov
test
out
mov
pusha
test
inc
mov
dec
add
and
and
mov
mov
or
in
arpl
sub
ljmp
out
out
mov
jb
xor
out
add
clc
sbb
imul
sbb
in
out
iret
popf
xor
xchg
incl
das
in
xchg
mov
test
fildl
jbe
fldlg2
and
jmp
sub
sbb
mov
adc
lods
or
sti
loop
sub
mov
cmp
outsl
xchg
arpl
dec
sub
nop
xchg
lret
and
sahf
adc
mov
pop
jno
adcb
fidivl
out
shl
jbe
dec
loop
xor
xchg
jecxz
mov
xor
aam
xchg
ljmp
mov
push
inc
pop
xchg
das
fdivs
cli
bound
rcrb
mov
mov
rorb
mov
inc
ret
lock
sbb
push
xchg
divl
rcrb
dec
add
jbe
leave
xchg
jae
popa
mov
loop
jle
out
dec
mov
cmp
adc
pop
popf
fsubs
or
rol
loop
mov
dec
xchg
inc
mov
jb
mov
in
inc
scas
div
imul
rol
or
mov
fwait
pop
arpl
pop
stc
je
or
pop
dec
shl
jmp
lret
sub
sbb
loop
in
mov
loop
sbb
adc
enter
mov
jg
dec
repnz
and
sahf
push
mov
cmpb
dec
add
loop
lcall
add
mov
dec
mov
fucomip
xchg
sub
scas
iret
pop
add
mov
mov
arpl
xor
mov
out
dec
jg
repnz
out
icebp
pop
push
bound
dec
add
enter
fcomps
mov
mov
xchg
andl
hlt
cltd
push
pusha
inc
mov
or
or
push
xchg
pusha
out
adc
shl
sbb
pop
lods
stc
jno,pt
push
lahf
sbb
movsb
inc
or
pop
push
xchg
or
inc
popa
dec
sub
jno
out
pminub
mov
xor
or
sub
orl
jae
push
mov
clc
das
cwtl
xchg
daa
dec
add
stc
cmp
mov
movsbl
push
push
mov
xchg
iret
sarb
cmp
scas
inc
iret
cs
movsb
nop
cwtl
loop
push
sahf
mul
sbb
pushl
jo
shlb
mov
std
stos
fimuls
adc
fninit
data16
loope
shll
hlt
lret
push
xor
mov
std
mov
push
mov
xlat
mov
xor
int
add
mov
rorl
gs
push
mov
gs
adc
push
aad
sti
ja
and
iret
mov
dec
or
push
xchg
movsl
mov
lds
push
bound
mov
xchg
enter
sbb
nop
dec
ss
sbb
jne
movb
loope
sbb
stos
mov
out
out
mov
push
iret
jg
in
out
test
loop
fcomps
mov
addr16
push
pushl
jb
mov
mov
fidivs
fdivs
add
out
iret
test
clc
movsb
mov
pop
cmp
scas
xchg
mov
jbe
fs
pusha
sub
pcmpgtb
or
jecxz
xchg
in
push
test
add
imul
call
stc
add
arpl
xor
nop
mov
insb
or
inc
gs
daa
sbb
inc
mov
add
dec
jo
arpl
in
mov
lcall
mov
mov
addb
add
push
repnz
arpl
push
adc
dec
jae
or
cmpsb
pslld
sahf
fistps
leave
or
mov
mov
sub
add
dec
test
leave
out
xor
loop
sbb
scas
xchg
jae
arpl
dec
cltd
or
movsb
movsl
addr16
pop
cmp
shl
loop
loope
xchg
ds
fadds
sbb
shl
loop
cmp
pop
inc
inc
mov
jne
loop
mov
mov
cmp
outsl
push
test
sub
mov
xchg
out
or
pop
std
ficomps
arpl
push
jp
dec
jl
inc
aad
mul
xchg
in
add
imul
jg
int3
xchg
iret
sub
push
pop
fst
jg
imul
xlat
xor
cmc
shrb
xor
fwait
add
and
or
mov
lock
mov
loop
push
sbbb
xchg
sub
jo
nop
push
jae
jmp
pop
lock
sahf
jmp
orl
jp
loopne
pop
cld
pushw
push
insl
test
fnstcw
ljmp
push
jmp
pop
loopne
test
pop
jae
popf
mov
stos
cli
jo
in
dec
xor
testl
movsb
popa
xchg
cmp
jecxz
sub
jmp
add
or
int
and
mov
test
add
scas
aam
aad
out
mov
je
mov
ljmp
jb
imul
push
test
js
adc
pmaxub
xchg
xor
or
loop
das
roll
fdivs
cs
mov
and
mov
stos
call
int
test
jns
add
xchg
jge
test
add
lock
into
push
lret
pop
sub
dec
neg
ljmp
or
loopne
mov
sbb
out
js
sbb
ret
pop
out
ds
push
into
mov
cmc
ljmp
nop
mov
sbb
imul
imul
aad
divl
push
call
addr16
adc
inc
mov
fnstcw
xor
sbb
pop
ljmp
fmuls
pop
jno
xor
outsb
and
sbb
adc
mov
js
mov
addb
insb
in
mov
cmp
aaa
nop
arpl
aaa
fsubl
lods
call
dec
insl
inc
dec
movsb
fs
mov
mov
mov
inc
push
or
add
out
int
push
cmc
popf
outsl
push
js
inc
sbb
cwtl
gs
or
int
adc
adc
scas
cmp
sbb
movsb
gs
addl
mov
mov
test
pop
mov
dec
subb
mov
mov
or
pop
ja,pn
or
mov
into
fiaddl
sbb
ja
push
mov
icebp
mov
pop
lea
stc
fwait
addr16
xchg
jmp
push
sbbl
arpl
test
add
mov
push
cmp
out
gs
int
cmp
sub
adc
dec
sti
sbbl
out
loop
out
rcll
arpl
outsb
adc
jmp
fwait
das
push
aam
movsb
push
rcrb
push
mov
popf
cwtl
je
xchg
aaa
push
mov
cltd
jg
hlt
xchg
adc
xorb
movsl
xchg
orb
adc
mov
push
rcrb
imul
leave
clc
push
ret
mov
mov
fldcw
out
js
ljmp
imul
jo
or
shlb
stos
cmp
cli
mov
xor
mov
notb
jecxz
mov
subl
repnz
inc
icebp
scas
test
scas
lret
cmp
mov
sti
repnz
cli
incb
sub
repnz
mov
frstor
orb
mov
bnd
xchg
test
lahf
ljmp
pop
mov
mov
scas
jg
mov
xchg
nop
inc
xchg
in
movzbl
lods
clc
lods
and
xchg
repnz
sar
jne
aad
lock
sbb
lock
cld
sub
inc
loopne
lock
mov
lods
repnz
cmp
iret
repnz
or
ret
mov
mov
pushf
loop
cli
repz
enter
jnp
outsl
xchg
jno
aas
sahf
std
push
lds
xchg
call
and
rol
mov
mov
xchg
mov
pushl
mov
push
sbb
lret
inc
mov
adcb
in
adc
mov
call
dec
decb
lock
pop
mov
pop
rolb
hlt
movsb
and
mov
clc
bnd
xchg
rorb
iret
sub
cli
and
mov
or
test
ficomps
mov
xchg
mov
cltd
mov
mov
mov
movsb
add
mov
cmp
lock
xor
mov
ret
jnp
les
incb
mov
test
test
push
mov
mov
loop
xchg
jno
stos
loope
mov
scas
fsubr
ja
cmpsl
mov
out
xchg
enter
div
imulb
xchg
add
bnd
iret
ljmp
cmpsb
into
popa
lret
scas
subb
imull
lods
lret
loop
data16
mov
xchg
arpl
test
add
ljmp
shlb
inc
pop
in
ret
xor
lds
jle
mov
sbb
push
add
loopne
call
or
push
jae
outsb
cwtl
pushl
pop
jne
out
push
loop
negl
mov
arpl
das
xchg
jmp
fistpl
in
sbb
ljmp
in
shrb
xchg
hlt
cmpb
lea
outsl
bound
addb
in
ljmp
mov
mov
cltd
fwait
lods
push
dec
inc
jg
cld
pop
test
imul
mov
mov
mov
out
mul
int
cmp
push
int3
xlat
scas
int
jecxz
sub
push
push
push
loop
pop
sbb
push
mov
pop
fsubl
mul
fdivrs
mov
in
mov
jge
scas
push
push
mov
fildll
movsl
mov
arpl
stos
test
pop
mov
imul
int3
loopne
sbb
adc
rolb
push
inc
loop
fistps
roll
scas
pop
or
and
xor
xchg
scas
jae
int
rorl
jae
rcl
loopne
xor
popf
bound
mov
out
outsb
adc
lock
xor
popf
add
clc
test
mov
rep
adc
sbb
popa
push
xchg
daa
inc
subb
or
adc
inc
arpl
mov
dec
adc
push
pop
dec
and
incb
je
or
fimuls
cmpb
dec
lods
sti
mov
cmp
push
xor
in
push
lcall
insl
mov
repz
jbe
dec
dec
mov
sbb
xor
push
jno
mov
xor
pop
cli
pop
repz
sbb
xor
adc
nop
push
rcll
jg
inc
pop
pop
loop
or
ja
push
xlat
addr16
in
les
add
jbe
push
pop
push
mov
pop
xor
jns
lock
arpl
imul
xor
inc
xor
pop
xchg
push
mov
mov
movsb
dec
cmp
pop
into
loop
mov
addr16
outsl
fisubl
imul
and
imul
mov
mov
insl
popf
mov
mov
adc
in
lret
mov
sbb
js
loop
xor
xchg
jns
sub
mov
jp
inc
sbb
push
ds
dec
jno
in
push
pop
dec
and
arpl
xchg
mov
xchg
mov
add
shlb
hlt
xlat
mov
ljmp
push
or
cmp
hlt
inc
pop
popf
lods
jg
jmp
mov
push
or
inc
jno
pop
pop
dec
mov
leave
arpl
stc
mov
shll
sti
mov
mov
loop
mov
in
cmpsb
pop
mov
add
mov
test
hlt
out
mulb
movsb
xor
jae
imul
or
jecxz
dec
adc
fsubs
jg
cld
outsl
mov
mov
loop
jae
je
dec
rcrb
sub
xlat
jecxz
cltd
lret
xchg
orb
inc
sbb
repnz
inc
mov
sub
mov
outsb
jno
sahf
loop
pop
fistps
rclb
rolb
cmpsl
mov
xor
clc
das
dec
loop
push
xor
in
movsl
lods
scas
sahf
ja
push
mov
movb
jmp
mov
mov
jg
mov
jae
jecxz
sarl
xchg
push
loope
stc
push
icebp
jne
xor
add
ret
mov
push
push
xchg
loop
ret
or
aam
aaa
inc
fisttps
add
push
in
icebp
cmpsl
sti
add
add
jno
sbb
pop
mov
idivl
push
cmp
stc
insl
inc
fwait
in
out
mov
sub
call
in
sbb
jae
mov
lcall
fdivl
add
inc
aaa
cmp
test
mov
sbb
lock
mov
dec
aas
hlt
sahf
cltd
mov
mov
inc
test
push
rcrl
fimuls
jne
mov
loop
push
pop
popa
imul
xor
pop
xchg
inc
pop
movsb
imul
adc
lahf
stc
rep
aaa
shl
dec
sub
cmp
xchg
mov
les
loope
fsubl
fs
inc
jmp
inc
pop
sahf
dec
test
je
xchg
push
sbb
cmp
je
lret
sahf
cmp
notb
xor
loope
mov
les
shrb
xchg
mov
int
dec
mov
lret
add
mov
outsb
push
loop
push
sbb
arpl
add
jnp
sub
mov
in
cmp
in
mov
mov
in
inc
aam
xor
sahf
mov
std
add
int3
push
mov
jb
shr
mov
push
clc
mov
mov
jle
lods
cli
cmp
mov
mov
sbb
mov
stos
pop
ljmp
dec
xchg
jo
aaa
sbb
cli
into
ljmp
arpl
test
xchg
push
mov
ret
sbb
mov
in
ds
jg
lock
arpl
inc
cmpsb
lock
pop
adc
ficompl
testl
out
mov
scas
imul
inc
mov
pop
aas
insl
loop
inc
add
fcoms
jp
arpl
dec
scas
pushf
addr16
cmp
sbb
xchg
iret
xchg
add
sarb
inc
jbe
data16
insl
lahf
arpl
out
pop
xchg
ficomps
lods
testl
xor
nop
outsl
lds
push
mov
push
ret
xor
xor
call
or
hlt
mov
pop
dec
rolb
mov
pop
sti
jnp
cltd
mov
repz
decb
mov
mov
xorb
xlat
repnz
jnp
and
loopne
add
in
sub
mov
mov
sahf
sbb
xor
lods
std
outsl
or
in
dec
push
outsl
ja
hlt
cmp
sti
or
cmp
xlat
fs
mov
pop
std
jnp
bound
insb
cltd
dec
ret
or
sbb
cmp
dec
scas
mov
je
shl
in
inc
std
sbb
push
push
mov
mov
ss
dec
scas
jmp
cltd
popa
in
scas
icebp
push
js
cmp
fwait
xchg
jmp
stos
test
loope
jb
inc
cmp
lods
mov
add
arpl
mov
loope
scas
out
cs
lds
cmp
inc
mov
xor
in
sbb
loop
rorl
mov
lahf
mov
adc
hlt
sub
ficompl
cli
iret
sub
xchg
fnstcw
popf
sub
dec
mov
and
mull
pop
scas
dec
clc
mov
fcom
out
sbb
loop
xor
dec
pop
fstl
add
in
sarb
loope
xchg
into
mov
adc
mov
mov
sahf
cli
xlat
fidivrl
daa
cmp
cmpsl
dec
mulb
cmpsl
add
mov
ret
xchg
xor
xchg
pop
outsl
push
or
jmp
inc
call
cmpsb
insb
std
jp
push
jns
les
adc
call
cmp
lcall
addl
ret
xchg
aas
call
mov
stc
fxch
and
and
out
aaa
adc
xchg
adc
std
pop
jnp
ja
cwtl
mov
call
jmp
sub
lret
ljmp
xor
push
int3
jmp
xchg
add
cmpb
jbe
into
les
mov
mov
adc
push
pop
fcmovnbe
xchg
je
arpl
ds
jb
mov
aam
jae
or
inc
js
pop
ljmp
cwtl
sbb
loope
xor
aam
dec
xchg
push
cmp
ss
cli
in
mov
xchg
shr
jno
jne
inc
nop
pop
mov
cld
xchg
cli
arpl
pop
xor
lcall
shll
not
mov
dec
jecxz
push
loope
pop
xlat
clc
lods
popa
pop
xchg
aam
arpl
mov
popa
dec
sbb
lods
cld
pop
ljmp
out
mov
or
repz
test
pop
mov
shrb
jl
popl
out
addl
and
fsubl
xor
cmp
lahf
push
jmp
mov
mov
fmul
add
mov
xchg
jge
ficomps
push
repnz
aad
out
add
test
lahf
mov
xchg
adc
sbb
mov
daa
jno
mov
arpl
mov
xchg
cmovno
inc
cmp
out
xchg
ret
or
xor
loop
out
xchg
arpl
add
sarl
popl
enter
mov
sar
xchg
dec
call
in
xlat
and
add
push
scas
xchg
jbe
out
xchg
bnd
mov
add
mov
add
cwtl
data16
lret
test
ret
pop
xlat
mov
push
cltd
sbb
adc
sbb
xchg
arpl
into
cmp
xor
xchg
mov
sbb
nop
fwait
int
cmp
xchg
hlt
xchg
movsl
test
negl
hlt
dec
out
xchg
lds
imul
mov
int
push
arpl
push
mov
shll
pop
mov
ljmp
mov
scas
aad
dec
push
nopl
test
push
aad
mov
je
loop
sbb
js
arpl
inc
mov
ret
aam
push
xor
call
mov
push
xor
mov
xlat
adc
cmp
add
xchg
je
arpl
insl
sti
pop
fdivl
stc
mov
test
loop
adc
add
js
xor
test
outsb
sarl
mov
mov
jnp
dec
testb
cmp
dec
in
push
iret
jb
sub
sbb
arpl
and
pop
adc
out
mov
nop
push
pop
cmpsb
jmp
jecxz
in
aam
inc
fwait
lods
inc
outsl
aam
and
jle
or
insb
rcl
test
loop
sarb
lea
inc
in
sub
into
xor
pusha
imul
sub
std
das
xor
add
dec
or
scas
xor
and
imul
xor
xor
inc
and
imul
mov
ror
popa
out
push
pusha
dec
mov
imul
adc
call
pop
push
ja
cli
loopne
aaa
mov
insb
add
inc
call
cmp
movb
cwtl
aad
ds
add
jb
shll
or
push
call
hlt
lea
rcrl
mov
sbb
adc
mov
addr16
push
addr16
push
ret
out
adcb
sbb
mov
dec
pop
data16
hlt
inc
mov
xchg
outsb
mov
push
sbb
or
mov
and
jmp
mov
mov
jecxz
je
repnz
mov
loop
xchg
arpl
out
mov
xor
loop
pusha
shll
sub
loope
adc
cmpsb
xor
mov
inc
sbb
icebp
dec
dec
scas
mov
icebp
adc
xor
mov
xor
jmp
pop
ljmp
cli
repnz
push
jmp
add
or
loop
sti
adc
mov
pop
mov
das
in
scas
arpl
mov
push
jmp
ljmp
ficoml
loop
in
xchg
xchg
popa
sbb
xor
cmp
shl
popa
pop
inc
cmovg
mov
repnz
jge
mov
loop
ss
adc
inc
cmp
cmp
add
lret
loopne
test
xchg
jge
push
mov
cli
inc
jle
sti
lock
pop
jecxz
ficoml
sub
sbb
sbb
pmaxsw
pop
jo
outsl
out
lret
dec
add
add
add
jle
call
xor
fs
negb
sbb
inc
jno
into
and
outsl
add
xor
pop
push
stos
or
push
lock
outsb
mov
push
int3
repz
mov
xor
imul
movsl
outsb
out
and
adc
ljmp
sti
cmpsb
xchg
shrb
xchg
mov
mov
in
aas
ror
jno
adc
scas
mov
mov
in
icebp
loop
ss
aaa
call
addb
out
in
mov
jle
ljmp
cld
dec
add
and
lcall
dec
dec
push
sahf
test
fucomi
adc
or
cmp
arpl
dec
cmc
cltd
inc
sahf
das
dec
arpl
sbb
add
lret
sahf
leave
shlb
nop
jns
dec
loope
jp
cmc
in
lret
adc
jno
inc
mov
mov
cltd
push
test
fmuls
pushf
xor
xchg
lds
xchg
loope
cmp
dec
fstl
or
fcomip
test
mov
push
jg
jb
icebp
rcrb
jae
dec
outsb
pop
cmp
pushf
in
dec
inc
jo
jbe
insl
shl
xor
mov
xchg
out
or
iret
mov
aad
xchg
test
ljmp
mov
je
loop
stc
sbb
mov
mov
test
stos
pushf
add
popf
jl
addr16
or
icebp
push
jecxz
in
enter
sbb
loope
cmp
mov
outsl
cmp
call
sbb
adc
cmp
loop
push
mov
cltd
enter
int3
jg
loop
es
jecxz
cmc
icebp
lock
fildl
fwait
pushf
xchg
pminsw
add
lcall
add
ret
sbb
movsl
cmp
daa
pop
pop
cli
loop
stos
jg
js
stos
in
out
dec
jecxz
xlat
sar
sahf
test
je
cli
cmp
inc
push
adc
mov
sub
and
push
neg
in
lcall
push
add
jo
adc
iret
xchg
pop
inc
icebp
or
stos
loop
roll
xchg
shlb
add
xor
jp
out
or
or
mov
push
aaa
loopne
cwtl
cmp
pop
or
js
adcl
xchg
fdivrs
dec
xchg
or
mov
add
lock
loop
mov
rorl
add
pop
cli
arpl
fwait
push
gs
pop
inc
push
mov
mov
xchg
xchg
mov
jnp
aam
xlat
shl
iret
imul
adc
jle
dec
cwtd
jecxz
push
out
das
mov
add
lcall
inc
xchg
dec
inc
mov
dec
add
imull
outsl
sub
xchg
orl
out
je
mov
aad
test
push
dec
es
test
je
sbb
inc
cmp
sub
dec
mov
mov
ljmp
ret
ja
push
jecxz
lcall
mov
dec
push
andl
sub
add
and
rorl
jmp
adc
out
gs
out
mov
and
cmp
je
das
out
push
dec
lods
add
jo
ss
arpl
rclb
xchg
mov
addr16
enter
jecxz
sar
or
aas
dec
mov
lock
jbe
loop
pop
push
in
adc
jecxz
mov
imul
push
cmp
ucomiss
sbb
inc
scas
fists
adc
repz
sub
icebp
adc
sbb
mov
cmp
imul
mov
out
mov
stc
mov
and
shl
lods
jp
fwait
iret
sahf
repz
arpl
lret
jb
orl
push
mov
shl
cmp
and
aam
cld
sub
ret
add
ja
adc
pop
movsb
loopne
xchg
adc
inc
pop
mov
scas
add
lea
inc
and
incb
aad
xchg
push
mov
fdivp
cmpsl
pop
cmp
hlt
iret
xchg
imul
mov
jbe
iret
mov
test
dec
mov
fildll
jmp
cs
iret
cli
fldl
xchg
pop
incb
out
sbbb
dec
or
das
insl
into
sub
mov
loopne
decb
imul
arpl
nop
lahf
imul
icebp
loop
inc
adc
xchg
jecxz
cltd
aad
fld
mov
ja
sahf
or
sahf
je
mov
lret
movntq
out
sahf
test
dec
mov
xchg
out
xor
push
push
jnp
mov
loop
push
mulb
mov
adc
push
scas
mov
inc
vphsubd
push
divl
mull
xor
movl
adc
test
mov
jmp
xlat
mov
mov
sbbb
sbb
fisttpl
lock
mov
adc
inc
aas
adc
jg
sbb
fnclex
xchg
lods
push
mov
jo
cltd
rcl
ja
inc
test
loop
scas
scas
or
jecxz
sbb
jb
mov
sub
test
leave
loope
mov
inc
add
insb
neg
jmp
fdivs
addr16
pop
loop
xchg
in
xchg
fnsave
aaa
rclb
loope
loopne
mov
xlat
add
and
ss
hlt
sbb
inc
dec
mov
mov
push
mov
jmp
push
out
dec
push
cmp
push
divl
jg
loope
je
loop
xor
mov
push
jmp
sbb
sub
pop
insb
dec
cmpsl
cwtl
add
jle
xorl
dec
pop
rolb
iret
xchg
pushf
jp
lods
mov
or
lret
enter
cmp
pop
sbb
sbb
push
shr
scas
cmc
sub
mov
sub
cmp
and
test
jb
push
scas
imul
mov
lock
and
cli
xlat
test
mov
cmpsl
push
repnz
icebp
std
ss
sahf
lahf
ja
sub
sub
leave
mov
andl
adc
mov
mov
adc
jp
lods
pop
add
mov
in
mov
jmp
fcomps
enter
xlat
xchg
fwait
sbb
jae
jmp
push
jae
push
xlat
int
mov
dec
mov
add
mov
add
xor
aas
mov
pushf
sbb
mov
cltd
push
push
je
add
jae
push
fldl
hlt
iret
test
fisubrs
js
nop
xchg
int
int3
mov
lods
iret
pop
arpl
stos
test
adc
mov
andb
dec
xchg
sti
lds
lods
pop
mov
cli
ret
aad
repz
ss
nop
mov
add
into
test
scas
xchg
arpl
test
mov
test
xchg
cmp
sbb
lock
xor
cwtl
mov
dec
pop
add
lock
call
pop
testb
ret
push
push
imul
xchg
sahf
mov
std
push
sti
or
xlat
inc
push
sti
adc
ret
sub
int
jo
mov
stc
mov
divl
dec
xchg
jmp
dec
jg
lret
pusha
lea
stos
nop
sbb
xchg
pop
mov
mov
int3
lock
rol
aam
scas
adc
xchg
insl
insl
pop
mov
ds
inc
mov
insl
ljmp
xchg
push
jg
lret
add
shrl
sub
cmp
lds
fwait
pushf
dec
clc
inc
mov
inc
mov
enter
dec
xchg
mov
cltd
add
mov
jmp
mov
push
imul
jge
arpl
add
pusha
out
push
cmp
aas
fdivp
or
jbe
jno
loope
xlat
cmp
ds
cmp
or
nop
clc
xchg
mulb
sub
jae
cltd
loop
loop
fwait
movsl
dec
jae
push
or
inc
xchg
sub
aas
scas
test
mov
dec
and
mov
scas
mov
cwtl
adc
cmp
outsb
xchg
push
cmpsb
add
push
int
loop
jge
fnsave
sub
imul
xchg
mov
scas
cmp
mov
xor
add
push
cli
push
sti
cmp
in
clc
mov
add
cmpsl
mov
mov
push
sub
mov
pop
inc
mov
imul
hlt
scas
pop
ss
jae
sbb
mov
mov
jle
out
mov
nop
aaa
clc
orb
sbb
imul
adc
pop
cltd
add
cmp
mov
or
not
xor
fistps
in
cwtl
push
push
xchg
xchg
leave
je
test
lds
or
adc
xchg
int
addr16
xlat
test
das
fbstp
bnd
ljmp
paddusw
push
es
add
call
aad
nop
es
mov
mov
xor
sarb
mov
cwtl
sub
cmc
mov
mov
hlt
or
fs
push
jmp
mov
into
loopne
dec
ss
lea
call
enter
pop
pop
jge
loop
jbe
or
push
testb
adc
mov
into
jg
mov
xchg
imul
subb
xor
test
scas
jecxz
sbb
insl
adc
jnp
and
ja
sbb
sub
fwait
inc
pusha
lea
and
mov
jg
fbstp
sub
iret
mov
sbb
sbb
lcall
ja
jns
sbb
push
jle
not
mov
lret
or
jb
je
push
bound
sarl
arpl
xor
cwtl
xchg
cld
arpl
mov
dec
xor
mov
outsl
pop
jp
rol
imul
ja
push
lret
xlat
call
push
out
xor
loop
cmpsb
in
jmp
xor
out
fcmovbe
popa
jbe
push
into
or
insl
jbe
lock
iret
push
loop
cmp
xchg
dec
das
mov
or
je
aad
cmp
push
or
lods
xchg
les
mov
aad
out
dec
jb
lret
jmp
scas
push
js
sbb
insb
stc
push
repnz
mov
push
xchg
cld
dec
add
repz
add
in
je
addr16
lock
cmp
ja
push
sub
movsb
test
pop
loope
mov
movhps
mov
in
jbe
mov
adc
cwtl
mov
sbb
arpl
sti
jae
jp
mov
cmp
shlb
cmpsb
push
sti
ret
in
daa
js
insl
push
ucomiss
lods
daa
jo
pusha
cmp
cwtl
mov
decb
mov
cmp
mov
int3
addr16
sbb
xchg
aas
jecxz
sahf
mov
cmp
dec
outsl
xchg
cwtl
mov
mov
inc
xchg
push
in
or
fwait
movsl
mov
dec
cli
std
sbb
add
adc
push
movsl
sbb
pop
loop
into
test
ljmp
xchg
pop
or
xor
popf
pop
int3
jno
arpl
cs
cmpsl
imul
push
js
lahf
xchg
divb
lods
pop
xchg
xchg
cmp
repnz
icebp
lock
pop
and
mov
or
cmp
testb
mov
cltd
push
xlat
add
clc
xchg
outsb
aas
add
mov
pop
mov
filds
mov
xor
int
push
sahf
mov
mov
sub
mov
sbb
sub
notb
js
fiaddl
mov
arpl
sbb
push
or
add
imulb
ret
push
add
sbb
fildl
nop
adc
inc
pushf
andl
leave
and
mul
mov
nop
fisttpl
inc
xorb
mov
dec
mov
cmp
shrl
stos
je
jo
jle
mov
mov
into
aad
cmp
addb
sahf
ret
mov
lea
dec
xor
dec
fwait
aad
das
iret
arpl
icebp
shlb
ds
mov
iret
add
or
movsb
push
scas
arpl
adc
inc
mov
cmpsl
inc
mov
mov
ljmp
mov
mov
pop
repnz
call
das
into
lock
sub
fcomip
in
fisubs
mov
xchg
data16
lret
rorb
ret
mov
sbb
fadd
mov
mov
mov
das
push
insb
push
mov
pop
pop
mov
mov
dec
pop
sahf
or
ret
pop
pop
cltd
dec
loop
dec
es
arpl
in
popl
sbb
cltd
mov
jbe
das
mov
test
test
arpl
jb
xlat
repz
iret
stc
cmp
fwait
shrb
lods
push
jecxz
hlt
lock
ds
fmull
ret
xchg
sahf
in
pop
lods
cmp
das
dec
shrb
xorl
xchg
jmp
jp
fldcw
sub
arpl
test
into
mov
aad
icebp
add
lds
sbb
mov
adc
ffree
adc
jmp
pusha
xor
rorb
imul
pop
outsl
pop
jmp
add
testb
outsb
movsl
jg
pop
fimuls
imul
andb
mov
push
cmp
nop
in
arpl
jg
hlt
into
loop
es
jmp
xchg
fistpl
sub
xor
cmpsl
adc
sbb
cmp
xchg
push
mov
arpl
lock
imul
imul
push
mov
ret
jp
leave
aam
test
fwait
mov
in
inc
xchg
xchg
movsb
cmpsl
ds
mov
xchg
loop
ret
lret
sbb
lock
jp
lea
sbb
leave
arpl
xchg
lock
pop
cwtl
sbb
sbb
pop
xor
pop
lret
pop
insl
mov
sbb
or
dec
adc
imul
mov
xchg
xchg
mov
insb
fs
cwtl
and
arpl
adc
jl
xchg
xlat
mov
clc
arpl
adc
cmp
loop
sub
sbb
pop
ljmp
paddsw
xlat
addr16
leave
lods
xlat
adc
dec
shrl
sahf
adc
adc
rorb
jle
pop
ljmp
mov
cltd
inc
inc
movsbl
arpl
push
mov
popf
mov
and
lock
mov
and
mov
cmc
mov
push
aas
popl
fisttps
das
push
addr16
xchg
sub
mov
jae
cmc
int
icebp
xchg
bound
cmp
clc
lret
test
mov
and
movsl
scas
sub
mov
mov
mov
in
in
cmp
pushf
sbb
mov
loopne
ljmp
xor
cmp
or
in
and
fucomi
push
cli
ret
imul
popf
mov
call
xchg
imul
sub
mov
addb
pop
stos
pop
push
mov
mov
mov
or
lods
popf
repnz
cmp
hlt
or
sbb
pop
rcr
jle
mov
clc
in
in
adc
mov
jno
mov
sbb
push
outsl
lahf
fwait
sbb
test
sti
mov
pop
nop
push
hlt
inc
cmp
loopne
push
push
add
xor
fildl
adc
mov
fcmovb
jae
arpl
in
xor
pop
inc
cmp
shlb
and
cmp
ret
mov
add
mov
out
dec
and
into
mov
out
repz
lret
jae
fwait
out
fs
xchg
mov
sbb
mov
arpl
test
add
ret
imul
daa
imul
jno
int3
std
mov
dec
lret
xchg
pop
push
jecxz
loop
add
sub
inc
ret
adc
js
rol
mov
dec
cmp
add
pop
aam
dec
lcall
push
aad
sbb
sub
out
mov
data16
pop
test
pop
mov
in
jnp
pop
mov
xor
mov
fidivs
xor
mov
loop
xor
ficomps
pusha
loopne
pusha
mov
popf
cmp
mov
sbb
sbb
rcr
das
fwait
mov
inc
adc
push
inc
push
incl
outsl
push
shlb
mov
je
sbb
sub
push
sahf
pop
pop
insl
arpl
clc
loopne
roll
shl
inc
js
inc
sahf
jmp
mov
cmp
iret
or
fnstsw
lods
in
add
nop
sbb
xchg
data16
inc
loop
push
pop
sub
mov
push
xchg
arpl
xchg
add
scas
xor
mov
cld
icebp
aad
add
mov
rcr
shl
pop
arpl
sbb
cmp
or
test
mov
dec
loop
in
push
test
pop
mov
repnz
inc
test
pop
mov
arpl
repnz
jb
in
adc
std
xchg
arpl
imul
dec
ret
ljmp
aam
or
push
jle
jns
jae
xchg
fs
fwait
sti
scas
dec
daa
inc
mov
mov
add
dec
outsl
div
ret
pop
adc
add
push
repz
insb
nop
sbb
insl
ja
into
rol
mov
ljmp
ss
mov
mull
lahf
xchg
lock
into
pop
cmp
sahf
pusha
push
and
mov
cmp
inc
popa
aam
xchg
test
rorl
js
fsubl
and
sbb
pop
stos
push
sub
in
fwait
add
jae
pop
and
stos
mov
jmp
push
inc
xlat
insb
cmp
shrl
nop
jae
nop
cwtl
mov
mov
cld
xor
mov
xor
test
cmp
js
sbb
test
popf
mov
xchg
out
push
call
lret
cmp
or
adc
dec
push
ret
imul
inc
std
or
and
iret
cld
loop
insl
pop
xchg
out
xor
push
xor
pop
out
js
cmp
shll
or
xchg
push
inc
das
jbe
insb
test
stos
add
jnp
xchg
orb
inc
jp
fsts
inc
loop
mov
gs
cmp
mov
push
sbb
pushf
fwait
shrl
mov
xlat
psubsb
pusha
lahf
xor
xchg
mov
xchg
mov
andb
sub
mov
xchg
push
sbb
cmp
repnz
push
mov
sub
dec
cmp
lret
sbb
es
loop
insb
imull
int3
arpl
jp
xchg
xlat
mov
mov
dec
dec
aas
and
cld
pop
nop
xchg
push
mulb
mov
scas
push
or
pop
cwtl
mov
test
into
sbbb
fwait
in
in
in
mov
pop
nop
gs
aam
xchg
pop
mov
pop
lret
shll
pop
push
cmpsl
cs
mov
shrl
out
sar
clc
arpl
sarl
cmp
enter
xchg
in
iret
loop
adc
insb
pop
inc
and
xor
xor
xchg
cmp
call
lock
sub
loop
mov
ja
nop
xorb
imul
test
in
sbb
inc
flds
int
pop
sbb
stos
push
sub
push
arpl
outsb
das
int3
arpl
push
outsl
mov
lods
cmp
ds
mov
addr16
hlt
add
scas
cld
es
adc
bound
sbb
inc
ret
es
repnz
inc
inc
mov
push
xchg
push
es
inc
out
xor
dec
xchg
pop
mov
mov
je
arpl
push
xor
loop
push
add
push
stos
dec
aam
sbb
scas
mov
test
addr16
mov
cwtl
test
xchg
pop
dec
lods
sbbl
out
imul
cli
add
loopne
in
js
push
popa
cmpsl
sub
nop
out
test
jmp
dec
xchg
cmp
dec
mov
mov
push
sbb
jo
dec
jle
jge
jns
stc
lret
outsl
das
loope
je
and
dec
mov
sbb
and
cwtl
out
lret
pop
mov
rcrb
ret
inc
jae
rcll
cmp
xor
loop
out
push
push
dec
into
arpl
add
add
mov
cmp
cmp
inc
dec
loope,pn
stos
xchg
inc
cmpl
pop
scas
out
outsb
shr
scas
push
jmp
insb
je
push
jbe
fs
sub
cmp
or
fbld
dec
lahf
mov
loope
inc
mov
push
mov
lret
jg
add
xchg
or
dec
cmpsl
or
scas
cmp
cmpsl
push
mov
loope
in
add
aad
pop
sbb
xchg
and
lea
fildl
mov
clc
mov
call
nop
mov
das
push
jae
dec
push
in
adc
hlt
fs
pusha
mov
sbb
adc
dec
mov
pop
dec
aas
add
rcl
movsb
mov
cltd
adcl
outsl
sbb
push
cmp
das
andl
pop
sbb
mul
scas
dec
stos
popl
pop
add
andl
cwtl
loopne
imul
ja
xchg
or
push
inc
mov
sbb
jo
repz
imul
daa
inc
lds
add
sub
fcoms
and
lcall
xlat
shlb
adc
imul
pop
ja
daa
pop
push
pushf
shlb
loop
test
lret
add
out
mov
pop
mov
xor
push
sub
ss
aam
mov
add
mov
sahf
jmp
cmp
push
data16
pop
divl
arpl
sub
mov
dec
and
inc
in
pop
lock
fdivp
cmp
push
div
inc
fisubrl
addr16
fcomps
xchg
jmp
mov
pop
out
mov
sbb
out
mov
psllq
loop
sub
aam
mulb
inc
in
mov
int3
cmp
push
into
mov
and
dec
push
inc
loope
cltd
xor
pop
enter
shlb
stos
nop
insb
sbb
dec
inc
adc
xor
xor
insb
xchg
shlb
insl
push
fstpt
cmp
lock
mov
aad
mov
jae
mov
andl
jmp
aad
cmp
sahf
arpl
sub
loop
test
mov
aad
xor
inc
faddl
subb
add
popa
icebp
popf
pop
rcll
in
jae
fadds
pop
stc
jge
cli
mov
js
fmuls
dec
mov
into
cmp
ret
xchg
xlat
inc
rcrb
in
mov
xchg
push
mov
lock
or
cmp
jmp
dec
add
arpl
ret
test
shrb
ds
add
rclb
loope
mov
sti
sub
add
lock
in
rcrb
in
aam
mov
js
mov
icebp
xchg
arpl
add
jge
jae
xchg
xchg
rclb
mov
mov
jmp
mov
and
mov
negb
sub
or
gs
leave
shlb
add
lods
lret
stc
pop
enter
out
sahf
imul
mov
stos
mov
sbbb
nop
rorb
add
arpl
xor
daa
dec
push
xorl
insl
mov
clc
fwait
ljmp
xorb
idivl
sti
xchg
jg
add
push
movsl
test
stc
int
xchg
scas
fnsave
ss
enter
loop
jb
adc
test
cld
faddp
mov
mov
push
test
nop
jmp
pushf
push
cs
inc
aaa
lods
pop
cmpsb
mov
cmp
clc
mov
decb
lea
xor
fdivl
loop
xor
cmp
sbb
sarb
daa
jmp
rorl
jae
cmp
mov
sbb
test
pop
dec
jge
sbbl
outsb
sub
imul
inc
test
int
lret
mov
jno
sbb
inc
lahf
push
testb
jo
sbb
push
mov
dec
add
repnz
into
jno
xchg
push
shrb
inc
adc
xchg
test
lock
xor
into
dec
arpl
pop
adc
or
popf
loopne
add
int3
push
sbb
jge
dec
nop
stos
jae
and
xor
xor
mov
outsb
sahf
js
pop
xor
sub
and
sbb
loopne
mov
scas
call
into
mov
loopne
ljmp
sbb
je
ds
sbb
loop
into
int3
ljmp
adc
sti
std
jae
pop
notb
addr16
dec
adc
pop
adc
dec
fs
sbb
subb
js
cld
fs
in
imul
cld
testl
loopne
sub
js
inc
sbb
mov
sub
sahf
cltd
adc
mov
xchg
add
rcll
repz
sbb
pop
mov
pop
jne
roll
mov
outsb
xor
push
or
xor
adc
inc
xchg
cmpsb
xorb
mov
arpl
mov
mov
into
mov
roll
push
repz
iret
push
add
and
lock
sarb
adc
mov
inc
inc
push
inc
pop
xor
outsb
lock
in
xor
xorb
sarl
out
mov
dec
fistpl
pop
cld
add
test
lahf
mov
inc
pop
inc
fucomi
mov
mov
pop
or
pop
dec
add
xchg
xor
push
popa
lods
push
notl
aam
dec
stc
push
ljmp
mov
push
push
inc
popf
dec
ljmp
push
pusha
dec
subb
addb
xchg
loop
rcl
lret
lods
divl
cltd
push
pusha
pop
xchg
pop
clc
xchg
pop
inc
decb
fbstp
mov
test
je
sahf
popa
cli
sbb
jl
dec
xchg
loopne
popa
lea
loope
rolb
pop
iret
scas
fisubs
fwait
aaa
loop
outsl
es
imul
je
arpl
test
mov
aad
jmp
or
mov
fldcw
mov
pop
xor
sub
in
mov
xor
cmc
fwait
stc
icebp
cmp
negb
jae
push
push
push
or
and
jns
adc
sbb
adc
or
pop
sub
into
push
out
js
inc
loop
and
adc
jae
call
xchg
pop
aad
dec
cli
push
xchg
es
mov
and
cmp
sti
arpl
loop
jno
xchg
add
xchg
sub
adc
jmp
sbb
pusha
cli
rclb
cli
lods
fidivrs
adc
pop
jmp
dec
and
inc
adc
pop
or
add
push
pop
push
mov
test
hlt
add
dec
mov
pop
dec
lahf
mov
jae
sub
stc
loop
addr16
push
aam
arpl
inc
in
cmp
jne
sub
adc
sti
dec
popf
nop
lahf
sub
pop
loope
mov
notl
test
mov
hlt
adc
xorb
mov
jl
pop
loop
int3
nop
xor
push
out
push
out
loopne
pop
mov
mov
bound
ljmp
in
sbb
lods
div
loop
inc
xor
cmp
cmp
push
sub
cmp
push
pop
arpl
xchg
inc
movb
jo
outsb
mov
ljmp
das
inc
push
loope
inc
gs
dec
sbb
cwtl
mov
mov
mov
das
js
shll
mov
dec
in
cmp
cli
loopne
sahf
mov
mov
xor
ja
stc
lret
sbb
jecxz
mov
in
cmp
test
rcll
mov
pop
imul
ljmp
and
sub
arpl
in
push
inc
push
jmp
adc
inc
ret
and
mov
or
lret
xchg
pop
pmaxsw
into
sub
dec
mov
out
jp
adc
cs
loop
push
mov
xchg
or
jp
cmc
xor
mov
arpl
loop
mov
jb
jmp
daa
pop
ss
lds
outsb
rol
fcomps
ljmp
mov
inc
jae
mov
mov
mov
or
and
daa
dec
mov
pop
fwait
cmpsl
ror
lock
xchg
icebp
aam
scas
add
mov
imul
xchg
sbb
push
iret
mov
pop
and
popf
xor
int
ret
scas
in
loope
notl
outsl
pop
dec
mov
dec
popf
push
lock
outsb
idivb
rorl
jp
aad
out
and
pop
add
add
in
imul
mov
sub
pop
add
clc
inc
iret
xchg
call
inc
xchg
mov
pop
adcb
mov
mov
or
leave
stc
push
pushf
add
popf
out
movsl
xchg
mov
into
mov
dec
and
rclb
push
loop
jae
arpl
js
sbb
jbe
sbb
mov
inc
test
pusha
jb
dec
pop
mov
push
les
fwait
jmp
arpl
cwtl
lds
shlb
xor
cmp
stos
jecxz,pt
nop
setl
mov
jbe
cs
lock
js
cwtl
xchg
pop
xor
inc
mov
decl
das
imul
and
push
lret
je
mov
mov
std
into
in
cld
shrb
pop
imul
mov
out
jbe
into
lock
insb
stc
stos
loop
test
lods
cmp
clc
frstor
xor
fidivs
or
out
xor
fldcw
xchg
lods
les
push
testl
push
cmp
mov
xchg
push
mov
pop
jns
sahf
push
xor
cwtl
push
shlb
cwtd
js
loop
pusha
les
lcall
int
add
aam
rcl
mov
clc
dec
data16
push
inc
mov
das
push
arpl
and
int
arpl
sub
mov
ds
addr16
cmpl
cmp
adc
loop
loop
adc
xor
adc
mov
jbe
out
lret
xchg
sbb
lock
loop
cmp
sub
rcl
add
jmp
dec
imul
inc
mov
repz
pop
ficompl
adc
mov
ss
jmp
push
push
mov
loope
jecxz
test
addb
rclb
rolb
movl
popa
mov
push
arpl
push
sbb
xor
mov
loop
int3
push
outsl
cmp
popl
mov
shrd
add
out
cmp
sahf
dec
mov
xor
addl
imul
dec
inc
push
arpl
add
adc
fdiv
in
repz
xchg
cmpsb
lods
push
mov
movsb
mov
cs
pop
sbb
pop
loope
dec
sbb
jmp
imul
lods
or
pushf
jecxz
or
insb
scas
and
ret
jecxz
pop
adc
mov
pop
jbe
fiadds
ljmp
or
fidivs
mul
rolb
icebp
ljmp
xchg
mov
stos
iret
lock
pop
out
in
inc
lret
cmp
mov
cwtl
lock
sub
hlt
cmpsb
jmp
pushf
in
jae
xor
fcomi
jp
mov
mov
mov
test
das
scas
fldl
pop
jns
jo
arpl
jae
xor
xchg
out
mov
xlat
out
cmp
mov
sbb
repnz
mov
adc
dec
mov
mov
js
jmp
out
in
aam
into
add
sub
sbb
je
rclb
ljmp
in
mov
lods
into
js
out
or
cmp
imull
addr16
imul
lock
xor
xchg
mov
push
pop
push
lea
add
xchg
push
sarb
test
int
pusha
and
stc
jmp
addr16
cli
jbe
aad
dec
pop
dec
add
and
stc
cltd
les
rclb
movsb
je
lock
fmuls
cmp
mov
dec
or
mov
jg
mov
test
xor
test
adc
sbb
call
mov
sub
xor
pop
cmp
loopne
jae
arpl
imul
scas
and
xchg
mov
das
divb
add
fimuls
add
cmp
fcoms
loopne
out
dec
das
push
pop
test
mov
nop
xchg
call
std
adc
fisttpll
sahf
loop
cwtl
pop
mov
lahf
xchg
aaa
out
mov
push
pop
and
fisubrs
ret
jecxz
repz
lcall
sti
loop
out
fwait
xchg
call
popf
dec
adc
or
and
into
out
rclb
enter
cld
das
aam
cmp
and
mov
push
push
and
pop
bound
push
dec
aad
cli
dec
jmp
repz
lcall
aad
cli
fwait
insl
popf
mov
sbb
bound
xor
jb,pt
xchg
sbb
cmp
add
ror
fnstenv
jecxz
in
xor
shlb
jbe
ficoms
adcl
inc
aaa
adc
stos
out
mov
loop
xorl
fwait
out
in
jnp
or
xor
ss
jnp
roll
mov
movsb
insl
and
lock
loop
push
in
mov
sbb
inc
fcompp
xor
fdivrs
aas
push
mov
mov
imul
mov
aad
sub
loope
jmp
in
insb
loop
xor
mov
loopne
data16
stc
jp
xchg
cld
dec
xchg
sbb
mulb
xchg
mov
pop
mov
scas
imul
cmp
mov
jge
xchg
sub
add
mov
push
jae
mov
dec
cltd
test
dec
add
fyl2xp1
or
fwait
cmc
mov
adc
mov
out
popf
fcmovbe
fmulp
call
cld
inc
mov
pop
sbbl
jae
lods
lods
mov
lea
jl
daa
xchg
inc
sbb
lds
add
mov
out
inc
cmp
aam
or
imul
bound
test
jmp
aad
push
dec
daa
pusha
or
clc
vmovupd
fildl
xchg
test
rcr
mov
jmp
test
sbb
jb
mov
aad
dec
imul
movl
add
sub
xchg
sub
sbb
or
push
push
cli
mov
mov
repz
mov
outsl
fiaddl
mov
adc
add
xchg
fs
dec
or
mov
inc
add
add
out
mov
jae
mov
arpl
jg
das
outsb
push
inc
fidivrs
test
es
ljmp
push
cmp
mov
insl
mov
xchg
pop
and
pop
or
mov
sub
pusha
shrl
inc
cmp
shll
test
pop
lods
sub
sbb
andb
xchg
dec
bound
push
mov
insl
push
jno
loop
adc
adc
outsl
xor
mov
mov
mov
xchg
sub
add
sbb
inc
mov
jecxz
jnp
je
arpl
shlb
rclb
mul
sahf
fdivp
mov
fs
sub
jecxz
mov
movsb
shll
pop
rolb
icebp
mov
sarl
cmpsl
arpl
lahf
aad
pop
popf
mov
xchg
mov
xchg
xor
mov
into
imul
enter
dec
lret
xor
mov
decb
dec
dec
push
sbb
fldenv
rcrl
xchg
fmull
push
arpl
fs
pop
inc
jp
outsb
push
pop
stos
push
lret
adc
mov
sub
dec
or
push
add
sub
add
push
cld
data16
hlt
or
pusha
out
iret
or
insl
sbb
outsl
xchg
push
jae
lods
push
nop
xchg
insb
fbld
xchg
jae
rolb
mov
ds
pop
flds
js
cltd
int
sbb
adc
jae
mov
call
xor
fsubrl
mov
decb
inc
pop
pop
sub
lock
test
and
outsb
mov
bnd
mov
scas
push
pop
jnp
ljmp
pusha
add
dec
into
imul
aaa
adc
xor
loopne
addr16
jae
dec
test
loop
pop
imul
bnd
bound
push
xchg
inc
mov
sbb
pop
cmp
repnz
hlt
dec
adc
loopne
mov
in
pop
xchg
into
cmp
pop
nop
jbe
or
and
stc
loop
addr16
fsub
pop
outsb
mov
xor
mov
inc
je
loop
jae
mov
pushf
dec
lock
dec
sbb
rclb
divl
dec
sub
and
xor
lcall
fwait
jmp
sub
sarl
inc
mov
sbb
lea
xchg
lcall
in
push
leave
das
je
sbb
icebp
mov
inc
xchg
sub
stos
cli
imul
les
arpl
popa
xor
push
pusha
push
jmp
dec
dec
push
lods
adc
ret
mov
mov
xor
ffree
fisttpl
test
add
jg
cmp
pushf
repz
es
xchg
stos
pop
dec
lds
add
sub
sbb
in
in
xor
stc
and
outsb
lea
jno
mov
rcrb
mul
lcall
imul
gs
pop
cmpsl
popa
es
in
jae
jl
sub
jbe
shlb
inc
dec
insl
popa
adc
xor
xorl
xlat
lcall
dec
xchg
dec
pop
stc
iret
test
cmpsb
inc
dec
sub
lods
loop
lcall
inc
mov
mov
lahf
adcb
popf
ja
sub
sbb
xor
pusha
repnz
outsl
orl
dec
js
insl
xchg
fs
sbb
js
dec
fsubrp
xchg
js
adc
mov
loope
dec
out
leave
xchg
scas
imul
sti
dec
dec
jl
adc
inc
rcll
imul
icebp
in
and
scas
test
int
xchg
push
arpl
dec
jecxz
dec
xor
lahf
mov
mov
mov
shr
pop
scas
push
addr16
sub
mov
push
jno
jmp
sahf
sti
push
dec
mov
xor
mov
pop
insl
fs
int3
xchg
je
dec
sbb
stos
add
cltd
or
gs
xorl
mov
in
std
div
insb
aam
xor
out
popa
dec
pop
loop
lcall
cmp
xchg
mov
clc
arpl
scas
inc
out
shll
xchg
jecxz
add
loopne
icebp
or
cwtl
push
scas
mov
loop
js
je
xchg
mov
ds
mov
jae
cld
rorb
mov
xorb
jo
mov
jbe
shlb
cmp
dec
es
sub
in
adc
mov
fistpl
fistpll
std
mov
rorb
fdivl
push
scas
loop
cmp
push
xchg
mov
movsl
mov
nop
mov
lss
fidivl
xor
xor
in
into
ljmp
int
ss
dec
dec
and
sar
imul
mov
out
ljmp
inc
pop
scas
mov
int3
mov
add
lcall
xchg
test
arpl
enter
mov
testl
jl
push
dec
and
mov
cmp
xchg
scas
push
aam
jp
mov
xchg
das
in
pop
icebp
xchg
imul
shr
arpl
mov
dec
sbb
repnz
or
push
mov
sbb
xor
jno
xor
dec
jnp
out
pop
dec
lea
aad
xchg
scas
xlat
jmp
arpl
out
xchg
loop
aas
adc
jmp
xor
testb
cs
pop
xor
rorl
decb
dec
aad
mov
faddl
test
add
cmp
nop
adc
push
jle
or
rolb
iret
sbb
dec
cmp
test
inc
jae,pt
mov
movups
cmpsl
shrb
movsb
jnp
inc
xor
cwtl
sub
ret
arpl
jns
leave
cmp
shl
lea
inc
outsl
xor
cmp
rcpps
pusha
pop
adc
pop
in
pop
adc
loopne
in
add
roll
sbb
fwait
jge
mov
into
mov
cmc
sbb
scas
iret
sbb
mov
add
hlt
xchg
rcl
ljmp
add
add
test
test
ss
xchg
push
cld
jae
outsl
inc
aas
mov
movsl
jl
arpl
xchg
xchg
mov
outsl
sbb
jmp
add
add
and
push
cmpsb
sub
jbe
mov
jae
mov
jns
lods
mov
add
xor
sbb
out
in
jp
inc
cmp
push
fwait
adc
pop
xlat
mov
pop
arpl
nop
test
stc
jle
add
cli
xchg
lcall
je
mov
out
leave
test
aam
push
mov
pop
sbb
cmp
push
loop
xor
fwait
mov
jbe
scas
jg
lret
jnp
mov
push
mov
ficompl
push
mov
mov
cmp
outsb
xchg
aam
mov
pop
scas
mov
repnz
xchg
inc
fistpl
scas
push
and
arpl
into
popa
mov
mov
jae
pop
test
out
jmp
jp
xchg
pop
movsl
mov
sbb
adc
testl
call
mov
std
sarl
dec
mov
loop
xor
jno
rcrb
imul
leave
dec
push
gs
fiadds
rolb
push
dec
inc
jo
mov
jmp
je
flds
sbb
mov
cmp
aas
pop
xchg
insl
fidivs
test
aad
mov
cmpsl
insl
iret
cmp
mov
push
loop
aam
add
jno
push
shlb
rolb
mov
mov
cmpsb
addl
ficompl
sahf
inc
nop
je
in
dec
pusha
pop
push
mov
mov
add
ljmp
das
jmp
mov
stos
loop
test
insb
sahf
mov
push
iret
add
mov
pushf
popa
jae
push
pop
int
mov
xor
jmp
lea
call
sub
imul
fbstp
inc
das
push
push
xorb
out
jno
cmpsb
pop
inc
add
add
call
out
mov
jbe
sub
cmpsb
jecxz
addb
xchg
out
shlb
or
cmc
adc
leave
fwait
ljmp
cltd
arpl
push
ret
rorl
pushf
dec
test
lds
jecxz
pop
dec
shr
xor
dec
frstor
nop
pop
in
mov
jno
cltd
ret
pop
sub
xor
repz
gs
ljmp
dec
xor
data16
fstpt
mov
repnz
add
fcoms
in
int3
adc
je
ret
xor
mov
imul
jg
cs
mov
add
ffree
fucomp
xchg
aaa
stos
popa
xchg
xlat
sahf
hlt
scas
outsb
mov
loopne
icebp
imul
xlat
test
inc
push
xchg
jno
mov
imul
push
xlat
clc
cmp
jnp
jb
call
lcall
scas
inc
mov
insl
scas
adc
jae
lock
fbld
scas
xchg
call
sbb
dec
dec
xchg
or
mov
rcr
xchg
loop
lods
js
stos
scas
ret
loope
xchg
pusha
out
mov
loop,pt
sbb
mov
mov
loopne
add
add
arpl
mov
inc
add
repnz
cli
insl
sbb
mov
mov
push
mov
push
fstl
xchg
mov
rclb
aam
fildll
mov
add
xchg
jae
lods
push
popl
rol
repnz
cmp
and
aas
repz
xchg
mov
in
xor
push
mov
jae
shlb
test
pushf
dec
testl
pusha
or
inc
gs
mov
and
add
or
xorl
and
mov
in
dec
ret
int3
scas
xchg
fisubrs
mov
aam
or
in
xor
sbb
nop
sbb
bound
xor
sahf
out
aam
mov
xor
pop
and
ja
jnp
into
ljmp
cs
push
push
xchg
imul
sub
cli
lock
xlat
adc
xchg
pop
mov
out
in
out
mov
arpl
jmp
dec
cli
cmp
xor
mov
ds
out
je
lock
ljmp
out
imul
or
cmp
enter
in
out
jno
daa
faddl
fsubrs
cmp
inc
test
push
lret
add
add
sahf
int
clc
repnz
jnp
loop
xchg
in
mov
pop
insl
or
jb
mov
sub
ljmp
std
jno
pop
movsl
test
in
push
sbb
lret
adc
popf
mov
xchg
lahf
popa
stos
and
imul
and
addb
ss
pop
push
mov
pop
xor
aam
mov
andl
sub
push
cmp
orb
imul
mov
push
mov
pop
cltd
push
popa
mov
arpl
mov
icebp
lock
call
incb
pushf
lret
adc
cwtl
dec
sbb
dec
pop
sbb
adc
mov
cmp
xor
test
arpl
xchg
fs
sti
lods
sbb
shlb
mov
adc
inc
and
fwait
pop
xchg
mov
idiv
cmc
icebp
aam
jo
test
repnz
jge
push
xor
testb
repnz
incb
js
jp
repnz
mov
jp
neg
les
mov
repz
clc
nop
jg
stc
mov
sbb
repz
jae
jl
out
scas
jmp
lock
push
pop
mov
test
jbe
lret
shl
cmpsb
xor
mov
xchg
divb
xlat
xchg
repnz
in
pop
lahf
pusha
inc
jno
adc
icebp
lret
jbe
push
dec
jnp
filds
mov
cmpb
imul
xor
adc
mov
clc
into
mov
shl
add
add
cmp
xchg
dec
repnz
repnz
mov
cmp
mov
mov
shl
hlt
and
das
shl
mov
add
sbbb
xor
xor
std
fs
or
xor
imul
outsl
mov
icebp
outsl
sbb
lock
test
cmp
or
mov
push
mov
mov
cli
ja
movsbl
mov
scas
mov
mov
repnz
mov
mov
lock
les
insl
push
add
test
out
mov
mov
repnz
mov
xorb
hlt
nop
repnz
inc
fcmovu
xor
lock
loopne
stos
sar
pop
xchg
jnp
adc
lock
lods
jns
mov
addb
sarb
mov
addb
ret
mov
mov
idivb
mov
xchg
mull
xor
in
xorb
fisubl
add
testb
daa
sbb
and
fbstp
jecxz
pop
lock
stc
je
xchg
stos
inc
add
pop
mov
orb
lds
sub
push
mov
test
push
stos
rorb
scas
into
aam
sub
mov
inc
fnstenv
je
es
sbb
stc
hlt
shr
mov
lahf
mov
sarb
cmpb
fcmovu
arpl
sbb
adc
popf
cmp
lds
xor
sub
pop
push
arpl
rclb
xchg
add
cmpsl
rol
iret
push
shll
orb
cli
fcmovne
outsl
shl
xlat
fbld
pop
sbb
mov
test
faddl
inc
stc
mov
sbb
cltd
jne
mov
push
leave
mov
cmpsl
mov
xor
sbb
les
in
mov
ja
mov
xchg
notb
sub
iret
es
faddl
stc
inc
jmp
jo
loop
dec
push
xchg
fcomps
loope
stos
mulb
adc
mov
xchg
mov
xchg
xor
inc
outsl
cmp
es
ljmp
add
mov
adc
cmpsl
movsl
je
arpl
cwtl
sbb
popf
pop
xor
mov
sub
sahf
lods
lahf
cmp
ljmp
inc
imul
jg
pop
movsl
or
or
fwait
pop
xorl
out
add
dec
add
cmp
into
shll
inc
fldenv
inc
jae
std
imul
inc
cltd
in
divb
daa
lret
cwtl
negl
cmp
arpl
outsb
mov
out
xlat
push
repz
popf
in
outsb
fnsave
jge
inc
xchg
loop
insl
mov
sbb
test
imul
shll
stos
hlt
aas
arpl
enter
test
sbb
jmp
add
jmp
scas
jecxz
xchg
fildll
jg
arpl
dec
imul
or
ficoms
int3
cwtl
mov
jmp
sbb
icebp
or
rol
popa
xor
scas
pop
add
les
insl
sbb
dec
std
leave
jmp
add
int
push
scas
push
push
in
std
in
fwait
add
shl
insb
std
adc
push
xchg
lret
and
in
stos
in
mov
sbb
mov
dec
lcall
mov
shlb
mov
cmc
add
iret
divb
aaa
fistpl
cmpsl
push
xchg
test
movsb
imul
pop
sub
xor
jecxz
cs
push
jecxz
mov
push
aam
mov
inc
inc
cmp
add
xlat
ds
jne
mov
dec
arpl
rorl
inc
pop
hlt
cmp
je
add
adc
jmp
mov
sbb
les
int3
sbb
cmpsl
cwtl
stc
loop
scas
add
mov
add
cld
je
js
or
int3
mov
adc
iret
add
add
cwtl
add
cltd
inc
enter
je
mov
jmp
or
sub
fwait
sahf
int3
push
dec
mov
adc
push
addr16
mov
movsb
pusha
xchg
lods
test
shlb
gs
repz
mov
push
fwait
into
lret
nop
andb
and
add
mov
hlt
mov
ret
mov
push
enter
outsl
jbe
xlat
add
rclb
dec
inc
cmp
fwait
out
leave
insb
enter
rcll
xchg
ljmp
int
mov
inc
ljmp
mov
push
inc
xchg
outsl
cmp
in
jg
rcrb
inc
fs
loop
mov
mov
mov
and
inc
jbe
sbb
dec
fucompp
iret
and
test
jle
je
dec
xlat
mov
xor
or
sub
push
imul
add
jb
inc
test
jmp
jp
loop
gs
arpl
dec
push
add
mov
test
cmp
mov
adc
dec
std
sub
adc
fldlg2
cmp
jg
mov
dec
arpl
mov
xchg
das
sahf
test
loopne
xor
xchg
dec
out
pop
orb
mulb
cmp
test
clc
jne,pn
push
jecxz
push
loopne
insb
pop
push
pop
xor
xchg
imulb
in
nop
push
not
jmp
sub
repz
cwtl
scas
mov
mov
loope
adc
cmc
mov
lea
roll
or
mov
lock
pop
or
xchg
push
imul
fcomi
ljmp
sbb
js
pushf
sbb
push
mov
push
fnstenv
les
testl
sub
cmp
xlat
inc
push
sbb
test
jge
ret
or
into
cmp
inc
lds
mov
test
pop
xlat
arpl
push
negl
loop
iret
mov
cmp
lock
sbb
mov
rcrb
inc
lret
mov
xlat
push
pop
cmp
stos
jns
jecxz
cmp
jp
sahf
xlat
imul
loop
lcall
out
out
mov
iret
xor
out
into
ljmp
xor
shll
pushf
mov
in
ja
mov
sbb
stc
insb
push
hlt
nop
jp
pop
dec
xchg
pop
and
inc
push
arpl
fsubr
mov
dec
rcrb
lock
imul
mov
push
scas
sarl
pop
in
or
xchg
stos
rolb
sub
sub
dec
mov
jae
lock
cs
jmp
repnz
adc
roll
mov
cmp
dec
mov
push
loop
jp
or
inc
mov
test
mov
imul
xor
mov
divl
in
inc
mov
fstpl
sahf
test
in
or
fcoml
push
add
sbb
ffreep
adc
popa
decl
out
imul
mov
je
mov
pop
movsb
push
jmp
mov
lcall
lock
int
test
in
iret
stos
inc
mov
cwtl
xchg
rclb
mov
jecxz
rorl
out
shr
fisttpl
mov
outsl
js
iret
inc
cmc
mov
shr
pop
inc
in
out
xchg
mov
push
cmp
push
cltd
jecxz
mov
shll
dec
int3
xchg
imul
add
add
sahf
push
arpl
push
loop
mov
add
jbe
mov
sahf
inc
into
fmuls
clc
mov
shl
pop
iret
xlat
cmp
loop
loop
sbb
shl
or
mov
fstpt
test
std
cmpsl
ror
dec
push
mov
push
sub
inc
push
enter
jnp
insb
out
imul
or
push
stc
mov
les
rorl
scas
add
mov
arpl
insb
sbb
arpl
push
lods
mov
jg
inc
mov
mul
jns
dec
adc
pop
fnstenv
inc
adc
out
sub
mov
sahf
push
les
nop
sahf
test
mov
jmp
xchg
jae
inc
fsubrl
in
insb
jae
nop
popf
scas
ds
ljmp
mov
cmpsb
push
scas
push
cmpsl
lahf
mov
ret
int3
aad
mulb
dec
mov
jns
mov
or
jae
dec
mov
cmpsb
sbb
scas
xorb
lock
push
ss
arpl
shll
jo
add
cltd
fcmovu
out
imul
movsb
xor
adcb
push
inc
cltd
scas
push
into
fidivl
sbb
jp
mov
dec
lds
ja
push
stos
popa
nop
out
popa
xor
insb
push
popa
push
flds
lahf
mov
pop
pop
push
add
shrl
outsb
stc
xchg
sub
scas
rorl
sub
push
adc
out
mov
push
lahf
mov
cwtl
mov
and
daa
and
popf
mov
pop
xor
xor
and
lret
repnz
repnz
jge
daa
roll
ja
rolb
mov
in
repnz
cli
dec
lahf
repnz
jo
jmp
inc
pushf
repnz
loopne
fs
inc
fdivp
outsl
adc
bnd
hlt
out
jge
sub
in
push
es
adc
test
jle
mov
push
enter
xchg
push
in
pop
bound
icebp
cwtl
sub
mov
scas
lods
xor
jne
mov
and
jno
clc
adc
xorb
lahf
pop
lcall
mov
faddl
mov
mov
sar
mov
adc
add
mov
xchg
out
and
push
push
mov
and
push
lcall
xchg
mov
test
imul
adcb
mov
hlt
sbb
out
mov
fidivl
in
mov
cld
mov
icebp
sahf
aas
test
adc
mov
mov
push
xchg
mov
test
test
mov
fcompl
loop
les
dec
cltd
ret
cmpsb
andb
fisubs
jae
nop
enter
mov
mov
mov
rolb
faddp
lcall
movsb
jns
xchg
out
cli
xor
cmp
jecxz
xchg
enter
repnz
scas
mov
cmp
shlb
popa
notb
fidivl
xchg
in
xchg
divb
xchg
cmpsb
roll
adcb
mov
out
testb
mov
mov
mov
mov
call
sarb
sbbl
mov
rolb
cmpsb
add
in
xchg
shlb
idivb
imulb
idivb
xchg
mov
ja
call
mov
cmp
aas
xor
fsts
xchg
pop
mov
repnz
shrl
decb
cwtl
fcompl
jecxz
sbb
lret
pop
sub
leave
out
mov
xchg
sbb
ljmp
fabs
adc
hlt
aaa
inc
adc
aad
pop
in
adc
or
insb
and
lds
js
rorb
jnp
imul
call
popf
dec
ror
test
xor
mov
jmp
pop
jmp
arpl
cmc
mov
fs
fbld
imul
insb
shl
inc
jne
cli
shlb
xor
mov
out
out
jb
add
aaa
out
adc
cld
mov
int
mov
push
mov
lds
hlt
lret
cld
repnz
push
mov
repnz
pop
out
push
pusha
mov
xchg
xchg
decb
das
bound
pop
push
push
cmp
or
cli
mov
mov
add
xchg
sti
scas
in
xchg
enter
xchg
xchg
test
sbb
outsl
arpl
fidivrl
scas
dec
xchg
mov
testb
cmp
in
pusha
jg
push
gs
nop
div
aam
and
test
push
jmp
mov
xor
arpl
adc
pop
inc
ret
mov
adc
sbb
xchg
mov
jb
lcall
adcb
out
stos
jle
hlt
mov
add
pop
mov
not
xchg
mov
mov
xchg
into
jg
rol
adc
div
sahf
push
mov
adc
cli
mov
rcrb
xchg
jno
test
mov
test
mov
jg
ja
sbb
aas
negb
scas
xorb
das
sbb
sahf
cs
xchg
lods
adc
mov
test
lock
popa
cmp
nop
jg
sarl
mov
mov
mov
mov
fadd
cltd
mov
bound
mov
fdivrs
ljmp
sahf
mov
xchg
mov
inc
mov
lods
lock
repnz
add
idiv
test
cmp
xchg
aas
mov
cwtl
ret
xchg
sbbb
lods
das
stos
in
test
xor
test
sarb
xchg
in
mov
jp
push
xchg
insl
pop
lea
mov
shlb
cmc
ret
in
stos
movsb
xor
enter
aas
dec
fucom
sub
pop
xchg
mov
push
sbb
inc
dec
arpl
mov
xchg
inc
cmc
ret
cmp
lock
sbb
adcl
pop
fbld
push
add
int
outsb
nop
lcall
imul
loop
or
sub
scas
adc
rcrl
cpuid
es
cmp
push
and
push
jno
adc
mov
jbe
mov
cld
pop
dec
sbb
inc
fimull
mov
pop
in
pushf
shll
shll
push
mov
mov
outsb
mov
mov
cs
stos
scas
mov
mov
inc
xchg
out
ret
ljmp
ljmp
cmp
fwait
out
cli
loop
jne
arpl
push
ret
cmc
outsl
xor
fistl
loop
sbb
mov
dec
jp
or
in
ret
ljmp
dec
sti
xor
adc
mov
xchg
in
xor
lcall
lock
movsb
mov
pop
mov
pushf
adcb
pop
cmp
jbe
push
sbb
jmp
imul
xchg
dec
aaa
mov
cmp
xlat
insl
imul
stos
scas
mov
jle
sbb
xor
pop
test
add
xchg
lods
push
cmp
test
mov
sahf
mov
xorl
xchg
out
aad
inc
sbb
rcrb
add
movq
inc
dec
push
jg
lods
roll
inc
scas
pop
xor
mov
mov
outsl
jle
out
mov
dec
mov
xchg
cwtl
arpl
into
mov
out
mov
ret
jae
sbb
mov
addr16
rorl
pop
data16
cwtl
mov
push
sub
sbb
jae
imul
adc
mov
and
fwait
test
mov
iret
je
aas
xchg
sbb
xor
xorb
xchg
jle
repz
jle
in
imul
decb
popa
ret
loop
mov
ret
in
icebp
lret
dec
mov
test
std
mov
test
pop
rcrl
lret
mov
rorl
sbb
adc
lea
pop
and
push
popa
add
pushf
mov
mov
sbb
mov
scas
arpl
cmc
sarl
inc
mov
cmpsl
jnp
push
add
sbb
add
sbb
popa
mov
cmp
loop
loope
nop
inc
pop
adc
fisttpl
pop
cld
pusha
inc
mov
adc
js
outsb
add
jae
es
out
jbe
sahf
push
mov
scas
xchg
pop
loopne
push
pop
lret
xor
xor
or
lods
popf
jp
rcr
jnp
mov
pop
add
cwtl
xor
popf
sub
movl
lock
inc
pop
movsl
cmp
cld
or
mov
arpl
pop
mov
in
add
fwait
pop
jnp
sti
cmc
xorl
sahf
cmp
sub
movsb
xor
aad
je
arpl
adc
in
cmp
je
loope
push
inc
mov
das
jmp
xchg
cmp
xchg
dec
mov
adc
cmp
fwait
sarb
sub
les
bound
in
mov
or
push
push
mov
outsb
out
jae
lds
clc
stc
lock
repz
mov
jno
add
daa
out
in
push
imulb
cmp
or
cmp
fmuls
mov
xchg
lds
xlat
jmp
lret
add
dec
xor
mov
rcl
and
push
mov
cmp
fbstp
loope
aaa
adc
int3
int3
jbe
sbb
aam
lock
jbe
lds
rcrb
clc
popa
cmp
inc
scas
mov
sahf
inc
fs
fwait
pop
hlt
arpl
cli
xchg
cmp
mov
cmp
push
xchg
pushf
popf
cli
loop
cmp
sti
add
lock
dec
int3
ds
xchg
enter
out
xchg
jmp
imul
add
pop
pop
xor
fstp
test
loopne
add
xchg
mov
repnz
dec
iret
mulb
adc
inc
test
xor
mov
int
push
idivb
nop
ficoml
stc
xchg
ret
dec
sub
jns
add
loopne
jle
cltd
stos
add
mov
leave
jae
es
xchg
arpl
mov
pcmpeqd
ljmp
push
xor
push
repnz
repz
xor
xor
fwait
sbb
xchg
mov
movsl
adc
jmp
das
data16
addl
sub
mov
mov
mov
mov
lds
lahf
lea
orb
dec
sti
jae
cs
xor
inc
fiadds
rorb
and
mov
add
imul
mov
and
pop
ficompl
adc
xor
movq
cld
push
push
xchg
repnz
frstor
ds
jecxz
popl
sub
mov
scas
in
fstpl
jmp
mov
stc
push
cmp
mov
sbb
push
pusha
mov
sbb
jecxz
xchg
and
in
int
daa
dec
rcrb
cli
popf
repnz
fwait
outsb
or
mov
sti
repnz
jecxz
cwtl
mov
pop
sub
dec
ficomps
scas
and
roll
sbb
repnz
loop
and
mov
adc
jmp
test
ret
sub
push
ljmp
xor
pop
inc
inc
jnp
jbe
mov
cmp
push
xchg
mov
and
stos
mov
jle
mov
sahf
xlat
data16
int
in
push
data16
mov
sub
sahf
in
push
fldcw
shrl
jp
mov
adcl
jmp
addr16
hlt
rcll
cmp
out
cwtl
lods
push
testl
inc
or
clc
mov
inc
lahf
cld
cli
in
mov
xchg
mov
jno
mov
jle
movsl
push
stos
add
sarl
scas
push
sub
loope
fwait
stos
add
rol
mov
insl
arpl
sub
mov
cmp
xor
mov
cmp
scas
fidivl
lret
jmp
out
jecxz
and
ror
outsl
inc
aas
mov
xchg
xchg
inc
fbld
xchg
test
sub
xor
ds
mov
xchg
cltd
push
xor
outsl
nop
mov
adc
jge
pop
xor
hlt
iret
incl
mov
clc
push
out
iret
aam
sub
scas
insb
rcrl
mov
pusha
cmc
fidivs
loop
daa
fstpl
mov
mov
aas
mov
in
lret
clc
pop
xor
jb
movsb
lock
in
clc
sahf
sbb
cwtl
arpl
and
cltd
xor
sarl
js
in
cltd
cld
popa
cmpl
das
cmpsb
stc
xor
jge
xchg
pop
push
cltd
xchg
sub
divl
in
in
pop
cmp
lods
add
sub
inc
in
push
insl
test
outsl
lock
loop
imul
xchg
hlt
idiv
pop
insb
xor
mov
sarb
or
in
fimuls
cli
sbb
push
inc
adcl
sbbl
mov
xchg
int
inc
cld
xchg
divb
out
aad
push
in
add
jno
sub
pop
or
shll
sbb
insb
lahf
xor
popf
cmpsl
mov
push
mov
cltd
sahf
andl
lret
or
and
mov
dec
ret
sete
sbb
push
pop
cmp
cmp
pop
xchg
sti
subl
or
bound
adc
cmpsb
cmp
xlat
fbstp
imul
popa
clc
jae
xor
and
hlt
pop
aam
and
cs
mov
and
push
adc
adc
xlat
sbb
cmp
xor
jne
push
cmp
shr
add
pop
cmp
test
xchg
sub
les
lea
loop
xor
jp
jecxz
lret
jb
mov
pop
xor
cwtl
jbe
pop
cmovp
mov
jno
lret
ror
xor
clc
ljmp
xchg
xchg
sbb
adc
xchg
loop
fisttpl
pop
bound
jno
pushf
pop
loope
sub
andl
jmp
mov
int
or
aaa
es
xchg
jmp
adc
lds
in
addb
mov
push
pop
scas
jecxz
inc
insb
rcrl
fs
stos
mov
fsubrl
jae
pop
sbb
scas
rclb
out
pop
pop
jmp
xlat
ss
mov
mov
in
movsb
and
and
adc
mov
movsb
and
rcl
sbb
fists
icebp
stc
mov
mov
or
int3
mov
dec
cltd
xchg
xchg
mov
push
xchg
hlt
sbb
mov
inc
add
pop
mov
jnp
sub
mov
or
cmp
xchg
arpl
je
call
pushf
xchg
arpl
pop
jno
dec
or
xchg
mov
pop
je
shll
mov
inc
das
cmpsl
arpl
scas
xchg
mov
pop
sbb
mov
xchg
out
fnsave
mull
mov
push
jle
fdivr
inc
add
fnstsw
repnz
mov
xor
dec
push
fdivp
sub
push
dec
fucomi
ret
dec
clc
and
mov
ja
lock
xor
mov
pop
shll
push
xlat
jmp
push
inc
mov
into
pusha
out
pop
outsb
shll
push
repz
xor
or
or
jecxz
pusha
int
lods
imulb
fildll
jnp
adcb
aad
pop
fcomps
loop
push
or
xchg
mov
sbb
and
loopne
mul
hlt
mov
ret
cmp
out
sub
jmp
add
or
aas
test
cmp
ljmp
xchg
mov
ret
pop
dec
push
sarb
mov
imul
sbb
shrb
mov
lahf
sbbl
sub
fdivs
xchg
mov
or
clc
mov
int3
ficoms
mov
arpl
out
repz
loope
test
lahf
aas
into
mov
inc
int3
ja
fwait
or
xor
imul
fbstp
arpl
movsl
js
jb
dec
add
lock
mov
mov
sbb
or
stos
js
out
pop
inc
push
imul
ja
add
fcoml
push
push
lret
imul
mov
push
jecxz
inc
aad
icebp
dec
xor
notl
mov
shrl
mov
add
mov
jbe
add
jb
mov
fwait
test
scas
lock
sub
out
mov
dec
out
jmp
pop
imul
imul
mov
jmp
push
jp
inc
xor
clc
xchg
sbb
sbb
cmp
add
hlt
scas
arpl
or
movb
and
outsl
addr16
pop
fdivs
idivb
or
ja
sub
out
nop
out
and
mov
cli
mov
in
xor
enter
push
mov
data16
decb
shr
dec
sbb
push
outsl
inc
loop
xor
iret
sbb
jbe
mov
ja
enter
cmp
js
ljmp
push
icebp
scas
outsl
loop
sbb
cli
xorl
mov
ret
xor
pop
jle
inc
orb
inc
cltd
cmp
cltd
loop
add
je
sahf
cli
pop
arpl
jp
cld
je
pop
outsb
je
mov
push
mov
push
imul
ja
or
add
xchg
jo
push
fimuls
jae
pop
pop
fidivs
or
rorb
data16
xor
mov
dec
fnstcw
mov
popf
outsb
ret
xchg
popf
cwtl
sahf
lds
insl
cmp
rcll
pusha
lods
push
popf
xchg
hlt
push
fidivl
insl
mov
enter
loop
leave
outsb
xchg
loope
adc
pop
sub
sbb
insl
mov
jmp
add
dec
jne
or
push
call
fsubrs
push
stos
repz
jle
mov
hlt
imul
arpl
addr16
jmp
fidivs
js
mov
jno
arpl
call
add
je
sbb
loope
ljmp
push
jne
sahf
xchg
jle
xchg
addb
jge
jle
jle
pop
jge
pop
lea
into
test
push
mov
jl
popf
mov
ljmp
xchg
div
pushf
add
add
outsl
repnz
mov
fidivs
mov
xchg
scas
and
xorb
adc
push
sahf
icebp
stos
adc
scas
mov
cli
xchg
sti
cld
mov
movsb
cmp
xchg
mov
pushf
sarl
loop
stc
mov
mov
cmpsb
div
sbbb
pop
arpl
shl
das
shll
nop
lcall
sar
repnz
add
cld
sbb
jae
jae
jae
jae
out
cld
lret
mov
not
mov
mov
adcb
mov
mov
aas
pushf
xchg
mov
idivb
xchg
test
bnd
jae
jno
imul
mov
mov
repnz
sbb
repnz
jg
iret
rorl
aaa
dec
cwtl
mov
aaa
jg
add
xchg
xchg
out
fcoms
jg
test
mov
cmp
add
incb
fdivp
lock
scas
cmpsb
mov
icebp
repnz
mov
push
test
mov
mov
sbb
repnz
into
mov
out
mov
repnz
lret
jle
sbbb
decb
and
ljmp
nop
in
mov
repnz
mov
mov
mov
sets
xchg
repnz
nop
mov
mov
in
mov
jno
and
add
orb
adc
xchg
lcall
lock
clc
cltd
idiv
pslld
stos
divb
shl
xchg
test
bnd
lock
or
cli
xchg
imul
lcall
mov
push
mov
loop
mov
fmull
hlt
adc
adc
jno
and
add
mov
je
out
scas
cld
mov
test
sbb
aaa
xchg
mov
faddl
scas
sbb
out
fistpll
pop
push
std
arpl
rolb
add
fadds
arpl
sbb
mov
pop
mov
and
sbb
loopne
notl
mov
je
mov
mov
neg
mov
out
sahf
mov
loop
sahf
imul
lret
or
dec
into
fisubl
lret
mov
add
push
sub
xor
loope
ljmp
fldl
cmp
arpl
movsb
push
je
iret
fwait
pop
lcall
push
fadds
xor
mov
xchg
xchg
pop
sub
jp
xchg
push
add
or
mov
push
push
dec
repz
jmp
mov
cmp
loopne
lret
pusha
je
jne
jle
push
int3
cmp
repnz
add
jge
cmpsb
into
stos
and
pop
inc
jnp
mov
push
in
into
xor
in
jmp
add
nop
lahf
xchg
inc
inc
mov
in
loopne
scas
mov
cmp
jg
loop
add
dec
cwtl
leave
mov
xchg
repz
xlat
scas
pop
mov
lret
pushf
mov
xor
and
jbe
push
mov
aam
into
fucomip
jo
fstpt
mov
fwait
inc
sbb
xor
les
popa
lcall
cmp
mov
mov
fistpl
or
fs
jae
out
js
in
xchg
and
lret
dec
popf
jp
xor
ret
mov
data16
mov
inc
add
and
arpl
push
fcompl
ds
jae
lret
shl
arpl
or
jbe
into
lds
xlat
call
cli
in
in
subl
mov
addb
cli
pushf
cld
popa
mov
push
cli
cmp
int
stc
jnp
lods
xor
mov
cltd
mov
mov
pop
and
dec
out
popf
incl
in
fdiv
xchg
leave
loope
inc
jp
ret
sbb
or
iret
int3
stos
insl
pop
xchg
inc
test
xchg
sbb
and
loopne
xchg
fdivr
movl
imul
hlt
insb
pop
xlat
loop
es
inc
mov
inc
fmuls
sbb
ja
arpl
xchg
pop
mov
cmp
call
sbbb
pop
xchg
mov
add
loop
push
and
test
shlb
inc
shlb
cmp
loope
mov
int3
fdivs
out
jecxz
sbb
mov
push
cld
xchg
inc
divl
imul
cmp
mov
aas
xchg
fdivl
jae
into
popf
fistps
adc
jge
mov
sub
pop
fwait
mov
test
fs
jecxz
pop
outsl
mov
mov
nop
dec
arpl
dec
mov
xchg
lahf
jmp
inc
and
mov
inc
jge
shll
aas
add
lods
mov
test
js
jecxz
loop
dec
mov
mov
out
pop
pop
ja
adc
mov
mov
fisubrl
loop
popf
je
aaa
jae
repz
ret
imul
or
loope
fs
inc
in
xor
pop
popa
mov
ss
scas
adc
pop
pushf
sbb
loop
test
mov
mov
out
mov
or
enter
jmp
arpl
push
add
test
pop
jl
ds
push
push
into
xor
pop
mov
in
dec
sub
or
xchg
mov
shrb
jne
idivb
xchg
lahf
andb
in
xor
sub
clc
ds
add
lock
outsb
adcl
push
dec
in
xchg
cwtl
pop
jle
into
stos
arpl
xlat
inc
xchg
inc
adc
pop
sarb
mov
ds
or
repnz
adc
pop
mov
fwait
aaa
test
mov
sub
int3
shll
adc
xchg
mov
addb
aam
and
out
pushw
loop
mov
sarb
mov
scas
add
cmp
scas
rcrl
sbb
in
cmp
movsb
cli
fs
xchg
shrb
xlat
dec
fs
and
adc
xchg
sub
sahf
scas
xlat
mov
jae
dec
bound
into
loope
ds
test
jmp
out
lods
loop
dec
xor
dec
mov
add
shrb
pop
mov
movsb
pusha
sbb
mov
mov
ds
arpl
stc
ljmp
aad
sub
mov
out
adc
push
sti
out
xlat
push
cmpsl
mov
dec
jmp
sbb
pop
pop
xchg
mov
lods
enter
mov
cmp
add
xor
and
repnz
bound
call
inc
test
lods
movsl
push
cmpsb
and
dec
xchg
sbb
sub
cwtl
iret
push
mov
lcall
pop
movsb
mov
pop
inc
fcos
mov
xor
pop
pop
xor
imul
repnz
lahf
xchg
arpl
push
cld
jmp
ret
cmp
mov
ficomps
outsl
dec
out
lods
arpl
push
ret
push
inc
cmp
mov
aam
std
jbe
stos
push
out
cmp
xor
roll
in
sub
adc
hlt
pop
les
icebp
fadd
mov
adc
out
rcll
test
push
sarl
adcb
fiaddl
ljmp
and
xor
in
je
data16
sub
xor
jmp
imul
out
test
repz
or
ret
sub
shll
cmp
hlt
mov
outsb
pop
mov
mull
lret
imul
and
adc
loop
jns
mov
das
and
test
mov
sub
mov
clc
mov
jmp
nop
pop
jmp
in
je
int
dec
adc
out
cltd
repnz
sbb
push
fisubrl
sahf
xor
jl
xchg
fadds
add
push
je
scas
insb
rep
sarb
mov
cmp
test
push
flds
xchg
and
adc
xchg
and
in
mov
add
scas
fld
dec
mov
in
aad
push
mov
frstor
test
push
jae
jb
push
xor
push
das
cmp
iret
mov
add
iret
xchg
je
lock
hlt
dec
and
scas
rol
loop
mov
sub
cltd
dec
pop
fistps
aad
incl
sbb
jb
iret
mov
inc
dec
rorl
mov
mov
shrl
popf
mov
xchg
sbb
jne
ror
outsl
cld
push
test
loop
add
adcb
scas
xchg
pop
je
mov
dec
and
sbb
sub
cmc
loop
fs
mov
jecxz
mov
cmp
pop
imul
fidivs
aam
clc
mov
jbe
out
dec
cmp
out
jae
pushf
xchg
mov
scas
nop
imul
add
inc
movsb
cmpsl
test
in
out
inc
loop
adc
loopne
incb
js
push
cld
lret
bound
in
dec
inc
cwtl
xchg
aam
fcompl
lock
incl
iret
mov
shll
add
imul
icebp
pop
xchg
mov
and
stc
xlat
pushf
mov
mov
push
jne
test
mov
mov
adc
or
sbb
lret
adc
les
sbb
jbe
out
push
fstpl
dec
sbb
lock
ljmp
push
cmpsl
es
or
sub
xor
arpl
orl
dec
sbb
mov
xchg
aas
lea
out
jp
shrb
repz
mov
lods
jle
and
xor
mov
fwait
cs
jle
out
int
add
xor
push
xchg
xor
sbb
xchg
xor
loop
add
push
xor
pop
ds
sahf
fisttpl
loop
sub
inc
add
lcall
cmp
imul
xchg
add
dec
push
adc
aaa
test
dec
pop
out
sar
jbe
shl
clc
jae
mov
push
leave
push
outsl
push
xchg
mov
jecxz
pop
fldenv
cwtl
pop
push
ret
adc
in
add
pop
mov
loop
push
lcall
fidivl
cld
mov
rclb
push
hlt
and
xchg
mov
fwait
jae
shll
and
popf
les
repnz
sbb
sbbb
mov
lcall
stos
in
int
cmp
lret
lock
int
test
int
in
or
dec
adc
inc
cmp
jecxz
jae
into
negl
mov
push
lahf
mov
stc
mov
jle
movb
jge
fists
push
or
jne
shlb
pusha
mov
lahf
fistpl
cli
dec
pop
in
lock
loop
dec
pop
movsl
adc
ljmp
loopne
stc
ds
popf
inc
mov
mov
fcomi
xor
sbb
bswap
imul
ljmp
lock
mov
xchg
fiaddl
outsl
mov
aaa
out
int
jae
pop
lret
lea
dec
sarl
pop
mov
mov
mov
ret
test
scas
out
clc
aaa
adc
pop
dec
fcmovnbe
xlat
dec
cmp
mov
lahf
pop
mov
je
jae
icebp
adcb
test
nop
aam
in
repnz
pop
jg
mov
jns
jecxz
lock
adc
je
leave
in
lahf
adcb
imul
push
sbb
sbb
fstl
sbb
sbb
dec
push
inc
insl
ret
pop
out
cmp
mov
jmp
push
imul
mov
xor
scas
insb
push
cltd
push
cmc
ljmp
or
outsb
jb
shr
and
les
lods
mov
mul
in
fs
mov
aam
stos
addr16
pop
iret
pop
pop
and
loop
pop
add
sarb
mov
jp
pop
cmc
push
iret
xchg
mov
add
xchg
jae
mov
aaa
fmuls
mov
mov
test
sub
add
imull
xchg
imul
push
xor
cmp
push
jno
cltd
dec
into
add
mov
out
push
das
mov
fwait
into
out
popf
arpl
sti
push
shrl
mov
movsl
enter
jbe
push
sbb
mov
arpl
or
cwtl
jno
mov
stos
jns
mov
cmpsl
jb
ljmp
mov
icebp
mov
imul
push
mov
mov
mov
enter
into
movsl
xor
or
inc
out
pop
test
in
push
nop
push
out
rorb
pop
dec
scas
gs
pop
mov
sahf
scas
push
test
gs
loop
xchg
mov
mov
jbe
mov
pop
scas
push
in
mov
daa
arpl
cwtl
pop
aaa
xchg
xchg
scas
add
jnp
jbe
mov
lret
pop
mov
sub
repnz
js
jecxz
imul
out
les
xchg
sub
rcl
pop
pop
out
mov
inc
jnp
hlt
pop
mov
cld
into
inc
and
pop
lods
cmp
pop
push
icebp
xor
sarb
ret
and
leave
insl
mov
cs
or
dec
addr16
dec
push
das
mov
cwtl
mov
xor
jge
xchg
shlb
cmpsl
push
xchg
and
push
dec
js
je
aaa
add
pop
xor
aas
or
loopne
mov
add
lods
mov
arpl
nop
sub
nop
dec
mov
jne
mov
test
xchg
shll
call
jae
add
jmp
into
stc
loop
sbb
add
lods
jno
push
lret
addr16
das
push
jmp
jb
iret
lods
xlat
push
mov
lock
imul
mov
mov
rorb
shrb
cmc
stc
cmp
or
scas
push
test
adc
cs
sub
shll
ficompl
scas
idivl
loop
mov
cwtl
popf
mov
sbb
cld
sti
inc
add
pop
add
mov
fs
pop
mov
cmpsb
mov
cli
loop
imul
jo
sub
push
mov
jg
xchg
pop
popf
sbb
or
add
jne
mov
dec
je
cmp
in
xchg
ret
adc
push
jg
in
mov
mov
call
jae
mov
iret
jae
mov
test
iret
xor
in
mov
lret
add
add
mov
out
push
mov
xor
nop
movsl
loope
mul
add
mov
out
daa
or
fdivl
mov
dec
dec
testl
mov
lods
dec
enter
inc
fidivl
push
cli
push
xor
dec
fdivrs
add
cmp
dec
imul
ret
mov
in
xor
xchg
fldt
sarb
push
es
push
mov
cs
mov
and
imul
sahf
push
sti
mov
xchg
fsts
inc
xchg
cltd
call
pop
aad
xchg
cmc
in
lcall
ljmpw
push
fdivp
pop
lret
scas
sub
in
push
iret
repz
jl
cmp
ljmp
mov
rorl
scas
jne
sahf
mov
scas
in
xor
push
fs
or
xor
insl
pop
pusha
jae
daa
cwtl
stc
out
sbb
mov
inc
ja
mov
cmpsl
jg
out
in
daa
pushf
imul
arpl
dec
in
jle
popf
xchg
lret
sbbb
stos
filds
orb
addr16
jg
xchg
int3
incb
mov
cmpsb
cli
pop
fcomps
inc
adc
imul
fbld
cld
mov
cwtl
xchg
cmp
push
popf
lock
loop
xchg
pop
dec
pushf
xor
sub
jle
call
adc
cmpsl
sbb
xchg
mov
pop
lahf
aaa
lods
mov
cmp
addr16
xor
arpl
movsl
loope
adc
clc
in
clc
std
lcall
out
jmp
dec
lds
jne
adc
jnp
out
mov
ficoml
imul
xchg
scas
jmp
out
dec
jns
sbb
inc
test
xchg
fwait
pop
in
out
xchg
push
in
lods
repnz
into
ds
mov
mov
gs
movsl
push
rcll
sbb
cmp
lea
inc
xorl
mov
shrl
jmp
xchg
push
pop
iret
mov
in
xlat
js
xor
pop
adc
scas
jns
dec
jmp
aaa
pop
aaa
adc
push
pop
inc
out
cli
mov
outsb
lret
ret
push
jmp
insl
inc
mov
sub
mov
ljmp
subb
push
inc
stc
sbb
and
pop
fbstp
test
aaa
rolb
push
int3
scas
clc
je
loop
mov
scas
or
xchg
pop
sahf
sub
nop
mov
sti
or
xchg
xlat
enter
sub
ds
adc
rol
sbb
in
loop
mov
cwtl
inc
imul
jp
mov
mov
in
xor
mov
mov
mov
pop
bound
mov
and
cli
cmp
stos
scas
jecxz
sub
add
xlat
sbb
xor
arpl
in
cmpsb
add
xchg
es
add
loope
adc
call
sub
clc
into
mov
dec
out
xor
mov
sbb
test
and
repz
aad
fnstenv
inc
adc
dec
mov
adc
sub
push
popa
mov
popa
insb
push
or
push
fs
jg
xchg
sbb
mov
testb
cmpsl
xchg
rcll
test
ja
pop
push
notb
pushl
lock
jbe
and
outsl
imul
and
lret
je
arpl
cmp
out
shrl
or
and
scas
arpl
xchg
jo
test
shlb
mov
sarl
les
pushf
push
mov
lret
in
rcl
movsl
mov
pusha
xor
divl
mov
int
sub
inc
arpl
pop
mov
pop
jo
es
in
push
adc
mov
jmp
mov
jae
mov
pusha
xchg
push
jp
lcall
imul
xlat
push
mov
pop
pushf
imul
outsl
lods
push
les
mov
and
mov
cmp
add
xchg
adc
hlt
pmullw
arpl
test
scas
bound
das
jae
dec
jnp
sbb
jl
pusha
add
pop
es
cld
add
aam
inc
xchg
addr16
js
les
hlt
stos
jge
mov
push
lret
andb
outsb
inc
ror
lcall
sahf
mov
sub
inc
sbb
add
inc
inc
out
aam
shlb
out
jbe
mov
aad
push
or
fisubs
sub
xchg
jp
insl
inc
push
pop
mov
jmp
fiaddl
cli
inc
cmc
xlat
arpl
jo
mov
sbb
and
mov
loop
xchg
repz
add
xorb
jo
test
push
out
mov
or
add
pop
imul
xor
sbb
lock
cmp
adcb
and
sub
jecxz
fcompl
les
rcrb
sti
psadbw
xchg
inc
mov
inc
mov
aaa
and
sbb
dec
mov
push
in
add
push
in
out
mov
adc
mov
cmp
out
dec
arpl
adc
ja
outsl
jl
xchg
jno
fsubl
test
push
cli
xchg
mov
test
ljmp
repnz
and
pop
inc
repnz
and
repnz
das
cmpsl
sar
scas
lcall
scas
out
stos
or
mov
pop
pop
add
nop
sahf
mov
mov
and
mov
pusha
mov
or
imulb
ficompl
mov
clc
adc
xor
pop
mov
mov
inc
xchg
int
testb
cli
dec
mov
clc
addr16
mov
mov
icebp
pop
adc
mov
cli
iret
loope
mov
bnd
jg
jne
push
repnz
mov
mov
scas
xchg
lret
divb
mov
and
sbb
ret
arpl
ljmp
mov
enter
mov
mov
mov
out
paddb
ficoml
loopne
jle
imulb
rcrb
ret
xchg
ret
inc
nop
repz
add
testb
aaa
adc
xchg
mov
nop
rolb
inc
sti
lock
xchg
les
fdivl
subb
xchg
mov
xchg
fs
xchg
lahf
rcl
xchg
mov
sahf
shl
add
loop
testb
add
xchg
mov
mov
testb
adc
sahf
pop
sbb
jl
mov
xor
jg
cmc
paddq
jo
mov
sbb
mov
cmp
mov
sbb
rcrb
xchg
into
and
ja
ret
div
test
ret
mov
div
shl
nop
cs
or
sahf
scas
rolb
mov
xor
jae
arpl
mov
dec
in
dec
nop
mov
ret
out
push
jno
rcrb
sbb
mul
das
push
ror
push
or
jge
pop
xchg
pop
fwait
ret
hlt
shlb
push
into
data16
adc
sbb
sub
loopne
in
rolb
imul
fucomi
loop
es
mov
in
or
mov
imul
and
cltd
lcall
mov
jl
in
adc
cltd
into
xorl
popa
push
sub
mov
jge
popf
arpl
xchg
add
xor
mov
mov
pop
loopne
aad
sub
adcb
lret
fildl
cli
inc
sarl
leave
into
pop
push
jbe
pop
out
clc
push
in
mov
fcoms
jae
push
mov
adc
jb
mov
push
hlt
repz
push
and
stc
jmp
call
loop
dec
jns
call
aad
js
mov
cmc
loope
jbe
int3
push
cmp
mov
mov
pop
jo
mov
dec
push
jae
jmp
leave
pop
divb
mull
inc
icebp
imul
mov
cld
cmp
imul
in
imull
fadd
mov
xchg
das
loop
rcll
fdivp
insb
addb
call
add
inc
loop
sahf
mov
push
arpl
out
push
mov
in
or
enter
in
dec
call
mov
and
pop
push
add
jecxz
icebp
xor
sbb
mov
lods
rorb
int
push
mov
std
jo
shlb
jnp
cmp
cs
test
scas
into
imul
or
movsl
pop
repz
cld
ss
mov
mov
daa
ret
loopne
inc
rclb
popa
ljmp
call
xlat
or
xor
add
jmp
cmp
mov
jno
movb
mov
fsubrs
dec
fwait
sbb
stos
add
jl
mov
mov
jno
mov
xor
ja
xor
gs
arpl
add
pop
jg
arpl
testl
sub
cs
inc
push
aaa
test
adc
jle
js
fcoms
lret
mov
dec
xchg
frstor
mov
add
xor
mov
in
add
movsb
jmp
inc
insl
ficomps
cs
xchg
or
pop
push
inc
in
and
shlb
lock
pop
into
shlb
add
mov
lds
or
xor
xor
in
mov
or
das
jg
jae
insb
mov
mov
dec
cmpsb
sbb
pop
xchg
in
into
and
scas
jmp
iret
lea
xor
xchg
cld
add
ret
hlt
mov
cwtl
cmc
testl
div
aaa
pop
jecxz
insl
jb
jno
mov
clc
ja
or
pop
jge
pop
xor
ljmp
add
addl
or
or
fsub
call
jle
mov
bound
lock
xchg
nop
mov
jbe
hlt
ss
sbb
push
jb
pop
into
loop
fnstenv
clc
jo
bound
jle
repz
add
inc
aas
add
ljmp
in
nop
repz
subl
test
in
stc
sub
imul
arpl
dec
and
sbb
mov
mov
mov
test
rorl
mov
and
pop
hlt
test
cmpsb
imul
xor
add
into
inc
xchg
xchg
movsb
mov
repnz
cmp
jge
mov
jmp
push
fimuls
outsl
addr16
ret
inc
jno
jle
jne
ret
jp
ret
arpl
ret
rcrl
pop
fadd
jns
into
jb
addl
dec
xor
repz
mov
xor
push
je
xor
lret
test
dec
push
mov
jae
aaa
or
inc
xchg
clc
dec
and
js
out
and
rol
sbb
mov
rcrb
movsb
shlb
fbstp
cmp
push
jle
jb
mov
arpl
xchg
ljmp
movsb
addr16
xlat
ljmp
mov
loope
xchg
arpl
sahf
mov
push
add
inc
jbe
fisttpl
inc
outsl
sbb
mull
lahf
jmp
mov
sbb
xor
or
or
incl
mov
cmpsb
stos
sahf
jmp
outsl
sarl
jbe,pn
inc
popa
pop
test
loope
imul
jbe
push
sub
adc
add
jl
leave
lods
loope
push
add
add
std
sub
scas
imul
jne
rcll
mov
mov
mov
or
stos
es
cmove
dec
test
xchg
xor
je
ret
xchg
hlt
pop
mov
fwait
mul
or
outsl
mov
movsl
out
sahf
xchg
xor
push
sub
test
loope
adc
mov
jae
pop
xchg
push
jecxz
popf
mov
into
ljmp
dec
aas
adc
in
fs
test
clc
push
xor
testb
and
ret
clc
or
xchg
adc
imul
push
ljmp
jmp
mov
adc
and
mov
loop
ret
in
outsb
ror
in
xchg
mov
or
hlt
pop
mov
lock
jo
push
xchg
std
cli
xlat
mov
lret
jo
lods
ds
push
movsb
sub
ja
xor
mov
dec
stos
fnstsw
jmp
out
lods
sub
cltd
fimull
dec
sub
test
rorb
pop
mov
out
test
xor
mov
mov
sub
cmp
orb
hlt
mov
mov
xchg
addr16
adc
jbe
arpl
jbe
dec
push
mov
xlat
pop
into
push
sbb
inc
adc
adcb
add
cmpsb
xor
mov
enter
arpl
call
jnp
das
fld
xor
sti
mov
pop
add
inc
sbb
adc
mov
das
aam
mov
psllq
nop
mov
loopne
lret
std
ret
jmp
adc
xchg
sbb
std
jle
mov
and
stos
lock
pop
push
sbb
pop
add
fdivr
icebp
dec
jmp
bound
into
push
push
mov
rorl
es
mov
push
cwtl
add
jmp
xor
fcmovne
into
mov
inc
mov
cmp
loopne,pn
into
adcb
xchg
dec
xchg
push
push
fcmovnu
and
fdivrp
enter
jbe
aad
mov
out
pop
scas
jns
xor
pop
adc
loop
and
arpl
sbb
xlat
xchg
iret
mov
inc
dec
rcrb
stos
js
xchg
xchg
sub
push
jo
rol
clc
lds
jp
int3
clc
mov
mov
repnz
xchg
fadd
mov
jae
push
js
hlt
out
pop
jp
mov
cmp
out
xor
pop
js
and
addr16
xor
push
dec
jno
adc
lods
mov
ss
loop
ds
cmpsb
mov
ds
gs
inc
sbb
push
test
sub
inc
push
mov
js
sti
adc
imul
daa
popf
and
or
fdivrp
hlt
and
cld
push
fwait
pop
scas
in
sahf
bound
xchg
dec
xchg
je
mov
jmp
loop
pusha
in
movsb
mov
mov
lret
fsubrs
insl
test
lahf
rorl
rorl
lock
ss
jbe
push
shl
mov
loopw
fdivrl
arpl
shl
cli
in
jb
dec
jmp
ljmp
movsl
pop
adc
stc
mov
push
jmp
lds
cmpsb
nop
scas
das
sbb
stc
mov
sbb
cli
loop
in
dec
out
jge
sarl
mov
or
mov
or
leave
std
jecxz
xchg
xor
xchg
gs
sbb
insl
mov
or
dec
add
movsb
in
sahf
fsubr
imul
sub
pushw
mov
es
loopne
xchg
xor
mov
shrb
out
loop
aaa
mov
add
aad
mov
imul
push
daa
ljmp
out
outsb
rorb
out
out
outsb
loop
lcall
sbbl
and
jmp
lret
mov
add
stc
arpl
and
loop
cs
mov
xchg
sub
jl
arpl
jb
fidivrl
pop
xor
jmp
fistps
mov
out
mov
or
xor
in
add
les
xchg
push
dec
notl
je
lock
jmp
dec
mov
loop
xchg
pop
push
adcl
not
pop
sbb
mov
fs
testb
sahf
xor
ss
xor
push
dec
xchg
cmpsl
popf
int3
std
test
popf
loop
ror
pop
das
call
inc
xchg
loope
pop
and
add
pop
jae
scas
loope
pop
sub
enter
arpl
leave
push
dec
push
mov
mov
push
xchg
and
dec
inc
fsubl
jl
pop
bound
out
pop
lcall
xchg
roll
xchg
sahf
cmpsl
mov
popa
outsl
mov
arpl
push
rclb
enter
pushf
or
sbb
jl
push
xchg
jecxz
push
mov
lods
dec
add
jle
je
lods
push
jnp
jb
mov
fsubr
cmp
fsubl
test
push
in
leave
mov
sbb
clc
push
mov
jae
sbb
add
or
imul
ja
ja
mov
es
xchg
sub
inc
bnd
out
scas
in
dec
add
xor
arpl
jge
iret
push
mov
sbb
jae
xchg
imul
xchg
sbb
xchg
xchg
xchg
pop
ljmp
arpl
rorl
adc
daa
cmp
stc
aaa
jne
es
xchg
int3
insb
jne
mov
sub
movsb
xor
sbb
jnp
dec
loopne
dec
imul
sbb
ljmp
pop
mov
push
imul
pop
jbe
xlat
xchg
leave
in
adc
sbb
outsl
jo
add
mov
jb
fidivrl
testl
mov
rcl
leave
div
fstl
jno
out
sbb
mov
xor
nop
mov
cmp
adc
add
outsl
fidivl
xor
dec
sbb
pop
into
sub
xlat
mov
std
mov
fmulp
or
mov
subb
xchg
push
mov
int3
sbb
dec
xor
in
or
fidivl
test
into
orb
add
jo
xor
xor
add
jl
xor
mov
jbe
jecxz
test
inc
lods
mov
add
mov
mov
fcom
sbb
ffree
test
inc
ljmp
mov
in
mov
repz
sbb
push
cli
fucomip
in
adc
aaa
and
gs
xorl
stos
push
and
push
ret
aaa
lcall
loop
xchg
adc
adc
lret
lahf
rclb
adc
add
js
popf
mov
in
in
sbb
push
lock
out
outsl
sbb
in
push
push
sub
inc
inc
push
pop
leave
mov
je
push
jecxz
aas
je
push
call
repnz
xor
xor
les
jo
jge
cmc
loope
cs
fwait
jecxz
mov
jle
mov
jecxz
setnp
xchg
jae
and
in
sarl
js
mov
xchg
mov
mov
mov
mov
pop
pop
mov
adc
sbb
loop
cwtl
outsl
fs
data16
mov
or
inc
or
insb
fistpll
mov
mov
cmp
dec
push
leave
in
loop
jae
fbstp
push
jb
xchg
das
xchg
lds
aaa
iret
aad
call
mov
mov
movsl
daa
bnd
iret
pop
or
std
push
adc
pusha
add
sbb
xchg
adc
les
or
dec
fyl2xp1
inc
shll
lcall
mov
mov
or
je
out
fildll
daa
mov
int3
scas
je
dec
xor
repz
cmc
inc
push
mov
jns
fnstsw
sti
scas
mov
shrb
arpl
iret
loopne
xlat
loop
sbb
cmpb
add
xchg
xchg
out
push
xchg
jmp
shll
sbb
insb
aam
aam
xacquire
pop
jns
mov
and
add
lret
jae
idivl
into
push
lock
sub
sbb
add
inc
imul
mov
daa
cwtl
mov
insb
mov
jmp
push
add
sub
inc
loop
lret
repnz
mov
lods
add
fimull
mov
cwtl
xchg
dec
push
test
push
xor
inc
icebp
test
push
fisubs
testl
shrl
ljmp
adcb
xor
jmp
mov
push
lods
push
popa
lea
mov
nop
ficomps
int3
jmp
and
add
js
sub
cmp
push
xchg
cmp
add
sbb
xchg
bound
dec
pop
sti
into
jmp
ljmp
jno
mov
lock
sbb
and
out
in
imul
imul
outsl
repz
cmp
push
iret
xor
add
into
leave
cmpb
daa
pop
lods
shr
adc
testb
mov
mov
mov
mov
sbb
xor
inc
pop
jns
lret
pop
scas
jecxz
es
call
jo
lret
push
adc
lds
xchg
ljmp
pop
test
dec
xchg
in
xchg
lret
dec
dec
mov
mov
int3
mov
stc
xchg
xchg
popa
out
mov
cmc
dec
push
aas
jne
add
mov
jne
jmp
jp
loop
jp
stos
dec
not
imul
repnz
mov
stos
cmpl
and
adc
sbb
stos
jb
arpl
aam
stc
loop
test
fld
je
mov
push
mov
scas
cwtl
mov
cmp
mov
fcoml
div
mov
sbb
sbb
add
arpl
xchg
fs
add
lret
lret
xor
inc
mov
or
adc
jo
imul
loop
or
dec
add
pop
outsl
sahf
mov
stos
mov
adc
hlt
outsb
rorb
jmpw
push
xchg
in
dec
popa
mov
push
rcr
pop
xlat
shrl
dec
add
hlt
mov
inc
lock
xchg
stos
das
push
gs
arpl
jne
push
inc
push
pop
lret
subb
mov
jge
fidivl
mov
xchg
ret
xchg
fstpt
ret
jbe
into
jmp
sahf
test
xchg
fwait
mov
sbb
nop
pop
adc
dec
fildl
scas
add
mov
jmp
in
push
pop
lahf
pop
xor
inc
mov
and
sahf
add
sarb
and
jmp
mov
mov
aaa
push
jbe
mov
hlt
imul
arpl
or
sbb
insb
adc
or
js
bound
sahf
xchg
and
xchg
popf
insl
xorb
xor
mov
js
ja
js
flds
repnz
into
mov
js
arpl
jnp
pop
jns
daa
ret
inc
xchg
lods
out
sbb
or
xor
inc
inc
lock
jecxz
imul
xchg
cs
addr16
jle
mov
push
stos
inc
inc
jae
pop
xor
mov
ljmp
cmp
xor
cs
push
adc
loop
cwtl
xor
or
inc
iret
sbbl
mov
pop
push
and
ja
leave
pop
clc
arpl
jg
mov
mov
dec
cwtl
sub
pushf
lcall
nop
sub
dec
cltd
cmc
fbstp
sbb
push
jg
lahf
mov
push
imul
test
inc
in
adc
xchg
in
jno
jne
add
dec
subl
push
into
mov
mov
or
mov
adcl
xchg
or
xor
out
xlat
and
pop
xor
add
out
aas
or
mov
into
jae
push
loop
sbb
mov
imul
cmp
inc
sti
loop
out
mov
movsl
mov
fldcw
divl
pop
push
push
mov
pop
push
push
mov
mov
cld
xchg
mov
aam
divb
imul
inc
negl
inc
sbb
sub
cmp
gs
cwtl
mov
loop
popf
xchg
ds
push
add
pop
inc
or
lods
mov
jecxz
ja
and
fnstenv
lock
int3
nop
push
clc
pop
sub
jmp
adc
sahf
ljmp
sbb
test
ljmp
lret
jmp
xor
icebp
imul
sub
pop
cmp
or
stc
or
dec
bnd
rorl
mov
loop
jns
test
test
arpl
popf
pushl
into
pop
movsb
imul
sub
mov
cltd
mov
sbb
gs
xchg
outsb
test
xor
ljmp
ficompl
cmp
dec
lcall
mov
mov
je
pop
jae
lret
pop
hlt
jns
mov
jmp
daa
test
cmp
clc
jae
fiaddl
into
or
arpl
adc
jne
imul
inc
dec
out
push
shll
stos
jle
loop
out
xor
lahf
pop
out
jo
daa
inc
cwtl
out
pusha
mov
pop
arpl
lock
and
mov
mov
jae
mov
outsl
mov
and
push
mov
hlt
test
int3
pushf
and
out
pop
mov
push
jno
dec
scas
imul
mov
sbb
adc
dec
jae
cwtl
aad
pop
loopne
push
into
js
imul
out
lahf
pop
add
pop
inc
cld
push
fidivrl
push
and
rclb
cmp
mov
cltd
mov
rcrb
lods
adc
pushf
add
pop
add
outsl
xlat
jae
les
add
cli
dec
mov
repnz
in
jg
lock
mov
jno
test
add
xor
push
incl
imul
popf
cli
xor
rolb
pop
push
notb
das
bound
arpl
push
notl
pop
inc
shlb
imul
shrb
adc
push
add
ljmp
xlat
dec
adc
in
sti
je
sbb
mov
cmp
sahf
repnz
arpl
mov
cmp
jb
fimuls
das
iret
jno
sar
jmp
insl
fs
mov
es
insb
aam
mov
lret
lods
mov
test
clts
arpl
lret
lret
je
das
flds
jle
bound
sbb
lods
mov
push
test
imul
pop
test
mov
movsb
lcall
mov
shll
je
dec
hlt
xchg
mov
ds
in
jno
xchg
ret
mov
mul
cltd
push
shrl
push
jmp
pop
dec
shl
cmp
sahf
adcl
cmp
xchg
adc
mov
out
and
repnz
fmuls
hlt
repnz
lahf
movlhps
adc
negb
push
jge
rorb
add
mov
das
and
test
testb
cli
pushf
repnz
lods
push
mov
mov
push
mov
ret
inc
scas
test
out
shl
cli
leave
cwtl
or
mov
sub
out
push
pop
repnz
mov
pop
mov
mov
jae
cmpsb
lock
insl
add
push
fidivrl
loop
inc
loopne
mov
mov
test
cmpsb
mov
mov
mov
xlat
jmp
pop
ficomps
cli
jne
push
insl
adc
test
repnz
pop
pop
mov
cwtl
mov
pop
bnd
out
push
dec
cmp
nop
repnz
push
out
ja
mov
push
cli
mov
das
sahf
shll
cli
nop
ja
sbb
and
mov
mov
scas
and
cld
xlat
lcall
lahf
enter
xchg
adc
cmpb
andb
rolb
pushf
xchg
repnz
xchg
xchg
ret
add
cmpb
xorb
xchg
fdivrs
sahf
repz
idivb
add
test
shll
pop
mov
mov
sbb
xchg
cli
mov
mov
test
fiadds
rorb
adc
mov
mov
lret
cltd
lahf
fsubl
or
cltd
xchg
mov
sbb
cmpsb
lcall
mulb
divb
incb
testb
divb
jo
dec
mov
mov
outsl
and
in
ja
pop
cmp
fdivrl
jae
into
xchg
mov
add
lods
cmpsl
adc
sarb
fsubrp
inc
xchg
pop
ret
cmp
lahf
call
xchg
cwtl
arpl
sbb
scas
hlt
loop
mov
mov
jge
imul
jp
push
sbb
pop
mov
inc
jnp
or
mov
xlat
jmp
les
packsswb
je
icebp
jg
cmp
mov
sarb
xor
fisubrs
push
rolb
fists
push
leave
cmpsb
dec
clc
xchg
sbb
js
aad
js
jmp
dec
mov
inc
dec
mov
xor
popa
arpl
insl
repz
stc
cmp
adc
loop
aas
rcrb
inc
mov
xor
xchg
sbb
imul
pop
xor
fdivrl
je
sub
mov
cwtl
sbb
shr
mov
mov
in
xchg
iret
mov
hlt
sbb
push
or
stc
or
mulb
mov
adc
testl
ljmp
imul
xchg
nop
push
imull
scas
insb
call
push
or
inc
xchg
pop
and
rclb
mov
arpl
mov
shll
xchg
sbb
mov
push
in
cmp
lods
fistps
push
mov
test
or
mov
insl
int
scas
fnstenv
into
aad
test
push
fisttpl
add
imul
scas
fists
dec
ljmp
lahf
or
push
shrb
xlat
mov
or
jecxz
sbb
mov
mov
lret
mov
daa
jns
sahf
jle
add
mov
pop
mov
jbe
push
push
and
add
repnz
mov
arpl
lahf
test
mov
jae
pushf
jns
pop
jecxz
adc
xor
ss
aaa
sbb
inc
lods
and
mov
into
sub
test
stos
mov
and
fdivrs
or
xchg
out
out
jmp
int3
js
jb
mov
fstl
imul
inc
outsl
mov
sub
lret
icebp
cli
loop
adc
push
out
push
sbb
sbb
jmp
test
xchg
push
hlt
pop
jmp
popf
xchg
xor
out
jno
arpl
in
ja,pn
ljmp
lret
cld
adc
int
dec
xor
xlat
jmp
int3
clc
cmp
icebp
out
fwait
jbe
in
roll
mov
mov
dec
loopne
rcl
test
add
jcxz
ret
jno
cmpsb
imul
add
mov
pop
adc
cs
mov
rorb
mov
in
dec
aas
inc
and
xor
stos
mov
dec
arpl
je
pop
jmp
lcall
aas
xchg
pop
pop
jecxz
adc
ffreep
pop
popa
repnz
out
jl
xchg
aaa
mov
add
cmc
xor
sbb
pop
jbe
imulb
cmpsl
repz
hlt
sbb
loopne
or
hlt
mov
in
jo
in
cmp
ljmp
sbb
fstps
les
shlb
js
mov
int3
hlt
rorl
aaa
clc
push
movsb
mov
adc
push
mov
lods
mov
pop
jp
xchg
rorb
imul
cmp
subb
shr
push
mov
push
jns
jle
or
js
jl
ret
or
lea
mov
mov
jns
repnz
adc
pop
xchg
iret
jo
shlb
outsl
push
cmpl
popa
sbb
fs
adc
push
push
xchg
mov
pop
ds
stc
dec
loop
lods
das
xchg
repnz
xchg
sbb
sbb
pop
subb
sbb
mov
pop
les
sbb
test
out
addr16
sbbb
stos
dec
les
pop
insl
stc
imul
and
fcompl
imul
push
pop
inc
jmp
fnsave
arpl
addr16
out
das
gs
mov
dec
dec
in
movsb
and
xchg
pop
cmpsb
mov
bound
daa
mov
pop
pop
popf
gs
or
imul
int
xor
mov
mov
mov
testb
mov
jns
cmp
mov
pop
lret
fildll
outsb
repnz
cli
fisubl
cmp
das
mov
ljmp
add
mov
xchg
cmp
mov
sub
inc
jno
imul
mov
arpl
ficoml
hlt
pop
movsl
ss
cwtl
loop
hlt
dec
mov
enter
push
daa
stos
scas
cli
arpl
jno
fsubs
or
adc
mov
imul
test
fists
imul
pop
mov
adc
stos
lret
inc
andb
cmc
iret
adc
jmp
mov
fsubs
sbb
dec
inc
lcall
sahf
lahf
jbe
inc
notb
cltd
pop
push
lock
ljmp
in
es
jne
insb
dec
pop
mov
inc
dec
pop
fs
mov
lods
xchg
in
push
mov
or
or
mov
loop
inc
pushf
mov
and
cmp
push
mov
pop
mov
fsubs
pop
xchg
inc
loopne
dec
sti
pop
mov
pop
imul
call
sub
sbb
mov
adc
cmp
adc
or
inc
adc
push
push
out
mov
sbb
mov
mov
pop
mov
in
mov
mull
jne
cld
lods
adc
cmp
cwtl
cmp
lret
test
mov
arpl
jge
xchg
int
sub
les
stc
sbb
inc
js
pop
mov
mov
aad
inc
mov
push
xchg
jno
mov
jmp
lret
lret
in
pop
pop
iret
fs
jg
mov
cwtl
and
icebp
xchg
xor
andps
scas
xchg
or
adc
ret
inc
push
popa
cmp
test
test
jno
imul
movsl
arpl
add
push
lret
sbb
popf
jge
cmc
jae
adc
push
aad
inc
push
addb
jg
je
mov
lret
shrb
mov
push
sub
imul
cmc
mov
jmp
jmp
mov
or
jp
inc
pusha
sub
arpl
outsl
sbb
icebp
ds
fmuls
xlat
pop
mov
mov
push
popf
ljmp
adc
push
insl
loop
int
das
mov
iret
sbb
add
mov
iret
mov
faddl
xchg
fsubrs
sbb
loop
inc
insb
pop
xchg
idivl
popa
pop
popa
pop
inc
pop
lods
inc
daa
xor
into
outsl
clc
push
mov
ljmp
mov
je
push
mov
int
and
xchg
outsl
out
mov
push
pop
movsl
lea
pop
cli
in
push
adc
xor
jl
jnp
sbb
mov
int
jno
lock
inc
push
out
jle
jno
or
mov
dec
cmp
loop
nop
xor
mov
out
xor
test
add
insl
fcomi
imul
arpl
lods
sahf
out
jmp
sahf
lret
lahf
loop
inc
jp
std
mov
lret
mov
sbb
push
cmp
xor
mov
cmp
enter
jbe
clc
and
push
mov
out
add
lahf
jno
movl
dec
sub
jo
lret
cld
ljmp
xchg
fincstp
outsl
gs
sti
xor
adc
out
ret
lcall
scas
mov
jae
dec
adc
std
pop
inc
xchg
inc
push
push
dec
mov
insl
dec
pop
cmp
cmp
in
lcall
cmp
imul
pop
repnz
cli
out
loop
into
ljmp
mov
mov
pushw
jmp
jo
lock
mov
jbe
sarl
repnz
push
test
scas
in
jne
imul
xlat
out
pusha
adc
lret
xor
out
test
sub
mov
sub
sti
fcmovu
fsubrl
into
das
cmpsb
pop
in
xor
rcll
dec
rcl
cmpsb
test
fldenv
faddl
push
out
outsl
push
data16
push
mov
adc
hlt
pop
pop
push
dec
jo
icebp
cli
add
in
inc
daa
push
ljmp
pop
dec
mov
xor
aad
mov
xor
aaa
adc
push
cmp
ror
add
daa
push
xlat
pop
cs
hlt
cmp
adc
sub
sub
dec
je
adc
das
popa
in
in
sub
cltd
clc
jecxz
out
stc
rclb
lcall
mov
call
call
loopne
call
xchg
loop
rolb
xchg
xchg
cmp
cwtl
jp
cld
nop
data16
and
ret
mov
inc
mov
or
push
dec
idivb
dec
loop
cld
pop
cmpl
into
jbe
les
mov
ja
cmc
es
loope
jae
out
jl
lock
mov
pusha
mov
push
dec
movsb
test
aaa
dec
pusha
clc
iret
sub
loop
iret
jne
call
mov
lock
mov
sbb
aam
das
sbb
ja
push
adc
movsl
jp
sbb
push
fldl
fildll
push
mov
xor
fwait
push
sbb
stc
sbb
and
mov
add
pushf
iret
xchg
dec
fnstsw
and
fldt
jno
shll
ficompl
loop
es
out
xor
and
loop
popa
js
in
push
flds
add
popa
mov
mov
dec
nop
testl
fsubr
dec
in
je
arpl
mov
sub
shll
arpl
aaa
or
add
jle
add
imul
mov
test
mov
cli
sbb
dec
xchg
inc
push
test
xor
jg
mov
and
pop
inc
mov
lock
shrl
dec
xchg
arpl
lock
mov
xchg
in
cmp
je
and
test
dec
rorl
int3
mov
dec
jae
incl
pop
testb
mov
push
push
filds
arpl
test
lods
adc
in
rcrb
mov
mov
push
loop
pop
shl
inc
call
xchg
popl
sbb
incb
je
add
repz
push
mov
call
and
xchg
mov
push
mov
loop
sbb
mov
xchg
dec
jno
sti
sti
clc
jl
pop
and
xor
xor
mulb
xchg
cli
xor
and
cmp
add
loope
jbe
pop
loop
push
push
in
sbb
js
int3
cmpsb
add
movsb
pop
ds
shrb
push
jno
or
stos
shrb
movsl
xor
xchg
xor
mov
and
loop
insl
xchg
jno
dec
cwtl
out
inc
ljmp
je
pop
mov
lcall
lret
push
add
inc
mov
das
jnp
sub
fisubl
sub
jnp
sahf
mov
push
imul
mov
pop
sbb
fadds
mov
in
rclb
jmp
aad
pop
xor
out
std
lock
ret
jecxz
shlb
dec
repnz
pushf
pushf
xchg
adc
dec
loope
shrb
arpl
xchg
jae
cmp
nop
shrl
mov
push
test
xor
cwtl
cmp
cli
adc
mov
mov
mov
lret
fists
test
lret
or
scas
insl
mov
ds
mov
je
adc
in
pop
mov
dec
adc
jmp
icebp
and
pop
sbb
mov
out
negb
jl
sbb
jp
cmpsl
jb
testb
dec
jge
mov
insl
and
mov
test
test
rorb
lret
imul
sub
inc
imul
mov
sahf
mov
sbb
jecxz
cmp
aam
js
mov
sbb
andb
lea
xchg
adc
mov
ljmp
push
add
add
ret
and
rcrl
dec
outsb
iret
out
out
push
xlat
cltd
imul
and
imulb
xor
iret
sub
daa
out
scas
jmp
arpl
mov
sub
negl
inc
xor
cmp
mov
inc
mov
mov
add
loope
std
rcr
mov
jno
mov
repnz
jae
push
lret
popf
dec
mov
cli
jb
xchg
in
ret
push
adc
gs
mov
shrb
xorb
mov
xchg
outsl
aam
scas
je
mov
pushf
mov
scas
jbe
dec
inc
test
sbb
lock
das
ret
out
or
cmp
dec
mov
lods
xor
les
int3
shrl
push
scas
bound
outsl
arpl
pop
xor
xlat
sbb
or
loop
cwtl
dec
addr16
mov
sub
xchg
cmp
cmp
inc
xor
roll
fsubs
jae
bound
jbe
repnz
mov
pusha
arpl
push
mov
ret
outsb
aad
sbb
jmp
ss
loop
mov
and
mov
rcl
mov
xchg
sbb
jne
imul
fisubs
push
in
cmp
mull
addr16
outsb
mov
ljmp
jge
scas
xchg
mov
fs
adc
dec
adc
dec
rclb
int
mov
adc
add
or
jg
repnz
sub
mov
cmp
add
xchg
jg
pop
je
and
out
lret
push
xchg
push
jge
lret
ret
and
adc
mov
enter
pushl
cmpb
mov
sahf
push
adc
pop
nop
xor
push
jg
push
ds
mov
mov
jle
movsl
mov
push
outsb
mov
mov
imul
std
inc
in
inc
out
mov
loop
incb
mov
arpl
mov
ja
das
in
ret
scas
es
sbb
xrelease
xor
sub
fadds
dec
pop
repnz
mov
mov
mov
xchg
push
lret
jmp
xlat
or
iret
mov
lods
and
xchg
dec
jae
sub
aad
push
movl
push
xor
sub
cmp
inc
sbbl
pop
into
inc
dec
jno
xor
lods
mov
or
into
mov
inc
adc
xor
rcrl
add
cld
mov
pop
pop
pop
test
test
inc
sbb
ljmp
mov
lods
loope
scas
pusha
mov
adc
sbb
mov
pop
add
cmp
daa
idivl
xchg
dec
or
loopne
jae
xor
xor
xor
jmp
fwait
rolb
cwtl
cmpsb
lock
iret
in
sbb
xor
insb
xor
jp
push
negl
push
hlt
test
add
je
in
insl
and
push
lods
fcmove
or
data16
fdiv
aam
jge
arpl
fs
jbe
fists
mov
xlat
into
jecxz
imul
scas
in
or
iret
xor
xchg
push
sahf
sub
mov
xchg
xchg
insb
and
or
xor
inc
and
or
das
mov
lods
mov
movsl
or
loop
bound
ljmp
push
int3
test
xchg
sbb
scas
andb
mov
arpl
dec
in
jmp
mov
cmp
and
fdivl
xor
ljmp
push
mov
sahf
pop
leave
scas
add
pop
adc
inc
mov
add
out
or
mov
pop
mov
sti
mov
flds
adc
lret
aas
jecxz
int
cmp
lods
inc
das
lret
ljmp
addl
cli
aad
xchg
xchg
adc
push
mov
mov
mov
test
data16
mov
xlat
fs
mov
sbb
jmp
or
imul
jae
int3
sahf
sub
push
jge
sbb
bound
cltd
lods
cmp
scas
fnstcw
dec
xchg
popa
xor
push
fisttpl
mov
iret
dec
repz
mov
xchg
cmp
and
sub
mov
hlt
imul
fsubr
rcrb
sbb
push
pop
mov
mov
mov
sbb
pushf
cmp
sub
mov
out
add
xchg
pop
add
scas
aad
aam
or
jbe
aaa
push
into
js
push
jae
xlat
arpl
push
dec
jne
jns
hlt
ljmp
ljmp
mov
lahf
push
hlt
xor
pop
repnz
arpl
lock
stos
push
cmp
fidivl
jg
mov
xor
je
sahf
cmp
inc
rcr
mov
dec
cmp
and
popf
pop
outsb
cmp
je
sarl
mov
dec
inc
push
inc
push
pop
sarb
sbb
xorl
pop
sub
nop
mov
sbb
das
call
aad
add
icebp
enter
or
mov
sbb
mov
ret
pop
adc
add
out
jmp
pop
data16
fdivp
nop
jns
inc
fs
arpl
stc
or
push
decl
pop
lods
ja
mov
daa
rcrb
mov
push
mov
lods
sub
jo
push
xchg
sbb
inc
push
mov
movsl
pop
testb
or
sbb
xchg
fdivs
clc
mov
shl
iret
nop
in
rorl
sub
ljmp
pop
inc
loopne
in
js
mov
insb
fcomp
fisubrl
out
sub
cmpsl
pop
push
faddl
negl
incb
pop
cwtl
push
rep
mov
push
xor
adc
add
mov
and
in
mov
loop
rorb
sbb
jle
ret
xchg
ret
mov
jns
push
out
mov
mov
notb
ret
xchg
sbb
out
push
jecxz
jnp
addr16
mov
push
jae
inc
sub
sub
repnz
stc
divb
push
mov
mov
xlat
das
imul
dec
xor
push
sub
jge
stc
mov
imul
imul
push
js
outsl
insl
in
jge
aas
xor
lret
mov
test
jae
fadd
mov
adc
jle
mov
mov
mov
xorb
xor
mov
iret
adc
xchg
jae
add
cmp
xor
and
sbb
js
into
leave
pop
repz
arpl
loop
push
mov
mov
dec
cmp
ss
mov
repnz
jno
push
test
cmpl
imul
add
lock
out
add
shll
cmpl
sub
ret
out
mov
cltd
xchg
pop
adc
xlat
das
insb
enter
out
in
pop
inc
stos
test
xchg
sbb
data16
xchg
test
aaa
inc
xlat
out
jnp
xchg
sbb
pop
sub
js
adc
mov
in
sbb
lgs
popf
jno
inc
daa
aad
ds
push
fs
test
pop
mov
mov
pop
push
sahf
aad
mov
push
pop
push
xchg
xor
dec
in
das
test
out
cmp
pop
mov
pop
cmp
lahf
ljmp
ds
jmp
outsb
xor
add
test
mov
sub
jle
inc
xor
cli
ljmp
arpl
mov
lods
in
push
sbb
scas
sbb
pusha
test
fs
xchg
mov
repnz
xlat
pop
test
mov
out
push
push
jbe
xor
repnz
sbbb
inc
js
outsl
jmp
pop
shrb
in
jbe
mov
out
push
shl
cmp
xlat
repz
subl
dec
loop
dec
cmp
cmp
jns
shrb
iret
mov
movsb
out
ret
in
lock
sbb
cli
ljmp
mov
orb
mov
xor
mov
dec
push
jle
adc
or
add
int
sub
loopne
imul
and
push
dec
add
xchg
movsl
cmp
test
jno
ljmp
in
xchg
shrb
gs
jbe
mulb
jg
movsb
sbb
int
sahf
add
jae
pop
mov
push
xchg
add
in
repnz
push
lods
dec
jg
idivl
movsl
mov
xor
lods
dec
bswap
push
push
jge
dec
pop
notl
testb
imul
mov
pop
push
sarb
push
sahf
add
ljmp
jecxz
mov
ficoms
pop
xor
out
out
and
mov
subl
sbb
xor
aad
mov
loop
mov
divl
xchg
addb
imul
pop
repz
lret
decb
lock
imul
cmp
clc
dec
inc
jl
push
xchg
pop
fdivr
rep
ljmp
mov
pop
lcall
into
lea
fistpl
dec
mov
out
pop
adc
lock
iret
cmpl
loope
shlb
or
loopne
push
push
imul
mov
xor
jo
fnsave
pop
cmp
jle
mov
call
or
inc
int3
push
les
add
xchg
adc
sbb
addr16
mov
out
sti
jge
lds
ror
mov
jb
cld
shll
xchg
aad
out
push
arpl
jmp
loop
jae,pt
insl
aaa
sbb
dec
xchg
xchg
test
mov
popa
stos
push
out
jae
mov
xchg
sbb
inc
pushf
inc
imul
out
add
push
add
mov
aam
push
sbb
in
lods
test
xor
jno
lea
sahf
add
xchg
dec
lret
lock
xchg
adc
dec
cmp
inc
pop
loop
jg
hlt
adc
push
mov
pop
rol
imulb
rorl
mov
push
push
emms
nop
mov
xor
loope
icebp
cmp
loop
adcl
add
repnz
ljmp
lcall
pop
mov
mov
in
mov
push
xlat
repz
dec
push
xchg
fildl
test
and
mov
xchg
mov
hlt
test
je
mov
cmpsl
jp
gs
imul
jmp
pop
jno
adc
xor
push
xor
in
mov
cmpsl
insl
jno
ljmp
inc
adc
mov
or
cld
sarl
mov
pop
sar
aas
dec
in
je
ret
in
shll
inc
imul
jp
sub
fs
cld
mov
aas
iret
fucompp
pop
push
gs
mov
insb
sbb
add
aam
mov
dec
mov
mov
pop
mov
imul
xor
shlb
or
push
add
xchg
dec
dec
jo
shrb
mov
notl
rcl
stc
mov
mov
add
jae
mov
mov
iret
imul
int
cmpsl
sahf
sbb
jno
mov
sub
xchg
mov
cmp
xchg
jnp
iret
jg
jbe
in
push
sahf
mov
stos
pop
js
jno
sub
jb
mov
adc
test
stc
mov
mov
pushf
adc
jle
hlt
mull
xchg
std
rcll
scas
fcomi
mov
test
cs
sub
mov
int3
add
fs
scas
loop
adc
shlb
into
adc
lds
mov
mov
pop
pop
inc
test
fsub
lds
xchg
mov
in
scas
cld
scas
jmp
ljmp
add
cmp
dec
hlt
mov
bound
pushf
mov
xorl
xchg
sahf
mov
cmp
xchg
adc
push
and
sbb
mov
rcrb
cmp
in
testl
mov
icebp
les
add
adc
xor
pop
cwtl
inc
in
popa
or
mov
sahf
mov
xor
mov
xchg
call
jb
ret
xor
fwait
dec
ret
mov
mov
xor
je
push
lahf
or
xchg
sbb
add
cs
out
push
dec
cli
mov
push
pop
dec
leave
xchg
js
push
in
xor
out
add
shlb
shl
inc
imull
adc
sbb
insl
xor
pushl
xor
loope
adc
out
mov
mov
nop
fiadds
push
outsb
pop
jecxz
outsl
loop
mov
out
dec
adc
js
stc
in
inc
jmp
imul
icebp
jae
hlt
xlat
loop
outsb
add
lods
aas
lahf
int
popa
jecxz
test
cmpb
cs
repnz
lock
paddsw
mov
ljmp
in
dec
scas
ja
push
negb
cltd
in
mov
push
sbb
test
rorl
sbb
lods
loope
xchg
loopne
je
jbe
mov
dec
lock
mov
push
hlt
mov
xor
ss
xor
out
mov
push
cmp
jmp
dec
sub
push
cmpsl
sbb
xor
test
jge
pop
mov
divb
mov
pop
xor
or
jmp
loop
je
xor
xchg
pop
lock
call
mull
pop
lret
sbb
cmp
lds
pop
jge
cmp
loope
in
mov
mov
adc
push
fidivl
and
pop
arpl
mov
cmp
cwtl
mov
inc
cmc
call
fs
in
jnp
jo
js
jecxz
int3
je
cltd
insl
inc
sbb
mov
testw
sbb
scas
outsl
push
pop
and
adc
push
cmp
push
into
dec
orb
loope
jne
cs
call
push
ds
loopne
fld
jnp
pop
aad
lcall
shl
sahf
popa
or
xchg
or
in
insl
cmp
test
add
clc
xlat
mov
pushw
frstor
inc
outsl
stos
xchg
out
cmp
mov
fldcw
loop
imul
add
push
dec
ja
xor
xchg
jae
sub
les
int
arpl
sbb
mov
imul
repz
pop
jge
jbe
loop
mov
rcr
adc
movsl
testl
nop
lret
loop
pop
fs
pop
dec
movsb
scas
scas
into
sbb
cmp
mov
pop
and
push
inc
clc
mov
or
vmwrite
push
cwtl
xchg
insb
jns
xor
xchg
mov
cmp
jmp
pop
sub
gs
mov
mov
cmc
or
adc
mov
leavew
into
or
xchg
mov
stos
cmpsb
cmp
mov
call
sti
add
adc
xchg
jmp
cmp
xor
scas
in
stos
xor
mov
mov
xchg
xchg
nop
xlat
and
out
sahf
mov
xor
data16
es
pandn
xchg
dec
pop
mov
mov
pop
stos
roll
arpl
cli
add
pop
mov
mov
sub
sbb
dec
push
shrb
add
push
xor
sub
mov
jg
pop
mov
fs
cmpb
das
insb
cwtl
lret
cwtl
sbb
jp
imul
add
ss
or
popa
scas
insb
xor
mov
dec
test
sarl
push
mov
push
xlat
push
xlat
sbb
imul
dec
inc
push
into
or
shll
loop
sarl
jns
pop
cmp
mov
sti
adc
mov
jmp
dec
int3
xor
cmp
push
xchg
xor
out
arpl
jp
mov
xchg
ret
rorl
mov
adc
pop
mov
loop
and
mov
shll
enter
xor
or
test
lods
addr16
mov
pop
int3
leave
mov
das
aas
push
sahf
mov
int
stc
sti
fcompl
sbb
imul
pop
lret
pop
test
jg
in
or
repz
clc
das
icebp
imul
je
loop
mov
fwait
sub
daa
fcmovu
add
adc
lcall
clc
inc
cmp
pop
pushf
arpl
sub
in
sbb
loop
push
ror
pop
iret
or
rolb
sbb
xor
test
fdivrl
sub
pusha
daa
push
xlat
ljmp
sub
cmp
add
fsubrs
cmpb
xchg
push
add
adc
jbe
sysenter
cld
arpl
inc
mov
aam
mov
jae
notb
adc
je
fucomi
aaa
es
or
icebp
dec
cmp
push
mov
mov
jp
fprem
dec
aad
push
xchg
outsl
cmp
or
adc
rcrb
outsb
mov
fnstcw
loope
sub
call
cmpl
cltd
dec
dec
sub
mov
push
mov
pop
mov
sbb
add
icebp
sub
sub
popf
sahf
dec
pop
lods
cmp
andl
jmp
xchg
aas
add
movsb
aaa
adc
adc
cwtl
aam
loope
jae
sub
icebp
mov
jo
xchg
bound
mov
push
test
xchg
xor
push
jg
xor
je
in
stc
and
jmp
xchg
into
mov
stos
push
je
inc
arpl
rclb
scas
inc
push
sbb
xor
jno
repnz
jae
roll
js
roll
scas
mov
lock
fdivl
fs
lods
push
jo
setns
pushf
xchg
lock
aam
mov
enter
or
shrl
cs
sbb
ret
lods
scas
jbe
add
hlt
jae
hlt
out
pop
mov
mov
xlat
jecxz
outsb
push
push
mov
jge
pop
push
imul
push
fcmovbe
xchg
pop
lods
fdivrl
sbb
rcrl
ret
popa
ret
mov
push
dec
pop
xor
or
push
push
sub
out
mov
cmpsl
pop
das
xor
ds
fsubrs
pop
and
jno
scas
mov
in
out
test
sbb
nop
fidivl
es
adc
sbb
xchg
jb
xor
mov
push
jo
rol
mov
cmc
and
inc
push
add
outsb
shr
add
jno
mov
inc
mov
push
fisttps
mov
movsl
pop
movsl
clc
loopne
or
andb
mov
sbb
sub
cmp
ret
adc
je
andps
xchg
mov
repz
lds
push
testb
out
scas
out
into
in
jo
fdivrl
fiadds
adc
xlat
outsl
cmpsl
and
fidivl
loop
bound
push
shrl
arpl
or
jns
imul
jle
les
stos
xor
xchg
das
insl
add
das
hlt
ljmp
arpl
push
jns
inc
adc
dec
pop
dec
inc
hlt
in
add
into
sub
icebp
stos
fnstenv
jp
lock
fistl
in
cmp
lods
loope
psubusw
push
xor
fildll
mov
mov
std
sbb
jb
push
sarb
std
push
test
in
push
pop
pop
inc
xor
dec
fldcw
push
aad
mov
lar
jns
hlt
xchg
mov
in
sahf
stc
arpl
sbb
int3
xor
ds
xor
fldcw
push
pop
jl
or
push
mov
inc
sti
jb
ret
cld
mov
xlat
and
jne
jg
dec
add
push
jmp
movsb
jg
adc
nop
arpl
in
pop
mov
inc
fstpt
shl
lods
xchg
push
mov
xchg
loope
stos
inc
dec
shlb
mov
insb
and
je
xchg
loop
fnstenv
mov
test
cwtl
mov
adc
xchg
cmp
pop
dec
mov
in
sbb
fwait
cmp
or
mov
nop
pop
pop
outsl
mov
stos
sbb
sub
rclb
lds
cltd
xor
sbb
xor
mov
popf
adc
push
imulb
aad
sbb
les
int
arpl
lods
stos
sbb
pop
adc
aaa
test
jne
push
rolb
into
dec
xchg
int3
jge
dec
shlb
or
or
mov
incb
in
imul
inc
jns
mov
and
push
xchg
pop
push
daa
bound
pop
aad
fldcw
xlat
jns
insl
inc
ficoml
in
cmpsl
f2xm1
vcvttps2dq
push
fstpt
dec
cmp
js
inc
out
sub
push
xchg
pop
jno
dec
add
cltd
and
pop
lock
sahf
bound
xchg
jbe
dec
cmp
ss
inc
mov
loop
ret
addr16
mov
or
movsb
jecxz
lret
xchg
push
adc
push
cmp
in
imul
fiaddl
mov
shll
jecxz
jno
popa
jmp
loopne
mov
sarb
sub
mov
cltd
mov
mov
divb
out
lock
xor
notl
mov
inc
imul
in
into
in
dec
or
fstps
push
jl
lcall
mov
lea
test
aas
xchg
lret
mov
std
jp
pop
orl
insl
adc
jmp
sub
loop
dec
fld
and
popa
movsl
xchg
xchg
sbb
cmp
icebp
dec
sarb
dec
pop
stos
orl
imul
mov
ljmp
push
js
movsb
mov
xor
stc
shll
sbb
ljmp
in
repz
arpl
mov
out
pop
mul
dec
xchg
nop
sub
jno
aam
aaa
lods
inc
fnstcw
loopne
dec
imull
fdivs
sbb
inc
stos
pop
jb
into
jnp
and
out
pop
les
push
cmp
and
and
jmp
push
fldenv
lcall
jmp
cs
addr16
xchg
cmpl
je
in
sub
cli
and
mov
mov
lods
ja
dec
je
arpl
xchg
test
out
xchg
mov
jno
lret
lcall
fbstp
xor
pop
mov
sbb
inc
push
or
pop
jae
xchg
inc
dec
test
xchg
xchg
add
cmp
mov
pop
jmp
xchg
pop
imull
arpl
mov
add
cmc
inc
mov
cmp
push
pop
xchg
arpl
shll
sub
shrl
out
mov
adc
pushf
fsubrs
cmp
dec
lock
sbb
mov
push
and
fcmove
mov
repz
mov
pushf
adc
sbb
outsl
mov
sub
jmp
in
dec
call
mov
nop
mov
hlt
push
daa
push
lds
mov
mov
hlt
test
loop
arpl
cwtl
stos
mov
dec
jp
add
aas
outsb
shl
fisttpll
insb
pop
or
fwait
leave
add
outsb
mov
pop
xchg
mov
fidivrl
inc
imul
cli
arpl
mov
push
dec
cli
mov
mov
into
arpl
gs
outsl
adcb
out
mov
imul
fiadds
inc
ret
add
and
rcrb
nop
mov
ss
outsl
mov
ljmp
in
xorb
movsb
and
xlat
mov
dec
cmpsb
cmp
aam
xchg
cmp
arpl
xor
cmp
inc
je
mov
popf
test
push
mov
lcall
inc
loop
mov
adc
mov
cmpsb
addr16
push
jecxz
js
mov
add
xor
aam
sbb
push
sti
xor
scas
jns
std
push
pop
mov
xor
nop
outsb
adc
movsb
ljmp
mov
in
jg
das
rcll
int3
loop
mov
ret
mov
leave
xchg
out
in
dec
adc
pop
sbb
inc
stos
and
popf
test
ljmp
in
or
int3
sub
out
jecxz
jp
scas
push
inc
sub
int3
push
dec
ja
cmp
mov
jecxz
xchg
ret
pop
fs
add
je
jmp
popl
loop
xchg
cmp
sub
mov
xchg
loope
shlb
aaa
pop
aam
dec
andb
xchg
je
js
fisubs
mov
shr
push
sbb
sub
xchg
push
insl
mov
inc
lock
das
arpl
mov
dec
scas
cmp
into
push
cltd
pop
jbe
pop
pushf
xor
mov
enter
loop
mov
fwait
dec
lock
cltd
in
mov
int
movsb
shll
sahf
int
stos
inc
cs
pop
jae
shr
xchg
inc
ffreep
in
shrl
insl
cli
ret
shl
popf
mov
inc
xchg
stos
rcrl
inc
scas
jp
scas
jmp
iret
push
fistpl
jb
inc
dec
clc
js
int3
xchg
fincstp
xor
inc
xor
jl
jmp
insl
popa
inc
bound
in
in
jae
lahf
add
stc
test
stc
dec
out
sbbb
adc
dec
mov
xor
fidivrs
je
jo
ret
movsl
xor
mov
xchg
dec
cwtl
aas
movsl
fs
xchg
pop
das
mov
outsl
inc
add
out
add
loopne
test
addr16
push
or
jo
inc
stos
xlat
shll
sbb
or
cmp
mov
add
loopne
push
loop
stos
scas
jge
ss
xor
out
sub
sub
repnz
in
cmp
out
mov
dec
fwait
add
call
xchg
lock
inc
popf
mov
xor
stos
xchg
repnz
out
pop
ss
mov
gs
xor
mov
inc
xchg
inc
sub
mov
mov
cmpsb
lret
xor
jno
cmp
sub
in
or
stc
lds
leave
sbb
scas
das
frstor
add
lock
orl
lea
adc
orb
notl
mov
roll
lret
cmp
int
jns
mov
js
or
rcr
loope
cmp
jmp
and
jae
ds
ja
imul
scas
dec
notb
jmp
insl
adc
ds
je
in
das
mov
loopne
push
mov
loopne
push
dec
mov
xor
and
xor
loop
out
out
xor
cmp
sbb
inc
ljmp
push
movsl
mov
dec
sub
jae
mov
fnstsw
jmp
inc
sbb
lahf
pop
cmp
push
addl
push
popa
out
xchg
sbb
lret
rcrl
dec
mov
xchg
adc
xor
xchg
or
add
lcall
arpl
jne
arpl
pop
jne
or
lcall
or
dec
cmp
adc
iret
sub
cli
jmp
pop
arpl
in
cmpsl
outsb
push
pop
adc
add
inc
popf
xor
aad
loopne
jno
mov
dec
cltd
das
fwait
pop
push
lds
jb
xchg
mov
xor
adc
in
scas
fisubrl
dec
shll
add
stc
mov
shl
movaps
jge
hlt
cmp
mov
mov
ljmp
inc
add
nop
leave
cmp
add
cmp
jno
sahf
cwtl
arpl
int3
loopne
sbb
lret
js
dec
or
mov
sub
imul
lock
push
imul
push
popw
leave
js
sbb
mul
mov
adc
icebp
cltd
and
shll
cmp
pop
xor
mov
test
je
sbb
in
push
aam
loopne
jle
mov
lods
dec
add
in
loop
sbb
stc
mov
lds
jmp
arpl
pop
int3
xor
dec
dec
pop
sub
es
cs
jb
loop
pop
cmp
popa
imul
cmc
pop
cwtl
xor
mov
xor
xor
js
mov
loopne
scas
mov
data16
or
mov
adc
mov
arpl
rcll
mov
into
hlt
int
sbb
lahf
mov
callw
lcall
leave
push
xchg
ds
mov
inc
xor
xor
push
loopne
iret
mov
mov
lods
bound
fcoml
dec
fwait
or
ja
dec
xor
test
mov
xlat
movb
xor
fldenv
xor
xor
pushf
stos
out
popa
jns
inc
pushf
mov
pop
xchg
lds
or
push
xchg
xor
call
cltd
stos
insb
ss
in
cmp
stos
popf
lret
js
nop
cmp
xor
adc
xor
push
lods
jl
push
jg
lock
inc
and
mov
int3
adcb
jge
push
stos
adc
movsl
ljmp
push
mov
pop
lock
scas
jnp
rorb
fistps
mov
xchg
bound
sbb
jp
stos
dec
fincstp
xchg
push
insl
loopne
pop
or
pop
outsb
stos
jmp
sbb
mov
lods
mov
add
cmp
jmp
mov
pop
gs
daa
je
pop
imul
pop
lock
mov
sbb
test
mov
arpl
sahf
jmp
cmp
and
shlb
mov
scas
pop
push
ljmp
iret
imul
pop
jae
loop
aam
mov
xlat
in
adcb
jmp
neg
cli
jbe
xor
in
sbb
cmp
es
xor
and
adc
dec
jnp
mov
sahf
repnz
leave
adc
in
mov
stos
sahf
hlt
fnsave
push
lahf
mov
cli
arpl
sbb
fstps
test
into
iret
fsubs
mov
fldenv
and
inc
xor
jo
jo
lcall
jge
js
insb
js
out
hlt
scas
leave
out
push
jne
iret
fwait
imul
fwait
jo
loop
dec
test
repz
push
cmpl
iret
scas
sarl
xchg
dec
out
ljmp
popa
data16
fwait
mov
add
loopne
dec
in
adc
popf
add
cli
dec
ret
ja
roll
lds
adc
inc
push
inc
shlb
or
mov
fildll
mov
mov
inc
cmp
popa
cltd
fs
sahf
das
test
inc
loope
add
jp
loopne
lods
imul
je
repnz
gs
ljmp
insl
xor
pushf
imul
mov
sub
je
gs
popa
in
pop
sbb
dec
scas
mov
fs
jecxz
sbb
je
rorb
loop
lds
mov
xor
dec
mov
adc
mov
aaa
sub
popf
push
sarl
push
xor
and
notb
cli
pushl
mov
adc
pop
pop
aad
repz
out
test
cmp
jle
inc
inc
loope
aad
rolb
push
aad
mov
pusha
inc
test
das
clc
sarl
push
ljmp
cmpsb
xor
dec
arpl
sub
adc
js
push
lock
lcall
ljmp
dec
pop
add
or
cwtl
in
cmp
dec
lea
push
into
inc
ffreep
popf
cmp
movl
stos
cs
push
pop
xlat
jecxz
mov
pop
scas
and
ret
mov
rcrl
fs
sub
pop
hlt
push
dec
push
cmp
pop
in
test
cs
sub
inc
imul
idivl
outsb
lock
xor
lcall
push
iret
scas
js
add
outsb
outsl
mov
or
cmp
aaa
imul
imull
xor
mov
jnp
xor
lods
shrb
lcall
cmp
lret
xchg
loop
repnz
xchg
jmp
mov
nop
ret
inc
xlat
fisttps
in
pusha
and
cmp
mov
popf
fucomi
out
mov
repnz
clc
inc
psubw
jbe
fidivl
cmova
cltd
sbb
insb
notl
sahf
stos
lock
cmp
mov
sbb
subb
scas
push
sub
int3
push
jo
out
mov
lahf
ret
mul
call
test
sahf
and
adc
hlt
mov
loop
iret
ret
popa
addb
test
mov
xor
insb
add
sahf
ja
fwait
pop
inc
notb
mov
push
lea
dec
mov
aaa
addr16
iret
outsl
lock
data16
and
inc
xchg
inc
mov
inc
imulb
mov
jmp
xor
pop
push
js
in
je
sbb
loop
jge
dec
mov
xor
jmp
mov
lret
loope
mov
xchg
insb
pop
fisubl
rol
mov
subl
je
inc
ret
imul
outsl
jno
loopne
inc
jmp
sbb
mov
jg
dec
jmp
xchg
pop
rclb
mov
psrld
fucomip
aas
out
sti
in
adc
arpl
adc
mov
adc
push
adc
lret
mov
xchg
into
adcl
add
mov
fidivrs
pop
jp
inc
xchg
push
inc
push
testl
sti
mov
pop
jmp
fimull
or
addr16
sbb
sbb
popf
adc
push
push
pop
cwtl
dec
and
xchg
xchg
testb
lock
xor
dec
lods
setle
mov
add
call
mov
fwait
adc
loop
mov
stos
lcall
dec
add
jb
cli
jecxz
aaa
enter
dec
xchg
add
incl
push
pop
mov
dec
and
cld
add
into
jbe
aam
out
inc
or
test
into
dec
pop
hlt
mov
sbb
in
fnstenv
sbb
push
add
mul
sahf
outsb
xchg
decb
add
pop
sbb
aaa
pusha
popf
push
jg
movsl
cli
inc
pop
add
mov
xchg
jp
dec
in
add
xchg
sbb
ret
fwait
in
cld
add
daa
icebp
cmp
sub
pop
fbld
adc
iret
gs
pop
jmp
imul
push
outsl
sbb
orl
lods
fidivrs
scas
in
fildl
fldl
xor
repnz
aam
sahf
add
mov
push
sbb
loop
outsl
outsb
orl
cmp
daa
cld
dec
xor
mov
in
adc
sub
jp
push
cmc
imull
ljmp
arpl
mov
pushf
jne
adc
mov
cmc
jae
arpl
imul
inc
push
dec
int
pop
mov
push
aam
cltd
insb
sub
outsb
push
mov
mov
iret
aad
mov
xchg
out
call
lods
xchg
inc
xor
cltd
sbb
cmp
ret
adc
mov
fucomip
mov
fwait
mov
imul
aaa
adc
lods
mov
and
pusha
arpl
shlb
stos
movsb
jp
or
xor
inc
push
stc
enter
push
push
ljmp
and
sbb
pop
dec
adc
mov
subb
lcall
xchg
add
imul
stos
pop
inc
mov
mov
imul
jp
bound
sbbl
xchg
enter
shlb
popa
mov
mov
shr
xor
cmpsb
xchg
mulb
arpl
test
loop
jns
mov
lods
add
xor
loop
mov
push
jne
fwait
xchg
add
clc
sbb
adc
push
or
loopne
dec
inc
imulb
mov
je
mov
arpl
xchg
cmp
mov
cld
loop
gs
clc
lods
sub
push
mov
or
cli
jns
mov
inc
popf
jae
fisubs
test
pop
push
outsb
jmp
jns
sub
scas
cmp
popa
mov
mov
cmp
in
stc
int3
jmp
out
pop
pusha
ret
cmp
jae
push
sbb
mov
or
gs
mov
popa
out
je
add
ljmp
add
sbb
jns
add
xor
test
lods
fcomps
loop
lds
repz
add
and
mov
mov
push
mov
in
mov
imul
fstps
js
out
in
rcr
loopne
stos
mov
adc
jle
pop
fisttps
clc
jl
push
jmp
xlat
sahf
mov
mov
pushl
repnz
adc
ljmp
push
xchg
ds
nop
pop
iret
jecxz
xor
mov
lock
pop
dec
sbb
sahf
loope
add
push
mov
or
aam
sahf
dec
iret
jb
mov
loop
testb
rolb
xchg
mov
addr16
jbe
adc
mov
lods
out
popa
cltd
mov
xor
out
mov
imulb
popf
in
dec
dec
mov
outsb
rcll
std
inc
in
add
cmp
pop
pop
movsl
mov
aam
adc
aas
jno
aad
pop
lret
stos
repnz
xchg
je
add
fidivrl
xchg
pop
in
push
loopne
or
push
push
and
and
std
orl
imul
clc
rorb
or
dec
mov
sahf
mov
cltd
arpl
clc
sbb
movsl
loope
mov
fcomp
jg
mov
popf
jns
mov
je
dec
sbbb
jnp
push
add
negl
jmp
dec
pop
push
and
pop
adc
mov
sbb
sbb
jp
out
pusha
dec
fidivs
es
push
popa
fistps
out
mov
cmp
shlb
hlt
loop
lods
aam
clc
packsswb
repnz
jns
mov
fwait
dec
sbb
cmp
in
loope
or
jae
out
cmp
push
add
push
inc
lods
pushf
adc
ds
rcll
mov
loop
inc
outsl
lods
inc
imul
ret
loop
shrb
divl
xor
sbb
lahf
fnsave
addr16
xor
mov
cli
sbb
xchg
xchg
pop
jge
mov
jae
cwtl
xor
mov
arpl
cltd
repz
jg
or
xchg
or
add
insb
xchg
bound
or
fisttps
mov
or
push
mov
push
je
sahf
xchg
mov
into
loope
inc
dec
mov
mov
mov
add
int3
mov
xor
in
insl
or
imul
mov
pop
adc
je
add
imul
je
sub
mov
and
insl
push
int
sbb
jmp
xchg
mov
lret
dec
adc
clc
test
aaa
das
or
push
repnz
mull
push
lret
or
arpl
cmc
insl
popa
and
pushf
mov
jecxz
mov
arpl
ja
lea
js
fdivrl
notb
lret
xchg
aad
mov
scas
int
fwait
mov
inc
sti
push
ds
cwtl
sahf
mov
fstp
icebp
push
inc
loope
sbb
aad
cs
in
mov
movl
fstpl
fistpll
les
sub
cs
mov
into
xor
mov
pop
jmp
mov
mov
movhps
pop
jmp
faddl
fidivrl
cmp
mov
mov
scas
arpl
in
pop
in
pushf
pop
lods
aas
cmp
clc
xlat
inc
stc
mov
mov
hlt
imul
push
lret
jno
mov
pop
in
add
push
xchg
add
add
lcall
int3
rcll
cmpsl
test
sbb
out
into
imul
sahf
rorb
into
shl
inc
adc
aam
xlat
ds
popa
nop
mov
lods
outsb
jg
sbbb
xor
cmpsb
pop
rol
imul
shll
push
mov
scas
inc
mov
lods
fs
xor
shrl
adcb
fwait
rclb
fidivrl
into
add
scas
fcompl
ljmp
mov
popf
push
lcall
aam
add
pop
xchg
movsl
mov
leave
mov
lock
push
add
push
jp
je
popf
fmull
scas
dec
int
dec
adc
fld
imul
add
shrb
cld
pop
xor
notb
mov
mov
sub
xor
arpl
inc
stos
mov
mov
mov
inc
cmp
or
rcll
xchg
loop
andl
std
aaa
jne
out
mov
sub
in
adc
stc
loopne
imul
or
inc
rolb
xor
mov
les
ljmp
jg
in
loop
xchg
push
lret
adc
mov
mov
push
sub
dec
in
popf
jge
push
clc
mov
mov
add
jmp
ljmp
mov
cmp
pop
data16
mov
loop
mov
cwtl
mov
rcrl
xor
sbb
cmpsl
cwtl
stos
fdivs
cmp
ret
add
repnz
push
pop
xlat
push
sarb
mov
fsubp
or
loop
mov
xor
cmp
mov
scas
andb
stc
pop
in
aam
mov
fs
dec
popf
dec
jp
inc
mov
xchg
xor
int3
add
pusha
outsl
pop
xor
mov
mov
daa
rorb
jbe
in
jae
inc
test
mov
pop
rolb
mov
test
insl
push
lahf
dec
xorl
jle
push
stc
cwtl
jmp
shlb
mov
adc
xchg
push
pop
daa
xor
imul
jae
push
or
popa
inc
test
pop
xchg
fs
xor
scas
icebp
mov
pop
inc
adc
jecxz
add
mov
lret
shl
js
inc
jae
mov
cltd
xchg
jge
jp
pushf
pop
loop
adc
jnp
cmpsl
push
out
lea
sbb
and
int3
fsubrs
xor
mov
mov
call
cli
pop
ljmp
cli
mull
repnz
xor
lcall
mov
xor
pop
xchg
jne
push
jecxz
jno
mov
fisttpll
pop
adc
add
int
sahf
test
and
mov
jmp
dec
iret
mov
inc
cmc
fisttps
jae
jmp
jne
subb
icebp
in
shr
and
scas
arpl
sub
mov
mov
iret
mov
dec
call
int3
xchg
lds
sub
in
jmp
in
add
repnz
cltd
ud2
add
fwait
subl
pop
sub
mov
jae
and
xchg
or
out
in
dec
pusha
mov
insb
aaa
pop
out
lock
loopne
push
leave
xchg
jnp
push
popa
in
add
fbld
xchg
int3
out
dec
faddp
imul
add
test
bswap
pusha
jne
xor
in
hlt
mov
adc
sbb
fwait
dec
jle
cld
mov
jbe
inc
push
ljmp
push
push
imul
jbe
push
fnstenv
lahf
jmp
pushf
addb
and
mov
xor
xchg
jo
loop
push
adc
dec
mov
mov
repnz
sbb
into
xchg
cmpsl
cs
das
cmp
mov
push
cwtl
fisubs
das
dec
cs
imul
bound
jb
pop
insb
adcb
pusha
les
lods
pop
js
ljmp
xchg
mov
or
jbe
and
mov
dec
xchg
push
lods
pop
bsr
sub
arpl
loop
pop
out
arpl
xchg
or
adc
test
mov
out
add
sbb
lret
xchg
pop
daa
push
mov
mov
addr16
rol
pop
mov
cmp
push
movsl
jnp
fnstcw
sub
xchg
and
xchg
sbb
push
notb
in
mov
addr16
shll
cld
adc
pop
jecxz
inc
test
cmc
xchg
cmp
and
loop
test
jg
and
subl
jge
jne
jb
rcrl
xor
push
idiv
leave
std
jl
mov
mov
push
or
outsl
test
sbb
cmp
idiv
out
pop
add
xchg
fs
push
mov
mov
add
mov
bnd
repnz
lock
jo
mov
push
push
xchg
mov
call
call
aas
sahf
cld
hlt
lret
arpl
ja
notb
sahf
mov
inc
icebp
or
nop
imul
mov
out
mov
data16
inc
mov
in
lcall
pop
and
mov
xchg
addr16
ret
test
xor
jno
repnz
mov
add
xor
mov
mov
mov
sti
mov
xchg
ret
aas
fidivl
cmpsb
mov
inc
cmpsl
xor
push
ret
fcmovb
cmpb
clc
mov
mov
nop
movsb
in
shrb
aaa
mov
hlt
fstpt
mov
adc
pop
call
mov
mov
rolb
mov
mov
jne
les
ret
push
mov
xchg
scas
stos
repnz
shr
jg
sbbb
sarb
sahf
lock
xor
ss
cltd
aaa
insb
mov
mov
mov
into
xchg
sbb
inc
arpl
lahf
flds
cmpsb
xchg
mov
rcll
mov
scas
rclb
sahf
jne
cli
jae
cwtl
xchg
mov
ljmp
test
mov
repnz
lock
or
fimull
int3
jae
add
dec
fucomi
testl
mov
sbb
mov
xchg
lret
or
sbb
in
into
mov
popa
mov
inc
inc
xlat
je
jo
sub
sub
fsubl
add
xor
mov
xchg
dec
sbbl
jp
das
pop
jmp
push
xor
inc
dec
add
mov
dec
test
aam
nop
mov
pushf
add
pop
cmp
or
inc
call
cltd
repz
jecxz
int3
inc
insl
xorl
arpl
xor
insl
jge
out
scas
push
push
das
jge
test
xor
arpl
xor
xor
xchg
mov
dec
popf
fdivp
arpl
rorb
xchg
pop
dec
add
adc
pop
mov
cltd
mov
mov
and
add
jmp
popa
outsl
mov
imul
ret
repnz
ret
xchg
ret
in
jle
imul
call
pop
cmp
jg
xchg
bound
push
pushf
out
int
sbb
or
sbb
xchg
cwtl
data16
pop
js
push
mov
mov
mov
mov
xor
loopne
mov
push
sbb
dec
push
pop
pop
mov
xlat
leave
test
mov
cli
setb
std
and
in
or
arpl
outsl
ds
mov
je
push
arpl
add
negl
insb
xchg
inc
or
inc
inc
mov
out
or
cmp
dec
es
inc
sbb
out
into
fidivl
mov
cltd
repnz
shl
mov
int3
adc
add
cmpb
loop
ljmp
jl
aam
sti
rorb
into
addr16
xor
int3
shrl
xlat
test
ss
es
push
pop
sub
imul
dec
in
push
scas
lock
push
xor
adc
dec
mov
fmuls
pop
lods
jns
or
out
ja
jnp
fs
stos
xchg
push
cltd
mov
lret
sbb
cmp
cmc
je
iret
xchg
jecxz
pop
cmp
sbb
inc
pop
das
xchg
loop
stos
cs
cld
push
stc
pop
das
sbb
jmp
mov
jg
rolb
lret
xchg
push
add
pop
xchg
pop
jno
adc
sahf
pop
push
or
mov
xchg
test
js
cmp
pop
loope
jno
out
lea
mov
mov
jne
imul
or
inc
sub
je
dec
pop
xchg
icebp
fnstsw
add
aam
out
imul
mov
sub
inc
xchg
xor
movsb
gs
fldenv
nop
bound
mov
pushf
inc
scas
loop
push
adc
imulb
mull
dec
in
inc
loop
jo,pn
imul
iret
cmp
jle
lock
lods
inc
xchg
leave
xchg
mov
inc
inc
cmpsl
shl
sbb
or
ret
jb
adc
lods
mov
xchg
xchg
ret
mov
sbb
xchg
je
sub
repz
push
scas
sbb
adc
lcall
out
fstpl
pusha
or
mov
rcr
push
dec
ficomps
insl
ret
jmp
mov
outsb
sti
pop
out
cmp
outsl
sbb
rolb
jmp
sbb
imul
xchg
je
jecxz
xchg
pop
pop
imul
lds
sbb
pop
arpl
rorb
icebp
dec
cli
sub
imul
out
shll
test
or
daa
mov
icebp
movsb
xchg
scas
pop
inc
mulb
sbb
add
jae
xlat
sub
or
stos
arpl
idivb
shl
mov
add
or
popa
in
mov
ljmp
add
or
dec
hlt
or
push
mov
cwtl
sahf
shl
jae
loop
dec
jnp
xchg
loopne
out
mov
add
jmp
xchg
sub
gs
imul
jnp
sub
repnz
cmp
jl
int
out
lock
in
lods
dec
adc
mov
xor
in
fs
mov
mov
aam
and
cmpsl
jb,pt
xor
sbb
xlat
mul
mov
lret
imul
sbbb
stc
mov
add
repnz
adc
mov
imul
cmp
sahf
or
dec
scas
push
dec
cwtl
jmp
mov
and
js
gs
mov
xor
adc
add
sbb
les
add
inc
mov
mov
leave
jecxz
sbb
adc
xchg
cmp
lahf
loope
xchg
jno
adc
imulb
out
xchg
out
cmp
imul
enter
stos
cmp
cmp
xor
mov
lea
movsb
dec
mov
loop
xchg
inc
mov
lods
sub
cld
out
xchg
inc
ret
dec
xor
test
dec
out
imul
fsubs
adc
sbb
add
mov
roll
sbb
out
andb
or
out
imul
jmp
dec
pop
or
sti
cs
mov
cmp
pop
cmp
fnstcw
sbb
cmp
pop
cmp
inc
dec
and
lock
mov
push
enter
ja
push
add
mov
cmpsl
fwait
sub
sahf
loop
out
mov
in
pop
inc
mov
int
or
sbb
cmp
test
hlt
shr
out
push
xchg
lock
mov
pop
mov
xor
imul
icebp
nop
je
in
dec
sub
push
or
xchg
sti
jmp
xor
lock
inc
mov
sarl
pminsw
xor
aaa
push
jg
push
arpl
jmp
test
loope
sbb
and
hlt
jbe
popa
and
mov
push
scas
xchg
ds
mov
pushf
push
pop
arpl
sub
xchg
add
fsubrl
pop
sti
sbb
mov
aas
cmp
sahf
pop
nop
xchg
xor
inc
sbb
push
das
push
insl
ds
aaa
ljmp
out
cmp
scas
in
mov
jne
jmp
jmp
xchg
cmc
dec
xor
mulb
mov
ds
icebp
stc
je
jo
push
sub
imul
clc
push
in
inc
mov
push
or
shr
pop
pop
roll
inc
cli
arpl
xor
push
rorl
aaa
sub
ljmp
jno
scas
imul
mov
lahf
mov
add
xlat
sbb
cmp
xor
pop
nop
imul
dec
movb
loop
sbb
popf
iret
cs
sbbb
les
xor
fnstenv
gs
adc
or
jnp
sbb
addl
out
pop
push
inc
xchg
arpl
das
cltd
call
push
sahf
sub
cmp
xor
jns
orl
cmp
loope
arpl
jo
sti
inc
iret
ja
mov
and
lahf
les
addr16
pop
fnstcw
push
imul
push
pop
divb
sbbb
pop
xor
ljmp
imul
cmp
xor
pop
mov
mov
sahf
and
sbb
jno
xor
mov
aaa
xor
mov
adc
xchg
xchg
fbld
push
dec
leave
push
sbb
sti
lock
stos
orl
sub
push
loop
or
int
or
jne
sub
dec
push
fisubs
imul
mov
mov
mov
cmc
scas
je
not
aaa
mov
mov
jge
jmp
das
push
loop
aad
xor
nop
test
push
push
gs
mov
clc
dec
mov
mov
movsl
push
aaa
das
inc
jge
adc
mov
pusha
xchg
adc
pop
insl
test
mov
pop
cmovge
outsb
xchg
xor
fdivl
addr16
sub
in
sbb
out
loop
xchg
cltd
pop
cli
je
pop
scas
mov
addr16
ljmp
mov
adc
aas
insb
stos
inc
repnz
xchg
or
or
mov
xor
jmp
adc
popf
sub
imul
cli
inc
pop
sar
pusha
mov
outsl
mov
arpl
cmpl
outsb
cmpsb
fistpll
xchg
mov
sbb
sbb
fwait
ljmp
into
xor
test
gs
xchg
in
sbb
and
imul
dec
jae
sahf
sbb
aad
call
xchg
cmp
xchg
mov
mov
pop
xor
sub
imul
adc
push
pop
xchg
xor
and
hlt
push
cltd
enter
nop
pop
dec
jb
loope
movsb
xor
lods
mov
add
push
movsb
nop
mov
dec
adc
mov
jnp
shll
sahf
cwtl
mov
mov
cwtl
cmp
xchg
lret
into
push
icebp
imul
cmpsl
mov
ficoms
ds
dec
das
loop
cmp
and
arpl
inc
dec
out
imul
into
mov
push
cmp
shll
pop
add
loope
cmp
xchg
iret
adcb
jecxz
in
ret
jno
cmp
outsl
xor
imul
addb
into
popa
filds
xchg
cmpsl
insb
mov
outsl
lods
je
push
lock
jge
nop
jecxz
push
repnz
dec
test
repnz
lods
add
dec
mov
xlat
push
out
jp
sahf
sbb
in
mov
repnz
aam
pop
enter
pop
cmpsb
jle
mov
imul
fisttpll
stc
out
push
popa
stc
or
push
not
fs
adc
mov
je
jnp
jmp
or
inc
scas
mov
in
cmp
mov
aad
lret
in
scas
insb
or
add
inc
fwait
int3
adcl
mov
push
mov
mov
xor
fsubs
mov
cmpsl
and
not
test
cmp
lock
inc
mov
mov
lea
push
sbb
mov
out
test
mulb
lods
push
mov
mov
fwait
xor
lahf
subl
push
pop
jg
mov
jae
xor
jmp
stos
leave
xchg
sarl
sbb
mov
loopne
adc
xor
out
xchg
push
inc
xchg
out
orb
iret
mov
pop
mov
xchg
lods
push
jl
ja
mov
add
inc
js
fnstenv
sbb
sub
mov
dec
push
push
push
jecxz
lock
int
jp
in
je
and
mov
mov
mov
mov
add
dec
fsubl
aaa
inc
pop
iret
xor
lods
cs
xor
pop
fs
add
lahf
jae
cwtl
or
lock
ret
xchg
cmp
xchg
adc
mov
inc
dec
pushf
dec
frstor
adc
pop
jo
mov
push
cwtl
lock
cmp
dec
inc
loop
rcr
cmp
cmpsb
and
mov
push
xchg
movsb
fs
iret
mov
shrb
fildl
fnstenv
std
fisttps
les
negb
in
push
adc
lea
aaa
shl
push
and
sbb
pusha
mov
push
ds
fidivs
arpl
repnz
pop
clts
popa
icebp
out
into
loop
jbe
call
xchg
ljmp
bnd
loop
sbb
push
test
data16
nop
test
popf
out
pop
adc
or
push
es
cmp
movsl
fimuls
test
sahf
fwait
lea
test
mov
mov
ret
int
ret
pop
cmc
sub
mov
add
lret
xchg
mov
sub
mov
rcl
sbbb
inc
lahf
lods
xor
imul
out
jmp
in
outsb
mov
test
xchg
mov
mov
in
pop
push
cmp
jo
jnp
daa
out
sahf
or
movsl
ficompl
lods
adc
pop
popf
frstor
cmp
fdivl
shll
pop
cwtl
pusha
pop
out
aad
cltd
sti
dec
pop
mul
mov
pop
mov
xchg
pop
fiadds
lods
cmpsb
aas
mov
xchg
das
mov
jae
ficomps
pop
fwait
lret
sbb
hlt
gs
shlb
push
loopne
inc
clc
testl
fmulp
hlt
jbe
push
jg
or
cmp
lret
mov
adc
jae
loope
mov
add
in
lock
aam
and
out
divb
mov
or
fisubrl
stc
xor
aaa
pop
mov
push
xlat
call
sbb
push
pop
dec
cmp
and
das
jp
je
arpl
mov
gs
es
xor
push
iret
and
lret
adc
loop
pop
sti
add
mov
push
out
ja
xor
lods
dec
jg
fisubrl
pop
popa
stos
idiv
gs
mov
cmp
adcl
imul
jb
pop
jle
dec
push
sbbl
jo
ljmp
mov
mov
cmpsb
push
sbb
mov
inc
jnp
popa
sub
insl
divl
sarb
jmp
cwtl
test
mov
xlat
je
cltd
call
rolb
mov
or
dec
into
mov
imul
xchg
add
cltd
push
inc
insb
in
sahf
add
pop
cmp
adc
sbb
mov
sahf
test
adc
lret
lea
mov
dec
call
aam
shlb
xor
inc
cs
and
mov
mov
rclb
push
das
rolb
xor
mov
mov
push
jmp
mov
inc
mov
xchg
jae
loop
sbb
xor
xor
xchg
movl
xchg
jl
sbb
xor
inc
sbb
icebp
add
pop
pop
shll
adc
inc
js
scas
cmp
into
push
in
ja
in
cmc
inc
test
inc
int
fsubrl
sti
out
xor
cmpsb
mov
int
imul
mov
icebp
sub
sub
mov
pop
in
nop
sarb
addr16
sarb
inc
fldcw
cwtl
mov
push
dec
fwait
mov
sbb
mov
frstor
into
xchg
arpl
fimuls
das
jmp
push
mov
scas
and
outsl
cmp
inc
xchg
add
hlt
lcall
sbb
incb
and
cmp
mov
dec
fnstcw
enter
mov
popf
xchg
xchg
dec
mov
in
mov
outsl
or
jmp
aaa
es
mov
jmp
jbe
out
push
mov
pop
fwait
dec
in
inc
xor
jb
add
lock
je
aam
xchg
dec
leave
clc
cmp
and
lods
lahf
lahf
lahf
push
sub
lret
lret
sub
scas
xchg
dec
xchg
scas
ljmp
xorl
add
push
stos
mov
lret
fucomip
jbe
fcmovb
xor
pop
sti
pop
outsl
jecxz
das
mov
adc
xor
hlt
inc
adc
adc
and
fwait
lret
in
jmp
sub
imul
dec
testl
dec
cmp
sahf
push
mov
cmp
add
or
add
jmp
inc
sbb
js
arpl
push
pop
add
mov
jae
pop
pop
cmove
pop
push
dec
lret
jae
sub
int
negb
lret
mov
jecxz
js
dec
xor
push
lock
insl
call
fldt
add
mov
scas
mov
xchg
mov
fdivs
int
hlt
leave
push
xchg
fisubl
xor
fdivs
jle
in
mov
xchg
xlat
sbb
dec
xor
pushf
stos
out
pop
mov
mov
sahf
sub
xchg
outsl
cmc
aam
pushf
mov
testl
in
cld
pop
pop
fdecstp
adc
adc
jbe
dec
add
nop
push
test
mul
or
js
and
and
cli
call
es
cld
jae
lods
mov
ret
out
inc
rorb
scas
lock
cmp
or
jns
jbe
hlt
xor
js
lock
push
fwait
inc
push
sbb
jbe
inc
push
repnz
movsl
icebp
cs
jae
and
lods
mov
in
lock
icebp
divb
js
jge
test
sub
adc
out
cli
sahf
mov
cmp
fbld
pop
pop
mov
out
push
outsb
push
sub
add
xlat
arpl
mov
int3
jbe
mov
inc
mov
sub
mov
enter
and
arpl
push
fimuls
rcr
fdivp
repnz
lods
xchg
scas
jne
lock
cli
jo
out
adc
mov
pop
rclb
out
js
pop
ja
jbe
outsl
inc
negl
mov
cmpsl
mov
out
pop
lret
xor
adc
mov
rolb
sub
les
nop
lds
repz
xor
sub
sar
mov
stos
xor
fimuls
sub
pop
lock
repnz
out
stc
inc
and
lock
sub
jbe
mov
cmp
scas
push
out
mov
ds
lods
xchg
repnz
dec
lock
push
inc
gs
out
dec
in
cmp
lret
jo
jo
xchg
nop
push
cmc
js
sub
out
jb
dec
out
jne
sbb
add
cmp
repnz
lret
outsl
adc
leave
pop
imul
inc
push
rorb
lds
sti
push
mov
mov
jae
ds
cli
cmp
push
shl
dec
arpl
scas
in
push
scas
and
xchg
idiv
mov
sahf
out
mul
adc
push
imull
int
mov
jge
add
cmc
repnz
stos
js
out
je
paddd
xlat
lret
into
inc
stc
push
jo
xchg
rolb
mov
outsl
aaa
cmc
cmp
lret
out
scas
js
lods
fwait
or
jb
dec
mov
and
out
icebp
jl
das
mov
arpl
inc
loop
into
inc
fldenv
mov
lock
cltd
mov
shrb
adc
outsl
push
sbbl
adc
loope
sub
xor
mov
and
scas
mov
or
pop
jge
sahf
sub
xchg
imul
cli
pop
int
or
or
mov
xchg
xor
inc
ret
out
push
out
cli
mov
inc
push
dec
aad
jp
out
sub
xor
xchg
sub
outsl
and
shr
nop
stos
scas
mull
mov
lods
dec
mov
cmc
sub
jg
mov
xor
pop
movsb
mov
out
loop
lcall
sbb
adc
adc
arpl
cs
out
inc
rorl
or
icebp
aam
pop
addr16
in
push
scas
cmp
jp
push
inc
push
sbb
mov
push
lock
push
jo
leave
xorl
inc
push
repnz
popa
sub
jae
jbe
mov
test
mov
hlt
lahf
push
test
aam
pusha
adc
movsb
out
divl
push
insb
and
incb
daa
and
mov
jmp
xchg
les
ja
fidivl
aaa
hlt
pusha
push
add
mov
mov
inc
cwtl
pop
and
das
es
jl
out
data16
repnz
popa
mov
aaa
mov
movb
outsl
mov
cmp
out
push
repnz
popf
sbb
dec
and
cmpsl
cmp
pop
xchg
mov
out
neg
jmp
lods
scas
sahf
daa
lock
cli
shrb
inc
xor
scas
ja
adc
mov
and
nop
lcall
ret
and
out
bound
fstps
cmpsb
or
test
lahf
es
adc
nop
sahf
inc
js
bswap
ljmp
jnp
or
stc
flds
enter
lcall
jae
or
imul
jecxz
je
into
inc
fdivl
push
xor
mov
loope
sub
push
loopne
dec
incb
inc
cmp
mov
adc
push
rorl
sti
dec
mov
testb
lods
cmc
cld
jecxz
adc
out
in
inc
xchg
dec
stos
mov
jbe
jp
inc
adc
inc
mov
or
cs
out
mov
rorl
insl
push
imul
pop
xor
scas
popa
lcall
imulb
ja
pushf
loope
add
sub
fsubs
movsl
add
lcall
out
mov
jno
divb
sti
outsl
jnp
or
stc
js
fsubrs
leave
into
add
orl
mov
jo
jns
clc
pop
and
pop
fimuls
pop
scas
ja
lock
xchg
or
mov
lahf
scas
push
hlt
addr16
sahf
push
add
dec
adc
sub
test
sarb
mov
jle
out
icebp
mov
js
fsub
lods
pop
gs
jno
into
sub
lock
into
js
cmp
addb
mov
jns
out
cmp
add
je
sbb
pushl
jo
sub
ds
repnz
clc
outsl
out
lcall
outsb
sub
jnp
pop
or
popa
and
cmp
negb
cmp
or
leave
cli
add
and
addb
ja
adc
lret
inc
jns
jae
dec
outsl
mov
jge
popa
mov
repnz
cld
stc
out
sti
rorb
shr
inc
aam
pop
jae
stc
cmp
loope
into
js
sbb
jbe
mov
lock
mov
xchg
xchg
hlt
sub
push
adc
loopne
sarl
icebp
scas
mov
xchg
jns
je
adc
fidivrl
inc
lea
mov
cs
stos
stos
out
scas
nop
lahf
mov
hlt
into
xor
bound
or
inc
mov
add
jle
cmp
out
and
cmp
jnp
fnsave
lret
mov
out
sbb
inc
neg
mov
outsl
cs
push
stos
nop
push
div
dec
cwtl
repnz
jp
nop
repz
out
out
popa
xor
out
inc
je
leave
fisubs
mov
icebp
adc
rorb
sbb
or
mov
addr16
push
xchg
xor
pop
xor
movsl
jp
scas
push
pop
push
das
js
out
pop
push
lock
out
mov
je
xchg
push
divl
add
pop
movb
pop
cs
lock
orps
xchg
pop
cmpsb
nop
dec
ret
repnz
mov
jb
mov
das
sbb
stos
shlb
test
fsubrl
movsl
xor
enter
loopne
cwtl
push
dec
stos
lock
mov
out
je
mov
into
idivl
rorl
nop
daa
xor
addr16
pop
or
or
rorb
jo
mov
mov
ret
aad
dec
xlat
pop
jmp
stc
std
mov
sbb
jbe
out
ficoml
inc
sub
roll
negb
lret
stos
js
or
and
cli
jo
in
mov
call
xor
add
ret
hlt
insb
pushf
std
sarb
out
pop
sbb
mov
cmpsb
or
pop
cli
xchg
and
pop
inc
and
subb
out
aam
mov
mov
std
inc
js
je
dec
mov
mov
inc
sbb
out
jbe
inc
cwtl
push
into
sbb
sub
popf
ret
jo
adc
js
movb
xchg
jo
das
fs
adc
test
xor
mov
dec
js
xchg
cmpsb
movsb
negb
ror
mov
das
jo
mov
js
out
js
pusha
add
jo
stos
vmovdqu
daa
or
call
xor
icebp
xchg
pop
ret
jg
add
enter
clc
out
and
pop
test
push
cli
rorb
idiv
jg
movsl
add
push
mov
sbb
mov
mov
mov
out
push
test
fwait
lcall
scas
dec
xlat
hlt
dec
dec
xchg
mov
cli
lcall
pusha
call
xchg
stos
cmpb
aam
cmp
mov
adc
fstpt
jb
je
imul
xchg
aaa
sbb
cs
ret
sub
movsb
lock
push
js
jp
mov
jo
addr16
cs
imul
xor
pop
mov
hlt
jl
ret
out
js
add
mov
into
mov
lahf
aam
cltd
repnz
cmpl
and
lock
add
mov
adc
cmpsl
add
pop
out
push
int
mov
mov
leave
loope
fwait
shl
jo
imul
pop
rolb
sbb
test
outsl
cmc
jns
lcall
xor
fldt
sahf
outsl
xchg
push
rclb
pop
sbb
jae
add
or
xor
cwtl
daa
inc
out
gs
loope
js
out
xchg
into
adc
addb
push
negb
jge
mov
push
into
xchg
outsl
and
sub
lds
outsl
mov
jmp
dec
ljmp
dec
jmp
shl
repnz
out
movsb
out
jae
mov
mov
std
xchg
andb
movsl
idiv
lcall
xchg
inc
lock
inc
push
jg
hlt
int
push
xchg
mov
push
mov
and
incb
xchg
cli
int
lret
cmp
mov
cmpsb
mov
arpl
fcomi
pop
mov
out
insl
xchg
data16
lret
orb
mov
nop
popa
scas
and
mov
sahf
test
push
jmp
popf
rorb
mov
jne
lea
mov
pop
inc
mov
mov
imull
jne
scas
add
dec
cmp
jnp
ret
push
push
and
aas
xchg
insb
cltd
add
mov
and
adc
mov
inc
outsb
js
js
out
pop
xchg
rorl
sti
fsubrl
xchg
push
pushf
fsubrp
sahf
imull
push
jmp
cltd
cld
in
ds
xchg
outsl
in
movlps
mov
into
insl
popa
mov
push
inc
pop
in
mov
jmp
icebp
mov
loop,pn
hlt
pop
js
mov
xchg
xor
js
cld
ss
xchg
xchg
pop
scas
add
icebp
loop
jmp
stos
adc
fstpt
xlat
hlt
mov
mov
shlb
adc
fiaddl
scas
dec
outsb
movsb
push
sbb
sahf
lods
add
jbe
outsl
insl
mov
in
hlt
sub
js
loope
push
jnp
scas
in
and
cmpsb
pop
mov
or
jp
stc
mov
sbb
out
add
ficoml
scas
jle
outsb
orl
ds
hlt
sub
jo
push
arpl
inc
sub
cmp
jmp
fldl
ljmp
ret
push
add
jb
mov
sbb
out
insl
xchg
and
inc
out
push
fcmove
scas
into
into
add
push
pushl
mov
cld
lods
xchg
js
ja
cli
fisubl
or
leave
js
push
add
cmp
mov
fnstsw
sbb
cmc
xchg
pop
mov
jmp
pop
mov
in
enter
push
push
mov
es
xor
outsl
insb
loope
lock
mov
dec
jb
fiaddl
adc
push
fnsave
cmp
and
repnz
inc
scas
fiadds
into
adc
div
sbb
inc
dec
xchg
lcall
outsl
jmp
jno
scas
fs
icebp
insl
in
fcomp
dec
rdpmc
and
js
scas
cli
jo
shrl
xor
cmp
push
clc
pop
fimuls
fcmovbe
add
stos
mov
sahf
fldcw
outsl
pop
aad
incb
pop
in
xchg
icebp
and
mov
pop
or
mov
cmp
sbb
push
aaa
or
lret
xchg
in
daa
mov
cs
mov
mov
mov
fcomi
and
dec
xor
xchg
enter
into
insl
jge
pop
cmpsl
sub
inc
lahf
call
lock
jmp
jl
xchg
js
pop
push
inc
in
int3
call
cld
mov
es
jo
jp
arpl
mov
jo
into
es
xchg
lahf
in
js
jae
lret
xchg
imul
mov
jecxz
xor
stos
jmp
add
sahf
in
push
jge
push
rorl
lock
mov
jecxz
jmp
cmp
dec
push
roll
mov
call
cmp
out
outsb
xor
or
mov
in
mov
sub
xchg
shrb
lods
sub
jmp
lds
xchg
mov
add
add
cld
fnsave
xor
out
in
enter
sub
bound
sahf
push
jno
fmulp
sbb
xchg
enter
insl
shl
popf
stos
fcmovne
add
or
aad
sahf
pop
adc
cmpsb
loopne
push
in
xchg
adc
insl
data16
das
xchg
repz
mov
inc
push
into
js
clc
mov
mov
ret
pop
popf
incb
outsl
jmp
xor
fidivrl
outsl
jmp
fmuls
adc
jo
ja
idivb
jae
icebp
repz
add
lret
jo
jb
dec
out
cmp
js
xchg
sbb
call
loopne
adc
cltd
sbb
adc
js
mov
roll
jp
xor
lds
jb
cmpsb
cli
add
mov
push
aad
sahf
jmp
mov
add
dec
jp
in
cmc
adc
aaa
fcmovnu
or
out
icebp
or
lahf
icebp
scas
xor
stos
pop
hlt
stos
xchg
jo
imul
inc
mov
fsubrp
mov
push
add
ljmp
test
cs
add
xchg
xchg
popa
adc
int3
dec
mov
add
or
test
dec
pop
sti
mov
and
out
arpl
jl
cld
lock
loop
lods
sub
lcall
sub
lock
test
adc
jle
and
movsb
cli
into
js
dec
popl
leave
fcompl
insl
mov
cmp
add
push
clc
inc
mov
pop
inc
adc
xor
rolb
mov
in
jns
hlt
mov
xchg
sahf
adc
orb
jnp
andl
or
rolb
lods
push
cli
stos
loope
js
lret
repz
inc
outsb
scas
stc
xchg
shll
cwtl
cli
jne
lcall
dec
repnz
es
adc
xchg
adc
or
sahf
xchg
js
insl
daa
push
incb
mov
scas
aaa
mov
push
into
fs
cltd
push
cli
call
in
xchg
pop
aaa
xchg
outsb
sub
inc
xor
sub
sub
adc
sahf
pushf
add
jae
outsb
sahf
es
jmp
loope
mulb
cltd
lods
outsb
ficoms
lcall
or
insl
adcl
add
or
inc
mov
or
andl
and
lcall
jmp
jp
stos
scas
and
fildll
sahf
adc
push
es
icebp
adc
dec
divl
jp
movb
cli
aaa
sahf
shll
push
push
das
fdivrs
movsl
scas
or
outsl
push
mov
mov
sub
jno
xchg
sub
dec
adcl
and
daa
mov
push
pop
lods
das
push
jp
and
xor
jmp
push
aaa
loop
test
push
daa
cli
mov
add
cmpsl
scas
loopne
or
push
movsl
adc
mov
xor
int
into
js
mov
jo
mov
jmp
inc
sbb
dec
fwait
nop
mov
les
out
int3
fldl2t
out
outsb
inc
or
add
and
in
imul
dec
in
stos
negb
xor
out
ljmp
scas
jmp
notb
into
fistpl
insb
mov
mov
out
in
test
dec
pop
xlat
cmp
pushf
xor
and
das
xor
adc
cmc
adc
inc
and
scas
into
ds
int3
cli
dec
mov
hlt
cltd
paddd
and
jmp
jo
push
repnz
icebp
das
test
ljmp
insl
or
adc
jbe
xlat
inc
pop
in
add
push
in
mov
stc
cld
out
push
flds
addb
xchg
cltd
cmp
stos
adc
mov
push
cwtl
mov
add
icebp
das
mov
out
out
inc
mov
xchg
pop
lock
in
and
stos
icebp
pushf
xor
pop
xchg
mov
cli
and
int
arpl
jge
dec
inc
mov
mov
stc
pop
imul
insb
cmc
les
mov
in
out
or
adc
popa
mov
pop
jge
jle
push
scas
fildl
add
dec
or
xchg
repnz
mov
out
insl
adc
movnti
out
push
push
xchg
mov
popf
sub
cmpsb
mov
xchg
or
mov
into
add
sahf
inc
pop
ficoms
mov
mov
mov
ljmp
jl
sub
sbbl
lods
inc
insl
jge
dec
cmp
and
add
inc
pop
in
or
xchg
inc
cltd
js
adc
mov
cli
popa
jle
aaa
addr16
jne
cmp
lahf
xchg
jl
ljmp
push
and
or
adc
lock
fldcw
data16
push
pop
pop
das
aaa
lock
mov
aad
cmpsl
das
push
outsl
imul
stos
xlat
scas
adc
push
fsubs
mov
xor
mov
insl
mov
dec
inc
sbb
add
insl
jo
clc
xchg
lods
daa
dec
outsl
and
ret
shrb
mov
rcll
cmpsl
cltd
inc
outsb
test
sub
repz
in
push
jecxz
adc
dec
jmp
fidivs
lcall
add
adc
out
in
lret
xor
nop
iret
and
xor
gs
rcl
push
mov
movsl
inc
repz
sub
add
icebp
lahf
pushf
nop
push
pop
and
dec
mov
rorb
sahf
lea
scas
notb
aam
push
or
and
jle
add
out
frstor
cli
mov
imul
and
and
mov
fistl
dec
hlt
and
icebp
les
cwtl
jne
xlat
pop
pop
inc
fmull
pusha
sbb
mov
mov
in
fadds
popa
out
imul
adcb
or
enter
punpckldq
test
fisubrs
repz
std
lods
mov
adc
imul
and
add
dec
imul
repnz
sub
lahf
fdivrs
movsl
hlt
jp
jmp
int
cmp
inc
out
insb
inc
fldenv
add
add
rclb
imul
xor
xor
cld
js
pop
hlt
outsl
or
pop
mov
jl
scas
cs
cmc
scas
insl
mov
xor
lret
dec
imul
push
lods
sub
mov
cmp
push
adc
into
arpl
dec
xor
sahf
inc
rcl
sub
jl
mov
xor
add
ffree
xor
ss
andl
mov
or
jae
xor
clc
mov
sbb
ljmp
mov
js
out
aas
ret
xor
jno
call
cmp
fadd
dec
enter
xchg
icebp
dec
scas
cmpsb
daa
xchg
mov
movsb
push
je
jo
movsl
mov
inc
aad
jno
adc
sbb
add
adc
pop
jecxz
cmpsb
lret
cmpsl
mov
sbb
push
xchg
dec
mov
dec
nop
scas
icebp
int
dec
dec
jno
mul
cmp
je
or
mov
xchg
out
jbe
out
call
mov
dec
fs
jo
xor
pop
mov
jb
fdivrp
scas
xor
orb
mov
repnz
cmpsb
outsl
ret
nop
hlt
lea
lcall
jo
mov
inc
cmc
push
mov
xor
clc
mov
dec
fwait
mull
xchg
push
out
xor
test
xlat
jns
ss
clc
cmp
fs
adc
iret
fistpl
call
test
dec
fnstsw
adc
dec
stos
mov
mov
aam
xchg
mov
mov
mov
adcl
adc
jge
scas
inc
push
enter
pop
pop
and
mov
loop
xchg
lret
fisttpll
daa
mov
aaa
popf
push
jnp
clc
cld
cltd
ljmp
les
dec
je
int3
pop
push
sbb
or
mov
outsl
cld
inc
cmpsb
add
mov
push
adc
icebp
lods
jno
and
test
das
lret
sub
mov
icebp
push
repnz
int
popa
imul
nop
mov
mov
mov
pop
scas
jno
add
jns
arpl
and
pop
inc
push
mov
jge
iret
pop
xchg
pop
divb
jl
rcrb
jns
insl
sbb
jae
fiaddl
insl
js
aas
dec
mov
scas
mov
ljmp
repnz
mov
cmp
lret
lret
test
faddl
or
fdiv
dec
sbb
fmuls
nop
cmp
mov
hlt
int
mov
pushl
rorl
cltd
sbb
lock
mov
int
pop
dec
sub
dec
je
cmpsl
sub
or
jnp
insl
das
inc
iret
int3
mov
repz
add
loop
xchg
mov
hlt
dec
inc
dec
arpl
xchg
add
std
jo
cmp
mov
cld
call
mov
stos
jns
cmp
mov
mov
xchg
inc
push
xchg
nop
jns
adc
lods
shr
cmp
pop
cld
jae
js
scas
push
mov
test
mov
or
loop
out
jnp
lock
fisubs
cmp
push
in
cwtl
add
inc
repnz
jle
xor
rorb
loop
scas
scas
and
mov
pop
mov
inc
pushf
out
je
push
loope
and
push
fdivrs
sbb
inc
sub
scas
loopne
mov
pop
mov
jecxz
scas
mov
call
pop
mov
lret
repz
out
cltd
jle
divb
clc
in
in
sub
popf
subb
out
imul
xor
cmp
add
add
fucomp
enter
mov
in
idiv
xchg
lret
xor
subb
insl
out
dec
nop
iret
test
adc
jbe
add
or
in
aad
mov
sub
hlt
xor
sbb
jne
pop
xor
lods
lahf
jmp
icebp
mov
add
ds
and
hlt
scas
je
jmp
in
mul
sahf
jo
mov
add
out
push
bound
mov
sbb
push
stos
and
in
push
sub
pop
push
cmp
insb
xchg
and
out
mov
cltd
loop
aas
mov
adc
sub
mov
int
loop
xchg
jmp
scas
andb
jmp
bound
cmc
push
scas
aas
leave
shlb
or
in
xchg
sbb
jl
insb
mov
push
push
ds
and
push
push
fs
in
xor
imull
daa
call
scas
add
cmp
jmp
out
sub
push
jbe
ds
xor
leave
not
in
mov
jl
sbb
xchg
inc
idivl
mov
and
iret
cmpsb
lcall
js
xor
push
adc
lret
clc
or
int
ds
gs
xor
adc
or
xchg
inc
cs
and
mov
cmpsb
mov
sbb
insl
out
dec
addr16
int3
push
inc
aam
aas
jne
sub
je
hlt
idivb
cmp
sbbb
sbb
jb
pusha
mov
sbb
iret
sahf
fdiv
js
cmpsb
mov
mov
dec
ror
hlt
and
push
cld
dec
mov
jl
ja
outsb
imul
push
jp
imul
xor
jae
hlt
jmp
pop
icebp
loop
jb
adc
jno
sbb
scas
stos
cld
test
in
cmp
fists
stc
loop
iret
sbb
xorl
inc
xchg
test
add
xorb
pushf
testl
xchg
insl
xor
arpl
popf
xchg
aad
out
add
xchg
xchg
adc
nop
fwait
mov
mov
fadd
mov
cmp
inc
popf
ljmp
dec
leave
mov
in
scas
lret
push
lock
out
jp
adc
xchg
jae
sti
hlt
mov
cmp
loopne
data16
mov
mov
pop
das
out
dec
daa
xchg
daa
das
sahf
fistl
and
call
hlt
imul
cld
push
mov
dec
xchg
std
lahf
dec
or
repnz
push
push
scas
loopne
push
dec
xchg
shrl
cmp
or
jbe
ror
test
inc
pop
mov
add
in
in
and
jb
iret
xchg
popf
test
xchg
mov
cli
das
jne
adc
mov
out
xor
inc
es
add
inc
psrlq
or
mov
dec
jecxz
cmc
dec
movsb
xor
mov
mov
cmc
hlt
arpl
test
push
xchg
orb
sbb
and
test
xchg
aas
adc
inc
mov
adc
fistpll
lods
add
mov
xor
rorl
imul
clc
fildl
jp
lods
mull
insb
in
mov
xor
loop
pop
ret
dec
hlt
repz
inc
dec
cwtl
insl
int3
rcr
dec
jp
add
add
mov
pop
sub
inc
stos
imul
iret
cwtl
scas
repz
lret
scas
dec
fwait
sahf
mov
inc
iret
mov
mov
jbe
cld
arpl
insb
jne
pushf
fsubrs
cmp
addr16
mov
sbb
test
flds
aad
add
hlt
aas
lods
in
mov
add
inc
fbld
add
jb
dec
or
jp
cltd
cmpsb
jp
mov
xchg
stc
inc
mov
scas
lock
cmpb
test
sbb
mov
iret
test
js
dec
push
outsl
jae
and
mov
hlt
mov
pop
out
add
aaa
jne
add
pop
pop
push
in
dec
vmwrite
das
fwait
imul
cwtl
push
loop
aas
mov
in
pop
negl
push
mov
imul
dec
aas
testb
ja
popf
ljmp
or
insl
lock
ffree
adc
mov
inc
xor
inc
in
loope
jae
arpl
mov
and
cmpl
mov
ret
aas
xchg
or
in
jae
cmp
mov
pusha
hlt
sub
inc
scas
loopne
psllq
mov
loop
pop
outsl
push
pop
jge
or
lahf
mov
xchg
daa
in
loop
push
pop
jle
mov
or
jae
icebp
scas
xor
jno
nop
ss
scas
pop
lcall
negb
mov
fdivl
dec
mov
ljmp
scas
push
xchg
cmp
sbb
ret
ljmp
mov
shl
sbb
jno
xchg
add
xorb
dec
cmp
cmp
jno
stc
inc
fdivrs
inc
adc
add
jae
dec
mov
adc
or
push
xor
scas
roll
jae
mov
cltd
or
adc
cmp
jle
jae
test
je
gs
sti
pop
xchg
das
das
int3
push
fcomi
ljmp
arpl
shlb
mov
fxch
mov
out
push
jne
push
mov
sbb
push
inc
xor
push
pop
mov
xor
mov
pop
fwait
arpl
mov
jns
repz
jns
xor
hlt
arpl
jmp
insl
xor
mov
es
or
mov
das
sti
push
into
xchg
imul
out
push
and
jno
ljmp
imul
xor
sub
test
cmc
sbb
mov
mov
or
andnps
cmp
out
insb
fstl
and
or
sahf
adc
jmp
outsl
loopne
mov
outsl
xchg
mov
mov
cmp
lods
outsb
cli
enter
xchg
fdivrl
test
sbb
insl
mov
repz
add
sahf
cmp
or
pop
shlb
mov
aad
ret
addl
jnp
repnz
aaa
mov
sub
mov
sbb
outsl
mov
sub
inc
repz
into
and
jg
sub
shl
insl
xchg
filds
stc
inc
cs
testb
out
inc
pop
jmp
sbb
cmpsb
mov
jo
cmpsl
dec
rcll
std
fidivs
outsb
ror
dec
xchg
into
push
movsb
in
jnp
lret
decb
jl
mov
inc
cmp
repnz
scas
lods
mov
mov
sub
adc
outsl
push
stos
mov
mov
sahf
cli
mov
das
popf
mov
xor
and
scas
cwtl
lods
mov
mov
je
mov
push
hlt
icebp
pop
mov
jnp
mov
fsts
xchg
sarl
xchg
andl
out
in
ss
push
je
mov
mov
shl
xchg
movsb
outsl
pop
mov
xchg
ret
rcl
repnz
mov
std
jb
aaa
pusha
mov
adc
push
lods
sar
adc
sbb
cmpsb
dec
inc
mov
cli
out
nop
aaa
pop
icebp
out
cmp
ds
les
lcall
inc
out
mov
ror
add
out
sarb
xchg
movsl
xchg
insl
mov
fcoml
test
pop
leave
jns
cmpsb
add
add
shl
scas
test
xor
xchg
addl
ljmp
jg
icebp
jnp
scas
xchg
lods
cmp
and
mov
mov
sbb
sbb
sahf
repnz
ljmp
hlt
push
mov
jge
icebp
mov
fsubr
jbe
ret
mov
inc
fcmovb
data16
mov
add
xor
loopne
arpl
lods
in
jo
cmp
xchg
out
mov
loop
adcb
mov
add
mov
cmp
push
push
je
jmp
add
inc
inc
test
cmp
imul
movsb
gs
sub
pop
js
mov
arpl
aas
cli
mov
lock
pop
ss
imul
jle
es
sbb
ret
adc
fnstenv
rcr
orl
hlt
inc
inc
sbb
js
add
scas
adc
xor
loop
push
jmp
aas
icebp
inc
or
in
js
ret
insl
insl
and
call
mov
shrb
mov
or
xchg
lds
sbbb
clc
in
arpl
in
mov
mov
enter
pop
push
js
cmpsl
and
sbb
push
inc
pop
ds
into
push
lcall
ljmp
xorl
add
adc
scas
sbbl
es
cli
mov
aad
outsl
adc
test
xor
sub
mov
lcall
std
push
pop
das
push
out
push
and
enter
out
jmp
mov
dec
xchg
pop
jmp
roll
cs
mov
cmp
roll
outsl
sub
iret
outsl
addb
lcall
je
pop
or
repnz
js
fildl
lds
loop
inc
clc
xchg
pushl
std
cmp
sub
fwait
xor
adc
stos
in
adc
cli
jbe
sahf
jmp
lret
jmp
jle
cs
arpl
inc
call
xor
arpl
dec
adc
xchg
mov
cmp
pop
shlb
push
loope
ja
or
ret
inc
out
cmp
popa
xor
cld
dec
jmp
fsts
lret
dec
or
in
pop
stos
adc
mov
xchg
sub
ja
jl
jle
clc
mov
hlt
xchg
sub
mov
imul
aad
int
push
and
lock
sbb
repnz
int
and
lret
pop
cmp
in
mov
pop
xor
call
in
xor
loop
inc
xor
ret
out
popf
cltd
sub
lock
push
xchg
stos
idivb
sbb
dec
loop
mov
mov
xor
fnstsw
cs
bswap
ror
inc
out
cmp
aad
jge
lret
xchg
inc
int
arpl
in
rorl
lea
push
loope
das
push
sub
push
icebp
mov
push
dec
xor
inc
mov
in
jl
jne
cmpl
cltd
loope
out
or
loopne
mov
loop
ljmp
je
sahf
dec
push
dec
xorb
bnd
dec
arpl
cwtl
pop
and
jmp
loop
jns
inc
mov
push
xchg
add
push
insb
xchg
and
ss
loop
sub
inc
idivb
xchg
rorl
arpl
push
xchg
inc
jno
and
inc
das
cmp
popf
ret
xor
rolb
add
ret
push
lahf
stos
out
xor
cmpsb
dec
add
in
mov
and
jae
cmc
test
stos
loop
jno
nop
ret
outsl
xchg
xor
dec
sub
mov
xor
sbb
jbe
inc
gs
movsl
pop
xor
dec
jl
arpl
push
negl
or
jnp
es
and
push
jno
fwait
jl
push
dec
arpl
negb
in
xchg
xchg
lret
push
stc
lret
imul
in
out
add
loop
cmp
pop
fucomip
mov
sbb
cwtl
fimull
test
insb
xchg
mov
test
mov
pop
sbb
fisubrl
sbb
push
sub
add
rcrl
sbb
jb
imul
es
xlat
xchg
mov
cmp
push
stos
xchg
xor
insl
lock
loop
lret
loopne
push
inc
test
cli
outsl
arpl
jb
and
flds
popf
push
repnz
jnp
loop
nop
incl
es
divb
cmp
push
les
dec
xor
mov
mov
mov
rclb
das
add
ds
dec
roll
mov
jmp
xor
ljmp
mov
test
fwait
rcll
cmpb
pop
add
inc
into
cmc
and
dec
lcall
int
jg
insb
jmp
int
loop
insb
inc
out
jo
sbb
cltd
fs
addr16
and
or
imul
or
scas
loop
imul
sbb
mov
jp
mov
hlt
arpl
stc
mov
pushf
popf
arpl
pop
enterw
bound
scas
push
mov
and
sbb
mov
insb
mov
jae
inc
into
push
mov
jp
add
mov
mov
push
iret
push
insb
sub
das
out
mov
ret
inc
out
cmpb
mov
adc
loop
xchg
mov
gs
push
loop
jb
mov
aad
sbb
sbb
sbbb
icebp
std
inc
les
xor
je
pop
mov
inc
stos
sti
addl
test
sbb
loop
xchg
jecxz
add
and
int
loop
addr16
insl
aaa
ret
mov
cld
xchg
and
cld
add
not
add
loop
fiadds
jnp
and
sahf
sarb
mov
pop
das
xor
add
mov
cmp
mov
inc
loop
ret
insl
into
mov
stos
push
mov
jmp
fisubs
inc
int
loop
lahf
adc
rcr
js
sahf
mov
mov
xor
mov
push
xchg
jno
adcl
xor
pop
jo
pop
popa
stc
jne
arpl
ret
xor
ja
or
sbbl
in
out
inc
mov
dec
movsb
cmp
push
iret
mov
cwtl
push
jl
imul
in
mov
js
insb
arpl
test
lea
jle
inc
cmp
pop
cmpsl
mov
sbb
sahf
loop
add
cmp
arpl
dec
add
cmp
cmp
sahf
je
mov
mov
fwait
std
loop
inc
loopne
mov
ss
rcrb
xchg
mov
mov
xchg
in
add
sbb
lea
pop
jmp
std
inc
xchg
cmpsb
test
jno
lret
test
xchg
mov
out
lock
out
mov
sbb
loop
test
jp
mov
cmp
add
mov
movsb
jle
loop
pushl
arpl
bound
mov
inc
lret
mov
daa
mov
scas
je
std
jmp
addr16
adc
and
loop
loopne
out
dec
imul
mov
out
push
adc
xchg
jns
inc
mov
push
cld
cmp
push
mov
out
pop
cmp
icebp
add
out
xor
fwait
imul
repnz
sbb
mov
and
stos
fsubl
aam
out
daa
and
adc
mov
xchg
add
xor
cld
out
mov
clc
cs
add
xchg
pop
mov
lret
iret
mov
jb
xor
out
push
inc
shlb
or
out
adc
sbb
out
mov
loop
sti
xlat
dec
and
daa
leave
scas
cwtl
pop
fdivl
sub
dec
add
jb
out
cmpsb
and
in
xor
pop
clc
inc
fs
out
xchg
push
aam
nop
mov
out
insl
sbb
movsb
movsl
adc
mov
outsl
insl
sub
xchg
js
push
test
adc
dec
push
aas
outsl
popf
mov
adc
test
shlb
popa
out
pop
add
inc
in
popf
pop
imul
mov
pop
loop
js
mov
out
in
dec
out
pop
loope
fisubrl
scas
push
jbe
stos
js
scas
test
cmpb
out
or
add
out
adc
mov
jmp
mov
repz
adc
xor
insl
pop
xchg
cmp
mov
mov
rol
ret
jb
repz
fwait
pop
rclb
shlb
mov
rclb
std
push
into
out
dec
mov
movsl
jo
add
push
or
out
xor
stc
pop
fildl
fs
mov
cltd
xchg
jne
push
loop
nop
cmp
out
lahf
std
mov
shll
xchg
jnp
scas
push
jmp
ret
dec
lea
inc
fiaddl
pusha
cmpsb
sub
push
cli
jecxz
outsl
jns
stc
mov
push
out
out
fs
aam
out
inc
int3
outsb
inc
push
mov
pop
pop
sti
in
jle
inc
out
rolb
add
dec
movups
loopne
adcl
jo
scas
cmp
fs
lahf
and
pop
icebp
scas
leave
data16
push
imul
fadds
mov
pop
and
sbb
sarb
lahf
jge
fcmovb
add
call
call
xchg
cmc
pop
mov
icebp
in
cwtl
adc
lahf
lods
hlt
aam
loopne
sub
shll
inc
jbe
inc
popa
movsl
dec
and
icebp
xchg
fiadds
mov
stos
mov
and
pop
fisubs
stos
scas
ret
sahf
or
xor
loop
test
int3
out
jo
decl
js
pop
jmp
lahf
out
hlt
adc
rcl
int
mov
mov
xor
mov
add
out
testb
push
pop
lret
fisubl
pusha
or
shlb
inc
mov
jl
ljmp
jnp
cmp
pop
aaa
in
xor
mov
cld
push
cmpsl
test
jae
fucom
cmp
xlat
mov
test
mov
jns
cld
add
ret
into
lahf
lods
lock
adc
xorb
jmp
daa
enter
pop
out
add
int
or
scas
inc
insb
cmp
inc
outsl
jns
mov
loopne
pop
out
movsl
orb
pop
lahf
xchg
sahf
sti
stc
test
xchg
xchg
lret
data16
sbb
pop
leave
out
jg
subl
test
xor
lods
cmpsb
push
out
jne
mov
popa
loope
into
fcmovnu
lods
stc
dec
cmp
mov
les
mov
out
test
lds
inc
sub
pop
add
pop
out
aam
cmp
hlt
mov
aaa
jp
cmp
jge
fs
cmp
fwait
adc
cmpsb
js
cltd
push
out
sub
jno
mov
mov
dec
cmpsl
lret
int3
mov
aad
aaa
insb
push
cmp
jp
sahf
and
fldenv
imul
out
mov
outsl
shl
rcr
jo
fcmovbe
mov
cmc
pop
aas
aam
out
in
imul
push
call
out
and
xchg
iret
xor
imul
fstpl
sahf
and
mov
popf
cmpsb
mov
jge
sahf
mov
or
test
pop
in
cs
xchg
cmp
push
add
xor
in
fucomi
dec
mov
cmpsl
xlat
lret
in
lods
icebp
xchg
inc
fmull
test
adc
mov
jbe
sbb
inc
lcall
pusha
rol
daa
out
mov
shr
jo
xchg
inc
xchg
js
fmull
sub
lods
scas
movsb
dec
cmpsb
sti
out
push
adcl
mov
aaa
out
fistl
cmp
iret
dec
out
stc
adc
cmp
out
movsb
jp
mov
mov
mov
mov
mov
outsl
jno
and
fimuls
out
xchg
push
mov
inc
xchg
out
test
pop
fisubs
adc
mov
loopne
fsubr
mov
mov
dec
call
enter
sbb
popa
out
in
dec
mov
push
stos
bound
andl
sbb
lcall
out
lret
sbb
mov
shlb
out
out
out
fnsave
inc
xor
sbb
push
test
pop
out
jecxz
jns
stos
jge
mov
dec
push
push
nop
sub
out
and
xchg
add
inc
pop
jb
mov
les
inc
mov
jmpw
mov
repnz
xchg
outsl
call
sbb
xor
lock
jae
dec
jle
scas
rcl
jns
cmp
xor
mov
hlt
stos
out
sub
je
dec
sbb
scas
dec
fcmovbe
dec
ss
push
push
inc
fcmovnb
jg
out
call
and
jecxz
ret
out
mov
mov
jns
movsb
outsl
mov
xlat
inc
out
js
inc
mov
out
add
stc
mov
mov
popf
push
cld
push
xor
push
cmp
into
jmp
jo
pop
xchg
pop
dec
mov
insb
cwtl
out
mov
pop
pop
pop
jg
cmp
xorb
pop
out
int3
cmp
mov
or
mov
scas
jl
cmp
mov
sub
mov
loop
xor
arpl
jl
push
in
cli
cld
pop
test
fisubrs
out
cmp
dec
jno
xor
popa
addr16
fmul
nop
xor
sahf
or
or
insb
out
scas
fbld
adc
jae
sbb
push
arpl
js
cmp
into
test
and
fiadds
out
lock
sbb
xchg
les
out
sbb
pop
xchg
pop
lods
pop
out
rcr
jo
inc
div
push
out
jbe
stc
mov
int
push
std
leave
xor
dec
clc
sahf
ret
aam
dec
cmc
dec
in
fwait
out
movsb
adc
mov
xor
pop
outsb
xchg
mov
mov
out
lods
negb
jle
jb
sbb
xor
push
pop
pop
out
out
imul
fcoms
inc
sbb
lock
gs
or
dec
stos
add
sbbl
mov
and
pop
out
mov
ljmp
out
cmp
pop
popa
sbb
push
add
push
adc
push
fimuls
xor
jne
icebp
popa
je
jg
mov
mov
dec
test
push
add
out
sahf
mov
fisubs
pop
pusha
cld
in
mov
hlt
dec
mov
dec
inc
aas
leave
sub
inc
or
xchg
mov
lcall
jmp
xor
scas
popa
push
testl
outsl
dec
inc
sbb
loop
outsl
das
and
scas
fmul
rclb
fstpl
mov
xchg
mov
lods
out
push
push
loop
mov
imul
lock
loopne
push
cmp
in
inc
loop
lods
xor
arpl
fisubrs
dec
lods
inc
dec
outsb
push
jp
jns
int
roll
jnp
ss
loop
or
push
test
mov
sbb
dec
jno
loop
and
repz
xlat
daa
in
jae
out
adc
xor
jns
arpl
mov
add
movsl
sbb
fcmovu
jl
lods
aam
xchg
out
xor
dec
fs
cmc
mov
fidivs
rcr
jp
mov
inc
mov
cmp
jecxz
lods
in
adc
jns
cmp
loop
pop
aas
mov
dec
lcall
sub
mov
push
xlat
adc
arpl
leave
xor
mov
sahf
or
enter
es
xor
cltd
jg
insb
enter
arpl
es
mov
mov
jl
je
repnz
rcr
outsb
lods
rcrb
xchg
cmp
pop
pop
icebp
rcrb
cli
in
orb
into
mov
cmpl
push
ffree
out
add
sub
popa
pop
jmp
push
lret
or
repnz
and
lock
dec
cmp
jl
outsb
andb
mov
movsl
data16
testb
lret
mov
nop
cmp
scas
ljmp
clc
loop
fisubs
out
jne
dec
stos
jg
loope
fistpl
pop
jno
bound
icebp
nop
inc
arpl
gs
add
clc
std
add
adc
andb
mov
mov
mov
aam
loop
xor
sahf
cmp
sub
hlt
repnz
ds
add
fmuls
imul
jae
ds
push
jns
add
sbbl
mov
jge
repnz
into
xor
out
sub
andb
icebp
inc
out
andb
adc
xor
lahf
add
pop
ds
lods
mov
cmpsb
mov
std
leave
inc
xchg
das
cli
jge
out
outsl
mov
in
xchg
outsb
push
test
in
add
mov
out
loopew
sbb
push
add
mov
int
inc
cli
inc
out
xor
shlb
inc
js
rclb
ret
shr
sti
ja
ficompl
sbb
adc
test
insb
sub
ret
lods
or
outsl
xor
xor
rcrb
xchg
shll
loope
lret
jge
mov
pop
sbb
out
inc
xchg
jb
scas
xchg
or
or
into
scas
and
in
jae
inc
out
fdivrs
sti
leave
jle
mov
dec
fldpi
mov
push
lahf
mov
sub
out
xor
adc
jecxz
lea
out
movsl
bound
in
jge
rcrb
pusha
mov
cmpsb
push
jbe
addr16
fisubrs
xor
xor
out
xchg
xchg
repz
cld
jl
std
repnz
mov
dec
push
addb
sub
pop
dec
aaa
push
loopne
out
jns
and
dec
push
insl
mov
int3
dec
out
cmpsl
sahf
icebp
pop
jne
push
je
dec
lea
mov
xchg
out
jnp
int
mov
jp
jle
jg
out
xchg
out
iret
pusha
sti
push
push
dec
mov
cmp
mov
mov
ret
inc
clc
jl
in
mov
out
scas
mov
mov
pop
jecxz
push
sbb
jo
and
push
aaa
or
jecxz
xor
loopne
sub
mov
pop
or
add
out
in
add
dec
pop
push
out
ja
fdiv
and
imul
shll
sbb
xor
sbbl
jl
lods
and
xor
in
xor
andl
jle
jo
xor
adcl
insb
push
mov
in
std
xchg
arpl
push
out
xchg
push
mov
jb
sbb
aad
mov
mulb
jno
dec
jg
mov
jae
mov
ss
jp
sbb
out
jb
xchg
imul
out
ljmp
push
sbb
aam
xor
out
nop
push
dec
loope
arpl
lds
and
imul
stc
fisubl
std
and
ficoms
and
cmc
push
inc
and
jle
insl
fwait
jb
sahf
and
cmpsb
icebp
test
mov
xor
cmp
out
sarl
out
clc
sub
sbb
stc
jo
ja
xchg
icebp
adc
fsubr
rcll
pushf
es
xor
xchg
loopne
outsl
out
shll
cmpl
jns
jae
sbb
outsb
std
pop
jecxz
out
outsl
xchg
and
mov
pop
sub
fcoml
out
aaa
out
ds
icebp
adcl
pop
out
insl
push
js
jle
xchg
cmp
xor
cld
jns
loop
add
out
adc
bsf
sbb
gs
pop
pushf
out
dec
mov
insb
out
xchg
mov
icebp
jp
das
push
jo
sahf
mov
jo
into
mov
js
sarl
adc
out
fdivp
test
pushf
mov
imul
test
add
jo
dec
jno
sbb
fimuls
cmp
pushf
sub
xchg
jmp
mov
push
icebp
fwait
repnz
movsl
add
out
adc
pop
cs
adcl
sbb
int
lods
push
inc
lds
fwait
loopne
out
notb
ret
pop
add
clc
out
add
call
dec
hlt
ja
xchg
cmp
ljmp
out
test
lcall
and
scas
xchg
out
sub
inc
jmp
mov
in
out
add
or
jns
out
fisttps
aas
inc
fcomp
xor
cmpsl
je
adc
pop
jge
out
dec
sbb
shrb
jns
jbe
ficompl
dec
jo
and
inc
andl
loop
pop
or
lahf
xor
pop
outsl
jbe
pusha
mov
mov
loopne
jge
pop
mov
pop
xchg
mov
gs
lds
cmp
js
inc
jecxz
mov
inc
and
xor
xlat
and
fbld
out
movsl
jmp
cltd
pop
pusha
add
sbb
inc
cmc
aad
adc
mov
mov
mov
aam
fwait
inc
clc
xor
lods
lcall
mov
cld
out
xlat
xor
out
je
ret
leave
out
out
fistpll
adc
jo
xor
mov
jno
jp
je
arpl
mov
loopne
out
repnz
mov
jae
dec
sahf
out
arpl
adc
aaa
fwait
or
mov
push
pop
sahf
mov
int
adcb
fildll
mov
arpl
clc
addr16
or
push
outsl
dec
mov
xchg
add
mov
hlt
mov
fidivl
mov
into
push
aam
sbb
mov
pop
frstor
jns
dec
cmpsb
xchg
push
mov
mov
dec
push
push
in
xlat
js
loope
xchg
mov
sbb
pop
je
rcrb
test
cmp
arpl
jne
ja
jne
cmp
mov
ljmp
pop
insl
loop
xor
dec
sbb
add
test
andb
cmp
cmp
cs
or
aas
dec
fwait
mov
mov
push
sub
push
mov
add
mov
scas
dec
sub
adc
cmc
icebp
xchg
or
pop
aad
in
or
mov
test
orl
loop
push
popl
cmp
xchg
xchg
mov
cmp
cmp
mov
jns
hlt
es
pop
div
in
rorb
xchg
cli
push
jnp
scas
push
fbstp
xchg
xchg
cwtl
xchg
add
out
pop
stos
jae
popf
mov
push
cmpsl
std
test
stc
inc
fdivrs
out
je
mov
pop
incl
mov
aam
lea
scas
pop
out
dec
lcall
and
das
sbb
out
mov
in
adc
out
xlat
pop
iret
or
repnz
out
mov
add
in
cwtl
addr16
test
pop
outsl
mov
aam
repnz
loop
mov
and
xor
ja
out
pop
cmc
inc
xor
test
aam
fidivl
cmpsb
pop
lahf
mov
mov
rcrb
or
scas
xchg
or
out
xlat
rclb
outsl
cli
adc
or
jmp
push
ficoms
in
lret
push
dec
cmp
aad
sub
and
cmc
imul
xor
out
mov
pop
test
das
lahf
inc
mov
clc
hlt
sbb
sub
cs
subb
int
mov
out
aas
dec
sbb
mov
pop
ljmp
dec
imul
sbb
sub
outsb
sbb
mov
rorb
pop
mov
push
mov
loopne
mov
scas
sbb
mov
repnz
jbe
scas
inc
and
shr
repz
inc
dec
add
outsl
sbb
or
addr16
push
fmul
jb
and
cmpsb
loope
movsl
jae
inc
lcall
mov
je
jecxz
cmpsb
stc
decb
fisubs
mov
lcall
jmp
mov
mov
adc
mov
dec
imul
js
push
sbb
out
outsb
adc
mov
lock
dec
cmc
cmpsb
cmp
xchg
pop
negl
cmp
jp
rcl
or
out
fsubrs
idivb
arpl
test
sbb
daa
lock
push
out
or
cwtl
inc
imul
test
ret
dec
test
das
stos
out
push
pop
outsl
bound
lret
out
cltd
in
xor
push
call
jecxz
out
iret
push
push
or
mov
inc
jp
fiadds
add
out
in
pushf
outsb
lcall
call
negb
fildll
outsl
mov
add
aam
out
fwait
or
out
xchg
jae
push
or
mov
dec
lods
call
pmuludq
pusha
cmpsl
cmc
or
mov
shlb
into
cmp
jne
out
fs
dec
sahf
je
es
fcmove
clc
jp
scas
aam
add
sub
test
mov
push
cltd
mov
das
out
adc
xchg
jmp
mov
and
aaa
sbb
jg
stos
mulb
mov
xor
mov
ja
pop
mul
lods
out
push
add
mov
push
lock
push
sbb
pop
int3
mov
cmp
les
popa
add
mov
adc
aam
add
in
or
movsl
cmp
cmc
push
fwait
mov
divl
jae
xchg
xor
out
ret
cmp
and
sbb
repz
imul
movsl
mov
enter
and
jnp
out
fistpll
fcoms
push
out
add
push
jmp
test
scas
bound
jo
fdivrs
scas
fs
jl
push
pop
out
xchg
mov
xlat
insl
out
ja
pop
lods
cmp
std
mov
addr16
cmp
cmp
out
pop
daa
jnp
pushf
movsl
jbe
shr
lods
mov
sub
jbe
fsubrl
scas
fs
ret
jb
imul
mov
xor
jl
loopne
sbb
cmp
in
mov
inc
out
xor
div
gs
cmc
aas
popf
data16
pusha
mov
and
clc
sbb
xor
adc
sbb
ficoml
std
mov
push
ret
mov
sahf
jns
stc
xor
test
out
or
enter
fwait
sbb
sub
pop
fs
je
lret
push
and
out
les
or
mov
out
ss
lret
setnp
mov
xchg
pop
xchg
adc
out
in
xchg
cltd
sbb
mov
lcall
pop
loopne
sub
pop
and
or
mov
sahf
test
sub
jmp
lret
xchg
cmp
adc
sahf
mov
sub
mov
out
in
add
aam
or
out
xorl
dec
mov
icebp
push
cmpsb
pusha
int
xor
jmp
mov
stc
add
decb
cmp
shll
mov
jmp
xchg
stc
sub
out
or
dec
xchg
and
out
out
pop
dec
enter
jnp
sbb
roll
into
and
mov
pop
out
clc
icebp
and
out
or
jnp
ret
sahf
outsl
jg
enter
sub
dec
xchg
dec
movsb
cmp
test
jns
jmp
pop
fwait
out
dec
jno
pop
subb
cmp
mov
sbb
mov
jge
dec
bound
out
xlat
add
sbb
pop
out
adc
shr
ret
or
adc
sub
push
sbb
and
stc
popf
scas
dec
out
xor
pop
loopne
xchg
out
ja
and
pop
lock
scas
outsb
mov
cmp
pusha
adc
addr16
cmpsb
sub
push
icebp
inc
lret
or
mov
cmp
outsb
and
aad
jg
fimuls
or
ljmp
and
movsl
ss
out
xchg
inc
leave
loopne
xor
xcrypt-ecb
cmpsl
into
and
mov
mov
or
stc
cmp
test
popa
out
loopne
xchg
mov
mov
add
out
xor
jmp
jae
pop
mov
mov
out
hlt
cmp
mov
into
cmpsb
jo
push
movsl
dec
xchg
mov
pop
or
lds
into
jge
jb
aaa
call
int3
inc
mov
or
adc
fisubrs
mov
adc
mov
clc
js
je
mov
or
stos
push
cwtl
sub
mov
mull
clc
ss
test
int3
sub
push
sub
mov
fs
jbe
push
or
push
jno
adc
test
scas
sti
out
sub
xor
test
popa
push
mov
or
xor
mov
lods
lock
inc
mov
push
xchg
out
pop
movsl
adc
mov
out
ljmp
lret
sub
test
mov
out
std
lahf
mov
jbe
add
jge
out
pop
loop
mov
pusha
jecxz
xchg
stos
sahf
lea
cmc
dec
cwtl
jge
jbe
addb
and
cmp
push
jno
into
aad
arpl
icebp
dec
cmpsb
push
lret
shlb
scas
arpl
fisubl
je
xlat
test
aam
sarl
nop
jnp
mov
or
ss
bound
jl
sahf
adc
lret
dec
adc
sbb
mov
out
inc
xor
cmp
or
sbb
imul
out
xchg
xor
pop
ja
lods
jp
and
mov
sbb
int3
adc
bound
call
push
clc
out
add
mov
sbb
lods
shlb
mov
cmp
shrl
fwait
stos
out
add
inc
int
mov
ret
out
xchg
sbb
jb
fs
jecxz
and
les
stos
mov
out
fsubrs
cld
mov
jle
xchg
sub
sbb
stos
mov
inc
loop
out
jl
add
sarl
jb
mov
inc
iret
int3
push
out
aad
mov
xchg
ds
out
pop
fdivrs
jmp
out
push
xchg
pop
cmp
sahf
inc
out
gs
bound
push
cmpsb
js
jo
jb
out
xor
subl
ret
mov
and
mov
mov
arpl
mov
jo
sub
fdiv
xor
shrl
out
xchg
cmp
outsl
gs
xor
inc
shr
dec
or
fdivl
out
push
pushf
xor
das
out
sti
adc
out
sbb
mov
pusha
cmpsb
push
pmaddwd
xor
jg
lds
dec
xor
jp
into
rorl
lods
lahf
repnz
cmpl
push
or
cli
out
inc
int3
ret
fildll
addr16
je
xor
loopne
jo
push
mov
shr
outsl
jmp
addr16
fcoml
std
js
cltd
out
dec
ss
ds
out
mov
out
or
adc
sbb
aas
ljmp
imul
out
lea
aam
leave
jo
sbbb
cs
pop
cli
push
fbstp
lock
mov
das
dec
pop
or
iret
out
lds
and
jmp
jl
xlat
out
sub
cltd
data16
out
pop
mov
fwait
shrl
xor
sub
decb
cmc
cs
imul
push
fisubrl
inc
add
adc
out
out
pop
inc
xchg
gs
push
sub
mov
dec
inc
cmpl
mov
popa
or
lret
pop
out
into
roll
mov
addr16
lods
into
jl
mov
jle
mov
adc
xchg
pop
fadds
out
add
mov
xor
xchg
cltd
dec
mov
imul
into
dec
inc
push
pushf
lods
sti
out
ret
stc
add
out
mov
cmp
push
cmp
insl
into
dec
xchg
jno
int3
test
push
out
pop
xchg
adc
stos
out
push
or
loop
jg
out
and
sbb
cmpsl
pop
rorb
test
out
out
push
adc
ret
mov
mov
add
out
es
inc
jp
adc
push
mov
dec
out
shll
insl
andl
xchg
scas
aaa
mov
push
xchg
sar
and
mov
test
outsl
inc
pop
jl
sahf
lds
jbe
out
sbb
aas
lods
mov
movsb
inc
out
dec
shl
xchg
gs
bound
out
jb
arpl
and
sti
push
inc
xor
sbb
out
jp
insb
in
inc
ror
pop
out
scas
adc
cs
xchg
sub
push
mov
mov
out
data16
xor
inc
mov
inc
push
cltd
jno
xchg
test
sahf
mov
jno
or
or
out
lock
outsb
in
out
mov
arpl
dec
test
sbb
pop
push
cmp
sub
xor
outsb
cwtl
scas
push
mov
and
mov
xchg
out
xor
cli
lock
inc
xchg
test
lahf
int3
dec
mov
jmp
out
xor
xlat
inc
repnz
push
ret
out
or
jmp
sbb
jo
andb
test
insb
fiaddl
insl
repz
mov
je
cmp
enter
fistpll
mov
mov
xlat
jae
ljmp
lods
movsl
arpl
xor
mov
ret
out
fwait
popf
push
dec
sbb
cltd
sbb
das
mov
lods
pop
jae
sbb
sbb
mov
vmovaps
xor
stc
inc
push
test
jns
pop
fmull
dec
cmp
enter
mov
or
adc
jne
fs
repnz
inc
xor
push
push
inc
mov
das
mov
cmpl
cmp
fdivl
inc
loopne
clc
arpl
push
push
push
shlb
sbb
iret
mov
mov
fstps
push
inc
or
xor
nop
mov
inc
push
push
pop
xor
arpl
or
sub
adc
lret
cld
and
adc
loopne
imulb
xchg
pop
adc
mov
mov
js
andl
fcmovnb
pop
fs
mov
shl
aad
jmp
ljmp
fucomp
pusha
lcall
stos
xlat
inc
sub
or
imul
cmp
or
jp
dec
cmpsl
loop
scas
arpl
sbb
movl
mov
out
mov
arpl
dec
incb
mov
sub
out
inc
cmpsl
int
jbe
outsb
pop
scas
movsw
insl
jecxz
pop
lea
sbb
out
pop
and
in
loop
ficomps
cmp
movsl
sub
inc
fisttps
out
push
gs
fisttpll
xchg
sbb
jnp
inc
push
aaa
stos
add
arpl
insl
mov
add
ljmp
pop
scas
rorl
push
ficoms
push
mov
pop
xor
loopne
dec
jbe
mov
add
fcoms
cmp
lods
movb
mov
fisubrs
out
cmpsb
cmp
sbb
iret
arpl
mov
push
jle
out
movsb
outsl
mov
or
shll
out
fdivl
cs
popa
das
shlb
xchg
push
cmp
sbb
lock
clc
pop
jns
out
sarl
inc
mov
in
mov
jl
in
std
shr
ret
cmp
inc
xor
dec
lcall
repz
cld
fistl
mov
out
scas
hlt
iret
sahf
push
cmpsl
adc
movsl
xchg
rclb
sbb
fdiv
out
sub
negb
xchg
jbe
es
sahf
test
outsl
xchg
adc
push
aam
in
add
jle
mov
out
gs
das
std
sbb
jo
push
clc
xchg
shrl
test
jge
push
mov
shl
ret
jl
mov
push
sahf
icebp
out
enter
scas
stos
xchg
mov
mov
push
push
cmp
jae
jp
imulb
sahf
out
insl
push
test
sub
popa
out
aaa
mov
add
negb
push
cmpl
fldcw
pop
out
popf
daa
jo
rcl
mov
cltd
shlb
dec
lock
or
shl
mov
fdivrl
scas
ss
mov
pop
enter
jns
sub
aam
and
repnz
jb
jnp
scas
loopne
jae
gs
adcb
fcompl
dec
scas
data16
out
jns
loope,pt
mov
out
fisubl
addr16
jo
pop
jp
ja
adc
addl
out
adc
lret
leave
mov
adc
lahf
gs
scas
imulb
shl
ss
mov
sbb
adc
xchg
fmulp
insl
sub
ficoml
xor
fcoms
pop
add
xchg
mov
sbbl
xchg
sti
jg
push
xor
out
push
mov
mov
repnz
stc
fcmovne
scas
push
bswap
sahf
iret
outsl
push
into
cmpsb
adc
int
pop
push
outsl
and
out
hlt
mov
jb
push
data16
fsubrl
imul
xchg
movq
popf
shr
in
test
jns
mov
pop
out
or
jae
pushf
out
daa
loopne
mov
call
paddsb
push
mov
into
aam
jnp
xchg
shlb
dec
sahf
in
mov
jl
dec
dec
xchg
jp
sbbb
mov
stos
into
cli
aaa
mov
outsl
xchg
and
xchg
fsub
fildl
out
jns
mov
xor
cmp
pop
lods
pop
jo
in
mov
adc
loope
mov
test
push
ficompl
sbb
outsl
in
push
nop
hlt
mov
lret
adc
pop
iret
cli
mov
push
mov
into
rorb
test
adc
scas
or
sub
xchg
adc
xor
fcomps
sbb
cmpl
mov
rolb
push
aas
std
aad
jo
cld
out
out
shrl
inc
add
out
xor
jb
ds
ljmp
jge
out
xchg
out
inc
fcoml
out
lods
aad
push
mov
in
out
out
lahf
fiaddl
dec
lret
lret
or
add
icebp
mov
scas
hlt
aad
sti
or
or
std
xchg
lds
ret
mov
mov
das
out
pop
cmc
mov
shrb
movb
push
sarb
cmp
pop
add
sbb
repnz
sti
inc
adc
stc
jns
int3
xchg
out
daa
out
aas
cmp
and
out
jecxz
pop
lcall
pop
stc
lret
fnsave
mov
out
adc
imul
xor
dec
out
sbb
sbb
xchg
push
mov
bound
mov
cmp
jp
scas
out
sbb
adc
iret
lock
pop
push
stos
mov
jp
fidivrl
push
pop
fdivrs
js
inc
lahf
mov
out
xchg
push
cmp
aad
push
out
inc
jo
scas
mov
aam
scas
xchg
sub
outsb
out
andb
inc
into
fstpl
xchg
cmpsl
xchg
imul
push
adc
stos
popf
xchg
popa
out
push
mov
xlat
fidivrl
and
sub
sahf
mov
iret
jno
ret
or
dec
or
out
pop
add
cwtl
jno
jo
or
sub
pop
imull
lret
inc
out
loope
dec
pop
insb
out
jecxz
adc
push
adcl
inc
mov
rcrb
pop
test
js
mov
enter
adc
idiv
sbb
sub
adc
dec
mov
adc
fiadds
sbb
out
xor
pop
jle
pop
imul
out
mov
aam
cltd
mov
sbb
xor
pop
xchg
testl
out
test
mov
testl
xchg
out
in
xchg
push
xor
ss
out
mov
or
jo
jle
lret
mov
sbb
pop
sub
div
or
push
mov
outsl
hlt
sbb
cmp
jo
xor
mov
mov
ret
out
jl
xchg
sbb
stos
jg
popf
and
ljmp
add
cmc
cmpsb
push
or
jmp
lahf
push
cs
adc
mov
pushf
roll
jo
cmpsl
mov
gs
xor
std
lock
sub
add
jne
inc
subb
loop
ss
pop
inc
adc
mov
and
sbb
push
inc
cmp
pop
out
pop
decl
push
enter
cmp
cld
imull
mov
push
xchg
pop
sbb
and
or
xor
mov
pushf
mov
pusha
dec
lock
out
shrb
rcrb
out
lcall
pop
bound
movsl
jo
stos
imul
pop
ret
xchg
out
adc
das
adc
mov
xor
js
div
cli
aad
adc
adc
mov
xor
leave
ficoms
adc
outsl
loope
pushl
push
cmp
ficoms
mov
cld
hlt
xchg
or
mov
sbb
and
push
repnz
fs
adc
pmaxsw
cmpsb
pop
xor
popa
enter
fcmove
mov
mov
sbb
cmp
add
cltd
sub
cmp
sti
jle
mov
movsl
ja
fprem1
std
push
movsb
out
pop
inc
in
ja
dec
fdivs
int
addr16
xor
faddl
into
stos
subl
inc
cmp
ficompl
mov
push
enter
jae
jle
cmp
imull
out
mov
or
pop
mov
push
sbb
aas
out
mov
cmp
imul
int
loop
mov
sbb
inc
mov
or
xchg
outsb
dec
out
add
pop
out
mov
adc
shrb
stos
std
out
mov
loope
sbb
outsl
orb
out
cli
int
xchg
jbe
out
jg
sbb
jb
pusha
aam
xchg
in
fistps
iret
mov
je
fdivrp
mov
lock
cmp
mov
and
push
das
sub
mov
xchg
jo
inc
cld
lods
scas
fmulp
stos
add
and
push
out
fists
push
mov
and
adc
out
jnp
orl
jne
out
inc
sti
and
sbb
std
cltd
fisubrs
lock
cmpsb
out
dec
nop
mov
data16
pop
out
push
fdivs
xor
out
fsubrl
push
xor
sbb
cmp
mov
out
pop
and
dec
stos
out
dec
add
clc
jns
out
test
adc
out
lcall
aam
xchg
push
test
xor
xchg
mov
shl
imul
lcall
out
rcrb
popa
and
andl
cs
mov
iret
bound
mov
out
cmpsl
pop
mov
fs
cltd
or
mov
mov
jl
nop
out
mov
mov
adc
ret
pop
push
arpl
in
sub
jo
fdiv
xchg
sarl
outsl
loopne
mov
pop
lea
push
outsl
or
sahf
aad
pop
orb
sub
imull
sbb
es
shl
repnz
arpl
icebp
mov
pop
push
out
jmp
xor
cmp
jbe
in
adcb
sti
insl
cld
sub
and
inc
std
jbe
sbb
inc
idivb
outsb
ss
out
mov
push
shr
inc
sbb
mov
cmp
repnz
je
push
push
jp
mov
in
out
adc
xor
movsb
out
cmp
mov
jge
mov
jmp
das
ljmp
cmpsb
mov
adcb
push
mov
cmp
xor
stc
data16
fdivrl
fsubs
scas
in
ror
fnclex
aaa
push
test
xchg
pop
xor
add
cmp
adc
subb
xor
out
out
sarb
push
int
xchg
cmpsl
sbb
pop
mov
test
xchg
aad
mov
outsl
cmpb
pusha
xchg
jge
jp
movsl
add
add
mulb
test
repnz
push
jg
imul
pop
neg
loopne
scas
fwait
mov
sub
push
jge
and
out
cmp
test
cmpsl
mov
aad
sahf
orb
mov
dec
adc
jo
movsb
icebp
pop
inc
mov
add
lcall
mov
les
push
out
adcl
mov
pop
add
mov
adc
out
movsb
jecxz
sbb
jl
jns
lock
testl
adc
sbb
into
xchg
les
mov
js
jb
loopne
xchg
xor
push
pusha
add
or
mov
push
loop
scas
into
mov
xchg
imul
adc
shrl
pop
mov
mov
lods
out
or
or
mov
lcall
ds
add
dec
mov
xchg
aad
in
repz
and
nop
mov
inc
jb
insl
and
pushf
mulb
test
fimuls
out
rol
stc
sub
loop
or
mov
loope
out
cmc
jo
sarl
jno
mov
mov
sbb
cmp
jae
cmpsl
xchg
cmp
jo
push
adc
out
fsubrl
add
mov
lock
dec
pop
mov
and
pop
out
out
xrelease
adcl
sbb
sbb
out
pop
add
repnz
jno
lret
ss
iret
xchg
push
out
test
xchg
inc
mov
add
nop
xchg
pop
cltd
sub
and
std
mov
push
xor
ss
jb
arpl
out
sbb
or
inc
roll
mov
sbbb
test
xlat
fisubrs
out
aam
mov
adc
adc
and
or
xchg
push
aad
xchg
repz
lock
mov
cs
lret
sub
aas
xor
dec
fwait
rorl
adc
loopne
cmp
push
xchg
dec
or
orb
js
lret
xchg
mov
inc
cld
mov
cli
xorb
cld
xor
mov
jg
mov
ficompl
fs
ja
mov
rorb
mov
sub
xor
sub
lea
push
pop
push
mov
arpl
mov
test
cld
cld
jg
in
xor
rolb
fsts
cld
mov
into
mov
loopne
loop
in
or
cltd
or
or
into
mov
push
in
out
adc
push
sbb
outsl
scas
mov
mov
jae
or
mov
jecxz
or
leave
mov
adc
lea
xchg
jae
mov
fidivs
mov
mov
xchg
or
dec
jo
mov
mov
loopne
xchg
mov
testl
cmc
add
cwtl
testl
or
jbe
rorb
lock
jo
and
stc
mov
pop
mov
inc
jo
mov
cmp
or
xchg
xchg
jo
pop
pushf
or
mov
or
in
mov
or
mov
sbb
mov
mov
pop
jecxz
adc
xor
add
sbb
lea
xchg
nop
mulb
or
js
sbb
or
sbb
mov
xchg
cmp
add
idiv
out
pop
or
cltd
mov
dec
mov
enter
nop
mov
or
or
jns
decl
xchg
push
rcll
xchg
rorb
cmpsl
pop
cld
stos
mov
push
inc
roll
mov
or
mov
cmp
mov
or
adc
push
rolb
cmpsl
into
cld
clc
lea
cmp
lcall
xor
mov
aad
push
xor
or
and
and
lea
mov
xchg
xchg
lock
mov
mov
mov
add
mov
or
cld
cmp
nop
fdivrp
xchg
outsl
popl
xchg
or
mov
or
scas
mov
or
adc
nop
jmp
mov
jb
out
mov
lds
jp
cmpsl
subl
repnz
mov
pop
icebp
mov
dec
xor
mov
dec
pslld
decl
fidivrl
js
les
orl
cmp
jmp
ds
loopne
loop
pop
mov
or
rcr
or
sahf
mov
in
out
cmc
mov
or
adc
pop
mov
or
lret
js
mov
pop
cld
rolb
or
mov
adc
sub
and
or
cmp
add
adc
ja
mov
loopne
sbb
decl
aam
jle
inc
loopne
aam
sahf
sahf
nop
mov
xchg
out
pop
add
les
xchg
or
jo
mov
or
mov
and
xchg
mov
or
test
pop
push
test
into
mov
cmpsb
cli
loop
cmpsl
add
sbb
test
pop
or
mov
cli
mov
out
out
add
bt
push
and
push
bsr
sub
push
or
sar
push
cmc
btc
adc
mov
rol
rol
mov
jae
push
shl
shl
mov
sar
rol
inc
sub
lea
sets
lods
rol
not
not
cmc
not
rcl
pushf
rol
shl
sar
setno
stc
add
pusha
push
not
mov
not
setae
inc
call
pop
cs
push
aad
fdivrp
stos
stos
sbbl
cmp
repz
pop
and
in
pop
jge
sti
ret
je
push
jl
cmp
ret
pop
jnp
mov
xor
add
idiv
popl
std
or
or
ret
sbb
mov
dec
add
loope
mov
cli
push
and
sahf
scas
ret
cs
ljmp
insb
mov
and
lea
jmp
pushf
movb
lea
jbe
cmc
and
sub
test
sar
bts
jmp
jmp
movl
pushf
mov
lea
jmp
pushf
lea
jae
pushf
mov
jmp
lea
jae
pusha
jmp
movb
movl
pushf
pushf
push
pushl
popl
pusha
pushl
push
movb
pushl
ret
pushf
pushf
test
sub
call
jb
pop
jae
mov
ljmp
push
mulb
rorb
ss
push
mull
clc
xchg
pand
loopne
popa
lock
push
jmp
mov
outsb
nop
fbld
adcl
fwait
repz
sub
lret
and
xchg
inc
das
adc
pushl
lret
mov
test
lcall
outsl
push
add
jge
outsb
stc
cmpb
adc
push
ror
in
rclb
shl
pop
dec
xchg
push
scas
cs
scas
or
fs
inc
leave
clc
mov
jne
and
cwtl
mov
bndstx
mov
cmp
xor
daa
cmpsl
push
into
int
roll
jmp
imul
lds
pop
cmp
add
mov
adc
call
bswap
pusha
movsbw
mov
seto
lea
push
xchg
lahf
pushl
popl
not
cwtl
mov
pushf
pop
lahf
call
stc
jp
pushf
or
push
movw
lea
je
cmc
clc
cmp
pushf
pushl
ret
movb
call
cmp
call
lea
jae
mov
pusha
jmp
mov
jmp
mov
push
dec
cmp
pushf
arpl
inc
pop
test
add
and
dec
ss
sbb
push
adc
scas
mov
repnz
or
clc
inc
adc
jl
in
je
jns
pop
dec
pop
pop
cmp
mov
xor
jo
mov
pop
push
aaa
or
cwtl
jbe
das
add
test
sbb
add
sbb
cmp
mov
sbb
push
pusha
mov
jmp
test
push
int3
lahf
push
movswl
test
shrl
mov
or
push
rol
adc
jbe
inc
cs
sub
into
or
ja
daa
xor
sub
out
mov
jmp
cmpsl
mov
in
shlb
sub
cmp
rcrl
enter
repz
jmp
push
lea
call
jmp
call
mov
add
pushf
not
call
lea
je
pushf
pushf
push
pusha
mov
jmp
xchg
bswap
cwtl
pushf
pushl
popl
call
call
mov
jmp
or
inc
pop
je
mov
cmp
mov
mov
pop
mov
je
adc
dec
in
movsl
lahf
fimull
and
lret
cmpsb
mov
fildll
mov
lock
ss
and
inc
scas
pusha
loop
jge
mov
aam
loopne
ret
adc
scas
dec
mov
fdiv
scas
stos
inc
dec
rorb
icebp
lods
push
and
mov
adc
sub
pop
push
add
cli
fmull
les
add
or
test
cmc
test
movb
mov
call
lea
ja
xor
rcl
add
sub
stc
ror
add
sete
pushf
mov
shl
pushf
pusha
mov
mov
bt
pushl
jmp
out
lcall
cltd
insb
inc
sub
loopw
push
out
mov
adc
into
inc
and
icebp
cmpsb
addb
js
or
push
pop
cmp
jmp
add
add
cmc
add
in
call
pushf
lea
ja
sets
inc
pushf
seta
inc
pusha
inc
lea
shr
xchg
aam
bsr
rcl
aas
mov
cmc
mov
call
mov
call
callw
xchg
push
in
mov
sahf
mov
in
adc
dec
push
jns
not
fnsave
mov
sbbl
ficomps
imul
cmp
int3
lods
cltd
push
adc
pop
bound
int3
mov
pushf
int
cmpsl
inc
mov
shrl
daa
xor
fs
je
test
add
pusha
pusha
cmp
jmp
mov
inc
shl
mov
ror
add
shrd
rcr
add
shr
jmp
ror
rol
bt
test
adc
add
dec
not
not
inc
pushl
mov
jmp
xchg
les
ret
sbb
mov
xchg
test
mov
fs
jg
add
shrl
mov
test
or
test
inc
lock
inc
mov
mov
leave
xor
mov
in
dec
fwait
xchg
das
mov
push
mov
loope
push
mov
test
fbstp
xchg
sbb
mov
jo
cmc
scas
sub
pop
mov
push
and
test
sbb
lds
dec
mov
ds
loop
pop
adc
mov
imul
xadd
aaa
add
aas
or
adc
pop
pushf
cmp
sti
xchg
mov
cmpsl
mov
xchg
mov
clc
add
add
inc
cs
cmpsb
fistpll
add
leave
insl
xor
inc
adc
scas
sub
pushl
jle
cmp
fld
xchg
outsb
ja
add
jmp
sbb
andl
test
jmp
fstpl
or
add
loope
inc
xchg
or
push
jae
and
notb
lea
jno
cmp
pop
or
pop
sbb
sub
ret
jae
or
mov
mov
mov
pop
test
lcall
lcall
inc
pop
sbb
fisttps
mov
cli
mov
mov
sub
push
cmp
les
inc
and
cmpsl
icebp
lea
orl
in
sbb
xlat
xchg
outsb
mov
jge
insl
arpl
add
shll
enter
add
repnz
dec
lea
jb
bt
pushf
cmp
cmp
pusha
pusha
call
popf
dec
adc
sub
test
mov
dec
std
in
iret
orl
lret
xlat
insl
pop
and
insb
push
das
xchg
dec
sti
scas
jns
inc
loop
cmp
sbb
or
inc
sub
call
aad
push
sbb
jmp
and
mov
cmpsb
outsb
into
and
fmul
lret
clc
shlb
ss
mov
rcrl
test
dec
push
jmp
jp
sub
mov
jb
ret
fs
add
test
popa
call
shr
and
call
push
lea
je
call
pushf
insl
jb
adc
sub
je
aaa
in
mov
ffree
mov
cmpsl
mov
je
addr16
aam
test
iret
fs
xchg
gs
sahf
mov
mov
ret
je
xchg
ret
daa
mov
inc
mov
not
mov
xchg
repnz
add
andb
dec
mov
and
push
mov
scas
mov
in
inc
into
push
cmpsl
cmp
pop
in
rclb
loopne
adc
mov
add
and
push
jecxz
and
jecxz
scas
mov
add
ja
fwait
mov
fnstcw
out
rcrl
and
push
inc
nop
rcrl
ja
inc
xchg
or
sti
mov
fcomps
add
dec
jle
mov
lea
lea
pusha
xchg
pushf
bswap
pushf
pushl
popl
lahf
bswap
pop
mov
mov
movl
push
bswap
lea
call
push
test
push
sub
push
pushf
cmc
bt
cmp
push
pushl
lea
jae
pushf
lea
jmp
pusha
lea
call
pusha
jmp
loop
test
jge
pusha
add
scas
mov
xor
movsl
out
cmp
pop
roll
mov
jbe
scas
adc
repz
outsb
fadds
xlat
addr16
jo
bound
or
add
adc
adc
fstpl
push
daa
mov
shlb
movsb
push
iret
sahf
imul
fldenv
or
adc
add
lret
dec
adc
jnp
insb
sahf
outsl
call
imul
arpl
jp
jns
push
sarb
push
nop
out
mov
cmpsl
lahf
js
dec
lret
sarl
test
fimuls
add
in
clc
cmc
test
cmp
or
push
lea
je
movsbw
not
movsbw
jmp
jmp
add
xorb
jne
ret
std
in
rcrb
fwait
dec
push
rol
adc
push
je
aad
shrb
cmp
pop
sbb
push
scas
loopne
mov
xor
push
jbe
push
push
lcall
daa
jns
fnstsw
mov
push
lods
movsl
out
decb
mov
inc
in
sbb
push
cli
jge
inc
adc
int
in
mov
push
test
mov
out
insl
icebp
push
sub
es
fsub
dec
bound
inc
push
xor
iret
shlb
inc
jbe,pn
jae
sbb
nop
jmp
xlat
and
in
jp
outsl
fsub
in
lds
es
jle
xor
xor
imull
inc
add
xchg
add
inc
aam
iret
scas
cmpsb
je
mov
loopne
dec
xlat
mov
mov
push
dec
div
fwait
or
mov
push
jnp
push
out
inc
add
mov
pusha
xor
sub
repnz
pop
mov
iret
imul
cltd
mov
dec
adc
cmp
push
dec
je
dec
adc
stos
ss
adc
aam
movzbl
cmpsb
mov
pop
inc
mov
inc
cmpsl
je
mov
jnp
mov
jb
sbb
sti
push
dec
push
and
fisubrs
loopne
or
ss
cmp
shlb
mov
and
ds
aaa
xor
add
loop
mov
cmp
cs
add
ficoml
or
sub
cmpsb
jl
jb
mov
dec
sub
xchg
fnstsw
enter
bound
cmc
fstl
jns
out
sahf
pop
xor
negb
push
inc
and
inc
notb
and
cli
inc
test
cmp
std
jmp
pop
lods
lock
add
add
jnp
test
push
cmp
push
enter
pop
cltd
pop
movaps
sahf
shr
jb
or
pop
out
inc
mov
and
clc
mov
jecxz
insb
add
stos
jb
xchg
mov
call
and
cmp
lret
sub
lahf
cltd
test
fldt
fcom
mov
pop
mov
addr16
movsl
xor
in
jmp
dec
dec
aad
pop
cmc
insb
inc
nop
jns
push
fimuls
stc
loopne
std
adc
sub
scas
pushf
xlat
daa
and
pusha
mov
iret
pusha
push
cmp
aad
out
outsb
addb
lcall
aaa
test
pop
dec
mov
cmp
dec
xchg
lock
xchg
testl
add
mov
xor
xor
and
push
xchg
adc
addl
je
xchg
fs
add
and
jmp
ficoms
call
pusha
pushf
lea
jno
pusha
lea
call
push
pusha
lea
jne
lea
not
lahf
movzbw
mov
pusha
lea
jmp
or
cltd
test
mov
fsts
je
sbb
cltd
jno
jno
shrl
ds
xchg
ss
mov
cmp
jbe
mov
jns
inc
imul
mov
fsubrl
inc
es
or
cmpl
mov
xor
and
or
jae
pusha
pusha
pushf
movl
push
push
pushl
mov
lea
jmp
jmp
lea
je
pushf
jmp
pushl
push
mov
call
addb
in
sub
dec
inc
out
xchg
jb
psubsb
jne
dec
test
pop
imul
pusha
xchg
notb
in
fs
jbe
xor
mov
ljmp
icebp
ret
or
pushf
jl
in
mov
iret
in
insb
dec
fs
rcrl
pop
xchg
in
icebp
scas
jb
push
jb
mov
cmp
adc
add
adc
pushf
pushf
lea
jmp
lea
ja
inc
sub
add
rol
add
sbb
not
ror
mov
dec
neg
test
pushf
mov
cmp
movb
repnz
pushl
pushf
movb
pusha
lea
jne
call
push
dec
add
adc
loope
in
mov
mov
jecxz
pop
out
into
cmp
cli
mov
inc
push
sbb
ja
dec
ja
popa
push
mov
iret
mov
stos
insl
jne
or
repz
sub
and
dec
cmp
test
inc
sahf
pop
out
icebp
add
inc
xchg
add
xor
popa
cmp
sub
popa
cs
test
leave
mov
add
adc
add
clc
pop
or
dec
cmpsb
repnz
lea
sub
lea
and
or
jmp
test
add
inc
push
dec
push
xor
mov
mov
or
dec
aaa
data16
popa
mov
fwait
or
cmp
inc
or
rclb
mov
out
add
mov
jmp
lea
je
push
bt
pusha
stc
sub
cmp
cmp
pushf
cmp
mov
push
push
pushf
lea
ja
bt
pushf
call
imul
push
test
arpl
adc
nop
cmpl
popa
clc
sub
mov
jo
jmp
jo
mov
cld
dec
icebp
xor
add
inc
inc
bound
clc
cmp
add
push
jns
xchg
scas
cmp
cld
nop
aaa
fiadds
mov
pop
push
xor
aaa
in
and
pop
xor
lods
fidivl
and
std
jge
std
clc
lret
push
popa
scas
fs
fbstp
int3
mov
pusha
fucompp
sub
stos
sbbb
xlat
push
ret
jns
push
sub
sbb
ret
lock
das
mov
out
fwait
lock
test
add
das
mulb
in
ds
outsl
inc
out
adc
lods
or
cwtl
inc
icebp
aad
xchg
loope
popa
scas
fs
addr16
jmp
psraw
rol
mov
lea
cs
jmp
lea
jae
not
push
mov
pusha
inc
pushf
mov
pushf
call
call
call
pushf
imul
cmp
pushf
add
pushf
lea
jmp
jmp
sbb
shr
icebp
mov
xchg
xchg
cs
dec
cmpsl
dec
lods
xlat
fldl
or
inc
adc
mulb
dec
and
pop
xorl
orl
aaa
jg
popa
pop
std
mov
cwtl
fcomps
out
xor
xchg
cmp
push
mov
or
cmp
dec
ficomps
mov
and
push
cmp
gs
lea
or
and
sbb
xchg
push
fwait
std
int
jb
fiadds
bound
mov
or
adc
xor
pop
add
nop
aas
sbb
adc
lds
mov
movl
pusha
pushf
mov
movw
lea
jmp
stc
rol
fcomps
adcl
xor
stos
outsb
push
or
scas
adc
cld
fsubp
xor
and
lcall
push
nop
hlt
sarl
sub
leave
cld
dec
movsl
iret
int
sar
mov
movsl
enter
push
imul
inc
pop
xorb
mov
movsl
lret
clc
adc
fdiv
enter
pop
and
add
hlt
stos
ja
arpl
and
aam
jb
mov
pop
dec
dec
inc
jg
dec
loope
loop
lods
adcb
stos
cwtl
jb
cmp
xchg
inc
fdivrl
add
js,pt
xchg
mov
push
je
outsl
pop
add
popa
mov
test
push
xor
jns
out
scas
mov
jecxz
jmp
daa
jg
std
mov
movsl
mov
sub
test
and
lods
clc
add
mov
cpuid
nop
jmp
movw
pushl
popl
mov
pushl
ret
push
push
lahf
pushl
lea
push
pushf
movl
movw
pusha
mov
jmp
aaa
enter
add
add
add
add
add
add
mov
adc
add
add
add
add
mov
out
gs
inc
or
and
lcall
into
push
dec
shr
mov
xchg
fnstsw
bound
xchg
in
cmp
lcall
in
in
mov
and
inc
fldt
or
xor
lcall
xchg
inc
loop
add
sbbb
mov
add
mov
pop
add
sub
arpl
loopne
adc
sub
xchg
rclb
shr
sti
mov
mov
jbe
lret
jp
lret
lahf
inc
pop
hlt
mov
call
adc
lds
mov
int
adc
cltd
lds
fwait
or
repz
pusha
test
data16
leave
aam
loope
popf
stos
pop
ja
test
dec
aad
xchg
dec
push
xchg
ror
lret
push
int
adc
shl
and
xchg
cmp
push
cmp
adc
incb
mov
sti
xchg
pop
pop
xchg
outsl
sbb
fsts
mov
mov
jecxz
pop
mov
enter
out
adc
sti
cmp
aam
inc
jb
mov
ja
xchg
addr16
inc
out
fadds
jb
fsts
push
mov
lods
jle
fstl
adc
lea
arpl
gs
push
iret
lret
dec
dec
pop
cld
fwait
lahf
sub
or
xchg
or
cmp
jl
dec
mov
inc
add
ret
dec
push
inc
or
cmp
dec
out
mov
sbb
cmp
shl
cli
xchg
add
rcrb
shlb
mov
xchg
cmp
xor
jg
xlat
jns
cmp
iret
jmp
mov
dec
mov
mov
jl
sub
adc
mov
xor
iret
test
outsl
xor
jmp
fimuls
jne
imul
cmp
aas
mov
cmp
cmpl
fbstp
dec
lods
inc
js
xor
cwtl
clc
movsl
fs
mov
loop
xchg
js
sub
les
sbb
aad
jnp
add
jne
loopne
xlat
xchg
push
or
push
stos
inc
sbb
add
mov
stc
cmp
lock
cltd
stc
icebp
xlat
push
push
iret
gs
andb
stc
adc
adc
or
xor
mov
mov
fiadds
ja
jp
lods
mov
dec
or
shrb
sub
xorb
call
lret
and
enter
xchg
xchg
sbb
negb
test
mov
mov
adc
arpl
pop
jecxz
mov
jecxz
out
fisttps
aaa
movsl
mov
daa
jmp
push
fcmovu
fsubrs
xlat
xorb
les
ret
cmpl
and
std
aam
arpl
jmp
push
xor
pop
push
jb
mov
dec
jo
dec
out
inc
and
sbbb
push
or
jno
aaa
xchg
xchg
lahf
fcmove
mov
add
ss
aas
rcrl
mov
and
adc
out
or
inc
push
xchg
scas
jns
fs
xchg
loope
add
addr16
aaa
popf
dec
std
iret
sbb
pop
repz
pop
call
cmpsl
ss
pop
shl
mov
push
cmpsl
or
cli
mov
and
lea
cmp
xor
pop
lea
jecxz
push
clc
mov
xchg
adc
lods
or
push
mov
or
iret
adc
ss
or
sub
xlat
shrl
dec
aam
sti
clc
fsubp
adc
orb
cmp
inc
push
cmpsl
int
pop
enter
or
pusha
or
fstl
and
lods
ss
xchg
sbb
mov
push
jp
inc
push
push
addl
std
in
jle
mov
push
fsubl
enter
inc
sub
push
xchg
jmp
xchg
stos
adc
adc
movsb
test
cwtl
mov
orps
outsb
pop
cwtl
call
and
mov
push
lahf
add
insl
xchg
shrl
gs
sbb
imul
pop
bound
sbb
dec
jne
fs
push
decl
rclb
pop
adc
jnp
mov
adc
pop
xchg
or
pop
push
jge
mov
mov
jge
pop
inc
pop
loopne
mov
lea
stos
rcrl
cmp
add
dec
in
adc
jbe
repnz
dec
lret
cltd
dec
push
xlat
lret
and
sub
jne
add
mov
xchg
loop
mov
shlb
pushf
mov
and
push
mov
mov
push
fidivrl
rcrl
jg
lock
adc
cmp
and
mov
enter
aam
add
jbe
sahf
sbb
out
sub
fwait
sub
jmp
sub
fdivrs
inc
and
inc
or
nop
outsl
incl
pop
xchg
stos
sbb
ljmp
xor
jge
cli
jecxz
inc
or
enter
xchg
fs
mov
orl
mov
sbb
pop
push
jg
push
fidivs
sub
icebp
out
icebp
xchg
jno
ljmp
xor
cmpsb
sbb
jbe
movsb
or
and
dec
arpl
rorb
push
xor
out
mov
lock
cmp
mov
ret
ds
xchg
inc
nop
sahf
mov
mov
imul
idiv
and
jge
iret
push
or
mov
pop
ja
mov
cmp
and
push
out
adc
fcompl
mov
arpl
sbb
inc
dec
xchg
xor
xlat
xchg
leave
mov
bound
scas
and
imul
pop
loopne
sub
shll
add
dec
call
fwait
sbb
add
out
and
cld
mov
jl
aaa
into
dec
xchg
jo
mov
es
push
cmp
stos
cmp
cmpsl
sub
loope
inc
sti
cltd
pop
cmp
call
fsubp
test
das
insb
mov
out
or
call
rcrb
jbe
std
cs
nop
outsl
imul
orb
pushf
lea
cmp
in
hlt
test
out
popa
jmp
ss
inc
xchg
in
add
push
jne
sbb
xor
and
out
push
mov
outsb
outsl
orl
dec
cmc
sub
or
or
adc
cmp
inc
adc
add
scas
push
nop
sbb
jge
lods
adc
add
inc
lea
jne
or
cmpl
stos
in
pop
mov
ret
sbb
int
add
icebp
mov
push
andb
pop
or
lds
ljmp
xchg
xchg
call
jnp
inc
mov
or
jg
fdivrl
rolb
sbb
inc
mov
mov
adc
stc
push
or
mov
lock
mov
stc
sub
call
testl
daa
inc
mov
stos
inc
jmp
cmove
mov
addb
xchg
push
xchg
jo
adc
pop
mov
fs
pop
ljmp
dec
or
jb
add
jmp
ss
xchg
fistpll
sbb
arpl
data16
pop
testl
push
pop
into
pop
leave
add
scas
enter
pop
enter
pop
pushf
ret
cmpb
pop
sub
pop
xchg
dec
outsb
addr16
cmpsl
lds
loopne
dec
mov
shlb
add
loopne
add
jp
jae
mov
leave
mov
test
sub
jno
cmpsb
pop
int
xor
mov
mov
fimuls
sbb
pusha
xchg
adc
shl
sar
sub
jno
sahf
in
dec
loop
fcomp
lds
outsb
mov
out
call
shlb
jecxz
mov
mov
or
add
inc
fcompl
mov
data16
daa
pusha
add
and
dec
cmp
mov
sub
mov
dec
mov
mov
orl
pop
mov
repz
out
or
icebp
mov
ja
xchg
lods
push
xor
hlt
mov
cmc
jo
push
ret
mov
stos
shll
adc
roll
mov
xor
adc
js
loope
lcall
sahf
fcoml
inc
mov
mov
and
sub
mov
mov
imul
cmp
push
mov
imul
push
fisubs
xchg
mov
inc
sub
mov
fisubs
aas
and
xor
stc
outsb
mov
imull
mov
inc
leave
jl
and
and
out
rcr
imul
sub
shll
add
mov
sbb
jmp
and
mov
dec
cmpsl
icebp
into
je
push
jle
mov
ficoms
dec
mov
andb
dec
fwait
das
pushf
mov
mov
jle
cmp
iret
lods
leave
std
in
sbb
cmp
adc
hlt
ja
jns
loopne
xor
mov
mov
fnstcw
jge
pop
mov
dec
pop
std
fsubl
scas
jo
shll
repz
gs
in
mov
mov
lret
pushf
loop
xor
ret
les
rdmsr
es
xor
mov
dec
movsb
xor
mov
test
or
fildl
ss
int3
ss
dec
or
nop
push
cmc
xchg
xchg
jg
add
icebp
fsubl
sub
jo
lret
or
test
popf
jne
int3
mov
das
js
cmpsl
mov
out
xchg
aam
testb
loope
pop
jp
cwtl
jg
and
pop
mov
inc
mov
mov
pop
std
inc
fcmovne
and
in
cltd
int
inc
repnz
sbb
sbb
cmp
xor
pop
mov
rcrl
pusha
pop
aaa
xchg
jl
ljmp
pop
inc
adc
inc
mov
xor
cwtl
xor
mov
adc
gs
pop
js
dec
in
dec
adc
mov
in
stos
adc
add
ret
mov
dec
pop
cmpb
push
fildll
iret
or
xor
pusha
push
mov
mov
js
sbb
xlat
and
mov
dec
lock
shrb
clc
cmp
orl
lea
test
pop
mov
push
and
sub
fsubrp
fs
inc
adc
data16
or
loop
fwait
stc
cmpsb
js
inc
in
xchg
dec
mov
sub
add
add
test
push
push
clc
clc
or
call
cltd
filds
inc
sbb
jbe
and
cmpsl
movsb
lea
adc
in
jecxz
xchg
es
in
inc
jnp
xchg
gs
pop
adc
cmp
pop
in
pusha
jno
loopne
les
jns
aaa
movsl
pop
mov
jmp
lds
pop
mov
inc
sub
out
xchg
jb
stos
or
pusha
shr
jmp
mov
bswap
movzbw
lea
jl
push
jmp
cmp
pushl
mov
mov
lea
ja
sub
cmc
cmc
sub
lea
adc
test
add
ror
adc
rcl
mov
stc
mov
pushf
cmc
repnz
call
push
movl
pusha
pusha
lea
jnp
push
push
mov
push
pushf
lea
jmp
jmp
sub
movsb
xor
shl
fidivs
shlb
pop
shlb
insl
jl
mov
mov
dec
lock
cld
adc
xchg
jbe
sub
jecxz
ljmp
ret
lds
lds
test
mov
cli
adc
fisttps
pop
out
loopne
movsl
lcall
sub
pop
dec
icebp
mov
rolb
int
mov
fsubrs
xchg
std
rcll
push
mov
mov
int3
push
cs
js
lock
sbb
adc
imul
sbbl
popf
jae
jmp
xchg
fldenv
lret
xorl
fsubp
mov
fsqrt
xchg
test
xor
mov
inc
and
push
repnz
pop
sub
out
push
pop
call
insl
daa
std
mov
fsubrs
cmp
xchg
dec
cmp
push
bound
je
sbb
fiaddl
sbb
add
lret
popa
in
imulb
sbb
adc
push
out
jge
test
int
pusha
mov
in
rclb
out
mov
push
addr16
popa
inc
xor
loope
outsb
bound
sbb
into
lds
jp
adc
or
fsubrs
lret
xor
or
mov
push
lock
stos
fnstcw
in
xchg
jo
cmp
dec
add
iret
rcr
mov
cmp
lret
and
popa
push
fildll
inc
pop
or
inc
je
lods
jmp
inc
push
mov
add
and
int3
mov
jno
paddusb
add
xchg
mov
inc
xchg
inc
mov
pop
mov
inc
sti
mov
dec
push
pop
mov
pop
xsavec
jns
es
test
loop
add
mov
shr
xchg
lods
add
jecxz
xorb
pop
cmpsl
addr16
sub
sbb
out
sbb
push
sub
imul
jno
les
add
jno
inc
xchg
lds
add
dec
cmpsb
inc
push
sub
pop
mov
mov
mov
mov
xchg
push
fmuls
clc
ret
imul
je
push
sbb
cs
ret
push
xchg
in
ja
sub
fsubrp
sbb
js
sbbb
das
pop
lods
fstp
mov
idivb
xchg
pop
pop
sbb
or
add
cmp
inc
mov
iret
mov
adc
movsl
mov
and
push
cwtl
in
adc
sti
mov
flds
in
mov
insl
pushl
aad
loop
push
scas
inc
mov
cs
in
xchg
push
dec
cmpsb
or
inc
imull
inc
mov
cltd
js
inc
out
shlb
lahf
loop
sub
xor
and
dec
idiv
shlb
xor
cmp
mov
adc
and
push
out
or
stos
push
aaa
add
pop
aaa
nop
jp
loopne
cmc
add
dec
out
jno
pop
add
lret
pop
jmp
bound
scas
fisubs
sbb
lods
incl
subb
mov
mov
inc
aad
xor
push
and
je
xor
repnz
lea
add
dec
fdivp
and
lahf
sub
std
rorb
and
xor
sbb
fdivl
lods
jns
or
sub
aam
jge
cmpsl
pop
pusha
call
add
pusha
mov
es
mov
xchg
rcrl
testl
data16
stc
xor
loopne
inc
xchg
push
or
add
xor
lea
ror
ds
stos
loope
adc
fcompl
xchg
stos
aam
es
popa
jge
cmp
jmp
popa
in
and
xor
push
out
and
adc
and
pop
sbb
in
mov
shlb
int3
sbb
sbb
clc
lcall
push
mov
packssdw
xchg
lret
xchg
pop
xchg
rcll
sbb
loope
xchg
fidivrs
subl
inc
pop
xlat
xchg
popf
stos
pop
add
test
dec
pusha
hlt
jg
xchg
loop
scas
addr16
ja
push
xor
inc
xor
insb
sub
das
addb
xchg
out
jl
adc
lcall
andl
add
xchg
pop
add
and
cmp
mov
sub
jmp
dec
test
xchg
int3
lret
sbb
jne
lret
add
inc
js
jae
add
push
sub
pop
cmc
sub
dec
jbe
mov
sub
sub
insl
xor
ja
rclb
sahf
sbb
cmp
jmp
loopne
push
pop
jno
sbb
testl
cmp
cmp
ja
mov
je
inc
jle
push
mov
mov
jo
cmpb
cmp
pop
div
mov
ret
sahf
int
leave
dec
ret
insb
adc
jge
add
fcmovne
mov
test
sub
cmp
sbb
adc
push
cld
mov
xchg
into
sti
dec
out
jb
push
stos
rol
je
and
int3
add
out
xorb
sbb
out
outsb
in
arpl
xchg
adcb
xchg
jbe
lea
mov
pop
adc
bound
sbb
cltd
cmpsb
lods
in
sub
ss
iret
lds
add
add
xchg
loope
sahf
jno
fldt
jmp
xor
pushl
lea
jne
bswap
movb
pusha
bswap
mov
movsbw
lea
call
xchg
mov
xchg
mov
sbb
cltd
adc
idiv
icebp
outsl
jno
ja
sbb
mov
pop
test
push
adc
scas
outsl
mov
cs
push
out
jae
mov
jnp
scas
ret
outsl
ja
lods
sar
xor
or
sub
lds
jo
xor
pop
mov
mov
lods
stos
cmc
test
movsb
mov
into
scas
mov
mov
jl,pt
ss
movsl
and
or
or
mov
sar
cmp
xchg
pop
scas
sbb
jo
mov
cmp
mov
and
xchg
xchg
jo
sahf
movsb
xchg
xor
dec
lret
shll
sbb
mov
mov
inc
ds
ss
daa
mov
cli
fwait
mov
inc
inc
enter
ds
scas
test
popa
pop
lods
hlt
out
daa
inc
loope
jle
mov
cs
xchg
xchg
mov
xor
inc
sarb
stos
daa
and
and
mov
scas
xor
out
sbb
mov
outsb
xor
test
in
aas
ja
mov
add
stos
sub
nop
das
xor
stc
lret
push
repnz
shll
stc
xor
pop
mov
inc
adc
push
adc
lock
inc
enter
push
loop
scas
pop
lcall
pop
dec
dec
outsl
stc
inc
cmp
stc
lock
pop
ret
add
test
stc
in
and
iret
and
or
repnz
inc
cld
inc
into
inc
mov
das
lcall
ret
out
cmp
aas
fistpll
fs
sbb
sub
cmpsb
pop
test
loope
das
xor
mov
ret
stc
mov
repnz
ss
sub
insl
ljmp
mov
lods
in
andb
cmp
and
inc
outsl
cmp
xchg
dec
push
nop
stc
ja
sahf
mov
pusha
mov
lock
fwait
mov
dec
mov
aas
cmp
nop
adc
nop
push
mov
fstl
lds
inc
mov
mov
sub
add
stc
out
scas
stos
movsl
and
jae
xor
jnp
lods
out
mov
das
stc
das
xor
adc
stos
xor
scas
pop
lret
stc
xor
psubw
cli
mov
xor
cwtl
mov
stc
stos
lock
add
dec
xchg
mov
rclb
sar
and
outsl
xor
dec
pop
test
push
pop
scas
out
aad
and
nop
dec
inc
aas
rcll
xlat
xchg
nop
aas
inc
xchg
adcb
aaa
stc
testl
and
ss
ret
mov
and
into
sar
mov
jno
stc
inc
addr16
pop
mov
sbb
cmovno
xchg
sub
sbb
test
jae
addl
sbb
xor
and
mov
stc
aas
xor
add
lock
sarb
push
xchg
inc
push
rolb
mov
lds
mov
test
push
adcb
call
pop
cmpsl
and
pushf
test
cmp
cmp
xchg
aaa
sub
ret
shll
vpmacsdd
fmul
mov
sbb
movsb
sub
jns
stc
lahf
sbb
pushf
test
addb
adcb
addb
cmp
lret
and
and
push
dec
and
fnstsw
and
stos
movsb
aas
mov
cmpsb
stos
xlat
add
push
rorb
movsb
sahf
test
pop
ja
xor
je
sti
push
inc
insb
xchg
xor
testl
dec
mov
das
pop
nop
lcall
aaa
lahf
pop
xor
jae
and
test
mov
negl
stos
scas
lock
mov
and
pop
xchg
jb
faddl
stc
mov
outsl
cmp
cld
sub
mov
outsb
test
lcall
mov
mov
nop
mov
and
adc
push
ja
lret
push
and
xor
push
cmp
mov
test
push
scas
xor
add
xor
stc
cmpb
test
mov
test
fs
inc
sti
xor
adc
test
push
rol
js
and
adc
cmp
fistps
loop
mov
jae
xor
xor
or
sbbb
and
pop
mov
adc
and
sbb
inc
aad
stc
xor
test
mov
xor
loope
mov
pushf
lret
adc
mov
scas
sbb
sbb
xlat
in
mov
dec
push
faddl
or
xor
ds
mov
sbb
lcall
xchg
xchg
xor
cmp
pop
clc
mov
inc
scas
sub
pushf
add
push
iret
and
and
pop
cmp
xor
lods
xor
clc
xor
movntps
xor
xor
ja
ja
xor
mov
lock
mov
xor
sbb
test
push
push
lcall
popa
or
test
rorb
cld
xor
ret
nop
mov
and
xchg
nop
popl
in
aaa
inc
mov
push
xor
pop
xorb
enter
and
jmp
mov
mov
sub
sub
mov
mov
and
mov
sub
sbb
ret
adc
xor
xchg
push
enter
nop
cmpsb
cmpsl
lret
sbb
mov
inc
sub
xorb
and
jp
nop
mov
mov
dec
push
stc
mov
and
cmp
cmp
test
ss
jns
xor
mov
push
xor
js
xor
sahf
sbb
sbb
rcr
add
js
mov
mov
cmp
sbb
lret
inc
push
aas
scas
mov
loope
int3
or
xor
mov
imulb
scas
mov
movsb
aaa
stc
test
add
xchg
push
or
stc
adc
test
cmp
nop
and
ret
adc
xor
icebp
xchg
jae
aas
xchg
push
mov
icebp
mov
nop
xor
test
mov
hlt
cmp
sub
dec
xor
sbb
pop
out
xor
out
cmp
dec
sar
lcall
sbb
stc
pop
divl
test
xchg
xchg
test
inc
inc
out
cmp
sub
test
cmpsl
notl
out
lcall
push
je
and
xor
mov
add
and
add
push
aad
into
push
xchg
xor
mov
add
out
scas
orl
jg
movsb
mov
subb
xor
out
icebp
xor
icebp
test
insl
sbb
cs
mov
fwait
adc
test
pop
add
mov
test
movsb
cmp
mov
aaa
loopne
stos
andb
pusha
icebp
xor
ja
mov
add
stos
sub
lods
inc
icebp
call
test
jne
out
mov
add
inc
lds
xor
and
lahf
cmpsb
and
inc
lret
xchg
lahf
ja
out
xchg
iret
enter
popf
sbb
xchg
and
mov
mov
add
mov
notl
inc
push
mov
mov
sbb
adc
out
add
jns
cld
cltd
lods
out
pop
jo
xchg
icebp
inc
sbb
cs
fstpt
in
mov
mov
sar
adc
pop
mov
pusha
test
pushf
sbb
out
pop
and
sbb
and
test
fstps
push
aad
pushl
inc
sbb
iret
shll
xor
xor
cld
movsb
xor
icebp
or
mov
xchg
jmp
jo
sub
xchg
loop
shl
loopne
adc
rep
jg
mov
xor
out
mov
scas
sti
lods
lods
sub
test
test
xor
mov
out
mov
mov
lods
sub
test
jmp
mov
xchg
cmp
pop
mov
aad
lahf
fwait
mov
stos
lods
cmp
jnp
xchg
lods
mov
mov
test
xlat
pop
lods
mov
fildl
adc
or
cmp
out
repz
mov
enter
outsl
insl
into
adc
jo
lock
lret
cmpsb
mov
daa
fidivs
jae
jle
out
enter
lret
xchg
repz
mov
cmpsb
cmpsl
and
pop
and
push
pop
test
lahf
and
pop
loope
icebp
jle
push
sbb
test
repz
dec
in
inc
pop
dec
lcall
push
repnz
mov
lea
jle
sahf
lds
orb
push
cwtl
fdivp
adc
pusha
mov
nop
jno
and
mov
xchg
adc
xchg
outsl
jno
sar
lret
scas
adc
je
outsl
jae
test
mov
mov
mov
adcb
jno
mov
repnz
into
outsl
add
push
mov
jl
mov
repnz
jb
cmpsb
ja
mov
mov
mov
enter
mov
push
jg
idiv
or
mov
fwait
xchg
test
in
dec
inc
xchg
repnz
sahf
test
add
in
inc
cmp
sbb
loopew
rolb
andb
add
and
mov
scas
repnz
aad
out
mov
lret
sbb
not
ja
subb
cmp
in
mov
aas
xchg
pop
testb
shlb
mov
mov
sbb
xor
mov
and
cmp
out
cli
add
push
ljmp
into
lods
sub
mov
scas
sar
adc
repz
hlt
lahf
mov
add
cltd
jge
mov
mov
mov
xchg
and
push
cs
movsb
cli
and
test
jl
mov
xchg
loop
inc
jnp
xchg
clc
xchg
fldl
cwtl
mov
xchg
repnz
add
and
into
mov
xchg
cmp
mov
loop
mov
sbb
shlb
test
mov
jb
sbb
dec
adc
mov
orl
xchg
xchg
subb
adc
jnp
clc
clc
jne
push
gs
in
inc
push
outsl
popf
sbb
jbe
mov
mov
iret
ret
shrb
out
decb
xchg
pop
or
adc
mov
xor
hlt
sbb
or
cltd
sbb
mov
xor
sbb
js
fists
push
popa
cmp
pushf
jb
test
loop
scas
xor
xor
mov
sub
lock
push
test
cld
scas
adc
push
aad
addb
cld
mov
mulb
into
in
insb
das
inc
lods
int
hlt
dec
add
fs
aad
push
sbb
cmc
mov
fisubrs
jae
outsb
jns
inc
cmovo
cmc
jbe
or
xor
mov
jno
out
push
ficoms
cli
shlb
outsb
scas
add
shll
jnp
das
loopne
pop
jbe
jo
xchg
xor
cwtl
jp
repnz
sbb
outsl
add
sahf
aaa
clc
cwtl
cmp
test
in
adcb
pop
cwtl
xor
mov
in
js
pop
xor
into
js
je
outsl
push
xor
in
sbb
sbb
jmp
mov
or
repnz
jbe
and
mov
xor
mov
cltd
push
test
out
jp
sbb
mov
cmp
mov
xor
push
cltd
xchg
jbe
daa
jg
movsl
add
jmp
xchg
mov
mov
xchg
dec
fcompl
imul
ljmp
xor
lock
insb
xchg
cld
mov
jl
dec
rclb
aam
ljmp
mov
sti
jg
call
fnstenv
inc
ret
and
pop
divl
out
xchg
jbe
sbb
imul
xor
sti
xor
xor
or
mov
xchg
mov
loop
shlb
je
push
scas
or
fbstp
das
and
adc
jmp
xor
ficoms
dec
xchg
subb
pop
arpl
dec
repz
clc
enter
and
icebp
mov
or
das
adcl
sbb
aaa
add
mov
test
pop
jbe
subb
inc
jno
mov
arpl
or
xchg
pop
cmp
xchg
adc
mov
lret
into
jmp
and
cmpb
cwtl
cmp
mov
lret
cli
xchg
and
dec
shl
les
repnz
call
andb
clc
mov
orb
mov
cmc
cmp
btrl
pop
shl
repnz
ja
mov
or
or
xchg
and
cli
or
call
mov
mov
nop
sbb
or
repnz
pop
sbb
xchg
push
ljmp
mov
push
daa
jg
mov
cmc
cli
shrl
adcb
test
adc
mov
inc
loop
sahf
cltd
cli
dec
in
xor
fisttpll
lahf
sub
int
cld
fcoml
lock
mov
pop
inc
adc
shl
pop
stos
outsb
shlb
test
xor
and
push
ror
xchg
movsl
lahf
xor
adc
cld
addr16
scas
pop
cld
clc
fs
inc
shlb
fucompp
push
shlb
andl
and
cmpsb
and
scas
ja
cmpsb
and
mov
mov
popf
mov
mov
pop
xchg
fcmovu
cmp
sti
xchg
sbb
cld
sub
xor
sub
mov
imull
add
js
orb
mov
arpl
lahf
loope
dec
push
mov
test
inc
cmp
xchg
aam
rolb
pop
je
jmp
and
aad
aam
icebp
incl
xchg
xchg
and
rclb
xchg
sub
mov
jmp
dec
jecxz
lahf
and
outsb
cmp
jmp
fwait
clc
xchg
cld
xor
cmp
add
loopne
adc
xchg
xor
loop
clc
adc
iret
nop
loop
jnp
sub
cltd
mov
fs
inc
dec
pop
lds
es
xchg
das
dec
in
inc
lret
sahf
sbb
mov
mov
cmpsl
jle
mov
lret
push
popf
sbb
adc
loop
inc
call
hlt
hlt
sbb
adc
out
movsb
mov
testl
loop
lds
subl
push
ja
jns
dec
orb
aaa
jecxz
stos
sti
mov
jnp
mov
jnp
jae
mov
cli
ja
testb
xchg
pop
pop
mov
cld
cltd
or
loopne
dec
mov
cli
mov
cmp
cltd
int3
je
add
popf
aas
outsl
mov
jmp
mov
add
pop
movsb
test
pop
stos
rcl
popf
enter
outsl
outsb
add
scas
cmpsb
pop
inc
loop
test
pop
repz
cltd
sbb
xchg
hlt
add
fidivs
jg
daa
xchg
clc
mov
mov
clc
or
mov
nop
xchg
cltd
sbb
push
or
jnp
out
inc
mov
loop
imul
mov
cld
xchg
outsl
mov
loope
repz
fs
mov
dec
and
adc
mov
cmpsl
in
shll
jne
negl
add
mov
scas
scas
jbe
addr16
in
sbb
xor
cmp
mov
mov
sub
pop
lret
loopne
mov
scas
and
xchg
into
daa
sbb
lock
mov
mov
fmulp
testb
cltd
dec
das
das
sub
xor
mov
loopne
repnz
jnp
test
jae
mov
pop
xor
mov
sub
mov
stos
mov
mov
mov
push
xlat
inc
ljmp
xchg
jl
xor
hlt
imulb
sub
outsl
xorb
clc
orps
idiv
adc
pop
mov
mov
testb
ficoml
stos
mov
ja
fdivl
or
aad
xchg
adc
jnp
jns
popf
sbb
leave
fs
loop
push
scas
push
jl
into
aam
mov
orb
nop
or
xchg
add
sbb
mov
mov
out
mov
cmpsb
lock
mov
mov
outsl
ja
mov
sbb
jo
rcrb
jmp
sbb
push
adc
fdivp
and
and
cmp
xchg
outsb
mov
jns
repnz
call
sbb
mov
fdivr
mov
jnp
jo
fistl
jnp
or
sub
mov
or
xor
mov
arpl
ljmp
in
mov
xor
fcmovb
test
mov
adc
aad
mov
or
lahf
pop
shlb
outsl
adc
xchg
inc
add
sbb
and
ret
cwtl
stc
mov
jae
shl
lahf
sahf
mov
adc
mov
pop
daa
xor
xor
das
repz
pop
xor
stc
test
xor
cmpsb
push
pop
out
and
lods
adc
sbb
gs
cmp
cwtl
add
or
add
mov
mov
push
sbb
add
dec
scas
mov
hlt
add
xchg
into
repnz
pop
test
mov
addl
jnp
xchg
sti
xor
ljmp
cld
das
dec
popf
scas
outsl
repz
adc
xor
and
jne
add
out
push
jb
outsb
cmp
push
sbb
std
or
push
push
div
add
jne
and
int
test
xor
hlt
cmpsb
pop
sub
inc
jae
das
stc
popf
xor
mov
or
xor
fs
mov
jb
mov
lods
icebp
xchg
push
andl
push
xor
mov
push
imul
repnz
pusha
fstpl
in
jg
clc
mov
mov
outsb
adc
push
or
or
jbe
test
outsb
fadds
jbe
mov
xchg
in
lcall
loop
cmp
lcall
fwait
xor
arpl
hlt
mov
cmpsb
mov
sbbl
ds
mov
mov
stc
sbb
outsl
shll
and
sbb
lcall
clc
cld
mov
je
push
loop
xchg
and
push
testb
mov
ror
in
out
mov
loop
lret
in
mov
mov
rclb
fs
pop
loop
repz
inc
mov
xchg
shl
int3
sarb
popf
mov
adc
pop
add
imul
repnz
or
sub
pop
aam
push
cltd
movq
mov
int3
jb
stos
out
push
andb
mul
outsl
inc
into
pop
xor
shrl
loop
push
sbb
sub
sbb
mov
ljmp
jbe
hlt
mov
push
mov
jmp
jmp
sar
ja
testb
repnz
xor
cmc
cmp
andl
test
adc
test
leave
xor
push
roll
subb
imul
xor
mov
neg
xor
incl
cmpsb
jb
mov
clc
loop
icebp
rcr
iret
shrb
push
test
iret
test
fdivs
cmpsb
mov
jb
jmp
sub
inc
xchg
xor
cmp
xor
dec
jmp
jecxz
ljmp
jo
cmp
lods
ljmp
cmc
jmp
add
add
repnz
push
xchg
dec
imul
sub
adc
lock
fyl2x
popf
mov
loopne
repnz
shr
or
clc
xchg
notb
push
ja
jbe
loopne
pop
imulb
repnz
bound
fwait
sahf
sbb
lret
jnp
xchg
and
sbb
jge,pt
sbb
lods
mul
popa
jno
js
sbb
fmuls
icebp
pop
loop
fimuls
jae
and
js
jo
jo
xor
cmp
jnp
aam
mov
push
adc
mov
imul
jg
mov
xor
mov
jns
jno
fistps
xchg
fs
mov
cmp
xorb
addr16
jle
hlt
xchg
jae
or
jno
cmp
xchg
cld
hlt
or
test
xchg
lods
hlt
xor
push
xchg
xlat
xchg
add
and
mov
aaa
js
jno
mov
pop
mov
shl
mov
mov
mov
mov
mov
in
cmp
sbb
inc
sbb
jno
jl
dec
testl
lcall
and
packsswb
outsl
pop
out
or
std
negb
popw
sub
sbb
push
test
push
xorb
loop
movsl
std
inc
mov
and
xchg
jl
sub
push
imulb
jae
lahf
mov
push
je
inc
xor
and
jg
mov
out
gs
orb
cli
lea
sar
mov
stc
jo
loop
lea
xchg
in
mov
sbb
fisttps
dec
je
mov
xchg
mov
sbb
cmp
stos
inc
imul
andb
jbe
mov
sarb
or
xchg
cmp
decb
jae
jp
stos
fldenv
cwtl
incl
and
mov
xchg
jmp
loopne
jo
insb
xor
testl
jnp
jae
imul
pop
ret
or
xorl
jns
xchg
call
and
test
out
in
shlb
out
lods
mov
mov
or
sub
inc
add
cmpsl
mov
xorl
jne
lods
mov
addl
lock
pop
lahf
sbb
mov
fdivrs
cmpl
and
jg
and
pop
lret
fs
icebp
bnd
nop
subb
mov
subps
cwtl
arpl
xchg
pop
adc
shll
cmp
push
sbb
jnp
mov
arpl
pop
mov
psllw
bnd
clc
push
or
ja
hlt
jno
mov
mov
jge
hlt
jno
lock
adc
add
ss
inc
cmp
xor
lock
xchg
mov
xor
jno
fwait
sbb
std
aas
inc
jge
cwtl
jge
cli
xor
xchg
sar
cld
std
inc
in
ds
xchg
je
add
jo
xchg
inc
mov
jp
mov
add
jg
stc
nop
mov
pop
or
adc
adc
xor
pop
fiadds
testl
push
cmpsb
sbb
xor
scas
mov
xchg
xor
sub
inc
inc
jecxz
mov
or
xchg
dec
int3
cs
jns
jp
xor
icebp
cmp
repnz
adc
jbe
xor
shl
xor
rolb
pop
inc
int3
jns
sbb
out
ret
adc
cmp
shl
aaa
call
mul
xor
cmp
xchg
jg
inc
xchg
xchg
lock
mov
adc
aas
sbb
incl
nop
lods
or
loop
pop
repnz
mov
icebp
test
sbb
mov
andl
or
lock
test
wrmsr
imul
divb
jae
mov
mov
xor
divl
xlat
in
cmc
fdivp
sarb
add
mov
and
sahf
icebp
lret
pop
xchg
jmp
mov
shl
leave
test
xchg
pop
xor
scas
cmp
std
lcall
push
or
add
enter
popf
das
jb
jmp
jb
icebp
or
sub
jae
mov
mov
aaa
clc
cmp
sbbl
out
jno
sti
lcall
lcall
jb
out
xor
or
into
das
imul
into
std
lods
jecxz
in
popf
rclb
mov
sbb
dec
ljmp
lods
jbe
xor
in
pop
icebp
std
jb
loopne
repnz
out
or
pop
cs
ja
loop
not
push
addr16
outsl
cmpsl
push
out
scas
or
stc
mov
pop
or
fwait
xchg
xorb
ljmp
in
fisubrl
sub
xor
add
mov
adc
xchg
hlt
mov
repz
sar
dec
inc
mov
push
clc
sub
jmp
mov
das
xchg
xchg
xchg
adc
xrelease
jmp
or
inc
cli
mulb
cli
das
sahf
cld
hlt
outsb
cs
cmp
arpl
push
repnz
imul
inc
sub
inc
clc
cmp
hlt
aas
ljmp
arpl
hlt
mov
xchg
out
outsl
xchg
out
scas
test
mov
mov
cmpsl
stos
test
adc
cmpb
push
insl
out
adc
add
outsl
pop
pushf
fs
xchg
push
sub
lods
dec
je
jae
loopne
in
xchg
out
ret
cli
setno
mov
add
inc
fidivrs
push
incb
lsl
out
mov
dec
jne
loop
div
outsl
mov
je
cltd
xchg
movsb
adc
cli
out
push
repz
lock
aas
orb
inc
shl
pop
add
inc
jmp
mov
fcoms
jae
hlt
push
aam
ja
das
mov
inc
arpl
js
out
mov
mov
in
mov
idiv
in
cld
push
je
add
xor
xchg
mov
lahf
push
fs
das
cwtl
or
adc
mov
mov
icebp
mov
subl
cli
pop
cmc
sub
jnp
test
pushf
and
adc
add
in
ja
sbbl
clc
div
negb
inc
push
mov
xor
shrl
mov
xor
cmp
jo
mov
loop
xchg
out
adc
mov
xchg
mov
jo
xchg
or
sti
jno
int3
sbb
fimull
sub
cwtl
jno
mov
cltd
jns
incb
jge
repnz
out
jg
jb
adc
imulb
mov
outsl
mov
lock
loop
insb
fldl
fs
mov
mov
hlt
icebp
sahf
push
loop
mov
mov
sub
outsb
jno
mov
mov
hlt
out
lcall
icebp
cld
xchg
call
dec
push
push
mov
xor
cmpsb
cmp
in
push
sbb
loopne
ficomps
push
mov
inc
xchg
dec
sub
sbb
or
sub
iret
sysexit
xchg
insl
lahf
xor
es
lea
mov
sahf
mov
aas
add
inc
nop
divb
mov
scas
xor
test
xchg
test
xorl
in
outsl
dec
loope
mov
dec
jp
jne
dec
sbb
xchg
or
imul
je
aaa
loop
and
jle
js
aam
loop
add
cld
xor
bound
icebp
push
aam
hlt
out
or
test
das
and
icebp
adc
jle
repz
xor
inc
add
xor
test
in
mov
push
js
push
mov
movsb
repnz
xor
xor
in
jae,pt
cmpsb
or
mov
mov
cmp
xchg
pop
push
cmp
mov
dec
sbb
repnz
pushf
push
sbb
icebp
adc
add
xchg
mov
xor
xchg
lock
or
mov
sti
push
xchg
repnz
lock
mov
out
inc
sbb
std
xor
in
sbb
lret
shll
insb
scas
push
loop
pop
pop
out
xor
test
out
add
jb
clc
mov
loop
push
fs
outsl
mov
adc
gs
scas
sub
mov
in
adc
in
call
lret
xchg
push
out
sub
or
sub
or
cmp
repnz
cld
mov
jno
jbe
sbb
andl
mov
dec
test
or
xchg
mull
mov
xchg
xchg
fstpt
cmp
out
sti
out
loopne
repnz
adc
idivb
or
xchg
hlt
leave
mov
loop
rorb
arpl
sbb
add
jg
xchg
das
dec
inc
add
pusha
xchg
mov
lods
or
repnz
mov
adc
ss
xchg
cmpsb
data16
and
mov
push
out
lods
int
aam
dec
ret
inc
xor
lea
out
adc
loop
and
cli
jne
mov
ss
sbb
jecxz
adc
inc
lock
mov
add
shrb
int3
xchg
repz
outsb
inc
mov
icebp
div
clc
loop
int3
push
rcrl
xor
lret
push
aam
xchg
add
subb
bound
and
add
ficoml
jecxz
xchg
jl
xlat
jne
rolb
mov
xchg
addr16
pushl
xchg
repnz
cmp
syscall
mov
xchg
mov
nop
arpl
mov
cmp
pop
cmp
out
mov
in
xchg
jno
xor
xchg
xlat
js
pop
test
in
jmp
or
sub
jns
loop
idiv
mov
sahf
fucom
fdivr
push
hlt
mov
sbb
xor
add
mov
dec
shlb
sbb
jb
iret
jnp
mov
ja
icebp
mov
xor
sbb
dec
std
outsb
mov
push
mov
mov
imul
mov
fmulp
flds
cmpb
in
subb
sbb
cli
mov
xor
leave
sub
rcrl
jb
and
cli
add
ja
mov
repz
jno
jne
sbb
test
fwait
iret
divb
xchg
cmpsb
pushf
jl
lods
sbb
icebp
dec
mov
jnp
lret
stc
and
repz
xchg
jo
out
dec
xchg
add
sub
xor
fs
pop
dec
negb
not
popf
jg
jmp
rep
sub
scas
subb
stos
je
xor
mov
out
dec
jbe
setb
mov
out
xor
sbb
imul
movsl
test
fs
mov
mov
jnp
cmp
xchg
fidivrs
adc
sbb
sbb
pop
test
xor
jns
sub
add
jo
movsb
dec
jnp
loop
daa
adc
sub
jmp
mov
push
mov
cs
pop
clc
popf
sbb
xchg
out
mov
into
sbb
in
mov
loopne
adc
fsubr
xor
adc
jg
mov
ror
mov
inc
into
jbe
sub
adcl
xchg
outsl
mov
nop
push
dec
sbb
xor
xor
js
xor
mov
subb
data16
jae
lret
fistpl
mov
jo
dec
pop
jno
add
mov
xor
ljmp
xor
addr16
xchg
iret
jg,pt
jbe
and
pop
pop
cmpsb
sbb
xchg
xor
jae
int3
divb
xlat
rcll
pop
dec
jg
jno
cmp
jbe
je
add
lcall
icebp
scas
imul
stc
fs
inc
into
xorb
jb
ljmp
es
jbe
and
movsl
in
test
divl
xor
mov
ror
push
xor
sbb
mov
icebp
aaa
sarb
es
push
icebp
fwait
test
repz
mov
call
jns
jge
mov
push
mov
sbb
lock
and
or
jmp
dec
jl
addr16
ja
jmp
addl
cs
or
dec
cmp
xor
push
vmread
mov
xor
outsb
and
repz
nop
repnz
and
lds
das
dec
loop
dec
push
sbb
mov
mov
adcb
aad
mov
mov
subb
add
repnz
xchg
std
mov
rep
sub
adc
idivb
xor
test
imul
add
adc
mov
sub
mov
jp
les
je
in
jb
mov
jg
xchg
xchg
ja
xchg
pop
aas
repnz
push
ja
out
push
ja
out
dec
ja
out
dec
ja
out
inc
cmpl
stc
xor
pop
jnp
xlat
xchg
popa
stc
loop
sbb
stos
sub
pushl
ficoml
loop
inc
cs
inc
adc
sub
repnz
ljmp
scas
mulb
jb
add
ljmp
mov
inc
mov
aas
adc
jg
mov
test
pop
or
mov
scas
iret
mov
push
aam
adc
std
sub
or
push
sarb
jg
xor
shl
adc
add
and
jle
cmp
add
push
sub
mov
sub
orb
mov
inc
lock
fcoml
dec
xlat
jo
jns
cwtl
icebp
repz
push
pusha
arpl
in
test
mov
add
cli
mov
mov
test
sbb
mov
call
mov
inc
js
test
shll
xchg
popf
mov
add
mov
pop
arpl
pop
xor
lahf
lock
inc
fistl
xchg
sub
xor
cmc
jbe
js
inc
lcall
push
cmp
push
add
icebp
popa
push
jp
ljmp
out
sbb
fadds
cmpsb
jg
outsl
jge
mov
cwtl
int3
cli
and
mov
mov
daa
rep
ret
xorb
dec
xchg
jmp
dec
repnz
out
fs
sbb
enter
pop
out
mov
jmp
add
das
xor
mov
jmp
mov
arpl
lock
and
push
inc
mov
sbb
lock
hlt
dec
pop
jl
lcall
push
inc
push
sbb
mov
jbe
das
or
push
xor
dec
not
and
out
mov
dec
lds
ja
sbb
sbb
xor
fs
push
mov
jmp
mov
rclb
divl
adc
xchg
mul
mov
adc
cld
or
ficoms
shlb
xor
dec
ficompl
or
bound
pop
or
cli
xchg
xchg
sbb
popf
aam
mov
lea
scas
dec
addb
mov
add
shl
jns
xor
popa
mov
arpl
in
jns
test
scas
mov
jmp
sub
in
or
and
adc
push
fisttps
add
call
and
sbb
mov
fdivs
xchg
pop
mov
out
mov
adc
mov
adc
cmp
jmp
mov
adcb
test
nop
cmp
mov
stc
out
or
xchg
add
or
jp,pn
xchg
shll
ja
fidivl
xlat
xor
fisttpl
pop
or
mov
xor
cli
ljmp
lret
hlt
mov
xchg
xor
scas
push
mov
jl
xor
je
lods
sub
jg
mov
pop
push
sbb
je
xchg
icebp
jle
test
cmp
nop
adc
orb
ja
and
jo
xchg
mov
xchg
or
push
cmp
pop
fcmove
dec
inc
inc
cmp
xchg
sahf
outsl
dec
aad
or
int3
insb
xchg
icebp
shrl
icebp
mov
mov
lea
hlt
call
pop
jp
orb
mov
fs
adc
test
mull
mov
into
add
testl
nop
xchg
jae
inc
add
les
add
je
out
xchg
ja
aad
cmp
leave
add
fiadds
clc
mov
jp
loop
fdivs
push
push
imul
mov
xor
sub
imul
sub
sbb
loop
orb
iret
test
pop
jb
lahf
rorb
or
jae
mov
mov
xchg
cmpsl
mul
in
adc
mov
jns
xchg
xor
stc
call
dec
xor
fs
imul
scas
push
xchg
sub
pop
dec
lods
xchg
les
ja
shrb
test
xlat
jae
loop
stc
xor
inc
clc
js
xor
daa
mov
jo
ja
mov
call
cld
fdivr
mov
arpl
out
shll
stc
je
pop
cmpsl
add
mov
or
nop
into
or
nop
out
mov
fs
jnp
out
mov
sarb
or
cld
mov
inc
aam
andb
jle
or
pop
dec
sub
or
fnsave
or
ljmp
out
fs
mov
rclb
xor
repnz
icebp
mov
jne
subb
xchg
mov
aam
enter
mov
adc
jae
outsb
mov
mov
outsb
sub
daa
int
xor
lods
out
xor
je
fidivrs
sbb
mov
add
jle
or
cltd
fimuls
xor
add
jno
andb
jg
subb
mov
mov
iret
cmpsl
xlat
outsb
iret
or
cmp
cld
xor
fdivrp
xor
fisubl
pop
jl
fs
repz
cwtl
pop
mov
pop
out
adc
repnz
sbb
jno
cwtl
int3
lret
mov
cmp
loope
jle
sahf
fmuls
sub
push
js
lock
rorl
ds
dec
lock
xchg
hlt
mov
push
mov
cmc
scas
lods
cmp
xor
aas
xor
push
je
loop
xchg
sub
jnp
cmpsl
sarl
jno
jmp
push
xchg
dec
pop
jl
shrl
enter
xchg
or
add
sbb
aaa
sbb
shrl
xchg
jno
jae
shrl
jae
test
or
push
icebp
in
mov
jbe
and
xchg
add
mov
push
addr16
stc
push
jl
and
int
lea
pop
xorb
push
xchg
inc
lods
mov
fcoml
cmp
fucomip
cmpsl
js
outsb
mov
dec
js
mov
shll
cmp
lahf
aam
and
inc
icebp
fsubl
outsl
insl
add
je
jo
mov
push
arpl
add
jmp
ljmp
sub
or
cmpsb
cmp
insb
test
push
adc
je
shlb
xor
test
or
pop
xchg
test
pop
cltd
jge
pop
push
test
xor
fwait
mov
and
push
dec
in
add
jmp
inc
lcall
aam
jb
ret
jge
daa
push
mov
js
arpl
sbb
loop
sub
or
xchg
mov
cmc
mov
inc
xchg
xchg
sub
mov
clc
sahf
add
clc
dec
and
xchg
or
inc
mov
jp
cmp
mov
add
in
shl
fisubs
repnz
jnp
fisttpll
fs
xor
sub
mov
push
not
test
fists
lret
pop
in
sub
incl
clc
je
shl
jo
and
sbb
jno
lock
adc
xorl
aas
mov
popa
in
unpcklps
sbb
dec
rorb
xchg
or
mov
gs
xor
popl
sbb
push
loope
dec
xor
out
or
fwait
jns
jmp
pop
loopne
icebp
cli
insl
jae
shl
xchg
orb
cmp
jg
add
xchg
push
add
ja
mov
cmp
hlt
aas
jbe
lock
push
sar
sub
sub
mov
jne
std
xor
popf
cmpsl
push
mov
nop
cli
xor
arpl
les
jbe
xor
jbe
test
stos
repz
adc
imul
xchg
sub
mov
test
mov
jle
push
lock
testl
aas
mov
xchg
push
clc
shll
sub
or
rorl
mov
daa
pusha
jne,pt
ja
lea
sub
in
cmp
push
mov
loop
test
rep
jecxz
das
sub
jp
aaa
out
mov
add
ss
jae
fs
popa
xor
scas
dec
sti
add
into
jecxz
mov
add
hlt
lock
into
xor
test
cli
outsb
and
ja
test
pop
cwtl
or
iret
andl
repz
fsubrp
sbb
mov
sub
jl
sub
fs
lahf
jo
xchg
pusha
movsl
test
mov
and
js
mov
movsb
xor
adcb
sahf
dec
lahf
push
loop
xchg
jno
shlb
js
lcall
rcrl
adc
xchg
pop
pop
data16
stos
repz
es
popa
xchg
fnsave
ficoms
arpl
jle
inc
pop
xchg
call
jbe
or
lock
repnz
jae
mov
mov
mov
mov
jbe
and
jg
data16
fldl
xor
inc
lcall
je
xor
rclb
xchg
in
xor
mov
jb
fcoms
arpl
jnp
sub
push
loope
in
xor
mov
jg
adc
out
or
adcl
mov
jb
xorl
loope
cmp
jns
ja
cmc
ja
adc
jg
mov
jnp
mov
lock
in
mov
decl
orb
lahf
loop
cmpb
popf
aam
mov
sahf
in
aas
ja
adc
test
sub
lret
xor
jb
push
cmp
aaa
cmp
les
push
xrelease
rclb
aas
xor
scas
jno
icebp
pop
xchg
shlb
int3
out
mov
jno
mov
sahf
mov
testb
je
fwait
pop
add
in
pop
sub
and
cld
ret
add
mov
ljmp
xchg
popf
adc
in
cli
aam
dec
xchg
inc
mov
jbe
mov
hlt
ror
imull
outsl
add
inc
and
mov
addr16
cmp
shrl
add
stos
loop
sbb
incl
cmp
and
stos
ret
sub
fs
loopne
cwtl
ja
and
notb
leave
cmpsb
es
jno
mov
and
loop
push
lret
xor
add
adc
int
lea
add
imul
test
out
cltd
nop
xchg
jnp
and
ljmp
sbb
xchg
imul
or
sahf
add
xor
jp
pop
stc
xchg
cmc
jecxz
add
jne
xorb
pop
outsb
cli
shll
xor
push
movsl
sbb
or
push
nop
cmp
pop
sub
adc
sub
fincstp
imulb
push
fucomi
push
lahf
sbb
aaa
xchg
outsl
arpl
push
mov
mov
in
dec
les
arpl
cmp
xchg
jg
adc
mov
xor
xchg
scas
mov
pop
sbb
jbe
sub
mov
repz
jbe
push
or
mov
xor
xor
or
in
jb
pop
bound
dec
scas
mov
lock
pop
nop
je
in
xor
xor
mull
mov
sub
add
mov
js
adc
aas
dec
xor
xor
mov
dec
sbbb
inc
rorl
test
adc
adc
hlt
or
rcrl
out
in
xor
mov
inc
dec
xchg
xchg
div
aaa
mov
popf
movl
ficompl
das
cmp
add
loop
ja
mov
ret
jns
mov
push
xchg
jns
fiaddl
xchg
loopne
fsts
sbb
inc
scas
pop
lds
xchg
xor
rcll
je
arpl
popa
mov
jecxz
pop
arpl
cmp
jmp
outsb
jo
or
sbb
stc
push
xchg
xorps
and
dec
ljmp
xor
or
sub
push
cmp
mov
mov
hlt
divl
cwtl
mov
xlat
fistpll
cmp
push
repnz
mov
popa
xorb
add
jge
cld
fwait
shlb
and
lahf
test
mov
xor
mov
pop
aas
sti
fwait
je
and
sub
ficoms
jae
jecxz
outsl
pop
lahf
not
mov
mov
adc
mov
in
outsl
fisubl
cli
push
push
test
sub
mov
cmp
stos
xchg
jl
mov
mov
fs
push
sbb
nop
daa
filds
cmpsl
imul
xchg
jge
outsl
sub
xor
hlt
call
xlat
xorb
es
mov
xor
addb
jnp
pop
mov
xor
jo
add
adc
mov
pop
repz
loop
out
adc
pushl
sbb
pop
dec
xor
mov
jno
jo
xchg
stc
test
divb
sbb
arpl
jo
cmpsb
xor
dec
testl
push
mov
sub
repnz
imul
push
negl
xor
and
cmpsb
sbb
push
adc
mov
sub
mov
idivb
cld
rorb
ficomps
js
mov
movsb
cmpsb
dec
pop
repz
js
divb
mov
adc
jg
cmp
sub
test
sub
sbb
dec
loop
out
xchg
cmpsl
pop
rol
push
pusha
movsb
imul
pop
xorb
ljmp
mov
in
arpl
adc
pusha
loopne
mov
out
popl
jg
mov
mov
mov
repz
cmp
arpl
pop
add
xchg
nop
adc
mov
mov
xor
lcall
or
arpl
jg
and
pop
data16
mov
and
movq
cli
ror
mov
data16
adc
mov
inc
cli
lret
mov
mov
inc
clc
das
xor
imull
jo
idiv
das
adc
idivb
movsl
sbbl
pop
test
mov
in
test
pop
fs
mov
sub
repnz
flds
rcrl
mov
lret
inc
add
push
or
mov
xor
jnp
adc
xchg
outsl
xor
inc
fwait
push
popw
jmp
and
cmp
push
push
js
roll
loop
fadds
ja
jmp
mov
mov
xor
fisubrl
stc
adc
repz
popf
test
sub
mov
push
test
adc
dec
js
inc
incb
incl
add
pop
lock
nop
jns
push
adcl
orb
shlb
shr
js
xchg
hlt
dec
into
js
icebp
pop
cmpsb
insl
mov
loop
pop
inc
lods
pop
insl
adc
test
in
mov
rorl
ret
push
push
add
repnz
adc
pop
stc
or
repnz
js
or
jmp
jno
lock
jp
dec
and
sub
ficoml
adc
rcrb
iret
insl
mov
cmp
std
push
sub
and
pop
stc
std
push
cltd
lret
or
and
add
stc
loop
sbb
imul
jge
xchg
sbb
push
or
dec
in
add
decb
jmp
divl
jae
mov
stc
dec
cvtps2pd
inc
sbb
subl
sub
cld
shrb
xchg
mov
mov
mov
adc
ljmp
nop
xchg
dec
out
fsubrl
adc
sbb
les
sahf
into
cmp
out
mov
fdivrp
jno
inc
in
cmp
or
je
pop
xor
adc
and
ja
aaa
mov
repnz
jno
mov
fists
imul
or
scas
fs
push
mov
mov
fidivs
int
pop
lock
pop
loope
dec
xchg
fsts
xor
jmp
jecxz
out
push
in
int
mov
xor
mov
mov
xor
mov
jo
test
inc
mov
push
mov
push
mov
out
icebp
cmp
pop
enter
inc
jae
pop
jo
mov
imul
mov
leave
test
ret
loop
add
test
sub
orb
enter
aaa
cli
jbe
mov
sub
in
fisubs
insl
rclb
sub
push
push
sub
mov
popf
xor
sbb
xchg
data16
or
sbb
mov
jle
xor
mov
dec
mov
sbb
or
cmp
lret
xor
xchg
lds
dec
loopne
icebp
fadd
jns
adc
mov
mov
jns
cltd
push
sub
push
rorb
xlat
jae
xor
in
jmp
hlt
jmp
or
push
int
sub
mov
mov
sub
out
jmp
adc
pop
adc
fsubl
bnd
xchg
fs
mov
fisubrs
stc
js
scas
and
dec
adc
xor
dec
test
repz
loop
pop
or
mov
js
jae
jle
rclb
xor
test
in
ljmp
add
jge
test
add
lret
scas
cwtl
sub
pushf
incl
cmpsl
jns
mov
add
mov
xchg
or
mov
and
arpl
inc
sub
in
jbe
cmpsl
sbb
jns
popf
loop
stos
enter
testl
and
adc
lods
jno
popf
push
test
stc
xor
clc
int
jne
lods
add
nop
mov
jl
scas
and
xchg
arpl
push
jp
lock
ja
out
out
dec
jno
stc
rol
push
xchg
pushf
ficoms
xor
adc
outsb
pop
xor
pop
and
adc
ss
cmpsb
rorl
insl
xlat
pop
adc
adc
stc
mov
mov
jne
lods
notl
loope
ljmp
cmp
lcall
jae
movsb
stos
scas
xchg
aas
imul
loop
sub
mov
mov
test
js
mov
xchg
mov
or
cltd
sbb
lret
aaa
or
aaa
lahf
cmp
jo
addb
mov
mulb
cwtl
fiadds
divb
cli
mov
sub
ja
jae
xor
rcrb
shrl
scas
sub
cs
pop
mov
fsubl
adc
xlat
movsb
mov
jg
xchg
cmpb
adc
xchg
mov
stc
mov
shl
lahf
nop
xchg
ljmp
pushf
or
pop
add
push
xlat
cmpsb
mov
lods
mov
push
xorl
sbb
lds
add
divb
lods
movsb
sub
rcll
or
pop
out
cli
clc
scas
into
fwait
mov
sub
dec
sub
xor
cmp
incb
add
inc
dec
repnz
jbe
hlt
or
push
cmp
repnz
or
adc
mov
pushf
xchg
js
rcl
adc
adcb
mov
push
mov
pusha
jae
xchg
xchg
cltd
push
sbb
jbe
shr
or
pop
call
cmpsb
xchg
mov
mov
mov
jne
xchg
divb
call
sub
test
adc
iret
fcompl
lahf
lock
cmpb
flds
adc
ud2
and
jne
mov
scas
cmp
fmuls
push
rorb
iret
add
inc
lock
push
or
idivl
ret
loop
inc
negb
xor
negb
shlb
dec
mov
popf
pop
jmp
pop
push
jns
xchg
inc
mov
inc
xor
test
pop
jl
sub
js
jb
popa
push
inc
cs
sbb
loope
xchg
outsb
or
jno
ds
mov
mov
xlat
sbb
sbb
rorl
popf
sbb
test
pop
loop
xchg
nop
xchg
inc
into
cmc
xchg
mov
adc
add
cmp
xor
test
notb
clc
mov
adc
ret
mov
dec
add
xchg
inc
xchg
push
inc
stc
dec
pop
sahf
jecxz
hlt
sub
xchg
je
pop
cltd
jmp
insb
adc
xchg
enter
jbe
cmp
cwtl
ret
and
jp
test
enter
jno
jne
out
push
rcrb
xor
cli
aam
subb
cmp
je
fs
pop
roll
out
enter
inc
incl
xor
mov
repnz
cmpsl
in
fcmovu
js
xor
loop
shlb
xor
scas
js
lahf
fisubrl
jg
cmp
je
aas
cmp
je
sub
incb
out
lret
or
sbbb
call
mov
das
jae
push
cli
xchg
lcall
insb
psubw
pusha
loop
rcl
scas
sbbb
pop
or
or
mov
shll
mov
sub
stc
cmp
push
das
push
aas
dec
dec
add
adcb
movsb
hlt
out
xor
fdivrl
jecxz
fidivs
in
into
jnp
push
sbb
sahf
xchg
or
icebp
test
push
jl
popf
adc
lods
and
pop
sbb
test
daa
lea
mov
cmc
rorb
lahf
fs
stc
fs
cmpsb
divl
push
arpl
ja
jae
dec
jle
push
insl
scas
arpl
ljmp
insl
repnz
mov
or
push
cmpsl
jecxz
cwtl
jae
outsl
add
test
clc
loop
divb
jmp
fwait
addb
push
outsb
or
icebp
sbb
testb
mov
mov
cwtl
and
xchg
adcb
jg
call
pop
xor
cmp
and
icebp
mov
jecxz
or
or
jae
lock
xlat
insb
call
xchg
out
or
mov
mov
push
ficoml
fmull
addb
pop
shll
mov
xlat
sbb
sbb
xchg
cltd
lock
lret
cmpsl
mov
rcr
jne
sti
sub
fbstp
mov
xchg
loop
roll
add
add
sub
sbb
je
xchg
jg
loop
sbb
xchg
xchg
pop
test
cmp
cltd
out
out
sbb
push
pop
outsl
mov
jmp
pop
xor
testb
js
jle
sub
stos
xchg
dec
mov
xchg
aas
inc
xlat
jg
outsl
out
out
lods
je
hlt
add
xchg
push
xchg
loop
add
in
js
aaa
inc
add
and
test
mov
xchg
push
dec
pop
mov
test
rorb
insb
pop
insb
mov
cmp
rorl
aaa
fistpl
jle
xor
or
xchg
loope
inc
jnp
lods
je
cmpl
adc
inc
cmpsb
fdivr
out
xchg
setno
sub
js
jb
xor
incl
into
jne
sarl
rolb
notl
sub
push
push
shrl
addr16
sarb
repnz
adc
adc
jbe
xor
cltd
cltd
popa
mov
pop
pop
pop
mov
loop
or
jo
or
ret
fisubs
cmp
cmpsb
fidivl
xchg
pop
sti
mulb
add
pop
sbb
add
mov
push
push
nop
test
jae
out
xorb
push
jae
mov
mov
mov
cmpb
xchg
or
jb
fmull
in
sbb
sbb
ret
xchg
sbb
repz
nop
movsb
rolb
iret
gs
sub
std
inc
js
out
rorl
xor
mov
insb
add
test
rorl
jo
sbb
xchg
xchg
inc
andb
mov
or
dec
aas
sbb
or
popf
adc
test
fcomps
jg
incb
xchg
and
add
sub
mov
jnp
jno
sub
lret
das
mov
add
jmp
jp
or
mov
mov
jno
imul
out
fdiv
xor
aaa
add
fldcw
fdivr
repz
test
fsubrs
add
loopne
mov
ljmp
adc
std
in
loop
incl
icebp
mov
pushf
aas
mov
pop
add
scas
jg
mov
cmpsl
mov
orl
icebp
jmp
pop
loop
mov
xchg
hlt
repnz
xor
pop
push
stc
loop
add
rorb
dec
cltd
lret
mov
sbb
jge
sub
jb
pop
push
scas
in
cmpsl
mov
ljmp
inc
push
fistpll
inc
mov
and
mov
rcrb
cmp
sbb
pop
dec
pop
inc
clc
xchg
pop
adc
call
push
leave
or
or
mov
imul
test
sub
pop
clc
adc
or
clc
jge
push
sbb
in
les
scas
push
pop
jg
loop
out
fcoms
push
xchg
jg
cltd
pushf
aas
push
cwtl
adc
pop
rcrl
daa
or
and
hlt
xor
jo
or
lea
iret
rcl
sub
pop
mov
dec
stos
fstpt
inc
enter
jle
insb
xor
jno
inc
movsb
cmpsb
push
mov
arpl
inc
ja
mov
xchg
sahf
xor
mull
insb
scas
sub
xor
jne
punpckhbw
scas
icebp
push
jo
or
pop
sub
lods
mov
or
mov
cmpb
jo
ret
pop
subl
clc
pop
cltd
jbe
push
xchg
sbb
or
or
setne
lock
testb
std
or
pmaddwd
mov
jge
aad
repnz
pop
mov
out
xchg
jb
mov
sti
fnstcw
xor
out
xor
lret
xchg
enter
cmpsl
inc
add
mov
cs
sbb
xchg
mov
and
mov
sbb
dec
xchg
loope
dec
mov
cmp
xor
xchg
adc
dec
repnz
xor
subb
insb
aaa
cli
lret
xor
addb
xor
jae
lods
outsb
lahf
sti
orb
dec
int
icebp
dec
fs
push
fdivp
xlat
out
mov
push
mov
pop
popf
sbb
icebp
xchg
std
neg
sub
jp
arpl
pushf
test
aas
mov
das
jmp
and
cmpsl
cmc
ss
inc
push
out
arpl
test
jmp
cmpsl
jge
push
push
pop
jo
sbb
push
mov
push
or
mov
ljmp
jb
idivb
xor
hlt
arpl
inc
dec
repz
and
mov
push
push
jne
ds
xchg
add
aad
into
cmp
cmp
imul
push
jae
fimuls
in
ret
jp
in
scas
nop
lods
add
loopne
xor
add
outsb
push
dec
clc
lods
orb
pushf
clc
dec
arpl
in
mov
ds
add
iret
mov
lret
jmp
std
mov
or
lock
mov
outsb
xchg
xchg
jne
cmpb
iret
in
subb
pop
sbb
mov
xor
cltd
int
sti
sub
lods
mov
cmp
inc
call
and
outsl
scas
sbb
faddl
push
fbld
sub
xor
xor
xchg
jno
push
testl
fisttpl
xchg
jbe
loopne
and
sub
hlt
xchg
or
std
mov
or
jmp
xchg
xchg
mov
or
sub
movsl
mov
gs
push
js
xor
push
jb
mov
or
negl
lock
cmp
xlat
imul
xchg
pop
jge
sbb
mov
cmpsl
dec
cmp
orb
repz
pop
xor
scas
xchg
ret
outsb
test
lea
in
mov
push
xchg
imulb
sbb
rcr
das
rcr
mov
repz
fcmovb
xchg
and
repz
nop
fidivrs
fistpl
outsl
imul
mov
lret
je
shrb
ja
push
mov
mov
lock
scas
adc
call
lret
xor
scas
test
xchg
push
test
icebp
and
xor
xor
jne
lcall
xor
arpl
mov
sbb
fs
dec
repnz
cmpsb
dec
xor
nop
cmp
jae
fs
inc
mov
std
outsl
sbb
test
aaa
jae
jge
icebp
loop
sti
sub
or
dec
mov
mov
hlt
sbb
cld
push
xor
dec
scas
add
dec
fdivp
scas
or
lcall
xchg
cmp
and
stc
nop
jo
adc
xchg
adc
adc
adc
pop
sub
cmc
icebp
jne
or
lahf
out
outsl
add
push
das
call
lret
jne
cmp
adc
jb
sub
add
subb
lock
test
xor
out
inc
dec
loopne
out
jo
sub
repnz
adc
ret
mov
leave
scas
jp
insl
rclb
dec
jmp
mov
lret
in
arpl
pop
dec
lock
push
mul
lock
out
out
push
adc
hlt
cltd
pop
aas
or
adc
cmp
add
rcl
leave
adc
jno
das
and
xchg
pop
cs
mov
mov
stos
add
push
xor
popf
in
fcompl
sub
pop
les
js
testb
and
nop
push
cvtps2pd
sbb
mov
or
loop
in
jne
fs
lds
add
mov
mov
pop
xchg
cmp
imul
sar
cmp
sbb
jb
mov
dec
push
out
xchg
add
lock
gs
outsl
scas
out
xorb
adc
xchg
mov
outsb
dec
mov
es
out
js
call
daa
mov
and
push
movsl
loop
fdivrs
dec
jb
jnp
stos
mov
xchg
cmp
adc
in
push
loopne
cmp
xchg
adcb
loop
push
add
test
insl
add
jecxz
stos
cmp
adc
push
sbb
jnp
in
xchg
das
xchg
dec
mov
dec
dec
subb
cli
stos
fiadds
call
sbb
shlb
repz
xchg
std
gs
or
shl
mov
jge
jnp
pop
lock
jb
cmc
sub
fs
in
jo
mov
jae
add
mov
mov
dec
outsl
in
andb
sbb
loop
mov
jl
sub
ds
mov
lcall
mov
not
inc
or
jp
ret
test
mov
dec
xchg
aam
outsb
xchg
push
test
jl
cmc
xor
outsb
in
cmc
cmp
xor
movsb
pop
jne
xchg
repnz
iret
test
imul
andl
jo
loop
idivl
mov
xchg
jnp
inc
insb
test
jo
pop
rolb
das
sub
adc
sub
jmp
arpl
clc
ret
mov
testl
js
scas
daa
clc
push
rcll
cli
mov
sarb
out
and
aaa
aaa
dec
jno
insb
mov
add
or
stc
sbb
fistpll
xchg
dec
xor
xor
outsl
pmulhuw
sub
sbb
mov
cmp
cmp
jle
dec
aad
xor
gs
xchg
or
mov
scas
das
sub
or
popa
ljmp
mov
mov
xchg
stos
xchg
push
add
outsb
mov
mov
fucomip
repz
imulb
jg
sub
pop
sbb
daa
mov
xor
sub
xchg
test
adc
cltd
das
pushf
bound
jns
dec
lcall
enter
xchg
sub
sbb
stos
outsb
insb
push
aad
push
lcall
push
dec
mov
clc
ja
fimull
add
mov
push
sub
add
out
cmc
dec
outsb
xchg
xor
ljmp
inc
lahf
test
fprem
cld
mov
xlat
jne
pop
loop
insl
iret
mov
clc
adc
faddl
mov
lret
push
adc
roll
jo
inc
cwtl
lods
mov
mov
loopne
test
repz
cltd
jb
pusha
pop
aaa
aam
in
or
cwtl
xchg
add
mov
sub
cli
mov
sbb
jnp
adc
pop
jp
sbb
into
call
out
aaa
popf
je
loope
inc
or
mov
push
xchg
rcrb
or
call
arpl
jnp
mov
test
cs
arpl
inc
jb
jne
popf
or
adc
push
and
lahf
hlt
iret
insb
and
inc
lods
nop
xchg
cltd
into
in
mov
pop
mov
adc
push
scas
cli
push
jmp
cmp
sbb
dec
orb
je
and
fnstenv
testl
dec
pop
xchg
test
add
xchg
addr16
or
mulb
sub
jle
icebp
clc
mov
stc
cmpsl
xchg
sub
addl
subb
out
jmp
test
xor
fs
shll
nop
xor
roll
lcall
test
cmp
fs
mov
jp
outsl
xor
out
mov
sbb
xchg
das
movsl
pop
jg
adc
loopne
notb
repz
je
iret
and
push
sub
jnp
out
shlb
jecxz
in
pop
sti
lea
mov
xchg
in
cmp
xchg
lret
mov
call
lahf
jl
or
jo
mov
ljmp
add
iret
push
inc
or
repnz
push
inc
aaa
and
out
or
inc
push
pop
dec
and
not
decb
mov
jle
icebp
or
ja
push
lea
pop
sub
sub
rclb
into
das
rorb
xchg
xchg
mov
mov
inc
sbb
cltd
into
fs
stc
xchg
fisubs
icebp
and
mov
adc
jae
push
test
jnp
sahf
pop
inc
fs
mov
jmp
add
mov
les
xchg
in
aaa
cmp
mov
ljmp
in
pop
orb
lret
adc
push
add
pop
sub
subb
jbe
dec
in
inc
stos
cmc
clc
das
sub
mov
scas
loopne
or
mov
loop
mov
out
inc
lods
lret
clc
mov
daa
sub
dec
das
mov
xor
lret
andl
fwait
lea
xchg
das
xchg
mov
cli
clc
sbb
mov
cli
xor
test
mov
cmpsl
jae
xchg
jo
pop
jl
jb
xor
xorb
mov
outsb
mov
add
mov
mov
nop
cmpl
inc
mov
sti
xchg
out
repnz
or
mov
scas
cmc
outsl
adc
pushf
xor
outsl
push
push
or
insb
data16
fwait
lret
test
test
lret
pop
hlt
stc
cmpsb
xchg
sbb
pop
xchg
clc
lock
nop
addl
out
adcb
clc
adc
adc
sbb
dec
notb
cld
adcb
movd
test
cmc
icebp
or
imull
xor
dec
xor
mov
add
pop
jl
push
pusha
hlt
lea
xchg
jae
mov
dec
rorb
push
and
out
andl
lock
je
mov
sub
sbb
cmovb
test
dec
fs
jae
scas
movsb
adc
sub
sbb
xchg
lcall
out
or
lods
xor
cmpsb
lods
loopne
cmp
push
push
sub
imul
cld
loop
inc
dec
popa
jmp
jae
sub
mov
jbe
mov
pushf
or
rolb
pop
mov
sub
jne
hlt
xchg
jmp
push
mov
les
repnz
clc
dec
ja
xchg
out
push
or
xor
loop
xchg
gs
cld
push
pop
repnz
hlt
cmpsb
mov
lods
je
xor
dec
popf
mov
add
dec
mov
mov
testb
add
mov
cwtl
clc
repnz
das
nop
cld
jno
mov
sub
and
add
push
add
das
mov
jno
xor
mov
cmpsl
call
sbb
fdivs
ficomps
add
cmp
cmc
jo
fsubrs
stc
js
dec
mov
mov
push
sbb
in
push
xor
sub
mov
mov
xor
push
gs
hlt
loop
xchg
pop
pop
movsb
sbb
add
jle
jbe
sbb
mov
cmp
mov
add
adc
orb
out
test
cmc
scas
xchg
icebp
jge
mov
xchg
jno
fs
ja
dec
jns
js
jae
cmp
repnz
adc
call
xor
push
aaa
divb
xor
mov
cmc
jle
sub
outsl
fwait
xor
hlt
cmp
cmc
push
push
pop
iret
in
fs
xor
jmp
push
aaa
mov
inc
mov
shrl
lcall
popa
inc
or
rolb
pusha
ja
inc
jb
push
fdiv
dec
ljmp
test
jge
movsb
jge
jp
sub
loop
xchg
pop
outsb
lahf
out
pop
sbb
jne
push
in
jg
lret
sub
or
in
sbb
adc
dec
push
mov
into
cltd
loop
pop
xor
mov
xor
mov
es
insl
das
jno
fs
movl
or
mov
jge
and
xchg
dec
sahf
mov
push
pop
jno
test
jns
inc
cmp
pop
xchg
xchg
sub
push
aam
fs
mov
in
xchg
inc
ds
mov
jge
rorb
sbb
lahf
lods
push
popa
mov
adc
inc
cmpsb
mov
mov
sbb
out
sti
arpl
or
dec
loopne
push
pushl
ds
push
push
xchg
bound
loop
insl
mov
cli
arpl
push
ljmp
mov
xor
cli
js
or
xchg
adc
ds
addl
pusha
xlat
loopne
sub
mov
sbb
scas
or
jns
sub
cmc
pop
push
sti
iret
mov
sub
adc
pop
arpl
mul
iret
ss
xchg
cmp
push
cmp
icebp
ss
or
mov
int3
xor
nop
or
sub
test
fadd
adc
push
or
js
rcll
pop
lock
xor
cmp
adc
pop
mov
push
mov
or
imulb
shlb
fwait
mov
jmp
xchg
cmp
push
loopne
lahf
pop
adc
outsb
decb
jo
lock
je
dec
test
mov
mov
test
std
dec
in
rcrb
jb
adc
imul
loop
dec
and
sbb
lods
jl
sub
sub
fs
mov
lcall
mov
mov
mov
adc
pop
xor
or
pop
inc
in
test
out
mov
dec
adc
loopne
negb
outsl
stc
mov
pop
clc
jp
xor
add
sub
xor
js
cmp
mov
sbb
fiadds
in
cli
sub
and
ss
inc
or
push
xlat
jae
xor
xor
imul
movsl
jecxz
lcall
add
push
jecxz
cs
cmp
inc
fimuls
hlt
ja
pop
repz
jno
jecxz
and
push
mov
sti
or
jne
xchg
cli
cld
daa
mov
sbb
arpl
cli
lahf
mov
test
outsb
mov
rorl
jge
clc
jmp
out
repnz
inc
add
add
insb
mov
sbb
ficoml
jne
inc
dec
mov
xchg
out
nop
mov
add
or
mov
inc
sbb
out
rol
add
fbstp
sbb
xchg
popf
xchg
movb
fwait
cld
lret
mov
movsl
jl
push
and
cwtl
fistl
fildll
clc
cmp
add
into
ja
xchg
push
inc
mov
jmp
xchg
aam
dec
scas
add
js
xchg
cmc
pop
xor
mov
cli
xor
jb
lcall
mov
and
mov
lahf
fwait
repnz
das
cs
divl
je
mov
scas
add
push
aam
xabort
lock
and
xor
push
push
adc
pop
pushf
jbe
cmp
out
push
or
mov
xchg
jmp
shlb
adc
mov
xor
sub
jae
jo
pop
xor
add
push
mov
lahf
notb
mov
xor
pop
jno
aas
add
xor
mov
jae
cmp
aad
arpl
push
pop
or
pop
iret
push
xchg
push
sbbb
dec
test
jae
jl
xchg
adc
add
push
adc
stos
in
or
mov
stos
idivb
mov
pop
xor
cli
xchg
scas
pushl
nop
lods
cld
and
jp
in
daa
repnz
pop
iret
xchg
ja
fmulp
loope
jae
xchg
movsb
xor
fists
loop
adc
dec
dec
ja
dec
popa
pushf
mov
sar
mov
dec
std
add
sbb
scas
sub
cmp
inc
or
mov
sbb
xor
xchg
stos
inc
jl
ja
pusha
mov
adc
cs
mov
push
xor
xchg
in
xor
loopne
inc
adc
out
and
cmpsb
jns
inc
into
xor
test
scas
aas
sbb
imul
out
call
mov
xchg
stos
adc
pop
jl
sub
xor
cli
add
adc
fs
lock
jge
sbb
movsb
cmp
fs
lret
xor
imulb
popa
push
fincstp
fisttpll
jle
push
cmp
int
jnp
pop
and
test
jmp
xchg
pop
add
mov
add
mov
sub
lcall
mov
or
sub
andb
push
mov
push
sbb
popf
push
loope
in
xor
inc
pop
dec
int
push
add
js
icebp
dec
jle
cmpsl
gs
cwtl
jle
rorb
mov
aad
xchg
aaa
test
mov
xor
cmpsl
movsb
xchg
xchg
ja
sub
rep
xor
jo
outsl
lret
outsb
in
mov
jo
mov
out
or
popf
dec
xor
loop
xor
in
sub
xorb
jbe
in
out
jbe
push
xor
add
clc
in
shrb
in
jge
mov
xchg
pop
movsl
adc
mov
les
ret
cli
js
xorb
divb
and
mov
jl
adc
in
jne
fdivrs
fs
cli
decl
inc
jne
fimuls
lcall
mov
outsb
jae
mov
mov
ljmp
in
loop
pop
int3
enter
xor
scas
xorl
mov
fwait
mov
push
and
cli
push
bt
lds
inc
sub
aas
sub
hlt
arpl
int
dec
mov
mov
out
hlt
pop
sbb
sbb
insl
cmp
insb
xor
fidivrs
xor
sub
or
jno
popf
lds
dec
xor
dec
cmp
lods
mov
arpl
jmp
xor
ja
repnz
fisubs
arpl
adc
sarl
push
sbb
loop
in
dec
and
and
push
ret
pop
sub
cmp
shr
mov
lock
in
lret
inc
pusha
push
mov
ja
cmc
jge
mov
mov
es
mov
idivb
jb
push
rcr
jns
bnd
push
in
mov
ret
jo
adc
jnp
add
cmpsl
arpl
fidivl
call
adc
in
loope
pushf
cmpsl
cmc
or
pop
sub
orb
jae
mov
xchg
clc
lea
push
insl
cmc
stc
cmp
pop
rcll
jp
vpsubusw
mov
cmp
punpcklbw
rorl
jbe
shrb
mov
jne
jle
dec
ret
stc
dec
pushf
bound
loope
in
popf
pop
push
arpl
repnz
stc
push
xchg
xor
pop
or
cmp
jp
cwtl
ss
or
lret
scas
std
xor
cmpsl
lret
ret
push
shlb
cli
cmc
xor
ja
shrb
shlb
ss
in
sub
adc
out
inc
test
popf
aam
cs
fmuls
test
stc
xchg
mov
mov
push
pop
or
jbe
mov
xchg
xorb
cli
insb
div
subl
mov
xor
dec
xchg
test
jmp
arpl
out
aaa
call
aaa
in
loop
cmpsl
lock
or
jo
xchg
ljmp
movsb
jae
stos
mov
sub
jno
mov
mov
jne
jns
and
test
lods
or
or
xor
jne
loopne
in
addr16
repnz
pop
mov
xchg
mov
jg
ss
out
mov
aam
xorb
sbb
push
mov
rclb
movl
sbb
jmp
mov
mov
js
dec
pushf
xchg
pushf
mov
jbe
shlb
aaa
int3
call
nop
aam
xor
xchg
movsb
cld
lret
mov
adc
xlat
xor
call
hlt
xlat
xor
call
lock
push
mov
aaa
out
jae
addb
sbb
clc
popa
and
dec
inc
mov
les
add
mov
xchg
in
mov
in
fwait
rcl
fdivp
lret
movsb
xchg
xchg
mov
sahf
cmp
and
add
mov
sbb
mov
sub
xor
xor
stc
jae
leave
hlt
and
mov
add
mov
clc
fildl
sti
push
pop
mov
mov
jne
jbe
cmpsl
jmp
lcall
test
rolb
lock
add
loop
jg
fwait
add
inc
cltd
jb
outsb
lock
mov
test
outsb
xchg
jp
stos
repz
lcall
fs
aad
xchg
dec
pop
jp
repz
adc
inc
add
fidivl
mov
jmp
outsb
mov
cmc
cmp
divb
xor
lcall
sti
sub
xor
xchg
fwait
xchg
stc
adc
mov
xchg
loop
imul
je
int
add
adc
sub
int
fwait
das
mov
adc
fsubl
fs
xchg
mov
xchg
sbb
or
jb
les
fdivrl
or
shlb
enter
lock
call
outsb
ljmp
cwtl
enter
repnz
sbb
cmpsb
loop
clc
or
lret
outsl
jp
and
sub
jle
xlat
xor
out
cmp
ja
lods
cmpsb
repnz
pushf
mov
adc
je
inc
add
movsb
or
pushl
sbb
pop
imul
sub
daa
lret
ja
inc
pop
cmp
out
lods
lret
ss
inc
orb
lcall
imul
mov
shr
scas
adc
mov
sub
and
sbb
out
sub
sub
lahf
or
xchg
cli
cs
push
pop
jnp
pop
mov
pushf
jne
xor
mov
sub
and
mov
iret
adc
into
jno
or
sub
xchg
adc
cli
in
cmpsl
sbb
cld
inc
mov
addl
fistl
xor
sub
adc
rorb
mov
leave
xchg
out
sbb
push
fs
sub
ret
clc
scas
fldl
fs
lret
sbb
ljmp
mov
xchg
divb
ss
hlt
or
aad
mov
mov
in
jp
dec
jg
fwait
in
mov
test
in
div
pushf
notrack
cmp
mov
add
in
repnz
test
dec
xchg
cmp
cmp
aas
xorl
xchg
mov
or
shl
rolb
inc
hlt
mov
jl
push
lods
aam
jno
dec
pop
xchg
lret
movl
dec
fucompp
dec
out
and
icebp
out
lret
hlt
dec
dec
sub
xor
jmp
dec
leave
je
cmp
cmp
loop
sbb
or
fimuls
popf
clc
jecxz
iret
aaa
test
or
pusha
js
mov
add
fcmovu
pop
mov
hlt
out
and
test
jge
xor
or
div
cmpsl
fmuls
loop
push
adc
push
fcomip
add
loope
aas
jecxz
lcall
push
add
nop
rolb
push
add
mov
add
dec
sub
int3
dec
jne
outsl
pop
add
push
ljmp
pop
push
jnp
jne
movsl
stc
adcb
cli
out
adc
pushf
outsl
mov
arpl
mov
mov
jne
pop
cld
xor
imul
and
js
loop
mov
sbb
rclb
cmp
leave
mov
mov
fadds
add
mov
imull
shlb
das
orb
xor
cmp
jnp
fidivl
testb
lods
xor
fsubrs
out
xchg
sub
push
fs
cmp
ficoms
cmp
inc
loop
arpl
in
xchg
xchg
out
out
or
xchg
rolb
faddl
arpl
notb
inc
and
mov
xor
test
iret
ja
mov
cwtl
xor
push
sub
subb
fiaddl
sub
pop
xchg
inc
test
rorl
cltd
adc
dec
jbe
mov
aas
or
std
xor
jbe
fsubrp
sub
loop
xchg
aad
xor
sbb
dec
sub
cld
cs
cli
mov
lret
sahf
push
pop
jns
lret
int3
ss
jecxz
fcoms
or
into
xor
cmp
mov
sub
add
push
mov
xchg
push
shll
rcll
scas
dec
out
mov
sub
mov
add
out
pop
lods
jne
test
gs
xchg
xchg
mov
jae
rcr
leave
sahf
sbb
mov
cmpsl
testl
andl
pop
sbb
sbb
bound
lock
dec
repnz
movsl
xlat
mov
add
lret
pushf
cwtl
fdivs
dec
cli
je
jne
sub
jae
lock
xorl
hlt
sub
jo
repz
ficomps
push
or
adc
and
je
push
stos
adc
pop
add
hlt
das
mov
xor
sbb
mov
dec
and
xlat
jmp
mov
dec
into
cwtl
in
dec
lretw
push
and
sbb
xorb
mov
and
hlt
in
in
mov
into
or
xor
js
sbb
sbbb
xchg
pop
jmp
test
jmp
xchg
xor
push
test
fwait
xor
mov
pop
repnz
cmp
jnp
out
rcrl
xor
fidivrs
lret
jns
sub
das
sub
jnp
jmp
fistpll
icebp
negb
lock
leave
ret
mov
jo
fcomps
jne
xchg
repnz
push
test
pusha
outsl
mov
mov
ss
push
add
pop
add
lock
adc
or
cmp
xchg
mov
rorb
arpl
fldt
daa
inc
enter
int
insb
out
jp
push
pop
in
jns
jg
jb
jo
sub
sti
xor
cltd
enter
shlb
notb
xor
in
jl
jp
fs
jnp
sub
faddp
ljmp
sbb
sbb
sbb
or
imull
sahf
mov
jns
adc
inc
js
jb
scas
sub
adc
sbb
jns
jae
hlt
sbb
cli
in
inc
add
add
je
movsb
sarb
mov
jecxz
mov
push
jae
movsl
iret
cld
icebp
mov
xchg
outsb
test
ja
push
aas
inc
and
or
adc
enter
xchg
rorb
jbe
xchg
hlt
test
pop
outsb
xchg
fsin
adc
hlt
pushf
jae
xchg
bnd
stos
add
mov
or
adc
ss
sub
sahf
lock
test
test
sbb
xor
js
bound
bound
mov
bound
jns
out
into
or
xchg
test
lret
dec
mov
mov
or
aas
test
repnz
std
lahf
inc
cmp
stos
nop
mov
inc
dec
loopne
or
fdivrs
sub
rorb
push
outsb
iret
dec
mov
xchg
rorl
add
sbb
mov
push
testb
in
pop
inc
and
mov
dec
repnz
mov
ja
xchg
mov
lock
cmp
inc
xor
mov
jns
sti
cmp
inc
imull
inc
aad
mov
xchg
fnstenv
xor
jno
and
or
xor
pop
mov
push
or
mov
and
dec
sub
and
rcl
mov
sbbb
inc
fwait
aas
mov
ret
test
call
in
pop
mov
bound
add
xor
pop
cmp
fwait
cmpsb
dec
pop
xchg
jmp
sub
mov
arpl
xor
xor
in
adc
imul
ja
mov
out
std
xchg
lock
jne
scas
mov
pop
mov
mov
adc
test
andb
mov
cmp
dec
mov
mov
adc
xchg
mov
xchg
push
push
scas
jmp
mov
xlat
jg
and
std
or
cmp
pop
add
test
jp
dec
jecxz
rcr
out
lret
push
in
xor
out
adc
imul
test
or
adc
jo
jb
ss
adc
add
lock
pushf
sub
and
xor
xor
jp
lahf
fisubrs
sti
mov
ljmp
mov
sbbl
mov
imul
cmpb
mov
aaa
add
outsl
inc
in
adc
cmp
sbb
dec
jnp
lock
mov
int3
xchg
sar
insb
std
negb
sbb
and
adc
xchg
xchg
jne
jp
sub
repnz
jb
js
sahf
mov
xor
call
or
sbb
cld
push
push
or
dec
fildl
inc
xlat
mov
rcll
orb
push
ljmp
dec
mov
jbe
xor
add
dec
xchg
nop
adc
movsl
pushf
or
jg
dec
in
lock
lcall
push
popf
jmp
cmp
stos
lea
or
sbb
nop
in
call
ljmp
cmc
push
pop
jg
mov
or
mov
mov
inc
cmpsb
mov
mov
std
daa
mov
jge
hlt
addr16
add
sub
sahf
loopne
cmp
xchg
sbb
sbb
cld
sbb
decw
xchg
sbb
mov
test
xchg
xor
out
psubd
stos
popa
cmp
je
jl
sbb
sarb
sbb
pop
xchg
out
aas
nop
mov
cltd
sbb
outsb
pop
in
jge
xor
sub
in
jle
les
in
loope
push
pop
repz
sbb
or
adc
je
pop
ljmp
repnz
cmpsl
loop
repnz
xor
negb
and
xor
fistps
dec
sbb
xor
jae
cld
aaa
pop
pop
mov
pop
push
ficompl
jae
adc
mov
adc
sbb
aas
push
mov
test
call
cld
imul
mov
movsl
arpl
mov
sub
or
ret
outsb
pop
mov
aaa
mov
push
orb
cmp
sub
aad
idivl
jae
mov
push
adc
xor
adc
add
ljmp
lods
idivl
outsb
hlt
int3
outsl
aaa
xor
xchg
out
sub
pushf
and
stc
push
addb
stc
orl
nop
lods
jae
jl
sub
xchg
fisubrs
stc
je
test
mov
dec
xchg
test
jl
sub
sbb
ljmp
jne
pusha
int
paddsw
scas
xor
xchg
icebp
adc
mov
je
mov
pop
add
mov
aaa
sub
mov
inc
push
in
subb
jne
fbstp
push
mov
int
in
or
push
cwtl
popf
jno
xor
scas
imul
out
push
ficoml
adc
imul
cld
lea
mov
mov
outsl
xor
mov
or
popa
jecxz
add
pop
mov
sbb
pop
hlt
sub
and
rolb
loopne
xor
push
jbe
jb
in
mov
or
or
or
lods
mov
loop
test
imul
jb
sbb
imul
js
mov
jb
xor
jae
jb
stc
fistpll
pop
mov
push
out
push
int3
dec
ljmp
lods
sbb
adc
loop
je
pop
or
cmp
or
dec
xchg
xor
sub
movb
je
hlt
icebp
pop
andl
add
jmp
sbb
loop
jmp
mov
dec
ja
dec
pop
sar
shrb
test
jo
cmp
dec
sub
addr16
bound
lahf
add
pop
and
out
xor
insl
xchg
mov
test
push
ljmp
pop
gs
push
sub
in
push
sbbl
ret
testb
push
inc
pusha
sub
jo
loopne
mov
ret
cmpsl
ret
or
dec
push
xor
xchg
xor
push
sub
fs
or
pop
stos
int3
add
cli
lock
mov
jae
je
jb
add
ja
mov
icebp
xchg
jae
jbe
mov
dec
sbb
pop
cwtl
lret
mov
in
cli
movswl
inc
mov
out
jbe
cmp
ds
cmpsl
or
inc
notl
pop
je
cmp
cmpsb
sti
pop
mov
jno
mov
lret
mov
xorb
fsubr
cltd
jp
popf
hlt
sbb
imul
jl
sahf
shll
rorl
add
ja
loopne
adcl
loope
push
repz
push
lock
mov
fidivs
xchg
out
loopne
addr16
add
pop
xchg
loop
lret
mov
test
je
dec
sub
into
repz
das
iret
pop
movsl
push
sub
fst
xchg
inc
leave
xor
pop
repnz
dec
mov
mov
int
inc
pop
rcll
loop
insl
sbbl
stos
cmpsb
xor
adc
lret
push
sub
push
mov
xor
lret
xchg
or
addr16
mov
add
in
cmp
pop
gs
pushf
scas
sbb
xor
sbb
mov
ds
icebp
sahf
and
push
mov
lcall
int
jnp
cmp
out
add
xchg
aad
daa
add
test
xor
mov
fldenv
fbld
cli
arpl
xlat
push
lret
ja
cmpsb
dec
mov
nop
mov
stc
rclb
cmp
nop
jb
rorl
dec
nop
push
mov
xor
jp
xchg
xchg
xor
ret
xchg
call
pop
pop
mov
push
pop
insb
pop
incl
xor
add
outsl
leave
jbe
lods
pop
mov
nop
jle
mov
fimuls
adc
xor
ficompl
loope
icebp
sbb
mov
out
je
mov
mov
fisttpll
pop
cmp
jbe
mov
pop
aam
mov
ficoms
mov
mov
inc
outsl
or
xor
pop
and
cwtl
add
es
lds
enter
xchg
xor
ret
add
xchg
xchg
out
test
ret
jl
call
orb
lea
cmp
or
lahf
xchg
cltd
aaa
shlb
pop
dec
jae
push
xchg
in
or
add
xor
or
jo
or
add
decl
wrmsr
dec
adc
push
mov
mov
sbb
mov
jo
incb
jl
inc
xchg
lcall
into
test
sub
jbe
or
pop
xor
in
and
dec
adc
ja
cltd
bound
add
xchg
fdivr
loop
and
add
nop
sbb
vmovdqu
xchg
xor
loop
or
addb
xchg
cmpsb
jbe
imul
xchg
sysenter
cmc
mov
js
icebp
mov
jbe
cld
or
nop
sub
inc
xchg
jo
pusha
fldl
mov
nop
sbb
cmpsl
repnz
fs
mov
pop
inc
and
add
cld
xchg
xchg
xchg
mov
adc
or
mov
testl
ja
mov
mov
jae
das
dec
or
js
lret
fiadds
xchg
stos
add
mov
notl
ret
xorl
pop
lods
popf
repz
clc
mov
test
mov
xchg
dec
arpl
push
pop
pop
shll
xchg
mov
aam
pop
pop
mov
pop
nop
pop
stc
fs
bnd
sbb
add
pop
jb
xor
in
rcr
dec
lret
je
fwait
sub
pop
jbe
jg
repz
loope
adc
push
arpl
popf
xchg
aam
mov
push
outsl
dec
mov
push
cltd
cmc
shrb
xchg
icebp
aaa
iret
mov
icebp
add
xor
push
inc
movsb
jmp
lcall
std
push
or
in
pop
rorl
or
and
mov
xor
add
shr
mov
or
hlt
jo
dec
add
cmpsl
cs
fs
sub
jmp
add
lock
repz
fs
push
pusha
repnz
dec
add
jle
jns
sbb
adcb
mov
sahf
ror
mov
sub
add
mov
sub
pushf
stos
adc
std
mov
dec
int
jle,pt
cmp
sub
shl
mov
mov
or
addb
add
inc
sti
stos
jno
xor
xor
adc
fs
mov
cmpsb
out
push
lret
mov
data16
push
push
mov
cmp
or
stos
add
push
iret
push
sub
mov
dec
fadds
stc
sbb
sub
cs
xchg
add
fcoml
icebp
ss
imul
pop
or
sti
loop
lds
sbb
add
stos
push
ja
mov
addr16
cmc
jnp
out
jl
sbb
xchg
pop
mov
ss
leave
mov
cmc
push
fstps
jnp
sub
push
les
or
pushf
fsubr
cmp
shrb
lods
daa
pop
imul
add
out
jns
or
push
js
ljmp
in
jmp
fstps
and
xchg
xchg
sbb
bound
dec
lea
scas
xor
fidivs
and
adc
or
xlat
add
add
into
je
lock
arpl
aas
ficoms
jp
jmp
cmpsb
into
test
or
adc
or
mov
outsl
xchg
xor
cmp
fbld
mov
test
xorl
mov
cmp
push
and
aaa
arpl
leave
lea
mov
mov
fs
andb
in
mov
mov
sub
leave
cli
push
test
mov
cs
scas
sub
add
test
sub
pop
add
dec
out
lcall
scas
push
jmp
ret
and
pop
mov
adc
cmp
adcl
dec
mov
in
sub
jnp
test
push
sbb
or
fistps
cltd
fcoms
push
pop
jae
xchg
or
repnz
xchg
idivb
adc
pop
and
mov
ja
scas
ja
lret
xchg
jne
subb
xchg
mov
in
sub
incl
insl
loopne
arpl
inc
inc
inc
jno
aaa
mov
imul
out
cmp
mov
jge
das
testl
sti
mov
adc
add
sbb
outsb
or
fsubs
jle
rolb
adc
stos
xchg
std
shll
into
mov
mov
les
cli
mov
aas
mov
mov
cltd
sbb
mov
xor
mov
adc
test
fwait
sbbb
or
add
xor
imull
imul
mov
dec
push
sbb
incb
dec
lock
sub
add
icebp
fs
repnz
mov
pop
add
fs
shll
sbb
mov
jnp
push
lahf
jae
jns
inc
cmc
push
inc
adc
out
add
scas
stc
in
call
push
jae
xlat
sub
div
push
test
xchg
sub
loop
adc
adc
syscall
cmp
lret
fidivrs
test
cmp
repz
clc
cltd
hlt
js
insl
lret
mov
call
testb
insb
xorb
jae
dec
cmp
adc
xor
mov
push
fistpll
mov
insl
cwtl
sbb
jae
adc
jp
mov
sub
test
push
push
add
jno
mov
ja
notl
jne
mov
das
test
push
mov
jnp
pop
fiaddl
xchg
mov
fidivrl
jmp
push
fs
rcll
shll
jge
jno
test
fisubs
andl
stc
jno
cmp
lock
mov
testl
in
or
jo
inc
jnp
pushf
movsb
das
int3
xor
add
ficoml
add
std
sub
jmp
xor
hlt
fs
jmp
inc
add
jge
cmp
adc
aad
fcomps
ja
cld
out
xchg
outsb
mov
adc
call
adc
lret
inc
jle
fisubrs
cmc
adc
mov
xchg
ret
inc
push
push
dec
popa
sbb
lock
test
jl
add
jp
pop
inc
xor
mov
push
in
inc
mov
sbb
sub
test
and
dec
push
jp
sbbb
xchg
in
dec
scas
xor
scas
fldl
xor
and
dec
add
jg
mov
sub
loope
xor
jo
fstp
clc
jbe
pop
sub
jne
jmp
jnp
cld
test
pop
dec
enter
mov
inc
mov
nop
inc
and
push
lret
ja
jnp
cmp
repnz
sti
outsl
lahf
push
inc
pop
mov
int3
mov
inc
jno
add
lcall
shlb
mov
xor
inc
sub
mov
test
test
dec
mov
and
div
sbb
loopne
sbb
xor
dec
xchg
fdivr
fwait
xor
fs
pop
push
stos
adc
sub
mov
lret
lahf
movsl
cs
cmp
andb
jno
jae
add
es
pop
add
out
movsl
xchg
lock
xor
addr16
hlt
jo
jl
adcb
in
push
sti
adc
sub
jle
andl
les
mov
sbb
cmpsb
insb
je
popf
xchg
jnp
mov
push
enter
repnz
test
push
xchg
mov
pop
inc
xor
clc
aas
jno
fs
outsb
sub
out
mov
testb
icebp
fs
mov
test
repz
add
dec
jno
sti
es
pop
sbb
fs
ds
adc
stc
shr
push
mov
shr
inc
repz
lods
pop
mov
xor
add
inc
mov
cmp
inc
shl
dec
mov
imul
imul
pop
les
lock
jl
push
pop
xor
or
and
cld
mov
mov
cmp
or
ret
cli
jo
or
sub
popf
in
je
xor
aas
fs
loop
xchg
ss
cmp
ja
xchg
idivl
jbe
jno
sbb
mov
adc
popf
in
mov
xor
clc
cld
stos
cmp
fnstenv
mov
out
mov
idivl
jmp
scas
jbe
mov
adc
pop
mov
in
push
add
repz
mov
push
roll
cmp
pop
jb
out
jbe
jl
adc
and
insl
movsb
lods
add
xchg
sub
lock
pop
fucomi
push
sub
mov
clc
jl
sub
lahf
mov
mov
cmp
repnz
hlt
lock
scas
sbb
sub
sub
testl
cmp
inc
pushf
jmp
stos
sbb
lea
lock
mov
arpl
or
fs
int
adc
adc
lods
jno
mov
nop
mov
xchg
ja
repnz
popf
xor
sub
xor
sbb
jg
andb
cmp
insl
jmp
add
fbstp
jae
inc
hlt
mov
push
push
xor
cs
das
cmc
or
adc
add
or
shll
sub
iret
jo
push
add
xor
stos
into
ret
mov
ret
or
push
xor
mov
clc
jp
push
xchg
and
xchg
out
pop
pop
loop
rclb
fdivp
aam
dec
lret
test
add
aam
cmp
sbbb
push
sub
xchg
add
daa
xchg
xchg
sbb
icebp
call
lcall
cmpsb
or
push
test
pop
fucomip
jbe
scas
std
sbb
in
sub
cmpsb
and
sbb
arpl
cmc
loop
dec
add
mov
inc
movsl
mov
dec
xorb
aad
ss
negb
stos
imul
push
mov
hlt
lea
push
mov
xchg
sbb
in
pop
imul
sbb
adcb
icebp
sub
and
mov
insl
mov
mov
decl
aad
xor
arpl
xchg
ficomps
sahf
ret
mov
mov
shl
fldenv
fbld
pcmpgtd
ja
and
and
add
repnz
iret
andb
popf
loope
mov
cld
dec
cmpsb
aas
inc
in
jae
cmp
out
xor
cltd
and
jnp
fsubrl
push
popa
lahf
shll
fstpl
jae
loope
cld
stos
push
cli
stc
jb
cli
addr16
or
int3
mov
call
shll
or
out
jns
mov
add
jo
add
popf
or
mov
int3
mov
pop
out
add
jl
jbe
mov
or
in
add
call
dec
loope
das
xchg
sub
les
imul
jp
xor
pop
adc
mov
push
sahf
mov
lock
jl
fstps
mov
pop
xor
sub
js
dec
adcl
clc
xor
mov
mov
ja
jo
mov
je
movsb
fsubs
add
je
fs
das
loope
daa
lods
mov
sub
mov
testb
xchg
repz
testl
clc
xchg
cmp
out
mov
add
jne
data16
xor
jns
icebp
les
add
xor
cmp
js
es
loop
clc
dec
in
and
pop
xchg
or
imulb
jmp
cld
sbb
lcall
out
scas
pop
dec
and
mov
jno
adc
push
add
xor
int
imul
sbbb
sbb
bound
sbb
xchg
lock
jns
es
mov
inc
xchg
dec
adc
pop
adc
repnz
outsb
lock
sbb
mov
ljmp
xchg
mov
fisubrl
cmc
mov
fidivl
repz
fucomip
push
mov
fs
call
jnp
into
scas
pop
mov
jbe
cld
add
mov
cmp
dec
sti
jo
inc
push
xor
cmp
loop
xchg
mov
je
repnz
fbld
loop
cmp
xor
test
in
cwtl
xchg
test
jo
aad
xchg
test
mov
jno
jbe
jae
jmp
xacquire
fcmove
ror
mov
in
pop
test
test
add
ja
repz
sub
in
sbb
repz
jnp
clc
adc
add
xor
insl
pusha
adcb
mov
sbb
mov
in
cmpsb
fnstsw
movsb
mov
and
test
cld
jmp
jmp
clc
stc
addr16
mov
ljmp
xor
insb
lods
cwtl
or
push
xor
mov
xor
dec
xchg
icebp
mov
mov
movsl
lds
outsl
sbb
sbbb
out
in
into
sbb
xor
fdivrl
stos
jo
fs
jecxz
and
repz
int3
loop
add
fwait
rcr
mov
xor
addr16
ret
clc
inc
outsb
mov
mov
jb
mull
shlb
add
cmp
mov
jp
inc
insb
mov
xchg
jp
pop
adc
mov
divb
adc
in
push
mov
out
fnstenv
mov
das
xchg
loopne
xor
filds
nop
add
adc
je
push
cmpsb
or
dec
testl
fs
loop
js
insb
cmpsl
cmc
adc
je
scas
dec
mov
sub
mov
std
shll
leave
xor
jbe
in
jne
mov
stos
movzbl
jbe
lock
add
adc
lods
and
pop
xchg
add
push
and
test
mov
cmp
stc
add
ljmp
fdivs
xchg
inc
and
dec
sub
mov
and
xor
in
sbb
jne
mov
std
fisttps
pop
xor
add
lea
repnz
jp
push
out
cmp
into
cmp
fs
aaa
cmc
js
xor
and
and
pop
stc
jns
cld
push
xor
fwait
mov
andb
dec
loope
xor
fidivs
out
cltd
sub
into
lock
fdivrp
adc
mov
xor
lock
xor
sub
out
push
out
cmp
imul
mov
or
xor
push
js
insl
call
adc
adc
xchg
xor
icebp
push
testb
cltd
mov
mov
sti
mov
rcrl
xor
or
jg
arpl
ret
mov
in
adc
fbld
mov
push
insl
pop
cli
fbld
jg
lock
nop
pop
xchg
lret
lds
pop
dec
jp
mov
arpl
imulb
les
mov
push
movsbl
rclb
fs
repnz
xor
loopne
sbb
pop
hlt
imulb
je
lea
cltd
and
sbb
dec
in
fsubrl
pusha
mov
jmp
add
lods
enter
adc
cltd
mov
hlt
inc
ret
lahf
and
fwait
pop
and
fstps
test
out
test
mov
fisubrs
lock
cmp
out
xor
xor
test
cmpsb
mov
mov
out
std
mov
ficomps
or
xor
sub
ja
fildll
in
ror
sub
fs
add
mov
adcb
mov
jg
xor
jne
jb
mov
les
orb
aas
sub
add
inc
addr16
push
std
notb
push
push
mov
jne
movsb
lret
add
mov
cltd
sbb
shll
and
loop
mov
dec
cmc
ja
push
pop
imul
cmp
nop
mov
test
int
xchg
out
test
push
lret
jp
adc
dec
lret
lahf
popa
jge
inc
or
jne
std
cmp
nop
sub
loope
scas
cmpl
sbb
inc
cld
les
xor
adcb
xchg
adc
and
inc
lock
out
push
add
orb
cmp
push
or
xchg
bound
sub
xlat
into
push
mov
cmp
push
cli
mov
rclb
sub
pop
or
jge
sbb
addr16
in
sub
mov
cmp
stos
xchg
loope
xchg
jle
mov
sub
das
push
test
jno
mov
fsubrs
out
cmp
outsl
pop
in
sub
jnp
sub
or
in
testl
xor
je
lock
cmpsl
iret
fs
push
imul
in
xor
rorb
in
xor
inc
addb
ss
fdivp
xor
icebp
mov
outsb
mov
fildl
clc
adcl
icebp
jae
dec
fs
adc
aas
mov
xor
fsubrl
mov
pop
mov
mov
clc
les
int
shlb
mov
cltd
sub
mov
loopne
mov
sbb
fcoms
xor
pop
shl
jno
add
lods
inc
imul
cli
fwait
mov
sub
xor
in
clc
mov
mov
aas
or
test
xchg
lret
stos
and
ja
ja
aam
js
je
mov
rorl
aad
test
jbe
clc
lods
xor
cmpsl
pop
add
push
mov
sub
mov
add
pusha
xor
cmpsl
or
cld
push
repnz
js
loop
data16
rcr
test
cld
jle
aam
fs
out
ljmp
addb
jmp
fs
mov
in
mov
xchg
xchg
xchg
pusha
mov
mov
jg
adc
mov
rcrb
jp
les
iret
push
hlt
xor
add
mov
or
stc
divl
inc
or
add
cmpsb
stc
test
adc
outsl
dec
decb
adc
stc
loop
adc
mov
mov
cmp
scas
iret
lret
pusha
jns
adc
psubusb
rclb
dec
ja
sub
mov
fs
xor
add
xchg
and
sub
sbb
les
jle
sarb
cli
rcll
inc
mov
inc
iret
push
loop
sti
push
cmp
adc
or
daa
or
mov
pop
sbb
xor
mov
sbb
pop
movsb
dec
mov
fsubrs
movsl
xchg
mov
sbb
ret
jmp
lods
or
mov
stc
ja
cld
test
ret
mov
push
jb
stc
rcr
mov
enter
dec
jbe
mov
lcall
div
mull
jge
inc
adc
fsub
loop
and
pop
inc
addr16
leave
push
jl
jmp
in
pop
pop
in
sbb
push
and
push
loop
mov
inc
adc
adc
rcl
ret
xor
dec
mov
add
sbb
lea
stc
add
add
movsl
adcb
cwtl
bound
jl
arpl
mov
sub
in
imul
add
ficompl
cltd
in
ret
cld
bound
or
iret
mov
jl
mov
mov
mov
mov
adc
cli
adc
xor
stos
mov
hlt
mov
pop
inc
iret
add
sbb
je
into
fiadds
and
push
xchg
sbb
hlt
rorl
jae
xor
fistps
dec
fnstcw
ja
mov
pop
cmp
jnp
adcl
lcall
clc
jecxz
rol
sub
sbb
and
adc
out
adc
or
cmp
hlt
dec
cmp
aam
xor
jg
xor
test
cmp
xchg
or
mov
outsb
push
lock
fsubl
rcl
pop
incl
stc
in
nop
cld
mov
cltd
fdivrs
das
outsl
je
add
loop
pop
shl
jns
repnz
repnz
and
mov
mov
push
repz
pop
jo
xchg
inc
clc
insb
xor
mov
mulb
repnz
mov
repnz
pop
mov
mov
ja
mov
ret
js
nop
cwtl
ret
out
mov
xchg
adc
repnz
pop
mov
lcall
stos
mov
mulb
mov
cmpsb
repnz
and
iret
mov
pop
mov
out
xor
mov
clc
hlt
mov
adc
mov
in
scas
nop
mov
jae
jnp
repnz
mov
mov
mov
mov
ljmp
test
jmp
jae
jno
popf
pop
cli
sub
scas
mov
fcomps
cwtl
idivl
cmp
testl
mov
sbb
xchg
loope
adc
add
ja
sarb
cld
repnz
loopne
lahf
lock
daa
imul
jg
jb
loop
bound
std
jecxz
dec
dec
sub
mov
sbb
mov
orb
sti
test
push
imul
mov
repz
cs
cld
mov
add
aaa
dec
aad
pop
lea
sbb
aas
add
xchg
out
sbb
dec
mov
iret
mov
inc
lock
sbb
inc
pop
jmp
jl
sar
inc
jae
in
dec
mov
push
xor
iret
int
mov
sub
ja
cwtl
dec
dec
int3
sbbb
jb
std
cmp
jnp
mov
xchg
je
cs
sub
jbe
repz
repnz
fs
jbe
imul
xchg
in
out
mov
sti
mov
xchg
mov
icebp
in
arpl
loop
sbb
lock
jbe
lock
push
sub
les
sbb
mov
test
popa
adcl
fidivs
dec
loop
jle
out
jnp
add
out
jo
fimull
mov
inc
stc
sub
enter
std
push
fidivs
std
outsl
sub
repz
xchg
xchg
test
es
daa
xchg
add
xchg
dec
xchg
out
add
out
cmpsl
cmp
hlt
xor
addr16
inc
sbb
int
xchg
xchg
xor
xor
fisttpll
xor
hlt
jmp
jl
ja
jl
xor
js
shlb
imul
adc
test
sbb
clc
push
cmp
in
xchg
pushf
push
xor
addl
enter
sarb
pop
into
rcrb
sub
pop
outsb
cli
inc
test
xlat
pop
adc
ds
repz
pop
lods
push
jne
cs
rol
sbb
out
lods
outsl
xor
shl
mov
cmp
pop
push
mov
jnp
aaa
jae
or
fcompp
out
jno
jle
fs
scas
add
popf
clc
adc
stc
add
jo
aam
clc
lea
mov
xchg
popl
and
or
mov
adcl
repz
out
mov
add
add
js
sti
rep
pop
pusha
xchg
sub
cwtl
cmc
xor
repz
adc
cld
mov
xlat
push
cltd
repz
push
cmp
hlt
xchg
jmp
push
int
xor
fs
jl
into
pop
pop
test
mov
scas
insl
pop
aam
jnp
pop
sub
xchg
jmp
push
or
lret
sub
dec
repnz
xor
add
rorl
jg
addr16
rcrb
ret
nop
cmc
rcl
fmuls
out
in
xchg
inc
in
jo
xor
repnz
xor
aaa
push
ret
dec
in
ljmp
jp
sub
sub
loope
or
test
xchg
jmp
cmp
addb
outsb
fs
test
js
dec
adc
cmpsb
or
xchg
fmuls
push
and
fs
lahf
addb
fwait
xchg
iret
sbb
or
pushf
nop
jb
rolb
inc
insl
pop
xchg
xchg
lcall
es
data16
fidivrs
cmp
jo
jbe
imul
xchg
inc
push
mov
sbb
push
sub
push
xchg
test
or
lret
add
sub
in
push
cmpsb
xor
dec
inc
cmp
ljmp
xor
jge
cmp
roll
xor
mov
dec
dec
push
xchg
shlb
xor
cltd
addr16
add
mov
add
in
mov
popf
test
arpl
jno
pop
add
in
sub
fidivl
sbb
leave
adc
sbb
push
sub
push
push
jbe
cmpb
insl
pop
jo
decl
add
into
xchg
xchg
pop
loop
xchg
lahf
mull
or
jo
out
push
jo
rolb
int
add
mov
push
lcall
jmp
fldt
mov
scas
inc
push
xor
lcall
mov
fldt
cmp
dec
cmp
mov
jmp
sbb
std
or
push
cli
ljmp
outsl
sbb
ljmp
jmp
xor
mov
lds
jl
clc
in
lcall
add
inc
lods
xor
inc
and
into
mov
iret
sub
cmp
lea
sub
fsubp
div
jae
je
cli
js
pop
ja,pt
outsl
inc
jp
mov
jae
loop
push
jmp
daa
jno
mov
enter
mov
notl
and
mov
repnz
push
pushf
lock
cmp
jae
and
sub
mov
aaa
dec
pop
loopne
push
imul
dec
mov
mov
subb
xchg
hlt
cmp
cli
inc
mov
sub
das
repnz
inc
sub
and
xor
jmp
pop
jns
sub
ficoms
or
jae
popf
les
les
push
bound
add
mov
inc
sub
outsb
mov
pop
xorl
mov
or
pop
mov
push
push
add
mov
push
mov
xchg
pop
test
mov
adc
icebp
or
xchg
cld
fwait
or
xor
xor
in
and
add
sub
ss
jo
popa
and
fs
orb
cld
pop
cmp
outsb
cmp
lea
out
ss
insb
mov
inc
jp,pt
aaa
push
xchg
mov
fildll
push
ror
pop
xchg
pop
xchg
mov
repnz
pop
xchg
mov
push
aaa
in
loopne
pop
je
mov
test
adc
loope
pop
scas
jbe
xchg
mov
mov
testb
sti
outsb
lahf
stc
js
mov
call
and
dec
iret
mov
testl
mov
aad
dec
push
hlt
add
ds
ds
ljmp
clc
repnz
loop
pop
test
test
test
test
xlat
jnp
and
jbe
jae
notl
aaa
xchg
cmpb
fists
nop
mov
cltd
jg
loopne
into
pusha
or
loopne
mov
cmpsb
or
aas
mul
cmc
aas
mul
sti
rolb
jae
fcomp
xor
mul
sub
jb
int
imul
xorb
xchg
sbb
shl
dec
lret
mov
jno
push
das
fwait
mov
fimuls
push
das
aas
nop
jne
inc
cmp
pop
jmp
cltd
sbb
les
imul
mov
push
xor
pop
cltd
xor
call
jmp
sub
sbb
repz
xchg
xchg
add
mov
in
dec
pop
clc
in
repnz
pop
jno
push
shlb
dec
xchg
xor
dec
jb
add
xor
add
lods
jns
or
cmpsl
repz
xor
push
add
lahf
arpl
sbb
stc
inc
pop
out
ficompl
sub
stc
lods
int3
rcrl
jg
aam
sbb
sbb
fwait
mov
xchg
divb
xor
sub
xchg
jae
cwtl
push
cmp
mov
inc
adc
out
xorb
pop
xor
and
add
das
js
fsubrl
in
mov
fidivl
xor
aas
adc
and
sub
mov
sub
dec
shrl
push
xor
lock
cli
inc
adc
jg
aaa
mov
nop
jnp
cld
bound
sbb
jmp
mov
clc
mov
push
hlt
shlb
nop
jno
push
repz
or
mov
adc
lock
jle
sbb
jl
sarl
inc
jmp
nop
sub
xor
or
lock
adc
je
testl
iret
sub
adc
or
mov
mov
add
aas
mov
call
in
shr
mov
sbb
mov
std
jnp
adc
lods
xchg
std
xor
lods
hlt
clc
aas
pop
and
mov
jne
scas
jl
push
adc
pop
fisubl
cmp
popf
ret
dec
xchg
jmp
clc
cltd
cmp
push
adc
xchg
sbb
leave
sub
sbb
fwait
scas
jge
add
adc
test
sub
loope
ljmp
dec
xor
in
add
xor
in
dec
mov
cmc
pop
scas
mov
sbb
lea
mov
out
fwait
ret
add
fwait
loopne
lods
push
cld
aam
xchg
fwait
sub
mov
xchg
mov
pop
loopne
dec
pop
and
mov
jge
cwtl
push
mov
int
cli
ss
fs
das
in
dec
ficoml
loopne
subb
ja
leave
lock
arpl
int3
xchg
push
shll
mov
bound
push
pop
cmp
imul
insl
lock
vmwrite
stos
jne
in
insl
fcoms
clc
sbb
fstpt
pop
arpl
inc
mov
sub
sbbb
jg
leave
adc
test
push
hlt
adc
je
jmp
fs
aad
xor
jnp
sub
mov
fxch
in
in
push
idiv
sbb
test
sti
sub
dec
fwait
leave
inc
call
jae
test
fiaddl
jb
bound
out
push
loope
in
nop
push
shrl
das
je
jmp
pop
push
pop
mov
outsb
jo
out
push
pop
xor
sbb
hlt
div
loopne
out
jle
lock
xchg
cmp
xchg
loop
pushf
pop
mov
outsw
stc
sbb
notb
fdivrl
leave
ficompl
cltd
hlt
fadd
jmp
lods
aam
sub
repz
push
xchg
rolb
lods
pop
inc
test
cmp
pop
or
jae
lcall
cwtl
adc
adc
dec
fsubrs
out
xor
shll
ds
jno
sbb
in
loop
mov
ja
dec
push
loop
outsl
hlt
push
add
or
mov
and
push
andl
add
loopne
sub
test
xor
out
loop
das
mov
cltd
jnp
call
push
jge
repz
sbb
push
lods
cld
and
lahf
pop
sahf
pop
rcr
repz
jbe
ret
scas
xchg
sub
cli
test
cltd
mov
inc
pop
es
adc
mov
lods
and
sbb
fldcw
lods
imul
clc
push
pop
mov
fidivrs
and
mov
orb
repnz
push
mov
ret
sarb
adc
mov
loop
gs
xor
or
jecxz
xor
ja
add
pop
push
out
xchg
ret
mov
repnz
push
leave
negl
pop
jo
mov
iret
outsl
ficoml
cwtl
fcom
arpl
xor
inc
mov
push
mov
pop
sbb
imul
pusha
idiv
repz
dec
sbb
push
enter
xor
inc
imul
push
pop
shll
dec
xchg
aaa
add
cwtl
int3
or
iret
rorb
sbb
aaa
inc
in
and
fimuls
iret
sbb
and
scas
addr16
flds
fcoml
mov
lods
das
mov
mov
in
rep
add
lret
jbe
ret
push
jno
jne
cmpsb
data16
mov
ror
mov
ror
aaa
adc
dec
jg
ljmp
notb
aam
lcall
loop
lcall
lret
mov
add
pop
fsubrp
pop
fistpll
stc
inc
dec
mov
out
inc
xchg
subb
int
scas
mov
and
sub
push
jecxz
scas
mov
sub
popa
rcl
daa
xchg
dec
loopne
adc
loopne
mov
icebp
loop
add
testl
popf
add
push
lods
sub
cmpsb
out
or
ljmp
pop
rcll
mov
aad
xchg
mov
imul
hlt
repz
sti
jbe
xor
xchg
bound
mov
scas
sbb
sbb
outsl
xchg
sahf
je
xchg
mov
jmp
subl
cli
out
pop
fsubrp
rorb
stos
pop
int3
out
daa
pop
mov
dec
pop
mov
push
jnp
stos
repz
adc
xchg
lods
sub
lret
xor
jb
ret
inc
hlt
lods
pop
xchg
sub
mov
ss
daa
fisttpl
pop
sbb
loop
cmp
orb
cmpl
fwait
popf
in
addr16
mov
mov
xlat
sub
orl
lock
loop
nop
mov
adc
push
mov
outsb
movsl
lahf
mov
jnp
jae
push
arpl
repz
lods
jno
inc
inc
out
jb
jae
xlat
jge
movsl
lret
jnp
fs
movsb
cli
out
std
xor
fwait
clc
outsb
add
scas
push
xor
jge
jo
or
loop
pop
sub
sub
push
jo
xor
inc
lods
cli
popa
xchg
loope
mov
sub
cmp
cld
mov
clc
xchg
scas
mov
ret
add
add
push
push
mov
sbb
adc
or
inc
repnz
push
out
jo
icebp
js
xor
clc
cmp
mov
div
icebp
xchg
sub
fiaddl
outsl
mov
daa
sbb
outsb
push
imul
jg
sub
jno
outsl
pushw
scas
xchg
or
push
cmp
pushf
pop
jmp
addl
adc
les
fstpt
inc
aam
jmp
lods
ds
push
js
loop
xchg
hlt
dec
adc
jbe
cli
rorl
pushf
mov
mov
es
fists
pop
mov
loope
or
xchg
nop
sbb
popa
xor
or
jne
js
sbb
outsl
mov
mov
jge
pop
jl
jo
mov
push
test
mov
fs
jg
fcomps
add
adc
fisubrs
stc
loop
fbld
adc
push
decb
ret
cmp
insb
shll
or
inc
xchg
popa
das
jns
push
cmpsl
jo
and
lahf
jnp
sub
xor
ja
pop
or
sub
shll
jo
sub
jae
je
inc
cld
call
jne
shlb
cmp
mov
outsb
jmp
ror
aaa
test
jbe
mov
inc
inc
loope,pn
xchg
adc
lods
lock
je
fs
in
rclb
add
cld
lret
lods
inc
adcb
adc
out
mov
inc
loop
arpl
add
repnz
sub
adc
popf
outsl
in
rolb
rclb
rolb
cmpl
push
scas
pop
fimuls
rorl
push
or
shrl
test
push
xor
cli
mov
fwait
sub
adc
jns
pusha
popa
mov
lock
aaa
aad
add
xlat
je
dec
sub
femms
call
jbe
and
jno
test
fs
test
int3
loopne
pop
jge
sar
popf
lret
push
fs
rcr
andb
lods
or
sub
or
push
mov
or
mov
into
aaa
adc
popf
jbe
cltd
jbe
in
daa
jno
das
fcomip
xchg
loope
nop
mov
imul
out
add
shrb
and
xor
mov
push
pusha
and
adcl
inc
cwtl
nop
mov
ljmp
jb
scas
imul
sub
lret
fiadds
inc
lods
cmp
xchg
sub
push
mov
dec
rclb
rcr
mov
inc
cmp
mov
xchg
stos
mov
ds
mov
inc
push
xchg
mov
xchg
mov
adc
xchg
loop
xchg
arpl
add
decb
push
stos
hlt
int
jne
cmpsl
in
add
xchg
repz
das
cmpb
fisttpl
xor
in
sub
lods
orb
mov
jnp
pop
xchg
sbb
sub
mov
stos
adc
xor
lods
std
jno,pn
sbb
test
adc
inc
xorl
inc
and
jmp
jne
push
outsl
je
clc
dec
mov
in
ficoml
jno
xchg
scas
mov
sub
or
pop
xorb
mov
ficoml
and
shll
test
cli
or
aas
mov
and
push
rorb
jo
rorl
icebp
xor
xorb
cmp
fnsave
adc
ffree
and
jne,pn
loop
lcall
hlt
xchg
out
aam
incl
dec
rcll
xor
lahf
fdivl
jae
cltd
imul
mov
mov
mov
test
jno
or
mov
fwait
mov
or
or
lods
scas
fidivl
pop
xchg
shll
and
jns
cli
cmp
adc
loop
lea
cmpsl
adc
lods
add
mov
dec
insb
js
hlt
sbb
lods
xchg
dec
rcl
cmpsl
repz
fwait
push
dec
ds
dec
xchg
arpl
fmulp
fst
mov
fiadds
jb
mov
push
mov
add
cmp
fisttpll
or
dec
repz
fs
dec
outsb
lock
lods
add
into
repnz
jb
fsubl
imul
fnstenv
loopne
aad
jg
and
cwtl
cld
mov
sarl
push
push
mov
sbbb
ljmp
mov
lods
in
cltd
add
mov
rcrb
mov
test
cmp
ret
lahf
orl
mov
imul
mov
pop
or
or
loop
outsl
add
sub
jo
je
addr16
iret
mov
sbb
or
ret
addb
push
fsqrt
inc
imul
mov
xor
in
movsb
adc
push
ljmp
jno
push
test
mov
jns
push
or
jmp
mov
rcl
push
arpl
in
mov
mov
push
outsb
out
test
lcall
jge
mov
gs
in
xor
add
sbb
nop
fsub
in
scas
ss
js
pop
pop
aaa
sbb
mov
or
cs
fs
jnp
sti
xor
mov
sub
jo
add
fwait
insb
xorb
inc
xor
mov
xchg
mov
lock
jecxz
jne
aad
scas
aas
adc
and
ret
nop
ljmp
sub
push
cmp
mov
mov
push
push
enter
mov
arpl
pop
cmp
dec
cmpb
iret
sub
hlt
sub
loop
push
cmp
mov
je
sti
mov
push
das
cmp
fs
add
xchg
mov
arpl
imull
jne
dec
cli
in
or
test
in
or
lea
sub
jg
ja
pusha
bound
iret
outsl
loopne
ret
cmp
or
fs
icebp
sbb
rcrb
cltd
jae
dec
fucomip
push
push
test
xchg
mov
mov
jle
in
lea
jb
das
dec
icebp
mov
add
jmp
mov
decl
hlt
pop
jmp
xchg
outsl
add
out
dec
imul
sarb
fidivs
or
in
jecxz
maxps
and
mov
ljmp
dec
fs
je
fcoml
push
push
int
rolb
test
push
inc
je
jne
mov
or
clc
dec
jecxz
test
jp
dec
xchg
and
lds
stc
fsubs
xchg
ja
mov
mov
inc
pushf
mov
lret
push
xor
fstps
pop
dec
xchg
sti
lock
add
sbb
mov
test
divl
paddb
testb
sub
in
adc
pop
mov
adc
sbb
push
aaa
xlat
xor
pop
aaa
jl
or
adc
cli
sar
push
popfw
sbb
ja
clc
mov
addr16
fiaddl
cwtl
lock
pushl
nop
pop
addr16
cld
jg
mov
cli
idiv
jnp
idiv
adc
popf
ret
sub
je
popf
push
pop
mov
sub
jns
sbb
jecxz
xor
iret
shr
jle
loop
iret
pop
clc
test
mov
lods
push
add
sub
stc
test
outsb
cmp
arpl
add
insl
jl
push
mov
adc
ficoms
sbb
xchg
pop
mov
loop
jl
jae
fs
pop
push
test
push
dec
xchg
xchg
repz
jae
das
pop
mov
xor
hlt
fisubs
pusha
push
mov
mov
sbb
das
subb
sub
outsb
xchg
fiadds
jne
stos
addl
call
fisttps
inc
js
out
mov
jg
and
scas
cltd
pop
or
mov
fadds
xor
or
pop
pushf
xchg
cmp
scas
dec
cmp
fistpll
dec
lods
mov
or
cs
push
adc
sub
jno
xor
fimuls
mov
add
mov
jmp
movsb
and
xchg
mov
icebp
fildll
xor
sbb
or
push
cmp
movsl
sbb
push
adc
rclb
rorb
and
shrl
xor
jo
xor
cmpsl
sub
stos
sbb
fs
or
add
js
ja
cmpsl
outsl
mov
or
imul
loop
jb
popf
fsubl
xchg
xor
cwtl
xor
shrb
push
std
cmp
shl
xor
mov
xor
mov
add
scas
push
test
adc
loopne
jmp
xchg
in
or
pop
xchg
and
in
fidivl
sbb
pop
sub
add
mov
jge
jecxz
ret
sar
push
mov
jnp
aas
call
cmp
cmp
ja
sbb
push
cmp
sbb
aad
xor
adc
je
pop
dec
addl
pushl
push
lods
push
iret
jb
dec
loope
xchg
pop
xchg
fwait
stc
jae
lods
jg
xor
mov
out
xor
sub
lds
sbb
pushf
movsl
push
js
lds
ss
fimuls
dec
lahf
mov
into
out
cmpsl
lock
aaa
mov
repnz
or
out
in
dec
std
aaa
inc
and
mov
pop
jo
stc
adc
pop
xor
xchg
add
inc
inc
jo
ss
in
mov
cmpsl
popf
daa
rcll
outsl
jno
jge
pop
cmp
xor
inc
xor
cmpsl
or
adc
dec
ret
ret
xor
hlt
arpl
and
faddp
jg
xchg
fcmovb
int3
aad
adc
push
flds
out
les
aad
ret
data16
je
push
vmwrite
faddl
in
repnz
push
test
inc
xchg
lcall
push
jl
stos
sti
das
cmp
push
out
outsl
sbb
daa
fldt
imul
fs
jno
jmp
imul
in
cmpsb
adc
jecxz
lock
je
jg
mov
sahf
sub
push
nop
div
sahf
dec
fcomps
jmp
lods
adc
pushf
stos
int
mov
hlt
xchg
out
sbb
mov
lock
enter
shl
idivb
cltd
cs
or
jg
rcrl
jmp
mov
cmc
mov
sahf
les
test
mov
repnz
ljmp
fs
xchg
je
xor
inc
mov
fpatan
jl
xor
arpl
aam
repnz
fs
cmc
dec
andb
jmp
cld
mov
dec
out
loop
add
jge
mov
pop
sub
aad
lds
adc
mov
mov
mov
cmp
cwtl
icebp
push
ret
test
lret
inc
mov
subb
push
dec
xor
jbe
loope
out
lea
xchg
cmpsb
popa
or
mov
jecxz
andl
jbe
xchg
inc
jge
and
mov
mov
arpl
nop
cs
cmc
sti
mov
cs
imul
in
fiaddl
push
add
popf
sub
sbb
xor
fstpt
adc
shl
dec
dec
mov
xchg
mov
dec
pop
xchg
std
jne
loopne
dec
inc
and
aas
movsl
movsl
mov
mov
xchg
mov
push
push
aaa
jg
mov
arpl
stc
lea
mov
pop
jbe
mov
imul
dec
jns
sbb
sbb
test
dec
xor
scas
cli
test
cmp
iret
push
dec
hlt
xchg
mov
mov
das
xorl
dec
test
jno
jo
push
push
cmp
sub
mov
sbb
mov
outsb
movsl
inc
in
cs
outsb
cmc
in
ss
and
test
out
or
das
imul
outsb
stc
pusha
icebp
xchg
dec
pop
jg
out
adc
sbb
push
jl
addr16
popa
xor
push
subb
inc
rorb
push
enter
testb
xlat
xlat
add
jne
push
jo
cmp
mov
out
shlb
cld
or
inc
mov
mov
shll
int
or
fldl
scas
dec
mov
or
lods
hlt
cli
mov
les
shll
jecxz
dec
sub
cwtl
loope
xchg
jb
mov
cmp
dec
add
test
pop
cmpsl
cmc
addr16
cmp
sbb
adc
mov
fdiv
fimull
aad
addr16
and
add
jmp
das
loope
test
xor
mov
xlat
mov
jg
dec
notl
cli
adc
xor
pop
hlt
test
jge
in
push
mov
fldcw
jne
sar
shlb
push
push
add
out
xchg
sub
sub
div
rolb
xchg
arpl
mov
sub
xchg
adc
xchg
sub
lock
sub
mov
psrld
mov
int3
ret
cmpl
jo
out
inc
xor
xchg
xor
mov
hlt
mov
xchg
dec
jae
icebp
imull
jbe
in
xor
scas
and
ja
jae
add
in
test
xor
jb
stos
test
mov
test
fst
insl
lock
iret
out
into
ret
xlat
lods
or
stos
add
sub
fcoms
and
loop
outsl
sbb
je
popa
arpl
outsb
ss
jge
lcall
clc
and
aad
add
xor
jg
out
cmp
jo
lahf
jmp
fistl
fadd
mov
and
data16
fisttpll
clc
loop
mov
bound
push
out
or
test
mov
xor
mov
cli
fwait
sub
and
mov
hlt
sub
enter
sar
cld
or
sbb
ds
fst
jb
sub
fs
jl
cmc
dec
repnz
fistpl
mov
add
push
adc
movsl
jns
push
add
mov
and
or
xor
lahf
je
mov
shrb
shll
jae
aad
std
add
xor
test
je
imul
or
std
shl
xchg
aam
mov
mov
xchg
mov
push
mov
sub
lods
sbb
test
out
cmp
shll
lret
push
mov
js
xor
sbb
xchg
mov
adc
repz
ljmp
out
scas
mov
jae
insl
mov
shll
lcall
leave
aas
mov
hlt
das
jns
rclb
outsb
gs
out
cld
cltd
sbb
push
out
and
inc
cmp
add
das
ffreep
inc
mov
aam
repnz
nop
xlat
pop
xor
negl
fsts
pop
fldt
push
xor
loopne
push
adc
icebp
rcll
out
add
decb
repnz
mov
out
mov
inc
rcll
mov
lods
mov
in
pop
xor
icebp
in
mov
rcrl
xor
arpl
in
sub
ds
and
jns
dec
addr16
xor
push
jge
lcall
sub
das
in
add
mov
push
clc
or
mov
or
xchg
jle
mov
mov
les
loope
sbb
push
jle
out
push
xor
jno
andl
inc
sbb
add
daa
jb
mov
and
adc
sub
xchg
loop
dec
or
in
in
hlt
jo
int3
in
ljmp
dec
ficoml
adc
pop
mov
mov
sahf
jp
inc
in
add
call
pop
adcb
jp
xchg
dec
pop
stc
cwtl
xor
mov
inc
out
andb
pop
gs
addr16
int3
dec
mov
dec
xchg
out
pop
shrb
sarl
mov
in
xchg
stos
mov
xchg
mov
call
loope
add
addr16
jle
das
lret
daa
or
aad
fstps
repz
in
in
xchg
scas
sub
add
les
inc
or
in
lock
ljmp
loop
loopne
fisubs
pop
outsl
jnp
aad
adc
loop
loopne
adc
repnz
inc
pop
fldcw
js
xchg
mov
sahf
jae
cmpsb
lock
push
ret
enter
ret
mov
adc
dec
jbe
xchg
jo
mov
mov
lock
xchg
mov
mov
pinsrw
xor
xchg
cltd
xchg
xchg
lods
jae
or
dec
jae
or
repnz
mov
mov
lods
mov
xchg
in
jecxz
sar
into
or
mov
das
push
cli
outsb
lods
add
sbb
add
mov
jo
mov
xor
sub
sub
pop
cltd
iret
loope
movsb
and
adc
std
sbbb
jae
jmp
popf
les
push
and
in
addr16
arpl
mov
xchg
iret
push
inc
ret
xchg
cmpsl
subb
vprotb
or
mov
or
nop
jmp
xor
ror
repnz
fisubrs
mov
cmpsl
mov
lret
add
stc
inc
and
mov
cld
test
enter
shl
out
call
adc
push
dec
xchg
or
pushf
mov
das
pusha
rcl
ljmp
mov
push
test
js
cmp
mul
decl
insl
jnp
addr16
mov
loopne
sbb
mov
je
lret
fiadds
cmp
mov
sbb
lock
xor
leave
aad
sahf
nop
loop
pushf
insl
mov
jge
xchg
cmp
cmp
repz
xchg
jae
rcr
and
loope
adc
fisubl
jo
mov
and
xchg
lock
adc
add
clc
lret
mov
adc
lock
pop
dec
sahf
jle
js
xor
mov
mov
aad
add
xchg
lret
mov
xlat
mov
cwtl
cs
adc
aaa
iret
cmp
roll
jmp
shlb
out
mov
aaa
xor
flds
push
xor
repnz
imul
mov
lods
xchg
out
inc
sarb
sbb
outsl
repnz
pushf
add
jecxz
inc
pop
hlt
loopne
ja
add
cwtl
cld
mov
enter
lahf
out
test
cmpb
es
cld
xchg
adc
outsl
and
mov
out
decb
repnz
popf
sub
mov
mov
repnz
sub
adc
cmp
bnd
mov
xor
push
jecxz
xchg
stc
jo
je
sbb
fisttpl
mov
sub
mov
loope
outsb
and
mov
mov
arpl
rcr
xor
mov
enter
dec
cmpsl
sbb
xchg
mov
addr16
imul
mov
mov
lret
in
lods
xlat
lods
fldenv
das
jae
cmp
xchg
test
jecxz
pop
or
lret
push
xor
mov
shlb
dec
cmp
xchg
push
sub
ljmp
shrb
setbe
xor
cli
int3
or
sbb
sub
jo
aam
push
movsb
push
rol
push
ds
bound
fnsave
jmp
push
je
sub
aam
loopne
rcll
fs
mov
adc
mov
fmull
scas
fs
scas
or
jae
std
jo
adc
pop
xchg
out
mov
and
sbb
xchg
jbe
lcall
sahf
mov
cli
xchg
push
lods
xchg
jno
test
push
cmc
push
pop
and
daa
inc
lcall
jb
shrl
repnz
xchg
jne
xchg
cmpsl
div
jmp
popa
hlt
repnz
cmc
xor
lock
pop
into
out
mov
imulb
mov
push
mov
out
xor
lret
add
cltd
push
int
or
fdivrp
or
aad
je
rcrl
add
cwtl
cmp
cmc
jno
lock
mov
test
sbb
sub
je
shll
inc
popf
lcall
xorl
in
push
rorl
cmpb
push
mov
pop
clc
pop
div
mov
mov
dec
add
fwait
repz
xor
int
mov
push
xchg
cmp
add
cli
dec
pop
jo
jo
push
popf
sbb
jmp
jp
stc
fwait
repnz
inc
push
sub
push
cmc
call
jns
ds
cmp
lret
dec
bound
xchg
jmp
rcl
pushf
fbld
xchg
divb
out
lock
popf
imull
xchg
icebp
das
fbstp
lock
mov
add
rorl
je
sbbb
ds
xchg
scas
and
je
lret
push
out
inc
mov
adc
imul
sub
sti
ja
mov
xchg
push
adc
add
sub
cmp
hlt
sub
pop
dec
inc
ficoml
sbb
dec
sbb
and
ret
dec
in
add
xchg
jl
hlt
mov
into
sbb
pop
mov
mov
sarb
dec
mov
notb
add
in
lds
mov
xor
mov
lret
out
mov
out
fdivp
mov
outsl
pop
aad
push
cwtl
int3
scas
xor
dec
mov
addl
ja
mov
call
stos
mov
repnz
cmp
jo
push
xor
rcrl
jne
jnp
mov
add
push
ds
inc
das
ret
xlat
jecxz
sub
divl
sahf
inc
add
mov
dec
sbb
adc
in
xor
add
dec
push
ret
stc
xlat
pop
jecxz
mov
sub
stc
mov
xchg
mov
aad
mov
ss
ljmp
add
out
repz
jg
xchg
xchg
arpl
jge
das
lds
repnz
pop
xchg
xchg
cmp
pop
adc
inc
mov
pop
cli
xor
sbb
loop
push
outsb
xor
icebp
repnz
sbb
mov
xchg
shl
lcall
xchg
shl
mov
clc
jl
push
inc
xchg
mov
push
aad
loopne
xchg
sub
fisttpl
sbb
pop
imul
mov
fldenv
mul
mov
or
stc
pop
push
push
pop
adc
and
in
sbb
xor
or
fistpl
lret
cmp
gs
ja
repnz
jo
xor
fwait
nop
xchg
mov
xlat
cmpsl
xor
outsb
mov
mov
lcall
ja
call
mov
xor
add
xor
icebp
xor
adc
subb
cltd
add
jbe
sbb
cmp
ds
push
jecxz
xor
pop
insl
stos
jmp
pop
inc
in
arpl
fistps
or
xchg
out
clc
lret
adc
sbb
xor
mov
jne
lock
xor
sbb
cltd
and
cmp
cltd
xor
add
std
xor
jge
xchg
repz
pop
into
ror
mov
xchg
jno
stos
test
jmp
xchg
mov
loopne
dec
adc
popf
scas
scas
test
mov
enter
pop
in
lock
push
push
add
mov
jae
xor
test
aaa
call
nop
mov
shl
mov
lea
stc
testl
nop
scas
mov
adc
fnstenv
jecxz
in
mov
push
sub
addb
movsl
xchg
lods
aaa
mov
les
ja
mov
clc
cmp
mov
xchg
jmp
test
aaa
in
ljmp
addl
aaa
mov
mov
shl
fiaddl
cmc
ja
decl
fwait
nop
cli
shlb
aaa
sti
jmp
add
mov
xlat
dec
mov
push
in
ljmp
les
int3
xchg
bnd
or
add
cmpsb
sub
sub
sbb
xchg
add
pop
mov
adc
push
nop
stc
adcb
lock
mov
jp
inc
jo
cmp
jo
jmp
in
mov
or
decb
sub
xchg
sbb
cs
pusha
out
jp
sahf
mov
stos
cmpsb
sbb
in
adc
mov
pop
jbe
jno
jbe
adc
test
stos
and
adc
inc
shlb
test
test
xchg
cmp
xlat
and
test
xchg
movsb
sub
stos
push
repnz
jb
jmp
shl
mov
mov
mov
fsubl
test
and
pusha
mov
xchg
mov
jno
mov
xchg
add
jge
lock
out
xor
mov
adc
shlb
mov
cmp
jno
scas
jp
repz
hlt
jne
jbe
ja
js
clc
jns
jp
jnp
jl
cld
jge
jle
jg
add
addb
add
test
xchg
out
mov
mov
mov
mov
mov
adc
xchg
adc
xchg
push
xchg
pop
xchg
sbb
lcall
sub
pop
lahf
xchg
and
out
mov
and
out
and
cmpsl
sub
fildll
xor
dec
mov
das
dec
xor
scas
imul
fistps
jecxz
sbb
ja
fldt
xorb
in
push
xchg
jb
gs
shlb
add
mov
jg
push
sub
lahf
cmpsl
sub
and
sub
cli
jne
repnz
xchg
mov
sbb
testl
xchg
adc
ret
push
adc
clc
xchg
mov
movsl
pop
push
int3
movsb
and
leave
shlb
cli
mov
lret
pop
mov
cmpsb
pop
pop
sub
arpl
cmpb
mov
lods
or
int3
sub
adc
repz
pop
aad
pop
mov
xchg
push
sub
std
popf
or
and
es
stos
jp
addb
outsl
add
xchg
dec
adc
xor
adc
and
loop
xchg
lahf
das
lods
jnp
sub
cmp
test
dec
sti
jg
pop
stos
pop
push
repz
xchg
xchg
and
dec
lahf
sub
int3
jg
sub
test
and
mov
and
int3
sti
push
repnz
pusha
andb
es
ret
mov
add
xor
jb
addb
popa
cmpsl
add
add
mov
rclb
icebp
jge
nop
mov
test
in
es
aad
repz
mov
xchg
in
push
mov
dec
mov
in
mov
adc
dec
test
divb
cmp
repz
add
xchg
insb
cmpl
scas
fstpt
or
loope
filds
aas
mov
mov
xor
and
xor
shll
push
sahf
or
cltd
cmp
jmp
repnz
pusha
xchg
sahf
filds
or
ljmp
call
imul
mov
mov
xchg
xorb
and
mov
icebp
jns
xchg
cli
adc
cmpsl
inc
lret
bound
mov
daa
sub
xchg
dec
popa
mov
and
call
and
sub
stos
test
orb
pop
dec
mov
pushf
xor
xchg
sub
sub
lcall
test
inc
cmpsb
fwait
call
push
or
adc
or
loope
add
adc
cmp
sbb
mov
shll
and
mov
cli
or
aaa
inc
jnp
pushf
xchg
xchg
add
sbb
lods
out
xorb
int3
xchg
fdivp
mov
mov
out
sbb
call
out
mov
dec
xchg
mov
adc
xchg
outsl
push
sub
insl
sub
xor
adc
add
in
ret
out
push
out
aaa
clc
adc
jg,pt
outsl
or
push
xchg
out
ds
and
cmp
pop
sbb
xor
mov
mov
mov
out
mov
mov
cmp
mov
ds
rolb
ret
ret
inc
les
inc
movb
dec
enter
lret
lret
dec
int3
dec
int
into
dec
out
iret
push
rclb
push
rclb
rcll
aad
push
out
xlat
pop
fcomps
pop
ficompl
fistpl
fstpl
pop
out
fbld
popa
loope
loop
out
jecxz
in
in
out
out
out
call
imul
insb
in
insl
in
outsb
imul
push
or
jp
xchg
out
sbb
inc
in
xor
pop
xchg
rorb
xchg
out
mov
jp
jae
sub
cli
clts
push
fsub
test
xchg
into
jae
int3
stos
out
push
dec
into
xchg
sbb
cltd
je
sbb
cmpsb
and
jb
sub
add
inc
nop
div
movsl
and
movsb
mov
pop
out
nop
mov
inc
sub
xchg
pop
movsl
cltd
je
scas
sahf
repnz
nop
daa
sub
decb
push
mov
int
jnp
mov
sbb
and
jmp
push
cwtl
sub
repz
sbb
shl
mov
jp
orb
dec
adc
popf
test
sbb
loopne
sbb
movzbl
clc
sbb
in
push
lahf
mov
fwait
dec
rdmsr
repz
jle
mov
pop
lods
xchg
sahf
sub
clc
xor
adc
push
inc
pop
and
leave
stos
mov
xchg
or
sarl
clc
mov
cmp
jns
sbb
sbb
stc
sbb
sbb
xchg
int
cld
sbb
outsb
lock
mul
or
inc
out
xchg
mov
sub
mov
xchg
cli
sub
orb
adc
daa
sbb
jbe
test
xchg
outsb
test
mov
and
mov
xchg
cli
sub
cmp
hlt
jg
aas
icebp
push
mov
xchg
jg
mov
clc
cmc
jmp
cwtl
mov
lods
lahf
out
xchg
scas
notb
nop
adc
sub
pop
and
lret
dec
fsubs
lock
add
out
repnz
adc
adc
add
jg
call
xlat
movsl
mov
adc
cmp
or
add
imul
xchg
mov
nop
sbbl
push
xchg
sub
fld
pop
fisubs
movb
mov
out
mov
negb
inc
mov
mov
bsr
sub
dec
and
and
test
imul
ja
and
pop
sahf
pop
mov
sub
cmpb
fdivrs
ja
push
sar
testb
test
add
std
cmp
mov
fs
mov
ja
nop
jns
push
scas
xor
stos
sahf
ja
sbb
aam
incb
mov
repz
hlt
add
sbbb
hlt
rcl
sbb
and
iret
xchg
movsl
dec
ljmp
into
sub
mov
cmp
shlb
cs
scas
in
add
out
xor
repnz
jle
aad
mov
repz
inc
push
mov
repz
call
mov
ss
cmp
adc
cltd
ror
mov
int3
inc
sahf
adc
adc
ljmp
push
jle
scas
pop
stos
mov
popa
lret
cld
mov
fcoms
fisubl
jle
aas
lock
cli
or
mov
pop
repnz
mov
mov
dec
jle
sbb
es
test
adc
cmc
inc
test
ucomiss
and
repz
sub
push
jo
lock
mov
jae
cwtl
es
sub
pop
scas
or
rcrl
xchg
and
add
lods
and
stc
adc
add
jo
cwtl
and
and
jmp
cmpsl
push
out
shr
adc
pop
mov
xchg
insb
sahf
inc
jg
pop
sbb
imul
xchg
mov
push
xchg
cltd
mov
fwait
outsl
add
out
sbb
add
adc
testb
jmp
adc
gs
and
adc
cmpsl
addb
imull
jno
es
stc
imul
mov
lock
fdivr
fs
lock
lock
mov
mov
lds
xchg
push
push
mov
jns
lock
jle
push
xor
add
dec
fsubr
pop
dec
hlt
aam
adc
movsb
lods
dec
js
repz
jle
inc
cli
pop
mov
xchg
jmp
push
sti
loope
sbb
aaa
scas
std
sbb
pop
outsl
xor
insl
jnp
sub
pop
mov
insl
sub
mov
outsl
loope
push
xor
mov
out
xchg
lret
push
xor
xchg
lcall
and
adcl
notl
into
push
push
and
mov
lods
mov
mov
mov
mov
cli
xchg
and
adc
mov
jl
add
adcb
lcall
call
out
xchg
outsl
xor
les
cltd
jb
jno
testb
xchg
imul
cmc
ds
adc
mov
jl
scas
pop
sbb
jg
xor
jne
xchg
repnz
pop
mov
cltd
pop
adc
mov
xchg
push
push
sub
popf
xlat
mov
cwtl
iret
mov
bnd
testl
jecxz
movups
cmpsb
xor
push
sbb
mov
fldt
hlt
cmovb
mov
mov
jae
pop
ror
aaa
and
mov
add
pop
mov
pusha
mov
loopne
dec
out
sbb
mov
pushl
adc
lcall
sbbb
cmp
fwait
les
movzbl
aas
test
adcl
addr16
mov
loope
dec
decb
and
lock
adc
push
mov
out
sbb
mov
std
mov
mov
push
aam
pusha
inc
div
sbb
or
mov
rcll
loop
push
xchg
xor
sub
aad
cmp
cmpsb
icebp
out
mov
xorl
mov
stos
cwtl
xchg
pushf
add
fdivp
les
add
jg
aaa
jae
jnp
jl
scas
cmp
jnp
adc
pop
test
sbbl
outsl
sub
jae
jnp
nop
ja
stc
add
adc
test
movsl
bnd
icebp
xchg
jb
hlt
xchg
repnz
cld
je
add
mov
add
clc
aaa
ja
div
mov
or
aaa
psrld
popa
xchg
xchg
xchg
repnz
sahf
sbb
lods
add
nop
cmpsb
cld
xor
xchg
scas
enter
mov
popa
mov
xchg
aaa
addb
mov
mov
cmp
mov
pop
mov
adc
std
mov
or
inc
and
inc
addr16
cmpsl
lock
outsl
cmp
fmul
rolb
xor
pop
mov
fidivl
outsb
jo
repz
shrb
pop
adc
mov
pop
pop
lcall
cli
gs
mov
in
adc
loopne
outsl
fdivrp
jno
cmpsb
jnp
fsts
push
outsl
cmpsb
xor
mov
fwait
and
sbb
mov
stos
mov
out
lock
scas
sub
pop
shl
aas
inc
out
das
ds
testb
pop
dec
inc
push
aas
das
in
cli
mov
repnz
dec
xchg
lgs
loopne
sti
or
mov
add
jno
aas
xchg
repz
jno
or
popf
and
push
and
pop
fcmovu
fisubrs
pop
lods
mov
in
test
mov
push
jp
sub
clc
xchg
popf
cmpb
xorl
repnz
jne
das
lock
repnz
and
repz
repnz
add
ja
xor
xchg
repz
orb
xor
out
bnd
sar
cli
nop
mov
xor
xchg
jl
call
aam
std
les
jle
xchg
cmp
lahf
nop
jg
mov
pushl
xchg
mov
nop
stos
xchg
xor
notl
les
pop
xchg
sbb
outsl
jo
adc
repnz
xorb
cld
cmp
clc
int
repnz
nop
ljmp
ficoml
test
aaa
enter
idivl
aaa
mov
scas
sbb
mov
xchg
orb
test
nop
jae
aad
xchg
enter
xchg
setge
xchg
lock
lock
loop
sub
hlt
mov
pusha
jo
stos
scas
xchg
cmpsb
cmpb
loope
negl
cwtl
lods
lret
nop
lods
mov
ja
push
pop
inc
popa
lock
clc
call
cmp
addb
push
dec
nop
fsubrs
ja
pop
xchg
jae
adc
sbb
sub
pop
jmp
nop
testb
adc
mov
outsl
rol
in
mov
xchg
je
mov
das
aaa
dec
cli
push
nop
cs
pop
jno
out
mov
hlt
shlb
imul
repnz
mov
hlt
stc
notb
call
mov
dec
int
into
lock
push
jl
mov
jo
gs
fcmove
pop
xchg
ljmp
add
inc
push
lea
insl
add
mov
push
jnp
xor
adc
jno
add
fisubrs
mov
divl
or
pop
rcll
adc
stos
out
shr
fidivs
cmp
ret
xor
add
jo
push
fisubrs
out
imul
adc
aas
loope
pusha
aam
add
jp
das
sub
ljmp
jmp
fs
fsubrs
fcomps
out
stos
cmp
and
push
aaa
out
cmc
rol
jnp
inc
xchg
sub
sub
mov
test
lcall
or
gs
xor
or
mov
out
shl
dec
cwtl
inc
mov
or
push
insl
xor
mov
add
and
cmp
push
sarb
push
out
cmp
mov
xchg
sahf
rolb
add
insb
jne
aam
repnz
insb
outsl
push
daa
or
adc
ficomps
push
xor
imul
and
lcall
jbe
mov
jl
les
inc
in
mov
leave
and
mov
scas
or
popa
pop
mov
iret
insl
rcl
pop
jo
ja
aam
loopne
push
xchg
sbb
pop
adc
loope
ljmp
nop
push
clc
pusha
mov
lret
outsl
mov
inc
push
pop
fiadds
int3
xor
pop
xor
bound
jo
sbb
in
out
xor
jns
nop
pop
xchg
xor
or
lods
sub
les
loopne
mov
pop
sbb
out
add
das
or
jnp
and
adc
into
out
les
adc
pop
or
mov
repnz
jl
loop
mov
jo
shll
leave
cmp
or
mov
daa
cld
xlat
add
xchg
out
adc
int
jbe
fildl
out
mov
out
ja
xchg
ds
sbb
and
add
loopne
mov
aad
into
ss
ror
out
iret
sub
mov
sbb
mov
xor
cli
xchg
adc
lahf
insl
fidivs
inc
hlt
icebp
mov
out
ds
shl
pop
rcr
lret
negb
loop
mov
push
lock
xor
cmp
cli
fucomip
addb
mov
mov
fwait
outsb
out
loopne
jnp
mov
jns
stos
jecxz
ljmp
mov
mov
add
leave
movsl
mov
scas
test
mov
stc
cltd
pop
pop
movsl
cli
jno
pop
test
repz
test
fwait
mov
dec
add
mov
lcall
add
andb
xchg
sti
jge
jle
adc
xchg
in
test
inc
icebp
mov
mov
sub
and
and
movsb
movsb
loope
sbb
or
inc
lods
adc
std
imul
arpl
es
push
daa
lcall
cmpsb
inc
call
jle
add
sub
lods
xor
out
xchg
pop
push
push
dec
out
xchg
test
daa
lods
stos
lods
cmp
pop
lods
lods
ljmp
mov
fwait
adc
and
je
adc
push
sub
push
andnps
xlat
in
or
out
mov
push
inc
jbe
push
insb
xor
cmp
push
pushw
int
fistl
push
jno
adc
xchg
inc
and
inc
push
mov
aam
in
out
call
loopne
loop
in
out
call
insl
into
or
loopne
loop
in
out
call
or
mov
paddsb
in
pop
in
scas
in
inc
in
inc
in
lret
in
push
in
jmp
or
mov
cmc
repz
aam
push
dec
popa
adc
movsb
jnp
xorb
cmc
xchg
or
jecxz
cmc
mov
jo
mov
or
loop
in
out
call
out
jne
or
mov
or
and
sub
xor
mov
cmp
mov
or
lods
shrl
fisubrs
imul
or
cmp
cmp
mov
sbb
lahf
ds
xchg
mov
and
xor
inc
push
push
pop
pop
out
or
push
push
xchg
pop
lahf
pop
daa
arpl
imul
imul
push
imul
xchg
sar
inc
rclb
inc
cmp
bound
rorl
cmpsl
or
loopne
dec
cmp
mov
or
mov
lea
push
imul
xchg
pop
jb
or
jnp
sub
xor
push
cltd
test
jecxz
repnz
and
das
jb
push
das
or
add
push
roll
inc
enter
int3
test
shrb
lods
fs
hlt
xchg
cmp
inc
std
pusha
ds
or
and
jo
jae
add
faddp
or
cmpsl
lea
xor
cld
xor
or
mov
mov
popa
cmp
std
inc
ds
jle
xor
or
push
rcll
pop
imul
mov
aaa
pop
cmp
addr16
imul
into
outsl
or
mov
test
rorb
subb
and
dec
push
pop
push
push
loopne
loop
in
out
call
xlat
in
in
in
out
or
pushf
mov
or
or
adc
add
dec
bound
push
fbld
loopne
mov
sahf
scas
pushf
outsl
scas
out
xchg
push
out
or
or
push
xchg
push
sbb
mov
push
scas
push
xor
push
ss
cmp
push
mov
push
rcll
push
fistl
push
jecxz
imul
cmp
dec
xchg
push
xchg
pop
mov
push
out
in
out
xchg
in
out
call
mov
test
add
lods
push
lods
lods
pop
lods
popa
lods
lods
jmp
cmp
adc
pop
sbb
lods
ds
push
imul
repz
xor
fimull
mov
push
mov
pop
mov
cmp
xchg
mov
and
adc
fwait
cmpsb
or
je
decl
lea
push
rorb
pop
cmc
jne
adcl
cmp
imul
iret
in
push
in
ffree
mov
js
or
xchg
mov
push
mov
adc
dec
push
fstpl
loope
in
jmp
cmp
dec
pop
frstor
out
adc
pop
and
addr16
inc
imul
imul
ljmp
test
pop
jmp
mov
jnp
scas
cmp
pop
push
test
jecxz
orl
xchg
addb
aam
pop
call
or
or
cmc
jo
or
jecxz
or
les
cmpsl
and
push
lret
aas
add
cmp
fistpl
or
sub
std
fdivrs
pop
mull
mov
addl
sbb
mov
jmp
push
mov
xchg
gs
jecxz
insl
fidivs
cmpsl
adcl
stos
mov
lods
cmp
lods
pop
pop
out
mov
or
insb
je
or
sbb
push
pop
pop
pop
jge
ret
xchg
mov
mov
pop
xchg
push
cmp
movsb
arpl
imul
imul
in
out
call
jo
lock
push
pushf
pop
sahf
pusha
shrl
push
ljmp
les
adc
sub
arpl
mov
cwtl
out
call
insl
xchg
xchg
add
in
xor
xchg
ret
mov
add
xor
inc
jb
data16
mov
sbb
xor
inc
in
out
call
loope
ljmp
cld
or
mov
or
sbb
popf
push
and
ds
cmp
inc
sahf
ds
shll
fmul
or
mov
lds
cld
cld
or
mov
pop
or
add
pslld
pop
pop
mov
mov
or
in
mov
int3
cmp
call
cmp
and
push
xlat
xchg
xchg
shlb
out
mov
addb
test
lret
xchg
cmp
jne
xchg
dec
rcll
push
test
push
xchg
inc
xor
mov
mov
stos
les
movsb
test
test
sub
or
mov
jmp
jno
mov
xchg
mov
xor
mov
xor
mov
fwait
stos
xor
jg
xchg
jge
rorb
out
or
loopne
mov
sbb
and
mov
rclb
mov
or
mov
je
or
pop
add
fimull
imul
cli
stos
fcoms
jo
and
cmpsl
cmp
jmp
sub
inc
mov
call
cld
test
or
js
xchg
cmp
test
lcall
lcall
push
into
pop
shrl
cs
loopne
loop
orb
cld
adc
inc
pushf
cmc
add
mov
mov
iret
dec
and
push
imul
xchg
or
xchg
aad
mov
push
cmpsb
jbe
push
mov
push
ror
add
xor
ret
mov
or
test
cmpsl
push
push
loop
gs
stos
push
cs
xor
arpl
imul
xchg
in
jbe
push
cld
ss
push
adcb
scas
stos
bound
mov
or
adc
repnz
xor
inc
and
cmp
les
enter
int3
into
fs
testb
adc
and
xor
bound
bound
dec
iret
loopne
out
arpl
lretw
rcrb
mov
mov
cmp
or
xchg
aam
xor
cmp
xchg
inc
push
push
lret
push
rolb
das
in
mov
push
ds
mov
popa
or
add
mov
or
mov
fs
or
and
mov
imul
xor
repnz
adc
mov
in
test
out
dec
addb
pop
scas
out
fmull
daa
loopne
mov
dec
xor
mov
test
adc
mov
inc
aas
je
xchg
mov
pop
sub
or
call
lock
das
or
scas
stos
mov
or
sti
sub
jns
fistpl
mov
lret
jb
jl
lcall
call
or
push
adc
adc
cwtl
incb
pop
mov
inc
mov
mov
scas
stos
mov
cld
sub
js
push
ret
push
pushf
pop
sahf
cmp
mov
addr16
add
mov
fimuls
mov
mov
cli
mov
stos
stos
enter
push
fimull
ljmp
mov
fimull
push
test
mov
push
stos
adc
mov
lret
ficoml
jle
mov
or
fimull
call
mov
mov
xchg
lret
mov
clc
cmc
mov
adc
or
aaa
xchg
mov
mov
mov
lea
push
mov
push
rolb
xor
shrb
out
lcall
in
call
cmc
fdivrp
mov
push
sbbb
push
xchg
push
cwtl
push
pushf
push
mov
dec
lods
push
mov
mov
aam
adc
inc
mov
repz
lods
lret
orl
adc
fsubrs
fisubrs
in
out
call
pop
je
jmp
dec
test
xchg
in
movsb
lods
adcb
mov
push
xchg
push
cwtl
bswap
pushf
test
push
mov
scas
ljmp
outsl
in
les
add
cli
jne
adc
test
push
icebp
add
int
imul
mov
lods
xchg
es
or
push
dec
and
xchg
int3
adc
xchg
adc
test
or
or
mov
aad
dec
movnti
fiaddl
sahf
jmp
ljmp
aad
jecxz
cli
jo
and
lret
or
inc
shlb
insb
shr
dec
enter
stos
push
pop
cmpl
and
inc
into
mov
push
icebp
out
fmulp
inc
imulb
cld
flds
arpl
push
iret
fcomp
cld
out
lea
xor
push
out
test
das
notl
stos
cmpsb
movsb
es
pop
jg
cwtl
inc
cmp
add
mov
mov
or
pop
xchg
or
aas
clc
pop
in
or
test
push
popf
std
cmpsl
pop
adc
push
rorb
stos
daa
sub
cmpsl
cld
cmp
xor
sub
push
xor
wrmsr
and
xor
sub
addr16
add
jnp
mov
mov
or
jl
xchg
and
ss
divb
xor
mov
or
jp
sub
repnz
aas
mov
cmpsb
cmp
out
test
mov
xchg
loopne
add
add
data16
push
mov
jns
and
xor
add
xlat
add
xchg
jno
jne
lcall
adc
push
mov
mov
jg
add
dec
adc
inc
loope
xchg
xor
orb
or
out
rsqrtps
push
popa
test
imul
inc
adc
pop
push
add
call
mov
push
xor
mov
cld
push
and
cwtl
imul
pop
psubusb
mov
mov
jae
lret
sub
mov
jg
jecxz
frstor
orb
mov
out
cltd
adc
sub
sub
xor
fsubrs
mov
repnz
mov
mov
addl
xchg
testb
inc
mov
or
pop
or
jae
mov
pop
xchg
mov
int
testb
repnz
mov
jns
mov
outsb
insb
sarb
mov
das
orb
cmp
jb
adc
or
movaps
fisttps
mov
push
imulb
icebp
mov
mov
mov
cmp
pop
jg
fdivs
push
aas
movzwl
push
lea
std
cmp
push
add
divb
and
cmc
push
xor
fimull
fwait
lahf
mov
push
pop
aas
call
ret
pop
mov
and
clc
pop
sti
ret
inc
xchg
jg
adc
pop
adc
adc
leave
jbe
xchg
sbbb
sub
imul
lods
repz
xor
add
icebp
cmpsb
mov
aas
cmp
sbb
push
addr16
ret
and
cld
test
push
or
jo
clc
js
adc
adc
gs
stos
adc
sarb
push
fidivrl
in
sub
adc
inc
adc
mov
mov
mov
adc
test
cmp
or
xor
repz
popl
stos
xchg
clc
pop
sub
flds
test
xchg
mov
daa
lea
adc
xchg
xor
and
lea
je
scas
adc
out
sbbl
xor
into
sti
fwait
jl
imul
mov
jae
and
xor
mov
movsb
arpl
les
sbb
int
xchg
jecxz
jg
test
mov
mov
aaa
aad
cmpsl
lahf
push
movsb
shl
and
in
xchg
push
sub
sbb
call
push
out
jge
lahf
mov
pop
xor
repnz
sbbl
xchg
xchg
movsl
fsubs
mov
shl
mov
mov
mov
sub
inc
mov
xchg
push
push
mov
xchg
popa
fsubs
mov
addr16
jne
sbb
jl
sub
adc
movsl
lcall
adc
movsb
sarl
js
mov
jecxz
stc
psadbw
mov
sbb
nop
add
aas
mov
mov
xchg
adc
lret
mov
and
leave
lods
fwait
xorl
cltd
fwait
sub
mov
bound
lock
mov
sbb
mov
and
push
lahf
jmp
pop
mov
inc
sbb
xchg
xor
and
jg
pop
es
adcl
or
call
addl
mov
sub
cmpsl
jae
shll
or
bound
std
push
inc
add
loopne
loop
in
push
imul
mov
nop
loop
ret
mov
dec
mov
jmp
or
roll
or
fistl
cmpsb
inc
xor
fbld
jge
inc
lods
ljmp
jb
loope
mov
outsb
mov
mov
lods
push
popa
add
test
hlt
cmpsb
test
movsb
test
cmc
cmc
xchg
jne
test
mov
cmp
lods
push
icebp
mov
sarl
push
xchg
mov
aas
add
ljmp
cmpsb
in
jnp
dec
ret
cmp
sub
stc
jnp
mov
lock
fildll
fs
push
inc
or
frstor
stos
outsl
imul
test
inc
iret
add
lahf
stos
cmp
das
mov
lcall
sbb
dec
call
cwtl
mov
xchg
arpl
test
adc
sbb
xchg
push
out
ror
mov
pmuludq
jnp
out
push
popa
data16
cmp
or
in
mov
std
in
adcl
push
loope
addb
mov
or
or
test
aaa
jae
mov
cmp
or
jb
xchg
inc
xchg
jb
call
stos
pop
mov
cltd
mov
mov
clc
or
mov
inc
add
rcll
lock
mull
lret
or
test
xchg
xchg
dec
xlat
ja
mov
xchg
adc
pop
repz
adc
aaa
xchg
xchg
jbe
arpl
xchg
add
sub
xlat
sub
dec
sub
mov
mov
lock
lret
lcall
push
mov
std
jae
or
mov
sbb
adc
add
dec
enter
xchg
push
adc
xor
mov
jge
movsl
sub
cwtl
pop
pushf
lcall
ss
addb
movsb
test
jp
outsb
cmp
mov
addl
outsb
jmp
pop
add
fwait
call
je
add
or
pushf
mov
std
pop
bsf
xor
adc
jne
test
adc
xchg
lahf
fistps
movsb
pop
cltd
xchg
and
jge
jl
push
dec
movlps
xlat
push
dec
adcb
arpl
xchg
add
adc
mov
mov
repz
add
sti
jp
ljmp
cs
add
leave
lcall
stc
movsb
sbb
fisubs
sub
js
sti
dec
loopne
rclb
or
and
mov
sub
js
scas
sbb
xchg
pop
mov
jge
add
push
into
movsb
xor
sub
push
fidivl
xchg
cli
cmpsb
int
arpl
adc
mov
les
sub
adc
push
jg
int3
pop
or
cmp
sbb
fstpt
js
xor
jmp
subl
rcrb
cmpl
sti
mov
sbb
sbb
dec
arpl
das
cmp
test
icebp
jae
push
or
adcb
mov
insl
cmp
cs
pusha
addr16
in
xlat
lahf
or
pop
cmp
push
loope
filds
mov
xchg
sub
mov
sbb
test
or
pusha
les
mov
mov
es
cmpsb
int3
stos
adc
out
popa
xlat
fcompl
adc
in
int3
and
dec
sbb
mov
movsb
ja
pusha
imul
and
imul
fildl
and
sbb
aad
inc
clc
mov
sbb
rol
and
mov
call
xor
daa
movsl
ja
addr16
xor
arpl
jae
pop
sti
in
mov
sub
pop
jge
xchg
jno
jge
stc
out
sti
or
std
rorb
add
xchg
xor
lock
xor
add
xchg
sbb
xchg
adcb
push
and
or
sbb
xchg
jg
add
sbb
mov
xchg
dec
xlat
test
mov
push
mov
cmpsl
imul
roll
loopne,pn
pop
test
push
movsb
mov
cmpsl
mov
add
and
jge
sti
sub
jae
xchg
push
pop
lcall
push
mov
jecxz
add
cmpsl
or
scas
dec
or
int
cmpsb
mov
iret
test
test
pop
aaa
and
pop
imul
aaa
inc
loopne
pop
popa
ret
sbb
sbb
scas
and
cmpsb
aaa
cmp
in
xchg
xchg
scas
sub
imul
jns
aas
sub
scas
out
xor
stos
in
or
xchg
in
mov
push
or
sbb
out
mov
add
xchg
shrb
or
mov
or
push
rorb
nop
adc
in
mov
adc
gs
push
push
lahf
clc
decl
adc
ret
mov
xchg
push
cwtl
xchg
in
sbb
jns
xchg
into
and
pop
lods
divb
repz
adcb
subb
cltd
sbb
mov
push
loope
cmp
test
and
mov
sbb
inc
sub
cmpsl
out
push
add
rcl
std
cs
xchg
cwtl
mov
dec
rolb
gs
or
std
cltd
loope
pushf
cmp
movsb
mov
cmp
fstp
inc
shll
int3
or
mov
dec
daa
stc
pop
or
jnp
mov
and
lret
add
repz
notb
push
mov
repnz
xchg
adc
out
pop
cmpsl
sbb
test
subb
xchg
lods
ret
cltd
popf
sbb
insb
sbb
mov
or
int3
out
es
or
cwtl
aas
dec
fstl
sub
das
bswap
cmp
js
mov
mov
adc
mov
imulb
mov
cltd
hlt
orl
inc
inc
clc
push
sub
or
mov
or
sarb
clc
loop
or
mov
xlat
insb
bnd
add
insb
in
int
cs
xchg
push
push
ds
in
adc
sbb
push
test
mov
adc
xchg
push
xchg
mov
xchg
es
mov
out
or
loopne
sub
mov
adc
or
jle
pusha
fstpt
popa
mov
adc
sbb
pop
mov
mov
xchg
pop
pushf
inc
sbb
mov
fldenv
movsb
test
jnp
cmpsb
and
push
adcb
xchg
mov
dec
lds
xor
movsb
jmp
xchg
movsl
cmpsl
cmc
mov
mov
add
or
or
rcll
mov
lret
cmp
push
or
sub
mov
sub
fstpt
cs
fldcw
inc
scas
in
xlat
aad
inc
mov
mov
leave
xor
pop
push
sub
add
fildl
lahf
push
stos
arpl
adc
pop
imul
mov
and
jmp
arpl
outsb
jle
mov
xchg
mov
mov
sarb
imul
imul
pop
mov
outsb
popa
loope
dec
stos
daa
lret
fisttps
out
arpl
inc
mov
test
xchg
mov
push
imulb
sub
mov
mov
dec
xor
sbb
inc
xlat
pop
sbb
and
shlb
jmp
jb
mov
add
orl
movsb
dec
fwait
test
popa
nop
inc
dec
cltd
xor
xor
stos
arpl
inc
sub
push
arpl
add
cmp
aad
and
inc
hlt
or
mov
push
aas
sarl
add
bound
repnz
sub
xchg
test
data16
xchg
mov
cmp
lds
ds
clc
testl
test
jne
or
mov
mov
cmp
lods
enter
das
add
push
cltd
pop
xchg
push
mov
jg
jecxz
or
add
add
or
mov
les
add
ds
inc
or
cmpsb
sti
pop
std
sbb
shll
iret
mov
dec
xchg
add
xchg
mov
icebp
test
pop
ss
pop
test
decl
into
lods
pop
adc
ljmp
add
mov
pop
or
nopl
xchg
and
sub
pushf
das
arpl
shrb
mov
or
call
mov
loopne
loope
dec
pusha
sbb
push
push
cmp
mov
lret
adc
or
inc
test
shlb
xchg
push
and
adc
push
cmp
mov
xchg
xor
adc
mov
push
cmpl
cmp
or
pop
inc
adc
sub
cli
inc
mov
dec
xchg
push
cmp
mov
imul
adc
pop
arpl
testb
sbb
xchg
or
ljmp
or
xchg
or
xchg
inc
xorl
xlat
cmp
inc
push
jp
arpl
bnd
add
pusha
inc
cmp
xor
cmp
add
adc
out
ret
mov
xchg
shl
mov
fisubs
mov
call
or
mov
cmp
addr16
push
mov
inc
push
subb
int
push
insl
ss
in
bound
sarb
dec
les
mov
add
mov
fstpt
sbb
jmp
mov
ds
insl
push
sub
add
call
cmp
or
jae
or
cld
adc
popa
ljmp
arpl
mov
inc
mov
mov
xlat
or
fldenv
mov
enter
test
cmp
flds
jmp
add
cmpl
lcall
or
stc
shlb
dec
mov
push
fistl
or
aad
fistl
or
outsl
jmp
sbb
adc
clc
pop
fucom
add
jp
sub
push
jge
les
and
adc
pminsw
fnsave
loope
mov
fnstenv
jecxz
mov
iret
ds
push
sub
push
cwtl
enter
cmp
popf
fld
rcl
push
mov
stc
ds
mov
mov
lahf
divl
jno
jb
mov
dec
xchg
lea
mov
mov
add
cmp
xor
data16
xchg
sub
mov
mov
lods
sub
xor
inc
cmp
push
inc
sub
test
fisubl
movsl
jnp
mov
pop
pop
cmp
or
jecxz
out
je
fs
cs
call
fstpl
lahf
cmpsb
and
out
cmp
loop
cmp
mov
lock
sub
adc
mov
pshufw
cs
jns
sub
je
sub
leave
adc
cwtl
sbb
xchg
jnp
out
lcall
icebp
sub
sub
outsl
mov
sbb
aam
test
mov
xchg
adc
sub
xchg
lods
mov
sub
test
xchg
adc
jb
push
sbb
and
or
mov
test
scas
nop
fs
mov
add
or
sub
mov
ljmp
adc
ljmp
mov
xchg
cmpsl
daa
adc
or
mov
mov
dec
sub
mov
xchg
mov
mov
adc
out
std
adc
jb
sbb
icebp
test
xchg
sti
adc
outsl
adc
adc
and
or
add
mov
lcall
jecxz
push
xchg
mov
pop
and
and
adc
add
sbb
sub
out
mov
or
loope
clc
cmpsb
mov
movsb
test
xchg
adc
push
mov
mov
sub
sbb
daa
or
jb
cmp
lcall
lahf
movsb
xchg
adc
sub
push
cmp
xchg
sub
out
sbb
cwtl
sub
cmpsl
xchg
mov
xchg
sahf
xchg
and
sub
jo
adc
lcall
test
and
or
mov
lcall
test
add
lods
nop
jb
push
or
sbb
movsb
pop
mov
fs
mov
xchg
xchg
adc
cltd
mov
stos
out
and
xchg
js
xchg
movsl
lock
xor
pop
and
jae
je
outsl
fs
movsb
fwait
push
fdivl
jb
and
sub
dec
sahf
mov
push
sub
mov
insb
push
jb
pop
pop
stos
inc
mov
mov
fwait
or
lahf
sub
and
xchg
mull
xchg
cltd
and
sub
or
push
sub
gs
adc
and
or
cltd
jb
mov
xor
xchg
ljmp
mov
out
pop
cmpsl
adc
lock
adc
fucomip
aas
cmpsl
xchg
dec
mov
mov
mov
xchg
or
xor
mov
xlat
and
das
mov
es
sbb
mov
xchg
jp
icebp
xchg
sub
and
jb
mov
adc
stos
mov
and
js
jae
sub
sub
cmpsb
prefetcht2
adc
pop
or
or
push
xchg
mov
and
mov
xchg
xchg
rcrl
stos
cmpsb
cwtl
and
fwait
mov
jle
adc
or
and
sub
into
or
adc
ret
insl
mov
cwtl
sti
push
shll
dec
lcall
cmc
xchg
and
or
inc
pop
into
aad
and
movsb
lock
adc
pop
cmc
fsubs
adc
adc
mov
xchg
test
or
mov
test
mov
jae
pop
sbb
pop
and
push
and
pop
jp
lock
sub
xchg
xor
test
dec
xchg
enter
insb
imul
jecxz
in
sub
xchg
adc
les
push
mov
in
fadd
jp
adc
pop
jae
xchg
jno
and
adc
xchg
cmp
mov
mov
nop
cmpsl
xchg
movsl
mov
pop
lcall
shrb
cltd
mov
rcll
stos
adc
mov
movsl
xchg
mov
xchg
adc
push
cmp
mov
stos
cmp
adc
sub
xchg
adc
and
jno
xchg
lcall
test
adc
xchg
lods
sub
fisubs
adc
test
shlb
xchg
cmovno
fnstenv
mov
push
add
sub
dec
movsl
pop
in
movsb
cmp
sbbb
adc
mov
iret
pop
sub
push
nop
sub
scas
cmp
sub
je
xchg
xchg
xchg
daa
jb
adc
pop
test
sub
gs
adc
xchg
movsb
xchg
mov
stos
adc
sub
xchg
and
andb
mov
xchg
jecxz
and
jl
adc
mov
fwait
adc
push
cwtl
xchg
push
cmpsl
lods
aad
push
inc
nop
das
and
cld
data16
adc
mov
mov
xchg
mov
in
adc
cmpsl
mov
sbb
enter
scas
int
lcall
sub
pop
test
in
rol
stos
pop
mov
xchg
xchg
sbb
push
mov
sbb
xchg
shrd
and
pop
pop
and
stos
adc
mov
jmp
jp
lcall
seto
sbb
shll
ret
in
adc
sub
movsb
or
xor
lods
cli
adc
jmp
xchg
push
scas
jle
push
test
sbb
xor
pop
mov
outsb
pop
stos
ljmp
and
mov
lea
adc
lret
unpcklps
lahf
hlt
xchg
mov
mov
mov
cmpsl
adc
mov
sbb
mov
scas
adc
cmpsl
or
sub
add
xchg
movsb
mov
adc
adc
mov
fildll
mov
or
and
sub
add
adc
xchg
leave
xchg
mov
push
lcall
mov
stos
mov
lret
adc
andb
mov
lret
lahf
mov
sbb
add
outsb
or
mov
lcall
or
test
scas
aam
and
js
imull
sub
mov
pop
movsl
pop
stos
rclb
and
fcoml
xchg
movsb
adc
and
outsl
mov
rcrl
mov
cmc
sbb
leave
push
jmp
and
cmp
mov
jb
xchg
sub
sbb
sub
jb
fwait
mov
sbb
sbb
push
cmp
pop
or
and
adc
outsl
mov
mov
scas
fwait
movsl
dec
push
lret
stos
pop
out
cwtl
adc
pop
nop
and
sbb
stos
push
xlat
div
push
sub
fldcw
xchg
pop
sbb
dec
test
sbb
mov
lahf
mov
push
xor
ljmp
mov
and
out
pushf
mov
and
in
sub
mov
jne
xchg
sub
cwtl
test
pop
cmc
adc
add
movsl
adc
cwtl
xchg
xchg
push
rorb
xchg
fdivs
adc
and
sub
fadds
cltd
xchg
mov
test
and
out
xchg
adc
xchg
xchg
cmpsb
adc
adc
cwtl
cmpsb
fsts
lret
mov
adc
adc
stos
bound
mov
das
add
pop
decb
xchg
xchg
lahf
push
mov
out
leave
pop
cwtl
and
jns
sub
sahf
dec
stos
testl
outsl
adc
ljmp
and
mov
mov
and
cmpsb
hlt
pop
int3
cltd
pushf
or
mov
inc
inc
inc
sub
sbb
mov
stos
adcb
mov
mov
and
lcall
test
or
push
and
outsl
cwtl
fsubs
mov
push
jae
mov
xchg
mov
xchg
jbe
mov
pop
and
and
or
out
xchg
xchg
sub
hlt
iret
xchg
nop
lret
stos
adc
ljmp
iret
lahf
iret
enter
mov
xor
scas
bound
pop
test
rorb
pop
sub
cmp
mov
xchg
movl
push
or
add
jbe
mov
fstpt
das
lock
test
and
push
jmp
rcrb
xlat
mov
adc
setp
and
jge
movsl
inc
cld
and
pop
stos
test
sbb
xchg
sbb
dec
iret
push
or
inc
or
cmp
out
and
cmpsb
sub
lods
push
mov
xchg
push
in
or
stos
mov
es
xchg
test
adc
and
sbb
sub
fstpt
daa
pop
xor
cmova
xchg
ds
fs
decl
mov
sbb
movsb
push
scas
negb
sub
lret
push
sbb
mov
xchg
xchg
std
stos
sbb
mov
sbb
imul
jle
jbe
mov
stc
adc
mov
xchg
sahf
pop
xchg
sbb
pop
cwtl
pop
add
daa
push
loop
and
jge
outsb
imul
jbe
or
xchg
jg
sahf
ficoms
jae
mov
or
lahf
nop
sub
xchg
xchg
jmp
mov
xchg
pop
std
aas
xchg
sbb
cwtl
subb
lock
adc
xchg
enter
xchg
movsl
push
cmpsb
mov
stos
andl
pop
jo
xchg
test
bound
mov
sbb
xchg
mov
mov
or
cmpsl
lcall
mov
loopne
push
sub
call
adc
rolb
push
and
jne
push
popw
pop
mov
mov
negl
xchg
cmc
lea
adcl
daa
and
cltd
jp
sbb
incb
test
mov
mov
adcb
push
mov
imul
xchg
stos
mov
sbb
cmc
sbb
clc
sub
stos
std
xchg
push
movsb
in
jb
or
sub
or
cld
add
int
pop
xor
lahf
cltd
insb
test
jmp
mov
out
push
mov
into
mov
or
cmp
push
xchg
push
and
rcr
push
or
js
xchg
clc
mov
movsl
cmp
push
cwtl
mov
or
cmp
adc
pop
lods
mov
add
daa
push
or
add
test
nop
xlat
pop
push
ss
jb
cwtl
mov
mov
mov
pop
push
mov
mov
add
mov
adc
sbb
out
fwait
mov
xchg
xlat
fbld
xchg
enter
sbb
out
or
loopne
jecxz
xor
stos
mov
add
js
icebp
lahf
sub
pop
loop
test
and
and
loopne
push
sub
dec
push
je
sbb
mov
dec
mov
adc
pop
lcall
sahf
mov
and
movb
sbb
adc
fisttps
jb
push
movsb
push
jb
xchg
call
xchg
negl
and
mov
mov
sbb
ficoms
in
arpl
scas
adc
xchg
jb
push
and
rorb
scas
xchg
push
xchg
in
mov
dec
pop
inc
cmc
aaa
xchg
out
test
adc
inc
sbb
pop
mov
adc
test
into
inc
stos
xchg
cmpsl
jl
or
or
mov
movsl
stc
adc
fisubrs
xchg
pop
add
xchg
sub
xor
sahf
sbb
mov
sbbb
add
push
out
xor
test
xchg
nop
mov
and
rcll
mov
and
xchg
pop
je
out
mov
lcall
sub
stc
out
jecxz
and
xor
mov
lcall
sbb
fmuls
gs
int3
cli
je
or
jae
jb
cmpsb
mov
into
ret
movsb
adcb
inc
xchg
lcall
movsl
xchg
test
loope
add
fnsave
adc
adc
adc
subl
adc
test
lahf
in
call
add
rcrl
sub
or
lods
jo
pop
sub
pop
nop
enter
rcll
or
test
stc
cmpsb
or
jb
sbb
push
push
xor
xor
das
jmp
adc
movsl
mov
movntps
jnp
mov
add
inc
jbe
sbb
pop
shld
and
loopne
lock
loopne
ds
cmpsl
movsl
pusha
push
mov
or
xchg
dec
outsl
mov
adc
add
out
sub
and
je
xchg
fwait
ss
sub
xor
adc
sti
lock
cwtl
mov
test
sub
int3
xchg
jp
adc
sbb
fwait
std
and
push
imul
loopne
pop
jo
or
cmpsb
add
std
ret
outsl
adc
stos
cwtl
decb
sub
cmc
and
mov
push
lea
xchg
popl
xchg
mov
mov
lods
and
push
cmc
das
adc
mov
adc
adcb
jae
sbb
ja
pop
nop
mov
xchg
adc
stos
pop
or
xlat
aad
or
stos
test
xchg
mov
mov
sbb
or
pop
mov
addr16
sub
lahf
mov
loop
test
jmp
jp
inc
sar
scas
into
and
mov
fwait
lahf
pop
sub
test
iret
cmp
and
and
sub
mov
daa
push
leave
es
push
test
mov
or
mov
pop
loopne
andb
mov
mov
or
es
sbb
and
xchg
push
cwtl
fidivrs
and
lahf
xchg
cmc
out
call
into
popf
xchg
mul
outsl
data16
adc
cltd
mov
outsl
xchg
test
push
stos
and
or
imul
sub
iret
mov
sub
sub
test
and
bts
call
out
adc
and
sbb
cmp
mov
push
xchg
test
xchg
mov
mov
xchg
mov
adc
adc
js,pt
rclb
nop
es
cld
xchg
or
mov
push
andl
xchg
cltd
test
xchg
test
adcl
stos
fmull
movsb
rcrl
cmp
out
movsl
pop
and
pop
popf
sbb
loop
stc
sub
xchg
into
lds
lea
cmp
mov
adc
cld
mov
mov
cmp
or
xchg
cwtl
jg
push
or
xchg
sbb
mov
jp
sub
es
sbb
lods
and
jae
xor
lcall
jmp
cmpsb
pop
stos
mov
stos
or
lcall
push
es
lahf
xchg
das
test
add
xchg
or
mov
ljmp
adc
xchg
cmpsb
bound
mov
shlb
pop
cmp
adc
mov
mov
pushf
sbb
fwait
or
in
jge
mov
andb
and
sbb
test
ret
inc
outsl
push
sub
es
aam
lret
cmp
cmpsb
jno
xchg
lahf
shrb
lret
and
test
test
outsb
sbb
out
loope
and
xchg
movsl
test
stos
repz
es
lds
fwait
test
sub
sarl
stos
cwtl
out
push
daa
pop
xchg
push
cs
mov
xchg
push
or
push
jae
and
cmp
xor
mov
mov
and
jmp
jmp
orb
add
or
test
scas
ret
lcall
sbb
or
jb
xchg
stos
mov
xchg
sub
ja
cwtl
xchg
or
invd
xchg
pop
mov
pop
call
mov
pushf
fwait
nop
out
fcoms
test
adc
subb
jae
or
mov
jae
or
xchg
loop
orl
jg
loopne
sbb
in
dec
cld
xchg
stos
into
and
fxch
js
out
mov
xchg
scas
cltd
fwait
pop
mov
pop
test
outsl
mov
adc
mov
orl
movsb
or
push
xchg
test
daa
and
sub
lea
cwtl
pusha
fiaddl
adc
pop
outsl
stc
and
xchg
or
sub
repz
sub
pop
cmpsb
imul
stos
xchg
and
or
into
cmpsl
nop
inc
dec
scas
sub
and
pop
or
cmc
cmpsb
ja
cld
call
test
or
fnstsw
rsm
pop
jg
imul
test
lock
in
sbbb
test
notl
xchg
mov
mov
xchg
repz
xchg
pop
popa
andl
movsl
cltd
hlt
out
mov
in
mov
fmuls
mov
fsub
inc
sbb
fildll
and
pop
fiaddl
call
out
or
out
daa
xchg
test
xchg
xchg
sub
push
pop
test
and
and
orl
sub
and
mov
movsb
xchg
daa
in
stos
sbb
fists
mov
ja
jbe
movsb
sbb
mov
sahf
jecxz
jp
xchg
mov
pushf
pop
mov
xchg
and
jecxz
push
or
xchg
and
shr
sub
dec
push
xchg
stos
insb
xchg
dec
es
pop
or
mov
adc
dec
and
daa
xlat
jbe
sub
or
inc
mov
push
xchg
pop
adc
jo
stos
add
mov
sbb
cli
and
lahf
test
test
pusha
lcall
fists
sub
cmpsl
xchg
call
stos
in
mov
mov
sub
pop
inc
in
pop
xchg
sub
mov
sub
out
insb
pop
add
mov
fs
and
and
sahf
sahf
cmpsl
cwtl
lret
mov
out
decb
sbb
sbb
mov
scas
into
mov
mov
fwait
xchg
xchg
test
and
sbb
adc
mov
or
lret
test
xor
mov
cmpsl
or
nop
fs
xchg
jge
sub
push
or
shrl
push
out
or
adc
pusha
int
stos
xchg
and
sbb
xchg
push
cmp
adc
and
mov
nop
sbb
xlat
sbb
inc
test
and
movsl
mov
mov
rcl
mov
into
lds
stos
adc
fwait
pusha
sub
or
and
sub
out
fcoml
jae
bnd
jbe
cltd
dec
and
sub
stos
inc
es
and
sbb
push
ss
stc
jae
xchg
mov
dec
test
mull
out
push
daa
cmpsl
xchg
xchg
and
insl
lods
and
jge
imul
sub
sub
sbb
mov
mov
sbb
mov
jbe
nop
sbb
into
enter
fcom
pushf
testl
sub
stc
adc
jno
cmpsl
sub
nop
mov
mov
addl
xor
push
inc
setns
xchg
cmpsl
mov
lahf
mov
or
adc
loopne
adc
sbb
inc
scas
adc
lret
cltd
loopne
adc
push
loope
and
add
scas
aad
inc
stos
xor
popa
xchg
sarl
xor
fnstsw
xchg
mov
or
xchg
sub
push
stos
lret
add
lcall
scas
shrb
dec
cmove
loopne
and
sub
repnz
mov
xor
mov
sub
xchg
daa
xchg
jle
mov
sbb
dec
mov
push
sub
out
inc
dec
imul
clc
adc
cmc
testl
mov
xchg
and
faddl
cs
and
mov
cltd
sub
and
cld
sub
or
sahf
and
xchg
pushf
daa
mov
mov
and
cmp
adc
sub
cmc
xchg
out
mov
jecxz
xchg
movb
xchg
negl
xlat
push
mov
mov
mov
push
or
testb
mov
andb
and
cmpl
jp
mov
cwtl
daa
lods
xchg
sbb
xchg
jb
mov
sbb
xchg
sbb
lcall
mov
pop
add
ss
jo
sbb
or
pop
mov
ljmp
test
mov
cwtl
loope
mov
sub
mov
push
xchg
imul
popa
xchg
sub
movsb
and
xor
lock
in
call
and
mov
sub
and
mov
divl
nop
adc
aas
or
push
jae
xchg
mov
xlat
test
andb
mov
scas
setp
stos
or
add
and
mov
icebp
pop
cltd
xchg
mov
es
add
shrb
adc
mov
jo
mov
push
inc
test
xchg
das
mov
pop
pop
mov
pop
cwtl
ljmp
mov
clc
loop
or
insl
sub
mov
cwtl
mov
push
in
push
out
push
test
cld
pop
lcall
and
push
sbb
cmpsb
and
mov
push
addr16
je
stos
repz
push
xor
and
xchg
xchg
hlt
mov
stos
mov
js
sbb
movsb
movsl
mov
nop
sub
mov
push
loopne
sub
push
arpl
insl
movsl
lock
adc
cltd
xchg
je
mov
stos
or
jae
js
adc
mov
or
mov
or
and
xor
sub
and
adc
movsb
sbb
into
lods
or
or
mov
jb
adc
sbb
mov
fwait
or
ret
xchg
or
nop
stos
mov
cmp
and
sbb
dec
scas
adc
xchg
lahf
sbb
movsb
es
or
jl
mov
test
orb
jne
mov
out
jae
pop
fcoms
stos
lods
xchg
inc
mov
xor
xchg
iret
pop
cmpsb
cltd
in
cwtl
xchg
or
adc
sub
add
daa
sbb
out
push
stos
mov
pop
pop
pushf
and
outsl
cmpsb
sub
xchg
fwait
add
dec
test
jno
xchg
xchg
jmp
mov
imul
adc
jle
and
sti
cmc
mov
and
popl
stc
xchg
sub
sahf
lods
cwtl
add
es
outsl
xchg
or
xchg
imull
adc
out
or
mov
lcallw
mov
mov
xchg
xchg
mov
scas
aad
or
pop
xchg
mov
inc
pushf
sbb
xchg
cwtl
xchg
lcall
sahf
stc
mov
cmp
xchg
adc
cmp
mov
push
cmp
mov
pop
mov
mov
jmp
stos
and
pop
mov
mov
movsb
sbb
xchg
push
cmpsl
adc
xor
mov
pop
mov
scas
add
lahf
add
int3
pop
xchg
jbe
sbb
test
xchg
xchg
hlt
cmpsl
lcall
lcall
jge
mov
xor
sbb
and
scas
aaa
cmpsb
and
xchg
lea
and
shl
adc
push
adc
cmpsl
dec
xchg
xchg
or
adc
or
lods
xor
adc
add
ret
inc
mov
xchg
xchg
cmpsb
mov
paddb
mov
sub
xchg
sbb
add
jmp
or
push
ret
out
or
mov
lods
fwait
cmpsl
xchg
into
sbb
mov
fldl
daa
and
adc
adc
pop
cwtl
les
mov
arpl
lret
mov
mov
out
xchg
xchg
and
add
xchg
sti
jge
and
mov
adc
xchg
mov
repz
cmpsb
enter
nop
xchg
xchg
test
fwait
push
sbb
push
es
loop
test
xchg
push
sub
xchg
mov
daa
lahf
and
sahf
hlt
sub
sub
sbb
data16
xchg
push
add
cmpsl
test
mov
call
je
sbb
mov
mov
mov
stos
sbb
sub
pop
and
push
push
mov
adc
xchg
stc
movsl
lock
xchg
jae
test
mov
lcall
in
shll
sub
lahf
cmpsl
movsl
adc
popf
cmc
mov
jl
ficoml
cltd
add
mov
pop
xchg
movsl
aaa
cs
mov
gs
imul
adc
cmpsl
sub
xchg
mov
cltd
mov
rcl
xchg
loop
pushf
and
lcall
jae
sbb
xchg
repnz
invd
adc
sbb
pop
mov
ljmp
sbb
mov
jge
adc
fwait
lcall
sbb
aad
xor
sahf
xor
outsl
xchg
and
test
cwtl
or
stos
adc
and
push
jmp
mov
sub
cli
pop
mov
xchg
mov
mov
loop
mov
sub
out
dec
push
sbb
notl
dec
lcall
int
inc
stos
ss
lahf
sbb
push
adc
cs
or
mov
adc
and
sbb
iret
nop
fbstp
inc
flds
sbb
pop
or
in
or
xor
mov
clc
xchg
xor
push
movsl
xchg
cmp
jb
and
sub
and
or
sbb
mov
jb
test
mov
nop
out
sub
or
pop
daa
mov
sbb
movsb
xchg
pop
cwtl
add
mov
test
and
mov
xorb
mov
inc
movsb
sysret
mov
scas
push
sub
xchg
int3
add
jns
xchg
fwait
nop
inc
scas
lods
and
test
adc
jno
cmpsl
xchg
ljmp
mov
cmp
adc
xor
add
movsb
mov
es
clc
and
mov
inc
scas
aas
xchg
fwait
movsl
lods
pop
push
jp
lcall
stos
stc
xor
sub
or
mov
sub
daa
addr16
jae
xchg
lea
stos
ficomps
mov
mov
sbb
mov
inc
adc
xchg
sbb
test
and
xchg
xchg
setg
sub
or
xor
adc
lcall
lcall
pop
out
mov
xchg
pcmpeqd
js
jno
or
je
cwtl
mov
adc
je
and
pop
lret
sbb
jo
sub
cwtl
or
cmpsl
ficoms
stos
xchg
imul
inc
adc
fidivs
mov
mov
orb
jp
xchg
cmpsb
shrb
addb
xchg
or
pop
lcall
ljmp
rolb
xchg
mov
movsl
loop
ret
lock
pop
add
mov
shl
out
test
jle
xor
int3
xor
mov
sbb
xchg
mov
sub
or
bound
notl
pop
jb
and
xchg
test
fisubs
es
andl
cwtl
lock
xchg
mov
xor
out
cmpsb
xchg
stos
xchg
stos
pop
and
xchg
out
xchg
adc
and
and
out
sbbb
outsb
sahf
or
xchg
aas
je
sub
xchg
push
nop
test
repnz
daa
xchg
cltd
mov
cmpsb
test
or
test
and
jbe
cmovle
sub
xchg
imul
sbb
aaa
mov
rcrb
push
adc
lods
cmpsb
adc
sub
mov
cmpsl
sub
push
ljmp
jbe
or
lcall
xor
xchg
jg
test
sub
ss
int
je
mov
out
push
xchg
and
cld
sbb
and
notb
in
aam
stc
cmc
aad
mov
and
adc
and
xor
lds
mov
mov
lock
push
push
xchg
aad
std
pop
cwtl
and
adc
pop
sbb
and
cmp
pop
adc
insl
mov
add
jge
std
mov
lahf
dec
push
pop
jne
sbb
adc
repz
adc
or
pusha
out
mov
adc
movsb
dec
jae
scas
testl
xchg
xchg
test
cwtl
sub
sbb
out
adc
and
and
jg
sahf
cmc
nop
pop
sub
popa
sub
setb
xchg
jmp
adc
inc
and
adc
and
dec
sub
and
out
sub
or
jb
dec
xchg
or
cwtl
insl
xchg
pop
pop
adc
mov
sahf
into
or
cmp
and
mov
and
fwait
add
pushf
xchg
data16
sbb
lahf
or
pop
adc
mov
shrb
enter
call
jl
imull
sbb
cmpsl
pop
or
and
into
jle
stos
push
mov
xchg
test
adc
sbb
add
lahf
mov
xchg
adc
lahf
cwtl
ljmp
mov
movsb
adc
stos
imul
mov
jecxz
xchg
xchg
cltd
shrb
mov
pop
jb
test
stos
mov
sahf
lods
mov
lret
sti
pop
xchg
lret
aas
xor
sbb
mov
xchg
ret
sbb
stos
cmp
jae
jae
jbe
ss
add
gs
sbbb
or
bound
jno
jmp
mov
mov
pop
in
jb
sub
scas
in
movsb
or
movsl
std
sub
sbb
in
mov
xchg
loopne
ret
arpl
push
mov
mov
jbe
stos
xchg
and
ljmp
add
or
xchg
and
sub
adc
dec
bound
es
adc
jae
xor
mov
cld
iret
in
lock
sub
mov
cld
cmp
sub
mov
adc
and
std
xchg
stos
sub
movsl
js
js
js
jo
sbb
cmpsl
pop
and
or
movsl
movsb
push
test
push
inc
movsl
mov
psubsb
enter
sbb
pop
jb
pop
aaa
in
in
mov
mov
push
cwtl
cmp
fisubl
cmpsb
rolb
xor
and
je
nop
repz
mov
mov
mov
test
lcall
sub
insl
dec
jae
xor
cmpsb
ficomps
or
sbb
sub
movsb
xlat
xrelease
divl
adc
sbb
lods
adc
or
xchg
mov
adc
iret
add
xchg
xchg
jo
and
sub
movsl
ficoms
aas
sbb
fcompl
cmpsl
xchg
adc
icebp
imul
outsb
lret
adc
fwait
sbb
add
or
je
adc
cmpsb
cltd
insb
push
and
cmpsb
aaa
movsl
mov
int
sub
xchg
mov
std
or
mov
mov
test
popa
imul
jge
pop
cmpsb
xor
sub
call
jle
sub
sub
icebp
into
xchg
pop
sbb
stos
mov
lcall
jecxz
lock
into
push
and
or
sub
mov
xor
bts
rclb
mov
stos
sub
sahf
mov
arpl
cmpsb
mov
stos
les
sbb
inc
and
xchg
mov
sbb
aam
xchg
dec
sub
xchg
lock
fwait
setne
es
test
jle
and
dec
sub
jge
cwtl
xchg
movsl
out
daa
out
pushf
dec
movaps
test
adc
mov
sub
cmpsl
loopne
push
mov
lods
jae
xchg
scas
loope
xchg
movsl
xchg
sarl
bound
lds
imull
stos
mov
mov
scas
mov
mov
mov
movsb
cltd
lcall
sub
out
std
sbb
ja
lahf
mov
out
scas
xchg
xchg
or
outsl
adc
cmpsl
xchg
xchg
and
or
jg
cltd
xchg
xchg
test
cs
mov
test
push
mov
xchg
movsl
mov
push
xchg
pop
mov
addb
inc
adc
scas
repnz
sahf
mov
stos
gs
pusha
jg
xchg
and
push
adc
test
or
fsubl
lds
mov
pop
inc
cli
push
push
push
cmp
pusha
cwtl
dec
movsl
leave
mov
mov
xorb
imul
and
sub
pop
adc
sub
lds
loopne
scas
mov
xor
xchg
lret
adc
lock
ror
std
inc
sbb
and
pop
xchg
sbb
push
xchg
push
push
mov
sbb
lock
adc
sbb
hlt
xchg
mov
lahf
and
xchg
ss
sub
push
das
sub
xor
xor
push
add
out
sub
jns
mov
and
std
out
in
xchg
nop
and
pop
test
daa
mov
daa
daa
ljmp
sub
xchg
xchg
out
xchg
adc
dec
mov
lahf
adc
test
stc
mov
adc
push
call
sub
xchg
sbb
cltd
mov
mov
push
stos
xchg
std
movsb
pop
xchg
movsl
stc
pop
je
cltd
pop
jns
pop
sbb
push
adc
sahf
push
test
adc
ret
sbb
mov
jnp
mov
fs
push
js
cmc
push
mov
nop
cwtl
leave
or
jecxz
daa
imul
in
mov
lcall
xchg
and
cltd
xchg
mov
sub
clts
mov
fwait
mov
xchg
cli
je
sbb
loopne
and
xchg
mov
cmp
mov
daa
mov
iret
icebp
shll
or
pop
adc
sub
jg
bound
add
push
movsl
mov
icebp
sub
xchg
xchg
jae
xchg
nop
fistps
sub
lret
mov
mov
ret
into
adc
lret
xchg
or
adc
dec
mov
fistpl
fwait
icebp
mov
lds
subl
test
sub
lahf
sub
and
test
jle
jmp
fdivrs
sbb
inc
xchg
pop
sbb
dec
cwtl
xor
xlat
cmpsb
jae
shll
ficoml
fwait
cmp
xchg
mov
mov
ret
lahf
out
mov
mov
adc
mov
arpl
adc
push
adc
mov
ret
and
or
movsl
sub
cmc
lds
pop
pop
cwtl
sub
lods
add
rsqrtps
bound
push
cmpsb
or
mov
pop
mov
add
nop
xchg
or
cwtl
mov
or
ret
sub
sub
adc
cmc
adc
or
adc
out
insl
or
xchg
xchg
mov
lret
xchg
xchg
sbb
or
cwtl
in
loop
je
lahf
sbb
xchg
repnz
nop
pop
adc
outsb
popa
std
fcoml
sub
movsl
adc
pop
loope
push
jg
hlt
cld
rcrb
les
movsb
jp
xchg
pushf
mov
jg
adc
and
xchg
ds
lods
xor
sbb
mov
mov
imull
out
sahf
sub
or
sti
clc
xchg
aad
xchg
adc
adc
cwtl
mov
sub
ss
stos
push
daa
push
or
mov
insb
jge
bt
lods
xor
sbb
push
mov
out
mov
mov
and
xchg
pushf
mov
jne
sub
and
or
sub
pop
mov
xchg
push
push
cmc
fisubrl
icebp
xchg
sbb
nop
mov
fcoml
js
loope
mov
mov
xchg
sub
sbb
nop
adc
or
or
pop
xchg
sub
jge
sbb
cmpsb
and
test
sub
cmpsl
test
adc
mov
and
sbb
adc
xchg
fldcw
shrb
xchg
sub
mov
and
pop
xor
inc
push
pop
inc
rorl
sahf
mov
adc
cmpsb
test
stos
pop
and
lock
lahf
sbb
or
mov
pop
adc
sbb
xchg
cltd
mov
stos
adc
je
cmpsb
xor
stc
pop
push
add
adc
mov
cmpsl
sub
outsb
adc
aam
pop
mov
popf
push
inc
nop
mov
jp
jbe
movsl
sbb
mov
add
sbbb
jg
outsl
jp
jae
or
frstor
xchg
gs
adc
fwait
es
adc
push
in
inc
div
jb
xchg
sub
or
jae
and
iret
jmp
mov
out
mov
stos
nop
out
jno
jne
push
xchg
or
mov
adc
and
xchg
mov
adc
or
xor
xor
scas
out
lahf
test
push
sbb
push
enter
fidivrs
mov
cmpsl
adc
xchg
jecxz
in
imul
push
and
loope
sub
jo
stos
mov
xchg
pop
adc
fld
out
ret
mov
mov
sbb
xchg
into
adc
outsl
stos
adc
xchg
sbb
xlat
lods
test
xchg
cltd
adc
stos
and
mov
stos
jb
sub
nop
or
test
adc
add
leave
inc
and
mov
imul
lea
fcoml
daa
jno
daa
sbb
xchg
dec
sub
xchg
enter
sub
js
mov
cwtl
push
adc
lahf
jle
jb
stos
sahf
es
nop
jb
cmpsl
add
and
or
clc
xchg
sub
push
sub
cltd
cmpsl
sahf
dec
xchg
cmpsb
lcall
mov
jg
adc
les
mov
xchg
xchg
xchg
fwait
pushf
or
sub
sub
push
xor
mov
jecxz
stos
in
lcall
push
mov
cwtl
mov
and
pop
dec
insb
cmc
fsubs
daa
or
lahf
lods
pop
or
setb
jb
or
and
ljmp
mov
cmpsb
and
scas
pop
xchg
adc
pop
lcall
pop
test
add
adc
push
xchg
mov
in
xchg
mov
imul
add
xchg
xchg
push
jmp
xlat
call
push
xchg
xor
cmpsl
mov
lcall
mov
sbb
pop
stos
and
inc
or
cmp
sub
push
cltd
pop
pop
pop
push
jae
xchg
xor
fistps
stc
adc
cmpsb
lock
test
xor
stos
cmpsb
sub
mov
xchg
imul
popa
adc
sbb
pop
xchg
shrb
push
sub
ds
mov
js
imul
jl
lcall
out
outsl
or
mov
movsl
and
mov
mov
jb
ss
nop
adc
cmc
xchg
or
ffree
daa
xor
adc
sbb
loope
jle
mov
stos
and
loop
mov
dec
cmc
in
lods
mull
decb
nop
lahf
out
or
or
or
rclb
es
ljmp
pop
je,pt
lock
insb
out
sub
sub
mov
push
cmc
adc
and
push
pop
and
imul
imul
pop
ret
adc
mov
cwtl
adc
out
xor
push
xchg
test
xchg
xchg
mov
xchg
stos
and
scas
in
mov
jno
mov
or
push
divl
mov
jbe
mov
sbb
and
xchg
sbb
mov
xchg
push
jo
cwtl
sbb
lret
daa
jne
sub
rorb
sub
in
pop
pop
sbb
cmp
nop
sbb
xor
jge,pt
out
daa
mov
cs
sar
add
movsl
adc
mov
and
jns
xchg
xor
pop
scas
and
in
stos
mov
adc
xchg
and
jg
pop
jns
ljmp
mov
into
mull
sbb
push
xchg
stos
xchg
adc
nop
adc
cmpsl
cmpsl
push
sub
fbld
or
scas
adcl
mov
mov
icebp
jns
mov
out
mov
cmpsb
sub
js
lock
add
jo
daa
adc
gs
xchg
adc
iret
mov
movsb
or
adc
rcrb
mov
and
mov
das
pop
mov
sbb
testl
sub
xchg
clc
or
dec
or
cmpsb
cli
xchg
stos
repnz
sub
xchg
cmpsl
cltd
sub
lcall
daa
xchg
cwtl
test
xchg
lcall
adc
dec
scas
fcompl
adc
sbb
xchg
xchg
and
scas
sub
or
pop
or
xchg
xchg
cs
setb
test
or
jp
xor
lods
adc
mov
pusha
mov
adc
or
xchg
sbbb
stos
jp
addr16
and
cltd
fwait
xchg
jge
xor
sub
or
xchg
pop
lahf
decb
nop
or
jle
inc
pop
repnz
sahf
test
mov
sub
mov
jg
pop
out
stos
mov
mov
mov
xchg
ret
mov
cmp
add
or
in
mov
cmpsl
stc
cmp
mov
out
mov
scas
cmpsl
pop
xchg
xlat
mov
lahf
dec
pop
mov
je
setae
adc
and
cmpsb
pop
jle
enter
cmp
test
xchg
ss
cmpsb
iret
stos
xchg
pop
cmp
adc
test
enter
cmpsl
sub
into
repz
int3
movsl
jp
sub
sar
and
sub
cmc
jle
sbb
scas
clc
stos
adc
xchg
xchg
sbb
sbb
mov
pop
lret
adc
adc
dec
xchg
in
in
lock
cmpsb
and
sbb
outsl
jno
push
add
pop
pop
push
push
jg
pop
mov
sub
cltd
loopne
pop
pop
or
adc
ret
mov
xchg
ss
daa
xchg
scas
int3
nopl
sub
lcall
adc
adc
push
sub
lea
and
cmp
dec
rorb
mov
or
nop
mov
jle
xor
lret
mov
out
stos
or
xchg
and
sbbl
ret
mov
pop
in
adcl
outsb
push
ss
movsb
iret
adc
mov
xchg
shl
push
sub
fsubr
daa
fwait
push
cltd
adc
imul
push
test
pminsw
sbb
xchg
out
adc
pop
mov
dec
sub
mov
sete
ficoml
xchg
pop
adc
fwait
sub
pop
adc
xchg
pop
adcl
out
xor
orb
inc
mov
adc
mov
fwait
pop
and
in
pop
in
movsb
lea
xchg
test
xchg
xchg
arpl
js
jbe
sub
xor
cmpsb
test
stos
xchg
or
cwtl
xor
jle
push
stos
xchg
ljmp
sbb
adc
jg
loope
pop
cwtl
mov
or
adc
aam
sbb
add
adc
popl
mov
mov
clc
xchg
incb
xchg
adcb
sub
out
js
xchg
sub
rorl
xchg
mov
xchg
cmc
xchg
pop
jge
mov
notb
mov
cwtl
jmp
pop
mov
fwait
xchg
shl
shlb
sbb
jecxz
in
mov
stos
cmp
gs
or
cwtl
loope
out
xchg
es
ficompl
std
aam
jmp
lret
xchg
add
adc
mov
movsb
pop
js
jae
test
into
and
mov
and
and
cwtl
iret
ret
adc
add
out
mov
or
mov
xchg
push
or
inc
xchg
fwait
mov
test
out
adc
movsl
mov
and
ljmp
inc
stos
je
daa
mov
cwtl
int
pop
xchg
push
mov
mov
mov
adc
and
cltd
movsb
or
push
xchg
cmc
push
lcall
cmpsb
js
adc
stos
cltd
imul
sbb
adc
cmp
push
aad
xor
xchg
ljmp
mov
xchg
idivl
xor
xor
pusha
adc
push
lahf
jno
or
xor
push
mov
lds
lahf
rorl
movsb
and
adc
adc
push
test
xchg
jp
sub
cld
out
cmpsl
or
sbb
fistpl
xor
fsubrl
mov
pop
sbb
test
sahf
movsl
adc
mov
and
jae
lods
rolb
inc
push
cltd
or
enter
stc
aaa
loop
repnz
jo
xchg
jnp
lods
test
adc
pop
xor
sub
add
out
xchg
xchg
pop
mov
mov
or
push
int3
push
xor
inc
mov
or
mov
dec
test
and
lahf
stos
and
lcall
xorb
adc
xor
sbb
xchg
or
and
xchg
mov
cmc
cmp
add
stc
maskmovq
testl
sub
loopne
mov
cmpsb
xchg
lock
xchg
pop
test
and
enter
sub
test
lods
xchg
cmp
mov
sbb
cltd
stos
inc
lret
fmulp
and
push
mov
xchg
jae
nop
jne
mov
xacquire
dec
stos
pop
daa
fcomps
es
adc
add
xchg
fcoms
cwtl
sbb
sub
test
mov
add
push
test
or
mov
add
iret
test
xor
setp
adc
lea
pushaw
aad
inc
cli
fstpl
pop
sbb
es
into
xor
lcall
jecxz
pop
pop
repz
mov
popf
push
es
das
adc
sahf
addr16
jae
push
mov
xchg
cltd
xchg
push
cltd
cld
xchg
xchg
ljmp
divb
sub
mov
xor
xchg
xchg
sub
stos
mull
mov
test
jae
lods
aam
pusha
jle
push
and
sbb
loopne
xchg
mov
jle
jb
adc
and
sub
loop
sub
or
xor
daa
pop
lahf
pop
and
jae
mov
jo
lcall
mov
or
mov
and
mov
or
sub
pop
sbb
xor
std
push
andb
xchg
std
lret
mov
imul
lcall
arpl
aam
stc
mov
xchg
nop
stos
dec
imul
daa
sub
cmc
negl
das
or
mov
xchg
or
jae
pop
or
jbe
push
push
jge
xchg
lcall
loopne
dec
mov
stos
out
add
mov
nop
adc
sbb
idivl
dec
or
lret
nop
adc
leave
mov
sahf
pop
xor
in
clc
jno
pop
adc
iret
mov
cmp
pop
mov
mov
push
mov
mov
testl
adc
cld
mov
leave
xchg
mov
cltd
pop
iret
fwait
sbb
mov
es
mov
mov
adc
sub
xchg
and
lahf
or
and
sbb
in
cwtl
mov
movsb
push
jae
sub
mov
push
mov
andb
into
fmull
stos
inc
xchg
xchg
daa
lret
movb
xchg
cwtl
aas
and
and
cmp
lods
unpcklps
addr16
push
pop
dec
mov
mov
out
sbb
cltd
adc
push
cmc
pop
adc
sbb
scas
out
xchg
xchg
xchg
adc
adc
mov
or
adc
inc
xchg
jmp
fwait
dec
stc
xchg
imul
arpl
mov
dec
stc
sbb
lea
xchg
movzbl
or
mov
xchg
sbb
mov
sub
pop
test
jp
jle
jp
jp
out
or
mov
xchg
cmpsl
out
test
cltd
adc
jge
pop
lahf
movb
jb
push
stos
mov
mov
xor
adc
test
sahf
je
sub
mov
sub
outsl
xor
xchg
xchg
sbb
and
movsl
dec
neg
sbb
and
mov
and
xchg
jbe
xchg
cwtl
adc
inc
sub
sbb
fcomip
sbb
in
mov
xchg
setnp
xchg
sti
in
mov
loopne
clc
cmpsb
xor
mov
movsb
cwtl
mov
fwait
movsb
and
or
invd
ljmp
xor
adc
sbb
notl
adc
and
popf
scas
dec
mov
or
les
xchg
adc
ss
xchg
mov
xchg
aaa
pop
mov
stos
mov
and
scas
std
or
cmpsl
adc
or
xchg
and
sti
sub
stos
mov
or
xchg
movsb
jle
xchg
sub
cwtl
lds
add
or
xchg
sub
cmp
movsb
push
stc
dec
out
in
sbb
or
sub
sbb
les
or
testl
jbe
mov
lret
adc
je
xchg
xor
lock
mov
lods
inc
or
inc
push
jb
adc
cmpsb
sbb
movb
out
sub
out
dec
stc
test
add
mov
jp
mov
cmp
jg
lcallw
cltd
mov
es
xchg
rcrb
push
push
jb
sqrtps
pusha
xchg
jp
es
mov
movsl
lcall
sbb
jnp
leave
movsl
add
xchg
or
mov
inc
and
xchg
mov
stos
push
mov
mov
test
fwait
mov
xchg
call
scas
test
mov
xchg
xchg
and
in
es
pop
repz
jmp
icebp
and
adc
movsb
xchg
and
out
xchg
adc
mov
xor
push
and
iret
and
out
aas
int3
test
out
stos
xchg
and
sub
xor
mov
sub
shll
push
mov
imul
aaa
jbe
xchg
xchg
mov
out
or
adc
cwtl
daa
pop
sub
xchg
cmpsb
push
xor
stc
jecxz
addb
and
lahf
mov
test
lret
adc
loope
dec
and
stos
xchg
aaa
mull
jno
xchg
xor
std
test
sbb
jo
xor
fidivrs
movsl
test
mov
daa
dec
xor
movsl
ljmp
cltd
xchg
inc
fimuls
das
fbld
xchg
jg
push
or
test
add
jmp
cltd
add
outsl
mov
sub
outsl
cmp
adc
daa
add
mov
mov
test
cmpsb
loope
sub
pop
add
or
mov
call
xchg
mov
fs
sub
sub
or
sbb
xchg
mov
stos
lret
test
jb
cmc
mov
dec
sbb
or
pushf
xchg
jle
and
ljmp
mov
popa
sub
adc
fwait
cmc
lcall
xchg
push
out
dec
and
mov
mov
out
add
adc
and
ret
stos
lea
or
mov
mov
pop
pop
cmp
adc
lock
mov
les
sub
inc
xchg
insl
pop
pop
scas
adc
sbb
cmp
scas
pop
adc
pop
adc
dec
or
add
xchg
adc
test
xchg
adc
jno
and
xchg
xchg
push
jbe
out
movsb
sbb
stos
pop
subl
xchg
shrl
cltd
push
pusha
sbb
push
sbb
scas
ret
lahf
fucomip
xchg
js
jbe
or
sbb
hlt
das
in
cmpsb
arpl
lods
daa
test
movsl
pop
sub
rclb
lahf
jne
daa
test
and
mov
xchg
pop
insb
sahf
jecxz
add
sub
cmc
push
int
je
adc
and
fstl
outsl
jae
out
call
xchg
fwait
lret
and
cmpsl
nop
push
dec
fildll
sub
cmc
jae
or
and
scas
cmc
movsb
adc
sub
gs
out
aas
cltd
mov
xchg
jo
and
mov
adc
pop
imul
cmp
cld
or
xor
xor
test
sbb
sub
sbb
cmc
push
sbb
mov
adc
xchg
mov
jecxz
mov
shlb
in
test
popa
push
sbb
flds
dec
stc
sbb
mov
clts
ret
jbe
xchg
cwtl
jge
pop
out
jnp
sub
inc
test
xchg
std
pop
xchg
xlat
xor
das
jp
adc
sbb
or
lahf
mov
xchg
mull
adc
sar
push
mov
pop
mov
gs
sbb
nop
xor
xchg
scas
out
mov
lock
pop
push
dec
jg
bound
push
je
xchg
hlt
enter
jae
icebp
repnz
addb
aas
and
ror
imul
lahf
xchg
fs
jae
adc
fwait
push
add
xchg
adc
std
cs
inc
adc
dec
fwait
inc
scas
scas
push
sub
movb
pushf
mov
mov
ljmp
cmpsb
adc
inc
mov
out
mov
and
sbb
mov
sbb
idivb
lods
and
daa
lcall
xchg
fsubrs
pop
rorb
or
adc
jno
sub
xor
add
push
or
and
cmpsl
pop
enter
xchg
push
mov
mov
and
std
cmpsb
and
jbe
sbb
movsb
sub
and
pop
shll
xor
xchg
push
jae
push
xchg
push
movsb
nop
fwait
lods
xchg
std
sbb
pop
insl
sub
xchg
xchg
mov
push
fwait
outsl
mov
mov
xor
das
cld
movsb
dec
std
or
scas
int
lods
sbb
daa
cltd
and
mov
outsb
pop
gs
loope
adc
ljmp
xchg
ljmp
mov
or
mov
push
adc
pop
cmp
das
fisubl
stos
test
xchg
imul
cmp
xchg
dec
jge
sbb
push
xor
test
jp
cmpsl
mov
mov
jp
lret
setb
movsb
and
jbe
and
jno
sub
ljmp
mov
out
fwait
adc
sbb
test
jae
xchg
jno
push
or
xor
je
popf
or
sarb
pusha
sub
xchg
sbb
mov
addb
adc
sub
data16
enter
adc
xchg
insb
mov
and
iret
mov
sbb
xorb
sub
adc
pop
movswl
push
lahf
jmp
sub
sub
xchg
movsl
scas
mov
and
clc
and
movsb
mov
cmpsb
loopne
mov
and
stc
mov
sub
pop
pop
add
push
repz
scas
jmp
adc
mov
mov
es
xchg
sbb
adc
mov
inc
daa
cwtl
jg
xchg
lods
lahf
lret
movsl
mov
cli
adc
lcall
mov
push
shr
dec
xchg
and
sub
add
xchg
adc
mov
cltd
pop
sbb
pop
into
jo
xchg
adc
xchg
xchg
push
cmp
out
nop
xchg
and
jg
popaw
test
movsl
xchg
lock
xchg
cs
xchg
daa
and
ja
imul
or
in
addb
xchg
movsl
cwtl
shlb
sbb
adc
sbb
fwait
push
and
mov
jp
or
iret
pop
lahf
cmpsb
lcall
jae
pop
inc
cmp
sub
sahf
xchg
subl
cmp
js
les
sub
or
outsb
outsl
dec
xchg
and
adc
rorl
js
out
mov
xchg
adc
push
stos
adc
movsl
loopne
mov
lock
adc
lock
cmc
outsl
unpckhps
pop
sub
mov
lcall
movsb
sub
or
cltd
stos
fdivl
xchg
fldl
adc
out
dec
pop
nop
sub
test
inc
lea
movups
daa
daa
std
adc
repz
andl
mov
in
movsb
mov
sahf
adc
iret
mov
pushf
xchg
jge
in
jae
movsb
or
nop
dec
lahf
lcall
out
shrl
and
psubusw
addr16
mov
test
pop
sub
cld
adc
adc
or
cmpsb
scas
mov
test
push
addl
inc
cmp
sbb
push
fisubl
cltd
sub
adc
push
mov
adc
nop
sub
test
sbbb
jp
loop
test
cmc
orl
loopne
pop
pop
movsb
xchg
adc
sub
adc
xchg
and
je
cltd
xor
push
pop
xor
fwait
adc
lock
push
xchg
loopne
mov
mov
pop
mov
sub
movsl
jecxz
jmp
jne
adc
cwtl
push
push
rcrl
cmp
xchg
pop
jge
cmp
icebp
xchg
mov
stos
ss
daa
movsl
xchg
xchg
insb
push
idiv
pop
pop
or
in
dec
movsb
jne
test
lcall
mov
sub
cltd
xchg
and
jg
punpcklbw
mov
and
push
mov
inc
lcall
stos
add
dec
fisubrl
arpl
daa
jle
adc
popf
and
movsb
push
mov
fisubrl
pop
add
ficoms
sbb
xchg
stos
mov
jae
mov
stos
xchg
add
repnz
xchg
pushf
add
mov
aam
jle
and
xchg
xchg
pop
out
lcall
cmpsl
or
adc
cltd
lcall
out
add
or
jle
out
test
mov
push
xchg
mov
pop
mov
lcall
lock
or
int
mov
clc
dec
aam
clc
xchg
adc
jl
or
mov
mov
mov
in
test
push
neg
sti
daa
mov
sub
jns
sub
sbb
in
stos
lret
inc
fildll
mov
mov
daa
and
test
stos
xchg
xorb
cmpsl
ljmp
hlt
dec
xchg
xchg
pop
xchg
mov
repz
cmp
daa
dec
xor
nop
cs
dec
sbb
cwtl
xchg
test
jbe
push
dec
into
add
daa
xchg
clts
leave
je
or
cmpsl
call
sub
les
xchg
or
and
and
enter
mov
fildll
test
iret
inc
test
lahf
cltd
out
or
mov
je
xchg
stos
jno
sbb
adc
cmc
das
jp,pt
test
or
jae
push
jbe
hlt
and
xchg
loopne
pushf
xchg
inc
repz
mov
or
adc
cs
out
loopne
out
mov
stos
lret
or
shlb
mov
sbb
jae
adc
cwtl
out
and
out
lret
stos
lcall
out
mov
xchg
xchg
push
test
addb
out
and
mov
cmp
in
lcall
pop
jo
sbb
enter
pop
mov
push
out
and
pop
fwait
mov
pop
jmp
mov
adc
xor
and
ret
test
mov
mov
sub
adc
push
js
in
cmpsb
test
pop
jne
ljmp
xchg
ljmp
mov
mov
js
nop
mov
adc
nop
lahf
push
pop
int3
mov
and
or
mov
sbb
pop
inc
test
das
xlat
push
and
adc
pushf
and
mov
and
inc
fs
jp
stos
stos
xchg
adc
adc
notl
adc
test
xchg
dec
lock
mov
cmpsb
pop
xchg
lock
mov
mov
pop
push
pop
and
scas
repz
xor
and
mov
and
adc
or
and
enter
scas
in
mov
mov
cmpsl
dec
jb
pop
clc
sbb
sub
mov
out
out
sbb
jle
sub
scas
loope
fists
sub
lock
loop
ljmp
stc
stos
xchg
mov
scas
pop
xchg
lahf
daa
pushf
or
or
xchg
out
sub
sub
pop
sub
pmulhw
mov
lds
mov
xchg
cmc
jae
movsl
in
popf
xorb
xchg
xor
imul
icebp
adc
stos
dec
mov
pop
jle
push
in
pop
cmp
jne
es
cld
stos
mov
sub
lcall
pop
xchg
and
jno
jp
or
xchg
std
movsb
jmp
sbb
je
push
roll
cmpsb
mov
xchg
mov
adc
fstps
jae
add
push
je
push
adc
and
rclb
xchg
sbb
in
lcall
jle
mov
stos
or
test
xchg
outsb
mov
pop
ljmp
mov
or
inc
pop
pop
sub
mov
and
mov
xor
inc
and
xchg
adc
and
test
cltd
je
adc
mov
xchg
jmp
xchg
iret
daa
sub
daa
lcall
fwait
repnz
jb
pop
or
movsl
mov
cwtl
mov
stos
jl
push
xchg
mov
scas
addr16
push
pop
pop
in
ret
sub
jle
fldenv
lods
cmpsl
lock
lret
lret
jno
or
pop
scas
dec
sub
es
and
and
or
loopne
cli
or
push
call
sbb
push
adc
test
cltd
push
jb
xchg
sub
xchg
jp
push
sbb
stos
adc
adc
xor
pop
daa
mov
xchg
cmp
push
mov
or
xchg
std
rcrl
loopne
notb
mov
ss
add
sub
sub
pop
or
fs
sahf
in
mov
xchg
mov
outsl
adc
xchg
jg
add
cmc
clc
dec
and
out
sub
std
ja
sub
sbb
mov
dec
lcall
daa
pushf
adc
fwait
repz
xchg
out
lea
daa
cld
cmp
clc
fbld
iret
loop
cltd
sub
stos
imul
mov
push
push
mov
out
push
mov
std
and
sub
sahf
outsl
sub
sub
les
xchg
sbb
cmpsb
test
mov
push
xchg
mov
into
bound
cltd
sbb
out
sahf
pop
subb
es
into
rorl
cmpsl
movsl
fwait
lahf
pushf
mov
mov
sbb
nop
jl
fidivl
adc
or
or
ljmp
mov
data16
push
jb
sbb
fwait
adc
pop
in
pop
xchg
iret
and
xchg
notl
pop
das
ret
test
daa
xor
and
xchg
out
pop
xor
mov
cmpsb
iret
xchg
das
mov
fs
and
xchg
test
add
andnps
stos
jo
sub
enter
test
je
stos
sbb
movsb
and
mov
or
or
scas
and
je
cmpsb
and
fildll
or
stos
daa
decb
pop
out
cmp
fistps
cltd
cmp
mov
sub
push
movsl
mov
aas
mov
push
dec
sub
decb
inc
push
shl
call
rdmsr
mov
and
cmpsl
fwait
dec
hlt
in
push
movsl
adc
mov
jae
and
cmp
mov
jbe
xchg
jae
mov
inc
cmpb
and
sbb
adc
pop
stos
test
xchg
lock
sahf
fisttps
sbb
stos
cmpsb
cld
enter
stos
sub
dec
icebp
test
mov
pop
lahf
and
movsl
stos
test
adc
aas
test
dec
jno
xchg
sub
dec
jbe
mov
mov
mov
pop
mov
push
lcall
jge
cmpl
adcl
in
jae
sbb
add
sub
lcall
jle
jb
xchg
adc
dec
aas
pop
bt
push
clc
out
out
xchg
add
in
cli
or
lret
movsb
and
lcall
mov
lea
and
inc
mov
test
xchg
or
sbb
mov
in
stos
js
adc
cld
lods
int
xchg
cltd
xchg
xor
je
pop
out
mov
sbb
add
adc
xchg
mov
mov
add
adc
lcall
xchg
push
lahf
mov
xchg
xchg
cwtl
mov
movsl
mov
pop
mov
daa
es
mov
xchg
and
pop
movsl
loope
movb
push
xchg
mov
adc
sub
shlb
je
test
shlb
aam
daa
pop
mov
mov
iret
sub
lcall
mov
push
jmp
mov
fsts
sbbb
and
pop
icebp
inc
add
push
push
and
mov
sti
xchg
mov
leave
lods
lcall
fs
decb
jg
jmp
push
mov
add
test
rclb
cmp
test
stc
sbb
jmp
cld
pop
push
adc
jno
or
cmpsl
test
adc
adc
mov
pop
sbb
xchg
js
jge
les
push
sub
into
popf
and
adc
imul
sbb
or
mov
pop
and
ss
mov
adc
mov
daa
cs
xchg
add
out
xchg
stos
cmpsl
adc
pop
xor
ffreep
lgs
or
adc
jmp
or
or
push
fildl
xchg
loopne
loop
es
xchg
sbb
jnp
mov
lahf
mov
es
sbb
cmpsb
decb
std
cwtl
mov
scas
mov
mov
mov
sbb
xor
sub
test
push
cmpsb
and
adc
mov
es
nop
call
sbb
fwait
xchg
andb
inc
push
daa
and
es
xchg
xchg
or
cld
sub
and
in
ljmp
push
mov
dec
dec
mov
mov
adc
inc
pop
lcall
notl
and
mov
or
pop
cltd
push
mov
lcall
ljmp
lcall
xchg
shlb
add
push
scas
movsl
push
and
fldl
lahf
jno
daa
and
ucomiss
lret
dec
es
cltd
orb
jp
leave
inc
lcall
and
sahf
sahf
adc
jp
out
ret
sub
leave
xor
clc
pop
jmp
iret
jmp
or
stos
out
stos
pop
lret
sbb
out
ljmp
in
xchg
loop
icebp
push
test
sbb
cmpsl
movsl
mov
lahf
test
fwait
jp
adc
outsb
mov
imul
pop
into
loopne
sub
adc
test
sbbl
mov
push
sub
xor
sahf
sub
adc
add
mov
and
jb
cwtl
and
pcmpeqb
adc
fidivl
mov
in
clc
daa
push
or
ljmp
and
das
cwtl
fwait
sub
mov
int
mov
mov
lcall
sahf
lds
addb
out
sub
clc
and
sbb
sub
lahf
mov
and
je
jae
mov
ja
sub
xchg
adc
jnp
lea
inc
lahf
adc
mov
out
xchg
or
xchg
daa
xchg
fsts
mov
jo
mov
mov
dec
aad
stos
xchg
mov
pop
out
repz
faddp
movsl
fwait
push
dec
inc
sub
enter
lods
push
push
outsb
pop
lcall
mov
and
cmc
lds
inc
cwtl
adc
dec
lcall
pop
push
jb
adc
das
pop
and
xor
movsb
sbb
pop
bound
enter
cwtl
pop
rclb
nop
xor
mov
decb
push
lea
xor
lahf
cmpsl
and
or
scas
aad
test
push
out
mulb
lcall
and
mov
adc
add
mov
aad
enter
loop
lret
jbe
test
or
sbb
and
movsb
cmpsl
movsb
jb
push
adc
sbb
and
add
push
clc
jbe
hlt
sbb
dec
scas
rcrl
add
adc
test
mov
cmpsb
xor
xchg
adc
or
mov
add
fwait
mov
lods
pop
sub
mov
xchg
xchg
mov
lcall
lds
fwait
mov
insb
movups
movsl
jp
ljmp
jge
pop
xchg
push
mov
fwait
adc
xchg
in
movb
xchg
call
jp
sbb
or
or
sub
jae
xchg
xor
inc
int3
dec
in
mov
inc
rcrl
jmp
and
js
std
cmp
jo
xchg
movsb
xchg
jb
adc
sbb
sub
movsl
sbb
jg
xlat
jae
xor
jge
adc
cwtl
outsl
jmp
movsb
pop
sub
push
cmp
pop
or
mov
addr16
pop
cmpsb
xchg
and
mov
cltd
daa
jg
ljmp
jge
shl
lahf
test
xor
xchg
sahf
xor
push
stos
in
mov
shrb
pop
add
sahf
cmp
jne
or
mov
jg
pop
sahf
int
setbe
daa
jle
xchg
cld
adc
daa
push
and
jns
mov
or
cmp
sbb
and
cmpsb
pop
sti
jecxz
les
test
lods
mov
cwtl
adc
cld
and
mov
shll
out
fimull
xchg
jg
pop
push
jns
mov
sarb
jno
sub
push
lods
mov
sub
push
ret
and
sub
adc
xchg
fsubl
xchg
into
sub
pop
dec
into
mov
sub
mov
fistps
je
stos
out
clc
and
stos
call
test
cli
adc
fadd
sbb
xchg
mov
mov
stos
xchg
jbe
pop
adc
imul
das
cmpsl
sbb
add
sub
pushf
movsb
cmpb
mov
pusha
jge
nop
fstpl
in
mov
and
cmpb
jae
adc
outsb
pop
out
sub
pop
mov
dec
mov
stos
or
mov
mov
loop
jbe
pop
cltd
jge
or
movsb
lock
sub
out
pop
mov
xchg
sbb
pop
sar
dec
nop
jno
pop
adc
lahf
mov
adc
xchg
fwait
test
and
adc
mov
pop
cvtps2pd
and
inc
andb
shrb
popa
pop
xchg
add
sub
xchg
mov
mov
nop
int3
mov
sbb
lcall
test
imul
and
rorb
cmpsb
adc
icebp
lea
mov
aam
pop
push
mov
andl
xor
cwtl
sub
jbe
or
pop
xchg
jae
adc
xchg
pop
pop
adc
pop
push
mov
sub
dec
mov
mov
add
sub
sub
or
repz
xchg
es
cld
mov
sub
xchg
shll
jge
pop
es
cmp
mov
mov
test
sbb
pop
add
sub
scas
pop
fwait
imul
ret
arpl
frstor
fcoms
pop
out
jo
lcall
out
mov
push
push
xchg
xchg
adc
push
mov
fldenv
jae
cmpsb
mov
notb
lea
jg
test
imul
ret
cmpsl
sbb
pop
sub
or
inc
mov
pop
pop
mov
leave
je
xchg
pusha
aas
test
insb
repz
fdivrp
mov
pop
sub
scas
xchg
mov
test
dec
pop
mov
xchg
aad
lcall
out
negl
mov
lahf
mov
pusha
adc
stos
or
or
jge
xor
je
sbb
and
lods
cmp
sub
lahf
mov
sbb
fnstsw
push
pop
ss
xchg
adc
xchg
loop
std
sub
and
mov
vminps
mov
mov
daa
mov
movsb
out
sete
xchg
push
ficoms
mov
xchg
xchg
fwait
adc
jmp
ret
or
xor
mov
cmpsb
adcb
rorb
sbb
mov
xchg
movaps
mov
ss
enter
mov
xchg
fwait
in
mov
sub
and
rol
mov
fwait
cltd
adc
js
or
lret
loopne
or
jnp
mov
pop
push
mov
ret
es
fwait
or
cld
adc
add
push
sbb
es
jle
sub
fwait
cmpsl
adc
movsb
mov
daa
mov
lcall
push
mov
daa
pop
int
aad
inc
outsl
xchg
sub
stos
mov
mov
and
notl
or
mov
mov
das
aad
cltd
cmpsb
adc
dec
or
adc
pushf
mov
hlt
out
rcrl
and
fiaddl
push
mov
mov
xchg
jae
nop
pop
lcall
sarl
fisubrl
movsb
cltd
push
daa
xchg
push
iret
pop
adc
je
cmpsl
pop
sbb
shr
lret
stos
mov
and
xchg
jl
roll
and
or
mov
jg
addr16
int3
push
sti
or
daa
stos
xor
sbbb
or
xor
fwait
sub
addb
test
xchg
or
mov
push
icebp
sbb
cmp
hlt
and
cwtl
mov
inc
outsl
xchg
sbb
and
xor
mov
mov
xor
je
test
sub
popa
mov
scas
adc
outsb
ljmp
mov
sub
pop
adc
loop
xchg
sub
loop
xchg
lock
lods
pop
aam
es
outsl
push
adc
or
and
mov
jno
movsl
sub
pop
out
daa
dec
fildll
mov
mov
sub
or
jne
cmpsl
scas
jb
scas
mov
add
xchg
or
test
stos
xchg
adc
xchg
pop
stc
sbb
fsubrp
xchg
mov
push
orb
push
or
xchg
orb
lcall
cmp
pop
sahf
bound
das
xchg
ja
cmp
sub
sbb
test
int3
ds
rcrl
mov
test
fs
mov
jno
pop
inc
cli
adc
adc
fcmovb
xchg
cwtl
xor
xor
int
dec
cltd
and
sbb
iret
fists
iret
dec
jbe
aad
xor
mov
add
add
decb
sub
mov
scas
mov
stos
fwait
mov
or
icebp
xor
jb
sahf
adc
cmpsb
mov
shll
push
clc
mov
test
sbb
sbb
mov
and
jg
cli
xchg
or
xchg
sub
mov
movsb
pop
mov
lahf
stos
es
mov
xchg
adc
addr16
repz
lcall
shlb
pop
or
movsl
rcpps
cmpsb
adc
mov
adc
jae
sbb
jecxz
mov
cmc
jb
shlb
scas
cmpsl
adc
lret
js
repz
mov
mov
adc
dec
adc
mov
clc
mov
sti
jo
lcall
sub
push
insb
push
sub
andb
sbb
cmp
xchg
fistpll
mov
cmp
and
in
data16
sbb
addr16
jecxz
and
mov
xor
inc
out
mov
mov
xchg
adc
pop
scas
or
mov
pusha
mov
sbb
adc
mov
add
or
lods
and
xchg
adc
pop
push
lock
movsl
pop
into
rcrl
xchg
cltd
je
or
xor
fwait
imul
push
sti
insb
jle
xor
cmpsl
mov
loop
sarb
pop
int3
push
dec
mov
push
mov
loopne
loop
push
and
jb
xchg
adc
mov
fimuls
sub
test
sbb
push
jmp
leave
fwait
inc
mov
aaa
xor
daa
insl
scas
fisubrl
lcall
or
mov
sub
cltd
lahf
cmp
push
push
mov
and
fs
lret
sub
repz
mov
adc
enter
jp
xchg
jmp
mov
cmpsl
lcall
stos
sbb
test
xchg
cmp
cltd
lret
xchg
out
je
adc
sbb
int
and
mov
out
rcrl
mov
xchg
scas
mov
outsb
push
and
mull
cmpsl
into
cltd
sbb
adc
xchg
mov
xchg
lcall
ficoml
lds
adc
sbb
jns
mov
mov
xorl
xchg
test
jno
adc
into
stc
mov
sub
or
add
push
cwtl
sub
test
rorl
and
in
movsb
jp
pop
xchg
jl
sbb
mov
push
stos
cltd
push
out
adc
jp
xchg
punpckhwd
pop
adc
sahf
cmpsl
pop
mov
scas
out
push
pop
jp
int
xchg
push
movsl
lock
xchg
adc
out
sbb
jmp
out
adc
adc
lahf
mov
jmp
mov
sub
push
mov
dec
jae
sub
xor
outsl
js
cltd
cmpsb
outsb
ss
add
fisubl
stos
cmpsb
andl
push
lcall
into
mov
daa
mov
andb
fisttpll
mov
xchg
es
call
adcl
xchg
adc
or
sbb
ret
es
lock
cmpsb
push
push
jbe
adc
sti
sub
lahf
pop
sbb
xchg
nop
out
mov
pop
cwtl
xchg
pop
cmc
cmpsb
pop
outsl
out
adc
sbb
push
nopl
xchg
sub
sbb
sub
clc
xchg
std
mov
adc
rdpmc
jne
jge
bnd
and
mov
sbb
add
mov
cld
sub
adc
and
testl
mov
xchg
sahf
mov
xchg
mov
stos
call
out
mov
gs
mov
hlt
xchg
push
push
repnz
test
mov
sbb
jl
leave
mov
repnz
movsb
xor
xchg
or
stos
loopne
or
dec
cmc
and
mov
pushf
or
and
pushf
push
dec
pop
adc
mov
mov
lret
jnp
popa
mov
pop
sub
js
js
lret
sti
push
out
fmuls
adc
pop
inc
fistl
shlb
or
out
sbb
xchg
ficoms
push
stos
fsubrs
addr16
mov
sbb
test
hlt
sbb
xchg
mov
and
mov
adc
cmp
sub
adc
stc
and
sbb
je
xchg
mov
inc
cmc
sub
clc
push
in
negl
and
rcll
and
push
inc
xchg
test
or
add
lock
fwait
adc
xchg
xchg
xchg
adc
xchg
insb
lcall
pop
xor
xchg
dec
out
lods
xchg
and
sar
daa
xchg
or
jecxz
imul
pop
aad
repz
daa
or
sbb
jecxz
adc
imul
mov
pop
xor
push
push
xchg
out
sbb
or
in
daa
xchg
mov
cmc
inc
enter
daa
sub
leave
stos
mov
sub
jb
jae
and
mov
dec
je
cmpsb
outsl
das
adc
daa
mov
fwait
pushf
dec
test
xchg
mov
lahf
das
int
lcall
xchg
cmp
and
test
pop
xchg
mov
adc
jb
jo
xchg
sbb
pop
jae
mov
in
push
aas
add
mov
add
in
xor
mov
outsl
jbe
mov
notl
inc
jae
adc
scas
mov
adc
dec
jo
mov
xor
push
int
js
mov
dec
stos
mov
aad
and
test
xchg
dec
cld
daa
pop
fldl
outsl
fisubs
nop
push
fistpl
ds
fadds
movsb
mulb
int3
scas
cmp
xchg
sub
and
sub
stos
cwtl
push
mov
clc
sbb
sub
dec
jno
or
mov
ljmp
into
enter
dec
mov
pop
je
rcll
jae
mov
sub
adc
dec
es
mov
lahf
negl
loope
punpckhdq
fldt
ficoms
movsl
mov
sbb
xchg
stos
js
in
sbb
cmp
pushf
sub
stc
push
sub
lock
cld
sti
adc
mov
and
insb
out
mov
lcall
test
movsb
xchg
xchg
cmpsl
xchg
mov
xchg
adc
or
filds
adc
enter
es
cmc
sub
mov
movsl
ds
out
pop
mov
mov
into
jmp
and
loop
jbe
adc
sbb
cltd
int
push
pop
cwtl
xor
mov
mov
stos
ss
xchg
lahf
mov
std
test
fst
sub
mov
pop
inc
pop
jmp
fcmovbe
mov
adc
xchg
xchg
xchg
and
and
cltd
inc
iret
mov
mov
int3
mov
scas
aam
and
lcall
out
test
xchg
rol
pop
pusha
adc
ret
shll
sbbb
cmp
adc
out
xchg
sub
adc
and
adc
pop
arpl
es
or
movsb
cmc
mov
sbb
subl
mov
pop
std
adc
out
jb
xchg
mov
into
aas
stos
fwait
mov
and
pop
adc
sub
xchg
and
and
xor
fnsave
pop
into
mov
daa
sub
js
leave
shll
lea
xchg
sub
or
lahf
in
or
bswap
je
es
adc
sbb
xchg
xor
scas
xchg
push
pop
sub
dec
scas
mov
mov
sbb
dec
pop
mov
rorl
pushf
sbb
and
sbb
xor
mov
nop
xchg
pop
sub
in
stos
lcall
xchg
gs
add
pop
call
mov
es
add
sbb
ljmp
jae
popf
loop
mov
pop
jecxz
mov
add
xchg
je
jne
call
lods
push
cltd
xor
das
out
xchg
sub
rcrb
ljmp
xor
pop
and
out
add
dec
fidivrl
or
push
test
inc
mov
in
lret
lahf
movb
mov
and
adc
and
push
jmp
in
je
jb
movsb
decb
jbe
add
outsb
imull
mov
orb
sti
pop
sahf
scas
dec
adc
mov
test
es
leave
sahf
out
xchg
xchg
sbb
mov
pushf
stos
hlt
std
cwtl
mov
jmp
call
mov
xchg
mov
lahf
test
rcr
add
mov
pop
insl
or
into
xchg
mov
je
mov
shrb
popl
movsl
cmpsb
lock
jge
fwait
adc
hlt
add
lcall
mov
mov
fcmovb
out
push
std
sbb
lock
stos
lcall
pop
cwtl
es
fsubr
xchg
cli
cli
and
xchg
fs
and
mov
mov
mov
dec
and
adc
jecxz
sbb
xchg
lahf
mov
or
add
mov
mov
gs
mov
call
nop
mov
invd
clc
or
adc
cmc
sbb
or
insb
cld
mov
out
int
sub
outsb
data16
and
adc
sbbb
mov
pushf
mov
adc
mov
adc
lret
and
test
sub
mov
decb
xchg
test
jb
xchg
mov
scas
add
push
xchg
pop
and
int3
push
clc
xchg
nop
dec
andb
pusha
stos
shll
adcl
jle
shrl
mov
mov
es
fildll
jb
bt
xchg
xlat
mov
xchg
and
cltd
xchg
das
test
or
xchg
je
sbb
insl
adc
and
lods
jmp
mov
mov
negl
sub
push
push
add
xchg
adc
push
pop
mov
xchg
pop
popa
mov
or
stos
sbb
mov
daa
or
fwait
adc
adc
xchg
in
pop
fisubl
sub
xchg
adc
pop
sub
lcall
fimuls
in
and
arpl
add
nop
lret
adc
mov
and
mov
or
lock
movsb
scas
sbb
fwait
stos
loope
dec
jb
pop
xor
cmpsb
js
clc
mov
test
sar
out
sahf
mov
xchg
mov
mov
push
push
lahf
push
sbb
push
push
adc
jg
xchg
xchg
lock
cltd
cwtl
push
xor
in
push
or
xor
xchg
stos
lret
xchg
clc
lock
sub
shrb
insl
stos
mov
mov
sbb
or
fs
sub
fwait
lcall
adc
sub
xchg
popa
fcoml
sbb
xchg
adc
cmp
and
arpl
testl
stos
test
scas
sbb
stos
xchg
push
fdivp
lcall
pop
or
cmpsb
or
jge
add
sbb
idiv
jae
mov
adc
call
xchg
adc
sub
jbe
incb
es
mov
xor
cltd
int
jnp
or
mov
stos
jecxz
ljmp
sbb
sub
pop
mov
ljmp
mov
movsb
js
aas
out
mov
adc
mov
push
out
test
daa
cmpsb
int
lcall
push
lahf
std
cwtl
sub
dec
clc
pop
in
mov
in
xchg
jb
daa
add
je
mov
adc
pop
sbb
mov
scas
and
pushf
adc
inc
adc
dec
add
mov
stos
out
xchg
sbb
test
cmp
mov
xchg
or
andb
lea
scas
mov
and
loopne
je
mov
xchg
test
inc
popa
adc
stos
lahf
mov
or
add
movsb
into
xlat
test
xchg
xchg
lahf
xchg
xor
mov
es
ret
cmp
mov
and
mov
or
mov
push
stc
pop
mov
fcmovbe
mov
pushf
mov
cmpsl
jbe
fwait
sti
mov
add
xchg
in
or
sbb
add
cmp
jmp
pop
adc
push
stos
pop
sbb
push
and
adc
mov
mov
mov
pop
mov
xchg
insl
stos
lods
jl
addl
or
fwait
and
lcall
test
push
test
stc
sbb
lock
lcall
stos
pop
adc
sub
roll
mov
adc
stc
adc
test
mov
ljmp
das
test
fwait
jbe
xchg
mov
sbb
iret
sbb
subl
mul
pop
test
jg
dec
lahf
mov
push
jmp
pop
jns
loopne
or
mov
adc
es
movsb
test
adc
movsl
and
push
sub
mov
mov
pop
lock
push
fs
dec
je
sub
sub
popf
mov
mov
mov
mov
lods
dec
and
xchg
add
dec
cmp
sub
xchg
add
pop
andl
popa
jae
test
test
xchg
scas
inc
push
mov
sub
cld
stos
xlat
sbb
push
xchg
mov
cmpsb
scas
mov
aas
mov
and
or
rclb
or
addr16
pushf
and
stos
mov
xchg
fwait
push
xchg
and
stos
pop
es
mov
into
mov
sub
int3
mov
xor
daa
sahf
ret
push
into
and
jbe
adc
xchg
or
pop
mov
mov
pop
mov
add
mov
push
lock
sbb
fcompl
jae
xchg
clc
nop
mov
fmuls
nop
add
pop
xchg
sbb
or
fwait
test
out
mov
and
inc
jecxz
int3
in
pop
in
xor
xor
sbb
add
mov
sub
xor
and
xor
or
adc
push
fs
ret
daa
mov
adc
mov
outsb
jae
lcall
push
inc
inc
adc
ror
push
mov
dec
xchg
mov
pop
adc
stc
sub
mov
nop
sub
add
sbb
insl
movsl
sbb
push
daa
push
mov
xchg
mov
add
je
and
cwtl
fwait
nop
adc
xchg
adc
cltd
sub
lcall
lcall
test
push
hlt
mov
adc
cmc
pop
dec
jno
add
into
imul
jb
adc
lock
mov
push
insl
je
or
call
je
lahf
mov
nop
scas
or
sub
data16
repnz
adc
jbe
mov
and
sub
aam
sbb
int3
mov
push
movsl
mov
cmp
arpl
xchg
adc
mov
mov
sbb
xadd
adc
out
daa
push
xchg
adc
test
xchg
mov
sbb
cmc
movsl
int3
xlat
push
int3
std
jp
xchg
sub
iret
das
adc
inc
rorl
mov
jo
cmpsl
daa
cmpsb
mov
iret
sahf
fcomp
jge
xlat
mov
push
lock
sbb
enter
add
shlb
add
or
test
jmp
pop
gs
xchg
sbb
repz
movsl
sub
and
xorl
addb
ljmp
sub
and
mov
and
jno
adc
xchg
or
jb
lahf
movsb
cltd
jp
push
or
and
or
pop
loope
nop
aas
mov
xor
out
sbb
sub
pop
stc
je
mov
cmc
add
stos
sub
cld
lea
mov
or
sub
xchg
xchg
jge
dec
dec
lcall
scas
aad
mov
cmp
insl
fistps
push
or
inc
cld
outsl
mov
xchg
xchg
adc
fsts
xor
mov
cwtl
push
into
xchg
xchg
test
mov
stos
jmp
xchg
sahf
mov
sub
mov
xchg
test
add
mov
lcall
nop
js
and
scas
adc
push
or
and
mov
xchg
insb
fwait
and
out
push
lret
and
cmc
mov
xchg
lea
shlb
or
imul
out
xchg
lcall
xor
sbb
decb
xchg
mov
andl
out
sbb
stos
pop
movsb
xchg
test
stos
js
mov
cwtl
fs
add
jae
jo
xchg
xchg
mov
mov
mov
pushf
mov
fidivrl
mov
lahf
xchg
cmpsb
sub
push
xchg
push
adc
adc
xchg
jecxz
adcb
and
movsb
adc
and
test
sub
cmpsl
dec
and
sahf
mov
add
adc
mov
xchg
sub
popl
inc
movsb
jg
sbb
outsl
dec
adc
and
sub
xchg
mov
xchg
dec
adc
les
sub
stos
and
enter
adc
mov
and
cs
or
sub
or
test
movsb
jo
xchg
or
sub
xchg
imul
push
mov
cmpsb
pop
mov
in
out
sbbb
daa
add
sbb
or
push
sbb
nop
jno
and
lahf
cwtl
xchg
ljmp
movsb
adc
cmpsb
adc
or
stos
adc
fidivs
cmp
cmc
sub
aaa
pop
mov
push
loopne
sub
fucomi
lds
jae
pop
loopne
mov
xchg
xchg
in
es
lods
std
movsl
test
int3
addb
stos
jl
out
sti
xchg
sub
mov
or
pop
jmp
fmull
lea
stc
sbb
inc
out
repz
sbb
in
or
lahf
add
ljmp
mov
testl
push
mov
ret
lods
cmpsb
adc
je
mov
stos
lods
cmp
or
mov
cwtl
movsb
sahf
xchg
pop
leave
leave
outsl
xchg
xchg
lahf
and
outsl
sbb
push
stos
xor
scas
and
and
mov
loopne
sub
mov
js
test
inc
jae
cmpsb
sub
cmp
movsl
push
and
shll
sbb
test
mov
imul
adc
jbe
aam
adcb
mov
nop
mov
xchg
push
repz
adc
mov
cli
notl
pop
push
lahf
and
push
aam
roll
mov
xor
dec
or
push
lock
pop
pop
sahf
push
xchg
mov
add
lock
daa
inc
test
xchg
xor
jmp
push
push
pop
fwait
xchg
xorl
test
scas
aaa
mov
test
push
sbbb
and
xor
and
icebp
or
push
mov
xchg
pop
jae
lods
arpl
shll
mov
sub
adc
mov
jp
xchg
lcall
addr16
sahf
inc
adc
and
mov
ret
push
adc
loope
out
enter
mov
stos
xchg
fs
jb
mov
nop
add
nop
test
test
cltd
adc
in
aas
and
xchg
cmp
sbb
jmp
push
mov
xchg
stos
sbb
aad
xchg
mov
stos
and
lret
cmpl
clc
sub
mov
nop
scas
mov
sbb
or
adc
dec
xchg
cmc
mov
sbb
mov
lahf
xchg
xchg
push
lahf
add
mov
and
movsb
scas
mov
daa
sbb
pop
xor
ljmp
in
into
mov
or
test
jb
mov
xchg
xchg
dec
test
mov
or
pop
sbb
aam
in
cwtl
pop
clc
add
sub
shll
fwait
pusha
cwtl
xchg
mov
cwtl
ds
mov
je
mov
xchg
push
test
imul
pop
and
dec
outsb
cmpsl
call
mov
sbb
pop
xchg
pop
sub
sbb
dec
icebp
adc
sbb
loopne
xchg
xchg
mov
sub
lock
adc
lds
vmread
pop
rorb
or
cld
or
sysret
repz
inc
mov
pop
sub
sub
stos
mov
push
jmp
mov
loop
jae
stos
nop
das
fsubrl
xchg
adc
sbb
outsl
and
mov
daa
es
pop
nop
test
int3
xchg
inc
mov
jae
stos
stos
sub
fimull
shrl
shr
pusha
jo
subb
or
out
pop
xchg
push
sbb
sub
sbb
inc
ret
out
jmp
pop
mov
jb
adc
xchg
mov
xchg
test
insl
cmpsb
and
or
add
mov
and
jg
push
adc
and
sub
jp
xchg
std
fwait
mov
sub
std
popf
int
ljmp
popa
mov
daa
or
out
or
or
mov
or
rorl
fadd
push
mov
xorl
out
sub
dec
and
les
sbb
adc
out
ds
cltd
popl
or
daa
std
pop
fcoml
and
fistps
nop
les
scas
jl
adc
adc
shlb
mov
pop
jle
movsb
repnz
int
js
xchg
gs
xor
cmc
mov
xlat
xchg
in
cs
adc
movsb
adc
pop
aad
subb
out
and
clc
or
icebp
xor
push
mov
xchg
jge
daa
xchg
fstpl
out
or
adc
sbb
ljmp
cmp
mov
imul
cld
stos
sbb
adc
loope
notl
mov
or
or
std
sub
test
movsl
cwtl
adc
ficoml
inc
je
adc
outsb
and
xchg
lds
xchg
push
out
test
inc
xor
mov
nop
xchg
and
daa
dec
scas
loop
add
mov
aam
stos
and
sub
push
and
xchg
lahf
out
test
sbb
mov
clc
or
mov
mov
xchg
loopne
repz
sub
xchg
and
sti
popf
push
mov
or
adc
leave
push
mov
fst
cmc
pop
and
mov
sub
outsl
insl
fwait
xchg
sbbb
mov
lea
pop
sub
xchg
pop
movsb
pusha
sub
in
inc
test
and
xchg
lret
mov
sti
lcall
and
sti
cmpsb
stc
mov
adc
and
sbb
and
xchg
ljmp
scas
dec
cwtl
sub
lret
pop
stc
cmpsb
adc
in
xchg
push
aas
push
mov
ret
adc
and
sbb
push
pop
iret
pop
mov
jb
xchg
mov
xor
sub
popf
sub
movsb
test
push
mov
mov
in
adc
adc
inc
jae
rcr
xchg
cmpsb
mov
jne
xchg
and
mov
lock
mov
jmp
nop
stos
jmp
sub
sub
mov
xchg
mov
adc
xchg
into
movsb
lock
sub
jne
mov
aam
add
fildll
xchg
xchg
mov
gs
rcll
int
jecxz
sbbb
addr16
and
dec
fisubl
xor
mov
mov
sarb
jo
adc
sbb
mov
lea
shlb
aam
aad
push
dec
mov
push
mov
mov
rolb
arpl
aas
inc
xchg
rclb
test
lock
daa
sbb
fwait
call
adc
cmp
mov
js
js
movb
mov
stc
stos
sbb
cmp
pop
popf
inc
and
ficompl
aam
ret
mov
and
or
cmpsb
jle
or
push
test
js
jae
xchg
sub
jae
or
sub
shll
rorl
pusha
mul
xchg
cmovne
sub
lcall
dec
sahf
xchg
mov
xchg
pop
jb
sub
xchg
adc
xchg
xchg
js
mov
xchg
mov
mov
les
mov
aam
add
and
adc
pop
or
sbb
adc
pop
push
sub
mov
hlt
mov
inc
lcall
push
or
adc
dec
xchg
leave
xchg
and
xor
insb
xor
cmp
testl
call
mov
xchg
mov
push
lcall
cmc
movsl
pop
sub
sbb
sbb
fwait
xchg
addr16
fcompl
cld
xchg
mov
mov
mov
sarb
nop
out
gs
xchg
xchg
scas
jle
lcall
loop
and
cwtl
inc
or
or
movsb
mov
adc
cwtl
mov
cld
pop
sbb
and
xchg
or
movsl
mov
pop
daa
cmp
xor
lcall
add
lret
adc
cltd
mov
es
rcll
fidivl
cmpsl
aas
inc
mov
add
pop
xchg
sahf
sub
nop
cmp
adc
jg
push
or
orl
stos
shlb
popa
dec
lods
cmpsb
fisttpl
repnz
sbb
cmp
adc
adc
cmc
dec
repz
and
or
mov
iret
jae
in
ffree
sbb
fisttpl
adc
pop
out
jle
push
xchg
sub
or
jmp
jecxz
mov
lea
movsb
and
xchg
adc
pop
and
stos
or
adc
mov
dec
out
adcl
loopne
jge
in
test
cld
xchg
and
xchg
loope
lea
and
testl
test
mov
xchg
mov
and
and
shll
daa
lea
cltd
lcall
shrb
mov
outsb
in
xor
cwtl
into
dec
sub
xchg
and
sbb
push
mov
push
testl
or
loop
iret
push
cmpsb
push
call
adc
push
dec
cmpsw
sbb
or
sbb
adc
ja
pop
mov
sbb
xchg
stos
mov
mov
sub
in
iret
xchg
adc
hlt
mov
adc
sbb
and
rorl
lcall
stos
mov
fmull
push
push
mov
or
push
stos
fdivrl
xchg
mov
add
jg
and
or
mov
xchg
adc
sbbb
hlt
and
xchg
and
es
xchg
por
and
and
outsl
jmp
test
xchg
insl
xor
jno
adc
rclb
jle
stos
adc
pushf
push
mov
mov
out
mov
jp
mov
xchg
mov
dec
mov
or
and
lahf
rcrb
push
jle
cmpsl
sub
xor
cwtl
in
fsts
mov
sbb
insl
test
and
xchg
lock
in
mov
and
mov
adc
cmpsl
inc
popf
in
lret
lret
mov
or
jmp
test
xor
push
mov
mov
adc
mul
and
in
stos
test
mov
aas
mov
cmpsb
jo
and
mov
icebp
adc
sbb
xchg
mov
sub
adc
jae
and
pushf
jg
mov
mov
and
jno
lahf
adc
in
nop
sbb
xor
outsb
push
cltd
push
adc
nop
sub
dec
stc
sub
sbb
adc
sti
xchg
mov
imull
mov
clc
sti
xrelease
iret
outsb
cmp
cld
int3
dec
scas
adc
stos
mov
push
cmp
sub
push
xchg
leave
cmc
jae
xchg
repz
cltd
jno
adc
hlt
adc
daa
aas
jg
push
xchg
mov
or
sub
mov
test
stos
and
in
xchg
mov
sub
xchg
cltd
nop
idivb
pop
lea
mov
daa
mov
out
pop
adc
jle
fwait
or
or
popf
mov
test
mov
cltd
mov
sbb
or
nop
push
mov
pop
and
mov
mov
sbb
insb
rolb
jmp
xchg
or
xchg
xchg
adc
ret
jae
es
sub
fmul
in
mov
adc
sbb
jbe
sbb
sub
sub
adc
pop
fs
jno
sub
mov
push
mov
xchg
insb
or
in
js
inc
notl
fs
scas
mov
or
or
sub
mov
dec
das
stos
test
mov
mov
fwait
scas
mov
ss
cltd
mov
shlb
pop
or
jmp
xchg
outsl
pop
sub
scas
jg
mov
mov
dec
lret
out
cltd
sbb
sub
cwtl
sub
jns
or
mov
sbb
mov
jg
bound
xchg
stos
push
mov
push
stos
pop
and
xor
mov
adc
dec
sbb
inc
jge
sbb
jl
lods
sbb
rorb
cmpsl
pop
xor
into
pop
mov
adc
mov
fadds
into
iret
and
cmp
jae
and
jno
adc
outsl
xchg
in
in
add
add
insl
imul
xchg
fldln2
lcall
cwtl
jb
lcall
pop
ret
mov
cwtl
bound
mul
jbe
adc
dec
push
leave
mov
ja
pop
xchg
adc
sbb
push
fwait
mov
je
mov
lock
fsubrs
cmpsl
adc
adc
cwtl
mov
je,pt
xchg
ljmp
mov
and
stos
insl
lods
cmp
pop
cmpsb
in
and
or
push
mov
dec
test
sbb
xor
mov
daa
pop
xchg
jo
negb
jle
pop
cmpsb
mull
lods
and
sbb
adc
movsb
ss
jbe
push
adc
fiaddl
scas
aas
iret
xchg
sub
pop
insl
rclb
andb
and
xchg
xchg
dec
and
pop
in
push
outsl
ljmp
lret
test
nop
mov
mov
test
pop
subb
das
xchg
and
mov
adc
and
xchg
and
stos
fisubl
and
stos
sub
out
cmc
xchg
mov
push
adc
pop
pop
sahf
rcrb
lcall
cmp
out
and
ljmp
fdivl
pop
inc
and
cmp
aas
adc
mov
xchg
inc
cmp
mov
sub
cmp
loope
xlat
mov
dec
ret
je
sbb
lods
jp
int
or
and
cmp
or
or
add
mov
loopne
std
sbb
adc
lret
sub
repz
xchg
aaa
clc
mov
je
adc
jns
daa
or
bound
mov
scas
jne
mov
fcom
xchg
sbb
mov
xchg
sub
pop
fs
sbb
clc
adc
adc
inc
test
icebp
test
adc
shrl
out
sbb
sbb
lds
lcall
test
nop
or
stos
test
sub
mov
dec
es
mov
inc
mov
xor
sub
and
lcall
ret
cmp
rorb
cltd
mov
leave
js
fcoml
xchg
sbb
jg
dec
xor
mov
jno
adc
xchg
push
cwtl
and
and
push
jne
mov
and
nop
test
pop
add
cld
sub
xchg
test
stos
fwait
out
xchg
mov
test
mov
movsb
xchg
sub
adc
or
sub
mov
sub
mov
xchg
clc
pop
mov
dec
xor
xchg
and
xchg
push
xor
sbb
mov
mov
outsl
push
and
movsl
push
daa
mov
pop
imul
test
punpckhwd
mov
inc
negl
cli
inc
jb
or
shlb
lcall
aas
inc
push
xchg
cmpsb
in
push
ficompl
cmp
mov
ret
mov
test
in
dec
jno
movsl
mov
add
xchg
sahf
xchg
mov
lahf
test
imul
sbb
and
iret
push
lock
pop
pop
cmc
cmp
out
adc
mov
notl
and
add
and
push
mov
les
xchg
lahf
js
outsl
mov
push
pop
mov
mov
pusha
sbb
and
xor
dec
repz
popf
mov
xchg
cmp
fildl
scas
stos
lahf
xchg
mov
jno
adc
repz
xchg
rclb
rorb
cmp
mov
sub
add
and
dec
xchg
repz
xchg
test
sub
je
sbb
push
lret
lahf
loop,pn
jp
mov
push
mov
and
jnp
cltd
adc
xchg
xor
lret
mov
lahf
mov
xor
xchg
pop
push
mov
push
stos
xchg
and
mov
stc
in
push
rclb
xchg
out
adc
and
cltd
es
outsb
stos
xchg
mov
mov
cmp
inc
bnd
nop
cmpsb
adc
leave
lea
outsl
out
daa
xchg
sub
add
test
xlat
es
sub
push
sbb
int
jno
sub
in
lods
cmp
aam
xchg
push
xchg
cmp
or
sub
testl
xchg
and
mov
mov
lock
or
push
stos
push
mov
movsl
mov
jge
push
cmp
mov
test
sub
pop
lea
or
lods
rclb
std
and
outsl
lahf
mov
fwait
sahf
scas
mov
pushf
mov
xchg
push
mov
xchg
je
inc
movsb
in
lcall
mov
sub
mov
popf
loope
test
xor
and
adc
jmp
out
sbb
lahf
daa
movaps
and
cmpsl
fwait
testl
mov
add
js
inc
rcl
and
xchg
mov
adc
and
mov
aam
xchg
mov
xchg
es
jle
sub
outsb
inc
outsl
mov
mov
or
sub
stos
xchg
sub
and
mov
mov
je
repz
pop
jb
xchg
mov
mov
sub
cltd
push
call
cmpsb
sub
cmpsl
test
je
mov
xchg
xor
repnz
inc
out
push
and
and
cmpsb
push
movsb
mov
xor
cmpsl
cmp
mov
sub
lcall
je
jmp
sbb
xchg
es
lcall
and
and
cli
movsl
test
loop
xchg
mov
call
in
imul
and
mov
jp
push
orl
inc
lock
lahf
xchg
into
frstor
xchg
lcall
xchg
cltd
inc
jae
and
stc
scas
push
adc
xchg
lods
and
pop
pop
push
xchg
bound
call
stos
test
mov
pop
stc
cmpsl
div
jbe
xchg
pop
nop
int
adc
repz
scas
out
mov
xchg
push
or
fwait
adc
sbbl
adc
nop
xor
jge
push
xchg
add
pavgb
sbb
inc
rcrl
pop
data16
iret
leave
sub
insb
bsf
sahf
mov
nop
or
popa
out
xchg
pop
lret
jbe
mov
xchg
or
xchg
repz
aad
rolb
adc
xlat
or
stos
add
fiaddl
not
loope
cltd
std
xchg
pop
xchg
cwtl
sti
jae
adc
mov
fwait
into
adc
xchg
add
xchg
lcall
nop
mov
xchg
mov
push
daa
test
mov
push
int3
xchg
in
lret
or
je
pop
mov
xor
lcall
xchg
nop
sbb
inc
stos
xor
and
xchg
dec
stos
mov
cmpsb
daa
dec
pop
mov
mov
jae
stos
or
fisubs
pop
push
vmread
sbb
mov
outsl
jmp
sahf
fimull
mov
mov
mov
push
imull
in
stos
or
xchg
xchg
gs
cmpsb
xchg
sub
xchg
fsubl
sbb
cli
outsb
cmp
push
xchg
outsl
cmp
jg
fisubl
jb
xchg
or
mov
mov
pop
xchg
sub
ret
xchg
daa
sbb
dec
je
xchg
insb
xchg
xchg
mov
pusha
sahf
sbb
es
cltd
rcll
mov
shll
mov
push
mov
mov
out
es
lcall
sub
into
sbb
adc
jge
lods
test
outsl
pop
adc
stos
test
test
and
pop
fisubrs
in
popf
cmpsl
out
lea
xchg
mov
lret
and
cwtl
pop
xchg
sub
mov
adc
mov
shrl
lcall
scas
sbb
sbb
mov
jno
xchg
jmp
mov
mov
sub
stos
mov
cmpsb
lret
xchg
pop
push
and
out
and
or
movsl
mov
lret
xchg
iret
mov
or
test
fidivrs
mov
jecxz
jge
or
sbb
xchg
pushf
sub
lcall
and
scas
test
sub
mov
add
addr16
test
jp
test
cld
rcll
movups
sbb
gs
inc
push
lcall
sub
xchg
xchg
fistps
clc
rcrb
mov
jmp
leave
les
or
fwait
mov
adc
mov
xor
xchg
adcb
cmp
and
and
or
mov
rolb
std
pushf
mov
jecxz
into
and
or
lret
les
xchg
jno
push
or
loopne
xor
mov
cmp
or
jle
inc
out
lods
mov
in
sbb
and
xchg
sub
adc
stos
stos
adc
and
and
mov
movsl
push
cmpsl
outsb
cmc
rorl
xchg
push
xchg
addr16
inc
pop
and
jae
movups
dec
and
fbld
push
cmp
adc
repnz
or
into
mov
out
pusha
es
mov
outsb
dec
xchg
out
lcall
mov
daa
loopne
mov
jmp
or
sahf
ret
push
mov
es
add
test
pushf
subl
stos
sub
and
cwtl
in
xchg
in
adc
loope
or
adc
rorl
xchg
xchg
daa
in
out
adc
aam
subb
cmc
or
xchg
or
push
xchg
jmp
xchg
xchg
and
add
sub
cs
jl
sub
iret
inc
out
pop
jge
sarl
or
xchg
pushf
xchg
inc
sbb
push
add
in
adc
in
outsb
and
or
cmpsb
mov
shl
jp
fsubr
xchg
sbb
cltd
scas
inc
xchg
cmpsb
sub
xchg
dec
or
push
data16
lahf
sub
movsl
mov
iret
jae
or
xor
adc
dec
insb
jg
mov
jmp
jge
mov
or
and
fwait
xor
aam
subb
subb
xchg
int3
mov
mov
fcoml
pop
pop
nop
arpl
iret
adc
cmpsb
or
out
xor
lock
lock
lcall
stos
sbb
test
mov
dec
int
push
sbb
and
lcall
mov
inc
std
lahf
adc
or
psubw
and
shlb
out
or
adc
pop
lock
and
and
sub
fildl
cwtl
push
adc
lahf
fldcw
jae
and
cmp
inc
lods
sar
jb
lahf
fwait
test
adc
adc
popa
daa
mov
in
lods
sbb
mov
insb
ret
jmp
imul
mov
mov
xchg
mov
insb
fcoml
jbe
pop
inc
pop
jb
mov
inc
adc
nop
jg
dec
mull
sbb
or
cwtl
add
int3
les
adc
sub
test
mov
and
fiadds
sbb
daa
jb
xchg
or
ss
rolb
mov
xor
lds
mov
cmp
xchg
xchg
loop
lods
add
adc
rclb
nop
cwtl
mov
and
xchg
mov
mov
xchg
or
xchg
pop
mov
inc
fucom
adcb
sbb
add
mov
xchg
xchg
loopne
dec
cli
movsb
movsl
fcoml
sbb
push
push
lcall
mov
push
pop
fldcw
add
xchg
mov
fldcw
add
mov
lcall
lock
ss
adc
jecxz
rclb
andb
fsubrl
mov
pop
orl
pop
mov
xchg
jle
sub
fwait
ja
cltd
and
pusha
fsubs
push
adc
cltd
out
imulb
adc
push
xchg
mov
mov
mov
dec
imul
rcrl
cmpsb
roll
mov
mov
addb
adc
cmp
mov
out
add
xchg
in
movb
mov
mov
adc
pop
addr16
push
ret
test
dec
out
mov
or
xchg
push
xchg
mov
fdivrs
sahf
push
mulps
push
nop
clc
lcall
test
and
cwtl
adc
pop
lcall
adc
inc
popf
mov
mov
sub
pop
outsl
adcb
and
pop
cmpsl
hlt
jecxz
or
push
xchg
and
mov
xor
push
sti
cwtl
xchg
adc
cmc
pop
and
or
fwait
mov
rcrb
jbe
adc
mov
push
scas
inc
or
cmpsb
bound
lret
pop
jnp
push
lcall
jge
jno
mov
mov
scas
and
cltd
add
cs
fisubs
adc
iret
stos
push
lcall
cmpsl
xlat
xchg
aas
push
xlat
into
adc
pop
and
insl
repnz
imul
or
cli
popa
es
mov
xchg
cmp
mov
mov
mov
mov
jp
test
xor
xlat
stc
dec
into
push
movsl
and
mov
and
ret
mov
cltd
xor
adc
iret
daa
and
movsl
pop
es
das
sbb
ret
cmp
xchg
cmpsb
or
into
dec
xchg
sub
mov
fldenv
test
xchg
jge
inc
and
outsl
adc
pop
xchg
or
in
sub
cld
push
icebp
xchg
pop
sub
outsl
mov
and
xchg
gs
into
push
test
movsl
daa
lock
add
das
xchg
push
mov
or
sub
sbb
xor
xchg
mov
mov
popa
test
cmp
pop
mov
data16
sbb
iret
or
movsl
xor
and
test
stos
xchg
out
daa
xchg
xchg
or
cmpsb
jge
call
cmpl
aam
and
mov
sbb
or
adc
adc
adc
push
je
out
xchg
pop
fistps
rolb
iret
sti
adc
rcll
btc
and
pop
dec
sbb
test
mov
pop
xchg
push
xchg
adc
push
stos
movsl
cwtl
imul
and
stos
push
into
rcrl
lret
cmp
test
mov
stc
out
stos
cmc
test
daa
sar
repz
lret
cmpsl
addr16
xchg
lahf
xchg
jbe
mov
cmpsl
jno
xchg
ret
jbe
push
push
bound
pop
and
nop
jp
sub
cmp
sti
push
and
xchg
inc
xchg
sub
jae
scas
mov
movsb
fldcw
mov
add
test
dec
es
stos
sub
cwtl
imul
and
pop
cltd
and
adc
rorl
clc
test
pop
pusha
icebp
notb
dec
repnz
test
mov
in
xchg
pop
divb
xchg
pop
cmp
sbb
imul
xor
sbb
jmp
jl
xchg
fimuls
xchg
mov
sbb
in
sbb
or
test
mov
out
aad
adc
es
push
stos
sub
aaa
lock
and
jae
repnz
cmc
nop
sub
lcall
ret
das
pop
rcrl
in
out
outsl
sbb
mov
in
repnz
xchg
xchg
adc
mov
imul
adc
add
sbb
mov
nop
adc
sbb
jbe
xor
xor
sub
xchg
mov
and
scas
xchg
mov
clc
dec
ljmp
adc
xor
pop
xor
loopne
adc
mov
scas
pop
mov
and
repz
adc
mov
lcall
inc
rol
mov
xchg
fnstcw
jp
daa
xor
insl
mov
xchg
pusha
test
sub
or
loope
adc
adc
inc
mov
cwtl
pop
xchg
mov
mov
ljmp
movsb
scas
mov
iret
lea
or
movsl
in
mov
fdiv
addb
add
jae
pop
adc
repnz
or
test
and
push
icebp
xchg
pusha
xchg
cmp
jns
bound
inc
adc
stos
iret
insl
psubsb
xchg
cmc
lret
and
push
sbb
and
mov
cli
or
mov
xchg
mov
xchg
mov
xchg
pop
push
daa
out
xchg
sbb
adc
sahf
jb
push
xchg
and
and
movsl
xchg
inc
movsb
mov
pop
aas
bound
xchg
and
cmpsb
push
ljmp
daa
mov
xchg
cwtl
or
stos
push
sub
test
test
xorl
sub
xchg
inc
andb
insl
or
mov
das
xchg
out
and
or
xchg
jnp
pop
mov
push
mov
repnz
inc
enter
sbb
xchg
push
adc
cmp
cltd
jb
sub
mov
pop
stos
cmpsb
movsb
jnp
adc
adc
mov
mov
xchg
repnz
jae
nop
mov
fmuls
xchg
mov
push
cltd
movsl
in
sub
xchg
push
mov
adc
fistpll
push
xchg
adc
hlt
bound
xchg
popf
cltd
stc
jnp
sub
jl
or
sbb
lcall
test
in
push
xchg
sub
xchg
stos
in
mov
mov
sbb
das
fwait
cltd
or
xchg
push
test
cwtl
bnd
adc
mov
daa
sahf
cltd
es
sub
std
and
movhps
shll
jecxz
cmp
stos
pop
sub
adc
clc
movlps
inc
ret
ficoms
mov
jle
and
push
sub
bnd
jge
sub
sub
fmuls
outsb
dec
inc
mov
fs
nop
sbb
xchg
clc
add
mull
inc
nop
out
dec
xchg
push
pop
dec
movsl
push
lahf
and
andb
jae
sbb
mov
lcall
mov
pop
adc
sti
daa
or
daa
mov
mov
lcall
pop
pop
cmpsl
push
imul
sbb
testb
lahf
sbb
movsl
and
mov
scas
adc
movsl
inc
popf
es
cmpsb
lahf
push
jl
mov
andb
mov
mov
in
enter
mov
mov
xchg
mov
aam
xchg
mov
lcall
add
mov
sub
daa
push
setae
or
xchg
and
lods
add
inc
jge
mov
scas
and
icebp
jne
adc
mov
callw
xchg
xchg
jg
insl
mov
das
xor
xchg
jle
mov
xchg
sbb
sti
lcall
xchg
aad
imul
add
pushf
jne
sbb
fldenv
pusha
cmpl
mov
xchg
mov
nop
roll
or
push
mov
jae
sub
icebp
mov
and
rcrb
subb
push
xor
xchg
mov
sarb
clc
test
cs
add
mov
mov
scas
or
fdivrs
push
adc
aaa
xchg
ljmp
lret
js
sub
xchg
jg
cmp
or
cmp
arpl
mov
jg
fwait
bound
cmp
sub
lcall
jbe
pushf
sub
aas
shrb
jae
negl
dec
add
fsubs
xlat
and
out
lcall
jmp
add
mov
call
sub
mov
inc
call
xchg
and
xchg
loopne
or
inc
mov
das
daa
lahf
sbb
pop
cmpsl
or
int3
mov
in
out
xchg
add
sbb
or
mov
shrb
mov
push
es
push
stos
xchg
sub
sub
cwtl
mov
pushf
sub
je
notl
pop
cmpsl
outsl
mov
cwtl
lahf
sbb
adcb
xchg
or
jecxz
mov
mov
adc
and
jo
movsl
sbb
cmc
mov
mov
sbb
and
pop
stos
lahf
and
cwtl
popf
lcall
xchg
and
push
adcb
ljmp
pop
mov
test
sub
stc
in
data16
xchg
daa
ret
das
cli
cltd
lret
or
insl
jg
xor
sbb
inc
xchg
popl
repnz
or
mov
insb
dec
and
cmpsb
or
and
xchg
out
loope
xchg
lcall
sbb
movsb
xchg
sub
clc
mov
in
mov
mov
sub
test
sub
frstor
test
inc
pop
push
outsl
mov
pop
pop
or
rclb
xchg
xor
xchg
stos
daa
test
cmpsb
xchg
or
or
sbb
subb
pushf
icebp
scas
adc
cltd
daa
mov
dec
stos
loop
sbb
rclb
mov
daa
and
add
sub
sbb
lcall
lahf
lea
jg
outsl
sub
xor
mov
lcall
mov
daa
sahf
stos
mov
add
lcall
xchg
cmpsb
adc
push
jle
das
mov
and
push
cwtl
or
and
clc
or
es
jle
adc
mov
add
sbbb
cmp
sti
nop
mov
loopne
test
shrl
mov
jo
xchg
sbb
and
jg
adc
sbb
pop
add
pushf
in
xchg
pop
or
shll
rclb
movsb
mov
sub
push
into
call
or
js
or
jae
and
outsl
in
mov
testb
pop
push
sub
push
or
sub
test
push
test
lds
pop
adc
subb
mov
add
and
lcall
and
pop
mov
data16
lahf
and
stos
sbb
mov
jbe
add
mov
test
xor
mov
shrl
lods
imul
jle
mov
jecxz
sub
or
fwait
jge
xchg
xlat
mov
cwtl
lock
mov
push
sbb
mov
stos
cltd
and
cmpsb
xchg
test
leave
test
test
popf
jae
movsl
xchg
and
or
stos
mov
dec
dec
je
add
sub
jae
xchg
outsl
or
fistpl
pop
mov
nop
rorl
or
lods
adc
sub
sub
or
push
frstor
sbb
mov
shlb
and
adc
sub
pop
push
mov
jecxz
cmp
fwait
sub
xor
jb
movsl
shrb
pop
pop
cmpsb
push
mov
adc
mov
push
lods
dec
mov
dec
mov
add
loopne
push
xchg
nop
das
pop
mov
inc
scas
pusha
xchg
cwtl
xchg
and
mov
call
pop
and
leave
stos
adc
cltd
add
call
dec
es
push
and
test
adc
shlb
iret
jmp
fiadds
sbb
ds
push
mov
and
into
xchg
movsl
adc
clc
into
negl
daa
xchg
sub
mov
lods
test
sbb
out
and
lahf
mov
mov
mov
pop
frstor
std
pop
mov
push
les
pushf
out
test
incb
and
mov
loop
je
mov
pop
gs
xchg
inc
jbe
test
adc
out
daa
cltd
imull
in
xchg
or
inc
jno
xchg
sub
lcall
push
inc
cmpsl
sahf
mov
push
and
or
lret
movb
pop
cmp
xchg
and
or
adc
jae
xchg
outsl
or
fcomps
je
adc
xchg
mov
aas
mov
nop
into
into
mov
cltd
adc
xchg
loop
sbb
dec
or
mov
fldl
or
xor
nop
mov
test
cwtl
cltd
xchg
adc
daa
and
inc
std
and
roll
cmp
outsl
mov
sub
notl
cmpsl
sbb
fimull
inc
je
add
push
inc
mov
xor
xlat
nop
xorps
jl
or
adc
pusha
add
or
hlt
cld
mov
mov
out
stos
pop
nop
sbb
adc
pop
gs
fisttps
mov
icebp
icebp
sub
xchg
cltd
stos
out
or
mov
subl
nop
cltd
sbb
jae
int3
scas
mov
sub
test
cs
fsubrs
fidivrs
and
pop
xchg
sub
sub
push
dec
and
cmp
or
sbb
cld
pop
mov
sub
clc
or
pop
sahf
push
adc
and
and
push
sbb
and
adc
lahf
ss
push
mov
mov
iret
movsl
es
xchg
stos
test
or
pop
scas
lahf
insb
lret
xchg
lahf
jae
mov
push
xchg
cmpl
push
fwait
cwtl
ljmp
xchg
insb
sahf
popf
lahf
lret
jg
jg
jg
adc
sub
jne
push
xor
xchg
mov
push
xrstors
sahf
lock
jae
and
xchg
sub
xchg
add
sbb
nop
xchg
push
xchg
jg
add
ds
and
in
test
mov
movb
cmp
jae
je
jae
jbe
xor
inc
jge
repz
stos
xor
test
adc
clc
and
and
nop
stos
xor
sub
repz
call
mov
and
xchg
je
jno
xchg
mov
js
adc
lcall
test
out
or
es
adc
xchg
pushf
lcall
cltd
addb
and
sub
sbb
lods
lcall
xchg
adc
idiv
xchg
out
push
movsb
adc
pop
daa
sbb
push
in
orl
iret
dec
test
xchg
push
stos
xchg
in
aad
stos
lcall
and
cmp
xchg
xlat
mov
mov
fsubrp
pop
stos
mov
insl
pop
xchg
addr16
outsb
push
dec
insb
adc
test
test
cltd
pop
xchg
sub
nop
cmp
div
int3
daa
inc
cmc
movsl
and
rcl
outsb
lahf
push
mov
fcompl
mov
faddl
fistps
imul
sub
sub
xor
jmp
fwait
loop
adc
stos
jbe
and
adc
out
pop
and
das
dec
cwtl
mov
lcall
sahf
mov
pusha
mov
xchg
xchg
xchg
push
js
or
xor
sahf
sbb
xchg
and
and
or
iret
ja
mov
pop
xchg
push
test
iret
lcall
cmpsb
jecxz
jle
lods
xchg
fists
fwait
and
cmpsl
xchg
xchg
sahf
adc
xchg
sub
push
loop
mov
jbe,pt
mov
xor
into
cmpsb
fwait
adc
ljmp
or
imull
int3
xor
and
bound
sbb
cmpsb
adc
mov
lcall
es
dec
xchg
in
lods
repz
xchg
lcall
xchg
sbb
lahf
sbb
int
ljmp
insb
push
mov
scas
out
sub
cmc
and
pop
push
and
iret
xchg
test
js
not
stc
dec
divl
ja
das
int
xchg
and
xor
push
pop
call
adc
subl
and
movsb
in
sbb
sbb
push
sub
sbb
and
and
std
rclb
stos
xchg
sub
push
xchg
mov
add
sbb
jns
xchg
pop
push
sti
std
or
and
fimull
mov
inc
adc
setbe
cmpsl
adc
test
ds
push
data16
mov
daa
or
cmpsb
adc
mov
mov
mov
in
sbb
pop
xchg
dec
scas
adc
sub
pop
fisttpll
dec
or
sbb
jb
test
lahf
push
sub
jne
popl
sbb
scas
stos
out
xchg
lods
sub
sbb
xchg
add
shrl
push
cmpsl
pop
mov
xchg
clc
sub
or
addl
mov
xchg
mov
xchg
loopne
push
mov
xor
test
pop
in
and
cwtl
mov
out
mov
xchg
nop
mov
je,pt
jbe
sbb
mov
in
pop
lahf
popf
mov
ret
lcall
sbb
ljmp
xchg
cwtl
mov
dec
mov
loope
xchg
xchg
imul
and
cltd
ror
test
rorl
enter
fcoms
pop
orb
mov
push
scas
pusha
adc
or
mov
fs
daa
adc
pop
pusha
lcall
mov
pusha
fnstcw
sbb
fwait
sbb
xchg
mov
nop
mulb
stc
adc
push
adc
mov
testl
xchg
pusha
jns
icebp
sub
and
stos
pop
cwtl
or
pop
jle
fsub
push
adc
xchg
test
push
test
mov
mov
aam
adc
cmpsl
adc
pop
popl
inc
and
stc
pop
ljmp
rep
ret
xchg
mov
sub
jle
es
insb
fs
outsb
orb
pop
or
adc
mov
outsl
pop
lcall
insb
adc
mov
popf
push
pop
xchg
ret
push
or
sbb
xchg
mov
pop
or
xchg
lret
cmpsl
icebp
cltd
pop
mov
pop
push
pop
daa
inc
scas
push
cmpsb
xchg
movsb
mov
testl
add
dec
pop
xchg
or
mov
cli
mov
mov
mov
sbb
movsb
daa
cwtl
jmp
cmp
push
enter
jne
lcall
and
dec
cltd
and
test
lods
js
xchg
cmpsb
jo
cwtl
xchg
mov
xchg
daa
or
mov
inc
sbb
adc
sbb
push
out
dec
xchg
sub
je
push
adc
fisttpll
add
daa
cmp
mov
mov
sub
lock
scas
cmp
popa
sbb
sub
nop
cmp
mov
pop
xchg
mov
mov
movsl
jo
and
cltd
ss
test
sub
jb
daa
movsb
xor
sub
mov
xchg
aad
ret
adc
push
cltd
xchg
lcall
jle
mov
xor
jb
movsb
pop
mov
ret
adc
lahf
mov
or
sub
pop
call
mov
xorb
outsl
pop
xchg
or
jmp
xor
call
ljmp
and
fidivs
stos
sub
pop
xchg
mov
xchg
push
xchg
andl
and
ds
imul
add
cwtl
loop
mov
push
or
fwait
inc
dec
xor
sub
cltd
faddp
enter
das
clc
mov
daa
or
mov
or
xchg
lcall
cmp
xlat
leave
jno
adc
or
mov
mov
or
jae
sahf
out
and
out
movsb
fwait
cpuid
adc
xchg
es
lahf
mov
iret
imul
xchg
mov
movsl
xlat
sub
xchg
dec
hlt
and
add
test
fstps
jl
pop
jnp
xchg
ljmp
daa
cmp
xchg
xchg
fs
das
std
pop
xchg
xor
adc
mov
mov
mov
cmp
push
out
into
stos
and
ret
xchg
aas
das
aam
cmpsb
cmp
fwait
mov
jp
inc
movsb
xchg
jp
and
data16
inc
iret
cmp
adc
pop
das
mov
ljmp
loopne
or
xor
adcb
imul
rclb
and
xchg
and
sbb
jmp
mov
mov
bound
and
jno
daa
stos
cld
dec
mov
adc
and
adc
fwait
mov
les
aas
and
or
rorb
sahf
addr16
lea
xchg
pop
sub
subb
cmp
dec
fists
loop
insb
daa
push
or
sub
or
mov
cmc
adc
jp
lcall
lock
sub
mov
test
push
jbe
lcall
mov
mov
jno
sbb
xchg
notl
and
jp
mov
inc
in
popa
push
aam
adc
inc
xchg
lret
lods
and
scas
cmc
pop
push
mov
sub
xor
test
int3
int
and
test
jae
or
lock
iret
mov
pushf
mov
sub
cmc
and
bound
test
mov
gs
movsb
jbe
mov
icebp
cs
mov
ljmp
cmpsl
xchg
mov
or
in
stos
adc
mov
test
jge
movsb
or
ss
jle
add
sbb
jle
cmp
jno
sub
lcall
adc
lods
lahf
adc
lret
or
sbb
loop
mov
orl
push
adc
cmpsl
xchg
xlat
in
les
mov
jb
and
mov
nop
scas
pusha
mov
stos
fstpl
or
loope
dec
lcall
and
add
xchg
fwait
cwtl
add
pusha
mov
fnstenv
mov
stos
imul
lcall
jbe
xchg
mov
sbb
jne
sbb
mov
test
cmp
xchg
add
out
xchg
daa
movsl
mov
adcb
pop
jae
lods
mov
xchg
sbb
rcrb
cmp
aas
adc
test
mov
jae
xchg
pop
and
test
cltd
xchg
and
rol
push
jo
std
xchg
sub
int3
gs
adc
cmpsl
jl
fdivrl
and
cmpsl
xchg
adc
pushf
xchg
sub
pop
movsl
stos
mov
xor
xor
cwtl
jns
xchg
aam
cmp
addr16
fwait
ret
xchg
insb
jb
pop
sub
adc
sub
test
xchg
stos
out
cltd
jl
push
or
scas
int3
mov
imul
or
jge
lahf
cltd
mov
sub
xchg
scas
pop
or
cltd
xor
jmp
or
sub
cmpsl
out
test
sahf
mov
adc
xchg
adc
and
sub
enter
xchg
xchg
xor
jecxz
je
test
lcall
stos
test
mov
mov
repnz
sahf
sahf
mov
les
pop
push
fstpt
sub
mov
stos
fisttps
test
sbb
mov
pop
mov
xchg
push
pop
xor
inc
mov
mov
xchg
mov
mov
addl
sti
and
lret
push
jle
daa
mov
inc
in
pop
pop
sbb
sub
out
jae
lcall
xchg
pop
mov
xchg
cmpsb
sbb
mov
fwait
jge
add
sbb
cmpsl
xor
fstl
test
cwtl
or
test
repnz
xchg
sbb
in
clc
lcall
mov
sub
mov
and
nop
daa
jbe
mov
push
sbb
or
movsb
mov
rcll
outsb
std
sub
frstor
aad
popa
je
xchg
add
je
xchg
mov
pop
jae
daa
addl
dec
stos
or
in
stos
adc
rorb
insb
cld
cmp
aad
div
mov
cld
xchg
xor
push
sbb
and
cwtl
lcall
mov
sbb
and
test
dec
inc
push
cmpb
sbb
jge
sbb
mov
pop
das
push
lahf
daa
pop
fildll
mov
xchg
lcall
popl
pusha
lcall
pop
cmpsl
inc
popa
push
and
aam
pop
or
sbb
fwait
xchg
or
fldl
loop
lcall
xchg
and
test
sbb
xor
adc
nop
sti
adc
sbbb
adc
pop
xchg
mov
pop
add
pushf
xor
sarb
lret
int3
mov
daa
je
or
mov
nop
stos
call
leave
adcb
dec
movsb
pop
lcall
xchg
in
adc
or
icebp
andnps
iret
bound
xor
mov
mov
cmpsl
xchg
sub
lret
inc
fwait
inc
lret
mov
or
xor
cld
xor
stos
es
add
lahf
ret
sbb
adc
inc
test
push
imul
pop
push
in
mov
nop
pop
pusha
rorb
xchg
or
or
mov
push
cmp
cwtl
cwtl
fucomip
pop
mov
popf
dec
adc
xchg
mov
jae
or
nop
mov
xchg
xchg
daa
mov
mov
adc
insl
mov
push
mov
frstor
sub
ljmp
mov
insl
or
cltd
push
mov
or
cltd
test
divb
test
jge
xchg
mov
ljmp
rcl
call
mov
aaa
sub
setae
dec
or
inc
js
std
dec
xchg
mov
cltd
mov
mov
movsl
xor
stc
or
xchg
pop
mov
daa
fists
mov
mov
or
xchg
out
xchg
pop
cmp
mov
mov
xchg
fmull
mov
xor
jmp
fnstenv
adc
push
stc
lahf
lcall
push
sbb
pop
sub
and
pop
sub
dec
loop
sub
aas
dec
pop
dec
fisttpl
add
fwait
fs
push
stos
xor
or
rclb
fucomp
and
xchg
sub
pop
push
pop
fcompl
cltd
outsl
and
test
and
fnstcw
pop
gs
testl
out
lret
sub
jbe
xchg
lcall
or
and
or
adc
fiadds
lcall
test
mov
adc
mov
mov
in
mov
xchg
or
mov
and
add
xchg
adc
mov
js
insl
xchg
sbb
mov
mov
push
adc
push
cld
and
xor
mov
and
sub
sbb
lea
push
mov
or
je
loope
test
jae
cmpsb
scas
test
scas
ret
popl
bound
and
movsl
sbb
sbbl
xchg
and
mov
test
cwtl
loop
mov
shlb
jle
mov
and
lahf
lahf
fisubs
sbb
mov
cltd
xlat
js
ret
daa
dec
sbb
sbb
inc
xor
mov
call
lcall
or
cmp
mov
and
movsb
sub
dec
mov
xor
pop
sbb
mov
xchg
adc
sbbb
cmp
xchg
nop
xchg
mov
and
push
and
fisubrs
mov
mov
sub
inc
test
mov
jno
sbb
int3
jecxz
out
bound
in
xchg
xchg
lahf
ud2
xchg
xor
or
mov
xchg
outsb
out
sub
inc
xlat
mov
es
jle
and
sbb
imul
ret
pop
imul
sbb
test
mov
incb
xchg
push
fisubrs
push
xchg
adc
cmpsb
cmp
sbb
roll
stos
popf
es
stos
sahf
outsl
ficoms
pop
xchg
xchg
test
mov
mov
mov
and
sub
jg
add
roll
cmpsl
xchg
cwtl
adcb
and
pop
test
mov
sbb
call
lock
jle
xor
mov
sub
or
pop
and
mov
pusha
sub
leave
sbb
and
inc
adc
sbb
andl
xchg
mov
lcall
mov
sub
sub
and
je
sub
sbb
mov
mov
and
cmpsl
adc
mov
imul
pusha
insl
mov
imul
pop
sbbb
dec
jno
stos
xchg
or
aad
repz
repnz
sbb
xchg
fsubl
fwait
subl
mov
adc
repnz
or
and
fnstenv
stos
jbe
xor
jg
push
mov
mov
or
mov
and
xchg
adcb
adc
push
vpshlq
jmp
dec
insb
out
xchg
push
sub
and
fwait
or
pop
cs
mov
cmpsb
sbbb
jo
or
xchg
jle
cwtl
movsl
sub
adc
jno
and
and
adc
sti
adc
mov
sahf
xor
movsl
jp
or
lcall
mov
rorl
pusha
sahf
push
sub
or
mov
mov
push
je
call
ds
mov
enter
shlb
xlat
fprem
pop
std
test
or
mov
sub
dec
arpl
hlt
cwtl
adc
iret
pop
xchg
mov
pop
lahf
mov
lfs
mov
movsl
jno,pt
imul
xor
pop
xor
xchg
and
aas
repnz
mov
out
sub
pop
mov
push
das
sbb
jg
xchg
or
jbe
lahf
and
stos
scas
es
or
sub
sub
xchg
lret
mov
cltd
lret
stos
sti
mov
jecxz
mov
pop
cmpsb
mov
sub
dec
cli
and
xchg
sub
xchg
mov
mov
daa
out
or
mov
jne
pop
cmpsb
cmpsl
rcrb
jmp
pop
and
fwait
movl
xor
sub
test
outsl
push
setbe
sahf
pushf
lcall
sub
cmp
and
and
adc
es
je
pop
jae
jae
jo
and
insl
xor
scas
pop
mov
cmpsb
cltd
test
mov
cmp
or
adc
test
in
mov
orl
fsubp
bt
inc
testl
adc
dec
iret
xchg
jl
out
sub
into
in
sbb
xor
mov
cmc
inc
test
xchg
dec
jp
jp
in
lods
jns
or
sub
lret
xor
xchg
cmpsb
stos
stos
mov
scas
inc
mov
sub
mov
xlat
or
mov
test
and
out
push
push
jp
mov
cmp
stos
mov
sub
sub
nop
out
mov
xchg
xchg
pop
int3
subb
sub
dec
addl
cmpsl
fwait
test
xchg
mov
sbb
mov
sub
sbbb
jae
movsb
cmpsl
sub
lds
inc
stc
or
xor
xor
rcrl
aaa
xorl
fimull
mov
or
and
sahf
fistl
adc
cwtl
scas
adc
fs
mov
ds
testl
or
xchg
lods
notw
pop
mov
jno
lret
nop
xchg
movsl
and
cli
xchg
jno
or
outsb
idivb
mov
adc
cmpsl
and
dec
and
cmp
sub
out
mov
call
push
mov
imul
add
movsl
test
xchg
adc
mov
xchg
outsl
dec
movsl
pop
mov
movsl
inc
cmpsl
sub
sub
add
pop
xor
xchg
cmc
dec
xchg
int3
mov
xchg
jne
pop
test
pushf
lahf
fistpll
adc
and
shrl
outsl
test
xchg
mov
mov
gs
mov
fwait
xchg
bound
mov
lahf
cmpsl
sub
pop
or
mov
and
lea
or
jge
lods
jge
pop
lahf
inc
lcall
lret
and
mov
pop
ds
jmp
mov
stos
test
add
xchg
mov
sbb
mov
pop
push
push
fwait
jecxz
pop
lahf
add
rorb
andb
out
fwait
mov
xchg
lcall
push
mov
mov
xchg
xchg
stos
lods
lock
sbb
dec
jae
sub
pop
adc
add
mov
mov
and
sbbb
roll
sub
dec
clc
xor
push
fwait
stos
mov
imul
adc
sub
pop
xchg
and
xchg
ror
nop
and
int
or
js
divl
lock
shrd
fmuls
xchg
sub
xchg
je
out
call
mov
ja
xor
mov
lock
and
test
mov
stos
xchg
movsb
mov
adc
lret
mov
adc
aad
mov
or
jne
adc
out
jne
es
adc
mov
pushl
std
orb
mov
sub
fadds
test
xchg
enter
roll
jnp
pop
push
sbbl
xor
outsl
sub
incb
or
data16
in
xchg
cmp
jno
sub
mov
cmpsb
ja
sub
mov
subl
add
push
xor
mov
clc
movsl
push
notl
xchg
jo
or
cltd
xchg
add
xchg
xchg
add
xorb
movsl
sbb
mov
inc
adc
xchg
sbb
insb
jge
mov
mov
xchg
sub
sub
xchg
push
sub
xchg
xchg
andb
mov
or
and
adc
push
sbb
lds
pop
pusha
es
repz
test
or
or
sbb
cmpsl
cmp
rcl
push
test
shrb
aas
mov
pop
mov
add
ficoms
push
xchg
lret
adc
lret
cli
xchg
lahf
sub
mov
lret
imul
mov
in
sbb
imul
mov
daa
ret
cmp
data16
or
push
xchg
test
sahf
imul
push
and
or
stos
adc
jae
push
xor
push
pushf
mov
cld
jp
pop
xchg
out
mov
xchg
mov
movb
xchg
subb
inc
dec
iret
addr16
shlb
jge
cmpsb
adc
cld
and
nop
inc
hlt
xchg
sahf
cmpsb
andb
xor
push
push
popa
ret
call
sbb
nop
ss
mov
dec
jae
or
sub
repz
mov
sbb
nop
lcall
inc
add
pop
xchg
fdivl
jle
sub
pop
mov
adc
out
lock
xchg
adc
test
sbb
xchg
shlb
ss
fstpl
sti
stos
xchg
xor
das
inc
push
sbb
or
loope
cmc
rcrb
jge
adc
adc
sbb
xor
add
xchg
movsl
pop
popf
scas
mov
mov
out
push
sub
cwtl
or
mov
dec
adc
pop
add
and
jnp
xchg
movsl
jp
adc
clc
leave
lahf
jae
nop
test
repz
cmpl
and
lret
fnstenv
adc
or
es
pop
sub
xchg
push
and
xchg
cmpsb
add
idivl
pop
pop
xchg
orb
mov
or
addr16
jle
aas
fndisi(8087
xor
sub
mov
mov
stc
add
push
inc
scas
mov
adc
jb
xchg
and
fwait
sbb
jnp
jns
xor
mov
xchg
adc
sub
call
js
jno
pop
xchg
jle
frstor
ret
js
cmp
dec
je
hlt
rcrb
sahf
jge
adc
mov
stos
and
adc
adc
and
jl
push
xchg
push
add
shlb
cmc
imul
sbb
mov
xchg
lods
cmc
cltd
sub
insl
fucom
mov
xor
or
fstpl
mov
mov
pop
add
cs
xor
nop
and
mov
and
or
hlt
xchg
xchg
movb
xchg
cmp
mov
fsubl
les
cwtl
cmpsl
jae
xchg
lock
xchg
dec
scas
in
stos
sbb
outsb
shlb
and
xchg
and
pop
sub
dec
jle
dec
and
movsb
add
xor
xchg
mov
daa
jbe
adc
std
std
push
pop
cmpsb
xor
inc
ss
add
scas
das
mov
repz
out
xchg
xchg
xchg
xchg
test
mov
mov
adc
mov
stos
loop
pop
and
lret
xchg
popa
mov
jp
or
pop
mov
mov
mov
xchg
lcall
das
adcl
xchg
add
stc
sub
and
mov
xchg
jb
aas
push
xchg
sahf
lret
pop
push
mov
push
sahf
mov
sbb
xchg
xchg
pop
fcmovnu
mov
pusha
push
imul
dec
aam
pop
xchg
mov
xchg
popa
sub
xor
out
add
adc
add
sbb
rcrb
cwtl
mov
lods
movzbl
add
test
mulb
dec
xchg
mov
out
sbbb
dec
daa
push
mov
insb
mov
sbb
and
mov
pop
movsb
shrb
cltd
cwtl
pop
leave
lock
mov
insl
pop
mov
call
stc
fwait
sbb
movsb
mov
mov
or
lock
dec
add
lods
daa
movsb
std
adc
xchg
andb
xor
leave
mov
add
xchg
cmovle
push
sbb
fimull
mov
jle
push
and
shrb
cmp
ret
subl
mov
cmp
adc
mov
lock
outsl
xchg
sbb
sahf
and
push
cmc
repz
push
scas
and
cmpsb
mov
sub
popl
es
push
test
pop
push
xchg
sub
mov
mov
test
cmp
es
xor
test
loop
pop
jae
jg
push
dec
lret
pushf
add
push
mov
mov
adc
mov
xchg
and
jne
adc
pop
loope
mov
bound
fmuls
imul
mov
or
mov
mov
xlat
push
mov
push
out
mov
mov
addb
xor
mov
dec
cwtl
jg
mov
xchg
iret
cmpsl
pop
pop
lcall
roll
sbb
lds
xchg
stos
jl
adc
sbb
jo
xchg
lock
add
inc
mov
xchg
jae
stos
roll
or
mov
adc
repnz
or
sub
xor
mov
mov
mov
mov
mov
adc
mov
cmp
fsubl
stos
call
outsb
xchg
fistpl
sbb
jo
mov
adc
iret
jns
pusha
notb
jle
adc
mov
movsb
mov
inc
mov
mov
xchg
sub
push
or
or
popf
or
mov
inc
cmpb
aas
pop
bound
push
mov
ficompl
out
xchg
and
or
out
js
xchg
mov
xchg
pop
mov
adc
add
je
test
xchg
mov
sub
mov
add
fs
jg
mov
divb
fidivl
mov
and
adc
sahf
sbbb
or
and
mov
mov
adc
pushf
and
sbb
xchg
mov
jnp
pop
jl
fisttpl
mov
out
adc
and
pop
movsb
mov
icebp
stos
xchg
adc
dec
xor
xchg
adc
pushf
es
mov
daa
pop
push
xchg
clc
adc
pop
imul
jb
adc
leave
inc
mov
add
dec
xor
mov
cltd
push
pop
mov
mov
and
ret
or
cwtl
js
pop
adc
daa
and
test
out
nop
add
and
xchg
xor
jbe
adc
daa
stos
cmp
out
lahf
or
adc
scas
sub
rcl
and
dec
pop
push
sub
pop
je
mov
popl
xchg
pushf
xchg
idiv
push
mov
sbb
cmpsl
stos
mov
and
lcall
stos
shl
scas
ss
sub
stos
lret
sbb
movsb
pop
stos
dec
lret
jmp
lock
and
lock
sub
push
xchg
gs
jecxz
seto
jbe
dec
incl
fwait
addr16
mov
jg
hlt
adc
push
mov
push
shrb
or
sub
in
test
add
or
or
ds
xor
lcall
test
fdivrl
out
xchg
lcall
pop
cmp
xlat
adc
inc
dec
push
adc
sbb
pop
daa
sub
adc
cltd
cmp
iret
adc
or
cmp
adc
aam
mov
and
xchg
adcl
xchg
mov
or
lds
jbe
pop
xchg
xchg
push
dec
stc
mov
ret
fcompl
adc
sub
xor
pop
mov
psraw
and
loopne
adcl
scas
mov
daa
pusha
rcrl
das
mov
dec
subb
stos
adc
call
inc
xlat
mov
pop
in
les
adc
and
stos
sub
jae
cmpsl
xor
sub
jb
test
push
xchg
mov
dec
jnp
mov
cmpsb
call
mov
sub
loopne
cmp
or
xchg
mov
cwtl
and
push
outsl
bound
movsl
sbb
sub
in
cli
xchg
cmp
cmc
and
adc
xchg
xchg
ficompl
mov
or
or
cmp
xchg
mov
adc
add
fiaddl
and
sub
pop
jne
xchg
xchg
push
jo
test
test
jecxz
mov
sbb
das
fisubl
mov
movb
out
xor
mov
mov
mov
jbe
jne
pop
and
movsb
mov
mov
sbb
int3
sbb
lcall
cmp
xchg
pop
test
movsl
add
scas
rcrb
dec
adc
xchg
or
jmp
mov
cmc
dec
fwait
push
stos
push
je
jge
mov
xchg
xor
sbb
sbb
add
xchg
sbb
cmpsb
in
or
sub
clc
or
mov
xchg
adc
cmp
xchg
test
mov
imul
xchg
adc
or
mov
cmpl
dec
mov
stos
mov
movsl
sbb
sub
daa
xor
jl
adc
xchg
bound
and
adc
ss
popa
xchg
es
mov
ret
or
mov
add
mov
ficomps
stos
mov
aas
aas
mov
sahf
adc
gs
lcall
std
xchg
js
das
sahf
and
or
sub
pop
rcrb
test
cmp
mulb
adc
lret
je
daa
pop
or
rcrb
sub
mov
cmpb
and
int3
or
xor
fsub
lret
inc
xchg
cmpsb
mov
or
and
cmp
mov
loop
js
adc
test
cltd
mov
xchg
jae
mov
push
xor
sbb
es
jne
ret
inc
sub
popl
mov
insl
outsb
shlb
inc
mov
test
add
jae
mov
add
mov
and
sbb
cmp
andl
sub
adc
and
in
mov
jae
and
mov
cwtl
sbbb
jge
pop
push
push
xchg
xchg
fisubs
and
add
cmpsb
sarl
push
out
and
sbb
ljmp
sbb
xchg
decb
stc
or
cmpsl
xchg
cli
xchg
xchg
jecxz
ret
push
add
xchg
pushf
movl
mov
rcl
lods
or
nop
test
test
xchg
movsl
fsubrp
and
xor
stos
sbb
sbb
and
test
jb
test
ss
sbb
mov
and
lods
test
jmp
adc
and
add
roll
ja
inc
mov
mov
and
jae
mov
add
push
leave
ret
sbb
inc
mov
add
scas
mov
sub
lret
jge
xchg
lcall
xchg
dec
lret
push
xchg
in
mov
lds
xchg
push
sub
adc
fisttpll
inc
or
pop
push
and
and
adc
cwtl
cmpsb
es
fcomps
cmp
test
and
int
adc
imull
or
out
in
and
xchg
fidivl
xchg
stos
leave
nop
sarb
sbb
mov
and
arpl
icebp
adc
movsb
sbb
outsb
and
push
xchg
push
stc
pop
movsb
and
add
pop
adc
mov
stos
fmull
xchg
mov
xchg
push
mov
fwait
pop
out
lods
stos
sbb
pop
mov
xorl
out
adc
push
test
cmp
or
jge
xor
sub
push
mov
nop
adc
pop
push
lcall
fldenv
rolb
int3
je
cmpsl
adc
test
jge
rorl
insl
mov
data16
dec
mov
or
pop
xor
jae
je
jae
jae
lcall
stos
mov
mov
push
loope
cmpsl
test
not
cmp
pushf
test
push
xchg
jno
adc
pusha
imul
and
pop
movsb
cltd
lret
and
or
cld
lahf
mov
fwait
mov
aas
sub
fidivrs
call
es
sub
mov
mov
sbb
mov
cmpsb
mov
cs
xchg
or
sub
and
mov
adc
sub
repnz
sbb
lea
cmpsl
push
ret
mov
outsl
fwait
xchg
push
adc
stos
cltd
into
fsubs
cwtl
jb
bts
clc
fs
xchg
and
imul
sub
cmp
jp
sub
daa
xchg
pop
enter
cmpsb
scas
cmc
mov
xchg
xor
and
or
pop
adc
cltd
aas
test
jmp
add
mov
mov
in
cltd
jmp
pop
mov
fwait
iret
lock
pop
adc
dec
cmc
and
daa
orb
je
xchg
cmpsl
insl
lock
fs
hlt
mov
mov
lock
xchg
sub
fcoml
mov
cld
cwtl
in
push
inc
jp
scas
into
movsl
test
mov
andl
xor
dec
and
iret
das
xchg
fcomps
or
push
int3
ret
fists
lret
xchg
xchg
insl
or
and
xchg
inc
sti
and
or
fwait
test
daa
xchg
xchg
xchg
out
xchg
stos
clc
fwait
inc
jge
push
xchg
inc
inc
ficomps
clc
stos
scas
pop
and
in
xchg
adc
xchg
cwtl
pushf
xlat
adc
inc
or
pop
mov
sbb
mov
sbbb
ror
fsubl
pop
mov
in
and
stos
xchg
mov
mov
adc
pop
inc
enter
mov
and
pop
divb
lcall
lret
or
and
mov
jecxz
std
push
stos
frstor
je
xchg
negl
stos
mov
xchg
push
cs
lret
sbb
mov
xchg
jb
sub
add
push
sar
test
mov
je
sub
cwtl
test
jno
adc
subb
cwtl
loope
jbe
stos
jle
flds
and
xchg
clc
pop
stos
cs
in
jg
mov
sub
jle
lock
pop
adc
test
pop
xchg
sbb
lcall
sub
sub
push
or
dec
xchg
sbb
cmpsb
xchg
sub
push
data16
imul
mull
cld
das
xchg
pop
icebp
fildll
movsl
fisubl
pop
xor
adc
xchg
setnp
insl
jg
out
nop
xchg
adc
mov
es
ret
iret
mov
mov
nop
sub
mov
enter
jp
mov
fistps
jle
xchg
sub
jno
xchg
xchg
data16
hlt
push
cmpsb
or
and
dec
rol
or
popf
js
or
xchg
adc
xchg
sti
and
adc
sbb
shrl
xchg
sbb
loopne
stos
xchg
shlb
and
cltd
push
dec
dec
mov
into
mov
mov
movsb
into
scas
xchg
lods
or
and
push
xchg
pop
xchg
jo
daa
sbb
jge
sbb
mov
stos
mov
and
lahf
scas
rcll
push
mov
int
xchg
inc
js
clc
lea
add
rclb
mov
and
and
adc
jns
sub
or
pusha
inc
inc
and
rcrb
or
out
outsl
mov
and
stos
into
mov
mov
test
xchg
pop
jmp
xchg
xchg
mov
sub
and
fsubl
add
repz
jnp
fidivl
mov
nop
mov
pop
push
mov
push
iret
inc
and
imul
add
mov
test
cmc
loopne
sbb
call
pop
xchg
ljmp
push
inc
push
ficompl
data16
icebp
jno
push
lahf
ret
hlt
dec
xchg
repnz
sbb
push
ljmp
cwtl
icebp
sub
jmp
cmpsb
sbb
out
mov
ljmp
in
repz
adc
or
pop
xchg
jno
adc
pop
scas
xor
cmpsl
es
mov
push
cwtl
cmp
cmpsl
or
or
inc
daa
mov
xchg
rolb
xor
jae
outsb
xor
je
test
out
xchg
cmpsl
add
sub
insl
jmp
push
mov
das
adc
adc
sub
sbb
sub
xchg
adc
dec
lea
sbb
scas
les
xor
adc
xor
or
or
and
xchg
daa
daa
data16
lods
or
fwait
and
test
shrb
lods
mov
pop
adc
inc
stos
movsl
jno
sub
and
lds
pop
ret
push
jecxz
add
cmc
add
xlat
out
xor
cmpsl
mov
mov
sbb
fsts
sub
vprotq
mov
inc
call
push
adc
adc
pop
dec
fimull
dec
lahf
adc
and
xchg
rorb
add
inc
mov
adc
lcall
sbb
xor
movsl
dec
std
test
adc
imul
ret
das
adc
sar
repz
mov
fcmovnu
ficomps
pushf
movups
fwait
mov
movb
popa
xor
sub
adc
cmc
test
scas
add
test
jle
mov
fdivs
daa
pop
push
aas
adc
xlat
xchg
adc
push
ror
xchg
cmp
mov
jmp
push
add
adc
add
stc
enter
xor
or
xchg
shll
movsl
mov
mov
mov
nop
mov
test
sbb
cltd
inc
mov
xchg
imul
mov
jae
and
popf
xchg
mov
sub
xchg
or
pop
sbb
cmp
lahf
pop
lahf
cld
and
mov
nop
mov
js
jge
out
outsb
sahf
sub
add
pop
ret
pop
jecxz
add
loop
test
xchg
inc
jb
fwait
or
jp
in
add
sbb
mov
fwait
push
or
cmpsb
or
jp
adc
std
test
xchg
mov
lret
ss
stos
pop
jb
and
pop
scas
loope
mov
fists
push
pop
xor
negb
adc
cmpsl
mov
mov
xor
or
push
fistpl
adc
std
test
xorl
and
lods
adc
xchg
mov
movsl
lahf
cmpsl
xchg
jecxz
rorb
test
mov
sub
popf
fwait
aas
and
lahf
icebp
lcall
stos
mov
xlat
stos
test
fildl
dec
cwtl
lcall
pop
imul
cmp
loope
or
adc
push
mov
adc
and
add
stc
or
jmp
cmpsl
popa
mul
outsl
fisttps
pusha
hlt
inc
movsb
ss
andl
mov
adc
imul
popf
test
adc
lcall
int
pop
or
lock
mov
jecxz
adc
mov
nop
adc
or
adc
sub
jae
sbb
jo
ds
xlat
and
and
pop
pop
fld
lcall
xchg
pop
xchg
notb
or
enter
mov
movsb
aas
test
pop
xchg
mov
repnz
pop
test
outsb
xor
jae
adc
mov
and
leave
cltd
into
and
pop
dec
jbe
sbb
dec
mov
pusha
mov
mov
adc
jne
sub
mov
xor
adc
pop
popa
lock
or
test
push
stc
movsl
mov
ljmp
or
xchg
iret
aam
inc
test
mov
lahf
xchg
mov
pop
int
cli
mov
sub
movsl
loope
lock
and
sbb
ljmp
adc
sbb
pop
xchg
sub
sbb
pop
and
sbb
cmpsl
stc
and
in
cmp
and
pop
std
fs
adc
xchg
mov
xchg
sub
push
fsin
jp
out
lret
or
jo
test
push
xchg
dec
pop
dec
or
test
in
push
sbb
xchg
and
xor
inc
popa
pop
or
mov
pop
inc
out
mov
je
mov
in
add
or
sub
out
xchg
sbb
xchg
icebp
stos
mov
scas
ljmp
sub
fbld
xchg
cmp
adcl
pop
das
stc
mov
xchg
in
arpl
in
xchg
movsl
mov
jle
sbb
cltd
int3
or
and
clc
pop
fcoms
test
daa
ja
or
repz
push
push
sub
mov
popf
jb
add
in
outsl
xchg
mov
xchg
pop
mov
jmp
icebp
test
xchg
cmpsl
sbb
mov
jne
sbb
and
xchg
jbe
adc
xchg
mov
and
imull
ss
xor
outsl
lds
jno
cmpsb
lcall
fimuls
mov
nop
pop
push
sub
or
das
daa
sub
mov
mov
and
and
adc
outsl
pop
sbb
sbb
and
iret
pop
xor
dec
lcall
lea
jno
xchg
cmpsl
out
mov
push
mov
scas
xor
stos
ret
lahf
cld
mov
test
subl
and
and
xor
sbb
mov
xor
rclb
push
jmp
fwait
sub
xchg
and
xor
idivb
pushf
repz
sub
lock
movsb
mov
or
push
cmpsl
add
pop
cs
arpl
and
dec
es
xchg
jecxz
mov
mov
loop
pop
daa
andb
notl
push
pop
xchg
push
push
jbe
mov
addr16
popa
xchg
in
fwait
jecxz
mov
adc
and
and
repnz
pop
xchg
psubw
sbb
mov
stos
test
adc
ret
jo
int3
imul
sub
stos
xchg
cmc
adcb
cmpsl
or
sahf
sbb
out
cmpsl
imul
inc
fsub
mov
sub
mov
iret
jb
pop
pop
dec
and
or
in
cs
stos
adc
and
repz
lea
stc
scas
jnp
out
fwait
xchg
mov
xor
mov
adc
lods
lret
mov
movsl
dec
aad
decl
inc
outsb
rcl
aad
sub
xchg
push
lcall
xchg
cwtl
cltd
adc
mov
adc
out
test
lret
xor
add
mov
sti
add
mov
mov
or
int3
repz
xchg
fistps
test
add
inc
cs
js
fdivs
lret
mov
lcall
shl
shrb
rclb
sbb
jnp
xor
push
mov
sbb
mov
xor
mov
out
xlat
xor
and
je
pop
adc
sbb
test
jge
daa
inc
mov
jmp
dec
lcall
orl
movsl
and
test
add
outsl
mov
movsb
jae
lahf
je
out
std
pop
test
lods
add
fs
add
sbb
inc
pop
test
mov
sub
in
adc
cmp
ljmp
pop
movsl
jmp
orb
insl
fcompl
cmp
std
rcrb
xchg
daa
fidivrl
sbbl
mov
xchg
fnstenv
jle
xchg
pop
ja
mov
cs
dec
lods
test
jmp
mov
mov
ror
mov
cld
adc
cmc
cld
shlb
and
lea
sub
inc
push
xchg
stos
int
ret
mov
adc
xor
add
and
dec
nop
sub
cmp
and
fisttpl
movsl
sub
or
mov
dec
lcall
pop
jb
adc
or
addb
nop
cltd
sub
mov
outsb
lock
or
and
fmuls
pushl
xchg
stos
adc
and
pop
bound
mov
mov
push
stc
mov
daa
popw
hlt
and
mov
mov
js
jae
nop
pop
inc
notb
cvtps2pd
lcall
stos
mov
in
cmc
xchg
stos
and
test
mov
or
mov
test
in
gs
xchg
jmp
fmuls
and
call
pop
and
adc
mov
call
xchg
scas
and
xor
and
mull
sbb
jo
lcall
xchg
mov
xchg
std
xchg
imul
or
mov
add
inc
in
cmovle
divl
adc
into
test
mov
fstl
dec
aaa
adc
xchg
mov
mov
test
outsl
pusha
sub
xchg
jle
test
lds
add
jp
lcall
stc
in
out
in
xchg
adc
daa
out
and
jo
and
adc
mov
pop
ljmp
cmpsb
xchg
xchg
adc
enter
int3
mov
out
or
into
shlb
xchg
stc
test
mov
xchg
inc
pop
ljmp
and
movsl
mov
add
scas
outsb
xor
xchg
pop
int3
test
stos
sbb
lahf
sbb
nop
xchg
mov
mov
mov
cmp
pop
cltd
or
insl
xor
sub
xchg
sahf
test
std
mov
or
jecxz
and
sub
or
xchg
mov
add
adc
xchg
or
xchg
loope
cmc
push
and
and
adc
adc
pop
pop
pop
inc
insb
popa
mov
jmp
jb
pop
mov
xchg
mov
mov
jbe
pop
int3
lea
daa
and
vxorps
and
cs
adc
xchg
add
sub
mov
stos
stos
movsl
clc
and
inc
adc
es
fwait
xchg
sub
lcall
adc
sbb
and
and
fnstsw
mov
sbb
mov
bound
in
das
bound
sub
jle
push
xchg
std
jne
or
xchg
or
dec
jp
js
jecxz
mov
mov
test
mov
and
push
fcomps
test
or
push
ror
test
cmp
inc
push
lahf
into
cmp
sub
daa
xchg
mov
daa
mov
imul
xchg
xor
and
jg
mov
xor
mov
adc
adc
pop
lea
or
dec
arpl
xchg
std
push
xchg
and
stc
and
pop
and
xor
stos
adc
xchg
rolb
les
fimuls
or
jmp
mov
pop
jae
lock
sbb
xchg
xchg
jae,pn
adc
jns
mul
aas
lcall
sub
and
sbb
inc
cmpsl
and
lahf
mov
cld
ficomps
xchg
xchg
mov
adc
es
jp
cwtl
sub
out
lea
icebp
pop
and
mov
aas
adc
sbb
adc
inc
dec
inc
pop
or
cwtl
sub
nop
mov
in
aam
or
lcall
fidivrs
imul
mov
inc
sbb
fwait
or
fimull
ret
and
adc
xchg
in
pushfw
movsb
add
xor
xlat
xlat
jge
push
or
out
mov
xchg
test
je
nop
adc
and
or
push
mov
and
or
cmc
cmp
dec
les
out
out
or
and
cltd
fcoml
adc
stc
pop
out
fstpl
mov
scas
lods
adc
or
cltd
cwtl
adc
pmaddwd
and
mov
outsb
fnstenv
outsb
jbe
leave
jo
test
and
xchg
es
inc
cmpsl
xchg
and
lret
adc
xor
imul
js,pn
jle
sub
sbb
adc
or
loopne
mov
xchg
sub
jecxz
adc
adc
stos
mov
nop
push
fwait
add
xchg
cmp
xor
test
aas
sub
mov
or
cmpsb
mov
test
loopne
std
adc
or
pop
mov
add
fwait
xchg
pop
mov
mov
and
cmp
mov
xchg
push
je,pt
sbb
pushf
ss
adc
in
xchg
dec
xchg
dec
xchg
movsl
jp
jle
push
and
jae
jno
or
xchg
stos
cmc
fcoml
xchg
loop
add
jge
sbb
fwait
lods
test
sbb
xchg
andb
mov
push
mov
pop
sub
mov
mov
adc
dec
xchg
mulb
jmp
adc
or
and
je
pop
pop
inc
xchg
and
pop
movsl
lock
cwtl
pop
scas
lret
push
lcall
lcall
lcall
mov
inc
sub
mov
fwait
or
inc
lods
sbbb
jge
cmpsb
or
decb
xchg
js
xchg
jmp
dec
add
mov
xor
lahf
das
push
test
and
rsqrtps
jecxz
push
pop
jnp
and
xchg
adc
stos
sbb
insb
xchg
movsb
scas
push
movsl
dec
push
mov
pop
push
adc
fadd
cwtl
xchg
add
xchg
mov
and
div
push
xchg
xchg
sub
lock
adc
mov
call
lret
and
sahf
mov
push
stos
sbb
sub
sub
sub
or
popa
ret
xchg
cmpsl
stos
push
pop
out
mov
ljmp
adc
dec
inc
push
mov
mov
cmpsl
test
xchg
xchg
xor
and
mov
sub
or
pop
xchg
cltd
icebp
xchg
neg
out
je
nop
stos
pop
jmp
ret
mov
jb
add
scas
and
add
cld
lahf
xchg
cwtl
pop
mov
and
sbb
or
aam
xchg
mov
movsl
adc
push
test
mov
or
mov
and
mov
cmp
sub
adc
xchg
nop
add
shufps
push
and
and
sbb
nop
pushf
xchg
xor
xchg
daa
pusha
aam
fwait
std
lcall
push
and
pop
movsl
loop
lcall
fs
adc
cmc
dec
setg
cmpsb
sahf
xchg
sbb
sub
xchg
add
fs
xchg
scas
mov
fsts
lcall
clc
fwait
stos
lcall
mov
cmpsl
xor
and
or
xchg
test
mov
dec
and
das
fsts
xchg
adc
hlt
jo
xchg
mov
dec
jb
sbb
xor
adc
pop
xchg
cmpsb
pop
movsb
jno
scas
mov
fidivrs
mov
push
xchg
jmp
cmpsb
dec
jmp
push
aas
ds
cmp
inc
mov
adc
nop
sbb
jmp
adc
cmp
and
sub
out
jge
nop
daa
sbb
mulb
lret
shll
xchg
out
pop
movsl
cmpsl
mov
xchg
or
in
je
sub
cwtl
pop
xchg
xchg
loope
inc
sub
xlat
sbb
and
pushf
cmp
xchg
stc
clc
jb
daa
and
sarl
out
movsl
adc
push
sahf
and
pop
lret
nop
mov
dec
into
push
or
scas
pop
stos
das
lea
data16
dec
pmaxub
adc
pushf
lahf
inc
std
stos
or
xchg
sub
vmread
xchg
jae
stos
mov
cmpsl
or
andb
dec
push
mov
inc
cwtl
stos
sub
in
and
je
sbb
lahf
and
mov
mov
pop
add
inc
sar
xor
je
adc
mov
sub
lods
test
cwtl
addr16
je
mov
sub
das
dec
mov
pop
xchg
adc
repz
fimuls
sub
dec
and
fisttps
mov
adc
stos
rclb
inc
jbe
sbb
push
test
imul
daa
setge
push
test
xchg
std
xchg
adc
add
call
mov
test
mov
cmpsl
adc
xchg
sbb
jecxz
outsb
test
mov
and
js
js
jmp
lcall
mov
xchg
dec
pop
dec
sahf
jbe
lret
lds
es
dec
in
push
fs
and
mov
mov
adc
aaa
or
mov
add
adc
sub
outsb
lock
cwtl
push
push
adc
loop
and
pushf
bound
add
mov
xchg
lcall
cld
push
push
xchg
lahf
aad
and
sbb
nop
pop
cltd
push
jg
adc
daa
sub
adc
pop
xchg
mov
and
daa
iret
pop
test
xchg
sub
cli
jbe
rorb
mov
es
lahf
loopne
daa
mov
cmpsb
rcrb
and
xor
test
dec
lret
mov
jo
nop
xchg
in
cmpsl
das
das
sbb
xchg
fs
cmpsl
mov
push
fcmovne
push
inc
lcall
or
xchg
rcr
mov
cmovle
add
clc
loop
dec
out
jmp
addr16
or
mov
sti
test
sub
adc
pop
mov
cli
and
cltd
and
cmp
insb
jae
mov
popf
imul
js
jbe
xchg
sub
mov
into
adc
jb
sbb
pop
or
dec
add
scas
mov
lods
or
movsl
fldl
mov
xchg
adc
pop
ljmp
daa
sbb
add
sub
lea
cmp
mov
cmp
cmp
out
cli
sbb
insl
sub
lahf
js
jb
and
sbb
pop
xchg
push
pop
push
lock
shll
movaps
pop
jo
xchg
mov
out
xchg
xchg
icebp
out
cmpsb
sbb
and
xchg
xchg
test
mov
push
mov
cltd
out
sti
cmpsb
stos
adc
adc
or
dec
mov
sahf
add
and
xchg
out
cwtl
or
test
push
js
into
inc
xchg
adc
and
xchg
jmp
test
or
xchg
test
clc
es
cltd
loopne
stos
iret
movsl
xchg
xorps
adc
mov
aas
hlt
sbb
rclb
adc
and
popf
pop
lret
dec
xchg
dec
sbb
and
pop
mov
fisubrl
sub
add
insl
movsl
inc
je
adc
or
test
out
and
sub
mov
push
int
test
daa
adc
mov
movsb
mov
mov
cmpsb
out
xchg
xchg
sub
and
movsl
xchg
cmpsl
ljmp
dec
jb
mov
cwtl
jg
pop
adc
xchg
sub
xchg
fnstsw
nop
lcall
cmpsl
sub
mov
loop
scas
mov
nop
jp
adc
int
imull
adc
mov
dec
loop
dec
lcall
push
fcomps
mov
js
stc
repz
cwtl
and
jno
and
jbe
lods
xchg
hlt
jbe
xchg
adc
sbb
and
xchg
lcall
sub
xor
pop
ss
in
lods
std
mov
or
into
fisttps
adc
or
jo
mov
cmpsb
cmp
adcb
jbe
stos
out
es
adc
lea
add
lods
clc
inc
test
adc
mov
mul
shll
and
call
and
add
mov
or
mov
movd
insb
orl
test
adc
adc
lea
adc
push
lret
js
fsubp
xchg
xchg
insb
daa
mulb
push
mov
je
and
sbb
lcall
cmp
cwtl
sbb
lahf
push
pop
repz
and
jecxz
cmpsb
fs
mov
loop
and
mov
test
stos
mov
arpl
ret
adc
and
adc
mov
in
hlt
mov
mov
lds
or
cmpb
es
push
or
and
popa
mov
add
mov
pushf
mov
jbe
pop
lock
xchg
mov
frstor
pop
shll
or
xchg
rcll
popa
lahf
add
mov
jecxz
sbb
test
ja
xchg
std
fwait
xchg
push
orb
hlt
aam
daa
xchg
or
mov
add
push
inc
addr16
or
and
rcll
movsb
pop
jb
arpl
mov
scas
mov
cwtl
push
xchg
xchg
into
jge
pop
js
xchg
daa
jge
data16
mov
cltd
xchg
pop
mov
aad
jno
cmpsl
cmpsb
xchg
xchg
xchg
add
dec
and
in
shlb
xchg
cwtl
stc
adc
mov
mov
arpl
ret
cli
xchg
cmpl
sbb
pop
fcoms
pop
fists
in
cmpsl
and
out
fnstcw
stc
call
adc
out
adc
and
cmpsl
xchg
insb
jmp
mov
sub
dec
sub
sbb
lods
aas
fisttps
or
lock
adc
mov
xchg
and
daa
inc
jno
das
sub
mov
mov
push
cltd
xor
pop
xchg
lcall
xor
pop
and
data16
mov
test
out
js
fwait
or
jg
sbb
insl
cmpb
test
scas
repnz
test
je
mov
push
das
and
cmpsl
mov
daa
jge
sbb
pop
sbb
and
sahf
mov
outsb
jae
mov
clc
das
pop
push
stos
adc
mov
dec
ljmp
lahf
xchg
sub
and
sub
js,pt
hlt
scas
mov
mov
movsl
and
xchg
sbb
das
or
fwait
mov
xor
adc
sub
mov
jbe
mov
lock
xchg
cli
and
sub
clc
into
mov
add
xchg
cld
incl
adc
mov
jnp
scas
xchg
xor
stos
xchg
mov
outsb
loope
jno
test
idivl
je
adc
or
ret
and
sbb
or
xchg
xchg
mov
mov
push
sub
stos
add
push
jle
sub
mov
adc
mov
cwtl
sti
int
or
lret
mov
push
daa
cltd
mov
jecxz
test
xchg
das
xchg
and
mov
stc
adc
pop
and
out
xchg
xchg
push
dec
into
sub
xchg
mov
mov
xchg
sbb
cmpsl
xchg
mov
or
xchg
idiv
sbb
lods
sub
out
arpl
mov
and
push
stc
inc
repz
daa
orb
mov
insl
ucomiss
fidivrs
cwtl
mov
jmp
scas
stos
push
sbb
inc
xchg
push
push
shlb
and
jg
stos
inc
dec
in
mov
xor
push
xchg
fwait
into
mov
mov
sbb
or
jp
hlt
test
lea
adc
adc
and
or
popf
xor
mov
push
aad
ret
cmp
int
mov
xchg
cwtl
adc
fildl
mov
cmpsb
lock
sbb
push
sub
mov
test
mov
mov
test
mov
es
mov
pop
shlb
pop
sbb
out
ljmp
adc
mov
adcb
cltd
and
mov
fs
cwtl
mov
nop
lahf
out
sub
sbb
pop
adc
mov
subb
out
mov
in
and
loopne
test
lret
xchg
push
jno
sub
sbb
ret
or
stc
mov
xchg
es
push
jb
pop
and
and
push
sbb
aad
or
addr16
sahf
test
lahf
sub
lcall
mov
es
cwtl
adc
mov
xor
outsb
inc
cli
xchg
in
adc
cmp
add
gs
push
pop
pop
in
mov
mov
cwtl
movsb
xor
mov
aad
sbb
xchg
add
test
sbb
test
scas
lret
xchg
sub
lcall
jb
or
jecxz
push
stos
mov
test
ficomps
cwtl
mov
lcall
test
adc
mov
push
fisubl
popa
pop
lods
add
loop
xor
out
sub
mov
jp
stos
dec
xchg
test
adc
subb
inc
cli
daa
imul
xchg
fstpt
outsb
hlt
in
sub
xor
pop
repnz
cmp
cmp
lock
and
xchg
pop
mov
and
dec
xchg
xchg
js
fwait
adc
repnz
cli
popa
push
out
cmpsb
test
pop
mov
outsb
pop
pusha
cs
in
cwtl
lods
push
cmpsb
xchg
in
addr16
and
xchg
xor
or
cmpsb
jg
dec
out
sub
hlt
out
push
xchg
mov
pop
lahf
mov
pop
jp
jae
pop
xchg
mov
or
iret
andb
cmp
and
mov
and
adc
jle
mov
xchg
ljmp
test
pop
repz
nop
mov
movsl
cwtl
lods
test
xchg
sbb
adc
adc
or
jae
xchg
cwtl
xchg
mov
mov
or
xchg
xchg
adc
adc
jne
in
sub
pop
daa
dec
sub
xchg
xchg
xchg
lahf
dec
and
iret
pushf
sub
add
xchg
mov
or
xchg
mov
mov
or
xor
out
iret
scas
mov
push
loope
xchg
lahf
int3
xchg
loope
xchg
cltd
xchg
sub
mov
mov
xchg
jp
mov
cmpsb
imul
movsb
xchg
adc
daa
unpcklps
les
sub
adc
nop
cmpsl
imul
sub
xchg
or
fwait
mov
and
and
lret
adc
pop
xchg
sub
mov
out
nop
sub
xor
pop
push
out
pushf
cmp
xor
sbb
lret
mov
pop
imul
jb
sub
rclb
jp
psllq
sarl
cmp
push
lahf
mov
push
cs
movsb
sahf
aas
or
nop
rcll
fdivl
out
mov
out
mov
push
pop
pop
in
outsl
jmp
adc
sub
mov
cltd
mov
jmp
gs
imul
mov
popf
cmpsb
rolb
and
xchg
fwait
test
pop
sub
pop
out
and
sub
dec
fimull
in
sub
stos
daa
mov
push
pop
pop
cs
aas
pop
iret
mov
mov
je
and
pop
xchg
pop
movsb
lods
jbe
xchg
pushf
popa
and
std
mov
jge
pop
and
xchg
jecxz
ds
cltd
leave
lea
negl
push
in
jge
xlat
or
lods
mov
jb
es
and
mov
daa
mov
fwait
iret
push
xchg
int
lahf
stc
repz
stos
aad
pop
stc
push
jb
xchg
or
adc
add
xchg
test
int
xchg
sub
mov
sub
mov
lea
jno
es
mov
stos
sub
xlat
sbb
adc
cmp
or
sahf
mov
test
rcrl
lahf
imul
pop
mov
sub
dec
orb
adc
pop
aas
xchg
enter
pop
sub
adc
and
sbb
pop
movsb
cltd
xchg
xchg
dec
xlat
fsubs
imul
jmp
xor
cmpsb
dec
pop
sub
lds
in
call
andl
push
shlb
inc
test
push
push
sbb
pop
mov
testb
sub
or
add
imul
test
test
outsb
ret
and
lret
jae
push
daa
stos
inc
test
sbb
or
or
inc
jae
sub
jmp
adcb
adc
in
repz
movb
and
sbb
cli
int
out
xchg
movsl
ret
lcall
xchg
cwtl
or
cmp
adc
and
xchg
xchg
daa
mov
push
adc
and
out
or
xchg
xchg
or
imul
xchg
stos
xchg
xchg
dec
sub
jl
xor
jbe
sbb
lods
std
cmpsb
and
nop
pop
cmpl
mov
rcll
daa
xchg
es
sbb
push
out
out
stos
and
and
xor
test
jno
adc
fadds
sbb
adc
mov
in
cltd
sbb
pushf
sub
or
cmpsb
loop
stos
popa
sahf
cltd
stos
adc
ret
and
xchg
sub
es
pop
pusha
adc
leave
lock
daa
addr16
xchg
rolb
insb
push
fcoml
stc
push
fnstcw
in
scas
outsl
stos
xchg
cwtl
sbb
sub
pop
or
push
dec
int
mov
fcomip
adc
mov
xchg
inc
mov
rolb
mov
je
fdivs
push
jle
in
cld
adc
bound
mov
mov
fidivrl
cmc
sub
cld
clc
sbb
or
add
rolb
mov
jecxz
mov
xchg
mov
lods
jl
and
rclb
xor
xlat
sub
cli
adcb
mov
or
jno
mov
rolb
daa
stos
jl
adc
cmp
ljmp
leave
xchg
movsl
imul
iret
mov
imul
jmpw
mov
push
iret
test
pushl
add
decl
push
and
fistpl
xchg
adc
sbb
mov
and
xchg
lock
js
mov
mov
add
jno
nop
sti
fwait
mov
std
xchg
add
add
rolb
mov
jmp
enter
mov
ss
jmp
xchg
shrl
mov
adc
inc
enter
xchg
ret
rol
inc
ret
rcll
sarl
sub
mov
ret
shr
mov
fsubl
sub
and
jbe
inc
cwtl
xchg
test
into
sbb
int3
cli
sbb
sbb
adc
pop
mov
cwtl
push
ljmp
dec
push
sbb
fsubs
sub
in
loopne
test
lahf
fwait
push
addr16
cmp
or
addb
movl
shll
test
push
mov
mov
cwtl
call
sub
vpshaw
push
sub
es
mov
or
pop
dec
and
imul
jecxz
call
sub
das
push
add
mov
and
lahf
scas
mov
xchg
dec
jae
fcomps
pop
or
sbb
les
popf
mov
adc
lahf
sbb
xchg
les
pop
jbe
mov
lcall
push
add
stos
xchg
loop
add
lock
mov
inc
out
lea
pop
cmpsl
psubsb
and
pop
xor
adc
sub
cld
and
movsb
das
movsl
xchg
sbb
jnp
sahf
pop
xchg
adc
xchg
push
mov
cmc
popl
and
pop
sbb
xchg
xchg
adc
adc
adc
stos
pop
push
mov
es
and
cwtl
or
int3
mov
or
sbb
mov
push
movaps
cmp
movsl
mov
mov
mov
xchg
js
pop
pop
xchg
xor
sbb
movups
xchg
xchg
in
jle
adc
daa
jmp
adc
mov
mov
xchg
mov
adc
das
icebp
adc
xor
nopl
stos
pop
cmp
adc
xor
pop
xor
jns
xchg
mov
fwait
sbb
xchg
and
cmpsl
fwait
jecxz
mov
daa
or
pop
pushl
adc
ja
mov
sub
cmp
xor
jl
sbbl
out
push
push
out
lcall
stos
inc
fs
xchg
push
and
mov
jbe
and
adc
cmpsb
cltd
sub
jbe
and
mov
adc
mov
sub
sbb
adc
cltd
out
adc
xchg
cwtl
adc
out
popf
fwait
lret
or
mov
or
cwtl
push
es
xor
sbb
subl
mov
mov
xchg
lcall
sub
jl
sub
mov
xor
or
fnstcw
mov
stos
lcall
lret
movsb
sbb
xchg
sub
or
mov
mov
in
jb
cltd
pop
push
stos
in
xchg
dec
std
push
xchg
movsl
in
out
sbb
hlt
mov
movsl
xchg
stos
pop
sub
fwait
mov
lea
mov
mov
sbb
rol
push
and
popl
lahf
outsl
mov
xor
test
sub
sbb
mov
sub
xchg
rclb
fisubrl
in
stos
adc
mov
adc
lods
cmpsl
movsb
imul
hlt
movsl
xchg
and
pop
mov
cmp
adc
stos
subl
stos
adc
pop
or
divps
fists
and
movsb
nop
push
mov
std
fildl
sbb
push
cwtl
mov
sub
mov
cmp
sbb
lods
sbb
incb
in
xchg
push
cltd
into
lods
and
adc
loopne
mov
adc
mov
lcall
xchg
daa
out
es
test
sub
fwait
rcr
mov
cmpsl
lds
sub
iret
adc
lds
xchg
sub
pushf
enter
or
xchg
fwait
and
fimull
stos
sub
dec
fidivrl
call
add
sub
xor
jbe
pop
mov
cltd
out
jbe
pop
xchg
mov
sub
mov
xchg
lcall
or
int
mov
adc
pushf
pop
sbb
movsb
repnz
or
ficomps
pop
or
cltd
mov
add
out
xchg
adc
dec
sub
mov
and
mov
xor
xchg
adc
or
aas
lahf
and
stc
adc
mov
shl
mov
es
and
push
mov
inc
and
pop
adc
sbb
pop
add
das
sbb
stos
and
mov
ret
sub
cltd
and
and
fwait
cmpsb
cmpsl
add
adc
jl
sbb
mov
pop
aad
adc
xchg
movsb
xchg
mov
and
pop
mov
fisubrl
jno
lcall
mov
sub
adc
dec
fcmovu
stc
fwait
mov
bound
mov
jno
nop
adc
in
jno
pop
lcall
test
sbb
add
dec
mov
sub
push
xchg
mov
adc
imul
dec
out
mov
out
mov
nop
xchg
dec
test
xchg
adc
or
jecxz
inc
xchg
dec
cld
lahf
les
sub
sub
mov
and
negl
or
inc
and
enter
filds
test
push
cmpsl
jbe
in
lret
mov
adc
ds
and
pop
dec
xchg
lahf
cwtl
shrb
adc
daa
mov
pop
in
in
je
xchg
jno
adc
or
lock
xor
xchg
hlt
mov
mov
and
and
sub
mov
xchg
and
lods
mov
lods
nop
loop
jge
daa
movsb
mov
fiadds
cmpsl
out
and
sbb
xor
dec
adc
push
and
lods
jno
and
adcl
cltd
xchg
nop
rcll
add
and
stc
xchg
es
lock
mov
jbe
or
mov
adc
lret
fcmovb
mov
lcall
adc
mov
jbe
adc
jbe
xchg
and
mov
fcomps
xchg
out
mov
xchg
sbb
bound
mov
adc
or
or
pop
aaa
push
adc
cmc
add
repz
fcompl
push
popf
fwait
imul
mov
aad
arpl
adc
scas
cltd
test
addr16
incb
dec
je
int3
into
aam
add
xchg
xchg
je
or
sub
xchg
push
lcall
xor
and
mov
ficoms
sub
jo
dec
out
push
pop
mov
push
gs
clc
or
icebp
test
out
mov
and
mov
add
lock
enter
jle
mov
in
mov
out
xchg
xchg
ljmp
sub
or
pop
sti
out
xchg
mov
and
cmc
arpl
adc
out
test
cmpsl
and
sub
in
mov
xchg
and
adc
xchg
out
mov
adc
movsl
movsl
and
bound
adc
xchg
cmpsl
jns
pandn
nop
stos
rcl
psubd
mov
inc
nop
ljmp
ljmp
nop
xor
movsb
and
or
or
cmpsl
sub
and
mov
pop
push
and
fisttpl
and
pop
fwait
pop
js
push
sbb
adc
jmp
cmp
xor
stos
movsl
out
xchg
sub
or
add
xor
js
movsl
cwtl
and
lret
mov
inc
jp
cld
xchg
rclb
lods
xchg
sbb
fidivrs
pop
xchg
xchg
dec
push
and
jge
pop
pop
xlat
mov
sbbb
lcall
adc
jae
setb
pop
shrl
adc
jno
daa
xchg
icebp
in
xchg
cmpl
mov
icebp
cmpb
or
movsb
repz
cmc
push
sub
push
jge
cwtl
xchg
ficoms
push
aad
negb
lret
pop
adc
jns
shll
mov
test
mov
mov
leave
jae
sub
sbb
shll
or
mov
adc
or
sub
scas
adc
push
or
mov
lea
cmp
or
fstpt
or
mov
daa
inc
xchg
jns
add
lret
adcl
movsb
xchg
nop
xor
sbb
adc
adc
andb
fldl
and
xchg
add
push
fwait
mov
bound
scas
nop
movsl
lahf
mov
fwait
inc
and
cmpsb
stos
mov
and
imul
dec
cmc
adc
sbbb
pop
mov
fwait
cwtl
lods
icebp
bound
cmpsb
mov
xchg
xchg
pop
andb
mov
and
int3
adc
pop
push
add
jae
jno
cmpsb
or
cltd
cmc
mov
and
ret
sub
test
mov
sbb
pushf
out
and
pop
test
daa
mov
imul
imul
je
mov
outsb
or
push
mov
adc
lahf
ds
in
or
jno
and
jnp
add
fbld
imul
movsl
iret
and
add
jo,pt
adc
xchg
xchg
popf
sub
or
and
pop
sbb
push
sub
cs
push
inc
out
sti
test
movsb
pop
jne
and
and
adc
xor
xchg
pop
fisubs
adc
out
insb
cmpsb
jge
and
lea
sbbl
orb
cmp
fcoms
pop
push
jo
xchg
pmaxub
xchg
in
lcall
je
and
js
pop
iret
and
sbb
fcomip
push
xchg
movq
or
mov
xchg
adc
xor
int3
int3
stc
and
les
mov
aad
pop
adc
cwtl
adc
mov
sbb
cwtl
mov
or
jg
in
xor
sbb
push
fwait
je
out
add
or
dec
movsb
mov
cmp
pop
mov
loopne
add
adc
or
mov
pop
adc
sub
stos
or
xchg
sub
movsl
mov
gs
icebp
pop
testl
sbb
out
movsl
movsb
adc
jg
test
adc
out
pop
sub
mull
cwtl
ret
or
movsb
pop
pop
mov
ds
jecxz
jno
and
sbb
das
sub
jmp
cmp
arpl
jl
lock
hlt
and
lds
sub
sahf
mov
adc
test
test
test
and
adc
jecxz
adc
mov
nop
and
mov
sub
movsl
push
ficoms
pushf
movsb
jb
fs
sbb
rclb
adcb
jo
mov
pop
ficomps
sub
lahf
lock
out
movsl
xchg
es
cmp
mov
and
and
sbb
mov
xchg
cmpsb
mov
les
pop
popf
pop
out
or
mov
test
les
lret
and
sub
xchg
or
aad
jmp
sbb
movsl
cld
and
loop
test
ja
sbb
pusha
testb
out
xchg
pusha
pusha
cs
lret
push
bnd
push
cltd
movsb
sar
xchg
movsl
cmc
xchg
dec
scas
punpcklwd
jb
xchg
imul
out
nop
movsl
xchg
adc
xchg
adc
adc
scas
cmp
push
inc
sbb
js
inc
rclb
mov
lahf
mov
std
sub
cltd
xchg
test
fmull
into
mov
and
mov
or
movsb
mov
and
test
mov
stos
inc
cli
push
sbbb
xchg
xchg
popf
dec
mov
fnstenv
xchg
adc
les
sub
loop
arpl
and
je
push
sub
fisttps
sbb
push
dec
out
pop
mov
cltd
mov
mov
push
adc
xlat
aas
dec
out
or
stc
sbb
gs
dec
mov
add
cmc
stos
sbb
es
fbld
or
es
sub
das
pusha
nop
and
daa
bound
orb
cmpsl
inc
ljmp
popa
or
mov
outsb
stc
jmp
std
xchg
adc
cmpsb
xchg
lods
cmc
mov
sub
in
sahf
xchg
and
xchg
fs
jbe
stos
scas
cmpsb
sbb
mov
popl
sub
lods
mov
cmp
inc
xlat
mov
cmc
aam
divb
xchg
sub
xchg
cmp
inc
push
addr16
adc
cmp
ss
sbb
xchg
mov
lods
mov
or
xchg
stos
ljmp
ss
nop
int3
test
in
pop
pop
les
push
fwait
lcall
popa
ret
mov
push
lcall
and
and
pop
and
jle
adc
lcall
pop
xchg
fimuls
hlt
mov
test
in
stos
loopne
add
mov
fwait
mov
out
mov
out
shl
stos
lock
lahf
pop
sbb
or
and
arpl
push
scas
jle
fwait
call
sub
xchg
cmp
mov
iret
imul
test
push
or
test
sub
dec
ds
xor
jo
mov
mov
or
and
and
stos
sub
adc
ficomps
lcall
jecxz
ljmp
or
mov
repz
sub
rclb
das
shrl
sbb
inc
incl
adc
into
jb
test
inc
pop
dec
js
shlb
cmpsb
imul
or
mov
or
roll
mov
ja
push
mov
xchg
imul
out
stc
mov
and
ret
mov
popf
sahf
mov
mov
les
push
xchg
dec
and
sbb
cltd
sbb
lahf
aas
data16
rcll
mov
mov
call
xchg
icebp
cmpsl
cmpsb
adc
orb
adc
test
cmpsb
fstpl
add
movlps
lahf
xchg
xchg
outsl
xchg
lcall
scas
movsb
jae
mov
cmp
faddl
xchg
in
sub
add
sbb
and
mov
movsb
popf
in
mov
mov
popf
rclb
movsl
push
in
js
daa
sub
mov
xchg
mov
mov
in
pusha
daa
into
nop
in
scas
rorb
mov
jnp
or
mov
sbb
daa
xchg
mov
xchg
sub
or
push
inc
js
inc
jge
push
adc
xchg
sbb
lock
stc
sbb
ds
inc
lods
xchg
lods
mov
pop
scas
negl
lret
es
notl
push
push
or
pop
jbe
adc
lcall
loop
out
xchg
lahf
test
cmp
fs
imul
or
xchg
pop
inc
xchg
push
sub
adc
sbb
xchg
push
cmp
movhps
xchg
sbb
nop
mov
mov
cmc
pushaw
xchg
and
jnp
andl
loop
sub
lret
stos
mov
nop
adc
jecxz
fisttpll
das
orb
pop
test
push
repnz
repz
movsl
cmpsl
cmp
mov
cwtl
xchg
mov
xor
lods
rorb
aaa
or
cmpsb
sarb
and
and
mov
add
test
mov
je
sub
sub
sub
out
enter
cmp
cmp
cwtl
and
or
fisubs
xchg
and
pop
movsl
mov
pop
and
lret
dec
sbb
pop
test
xchg
push
stos
push
scas
jecxz
das
mov
mov
jl
sbbb
int
xchg
pop
xchg
xlat
inc
sbb
mov
pushw
or
sub
cld
xchg
xchg
popa
adc
xchg
cmpsl
ds
sbb
push
or
lods
jne
popf
cwtl
pop
fmull
int3
dec
push
sbb
push
mull
bndstx
pop
xchg
sub
popf
rorl
test
sahf
sub
pusha
jae
xchg
add
add
pop
js
js
jge
in
jae
movsl
mov
cltd
nop
lret
adc
loope
xchg
adc
sub
cwtl
std
sub
lret
popf
aad
and
clc
sbb
xchg
inc
mov
aas
mov
popf
sarl
mov
dec
inc
mov
push
mov
popf
mov
popf
sub
popf
mov
cld
popf
fdivrs
mov
popf
or
sarl
xchg
mov
popf
xchg
mov
mov
mov
pop
mov
popf
mov
popf
pop
mov
popf
mov
popf
pushf
mov
and
cmp
cmpsl
orl
out
int
push
sub
lret
out
mov
movsl
dec
dec
jmp
pop
sub
fwait
psrlq
mov
push
and
movsb
popf
xlat
inc
mov
sbb
mov
adc
mov
dec
lcall
cmpsb
jae
xchg
and
ficomps
test
sbb
push
cltd
adc
dec
fimull
mov
inc
mov
imul
lret
call
xlat
jmp
cwtl
sbb
cmp
cmp
ja
addr16
mov
push
or
jbe
mov
arpl
movhps
push
iret
outsl
mov
std
sbb
cmp
je
add
stos
fmuls
xchg
stos
adc
jbe
dec
sbbb
xchg
sbb
inc
mov
jnp
xchg
lcall
jae
and
stos
scas
sub
pop
mov
xchg
cwtl
lahf
sub
jmp
repz
sbb
movsl
lcall
sub
or
sub
sub
cmp
lahf
es
xchg
add
adc
sbb
cmpsl
fstps
or
adc
push
xchg
stos
push
jge
lahf
adc
mov
add
outsl
and
or
adc
sbb
xchg
xchg
test
mov
mov
and
add
fisttpll
xchg
adc
fwait
add
mov
mov
iret
std
xchg
sub
in
int3
mov
sbb
adc
into
aad
sbb
adc
pop
outsl
test
adc
push
fistl
xchg
sub
or
and
lcall
bound
sbb
xchg
sahf
xchg
ficoml
stos
and
jmp
movl
fildll
int3
insb
xor
scas
adc
lahf
mov
jnp
negl
pop
fnstsw
test
daa
pop
sbb
in
dec
scas
mov
test
or
mov
and
mov
adc
outsl
lock
es
mov
mov
cli
fwait
pop
cmpsb
decl
daa
lcall
and
cmpsl
jno
or
jbe
fcoml
es
mov
or
adc
out
push
xchg
into
pushf
test
mov
or
sub
setb
popl
negl
xchg
sbb
jge
lret
xchg
or
xchg
or
fwait
mov
adc
sbb
cs
std
and
xchg
cmpsb
stos
test
out
test
fwait
xchg
das
pop
xchg
and
addr16
jmp
adc
movsb
mov
sub
mov
sbb
push
lret
or
bound
sbb
mov
add
cmp
pop
sub
testl
and
stos
cmc
xchg
xchg
xchg
daa
inc
sbb
jb
rcll
push
jo
sub
and
pop
jecxz
stos
loopne
adc
xchg
or
stos
mov
and
adc
mov
es
xchg
jle
ret
xchg
xchg
xchg
jae
adc
xor
mov
nop
mov
jg
xor
adcb
or
mov
loop
out
sub
fimuls
xchg
sub
or
and
stos
mov
adc
sbb
arpl
jge
orl
mov
lret
mov
mov
xor
sahf
addr16
cmp
cmpsb
jmp
repz
xchg
cmpsl
mov
es
or
add
push
cmpxchg
cmp
dec
mov
jge
stos
or
mov
mov
and
adc
int
cmpsb
mov
mov
or
je
in
out
mov
lahf
test
inc
rclb
ret
test
imul
and
fcompl
xchg
mov
mov
fwait
out
xchg
fcmove
sub
xchg
dec
push
pop
sub
or
repz
stos
lahf
and
cld
das
add
sub
addr16
inc
adc
outsl
clc
push
mov
dec
sub
xchg
sahf
lea
lret
add
aad
adc
outsb
cmp
jg
ja
and
cltd
and
iret
jecxz
mov
mov
lahf
push
dec
adc
xchg
push
out
sbb
arpl
push
sub
shll
adc
into
xchg
xor
pushf
xor
and
loop
icebp
mov
and
sub
lcall
stos
cmc
inc
or
or
xchg
xchg
mov
sbb
add
mov
pop
lcall
pop
xchg
in
mov
pandn
pop
aas
daa
jns
push
movsl
pop
outsl
cmpsl
sub
sbb
add
scas
mov
dec
or
mov
sbb
xor
sbb
jmp
cs
xchg
nop
mov
ret
xchg
mov
xchg
sbb
test
enter
pop
jb
and
sub
rclb
jle
pop
xchg
mov
push
xchg
mov
paddusb
cmpsb
or
xchg
cwtl
push
jg
sbb
push
lahf
mov
xor
push
mov
mov
fdivp
or
xor
dec
fwait
test
imul
cltd
mov
lods
xchg
stos
lock
or
adc
jle
insl
test
xchg
xchg
js
xchg
jle
jne
adc
js
or
pop
call
sbb
xchg
lcall
and
clc
inc
inc
lcall
mov
push
out
fstps
mov
mov
adc
lret
adc
test
or
dec
scas
and
push
xlat
popa
repz
sub
cmpsl
fcoms
inc
out
sbb
mov
cmp
xor
stos
sbb
xchg
mov
xchg
sub
sub
jb
push
jnp
adcl
jmp
xor
add
cmp
xchg
dec
pop
mov
cmpsb
pop
mov
pop
cmpsl
xchg
adc
xor
sub
xor
push
xchg
sbb
into
mov
xchg
test
cltd
pop
jae
and
ret
subb
jne
push
dec
cmpsl
adc
fisubrl
sbb
test
jg
pop
fmull
test
inc
mov
shrl
lcall
adc
mov
jecxz
daa
into
icebp
adc
sbb
jge
lock
sub
xor
imul
lock
mov
scas
fs
sbb
aas
cltd
lea
adc
mull
mov
cwtl
bound
sub
loope
adc
outsl
stos
movsb
pop
adc
adc
test
sbb
sahf
cltd
or
xchg
and
mov
xor
push
sub
adc
mov
add
xor
mov
jl
test
mov
add
mov
mov
xor
jae
mov
popa
out
test
cmpsb
or
mov
mov
adc
xchg
cmpsb
fadds
orb
and
sub
in
mov
les
test
mov
jnp
cmp
dec
mov
xchg
adc
lret
xchg
jle
mov
or
outsb
jb
sbb
jmp
sub
daa
ffree
mov
mov
ja
xor
inc
or
test
out
jns
mov
and
cs
sbb
orl
dec
push
jo
lcall
outsb
test
dec
nopl
mov
pushf
out
or
cmpsb
adc
adc
mov
test
jae
sbb
mov
stc
sub
and
roll
cld
cmp
js
xchg
andl
fwait
stos
or
and
lds
cwtl
hlt
insb
imulb
mov
mov
adc
xchg
daa
xchg
sbb
jae
adc
xchg
mov
loopne
sbb
xchg
add
mov
cmpsl
push
cmpsl
push
mov
mov
iret
hlt
cwtl
movsl
adc
xchg
lahf
lcall
andb
pop
cli
cwtl
or
mov
xchg
and
mov
xchg
sub
mov
stos
pop
mov
cltd
and
cmpsb
jmp
fisttpl
mov
sub
lahf
dec
pop
xor
cltd
sbb
sub
jle
push
sbb
sub
inc
movsl
xlat
push
adc
into
lret
pop
lock
into
dec
adc
and
cltd
xchg
sub
sbb
adc
ficompl
pop
mov
lds
in
dec
xchg
sbb
nop
sbb
dec
test
mov
cmp
notl
divl
xchg
pop
lret
or
call
xchg
mov
test
push
insb
pop
sub
andps
popf
sub
test
or
outsb
sub
scas
clc
adc
test
adc
clc
icebp
iret
stos
sub
lret
sub
mov
mov
adc
lret
or
cvttps2pi
push
es
xor
adc
and
cwtl
lods
push
add
and
push
icebp
xchg
mov
pop
fisttps
out
mov
outsl
into
mov
test
xor
sbb
cmc
loopne
es
test
jb
mov
test
pop
xchg
divl
xchg
outsb
test
addb
pop
mov
pop
adcb
pop
jb
xchg
lret
jecxz
sbb
out
dec
es
mov
xor
cmpsl
inc
xchg
xchg
adc
mov
xchg
ljmp
jo
push
sub
sbb
xchg
sbbb
push
mov
iret
jns
out
fildll
add
or
movsl
lret
or
into
adc
adc
push
cwtl
adc
shr
sub
stos
orb
adc
dec
loopne
or
xchg
cmpsb
imul
dec
push
scas
and
cmpsb
pop
jae
fisubs
dec
mov
pop
or
mov
adc
movaps
mov
cltd
lea
mov
xchg
mov
je
and
lahf
out
adc
cmpsb
sbb
push
sbb
out
lods
sub
mov
cmpsb
aas
imul
inc
imul
mov
sub
sahf
mov
andl
xchg
das
popf
xchg
ret
pop
mov
inc
inc
lds
lea
and
fwait
aad
and
cwtl
ss
and
mov
stos
jae
xchg
cli
sub
push
sub
addl
adc
lcall
xchg
xchg
scas
cmp
pop
adc
cmpsb
test
stos
into
call
std
mov
pusha
loop
push
jnp
adc
mov
out
mov
sbb
pop
int
xor
cmp
lcall
addl
testb
bndldx
in
push
mov
and
or
mov
or
daa
cmpsb
push
sub
dec
cmp
cwtl
sub
xorl
fisubrl
lcall
push
push
daa
mov
mov
stos
out
xchg
or
and
test
lock
or
daa
int
sub
scas
sub
adc
xchg
adc
and
mov
nop
mov
mov
add
jmp
push
inc
shlb
mov
sub
jbe
and
xchg
xor
add
sub
leave
xchg
loope
pushf
stos
dec
jbe
fwait
xchg
bound
xchg
insb
xor
rep
push
jle
pop
mov
and
jno
sbb
sbb
mov
adcl
adc
gs
daa
mov
test
and
adc
in
xchg
sahf
and
xchg
stos
loop
fnstenv
mov
clc
mov
pop
push
xchg
jno
movsl
mov
dec
lcall
sub
adc
sbb
xor
fwait
outsb
push
or
mov
movsl
jg
xchg
or
cmpsb
test
xor
mov
xchg
test
sbbl
cwtl
pop
or
lahf
fldl
adcl
negl
stc
xchg
enter
mov
mov
mov
call
enter
pop
xchg
mov
xlat
orb
xchg
into
leave
xchg
xchg
xchg
pop
clts
fiadds
in
jle
sub
mov
jg
out
dec
adc
cmp
xor
lahf
lret
xchg
xchg
mov
in
pop
clc
push
cs
dec
jp
sbb
jmp
bound
insl
adc
mov
nop
xchg
sahf
xchg
jmp
outsl
adc
test
call
pop
idivl
test
out
shlb
adc
push
scas
call
sbb
sub
or
sub
xchg
ret
adc
je
pop
jbe
xchg
xchg
sbb
mov
ds
ret
das
notb
call
les
push
sub
out
xchg
mov
sbb
mov
pop
sub
adc
int3
push
incl
scas
dec
lahf
and
or
sbb
adcl
push
adc
scas
imul
jbe
sub
mov
and
xchg
jno
xchg
and
cmc
popf
and
inc
push
jnp
fbstp
sub
adc
sahf
xchg
push
call
pop
nop
cmpsb
fstl
cmpsb
jo
lcall
pop
jae
or
mov
or
and
xchg
adc
mov
testb
insb
lret
mov
xchg
je
push
jb
xchg
xor
lahf
pop
nop
daa
pop
mov
mov
movsl
fmul
in
mov
cwtl
pop
dec
or
imul
iret
test
adc
repz
adcl
mov
ljmp
psubsb
out
lcall
daa
imul
ds
arpl
les
lret
cltd
pop
popa
cmp
xchg
adc
jae
xchg
mov
and
xchg
and
sbb
pop
or
and
lcall
movsl
and
les
mov
jle
push
xchg
fcoms
jle
sub
xor
sub
jmp
cmp
test
xor
lahf
mov
add
sahf
lea
movb
jge
or
lahf
stos
or
xchg
sub
pop
call
je
mov
adc
lahf
xchg
mov
cwtl
movsb
lret
jecxz
stos
cltd
out
push
daa
ret
into
cs
jb
and
mov
clc
insl
inc
xchg
and
iret
cld
adc
rorl
cmp
dec
mov
sub
adc
xor
mov
lahf
test
or
ficoms
xchg
xchg
das
mov
daa
sbb
jl
add
pop
sbb
adc
shll
mov
ret
and
mov
and
adcl
cmpsb
pop
iret
adc
push
sbb
das
cmpsl
xchg
xchg
test
jns
in
lcall
cmp
jno
movsl
fwait
outsb
dec
jo
lahf
pop
popa
inc
out
mov
adc
stos
mov
addl
or
shlb
iret
ljmp
and
jb
mov
xor
daa
in
and
test
xchg
lea
pop
lret
iret
daa
es
cld
cwtl
cltd
and
adc
mov
mov
and
pop
test
push
mov
sbb
leave
stos
stos
lock
mov
out
xchg
or
push
mov
out
mov
and
test
jbe
stos
mov
jp
or
movsl
inc
lahf
out
adc
jecxz
push
mov
sbb
sub
push
je
and
dec
imul
mov
insb
or
mov
sub
xchg
lcall
xchg
cltd
arpl
xchg
cmpsl
mov
xchg
xor
std
sbb
sbb
sbb
mov
adc
push
xchg
or
adc
fucomip
sub
jp
add
clc
adc
dec
nopl
mov
fwait
cmc
mov
stos
adc
sub
cmc
rclb
mov
insb
mov
into
push
or
or
jno
adc
add
je
and
adc
push
push
lahf
and
cmc
les
xchg
cmpsl
jno
xchg
lcall
or
stos
hlt
sbb
add
mov
insl
push
js
std
test
stos
xlat
not
outsl
cmc
cmpsb
push
and
jg
cs
inc
jg
xchg
sub
sbb
stos
push
or
adc
sahf
push
and
cmp
xor
xchg
stos
into
sti
movsb
or
addr16
and
and
adc
sbb
sahf
cmpsl
cltd
or
and
push
cwtl
test
adc
sete
stos
pop
cmpsb
dec
jbe
xchg
or
push
fwait
adc
push
stos
pushf
adc
dec
loopne
rcrl
push
stos
inc
jb
xchg
jmp
notl
je
xchg
add
mov
cmpsb
nop
ret
mov
aam
outsl
push
xor
jb
movsl
mov
push
int3
xchg
mov
xchg
out
test
jbe
mov
stos
xchg
adc
lcall
jmp
sbb
and
or
xchg
jno
sub
notb
in
and
test
cmpsb
ficoms
xlat
and
inc
mov
dec
out
or
sub
adc
and
adc
xchg
out
xchg
shld
es
fwait
lahf
mov
jl
xchg
lcall
shl
fisubrl
and
cmp
dec
popf
fwait
adc
or
adc
outsb
add
and
and
jno
nop
xchg
cwtl
push
cmp
cltd
test
into
xor
out
pushf
and
mov
xchg
mov
mov
mov
std
pop
pshufw
xchg
cltd
jb
mov
dec
repz
test
stc
stos
outsb
div
addr16
in
pop
into
xchg
daa
fadds
mov
mov
adc
cltd
daa
stos
adc
imull
mov
adc
aaa
imul
mulb
cmc
xchg
adc
cmp
and
js
hlt
sub
stos
xchg
adc
and
pushf
sbb
negl
xchg
movsb
lea
or
lcall
stos
adc
test
sbb
icebp
imul
jnp
stos
lods
fdivrs
test
loop
and
push
les
and
xchg
and
xchg
and
bound
lret
daa
loope
inc
daa
rol
fwait
add
cmpsl
lret
mov
xchg
dec
adc
pushf
add
cmpsl
std
sub
jb
xchg
pop
andl
hlt
sub
aam
lret
cwtl
sbb
and
pop
scas
adc
sub
gs
stos
jbe
and
movsl
or
push
sub
pop
js
mov
add
dec
cmc
sbb
ret
push
or
mov
movsl
and
sub
jo
sbb
adc
push
dec
or
adc
pop
mov
xchg
cltd
mov
pushl
sub
je
sbb
push
xor
adc
mov
cltd
cwtl
and
sub
jg
fidivrs
cwtl
mov
jno
test
les
rorl
sbb
and
daa
lahf
xchg
jb
xchg
lahf
push
pop
lea
push
cmpsl
add
cmp
mov
pop
xchg
sbb
xchg
pop
mov
xchg
and
mov
jb
and
mov
daa
dec
and
mov
or
mov
ljmp
xor
jbe
inc
fwait
and
jbe
pop
adc
and
adc
test
fsubs
lret
and
sub
mov
pusha
xchg
daa
cmp
push
push
xor
jno
or
mov
mov
lret
pushf
daa
aas
lcall
fwait
scas
adc
mov
outsl
xor
and
xchg
stos
pop
push
mov
cltd
fidivs
lahf
sub
xchg
stos
ss
mov
and
repz
jno
pop
ja
jecxz
push
std
adc
aaa
mov
mov
es
lahf
ret
cs
sub
std
xchg
push
adc
adc
mov
orb
cmovns
sub
pop
int3
stc
sub
cwtl
testl
mov
mov
daa
sub
or
mov
xchg
mov
pop
inc
sub
jmp
pop
repz
lcall
pop
dec
mov
movaps
xchg
hlt
ret
pop
xchg
xchg
sbb
push
test
notl
out
sbb
sub
cmpsl
adc
hlt
jle
adc
pop
lcall
mov
sbb
push
inc
aas
out
sub
xchg
lods
mov
pop
mov
and
xchg
mov
dec
push
sbb
sbb
mov
mov
or
sbb
fisubs
lahf
or
scas
js
cwtl
or
jecxz
in
push
std
mov
and
fistpll
push
loop
outsl
cwtl
and
mov
sbb
pusha
xchg
mov
movsb
xchg
imul
sub
dec
lcall
xchg
jecxz
gs
scas
lahf
push
or
jge
mov
ret
push
mov
xchg
es
lea
or
mov
popf
and
mov
jecxz
jno
sub
call
jg
pop
popf
pop
data16
mov
pop
jge
int
or
test
or
cwtl
in
xchg
pop
jno
pop
pop
stos
jno
or
mov
cmp
pop
push
add
xchg
das
stc
and
adc
movsl
imul
mov
cmpsl
stc
sub
scas
xchg
prefetcht2
adc
adc
es
and
pushf
jae
mov
lret
jae
and
ret
aas
nop
or
lahf
fwait
mov
add
into
cld
xchg
mov
fwait
and
adc
dec
push
enter
into
xchg
nop
cltd
lcall
cmpsb
push
sub
pop
push
and
cltd
mov
jb
sub
mov
nop
pop
stos
push
andb
jbe
scas
in
pop
pop
sbb
xchg
xor
jno
sub
pop
icebp
xor
loop
lret
mov
mov
movsl
sbb
outsl
fwait
adc
mov
sbb
xchg
jb
pop
fisubrs
adc
xchg
fldpi
jle
xchg
mov
ljmp
out
loope
stos
pop
push
xchg
xchg
mov
lahf
pop
xchg
jg
push
cmpsb
jae
mov
jae
sub
xchg
add
jmp
xchg
fistps
xchg
jmp
adc
aad
clc
xchg
nop
lahf
mov
mov
xchg
fwait
out
jge
add
or
push
push
daa
mov
pop
lods
xchg
cmp
movups
mov
fwait
arpl
pop
xchg
es
adc
lret
lcall
mov
mov
stos
or
stc
and
test
sub
and
mov
mov
test
mov
ljmp
aas
adc
pop
and
or
xchg
je
adc
std
xlat
push
stos
xchg
xchg
out
or
mov
loop
stos
xchg
out
es
scas
mov
dec
cmp
xor
or
adc
cmpsb
out
pop
stos
adc
and
fisubrs
mov
push
icebp
xchg
pop
repnz
jmp
cwtl
test
mov
jecxz
dec
jbe
and
sbb
add
and
mov
lods
cwtl
test
pop
in
nop
mov
adc
jecxz
test
lds
xor
out
jo
adc
lahf
push
lahf
inc
je
out
loopne
xchg
mov
or
ss
subl
clc
nop
push
ret
lock
sbb
inc
mov
mov
lds
adc
push
mov
xor
pop
lret
cld
xor
ss
xchg
jmp
xorb
xchg
push
mov
dec
stos
daa
stc
movsl
mov
cltd
inc
mov
ret
test
mov
and
jbe
cmp
lahf
and
sub
sbb
jle
fldl
sub
xchg
jmp
stos
adc
stc
out
std
xor
and
xchg
and
jg
inc
es
adc
xchg
jp
push
adc
mov
add
lcall
xchg
sub
arpl
movsl
xchg
clc
aaa
test
ret
and
xchg
push
or
movsl
adc
mov
push
je
xor
xor
sub
cmp
das
and
or
sub
mov
push
sub
shrl
ret
mov
sub
jae
and
mov
cltd
xchg
faddl
movsl
popf
xchg
cmp
sbb
xchg
popf
push
aas
mov
data16
cmpsl
adc
popa
sub
js
std
call
add
ja
sub
pushf
xchg
inc
sub
sbb
std
and
jmp
adc
xchg
test
mov
into
xchg
dec
dec
and
mov
sbb
out
nop
and
xchg
pop
xor
sub
pop
xor
push
and
mov
es
push
ljmp
cmpsb
and
mov
pmullw
push
xchg
outsl
test
sbb
sub
push
mov
das
jo
xchg
stos
and
pop
push
xchg
mov
mov
cmpsl
fsubrs
leave
or
or
mov
jmp
lcall
jbe
xchg
cs
sbb
inc
adc
cmpsb
mov
repnz
das
cmpsb
push
lcall
ljmp
hlt
movsb
cltd
stos
fldenv
test
sti
xchg
xchg
lods
add
inc
xchg
or
mov
mov
jmp
test
jle
stos
xchg
push
lock
mov
and
mov
mov
adc
cwtl
mov
aad
sub
or
jbe,pn
mov
xchg
lcall
or
js
jae
lahf
outsl
pop
and
and
cmpsl
xchg
aaa
stos
and
mov
pop
test
cwtl
xchg
pop
dec
mul
xlat
orl
mov
lock
sub
out
or
mov
mov
xchg
stos
test
dec
mov
sbb
fwait
jge
xchg
sub
mov
adc
xor
mov
cwtl
sbb
dec
push
or
sbb
aas
mov
jg
addr16
pop
xlat
mov
jp
pusha
lods
jle
sbb
in
sbb
scas
test
adc
pop
inc
cmpsb
sbb
lahf
in
ss
frstor
xchg
cwtl
xor
dec
cmpsl
adc
daa
loopne
scas
int3
lahf
pop
pextrw
and
bound
sbb
jmp
push
adc
xchg
cmpsb
movsl
fidivrs
or
sbb
movsl
stc
jmp
adc
and
stc
sbb
or
xchg
sub
das
setg
test
add
adc
jae
xchg
pop
sahf
push
and
push
lcall
mov
ljmp
adc
or
sub
adc
cltd
and
or
je
loopne
sbb
xchg
adc
incl
ss
cltd
jo
es
dec
xchg
mov
adc
sbb
mov
cmc
xchg
sahf
mov
stos
sub
mov
rcrb
stos
xchg
daa
movsb
es
lods
fs
fimull
jp
mov
adc
adc
add
sbb
mov
mov
cmpsb
cmp
or
imul
lret
sub
stc
sbb
xchg
lcall
xchg
stos
sbb
push
cmpsb
mov
xor
scas
xchg
or
movsb
mov
mov
std
in
mov
jmp
pop
mov
and
fcmove
jbe
sub
lahf
test
mov
cltd
add
pop
xchg
mov
fs
inc
xor
and
xchg
es
sbb
and
fisubs
cmp
push
adc
scas
sbb
dec
loopne
in
xor
add
xchg
pushf
sub
xchg
out
mov
mov
adc
sahf
test
mov
pop
xchg
lret
xchg
and
ret
push
movsb
mov
mov
lcall
fisttpll
seto
fcompl
sbb
outsl
xor
xchg
popl
pop
jl
test
enter
in
stc
xchg
inc
adc
daa
xchg
sub
jo
and
mov
loopne
xchg
imul
xchg
ljmp
cmp
pop
push
aad
xor
and
xlat
mov
push
push
out
nop
mov
pop
lcall
add
sbb
or
mov
movsb
pop
stos
fcomp
ror
das
lds
aad
rcl
daa
in
adc
fisubs
cmpsl
scas
push
mov
xchg
adcl
cmpsb
and
dec
xchg
pop
jae
or
sbb
mov
dec
std
add
or
jp
pop
adc
adc
daa
insb
pop
lret
and
and
sahf
ret
cmp
inc
in
outsb
stos
pop
xchg
popf
dec
push
jb
mov
dec
jbe
sbb
sub
mov
mov
pop
nop
orb
sbb
and
cmpsb
adc
pushf
and
or
adc
mov
test
mov
cmpsl
ss
xchg
stos
fistpl
adc
inc
lahf
mov
xor
into
andb
cmp
subb
or
add
cwtl
xchg
lock
das
pop
adc
vxorpd
or
fwait
movsb
jnp
jge
xchg
jbe
and
scas
sub
push
xchg
mov
arpl
xchg
cwtl
sbb
push
dec
in
clc
sub
xchg
dec
push
les
test
fistpl
xchg
shrb
lds
and
ds
jb
cmpsl
test
cmp
and
adc
jb
and
mov
es
testl
sub
aas
orps
adc
and
dec
scas
push
stos
iret
cmp
xlat
and
test
xchg
mov
pop
pusha
ret
stos
mov
stc
sub
lcall
pop
cltd
jmp
xchg
adc
push
sub
adc
std
imul
test
or
nop
cltd
lahf
xlat
outsb
and
xchg
mov
les
add
fisttps
outsb
or
rcrb
xor
je
out
xor
shll
and
mov
jecxz
adc
outsl
movsb
and
shl
hlt
add
mov
mov
ljmp
test
mov
movsb
jmp
test
test
push
sub
adc
xchg
sub
addr16
add
fisttps
dec
popf
or
or
and
xchg
iret
mov
loopne
mov
pop
testl
mov
add
xchg
sub
cltd
add
dec
add
sbb
adc
xchg
aad
xchg
or
cwtl
add
das
sbb
adc
aam
pop
jb
xchg
adc
and
xchg
push
adc
nop
mov
and
nop
jbe
push
adc
std
cmp
stos
mov
xchg
add
pop
cmpsl
or
in
adc
clc
mov
mov
cmp
es
cmpsb
xor
adc
lahf
adc
xor
imul
xchg
test
xchg
orb
adc
into
ret
sub
sbbb
js
sub
clc
lcall
adc
leave
bswap
and
or
sbb
test
andb
test
imul
int
mov
lret
lahf
and
lcall
adc
adc
xlat
add
fwait
imul
fcoml
xchg
cld
inc
ret
lahf
cmpsl
lods
test
xchg
xchg
add
stos
shlb
xor
xor
sbb
sub
xchg
mov
push
pop
mov
or
nop
stos
les
clc
fisttpl
cmc
mov
outsl
stos
xchg
xchg
and
mov
aas
ret
sbb
sub
ljmp
sbb
lret
nop
adc
mov
mov
outsl
xor
out
stos
test
adc
lret
popa
daa
out
dec
pop
cmp
or
sahf
fsubl
nop
xchg
dec
fimuls
pop
mov
lahf
fwait
es
imul
call
iret
sub
cs
jge
xchg
or
test
or
scas
mov
sub
and
and
aas
adc
sbb
xchg
pop
fsubs
test
add
sbb
cli
outsl
int3
or
xchg
into
pop
pop
mov
lret
mov
js
or
test
or
mov
xchg
lcall
in
mov
cmpsb
lea
test
adc
and
into
jle
test
cltd
fldl
cwtl
sub
jge
cs
sbb
jns
mov
andb
or
hlt
sub
cmpsl
enter
xchg
test
stos
xchg
mov
lret
and
cltd
xchg
sbb
and
movsl
adc
out
pop
repnz
jg
pusha
mov
xchg
orb
push
or
sti
mov
mov
xchg
jno
xchg
xchg
das
lods
pop
lahf
daa
icebp
adc
in
mov
adc
sub
mov
fsubrs
outsb
pop
out
iret
mov
pop
test
cmp
cmp
data16
xchg
adc
adc
and
mov
jb
and
and
pop
mov
js
lahf
jp
adc
cmpsl
jae
daa
mov
sub
sbb
xor
xchg
xor
movb
test
ret
mov
icebp
adc
fldlg2
sub
adc
jle
and
mov
movsl
clc
adc
subl
xchg
push
fisubrs
lods
es
insl
outsb
aam
jb
xchg
or
pusha
mov
jp
and
cpuid
cwtl
sub
nop
mov
cmpsb
push
xchg
into
test
lea
adc
out
sbb
push
sub
bound
ds
and
xchg
mov
cltd
test
cwtl
dec
lea
adc
mov
or
or
out
sub
adc
cltd
sub
xchg
mov
loop
sub
mov
call
dec
and
in
cltd
xchg
movsl
jl
xchg
and
imul
xchg
adc
pop
clc
nop
jo
mov
adc
dec
mov
sahf
xchg
sub
sub
fwait
daa
adc
mov
jmp
jno
adc
shlb
lret
scas
sub
mov
daa
lahf
and
push
sahf
push
sbb
push
call
pop
adc
push
mov
cmc
aaa
lcall
imul
xchg
jb
test
out
je
xchg
sbb
mov
stos
stos
xchg
jae
scas
repnz
fbld
inc
cmp
call
stos
test
pop
cltd
push
xorl
and
imull
or
es
push
jb
ds
lcall
cltd
std
fnsave
or
sub
movsl
js
int3
rcll
fwait
sbb
mov
adc
xchg
mov
jge
movsl
rorb
pusha
mov
mov
sub
lcall
push
nop
and
fwait
lods
andl
add
lds
or
xchg
xchg
mov
lret
daa
mov
aad
data16
add
movups
pop
lcall
pop
lods
jbe
pop
test
cmpsb
sbb
jb
sbb
sub
xchg
xchg
mov
mov
jl
xchg
pop
and
push
ret
and
nop
test
mov
mov
mov
das
mov
adc
mov
sub
sahf
xchg
sub
stc
data16
adc
or
sbb
pop
insl
mov
addr16
pavgw
adc
ljmp
jge
movsl
stos
sbb
xchg
in
jle
adc
aam
add
popa
xor
and
mov
ret
mov
xor
and
and
fsubrl
jle
push
pop
rcl
sub
adc
lcall
mov
mov
repz
cli
cmpsl
cmpsb
and
test
mov
xchg
stos
jo
xchg
adc
xchg
mov
mov
and
adc
punpcklbw
jg
rcrb
daa
addr16
xchg
ret
xchg
xchg
movsl
sbb
scas
ret
hlt
push
pop
sbb
cmpsl
lcall
xor
push
movsb
imul
cs
rcrb
mov
add
and
subl
sbb
faddl
and
xchg
movsb
xchg
mov
scas
insb
mov
in
or
pop
xchg
lea
clc
inc
and
dec
lock
sti
pop
bndstx
sti
inc
scas
and
pop
sahf
mov
or
sbb
add
sub
mov
cmp
mov
mov
xor
js
adc
sahf
mov
add
stos
es
mov
test
mov
or
and
mov
out
mov
jmp
test
cmc
lcall
adc
dec
mov
xchg
sbb
dec
inc
push
fiadds
sub
stos
sbb
push
lahf
stos
les
push
in
pop
mov
adc
sub
fdivrl
fiaddl
cld
mov
xchg
xchg
test
mov
mov
mov
scas
sub
pop
inc
pop
insb
out
xchg
add
aad
cltd
mov
adc
daa
test
inc
cltd
fwait
cwtl
xchg
jecxz
or
sbb
xchg
movsb
sub
mov
and
icebp
xchg
pop
jae
movsl
mov
mov
and
mov
test
fwait
and
push
gs
xor
mov
sub
xchg
xchg
pop
hlt
and
inc
pop
scas
fwait
or
lahf
add
popl
push
xor
dec
cltd
sti
dec
loop
adc
adc
movsl
imul
or
mov
xchg
jae
xor
jbe
popa
and
iret
inc
movsb
push
or
inc
adc
add
cmc
dec
sbb
sbb
test
je
mov
fwait
cltd
popl
xor
movsl
xchg
mov
imul
ss
cmc
cmp
lods
and
inc
movsl
daa
fisttps
xchg
xchg
test
jmp
cs
adc
pop
cwtl
or
and
fidivs
or
jns
xchg
cmpsl
mov
fstpl
lret
sarb
mov
add
es
mov
pop
out
mov
enter
xchg
xchg
cmpsb
lcall
pop
test
xchg
out
or
mov
mov
push
mov
push
cld
pop
xchg
movsl
cltd
mov
stos
mov
dec
rcrl
repz
mov
test
movsl
pop
add
pop
cmpsl
dec
sub
int
or
push
nop
mov
stos
pop
cmp
movsl
fwait
and
out
adc
lods
lods
lahf
xchg
sub
pop
jne
rclb
lcall
aad
sub
into
int3
push
es
shll
or
and
jae
cmpsb
daa
dec
sti
popf
in
adcl
iret
pushf
mov
inc
jle
xorb
stos
dec
mov
sbb
mov
or
sbb
in
add
scas
imul
inc
nop
pop
repnz
mov
xor
rclb
lea
mov
andb
or
std
xor
xchg
or
stos
call
rolb
stc
test
outsl
dec
mov
lods
into
add
xchg
adc
inc
mov
jecxz
push
stos
dec
std
adc
sub
push
adc
push
xor
adc
xchg
test
pop
lods
stos
mov
push
mov
cwtl
xchg
mov
test
or
cmpsl
insl
pop
movsl
in
sti
and
out
je
jb
stos
mov
jle
or
sub
mov
jge
adc
lret
adc
and
lret
adc
xchg
stc
pop
cmc
inc
stos
inc
sbb
mov
xchg
mov
nop
hlt
xlat
icebp
out
adc
adc
xchg
xchg
xchg
fbld
scas
aas
cmpsl
mov
arpl
cmp
outsb
xchg
daa
mov
or
xchg
xchg
stos
jbe
add
adc
std
mov
xor
and
add
mov
cwtl
mov
stos
ret
hlt
loop
cmpsl
dec
ljmp
fmull
sets
adc
or
sbb
xchg
sub
push
add
dec
das
pop
adc
lods
pop
or
jecxz
and
mov
xchg
adc
xchg
or
negl
or
clc
out
lcall
xchg
xchg
xchg
sbb
aas
add
push
mov
add
sub
notl
es
jbe
jno
xchg
scas
jmp
fdivp
xchg
stc
sub
sub
stos
fisttpll
or
ret
daa
cmpsb
cltd
cld
addb
xor
outsl
js
adc
push
mov
insl
xchg
stos
or
inc
movsl
or
sahf
pop
mov
notl
hlt
mov
pop
shrl
or
je
and
cmc
and
jnp
mov
es
xchg
in
mov
scas
jb
mov
orb
lahf
jno
adc
push
dec
jo
movsl
nop
mov
stos
pop
jnp
xchg
xchg
adc
mov
sub
xchg
xor
cwtl
fs
mov
adc
dec
test
sub
cltd
jecxz
cmpsl
adc
loopne
stos
mov
mov
push
xchg
out
or
xchg
adc
rorb
and
xchg
sbb
ja
xchg
aam
xchg
inc
mov
push
dec
mov
pusha
arpl
nop
sub
sbb
adc
add
xchg
nop
lcall
sbb
cmp
enter
stos
jmp
add
adc
mov
sbb
loop
dec
fcmovbe
test
jle
adcb
push
mov
or
push
lret
popa
and
mov
mov
xchg
sbb
cmpsb
sbb
jle
lcall
add
test
in
cmp
jb
nop
pop
pop
push
test
cmp
or
es
jae
mov
pop
jg
xchg
adc
pop
or
test
in
lret
stos
nop
inc
sbbb
adc
fwait
or
stc
rcll
and
push
xor
test
lock
cmpsb
movsl
das
test
cmpsl
lock
xchg
xchg
daa
shll
inc
mov
insl
jae
and
shll
lahf
sbb
lds
test
loop
out
and
xchg
xchg
and
and
in
pop
adc
push
xchg
fisubl
cvtpi2ps
movsl
mov
rcll
mov
pop
das
adc
andb
jb
xchg
push
dec
xor
cltd
push
cwtl
sbb
dec
jmp
lahf
mov
push
mov
jb
fwait
xchg
leave
aad
mov
pushf
lahf
je
stos
cmpsl
ficompl
mov
outsl
or
sub
adc
mov
lret
adc
cmpsl
adc
sub
sbb
add
test
and
and
xor
xchg
xor
push
mov
into
mov
cmpsb
ds
popa
push
mov
test
mov
or
and
xchg
shlb
cmc
mul
cmc
adc
adc
xchg
mov
mov
lahf
mov
pusha
cmp
inc
jge
xchg
loope
stc
pop
out
and
outsb
mov
or
and
adc
sbb
test
mov
popf
ret
mov
xchg
neg
adc
js
pop
bnd
xor
mov
loopne
push
cmc
movsl
mov
adc
jae
xchg
sbb
enter
mov
dec
pop
adc
mov
mov
out
or
xor
stc
stc
stos
pop
clc
add
cmpsl
dec
stc
push
pop
jge
dec
lea
or
in
std
xchg
push
adc
sbb
adc
mov
adc
rclb
xchg
sub
es
and
mov
mov
in
xchg
jp
inc
inc
pop
and
test
and
adc
adc
mov
aas
sbb
insl
adc
xchg
xor
sub
addl
lret
repz
xchg
mov
pop
cltd
adc
xchg
sub
sub
andb
mov
cmp
mov
xlat
or
sub
int
mov
out
push
mov
and
sbb
pusha
and
iret
mov
mov
xor
add
lods
movsl
mov
mov
cmp
xchg
xchg
test
mov
ret
sbb
mov
or
popa
or
inc
xchg
pop
mov
pop
mov
mov
and
pop
add
xchg
or
sbb
xchg
lods
insl
test
fs
icebp
and
stos
jno
pop
lahf
mov
insl
xor
xchg
sahf
es
shrl
push
xchg
mov
adc
int3
dec
mov
add
dec
cli
mov
lar
into
and
popl
mov
cmp
cmpsb
sbb
xchg
fwait
insb
mov
mov
pop
daa
scas
fmull
xchg
sbb
sti
sbb
inc
fwait
pushf
jae
movsl
stc
test
sti
adc
adc
stos
jno
or
dec
into
or
sysret
mov
mov
sbb
and
mov
or
into
or
cmpsl
mov
in
cltd
pop
pop
cmp
adc
jg
xchg
jo
adc
jmp
adc
mov
sub
adc
daa
sbb
test
and
mov
xchg
out
push
xchg
pop
pop
out
fsts
sbb
loop
in
sub
adc
movsb
adc
sbb
cmpsb
or
jb
xchg
cwtl
fcompl
push
cmp
fisubrs
mov
add
mov
xor
movsb
mov
xor
outsl
jb
cltd
sbb
xor
lds
xor
jbe
sbb
adc
shlb
lahf
outsl
sbb
out
jp
adc
fsubrs
dec
xor
xchg
xchg
xchg
stos
jg
outsl
loopne
nop
jg
pop
cltd
mov
sbb
xchg
lcall
mov
adc
shrb
out
adcb
fwait
sbb
ljmp
stos
xor
mov
mov
jae
cmpsl
cmc
and
mov
adc
or
adc
faddp
stc
sbbb
sub
mov
jno
cmpsl
jle
loop
add
js
xchg
int
push
int
xchg
jno
or
loope
jno
xchg
sbb
push
and
and
xchg
into
jb
pop
xchg
cmpsl
mov
adc
adc
sub
cltd
mull
outsb
jo
xchg
sbb
inc
cmpsl
or
insl
sahf
jecxz
xchg
lcall
mov
mov
fwait
pop
and
pop
cmpsb
shrl
mov
test
mov
test
xor
shlb
inc
in
rorl
adc
out
fsubs
sub
mov
lods
sahf
int
lcall
cltd
lahf
adc
fwait
adc
xchg
inc
test
sbb
inc
fisttps
mov
dec
out
push
stos
mov
aas
sub
xchg
mov
push
sub
repnz
or
mov
in
fsubrs
push
adc
and
test
mov
cmc
jge
and
and
pop
out
inc
test
adc
ljmp
sbb
xchg
mov
js
je
es
cmp
lcall
loop
andb
jo
cltd
pop
xchg
hlt
jmp
push
xchg
and
scas
jge
cmpsb
sahf
cmp
mov
adc
xor
adc
pusha
rclb
mov
jbe
test
or
mov
shlb
xor
xchg
clc
lret
mov
xor
fwait
and
sbb
lcall
mov
or
fisubrs
adc
mov
push
fcmovne
lea
out
xchg
xor
das
and
or
sbb
push
std
iret
cltd
xchg
adc
je
stos
mov
cmpsb
es
je
movsb
and
adcl
lahf
sbb
xchg
mov
ja
mov
popf
outsl
mov
xchg
mov
and
in
mov
nop
push
dec
jae
mov
xor
lock
mov
in
cmpl
push
int3
shrb
sub
dec
dec
aam
mov
and
movsb
mov
adc
pop
or
nop
jmp
popf
add
mov
scas
fistps
loope
dec
call
out
xchg
and
dec
addr16
and
popf
mov
lds
xchg
mov
lahf
fs
rolb
rorl
sbb
test
jl
mov
je
jae
fcmovbe
jne
fwait
stos
xchg
std
cmpsb
dec
mov
xor
inc
xchg
lret
movsl
sub
xchg
jbe
xchg
pop
fwait
mov
mov
mull
push
addr16
lahf
lods
push
out
js
cltd
hlt
fdivp
fwait
test
push
sub
and
add
data16
nop
adc
pop
push
or
jmp
sub
dec
push
out
stos
mov
jle
xchg
sub
adcl
mov
xchg
hlt
or
test
jle
je
mov
dec
pushf
das
movsl
test
and
xchg
mov
pop
notl
mov
out
mov
mov
lods
xchg
add
pop
out
shr
xchg
adc
fwait
push
mov
movsl
xchg
popa
mov
test
popa
popa
mov
int3
sahf
test
mov
xchg
fucomp
nop
add
sbb
wrmsr
fwait
sahf
mulb
or
test
push
pop
insb
idivl
lds
mov
cmpsl
xchg
or
ljmp
adcb
repz
outsl
mov
adc
incb
adc
mov
pop
ret
fmuls
pop
push
jb,pn
push
adc
js
frstor
xchg
or
jb
mov
or
or
test
aam
xchg
les
jae
cmpsl
stos
mov
lods
mov
lret
jp
or
outsl
adc
sbb
stos
mov
pop
dec
xchg
scas
popa
test
sub
pop
sub
cltd
push
stc
and
push
sbb
mov
mov
mov
push
adc
cmpsl
xor
sbb
jmp
jbe
mov
adc
fldcw
mov
xchg
ret
pop
insb
jbe
inc
jmp
dec
fisttpl
dec
xchg
out
int
and
stos
pop
in
test
rcrb
fwait
sub
or
test
cwtl
or
mov
adc
bound
mov
mov
cmc
das
cmpsl
inc
sbb
neg
or
in
adc
jne
adc
or
je
and
push
cmpsl
mov
mov
xchg
adcb
lds
movsl
inc
and
mov
sbb
adc
jb
sub
aaa
test
mov
stos
lret
test
sbb
sub
cmpsl
cmc
and
add
bound
scas
gs
or
xor
mov
mov
test
inc
jp
int
xor
xchg
adc
push
or
scas
in
push
adc
ds
repnz
sbb
lock
pop
sbb
jl
orb
mov
mov
sbb
sub
and
movsb
mov
lcall
jecxz
cli
sbb
sub
lcall
xchg
lahf
xchg
xchg
shrb
les
divl
xor
nop
jb
sub
and
das
fldenv
xor
adc
or
loope
sbb
inc
push
adcb
adc
xor
in
mov
sbb
rdtsc
xchg
stc
mov
std
testl
cwtl
or
add
je
and
adc
jecxz
lahf
adc
xchg
stos
or
loopne
and
lcall
push
cltd
aad
in
or
test
and
fwait
icebp
mov
mov
cmpsb
lahf
mov
xchg
stos
dec
lcall
movsb
and
xchg
mov
negl
lds
inc
mov
rolb
loop
bswap
stc
mov
push
lret
xchg
scas
jae
xchg
jae
test
or
sete
dec
push
adc
out
jp
or
and
push
cwtl
mov
mov
int3
adc
test
in
cmp
out
xchg
movsl
sub
xor
cmp
mov
lahf
mov
add
push
out
lock
clc
mull
pop
xchg
push
fcoms
xchg
jno
mov
cli
je
test
xchg
adc
clc
xchg
push
into
mov
sub
stos
out
push
mov
movsl
ret
sti
adc
jmp
mov
sbb
loop
pop
xchg
lea
cmpsl
pop
movsb
mov
pop
loopne
mov
mov
mov
sub
sub
push
fsub
cld
cmc
movlps
rclb
out
adc
xchg
xchg
int
pop
and
jno
xchg
movsl
rclb
dec
xchg
pop
cwtl
mov
and
push
sub
pushf
push
and
sub
scas
add
mov
xor
inc
xchg
lahf
rorb
mov
sub
sub
subb
cli
xor
rorl
sbb
xchg
push
cltd
push
imul
rcrl
sbb
xor
push
xchg
xchg
lcall
mov
jmp
das
outsb
and
iret
sub
clc
into
xor
or
rol
leave
testl
sub
mov
xchg
jae
xchg
jo
daa
sbb
js
and
pop
adc
out
ljmp
outsb
dec
sbb
into
sbb
xchg
jl
mov
sub
add
and
adc
sbb
pushf
dec
adc
rcrb
adc
lret
mov
adc
xchg
push
les
test
subl
fs
cld
and
stc
je
adc
cli
or
dec
stc
daa
adc
js
mov
xchg
xchg
xchg
imull
pop
jo
adc
and
jno
sbb
nop
adc
lcall
mov
xchg
test
xchg
and
mov
rorl
xchg
ljmp
fcmovb
mov
stos
test
jno
test
jne
jl
rcr
dec
jno
movaps
adcw
mov
mov
jnp
cli
xchg
pop
stos
incb
jmp
xor
in
jnp
lcall
inc
pop
insl
cmpps
scas
pushf
and
or
in
sbb
adc
bound
daa
cmpsl
pop
xchg
sub
cmp
lea
sbb
roll
push
lcall
xchg
inc
push
movsb
adc
sub
sbb
xchg
shl
or
sahf
jnp
loope
fists
js
es
cli
and
adc
or
and
pusha
sub
lret
cwtl
push
jmp
stos
jo
adc
subps
mov
ret
icebp
or
jae
mov
je
cltd
out
mov
jae
mov
cmc
sub
mov
adc
setae
in
js
mov
push
movsl
daa
sub
mov
ds
sbb
lahf
lahf
out
nop
cwtl
fwait
test
pop
das
sbb
and
daa
push
stos
adc
jbe
cmpsb
mov
dec
stos
add
xchg
outsl
sub
xchg
and
xor
mov
jge
mov
cmpsl
lcall
outsb
push
and
adc
sub
pop
and
lcall
dec
jae
sbb
or
sub
sub
cmpsb
int3
sbb
and
sbb
inc
mov
scas
subb
add
adc
popa
adc
adc
es
daa
mov
or
fwait
mov
cmpsb
ret
cmc
dec
das
add
sub
mov
ret
sub
dec
jno
push
movsl
push
shl
mov
lahf
push
sbb
out
xchg
pop
and
fldt
pop
mov
mov
sbb
or
cmp
or
and
sub
cltd
or
scas
pop
add
adc
sub
iret
pop
adc
and
adc
mov
adc
js
xor
or
cli
jle
sbbb
int
sbb
sub
test
pop
xchg
xchg
fsts
std
sbb
mov
sbb
stos
pop
je
xchg
xchg
mov
and
pop
adc
sbb
adc
and
pop
pop
xor
cltd
pusha
jae
xchg
out
dec
add
xchg
or
stos
inc
pop
mov
xor
jae
jb
and
sub
push
lea
ja
aas
xchg
mov
xchg
test
add
js
cmpb
mov
mov
filds
xchg
imull
push
add
out
cmc
and
pop
xchg
mov
bound
push
mov
or
adc
and
jmp
lret
test
cltd
cld
and
pop
mov
add
addr16
sti
mov
sbb
out
and
jae
cmpsb
insl
xor
subb
xchg
mov
and
js
cwtl
dec
iret
cmpsb
xchg
cmp
lahf
rcr
int
enter
or
lock
xor
lcall
aad
xchg
mov
xchg
popl
outsb
loopne
scas
mov
lcall
mov
xchg
imul
pop
add
andb
or
je
or
add
jb
cmpsb
sbb
lcall
and
sub
mov
stos
xchg
gs
and
decb
lods
sbb
stos
cmpsl
lods
xor
pop
jae
out
adc
xchg
pop
shlb
iret
and
sbb
clc
aad
xchg
mov
push
and
sub
cmpsb
into
es
mov
dec
int
adc
push
sbb
mov
or
and
mov
shlb
mov
dec
xor
xor
cltd
mov
movzwl
ret
adc
pop
cmpsl
sahf
fwait
xchg
in
daa
ljmp
mov
sbb
mov
sub
sbb
and
pop
xchg
pop
lods
mov
push
xchg
xchg
mov
nop
lret
cmpsb
into
lahf
sbb
xlat
and
and
xchg
ja
daa
sbb
mov
std
mov
xchg
cmp
sbb
repz
add
xchg
fwait
scas
add
mov
xchg
ds
pop
pushf
xchg
movsb
or
xor
add
and
and
aam
adc
mov
adc
test
adc
dec
inc
push
and
mov
stos
mov
mov
cmpsl
xchg
mov
jb
and
arpl
test
and
mov
andl
cmpsb
daa
stc
pusha
aas
xlat
xor
cmp
push
mov
add
icebp
xchg
mov
clc
bound
cmpsl
icebp
testl
xchg
daa
pop
aam
and
lret
sub
inc
mov
mov
fwait
mov
push
jae
shl
scas
adc
cmpsl
sbb
popf
insb
mov
fdivrs
es
mov
in
pop
sar
xor
or
add
fnstenv
push
mov
add
nop
rclb
fidivs
test
sub
test
ss
rcll
aaa
xor
sarb
cld
inc
imul
or
cmp
push
xchg
testl
lods
lods
aas
adc
je
scas
outsl
fcoms
adc
xchg
test
and
jle
out
jns
and
pop
aad
jg
es
mov
pop
push
and
pop
or
inc
stos
pop
mov
testl
gs
push
lahf
ljmp
mov
inc
xchg
or
and
and
and
push
mov
sub
ret
sub
les
sub
push
pop
xchg
lcall
mov
stc
xchg
xchg
shrb
cmc
sub
xchg
push
mov
and
in
xchg
and
out
pop
addl
arpl
sub
testl
mov
int
shlb
clc
stos
and
mov
sbb
pushf
lcall
jbe
xchg
xchg
ficoms
cwtl
pop
jae
mov
out
adc
xchg
fcmovu
inc
in
xchg
cltd
xor
pop
mov
es
sub
xchg
fwait
stos
jb
and
dec
rolb
push
stc
jmp
push
xchg
mov
hlt
nop
mov
adc
pop
add
sub
arpl
mov
xchg
fdivrl
je
hlt
mov
stos
jb
and
mov
add
lret
xchg
out
sbb
and
inc
adc
xchg
loope
and
jne
outsl
xchg
pop
or
mov
xchg
movb
jmp
mov
mov
das
mov
or
and
pop
cmpsl
and
fs
mov
xchg
aam
test
pushf
mov
inc
adc
xchg
stos
adc
stc
mov
inc
movsb
mov
push
sub
and
test
test
xor
cmpsl
pop
xchg
cmpsb
fs
negl
xchg
mov
sub
cmpsl
out
shrb
lods
dec
js
jecxz
arpl
or
push
js
and
in
jbe
adc
sbb
pop
jae
xchg
lods
xor
rclb
pop
sub
out
xchg
mov
stos
cltd
stc
mov
lcall
sub
cmp
or
or
pop
arpl
ljmp
fwait
adc
jmp
cmpsb
dec
xchg
icebp
and
js
test
adc
ss
jb
xchg
mov
inc
pop
sbb
mov
scas
push
pop
mov
movsl
ret
jnp
jmp
push
pop
xchg
adc
test
repz
jo
nop
pop
xchg
sub
xchg
xchg
mov
test
dec
fwait
dec
add
out
xor
cltd
adc
andl
xchg
inc
leave
notl
test
rorb
lahf
mov
xchg
mov
aas
lods
imul
call
daa
jae
or
push
out
xchg
and
sub
pop
repnz
cli
movsl
addr16
sub
push
and
fldl
mov
aaa
add
adc
lcall
inc
repz
adc
and
jno
and
pop
xor
push
iret
fstl
xor
or
stos
mov
mov
iret
sti
test
xchg
xchg
js
mov
xchg
adc
xchg
sbb
and
aas
mov
fmull
lds
jbe
dec
fwait
jl
les
add
mov
je
xchg
repnz
xor
add
pop
adc
mov
mov
pop
call
xchg
es
cmc
xor
lcall
sbb
out
fiaddl
lcall
roll
aam
add
fbld
es
mov
push
ret
test
mov
mov
icebp
jbe
movsl
and
mov
cltd
test
inc
add
ljmp
pop
or
mov
xchg
and
nop
into
mov
xchg
sbb
cmpsl
arpl
movsl
or
mov
div
rolb
pop
jbe
bound
and
or
lock
xchg
fs
adc
and
and
aad
lahf
addr16
sbb
mov
lret
cmpsb
xchg
lret
icebp
or
xchg
test
xor
push
movsb
iret
or
or
dec
cmp
lcall
out
or
imul
movsb
fisubrs
test
xchg
pop
je
cwtl
stos
daa
jno
push
das
jmp
sbb
and
pop
scas
jmp
sbb
cltd
js
ret
or
xchg
sub
ret
xchg
pop
sub
adc
not
mov
stos
mov
mov
xor
jle
mov
sbb
pusha
dec
imul
jno
or
xchg
pop
mov
cmpsl
dec
lcall
xor
or
lcall
cmpsl
jae
mov
xchg
xor
sub
mov
adcb
adc
repz
pop
orb
sbb
adc
sahf
sbb
and
sbb
mov
rcrb
adc
ljmp
jge
fsubr
jae
xchg
jg
fwait
adc
test
mov
or
int
mov
sub
pop
popa
adc
lds
or
in
aad
fwait
lcall
adc
sbb
mov
or
inc
xlat
mov
add
lret
sbb
mov
movsl
and
xchg
popl
out
lahf
jno
nopl
mov
dec
rorl
xor
clc
es
movsb
mov
sbb
daa
adc
mov
adc
lock
jae
icebp
sbb
loop
sub
fwait
or
push
sbb
xchg
sub
inc
pop
and
pop
sbb
mov
fneni(8087
movsb
or
cmp
pop
xchg
cmpsl
adc
out
adc
or
xchg
xor
test
cltd
add
push
or
stos
fs
stos
test
sbb
lock
xlat
or
cmpsb
lock
nop
stos
movsl
or
in
add
sbbb
lret
nop
cwtl
and
mov
and
mov
sbb
fsubrp
sub
test
fs
push
sbb
sub
adc
and
and
sub
mov
xor
sbb
sbb
ljmp
jmp
or
loope
cld
adc
cmpsb
jle
adc
daa
inc
pushf
xlat
and
or
xchg
movsl
sub
sbb
jb
lcall
jle
cmpsl
and
jno
daa
out
in
add
adc
hlt
aad
test
js
xor
xchg
xchg
nop
out
xor
jae
or
scas
or
mov
cmc
sbb
mov
in
cmpsl
mov
fldt
lsl
inc
shlb
lods
subl
cmpb
jg
fimull
sbb
lods
adc
jecxz
les
sbb
lods
xchg
cmp
clc
and
push
pop
popl
fcoms
sbb
mov
shll
dec
add
xlat
jecxz
lcall
mov
mov
pop
push
mov
sbb
mov
cwtl
mov
or
sub
popl
les
hlt
and
pop
xchg
sbb
jge
xchg
push
sub
lea
fdivl
lea
or
pushf
nop
dec
or
xchg
cmpsl
xchg
sbb
cltd
mov
mov
xchg
adc
xchg
shll
pop
pop
push
js
hlt
cmp
dec
lock
aas
jne
adc
stc
lahf
pminsw
mov
js
sub
out
les
mov
test
test
mov
adc
out
jge
nop
sbb
jmp
punpckhdq
fistpll
pop
mov
sub
outsl
sub
mov
add
sti
jo
mov
add
xor
xor
adc
sbb
adcl
adc
clc
xchg
cmp
xchg
mov
lcall
mov
movsl
hlt
inc
aam
and
jle
add
jmp
or
xchg
rorb
xor
mov
sub
sahf
pop
cwtl
sub
xor
sub
hlt
xchg
and
jmp
mov
sbb
es
arpl
xor
filds
mov
dec
sub
shlb
es
mov
xchg
push
adc
xchg
pop
lcall
out
adc
popa
pop
loope
add
stos
xchg
adc
mov
lret
adc
xor
outsl
cli
add
xchg
push
pop
mov
insl
xor
repnz
jo
adc
xchg
push
lret
loop
xchg
dec
xchg
or
xchg
int
ss
cltd
xchg
xchg
ljmp
xchg
lahf
or
lcall
outsl
cmpsl
stos
mov
pop
add
iret
inc
sbb
pop
es
or
xchg
xchg
jecxz
insb
fistpl
mov
fcomi
adc
jbe
stos
insl
xor
sbb
xor
sub
jbe
or
inc
or
fisttps
and
fmull
adc
sbb
sub
push
xchg
xchg
dec
daa
mov
jge
xchg
mov
hlt
cmc
lahf
cmpsb
push
movsl
sbb
and
and
jne
xchg
sub
cmp
pushf
pop
jo
mov
adc
xchg
sbb
in
lahf
je
cmpsb
sbb
xor
pop
das
addr16
cmpsb
dec
or
push
xchg
and
push
mov
nop
mov
and
je
xchg
out
jb
or
and
mov
push
sub
jge
jno
push
and
add
and
and
adc
xchg
mov
xlat
xor
and
xchg
xchg
and
push
movsb
inc
xchg
mov
mov
pop
imul
or
fs
es
iret
popa
outsl
movsl
xchg
pop
shrl
pusha
mov
sub
sub
cmp
movsl
fwait
mov
pop
negl
mov
imul
pop
sbb
aas
int3
jg
fwait
movsb
arpl
jg
push
sub
xchg
and
cltd
cmp
xor
mov
jb
stos
and
add
in
fnstcw
mov
daa
or
pop
cmpsb
add
rclb
push
jmp
adc
push
imul
sub
negb
sub
fwait
jbe
xor
cmpsb
sbb
jo
sub
mov
outsl
adc
mov
add
adc
xchg
mov
test
xor
sbb
xchg
cmc
adc
cmp
ret
xchg
js
and
dec
test
sbb
or
cltd
sbb
sbb
push
frstor
xchg
into
push
pop
lcall
adc
adc
and
fwait
dec
xor
movsb
lahf
adc
cltd
or
loopne
push
mov
xchg
movsl
xchg
test
out
jecxz
adc
xchg
jmp
jmp
lods
pop
movb
jge
inc
jnp
xchg
in
loopne
inc
sub
es
xchg
sbb
or
mov
cmpsl
adc
and
es
xchg
xlat
notl
test
mov
fbstp
xchg
cltd
scas
and
stc
xchg
cmpsb
jb
sets
lods
add
cmpsb
xchg
cli
mov
and
rcrl
xor
sbbb
or
adc
sahf
mov
jbe
push
adc
push
sub
push
lcall
pop
sub
arpl
sbb
repnz
xchg
or
xchg
mov
xchg
cmpsl
lods
add
or
mov
push
insb
adc
cwtl
push
movsl
sbb
jmp
lea
or
push
fdivp
sub
xor
cmpsb
ficoms
sub
stos
aam
and
or
mov
xor
cmpsl
rol
cltd
cmp
sub
lcall
in
scas
ds
into
mov
xchg
and
movsb
or
xchg
call
xor
mov
stos
cmpsl
or
push
or
ret
push
or
cmp
mov
nop
aad
test
aam
mov
fwait
bound
fwait
stos
test
adc
cmpsl
push
stos
mov
mov
clc
out
or
movsl
inc
push
dec
ficoml
seto
dec
movsb
fwait
jp
mov
lods
add
cmpsl
sub
test
adc
imul
daa
xchg
or
push
or
ds
dec
cltd
adc
stos
stos
cmp
mov
test
xchg
jge
push
lahf
cmpsl
aas
or
sub
adc
or
popf
mov
into
mov
test
sub
xchg
stos
daa
das
in
inc
in
pop
sub
movsb
jbe
mov
adc
js
int3
inc
adc
pop
mov
mov
adc
mov
out
ret
xchg
mov
out
mov
dec
fimuls
pop
in
nop
and
sbb
lods
into
jns
fcoml
add
sub
scas
loopne
mov
pop
test
jae
xchg
fdivrs
nop
and
daa
test
movsb
aaa
add
inc
push
jb
xchg
sbb
cmp
sbb
outsb
adc
daa
adc
sbb
pop
cmpsb
and
sub
jbe
sub
cmpsb
popf
in
cmp
fwait
scas
jo
movsl
daa
and
mov
and
pop
or
sbb
idivl
mov
lods
sbb
pop
stos
pushf
xchg
jne
xlat
xlat
adc
jle
lcall
pop
mov
mov
cwtl
aam
mov
daa
test
and
fisubrs
jae
lahf
sbb
pop
and
fwait
add
sub
cmpsb
jae
scas
mov
xlat
and
inc
cmpb
mov
mov
or
jae
and
ljmp
and
lret
jmp
cmp
sbbb
mov
or
adc
jae
stos
sbb
mov
in
test
or
cmpsb
int3
in
fwait
and
mov
xchg
sbb
notl
pop
add
adc
fistps
sub
call
fwait
stos
push
xor
adc
mov
and
mov
cltd
ljmp
notl
xchg
xchg
push
in
std
sbb
jno
sub
rclb
sub
repnz
xchg
sahf
jecxz
mov
fwait
and
jbe
xchg
add
sarl
sahf
arpl
and
mov
lahf
cwtl
iret
data16
pop
or
aad
cmp
xchg
cltd
ljmp
lret
dec
sbb
movsb
out
mov
mov
test
mov
movsl
lahf
xchg
outsb
pushf
jmp
mov
sbb
jbe
xchg
mov
mov
imul
add
imul
and
lods
pop
mov
add
or
xchg
nop
mov
pop
cmpsb
xchg
ljmp
stos
sub
insl
cwtl
ficoms
xchg
push
inc
push
pop
pop
xchg
and
sahf
cmp
xchg
adc
mull
and
adc
and
mov
test
in
lcall
adc
mov
or
dec
adcl
data16
pop
adc
out
and
push
adc
mov
and
and
adcl
test
add
sti
out
packssdw
jne
sbb
mov
cmpsb
lcall
pop
test
aaa
nop
xchg
stos
jmp
cld
lahf
and
daa
test
sbb
or
lcall
test
cmp
or
in
mov
sbbl
xor
adc
jns
cltd
adc
imul
push
sub
imul
cmp
sub
pushf
sarb
adc
fnstsw
xchg
lods
scas
cld
daa
cmpsb
adc
loope
jmp
pushf
mov
mov
and
xchg
cltd
pop
xchg
adc
in
cmpsl
adc
ret
scas
adc
mov
mov
adc
scas
inc
push
lds
xchg
sbb
push
jb
stos
xor
ficomps
mov
cmp
lahf
or
test
xchg
mov
notl
cmpsl
sub
bnd
pop
dec
sahf
mov
notl
in
xchg
xor
pop
mov
daa
sbb
stc
xor
dec
jae
adc
mov
mov
adc
xchg
mov
cld
adc
xor
push
jae
scas
insb
xchg
pop
and
ficoml
das
mov
mov
mov
mov
in
js
jge
adc
pop
pop
rclb
push
and
mov
cs
dec
into
sbb
stos
xchg
xchg
xchg
mov
sbb
movsb
insb
jl
lahf
mov
lcall
stos
push
loopne
or
sar
insb
je
push
scas
cmpsb
adc
mov
and
mov
sbb
xor
stos
xchg
push
fadd
jns
mov
movsl
mov
and
adc
ds
shll
mov
lahf
sbb
jae
xchg
sub
mov
sbb
mov
fwait
xor
or
xchg
and
sbb
jle
or
adcl
dec
xor
fidivrl
les
xchg
jbe
jae
mov
nop
shr
stos
mov
xchg
add
outsb
fdivl
imull
lret
hlt
sbb
in
adc
mov
pushf
stc
pop
shlb
mov
lcall
stos
in
mov
push
fidivs
sbb
pusha
xchg
pop
ljmp
push
fimull
fwait
mov
and
sub
mov
ljmp
xchg
jno
cmpsb
mov
xchg
loope
subl
xchg
cmpsl
repz
xchg
lret
fcoms
int3
cmc
and
xchg
xchg
cwtl
sub
jecxz
push
mov
out
xchg
mov
adc
icebp
in
rol
xchg
mov
jmp
sahf
adc
daa
mov
int3
bound
aas
fwait
or
iret
xchg
pop
fs
test
aam
pushf
imul
add
and
sub
sbb
je
mov
push
outsl
adc
push
sub
mov
jmp
jb
xchg
mov
mov
push
rol
mov
pop
or
iret
push
mov
and
into
mov
adc
adcl
add
push
mov
sub
cmpsb
cmpsl
dec
mov
and
dec
lahf
push
dec
bound
cmpsb
shrl
mov
mov
stc
mov
lock
xchg
jmp
xor
sbb
rcll
xchg
or
xchg
mov
pop
push
cmp
jg
out
cmpsl
lret
das
sbb
sub
and
rorb
movsb
cmp
mov
repz
lock
and
shlb
das
xchg
movsb
mov
adc
cmp
mov
jle
xchg
adc
mov
ret
out
mov
mov
test
mov
lods
imul
jno
shll
cmp
js
pop
cmpsb
jae
nop
xor
adc
xlat
je
mov
add
or
sbb
es
out
push
scas
movsl
mov
es
js
out
sbb
cld
scas
and
mov
stc
lcall
mov
sbbl
testl
mov
enter
mov
mov
cltd
aad
pop
testl
test
adc
pushf
xchg
stc
cld
sub
and
insb
fs
fisttpll
mov
xchg
imul
mov
popf
mov
jmp
xchg
mov
js
cmpsb
xchg
jno
push
xchg
rorl
mov
push
mov
and
jecxz
loopne
movsl
stos
xor
jo
mov
mov
adc
test
in
jecxz
xchg
fwait
stos
sub
sbb
jp
push
adc
or
fwait
test
push
scas
add
sub
popl
mov
push
pop
daa
xor
push
int
pop
push
pop
int3
outsl
lock
xchg
nop
mov
pusha
out
mov
and
fwait
xchg
add
xchg
jle
jle
aad
sbb
outsl
nop
adc
pusha
sbb
rcpps
bound
xchg
int3
xchg
lret
es
push
clc
xchg
std
and
xchg
adc
and
sub
or
loop
xchg
mov
xor
sarl
mov
or
xchg
movsl
sub
and
sub
sbb
push
push
mov
push
jmp
lcall
repnz
or
lcall
mov
inc
xor
les
andl
repz
or
sub
and
fwait
push
sbb
xchg
adc
sub
and
push
pop
or
mov
cmpsl
mov
and
xchg
mov
push
jb
adc
add
mull
pop
jb
lcall
add
loop
dec
ljmp
sbb
test
xchg
and
arpl
scas
cmpsb
and
mov
cmp
adc
lahf
scas
add
adc
fwait
pushf
jecxz
mov
jno
pop
xchg
dec
push
pop
mov
and
cmpsl
imul
sub
adcl
outsl
fistl
jbe
outsl
xor
aas
xchg
lcall
mov
nop
adc
das
fmull
pop
dec
int3
aad
pushf
adc
stc
adc
pushf
test
fists
negl
test
sbb
mov
mov
mov
in
dec
mov
lods
jae
xchg
adc
or
pop
sti
xor
xor
cmc
mov
sbb
arpl
add
pop
sub
push
stos
jge
and
pop
rclb
adc
setg
test
xchg
jb
lcall
outsb
je
test
fmuls
and
fistl
mov
xchg
xchg
sub
sbb
mov
stos
jge
mov
div
stc
dec
jb
and
or
mov
ds
adc
and
jae
and
sbb
out
sub
in
push
jmp
scas
or
inc
xchg
push
and
xor
scas
xorb
rcrb
nop
mov
mov
int
lds
iret
sbb
lahf
lods
lcall
mov
cld
ja
notl
cmpsb
mov
sbb
jbe
push
and
loopne
stos
pushf
xchg
fwait
lcall
std
in
imul
and
inc
movsl
xchg
je
test
sbb
cmc
icebp
fcompl
mov
push
js
cmc
adc
pop
inc
nop
or
mov
xchg
push
cmc
ljmp
mov
adc
xchg
pop
inc
sub
mov
popa
cmp
dec
xor
xor
sbb
es
cmpsb
jmp
rclb
lcall
aad
test
sub
int
or
out
cmp
sbb
lcall
xchg
xchg
pusha
xchg
and
jle
gs
sbb
stc
outsb
jo
mov
test
mov
sbb
push
adc
mov
and
movsb
push
push
out
mov
sbb
je
sub
sbb
dec
jb
adc
fcmovnu
mov
xor
sbb
jmp
stos
cwtl
pop
insb
adc
jecxz
dec
xchg
je
fnstsw
xchg
and
push
or
jbe
jne
pop
pop
in
cmp
jp
push
mov
shrb
mov
adc
out
andb
jne
pop
imull
outsl
rclb
cwtl
cmp
or
cltd
and
mov
pop
in
add
xchg
mov
fadd
cmpsl
cmpsl
or
mov
cwtl
cwtl
hlt
mov
out
sub
es
adc
cmc
inc
testl
cmpsb
mov
sub
and
lcall
push
or
pop
xchg
js
adc
test
scas
gs
mov
arpl
add
stos
adcb
mov
push
insb
aaa
out
adc
and
sbb
daa
and
sbb
lcall
shll
lahf
pop
adc
dec
adc
out
and
cs
and
xor
dec
cmpsb
sbbl
fisttpll
fimuls
stos
and
movsl
xchg
fwait
loopne
movsb
loopne
lret
sbb
stos
or
out
pop
mov
push
adc
mov
and
sbb
xchg
lea
mov
pop
xchg
adcl
add
mov
mov
pop
adc
adc
pop
dec
push
into
bound
adc
repz
mov
sub
out
jge
vpmadcswd
and
dec
jo
nop
sbb
push
sub
in
xor
mov
stos
sub
mov
jb
sub
and
adc
fwait
cld
mov
ror
jb
sbb
xchg
lds
pop
xchg
adc
stos
xor
jmp
sbbl
adc
adc
mov
jbe
repz
push
mov
stos
fimull
xchg
adc
lret
and
mov
mov
popf
pop
mov
jmp
sbb
es
fs
mov
jbe
xchg
adc
pop
adc
test
pop
and
cmpsl
stos
fnstsw
cmpsl
popf
and
mov
push
xchg
mov
jg
adc
das
mov
push
and
cmp
cmp
sbb
mov
sti
and
adc
xchg
sub
xchg
scas
fcoml
stos
daa
out
pop
mov
or
push
mov
xchg
jmp
and
cmp
rcrl
fsubs
add
cmp
nop
imul
stos
sahf
mov
scas
cwtl
sbb
push
bnd
push
movsb
test
or
mov
mov
jns
lahf
xchg
and
into
sub
xchg
adc
decb
pop
dec
adc
jg
adc
jno
test
xor
cmpb
or
cmpsb
es
movsl
es
jbe
sub
stos
scas
mov
or
add
cli
mov
and
dec
stos
adc
xchg
xchg
sbb
icebp
pop
adc
movsb
lcall
js
fisubrs
cwtl
movsb
or
xchg
lcall
je
jae
inc
hlt
idivl
btc
pop
pop
inc
xchg
xor
xchg
daa
lds
daa
adc
sub
shrb
je
es
push
or
or
pop
xchg
aam
fldt
je
push
ss
cltd
je
and
or
sub
test
xchg
stos
daa
mov
and
ficoms
sbb
push
and
movhps
scas
movsb
and
xor
stos
cmpb
sub
or
test
sub
cwtl
cmp
in
call
jle
jnp
fcomp
mov
xchg
fmul
cmp
scas
lods
scas
or
sub
sbb
or
and
dec
or
pop
xchg
mov
and
int
adc
push
out
fwait
pop
cmpsl
pop
test
adc
and
nop
clc
lcall
jae
xchg
adc
in
mov
add
and
test
push
jae
adc
mov
or
and
cltd
call
sarb
xchg
into
mov
sbb
sub
adc
pop
sahf
sahf
movsb
mov
ficoml
adc
jmp
xor
mov
mov
sbb
jo
mov
cmpsb
cli
inc
add
movsl
xchg
mov
iret
cmc
fisubrs
cli
mov
mov
mov
xor
sub
mov
mov
std
and
les
mov
imul
sub
in
fidivl
push
mov
mov
mov
cltd
xor
dec
mov
mov
fs
imul
adc
mov
test
pop
dec
jb
inc
xchg
inc
scas
dec
and
sub
cmpsb
and
cmpsb
cwtl
mov
jae
sbb
in
fmuls
movsb
xchg
mov
outsl
or
xchg
sub
sub
adc
pop
and
fwait
mov
testl
stos
inc
stc
cmpsl
movb
mov
js
sbb
inc
fisttpl
add
aam
pand
xor
mov
mov
test
call
push
mov
jb
movswl
outsb
inc
cmc
push
sub
pop
xor
icebp
rcrb
call
jo
mov
jno
adc
xor
insb
sti
sbb
mov
test
and
jmp
setnp
jae
or
xor
inc
push
push
pop
xchg
iret
lcall
test
ds
xchg
negl
mov
add
xchg
mov
into
pop
xchg
cmpsb
sbb
mov
push
xchg
jp
adc
jbe
and
mov
ficoms
ljmp
mov
in
out
test
mov
and
test
int3
mov
sbb
sbb
mov
mov
movsl
and
xchg
adc
mov
xchg
adc
push
pusha
add
mov
daa
or
push
sub
rol
popf
xchg
sub
test
xchg
in
xchg
lahf
movsl
out
stos
sbb
sub
mov
mov
or
pop
test
sti
mov
les
adc
and
xor
sbb
cwtl
imul
mov
xchg
mov
adc
movsl
mov
mov
mov
sbb
sahf
pop
xchg
adc
xchg
mov
cmpsb
out
cmp
mov
mov
iret
jae
cwtl
fwait
stc
pop
jle
shll
mov
dec
lahf
jae
adc
lods
and
pop
xlat
sub
inc
mull
movsb
cmc
shl
dec
dec
mov
mov
xor
into
divl
or
pop
dec
rorb
inc
dec
jmp
cltd
cmpsb
sbb
or
les
imul
adc
clc
mov
jge
adc
aam
sub
mov
lret
mov
adc
sub
ljmp
fcom
pop
or
and
mov
xor
mov
sub
jg
xchg
jno
sbb
aaa
cmp
xchg
lret
mov
push
mov
pop
mov
and
movsl
sub
adc
sbb
pop
sub
movsl
addl
or
sub
mov
into
push
sub
fbld
lcall
pop
out
and
icebp
mov
int3
dec
push
xchg
repz
and
push
je
adc
sub
mov
and
iret
adc
mov
sub
mov
call
mov
popa
cltd
aam
xchg
cmpsl
xchg
or
sbb
cmp
adc
scas
pop
xchg
loope
mov
sbb
aas
adc
jb
and
push
jae
das
gs
sub
in
adc
or
mov
stos
adc
out
clc
and
dec
adc
jp
les
mov
push
cltd
lods
lods
add
fwait
mov
xchg
mov
pop
lret
sarb
and
cmpsb
sbb
and
in
adc
rep
adc
xchg
mov
xchg
je
jno
stos
jb
adc
lahf
stos
js
cwtl
hlt
ret
push
icebp
nop
or
cltd
fwait
jae
pop
sbb
mov
scas
cmc
xchg
pop
pusha
mov
add
mov
fcom
je
mov
nop
les
es
pop
loopne
js
out
mov
mov
mov
jp
lret
stos
in
cmp
bound
cld
push
insb
inc
cltd
pusha
mov
test
xchg
fwait
pop
sub
sbb
mov
shrl
push
xchg
inc
ret
gs
cmp
fnstsw
push
and
xchg
mov
outsb
push
cmp
pop
add
mov
addr16
repnz
lds
das
mov
adc
and
xchg
and
push
xchg
test
dec
negb
adc
nop
add
and
in
out
xchg
cltd
mov
or
mov
insl
stc
cmpsl
movb
xchg
jnp
sub
daa
mov
in
test
jo
push
mov
inc
mov
test
mov
scas
cltd
fildll
mov
and
inc
cmp
shlb
mov
je
jb
es
mov
mov
mov
mov
movsl
pop
mov
call
mov
orb
jg
movsb
movsl
movsl
js
mov
jae
sub
icebp
push
stos
mov
cmc
daa
adc
or
and
stos
es
loopne
fstl
and
stos
movsb
insl
insl
sbb
mov
popf
mov
je
xchg
mov
mov
pop
ljmp
inc
mov
push
and
pop
xchg
leave
je
adc
or
sbb
out
dec
xchg
call
mov
into
scas
into
xchg
adc
xor
xchg
xor
adc
test
pushf
push
push
xchg
fs
xchg
sbb
adc
pushf
or
lds
jno
inc
or
mov
not
mov
xchg
add
test
mov
push
outsb
lahf
adc
cmp
mov
arpl
sbb
je
stos
pushf
fnstenv
adc
mov
xchg
jmp
shr
mov
xorb
or
scas
lcall
mov
cmpsl
fisubrl
mov
or
fwait
nop
mov
jecxz
and
xchg
cmp
mov
fistpll
xchg
movsb
loope
jp
out
mov
xchg
cmpsb
xchg
cmp
cltd
push
mov
out
dec
and
mov
test
daa
movsb
sub
nop
xchg
stos
mov
aam
js
divl
data16
fbld
xchg
adc
add
into
test
mov
add
mov
adc
or
mulb
sbb
cmpsb
stos
pushf
xchg
adc
test
mov
sub
test
fwait
nop
orb
jbe
mov
adc
xchg
leave
sub
dec
cltd
arpl
in
xchg
adc
jecxz
pop
add
movlps
adc
adc
mov
daa
dec
and
push
popa
xchg
mov
fisubrs
in
lret
scas
mov
out
push
cmpsl
mov
mov
stos
lret
mov
rorb
cld
mov
push
fidivrs
sbb
dec
push
inc
adc
push
out
cmp
mov
into
nop
sub
mov
mov
test
adc
adc
jb
stos
leave
movsb
mov
nop
in
or
pop
lahf
xor
fs
lcall
pop
popa
push
sarb
jle
daa
outsl
adc
or
xchg
push
nop
icebp
push
js
popl
repz
jecxz
mov
and
xchg
sub
sub
fcompl
push
fsubr
xchg
or
fisttps
push
jb
test
loopne
out
or
xchg
push
mov
xor
movsl
pop
and
xor
xchg
inc
xchg
xchg
mov
xchg
sub
pop
jecxz
cwtl
xor
and
fmuls
push
and
cwtl
lea
lds
xor
jp
fwait
lret
cmp
lret
jp
lret
jecxz
sub
cmpsb
mov
xchg
push
in
insb
mov
adc
xchg
cmpsl
in
xchg
cwtl
push
fwait
test
in
jmp
push
xor
and
je
xlat
fidivrl
ja
mov
jl
pop
fsts
pop
hlt
inc
fdiv
jecxz
xchg
pop
lcall
in
cmpsb
push
xchg
sub
xchg
mov
fstl
sbb
cli
adc
movsb
mov
unpckhps
inc
jp
aas
sahf
mov
add
jp
jbe
xchg
sbb
mov
sbb
and
std
sbb
int3
xchg
xchg
gs
mov
test
or
xchg
enter
or
sub
cli
movsl
fadd
call
sbb
testb
loope
out
adc
sub
push
pop
jbe
jae
icebp
xchg
mov
mov
lahf
les
insl
or
ret
sbb
sub
and
adc
out
and
pop
xor
daa
scas
push
nop
sbb
mov
lahf
cs
adcl
lcall
js
adc
lock
and
into
mov
and
push
adc
lahf
cmp
xchg
and
add
test
sbb
sub
dec
or
and
sahf
rclb
or
pop
push
or
jecxz
fnsave
fcomip
add
xchg
fisubrs
adc
add
and
fwait
movsb
fisubrl
cmpsl
dec
idiv
nop
and
sbb
sub
and
push
push
test
xchg
xchg
nop
test
scas
xchg
adc
adc
shrl
ret
jge
arpl
or
adc
aaa
add
fcom
das
cld
push
adc
and
add
sbb
mov
xchg
xchg
sbb
gs
mov
es
push
and
mov
mov
movsl
xor
lds
add
xchg
mov
rcrb
jbe
pop
mov
jb
lcall
mov
xchg
sub
and
and
inc
and
nop
icebp
into
cmpsl
cltd
pop
xchg
lcall
jbe
outsb
pop
inc
test
scas
mov
inc
mov
decl
push
push
iret
out
lcall
xchg
pop
jae
pushf
je
cmp
adc
inc
mov
push
dec
movsb
int3
mov
sbb
jns
call
jbe
sbb
or
pop
ret
bound
jmp
mov
test
fld
cld
push
nop
xchg
cmpsl
and
or
js
je
and
aas
movsb
cwtl
mov
lahf
or
inc
imul
xlat
insl
out
stos
xchg
ret
push
lret
adc
movsb
mov
dec
sbb
lret
inc
mov
xchg
test
push
dec
scas
adc
insl
or
test
fs
hlt
cmpsb
stos
pop
xchg
in
fnstenv
es
pop
xchg
push
pop
dec
mov
adc
int
sub
and
es
pop
movsl
push
js
xor
pop
adc
xchg
popa
push
cmp
out
mov
scas
xor
lahf
mov
das
inc
xlat
in
mov
imul
adc
xchg
mov
mov
jne
addr16
popf
jmp
dec
in
push
push
pop
test
sbb
and
xchg
sbb
cmp
dec
mov
movsl
cmp
cli
sub
adcb
mov
inc
scas
fcom
adc
or
fldt
xchg
test
sub
xor
subl
sbb
xchg
xchg
les
clc
adc
sti
jmp
test
push
lcall
adc
enter
cmp
cmp
call
mov
cmp
xor
xchg
or
or
inc
jae
andl
mov
sar
dec
dec
jl
es
sbb
adc
mov
adc
test
and
mov
cmp
xchg
incb
mov
flds
cmp
jne
clc
out
and
mov
mov
mov
pop
or
and
mov
arpl
ljmp
add
sbb
sub
sub
fists
orl
stos
cmpl
mov
mov
iret
shlb
xor
cbtw
mov
xor
push
mov
loop
xchg
cs
xchg
mov
popf
cmp
lret
xorl
sbb
les
jmp
movsb
add
ret
in
xchg
scas
divl
test
popl
clc
mov
jg
mov
push
and
cmp
mov
or
jbe
cmp
add
xchg
les
xchg
pushf
pop
mov
or
and
cmp
and
out
inc
jmp
cli
and
inc
mov
jg
frstpm(287
sarb
dec
enter
mov
adcl
ds
mov
in
xlat
mov
push
xchg
lcall
adc
mov
inc
lret
cltd
in
cmpsl
sbb
sub
push
shrl
adc
js
out
mov
rolb
lock
mov
xchg
mov
ljmp
cmpsl
ds
les
adc
lcall
scas
pop
or
cmp
and
mov
sub
movsb
xchg
mov
xchg
ret
inc
xchg
or
adc
cmc
adc
xchg
xchg
movsb
sar
mov
xchg
and
stos
lcall
mov
out
test
add
xchg
negl
xchg
cmp
sub
stos
les
or
or
push
or
dec
insb
pop
push
mov
xchg
cltd
lcall
adc
mov
xor
and
jbe
ss
and
lahf
adc
sub
fldt
rcrl
jnp
or
int
std
jecxz
or
test
push
mov
sub
add
addb
adc
loop
out
sbb
mov
inc
xchg
cmpsb
test
out
lahf
loopne
stos
or
or
jb
xchg
inc
or
int
and
das
sub
dec
ficomps
stos
in
movsl
adc
push
jb
mov
mov
xchg
lods
jns
adc
pop
bnd
and
jo
adc
lcall
xchg
stos
clc
mov
and
adc
xchg
cmpsl
movsl
inc
cld
xchg
nop
daa
cmpsl
push
mov
and
outsb
pop
adc
mov
cmp
mov
sbb
je
sbb
jge
mov
test
or
sarb
xor
adc
mov
adc
ljmp
mov
test
test
pop
jl
xchg
stos
add
xchg
and
lock
xchg
pop
test
and
movsl
cmpsl
and
mov
mov
sub
mov
jo
adc
cltd
add
xchg
lcall
int3
adc
mov
adc
cmp
jp
pop
lahf
xor
lea
adc
fadds
scas
pop
sub
sub
pop
test
jecxz
addb
ret
xor
xchg
loop
pop
cmc
in
push
cmpsl
fstps
jle
xorb
sbb
adc
invd
sahf
rcrb
stos
fidivrs
incb
ljmp
stos
jle
cmp
loop
sbbb
sbb
mov
mov
lcall
adc
das
out
popl
or
mov
nop
adc
adc
adc
sub
push
les
sbb
sbb
cmp
fsubrl
movsl
mov
pop
mov
daa
movsb
outsb
mov
jg
adc
nop
stos
popf
movsl
std
addb
loop
mov
sub
aas
mov
sbb
movsl
and
or
xchg
pop
or
mov
ret
cltd
or
push
jbe
stos
mov
and
repnz
jb
or
pop
sub
inc
mov
jmp
cmp
xchg
mov
pop
lcall
and
sub
loope
add
aaa
mov
and
out
xor
xchg
addr16
lahf
nop
aas
adc
push
lds
adc
mov
pop
fwait
or
mov
and
test
xchg
and
cld
fwait
lret
jae
cltd
mov
push
data16
sub
xchg
push
push
les
cltd
mov
leave
bound
sub
stos
mov
sbb
sub
sub
jle
rclb
pop
pop
mov
shll
outsb
mov
mov
sahf
in
xchg
mov
adc
addr16
jmp
adc
and
pop
cltd
sbb
or
in
sbb
or
call
xchg
movsl
fcompl
and
jne
cmpsl
xor
push
iret
sbb
lahf
inc
mov
cwtl
mov
lar
and
jge
and
xchg
pop
cmpsl
repz
push
sub
or
xchg
lea
lock
push
ds
lcall
xchg
test
scas
sbb
xlat
ja
adc
dec
mov
cwtl
stos
in
out
cmpsb
sbb
adc
xchg
adc
xchg
test
daa
mov
jp
xchg
in
mov
nop
arpl
pop
cs
xor
xchg
adcl
jg
fldt
adc
orb
das
jae
lahf
xor
out
mov
xchg
orl
cwtl
cltd
les
cmpsb
stos
out
pop
lahf
sbb
scas
xchg
and
fists
mov
xlat
xchg
iret
pop
pop
sub
sbb
mov
iret
fwait
adc
pop
mov
cwtl
jae
xchg
adc
jo
pop
xchg
mov
mov
push
cltd
jae
xor
sub
add
test
fiaddl
sbb
sub
pop
loop
and
jno
nop
mov
xchg
outsb
adc
fildll
mov
mov
vpmacssdd
xchg
mov
and
sub
sub
mov
js
or
je
and
sbb
add
cmp
icebp
mov
xchg
dec
and
test
adc
or
adc
and
mov
inc
std
xor
and
xchg
pop
mov
or
mov
lcall
shrb
adcb
insb
test
sbb
push
sub
nop
xchg
clc
sub
pop
xchg
cmp
rcll
popl
push
or
inc
dec
loope,pn
sbb
cld
ljmp
mov
mov
or
xchg
pop
sbb
xchg
movl
push
and
imul
jg
xchg
outsb
jb
cmpsl
cwtl
fucomp
jmp
xchg
stos
je
and
pop
mov
stc
clc
xchg
loop
adc
rclb
add
mov
imul
nop
mov
mov
daa
loopne
xchg
sbb
jno
adc
cld
dec
cmp
xchg
test
jecxz
lea
and
mov
jle
add
out
stos
xchg
mov
push
pushf
or
mov
pushf
or
and
jo
mov
iret
fwait
sahf
fiaddl
fwait
pop
lcall
jb
sub
mov
inc
cvtpi2ps
mov
jmp
out
xchg
dec
mov
sub
daa
fwait
xchg
add
jp
cmpsl
clc
jle
test
or
and
xchg
or
fcoms
mov
test
mov
adc
jle
adc
pop
xchg
les
mov
test
add
test
sub
bound
inc
fnstenv
test
lahf
jl
dec
pop
ss
jae
es
xchg
and
mov
adc
sub
sbb
popf
xchg
ret
movsb
imull
mov
xchg
adc
and
xor
push
inc
xor
add
iret
mov
adc
fidivrl
jmp
adc
sbb
rorl
pop
jbe
adc
jle,pt
psraw
cmpsb
adc
and
jae
cltd
fsubrs
add
sqrtps
in
xchg
adc
xchg
addr16
pop
out
call
stos
xchg
nop
xchg
fwait
lock
and
cmc
adc
fwait
gs
cmp
pop
in
xor
test
adc
jge
sub
daa
cmc
lret
pop
lds
mov
test
pop
adc
sub
inc
push
cmc
mov
push
xor
movsl
popl
ja
xchg
cmpsb
arpl
imul
sub
les
push
es
fimull
lret
mov
movsl
cltd
xchg
or
rcrl
inc
adc
xlat
adc
rcrb
repz
sbb
xchg
xchg
mov
movsl
mov
cmpsb
add
jno
push
rclb
xor
loopne
je
cmpsl
mov
jg
in
lahf
pop
pop
insl
pop
out
sub
xchg
lcall
js
pop
pop
outsb
and
hlt
std
mov
scas
out
dec
fstpt
mov
adc
adc
stos
push
or
adc
stos
and
jo
xchg
daa
mov
decl
insl
mov
xor
and
stos
and
push
adc
mov
nop
or
mov
xchg
cmp
mov
pop
cmp
sbbb
dec
out
or
cmpsb
inc
movsb
jmp
lock
and
js
sub
xlat
out
test
push
jl
add
outsl
fwait
mov
ljmp
pop
xchg
inc
outsb
into
mov
test
and
adc
or
xor
ret
sub
jbe
and
stc
cli
jae
or
adc
insb
movsl
inc
and
outsl
sub
xchg
test
push
sub
sub
scas
mov
mov
xor
sbb
pop
pop
or
movsb
stos
adc
mov
or
lahf
sub
or
std
rcrl
xchg
add
ficoms
call
xchg
dec
xchg
inc
test
xchg
xchg
push
xchg
test
push
stos
divl
shrl
xchg
inc
js
clc
inc
lods
cmc
xchg
xchg
sub
xchg
je
out
jmp
mov
adc
repz
js
stc
sar
mov
jae
test
adc
lock
xchg
pop
push
sbbl
mov
and
into
mov
or
xchg
pusha
and
add
rorl
into
xchg
fcoms
dec
into
es
daa
dec
pushf
jecxz
movsl
pop
fisubs
and
adc
rcl
lret
jnp
lahf
lea
cmpsl
dec
out
daa
or
sbb
cwtl
xchg
cmpsb
fwait
pusha
gs
nop
lahf
repz
daa
pushf
cltd
pop
sub
ret
gs
scas
xlat
mov
cmp
scas
test
inc
xchg
das
sbb
jae
and
icebp
mov
xchg
jle
lcall
xor
scas
incb
adc
mov
xchg
mov
jns
dec
push
and
out
lahf
xchg
lock
mov
jno
xchg
xchg
std
mov
xchg
sbb
sbb
imul
or
shrl
xchg
mov
sbb
fisttps
imul
sbb
sub
xchg
arpl
mov
adc
scas
ss
mov
andl
cltd
out
xchg
outsl
adc
xchg
jmp
insl
xchg
mov
test
push
loopne
stos
pop
and
xchg
push
dec
ret
outsl
jnp
pop
xchg
mov
xchg
cmp
or
mov
ljmp
sub
cwtl
or
jb
mov
in
adc
sbb
pop
into
pop
movsl
adc
out
sbb
rsqrtps
pop
addr16
mov
jo
and
cmp
mov
mov
adc
fsqrt
add
lahf
rcrl
orl
pop
out
mov
mov
or
xor
sub
and
dec
or
sub
and
mov
xchg
cltd
sahf
and
xor
fwait
lcall
cmc
push
scas
mov
xchg
adc
or
fstpt
je
xchg
and
push
sub
subb
sbb
incb
ljmp
xchg
daa
test
adc
iret
negl
cs
and
mov
cltd
push
and
adc
pop
sbb
adc
shrl
and
fcomip
dec
xchg
adc
insl
lahf
addr16
cltd
xor
js
ret
in
xchg
test
mov
or
cmp
jle
lods
andb
outsl
xchg
test
fwait
add
int
adcb
adc
pop
adc
jo
std
lcall
scas
sbbl
stos
push
mov
or
mov
out
xchg
pop
inc
lds
imul
sar
cmpsb
xchg
shlb
lcall
das
es
mov
cmp
jo
cltd
sbb
shll
jae
repnz
push
daa
pop
cwtl
cwtl
or
cmp
mov
cmpsl
cltd
add
fadds
jbe
stos
sub
movsb
or
xchg
in
xchg
mov
movsb
popl
cltd
xchg
mov
or
sub
adc
push
inc
mov
jmp
pop
rcll
loop
push
mov
adc
pop
adcl
lcall
push
mov
mov
sub
sbb
sbb
mov
push
fwait
cs
fnstcw
jp
ret
testl
jge
or
and
mov
out
pop
mov
bound
stos
adc
pop
inc
pop
and
mov
rolb
and
pop
xchg
jp
divb
jp
jno
sub
inc
lea
scas
add
pop
sbb
xchg
stos
cltd
and
dec
ror
mov
gs
sub
test
pop
mov
or
adc
sub
xchg
adc
adc
xchg
cmpsl
cltd
adc
aam
or
shrb
xchg
xchg
adc
pop
xor
stos
dec
imull
sbb
cs
adc
sarl
sbb
xchg
js
jp
in
idivl
sub
xchg
jmp
stc
pop
xchg
out
sub
add
mov
xchg
iret
mov
pusha
lock
test
sub
ljmp
push
sbb
pop
mov
adc
push
xchg
sbb
lea
fidivrl
xchg
icebp
negl
pop
mov
and
jl
push
leave
xor
inc
scas
pop
adc
mov
xor
sbb
bound
mov
adc
test
lods
pop
jp
dec
aam
xchg
mov
cmpsl
sbb
jbe
adc
jbe
or
pop
sti
mov
lahf
iret
imul
adc
adc
dec
es
or
or
mov
push
mov
mov
and
xchg
inc
mov
sub
xchg
jno
push
xchg
xor
mov
add
pop
jno
mov
mov
adc
lret
sub
faddp
add
mov
push
jb
movsb
std
test
jg
test
push
xchg
mov
mov
pop
adc
mov
xchg
sar
xchg
adc
xchg
cltd
insb
arpl
push
mov
jecxz
cmc
cmpsb
and
sbb
mov
pushf
cwtl
div
sbb
cmpsl
cld
cli
movsb
stos
mov
and
adc
and
in
push
notl
fs
and
sub
aaa
js
out
sbb
subb
gs
xor
out
sub
jmp
out
pop
test
lret
sub
cmpsl
sbb
fs
stos
adc
jmp
add
adc
xchg
iret
out
clc
xchg
push
and
dec
dec
push
cmpsl
popa
xchg
xor
rcll
lods
je
cwtl
sub
jno
pop
xor
bound
insl
mov
jb
outsb
xchg
lcall
inc
push
push
sbbl
mov
xlat
or
out
jle
xchg
ss
or
cmp
pusha
xchg
push
sbb
setbe
or
mov
and
in
sbb
xchg
movntps
lcall
xchg
movsl
cwtl
pop
jae
movsb
cmp
popf
push
sub
scas
xor
mov
and
adc
xchg
test
adc
jae
cmpsb
push
test
pop
out
shlb
test
mov
test
cmp
or
cmp
jno
xchg
jae
sbb
push
bound
xchg
mov
cmc
pop
mov
daa
scas
dec
adc
sbb
push
adc
and
mov
adc
mov
insb
std
or
jae
stos
stos
test
lahf
xchg
jae
adc
scas
cmp
test
movsl
sbb
mov
xchg
sbb
jno
add
xchg
test
mov
and
orb
pop
pop
mov
outsb
pop
mov
iret
inc
xchg
dec
or
sbb
sbb
pop
push
mov
jle
adc
and
mov
clc
mov
mov
icebp
std
pop
mov
dec
ficoml
xchg
add
jle
mov
clc
ds
adc
jmp
movsl
adc
pcmpgtw
mov
add
cmc
mov
xchg
push
in
sub
enter
xchg
xchg
imul
je
and
mov
lahf
mov
and
sbb
nop
stc
push
sbb
out
push
or
and
mov
adc
or
mov
pop
movsb
xchg
pusha
push
mov
sahf
les
popa
fs
in
lods
mov
daa
fcoml
sbb
adc
stos
lret
mov
mov
mov
es
push
dec
fidivs
movsl
sbb
xchg
mov
or
inc
xchg
and
enter
xchg
pop
test
repz
test
cwtl
and
stc
adc
enter
sbb
push
xchg
in
sub
or
jae
mov
mov
out
loopne
cltd
pop
mov
stos
das
xchg
das
cmpsb
out
adc
das
scas
add
xchg
push
cmp
into
popa
or
arpl
xadd
pop
dec
gs
and
adc
ficoms
adc
xchg
xchg
out
xchg
lahf
and
call
clc
or
fsubl
xchg
lods
xor
push
scas
cmpsb
xchg
sub
sub
cmpsl
and
xor
jge
daa
or
xchg
sbb
iret
xchg
stc
jbe
pop
dec
sub
jl
or
xor
xor
cltd
das
xchg
rorb
sbb
cltd
jle
cmp
sbb
mov
xchg
cwtl
mov
and
xchg
push
mov
out
decl
and
xchg
fwait
mov
cmp
insb
stos
lods
andb
je
cltd
lcall
aam
sbb
idivb
mov
dec
shll
mov
or
rorl
jns
ja
ret
out
and
cmp
in
jle
mov
sub
lea
or
cs
orl
and
std
xchg
mov
stos
xchg
daa
or
mov
popa
xor
lahf
xchg
arpl
mov
push
sub
and
xchg
test
mov
inc
push
in
pcmpgtw
or
sbb
rorl
xchg
daa
xchg
psubusb
cwtl
sahf
inc
sbb
cmpsl
jl
daa
adc
mov
adc
sbb
std
and
sub
testl
xchg
lret
adc
xor
sbb
or
repz
int
insb
test
movsb
adc
jle
stos
insb
jae
sub
mov
mov
and
sub
xchg
cmpsb
bnd
adc
out
pop
mov
pop
xchg
and
sub
sub
jmp
cmc
adc
sub
push
cmp
lcall
pop
rclb
xchg
add
orl
jp
push
adc
pop
push
ret
not
in
stc
xchg
lcall
xchg
out
mov
lahf
sub
mov
mov
or
in
test
sbb
cmpsl
test
stos
in
lret
xchg
movsl
fs
pop
push
xchg
subl
adc
nop
and
je
sbb
iret
mov
and
nop
iret
int3
mov
or
sbb
lcall
and
sbb
inc
mov
mov
pushf
daa
jno
stos
mov
mov
cmp
ljmp
dec
das
xchg
xchg
sub
pop
sub
stos
adc
mov
stos
mov
or
or
xor
pop
sahf
or
adc
movsb
and
dec
jle
sub
je
xchg
hlt
das
mov
add
lcall
pop
mov
scas
cmovns
adc
jno
daa
aaa
cld
mov
cwtl
cwtl
fnsave
xchg
das
adc
test
es
pop
lret
xorb
cltd
sbb
or
hlt
add
aas
mov
nop
in
movsl
push
std
mov
and
mov
and
fwait
loope
adc
xchg
nop
lahf
cmpsl
or
jl
mov
mov
movb
sbb
adc
repnz
andl
pop
mov
xor
es
mov
xchg
cmp
xor
sub
rolb
push
in
je
pop
xor
cmpsb
sub
imul
sbb
stc
sti
mov
mov
cs
lock
xchg
push
xor
add
sbb
lods
lahf
adcb
pop
incb
cmc
movsl
out
pop
lcall
cmpsl
xchg
mov
data16
xchg
mov
add
xor
ljmp
xchg
xchg
lcall
push
cwtl
adc
sarl
mov
in
insb
pop
out
leave
add
cmc
dec
lods
scas
mov
pop
pop
out
nop
pushf
movsl
gs
xor
or
push
hlt
pop
jno
lahf
push
pop
fbld
fsubl
loope
mov
and
mov
xchg
xchg
sbb
adc
pop
pop
jae
stos
adc
sbb
pop
rorb
xor
mov
lcall
test
mov
into
and
ljmp
in
flds
and
sub
lahf
add
ljmp
mov
loope
cwtl
xchg
pop
out
outsl
aas
orl
fs
sbb
stc
add
mov
js
push
xchg
in
das
jecxz
lret
xchg
xchg
jb
movsl
sbb
xchg
sub
cltd
push
or
cwtl
lret
mov
and
add
sub
jle
xchg
adc
test
xchg
dec
andl
cmp
mov
pop
sub
popa
xchg
fdivl
mov
jnp
lahf
sbb
pushf
call
ficoms
inc
add
dec
mov
push
in
and
adc
divl
je
xchg
f2xm1
cmpsl
dec
int3
xchg
movsb
cs
cli
jmp
push
out
fsubrs
sbb
out
in
xor
movsb
stos
xchg
jae
xchg
mov
popl
lret
and
cli
mov
outsl
sub
adc
pop
jne
movsb
cwtl
dec
xor
adc
fists
push
mov
fidivrl
mov
addb
and
leave
sbb
inc
loopne
popf
mov
cltd
out
mov
jo
and
subl
out
daa
xchg
sub
or
xchg
xor
jno
adc
sbb
call
negb
push
xchg
cltd
or
fistps
cmp
lret
nop
xor
mov
test
mov
loop
notl
xchg
xchg
out
xor
push
call
pop
cmpsb
mov
pop
outsb
mov
or
mov
jo
sbb
mov
sahf
psrlw
mov
clc
mov
cwtl
xchg
jnp
mov
or
push
es
stc
adc
mov
pop
sbb
iret
fildll
inc
nop
testl
mov
test
push
adc
cmpsl
mov
adc
daa
mov
aaa
add
xchg
mov
mov
and
xor
arpl
jo
and
loopne
xchg
sbb
lcall
stos
pushf
push
sbb
lcall
or
xchg
cld
hlt
xchg
and
adc
in
pop
cmc
xchg
or
call
push
or
or
repz
jne
nop
pop
mov
cmpsb
mov
rclb
into
jne
mov
inc
sub
je
pop
mov
inc
or
scas
jb
and
stos
mov
bswap
xchg
jg
cmp
xchg
stos
movsl
iret
dec
jo
sbb
outsl
and
xchg
xchg
fwait
adc
cmc
adc
mov
mov
and
mov
jb
nop
xchg
cltd
imulb
sub
mov
pop
fmulp
stos
and
sarb
mov
sub
enter
adc
das
cmc
and
xlat
std
dec
shrl
xchg
rorl
sahf
cltd
stos
mov
cmp
testb
add
sub
jbe
jb
adc
stos
xor
mov
xchg
sbb
addb
adc
cmpsl
xchg
movsb
adc
lcall
test
sahf
aam
mov
bound
xchg
sub
jge
xchg
mov
lock
xchg
xor
sub
pop
sub
xor
popf
push
and
stos
mull
or
lea
xchg
push
out
sub
pop
lahf
xchg
pop
jae
xor
in
adc
mov
mov
daa
xchg
lret
std
adc
sub
inc
lods
cmp
enter
test
xchg
adc
imul
xchg
or
sahf
adc
stc
daa
push
cld
pop
pop
sub
movsb
repnz
in
nop
mov
jmp
xchg
xchg
inc
sbb
xchg
push
fsubs
test
xchg
pop
mov
rolb
jbe
adc
lahf
lcall
jp
or
jle
in
sbb
mov
push
sub
push
pop
jl
pusha
mov
lock
inc
cmp
es
jge
es
sub
adc
dec
push
lcall
adc
cwtl
and
flds
pop
leave
movsl
ret
push
mov
lahf
sbb
sub
stos
jno
adc
xchg
daa
xchg
imul
sahf
or
bndstx
sub
mov
push
xchg
or
sti
cmpsl
xchg
notb
mov
xchg
push
nop
adcb
push
cwtl
or
mov
xchg
adc
test
sbb
lahf
jb
or
dec
mov
push
push
cmpsb
mov
jg
jg
fbld
push
sub
inc
psubb
mov
xchg
push
movsb
cmpsb
inc
cmpsb
lcall
fstpl
push
andb
push
xchg
cmpsb
cmc
and
stos
cli
and
dec
into
cmc
or
int3
into
inc
xcrypt-ecb
cmpsl
testl
and
jp
mov
pop
movntps
and
or
lods
mov
xchg
lea
mov
or
push
fmuls
inc
int
into
mov
or
lcall
pop
and
je
stos
xor
mov
or
cmpsl
and
xchg
inc
xchg
jecxz
std
mov
push
add
mov
lock
fsubs
insl
xchg
lret
cmpsl
lret
vpmacsww
mov
pop
pop
sub
movsl
xchg
fwait
mov
xchg
mov
sub
nop
pop
pop
insb
bound
mov
cmp
sbbb
mov
sbb
shlb
jbe
fwait
and
sbb
pop
lcall
adc
pop
add
iret
inc
xor
movsl
and
nop
cmpsl
and
mov
add
adc
adc
xchg
sbb
add
cltd
test
mov
out
icebp
mov
xchg
mov
jbe
dec
push
icebp
xchg
movsb
mov
pop
cmp
xchg
xchg
pop
sbb
cmpsb
xchg
adc
dec
xor
mov
or
fwait
lahf
lret
je
or
and
cs
popf
cmp
xchg
push
mov
cwtl
xchg
clc
cmp
jb
and
cmpsb
pop
movsl
mov
mov
or
stc
add
ret
adc
out
cltd
fimuls
and
push
into
adc
insb
jne
stc
movsl
lcall
inc
loop
es
dec
mov
mov
clc
andb
pusha
ljmp
or
andb
and
into
xor
in
cld
cltd
mov
clc
popf
outsb
stc
lahf
adc
and
cltd
fwait
dec
jno
and
jp
pushf
cmpsl
dec
cld
cltd
xchg
fldcw
jae
adc
inc
daa
xor
mov
push
jae
add
pop
inc
add
mov
mov
sub
pop
stos
mov
cmp
or
cmpsl
cli
or
inc
jno
movsb
cmpsb
sub
fs
xchg
adc
cmc
rorl
adc
test
lret
adc
xchg
mov
loopne
pusha
fs
sbb
sub
stos
mov
xchg
lahf
in
daa
xor
insl
dec
nop
mov
xchg
clc
rcl
cwtl
add
int
cs
push
jno
mov
sub
mov
dec
push
fstpl
js
mov
xchg
lcall
xchg
pop
movsb
sbb
lahf
movsl
gs
rcr
fiadds
sub
test
cmpsb
stc
adc
loop
xchg
outsb
adc
sub
and
je
adc
test
adc
xorl
or
xor
int
cmc
arpl
cltd
push
cmp
and
and
dec
adc
mov
and
in
xchg
pushf
push
push
int3
xchg
je
xchg
lcall
in
stos
lahf
iret
push
push
aaa
into
add
adc
xchg
cltd
test
lods
xor
mov
iret
cli
cmpsb
frstor
stos
jg
movsw
enter
jge
push
cmpsb
sub
push
jno
or
out
pushf
test
jnp
sbb
xchg
jecxz
adc
sub
pop
jl
xor
mov
sub
repnz
sub
mov
add
fcmovnu
inc
cmpsl
sub
and
repnz
stc
nop
xchg
xchg
jnp
mov
xchg
mov
jno
lahf
mov
sbb
add
mov
lahf
adc
mov
icebp
mov
fucomip
push
mov
jno
mov
sbb
sub
xchg
movsl
sub
cmc
movsb
cmc
sub
pop
mov
fimull
negl
sbb
clc
add
cmpsb
repz
sub
push
xchg
cltd
jmp
xchg
das
or
xor
movsl
stc
jno
dec
mov
and
mov
test
sbb
mov
add
sahf
aaa
cmpsb
jne
mov
rorb
dec
out
aam
xchg
cvtps2pd
xchg
lcall
fwait
xchg
xchg
movsb
ret
test
sbb
xor
movsb
adc
leave
lcall
push
lods
pop
and
xor
movsl
push
xchg
out
add
or
sub
and
stos
jb
or
pop
jns
test
adc
xchg
incb
sub
pop
mov
out
adc
notl
xchg
and
fdiv
push
jae
pop
mov
movsb
mov
xchg
cltd
dec
orb
cmp
pushf
mov
xchg
cwtl
adc
clc
jae
sub
out
pushf
mov
add
js
cld
cld
cmpsb
stos
sub
mov
xor
sbb
sbb
shll
cmpsl
adc
push
mov
adc
xchg
mov
stos
cwtl
in
pause
or
xor
leave
adc
das
jle
adc
or
sbb
outsl
mov
pop
movsb
in
adc
sub
sub
adc
adc
and
or
xchg
stos
sub
mov
jge
and
in
jbe
push
stos
push
sbb
nop
xchg
mov
insl
mov
stos
pop
push
and
call
dec
sbbb
jmp
xchg
rorb
xor
stos
sub
sahf
xor
xchg
sbb
js
jb
cmpsl
sub
and
mov
sbb
jae
test
lret
frstor
mov
jp
sbb
or
xchg
into
cmpsb
pop
movsl
or
push
cmpsb
flds
lods
xor
cwtl
and
scas
jge
and
sbb
xchg
mov
test
test
dec
scas
pop
or
and
imull
fdivp
movsl
je
xchg
scas
loopne
nop
inc
and
lret
out
xchg
xor
outsl
stos
mov
test
mov
js
iret
add
and
ret
stos
pushf
pop
repz
add
sub
int3
movb
cltd
stc
repnz
out
jno
and
and
dec
sub
mov
add
test
adc
mov
xchg
pop
icebp
mov
sbb
cwtl
lcall
and
fmul
pop
jbe
test
stos
in
rorb
cwtl
mov
xchg
lret
xchg
adc
lahf
je
or
sarl
fbld
push
test
sbb
mov
das
jmp
je
movsb
jae
int
xchg
loop
loop
dec
fidivl
pop
lods
adc
sub
mov
and
inc
daa
add
lahf
movsl
cltd
test
stos
adc
inc
pop
mov
and
adc
mov
std
mov
jo
xchg
adc
rcll
xor
jb
and
and
mov
mov
arpl
adc
call
es
movsl
and
push
pushf
mov
xchg
mov
iret
mov
cltd
imul
into
and
xchg
pop
nop
lahf
adc
cmp
adc
jae
outsl
jns
sub
adcl
out
sbb
lahf
sbb
adc
or
bnd
stc
lcall
or
mov
dec
mov
xchg
popw
adc
daa
cmpsb
mov
lcall
lahf
or
and
pop
insb
jbe
sbb
mov
and
push
adcb
sub
sbb
sub
jmp
or
xchg
je
and
lcall
jecxz
movb
rolb
sahf
mov
mov
dec
out
sub
mov
xor
or
xchg
push
psubd
es
in
mov
inc
iret
push
out
mov
fisubs
outsl
and
sbb
pop
pop
jno
xchg
mov
adc
and
xor
add
jae
add
and
cwtl
push
mov
clc
scas
std
jp
pop
stc
test
add
xor
sbb
xchg
movsb
jno
sub
push
mov
sbb
dec
xchg
test
nop
inc
movsl
mov
pop
mov
je
and
sbb
ds
sub
sti
xchg
mov
hlt
ss
cltd
cmc
jg
push
adc
out
xchg
jge
mov
daa
and
sbb
nop
and
dec
rcrl
xchg
sbb
scas
mov
sub
add
into
in
and
test
and
dec
sbb
mov
pop
fwait
rcr
push
jg
xchg
push
cmp
jecxz
add
cwtl
lods
adc
or
jbe
xchg
mov
sbb
xchg
lcall
movsl
xchg
push
fstl
xchg
call
sub
mov
mov
fwait
xor
fwait
inc
cs
outsl
sbb
mov
push
sbb
cmpsl
ljmp
movsb
and
mov
imul
mov
stos
movsb
push
mov
dec
xchg
ljmp
mov
xchg
imul
xchg
stos
xor
push
mov
jo
cmpsl
mov
ljmp
xchg
xchg
pop
in
mov
xor
adc
sub
jmp
cltd
mov
std
loopne
or
add
jae
addr16
loop
xchg
ret
or
lods
and
mov
out
mov
sbb
mov
push
scas
mov
cltd
push
add
push
pop
aad
xchg
adc
sbb
xadd
jp
lock
sbb
dec
cli
mov
mov
and
test
adc
lcall
xchg
sbb
cwtl
and
xchg
sub
xchg
xchg
pusha
outsl
lock
sbb
xchg
sub
cmpsl
mov
xchg
fwait
pop
push
mov
xor
push
and
adc
sub
into
icebp
xchg
xchg
cmpsb
push
xrelease
sub
mov
scas
dec
sub
sbb
repnz
test
adc
xor
jg
push
loop
sub
out
mov
adc
lds
fbld
xor
out
cmp
stos
daa
mov
add
jecxz
sub
xchg
push
push
xor
adc
repnz
cwtl
mov
scas
arpl
and
enter
or
stos
mov
or
imul
sbb
and
mov
sub
pop
push
sbb
inc
sub
push
cltd
cmp
mov
mov
adc
fdivl
stc
fldl
push
es
cmpsl
pop
dec
nop
dec
in
sti
mov
sub
xchg
aaa
mov
data16
daa
xchg
lods
and
xor
stos
into
jbe
pop
bound
movsl
jae
xchg
mov
adc
mov
mov
sub
lcall
mov
lea
cltd
push
les
jp
test
pop
ss
jl
sbb
les
dec
stc
adc
and
sbb
cld
leave
cmp
in
cmc
stos
and
xchg
sahf
lahf
fwait
cmpsb
call
dec
sub
daa
lahf
sbb
das
cmp
xchg
xchg
pop
daa
adc
pop
adc
cwtl
xchg
stc
lea
sub
shlb
inc
pushf
xchg
jae
xchg
mov
sub
movsl
adc
sbb
push
jnp
mov
jg
cmp
push
movb
mov
sub
cmc
xchg
sbb
adc
mov
jo
sbb
mov
jp
jbe
and
lods
pop
clc
mov
lahf
mov
xor
cli
cltd
in
adc
xchg
pusha
std
inc
mov
test
movsl
movsb
sub
mov
cmp
lcall
imul
xchg
adc
in
push
xor
lcall
cmp
pop
or
daa
les
pop
mov
sbb
insb
cwtl
in
iret
xchg
wrmsr
and
ds
and
out
movsb
add
enter
sbb
fwait
pop
int3
mov
test
xchg
test
daa
mov
xchg
mov
loop
je
pop
test
lcall
je
sbb
fwait
adc
mov
and
outsl
nop
or
mov
sub
xchg
mov
daa
dec
pop
jae
sbb
test
nop
aam
add
push
fisubs
and
insl
xchg
mov
xor
xchg
xchg
cwtl
adc
in
test
lea
es
imul
stos
push
jne
subb
sbb
adc
jle
mov
and
jle
rcrl
lahf
mov
adc
jb
movsb
sub
mov
outsl
xchg
cwtl
cltd
or
add
xchg
sbb
sahf
fldcw
je
lcall
sbb
xchg
pop
jle
and
sbb
pop
cltd
fsubrl
mov
jne
ljmp
cmpsl
xchg
and
stc
xchg
sub
mov
and
and
addb
adc
and
xchg
and
push
jecxz
push
jae
mov
dec
adc
sub
xchg
or
xchg
sbb
or
xchg
or
cmp
arpl
cmp
lcall
sbbb
dec
arpl
pop
iret
dec
xchg
lods
into
mov
xchg
cmp
insb
sub
mov
sbb
cmp
sub
cltd
xchg
mov
test
sbb
xor
mov
inc
xchg
and
and
or
dec
clc
and
pop
xchg
mov
and
sub
jecxz
lock
mov
mov
scas
push
test
fstp
andb
je
or
sahf
jmp
sub
xchg
lock
adc
cli
jecxz
cltd
xchg
out
fwait
add
sbb
adc
jle
add
xor
jno
movsb
sub
xlat
fmul
lock
rcrb
adc
das
movsb
adc
stos
mov
sbb
enter
push
enter
adc
push
and
and
xchg
mull
movsl
orb
pop
stc
jmp
test
push
pop
hlt
fimuls
jae
or
ret
and
and
jle
pop
movsb
test
insl
push
stos
out
inc
xchg
and
cltd
sub
adc
and
pop
pop
sahf
ljmp
sahf
lcall
adc
cltd
jb
mov
pop
aam
es
jg
test
jl
jae
xchg
pop
adc
or
pop
sbb
xchg
insb
mov
mov
inc
clc
adc
pop
push
sbb
pop
je
mov
cmp
adc
enter
xchg
in
mov
lock
sahf
cs
stos
fists
iret
cmpsl
jns
sub
xor
jns
stos
loope
jne
xchg
pop
xchg
mov
shrb
adc
and
and
sbb
dec
xchg
mov
xor
xchg
add
and
add
jb
daa
push
popa
test
cltd
aad
xchg
jae
xchg
fwait
mov
movsl
aas
and
or
or
imul
insl
sbb
cwtl
rcrl
and
mov
out
sbb
adc
pop
xchg
cmpsl
lea
dec
aas
in
scas
dec
nop
mov
push
xchg
pushf
pop
insl
jp
daa
jle
jo
cltd
test
jmp
and
push
outsb
xchg
insl
sub
mov
mov
stos
xchg
lods
cmp
frstor
in
and
in
xor
mov
orb
aaa
pavgw
sbb
mov
pop
cwtl
pop
mov
mov
inc
and
inc
notl
dec
shlb
test
jbe
or
sub
test
jb
and
mov
fwait
dec
xor
imul
pop
sub
scas
lds
push
pop
dec
imul
or
mov
sub
test
sub
pusha
addb
add
jo
mov
push
jae,pn
lods
test
mov
ljmp
jbe
or
pop
out
adc
xchg
inc
xchg
lcall
sub
xchg
es
hlt
xchg
fsubl
cltd
lcall
sub
jnp
adc
pop
and
and
mov
es
fisttps
rsm
sbb
lcall
call
mov
mov
fsubs
or
xchg
adc
iret
jno
adc
fdivrp
pavgb
sub
fwait
pushf
daa
jbe
xchg
int
xor
and
mov
inc
lahf
and
sub
dec
jo
lahf
adc
xor
dec
fsts
pop
adc
pop
mov
lock
sbb
lea
or
xchg
xchg
iret
into
nop
cmp
ret
lahf
test
cld
sbb
mov
and
cwtl
xchg
xchg
aas
test
mov
inc
addr16
xchg
sub
sub
je
sbb
das
insb
cltd
mov
lock
jmp
pop
cwtl
lcall
paddb
ret
pop
cmc
sahf
ret
mov
movsl
mov
jle
sbb
lds
push
mov
movsb
mov
stos
sub
push
lcall
pop
mov
test
clc
sbb
pop
add
xor
icebp
sub
test
or
sbb
cwtl
push
lret
sub
xchg
jae
xor
xor
xchg
pop
xchg
es
mov
dec
fistps
push
clc
stos
imul
pop
cltd
inc
adc
mov
movsl
daa
sub
push
fwait
test
call
xchg
jmp
pop
iret
and
pop
stc
sbb
mov
inc
cmc
out
sbb
ret
in
lcall
stos
adc
test
jle
lds
xchg
and
outsb
or
sub
paddsw
out
sbb
xchg
xchg
and
mov
xchg
daa
mov
movsl
cwtl
into
pop
or
push
cwtl
sub
cmp
test
stos
lcall
xor
push
jo
and
mov
mov
or
test
cmpsl
xchg
add
popf
aad
adc
mov
fwait
adc
call
lahf
xchg
scas
fcoml
jo
nop
mov
adc
xor
rorb
mov
cmpsl
mov
or
je
and
mov
lea
or
cmpsl
dec
ljmp
lcall
repz
or
and
push
xchg
jmp
mov
je
xchg
mov
mov
sub
in
in
jae
and
test
mov
xchg
xchg
xor
mov
adc
scas
stc
int3
jae
pop
xor
and
cmp
out
mov
mov
sub
lret
mov
mov
in
scas
insl
mov
nop
pushf
xchg
out
lret
adc
movsb
or
mov
cmc
cmpsl
stos
xchg
adc
fstp
push
xchg
lcall
sbb
ud1
incb
xchg
adc
xchg
shrl
aas
push
movsb
push
dec
daa
mov
or
xchg
orl
mov
or
dec
mov
mov
or
pop
cmp
xchg
je
sub
push
xchg
test
push
es
push
xchg
sub
add
pushf
xchg
fs
mov
push
sbb
push
xchg
cwtl
jae
mov
push
mov
xchg
jmp
xchg
xor
jbe
pop
adc
lock
std
into
sbb
sub
xchg
stos
icebp
and
and
js
sbb
jbe
mov
mov
stos
sbb
leave
jno
cmpsl
es
scas
and
xor
or
call
out
scas
or
addr16
sub
aaa
and
mov
sbb
pop
mov
test
ss
and
mov
and
pop
push
call
imul
jmp
sub
push
sbb
or
fsubrs
subb
ret
push
jno
and
pop
cmpsl
test
mov
push
xchg
push
and
idivl
lcall
add
inc
adc
ret
aas
mov
orl
mov
dec
jle,pt
outsl
or
pop
daa
and
and
push
test
je
adc
sub
fbld
and
xchg
and
sub
sub
idivb
pop
lahf
mov
movlps
std
sub
add
js
test
adc
arpl
cmpsl
ret
add
xchg
lods
jns
lcall
pop
add
divl
jae
mov
inc
sub
cmp
mov
rcrb
or
mull
stos
cmp
pop
push
pop
adc
std
jl
dec
insl
push
pop
jge
in
clc
mov
xor
sub
pop
outsb
adc
add
jg
xchg
cmc
lock
xchg
adc
adc
or
push
adc
xchg
or
sub
sub
and
or
adc
cmpsl
adc
xchg
popf
fwait
push
xchg
mov
adc
adc
xchg
mov
mov
xor
and
ds
jb
mov
sbb
cmpb
and
adc
push
daa
adc
fists
xchg
cltd
scas
fwait
adc
sub
xchg
pop
adc
bound
dec
out
push
scas
cmpsl
scas
mov
cltd
xchg
push
cmp
aas
out
pop
mov
adc
cld
sahf
nop
sbb
lea
xchg
and
pop
rolb
je
sbb
adc
xchg
cmpsl
movb
cmc
js
or
daa
in
daa
adc
pop
out
push
lret
btr
xchg
pop
jno
adc
leave
inc
adcb
adc
jp
pop
mov
decb
mov
shll
clc
out
mov
xchg
adcb
jo
mov
setnp
lret
movsb
mov
sbb
sub
jo
or
jle
daa
cltd
adc
nop
ss
push
and
push
mov
je
pop
ss
inc
mov
or
or
fldl
jle
loopne
mov
addr16
pop
mov
mov
andb
aas
sub
aam
movsl
test
xchg
insb
inc
ja
cmp
mov
sbb
adcl
daa
mov
push
adc
iret
jae
movsl
ljmp
shll
lcall
or
cmpsl
ds
mulps
jno
and
in
test
sub
adc
pop
cmp
pop
js
ret
jge
mov
sbb
xchg
sbb
xchg
test
out
movsl
repz
and
push
xchg
stos
xchg
sub
testl
cwtl
sbb
or
xchg
jo
add
es
xor
and
int3
mov
mov
cmpsb
sbb
or
lock
mov
sub
sub
lods
rorb
out
sub
call
jge
paddd
arpl
mov
lods
lcall
push
out
sub
dec
lock
jne
cmpsb
mov
push
sub
mov
xchg
pop
and
sub
push
dec
fldcw
mov
je
xchg
pop
adc
out
and
push
cmp
and
add
add
xchg
mov
pop
push
sub
je
sahf
fistps
test
xor
mov
mov
lcall
out
into
movsb
or
pusha
push
mov
jo
sub
mov
xchg
shlb
and
lea
mov
sub
adc
cltd
sbb
std
and
movsb
xchg
xchg
push
jle
or
sahf
das
loopne
xchg
add
and
fisttps
sahf
imul
sub
cwtl
and
mov
nop
or
rolb
js
cmpsb
test
xchg
in
jmp
mov
xchg
dec
mov
push
xor
and
jle
cs
les
js
sbb
in
push
cmp
xchg
leave
icebp
jo
sbb
nop
outsl
pop
stos
mov
sbb
adc
test
jb
push
push
mov
mov
xchg
cmpsb
pop
xchg
pop
sbb
shrb
in
push
daa
fwait
repz
mov
cmpsl
std
sbb
cmpsb
cmp
sbb
hlt
push
push
out
insb
shlb
lahf
lcall
mov
insl
fisubrl
cwtl
in
stc
sbb
xchg
jne
adc
jmp
lahf
shlb
lcall
mov
push
xchg
stc
cmove
mov
inc
sub
xchg
jecxz
inc
std
stos
js
fisubrs
insl
pop
std
or
std
cmpsl
daa
rcrb
pop
jo
mov
adc
mov
js
mov
adc
and
mov
shl
les
xchg
shl
iret
rcll
add
cmpsb
mov
jb
mov
mov
inc
movsb
sbb
test
jmp
mov
out
rclb
lods
movsl
dec
inc
sahf
repz
or
js
and
and
mov
mov
test
sbb
push
mov
in
mov
add
ret
add
es
xchg
es
push
mov
daa
aaa
push
out
and
cwtl
cmpsl
daa
stc
mov
add
xchg
fdivrs
push
shrl
out
out
movsb
mov
aaa
cltd
fwait
test
mov
mov
add
pop
or
lods
sbb
aas
ss
xor
and
outsl
scas
daa
pop
sbb
daa
add
lahf
jmp
rcrl
aas
push
sbb
sbb
mov
lcall
cwtl
xor
and
test
movsb
or
mov
pop
xchg
inc
stos
jae
repz
out
negl
xchg
xchg
jb
and
sub
aam
pop
pushl
push
in
ljmp
xlat
and
jmp
lahf
cwtl
pop
cmc
fsubrl
pop
xchg
movsl
mov
sub
cltd
pop
and
or
pop
ljmp
call
imul
lods
adc
loopne
sbb
mov
fwait
es
mov
psubw
push
jge
stos
push
shll
je
adc
pop
and
mov
stos
sbb
and
or
inc
orl
fwait
dec
cltd
and
mov
movsb
negl
cwtl
nop
jbe
and
and
push
adc
es
sets
lods
lgs
mov
loope
or
xchg
sub
sub
mov
sub
shrb
push
fs
push
mov
and
ret
repz
xor
sbb
lea
mov
inc
cmp
sbb
xchg
in
jb
adc
sbb
mov
mov
xchg
sbb
pop
sahf
dec
pop
push
adc
push
sub
cwtl
xchg
or
in
xor
cltd
cmpsb
jmp
out
pop
lock
xor
fstpl
ret
cmp
test
push
cmpsl
and
xchg
cld
and
lret
sub
repz
mov
and
stos
xchg
iret
mov
paddq
stos
or
xchg
and
or
enter
aad
adc
or
mov
mov
es
lods
xchg
or
iret
jnp
mov
xchg
push
pop
mull
in
lock
adc
cli
negl
cld
scas
loope
or
jecxz
je
movsb
dec
push
dec
jae
sub
rcrb
sbb
js
jno
lcall
mov
scas
or
or
cwtl
andb
xor
das
mov
pop
pop
and
leave
out
fistl
push
pop
mov
stc
out
sub
sbb
mov
stos
mov
add
xchg
cwtl
mov
push
xchg
lods
xchg
insl
push
mov
mov
jecxz
lahf
or
scas
jg
mov
test
and
adc
sub
xchg
sbb
call
out
pusha
cmp
les
add
jo
mov
cmpsb
or
cmpsl
cmpsl
dec
and
popl
and
in
cmpsb
add
mov
push
dec
out
push
lahf
and
add
add
push
sub
pop
pop
adc
push
int
xor
add
loope
mov
dec
sub
adc
push
mov
cmpsb
inc
stos
and
pinsrw
imul
sub
pop
imul
mov
mov
in
dec
push
xchg
inc
fwait
mov
pop
lock
and
sbb
cmp
or
ret
jo
pop
stos
mov
or
and
in
lret
pop
push
jg
xchg
test
test
js
jge
cmp
xchg
push
scas
cld
mov
test
je
cmpsb
adc
hlt
mov
sbb
icebp
shll
stos
and
sub
sbb
repz
jp
sarb
xor
lock
adc
xchg
and
and
test
into
adc
add
test
bound
mov
test
subb
popf
dec
shrb
adc
lret
nop
xchg
inc
adc
js
xchg
mov
mov
std
stos
sti
and
clc
mov
xor
cltd
nop
sub
pop
sbb
scas
rclb
push
adcl
insb
or
jae
cwtl
jg
pop
push
dec
mov
and
and
inc
xchg
aaa
push
or
addr16
add
xchg
and
cmp
movsb
movsl
xchg
add
sar
cltd
jb
sub
scas
hlt
mov
test
notl
xchg
mov
arpl
jno
movsl
in
rcll
pop
xlat
out
xor
insl
mov
sbb
xchg
and
and
pop
xchg
mov
idiv
loop
lret
xchg
xor
sub
sbb
jb
sub
mov
xchg
das
orl
mov
sahf
or
jb
es
xor
imul
xor
rolb
out
mov
pop
into
out
mov
and
xchg
sub
xchg
subl
adc
fsubl
push
mov
fs
fsubrs
cmpsb
xchg
test
cmp
push
mov
pop
pop
es
shr
lret
lock
mov
icebp
xchg
pop
clc
lahf
es
lahf
xchg
mov
xor
sub
arpl
fadds
and
sbb
xchg
into
inc
movsb
cmpsl
out
mov
pop
adc
scas
xchg
fisttps
subl
pop
sbb
lahf
add
adc
leave
xchg
clc
jae
sbb
cs
xchg
xchg
add
cmpsl
outsl
sub
xchg
sahf
icebp
mov
jb
cwtl
xchg
sub
sbb
sbb
repz
in
out
movsl
or
js
sub
push
repnz
jle
sub
mov
mov
cmpsb
lahf
loop
and
arpl
fsts
bswap
mov
mov
mov
std
stos
xchg
mov
adc
das
xchg
sub
popa
movsl
or
mov
outsl
and
xchg
cli
stos
mov
and
xchg
movsb
and
stc
and
xchg
jle
inc
cltd
and
scas
add
xchg
adc
xchg
sub
adc
mov
adc
lahf
mov
sub
test
xchg
out
adc
ds
xor
xor
cltd
stos
pushf
add
js
and
mov
xchg
iret
out
xchg
pop
fwait
push
sbbb
movsb
imul
das
xchg
stc
scas
fsubrl
dec
sub
jae
pop
and
jbe
xor
or
xchg
cmp
ficomps
mov
push
in
sub
movsl
out
xchg
pop
mov
or
call
xchg
xchg
cmpsb
je
test
enter
into
or
xchg
sbb
stc
mov
es
xor
push
sbb
sahf
xchg
sbb
mov
sbb
lea
xchg
insl
icebp
mov
jno
sub
jle
jecxz
mov
loop
iret
adc
mov
mov
mov
mov
scas
sub
popa
sub
sti
cmp
sahf
cmp
stos
fmuls
montmul
cmpsb
xor
dec
cwtl
test
lahf
mov
jno
and
and
push
outsl
sbb
nop
out
adc
das
repnz
in
in
mov
jecxz
aad
test
movsl
xchg
cwtl
lods
or
cltd
lock
xchg
and
mov
xor
cmp
cmpsl
bts
xchg
fs
xor
mov
or
lcall
cld
std
popa
sub
xor
and
sub
daa
cmpsb
xchg
xchg
or
xchg
int3
sub
xchg
lds
jge
outsb
xchg
xchg
sub
lods
push
rorl
lods
sub
daa
jb
sbb
and
and
cmp
adc
or
jge
sbb
fisttpll
movsb
adc
bound
add
stos
jmp
jnp
lahf
jmp
out
and
sahf
cltd
sysret
mov
push
je
and
sub
fmuls
mul
pop
xor
xchg
popf
xchg
cmc
xchg
add
and
adc
pop
pusha
and
pop
sub
push
mov
test
sub
ljmp
adc
addr16
cwtl
add
jle
mov
js
jge
xchg
nop
mov
sub
cmp
fwait
xchg
lahf
outsl
mov
xchg
xchg
mov
cmp
jecxz
pop
mov
or
push
vsqrtpd
ret
mov
test
je
jo
push
test
out
nop
and
sub
sub
xor
mov
test
push
mov
and
adc
cltd
jae
xchg
jo
and
mov
add
add
movsb
ficompl
dec
cmpsb
clc
std
mov
adc
cmp
test
sbb
sub
add
jnp
mov
loop
test
push
out
sti
xchg
test
and
or
xchg
push
xchg
and
jbe
adc
sbb
nop
in
add
or
stos
xchg
mov
cwtl
cmp
popa
push
xor
movsb
fdivr
stc
mov
push
jecxz
lahf
popf
sbb
outsb
sub
sbb
cmpsl
lret
sbb
jecxz
xchg
mov
fs
xchg
adc
push
out
mov
lea
outsl
scas
sbb
test
mov
push
aas
testw
xchg
and
sub
mov
xchg
cmpsb
pop
xchg
or
mov
cli
push
sbb
or
and
stc
outsl
push
xchg
push
push
dec
xor
mov
test
mov
stos
lret
js
jae
sub
test
or
push
and
mov
adc
shl
mov
cwtl
push
mov
mov
sbb
add
inc
sbb
add
xchg
push
test
in
xchg
and
out
repz
xchg
filds
fsubr
jbe
adc
mov
cmp
imul
lea
mov
xor
sarb
out
adc
xchg
and
mov
mov
cwtl
ds
adc
sub
mov
xchg
mov
or
leave
push
or
mov
fwait
fs
dec
aas
mov
shrb
xchg
test
dec
xchg
in
addr16
sub
arpl
fcomp
mov
xor
mov
and
addl
cmpsl
and
sbb
icebp
add
xchg
cwtl
add
in
mov
adc
cltd
add
xchg
scas
mov
lret
and
xorb
sub
jge
mov
scas
imul
mov
push
stos
cmp
dec
pusha
insl
ds
xchg
and
mov
lahf
push
test
sub
cwtl
sub
ljmp
out
xchg
movntps
insl
sbb
or
sbb
pop
imul
or
daa
mov
jmp
rcrl
xlat
sub
xchg
and
call
nop
adc
arpl
add
or
gs
sbb
out
sub
push
imul
inc
sub
popa
movsl
movsb
pushf
adc
mov
xchg
fwait
xchg
and
cs
test
test
and
add
mov
std
jb
xchg
and
lret
push
scas
out
xchg
std
and
pop
pop
fwait
lock
addr16
andl
or
in
int3
mov
or
jb
movsl
adc
or
sti
loopne
fdiv
test
xor
stos
adc
lods
fsubp
and
fwait
jbe
add
andb
fcomps
dec
adc
mov
adc
sub
clc
adcb
xor
mov
mov
mov
xchg
and
lahf
aad
mov
push
mov
jge
loopne
mov
xchg
pop
jle
push
mov
ds
fstl
mov
mov
push
shrl
negl
sub
jp
flds
sub
rolb
in
sub
pushf
mov
lcall
sub
or
call
mov
push
data16
dec
popl
rcl
stos
popw
nop
rolb
movsb
adcb
sub
sbb
imul
xorl
out
sbb
fwait
je
cmpsb
pop
xchg
jbe
xlat
outsl
lods
test
xchg
movsl
scas
mov
sahf
xchg
sbb
and
mov
repz
nop
cwtl
and
or
adc
adc
xchg
sbb
jle
mov
fstl
or
jb
stos
daa
xor
scas
dec
sub
adc
jo
pop
pushf
cld
and
cmp
cwtl
jae
mov
and
imulb
sub
out
cwtl
push
fsts
mov
mov
add
cltd
loop
adc
ficoms
int
push
xor
xchg
xor
out
test
mov
flds
mov
stos
adc
adc
stos
adc
adc
push
insl
lods
inc
adc
jno
lahf
xchg
mov
outsb
pusha
push
cmp
dec
jp
adc
push
xchg
ret
lahf
pop
cs
into
test
sbb
scas
sbb
scas
sub
mov
ss
arpl
mov
lods
xchg
out
imul
call
nop
mov
xchg
cmp
xchg
cmc
adc
sbb
stos
je
and
outsl
lahf
xchg
sub
cmpsl
mov
xchg
fdivs
and
lret
nop
jae
sub
stos
icebp
sbbl
mov
jae
scas
imulb
cmpsb
test
mov
jecxz
mov
or
mov
cmpsb
mov
adc
pop
pop
xchg
mov
sbb
jb
cwtl
sbb
cs
xchg
mov
add
sbb
les
xor
adc
movsl
imul
or
adc
push
mov
lahf
ljmp
and
push
test
repz
pop
xchg
xchg
stos
adc
inc
fisubs
mov
fmull
sbb
xchg
imul
fistpll
jmp
or
test
inc
jbe
stos
insl
loopne
jle
ljmp
adc
or
mov
push
xchg
lock
mov
or
sub
push
mov
or
mov
mov
scas
xchg
je
cmpsb
in
fwait
lcall
repnz
xchg
mov
jnp
out
xchg
or
sbb
pushf
and
pop
pop
mov
in
in
and
push
negl
ficomps
lahf
mov
sub
inc
pop
xchg
pop
and
shlb
out
pop
stos
movsb
xchg
fisttps
repz
in
pushf
fwait
mov
xchg
iret
or
push
xor
stc
mov
ljmp
and
lods
dec
out
sub
stos
sbb
xor
xchg
fnsave
mov
mov
test
lods
sahf
adcb
or
add
movsl
and
stos
jmp
xchg
ljmp
adc
xchg
jno
sbb
popa
movsl
xchg
and
pop
ret
sub
push
aaa
mov
mov
subb
pop
fbstp
adc
push
xchg
add
sbbl
push
mov
lahf
loopne
push
fisubrs
mov
outsl
pop
cmpsb
adc
and
data16
cmp
and
data16
movsl
daa
fs
mov
iret
lmsw
lea
jge
sahf
push
xchg
and
or
xchg
and
je
or
sbb
cmpb
mov
adc
pushf
sub
scas
and
cmc
movsb
or
pop
lahf
xchg
popa
ljmp
pop
add
or
inc
adc
out
iret
ret
xchg
cmpsb
loop
and
es
xchg
out
sbb
and
mov
add
iret
lea
ljmp
or
dec
mov
dec
sub
es
sub
outsl
mov
and
cltd
mov
hlt
cld
mov
add
jae
sbb
mov
and
inc
xchg
adc
xchg
mov
lock
lahf
cmpsl
push
into
inc
pushf
out
and
cltd
or
in
lcall
xchg
xchg
sub
aad
pop
sbb
cmpsb
mov
pop
les
jo
pop
mov
add
clc
or
lcall
aas
sub
mov
xchg
xlat
xchg
or
xchg
lcall
call
jo
xchg
sub
lcall
jb
adc
cmp
xor
data16
xor
notl
cmpsb
and
mov
adc
and
or
cmpsl
out
mull
xchg
pop
jmp
leave
ror
testb
xchg
cmpsl
or
ds
nop
frstor
subb
cmpsb
mov
popa
in
pop
push
push
xchg
sbb
or
push
or
arpl
mov
int
mov
es
js
push
cmpsl
stc
or
jecxz
cwtl
and
adc
or
fwait
dec
js
sub
sahf
jb
push
rcrl
cmpsb
mov
mov
sub
adc
or
imul
std
cmp
cmpsl
pop
lea
or
lcall
es
jae
nop
xchg
cmpsb
xlat
sub
xor
daa
xchg
icebp
jge
out
dec
lea
cmpl
adc
sti
js
mov
sbb
test
sub
negl
xchg
and
enter
adc
lea
sub
adc
fmuls
lahf
mov
mov
rcll
out
popa
mov
and
xchg
in
mov
sbbl
stos
or
mov
pop
xchg
xchg
adc
or
push
cmp
jo
or
adc
sbb
sbb
nop
int3
rcll
lods
fsubrl
mov
cmpsl
sbb
mov
lret
adc
test
mov
nop
mov
lcall
std
sbb
pop
movb
and
xchg
mov
and
shrb
xchg
push
jg
rolb
movsb
push
mov
adc
and
xchg
xchg
inc
adc
sub
sub
or
pop
jmp
sahf
mov
daa
cwtl
hlt
sbb
sub
in
stc
sub
lock
movsl
pop
xchg
in
xchg
xchg
xabort
or
xchg
push
loopne
test
mov
mov
scas
inc
adc
sub
bound
out
int
imull
xchg
add
lahf
lcall
inc
mov
movsl
mov
sbb
adc
cmpsl
movsb
inc
mov
cmc
adc
ljmp
lcall
mov
adc
test
xchg
add
jge
and
add
adc
pop
scas
cmpsl
fldenv
mov
es
add
jbe
adc
jbe
insl
push
and
xchg
adc
sub
mov
gs
mov
adc
adc
jp
test
aam
adc
scas
inc
stos
push
mov
iret
xchg
mov
mov
sub
or
cmpsl
xor
mov
add
fadd
xor
xchg
dec
jle
es
adc
and
bound
stos
and
adc
and
dec
sbb
bound
ret
aad
lds
lret
pushf
stos
adcl
sahf
lods
stos
mov
scas
xlat
fwait
xchg
push
xor
sbb
bound
adc
ret
xor
jae
mov
cltd
adc
repz
rcrl
test
add
arpl
nop
pop
cli
test
call
pop
movb
fcoml
fcomps
or
jbe
stos
inc
and
popa
std
outsb
inc
jmp
dec
cwtl
push
addb
incl
dec
xchg
mov
push
jo
fwait
and
nop
mov
jbe
or
je
mov
es
sub
aas
pop
xchg
sbb
popa
adc
cmpsb
adc
pop
mov
sbb
cmpsl
aam
mov
adc
je
xchg
test
es
sub
sti
push
lcall
mov
mov
or
sub
test
lds
fs
adc
mov
shl
movsb
cmp
jg
cmp
push
adc
into
cmp
test
enter
mov
xchg
sub
sub
je
sbb
add
pop
cmp
insl
out
push
or
pop
loope
xor
sub
mov
sub
mov
bound
mov
jle
mov
mov
int3
shrl
adc
lea
mov
nop
out
adc
and
sbbb
stc
add
test
pop
pmullw
cmp
out
and
and
aaa
lcall
stos
mov
adc
adcb
dec
and
addr16
daa
cmpsb
adc
inc
cmp
movsb
xor
pop
jle
adcl
fisttps
or
movsl
mov
or
movsb
pushf
jno
dec
cwtl
adc
xchg
xchg
out
pushf
cmpsb
es
out
ds
sub
push
pop
adc
nop
sbb
fbld
in
and
adc
into
mov
stos
jno
add
ljmp
loopne
jae
and
clc
mov
test
adc
sbb
push
push
into
mov
sub
pushf
sbb
jbe
pop
adc
and
and
movsb
and
or
sahf
jge
loope
xor
xchg
or
adc
mov
sub
mov
jge
ror
xchg
mov
adc
jbe
fwait
cmpsl
xchg
and
roll
adc
adc
and
xor
adc
sbb
pop
movsb
cld
aas
fstl
adc
push
enter
cltd
xchg
into
fbld
sbb
cmc
mov
mov
pop
adc
adc
outsl
and
ss
xor
test
add
movsb
xchg
aas
dec
ficoml
aad
inc
mov
sahf
and
stc
stc
mov
cmp
lea
std
dec
xchg
mov
test
repnz
or
cmc
push
test
jmp
mov
sub
mov
movsl
jg
jecxz
ret
decl
imul
and
adc
xchg
adc
rcll
sub
xor
xchg
outsb
fnstsw
cmpsb
pop
notl
and
xchg
and
scas
icebp
sbb
mov
lock
scas
xor
sub
pop
out
stos
movsb
xchg
pop
and
pusha
stos
repnz
pusha
push
cmp
movsl
in
inc
enter
adc
ret
add
test
test
stos
adc
mov
sbb
xchg
sbb
bt
das
and
and
mov
lock
sub
xor
fdivrp
xchg
cli
mov
mov
mov
xchg
shlb
iret
imul
pop
int
shrb
add
and
scas
lahf
or
mov
or
xchg
mull
or
and
lretw
xchg
mov
sub
fisubrl
jb,pn
lcall
add
adcb
iret
lds
adc
cmp
xchg
push
fsubs
mov
xchg
lret
movsb
pop
outsl
in
jg
seto
arpl
addr16
and
clc
push
xchg
push
sbb
push
xchg
lahf
push
stos
pushf
hlt
stos
and
loopne
test
mov
je
in
mov
and
sub
add
pop
lcall
es
xchg
rcrl
mov
add
and
xchg
cld
xor
or
js
pop
adc
push
lahf
outsl
pop
les
mov
or
sub
cltd
cmpsb
mov
mov
and
dec
in
fwait
xor
sub
cmpsl
xchg
dec
push
call
xchg
add
push
push
test
or
das
add
stos
popa
sub
or
stos
mov
sbb
je
nop
sub
jle
je
sub
sub
or
test
cmpsb
cmp
stos
mov
mov
pop
movsl
in
clc
and
or
sub
xchg
pop
mov
stos
fwait
xchg
push
outsl
dec
xchg
add
adc
or
push
push
push
lcall
in
mov
mov
pushf
adc
orl
into
xchg
xchg
pop
test
sbb
movsb
jb
push
mov
icebp
cwtl
push
ret
idivl
push
leave
repnz
stos
pop
nop
and
sbb
xchg
daa
xor
jo
cmpsl
xchg
dec
push
and
xchg
mov
xchg
pop
xchg
pusha
push
inc
loopne
ret
sarb
es
cltd
mov
xchg
xchg
fwait
sub
dec
jno
lahf
sbb
cmpsb
lds
data16
mov
pushf
adc
jle
aaa
lods
ljmp
movsl
jbe
bound
or
fwait
jge
inc
mov
xchg
in
push
rcr
sub
mov
mov
sub
or
fucomp
sti
sub
mov
ror
or
int3
or
xor
std
xchg
pop
xchg
mov
sbb
sub
adc
or
arpl
pop
mov
je
sbb
add
lcall
hlt
sub
out
xchg
sub
imul
nop
xor
jae
insl
scas
pushf
fwait
mov
mov
xchg
lds
pop
scas
mov
mov
mov
or
das
adc
je
cmpsl
push
cmpsb
ss
pop
in
mov
movsb
jo
inc
jp
and
push
enter
nop
xchg
cwtl
scas
push
lods
sub
mov
mov
sbb
xor
loop
pop
leave
and
pop
cld
pop
movsl
pusha
cmp
pop
lods
add
out
addr16
iret
movsl
and
sbb
pop
xor
add
mov
mov
and
push
or
ret
push
pop
jae
sbb
jnp
dec
xor
pop
adc
insb
sub
ret
xchg
es
lret
sub
adc
nop
fcoml
in
cmpsb
mov
pushf
xchg
xor
movsb
int
clc
or
lea
sti
daa
mov
std
sub
shlb
roll
pop
fcmove
jae
mov
mov
scas
xlat
mov
or
cltd
sub
sub
cwtl
das
mov
sbb
into
cmpsl
and
mov
sbb
xor
xchg
imul
jb
scas
mov
and
adc
int3
xchg
js
jb
pop
mov
shll
flds
mul
out
mov
into
fldcw
and
stos
pop
push
cwtl
adc
shl
ret
js
std
xlat
dec
cmpsl
xor
pop
inc
sub
loopne
test
mov
lcall
je
lahf
xchg
jg
adc
sbb
shr
cltd
push
xor
call
outsl
xchg
push
adc
xchg
sbb
adc
sahf
bound
test
xchg
jbe
sbb
inc
inc
test
icebp
mov
mov
adcl
jae
xor
aam
push
push
imul
clc
hlt
data16
icebp
pushf
mov
movsl
or
xchg
adc
imul
cmp
outsl
xchg
and
mov
scas
addr16
stos
xchg
test
xchg
cwtl
outsl
cwtl
sub
fwait
lret
pop
scas
sahf
push
cmp
lcall
inc
sbb
mov
mov
cld
mov
ss
adc
xchg
stos
out
mov
movsb
adc
mov
iret
lds
jae
xor
test
out
jecxz
mov
pop
cld
xchg
enter
cwtl
xchg
fs
mov
xchg
mov
cli
xchg
xchg
jbe
xchg
dec
xchg
jns
lret
movsl
insl
jecxz
push
inc
or
mov
in
jb
xchg
cmpsl
notl
sbb
scas
inc
lcall
mov
in
sbb
in
pop
add
jmp
mov
mov
daa
test
lock
sbb
adc
loope
mov
cwtl
sub
xchg
movsl
jle
or
les
sub
mov
xchg
movsb
sbb
lcall
adc
sbb
sbb
pushf
cmpsb
mov
out
inc
mov
sbb
mov
xchg
ljmp
adc
mov
cwtl
jge
cmpb
sub
repnz
test
push
xchg
fwait
mov
xchg
cmpsb
adc
popa
xchg
in
clc
push
test
adc
popf
and
cmp
movaps
fdivrl
faddl
stos
pop
popa
loopne
cltd
pushf
mov
andb
inc
jmp
sbb
sub
sbb
xchg
stos
pop
pop
or
mov
sbb
sbb
js
int3
stc
pop
out
es
push
stos
sbb
lcall
daa
pop
cmpsb
xor
sbb
jge
mov
pop
shl
scas
imul
or
adc
inc
jno
adc
scas
test
and
fisubl
out
and
stos
push
lahf
cmp
rep
xchg
jo
and
mov
sbb
inc
jo
sahf
rcll
rcrb
in
mov
adc
mov
sub
adc
adc
dec
push
scas
sbb
mov
je
and
fsts
sub
mov
pop
cmpsl
out
mov
mov
shrl
and
push
push
sbb
sbb
test
fwait
loop
lock
adc
adc
xor
movsl
adc
push
ror
hlt
stc
xchg
mov
lret
adc
les
mov
sub
cwtl
sti
psllw
inc
dec
sub
inc
fisubrs
inc
scas
jge
sbb
pop
lcall
and
jb
les
lret
sbb
test
xchg
pop
and
test
xchg
mov
adc
cmpsl
scas
pop
sbb
and
nop
cmpsb
push
movsl
mov
or
loopne
call
xchg
lahf
rcrb
or
imul
and
sub
sub
mov
or
cltd
sti
stos
lcall
outsl
mov
add
pop
sub
orb
icebp
mov
repz
insb
outsl
mov
fwait
test
int3
test
popf
cwtl
ret
xor
outsb
stos
shlb
nop
cmp
lcall
mov
jae
and
xchg
repnz
loopne
mov
lahf
in
cltd
mov
lcall
adc
adc
or
ja
lcall
clc
and
sahf
xchg
and
outsl
pop
pop
cltd
cmpsl
pop
sub
pop
jle
push
push
mov
xchg
sub
or
pop
push
sbb
lahf
mov
xchg
xchg
sub
pop
das
mov
stos
adc
lcall
mov
mov
and
push
es
iret
adcl
mov
sahf
or
iret
mov
stos
bound
or
jl
es
pop
cli
je
or
mov
lods
je
nop
or
aas
ficoms
xchg
rclb
mov
fwait
test
pop
cmp
dec
and
lods
movsb
pop
mov
push
cmc
fwait
js
idiv
jne
pop
int3
decb
adc
mov
mov
sub
add
jno
and
jne
or
sahf
iret
xchg
sub
shll
push
cmp
mov
add
and
sub
push
fidivl
adc
jecxz
lahf
add
das
test
pop
test
into
jae
movhps
mov
mov
ljmp
xchg
arpl
scas
xchg
xchg
adc
pop
and
bound
sub
sahf
ja
pusha
xchg
xchg
push
xchg
xor
jb
mov
in
into
popf
mov
cmpsl
xlat
xchg
shr
sub
cmp
cmp
call
movsl
daa
or
xchg
push
adc
in
and
sub
out
outsb
cmc
mov
mov
imul
adc
xor
xor
fldt
stc
and
outsl
and
mov
fwait
nop
sub
arpl
xchg
in
sbb
cmpsb
cmp
jbe
pop
xchg
les
mov
cmp
test
mov
pop
hlt
adc
and
lahf
fcmove
les
or
js
xchg
lcall
scas
jle
cwtl
pop
push
addr16
xchg
es
sbb
lahf
xor
cmp
popa
mov
xchg
daa
lret
cmpsb
xchg
cmpsl
les
or
add
and
ljmp
sbb
lcall
sbb
xchg
mov
popf
pop
add
inc
and
filds
fists
orl
clc
mov
mov
andb
lret
seta
daa
or
fidivs
xchg
lds
stos
adc
insb
dec
mov
pop
cmpsb
push
xchg
stos
dec
rcll
jg
in
movsb
in
xchg
enter
test
mov
enter
test
or
je
es
push
test
mov
mov
mov
sbb
dec
nop
inc
mov
lock
std
inc
sbb
movsb
mov
outsb
pop
mov
subb
les
add
mov
ret
cmpsb
lcall
pop
xchg
sbb
jno
xchg
and
push
dec
mov
and
loopne
aas
fstpl
lahf
imul
mov
jbe
mov
dec
js
icebp
scas
and
xchg
xor
in
xor
fdiv
andb
or
stos
add
pop
insl
dec
pop
mov
das
scas
test
lods
lods
test
js
adc
and
cltd
loope
xchg
movsl
ljmp
mov
adc
and
lock
dec
das
cmc
adc
or
adc
sbb
jp
inc
fnstcw
cmp
and
movsl
es
into
jns
adc
mulb
andl
popa
fadds
mov
out
xchg
adc
sbb
mov
sub
xlat
lcall
xchg
mov
cli
pop
out
cwtl
adc
notb
outsb
stos
pop
sbb
or
xchg
or
in
jg
incb
xchg
xchg
and
stos
je
scas
sbb
and
or
pop
mov
sub
adcl
ds
das
rcll
push
push
into
jnp
xchg
or
das
addl
roll
and
push
in
iret
xor
mov
mov
int
outsl
and
scas
adc
sub
jp
and
lods
mov
mov
and
mov
pop
sbb
movsl
and
adc
mov
mov
lcall
scas
aas
cwtl
sub
mov
lret
gs
push
ja
sbb
fisttps
out
adc
or
sub
lcall
mov
and
xchg
scas
sbbb
adc
nop
mov
out
cld
pop
jae
xchg
repnz
sarb
out
ret
je
push
dec
fists
xchg
push
sbb
jb
adc
dec
in
push
imull
lahf
scas
sbb
adc
movsl
and
sbb
stos
and
sub
fildll
lahf
fisttpl
sub
int3
cld
lahf
rclb
es
jbe
daa
mov
and
push
add
into
xchg
sbb
mov
notl
mov
mov
push
lods
and
cmpsl
fnstcw
je
nop
cmpsl
jg
es
mov
mov
lcall
mov
sbb
lret
andl
dec
notl
addr16
insb
adc
xchg
mov
sub
mov
ljmp
xchg
stos
mov
sahf
mov
sbb
mov
sbb
dec
hlt
and
xchg
fsubs
push
lock
andb
add
nop
repz
xchg
cltd
mov
jno
and
cmp
pop
xor
add
lcall
imul
sub
leave
push
xchg
sub
lods
and
adc
pop
xchg
aas
pop
and
mov
iret
jne
dec
sahf
inc
xchg
add
dec
ds
mov
xchg
ficomps
mov
rcll
test
ss
jle
adc
push
scas
aam
mov
adc
jge
xor
fisubrl
test
mov
jb
cltd
pop
insb
das
lret
adc
xchg
adc
mov
sbb
cmpsb
ljmp
xchg
xchg
pop
addl
sarb
mov
and
repz
jge
adc
mov
adc
mov
xor
adc
in
test
andl
push
adc
lret
sub
or
jge
js
stc
mov
mulps
mov
sbb
gs
xchg
call
or
xchg
mov
out
dec
sub
mov
inc
stos
push
aaa
ljmp
clc
dec
imul
mov
push
jne
mov
scas
jo
and
lret
xchg
mov
subl
test
notl
int3
xchg
mov
jo
and
stos
je
movsl
xchg
xchg
in
popf
sarb
stos
orb
mov
and
jbe
sub
add
imulb
loope
pop
subb
mov
dec
cli
and
scas
adc
bound
dec
repz
out
in
push
sbb
cmp
cwtl
loop
sti
xchg
sub
iret
jnp
je
mov
in
in
sub
mov
mov
xor
sti
dec
xor
out
and
sbb
icebp
xchg
dec
fisttpll
repnz
cwtl
jl
ljmp
lret
or
xchg
aam
cwtl
xchg
or
test
jge
jp
hlt
pop
and
adc
xchg
sub
faddp
cmpsb
cmp
lahf
mov
rcrb
cltd
dec
iret
and
loope
pop
xchg
cmpsl
mov
xchg
pop
les
mov
jno
adc
xchg
dec
ret
fisubl
adc
hlt
std
and
mov
icebp
mov
adc
mov
into
xor
xchg
sbb
dec
in
stos
pop
test
pop
cltd
push
push
mov
scas
aas
mov
mov
cmpsl
in
ljmp
scas
adcb
test
loope
or
adc
and
sbb
scas
fstps
mov
cmp
fwait
or
push
sti
sbb
scas
jmp
adc
fst
sub
or
movsl
cmp
jae
adc
sbb
push
nop
lcall
rcpps
xchg
fs
mov
stc
ret
lea
mov
mov
lea
sbb
stos
and
xor
dec
in
push
test
stos
ret
sub
test
out
inc
and
sbb
loop
gs
decb
js
xchg
xchg
idivl
std
dec
push
sub
sbb
rorl
and
fs
inc
adc
into
pop
or
xchg
pop
xchg
xchg
es
int
sbb
test
lods
jl
loop
scas
sbbl
outsl
xchg
mov
xor
adc
mov
xor
or
xor
mov
rcr
sbb
xchg
das
dec
push
mov
and
or
jo
or
scas
mov
cmpsl
mov
xor
das
pop
adc
or
lea
jb
xchg
or
sbb
mov
js
js
xor
xchg
xchg
pop
xchg
addr16
mov
xchg
cmpsl
int3
jns
add
mov
pop
nop
in
sarb
ds
mov
and
stos
lret
mov
sbb
sub
fwait
lea
dec
test
xchg
adc
sub
lcall
rsm
test
addb
pop
shrl
lcall
iret
sahf
fsubl
pop
and
iret
negb
adc
xlat
cwtl
iret
mov
maxps
xchg
mov
cmc
mov
sbb
xchg
test
mov
cmpsb
pop
xchg
or
adc
and
adc
and
xchg
dec
test
stos
das
fcomps
pop
sbb
xchg
mov
or
sbb
jb
sub
test
mov
clc
adcb
pop
sbb
movsl
stos
xchg
xchg
xchg
dec
movsb
adc
repz
mov
sti
mov
xchg
jb
pop
cwtl
fsubs
and
sbb
jne
sub
test
nop
inc
jbe
sbb
or
pop
int
pop
int
outsl
leave
sbb
xchg
push
adc
js
mov
pop
and
xor
inc
or
mov
xchg
shl
in
push
pop
mov
fwait
lahf
aas
push
sub
clc
js
lcall
test
leave
adc
sub
cmc
les
cmpsb
mov
and
pop
out
movsb
and
adc
pop
ficompl
sbb
sbb
inc
movsb
and
loope
push
test
sbb
xor
xchg
and
adc
mov
cwtl
xchg
and
out
pop
adc
mov
mov
adc
nop
sbb
ljmp
int
jmp
les
stos
sub
movsl
pop
mov
insb
adc
lahf
inc
enter
pushf
test
xchg
stos
addr16
popa
in
fcoml
popf
jae
pop
pushf
test
push
jbe
pop
cmp
cltd
sub
mov
outsb
adc
xor
icebp
dec
movsb
sarb
pop
xor
lret
cmpsl
or
adc
pop
xchg
stos
movnti
test
adc
pop
negl
aam
sub
test
mov
das
lods
add
ret
pop
mov
xchg
mov
jmp
movsb
jns
sarb
jge
movsb
and
pop
nop
cld
popf
loop
mov
ljmp
mov
sarb
out
cwtl
xchg
lahf
sbb
fstps
adc
mov
xchg
leave
jo
mov
xchg
and
push
dec
pushf
pop
in
xchg
aas
cmp
dec
xchg
xchg
ret
and
jp
je
and
and
xchg
adc
hlt
push
xchg
loop
lea
movsb
cwtl
mov
movsl
jns
or
sub
stos
mov
es
dec
test
or
mov
lret
xchg
in
nop
mov
icebp
rcrb
stc
push
lcall
pop
enter
and
notl
ret
push
cld
and
scas
or
jmp
mov
and
shll
lods
stc
movsb
movsl
push
jl
stos
pop
xchg
sub
mov
mov
mov
or
pop
jnp
sbb
movsb
fidivs
fsts
xchg
fdivrl
mov
faddl
inc
fwait
mov
ret
decb
lcall
jge
out
adc
adc
push
add
pushf
out
addr16
adc
loop
xchg
arpl
sahf
jle
sti
lahf
or
popf
xor
xor
xchg
lods
sarl
sub
or
loop
and
mov
adc
mov
stos
scas
insb
xchg
xchg
sub
movsb
add
sbb
es
adc
mov
pop
nop
test
clc
sub
test
mov
movsl
ret
xchg
adc
lock
adc
jo
push
sbb
loop
mov
and
xchg
xchg
cltd
adc
lahf
insl
aas
ret
or
jle
add
les
pop
xor
sub
aas
fwait
push
or
test
insl
jae
push
ljmp
adc
cmp
push
xlat
mov
adc
movsb
adc
orb
enter
sub
sub
xchg
stos
lret
sub
pushf
mov
xchg
lahf
test
jae
mov
fwait
es
or
int
sarb
adcl
xchg
and
stos
xchg
jle
xchg
cmpsl
xchg
lcall
adc
or
mov
call
mov
fwait
cmpb
pop
cmpsb
mov
sub
adc
leave
xor
adc
mov
popl
daa
sbb
movsl
cmc
aaa
xor
cmovg
xchg
push
repz
jbe
push
fyl2xp1
mov
adc
xor
jge
xchg
daa
push
lcall
sbb
cld
or
nop
pop
dec
jo
pop
fisttpl
sub
loope
clc
call
lcall
outsl
movsb
and
and
fwait
push
cmc
nop
or
adc
in
test
adc
stos
adcl
sub
into
or
movsb
mov
jb
or
sub
scas
jl
and
test
das
mov
sub
rsm
pop
mov
cwtl
cmpsb
push
cmp
add
les
xchg
cmpsl
sbb
xor
adc
dec
jbe
xchg
push
and
sub
mov
iret
mov
outsb
dec
and
push
xor
and
and
jae
cmp
mov
mov
xor
mov
xor
jnp
cld
and
sub
sbb
dec
lahf
jne
lock
out
pop
mov
sub
xchg
lret
outsl
fisubs
cwtl
pop
sub
fiaddl
or
xchg
out
in
adc
pop
xchg
rorb
pop
xchg
pop
pop
sub
sub
and
xchg
xchg
xchg
xchg
mov
fs
negb
or
xlat
mov
xchg
js
lahf
and
sbb
xchg
adc
out
mov
mov
sbb
mov
lods
std
int3
out
mov
and
cld
mov
mov
cwtl
adc
lods
dec
test
es
scas
and
mov
sbb
push
or
sbb
movsl
call
je
sbb
insl
mov
xor
outsl
adc
sub
es
data16
in
inc
adc
lcall
subl
xchg
push
fwait
and
cltd
cs
cmpsb
pop
adc
mov
or
and
and
sbb
cmp
hlt
cmpsb
and
push
mov
imul
xchg
jp
jle
outsl
mov
and
cmc
sub
pop
add
mov
xchg
sbb
lods
call
xchg
fwait
sarb
cld
test
mov
push
dec
dec
or
and
jb
lcall
mov
js
sbb
mov
xchg
lcall
imul
cmp
scas
xorl
push
xchg
movsl
mov
mov
imul
pop
rol
insb
cld
xchg
xchg
xor
lret
cld
fcmovbe
lods
push
mov
xchg
mov
cwtl
adc
out
imul
es
mov
pushf
sbb
sbb
or
jp
mov
xchg
cmpsl
test
call
lahf
xor
rclb
insb
sub
lods
mov
lea
adc
pop
sbb
aad
and
out
stos
mov
push
xchg
or
movsl
daa
jmp
pop
add
pop
sub
clc
xchg
mov
movsb
cwtl
mov
psrlw
mov
fwait
mov
pop
jae
adc
mov
popf
adc
mov
xchg
mov
mov
sub
popa
or
orl
xlat
daa
outsb
cmc
adc
insl
fs
int3
ds
push
and
daa
push
push
scas
movsb
and
xor
cmpsb
adc
inc
sbb
ljmp
cmp
xor
sub
sbb
mov
hlt
fstpl
sbb
adc
sub
xor
push
mov
stos
std
and
adc
in
xchg
mov
pop
insb
mov
and
xchg
dec
jae
xchg
xchg
movsb
jb
or
jbe
iret
mov
mov
nop
push
mov
scas
push
push
and
cld
dec
mov
mov
subb
inc
movsb
mov
jae
cwtl
pop
xchg
ss
lahf
das
daa
lcall
and
dec
movsl
stos
adc
adc
mov
xchg
lea
pop
pop
or
or
mov
pop
call
pop
push
cwtl
lcall
xchg
or
add
cltd
xchg
lcall
jo
xchg
daa
adc
bndldx
and
lahf
stos
adc
adcl
mov
sarl
sub
and
dec
loop
nop
xor
push
sub
in
subl
outsl
test
mov
fldcw
and
stos
xchg
shl
push
sbb
test
xchg
lcall
test
push
xchg
mov
pusha
or
sbb
xchg
xchg
ret
fwait
push
cmc
inc
push
hlt
imul
mov
cld
and
mov
mov
lret
xor
fwait
cwtl
adc
and
or
lahf
rorl
repz
into
outsl
xchg
xchg
adc
sub
gs
mov
outsl
xchg
xchg
adc
mov
lret
pop
mov
mov
movsl
xchg
inc
das
push
adc
sbb
mov
xor
adc
push
test
dec
xchg
hlt
andb
test
and
sub
addr16
cmpsl
pop
nop
push
lea
adc
xchg
push
fmulp
push
xchg
cwtl
fwait
std
inc
dec
rcrl
pop
jmp
and
invd
in
xchg
fs
mov
adc
aam
xchg
fidivrl
test
adc
dec
hlt
and
sub
pop
test
adc
jp
jge
push
nop
push
das
rorb
daa
and
lea
and
xchg
adc
adc
cli
lcall
mov
js
out
or
movsb
mov
and
xor
pop
jle
in
das
xchg
test
je
mov
pusha
xchg
xchg
lahf
cmpsl
divl
xchg
or
mul
and
fwait
test
xchg
mov
jge
xchg
xchg
mov
pushf
xchg
inc
aaa
test
imul
inc
mov
push
adc
inc
xchg
sub
aam
xchg
or
lods
adc
in
out
ljmp
movsl
in
cmp
pop
out
lcall
jo
and
lcall
je
mov
jo
cmpsb
xchg
cltd
test
jmp
test
sbb
outsb
fcos
jp
push
mov
cwtl
and
push
adc
lret
sbb
cmp
fiaddl
xchg
aam
fistl
imul
jmp
pop
icebp
adc
sti
pop
push
cltd
pop
dec
sahf
lea
mov
inc
mov
ficoms
movsb
or
adc
into
je
adc
adc
outsb
je
je
jbe
push
pop
xchg
xor
xlat
or
dec
sub
xchg
mov
fimuls
or
lock
mov
xchg
jae
movsl
add
cwtl
les
stc
stos
jle
inc
dec
xchg
pop
cltd
fnsave
pop
scas
push
mov
cwtl
pop
cmpl
in
in
push
xchg
out
xchg
xchg
adc
sub
adc
stos
imul
sbb
adc
adc
push
inc
xor
xchg
cmpsb
sbb
and
mov
pushf
xacquire
icebp
cmpsb
push
xchg
pop
sbb
pop
jp
daa
jmp
jno
adc
out
xchg
sbbb
pusha
or
je
xchg
je
in
mov
fstps
dec
jge
in
jp
jb
add
daa
push
jg
adc
andl
popf
je
xchg
or
add
pop
sub
fs
cltd
jo
adc
daa
push
aam
mov
mov
jmp
push
test
out
outsl
xchg
cmpsb
adc
aam
fwait
pushf
sub
mov
xchg
loopne
scas
ja
movsb
sbb
mov
mov
addb
mov
enter
xchg
sbb
sti
pminub
cmpsb
loope
jnp
stos
test
adc
or
outsl
into
xchg
fwait
cmpsb
mov
nop
movsb
ret
xchg
lahf
nop
stos
lock
mov
xchg
cmpsb
or
adc
xchg
sbb
or
jno
add
dec
data16
mov
out
stos
xchg
xchg
cmpsl
das
sbb
sub
pop
adc
sbb
testl
mov
sub
clc
hlt
test
stos
adc
or
arpl
xor
pop
jno
and
das
or
sbb
add
add
popf
and
xchg
std
mov
lahf
push
xchg
mov
cmpsl
cmpsb
pop
fs
xchg
loope
js
sbb
and
movsb
xor
and
bound
sub
mov
or
movsl
adc
push
fisttps
mov
sbb
and
add
mov
test
xchg
icebp
push
and
pusha
repz
sub
sbb
xchg
fcoml
sub
push
movsl
std
and
out
jb
stos
cmpsb
test
mov
dec
xor
out
test
and
or
and
xchg
out
pop
mov
test
inc
sbb
fldt
test
cmc
add
loop
es
ret
sub
mov
inc
lcall
xchg
cltd
add
sub
lcall
xchg
and
cmpsb
std
pop
test
int3
mov
add
in
aam
stos
out
jo
test
fucom
test
push
pop
addr16
cmpsb
mov
cltd
xchg
mov
pusha
pop
and
and
imul
or
cltd
stc
xchg
ja
and
lcall
pop
int
mov
and
adc
push
stos
pop
xlat
pop
cmp
mov
push
xchg
and
or
movsb
fwait
pop
loop
cld
mov
adc
in
stos
lcall
pop
xor
test
sub
xchg
clc
jmp
or
and
xchg
mov
jno
adc
inc
inc
push
jmp
adc
pop
fistpl
cmpsl
mov
stos
shlb
xchg
mov
cmpsb
in
imul
pop
aaa
loop
xchg
mov
js
sub
sub
or
lahf
les
jecxz
and
sub
outsl
sub
out
xchg
or
sahf
and
jge
fimuls
pop
cltd
mov
adc
aas
outsb
pop
push
xor
and
xchg
and
xchg
xor
scas
dec
mov
mov
cmc
cltd
sub
mov
into
push
or
add
cmpsl
jmp
movb
aam
fstl
loopne
xchg
and
stos
xchg
lcall
adc
fs
xor
sbb
sub
ret
mov
mov
dec
jbe
roll
or
push
cs
adc
sub
push
imull
sub
mov
in
sbb
and
sbb
sub
daa
cli
cmpsb
xchg
cltd
sti
xchg
stos
push
push
fisubs
test
movb
stos
add
xlat
icebp
sub
sbb
dec
lahf
jge
es
and
jge
daa
xlat
xchg
jbe
cltd
xchg
test
insb
xchg
jmp
pop
and
adc
inc
fimuls
sub
xlat
cs
pop
repz
push
or
xor
or
lock
mov
and
xchg
inc
cmpsb
mov
sub
mov
cmpsb
test
lods
jg
push
pop
pop
xchg
es
fildl
jb
or
es
std
test
add
xor
jmp
stos
mov
gs
ss
lea
and
js
in
adc
stos
insb
mov
jne
xchg
ljmp
js
sub
sbb
mov
mov
inc
stos
and
out
mov
test
hlt
pop
and
and
cli
xor
xor
in
pop
daa
pop
xor
inc
call
sahf
sub
ficoms
adc
sbb
mov
adc
xchg
xchg
cld
in
push
movsl
sub
and
insb
stos
hlt
mov
jno
and
andl
pop
add
xchg
mov
fstl
mov
repz
stos
daa
or
mov
ja
cmpsb
mov
and
or
mov
cli
or
adc
test
xchg
movsl
adc
into
mov
adc
xchg
and
or
sub
jge
add
cmpsb
xlat
hlt
xchg
mov
xchg
je
nop
pop
xor
adc
mov
out
lahf
stos
xchg
xchg
popf
jp
movsb
es
and
hlt
xchg
and
or
fildl
lahf
sbb
xchg
dec
ljmp
or
xchg
pop
lahf
out
cmp
ficoml
jle
mov
dec
add
and
pop
and
test
gs
push
nop
and
mov
std
jae
sub
sahf
or
inc
adc
daa
adc
repz
jb
xchg
adc
jo
adc
and
repnz
jne
adc
mov
mov
nop
mov
adcb
and
ret
dec
mov
sub
movsb
and
stos
xchg
mov
aad
push
rorl
or
xchg
adc
fildl
xchg
add
xor
stos
insb
push
popl
jge
cmc
sbb
nop
xchg
xchg
dec
pop
mov
push
outsl
mov
mov
xchg
pusha
dec
pop
jbe
mov
mov
xchg
mov
pop
inc
xchg
mov
subb
outsb
jge
loope
clc
adc
les
jl
and
out
and
cmp
pop
sbbl
ss
sub
pop
aas
out
int
mov
insl
decb
mov
je
sub
and
aas
xor
popa
and
cmp
xor
clc
xchg
pop
mov
xchg
jo
and
cmpsl
lock
mov
test
xchg
sbb
lcall
adc
push
lcall
sub
lea
lcall
mov
jecxz
adc
sbb
mov
test
loopne
inc
faddp
sub
into
xchg
adc
pop
sbb
shlb
in
and
lea
adc
add
lods
or
xchg
cltd
out
in
scas
sbbb
popa
pop
aam
mov
stos
mov
adc
and
add
dec
fwait
ja
sub
or
lcall
jp
mov
mov
sbb
pop
or
clc
shll
sub
and
sbb
or
jmp
mov
cwtl
adc
fiadds
pop
mov
pop
rol
xchg
xchg
sub
lret
ficomps
fwait
jno
or
filds
xchg
mov
adc
xchg
aam
jae
and
jo
adc
cltd
fwait
xor
mov
sbb
stos
enter
mov
jbe
stos
nop
fwait
xchg
push
add
mov
xchg
adc
push
shr
push
lods
ret
mov
fwait
mov
rsqrtps
and
test
or
or
movsl
jl
stos
inc
scas
inc
sbb
nop
xchg
add
cmpsl
or
mov
lds
int3
lods
xchg
xchg
ljmp
lea
sbb
stos
adc
outsl
mov
add
fwait
pop
jg
shl
mov
enter
pop
mov
mov
sub
or
and
jae
scas
dec
lcall
movsb
mov
mov
orl
mov
pop
mov
decb
popl
xchg
adc
scas
cmpb
mov
movsb
es
jae
mov
adc
adc
mov
inc
jp
ljmp
and
jmp
sbb
hlt
or
cmpsl
xchg
fwait
out
cmpsl
pop
lcall
hlt
int
and
test
pop
daa
out
cli
xchg
xchg
lcall
js
adc
inc
inc
lock
push
mov
adc
xchg
outsb
repz
rdtsc
out
or
outsb
pop
mov
in
cli
and
lahf
or
subb
xchg
cmp
aad
movsl
jae
cmpsl
fcmovbe
mov
adc
xchg
jb
adc
movsb
push
pop
dec
call
jg
insl
pop
mov
stos
adc
sbb
nop
inc
test
xor
mov
movl
stos
and
stos
and
loopne
bound
xchg
and
lock
sbb
movsb
xchg
frstor
rcrl
inc
jae
mov
cmpsb
ret
sbb
stos
adc
aam
fwait
dec
out
xchg
test
push
mov
cs
sub
fldenv
jnp
sahf
pop
repz
dec
test
adc
jp
or
pop
jae
cwtl
scas
push
xchg
push
pop
fsubrl
cs
sub
or
out
sbb
sbb
mov
push
pop
cmc
cmpsb
iret
mov
in
xor
xor
or
scas
add
xchg
prefetch
mov
mov
bound
idivl
xchg
sub
add
fwait
scas
movsb
sub
sub
and
cltd
pop
mov
mov
mov
sahf
int
sub
xchg
mov
xchg
loop
and
in
jno
sub
or
cmpsl
movsl
test
xchg
js
in
cwtl
mov
sub
inc
add
mov
enter
cmc
ljmp
arpl
fbld
popa
adcb
sbb
bndstx
xchg
and
or
test
xchg
mov
mov
pop
adc
and
scas
push
cwtl
xor
adc
lcall
push
mov
inc
sbb
es
or
pop
daa
into
es
sub
nop
mov
sbb
mov
lahf
gs
into
movsb
lcall
rol
or
xor
sub
movsl
and
jno
cltd
iret
pop
and
dec
movaps
jg
mov
mov
std
sub
ljmp
or
div
adc
lock
stos
xor
daa
rolb
ret
jecxz
cmc
and
fwait
xchg
pop
mov
dec
cli
adc
sub
push
sbb
mov
and
mov
adc
pop
xchg
cmpsl
push
lcall
lcall
or
xchg
push
sbb
xchg
xchg
xchg
das
mov
pop
sahf
jge
mov
or
cld
loop
xor
adc
adc
add
cld
pop
cmp
in
xchg
adcb
jp
xchg
jmp
popa
andb
insl
movsl
mov
andl
dec
and
sub
ljmp
sarb
or
stos
aas
shlb
xchg
and
insb
js
enter
mov
dec
test
movsl
xor
cmp
mov
lahf
xchg
mov
and
inc
repz
fstpl
mov
jmp
sub
or
push
mov
xor
pop
cmc
and
adc
dec
add
setl
mov
jecxz
outsb
or
jle
cli
push
inc
and
pop
xchg
cmpsl
pusha
cmpl
pop
inc
nop
pop
lret
cmp
mov
sub
test
ljmp
mov
jl
int
mov
jmp
fwait
xchg
out
fcoms
ds
das
lods
and
mov
mov
inc
mov
adc
lcall
mov
xor
sbbb
mov
adc
xchg
es
adc
xchg
mov
xchg
or
nop
mov
fwait
sbb
scas
leave
sub
mov
int
fisubl
lret
jb
nop
test
push
cmp
andb
out
xor
xor
inc
push
cs
or
push
xchg
repz
test
jae
stos
xor
lcall
adc
loope
jmp
test
or
and
aas
jb
push
sbb
stos
dec
mov
and
pop
pusha
iret
mov
loop
nop
insl
jmp
adc
rorb
pop
lock
movsl
push
dec
push
shlb
fwait
and
sbb
lods
repz
jno
mov
and
test
in
pop
int
lods
decb
test
sbb
js
jno
sbb
dec
and
push
sub
je
xchg
pop
jbe
lea
cwtl
and
nop
sbb
enter
test
jp
adc
sub
adc
andl
jbe
and
xor
into
daa
lahf
push
jge
or
cmp
inc
jp
lods
sub
jbe
and
adc
test
mov
xchg
push
repnz
xchg
xchg
or
cmp
imul
das
addr16
sbb
es
push
adc
nop
push
mov
sub
sbb
mov
stos
cltd
jle
pop
and
xchg
movsl
push
lcall
xor
or
xor
in
xchg
adc
stc
fcmovnb
cmpsb
xchg
scas
xchg
xchg
fucomip
repz
sub
shll
sub
sub
stos
adcb
pop
xchg
movsb
push
ror
out
mov
or
lahf
stos
or
and
mov
test
xchg
dec
mov
push
xchg
out
cwtl
sub
pop
cmpsl
dec
lock
movsl
mov
inc
sub
sbb
test
push
and
and
adc
lahf
ret
dec
mov
adcb
xchg
mov
jae
mov
call
andl
xchg
mov
bnd
cmpsl
test
icebp
sub
stos
sub
nop
pop
pop
rorl
fistpll
sahf
sbb
mov
xchg
or
jno
xchg
stos
xchg
je
or
mov
push
outsl
pop
xchg
sbb
nop
dec
std
mov
push
xchg
xor
test
subb
loop
sub
mov
lods
std
test
and
adc
in
sub
lea
push
and
xor
sub
out
cwtl
jae
xchg
mov
into
andl
mov
add
mov
cmp
pusha
test
es
subb
sbb
pop
or
or
nop
jge
std
into
pop
xchg
mov
lcall
test
clc
adc
xor
adc
test
movsb
sub
adc
cmp
stos
dec
addr16
sbb
xchg
mov
cmc
add
mov
xchg
setb
fwait
jb,pn
or
xchg
sbb
mov
movsb
stc
stos
jo
cltd
test
or
and
xchg
adc
and
fadd
lahf
or
mov
je
and
lea
xchg
cmp
mov
inc
or
mov
push
and
sbb
lock
adc
das
adc
sahf
fisttps
add
jecxz
mov
in
lds
negl
test
adc
popf
push
rorb
arpl
cltd
xchg
xor
out
lds
or
pop
sub
andl
movsb
sahf
xchg
fsub
dec
jae
xchg
mov
mov
and
mov
push
xchg
and
fidivs
cmpsl
fwait
xchg
mov
stc
push
and
xor
dec
pop
xchg
test
push
and
adc
push
fsubs
fcompl
xchg
ret
cmp
stc
lahf
adc
pushf
es
and
lcall
and
imul
test
addr16
mov
test
xchg
jmp
fucomp
sub
and
and
mov
ret
mov
sbb
movsl
roll
and
and
test
push
or
gs
mov
pop
stos
mov
cmp
lods
xor
fcmovu
xchg
push
stos
push
xchg
movsb
mov
and
and
inc
xor
xchg
xchg
adc
fwait
or
cmpsb
sti
arpl
int3
sub
jmp
sete
test
mov
xor
fwait
movsl
sbb
xchg
pop
xor
out
dec
movsb
xchg
xor
inc
pop
frstor
sub
es
arpl
push
mov
and
adc
pop
int
test
mov
xchg
pop
push
out
add
ljmp
into
push
xchg
lods
and
lret
test
xchg
and
mov
in
sbb
dec
sub
xor
or
mov
mov
test
adc
cmpsb
jecxz
and
sub
and
adc
andl
je
daa
adc
clc
xchg
push
icebp
cmpsb
xchg
ss
in
xor
jp
stos
iret
std
adc
popw
adc
cmpsb
pop
sbb
pop
push
popa
scas
test
sbb
cwtl
stos
daa
xchg
push
mov
xchg
or
mov
mov
js
out
lret
movsl
adc
fidivrs
pop
es
mov
adc
jmp
mov
and
adc
gs
stos
xchg
test
xchg
pop
popa
stos
pop
mov
popf
xchg
loop
sub
inc
push
xchg
xchg
and
sbb
es
and
xchg
cmpsb
or
rorb
sbb
daa
lret
mov
pop
std
mov
sbb
adc
adc
xchg
and
ret
cmc
xor
and
mov
pop
jno
pop
xchg
dec
rclb
stos
and
pop
adc
cwtl
data16
jb
daa
xchg
int3
ret
cld
mov
test
aaa
mov
pushf
and
popf
fidivs
movsb
lcall
xchg
mov
stc
pop
movsb
jae
sub
add
jae
and
jge
jno
mov
mov
sub
into
movsl
xchg
mov
sbb
push
add
xchg
stos
adc
and
dec
xor
sub
bndstx
xlat
sahf
xchg
sub
xchg
xorl
and
jmp
jecxz
xor
or
pop
push
xchg
push
and
in
lods
sub
adc
mov
jmp
sub
pop
lcall
pop
fidivs
iret
fldenv
or
push
out
ret
fdiv
int
jp
cmpsl
clc
stos
out
call
or
and
lahf
rcrb
stos
and
jnp,pn
into
jmp
insb
daa
jle
es
mov
mov
nop
fwait
and
out
out
xchg
xchg
mov
inc
xor
or
jno
or
rclb
sbb
orb
sbb
mov
mov
addr16
cwtl
sbb
xor
mov
cld
jo
push
cltd
fwait
out
xchg
xchg
out
mov
mov
mov
jae
and
loope
mov
xchg
stos
out
push
movsb
adcb
inc
scas
enter
ss
icebp
push
xchg
popf
mov
adc
in
push
rcll
xor
data16
jb
fwait
mov
push
sub
out
mov
cltd
stos
xchg
es
and
adc
pusha
stos
mov
enter
negl
movsl
pop
sub
mov
popa
dec
out
push
adc
fidivs
or
je
jmp
cmp
mov
adc
cmp
stos
nop
stos
sbb
outsb
xchg
xchg
xchg
je
mov
cmp
jp
and
fimuls
pop
cltd
sub
aad
sub
call
mov
imul
fildll
mov
jecxz
imul
mov
xchg
out
nop
adc
sbb
lahf
and
test
mov
dec
pop
lret
mov
jb
xchg
insb
mov
and
cmpsb
jnp
xchg
mov
in
pop
insl
jg
int3
aam
sub
call
xchg
xrelease
jle
pop
mov
add
or
out
lahf
and
cmpsb
js
call
jbe
xchg
fwait
adc
mov
hlt
call
xlat
sbb
testl
cmp
and
cwtl
lret
sahf
jmp
and
js
pcmpgtd
adc
pop
into
sahf
xchg
lods
or
fistpll
cmc
mov
loopne
pop
punpcklbw
cmp
icebp
bound
adc
mov
scas
sbb
pop
test
nop
jb
fwait
sub
mov
and
out
ljmp
lods
xchg
fucomip
sbb
outsb
das
frstor
xchg
push
push
pop
push
xchg
adc
aas
das
pop
push
and
andb
pop
sub
stos
outsb
packsswb
and
movsb
and
inc
adc
stc
or
jbe
lahf
shll
in
push
inc
mov
push
nop
sub
xchg
pop
xchg
mov
mov
sub
mov
lcall
and
mov
or
or
and
jecxz
int3
pop
xchg
sub
cmpsb
test
fwait
sbb
cmpsl
mov
imul
into
test
mov
test
lcall
nop
sbb
hlt
in
adc
int3
pop
popf
pop
xchg
jmp
dec
fsubrl
sub
sub
test
xchg
push
andb
and
test
adc
mov
scas
in
js
dec
dec
sub
mov
arpl
lods
movsb
push
clc
cmpsb
pop
or
xchg
mov
daa
test
xchg
jno
cwtl
xchg
clc
mov
popa
pop
inc
test
test
add
roll
push
lcall
andb
sbb
dec
iret
xchg
cwtl
xchg
jnp
hlt
xchg
out
adc
arpl
adc
fcmovnbe
lea
adc
push
outsb
pop
inc
iret
scas
sub
and
add
mov
mov
inc
xchg
sub
mov
and
repnz
addr16
sbb
icebp
insl
movsl
out
push
sub
out
movsb
fldcw
add
adc
cmp
mov
andl
xchg
cld
sbbb
fsts
lcall
out
mov
sub
punpckhbw
xchg
sbbb
outsb
negl
dec
sub
push
dec
into
icebp
popf
mov
xor
dec
cmc
cmpsl
sbb
fsubl
or
adc
pushf
sbb
stos
add
cwtl
fimuls
xchg
mov
jmp
xchg
sub
mov
pop
je
and
xor
je
pop
xor
outsl
scas
movsl
test
sahf
pop
and
test
and
and
push
mov
xchg
test
jne
movsb
xchg
jg
mov
out
mov
mov
xsha1
cmpsb
mov
pusha
xchg
and
xor
fwait
sbb
out
sbb
rclb
cmc
inc
stos
push
adc
dec
fwait
mov
mov
fadds
nop
xchg
sub
aam
jae
mov
movsb
dec
cli
mov
pop
adc
adc
sub
xchg
jae
mov
test
imul
int3
and
test
sahf
or
or
xlat
cs
mov
xchg
push
xchg
jne
adc
insl
test
cwtl
pusha
xchg
daa
cmc
adc
jo
movsb
xchg
lret
mov
or
cltd
pop
mov
sub
mov
mov
xchg
dec
int3
lcall
cmpsb
in
lock
and
lds
roll
dec
xchg
mov
test
adc
xchg
out
xchg
sub
sbb
push
or
call
call
xchg
push
add
movsb
bsf
sar
sti
adc
sub
and
out
aaa
setbe
mov
xchg
mov
adc
mov
pop
lahf
or
sbb
rclb
cmc
jg
cwtl
rclb
pushl
sbb
xchg
mov
js
dec
xor
lcall
and
adc
xor
fwait
or
and
jp
dec
or
cmpsl
hlt
cmp
xchg
insb
pop
cmpsb
pop
out
es
dec
and
lcall
daa
sub
movsb
shlb
daa
test
scas
push
movsl
call
or
and
daa
out
add
mov
or
mov
enter
adc
and
sbb
cmpsl
adc
iret
xchg
movsl
pop
or
lahf
and
jb
adc
stos
es
push
cmpsb
inc
push
inc
scas
int3
mov
or
fwait
lret
mov
adc
in
lcall
in
cmp
xchg
insb
xor
sub
jbe
test
pop
cmpsl
scas
xchg
cltd
adc
add
movsl
aas
inc
pop
cwtl
loopne
mov
mov
mov
loop
stos
or
adc
rcrl
xchg
stos
mov
xlat
adc
nopl
mov
mov
mov
cmc
or
jbe
fstl
xchg
xchg
push
cwtl
sbb
scas
mov
mov
lcall
adc
test
mov
sbb
xor
daa
in
sub
or
cltd
xchg
sub
mov
jb
gs
xchg
mov
subl
stos
stos
cltd
pushf
adc
andb
lahf
ss
je
cmpsb
out
dec
in
mov
and
scas
lock
adc
movsl
nop
lret
scas
inc
sub
and
xor
and
hlt
lea
pop
mov
and
sbb
imull
repz
and
fsubs
mov
pop
pushf
pop
inc
lcall
or
sahf
mov
mov
xchg
dec
cs
sbb
sbb
fstpl
pop
or
xchg
adc
adc
enter
fisubs
xchg
and
jmp
jnp
test
sbb
es
pop
and
data16
xchg
or
out
mov
bswap
cmpsl
daa
fwait
xlat
mov
and
xchg
mov
xchg
mov
mov
mov
orl
fmull
and
adc
std
sub
rcrb
stc
scas
push
daa
or
or
xchg
dec
add
adc
movsl
pusha
pop
push
cmp
mull
push
and
pop
push
xchg
loope
gs
fwait
xor
mov
addb
andb
or
shll
cmpsl
and
inc
xor
into
dec
sbb
mov
cmpsb
mov
jb
xchg
or
mov
xchg
inc
popf
test
mov
and
xchg
mov
sub
rolb
mov
insl
and
mov
cwtl
sbb
int3
xchg
xor
into
adc
mov
adc
inc
into
xor
adc
lret
and
mov
daa
and
xlat
or
mov
or
jae
and
pop
sub
cmp
mov
xchg
jo
test
enter
jecxz
jbe
and
jae
mov
and
mov
daa
cmpsb
adc
jle
cmpsl
push
mov
jae
push
jg
shr
int
adc
sbb
stos
cmc
add
push
fwait
clc
fcoml
ljmp
in
outsb
xchg
sbb
mov
gs
fstp
and
stos
shlb
pop
mov
mov
inc
test
xchg
fisubrl
dec
sub
popf
push
and
and
mov
ret
mov
push
jno
xchg
mov
xchg
movsl
je
fwait
mov
sub
mov
stos
xchg
or
xor
stos
out
sbb
jns
xor
mov
rcrb
mov
lcall
sarl
and
xchg
cmp
xchg
adc
prefetch
stos
lea
or
xor
adc
lods
cmpsl
test
jb
sbb
cmp
imul
fwait
jb
movsb
sbb
test
sub
or
pop
mov
or
out
lret
or
push
ret
movb
inc
jae
pop
sub
sti
mov
icebp
push
mov
iret
adc
jae
stos
adc
xor
cltd
jmp
mov
push
xchg
inc
mov
adc
es
xchg
aad
testb
scas
push
cwtl
test
add
adc
in
pusha
clc
test
loope
jae
adc
xchg
scas
rcll
stos
xor
mov
fcompl
cmp
and
sub
adc
stos
int
andl
jp
sub
and
mov
xor
je
and
adcl
ret
gs
fbld
in
mov
jae
mov
out
sbb
popl
pop
sahf
lret
xchg
in
lret
stos
xchg
and
ja
add
rcrb
mov
fwait
xlat
jmp
pusha
in
mov
cmp
xchg
clc
cmp
lcall
push
jno
sub
call
sbb
ucomiss
mov
jne
xchg
divl
addr16
cmpsl
punpckhwd
xchg
pop
jmp
stos
sbb
xor
ret
enter
mov
fisubs
xchg
adc
mov
pop
test
xlat
jp
xchg
add
xchg
sbb
push
mov
out
and
cmp
movsb
xchg
sbb
cwtl
outsb
inc
stos
scas
xor
loope
sti
sbb
fs
enter
adc
push
xchg
sbb
mov
pop
mov
sbb
mov
xchg
movsl
mull
mov
jecxz
stos
mov
mov
add
ret
pop
lods
jb
adcb
in
daa
mov
jae
adc
es
mov
movsl
imul
scas
pop
push
cltd
xchg
cld
push
and
xchg
mov
cltd
xchg
aas
fwait
add
out
sub
mov
movsb
push
fsubs
xor
mov
in
mov
jb
cltd
cmpsl
adc
test
xchg
fsubs
fwait
jp
mov
sub
push
and
mov
out
sub
lcall
or
xchg
inc
push
inc
sub
xchg
pusha
lea
sub
pop
int
xor
adc
inc
adc
and
mov
inc
sub
cmp
int3
ficomps
or
pcmpgtd
pop
insw
push
xchg
ret
into
cwtl
sbb
sub
xchg
sub
popa
test
mov
pop
mov
mov
in
pop
push
mov
sub
lds
adcb
or
mov
xchg
cwtl
std
es
xchg
dec
push
jmp
sub
mov
cli
icebp
mov
xchg
cwtl
add
cltd
mov
sahf
or
and
addl
add
and
xchg
xchg
movsl
and
xchg
lcall
out
sub
sbb
add
mov
sbb
stc
or
or
popl
int3
push
sub
jae
pop
inc
data16
lret
cltd
shl
mov
cmp
cwtl
sub
sub
test
pop
js
adc
ret
out
push
sub
or
test
fwait
iret
dec
jge
xorb
adc
sub
stos
test
mov
and
notl
jae
mov
push
lds
popa
push
aam
cmpsl
mov
addr16
lahf
lock
mov
mov
lahf
xor
dec
mov
out
cmp
adc
fistps
xor
and
gs
stos
punpcklwd
movsl
mov
pop
cmc
adc
and
inc
mov
jg
mov
sbb
das
insb
test
fisttps
mov
cltd
popa
movsl
xor
jbe
js
lcall
lcall
fists
test
inc
stos
xchg
movsl
and
ljmp
or
mov
lock
mov
sbb
lods
lcall
call
or
out
cmpsl
xor
les
push
orl
lret
adc
lcall
in
sbb
cs
mov
or
je
xchg
jno
sub
imull
adc
inc
or
xchg
cli
xchg
test
bound
or
or
dec
stos
mov
stos
sub
cmpsb
pop
lods
mov
add
inc
movsl
cltd
xchg
daa
into
mov
sub
in
ljmp
test
mov
xchg
stos
aad
or
lahf
stos
dec
loop
shll
jae
mov
push
nop
sub
mov
ror
addb
subl
hlt
or
or
std
mov
mov
sub
ret
lcall
sub
daa
pushf
xchg
mov
test
and
das
mov
ret
xchg
or
stos
cs
lock
adc
nop
int3
cmp
or
lahf
adc
dec
jge
pop
xchg
sbb
movsl
sub
or
mov
popl
imul
jg
mov
movsl
lcall
rep
movsb
or
je
sub
call
and
xchg
xchg
push
sub
hlt
sub
xlat
mov
ficomps
mov
push
mov
fsubl
xchg
cmp
cmpsb
adc
icebp
or
xchg
mov
lods
inc
jg
sub
sbb
xchg
addr16
sub
pop
lock
ljmp
inc
xchg
in
in
or
iret
xchg
mov
add
lds
jg
arpl
xchg
sub
mov
mov
fwait
xlat
lahf
js
inc
aaa
xchg
xlat
xchg
push
pop
pop
data16
mov
and
add
jmp
movups
push
je
mov
pop
mov
insb
dec
cmc
lcall
in
imull
and
adc
sub
xor
sbb
fwait
adc
daa
movups
lahf
nop
mov
xchg
test
mov
test
fwait
or
jbe
orb
iret
scas
sub
mov
packssdw
xchg
sbb
sub
fs
sahf
pop
xchg
shr
push
or
insb
sub
andb
fs
fildll
js
jae
stos
sub
jno
or
scas
hlt
mov
jb
cmpsl
pop
nop
xchg
jmp
push
fwait
mov
sbb
daa
and
cmpsb
jae
icebp
notb
ljmp
adc
xchg
sahf
rcrl
and
sub
cltd
cmpsb
jbe
sub
je
adc
sbb
imul
pop
cmpsb
sahf
es
push
xchg
adc
lahf
sbb
adc
rolb
pushf
popa
xchg
test
cltd
mov
jmp
sbb
mov
push
xchg
mov
fimuls
mov
aaa
add
and
sub
stos
sub
lock
lods
iret
popa
sbb
sbb
in
aaa
mov
mov
mov
scas
popa
notl
popf
out
mov
push
sbb
std
sbb
test
and
std
pop
xchg
test
push
out
mov
and
or
pop
jb
and
les
sbb
dec
daa
cmp
out
shl
add
and
adc
ss
fiaddl
test
loope
xor
xchg
or
xchg
std
push
jnp
movsl
xchg
adc
lea
xchg
sub
xchg
sub
or
jecxz
aas
jnp
or
imul
test
movsl
pop
movsl
int3
stos
xchg
add
shlb
sub
movb
stos
je
mov
mov
mov
or
jae
xchg
sub
int3
push
and
fcoms
les
xchg
pop
or
and
adc
jle
iret
pop
or
daa
xchg
xchg
cmpsl
in
xchg
shll
and
mov
mov
filds
mov
mov
and
xchg
lret
xchg
fisttps
sub
repz
ret
decb
xchg
cwtl
xchg
add
adc
sub
or
mov
cwtl
mov
fwait
xchg
push
test
mov
stos
push
leave
push
fmuls
pop
es
in
cmp
or
into
insl
lahf
pop
jmp
mov
addr16
push
pop
outsl
or
xchg
mov
gs
nop
and
or
pushf
mov
xchg
dec
adc
ud2
lea
cmpsl
fcomp
add
cwtl
cltd
movsb
test
bound
push
test
das
adc
mov
mov
xchg
cs
mov
cmp
jge
cmc
xchg
movsl
dec
and
cmpsb
stos
jmp
mov
push
cmpsl
test
adc
std
fwait
es
mov
and
out
sti
std
adc
cmpsb
xchg
adc
pop
and
mov
test
xor
xchg
sbb
inc
scas
lcall
mov
pop
ret
hlt
lcall
xchg
sub
mov
dec
mov
scas
push
sub
and
pop
add
dec
cmpl
dec
push
bndstx
lcall
aas
lds
fsubs
fpatan
adc
fimuls
call
das
xchg
int
cmp
push
nop
xchg
xchg
pushf
sub
mov
test
xchg
mov
fsts
adc
cltd
sbb
sub
xor
ret
cld
adc
jb
or
std
int3
bound
in
addr16
and
add
adc
inc
pop
lock
push
dec
jbe
lcall
das
cltd
stos
test
nop
inc
scas
into
pandn
fiadds
mov
or
mov
loop
in
xchg
jno
or
and
iret
and
repz
test
mov
loop
or
imul
sbb
and
lcall
jmp
fnstsw
sahf
or
test
cltd
mov
out
out
push
or
and
cld
or
movsb
xchg
xor
jmp
adc
int
test
jae
xchg
das
and
add
sahf
je
xchg
cwtl
jmp
adc
dec
idiv
out
lret
fimuls
inc
jle
sbb
lret
adcb
cltd
add
std
bt
scas
xchg
nop
sbb
mov
and
xchg
je
jbe
mov
add
mov
out
mov
cwtl
loop
pop
mov
xchg
xchg
or
test
test
sub
xchg
cmp
mov
sbb
jle
sub
stos
cltd
jecxz
pop
xor
or
mov
push
scas
mov
xchg
jl
and
mov
es
adc
ljmp
xchg
or
gs
jle
push
sub
jae
es
outsb
sbb
xchg
and
and
je
cwtl
jb
xchg
pusha
mov
ljmp
in
test
and
lock
pop
rcl
pop
daa
mov
scas
xchg
push
sub
pop
adc
xchg
iret
lret
and
shlb
daa
jne
je
test
add
xor
or
sbb
pop
cmp
xchg
sub
mov
icebp
nop
sbb
das
add
xchg
imul
mov
ficompl
test
mov
pop
adc
cmpsl
imul
das
xchg
cltd
jg
rolb
xchg
sub
cld
adc
lcall
xchg
mov
sub
iret
fwait
daa
in
je
sbb
pop
xor
xchg
enter
mov
sbb
in
jb
movsl
xchg
inc
scas
xlat
mov
and
movsb
adc
adcl
bts
xor
and
fisttps
stos
sub
push
sub
iret
stos
push
lcall
or
push
sahf
inc
and
fs
inc
jb
adc
lcall
bound
and
or
pop
mov
mov
adc
movsl
int
xchg
push
xlat
sub
pop
cwtl
push
jae
movsl
daa
and
sbb
sub
add
pop
clc
aas
test
xchg
jae
mov
xchg
lcall
adc
or
iret
test
into
push
adc
mull
xchg
sub
test
pusha
push
xchg
in
and
cmpsl
sbb
movb
cmpsb
ja
jp
lahf
adc
dec
mov
lock
dec
adc
movsb
std
or
sub
and
jb
sub
xchg
xchg
mov
xchg
mov
fiaddl
xchg
sub
test
test
jnp
xchg
xchg
loope
scas
test
jp
push
xchg
pop
jbe
adc
adc
fdivs
xchg
test
push
lret
push
sub
push
mov
insb
jno
sbb
pop
pop
sahf
jb
subb
jne
in
push
cmpsb
out
int
js
sbb
jo
sbb
nop
pop
movsb
xchg
and
std
mov
push
sub
xchg
add
rorb
add
pop
clc
pop
adc
push
xor
pop
aas
pop
and
adc
cmpsb
sbb
lds
cmpsb
daa
nop
stos
iret
jg
fbstp
xchg
xchg
lret
xchg
dec
jb
mov
mov
xchg
pop
jno
movsl
sti
mov
and
cs
lret
mov
lret
sub
pop
xor
push
int
mov
lcall
out
pop
and
xchg
xor
aad
loopne
scas
xchg
stos
shll
adc
nop
mov
stos
adc
rolb
stc
push
jle
stos
pop
int3
jo
fwait
add
stc
ret
data16
or
es
cmpsb
movups
sbb
pop
cld
adc
pop
sub
xchg
int
into
jnp
or
inc
setbe
mov
sbb
daa
cli
dec
rorl
mov
push
mov
mov
cltd
mov
and
out
sub
jl
in
cmp
jb
xchg
cwtl
mov
pop
les
fldenv
scas
addr16
negl
in
push
sub
fwait
nop
jecxz
jne
fdivrl
xor
ljmp
and
popa
pop
xchg
sub
and
adc
cmpsb
ret
sub
test
mov
dec
sub
mov
sbbb
movsb
adc
pop
adc
and
fwait
mov
sbb
les
and
or
dec
mov
mov
hlt
test
cltd
clc
push
pminub
daa
shrb
scas
sub
cmpsb
pop
push
mov
jo
and
fwait
xchg
jb
or
sahf
roll
xchg
or
subb
dec
sub
jmp
xchg
inc
jmp
mov
lea
adc
sbb
adc
ss
xor
sahf
int3
sbb
cwtl
test
cmpsl
test
movsl
nop
mov
mov
test
movsb
and
or
push
nop
test
lret
test
scas
xor
pop
pusha
add
mov
cmp
mov
lock
push
iret
pop
cmpsl
mov
xchg
outsb
scas
pop
sub
mov
dec
scas
lods
sbb
iret
pop
into
push
lahf
xchg
movsb
test
fdivl
xor
lret
cmc
cwtl
fwait
out
jae
sub
pushf
pop
push
add
or
xor
xchg
cwtl
inc
pop
movsb
mov
out
rcll
adc
stos
fwait
xchg
xchg
data16
or
xchg
push
outsl
push
xchg
sub
cmpsb
xchg
sbb
or
sbb
mov
lcall
adc
pop
fcoms
je
mov
xchg
fwait
mov
das
lcall
jae
scas
sbbl
sti
xchg
and
mov
fisubrs
or
push
js
sbb
pop
xchg
mov
push
mov
pop
push
movsl
pop
and
daa
mov
sbb
sbb
insl
sub
push
movsb
insl
andb
mov
adc
xchg
lcall
in
sub
into
sub
xchg
add
mov
pop
outsb
aad
push
dec
cmc
cmp
pop
repz
fwait
mov
jmp
dec
cmp
lret
mov
xchg
inc
scas
lods
push
lcall
add
fdiv
mov
cmpsb
adc
xchg
mov
jno
sbb
stos
sub
mov
or
pop
stos
sub
cwtl
mov
stos
xchg
cmpsl
mov
iret
stc
cmpsl
fisubl
test
adc
rclb
xor
out
dec
xchg
mov
jl
xchg
daa
in
cmpsl
je
shrb
mov
push
jmp
les
dec
je
mov
mov
movsb
outsb
mov
lcall
mov
push
dec
adc
mov
xchg
dec
sti
daa
adc
mov
stos
mov
mov
fnsave
and
js
mov
cwtl
jae
stos
xor
sbb
push
adc
cs
and
iret
and
jle
and
adc
cwtl
mov
int
sbb
xchg
xor
pop
inc
mov
jecxz
cmp
adc
xlat
mov
mov
into
out
mov
dec
push
sub
mov
xchg
sbb
cltd
rorl
mov
movsl
mov
sub
xchg
mov
test
pop
pop
xchg
dec
std
xchg
imul
iret
mov
ficomps
or
into
ret
daa
sbb
setl
fwait
lahf
js
jp
dec
jae
push
outsb
scas
repz
cmovl
cld
test
icebp
push
mov
enter
lods
outsb
insb
push
imul
mov
nop
scas
dec
lcall
lods
mov
push
push
movsb
fisttps
pop
ficomps
es
sub
inc
adc
or
adc
xor
cmp
push
andb
loope
shlb
cmpsb
lahf
mov
cmova
xchg
aam
movsl
lret
mov
xchg
and
push
stc
lcall
sub
std
aas
andb
in
adc
and
outsb
mov
jae
mov
fnsave
xchg
adc
xchg
test
lret
das
stos
cmpsb
cwtl
pop
xchg
mov
les
mov
mov
xchg
sbb
cmpl
sbb
mov
das
inc
lahf
rcll
and
sahf
in
daa
test
mov
pop
clc
pop
xchg
xchg
mov
leave
imul
sub
lahf
xchg
fisubrl
scas
pop
and
jl
inc
jle
rcrl
xchg
xor
cmpsl
testb
cmc
xchg
movsl
or
xchg
cltd
fcoms
and
xchg
gs
mov
cmp
mov
popf
cmpsb
xchg
and
jns
test
mov
xchg
ret
cmc
imul
pop
xor
mov
sub
xchg
cmpsl
std
popf
dec
and
adc
sub
out
pop
adc
and
faddp
xchg
dec
stos
or
xchg
xor
or
lods
and
push
dec
cld
lcall
shl
push
cmpsl
mov
std
add
aas
pop
fstpl
loope
lret
sbb
lcall
add
sub
and
xchg
mov
nop
scas
stos
or
jl
stos
mov
xchg
es
fwait
xchg
in
cld
add
mov
push
stos
push
nop
inc
and
daa
mov
or
jbe
mov
and
xchg
lcall
and
xchg
es
jecxz
pop
jmp
xchg
imul
mov
xchg
mov
and
inc
test
loope
test
xchg
in
mull
cmc
lods
fadd
sub
aaa
pop
stos
pop
jmp
lahf
shrl
movd
pop
aas
shll
lods
orb
jp
sbb
sub
mov
or
xchg
xchg
aad
test
push
or
add
push
mov
or
mov
and
fs
jne
mov
xor
adc
scas
pop
xchg
or
sbb
pop
xchg
fwait
pop
jne
lahf
jg
in
sub
pop
adc
xchg
stc
mov
imul
shll
loopne
rcrb
mov
je
and
and
jmp
jle
cmpsl
or
mov
andb
in
pop
mov
dec
lcall
loopne
adc
pop
xchg
or
mov
push
xchg
adc
pop
xchg
cmp
pop
out
xchg
push
orl
cmpsl
jbe
mov
in
mull
xchg
mov
pushf
lcall
rolb
das
int3
mov
push
lock
pop
inc
divl
dec
popf
push
pop
cmpsb
je
test
mov
and
adc
lods
jae
pop
test
push
sbb
test
mov
xchg
cwtl
pop
sub
stos
and
adc
sub
sbb
sbb
cltd
xchg
jge
call
loop
and
dec
ss
nop
daa
jmp
loop
and
pop
or
rcrl
les
ret
cmpsl
jecxz
cmpsb
add
lret
adc
xor
pop
xlat
mov
mov
xchg
add
xlat
movlps
adc
out
nop
shr
xchg
in
sbb
sbb
xchg
scas
rcrb
cwtl
jmp
or
mov
xchg
cmp
push
test
mov
stos
imull
notb
xor
cltd
js
pop
in
test
xchg
scas
mov
dec
lcall
jae
and
out
repz
pop
popa
jno
jp
sub
xchg
jae
add
or
or
cmpsl
mov
xchg
and
test
mov
xchg
xchg
in
cs
mov
mov
and
mov
inc
mov
cmpsl
mov
xchg
or
or
movl
pop
fstpl
loop
das
mov
sbb
lret
jo
xchg
daa
xchg
xchg
dec
lret
xchg
cmp
es
daa
sub
add
imul
pop
xchg
pusha
push
mov
xchg
mov
mov
cwtl
jmp
or
pop
test
mov
or
xchg
fwait
or
mov
mov
aam
add
cmpsb
dec
test
xchg
mov
adc
xchg
imul
and
shr
xchg
sbb
daa
test
and
lret
push
lret
mov
mov
inc
jb
movsl
cmpsb
movsb
in
mov
mov
in
and
je
jo
cmpsl
mov
pop
xor
jo
popf
adcl
xlat
pop
jle
adc
call
adc
add
scas
insl
lcall
dec
cwtl
add
fnstenv
sub
cltd
rolb
les
and
fnstcw
or
out
movsl
xchg
out
notl
stos
push
xor
cltd
adc
jno
adc
and
cmp
push
sub
pop
xor
jle
mov
xchg
dec
mov
xchg
fldenv
sbbl
sbb
pop
cmpsb
subb
mov
lret
es
sbb
iret
dec
xor
pop
jo
mov
or
loope
das
das
xchg
lcall
mov
or
daa
lock
dec
cmpsb
push
out
dec
incl
and
sahf
fimull
mov
jae
mov
sub
mov
pop
movq
xchg
pop
sbb
orb
fidivl
and
xchg
push
nop
dec
sbb
cmpsb
or
adc
test
xchg
sub
jae
fwait
mov
insl
jo
and
sarb
sbb
lods
fmull
int
push
sub
ret
xchg
xchg
daa
hlt
pushw
mov
mov
jle
lcall
cmp
cs
cld
xchg
leave
test
das
sub
sbb
faddl
adcb
cwtl
stc
adc
xchg
cmpsb
cmpb
cmp
ljmp
adc
cs
mov
pop
push
test
xchg
sub
mov
jg
pop
fisubrl
and
adc
sub
mov
xor
imul
push
sbb
mov
cmp
and
push
mov
flds
and
loopne
cwtl
and
or
pop
ss
sbb
mov
xchg
leave
push
testl
or
mov
mov
xchg
pop
mov
and
scas
out
test
sbb
lahf
int3
mov
es
enter
movsb
loope
jnp
adc
clc
pop
xchg
sbb
pop
inc
xor
ror
push
push
jnp
mov
push
in
and
incb
pop
sub
add
nop
lcall
movsb
xchg
and
jecxz
enter
movsb
cmpsb
jno
lret
sbb
pop
outsl
mov
js
sub
or
fucompp
mov
js
jecxz
mov
xchg
les
mov
insl
mov
pusha
or
or
jno
xor
mov
insl
je
push
outsb
cwtl
mov
test
and
or
in
std
mov
xor
mov
and
sub
movsb
and
xchg
cmovl
out
mov
cmc
pop
es
dec
xor
adc
or
lahf
cld
cmpsb
dec
sub
add
jno
stos
mov
cltd
push
mov
movsb
sub
sti
sbb
loopne
xchg
mov
fs
adc
lret
dec
out
lcall
lahf
and
add
adc
mov
mov
jae
sub
adc
pop
or
or
adc
ljmp
fmul
add
pop
xor
das
fcomps
in
xchg
mov
js
jno
pop
lcall
pop
xchg
adc
lret
out
cmpsb
or
sub
mov
mov
sub
push
lods
dec
fdivl
inc
out
mov
insl
xchg
or
sub
outsl
scas
mov
and
xchg
mull
xchg
xor
xor
or
loopne
sbb
xchg
jp
adc
andb
repz
nop
mov
adcb
lret
lahf
mov
nopl
dec
sbb
test
xchg
inc
cmpsb
adc
mov
cmpsb
inc
stos
jmp
and
gs
pop
mov
dec
je
and
fs
pop
or
fcoms
xlat
fimuls
xchg
mov
mov
mov
and
ja
inc
pop
xor
cmpsl
aaa
sub
rclb
push
jmp
cmpsb
mov
idiv
js
stc
daa
xchg
fldcw
stos
adc
insb
fwait
xchg
daa
fyl2xp1
pop
jbe
push
jp
lods
mov
mov
and
cmpsl
mov
sub
sti
cli
mov
cmp
or
xlat
stos
in
xchg
out
movsb
sub
movsl
sbb
sbb
push
es
xchg
mov
jge,pn
xchg
fldenv
iret
stc
xchg
and
orl
punpckhwd
lahf
jg
scas
mov
pop
adc
xlat
jbe
and
sub
aas
adc
xchg
xchg
push
test
or
lahf
mov
or
fcompl
cmpsb
lret
xlat
push
dec
fidivrs
xchg
test
jle
xchg
and
dec
xchg
cmpsb
mov
push
cmpsb
jp
movsb
mov
and
out
cld
adc
adc
adc
imul
ss
std
sbb
mov
sbb
mov
push
mov
sbb
push
mov
xchg
mov
lods
mov
arpl
loop
loop
pushf
stos
and
jle
xlat
mov
and
es
scas
lock
mov
jb
sub
gs
and
add
test
jo
xchg
cwtl
pop
bound
jb
stos
fidivs
mov
xchg
mov
pop
xchg
pop
mull
lahf
or
xchg
jp
dec
adc
jle
or
fisubrl
mov
mov
xchg
lret
and
jp
or
aam
cs
push
xchg
cmpsb
push
mov
pop
sbb
sbb
pop
lock
imul
scas
leave
and
xsha1
cmpsb
or
add
and
stos
adc
push
scas
mov
push
mov
nop
jns
jbe
xchg
imul
fwait
adcb
adcb
mov
cmpsl
sub
insb
fsubs
adc
xchg
subl
es
test
mov
xchg
call
stos
inc
mov
lock
mov
scas
pop
adc
ret
mov
test
pushf
stos
mov
movsb
hlt
cld
sbb
jb
or
movsb
push
push
cmpsl
push
mov
scas
add
jno
adc
or
movsb
jbe
in
sub
push
dec
stos
dec
add
movsb
xchg
sbb
mov
out
xchg
xchg
sbb
xchg
in
test
ljmp
lahf
mov
stos
cmpsl
lcall
and
shl
cmpsb
adc
xchg
sbb
movsl
pop
cmc
mov
mov
das
aas
and
movsl
sub
xchg
jo
sbb
adc
sbb
mov
cmpsl
mov
test
test
cmpsb
movsb
xchg
push
push
inc
cltd
pop
cmpsl
inc
cmp
nop
sub
pop
mov
cmpsl
scas
daa
push
pop
out
movsl
or
pop
xor
add
je
xchg
movsb
xchg
xor
mov
mov
mov
add
clc
out
mov
sar
sbb
xchg
adc
stos
mov
mov
push
cwtl
lcall
adc
shlb
mov
cltd
addr16
xchg
sbb
lock
xchg
jmp
add
xchg
xchg
imulb
cmpsb
leave
pop
lcall
cmpsb
jb
cmpsb
add
xchg
xchg
jle
daa
fs
sub
mov
adc
aam
sbb
test
and
rcrl
fbstp
jge
pop
call
orb
mov
mov
scas
imul
push
pop
sbb
xchg
test
push
outsb
jg
pop
jecxz
xchg
fcomps
out
std
and
xor
and
les
sub
scas
push
lds
jo
cmpsb
les
or
outsb
fistpl
stos
mov
add
push
cwtl
xor
cwtl
push
in
mov
cltd
push
jbe
rorb
mov
adc
adc
xchg
mov
and
lods
scas
mov
test
inc
cltd
and
xor
je
repz
push
test
mov
push
mov
sar
mov
lahf
test
add
mov
mov
out
sbb
iret
jl
and
mov
xchg
insl
sub
push
lcall
xchg
and
sub
add
lahf
movsl
cltd
scas
inc
push
sub
sbb
and
mov
loopne
mov
or
loopne
lret
inc
rcrl
daa
dec
sub
sbb
push
jo
adc
scas
pop
mov
xchg
stos
in
inc
xor
xchg
sbb
adc
push
unpcklps
xchg
lods
mov
cmpsb
dec
jmp
jecxz
test
test
subb
jmp
inc
fs
sub
mov
xchg
cmpsb
and
mov
cmp
imul
jle
pop
lahf
xchg
xchg
mov
cli
mov
lcall
fcoml
cwtl
fs
pusha
jne
mov
xchg
mov
daa
pop
pusha
mov
xchg
nop
aas
xchg
in
repnz
and
jle
ret
fst
sahf
adc
popf
xor
xchg
adc
cltd
pop
push
cmp
pop
aad
sub
sub
cmc
daa
sbb
mov
rclb
push
mov
pushf
clc
dec
jb
cmpsb
push
paddsb
jo
sub
stos
xchg
inc
daa
mov
mov
xchg
inc
pop
imul
mov
xchg
sub
inc
adc
rcrl
mov
push
in
enter
mov
add
ret
sbb
rorl
mov
ds
mov
xchg
jecxz
xchg
xchg
les
cmova
idivb
pop
mov
testl
mov
negb
sbb
sbb
test
cmp
sbb
rcll
mov
clc
jecxz
xchg
aas
mov
cmp
mov
aas
test
mov
mov
mov
mov
mov
stos
jp
mov
fisttpl
mov
mov
testl
loop
mov
push
mov
gs
shll
cmp
adc
nop
xchg
adc
mov
adc
pop
mov
test
aaa
pop
mov
mov
cmp
cmpsb
sub
mov
rclb
pop
fadds
inc
cmp
push
or
dec
inc
les
cmp
adc
and
xchg
cmp
dec
sub
sarb
loop
orl
pop
xchg
mov
pop
sub
sqrtps
movsl
mov
dec
mov
frstor
jle
test
mov
ljmp
sarl
stos
and
testb
push
mov
mov
push
adcl
sbb
loope
mov
jecxz
mov
test
mov
dec
and
enter
imul
nop
jecxz
mov
and
test
sub
jecxz
shlb
dec
jbe
movsb
lahf
sbb
daa
xchg
or
sub
mov
mov
adc
add
pop
xor
and
arpl
mov
adc
push
lcall
adc
std
xchg
and
mov
sub
movsl
out
and
adc
add
sub
xchg
sub
xchg
movsb
lahf
or
add
mov
xchg
in
out
mov
and
je
xchg
mov
inc
xchg
loop
nop
rclb
mov
and
into
fwait
adc
mov
jno
xchg
pop
mov
xchg
xchg
sbb
lds
in
xchg
hlt
or
and
into
ja
nop
xchg
jno
cltd
test
arpl
jae
adc
adc
pop
inc
js
divl
mov
out
or
sub
sbb
or
cltd
mov
xchg
and
cld
stos
cwtl
nop
and
pop
mov
sub
cmpsl
mov
xchg
jae
mov
movsb
icebp
sbb
or
mov
fwait
or
jge,pn
stc
sub
test
or
das
movsb
cwtl
dec
stc
jle
sar
pop
xchg
loopne
mov
cli
mov
xchg
mov
lahf
sub
xchg
es
add
lods
push
rcll
or
out
test
sub
and
lcall
aas
ret
xchg
shlb
and
inc
and
bt
cmpsl
aad
mov
mov
push
movsl
mov
xchg
jbe
dec
xchg
and
xchg
hlt
daa
push
pop
shlb
pop
xorb
adc
adc
push
or
jne
clc
sbb
sbb
xchg
adc
xchg
mov
fadds
aam
mov
repz
push
add
ret
push
sub
jnp
xchg
jp
hlt
seto
sub
nop
jne
adc
pop
xchg
add
cmpl
outsb
mov
jno
daa
stos
test
inc
mov
roll
push
enter
movsl
lcall
sub
push
pushf
arpl
mov
je
out
inc
cmp
cwtl
or
adc
lret
add
xchg
mov
xchg
push
adcl
and
sbb
mov
iret
sbb
es
rclb
arpl
cld
js
cltd
jle
jae
test
dec
inc
push
andb
daa
in
pop
test
inc
mov
fisttpl
fucom
cli
shlb
pop
jg
mov
hlt
orb
sbb
cmp
pushf
xchg
xchg
test
mov
xchg
repnz
test
cmp
aaa
inc
inc
mov
sbb
test
xchg
nop
lahf
and
and
int3
lods
xchg
std
push
adc
leave
mov
xchg
pop
push
xchg
daa
mov
fcompl
adc
cmp
scas
cmpsb
adc
add
pop
in
or
lahf
loope
push
push
cmc
mov
nop
sub
adc
mov
jo
stos
xchg
lcall
cmpsl
scas
int3
ficoml
rcr
lahf
lea
daa
movsl
cwtl
adc
and
xlat
es
pusha
cmpsb
popa
arpl
sub
ljmp
movsb
xchg
adc
stc
test
shlb
stos
movsb
mov
daa
xchg
sbb
test
xchg
add
outsl
cmpsl
sbb
popf
pop
lret
negb
lock
mov
push
dec
pop
cmpsl
add
mov
ret
lods
and
xchg
lahf
test
xchg
mov
mov
sbb
addr16
nop
mov
inc
sbb
iret
mov
xchg
jb
sub
and
adc
mov
sub
or
movsb
xchg
cmpsl
in
jns
aas
jne
movsl
fwait
mov
add
mov
bound
xchg
adc
mov
mov
mov
ficomps
push
pop
mov
mov
pushf
test
lahf
cwtl
cli
movsb
and
pop
loopne
xchg
out
adc
sub
xlat
pushf
ret
jno
sbb
mov
stos
jo
xchg
xchg
adc
and
ret
adc
test
jge
mov
jbe
mov
jo
mov
xchg
sub
xchg
cltd
cmc
loopne
sub
je
std
pop
sub
pop
push
and
xchg
pop
xchg
cwtl
aad
and
icebp
or
imul
sbb
movsl
and
xchg
mov
and
mov
xlat
lcall
lock
adc
fwait
scas
int3
xchg
or
dec
jbe
stos
stos
and
mov
js
cmpsl
and
sub
and
adc
scas
in
and
pop
lret
mov
out
stos
jno
and
mov
imull
adc
xchg
jp
dec
movsb
mov
stos
pop
test
jmp
jno
and
cmc
ret
mov
xor
test
lcall
jae
and
xor
setl
cmp
mov
jne
xchg
hlt
insb
jae
test
sbb
sbb
mov
xchg
or
mov
adc
xchg
nop
mov
jo
mov
gs
scas
int
daa
push
lahf
sbb
jno
movsb
xchg
xor
cwtl
adc
daa
or
shrl
fwait
sbb
mov
xchg
nop
adc
mov
test
xchg
jne
mov
mov
cwtl
or
sbb
sub
push
cltd
jp
ret
scas
inc
sahf
sbb
sbb
ljmp
notl
or
mov
and
pop
mov
stos
and
scas
cmpsb
and
movsb
xchg
mov
pop
push
bt
mov
test
pop
popl
dec
mov
loop
pushf
nop
into
sahf
test
adc
pop
pushf
seto
cmp
push
mov
aam
sahf
hlt
daa
jmp
dec
and
and
cmp
adc
cwtl
push
xor
rclb
ljmp
xchg
and
pop
mov
dec
mov
cmp
sub
mull
xchg
sub
pop
movsb
fwait
mov
mov
test
es
push
and
outsb
push
jo
cmpsb
cmp
pop
pop
sti
loop
xchg
insb
nop
mov
je
or
mov
or
sub
mov
cmpsb
outsb
mov
adc
popf
adc
mov
je
and
and
icebp
popf
stos
int3
repnz
sub
lret
and
add
adc
daa
and
cld
fsts
outsb
jae
nopl
adc
jno
movsl
mov
outsl
and
sbb
sahf
addr16
mov
cmpsl
and
test
stc
and
es
ret
cltd
mov
adc
jne
and
pop
in
push
inc
dec
leave
jecxz
xor
es
cmp
nop
xchg
mov
notl
jg
xchg
daa
mov
add
movd
movsb
xchg
jmp
push
mov
in
cmc
pop
sbb
mov
pusha
xchg
xchg
push
in
push
pop
int3
ds
in
dec
ljmp
cmpsl
mov
xchg
movsb
loopne
fwait
xchg
adc
push
adc
stos
mov
xchg
sub
inc
mov
pop
fistps
addr16
call
xchg
adc
xchg
mov
fwait
or
jae
adc
mov
mov
or
pop
xchg
sahf
mov
fs
xchg
repz
sbbl
sets
cmpsb
pop
sub
jle
adc
mov
fwait
jno
add
and
mov
pop
cltd
fmull
test
xchg
and
xchg
adc
or
push
gs
out
cld
xchg
adc
iret
stc
xchg
and
dec
add
cmpsb
pop
xchg
sub
test
or
adc
adc
pop
popa
pop
daa
xor
in
movhps
ljmp
setp
adc
xor
jg
adc
icebp
out
cmpsb
lahf
xchg
nop
xchg
outsb
pop
into
fisubs
mov
fwait
and
and
or
cmc
andb
add
cmpsb
dec
xor
xor
scas
dec
outsb
push
in
les
mov
loop
js
adc
ret
jb
movsb
stos
pushf
lea
pop
out
ficoms
xchg
mov
js
or
outsl
inc
adc
sbb
imul
mov
xchg
xchg
mov
pop
jae
sub
insb
and
mov
nop
and
wbinvd
mov
pop
lcall
lods
jmp
movsb
daa
xchg
sbb
adc
scas
enter
sahf
ss
mov
push
mov
sub
xchg
sub
xchg
xchg
and
lds
cmp
adc
xchg
mov
or
sbbl
daa
xor
xor
mov
jmp
xchg
test
jecxz
stc
mov
negl
jp
insb
jge
inc
fnsave
cli
mov
adc
cwtl
cmpsb
xorb
in
xchg
sub
hlt
out
xchg
test
insl
jg
jg
lret
mov
js
push
out
test
rolb
and
sub
mov
xchg
xchg
lds
out
adc
jp
test
inc
js
std
jge
nop
xorb
inc
push
cwtl
sub
adc
mov
lods
mov
xchg
cmpsl
xchg
xchg
jg
adc
bound
or
data16
jmp
popl
daa
mov
pop
xchg
mov
test
xchg
test
cmpsl
pop
sub
fisttpl
mov
testl
xchg
cli
pause
adc
pop
adcb
sub
repz
movsl
mov
mov
and
xor
push
das
cmp
mov
rorb
int
mov
push
adc
cmp
ljmp
fwait
popf
outsb
xchg
sbb
and
jecxz
test
xchg
or
cwtl
sbb
cmp
mov
mov
jns
xchg
xchg
std
mov
stc
das
stc
adc
or
mov
mov
fistps
pop
daa
xchg
fs
mov
stos
sbb
adc
inc
sub
mov
xchg
cltd
nop
jg
pop
sbb
xchg
dec
out
adc
cld
jbe
xchg
and
fcoms
push
jae
xchg
mov
or
adc
cmpsb
inc
mov
mov
lahf
sbb
es
xor
sbb
arpl
cld
push
loop
pop
cmc
push
fwait
sbb
mov
xchg
xchg
push
dec
clc
addr16
stc
sub
cwtl
mov
into
lahf
and
xchg
dec
jmp
sub
sbb
xchg
movsb
jg
mov
mov
adc
push
mov
daa
mov
xchg
or
pop
in
dec
stos
lcall
movsb
cmp
pop
sti
sbb
mov
xchg
pop
and
adc
and
xor
jnp
leave
out
lds
xchg
push
add
arpl
pop
jo
or
mov
inc
or
fwait
in
and
and
adc
adc
push
punpckhdq
lahf
mov
sub
fwait
and
pop
mov
inc
cmpb
cmpsl
sbb
inc
in
jbe
hlt
mov
stos
and
out
jl
or
adc
iret
and
insl
pop
aaa
jbe
sbb
or
aas
xchg
nop
imul
stos
ja
mov
cmpsl
xor
xchg
loope
ds
aas
xchg
fmuls
mov
fwait
or
pop
pop
call
packsswb
jg
cmpsb
roll
mov
imul
push
adc
divl
outsl
pusha
sub
add
lock
push
or
mov
test
iret
cmpsl
cmpsb
adc
xchg
mov
xor
pop
fcomp
mov
or
inc
xchg
cwtl
xchg
into
push
adc
test
movsl
adc
movsb
stos
pop
adc
or
sub
and
dec
lahf
call
test
inc
or
cmp
mov
sbb
lahf
xchg
xor
add
pop
cmovno
and
xchg
mov
xchg
mov
test
cmp
inc
fdivs
mov
pop
stos
sahf
xor
call
sub
and
into
add
and
pop
inc
pop
imul
adc
inc
movsl
enter
test
and
bound
pop
rclb
jmp
xor
inc
sub
cmp
mov
cmpsl
iret
pop
movsl
and
fildl
ja
adc
mov
pushf
cwtl
xor
push
adc
jmp
mov
jge
enter
push
cmp
xchg
faddl
dec
cmc
and
xchg
mov
sbb
pusha
lret
xor
stc
adc
loopne
mov
add
mov
stos
add
sub
adc
sub
lret
sub
pushf
test
jb
lahf
mov
sarl
ficoml
adc
jae
adc
and
pop
cltd
mov
scas
mov
mov
add
arpl
xchg
int3
dec
add
and
adc
or
adc
or
sbb
and
mov
shrl
add
and
and
popf
xorb
cwtl
and
xchg
les
or
test
xchg
lcall
sub
cmpsb
xchg
xchg
fcoms
aas
mov
mov
movsl
push
cwtl
or
xchg
and
nop
lcall
jecxz
xchg
jg
sub
sbb
aam
ret
and
scas
lock
test
test
sub
adcb
lea
sub
mov
mov
mov
pop
jb
clc
adc
sub
in
enter
push
mov
test
in
xor
cmc
and
xchg
loope
fwait
add
push
test
sti
sub
or
aad
xor
mov
jb
daa
lock
fwait
xchg
push
xchg
adcl
int3
push
dec
and
sbb
jae
and
shld
sbb
mov
stos
and
and
xchg
mov
xchg
test
mov
push
je
push
icebp
push
and
or
stos
test
jae
xor
cwtl
cmc
mov
cmpsl
int3
test
cmpsl
add
cmc
adc
cmc
mov
jo
adc
pop
rclb
out
and
xchg
xchg
adc
add
xchg
stos
lret
pop
and
lret
sbb
test
mov
and
js
ljmp
dec
jge
stc
mov
or
test
mov
sub
cmp
sub
loopne
mov
sub
test
sbb
test
xchg
and
aas
enter
outsl
adc
xchg
outsl
lcall
lahf
jle
or
jle
stos
sub
xor
xchg
pop
adc
iret
out
bound
xor
xchg
lock
pop
into
sbb
lahf
mov
std
jbe
and
push
pop
nop
bt
sahf
mov
sti
cmpsb
fists
dec
cmc
sbb
lods
push
adc
scas
and
jle
dec
xchg
stc
pusha
cwtl
mov
pusha
in
aam
leave
out
pop
sbb
jns
mov
pop
mov
cmp
mov
sbb
mov
testb
sbb
lcall
jo
and
repz
xor
les
lcall
or
mov
mov
mov
orb
or
cmc
cmp
nop
xchg
xchg
push
mov
cli
imull
fisttps
pop
mov
mov
or
lcall
sbb
fiadds
ljmp
pop
mov
and
xchg
in
inc
cmp
and
outsl
imul
cwtl
sbb
test
lds
les
bndstx
lods
xchg
sub
mov
sub
cmpsl
sub
fldl
mov
sub
aaa
cmc
daa
mov
adc
xor
jbe
push
sbb
xchg
cwtl
sub
sbb
fistl
sbb
sub
outsl
sub
and
movsb
pop
insl
sub
stos
xchg
comiss
xchg
mov
sub
movsb
ficoml
jnp
and
xchg
out
adc
mov
cs
lcall
sahf
xchg
je
stos
mov
mov
xchg
je
and
jno
or
sbb
lcall
testb
sub
mov
cwtl
mov
push
pop
add
xchg
and
lods
xchg
data16
xchg
out
lret
jmp
mov
push
fidivs
popf
adc
testl
xchg
xchg
mov
xchg
in
sub
mov
lahf
nop
and
out
cs
lods
xchg
xchg
mov
xchg
lahf
adc
nop
adc
push
fisttps
scas
cld
sub
sub
nop
rclb
stos
lret
popl
lahf
std
pop
iret
dec
sahf
fwait
xchg
stos
dec
mov
mov
in
push
or
adc
and
xor
pop
jae
dec
sbb
and
or
jno
daa
push
pop
adc
test
sahf
lock
adc
mov
jae
adc
clc
sub
mov
and
xchg
or
mov
mov
push
in
sub
nop
lcall
in
subb
or
adc
or
and
push
xor
fimull
jno
push
in
jo
mov
jbe
add
mov
xchg
lock
lcall
daa
xchg
and
stc
mov
cltd
lahf
outsl
mov
push
adc
pop
jne
punpckhbw
iret
fcoms
scas
enter
adc
shrb
daa
sub
jb
xchg
pop
lcall
or
mov
pop
scas
push
pop
xchg
movntps
lcall
outsl
fbld
pop
aas
bound
sbb
and
scas
pop
mov
mov
or
and
mov
insb
cs
and
or
cwtl
cmp
pop
test
fwait
or
insb
lret
mov
adc
jge
in
call
fisubl
insl
xor
xchg
mov
test
and
lea
mov
sbb
dec
sbb
mov
xchg
pminsw
cmpl
mov
xchg
pop
lahf
mov
cmp
in
cltd
test
xchg
insl
jl
xchg
xchg
xchg
dec
push
mov
roll
jecxz
mov
cmpsb
and
xchg
fiadds
lret
mov
ret
pop
psubb
xchg
sbb
and
mulb
test
in
adc
push
and
int3
sub
icebp
adc
sbb
or
std
and
inc
xchg
stos
daa
stos
addb
jo
xchg
cmpsl
mov
lahf
push
out
insl
sub
xchg
pop
cwtl
loopne
sbbb
xchg
outsl
adc
xchg
nop
mov
nop
test
push
adc
cmpsl
sub
enter
cmpsb
sub
sbb
andb
xchg
les
std
adc
enter
hlt
nop
clc
mov
cwtl
mov
jge
sub
rcr
lods
jge
lahf
sbb
mov
xchg
or
jae
or
scas
mov
loopne
test
mov
out
xchg
xchg
movb
movsl
sub
sar
add
push
lock
movsl
mov
test
mov
push
in
daa
jno
mov
fisttps
sub
push
lods
xchg
and
pop
and
pop
or
xchg
movsl
pop
and
nop
jg
jg
fs
shll
and
rclb
push
adc
out
xchg
xchg
movsl
mov
dec
or
scas
xchg
sbb
mov
mov
cmpsb
adc
mov
xchg
mov
cs
mov
test
or
gs
xchg
fdivrp
and
negl
mov
xor
bound
pop
imul
mov
hlt
lcall
int
sub
or
pop
xchg
adc
jmp
mov
mov
stos
mov
das
inc
xchg
mov
daa
and
adc
ljmp
sbbl
or
xchg
and
fiaddl
adc
and
and
call
div
mull
xor
jae
xor
jbe
jp
mov
fistpl
lods
paddd
insl
add
cmc
mov
lcall
sbb
mov
cltd
es
ja
mov
scas
sub
and
cld
or
pop
mov
and
outsb
mov
cmpsl
xchg
cmpsl
js
jae
movsb
repz
adcl
or
test
fsubrs
jp
lcall
sbbb
lcall
xchg
sbbl
xlat
adc
or
or
pop
lret
nop
xchg
mov
or
jmp
pop
add
test
adc
iret
shrl
mov
shll
sub
push
int3
mov
mov
insl
mov
sub
xchg
or
and
mov
int3
mull
pop
xor
mov
xor
test
hlt
adc
mov
ficoml
sbb
mov
dec
or
lcall
pop
xchg
mov
adc
and
int3
in
mov
sub
andb
jno
sub
cld
imul
out
sbb
outsb
sub
cmp
jge
inc
mov
movsb
cmp
jg
mov
cmpsb
es
mov
and
add
std
sbb
xchg
lock
inc
mov
pop
lds
dec
xchg
ret
pop
imul
push
sub
mov
pop
sub
cmp
and
xchg
loopne
dec
rol
scas
cltd
repz
push
daa
sbb
jecxz
dec
fimull
adc
insl
xor
jb
xchg
bound
lcall
popl
insb
push
jns
xchg
and
jno
xchg
xchg
adc
pop
or
stos
sub
fwait
ss
stc
dec
pop
rcrl
push
mov
iret
mov
xor
jbe
lahf
hlt
xlat
mov
test
and
push
in
mov
sbb
pop
jb
xchg
add
jecxz
mov
stos
mov
gs
mov
movsb
sub
sub
xchg
movsl
stc
hlt
icebp
push
or
xlat
and
sahf
cmpsl
lret
xchg
pop
aaa
and
daa
cli
movsb
mov
xor
xchg
and
test
rorb
addr16
jp
mov
outsl
shlb
mov
repz
mov
xchg
cmpsb
pop
mov
lret
test
cmp
sub
subl
in
jb
and
fs
mov
movsl
mov
xor
adc
sub
aaa
pop
mov
sbb
mov
inc
sub
int
sbb
das
outsb
xchg
lcall
mov
lret
lcall
or
nop
jns
out
pop
push
or
mov
cmpsl
xchg
lahf
daa
outsl
fwait
or
stos
pop
inc
adc
xor
je
je
mov
es
jo
xchg
sub
xchg
mov
ljmp
and
sbb
or
xchg
ret
mov
xchg
jns
test
and
xor
test
adc
push
mov
dec
test
fildll
add
pop
int
or
sbb
sbb
xchg
orl
je
or
dec
js
jo
xchg
xchg
cmpsb
aaa
xchg
stos
roll
cmp
insl
fistl
lahf
ds
lea
mov
mov
sbb
xchg
mov
jo
push
test
fdivrp
int3
and
push
jbe
cltd
data16
lcall
cmpsb
mov
ds
sbb
stc
das
pop
sub
xchg
and
or
jecxz
es
adc
sti
pop
or
mov
test
add
nop
and
and
dec
test
jbe
call
hlt
cwtl
mov
push
es
je
sub
sub
and
mov
sete
mov
xor
or
hlt
dec
mov
sub
in
cmp
jo
cwtl
or
jne
jno
test
add
rorb
cld
inc
sub
push
mov
adc
popf
les
xorb
out
les
inc
xchg
cmpsl
add
imul
cmpsl
cmp
jns
ds
xchg
lcall
mov
jb
stos
arpl
sahf
push
adc
cmpsb
or
mov
lds
aaa
lock
cmpsb
or
scas
push
stos
mov
adc
dec
into
xor
movsb
pushf
or
mov
add
iret
push
jbe
je
jb
lcall
push
cmp
scas
inc
push
movsl
add
mov
enter
mov
sbb
adc
out
bswap
jae
cmpsb
pop
pushf
pop
adc
fidivs
and
ljmp
sub
adc
or
movsl
mov
push
movsb
sbb
out
adc
xchg
mov
or
popl
ficoms
and
push
pusha
push
push
stc
or
adc
xor
and
fidivrs
adc
cmp
or
mov
cmp
dec
jb
cmpsb
fs
or
clc
jmp
push
mov
cmpsb
pop
adc
sbb
push
mov
mov
loopne
test
push
fcoml
dec
jmp
cmp
mov
xchg
ja
and
movsl
xchg
sub
inc
add
xchg
cld
sub
mov
xor
mov
inc
addb
fnstcw
xchg
xchg
and
shrb
mov
adc
cmp
lcall
movups
std
cmpsb
test
mov
add
test
arpl
xchg
xchg
insb
jle
nop
cltd
nop
and
insb
cmc
clc
push
mov
xor
adc
push
testl
cmpsl
in
adc
movsl
adc
push
cltd
and
les
cmp
fwait
cmpsl
cli
adc
notl
pushf
pop
xor
or
movsl
ret
sbb
lahf
mov
pop
dec
movl
adc
shr
xchg
pop
mov
aam
or
fwait
lret
mov
or
mov
clc
jmp
loope
pop
ljmp
adc
clc
or
cwtl
adc
cmp
xchg
and
test
mov
les
orb
adc
fucomp
push
push
ss
sbb
mov
stc
repz
test
stos
or
mov
std
shlb
out
sbb
gs
mov
outsb
pop
cmp
and
sbb
imul
mov
pushf
xor
mov
mov
std
fld
mov
stos
and
mov
jecxz
and
pop
cmpsl
or
stos
pop
cmp
lret
lcall
jb
sub
sarl
mov
pushf
jge
test
mov
pop
jg
stos
add
pop
xchg
xchg
xchg
sub
pop
pusha
enter
or
mov
add
cmp
call
sbb
mov
call
shl
arpl
sarl
std
fld
test
xchg
cld
mov
lret
lret
test
fcoml
jno
push
nop
mov
sub
and
adc
and
sbb
iret
sub
sti
in
adc
lock
lods
sub
pop
setno
ja
fstpl
adc
pop
pop
dec
push
xchg
ljmp
fisubl
xchg
push
xchg
sbb
xchg
loope
push
nop
mov
repnz
rcrb
cmp
inc
push
addr16
lock
pop
cwtl
add
jge
lcall
xchg
pminub
call
test
add
mull
mov
stos
lcall
xchg
xchg
fldenv
lods
mov
cmpsl
or
mov
nop
in
xchg
lahf
sbb
jne
mov
std
mov
pop
repz
test
cmp
xchg
mov
add
mov
pop
sbb
push
pusha
adc
jmp
push
scas
push
xchg
mov
add
push
and
mov
xchg
mov
pop
sub
cwtl
xchg
addr16
cmpl
scas
sbb
jbe
adc
xchg
cmpsb
lock
or
sub
sbb
ljmp
test
cs
into
mov
mov
bswap
sub
je
xchg
sbb
mov
lea
mov
cwtl
mov
sub
jo
and
mov
cmpsl
xchg
test
cwtl
xchg
adc
jb
mov
cmpsb
add
xchg
xor
and
xchg
popl
cmc
inc
inc
fwait
sub
jp
mov
cmpsb
inc
and
push
pop
dec
sub
daa
or
bound
fiadds
mov
test
jge
adcl
xchg
or
cmpsl
and
add
push
lea
into
cwtl
and
mov
cld
sub
iret
cmp
cmpsb
movl
dec
xchg
jp
cld
loop
inc
sub
and
aas
loope
and
mull
cltd
or
test
add
cmp
test
sub
sbb
adc
js
ud2
out
in
stos
movsl
push
aad
lahf
xchg
fisubrs
xchg
jne
movsb
push
mov
movq
adc
rorl
ja
fimull
rol
xchg
adc
xlat
xlat
xchg
cmpsb
jb
cwtl
stos
pop
mov
inc
add
cmp
popa
bound
push
sub
fs
lret
sbb
fs
push
and
inc
jbe
adc
daa
pop
mov
out
push
pop
stc
and
std
test
jmp
imul
cmpl
and
and
imul
rcrb
sub
out
sahf
jno
lahf
push
mov
test
test
or
xchg
xchg
adc
push
movsl
sbb
lcall
cmpsl
aaa
fwait
pop
xchg
imul
mov
lcall
sub
data16
jb
add
stos
into
daa
xchg
movsb
mov
xchg
sbb
jmp
xchg
adc
pop
lahf
stos
mov
nop
dec
outsl
cmpsl
mov
insb
xchg
cli
sbb
pop
push
sub
mull
or
stc
xor
sub
fwait
xchg
mov
mov
test
sub
jne
xchg
fldt
cltd
test
lods
stos
pop
mov
push
lret
int
in
lcall
or
fsubs
daa
or
xchg
add
xor
stc
add
adc
sub
mov
add
in
test
scas
sbb
xchg
mov
dec
mov
cwtl
adc
and
mov
jae
add
testb
pop
pop
mov
jae
mov
out
sub
adc
ficoms
push
daa
cwtl
es
mov
test
mov
mov
es
adc
mov
or
cmp
lcall
adc
subl
cmc
mov
adc
pusha
sub
fwait
popl
sub
adc
xchg
inc
pop
andb
faddl
insl
pop
adc
push
add
mov
xchg
movsb
aas
mov
shrl
and
lahf
mov
xor
sub
sub
xor
or
jb
xchg
test
cmpsb
sahf
xchg
add
test
pop
sub
stos
lahf
xchg
xchg
sub
scas
mov
adc
and
out
sahf
in
sbb
stos
mov
adc
in
faddl
cmp
lock
rclb
jo
mov
pop
stos
sbb
fdivrp
xchg
cmpsb
cli
es
mov
fildll
jecxz
test
ds
loope
out
lcall
in
pop
jb
xchg
push
mov
leave
out
mov
and
cmpsl
adc
in
vpperm
jmp
cmpsl
daa
sahf
jg
ficoml
mul
fsub
and
fnsave
sub
test
mov
sbb
xchg
loop
es
js
repz
data16
and
pop
adc
push
das
out
xchg
xchg
out
fcmovnbe
fldcw
xchg
popf
xchg
loopne
and
out
sub
or
and
lret
or
popf
add
cmp
xchg
push
and
daa
sbb
cmpsb
lret
or
lea
xchg
stc
jae
adc
push
jno
and
xchg
cmp
test
mov
inc
imul
push
jae
and
push
sub
sti
test
xchg
cmp
daa
in
lret
cltd
xchg
or
pminsw
pop
sbb
pop
imul
stos
cwtl
jb
or
int
pop
pop
xor
inc
mov
popl
xchg
pop
scas
mov
pop
pushf
xchg
imul
sti
pop
or
mov
sbb
add
roll
add
test
adc
lret
scas
movsl
xchg
cmpsl
xchg
mov
pop
insl
jp
and
mov
push
test
or
pop
cltd
adc
std
repz
addr16
or
sub
orb
xchg
add
or
mov
or
repz
cmpsl
clc
cmpb
stos
xchg
mov
je
xchg
xor
cltd
loopne
mov
and
xor
add
shrb
cwtl
lods
or
sub
test
lret
xchg
push
scas
mov
clc
movsb
cltd
mov
adc
stc
xchg
xor
cmpsl
and
test
mov
mov
mov
xor
xor
adc
xor
dec
mov
outsb
pop
and
xlat
arpl
mov
push
xchg
lahf
mov
xchg
cmpsl
dec
pand
adc
gs
mov
dec
imul
in
das
out
test
dec
push
stos
xchg
pop
mov
pop
fisubrl
mov
mov
frstor
ljmp
std
clc
js
push
or
or
cmc
jo
ljmp
pushf
jb
daa
cltd
fwait
add
inc
xor
push
cltd
jno
mov
outsl
into
lahf
add
fwait
outsb
dec
mov
xchg
mov
mov
adc
and
add
int
stos
popa
or
adc
mov
ss
jne
test
or
jmp
sub
scas
jb
xchg
mov
sbb
mov
movsl
mov
sbb
sub
xchg
icebp
and
dec
in
daa
pop
jp
test
je
fwait
repz
notl
aam
adc
mov
xchg
mov
xchg
test
and
push
icebp
stos
xchg
xchg
and
out
xor
sbb
mov
sbb
jmp
push
jb
xchg
pop
jae
lods
sbb
adc
sbbl
pop
ljmp
adc
jb
xchg
sub
sub
add
sbb
cmpsb
mov
mov
push
jle
mov
sbb
sbb
push
adc
xchg
xor
and
cwtl
mov
xor
mov
loop
lahf
add
scas
jb
push
cmpsb
cwtl
jle
in
dec
out
test
mov
mov
and
xchg
lahf
lret
mov
data16
and
cld
shlb
fldenv
sub
or
mov
and
mov
or
mov
adc
in
pop
gs
pop
jbe
push
mov
pop
mov
adcl
pop
push
cli
xchg
or
xchg
subl
xchg
into
or
xchg
fsubs
popl
lods
xchg
or
xchg
and
mov
push
test
roll
fdivs
and
fsts
sub
pushf
or
xchg
inc
scas
or
repz
sub
mov
cmpsl
in
jecxz
adc
negb
mov
xchg
or
xor
adc
xchg
xchg
mov
pop
stos
pop
and
cwtl
push
adc
xchg
and
sub
fwait
dec
and
out
push
adc
lcall
dec
xchg
and
insl
adc
scas
mov
xchg
stos
xchg
sub
stos
sub
popa
jg
jg
adc
cmp
vmwrite
repnz
jbe
xchg
cs
xchg
pop
test
cmp
jns
mov
movhps
adc
lret
addb
jbe
sub
in
icebp
mull
stos
push
adc
or
notl
pop
inc
xchg
sub
xchg
pop
sub
xor
xchg
push
js
adc
or
sub
mov
sbb
pop
mov
mov
jp
jae
mov
lods
adc
subb
test
sub
fidivrs
movsl
fisttps
add
and
mov
add
pop
mov
sbbl
sbb
pop
mov
xchg
xchg
stos
push
movsl
jbe
push
cmp
jmp
or
lcall
sbb
xor
sbb
adc
loopne
enter
lret
xchg
cmp
mov
xchg
out
mov
xchg
test
mov
push
sbb
jno
mov
sub
adcb
sbb
and
cmpsl
orb
jae
and
add
xchg
cmpsl
mov
stc
mov
cmpsl
aas
into
mov
fcomps
or
mov
adc
pop
sub
and
cwtl
cltd
or
fwait
sub
je
xchg
and
adc
stos
call
xchg
or
xchg
adc
inc
int
adc
jns
clc
int3
adcb
jae
sub
cmp
js
jae
xchg
call
mov
or
lret
and
jge
adc
test
jmp
inc
pop
nop
or
cmpsb
inc
xchg
mov
cwtl
mov
jne
or
mov
push
push
or
lock
xchg
sub
dec
stos
jb
or
fsin
xlat
nop
ds
push
or
clc
movsl
push
lcall
test
or
mov
cwtl
dec
mov
mov
scas
lcall
jge
cmp
cmc
xchg
lcall
push
xchg
shlb
xchg
fisttps
scas
pop
lret
mov
dec
test
mov
mov
cwtl
sbb
loopne
sbbb
jmp
lods
xchg
adc
cwtl
nop
adc
jo
and
cld
fs
and
mov
adc
cltd
pop
mov
addb
push
fwait
adc
xchg
ret
xchg
lcall
mov
movsl
xor
popf
mov
test
sti
sub
cmpsb
stos
test
lahf
inc
cmp
adc
movsl
aaa
mov
pop
in
fsts
test
shl
xchg
in
std
movsl
mov
fiadds
pop
mov
and
xchg
mov
insb
ret
je
and
sbb
test
mov
out
mov
orb
je
sub
mov
stos
mov
pop
xchg
mov
adc
or
sub
pop
imul
andb
rolb
in
mull
mov
push
sbb
cltd
mov
in
adc
mov
adc
inc
mov
and
jo
pop
sbb
adc
sti
mov
push
movsl
lahf
or
stos
das
xchg
or
shrb
jae
lret
sahf
jmp
lock
and
pop
xor
mov
push
xchg
scas
into
mov
jno
or
loope
cmovl
xor
xchg
test
mov
adc
pop
add
in
adc
xlat
outsb
add
cmp
dec
cmpsb
pushf
push
das
or
pushl
adc
lock
add
cmpsb
sub
jns
sti
ljmp
fldenv
sub
insl
xor
test
sub
vphsubdq
push
mov
xchg
pop
sbb
loop
push
aaa
xchg
fldl
mov
cmp
test
imul
lock
sub
xchg
sbb
cli
add
add
push
stc
roll
push
and
sbbl
lds
jno
xchg
jbe
and
int3
xor
mov
or
stos
xchg
and
mov
mov
adc
andl
jmp
fsubl
cmpsb
or
pushf
lock
cli
les
dec
xchg
mov
lcall
into
call
xchg
hlt
adc
mov
and
pop
mov
mov
sbb
popa
rorb
xchg
test
lret
nop
xchg
lea
add
dec
das
inc
or
lea
pop
push
stos
mov
dec
adc
xchg
shl
sub
rcll
sub
test
inc
xchg
lret
adc
lcall
stc
sub
and
adc
cld
or
lahf
and
fwait
stos
xlat
rclb
mov
mov
out
lcall
push
push
nop
test
push
add
adc
mov
test
and
xchg
push
mov
cmpsl
pop
pop
mov
sbb
stos
sub
sub
lret
mov
fwait
es
and
lock
pop
lahf
dec
sub
nop
js
cmpsb
je
pmaxsw
dec
pop
imul
mov
and
ret
daa
stos
xchg
cmpsl
jae
xchg
cmpsb
loop
xchg
nop
mov
and
and
lret
xchg
and
test
adcb
std
lcall
lahf
cmc
adc
mov
xchg
or
or
rclb
sub
in
jmp
or
mov
imul
inc
mov
jge
cmp
or
cmpsl
dec
test
jo
sub
adc
cltd
xchg
fisttps
mov
pop
sbb
lcall
cltd
cwtl
lret
sbb
xchg
xchg
cwtl
cmpsb
lret
mov
sub
adc
sbb
push
fnsave
insb
sbb
pop
mov
adc
aam
xchg
pushf
mov
popf
ret
lahf
stos
es
add
cmpsb
cmpsb
or
and
testl
xchg
pop
xchg
mov
or
sti
lods
ds
mov
sbb
cmp
lret
xchg
jo
mov
xchg
adc
lahf
adc
lock
daa
mov
xchg
push
cmpsb
sub
adc
lods
ror
ljmp
adc
adc
mov
pop
inc
xor
stos
jmp
pop
aaa
xor
xchg
jnp
shrl
and
stos
sub
and
sbbb
insl
jb
stos
xchg
fwait
xchg
add
jp
pop
or
cmpsl
mov
daa
iret
or
movsl
addr16
mov
daa
push
pop
mov
jno
cltd
and
jns
xchg
cmc
scas
mov
cwtl
cltd
addl
mov
jle
scas
add
outsb
in
sbb
stos
lahf
mov
or
and
mov
movsl
mov
pop
mov
je
xchg
pop
pusha
xchg
daa
xchg
sahf
or
sbbb
movsl
mov
pushf
movsb
subl
adc
xchg
jbe
xchg
xchg
insl
xor
jae
out
in
cmpsl
lahf
es
loop
cmp
es
mov
mov
xchg
mov
cmp
or
cltd
xchg
jae
jb
mov
rcrb
fisubl
jo,pt
adc
push
cmpsl
jg
xchg
nop
test
lahf
int
pop
imull
fs
cmp
and
adc
imul
pop
xchg
sti
movsb
sub
pop
dec
sahf
lds
jg
movsb
push
adc
stos
es
and
sbb
adc
xor
stos
or
fistl
dec
push
xchg
pop
mov
xchg
nop
sub
push
test
xchg
es
test
lret
xchg
sub
test
mov
pusha
test
or
or
and
lcall
sub
cld
std
sub
insl
movsb
daa
mov
cmp
lahf
ficoms
outsb
pop
xor
sahf
push
mov
xchg
mov
mov
je
jb
sub
mov
movsl
aas
inc
adc
ljmp
inc
xor
mov
inc
aas
mov
fldl
test
mov
test
addr16
cltd
mov
xchg
xchg
cmp
xor
xor
push
sub
or
movsb
ds
xchg
and
mov
xor
push
jl
pop
add
into
add
mov
fwait
mov
mov
cltd
push
loopne
movsb
ret
into
test
and
xchg
mov
or
jbe
sbb
fmulp
fwait
adc
mov
test
xchg
subb
ret
dec
cmpsb
ja
xchg
and
nop
xor
or
push
imul
xchg
adc
mov
and
test
movb
jb
pop
and
mov
std
fwait
es
mov
xchg
pushf
pop
clc
pop
shrl
lcall
xchg
mov
adc
cltd
or
add
xchg
jo
xchg
test
adc
xor
ret
and
mov
stc
and
adc
or
jmp
into
sub
pop
sbb
das
jno
or
fldcw
pop
adc
dec
data16
fwait
and
and
rclb
test
xlat
pop
mov
insl
out
sbb
pop
jae
scas
data16
or
sub
outsl
cltd
cmpsb
xchg
sbb
sbb
stos
insl
daa
out
pop
xchg
lcall
rclb
add
stos
jno
cltd
mov
mov
mov
jge
dec
test
int
sbb
mov
mov
xchg
cmpsl
add
sahf
and
fdivl
test
fildl
stc
add
mov
out
or
push
xor
or
xchg
sub
jb
sbb
pop
lahf
push
lds
cltd
jge
cmp
jge
loopne
js
icebp
inc
xchg
stos
pushf
push
mov
push
push
xchg
and
fldt
mov
insb
ds
notl
lret
sub
scas
out
cli
pop
adc
test
and
pop
stos
xchg
movsb
pop
jge
cmpsl
adc
negl
mov
or
stos
cmpsl
mov
js
xchg
divb
out
xchg
xchg
sbb
cmc
adc
sub
imul
lahf
mov
pop
pop
pop
and
mov
jg
push
and
fistl
sahf
arpl
push
xchg
imul
test
int
jge
mov
adc
rclb
scas
inc
sbb
xchg
sub
adc
jp
stos
inc
jge
subb
mov
xchg
mov
sahf
fistl
pushf
stos
jb
and
mov
lret
mov
dec
mov
or
mov
sbb
jnp
or
clc
pop
ret
orl
test
mov
jmp
xchg
or
add
int
jge
into
stos
xchg
adc
dec
jle
sub
or
mov
les
out
sub
adc
aam
push
or
sahf
popf
movsl
pop
xchg
push
pop
sub
or
stos
pop
xchg
xchg
sbb
cmp
adc
mov
push
mov
orl
shlb
xchg
add
cmp
or
pop
mov
lret
xchg
xchg
jp
out
roll
pop
test
add
pop
dec
mov
lcall
lret
cltd
test
xchg
movsl
loop
or
clc
fwait
inc
mov
or
std
sbb
je
and
push
popf
mov
xchg
or
xor
pop
adc
jo
sbb
in
inc
mov
pop
sahf
std
adc
and
test
mov
push
xchg
and
push
xchg
cmp
cmpsb
mov
stos
iret
pop
mov
sti
sbb
xchg
and
sub
lret
jno
push
fwait
outsb
testl
out
mov
rorl
mov
xchg
test
cmc
test
xchg
push
xchg
jo
xchg
or
push
and
mov
outsl
test
lahf
sbb
lcall
jbe
pop
stos
xchg
push
and
mov
pop
repz
adc
push
iret
xchg
sahf
pop
stos
pop
mov
and
mov
xchg
dec
lcall
loopne
mov
clc
mov
xchg
and
aad
sub
lea
out
xor
and
push
or
adc
scas
mov
mov
push
cwtl
mov
mov
lcall
xchg
lcall
movsl
mov
pop
inc
adc
lcall
addr16
mov
sub
sub
jae
xchg
inc
jo
xchg
or
adc
or
movsl
mov
sbb
daa
in
imul
adc
mov
mov
lods
sub
jl
xchg
xor
xchg
mov
cli
jae
xor
aam
shlb
aad
shr
stc
pop
js
lret
pop
gs
lret
movsl
in
add
in
cmc
stos
jbe
and
into
enter
push
jp
mov
sub
mov
mov
xor
inc
cmp
inc
stos
cmpb
and
mov
pop
nopl
adc
mov
xlat
xchg
and
sbb
imull
or
mov
and
or
iret
btc
adc
ret
pop
sbb
sub
imul
popl
xchg
mov
sbb
mov
sahf
ja
test
jle
sub
xchg
rcr
rclb
xchg
mov
daa
xchg
xor
pusha
test
outsl
inc
sbb
and
push
xor
xor
sub
cwtl
or
sub
mov
cmp
xchg
and
jae
fldl2t
lea
and
xchg
xchg
loope
add
test
xchg
nop
dec
inc
mov
ret
xchg
imul
xchg
cmpsl
daa
sti
pop
in
ret
sbb
xchg
xchg
xchg
lods
mull
fwait
out
or
mov
bound
push
dec
sub
pop
loopne
clc
daa
cltd
mov
das
sub
testb
xor
and
adc
push
cmp
mov
xchg
lcall
adc
cmc
repz
mov
xchg
push
nop
daa
out
out
xchg
pop
xchg
mov
adc
push
or
lahf
sbb
hlt
add
mov
mov
add
or
popl
mov
test
jnp
lock
ret
cli
add
and
adc
mov
cwtl
mov
cmc
push
add
stos
jp
lret
sbb
adc
and
and
or
mov
aas
adc
cwtl
daa
daa
mov
fistps
adc
test
push
jbe
adc
test
testl
lahf
or
fsubrl
jle
pop
nop
mov
adc
cmp
xchg
mov
lcall
and
mov
xchg
or
test
jp
mov
mov
ljmp
lcall
cwtl
jle
pop
xchg
inc
test
sbb
xor
push
mov
clc
in
or
xchg
test
xor
adc
xchg
dec
and
push
xor
jmp
pop
cmc
or
imul
xchg
and
xchg
pushf
and
xchg
sub
xchg
xlat
jmp
mov
out
call
and
jno
xchg
sub
xor
test
mov
mov
mov
or
or
sbb
cmpsb
mov
pop
jae
push
out
lods
jo
pop
pop
rcrb
cmpsb
or
adc
sub
lcall
xor
and
movsb
jmp
adc
and
sub
fimull
mov
mov
jge
mov
bound
push
xchg
and
cmp
int3
stos
sub
jmp
daa
mov
cwtl
cmp
xchg
or
or
or
stos
and
sbb
daa
and
and
fs
cmp
insl
jb
mov
adc
mov
sub
dec
jae
scas
add
xchg
ds
add
xchg
fiadds
nop
adc
mov
mov
xchg
and
xchg
pusha
cs
fcoms
push
das
mov
pop
cmc
jg
rclb
mov
xor
jbe
inc
sub
push
mov
lcall
add
sub
adc
adc
and
push
and
xchg
push
in
je
sbb
lock
dec
cld
mov
mov
popw
sbb
stos
stc
cmp
pop
sub
sbb
fwait
test
cwtl
or
addb
xchg
adc
jl
es
jecxz
into
popa
cwtl
mov
fs
xlat
mov
daa
pop
cmpsb
lcall
xorb
stc
jae
or
xchg
insl
das
jge
mov
sub
lret
stos
jecxz
fstpl
sub
das
xchg
xchg
or
sub
cmpsb
into
fbld
out
adc
adc
mov
xor
out
scas
scas
xchg
es
cltd
cmp
cmp
cmp
lods
andl
push
fcompl
jp
icebp
daa
xchg
mov
ret
je
cmpsb
lahf
xchg
mov
cwtl
adc
test
adc
loope
setle
xchg
sub
inc
sahf
inc
pop
add
stos
out
mov
lahf
inc
mov
scas
sbb
daa
adc
pop
adc
xchg
lods
sub
cmpsb
stos
aad
sbb
and
data16
mov
xchg
mov
mov
cltd
or
push
xchg
movsb
mov
iret
dec
mov
pop
push
mov
lcall
xchg
sbb
shrb
mov
jae
sub
xchg
cmpsb
das
adc
jl
push
mov
sub
xchg
and
repz
fdivrs
inc
jo
test
sbb
ljmp
mov
mov
arpl
add
mov
loopne
fwait
iret
mov
adc
mov
lcall
dec
xchg
test
ret
cmp
int3
in
gs
cmp
test
jle
push
enter
pushf
stos
mull
mov
into
movsb
cwtl
and
ret
push
xchg
scas
ljmp
fs
dec
mov
cmpsb
mov
lcall
pop
dec
mov
xchg
mov
or
ja
xor
movsb
cltd
icebp
outsl
lcall
mov
add
mov
jbe
push
rolb
xor
hlt
ja
in
xchg
dec
stos
adc
out
cmp
adc
add
jo
insl
jle
lcall
and
mov
push
sbb
into
nop
mov
lods
add
cmpsl
notl
and
mov
jge
in
add
xchg
in
mov
and
bnd
sub
pop
xchg
sbb
pop
stos
jno
adc
push
sbb
lcall
aam
movsb
ret
sub
fistl
and
xchg
sub
cltd
or
pop
adcl
js
jl
fdivr
test
stos
or
sbb
push
out
or
adc
sahf
xchg
xchg
pop
sub
mov
jp
ljmp
insl
or
push
shlb
adc
pop
cmc
xchg
lahf
cmpsl
or
sbb
ret
and
push
daa
xchg
xchg
xchg
aas
or
adc
xchg
mov
push
sub
sbb
xchg
jle
dec
mov
mov
stos
pop
daa
jmp
test
and
pop
scas
or
sahf
inc
xchg
mov
outsb
je
mov
enter
lret
fcomps
and
adc
mov
sub
jecxz
push
mov
cmpsb
rolb
mov
mov
adc
and
push
and
int3
stos
lcall
adc
mov
nop
xor
xchg
fwait
push
mov
popl
jmp
and
mov
popl
int
or
nop
xchg
mov
adc
fldt
fwait
es
daa
adc
add
mov
movsl
setb
cmp
imul
test
int3
inc
or
push
pop
dec
nop
iret
outsb
iret
sbb
cwtl
sbb
or
nop
mov
in
scas
adc
enter
push
std
xor
xor
jmp
js
std
insb
lret
test
adc
mul
adc
adc
lods
mov
mov
mov
or
lods
fdivr
jno
or
dec
adc
adcb
inc
xchg
adc
sub
lret
sbb
xchg
int3
xchg
push
or
add
sbb
pop
adc
mov
xchg
std
adc
stos
and
notl
frstor
or
adc
addr16
and
cli
adc
shl
sbb
sub
test
adc
xchg
cmp
adc
and
sub
mov
or
xchg
push
and
adc
mov
mov
cmpsl
js
jo
or
push
sub
test
xchg
and
idivl
xlat
inc
mov
sub
cmp
and
mov
into
mov
mov
xchg
nop
sarb
dec
xor
addb
mov
pop
cwtl
notl
sub
and
and
mov
mov
cmp
or
movsl
loop
andb
js
adc
scas
xchg
push
cmpsl
xchg
and
mov
notl
cmp
lock
fwait
cwtl
inc
xor
je
and
imul
or
stos
mov
movsb
pop
cmp
out
pop
or
mov
scas
pop
push
or
sub
adc
inc
movsl
adc
xchg
sbb
mov
mov
push
jge
and
xchg
icebp
mov
lcall
orb
or
movsb
and
add
adc
sbb
hlt
adc
xchg
push
pop
xchg
cmp
out
loope
dec
mov
xchg
push
shrl
xchg
adc
xchg
mov
adc
and
adc
incb
or
adc
stc
pop
jbe
sub
or
push
inc
mull
lea
lret
daa
lcall
ljmp
pop
mov
stos
and
ret
cmpb
dec
mov
sub
push
nop
push
test
inc
stc
dec
out
mov
pop
xchg
xchg
imul
fcoml
xor
and
cltd
into
pop
xchg
adc
mov
mov
stos
fxch
icebp
mov
adc
mov
xchg
test
sahf
xor
cmp
std
fs
stos
push
xor
cmp
repz
xchg
xchg
mov
xchg
lcall
sahf
push
push
xchg
adc
xchg
jl
ret
scas
jp
out
hlt
mov
cmp
cld
negl
xchg
les
adc
cmp
pop
xchg
mov
fistps
scas
add
lea
iret
je
test
stc
xchg
divl
arpl
pop
lock
xchg
cmpsl
dec
std
lcall
xchg
mov
mov
add
es
pop
cmp
mov
mov
les
sbb
popf
daa
cltd
js
and
cmp
bound
xchg
imul
add
and
pop
mov
pop
lods
xchg
jecxz
sbb
cmpsb
out
daa
push
and
sbb
je
xchg
sub
xchg
out
fwait
sub
xchg
mov
xchg
xchg
loop
negl
or
jge
cmp
lock
mov
iret
jmp
sbb
scas
es
dec
cmpsl
or
ljmp
and
lahf
or
push
inc
idivl
push
rclb
int
insb
xchg
sbb
cmpsl
and
lret
push
xchg
ljmp
push
sub
stos
jnp
stos
movsb
sahf
mov
cmpsb
fwait
outsl
xchg
adc
adc
mov
stos
sbb
cwtl
pop
or
test
cmpsl
into
xchg
adc
and
xchg
daa
mov
lcall
movsb
adc
mov
je
sbb
loope
push
xor
fsub
xchg
add
and
inc
in
negl
test
nop
adcl
sub
loop
movsb
in
popf
cld
cmp
cmc
lods
push
xlat
in
xchg
daa
stos
loop
daa
sbb
inc
rcr
lahf
xor
and
popf
mov
xchg
lcall
xlat
inc
outsl
scas
mov
sub
sbb
addr16
es
push
adc
pop
test
sbb
addl
adc
lcall
movsb
fdivrs
mov
mov
jge
cli
xchg
xchg
punpcklwd
ret
inc
push
jbe
sbb
test
and
lcall
xchg
mov
mov
out
push
call
das
daa
or
out
sbb
xchg
xchg
dec
mov
test
out
and
cltd
jmp
adc
jecxz
mov
and
xchg
test
out
adc
std
cmp
and
mov
dec
out
sbb
test
jp
sub
mov
into
call
cltd
xchg
jle
stc
mov
jmp
fisubl
mov
testl
and
xor
test
jmp
stos
or
or
jb
test
inc
int
cmp
ja
insb
cmp
sub
mov
adc
lahf
and
adc
stos
mov
and
mov
xchg
lcall
jo
pop
mov
push
mov
push
fstl
mov
iret
repnz
fwait
cmpsb
call
aam
push
sub
mov
dec
sbb
adc
cmp
sarb
xchg
pushf
icebp
add
xchg
adc
xor
pop
inc
adc
xchg
in
xchg
ds
insb
xchg
movb
mov
sbb
sbb
or
jmp
enter
or
mov
lret
xor
mov
in
pop
add
sub
jbe
adc
xchg
adc
xor
xchg
or
enter
jb
stos
lahf
and
cwtl
lahf
ror
xchg
or
xchg
in
outsl
xchg
mov
push
lock
test
cmc
mov
xchg
nop
pop
pop
push
xchg
test
xchg
pop
xchg
mov
movsl
aad
stc
mov
adc
cmpsb
or
sub
adc
mov
sub
lds
lcall
data16
mov
subb
add
cltd
cmp
sub
pop
jbe
out
notl
aad
scas
fldenv
and
mov
mov
movsb
sbb
mov
enter
push
lea
cmpb
xchg
repz
jnp
and
call
popf
sub
icebp
imul
mov
out
sbb
sbb
cltd
aas
mov
or
test
sahf
adc
outsb
adc
lds
push
adc
fists
in
push
cwtl
adc
mov
and
ficomps
je
push
mov
pop
inc
xchg
adc
outsl
mov
in
pushf
fwait
ret
add
scas
rclb
mov
in
push
les
mov
daa
mov
cmpsb
add
jno
mov
push
shlb
mov
movsl
stos
xchg
lret
xchg
or
mov
xchg
mov
outsl
movsb
fwait
add
or
pop
push
xor
loope
xor
stos
pop
mov
pop
mov
inc
iret
xor
pop
mov
jge
cld
adc
int3
inc
loop
sub
mov
lock
xchg
out
adc
cltd
mov
adc
stc
mov
xchg
mov
out
test
loopne
or
negl
adc
pop
mov
scas
xchg
mov
mov
mov
fwait
jl
dec
lea
adc
cmpsb
and
sub
and
adc
adc
imull
sub
xlat
scas
int3
xchg
cwtl
fstp
push
mov
sub
inc
test
adc
sbb
jae
lahf
je
lcall
adc
add
mov
fwait
xchg
sbb
push
adc
or
pop
and
sub
push
repz
and
les
insb
mov
xchg
push
pusha
xchg
in
and
ret
lret
or
cltd
cmpsl
adc
or
lcall
je
and
jbe
adc
das
aad
sub
fwait
push
int
and
shrl
rcrl
mov
ret
or
mov
or
mov
adc
das
xchg
xchg
cmpsb
push
and
xchg
imul
scas
mov
adc
pop
push
lock
or
xchg
push
cmp
or
or
push
push
test
xchg
xchg
dec
ficoms
stos
and
mov
fstl
mov
sarl
pop
faddp
fwait
outsl
pop
sub
pop
pop
adc
and
mov
cmc
xor
jl
xchg
add
xor
mov
hlt
lods
mov
lret
xchg
mov
bound
mov
jp
jmp
xchg
xor
stos
cmpsb
andb
lock
pop
jo
sbb
xchg
ss
sbb
mov
lock
ret
xor
push
add
adc
or
mov
adc
insb
imul
jecxz
std
lahf
nop
popa
adc
jae
sbb
fistl
sbb
sub
pop
fbld
repnz
xor
xchg
ret
testl
sbb
stc
daa
push
stc
out
fisubs
push
js
clc
sub
sub
scas
pop
lcall
sbb
sbb
add
fadds
testl
jo
sbb
adc
pop
pop
jbe
sbb
popf
adcl
ret
and
cmc
jae
xchg
sub
xchg
lret
jb
mov
jge
xchg
nop
cpuid
movaps
sbb
sub
pop
setb
shr
xor
in
pop
jae
lahf
repz
mov
xchg
cmpsl
pop
icebp
adc
add
test
jno
mov
int
cld
mov
jge
pop
sbb
adc
cltd
xchg
xchg
dec
lea
mov
sbb
and
dec
lcall
movsb
rcrl
xchg
adc
aaa
lcall
and
pop
xor
mov
loop
push
in
inc
jae
daa
xor
ret
mov
or
sub
jo
sub
pop
or
fsubp
pop
cwtl
jo
adc
mov
mov
pop
stc
test
mov
icebp
fisttpll
mov
sbbb
push
cmc
sub
movsl
cli
lock
test
push
stc
jle
mov
pop
or
mov
jecxz
test
call
daa
add
push
jne
adc
in
mov
mov
scas
mov
adc
pop
adc
cwtl
adc
stos
clc
lods
xchg
pop
inc
xchg
cmpl
testl
pop
jno
aas
js
inc
pop
sbb
lock
movsb
lahf
pop
test
or
nop
lcall
test
in
mov
outsb
inc
repz
lods
xchg
xchg
iret
sub
xchg
cli
je
cmpsb
or
and
fisubl
add
push
lea
inc
cmpsl
inc
test
and
mov
ss
mov
adc
xchg
and
mov
mov
mov
ficoms
es
push
or
lret
scas
lods
test
aam
and
pusha
lahf
ljmp
xchg
push
xchg
loopne
sbb
or
pop
dec
push
scas
inc
stos
or
inc
nop
sbb
aad
or
xor
scas
in
movsl
mov
data16
rclb
jmp
movsl
sbb
xchg
sbb
dec
negl
es
xchg
pop
js
sbb
sti
sbb
xchg
push
loope
xchg
xchg
jae
and
into
adc
sub
subl
mov
jb
mov
sbb
adc
repz
es
setno
loope
xchg
dec
jno
adc
sbb
adc
and
mov
push
fwait
and
movsl
dec
xchg
or
cmp
push
nop
cltd
cmp
fstl
imul
scas
movsb
cmpsb
mov
js
out
sbb
nop
mov
and
xor
push
mov
and
lret
sbb
icebp
sbb
std
int3
sub
test
mov
jge
test
sub
mov
jg
lds
clc
mov
jb
mov
xchg
push
dec
bound
xchg
ljmp
push
cmpsl
jbe
cltd
sbb
and
stc
enter
push
icebp
sub
lcall
xchg
pop
pop
mull
cwtl
iret
pop
push
bound
sub
xchg
mov
stc
xchg
sti
sti
std
lahf
cmp
addb
movsl
xor
sub
push
sbb
xchg
mov
inc
adc
mov
cmpsl
jb
daa
xchg
adc
cltd
jmp
mov
fidivl
mov
and
xor
stos
je
add
loopne
pop
lods
push
xorb
mov
movsl
test
xchg
adc
mov
fwait
adc
mov
push
js
cld
sub
mov
and
addr16
mov
adc
jo
sub
mov
je
movsb
inc
and
jne
pop
dec
jo
sbb
push
mov
inc
adc
bound
jbe
push
insl
fbld
imul
xchg
out
rep
mov
hlt
push
dec
ret
jge
and
mov
mov
imull
jno
scas
cwtl
lahf
lcall
sbbb
scas
or
outsl
sub
mov
xchg
xlat
xchg
mov
push
dec
dec
fdivrs
mov
jmp
cltd
pusha
jae
daa
inc
subb
xchg
in
xchg
bound
sarb
out
pushf
adc
dec
cmpsl
dec
mov
sbb
cwtl
mov
into
lret
adc
mov
in
fists
mov
ljmp
mov
cmpsl
sub
mov
pop
addb
add
add
nop
int
js
loop
stos
lret
xchg
sub
sbb
mov
popf
mov
adc
add
stos
cwtl
mull
cmpsb
test
gs
xchg
xchg
sub
pusha
sub
inc
add
lcall
jmp
jmp
outsl
mov
imul
test
test
aad
and
lcall
jbe
push
dec
imull
jae
pop
repz
cwtl
movsb
jg
pop
mov
dec
lcall
xchg
and
fwait
je
test
push
cld
imul
xchg
das
sub
push
fwait
pop
addr16
std
daa
lcall
stos
xchg
lahf
dec
mov
xor
inc
sbb
or
cmp
mov
pop
cli
lcall
mov
sub
outsb
testl
dec
test
sub
sub
lock
or
and
out
scas
push
jno
pop
iret
xor
ss
and
xor
cmc
in
and
arpl
pop
gs
fstpl
mov
and
adc
adc
mov
jg
pushl
or
xor
sbb
mov
mov
or
xchg
cmpsb
out
out
adc
sub
rcll
mov
cwtl
sub
mov
or
movsl
mov
loopne
orb
xchg
cltd
lahf
das
out
adc
lret
jo
mov
imul
sbb
sbb
cld
jae
fwait
lcall
imul
and
and
xchg
dec
fcomps
sbb
test
andb
fcompl
or
jbe
xchg
mov
out
add
jno
mov
pop
mov
add
jnp
cmpsl
mov
pop
mov
mov
xchg
or
add
scas
std
test
pop
jae
jae
outsl
add
sbb
xchg
lret
xchg
mov
add
pop
lahf
xchg
dec
cltd
hlt
lock
movsb
mov
mov
sub
pop
stos
scas
dec
sbb
jl
pop
add
xchg
jo
and
out
add
test
xchg
sahf
sub
stc
and
fstl
rcl
ja
mov
stos
or
and
aad
test
mov
test
sbb
adc
xchg
sbbb
stc
xchg
inc
call
cmp
mov
sub
mov
and
mov
pop
stos
in
addl
stos
repz
and
insl
jg
pop
or
xchg
lcall
cwtl
mov
lcall
stos
test
adc
jo
pop
loopne
imul
xchg
mov
push
mov
addr16
add
jmp
mov
sub
shlb
and
and
inc
orl
ds
mov
push
pop
push
jg
push
xchg
sbb
mov
sub
fildl
add
cmp
test
repnz
aad
out
cmpsl
xchg
push
xlat
fwait
lds
scas
mov
cmp
adc
stos
or
xchg
adc
movsl
jp
js
jecxz
jecxz
sbb
pusha
sub
cltd
fwait
and
sbb
dec
and
lahf
and
call
faddl
jp
xchg
or
push
adc
sbbl
fsubrl
xchg
jae
je
stos
mov
mov
mull
cli
inc
pause
mov
mov
mov
cwtl
and
pop
shl
sub
pop
dec
test
cltd
xchg
and
es
fistps
fbld
das
mov
stos
cmp
icebp
cwtl
and
ds
mov
mov
pop
or
push
xor
out
out
lcall
test
cmc
or
xchg
bound
sub
cld
xchg
adc
stos
movsl
adcb
xchg
adc
es
out
outsb
ffree
rolb
daa
mov
add
aad
xchg
mov
and
rcll
mov
jmp
sbb
sub
push
testl
mov
aam
xchg
or
xchg
xchg
xchg
cmp
mov
lret
xchg
jecxz
xchg
xchg
sbb
mov
sub
adc
cmpsl
or
pop
push
lcall
scas
out
mov
sbb
push
or
pop
lock
or
jae
mov
sbbl
and
xor
or
lods
orl
scas
push
imul
dec
jne
xchg
orl
jle
inc
cmpsb
test
setle
into
test
ljmp
das
mov
xchg
xor
sub
stos
adc
sub
mov
and
out
xor
xchg
test
xchg
pop
pushf
pop
scas
and
jae
adc
and
sbb
orb
pop
push
in
cmpsl
mov
mov
add
pop
stos
test
sub
mov
push
shll
pushf
sbb
fbld
iret
out
lret
sub
jae
cwtl
sbb
mov
push
sbb
pop
xor
test
mov
movsb
daa
lcall
mov
sahf
adc
imul
cld
mov
xchg
sbb
clc
stc
sub
andl
lea
add
pop
jg
mov
jae
mov
and
insb
mov
jo
xchg
pop
jle
mov
daa
mov
pusha
out
pop
into
stos
sub
adc
or
jle
adc
lret
push
and
test
sub
mov
ljmp
sbb
or
pop
xchg
mov
jae
movsb
outsl
sub
test
mov
push
xchg
dec
test
stc
sub
testb
paddw
aas
push
mov
mov
sti
sahf
mov
pop
test
subb
cmc
lcall
movsb
and
cmpsb
xor
pop
sub
mov
xchg
mov
and
or
sub
jno
pop
js
add
pop
jae
ljmp
push
jno
adc
loop
lahf
stos
and
mov
ss
and
insl
inc
jecxz
push
push
pop
or
lahf
cmpsb
sbb
hlt
mov
pop
push
movlhps
and
and
cmp
sbb
pop
pop
add
inc
hlt
cltd
lcall
cltd
adc
push
adc
scas
cmp
lcall
or
pop
test
jecxz
scas
or
jae
adc
lock
shll
cld
insb
add
into
mov
xchg
in
fists
mov
xor
hlt
add
mov
jl
aam
jg
lods
add
cmpsb
mov
sub
or
test
add
fs
stc
xchg
cld
sbb
outsl
and
xchg
add
stos
jbe
adc
test
push
ljmp
xchg
fwait
fwait
scas
gs
mov
jecxz
outsb
test
dec
or
inc
mov
xchg
adcl
daa
xchg
inc
dec
xadd
sbb
jle
sar
mov
xchg
pop
xchg
cltd
adc
and
ret
mov
es
sub
sub
xchg
or
xchg
frstor
addb
fs
mov
jg
out
xor
xchg
xchg
sbb
sarl
out
add
daa
mov
loop
pop
sub
lahf
pop
push
mov
cmpsb
popa
jno
adc
sbb
xchg
sbb
xchg
nop
pop
test
jge,pt
xchg
pop
xchg
inc
cmc
adc
sbb
jnp
ret
stos
sub
xchg
xchg
lahf
mov
mov
push
cmpsl
xchg
lods
sub
stos
stos
mov
xchg
addl
sbb
xorl
lahf
pop
cmpb
shll
and
ja
and
xchg
adc
and
pop
sbb
inc
dec
lcall
inc
xor
jno
xchg
add
sub
xor
adc
dec
shll
pop
out
js
fwait
pop
mov
jle
inc
jo
and
and
or
shll
xchg
pop
or
and
or
xchg
sbb
add
lods
mov
pop
jo
lahf
adc
jno
xchg
and
mov
mov
lcall
xor
rcl
loop
xchg
sub
cmp
pop
mov
xchg
cmp
jb
push
sbb
div
lahf
stos
out
test
and
and
push
lcall
fwait
cmc
lock
xchg
or
and
roll
mov
and
pushl
aaa
push
pop
test
jg
jg
mov
movsl
jbe
adc
xchg
test
fisttpll
adc
xchg
test
lock
and
and
sbb
adc
loope
test
mov
cltd
xchg
or
and
gs
mov
lds
addr16
pop
push
push
push
repz
sbb
shlb
add
int
or
inc
imul
push
hlt
mov
fwait
rcrb
lahf
xor
cmpsl
cmp
mov
into
xchg
movsb
sbb
sub
aam
daa
sub
js
test
pop
and
insl
pop
xrelease
push
out
and
mov
stos
fistpl
lahf
std
movsb
gs
xchg
pop
xchg
fistpl
push
mov
push
sub
sbb
mov
mov
mov
or
rcr
xchg
push
xchg
arpl
mov
scas
lods
lahf
jbe
movsl
jp
push
shlb
push
push
aaa
shrb
lcall
ret
addb
andb
popa
imul
mov
andb
pop
mov
cmc
inc
xchg
call
test
cs
mov
loope
mov
fsubrl
outsl
mov
sub
scas
test
gs
scas
or
ficoml
into
lods
xchg
push
push
nop
xchg
stos
mov
lcall
and
in
pushf
sbb
test
mov
or
adc
xlat
nop
mov
and
stos
cmpsl
pop
out
in
and
lock
nop
xchg
jecxz
arpl
stos
jle
adc
xchg
and
aas
cmpsb
mov
cltd
sub
and
lret
cmpsb
hlt
lcall
push
adc
sti
cmp
xchg
xchg
xchg
popf
lahf
lret
xchg
mov
mov
fdivrl
jle
dec
popf
jbe
or
enter
push
sbb
jecxz
fst
jae
sub
outsl
lahf
vpaddusb
or
rorb
pop
cmpsl
or
stos
push
dec
out
out
test
adc
popa
cmp
and
xchg
jo
mov
sub
test
shll
xchg
in
xchg
int3
cmpsl
dec
lret
xchg
movsl
adc
cmpsb
ja
out
jecxz
cmpsl
and
push
les
mov
movsl
xchg
pushl
adc
test
iret
mov
imul
stc
push
test
or
inc
mov
cltd
int3
insl
jae
nop
daa
outsl
or
movsl
add
lahf
sbbl
jae
mov
pop
sbb
scas
movsb
add
push
inc
fst
out
sbb
sub
cmpsl
and
pop
sbb
sub
inc
insb
and
mov
adc
mov
sahf
lcall
jp
test
adc
mov
aam
jge
loope
xor
test
daa
adc
pop
flds
cmpsl
into
loopne
cmpsb
lret
fwait
xchg
movsb
out
xchg
xchg
xchg
adc
or
xchg
adcb
aad
xchg
push
xchg
les
sub
cwtl
mov
push
inc
sub
mov
and
cmpsl
xchg
xchg
and
sti
cmp
jp
xchg
stos
out
push
mov
lret
add
xchg
movzbl
lods
and
lods
jle
std
es
adc
jno
sbb
xlat
adc
mov
lahf
lret
xchg
adc
sbb
jbe
sbb
movlps
mov
fidivs
mov
mov
inc
je
xchg
test
loope
fwait
das
aam
sbb
push
sbb
xor
and
daa
mov
add
ffree
cltd
push
sbb
ss
sub
jl
mov
or
xor
and
mov
and
sub
daa
mov
ds
cmpsb
sbb
xchg
sbb
out
cmpsl
mov
loopne
lcall
aaa
xchg
cmpsb
fsts
daa
js
fwait
pop
std
in
mov
xor
iret
ds
pop
mov
cmc
ret
lcall
and
inc
test
stos
xor
sub
mov
lahf
das
lea
and
popf
mov
daa
mov
or
in
jecxz
mov
and
out
stos
test
mov
xchg
mov
xchg
loop
cmp
cmc
pushf
mov
adc
fimull
mov
iret
addr16
lahf
popa
mov
mov
mov
jo
lahf
xchg
mov
shl
mov
jb
stos
sbb
fcom
push
dec
aam
or
jne
outsb
and
adc
jne
lcall
and
in
mov
jae
sub
push
sbbb
lea
sbb
mov
or
jb
xchg
mov
add
sbb
mov
mov
jne
xchg
ret
outsl
cwtl
push
ss
test
add
in
xchg
stos
mov
sbb
mov
outsb
jp
inc
repnz
sbbl
nop
sbb
pop
mov
and
fcoms
mov
adc
or
aaa
in
xchg
jge
push
mov
add
sub
fsubrs
ret
xchg
push
cmc
push
add
sbb
adc
adcb
mov
cs
sbb
adc
int
xchg
jecxz
sub
ljmp
mov
fsubr
add
fs
inc
mov
nop
test
mov
mov
adc
movaps
jno
cltd
xchg
scas
inc
sub
pop
mov
jge
mov
daa
mov
push
cmpsl
scas
xchg
mov
ljmp
or
cli
jb
cmpsb
push
test
jmp
and
test
movsl
cmpsb
sbb
or
stos
cld
xchg
and
lock
stos
adc
outsl
sub
cwtl
fwait
ljmp
aad
inc
xchg
in
sahf
mov
das
mov
xchg
sbb
test
cmpsl
lods
mov
and
jle
rcll
jecxz
xchg
daa
in
dec
xchg
dec
mov
sub
mov
stos
inc
dec
or
sti
and
sub
popf
ret
mov
mov
adc
add
xchg
xor
push
das
jmp
or
in
lods
into
jae
and
xchg
and
rcrb
cld
sub
jg
xor
sbb
and
xchg
mov
mov
xchg
cmpsl
push
mov
aaa
jbe
xchg
fwait
out
pop
cmp
or
ds
push
je
mov
daa
xchg
or
xchg
jns
mov
outsl
arpl
add
and
orb
jecxz
loop
subb
pop
cmp
push
or
pusha
cwtl
into
and
lods
or
add
xchg
jne
and
lahf
test
pop
pusha
lcall
xchg
lret
jge
into
and
xchg
and
stos
cmp
mov
outsb
pusha
ret
mov
outsl
xor
hlt
push
pop
and
push
xcrypt-ctr
cmpsl
pop
jp
jb
pop
lahf
pop
jno
sub
fistl
cmp
mov
sub
sbb
movsb
jg
push
addr16
xlat
mov
mov
pop
sarb
cmpsl
je
sbb
addb
rol
mov
std
mov
sub
sub
xchg
adc
sbb
or
fmull
out
xor
cmc
mov
lods
add
xchg
sub
test
add
mov
xchg
in
decl
pop
popa
test
loop
aad
daa
and
pop
ljmp
cmpsl
and
adc
test
lods
sbb
or
xchg
mov
xor
or
dec
iret
das
xchg
outsb
jae
pop
xor
mov
in
pusha
roll
mov
cmpsl
std
mov
and
lret
xchg
jmp
cmc
fwait
sbb
xchg
lock
xchg
mov
push
dec
outsb
xlat
lock
and
pop
and
icebp
cmp
in
mov
mov
lcall
fwait
mov
jb
and
mov
mov
scas
test
add
int
and
pop
rclb
mulb
je
mov
nop
adc
and
inc
fdivr
dec
adc
daa
stos
sub
and
in
sub
mov
jno
sbb
stos
xor
xor
sbb
insl
xchg
xchg
or
cmpsb
negl
or
xlat
and
sub
xchg
fldl
popf
xchg
repz
xchg
mov
adc
pushf
mov
stc
mov
enter
fwait
cld
dec
xlat
sub
movsl
push
mov
sub
xchg
mov
shl
test
mov
adc
dec
xchg
sbb
je
and
mov
inc
push
hlt
or
cmp
test
mov
pop
cmpsb
adcb
adc
test
idivl
cmp
imul
test
adc
fcoms
outsb
daa
cs
cmp
psrlw
testl
inc
mov
xorl
fwait
adc
adc
nop
mov
dec
add
aad
pop
cmovs
push
adc
in
push
mov
or
pop
test
cmpsb
sub
mov
sbb
push
lahf
mov
xor
test
xchg
decl
stos
add
xchg
or
cmpsb
in
stos
lret
lahf
test
add
jmp
inc
mov
cltd
add
xchg
bound
xchg
out
outsl
jne
xchg
xlat
pcmpeqd
and
adc
jno
test
bound
cld
adc
icebp
test
stos
insb
jb
mov
xchg
and
or
jecxz
push
lcall
icebp
adc
movsl
mov
sub
xchg
shrb
or
sub
int3
sub
in
pushf
cwtl
fildl
mov
imul
mov
hlt
fwait
or
popa
jae
cltd
mov
testb
adc
enter
cmc
setg
or
stos
pop
mov
add
xchg
hlt
push
movlps
sbb
lahf
js
clc
in
movsl
lahf
push
inc
hlt
lahf
pop
cmp
adc
mov
push
mov
lds
fwait
lods
pop
mov
loope
inc
rcl
mov
rolb
adc
pop
fstps
sub
mov
test
out
sbb
mov
sub
ret
mov
outsb
test
cli
mov
mov
mov
sbb
jl
jecxz
mov
test
stos
mov
xchg
icebp
adc
mov
mov
xchg
cwtl
mov
cld
rorl
xchg
mov
sub
mov
or
and
pop
xchg
or
es
or
and
adc
cmpsl
mov
jp
nop
out
xchg
mov
push
pop
or
enter
xchg
test
sbb
mov
sbb
mov
int
lahf
test
das
jno
xchg
fimuls
pop
mov
sbb
pop
cmpsl
pop
stos
pop
push
xchg
push
mov
rolb
inc
mov
addr16
nop
shl
cwtl
lcall
lods
test
pop
sub
xchg
fcoms
add
xor
stos
sbb
mov
xchg
or
cmp
aad
into
adc
pop
push
push
in
scas
adc
mov
push
outsl
and
xchg
mov
in
push
jle
popa
jno
or
clc
es
pop
scas
or
lods
dec
cli
lahf
and
daa
andb
mov
mov
cwtl
push
xchg
sbb
and
iret
xchg
nop
cmp
shl
movsl
cmpsb
stc
in
or
sarl
and
icebp
jmp
adc
movsl
add
mov
and
xlat
adc
push
or
insl
mov
es
test
pop
and
insl
pop
xor
push
jns
xor
mov
and
out
mov
cltd
push
adcl
add
or
lcall
or
pop
cmpsb
mov
push
jns
fistl
jns
sub
lcall
push
outsl
imul
cmpsl
ficomps
fsubp
adc
jge
test
mov
mov
xchg
mov
xchg
adc
stos
sub
daa
aas
adc
adc
jns
adc
xor
or
test
insb
in
fistps
ret
fistpll
mov
cwtl
cmpsl
xchg
lock
mov
jb
movsb
cmpsb
sbb
mov
cmc
call
adc
adc
or
stos
in
cmp
adc
lahf
mov
lea
mov
or
and
and
xchg
xchg
xchg
std
mov
lea
mov
or
daa
sbb
jle
int
and
add
inc
add
mov
call
out
push
cmpsb
les
push
and
and
loope
out
adc
test
push
inc
push
sbb
cwtl
cwtl
scas
movsb
sbb
add
pop
sti
and
test
lods
dec
fildll
and
xchg
xchg
and
pop
jb
adc
and
mov
push
decl
adc
and
and
outsl
sbb
cltd
scas
mov
stos
cwtl
pop
and
pushf
xchg
outsl
hlt
adc
adc
and
arpl
and
adc
ss
fwait
ss
jge
or
mov
sub
lret
and
or
pop
icebp
sahf
call
xchg
mov
and
push
cmpl
xor
adc
sub
xor
mov
fwait
out
mov
clc
call
xchg
fidivs
or
aaa
or
xchg
ficoms
stos
pop
mov
es
and
loop
out
stos
xchg
cmpsb
movsl
sbb
sbb
push
in
pop
sub
pop
idivl
or
mov
pop
lcall
hlt
movsb
and
cwtl
movsl
xchg
push
stos
daa
jbe
and
dec
out
les
adc
ret
fs
lock
scas
insl
or
mov
fdivr
test
sub
insl
cmpsl
movsb
arpl
mov
fprem1
adc
in
adc
ljmp
and
sbb
push
cmpsb
outsl
inc
sub
and
sbb
jns
mov
xchg
rorl
cmpsl
imul
pop
mov
sub
xchg
jmp
outsb
mov
mov
add
xchg
adc
lods
ljmp
cltd
sub
and
ljmp
xchg
cltd
cmpsb
negl
js
and
sbb
pop
or
decb
jmp
and
loopne
sub
xor
or
nop
or
fisubl
lcall
mov
imul
fwait
or
loope
loopne
dec
mov
mov
mov
sub
cwtl
xchg
xchg
lea
stc
adc
xchg
lock
and
or
dec
cwtl
mov
cmpsb
xchg
sbb
push
nop
and
or
mov
stos
fnstcw
add
mov
adcb
dec
xorl
and
xlat
pop
pop
in
sar
out
xchg
andb
inc
stc
test
dec
mov
and
fwait
inc
jbe
adc
or
test
push
xchg
xchg
and
movsb
or
rcrb
mov
loop
loop
ljmp
movsb
loope
test
movsl
pop
xor
mov
xchg
clc
mov
int3
out
jno
lcall
xchg
test
or
mov
cmc
dec
ss
jae
add
lcall
insl
pop
adc
fimull
xchg
fwait
cmp
lea
sahf
lock
add
sbb
xchg
dec
cli
sbb
cmpsl
mov
shlb
movups
mov
imul
aas
jo
adc
xchg
enter
cwtl
addl
lcall
rcrb
mov
pop
fwait
adc
mov
data16
cltd
and
push
loopne
scas
push
sbb
les
addr16
lcall
stc
jmp
adc
fwait
xchg
adc
outsb
into
fldl
and
lods
pop
mov
daa
cwtl
and
movsl
sub
and
test
jp
stos
fimuls
adc
movsb
stos
adc
add
divl
sahf
stos
test
pusha
outsl
mov
sub
rorb
inc
pushf
cmp
scas
pop
mov
fwait
cwtl
mov
in
mov
mov
cmpsl
and
fmulp
or
mov
or
xor
je
je
outsl
popa
xor
sub
popa
adc
adc
add
rorb
and
mov
and
imul
and
out
mov
pop
test
or
add
jmp
add
dec
push
add
les
mov
cmpsb
stos
adc
mov
add
stos
pop
shlb
jbe
pop
jae,pn
xchg
iret
cmp
adc
cltd
movsb
or
lcall
or
lods
pop
adc
sub
xchg
test
iret
popa
movsl
pop
sub
ret
cltd
fadds
adc
mov
or
cmpsb
adcb
pop
adc
jmp
daa
sub
adcb
call
outsl
fimull
lahf
daa
pop
sarl
xchg
repz
cmp
cmpsb
stos
fimuls
xchg
cltd
notl
inc
inc
mov
imul
mov
adc
movsb
xchg
xchg
inc
mov
clc
push
gs
xchg
xchg
adc
icebp
push
mov
mov
mov
add
push
adc
mov
jle
insl
xchg
jae
subb
jae
mov
lea
test
or
mov
test
mov
xchg
test
and
inc
ljmp
mov
pop
test
push
xchg
dec
test
pop
adc
and
je
movsl
and
js
or
push
mov
or
cld
movsb
dec
cmpsb
daa
cmp
dec
lahf
pop
hlt
loop
and
in
or
in
or
push
xchg
dec
pop
movb
mov
xchg
test
repz
xchg
cld
iret
sub
and
lahf
sahf
jne
jo
pop
sbb
in
stos
in
mov
and
out
test
nop
insl
das
xor
pop
add
faddp
sub
push
push
lcall
lea
jmp
lods
out
xchg
mov
movsb
xchg
and
push
dec
sysexit
cmpsb
xchg
adc
lret
in
fs
andb
jno
mov
mov
pop
mov
mov
sbb
std
or
cmpsl
adc
nop
xchg
mov
sub
xchg
xlat
pop
mov
into
push
adc
or
lret
inc
xchg
lods
cli
cmp
jne
xchg
and
jecxz
jae
stos
xchg
mov
or
and
xchg
xchg
lock
push
scas
xchg
scas
pop
xchg
and
xchg
adc
loop
or
cwtl
xchg
sub
mov
xchg
or
lahf
adc
mov
mov
adc
loope
sbb
mov
or
int
sarb
adc
negl
adc
cmp
mov
sahf
mov
mov
divl
cmovge
imul
lods
mov
xchg
xchg
lahf
dec
xchg
test
and
xchg
mov
test
fistpll
dec
sub
jbe
sbb
mov
xor
sbb
sub
cmp
mov
adc
aam
int3
lahf
mov
mov
mov
jle
mov
das
loop
adc
ljmp
xchg
lahf
and
and
xchg
adc
mov
pop
or
xchg
xchg
xchg
adc
adcl
sub
daa
mov
mov
sbb
ror
cmc
xchg
mov
lahf
out
xchg
cmpsb
mov
xcrypt-cbc
cmpsl
push
jp
sub
out
test
xchg
mov
inc
flds
test
and
test
fwait
test
xchg
cmpsb
inc
fildll
mov
lahf
mov
pop
xor
adc
js
js
clc
test
push
nop
mov
mov
das
xor
and
test
js
pop
movsb
shlb
scas
add
jmp
mov
sbb
mov
xlat
je
sub
sti
and
mov
xchg
mov
or
mov
mov
lods
add
cmpsb
mov
jns
mov
outsl
out
mov
enter
jnp
xchg
ficomps
xchg
lods
and
test
xchg
jae
mov
fistps
mov
mov
imul
notl
adcl
popf
cmpsl
cmp
pop
das
mov
sahf
push
fwait
data16
and
int
mov
sbb
inc
or
adc
or
dec
lret
mov
scas
and
andb
push
jmp
sti
sub
sbb
or
lahf
mov
xchg
lcall
dec
xchg
mov
fwait
and
imul
inc
cli
movsl
xchg
xchg
and
jmp
imul
add
shll
xchg
or
sub
lcall
stos
rorb
rcl
jno
divl
mov
es
pop
pop
push
add
pop
dec
xchg
adc
push
cmp
pop
lahf
movsb
sub
or
lods
bound
pop
adc
jo
mull
cmc
sbb
sub
push
bts
not
jbe
popa
adc
std
dec
mov
das
loop
mov
xchg
xchg
test
sub
outsb
fistpl
jae
nop
mov
fnstsw
fists
stos
ficomps
xor
cmpsl
mov
int3
lcall
data16
dec
xchg
adc
addr16
std
stc
cltd
sub
and
sbb
sahf
in
cltd
cmp
pop
imull
daa
sbb
sbb
xchg
ret
and
lods
mov
stc
cmpsl
mov
xor
adcb
into
lret
mov
or
cltd
cwtl
in
jmp
lods
jnp
mov
adc
lret
int
xchg
jmp
mov
xchg
and
movsl
lods
adc
mov
aas
cmp
mov
sub
arpl
test
and
cld
mov
rcrl
sub
xchg
insb
add
imul
lcall
pusha
cli
stos
daa
popf
sbb
pop
sub
or
xchg
sbb
jp
jbe
xchg
mov
inc
adc
test
jecxz
push
xor
add
mov
and
mov
sub
xchg
cs
in
cmp
and
jle
mov
mov
rep
mov
stos
ljmp
out
mov
aam
mov
adc
xchg
pushf
movsl
xchg
mov
add
test
es
adc
fdivrl
out
or
sbb
cmpsl
sub
inc
mov
cwtl
adc
xchg
movsl
lret
stos
dec
xchg
mov
and
in
or
mov
and
scas
adc
js
in
jno
cwtl
and
xor
sbb
push
mov
shll
or
sbbb
nop
jb
cmpsl
lahf
push
or
adcb
stos
xor
pop
adc
sub
scas
adc
in
or
pop
popf
dec
sub
popf
adc
push
or
mov
push
or
lret
mov
cmpsb
adc
jmp
outsl
push
xchg
sub
bswap
jo
sbb
mov
jns
xchg
adc
pop
dec
ja
and
ss
pop
xchg
xchg
xchg
sbbb
mov
mov
pop
std
mov
sub
sub
xchg
or
mov
leave
lock
into
sbb
xchg
xchg
and
xchg
movsl
fdivp
adc
sbb
adc
push
sub
daa
adc
cld
ljmp
nop
arpl
jb
xchg
fisubs
fwait
and
lcall
lea
scas
adc
mov
sahf
sbb
sub
pop
insb
outsb
inc
ret
cmc
jno
adc
test
lcall
mov
test
pop
or
or
or
test
push
ds
add
and
lds
sub
xchg
lock
and
xchg
push
pop
inc
rcrb
and
sbb
sub
sub
jp
fwait
pop
or
test
loop
inc
imul
push
aas
xchg
sbb
pop
pusha
nop
enter
jnp
xchg
xchg
cmpsl
movsb
stc
stos
sub
jge
xchg
xor
add
cmpsb
pop
push
sub
push
test
pop
adc
pop
mov
sbb
xcrypt-ctr
cmpsl
fwait
nop
inc
pop
or
xchg
sub
fdivrl
xor
and
mov
cltd
mov
dec
xchg
daa
or
xchg
adc
xchg
pop
sbb
inc
adc
iret
add
jo
pop
xchg
and
sub
js
xchg
mov
pop
xchg
adc
je
lcall
and
or
mov
cmp
jae
es
lahf
jb
push
cmp
outsl
insb
and
cwtl
cmpsb
xchg
outsl
adc
fisubrs
adc
cwtl
loop
ds
inc
mov
sub
jb
sub
and
push
mov
dec
xor
or
mov
sbb
push
or
pop
xchg
mov
jle
and
adc
jmp
or
add
ficomps
loop
cmc
test
pop
and
jmp
mov
add
xchg
and
xchg
sub
jo
xchg
cmpsb
pop
fwait
into
cmpsl
test
pop
xchg
jae
and
push
sub
scas
xchg
xchg
pop
fldl
xlat
push
pop
cmp
fsub
sti
mov
xchg
cmpsb
enter
or
movsb
mov
xor
es
adc
push
mov
sub
jb
xchg
sbb
mov
cli
lock
into
andb
xchg
aas
stos
lods
xchg
mov
xchg
cld
xchg
mov
lcall
push
daa
in
fnstcw
adc
and
stos
xchg
push
stc
cmp
test
test
test
xchg
jmp
mov
adc
outsb
mov
pop
mov
mov
lcall
pushf
mov
cmpsl
xchg
xor
mull
sub
inc
jbe
xchg
push
sub
cltd
jno
out
clc
movsl
or
xchg
xor
adc
movsb
outsl
xor
adc
cltd
insb
enter
cmpsb
xchg
sbb
xor
gs
lds
pop
xchg
shufps
cmpsb
ljmp
shrb
loop
or
pop
fwait
or
movsb
jge
pop
xchg
lea
adc
xchg
test
scas
pop
xchg
add
movsl
adcb
test
outsb
inc
push
sbb
mov
stos
xchg
ljmp
ficompl
fidivs
adc
test
push
pop
iret
sub
inc
jno
sub
movsl
mov
in
es
pop
data16
test
nop
push
daa
fists
mov
lahf
mov
xor
xchg
fcoms
xor
and
sub
sub
test
cwtl
xchg
dec
lock
mov
dec
jo
sub
and
pusha
xchg
shlb
cwtl
lock
es
scas
dec
mov
ret
adc
dec
push
lods
push
icebp
adc
and
es
fincstp
shr
jb
daa
and
push
mov
push
xchg
sbb
cli
sub
jmp
mov
daa
test
push
cmp
test
into
jne
pop
xchg
and
test
xchg
fadds
and
push
mov
bound
pop
lahf
jbe
jb
sbb
scas
or
test
sub
jb
movsb
sbb
stos
test
in
sahf
fisubrs
xchg
sbb
mov
or
lods
dec
mov
cmpsb
jle
in
cli
and
add
out
cwtl
sub
or
movsl
xchg
push
nop
sub
mov
adc
xchg
movsl
gs
mov
mov
and
xchg
nop
movsl
stos
daa
xchg
in
cmp
and
sub
test
cwtl
adc
mov
xchg
dec
lea
push
mov
js
mov
cmp
jb
and
push
sbb
in
xchg
and
adc
sub
xchg
push
cmpsl
or
jno
sahf
jb
sub
je
cltd
das
pop
cmpsb
pop
push
stos
inc
xor
repnz
aam
sbb
xchg
mov
mov
xchg
add
xchg
test
mov
in
and
call
pop
and
mov
or
test
dec
or
cmp
push
or
mov
add
inc
roll
sub
sub
xchg
or
xorb
movsl
xchg
fnstsw
jbe
adc
enter
push
sub
fwait
int3
lea
adc
inc
xchg
xor
push
xchg
cwtl
add
out
xchg
pminub
fwait
lcall
fwait
mov
dec
lcall
xchg
addr16
mov
outsl
adc
sub
mov
sub
es
dec
call
sbb
and
mov
lods
lcall
int
push
and
test
xor
stos
mov
and
out
or
and
sbb
or
mov
jbe
pop
and
mov
pop
jbe
or
sbb
outsl
and
cmpb
jne
nop
and
int
hlt
and
prefetcht2
or
mov
and
jbe
push
test
inc
ljmp
xchg
jne
or
pop
mov
lcall
xchg
mov
mov
push
or
lcall
popf
xchg
mov
outsl
pop
and
push
es
xchg
adc
mov
add
lcall
adc
push
andl
mov
push
mov
dec
lods
dec
xlat
or
xor
xchg
test
cltd
add
test
adc
cmpsl
adc
xchg
adc
pop
lock
add
fcomi
adc
sbb
and
push
pop
iret
sub
inc
adc
xor
or
lahf
mov
outsl
mov
lods
adc
scas
mov
or
outsb
push
adc
rcrb
add
jbe
xor
fldenv
cmpsb
xchg
js
shld
pop
je
and
jmp
push
cmp
or
cmc
out
push
lea
scas
mov
outsl
xchg
push
pusha
mov
mov
xor
mov
and
jecxz
mov
mov
stos
xchg
pop
insl
and
out
lcall
push
cmp
mov
xchg
adc
movsl
xchg
ds
inc
or
xor
in
lock
cmovbe
pop
pop
cmpsb
mov
push
mov
ss
sbb
fwait
lds
cmc
sub
dec
xor
adc
fwait
pop
mov
mov
xchg
mov
adc
adc
out
or
out
sub
in
insb
or
jbe
movsl
mov
xchg
mov
or
xchg
cmpsl
stos
sub
les
fistpl
cmpsl
xchg
xchg
fwait
adc
outsl
inc
xchg
stos
test
lods
sub
fs
and
mov
xchg
movsl
int3
or
cli
in
pop
lods
shlb
push
mov
movsb
out
lcall
or
test
and
pop
out
dec
xchg
cmpsb
sub
mov
in
pop
call
mov
or
pushf
adc
andb
lea
daa
and
mov
xchg
adc
adc
mov
fisubs
sbb
xor
stos
xchg
mov
push
or
scas
and
and
xchg
cmpsb
and
outsl
adc
xchg
pop
mov
pop
push
rclb
lret
jbe
stos
fisubrs
or
jmp
sub
sub
imul
adc
cltd
mov
sbb
inc
pop
mov
pop
xchg
movsb
xchg
mov
fwait
or
and
push
ret
xchg
jge,pn
cltd
pop
clc
loop
lods
mov
repz
sbbl
stos
ds
xor
xchg
mov
xchg
mov
mov
xchg
out
add
adc
xchg
test
fstps
jle
cltd
cltd
clc
bound
or
add
addl
lret
mov
cmp
sbb
cltd
imull
cmpsb
fisttpll
xchg
arpl
mov
in
cmpsl
subb
or
movsl
mov
cwtl
pop
insl
ret
xchg
jl
jle
cmc
lcall
mov
movsl
outsl
fwait
sbb
and
xchg
imul
movsb
icebp
sub
xchg
mov
pop
or
movsb
sbb
dec
int
test
setg
sub
mov
or
and
nop
pop
lea
into
mov
sbb
or
incl
imull
push
test
xchg
xchg
mov
adc
xchg
cld
jge
shrb
cmpb
es
push
sub
xchg
stos
mov
and
pop
cmpsb
movsl
dec
mov
hlt
int
mov
or
pop
xchg
xor
inc
shlb
stc
sub
xchg
cwtl
mov
mov
cmc
xchg
xchg
sbb
cmpsb
jle
je
push
jbe
sbb
jo
test
fucomi
mov
or
xchg
xor
cltd
sub
sbb
xchg
or
jecxz
or
mov
adc
ret
and
xchg
fisubrl
mov
or
movsb
test
mov
pop
push
jne
sub
push
xchg
pop
jne
xor
and
ret
sub
xchg
add
adc
cld
es
adc
aaa
mov
movsl
rorb
iret
jno
push
pop
sahf
push
pop
movsb
out
xchg
sbb
dec
fbld
fisttps
outsl
insb
and
sbb
in
aaa
repz
adc
ss
scas
xor
lahf
mov
mov
cwtl
jbe
adc
sub
adc
and
sub
daa
mov
mov
stc
push
push
dec
jbe
lret
stc
mov
xor
clc
repnz
lret
loop
xchg
sub
and
loop
ret
lock
and
fwait
jmp
test
mov
stos
stos
or
ljmp
lahf
and
xchg
pop
pop
pusha
out
movsb
test
sub
scas
movsl
pop
dec
push
mov
into
lods
xchg
cmpsb
lcall
cwtl
pop
es
mov
test
or
scas
hlt
mov
mov
test
inc
jno
cltd
popl
push
aam
push
filds
adc
lods
sbb
or
out
ret
dec
or
xchg
filds
push
xchg
adc
daa
mov
sub
jno
and
sub
fildl
xchg
mov
mov
pop
test
bswap
clc
les
xchg
mov
xchg
push
sbb
out
sahf
pop
sbb
cmpsb
pop
or
out
adc
sbb
iret
dec
mov
mov
adcl
movsl
imul
or
adc
xchg
mov
fiadds
ficomps
lahf
into
mov
movsb
jle
and
pop
clc
add
xor
inc
cltd
cs
daa
outsl
cltd
adc
cmpsl
adc
jae
stos
adc
sbb
mov
add
cltd
jg
fs
adc
in
stc
or
jbe
fwait
adc
adc
rcrb
cmp
pusha
lcall
xchg
dec
andl
das
or
stos
shll
push
xchg
xor
out
or
lcall
stc
xchg
sbb
and
mov
mov
dec
popf
adc
movsl
out
mov
push
xchg
push
xchg
adc
jmp
mov
sbb
testl
mov
stc
pop
or
mov
mov
dec
xchg
xchg
cmpps
or
xchg
inc
jp
cmpsl
outsl
les
mov
cmp
cmp
xchg
cmp
jnp
or
mov
cltd
xchg
jae
adc
lret
sub
adc
nop
jae
fwait
nop
jbe
mov
lods
xchg
mov
pop
cwtl
sbb
cmpsb
xchg
es
stos
sub
notl
lcall
ljmp
adc
xchg
in
mov
popf
nop
das
and
sbb
xchg
xchg
ds
jl
cmpsb
pop
mov
daa
sub
sub
sub
lods
sub
mov
jb
and
jns
and
jo
xchg
cmc
out
mov
jl
pop
cmp
jne
xchg
sti
pop
andb
and
out
fwait
cltd
xchg
and
mov
es
iret
aas
sbb
cwtl
mov
pop
pop
mov
and
mov
and
or
pop
xchg
fwait
sbb
pop
fwait
test
jae
lcall
daa
push
push
or
jmp
repz
lock
and
in
push
stc
cmp
jle
jae
mov
adc
ret
jno
mov
nop
add
xchg
or
xchg
xchg
mov
imul
xor
jmp
lods
lahf
clc
pop
sub
cmpsb
fincstp
out
push
xchg
ds
adc
adc
scas
push
movsb
xcrypt-cfb
cmpsl
imul
insl
nop
xor
push
mov
je
add
mov
xchg
mov
xchg
or
cmpsb
mull
iret
add
or
push
mov
xchg
and
shll
push
xor
sub
xor
mov
sbb
in
loop
or
xchg
mov
imul
xchg
jbe
xchg
mov
out
jmp
lret
adc
scas
outsl
mov
movsl
and
jg
sub
loop
xchg
stos
mov
data16
adc
jge
adc
dec
mov
fwait
push
sbb
mov
push
mov
ret
sbbb
sub
adc
sub
dec
cwtl
push
jbe
fstpt
loope
notl
es
mov
xchg
lds
iret
adc
sub
or
cld
xchg
pop
stos
ljmp
mov
mov
mov
and
lahf
lcall
adc
jecxz
dec
xor
adc
mov
and
fisubrl
and
test
mov
jb
and
cmpsl
and
mov
testl
xorb
lcall
mov
std
push
or
pop
mov
adc
sbbl
or
and
xchg
xlat
adc
pop
or
sub
out
cmpsl
nop
and
sub
mov
xchg
cwtl
scas
adc
or
add
mov
rcrl
stc
jb
pop
xchg
pop
and
cs
call
cltd
lahf
into
popf
mov
loopne
in
nop
pop
cmpsl
scas
and
dec
xor
dec
xor
sahf
cltd
xchg
push
and
in
out
pop
test
mov
xchg
jp
pop
stos
xchg
fwait
adc
push
test
xchg
scas
insl
or
or
mov
in
add
and
add
sub
sub
sysret
mov
mov
dec
ss
add
pop
loop
lret
pop
mov
repz
adcb
rorl
pop
xchg
test
adc
pop
mov
mov
es
adc
stos
cltd
sbbb
pop
mov
test
adc
scas
dec
sbb
mov
pushf
lahf
loopne
adc
sub
insb
jle
sbb
shl
scas
ds
and
shlb
test
mov
mov
and
inc
andb
xchg
movsl
shlb
test
jns
jno
push
rclb
test
scas
cltd
call
in
dec
and
xchg
jmp
mov
jge
adc
cmp
insb
push
addb
and
scas
sbb
xchg
nop
dec
stos
add
in
xchg
addr16
pop
adc
mov
daa
xchg
jb
movsb
adc
sbb
cmp
adc
sbb
faddl
lcall
mov
daa
mov
pop
cmp
dec
nop
adc
xchg
in
iret
mulb
sbb
pop
and
xor
pop
testb
mov
lcall
fsubrs
daa
mov
mov
xchg
icebp
and
sbb
mov
mov
push
adc
cmpsl
insb
inc
in
shll
jp
adc
es
xchg
dec
push
push
pop
es
das
adcl
pop
loop
lret
cmpsb
mov
scas
push
test
stos
and
sbb
lods
jg
out
imul
xchg
movsb
movsl
stos
xchg
cs
fdivs
js
sbb
xchg
popf
xchg
jb
and
ret
in
addb
ret
pop
mov
das
inc
or
mov
lcall
repz
movsl
enter
hlt
mov
pusha
enter
mov
nop
sub
test
stos
or
lahf
sbbb
sub
mov
mov
sub
jl
xchg
mov
stos
sahf
sub
xor
movsb
sbb
rorw
bndldx
push
aas
out
inc
mov
push
test
lods
arpl
xchg
stos
stos
mov
adc
and
add
sbb
mov
es
sub
jno
cwtl
xor
and
adc
jp
shrb
test
jge
lock
or
gs
mov
sbb
rolb
push
iret
in
sahf
das
xchg
or
jp
sbb
enter
xchg
push
test
movsb
mov
mov
mov
and
testl
loopne
notl
mov
pop
or
jno
push
nop
xchg
jb
test
lret
pop
es
out
repz
xchg
or
movsl
cmp
mov
push
xor
push
mov
adc
notb
daa
mov
xchg
sbb
push
lds
adc
aad
fdivl
out
or
and
mov
adc
xchg
adc
call
clc
and
punpcklbw
push
push
andb
jae
cmpsl
xchg
fimuls
jle
xchg
mov
lcall
mov
paddsw
lcall
xchg
jecxz
imull
sbb
mov
pop
cmpsb
dec
imul
mov
mov
cmp
jmp
xchg
and
stos
daa
sbb
add
adc
mov
or
sub
int
repz
stc
xchg
jae
adc
aad
iret
jmp
dec
rclb
sbbb
sti
and
ja
xchg
popf
xor
add
xor
adc
and
flds
mov
fiadds
mov
in
mov
adc
or
test
pop
push
cmpsb
push
cmpsl
push
jns
xchg
mov
jae
stos
out
mov
and
mov
mov
xchg
xchg
adc
iret
iret
sbb
in
dec
ficompl
or
cmp
stos
adc
stc
in
push
notl
sti
das
fimuls
test
mov
add
inc
sbb
mov
or
add
add
or
das
sub
lods
adc
sub
nop
shl
cmpsl
adc
mov
cmc
loop
adc
stos
mov
and
xchg
je
pop
or
mov
negl
xor
fwait
daa
xchg
mov
xchg
sub
adc
pop
sub
sub
bswap
push
paddd
sub
cwtl
adc
hlt
gs
add
rcl
push
lcall
inc
js
mov
xchg
movsl
nop
mov
packuswb
xchg
pop
jae
stos
imul
pop
ja
pop
or
sbb
mov
xchg
push
stos
ljmp
xor
cltd
xchg
mov
out
jmp
or
sbb
fwait
xchg
lahf
inc
outsb
sysenter
pop
pop
adc
cmpsb
and
jbe
adc
repz
and
jge
xchg
push
adc
lahf
insb
inc
mov
mov
push
test
and
mov
sub
mov
loope
pop
mov
and
test
pop
data16
xchg
scas
les
sub
pop
cwtl
scas
repz
shrb
fistl
into
pop
add
xchg
test
testl
inc
add
xchg
sbb
and
xchg
movb
cmpsl
test
and
nop
lret
ljmp
jae
stos
and
test
inc
packuswb
imull
fdivrs
jns
jb
xchg
js
adc
mov
and
inc
test
aas
inc
mov
fs
mov
sbb
adc
mov
push
pop
xor
xor
fwait
stos
cmp
mov
push
xchg
jmp
xor
cwtl
cmpsb
add
jge
mov
jae
daa
stos
xor
sub
jle
mov
and
jbe
adc
adc
mov
mov
and
daa
and
fsubrs
lods
pop
push
cwtl
xchg
std
or
mov
in
popf
rclb
and
daa
test
adc
in
fcoml
aam
into
ljmp
stos
xchg
nop
jbe
push
daa
adcb
scas
aaa
mov
sbbl
sub
sub
pop
mov
les
add
and
dec
pop
and
or
sahf
js
cmpsl
lock
mov
rorb
mov
adc
cmp
imulb
adc
subb
jb
adc
mov
xchg
jl
popf
sub
or
and
jle
xchg
in
sub
or
push
sub
cmp
js
jle
mov
sbb
xor
and
fwait
stos
lods
mov
or
lcall
add
adc
and
jo
cmpsl
pop
sbb
test
add
aas
or
mov
insl
lea
xor
sub
add
movsl
xchg
xchg
and
cmpsl
lock
mov
cli
stos
test
jae
or
mov
dec
jle
xor
cltd
mov
cmovge
mov
je
test
repz
mov
stos
js
add
nop
pop
mov
adc
ret
arpl
sbb
iret
sbb
adc
mov
mov
mov
mov
adc
data16
mov
fwait
js
cmc
xor
or
daa
shrl
incb
lcall
je
and
jb
mov
and
pop
in
movq
pop
mov
xchg
lcall
adc
lods
jne
test
js
outsl
mov
aam
es
mov
and
popf
mov
daa
in
cld
push
or
mov
and
mov
mov
fcoms
das
adc
mov
push
or
mov
or
cmpsb
or
and
scas
and
sbb
ljmp
xor
add
test
mov
mov
lods
icebp
sub
ret
cltd
mov
pop
mov
fwait
xchg
cltd
or
push
das
popf
pop
cltd
test
mov
clts
sbb
or
test
sbbb
out
and
inc
add
bnd
xor
mov
mov
xor
xchg
loopne
or
mov
push
sbb
pop
in
mov
sarb
mov
fisubrs
dec
add
aad
mov
jae
sbb
add
dec
pop
xlat
cmpsb
pop
push
xchg
scas
daa
xchg
cmpsl
insl
xchg
adc
daa
cmpsb
daa
cwtl
mov
mov
sub
cmpsl
sbb
test
sbb
cmc
jno
stos
xchg
xor
cmpsb
popl
cld
test
or
xchg
push
ret
xchg
push
test
or
mov
mov
in
lods
mov
scas
jae
fwait
je
outsl
sbb
adc
repz
out
sub
mov
cmpsb
test
in
stos
sub
in
sbbb
mov
push
loopne
daa
popf
xchg
out
lahf
js
cltd
sub
sub
outsl
frstor
out
lock
int3
cltd
lahf
mov
push
and
xchg
pop
fucomp
icebp
xchg
aaa
sbb
adc
daa
push
xchg
xor
sbb
daa
test
jp
cmc
and
fnsave
pop
jg
push
adc
push
nop
or
xor
cmp
sub
test
sub
adc
xor
push
pop
ss
mov
pop
in
and
stos
adc
and
test
or
aaa
xchg
mov
pop
and
test
jnp
mov
out
xchg
aas
stos
xchg
lahf
sbb
sub
pop
cmpsl
mov
xchg
mov
mov
adc
ljmp
xchg
or
test
test
cli
xor
sbb
stos
jno
bswap
rcll
push
sbb
or
inc
mov
test
xor
js
cmc
lds
cmp
lcall
test
shlb
xchg
sub
arpl
xchg
adc
sub
sbb
mov
mov
shll
mov
mov
push
adcl
xchg
pop
xchg
sub
test
fnstsw
jae
or
adc
xchg
outsl
or
daa
movsb
lods
sbb
wbinvd
mov
xor
data16
fwait
jb
sub
and
fwait
add
mov
inc
fnstenv
sub
xchg
sbb
or
mov
mov
or
call
dec
xor
sbb
test
test
jmp
adc
push
sbb
jno
or
pop
scas
xchg
or
adc
fwait
jecxz
mov
xchg
sub
rcll
lahf
into
lods
or
mov
and
pop
ret
xchg
add
or
mov
lahf
hlt
stos
xchg
and
iret
lcall
push
mov
sbb
aaa
or
xchg
ret
outsl
lcall
sub
icebp
pusha
mov
in
es
mov
loope
cwtl
jge
shlb
outsl
and
fists
pusha
lahf
nop
mov
sub
dec
ret
cltd
push
or
lods
sbb
mov
push
mov
iret
or
xchg
push
cmpxchg
aaa
js
push
addr16
push
notl
fwait
sbb
fbld
out
jae
lcall
jb
and
lods
call
fsubl
push
add
mov
adc
pop
mov
mov
xor
or
imul
sahf
adc
and
xchg
mov
push
pop
mov
lea
test
sub
and
jno
daa
pop
cmpsl
xchg
das
in
and
aam
sub
stos
or
rol
xchg
cltd
jno
stos
sub
cwtl
test
mov
clc
and
call
movsb
out
negl
add
and
dec
xor
outsl
inc
mov
test
dec
inc
xor
xchg
fbld
adc
pushf
loopne
jo
mov
xchg
sub
sbb
jecxz
repnz
push
clc
adc
or
mov
mov
pop
dec
cltd
sbb
jp
imul
adc
aas
mov
sub
jne
ljmp
jno
or
xchg
shll
mov
in
mov
mov
fisttps
xchg
push
xchg
imul
and
mov
and
sbb
or
mov
add
jl
outsl
xchg
sbb
lods
jo
pop
sbb
or
cwtl
pop
jecxz
mov
adc
stos
adc
mov
add
dec
out
sub
imul
es
arpl
cltd
dec
cmpsb
push
mov
xchg
iret
arpl
mov
cmp
int
adc
xchg
pushf
add
jp
adc
fsub
cs
sub
xchg
stos
test
rolb
pop
and
in
js
lock
sub
repnz
imul
pop
and
in
mov
pop
sbb
mov
mov
test
movsb
or
mov
lret
cmpsb
or
es
and
sub
lods
and
stos
adc
xchg
out
xchg
add
jno
sub
rclb
dec
xchg
cltd
sub
aas
ss
mov
shr
and
test
push
rorb
and
or
pop
adc
out
sub
sub
cltd
and
mov
adc
mov
push
data16
ficomps
es
jmp
cmpsl
into
or
and
xchg
xor
mov
mov
insl
bound
mov
dec
movsb
stos
adc
daa
pop
nop
rcl
sub
cmpsb
sti
push
xlat
outsl
loope
and
sahf
mov
call
or
mov
imul
push
jg
movsl
addr16
sbb
mov
mov
xchg
sbb
push
mov
sarl
and
xchg
and
adc
and
push
adc
push
por
into
cwtl
cmpsb
or
cltd
fwait
xor
ljmp
lcall
lcall
loopne
jo
sbb
xchg
pop
xchg
test
int
xchg
sbb
lcall
mov
scas
test
es
mov
movsb
es
std
xchg
orb
mov
movsl
adc
adc
hlt
aad
jp
or
mov
pop
push
out
add
fisubl
sub
mov
or
xchg
ljmp
sbb
xchg
and
sbb
cmpsb
je
adc
sbb
testl
lahf
mov
nop
or
mov
lahf
cld
push
ret
lock
in
js
xchg
pop
fisubrl
arpl
xchg
and
adc
fstpl
incb
lahf
loop
or
sahf
shrb
jle
aad
sbb
lods
sub
xor
in
xor
sub
adc
lcall
data16
xchg
ficoms
rcll
movsl
test
cmpsl
xchg
mov
mov
cmpsl
dec
and
mov
mov
push
pop
mov
fistps
and
and
xchg
push
or
sub
adc
sbb
push
xchg
mov
push
pop
stc
lods
mov
in
jno
and
and
jmp
sub
or
pop
mov
pop
adc
and
test
icebp
pop
dec
incb
xchg
and
mov
fisubrl
and
repnz
mov
out
mov
das
xchg
in
test
push
cmp
and
mov
stos
pop
lcall
test
add
and
pop
sbb
cmpsb
cmpsl
xchg
jmp
push
xchg
xchg
or
and
es
and
lcall
lahf
insb
jp
sbb
inc
test
cmc
cmpsl
sub
or
stc
fistpll
lcall
and
insb
jae
or
fchs
push
and
jmp
bt
mov
mov
test
test
movsb
jb
mov
cmpsl
sub
push
nop
sti
sbb
lods
mov
mov
jge
push
mov
outsl
or
lcall
popf
cmpsb
sbbl
std
add
pop
mov
sub
sbb
punpckhbw
test
adcb
mov
stc
mov
je
and
lods
mov
jbe
cmpsl
xchg
aas
nop
adc
in
mov
add
sub
pushf
xchg
jo
and
outsb
push
mov
add
test
call
paddq
dec
lods
mov
nop
loope
insb
setno
push
xchg
andb
adc
xchg
lcall
adc
xchg
jle
lods
adcl
mov
mov
shl
push
dec
cwtl
loopne
sbb
mov
sub
daa
and
xchg
sbb
je
adc
fsubr
or
mov
xchg
daa
pop
fwait
dec
push
sbb
mov
dec
pop
out
mov
cmpsl
and
fdivr
mov
jp
inc
iret
mov
je
pop
or
mov
and
and
or
and
inc
push
das
scas
call
nop
ret
cmp
setp
icebp
add
cmp
xchg
mov
mov
and
xchg
cmpsb
test
adc
notl
in
sbb
mov
and
sbb
xlat
pop
icebp
xchg
test
fidivrl
sub
mov
lock
mov
dec
adc
mov
ljmp
adc
adc
adc
bound
ret
xchg
xchg
push
xchg
stc
xchg
mov
or
adc
pop
rorl
inc
lahf
cmpsb
mov
mov
xchg
push
mov
stos
test
out
mov
cltd
adc
ds
add
repnz
sub
add
pushf
cwtl
mov
mov
pop
sti
mov
pop
adc
fcoms
or
stos
xchg
pop
sub
stos
push
insb
mov
xor
andl
jne
xchg
daa
xchg
push
std
ss
mov
je
repz
cmc
test
iret
sub
nop
pop
fistpll
sbb
ljmp
je
add
xor
sbb
jge
or
sbb
fwait
nop
and
pop
sub
xor
lahf
mov
fstps
xchg
mov
sbb
cmp
cmpsb
xor
sub
jmp
adc
scas
adc
and
xchg
rcll
push
adc
sahf
ljmp
adc
jecxz
ss
adc
and
jae
mov
nop
test
sub
sub
pop
out
outsl
or
xchg
xchg
mov
mov
popf
or
subl
fsubl
jb
and
xor
ja
xchg
outsb
loop
and
mov
mov
pop
fisttpl
push
and
movsb
adc
stc
xchg
cmc
out
mov
mov
sahf
clc
sub
sbb
xchg
fimull
push
outsb
fists
or
mov
xchg
adc
scas
in
mov
js
push
mov
stos
and
pop
push
pop
lahf
cs
popa
incb
stos
or
movsl
decb
mov
xchg
add
push
or
push
sub
mov
clc
or
stc
mov
xor
push
nop
movaps
push
je
jb
and
pop
mov
sub
cmp
int
rol
daa
adc
test
lock
and
es
xchg
test
cltd
inc
jb
stos
xchg
das
push
xchg
sub
dec
movsb
lahf
sahf
pop
xchg
movsl
push
fmull
lock
mov
lahf
add
jecxz
fmul
push
inc
cwtl
cmpsb
lcall
pop
mov
loopne
mov
xchg
sti
sub
rcrl
jg
mov
adc
or
pop
adc
lret
das
ret
sar
add
push
andb
sub
sub
jno
adc
es
cwtl
jle
mov
iret
in
and
aam
adc
or
into
mov
lcall
test
adc
stos
mov
adc
mov
lcall
and
daa
std
adc
mov
and
test
mov
fildll
out
mov
xchg
pushf
pop
jb
and
or
stos
mov
mov
stc
xchg
or
mov
out
sub
lahf
sbb
mov
pop
outsb
into
mov
cmpsl
ds
xchg
cltd
movsl
mov
adc
xchg
mov
cmpsb
inc
xchg
movsl
push
xor
js
rclb
jae
pop
fcmove
mov
ds
hlt
cs
cmpsl
sti
adc
dec
lea
or
pushf
daa
test
sbb
pop
mov
push
mov
xchg
clc
aad
adc
stos
ljmp
stc
fistl
ljmp
or
cmp
push
jbe
cmpsl
xchg
and
fistps
sbb
bts
sub
xchg
push
imul
xchg
or
mov
in
aas
cmp
gs
call
jb
inc
jno
xchg
out
inc
sbb
inc
xchg
popf
fdivr
lahf
push
xchg
sub
xor
jmp
push
sbb
insl
jae
and
mov
outsl
mov
cs
push
xchg
fwait
or
or
mov
xchg
stc
test
clc
mov
adc
lcall
movsl
stos
mov
mov
xchg
mov
into
lret
mov
imul
scas
mov
aad
mov
jb
daa
adc
movsb
mov
add
mov
sub
movsl
xchg
and
or
into
mov
pop
je
push
mov
push
imul
mov
add
xchg
mov
dec
mov
sub
loope
lret
sbb
int3
cld
test
push
jb
mov
pop
mov
test
addb
or
pop
mov
or
cmpsl
mov
mov
test
cwtl
dec
inc
mov
adc
pop
and
mov
cli
xchg
dec
and
rolb
xchg
mov
jb
adc
scas
jge
adc
ljmp
mov
push
andb
sub
xchg
mov
or
lret
sbb
lock
mov
push
push
dec
outsb
outsl
lret
mov
adc
ret
daa
pop
bound
aad
in
out
xchg
mov
pop
xchg
or
rolb
dec
jno
mov
sub
or
scas
push
xchg
lahf
movsb
lods
cmp
dec
mov
add
jp
ljmp
mov
mov
push
js
popf
sub
sub
or
sar
pop
test
mov
adc
xor
mov
xchg
jle
cwtl
lcall
adc
pop
pop
push
ret
iret
adc
iret
ds
xchg
cmpsb
xchg
and
or
adc
adc
cmpsl
and
jp
mov
ret
and
xor
test
xchg
xchg
nop
lcall
xchg
fists
in
and
leave
out
test
lcall
pop
adc
in
cmpsb
int
xor
xor
mov
cmpb
xchg
xchg
and
mov
fwait
sbb
jno
or
icebp
mov
cli
mov
dec
xor
sbb
clc
push
cs
mov
jae
and
icebp
pop
mov
xchg
mov
repz
mov
mov
std
pop
cltd
adc
push
push
test
mov
pop
jge
out
nop
or
mov
outsb
jno
lahf
into
arpl
mov
out
clc
cltd
xchg
enter
adc
pop
pop
sub
andb
xor
jno
test
lock
mov
loopne
mov
mov
mov
push
notl
pop
add
jno
je
jno
and
cmpsl
daa
sahf
push
xchg
test
xchg
imull
sub
insl
sbb
call
add
adc
and
xchg
add
adc
pop
inc
pop
fstl
stos
bound
xlat
sbb
and
xchg
pop
test
sub
sbb
sahf
cwtl
adc
sbb
cltd
xchg
cmpsb
test
xchg
mov
mov
icebp
adc
sub
push
rcrb
pusha
into
sub
movlps
stos
iret
adc
das
dec
and
cmp
xchg
std
and
mov
cmpsl
ret
fldl
dec
adc
adc
lret
mov
dec
pop
fimuls
jg
xchg
or
or
mov
jb
mov
test
cwtl
xchg
pop
cs
call
rorb
push
les
xchg
es
out
dec
les
adc
mov
les
jo
and
xchg
fcoms
xor
xchg
imul
xchg
lahf
or
stos
scas
vpmadcsswd
popf
jo
daa
mov
and
sub
xchg
stos
sub
adcl
pop
adc
incb
adc
mov
fldt
pop
and
aad
add
mov
sub
adc
pop
popl
and
jbe
push
cmp
sub
jae
adc
movsl
das
jo
xchg
sbb
into
pop
fwait
sbb
test
jnp
jg
xchg
jns
jge
mov
mov
xchg
and
mov
jae
sub
or
mov
mov
sbb
push
nop
fdivl
adc
pop
jle
jno
out
fwait
and
lcall
add
stos
xchg
icebp
cmp
movsl
adc
fldln2
dec
hlt
push
roll
xchg
stos
adc
xor
daa
sbb
out
pop
das
mov
xchg
adc
ds
mov
or
xchg
dec
pop
xor
sti
or
pushf
mov
jp
lods
nop
outsl
mov
mov
lahf
xchg
cmc
ficoms
sbb
pop
sub
and
lret
cmp
xchg
xor
cmpsb
loope
mov
xchg
xor
mov
aad
xchg
and
jae
and
test
lea
dec
pop
fisubrl
lods
dec
xchg
and
imul
movsb
je
repz
inc
pushf
xchg
jmp
sub
inc
jecxz
xlat
mov
in
pushf
mov
and
stos
adc
daa
arpl
jge
adc
xchg
pop
cltd
sub
je
push
cmpsb
iret
andl
scas
popl
fwait
sbb
cld
sub
je
adc
in
xchg
push
xor
or
sub
jno
or
sti
push
fimull
outsb
lahf
sets
pop
pop
in
adc
cmp
rcl
xor
test
xor
out
mov
adc
adc
aad
lcall
pop
iret
cmp
add
jp
fwait
mov
iret
sub
insb
std
test
push
and
jbe
add
pop
mov
test
or
mov
sbb
adc
xor
je
jb
cltd
or
les
sub
or
stos
and
es
xchg
scas
adc
mov
cmpsl
xchg
mov
mov
ss
das
test
and
pop
daa
lret
call
test
ljmp
xorb
mov
push
stos
mov
lea
adc
and
pop
xchg
pop
jge
mov
fidivrl
jbe
sbb
iret
or
movntq
or
test
test
mov
mov
mov
mov
stos
cmp
clc
loope
xabort
pop
test
stos
loopew
std
es
xor
jg
addl
imul
cmc
test
fs
xchg
xchg
movsl
or
mov
sub
pop
scas
xor
and
or
adc
sub
adc
sbb
scas
dec
mov
and
out
addl
pop
adc
loope
xchg
out
daa
sbb
push
mov
and
sbb
clc
jecxz
ret
jo
xchg
push
cltd
push
sbb
xchg
adc
pushf
movsb
lock
xchg
jle
fwait
outsb
imul
adc
push
jo
nop
and
pop
and
xchg
cwtl
sbb
xor
jecxz
adcl
push
and
and
outsb
das
inc
adc
pop
xchg
pop
repnz
cmpb
mov
mov
push
pop
xor
and
mov
std
clc
inc
xor
xchg
jg
inc
add
inc
mov
dec
stos
in
inc
fwait
stos
pop
adc
cltd
and
sub
stos
xchg
jb
xchg
cmpsb
or
mov
or
adc
clc
mov
and
jo
stos
or
enter
loop
cmpsb
xchg
in
test
rcrb
push
fcompl
sub
popl
xchg
mov
adc
outsl
sub
pop
push
push
test
fucomip
adc
sbb
sub
add
xchg
push
call
shlb
dec
jbe
mov
mov
jmp
lock
mov
rolb
movsb
sub
adc
cmp
mov
add
mov
or
xlat
outsl
adc
dec
mov
jp
insb
jno
and
dec
scas
mov
mov
lahf
in
jp
ret
stc
cmpsb
jae
mov
and
icebp
je
fdivl
xchg
mov
cli
test
cmpsl
mov
stos
sub
pop
sub
pop
xchg
aas
or
sbb
add
and
roll
pop
popa
pop
pop
decb
jmp
test
xor
out
xchg
pop
lds
cmc
lods
sub
ljmp
into
and
sub
pushf
mov
inc
popa
fistpll
mov
adc
dec
in
adc
aad
fisttpll
sbb
ret
or
dec
nop
jbe
xchg
mov
int3
imul
stc
ret
jne
adc
test
cwtl
sub
xsavec
cmpsb
aaa
lcall
mov
xchg
sbb
mov
cmpsl
xchg
aas
in
sbb
or
pop
jb
and
adc
scas
mov
and
xchg
xchg
cwtl
std
loop
xor
cs
jle
or
test
and
xchg
adc
sub
stos
mov
xchg
sub
or
xlat
mov
sub
in
cs
subb
out
pushf
xor
js
inc
cmc
pop
and
xchg
clc
pop
xchg
add
out
xchg
adc
cmp
shrb
xchg
and
push
push
orb
and
scas
dec
sbb
cltd
jmp
cmp
push
shlb
mull
les
test
or
pop
sbb
popa
and
xchg
xchg
pop
cltd
sbb
add
getsec
test
fst
jl
jmp
mov
xchg
lcall
xor
test
jae
and
dec
cli
xchg
push
mov
hlt
je
int
stc
and
jnp
and
lahf
scas
stos
cwtl
sub
pushf
and
movl
fwait
pushf
pop
cmp
or
test
sbb
pop
aad
push
or
and
movsl
mov
in
xchg
xchg
mov
jb
cmpsl
pop
sub
mov
and
inc
or
rolb
int3
pop
test
int3
jge
xchg
mov
xchg
cltd
es
fisubs
xchg
mov
xchg
lahf
aaa
sub
and
dec
dec
fcmovb
pushf
sbb
mov
call
sbb
lret
sub
fdivrs
sarl
clc
dec
pop
dec
lcall
mov
xchg
or
jo
stos
adc
mov
stos
mov
shrb
scas
shll
lahf
adc
or
jg
aad
movsl
sbb
out
cwtl
mov
mov
lcall
push
mov
dec
xchg
pop
xor
sbb
push
aaa
or
adc
xchg
call
rcl
shrb
cmpsb
inc
mov
pop
adc
xor
lcall
es
jp
data16
mov
mov
sub
ss
cld
inc
je
jb
mov
test
je
pop
jg
sbb
and
lcall
lea
les
xchg
jp
push
push
lods
lods
add
push
xchg
adc
and
daa
xor
movups
push
loop
cwtl
mov
loopne
add
cld
mov
lahf
pop
xchg
in
add
stc
mov
cmpsl
sub
lcall
add
test
shll
cwtl
rorb
lret
js
jae
test
pop
aas
pop
test
sbb
cmpsl
ret
push
adc
aas
mov
fsincos
seto
stos
and
iret
add
sub
xchg
sbb
out
lds
or
sub
pop
xchg
adc
test
jmp
ss
xchg
cmpsl
call
mov
and
jle
xor
test
xchg
xchg
pop
or
mov
outsb
frstor
cmp
lods
mov
and
daa
nop
cmp
push
ljmp
outsl
inc
and
mov
mov
push
ljmp
lcall
and
hlt
or
dec
xchg
js
jbe
nop
or
add
push
mov
sub
sub
arpl
mov
xchg
mov
lret
dec
out
adc
movsb
xchg
xchg
test
call
adc
push
enter
xchg
and
and
xchg
int3
test
xchg
jmp
xchg
xchg
jno
mov
into
movsb
or
stos
sbb
pop
sbb
in
test
out
adc
bound
cltd
sbb
xchg
aas
sub
es
mov
adc
gs
add
jge
sub
jb
bts
fimull
and
lods
sub
rcll
or
orb
sbb
xchg
jo
mov
es
cmpsb
pop
mov
lcall
in
cmp
mov
sub
pop
xlat
nop
sahf
or
push
sbb
movzbl
jne
movsb
mov
push
jmp
push
mov
scas
sub
es
xchg
test
outsb
stos
adc
cmpsb
and
movaps
ljmp
test
scas
push
and
mov
js
repz
rcrb
cld
adc
lahf
and
adc
add
jae
mov
mov
add
and
pop
sub
xor
mov
xchg
add
xchg
daa
cmp
or
into
and
sub
pop
push
cmpsb
push
add
jns
adc
add
xchg
xlat
sarb
je
loop
jbe
mov
sub
scas
arpl
push
fnsave
out
push
mov
xchg
mov
imul
and
push
and
push
adc
sub
movsl
dec
inc
mov
js
std
add
and
adc
push
inc
scas
jns
or
loopne
xchg
je
mov
or
or
push
pop
dec
cmp
out
jbe
fwait
lahf
stos
xchg
orl
sub
rorb
push
sbb
mov
sbb
es
add
stc
fprem
jae
lcall
mov
jb
test
jb
in
jbe
sub
sbb
xchg
in
push
adc
lahf
or
arpl
xor
sbb
sahf
add
mov
xchg
sbb
cmpsb
pop
adc
ljmp
and
mov
xchg
cltd
fcompl
lcall
mov
mov
pop
cmpsb
je
jae
lock
cmpsl
mov
xchg
add
xchg
out
and
daa
jmp
scas
inc
scas
notb
mov
out
stc
adc
testb
jbe
in
ds
xchg
jno
or
int3
sahf
xchg
dec
xchg
loop
cs
mov
push
pop
mov
sbb
dec
xchg
xor
js
test
mov
sbb
inc
inc
stc
mov
inc
loope
jp
je
pop
aas
and
sbb
mov
js
nop
sbb
lods
orb
jnp
xchg
push
fs
sub
and
pop
lcall
fcmovb
lcall
and
lcall
pop
fcoml
outsb
fstps
cmpsb
xor
adc
pop
data16
cwtl
and
mov
jl
cltd
mov
adc
mov
lods
or
and
fbld
pushf
mov
in
cli
ja
pop
xchg
mov
xchg
mov
lahf
sbb
mov
aam
sub
adc
jg
jg
fisubl
movsl
test
and
push
and
push
cmpsl
xor
popf
scas
inc
test
cwtl
aas
jp
pop
dec
lea
iret
mov
and
ret
cmc
or
das
sbb
jl
popf
and
sbb
adc
and
pushf
or
nop
mov
sub
xchg
es
mov
dec
out
and
push
es
adc
mov
push
dec
loopne
orb
subl
fadds
and
mov
sub
aad
lahf
dec
lods
xlat
cmp
sbb
outsb
cmpsb
mov
stos
sbb
daa
cmpsb
test
sub
lret
nop
cmp
lahf
scas
inc
movsl
and
shlb
and
sub
push
sub
inc
or
xor
lahf
mov
test
adc
sbb
push
imul
mov
xor
movsb
pop
cmp
xchg
mov
lods
test
cmpsb
inc
loop
aas
dec
xchg
aam
and
loop
xchg
sub
mov
fsubrs
and
mov
xchg
lahf
inc
rcrl
fwait
adc
bound
ret
lret
out
adc
or
cmpsl
test
push
js
sub
and
push
daa
mov
or
out
cld
sub
xchg
xchg
lahf
pop
push
mov
repz
scas
movsb
iret
dec
scas
dec
sbb
pushf
adc
testb
xchg
repnz
push
cvtpi2ps
mov
mov
mov
outsl
cmpsb
pop
sub
jg
outsb
cmp
sbb
mov
je
stos
je
lock
in
jbe
sub
and
mov
imul
ja
mov
add
xchg
cwtl
mov
cmc
movsb
mov
andb
mov
lcall
pop
test
nop
mov
pop
pop
sub
xchg
cmpsb
mov
xor
stos
mov
sub
popw
mov
or
add
loop
and
mov
mov
repnz
pop
and
insl
notl
ficoms
lahf
push
cmpsl
and
stos
xchg
xchg
cmpsb
sbb
sbb
idivb
nop
push
adc
xorb
xor
outsb
notb
test
xchg
jle
sbb
rorl
or
push
subb
xchg
mov
ret
pop
in
adc
cltd
xchg
stos
jae
mov
pop
xorb
pushf
and
cmp
mov
xchg
cwtl
or
and
xchg
xchg
xchg
movsb
insb
cltd
dec
sub
push
aas
test
and
or
or
sbb
ret
and
pop
xchg
jge
xchg
mov
movsl
mov
outsb
jecxz
lock
or
xchg
hlt
and
sub
stc
lock
mov
jg
xchg
fcomps
movsb
xchg
push
movsb
outsb
pop
call
cmp
pop
xchg
and
jo
ret
andb
mov
adc
loopne
mov
in
sbb
mov
mov
test
loope
sti
mov
cs
inc
xor
mov
adc
lret
pop
mov
fcoml
cmpsl
push
cmp
adc
fbld
dec
or
push
jae
mov
adc
lahf
xor
sub
push
je
out
sub
inc
jae
and
inc
std
mov
adc
mov
sbb
pmulhuw
jmp
adc
adc
sti
adc
mov
xor
xchg
mov
sbb
push
stos
xchg
jecxz
mov
cltd
add
sbb
ficompl
adc
xchg
daa
mov
jl
and
pop
hlt
inc
fmuls
or
inc
xor
sub
jae
scas
mov
push
mov
push
test
clc
or
lods
es
lds
cld
xchg
xchg
movzbl
stos
mov
out
mov
and
mov
cwtl
mov
loopne
mov
shrl
xor
xor
jg
xchg
xchg
or
pop
mov
test
and
push
cs
jecxz
lret
insb
inc
or
cmpsb
stos
aam
cwtl
test
pop
lock
mov
xchg
out
pop
stos
mov
pop
push
xchg
push
dec
adc
mov
movsb
out
adc
sahf
xchg
out
shlb
in
xor
mov
fwait
jmp
sub
and
and
lahf
ljmp
cltd
xchg
fwait
or
mov
test
in
dec
jge
std
fwait
push
or
movups
add
mov
in
xchg
mov
stos
insl
loop
mov
jmp
sbbb
sub
mov
adc
int3
iret
testb
pop
fidivs
lahf
xor
cmpsb
adc
sbb
and
mov
push
in
mov
mov
cmpb
xchg
sbbl
mov
sub
cmpsl
movsb
scas
and
lahf
pusha
push
sub
pop
in
js
jge
cmp
imul
adc
std
xchg
adc
or
sub
xchg
stos
jno
and
xor
jmp
subb
xchg
xsha256
cmpsb
push
subl
xor
xchg
xchg
xchg
and
sbb
xchg
cs
mov
dec
rcrb
push
je
xchg
push
lods
out
xchg
mov
push
sbb
lret
add
lods
xchg
aas
rclb
mov
lcall
je
sub
test
dec
push
loop
push
out
test
imul
addb
imul
add
xchg
xchg
cwtl
lcall
xchg
sbb
push
test
in
and
adc
mov
sub
daa
and
push
jbe
pop
and
lcall
mov
lock
iret
add
xchg
sbb
adc
aaa
or
cwtl
pop
into
les
xchg
pop
rcll
fnstsw
xor
mov
and
add
mov
stos
call
cmpl
movsl
mov
outsl
es
pop
and
xchg
mov
sub
imull
lds
ljmp
mov
mov
das
mov
or
inc
std
xlat
jp
js
notl
pop
adc
and
push
mov
hlt
movsb
cli
xchg
or
and
lods
ret
in
je
xchg
adc
mov
mov
in
mov
xor
push
icebp
mov
sbb
jl
in
std
stos
mov
ret
movsb
push
jmp
jge
sub
sub
pop
stos
test
insb
aam
cltd
cmp
sbb
cwtl
nop
adc
jno
xchg
sbb
leave
sbb
jecxz
xchg
mov
mov
and
filds
xor
xchg
outsl
cmp
jmp
inc
mov
xchg
jae
adc
bndstx
mov
nop
fistps
into
lcallw
push
lahf
inc
and
and
pop
xchg
or
jmp
and
mov
rcr
iret
xchg
adc
std
push
pop
pop
xchg
inc
incb
cmpsb
mov
xchg
adc
mov
and
and
xchg
xchg
or
sbb
movsl
dec
sub
mov
cmpsl
cltd
jb
nop
sub
xchg
jle
sub
mov
adc
insl
js
scas
push
movsl
fiadds
jae
adc
sub
data16
and
xchg
xchg
and
xchg
mov
or
mov
jb
pop
adc
cltd
adc
xchg
pop
jecxz
in
and
mov
and
js
out
inc
mov
nop
xchg
and
popl
out
fwait
jge
fstpl
lds
and
cmpsb
cmc
popa
pop
out
adc
fs
fldenv
pop
test
repz
mov
lds
gs
pop
sub
mov
xchg
pop
lods
daa
cmp
cmpsb
xor
test
fwait
popa
sub
cmp
in
mov
arpl
cmpsl
sbb
or
and
daa
adc
adc
cmpsl
stos
or
cmpsb
push
dec
cmp
scas
jbe
pop
nop
xchg
mov
push
xor
mov
xchg
or
jnp
sub
mov
xor
outsl
dec
or
sahf
sub
out
mov
xchg
mov
xchg
adc
cld
sub
push
cbtw
jecxz
or
inc
sub
icebp
xchg
xchg
and
cmpsb
cltd
pop
add
test
and
mov
jno
cmpsb
mov
sbb
and
cld
sbb
in
or
out
mov
dec
xchg
mov
jp
mov
stos
xchg
adc
jmp
iret
xorl
sub
mov
adc
mov
lea
daa
dec
jae
and
xchg
and
mov
xchg
xchg
cmovne
fwait
jp
lahf
std
jge
cmpsb
and
mov
mov
and
xor
ja
cmpsl
jecxz
imul
mov
xchg
movsb
movsl
ret
push
mov
popf
test
adc
pop
add
add
in
lods
test
insb
sub
adc
mov
cwtl
in
and
mov
sub
cmp
or
cld
pop
scas
add
pusha
and
sub
out
negl
sub
shlb
popf
call
arpl
mov
test
or
imul
iret
lret
scas
loopne
xchg
arpl
daa
ficoms
sbb
add
orb
inc
gs
sarb
jno
stos
les
pop
and
fucom
jnp
adcb
lods
dec
subl
xor
or
mov
out
or
movsl
pop
fsubs
mov
mov
xor
mov
xchg
xchg
jmp
jbe
loopne
xor
mov
pop
xchg
pop
pop
push
inc
movsb
push
cmp
xchg
outsl
adc
and
nop
pop
das
lds
jo
xchg
xchg
xchg
adc
sbb
pop
xchg
push
cmpsb
sub
les
in
notl
add
nop
mov
std
les
sbb
es
movsl
pop
mov
ret
outsl
fwait
nop
and
lahf
fbld
loope
mov
or
mov
ret
jb
pop
stos
inc
mov
enter
es
xor
ficompl
push
lcall
addb
mov
xchg
rolb
push
adc
stos
sub
mov
mov
xor
cwtl
pop
adc
movsl
lahf
cmp
out
add
sbb
adc
or
lods
sti
sbb
cs
jno
or
fcomps
xchg
add
in
and
daa
push
and
mov
or
test
aad
mov
mov
or
sarb
sarl
lock
sbb
xor
inc
mov
test
cmpsb
sbb
outsl
ret
popl
les
mov
and
mov
pop
scas
xchg
pop
pop
rorl
inc
and
xchg
fsubrl
mov
cltd
ret
jae
lock
mov
adc
cmpsl
xchg
pop
xchg
and
fs
mov
sbb
mov
dec
out
mov
test
aas
pop
adc
xchg
out
push
andl
ljmp
push
pop
xchg
lret
cmpsl
and
sbb
mov
sub
and
cwtl
mov
pop
add
xchg
pop
xor
mov
or
xchg
xor
xchg
adc
pop
adc
lock
push
cltd
xchg
push
xchg
popf
and
sbb
test
sub
xlat
test
xorb
xor
pop
xchg
xchg
adc
pop
cmpsb
inc
jae
and
xchg
enter
xor
lcall
mov
fmuls
imul
idivl
xor
push
hlt
jno
or
ret
dec
mov
pop
faddp
xchg
xchg
sbb
stos
sub
and
or
cmp
xchg
int
std
sub
xchg
out
pop
nop
and
sbb
loop
mov
popa
popf
xchg
adc
in
test
add
pusha
gs
adc
daa
into
dec
mov
fwait
and
out
sub
stos
and
adcl
sub
adc
cmpsb
push
push
cld
std
mov
lods
stc
or
inc
mov
lcall
test
xchg
sbb
sti
stc
and
loop,pn
push
sbb
push
mov
fwait
sbb
test
and
clc
sbb
mov
fsubrs
mov
mov
stos
xchg
jmp
ja
pmuludq
movsb
lret
lcall
cmpsb
adc
xchg
jmp
outsl
jge
sub
and
xchg
idivb
sub
and
testl
sbb
movsb
lahf
xchg
mov
nop
or
xlat
xchg
fisubs
adc
sbb
incb
cmpsl
pop
xchg
addr16
pop
fnsave
testb
popl
insb
and
push
adc
sub
in
jge
cltd
fwait
out
imul
test
fsts
and
xchg
mov
push
addb
and
lods
lods
js
daa
cmc
and
and
pop
shrb
xchg
adc
push
test
mov
jb
cwtl
or
cmc
hlt
arpl
push
sub
insl
mov
xchg
rcrb
mov
into
jle
xchg
and
lds
sub
ret
adc
popf
scas
das
pop
sub
bound
or
or
fdivl
and
pop
inc
out
xchg
xchg
push
xchg
mov
cmpsl
insl
mov
push
test
mov
mov
cs
lret
mov
jp
stos
cmc
push
xchg
push
lahf
mov
pushf
push
mov
or
dec
out
mov
and
xor
cmpsb
inc
gs
sbb
sub
sub
xchg
pop
in
jecxz
imull
fsub
stos
dec
sahf
ret
sub
lahf
push
xchg
pusha
out
xchg
movsl
cmpsb
xchg
cltd
testb
pop
adc
sbb
dec
adc
decb
or
nop
movsb
push
movsl
push
fiadds
cmp
sbb
scas
xchg
xchg
bsf
mov
stos
jb
pop
xchg
xor
daa
xchg
or
mov
adc
and
jge
xchg
dec
lcall
sub
or
sbb
xchg
nop
in
ja
sbb
test
mov
add
or
xchg
or
dec
adc
scas
pop
and
sub
jno
mov
xchg
mov
cltd
in
fwait
xchg
or
or
cwtl
mov
or
scas
mov
sbb
adc
jge
int
add
test
daa
pop
icebp
jae
jmp
and
popf
sub
mov
mov
cli
cmpsb
fldl
test
jmp
push
sbb
push
andl
xchg
mov
pushf
and
or
xchg
es
xchg
xchg
pop
adc
fidivs
test
sbbb
gs
and
aas
repnz
mov
lcall
mov
arpl
test
xchg
jle
mov
sbb
jo
xchg
sub
pop
adc
add
mov
pop
cwtl
inc
xor
dec
out
clc
sub
push
sub
lcall
sahf
push
adc
add
adc
xchg
sarl
push
cmpsl
jp
and
in
mov
movsl
sub
mov
cwtl
lahf
pop
repz
mov
and
push
mov
lcall
movsl
or
scas
fsts
mov
adcb
and
or
pop
arpl
xchg
sub
adc
or
std
mov
and
pop
andb
adc
int3
push
notl
add
push
inc
fisubs
mov
pushf
fwait
jge
cmpsb
cmp
js
jo
sub
adc
lret
fwait
or
enter
mov
xchg
adc
stos
xchg
and
xchg
mov
lds
sub
jge
sbb
or
pop
cmpsb
jle
fs
inc
adc
mov
jbe
inc
xchg
movsb
in
gs
mov
out
push
mov
xchg
lcall
rorl
push
sub
dec
sub
xchg
loop
rep
xchg
xchg
testl
mov
push
add
sub
jo
push
jp
insb
jp
aas
sub
mov
cmpb
xchg
sbb
mov
inc
sbb
es
pushf
mov
sub
push
shrb
sbb
and
lods
adc
sub
movsb
nop
xchg
mov
popl
lret
test
mov
xchg
inc
fsubp
sub
mov
jbe
add
jo
mov
std
xchg
lahf
adc
out
fbld
xor
outsl
sbb
daa
fcoms
xchg
add
xchg
cltd
cmp
nop
cmova
stos
shlb
daa
add
jb
cwtl
test
push
fwait
in
push
jmp
mov
daa
cmpsl
xor
xor
scas
adc
iret
mov
sahf
sub
stos
fwait
jbe
sbb
lahf
sub
es
arpl
xor
stos
stos
sub
ja
mov
pop
test
push
leave
mov
mov
pop
push
sub
das
aad
mov
movsl
and
xlat
jno
sub
xor
mov
cltd
pusha
or
inc
xchg
mov
mov
lods
test
and
shlb
add
das
sti
add
lahf
sahf
jg
lret
stos
mov
out
or
sarb
push
ret
or
int3
push
push
and
jno
xchg
pop
out
pop
xchg
inc
pop
bound
adc
sub
cltd
into
cmp
xchg
xor
stos
xchg
loop
lcall
cmp
mov
pop
fsubrs
out
scas
loope
sbb
fistpl
test
push
cmpsb
pop
je
xchg
xor
pop
mov
daa
adc
xchg
in
xchg
es
loop
lcall
mov
or
xchg
mov
mov
pop
dec
xchg
test
pop
fldt
push
into
adc
adc
pop
aad
cmpsl
push
mov
lods
je
mov
mov
ss
movsl
nop
leave
mov
mov
in
pop
stos
push
mov
xor
jno
test
shrl
mov
mov
xor
adc
sbb
sub
lahf
mov
xchg
pop
daa
inc
xchg
mov
mov
and
fs
push
mov
movsl
mov
mov
xchg
loope
into
or
push
das
mov
stos
in
jecxz
imul
mov
xchg
push
shrb
js
insb
stc
xchg
cld
popf
and
lods
sbb
repz
mov
pop
jae
xchg
insl
das
adc
mov
aaa
in
stc
cltd
stc
xor
xchg
icebp
movsb
adc
lcall
and
lcall
and
push
mov
xchg
sub
jg
bound
mov
xchg
and
xchg
cmc
stos
pushf
sbb
add
mov
out
xchg
sub
adc
xchg
adc
xor
cmc
jmp
push
adc
xchg
xchg
ret
scas
jl
mov
or
xchg
inc
mov
pop
bound
fwait
test
fldcw
and
xchg
fildll
mov
sbb
in
out
adc
lret
and
adc
jbe
adc
push
lret
std
xchg
mov
or
adc
jmp
data16
cmpsl
pop
and
xchg
inc
jecxz
mov
in
rcll
jno
lahf
sub
mov
and
xchg
sub
jb
and
mov
je
test
fidivrl
and
ljmp
gs
cmp
sub
test
and
and
add
push
mov
dec
int3
fiadds
push
test
addl
push
adc
test
lcall
stos
insb
cmp
mov
test
stos
in
cmp
and
aam
pop
mov
sbb
lcall
lahf
outsl
mov
sub
out
fistl
jecxz
mov
mov
cltd
or
jbe
movsl
dec
gs
or
adc
outsl
int3
mov
lcall
lcall
cmpsb
adc
jae
pop
mov
into
clc
add
mov
sub
xchg
and
push
rcr
lahf
test
lds
and
stc
jbe,pt
movsl
xchg
out
fisubs
adc
call
shll
mov
xor
xchg
xchg
fwait
and
loop
jle
adc
cltd
adc
xor
fwait
mov
into
leave
adc
xchg
xchg
xchg
sub
fisubs
mov
outsl
stos
rcl
sbb
push
jmp
mov
add
daa
add
mov
cwtl
or
pop
and
adc
cmpsb
adc
xchg
adc
xchg
and
adc
lret
nop
lock
lcall
daa
cmc
add
sbb
lret
insb
cmc
jmp
stc
adc
je
jb
daa
das
cmpsl
xchg
add
dec
adc
xchg
mov
data16
xchg
xchg
nop
mov
cmp
and
int3
mov
lret
shlb
jne
nop
cli
pop
pushf
imul
sbb
mov
mov
push
xchg
pop
scas
add
and
jle
xchg
lcall
push
xchg
pop
cmpsb
and
and
pop
adc
mov
sub
daa
jg
test
lcall
lret
jp
iret
pop
xchg
xor
and
pop
out
cs
gs
cmpsb
std
cmc
stos
or
cmpsb
repnz
int3
jle
cltd
xchg
lock
cs
inc
lahf
cli
stos
sub
dec
sub
icebp
insb
arpl
cltd
pop
das
arpl
inc
je
add
xchg
fidivs
sub
daa
dec
lock
cltd
xchg
in
xchg
jno
or
mov
out
sub
mov
fwait
arpl
pop
out
adc
mov
adc
jmp
sbb
push
lcall
and
lods
lcall
lcall
test
adc
or
xor
and
sbb
stos
mov
test
stos
pusha
jmp
or
sub
pop
jne
mov
inc
mov
xchg
sub
xchg
push
xchg
lcall
add
add
xchg
mov
negl
sub
pop
jae
jb
mov
test
sub
es
es
sub
mov
sti
aas
testl
into
push
cmpsb
mov
push
pop
xchg
int3
pop
bound
test
scas
sbb
mov
pop
sbb
jmp
sti
push
mov
cmpsb
shufps
xchg
and
xchg
jo
cmpsl
daa
or
mov
pop
lcall
and
adc
xchg
dec
ret
ljmp
xchg
data16
push
jnp
xchg
fwait
mov
jmp
jbe
sbb
and
mov
stos
xor
jno
and
adc
out
xchg
ds
adc
adc
xchg
cld
in
or
xor
push
jo
mov
pop
test
mov
mov
pop
cmp
or
mov
mov
xchg
mov
stos
mov
add
lahf
not
dec
jnp
loopne
test
push
cltd
pop
cmp
push
adc
mov
cmp
xchg
pop
shll
mov
lods
or
sbb
sub
lock
rclb
pusha
add
movsb
mov
xchg
stos
push
lcall
into
or
adc
stos
stc
imul
mov
clc
pop
xchg
mov
inc
mov
jae
xchg
and
out
jge
cwtl
iret
test
mov
adc
frstor
or
and
stos
dec
xchg
movsb
enter
es
push
xor
fadds
sbb
sbb
mov
mov
in
loopne
nop
fstps
push
iret
add
xchg
fwait
loopne
je
cwtl
bt
arpl
scas
sahf
pop
mov
push
and
ja
mov
andb
inc
mov
push
add
pop
mov
xchg
xchg
stos
xchg
add
or
adc
xchg
and
stos
fwait
xchg
adc
xlat
xchg
add
xchg
jl
xabort
jae
xchg
inc
jg
and
sub
pop
call
push
fwait
pop
inc
xchg
lods
in
div
xchg
and
inc
je
adc
mov
mov
mov
push
pop
xor
sbb
cmc
mov
xchg
mov
lret
pop
and
and
sub
lcall
adc
and
push
arpl
add
adc
inc
std
movsl
sbb
jge
scas
pop
test
sbb
into
inc
movsb
or
xchg
add
xchg
xchg
pop
pusha
daa
arpl
adc
mov
dec
out
push
pop
iret
into
cwtl
dec
test
sub
lret
iret
or
adcl
push
movsb
call
mov
xchg
nop
dec
lcall
dec
in
daa
sbb
fmull
mov
push
mov
stc
je
or
fisubs
mov
adc
sbb
add
mov
mov
andl
xchg
push
or
jge
mov
xchg
or
sbb
mov
nop
int
aam
cwtl
mov
dec
cmpsb
inc
mov
xchg
dec
stos
pusha
data16
mov
xchg
mov
lahf
fsubrl
leave
sbb
int3
nop
scas
outsl
inc
and
and
adc
jns
sbb
jbe
sub
jl
xchg
xchg
cmpsb
hlt
mov
iret
mov
inc
xchg
push
into
rorl
inc
stc
cwtl
mov
cmpsl
nop
jecxz
mov
sub
test
test
add
and
adc
jge
loopne
sbbb
movsl
adc
arpl
and
xchg
movsb
in
push
sub
movsb
out
push
lahf
fs
xor
mov
mov
dec
cltd
cmpsl
mov
test
mov
cmp
mov
adc
jmp
jbe
nop
xor
sub
jae
test
or
mov
movsl
add
jbe
sbb
js
fwait
lcall
xchg
mov
inc
test
sbb
jbe
popf
xor
mov
lock
adc
or
fdivs
mov
and
and
or
pop
xchg
mov
mov
push
lcall
push
adc
xchg
gs
movb
or
sar
mov
dec
jno
sub
add
ja
xchg
or
notl
in
dec
daa
mov
push
das
enter
mov
andl
and
scas
popa
xchg
or
fists
ret
lods
fimull
jo
sub
mov
and
xchg
lahf
out
test
xchg
mov
mov
mov
mov
or
cmpsb
cltd
adc
xchg
pusha
movsl
jle
or
movsb
out
lock
daa
cmpsb
xor
ficoms
cmp
and
in
push
mov
leave
daa
add
scas
test
mov
pop
adc
mov
xchg
xor
fs
cmp
push
lret
xchg
out
aas
sbb
incl
or
test
xchg
push
sbb
fwait
loop
lret
pop
cmpsb
adcb
mov
push
adc
lcall
xchg
out
test
movsl
decl
adc
in
jmp
sub
cmp
mov
sbb
lahf
adc
stos
xchg
scas
clc
cmpsl
dec
xchg
lret
lock
mov
scas
repnz
and
or
jle
xlat
es
adc
loopne
mov
sub
mov
sahf
dec
mov
sub
ret
adc
jle
in
fsubrl
and
stos
or
fs
jl
push
adc
adcb
sub
loop
scas
test
mov
adc
or
add
add
mov
xchg
daa
test
mov
daa
sbb
popl
fdivs
or
cmp
inc
push
cmp
andb
xchg
and
sbb
adc
pop
out
add
pop
out
popf
sbb
cmovle
add
out
and
ja
lcall
loop
daa
xchg
mov
mov
xchg
pop
call
lods
movb
adc
cltd
xchg
xsha1
cmpsb
mov
fildl
sahf
dec
sbb
xchg
or
xchg
mov
jo
lret
sub
xchg
adc
dec
lcall
cmpsl
pusha
fstl
test
xchg
ds
sbb
clc
das
lods
sub
xchg
mov
mov
sub
sti
mov
mov
mov
test
and
mov
and
push
call
in
adc
mov
sub
cmpsb
pop
sbb
push
adc
xchg
xchg
and
mov
mov
loop
mov
test
xchg
pop
and
cs
stos
pop
cmp
and
cwtl
and
mov
je
and
and
adc
mov
negl
sub
cltd
xchg
pop
movsb
enter
mull
adc
push
adc
fimuls
sbb
and
cwtl
xor
mov
in
sbb
mov
sbb
jnp
or
sub
js
lcall
push
movsb
cld
notl
repz
jno
and
fwait
or
fimull
stos
jae
cmpsb
adc
mov
mov
pushl
or
add
adc
stos
xchg
lahf
mov
dec
sbb
shrd
jne
adc
fwait
adc
mov
xchg
sub
mov
xchg
mov
fisttpll
or
movsb
js
sarb
add
mov
mov
mov
add
stos
lods
inc
push
mov
adc
mov
test
outsb
push
push
mov
pop
out
jg
sahf
rcll
and
add
adc
fists
xchg
js
repnz
pop
fildll
mov
xor
jo
lahf
mov
inc
shll
sbb
les
mov
mov
mov
mov
test
jo
mov
mov
lcall
nop
sub
inc
cmp
pop
jno
cmpsl
sbb
mov
sub
cltd
adc
adc
test
pop
adc
adc
push
push
iret
sbb
xor
mov
divl
cmpsb
or
cmc
rcrl
xor
int
sbb
pop
mov
out
add
jmp
xchg
mov
adc
nop
xchg
sub
xchg
icebp
jae
mov
jecxz
shlb
lcall
out
cltd
cmpsb
movsl
adc
or
test
and
dec
pop
out
scas
daa
cltd
mov
mov
movsb
and
lcall
test
xchg
or
addb
xlat
in
hlt
pushf
sub
cltd
and
nop
fnstsw
sbb
out
scas
cmp
fisubl
fldcw
adc
sub
lcall
aas
rolb
cltd
dec
out
add
or
mov
in
add
out
sbb
mov
xlat
mov
push
pop
fwait
subb
sub
mov
jo
stos
movsl
bt
addb
push
ljmp
mov
xchg
stc
adc
jno
mov
fiadds
xchg
or
sbb
cmpsl
sbb
pop
xchg
xor
xchg
pop
lock
xchg
out
and
setb
adc
pop
lcall
adc
mov
cltd
mov
movsl
mov
imul
mov
js
mov
aam
jae
pop
mov
sub
lret
xchg
jns
xchg
lcall
pushf
add
movsb
pop
adc
lcall
sahf
mov
or
sahf
inc
test
mov
lahf
or
mov
and
loop
lea
xchg
lock
negb
mov
jg
sub
push
lea
test
pop
sbb
in
xchg
les
jl
lods
hlt
adc
test
call
or
ud0
decl
cwtl
cwtl
sbb
test
jp
adc
jecxz
xchg
pop
adcb
or
ret
adc
imul
jnp
sbb
sbb
lahf
movsb
enter
popf
jmp
xchg
repz
test
movb
out
inc
test
adc
mov
push
fyl2xp1
jne
jbe
or
adc
iret
mov
fcoms
shlb
xor
ss
aas
lods
xchg
stos
pop
ljmp
adc
pop
jno
xor
lock
push
and
push
mov
cmpsl
push
es
pop
shrb
xchg
xchg
add
xchg
aad
and
xchg
sub
xor
loopne
xchg
or
and
push
repnz
rclb
mov
or
scas
insl
xchg
cmp
sbb
mov
xchg
lcall
jle
lods
lds
dec
je
or
cld
mull
mov
out
xchg
repz
xchg
xchg
sub
jnp
sbb
jns
in
seta
iret
xchg
dec
jb
cmpsb
clc
and
inc
fistps
mov
inc
je
pop
jae
mov
pop
dec
jae
stos
mov
mov
fisubrl
test
sub
xchg
xchg
and
in
add
movsb
jge
stos
mov
sub
jmp
gs
jb
xchg
push
add
xchg
xchg
sbb
xor
push
adc
incb
cwtl
je
adc
out
sub
sbb
cs
mov
inc
je
push
and
xor
jb
test
aam
mov
cmpsb
stos
lcall
xchg
subb
je
cmpsb
mov
mov
scas
dec
mov
fcomps
cwtl
popf
xchg
push
sbb
mov
ret
mov
mov
xchg
out
out
jb
stos
mov
bswap
mov
xchg
dec
lcall
or
iret
lea
sub
dec
adc
or
pop
mov
scas
inc
xchg
mov
ds
push
test
dec
daa
mov
xchg
aam
lahf
lcall
inc
jo
pop
sub
test
push
add
cmpsb
iret
jmp
ds
cwtl
insl
movzbl
je
stos
push
mov
or
xchg
xor
xor
jl
mov
xchg
scas
sub
xchg
or
decl
lcall
adc
sub
pop
mov
push
xchg
movsb
mov
cli
add
or
mov
je
out
inc
mov
movsb
cwtl
adc
mov
and
stc
mov
xlat
cmpsb
mov
fwait
adc
test
sbb
mov
xchg
add
mov
ljmp
mov
outsb
repz
daa
cmp
fdiv
jecxz
or
adcb
sub
cwtl
mov
adc
xchg
addl
xchg
xchg
mov
fwait
cmpsb
fcoml
lea
xor
mov
or
or
es
mov
stos
jae
and
sub
xchg
shlb
push
stos
or
xchg
addb
mov
xchg
rolb
int
jb
sub
mov
xchg
push
cwtl
or
sub
outsl
test
adc
das
in
fwait
andb
dec
es
dec
sbb
ljmp
sahf
adc
out
cltd
xchg
mov
daa
aas
push
mov
sub
scas
cmp
add
sub
push
push
lods
or
divl
std
sahf
test
xchg
movsl
leave
js
lock
and
adc
cmpsb
adc
daa
data16
xchg
addr16
mov
cltd
pop
jno
movsb
test
sub
push
bound
jo
nopl
mov
addl
pop
cmpsl
das
les
call
push
or
out
mov
and
loop
push
sbb
xchg
subb
or
add
pop
mov
or
pop
push
and
insl
rolb
in
in
cmp
loop
push
sub
sub
xchg
adc
jg
outsb
inc
rol
clc
inc
mov
lret
adc
cld
call
mov
xchg
pop
mov
sbb
sbb
vmread
and
mov
mov
andb
mov
push
xchg
mov
daa
lods
sarb
scas
push
pop
int3
adcb
jae
daa
add
xor
and
test
sub
in
xor
xlat
es
pop
aam
adc
push
cmpsb
pop
scas
mov
mov
out
test
xchg
jbe
mov
adc
adc
mov
mov
fwait
stos
cwtl
je
jb
incb
ds
cmp
lret
cmp
sbbl
and
scas
sub
mov
mov
test
xchg
cli
fdivs
xor
test
es
jmp
sti
nop
adc
cltd
sahf
inc
xchg
sbb
cwtl
test
and
mov
jae
push
mov
mov
iret
into
mov
and
rcrb
icebp
pop
inc
ret
jb
and
aaa
and
adc
loop
test
pop
jle
pop
xchg
jge
movsl
loopne
pop
test
adc
cwtl
lcall
or
sub
inc
or
jns
iret
lret
xchg
fmulp
and
mov
jl
pop
xchg
in
mov
test
push
movb
or
and
test
pop
xchg
dec
movhps
xchg
sub
push
mov
mul
cmc
adc
pushf
push
cltd
and
jno
sub
push
dec
outsl
or
sub
adc
mov
mov
je
and
sbb
mov
cltd
sbb
stos
jp
nop
ljmp
imulb
cmpsb
jmp
in
or
xchg
xchg
xchg
cmp
or
icebp
xchg
pop
mov
sub
cwtl
cltd
mov
xor
insb
lods
clc
out
sbb
lcall
je
fs
sbb
stos
daa
out
mov
and
adc
sub
sub
xchg
mov
push
lahf
data16
pop
daa
add
cwtl
iret
mov
sub
jno
adc
jle
jge
das
sbb
jmp
mov
mov
xchg
test
sti
lods
xchg
adc
movsl
dec
dec
and
incb
or
jge
jae
xchg
or
or
mov
push
fsubl
push
imul
pop
adc
push
sahf
add
in
sti
xchg
daa
nop
test
cmp
shrb
mov
cltd
fwait
mov
xchg
mov
nop
stos
mov
cmp
add
cmpb
imul
aad
dec
test
out
daa
or
xchg
fldt
push
jmp
in
xchg
daa
fbstp
nop
outsb
pop
insl
scas
dec
mov
push
jae
xchg
xor
outsl
pop
xchg
cwtl
addr16
mov
adc
lret
aas
inc
xlat
scas
dec
pop
lahf
push
iret
jbe
packssdw
add
loop
fs
testl
push
mov
sbb
xchg
out
pop
movsl
xchg
xchg
and
lcall
mov
mov
sbbb
mov
jmp
fstps
je
cs
add
xchg
xchg
mov
stos
test
add
xor
pop
faddl
out
ljmp
push
pushf
mov
adc
jb
and
xchg
mov
push
daa
mov
xchg
test
and
rorl
pop
or
aad
mov
dec
xchg
adc
adc
pop
and
pop
mov
adc
lret
das
fcoml
aaa
xchg
pop
movsl
xchg
and
sbbb
mov
mov
sahf
mov
sub
mov
mov
adc
jecxz
fbld
test
cmpsb
cmpsl
pop
inc
xchg
popa
or
das
loop
adc
pop
mov
mov
or
movsb
xchg
lea
push
jb
mov
jno
les
xchg
inc
xchg
pop
cmp
sbb
cmpsb
adc
daa
push
lahf
mov
movsb
ljmp
cwtl
jb
xchg
mov
test
xchg
popf
cltd
mov
xchg
inc
mov
das
arpl
push
sbb
movsb
fisubs
cmpsl
pushf
es
push
movsb
jno
add
insb
jae
comiss
inc
jp
dec
stc
gs
sub
imulb
popf
mull
mov
dec
lcall
mov
scas
fsubrs
mov
lock
jnp
mov
jl
xchg
push
xchg
inc
sub
pop
aam
mov
test
pop
mov
mov
or
pop
xor
adc
add
push
cwtl
xchg
movsb
es
mov
pop
or
or
fistpll
stc
pop
mov
sbb
loop
jb
mov
mov
xor
xchg
es
popl
lods
leave
stc
xchg
negb
mov
adc
adc
push
sbb
mov
ret
data16
mov
adcl
xchg
or
movsl
and
jmp
aad
mov
mov
xor
stos
fidivrs
cmpsb
fwait
insl
repz
ss
xchg
sub
sub
jo
lcall
mov
mov
shr
fildl
xchg
jmp
in
sbb
push
xchg
and
cwtl
fwait
pop
cmc
sbb
xor
push
fcompl
or
movsl
mov
scas
xchg
mov
sub
mov
mov
mulb
pmulhw
sbb
jbe
pop
push
lret
pop
lea
jg
jg
pop
xchg
pop
es
xchg
sub
push
xchg
fisubl
sahf
xchg
mov
lahf
mov
jp
sbb
jl
mov
and
pop
xor
rorl
pop
adc
test
pop
or
jb
adc
and
pop
arpl
or
nop
andb
mov
push
adcl
movsb
pop
adc
push
sub
outsb
ljmp
cmp
adc
int
imul
shrl
and
mov
or
cmpsl
xchg
mov
and
push
mov
xchg
sub
sahf
ljmp
movsb
jmp
out
adcb
lahf
stos
movsl
cltd
lock
and
daa
int3
adc
xor
test
jge
in
insl
clc
adc
mov
cmc
xchg
mov
xchg
movsb
fwait
cmp
xor
int
xchg
mov
or
xchg
es
int3
mov
mov
adc
xchg
xchg
push
std
pop
enter
daa
xchg
or
mov
dec
dec
adc
jnp
test
subl
add
xchg
in
add
cmc
loopne
mov
pop
out
cmp
cwtl
jecxz
sbb
adc
or
pop
sub
fiadds
sbb
jae
sub
arpl
call
xchg
lcall
sbb
push
xchg
pop
adc
dec
or
xchg
cltd
test
push
sbb
push
test
dec
push
test
and
adcb
insl
jg
pop
xchg
imul
xor
add
sbb
jno
sbb
mov
sbb
push
and
cmp
mov
fmul
lock
mov
xchg
xchg
in
xchg
xor
loope
addr16
and
sbb
jbe
mov
insb
or
mov
stos
stos
and
lret
pop
outsl
xchg
sub
ret
pushf
mov
fwait
and
jae
pop
mov
sahf
and
or
adc
xchg
xchg
mov
xchg
xor
ljmp
push
mov
ffreep
mov
or
std
jle
mov
or
mov
mov
es
icebp
ficoms
test
push
cwtl
sbb
xchg
push
sbb
ret
and
lret
mov
xchg
loopne
jp
mov
sbb
cmp
dec
subl
cwtl
pop
movsb
push
fisubs
jae
subl
jno
xchg
adc
into
scas
xor
adc
scas
and
sbb
sub
in
xchg
sahf
add
stos
adc
das
pop
and
cwtl
adc
outsl
mov
and
std
dec
add
es
ljmp
nop
test
shlb
xchg
xchg
push
mov
or
loop
mov
sub
addl
jb
or
scas
sub
sbb
add
dec
out
mov
pop
xchg
lahf
push
fwait
lret
out
daa
mov
idiv
cld
jae
and
push
jae
and
cltd
lret
xchg
pop
inc
jge
push
adc
sub
cmp
jo
mov
sbb
paddsw
pop
rcrl
sti
pop
mov
mov
test
cmpsl
mov
lfs
ret
and
or
adc
fsubl
daa
imull
je
mov
outsb
xchg
repz
push
fadds
sbb
ret
adc
int
scas
or
ret
test
push
jmp
lret
mov
mov
xchg
or
xor
or
nop
lds
cmpsb
adc
adcl
test
test
dec
rorl
clc
or
push
notl
sbb
xor
or
and
lcall
xor
mov
fadds
mov
mov
adc
mov
adc
sbb
push
xchg
add
mov
pop
movsl
cltd
movb
or
pushf
nop
jns
mov
adc
test
sbb
scas
fwait
pop
lahf
sti
push
leave
dec
sub
imul
adc
mov
shlb
push
scas
les
jnp
lea
xchg
mov
cmc
movsl
test
aad
push
sub
and
or
shl
jbe
mov
xlat
mov
sbb
divb
adcl
mov
lcall
sarl
sbb
or
xchg
or
or
xchg
je
or
mov
push
lcall
lock
add
mov
test
jb
nop
sub
adc
or
cmp
mov
xchg
jbe
xchg
sbb
insl
mov
dec
mov
test
pop
das
push
movsb
adc
sbb
mov
sub
sub
push
sub
and
mov
xor
xchg
iret
mov
movsb
sub
stos
or
and
sbb
mov
fwait
or
xchg
movb
testl
mov
cwtl
and
lahf
stos
cmpsb
or
jo
test
cltd
lds
sbb
or
jo
movsb
pop
pop
xchg
or
mov
pop
sub
fwait
pop
sub
cltd
or
and
jmp
loopne
xchg
cmpsb
js
lret
es
or
outsb
jp
push
and
lret
xchg
xchg
nop
add
dec
into
data16
in
mov
and
arpl
cmpsl
mov
cmpsb
and
and
mov
scas
jbe
into
stc
cwtl
or
xcrypt-cfb
cmpsl
mov
int3
lcall
mov
lcall
mov
jle
push
test
dec
sbb
mov
iret
out
mov
mov
push
add
jo
xchg
or
test
icebp
mov
stc
pop
out
mov
out
jle
test
mov
cmpsl
js
xchg
xor
mov
cmpsb
lock
clc
nop
sahf
inc
pop
xchg
stos
add
stos
lret
xchg
fbld
xchg
pop
push
lods
mov
lret
jno
fwait
cmpsb
scas
imul
das
adc
aad
sbb
xchg
and
xchg
sub
adc
es
xchg
cmc
cmpsb
daa
add
sub
mov
xchg
cmpsl
sub
testl
mov
jbe
adc
cwtl
push
push
stc
add
push
xchg
mov
pop
in
iret
mov
ljmp
and
xchg
or
daa
int3
xor
adc
adc
stos
xchg
lcall
push
push
fucom
or
gs
lahf
xchg
push
lods
dec
xlat
add
or
and
es
jnp
or
fwait
stc
pop
xchg
push
stos
sbb
push
jle
mov
or
lret
sbb
pop
or
movsb
call
push
stos
mov
nop
xchg
je
cmpsb
outsl
jg
fwait
adc
gs
and
xchg
sub
les
pop
lret
lds
sub
sub
movsl
sub
adc
sub
adc
or
and
in
adc
lret
xchg
dec
cmpsb
inc
test
inc
cmc
xchg
nop
scas
daa
adc
iret
sti
sbb
mov
dec
and
enter
pop
adc
fwait
jb
lahf
daa
lret
data16
and
mov
popl
mov
push
nop
adc
cmc
fs
out
aas
and
cmpsl
andl
jbe
xchg
cmp
outsb
mov
pop
bound
leave
ljmp
adc
nopl
movsb
add
das
mov
xor
push
sahf
rcrl
cmpsb
sbb
lcall
lret
test
imulb
jno
adc
enter
or
lock
iret
repnz
scas
adc
movsl
jbe
adc
movsb
iret
clc
and
je
push
movsl
jg
pop
pusha
lods
je
and
es
psraw
outsb
ja
adc
or
cmpsl
pop
das
pop
and
add
dec
dec
mov
sub
and
sbb
lret
or
bswap
stos
mov
and
lock
test
bound
sahf
sub
cmpsl
repnz
rolb
jl
cmpsb
imul
sbb
push
pop
fnsave
loope
pop
test
lods
jno
and
inc
cmc
pop
movsl
mov
pop
adc
mov
stc
adc
xchg
push
mov
xor
mull
lcall
xchg
inc
push
xchg
jnp
xchg
pop
mov
cmp
test
cmpsb
or
jmp
test
and
movsl
add
xchg
push
data16
mov
adc
stos
xchg
adcb
adc
xchg
adc
adc
cmpb
and
movb
and
push
test
scas
lds
lahf
je
sbb
es
mov
mov
jbe
push
mov
dec
test
cmpsl
out
adc
or
popf
add
loopne
pushf
mov
popf
and
nop
stos
je
sub
adc
mov
fs
movb
or
jo
cmpsl
xchg
test
sbb
push
js
xchg
daa
ljmp
dec
cmpsl
lcall
fisubrs
cltd
xor
jbe
and
cmpsl
add
xchg
lret
lcall
movsl
jbe
pop
int3
les
jo
test
outsl
adc
test
pop
not
pop
xchg
out
movl
and
mov
fidivrl
and
and
mov
sub
sub
mov
xchg
pop
fst
aam
adc
lods
push
mov
daa
sbb
cltd
mov
nop
xchg
mov
cmc
stos
lea
mov
mov
or
sbb
lcall
dec
sbb
sbb
mov
outsl
pop
and
push
mov
sub
mov
ds
push
addr16
ficomps
lods
xchg
xchg
mov
sub
inc
cmovge
pushf
das
aaa
sbb
cltd
cmpsb
push
loop
lods
jmp
fwait
nop
loop
test
and
frstor
cwtl
out
insl
mov
sbb
inc
push
test
xor
stc
fwait
xchg
or
stc
and
pop
xchg
push
or
aam
je
adc
sbb
cmc
xor
xchg
and
fisubrs
fwait
stc
test
push
fisubs
jb
xchg
cmpsb
push
pop
cmp
das
fldcw
sbb
pushf
adc
xchg
loopne
jbe
or
stc
adc
clc
test
mov
pop
mov
mov
or
or
loopne
insb
gs
rcrl
outsl
test
mov
add
outsl
and
stos
lahf
or
mov
sti
mov
adc
shll
cmp
sbb
cld
fists
adc
nop
xor
xor
xor
ja
jo
xchg
sbb
and
jae
sub
dec
cmpsl
xchg
cmp
nop
pop
sbb
out
jno
pop
pop
js
push
and
cmpsb
push
cmp
mov
cmovg
stos
mov
lock
in
jbe
or
mov
adc
fcoml
lahf
in
mov
dec
test
adc
cltd
mov
cmc
cmp
sbb
mov
fwait
aad
test
sub
mov
pop
xor
or
int3
xor
add
outsb
mov
jp
hlt
pop
xchg
testl
push
add
stos
out
data16
mov
adc
pop
scas
stc
xorl
das
aas
mov
push
sub
sbb
lods
mov
xchg
cwtl
sub
pop
xchg
lret
cmp
push
adc
cmpsl
dec
into
dec
add
test
mov
xlat
das
pop
sub
maxps
mov
mov
or
mov
test
pop
cmpsb
adc
mov
push
mov
xchg
scas
js
and
in
faddp
or
fs
push
adc
pop
push
adc
mov
and
dec
cwtl
push
lret
out
mov
adc
cmp
pop
sarl
iret
cltd
adc
mov
jae
sbb
mov
out
hlt
sbb
in
pop
cmpsl
mov
stos
cwtl
xchg
movsb
pop
sub
jo
xchg
sbb
cltd
push
pop
lret
ljmp
mov
push
or
sbb
xchg
stos
dec
stc
fimuls
dec
insb
push
pop
cmp
into
or
xchg
sub
lock
and
sub
xlat
es
and
jnp
and
push
stos
mov
or
and
sub
test
mov
push
sub
mov
pop
add
nop
pop
outsb
mov
xchg
jp
stos
mov
jae
cwtl
cmp
add
push
js
xchg
inc
xchg
imul
jbe
test
push
adc
adcb
xor
pop
xchg
jmp
dec
dec
fists
sbb
out
mov
lcall
addr16
xchg
inc
xchg
and
daa
jno
xchg
xchg
and
push
mov
fwait
cmpsl
sbb
es
push
dec
push
jae
xor
and
in
ljmp
aas
mov
mov
in
psadbw
mov
or
pop
dec
xchg
adc
nop
mov
mulb
inc
xor
es
xchg
mov
mov
pop
dec
xchg
aas
je
stos
and
xor
lcall
mov
daa
jbe
xchg
popa
pop
add
adc
xor
add
mov
push
in
mov
test
jb
sub
mov
or
mov
and
jle
mov
loop
jo
mov
pop
das
dec
xchg
nop
inc
mov
shld
pop
das
adc
xchg
mov
mov
loope
adc
sahf
out
or
adc
jae
ljmp
adc
adc
sub
or
inc
dec
dec
and
movsl
and
or
mov
add
into
jo
or
outsb
pop
stos
push
sbb
cltd
xchg
jno
xchg
adc
adc
movsb
lcall
pop
out
sbb
mov
and
xchg
push
leave
cmpsl
mov
jnp
mov
scas
mov
in
loopne
sbb
and
leave
or
ljmp
orl
dec
inc
scas
fmul
sbbb
xor
insl
push
jp
dec
lret
test
xchg
push
outsl
lods
stos
mov
xchg
pop
sub
sub
lahf
xor
pop
xor
fstpt
in
enter
ja
scas
xchg
adc
pop
xor
push
xchg
or
pop
mov
jp
fs
jge
xchg
test
xchg
addb
mov
dec
ljmp
loope
test
mov
shrl
push
sbb
repz
mov
mov
mov
loope
add
cwtl
push
or
loope
xchg
rcl
mov
add
mov
lahf
xchg
and
xchg
js
pop
mov
pop
xorl
adc
in
into
pop
sbb
push
xchg
fs
adc
cmp
xor
push
add
test
std
xor
xchg
lret
inc
xchg
lret
xchg
sbb
mov
andb
and
mov
jmp
mov
xchg
jmp
xor
push
jnp
es
in
sbb
decb
or
or
cmpsb
lcall
movsl
aad
loope
jg
test
insl
lahf
stos
or
sbb
fdiv
jl
mov
fildl
iret
lcall
adc
inc
lret
xchg
ss
push
out
test
push
cwtl
xchg
ss
sub
cmp
imul
lcall
and
xor
sbb
ret
mov
in
inc
mov
nop
repnz
cwtl
xchg
or
and
dec
and
aad
push
mov
and
stos
loopne
nop
pop
mov
ficoml
xchg
lret
xchg
jle
adc
test
lcall
and
andl
test
add
and
aaa
lahf
push
adc
imul
mov
mov
cmpsb
push
je
sbb
jmp
repz
stos
shll
xchg
xor
lock
and
outsb
push
jnp
cltd
adc
jl
lock
or
or
shll
pop
rcrb
lahf
mov
pop
mov
push
fistps
lods
aam
mov
outsb
xor
mov
sarl
rorb
sbb
cwtl
xchg
mov
xor
pushf
xchg
xchg
dec
xchg
cltd
mov
inc
jbe
pushf
jno
mov
mov
add
cld
adc
or
xchg
aad
and
fsubs
cmp
test
pop
and
xorl
xlat
mov
sbb
jecxz
mov
test
add
sbb
xor
shlb
xchg
test
jno
push
push
or
sub
fs
daa
fucom
adc
nop
mov
test
and
sub
mov
sar
jbe
xchg
stos
cs
jb
or
mov
dec
mov
rol
cmp
mov
or
ss
ds
pop
cmc
adc
mov
iret
inc
jge
push
nop
pop
stos
pop
or
dec
or
xor
movsl
and
in
xchg
pusha
wbinvd
xor
movsb
test
jg
jg
jecxz
sahf
pop
mov
mov
xchg
and
pop
sahf
jb
and
sbb
xor
sub
mov
add
sub
das
xor
inc
dec
xchg
or
xchg
insb
es
and
dec
and
cld
je
mov
sbb
test
pushf
mov
adc
cmp
ret
lahf
sbb
imul
mov
sbb
or
sbb
mov
mov
jle
sub
adc
pop
or
xchg
lods
cld
adc
jmp
pop
sub
andb
mov
in
mov
xchg
push
adc
test
add
push
mov
adc
dec
xchg
sub
mov
sub
in
mov
push
mov
or
pop
adc
push
scas
mov
stos
push
popa
std
cmp
out
lea
lahf
loopne
dec
jb
push
xor
out
aam
or
fwait
and
nop
movsl
pop
dec
xchg
cmc
mov
lods
aad
jb
daa
and
pop
mov
xchg
xor
lret
es
fs
fwait
inc
dec
inc
or
int
adcb
mov
popl
outsb
daa
jmp
and
jp
test
addl
adc
cwtl
xchg
mov
fdivrs
insl
mov
notl
movsb
xchg
jo
xchg
test
mov
sbb
xchg
mov
jmp
adc
ret
pop
xchg
sub
mov
js
xchg
daa
icebp
cwtl
cmpsb
sbb
sbb
and
push
push
mov
mov
mov
sbb
sbb
aam
movsb
xchg
adc
xchg
push
lahf
xlat
cmpsl
sbb
add
loop
icebp
scas
push
psubusb
test
mov
scas
add
pop
test
mov
or
or
lcall
push
or
mov
xchg
xchg
in
andl
mov
add
daa
pop
lahf
loope
mov
sbb
rolb
lcall
pop
mov
xchg
or
mov
fwait
pop
fidivrs
fbld
jae
cwtl
cs
fs
es
mov
xchg
in
sub
test
stc
xor
and
jmp
in
mov
mov
int3
stc
mov
sub
mov
test
subl
sbb
sub
mov
sub
jle
xchg
xchg
xchg
or
jg
jno
js
je
or
es
or
fidivs
and
pop
mov
or
xchg
xchg
xchg
shll
add
inc
add
out
cmpsb
imul
push
and
sbb
lods
hlt
into
xchg
or
fwait
test
xor
lcall
pop
std
xchg
mov
lahf
add
rolb
sbb
lret
js
in
lods
and
lds
shrb
mov
stos
adc
xor
or
inc
mov
int
dec
idiv
push
pop
jo
stos
adc
inc
cmpsb
stos
pop
adc
mov
jle
fwait
psubsw
rorl
xchg
lods
and
das
sbb
xchg
adc
pop
mov
cmpsl
adc
daa
add
mov
lock
daa
and
xchg
xchg
daa
jae
int
xchg
xor
push
xchg
sbb
jg
rcl
fwait
and
xor
test
pop
rcr
sahf
and
or
test
pop
sbb
sahf
mov
pop
sbb
jle
stos
lcall
out
pop
cwtl
and
sbb
xor
or
push
mov
xchg
push
push
push
movsb
sub
or
dec
outsl
push
adc
mov
push
std
sub
js
and
xchg
pop
mov
xchg
or
sub
sub
xchg
push
fwait
lret
movsl
sub
mov
out
xor
mov
stos
xor
push
adc
scas
mov
mov
addr16
and
xor
js
jno
movsl
sub
repz
stos
push
and
sbb
fcoms
jns
mov
or
sbb
pop
mov
cwtl
xchg
adc
dec
ljmp
mov
and
movsl
mov
mov
jb
mov
test
inc
mov
push
adc
jl
stos
movsl
cwtl
mov
push
mov
adc
push
out
push
lock
jg
rcrl
sbb
and
adcl
xor
scas
lods
adc
pop
or
lcall
add
sbb
pop
mov
jmp
pop
sbb
mov
imul
xlat
movsb
mov
mov
sub
out
dec
xchg
cmp
int3
mov
adc
pushf
scas
call
or
lcall
ds
adc
cwtl
out
mov
mov
adc
adc
int3
cmp
aad
sbb
cmpsl
or
and
negl
xchg
cmpsb
std
mov
rep
sbb
lahf
push
scas
bound
cwtl
cmp
add
mov
sbb
push
sub
push
or
mov
stc
lods
lret
jae
and
jbe
hlt
xchg
xchg
rclb
cmpsl
insb
xchg
dec
test
adc
xchg
out
sub
cwtl
sbb
and
or
mov
xlat
fwait
sbb
xchg
mov
mov
movsl
dec
add
xor
adc
sahf
daa
and
jecxz
mov
call
aam
adc
call
imul
dec
scas
mov
les
aam
and
mov
xchg
fnstcw
sub
lcall
int
gs
or
adc
sbb
push
adc
pop
push
pop
adc
iret
or
leave
adc
clc
cmp
out
push
jge
pop
lods
sub
outsl
frstor
cmpsl
sbb
xchg
stos
mov
insl
insb
into
xchg
or
xchg
xchg
cmpsl
sbb
mov
mov
aad
add
lock
adc
xor
xchg
xor
iretw
pop
and
scas
movsl
cltd
stos
xor
mov
xchg
sbb
xchg
bound
push
lahf
pop
scas
mov
movsl
cmpsb
mov
fcomps
push
fidivrs
test
mov
nop
cwtl
test
out
ret
fwait
pop
mov
xchg
or
dec
lahf
aas
filds
adc
call
bts
scas
cmp
adc
aas
mov
pop
xchg
pop
loop
and
cmc
xchg
pop
add
fwait
in
loopne
cmpsb
into
mov
lret
xchg
sarb
add
test
adc
xchg
sub
pop
jle
movswl
mov
or
xchg
lret
lcall
sub
pushf
cwtl
divl
into
mov
or
addr16
punpckhwd
push
adc
cmpsb
and
stos
pop
jb
stos
addr16
xor
or
pop
mov
add
pop
jecxz
into
pop
stos
sub
or
xchg
or
inc
popf
push
testl
ret
cmpsb
xchg
or
and
inc
push
xor
and
xchg
pop
dec
mov
outsb
mov
mov
adc
or
jae
cwtl
adc
adc
xchg
sub
js
xchg
xchg
xlat
test
add
lahf
or
push
xchg
aad
xchg
jne
xlat
fimuls
andb
int3
in
sub
mov
subb
lea
and
out
fwait
lcall
imul
in
inc
clc
sbb
sub
cmpsl
stos
sbb
lahf
movsl
fwait
mov
sub
cmpb
push
and
daa
adc
pop
sbbb
outsl
test
daa
xchg
sbb
push
sub
mov
adc
stos
fisubrl
push
loope
rep
fdivs
xchg
adc
cs
and
xchg
pop
mov
movsb
cltd
sbb
mov
imul
sbb
cmpsl
movsb
test
fisttps
sub
sub
lods
stos
loop
js
pop
and
push
pop
sbb
and
andl
and
jmp
mov
mov
cmp
xchg
cmpsb
addr16
adc
xchg
fisubl
jno
sarl
and
xchg
mov
les
add
cltd
add
sub
lcall
fstpl
test
jmp
clc
xchg
and
sbb
incb
pop
pushf
inc
xchg
cmpsl
into
mov
cwtl
jmp
in
loop
sarl
int
or
test
push
test
adc
mov
mov
out
sub
out
cmp
std
and
push
xchg
hlt
mov
mov
or
stos
or
or
pop
mov
and
xlat
sbb
pop
call
jmp
test
xchg
pop
jle
xor
and
push
xchg
je
fwait
and
xchg
jbe
inc
mov
xchg
in
sarb
or
out
jecxz
sbb
and
insb
and
mov
xchg
pop
push
jp
mov
mov
xchg
lahf
sub
test
nop
adc
push
scas
popf
adc
dec
sbb
loope
addr16
mov
pop
pop
sub
mov
or
mov
mov
cltd
or
xor
cld
mov
movsb
rorb
mull
mov
mov
push
mov
mov
mov
mov
mov
in
lret
test
cld
test
inc
test
jbe
and
mov
lock
shr
xor
mov
js
in
std
jl
addl
inc
call
mov
jae
mov
cmpsb
subb
xchg
fildll
inc
sub
jg
xchg
fwait
xor
scas
into
and
xor
jnp
xchg
xchg
xchg
insb
lods
xchg
mov
mov
into
mov
xchg
pushf
sbb
sbb
and
and
movsb
out
mov
xchg
xchg
je
loop
sarl
lods
mov
adc
or
cmc
ret
adc
xchg
lahf
and
fdivr
pop
mov
sub
jae
pop
jno
push
into
aad
sub
shl
es
dec
movsl
or
mov
scas
sbb
mov
into
repz
cmpsl
rep
mov
movsb
adc
cli
push
call
lcall
paddd
or
xchg
or
cmp
in
adc
lcall
and
daa
mov
mov
xchg
movsb
sub
gs
je
test
mov
cmpsl
sbb
and
stos
mov
xchg
pusha
adc
or
or
xchg
into
lahf
test
xchg
es
add
xchg
xor
xchg
in
cmpsl
and
fcompl
mov
xchg
daa
addr16
in
loopne
and
sub
mov
pop
mov
ljmp
bound
lahf
or
pop
test
jae
es
sub
rorb
adc
sub
cmpsb
mov
lea
sarl
adc
bswap
lcall
in
push
dec
icebp
add
cmpsl
mov
test
jle
push
xchg
cwtl
adc
mov
test
pop
or
adc
jno
xor
aas
sbb
xchg
adc
ret
xchg
adc
fbld
stos
leave
dec
repnz
sbb
test
or
cmp
dec
adc
lds
mov
dec
daa
xchg
adc
in
push
or
push
mov
push
sub
test
sub
popa
mov
daa
rorb
cwtl
nop
es
adc
xchg
adc
jge
sub
fiadds
sbb
jmp
outsb
xor
adc
xor
push
mov
xchg
or
sahf
rcrb
jecxz
xor
rcrb
out
cmp
push
cmp
call
mov
or
adc
mov
hlt
jmp
adc
cmpsl
dec
stos
cmovge
or
inc
pandn
pop
mov
cmpsl
loope
push
sub
cmpsl
xchg
and
sbb
mov
sbb
clc
pop
xor
mov
add
sbb
sbb
or
or
xchg
mov
xchg
jmp
mov
xchg
mov
outsb
iret
dec
push
movsb
pop
mov
jae
stos
or
scas
jmp
sbb
gs
ret
add
lcall
int3
adc
or
xor
mov
mov
sbb
iret
aad
and
clc
add
test
enter
test
lret
in
mov
fwait
imul
fnstcw
ret
fsts
mov
push
pop
sub
xchg
jg
push
sub
ss
adc
pop
xor
add
mov
lret
xchg
pusha
fstpl
mov
add
jno
mov
push
movsl
pop
lahf
mov
cmp
xchg
stos
push
aad
scas
outsl
and
nop
fisttps
ljmp
push
xchg
mov
in
test
mov
or
scas
mov
js
stos
adc
hlt
leave
mov
xchg
into
movsb
sbb
cmpsl
adcb
xchg
cmpsb
arpl
rorb
fs
add
pop
int
loop
adc
xchg
push
adc
jbe,pt
xchg
mov
popa
movsl
xchg
lahf
xchg
adc
adc
mov
test
xchg
inc
in
inc
jo
or
movsl
fisubl
jo
push
add
jecxz
fildll
stos
push
adc
rolb
pop
fs
daa
mov
out
je
test
or
pop
mov
push
mov
or
jmp
out
push
daa
cmpsl
adc
in
sub
and
jmp
mov
cmc
xchg
imul
cmpsb
or
mov
out
mov
das
or
pop
xchg
sbb
mov
cltd
xchg
sub
ds
add
fbstp
pop
pop
out
clc
sub
inc
add
mov
xchg
popl
and
jae
sub
aas
cmpsb
lahf
nop
lcall
pop
call
mov
and
outsl
mov
popf
pushl
xchg
xchg
nop
enter
add
xchg
cwtl
lret
push
int3
iret
lcall
jno
sbb
xchg
and
idivb
imul
sub
pop
or
adc
clc
sahf
and
and
movsl
sub
outsb
xchg
mov
in
pop
cwtl
out
and
xchg
je
sbb
xchg
pop
cmp
pusha
dec
es
mov
mull
adc
cltd
xchg
movsl
movsb
lcall
and
cmpsl
adc
nop
pushf
cltd
dec
clc
cmpsl
sub
or
mov
pop
nop
and
push
cltd
lahf
sub
clc
fistl
lahf
out
sub
movsl
adc
xchg
pop
lcall
add
cmp
inc
xor
pop
jb
cmpsl
dec
es
imull
push
jae
test
jb
and
xchg
negl
pop
xor
mov
and
dec
lfs
and
cltd
jne
leave
push
scas
mov
cwtl
and
xchg
cmpsb
sub
cld
sbb
pop
in
push
adc
aam
out
cmp
out
push
sub
test
std
xchg
sub
into
xchg
and
adc
mov
mov
repz
test
addb
js
ljmp
mov
push
xchg
xchg
jo
mov
mov
jle
xchg
in
sub
sub
xor
pusha
in
xor
test
or
inc
sbb
adc
push
and
pushf
mov
xchg
adc
xchg
out
movsl
and
mov
daa
cmp
jnp
xchg
xchg
loop
adc
jecxz
pop
xchg
repnz
sub
cs
pushf
cltd
jp
sub
xor
push
push
cmp
jae
jo
cmpsl
adc
mov
and
mov
push
dec
sub
adc
and
fwait
scas
out
xchg
adc
lods
mov
loop
stos
and
mov
mov
pop
xchg
dec
in
daa
or
stos
es
lds
sub
in
movsl
xlat
testl
xchg
add
stos
notl
dec
push
xlat
ss
clc
sbb
xchg
in
sub
mov
fst
out
push
adc
cmpsl
sbb
int3
pop
stos
test
daa
or
pop
xchg
out
sbb
adc
stos
dec
popl
inc
push
aam
adc
or
imul
pop
sub
out
xchg
pop
test
jae
mov
ljmp
push
test
xchg
test
int3
adcb
adc
sbb
xchg
iret
stos
cwtl
add
ss
enter
rolb
icebp
jg
cmpsl
sub
cmp
xchg
mov
pop
and
xchg
or
sarb
pxor
loopne
js
sub
jle
mov
jle
pop
sbb
sbb
and
mov
xchg
mov
inc
mov
xchg
lcall
mov
xchg
push
adc
aam
xchg
xchg
js
jno
cmpsl
xor
or
push
outsl
xchg
add
and
or
sbb
or
pop
dec
fisubs
lea
outsl
aam
loope
push
xchg
xchg
push
aad
lcall
sub
jge
xchg
mov
lock
and
ss
adcb
cmp
lahf
js
mov
mov
cwtl
xchg
int3
bound
xchg
mov
sub
mov
lcall
addl
xchg
jbe
and
xchg
test
adc
ljmp
sub
mov
roll
sbb
and
loop
and
adc
sbb
mov
mov
jecxz
inc
lahf
lock
push
mov
cmpsl
lock
cmc
push
es
ds
mov
ja
push
sbb
fwait
mov
scas
cmp
xchg
sar
mov
sub
notl
xor
or
stos
jp
xchg
in
div
icebp
outsb
sub
sub
mov
lahf
faddl
jg
adc
mov
sub
test
pop
mov
and
insl
setne
nop
mov
push
jno
pop
cmpsl
dec
jnp
or
cmp
ljmp
in
pushf
sbb
je
xchg
xchg
xor
jb
adc
test
cmpsl
stos
test
daa
or
inc
mov
scas
popf
jae
sub
jae
xor
ss
jbe
pop
xchg
or
sahf
bound
jl
mov
adc
movsb
out
sub
xchg
cwtl
and
stos
jo
xchg
and
mov
mov
sub
or
xchg
std
rolb
out
inc
cmpsb
sbb
xchg
fisttps
cmp
or
xchg
pop
cmp
mov
icebp
jae
or
mov
stos
inc
fcoms
les
push
mull
outsb
sbb
xor
rclb
xor
je
jb
and
mov
jle
adc
je
repnz
xchg
stc
adc
push
movsb
xor
mov
stos
inc
mov
adc
sub
adc
lcall
xchg
adc
stos
mov
adc
aas
adc
fwait
adc
ret
and
xchg
imul
mov
in
dec
subb
mov
or
cwtl
or
unpckhps
daa
pop
mov
sbb
dec
popf
cmp
adc
cmp
cld
cmpsb
movsl
cwtl
mov
adc
and
call
pop
ss
mov
sub
sbb
addr16
and
ss
push
adc
add
cmp
adc
mov
adc
xchg
stos
cmpsb
xchg
scas
pop
adc
lahf
daa
scas
push
push
push
mov
or
sti
daa
xchg
repz
mov
adc
push
xchg
ljmp
and
mov
in
mov
mov
xchg
sbb
lods
adc
unpcklps
iret
push
and
lds
sbb
stos
stc
mov
cwtl
jbe
xchg
xlat
ljmp
xchg
mov
xchg
ret
cmp
mov
notl
aam
jo
and
pop
test
dec
mov
jmp
test
mov
add
xor
stos
shrb
sbb
outsl
mov
sub
ljmp
and
sub
dec
sub
aad
mov
pop
adc
xchg
adc
aas
addl
mov
mov
mov
xchg
fwait
test
out
and
cltd
and
pop
pop
or
mov
jg
stos
fistpl
in
test
mov
sbb
xlat
xchg
lea
movsb
je
data16
and
mov
fld
sti
fwait
rorl
and
cmp
sub
pop
stos
xorb
mov
negl
fwait
movsb
test
loope
lahf
xchg
loope
sahf
pop
mov
or
pop
sub
mov
or
mov
fwait
je
stos
stos
xlat
mov
adc
xchg
insl
mov
xor
or
cwtl
xchg
jg
aad
fwait
iret
cli
sbb
out
or
stos
dec
lcall
xchg
test
xchg
xchg
jb
or
ljmp
mov
cmc
xchg
lahf
movsl
cmp
or
adc
fwait
and
adc
or
lcall
xchg
sarb
jae
lock
xchg
jg
in
sub
adc
mov
test
jg
adc
xor
jbe
cmp
fldenv
cld
iret
push
test
jno
and
cmpsb
cli
cmp
test
movsl
subb
push
adc
sahf
and
push
push
in
or
leave
out
sbb
sub
sbb
jnp
dec
mov
adc
xchg
sbb
mov
outsb
mov
sbb
xor
or
lcall
data16
mov
jo
adc
adc
mov
imul
int3
mov
mov
add
mov
aaa
jbe
or
sarl
jae
nop
pop
decb
sbb
fimuls
lret
cltd
sbb
test
xchg
test
sub
and
or
rolb
mov
stos
mov
push
jb
sub
icebp
dec
or
push
je
and
fdivl
addr16
nop
sub
lcall
sbb
icebp
iret
adc
getsec
cwtl
test
adc
data16
mov
mov
pushf
mov
dec
aas
mov
pop
pmaxub
sub
xchg
daa
sub
ret
xchg
lahf
push
fdivr
or
nop
mov
iret
and
scas
push
and
inc
adc
push
mov
cmpsb
or
cmpsl
pop
fdivp
xchg
ljmp
js
mov
in
add
push
cmp
adc
adc
or
outsb
mov
or
inc
jg
test
test
hlt
pop
and
lcall
loope
lret
or
xchg
adc
sbb
fdivrl
cwtl
faddl
mov
fs
out
adc
jmp
imul
cmpsb
test
xchg
push
test
xchg
sub
mov
popf
mov
xchg
add
xor
xor
movsb
xlat
daa
es
pop
sub
xchg
arpl
add
or
or
ret
mov
cwtl
mov
movb
out
movsb
sbb
xchg
movsl
and
adc
xchg
cltd
movntps
adc
mov
push
movsl
stos
dec
sbb
mov
adc
pop
cs
or
mov
std
call
les
xchg
sbb
sub
push
leave
jle
xchg
fwait
repz
mov
or
xchg
and
adc
je
sbb
add
or
sbb
je
cmpsb
test
movsl
imul
xchg
aas
movsl
sub
jmp
cltd
daa
mov
xchg
test
mov
xchg
pushf
cwtl
decl
es
xchg
pushf
xchg
xor
lret
lcall
pop
loop
dec
xchg
test
or
pusha
lahf
lret
adc
sbb
mov
and
mov
mov
test
jp
jbe
lcall
lea
jge
pop
pop
outsl
pop
sbb
xchg
pop
in
mov
addr16
xor
arpl
jno
test
ficomps
pop
mov
test
dec
mov
push
inc
clc
loop
lcall
xchg
sbb
adc
and
repnz
sub
in
or
scas
insb
pop
ffree
xchg
and
movsl
shll
pusha
push
mov
xchg
call
adc
dec
in
mov
lcall
sub
or
ljmp
fldenv
arpl
pushf
addb
lret
mov
dec
fildll
into
push
and
adc
xchg
xchg
and
mov
and
cmp
cmpsb
movsb
and
fs
xor
cmpsl
sub
push
adc
fcomps
test
nop
xchg
and
outsl
rclb
adc
and
in
xor
test
lock
mov
xchg
sbb
scas
push
or
adc
fisubrs
dec
popf
out
xchg
and
movsl
xchg
add
test
mov
dec
jge
mov
and
xchg
sub
mov
pusha
in
pop
dec
cwtl
pop
mov
jae
mov
insb
orl
outsl
sub
xor
jecxz
dec
jae
stos
fwait
adc
sahf
lock
or
out
in
push
xor
sbb
xchg
pushf
add
enter
int
mov
xchg
sub
or
stos
pop
and
subl
adcb
adcb
mov
add
rcrb
push
xlat
xchg
loop
adc
movsb
inc
jecxz
nop
outsl
cmc
movsl
sub
sub
mov
mov
adc
pop
mov
iret
outsl
movsl
into
mov
cmpsb
dec
lcall
movsb
xchg
sahf
das
and
data16
sub
fiadds
loop
mov
out
and
shrl
sbb
push
xchg
push
xchg
stos
aam
mov
ror
xor
movsb
fsts
movsl
xchg
mov
push
adc
daa
xchg
fwait
fwait
jae
movsl
xor
lods
fisubs
test
ret
imulb
shll
mov
je
add
rcr
jp
xchg
pop
cmp
test
insb
in
lds
or
in
aaa
push
jge
adc
stos
fsubr
fwait
adc
iret
imul
sub
jb
adc
adc
xchg
sbb
mov
sbb
mov
pop
cwtl
xchg
xor
push
and
movsl
rcrb
mov
jle
int
and
adc
jmp
roll
mov
movsb
push
lahf
in
lods
hlt
mov
in
leave
fmul
loope
andl
mov
repnz
das
pop
test
mov
xchg
pop
pop
cmp
and
lcall
push
mov
mov
push
rorb
xor
je
int
pop
pop
xchg
sahf
push
push
outsb
shlb
cmpsl
daa
add
push
flds
mov
shrd
popa
and
push
xchg
out
or
adc
iret
push
xor
jb
sbb
stos
pop
stos
jbe
stos
fisubrl
fwait
push
or
adc
out
xchg
enter
idiv
jge
movsl
sbb
sub
scas
leave
and
mov
pusha
out
dec
movsb
mov
test
test
insb
or
loope
imul
add
cmpsb
fwait
push
insb
das
xchg
lahf
daa
push
lcall
sbb
movsb
int
es
pushf
xchg
lock
and
lcall
fwait
xor
sub
lods
mov
sbb
and
or
movb
jge
xchg
int
inc
lea
mov
test
pop
outsb
sbb
dec
or
mov
mov
mov
lds
enter
scas
mov
and
jl
pop
xchg
xchg
mov
sub
sub
xchg
cltd
loopne
and
cmc
dec
stos
out
xchg
rcll
lcall
xchg
and
xchg
cmpsb
fiadds
sbb
xchg
pop
iret
test
cltd
fwait
xchg
sar
sub
mov
sub
cs
mov
adc
adc
lcall
mov
and
fwait
out
mov
xchg
pop
into
jmp
mov
xor
xchg
pop
insb
dec
mov
mov
add
jo
adc
or
mov
push
mov
pop
and
xchg
sbb
xchg
add
jnp
stos
cmpsb
pop
or
add
stos
cmpsb
sub
or
je
lahf
adc
xor
imull
hlt
test
xchg
xchg
push
mov
out
mov
int3
fidivl
movsl
sub
fwait
mov
push
es
add
cmpsb
mov
mov
or
mov
out
and
xchg
pop
outsb
fistps
aam
xchg
jae
adc
test
mov
stc
sarb
push
sbb
cmc
daa
adc
pop
popf
or
into
out
and
or
jae
das
cmpsb
mov
test
pop
repnz
cmpsl
pushf
xchg
std
lcall
or
sbb
xchg
mov
lcall
enter
cltd
loop
mov
jmp
call
lahf
in
ficoms
fs
popa
into
call
push
mov
dec
mov
sub
or
sbb
scas
leave
adc
mov
dec
negl
jge
sub
push
adc
pop
pop
nop
push
movb
mov
fisttps
xchg
push
or
jae
pushf
stos
sub
mov
test
xchg
or
dec
xor
or
sub
in
add
dec
jbe
test
lret
jo
or
jge
test
orb
sbb
mov
sub
mov
je
or
xor
in
js
lock
xchg
cmpsb
into
cltd
and
push
sub
outsl
or
nop
jecxz
adc
xchg
fsts
lods
sbb
mov
xchg
and
pop
xchg
movsl
hlt
push
add
xchg
adc
gs
cltd
cld
lods
fiaddl
sbb
jno
sbb
mov
je
fwait
xchg
cmpsb
adc
xchg
ret
sub
or
mov
movsb
push
cmp
stc
lahf
je
and
inc
ljmp
cmpsb
cwtl
movsb
jg
sub
mov
and
xchg
push
outsb
loopne
fistl
mov
xor
popa
int
push
inc
cltd
cmpsl
push
ret
in
lea
aas
scas
cmpsl
lea
stos
fwait
sub
fists
xchg
pop
testb
or
daa
sub
or
mull
cmpsb
lahf
sub
hlt
and
fdivrs
in
push
mov
or
outsl
xchg
xchg
xchg
or
jg
ljmp
mov
sub
or
div
dec
add
scas
in
fwait
and
push
stc
pop
adc
jbe
adc
and
dec
xchg
xchg
dec
stos
test
sub
jno
mov
fimuls
or
adc
xlat
and
or
movsb
cmp
iret
imul
pop
or
out
sbb
pop
xor
pop
xchg
popa
adc
sub
xor
scas
pop
mov
and
mov
scas
dec
ficomps
mov
and
and
and
mov
lahf
setns
fldcw
mov
aad
xchg
mov
mov
xchg
lcall
xchg
jge
xchg
mov
xchg
rolb
scas
sbb
and
xchg
cltd
loopne
dec
mov
shlb
sub
pushf
sbb
or
pop
stos
or
sbb
loopne
mov
mov
imull
adc
stos
shrb
push
push
outsl
lds
sub
sub
mov
into
fistps
fstl
cwtl
scas
fcomps
test
mov
sti
xchg
and
mov
sub
and
cmc
dec
pop
in
sbb
or
mov
mov
and
test
je
sbb
pop
jo
sbb
outsl
inc
xchg
nop
pop
movsb
jg
pop
nop
xchg
pop
je
xchg
mov
xlat
cmc
stc
movsb
in
fmuls
lcall
scas
hlt
sub
orb
adc
adc
and
xchg
fistps
stos
pop
push
cltd
jp
inc
sub
fistps
notl
and
jbe
xchg
dec
call
pushf
and
movsl
movsb
mov
xlat
sub
sahf
pop
std
pop
cs
sub
sub
sti
fwait
xchg
aad
mov
sbb
lret
push
jbe
adc
mov
in
jno
xchg
mov
sub
dec
lock
xchg
stos
jae
xchg
pop
and
xchg
mov
adc
pop
xor
jecxz
mov
mulb
mov
mov
jno
stos
mov
mov
mov
adc
outsl
pusha
and
mov
loopne
pop
xchg
into
or
add
xchg
ds
hlt
mov
sub
adc
or
out
sbb
mov
nop
add
xchg
xor
sbb
mov
jne
push
jecxz
in
lods
cld
pop
xchg
movsl
pop
adc
data16
or
stos
pop
add
cltd
mov
insl
xchg
push
daa
fmuls
movsb
outsb
movsl
jno
mov
adc
adc
bound
fldenv
cmpsb
comiss
adc
pop
adc
imull
and
xchg
mov
fsubs
nop
xor
rorb
push
mov
and
por
xor
daa
int
mov
mov
fsubs
movsl
popa
pop
test
xchg
cwtl
out
pop
xchg
and
lock
xchg
mov
int
ret
adc
and
mov
mov
nop
xor
sti
xchg
cmpsb
movsl
xchg
call
adc
cwtl
sub
mov
iret
jno
mov
xchg
outsb
dec
xor
mov
rorl
cltd
jmp
adc
xchg
aas
int
movsb
adc
iret
gs
dec
adc
cmpb
or
stos
xchg
mov
icebp
mov
sbb
mov
imul
pop
jbe
call
je
sbb
push
sbb
mov
push
test
mov
cltd
adc
dec
das
pop
adc
jmp
pop
mov
sub
clc
mov
and
icebp
sub
or
call
fs
push
xor
push
inc
xchg
sbb
lahf
xor
or
sbb
movsl
popf
ljmp
sti
call
jle
pop
stos
sbb
or
ret
mov
add
adc
xchg
push
stos
and
and
and
in
lahf
xchg
test
mov
stos
inc
notb
or
adc
jbe
test
and
and
push
jle
push
in
stos
mov
adc
mov
lahf
dec
scas
and
adc
jb
or
idiv
xchg
outsl
lahf
cmpsl
mov
leave
lcall
xchg
insl
ss
lods
int3
xchg
add
xchg
sub
les
out
shll
lahf
jp
sub
xor
das
cmp
cltd
rdmsr
xchg
jg
loopne
adc
xchg
pop
sahf
xrelease
loope
jae
and
sbb
pop
into
or
xchg
and
sbb
add
pop
mov
sub
fisubrs
push
clc
rcrb
mov
lcall
pop
jno
aam
stos
lcall
in
add
pop
stc
mov
sbb
xchg
sub
or
xchg
and
sub
and
and
push
jno
adc
into
mov
xchg
mov
mov
sub
and
imull
xchg
inc
xchg
cmpsb
sbb
negl
pop
adc
lea
mov
xchg
xchg
mov
punpcklwd
pusha
inc
loope
pop
or
push
out
es
jle
xchg
fwait
cmpsb
mov
sub
out
sub
fwait
cmp
xchg
push
mov
stc
xchg
ljmp
out
or
xor
and
mov
pop
adc
ret
add
lods
add
or
subb
xchg
int3
sub
lds
xchg
ret
scas
jg
and
outsb
push
popa
mov
imul
out
adc
int3
dec
xchg
int3
or
testb
and
and
test
aad
out
sahf
or
enter
pop
stos
jo
sbb
jno
sub
mov
loope
or
mov
mov
lcall
jno
xchg
stc
pop
dec
out
xchg
add
sub
jle
mov
mov
cmc
test
loop
subl
or
push
incb
stos
cmpsl
xchg
and
js
lret
lahf
xchg
mov
mov
push
cld
and
lahf
insl
mov
mov
or
xor
jl
sub
mov
lcall
xchg
and
out
sub
adc
and
xchg
adc
test
xchg
ljmp
xor
outsl
dec
xchg
mov
fisttpl
cltd
mov
out
icebp
mov
sbb
repz
ficoml
sahf
fwait
or
test
inc
lock
pop
sub
pop
mov
xchg
mov
mov
mov
test
pop
sub
push
pop
and
sub
inc
sub
das
fmull
xor
and
mov
nop
xchg
xchg
sbb
jno
sub
aaa
aam
lods
jo
xchg
stc
in
xchg
pop
test
or
xchg
mov
and
jnp
mov
cltd
sub
mov
add
or
rcrl
or
and
pop
adc
ret
and
pop
xchg
stos
js
iret
cmpsl
and
out
mov
and
mov
cmp
mov
pop
iret
hlt
jne
les
movsl
mov
jmp
xor
pusha
loope
es
inc
jp
rorb
sbb
dec
mov
mov
sbb
mull
push
cmpsb
fwait
bound
sbb
test
fldt
mov
cwtl
ficoms
and
test
lock
mov
pop
stos
jecxz
fists
andb
sub
sub
inc
mov
stc
lcall
sbb
dec
mov
popa
cltd
inc
out
and
add
sub
jae
or
aam
sub
mov
sbb
mov
add
pusha
mov
and
orl
xchg
xor
ficoml
xor
iret
add
pop
pop
sti
mov
pop
add
daa
cwtl
ret
jae
cltd
sub
adc
xchg
xchg
scas
iret
fwait
pminub
jmp
daa
push
fsubrp
sbb
es
lahf
xchg
lahf
loop
push
sub
mov
add
adc
movhps
mov
je
xchg
nop
push
jmp
sbb
xorb
daa
jb
mov
cltd
sahf
mov
aam
adc
xchg
out
mov
xchg
or
inc
xchg
mov
in
sub
xchg
mov
insl
lock
and
test
orb
xor
cmp
sub
movb
and
pop
imul
ja
stos
xchg
fisubs
mov
adc
sub
test
movsl
in
push
mov
xchg
cs
call
in
stc
cmp
mov
xchg
sub
movnti
mov
cmpsl
jns
mov
cltd
adc
jp
cmpsb
lcall
cmp
push
movsl
and
jb
mov
es
sub
jno
or
cmpsl
mov
test
jmp
lcall
sub
sbb
and
or
adcl
mov
adc
test
pop
nop
dec
stos
inc
pusha
xchg
sub
xchg
mov
rclb
lods
and
mov
push
xchg
add
or
push
imul
int3
ds
pusha
adc
aam
adcl
data16
out
push
pop
enter
ret
pop
xor
sub
xchg
daa
lcall
xchg
jae
xor
xchg
or
mov
jecxz
xchg
shl
movsl
adc
mov
add
sub
and
xchg
movsl
jae
adc
mov
scas
addr16
lahf
mov
mov
mov
sub
mov
movsb
xor
xchg
xchg
pop
mov
cltd
out
jo
xchg
into
popa
movsb
sub
mov
xchg
mov
imul
adc
lds
imul
jle
xchg
sub
movsb
stos
fwait
and
push
lahf
mov
mov
dec
push
push
int3
and
sub
and
shrb
cmpsb
clc
stos
xchg
or
and
xlat
pop
xor
and
mov
fistpll
sti
push
out
scas
mov
fiaddl
xchg
mov
pop
jne
mov
sbb
out
lcall
xchg
and
mov
nop
mov
scas
xchg
fimull
daa
pushf
mov
cmpsl
sbb
push
and
arpl
adc
subb
xchg
xor
cwtl
test
lea
movsb
sbb
lcall
xlat
sahf
jae
lods
and
sub
lret
xchg
adc
lcall
sbb
loope
popa
pusha
int3
scas
lea
xor
xchg
fwait
movsb
or
in
xchg
lcall
imul
adc
mov
or
adc
je
push
push
stos
cmpsl
std
push
adc
mov
mov
imul
sbbb
andb
jae
sub
jno
imul
daa
adc
ljmp
hlt
sbb
loope
xchg
mov
jl
or
or
shll
pop
or
sbb
adc
xchg
cmpsl
in
out
mov
out
push
je
sbb
pop
fwait
sub
sbb
xchg
xchg
and
loopne
pop
xor
push
or
es
popf
test
mov
xchg
cwtl
mov
xchg
mov
lcall
cmpsb
cmc
xchg
idivl
jmp
sbb
or
push
and
stos
movb
dec
inc
lcall
adc
push
xchg
push
jg
and
scas
sbb
adc
pusha
mov
pop
push
imul
aas
push
popf
pop
ret
and
sub
lahf
sbb
and
push
out
jns
cmpsl
xchg
sbb
or
pop
push
ss
in
jns
cmp
scas
addr16
int
mov
leave
mov
sbb
mov
ljmp
xchg
xchg
into
add
xchg
or
sub
adc
pop
and
jo
or
push
addr16
andps
cmpsl
out
xchg
or
test
adc
movsl
js
mov
cmovnp
dec
push
jbe
sub
adc
pop
das
sbb
sbb
test
test
adc
or
in
xchg
notl
stos
test
jecxz
mov
imul
xchg
test
sbb
popl
inc
call
lahf
adc
pop
cltd
sub
rcll
adc
xchg
dec
sbb
andb
adc
or
mov
sbb
push
adc
es
sub
adcl
xor
and
frstor
arpl
daa
xchg
or
and
lcall
adcb
xchg
mov
mov
or
adc
pop
or
pop
fwait
outsb
pop
mov
test
mov
lahf
xchg
fbld
xchg
jmp
jno
pop
sbb
mov
push
or
push
pop
icebp
cwtl
sbb
iret
mov
testb
pop
jbe
or
xchg
ret
xchg
mov
inc
sub
and
xchg
sub
pop
daa
in
pop
mov
mull
mov
cmp
xor
xchg
ljmp
xchg
sbb
shrb
xor
je
adc
lods
sub
out
xor
daa
xchg
das
pop
cltd
and
test
test
pop
cmc
xchg
sub
pop
popa
test
ret
lahf
mov
jp
cld
xor
add
xchg
arpl
and
adc
mov
arpl
fnsave
out
adc
fcompl
out
lcall
lret
std
data16
into
cmp
mov
sub
add
pop
test
xchg
loop
fstpt
cmc
or
imul
jno
sub
and
and
sbb
adc
seto
stos
adc
mov
cmpsl
jb
es
mov
xor
adc
sbb
movsl
and
ret
sub
or
adc
adc
stos
pop
mov
inc
xchg
into
adc
xchg
lret
dec
lcall
mov
add
cli
pop
adc
shlb
sbb
sbb
sbb
aaa
sub
xlat
jp
pop
or
and
or
fdivrs
ret
xchg
nop
aas
push
mov
and
push
inc
neg
int3
push
mov
jo
stos
jno
mov
mov
inc
nop
cmc
adc
push
sbb
jae
sbb
jge
lds
sbb
outsl
aaa
cmp
lahf
xchg
inc
call
adc
mov
adc
adc
and
and
mov
cmpsb
nop
fcompl
mov
test
pop
xchg
fwait
pop
sbb
adc
imul
cli
sbb
xchg
cld
lcall
ds
cmpsb
sub
pushf
lahf
xor
xchg
and
mov
cmpsl
xchg
test
imul
loope
adc
iret
pop
nop
ss
add
xchg
adc
dec
in
test
mov
js
out
mov
fwait
daa
out
pop
mov
xchg
and
add
or
xchg
stos
sub
nop
lcall
and
xchg
daa
pop
fdiv
dec
xchg
test
and
test
shlb
sub
mov
cwtl
and
out
mov
mov
scas
and
stos
mov
ljmp
in
out
imul
xchg
and
sbb
xchg
adc
stos
xor
in
testb
hlt
cwtl
xchg
lcall
fwait
mov
sub
sub
in
mov
data16
mov
shrb
jg
xchg
sub
jp
std
popf
mov
jb
xchg
push
mov
repnz
iret
xchg
xchg
xchg
nop
stos
mov
repz
sbb
inc
cmpl
out
pop
out
lret
test
or
inc
sub
xchg
or
lea
jbe
in
rolb
xchg
xchg
sbb
inc
jg
stos
sbb
add
popf
and
cwtl
std
or
adcb
adc
cmc
jnp
adc
sub
or
xchg
lcall
jecxz
test
test
in
adcl
xchg
lahf
pop
jmp
sub
sub
mov
into
mov
lret
and
call
int3
push
stc
push
nop
aas
rolb
repz
xchg
xchg
sti
mov
inc
insl
shrb
arpl
ficomps
stos
xlat
test
mov
sub
sbb
pop
inc
je
inc
adc
pop
dec
fwait
in
je
pop
jno
xchg
les
xchg
daa
and
jae
cmpsb
fwait
icebp
bound
icebp
insl
sub
cwtl
and
lcall
test
xchg
and
and
je
xchg
xor
cmpsl
xor
xor
mov
push
mov
and
out
sub
sahf
aam
adc
lahf
adc
xchg
sub
and
adc
jae
and
and
daa
sbb
jge
cs
sub
xchg
bound
pop
cmpsb
and
cmpsl
xchg
stc
adc
xchg
dec
sti
sub
mov
jge
inc
ud2
xchg
jmp
xchg
lahf
adc
inc
adc
dec
iret
cltd
and
or
xchg
cltd
xchg
cmpsb
cs
xchg
mov
inc
xor
out
int3
lahf
sub
and
sub
or
jbe
movsb
testl
xchg
xchg
dec
iret
je
push
fisubl
das
lds
xchg
daa
push
rcr
lcall
arpl
gs
aaa
mov
imul
or
test
adc
pusha
mov
movsl
gs
std
fwait
add
jbe
mov
xchg
mov
sbb
scas
mov
push
daa
stc
mov
sbb
lock
dec
paddd
push
imul
xchg
xchg
sbb
out
pop
and
mul
in
mov
lods
xchg
outsl
adc
mov
mov
xchg
xchg
sub
dec
cmpsb
adc
movsl
and
cmpsl
inc
aas
push
sub
lret
mov
jno
movsb
and
mov
xchg
stos
out
test
and
js
ret
sbb
and
xchg
mov
dec
pop
xchg
pop
fwait
mov
sub
adc
pop
and
mov
sbb
and
mov
pop
and
adc
and
or
fidivs
cmpsb
and
sti
and
adc
cmc
and
cltd
xchg
int3
rorl
or
xchg
and
fdivrp
sbb
xchg
mov
jb
mov
mov
les
xor
incl
daa
outsl
fstpl
mov
mov
mov
or
adc
or
mov
xchg
jae
add
test
leave
mov
int
es
pop
pop
jne
and
pop
mov
cmp
jecxz
xor
xchg
adc
movsl
les
scas
jle
or
cmp
mov
adc
cmpsl
fs
hlt
xchg
mov
outsl
adc
mov
setnp
movsb
xchg
xchg
pushf
stos
push
add
jae
adc
andl
inc
nop
out
xchg
mov
scas
mov
movsb
loopne
and
pop
sub
push
data16
jle
mov
lret
out
insb
stos
sub
xchg
and
test
push
dec
and
xor
lret
mov
hlt
sbb
inc
in
loopne
and
outsb
jg
jg
mov
xchg
and
testl
test
outsb
xchg
xchg
mov
sub
lahf
xchg
test
xchg
xchg
xchg
sub
nop
mov
push
je
xor
cmp
out
and
ret
in
cmpsl
sbb
xchg
push
lret
and
adc
das
fisttpll
xchg
mov
xchg
sbb
sub
clc
lahf
pop
shrb
jecxz
cmp
sbb
dec
repz
mov
xor
xchg
je
lcall
adc
adc
jo
xchg
mov
test
or
lret
es
or
sub
sbb
cli
push
fmull
adc
sub
jb
push
or
xchg
subb
insb
andl
push
mov
mov
push
sbb
loop
cld
in
sub
xchg
pop
push
adc
int
and
jo
cmpsb
mov
movsb
or
jb
push
and
jno
jp
stc
lret
push
mov
mov
mov
int
into
or
out
test
cwtl
xor
mov
adc
mov
arpl
movsb
push
or
xor
pop
loopne
test
push
mov
or
sbb
or
icebp
pop
movntps
scas
mov
movsl
mov
adc
sbb
adc
sbb
test
jne
stos
movsb
mov
in
push
lea
mov
in
xchg
je
adc
adc
daa
cmpsl
adc
mov
cmp
mov
movsl
xor
lcall
cmpsl
cmp
es
sbb
cmc
nop
xchg
test
cld
xchg
and
stc
test
sbb
cld
xchg
add
test
or
mov
pushf
and
les
repz
mov
cmp
sarl
fisttpll
xchg
pop
inc
out
sub
mov
jle
popf
push
and
push
icebp
sbb
stos
and
je
nop
or
mov
mov
add
jb
and
inc
adc
push
out
clc
or
lock
jne
xlat
xchg
mov
xchg
pop
push
mov
das
mov
push
movsl
mov
xchg
sub
sbb
lds
mov
ror
dec
stos
xchg
jbe
and
shll
stc
jnp
repnz
pop
sbb
xchg
fsubs
mov
and
popa
cmovg
pop
xchg
fcoms
in
test
sbb
lcall
mov
pop
adc
sbb
into
push
pushf
and
mov
clc
lahf
fdivrp
add
jmp
add
adc
cmpsl
std
adc
push
sbb
sbb
xchg
sbb
lcall
icebp
daa
xchg
and
xchg
cmpsl
sub
xchg
or
insl
push
mov
xor
add
sbb
clc
jg
mov
es
mov
sbb
mov
and
stos
std
and
push
inc
pop
and
imul
and
and
fldl
xor
push
mov
sub
mov
fsts
sbb
sbb
mov
sub
cwtl
mov
mov
mov
push
sahf
push
adc
shll
lret
jno
adc
and
jmp
sub
pop
mov
push
and
mov
jbe
mov
movsb
movsb
lcall
pushf
cmp
xchg
adc
sub
rol
fwait
lahf
mov
xchg
pop
xor
scas
enter
stc
cmpsb
add
jbe
xchg
stos
lcall
push
ret
lahf
setne
push
test
cmp
and
daa
xchg
lcall
and
mov
mov
ret
cltd
push
sbb
mov
mov
stc
push
movlps
mov
mov
je
jb
and
pusha
cwtl
cltd
mov
lahf
in
sub
pop
xchg
imul
int
inc
daa
sub
or
jp
lcall
sahf
lods
adc
hlt
fdivr
lcall
cmpsb
push
fwait
test
xchg
sub
jecxz
pop
cmc
pop
cmpsb
xor
js
mov
mov
stos
pop
clc
jae
xchg
jo
or
jb
and
xor
push
and
stos
js
hlt
fbld
inc
scas
inc
and
sbb
stos
out
pop
and
in
adc
aad
mov
and
mov
lcall
pushf
sbb
xchg
sub
rcrb
and
xchg
sbb
sub
mov
std
mov
jge
pop
and
or
shr
mov
xchg
das
sahf
or
adc
mov
lahf
daa
daa
adc
fistpll
idiv
popf
idivb
cmpsl
xchg
xchg
jb
out
jbe
and
mov
psubb
out
in
cmpsl
negl
movsl
test
inc
movsb
sub
mov
in
sub
mov
mov
lahf
lods
mov
mull
and
mov
mov
pusha
add
in
js
xchg
jno
sub
xor
sub
outsl
xchg
push
cmpsl
fimuls
push
int
imul
xchg
mov
fwait
cwtl
adc
data16
fists
inc
js
mov
push
into
xchg
sbb
scas
insl
xchg
mov
push
addr16
pop
or
and
daa
xchg
jns
sbb
das
pop
push
imul
jnp
in
mov
fisubrl
sub
mov
mov
mov
adc
je
mov
or
daa
lds
lods
jl
or
and
fwait
adc
sub
push
mov
data16
jge
out
or
mov
and
fstl
add
mov
mov
jg
jge
mov
mov
andl
movups
fdiv
mov
xchg
inc
mov
xchg
pop
aaa
lock
mov
rolb
mov
xchg
lock
cmpsb
sbb
xor
pop
mov
push
mov
mov
insb
faddl
mov
pop
testb
mov
mov
jns
cmpsl
dec
mov
add
mov
lret
es
or
jp
mov
or
adc
movsb
inc
data16
push
xchg
and
lods
lods
or
jbe
mov
cwtl
daa
sbb
xchg
xchg
dec
sbb
jge
lods
addb
repz
inc
mov
sbb
imul
in
mov
outsb
jb
test
lods
scas
adc
xchg
bound
outsl
xchg
cmpsb
sbb
or
and
stos
add
push
or
mov
mov
jbe
nop
in
adc
xor
sbb
xor
mov
and
ret
pop
mov
fcoml
test
mov
daa
ret
out
cmpsl
stos
mov
ficompl
gs
pop
sbb
daa
add
mov
lea
add
stos
js
push
and
and
adc
stc
nop
xchg
adc
test
or
pop
daa
loope
xchg
adc
adc
jle
daa
mov
and
cmpsb
adcl
mov
imul
ret
cmp
test
xchg
mov
sar
xchg
xchg
jne
adc
or
ret
or
pop
test
in
xchg
rcll
adc
pop
add
sbb
std
and
cltd
nop
xchg
sub
sbb
and
xchg
loop
or
adc
call
mov
push
mov
xchg
or
sbb
adc
fnstcw
fwait
hlt
xchg
cltd
lcall
fwait
adc
mov
daa
and
cmpsb
fwait
pop
cltd
xchg
xchg
mov
and
sbb
out
add
xchg
xchg
and
test
mov
mov
jp
jecxz
in
push
into
int
sbb
lods
lahf
outsl
or
cwtl
sbb
lcall
mov
repz
adc
call
add
es
cwtl
sarb
xchg
cmpsl
lcall
adc
pop
cmp
out
mull
adc
sub
test
and
int3
push
pop
nop
xchg
nop
pop
lds
xchg
aam
or
es
bound
jle
lcall
sub
xchg
adcb
lcall
mov
idivb
mov
test
andb
sbb
or
sbb
mov
cmp
sbb
nop
imul
std
xchg
jno
daa
jecxz
or
mov
fistpl
and
mov
sub
jb
xchg
adc
movsl
es
cld
dec
lahf
xchg
and
xchg
and
lcall
sub
arpl
cmp
and
mov
inc
mov
lods
pop
lods
xchg
jne
cltd
sbb
out
xchg
and
xor
mov
ret
loop
jp
mov
pop
outsb
sahf
andl
rorb
xchg
mov
ret
or
sbb
lcall
inc
ljmp
pop
fldz
cmp
mov
lcall
and
push
lcall
adc
jb
test
xchg
test
sub
pop
out
dec
push
sbb
jmp
adc
pop
dec
mov
mov
xchg
into
test
add
stos
add
push
mov
insl
jle
sbb
imul
mov
lock
jl
es
mov
mov
mov
mov
xchg
xchg
scas
push
and
xchg
or
mov
sub
or
mov
movsb
xchg
sbb
mov
or
push
pop
xchg
test
lock
add
test
xor
and
and
push
push
fldcw
stos
adc
mov
pop
sbb
pop
mov
adc
std
pop
jge
adc
sub
and
mov
adc
or
mov
fucom
stos
sbbb
jp
testl
mov
jae
sub
int
or
cmpsl
sbbl
scas
or
mov
pop
push
movsl
mull
xchg
sbb
movsb
lcall
xchg
clc
xor
jb
movsl
sbb
fldl
push
or
sbb
inc
add
sarl
cmp
cmp
lock
mov
xor
jp
and
test
test
sbbl
xchg
xchg
out
mov
fcoml
bound
jmp
es
andnps
lcall
mov
nop
and
adc
mov
sbb
or
xchg
lods
lcall
popf
xchg
ljmp
or
repz
push
pop
pop
insl
test
xor
jecxz
push
clc
in
sbb
in
data16
mov
je
xchg
adc
add
jecxz
inc
stc
xchg
jge
test
cld
pop
inc
stos
repz
movsb
in
movsb
jb
lcall
bound
or
pop
test
mov
notl
rcrb
sub
pop
or
hlt
jo
mov
into
mov
fwait
inc
stos
lret
or
adc
repnz
adc
pop
cmpsb
mov
outsl
out
mov
cmp
xchg
je
sub
outsb
mov
fld
js
xchg
jmp
lods
mov
xor
ja
push
adc
aad
lahf
out
dec
daa
sbb
cld
xchg
sub
mov
sub
aam
cmovge
mov
stos
xchg
sub
cmc
xchg
and
cltd
mov
sbb
aas
repz
pop
dec
das
pop
and
stos
mov
test
fldt
pop
mov
sbb
lock
mov
xchg
and
mov
mull
push
lcall
pop
out
xchg
lahf
popa
dec
ja
nop
mov
lahf
arpl
and
nop
cmp
daa
lret
xchg
xchg
sbb
and
adc
jns
imull
idivl
xor
pop
out
pop
mov
flds
xchg
jmp
or
stc
push
jle
jle
sbb
adc
lahf
lcall
nop
sbb
jle
ficoml
cmpsl
jno
adc
push
cwtl
mov
and
or
pop
aas
add
outsl
or
and
dec
fcmovb
push
push
lret
pop
daa
sub
mov
xchg
aad
pop
xchg
jg
incb
ljmp
aaa
test
adc
fsub
add
stos
test
shrb
dec
pop
push
xor
and
cli
mov
pop
xchg
push
daa
out
sbb
pop
mov
pop
jbe
mov
xchg
mov
and
paddsb
mov
xchg
stos
xchg
or
cmpsb
in
adc
and
cld
or
arpl
movsl
shrb
sbb
and
sub
dec
jl
bsf
fwait
test
sbb
mov
movsl
stos
push
pusha
cmpsl
test
adc
mov
imul
xchg
std
mov
cwtl
fdivr
out
sbb
aaa
xchg
sbb
add
xchg
pop
sub
fwait
movsb
js
js
out
sbb
test
ret
jne
mov
xor
xchg
out
nop
push
stos
sub
icebp
xchg
lea
xor
popl
mov
lcall
sub
add
loop
in
mov
or
sti
mov
sbb
adc
lret
add
mov
jae
xor
imul
cmpsb
and
xchg
out
iret
sub
iret
adc
xor
ss
jge
xchg
js
jae
fwait
rolb
pushf
xchg
xchg
sub
lret
push
pop
or
mov
and
movsl
mov
stc
sub
jne
and
rcr
cmpsl
xchg
and
stos
hlt
lds
ret
or
mov
lahf
dec
sub
and
ficomps
add
adc
xchg
sbb
inc
sbb
and
jmp
cwtl
pop
xchg
mov
push
adc
push
dec
push
mov
or
push
xor
fs
dec
pop
repz
xchg
je
sbb
mov
int3
push
and
dec
cmpsb
subb
nop
and
push
sub
jmp
std
and
push
lcall
ds
or
stos
and
xchg
jae
push
lcall
dec
in
xchg
movsl
scas
sbb
lahf
xchg
push
inc
pop
jae
imul
adc
xchg
movsbl
xchg
bndstx
or
repz
push
and
sbb
notl
jae
and
jmp
js
sbb
movsl
xchg
lea
cmp
subl
pop
scas
ds
stos
popf
and
or
or
sbb
jg
adc
mov
xchg
or
add
jne
scas
sete
cmpsb
mov
cltd
leave
mov
and
fwait
xchg
cmc
mov
push
aad
cmp
int3
clc
lods
sub
inc
mov
addl
xor
adc
xchg
sub
xchg
xor
jg
rcrb
adc
inc
ds
cmp
xchg
xor
xchg
xchg
adc
adc
mov
mov
adc
psubusw
idivb
mov
mov
lods
push
cmp
and
test
mov
loop
add
adc
push
imul
mov
sub
xchg
adc
mov
stc
cltd
xor
mov
mov
xchg
mov
cld
mov
mov
mov
push
test
pop
mov
les
js
and
adc
adc
mov
adc
mov
cwtl
inc
sub
fwait
push
mov
std
xor
or
cmp
cmpb
cmpsl
cmp
mov
or
add
sbb
stos
lods
test
xor
add
xchg
mov
sbb
es
pop
sub
xchg
repnz
sbb
xchg
lret
orb
fdivrs
or
iret
add
lret
lcall
mov
mov
and
and
call
sub
push
jae
and
cmpsb
bound
sub
xchg
mov
pushf
push
je
xchg
fsubrs
jle
or
xor
and
insb
test
add
addr16
stos
mov
mov
xor
sub
and
call
and
outsl
add
add
sbb
sub
mov
xor
pop
or
sbb
pop
sahf
pop
stos
xchg
lods
movsb
and
sub
les
xchg
xor
and
sub
out
pop
nop
daa
or
xchg
in
and
adc
and
adc
sbb
lahf
mov
sbb
push
cwtl
sub
sbb
push
mov
mov
xor
adc
test
push
int3
add
mull
in
in
and
jecxz
fdivl
test
xchg
stos
sub
mov
and
jno
cmpsl
sbb
dec
lock
notl
add
out
pop
adc
xchg
or
jmp
cmc
lcall
imull
mov
mov
mov
and
movsb
sbb
ret
dec
scas
lea
movsb
xchg
sub
sbb
sub
popf
inc
add
and
cltd
adc
ficomps
jae
xchg
movsl
cmpsb
call
cmp
arpl
jb
adc
xchg
or
mov
jg
xchg
sbb
adc
dec
adc
or
lcall
subb
jno
test
addr16
sahf
or
xchg
push
rcrb
std
and
mov
dec
xchg
call
hlt
xor
test
xchg
test
notl
pop
in
pop
outsl
sbb
lahf
add
mov
lret
sub
adc
stos
out
adc
cltd
adc
adc
das
in
mov
adc
mov
or
pop
call
dec
movsb
nop
mov
mov
adc
imul
and
mov
mov
outsb
pop
push
cltd
mov
lods
out
or
stos
xchg
and
subb
mov
pop
mov
sub
and
sbb
stos
int
cwtl
mov
mov
nop
sbb
or
push
or
test
das
stc
adc
notb
mov
and
xchg
and
movsl
arpl
adc
test
std
mov
pop
mov
dec
mov
pop
xchg
nop
lahf
daa
pop
and
aas
pop
ljmp
ds
aad
pop
and
cmp
in
out
pop
xchg
sbb
mov
sbb
adc
adc
or
jbe
es
add
das
jp
add
sahf
cmp
in
dec
iret
cmpsl
lret
or
and
cltd
daa
lahf
cwtl
pop
mov
das
sub
jecxz
mov
test
adc
ret
sub
and
cld
stc
inc
pop
in
pop
mov
lds
xchg
cmp
movsl
clc
add
fs
cld
and
xchg
dec
ret
adc
daa
icebp
push
xchg
inc
sbb
test
pop
fwait
lea
mov
cmp
xchg
adc
adc
add
mov
sbb
pop
pop
popf
xor
out
mov
sbb
pop
and
inc
nop
test
cwtl
sub
lds
into
fcoms
or
sub
in
aas
or
and
stc
cs
cmpsl
inc
sub
cmp
adc
daa
adc
scas
mov
adc
lcall
cwtl
out
jae
mov
inc
cmpsl
mov
or
sbb
push
and
gs
push
shll
aaa
xchg
inc
js
cmpsl
notl
cmpsl
addr16
cmp
xor
test
cmp
mov
mov
adc
xor
ret
xchg
sarb
push
andl
xchg
push
sbb
insl
aad
sbb
adc
jne
xchg
jb
cmp
xor
outsl
pop
sbb
sbb
sbb
mov
inc
add
ret
sub
push
and
adc
adc
cmova
adc
pushf
test
jge
xchg
dec
andb
or
add
lahf
dec
jae
xor
pop
lcall
and
test
mov
sub
and
stos
mov
push
and
cmp
cwtl
sbb
or
xchg
cwtl
pmullw
iret
dec
sbb
inc
mov
mov
es
adc
cwtl
lds
sbb
push
xchg
mov
cmc
mov
pop
jb
add
push
cmpsl
adc
sbb
sub
xchg
push
adc
lods
sbb
push
mov
sub
cmpsb
frstor
pop
setp
mov
cmpsl
cmpsl
test
xchg
int
test
mov
popf
dec
cmp
adc
pop
cmc
jnp
imul
mov
mov
sarl
fstp
adc
cltd
inc
mov
jno
mov
pop
cli
sub
mov
pop
insl
shl
ror
insl
test
jle
sbb
out
in
xchg
adc
mov
push
push
xchg
lret
mov
mov
pusha
lahf
cmp
ret
fdivrs
push
xchg
out
mov
rolb
lahf
test
and
inc
mov
adc
jno
pop
mov
xchg
mov
lock
fwait
test
fadds
inc
mov
adc
jb
popl
xchg
xchg
es
imull
pop
mov
shll
inc
or
xor
clc
push
icebp
xchg
loope
call
dec
adc
nop
outsl
mov
test
test
je
repz
sub
lcall
orb
mov
je
and
cltd
pop
hlt
movsb
cltd
xchg
stos
mov
cmp
fisubs
push
sahf
pop
and
jmp
jae
push
mov
cwtl
and
pop
xchg
daa
lods
xchg
movsb
cmpsl
push
lret
and
and
xchg
xor
stos
jge
cmp
jbe
xchg
fsubrs
sub
sbb
adc
push
cltd
lcall
xchg
les
push
lods
or
xchg
in
jnp
sbb
icebp
xchg
sbb
mov
adc
dec
je
lahf
scas
subl
scas
and
movsb
lahf
mov
setp
xchg
mov
movsl
pop
out
pop
cwtl
in
outsl
pop
pop
stos
adc
mov
sub
mov
sbb
push
aas
inc
outsl
dec
mov
outsl
cmpsb
nop
or
cwtl
adc
and
arpl
loop
movzbl
mov
daa
inc
mov
cmpsb
imul
or
push
adc
push
jnp
push
test
sbb
mov
mov
mull
test
inc
jo
fwait
xchg
test
and
ret
add
or
pop
mov
testl
sub
mov
movzbl
loope
sbb
test
cwtl
xchg
add
sub
xchg
in
js
idivb
pop
xchg
test
stc
or
push
je
xchg
test
dec
adc
xchg
xor
xor
mov
dec
jae
sub
jmp
adc
arpl
adc
aam
mov
leave
and
jmp
and
daa
andl
xchg
sub
stc
shll
call
pop
or
lock
adc
orb
jp
lds
or
sbb
jne
mov
into
movsb
test
jno,pt
mov
loope
ljmp
setle
lcall
adc
lcall
xchg
in
fnstsw
jle
loopne
jp
jae
sub
mov
sub
out
int
and
cli
mov
or
mov
mov
stos
stos
pop
push
sbb
dec
xchg
mov
lods
pop
xchg
imul
mov
xchg
mov
xchg
add
fisubs
gs
out
fists
cmc
insb
mov
xchg
dec
and
ret
cltd
outsl
fwait
or
dec
stos
sub
repnz
out
int3
pop
xchg
lahf
iret
test
jb
iret
and
or
es
dec
stos
sub
out
sub
xchg
aas
or
ss
fwait
adc
push
out
push
pushf
out
stos
lcall
xor
pop
sahf
inc
xchg
pushf
or
pop
int3
cs
test
movsb
pop
lcall
jp
jb
sbb
and
push
xchg
mov
daa
jge
nop
lahf
loopne
adc
clc
ror
cmc
adc
sbb
mov
daa
push
fs
xchg
cwtl
xlat
out
and
or
xchg
adc
adc
cwtl
in
jae
and
pop
scas
test
mov
xchg
add
je
lods
or
test
and
clc
xchg
subl
sub
in
mov
int
inc
inc
cmp
xchg
inc
int
and
push
insl
xchg
fmuls
and
sub
mov
or
jae
add
hlt
lcall
xchg
mov
and
xor
fs
push
sub
xchg
daa
sbb
xchg
sbb
out
sub
pop
xchg
mov
push
xor
mov
mov
push
pop
and
sub
clc
xchg
aas
stos
jae
cwtl
mov
into
sub
lcall
scas
push
and
clc
xchg
push
xchg
mov
xorw
lcall
adc
xchg
mov
cmpsl
stos
nop
push
test
and
cmp
mov
jnp
adc
sbb
pop
mov
or
xor
and
push
cmpsb
insl
pop
ret
or
sub
xchg
cmpsl
daa
xchg
and
outsl
insl
sub
sub
sahf
stc
xchg
negl
mov
push
test
repz
and
loopne
test
cltd
mov
fdivl
jle
xchg
inc
adc
mov
dec
xchg
mov
mov
aaa
mov
xchg
xchg
stos
push
sub
test
iret
dec
scas
push
xchg
adc
adc
jmp
or
adc
test
cmp
mov
ret
cmpsb
adc
adc
adc
gs
sbb
ljmp
and
xchg
cwtl
adc
testl
aad
mov
shlb
mov
mov
aas
mov
pop
and
adc
mov
sub
mov
cwtl
sub
test
pushf
fsubrs
pushf
arpl
repz
in
mov
adc
push
mov
cwtl
mov
movsl
and
xchg
mov
mov
or
pop
cli
mov
sub
cmpl
sub
adc
sti
lods
pushf
pop
jnp
sbbb
and
xor
test
in
xchg
sbb
js
adc
stos
shlb
jg
negl
into
sahf
and
adc
jae
xchg
cmpsb
addr16
or
aam
leave
stos
pop
shll
test
pop
jae
fcmovbe
stc
cwtl
and
or
or
fwait
sub
add
push
dec
ret
bswap
pop
sub
cmpsl
and
dec
xchg
subl
xchg
adc
sub
scas
nop
stos
es
adc
sbb
pushf
shrd
stos
xchg
adc
mov
stos
mov
sub
or
cwtl
mov
lret
and
fwait
xor
sbb
jns
inc
lds
sub
scas
lcall
dec
nop
push
ss
jle
push
pop
neg
mov
stos
and
insl
test
movsl
xchg
negl
into
cmp
and
lret
cwtl
lcall
adc
cmpsl
iret
lcall
mov
mov
sub
mov
fnsave
gs
sahf
cmpsl
mov
jl
adc
cltd
pop
mov
int3
shr
js
js
imull
jge
pop
push
sbb
test
and
cwtl
sbb
cmp
lret
sbb
inc
movsl
and
nop
movsl
xor
xor
push
cmpsl
xchg
into
pop
sub
or
es
xchg
aad
adc
mov
and
cmp
lock
adc
and
bound
ret
push
cmp
lret
sbbb
cltd
jge
or
mov
push
xchg
push
push
jnp
cwtl
js
sub
jbe
mov
mov
xchg
loop
adc
cwtl
pop
or
xchg
je,pn
or
mov
fadd
and
or
pop
mov
fcoml
sub
push
lcall
xor
sbb
mov
pop
out
popf
sub
and
test
adc
push
rcr
and
movsb
data16
sahf
mov
out
pop
mov
mov
fwait
negl
aas
mov
lcall
inc
pushf
enter
jp
je
adc
push
inc
jbe
push
cmpsl
repz
pop
jge
test
stc
lahf
stc
mov
dec
sbb
inc
pop
jmp
mov
xchg
shlb
in
mov
cld
or
mov
mov
movsb
jno
adc
cmp
and
lock
rcrl
lret
adc
ss
dec
loop
jae
xchg
fwait
xor
jo
sub
arpl
lcall
push
adc
divl
stos
sbb
test
mov
or
push
pop
and
push
mov
and
sub
xchg
pop
sti
cs
imul
sbb
dec
stos
push
iret
or
aas
xor
mov
xchg
mov
push
mov
dec
mov
mov
push
or
cmp
sbb
daa
stc
mov
xchg
fildll
cs
repz
xor
sbb
or
repz
cltd
daa
imul
stos
adc
adc
mov
into
jp
lahf
adc
push
adc
mov
fwait
pop
inc
jb
outsb
popf
adc
pop
mov
adc
jmp
nop
sbb
mov
inc
and
sbb
jl
mov
std
xor
or
adc
xlat
push
mov
xchg
add
pop
daa
ficompl
nop
lea
je
adc
nop
adc
lret
adc
or
aas
cmp
mov
cmp
mov
movsl
add
xchg
in
cld
inc
bswap
xchg
and
xchg
xlat
xchg
jle
dec
fisttpll
mov
sbb
je
adc
mov
nop
repnz
or
mov
rcll
cli
mov
sbb
addl
lock
fcmovbe
cwtl
aaa
test
sub
jmp
mov
xchg
mov
dec
inc
pop
mov
or
and
cmpsl
jecxz
lods
xchg
test
dec
inc
push
adc
sarb
mov
push
pop
lcall
mov
stos
cltd
and
mov
push
and
mov
xor
dec
xchg
mov
aad
add
inc
fcompl
fs
notb
xchg
jb
or
or
aas
into
mov
mov
mov
lahf
xchg
mov
stos
adcb
das
stc
sbb
or
test
mull
inc
stc
lods
xor
mov
setg
sub
test
stos
fmulp
sub
xchg
cwtl
popl
and
xchg
sub
xchg
movsl
cs
sub
in
sbb
and
sbb
lahf
std
mov
js
jb
cltd
sub
xchg
jno
adc
jns
xchg
out
mov
mov
or
jae
cwtl
scas
fists
cmpsb
cwtl
js
jecxz
in
int
cmp
sub
adc
cmpsb
scas
loope
or
xchg
xchg
xchg
nop
mov
pop
xor
fimuls
setb
xchg
and
jmp
sbb
movsb
cmc
ljmp
mov
test
jge
data16
sub
xchg
mov
fcmovnb
dec
movsb
mov
jle
and
test
sbb
daa
pop
shll
std
push
out
xchg
mov
dec
test
fildll
fstps
lahf
int
subb
sub
iret
and
jp
repz
mov
cltd
push
pop
idivl
stc
cmp
mov
imul
xchg
push
imul
stos
cwtl
sti
sbb
lock
out
pop
and
leave
lea
cmpsb
mov
and
lahf
negl
into
lahf
sub
jmp
cmc
add
xchg
decb
jmp
xchg
or
je
xchg
stos
inc
fiadds
das
in
mov
xchg
sub
adc
jb
movsb
cmp
jge
lret
imul
stos
xchg
in
xor
add
pop
test
loop
xchg
cwtl
mov
xchg
and
or
ljmp
cwtl
cld
cmpsb
pop
xlat
and
cmc
movsl
stos
sbb
out
ljmp
push
das
push
cmpsl
mov
mov
xchg
push
aas
sbb
aas
xchg
lret
fst
dec
ljmp
adc
jmp
xlat
nop
js
cltd
fwait
testl
xchg
xchg
or
outsb
dec
pop
mov
inc
inc
lods
xor
mov
cmpsb
cltd
seto
adc
push
sbb
push
jae
outsl
mov
and
mov
movsl
jle
cltd
xchg
int3
sub
jb
inc
aaa
xor
sbb
lahf
lds
nop
xor
in
outsb
or
adc
inc
sub
add
or
mov
je
and
or
add
mov
out
add
mov
daa
sub
stos
cmpsl
lcall
sub
dec
lret
subb
push
imul
pop
out
mov
test
and
jbe
push
cmp
fdivrs
or
jg
fidivs
sub
fabs
mov
clc
out
lcall
mov
sti
mov
sbb
mov
or
mov
jb
lcall
sbb
xchg
scas
hlt
and
sub
jbe
pop
adc
add
sti
orb
and
xorl
aas
fwait
cmpsb
or
movsb
sub
daa
cwtl
test
lcall
xchg
adc
lea
inc
test
and
jnp
pop
jp
sbb
xchg
lea
stc
scas
imul
or
imul
cmp
sub
ljmp
xchg
or
mov
aam
out
push
xchg
stos
cmpsb
out
and
and
mov
lcall
out
adc
stos
out
xchg
cmpsl
xor
inc
jp
daa
jne
xchg
test
mov
and
or
adc
and
mov
es
aam
mov
test
clc
test
adcl
or
aas
sbb
jae
lahf
inc
cmp
je
jne
cmp
cs
out
xchg
add
xchg
mov
pop
cmpb
xlat
mov
dec
adc
and
xchg
sub
arpl
push
out
jne
mov
stos
xchg
stos
push
test
stos
jge
mov
leave
xchg
xchg
shll
sub
adcb
fbld
dec
stos
test
xchg
sbb
and
xor
in
loop
clc
xchg
mov
and
das
lcall
xchg
cwtl
popa
pavgw
mov
mov
xor
je
test
jbe
dec
jmp
arpl
gs
mov
and
stos
sub
cli
mov
and
movsb
mov
xchg
xchg
xor
lcall
dec
neg
iret
shlb
push
into
cld
push
pop
sbb
scas
fistps
inc
jp
pop
jge
rorl
dec
test
stos
or
mov
sub
mov
jg
arpl
push
test
sub
adcb
push
cmpsl
test
xchg
scas
mov
sub
pop
cmp
movsb
dec
mov
in
and
lcall
sbb
sub
insb
sbb
adc
fsub
mov
xchg
mov
sub
cmpsb
ss
lea
stos
and
in
xchg
popa
aam
xchg
push
jae
push
cmpsb
pusha
cmpsb
and
xchg
and
jecxz
adc
sbb
mov
call
jae
and
lahf
scas
enter
andl
jae
psllq
mov
ljmp
lods
pop
or
xchg
movsb
pop
sub
xchg
and
mov
sbb
lahf
jle
lock
lock
scas
les
sub
andb
sbb
daa
adc
mov
and
xor
mov
sbb
dec
push
mov
faddl
mov
sub
mov
xchg
es
pop
pusha
insb
xor
jno
xchg
mov
sub
jle
adc
test
xchg
cmp
mov
cvtpi2ps
jb
mov
xchg
xchg
push
sub
pop
sbb
dec
out
sbb
and
xchg
dec
xstore-rng
cmpsl
xchg
push
rcrb
orb
cld
add
nop
and
adc
mov
test
xchg
outsl
dec
sub
jnp
into
mov
inc
xchg
sbb
pop
and
mov
sub
mov
jp
je
pop
pushf
std
imull
jle
es
jg
sub
fisubs
or
pop
negb
push
rcrl
aad
call
scas
jae
and
shrl
sub
pop
stos
xchg
pop
cwtl
pop
jmp
push
cmpl
cmpsl
sbb
pop
adc
mov
fmuls
dec
std
xchg
xchg
sbbb
lock
lea
cmc
adc
push
cltd
movsb
pushf
and
lcall
pcmpgtw
pop
mov
mov
pusha
xor
pushf
mov
mov
adc
das
mov
pop
popf
test
out
sub
xchg
mov
add
pop
xchg
es
mov
xchg
xor
fstps
mov
lods
xchg
push
sahf
cmpsl
movsl
fisttps
push
sub
xchg
xor
movsb
lahf
inc
stos
or
jae
lcall
jp
mov
push
fwait
inc
ljmp
lret
fmuls
test
stos
and
es
movsb
je
xchg
loope
xchg
sbb
pop
ja
fisttps
popf
test
leave
data16
sbb
push
lods
cmpsl
mov
xchg
inc
test
or
add
mov
fdivrs
dec
outsl
and
fsubl
jb
aam
pop
gs
sbb
jb
movsb
sub
scas
adc
std
sbb
repz
mov
adc
mov
and
ffreep
out
shlb
cmp
sub
sbb
xor
scas
and
xchg
pop
push
jmp
mov
lods
lods
xchg
adc
push
xchg
stos
iret
stos
push
or
lock
cltd
xchg
xor
popf
adc
sbb
pop
mov
adc
outsl
stos
adc
daa
and
psrlq
or
add
test
jmp
inc
or
fcoms
sub
frstor
xor
imull
push
cwtl
xor
clc
shl
outsl
sbb
mov
prefetchwt1
mov
pop
jmp
cmpsb
cmpsl
adc
rcrb
iret
icebp
and
xchg
xor
push
call
insl
js
sbb
movsb
cmp
pop
push
mov
out
insb
adc
push
and
or
imul
pop
lahf
mov
out
xchg
lcall
or
bound
out
xchg
in
test
push
jnp
mov
and
pop
push
adcb
adc
mov
xchg
push
nopl
adc
xchg
mov
jno
or
movups
fsub
clc
pop
stos
add
cmp
xorb
xchg
popa
pop
xchg
fmuls
in
sbb
pop
pop
into
pop
movsl
cmpsb
xchg
mov
xor
cmpsb
push
lods
xchg
jmp
stos
test
cltd
mov
or
ror
jno
mov
sbb
lcall
lcall
iret
aad
pop
mov
sub
sbb
dec
jae
push
lods
xchg
xchg
mov
adc
add
and
stc
mov
daa
xchg
pop
sahf
sahf
jmp
lods
cld
jp
into
sub
xchg
fwait
mov
pop
mov
mov
mov
mov
add
andl
ja
or
and
xchg
and
rep
sbb
les
mov
nop
cmp
lock
add
cltd
sub
es
pop
mov
lret
in
xor
nop
mov
and
mov
mov
aad
test
mov
in
xchg
test
add
cmpb
fstp
xchg
neg
cmc
mov
cltd
mov
xchg
stos
gs
fldt
test
sar
out
push
and
cmpsb
sbb
xchg
adc
jae
xchg
jne
push
sahf
lret
movsb
sub
lcall
and
xchg
mov
or
and
mov
xchg
xchg
sbb
xchg
fbld
adc
mov
jge
cwtl
mov
and
fwait
or
cltd
or
xor
lahf
xchg
mov
sbb
cwtl
fdivs
in
sbbl
xchg
jae
nop
lcall
fs
pop
pop
sbb
stos
sub
shll
mov
cwtl
movsl
lahf
adc
stos
test
in
das
jl
xor
mov
ss
sbb
popf
std
in
jae
and
stos
sbb
bound
xchg
enter
jecxz
sbb
cld
cmpsl
and
decb
and
mov
xor
sub
test
rcr
scas
lcall
and
adc
dec
push
add
jae
hlt
pop
cli
sbb
shll
pop
test
fisttps
jecxz
mov
mov
pushf
adc
mov
popf
pop
cltd
test
xchg
jb
xor
xchg
movsb
pop
dec
mov
add
xchg
insl
sbb
loopne
cs
jno
sub
and
xor
fisubrl
dec
xor
sahf
inc
and
adc
int
ss
nop
mov
dec
sub
fwait
ljmp
cmc
test
pop
fwait
es
mov
dec
out
dec
sti
in
adc
cmpsl
dec
xor
pop
scas
movsl
cwtl
sub
pop
xchg
stos
cmp
adc
xchg
mov
dec
aad
pop
popf
in
jae
xchg
pop
out
jb
adc
sbb
icebp
sbb
movsb
pop
fucom
push
jae
push
push
jb
cltd
std
loopne
pop
movb
jecxz
sub
lret
mov
lods
mov
sub
and
stos
lahf
push
adc
adc
js
and
xchg
popl
mov
and
mov
xchg
pop
xchg
pop
pushf
pop
bound
jae
nop
ljmp
adc
fwait
xchg
push
incl
addb
test
std
and
xchg
stos
repz
xorl
notl
sbb
test
ljmp
sub
adc
lret
nop
add
adc
stos
repz
es
pcmpeqd
cmpsb
dec
cwtl
xchg
lcall
jle
mov
push
ss
clc
fcomip
adc
adc
js
je
sbb
sub
fmuls
xchg
and
jge
jl
mov
pop
mov
movsb
xchg
imul
pop
lods
adc
sbb
ljmp
pop
gs
cmp
fs
nop
xchg
cmpsl
xchg
arpl
xchg
or
popf
xor
xor
dec
push
and
jg
push
xchg
stos
push
stc
cmpsb
or
cmp
xchg
cmpsb
or
cmpsb
pop
mov
add
fsubrl
and
mov
xchg
and
call
xchg
cmpsl
popf
sbb
test
xchg
dec
jp
cmc
xchg
xchg
int
cmovl
pushfw
out
in
movsl
mov
test
out
cmc
xchg
mov
cltd
psubw
push
in
cltd
and
lock
scas
mov
daa
sub
and
dec
jge
pop
test
leave
js
cmc
fistl
iret
sub
data16
fsts
cmpb
and
sbb
fdivs
pop
adc
adc
xchg
adc
out
xchg
sbb
mov
lcall
push
mov
stos
adc
xchg
adcb
xor
and
jo
lock
movsl
and
fistps
mov
pop
clc
cmp
loope
cwtl
xchg
loope
ret
or
cmpsb
dec
lret
xchg
int3
orw
xor
lcall
add
jo
fsubrl
psrad
xchg
sbb
in
jmp
and
dec
sub
push
in
jno
adc
in
jb
cld
rcrl
pop
xlat
mov
cmp
testb
sub
xchg
adc
das
mov
cld
das
push
xchg
or
repnz
fwait
movsb
mov
das
jns
sub
inc
add
je
add
mov
in
mov
out
xchg
jo
xchg
sub
and
inc
repnz
jae
adc
mov
or
pop
imul
fadds
test
xchg
push
or
loop
clc
adc
push
jnp
cmpsb
mov
push
mov
cli
sub
and
in
outsl
lcall
daa
or
leave
xchg
or
sub
lcall
xchg
popl
sbb
push
sub
and
mov
dec
or
add
cltd
daa
decl
lcall
incb
lret
fistps
stos
adc
add
mov
adc
xor
push
sub
cmp
sbb
xchg
sahf
bound
mov
and
mov
cmpsl
xchg
add
add
nop
jle
adc
cmp
xchg
and
xchg
mov
stos
out
movsl
sbb
and
sub
jmp
test
mov
stc
adc
cmpsb
stc
subb
sbb
xchg
jg
pop
sbb
int
lret
push
sbb
in
jmp
iret
cwtl
into
jne
and
or
add
stc
lea
mov
cltd
nop
adcb
xchg
inc
lods
iret
lahf
pop
stos
cmpsl
faddp
xchg
xchg
test
adc
add
fwait
cmc
loop
xchg
cmpsl
cwtl
shrb
or
std
jg
es
scas
xchg
lahf
daa
push
cltd
in
xchg
mov
push
adc
mov
and
cmc
xchg
xchg
xchg
xchg
mov
mov
cmpsb
dec
je
jae
out
jne,pt
xchg
sbb
sbb
jle
jle
les
xchg
adc
outsb
movsl
stc
ret
cmpsl
and
cs
dec
outsl
mov
ret
dec
dec
mov
adc
cmpsb
add
enter
jae
or
ret
sub
fimuls
cmp
fdivl
push
jae
xchg
push
int3
dec
outsb
mull
lcall
aaa
adc
fisttpll
pushf
sbb
out
push
xchg
mov
xchg
stos
xchg
and
add
adc
or
sub
xchg
out
stc
xchg
into
out
cmpsl
adc
sub
orb
das
pop
stos
mov
mov
stc
fwait
adc
cltd
test
mov
pop
xchg
inc
imul
fs
mov
or
cmpsb
or
fwait
jl
cmp
test
loop
mov
pop
sbb
xchg
sub
test
sbb
xchg
adc
xchg
xchg
mov
and
add
mov
push
movsb
call
fst
movlps
sub
or
nop
xchg
jge
mov
jne
test
movsl
stos
sub
mov
mov
xchg
xchg
addr16
scas
movlps
push
add
fwait
lret
out
inc
dec
fmul
shrl
in
pop
movsl
out
pop
mov
or
xchg
or
mov
sub
inc
cmpsl
sub
dec
rolb
andb
or
inc
scas
cmpsb
xchg
daa
adc
iret
or
push
es
push
int3
mov
and
and
and
push
into
cmpsl
bndstx
aas
xchg
jmp
test
movsb
or
test
mov
adc
jg
xrstor
mov
sub
call
mov
fcoml
mov
imul
movsl
add
sbb
push
add
fldenv
push
mov
cmpsl
test
adc
xchg
jg
push
insl
iret
cmp
movsb
ret
iret
movsl
adc
xchg
sbb
in
sarb
pop
and
cld
adc
mov
sahf
dec
sbb
lret
mov
movsl
fldl
addl
push
nop
pop
lods
in
fwait
mov
test
movsb
and
daa
push
jg
adc
mov
jne
and
fmull
pop
push
fwait
cmpsb
ss
jge
and
and
xchg
xchg
pop
aas
das
mov
push
insl
pop
push
xor
test
in
add
xchg
sar
cmpsb
sub
push
xchg
out
fsts
test
mov
mov
std
sub
xchg
jae
cltd
icebp
notb
mov
daa
movsb
mov
pop
iret
mov
loopne
xchg
ret
test
lock
lcall
jg
call
push
int3
and
push
xor
mov
mov
pop
mov
pop
jmp
mov
rcrb
std
and
inc
xchg
jge
into
add
mov
ljmp
movsl
nop
les
add
cltd
mov
sub
out
fsubs
dec
stc
or
mov
mov
sahf
adc
movsl
daa
decb
or
jecxz
test
adc
movups
sti
dec
cld
adc
push
stc
sbb
mov
xchg
rcr
xor
adc
and
mov
insb
xor
jl
xor
dec
push
sub
pop
lahf
loopne
pop
xchg
or
sub
cpuid
and
xor
xor
lcall
cltd
stos
push
fiaddl
je
lahf
popa
pop
enter
mov
or
pop
cmpsl
cmpsb
xchg
fwait
and
rcrl
sub
adc
lret
fsubl
test
sub
xchg
or
je
fcomps
cmpsl
icebp
sbb
adcb
push
call
into
sub
fwait
jecxz
mov
notl
adc
cmp
jno
xchg
jo
mov
add
mov
mov
jae
mov
and
sub
sub
xchg
xchg
sub
das
movsb
push
nop
lret
icebp
subl
movsl
hlt
das
rcrb
je
test
xor
clc
xor
into
andl
ret
stos
add
adc
sub
jae
cwtl
xchg
daa
xor
outsb
je
lock
iret
filds
sbb
incb
pusha
shrl
or
dec
cwtl
mov
cltd
or
and
mov
test
bound
loop
cs
mov
mov
fidivl
pop
dec
in
push
and
call
popf
nop
and
or
sbb
das
or
loopne
xchg
mov
daa
mov
adc
add
clc
and
cmpsb
cltd
mov
or
icebp
nop
xchg
or
and
and
or
adc
mov
jno
xchg
scas
mov
push
pop
mov
out
mov
iret
test
push
add
in
mov
data16
push
sub
jnp
cmp
or
mov
sub
enter
sub
cmp
mov
push
adc
hlt
mov
cltd
sbb
xchg
pop
or
popf
xchg
xor
add
sub
stos
xchg
push
or
lret
ljmp
stos
sub
and
mov
sub
xchg
pop
lock
mov
sub
lcall
xor
push
xchg
stc
pop
lret
adc
lret
ljmp
les
adc
cltd
sub
adc
and
stos
ljmp
in
or
test
leave
cmp
xor
jno
adc
mov
jle
pop
sub
add
jns
push
jns
dec
xchg
stos
arpl
sub
adc
sbb
dec
icebp
test
mov
mov
mov
je
or
xchg
sub
lret
jno
xchg
jbe
sub
pushf
clc
xchg
icebp
sbb
sbb
xchg
jo
mov
xor
in
jae
xchg
add
xchg
sub
ds
mov
mov
sub
gs
lret
dec
lcall
and
js
and
xor
pop
push
xor
or
adc
xlat
mov
sbb
test
stos
movb
dec
popa
jmp
mov
and
mov
cmpb
mov
into
push
jae
daa
lcall
xchg
or
mov
movsb
clc
sbb
clc
sarb
bound
dec
aam
je
stos
jb
push
pop
movsl
sub
stos
incl
and
into
adc
adcl
fidivs
and
jle
xor
adc
stos
rorb
es
pop
stc
mov
mov
adc
jae
and
adc
xchg
stos
scas
sbb
sub
dec
pop
mov
enter
int3
cld
cltd
movsb
scas
sub
sbb
adc
xchg
fwait
sbb
xchg
and
cwtl
test
cmpsl
dec
outsl
mov
aas
incb
stos
and
jnp
and
movq
imul
loopne
and
fnstcw
lock
push
clc
xor
xchg
daa
iret
xor
adc
sub
mulb
xchg
int3
mov
cltd
push
icebp
inc
sub
fists
lcall
sbb
repz
xorb
movsl
stc
inc
hlt
push
adcl
pop
xchg
and
add
jb
or
lcallw
adc
and
xchg
icebp
sarb
ret
adc
mov
cmpb
mov
sub
dec
dec
std
and
xchg
filds
fimuls
cmp
xlat
push
xor
pop
xchg
movsl
push
clc
sub
mov
and
sub
xchg
lcall
and
xchg
fwait
ret
adc
adc
in
mov
mov
sub
xchg
cmpsl
xor
adc
ljmp
addl
pushf
push
fadds
outsb
ss
lcall
mul
push
lods
cwtl
mov
pop
add
test
add
ljmp
rcr
xchg
cld
imul
data16
xchg
rcll
xchg
jnp
test
push
fwait
cmp
out
and
jb
jg
pop
jo
in
pop
or
xchg
imul
pusha
or
aad
pushf
add
xchg
lcall
pop
mov
push
psubw
jno
sbb
movsl
xchg
pop
fstl
fcmovu
mov
sub
negl
cmpsb
lahf
hlt
adc
mov
mov
mov
sbb
pop
jb
adc
xorl
mov
out
insl
xchg
xchg
andb
je
in
lds
andl
sub
pop
and
pop
adcb
add
into
rorb
adc
out
cwtl
stos
pop
mov
xchg
pop
xor
movsb
jne
sub
xchg
or
sbb
lock
and
mov
mov
sbb
mov
xchg
adc
imul
daa
fwait
movsb
sub
xchg
data16
mov
and
or
dec
cmp
mov
add
sbb
push
jae
adc
lcall
mov
xor
pcmpeqb
pop
xor
sbb
in
das
popf
xchg
mov
xchg
xchg
mov
push
push
inc
js
notl
shlb
cmpsb
insb
gs
lahf
test
in
orl
cli
xchg
jecxz
dec
lahf
fmul
outsl
mov
stos
adc
jbe
ljmp
lcall
xchg
adc
or
movsl
daa
stos
and
adc
cmpsb
stos
cmpsb
push
daa
fwait
add
sbb
mov
xchg
movsb
mov
lcall
sbb
test
dec
sti
push
movsl
outsb
jb
cld
sub
lahf
mov
mov
xchg
mov
bound
push
mov
cltd
dec
shrb
sub
adc
test
xchg
jmpw
adc
add
and
or
iret
stos
jae
stos
scas
scas
xor
mov
xchg
out
mov
xchg
xor
popa
out
into
lcall
cli
cltd
or
movsb
and
aad
pop
adc
mov
mov
jno
mov
lcall
adc
loope
and
inc
mov
bound
icebp
or
adc
cmpsb
inc
leave
adc
adc
lcall
or
lcall
pop
sub
and
daa
loopne
xchg
addl
cli
jmp
les
ljmp
adc
cs
pop
jae
jb
mov
adc
and
mov
sub
cmc
lods
pop
mov
xchg
or
cli
sbb
push
push
loope
add
pop
dec
xor
xchg
and
sbb
and
inc
or
mov
inc
jnp
test
adc
pop
test
mov
pop
fcoms
xchg
lcall
and
adc
adc
xchg
xchg
ficoml
or
push
sbbl
scas
jne
xor
daa
mov
iret
cmp
stos
or
sub
push
mov
out
cmpsb
adc
adc
fwait
mov
loopne
es
xchg
or
aas
inc
lcall
and
cmp
mov
adcb
dec
lcall
mov
lcall
lret
pop
test
jbe
sbb
adcl
vpextrw
lds
sbb
cld
sub
rorb
and
pop
rcrb
adc
jo
lcall
sbb
adc
sub
ficoms
stos
xchg
mov
out
pop
adc
popf
xor
xchg
jae
sbb
or
insl
push
sub
cli
adc
mov
std
insl
inc
mov
gs
xor
xchg
xchg
xchg
fstpl
adc
call
mov
and
lahf
mov
lahf
mov
seto
and
sub
fidivs
andb
test
test
xor
cmp
repz
xor
jo
sub
leave
cltd
cld
mov
dec
cmpsb
and
cltd
xor
test
mov
mov
jmp
sub
cli
push
in
stos
lret
or
xchg
mov
call
in
cltd
pop
cltd
dec
lock
xchg
jb
lahf
popa
push
stc
mov
js
clc
jge
add
cmp
xchg
and
fwait
test
mov
out
sub
adcl
adc
and
xchg
pop
jnp
cs
cmp
mov
adc
mov
pop
cwtl
imul
cmpsb
xor
mov
lock
or
cmp
sbb
xlat
movsl
aas
aam
mov
test
mov
test
and
xor
mov
and
lds
ljmp
movsb
sbb
cltd
push
adc
aad
xchg
out
mov
mov
or
insb
jno
xchg
inc
cld
cmp
fwait
inc
sbbl
sub
sub
xchg
ljmp
incl
cmpsb
mov
xchg
stos
pop
xchg
test
xchg
mov
jmp
adc
xchg
cmpsl
mov
jecxz
cmp
or
inc
push
sahf
scas
movsl
sbb
pop
shrb
jae
cwtl
xchg
out
adc
fsubr
daa
adc
movsl
stos
iret
xchg
fwait
mov
shlb
test
cs
rolb
xchg
movsl
sbb
pop
mov
dec
or
push
cmpsb
out
lahf
add
or
mov
jae,pt
rorl
sub
dec
and
or
inc
adc
sbb
xchg
inc
sub
rcrb
push
rcrl
or
fcmovnb
adc
and
and
xor
xor
stos
das
pop
test
in
lahf
mov
inc
aam
sub
adc
stos
ss
inc
add
and
sbb
adc
mov
lcall
mov
stos
pop
and
nop
aas
push
andb
lcall
fsubrs
sub
mov
sbb
push
lds
push
enter
fisttpll
enter
pop
scas
jecxz
or
daa
sub
lret
cltd
stos
es
inc
cmpb
frstor
sbb
or
xchg
mov
imul
ret
inc
push
pop
stos
lahf
pusha
loopne
ret
push
das
adc
daa
and
xchg
test
pop
shlb
and
mov
mov
mov
mov
cltd
mov
cltd
out
adc
inc
fstl
jbe
and
iret
or
lret
or
mov
and
or
jle
mov
sbb
popf
push
xchg
pop
inc
insb
fadds
popa
xor
adc
fwait
and
adc
in
in
and
je
mov
mov
and
pop
jp
adc
fdivrs
ljmp
pop
sbbl
pusha
mov
mov
and
jb
sub
inc
mov
mov
rcrb
outsb
lcall
fnstenv
je
out
mov
mov
pusha
inc
xor
xor
mov
das
mov
mov
and
jl
jo
lahf
adc
ret
sub
pop
movsl
sahf
es
mov
leave
mov
popf
mov
stos
outsl
and
or
es
lret
cmpsb
mov
into
jbe
xchg
fildll
fwait
xchg
or
add
inc
lock
or
pusha
mov
and
xchg
test
push
lret
stc
mov
out
clc
daa
mov
arpl
outsl
jns
and
push
stc
daa
out
movsb
cmc
lahf
xchg
cmpsb
add
out
sub
nop
dec
and
stos
test
cltd
xchg
xchg
cmp
jae
sub
fstl
cld
push
xchg
ds
cs
out
sbb
mov
push
inc
sub
out
mov
xchg
sbb
xchg
pop
xor
stos
out
cmpsl
jp
mov
std
es
pop
or
mov
sub
aam
es
mov
or
mov
adc
sbb
lcall
nop
xor
xchg
fistps
js
or
xor
movsl
fstl
sub
mov
cltd
xchg
mov
ljmp
sub
call
test
mov
popf
jae
test
mov
xchg
xchg
jmp
cmpsl
movsb
in
and
or
sub
mov
or
mov
js
xchg
unpcklps
dec
lcall
cltd
adc
mov
sbb
xchg
add
test
sub
ficompl
jne
insb
xchg
mov
pusha
clc
and
test
cwtl
in
adcl
sbb
out
out
es
add
ljmp
sub
lock
mov
xor
js
mov
and
movsb
sub
test
xchg
xchg
xchg
out
insl
fisttps
out
push
and
pop
loop
stc
pop
in
test
dec
stc
pop
add
mov
mov
je
xor
rcrl
and
int3
movsb
mov
xchg
mov
sub
jae
sbb
mov
mov
lock
adc
dec
dec
sbb
mov
sbb
lcall
cmpl
xchg
sbb
xchg
nop
adc
cmpsl
sub
adc
out
shll
icebp
adc
daa
dec
mov
sbb
mov
stos
push
lret
sbb
movsl
vpmadcswd
nop
adc
sbb
movsl
mov
je
fxch
adc
rorl
fwait
adc
out
cmp
sbb
es
rcll
daa
mov
and
cmpsb
push
cmpsl
sbb
jb
stos
sub
movsb
je
adc
arpl
mov
out
ret
xchg
stos
lcall
xchg
push
sahf
icebp
sbb
xchg
das
fbld
or
nop
xchg
xchg
je
pop
mov
inc
sbb
dec
jmp
out
xchg
fs
xor
xor
mov
sbb
xchg
lcall
int3
jge
popf
xchg
push
sub
mov
xchg
lahf
adc
test
and
out
jl
cmpsb
push
xchg
subb
inc
xchg
ss
cmpsl
out
mov
or
mov
mov
mov
sbb
sub
into
filds
cmp
lcall
mov
inc
scas
loopne
mov
movsb
fwait
xchg
mov
stos
adc
push
jbe
xchg
repz
or
repz
jge
mov
fmuls
adc
test
add
and
mov
adc
mov
testl
xchg
adc
cmp
aas
shlb
bound
addr16
and
adc
cmpsb
pop
pop
insl
and
pop
lahf
rcrl
out
push
fstpt
fdivrs
mov
ljmp
cmp
xor
ds
push
shll
loopne
adc
adc
sub
es
scas
movsl
and
pop
movsb
xchg
sbb
mov
sahf
sub
outsb
arpl
push
fimull
dec
sub
test
mov
into
xchg
lock
movsb
push
in
fdivs
ljmp
sub
lds
rcll
js
xchg
imul
xchg
and
mov
pop
or
xor
sbb
jno
stos
xor
adc
xchg
mov
out
push
adc
cltd
lahf
nop
stos
cmpsl
push
lods
stos
je
movhps
jne
out
rorl
clc
sbb
xchg
jg
dec
scas
fsubrs
pop
jno
adc
pop
cmpsl
je
clflush
pop
fwait
add
adc
les
xchg
push
pop
lahf
int3
in
pushf
sub
adc
dec
and
stos
scas
fbld
mov
mov
xchg
lret
or
or
adc
cmp
inc
pop
dec
xor
jg
shld
adc
out
aas
xchg
test
mov
sub
xchg
lret
or
pop
sub
lds
rcr
ljmp
sbb
pop
test
sub
les
jno
stos
lcall
xchg
lcall
mov
xchg
lahf
sbb
into
stc
mov
and
and
add
adc
in
adcb
cmp
pop
jbe
outsl
nop
xchg
cmpsb
pop
mov
aad
dec
aam
mov
aad
mov
mov
adc
push
daa
and
stos
out
mov
nop
mov
fdivp
aaa
jno
pop
xchg
dec
mov
fwait
xchg
scas
pop
adc
nop
mov
iret
push
sbb
scas
xor
and
es
xor
mov
jns
fwait
sub
mov
sbb
cwtl
cmp
mov
and
push
insb
jae
movsb
cmpsl
lods
in
fdivrs
jmp
inc
push
rorl
cltd
and
imul
xchg
lret
mov
xor
adc
inc
iret
mov
jle
mov
push
adc
in
lods
sub
and
adc
lret
xchg
sbb
and
and
adc
out
sub
and
pusha
imul
cmp
fstpt
insb
mov
xlat
sbb
adc
jmp
mov
jmp
mov
mov
jmp
or
mov
jmp
fdivrs
sarb
je
xchg
nop
adc
lods
add
outsl
cltd
xchg
adc
sub
push
mull
dec
in
push
adcb
dec
mov
negl
dec
pop
out
add
loop
mull
jl
adc
inc
pop
dec
sbbb
mov
mov
cwtl
test
sub
mov
cmp
xlat
adc
mov
fucomp
gs
test
xlat
pop
scas
lret
pop
pop
adc
hlt
push
push
or
mov
daa
popf
lret
testl
add
int3
push
xor
jo
xchg
movsb
adc
out
fidivs
and
and
in
jae
cltd
pop
jbe
dec
outsb
stc
ret
pop
xchg
add
fbld
fwait
adc
add
pushl
xchg
xchg
mov
sbb
insl
outsl
dec
push
xchg
es
mov
lods
cltd
xchg
lea
dec
xchg
mov
test
xchg
clc
stos
movsl
adc
ret
xor
stos
or
push
fcoms
cmc
sub
out
pmaxsw
cmpsb
movsl
xchg
mov
and
ret
bound
push
xchg
cltd
or
es
fisttpll
dec
and
xor
lahf
movsb
inc
xor
dec
adc
jne
lcall
mov
stos
lahf
clc
xchg
sbb
shrb
aad
sub
or
jae
mov
fwait
xchg
cmp
lea
mov
pop
jge
jno
or
sub
fcoml
and
and
setnp
es
in
mov
mov
xchg
mov
mov
out
and
stos
nop
pop
sub
dec
inc
push
in
mov
jg
push
xchg
repz
movsl
and
inc
loopew
lods
lahf
mov
andl
mov
icebp
lock
mov
add
pop
pop
pop
mov
pop
mov
adc
mov
jns
push
and
inc
mov
shrb
mov
xchg
cmpsb
mov
roll
mov
imul
std
and
mov
push
fists
mov
daa
xchg
xchg
mov
and
adc
sar
aas
mov
adc
sbb
adc
stos
mov
and
out
mov
es
sbb
jb
inc
into
push
stos
out
xor
mov
pop
xchg
inc
xor
xchg
xchg
sub
es
scas
jge
shr
cmc
pop
popl
and
out
sub
into
and
mov
mov
push
pop
mull
clc
jae
std
xchg
add
xor
mov
adc
dec
mov
test
je
xor
push
adc
xor
mov
pop
mov
add
add
pop
es
pop
mov
sbb
xchg
mov
cmpsl
test
scas
mov
lods
adc
mov
xchg
sub
imul
js
fisubs
xchg
pop
xchg
or
xlat
out
lret
dec
fidivrl
cli
sub
sbb
push
icebp
lahf
xchg
pop
je
lcall
lcall
jg
shl
xor
sub
push
stos
mov
adc
adc
clc
adc
notl
movsb
out
dec
xchg
xchg
stos
sbb
js
js
je
adc
inc
push
ljmp
das
mov
arpl
ffreep
mov
adc
xor
mov
ljmp
jg
pop
stos
mov
jbe
nop
or
loopne
mov
mov
lds
in
dec
cmp
push
pop
mov
sub
jnp
and
xor
push
sbb
repz
je
icebp
andl
sarl
lret
mov
jecxz,pt
scas
cmp
xchg
lcall
sub
adc
jge
iret
xchg
xchg
jecxz
ds
cmpsb
xchg
out
mov
test
adc
sub
sbb
lahf
aas
push
xor
or
outsl
and
and
daa
mov
xchg
xor
inc
or
out
daa
pop
cltd
sbb
mov
sub
adc
and
out
xchg
sbb
loop
popa
jg
daa
lods
es
mov
or
sbb
push
stos
daa
mov
xchg
mov
clc
and
and
sub
adc
orl
stos
sub
jne
jo
adc
and
sbb
jbe
pop
hlt
adc
cmp
cmp
xchg
sti
sarb
pop
add
mov
icebp
dec
sub
xchg
jmp
xchg
cmpsl
and
lcall
repnz
and
sahf
lds
fimuls
clc
cwtl
outsb
iret
or
rorb
into
xlat
lahf
sub
mov
and
fucomip
xchg
fisubrl
push
mov
lret
sub
std
xchg
mov
rcrl
mov
pop
push
adc
adc
xchg
sbb
mov
sbb
into
sbb
xchg
subl
jbe
adc
adc
test
mov
xchg
jp
loop
mov
lcall
lahf
lock
lock
adc
mov
test
sahf
test
or
out
cwtl
movsl
stos
lcall
stos
lret
xchg
mov
sbb
jle
daa
adc
outsl
adc
adc
add
mov
mov
jp
xchg
out
inc
or
sbb
out
lods
or
imul
dec
clc
dec
mov
sub
jb
adc
shlb
imul
pop
das
sub
sbb
fwait
movsb
sbb
shlb
and
mov
rorb
jae
xchg
jno
and
sbb
jb
pop
int3
addl
movsb
xor
call
xchg
cmpsb
cwtl
and
xchg
js
xchg
or
je
mov
test
jp
push
test
lods
fwait
mov
sbb
sbb
xchg
es
push
aad
adc
xchg
xchg
fs
inc
jb
adc
inc
sub
out
jmp
lcall
je
mov
outsl
mov
cwtl
stos
and
sbb
or
inc
jp
notl
xchg
and
test
cmpsb
les
out
sub
and
sbb
sub
mov
shll
stc
sub
push
stos
add
xlat
cmpsl
inc
sarl
or
es
in
fwait
lcall
sub
mov
push
lods
push
mov
test
sbb
lcall
adc
nop
stos
clc
sub
scas
movsl
mov
cmp
cmpsb
sub
sbb
cltd
mov
xchg
test
and
das
sub
test
cmp
push
jno
sbb
push
cmpsb
mov
cs
jge
cmpsb
stos
cmp
daa
sahf
inc
mov
call
mov
sbb
lahf
adc
mov
add
mov
inc
lcall
sub
out
mov
fisubrs
adc
inc
mov
lock
movsb
xchg
movsl
xor
mov
mov
xchg
adc
js
pop
test
sub
lcall
jp
xchg
adc
pop
out
xchg
sbb
lahf
push
aas
mov
mov
shrb
mov
adc
cld
sub
xchg
or
cmpsb
xchg
xchg
pusha
stos
mov
and
and
rcll
push
or
xchg
cltd
add
jp
mov
mov
adc
fwait
adc
leave
std
sub
mov
test
notl
xchg
imul
add
fwait
test
std
xchg
pop
lret
xchg
mov
push
lods
jge
xchg
and
sub
xchg
adc
pop
push
xchg
jle
or
lds
mov
clc
mov
xchg
cmpsl
dec
pop
xchg
pop
adc
or
repz
movsb
decb
and
xchg
push
iret
mov
gs
movsb
sub
xor
sbb
aad
xchg
js
or
in
cli
sub
sbb
push
xchg
das
test
es
mov
or
xchg
pop
cwtl
push
fsubs
xor
lcall
sbb
idiv
mov
sub
mov
mov
mov
push
lret
lea
repnz
xchg
or
in
mov
mov
mov
xchg
jno
adc
in
icebp
fstps
sbb
mov
aas
int
push
lods
jmp
fimuls
cltd
mull
test
xor
mov
mov
in
sub
mov
jle
fldcw
notl
iret
mov
mov
xor
movsb
dec
lahf
loope
push
push
xchg
mov
or
or
cmc
sub
xchg
xchg
adc
push
cmp
pop
xchg
and
cmp
push
xor
jno
adc
sbb
jne
adc
jg
sahf
in
xchg
and
inc
xchg
add
jbe
jp
loopne
daa
lea
fmull
cmpsb
test
cltd
in
je
cwtl
je
sbb
cmc
jle
mov
inc
bswap
fistpl
adc
mov
sub
inc
test
notl
sub
daa
mov
adc
in
mull
mov
std
sub
ret
mov
movsb
test
mov
mov
mov
adc
jl
aad
mov
sbb
xchg
sub
push
and
jp
mov
in
clc
and
xchg
xchg
push
stos
cmpsl
cmc
aam
movsl
adc
adc
add
xchg
ret
std
pop
or
jp
mov
adc
adc
mov
lods
and
and
mov
xchg
sub
sub
loopne
sbb
xchg
pusha
pop
fwait
mov
fmull
frstor
repnz
cmp
sbb
mov
xchg
mov
movq
adc
bound
adc
xor
xlat
cmpsb
outsb
mov
mov
sub
dec
scas
sub
push
xchg
and
in
jecxz
insb
sub
stos
dec
std
leave
mov
stos
je
add
xchg
jecxz
filds
jecxz
xchg
fiadds
cmpsb
out
cmpsb
xchg
push
repz
loope
jp
jno
or
in
notl
mov
xchg
pop
sub
jmp
cmpsl
pusha
arpl
lret
cmpsb
test
and
lcall
int3
iret
cld
xchg
in
jl
xchg
stos
data16
or
xchg
pop
adc
and
fwait
int3
flds
adc
xchg
sub
loopne
xchg
stos
daa
mov
push
add
adc
movsl
and
jb
or
xchg
dec
clc
mov
sbb
cmpl
xchg
mov
dec
andb
jecxz
movsb
inc
xor
xor
imul
cmc
pop
xchg
adcb
nop
mov
int3
pop
imul
fs
je
je
out
xor
xchg
mov
jp
test
dec
loopne
jae
fwait
mov
rcrb
sub
push
ret
and
xchg
xor
sub
stos
testl
daa
push
out
adc
adc
xchg
jle
test
sbbl
or
insb
in
test
and
ficoms
adc
sbb
inc
aas
mov
sub
pop
movsl
jbe
pop
enter
es
push
cmp
hlt
pop
aad
cmp
adc
cwtl
or
pop
add
jle
iret
adc
adc
std
sub
jg
ljmp
or
out
aas
push
and
fidivrl
xchg
adc
mov
mov
jbe
mov
adc
enter
inc
cmp
ss
and
je
sbb
and
and
sub
loop
cld
xchg
fwait
dec
outsl
or
pop
pop
mov
je
adc
adc
mov
test
mov
dec
je
cmc
mov
les
jecxz
inc
sbb
cmc
xchg
jg
popl
and
sub
rcl
nop
push
adc
lock
mov
into
dec
or
pop
push
lcall
cwtl
sbb
je
in
nop
ret
sbb
and
sahf
outsb
cltd
or
lcall
movsb
and
test
mov
xchg
sub
loop
imul
movsl
int
cmpsb
or
mov
dec
mov
gs
mov
ss
and
arpl
jecxz
into
pop
adc
test
pop
add
jbe
adc
js
test
push
imul
lret
aas
jno,pt
and
pop
cltd
mov
mov
lcall
xchg
mov
and
cmc
xchg
xlat
or
adc
js
jge
adc
mov
inc
xlat
xchg
pushf
mov
xchg
mov
fisttps
adc
lahf
fidivs
fwait
xchg
xchg
sahf
add
mov
mov
stos
jb
or
sub
mov
movsb
sub
xchg
pop
stos
pop
and
and
pushf
cwtl
add
mov
fsubr
daa
imul
jg
insl
and
outsl
dec
daa
test
or
or
mov
mov
xor
sub
bound
sbb
jle
cwtl
std
scas
in
lcall
xchg
adc
or
mov
daa
subl
cmpsl
stc
and
jecxz
orb
loopne
cwtl
push
int
cmpsl
out
xchg
cmpsb
add
nop
cltd
push
lahf
loope
adc
sbb
dec
add
or
pop
fiadds
adc
adc
daa
enter
and
or
jae
scas
or
stos
and
push
sbb
arpl
adc
cld
xchg
jp
mov
scas
sub
iret
mov
data16
enter
adc
mov
pop
inc
jg
push
xchg
adc
stos
sbb
cmpb
loopne
cmp
cwtl
dec
and
add
std
imul
xchg
rorb
cli
adc
adcl
adc
mov
jae
cmpsb
mov
fwait
ljmp
mov
push
mov
sub
xchg
cmp
adc
jnp
mov
fwait
mov
xor
pop
push
ljmp
jecxz
es
lahf
add
seta
stos
inc
dec
nop
test
pop
cmpsb
pop
and
stos
adc
or
fisubrl
sub
xchg
sbb
lahf
or
cmp
es
in
xor
mov
adc
and
jp
mov
pop
shlb
dec
fwait
push
sbb
pop
fwait
mov
xor
jmp
int3
xorb
push
pop
loop
inc
or
add
sbb
mov
js
inc
enter
nop
testl
pop
mov
lcall
and
jecxz
outsl
xchg
stos
movsl
or
mov
sbbl
in
sub
rcll
aad
cmp
shrb
sbbl
and
jae
jno
sub
mov
and
pop
into
mov
or
and
mov
xchg
fwait
cmpsl
in
loopne
dec
stos
xchg
xchg
testb
and
mov
aad
and
push
lahf
and
and
mov
and
xchg
leave
mov
setp
fstpl
ret
add
into
popa
xchg
movsl
sub
outsb
mov
loopne
sbbl
out
and
mov
add
xchg
xchg
pop
xor
test
dec
or
xor
sbb
push
xchg
add
xor
mov
cmp
mov
nop
lcall
sub
xchg
mov
loopne
mov
cmpsl
fwait
mov
lock
cmp
xchg
dec
push
or
clc
mov
filds
iret
mov
ljmp
pop
into
cmpsb
adc
jge
push
push
xchg
repnz
mov
mov
cmp
sub
movb
stos
adc
xchg
adcb
mov
pop
cmp
sub
lahf
xchg
fnstsw
pop
cmp
test
loopne
inc
cli
xchg
and
cmp
dec
mov
mov
imul
push
inc
pop
sub
xchg
add
insb
xchg
lret
test
xchg
lcall
in
adc
fwait
xchg
push
sbb
cmp
test
sbb
mov
cmpsl
cld
arpl
in
clc
and
xchg
movsb
lods
adc
adc
adc
mov
adc
shrb
mov
mov
sub
jl
std
adc
mov
adc
into
cltd
movb
mov
lret
add
mov
add
adc
adc
movsb
lcall
test
je
adc
mov
je
and
sub
dec
pop
insb
scas
sub
in
mov
mov
xchg
cmpsb
and
xor
xchg
xchg
test
adc
inc
xchg
mov
xor
adc
je
daa
mov
loope
mov
or
jg
or
pop
pushf
sub
add
fld
out
or
stos
es
sub
xchg
and
das
mov
push
loop
xor
test
lahf
xlat
loope
faddp
fs
nop
jo
adc
bound
out
jb
cmpsl
stos
cmp
mov
sbb
mov
lret
movsl
out
into
mov
or
add
lea
sbb
xchg
sbb
xchg
mov
sbb
adc
in
es
stos
nop
xlat
popf
outsl
test
nop
daa
fstpl
movsl
pop
sub
xor
adc
adc
push
scas
mov
xchg
test
lcall
push
sub
sbb
lcall
and
cmc
js
adc
xchg
jl
sarl
and
je
mov
dec
sbb
or
mov
or
pop
movsb
cmpsl
rclb
mov
lret
and
xchg
das
movsl
push
sub
push
xor
or
adc
adc
icebp
sub
mov
out
mov
negb
lahf
sub
xchg
sub
sahf
push
or
insb
negl
stos
jae
cmpsb
scas
rcrb
xchg
mov
mov
adc
test
das
push
mov
mov
js
ljmp
fldcw
cmpsb
or
jb
or
or
adc
cmpsl
adc
xchg
and
sbb
scas
bound
sub
xchg
loope
sarl
and
adc
pop
ljmp
pop
adc
mov
movsl
not
rcrl
inc
cwtl
fsubl
lods
mov
mov
and
mov
fs
fsubrl
jmp
xchg
xor
xorl
mov
outsb
xchg
insl
in
sub
jno
sbb
cltd
mov
out
xchg
pop
es
cwtl
push
test
sub
sub
xchg
xchg
adc
lods
xchg
popf
jle
cmp
rcll
test
inc
insb
mov
sub
push
testl
jg
mov
testl
add
push
inc
push
outsl
mov
and
fisubrl
setnp
pop
and
das
xchg
adc
loopne
mov
imul
lock
adc
test
es
orb
cwtl
cmpb
cltd
adcl
sub
cltd
pop
je
push
push
cmp
es
repnz
popa
xchg
fldenv
test
xchg
sbb
movsl
hlt
cwtl
mov
mov
and
add
mov
xchg
insb
xlat
jp
mov
insl
xchg
sbb
lea
or
and
mov
aam
cltd
sub
sub
mov
adc
adc
and
pop
add
int3
lretw
in
sbb
pop
jno
mov
aaa
push
jp
or
sbb
sub
cmp
adc
adc
and
adc
xchg
dec
jno
and
adc
and
and
mov
mov
or
xor
out
test
and
mov
sub
fwait
sub
adc
xor
pop
cmp
xor
outsl
enter
and
insb
mov
loopne
enter
repz
add
inc
movsb
cmp
popf
push
jp
call
sub
loope
jge
jae
or
test
dec
push
dec
leave
adc
stos
in
mov
mov
enter
enter
sbb
loope
mov
mov
lods
sbb
xor
xchg
sbbl
sub
lock
mov
scas
mov
xchg
insb
aad
add
push
pop
jae
cmpsb
outsl
in
cmpsl
adc
test
push
mov
adc
xchg
lock
fadds
cs
sub
punpckldq
stos
xchg
cmpsb
sub
fwait
shrb
xchg
sub
cmpsl
and
sub
xor
sbb
arpl
sub
mov
push
add
sahf
lods
cwtl
adc
add
pop
stc
xchg
stc
add
cltd
and
and
sub
jecxz
fcmovnu
jmp
cmp
jg
or
lea
and
mov
cmpsl
lahf
mov
pop
movsb
mov
loopne
mov
pop
xor
sub
jae
movsb
stos
adc
xchg
and
or
test
xchg
mov
sbb
xor
or
and
push
mov
int
xchg
mov
cmc
dec
xchg
das
mov
add
xchg
fcomps
jle
push
cmpsl
mov
les
decb
jle
xchg
stc
push
cltd
pop
jp
inc
es
mov
pop
loop
or
movaps
and
sbb
pop
push
bswap
repnz
stos
cmp
pop
shl
xchg
scas
sahf
cmpsb
lods
xchg
testl
mov
xchg
sahf
cld
daa
fwait
xchg
cmp
iret
mov
pusha
inc
loopne
into
xchg
pop
adc
out
xchg
mov
push
rclb
inc
or
out
movsl
cmp
mov
pop
add
dec
pop
mov
xchg
xchg
mov
xor
xor
dec
sub
lcall
mov
push
stos
and
xor
or
pushf
and
nop
mov
cltd
or
xor
cmp
jmp
fiaddl
gs
or
push
shl
mov
xchg
sub
rorb
cmp
ss
jp
pop
cltd
lret
jge
mov
push
lahf
divl
xchg
xchg
out
cmpsb
pop
add
sbb
aas
xor
nop
ficoms
movsl
aas
movsb
cmc
adc
or
loope
sub
pop
and
pop
loopne
cltd
mov
jmp
notb
and
or
sub
lahf
mov
dec
xor
mov
aas
or
sbb
leave
stos
mov
jae
enter
sti
inc
pop
cmpsl
lcall
inc
sub
fdiv
adc
out
insl
push
fs
xchg
daa
mov
xchg
in
mov
cmpsl
sbb
stc
xchg
push
stos
pop
outsl
pop
mov
mov
fs
pop
adc
dec
mov
mov
dec
lds
xchg
std
xchg
hlt
xchg
insl
jge
cld
mov
and
xor
cmpsb
cmc
add
or
sahf
daa
je
or
xchg
fucomi
mov
lahf
test
inc
les
aam
xor
inc
fldenv
add
and
ret
mov
mov
daa
popl
sarl
dec
movsb
push
shlb
pop
dec
mov
and
imul
xor
xor
in
xchg
adc
push
sub
pop
imul
sarl
fsubs
push
cmpsl
xchg
sub
adc
lcall
mov
sbb
out
push
mov
mov
mov
sub
iret
out
jae
scas
dec
daa
cwtl
popl
out
mov
and
into
mov
cmpsl
inc
in
cmpsb
call
cmpsb
stc
push
stc
xor
jge
rclb
nop
sbb
jno
adc
and
xchg
fisubrs
sub
lcall
and
cltd
push
mov
fwait
pushf
xchg
or
sbb
or
pop
inc
testl
mov
inc
sbb
aaa
movsl
push
dec
pop
stos
es
adc
mov
push
dec
or
xchg
mov
scas
repz
pop
add
fidivrl
stos
test
mov
daa
stos
es
jns
mov
add
mov
sarl
mov
out
or
adc
and
cld
pop
and
push
and
cmpsl
sbb
cwtl
loope
out
pop
xchg
xchg
test
pop
ficoms
movsb
stos
jb
and
insl
lahf
xorl
mov
push
or
sbb
mov
xchg
stos
sti
movsb
mul
sub
mov
xchg
in
int
xchg
mov
popa
in
movsb
push
movsb
xchg
imul
fbld
insb
std
and
mov
cwtl
movsb
add
lret
lock
pop
and
aam
stos
xchg
pop
jae
outsl
lahf
sbb
insl
hlt
mov
mov
push
psubb
ljmp
stos
popf
gs
xchg
sub
test
mov
xchg
and
pop
ret
mov
std
cltd
movsb
pop
adc
pop
push
cmpsb
cmpsb
mov
adc
sbb
and
mov
nop
daa
adc
es
sbb
inc
out
xchg
stos
mov
and
xor
flds
jb
xchg
mov
adc
mov
loope
dec
into
imul
jmp
mov
xchg
stos
adc
mov
js
cld
dec
cltd
and
sub
xchg
into
into
xchg
xchg
mov
jle
es
test
push
lock
xchg
inc
or
rclb
xchg
test
lret
and
sbb
mov
pop
adc
xor
rcll
stos
mov
adc
sahf
mov
sub
dec
jae
xor
sub
push
jo
fwait
mov
pop
sbb
cmc
nop
loope
mov
jecxz
pusha
mov
sbb
mov
push
mov
cld
adc
aad
cwtl
mov
pop
mov
sbb
push
sub
iret
pushf
cmp
pop
mov
xchg
adc
jbe
nop
mov
cmp
push
fldlg2
ficoms
sbb
xlat
mov
pop
mull
push
xchg
adc
xor
mov
or
cmpsb
hlt
jo
or
int3
dec
std
sub
cs
sbb
sbb
xchg
mov
scas
outsb
fdivs
test
test
xchg
stos
sbb
pop
mov
test
lahf
aas
inc
jmp
psllq
daa
add
ljmp
cwtl
fsubrs
sub
sub
scas
push
or
mov
pop
jle
add
ss
sbb
jbe
or
mov
clc
sbb
xchg
lcall
lea
fcoml
out
ret
lahf
sub
and
dec
int
out
push
dec
pop
bound
adc
fimuls
repz
mov
and
jecxz
hlt
mov
adc
fwait
sbb
test
test
sub
ret
and
push
pusha
pop
push
or
loopne
fneni(8087
sub
jae
push
adc
xor
test
mov
or
jae
adc
lret
insb
jmp
nop
in
mov
adc
fstpt
outsl
sti
pop
lcall
add
push
cmp
fimuls
mov
mov
adc
and
cwtl
daa
mov
mov
sbb
pop
fcoml
mov
mov
sub
xchg
inc
mov
das
mov
pop
sbb
cmpsb
in
cwtl
jae
xchg
movsl
cmpsb
sbb
lahf
or
add
inc
xor
xor
pop
push
enter
mov
loop
dec
lock
pop
fldcw
ss
dec
enter
adc
pop
pop
stos
xor
inc
jae
mov
out
mov
aaa
fistps
jbe
sbb
hlt
or
test
xchg
pop
lock
or
or
test
loop
sbb
imul
cld
add
pop
loope
jle
js
repz
mov
mov
mov
mov
sub
push
cltd
mov
sbb
and
test
mov
sub
mov
clc
xor
jge
adc
fwait
jb
or
and
push
xchg
stos
aad
jmp
pop
out
lods
lcall
jae
xchg
ss
push
mov
sbb
sub
xchg
cwtl
lcall
mov
jmp
jecxz
mov
sbb
or
sbb
pop
push
sbb
push
mov
ficoms
cmp
stc
sub
inc
sub
stos
call
and
or
stos
aam
pop
clc
push
or
sub
sub
mov
and
int
aaa
inc
xor
xor
sti
bound
pop
mov
xor
cmpsl
out
mov
lahf
pop
test
stc
icebp
jle
mov
test
jle
xchg
or
mov
mov
movsb
lock
rclb
ss
and
test
movsl
sub
mov
mov
decb
xchg
xchg
sub
sub
xchg
mov
mov
adc
mov
adc
movsl
cmp
insl
sbb
xor
test
stos
mov
fsubl
pushf
pop
cli
mov
sbb
and
je
sbb
gs
sub
aaa
jge
or
test
and
test
push
rcrl
pop
sub
inc
sbb
ficoml
lock
ret
jle
ret
cmpsb
or
stos
sbb
jae
cmpsl
out
xor
xchg
into
mov
mov
cmp
mov
sbb
dec
scas
sub
mov
out
lahf
mov
lcall
adc
lcall
lcall
shll
sub
test
scas
popa
sahf
cmp
fwait
xchg
and
xchg
or
cmp
rcl
or
dec
cmpsl
shrb
push
ret
mov
mov
fcom
cwtl
cmp
cmpsb
adc
pop
jecxz
add
push
loopne
jge
sub
sub
and
imul
mov
movsbl
or
xor
fdivrl
and
xor
jb
mov
shll
pop
pop
cmc
neg
divl
xchg
addr16
pop
ficoml
cmpsb
xchg
push
xor
loope
loopne
pop
shlb
push
clc
scas
sub
fisttps
cld
ror
mov
xchg
dec
loope
and
xor
adc
sbb
stos
mov
mov
lock
xor
int
xchg
mov
stos
mov
adc
jbe
and
arpl
scas
lods
xchg
pop
bt
fcomps
and
push
xchg
jo
mov
xchg
and
ret
fadds
mov
mov
xor
daa
orl
sub
sub
cmpsl
or
xchg
adc
cmpsl
xchg
push
ficoml
mov
xchg
fwait
movsb
test
mov
mov
cmp
xchg
cmpsb
aaa
mov
test
sbb
gs
xor
out
icebp
and
cmpsb
xor
dec
repz
jo
je
jbe
out
and
and
movsl
cltd
pop
pushf
xchg
push
sub
out
push
pop
xchg
fistps
andb
rcll
cwtl
imul
out
lods
xchg
and
pop
rorb
push
int
inc
mull
idivl
dec
cmpsl
in
jge
xchg
cmp
leave
cmp
inc
cmp
inc
and
subb
jbe
add
dec
cmpsl
int
xchg
mov
sbb
cmpsb
push
mov
mov
or
mov
cmp
xchg
pop
add
sbb
es
sub
xchg
scas
push
movsl
xchg
mov
dec
cmp
loope
shll
adc
rcrb
movsb
mov
adc
pop
cmpsl
das
btsl
pop
fisttpll
mov
popf
xchg
stc
icebp
jnp
lcall
dec
stos
dec
xchg
sub
jbe
or
sbb
adc
cwtl
mov
pop
cltd
jb
sbb
push
jp
pop
xchg
cli
jae
bts
imul
dec
cwtl
out
cltd
and
daa
sbb
loop
dec
jb
or
mov
cmpsl
or
daa
mov
test
stc
sbb
cwtl
mov
sbb
sub
cld
fwait
ret
xchg
movsb
mov
jnp
mov
insl
punpcklbw
push
adc
sub
and
movsb
sbb
shrl
or
lds
push
out
xchg
xchg
xlat
hlt
and
or
in
or
mov
and
test
nop
ret
mov
lods
push
xchg
mov
faddl
cmp
and
sub
mov
pop
mov
stc
cmp
daa
adc
sbb
adc
xchg
test
daa
dec
xchg
pop
lcall
mov
test
pop
mov
lds
je
cmpsl
xchg
sbb
jp
mov
test
sbb
cwtl
or
and
sub
jo
sbb
std
adc
xchg
jg
jmp
ja
dec
pop
cltd
cmp
and
icebp
sbb
dec
dec
test
and
shlb
popa
dec
mov
div
in
and
cmpsl
push
lret
stos
push
sub
daa
pop
movsl
cmpsb
fstpl
mov
or
push
addr16
imul
mov
xchg
iret
into
pop
pop
ja
cltd
ficomps
and
or
and
push
adc
xchg
adc
lcall
ljmp
jbe
cmpsb
pop
lcall
stos
scas
or
xor
sub
pop
sub
xor
xor
nop
xchg
mov
cltd
insl
in
inc
push
mov
mov
lcall
and
inc
jle
stos
cltd
mov
jbe
xlat
cmc
orl
sbb
adc
inc
cmc
push
cmovnp
mov
adc
nop
mov
rolb
dec
cmp
and
call
sub
shlb
xchg
test
sub
mov
jecxz
push
xchg
mov
mov
xchg
and
sbb
es
or
adc
xchg
sub
add
test
ljmp
xor
into
mov
cltd
xchg
xchg
call
adc
cmpl
es
movl
sub
adc
fwait
insb
je
xchg
xor
and
dec
sub
aad
add
adc
lcall
jbe
cvtps2pd
or
cwtl
push
scas
mov
fwait
adc
sub
mov
jg
or
insb
adc
and
xchg
xchg
mov
xchg
nop
cmp
daa
and
mov
test
adc
inc
and
jo
pop
pop
cmp
ss
scas
je
je
stos
int
call
xchg
lcall
xchg
pop
mov
xor
xchg
adc
adc
out
or
sbb
mov
inc
mov
cmpsb
adc
inc
pushf
lahf
xchg
test
je
sbb
push
in
xor
sbb
mov
mov
fscale
cmpsb
or
movsb
mov
popf
adc
cld
lds
mov
xchg
push
mov
jge
lds
das
fwait
cmpsb
xchg
cli
lahf
xlat
shrb
fcoml
sub
jecxz
adc
pop
cmp
jbe
push
and
fwait
push
cltd
push
cmp
jae
sub
mov
lods
xchg
and
mov
into
add
mov
mov
or
xchg
mov
cmpsb
cltd
jmp
imul
xchg
jle
pop
mov
push
sbb
adc
shr
xchg
adcb
or
mov
sbb
pop
insb
jnp
pop
setle
and
xchg
testl
scas
pushf
lods
push
adc
in
fiadds
movsb
mov
jle
stos
sbb
mov
mov
push
add
jae
adc
cld
cltd
mov
mov
cmpsb
pop
cwtl
in
inc
out
or
jae
out
adc
sub
or
aam
lahf
sbb
xor
test
dec
adc
fidivs
jae
adc
sub
add
mov
jae
ficompl
push
mov
and
in
pushf
lahf
test
mov
rclb
adc
sbb
or
stos
xor
or
andb
adc
sbb
xchg
cwtl
in
push
mov
cmc
js
cmp
iret
nop
movsl
stos
and
fsubs
test
push
sahf
dec
into
lods
sub
and
shl
cmp
mov
stc
aas
orb
xchg
stos
repz
jo
xchg
test
int
mov
mov
in
mull
testl
xchg
and
outsl
jnp
adc
sub
xchg
mov
rolb
sub
xor
lret
push
push
cwtl
sbb
daa
or
cmp
jl
sbb
lahf
pusha
mov
mov
xorb
and
loop
jge
and
push
dec
adc
aas
lahf
adc
aaa
jmp
clc
repz
mov
jo
movsb
pop
ror
jno
xchg
or
add
push
cmpsb
ds
leave
aas
pushf
call
lea
push
outsb
or
int
push
cs
rcll
stos
cmp
adc
es
stos
jno
xchg
sbb
mov
andl
inc
push
int3
enter
sbbb
jmp
jbe
sub
mov
and
scas
adc
fdivrs
loope
cld
mov
xchg
popa
test
rorb
add
in
cwtl
adc
adc
lcall
fs
xor
mov
das
aam
mov
mov
mov
cmpsb
xchg
xchg
es
xor
cmpsl
mov
push
and
pop
lcall
mov
aad
cmp
pop
and
mov
pushl
xchg
daa
cmp
leave
cltd
inc
xlat
inc
mov
sub
adc
wbinvd
xchg
pop
out
cmc
add
xchg
adc
fsts
sub
inc
mull
out
or
adc
sbb
arpl
lcall
mov
pop
sbb
and
mov
push
or
sti
ret
push
test
push
push
jg
sbb
jle,pn
aad
inc
neg
in
in
mov
and
mov
dec
fsubs
xchg
sub
xchg
add
or
test
or
mov
mov
dec
lcall
loope
ljmp
xor
xor
das
popa
lahf
sub
pop
nop
adc
sub
xor
test
dec
push
insl
fstl
fsubl
adc
call
pop
jo
xchg
sbb
cwtl
and
sub
inc
lcall
out
jno
add
movsl
mov
xchg
mov
das
mov
pop
mov
xchg
jp
fwait
xchg
jno
pop
adc
and
imull
jb
mov
loope
movsl
movsb
sub
mov
cmp
fs
xor
or
xchg
test
stos
add
cwtl
adc
mov
ljmp
lcall
or
out
test
pusha
xor
sub
cmpsb
xchg
ret
scas
sub
out
jmp
mov
xchg
mov
inc
je
sbb
and
xchg
fwait
mov
lcall
sub
mov
xchg
xlat
pushf
sub
daa
insb
adc
adc
or
adc
pop
adc
rcr
pop
inc
out
jo
xchg
xchg
cmpsl
mov
mov
mov
inc
stc
loop
jmp
xchg
bound
and
aas
sub
mov
xchg
xchg
adc
dec
xor
es
xchg
sbb
out
sbb
push
test
xor
rcrl
shll
mov
jnp
mov
mov
daa
fsts
mov
sbb
repz
mov
jle
cmp
fwait
mov
add
cmp
xchg
or
lret
mov
lcall
xchg
push
je
mov
lea
icebp
or
cmc
xchg
adc
adcb
cmp
stc
scas
sbb
mov
xchg
iret
sub
and
sbb
pop
test
iret
mov
mov
call
popa
sub
cmpsb
test
push
xchg
jle
arpl
pop
lahf
pop
nop
movsb
scas
js
sbb
adc
je
scas
mov
fisttpll
pop
test
jae
xchg
stos
pop
cmc
cmp
cwtl
rcll
push
push
ljmp
mov
bound
and
xchg
pop
push
in
scas
dec
mov
xor
mov
inc
jae
cwtl
lock
mov
ret
or
push
and
adc
neg
xor
xchg
lret
xchg
adc
and
iret
test
in
out
pop
jge
cwtl
daa
mov
sbb
nop
adc
lcall
cmpsb
cmpsl
dec
jno
mov
into
jnp
and
pop
iret
pop
mov
adc
mov
cwtl
sbb
jg
lods
inc
cld
or
mov
mov
push
lahf
xchg
mov
outsl
xchg
mov
in
and
jmp
pop
daa
mov
mov
pushf
push
data16
bound
mov
or
xchg
mov
and
xchg
mov
jb
adc
lds
and
or
ds
lahf
xchg
add
punpckhbw
lret
lret
inc
or
in
add
and
push
fdivs
sbbl
push
xchg
sub
dec
push
daa
xor
adc
popl
xchg
loop
fwait
pop
cmp
sbb
inc
jecxz
add
arpl
and
pop
int3
sahf
xchg
adc
mov
or
adc
movsb
push
dec
push
xchg
insb
daa
outsl
shrb
push
or
cmpsb
cmpsl
aad
cltd
or
mov
repz
jns
and
mov
filds
jbe,pn
pushf
loope
sti
and
sbb
xchg
and
mov
xchg
dec
sub
rol
sbb
sbb
mov
andb
int3
test
mov
xchg
xchg
sbb
mov
or
outsb
stc
notb
xchg
xor
xchg
pop
scas
ja
add
filds
stos
out
test
sub
test
jg
xchg
or
jae
movsb
mov
adc
repz
outsb
adc
sbb
stos
mov
mov
fistpll
xchg
stc
mov
add
xor
pop
repz
mov
and
xchg
lahf
fldenv
or
mov
adc
into
and
loope
mov
pop
mov
adc
jae
mov
insb
mov
sbb
and
in
mov
lahf
add
into
jmp
adc
jae
mov
sub
lret
iret
jle
add
pop
dec
ljmp
jg
in
fwait
mov
aas
insl
stos
out
shlb
fstps
dec
mull
dec
pop
fbld
and
xorb
or
sbb
cmpb
lds
rolb
jne
and
repz
or
pop
js,pt
dec
adc
pop
and
cmovo
outsl
out
inc
and
xchg
mov
mov
js
jle
jb
xchg
sbb
cld
mov
movsl
add
xchg
push
fwait
sbb
das
test
es
imul
setl
movsl
loopne
jae
outsb
jb
adc
sbb
jmp
ret
push
lcall
sbb
push
lcall
cmp
popf
nop
shrb
mov
mov
mov
aas
notl
add
adc
dec
xlat
fwait
jae
push
mov
lahf
dec
cmpsb
cmpsb
lcall
mov
test
dec
inc
mov
jne
call
xor
push
push
lods
cwtl
mov
pop
shrb
daa
cltd
xchg
sub
lahf
cmpsb
sahf
fstl
xchg
xchg
adc
sbb
sahf
in
lcall
mov
mov
cmp
adc
adc
in
push
divl
outsl
pop
cmpsb
daa
mov
cltd
int3
xor
lcall
andl
push
or
test
sbb
and
adc
out
lds
pushf
or
cmc
sub
push
jae
stos
xchg
xor
or
sbb
push
push
push
cmc
roll
das
lcall
bound
rcl
or
lds
push
addr16
sub
push
push
cmp
loopne
insb
cmpsb
and
pushf
adc
imulb
dec
cld
or
daa
ret
and
and
ret
jns
lds
and
aas
and
or
pushl
and
es
push
xchg
mov
sub
in
push
lcall
mov
in
cmp
fldt
xchg
sub
jbe
and
push
mov
adc
pop
hlt
sub
shl
sarl
mov
stos
jmp
dec
jecxz
jbe
shll
push
pop
test
int
push
jge
push
mov
and
pop
insb
subl
cmpsl
nop
push
into
scas
cwtl
sub
add
adc
les
and
adc
sbb
xchg
daa
push
adc
fldl
fst
mov
in
test
mov
sub
pusha
test
push
jns
push
mov
xchg
gs
imul
pop
push
pop
xor
pusha
sbb
mov
cmc
xchg
xchg
movsl
xor
sbb
pop
mov
std
or
stos
movsb
negl
mov
shrl
jmp
pop
mov
xchg
or
addr16
mov
push
in
jne
adc
mov
cltd
jnp
push
xchg
mov
cwtl
daa
push
xchg
and
cld
mov
sbb
loop
cwtl
xlat
mov
negl
pop
mov
inc
xchg
shl
test
push
or
fwait
jmp
sub
add
and
addr16
push
shll
jbe
and
mov
fdivp
sbb
clc
test
test
cld
mov
pop
icebp
pop
data16
inc
scas
lret
nop
adc
dec
mov
and
sub
pushf
add
pop
je
pop
xchg
dec
add
push
test
insb
stc
adc
cmc
cwtl
sub
xchg
stos
out
mov
pop
ljmp
sub
imul
sub
mov
mov
aam
and
out
nop
xchg
and
push
or
cltd
xchg
xchg
xchg
pop
cmpl
lods
call
jae
mov
xor
add
xor
mull
and
jb
insl
sub
and
dec
testb
mov
lret
loope
daa
and
pop
and
out
cld
test
push
mov
mov
stos
push
sub
adc
xor
sbb
jne
fldl
dec
and
cmp
xchg
or
mov
xchg
stos
add
mov
mov
sub
popf
in
inc
loope
cltd
js
xchg
mov
xchg
sub
iret
cmp
adc
xchg
cltd
xchg
and
sbb
mov
or
je
mov
add
mov
adc
in
sub
xlat
mov
cmc
sbb
sub
sub
or
cwtl
test
fwait
int3
inc
xor
nop
adc
mov
xor
dec
push
inc
and
call
inc
cmpsb
pop
adc
sbb
movsl
mov
cs
mov
shr
xchg
lcall
pop
cmc
xchg
and
xchg
cmp
test
loop
adc
add
xchg
xlat
jecxz,pn
rcrb
adc
add
dec
jl
stos
es
mov
or
scas
leave
xchg
sbb
movsb
pop
or
pusha
and
mov
adc
and
sahf
aaa
movsl
mov
or
add
stos
pop
jbe
ret
cwtl
outsb
lea
movsb
sub
cltd
xchg
or
xchg
das
and
daa
insb
dec
xchg
lock
and
pop
movsb
mov
adc
out
enter
adc
xchg
sub
or
mov
jp
xchg
call
xchg
adc
mov
xchg
xchg
xchg
mov
lock
sbb
or
loope
aad
fwait
stos
sbb
or
dec
adc
lgs
ljmp
mov
cmpsl
xchg
mov
cmp
jae
lock
cs
lock
fsubrs
mov
mov
cltd
sub
mov
outsl
daa
fwait
pop
push
xchg
xchg
mov
fcom
mov
movsl
push
mov
dec
jb
and
iret
adc
je
and
and
stos
push
adc
out
sub
sahf
xchg
mov
push
xchg
iret
aas
xchg
lea
insl
js
sbb
iret
mov
pop
stos
xchg
mov
mov
mov
icebp
aas
adc
add
cltd
cmp
jae
popl
xchg
rolb
scas
dec
adc
push
icebp
or
push
pop
fimuls
lcall
into
cmpsl
sub
and
mov
wbinvd
xchg
adc
and
xchg
xchg
int
sub
test
rcrl
cmp
in
mov
imul
loop
xchg
idiv
xchg
or
jne
or
orps
test
stos
es
outsl
sub
jnp
mov
jecxz
mov
dec
fimull
das
inc
leave
dec
dec
jno
nop
xchg
push
mov
mov
test
adc
loope
dec
nopl
je
sub
and
test
mov
es
xchg
mov
or
sub
out
push
fwait
jecxz
sbb
mov
stos
mov
push
adc
daa
sbb
sub
xchg
pop
in
pop
icebp
pop
xchg
or
mov
in
lret
mov
sub
sbb
sti
xchg
cli
lcall
push
test
jb
sub
jmp
xor
push
xor
xchg
fsubrs
mov
sub
popf
sahf
mov
lcall
stos
sbb
sbb
jmp
sub
cwtl
mov
into
mov
mov
jp
mov
jno
mov
pop
test
mov
and
jo
lahf
push
fisubl
pushf
cwtl
fcomps
es
cmpsb
pop
movsb
scas
mov
movsl
pop
icebp
repz
or
xchg
mov
cmp
pop
mov
add
scas
adc
push
sub
add
es
orb
sbb
pop
je
jae
test
mov
cld
sub
inc
cmc
popa
pop
es
and
sbb
xchg
adc
mov
mov
dec
mov
mov
sbb
in
push
mov
cmpsl
setne
xchg
fwait
sub
cmp
and
movsl
fists
mov
sbb
xor
push
and
dec
xchg
sbb
stos
add
and
mov
cmc
pop
cmp
lahf
and
xor
pop
adc
and
mov
sub
sbb
stos
pop
xchg
cs
enter
lahf
adc
xchg
stos
lea
cwtl
lahf
mov
mov
fbld
adc
or
sub
les
push
movsb
lret
fs
mov
or
fstl
lcall
outsl
xchg
es
push
fs
cwtl
push
mov
or
jno
push
adc
add
lock
or
dec
xchg
mov
add
and
push
es
dec
andb
ss
cld
lcall
pop
in
testb
and
sub
adc
sbb
dec
je
repz
or
xchg
lcall
xchg
mov
mov
cltd
mov
lcall
ljmp
rcrl
lahf
ljmp
push
data16
aad
fs
mov
push
subl
mov
adc
jmp
mov
orl
and
push
insl
lcall
add
fisubl
scas
xlat
xor
dec
and
movsl
inc
sub
sahf
push
stos
push
adc
xchg
adc
nop
in
and
jecxz
jmp
in
sbb
std
mov
out
push
mov
lret
xchg
and
pushf
repnz
in
or
xchg
pop
cmpsl
dec
sub
sub
cmp
mov
mov
cltd
mov
inc
lcall
nop
and
adc
adc
sub
into
outsl
shlb
pop
lea
arpl
mov
nop
sbb
cmpsl
jb
sbb
xchg
cmpsb
fwait
push
cltd
mov
and
sahf
or
cmpsl
imul
xor
orl
xchg
jo
or
dec
aas
cmpsl
pop
jmp
adc
ss
xchg
gs
xchg
movsb
out
cwtl
lock
xchg
mov
test
jmp
cli
lock
sbb
andb
das
push
xchg
xchg
xchg
daa
sbb
ds
mov
sbb
jb
daa
sub
and
add
adc
inc
lods
sub
jae
pop
xor
mov
xor
lcall
mov
xchg
outsl
hlt
movsb
xchg
push
jg
pop
cmp
push
sbb
lods
inc
adc
push
fsubrs
es
push
xchg
daa
fidivrs
sub
mov
sbb
fst
inc
xor
and
adc
cld
aad
mov
mov
lock
xchg
insb
push
fwait
lahf
sub
faddp
cltd
xchg
mov
lret
sub
daa
lret
or
clc
xchg
scas
inc
sub
sbb
ljmp
push
pusha
mov
xchg
stc
iret
mull
and
sub
cld
mov
jbe
mov
sbb
call
hlt
or
adcb
mov
mov
and
adc
mov
mov
xchg
enter
cld
sub
lods
push
stos
jp
and
xchg
stos
push
mov
out
mov
xchg
dec
testl
popf
ret
iret
aad
jae
lock
scas
ret
mov
cwtl
jp
xchg
pop
je
adc
jns
and
and
cmpsb
sbb
es
fs
and
xchg
sbb
add
xchg
xchg
pop
and
xchg
push
sub
mov
ret
sub
int3
and
loop
pop
or
inc
mov
inc
scas
push
xchg
lcall
mov
cmc
adc
mul
cmpsb
xchg
mov
imul
scas
pop
and
leave
je
pushf
push
lock
mov
pop
pop
mov
xor
push
mov
mov
test
leave
inc
and
stos
lcall
sub
fcompl
pop
clc
cwtl
rcrl
rclb
aad
adc
into
int3
sub
jno
and
sub
test
loopne
sbb
xchg
adc
cmpsb
cli
mov
adc
test
sbb
or
or
mov
stos
adc
lcall
mov
add
cld
and
pop
notl
je
xor
decl
cmpsb
out
pop
repnz
mov
test
and
pop
sbb
xchg
xchg
lret
and
mov
push
or
xchg
stc
xchg
ret
std
xor
xchg
xchg
sbb
lds
push
je
stos
jae
imul
loope
mov
test
or
stos
nop
scas
subb
push
cld
fcoms
cmc
lea
in
dec
je
xchg
xchg
jle
inc
dec
bound
shl
fsts
sub
sbb
pop
pop
mov
adc
jno
fwait
into
jp
xchg
bswap
mov
or
pop
je
stos
push
mov
cwtl
sub
sub
inc
adc
movsb
mov
xchg
and
test
lods
sbb
daa
fiadds
mov
loope
in
xor
sbb
adc
xchg
cmc
test
pop
mov
mov
and
out
mov
or
sbb
fwait
les
lahf
bound
call
iret
dec
dec
in
test
and
rclb
in
scas
xchg
in
out
xchg
insl
jno
push
mov
lods
adc
mov
xchg
adc
adc
mov
mov
sahf
cmp
mov
stos
and
mov
inc
mov
js,pn
je
stos
out
add
cmpsb
nop
pop
lcall
jbe
lahf
and
jae
jae
out
jp
mov
ljmp
mov
test
movsl
lcall
and
push
loopne
dec
xchg
iret
pop
mov
mov
xchg
add
or
pop
xchg
push
cmc
cmp
je
mov
or
mov
stos
stos
jle
and
outsb
je
and
dec
movsb
add
fsubl
adc
sub
push
into
lcall
xchg
mov
popf
cmc
mov
jae
stos
and
xor
jmp
jp
xchg
scas
add
mov
push
lahf
sub
mov
pop
sub
xchg
pop
jmp
push
adc
adc
lret
sbb
loope
adc
sahf
push
adc
xchg
ficoms
cwtl
mov
adc
inc
sub
xchg
push
pop
mov
sbb
addr16
cmp
or
iret
mov
mov
push
enter
mov
and
and
xchg
or
push
cwtl
lcall
movsb
mov
test
or
or
push
shll
mov
and
test
popf
loop
or
sbb
test
jno
xchg
lock
sub
cltd
or
mov
daa
xchg
test
in
outsl
cmp
sub
and
sub
mov
xchg
sub
rcrb
movsb
std
sub
push
or
imulb
flds
adc
outsl
mov
pop
xchg
daa
inc
push
adc
rorl
cmpsb
popf
stos
clc
aam
and
pushf
mov
stos
or
pop
cwtl
lods
inc
jno
shrb
jmp
mov
or
cmpsb
cmp
mov
pushf
or
test
adc
and
fmul
jo
sub
mov
sbbb
lahf
jle
pushf
es
adc
shlb
sub
adc
xchg
dec
cltd
adcb
mov
js
rorb
cmpsb
mov
inc
cwtl
cmc
jno
or
scas
inc
stos
dec
xor
fisubrs
mov
aas
lock
sahf
js
movsb
dec
ss
jae
mov
push
popa
jg
shll
jb
or
push
xchg
movsl
lret
push
stc
xchg
jbe
sub
ffree
mov
adc
xchg
pushf
push
lcall
cs
mov
push
outsl
rcrb
stc
stos
dec
push
xchg
stos
repz
and
inc
scas
dec
lahf
push
shrl
add
cmpsl
adc
iret
ret
and
or
sbb
lret
fabs
int
popf
pop
test
xor
cwtl
jno
or
loopne
mov
or
adc
dec
lods
or
xchg
daa
sbb
insb
mul
divl
ret
jo
adc
adc
insl
dec
jnp
mov
xor
in
or
out
in
stc
sbb
jo
sbb
inc
push
cltd
ljmp
mov
pop
loopne
adc
cs
sbb
or
daa
pop
xchg
sub
and
xor
push
xchg
fisubrl
cltd
mov
pop
or
push
mov
pop
sub
pmulhw
cmc
nop
and
jbe
and
sub
nop
bound
push
cmp
xchg
xchg
lahf
xchg
testl
sbb
nop/reserved
stc
ljmp
xor
int
js
adc
push
into
adc
xchg
xchg
mov
mov
je
and
xchg
pop
dec
rcll
stc
xchg
adc
xor
cltd
sub
out
sub
mov
or
adc
repnz
and
xor
outsl
jns
cmpsl
and
sub
push
sbb
cs
testl
xchg
cmpsb
aas
inc
mov
lcall
dec
clc
ss
inc
pop
cs
sbb
nop
dec
mov
adc
cwtl
rcr
xor
lret
stos
dec
lcall
pop
test
pop
adc
test
loop
data16
loope
xchg
popf
int
testl
jle
es
icebp
movsl
xchg
pushf
xchg
sbb
enter
scas
adcl
mov
or
xchg
or
out
pop
jbe
xchg
insl
jno
and
xor
aam
xchg
fcomps
das
push
pop
sub
es
js
cli
js
adc
mov
dec
xor
push
xchg
jbe
and
xor
xchg
mov
mov
xchg
movsb
cmp
pushf
jae
adc
and
or
or
push
xchg
out
adc
xchg
and
xchg
sub
adc
inc
movsl
mov
stos
push
stc
and
test
int
adc
pushf
dec
mov
jae
mov
sub
lahf
jmp
inc
and
mov
sbbl
pop
std
mov
stc
cmpsl
lock
and
xor
push
mov
xchg
xchg
sbb
cs
sub
push
je
sub
bnd
push
lahf
insl
je
xor
leave
jae
mov
or
cmpsl
jge
or
lds
jbe
test
inc
test
test
stos
mov
dec
mov
sbb
inc
stos
outsl
inc
cwtl
sbb
ss
movsl
and
fmulp
sub
ja
xchg
push
xchg
xor
cmc
clc
sub
movsb
movsl
arpl
lret
xchg
and
adc
es
gs
das
mov
cltd
scas
roll
sub
mov
test
daa
stc
add
pop
xchg
mov
data16
fstpt
sbb
imul
jecxz
pop
push
or
ficoms
push
jno
push
adc
jp
push
jp
add
stos
xchg
push
rorb
out
xchg
stos
mov
into
loop
xchg
or
rclb
out
sbb
hlt
sahf
clc
and
push
ret
out
lock
incl
aad
xchg
inc
cli
xor
and
testl
daa
call
xor
jno
and
cmpsb
scas
outsl
xchg
sub
stos
xchg
ret
imul
cmp
xor
icebp
mov
bound
pop
movsl
xor
mov
cld
pop
lds
test
cmp
nop
lods
cwtl
mov
sub
add
sub
stos
mov
aas
mov
push
mov
stos
mov
stos
sub
mov
mov
stos
pushf
xlat
mov
stos
mov
stos
mov
aas
mov
add
mov
jmp
mov
stos
mov
aas
mov
push
mov
stos
mov
stos
sub
mov
mov
mov
xlat
mov
stos
mov
stos
mov
idivl
add
mov
and
cmpb
sbb
jnp
xchg
jb
cwtl
adc
cltd
sbb
out
js
adc
or
push
xchg
xor
lcall
xchg
mov
cmpsb
xchg
lcall
pop
pop
stos
lahf
pop
sub
test
sbb
lret
lcall
sub
mov
or
lahf
je
sub
cli
push
lea
ds
pop
and
stos
sub
popa
or
and
mov
push
dec
xchg
push
pop
jg
or
stc
add
adc
jo
mov
or
out
xchg
fwait
adc
test
sbb
test
rol
clc
adc
int3
xchg
mov
out
add
dec
lahf
or
mov
les
call
jno
and
mov
xchg
lcall
mov
jge
mov
stc
es
fnstsw
mov
daa
clc
add
mov
shll
or
xchg
aas
jo
jge
push
pop
cmpsl
outsb
dec
jns
nop
andb
sub
nop
mov
andb
fs
mov
loopne
imul
aaa
loopne
inc
int
rcl
cmp
sahf
out
mov
int
scas
pop
lcall
mov
incb
leave
pop
pop
insb
xlat
cmp
jb
and
mov
and
sub
jbe
leave
jl
std
out
xchg
fwait
outsb
lcall
mov
jae
inc
addb
inc
mov
mov
out
lret
repnz
es
mov
dec
inc
mov
divl
scas
add
test
rcl
xor
outsb
div
xchg
sbbb
enter
subb
xchg
jo
and
mov
and
sub
mov
sub
stos
mov
fiadds
or
stos
es
mov
push
pop
loopne
aad
aaa
es
inc
loope
pusha
xchg
loopne
xchg
mov
scas
add
orb
rorb
cmp
inc
and
mov
fld
loopne
mov
test
mov
mov
inc
incl
push
pop
std
js
rclb
ss
sbb
mov
ds
shrb
stos
data16
mov
cmp
push
mov
adc
into
and
xchg
mov
jne
sub
mov
mov
adc
int
test
jbe
pop
int
and
stos
adc
pop
mov
stos
jo
mov
xchg
xor
or
and
mov
and
scas
cli
stos
sbb
xchg
sbb
jmp
data16
movsl
mov
cmp
sub
or
xor
fsub
stc
pop
in
fldenv
icebp
ss
jle
cwtd
call
ss
sub
fiaddl
in
lahf
mov
jecxz
and
xor
mov
sub
or
add
mov
jae
ret
mov
or
cmpsl
mov
sub
and
push
es
cmp
mov
lea
jb
decl
call
xchg
inc
out
xchg
loop
aas
mov
mov
add
add
dec
inc
repz
test
xchg
pop
cs
jg
cltd
xor
or
call
mov
mov
aaa
xlat
mov
iret
int3
outsl
cld
hlt
clc
sbb
push
cld
movsl
cld
xchg
jnp
jno
dec
adc
dec
and
mov
or
test
jae
decl
les
jg
sbb
repz
mov
or
inc
clc
sbb
je
mov
mov
clc
mov
int3
mov
loopne
xor
roll
push
popf
vpmacssww
xchg
rorb
sbb
cmp
mov
xor
xchg
cmpsl
xor
mov
jg
sub
and
popa
xchg
jg
sub
popa
je
or
jp
mov
or
sub
popf
popl
mov
jp
mov
mov
popa
or
xchg
cltd
popl
mov
or
in
int3
or
popa
mov
xchg
cltd
popl
out
jp
or
mov
loopne
push
jg
sub
push
adc
mov
xchg
rorl
dec
test
push
mov
mov
or
mov
pop
sbb
dec
xlat
sbb
lret
pushf
sbb
arpl
inc
orb
nop
sbb
adcb
xchg
fwait
xchg
adcb
xchg
adc
mov
insl
add
mov
pop
enter
popf
gs
aas
sub
test
push
mov
andb
mov
sbbb
xchg
inc
cwtl
roll
inc
std
loop
inc
jp
testl
popf
mov
cltd
pushf
or
int3
adc
jne
repnz
sti
pushf
inc
stc
xchg
push
notl
cmc
test
cwtl
inc
icebp
xchg
push
out
adc
in
sub
and
fdivrs
in
and
push
cmp
sbb
and
push
cmp
or
and
push
cmp
or
and
push
pop
out
adc
and
pop
xchg
in
xchg
xchg
pop
mov
sbb
je
mov
pop
dec
jg
sub
inc
out
daa
fcomps
sub
xlat
sub
mov
rcll
out
mov
or
int3
pop
aaa
aam
rclb
call
pop
sbb
lahf
add
popa
sub
test
mov
int3
mov
loopne
or
cld
inc
xchg
xorl
cmp
test
xchg
cmp
shll
mov
rclb
inc
mov
aad
inc
pop
jle
test
and
and
sbb
mov
int3
xchg
loopne
push
in
pop
xor
pop
push
jg
sub
je
pop
popf
xchg
pop
insb
rolb
popf
arpl
inc
and
add
inc
xchg
adcl
enter
mov
popa
mov
pop
lods
mov
stos
scas
inc
sub
cmp
add
mov
mov
loopne
push
jg
sub
push
jg
sub
mov
sub
aaa
rcr
fmull
pop
mov
divl
jp
cltd
mov
push
test
rcrl
fsubs
in
cmp
lahf
popf
pushf
or
or
jg
pop
or
movsl
or
cmpsb
and
pop
loop
rol
lcall
dec
orl
xchg
mov
es
add
stos
mov
mov
popf
sub
mov
scas
pushf
push
xchg
mov
fists
xchg
dec
add
jecxz
push
mov
push
popf
push
pop
test
repz
aaa
mov
test
clc
popa
mov
adc
cmp
mov
dec
movsl
push
test
push
cmc
les
xor
sub
mov
push
xchg
push
cmc
mov
mov
xchg
add
mov
mov
cld
outsl
jo
jno
xor
popf
out
cltd
aas
xor
and
stos
test
add
cmp
xchg
cmc
adc
mov
test
add
jns
pop
incb
mov
sbb
push
jno
cld
sbb
mov
mov
repnz
xchg
add
lcall
xchg
and
push
add
pop
push
add
das
test
or
mov
mov
mov
addr16
push
pushf
adc
inc
or
stos
out
and
bound
divb
sbb
shll
dec
and
aam
loopne
mov
or
mov
push
decl
mov
push
sub
mov
rep
mov
xchg
cmc
mov
sti
sahf
add
mov
pop
xchg
mov
xor
lods
xor
push
pop
mov
adc
scas
xchg
pop
ja
sbb
lock
nop
or
mov
cmp
mov
rcll
out
add
int3
adc
lcall
arpl
in
mov
test
mov
cmp
sbb
lods
push
xor
cmpsb
mov
mov
push
xchg
rorl
lods
and
test
mov
xchg
pop
xchg
pop
cmpsb
lock
lods
gs
jp
ret
fcmovu
fstpl
push
andb
mov
or
repz
mov
incb
dec
arpl
mov
mov
ret
fdivrs
lret
xchg
dec
vsubps
loop
cltd
dec
mulb
loop
addl
mov
ja
imulb
or
sahf
shrl
ret
mov
ret
out
jl
push
cmp
repz
cmc
fidivrl
aad
mov
cmp
xor
adc
mov
mov
xchg
in
mov
xchg
mull
addl
mov
add
or
ret
rcll
rorb
or
jl
mov
and
xchg
mov
call
xchg
lea
sti
rclb
rorb
inc
nop
xchg
lds
mulw
xchg
movsb
mov
lods
shr
or
cli
mov
cli
xchg
lds
cmpl
push
adc
leave
sbbb
xor
scas
jle
test
movsl
adc
out
cmpsl
push
movb
movsb
leave
lods
sub
adcl
roll
mov
mov
pop
mov
lea
aam
xchg
mov
mov
stc
sbb
or
mov
xchg
lcall
pop
mov
mov
movsb
cmp
mov
cmp
hlt
inc
and
mov
xchg
mov
mov
mov
outsl
scas
clc
mov
lahf
pop
or
repnz
stc
mov
sub
loopne
and
xchg
mov
xchg
mov
mov
stos
sub
and
xchg
or
call
push
shlb
sbb
cwtl
xlat
xchg
xchg
cmp
repz
cs
daa
aaa
xchg
out
sub
subl
lret
aas
cmpsl
into
fistpl
fs
xchg
or
sarl
test
pushf
xchg
pusha
sub
xchg
mov
and
jg
testl
shl
aad
sbb
lock
pop
outsl
sti
xchg
imul
lcall
loopne
loope
scas
pushl
jbe
mov
sub
pushf
mov
or
mov
mov
sbb
inc
scas
loope
rcr
sahf
sub
mov
mov
jecxz
addl
adc
not
xchg
repz
je
mov
lods
mov
mov
adc
xor
jl
roll
imull
or
sbbb
ret
nop
imul
test
out
push
in
mov
lahf
aam
xchg
cld
fwait
mov
mov
mov
cmc
ljmp
adc
mov
cmpsl
fimuls
mov
lret
cwtl
add
mov
dec
mov
cltd
xlat
sbb
clc
test
shrl
dec
sbb
movsb
jo
enter
movsl
lods
mov
fstl
lods
mov
mov
sahf
cmp
movsl
cmpsb
fsts
xchg
enter
dec
xchg
push
push
sub
mov
or
mov
xchg
out
adc
sub
ret
nop
mov
sub
sahf
adc
ja
scas
jle
je
mov
adc
xchg
push
mov
or
out
push
and
cmp
mov
xchg
aam
mov
out
mov
mov
mov
jno
scas
cmpsl
ja
mov
lds
or
ljmp
out
xchg
pop
or
rorl
or
push
inc
sub
mov
sbb
testb
loope
scas
pop
cmpb
ljmp
sbb
sbb
in
xchg
cmp
dec
mov
and
sub
call
test
push
xchg
jg
out
pushf
and
loopne
mov
sbbb
loope
cli
lahf
jle
mov
mov
xchg
int3
loope
aas
mov
das
mov
pop
loope
add
fwait
ret
scas
mov
stos
jno
push
aaa
adc
fistpl
adc
inc
rep
cld
loopne
cmp
lcall
testb
mov
xchg
cli
enter
push
sarl
mov
or
int3
in
aas
mov
dec
pushf
sub
sub
mov
and
movl
cwtl
mov
jmp
mov
in
aas
mov
mov
fnstenv
movsb
lahf
je
and
lods
xchg
aam
mov
adc
pop
mov
mov
call
aaa
jp
ja
ss
add
pop
dec
cld
orl
gs
neg
mov
xor
add
leave
add
mov
push
add
lret
mov
rolb
stc
lret
mov
dec
lods
popa
leave
enter
add
xchg
fdivl
popf
add
or
cmp
stos
xlat
mov
or
int
leave
mulb
mov
stos
inc
pushf
sub
call
aaa
mov
cmpsl
daa
mov
out
sub
add
in
adc
stos
sbb
int
xchg
movsb
cld
rorb
movsl
das
push
push
or
stos
int3
dec
popl
scas
je
pusha
int
repz
movsb
int
fimuls
mov
mov
enter
jg
mov
push
push
int
testb
jns
mov
lock
mov
adc
and
int3
data16
cs
add
add
mov
mov
jb
xor
loope
xlat
xlat
xchg
xchg
incb
mov
add
add
mov
enter
insl
stos
lret
loopne
in
mov
push
lret
les
lret
loopne
into
loopne
test
addr16
fnstcw
lock
mov
or
test
mov
mov
out
push
rcll
cmpsb
and
popa
or
fwait
mov
mov
negb
mov
mov
ficoms
lret
sbb
push
ficomps
mov
leave
leave
sub
lods
mov
shrb
sbb
mov
mov
movsb
mull
ss
dec
mov
sbb
sbb
adc
pop
hlt
nop
xchg
xor
adc
popa
cmp
mov
xor
or
sahf
mov
call
cltd
aad
mov
xchg
cmp
sub
push
testl
or
test
movsb
push
bound
fbstp
push
mov
mov
sbb
and
hlt
lahf
ljmp
sarl
jg
clc
or
fmul
fnsetpm(287
mov
and
sub
movl
cld
into
arpl
mov
and
and
pop
fbstp
push
clc
enter
lea
mov
out
movl
stos
clc
out
sarb
addr16
xor
push
fwait
mov
out
push
mov
add
xor
scas
push
iret
mov
fdivr
or
mov
mov
cmc
mov
cmp
add
or
lods
xchg
lock
xchg
cmp
loopne
sete
stos
cmp
orb
lea
cmp
mov
sub
cmp
enter
out
stc
sbb
xchg
push
jo
push
mov
xchg
repz
test
sbb
sbbb
mov
clc
in
dec
int
cmpsb
xchg
test
mov
push
mov
push
fisubs
int
push
aas
movsl
rcrl
lcall
pushl
mov
mov
or
testl
in
das
cli
xchg
sub
mov
xor
cltd
mov
out
lcall
xchg
mov
int3
mov
das
clc
sbb
aad
call
sub
lcall
leave
in
stos
aaa
mov
xor
fstpl
filds
mov
jns
cwtl
gs
sub
xchg
fcoms
jbe
mov
mov
xchg
test
mov
mov
test
sub
lds
stc
and
int
mov
xchg
cmp
mov
sbb
pushf
ret
or
lods
adc
xchg
movsb
or
xor
loopne
pop
pusha
lods
mov
mov
aas
mov
push
push
movsb
leave
into
cmp
or
or
sbb
std
jle
out
push
pop
dec
test
xor
sbb
loop
push
xor
xchg
and
test
dec
mov
mov
popf
or
pop
mov
mov
xchg
or
dec
test
in
les
add
and
sub
rolb
fisubs
bound
imul
adc
fldt
rorb
mov
xchg
sub
aam
or
faddl
jmp
fistl
in
movsl
or
add
mov
lods
mov
jp
jg
push
out
xchg
mov
adc
add
divl
sub
lods
call
xchg
imull
mov
mov
xchg
popa
jmp
or
add
push
and
push
xor
loopne
inc
jmp
dec
cmc
out
pop
imulb
stos
add
or
push
mov
xchg
imul
jno
andl
sar
push
mov
ljmp
pushf
mov
xchg
call
pop
int
rcr
rcl
jecxz
inc
lahf
sub
push
mov
clc
stos
fnstenv
lret
mov
lea
lds
bound
rorl
enter
lods
mov
imul
or
shr
mov
stos
loop
jmp
test
outsl
lds
aas
sub
xchg
cmp
sub
mov
lahf
lods
lret
pop
jmp
mov
xor
dec
xchg
sub
out
sub
mov
adc
mov
shll
das
fwait
scas
cmp
mov
pop
mov
fists
cmp
dec
push
mov
adc
cmpsb
inc
adc
xor
jmp
mov
pushf
cmpsl
xlat
mov
mov
lods
adc
dec
sbb
xor
mov
movsb
push
push
subl
js
stos
out
lahf
or
negb
faddp
rcr
mov
cmpsl
movsb
sub
mov
xchg
jmp
test
mov
lods
jmp
shll
xchg
aas
xchg
mov
and
lods
loop
js
call
ret
cmpb
pushf
and
push
fidivs
jecxz
adc
clc
mov
push
jg
mov
enter
movsl
xchg
xchg
sbb
xchg
adc
div
push
mul
loope
aaa
aam
add
jmp
xchg
add
cmpsl
mov
xor
jl
in
xor
mov
ss
pop
dec
lods
push
mov
pop
repnz
xchg
cwtl
sbb
and
cmp
lret
shr
movb
pusha
movl
pushf
call
jmp
push
jmp
movl
movw
pusha
push
movb
lea
jmp
cmp
call
movl
call
pusha
movl
call
pop
mov
sub
cmpsl
fcomp
mov
std
mov
sbb
negb
sub
sub
setle
jmp
pop
and
rcrl
test
lea
pop
push
jns
stos
insb
push
adc
pop
nop
ja
in
daa
sbb
iret
cmp
loope
inc
mov
or
lret
dec
adc
cmpsl
movsb
adc
incl
rcll
dec
inc
cmpsb
insl
push
xor
out
outsb
into
mov
fsubl
jp
arpl
frstor
pop
cmc
sub
fistl
or
test
jno
mov
clc
mov
je
sub
aam
test
jle
rep
sbb
mov
and
mov
shlb
inc
dec
je
sbb
mov
cwtl
jb
int3
xchg
fimull
mov
sub
sbb
lahf
cwtl
jle
adc
loopne
mov
pusha
lcall
mov
push
pusha
rol
jmp
vpavgb
adc
dec
sbb
mov
jae
sbb
lahf
gs
jne
mov
cmpsb
pop
sbb
xlat
jb
divb
jne
gs
and
out
aam
xor
popf
sbb
adc
dec
sub
mov
push
pop
adc
and
stos
movsl
ds
shrb
rcll
repz
out
std
lea
sub
sub
fidivrl
andb
add
dec
fsts
add
and
dec
ja
fmulp
mov
jno
mov
jl
stos
int
ret
aam
movsb
cmp
adcl
into
mov
xlat
aad
call
loop
fdiv
and
push
imul
mov
xlat
and
mov
std
add
rorl
jns
inc
adc
shlb
test
jno
mov
push
xchg
jl
mulb
int3
int
lcall
push
and
lret
inc
push
jmp
fs
mov
loope
push
mov
xor
jge
cmp
in
incl
stc
mov
add
jmp
mov
inc
xor
cwtl
verr
jno
mov
cld
lea
jb
pushf
cmp
pushf
pusha
pushf
lea
jae
and
rol
shld
mov
shrd
mov
bsf
mov
bt
sub
pushf
pusha
cmc
repnz
call
lea
jne
movsbw
stc
stc
rcl
mov
rcl
sub
movsbl
mov
pushf
sub
clc
pushl
popl
stc
test
cmp
push
mov
lea
ja
xor
inc
sub
setae
rcl
push
add
add
not
shl
shr
mov
test
stc
mov
pusha
repnz
call
stc
popfw
pusha
jmp
pusha
lea
jne
movzbl
movb
mov
call
lea
jb
push
pushl
ret
lea
bswap
push
movzwl
movzbw
pushf
lea
not
lea
movw
mov
movzbw
pusha
mov
movb
push
call
sarb
adc
or
and
jo
xchg
data16
add
inc
cmp
les
inc
sarb
or
cmpsl
push
shlb
xor
xchg
mov
jae
loope
add
add
xchg
es
and
jae
xchg
ss
cmp
inc
lock
das
jb
lahf
out
sub
sti
push
sub
fwait
mov
add
xchg
xor
mov
testl
cmpsl
bound
imul
jno
cmpsl
movb
adcb
ret
sarl
jnp
jno
ret
sub
mov
inc
jnp
sbb
ret
insl
mov
add
add
ret
mov
in
hlt
sarb
jbe
dec
mov
add
cmp
imulb
je
jg
mov
fwait
lcall
sti
sub
ret
in
pop
outsb
inc
cmp
jae
lahf
cmp
or
sar
add
dec
std
ret
jnp
pop
jb
xchg
sar
xor
mov
cwtl
push
cmp
cmp
push
jo
xchg
or
pop
outsb
inc
mov
xchg
or
sub
xchg
mov
pop
les
sarb
and
xchg
push
out
cmpl
inc
cmp
add
ret
mov
mov
xchg
jbe
mov
repnz
sti
iret
aas
jb
lahf
mov
mov
and
inc
pop
jo
xchg
mov
inc
mov
xchg
mov
sar
push
jno
xchg
lcall
mov
mov
add
cmp
sbb
mov
mov
push
inc
jnp
or
xchg
sub
pop
outsb
add
add
ret
pop
imul
sarb
or
insb
in
xlat
cmpb
ljmp
orl
les
outsb
aaa
or
or
mov
xor
sub
or
xchg
js
and
sbb
sub
pop
and
jne
cmp
test
and
lea
je
and
stos
fst
or
jl
sub
ljmp
icebp
push
outsb
inc
jg
call
cmp
test
int
and
xor
add
out
dec
shll
aad
mov
mov
adc
imul
and
jl
roll
cmc
fsubrs
mov
jno
mov
insb
addb
inc
in
jp
inc
pop
add
cmp
pushf
arpl
outsb
mov
adc
add
fdivrs
sbb
les
in
cwtl
pop
xchg
mov
or
jecxz
and
xchg
mov
jge
mov
push
rolb
sbb
push
fs
js
insl
out
leave
and
or
push
cmp
add
js
jns
mov
sbb
cmpsl
aas
fsubl
push
cmc
lds
mov
ds
xchg
imul
sbb
mov
or
hlt
adc
jmp
xchg
jecxz
jno
mov
pusha
mov
data16
fsubrs
ja
xor
subl
mov
out
or
inc
test
cmpsl
arpl
sti
test
out
jl
inc
movsl
add
cmpsb
nop
mov
and
int3
in
rol
sbbb
mov
xchg
aad
out
pushf
scas
out
push
sub
gs
rcrb
cs
mov
mov
jno
mov
sbb
adc
lea
call
pusha
movw
call
lods
lock
xchg
cs
mov
out
cmp
push
fcoms
je
push
sysexit
ss
mov
into
lods
sbb
dec
addr16
push
pop
popf
jae
loope
pand
jecxz
add
or
rorl
out
in
and
sub
jmp
xchg
lahf
dec
xchg
fldt
fsts
mov
aas
fwait
adc
aaa
mov
mov
xor
lds
aad
ss
inc
rorb
neg
xchg
out
repnz
jmp
push
clc
ret
jmp
movl
lock
pop
and
dec
arpl
sarl
into
lret
ret
mov
pop
int
shlb
cli
enter
fists
sub
jae
mov
mov
adc
test
and
push
leave
lcall
hlt
rclb
mov
bound
arpl
ficoms
fsubr
push
jmp
flds
icebp
xor
mov
or
sahf
gs
cmpsb
lea
push
cmc
icebp
add
inc
pop
mov
or
xchg
cmp
jnp
lods
xor
mov
push
arpl
lret
imul
adc
mov
dec
adc
mov
dec
or
cld
shr
pop
xor
and
pusha
pushl
ret
and
out
jp
mov
mov
push
into
cwtl
jo
adc
stos
fldcw
fisubrs
dec
push
mov
mov
push
mov
mov
addr16
loope
xchg
clc
outsb
sub
dec
xorl
sub
dec
fs
rorb
out
mov
call
js
cli
call
mov
xchg
ljmp
jbe
inc
sbb
dec
fsubr
adc
int3
and
pop
xchg
fbstp
jbe
mov
scas
mov
and
test
lea
js
movb
lea
jmp
jne
enter
aaa
push
pop
mov
mov
insb
and
movsb
outsb
sahf
jnp
ljmp
pop
jne
jecxz
mov
aas
xchg
outsb
lret
mov
in
inc
mov
mov
mov
or
in
cli
inc
mov
je
lds
shll
out
sarb
lret
jo
jno
cmp
add
into
notl
pop
das
add
lods
push
arpl
add
mov
call
movl
pusha
push
movb
lea
jmp
movl
mov
lea
jmp
pushf
not
lods
call
lea
lea
push
mov
push
bswap
movzwl
lea
jg
push
mov
lea
call
aas
sub
call
daa
pmulhuw
sub
pusha
inc
xor
adc
dec
and
adc
bswap
mov
push
jno
lods
xchg
xor
mov
jmp
stos
jmp
jo
jb
bound
test
jecxz
push
push
cmc
enter
or
lea
jb
sub
and
sub
sbb
mov
adc
repz
xchg
adc
daa
in
notb
lods
inc
ret
call
adc
cmpl
outsb
bnd
mov
repz
jl
sub
lea
rcll
in
cmc
cmp
sbb
sub
xchg
mov
es
lods
test
xor
xchg
xchg
cmp
cmp
or
test
jnp
add
sar
mov
xchg
inc
mov
das
cmc
icebp
mov
js
sti
pop
push
cmpb
ds
xor
shrl
fsubrl
stos
ja
loope
and
dec
xchg
xchg
jge
es
mov
cmp
push
imul
lcall
js
shlb
insb
dec
faddl
out
fildl
icebp
mov
pop
xor
repnz
cwtl
mov
repnz
repnz
aaa
call
xchg
ljmp
jmp
subl
push
xor
js
jle
movsb
lcall
sbb
stos
mov
add
lods
ja
fstps
xor
cli
or
or
mov
cmp
dec
inc
and
or
stos
fsub
ss
push
jmp
ljmp
sbb
pushf
dec
and
mov
cmpsb
gs
fwait
mov
pop
cmp
mov
pusha
jl
jmp
mov
outsl
aad
cmpsl
movsb
fldcw
enter
add
lret
repz
test
call
rol
hlt
cmp
jp
imul
adc
repnz
mov
pop
dec
out
push
push
pop
pop
ss
cmpsb
cmc
mov
mov
insl
xchg
xchg
and
daa
pop
or
push
adc
pop
mov
lds
mov
xchg
test
mov
push
sbb
mov
stos
call
and
and
add
test
add
pusha
mov
bt
push
movzbl
mov
push
bt
cmp
jmp
pushf
movb
movl
pushf
mov
pusha
movl
pusha
pushl
lea
jmp
mov
pushl
popl
push
pushl
ret
call
jmp
ret
daa
or
aaa
test
addr16
ljmp
insl
cmp
lods
je
push
mov
cli
or
loop
outsb
js
push
icebp
jb
xor
dec
jae
inc
fsubr
add
mov
mov
mov
mov
aad
in
sbb
movsl
pop
arpl
faddl
jne
cmpsb
test
mov
shr
add
sub
dec
lods
dec
push
fistpl
test
cmp
push
addr16
jmp
xchg
arpl
aad
js
ficoms
sbb
sbb
xchg
es
out
cmc
mov
dec
xchg
stos
lret
lret
mov
cvtdq2ps
leave
mov
pushf
je
lock
mov
push
fdivrl
aad
mov
dec
es
mov
mov
or
mov
out
dec
arpl
pusha
push
daa
fldcw
test
inc
incl
jmp
mov
mov
ss
pop
ss
mov
lds
jns
jge
pushf
shll
rcll
ja
pop
add
inc
push
sub
push
sbb
sti
popf
js
ja
push
std
jle
adc
mov
xchg
sub
cmc
fadd
shlb
push
sti
xor
test
mov
add
movsl
cmpsb
xchg
xchg
mov
add
mov
fnstcw
dec
jb
shrl
lret
pop
jne
cwtl
movsl
out
or
in
inc
add
push
cmp
addr16
stos
dec
in
jmp
and
inc
dec
add
lahf
lods
add
or
push
aas
insl
adc
mov
cltd
adc
xor
and
test
mov
mov
lret
out
arpl
mov
decb
jmp
inc
test
sarl
ret
push
cltd
pop
add
jge
jb
jmp
loop
or
gs
mov
lds
into
sub
jne
and
jle
xor
mov
movsl
adc
decl
pop
imul
movsl
jbe
sbbl
jb
mov
loopne
inc
xchg
push
cld
or
and
test
mov
in
pop
in
mov
jno
int3
mov
rcr
lret
hlt
and
lret
mov
mov
int
sar
pop
lahf
sbb
sbb
leavew
xchg
sbb
mov
xor
mov
cmpsl
inc
lcall
fsubs
xlat
aam
insl
inc
adc
lcall
cwtl
cmpsb
shll
xchg
jmp
push
dec
es
jbe
popa
ds
data16
xchg
ss
mov
xor
js
mov
ret
subb
in
out
nop
loope
rcr
jmp
repz
inc
jmp
jp
mov
fdivrl
ljmp
mov
xchg
lret
xchg
pop
sahf
sbb
push
cli
push
push
xchg
ljmp
outsl
adc
pop
push
sbbl
daa
imul
in
es
testb
mov
cld
mov
add
out
movsl
imul
push
jno
cmpsb
push
pop
mov
ret
and
pop
add
addb
add
in
lret
add
add
mov
adc
iret
add
in
mov
adc
mov
adc
mov
push
add
add
add
add
movsb
movsbl
lea
mov
push
movb
pushl
lea
jmp
pusha
inc
lea
pushf
pushf
call
mov
cwtl
pushf
pop
lea
push
mov
pushl
pushf
mov
bswap
pushl
popl
pusha
bswap
mov
mov
lahf
movl
movzbl
jmp
push
dec
xor
xchg
test
mov
inc
or
clc
ret
out
call
add
hlt
add
test
xchg
data16
aaa
xor
enter
std
int
in
scas
add
in
xor
or
int
xchg
dec
sub
sbb
movsl
dec
jnp
cs
push
xchg
fsubs
sub
in
jle
sub
aad
fwait
adc
sahf
repz
int
fldt
cmp
xchg
test
add
stos
jne
es
popa
stos
stos
int3
loopne
sahf
xlat
adc
mov
xchg
fsubs
pop
cmp
mov
xchg
push
xor
popa
add
movsb
pushf
stos
mov
and
adc
pop
mov
mov
or
movsl
xor
xchg
loopne
add
add
and
test
add
add
shl
shlb
clc
mov
push
not
jmp
cmp
test
call
test
mov
push
stc
pushf
test
pushl
lea
je
test
clc
call
mov
stc
movsb
xor
sbb
mov
aas
pop
or
clc
push
jmp
pop
je
imul
mov
test
icebp
jge
popf
jnp
mov
cmp
or
xchg
ffreep
mov
xchg
pop
cs
add
out
sub
movsb
pop
push
mov
lea
mov
jg
push
mov
mov
pushf
pushf
pushl
ret
pushf
lea
ja
push
movl
pushf
mov
push
movw
lea
jmp
stos
gs
inc
mov
jmp
pop
sub
pop
clc
push
negb
sbb
sub
pushf
pop
jns
mov
iret
xor
lods
lods
ret
jg
xor
pop
subb
ficompl
in
test
sub
push
inc
inc
push
ljmp
mov
bt
cmc
jmp
sub
bt
stc
pushl
popl
cmc
call
mov
movsb
cmp
aas
mov
xlat
mov
lods
popa
sub
addr16
addr16
testb
xchg
xor
out
push
ljmp
add
xchg
js
out
ret
xchg
pop
sub
loopne
pop
dec
sub
xlat
jno
mov
addr16
sbbb
mov
dec
aas
sti
popf
pop
das
and
movsl
lea
sub
push
testb
mov
dec
mov
jp
icebp
mov
addb
mov
mov
int3
mov
into
lods
popf
jns
jg
mov
rorb
pushf
call
cmp
pusha
cmp
pushf
pushl
push
pushl
lea
jae
bt
cmp
cmp
push
call
arpl
shll
pop
sbb
enter
xor
adc
mov
dec
ja
mov
dec
out
fldl
lret
cmp
loopne
aam
or
jo
shl
mov
push
mov
in
cmp
or
gs
ret
aad
shrl
dec
fisubl
mov
mov
aad
test
xchg
movsb
jae
pop
mov
xor
call
mov
fisubl
in
jecxz
ret
into
jno
mov
stos
or
jmp
push
inc
pop
lahf
inc
mov
cli
sti
or
aas
jmp
mov
sbb
adc
pop
test
sub
push
cmpsb
pop
jae
dec
sbb
cmp
cs
pusha
or
shl
add
js
pop
inc
fwait
adc
cli
xchg
fistpll
push
ljmp
xchg
and
in
repnz
and
fldcw
xor
mov
andl
push
push
and
pop
out
int3
testb
pop
lds
pop
mov
nop
hlt
or
testl
sub
mov
xlat
jae
lcall
or
jecxz
fsubs
xor
or
push
repz
mov
arpl
pusha
adc
in
xchg
pop
inc
cld
mov
jmp
pushf
cmpsb
mov
imul
pop
cmc
js
rep
xchg
data16
aam
jnp
mov
xor
mov
scas
mov
lods
lcall
dec
sub
fiadds
aad
imul
mov
xchg
inc
test
lcall
jno
mov
bound
cmp
add
icebp
mov
popa
sub
mov
push
hlt
sub
in
mov
dec
stos
push
dec
test
xchg
jge
mov
mov
mov
shl
xchg
pushw
ljmp
btc
pop
mov
cltd
pop
addr16
movsb
xor
enter
jge
sbb
test
and
hlt
push
out
push
popf
mov
mov
out
or
ds
mov
movsl
cmc
add
fisttpll
repz
cwtl
popa
push
clc
loopne
mov
cmpsb
ja
or
jno
mov
loopne
add
mov
xor
pop
push
leave
dec
insl
popa
or
jp
adc
add
lods
xchg
cmpsl
ja
enter
cmp
gs
sub
add
lods
dec
and
xor
pusha
adc
push
push
dec
mov
rclb
jno
insl
sbb
jnp
movb
in
cld
or
xchg
pop
imul
outsl
ljmp
loope
das
pop
push
daa
fstps
test
xor
sbb
pushf
push
mov
setp
pusha
lods
call
push
jmp
jmp
jmp
mov
mov
adc
jecxz
movsb
mov
dec
or
dec
pusha
out
rcrb
insb
ss
insb
sub
mov
inc
rcll
ss
sbb
mov
mov
test
rcll
fdivl
lahf
push
sbb
adc
out
iret
call
add
push
lods
jg
mov
push
mov
test
test
out
shll
mov
addl
mov
leave
mov
xchg
push
out
pop
adc
stos
andb
rclb
ljmp
out
loope
xchg
push
cmp
popa
jno
sahf
xchg
ret
add
ja
mov
arpl
out
pop
dec
cmp
imul
icebp
ficomps
pop
xor
call
orb
nop
in
or
lds
adc
and
mov
sub
sahf
pop
push
inc
and
stos
or
cmp
call
pushf
jmp
rcl
push
add
mov
call
sub
mov
flds
repnz
fiadds
scas
cmp
jne
sbb
xchg
adcl
int
popw
push
call
arpl
sub
mov
jno
sahf
sub
stc
cmp
pushf
pushl
lea
jb
cmp
pusha
clc
call
cmp
pushf
lahf
bswap
lea
not
mov
mov
mov
movw
push
mov
lea
ja
push
lea
jb
clc
pushf
cmpb
jmp
mov
jmp
pushl
popl
mov
push
pushl
ret
btc
and
push
mov
pusha
test
cmpb
call
jmp
dec
outsl
pop
jns
sbb
loope
dec
cmp
iret
sahf
je
sub
push
push
xor
push
dec
je
movb
das
push
pusha
cmp
jge
sub
movsb
test
jge
jne
aad
loop
sti
xchg
mov
lret
push
or
popf
vmulpd
leave
movl
push
pushf
lea
jmp
gs
jg
movsb
xor
sbb
adc
aam
mov
pop
inc
std
lds
xchg
push
out
sub
push
cmp
outsb
mov
xor
cmpl
sbb
aas
cld
or
and
repnz
mov
pop
xor
jae
pushf
movsl
mov
add
sti
cmp
stc
cmp
cmp
cmp
cmp
cmp
pop
cmp
lea
jne
btr
push
cmp
add
mov
pusha
pusha
jmp
pushf
lea
jne
bsf
mov
clc
push
cmp
or
pushl
lea
je
seta
bswap
call
bsr
neg
mov
add
stc
mov
pushf
mov
cmp
xor
cmp
bt
call
adc
xor
fisubrs
sti
jp
lods
popf
jne
ss
jmp
lods
mov
add
das
enter
stc
xchg
scas
mov
je
cmpsl
inc
xor
lcall
shll
movsb
add
or
xlat
ss
rcll
pop
outsb
jae
pop
and
cmp
xor
and
or
enter
inc
or
dec
data16
pop
mov
mov
lret
imul
into
cwtl
imul
fwait
int3
fsubr
pusha
pushl
pushf
stos
pushl
pushl
lea
jmp
sub
and
xchg
inc
xchg
es
pusha
xor
mov
test
push
cmp
mov
call
fsubrs
jle
cmpsb
shll
sub
mov
cmp
iret
mov
les
cmc
sub
dec
jp
push
sbb
out
cmp
fwait
push
pop
jae
popa
inc
jp
and
loope
jmp
mov
lahf
arpl
fmulp
xor
push
lods
sar
jno
mov
adc
xor
push
pop
lret
lahf
repnz
cwtl
jno
mov
cmc
lret
mov
push
ds
mov
push
std
rcr
push
std
adc
add
in
jno
inc
das
dec
add
clc
mov
lea
jl
addl
dec
mov
ljmp
addr16
sar
in
or
xchg
shll
mov
pop
push
fnsave
or
cmp
invd
call
lcall
jb
xor
fs
insb
add
and
aad
jne
push
ss
xchg
ljmp
xorl
push
pushf
mov
ret
sbb
stos
xor
roll
xchg
lret
jno
cltd
std
sub
cmc
or
int
lret
xchg
pop
aas
cs
loope
sub
mov
shrb
jl
das
call
inc
mov
push
sub
or
adc
sub
aaa
sub
pop
dec
push
lods
adc
mov
lods
inc
sar
enter
cltd
aas
adc
fs
dec
call
or
in
adc
dec
sahf
xor
and
fsubr
imul
pop
out
aam
sahf
xor
mov
adc
adc
sub
mov
mov
dec
inc
sbb
jae
cmc
sbb
and
addb
enter
cltd
inc
jo
xor
mov
cmc
pusha
cmc
pushl
and
bt
pusha
test
call
pushf
lea
ja
pushf
pushl
pushf
lea
jmp
addb
add
xlat
fcom
pushf
jge
adc
xchg
push
sbb
pop
lea
jns
dec
fnsave
cmpsl
jno
cmpsb
pop
and
push
jno
push
mov
popf
aas
mov
outsb
add
fisubs
mov
popa
dec
push
xor
in
lcall
add
hlt
out
outsl
jb
xchg
out
jbe
fisubrs
cli
fxtract
out
sbb
aaa
lcall
lcall
jnp
jg
shrl
mov
into
ds
pop
jno
js
dec
mov
in
fcmovbe
pop
rcr
fistps
fucom
mov
and
xchg
std
and
push
lods
fsubl
cs
jnp
inc
mov
sub
mov
test
js
sbb
jmp
xor
inc
push
gs
push
and
loop
nop
pop
and
int3
cwtl
jge
add
jnp
dec
scas
je
inc
rorl
stos
leave
add
lahf
sahf
in
jno
cwtl
push
sub
add
xchg
fcoms
mov
aam
shrb
push
pop
jo
je
inc
jmp
push
fldenv
dec
pushf
bound
movsb
dec
icebp
into
lcall
push
mov
inc
fldenv
pop
enter
dec
sbbb
xchg
aam
lret
or
mov
ret
push
inc
lea
jb
imul
adc
frstor
leave
rcll
xchg
popf
test
fs
jae
pusha
pushw
popfw
call
pushf
lea
call
pusha
lea
jmp
loop
or
loop
loopne
data16
jmp
outsb
inc
pop
fnstsw
jae
adc
loope
pop
sub
out
xchg
mov
xlat
or
aad
in
lret
xor
pop
test
mov
adc
rorl
data16
sub
or
push
sbb
sbb
test
pop
decb
mov
mov
mov
mov
ja
jns
cwtl
iret
or
jmp
lret
clc
into
stos
inc
sbb
push
push
sbb
lds
or
sbb
cmp
insl
sub
jno
xchg
test
fs
jp
push
pusha
pushf
adc
push
pushf
pushl
ret
pushf
add
test
stc
not
call
pushf
lea
jae
clc
pushf
pusha
cmp
pushl
pushf
lea
ja
not
push
mov
inc
pushf
inc
pushf
bt
xor
xchg
clc
mov
pushl
jmp
repnz
pushf
lea
jne
push
not
rcr
mov
shl
neg
jmp
enter
push
pop
nop
jle
sbb
cmpsl
jae
pop
cld
les
or
lret
rcr
mov
mov
mov
out
and
sbb
lock
cmpsb
cld
insb
shrl
xorb
pop
mov
jg
jo
dec
insb
push
sbb
cmpsb
enter
mov
gs
pop
xor
arpl
divl
xchg
icebp
dec
pop
imul
gs
xor
cs
insb
add
or
mov
movl
movb
pusha
pushf
lea
jmp
and
fisttpll
jnp
sub
sbb
loop
jno
jl
out
cmp
mov
dec
or
cmp
popf
mov
ss
inc
mov
dec
rcl
in
adc
inc
or
cmp
lods
bnd
enter
push
cmp
push
imul
pusha
and
test
insb
sub
push
xchg
out
sub
outsb
mov
cmp
je
inc
repnz
pop
es
call
adc
testb
xchg
cmp
jno
xchg
xlat
jecxz
roll
dec
xchg
fcoms
test
lea
xchg
in
mull
push
out
jb
adc
mov
scas
mov
mov
mov
and
mov
mov
mov
popa
xor
add
and
xchg
add
pusha
and
dec
mov
in
push
push
or
jno
xchg
mov
fucomip
add
out
rcll
mov
outsb
mov
arpl
adc
mov
cmp
scas
dec
xor
and
mov
pop
mov
mov
out
out
jbe
fidivs
jb
xor
fisubs
andb
aaa
mov
or
test
mov
nop
mov
loop
cwtl
mov
cmc
push
icebp
mov
in
cs
pusha
std
mov
xchg
std
dec
imull
popf
mov
repz
fwait
scas
jo
xor
cmpb
inc
imul
push
icebp
sahf
cmp
std
ds
sub
hlt
jbe
mov
mov
out
out
mov
mov
sub
lahf
in
je
je
mov
int
jo
xchg
or
sbb
sbb
pop
rep
cli
out
icebp
hlt
pop
or
add
add
sbb
xchg
mov
jae
jne
fwait
dec
sub
sub
lock
idiv
jbe
lahf
xchg
hlt
sahf
and
xchg
int
xchg
dec
lods
cltd
andb
incl
fstl
adc
pop
xor
gs
mov
xchg
mov
pop
dec
cltd
cli
hlt
and
rorl
lret
push
push
hlt
mov
adc
add
scas
testb
mov
lods
mov
cli
pop
clc
repnz
xchg
jge
mov
adc
add
mov
mov
hlt
lcall
push
popa
and
je
ja
mov
and
and
push
sub
add
imul
pop
ss
jecxz
xchg
outsl
xchg
shlb
dec
sub
mov
cmc
pop
fsubs
jae
icebp
das
dec
rorb
mov
jle
lahf
outsl
mov
mov
shll
clc
xor
daa
repz
lock
hlt
mov
jl
and
repnz
imul
shr
repnz
and
ja
test
div
icebp
stos
jg
sub
das
xchg
scas
clc
outsl
ret
sbb
mov
std
test
mov
add
lret
and
inc
cltd
xchg
xor
jnp
lret
incb
lock
jg
lret
mov
test
bnd
xchg
sar
aam
cld
adc
pop
out
in
rorl
fdivrp
xchg
sti
mov
mov
xchg
fcomps
into
in
pop
movb
lret
jne
sbb
fildll
or
hlt
lock
testb
jb
cli
clc
adc
mov
add
fdecstp
repnz
fadds
out
loope
mov
mov
or
faddl
movsb
orl
mov
repnz
mov
call
test
xor
add
pop
cwtl
pushl
mov
mov
repnz
mov
stos
pop
dec
repnz
sahf
adc
push
repnz
js
mov
cmc
rcrb
stos
mov
jns
cmp
scas
hlt
xor
cld
sbb
mov
xchg
mov
jae
scas
xchg
and
sbbb
ja
xorb
test
mov
clc
mov
sarb
xor
maskmovq
xor
fimuls
adc
stos
ja
xchg
repnz
mov
mov
in
xchg
ret
enter
rcr
fdiv
mov
into
xchg
hlt
enter
fidivs
mov
repnz
lret
dec
and
iret
xchg
xor
imul
loopne
or
xchg
dec
imulb
repz
das
loopne
nop
lock
jg
xchg
lcall
clc
adc
fwait
or
loopne
xchg
ficoml
jae
fsts
aam
loope
fimuls
sahf
xchg
and
cli
mov
imul
lock
xchg
fsubrl
mov
sub
mov
or
cmpsl
hlt
mov
mov
or
adc
mov
cld
hlt
adcb
mov
sub
xor
out
loopne
or
mov
neg
sbb
outsl
mov
iret
in
hlt
orl
clc
push
cld
stos
aas
mov
jnp
in
loop
hlt
data16
call
shlb
aaa
mov
mov
movsb
idivl
aaa
fdivr
into
nop
call
pop
pop
jae
xchg
xorb
call
enter
nop
addr16
cwtl
decl
lods
neg
adc
out
and
xchg
jae
sbb
aam
call
in
push
loop
xchg
out
aaa
ja
xchg
jae
mov
je
fistpll
mov
int
movsb
lcall
mov
addb
test
repnz
out
lock
andb
mov
hlt
cwtl
inc
mov
mov
mov
mov
loopne
lcall
mov
cld
stc
aam
mov
clc
xchg
mov
jl
xchg
mov
mov
ljmp
pop
mov
mov
in
mov
idiv
mov
hlt
lcall
out
out
jle
ret
lret
inc
testl
mov
andb
mov
lock
jnp
dec
jno
into
nop
test
pop
cmpsb
fsubrs
mov
xorb
in
sub
or
adc
test
paddq
out
mov
stos
push
sbbb
jnp
sti
ja
jecxz
shl
dec
lahf
stos
addr16
xchg
xchg
aaa
mov
je
repnz
fdiv
jnp
shlb
aaa
xchg
ljmp
mov
bnd
mov
jne
sub
das
mov
xchg
xchg
int
mov
sub
rcrb
repnz
aam
mov
jle
mov
imull
cli
xor
cmp
push
test
mov
loopne
jl
scas
pop
rolb
aad
mov
xor
fcoml
xchg
xorb
ja
imul
xchg
adc
cmpsb
adc
insl
jb
pop
push
cld
pop
out
hlt
call
mov
and
stos
sti
bound
jns
clc
outsl
jno
fs
hlt
repz
in
ljmp
out
mov
mov
push
cld
and
incl
adc
call
jl
into
adc
cmc
test
repz
divb
xchg
xchg
cmp
mov
mov
lret
flds
gs
mull
push
mov
fcmove
dec
scas
xchg
lcall
add
fdivrs
push
xchg
call
stc
int3
test
mov
ret
or
mov
dec
loop
cld
push
dec
cli
xchg
enter
call
jg
sub
or
xchg
mov
dec
mov
push
loopne
stc
in
or
scas
pop
mov
mov
mov
cmp
xchg
orb
lock
pushf
ja
lahf
jno
divb
jbe
imul
fdivp
or
xchg
iret
mov
adc
mov
add
and
xchg
scas
sub
cmc
shl
lret
lock
enter
cmpsb
in
aam
cmpb
jge
int3
call
xchg
xchg
xchg
mov
xchg
inc
xchg
clc
and
or
sahf
nop
movsb
stos
xor
aad
xor
hlt
in
repnz
xchg
outsb
or
stos
test
lock
mov
mov
adc
jae
repz
jae
movsb
inc
lock
add
jbe
enter
repnz
roll
push
dec
hlt
push
enter
mov
fidivs
je
clc
aam
inc
mov
jae
movsb
inc
cmc
mulb
hlt
dec
sbb
mov
repnz
jle
pop
mov
xchg
lock
mov
andb
cwtl
add
movsb
mov
fidivs
xorl
mov
lahf
fdivl
test
loopne
je
mov
xor
bnd
sar
lret
add
repnz
lcall
stos
ja
clc
mov
mov
sub
in
cmp
xchg
pop
hlt
xlat
xchg
jae
pop
xchg
push
repnz
adc
and
mov
repnz
lods
mov
add
fsubp
xor
shrb
mov
loope
xor
mov
test
cmc
mov
je
xchg
mov
mov
nop
repz
mov
dec
mov
cwtl
add
add
mov
jg
notb
pushl
hlt
in
cmpsb
jnp
stos
xchg
ret
popa
and
mov
pusha
mov
imul
fdiv
add
ja
add
sahf
aaa
jae
test
ret
ljmp
and
inc
xchg
out
insb
xchg
arpl
mov
lcall
mov
sbb
dec
pushl
nop
bound
nop
xchg
pushf
inc
in
loopne
mov
in
lret
repz
adc
clc
xchg
mov
clc
loop
inc
clc
fistpll
pop
jb
rcrb
repnz
aad
iret
fsub
mov
cld
xchg
mov
cld
int3
xchg
loop
stos
aaa
mov
bound
clc
mov
loope
adc
popa
shlb
scas
loop
mov
into
pop
mov
mov
in
push
lahf
enter
xorb
rorb
cld
mov
rcl
mov
loopne
daa
out
cli
mov
repnz
rcl
stos
cmpsl
mov
mov
xchg
mov
rcl
mov
push
mov
sar
call
nop
dec
clc
fidivs
xchg
neg
cmp
cmp
cwtl
mov
xlat
adc
mov
ja
mov
jne
jmp
mov
or
jno
imul
pop
and
cmpsl
mov
cwtl
xorb
xor
aad
movsl
cmc
sub
sub
add
mov
popa
sbb
mov
cmpsb
pop
push
outsl
insb
mov
dec
cli
or
lock
pusha
lcall
out
idiv
add
leave
cmpsb
jb
int3
add
adc
xchg
mov
fistps
fidivrs
jnp
mov
loopne
in
jns
in
ljmp
add
xchg
push
xor
mov
xchg
lock
sub
pop
testb
rorl
aaa
mov
fdiv
dec
pushf
fwait
sub
inc
xchg
inc
stos
loope
add
pop
mov
loop
daa
out
xor
test
fidivrs
in
mov
cld
icebp
xrstors
aam
ljmp
ja
enter
xlat
in
and
notb
lock
mov
enter
pop
jmp
xor
inc
add
mov
cmp
cmp
nop
leave
shl
in
ljmp
mov
test
mov
loopne
mov
jg
fmul
into
cmp
inc
scas
idiv
xor
test
repnz
jnp
enter
mov
shlb
mov
loop
or
mov
test
in
adc
mov
scas
push
pop
cld
cli
adcb
mov
jp
lock
xor
adc
aaa
aaa
adc
je
div
adc
testb
pop
inc
adc
hlt
aaa
dec
adc
rcpps
add
in
mov
pushf
mov
das
mov
add
cwtl
add
lret
hlt
mov
pop
test
mov
pmuludq
das
enter
cwtl
mov
test
pushf
mov
mov
stos
jno
hlt
call
loop
clc
aam
adc
rolb
lret
test
pop
loopne
add
repnz
adc
jg
push
das
in
mov
nop
or
xchg
jnp
mov
mov
add
int3
jae
imul
pop
stc
aam
fisubl
into
arpl
pop
out
mov
mov
cmp
ret
mov
fsts
jnp
aam
mov
jae
inc
and
jae
xchg
rolb
fcomps
aam
lock
fsqrt
mov
xlat
ljmp
or
cli
pop
xchg
repnz
outsl
loopne
outsl
xchg
or
les
repnz
icebp
xchg
xchg
addb
mov
pop
adc
cmp
mov
mov
andb
hlt
mul
fwait
pop
xchg
or
mov
frndint
jg
ficoms
loop
cmpb
loop
and
jb
sar
dec
lock
bnd
int3
add
pop
xchg
lock
mov
cld
lods
imul
dec
sar
mov
hlt
jae
jmp
xchg
loopne
std
lahf
xchg
xchg
sar
xchg
adc
cmp
test
xchg
fdivs
xchg
ja
jae
or
jae
popa
lret
loop
adc
stos
sub
movsb
jmp
jae
xor
aas
repnz
add
mov
jg
adc
jnp
add
mov
cmp
jae
ja
insb
lret
daa
lcall
jae
add
cmpsl
mov
xor
popa
xchg
cmp
jnp
jae
sahf
push
sub
scas
xchg
jae
add
cli
shl
fnsave
ljmp
sahf
mov
adc
scas
xchg
jae
dec
test
test
int3
data16
mov
xorb
jmp
adc
dec
repnz
mov
mov
and
addb
scas
loop
out
test
jo
addl
nop
fdivrs
not
adc
andl
cmp
and
lret
hlt
aas
mov
hlt
filds
hlt
xor
mov
orl
mov
xchg
fwait
add
sahf
jg
jge
ret
xchg
mov
or
sahf
sbb
sub
adc
mov
pop
sbb
and
jae
clc
dec
mov
outsl
xchg
repnz
nop
mov
out
fisubs
imul
push
les
push
ss
mov
xchg
xchg
test
mov
lcall
sahf
dec
insb
mov
out
iret
lods
adcb
mov
sub
cwtl
out
jg
out
repz
call
xchg
cmpsl
out
pushw
loopne
adcb
mov
mov
mov
cli
mov
xchg
outsl
xchg
out
aas
push
add
inc
push
xchg
xor
lret
xchg
push
mov
lods
add
lcall
xchg
push
jne
out
ds
jno
push
add
xor
repnz
fsubl
xchg
in
fwait
adc
pop
dec
mov
stc
adc
xchg
mov
mov
out
out
xchg
ds
dec
fnstsw
sarb
add
mov
daa
push
inc
pop
nop
xchg
lret
test
lock
outsl
mov
cmp
jg
outsl
out
je
add
xchg
and
mov
pop
cmp
xchg
out
jo
nop
pop
ja
int
nop
cld
pushl
repnz
iret
mov
out
cld
jo
les
mov
sti
repnz
add
jne
jnp
mov
sub
mov
lock
cli
popf
loop
int3
scas
lock
call
in
and
mov
ja
jb
cli
add
stos
mov
lcall
sbb
pop
push
out
test
nop
mov
mov
cli
adc
fwait
cmp
or
or
jae
sti
daa
ljmp
jg
xor
xchg
jnp
jae
cmp
scas
jae
test
inc
mov
mov
mov
fimuls
and
jae
out
xchg
xchg
out
loop
inc
call
mov
repnz
mov
mov
xor
xchg
shlb
call
nop
fsub
xor
ja
repz
dec
jae
orb
ja
jae
xor
xchg
mov
nop
into
aam
loopne
out
in
xor
jae
incl
imull
loop
in
push
mov
rorb
mov
enter
mov
lods
movsb
jne
jae
mov
push
int
repz
xchg
cli
jo
in
icebp
xor
mov
xchg
and
mov
repnz
shll
pop
idiv
les
mov
fdivl
adc
shlb
ret
hlt
xchg
stc
mov
and
adc
adc
mov
xor
jae
bound
lret
ja
sbb
ror
mov
je
mov
mov
sbb
xor
imul
rorb
not
rcrb
scas
js
outsl
mov
mov
enter
lock
sub
lods
add
inc
pop
movsb
mov
in
hlt
repnz
repnz
daa
xchg
jae
lock
cli
mov
pushf
fcmovnu
imul
mov
aam
cli
xchg
js
neg
loopne
ds
sbbb
ja
ret
mov
rorb
pop
call
orb
ret
lret
xorl
jle
in
les
shlb
xchg
cli
add
adc
xchg
hlt
scas
loopne
call
call
push
push
cmpb
mov
dec
je
mov
sahf
pop
cmp
mov
and
addb
repnz
test
clc
mov
movsb
mov
dec
lock
xorb
shlb
mov
sarb
stc
mov
in
adc
mov
repz
and
pushf
outsb
repnz
aaa
lods
pushl
stc
out
mov
cmpb
lock
clc
nop
orb
sahf
xchg
cmp
cmpsb
xchg
jae
xchg
fsubl
nop
loop
mov
mov
rolb
int3
jae
jo
mov
and
mov
jp
push
push
mov
aam
outsl
mov
outsl
mov
outsl
mov
mov
nop
arpl
pop
out
repnz
fdivs
fisttps
sarb
sub
mov
hlt
scas
cwtl
pop
aam
enter
psubusb
repz
hlt
inc
loopne
insb
xor
cli
pop
mov
mov
repnz
lock
in
sar
lret
aaa
test
adc
negb
divb
cmc
divb
hlt
rorb
daa
hlt
out
cmc
imulb
cmc
idiv
fistps
fdiv
testb
sbb
hlt
cwtl
add
cld
jecxz
fsubr
cld
sbb
cli
mov
inc
lret
cmpsb
adc
loopne
mov
pusha
xchg
hlt
mul
call
sbb
jge
cwtl
aaa
sub
pop
cmp
shl
xchg
nop
inc
dec
mov
int3
lock
orb
xchg
lock
and
jnp
into
add
nop
push
sub
js
dec
fmull
xchg
mov
test
mov
stos
ror
mov
loopne
jg
adc
xor
shrl
xor
lea
fimuls
loopne
out
lret
fisttps
out
clc
lahf
sahf
sbb
repnz
mov
mov
test
popa
lcall
fsub
push
xchg
push
lods
movsb
daa
xchg
mov
or
movsb
nop
adc
sbb
or
jae
aaa
cmpsb
ljmp
mov
jae
xor
not
andl
jnp
mov
ljmp
jbe
mov
shlb
sub
inc
adc
sahf
sbb
mov
add
ja
mov
adc
pop
sahf
add
movsb
aam
mov
adc
aam
xchg
leave
lods
or
jnp
pushl
nop
out
aam
mov
mov
movsb
popf
orb
loopne
lret
xorb
mov
imul
mov
into
es
test
dec
jnp
clc
mov
mov
movd
dec
lcall
cwtl
cli
xor
in
sar
lock
xor
pop
cli
xlat
cwtl
sub
mov
lcall
enter
and
mov
mov
movl
cli
push
push
cli
adc
jge
clc
aaa
test
pop
cmp
aas
xchg
dec
pushf
mov
test
in
nop
fisubrs
test
clc
jle
add
call
dec
into
mov
mov
jmp
lods
stc
jg
push
pusha
loopne
fcoms
mov
cld
mov
push
mov
jae
jo
xchg
mov
inc
xchg
in
test
pop
icebp
loop
lahf
rolb
xchg
aam
mov
xor
xchg
lods
ret
aaa
jmp
adc
jno
mov
add
or
adc
test
aam
cltd
nop
fucomip
xchg
sub
and
pop
mov
mov
out
and
jmp
and
xchg
rorl
movsl
mov
cwtl
lahf
pushf
pop
in
test
sahf
sar
mov
mov
ret
jae
mov
ret
arpl
popa
loop
xlat
add
mov
ja
jae
hlt
jnp
dec
xchg
mov
shl
mov
jo
outsl
adc
mov
fmulp
repnz
jp
mov
cli
xchg
add
xchg
incb
fidivrs
repnz
in
and
repnz
or
shl
repnz
data16
and
xchg
sbb
jo
inc
addb
clc
cmp
aas
mov
mov
pop
aas
hlt
push
inc
adc
neg
adc
jp
mulb
cmc
idiv
lcall
add
notb
adc
hlt
scas
adc
outsl
adc
test
popa
pop
ja
rcl
loope
repnz
xor
or
mov
mov
movsb
cwtl
sbb
movsb
js
mov
repnz
mov
ficoml
jno
lret
pushf
mov
adc
dec
or
lock
fwait
adc
lcall
out
ja
out
sar
adc
push
out
xchg
enter
cmpsb
repnz
mov
xor
arpl
out
loop
sbb
jg
adc
lret
aam
inc
nop
jle
add
mov
sahf
insb
xchg
xchg
xchg
aas
test
cld
or
lock
push
push
mov
clc
add
aaa
jae
call
xchg
sbb
mov
nop
movsb
stos
xor
xchg
ret
dec
cmp
adc
into
or
pushl
nop
out
mov
call
stc
jae
mov
dec
pop
ja
pushl
nop
mov
mov
aaa
int3
call
nop
fsub
mov
imul
mov
mov
cmpsb
imull
aaa
ret
nop
rcr
xor
imul
push
jmp
aaa
test
mov
mull
aaa
mov
aam
fdiv
in
in
xchg
repnz
arpl
ror
xchg
repnz
mov
lds
out
movsl
fisubl
nop
scas
mov
mov
xchg
shlb
fdivr
out
in
repnz
ljmp
mov
mov
mov
push
ja
mov
ficoml
dec
mov
stos
jmp
pmulhuw
fiaddl
cmp
test
and
and
test
div
mov
shrb
pushf
out
cmpsb
mov
mov
int3
push
or
negb
push
adc
icebp
jbe
in
repnz
mov
call
cli
stos
jnp
mov
xor
in
mov
pusha
nop
mov
andb
out
xchg
inc
push
mov
xor
push
mov
jmp
fwait
repnz
hlt
xchg
fiaddl
xor
pusha
hlt
mov
lcall
xor
shrb
pushf
out
xor
jg
mov
push
mov
adc
test
in
cmp
mov
mov
pop
call
cli
pop
stos
jnp
idiv
mov
or
neg
pusha
pop
nop
xor
testb
out
rolb
lods
xchg
fcomip
stc
add
rorb
mov
xchg
jo
xor
add
xchg
js
mov
lods
gs
adc
div
rcrb
arpl
rolb
sahf
shlb
push
lock
xlat
inc
xchg
js
push
aam
mov
aaa
fcmove
rsm
mov
pop
mov
sahf
scas
insb
mov
mov
cmpsb
arpl
mov
mov
mov
int3
movsb
mov
xor
ja
mov
sbbb
jp
scas
js
mov
mov
add
out
jbe
xchg
xchg
mov
rorb
mov
hlt
sti
lods
cli
mov
fisubrs
mov
xchg
lock
cmpsl
mov
push
mov
mov
lahf
mov
cli
test
out
stos
int3
adc
imul
sarl
add
xchg
or
or
pop
scas
pop
inc
outsl
in
xchg
cli
aam
insb
jae
lret
into
pop
add
pop
lods
mov
mov
outsl
fistps
scas
push
call
les
fsub
fcoms
mov
lods
add
xchg
in
jg
lcall
out
lods
rcrb
cli
stc
sbb
aad
call
div
xchg
add
andb
mov
in
xchg
mov
jb
add
xchg
sub
movsb
loope
sbb
mov
enter
dec
cld
loope
pop
lahf
test
repnz
xchg
sbb
xchg
mov
xor
mov
lods
push
subb
sbb
xchg
jae,pt
lea
pxor
clc
mulb
pop
idiv
xchg
into
xor
adc
sahf
movsb
and
lock
push
imulb
and
xchg
xchg
xchg
xchg
xor
rcrl
lods
mov
aas
mov
pushf
jno
addr16
aam
inc
lock
rorb
sarb
das
xchg
ja
in
mov
lods
xor
in
loopne
mov
icebp
rol
pop
pop
lret
cli
jbe
xchg
testb
nop
or
push
imull
xorb
cmp
inc
call
or
pop
mov
add
mov
sahf
inc
mov
call
out
cmp
ror
sbb
fiaddl
adcb
pushf
sbb
fsubr
ret
add
xchg
mov
iret
repz
jns
mov
lea
cwtl
mov
xchg
xchg
iret
xchg
popa
stos
and
fwait
clc
jmp
mov
testb
fadd
orb
enter
out
orb
sbb
mov
pusha
and
in
xlat
sbb
aam
mov
mov
mov
div
xchg
mov
rcrb
lea
push
test
ljmp
call
lret
lea
mov
lcall
dec
fcoml
jnp
nop
shll
pop
jg
pop
repnz
push
sbb
cmp
hlt
out
cmpsb
inc
push
shr
push
in
jg
nop
hlt
js
cld
lock
in
test
jnp
jae
inc
in
ja
ljmp
mov
mov
mov
test
cmp
call
pushf
aam
das
adcb
cmp
ljmp
ljmp
fisubs
sbb
sbb
cwtl
xchg
ret
repnz
jl
adc
ja
rolb
xchg
lcall
mov
xchg
aaa
loopne
ljmp
xor
xchg
mov
mov
loopne
ljmp
aaa
jae
jmp
test
aaa
fdivrp
in
bnd
addb
mov
loopne
aam
shlb
xor
ja
cli
jb
aaa
mov
xchg
nop
mov
movb
div
jnp
mov
mov
subb
into
nop
fsub
mov
sti
pop
pop
jae
notl
jnp
mov
lods
xor
ret
rolb
shlb
fdivs
xchg
out
in
div
jl
cld
nop
orb
cmpsb
xchg
scas
aaa
mov
mov
loopne
ljmp
cmp
nop
xchg
pushf
xor
xchg
ret
call
nop
fsub
xor
ja
jge
incb
lcall
mov
xchg
into
aaa
aam
loopne
out
mov
divb
cld
testl
nop
lods
mov
mov
xchg
shlb
fdivr
ficoms
xor
stos
xor
push
call
jae
aaa
mov
mov
loop
fwait
ja
gs
aam
sahf
repnz
dec
hlt
cld
sub
pushf
jle
mov
les
ljmp
loopne
decb
xchg
xchg
icebp
xchg
or
stos
ficompl
push
cmc
mov
lcall
push
cli
in
popf
inc
sti
lret
lret
lods
fcompl
and
fsubrl
stc
imul
out
adc
xchg
cmc
imulb
idiv
cwtl
push
in
imulb
cmc
sqrtps
and
clc
pop
daa
cwtl
ficompl
imul
mul
pop
imul
cmp
sbbb
mov
or
cmpsb
sbb
stos
sahf
mov
lock
sbb
nop
xchg
fwait
testb
sbb
mov
pushf
cmp
cmp
mov
ds
xchg
add
mov
sti
les
int3
pop
mov
sub
repnz
les
hlt
stc
scas
adc
out
push
lret
mov
xchg
stos
call
mov
mov
mov
pop
aam
repnz
in
sahf
jecxz
mov
and
ficoml
adc
xor
pop
imul
lret
mov
imul
push
movsb
cmp
lret
jnp
cmp
icebp
dec
xchg
aad
pop
cwtl
stc
repnz
cli
mov
mov
loope
mov
stos
xor
loop
rorb
cmp
pushf
nop
out
sar
lret
mov
xchg
mov
mov
mov
jb
mov
push
jle
mov
pushf
out
xchg
nop
cmpsl
jno
add
sbb
mov
repnz
mov
add
add
or
or
jbe
mov
mov
xchg
jmp
and
mov
repz
pushf
andb
cli
or
push
jl
push
adc
sbb
and
cs
cmp
sbb
mov
cmp
test
xchg
outsl
add
hlt
rolb
mov
in
add
mov
xchg
in
out
mov
cld
nop
xchg
cmpsl
mov
mov
mov
divb
enter
fdivrl
cld
mov
cmpsb
ljmp
arpl
add
adc
cwtl
stc
test
cmp
int
clc
mov
inc
cmp
mov
ljmp
stos
lret
outsl
scas
rolb
jg
dec
xchg
mov
repnz
aam
push
jae
sar
adc
push
dec
xor
mov
mov
orb
jle
sub
xchg
sbb
repz
shll
adc
out
shlb
icebp
andb
movsl
and
daa
mov
mov
fsin
mov
push
negb
dec
push
out
out
inc
mov
mov
dec
mov
add
jp
sbb
cmpsl
fwait
loope
pop
cs
mov
shrb
sbb
mov
std
in
add
lock
js
cmpsb
das
nop
lock
addb
aaa
aas
inc
nop
inc
cmc
mov
nop
divb
div
js
jno
and
lock
stos
xchg
mov
repz
push
jno
bnd
popl
cmp
xchg
cmp
or
mov
adc
loope
or
test
jbe
and
test
and
add
cmp
mov
out
outsl
shr
fidivrl
ja
decl
adc
sahf
scas
mov
movsb
xchg
ret
xlat
jle
repnz
call
xchg
adc
je
xorl
out
stos
xchg
push
xchg
outsb
out
ficoms
cmp
ja
mov
inc
ljmp
push
jb
imul
dec
mov
jle
incb
and
out
mov
xor
xor
cmp
jae
sbb
clc
mov
orl
das
jnp
cmp
fldl
cld
nop
or
mov
xchg
lcall
nop
mov
lcall
inc
icebp
or
mov
adc
xchg
adcb
cltd
add
sbb
pop
lahf
mov
test
or
mov
lcall
ljmp
notb
iret
outsl
dec
stc
gs
ja
movsb
out
into
xchg
xchg
add
push
faddp
aam
addl
aam
push
out
jbe
ljmp
fsub
adc
testl
int3
pop
test
xchg
out
bswap
push
sub
mov
mov
mov
sub
jmp
sub
push
fsts
iret
out
xchg
or
es
pop
int3
rorl
loope
jo
pop
rorl
adc
sarl
orb
jge
je
cmpsb
adc
mov
insl
inc
cli
ja
shr
sub
ja
shl
outsl
repnz
pop
and
jns
loopne
mov
shl
and
xchg
dec
pop
cmpsb
test
imul
aad
mov
adc
out
push
jnp
xchg
or
nop
xchg
or
inc
stc
lods
imul
cwtl
bndstx
or
pop
lahf
nop
movsb
sub
daa
sbb
js
icebp
stc
xchg
sub
aaa
xchg
aam
pop
add
or
pop
xor
sti
testb
int
push
jns
insb
xor
iret
or
push
ja
lods
cwtl
sub
shlb
movsb
dec
sub
jge
or
sub
outsb
gs
xchg
out
mov
inc
push
add
inc
cli
inc
mov
shr
fisttps
mov
cmc
lock
sub
jno
xchg
loop
xchg
gs
repnz
push
out
outsl
cwtl
xchg
adc
mov
loope
cmpsb
xchg
cmova
clc
call
lcall
xchg
mov
push
cli
and
popf
mov
mov
push
and
push
call
mov
dec
outsl
ficompl
mov
mov
lret
mov
in
add
mov
ja
add
jae
mov
xor
fmull
subb
aam
mov
rcl
jae
inc
cwtl
into
loopne
jmp
mov
cmp
fldcw
jbe
mov
mov
xorl
sarl
ret
mov
imulb
int3
ljmp
cld
xchg
mov
xchg
jg
cmp
les
faddl
mov
jmp
adc
mov
adc
scas
test
cmp
ret
mov
outsl
enter
clc
cmpsl
repz
test
loop
cmpsb
insb
and
mov
cwtl
sbb
cli
xchg
jo
fidivl
mov
ljmp
mulb
jp
lock
call
nop
repnz
sar
cmpsb
gs
ret
mov
sub
aad
repnz
mov
push
addr16
hlt
jns
cmpsb
jae
pop
sbb
xchg
out
xchg
push
mov
push
divb
cld
lcall
and
pop
sahf
aas
cmpsb
cmp
mov
lcall
movsb
aad
pop
sbb
add
mov
adc
xlat
into
inc
mov
and
ja
mov
mov
sbb
cli
or
pushl
jb
nop
jl
xor
negl
andb
xchg
push
and
lcall
loopne
mov
and
mov
jmp
add
add
out
mov
rol
xchg
test
pop
jns
lret
in
cmp
shr
mov
xchg
popf
add
xchg
sahf
dec
adcb
adc
mov
popf
add
mov
push
and
adc
int3
fistl
int3
lcall
test
loopnew
hlt
fistpl
add
rorb
cltd
ja
cmpsl
xchg
aad
je
adc
and
shlb
lea
xchg
lock
movsl
pop
cmp
cli
loop
testb
push
daa
mov
cmpsl
outsl
cwtl
scas
cli
xchg
adc
pop
sbbb
xchg
mov
push
mov
push
push
lods
push
sub
stc
call
xchg
jg
mov
addl
xchg
mov
adc
cmc
pop
xor
les
hlt
pushf
mov
test
adc
and
fs
loopne
push
cmpsl
test
mov
gs
mov
mov
pop
les
or
mov
lods
addb
inc
movsb
nop
cld
jb
mov
sub
jb
hlt
mov
xor
outsl
fcmovb
outsl
cwtl
gs
xor
ficoml
and
cld
hlt
xor
hlt
jle
cwtl
enter
xchg
sub
les
fnstsw
sub
fwait
repz
fwait
lods
mov
sub
cmpsb
ja
sahf
lahf
hlt
lock
jg
test
mov
test
push
mov
rolb
cmp
adcb
aaa
push
je
jle
or
aad
in
movsl
mov
cmpsb
cmp
xchg
cmpsb
mov
push
into
inc
mov
jbe
xor
sub
cs
lret
call
movsb
mov
repnz
sbb
dec
cli
outsl
xchg
pop
enter
arpl
mov
scas
cmp
cmp
mov
jle
imul
sahf
in
fwait
sahf
adcb
inc
fistpll
js
fcmovb
mov
cmc
stos
add
js
mov
enter
xchg
adc
cltd
stos
hlt
enter
je
out
repnz
out
clc
sbb
je
fisubrl
jp
xchg
push
xchg
pusha
adc
add
stos
ja
shl
stos
and
shlb
repnz
idivb
mov
in
test
push
rorl
test
or
in
je
adcb
mov
in
lahf
mov
fadds
loop
cmp
jae
imul
add
sahf
lahf
mov
and
add
popf
fdivrl
cmp
mov
sub
pop
ja
nop
xchg
mov
xchg
ret
in
mov
and
pop
cmpsb
outsb
and
inc
jp
push
int3
sar
fstl
lret
aam
jne
sbbb
pushf
stc
sbb
push
xchg
mov
adc
cwtl
shlb
std
add
mov
into
popa
lods
iret
les
jne
pop
movsb
push
adc
cli
sub
scas
jg
fbld
mov
sub
div
scas
sub
movsb
mov
faddl
pop
cmpsb
movsb
movsb
adc
ja
mov
cwtl
out
sti
jg
push
out
leave
cld
jg
stc
fcompl
rclb
scas
ret
movsb
cld
fnstcw
push
mov
lret
test
mov
inc
mov
mov
scas
andl
adc
int3
mov
scas
cmc
xorb
ret
jg
fistps
fsubs
stc
rcr
in
lock
pop
cli
push
scas
mov
xor
push
cmp
jae
imull
ss
inc
aaa
dec
lcall
and
lods
xchg
stos
movsb
mov
mov
or
fistps
xchg
rcr
fsub
les
pop
mov
aam
inc
sbbl
xchg
scas
dec
js
sub
cld
loopne
outsl
xchg
ds
test
sahf
inc
sahf
scas
push
ljmp
rcrb
test
mov
clc
lods
aam
add
lods
flds
iret
lret
hlt
mov
push
xchg
lret
clc
mov
mov
clc
shlb
jne
shlb
clc
push
xorb
ror
mov
adc
scas
fisttps
mov
in
pop
fsubs
cmc
adc
xchg
xchg
loop
rorb
imul
ror
in
pop
shlb
xor
lahf
cmpsb
cmpb
sub
xchg
inc
stos
lock
nop
shll
mov
in
lahf
aam
sahf
jl
xchg
repnz
fbld
faddl
xchg
nop
enter
int3
adc
mov
cmp
xchg
cmp
scas
and
mov
adc
hlt
ljmp
call
insl
cmp
mov
jae
fwait
xchg
sahf
mov
xor
jp
clc
hlt
hlt
pop
nop
aam
xchg
aam
mov
fimuls
sub
push
jnp
adc
xlat
pop
cmp
jge
add
nop
lahf
pop
ret
lcall
leave
in
std
or
shll
pop
jae
andb
xchg
xlat
addr16
adc
jae
and
call
lret
pop
ljmp
nop
fisubrs
mov
movb
pop
clc
pop
das
mov
jae
xchg
adc
scas
xchg
cli
addb
sbb
ljmp
pop
stos
xchg
and
mov
push
in
cmp
mov
push
mov
push
cmpsl
out
lods
movsb
rclb
mov
pop
push
ficoml
mov
lcall
xor
jp
mov
icebp
shl
xor
in
push
and
push
jp
movsb
add
divl
pushf
mov
idivl
stos
mov
cmc
andb
cli
fnstenv
mov
adc
rclb
mov
fdivr
cmpsb
mov
jg
filds
mov
jae
mov
mov
call
lods
mov
jg
inc
xorb
lcall
or
jg
filds
ljmp
xor
mov
mov
mov
xor
sub
push
je
add
xchg
mov
incb
out
stos
aaa
mov
aas
filds
jne
out
mov
not
test
lahf
test
sbbl
mov
repnz
pushf
add
mov
jnp
jg
aaa
jae
ds
dec
push
xor
mov
jp
add
push
aaa
sbb
and
mov
in
inc
movsb
fnstcw
in
ss
in
loopne
clc
mov
xchg
pop
jns
test
shll
ss
nop
addr16
ljmp
fsub
mov
mov
add
xor
lods
sbb
mov
test
mov
inc
test
sub
lods
xchg
les
sahf
or
adc
int3
call
add
mov
nop
mov
lods
xchg
cmpsb
sahf
inc
push
test
mov
xchg
fdivr
xor
xchg
xor
scas
mov
scas
mov
mov
addb
lret
mov
sbb
lods
clc
iret
ljmp
enter
jns
adc
adc
rol
mov
jae
push
stc
lcall
mov
das
xchg
cmpsl
mov
push
into
mov
or
mov
negb
std
cld
testl
xchg
cmp
scas
jecxz
add
push
adc
mov
sar
add
xor
push
cmp
mov
mov
adc
xorb
jae
aaa
mov
ret
cmp
cmp
mov
clc
int
mov
insl
push
lock
stc
sub
sbb
loop
or
enter
push
dec
mov
daa
mov
rcrb
push
or
ja
cmp
jae
ja
div
insb
cmp
rcrb
faddp
scas
sti
mov
cli
pushf
insb
repnz
scas
movsb
imul
rcrb
dec
sub
xchg
mov
xchg
dec
scas
mov
mov
rcr
icebp
rolb
xchg
cmp
and
addr16
cmp
cmpsb
fs
repnz
cmp
xchg
les
sahf
clc
rclb
cmp
mul
cmp
mov
jp
mov
sti
push
mov
xchg
xor
int3
mov
sbb
mov
jge
add
push
jge
mov
mov
test
mov
jnp
aad
sbb
xchg
cli
push
mov
cli
pop
ljmp
cmpsb
mov
clc
cld
adc
loopne
mov
mov
repnz
cmpsl
mov
mov
cmp
mov
ds
mov
cmp
add
out
mov
cmp
int3
mov
mul
push
movsb
dec
repnz
jbe
in
cmp
call
cmpsb
cld
ja
mov
mov
ret
shlb
add
notb
jb
mov
mov
sub
cld
xor
or
repnz
xor
xchg
jns
xor
sub
xchg
sahf
cmp
jae
add
or
ljmp
mov
rcr
mov
lock
das
cmpb
add
mov
clc
sbb
sarb
out
mov
cmp
shl
sbbb
xchg
ds
dec
insb
cmpsl
xchg
mov
ror
ds
into
add
add
cmc
jbe
fidivl
aam
cmc
aaa
ret
sub
cld
fdivs
xchg
add
push
sbbb
and
sub
ss
inc
dec
xor
subb
aas
bnd
push
call
nop
sbb
mov
scas
jp
mov
loop
mov
shl
loop
sbb
add
add
mov
mov
aas
int3
fcomps
and
or
add
cmp
push
add
mov
nop
es
movsb
test
mov
int3
sahf
sbb
push
loopne
mov
hlt
mov
mov
mov
pushf
xchg
mov
xchg
cmpsl
push
lock
or
xchg
cld
sarb
popa
clc
sub
push
cmpb
mov
cmpb
sbb
mov
xchg
mov
xchg
sub
mov
stos
jp
clc
mov
test
push
mov
movsb
add
les
sub
inc
daa
daa
es
xchg
andb
sbb
loop
ret
lods
lcall
xchg
mov
dec
and
lahf
movsb
imul
cmp
in
xchg
mov
jns
repnz
repz
xchg
int3
into
inc
imul
fisubs
cld
dec
mov
loope
mov
xchg
mov
cmp
lcall
rolb
ja
adc
outsl
cld
inc
sbb
mov
sbb
inc
js
shl
hlt
adc
out
jnp
cld
xchg
rorb
cmp
jp
pop
lock
outsl
test
cli
mov
rcrl
enter
movsb
test
loop
hlt
xlat
push
mulb
mov
cmp
nop
aaa
jae
fwait
inc
cli
aam
jae
dec
daa
repnz
xor
lock
ljmp
cltd
stos
lahf
lock
jb
xchg
push
addr16
cltd
mov
repz
nop
js
pusha
inc
mov
pusha
push
dec
lods
aad
cmp
lods
shlb
xor
test
push
mov
mov
call
sub
xor
push
push
mov
xchg
jg
loopne
loope
or
repnz
divb
jae
in
test
addb
sbb
es
jnp
ja
imul
mov
sar
rcrb
xorb
xchg
lods
int3
fwait
sbb
xchg
cmp
test
jae
xchg
inc
sahf
adc
xchg
dec
lcall
jo
shlb
adc
adc
outsl
mov
cmpsb
fcomi
cli
mov
mov
mov
or
div
mov
jl
jbe
xor
xchg
jmp
or
leave
cli
repnz
mov
inc
shl
sahf
add
lahf
call
lret
adcl
jg
xchg
mov
orb
mov
scas
mov
jg
and
loop
xchg
cli
push
adc
nop
sbb
divb
xchg
inc
add
fidivl
pop
cli
push
xchg
andl
add
xchg
adc
sub
cld
lods
sar
pop
mov
sti
mov
pop
sti
test
cmpsb
mov
cmp
popa
mov
jbe
mov
call
out
push
stos
mov
jp
add
jp
mov
mov
test
mov
and
ja
lds
mov
scas
stos
lods
lds
mov
outsl
xchg
js
in
ret
fstpt
lret
lret
dec
pop
lahf
aas
rcr
popf
lret
cld
jle
dec
add
ljmp
out
mov
in
in
enter
cmp
cmpsb
add
fldt
out
aad
scas
lret
stos
lock
mov
loop
xchg
dec
stos
sar
stos
mov
fcmovnbe
sahf
aam
mov
lods
cmp
mov
xchg
mov
cmpsl
mov
jmp
push
test
cmp
scas
cmp
mov
mov
jge
mov
ja
inc
xor
pop
in
lock
adc
fcmove
pop
mov
jo
scas
jg
fists
add
push
test
fnstenv
gs
mov
stos
aam
xor
js
push
ret
hlt
jbe
cli
dec
fcomip
shl
and
les
push
shlb
movb
dec
imul
jl
iret
in
mov
jg
cmp
movsb
movsb
mov
xchg
fdivl
cwtl
andb
fcmove
mov
rolb
xchg
das
jg
mov
lock
les
push
fcmove
push
lcall
xchg
leave
xchg
aas
sti
dec
stc
rolb
adc
leave
les
adc
stos
xor
cmpsb
loop
js
sub
ret
dec
ds
mov
jns
fcoms
or
clc
hlt
cli
inc
jg
shlb
aaa
ljmp
js
nop
add
push
mull
subb
xor
decl
push
pop
xor
jo
out
jp
add
push
aaa
sbb
rolb
stos
aas
push
jmp
add
shl
lods
cmp
mov
cmp
in
cmpsb
mov
lcall
inc
sarb
ds
mov
push
cld
pushf
xchg
enter
add
fsts
lock
dec
adc
shrb
imulb
rolb
rcrb
mov
dec
outsl
lret
sahf
mov
xchg
inc
lods
loop
xchg
lret
stc
nop
inc
mov
mov
push
cmpsb
mov
pop
and
movsl
movsb
inc
hlt
ret
testb
fcoml
mov
lcall
and
xchg
ffreep
cmp
addr16
mov
dec
cwtl
ret
stc
in
ret
inc
je
xor
and
xchg
inc
dec
shlb
test
movsb
pushf
pop
mov
or
test
sahf
or
lret
pop
clc
ret
xchg
movsb
xor
loopne
inc
out
cmpl
ret
xchg
adc
mov
clc
pop
pop
xchg
mull
jns
mov
subb
aas
hlt
mov
jg
scas
pop
stc
mov
clc
fdivr
add
add
cltd
add
xlat
add
in
xlat
fnsave
sub
cmpsb
or
in
clc
loopne
add
stc
filds
clc
enter
add
call
negb
xorb
sub
movsb
jg
out
imul
out
out
jecxz
jae
push
sbb
fidivrs
out
shrb
ficoms
xchg
mov
xchg
in
xchg
out
push
jae
notl
pop
xchg
xchg
mov
dec
add
lock
sub
mov
fdiv
lock
aam
fimull
fdivs
addb
sti
iret
aam
xchg
xchg
adc
mov
lods
stc
repnz
pop
mov
fimuls
call
jo
xchg
sbb
or
iret
cld
add
jge
inc
pop
sahf
repnz
negb
mov
mov
ja
fistps
rolb
jg
stos
lcall
into
xchg
sbbb
aaa
lcall
cli
test
out
or
icebp
repnz
mov
jae
pop
divl
pop
lahf
mov
cmc
psrad
cmp
inc
fdivrs
xchg
loopne
mov
das
mov
ret
mov
cld
inc
xchg
fs
mov
xchg
int
add
cli
lock
sysret
fcompl
cli
call
in
pop
int3
gs
sahf
in
nop
jo
ss
testl
sahf
cltd
adc
cmpsb
int3
jle
in
pop
mov
lcall
addr16
clc
fwait
sahf
ja
lcall
mov
into
aam
pop
jae
rcrb
js
jl
idiv
xchg
jg
lcall
pop
lock
mov
movsl
push
sahf
movsb
sahf
test
jp
xor
repnz
mov
pop
out
mov
repnz
lods
add
cli
cli
cmp
popa
nop
pop
xchg
dec
cli
jo
scas
ja
out
push
je
inc
mov
mov
idiv
or
jbe
clc
or
orb
adc
nop
dec
fisubs
stos
iret
mov
mov
xchg
dec
stos
into
lods
adc
pop
mov
cli
cmpsb
xor
ror
std
pop
fiaddl
divb
mov
imulb
fidivrs
pop
jae
fs
cwtl
adc
xchg
outsl
and
movsl
mov
adc
repz
repnz
cmpsb
and
lods
sub
sbb
jne
nop
or
iret
adc
movsb
jnp
mov
xchg
and
cmc
repnz
xchg
scas
push
movsl
xchg
insb
insl
sbb
sub
pop
test
and
cmp
and
in
cmpsl
ret
and
movsb
push
adc
mov
xchg
addr16
test
adc
std
xchg
xchg
ret
xchg
cmc
adc
and
fs
pop
lahf
adc
les
test
mov
movntps
cmpsl
lds
and
clc
push
xor
adc
push
inc
lods
test
clc
cmp
pop
mov
mov
clc
mov
jns
sub
sub
pop
and
outsl
gs
ss
mov
loop
stos
jge
xchg
cmp
or
cld
jb
scas
scas
dec
pop
mov
das
mov
cmp
hlt
test
sbb
sbb
out
test
mov
pushf
clc
out
or
dec
adc
ja
mov
and
jle
mov
jl
decb
mov
mov
sbb
pushf
push
or
push
xchg
inc
aaa
outsb
add
xchg
shl
jae
jae
aam
mov
xchg
popa
xchg
xchg
sub
jnp
jo
ret
sub
mov
popf
mov
pop
sar
into
or
mov
mov
push
jg
xchg
mov
repnz
fisubs
out
mov
shrb
nop
push
popf
sbb
sub
mov
xchg
and
js
xchg
repnz
rcl
aam
mov
cmp
out
sub
inc
mov
adc
in
pop
xchg
fisubs
movsb
xchg
inc
jmp
cli
js
mov
stos
movsl
es
fcoms
xor
out
lret
daa
dec
es
in
xor
loopne
pop
movsb
scas
mov
dec
pop
das
aad
clc
push
add
iret
jnp
cmp
jae
push
loop
pusha
mov
xchg
scas
fs
cli
cmp
mov
push
out
and
cmpsl
and
repnz
in
sar
adc
movsl
mov
out
cmpsb
xchg
xchg
sahf
mov
movsl
stc
adc
dec
shlb
cmpsb
dec
sbb
xchg
xchg
add
cli
xchg
xchg
add
cli
movsb
pop
adc
loope
sbb
int3
lods
mov
mov
test
mov
mov
add
cmpl
mov
xchg
movd
nop
xchg
lahf
mov
ss
lcall
xchg
fwait
hlt
daa
lock
mov
loop
fisttps
outsb
adc
scas
dec
repnz
mov
adc
xor
push
dec
fdivs
stos
out
addr16
mov
mov
push
mul
cwtl
xchg
lahf
out
sub
xor
cld
sbbb
test
aam
or
pop
xor
jg
adc
mov
ss
cli
aas
mov
test
outsb
fisubs
fdecstp
repz
lret
xchg
test
loopne
xchg
mov
xor
out
subb
movsb
xor
hlt
mov
stos
mov
test
sbb
mov
push
lret
in
mov
sbb
punpckhbw
sub
xchg
rolb
int3
nop
rorb
repz
cs
add
mov
xchg
sub
ja
lods
mov
pusha
nop
mov
mov
mov
lods
andb
mov
fsubrs
mov
fdiv
add
in
mov
mov
cmp
sbb
popf
mov
lcall
push
xor
mov
movsb
das
nop
and
xchg
nop
scas
loopne
mov
out
mov
xchg
adc
and
add
sub
xchg
sahf
ljmp
in
js
sbb
adc
sarl
xchg
add
sbb
mov
cmpsb
xchg
mov
cli
daa
stos
jle
hlt
jae
movsl
sub
aam
nop
aaa
cld
mov
push
idiv
repnz
push
xchg
es
mov
hlt
mov
sti
jg
iret
repnz
mov
js
and
and
mov
xchg
popf
sbb
mov
fsubs
out
jg
mov
lret
in
aas
dec
xchg
lahf
push
sub
icebp
mov
and
fcompl
mov
ss
xchg
xor
cli
lcall
aam
loop
xor
add
sarl
js
fsubl
mov
insb
fcoms
adc
mov
lahf
mov
add
ss
and
adc
jge
dec
push
cli
lods
xor
push
std
cmpb
rorb
sub
jle
xchg
lahf
scas
and
aaa
cwtl
xchg
cld
mov
divb
mov
ficomps
lds
mov
rcr
pop
cmp
push
ret
call
out
adc
and
test
aad
les
aad
jno
pop
jo
mov
add
cld
adc
mov
test
mov
cmpsb
mov
cld
shlb
lea
mov
nop
fimull
lret
test
or
and
sahf
loopne
mov
out
loope
mov
into
ret
loop
mul
lea
es
pop
mov
sub
popa
and
xchg
call
lods
clc
cmp
rorl
sub
mov
fisubs
xor
repnz
lahf
xchg
mov
ja
cmp
mov
sbb
clc
mov
mov
aam
mov
adc
rcl
ret
inc
repnz
neg
dec
sbb
sub
sahf
xlat
mov
movsl
cmc
mov
cmp
jae
dec
pop
mov
rcr
movsl
push
jge
jns
out
add
mov
neg
lock
sub
pushf
clc
pushf
cmpsl
push
sbb
sub
jns
push
jno
stos
stc
mov
xchg
mov
neg
cli
inc
xchg
dec
mov
cld
xor
cwtl
sbb
adc
clc
jne
hlt
lock
repnz
lahf
xchg
fdivr
pop
ret
xchg
popa
jne
or
testb
mov
mov
sar
movsl
push
add
mulb
hlt
xchg
test
movsl
push
push
xchg
dec
lods
sub
shl
int
xchg
repnz
mov
mov
test
jns
mov
clc
nop
stos
ficoms
movsl
scas
sub
std
sbb
mov
pmuludq
dec
fwait
adc
jp
xor
inc
pop
std
mov
dec
jg
adc
out
imul
pop
repnz
mov
jae
ror
mov
adc
or
out
out
or
movsl
pop
cld
outsl
mov
jle
cwtl
std
aas
jnp
jnp
icebp
jne
mov
cmpsb
imul
ficomps
mov
xchg
cld
outsl
insl
in
lods
sahf
push
les
loop
insb
add
cwtl
repz
negb
test
jg
jo
cld
mov
sbb
icebp
repz
scas
dec
mov
sbb
sub
xchg
mov
mov
ret
sbb
pop
out
in
cltd
jb
jae
arpl
xchg
out
mov
sarl
adc
insb
inc
int3
cli
xor
call
cmp
cltd
adcl
jae
aad
sub
lret
pop
or
pushf
mov
ljmp
or
pop
mov
jecxz
pop
or
stos
sbb
aas
sahf
clc
jae
mov
pushf
hlt
adcb
stos
cltd
test
xchg
mov
leave
xchg
hlt
xchg
mov
test
mov
sti
negb
sbb
stos
pop
push
es
out
push
push
sub
add
mov
and
lods
lahf
inc
cwtl
rcrl
aas
test
clc
out
addb
and
jne
ljmp
jle
aaa
loop
mov
mov
mov
mov
stos
pusha
mov
sbb
jge
movsb
ds
inc
aam
cmpsb
jne
repz
lcall
out
mov
repz
mov
out
je
out
ja
or
shlb
je
push
mov
cmpsb
shrb
loop
into
mov
les
icebp
clc
test
cwtl
mov
dec
and
ss
or
mov
mwaitx
and
clc
cmpsb
cmpsl
cmpsb
pop
gs
xchg
notl
insb
lods
pop
lods
sub
nop
mov
pop
orb
loop
cmp
data16
and
pop
add
arpl
xor
sbb
cwtl
ret
je
ss
notb
mov
daa
lcall
cwtl
scas
mov
rorb
in
or
mov
mov
cli
lds
push
pop
sbb
xchg
lahf
test
push
int3
rcrl
cmc
test
mov
xchg
mov
js
adc
and
adc
adc
cmpsb
add
xchg
adc
test
jno
cltd
repnz
jnp
jbe
jo
push
xchg
jge
jno
and
mov
repz
ja
and
mov
out
insb
data16
push
xchg
add
cwtl
fcomps
fidivl
aad
stc
repz
movsl
negl
cmpsb
and
xchg
sbbb
pop
mov
cli
mov
cmp
mov
movsl
xchg
imul
xchg
xorb
test
mov
mov
lahf
xchg
nop
pop
jae
xchg
sub
cld
mov
lea
mov
into
push
mov
mov
test
outsb
ja
out
fnsave
inc
and
fdivl
pop
sbb
xor
jge
pushf
pop
xchg
and
lahf
scas
push
mov
int3
push
jns
xchg
cmpb
call
and
imul
arpl
aam
popf
lock
hlt
movb
scas
xchg
inc
adc
clc
mov
divb
add
jmp
push
out
add
repz
jo
loopne
out
pop
push
dec
outsl
out
movsl
pop
mov
icebp
xchg
jae
or
call
xchg
sarb
test
fsin
nop
xchg
lods
lock
xchg
sub
fwait
mov
jecxz
rcrb
or
repnz
push
add
or
loope
es
mov
fisubs
jno
nop
pop
and
and
sub
into
cwtl
adc
mov
jge
sti
mov
aaa
mov
sbb
and
movsl
add
lock
or
lods
sbbb
add
sub
pop
fidivl
mov
gs
mov
or
or
pop
mov
jae
mov
jmp
cli
mov
insl
add
push
lods
scas
xlat
fstl
mov
cmpsl
out
outsb
fmulp
sahf
mov
cmpsb
cmpsb
jae
cwtl
lods
xchg
sahf
lock
out
jnp
push
mov
and
mov
mov
cmp
fwait
push
rcrb
pop
jbe
pop
jmp
lock
dec
push
lock
and
das
movsb
movsb
jnp
or
repnz
xchg
lahf
sub
jb
jae
xchg
aad
loope
out
mov
mov
xor
sahf
rcl
mov
mov
outsl
mov
mov
pop
mov
or
push
repnz
or
out
xor
sbb
pushf
cli
jbe
sbb
mov
and
fistpll
push
aam
icebp
push
mov
or
fcompl
aam
cwtl
mov
and
xchg
scas
daa
cmc
cwtl
pop
andl
out
cmpsl
add
loop
jbe
mov
pop
xchg
sbbb
xor
or
mov
stos
jmp
loop
ficompl
mov
loopne
mov
loopne
sbb
and
mov
cmp
mov
inc
test
jo
cmc
out
movsl
jbe
lahf
repz
shrb
xor
xchg
divb
xchg
add
jle
sub
stos
cltd
rorb
movsl
xrelease
ret
sbbb
mov
pop
push
lret
sti
xchg
adc
hlt
loope
out
xor
mov
scas
mov
jg
xchg
xchg
movsb
ss
sub
push
mov
mov
sbb
sar
das
xor
mov
stc
jae
xchg
pop
jg
lock
mov
pop
mov
scas
sbb
imulb
mov
cwtl
xchg
stc
jae
ror
std
adc
adc
imul
mov
sbb
icebp
incb
xor
test
mov
in
xor
into
repz
sbb
inc
mov
pushl
into
fcomi
call
cmpsb
hlt
cmpsb
repz
cwtl
stc
adc
mov
sbb
test
ja
pusha
jecxz
out
addr16
scas
push
push
sbb
dec
out
sbb
scas
mov
xchg
and
aas
movsb
jae
fnstsw
xchg
lahf
cli
and
popf
jb
xchg
cltd
sbb
jg
ss
cmpsb
pop
xchg
dec
in
pop
scas
and
aad
icebp
sub
sbb
das
mov
nop
repnz
lock
cmpsb
mov
add
lods
inc
cwtl
push
stos
dec
fs
outsl
mov
cmpsl
ljmp
ret
lcall
loopne
pop
ss
sub
mov
aas
int
movsl
je,pn
push
lcall
stos
cmp
inc
loope
xlat
dec
shr
sar
incb
mov
xchg
ja
popa
adc
pop
mov
addb
mov
cmpsl
outsl
sahf
mov
ret
mov
cmpsb
mov
cmpsb
stos
cmp
pushf
mov
sub
jb
inc
mov
cwtl
mov
int
xor
xorb
outsb
mov
decl
xchg
hlt
imul
xorl
cmc
ret
mov
jae
xchg
mov
ljmp
mov
test
xchg
and
aam
adc
mov
mov
adc
mov
mov
inc
in
xchg
jmp
xor
orl
xchg
push
lret
nop
hlt
mov
hlt
cmc
scas
lahf
insl
cmpsb
aas
icebp
cmpsl
jg
cli
hlt
outsb
cltd
sub
out
lcall
out
mov
aam
mov
roll
out
popf
sub
pop
enter
mov
mov
sbb
call
int3
mov
sti
andb
das
xor
sbb
lahf
test
pmaxub
add
mov
idiv
xchg
sahf
hlt
adc
or
mov
and
cli
test
mov
cmpsl
ret
pushf
popa
cli
xchg
adc
push
lcall
cmpsb
mov
cmpsl
bound
cmpsb
out
fstl
pushf
adc
mov
mov
add
repnz
sarb
push
mov
adc
ja
loope
mov
loope
ret
cmc
mov
and
adc
lcall
mov
lods
mov
imul
cmpsb
sub
push
imul
sub
cmp
stos
xchg
sti
jg
rcl
lods
jns
mov
nop
and
and
mov
in
xchg
aaa
mov
mov
adc
and
cmpsb
cmp
xchg
add
cld
adc
xchg
rclb
push
cmc
add
rclb
aas
mov
fisubl
mov
imul
sbb
and
jns
sbb
icebp
inc
mov
add
loop
int3
mov
loop
in
mov
sbb
xor
out
sbb
adc
mov
add
nop
aaa
fdivrs
fadds
cli
adc
fwait
mov
imulb
adc
mov
es
dec
xchg
popf
sbb
mov
adc
repz
xchg
dec
loope
jle
add
xchg
xchg
cmp
jg
notb
xchg
cwtl
jecxz
rclb
ja
loopne
mov
in
in
sbb
and
fmuls
inc
or
clc
test
arpl
leave
hlt
mov
xchg
fidivrs
jmp
jne
hlt
int3
mov
jne
xchg
es
mov
in
out
mov
loopne
in
scas
jecxz
mov
cmp
add
ljmp
adc
loopne
xchg
adc
sbb
loop
sbb
orb
daa
repnz
nop
fsubrs
popf
adc
adc
loopne
or
je
std
frstor
in
pop
push
out
adc
pushl
xchg
or
cmp
stos
mov
sub
sub
jg
adc
das
movsl
cmc
mov
mov
add
test
es
jne
mov
popf
mulb
repnz
jbe
repnz
mov
addb
xchg
fisttps
test
pushf
es
inc
clc
hlt
lock
inc
xchg
xchg
js
insl
rolb
mov
shlb
scas
cli
sub
cwtl
jg
nop
punpckldq
xor
cmp
jle
dec
add
push
into
out
jae
out
cmc
push
inc
lock
dec
dec
scas
outsb
bound
out
add
pop
daa
out
xchg
mov
repnz
xchg
adc
adc
mov
ljmp
pushf
add
push
push
repz
push
xlat
push
mov
fmull
jl
jmp
adc
pop
dec
mov
xchg
dec
cltd
pop
dec
sbb
adc
subl
cmc
out
fwait
jnp
test
xchg
dec
outsl
sbb
cld
push
or
cwtl
stos
jg
hlt
sbb
inc
fnstenv
nop
lds
sbb
icebp
rorb
lods
xchg
push
xchg
adc
pop
out
sub
pop
mov
data16
lods
dec
stos
inc
lods
aam
cwtl
loop
out
les
in
mov
rol
mov
sub
scas
dec
iret
into
mov
es
out
mov
std
xor
je
jge
stc
nop
adc
adc
lret
mov
cmpsb
jbe
iret
xchg
scas
scas
cmp
lock
pop
xchg
push
rcrl
dec
out
faddp
push
adc
popf
insb
aad
or
ljmp
mov
jg
add
nop
out
out
add
mov
int3
out
push
or
xor
mov
das
dec
cmp
aas
jle
adc
enter
movsl
int3
leave
sbb
xor
nop
mov
lret
adc
xchg
lock
adc
mov
cmp
mov
xchg
call
cltd
dec
mov
idiv
sahf
mov
repnz
pushf
push
enter
into
pop
mov
push
xchg
xchg
mov
jae
out
xchg
ficoms
push
arpl
pop
xor
mov
ret
cld
imul
stos
xor
mov
or
adc
adc
mov
jns
xchg
movsb
ret
mov
leave
sbb
adc
mov
mov
sbb
sti
xchg
fs
and
sbb
and
lahf
sbbb
or
xchg
ret
lahf
popf
pushf
sub
xchg
jns
mov
repz
test
cwtl
xor
idivl
daa
clc
je
ret
cld
aad
repz
cmpsb
loope
jnp
push
icebp
adc
lods
imul
sahf
inc
test
sub
lods
aaa
notb
xchg
sti
cld
dec
mov
cld
mov
push
mov
ja
cmpsb
xchg
movsb
xchg
in
cltd
cli
xor
mov
push
movsl
cs
mov
in
xchg
pop
jge
sbb
out
stc
and
sbb
call
xchg
add
mov
out
mov
outsb
sub
mov
xchg
leave
test
jno
sti
outsb
test
and
outsl
push
xchg
xchg
div
push
aaa
inc
mov
and
pushf
push
mov
mov
loopne
cmp
dec
out
fbld
mov
sahf
outsl
xchg
adcb
sub
sahf
mov
mov
cmp
lods
scas
clc
in
xchg
adc
mov
sbb
out
into
pop
jno
sti
mov
hlt
mov
cli
arpl
loop
icebp
mov
sbb
cs
cmp
mov
pop
jecxz
scas
cmpsb
andb
pop
movsb
repnz
hlt
jg
sbb
hlt
repnz
jg
sbb
dec
cs
xor
sub
repnz
icebp
xchg
test
xchg
hlt
xchg
movsl
xchg
hlt
xchg
cltd
xchg
hlt
push
lods
repz
pop
shlb
xchg
shr
xchg
mov
xchg
hlt
negb
inc
outsl
sarl
mov
cld
js
jo
andb
rcrb
ja
push
xchg
shll
xchg
mov
clc
sub
das
jne
push
xchg
adc
cmp
clc
arpl
repnz
pushf
cmpsb
sbb
xchg
cwtl
repz
pop
xor
cwtl
rep
lods
lea
stos
into
lret
xchg
lods
mov
xchg
xor
sbb
out
inc
scas
movzbl
push
mov
sub
js
std
scas
test
sbb
xchg
cmp
into
stc
sbb
cwtl
cmp
loope
xchg
divl
sbb
aas
lcall
xor
xbegin
movsl
ss
mov
imulb
add
push
push
xchg
jae
cmpsl
stc
mov
mov
test
int3
andb
and
mov
lahf
add
xchg
sbb
sub
test
clc
mov
fwait
sbb
mov
sbb
cmp
rclb
xchg
cld
out
pop
lods
add
cltd
mov
jle
ficompl
jns
mov
cld
mov
mov
das
cmpsl
into
xor
mulb
divb
mov
jae
test
xchg
cld
jns
mov
scas
or
imulb
dec
lods
mov
movsb
lods
mov
fidivrl
aaa
mov
fsqrt
and
dec
out
jae
dec
lret
mov
adc
mov
jle
into
mov
cmp
mov
dec
jp
inc
popa
sahf
fwait
jne
stos
loop
out
loop
cmpsl
sub
mov
aam
ficoms
cmpsb
pop
adc
stos
mov
cli
mov
xor
cli
xchg
cltd
notl
inc
hlt
mov
xchg
or
or
mov
pop
or
add
xchg
mov
mov
or
mov
sub
xchg
mov
divb
mov
mov
not
fwait
cmovns
or
insb
pop
fwait
xchg
clc
adc
xor
das
cmpsb
das
stos
enter
scas
xchg
decb
pop
sbb
testb
pop
ja
negl
orb
pushf
decl
lods
testl
mov
cmc
aaa
mov
shr
adc
stos
out
or
mov
mov
sbb
xchg
push
ficoms
jae
scas
xchg
and
and
add
lcall
jae
mov
imulb
dec
mov
dec
stos
test
out
fwait
xchg
cmc
loopne
hlt
adc
cmp
cmpsl
xchg
mov
xor
xchg
sbb
add
add
iret
lods
shrb
hlt
ja
fldenv
or
pushf
ret
cmp
cmp
sub
fs
xchg
pmulhw
scas
sub
mov
repz
cld
xchg
cmc
enter
out
push
popf
xchg
adc
inc
mov
nop
xor
xlat
mov
adc
ret
xchg
push
push
fistps
test
enter
inc
repnz
stos
clc
xchg
mov
xchg
cld
adc
xchg
xchg
ficomps
mov
and
mov
or
std
cld
adc
out
mov
mov
cli
incb
stos
adc
xchg
inc
movsb
and
sahf
adc
rolb
xlat
mov
scas
and
lcall
mov
jp
mov
out
dec
pushf
mov
push
mov
adc
pop
mov
dec
xchg
adcb
xor
push
rolb
repnz
loop
sar
cmpsl
or
aaa
mov
in
jnp
push
cmpsl
addl
xchg
xchg
cli
xor
cltd
xchg
push
fwait
test
insb
or
or
repnz
rorl
out
xchg
cli
pushf
rol
ja
test
mov
clc
mov
sub
in
idivb
testb
ret
cmp
shl
adc
adc
cld
pop
mov
out
test
and
mov
mov
add
out
mul
jmp
xorb
hlt
or
mov
movsb
testb
add
mov
movsb
or
inc
mov
fimuls
sar
pushf
push
mov
or
mov
mov
sub
xchg
scas
aas
or
movsl
add
sbbb
lret
cltd
enter
xchg
xchg
vprotw
pop
movsb
xchg
fcmove
repnz
or
sbb
adc
int3
loopne
add
in
xchg
mov
mov
sub
out
add
std
adc
lods
mov
pop
orb
cmc
fcom
mov
nop
pushf
fsts
add
cwtl
cmp
add
movsl
fstp
loopne
ficompl
mov
ljmp
xchg
sbb
fnstenv
hlt
pop
out
test
mov
pop
test
imul
push
pop
repz
adc
out
shll
xchg
cmpsl
sub
xchg
xor
and
push
xchg
repnz
lret
mov
lock
cmpsl
testb
mov
test
lret
sbb
rcr
movsl
and
and
xchg
mov
out
xchg
add
pop
cmpsb
push
or
aaa
xchg
inc
add
xchg
loope
sbb
cli
add
xchg
cmpsl
cltd
sub
cwtl
or
repnz
cmp
mov
mov
scas
scas
cmp
mov
movsl
hlt
sbb
in
sbb
and
outsl
stos
out
test
outsb
cmp
cld
xlat
clc
int3
loopne
lods
sbb
cwtl
xchg
stos
sahf
mov
mov
sbb
out
jae
adc
cwtl
mov
mov
inc
aam
addl
les
mov
fdivrp
sub
movsl
add
sub
in
shrb
ss
cmp
cmpsb
scas
mov
into
cltd
pop
hlt
clc
mov
lock
xchg
mov
pop
sar
out
popf
sub
mov
xor
cltd
cwtl
hlt
lock
xchg
xchg
xor
loop
pop
inc
mov
mov
test
fdivp
pop
mov
mov
adc
jno
mov
add
xorb
xchg
clc
into
or
iret
sbb
mov
fbld
pop
xchg
in
outsl
out
push
push
xlat
xchg
icebp
icebp
sbb
add
repz
sub
test
cld
add
jno
cs
pop
mov
repz
adc
enter
js
mov
test
cmpsb
sbb
inc
aad
sbb
clc
lods
stos
mov
cmpb
xor
test
adc
cmp
mov
jne
dec
xor
xor
fstpl
orb
std
xchg
sbb
aas
xchg
fwait
loop
incb
sbb
or
sahf
xchg
je
in
jle
test
inc
aam
jmp
mov
mov
fs
xchg
sahf
fcompl
movsl
mov
dec
sbb
or
mov
xor
clc
sahf
lods
insb
xchg
aas
shl
std
inc
andb
lods
shrb
mov
adc
push
cltd
mov
cli
nop
repz
icebp
imulb
mov
divb
orb
loopne
xchg
or
mov
negb
sbb
jbe
adc
mov
sbb
lock
or
jno
mov
dec
mov
adc
mov
sbb
cmpsl
sbb
pop
mov
pop
jg
pushf
adc
sarl
stos
pop
ja
js
mov
mov
icebp
xchg
jo
cld
mov
mov
push
and
xchg
mov
stos
or
mov
push
add
cmp
mov
jb
xchg
fdivrl
aad
adc
int3
lcall
clc
mov
xor
lret
aaa
lock
into
pop
out
faddl
push
hlt
out
lds
mov
outsb
mov
add
enter
mov
pushf
sahf
xchg
xchg
sahf
addb
repnz
icebp
xor
jg
adc
ss
ja
ret
scas
hlt
movsl
cmp
push
divb
shl
sbb
test
cmc
jb
lods
aad
pop
push
xorl
movsb
aam
add
sbb
outsl
mov
scas
into
mov
jns
std
lds
mov
xchg
and
shl
cwtl
pop
repnz
rcrl
mov
mov
nop
roll
mov
mov
mov
cli
and
mov
test
mov
mov
shrb
mov
mov
iret
adc
iret
xchg
ret
mov
mov
cwtl
cmp
out
arpl
ficompl
push
sahf
pop
push
arpl
sbb
fbstp
cmp
sti
addl
loopne
sbb
jge
movsl
mov
data16
sub
sarl
pop
addl
inc
and
fdivl
test
scas
repz
mov
movsl
mov
mov
daa
cmp
shl
cli
add
ret
scas
fistpl
addb
sahf
test
mov
mov
dec
inc
mov
repnz
mov
je
shr
movsl
xchg
sbb
mov
cmpsb
adcb
mov
mov
jnp
mov
mov
dec
cs
add
sub
lods
cwtl
cmpsb
int3
pop
xchg
pushf
lcall
mov
scas
jl
xchg
fsub
lds
lcall
out
sti
stos
popf
ss
cmpsb
xchg
lcall
cld
jg
jg
jg
jg
add
fidivl
xchg
mov
dec
test
jecxz
sub
jmp
xor
and
hlt
clc
ljmp
and
into
xor
mov
icebp
pop
fbld
jecxz
xchg
subl
sub
mov
pop
add
xchg
sub
push
test
xchg
fiadds
pushf
cs
fcomps
nop
mov
ds
gs
adcl
repnz
mov
notl
sub
xchg
sbb
mov
clc
ret
cld
cld
daa
notb
sbb
push
push
sar
push
xor
pushf
arpl
nop
add
and
hlt
xchg
mov
push
xor
mov
add
and
popf
movsl
inc
pop
in
ret
rcrl
jbe
mulb
js
ljmp
xchg
cwtl
and
in
les
in
dec
aaa
mov
cmp
fwait
cmp
xchg
mov
fwait
mov
sar
mov
sbb
ja,pn
cltd
xchg
les
cmp
sbb
add
mov
ja
popl
cmpsb
lcall
adc
cmc
push
into
popf
mov
xchg
sbb
cmpsl
hlt
jp
mov
mov
sahf
cmpb
xor
ficomps
mov
xor
inc
mov
mov
add
stc
adc
stos
or
dec
cli
xor
adc
add
pop
rcr
shll
test
lock
sub
in
jno
outsl
mov
popf
sahf
ret
fnstenv
cltd
sbb
xor
sub
push
lods
inc
je
fcoms
hlt
cmp
xchg
ljmp
iret
stos
scas
repz
aad
cwtl
negb
sahf
mov
clc
mov
push
iret
rep
pop
xchg
les
loopne
xchg
lcall
subl
int3
rcrl
mov
jns
jnp
test
inc
lods
mov
repz
push
popa
popf
sahf
sbb
jno
subb
xchg
iret
cwtl
enter
test
test
xchg
into
dec
mov
cs
xchg
mov
pop
mov
subb
sbb
and
adc
jns
movsb
pop
fadds
repz
cmp
and
lcall
xchg
mov
in
lcall
mov
pushf
cmpsb
gs
cmp
xchg
lds
cmpl
cmp
fwait
adc
into
adc
popf
fwait
mov
sbb
je
mov
notb
add
jg
sub
mov
mov
mov
ss
mov
mov
cmpsb
pushf
xchg
xchg
or
mov
clc
and
or
test
mov
jp
insl
cltd
mov
icebp
jb
xchg
stc
sbb
cmpb
aad
push
xchg
inc
and
mov
sbbb
mov
pop
mov
divb
mov
cli
sub
xchg
jae
jge
ret
stc
mov
mov
jno
sahf
sub
cmp
mov
sub
and
jno
mov
sub
mov
adc
adcb
nop
fsts
movq
sub
mov
loopne
mov
and
lock
xchg
cmpb
and
std
cld
jg
scas
inc
pop
mov
rcrb
cwtl
mov
sbb
sbbb
loopne
rcll
cmpsl
out
xchg
loop
or
andb
in
scas
mov
add
cltd
movsl
lock
sub
and
mov
xor
cmp
aam
loope
andb
ss
mulb
pop
xor
mov
loop
sbb
mov
jbe
inc
sub
daa
pushf
mov
cwtl
mov
push
lods
mov
lcall
daa
ret
mov
frstor
and
push
xchg
movsb
neg
add
scas
call
idivb
sbbl
mov
imul
test
mov
sub
mov
mov
sbb
clc
cwtl
cmp
ret
out
scas
stc
sbb
inc
nop
jb
andb
xchg
pushf
xchg
cmc
xor
lcall
popf
and
mov
fs
xchg
cld
jl
mov
xchg
cld
nop
scas
xlat
and
cltd
xchg
dec
xor
js
ret
mov
fstl
and
shll
stc
shlb
xchg
cmp
xchg
mov
add
mov
mov
das
fisubs
mov
push
jbe
lret
push
das
lods
test
clc
mov
cwtl
aad
mov
jmp
test
ss
into
sbbl
test
xor
das
sbb
sub
sbb
ret
mov
mov
into
mov
ds
rol
jae
lahf
xchg
out
aaa
shrb
fnstsw
add
clc
addb
and
push
push
call
clc
addb
xchg
mov
out
lret
cmp
pop
mov
xor
sbb
test
jo
xor
ret
mov
xor
push
repz
mov
stos
and
or
cmp
ljmp
inc
das
xchg
push
lahf
inc
mov
mov
xchg
mov
arpl
je
mov
mov
add
enter
mov
xor
sbb
shl
cmc
sub
cwtl
pushf
and
add
daa
stos
cmpsb
jbe
add
aaa
cwtl
adc
cs
and
mov
cs
push
in
mov
ret
xor
or
ljmp
mov
fidivrl
or
sbb
cmp
xor
divb
roll
mov
and
mov
ss
add
out
sbb
dec
sbb
sbb
ret
jg
xchg
ret
lods
scas
mov
lahf
and
or
jmp
out
test
mov
ss
negb
shrl
mov
scas
test
sbb
test
into
mov
popf
in
out
xchg
xchg
sbb
int3
mov
add
jnp
add
xor
sbb
pop
add
xchg
xchg
std
mulb
mov
push
aaa
mov
sub
test
aam
ror
test
fcoml
push
jg
lea
xchg
jecxz
mov
clc
fbld
fistpll
sbb
popa
das
sti
adc
and
xchg
xchg
xchg
xchg
fdivrs
sbb
insb
xchg
mov
adc
repnz
xchg
cwtl
repz
adc
rep
push
xchg
lods
xchg
test
cwtl
sub
test
addb
mov
adc
xchg
stos
adc
out
sti
das
test
add
sub
jmp
std
and
ljmp
mov
movsb
dec
mov
loop
xchg
movl
and
call
mov
xchg
lahf
cmp
hlt
mov
cli
shl
lahf
in
cltd
mov
lret
test
cli
imul
dec
lahf
movsb
test
decb
push
hlt
inc
add
fcoml
xchg
shl
test
mov
test
cmpsl
mov
lahf
xlat
sbb
cmc
inc
sbb
aas
jmp
test
xlat
cld
xchg
mov
mov
cwtl
mov
add
mov
xchg
and
into
adc
mov
xchg
and
cmpsl
pop
jnp
movsb
adc
cli
pop
movsb
and
in
mov
loopne
adc
test
rclb
sub
inc
cwtl
hlt
movsl
stos
movsb
mov
aas
mov
inc
cwtl
mov
mov
dec
xor
mov
xchg
xchg
stos
sbb
lock
xchg
and
and
stc
xchg
xchg
sub
daa
hlt
adc
test
adc
sub
sbb
xlat
xchg
pushf
sub
fdivrs
test
mov
sub
sbbb
clc
push
in
xor
lods
cmp
cmp
popa
enter
pop
les
cwtl
xchg
rorl
ficomps
cld
pop
std
js
and
arpl
not
ret
mov
or
sbb
cmpsb
cltd
xchg
xchg
jmp
cmp
out
xor
mov
xor
mov
sbb
push
lds
xchg
movsl
cmp
outsl
insb
and
add
xlat
mov
mov
mov
addb
lea
inc
test
fninit
sbb
xchg
mov
test
mov
and
cwtl
call
adc
mov
jp
push
movsl
cld
pop
movb
mov
repz
repz
mov
pushf
xchg
clc
nop
subb
add
inc
jge
icebp
enter
mov
lcall
testb
lea
mov
enter
cld
test
test
jno
test
mov
pop
test
arpl
rolb
hlt
lock
leave
testb
outsl
adc
mov
mov
hlt
hlt
adc
test
clc
mov
mov
repz
fimuls
push
hlt
scas
mov
xchg
sbb
std
addl
jg
loopne
sub
test
adc
test
cmp
mov
enter
fwait
cmp
addb
add
cwtl
mov
mov
test
test
test
insl
or
test
sar
mov
jne
stos
cmpsl
xor
ds
add
mov
xor
cmp
cmp
cwtl
das
subb
enter
fwait
repnz
adc
add
pop
inc
test
test
sbb
adc
out
ss
out
call
cli
stos
cli
xor
and
sub
aam
xchg
pop
test
int3
lea
push
xchg
xchg
mov
sarb
xor
mov
cmpsb
push
adc
lock
xlat
or
push
scas
xchg
pop
int3
mov
add
adc
stc
dec
repz
lock
mov
dec
sub
aad
popl
mov
adcb
scas
or
pushf
sub
mov
fdivr
fldl
sub
or
cli
imul
adc
xchg
add
ret
imul
adc
fwait
inc
adc
fsub
subb
test
repnz
sti
xchg
cmp
sub
adc
icebp
or
roll
add
test
loope
pop
stos
rolb
loopne
adc
rclb
push
mov
mov
mov
fcomps
nop
sub
adc
dec
cmp
sbb
mov
cwtl
xlat
incl
repz
inc
push
pop
jmp
outsl
out
push
sub
jns
mov
cmc
jb
out
mov
jnp
decl
shll
mov
test
int
cmp
lock
and
icebp
ret
stc
data16
push
outsl
mov
lock
mov
jle
addr16
cltd
arpl
jo
lret
dec
loop
jae
cmpsb
sbb
lea
dec
jl
rolb
mov
cld
add
mov
subl
cli
xchg
or
jno
adc
push
mov
mov
ljmp
mov
jle
dec
sbb
and
mov
bound
mov
stos
cmp
jns
sub
aas
cli
xchg
cmpl
inc
fadd
xor
into
mov
adc
jge
outsl
push
testl
scas
mov
mov
push
outsl
std
xchg
fdivrs
ljmp
push
mov
ljmp
mov
add
jle
hlt
lret
test
in
je
insl
or
vmovq
mov
mov
pop
loop
mov
xchg
mov
pop
hlt
andl
jle
xor
orb
fdivr
jecxz
hlt
xchg
enter
mov
mov
out
hlt
movsl
mov
fbstp
xor
add
xchg
aad
and
push
fidivl
xor
orb
cmp
mov
decb
or
shrl
xorl
or
xchg
out
mov
cmp
add
scas
ljmp
xchg
pop
pop
sub
mov
rcll
fiaddl
and
sub
ret
mov
mov
in
xor
repnz
test
mov
scas
loopne
lret
in
jle
sbb
xorb
test
and
xchg
xor
cltd
inc
mov
cmpb
xchg
jp
ret
mov
jne
aas
cld
movsb
paddq
mov
jb
ror
or
sbb
cmpsb
mov
loop
mov
orl
cs
mov
cmp
xchg
mov
into
mov
cmp
fdiv
sbb
pop
xchg
xchg
sbb
subb
popl
into
inc
hlt
mov
jbe
daa
mov
fcmovb
mov
xor
sub
out
test
clc
movsl
lea
pop
adc
hlt
add
mov
cmpsb
inc
std
xlat
jo
js
add
loop
in
or
fisubs
xchg
cmc
lret
add
jae
lcall
add
jno
cli
add
adc
ss
adc
cmc
xchg
orl
jb
dec
sahf
jne
mov
and
lock
ja
xor
jnp
cmpsb
push
mov
ss
xchg
xor
hlt
std
sub
incb
iret
xchg
xchg
fimuls
adc
xorl
pop
mov
mov
addb
test
add
add
jae
jae
out
imulb
xorl
hlt
scas
cmp
mov
xchg
adc
out
cmpb
repz
cmp
scas
addl
adc
or
testb
scas
jbe,pn
into
aam
fstl
cmp
cli
subb
xchg
add
stos
mov
sahf
or
mov
cmp
call
subb
js
scas
hlt
ja
lret
testb
test
adc
lret
fnstcw
sub
xorl
int3
xchg
lods
cli
jne
xchg
cld
test
ljmpw
mov
mov
lea
lds
xchg
mov
test
jle
aam
popf
cmpsl
shrl
mov
dec
inc
pop
std
mov
jecxz
jo
jmp
icebp
test
cmp
icebp
dec
out
idivb
movsl
jge
jmp
jp
dec
dec
xor
dec
mov
mulb
repnz
movsl
push
and
daa
mov
out
xchg
into
subb
int3
bound
inc
outsl
aaa
jae
and
ja
sbb
or
scas
lock
les
add
cmc
mov
sub
adc
sarl
push
je
scas
enter
xlat
jno
gs
add
out
sbb
or
call
clc
cmc
jl
lret
shlb
or
out
adc
pushf
enter
inc
jmp
repz
jmp
adc
out
and
xor
inc
and
out
out
insb
mov
xchg
jnp
fsub
jo
iret
mov
and
mov
int3
push
jb
mov
decb
scas
pop
fbstp
arpl
xor
jmp
jb
in
mov
lret
xor
ficompl
scas
pop
cmp
xor
stos
push
rcr
jb
imul
fwait
daa
divb
push
scas
jae
pop
shlb
fsts
push
decb
push
cmp
cmp
inc
fmul
pop
je
add
inc
in
gs
daa
rorb
mov
mov
lret
enter
inc
into
out
mov
loope
ficoml
cmc
sub
push
pop
in
repz
imul
lea
out
push
faddp
cmp
push
xchg
sub
ret
rolb
sbb
sub
or
scas
inc
ret
xchg
orl
notl
cmpsb
scas
mov
stos
adc
sub
mov
pop
in
mov
or
mov
popf
adc
out
inc
adc
dec
fcmovnbe
pop
cld
daa
es
imul
push
add
stos
cmc
in
ja
imul
lcall
repnz
sbb
adc
xlat
pop
jae
xchg
scas
pop
les
sar
sbb
mov
sub
es
jecxz
outsl
adcl
xchg
add
andl
pop
stc
xchg
insb
fwait
nop
lods
jbe
enter
mov
leave
and
push
imul
inc
or
fcmove
scas
pushf
mov
inc
mov
dec
xor
into
rclb
ss
lahf
enter
mov
fistps
mov
or
inc
pop
out
mov
out
xor
repz
clc
orb
or
imul
movsb
add
ficomps
inc
xor
adc
cltd
mov
fiaddl
mov
pop
xchg
sub
push
cld
call
imul
icebp
mov
scas
inc
lock
pop
out
mov
pop
or
notb
popf
jb
xchg
push
mov
std
ja
outsl
repnz
into
mov
push
push
dec
cmpsb
inc
and
out
dec
mov
pusha
pop
lock
push
ret
ficoml
and
jg
repnz
int3
data16
fwait
outsl
adc
push
xor
jb
sbbb
insb
rorl
icebp
and
mov
or
in
mov
mov
lahf
jnp
lret
int
nop
cld
repnz
repz
or
jae
movsl
fbld
test
add
repz
into
mov
lock
push
dec
jmp
cmpsb
sub
pop
pop
arpl
int
enter
or
xor
imul
and
add
repnz
jne
jae
scas
or
outsl
cld
push
pop
in
cmpsl
outsb
jo
mov
ja
stos
fs
xor
push
cmp
sbb
inc
jmp
out
sub
outsb
mov
negl
pushl
jge
cmp
or
ljmp
jo
outsl
jl
aas
xchg
mov
add
mov
notb
pop
mov
icebp
sub
fwait
jne
pusha
rol
push
enter
cld
dec
pop
jmp
cmpsb
dec
dec
lcall
cmpsb
je
cli
push
mov
jmp
daa
hlt
pop
ficompl
call
out
lock
or
repz
fldpi
pop
jmp
sbb
mov
mov
out
nop
repnz
pushf
movsl
mov
outsl
adc
cld
adc
push
dec
mov
ljmp
jecxz
outsl
or
or
jb
mov
fsubs
jg
ret
fxch
mov
shl
dec
mov
jo
lahf
jb
sub
xor
add
and
sub
mov
outsb
add
notb
addr16
outsl
dec
ja
out
scas
cs
fwait
and
sbb
rcll
les
pushf
sbb
divl
add
out
stc
or
lea
ja
jg
mov
int3
push
pop
xchg
jo
test
lock
out
orl
cmpsb
and
jo
pop
jb
out
vmread
out
pop
addr16
repz
testb
out
jg
sbb
decl
pop
inc
notb
ret
fs
and
test
lret
loope
xor
fnsave
in
add
in
jno
xchg
lock
dec
fiadds
jae
aaa
shlb
xchg
push
add
ljmp
cmp
aad
arpl
mov
inc
lock
jo
scas
shlb
jno
xchg
jge
jnp
out
outsl
leave
ja
stc
sbb
jae
dec
push
xchg
or
outsl
xchg
pusha
jae
dec
inc
push
test
je
push
int3
mov
lock
js
push
or
daa
xor
aad
test
outsl
xchg
pop
dec
push
xchg
xchg
nop
adc
fnstsw
jae
cmp
addr16
ljmp
jp
pop
daa
add
outsl
add
jb
ljmp
js
jae
pop
in
inc
orb
mov
repz
sub
xchg
jl
mov
pop
in
jbe
xchg
jge
cmp
xchg
ds
adc
lahf
nop
jnp
xor
divl
jnp
ja
jbe
movsb
sub
dec
enter
int
js
xor
nop
jb
pop
hlt
add
jle
cmp
dec
push
dec
fimull
cmc
ss
leave
sbb
mov
out
push
jmp
lock
test
xchg
testb
iret
mov
shrb
mov
ja
loopne
enter
repnz
xlat
in
ficompl
aad
dec
lods
inc
mov
enter
cmp
mov
div
jb
outsw
testl
rol
push
push
jno
clc
xlat
fiadds
sbb
pop
xchg
pop
add
ja
push
iret
xor
jno
rolb
dec
mov
into
repz
inc
stc
mov
xchg
mov
mov
push
jae
xchg
add
xchg
loope
xchg
push
repnz
je
sub
nop
xor
popa
aas
adc
icebp
xchg
cmc
out
mov
cltd
dec
xchg
adc
add
popf
pop
cwtl
push
fisubrs
add
aaa
or
out
sub
into
dec
in
aas
out
dec
inc
dec
push
imul
mov
mov
mov
mov
pushf
repnz
into
pop
imul
lock
idiv
push
mov
notb
add
mov
jno
pop
lahf
xchg
jnp
repz
jo
cmp
or
out
repnz
in
test
mov
test
addr16
or
jecxz
test
inc
inc
mov
adc
jae
mov
jo
push
stc
out
je
addr16
pop
fmul
inc
push
inc
dec
mov
mov
add
jno
xchg
xchg
xchg
icebp
pusha
shll
push
dec
out
icebp
out
xchg
inc
jg
mov
mov
push
repz
xchg
fmuls
push
cld
loopne
jo
sub
fildl
xor
loop,pn
inc
jb
faddp
repnz
jp
ret
add
icebp
insl
cld
iret
sbb
scas
enter
push
int3
push
inc
adc
scas
fcoml
sub
ja
sbb
add
test
inc
jecxz
lcall
int3
pop
cmp
xchg
pop
cwtl
or
scas
cmp
sbb
fistpll
mov
xchg
jp
inc
sbb
add
pushf
repnz
out
jb
cli
push
jo
pop
dec
mov
sahf
push
lret
call
xchg
mul
sti
xlat
insl
lock
fwait
add
inc
mov
cmp
push
sub
xor
adc
jnp
scas
call
repz
std
xlat
sub
mov
notl
inc
call
in
popf
cmp
jmp
inc
clc
jbe
clc
add
fwait
push
jg
mov
cld
repnz
lods
cmp
les
hlt
mov
test
jo
lock
cmp
arpl
cmp
mov
pushf
cli
outsl
jge
xchg
outsl
pusha
je
ss
cmp
adc
pop
ja
xchg
mov
mov
sub
push
or
jno
or
or
loope
enter
nop
dec
xchg
addl
jae
mov
inc
push
loope
cmpsb
stc
adc
arpl
rcrb
mov
cli
add
push
ss
dec
xlat
cld
out
mov
mov
xchg
lret
pop
push
rcrb
jg
fnstcw
adc
adc
pop
stos
ficomps
or
out
clc
rcrl
pushf
or
adc
pop
jno
pop
adc
mov
jo
jb
repnz
ds
repz
jb
icebp
test
cmp
aad
ja
clc
dec
stc
push
das
or
jns
out
hlt
jbe
cli
bound
xor
outsl
jo
and
jae
loope
movsl
jne
mov
push
ja
adcb
popf
jo
add
icebp
dec
fisubs
xchg
out
jb
cmp
shlb
bnd
mov
fwait
lcall
or
ja
imul
jg
psllw
pop
jb
jmp
clc
xchg
aaa
aas
repnz
add
push
out
orb
cmpsl
scas
stos
xchg
stc
dec
jnp
sti
add
mov
or
adc
xchg
adc
out
sbb
and
mov
sub
mov
mov
mov
xor
mov
mov
shr
ret
dec
enter
dec
lret
iret
push
shr
push
rcll
push
rcl
pop
out
fcomps
pop
ficompl
pop
out
fbld
popa
loope
loop
out
jecxz
out
call
ljmp
loop
out
fistl
neg
pop
sub
sub
ja
out
pop
icebp
testl
daa
js
outsl
repnz
nop
fucomi
pop
jae
or
mov
pop
add
mov
pop
int
scas
fldt
push
lahf
mov
ret
pop
in
pop
pusha
out
push
rorl
lea
pop
push
out
test
mov
out
lock
lret
inc
inc
or
or
mov
cmc
push
xchg
fisttps
mov
lret
push
jge
mov
sbb
jmp
outsl
int3
mov
inc
aam
pop
out
call
dec
adc
push
add
push
aaa
xchg
in
add
ljmp
lret
out
xor
aaa
ret
jo
sbb
pop
imul
enter
movsl
xorl
xor
xchg
out
xlat
xchg
out
mov
sub
cld
out
arpl
push
dec
push
or
out
and
test
push
jno
push
out
jne
dec
mov
push
adcb
sub
sbb
cmp
cmc
roll
loop
add
pop
adc
mov
loop
sahf
push
mov
jle
add
into
fisttps
xchg
dec
jb
enter
fidivs
popf
xor
adc
aam
call
jg
push
jae
cli
mov
lods
pop
in
repz
sbb
dec
inc
sub
and
in
icebp
iret
push
xchg
pop
inc
mov
into
mov
fldz
fisttps
xchg
cld
mov
pop
mov
cmc
adc
fcomip
subb
fs
incb
out
xor
push
pop
int
addr16
aaa
out
dec
das
inc
push
clc
cmp
sbb
out
maskmovq
negl
and
adc
out
lea
stos
sbb
int3
sub
push
inc
fs
lret
inc
pop
stos
cmc
push
xor
fiaddl
or
pop
mov
pop
jge
lahf
out
jmp
mov
out
mov
or
out
push
roll
push
sbb
popf
add
imul
mov
xchg
mov
in
outsl
aaa
shll
sub
in
fadds
cmp
cs
sub
mov
insb
stos
std
sbb
into
lret
hlt
sti
mov
clc
out
cmp
mov
pop
out
push
or
push
int3
aaa
adc
sub
cmp
mov
aam
mov
cmpsl
cs
aad
iret
out
cmpsl
jne
in
pusha
jno
cmp
jbe
jo
popa
enter
jecxz
out
jle
addr16
ljmp
or
sbb
mov
mov
out
cmp
andb
rep
out
push
push
imulb
pop
rcrb
lds
in
lahf
lret
enter
int3
dec
mov
mov
inc
jnp
mov
sub
dec
cld
dec
aas
scas
mov
out
adc
push
jge
pusha
sub
scas
mulb
out
or
les
inc
mov
xchg
jb
lret
and
jne
ja
out
mov
insb
sahf
test
or
push
and
rolb
mov
test
mov
jb
fcompl
cld
mov
mov
out
mov
ret
xchg
adcb
pop
scas
pop
jbe
repz
push
mov
out
mov
enter
adc
xchg
in
pop
mov
out
lahf
or
add
out
aam
lcall
aaa
cmpsl
in
leave
fcomip
push
in
imul
push
sti
jp
push
mov
cmc
je
stos
jle
jge
cmpsb
sub
dec
pop
pop
mov
enter
add
mov
out
js
iret
add
fstpt
shl
xchg
pop
lock
xchg
bound
shr
ljmp
add
push
fldpi
xchg
pop
cltd
push
js
fmull
or
lock
subb
cwtl
or
sub
cmp
cmpsl
imul
adc
insl
sub
lea
into
pushf
aad
lcall
jne
data16
gs
aam
adc
faddp
rclb
mov
out
mov
cmp
cmc
jmp
pop
popa
into
push
cmp
movb
jl
jnp
pushf
adc
pop
out
or
sub
mov
and
push
mov
lock
leave
sbb
sub
ljmp
jle
pop
in
or
push
jnp
iret
lods
jge
jmp
out
fmuls
das
jge
in
in
out
rcl
xor
insb
loopne
cmc
mov
xchg
push
jnp
mov
into
daa
xchg
icebp
shr
iret
fistl
addr16
out
xor
and
lods
or
adc
inc
cli
ljmp
inc
sub
in
out
inc
mov
scas
fucomip
loop
adc
bound
sbb
fdivl
xchg
loope
ljmp
mov
ljmp
cmp
fwait
in
inc
rcll
fistpll
insb
outsl
mov
cltd
dec
xlat
call
jno
mov
not
out
mov
mov
dec
test
jns
cmp
mov
lods
add
ss
dec
testl
inc
movsl
or
ja
pushf
adc
xlat
cmpl
test
mov
sti
jno
dec
sub
jno
adc
hlt
leave
jge
jb
pop
adc
scas
int
sahf
cmp
mov
dec
stc
pop
test
and
jae
cmp
lret
into
xchg
enter
pop
jle
test
jno
jle
jb
mov
push
pop
push
mov
filds
out
jne
sbb
out
in
pop
or
mov
mov
lock
jg
add
lahf
out
hlt
loope
push
jmp
push
push
out
pop
dec
jmp
outsl
push
xchg
sbb
jp
insl
shll
fwait
adc
fisubl
xchg
cmpsb
mov
adc
inc
adc
lcall
add
pop
lods
xor
jno
sub
pop
mov
push
mov
loop
pop
and
xchg
sub
leave
dec
push
into
scas
clc
notb
repnz
xchg
popa
lret
fldt
outsl
jmp
je
xchg
fmul
js
sub
shr
cmp
pop
sbb
pop
scas
cli
call
out
inc
adc
dec
out
sti
dec
sbb
divb
or
mov
jns
push
and
jl
out
imul
hlt
stos
loope
out
jle
dec
imul
in
call
cld
test
out
lea
cmp
out
push
mov
inc
data16
lret
pushf
dec
arpl
mov
mov
add
dec
out
enter
pop
dec
xchg
xchg
out
nop
test
scas
out
jae
aad
aam
jno,pt
mov
out
jbe
fs
hlt
into
aad
push
out
mov
js
jne
inc
pop
in
sbb
add
sub
jo
fwait
dec
adc
push
xchg
fildl
xchg
adc
inc
inc
ss
add
rorl
and
fsubr
dec
inc
xchg
push
ror
pop
out
jl
stos
or
arpl
adc
inc
and
pop
sbb
cld
cmpb
adc
and
imull
pop
sbb
scas
sub
cmc
aad
dec
cmp
fdivr
lret
int3
jmp
jo
stos
cld
shl
jbe
es
push
jnp
lahf
iret
cld
mov
inc
imulb
outsl
jg
in
mov
sbb
inc
hlt
cmpsb
jno
xchg
js
jle
jae
mov
jl
jle
in
int3
das
scas
xchg
lock
cmc
data16
sbb
sbb
push
and
xorl
icebp
cmp
out
cmp
xor
inc
cltd
shr
outsl
cld
jo
xchg
jo
jae
pop
cmc
lods
stc
fimuls
pusha
mov
cltd
add
lret
icebp
repz
repnz
cwtl
out
mov
adcl
bnd
mov
int
loopne
lods
jb
dec
mov
mov
in
ja
adc
add
inc
xchg
push
cld
nop
pushl
repz
fs
jno
inc
shl
rolb
mov
cmp
lahf
push
clc
out
xchg
lret
add
test
js
lcall
xorl
pop
lock
mov
hlt
jo
or
repnz
lock
nop
jno
jmp
test
mov
or
jne
call
mov
xchg
icebp
pop
aas
jge
jg
or
lahf
adc
mov
addr16
loop
nop
mov
or
not
repnz
ja
fstpt
repz
es
mov
xrelease
aas
repnz
repz
jae
pop
arpl
shll
cmpsb
icebp
sbb
orb
std
popf
scas
fists
jae
mov
rorl
mov
cli
mov
rclb
je
clc
push
push
pop
mov
fistpll
idivb
pushf
sbbb
mov
notb
lock
cmc
jg
addr16
mov
mov
mov
mov
lods
jnp
lock
je
sti
jg
jb
xchg
xor
jl
jl
push
pushf
sbb
sar
push
jg
repnz
mov
sarb
pushf
xor
adc
jg
sub
repnz
adc
jg
sarb
jg
mov
xchg
jae
ss
rclb
inc
inc
decl
jb
out
je
cwtl
imul
gs
sub
iret
and
xor
sarb
cmc
mov
lock
je
stc
icebp
adc
jno
jb
dec
dec
out
js
inc
cli
fsts
mov
fmulp
inc
fldcw
push
jecxz
into
add
mov
ja
push
mov
xchg
jg
cmp
jo
jo
inc
add
es
mov
lock
mov
repnz
push
hlt
mov
mov
mov
lock
dec
arpl
mov
stos
mov
ss
loopne
nop
icebp
lock
pop
ds
mov
dec
pop
cmp
mov
sarb
in
jmp
aaa
xor
mov
xchg
bnd
mov
addr16
jb
or
fnstsw
repz
es
mov
xor
divl
enter
lret
mov
aad
sti
adc
jg
jg
ja
pop
iret
out
jbe
mov
andl
nop
cmc
jg
jo
add
divb
jne
mov
adc
rorb
leave
xchg
cmp
das
das
iret
xlat
add
addb
mov
add
xchg
repz
lock
in
iret
jmp
cltd
push
arpl
stos
lcall
cmpsb
xchg
add
fsubr
pop
push
mov
mov
out
test
xchg
push
repz
ds
shl
xchg
jae
jo
incb
repz
repnz
loop
fsubr
add
ljmp
repz
xchg
stos
ss
mov
sbb
add
sbb
scas
nop
push
lcall
push
xchg
bnd
push
sbb
sbb
into
orl
sbb
cltd
push
push
xchg
mov
adc
and
add
insl
jns
jp
ljmp
sub
or
adc
xchg
lcall
adc
loopne
mov
fisttpll
push
outsl
leave
mov
popf
sub
outsl
jmp
inc
mov
xor
sbb
rol
loop
out
jp
hlt
mov
call
mov
je
sub
inc
mov
or
out
pusha
dec
push
adc
xchg
adc
and
aas
out
and
movsl
push
or
mov
mov
adc
lds
and
testl
or
scas
sahf
mov
sub
or
aas
mov
dec
jo
insb
add
cs
out
ficoml
fistpll
loop
mov
jmp
mov
shr
push
jbe
gs
movsb
and
int
imul
sbb
cmp
mov
insl
mov
or
scas
push
dec
sbb
stc
and
popf
jp
arpl
push
or
xchg
jbe
out
test
xlat
pop
repnz
out
dec
mov
inc
dec
out
fsubl
je
sub
and
fwait
psubd
into
jb
pop
pusha
out
or
push
sbb
out
gs
int3
or
adc
cmpl
out
xchg
pop
dec
add
xor
repnz
add
add
sbb
dec
fucomi
xor
push
leave
in
stc
out
inc
enter
push
data16
push
icebp
xor
push
or
jo
adc
lret
sbb
arpl
rolb
out
pop
mov
das
addb
jmp
jb
pushf
push
dec
xlat
fs
fidivrs
and
dec
fmuls
dec
sub
fs
gs
cmc
xor
push
xchg
outsl
push
mul
icebp
out
inc
sbb
dec
fdivl
cmpsb
clc
mov
dec
inc
gs
dec
out
push
int
insl
add
in
adcb
jp
repnz
sbb
aaa
cld
mov
subb
loop
aad
mov
test
pushl
mov
hlt
sbb
inc
daa
outsl
sti
sub
jae
out
es
pop
inc
loop
ljmp
lds
pop
sbb
xchg
push
fsts
pop
adc
stc
and
mov
add
sub
pop
mov
jne
js
xor
mov
fidivrs
idivl
push
int3
sub
divl
repnz
jb
mov
daa
xor
mov
or
mov
jmp
test
add
xchg
jnp
bnd
cld
stc
add
cltd
xchg
jno
int3
stc
jnp
lock
scas
pushf
test
push
sbb
pop
add
out
out
fistl
clc
out
outsl
les
rolb
std
and
cli
jae
jne
ljmp
jo
pop
xchg
lahf
cld
xor
ja
shll
adc
push
sahf
cld
xchg
hlt
pop
mov
aad
add
push
mov
cld
fidivl
jg
push
je
insb
pop
pop
popa
sti
movsb
push
jno
jecxz
and
mov
push
test
adcb
out
jbe
and
mov
mov
push
popf
cmpsl
in
jnp
divl
xlat
push
inc
test
xchg
jb
add
add
push
mov
div
xchg
into
add
jae
mov
xor
dec
roll
lret
shlb
push
jo
roll
add
leave
rolb
hlt
xchg
mov
xchg
add
sti
dec
xor
pop
insl
fcomp
push
dec
jmp
pusha
mov
ds
pop
hlt
cmpsl
icebp
xorb
dec
and
push
add
dec
call
fiaddl
sbb
repz
out
sbb
dec
push
xor
sahf
and
leave
aad
inc
jmp
adc
or
test
cltd
cmp
mov
int
clc
mov
jp
xchg
push
aaa
mov
sahf
push
sahf
bound
xor
addl
sahf
push
out
sub
enter
mov
nop
sahf
xchg
fadds
hlt
imul
sbb
stos
xchg
mov
insl
lods
mov
nop
add
lds
lcall
jae
mov
imulb
pop
icebp
jbe
icebp
outsl
fidivl
clc
inc
bnd
fs
test
cli
cmp
mov
inc
jbe
or
fistpll
jle
lock
int3
icebp
xor
xchg
cltd
dec
push
cld
popa
outsl
inc
xorl
cmpsl
scas
sub
sub
insb
pop
pop
cmp
test
lock
mov
loop
xor
or
jmp
ja
cmc
idivl
lock
clc
ds
negl
xchg
clc
pop
mov
mov
sub
stos
add
pop
mov
push
mov
dec
xor
fcomps
adc
mov
cmp
dec
jne
mov
mov
dec
cmp
aas
bound
aad
push
not
mov
xor
xchg
cmp
jnp
mov
and
add
ret
jne
aas
jge
arpl
mov
xor
enter
insl
repnz
jo
and
or
mov
addr16
pop
out
dec
data16
repz
push
ror
div
aam
and
mov
cld
push
cli
dec
inc
notb
jg
inc
mov
jg
xor
xlat
jb
daa
testl
ja
lods
cmp
sbb
ss
shrb
pop
mov
fnstcw
mov
stos
pop
out
movb
push
int
push
negb
add
or
test
in
repnz
mov
not
and
adcl
movsb
cld
adc
xor
inc
cmc
ret
pop
mov
and
filds
out
push
inc
inc
dec
fstps
mov
dec
mov
jne
mov
rclb
jg
fildl
stos
lods
dec
xor
das
enter
rclb
in
cmp
adc
bnd
lock
out
mov
rorb
xchg
push
xchg
jmp
into
cmpsb
repnz
jae
nop
icebp
adc
movsb
pop
adc
data16
notl
jno
push
pop
lods
jae
adc
pusha
ljmp
jp
bnd
testl
das
push
xor
call
xor
mov
icebp
insb
sbbb
ds
jbe
xchg
mull
or
or
rcll
add
mov
cmpsb
push
cmp
jne
lea
adc
xchg
xor
jl
jb
push
inc
mov
sub
pop
mov
or
push
enter
and
fstpl
xor
mov
dec
cmpsb
jg
adc
xchg
sbb
stos
mov
cmp
pop
jg
add
loop
enter
cmpsb
xorl
aas
cmpsb
add
add
dec
js
jae
add
repnz
jmp
add
ds
nop
stc
push
repnz
mov
adc
pop
add
aam
jnp
je
repnz
lods
sbb
inc
sbb
pop
pop
sub
add
push
sbb
xor
pop
xor
or
in
aad
cmc
aaa
add
mov
repnz
mov
jg
push
in
fstl
repnz
mov
add
lock
ficompl
repnz
sbb
out
jo
cmp
jae
inc
repnz
or
sbb
jmp
mov
sahf
sbb
inc
pop
dec
jae
jbe
mov
ds
nop
add
mov
pop
jns
mov
imul
in
repnz
clc
into
pop
enter
int3
rcr
inc
lret
sbb
mov
push
arpl
jns
scas
push
push
shr
lock
movsl
repz
xchg
add
ljmp
repnz
hlt
ds
gs
jo
rol
sub
dec
mov
mov
mov
aaa
or
mov
js
xchg
pop
icebp
xchg
or
mov
or
mov
or
inc
das
gs
test
or
fwait
inc
jmp
test
imul
adc
aas
cwtl
dec
pop
xchg
xchg
scas
dec
pop
sbb
jbe
add
cmc
stos
sar
pop
push
ret
mov
scas
dec
imul
lret
pop
pop
cmp
je
out
push
inc
shrb
xchg
sbb
push
icebp
gs
rcrl
xor
jno
xchg
inc
mov
add
icebp
sub
lods
dec
adcb
ds
sub
adc
repnz
push
cmc
iret
jg,pn
into
data16
rclb
add
ret
stos
sti
xchg
repnz
sbb
lock
cld
adc
das
adc
xor
mov
je
test
je
repnz
xor
ds
xor
pop
sti
pop
xchg
mov
neg
or
xor
or
mov
mov
dec
test
inc
cs
sbb
sub
arpl
repnz
pop
loopne
add
mov
cs
cmp
add
jae
repnz
loope
xlat
shlb
sbb
div
dec
jno
outsb
testl
xchg
cltd
xchg
jne
push
inc
xacquire
scas
mov
push
mov
idiv
dec
popa
xchg
adc
push
jbe
jg
dec
popa
push
idiv
sbb
jb
jbe
xor
jno
pop
cmp
fdivrs
stc
es
xchg
mov
icebp
jge
test
jae
mov
pushf
add
icebp
std
out
jg
aad
ja
fs
cmp
mov
movsl
out
cmp
inc
pop
jecxz
mov
out
ret
enter
dec
out
or
xchg
mov
mov
dec
xorl
mov
mov
cmp
sti
lods
xchg
addr16
aas
xorb
push
es
mov
fucomi
rorb
inc
shl
sub
incb
insb
push
sub
mov
aas
adc
test
sarb
lods
mov
lea
push
fmuls
and
scas
les
pop
cltd
dec
int3
jo
in
daa
into
mov
mov
fdivrl
push
in
lret
inc
inc
adc
adc
hlt
sbb
cmp
and
add
daa
mov
fldcw
or
rclb
out
xchg
movsb
data16
nop
pusha
aam
int3
mov
aad
cmpsb
xchg
daa
leave
sar
ds
or
lods
adc
rorl
adc
xor
pop
cli
aad
jl
xor
pop
jo
insb
nop
jae
mov
clc
fisubrl
out
incl
jo
or
pop
add
out
jl
aad
insb
xchg
in
adc
sti
stos
xor
pop
gs
push
leave
mov
mov
out
mov
ds
pop
fstpl
test
cmpsl
shr
mov
nop
fstps
dec
pop
aam
cmc
sub
repnz
adc
ss
cs
out
pop
leave
mov
dec
fbstp
dec
sub
cmp
lds
stc
pop
sarl
out
loopne
pop
mov
outsl
faddl
ljmp
cltd
and
dec
and
lea
push
out
mov
repz
mov
popa
mov
out
pushf
cmp
cwtl
sub
loopne
sti
cmp
xor
pop
sub
or
iretw
add
xchg
push
push
sbb
inc
push
pop
pushf
xchg
movsb
outsl
fldcw
ljmp
pop
adc
aaa
mov
xor
add
sbb
int3
js
pusha
or
jbe
mov
push
push
sti
jle
out
fstp
pop
loop
xchg
enter
push
das
in
test
out
out
mov
mov
cmp
out
pop
fsubr
mov
jle
xchg
or
xchg
das
fisttps
lcall
rorl
inc
ljmp
aam
out
sti
gs
pop
sbb
ja
xchg
sbb
push
out
bound
mov
ret
xchg
aad
and
or
pop
scas
rcl
orb
cmp
mov
pop
inc
into
and
out
cltd
repz
mov
ja
sbb
mov
testl
xor
xor
sub
lods
mov
es
aaa
imul
adc
mov
jmp
out
add
and
push
xor
shrl
sub
out
dec
jns
xor
cmp
out
aad
es
out
push
cmpsb
mov
or
push
js
jp
in
ret
loop
mov
mov
int
stos
dec
lock
leave
adc
scas
xorb
out
pop
mulb
sbb
shlb
add
jnp
out
mov
and
xchg
xor
into
mov
cltd
jb
fimuls
mov
sub
xor
pop
test
imul
sbb
divb
in
sbb
mov
pop
popa
dec
out
mov
mov
and
nop
xchg
dec
into
or
cmpsl
lahf
iret
repz
jbe
imul
mov
into
addr16
jae
bnd
pop
cmp
aaa
sbb
jbe
jo
sbb
imul
jno
jne
aam
mov
int
ljmp
mov
sbb
cmc
push
dec
daa
jno
dec
iret
idiv
jne
xchg
add
pop
call
je
aad
adc
fisttpl
dec
daa
xchg
rolb
aaa
out
dec
loop
shl
loopne
or
mov
xchg
popa
movsl
push
sbb
mov
in
or
repnz
cmp
dec
out
dec
aad
popl
push
jg
aaa
ja
mov
cli
hlt
push
popf
imul
popa
cli
jae
ja
jb
mov
stos
dec
cmpsl
les
and
cmp
mov
jns
lea
jg
mov
xor
fnstsw
jmp
push
sahf
int3
fistl
pop
imul
fdivrs
insl
cs
mov
shl
xorb
push
fnsave
jno
scas
mov
lcall
insl
xchg
sub
sub
sub
rcl
lock
mov
fnstenv
movsb
sub
es
rcrb
xchg
jo
xchg
mov
sahf
movsl
repz
cmc
popf
loope
call
sti
fnsave
popa
fs
cmp
inc
testb
out
div
dec
shrl
mov
ja
loop
cmp
mov
lea
pop
outsl
repnz
js
into
das
icebp
push
lods
je
bound
dec
push
jne
jo,pt
shrb
pop
ja
cld
sub
divb
jle
mov
data16
pop
insb
mov
in
pop
popf
stos
cmp
fcmovnb
jb
clc
jno
fs
dec
aam
popf
mov
ret
fwait
pop
push
mov
lret
pop
rorb
inc
shll
cli
and
or
pop
in
fsubrs
dec
cmpsb
xor
jno
xor
fsts
mov
xchg
gs
repnz
fwait
stos
dec
pop
subl
inc
mov
popf
mov
mov
out
fisttpl
xchg
or
aam
ja
jae
xor
and
jns
sbb
push
dec
jbe
xchg
movsl
jnp
in
push
movsl
negb
jo
lock
mov
imul
push
xchg
cmp
repz
jns
jae
or
mov
jnp
divl
je
mull
out
or
in
outsb
aas
add
pop
pop
ja
ljmp
fdecstp
in
mov
ljmp
push
int
xchg
push
push
lods
jo
das
push
inc
frstor
test
jo
jne
cmp
and
cmpsb
jg
mov
test
xchg
arpl
cltd
hlt
or
xor
sahf
das
out
push
enter
sti
in
xchg
out
pop
or
out
lods
jne
push
aad
adc
outsl
popa
mov
and
stos
xor
imul
mov
lret
add
out
stos
pop
rorb
adc
loop
xor
cmc
dec
push
mov
sbb
sti
lods
loopne
out
lret
push
mov
mov
in
or
mov
push
jl
rcrb
push
test
pusha
daa
mov
loope
hlt
std
dec
and
jl
xor
jns
pop
sti
and
push
cmp
notl
mov
iret
or
inc
cld
jmp
xor
ror
shrl
out
fcmove
pop
sbb
sub
out
push
fildl
fcomip
js,pn
out
out
xor
adc
sbb
out
pop
sub
pop
push
inc
test
cmp
push
out
mov
push
xchg
enter
in
jl
pop
jno
mov
rcr
in
mov
mov
mov
sub
aad
std
jg
or
inc
out
stos
ret
push
ja
ss
dec
jo
movsb
xor
adc
shlb
loop
aaa
sub
out
cmp
adc
dec
insb
jl
push
fistpll
jecxz
stos
shrl
adc
mov
popf
out
lcall
xor
add
xchg
lahf
leave
and
std
adc
add
dec
out
cmp
dec
mov
jge
jmp
xor
push
mov
add
int
xchg
sub
pop
jb
cmp
pop
imul
jp
out
jne
fs
scas
mov
fbstp
out
jle
lds
inc
out
jne
mov
or
pusha
out
ja,pn
jmp
cmp
inc
insb
mov
scas
and
jmp
fmulp
rcr
orl
shr
and
jnp
fcoml
mov
test
push
movsb
in
outsl
stos
push
into
fistpl
adc
mov
dec
xor
movsl
out
ds
dec
and
out
xchg
aaa
xor
lods
rclb
adc
pop
adc
and
fimull
ss
push
addr16
inc
add
cld
mov
loope
out
and
push
adc
mov
sub
ds
push
dec
push
mov
in
push
inc
mov
adc
mov
out
or
push
inc
pushf
roll
sub
mov
push
imull
inc
mov
inc
pop
lret
dec
out
push
fs
loop
dec
out
mov
mov
out
fstl
fdiv
pop
stc
aam
ficomps
jge
lret
rcl
in
fwait
test
dec
aam
mov
cld
jle
in
out
icebp
xor
inc
push
jecxz
stc
jb
adc
pop
sub
loop
ja
push
cli
mov
dec
mov
pop
jle
mov
lock
pop
cltd
hlt
mov
sub
add
orb
mul
pusha
ss
add
js
mov
adc
test
jno
ljmp
jmp
or
in
scas
bound
push
cmp
xchg
popf
jle
fstpt
addb
push
mov
out
test
cmc
sbb
xor
out
aad
inc
lods
or
stos
insl
cmc
and
mov
jmp
out
add
movsb
or
jge
jbe
mov
lods
pop
mov
scas
jmp
subl
pop
push
scas
inc
and
xor
popa
sahf
sub
fidivs
lock
xor
aaa
shlb
fisubrs
sti
lods
xchg
stos
push
ds
imulb
imul
mov
nop
cmpsl
fldl
out
xlat
inc
and
push
out
add
rolb
fs
mov
mov
shl
push
push
mov
in
sub
inc
jbe
sub
cmpsb
ret
stos
jle
or
enter
mov
add
fldt
testb
and
int3
sbb
decl
sbb
mov
xchg
popf
out
mov
ss
adc
ljmp
pushf
fs
or
insl
sti
in
mov
pop
mov
fbld
lock
mov
lret
jb
outsl
inc
sarb
pop
cmpsb
xor
std
fisttps
nop
push
jo
out
xor
inc
and
fldln2
out
push
js
xlat
cmp
insb
out
ds
mov
out
shl
xorb
lods
adc
ljmp
dec
xchg
sbb
mov
dec
pop
sbb
fs
mov
sti
movsl
dec
rcrb
lret
out
out
adc
add
roll
cwtl
leave
insb
or
cltd
out
out
and
push
ret
pop
shlb
push
adc
mov
out
out
jae
test
xor
in
loope
cltd
dec
pop
out
and
push
adc
dec
dec
mov
push
and
mov
out
sub
dec
mov
add
pop
cmp
mov
mov
jle
pop
cs
mov
jmp
dec
out
es
push
and
std
aam
sbb
sbb
and
andb
pusha
out
out
imul
outsl
int
addl
out
stos
xlat
insb
sarl
inc
and
jo
inc
pushf
sbb
fbstp
enter
sbb
xor
out
xchg
shlb
cmp
mov
sub
jae
enter
lret
inc
js
insl
out
cmp
sbb
fstpt
out
enter
clc
arpl
xlat
pop
jecxz
subl
loop
cli
cmc
dec
lcall
add
xor
push
jo
push
jmp
in
jl
dec
push
cli
mov
ljmp
push
stc
sbb
sarl
inc
stos
lahf
add
int
scas
rclb
cmp
repnz
xchg
jnp
out
inc
out
leave
push
mov
xor
sti
js
cmp
mov
push
or
inc
mov
push
cmpb
jle
xchg
mov
pop
mov
xchg
cmp
adc
ljmp
xor
mov
cmp
mov
ja
gs
adc
sbb
jae
sar
shl
repnz
jle
sbb
or
xorb
xchg
shlb
mov
pop
sbb
data16
es
push
arpl
popf
nop
outsl
fdivp
sbb
out
fwait
lock
jge
cmpsb
cmc
adc
sbb
xor
push
icebp
fistpl
lds
out
or
dec
cmp
xor
loopne
aaa
push
and
popf
and
adc
movb
insl
ds
sub
sar
jb
xlat
jg
sarb
inc
push
sub
popa
out
rcrl
jecxz
stos
fst
jo
sub
lret
push
out
cmp
mov
loope
adc
adc
aas
out
mov
icebp
inc
lods
add
sub
pop
xchg
int
jb
inc
adc
and
jmp
pop
lahf
pushf
out
cli
inc
mov
out
cltd
repz
jbe
out
jb
mov
add
movsl
out
inc
pop
push
cmp
add
js
or
fndisi(8087
imul
ds
out
dec
outsl
mov
push
pop
shr
shlb
pop
ss
leave
pushf
stc
push
outsl
inc
or
in
pop
mulb
out
push
int
inc
enter
sbb
dec
dec
xor
jmp
pop
jbe
je
push
add
mov
jge
faddp
xchg
lcall
add
popa
mov
fsubs
out
negl
data16
mov
jecxz
mov
add
pop
out
sub
mov
loop
std
sbb
dec
into
shlb
iret
xor
or
aam
xorb
jb
pushf
sub
out
shlb
repnz
lods
pop
out
loop
jmp
ret
or
or
mov
inc
sbb
sbb
mov
gs
sub
out
mov
cmp
cmp
xlat
out
dec
jne
adc
fldcw
jle
or
out
mov
les
sub
std
mov
outsl
push
out
mov
inc
and
sbb
push
loope
xchg
cltd
out
call
iret
sbb
ds
mov
pop
dec
ljmp
popf
mov
pop
scas
cmpsb
arpl
cltd
out
dec
rcll
and
and
outsl
dec
jmp
jae
lret
ljmp
ret
int3
cmpsb
jmp
dec
pusha
push
xor
out
push
mov
jecxz
out
xchg
mov
call
test
out
fistl
shr
fwait
jge
daa
adc
inc
ljmp
mov
or
fists
xchg
fwait
lods
or
sti
sub
out
clc
xchg
fldl
rcr
js
add
push
mov
jb
push
mov
loope
insb
adc
sarb
out
push
push
ds
mov
xchg
out
xor
push
xor
mov
pop
test
out
xlat
aam
xor
cmc
sub
mov
mov
out
sub
scas
pop
sub
inc
outsl
push
std
cld
out
xor
ss
out
stos
sti
fnstsw
out
sbb
out
imul
fwait
xchg
outsl
and
rcrl
sub
pop
inc
pop
adcb
pop
out
repnz
pop
xor
or
ljmp
test
ds
pop
repnz
shl
pushf
mov
fwait
mov
leave
pop
pop
xor
out
imul
jle
push
daa
cmp
cld
lock
cmp
out
jo
jge,pt
jns
outsl
lds
enter
jo
or
iret
fdivrp
xchg
mov
add
jle
add
add
cmp
sbb
xor
sub
push
cs
outsl
stos
popf
add
enter
int3
fsub
lds
push
add
loope
out
cld
sub
inc
cmc
je
cwtl
fldt
push
xchg
sub
addr16
cmp
insb
out
into
xor
jne,pn
out
adc
mov
out
rcr
mov
aam
mov
out
inc
push
dec
pop
enter
mov
out
mov
ror
test
out
fimull
mov
out
cmp
fildll
repnz
inc
scas
rclb
testl
into
xchg
and
mov
scas
insb
inc
pop
ljmp
out
rcrl
repnz
rclb
adc
daa
bound
lock
movsb
out
les
mov
outsl
mov
aad
loopne
call
scas
imull
leave
out
out
mov
inc
xchg
mov
lret
test
repz
out
xchg
nop
loope
xor
insl
fwait
jbe
scas
div
andl
adc
lock
jle
jne
idivl
dec
push
add
jl
dec
mov
add
pop
xchg
insb
jb
jmp
out
out
pop
add
mov
pop
jae
in
mov
pop
out
mov
xor
es
test
add
addl
fimull
push
jbe
fildll
sti
sub
ss
pop
adc
jbe
adc
test
fsts
scas
sbb
out
dec
inc
push
cmp
inc
push
aaa
jge
dec
jbe
shlb
xchg
out
enter
push
fistpl
pop
je
inc
addr16
sub
in
out
insb
add
or
out
mov
in
push
jno
xor
out
sbb
jecxz
rorb
cmpsb
xor
scas
aaa
push
lods
cmc
sub
cmp
jb
data16
popf
xchg
xchg
pop
out
ffreep
and
jb
out
daa
leave
out
mov
pushf
dec
or
adc
loope
mov
cmp
adc
cmpsl
mov
sub
arpl
push
mov
or
mov
sbb
lods
jbe
mov
adc
mov
sbb
or
out
pop
sbb
mov
out
push
bound
das
popa
rcll
std
insl
inc
fisubrs
or
loop
sub
test
test
push
cwtl
sub
cs
sbb
adc
hlt
lret
loopne
jmp
pusha
aaa
mov
dec
repnz
lods
adcb
dec
lea
pop
enter
push
add
testl
and
pushf
pop
dec
mov
xchg
out
xchg
cwtl
push
and
xor
out
jge
inc
cmpb
mov
sub
test
outsl
ss
aas
pop
and
dec
mov
cltd
mov
sub
out
loope
jecxz
sub
out
scas
test
xchg
leave
ja
xchg
dec
mov
repnz
lret
jae
hlt
mov
xor
ss
les
sahf
ss
out
lret
mov
adc
sub
out
je
jmp
dec
sub
out
adc
pop
push
add
bnd
sbb
das
incl
mov
out
lods
into
jp
pop
bound
out
inc
jecxz
jg
es
call
decl
lock
rorb
jmp
mov
jns
jb
pop
sbb
testb
ret
pop
ja
aam
sub
in
inc
in
stos
mov
xor
in
cmp
dec
lods
add
stos
jb
xor
push
fcomp
pop
je
shlb
pushf
xchg
lahf
lds
out
sub
lea
cmp
xor
jbe
adc
xchg
sarb
out
hlt
in
add
mov
sbb
and
test
cmp
test
push
ret
sub
out
or
mov
jg
mov
push
adc
add
imul
insl
lret
in
ja
out
jecxz
neg
mov
pop
push
out
fsubl
sti
mov
jmp
and
sbb
hlt
fs
add
iret
push
pop
mov
mov
je
out
scas
jmp
mov
jmp
dec
dec
adc
aas
out
fsubs
lahf
out
push
data16
clc
and
fstps
mov
cmpb
je
xor
mov
out
in
sbb
imul
sbb
scas
and
fimuls
out
push
jne
xchg
pop
add
and
pop
insl
and
fistl
push
loop
mov
dec
add
cmp
pushf
in
outsl
adc
xchg
fdivrp
cmp
popa
xor
dec
in
in
mov
stos
dec
push
jle
add
aad
dec
fidivrs
std
and
jo
lea
adc
add
sub
or
iret
xchg
in
inc
mov
leave
adc
enter
xchg
pop
out
xor
shrl
cmc
aaa
dec
int
out
fmuls
inc
cltd
pop
lret
mov
sbb
sub
jo
cmp
loopne
mov
or
sub
and
jne
xchg
repnz
into
mov
push
repnz
aaa
repz
jle
repz
loopne
dec
mov
dec
ret
fwait
ja
bound
insb
mov
fwait
movl
jmp
dec
cs
sbb
mov
data16
arpl
std
aas
out
les
lea
mov
popa
jle
mov
fidivs
in
xor
xor
repnz
out
and
jp
push
or
stc
lret
enter
int3
push
mov
cltd
cmpsl
fucomi
mov
pop
fstl
hlt
and
xchg
mov
orl
out
push
outsl
gs
out
rorl
sahf
pop
adc
mull
fistpl
scas
imul
in
or
popa
sahf
cmp
negb
xstore-rng
cmpsl
les
fnstcw
xor
scas
mov
out
mov
fsubr
jnp
xor
xchg
sbb
aaa
outsl
cs
inc
insl
inc
outsb
sahf
xchg
jmp
jb
insb
and
into
push
mov
jmp
mov
adc
push
loopne
lret
fimuls
jecxz
std
subb
mov
fistps
fs
dec
push
test
scas
sahf
stc
pop
jb
sar
into
dec
dec
dec
mov
insb
or
scas
gs
pop
fimull
aaa
out
mov
and
jo
mov
jle
cmc
ss
pop
pop
filds
mov
lcall
popa
aaa
shlb
adc
push
add
lods
xchg
divps
xlat
ficomps
mov
pop
mov
scas
mov
stos
sub
lcall
inc
out
jecxz
pushf
mov
stos
sub
push
pop
lret
test
test
out
jo
mov
sbb
int3
mov
mov
leave
lods
test
xchg
sbb
repnz
addr16
mov
or
sub
add
and
adc
fstps
inc
lret
xchg
fstpt
sub
push
adc
iret
jle
ss
dec
out
addr16
jbe
adc
in
movsb
inc
enter
cld
es
out
mov
adc
sti
or
push
clc
pop
dec
mov
lret
jns
int
in
sbbb
jb
out
pop
sbb
ds
and
inc
jb
ljmp
dec
and
in
cmpsb
dec
mov
push
dec
sbb
test
out
fadds
dec
leave
xor
shlb
pop
cmpsl
clc
or
andl
sti
xor
rcll
lcall
mov
addr16
ret
addb
jecxz
fwait
hlt
insl
daa
sbb
divb
int
orl
xchg
cmc
or
adc
mov
adc
dec
add
pop
adc
and
jg
sub
lods
std
jbe
inc
pop
cmp
dec
add
mov
mov
addl
in
xchg
jo
js
push
xchg
and
fldpi
clc
hlt
mov
xchg
or
insb
inc
dec
ds
cwtl
xchg
notl
js
sub
aas
es
mov
scas
repnz
stc
cmp
mov
jno
dec
fdivl
xor
aam
or
jo
loop
jbe
je
push
sbb
cld
out
int
jle
ja
cld
in
xchg
dec
pop
test
fisttpl
out
iret
dec
push
pop
int3
dec
rcl
clc
int
sub
inc
cwtl
cmc
scas
shrl
pop
cs
or
mov
out
leave
jne
push
and
outsl
and
lea
lahf
xor
sub
dec
outsl
lret
jae
stc
mov
mov
fwait
push
iret
lcall
hlt
fsts
mov
ja
xorl
ja
mov
mov
fbstp
nop
fwait
jno
cwtl
test
mov
cltd
out
lock
not
fisubl
mov
xorl
jnp
repnz
sub
dec
push
decb
fstps
jmp
ljmp
repz
jns
jb
add
jl
in
push
lock
iret
lret
xor
xchg
adc
xor
xor
in
mov
mov
or
sub
aas
push
add
cli
int3
stc
idivb
lock
add
cs
jo
jne
test
subb
push
pop
jp
scas
data16
idivl
sbb
out
inc
add
push
andb
pop
dec
bnd
push
fcmovnbe
fdivrs
sub
outsb
add
mov
pushl
clc
imull
js
in
sub
std
xchg
add
lds
test
shl
mov
ja
repnz
clc
add
xchg
sbb
mov
lock
mov
lods
dec
mov
mov
jo
xchg
mov
es
ja
add
je
lods
mov
xchg
hlt
cmp
ds
mov
add
xor
mov
in
inc
add
mov
mov
dec
dec
mov
out
int
push
fstpl
jl
pop
add
int
add
js
cmp
mov
ret
mov
jg
pop
repnz
sbb
pop
ljmp
ljmp
adc
add
sbb
js
aam
neg
inc
outsl
dec
dec
fxch
out
push
movsl
test
js
mov
xchg
nop
jae
mov
dec
rclb
outsl
rcll
data16
gs
mov
stc
sarb
mov
sbb
stc
inc
repnz
jns
or
fmull
jae
jns
jne
push
adc
mov
js
mov
lret
mov
inc
in
repnz
outsb
sbb
lret
stc
jecxz
aam
pop
int3
dec
shlb
fwait
mov
addb
inc
cmpl
sub
repz
adc
mov
mul
cld
gs
notb
jo
push
scas
fiaddl
cmp
xor
sub
push
int3
fs
or
addb
xchg
imul
pop
in
lods
int3
xchg
lock
std
and
and
andb
addb
icebp
xor
jns
repz
imul
adc
shlb
bnd
mov
or
jne
jb
int
notb
out
lea
jno
jg
movsl
jg
mov
icebp
rcll
data16
cmc
loop
mov
ja,pt
jp
xchg
pop
push
into
pop
leave
fistl
daa
loopne
jb
xchg
sub
pusha
repz
repnz
shlb
jmp
jbe
cs
adc
shl
and
test
mov
je
lock
in
loope
hlt
repz
ds
jge
pop
dec
xchg
mov
pop
in
out
or
xchg
pop
pop
ficoml
lock
xorb
xorl
lret
in
mov
fdivr
popa
add
int
or
repnz
pop
repnz
adc
jg
nop
lock
jg
jge
pop
mov
inc
mov
outsb
hlt
xchg
xor
pop
into
leave
divl
imul
icebp
sub
repnz
lret
or
adc
ds
aam
clc
jbe
clc
sbb
int
test
dec
test
jne
jne
lods
jo
hlt
xchg
test
shl
inc
shl
test
je
mov
adc
pushf
lods
dec
mov
jo
jae
data16
cld
xorl
add
dec
push
dec
test
rorb
mov
adc
int
pop
cmp
test
ror
dec
mov
aas
inc
inc
sub
mov
repnz
or
jae
xchg
call
pushl
push
insb
lcall
dec
jmp
dec
enter
hlt
push
into
lods
out
cltd
call
mov
mov
cmpsb
add
movsb
enter
dec
es
shr
xlat
dec
inc
jbe
inc
fld
repz
xchg
cmc
test
add
push
push
xchg
cwtl
ja
add
jg
repnz
repnz
jne
lahf
xchg
jge
pushl
test
and
dec
dec
ss
mov
iret
rcll
mov
adc
jg
mov
xor
pop
scas
dec
ret
shr
cmpsl
push
out
push
in
aas
pop
or
xchg
inc
dec
arpl
addl
inc
lret
rcr
dec
ror
jle
ret
js
iret
mov
sbb
std
or
fcom
inc
adc
inc
out
out
std
sbb
ja
mov
rcrb
nop
jge
sbb
mov
mov
push
jb
sbb
sahf
test
pop
test
out
cltd
jge
pop
testb
xchg
cltd
popf
mov
repnz
xor
pop
test
clc
dec
dec
bnd
pop
test
testl
xor
push
shl
fcmove
cld
les
mov
push
mov
rolb
push
sti
lock
mov
into
fwait
pop
xchg
or
push
inc
pop
xchg
and
pusha
addl
jge
cwtl
adc
out
gs
stos
jge
xor
xchg
lahf
sbb
mov
pop
cmc
out
lahf
stc
jnp
out
jg
iret
dec
sub
ss
xchg
add
mov
imul
out
sub
stc
outsb
lret
repz
mul
jecxz
pop
xchg
pusha
in
mov
js
mov
subb
lock
jb
push
jne
js
pop
mov
outsl
or
scas
adc
lret
add
sub
insl
ja
fbstp
call
mov
sub
mov
lcall
flds
sub
out
and
mov
out
addr16
xor
out
jecxz
mov
xchg
lods
pop
mov
movsl
fsts
insb
mov
out
test
push
clc
mov
test
movsb
cs
dec
mov
inc
lea
icebp
push
loope
loopne
in
adc
dec
cltd
add
lods
out
es
mov
or
sub
push
pop
inc
jne
jecxz
inc
sbb
inc
sub
out
sbb
cmp
out
pop
push
or
pop
xor
out
xchg
xchg
mov
ret
dec
stos
mov
scas
dec
out
std
jo
mov
pop
dec
mov
loop
out
sti
fldl
stos
dec
out
test
lcall
popf
je
lock
cmpb
into
scas
jb
sahf
dec
sbb
dec
fbld
and
jl
out
jmp
fisubs
les
xor
pop
xor
es
mov
into
adc
in
push
xchg
in
inc
shrb
std
iret
int
out
cmpl
out
mov
hlt
arpl
add
adc
daa
out
jecxz
push
ja
inc
shlb
cmpsl
sub
scas
shl
into
jb
and
je
push
mov
scas
add
jo
push
std
or
mov
cli
push
sbb
jb
fwait
pop
out
mov
out
cmp
fsubs
mov
pop
inc
aad
adc
sbb
mov
mov
insb
outsl
adc
jle
or
icebp
mov
mov
hlt
adc
add
js
ret
mov
icebp
ror
xchg
inc
loop
insl
mov
inc
leave
shlb
sbb
out
jns
js
dec
movsb
pop
movb
inc
add
cld
pop
ja
push
in
movsl
adc
xor
cmpsb
xchg
push
mov
pop
out
aam
int3
pop
dec
ret
push
fwait
push
mov
mov
fst
nop
pop
out
loope
adc
jg
mov
repnz
fcoml
addr16
ljmp
ss
cmc
mov
lods
xor
inc
cs
mov
aad
xlat
je
inc
in
pop
cli
or
lea
jbe
hlt
stc
jo
leave
fcoms
ror
lret
jnp
push
inc
mov
xchg
xchg
testl
mov
mov
leave
ja
jno
jmp
mov
daa
jle
cmp
jae
pop
adc
jge
and
push
hlt
push
lret
ss
xchg
in
daa
iret
fidivl
add
fadd
fwait
jb
shl
mov
icebp
sbb
ja
jb
jecxz
dec
sub
xor
mov
xor
mov
lock
and
mov
movl
fstps
iret
pushf
dec
push
testl
js
cmc
or
push
dec
loop
fisubrs
lahf
stc
push
or
out
xorb
shlb
inc
mov
cmp
sbb
push
ds
mov
in
and
enter
adc
shr
aas
xor
add
ds
mov
bnd
out
ret
add
call
sarb
aam
xchg
push
sbb
das
lahf
jns
notl
cmpsl
jmp
scas
sahf
jnp
rorl
scas
jge
sub
or
xchg
xor
and
cmp
sti
scas
and
dec
sbb
popa
outsl
sarw
dec
sbb
out
addr16
push
mov
sbb
dec
push
inc
jp
dec
and
mov
xor
rolb
xchg
ret
adcl
clc
sahf
and
lret
sub
nop
leave
mov
mov
mov
stc
xor
pop
cmc
cwtl
mov
ja
and
jg
fnstcw
and
push
push
jmp
arpl
scas
jo
pop
sub
jmp
cmc
scas
pop
ja
cmp
sub
cmp
fwait
sahf
lret
stos
insb
dec
pop
shrl
inc
jno
inc
addr16
int
idivl
cmc
fmuls
out
je
or
jmp
sbb
mov
jmp
lock
fidivrs
push
jecxz
leave
out
lea
aas
fistpl
daa
push
mov
outsl
dec
and
loope
fwait
jb
add
add
aaa
xchg
xchg
pop
sahf
test
out
and
push
inc
lods
push
sub
movsl
lds
dec
or
mov
fadds
in
insb
lret
pop
cmc
sbb
rcrb
out
outsl
xchg
in
push
push
and
mov
dec
and
jecxz
orb
cmp
add
sbb
pop
cmp
sub
cmc
out
ss
ljmp
idivb
mov
out
jne
adc
mov
push
xchg
and
sti
test
inc
test
xor
jae
out
pop
out
bound
ret
nop
in
out
movsl
lods
or
inc
adc
shl
outsl
in
sub
xrelease
cmp
inc
outsl
ss
mov
decb
pop
jge
dec
inc
out
mov
lea
out
call
pop
imul
call
mov
outsb
into
js
mov
mulb
jle
out
rclb
and
jnp
and
or
mull
sbb
sub
stos
dec
in
dec
jle
lock
xchg
xor
rcrl
insl
xchg
and
insb
add
out
xchg
mov
sbb
pop
arpl
scas
ljmp
out
fisttpl
add
jl
int3
cmc
dec
mov
es
mov
fbstp
mov
and
addr16
fnstenv
fsubr
push
sub
popf
lods
data16
aaa
adc
and
out
xchg
movsl
cli
add
jle
fldl
stos
sub
pop
push
mulb
inc
adc
and
add
pusha
mov
dec
mov
mov
out
addr16
xchg
cwtl
std
in
jae
mov
and
xchg
out
mov
push
cmpl
sbb
pop
jo
lret
rcl
mov
loop
js
xchg
xchg
add
aad
mov
sub
stos
addr16
faddp
cwtl
mov
adc
pop
out
test
jle
mov
adc
xchg
mov
outsl
pop
sbbb
xchg
lret
rol
dec
out
rorl
mov
mov
mov
add
mov
insb
in
and
out
ljmp
adc
sti
popf
inc
mov
out
xchg
xor
outsl
aaa
js
lods
in
scas
int
cltd
fsubrl
loop
bound
sbb
pop
mov
das
ret
jecxz
pop
rolb
les
push
lock
mov
pop
jl
sbb
aad
out
mov
jg
gs
mov
pop
jbe
std
jmp
push
inc
inc
scas
mov
jl
rcrb
mov
out
bound
scas
out
mov
fs
jge
jmp
sahf
mov
mov
mov
mov
pop
xor
mov
addb
in
call
insl
xor
xor
xchg
jp
jo
loopne
mov
jno
daa
mov
pop
pop
mov
pop
repnz
push
shll
lret
xor
mov
repnz
sub
inc
shlb
lds
test
sub
push
lcall
int3
mov
or
and
sar
daa
add
fucomi
push
out
fists
ret
xchg
jg
fsubs
push
fcomip
frstor
out
rcrb
xor
loope
outsl
push
shll
adc
in
sbb
adc
cmp
sti
test
jbe
idiv
mov
out
mov
sarl
es
data16
out
leave
mov
jmp
dec
cmp
ss
test
adc
dec
call
mov
push
adc
fsubs
out
dec
enter
fnsave
dec
out
lcall
adc
lea
ret
out
in
inc
pop
and
leave
jbe
das
loopne
mov
and
ljmp
out
inc
or
cmc
jecxz
add
out
cmpsb
arpl
inc
xchg
push
loope
out
ret
xor
lock
aam
mov
scas
orb
test
out
in
fistpl
daa
out
filds
call
cwtl
out
stos
mov
adc
or
jp
jnp
fdivrs
leave
cmp
mov
into
sahf
subb
int3
repz
pusha
xor
scas
inc
icebp
stos
int
or
fwait
out
jecxz
imul
out
mov
ljmp
and
cltd
lret
inc
enter
pushf
adc
jmp
and
dec
out
mov
cmc
in
sub
into
jb
jns
inc
out
dec
inc
sbb
sub
popf
je
out
xor
push
jae
inc
les
cmp
cmpb
push
xchg
add
mov
shrl
sti
jno
in
fsubrs
out
int3
push
lds
fnstenv
outsl
mov
xor
sbb
fcoml
or
or
mov
out
leave
pop
insb
inc
mov
dec
add
and
jl
insl
push
and
jne
in
mov
inc
dec
out
int3
dec
cmp
stos
scas
insb
out
and
mov
inc
push
add
pop
xchg
dec
ljmp
out
push
add
ror
sbbl
lods
sbb
lds
adc
adc
mov
fistpll
ds
or
lahf
dec
mov
push
aam
xlat
or
dec
stc
pop
mov
std
mov
sbb
addr16
jecxz
es
jge
outsl
ror
int
test
out
cs
sbb
jbe
fdivp
push
xor
sub
out
out
test
mov
repnz
icebp
push
dec
js
leave
xlat
mov
inc
outsl
shrb
or
jae
out
pushf
arpl
shl
and
mov
fsts
call
mov
std
icebp
test
out
lods
jle
addr16
out
push
cmpsb
shrb
cwtl
mov
push
test
gs
jg
enter
out
adc
lahf
data16
sub
xor
cmp
in
ljmp
lods
jnp
insl
push
das
dec
add
mov
dec
lret
cmpl
and
popa
popf
sbb
or
mov
roll
and
in
add
stos
lret
or
stos
test
jge
xor
dec
xlat
popa
adc
pushl
sbb
mov
mov
dec
or
int3
out
and
mov
cwtl
ljmp
scas
mov
int3
jp
fldt
gs
enter
scas
sbb
mov
sub
int
pop
cmpsl
out
push
rcrb
xchg
out
xor
insb
push
enter
add
jo
push
inc
stc
int3
and
jo
jge
pusha
out
cs
sub
and
and
scas
lret
rolb
aad
jle
call
or
jno
popf
mov
xor
out
data16
xlat
pop
jl
out
add
mov
adc
sbb
out
shll
sti
adc
pop
and
adc
popf
jle
xlat
les
pop
mov
test
mov
loop
dec
mov
mov
mov
ljmp
jl
out
test
loop
fdivl
jns
ljmp
mov
xchg
aas
dec
xchg
push
scas
cltd
aaa
fistpl
mov
cmp
pusha
lcall
and
fs
imul
or
iret
jnp
testl
sbb
ret
dec
sahf
dec
ror
leave
cmp
xadd
add
jg
test
add
adc
mov
outsl
into
pop
enter
nop
pop
arpl
xchg
mov
mov
ja
icebp
jg
imul
out
idivl
shrw
add
cld
lcall
lock
and
outsl
mulb
icebp
sub
fadds
dec
adc
ficomps
or
push
les
andb
divb
push
jecxz
pop
inc
loop
or
jbe
repz
mov
es
push
lahf
icebp
sub
cltd
and
or
fnstcw
clc
xchg
or
push
scas
jb
out
pop
cmpsl
add
cmc
pop
fdiv
add
es
or
add
testb
mov
inc
hlt
add
xor
leave
cld
scas
inc
jmp
add
cmpsl
mov
clc
xchg
add
and
and
fsubs
adc
push
ds
iret
popa
scas
subl
pop
add
jo
fstpl
jmp
popaw
xchg
mov
xchg
hlt
add
xor
enter
push
xor
cmpsb
repnz
add
pop
jg
or
rol
jg
ja
xor
sbb
ss
xchg
dec
ljmp
int3
rcll
pop
push
add
mov
push
insl
rcr
pop
add
icebp
xchg
sahf
ret
inc
add
test
out
pop
ret
mov
adc
mov
ljmp
add
inc
mov
testb
mov
add
das
xchg
cld
fs
aad
push
into
jl
adc
movsb
div
cs
inc
and
pop
xchg
ret
mov
inc
jae
cmp
call
add
mov
hlt
lea
hlt
cmp
cmp
adcl
iret
inc
cmpl
iret
sub
xchg
in
ror
aad
sub
mov
orb
push
int3
pop
mov
xchg
jns
out
mov
lds
std
shlb
test
adcl
lahf
pop
mov
cmp
test
clc
je
scas
pop
inc
fdiv
sub
cmpsl
push
mov
enter
jb
and
xor
and
popl
add
pop
outsl
test
out
jno
popa
movsb
xchg
sub
hlt
repnz
call
jmp
jge
bound
std
lret
pop
out
fsubrs
add
jbe
jl
mov
aad
lods
mov
lret
cmp
or
inc
jo
sbb
mov
ljmp
jl
mov
cmp
jbe
mov
hlt
sahf
add
inc
mov
adc
pop
test
cli
out
mov
mov
shr
and
call
and
imul
jmp
scas
sbb
shlb
or
arpl
or
xor
mov
lock
shrl
loope
notl
popa
pop
adc
bt
iret
ja
sub
bound
ljmp
jnp
je
movsl
in
out
lea
pop
out
pushf
sub
push
aaa
sub
add
adc
addl
mov
dec
dec
push
pusha
push
ljmp
sub
stos
mov
out
mov
xor
and
dec
pop
imul
mov
xor
sbb
push
sti
add
aam
mov
iret
loopne
in
mov
xor
int3
out
cmc
mov
inc
pshufw
mov
mov
add
sub
inc
enter
mov
nop
in
out
sbb
cs
inc
mov
popf
out
cld
dec
adc
lahf
mov
pop
out
xchg
ftst
les
mov
dec
xlat
add
jecxz
mov
out
sbb
rolb
leave
out
ss
cmp
out
repz
jne
dec
out
inc
stos
jp
sbb
sub
mov
int3
mov
out
lods
push
and
inc
shl
out
mov
sbb
jno
adc
out
fsubrs
jp
mov
mov
sub
ljmp
jmp
adcl
xor
out
pop
mov
fildl
push
lods
xchg
dec
shr
orb
out
xor
push
out
stc
cmp
pop
out
popa
pop
test
out
int
pushf
xor
cltd
icebp
adc
sub
fldcw
add
loope
into
out
push
call
jp
gs
out
int
mov
in
mov
mov
dec
je
insl
xchg
jecxz
pushf
mov
jae
sub
out
test
adc
jle
and
test
mov
push
dec
inc
fucomi
es
ljmp
and
and
insl
out
aas
inc
inc
xchg
mov
dec
in
mov
sub
jge
mov
lods
out
sbb
xlat
outsl
ss
es
cld
in
sbb
sub
out
out
and
jno
aas
lret
jnp
mov
cmp
add
les
mov
pushf
outsl
ds
mov
add
js
jne
xchg
popf
xorb
xor
jecxz
out
out
adc
add
inc
out
add
xchg
mov
and
out
jae
popa
nop
push
sub
pop
jo
loop
test
insb
pusha
pop
js
dec
cmp
cltd
std
jno
mov
sub
rorb
out
jnp
mov
int
dec
cs
push
push
adc
jns
nop
test
inc
xor
hlt
movsb
mov
dec
push
sbb
scas
xor
pushf
cmp
stos
cmp
jl,pt
mov
jb
sbb
push
negl
out
push
rorb
ret
mov
dec
lret
jne
fistpl
testb
cwtl
into
rcrl
int3
push
jmp
sub
mov
pop
jecxz
popf
hlt
outsl
int3
pop
push
gs
loop
push
lahf
mov
loope
stc
xchg
cmc
movsl
pushf
movsb
dec
into
xchg
xchg
outsl
mov
push
xchg
or
or
xor
fs
out
fldlg2
sub
jmp
xchg
jmp
out
adc
xchg
add
lock
stos
jo
rorl
loope
inc
out
dec
aam
out
push
dec
loope
out
pop
mov
cmp
out
and
ljmp
clc
je
enter
dec
mov
jae
insb
out
push
dec
xchg
aas
ficoml
out
out
aaa
sahf
mov
loope
jp
out
dec
xchg
jb
mov
or
fimuls
push
movsb
out
mov
and
test
movsb
xor
jge
sub
mov
call
lods
cmp
pop
gs
and
in
mov
lds
les
int3
sbb
hlt
or
sti
cwtl
scas
xchg
call
cmp
xchg
out
jo
shrl
loope
push
jle
cmp
dec
data16
pusha
cmpb
push
in
pop
pushf
fisubl
mov
cmpsl
adc
in
lahf
cmc
loope
inc
sub
dec
out
add
and
adc
pop
loope
sahf
mov
jg
loop
cld
data16
jno
lds
pop
xor
sti
out
out
scas
or
push
iret
out
cli
mov
test
out
int3
cltd
pop
ficoml
hlt
sbb
sub
clc
ss
lods
std
nop
mov
in
sbb
lock
inc
in
or
mov
add
or
push
ja
xchg
sbb
in
lds
mov
mov
imul
out
mov
mov
clc
out
inc
jle
add
jbe
push
out
pop
shlb
mov
pop
shr
and
dec
jne
outsw
xor
leave
rorl
push
out
inc
add
sub
xchg
daa
sbb
std
xchg
movsb
inc
out
iret
jo
imul
mov
push
repnz
imul
mov
stos
test
insb
lock
test
and
pop
in
test
testb
jg
add
adc
pop
imul
push
dec
add
jno
shll
dec
pusha
jo
arpl
push
jecxz
lret
add
pop
push
outsl
bnd
jo
pop
push
jo
pop
and
mov
clc
test
movsb
out
mov
cld
inc
push
out
iret
push
xlat
roll
das
fisttpl
rorl
daa
loope
enter
in
adc
jae
xchg
dec
jg
lods
int3
in
rcll
push
mov
cwtl
jg
dec
shlb
leave
aaa
and
je
out
call
mov
popa
out
sbb
pop
pop
ret
xchg
dec
fimuls
jnp
outsl
std
fidivl
xor
aam
xchg
xor
jbe
in
ljmp
stc
push
out
jno
inc
dec
dec
push
loopne
pop
pop
clc
inc
rcl
fbstp
mov
cld
mov
stc
pop
fldenv
mov
mov
add
jo
leave
mov
lcall
dec
loop
xchg
sub
fsts
dec
les
xchg
test
add
mov
add
sbbl
mov
pop
mov
pop
call
pop
sub
fcmovu
dec
out
enter
push
push
hlt
pop
icebp
add
outsb
xchg
data16
push
xchg
fmul
enter
jno
in
outsl
push
push
or
cmp
fcomi
push
popf
or
mov
mov
sub
pop
xor
dec
push
nop
or
jecxz
jb
mov
push
and
dec
xor
add
or
mov
data16
push
dec
lahf
mov
mov
in
mov
xor
cmp
or
int3
push
pop
mov
fstl
icebp
xlat
popf
pop
mov
dec
mov
aam
fmuls
jnp
lret
cmc
add
sarl
sbb
lret
popf
cmpsl
stos
dec
cld
xchg
or
fs
dec
or
fcmove
orl
xor
add
xor
ss
ljmp
fwait
push
shl
dec
in
xor
cmp
cld
jbe
sub
fwait
and
add
insb
cs
shrb
rol
push
cmp
and
fwait
add
aaa
xchg
xchg
jae
add
xchg
cltd
dec
dec
push
mov
push
cmp
idiv
jae
jnp
mov
iret
jnp
repz
lcall
pop
call
cmp
ja
bound
mov
jnp
push
dec
test
jnp
xor
pop
inc
cwtl
cmp
repnz
lock
inc
or
jae
imull
fildl
add
das
xchg
icebp
xor
xchg
sbb
faddl
insb
add
data16
outsb
icebp
mov
pop
aas
mull
pop
pop
iret
mov
sti
pop
call
in
daa
pop
mov
loop
push
dec
lock
rcr
push
ret
ret
dec
mov
mov
mov
sub
xor
or
out
arpl
cs
adc
and
jecxz
cmp
mov
icebp
and
add
or
xor
clc
xor
xchg
popf
shll
lods
dec
in
outsb
sbb
dec
sbb
jg
rolb
nop
cld
jne
mov
pop
jg
fldenv
add
xlat
mov
cmp
mov
out
cmp
xlat
dec
push
leave
rorb
test
push
outsl
xor
jns
xor
hlt
inc
mov
lcall
bound
xorb
cmp
out
xor
hlt
sub
in
test
mov
sub
outsb
repnz
data16
lods
les
jg
outsl
mov
add
rorb
popa
push
mov
aas
jge
pop
mov
or
testl
cmp
loopne
and
sbb
cld
stc
xchg
sti
pop
aas
repnz
jo
test
lods
cmp
jns
add
mov
test
test
mov
pop
call
or
jb
jb
imul
icebp
add
icebp
or
add
shlb
xorl
mov
hlt
sub
fmuls
jns
xchg
sub
jne
push
int3
xchg
cmc
cmp
ror
dec
pop
xchg
cmc
xchg
cmp
jbe
pop
add
lods
inc
call
loop
cmpsb
xchg
notb
adc
aad
lock
xchg
sub
lods
xor
jle
dec
mov
xorb
std
jl
int3
fldenv
mov
test
mov
scas
sahf
jae
mov
mov
pushf
jae
lret
xlat
inc
outsb
stc
jnp
mov
lock
lock
div
add
mov
xor
leave
fistpll
sbb
rcrl
sbb
mov
loop
leave
fists
inc
jae
daa
lock
fdivl
ja
outsb
cmp
js
sub
inc
lods
ds
pop
dec
xorl
pop
sub
cld
add
adc
ljmp
mov
scas
jge
add
out
cli
adc
testl
aas
rcrb
out
orl
test
sbb
sbb
mov
out
fs
cmp
subl
add
xor
into
mov
push
jg
jp
xor
add
push
out
cmpsb
pushl
adcl
imul
xchg
mov
repnz
jbe
ljmp
daa
mov
sub
mov
adcl
xchg
lea
inc
jne
or
jbe
insl
repnz
adc
push
mov
cmpl
cmp
lods
jne
insl
jae
jae
xchg
inc
xorl
dec
loop
jb
jnp
cmc
incl
cmp
and
jne
push
les
jg
hlt
mov
mov
rclb
repz
xchg
push
ljmp
sub
push
iret
xchg
iret
nop
adcb
xorb
in
into
adc
cwtl
push
daa
enter
out
sbb
mov
iret
ja
iret
jnp
cld
stc
pop
addl
add
negl
add
pop
pop
hlt
lcall
dec
imul
jg
cltd
clc
xchg
outsl
pop
ret
and
es
dec
xor
add
mov
push
xchg
notb
clc
mov
std
cmpsb
mov
mov
aaa
xchg
push
stc
push
lret
icebp
jnp
xchg
dec
add
mov
icebp
xchg
jg
repnz
dec
shrb
stc
movsl
in
add
add
pop
cmp
xchg
hlt
and
lahf
add
insl
repnz
xchg
jne
fcoml
rclb
jae
dec
sub
add
adc
push
add
ljmp
in
fcompl
adc
in
add
nop
insb
inc
ret
repz
sbb
sbb
imul
lret
cmp
cli
and
inc
cli
adc
fstpt
jo
mov
lock
into
leave
rcll
in
jo
mov
jno
mov
inc
sbb
icebp
loop
mov
mov
jb
sbb
int3
mov
xchg
sti
je
sti
mov
aam
mov
fistpll
cs
mov
test
cld
testb
cmc
pop
jecxz
addl
mov
mov
mov
jg
fldt
ficoml
sbbb
xor
hlt
sahf
xor
jg
jg
push
fwait
sbb
sar
movsb
fmuls
repnz
adc
test
rolb
xchg
cltd
mov
xor
jge
testb
cld
popl
out
js
cltd
jecxz
int
test
clc
outsl
or
xchg
jbe
cs
imul
push
cmc
pop
or
enter
jbe
adc
out
dec
test
fsts
xchg
stc
sbb
push
jae
orl
outsl
mov
mov
stos
mov
xor
jmp
movl
xorl
icebp
fdivrs
test
cmpsb
dec
pushf
cltd
jg
repnz
mov
leave
dec
repz
ja
sar
out
cmp
lods
xor
lret
dec
add
lock
dec
cmp
cld
repnz
insb
std
dec
call
mov
mov
adc
xchg
push
jg
push
xchg
jae
ret
outsb
mov
add
imul
decl
stc
cs
lcall
jb
cs
out
adc
incl
test
loopne
data16
leave
ret
jae
enter
or
add
clc
pushf
push
add
lret
les
inc
sbb
subl
lods
mov
imul
cli
mov
fwait
sbbb
lea
or
data16
repnz
fs
mov
jnp
jle
in
mov
aad
notb
push
andl
mov
jnp
mov
xchg
cmp
jmp
movsl
jg
jno
jp
in
mov
hlt
js
push
stc
fs
lret
jmp
pop
xchg
jo
ja
stc
in
bound
mov
add
stos
ret
jae
cmp
jbe
rcl
sub
fisttps
dec
loopne
call
inc
fdivrl
mov
dec
ret
je
nop
jb
mov
cmp
push
out
test
mov
or
jne
fwait
sbb
js
aam
mov
div
in
mov
jmp
jbe
add
sbb
sbb
xor
add
mov
lcall
repz
adc
mov
mov
dec
push
pop
bswap
lahf
or
test
mov
testl
popa
add
mov
cmpsb
push
dec
jg
rcrb
fsubrp
popf
mull
neg
jo
inc
mov
dec
out
pop
add
lods
push
gs
add
pop
sar
movsb
fnstenv
pop
jmp
dec
push
ret
repz
mov
in
inc
mov
scas
push
addr16
push
inc
fcom
das
jns
mov
out
shrl
stos
out
icebp
mov
out
out
xchg
ds
dec
fucomp
cmp
sarb
out
cmp
adc
pop
dec
push
xchg
out
mov
call
es
xchg
adc
fnstenv
jnp
fisubrs
sub
and
adc
mov
mov
adc
mov
xor
hlt
lcall
cltd
shrb
fadd
add
outsl
jle
popl
dec
mov
cmp
adc
ds
clc
ja
jns
cli
in
xor
inc
sti
pop
incl
mov
mov
sbbl
xchg
divl
inc
sbb
cmc
sbb
sbb
sbb
push
mov
cmpsb
add
push
adc
sti
lret
jo
lods
idiv
jnp
sbb
hlt
les
test
jle
pop
push
jne
imul
cld
jns
bnd
jp
adc
lret
sahf
test
out
std
xchg
add
ret
dec
sbb
jp
dec
leave
mov
jb
test
inc
cmp
fstpt
test
sbb
push
js
outsb
sti
clc
aaa
test
les
test
sub
cld
jge
js
dec
add
imul
add
push
jbe
stc
ja
sbb
outsb
sar
icebp
push
push
xchg
xchg
ret
add
cmc
sti
mov
outsb
dec
mov
ret
jp
ret
add
test
scas
sahf
mov
repz
mov
out
xchg
outsb
sub
lret
ret
add
test
ret
lea
jnp
jo,pn
sbb
add
jp
jge
cltd
test
or
add
je
mov
sar
icebp
shll
jp
jge
add
loopne
into
jne
xchg
cmp
xor
cltd
jno
jne
ret
jp
jge
addr16
jnp
jno
add
sub
jp
add
add
in
xchg
add
push
ret
fbld
aad
repz
fs
inc
and
mov
jl
mov
adc
pop
movsl
sub
and
cmpsl
and
outsb
outsl
or
out
fwait
cwtl
adc
cmp
hlt
mov
sub
push
lock
add
out
dec
pushf
pop
lahf
outsl
repnz
mov
stos
adc
add
mov
icebp
sub
stos
mov
divb
shlb
xlat
jnp
cmc
jg
data16
iret
outsb
or
outsl
jnp
cmc
test
mov
out
xchg
adc
pop
add
xchg
fwait
mov
insb
std
mov
imulb
xlat
jno
lcall
jae
hlt
inc
rep
std
pop
sub
adc
jne
outsl
imul
pop
addb
xchg
lods
arpl
stos
lock
jo
xor
cmp
dec
push
add
fsubs
sbb
and
jle
pushf
xlat
repnz
stc
js
sbb
xor
aaa
or
or
out
inc
sub
xchg
jle
mov
push
pop
mov
mov
mov
js
icebp
subl
and
mov
sti
jg
cmpsl
insl
sub
mov
mov
test
mov
sbb
lock
aam
enter
fstl
hlt
mov
or
rorl
jecxz
adc
xchg
xor
add
inc
lret
mov
repz
ja
popa
daa
inc
mov
cmp
fmul
lock
fwait
mov
mov
or
repnz
movsl
cmpsb
ss
sbb
int3
fstpl
sbb
lret
add
sub
aad
xor
adc
popf
inc
sti
out
dec
sub
mov
imul
push
les
push
ss
mov
bnd
adc
sti
out
pop
pusha
in
xor
xor
sbb
and
fs
pop
std
mov
and
inc
movsl
addl
or
xchg
jae
and
shl
mov
lret
in
imul
mov
adc
repnz
adc
test
cmp
repnz
movsb
jbe
push
lahf
mov
test
push
jmp
lahf
mov
pop
gs
lock
stc
mov
xchg
rclb
in
push
adcb
xchg
cld
repz
jnp
sub
outsb
shlb
jb
std
pop
out
out
ja
outsl
mov
test
pop
sub
lea
movsl
cmp
in
sbb
std
xor
mov
lahf
mov
jnp
js
xchg
jno
xchg
and
mov
adc
sbb
cmpsb
jp
repnz
enter
out
sbb
cmpsl
and
mov
jno
mov
stc
push
movsl
cld
sbb
and
shr
outsl
xchg
xchg
out
addl
movsl
mov
sub
jae
or
shll
arpl
add
adc
in
sbb
or
out
jno
add
dec
fcomps
icebp
mov
xchg
mov
out
fdivr
jo
js
pop
fcomps
in
shlb
scas
mov
push
imul
fwait
or
add
mov
bnd
mov
jge
aas
mov
repz
lcall
into
out
or
das
out
test
cs
lock
out
add
adc
jne
es
out
lret
movsb
adc
jnp
in
out
push
adc
enter
out
xor
sbb
mov
addr16
inc
shrb
icebp
inc
pusha
mov
fcom
out
repz
and
mov
aam
lret
pop
in
out
add
scas
lea
and
out
adc
dec
jle
jno
sub
ds
xchg
mov
pop
add
fmul
push
cmp
shll
aaa
push
hlt
pop
ror
jo
std
movsb
add
aad
push
sub
push
pop
mov
jmp
out
loope
pop
inc
cmc
xchg
mov
jno
dec
mov
out
inc
xor
push
out
rcrl
sub
push
ja
out
in
jmp
dec
jns
scas
andb
mov
inc
fwait
and
cld
fsubr
sbb
int3
out
inc
sub
out
jns
mov
leave
dec
addl
shr
mov
ja
jb
inc
aam
std
mov
ljmp
and
xor
shr
scas
dec
mov
outsl
iret
push
jmp
push
lcall
scas
movsb
shll
mov
rol
test
sub
out
cmp
xor
sub
out
fwait
cmp
push
scas
cs
int3
fs
icebp
cld
fisubl
jl
inc
sbb
popa
mov
cltd
mov
in
outsl
es
cld
cltd
lods
jae
lea
sub
fsubs
adc
popa
scas
mov
bound
dec
repnz
hlt
sti
ljmp
insb
or
cmpsl
fildl
jb
ja
into
lret
iret
jae
out
push
cmpsl
lea
push
mov
repz
sbb
fnstcw
mov
jb
rcrl
mov
and
inc
out
mov
lcall
cmp
insb
push
xor
stc
push
jp
test
rol
mov
mov
outsl
int
shr
xchg
leave
aaa
mov
out
insb
cwtl
scas
push
imul
dec
bound
push
sbb
xchg
fldcw
aaa
mov
out
mov
or
jg
sbb
push
push
leave
mull
out
sarl
popa
pop
cs
out
and
rorb
sub
or
jge
mov
dec
out
fiadds
aas
pop
jle
jb
dec
jg
scas
in
scas
stos
fidivrs
rolb
fbstp
xor
mov
aam
pop
outsl
mov
sbb
rcl
mov
notb
shl
stc
add
loope
outsl
jne
leave
jae
pop
aas
push
push
cmp
call
or
out
dec
push
fldt
fmul
out
and
addr16
in
cmp
cltd
pop
stc
sbb
sti
movl
rolb
sbb
adc
out
shl
jbe
pushl
xchg
dec
adc
add
jnp
mov
enter
imul
out
es
enter
cmp
fisttps
push
xor
add
add
leave
and
push
adc
add
fwait
mov
scas
sahf
jecxz
dec
loope
sti
lods
ja
push
xor
sbbl
adc
mov
loop
xor
xor
cs
dec
out
call
test
mov
xchg
xchg
int3
sub
push
movl
jle
out
repnz
out
xlat
push
imul
lret
sub
jb
dec
lret
movsl
out
movsl
lahf
aaa
xorl
mov
outsl
test
push
xor
dec
dec
into
fdivrs
addr16
jmp
scas
fists
sbb
jle
in
sbb
jl
xchg
dec
xchg
lret
sub
xor
std
mov
scas
jg
cld
pop
out
iret
and
es
jle
mov
rcr
or
out
push
fnsave
or
out
sbb
out
mov
sti
push
sub
test
inc
stos
jmp
sub
stos
shr
out
adc
xor
mov
gs
jg
imul
stos
cmc
pop
mov
lds
iret
stos
loop
cmp
popf
std
dec
flds
paddb
lret
xchg
mov
leave
addr16
jg
test
add
mov
cs
dec
int
lods
jb
pop
cmc
jo
jo
sub
inc
mov
pop
stos
mov
mov
push
xchg
push
js
out
in
inc
dec
out
xchg
mov
and
xchg
aam
mov
out
shrl
out
out
int3
or
fistpll
mov
pop
test
popf
arpl
adc
pop
ret
sahf
cmp
cmp
mov
out
cld
shll
mov
out
je
or
cmc
sarb
pop
sbb
xor
leave
filds
cs
negl
mov
lods
xchg
push
fwait
popf
fsubr
push
test
rcr
fs
sub
inc
jae
mov
int
leave
insl
dec
in
add
sub
pop
inc
sub
mov
jmp
out
push
movsl
test
dec
adc
out
add
mov
pop
mov
jo
inc
aad
jp
ljmp
shrb
mov
push
cmp
arpl
xchg
mov
sub
in
ret
lods
pop
daa
add
push
loope
xchg
clc
leave
and
hlt
addr16
dec
jbe
in
add
inc
rolb
scas
test
std
dec
pop
movsl
jb
test
pop
addr16
inc
sub
sub
stos
gs
cltd
and
xchg
shlb
push
cmc
or
adc
gs
lea
in
add
inc
mov
test
pop
out
aas
mov
call
data16
mov
fcoml
sub
adc
push
stos
and
dec
pop
test
pop
fs
std
into
push
scas
imul
shl
cmpsl
sbb
rorb
lock
shr
lea
out
pop
mov
dec
shlb
jmp
lock
inc
sbb
add
pop
xchg
pop
int
pop
into
or
jb
jbe
lock
mov
stc
or
mov
pop
clc
jne
fxch
pop
pop
mov
inc
sub
pop
sar
add
xchg
in
out
add
mov
adc
mov
repnz
xchg
aas
xchg
pop
cld
or
or
xor
inc
pop
mov
jno
sahf
and
sub
dec
cwtl
sbb
mov
lods
jle
cmp
fnsave
aad
int
mov
repnz
testb
pop
arpl
scas
xchg
inc
sub
lcall
rolb
ficoml
xor
cwtl
adc
roll
test
xchg
pop
and
sub
testl
add
mov
sub
mov
jecxz
sub
mov
sub
xchg
pusha
or
outsl
scas
cmc
andl
shlb
icebp
ds
mov
clc
movsl
repz
xorb
loop
int
loope
in
add
xorb
xlat
jbe
mov
enter
sub
out
cmp
je
push
jae
pop
sub
out
dec
call
stos
out
jbe
int3
pop
aad
dec
aam
jno
inc
mov
mov
sbb
mov
or
loopne
fucomip
loop
xor
jecxz
adc
push
fmul
fs
scas
ja
mov
bound
sub
ret
xor
xchg
test
mov
es
negl
scas
jb
je
and
jns
xchg
lock
arpl
jno
pop
push
inc
mov
repnz
add
sbb
stos
inc
jmp
in
out
or
ds
lock
es
jb
xor
xchg
ret
jmp
jae
pop
sub
push
jl
push
cld
out
push
ds
xchg
jle
sub
mov
pusha
xchg
inc
jle
fists
fnstsw
dec
xorb
inc
mov
ret
mov
leave
insb
jge
cmp
adc
mov
adc
xchg
mov
or
xchg
xchg
sarl
sub
jb
push
sti
xchg
fidivs
out
imulb
xor
xchg
and
jle
adc
dec
mov
shr
leave
push
test
pushf
or
aam
mov
lock
xchg
cmpsl
push
out
dec
pop
rcrb
push
addr16
add
out
cs
pop
cld
out
jae
cmp
insl
cmp
outsl
fistpl
pop
dec
in
dec
leave
in
push
or
add
mov
add
pop
inc
cmp
dec
adc
out
jmp
inc
mov
out
out
js
rclb
std
pop
add
into
dec
xchg
xorl
push
into
adc
hlt
ljmp
pop
fs
push
ja
pusha
out
lret
cmpsl
lock
jecxz
stos
out
fdivrs
aad
out
inc
mov
sbb
test
in
add
adcb
fimull
pop
and
dec
mov
xchg
addr16
std
out
pop
pop
sub
jge
ret
pop
nop
push
cmpsl
and
leave
in
sbb
test
jp
outsl
in
xor
jb
add
dec
mov
pop
out
subb
xor
std
aad
cli
or
inc
jns
dec
loopne
push
out
mov
and
pushf
add
pshufw
and
fucomip
push
push
mov
ljmp
movsl
xor
pop
jecxz
jb
mov
xchg
xchg
rclb
es
and
xor
adc
xor
lea
repnz
mov
popf
aas
addr16
pop
xor
test
mov
jbe
inc
in
jg
pop
sub
fiadds
push
dec
adc
mov
fdivrs
sbb
loop
mov
sarb
dec
xchg
ja
out
mov
ds
push
in
mov
into
stc
inc
xchg
push
out
test
sbb
push
loopne
mov
out
out
mov
div
inc
adc
and
xchg
push
es
cmc
ljmp
mov
xchg
pop
sbb
mov
mov
lds
sub
dec
pop
sub
push
in
mov
fucomp
addr16
jge
lods
push
push
jbe
sbb
dec
out
mov
rcrb
out
lds
movsb
test
sbb
and
adc
cmc
or
sbb
test
in
scas
ljmp
jae
dec
inc
fs
stos
in
adc
fistl
jae
and
out
add
test
dec
addb
xor
fwait
sub
jg
out
cli
mov
jmp
xchg
jbe
out
call
addr16
mov
decl
jle
dec
dec
scas
and
in
fucomp
cli
inc
xor
cs
xchg
out
iret
fistps
lahf
xchg
test
xchg
out
bound
cmp
mov
dec
adc
shll
mov
scas
cmpsl
out
cltd
and
insb
adc
and
pusha
outsl
pop
mov
std
jns
jmp
mov
stos
mov
mov
out
es
sub
cwtl
xlat
out
mov
leave
dec
sub
or
lret
inc
rclb
fldz
outsl
pop
test
sarb
out
lds
into
mov
stc
mov
outsl
out
and
fmuls
mov
lret
xor
call
movsl
sahf
lret
cli
fcoml
lock
test
scas
rcll
inc
leave
adc
or
popf
xor
xchg
push
xor
out
rcl
push
fsubs
enter
mov
cld
or
sub
clc
shr
inc
orb
out
lahf
jae
sbb
and
shr
sub
imul
call
orl
dec
fdivrs
or
test
mov
or
pusha
and
xchg
push
fmulp
inc
rcll
je
dec
jbe
addr16
cmc
ds
out
inc
mov
adc
jmp
shrl
xor
pop
sbb
pop
cmc
int3
cmp
out
subl
bound
out
xor
add
or
out
fists
in
sbbl
add
pop
inc
cli
push
insl
scas
xchg
mov
and
sub
or
cmpsb
lret
mov
out
push
les
sbbb
lock
cltd
adc
subl
lds
sbb
loop
jp
cli
out
rclb
push
call
inc
dec
ret
dec
sub
pop
pop
cmc
pop
inc
dec
inc
push
outsb
adc
loopne
xchg
idivb
cmc
pop
push
cmpsl
jno
std
into
div
mov
push
sub
mov
cmc
outsl
jge
loopne
lods
in
xor
loopne
movsl
repnz
outsl
data16
push
push
mov
mov
rcr
mov
jo
xchg
pop
test
mov
rorb
lods
addr16
dec
aad
aad
lcall
jo
adc
enter
sysret
sub
hlt
mov
xchg
stc
lods
pop
add
popa
jo
scas
iret
outsl
mov
adc
loope
out
xchg
xchg
aam
jo
push
xlat
fadd
dec
mov
mov
je
fnsave
adc
fimull
push
ret
bound
shr
jbe
fcomps
and
xchg
cmp
sahf
push
imul
push
cmpsl
test
fs
xlat
ret
shrl
fldcw
pop
insb
mov
push
fisttps
push
cli
jmp
dec
sahf
int
hlt
lret
aas
in
cmp
mov
movsb
jl
pop
add
lods
sub
or
pop
call
jns
sub
lcall
push
add
jl
push
repnz
sahf
data16
mov
sub
mov
jp
xor
mov
xor
pop
xchg
es
dec
and
jb
jno
int
xor
lock
add
fdivrs
sub
jmp
cmp
incb
xor
sub
adc
add
cmc
jb
jbe
ja
scas
fs
sbbl
mov
je
cs
lcall
mov
scas
je
cmp
and
icebp
into
imull
insb
out
sub
ja
inc
lods
add
mov
out
dec
andb
out
dec
fucomip
sbb
and
sub
fndisi(8087
iret
xlat
adc
test
adc
push
pop
out
adcl
icebp
lret
fiadds
pop
push
mov
adc
insl
inc
mov
es
out
pop
repnz
outsl
pop
ret
out
or
mov
jbe
cmpsb
aaa
push
mov
or
pusha
bound
dec
fwait
mov
cmpsb
mov
mov
dec
xor
jbe
jmp
arpl
pop
and
ljmp
daa
test
lods
pushf
xor
push
out
into
xor
xchg
popf
pusha
add
cmc
cmovbe
push
mov
jae
pop
and
mov
movb
mov
inc
ds
cmp
loopne
lea
sub
pop
out
sub
or
xchg
stos
push
cs
je
ja
pop
sub
out
enter
fsubrp
sbb
out
bound
rolb
fnstenv
cmc
pop
adc
mov
jg
push
int
out
lods
sbb
cld
mov
pop
or
mov
sbb
sub
les
jbe
aaa
jo
mov
into
out
pushf
cli
in
push
xorl
out
pop
sarl
fbstp
es
jns
lea
mov
xlat
jo
adc
dec
mov
sub
ja
pop
cmp
fwait
xor
movsl
inc
push
xchg
lods
fnsave
out
out
push
movsb
dec
mov
or
insb
dec
hlt
data16
add
nop
xor
add
enter
adc
mov
or
push
outsl
xchg
push
add
inc
pop
add
add
div
jle
mov
add
pop
jmp
imul
ja
imull
daa
adc
aaa
scas
push
cld
enter
scas
pusha
mov
dec
push
pop
int3
xor
mov
stos
xor
dec
push
sub
andb
rolb
popa
sub
and
adc
jne
inc
add
or
xor
jo
daa
data16
lods
or
scas
xchg
lret
popf
xchg
inc
inc
xorb
push
add
xor
outsl
js
dec
fmull
pushf
jmp
dec
shl
jnp
icebp
test
inc
insl
xchg
jl
scas
xchg
repz
mov
mov
xchg
adcb
mov
push
outsl
lods
je
or
adc
fsubrp
jp
arpl
ljmp
ja
adc
lods
pushf
sbb
mov
push
xchg
lock
cmpsl
add
movb
inc
in
out
jmp
out
cmc
lea
lods
mov
jb
inc
out
int
test
pop
sub
shr
xchg
mov
imul
jmp
inc
lret
mov
rorb
and
in
push
test
insb
xlat
fidivrs
mov
cwtl
leave
out
enter
call
jge
shrb
fwait
mov
mov
jle
in
out
lahf
out
dec
pusha
push
je
call
or
sti
leave
ds
test
clc
push
lahf
lret
mov
out
mov
fsubr
out
mov
aaa
add
scas
mov
out
cmp
and
xchg
mov
push
in
push
jae
sub
push
jnp
pop
dec
lcall
enter
sar
adc
mov
test
lea
out
loope
xor
xchg
scas
cld
fldcw
and
inc
sbb
jp
out
adc
jecxz
jb
aam
sbb
iret
pop
adc
and
aaa
imul
cmp
mov
in
adc
aam
xchg
out
push
aad
jbe
test
out
clc
frstor
cmpsl
arpl
mov
dec
mov
xchg
sbb
and
cmpsl
int3
adc
divb
cmp
or
aas
stos
sbb
jns
jne
push
insl
jo
mov
xchg
sub
cmp
sbb
loope
leave
dec
push
pop
loop
out
pop
cld
xor
dec
adc
adc
pop
in
push
jle
add
jbe
mov
daa
movsl
pop
cmp
stos
mov
pop
dec
ds
scas
out
jb
in
call
jnp
out
testl
in
xchg
addl
out
mov
mov
out
xchg
ss
pop
jp
jnp
pushf
in
test
mov
mov
out
in
push
idiv
testb
dec
xlat
dec
jmp
insb
clc
dec
fisubs
xchg
cld
add
jg
ja
mov
rcrb
mov
jne
push
jo
jg
xchg
ja
inc
sti
scas
pop
mov
lret
out
jmp
push
in
into
mov
pop
fcmovnu
lret
push
fnstenv
out
inc
sbb
cld
stos
pop
mov
jae
pusha
mov
add
and
lahf
xorl
push
mov
sbb
mov
ss
and
lea
insb
and
jl
jecxz
xchg
add
testl
cmc
add
stc
insl
outsl
jne
xchg
cmp
mov
mov
pop
push
jne
jno
sbb
sub
dec
mov
into
out
jg
je
push
and
loop
mov
ficoms
jg
cwtl
iret
push
xchg
lods
les
js
negb
icebp
mov
xor
jno
push
lods
ret
add
mov
sti
lock
lcall
and
push
pop
testl
pop
stos
les
push
push
int3
into
mov
jb
repz
out
xorl
arpl
sbb
testb
jne
insl
shl
lret
dec
adc
rorl
into
mov
into
mov
push
and
xchg
nop
or
jmp
iret
fcomps
xchg
jo
add
push
jge
or
testl
jecxz
jb
fisttps
aam
rorl
iret
rclb
mov
ds
xchg
sti
push
movsl
popa
scas
push
push
shl
aam
push
xlat
jno
mov
subb
stc
dec
loop
sahf
jae
mov
ret
data16
rolb
sub
nop
jb
fcmovnbe
jmp
and
fstpl
aaa
subb
bnd
and
aaa
test
jne
dec
rcl
add
mov
jnp
pop
lcall
orb
daa
add
pop
aas
xchg
test
dec
mov
sub
aaa
mulb
outsl
cmpsl
icebp
push
jae
loope
addl
jle
fiaddl
fmull
fdivrp
mov
push
es
loope
add
inc
ret
das
inc
out
ljmp
cmp
das
dec
jmp
jb
rclb
dec
rorb
ret
in
addr16
nop
test
jmp
out
out
pusha
jne
lock
call
mov
jge
pop
mov
mov
divl
mov
mov
outsl
pop
add
xchg
inc
repnz
adc
rcr
imul
call
outsb
mov
cmp
adc
das
pop
int3
in
jnp
div
rolb
add
inc
sub
in
push
sbb
test
test
loope
out
xorb
xor
idivl
sbbb
pushf
cmpb
mov
fidivrs
pop
aaa
mov
push
sbb
sub
mov
fadds
mov
in
add
add
aas
repnz
mov
not
mov
cmpsb
and
push
rorb
loope
adc
mov
and
sti
stos
inc
insb
mov
out
mov
repz
fwait
push
add
daa
div
shll
inc
enter
jge
rcll
loop
jo
push
inc
shrb
nop
push
mov
aad
insl
dec
les
mov
inc
lock
inc
cmp
aam
add
shlb
adc
shrb
outsl
mov
movsb
cmc
xor
test
pushf
repnz
rcr
clc
push
xchg
mov
std
add
xchg
ljmp
jb
xchg
bnd
and
rolb
pop
imul
repnz
mov
sub
sub
scas
ret
stos
loope
jb
pusha
xor
into
push
push
or
insl
lock
pop
decb
aad
lock
jmp
xchg
pop
scas
into
add
lret
jmp
orb
insl
adc
int
aas
fnstenv
out
lcall
inc
notb
jmp
les
fimull
scas
jg
dec
in
pop
cs
sarb
aad
aas
repnz
idiv
xchg
shl
dec
push
addr16
mov
cli
sub
push
fcomi
aad
jecxz
into
clc
scas
mov
dec
arpl
hlt
push
stos
jnp
sbbl
lret
cs
add
mov
outsl
xchg
cld
dec
out
xchg
xlat
inc
shl
aad
push
hlt
testl
fst
inc
inc
aas
hlt
enter
cs
incl
test
jge
pop
call
icebp
dec
push
push
nop
xchg
xor
jo
jbe
xchg
jl
aas
jge
pop
popw
out
mov
dec
movsb
mov
ss
jnp
jecxz
add
xor
mov
xor
divl
mov
roll
adc
jbe
push
add
repnz
jo
jae
lea
outsl
add
dec
daa
xor
aad
push
loop
fwait
xchg
fldcw
inc
ja
sub
jmp
mov
mov
mov
mov
ss
lds
xorb
jg
lock
mov
rcrb
mov
ret
jge
add
inc
xchg
aaa
jmp
idiv
mov
mov
cmpb
sarb
and
add
or
dec
mov
scas
xchg
shr
sub
jnp
cmpl
idivb
mov
cmpb
xor
cmp
pop
arpl
cmp
jne
jmp
cmpb
repz
adcb
jae
jmp
imul
in
cld
push
cld
stc
and
sbb
inc
sbb
js
subb
xor
repnz
sub
out
xchg
inc
arpl
push
adcb
add
xchg
inc
cmpsl
iret
lock
jecxz
add
mov
and
jno
mov
or
mov
pop
call
cmp
dec
add
xchg
bnd
push
insb
lret
mov
pop
aas
adcb
std
cltd
jmp
add
icebp
xchg
xchg
divps
inc
xor
ljmp
sub
lock
rcll
fisubrl
js
pusha
lret
sbb
sub
mov
mov
jbe
mov
mov
or
mov
in
movsl
pop
pop
es
add
pop
jmp
dec
add
cmp
scas
outsl
dec
sbb
mov
rclb
cmc
push
mov
fs
daa
movsl
movsb
cmpsb
jno
outsl
shl
adc
stos
mov
sbb
shrb
and
pushf
mov
nop
icebp
or
pop
xchg
fsubr
lock
ror
insl
dec
int3
sub
mov
mov
outsb
add
roll
loopne
dec
fnstenv
push
push
lock
xchg
pop
int
push
mov
adc
cmp
mov
dec
jb
fst
push
int
mov
or
ds
inc
lret
test
mov
incl
testl
clc
out
lret
into
leave
dec
inc
adc
mov
aam
outsb
pop
cli
test
repnz
ja
push
jb
aaa
aad
aas
leave
les
in
iret
jmp
subb
aas
repnz
outsb
adc
dec
add
mov
xorl
in
sbb
xchg
jns
dec
push
xchg
movsl
jno
xor
xchg
inc
mov
ja
dec
loop
fidivrs
stc
mul
sbb
es
lcall
repnz
push
ss
cmc
add
push
je
jo
outsl
sbb
sti
mull
jnp
cmpl
aas
xor
out
pushl
fsubrs
or
fidivl
aad
idivl
cmp
scas
nop
xorl
and
imul
cmpl
das
scas
repnz
icebp
add
imul
lock
dec
out
lds
pushf
dec
clc
sti
add
mov
lods
mov
out
test
lods
mov
push
add
in
xor
dec
loop
mov
cmpsl
ret
jne
js
loop
push
push
pop
rorl
jae
nop
jo
insl
repz
cmpsl
sub
push
js
mov
arpl
pop
inc
sbb
ffree
add
pop
adc
mov
testl
lcall
jle
outsb
icebp
rorl
or
sbb
ljmp
aad
jae
enter
out
pop
jl
or
ljmp
das
nop
js
jmp
pop
mov
mov
pop
call
neg
or
test
cmpsl
sub
pop
add
lods
mov
shl
cmp
jg
je
add
push
div
sub
stc
aaa
jno
out
push
andl
loope
mov
clc
jns
cmc
ds
mov
jno
jns
stc
imul
loop
lcall
rolb
and
enter
add
xchg
mov
cmp
cmpsl
ss
clc
idiv
pop
popa
notl
push
mov
sti
push
sbb
xchg
jle
lret
loope
pop
outsl
stos
sbb
lcall
xchg
adc
cmpsb
mov
loopne
fists
push
insb
mov
inc
les
mov
or
jne
mov
or
xchg
mov
pop
mov
fnstsw
cmp
hlt
xchg
xchg
aas
add
inc
sbb
inc
xchg
mov
int
in
lock
mov
addl
inc
incl
jo
jae
fwait
inc
jmp
lods
test
inc
js
std
lahf
iret
aad
pop
ror
push
xor
adc
js
pop
add
add
cwtl
imul
sub
fs
stc
dec
les
jg
lock
dec
dec
mov
pop
imul
out
pop
pop
cs
cmpsb
repnz
out
into
sar
jmp
lods
mov
adc
inc
rolb
jge
out
sahf
jae
test
xchg
test
mov
clc
cmp
xchg
psubb
arpl
xor
mov
or
sbb
cmc
add
out
cwtl
and
and
mov
sbb
test
iret
and
cltd
xchg
and
adc
mov
jb
hlt
pop
js
jbe
lds
imul
jb
push
sub
xor
fisubl
and
xrelease
scas
in
repz
loopne
adc
test
mov
in
outsl
notl
xor
sub
pop
sub
jmp
bound
lahf
out
lods
mov
push
dec
addr16
sbb
stc
in
mov
mov
loope
mov
negb
xchg
andb
push
add
test
negb
sbb
das
es
mov
push
imul
es
das
cmc
cld
push
icebp
loopne
dec
inc
cmpl
xor
or
testl
lret
pop
xor
dec
jecxz
repnz
rep
push
mov
shrb
jb
ja
clc
in
movl
xlat
jbe
mov
data16
int3
negb
pop
loopne
and
sbb
push
xchg
jns
cmp
ljmp
add
pop
adc
fimuls
int3
jb
sbb
lret
fmuls
cs
push
out
fwait
mov
adc
push
fmuls
out
pushf
mulb
popa
popf
push
test
add
push
and
ror
addr16
repnz
fnstenv
dec
test
test
repnz
repz
je
es
movsb
sti
add
shrb
mov
test
pop
test
mov
test
rcr
pop
mov
iret
push
jecxz
xchg
mov
popl
repz
mov
aad
lcall
mov
setb
xchg
jbe
inc
pop
in
pop
adc
idivl
lock
jb
mov
xor
adc
mov
je
out
jne
es
rcrl
call
xor
add
sbb
add
repz
and
cltd
mov
xchg
mov
stc
inc
das
mov
sahf
jge
sbb
xorb
int
sub
out
in
scas
xchg
jo
ja
cmc
cs
mov
call
sbb
xor
and
dec
repnz
mov
lahf
add
lea
mov
dec
xchg
xchg
pop
jb
xorb
xchg
cltd
push
add
hlt
popa
hlt
decb
repnz
rcl
push
jg
dec
mov
or
sbb
push
test
fldenv
int3
enter
ja
jge
test
mov
lock
je
and
push
popa
outsb
sbb
push
jo
push
xchg
sub
sar
xchg
xor
pop
bnd
push
outsl
imull
inc
rcl
repnz
lock
je
lahf
sub
dec
es
std
out
dec
push
push
push
test
ret
aas
push
iret
adc
jnp
sarb
test
cmp
loop
pop
rcrl
out
pop
mov
ror
addr16
into
jo
je
xchg
xor
xorb
in
dec
inc
lods
or
andb
lods
xor
out
int
dec
arpl
data16
xor
pushf
or
test
pop
lock
xchg
cmpsl
je
mov
stc
jo
rolb
mov
jle
in
clc
jl
jmp
adc
jo
aad
addr16
test
inc
dec
jmp
imul
hlt
rorb
stos
test
into
mov
sub
push
jnp
mov
mov
cmpsb
mov
in
icebp
fld
push
pop
lods
es
xchg
mov
jmp
popa
dec
out
fnstenv
int
adc
aam
fisubrs
jb
sub
out
ret
repz
call
repnz
push
ds
push
jae
mov
cmp
pop
call
mov
std
jg
data16
in
cmc
lret
aam
shl
push
outsl
sbb
adc
push
addr16
insl
aaa
jne
ljmp
rcr
mov
outsb
add
out
pushf
negb
mov
push
and
iret
mov
and
jae
fbld
mov
push
fbstp
cmpsl
dec
ds
movsl
out
enter
daa
sar
pop
call
hlt
and
dec
test
add
sub
sub
xorb
jo
mov
loopne
add
in
add
int
add
mov
dec
mov
pop
imul
int3
clc
xchg
add
aas
jg
mov
mov
and
add
mov
in
adc
inc
cld
loopne
out
repnz
dec
dec
test
negb
addr16
roll
sbb
sub
mov
incl
or
add
imul
rcl
sbb
sbb
push
cld
sbb
dec
dec
lcall
mov
out
sarl
xchg
popf
jnp
push
pop
sahf
sbb
mov
xchg
cwtl
addr16
cltd
outsb
leave
lret
add
out
jo
mov
je
fsts
daa
arpl
inc
ror
ret
cld
mov
aad
jg
nop
cmc
and
mov
pop
call
lds
out
pop
add
rorb
cmpsl
mov
jg
and
cmpb
loopne
inc
inc
cmc
add
out
mov
addr16
std
xor
inc
push
out
lds
push
sbb
mov
out
sbb
dec
cmc
jg
xchg
lock
xor
cwtl
in
cmc
inc
adcl
mov
pop
es
push
fsubl
mov
xchg
cmp
mov
mov
pop
dec
testl
in
xorb
pop
scas
lahf
ja
sbb
pushf
sbb
stc
stc
aad
lcall
adc
xchg
ljmp
xor
sub
or
sub
outsb
jg
nop
mov
pop
mov
mov
ss
xchg
adc
out
notl
lahf
sbb
mov
scas
and
xor
mov
loop
mov
cmc
jg
ja
dec
loop
loop
aas
nop
jne
fiaddl
pushl
dec
loop
dec
popf
cmp
push
ret
xor
push
inc
xor
add
add
and
repnz
jne
ret
xchg
idivb
inc
fadd
js
lret
int
push
test
push
jnp
dec
cli
icebp
cmp
lret
push
rolb
into
push
pop
rcr
out
pop
push
push
ror
out
pop
ljmp
and
push
sub
sbbb
cmp
jns
adc
ja
inc
jl
loopne
dec
jb
int3
leave
push
fnsave
add
outsl
jne
aas
stc
mov
popf
add
fstpl
lods
jae
xchg
mov
adc
fistpll
rorb
cmp
stc
xchg
ljmp
loope
pop
aad
pushf
nop
jne
cmp
and
mov
xchg
xchg
inc
cld
ja
notl
jp
dec
mov
insl
outsl
xchg
xchg
add
adc
stc
arpl
cs
shrb
dec
jae
mov
jg
mov
rorb
loop
inc
lea
adc
shlb
insl
lock
in
jo
cmc
call
jbe
push
fwait
dec
xchg
xchg
mov
inc
fnsave
cmpsl
jl
mov
sti
lock
add
lahf
jb
je
mov
pop
aas
repnz
rep
mov
pop
jne
jae
ja
dec
loop
jmp
add
jbe
jb
ja
dec
loop
add
dec
xchg
xchg
cld
adc
dec
adc
fdivl
xchg
sub
dec
mov
xchg
jbe
ret
add
xchg
mov
xchg
jbe
mov
lock
pop
call
fisttps
sahf
jg
cmc
in
out
mov
jbe
mov
rolb
cltd
xlat
lock
outsl
add
js
cmp
mov
add
fcomip
js
lds
nop
mov
cmp
mov
jne
js
mov
out
test
imul
xorl
xchg
and
or
xlat
clc
cmc
add
cmc
inc
shll
iret
dec
fsubrp
and
mov
sbb
ja
fisttps
imul
ss
and
icebp
loopne
test
aas
jge
arpl
push
or
imulb
cs
adc
test
les
jno
mov
repnz
mov
orb
inc
imul
mov
ja
imul
push
pop
decb
lahf
pop
lock
jbe
push
ss
push
rclb
mov
repz
addr16
push
scas
popf
jne
jl
jg
addr16
out
xchg
idivl
sti
testl
lcall
or
pop
jae
pop
xchg
insl
hlt
adcb
mov
das
out
fs
repz
nop
xchg
mov
call
sub
xchg
mov
movsb
and
adc
push
loope
adcb
mov
inc
aaa
jp
or
xchg
stos
cmp
inc
dec
pop
pop
dec
pop
dec
or
cmp
inc
add
lods
adc
decb
dec
arpl
adc
xchg
test
test
add
jge
xlat
mov
add
aas
icebp
scas
jb
js
idiv
xchg
push
aam
inc
mov
cmp
js
test
insl
shlb
and
cwtl
mov
mov
pusha
or
iret
cmp
inc
mov
out
ja
daa
jecxz
shl
adc
aad
jg
cmpsb
pop
loope
shr
mov
fs
lahf
xchg
jbe
pop
mov
add
push
push
repz
loope
cmp
add
es
lahf
popl
cmpsl
xor
add
jne
mov
dec
idivb
cld
jl
mov
lods
jae
mov
repnz
adc
cmp
sti
jl
aas
add
imul
add
mulb
cli
jl
cmp
push
mov
add
repz
adc
jmpw
pop
stc
jno
xchg
divb
xchg
sahf
dec
xor
mov
cld
inc
add
dec
leave
das
enter
xchg
xchg
cmpxchg
rolb
out
mov
popl
cld
repz
cmp
mov
jo
mov
inc
xchg
pop
test
mov
pushf
mov
dec
jmp
adc
mov
nop
xchg
test
mov
dec
mov
cmp
xchg
xor
out
fidivl
cmpb
out
push
dec
push
dec
pop
adc
xchg
xchg
out
xchg
xchg
add
pop
lods
repz
and
sub
test
xor
sbb
and
ret
aam
mov
cld
ja
dec
xchg
lahf
ss
lods
mov
xor
es
push
popa
dec
push
lret
int3
dec
out
movq
and
xor
mov
xchg
dec
jo
dec
jecxz
mov
sarb
aaa
pop
lods
fbld
or
repz
mov
mov
nop
push
mov
push
push
push
imul
fs
addr16
inc
xor
xlat
fildll
and
dec
push
outsb
aam
jle
leave
int3
mov
add
dec
sbbl
outsl
nop
jb
repz
divl
add
jmp
insl
jno
cmp
shrb
pop
jp
lods
scas
sahf
jae
mov
stc
pop
call
xor
ja
dec
loop
lock
lcall
push
jg
nop
js
jmp
out
jnp
iret
xchg
push
adc
add
mov
mov
jg
repnz
xor
outsb
jg
cmpsb
inc
imul
push
xchg
rcr
testb
sub
mov
or
int3
mov
int3
into
in
gs
lock
rorb
lock
jle
repnz
mov
inc
push
shl
int
cmp
xchg
mov
inc
int3
insl
mov
in
xor
or
scas
imul
dec
inc
sub
test
loop
fcmovne
out
dec
popa
ds
int
test
mov
pop
roll
enter
or
sub
ret
test
jbe
stc
jge
or
scas
aad
xchg
sti
pop
aas
pop
cwtl
repz
es
insb
or
divl
xor
pop
int3
mov
jl
cmp
jge
mov
push
leave
push
mov
sub
adcl
mov
pop
dec
loop
popf
cmp
push
movsl
cmpsl
clc
repz
mull
mov
out
mov
or
mul
leave
loopne
aad
shrl
es
add
mov
int
lds
dec
std
jno
rol
dec
pop
les
imul
shll
mov
lods
cmp
jle
lods
mov
scas
jb
cmc
daa
adc
cmpsb
mov
xchg
jae
outsb
out
ss
in
fs
jl
dec
mov
out
sbb
jae
sbb
adc
lock
pop
imul
loop
enter
sbb
inc
ja
lods
scas
popf
pop
inc
pop
sub
dec
rcrb
mov
lret
mov
sbb
pop
int
pop
push
mov
push
cltd
pushf
addl
into
push
dec
push
iret
das
or
shr
sbb
xchg
and
sbb
sbb
xor
fsubs
kandw
jnp,pt
fwait
cmpb
ljmp
dec
fnstcw
data16
fdivl
inc
js
mov
jae
push
adc
aaa
or
push
push
xchg
ljmp
test
sub
leave
div
js
and
jbe
jae
inc
jne
lock
or
jle
jnp
cmpsb
int3
inc
jp
lock
dec
stc
xor
xchg
incl
sbb
mov
pop
or
push
add
testb
xlat
jae
push
pop
outsb
movsl
sub
fldt
dec
addr16
push
adc
and
fildl
dec
push
ja
lock
iret
test
mov
fdivs
mov
xor
sahf
mov
andb
out
int
into
fs
inc
push
je
ja
fstpl
xchg
mov
lahf
fcompl
mov
dec
push
gs
dec
loop
mov
out
shl
pop
call
notb
sub
aaa
jae
jecxz
aam
add
xchg
mov
cmp
add
and
pop
repz
ljmp
sbb
cmpsb
test
push
add
push
cmp
add
jns
movsl
cmpsl
xchg
add
mov
mov
xlat
xchg
aad
add
repnz
lods
pusha
dec
add
xorl
pushf
xor
dec
cmp
sub
addb
dec
mov
inc
jne
repnz
testl
dec
es
cli
icebp
mov
push
push
pop
dec
rorb
lods
scas
fidivl
xchg
dec
xor
inc
jg
cltd
mov
push
and
add
cmpsl
sbb
fs
jg
in
xchg
sbbb
mov
jno
mov
jnp
jbe
cs
cs
movb
es
cmc
jae
notb
fdivl
jbe
aaa
add
lock
cwtl
fisubs
xor
jb
mov
add
add
sbb
and
jno
daa
hlt
jl
dec
loope
xor
and
add
jl
sub
or
mov
xor
sarb
dec
les
stos
mov
lcall
mov
sub
cmp
sub
lret
pop
rcrb
mov
dec
loopne
into
or
mov
sbb
shr
cmp
pusha
or
out
cli
cmpb
push
nop
and
into
sub
repz
and
push
das
jmp
ds
notb
mov
idivb
mov
inc
shll
add
xchg
scas
mov
xchg
pop
mov
sahf
imul
cmp
clc
ja
add
aad
sahf
dec
push
divl
jo
enter
mov
insl
or
in
addb
dec
pushf
sub
cld
inc
push
add
mov
xchg
add
cmp
mov
cmp
mov
test
fsubr
sbb
cmp
cmp
fistl
jno
nop
jb
shlb
xchg
fwait
popf
test
lock
rolb
mov
daa
jno
in
push
ljmp
cltd
cmpsl
xchg
ldmxcsr
inc
pop
mov
cmpsl
add
xchg
pop
int3
ja
dec
loop
jbe
sbb
sbb
stc
mov
mov
outsb
pop
call
jo
mov
jg
add
cmc
hlt
or
repz
fstpl
or
outsb
hlt
and
jl
scas
scas
jb
negb
fcomip
mov
mov
mov
nop
jno
je
leave
and
xchg
repnz
or
sbb
xchg
jno
notl
inc
mov
repnz
fdivl
jl
dec
js
scas
pop
jbe
outsl
loop
xor
fistpl
cltd
push
jecxz
jo
fwait
jae
mov
and
or
ret
shr
xchg
insl
push
lods
das
or
popf
cmc
dec
ljmp
in
int3
fbstp
in
les
or
push
pop
xchg
pop
inc
xchg
adc
int
in
sbb
hlt
or
int3
lods
ret
hlt
inc
dec
lea
aas
ss
cmc
iret
jb
leave
gs
or
movsb
out
es
stc
fs
in
push
adc
fistl
mov
out
mov
dec
xchg
fwait
or
sub
xor
add
mov
sahf
scas
addr16
out
inc
out
xchg
dec
neg
hlt
fucomi
add
and
xchg
xor
out
pushl
push
in
jp
mov
out
adc
fisttpl
xor
mov
stos
jo,pn
sbb
movsl
jl
ret
lea
in
xor
sbbl
jbe
add
and
outsl
fldenv
mov
jle
stos
pop
push
das
scas
jecxz
icebp
inc
in
sti
out
gs
lret
push
jns
aas
mov
out
and
push
mov
test
clc
and
sahf
cwtl
rol
popa
in
jns
out
inc
lods
es
iret
sti
out
push
loope
std
ds
or
mov
jle
mov
dec
aam
outsl
xchg
lahf
cmp
scas
mov
jl
out
add
and
out
cmc
ljmp
push
fdivs
mov
mov
push
loop
xchg
out
aaa
mov
mov
cmc
adc
push
mov
xlat
lret
out
jl
scas
jmp
push
push
push
cmpsl
jecxz
lea
dec
dec
sub
adc
gs
inc
cltd
out
scas
filds
daa
repz
aaa
out
xchg
xchg
enter
loop
out
out
ds
jl
mov
dec
out
xor
inc
jle
dec
mov
or
jne
cmc
push
test
push
jno
fdivs
out
pop
aam
not
mov
roll
out
pushf
push
adc
mov
out
pop
mov
push
lcall
sub
inc
out
out
leave
push
jmp
adc
sub
cmp
pop
cmpsb
cwtl
daa
ja
sbb
inc
pop
inc
adc
cmp
outsl
push
ds
fucomi
add
out
add
push
outsl
hlt
adc
fcmovb
lea
inc
mov
mov
jg
cmp
outsb
add
mov
adc
pop
lret
in
aad
fistps
cmp
mov
lock
xchg
xorb
call
jo
int3
in
add
dec
cmp
decb
bnd
pop
mov
loop
dec
mov
cwtl
dec
out
fidivl
enter
adc
mov
pop
repz
cwtl
repz
jo
mov
push
sub
repnz
lock
fistpll
or
inc
sti
bndstx
or
mov
popf
cmpsl
adc
ljmp
push
mov
or
mov
or
int
add
jnp
lods
cmp
add
jns
cmp
lret
adc
pop
outsl
out
mov
inc
jne
cmpsb
popa
rcrb
outsl
lahf
push
js
outsb
setno
mov
ss
fstl
pop
hlt
xlat
cmp
jne
mov
loope
cli
icebp
or
cmp
and
imull
xorb
sarb
in
test
mov
aad
hlt
push
jbe
push
loopne
sub
ja
fnstsw
repz
push
out
lcall
cs
adc
pop
add
push
out
jmp
mov
shl
push
xchg
stc
mov
adc
ds
bnd
and
mov
xlat
cmp
add
sbb
in
mov
pop
or
push
jg
nop
rorb
xor
mov
mov
add
mov
jb
lods
scas
mov
mov
das
add
ret
std
cs
xlat
mov
enter
icebp
ds
cld
enter
mov
js
hlt
testb
xchg
or
mov
or
icebp
xchg
or
mov
icebp
pop
testl
jmp
dec
dec
dec
mov
icebp
fnstsw
mov
push
xor
pushf
mov
cmp
jb
in
add
int3
xchg
jns
adc
pop
data16
inc
out
mov
mov
jo
lds
mov
ret
mov
push
jbe
loopne
sub
not
lock
inc
inc
mov
adc
add
shlb
in
ja
xlat
std
sub
mov
push
inc
shrb
or
mov
dec
js
testb
or
ret
enter
push
fs
xchg
out
hlt
lret
es
push
loopne
pop
xor
dec
out
rolb
rorl
sarb
jg
jge
pop
cmp
pop
mov
fisttpll
push
dec
mov
cmp
cmc
js
testl
xor
mov
mov
sub
lret
fsubrp
bnd
jae
mov
add
xor
jae
mov
subb
xor
insl
repnz
mov
ja
dec
loop
mov
loopne
and
mov
lods
jns
insl
repnz
adc
xor
dec
loop
and
sbb
mov
repnz
test
ljmp
mov
pop
imul
xchg
mov
movsl
incl
cmpsb
adc
aaa
out
dec
loop
ds
std
cmpsb
xchg
ss
dec
loop
push
vmwrite
xchg
pop
mov
lcall
bound
repnz
mov
adc
add
es
mov
icebp
xchg
inc
jnp
push
repnz
add
cmpsb
mov
cmp
add
fdivrl
testl
movsl
notb
dec
add
jg
repnz
jae
mov
std
testl
xlat
jb
test
movsl
mov
cmp
mov
mov
mov
ss
push
lea
mov
je
adc
fisubl
rclb
lcall
xor
repz
repnz
sbb
jae
shlb
aam
hlt
xchg
xor
repnz
pop
mov
lods
jb
inc
testl
inc
cmp
lcall
ja
add
nop
lock
shl
xchg
inc
incl
adc
add
mov
inc
rcrl
je
es
xor
push
sub
mov
xor
std
jmp
cmp
cs
mov
mov
jno
rcrl
jg
mov
loope
pop
pop
bnd
and
outsb
repnz
adc
add
cmpsl
ja
bound
iret
sub
nop
lock
popa
lret
loopne
cs
push
out
push
not
sbbl
sub
ja
xlat
jnp
std
test
mov
es
ljmp
add
push
out
mov
subl
sbb
pop
add
add
out
xchg
mov
shrb
orb
outsl
mov
jno
ljmp
pop
mov
iret
sub
pop
and
cs
movsl
cmp
cs
repnz
leave
mov
xor
clc
jp
mov
shlb
adc
mov
adc
mov
sbb
icebp
mov
mov
mov
add
jp
xorb
add
jg
lcall
test
negl
jle
pop
mov
mov
mov
xor
loopne
add
je
je
push
push
mov
jne
test
rorb
pop
js
xor
in
xchg
push
out
stc
insl
jl
scas
out
jb
lock
jne
adc
jl
sbb
test
aaa
jno
adc
int3
iret
loop
jmp
fwait
jp
scas
jno
dec
mov
sbb
stc
pop
shl
and
cltd
jns
add
es
mov
not
clc
addr16
mov
mov
xchg
mov
push
jg,pt
jge
pop
aaa
jge
orl
cli
repz
icebp
add
jg
int
les
add
lods
idiv
int3
pushl
sti
addb
add
jecxz
jno
loop
in
jecxz
pop
div
jns
pushl
insl
jo
cmp
mov
adc
aaa
sub
xchg
repz
add
sbb
nop
mov
icebp
dec
loop
xchg
jo
jb
incl
out
pop
add
pop
xchg
lahf
divl
ja
stos
jp
jp
jge
idivb
sub
jl
leave
into
repnz
dec
push
idivb
icebp
cltd
jne
add
cmpsl
outsl
jge
dec
in
pop
adc
xchg
std
mov
dec
arpl
add
adc
aaa
xor
frstor
add
cmp
jle
bnd
imul
pop
jns
mov
add
and
daa
mov
repnz
xchg
pop
adc
jbe
lret
mov
lret
cmc
mov
lock
pop
dec
lret
out
xchg
lahf
cmp
aas
jp
cld
mov
out
movsl
int3
mov
leave
sbb
aaa
pushf
mov
sub
jle
or
lea
ja
sbb
pop
popf
xchg
test
insl
xor
jo
stos
inc
lea
jge
js
nop
xlat
dec
ds
into
mov
fildll
cmp
lret
dec
pop
ret
js
dec
cmpl
jo
cli
repnz
jge
adc
loope
inc
sbb
outsl
jle
nop
cmp
stos
xchg
dec
iret
ret
mov
sbb
jg
cwtl
icebp
mov
cmp
negb
idiv
jbe
inc
lret
xchg
xchg
pop
call
push
xchg
mov
mov
outsl
push
add
pusha
repz
cmpsb
out
xor
xchg
mov
loop
das
rolb
loopne
push
inc
inc
enter
fistl
mov
rorb
int3
in
mov
cmp
mov
loop
cmpsb
mov
in
xchg
out
fdivr
aam
cld
or
pop
pop
adc
mov
pop
sbb
fcoml
sub
xchg
orb
xor
dec
mov
pusha
mov
pushf
pop
dec
xlat
test
pop
adc
negl
lret
add
jg
add
and
dec
orb
cli
xor
aaa
jg
aad
pop
and
and
xchg
and
test
cmpsl
and
movsb
inc
push
push
stos
mov
idivb
push
nop
imul
mov
adc
pusha
dec
andl
divl
int3
lods
cmp
lahf
imul
sub
jne
jl
cmpsl
xchg
jg
xor
dec
lock
xchg
shlb
mov
out
push
es
and
xchg
test
sub
cmpsb
inc
adc
loop
and
jb
xchg
jp
xchg
jb
and
icebp
sub
mov
xor
cltd
out
sahf
lods
popf
sbb
cmpb
sub
ret
rcrb
std
cld
in
xorl
add
sbb
repnz
gs
fcoms
adc
sbb
cmc
push
ret
scas
inc
xchg
f2xm1
out
test
gs
inc
cmp
jge
jbe
jbe
or
cli
js
pop
icebp
dec
lods
inc
outsl
dec
stos
fldl
jecxz
bound
clc
sub
arpl
gs
pavgb
ret
adc
cwtl
pop
fs
ljmp
sbb
fcmovu
inc
jge
testb
imul
dec
lcall
hlt
or
or
mov
testl
js
daa
das
js
icebp
clc
in
in
popl
cmpb
lahf
out
or
jb
out
mov
out
and
or
stc
mov
cmp
inc
test
jp
out
sbb
and
dec
mov
pop
outsl
sub
xchg
add
out
rcr
loopne
inc
dec
push
pop
out
popa
imul
fabs
jmp
and
xor
inc
dec
push
pop
sti
bound
loopne
sub
or
scas
jg
div
mov
jno
pop
adc
xchg
scas
dec
dec
sahf
xchg
or
xchg
mov
xchg
mov
xchg
icebp
das
out
jb
or
xlat
mov
xor
mov
push
scas
lret
xor
insb
mov
inc
mov
and
xlat
adc
push
in
xor
mov
fsubp
out
sha1rnds4
xchg
push
shr
dec
mov
dec
in
dec
fwait
aad
inc
or
enter
rdpkru
push
out
insl
xchg
stc
push
xchg
jo
in
and
cmpsb
fsubs
mov
adc
sahf
xlat
mov
push
out
inc
iret
dec
jle
mov
adc
lcall
add
jp
dec
or
in
in
call
into
imul
shll
fs
push
loop
push
pop
out
dec
mov
dec
mov
pop
push
xor
adc
std
jmp
cltd
push
sub
loope
push
test
push
daa
testb
xor
mov
ss
push
push
insl
fldz
in
cld
loope
divb
adc
xor
out
cmp
sub
lret
rol
pop
or
jl
push
or
sub
sti
push
fisubrs
cld
sub
and
jnp
mov
jb
loope
in
push
decb
jbe
in
jmp
mov
outsl
and
iret
push
pusha
cmpsl
es
inc
popa
addr16
pop
mov
cmp
lcall
cld
lods
out
mov
xchg
xchg
dec
sbb
or
movsl
sbb
shr
ss
in
out
and
adc
mov
dec
mov
mov
loopne
push
pop
push
mov
movsl
jo
mov
pop
es
call
loope
insl
push
jo
sti
jb
dec
cmp
inc
imul
outsl
cltd
adc
loopne
cmp
test
cld
sub
adc
or
out
pop
dec
sub
in
insb
inc
jmp
pop
adc
lcall
xor
mov
out
inc
dec
xlat
daa
lret
cs
jecxz
lcall
jle
std
and
pop
sbb
out
lods
push
mov
mov
jecxz
dec
jmp
mov
outsl
mov
rcll
dec
push
out
jl
fndisi(8087
mov
call
out
mov
dec
jmp
cwtl
in
pop
cs
into
jns
adc
lock
or
pusha
cltd
jbe
and
insl
jle
pop
pop
int
inc
fldenv
mov
or
sbb
fmul
push
shl
lock
rorl
sub
in
or
bnd
sbb
add
out
jne
dec
and
mov
test
cld
idivl
out
or
sbb
fimull
mov
inc
out
xor
es
gs
jns
out
icebp
push
inc
dec
lds
out
dec
or
jne
test
les
sub
callw
or
lds
movsl
dec
pusha
shrb
out
pop
mov
aam
out
call
sub
movsl
out
es
cmp
jmp
ljmp
sub
aas
scas
repnz
pop
xchg
rcrb
mov
lret
cmp
push
jle
mov
out
cmp
xchg
shrb
xchg
push
jo
addb
sub
sub
cmp
ffree
and
xchg
push
std
fsubp
jmp
pop
out
cmp
imul
out
flds
adc
shr
mov
jmp
inc
pushf
out
loop
call
ret
out
dec
pop
mov
iret
push
shr
dec
mov
sub
sarl
scas
mov
outsl
inc
dec
aad
cltd
pop
and
out
call
mov
gs
icebp
mov
mov
dec
mov
sahf
data16
mov
xchg
ds
ja
lock
xor
out
stc
pop
dec
or
iret
out
push
in
mov
call
sub
or
out
dec
mov
cmpsl
in
or
imul
sbb
hlt
addr16
les
jb
push
push
scas
sub
push
aad
jnp
xor
in
bound
xlat
jbe
test
sahf
call
xchg
cltd
sub
or
jmp
mov
out
xchg
xchg
clc
out
fcmovnb
arpl
out
cmc
mov
lds
sub
in
push
ficompl
inc
mov
cmc
ss
into
addr16
cld
xchg
leave
mov
out
pop
and
jecxz
es
cmpsl
call
push
and
or
sub
out
jmp
sub
pop
loop
in
insl
data16
stos
rclb
jnp
sti
testl
mov
pop
out
lea
out
int
outsb
push
lcall
loopne
jge
and
push
fadds
orb
scas
lahf
xchg
mul
movsl
in
xchg
out
rol
push
pushl
fidivl
pop
lock
fadds
or
aam
jmp
out
adc
push
andb
mov
mov
lods
imul
xchg
loop
mov
mov
mov
fstl
sub
xchg
out
pop
push
ss
add
bound
sub
gs
cmp
and
mov
out
leave
rcrl
enter
cmpsb
gs
lods
jecxz
lods
and
pusha
rolb
inc
push
arpl
pop
inc
push
and
aam
cmpsb
out
cmp
aad
jge
pop
outsl
mov
fistpll
scas
mov
jns
sub
fwait
jecxz
pop
test
push
out
repnz
push
loop
icebp
out
pop
ss
jle
pop
out
mov
lods
jne
out
fnstcw
clc
scas
jb
dec
rorb
mov
movsb
jb
int
pop
adc
fucom
sti
clc
out
sbb
call
outsb
out
fsts
iret
insb
push
bnd
pop
popf
push
pop
adc
pushf
loope
notl
fsubr
sbb
cld
lret
sti
repz
mov
popf
in
stc
lds
cmp
in
jne
pusha
dec
jo
cli
jmp
mov
mov
push
test
bound
insl
out
xchg
pop
call
jge
fwait
jo
pop
fsubs
insl
fisubl
mov
mov
stos
test
out
mov
mov
jmp
sahf
hlt
out
adc
jne
loop
jle
out
popa
mov
xor
xchg
nop
inc
call
mov
insl
aam
cmpsl
insl
jbe
in
fistl
scas
lcall
push
sbb
mov
adc
jge
jmp
test
sarl
repz
cmp
es
jb
and
movaps
mov
adc
insb
add
sbb
imul
out
enter
sub
mov
jbe
dec
push
xchg
cmc
iret
inc
cmp
jno
mov
dec
or
into
addl
test
cmp
pop
out
push
dec
xchg
out
roll
insl
inc
out
and
sub
jne
imul
mov
push
inc
ljmp
inc
xor
iret
pop
cmp
pop
fs
xlat
pop
push
jb
scas
lods
pop
push
sub
ret
mov
mov
inc
adc
sub
out
mov
or
push
in
cmpsl
mov
mov
cli
shrl
movsb
insl
pop
in
insb
sub
scas
cmp
out
or
push
inc
int3
lods
push
xchg
push
call
imul
out
cmp
rcr
jmp
pop
in
push
inc
fnsave
or
ss
out
out
push
xchg
gs
out
loop,pt
mov
out
and
xchg
lods
popf
add
dec
in
int3
sub
inc
push
push
imul
xor
mov
into
jmp
cmp
insl
cmp
pop
dec
jle
loope
cltd
je
call
jb
and
outsl
outsl
push
sub
adc
jmp
in
dec
jmp
in
mov
cs
mov
add
xchg
test
pop
lods
je
ret
fsubrl
cmp
cmp
cld
dec
inc
scas
loope
adc
jb
cmp
lea
xlat
push
sahf
sbb
loope
sahf
loope
out
in
popf
imul
sub
inc
push
push
outsl
fimuls
out
lock
jecxz
jl
jg
out
fsub
sbb
or
icebp
pushf
ss
test
out
lods
out
in
cmp
sub
jp
push
out
popa
sbb
pop
out
sub
xor
fsubrp
push
pop
or
xlat
inc
enter
leave
out
lods
push
mov
mov
cltd
rorl
subl
mov
xor
scas
dec
cmpsl
mov
pop
neg
pop
push
push
pop
mov
inc
pop
stos
out
jns
movsl
pop
xlat
mov
in
bound
pushf
out
fstpt
mov
xchg
mov
subl
xorl
dec
and
xchg
mov
jae
out
test
cmp
dec
push
out
push
and
cmp
scas
add
fnsave
jo
stos
hlt
in
sub
inc
gs
stc
cltd
loope
fistl
out
dec
inc
dec
call
out
sbb
fnclex
std
lds
sbb
insl
leave
mov
xchg
inc
mov
gs
ljmp
cmp
sahf
inc
shrb
fildl
sub
pop
pop
stos
out
rsqrtps
leave
mov
into
repz
xchg
out
mov
movsb
mov
out
fld
hlt
es
sub
jmp
jecxz
xor
inc
mov
cmc
or
inc
pop
fidivrs
lds
jmp
pop
lods
out
in
fistps
cli
aas
mov
test
out
add
or
adc
add
outsl
orb
inc
cs
push
es
xor
faddl
mov
mov
stos
lock
jmp
into
mov
adc
jle
movsb
out
pop
pop
loop
lret
clc
xchg
pop
inc
dec
cmc
std
leave
or
mov
hlt
lds
cld
pop
pop
inc
adc
push
xchg
cmp
inc
mov
push
adc
inc
sub
pop
out
jne
add
adc
in
push
xor
cmp
push
fnstcw
clc
bound
mov
sar
or
mov
inc
sbbb
and
out
std
cmp
adc
jmp
sbb
push
fnstcw
leave
out
dec
lods
cmp
ds
imul
insl
push
add
fadds
out
sbb
jnp
lods
out
adc
dec
add
lea
or
out
push
mov
xchg
or
fisttpl
push
add
mov
mov
in
out
jo
mov
xchg
fadds
inc
cmp
cs
loop
cld
daa
xchg
loopne
or
idivl
pop
cs
and
dec
inc
nop
lods
pop
mov
std
push
lahf
push
out
jb
inc
fwait
sub
or
and
jns
mov
cs
out
inc
sub
xchg
dec
push
popf
out
shufps
test
fsubrp
out
je
mov
insl
in
sub
inc
sbb
mov
lods
fldz
shll
in
sbb
mov
lods
jmp
lea
fst
dec
aaa
jo
movsb
test
lds
add
jge
mov
mov
and
fwait
push
notl
cli
mov
xlat
mov
dec
cmp
pop
xor
cld
lahf
pushf
fsts
lcall
xor
xchg
stos
inc
xchg
xchg
sahf
mov
out
scas
gs
lcall
pusha
lea
adc
lods
cmp
mov
ss
popf
movsl
jo
sbb
mov
or
ret
push
push
pop
lahf
out
dec
pop
rorl
data16
enter
pushf
lcall
lea
in
dec
imul
test
mov
stos
out
popf
sub
decb
sub
gs
and
xchg
adc
dec
mov
dec
sbb
or
lods
inc
arpl
mov
hlt
pop
lock
out
jl
mov
sub
aaa
call
jle
adc
out
xchg
sbb
dec
add
out
mov
push
fistl
dec
arpl
lahf
jo
sahf
je
clc
cmp
daa
loopne
push
pop
mov
xchg
ret
and
adc
dec
lret
push
and
adc
ss
stos
jle
push
pop
pop
xlat
les
ret
sahf
sbb
je
xchg
pop
push
std
fcmovnb
into
shlb
mov
lea
push
add
fs
mov
xor
decb
and
sub
lock
aad
ds
pop
pop
sbb
das
leave
pusha
sahf
dec
jle
test
jo
jecxz
stos
push
fcomi
shr
cmp
and
pop
xor
mov
lods
cltd
mov
or
es
popf
fs
push
mov
flds
cmp
shll
jge
scas
dec
dec
pop
sub
int
mov
dec
jb
imul
pushf
in
mov
push
inc
mov
lret
cmpsl
shll
cmp
cmp
scas
mov
lea
out
in
sub
sub
out
mov
push
cmp
pop
out
test
dec
fistpl
gs
inc
fucomp
in
imul
rcrb
in
pop
loop
pop
adc
aam
movsb
xchg
pop
int3
jb
lods
insl
pop
lret
mulb
adc
fcom
sbb
adc
add
js
xor
adc
cmp
dec
in
ret
test
cwtl
out
outsl
dec
add
lret
in
or
nop
jae
jl
adc
out
lcall
xor
fcmovu
pop
scas
ret
sbb
sub
out
lret
arpl
insl
fs
add
fildll
push
out
push
and
ljmp
mov
testb
sub
addr16
jle
inc
push
sahf
add
mov
push
fucomp
inc
call
outsl
inc
stc
es
and
fcompl
jo
pop
dec
pop
fs
mov
jecxz
jo
sub
imul
push
or
and
fdivl
sbb
fsubrp
mov
rcl
lcall
stc
sbb
dec
out
es
sbb
xchg
dec
and
and
int
out
mov
add
pop
sub
jbe
fsts
jb
bound
int
sahf
insl
push
pushf
shl
xchg
out
dec
xor
mov
cmc
or
out
or
mov
popa
mov
out
insl
pushf
add
daa
or
lock
iret
mov
int3
adc
daa
addr16
adc
jbe
ljmp
xlat
push
inc
jns
sub
sahf
shr
pop
and
cli
repnz
fcompl
sbb
ficompl
lods
xorb
xlat
inc
insl
mov
jmp
jp
shlb
mov
in
sub
jb
shlb
ret
divb
ds
rorl
sub
outsl
xchg
enter
test
fdivrl
jle
mov
and
add
sub
fucom
lret
out
leave
or
sbb
sub
sub
push
and
jmp
sub
sahf
add
gs
pop
idivb
jmp
sarl
stc
hlt
lea
stos
les
test
cmpsl
rcrl
jb
dec
std
add
push
sahf
xchg
test
xchg
jb
jmp
out
fmuls
ret
xor
inc
movsl
and
dec
mov
xchg
test
out
shrl
inc
adc
ret
repz
mov
rcrb
out
and
sub
push
out
sub
dec
in
add
push
into
inc
mov
pop
cmc
adc
movsl
lret
pop
test
xchg
stc
xor
push
xchg
xchg
adc
cwtl
jmp
cmp
outsl
xchg
ret
push
je
ret
and
pop
push
mov
pop
aas
jle
xchg
pop
je
sub
fsubl
fsubl
iret
out
lea
std
fucom
mov
cli
out
ljmp
sbbb
mov
popa
into
inc
or
rcr
nop
cs
pop
outsl
inc
xlat
cmp
fistpl
out
jl
push
xor
and
out
lahf
bound
icebp
dec
out
fwait
or
xchg
arpl
outsl
inc
imul
jge
iret
in
adc
inc
and
out
and
rorb
mov
lea
and
loop
pop
test
scas
inc
int
pop
mov
aam
daa
sbb
dec
out
pushf
xor
cs
or
dec
inc
sbb
rcll
icebp
or
jmp
out
mov
xor
stc
pop
push
push
jb
cs
decb
push
ret
out
sub
cmp
sbb
or
jmp
jbe
adc
je
lret
push
mov
jb
mov
push
push
add
repnz
out
in
push
cmp
sub
nop
adc
xor
cmp
dec
mov
fimull
stos
lret
sbb
and
xchg
pop
inc
es
out
and
in
pusha
stc
js
push
call
xchg
lret
rcl
lcall
sub
mov
xor
dec
addr16
pop
out
ss
or
or
jmp
dec
push
into
jecxz
adc
jmp
add
mov
out
jo
dec
push
inc
sahf
fstl
cmp
orl
insl
or
sbb
mov
jno
adc
imul
xlat
stos
out
popf
cmp
sub
pop
add
fwait
cmp
repnz
icebp
into
cmp
test
in
jb
mov
pop
into
mov
cli
out
and
dec
fsubs
into
xor
dec
fs
jb
clc
dec
sub
testb
out
xchg
cmp
fcmove
js
mov
test
mov
pop
dec
in
inc
in
sti
jp
out
aam
fs
ljmp
xchg
sub
mov
push
cs
jmp
add
fs
jo
adc
ljmp
push
rolb
dec
pop
out
gs
inc
imul
push
test
jno
xor
std
dec
xchg
mov
jb
out
jnp
jmp
sbb
cwtl
popa
out
loopne
and
add
or
push
pop
sub
jb
insl
sbb
ss
out
and
inc
in
cli
lret
xchg
adc
push
sub
stc
sbb
stc
es
push
cld
rcrb
insl
or
fldl
sbb
icebp
std
xor
push
les
mov
mov
lahf
sub
fs
or
ret
mov
sub
or
pop
adc
pop
or
sub
cld
sbb
fsubs
push
out
lret
push
pop
pop
arpl
pop
adc
adc
test
les
add
or
pop
stos
cmpsb
or
mov
out
lcall
imul
out
stos
lods
dec
fisttpll
push
adc
cbtw
mov
push
es
cwtl
clc
push
fsubrs
out
mov
aam
insb
jb
daa
les
jl
jae
insl
xor
scas
dec
push
pop
sbb
add
les
out
popf
inc
insb
outsl
mov
xor
mov
out
int
movsl
push
rclb
mov
mov
imul
xchg
jbe
adc
or
insl
adc
out
dec
sub
push
loop
mov
out
fstpl
mov
lcall
push
out
in
cs
pushf
arpl
mov
scas
jmp
in
stc
dec
ficompl
jnp
out
push
ds
in
mov
iret
outsl
jmp
push
xlat
pushf
jmp
jge
push
xor
lods
ss
push
out
cmp
sahf
stos
lods
pusha
lea
popf
xor
adc
insb
sub
or
adc
dec
cmp
fildll
lret
jns
inc
imul
jecxz
subb
sub
ret
rcr
push
pop
cs
add
pop
sbb
xor
push
cmpl
mov
out
fnsave
inc
xchg
jmp
mov
insl
inc
xor
lods
push
jmp
ds
imul
dec
pop
jo
fistpl
out
and
stos
and
int
mov
out
inc
arpl
fs
mov
sbb
dec
test
and
addb
aaa
imul
and
in
push
aad
jo
mov
cld
movsl
fdivrs
cmp
mov
mov
call
lahf
lret
push
inc
out
mov
fnstenv
sub
aaa
into
jnp
jbe
out
xor
fistps
pop
in
daa
out
in
xor
icebp
add
lods
insb
out
and
or
mov
fcmovbe
pop
push
sbb
lret
ret
add
dec
lods
shll
xlat
push
das
shufps
dec
sub
pop
dec
dec
cmpsl
js
add
xchg
lcall
push
imul
or
sub
loope
loopne
ss
mov
adc
pop
pop
clc
ja
cmp
pop
arpl
pop
std
mov
sbb
lods
mov
pop
pop
jmp
shlb
popf
aaa
test
scas
xchg
data16
lods
fisubrs
inc
dec
lahf
cld
xlat
cltd
jb
lods
lods
leave
outsl
inc
jmp
sbb
inc
sub
ret
jecxz
leave
stos
cmc
enter
adc
test
fstpl
pop
pop
out
iret
jb
pop
insb
pop
es
in
dec
aad
out
jae
pop
fs
inc
xchg
xor
sub
pop
inc
jne
ret
xchg
aas
dec
mov
popa
imul
cmp
fldt
mov
imul
xor
mov
out
neg
in
and
gs
dec
out
lds
aad
testl
mov
or
call
cli
adc
out
pop
adc
mov
ret
jb
lahf
into
pop
xor
push
out
jae
leave
out
push
arpl
insl
cmp
sbb
aad
mov
out
inc
jmp
je
outsl
mov
lea
dec
aam
inc
test
inc
jnp
ss
lea
dec
out
fisubrs
inc
jbe
in
sub
cmp
sub
push
pop
fsubs
popf
mov
cmc
or
adc
outsl
test
scas
cld
jo
mov
sahf
pop
push
jne
testl
mov
jne
andb
idivb
divb
shll
push
outsl
decl
cmc
add
js
test
imul
cmp
movsb
jne
adc
jg
mov
fwait
inc
div
or
add
xchg
stos
jo
mov
fs
push
repnz
lods
mov
out
mov
lock
xchg
std
mov
push
sti
divb
inc
int
outsl
jnp
sub
pop
lock
cmpl
and
cwtl
sub
xor
clc
leave
movsb
dec
cld
push
xor
outsl
popa
testb
shr
mov
lahf
sub
and
xchg
clc
test
dec
mov
movsl
and
adc
xchg
and
insb
jecxz
mov
xchg
arpl
icebp
sub
and
sbb
shll
js
mov
pushl
nop
mov
cmpsl
cmp
icebp
in
lea
and
sbb
or
clc
jg
pop
sub
mov
dec
mov
int
sub
imull
and
out
pop
pop
jo
cmpsl
ljmp
shl
adc
sahf
icebp
pop
movsb
test
push
and
clc
xor
pop
daa
outsl
stos
test
sub
dec
ss
jns
jp
add
cmpsl
stos
xchg
pcmpgtd
aaa
adcl
clc
add
rcll
xchg
test
mov
sahf
je
and
fucomi
mov
jns
adc
xor
xchg
ret
movsl
repnz
add
loopne
or
stc
shl
fimull
push
pop
adc
push
je
pusha
mov
add
push
out
cli
mov
mov
outsl
hlt
hlt
mov
cli
sub
loope
jae
adc
icebp
das
sahf
pop
and
icebp
insb
dec
sbb
fdivl
js
je
jbe
mov
cmpsb
and
mov
sub
cmpsb
dec
testl
adc
mov
inc
fcoml
lahf
out
outsb
pop
cli
jo
test
cmpsb
mov
test
dec
leave
test
sub
test
stos
pop
stos
xchg
cld
pop
into
and
test
decb
add
dec
push
mov
or
adc
and
pop
sbb
xchg
cwtl
stos
and
and
or
mov
cmpsb
and
enter
sbb
mov
mov
add
sub
lret
rorl
xor
add
mov
es
imul
inc
outsl
mov
xchg
adc
sub
sub
lcall
mov
movsl
add
movsl
or
add
cmp
cmp
in
ret
and
int
out
iret
mov
xor
pop
in
imulb
jmp
or
xchg
or
inc
mov
and
test
mov
sub
and
add
sub
ja
sub
mov
in
lea
xchg
rorb
mov
cld
out
xchg
lcall
les
pushf
push
sti
xchg
or
xchg
xchg
jne
jg
shlb
or
jle
mov
enter
push
ss
jle
enter
mov
cmpsl
sub
and
loope
insl
add
jmp
jbe
mov
jecxz
std
mov
pop
pop
jle,pt
adc
clc
lcall
jns
test
sbb
sbb
clc
adc
test
lea
or
and
lds
pop
jge
xor
fs
nop
jae
outsb
shlb
mov
add
hlt
jmp
sahf
or
loopne
popf
or
or
or
incl
stos
cld
test
lret
lea
inc
inc
scas
test
mov
and
sub
xor
xor
and
push
inc
test
popa
lea
in
cmpsl
clc
das
gs
mov
adc
mov
sbb
pop
sbbb
sub
sbb
mov
in
and
repz
push
mov
mov
jg
add
or
inc
sti
outsl
inc
jle
fs
inc
movsl
dec
shrl
movsl
stc
inc
lret
mov
gs
outsl
mov
jmp
imul
mov
sti
incl
shll
jb
icebp
jno
lock
repz
int
jmp
imul
xchg
out
jecxz
jl
sbb
xchg
insw
icebp
xlat
cmp
insl
inc
imul
mov
jg
data16
fdiv
pop
clc
ja
pop
stc
pop
sub
jp
daa
das
cli
lahf
aaa
out
add
aas
inc
out
mov
push
or
pop
sbb
mov
cwtl
sub
adc
outsb
into
push
sti
out
iret
xlat
mov
mov
inc
dec
push
pop
pusha
add
mov
mov
pop
scas
cs
sub
dec
sub
test
in
pop
insb
and
in
pop
and
and
insb
and
in
pop
and
leave
and
ja
add
sub
push
push
and
imull
fnsave
js
into
cli
xchg
clc
out
daa
repnz
das
add
jns
outsl
aas
lahf
stc
or
orb
jp
scas
mov
nop
addr16
jnp
mov
mov
xor
xchg
test
sbb
jno
cltd
or
add
stc
mov
add
adcb
mov
fwait
out
into
xchg
lcall
lret
loop
or
adc
and
xor
inc
dec
out
push
pop
arpl
mov
mov
ret
lret
rcr
push
jecxz
stc
fiadds
or
out
pop
sbb
jb
cmp
mov
in
mov
mov
push
or
insb
rcrb
std
scas
loope
mov
dec
gs
scas
mov
cmc
lcall
les
mov
xor
insb
push
scas
lret
cmp
xchg
daa
jns
mov
stos
or
bound
pusha
in
or
gs
inc
dec
adc
xchg
insl
lahf
fs
out
inc
cmpsb
dec
icebp
sbb
or
out
jge
loope
mov
mov
sbbb
mov
jmp
xchg
sub
sub
lods
cmp
or
mov
out
mov
in
sub
or
sbb
stos
add
pop
int
and
pop
mov
out
xor
fists
and
xor
dec
adc
cmc
xchg
and
push
cmpsb
mov
loop
sbb
sbbl
pop
cwtl
scas
or
jb
decl
fsts
scas
dec
inc
jb
out
jl
add
popf
out
mov
aaa
mov
inc
out
loop
xor
jns
pusha
into
imul
gs
push
in
mov
sub
mov
sbb
jb
cltd
fcomp
sub
and
shlb
addr16
xor
push
lods
sbb
repz
out
stc
or
push
loopne
out
es
pmulhuw
add
and
push
xchg
or
fsubrs
jnp
jae
shll
cmpsb
popf
out
scas
push
out
popa
jmp
pop
pop
xor
cmpsb
rcr
sbb
out
out
sub
jne
lcall
lret
cmpsl
bound
out
push
lret
and
fwait
out
pop
cli
js
mov
mov
mov
jne
loop
pop
loope
xor
xchg
shll
xor
or
mov
jo
and
push
mov
pop
mov
pushf
mov
das
add
stc
dec
in
dec
and
loope
out
mov
mov
aas
out
outsl
shrl
jmp
sbb
cmp
out
inc
mov
sbb
push
and
loopne
sahf
cmp
sub
pop
adc
ret
mov
fdivrs
cmpl
and
rcll
push
mov
repnz
add
cmp
fsub
jno
and
mov
sub
mov
fiadds
jecxz
jo
pop
jo
popa
xchg
ret
ret
pusha
out
mov
nop
inc
inc
shll
adc
push
xor
out
pushf
sub
dec
loope
sbb
pop
jmp
sahf
mov
sbb
in
aad
shlb
mov
scas
mov
mov
xchg
add
and
aam
jno
mov
incl
or
loopne
inc
jo
mov
ljmp
pusha
les
fwait
cwtl
cmc
mov
ss
lods
xchg
out
mov
and
scas
stc
add
out
cmp
push
sub
pop
pop
pop
add
jge
xchg
jo
sbb
dec
inc
out
das
cld
insb
push
test
loope
call
je
mov
and
xor
loopne
jmp
push
and
aas
pop
ds
inc
out
jge
pop
sbb
out
test
lock
lods
pushf
fsubl
mov
cmp
sarl
push
out
jo
push
ljmp
out
out
testl
outsl
aam
sub
push
es
sbb
pop
dec
in
fdecstp
out
mov
lea
loop
sub
jno
push
cmp
scas
xor
push
sbb
mov
gs
out
and
cmpb
or
fidivs
out
lds
xchg
scas
add
out
loopne
cmp
aam
mov
push
and
data16
xchg
push
out
orl
jbe
sbb
int
mov
out
inc
fidivrl
mov
cmp
dec
leave
inc
imul
rolb
out
std
cmp
imul
out
mov
dec
ss
stc
fadds
cltd
in
dec
jo
jnp
inc
and
xchg
add
cmp
xchg
fucomp
out
arpl
dec
jb
stos
sub
setbe
or
push
dec
sbb
mov
inc
ss
inc
sbb
je
push
lock
scas
sbb
adc
pop
dec
mov
sub
out
mov
dec
jmp
out
add
out
out
mov
adc
jle
cltd
mov
lods
push
push
test
out
jl
jbe
fisubrs
mov
iret
pop
out
ljmp
mov
std
dec
jge
movsl
jecxz
pushf
sub
outsl
pop
jp
mov
ret
repnz
jo
sbb
inc
sub
sbb
jo
leave
and
out
mov
jb
test
stos
and
daa
or
adc
dec
cli
cmpsb
push
iret
jle
adc
stc
mov
jbe
sbb
mov
stc
out
mov
test
pusha
fcompl
fisttps
repz
in
adc
ds
pop
int
push
out
add
aas
mov
loope
jbe
lret
pop
lret
jmp
pop
jbe
stos
ret
arpl
pusha
xchg
lods
inc
mov
adc
icebp
mov
fisubrs
add
dec
push
test
or
xor
lock
out
in
pop
and
sbb
gs
out
adc
pop
xchg
pusha
jmp
icebp
ret
dec
loopne
jno
sub
xor
out
test
inc
mov
out
loopne
scas
sbb
mov
jle
int3
jmp
sub
or
out
inc
cs
jp
jmp
in
js
mov
jbe
lods
mov
and
out
mov
ss
adc
inc
or
mov
movsb
adc
into
mov
push
cmpsl
in
into
and
outsl
xor
jno
cmp
push
jmp
ss
out
decb
inc
sub
push
adc
rolb
sub
icebp
push
pmaxsw
insb
or
dec
out
xor
cmpsb
jno
mov
movsl
inc
into
inc
push
aam
adc
test
sbb
popa
rcrl
cmc
scas
pop
call
dec
xor
adc
in
lret
mov
out
gs
sbb
jb
dec
add
inc
jb
cmpsl
pop
ret
lahf
mov
int3
add
mov
in
sub
or
pusha
out
mov
pop
pop
push
out
add
cmp
fstps
in
mov
jb
sub
stos
test
sbb
push
rclb
sbb
sub
pop
icebp
jmp
fs
jbe
out
add
mov
mov
add
mov
inc
jb
loope
mov
adc
aam
es
stos
into
xchg
les
cmc
pop
out
or
cs
mov
std
aaa
cmp
lods
out
adc
orb
inc
or
out
jmp
out
lret
ret
jnp,pt
leave
jns
jb
rcll
sbb
in
xchg
sub
adc
sbb
cmpsb
dec
out
mov
dec
dec
jo
fsubrl
xor
jl
cmp
sbbb
push
dec
or
loope
into
leave
sub
or
mov
xor
pop
scas
xor
into
les
mov
mov
addr16
dec
jp
jbe
cmpl
outsl
rcr
push
xlat
rclb
aaa
lret
ficoml
jbe
movsb
pop
or
out
push
push
or
cmp
jmp
or
arpl
ret
cld
adc
sbb
and
push
cmc
xchg
adc
cmpsl
mov
out
pusha
jl
pop
popf
xor
iret
mov
out
xor
sahf
addr16
or
xlat
pushw
pushf
mov
out
cmp
jecxz
or
dec
scas
cmp
int3
loope
inc
fucomi
insb
mov
pop
xchg
and
lods
ss
out
mov
aas
das
fsubr
dec
mov
lock
ja
pop
fcmovu
out
out
dec
push
sarl
in
jecxz
outsl
xchg
dec
in
cmp
out
fwait
xchg
ja
hlt
push
movsl
js
psubd
adc
mov
jge
out
aam
add
imul
cmc
xchg
ss
vpaddd
imul
repnz
nop
aam
pop
jge
mov
or
insb
lahf
xchg
mov
push
fcmovb
sbb
jmp
lret
shlb
out
lods
test
add
out
pusha
inc
fistpl
clc
sub
out
lock
ret
mov
stc
hlt
aaa
aad
imul
out
mov
lret
add
jne
out
es
addr16
out
icebp
mov
xchg
xchg
jns
mov
push
sbb
insb
cmp
gs
dec
push
int3
add
std
incb
jno
sub
out
and
xchg
adc
js
popf
out
or
cmpsl
sbb
test
notl
or
out
mov
sbb
push
sahf
sbb
push
sbb
cmp
out
cmp
out
int3
sahf
mov
ret
stos
and
dec
mov
xchg
push
inc
stc
fucomp
xlat
cmpsl
in
sbb
outsl
pop
pusha
xor
imul
adc
out
sbb
mov
fs
imul
push
add
out
insb
adc
xchg
sbb
popf
nop
jg
xchg
movhps
add
pop
add
lret
and
out
imul
jg
dec
sbb
arpl
sub
stos
jae
cmp
xchg
inc
out
sbb
and
rcl
enter
mov
xor
jmp
sbb
inc
fsubr
or
mov
pop
mov
mov
jns
lea
xor
push
fstpl
int
sub
imul
sbb
jno
leave
push
jns
ret
mov
xor
out
mov
divps
out
xchg
gs
das
add
out
lcall
or
cmp
frstor
negl
push
out
sahf
sbb
out
push
xchg
loope
in
mov
iret
sub
shlb
xlat
out
movsb
pushf
inc
sub
daa
xchg
out
addb
aaa
inc
ret
rcrb
gs
jecxz
push
data16
imul
out
sti
iret
mov
inc
loope
test
shl
xor
cmpsl
jl
xchg
push
arpl
scas
sub
jp
sub
out
inc
pop
adc
imull
push
sbb
inc
cmp
cltd
sbb
cmpb
or
sbb
mov
xchg
fldl2e
jle
out
cmpsl
or
sbb
pop
dec
jb
mov
aad
pop
sub
loope
push
mov
add
in
push
cltd
out
pop
mov
mov
cmc
mov
out
push
leave
push
push
mov
outsl
pop
adc
mov
loopne
adc
out
pop
mov
xchg
mov
nopl
mov
test
clc
out
inc
data16
in
sti
scas
dec
jg
sub
test
pusha
lret
mov
cltd
dec
sbb
lds
fsubp
dec
daa
adc
imul
pop
push
std
xor
mov
sbb
sahf
cltd
sbb
out
inc
shll
jbe
idivb
fwait
sti
xchg
mov
xchg
test
mov
out
cltd
in
pop
lret
pop
pop
dec
and
xchg
pop
cmp
mov
cmp
and
scas
stos
cwtl
imul
pop
sub
push
in
jle
dec
sub
aaa
call
sub
and
jg
out
mov
mov
sub
pop
jle
sbb
adc
in
jle
stos
pushf
into
adc
or
jecxz
cltd
push
sbb
jp
mov
fcomps
into
cmp
cs
ficoml
sub
out
cwtl
fdivrl
hlt
outsl
adc
sub
mov
jecxz
arpl
dec
lahf
xor
jb
or
adc
loope
mov
cmp
push
adc
dec
mov
add
outsl
add
mov
mov
mov
fwait
sub
aaa
es
lock
push
lret
xchg
outsl
ret
aas
lea
push
jge
fs
push
cmp
data16
out
rol
ret
test
xor
lret
adc
sti
mov
scas
or
scas
jo
mov
mov
push
dec
ficompl
and
je
out
js
mov
pop
push
cmpl
push
sarb
not
mov
push
cwtl
mov
addr16
and
add
out
or
aaa
dec
mov
sahf
leave
mov
mov
push
test
jg
lock
into
cmp
sbbb
ja
out
pop
and
cmc
push
outsl
mov
pusha
call
icebp
lods
push
jo
jge
and
fmulp
mov
gs
mov
add
repnz
adc
or
inc
loopne
into
popf
mov
out
xchg
add
or
cmpsl
fimuls
mov
sahf
push
fdivr
repz
aam
jmp
push
fistpl
pop
out
ja
stos
sub
mov
mov
in
sub
jmp
pop
movsb
scas
fstps
sbb
out
daa
mov
mov
push
out
pop
sub
dec
imul
ret
aam
mov
out
sbb
repnz
xor
push
call
adc
mov
pop
dec
mov
pop
and
out
sub
mov
rolb
sub
sub
push
clc
in
jae
xchg
jb
inc
xchg
lea
fucomip
mov
enter
clc
ja
mov
dec
sub
add
sub
into
imul
subl
out
cwtl
mov
mov
adc
fwait
pop
push
cmp
in
bound
mov
mov
test
imul
repz
movsb
and
divb
jbe
mov
lret
movsl
cmp
or
pop
mov
ja
push
or
dec
push
out
lods
in
fnstsw
stc
loope
out
adcb
add
pop
fwait
out
mov
test
in
hlt
cwtl
out
call
adc
test
pop
sbb
out
sub
daa
int
pop
icebp
aaa
out
mov
xchg
jmp
jl
mov
addr16
gs
mov
mov
jbe
xchg
out
sahf
cmovae
repnz
stos
add
mov
xor
cmp
es
enter
sbb
out
fwait
cs
pop
cmp
int3
faddl
sbb
sbb
cltd
rcrb
jbe
jne
push
jmp
push
gs
fcomps
add
sbb
pop
out
out
fadd
mov
xor
or
add
jp
popf
push
out
push
inc
shlb
cmpsl
pop
xchg
in
adc
mov
inc
gs
in
lret
mov
xchg
adc
shlb
push
jmp
out
mov
xchg
jle
out
pop
repnz
das
xor
sub
and
imul
aam
push
lahf
and
cmp
cwtl
mov
adc
adc
es
inc
cmp
leave
popa
mov
icebp
fidivl
outsl
mov
out
mov
pop
sub
mov
jbe
jbe
pusha
out
xchg
and
inc
push
sub
push
scas
aam
ret
out
pushf
cmp
dec
stc
std
loopne
test
mov
out
test
mov
or
mov
add
icebp
test
out
or
lods
lret
xchg
fstl
mov
mov
in
jmp
xchg
or
imul
sub
out
cmp
shr
popa
and
pop
xchg
lret
pop
lea
mov
out
std
pop
notl
das
xchg
adc
les
popa
inc
sbb
hlt
sub
insb
and
ljmp
mov
enter
loop
scas
lea
pop
jo
or
in
out
add
gs
mov
int
mov
add
and
out
xchg
inc
mov
xor
imul
in
push
cld
push
loop
outsl
loope
sub
inc
jmp
stos
sub
cmp
mov
shll
clc
push
incb
dec
and
add
aam
test
cmp
mulb
in
call
dec
lods
jbe
movsl
inc
dec
cmp
xchg
out
mov
pop
add
pop
push
mov
call
jmp
sub
mov
jbe
add
insb
cmc
push
out
ror
fildll
mov
aad
or
out
adc
sub
testb
mov
movsl
add
clc
xor
das
fcoms
sub
add
les
jmp
outsl
adc
ljmp
popl
aas
jb
enter
jecxz
out
gs
inc
cmp
out
jle
push
adc
lahf
arpl
subb
fwait
mov
jo
out
jecxz
pop
xchg
out
data16
inc
mov
push
notl
mov
add
push
fadds
pop
mov
jo
dec
mov
out
fprem1
sub
clc
sahf
or
push
out
test
adc
push
sbb
mov
push
int3
es
cmp
sahf
daa
enter
mov
stos
aam
xchg
pushf
xchg
sub
les
out
jo
scas
lret
lcall
add
mov
mov
out
and
pop
shl
cmpsb
xchg
mov
arpl
shll
mov
dec
out
out
and
sysexit
cmp
xor
xchg
mov
repnz
pusha
lret
jne
outsl
dec
and
mov
mov
cmpsl
cs
test
movsl
daa
mov
jge
mov
mov
pop
mov
inc
cmpsb
ljmp
cmc
or
aam
lret
mov
ret
xor
mov
add
out
stc
fmull
out
fwait
aad
and
xchg
outsl
push
arpl
lea
pop
imulb
mov
sub
jns
or
data16
int3
cltd
pop
ss
mov
rcll
stos
jecxz
out
mov
add
jecxz
sub
mov
stos
mov
ficompl
outsl
cs
and
mov
jb
ror
sahf
enter
test
loope
pop
hlt
pop
out
pop
insl
add
test
pop
mov
in
push
out
and
cmpsl
js
xchg
adc
std
mov
sbb
or
outsl
sarb
movsl
cs
sub
bound
ds
mov
adc
xor
xorb
cs
xchg
test
or
imul
push
aam
popa
xchg
pop
sbb
ss
mov
push
xchg
lds
adc
or
out
dec
cmp
imul
in
aad
or
test
mov
sub
cs
push
ja
xor
xor
or
hlt
es
inc
fsubrl
std
mov
and
pop
push
xchg
cld
rcr
stos
mov
sti
ret
mov
push
push
cs
jg
jbe
fidivrl
mov
push
fs
out
lea
dec
aaa
xchg
cmp
cltd
out
jl
movb
jno
push
sub
das
fidivl
push
outsl
add
push
repz
fwait
jmp
xor
mov
adc
mov
cmpb
jmp
and
test
data16
jle
jno
inc
repz
push
add
mov
aam
jbe
inc
pop
cmp
mov
shll
pop
cmp
sub
sub
and
popf
jae
outsl
into
or
imul
inc
add
or
push
les
es
cmpsb
rorb
imul
push
dec
pop
loop
xor
fiadds
out
xorb
and
add
call
out
dec
leave
in
int
jns
or
and
jnp
test
or
inc
jb
mov
dec
cmp
test
dec
repnz
dec
hlt
and
cs
insl
das
sbb
pop
and
xchg
fnstsw
mov
out
jbe
in
push
push
pop
mov
je
cli
pop
out
scas
dec
adc
add
js
stc
inc
mov
dec
jne
pop
out
pop
xor
shll
out
cld
daa
rorb
loopne
mov
mov
pop
test
fcompl
jbe
pop
mov
scas
das
xor
mov
data16
mov
inc
out
jbe
add
fucomi
test
add
push
ss
dec
fs
pop
or
sbb
outsl
jmp
push
xchg
aad
out
lahf
add
pop
out
jmp
dec
dec
jbe
cmc
xchg
push
stc
jbe
sahf
pop
arpl
std
out
shll
lock
je
mov
xchg
or
out
bound
push
leave
cli
rolb
scas
rclb
push
adc
pop
arpl
pusha
push
out
dec
repnz
les
adc
mov
out
shll
push
sti
inc
inc
xchg
test
or
xor
imul
addr16
pop
ret
out
into
daa
push
insb
cli
pop
aas
out
mov
or
mov
aam
dec
stos
cltd
cld
lds
jo
cmp
jg
push
pop
andl
or
lret
dec
out
movsl
jle
movsb
mov
dec
xor
mov
out
adc
push
pop
test
fistl
stos
or
inc
mov
out
mov
aad
hlt
sub
sub
cmc
mov
xchg
mov
rolb
lea
aam
repnz
lcall
fs
push
pop
jo
pop
popf
fisttpl
loope
lods
fmull
push
shrl
dec
xchg
sub
js
sbb
jecxz
aas
ds
adc
mov
imul
sarb
loope
xor
out
push
movsb
data16
or
add
jbe
dec
adc
sbb
sub
andb
sahf
ja
add
and
in
push
cltd
in
jno
daa
dec
out
movsb
jmp
or
pop
push
xlat
jo
pop
subb
mov
addr16
and
mov
lcall
out
arpl
push
ss
mov
inc
out
push
stc
add
aad
and
pop
sbb
in
and
ss
mov
stos
and
ja
dec
jg
cmpsb
jae
jbe
insb
js
mov
or
ljmp
push
mov
add
out
mov
jp
mov
leave
push
stc
push
dec
in
imul
int3
sbb
andb
cwtl
mov
aas
js
xor
std
insb
shrl
out
push
dec
cld
imul
and
adc
fldl2e
clc
in
out
mov
jns
xchg
jo
loop
xor
jl
mov
test
icebp
arpl
aaa
pop
sub
es
mov
jb
call
xor
and
xchg
lds
or
xchg
inc
jg
out
lret
sbb
shrl
jbe
jmp
iret
mov
mov
mov
mov
xchg
mov
mov
out
scas
or
rorb
ljmp
jmp
aaa
sub
adcl
mov
lock
adc
sbb
jns
subb
out
pop
dec
mov
cmp
push
sub
add
push
xchg
sub
push
and
out
fmull
les
out
rcrl
fadd
push
insl
out
ret
stos
adc
cmc
jns
movl
xchg
add
stos
sti
fcos
leave
jno
sub
xor
loopne
decb
inc
sarb
out
mov
fstpl
movsl
test
lds
inc
push
aaa
mov
adc
outsl
xchg
sahf
mov
loop
cltd
jo
in
inc
lea
cmpsl
sahf
in
out
out
bndstx
mov
mov
adc
outsl
in
cmpsb
xor
out
jmp
fwait
ret
shr
pop
xchg
cmc
int3
mov
sahf
adc
lcall
jmp
push
movsb
dec
out
data16
mov
adc
or
pop
xchg
mulb
outsl
sbb
dec
dec
sub
xor
xchg
inc
sbb
dec
adc
out
jg
repnz
fwait
dec
out
imul
mov
fisubrs
sbb
stos
in
shl
dec
mov
out
pop
repnz
stos
call
shlb
jecxz
cmp
ja
mov
and
mov
xchg
filds
push
jmp
pop
dec
scas
pop
into
sub
fsubr
mov
adc
out
mov
inc
or
and
inc
push
loop
adc
or
dec
popf
push
out
cmpsb
in
out
icebp
add
adc
xor
push
insb
lcall
andl
adc
loopne
sub
adc
enter
popf
test
add
out
loope
fnsave
hlt
jp
outsl
push
mov
out
adc
xor
cmp
rcll
pushf
push
or
jb
enter
fidivs
loopne
out
push
dec
and
mov
lcall
minps
jb
sub
stos
in
clc
jo
cmp
push
mov
into
pop
orl
cmp
jge
pushl
out
adc
sbb
push
cli
stc
dec
cltd
mov
sub
xchg
int
push
sub
test
in
sub
cltd
add
das
cmp
mov
in
dec
enter
push
std
cmp
out
out
pandn
inc
inc
mov
push
fmull
movsl
test
push
and
adc
adc
addb
js
nop
xlat
push
inc
ret
out
aas
inc
cmpl
cmp
sbb
sub
dec
scas
cmp
mov
cltd
scas
dec
jmp
pop
inc
sub
lahf
lods
fnsave
cld
cmpsl
fcom
mov
ficomps
sbb
xchg
xor
add
lock
mov
stos
cld
adc
mov
cmpsb
push
jo
mov
into
push
pop
inc
out
mov
dec
dec
mov
jns
mov
and
mov
mov
and
leave
jecxz
and
mov
addl
mov
dec
lea
sub
jbe
in
pop
sbb
in
mov
dec
push
cmpsb
fs
out
sbb
fwait
push
std
pop
into
fld
inc
jbe
outsl
xor
mov
cld
jno
xor
rorb
mov
jae
out
out
aad
insb
out
je
mov
push
sbb
inc
outsl
sub
pop
fsubl
in
lods
jo
emms
ljmp
mov
outsl
pop
sub
sahf
out
or
sbb
inc
loope
adc
pop
push
test
jb
int3
pop
push
push
or
xor
shll
push
inc
out
mov
and
repnz
adc
mov
xor
clc
out
pop
cwtl
jl
mov
js
test
aaa
das
mov
out
add
jae
jnp
cmpsb
and
inc
xor
or
call
jmp
loopne
in
out
xor
and
jle
movsl
mov
fmulp
pusha
adc
xor
xchg
ss
shl
out
fucomi
insl
pop
lcall
jl
rcr
add
inc
push
out
mov
sbb
mov
jns
xchg
adc
mov
aaa
gs
push
movsl
cli
mov
pushf
cs
pop
je
bound
xchg
test
mov
cltd
out
lods
inc
fwait
sub
push
pushw
xchg
fildll
xor
mov
movsb
cmp
mov
adc
ss
sarl
stos
sub
clc
out
and
andb
add
adc
push
jge
out
push
data16
test
pop
sbb
sti
mov
stos
imul
je
int
push
cmp
insl
dec
fwait
out
sbb
push
hlt
out
or
adc
sbb
jecxz
shlb
jmp
xchg
in
std
inc
arpl
sbb
ss
lret
bound
cltd
xchg
pop
mov
out
dec
lds
cmp
xchg
test
insb
inc
inc
xchg
gs
cmc
mov
stos
jge
mov
and
out
dec
sbb
or
cmp
pusha
jb
push
mov
loop
out
lds
push
cmc
daa
dec
out
dec
fildl
add
jo
inc
mov
fwait
jle
jle
insb
out
shl
ret
call
pop
sbb
stc
sub
pop
call
add
jp
mov
cmpsb
mov
daa
mov
and
les
mov
or
punpckhbw
mov
daa
test
test
stc
negl
jmp
out
in
pop
jecxz
fs
mov
insl
xchg
xor
cmp
pop
outsb
push
mov
push
out
adc
push
push
xchg
out
dec
sbb
mov
cs
or
cli
add
out
stos
rorl
dec
aaa
mov
jno
stc
add
loop
sar
leave
int
std
lret
jnp
sbb
jmp
test
jg
add
in
frstor
and
fldenv
dec
scas
jmp
dec
xlat
fistps
mov
out
xchg
rol
lret
test
mov
enter
out
pop
xor
jo
lods
cmp
lea
pop
sbb
iret
gs
test
stc
or
pop
push
add
movl
push
mov
fwait
inc
push
xor
popa
or
inc
in
jle
xor
pop
loopne
mov
jb
out
cmp
int3
sbb
and
xor
ret
mov
push
imul
pop
cmp
xchg
int3
pushf
jnp
out
mov
ffree
es
jbe
mov
jne
mov
fidivrs
rcrb
out
mov
icebp
in
insb
das
or
jno
push
gs
mov
je
jae
out
ja
adc
aad
insl
hlt
mov
sub
xor
add
add
and
cmpsl
outsl
aam
cmc
dec
mov
out
loope
scas
xor
icebp
xor
out
xor
rcll
mov
repz
cwtl
daa
je
inc
jo
mov
subl
cltd
pop
xchg
inc
jbe
arpl
dec
out
and
pop
add
jne
dec
lock
inc
popa
outsl
jle
pop
cmp
or
out
or
push
mov
cmp
adc
outsl
adc
add
je
out
test
mov
out
out
idivl
sahf
dec
cmpsb
fmulp
test
out
xchg
stos
scas
repnz
jle
cmc
out
xor
push
cmp
movsl
mov
and
mov
sub
adc
packssdw
sbb
cmp
out
movsb
mov
shlb
mov
mov
fdivr
lcall
jnp
test
imul
test
jno
ss
fisttpll
fisubl
lods
jmp
popa
sub
inc
pop
cmp
sbb
iret
pop
xor
addl
dec
and
adc
je
xchg
mov
stos
xchg
push
cs
pop
mov
sub
mov
cmp
sbb
mov
adc
fsubrp
out
adc
test
out
data16
sbb
or
daa
out
or
dec
mov
push
out
test
adc
sahf
cli
inc
jb
cmp
or
mov
aas
cld
imulb
sub
or
sbb
xor
and
sbb
pop
out
scas
adc
push
pushf
push
leave
jbe
pop
cld
mov
sarl
ljmp
lods
sti
mov
daa
mov
clc
or
mov
outsl
in
xor
loopne
out
sub
jg
xchg
dec
mov
push
insb
or
sub
and
dec
xchg
out
or
mov
mov
mov
pop
push
add
jle
xchg
aaa
into
out
out
sbb
out
iret
movsl
cmp
out
add
andl
mov
out
shlb
jp
js
out
fucom
fcompl
or
xorb
lods
jns
mov
mov
sub
mov
and
daa
lea
push
push
aas
push
leave
imul
jo
add
adcb
jno
ret
and
cmpsb
or
xlat
in
sub
and
rol
mov
push
popl
data16
or
outsl
fcoms
insl
dec
out
mov
push
dec
add
cmpl
jp
leave
lds
out
fs
test
xorb
mov
add
inc
cmp
cmp
xchg
cmpsl
push
stc
clc
loop
outsl
jne
cs
rcr
sub
inc
jb
ror
add
xchg
out
push
push
push
push
aam
and
inc
add
xlat
push
movsb
cltd
mov
mov
cmpsl
inc
inc
jle
jbe
xchg
in
test
xor
add
fsubp
and
mov
jp
aam
cli
pop
out
imul
lcall
movsl
movsb
mov
test
xor
stos
shrb
inc
out
cmpl
inc
dec
inc
ljmp
in
or
push
or
rep
push
fs
pop
jmp
adc
sub
out
rcrb
push
aad
clc
inc
jb
pop
dec
pop
pop
movb
sbb
mov
outsl
shll
cmpsl
cs
outsl
scas
adc
int3
ljmp
iret
pop
scas
mov
out
mov
mov
stos
lods
insl
sbb
pop
add
lcall
dec
lods
jg
jae
xlat
fs
stos
mov
out
dec
inc
and
push
out
inc
jb
call
adc
hlt
test
jns,pn
xchg
cwtl
cmp
out
ja
call
in
jb
gs
inc
out
adc
xlat
js
shrb
add
push
mov
xchg
das
fadds
lret
sub
xor
gs
xor
mov
mov
jb
stos
xor
mov
xlat
out
out
aas
push
push
popa
leave
out
in
push
js
cmc
xchg
sbb
jo
sbb
jo
clc
ljmp
icebp
xlat
movsl
out
xor
pop
in
fisttpl
stos
add
imul
mov
mov
out
arpl
sub
stos
sub
test
push
push
adc
sbb
sub
js
pop
prefetch
aam
out
and
push
jne
bnd
adc
xchg
mov
jo
fwait
out
in
aas
mov
mov
fsubrs
data16
pop
aam
or
out
stos
mov
and
out
or
daa
jno
cli
call
lds
sub
pop
fistpl
or
loope
jb
dec
dec
push
sbb
out
fstpl
and
push
rclb
lahf
jecxz
xchg
pop
dec
or
inc
iret
and
jg
jmp
cmp
jne
out
pop
test
test
or
fsubr
add
movsl
jb
xchg
mov
clc
xchg
insb
rcll
aam
fs
sbb
ret
sbb
inc
adc
lods
arpl
sub
xor
push
out
sbb
adc
cltd
jo
push
in
popf
loop
sub
out
stos
jecxz
mov
sub
inc
test
dec
pop
push
lea
xchg
andb
push
out
sub
push
daa
mov
adc
out
and
jne
sub
inc
mov
pop
outsl
mov
test
push
movsl
dec
fisubl
and
adc
cmp
mov
jb
dec
jmp
repnz
pushf
mov
mov
into
pop
xchg
int3
iret
es
inc
insb
fldt
add
aam
pop
lea
jb
sub
hlt
or
mov
dec
ja
scas
mov
out
and
loopne
fsubr
or
pop
negl
inc
outsl
and
daa
mov
fdivl
arpl
fmuls
lahf
xchg
xchg
out
and
inc
pop
mov
xor
push
mov
mov
xchg
add
jo
cmp
mov
divb
mov
sti
jle
pop
scas
lea
jg
and
xor
stos
fcompl
movsb
scas
mov
inc
into
add
mov
gs
lret
or
cli
imul
aam
mov
mov
aaa
notb
out
movsl
popf
dec
int3
mov
push
sbb
out
hlt
arpl
push
shlb
pop
jo
inc
mov
cmpsl
out
dec
pop
test
sub
nop
push
stc
xor
repz
scas
cltd
mov
cmc
mov
push
arpl
mov
jnp
outsl
into
and
fdivrl
out
rcrl
movsl
cld
mov
cmc
mov
ds
adc
out
rcll
mov
stos
pop
out
imulb
fimull
loope
out
jb
adc
out
jbe
jp
in
fwait
jecxz
jbe
adc
dec
insb
inc
pop
out
rcll
jnp
pop
mov
out
lods
push
mov
xor
pop
cld
push
jg
inc
fldcw
cmp
insb
ss
out
imul
add
test
mov
jl
sbb
ret
out
push
in
std
xchg
sub
pushf
lret
js
bound
out
xchg
fistpl
inc
mov
cmp
out
xor
or
enter
lret
mov
ret
pop
add
cltd
mov
push
out
pop
mov
sbb
inc
jge
xchg
fdivs
pop
aaa
aam
out
cli
cmp
jno
xchg
sub
sbb
inc
out
cwtl
movsb
fstpl
out
bound
in
out
adc
pop
or
test
sub
call
test
fwait
sbb
fidivrs
cmc
inc
sub
pushf
cmpsb
mov
in
arpl
out
ja
dec
mov
sbb
push
stos
popa
decb
test
in
out
fcmovnbe
data16
dec
mov
push
jge
adc
addr16
popl
xor
lcall
loop
stos
fbstp
out
repnz
jmp
stos
leave
out
adc
xorb
xchg
out
enter
cs
cmp
aaa
and
std
push
mov
jns
xchg
add
stos
pop
sbb
jo
call
into
ljmp
data16
push
cld
or
pushf
inc
cltd
out
pop
pop
or
loop
iret
gs
push
mov
mov
jnp
and
shr
jle
push
mov
stos
sub
mov
hlt
out
mov
dec
sub
xor
lret
test
test
out
adc
inc
je
mov
mov
ret
ds
mov
push
enter
outsl
xlat
push
cmpsl
fisttpl
divl
pusha
imul
xor
scas
push
push
sbb
cmp
lea
or
jmp
add
outsl
mov
pop
pop
push
nop
push
into
push
std
ret
add
xor
fimuls
mov
lods
out
dec
mov
ss
push
mov
push
test
mov
push
inc
push
sahf
test
mov
mov
dec
dec
xchg
sti
cmc
out
stos
pop
out
fcoms
xlat
pop
call
xchg
into
dec
ja
mov
pop
dec
adc
lea
sahf
add
daa
inc
out
aaa
fsts
jae
int3
cltd
lods
xchg
loopne
out
push
adc
sub
lcall
fucomip
dec
sbb
outsl
into
push
out
cs
loop
sbb
int
in
in
popa
aam
mov
jge
pop
int3
out
clc
mov
dec
jb
cmpsl
shr
pop
shlb
or
mov
ss
rcrl
loopne
mov
mov
out
mov
inc
imul
mov
cmp
mov
pop
scas
bound
jecxz
jmp
mov
outsl
iret
add
inc
sarb
imul
out
mov
xor
adc
push
cltd
pop
sub
add
clc
mov
ljmp
push
jo
repnz
and
cmp
shl
jae
sub
in
dec
push
popf
je
cmp
jno
cmovg
fsubrs
aam
std
fsubl
jne
jmp
mov
fisubrs
inc
jnp
jmp
mov
push
out
push
dec
stos
jl,pt
int3
or
pop
sbb
and
out
jg
cmp
out
movsl
fwait
cli
mov
or
inc
int3
sahf
mov
cmovge
fldcw
and
add
aas
or
out
xchg
and
iret
xor
out
test
test
pop
leave
and
scas
js
xchg
aas
out
mov
mov
imul
add
mov
gs
in
pusha
and
ds
lock
jo
xchg
pop
pop
pop
in
mov
inc
jns
divl
sbb
in
popf
push
out
sub
push
es
pushf
out
adc
in
or
sbb
aas
out
sbb
icebp
xor
rcr
cmp
push
dec
xchg
negb
xor
xchg
out
xchg
jo
xchg
scas
dec
mov
pop
pop
push
shrl
pop
and
add
rolb
sti
mov
aas
pop
inc
push
add
mov
sub
xchg
rclb
xchg
sub
push
clc
pop
lods
test
loop
out
mov
mov
out
lods
and
gs
insb
cmpsl
scas
out
lret
sahf
movsl
xchg
xchg
pop
rcrb
fsubrp
fstpt
pop
mov
push
insb
xchg
cmp
lock
add
or
in
xchg
aas
int3
out
mov
call
bound
out
cltd
and
mov
rol
jo
add
mov
sbb
jbe
fmull
cltd
sbb
pop
cmc
push
adc
mov
xchg
jecxz
out
es
sahf
in
bound
out
dec
sub
and
mov
and
xlat
mov
in
jo
jg
lret
mov
pop
mov
insb
or
out
lret
jl
and
outsl
inc
daa
es
fnstsw
test
inc
test
dec
cmp
std
lret
pop
arpl
push
adc
sahf
inc
loopne
mov
js
push
loopne
test
jg
adc
and
pop
in
dec
lock
fwait
mov
into
sti
sub
ds
jo
push
pop
mov
or
mov
sub
or
rcll
jae
cmc
mov
jecxz
addr16
test
jo
dec
push
or
add
stos
movsb
xor
cmc
pop
or
xlat
xchg
loop
jb
scas
stos
mov
sub
dec
add
popa
mov
sub
push
jno
out
jecxz
out
add
out
mov
bound
dec
mov
push
add
sub
out
xlat
jno
add
cltd
clc
mov
mov
cmpsl
cmp
ss
cmp
out
mov
test
and
pop
aas
addb
stos
loopne
out
cmp
and
call
insb
int3
or
iret
jno
xor
outsb
into
xchg
push
out
push
sbb
xor
popa
mov
insb
jecxz
jne
cltd
lcall
enter
push
xor
push
imul
gs
mov
lret
xchg
ljmp
or
rcrl
sbb
lods
mov
jb
jl
cs
testb
pop
or
cmp
call
lea
repz
ret
jle
outsl
push
jne
mov
add
clc
testl
dec
sub
out
add
in
and
incb
cld
pop
bound
push
sub
xchg
lret
mov
pusha
adc
daa
xchg
int
out
shl
das
jmp
ficompl
dec
stos
xor
add
aam
pusha
or
push
xchg
dec
mov
les
add
dec
lock
fcoml
mov
shr
into
mov
psraw
add
sub
out
fstpl
jle
out
pushf
js
mov
gs
adc
mov
cli
jmp
sbb
jg
test
fcmovb
pop
out
push
dec
js
pop
movsl
and
and
sbb
inc
fs
pop
repz
dec
sub
dec
scas
dec
lret
jb
in
out
fmulp
stos
in
add
pop
jo
fdivrl
sub
mov
and
add
jge
push
dec
mov
sub
lret
sub
imul
push
inc
inc
cld
lret
dec
out
lret
jle
shlb
pushf
aad
out
xor
sub
lcall
mov
jl
daa
xlat
scas
dec
xchg
out
jo
mov
push
xchg
popl
je
push
insl
xor
add
jb
pop
enter
scas
adc
out
inc
aaa
imul
adc
out
jae
cwtl
fsubrs
popa
clc
lret
fisttpl
js,pt
mov
push
pop
xchg
sti
mov
cmpsb
adc
fstpt
insb
cmp
loope
shl
call
outsl
xchg
dec
cli
add
mov
cmpsb
shll
loope
jne
xorl
rcrb
mov
push
cmp
cltd
pusha
addr16
or
lds
adc
dec
outsl
add
and
and
xchg
mov
xor
mov
adc
lods
outsl
nop
mov
sub
cmc
sbb
xchg
pushf
loope
add
pop
dec
adc
jbe
test
mov
mov
out
psubusw
sub
out
mov
and
dec
out
mov
cwtl
out
test
inc
or
sub
ds
and
out
dec
adc
adc
jge
sti
rorl
fs
lods
adc
popf
out
lods
inc
mov
sub
data16
xor
movsl
mov
pop
push
in
fsubr
divb
sti
mov
xchg
out
iret
scas
std
or
jbe
out
sub
lret
mov
je
cwtl
out
pushf
stc
fmuls
mov
cmp
aam
jp
cs
leave
push
out
es
insl
lea
mov
jle
into
hlt
sub
jg
ds
out
cwtl
mov
jns
push
js
out
in
xor
lods
jecxz
pop
push
out
sub
fcmove
out
xor
divb
push
test
add
mov
xchg
xchg
insl
or
push
mov
jo
mov
outsl
int3
les
sub
out
ret
jb
and
cmp
jb
push
decb
scas
pop
add
pop
out
mov
lcall
xchg
mov
shll
mov
mov
pop
aas
add
inc
adc
or
out
dec
dec
cmp
inc
cmp
mov
loop
sar
icebp
mov
out
inc
lcall
out
stos
dec
or
andl
add
mov
and
push
std
mov
lea
push
out
aam
and
sbb
dec
mov
sbbb
sbb
inc
out
mov
les
sub
out
faddl
lods
sub
push
int
addr16
xchg
sub
popf
mov
adc
mov
shrb
in
dec
push
jmp
bound
xchg
cmp
out
cmp
addr16
jmp
or
pop
out
add
add
jbe
pop
imul
and
outsl
mov
addb
mov
adc
sub
lods
rcl
mov
out
scas
mov
and
cli
push
inc
dec
test
int
sarb
test
cwtl
fwait
iret
out
subb
imul
jmp
loop
and
cmpsl
push
inc
dec
adc
push
out
push
jmp
aas
or
jmp
xchg
fldcw
repz
outsl
ret
xchg
mov
pusha
ficompl
ja
imul
push
out
ljmp
pop
cli
ret
mov
cmp
jbe
out
cmpsb
xchg
shll
mov
stos
jo
mov
out
inc
mov
inc
add
push
outsl
mov
inc
push
clc
rclb
fwait
out
mov
xchg
in
xchg
out
pop
jle,pt
and
fsubrl
mov
dec
pop
ja
push
push
out
dec
addl
mov
mov
xchg
loop
out
fcomps
fchs
out
xchg
ljmp
stc
loop
ret
push
in
xor
cmp
loope
dec
mov
push
enter
outsl
aaa
lods
xchg
lahf
scas
addr16
fsubr
push
cmc
cltd
or
lret
and
scas
xor
bound
and
cmpsl
mov
out
stos
cmp
adcl
cmp
out
xchg
sbb
test
cwtl
shrl
outsl
sbb
in
loop
sbbl
in
inc
out
in
pop
scas
sarl
fstl
in
and
or
test
xchg
arpl
sub
xrelease
imul
inc
adc
mov
xor
movsl
mov
daa
int3
in
into
insb
pop
jle
sub
lret
jo
pop
adc
and
mov
test
out
jbe
xchg
pop
dec
mov
mov
push
pop
push
and
imul
test
fldcw
dec
ljmp
iret
icebp
cmp
push
xlat
out
bound
or
sub
xchg
pop
popa
shr
pop
xor
push
dec
popf
into
addr16
mov
sbb
add
scas
inc
push
rclb
lods
cmp
dec
dec
mov
jnp,pn
int
jbe
imul
push
mov
xchg
lret
lret
or
push
and
sbb
out
jecxz
cmp
aas
mov
shr
call
aad
mov
mov
sub
daa
and
xlat
out
pop
cmp
lds
push
addr16
outsl
mov
mov
jge
addr16
jne
mov
inc
xchg
mov
cld
test
sub
pushf
cmp
sub
mov
leave
cmpsb
jl
mov
pop
cwtl
subl
mov
out
insl
cs
cmp
push
xchg
push
add
dec
and
sbbl
test
or
xor
mov
or
and
mov
icebp
out
int
cmp
jp
in
out
mov
insb
pop
pop
cmc
das
push
leave
in
sahf
jp
in
sbb
addr16
movsb
sub
flds
out
lea
mov
jo
subl
aam
mull
pmuludq
pushf
icebp
int
mov
dec
fsts
jo
loopne
dec
aas
out
rorb
or
mov
xor
out
push
xor
mov
cld
ss
or
add
scas
addr16
jns
scas
ljmp
daa
loopne
jecxz
jae
out
push
mov
clc
ds
out
sbbb
sbb
or
jb
fucom
in
jg
sahf
xchg
cmp
addr16
iret
test
or
mov
out
cmp
sbb
shlb
dec
and
inc
ret
adcb
int
lods
pop
in
adc
in
lea
shr
movsb
sbb
jne
lods
out
in
cmc
dec
mov
mov
mov
loope
mov
sbb
mov
js
mov
out
into
inc
cmp
xor
push
pop
ret
out
lea
aas
mov
and
int3
scas
sbb
jecxz
out
cmp
push
rcr
jb
mov
jb
int3
xchg
repz
jl
cs
divb
jns
out
sub
mov
inc
test
xchg
adc
mov
addr16
aad
jo
ss
mov
cmp
inc
ret
shlb
into
orb
movsb
mov
dec
lods
out
push
fucomp
pop
cltd
out
rcrb
jno
mov
mov
mov
cmc
xor
in
sub
mov
ret
repz
out
cmp
dec
loop
in
inc
out
pop
lret
jmp
jae
test
and
out
sti
mov
push
out
dec
xchg
add
out
movsb
lea
adc
pop
xchg
sar
mov
leave
std
outsl
push
sub
lret
cmpsb
dec
pop
cld
adc
xchg
into
cld
mov
outsl
mov
dec
and
mov
lret
fstps
cwtl
je
xchg
ret
add
mov
pop
fs
mov
jo
add
cs
sub
fimull
lret
std
fcmovnbe
and
popf
and
pop
ficoms
inc
jecxz
out
loope
and
out
cmpsb
imul
mov
xor
out
mov
and
adc
imul
pop
dec
aaa
ljmp
xchg
jg
out
hlt
out
jge
ffreep
daa
inc
jecxz
out
movsl
push
test
jo
adc
or
and
cs
nop
ds
push
out
lods
or
cmpsb
movsl
addr16
add
cmp
imul
mov
bound
lcall
test
jle
or
scas
pop
push
cmpsl
imul
ret
out
or
push
pop
cmc
push
xchg
aad
out
outsl
inc
lods
or
in
lods
sbb
leave
dec
out
mov
je
cs
pop
stos
out
inc
cltd
fmuls
nop
pop
test
dec
shr
in
inc
push
pusha
call
jmp
push
daa
ret
jge
pop
cmpsl
pushf
xorl
push
btc
mov
fwait
imul
dec
movsb
test
mov
dec
pop
out
push
cld
lahf
xchg
and
pop
jbe
icebp
mov
jo
xor
jp
push
push
aad
enter
and
sub
push
popf
shll
jns
cs
mov
fisubl
lret
inc
pop
out
dec
inc
imull
cmpsb
jno
repz
inc
jecxz
lds
scas
out
and
xchg
jp
mov
fdivl
mov
mov
arpl
punpckhbw
pop
fsub
dec
ficoml
cs
push
xlat
cmp
ds
fsubr
les
in
xchg
sub
movsb
jo
lods
sbb
ljmp
mov
and
adcl
aas
sbb
cs
mov
and
enter
cmpsb
push
pusha
jno
rcrb
mov
cmp
mov
std
mov
into
stos
cmp
imul
lea
dec
fimull
jge
cmpsb
inc
sahf
subl
inc
mov
test
pop
out
leave
sub
and
dec
insl
inc
jo
inc
xlat
fadd
mov
out
mov
mov
xorl
rcrl
jb
jl
stos
jmp
push
adc
out
xchg
push
push
jnp
xchg
out
arpl
stos
loop
test
mov
xchg
xchg
out
mov
imul
in
add
popf
notl
out
sti
lods
out
dec
das
push
mov
and
dec
fwait
scas
addb
ret
cmc
mov
jno
in
fucomip
cmpsl
stos
cmp
inc
fwait
jne
in
test
xchg
ficomps
mov
mov
push
sarb
adc
fsubrs
int
inc
out
in
mov
scas
push
sub
adc
pop
sub
inc
mov
ja
ds
mov
pop
jp
pusha
push
sub
mov
xchg
xor
cmc
mov
push
mov
fsubr
or
inc
fbstp
mov
out
jge
icebp
sbb
add
push
cmpsb
call
mov
dec
sub
out
fsubs
jo
or
out
and
lods
lret
dec
xor
ret
jns
out
add
outsl
xchg
stos
loopne
inc
mov
jae
leave
push
out
cld
jmp
or
cmc
arpl
out
or
shl
sub
loope
jge
mov
test
sbb
push
out
in
pop
sub
dec
out
lcall
lock
push
rclb
fdiv
js
push
lahf
in
loope
and
ljmp
clc
jle
into
repz
popa
jo
or
adc
mov
fsubrs
jo
dec
push
cwtl
fistpll
jno
fiaddl
jbe
clc
and
pop
or
decb
jle
mov
lea
bound
adc
and
hlt
cwtl
cltd
out
int
aaa
shlb
sub
outsb
out
frstor
loopne
cli
sub
jg
mov
fistpl
notl
inc
xchg
pop
dec
jb
gs
std
ret
scas
bound
pop
jge
inc
sub
ja
mov
push
test
lret
pusha
sbb
shrl
pop
out
add
out
cmp
push
lret
dec
cmc
lods
out
cmpsb
add
inc
sti
je
xchg
enter
out
pop
fnstenv
sbb
jmp
add
movsl
inc
push
test
insb
out
ss
dec
in
repz
insl
adc
inc
call
movsl
dec
bound
sub
dec
dec
or
cli
pop
jecxz
mov
inc
mov
adc
jo
js
mov
pop
insb
fcoml
in
mov
repnz
xor
xor
in
ljmp
adc
xor
test
pop
add
stos
jne
push
arpl
mov
mov
iret
sarl
or
imul
movsl
es
jae
test
jb
movsl
cld
xorl
pop
sarb
out
xchg
and
lock
jb
cmc
sub
dec
sbb
fwait
jl
mov
cmp
ja
loop
fimull
out
cmpsl
push
popa
popf
xor
bound
and
pop
add
xor
jl
das
sbb
aaa
push
mov
out
push
sub
pop
add
shlb
sub
sub
das
add
xor
in
xor
cmpsb
xor
xchg
mov
popa
arpl
sub
push
pop
push
adc
mov
adc
nopl
fdiv
pop
xchg
jp
in
in
jbe
aas
mov
in
pop
out
jmp
mov
mov
mov
imul
ds
pusha
push
out
mov
or
push
inc
rcll
enter
fadds
out
les
cmp
jecxz
out
sahf
test
push
pop
subl
pushf
dec
int3
loopne
jo
push
adc
fdivrl
lret
enter
lods
push
mov
pop
aas
cmp
sub
out
jl
loopne
add
scas
mov
xchg
jns
arpl
inc
out
fdivl
pop
outsl
cmpsl
sbb
es
addb
loopne
cs
out
sbb
in
pop
dec
push
jge
out
fsts
cmpl
shrb
out
ss
sub
cmc
cmpsb
pop
jnp
into
sbb
out
int
jp
jecxz
cmpl
out
pop
ret
sub
dec
cmp
and
jp
cld
jns
bound
xchg
xor
and
sbb
dec
adc
repnz
outsl
sbb
std
clc
xor
inc
dec
out
sub
and
pop
out
rorb
adc
out
cld
sbb
cltd
cmp
mov
add
sahf
in
lcall
ret
call
out
insb
adc
dec
mov
pop
inc
test
movsb
fisubs
xchg
push
push
mov
out
xor
je
pusha
mov
subb
sub
dec
sahf
imul
and
pushf
stc
gs
nop
xlat
out
jo
and
lods
mov
sbbb
cmpsl
jp
out
popa
movsb
movsl
cmc
aam
mov
dec
jp
out
or
lods
repz
cmc
in
out
lds
or
jo
hlt
cmp
sub
ret
filds
mov
or
jns
xchg
jnp
sub
out
lahf
lods
inc
fstpl
rcl
fwait
into
mov
std
mov
jno
cmpsb
mov
lods
out
xor
xchg
out
es
mov
loopne
jecxz
push
insb
push
mov
dec
rorb
jmp
das
cs
out
leave
scas
cwtl
jmp
mov
and
dec
in
xor
std
pop
aaa
pop
xchg
adc
fidivrs
mov
loopne
les
and
loopne
out
mov
ss
ja
ljmp
mov
outsl
mov
adc
das
xchg
ja
jmp
cmp
mov
cmpsb
mov
insl
xor
in
fldt
cmc
inc
or
loope
pop
in
fs
push
inc
lcall
add
imul
out
dec
out
sti
into
push
jnp
fstpt
dec
jp
leave
xorb
scas
pop
aas
add
sub
fdivs
cs
jmp
lods
dec
gs
cmp
mov
stos
out
pandn
fsubp
push
and
jo
add
mov
movsb
xor
cmp
out
mov
jbe
lds
cmp
pop
and
aas
xor
push
push
clc
out
inc
xchg
das
add
adc
xlat
out
jecxz
jo
mov
inc
movsl
out
xchg
dec
in
xor
push
dec
jmp
aad
cmp
or
test
loop
popf
jo
mov
loop
hlt
cmp
clc
dec
sbb
ret
imul
and
push
inc
rol
out
or
lods
push
xlat
in
push
out
inc
les
out
mov
push
jae
outsl
ret
insl
mov
dec
mov
jmp
sbb
mov
fwait
in
adc
cwtl
loope
mov
lds
jb
mov
xor
add
cmp
adc
xchg
jae
inc
mov
iret
fs
stos
xor
xchg
outsl
pop
xchg
xlat
xchg
lds
in
sub
sub
push
dec
int3
dec
shll
shr
pop
lret
adc
stos
aad
add
mov
es
shrb
outsl
jle
in
cld
repz
or
es
test
dec
jo
retw
in
shl
sbb
out
je,pt
pop
ljmp
addr16
or
lahf
rcl
and
jo
xchg
pop
cmp
cmp
push
push
movsb
dec
movsl
pop
enter
mov
pop
jns
cmc
fbstp
sub
cmp
movsb
movsl
dec
lods
stc
jp
loope
jo
fwait
scas
outsl
sti
lcall
ss
inc
jno
mov
and
push
adc
lea
jbe
fstpl
scas
movsb
lds
ds
sub
inc
ret
inc
pop
das
add
push
and
xchg
jo
push
stc
cmpl
scas
or
scas
out
popa
ret
xor
xchg
xlat
mov
fsubrl
or
in
jae
cmp
out
and
xchg
aad
or
or
cli
std
int
mov
cmp
cs
or
sti
arpl
aad
out
xor
jmp
push
outsl
xlat
in
jno
negb
aam
out
sub
imul
movsb
mov
out
xchg
push
add
mov
xor
jl
shrb
nop
sti
out
jbe
push
jle
test
jbe
dec
sub
into
ret
sub
out
call
inc
sahf
push
dec
addr16
jle
jmp
add
adc
jl
mov
jb
mov
dec
jmp
pop
cld
lret
mov
test
mov
or
mov
out
lods
xor
imul
in
fildll
fadds
out
ja
sbb
jnp
fisubl
insl
pop
mov
mov
movsl
lods
shr
call
cld
sub
sbb
cmpsb
shrb
sbb
aas
bound
or
popf
dec
mov
cmpsl
lods
cmc
sub
out
sub
ret
stos
mov
cs
aas
push
movsl
hlt
cmc
addr16
out
std
fsubl
and
fcmovnu
cmp
mov
adc
cmpsb
dec
xchg
scas
test
negl
pop
cmp
cmp
sub
out
xor
mov
push
inc
jmp
mov
jle
loop
ror
test
loop
out
dec
les
bnd
or
outsl
xor
and
rorb
out
in
sbb
popa
pop
mov
sub
jno
movsb
pop
or
xchg
mov
in
fsubrs
dec
dec
cltd
out
cmp
adc
sbbb
stc
lcall
adc
repnz
insl
out
adc
test
cld
scas
loopne
imul
nop
movsl
mov
and
add
add
mov
imul
pop
pop
in
mov
out
in
loope
mov
out
js
lods
jns
push
popa
out
cmpsl
mov
pop
push
or
std
movsb
pop
dec
out
pop
and
stos
leave
std
jl
mov
sub
adc
jle
mov
sbb
fcoms
mov
inc
movsl
mov
in
mov
xor
push
push
inc
out
lods
sbb
inc
in
lods
sub
jns
out
jg
sub
jbe
shrb
adc
jmp
iret
movsb
les
pop
test
das
fdivr
movb
sbb
pop
add
mov
sub
adc
movsl
fistpl
jnp
outsl
sub
rcll
inc
or
and
sbb
out
or
sarl
cmpsb
fs
fcompl
add
or
inc
out
mov
sbb
sbb
adc
std
mul
out
xor
jmp
sub
sbb
jb
mov
movsl
out
sahf
inc
clc
stos
fsubl
inc
fwait
cmp
test
jp
clc
out
mov
rol
ret
out
fnstsw
cmc
and
in
add
notb
inc
lahf
adc
gs
fisubrl
icebp
lret
movsb
inc
ljmp
push
popf
mov
out
dec
pop
shlb
sub
ljmp
cmp
repz
and
subl
fidivrl
rcll
push
ss
and
lret
or
test
push
cmpsl
jecxz
or
push
cmc
mov
mov
into
stc
inc
sti
in
popf
outsl
lea
movsb
mov
or
sbbb
aaa
xchg
out
jge
push
mov
std
jmp
dec
mov
dec
loopne
mov
jecxz
sub
pop
shll
xchg
adc
jmp
cmp
sub
mov
inc
add
je
adc
scas
or
cs
xchg
mov
fadds
xchg
jecxz
fstpt
lods
jae
dec
cs
and
mov
popf
outsl
fcompl
xchg
ret
dec
out
inc
jmp
cld
loopne
stos
jb
mov
or
lahf
out
inc
adc
hlt
inc
dec
int3
into
out
jecxz
push
or
push
add
mov
jno
ljmp
jo
out
sub
push
inc
bound
les
mov
lods
lea
push
and
bound
lret
orl
ja
push
out
pop
adc
notl
xchg
out
push
dec
and
in
jecxz
into
icebp
and
fs
xchg
add
mov
pop
xchg
inc
pop
aam
push
mov
daa
rcr
sub
insl
and
xchg
out
stos
iret
std
cs
mov
mov
adc
mov
les
mov
jo
aam
popa
out
sbb
mov
and
mov
or
hlt
pop
add
pop
xor
pmaxsw
push
fcompl
and
sub
xchg
je
out
out
std
jo
shll
daa
dec
jo
mov
imul
sahf
mov
dec
xchg
jb
jl
std
shrl
mov
xchg
out
xchg
fdivs
fiadds
cwtl
ljmp
lcall
aaa
out
in
cmp
pop
or
push
out
push
pop
mov
jle
xorb
push
fistps
imul
push
in
pop
lret
sbb
sub
lds
xchg
and
xchg
rorl
jmp
test
in
out
push
mov
mov
sbb
mov
loop
repz
push
je
or
out
mov
aad
pop
out
sbb
lret
in
or
cmpsl
dec
add
into
sub
stc
push
sbb
shlb
push
aam
and
xchg
jnp
out
jbe
insb
dec
leave
jno
mov
push
dec
les
scas
adc
mov
inc
iret
out
push
mov
and
jbe
jp
scas
sub
push
pop
sub
inc
cmp
cld
iret
out
mov
mov
push
mov
sub
fisttps
not
dec
mov
cltd
les
xchg
test
ret
xchg
or
adc
scas
out
jo
bound
cltd
test
lea
inc
in
lret
outsl
cmp
add
enter
daa
out
out
xchg
and
ss
inc
jge
fcom
mov
dec
loopne
add
xchg
or
and
inc
data16
add
lds
pop
subl
out
dec
js
xchg
test
jb
or
sahf
out
push
xchg
pop
xchg
sub
scas
push
cs
lret
scas
lea
pop
in
mov
scas
and
cmpsb
dec
jp
shr
lret
cmovnp
out
xchg
ret
xchg
add
push
fildll
outsl
xor
fidivrs
out
jno
mov
jmp
xor
mov
jo
test
pusha
shrb
enter
fs
pop
cmc
push
mov
pop
mov
mov
rclb
mov
sbb
pop
dec
shrb
push
out
push
fisubrl
subb
jge
xor
das
mov
inc
pop
cmc
outsl
mov
aaa
cmp
shrl
push
sti
out
pop
mov
adcl
out
stos
sbb
sbb
inc
clc
shll
out
jmp
cmpb
arpl
jo
xor
adc
mov
sub
fwait
dec
xorl
fsubrp
sahf
out
out
sbb
out
addr16
xorl
sbb
into
mov
stc
outsl
sbb
xor
dec
ljmp
push
orb
and
adc
push
mov
jo
and
rorb
ds
jae
lea
jge
jne
xor
aaa
lret
ss
out
jns
xor
dec
shlb
sub
pop
aad
xchg
rclb
out
cmc
inc
rorb
hlt
loop
out
ss
sbbb
sub
out
scas
and
out
in
fistpll
add
cwtl
out
cmpsb
mov
bound
fstpt
iret
popa
ds
push
xor
mov
in
out
jae
mov
jno
mov
mov
aas
and
fiaddl
pop
loopne
pop
push
mov
dec
push
insb
out
cmp
or
pop
out
jl
test
sub
fcomip
cld
jb
fimull
pop
out
test
inc
dec
out
cmp
cwtl
shr
out
sbb
mov
popa
push
int
sub
gs
xchg
adc
ret
sbb
gs
ret
mov
mov
sub
out
mov
scas
inc
movntq
js
out
test
data16
cmpsb
cmp
testl
rcl
add
loopne
fwait
int3
hlt
sub
scas
out
mov
jle
xchg
or
fimull
sub
fldl
leave
mov
sbb
jb
jae
aas
sbbl
mov
xor
add
out
sub
xor
out
jecxz
jge
xor
push
stc
out
mov
gs
out
mov
test
loopne
mov
mov
fldl
les
popf
ss
out
dec
int
jge
mov
inc
jo
xor
fs
cmc
ficompl
push
mov
or
fidivs
rcrb
push
aam
jnp
dec
adc
xor
in
out
fstpl
push
xchg
aaa
cmpsb
scas
hlt
inc
stos
mov
mov
push
icebp
fldl2t
mov
push
inc
sub
sub
arpl
jg
fistps
cmp
or
pop
mov
xchg
enter
arpl
movsl
push
insb
in
lea
mulb
out
add
jb
addr16
push
push
mov
jge
sbb
push
nop
add
sub
into
add
or
lea
stos
xchg
push
rorb
je
rorb
adc
std
xor
std
xor
fcoms
out
xor
mov
or
adc
mov
mov
int
inc
and
mov
loop
fs
mov
xor
sarb
test
jb
daa
jbe
into
fstpt
mov
aam
inc
out
add
negl
inc
test
cmp
cmp
movsl
cmp
mov
push
subb
scas
push
popf
out
cmp
cld
cmp
int3
push
and
movsl
scas
shll
lcall
adc
psrld
out
sub
data16
dec
jl
pop
and
cs
push
movsl
out
push
inc
pop
mov
cmc
repnz
mov
hlt
adc
pop
lahf
mov
cmp
inc
int3
pop
jge
lea
add
mov
test
xchg
popf
dec
loope
out
lcall
inc
pop
std
dec
outsl
das
in
lret
jp
addr16
dec
xchg
dec
out
push
dec
xor
stos
lds
cs
mov
out
fs
jge
jo
ja
addr16
fcomip
xlat
aad
pushf
pop
insb
jo
xor
push
mov
lret
shrl
lock
xchg
xchg
cmpsb
in
cltd
lock
jo
aad
push
pushf
nop
mov
je
jge
cmp
pop
rorb
mov
out
aas
cmp
out
mov
mov
movsl
xchg
ret
ret
out
ja,pn
jne
lods
lret
jg
pop
add
jle
push
mov
inc
ljmp
cmp
into
shrl
mov
sbb
lock
cmp
xor
dec
cli
add
push
push
mov
mov
xchg
loopne
lret
je
movsl
out
bound
or
cmc
stos
xor
insb
stc
mov
sbb
popf
ds
xchg
es
scas
push
push
aad
cmp
out
push
int
shlb
sbb
lods
pusha
jge
fcompl
xlat
push
mov
loop
insl
decb
pop
sbb
jo
aam
pop
pop
aad
repnz
ljmp
jbe
out
cmovg
cmp
xchg
out
or
push
cmp
fldl
jo
icebp
inc
jbe
ja
pop
imul
sub
aas
dec
out
sahf
and
outsl
mov
lods
jo
movsl
lds
push
lcall
sbb
fiadds
add
jecxz
out
movsl
mov
sub
xchg
xlat
xchg
out
push
enter
cwtl
jb
mov
shlb
lock
fadds
addb
sub
mov
jge
jecxz
push
lods
mov
mov
sbb
loop
and
or
inc
push
shlb
lret
cmp
cmc
or
cmpsl
adc
and
out
outsl
fnstcw
sub
add
jne
int
mov
out
lret
cmp
or
jnp
sysexit
inc
xchg
adc
mov
sbb
dec
mov
jle
push
pop
sahf
lds
sti
out
cmp
rorl
jb
pushf
hlt
outsl
adcb
sbb
jmp
mov
in
jae
nop
out
cs
cmp
in
das
out
jnp
adc
cmp
shrb
push
sbb
mov
and
ljmp
lea
sub
cwtl
pop
sbb
int3
push
out
jae
push
mov
sbb
or
adc
cltd
jo
or
xchg
icebp
mov
dec
pop
cltd
adc
jb
fadd
ret
popf
enter
jae
xor
outsl
push
imul
out
xor
inc
mov
adc
mov
cwtl
sub
fistpl
cltd
push
out
scas
push
ficoml
adc
xchg
cs
push
pop
mov
xor
iret
xchg
sbb
hlt
out
aam
cwtl
lods
cmpsb
pusha
call
and
dec
pushf
sbbb
xchg
pop
inc
jb
mov
addb
mov
out
push
adc
fbstp
pushf
out
jns
mov
arpl
cs
out
bound
out
push
mov
cmc
pop
jp
dec
inc
fstps
insb
data16
jle
out
es
jno
out
add
inc
ds
mov
pusha
ret
sub
clc
dec
sbb
xor
out
and
out
mov
nop
out
sub
pop
out
sub
sub
dec
ss
fs
and
jo
sbb
xor
les
out
jo
jns
loop
add
dec
jp
into
pop
dec
cwtl
push
in
mov
es
mov
ss
pop
dec
cld
leave
fisubs
or
std
add
inc
inc
adc
imul
cmp
test
cmpsl
push
xor
fisttps
and
add
sub
jg
mov
stos
pusha
push
out
cs
movsb
dec
in
push
inc
shl
cmp
aad
into
fwait
repnz
pushf
out
arpl
loopne
scas
lods
jae
out
mov
lea
inc
outsl
cmp
test
mov
mov
pop
add
push
decb
out
or
bound
out
in
aam
sbb
dec
sub
mov
js
loopne
sbb
pop
loope
lahf
movsb
cmp
fwait
out
pop
sbb
pop
addr16
rorl
scas
pop
adc
xor
xchg
and
ret
ret
jo
mov
xchg
outsl
ror
cmpsl
cmp
out
lcall
jp
adc
sub
cld
cld
std
xor
nop
fisubrs
fs
sub
cmpsb
cmc
sbb
paddd
out
pop
sub
fsubr
sbb
cld
sarl
cmp
inc
add
jle
cltd
xor
dec
addr16
ret
cmp
inc
gs
mov
insb
loopne
lret
dec
cmp
scas
out
cmp
fiadds
mov
shl
rcrb
add
enter
fs
insl
dec
jo
sub
popa
std
sbb
jo
mov
into
icebp
sub
loopne
lock
push
jo
xchg
or
out
in
push
adcl
inc
ud0
mov
fiaddl
add
cmpsb
sub
gs
or
insb
stos
fdivl
out
cmp
out
or
jle
mov
jb
sub
out
sbb
loope
out
pushf
stos
jle
jno
scas
popa
adc
xor
lea
xchg
call
out
mov
sar
ds
shr
ss
push
adcl
out
adc
jo
push
hlt
and
mov
scas
push
and
sub
add
and
fdivl
dec
mov
addr16
cmc
cwtl
lcall
and
out
test
imul
pop
test
mov
ret
scas
jo
jmp
sub
out
into
addr16
push
fisttpll
aaa
orb
or
leave
push
pop
push
and
mov
movsl
cmp
adc
push
jge
cmpsb
js
daa
insb
sahf
mov
push
jp
mov
imulb
and
movsl
mov
fldt
movsb
out
mov
and
xchg
pop
out
ljmp
mov
add
sbb
jp
call
sub
cwtl
test
xchg
out
dec
test
mov
push
mov
pop
cmp
or
mov
scas
sarb
mov
add
xchg
out
jp
dec
push
dec
jg
out
fisubl
bnd
jns
aam
imul
or
adc
push
cmp
mov
pusha
out
pop
into
and
sub
out
push
push
notl
xchg
out
fcom
add
cmc
mov
xchg
mov
add
movsl
adc
out
in
ss
or
out
cs
imull
pop
mov
push
jb
fisubrl
scas
bound
mov
mov
enter
scas
xchg
add
push
sbb
cltd
stc
sub
and
ret
or
jecxz
mov
out
in
fimull
sbb
pop
mov
xchg
or
sbb
out
clc
xor
mov
mov
dec
fisttpll
jne
test
jl
dec
sti
movsl
dec
cvtps2pi
fidivs
cmpb
stos
sub
jge
mov
pop
and
push
out
clc
je
or
test
mov
outsl
arpl
outsl
out
rcl
jo
jbe
int3
sbb
pusha
cmpsb
mov
and
fmuls
in
popa
jae
in
jmp
jne
cmpsb
add
repz
cmp
sbb
inc
inc
dec
out
pop
test
shll
std
out
ret
scas
into
cmp
lahf
inc
data16
out
repz
adc
out
nop/reserved
fwait
test
sub
sub
jb
iret
and
dec
mulb
and
ret
loope
jge
das
ss
sub
leave
mov
mov
mov
shr
repnz
xor
push
js
jo
jns
into
movsb
mov
out
es
orb
adc
xchg
jb
adc
out
ja
sarb
and
mov
xchg
in
jecxz
add
mov
sub
dec
pop
push
and
out
addr16
std
repz
mov
out
jecxz
sahf
adc
popf
out
push
out
inc
jns
dec
fwait
out
pop
or
push
out
lret
adc
inc
out
dec
out
adc
jb
test
lods
pxor
mov
lods
out
ficoml
daa
cld
mov
fcoms
pop
into
orl
push
inc
push
into
fsqrt
addr16
out
test
and
lret
dec
push
shl
jecxz
out
cmc
or
sub
jmp
mov
mov
call
add
mov
fisubrl
lods
out
les
mov
jle
jb
into
push
cmp
rol
out
pushf
stc
xlat
adc
insl
sub
and
insb
ljmp
shlb
cmp
mov
xchg
icebp
aaa
out
ljmp
ljmp
in
outsl
faddl
and
jecxz
out
out
inc
adc
sub
or
pop
push
dec
out
rclb
outsl
xchg
or
loopne
add
es
popa
xchg
insl
mov
daa
jmp
cmp
add
pop
or
and
rolb
sbb
or
cmc
lcall
mov
popf
aas
out
call
jp
out
es
cmp
mov
xchg
jge
stos
jecxz
scas
mov
out
repnz
lahf
jp
xor
popf
into
imul
out
ds
fst
mov
addl
cmpl
push
out
in
push
aam
or
hlt
inc
imul
mov
insb
mov
cmp
lret
mov
or
cmpsb
imul
out
lcall
hlt
xchg
mov
in
scas
cmp
and
je
imul
ljmp
sbb
lret
inc
jmp
lcall
xchg
ret
jno
das
out
inc
or
mov
lcall
aaa
pushl
xlat
icebp
mov
cmpsl
push
test
mov
ret
std
lea
jbe
push
push
jnp
out
inc
out
jge
fs
test
cmp
add
or
stos
push
out
lods
mov
mov
mov
out
cld
jle
test
popa
je
out
or
cmpsl
divb
inc
xchg
out
or
xchg
lcall
adc
xchg
mov
and
divb
fwait
cmc
or
jmp
inc
add
enter
cmp
ja
outsl
fdivr
lcall
scas
sahf
inc
jmp
jb
mov
ret
inc
or
outsl
or
clc
push
fs
out
mov
sbb
ret
cmp
pusha
fisubrl
sub
pop
inc
inc
arpl
in
push
mov
sub
icebp
xor
or
mov
leave
in
ds
clc
out
jmp
cmp
jbe
inc
push
pop
fistl
enter
mov
mov
xchg
jno
stos
out
cmp
data16
jns
loop
jg
adc
fildll
ds
mov
and
inc
std
cmp
insl
std
cs
out
cmp
gs
negb
outsl
xchg
ret
mov
cld
into
bound
xchg
inc
jmp
inc
fisubs
cs
insl
aaa
pop
jmp
out
mov
xchg
xchg
mov
scas
lock
jle,pn
in
push
out
push
pop
sbb
xor
out
mov
repz
pop
test
mov
push
xchg
ds
or
mov
out
sub
in
jb
pop
fdivl
clc
aas
aam
scas
icebp
jbe
sub
repz
outsl
int
dec
out
jne
loopne
popa
in
jno
pop
std
lret
mov
or
dec
repnz
inc
cmp
loop
in
mov
scas
mov
popf
repz
xchg
test
jle
sub
inc
aad
and
mov
pop
add
fimull
test
out
mov
jmp
enter
dec
or
cmpsb
stc
out
add
push
inc
out
fistps
add
sti
jne
out
data16
out
sbb
xor
jb
fstl
sbb
fcoms
out
pop
jne
cmp
minps
js
inc
jmp
inc
lea
dec
inc
jnp
cmp
out
gs
push
cmp
out
xchg
adc
sub
dec
or
lahf
adc
mov
mov
jae
test
push
jo
in
int
mov
jo
or
dec
sti
cmp
cmc
add
cld
test
sbb
scas
mov
fs
gs
cmp
ror
jae
jmp
xchg
mov
cs
rclb
out
sub
lret
enter
int
pop
fwait
stos
mov
xchg
cs
out
jne
js
pop
push
nop
pop
stos
inc
loope
out
int3
clc
and
or
mov
cs
cld
mov
mov
sub
loope
movsl
mov
jmp
imulb
cld
push
jg
repz
out
outsl
out
inc
cltd
adc
xor
ficompl
out
cs
loop
popf
out
rcrl
pop
mov
xchg
mov
stos
sub
mov
das
sahf
lds
jecxz
lods
popf
out
or
adc
mov
inc
jo
mov
dec
mov
push
jo
dec
mov
incb
mov
lods
out
sub
push
push
clc
loop
es
mov
cwtl
lock
into
and
addr16
pop
loope
pop
mov
inc
dec
dec
jmp
jmp
out
pop
add
icebp
pop
push
in
sub
out
repnz
mov
out
cmp
push
xor
in
dec
or
int3
dec
rcll
loopne
xor
sub
and
xchg
ljmp
dec
fidivrl
dec
outsl
pop
add
pushl
pop
loopne
push
mov
in
test
and
enter
lock
inc
sbb
adc
push
cmc
sti
lahf
out
inc
inc
pop
insb
sub
imul
into
cmp
mov
out
and
sub
and
daa
aas
out
shrl
inc
out
aaa
xor
sub
mov
stos
xchg
lds
adc
imul
rclb
fstpl
popa
push
out
out
cmpsl
or
loopne
adc
add
stos
push
gs
pop
out
push
xlat
fisubrl
popf
lret
dec
and
js
xor
out
adc
jo
dec
jae
adc
cld
push
adc
mov
test
xor
or
xchg
data16
out
lods
imul
fucomp
jl
mov
cmc
adc
das
dec
cwtl
in
lock
out
call
and
outsl
dec
adc
mov
xchg
xlat
jo
mov
push
je
xchg
cwtl
jle
inc
out
push
imul
and
aad
out
pop
dec
out
mov
sbb
das
inc
inc
lret
push
js
xor
out
mov
fwait
out
inc
out
xchg
repz
out
xchg
lods
mov
sbbb
out
out
sub
dec
push
daa
test
loope
out
js
repnz
fidivs
inc
loop
out
jnp
cwtl
and
lds
test
xchg
cmp
add
mov
fisubs
stos
adc
pop
sbb
popf
jmp
cmc
mov
je
sub
jns
push
scas
pushf
xor
out
rcll
leave
out
or
sbb
push
add
nop
dec
mov
adc
xchg
out
test
inc
lret
adc
inc
dec
out
hlt
or
popa
push
xchg
imul
add
dec
and
cmp
mov
ss
cmp
leave
stos
mov
push
jb
ret
add
dec
xchg
jle
jne
scas
xchg
out
push
or
repnz
sub
mov
fcmove
jle
mov
pop
arpl
mov
paddsw
cltd
pop
dec
int
imul
arpl
scas
out
mov
loope
mov
sub
inc
or
and
popf
dec
adc
ffreep
imul
movsb
andl
loop
les
dec
inc
out
xor
push
pusha
jg
daa
jecxz
mov
out
loop
test
inc
out
push
xchg
je
sahf
loopne
or
outsl
pop
pop
push
rcrl
jno
js
or
pop
fmulp
sub
sub
push
mov
jl
mov
inc
shrb
fistpll
mov
push
and
or
push
inc
dec
dec
cwtl
fldz
out
sti
xor
or
movsl
push
repz
xchg
jge
inc
out
mov
jno
outsl
cld
cltd
lea
jb
fcompl
mov
daa
out
test
push
clc
push
das
fidivrl
jecxz
dec
mov
push
repz
pop
inc
dec
leave
ds
push
out
push
mov
in
cld
xchg
mov
mov
cli
mov
inc
cmp
adc
insb
pop
bound
testl
adcb
gs
jb
sub
mov
dec
out
nop
stc
sbb
std
fwait
les
out
hlt
jl
popf
mov
ds
push
in
scas
out
adc
dec
leave
arpl
jo
popf
pop
sub
jg
rorb
outsl
xchg
movsl
dec
xor
and
inc
cwtl
xor
push
jecxz
scas
out
rolb
in
out
add
inc
dec
push
fisubrs
add
pop
mov
hlt
cld
out
iret
mov
xchg
lock
cmp
mov
or
sub
jmp
out
out
xchg
xor
mov
aad
mov
mov
push
sbb
rolb
orl
add
cmp
outsl
pushf
xor
vminps
insl
mov
int
out
movsb
shrl
or
adc
out
jge
popf
scas
jp
scas
loope
out
pop
sar
xor
rcll
mov
jo
fmul
ja
mov
cmp
out
or
pop
test
dec
out
movsl
lret
fmull
out
repz
int
sub
or
inc
inc
dec
outsl
lret
mov
xor
mov
mov
and
mov
xchg
jo
pusha
scas
ja
movsb
inc
push
scas
loop
dec
jl
daa
insb
cld
cmp
rcrb
shll
scas
cmp
out
fdivs
add
mov
fcmovnbe
sub
mov
and
mov
mov
adc
test
call
cld
jb
sub
xchg
xchg
in
xor
jecxz
out
dec
and
and
sbb
daa
mov
adc
jo
and
fldt
sbb
pusha
pushf
out
push
cld
or
push
xchg
push
sub
out
mov
and
insb
fldenv
and
pop
xor
addr16
inc
pop
push
out
mov
inc
pop
push
mov
imul
lcall
fsubrp
das
jo
add
pop
sti
pushf
stos
sub
xlat
int3
stos
sbbl
out
add
popf
out
int
pop
insb
push
or
lcall
jge
sbb
out
leave
cmp
and
xor
mov
pmaxsw
clc
popf
loop
out
imull
mov
dec
repnz
out
inc
leave
push
dec
mulb
aam
jg
fnstcw
add
inc
cmpsl
adc
in
in
cld
mov
xor
icebp
out
inc
out
inc
call
jae
cmc
jmp
sub
jge
aaa
jo
fwait
xlat
fdivr
dec
into
dec
out
out
stos
cld
sbb
lret
out
arpl
xchg
adc
clc
lahf
cmp
mov
aam
nop
mov
orb
out
in
dec
push
int3
inc
lret
jb
mov
test
jno
ret
inc
mov
jae
inc
stos
cli
orb
movsl
pop
out
jg
fstps
add
imul
pop
daa
inc
out
jno
repnz
mov
stos
cmp
imul
jmp
jbe
add
icebp
movsb
pop
jle
daa
fsubr
mov
cmp
aaa
mov
rorb
dec
les
in
daa
out
sub
jae
xchg
js
push
aaa
into
mov
sbbl
rcll
jg
es
mov
loope
mov
sahf
mov
jo
in
sub
and
push
cli
out
ljmp
cmp
pop
jae
scas
movsl
sbbl
add
fsts
mov
lret
and
and
in
aaa
adc
inc
outsl
mov
out
push
loopne
sub
mov
push
sahf
out
jle
jmp
popf
ret
out
mov
or
or
mov
mov
mov
mov
pop
into
jb
jmp
dec
sahf
or
xchg
orb
xchg
mov
mov
adc
testl
jo
out
rol
mov
jle
mov
cs
and
lahf
fimull
ljmp
cs
insl
add
aaa
xchg
lret
inc
imul
jb
jl
lea
int3
mov
enter
call
insl
icebp
inc
gs
out
adcl
and
ss
shlb
stc
mov
push
out
fnstsw
and
and
jg
adc
inc
lahf
or
add
mov
je
cmpsl
xchg
inc
in
mov
mov
adc
sub
fsubl
movsl
jb
fisttps
out
xor
dec
orl
sbb
adc
mov
test
jge
shrl
cwtl
add
into
out
sahf
fldl
mov
push
aad
fst
inc
leave
fidivs
repnz
sub
aaa
out
add
outsl
push
hlt
std
cmp
pop
sub
adc
push
les
out
xlat
mov
insl
repz
jb
cld
sub
push
ja
pop
ret
mov
mov
push
iret
mov
cli
adc
out
push
xchg
adc
test
cwtl
fiadds
cmp
and
out
mov
jge
push
adc
cmp
dec
xor
pop
popa
cmp
int3
out
mov
dec
neg
xchg
lock
mov
push
mov
dec
or
out
scas
pop
jo
push
mov
enter
into
loop
out
out
xchg
scas
jnp
push
jb
and
inc
ss
cmc
inc
and
mov
sub
jge
mov
fs
subb
rcl
adc
dec
push
cltd
into
in
repnz
out
out
jle
loop
jmp
or
jb
xor
mov
pop
imul
jb
stos
movsl
ficompl
mov
pop
fwait
add
dec
jo
mov
mov
sub
out
push
mov
outsl
cmpsl
dec
fcoms
xchg
imul
out
xor
mov
frstpm(287
pushf
test
cld
inc
jg
popf
frstor
scas
or
out
in
mov
xor
sub
popl
movsl
hlt
test
pop
push
add
push
cld
sbb
ljmp
mov
out
fstpt
push
sahf
outsl
insl
cmp
pop
pop
sbb
scas
repnz
aaa
push
jmp
dec
scas
dec
sahf
inc
lds
ljmp
add
cltd
mov
idivb
repz
dec
negl
cmpsl
jge
movsl
lock
and
lea
xor
jbe
aaa
mov
in
pop
out
and
add
push
fwait
int
cmp
mov
xchg
pop
xchg
xlat
push
jae
inc
mov
stos
inc
out
mov
roll
subb
dec
fisubrs
jge
pop
inc
mov
push
fidivl
xor
iret
in
add
cmc
out
aas
adc
sub
insl
outsl
push
pop
pop
mov
call
mov
sub
cs
dec
gs
out
inc
push
int3
mov
mov
xor
or
mov
jo
divb
pop
popa
enter
popf
inc
nop
lods
fbld
sub
out
jp
adc
out
mov
in
jle
pop
ss
scas
adc
je
pop
cwtl
lds
sahf
lea
fdivrs
fidivrl
out
and
cmp
lret
es
push
sbb
arpl
add
std
out
gs
inc
adc
outsl
xchg
and
xchg
cli
mov
xchg
sbb
dec
insl
mov
jae
pop
dec
mov
mov
and
hlt
sbb
ret
push
out
xchg
icebp
mov
sbb
lcall
jo
insb
jae
test
mov
cld
cs
out
arpl
flds
and
jge
jb
rclb
jns
repnz
es
and
int
jmp
stos
bound
cwtl
cmp
cmpsl
test
cmpb
push
or
sbb
enter
xchg
sbb
out
mov
ljmp
adc
mov
in
xor
ljmp
or
insb
add
test
in
jo
or
scas
xor
add
out
inc
call
out
pop
sbb
shl
mov
out
adc
lods
call
inc
out
dec
mov
shlb
xchg
mov
out
fcomp
cmp
test
lock
into
xchg
mov
data16
std
jp
pop
shlb
mov
add
lods
out
push
std
test
adc
popa
mov
add
mov
aam
pop
xor
adc
dec
inc
in
popa
jo
ret
outsl
lods
nop
mov
insb
dec
sub
cmp
aad
out
insl
pop
lcall
sbb
outsl
mov
cwtl
out
in
pop
pop
jle
xchg
push
test
mov
or
shlb
arpl
inc
clc
pop
mov
mov
push
mov
shr
and
adc
negb
sti
out
jbe
mov
mov
mov
test
loopne
pushl
ret
into
out
gs
xlat
pushfw
in
out
xor
and
xor
out
lcall
xor
cmp
test
out
xlat
and
xor
fcomp
movsb
xchg
and
push
jge
icebp
push
push
das
rolb
xor
pop
sarl
fincstp
jns
loopne
lahf
push
scas
sbb
ret
or
mov
adc
sub
popf
fimuls
or
arpl
fistpll
dec
bound
shr
inc
in
js
ds
loope
mov
push
test
leave
push
xor
out
iret
pop
cwtl
and
cld
enter
xchg
ret
out
xor
inc
xchg
adc
dec
cmp
or
mov
sarl
mov
sbb
insb
and
push
adc
sbb
cld
jb
call
inc
pop
aaa
out
ljmp
lea
mov
cmpsb
imul
xor
sub
clc
stos
sahf
mov
inc
lea
xchg
sub
push
adc
mov
jns
out
mov
jge
mov
arpl
sub
push
cmp
icebp
fldl2e
inc
out
ja
outsl
insb
cmp
mov
out
test
pop
movsb
jecxz
int3
inc
out
push
shrl
ret
out
test
movsl
jae
push
dec
or
mov
adc
inc
out
rcrb
xlat
xchg
rcrl
shr
jnp
movsb
mul
xor
mov
sbb
out
fwait
pop
adc
xchg
push
xchg
mov
in
insb
daa
jbe
inc
pop
mov
pop
stos
jo
adc
cli
push
fisubl
and
loopne
sub
rorl
test
out
mov
fld1
les
jns
ficoml
sti
inc
jecxz
add
scas
adc
popa
jb
mov
movsl
xchg
sub
push
and
jno
jae
xorb
aad
dec
loop
test
push
push
cmp
sub
jne
and
loope
jnp
push
push
out
gs
jno
rcr
stos
sti
addl
in
call
cld
mov
push
adc
dec
aaa
sahf
adc
lret
scas
adc
jmp
xlat
cmp
mov
pop
out
mov
jo
roll
push
jne
adc
mov
ret
and
pop
mov
sbb
mov
mov
inc
aas
mov
call
mov
or
out
jecxz
vmread
sahf
jns
sub
aad
jbe
pushf
mov
call
xchg
xchg
cwtl
mov
test
popa
xor
mov
aad
jmp
ljmp
dec
jmp
sub
sbb
dec
sbb
hlt
outsb
mov
imul
sub
xor
out
xchg
add
fcmovu
popf
cmp
push
loop
ljmp
popf
sub
pop
push
sbbl
and
dec
inc
sub
xor
xchg
out
aas
fsubrl
test
xchg
adc
mov
sahf
arpl
cmc
flds
cs
test
push
fsubrp
cli
dec
xchg
xor
pop
jmp
out
mov
in
mov
inc
ss
jl
lock
xchg
shr
jo
jecxz
xchg
sub
iret
dec
jl
js
push
sbb
pop
loope
mov
jle
inc
mov
shr
popf
cmp
sub
movsl
loope
jbe
lret
imul
xor
out
mov
scas
notb
out
mov
ficomps
repz
stos
imul
inc
push
out
and
cltd
pop
cmp
notl
add
jb
mov
jg
add
dec
sub
jle
pop
cmp
pusha
cmpsl
nopl
out
jnp
cmp
push
inc
mov
imul
inc
add
adc
cmp
cmp
sub
pop
adc
lea
sub
rorl
aaa
inc
stos
pop
enter
lret
stc
xchg
into
push
cltd
fsubr
xchg
and
shlb
std
dec
bound
jmp
xor
or
mov
jbe
xor
dec
inc
jge
rolb
call
sub
stc
xchg
subb
icebp
cmpsb
xchg
jle
mov
je
inc
out
mov
out
repnz
fistpll
scas
mov
pop
call
sbb
add
sti
push
mov
ret
push
imul
or
or
pop
xchg
pushf
mov
out
fdivrl
out
arpl
in
jmp
cmp
out
dec
mov
and
pop
xchg
fcomps
inc
rorb
cs
cmp
dec
lods
gs
out
jle
dec
push
pop
sbb
shr
cmp
js
out
jl
cmpsb
sbb
push
push
into
es
fstpt
dec
mov
inc
int3
je
mov
xchg
jne
sub
jno
sbb
stos
loop
out
jmp
sbb
jae
dec
std
push
popa
insb
call
xchg
pmaxub
out
xchg
lods
xchg
gs
xchg
xlat
pop
adc
pop
sbb
fiadds
out
sub
ljmp
push
sbb
jne
addr16
scas
movsb
jnp
mov
andb
cwtl
negb
jne
adc
fmull
movntq
sub
into
lahf
mov
dec
pop
popf
xlat
ss
cmc
xchg
pop
pop
mov
addr16
and
adcl
dec
pop
push
xlat
cmpsb
and
sbb
mov
push
or
fisubrl
push
xchg
in
out
hlt
out
sahf
fistpl
mov
inc
mov
scas
pop
lahf
loop
push
adc
mov
shrl
sahf
or
std
mov
aad
sub
aam
adc
lock
jb
loop
test
fs
mov
out
inc
std
fstps
pushf
imul
scas
repz
add
out
and
push
xor
jne
ljmp
loope
incb
mov
rcl
stos
nop
imul
pop
sub
in
xchg
lods
out
mov
scas
cmp
lret
pushf
cld
cmp
frstpm(287
cmpsb
push
jno
push
outsl
sub
xchg
ljmp
push
ret
and
lcall
inc
out
call
add
loop
andl
xchg
mov
cmp
xlat
lock
mov
push
leave
push
cmp
jmp
sub
out
cmp
fs
roll
mov
xchg
out
add
dec
mov
and
add
mov
ss
sbb
test
fucomp
jae
out
push
mov
jecxz
jp
scas
stc
xchg
sbb
push
in
mov
leave
insl
pop
mov
xchg
js
in
push
ret
out
arpl
out
fisubrl
outsb
pop
push
stos
sub
insl
in
imul
mov
in
mov
je
push
les
cmp
dec
jp
add
lea
jno
inc
xchg
lahf
jge
aas
mov
ds
mov
into
mov
sbb
aaa
adc
adc
push
lahf
pop
out
pop
cmp
aaa
mov
push
xchg
pusha
lret
out
jl
hlt
jne
jbe
insl
jbe
gs
xchg
mov
outsl
pushf
mov
stos
and
and
aaa
ss
adc
adc
mov
or
inc
cmpsb
pop
pop
jle
pop
and
jle
mov
jb
pusha
out
xor
xchg
and
xor
cltd
out
insb
ret
pop
or
out
sub
jle
cwtl
addr16
out
pop
dec
iret
jl
dec
adc
out
and
ja
stos
cmp
ret
pop
adc
jle
push
pop
daa
imul
or
xchg
aam
fistpll
ror
cmp
cmc
ljmp
je
out
repnz
popf
adc
shlb
mov
jge
in
ja
test
aad
cltd
in
into
sub
inc
sub
loope
cmp
stc
or
sub
mov
loop
lahf
dec
divb
cmp
mov
out
sbb
mov
icebp
out
jo
pop
push
ljmp
mov
xor
pop
jnp
mov
ja
out
inc
or
adc
jo
gs
insb
jbe
mov
sbb
mov
and
out
add
call
jmp
cmpsb
rcll
sahf
push
cmp
out
mov
sahf
jle
jmp
out
out
jnp
fldln2
repz
ljmp
js
or
out
pop
mov
dec
rcll
cs
dec
loop
out
fcompl
cmpsl
aad
fsubr
repz
repnz
rolb
cld
iret
and
xor
xor
fsubr
dec
cmc
lock
or
aad
pusha
int3
movsl
cmp
lcall
ret
pop
jp
xchg
out
push
leave
dec
repnz
jnp
and
ss
jo
daa
cli
cmp
cmpsl
pop
inc
cld
imul
into
add
mov
scas
out
mov
out
adc
push
xor
lret
scas
xorps
out
daa
fdivs
fistpl
push
sub
xchg
inc
adc
and
in
pop
in
lods
out
dec
data16
pop
dec
inc
cmp
xchg
xchg
xchg
insl
jns
fistl
cli
mov
mov
scas
inc
addr16
int
lock
push
pop
lret
mov
aad
adc
xchg
or
stos
sbb
and
jmp
jmp
stos
xor
jbe
and
fstps
mov
jmp
pop
loop
sub
stos
test
or
ds
mov
jge
jmp
jecxz
shrl
and
aad
loope
loopne
jb
mov
sahf
leave
into
cmc
sar
out
movsl
mov
aam
jp
mov
push
mov
push
out
mov
ret
orb
clc
out
out
fst
rolb
jle
or
iret
or
repz
fadd
aad
push
sbb
jmp
repnz
mov
sbbl
ret
scas
pop
fstpt
inc
jno
out
push
pushf
arpl
and
loope
pop
test
cmc
or
roll
push
mov
loopne
scas
add
jbe
fdivr
mov
shrb
out
jno
in
cld
cli
mov
jb
popa
and
out
insl
pusha
aam
mov
mov
ljmp
out
sahf
in
dec
xor
rorl
add
xchg
pop
pop
pop
pop
or
adc
mov
rclb
out
out
cwtl
sbb
imul
nop
into
mov
movsl
mov
ret
and
lcall
in
out
insl
cld
inc
cmc
pop
and
mov
sub
adc
fcoml
xor
jno
mov
mov
out
gs
cmpsl
jge
jb
push
out
pop
push
and
push
movsl
mov
loop
rcrb
dec
std
lea
cmp
scas
aaa
jp
fprem1
push
lods
jmp
out
xchg
enter
das
loope
into
imul
mov
jae
imul
sub
lods
dec
xor
jo
test
ljmp
and
adc
mov
and
or
lret
mov
aaa
pop
mov
std
out
xor
mov
les
insb
jle
push
xor
iret
fmuls
jb
out
mov
cmpsb
mov
ret
out
xchg
inc
mov
movsl
mov
subl
test
pop
adc
ficompl
dec
out
xchg
lods
or
and
cmp
subl
scas
sbb
push
adc
jb
inc
cmc
shl
or
push
jbe
outsl
sub
lret
loope
out
lds
pop
popf
fprem
xlat
jl
pop
jns
out
push
aas
fstpl
js
and
fisttps
in
lcall
fs
imul
inc
sub
jo
jne
cmp
sbb
xor
jmp
sub
shrl
call
adc
mov
popa
lret
out
push
jb
scas
fs
das
push
out
test
jg
jecxz
int3
daa
inc
dec
das
pop
out
mov
xchg
pusha
pop
in
data16
dec
sti
out
mov
scas
out
stos
mov
jnp
popf
jg
out
add
jns
xchg
push
mov
cmp
sub
pop
xor
and
jecxz
movsb
mov
shlb
jbe
push
data16
out
and
sbb
sahf
mov
hlt
rcll
push
icebp
subl
int
add
loop
loopne
cmc
mov
xchg
in
in
out
imul
insb
cwtl
repz
js
add
jo
jecxz
or
out
sbb
lea
arpl
cmpsl
xlat
sub
or
push
lds
and
lcall
out
sbb
mov
xchg
outsl
sbb
push
xor
sbb
sub
adc
out
clc
and
sub
leave
mov
test
scas
loopne
mov
dec
leave
add
sti
daa
xor
fistl
lea
adc
push
add
stc
or
les
arpl
xor
rcrb
xchg
out
add
mov
push
push
pop
scas
pop
mov
pop
add
into
add
jle
jb
adc
ret
shlb
out
fcompl
mov
jmp
lahf
jle
jmp
mov
mov
popf
push
sub
or
cs
out
push
add
out
mov
mov
fldz
xchg
cmpsl
inc
jge
mov
lock
cli
sti
pushf
mov
ds
bound
mov
lret
jb
arpl
out
adc
mov
or
pop
dec
inc
sbb
inc
test
ljmp
mov
pusha
fwait
push
test
jl
out
jg
push
leave
lret
pop
out
push
jecxz
dec
push
out
rorl
subb
push
in
push
mov
inc
call
in
mov
movsl
out
shl
mov
cmp
mov
xchg
pop
cmpsl
jge
dec
in
cltd
fdivrl
add
xor
cmp
clc
inc
fucomi
add
bound
aaa
addr16
jge
xlat
adc
subl
mov
jle
into
pop
fsts
xorl
out
mov
out
xchg
repz
cs
inc
dec
and
sub
sbb
mov
cltd
or
inc
push
xor
repz
cmp
ss
fadd
das
arpl
inc
add
jecxz
int
movsb
dec
out
mov
jns
out
mov
je
jb
bnd
cmp
cmpsl
mov
or
xor
cmp
bswap
fimuls
out
xchg
push
xor
dec
inc
shl
xchg
loopne
jecxz
mov
scas
jno,pn
out
mov
arpl
idivl
outsl
xchg
inc
pushl
addr16
aam
mov
add
fsts
inc
xor
das
push
out
popa
in
popf
lds
jmp
pop
dec
addl
nop
out
in
in
pop
out
cld
mov
inc
pmaxsw
ds
dec
insl
inc
popa
fcmovne
sbb
out
scas
popf
xchg
into
mov
pop
inc
out
push
ss
or
mov
or
add
bnd
ss
push
popf
ret
int3
lods
push
jb
and
test
cmpb
popf
mov
in
fimuls
call
cltd
popf
fcmovb
cli
xchg
popf
mov
jns
rcrl
or
push
ljmp
in
test
inc
sub
in
out
scas
or
inc
imul
jecxz
pushf
loopne
jmp
jnp
je
jge
ds
cmp
clc
outsl
cmp
xchg
push
push
daa
popa
cmpsb
mov
push
mov
fiaddl
dec
lret
out
inc
xchg
and
mov
jns
or
stos
out
ret
xchg
xor
push
inc
cmp
xchg
fdivrl
test
pop
jg
fidivs
outsl
imul
sbb
sbb
and
dec
cmpb
xlat
fistl
fcoms
push
out
adc
int3
jae
cs
and
jge
push
lret
sbb
xor
out
popf
popa
rorb
or
fistps
out
rclb
out
in
sbbl
dec
cmp
pop
jne
movsb
in
mov
mov
out
push
sub
ljmp
sub
in
leave
shrl
push
mov
push
ja
lret
push
sbb
call
gs
pop
out
pop
and
sub
inc
push
inc
sbb
out
les
fmul
xor
cmp
adc
jb
push
mov
jae
repz
xchg
or
push
ret
mov
dec
fists
pop
push
scas
or
adc
ja
out
out
xor
imul
jge
jbe
push
dec
mov
add
add
jle
out
or
jo
cld
out
xchg
mov
xor
inc
or
data16
cmp
enter
cmp
cmpsl
push
imul
out
lock
mov
mov
ret
out
enter
sar
fildll
sub
lea
jo
sub
cli
mov
outsl
inc
ss
incb
out
andl
xchg
pop
fmuls
enter
cmp
inc
rolb
adc
ss
pop
shr
or
lret
iret
fldlg2
sub
shll
les
jne
arpl
shr
mov
das
rcrb
fiadds
out
out
sub
sub
out
mov
rclb
lcall
jae
push
inc
mov
out
push
sub
rolb
push
movsl
or
lds
les
cs
lods
loope
arpl
shrl
inc
fsubp
jmp
push
mov
scas
lods
sbb
outsl
and
daa
mov
jb
xlat
cmp
in
jb
add
xchg
out
rcrl
dec
ljmp
push
and
mov
mov
mov
ss
inc
xor
or
mov
sbb
sarl
out
jno
pusha
arpl
push
mov
xlat
loope
fistpl
mov
or
shrb
enter
xor
inc
aaa
mov
or
jecxz
inc
push
dec
out
and
dec
fisubrl
out
sub
out
aad
add
mov
jle
cs
push
inc
cltd
xchg
out
mov
mov
ljmp
pusha
sbb
shrb
out
push
jo
pop
shrb
jo
leave
lcall
ds
pushf
cmp
mov
out
repz
adc
xorb
fiadds
fisubl
jmp
jb
jg
out
add
add
dec
pop
in
mov
jge
out
xchg
and
mov
or
imul
std
or
push
mov
push
daa
in
push
js
xlat
shlb
movsl
into
mov
cmpsb
mov
adc
lods
ds
out
popl
xlat
xchg
push
loop
loope
sub
test
ret
shlb
or
fimuls
mov
icebp
sti
pop
xlat
push
in
mov
out
sarl
into
lret
in
jbe
mov
push
call
jnp
mov
add
jae
pop
fisttpl
cmc
out
incb
lcall
dec
insb
pop
gs
dec
jo
loop
clc
push
sbb
cs
out
arpl
push
jmp
adc
xor
dec
lock
pop
fnstenv
lcall
sbb
xor
clc
or
cmp
jo
mov
out
xchg
incl
call
pop
cmc
mov
mov
dec
fwait
mov
mov
call
subl
mov
ds
cs
nop
and
cmc
out
mov
out
fs
stos
mov
les
hlt
lods
push
jo
mov
fsubr
inc
dec
out
lret
pop
mov
cld
ds
gs
lods
sbb
aad
fisttpll
push
daa
mov
jmp
ds
lret
xor
rclb
xor
insb
jb
lahf
test
ds
fsubr
iret
jo
or
cmp
push
cmp
and
aaa
shlb
pushf
lods
xor
sbb
and
pop
dec
in
inc
push
daa
test
test
scas
iret
sbb
sub
adc
sub
and
cwtl
mov
popa
or
lods
jo
and
sub
mov
pop
int
mov
scas
out
cwtl
mov
cmc
inc
xchg
out
dec
add
xchg
insb
push
out
mov
inc
and
test
or
lock
cmp
lret
mov
dec
icebp
pop
mov
adc
mov
out
cmc
movsb
imul
push
push
mov
adc
jle
loope
out
mov
inc
sub
leave
imul
out
jmp
push
in
out
mov
cmc
add
mov
jp
push
out
inc
pushf
inc
inc
popa
pop
sub
out
fbld
and
jno
das
out
jge
sbb
inc
into
pop
jge
stc
lcall
ss
call
out
xlat
stc
shlb
push
cmp
lods
and
pushf
push
mov
dec
int3
loop
mov
push
mov
adc
sbb
jp
pop
jg
and
lret
jle
or
jbe
add
mov
aam
cmp
pop
jne
loop
adc
outsl
inc
ret
or
rcrb
pusha
or
les
and
sub
popf
mov
jb
xchg
or
sub
mov
cmc
xor
and
aaa
mov
mov
jmp
adc
loope
mov
out
imul
push
in
adc
imul
shl
mov
ss
or
lea
out
add
push
sbb
out
pop
fcompl
pop
and
cmpsl
inc
out
loop
cltd
lret
mov
mov
mov
lds
adc
stos
pusha
mov
ret
cmp
out
dec
mov
inc
cwtl
idiv
jo
pop
in
adc
movsl
mov
pop
jnp
in
nop
dec
cli
sahf
jb
xlat
imul
adc
stos
mov
pop
jecxz
jo
push
xchg
push
mov
adc
jo
push
inc
outsl
jno
loop
lock
out
pop
mov
arpl
out
cmpl
or
pop
and
cli
loop
dec
add
sub
add
or
or
mov
hlt
out
sub
lds
jecxz
mov
jl
test
filds
or
test
lret
aad
push
out
fwait
jb
test
jmp
pop
out
xchg
adc
sub
iret
push
and
scas
les
jmp
inc
xor
adcb
or
mov
mov
outsl
push
add
adc
dec
mov
outsl
les
jle
out
enter
gs
test
mov
test
out
push
cmpb
outsl
and
mov
mov
ljmp
xchg
addr16
imul
and
pop
out
sub
in
into
xchg
mov
out
in
add
es
add
call
roll
sahf
sbb
insb
xchg
adc
xor
adc
shlb
pop
pop
fwait
in
xchg
lret
dec
out
inc
push
or
mov
mov
add
cmpb
iret
stc
mov
sub
out
xchg
fidivs
pop
ja
dec
enter
ret
sbb
into
sub
sbb
rcr
out
mov
retw
fsubr
stc
adc
int
jne
into
out
and
pop
sbb
dec
mov
out
out
inc
or
addl
mov
out
repnz
in
je
xor
sti
in
or
jns
inc
push
adc
andb
add
pop
in
test
out
sar
xchg
call
in
jle
sahf
test
into
rcrl
adc
gs
in
imul
insb
pop
out
leave
loope
lcall
push
es
mov
lds
mov
mov
adc
cltd
push
or
out
sub
sub
mov
dec
ja
out
test
repz
or
mov
push
sbb
fcmovnu
inc
adc
in
sbb
inc
push
shl
aaa
pop
popa
out
dec
hlt
push
mov
call
inc
push
movsl
in
push
outsl
lcall
loop
out
and
xchg
movl
je
xchg
call
xchg
mov
out
mov
bound
xor
pop
notb
out
addr16
pop
es
leave
cmp
out
pop
je
or
adc
or
sbb
and
sahf
pop
out
repz
fiadds
mov
jecxz
out
xlat
fs
dec
jno
cli
lea
in
xor
push
popa
stos
and
dec
popf
ljmp
cmp
je
inc
rcrl
xor
mov
add
lock
inc
dec
xchg
or
fs
cmp
popw
push
or
or
and
setne
mov
push
das
cmp
out
aam
outsl
push
dec
into
and
jno
outsl
aaa
mov
loop
mov
jo
lea
push
dec
ljmp
mov
shr
sahf
add
mov
out
and
out
lret
xor
add
mov
pop
push
pusha
sub
jp
add
and
and
arpl
in
mov
into
out
sahf
aas
or
mov
out
pusha
fdivrs
jb
adc
icebp
aad
popa
sub
mov
xchg
cmp
pop
out
lcall
cmpsl
loopne
out
push
clc
push
adc
or
icebp
shlb
test
leave
out
lret
xchg
dec
fldenv
dec
out
or
jae
pop
mov
or
xchg
pop
popa
lret
push
pop
out
fstps
push
adc
adc
fcmovu
lea
scas
loopne
sub
mov
repnz
dec
aad
imul
push
out
mov
fmull
out
jge
dec
dec
xor
ja
out
mov
insl
loope
js
lret
fsubr
es
fistl
add
xor
test
stos
in
sbb
out
out
daa
fldt
leave
xchg
pushf
cltd
dec
aas
out
enter
ds
js
jbe
push
adc
int3
in
sahf
dec
or
in
xor
scas
mov
mov
jecxz
push
mov
scas
subl
xchg
push
scas
ficoms
loop
xchg
sbb
mov
cltd
or
jae
and
jbe
test
imul
jg
aad
push
xchg
sbb
fidivl
mov
jecxz
lcall
std
add
inc
push
out
movnti
cmpsb
gs
jecxz
out
mov
and
dec
jbe
pop
push
mov
and
and
inc
pusha
ret
ret
rolb
in
outsl
cmp
jge
fsubp
sub
jb
popf
fistps
sbb
jne
push
sbb
scas
shlb
out
or
dec
cs
push
stos
jle
test
inc
out
and
int
es
or
inc
iret
sbb
jl
and
stos
ret
shlb
sbb
cld
push
add
fs
out
addr16
loopne
xchg
sti
ds
bound
shlb
movsl
popf
stos
leave
fisubs
lret
jge
or
into
sub
out
push
adc
cmc
mov
divl
pusha
jae
hlt
cld
out
inc
sub
add
xchg
lcall
das
jno
ds
mov
ss
xor
cmpsb
push
jmp
push
out
js
xchg
xrelease
cwtl
mov
push
pop
jmp
and
lret
pusha
scas
jecxz
inc
andb
nop
or
mov
push
push
add
fistpl
jae
addr16
lods
lret
or
cmp
movsb
pop
inc
pop
and
inc
dec
es
push
dec
leave
cmp
sbb
in
in
shr
and
push
push
xorl
arpl
xlat
inc
and
sbb
outsl
cmp
mov
pusha
mov
out
lock
daa
je
adc
jmp
dec
ret
jl
imul
dec
or
mov
gs
shrb
std
mov
inc
ret
ds
test
fldenv
jle
into
or
sbb
clc
xor
pop
or
dec
aaa
test
lea
mov
push
outsl
out
fists
rcll
out
aad
jbe
lods
adc
or
aam
mov
xchg
push
push
mov
fdivr
sub
dec
dec
and
pushf
out
ret
jmp
cmp
cmpsb
pop
xchg
nop
cmp
sbb
lock
inc
pop
cmp
push
fsubrp
bound
pushf
gs
sahf
fcoml
vmwrite
out
enter
out
divb
jno
ja
inc
out
les
lret
jns
xor
negl
ret
mov
out
dec
add
in
in
ljmp
mov
out
pop
int3
mov
dec
inc
adc
fiaddl
mov
jge
iret
mov
mov
scas
scas
leave
cli
bound
lods
cmp
jnp
pop
cs
daa
dec
push
cmp
out
popf
loope
jl
sub
mov
mov
std
dec
ret
jo
enter
xor
push
jecxz
push
or
jle
in
testb
cmp
out
push
aas
add
sub
aad
xchg
push
aaa
mov
mov
imul
sub
jle
ffreep
rcl
out
leave
stos
incl
dec
out
mov
cmc
cmp
out
adc
adc
inc
rol
jo
mov
icebp
scas
xchg
shr
push
in
pop
add
cltd
rorb
sbb
xchg
mov
add
arpl
ss
sbb
mov
adc
push
or
fwait
ret
in
rolb
dec
je
daa
mov
jb
lds
sti
cmc
cmpsb
or
jle,pt
out
rcrl
mov
adc
lock
into
fdivrl
jno
add
ja
call
jns
imul
cmpsb
jge
mov
push
sbb
jle
out
mov
xchg
out
jecxz
push
pop
out
mov
out
call
jl
les
mov
mov
cld
or
jne
es
adc
xchg
dec
ficoms
xchg
rolb
ret
ret
outsl
sub
incb
jb
mov
pop
aam
in
jo
cmp
inc
or
in
pop
jo
leave
mov
aad
push
dec
out
pop
fimull
cmp
outsl
cmp
std
stos
test
leave
and
mov
pop
push
mov
mov
and
jecxz
out
xchg
pop
mov
push
mov
jmp
pop
ret
add
lret
cmp
aaa
out
or
stc
out
cltd
mov
xchg
adcl
icebp
scas
mov
cmc
and
insl
push
dec
mov
jbe,pt
dec
or
test
lds
jle
or
scas
sub
mov
xlat
insl
xor
int
sbb
out
dec
and
sbb
out
cmpb
jle
fsubrl
std
sti
shlb
arpl
sub
out
mov
cld
dec
dec
or
add
cmp
arpl
adc
adc
out
jge
mov
xchg
cmovb
jns
sub
stos
mov
pop
test
movb
push
xchg
mov
arpl
and
cmp
movsl
out
jle
lahf
dec
test
faddl
cmp
lock
cmp
sbb
xor
out
inc
mov
push
xchg
out
xchg
and
mov
pmaxsw
lock
inc
loopne
out
and
cmp
es
fnsave
mov
sbb
shlb
adc
add
into
mov
adc
insb
push
jp
fcompl
out
clc
and
call
lahf
push
fucomip
ret
xchg
dec
lea
fisttpl
outsl
jmp
cs
xchg
pusha
out
mov
xor
dec
inc
sbb
and
push
call
cli
mov
arpl
inc
enter
bnd
jp
pop
push
movb
insb
dec
out
popf
movsl
sub
adc
mov
jb
cwtl
fs
dec
loopne
insl
adc
enter
out
aas
add
jb
outsl
std
cmpl
insb
jbe
push
push
jno
movsl
sbb
cmp
adc
cld
pop
adc
mov
clc
out
test
pop
mov
out
add
scas
push
mov
dec
adc
aam
sbb
dec
mov
in
shll
pop
jle
out
jecxz
loop
daa
lret
gs
mov
in
std
jb
cmp
int
out
mov
outsl
shl
cmp
shlb
insl
sub
cltd
cmp
loop
pop
scas
test
imull
js
mov
in
fwait
add
add
out
mov
push
push
cmc
in
push
in
mov
cld
pushf
loop
out
adc
test
add
adc
div
out
jge,pt
in
mov
fsubrs
inc
es
fiaddl
sbbb
sub
push
scas
fcmovnu
ret
popa
jo
push
test
pushf
out
lds
mov
out
cli
jo
adc
lret
out
push
push
out
dec
sbb
mov
outsl
sbb
and
push
rolb
out
dec
dec
cmp
mov
lahf
es
pop
jecxz
repz
jne
mov
pop
imul
out
cwtl
inc
inc
mov
sbb
cld
call
push
adcb
int
adc
pop
jo
test
in
push
iret
es
pop
pop
out
dec
lret
or
adc
into
add
dec
mov
push
push
faddl
lods
in
into
pushf
xor
out
and
dec
daa
cmc
mov
out
pushl
xchg
pop
pop
adc
outsl
mov
inc
mov
rcr
fmul
and
dec
sub
pop
out
movsb
adc
push
mov
out
push
jnp
pop
cltd
leave
jb
stc
dec
dec
enter
lahf
out
shufps
cltd
pop
dec
stos
adc
mov
fdivl
aam
pushf
push
leave
mov
in
inc
sub
mov
repz
add
cmc
pop
out
insl
and
mov
out
imul
or
xchg
fbstp
movsbl
in
scas
outsl
xorb
adc
pusha
jo
push
out
inc
jne
cwtl
pop
mov
dec
out
bound
and
jbe
mov
outsl
adc
cwtl
pop
sbb
adc
out
loop
in
js
pop
and
test
out
pop
ljmp
mov
aas
scas
out
les
lahf
mov
mov
sub
cli
cmc
data16
push
mov
lcall
xor
xchg
mov
dec
jb
addr16
pop
dec
xchg
out
xchg
sub
xchg
and
sbb
arpl
aas
ds
enter
mov
stos
inc
outsl
addr16
pushf
roll
lret
ret
jle
lea
mov
es
sbb
jb
pop
xchg
mov
xchg
mov
lds
outsl
mov
sbb
lods
in
cmp
xchg
dec
cmp
outsl
aad
gs
test
in
add
fldz
sbb
pop
cli
sub
test
add
std
test
or
out
sub
test
mov
jae
sbb
loope
mov
adc
out
lahf
out
mov
sbb
out
add
sub
jae
xchg
mov
xchg
call
ljmp
out
icebp
and
ds
ficoms
or
leave
out
pop
or
ret
mov
dec
mov
stos
fidivs
inc
iret
mov
mov
lahf
outsl
cwtl
sub
inc
push
mov
mov
fistpl
out
fimull
adc
out
xchg
imul
andb
sbb
push
mov
imul
sbb
out
inc
add
sahf
lds
adc
out
aaa
arpl
repz
or
lea
call
ds
scas
dec
mov
sahf
pop
mov
leave
scas
pop
movsb
ja
cltd
mov
inc
add
mov
testl
fadd
fs
pusha
xchg
out
xor
pop
iret
jae
fcoms
adc
mov
inc
mov
cmp
dec
mov
arpl
addb
and
adc
stos
mov
arpl
pusha
mov
cmp
es
jns
dec
fcompl
dec
dec
xchg
ds
int3
mov
push
and
daa
or
out
test
bound
pusha
pop
pop
dec
out
ja
iret
and
sub
push
pop
inc
fbstp
les
mov
clc
jae
test
xchg
sbb
push
push
addr16
jo
dec
ds
inc
pop
cli
insl
xchg
fisubrs
movsl
out
aas
push
out
dec
in
pop
ljmp
push
fdivr
je
out
les
jmp
xor
and
negb
dec
out
mov
movsb
adc
lret
or
scas
push
sbb
out
jo
loopne
rol
outsl
shr
inc
and
sti
push
out
pop
jge
and
lcall
orb
stc
lret
mov
push
sti
pushf
push
or
jmp
jle
es
popf
loop
jo
sbb
xchg
cmp
mov
sub
xlat
xchg
xorb
aad
jp
xchg
xchg
arpl
xor
gs
mov
in
add
out
inc
shl
mov
mov
push
out
rcrl
xchg
and
outsl
mov
daa
repz
scas
sahf
push
xor
arpl
xor
out
adc
jl
push
lcall
xor
add
out
pop
push
arpl
xor
xchg
jle
lea
and
in
xchg
sub
movsb
loopne
pop
sub
movsl
dec
inc
push
mov
roll
mov
and
dec
out
inc
fs
cmpsb
pop
mov
lock
adc
or
flds
das
sub
add
push
ret
loope
out
cld
ja
adc
mov
mov
xchg
push
cltd
push
xchg
fimuls
sub
or
push
int
in
cmp
mov
ljmp
jns
hlt
xor
push
rol
movsl
leave
sbb
out
sbbl
pop
std
cmp
stos
and
cmp
inc
outsl
lret
inc
xchg
push
out
or
cmpsl
ja
xchg
or
jmp
xlat
outsl
xchg
rcr
xchg
sti
dec
loopne
dec
outsl
sub
stos
cli
adc
xchg
daa
xchg
cltd
int
add
sbb
stos
lock
or
out
jg
shrl
push
enter
push
push
fsubl
std
jo
pop
cmp
mov
cwtl
or
mov
cs
lcall
jb
outsl
add
test
pop
vzeroall
and
aaa
flds
shrl
jge
scas
and
ret
push
mov
mov
fnstsw
call
scas
out
jno
cmp
es
lret
jno
pop
pop
cmp
sub
push
xchg
xchg
out
jne
stos
push
add
and
lret
out
xchg
repz
in
mov
pop
out
clc
stos
push
dec
pop
ss
inc
mov
std
icebp
aas
out
pop
mov
out
mov
arpl
dec
outsl
movsl
shl
dec
xor
lret
mov
add
xlat
lods
cld
out
sti
scas
pop
inc
adc
cmp
lds
test
out
jl
subl
jbe
jmp
std
jge
out
push
out
ds
pop
cmp
icebp
lcall
loop
popa
sbb
lret
xor
dec
cmpsl
out
or
jns
popf
shlb
inc
dec
test
xchg
adc
loopne
push
cmpb
jge
sub
movsl
push
lahf
adc
imul
test
ljmp
fwait
icebp
test
jb
jno
cwtl
in
add
push
jo
pushl
ja
mov
jge
adc
out
add
mov
cmp
je
movsw
test
out
out
mov
lea
inc
cli
push
out
jno
clc
fisttps
outsl
aaa
shlb
fisttpl
mov
test
jb
and
fistpll
lods
mov
test
mov
cmc
sahf
cli
imul
ds
out
outsl
lret
cmpsb
xchg
fdivs
aad
pop
sub
jl
mov
insl
push
lret
jge
ljmp
xor
jne
in
dec
push
stc
and
out
je
rclb
test
ror
test
gs
push
scas
pusha
aam
sbb
mov
and
mov
mov
pushf
inc
lea
clc
out
repz
popa
xchg
or
pop
popf
xor
test
and
imul
clc
lock
pop
inc
into
int
dec
movsb
jo
dec
fidivs
in
mov
sub
xchg
add
insl
repnz
or
ficompl
inc
xchg
aas
jecxz
scas
jge
adc
pusha
xchg
repz
imul
inc
out
cli
push
dec
sbb
std
inc
fisttpll
lods
fsubr
pop
dec
testb
shlb
cmp
xchg
adc
push
fisubrl
in
adc
pop
loope
test
inc
fstpl
je
mov
push
and
enter
jmp
lcall
imul
in
addr16
jb
xchg
repz
xchg
fsubrp
ret
lds
lods
insl
into
loope
es
cs
testl
sub
lods
mov
dec
dec
push
cs
push
pop
push
out
test
stc
add
adc
test
fs
out
loope
rcrb
add
lcall
sub
mov
out
leave
repnz
cli
xchg
out
adc
or
sbb
jecxz
jbe
addr16
stc
xchg
les
mov
xlat
add
pop
push
out
call
rol
inc
outsl
imul
loopne
sahf
push
lea
stos
outsl
sub
jmp
pusha
out
sub
push
imul
scas
xchg
sub
sub
and
fidivs
fwait
xchg
mov
out
out
bound
and
mov
dec
fcoml
data16
cld
pop
leave
fstl
push
inc
adc
dec
in
sbb
sbb
xor
pop
movsb
ficomps
aad
jg
push
jo
dec
sbb
sbb
out
adc
in
push
pop
dec
adc
cmp
sbb
out
rorb
pusha
mov
jge
sbb
test
mov
inc
loopne
add
out
adc
lret
pop
or
out
add
and
aad
jp
jmp
jl
xor
out
cmp
scas
cld
and
jne
lea
out
subb
std
pop
insb
and
or
cmovo
loop
push
outsl
mov
cmc
jge
shl
dec
out
xchg
xchg
xlat
andb
je
xchg
imull
sub
and
daa
out
adc
movsl
callw
xchg
out
xor
rcrb
or
shll
adc
in
push
dec
test
out
pop
arpl
add
mov
jb
mov
mov
sbb
jo
daa
sub
or
xchg
out
push
inc
sub
xchg
outsl
and
stc
push
cmpb
push
ds
mov
arpl
sbb
out
cmp
fstl
data16
jo
cmp
jne
in
pop
mov
out
or
push
jmp
out
lret
mov
dec
mov
adc
enter
dec
out
js
shlb
clc
sbb
loope
popa
push
and
dec
je
cltd
cmp
insb
push
cmpl
mov
sub
push
jo
ljmp
mov
repz
jmp
in
sbb
cs
gs
jb
jge
aaa
in
pop
sbb
and
sub
test
mov
leave
push
test
or
cmc
lahf
lds
scas
and
ljmp
pushf
fs
mov
cld
mov
fmulp
dec
bound
int
push
lahf
ds
jp
and
sahf
mov
and
fwait
xchg
pop
pop
out
andb
xchg
add
xor
dec
or
mov
lret
arpl
bound
fwait
mulb
jp
add
cltd
cmp
pop
push
inc
adc
subb
repz
dec
daa
jb
or
or
lods
mov
add
data16
cmc
test
inc
out
cmp
pop
adc
loop
out
movsb
sbbl
out
shll
push
das
sbb
inc
ret
fs
jl
jb
ljmp
cmp
push
loopne
inc
cld
push
nop
aaa
xor
or
jb
cmpsl
push
fstl
rcll
test
dec
inc
loope
in
pop
xchg
sub
dec
int
out
fistl
es
jg
xor
mov
jnp
das
inc
out
push
lahf
subl
add
inc
bound
pop
leave
dec
notb
mov
mov
adc
setnp
shlb
enter
out
in
sub
imul
stos
es
lret
out
jae
sub
hlt
mov
jb
adc
add
cltd
std
jo
out
jns
inc
nop
or
or
aas
fs
ficomps
ror
cmpb
push
ds
add
std
sub
in
in
push
lret
out
sbbb
dec
fmull
test
jo
mov
subb
mov
add
xchg
sub
add
cld
xor
pop
xchg
add
lods
aad
push
out
in
pop
push
push
out
sub
int3
inc
sub
mov
daa
jns
rcr
out
jnp
mov
mov
xlat
je
xchg
cmc
mov
jge
dec
insb
and
imul
in
ss
and
sub
popf
and
aad
fcompl
mov
shr
fidivs
and
outsl
jmp
outsl
mov
cmpsl
sbbl
stc
int
sub
mov
or
mov
insl
out
rorb
sub
mov
call
shlb
add
in
sbb
mov
pop
into
mov
push
ret
mov
subl
out
push
jo
lcall
add
out
sbb
daa
inc
shr
ret
sub
sub
mov
jle
out
into
mov
dec
stos
and
mov
pop
fiadds
filds
outsl
addr16
add
aam
mov
popa
push
mov
fsts
lea
scas
stos
popa
gs
sub
add
sbb
out
jmp
dec
xchg
sbb
mov
hlt
out
xor
movsl
into
jecxz
xor
xchg
mov
adc
out
jmp
imul
sub
out
inc
hlt
adc
adc
sbbb
xorl
xchg
mov
inc
in
scas
repz
sub
call
inc
dec
mov
lahf
jne
pusha
pop
sbb
dec
test
add
cli
std
rorb
dec
ja
dec
add
out
push
insl
cs
push
ljmp
dec
xchg
mov
repz
and
out
sbb
movsl
and
out
sub
push
adc
in
mov
ds
fsts
sub
loopne
push
out
and
jl
cmpsb
aas
cld
push
mov
out
insb
adc
cwtl
daa
inc
out
sub
push
jmp
popf
cs
xchg
sub
outsl
or
stos
mov
xchg
or
gs
lods
fs
mov
call
shrb
or
out
cli
xor
fldlg2
sub
in
std
adc
scas
stos
ja
push
mov
pop
out
call
cwtl
xor
dec
loope
out
adc
lcall
scas
call
out
inc
pop
add
sub
inc
shrl
loopne
mov
push
add
fs
popf
out
ja
cmp
inc
push
fistps
jno
repz
fimuls
sahf
mull
ss
jbe
adc
jecxz
in
and
mov
leave
cwtl
cmp
out
cmpsb
mov
fsubrl
out
cli
andl
scas
and
in
jl
rol
mov
mov
out
in
adc
sub
mov
pop
aam
pusha
in
loopne
out
out
cmpsb
push
aam
pop
lods
pushf
mov
jb
hlt
mov
xchg
in
pushf
mov
xchg
out
movsb
push
ds
out
imul
mov
inc
xor
out
movsb
outsl
adc
add
fsub
fwait
lea
in
dec
push
fcmovbe
xor
fldl
jb
push
out
dec
mov
jo
pop
popf
dec
xor
out
insl
imul
in
out
aad
pop
dec
js
add
xchg
scas
mov
ss
and
outsl
outsl
mov
movsl
pop
out
sub
imul
pop
adc
sti
and
in
xor
in
sub
ljmp
out
xorl
jbe
pop
movsl
mov
dec
test
jbe
mov
scas
cmp
xor
out
mov
mov
sbb
std
cmp
test
dec
jge
aaa
iret
jno
dec
push
std
cmp
sbb
fnstsw
pusha
insl
fcmovnu
sbb
or
pop
fisubrs
out
mov
cmp
pop
jo
popf
push
mov
jae
out
daa
fisubrs
pop
rcrb
in
jle,pn
dec
std
scas
sub
push
and
aam
lods
popf
scas
fldcw
cmpsb
mov
lods
and
test
add
std
mov
push
mov
gs
dec
std
pop
in
pop
dec
out
rorl
mov
xchg
out
jge
jecxz
rcrl
xorb
scas
lock
scas
imul
jbe
push
gs
mov
stos
ret
rcll
ficompl
out
xchg
std
add
dec
out
and
fwait
arpl
out
inc
jle
fs
mov
lahf
aas
pushf
jbe
mov
adc
inc
mov
push
outsl
loope
cmpsl
imul
ret
fdivrl
add
jle
jb
or
ja
xor
out
cmp
jmp
or
or
test
or
out
and
mov
push
jle
paddw
xchg
add
push
xor
or
repz
push
inc
hlt
ret
imul
movsb
gs
inc
sub
xchg
fcom
loope
cmpsb
sbb
hlt
sub
outsl
xchg
orl
mov
add
lcall
out
mov
in
add
xchg
rorl
cld
jbe
jmp
sub
adc
jno
repnz
lahf
out
lea
pop
rcl
aam
xor
xor
xchg
and
daa
sbb
and
fldenv
scas
inc
gs
test
lcall
sbb
and
cmp
mov
mov
sub
add
call
out
adc
ds
lock
mov
jb
stos
out
or
fsub
push
bound
int
jmp
mov
gs
pop
pop
fmul
sub
dec
cmpsb
xchg
in
movsl
in
push
pop
mov
mov
push
sub
rcl
pop
push
out
pop
xor
fs
mov
outsl
fldt
mov
inc
xchg
loope
shrb
mov
jbe
icebp
daa
xlat
loop
lcall
lods
call
or
stos
aad
imull
mov
sti
pop
cmp
mov
mov
shlb
out
stos
pop
out
jns
sbb
out
inc
cmp
mov
mov
sbb
das
pop
push
mov
lock
or
inc
out
packssdw
call
cmpb
out
jns
bound
push
cwtl
loopne
pop
mov
sbb
mov
dec
push
test
cld
shl
or
xchg
sub
rcrl
pop
sbbb
sub
out
iret
fsubrl
jo
xchg
jmp
mov
cmp
std
dec
fstl
jo
dec
insb
sbb
cmpsl
call
push
push
or
inc
scas
inc
fsubrl
std
xchg
sti
mov
fwait
jo
out
sbb
jle
mov
imul
mov
add
insb
sbb
xchg
jmp
push
cmc
je
push
mov
cmpsl
flds
clc
dec
push
ljmp
lods
imulb
out
out
loopne
push
mov
out
movsl
lret
dec
in
or
cmc
inc
into
cld
icebp
add
jge
popf
adc
cmp
sub
mov
mov
outsl
push
out
lock
add
repnz
mov
daa
insb
movl
jne
jae
sarb
in
or
shlb
or
mov
scas
ret
cmp
into
push
cmp
mov
imull
es
out
sahf
sbb
jle
push
fsubl
mov
jb
mov
inc
mov
push
out
aas
jbe
nop
jg
inc
out
dec
jmp
insl
and
jno
sbb
addr16
jp
in
out
mov
mov
push
out
fisttpll
js
ret
cmpsl
mov
xor
es
out
add
addr16
outsl
pop
pop
mov
rolb
pop
rorb
or
test
jp
lret
mov
cmp
out
pusha
mov
xor
xchg
sbb
decl
div
cli
cltd
and
int3
mov
cmp
jbe
lock
cltd
out
in
adc
cmc
push
mov
rcl
xlat
mov
pop
out
stc
fadds
cltd
js
out
xor
or
xchg
lret
jbe
fimull
inc
mov
loop
fsubs
insb
aaa
push
outsl
or
imul
pop
scas
enter
out
mov
inc
in
out
in
add
jo
inc
fdivr
dec
dec
and
inc
jb
jp
xor
into
pop
pusha
cmp
adc
cmp
cmc
add
inc
lods
mov
insl
mov
pop
inc
dec
push
dec
movsb
or
aad
cltd
scas
inc
outsl
adc
push
add
out
lea
test
mov
fildl
in
push
inc
rolb
jbe
testl
out
sbb
cwtl
out
pop
dec
mov
out
mov
jg
cmp
lret
cwtl
out
lods
lcall
out
dec
fsubs
sti
lock
pop
sbb
jp
push
push
xchg
stc
ret
or
sub
out
xchg
inc
andl
jb
std
jae
jmp
dec
js
fnstsw
and
add
add
aas
jns
mov
sbb
daa
addr16
call
or
cmp
mov
out
arpl
sbb
mov
into
icebp
js
out
dec
shrl
lea
fisttps
mov
add
or
and
rclb
addr16
xor
imul
out
jb
test
addr16
lcall
cmp
inc
inc
xor
test
or
or
pop
jnp
ljmp
rcrb
mov
push
mov
popa
dec
inc
add
sub
roll
xchg
out
push
out
in
mov
dec
mov
pushf
pop
daa
dec
repnz
jno
testl
pusha
loop
in
mov
shlb
push
pop
fisubrl
leave
and
out
cmp
fiadds
dec
out
test
fcoms
les
and
fdivp
out
ret
push
push
sti
outsl
mov
sub
cmc
pop
inc
in
adc
out
out
xor
cmc
jmp
std
sbb
loopne
mov
out
int3
or
shll
out
stos
push
push
fwait
stos
repz
dec
push
pop
iret
adc
hlt
jne
cwtl
cmpsb
cmp
outsl
xchg
mov
sbb
pop
out
sahf
inc
shlb
inc
lret
jbe,pt
push
inc
ltr
and
xchg
xchg
sub
out
mov
mov
loopne
adc
iret
lods
out
or
push
cmp
push
sbb
inc
loopne
pop
imul
cmpsb
dec
or
mov
and
ficompl
jne
mov
or
xchg
test
fidivs
or
cmp
pop
lcall
imul
dec
add
es
std
sbb
jp
push
or
loop
aam
jo
insl
stos
and
cmpsb
ljmp
fmul
test
lret
push
out
cmp
ss
cld
outsb
pop
push
mov
out
iret
frstor
std
mov
stc
dec
pushf
gs
dec
icebp
stos
push
fsubrp
out
pusha
add
lret
std
hlt
adc
in
lea
cwtl
scas
and
push
inc
inc
and
pop
call
fisubrs
insb
dec
push
out
aam
fstpt
jns
inc
mov
lret
cs
ds
sub
into
add
inc
pop
jo
or
xchg
in
xor
jle
sub
mov
testl
ja
pushl
jg
cli
loope
test
pop
inc
fs
enter
jns
pop
movsl
pop
push
push
in
int3
inc
fldt
sahf
out
dec
push
push
cmpsl
dec
cmp
and
sbb
int
xchg
sub
mov
mov
mov
mov
add
xchg
in
nop
sbb
test
pop
scas
mov
mov
fsubrp
mov
out
sbb
pop
popf
addr16
mov
cli
int3
mov
mov
cld
pop
scas
ret
mov
xchg
insl
out
dec
ss
push
push
and
jmp
or
shll
out
inc
into
lds
in
out
pop
cli
dec
push
leave
test
stos
cmp
inc
shlb
out
dec
cmp
mov
mov
ret
negb
sar
xor
jo
int3
xor
dec
movsl
fdivl
data16
in
gs
daa
jno
dec
pop
sub
std
addb
jb
xchg
xchg
out
out
movsb
hlt
lahf
or
test
jg
push
sub
pop
pusha
jl
in
push
out
sub
leave
xlat
add
xor
insb
or
xor
jb
mov
stos
mov
push
push
repz
mov
push
inc
inc
xchg
pop
inc
mull
loop
out
and
popf
pop
push
in
out
sub
push
inc
lock
pop
mov
sub
jge
neg
dec
xchg
ret
mov
cmp
aaa
mov
mov
inc
ds
or
aad
leave
loope
std
push
jge
xchg
add
cli
inc
pop
mov
out
pop
pop
cmpsb
shrl
xor
out
cmp
xchg
push
ja
jnp
xor
push
jmp
cmp
aaa
out
les
movsb
sub
dec
cmp
sbb
pop
dec
in
mov
lock
mov
and
mov
into
out
inc
jge
sub
dec
popa
dec
out
stos
add
lods
decl
inc
cmpsb
es
leave
das
push
outsl
cmp
inc
loopne
movsb
sub
cmc
std
xchg
mov
stc
sub
sub
or
jns
adc
xchg
int
sub
mov
mov
xor
insb
int3
sub
inc
in
sub
loopne
outsl
lret
dec
in
sbb
insb
jo
aas
mov
sub
jb
arpl
out
fists
xchg
push
and
data16
or
mov
pop
mov
push
mov
cmc
dec
pop
or
test
lahf
jb
add
sub
push
cmc
pop
mov
repz
ret
aas
pop
insl
dec
sbb
out
adc
cltd
out
mov
sbb
mov
and
mov
bnd
inc
xchg
sbb
mov
xchg
mov
cltd
or
push
dec
jmp
jecxz
out
pop
and
in
pop
jb
push
sbb
mulb
push
add
jb
push
hlt
fcoms
jae
mov
inc
scas
sub
in
es
insb
loopne
leave
jo
inc
push
mov
out
mov
and
int3
xchg
xchg
scas
mov
hlt
outsl
out
cltd
add
pop
outsl
pop
data16
xchg
test
mov
stc
adc
loop
jae
mov
loop
xchg
push
mov
cmp
xchg
or
stc
popa
mov
push
out
sub
inc
fwait
aas
out
add
mov
sbb
mov
lock
faddl
mov
mov
loop
dec
sub
dec
mov
pop
and
shll
into
add
push
out
mov
int
shll
jecxz
mov
jle
dec
scas
bound
adc
sub
jne
pop
stc
pop
addl
push
add
mov
dec
pop
stos
jb
xchg
stos
adc
loope
jmp
lea
scas
add
mov
jle
fs
inc
cmc
add
sub
jbe
scas
je
adc
mov
add
jge
enter
out
push
ss
js
mov
or
xor
aad
jb
push
sub
aam
pop
lcall
mov
aas
pop
mov
lock
and
inc
aam
movb
lds
not
out
push
js
fstpl
stc
cmc
enter
dec
xor
aam
and
movsl
add
fwait
mov
adc
xlat
call
out
jnp
push
adc
cmp
mov
aam
adc
mov
stos
mov
pop
jl
inc
stos
scas
or
sbb
out
push
cmp
jne
ret
jo
hlt
or
fwait
add
outsl
mov
loop
rolb
xchg
cwtl
pop
or
out
jnp
ret
and
mov
jo
pop
xchg
sub
loop
fildll
shlb
dec
lret
ret
adc
push
in
jno
adc
mov
push
clc
mov
mov
sub
mov
xchg
inc
jo
leave
add
negl
mov
mov
jl
xchg
arpl
or
inc
out
adc
add
xchg
mov
in
xlat
mov
adc
out
and
and
dec
xor
fdivrs
shr
mov
jmp
stos
or
rcrb
sub
sub
and
pop
jne
pop
mov
inc
out
shlb
mov
rolb
outsl
pop
cmp
pop
cltd
shrl
out
cmp
mov
cmpb
int3
cmp
cmpsl
outsl
and
sbb
test
scas
push
adcb
std
mov
test
xor
out
inc
icebp
jmp
call
xor
cmpsl
sbb
gs
adc
xchg
out
jle
in
xor
lods
mov
inc
cmp
pop
rclb
push
pop
call
lret
loope
jo
lcall
das
sub
fwait
push
push
and
sbb
jmp
out
mov
enter
jecxz
fstps
dec
jmp
stc
popf
xchg
mov
or
cld
cmc
mov
ret
out
sub
daa
outsl
jns
mov
out
pmaxsw
pop
jnp
aam
cltd
es
pushf
test
lret
out
pop
or
jne
jg
dec
jp
mov
jecxz
dec
lret
sub
add
dec
push
or
mov
out
push
ret
lock
imul
sub
dec
mov
mov
and
out
cmp
jecxz
mov
das
scas
sbb
pop
xor
scas
imulb
jge
sbb
and
fmull
out
or
movl
popf
mov
testb
push
out
shrb
xor
mov
lret
into
mov
cwtl
mov
in
mov
mov
cld
fcoml
xchg
call
out
pusha
cmp
push
xchg
cwtl
outsl
xchg
adc
dec
shlb
push
lret
mov
push
dec
out
adc
in
popf
sahf
into
gs
and
add
insb
cs
repnz
xor
xor
sahf
sahf
adc
sub
ret
popa
adc
shrb
imul
fidivl
mov
orb
mov
sti
shlb
pop
jp
jg
mov
mov
push
cmovno
add
cmp
mov
test
jmp
out
push
jmp
xor
mov
pop
mov
mov
add
mov
stos
out
imul
movsl
pushf
out
pop
push
push
pop
ret
in
aas
xor
inc
mov
imul
sub
jbe
add
adc
pop
repz
mov
adc
pop
mov
popl
add
push
dec
dec
mov
fcomip
lods
out
jb
push
les
popa
or
jmp
cmp
mov
imul
pop
xchg
mov
sahf
cmpsl
mov
lods
scas
aaa
loopne
imul
inc
sub
clc
sub
mov
out
cmpsb
push
movsl
cli
pop
sti
mov
inc
sbb
and
imul
xor
enter
movsl
mov
xchg
mov
dec
mov
and
jmp
mov
sbb
jge
push
sbb
xchg
sub
ss
jnp
push
jno
vexpandps
movsl
andl
adc
mov
fldt
and
sub
mov
xchg
inc
out
bound
sub
pop
and
ljmp
jg
xor
out
jle
imul
int
xor
shr
jmp
add
jb
xor
add
pop
fsubr
aam
out
xlat
or
leave
pushf
ja
out
test
pop
out
sbb
pop
lret
shr
int
fimull
or
nop
ljmp
adc
sahf
int3
aad
cmpsb
cltd
adc
pop
scas
xchg
pushf
inc
aad
fcmovbe
stos
iret
out
fistps
mov
ljmp
popa
push
lods
pop
jo
lds
mov
mov
mov
out
inc
cmp
lcall
popa
mov
xchg
xor
sbb
fdivl
adc
popf
out
testl
pusha
mov
std
scas
mov
add
or
xor
xchg
xchg
xor
mov
push
out
jle
ret
xorl
out
xlat
xchg
ret
pop
fs
push
jo
pop
pop
push
in
fldl
sub
bound
insl
cs
shrb
out
cmp
outsl
push
loop
enter
pop
out
into
loope
or
add
adc
stos
mov
test
sbb
int3
or
call
or
push
std
insl
sub
cmp
popf
fistpl
and
lock
movsb
cmp
scas
mov
mov
jns
cmp
jecxz
stc
mov
mov
cmp
mov
scas
insb
imul
lret
adc
loop
lods
ret
out
gs
mov
cmp
les
pop
inc
outsl
pop
sbb
push
sbbb
jge
aam
lahf
and
imul
sbb
and
leave
xlat
testb
test
std
movsb
scas
dec
mov
add
popl
stos
outsl
inc
mov
mov
ljmp
inc
cmovnp
push
lcall
pop
mov
or
jo
out
push
hlt
or
mov
popf
out
and
movsl
std
pop
push
out
in
dec
lret
pop
cmp
inc
sub
inc
inc
push
push
mov
push
out
and
pop
in
and
mov
out
stos
ljmp
jo
ret
test
ljmp
push
and
jge
or
cmc
fcoms
lds
pop
imul
push
stc
iret
shlb
out
mov
inc
cmpsl
pop
in
dec
out
fildll
mov
out
adc
outsl
sub
in
add
shrl
dec
dec
xor
xor
cmc
mov
cmp
adc
pusha
out
insb
sub
in
sbb
hlt
inc
inc
mov
jo
out
iret
push
and
popf
fiaddl
lcall
scas
pusha
mov
ret
sbb
adc
push
xor
mov
mov
jbe
das
cld
jno
xor
pop
gs
out
push
xchg
test
and
scas
out
xchg
pop
cmp
ret
out
or
pushf
jle
ret
pusha
fnstsw
mov
jmp
cmpsl
jnp
jae
sarl
mov
mov
ret
inc
or
imul
mov
inc
jle
mov
stc
out
sub
fwait
push
sahf
add
clc
add
dec
dec
out
jmp
push
inc
jb
mov
cmpsb
repnz
jne
xchg
jns
jmp
cwtl
out
cmpsl
sbb
into
out
inc
aam
rcl
push
out
mov
test
clc
cmpsb
jg
and
mov
lds
xchg
scas
mov
test
out
xchg
add
mov
out
stos
daa
inc
ljmp
and
jno
adc
loopne
iret
cmp
xchg
psrad
mov
cmpsl
or
pop
sbb
aas
outsl
push
pop
add
cmpsb
mov
out
adc
in
loope
std
mov
jae
gs
jecxz
out
mov
scas
lret
out
into
sbb
push
mov
cmpsl
sti
out
xchg
out
je
sbb
jo
insl
inc
mov
cli
insl
lcall
fmul
shl
mov
fbstp
jne
aam
out
sub
inc
mulb
xchg
cmpsb
loop
imul
adc
fs
fdivs
cmp
es
out
push
clc
popa
xchg
loopne
inc
jmp
sub
leave
pusha
mov
cmc
jae
jmp
inc
cmp
adc
cwtl
ss
imul
cmc
push
in
dec
fimuls
in
xchg
pop
mov
insb
stos
leave
and
ret
dec
sahf
mov
fsubrl
add
inc
sarb
mov
mov
or
out
mull
sbb
xchg
out
jl
sbb
inc
jne
or
in
jo
mov
popf
shr
test
jns
out
sbb
xchg
cmp
fcoms
mov
movsl
inc
out
lods
gs
pop
jge
dec
js
je
jecxz
imul
push
cmc
add
and
shrl
out
enter
rolb
out
mov
sbb
fsubrp
adc
loop
das
jg
je
movsb
mov
stos
fimuls
cmc
testl
cmc
push
lret
fadd
push
test
int3
mov
sub
pushf
test
mov
jg,pt
push
push
push
and
fucomp
pop
sub
or
dec
and
shll
push
mov
inc
mov
ss
call
dec
inc
mov
out
fildl
lods
ret
out
mov
xchg
fbld
mov
inc
lea
les
xor
mov
int
xor
xor
loopne
out
mov
inc
out
pop
push
cmpsb
jmp
dec
test
dec
mov
xor
mov
jg
rcll
lods
sbbl
sub
pop
and
sbb
rep
pusha
inc
scas
or
dec
mov
xor
clc
fs
xchg
lods
rclb
adc
stc
and
lock
jle
pop
push
jecxz
out
inc
mov
cmpsb
push
hlt
fstp
jns
stos
push
dec
inc
out
sub
dec
cmpsl
push
gs
xor
dec
jb
jo
test
in
mov
jecxz
sub
out
addr16
ret
pop
xchg
out
testb
mov
sbb
rol
push
cli
lock
loopne
into
sub
std
mov
insl
and
out
xor
mov
push
daa
inc
out
xor
cmp
dec
or
shrl
sbb
movsb
sub
outsl
dec
shlb
fstpl
out
das
or
sahf
cmc
test
out
std
jno
jb
cwtl
sbb
and
out
fsubl
or
and
inc
std
sbb
pop
sub
es
outsl
out
inc
ss
popf
jge
in
cmp
dec
nop
test
pop
mov
icebp
mov
sub
loope
add
jns
sbb
ljmp
mov
aas
out
inc
mov
mov
mov
lcall
aaa
and
insl
out
jmp
int3
ret
sbb
adc
jnp
rep
push
out
popf
scas
xchg
clc
mov
shll
mov
push
jp
pop
pusha
in
jno
shr
add
dec
dec
sbb
sbb
push
fucomp
testb
pop
out
adc
insl
or
mov
daa
jecxz
sbb
pop
ret
out
je
jg
mov
int
sub
out
ds
push
out
sbb
or
push
pop
inc
test
sub
stos
outsb
fsub
fcos
pxor
loope
arpl
sbb
bound
jecxz
mov
pop
fbld
sub
out
jge
mov
mov
in
inc
jge
jne
push
jmp
int
ljmp
pushf
add
mov
or
mov
rorl
in
or
cmpsb
test
out
out
or
pop
neg
add
adc
mov
sub
sub
add
inc
out
push
test
ror
imul
out
pop
insl
int
lret
or
fsubs
pop
mov
test
fstps
out
fs
iret
fidivrl
stos
mov
sub
ds
in
fsubrl
dec
fwait
sahf
shl
xor
test
hlt
je
sbb
or
mov
mov
cltd
pop
jnp
cmpsl
out
ss
push
pop
or
push
scas
int
pop
or
out
inc
imul
and
lahf
in
cld
mov
xor
out
scas
daa
test
scas
ja
out
mov
inc
insb
leave
insl
push
or
dec
sub
pop
scas
sub
xlat
loope
lret
sub
fldl2t
push
mov
push
and
ror
movsl
cmc
imull
xorb
sbb
mov
movsb
xor
add
outsb
push
mov
dec
jmp
leave
sahf
push
add
sbb
pop
jb
cltd
pop
cmpsb
jbe
cmp
mov
loopne
test
and
push
push
mov
and
out
jg
cmp
xor
sub
adc
xchg
sub
and
xor
out
pop
rolb
movsl
mov
add
out
sar
fcom
cli
ret
xor
mov
cmpsl
loope
out
sbb
add
out
cld
test
mov
jnp
aad
les
fldenv
les
out
push
dec
cmp
sub
aad
insl
cmp
mov
movsb
xchg
imul
jl
es
cmc
popa
jle
mov
lods
cltd
sub
xchg
xor
xor
mov
arpl
sti
fs
sbb
push
cld
push
outsl
pop
movsl
mov
out
fsubl
fdiv
mov
fiadds
adc
hlt
out
push
gs
fdivl
push
jle
add
mov
sbb
push
out
xchg
sbb
int3
insl
out
mov
sub
out
pop
cmp
mov
xor
out
adc
mov
mov
inc
out
jns
dec
mov
rorb
out
popa
in
fsubrl
ret
inc
out
pop
in
add
test
out
sub
into
fsubr
aam
pop
loopne
popa
subl
ret
lcall
stc
les
gs
int3
xor
dec
and
lods
cmp
adc
or
jo
in
pop
lret
xchg
fs
int3
shl
lds
mov
out
sbb
pop
jno
out
inc
add
jecxz
add
or
enter
test
lret
int3
sub
into
xor
fstl
add
out
jl
inc
mov
fiaddl
dec
mov
mov
jg
inc
cli
shr
jle
dec
cmp
sar
out
fst
sarb
sub
movb
add
or
gs
pusha
sbb
loopne
lahf
sub
inc
daa
mov
repz
jge
sbb
sub
xor
mov
inc
sub
mov
out
jmp
or
pop
out
push
add
cmpl
inc
lods
and
test
cmc
or
push
mov
lret
jne
shrl
out
popf
push
sbbb
mov
clc
mov
lds
neg
xchg
out
jecxz
lret
clc
insl
inc
fsubrs
std
cltd
and
cmpsb
cmp
dec
jo
pushf
mov
cmp
movsl
xchg
push
out
sbbl
xor
stos
pop
or
sbb
ret
xor
mov
loop
push
jbe,pn
sub
call
arpl
ds
inc
mov
adc
sti
filds
pop
jno
loope
jb
add
sbb
aaa
outsl
sbb
sub
xchg
pop
dec
into
es
sbb
jno
pop
rorb
stc
shl
adc
roll
ret
push
fucomip
lea
xor
sbb
out
jne
out
in
dec
cmp
out
sbb
xchg
add
andb
add
out
cs
xchg
cmp
fldenv
dec
mov
xchg
ss
mov
jmp
sbb
dec
mov
mov
push
adc
es
lret
sarb
cmp
loope
out
addl
cltd
add
loope
out
mov
xchg
lods
aaa
int
leave
out
in
into
cmp
adc
mov
adc
cwtl
cld
mov
je
repnz
mov
lret
lods
adc
pop
sub
xor
sbb
cltd
out
fchs
sub
add
adc
push
mov
clc
adc
xchg
mov
pop
sbb
shr
test
dec
fsub
adc
adc
mov
sti
rcrb
jo
xchg
fimull
xchg
or
cmp
gs
xor
dec
outsl
ljmp
mov
push
stos
int3
push
xor
ds
out
xchg
sub
ror
insl
sub
mov
pusha
rolb
pushf
sbb
shl
and
out
test
sti
cmp
loop
pusha
inc
pushf
pop
mov
sbb
pop
dec
mov
jb
insl
push
js
data16
pop
sub
clc
aaa
pop
shlb
out
cmp
xchg
fistpll
insl
popa
or
and
leave
into
movsb
dec
jo
rcr
push
push
in
push
push
inc
scas
xor
cli
out
or
jo
loope
test
mov
cmp
push
jb
in
dec
stos
pop
push
xchg
and
cmp
sub
mov
je
lods
push
out
loop
jl
in
jle
and
lds
inc
and
lret
inc
sub
in
sub
icebp
addr16
fimull
clc
stc
push
daa
iret
mov
shlb
pop
ja
insl
push
xchg
cmp
push
push
lret
lods
out
insb
sbb
cmpsl
or
loop
out
push
mov
mov
jnp
sbb
xchg
jno
push
rclb
mov
popa
adc
in
pop
das
lds
gs
iret
mov
in
pop
add
xchg
dec
and
pusha
xor
in
adc
cltd
clc
out
push
notl
xchg
repz
jecxz
pop
add
push
push
leave
jmp
popa
jge
mov
in
mov
pop
xchg
jl
cmp
js
out
push
and
mov
mov
out
adc
insb
dec
frstor
std
cmc
pop
in
or
sub
pop
nop
jae
repnz
jo
mov
mov
jmp
or
lret
pop
fwait
xchg
movsl
pop
cmp
iret
jbe
ds
xchg
push
in
out
sbb
mov
fnstsw
scas
inc
out
ja
aaa
cmp
sbbl
lret
or
push
or
jae
mov
mov
jmp
lea
fisttpll
sahf
xor
fsubl
jo
add
sbb
mov
sti
pop
outsl
mov
inc
or
xchg
ret
es
sbbl
adc
or
mov
aaa
das
hlt
push
jnp
out
rcrb
cltd
sbb
iret
imul
fucomip
xchg
cmp
clc
addb
out
push
and
mov
jnp
inc
xor
cld
imul
jmp
outsl
imul
push
daa
lret
jno
scas
mov
push
lods
jmp
out
sbbl
pop
mov
gs
xor
mov
fsubr
adcl
xchg
ret
xchg
inc
jge
es
cmc
gs
add
xor
out
fs
inc
jnp
adc
xchg
push
mov
gs
dec
sub
cmpl
pop
inc
out
mov
adc
xchg
test
out
push
push
dec
xor
cmp
push
adc
out
out
xchg
in
mov
xlat
inc
stos
adc
out
xchg
jmp
out
rcrb
movsl
test
outsl
scas
rolb
insl
std
xchg
push
into
xchg
cli
ljmp
cld
sti
mov
mov
xlat
xchg
outsl
sbb
inc
rcl
subl
pop
jns
adc
add
out
jbe
dec
mov
jmp
jle
call
pushf
mov
test
push
lods
adc
jb
std
sbb
sub
movsl
inc
mov
sbb
dec
leave
popa
sub
push
xor
fisubl
add
sub
ljmp
xchg
xlat
pop
xchg
adc
out
movsl
jnp
roll
pusha
sub
pushf
xchg
outsl
mov
popa
cmp
mov
mov
lcall
lods
mov
cs
insl
xor
inc
push
xchg
sbb
push
mov
jae
out
jge
iret
nop
jno
cld
ss
cmp
inc
cmp
mov
jo
imul
test
js
out
icebp
fwait
jns
mov
cmp
dec
insb
out
out
movsl
hlt
push
sbb
mov
xchg
dec
pop
outsl
push
mov
xchg
mov
out
out
sbb
lock
pushl
lcall
out
jb
xchg
xchg
push
push
ret
fisttps
jnp
test
mov
out
ret
mov
and
cmp
loop
and
jns
and
gs
movsb
or
jmp
pop
sbb
mov
xchg
popl
inc
mov
add
xchg
jns
in
scas
sub
loope
jae
or
sbb
into
mov
mov
test
scas
in
sbb
dec
sbb
aad
out
mov
out
push
call
xor
push
mov
pop
bound
and
data16
xchg
roll
mov
jge
aad
mov
inc
out
lock
lret
cmp
pop
cmpb
sub
adc
jo
add
adc
mov
xchg
jge
mov
rorl
out
and
enter
fadd
add
out
out
or
xchg
mov
mov
std
adc
push
sub
jp
into
in
bound
mov
cld
and
jo
adc
adc
add
outsl
dec
push
stos
cmpsb
add
push
pop
dec
cmpsb
ljmp
mov
inc
out
mov
adc
adc
into
xchg
gs
push
leave
mov
rcrl
repnz
ret
shrb
jns
lcallw
cmp
sub
pop
scas
rcll
fsts
out
movsl
mov
mov
sbb
mov
push
jge
je
jno
and
xchg
dec
daa
xor
shl
pop
test
es
cmpb
mov
out
mov
clc
add
popa
das
jo
sbb
sub
imul
test
into
cmp
inc
ret
mov
rcrl
clc
push
inc
out
adc
push
ret
jo
sub
fistl
orl
int
mov
stos
jg
out
imul
cmp
out
ljmp
push
out
jnp
and
out
subl
fisttpl
or
mov
scas
xor
imul
or
rorl
std
imul
dec
rorb
xchg
xchg
outsl
jmp
cwtl
jg
fmuls
fucomip
cmc
jo
inc
fdivrs
fldenv
and
lcall
jle
mov
out
jns
inc
adc
pop
cmp
dec
imul
sti
ljmp
out
xor
in
adc
pop
out
lea
and
or
xorl
daa
dec
loop
mov
mov
cmp
in
xchg
outsl
cmp
dec
or
push
out
leave
pop
or
out
xchg
jb
or
inc
xchg
out
pushf
dec
insb
dec
fsubr
add
out
xor
and
and
lods
aad
das
rcll
out
pop
push
test
scas
push
sahf
add
pop
push
jns
mov
inc
push
loopne
ljmp
addl
xor
out
or
xchg
jae
dec
rol
out
jmp
mov
mov
or
cltd
ja
cmp
or
je
aam
dec
mov
movsl
iret
cmp
dec
adc
jns
push
lahf
cmp
les
sbb
fsubr
ret
das
jecxz
mov
mov
nop
push
jge
mov
xchg
mov
jo
mov
test
cmp
inc
or
mov
mov
cmp
loopne
cld
mov
mov
jnp
or
or
and
into
lds
jae
fdivs
movsl
fidivrs
sbb
and
ds
cmp
jle
mov
fnsave
xlat
sbb
icebp
mov
add
push
cmp
jmp
sahf
ret
mov
out
mov
sbb
push
out
popa
and
rcrb
aaa
mov
mov
add
cwtl
jbe
fistps
pop
jo
xor
scas
xor
repnz
pop
pop
push
lds
mov
sub
out
jecxz
jmp
pop
pop
out
dec
and
xor
sub
cmc
loope
mov
sahf
stos
fwait
mov
out
imul
popa
adc
jmp
nop
sarl
xor
jle
adc
cmp
dec
mov
out
add
mov
stos
mov
ss
adc
ja
add
jecxz
je
dec
les
adc
ret
mov
add
in
lods
out
mov
inc
jmp
clc
test
shll
scas
adc
inc
adc
cmp
mov
cmc
ljmp
inc
bnd
and
fstpt
out
push
xchg
dec
ljmp
mov
push
jle
add
push
enter
out
mov
stos
ret
sbb
pop
dec
cmp
rcr
insb
stos
mov
out
jne
mov
out
mov
fs
out
pop
xchg
adc
daa
out
add
out
es
pop
and
sub
dec
pop
into
pop
push
mov
out
testl
pop
pop
fmul
fwait
push
mov
cltd
pmullw
xchg
jle
mov
ret
pop
clc
out
lret
ljmp
mov
fimull
push
scas
repz
lret
out
dec
lahf
push
test
xchg
fwait
or
daa
outsl
mov
insb
loop
push
lahf
lret
mov
sbb
out
xchg
and
jae
cmp
sub
aam
adc
cltd
mov
and
jb
xor
inc
stc
mov
dec
aam
cmp
bound
mov
gs
aad
mov
ficoms
out
stos
repz
xchg
imul
inc
fdivrl
jo
lahf
jmp
andl
in
aas
adc
fisubrl
out
push
adc
inc
pop
lret
dec
scas
inc
rclb
mov
lods
mov
and
mov
xchg
mov
push
sub
and
out
mov
sar
pusha
fistps
mov
repz
push
jno
mov
lret
and
cmc
adc
xchg
loopne
divb
add
pusha
test
jecxz
cmpsb
jecxz
outsl
sub
and
jb
fldcw
movsl
sahf
cs
inc
dec
test
dec
add
xor
push
in
inc
lea
fildl
adc
pop
out
fldenv
mov
das
pop
ljmp
loop
mov
or
ficoms
out
jne
inc
xor
jle
sbb
shll
shufps
or
loopne
and
xor
es
pop
sub
add
inc
mov
fidivrl
lods
xor
cld
xchg
jecxz
xchg
outsl
out
flds
push
mov
dec
insb
sub
mov
cmp
pop
out
mov
inc
dec
out
popf
ljmp
out
sbb
les
sub
mov
out
jae
push
clc
cwtl
pop
imull
loope
movsl
push
std
in
sbb
adc
lret
icebp
inc
ror
out
divl
out
mov
scas
mov
sub
mov
std
xor
inc
push
lods
dec
in
lea
or
out
dec
dec
sub
scas
pop
sub
lds
xchg
fcomi
add
je
or
out
mov
in
int3
sub
cmc
xor
pusha
in
cmp
cmp
push
xlat
shll
out
or
xor
jae
sbb
adc
sti
ret
mov
dec
loopne
imul
fst
xchg
repz
hlt
fcos
mov
cmp
mov
or
sti
fsubrs
icebp
mov
cmp
aaa
dec
or
and
mov
xor
dec
cmp
xor
jl
jo
sub
cld
test
out
pop
gs
sbb
stc
push
shrl
push
dec
dec
sub
add
int
shlb
xor
lahf
ret
and
mov
test
out
rcrl
push
lods
out
inc
and
inc
sbb
sbb
add
cmc
repnz
aam
push
out
mov
jo
in
cmp
sub
mov
mov
out
cmpl
jb
sti
mov
daa
jnp
lahf
xchg
out
mov
cmpb
gs
jecxz
shlb
mov
dec
jo
push
push
sub
out
fiadds
inc
xor
inc
into
jge
inc
and
adc
push
pop
lcall
lea
adc
insl
pop
into
mov
xor
xchg
sbb
mulb
cmc
or
scas
rcr
lds
or
lret
cmp
cmpsb
in
or
into
dec
maxps
push
jbe
decl
pop
push
add
ret
dec
out
stos
shr
fdivrl
aaa
jbe
pop
stc
nop
scas
scas
sub
sbb
jb
popf
out
fxam
or
mov
jle
ds
in
std
dec
outsb
pop
outsl
push
popa
stc
into
sub
inc
cld
in
jmp
scas
sahf
jae
jge
ja
out
or
xor
ss
data16
lods
jb
arpl
dec
cmc
cmp
push
jne
push
xchg
add
dec
call
mov
movsl
xchg
xchg
scas
and
push
inc
xor
cmp
mov
popf
push
fstl
mov
inc
inc
pop
out
jl
ja
pop
xchg
or
out
lcall
push
out
les
sub
adcl
movsl
jmp
mov
dec
int3
insb
dec
out
or
sub
in
or
xorb
mov
lcall
mov
xor
enter
jb
out
dec
or
adc
jmp
or
loopne
out
movsb
or
jb
pop
mov
mov
test
in
add
sbb
and
fcomps
out
sbbl
adc
inc
fwait
in
sti
in
mov
xlat
sub
inc
fildll
xchg
into
nop
jns
xchg
int
out
push
dec
mov
sub
fucomi
pusha
test
loope
outsl
push
shlb
xchg
gs
rcrb
mov
lock
xor
dec
fsubr
test
inc
jnp
out
mov
cmp
xchg
jns
mov
mov
jp
cwtl
addr16
out
dec
out
add
jo
mov
sarb
adc
mov
xchg
call
jb
jmp
sbb
mov
adc
dec
aad
jno
std
xchg
andb
lret
mov
mov
out
leave
xor
iret
sbb
fdivrl
dec
push
mov
pop
in
mov
inc
fucom
sub
aad
enter
in
mov
sub
out
outsl
lds
shr
pop
cmp
pop
outsl
lods
fs
dec
jle
shlb
jbe
fiaddl
jmp
cmp
in
add
inc
pop
pop
xlat
fldt
mov
fwait
or
jnp
xchg
mov
push
pxor
adc
imul
in
fstps
adc
xchg
dec
in
outsl
rclb
mov
inc
and
pop
cli
mov
xchg
jle
sbb
scas
mov
cli
out
xchg
add
xor
adc
mov
pop
dec
adcl
xchg
out
cwtl
fldt
cli
and
ret
and
pushf
adc
lea
ja
jns
dec
and
jo
and
xchg
mov
imul
dec
cld
cmp
cmpsl
call
out
inc
leave
stos
mov
add
insl
jnp
inc
fwait
test
addl
pxor
popa
push
xor
dec
dec
out
mov
dec
js
jmp
out
mov
push
jle
xchg
aaa
pop
push
jne
adc
pop
addr16
mov
lock
out
adc
cmp
cmc
int3
add
imul
cmpsb
jmp
stc
mov
adc
jnp
out
lock
xlat
jle
ret
mov
aaa
sbb
rorb
cmpsb
shrb
xor
push
push
leave
dec
int
fs
and
pop
or
divb
mov
ret
adc
mov
and
push
lret
insb
out
xor
pop
rol
jmp
idivl
sub
in
aad
jae
sbb
je
jbe
pop
cmp
mov
lea
sub
and
out
mov
loopne
out
out
xchg
cmp
gs
mov
das
rclb
adc
pop
test
mov
mov
scas
mov
dec
lret
fdivrl
jnp
nop
stos
xchg
cmp
test
pop
leave
scas
and
in
inc
push
sbb
and
daa
xlat
test
nop
out
pop
out
add
cmc
xlat
sbb
mov
push
add
out
cmp
out
xchg
and
into
icebp
xor
out
dec
cmpsb
cmp
dec
jle
or
or
shrd
jmp
in
cli
sti
out
mov
stos
out
call
fisttps
clc
sub
and
bound
sti
mov
push
mov
xor
in
cmc
les
daa
jg
and
jle
loop
into
sbb
out
cmc
fwait
pop
pusha
out
jae
call
mov
ret
test
mov
scas
mov
out
mov
rol
inc
sbb
add
sub
and
ja
pushf
lea
dec
scas
jbe
es
out
mov
insb
or
pusha
cmpl
test
add
into
es
out
inc
fildl
add
rcrb
repz
loopew
out
mov
sahf
out
xchg
fdivrs
mov
testl
loopne
xor
pop
lods
xchg
out
mov
int3
jp
out
mov
push
decb
shl
push
js
nop
iret
cmpsl
xchg
rorl
imul
push
fldcw
out
adc
es
out
les
pop
mov
pop
js
xchg
ret
sub
fwait
icebp
jle
pop
nop
mov
jb
push
mov
or
sbb
inc
xor
jge
inc
pop
cmp
jmp
mov
into
xchg
popa
and
jbe
push
lret
lret
in
aam
xor
sub
or
mov
ret
or
dec
or
cmpsl
ror
std
pop
insl
out
pop
dec
bound
inc
sahf
sbb
mov
add
shr
pushf
push
fisttpl
lods
mov
out
inc
mov
int
xor
out
adc
or
push
leave
out
dec
mov
data16
xchg
ja
add
lds
cmc
sbb
out
pop
mov
xchg
sti
jbe
testl
xor
loopne
mov
sahf
loope
daa
sub
test
push
jbe
pop
sub
and
dec
sub
out
push
sahf
pop
jne
subb
mov
push
dec
outsb
ljmp
adc
orb
lret
insl
fisubrs
dec
loope,pn
xchg
pop
mov
xlat
jle
jl
into
ds
adc
push
pop
popa
mov
xchg
jmp
fsubrs
scas
inc
or
out
js
sbb
es
out
mov
mov
and
or
out
fdivs
scas
loopne
clc
fs
sbb
ljmp
test
sbb
adc
icebp
adc
inc
push
sahf
and
inc
xchg
fcoms
inc
mov
mov
lcall
adc
dec
rclb
out
insb
es
pop
andl
in
adc
fsubs
inc
push
out
out
sti
pop
cmpsl
nop
inc
sbb
add
dec
mov
dec
inc
testb
int
out
xchg
inc
stc
lahf
loopne
cmc
sarl
sub
adc
mov
test
jb
sub
xor
fstp
call
loopne
out
mov
nop
adcl
cwtl
icebp
dec
in
mov
into
mov
jge
xor
out
cmp
dec
gs
rcl
xchg
sub
jnp
out
sub
lds
xor
mov
dec
inc
movsl
jmp
inc
out
out
pop
stc
push
pop
and
or
jge
repnz
mov
scas
sub
mov
popa
lods
ljmp
mov
lret
xchg
stc
mov
jle
cmp
pop
pop
fsub
inc
pop
mov
inc
cs
out
addl
and
outsl
or
sub
or
out
mov
cltd
scas
jb
cs
out
std
ficoml
stos
fsubl
loope
movsl
sbb
fmulp
pop
jl
xlat
push
insl
pop
xchg
inc
out
cli
outsl
mov
test
mov
imul
rcr
out
pop
in
hlt
sub
sbbb
mov
push
fimull
repz
out
mov
lods
mov
out
and
mov
jbe
mov
orb
jp
pop
sbb
lcall
fsub
cmc
xchg
lods
push
adc
or
out
mov
push
mov
out
out
add
in
stos
adc
dec
out
lods
mov
pop
sub
faddl
gs
xlat
jl
cmpsb
scas
pop
xor
mov
shlb
clc
inc
lcall
cmp
push
xor
scas
xchg
sub
lods
xor
jne
mov
lret
push
cs
test
push
xchg
push
cli
or
seta
inc
sub
shr
xor
xchg
loope
imul
movsb
lcall
out
je
mov
mov
cmp
pusha
rcr
mov
shr
push
sbb
div
loopne
add
mov
sub
pop
out
movsl
pushf
dec
pop
dec
mov
insl
cmpsb
xchg
cmc
sbb
shr
jle
ret
xchg
lods
mov
repz
gs
push
fucomp
add
lret
push
mov
jle
lods
xor
ljmp
pop
ret
adc
lea
jno
call
xor
jb
insl
push
iret
jp
out
mov
add
orl
out
arpl
pusha
push
dec
add
fstpt
pop
xchg
mov
and
or
out
gs
andl
sub
rolb
add
sti
mov
outsl
cmp
pop
loopne
test
repnz
enter
leave
popa
out
mov
nop
addr16
stos
ficompl
jb
cmp
jmp
loop
fucomip
push
sbb
fsub
mov
fld
inc
pop
out
xchg
mov
out
ret
out
out
add
jne
adc
movl
jae
cmp
push
ficompl
cs
jge
sbb
inc
mov
popf
outsl
out
out
fcomps
mov
and
adc
add
mov
cs
fdivrl
dec
faddp
cmp
lods
cmp
lahf
sbb
pusha
out
test
je
jne
movsl
aas
out
fwait
movsb
popf
sub
cli
jb
add
mov
pop
pop
out
andb
push
xor
popf
out
out
mov
xchg
push
out
push
les
push
add
insb
mov
scas
push
pop
add
jb
mov
addr16
mov
sub
push
cmpsl
movsb
mov
sbb
cld
and
push
into
pusha
xchg
add
divl
lds
push
in
mov
inc
ja
sub
out
out
pop
ret
lret
std
out
fstl
push
or
and
fidivl
out
jbe
stos
sub
lret
lcall
fimull
loopne
pushf
out
jns
and
arpl
rolb
and
jbe
std
xor
inc
dec
out
ret
mov
js
movhps
mov
inc
jb
in
call
cmpb
or
jp
xchg
jecxz
jmp
scas
aad
xchg
inc
hlt
jo
cmc
movsb
insl
pop
cmp
sbb
pusha
jl
int3
ja
push
mov
dec
out
inc
pop
inc
dec
lret
xor
jno
int3
mov
js
xor
out
mov
out
jo
pop
mov
je
in
dec
pop
scas
sbb
mov
out
test
subl
sub
mov
aas
fidivrl
xchg
in
jb
loopne
mov
movsb
xchg
fdivl
mov
pop
and
pop
cmp
call
loopne
insb
popf
scas
mov
out
xlat
xchg
sahf
xor
mov
pop
into
pop
pop
and
cwtl
nop
xchg
orl
add
mov
iret
out
push
pushf
xchg
sahf
or
cmp
stos
fdivp
adcb
pop
lret
ljmp
push
or
or
and
xchg
adc
push
js
dec
jo
and
dec
lds
mov
cmp
cltd
inc
push
cmp
mov
out
xchg
rcrb
ds
in
lods
int
pop
stc
out
repnz
add
add
inc
popa
aaa
pop
sbb
popf
xchg
mov
mov
lret
or
pop
mov
jg,pt
repz
nop
or
sti
cltd
out
out
xchg
aaa
mov
je
fildll
bound
cld
push
out
dec
in
movl
test
lcall
nop
out
orl
test
leave
push
lret
out
ljmp
inc
mov
imul
in
and
scas
push
int
mov
mov
aam
out
adc
arpl
pushf
dec
mov
jle
mov
out
pop
movsb
fstps
lret
loop
out
jecxz
pop
xchg
mov
lods
sahf
or
movsl
lret
fmull
lahf
mov
fmulp
out
jp
fistps
out
dec
xor
outsl
aas
xchg
cmp
ret
add
xlat
into
dec
scas
cld
scas
push
add
mov
insl
dec
loop
jecxz
cmpsb
sbb
pop
or
mov
lods
dec
or
mov
pop
out
daa
xor
sbb
xchg
xchg
pop
sbb
out
out
jo
or
mov
into
outsb
movsl
in
dec
ja
scas
sbb
cmp
push
sbb
mull
into
mov
insb
sahf
arpl
jmp
jno
sahf
ret
push
loope
aad
inc
popa
mov
jp
shl
sti
test
mov
lock
mov
in
popf
sar
cld
inc
dec
push
test
push
pop
lcall
rcr
in
mov
out
push
mov
insb
mov
dec
push
dec
daa
into
adc
cmp
sub
xchg
inc
insb
xor
dec
call
cmp
imul
push
add
xchg
in
mov
jnp
insl
inc
out
pop
inc
add
and
enter
pmaxsw
lea
jae
sahf
cmpsb
sbb
jle
or
or
cmp
jb
push
inc
cmpsb
insl
mov
fidivrl
out
aam
or
mov
movsl
outsl
fistpl
fadds
or
sbbb
outsl
ret
and
push
in
fcoml
jo
lock
movsl
popf
mov
xorb
mov
mov
aad
and
out
inc
push
xchg
movsl
fildll
pop
aas
lods
loop
mov
fnstsw
cs
mov
cmc
xchg
das
dec
sbb
sub
leave
pop
jl
push
mov
shll
loop
or
sbb
shrb
push
out
mov
jb
outsl
xchg
sbb
jle
stos
ror
xlat
lock
in
scas
sub
mov
int
jbe
and
aas
out
imul
jae
cmp
outsl
fs
and
xlat
xchg
sbb
out
mov
mov
out
dec
jns
aaa
rcl
cmp
mov
adc
mov
icebp
dec
push
movsl
xchg
pop
cltd
out
leave
xchg
xchg
dec
inc
repz
scas
or
idivb
lcall
bound
in
out
and
push
sarb
out
test
mov
lret
imul
inc
addb
ficoms
sbb
out
cmpsl
lahf
dec
icebp
or
jns
enter
sar
xorb
xchg
ds
push
mov
out
and
fdivs
stos
jno
push
xchg
xor
mov
and
jle
mov
cmp
es
data16
mov
jl
inc
or
pusha
sub
xor
icebp
out
xor
ss
dec
adc
mov
xor
in
mov
lock
in
cmp
out
dec
scas
adc
out
jns
fidivl
out
lods
dec
out
ds
std
cltd
scas
jnp
cmp
movsl
mov
in
add
in
push
sbb
add
adcl
dec
leave
or
sbb
pop
mov
addr16
pop
out
loop
mov
jno
add
add
xor
adc
icebp
xor
pop
inc
adcb
dec
out
adc
inc
add
inc
mov
xor
xorl
inc
loop
ja
push
add
add
out
push
mov
iret
sbbl
lock
add
jge
xchg
lahf
in
pushf
sahf
cmp
jo
add
inc
andb
rorb
test
outsl
cltd
incl
cs
into
lea
mov
mov
psubusb
stc
cmp
lods
stos
in
out
ficoml
lds
mov
push
scas
icebp
test
and
test
je
aam
push
xchg
push
mov
fimull
fdivrs
lahf
hlt
cmp
clc
and
jecxz
cmpsl
mov
push
sbb
out
push
adcl
out
fldenv
push
dec
fstl
sub
push
cmc
cld
mov
mov
in
xor
inc
cltd
enter
jb
lds
push
pusha
jp
ret
fstp
cmpsb
pop
aad
pop
clc
lods
pop
cli
je
fsubrs
hlt
jo
inc
aam
adc
xchg
sti
xchg
jo
mov
or
lea
push
or
je
gs
mov
into
movups
out
fnsave
xchg
gs
cs
sub
cmpsl
jl
inc
ja
pop
sub
cmpsb
out
sbb
mov
jle
roll
push
or
lcall
dec
push
stos
loope
mov
bound
scas
cwtl
leave
xor
out
mov
stos
daa
ss
jne
stc
push
jnp
enter
rcr
popa
or
loope
leave
and
aas
mov
jbe
adc
adc
mov
testl
bound
push
sbb
jmp
and
sti
out
add
cmc
jbe
pop
xlat
mov
cmpsb
lds
jo
jns
shlb
cmc
and
fs
repz
bound
lock
inc
pusha
cmc
movsl
into
js
add
mov
lret
stos
adc
ficoms
push
xor
inc
fstpl
mov
xchg
mov
cwtl
dec
out
and
mov
jb
lock
popa
sub
outsl
insb
adc
fildl
mov
lods
loope
cwtl
sbb
inc
sbb
nop
daa
cmc
rcl
push
mov
jnp
into
je
cmpb
fcmovnbe
jmp
push
mov
outsl
mov
out
jno
and
mov
ret
cmc
add
js
ret
mov
out
imul
push
into
push
inc
dec
movsb
and
xor
add
mov
std
cmc
push
inc
xchg
cmp
lret
popf
or
jecxz
test
pop
push
jle
push
xorb
sub
out
cld
ret
lcall
mov
test
mov
popl
inc
adc
out
out
sbb
jb
cmp
fs
xchg
add
ja
jle
pusha
xor
cli
pop
xchg
add
aaa
aam
inc
push
out
mov
cwtl
pop
inc
sbb
addr16
shl
or
movsl
in
mov
cmp
pop
lahf
mov
cmpsl
jge
fdivrs
jns
sbb
out
inc
and
mov
cmp
dec
or
mov
xchg
jno
cmp
fwait
jne
call
daa
imul
imul
and
xchg
add
cltd
loope
jae
push
insb
push
dec
cs
scas
addr16
jb
in
push
mov
push
pop
mov
mov
outsl
ret
pop
mov
sub
push
jb
xor
cmp
mov
aaa
out
dec
and
arpl
jo
adcl
jmp
mov
xchg
icebp
out
inc
out
addr16
xor
rolb
and
pop
stc
fnstenv
adcl
stos
jle
movsb
push
xor
or
mov
pop
sub
pop
mov
xlat
mov
jle
test
xor
pop
addb
mov
test
sbb
outsl
dec
not
sub
sub
fsubrl
fs
sbb
std
out
cmc
mov
sarl
lods
insw
fistpll
lea
enter
pop
jo
mov
into
cld
mov
aaa
shll
shr
dec
jo
fwait
lcall
mov
jns
out
xor
ficompl
iret
fs
das
adc
pop
out
mov
pop
push
jg
mov
lret
test
shlb
in
cmc
adc
lds
out
cmp
repnz
test
and
jp
fucomip
sbb
sub
or
jbe
cmp
inc
sbb
out
dec
insl
out
sub
mov
ds
int3
inc
daa
enter
in
out
mov
lea
jo
adc
cmpl
sub
lret
xchg
push
pop
out
sbb
daa
es
rcr
sub
gs
or
mov
loope
nop
jge
les
xchg
dec
sbb
scas
sub
pushf
ret
inc
dec
jo
or
out
cltd
jbe
mov
dec
aaa
add
loopne
out
ret
cmp
mov
adc
shrb
cli
dec
xchg
out
mov
filds
in
mov
movsb
jmp
sub
cmp
sub
js
jns
sub
dec
enter
aad
out
sub
pop
mov
hlt
inc
roll
das
ljmp
sahf
fsubs
test
std
call
sub
pop
or
mov
cmpsl
mov
dec
test
dec
out
ds
mov
out
xlat
rclb
sbb
dec
mov
adc
pusha
inc
aas
jbe
dec
shll
lret
std
sbb
pop
into
fstl
pop
int3
sbb
sub
mov
dec
dec
sbb
or
fs
divl
test
push
daa
out
jg
fadds
out
inc
cwtl
xor
js
ds
jbe
push
cmpsl
fmull
and
les
xchg
mov
out
mov
sub
lods
xor
mov
add
lret
jo
mov
jb
push
adc
ret
in
mov
sbb
gs
mov
pop
push
jae
or
pop
aas
mov
fnstcw
enter
jp
hlt
out
push
shrl
jns
out
mov
xchg
jmp
jle
xor
pop
fwait
pop
shrb
sti
out
jmp
mov
cmp
std
add
mov
pop
scas
xchg
push
cs
pop
mov
out
mov
ret
out
jp
fwait
jb
sbb
out
add
and
in
adc
jge
out
dec
jmp
mov
and
mov
not
sbb
lea
out
movsb
inc
xchg
repz
cmp
xchg
mov
stc
lea
inc
cmpsb
or
in
dec
fsubrl
fs
xchg
je
inc
inc
out
jo
jnp
or
push
ljmp
dec
into
mov
movsb
cs
out
or
cwtl
inc
xor
sarl
data16
or
xchg
stos
orb
or
and
out
les
cmpsl
xchg
jecxz
call
repz
es
jo
cmp
pop
cmpsl
scas
scas
pusha
scas
out
fucom
dec
int
les
std
cmp
add
das
jno
jo
pop
xor
push
stos
mov
in
sbb
push
fisubrl
lahf
out
fmul
ret
imul
divl
out
cwtl
fsubrp
aaa
cs
xor
out
sub
push
jmp
ja
jno
je
movsl
jle
scas
stos
or
ja,pn
xchg
lret
sub
jmp
outsl
and
adc
xor
out
ficoms
cltd
xchg
xchg
jecxz
out
push
lret
dec
pop
movsl
sub
mov
cmpsl
fisubrs
in
xchg
pop
sub
push
sbb
mov
aaa
loop
out
gs
jns
mov
and
or
popa
inc
dec
leave
ds
adc
ret
mov
out
jg
in
mov
out
sub
cmp
imul
sub
or
inc
push
nop
or
sbb
cmp
mov
leave
and
outsl
dec
out
lahf
xchg
call
scas
das
ljmp
or
inc
dec
pop
out
leave
call
push
loop
popa
test
lret
xor
adc
mov
movl
shll
movsl
into
mov
lds
push
fcomi
pop
test
inc
in
jecxz
out
out
cwtl
xchg
cmp
outsl
or
cmp
fsubs
pop
mov
jmp
out
inc
pushf
sbb
enter
std
dec
add
mov
or
rcl
call
ljmp
popf
movsl
dec
push
lret
sub
out
gs
or
sub
out
aaa
lods
addb
int3
out
out
imul
lea
jge
in
mov
xchg
fs
cmp
push
divb
popf
ljmp
jnp
jmp
dec
out
or
mov
aas
dec
dec
mov
adc
mov
fwait
pushf
and
cmc
jnp
mov
out
movsl
push
pop
mov
cwtl
jns
ret
and
mov
scas
movsb
mov
call
adc
add
sub
ror
mov
sbb
ret
mov
daa
push
or
dec
sbb
shlb
in
outsl
pusha
int3
into
movsl
or
ds
adc
out
adcb
stc
mov
pop
out
scas
pusha
jge
imul
cli
jle
mov
cmc
in
subb
sub
cmp
ret
pop
xor
mov
out
adc
arpl
or
in
in
iret
movsl
mov
or
out
push
andl
push
adcl
movsb
shlb
mov
ds
jne
nop
scas
lods
mov
xchg
jb
xchg
frstor
sub
mov
test
mov
test
sbb
stos
mov
xor
scas
and
pop
or
and
fstpl
mov
jno
imul
adc
cmp
inc
mov
cmp
jbe
mov
sub
inc
push
popa
idivl
sub
dec
movsb
adc
mov
dec
adc
add
mov
cs
scas
jecxz
outsl
adc
dec
sub
stc
ficoml
dec
sbb
mov
pop
sti
fwait
xchg
push
fcoml
xchg
sub
popf
arpl
and
or
fidivl
cs
pop
dec
mov
or
out
xchg
test
loop
jge
subb
pop
jne
mov
or
out
and
ss
jo
loope
iret
and
out
sti
es
int3
loopne
sahf
or
mov
push
cltd
cmp
cwtl
sub
out
inc
cmpb
jb
in
test
dec
insb
ss
jmp
out
fcompl
pop
jo
cltd
or
cmpsl
mov
push
outsb
faddp
stos
xchg
push
out
jae
mov
adc
out
inc
jle
and
out
stos
lret
loope
pop
inc
fisubl
dec
pop
lds
xchg
inc
add
test
dec
aas
mov
inc
pop
fnstcw
or
ljmp
test
outsl
inc
mov
mov
pop
lods
out
imul
std
inc
out
fadd
inc
adc
out
inc
push
pop
stos
add
lods
and
dec
push
call
test
arpl
loope
or
daa
out
cmp
dec
cmp
pop
adc
lret
cmp
mov
repnz
out
mov
icebp
fsubr
call
es
loope
test
cmpsb
out
rcrl
fwait
rcrb
push
jno
in
pop
sub
into
xlat
faddl
out
push
fiaddl
aad
push
movsb
xor
repnz
lods
out
sbbb
jb
insb
jo
in
ds
cmpsb
loopne
out
aam
push
gs
pop
adc
xor
push
insb
mov
mov
out
dec
xchg
jae
fwait
mov
push
cld
jo
enter
sub
jns
out
push
inc
xor
stos
mov
into
ret
cli
das
aad
out
mov
lret
jl
adc
xor
or
add
std
jb
out
test
jmp
int3
xchg
out
ret
cld
sbb
iret
dec
push
push
dec
sahf
pusha
mov
mulb
push
fcmovb
rcll
mov
mov
inc
aas
sub
sbb
inc
out
loop
int3
cmpsl
fdivrs
pusha
adc
cmc
add
inc
clc
xlat
std
mov
lret
into
imul
shrl
cmp
cwtl
and
push
out
dec
loopne
sbb
out
scas
es
xchg
fcomps
lret
inc
jns
hlt
push
bound
test
inc
cmc
jbe
es
push
stos
cmp
sarl
out
gs
dec
in
dec
pop
out
nop
sahf
sbb
push
lds
out
push
add
adc
fmuls
xor
and
imul
push
inc
push
add
fisubl
out
jnp
mov
orl
fcomip
out
sub
cwtl
push
xor
xchg
lret
jle
xor
int
mov
fcomip
imul
xchg
pop
fisttpll
out
das
and
cmp
jle
xchg
imul
mov
and
dec
loopne
mov
jne
jno
test
testl
sbbl
sub
dec
in
sub
jecxz
push
mov
and
jb
ja
leave
loope
inc
rcrl
std
sysexit
shrb
in
push
add
jb
mov
xchg
push
gs
mov
adcl
mov
jp
js
out
lahf
notb
mov
test
fidivrs
out
add
das
lock
imul
mull
jb
dec
mov
xchg
rol
ret
fbstp
popf
clc
out
dec
out
orb
in
sub
and
jecxz
xchg
push
hlt
test
pop
shll
mov
movsb
leave
mov
iret
pusha
fisttpll
pop
adc
sub
das
in
pop
dec
gs
cmp
xor
mov
lcall
or
xchg
pushf
pop
lods
add
outsl
inc
mov
sub
or
push
mov
xchg
aaa
jmp
jp
sbb
lock
inc
mov
or
pushf
dec
pop
out
push
and
mov
das
lock
mov
lret
in
sti
out
or
out
ret
mov
arpl
cwtl
push
dec
sbb
lsl
dec
lock
shr
push
cli
mov
inc
cmpl
cmpsl
pop
pop
scas
add
mov
out
push
fdivs
scas
pusha
shlb
idivb
add
jne
arpl
test
rorb
leave
aad
dec
fcomps
jno
mov
and
jae
nop
and
pop
out
or
sub
xchg
aad
fstpl
jns
leave
xor
shll
pop
and
bnd
push
mov
sub
jl
add
loopne
add
and
pushf
xor
das
fcomps
sti
arpl
loopne
cwtl
out
jnp
add
mov
leave
movaps
lds
adc
jo
pop
out
jno
mov
in
scas
dec
mov
loope
out
adc
jbe
rorl
stc
outsl
out
inc
mov
dec
pusha
dec
sarb
inc
pop
sbb
mov
fbld
gs
dec
jns
sbb
int3
jno
mov
mov
out
or
stos
leave
fdivr
xor
or
inc
addl
addl
xchg
leave
ja
in
call
xchg
stc
mov
popf
sbb
jbe
nop
out
sbb
xchg
inc
insl
mov
mov
cs
xchg
dec
in
out
sahf
jle
sub
fildll
pop
cmp
mov
test
mov
out
lcall
push
mov
fldenv
jbe
sbb
test
sub
or
scas
push
add
and
pop
ljmp
js
xor
out
shr
imul
cltd
add
sti
shr
xlat
sbb
mov
out
dec
rcrb
pop
pop
lods
in
cmc
imul
jp
jecxz
mov
sbb
sub
outsl
test
push
leave
xchg
xchg
in
mov
pop
sub
xchg
pop
pop
aam
sahf
out
loope
mov
je
cltd
pusha
scas
push
aas
fdivr
dec
push
mov
std
jae
add
mov
out
and
ja
enter
cld
mov
bound
lock
adc
gs
lret
iret
sbb
in
jle
pop
and
js
pop
out
and
mov
jb
inc
ret
roll
xchg
and
out
jmp
mov
out
mov
testb
and
push
iret
data16
cld
popa
sbb
bound
out
test
fstps
cld
jo
out
mov
jmp
shr
out
sub
adc
dec
xlat
insb
jo
mov
fstpt
test
cmp
jbe
mov
or
addr16
call
loopne
jne
pushf
and
xchg
test
or
dec
inc
mov
or
mov
cmp
or
in
arpl
into
negl
jge
or
imul
jno
xchg
movsl
jnp
ljmp
aad
gs
les
sti
and
push
jle
fcoms
jne
add
out
outsl
insb
pop
add
jno
push
call
insl
jmp
aad
dec
js
lret
mov
add
sub
in
add
loopne
push
cltd
lods
lret
sbb
or
mov
mov
push
movsl
xchg
pushf
pop
jbe
repnz
xchg
loopne
or
or
xor
cmp
pushf
add
mov
xchg
inc
out
mov
adcb
aam
xchg
push
stos
test
xor
out
lret
icebp
imul
push
sbb
mov
js
into
lret
push
sarb
out
xor
movsl
adc
pusha
push
pop
sbb
adc
imul
test
pop
out
es
sbb
jo
test
fiaddl
xchg
jecxz
cmp
jae
imul
jecxz
sbb
fidivrs
cld
sbb
in
inc
dec
out
sbb
pusha
mov
out
inc
push
xlat
pop
fdivs
in
roll
out
leave
icebp
or
jmp
ss
std
pop
loop
clc
inc
mov
cmp
inc
scas
ljmp
cs
cltd
lret
js
push
into
jo
in
es
in
out
ficoml
sub
popaw
sub
push
xor
dec
nop
add
mov
dec
push
call
lret
mov
xor
add
out
js
gs
fwait
sarl
push
out
mov
xor
dec
out
cwtl
or
cld
push
je
bound
out
cltd
fwait
sub
out
movsb
jmp
js
add
push
out
fdivs
dec
leave
push
pushf
adc
sti
pop
inc
gs
and
loop
push
pop
mov
loopne,pn
sbb
mov
iret
push
out
mov
sub
outsl
and
stos
das
xchg
inc
call
and
mov
and
in
int3
push
lods
out
dec
dec
and
data16
xchg
out
gs
mov
mov
lret
pop
dec
inc
call
cmc
pop
sbb
in
dec
ret
popa
inc
mov
push
push
inc
shr
xlat
adc
inc
fstl
jecxz
xor
arpl
add
sub
in
lret
jae
insb
jbe
loope
pop
mov
out
mov
sbb
je
loope
addl
cmp
popa
sbb
subl
nop
jbe
pusha
in
jb
fwait
into
gs
imul
leave
cld
adc
add
dec
rorb
rclb
jbe
sub
movsb
fidivrs
sbb
inc
push
sbb
dec
inc
and
cmc
enter
rcll
ljmp
and
adc
mov
mov
leave
mov
out
or
cli
jg
imul
push
sbb
pop
and
mov
cmp
out
inc
adc
mov
lock
adc
mov
mov
out
sbb
imul
lahf
mov
cmp
sbb
add
sbb
stos
imul
pushf
mov
sahf
lcall
data16
cld
cmpsl
jle
xor
imul
out
gs
and
cmp
ss
in
xor
scas
adc
iret
jb
dec
sub
lcall
push
cmpsb
inc
lcall
outsl
loopne
push
imul
mov
cwtl
mov
into
pushf
jecxz
out
test
bound
and
es
call
fwait
mov
xchg
mov
push
jle
lock
movsl
lods
rorb
mov
out
sbb
ja
shlb
xor
cmc
aas
ljmp
hlt
jo
mov
aam
in
xor
xchg
cs
sbb
cmc
fisubl
sti
jnp
mov
dec
push
ds
in
xchg
dec
out
jbe
cmp
int
clc
jl
jp,pt
or
sbb
xchg
and
xchg
dec
loopne
daa
mov
add
jae
fistps
mov
xor
jae
mov
push
cmp
out
je
mov
sub
inc
adc
incl
mov
mov
stos
loopne
pop
enter
jecxz
insb
popf
pop
dec
jo
fsubrl
cmp
mov
xor
es
xorl
jnp
out
jle
pop
sti
gs
push
mov
cmp
sub
sbb
lods
orl
out
ds
or
insb
inc
cmp
mov
lods
fsubrp
mov
in
addr16
insl
in
push
push
out
add
out
and
movsl
xchg
jecxz
push
shr
mov
and
mov
jb
push
js
shll
out
add
jno
xchg
pusha
into
jnp
cmp
out
insl
mov
popa
dec
ret
int
in
jge
jns
jge
out
in
mov
mov
and
mov
sbb
das
lret
jnp
jae
nop
insb
lods
or
push
jns
fstpl
inc
fisttps
je
pop
loopne
mov
xchg
jb
or
rcl
out
movsl
test
dec
lcall
push
aam
rcl
sbb
popa
es
cli
mov
divl
sbb
mov
inc
jge
or
out
sbb
dec
cltd
sub
mov
dec
or
mov
idivb
out
lahf
sub
xchg
ss
aas
out
sbb
jae
out
sbb
aad
cmp
sub
pop
repz
test
je
lea
sbb
pusha
pop
les
cmp
and
popa
scas
sub
shrl
cld
test
mov
lock
out
out
cmpsl
insb
pop
mov
test
movsb
out
push
ret
jge
ljmp
aas
sbbb
fs
or
ror
bound
enter
xlat
inc
push
cwtl
jb
pop
inc
es
xchg
jno
out
sbb
sbb
out
mov
or
nop
pop
sub
dec
in
dec
outsl
dec
or
fsubr
loopne
cld
xor
lock
sub
lahf
add
fisubl
fwait
inc
xorb
cltd
xor
out
adc
outsl
fmulp
lods
test
pop
fisttpll
test
outsl
aad
dec
test
rclb
xchg
pop
xor
and
cmp
push
sub
in
insb
in
subb
aad
enter
leave
fs
rclb
out
sbb
add
jns
out
cltd
hlt
pcmpeqw
ret
stos
or
push
or
test
out
mov
mov
out
fsubrs
sbb
push
jno
cmp
or
aam
sarl
sbb
push
pop
and
sub
sub
pop
movsb
and
mov
inc
fnstenv
lds
lret
into
jb
push
test
dec
dec
jb
rcr
add
in
out
out
dec
sbb
or
xchg
scas
or
incb
inc
sbb
inc
out
fsubrs
addr16
pcmpeqd
adc
mov
and
out
sbb
and
out
adc
sbb
in
out
pop
insb
aaa
and
into
lods
out
rcr
js
test
push
dec
or
mov
mov
mov
fs
in
out
out
insl
fistpl
cmp
dec
addr16
dec
sbb
fldz
mov
das
add
xor
jo
mov
mov
pop
push
sbb
and
sub
xchg
fildll
out
fs
leave
inc
les
xchg
pop
pop
out
sub
add
lock
arpl
xchg
ficoms
outsl
lea
or
les
push
mov
dec
inc
fwait
stos
daa
pop
xor
test
sahf
out
roll
jge
xor
jl
cmp
insl
pop
cmp
mov
int3
dec
out
mov
inc
dec
out
sub
cli
stc
mov
sub
js
in
stos
inc
jne
repz
sbb
les
or
push
cmpsb
lahf
push
pop
bound
iret
outsl
fmull
jge
dec
addr16
ror
cmpb
rorl
xchg
icebp
stos
out
push
sbb
xor
addr16
add
mov
dec
sub
out
aad
xor
mov
and
cmp
movsb
iret
lea
cli
inc
sub
and
push
sarl
out
out
addb
sub
fs
push
cmpsb
xlat
out
xor
mov
outsl
out
pop
sub
push
sbb
dec
clc
pushf
or
mov
data16
out
out
aaa
jno
pop
ds
cmpsb
adc
icebp
xor
add
mov
cs
jp
dec
inc
test
mov
push
xchg
xlat
pop
mov
fadd
into
mov
adc
fidivs
push
dec
adc
jl
push
je
inc
push
int3
gs
mov
jae
pop
out
or
pushf
rclb
movsb
push
lahf
sti
scas
mov
in
aad
push
add
dec
fcompl
and
shlb
popa
mov
cli
stos
cltd
mov
sbb
cs
imul
xchg
into
pop
sub
or
out
inc
push
add
pop
jl
sbb
push
in
lret
test
adc
mov
push
movsl
out
enter
or
inc
sti
push
cld
xchg
repnz
in
outsl
push
test
shrb
cmp
mov
pop
hlt
aam
xor
dec
push
je
mov
ret
sbb
adc
sub
add
rcrb
xchg
mov
movsl
jmp
pop
in
xchg
out
enter
faddl
push
mov
out
gs
iret
pop
adc
jmp
mov
pop
out
repnz
in
jge
bound
jns
into
sub
outsl
pop
addr16
ret
xchg
or
push
gs
inc
daa
inc
cmp
mov
outsl
rcll
subb
inc
out
adc
pop
sbb
fdiv
test
pop
or
out
jge
pop
dec
leave
clc
dec
hlt
stc
in
std
loop
sub
pop
xchg
push
pop
mov
dec
jge
mov
out
pop
jmp
out
mov
repz
mov
into
clc
das
and
xlat
mov
pop
adc
or
outsl
inc
sbb
cli
xchg
dec
jecxz
or
and
ret
cs
adc
push
shr
push
xchg
pop
inc
and
inc
adc
jge
jo
mov
cmpl
insl
ficoms
cmp
test
pop
lds
pushf
sbb
addl
mov
fidivl
into
mov
imul
and
stos
fdivp
fistpl
lock
lcall
daa
mov
and
or
dec
jne
pop
out
repz
mov
and
lods
mov
out
mov
add
xchg
adc
mov
loopne
dec
scas
jmp
push
push
xchg
out
dec
sub
push
jae
mov
cld
scas
rcrb
push
out
out
mov
es
cs
inc
push
testl
xor
out
xor
sbb
fdivr
xlat
mov
pop
sbb
out
mov
add
jp
push
mov
cs
cld
gs
cwtl
pop
jae
or
jno
jg
cltd
mov
test
mov
jo
mov
lods
in
lds
enter
ja
lret
fwait
out
out
shlb
inc
add
lret
inc
popf
add
in
shrb
test
adc
inc
or
mov
in
fdivl
xchg
adc
cltd
scas
mov
jle
arpl
sbb
in
inc
out
dec
roll
out
lods
aad
mov
mov
sub
pop
arpl
or
adc
fwait
dec
out
push
inc
ror
inc
cltd
push
aas
pop
scas
cli
push
jae
int3
xchg
pop
out
fbld
das
or
in
jecxz
jae
pop
andb
push
cmpsb
inc
push
addl
jbe
popf
mov
push
addr16
jb
push
push
mov
inc
je
daa
lds
jnp
nop
call
subl
jge
shrb
leave
lahf
push
dec
sti
fdivrs
push
std
out
out
popa
jle
dec
fs
out
cmp
out
dec
jo
xor
fnstenv
mov
jns
cli
jecxz
cs
mov
int
jle
sahf
mov
clc
sbbb
lods
sub
pop
cmp
jle
xchg
call
push
fwait
stos
movsl
out
dec
push
lods
mov
add
jae
mov
aaa
scas
ret
jns
push
cwtl
out
mov
mov
and
std
mov
and
loopne
sbb
xchg
es
push
cmpsb
cs
inc
fadd
mov
xchg
inc
int3
jecxz
add
xor
cli
push
fs
xchg
dec
pop
jp
push
ja
cmp
adc
jle
sub
mov
js
sub
aam
sub
sti
fwait
cmpb
mov
add
inc
push
pushf
sahf
push
in
int3
sub
aaa
push
cli
dec
out
fcmovne
jne
arpl
cltd
out
mov
in
fsubrs
in
ja
xor
out
mov
fnstcw
jle
push
out
sub
in
jl
push
push
sub
lahf
xchg
pop
fisubs
push
push
adc
mov
dec
shll
add
jae
pop
and
out
shrl
sub
sub
sbbl
adc
xor
out
ret
imul
mov
jo
cmp
insl
sub
ret
xchg
mov
and
out
add
out
jbe
or
nop
out
push
arpl
loopne
in
jno
mov
mov
xchg
add
fisubs
ret
jecxz
outsl
loop
loope
addr16
sbb
in
pop
out
sbb
repz
loopne
fstl
push
cmp
popa
pop
sbb
mov
xchg
lea
sarb
ret
sub
jbe
outsl
pop
xchg
into
sub
in
push
out
or
add
pushf
lods
inc
movb
lds
add
and
fbld
ficomps
iret
inc
pusha
aaa
out
lahf
dec
cli
popa
out
sbb
xchg
dec
jg
out
mov
lods
add
popa
test
lock
sbb
stos
das
sub
mov
mov
enter
adc
sti
xchg
push
cmc
out
nop
sub
push
popa
xchg
lock
enter
push
rcr
es
fucomip
mov
xchg
ss
daa
popa
cwtl
jbe
dec
btr
sub
mov
insl
arpl
mov
sbb
imul
dec
out
xchg
aaa
mov
out
jl
add
mov
repnz
divl
ljmp
mov
sub
outsl
out
adc
lds
jo
popf
xchg
loope
movsl
stos
mov
mov
or
cmp
adc
out
dec
repz
aaa
pop
or
shlb
mov
out
into
imul
insl
jae
int
insb
mov
sub
pusha
mov
ret
jecxz
fcompp
ror
mov
int
out
fimull
cmp
or
or
jo
out
adc
xor
aam
pop
out
push
loope
add
push
mov
mov
inc
and
sarl
xchg
movsl
pop
jo
jle
aas
xchg
insb
push
xchg
out
mov
jmp
push
out
push
in
ljmp
dec
enter
arpl
scas
inc
push
or
out
cmp
ljmp
add
scas
adc
aad
in
mov
jne
push
es
pusha
pop
out
das
sbb
and
imul
jecxz
shl
out
mov
stc
popf
and
mov
sbb
subl
pop
movsl
pushf
dec
lods
cltd
or
pop
jp
xchg
mov
sti
scas
movsb
out
or
ds
mov
push
scas
lret
mov
or
lds
imul
lods
sbb
mov
test
rorl
sub
or
pop
dec
sub
jae
jecxz
and
mov
ffree
in
inc
mov
loopne
xor
jg
jl
movsl
lret
push
out
pusha
call
pop
hlt
out
imul
ss
movsb
vpandn
dec
sub
out
inc
lea
sti
scas
pop
clc
inc
dec
rolb
pop
adc
and
mov
adcl
ret
pop
rorb
lcall
jno
dec
out
push
inc
dec
mov
push
int3
jb
or
sbb
cmc
sbb
pop
add
sbb
cmpsb
jo
xchg
insl
ficomps
mov
mov
xchg
fcmovu
mov
outsl
aaa
sbb
push
in
push
insb
out
or
movsl
or
loop
inc
movsb
sbb
out
notb
mov
mov
icebp
cmp
or
loopne
push
clc
push
sub
mov
add
out
inc
and
mov
mov
test
xor
cmpsl
xchg
xchg
pop
inc
jne
lret
pop
leave
mov
fidivrl
out
orb
movsl
or
out
filds
lret
inc
dec
out
or
push
push
sub
in
cmpsl
leave
jb
in
cmp
sbb
out
mov
mov
pop
test
out
lret
inc
add
jle
enter
std
cld
cld
stos
mov
mov
mov
test
mov
xchg
xor
lods
dec
cmp
out
pop
pop
sub
insl
cmp
mov
orb
push
sahf
sbb
jle
sub
and
outsl
mov
xlat
push
in
pop
cmc
leave
push
cmpl
imul
inc
mov
lds
mov
dec
dec
mov
outsl
cld
test
out
inc
xchg
out
jmp
jo
cwtl
sti
xchg
xor
push
into
dec
mov
fdivr
push
mov
mov
ss
out
add
xor
inc
lea
fcoml
inc
scas
sbb
movb
mov
lahf
jmp
pop
cmpsl
adc
and
clc
lret
mov
dec
add
lods
xchg
repz
adc
out
jmp
sbb
outsl
pop
inc
cmp
loop
ret
jb
pop
push
add
mov
push
jb
push
lock
outsl
cltd
xchg
jp
sti
mov
adc
dec
ss
in
push
out
jb
cmpsl
or
cld
out
push
lea
shr
pop
movb
ret
out
incb
xchg
lret
fwait
jmp
adc
dec
mov
test
bound
mov
inc
arpl
shrb
mov
orb
ds
insb
push
inc
es
dec
and
rorl
mov
push
mov
pushf
bswap
out
add
mov
dec
outsl
stos
fiaddl
dec
lcall
out
inc
mov
inc
jle
xchg
and
pop
pop
cmpsl
cmp
inc
out
in
mov
outsl
sub
outsl
adc
xchg
int
test
imul
cmp
pop
lods
ficomps
ja
inc
mov
addr16
push
mov
fimuls
push
call
jb
sbb
inc
imul
out
add
mov
stos
out
add
xchg
out
mov
in
std
push
inc
pop
inc
out
dec
dec
lcall
cltd
jo
lock
sarb
ds
sbb
mov
out
gs
lods
jnp
dec
ret
push
or
sub
rclb
out
les
mov
stc
sahf
test
mov
lods
in
lea
aam
mov
and
out
jbe
mov
test
pop
mov
sub
jl
sbb
sub
mov
out
push
inc
xor
fsubl
xchg
ret
cmc
cmp
loope
scas
lds
aas
sub
sub
cs
out
mov
xchg
shrl
out
mov
aam
jle
mov
sar
scas
jno
dec
cli
imul
and
mov
rorb
xor
imul
jae
leave
xchg
es
add
xchg
ret
jno
mov
mov
cwtl
pop
mov
xchg
jne
inc
aam
cmpsl
in
add
cmp
add
jne
test
lcall
das
out
pop
out
inc
pop
inc
stc
adc
jnp
dec
and
pop
gs
loop
ret
mov
insb
inc
cmp
enter
push
fisubl
test
mov
xlat
mov
inc
push
out
mov
add
out
dec
faddl
cmp
out
jecxz
jae
sub
imul
cmpsl
std
inc
dec
jno
addb
into
mov
xor
or
jo
inc
push
fsubr
imul
jo
cmc
fists
gs
push
arpl
idiv
sub
mov
mov
or
scas
fmul
pop
sbb
and
push
test
mov
fiaddl
loopne
testl
xlat
push
out
ret
add
jl
out
sub
les
jno
mov
pop
pop
jno
add
out
clc
push
mov
jbe
pop
jb
mov
imul
xor
jb
xchg
lds
mov
mov
imul
test
out
mov
xlat
sbb
popa
xor
out
hlt
mov
cmp
mov
in
push
out
call
push
or
jne
ret
jl
sbb
out
es
or
out
mov
xor
or
movsl
xor
sbb
dec
out
call
ret
cmp
clc
data16
pop
xor
out
dec
inc
sub
lods
cmp
out
adc
rcrl
out
xlat
xchg
pop
or
xor
out
mov
pushf
mov
cmpsb
outsl
out
inc
mov
fucom
data16
jp
sbb
std
fwait
popa
dec
mov
out
cmp
mov
test
cltd
adc
pop
das
adc
aaa
sbb
lods
lret
xchg
jmp
sbb
xchg
cmc
popa
jne
shrl
cs
stos
call
out
cltd
outsl
stc
scas
les
xorb
cld
mov
pop
mov
pop
test
jge
push
add
fistpl
mov
push
bound
sub
mov
cmc
xlat
nop
xor
mov
adc
sub
insl
pop
insb
or
xchg
aam
xlat
mov
xchg
xchg
jge
pushf
pop
out
mov
dec
les
test
cwtl
cmp
sti
mov
add
pop
fstps
and
lods
adc
ds
lea
outsl
dec
dec
int3
faddl
pop
push
or
fldz
xor
mov
repz
js
mov
pop
out
out
lods
cwtl
pusha
jg
test
inc
adc
pop
out
cmp
jge
jbe
addl
dec
jge
lods
xlat
bswap
inc
cmp
pop
in
insb
pop
jmp
out
dec
pushf
fsub
addb
scas
pop
mov
aaa
int3
xchg
out
adc
movl
out
in
inc
out
insb
mov
out
rorb
mov
mov
lret
jnp
aam
lea
gs
fmul
or
out
sub
jl
lret
adc
fdivs
xor
in
and
enter
adc
test
pop
mov
jno
jo
call
out
pop
lea
jge
out
ljmp
sahf
lea
xchg
or
jmp
dec
push
cld
ljmp
stc
and
and
mov
jns
adc
dec
out
xchg
inc
inc
jmp
or
sarb
enter
mov
mov
out
or
ret
les
fdivs
fwait
ljmp
daa
mov
inc
add
mov
out
aaa
adc
in
xchg
dec
outsl
inc
xlat
bound
movsl
dec
mov
sub
xchg
inc
call
repz
out
je
or
xor
and
add
out
mov
sub
xchg
int
incb
xor
ss
jbe
fucomp
orl
rolb
fucomip
fnstenv
movsb
repz
scas
jecxz
sahf
jmp
cmp
mov
inc
cmc
jl
pop
negb
xor
adc
cld
sarb
loopne
or
and
cltd
add
dec
scas
and
xor
cmp
push
push
cmp
subb
inc
mov
push
inc
mov
xor
into
jbe,pt
cld
fidivrs
dec
pop
loope
ret
jo
cmpsb
int3
lret
sub
out
ljmp
mov
sbb
cwtl
jne
out
fidivs
adc
orb
mov
imull
je
push
std
fnstenv
push
push
out
in
dec
mov
mov
sub
push
test
hlt
or
daa
add
in
out
dec
lods
frstor
sub
outsl
test
jnp
lret
jo
ljmp
out
repz
mov
jb
or
loop
cmc
bound
adc
test
jge
les
notl
xor
out
jbe
mov
imul
out
int3
push
push
jle
ss
sbb
or
inc
out
dec
xchg
mov
popf
out
push
ret
pop
imul
shrb
cmpsl
scas
mov
ret
dec
andb
stc
out
sbb
decl
mov
psllw
pop
jmp
xor
outsl
cli
dec
adc
jns
pop
sbb
lcall
push
out
mov
xorb
xchg
jecxz
inc
adc
fisubrs
or
out
mov
loopne
sub
push
and
add
movsl
les
mov
sub
lcall
out
cmp
out
lods
movsl
adc
jl
mov
mov
adc
outsl
icebp
xchg
andb
sbb
nop
enter
sbb
sub
out
or
inc
dec
lret
test
aaa
std
bound
cli
out
fistl
decl
mov
add
mov
ret
inc
sbb
push
sbb
dec
out
pop
or
imul
adc
sub
mov
sbb
mov
fcoms
inc
cmp
cld
mov
push
push
pusha
call
or
push
enter
ljmp
pop
cwtl
pop
out
add
xor
dec
paddd
mov
cwtl
sar
mov
out
inc
mov
jo
movl
xor
mov
int3
xchg
out
in
cmc
xorl
out
sub
lods
xchg
pop
gs
movsl
inc
test
adc
outsl
mov
jae
jp
sbb
out
adc
ret
push
inc
pop
test
xor
cmp
mov
loop
ficoms
pop
xchg
out
add
sbb
pop
lock
jb
inc
xlat
sbb
lock
scas
scas
dec
rcrb
pop
inc
jge
jb
lahf
mul
xor
cmp
cmc
repz
adc
fldz
push
insl
in
je
dec
fsubrl
sbb
int3
mov
movsl
out
jnp
testl
pushf
cmpsl
fwait
out
lds
xor
test
pusha
das
call
mov
inc
adc
xchg
cmp
lods
outsl
in
bound
ja
mov
dec
mov
xlat
lds
and
out
xchg
sub
lcall
xor
add
into
aam
std
out
cltd
fisttpll
cmp
add
cmp
sarb
stc
xchg
mov
out
mov
call
popa
xchg
popf
xor
inc
pop
out
fcompl
js
mov
ja
loope
jo
and
ljmp
pop
jne
ss
push
out
mov
cmpsb
push
adc
insl
out
sbb
fcoml
sub
inc
hlt
out
ljmp
sub
jb
adc
les
cmpsl
out
movsl
mov
scas
lcall
sub
out
and
dec
loopne
adc
pop
jmp
push
pop
out
xchg
mov
testl
dec
xor
jo
xor
mov
out
cmpsb
in
lret
popa
jle
mov
or
mov
movsb
out
inc
arpl
cmp
adc
aam
shll
cwtl
in
jbe
sbb
loopne
arpl
pop
pop
sbb
jp
mov
sbbl
repz
push
out
xor
sbb
add
jo
fwait
mov
jmp
loopne
mov
das
inc
into
inc
outsl
leave
lcall
pop
insb
cs
pop
sbb
repnz
outsl
pushf
js
inc
inc
mov
imul
loopne
in
out
add
sub
sti
cwtl
mov
adc
nop
scas
out
out
push
outsl
fstl
out
out
adc
xor
mov
mov
cmpps
lahf
out
sub
mov
out
inc
sub
xor
push
ds
fadds
or
js
scas
cwtl
sti
mov
cmp
hlt
jb
insl
cmp
subb
scas
testl
mov
or
out
addr16
inc
jle
push
les
fdivrl
fisubrl
ss
into
in
push
mov
movl
inc
xor
out
insb
push
insl
cs
mov
and
jecxz
test
out
xchg
loopne
dec
sub
test
fdivl
sbb
inc
push
dec
out
pop
shrb
dec
mov
call
push
out
fnsave
movsb
push
xlat
shlb
std
cmp
xchg
inc
test
jmp
sbbb
push
jle
sub
jo
loopne
mov
stos
addr16
xor
gs
pop
aaa
movsb
xchg
sub
sub
out
mov
jle
ss
roll
xchg
jbe
mov
push
into
cld
sbb
ret
out
jle
in
loope
mov
dec
into
cwtl
sub
mov
xchg
sbb
scas
cltd
mov
test
ds
xchg
mov
sub
mov
movsb
out
lods
fsubp
in
push
cmp
cmc
gs
cmp
fistpl
leave
xor
imul
das
push
bound
out
cmp
cmpsb
xchg
pop
push
push
add
add
mov
and
out
pusha
mov
scas
jmp
hlt
out
ret
gs
int3
dec
out
in
add
outsl
jmp
jbe
shl
cs
mov
mov
in
sbb
jecxz
in
testb
loope
dec
dec
out
fs
adc
lds
mov
inc
inc
std
dec
outsl
enter
pop
out
xchg
stos
out
movsl
mov
popfw
aad
push
fisubs
addr16
sub
stos
addb
daa
lret
les
notb
jg
xor
pop
dec
xchg
out
push
sub
add
test
into
out
movsb
in
sub
mov
lods
add
std
popf
dec
pop
ret
out
bnd
ret
lcall
sbb
pop
sub
int3
jmp
ret
subl
add
mov
jg
insb
fiadds
pusha
idivl
arpl
mov
lret
cmp
mov
adc
scas
mov
or
call
popl
scas
xchg
lea
inc
es
mov
out
fistpll
jns
enter
xor
mov
iret
xchg
xor
das
mov
or
mov
dec
in
out
push
pop
sbb
xor
ret
cld
stos
movb
lods
jns
inc
sbb
xlat
out
mov
and
adc
int3
leave
jge
rclb
jbe
test
fcompl
or
and
into
repnz
or
jge
push
or
mov
out
aam
mov
jecxz
mov
adc
jmp
loopne
lret
sbb
cmpsl
aad
or
sub
mov
mov
in
or
out
pop
jge
adc
out
jmp
xchg
add
out
clc
dec
push
insb
fldcw
or
and
sbb
inc
or
out
pop
mov
out
adc
dec
and
jae
inc
jno
incb
sub
mov
cmc
stos
adc
int3
fs
cwtl
out
mov
push
sub
sub
jo
cmpb
ret
dec
jb
mov
or
inc
push
out
add
sbb
outsl
cmp
out
pop
mov
add
jb
or
mov
adc
inc
outsl
mov
dec
rclb
cmpsb
fbstp
xor
and
adc
fsubr
lock
stos
sub
ss
sbb
out
add
and
jbe
movsb
mov
out
iret
fbld
shr
shlb
clc
jae
xchg
dec
stc
mov
faddp
ret
jno
shlb
shll
out
xor
xchg
add
xor
jbe
test
add
lods
scas
adc
xchg
xor
sub
sbb
out
push
hlt
and
aas
or
pop
imul
push
xchg
mov
mov
outsl
cmpl
js
mov
std
shr
xor
stos
dec
outsl
insb
stos
push
repz
jmp
out
mov
push
push
sbb
call
cld
rcll
loope
out
out
fs
adc
mov
aam
sub
and
push
fcompl
push
mov
xchg
test
mov
scas
add
aaa
xchg
pop
cltd
mov
cmp
xor
repz
add
imul
and
es
mov
mov
and
xchg
pusha
out
inc
orb
movsl
fsubrl
inc
out
push
int3
cmp
inc
cmpsb
insl
sbb
pop
add
xor
dec
icebp
fcomps
sub
jo
sbb
sbb
xor
push
pop
xlat
adc
out
sub
lretw
pop
mov
xchg
popa
pop
scas
sbb
out
fcmovb
not
cwtl
jb
js
cmpsl
shlb
out
mov
call
pop
bound
stos
dec
mov
dec
mov
and
push
clc
sbb
xchg
fwait
pop
or
jae
scas
in
sti
jb
sbb
mov
cmc
mov
call
scas
sub
push
jo
aad
in
mov
add
int3
sbbl
pop
inc
pop
or
insb
je
lds
and
xchg
pop
arpl
dec
sub
nop
cli
ret
fucomi
fnstsw
mov
jb
in
outsl
push
into
adc
jb
js
adc
lcall
sbb
test
lds
add
stos
insb
mov
stos
mov
pop
fsubrs
inc
roll
push
and
rclb
or
mov
lret
shll
sub
xorl
adc
popf
in
loop
lods
in
les
mov
mov
adc
enter
fiaddl
jge
mov
fstpt
sub
daa
cmp
push
jae
scas
andl
loopne
push
sbb
fwait
xchg
mov
sbb
xorb
cmp
adc
adc
inc
push
out
dec
fisttpll
push
add
lods
into
mov
stos
test
int
int3
sub
lahf
loop
imull
aaa
in
mov
mov
sbb
pop
fcomps
xor
outsl
cwtl
cld
mov
and
out
push
adc
sbb
adc
or
push
sbb
or
les
mov
out
or
pop
jo
or
into
lods
fiaddl
loopne
sarb
mov
jns
in
hlt
out
out
mov
out
xor
gs
out
aaa
push
movsl
pop
push
lahf
subb
jo
loop
mov
stos
mov
mov
jns
pop
xchg
pop
rolb
mov
add
mov
out
cmpsb
or
mov
jp
lahf
mov
cmp
in
jne
xchg
out
popa
mov
leave
mov
aaa
fdiv
std
cld
inc
shll
dec
mov
mov
outsl
fwait
pop
popw
lcall
cltd
cmp
jns
or
ss
pop
mov
xor
fdivrl
out
sbb
sti
inc
and
lods
outsl
push
mov
stos
rol
js
fwait
and
cmp
out
fldenv
sub
xchg
outsl
pop
in
inc
dec
fwait
int
jg
out
or
insb
std
add
xor
jmp
leave
scas
loopne
jecxz
out
movsl
xchg
or
popa
cmc
xchg
pusha
xor
xlat
push
jne
int3
int3
scas
pop
andb
xchg
nop
mov
add
rorl
mov
in
out
psllw
idiv
xchg
cld
insb
out
or
testb
xor
in
gs
sbb
out
jbe
popa
push
xor
cltd
sbb
adcl
jl
inc
out
adc
inc
int
pop
jecxz
cwtl
push
jle
pop
movsl
mov
lock
enter
call
pop
xchg
scas
imul
shll
sub
dec
inc
out
pop
ficompl
cmpsb
out
pusha
jmp
or
xchg
cmp
in
js
outsl
lea
aad
pusha
rorl
or
daa
add
out
es
insb
jb
sbb
outsl
cmp
pop
mov
mov
sbb
cld
cmp
cwtl
dec
adc
pop
jecxz
inc
out
adc
fsubl
dec
push
and
pop
push
testl
leave
xlat
jbe
aas
xchg
xchg
xchg
pusha
inc
push
and
shlb
sbb
into
cmp
add
out
cltd
enter
xchg
jae
out
push
adc
ror
sub
sbb
jbe
cld
fbld
out
adc
mov
lret
mov
test
pop
push
clc
xor
out
mov
fsts
cld
sbb
icebp
xor
mov
or
dec
mov
jmp
push
push
cmp
int3
mov
cld
push
icebp
fnsave
jne
pop
clc
aaa
je
pop
adc
scas
lahf
fsubrs
aam
out
fistpll
and
inc
mov
sub
xchg
add
into
jmp
scas
pop
scas
stos
fsubrs
enter
dec
xchg
mov
push
out
sbb
jmp
out
in
cmp
sub
mov
xchg
ret
jae
je
in
mov
bound
pop
outsl
fldl
dec
loop
push
out
add
ret
out
pop
cld
push
lret
pop
into
sti
ja
pop
jb
sarl
rclb
test
fmuls
push
or
sub
out
sbb
mov
cmpsl
jae
mov
imulb
xorl
adc
add
mov
inc
sahf
loop
push
pop
cs
or
shr
ds
call
negl
in
pop
xor
jns
mov
adc
call
sub
mov
push
cmp
fstl
adc
test
lret
jmp
fstpl
popa
sub
jmp
jle
cmpb
ljmp
xchg
push
inc
loop
pusha
in
out
add
inc
adc
sbb
and
push
fistpll
push
inc
dec
jo
imulb
insl
mov
stos
xor
stc
add
sub
outsb
out
shr
mov
clc
fidivrs
jne
cltd
rol
stos
xor
mov
jle
sub
inc
out
jl
pop
sub
fstps
cld
sbb
imul
jae
push
call
jp
dec
push
xor
int
lods
push
push
aaa
out
shld
pushf
icebp
cs
lcall
sub
sub
cmp
jo
jl
adc
inc
out
stos
sti
cmp
mov
add
adc
std
dec
sahf
jecxz
xchg
lock
out
ja
mov
push
in
es
mov
jl
jne
outsl
rol
xchg
mov
cmc
dec
or
fs
sub
popf
lods
out
loopne
and
movsl
or
leave
out
pop
pop
pushf
notl
or
pop
pop
pop
cwtl
sahf
mov
fsubl
negb
pop
sub
data16
rcr
mov
dec
out
std
je
mov
out
shlb
daa
pop
out
int3
movsb
sbb
fldenv
jne
add
xchg
mov
aad
lods
fwait
mov
dec
subl
lret
or
pop
jbe
mov
add
adc
adc
fsubrp
mov
out
popa
aad
jge
fsubrl
lret
sub
dec
daa
lsl
mov
cld
and
cld
ljmp
mov
push
push
jo
push
ljmp
jns
jo
push
mov
movsb
repz
out
fdivrs
or
jg
dec
andl
loope
in
cmp
jns
out
lahf
cltd
push
andb
test
jl
mov
pushf
fwait
out
insb
aas
call
sub
out
in
mov
arpl
ret
clc
jecxz
push
push
xchg
pop
add
popf
fisubrs
data16
dec
test
shrb
lcall
es
daa
inc
mov
add
ds
ret
jge
adc
add
inc
popa
jle
test
out
pop
shl
mov
icebp
shll
push
scas
inc
iret
out
popa
jmp
jg
fmuls
fnsave
aam
scas
xlat
inc
pop
adc
ret
pop
in
lcall
out
jne
jge
cmp
jmp
adc
xor
lcall
cltd
ret
sbb
pop
mov
imul
fsubrl
out
xor
jno
lret
shr
ljmp
fwait
in
jbe
cltd
or
int
sub
dec
sbb
cmp
jb
and
scas
insb
xor
out
sub
pusha
lret
sbb
cmpsl
test
cmp
outsl
add
mov
xor
pop
popa
cmc
sbb
mov
push
lock
lcall
stos
mov
sub
test
sbb
out
pop
dec
xor
mov
jo
aam
fistpll
mov
inc
cli
out
dec
movhlps
and
mov
aam
push
push
mov
dec
dec
out
push
movsl
mov
out
lret
cld
mov
xchg
aaa
out
cmp
fisttpl
cmpb
mov
out
int3
or
sahf
cmp
push
into
jle
mov
dec
pop
test
pushl
into
mov
movsl
iret
pop
test
pop
shr
push
lock
mov
adc
cs
fldenv
xor
mov
out
aas
sti
lods
je
shll
pusha
mov
mov
add
andb
test
cmovae
fimuls
sbb
das
sar
push
mov
scas
jp
mov
cli
out
jo
out
dec
clc
in
in
jo
pop
pop
push
icebp
pop
lret
jbe,pn
push
add
pusha
pop
pop
pop
xor
mov
dec
or
fsubr
pop
fsts
inc
out
les
and
jbe
lret
mov
mov
lcall
es
fistps
adc
jmp
sbb
lods
sbb
sti
jecxz
out
int3
insb
jecxz
movsb
jmp
jle
in
idiv
out
cld
xchg
and
push
add
out
out
stos
imul
out
sbb
sbb
outsl
and
and
aam
mov
sahf
scas
pop
lahf
cmp
imul
test
sbb
sbb
mov
pushf
add
out
adc
popf
ss
lock
mov
shll
dec
scas
sbb
xor
nop
out
ljmp
shr
aam
sub
popa
xor
mov
adc
jo
jne
push
insl
pop
mov
xchg
fwait
popa
sbb
sbb
in
into
out
fcoms
repnz
nop
jbe
outsl
mov
cmp
pop
leave
out
xor
aas
sub
mov
xchg
scas
cmpsb
fnstsw
mov
pop
jge
ret
out
std
inc
jmp
fidivl
out
dec
shl
das
xor
mov
out
lock
pop
maxps
cmpb
pusha
push
mov
mov
mov
push
sti
sub
lods
jle
lret
push
loope
shrb
out
loopne
sbb
pop
jb
lret
xor
sub
or
gs
int
fisttpll
pop
fcompl
ljmp
popa
out
and
shll
push
jnp
jb
hlt
addr16
fmulp
cmp
out
inc
jl
cmp
sbb
jnp
pop
add
scas
adcl
pop
xchg
mov
addr16
inc
popa
out
push
movsl
sub
cmp
out
leave
pop
add
mov
mov
das
ss
jns
jnp
lahf
orb
pop
pop
dec
pop
cmp
loop
fsubrl
mov
popf
pop
ret
inc
pop
or
sub
test
xor
and
push
popa
inc
fimull
sbb
out
mov
fsub
int3
jecxz
out
lcall
or
fstpl
loope
aad
out
jecxz
push
cltd
xchg
mov
pop
ret
scas
xor
sub
jo
mov
pop
dec
int3
cmc
jle
adc
sahf
imul
cmp
cmc
je
sbb
or
out
mull
add
loope
jecxz
out
test
loop
movsl
out
fnsave
push
sub
lods
insb
loope
out
lea
pop
adc
hlt
out
mov
mov
adc
clc
jl
out
push
lret
mov
out
enter
xchg
iret
sbb
in
repz
fwait
idivl
and
out
lods
aas
push
or
fucom
push
icebp
data16
add
jno
mov
add
ret
jle
int3
fwait
jmp
and
dec
xor
and
bound
stos
add
adc
sub
jb
pop
fdivp
popf
and
das
mov
je
xlat
aas
jo
jns
push
fnsave
pop
or
or
jge
sbb
ret
and
out
imul
push
out
pop
pop
hlt
fldenv
fbstp
jns
icebp
fstp
aaa
adc
xlat
jo
or
mov
cmp
or
push
out
mov
aam
mov
sub
xchg
xchg
push
jae
dec
adc
cltd
out
lahf
testb
outsl
andb
arpl
aas
fcomp
xchg
jno
sti
push
aad
insb
leave
push
int3
out
rcrb
cmpsl
icebp
out
jnp
or
push
testl
xor
rorl
push
adc
push
gs
ljmp
sub
aam
fstpl
inc
scas
jge
mov
ss
jnp
fidivs
outsl
or
in
repz
call
sub
sahf
lcall
cmc
push
ffree
xor
scas
in
lods
pop
call
pusha
mov
ds
bnd
rcll
and
push
mov
out
ret
cmp
imul
lods
mov
loopne
sti
sub
scas
divb
das
popf
inc
cltd
dec
pop
add
rorb
jecxz
jge
xor
shl
add
in
or
sub
ss
lds
xchg
shll
xchg
paddb
mov
test
or
cmp
adc
rol
ljmp
out
data16
fs
daa
pop
es
std
ret
iret
orb
aaa
xchg
cmpsl
sarl
mov
mov
loope
lods
lret
test
cmp
xor
pop
sbb
inc
cmc
add
cli
adc
int
pop
ss
push
adc
pop
out
in
popa
lea
fcomi
and
sbb
fbstp
or
addl
adc
and
inc
sbb
xchg
into
fiadds
push
clc
movsl
jl
std
mov
std
and
in
mov
fucomp
es
fsubl
add
mov
dec
dec
mov
rcrl
adc
out
gs
xor
lcall
cltd
out
leave
loop,pt
in
pusha
xchg
cmp
iret
out
iret
push
xor
xor
out
xlat
dec
jb
xchg
mov
mov
loopne
fucom
mov
lea
ljmp
cmc
xor
popf
jns
addr16
cld
outsl
xor
and
add
inc
fisttpl
sub
sbb
and
outsl
adc
into
aam
cmp
aam
push
outsl
loopne
dec
mov
mov
out
mov
add
or
jge
in
push
cmp
sbb
sarl
outsl
insl
inc
scas
sbb
sbb
mov
push
enter
add
sahf
insb
cmpsl
jns
adc
fdivl
jp
cmp
imul
je
pusha
sahf
mov
ljmp
or
push
test
xor
movsl
adc
lea
js
push
and
out
scas
add
test
out
inc
or
mov
xor
pop
cltd
pop
mov
icebp
int
fldl
mov
jo
stos
cld
loop
scas
adc
jbe
dec
mov
sub
push
fdivs
loop
out
adc
inc
imull
aaa
out
gs
push
cmp
xor
lods
mov
dec
inc
sbb
add
stc
scas
adc
pushw
out
fidivrs
xor
jo
ds
pop
mov
xchg
mov
cmp
movntq
insl
lretw
pop
push
aaa
push
jp
sahf
dec
out
into
int
stc
add
lea
cmpsb
mov
out
in
mov
gs
push
andl
inc
in
movsb
dec
or
repz
xchg
idiv
jecxz
out
and
cli
out
outsl
adc
or
sub
loopne
pop
inc
pop
std
jb
mov
ds
lods
cltd
out
jp
add
pushf
movsl
mov
out
popa
xchg
mov
inc
ret
fucomi
fs
lods
stos
sub
ror
xor
out
aaa
jle
imul
out
inc
mov
lret
cmp
or
std
sarb
in
cmc
or
or
sub
or
daa
repz
pop
sbb
mov
scas
call
mov
cmc
test
insb
into
jecxz
fstps
dec
and
sbb
add
mov
test
pop
sbb
or
push
and
out
mov
add
out
pop
repz
dec
lret
cld
out
sbb
addb
iret
stos
test
dec
fdivl
les
into
xor
call
sub
test
into
lock
push
insl
scas
sub
pop
push
test
out
mov
rcrb
xchg
ret
fadds
mov
stos
and
ljmp
xorb
fcmovu
mov
inc
aaa
shlb
adc
loop
in
dec
pop
sahf
and
pop
insb
pusha
jnp
pop
mov
push
dec
push
loopne
out
test
shll
leave
lea
pushf
int3
or
sub
js
test
aaa
jmp
and
mov
pop
xchg
clc
loop
daa
mov
jle
mov
aas
cltd
mov
out
or
push
ret
out
dec
arpl
iret
std
xchg
lret
pop
xchg
fstps
pop
mov
jb
aam
dec
iret
xor
xor
add
inc
or
xchg
out
push
push
mov
imull
outsl
jnp
or
dec
xor
sahf
movsb
icebp
out
jne
pop
out
ret
adc
adc
into
pop
jb
adc
push
mov
mov
out
cmpsl
cmp
ljmp
inc
inc
sbb
xchg
ret
xchg
add
xor
stos
xor
cld
in
sub
insb
jg
outsl
movsl
into
cmp
out
mov
jb
jle
xor
push
xor
lds
cltd
out
pop
pop
or
mov
and
jecxz
mov
std
xor
adc
test
mov
bound
daa
mov
sub
mov
dec
gs
cmp
out
push
mov
rclb
push
jbe
call
insl
and
jge
popa
enter
mov
jbe
mov
lcall
and
fs
mov
inc
push
stos
cmc
test
xor
dec
pop
ja
pop
cs
add
lahf
inc
pop
pop
dec
outsl
cld
inc
arpl
pop
in
and
cmp
mov
movsb
cwtl
nop
xor
gs
out
adc
jmp
repnz
cmp
cltd
mov
xor
cmp
dec
movsl
jo
out
jp
xchg
or
hlt
and
and
mov
add
inc
ret
in
out
inc
jb
jne
push
idiv
insl
jle
xchg
mov
or
cltd
out
jne
das
ror
outsl
dec
out
lods
pop
mov
pop
out
mov
dec
subb
or
mov
ss
fsubr
sbb
dec
inc
sub
xor
ret
adc
mov
push
subb
iret
pop
sbb
sti
xor
daa
popa
dec
jb
push
mov
or
fcomps
pusha
mov
leave
out
pop
mov
pop
push
adc
stos
mov
outsl
negl
mov
das
cmpsb
jmp
out
repz
stos
dec
std
cmp
xchg
jg
daa
push
sbb
jecxz
scas
sbb
and
cmpsb
ljmp
je
add
lods
adc
push
std
xchg
lcall
xlat
mov
cmp
pop
inc
mov
cmpsl
out
lds
pop
in
mov
lret
sbbl
ret
sub
mov
adc
jmp
lcall
mov
dec
inc
out
mov
popf
dec
out
jge
cmp
xlat
loopne
out
xchg
call
inc
out
cmpsb
and
jp
adc
jbe
mov
repz
imul
add
push
out
jmp
lret
mov
stc
xchg
push
subl
jb
mov
pop
cmp
cmpsb
movsb
mov
jbe
lahf
outsl
roll
shlb
cmpsl
and
sbb
sub
mov
int
je
out
pop
cld
lea
out
cltd
dec
sbb
sbb
mov
out
push
push
call
and
stc
xchg
mov
cmp
and
js
and
lahf
lret
test
out
push
ljmp
or
mov
ss
hlt
insb
push
out
inc
mulb
mov
mov
out
lods
xchg
push
out
jg
and
cmpsb
arpl
fisttpl
leave
int
lds
jl
sub
and
and
icebp
lcall
pushf
mov
xchg
out
lret
mov
rcrb
int
inc
and
pop
out
sbbl
out
mov
gs
outsl
cs
xor
xchg
in
sub
hlt
push
fcmovnu
xchg
lcall
mov
xchg
out
and
in
out
push
sub
lret
or
add
dec
mov
xchg
jge
add
es
inc
pop
notb
out
add
int3
push
mov
xor
add
cltd
icebp
adc
sub
out
push
int
or
std
icebp
pusha
leave
push
and
xchg
pop
cmp
daa
xlat
stc
loope
sbb
outsl
pop
fcomps
or
test
add
insl
cmp
ljmp
mov
dec
fcomps
addr16
and
mov
out
xchg
sbb
jle,pt
das
lods
or
out
cmpl
scas
jmp
xlat
push
adc
inc
scas
lcall
sub
pop
or
cmp
jmp
push
add
adc
fwait
sub
pop
jecxz
xchg
dec
push
pop
leave
lcall
xorl
imul
scas
jmp
push
pop
push
push
pop
dec
mov
mov
inc
add
or
mov
adc
jns
sbb
sub
or
movsl
repz
jo
mov
xlat
into
sbb
out
addl
stc
test
jg
and
dec
test
test
mov
adc
sar
pusha
xchg
subb
mov
inc
out
rcrl
pushf
pop
xchg
or
sti
mov
cwtl
sub
mov
add
mov
cmpsb
mov
cmp
dec
jns
sub
push
pandn
xchg
ret
cmp
dec
add
popf
mov
hlt
dec
out
insl
in
daa
sbb
push
mov
push
or
jmp
cmpsl
imul
pop
sahf
movsb
add
or
out
lahf
pop
cli
into
jns
sbb
or
scas
or
gs
out
adc
mov
mov
loopne
scas
lret
cmp
fwait
sub
jmp
out
add
pop
aas
shl
sub
xchg
das
hlt
pop
mov
mov
std
jb
or
adc
loopne
out
sahf
jl
inc
jo
dec
xor
push
jne
ss
rol
mov
cld
jb
clc
sub
sub
xor
out
push
or
lea
inc
popf
movsl
rolb
out
or
out
rorl
out
sub
mov
das
out
xor
fstpl
fdivl
insb
and
lret
daa
mov
push
sub
aam
jo
cmpsb
adc
and
cmpsl
cmc
scas
cmpsl
shlb
outsb
pop
jno
jo
clc
loop
bnd
idiv
sti
cmpsb
outsl
cmpsb
cld
add
icebp
or
test
lea
fcomip
inc
je
loop
jne
ja
push
testb
cmp
jae
xchg
xchg
outsl
in
inc
jo
repnz
mov
out
divb
jae
outsb
inc
jo
fbstp
mov
lea
or
mov
fldcw
out
mov
cvttps2pi
imul
jns
out
and
and
in
push
fisttpl
push
outsl
inc
outsb
in
or
fisubrs
inc
lock
jle
fmulp
mov
sarb
outsl
and
jae
shr
mov
outsl
out
loop
xchg
fisttpl
in
lock
scas
aaa
jb
jno
mov
jnp
lock
leave
ljmp
jae
cmpsl
xchg
cmc
lock
out
xchg
pop
lahf
and
cltd
je
lcall
lock
cmc
xchg
cli
outsb
jle
add
mov
mov
outsb
ja
jo
xchg
and
test
repnz
out
loop
and
mov
icebp
mov
lahf
ljmp
divb
movsl
and
daa
cwtl
clc
jae
jmp
dec
push
and
cmc
add
mov
jg
adc
xchg
jo
icebp
aaa
mov
xchg
dec
inc
pop
mov
or
xchg
repz
xchg
test
ja
pop
push
dec
mov
daa
test
out
jno
lea
add
pop
scas
ja
movsb
and
loop
out
sbb
bound
jb
sub
repnz
ffreep
pop
adcb
test
jno
lock
out
cld
mov
mov
ja
sbb
outsl
scas
lock
pusha
je
ss
ja
ljmp
movsb
test
out
adc
xor
xor
scas
pop
lcall
outsl
gs
jb
repnz
xchg
mov
testl
xchg
movsb
mov
aas
sub
mov
mov
icebp
pop
cli
nop
in
popf
or
inc
mov
popa
and
xor
bound
xchg
scas
jb
sbb
popf
je
outsl
stc
dec
push
jae
int3
inc
lret
mov
test
and
push
jnp
outsl
adc
add
and
xor
es
addps
outsl
rol
or
jge
icebp
adc
sub
pop
xor
aas
sbbl
lock
and
jo
jns
repz
je
and
pop
cli
lock
xchg
jo
cmc
fcomi
mov
push
pop
adc
adc
push
push
dec
jmp
cmc
cmpsl
jbe
adcb
and
jno
outsl
mov
push
pop
aas
jne
fmul
fs
mov
test
jae
or
jae
cmpsb
xchg
lahf
jne
push
xchg
aas
jo
mov
push
mov
sbb
into
sub
mov
enter
nop
js
mov
negb
mov
push
push
stc
jg
outsl
lret
sbb
into
arpl
dec
enter
iret
dec
inc
or
movsl
aas
mov
mov
icebp
mov
enter
ja
adc
icebp
jo
repz
in
out
mov
add
mov
hlt
ja
repz
stc
push
sub
in
je
pop
out
fucomi
call
aam
xchg
mov
jecxz
outsb
sbb
adc
out
ljmp
scas
jle
xchg
jg
mov
cs
scas
push
loop
daa
mov
mov
test
mul
lds
ljmp
mulb
xor
mov
mov
sbb
test
ss
scas
sub
fwait
xchg
jo
lock
out
cld
das
test
jae
outsl
aad
mov
in
mov
repnz
adc
jae
cs
ss
push
int3
imul
mov
aas
jo
lahf
popf
jg
push
out
push
mov
scas
and
jo
and
jne
sub
aaa
pop
dec
bnd
add
add
movsl
push
push
aas
shll
jne
xor
push
lret
cltd
das
ret
cmpsb
or
imul
or
or
repnz
or
cmp
enter
lock
repnz
push
shl
mov
jb
icebp
or
cmpsl
loope
imul
bnd
sub
sub
in
xchg
jns
hlt
jbe
lods
cli
push
xchg
adc
jo
lock
stos
push
clc
jne
xlat
outsl
arpl
push
lock
dec
pop
rcl
data16
mov
ficoml
dec
neg
fwait
lcall
or
ja
imul
jg
psllw
pop
jb
jmp
clc
xchg
aaa
aas
repnz
add
push
out
orb
cmpsl
scas
stos
xchg
stc
dec
jnp
sti
add
mov
mov
out
mov
mov
nop
adc
xchg
sbb
lcall
test
out
sub
xor
mov
push
pop
jae
cmp
push
pop
xor
xor
dec
sub
xor
push
sub
xor
pop
sub
mov
fbld
loop
iret
addr16
sbb
xchg
push
add
or
pop
ja
data16
add
xchg
sub
pop
icebp
imull
pop
jb
daa
js
out
repnz
mov
add
xchg
out
xchg
push
flds
addr16
xchg
fisttpl
dec
loop
push
jmp
mov
test
sahf
mov
sub
mov
insb
add
out
test
push
in
out
or
call
stc
xor
ret
mov
sub
mov
adc
sub
mov
sti
pop
push
push
sbb
fs
std
shl
es
xor
out
out
push
jp
fwait
cs
out
lods
andb
dec
scas
dec
out
jl
push
dec
pop
out
push
popa
imul
insb
popf
adcb
mov
adc
out
and
outsl
jbe
ds
mov
in
imul
push
ljmp
out
add
out
insl
dec
in
out
jbe
lea
data16
mov
or
pop
pop
popa
in
push
pop
call
shr
and
mov
mov
test
lock
mov
out
fiadds
pop
dec
xchg
xchg
out
nop
test
scas
jge
sbb
into
and
sub
out
mov
shr
out
bnd
lret
int
ror
out
cltd
dec
jae
adc
add
pop
loope
movsb
bound
les
jne
stc
imul
lret
or
add
inc
sbb
out
fwait
sarb
in
divb
xor
mov
mov
and
stos
mov
outsl
sbb
test
out
inc
inc
stos
inc
out
pop
lcall
int
or
std
imul
pop
add
pop
into
outsl
into
or
sub
inc
push
inc
jb
enter
scas
into
and
out
jecxz
stc
cmp
decl
out
sbb
lret
sbb
adc
dec
out
in
xchg
icebp
fadd
repz
xor
inc
and
adc
mov
jmp
out
cmp
pop
test
js
ret
jle
xchg
scas
mov
repnz
jae
dec
mov
pushf
xor
out
dec
inc
xor
jb
int3
cmp
sub
adc
scas
fldt
sub
ljmp
push
pusha
ja
jb
jmp
add
jb
mov
xor
xor
mov
rcrl
je
ret
mov
out
sbb
sub
inc
adc
add
mov
inc
outsb
pop
add
xor
mov
stos
testb
jnp
imul
std
lret
scas
imul
jno
das
dec
inc
repnz
dec
jle
push
enter
mov
ret
arpl
xor
gs
cltd
rcrl
inc
out
sub
xor
bound
loope
popf
paddb
ljmp
aas
pop
pop
std
jb
mov
loope
scas
fs
in
and
mov
cmp
mov
ss
insb
mov
stos
fcomps
in
fsubl
arpl
push
dec
lds
mov
sbb
stos
push
sbb
cltd
jbe
fsubs
icebp
lcall
mov
sbb
xor
out
dec
xor
pop
lahf
sbb
cmc
inc
inc
ljmp
jecxz
popw
dec
pop
out
pusha
cmp
loopne
xchg
xor
and
xchg
xorl
cli
pop
push
out
and
sbb
pop
fsubrl
jmp
pusha
cmp
test
ljmp
repz
mov
inc
dec
std
or
fwait
jge
mov
lahf
and
in
mov
and
inc
pushl
out
jl
pop
das
lret
fnstcw
cmc
push
mov
jp
test
add
fsub
push
insl
mov
dec
pop
aaa
shl
fsubrp
sub
fadd
jnp
xchg
push
sbb
xchg
xchg
dec
sbb
out
sub
std
ja
jns
pusha
push
out
dec
insl
mov
add
rcrb
insb
sbb
sbb
push
jle
cmc
cmp
cmp
dec
xlat
or
pop
adc
rcrb
je
dec
iret
pushaw
xor
repz
push
bnd
xor
and
inc
lods
add
out
xchg
in
push
lahf
out
dec
leave
and
outsl
dec
or
fwait
jns
test
cmc
jno
xchg
sub
and
and
or
repnz
sub
xchg
repnz
hlt
js
mov
fs
sahf
loopne
dec
dec
push
push
stc
inc
push
insb
xor
fisubrs
mov
mov
mov
jne
pop
in
pop
mov
test
jno
in
outsb
mov
jo
stc
add
xchg
iret
test
sub
adc
cli
dec
xchg
fildl
repnz
jnp
sarb
mov
cmp
rorb
xchg
test
imul
push
into
jo
hlt
or
clc
add
nop
mov
shrb
popa
clc
push
cli
nop
push
je
sbbl
testb
lock
jg
mov
movsl
cmpsb
fisttps
push
outsl
test
cld
shrl
mov
mov
cmp
mov
lock
sarb
mov
dec
add
mov
mov
mov
enter
icebp
test
arpl
mov
in
int3
dec
icebp
jnp
cld
test
mov
ss
hlt
lahf
std
cwtl
icebp
fdiv
testl
dec
jp
cmpsb
xchg
mov
add
stos
sbb
repz
cwtl
xchg
ss
addb
fadd
pop
sar
cmpsl
addb
fistpll
jle
jb
mov
lock
jbe
mov
mov
hlt
pop
push
jb
xchg
repz
ret
jb
fwait
into
and
mov
pop
mov
mov
mov
mov
add
xor
pop
and
clc
push
mov
repz
mov
insl
loopne
test
shl
into
mov
testl
rcrb
push
cld
sbb
jno
femms
or
add
xorb
push
adc
or
mov
std
jecxz
je
imul
sarb
hlt
jbe
dec
mov
incb
adc
andl
mov
cwtl
icebp
testb
mov
pop
adc
jb
and
fs
inc
pop
sahf
push
lahf
mov
mov
jne
mov
cld
adc
adc
je
je
je
mov
fcmovbe
iret
and
movsl
inc
add
sbb
add
cmc
jns
cmpb
sub
add
loopne
jg
repz
add
xor
dec
add
pop
jbe
stc
stc
adcb
xchg
xorl
mov
jb
or
das
arpl
mov
cli
mov
inc
adc
pop
xchg
jb
cmp
sti
mov
in
icebp
jns
and
gs
in
loopne
mov
stos
cmp
sbb
jg
or
incb
lock
insb
arpl
adc
outsl
mov
sbb
and
mov
mul
jae
subb
repnz
imul
adc
jle
sahf
rclb
mov
push
add
xchg
insl
stc
nop
jae
xor
lahf
xor
movb
iret
fsubrs
xchg
ljmp
cmp
push
mov
enter
outsl
inc
loop
imul
roll
mov
push
cld
ret
xorl
leave
call
xchg
js
icebp
hlt
add
repz
xor
push
mov
xchg
jp
adc
orb
je
call
jns
adc
mov
sti
clc
xor
xchg
clc
fdivrl
cwtl
mov
xchg
stos
subb
dec
xchg
in
inc
mov
rcr
xchg
pushf
stos
mov
push
int3
lods
sbb
mov
push
call
cmc
hlt
jb
mov
ret
mov
int3
stos
adc
mov
fnstsw
pop
pop
int3
push
scas
rcr
into
stos
test
xor
sbbb
enter
movsl
je
lcall
stos
cld
adc
ja
push
mov
fimull
cld
adc
shll
mov
leave
mov
cld
adc
mov
enter
mov
out
mov
push
lods
adc
ja
push
ljmp
jg
orb
xor
lock
hlt
adc
movsb
outsl
daa
mov
pop
mov
idivb
adc
push
idivl
xlat
sbb
mov
scas
imul
fimull
aam
push
shrl
sti
movsb
xorb
cmp
adc
sti
and
sarb
test
xor
imul
pop
jno
das
repz
pop
push
mov
out
adc
ret
sti
push
div
mov
jg
xchg
repnz
aad
and
jne
icebp
dec
ds
out
pop
jl
jns
mov
or
out
sbb
outsl
sbb
sbb
xor
xor
lock
mov
loop
sar
lahf
jnp
outsb
mov
push
jg
xor
fmulp
enter
in
notl
stos
movsl
aam
cld
xor
sub
inc
xchg
mov
jg
testb
repnz
jno
cmp
mov
or
xchg
inc
adcb
jo
imull
test
sub
lret
lds
lahf
xchg
cmp
ficoml
cmp
nop
mov
xchg
stos
aas
add
jg
or
test
or
shr
pop
jo
lock
or
or
shl
stos
xchg
pcmpeqd
popf
div
jne
ljmp
lock
test
sbbb
xchg
mov
cli
repz
stos
arpl
or
test
in
jmp
sbb
add
fildll
sbb
mov
xor
test
ret
ret
fdiv
add
mov
in
adcb
xchg
clc
cmpb
xor
cwtl
push
insl
imul
fbstp
add
mov
je
jnp
out
js
adc
pushf
aaa
lcall
xchg
add
in
mov
pop
loop
scas
lahf
std
add
xchg
add
movsb
pop
sti
hlt
inc
lcall
pop
cld
add
xor
xchg
mov
xchg
clc
or
loop
scas
xchg
cmp
jae
repnz
inc
jp
aas
std
add
or
sub
int3
arpl
ljmp
data16
bnd
cmpb
sbb
mov
cwtl
pop
or
js
jne
xor
mov
hlt
int
movsb
out
mov
out
xchg
test
mov
je
out
outsb
pop
jg
movsl
pop
mov
aas
pushf
jmp
repz
mov
jne
cli
ja
add
pop
test
out
lret
mov
repz
shlb
cmp
pusha
insl
stc
mov
hlt
mov
mov
cli
stos
jns,pt
mov
jmp
mov
or
pushf
lcall
cmp
xchg
daa
push
lock
dec
dec
pop
popf
sahf
test
adc
stc
aam
lods
out
push
cmpsb
pop
ret
jns
cmp
hlt
add
into
lods
lahf
jmp
mov
popa
inc
imul
sarl
nop
or
lret
add
ja
imul
sahf
sarl
xchg
repnz
xchg
inc
je
sub
pop
sub
fisttpll
push
mov
xor
mov
cld
notb
sahf
insb
jg
outsb
mov
lret
add
sbb
outsb
add
insl
mov
outsb
mov
lods
cmpsl
data16
lea
movsl
lret
shll
cld
bound
push
scas
insb
push
dec
inc
movsb
test
push
mov
dec
add
std
xchg
movsb
mov
test
mov
push
lret
lret
sti
and
mov
stc
mov
aas
test
movsb
rorb
mov
outsl
jl
enter
mov
adc
sub
xchg
adc
and
inc
fldenv
inc
jmp
mov
fisttpll
or
stc
mov
inc
jg
xchg
shlb
popf
out
mov
in
test
mov
je
jmp
push
xor
call
mov
xchg
outsl
enter
andb
outsb
cwtl
jns
loopne
push
mov
outsb
inc
mov
mov
stc
int3
jns
mov
andl
mov
or
mov
dec
mov
xor
mov
fcmove
enter
outsb
xchg
mov
rorb
mov
add
mov
xchg
test
mov
mov
mov
or
inc
jg
mov
and
mov
xchg
mov
stc
mov
aas
mov
test
cwtl
dec
mov
bound
mov
pop
rclb
mov
jno
jno
ret
jle
hlt
adc
inc
lahf
out
clc
cli
sbb
mov
outsb
xchg
mov
testb
nop
int3
adc
or
jg
and
sti
mov
lock
cmc
inc
loop
repz
and
mov
pop
xlat
push
push
negb
movsb
fnstenv
lcall
and
cld
pop
xor
lods
mov
out
jne
jl
sahf
cmp
insl
daa
fisubrl
in
xchg
and
inc
or
je
push
scas
mov
mov
add
cmp
test
mov
fnstsw
int
fldcw
push
or
dec
jle
cmpsl
push
js
js
in
lcall
mov
mov
dec
cltd
xchg
push
test
mov
lea
push
stos
testb
notb
hlt
add
lods
in
mov
xchg
sub
aam
mov
xchg
loopne
xchg
insb
mov
mov
popf
add
iret
scas
in
js
repz
pop
arpl
mov
es
jae
inc
fisubs
cld
lea
mov
dec
daa
adc
sahf
in
add
loop
cmpsb
mov
mov
in
lock
add
loop
jno
xlat
jne
movsb
xchg
popf
outsl
jns
daa
mov
and
xchg
xlat
cld
lock
mov
cmp
push
mov
and
xor
add
cld
repnz
push
mov
cvttps2pi
leave
stos
aas
fwait
stos
inc
test
jns
cmp
or
imul
and
into
addb
xchg
clc
push
imul
data16
xlat
ret
add
push
inc
lods
or
stos
movsb
rclb
lds
add
sbbb
adc
mov
jl
shrl
mov
mov
sbb
push
repz
lock
cmc
test
pop
ud0
xor
xchg
pushl
out
sbb
clc
mov
add
test
rclb
addl
scas
lods
sub
adc
inc
and
popf
jo
movsl
les
sti
aam
inc
fisubrs
lea
xchg
insl
pop
arpl
mov
js
scas
ja
lea
out
jmp
jne
xchg
jbe
sti
mov
pop
mov
cltd
loop
adc
mov
rcr
stos
xor
xchg
push
xchg
xlat
repnz
pop
aaa
push
jne
pop
cmpsb
fistpll
outsl
lahf
cmpsb
xlat
cmp
mov
addr16
mov
out
push
xlat
xchg
xchg
les
jnp
push
icebp
jne
fidivs
jb
sti
cld
cmp
popa
rorb
inc
mov
std
adc
mov
cmp
jl
push
pusha
mov
scas
jp
movsb
ja
push
mov
add
xchg
aad
cli
jae
dec
out
std
xchg
aaa
cmpsb
jnp
jae
ja
sub
fucomi
out
xor
cli
cmpsl
or
clc
repz
jno
add
pushf
xor
repnz
jg
ljmp
enter
fisttpl
cmpsb
xor
repnz
cld
sub
pop
inc
jnp
repz
cmp
xchg
mov
js
cmpsb
pop
loopne
xchg
push
aam
mov
stc
xor
xorb
movsl
or
add
xchg
mov
in
test
std
cltd
les
mov
cli
xor
jb
adc
jnp
jae
loopne
sti
mov
cld
aam
lcall
imul
xor
js
imul
mov
sahf
xor
divb
xchg
or
push
movsb
or
sahf
mov
push
push
sbb
pushl
pushf
into
test
xchg
out
fisttps
jg
mov
jl
push
clc
ja
pop
sar
icebp
shll
test
add
daa
les
xchg
test
daa
stos
sub
js
sub
arpl
movsb
imul
cli
hlt
mov
or
xchg
dec
bnd
je
cld
cmp
cli
xor
sbb
fwait
test
inc
cmp
xor
or
jp
test
ret
out
mov
idivl
test
adc
mov
rolb
mov
rcl
xor
mov
mov
mul
outsl
test
int3
push
test
js
lret
mov
jo
repnz
xchg
mov
cltd
adc
ljmp
xor
mov
jmp
cmp
xchg
mov
lock
push
cmc
add
mov
and
and
xchg
cmpsl
nop
xchg
and
mov
xor
mov
push
cld
sbb
adcl
jb
push
mov
sar
popf
or
into
xchg
dec
dec
push
aam
sbb
push
adc
push
mov
adc
add
cmp
xor
js
add
dec
adc
aam
lock
lret
mov
pop
test
mov
push
xor
dec
and
outsb
cltd
scas
mov
pop
push
xchg
repz
mov
cli
loopne
imul
rclb
clc
mov
ficomps
add
xchg
repnz
sbb
push
ror
call
push
int3
xchg
outsl
in
push
loopne
iret
push
sbb
push
mov
xchg
lods
sub
adc
add
mov
std
sbb
or
cld
mov
pushf
adc
movsb
clc
repz
xor
lcall
add
jp
jp
push
jge
jge
jo
insb
loope
fs
mov
jl
mov
cmc
xor
add
jno
sahf
test
clc
das
repnz
les
popa
and
ret
mov
gs
cmpsl
clc
scas
mulb
xor
jnp
in
sbb
fwait
xor
lret
cld
in
mov
pop
pop
inc
mov
jnp
mov
jl
mov
cld
dec
clc
stos
inc
hlt
cmp
add
shl
mov
outsb
pushf
into
test
xchg
repz
bound
mov
mov
xchg
mov
fildl
jge
jne
stc
std
xchg
cmp
mov
push
xchg
lock
ds
test
mov
mov
jl
xor
jae
add
lock
cli
loope
xlat
lcall
mov
ficoms
movsb
xor
cltd
cmp
les
repnz
and
daa
mov
mov
cld
orb
div
jg
xchg
insb
jle
cmp
mov
ret
mov
pusha
arpl
and
scas
lock
arpl
ljmp
cld
mov
lahf
cltd
inc
movsb
mov
cwtl
push
adc
test
std
cwtl
mov
xchg
xchg
bound
push
rep
xchg
ja
data16
dec
adc
mov
mov
nop
mov
sahf
decl
push
cmpsb
movsl
sub
cmp
cmp
ret
jb
mov
test
mov
dec
mov
jg
mov
cs
sarl
stos
sti
test
shr
popa
repnz
push
into
icebp
add
xchg
mov
shlb
shlb
loopne
pop
std
and
dec
js
push
mov
dec
rol
sub
mov
divb
outsl
push
out
lock
das
out
jno
add
and
sahf
add
xor
mov
stc
shl
repnz
mov
sarb
arpl
or
pop
mov
iret
xchg
mov
shll
loope
sbb
xor
add
xor
dec
xchg
lcall
popf
loop
adc
int3
mov
ss
lcall
xchg
idivl
insl
cmp
adc
in
mov
hlt
repz
lds
adc
mov
mov
sbb
or
mov
mov
mulb
mov
mov
mov
mov
inc
test
lahf
je
test
and
insb
adc
cld
inc
mov
mov
addr16
xchg
jg
es
div
lock
sub
mov
or
std
xchg
je
xor
div
xor
repnz
clc
in
xchg
je
test
lret
add
mov
mov
repz
cmp
inc
fwait
call
sbb
shlb
pushf
mov
mov
test
ret
roll
idiv
push
add
sti
jg
nop
jo
adc
mov
shll
add
pushf
mov
mov
adc
mov
stos
cmpsb
in
repz
xchg
out
dec
and
scas
ret
sbb
lret
xchg
mov
jl
pushf
mov
jg
push
adc
adcb
adc
xchg
xor
pushf
mov
std
or
fidivs
adc
sar
push
call
std
stos
jg
nop
mov
nop
xor
jo
or
mov
ja
out
jl
cli
lock
in
mov
shlb
sub
xchg
mov
adc
mov
decb
negb
repnz
jbe
add
fwait
jge
xchg
cmpsl
xor
test
stos
aad
daa
repnz
insl
insb
call
idiv
stos
adc
and
test
mov
loopne
sub
or
addl
or
xchg
stos
subl
icebp
nop
cmp
xor
jl
test
cmpsb
sub
jns
fs
ljmp
xchg
lcall
adc
andb
or
jns
jae
push
rorl
in
rorb
jl
add
or
xchg
out
out
loop
shrl
pop
xor
std
and
test
in
sar
outsb
mov
int3
pop
inc
mov
jnp
cpuid
cmp
mov
and
rorb
push
int3
sbb
mov
mov
jp
mov
mov
sub
ret
sub
cld
xor
adc
jno
popa
orb
repnz
dec
ja
add
cmc
dec
negb
repnz
stc
adc
xabort
jno
clc
dec
cmp
mov
mov
adc
xchg
mov
xchg
xor
test
adc
fs
movsl
lret
xchg
rclb
rcll
stc
pushf
add
subl
ret
pushf
sbb
iret
lret
into
sbb
aaa
mov
cmp
negl
jg
aad
shlb
call
clc
cld
sub
lds
pop
mov
push
jno
cli
or
lods
xor
int3
adc
xchg
int3
jge
repz
mov
pop
lret
mov
sbb
cmc
add
mov
stos
stos
adc
int3
mov
sub
daa
cmp
xchg
int3
test
or
sbbb
ret
dec
fnstsw
aas
hlt
je
jg
loopne
mov
mov
cld
adc
cwtl
xor
mov
mov
sub
add
adc
and
mov
enter
stos
add
mov
jp
mov
in
jp
cld
scas
loopne
repz
inc
dec
push
push
dec
filds
mov
out
mov
stos
jns
scas
negl
lcall
jb
cmc
js
inc
cmp
push
jl
orb
push
xchg
or
mov
test
xchg
add
cltd
insb
in
push
mov
call
jmp
mov
insl
sar
lock
mov
test
cmp
movsb
addr16
mov
inc
sub
cli
and
test
mov
lret
test
int3
into
dec
xchg
lcall
sub
or
pop
xchg
cmp
imul
jl
xor
sbb
push
lret
stc
jmp
xor
xchg
mov
adc
jnp
fs
dec
mov
ljmp
xchg
jns
mov
xor
and
mov
stos
fstpt
movsl
mov
out
test
loope
xchg
mov
sbb
mov
rcrb
call
mov
push
inc
inc
mov
hlt
adc
mov
loopne
add
ss
add
aas
fisttpl
adcl
js
mov
inc
adc
xor
push
add
mov
and
pop
je
inc
xchg
mov
mov
or
add
insb
fs
cmc
orb
cld
sub
add
xchg
in
push
xorb
pop
lock
lods
mov
dec
xchg
popa
mov
dec
xchg
rolb
xchg
jo
xor
mov
lods
jle
in
adc
add
xchg
push
xor
adc
inc
mov
test
subb
pop
ret
cld
jnp
test
xor
pop
stc
in
jp
dec
xor
test
out
rclb
xchg
into
mov
aas
and
cmpb
xorb
mov
shll
sti
dec
andb
andb
fs
cmp
mov
and
mov
mov
mov
lcall
add
jmp
cmp
sbb
test
push
js
mov
aad
mov
pop
push
mov
xchg
movsb
sbb
test
sub
sbb
jmp
rclb
hlt
std
pushl
add
and
cmp
sbb
inc
adc
push
and
lock
cmpsb
mov
xor
aam
leave
jno
push
cld
add
je
add
sti
repnz
and
adc
mov
test
aaa
shll
cld
xor
je
lret
pop
mov
sbb
adc
rclb
dec
ret
movsb
push
xor
nop
inc
clc
je
out
cpuid
or
rdseed
std
mov
pop
lea
inc
or
xchg
ret
adc
push
aad
adc
shll
and
adc
jmp
push
test
add
cmpsb
mov
lcall
mov
inc
cmc
jne
cmc
or
stc
xchg
mov
mov
mov
mov
or
xchg
cld
mov
xchg
dec
addl
stc
cwtl
out
or
ret
in
stos
inc
sti
ljmp
sbb
pop
stc
mov
jb
mov
lods
pop
or
test
cmp
daa
xchg
xchg
popf
xchg
test
ljmp
cmpb
adc
pop
stos
adc
cs
add
rolb
cwtl
std
and
clc
xchg
std
xchg
xor
test
loope
push
mov
push
xchg
lods
cs
or
cwtl
xor
repnz
icebp
mov
cli
fdivp
mov
test
xorb
cld
mov
inc
sbb
cmp
in
cmp
mov
ja
mov
jle
test
std
mov
mov
ljmp
or
clc
loop
pusha
test
lock
rolb
rep
test
xchg
dec
repnz
xchg
lods
lcall
fstps
push
aad
mov
or
repnz
or
mov
adc
add
push
sub
in
mov
loopne
xsha256
cmpsb
aad
pop
fdivs
inc
dec
mov
stos
in
and
clc
xor
or
xor
mov
pusha
mov
rcrb
jecxz
out
arpl
pop
stos
movsl
nop
jns
pop
xchg
rcll
movsb
xchg
jns
repz
and
in
lcall
fwait
leave
jl
mov
pop
nop
mov
test
clc
mov
lds
mov
mov
in
andb
xchg
orl
icebp
push
std
cmpsb
mov
cmp
mov
jnp
cli
ss
xor
repz
stc
pop
and
aaa
divb
jl
outsl
inc
stc
aaa
js
insl
pop
ficomps
rep
std
inc
mov
add
xchg
ret
sbb
sub
in
int3
jmp
adc
mov
adc
xchg
jns
idivl
cmp
repnz
aaa
daa
xor
pusha
fmuls
mov
mov
mov
and
sbbl
mov
dec
std
test
ret
pop
and
mov
lea
addr16
mov
mov
test
jno
mull
cmp
call
mov
sbb
scas
pushf
lods
mov
pop
xchg
neg
fildll
add
in
mov
adc
sbbb
mov
jb
jae
sahf
add
cmp
call
jno
mov
jae
mov
sti
clc
std
aaa
mov
repz
stc
clc
inc
test
xchg
loopne
orl
mov
je
lock
push
movsb
or
pop
popf
and
cmp
xchg
jmp
ja
stos
lahf
mov
lahf
jg
jge
inc
cmpsb
jl
mov
xchg
mov
add
pushl
xorb
mov
add
repnz
cld
xchg
clc
stc
mov
lea
cmp
and
arpl
vpsubb
nop
xchg
mulb
scas
icebp
inc
inc
bound
cltd
movsb
sar
sahf
xor
cli
jmp
push
cmpsb
mov
mov
andl
hlt
repnz
pusha
sahf
add
fdivr
sub
mov
insl
cwtl
push
rclb
push
rcll
xor
pushl
je
adc
fadds
leave
call
xchg
pop
test
xchg
test
rclb
xchg
and
std
sbb
cltd
jl
sbb
test
mov
imul
cwtl
add
fisubl
sbb
xlat
movsl
push
insb
mov
std
xor
std
insl
cmp
mov
adc
mov
lea
insb
or
int3
mov
lock
add
test
pushf
mov
inc
inc
jp
jg
cmpsl
adcl
dec
inc
xchg
inc
push
xchg
lock
xchg
mov
mov
shr
adc
shrl
push
mov
ret
push
add
aam
addb
insb
mov
je
hlt
or
das
cli
dec
mov
lret
adc
jg
xor
fnstcw
scas
stos
lcall
mov
cli
test
fsub
hlt
push
pop
mov
xor
adc
pushf
jg
test
fnop
test
mov
xlat
gs
push
jne
pop
and
cmc
sbbb
outsb
or
lea
test
xor
add
mov
je
orb
cmpl
and
test
mov
jb
cmpsb
test
movsl
mov
mov
int
mov
lcall
idivl
stos
loopne
or
jl
out
sahf
icebp
xchg
loopne
mov
nop
mov
and
mov
inc
adc
sub
movsl
jne
sahf
dec
insb
loope
mov
mov
jnp
imull
xor
adc
push
das
mov
push
adc
in
in
repz
fwait
shl
stos
pop
cmp
sti
movsb
xor
hlt
aam
mov
add
loop
cwtl
movsb
lret
mov
rol
outsl
stos
inc
mov
test
stos
mov
cmp
cld
dec
and
in
mov
dec
fdivl
insb
enter
fdivl
mov
fcomi
fsts
xchg
cmp
or
add
adc
sub
and
adc
jnp
mov
insb
mov
cmc
mov
mov
xor
mov
test
rol
into
stos
clc
xchg
mov
into
clc
outsl
movsb
shrb
mov
aam
fdivl
xor
clc
lds
mov
ja
rep
out
rcrb
mov
cmpsb
fimull
fildl
fisubl
pushf
xor
or
pop
out
and
adcb
leave
call
shl
sub
je
or
cmp
xor
add
ja
repz
jp
clc
jmp
cpuid
iret
sbb
test
jl
mov
lcall
pop
mov
jle
pop
test
dec
insl
push
mov
xor
dec
or
outsl
aas
cmp
mov
and
cmp
aas
lock
out
push
or
incl
arpl
pusha
or
popf
add
push
popl
mov
and
mov
ds
add
shlb
mov
hlt
je
xor
xlat
xchg
xor
pop
mov
adc
fmull
scas
negb
inc
xlat
hlt
clc
or
and
push
js
push
and
mov
imul
test
mov
adc
push
and
add
mov
mov
or
mov
divb
mov
mov
icebp
popf
hlt
xlat
fadd
stos
cli
dec
adc
adc
arpl
jmp
mov
sti
bound
addr16
nop
xor
add
dec
xchg
dec
js
out
mov
pop
icebp
in
mov
xchg
adc
jnp
push
decl
decb
or
cmpsb
xchg
popa
int
push
add
sti
jae
jg
or
mov
movsb
xchg
xchg
std
xchg
inc
and
sti
add
in
lods
mov
push
fmull
gs
shll
nop
repnz
into
aad
jae
lods
loopne
incb
jo
xchg
clc
sub
mov
ds
push
outsl
rolb
push
hlt
or
add
arpl
jl
test
shlb
xchg
out
jno
lahf
push
lock
xchg
pop
popf
hlt
jo
div
jg
nop
mov
xor
jno
repnz
push
rolb
pop
std
dec
xchg
jne
jnp
iret
push
xchg
xchg
into
sbb
and
loopne
ds
fs
mov
imul
addl
xchg
lock
mov
fwait
inc
xor
ret
out
jnp
out
inc
std
adc
cmp
shl
mov
jae
out
lds
xchg
not
ljmp
inc
lock
cmpb
mov
in
mov
xchg
sti
les
fbld
outsb
repz
lcall
add
mov
dec
add
mov
fidivrl
test
xchg
or
inc
cmpsb
dec
xchg
mov
test
xor
mov
dec
push
push
mov
mov
xchg
in
or
sahf
rcrl
gs
jae
push
push
jmp
mov
push
mov
addr16
rolb
jmp
call
cld
inc
xchg
hlt
xchg
loop
push
loop
push
lcall
ja
loopne
arpl
sahf
lahf
add
cmpb
pusha
add
mov
loopne
mov
xor
mov
enter
popa
xor
aaa
std
mov
cli
or
dec
movsb
jmp
ficompl
repnz
stos
mov
dec
rclb
addb
aam
sarl
jne
movsl
cmc
add
dec
je
fwait
jmp
dec
decl
jl
jmp
and
and
sahf
add
lahf
mov
icebp
sbb
lret
repnz
jle
xorb
xlat
pushf
cmp
test
aam
xchg
mov
mov
add
mov
call
ret
or
xor
mov
in
scas
mov
mov
clc
xlat
lods
adc
iret
xlat
jbe
jg
cld
mov
mov
test
or
imulb
cmpsb
loope
dec
mov
repnz
popf
dec
sub
lret
in
out
shlb
jg
jo
pop
jmp
mov
cmpb
jmp
sbb
add
inc
bound
mov
push
inc
loopne
mov
fmuls
js
or
dec
dec
cld
xchg
aam
sbb
pop
dec
add
test
fsub
lret
inc
xlat
add
stc
mov
mov
cmp
idiv
cmp
mov
adcb
imul
je
test
sbb
xchg
pop
lahf
in
push
notl
aam
stc
cld
push
mov
jl
jbe
aas
insl
in
hlt
nop
jns
je
add
jecxz
mov
mov
stc
cmpsl
out
cltd
mov
jno
in
fnstsw
lods
movsl
leave
mov
pushf
cmp
push
mov
adc
lock
xor
hlt
push
mov
xchg
xchg
push
repnz
add
pop
sbb
dec
call
ljmp
popa
adc
cli
push
inc
rol
and
sub
sbb
pusha
and
iret
pop
sub
iret
lret
jl
mov
test
int3
cmp
stos
push
shl
movsb
xchg
bound
xor
or
cltd
stc
mov
ljmp
cld
dec
fldenv
jg
negb
dec
or
outsl
adc
jo
fwait
add
leave
push
into
and
inc
mov
sub
xor
push
subl
bound
mov
mov
xor
aad
mov
cmpsl
ljmp
imul
inc
cmpsb
mov
shrl
mov
xchg
lods
sbbb
clc
aad
std
je
ret
es
add
je
fs
leave
jae
xor
inc
cld
xchg
arpl
sub
mov
dec
arpl
push
rolb
jne
xor
repz
mov
push
lea
mov
inc
loop
and
movsl
lock
stc
fnstcw
in
push
loopne
addb
pop
ret
repnz
orb
rorb
jns
out
movsl
out
xchg
lea
jo
out
xchg
push
jns
lock
out
xchg
mov
jno
out
xchg
vmwrite
out
xchg
jns
jb
out
xchg
adc
repnz
jae
out
adc
clc
cmp
movsb
mov
mov
rcrl
test
lods
cld
xchg
jmp
cli
jns
repnz
cmpsb
hlt
ficoml
out
orb
loopne
dec
stos
scas
mov
and
add
and
xchg
fmulp
pop
dec
std
or
aam
je
and
push
push
test
mov
clc
scas
inc
sbb
pop
adc
sti
or
lcall
and
add
sub
push
lock
push
fsubs
cwtl
lods
cmp
rorb
lods
push
mov
cli
mov
xchg
jnp
mov
add
xor
mov
outsl
divl
out
pop
push
mov
decl
lock
in
dec
jns
jo
sti
test
add
push
ret
and
stc
mov
jns
outsl
cmpsb
adc
imul
jmp
dec
clc
aaa
out
mov
jle
mov
xchg
xor
jge
enter
hlt
test
test
out
fs
ss
jns
movl
mov
mov
in
mov
sbb
xchg
mov
mov
ficoml
adc
jno
les
mov
push
mov
repnz
decl
cld
inc
sub
shll
pusha
dec
shlb
sub
adc
sbb
add
add
and
add
mov
sbb
jno
mov
mov
in
lock
jb
lock
xor
or
mov
mov
mov
sahf
push
dec
push
icebp
hlt
sub
cmp
adcl
sub
popf
test
dec
jp
jne
cli
lock
in
je
lods
sti
leave
enter
push
inc
xor
cld
insl
pop
movsl
xor
adc
repnz
cmp
and
sbb
in
or
sbb
outsl
loope
subb
das
dec
adc
addb
jno
xchg
cld
cwtl
inc
clc
jae
mov
push
fucomip
jge
stos
or
js
loop
and
cli
arpl
icebp
iret
mov
pop
cli
add
push
xorb
push
and
cli
in
xchg
jno
sti
xor
mov
mov
adc
cmp
movsl
stc
mov
js
inc
insl
mov
jmp
sbb
sbb
divl
fsubr
test
mov
rclb
xchg
add
lods
and
dec
scas
fists
lahf
stc
cmpsb
lret
cwtl
adc
xlat
stos
pop
mov
push
mov
imul
pop
mov
sbb
pushl
pop
fwait
pushf
push
jno
mov
lahf
lea
mov
push
stc
call
jbe
rolb
lea
imul
pop
mov
dec
mov
push
mov
mov
test
mov
mov
call
bnd
lahf
cmpsl
sub
lea
add
add
cli
adc
pop
mov
mov
in
pop
mov
stos
mov
call
mov
inc
lahf
sub
mov
lahf
jo
mov
imul
push
lock
push
lods
mov
nop
mov
xchg
daa
pop
mov
mov
xchg
push
daa
mov
popf
icebp
jno
cmp
push
gs
popf
cmc
fimull
and
fwait
mov
xchg
cmpsl
xchg
jg
ja
add
loop
in
call
or
jbe
or
mov
xchg
fwait
movsl
xchg
aaa
cwtl
mov
mov
movsb
arpl
or
jb
repnz
stos
jno
jo
pushf
inc
stos
loopne
pop
in
add
mull
mov
aam
hlt
lock
cld
fsubl
sbb
test
add
push
stos
in
lret
lea
xchg
insl
push
pushf
push
addr16
push
lret
movl
das
xchg
xchg
mov
push
pop
test
divb
xchg
setge
dec
cmp
shrb
pushf
lods
in
xor
add
add
jnp
loopne
jge
sub
lret
sti
push
in
jg
daa
mov
sti
xor
dec
mov
xor
sarl
xlat
mov
jo
hlt
popf
jge
daa
mov
fldcw
neg
inc
or
sbb
jecxz
lods
jmp
sbbb
jno
pop
test
iret
stc
jmp
mov
xchg
sbb
lods
in
pop
inc
rclb
call
adc
mov
jae
cld
fcmovnu
push
sub
xchg
stc
push
lea
mov
in
repz
jge
insb
pop
adc
insl
pop
loopne
adc
test
jmp
testb
push
inc
imul
je
pop
shlb
mov
imul
daa
xlat
mov
out
out
in
cmc
cmp
adc
imul
addb
sub
dec
in
test
cmp
dec
mov
lock
adc
clc
fwait
iret
out
inc
xchg
push
lea
pushl
mov
cld
mov
cmp
clc
mov
das
icebp
jp
jno
insb
mov
push
mov
hlt
insb
testl
mov
daa
testb
mov
cwtl
xchg
sbb
xchg
pushf
ret
enter
loopne
jp
fdecstp
mov
fisttpl
mov
decl
popa
mov
mov
mov
in
out
or
insl
push
std
mov
jmp
pushf
push
jle
mov
std
bound
mov
rolb
loop
test
roll
test
pop
pop
inc
bound
enter
outsl
loop
add
pop
jecxz
nop
pop
testb
mov
sbb
cld
add
xor
lods
iret
adc
dec
add
loop
adc
cwtl
adc
sub
ds
cli
mov
hlt
sarl
pushl
mov
mov
les
insb
cmp
push
aam
movsb
cmpsl
insl
lahf
mov
mov
pop
shrl
xchg
js
adc
cmp
pop
loope
or
inc
call
jbe
test
inc
shl
and
lock
lock
adc
in
push
adc
out
orl
cmp
movsb
and
sbb
or
mov
mov
and
aas
sub
pinsrw
xchg
movsb
popa
mov
in
gs
popa
nop
add
sbb
imulb
jmp
aaa
push
jg
aaa
inc
dec
iret
subb
jb
sub
mov
and
mov
outsl
xor
pop
jmp
mov
add
or
adcb
cld
push
sbb
fs
leave
lock
add
xchg
mov
mov
mov
xchg
xchg
xchg
xchg
push
add
dec
js
rcl
or
adc
les
add
fdivl
ljmp
xor
in
inc
loop
mov
mov
adc
mov
jl
mov
adc
imul
movsb
adc
insb
or
lds
pop
ret
int
nop
mov
sahf
mov
stc
bound
sub
mov
push
adc
pop
ficoms
stc
dec
push
dec
cmpsl
sbb
inc
adc
xchg
outsb
xor
movsl
cld
mov
aaa
mov
sbb
loop
jno
fwait
les
iret
les
mov
inc
push
stos
xor
icebp
outsl
outsl
insl
mov
mov
add
stc
pop
xchg
icebp
dec
mov
outsl
loopne
jge
and
xor
popl
xchg
mov
cmp
sti
add
cmp
cli
movsl
sbb
ss
repnz
popf
lods
ret
push
in
cmpsb
hlt
push
ja
stos
aam
call
pushf
inc
jae
lea
and
in
insb
mov
in
subl
imul
movsl
xorb
dec
inc
sub
dec
rorl
jns
fidivrl
enter
inc
sub
push
int
mov
negb
rol
dec
call
xchg
in
repnz
orb
mov
mov
and
cld
push
mov
pop
cmpb
push
jp
fisubrs
pushf
sahf
sbb
cmovne
add
mov
mov
add
xor
add
mov
lock
jl
push
movzwl
and
jbe
call
pop
adc
push
or
jns
aam
cwtl
fsubp
ficoms
lcall
shlb
scas
jno
clc
xchg
mov
enter
cli
adc
out
in
mov
das
shlb
pushf
shlb
decl
jecxz
jne
pushf
mov
iret
fcoms
call
adc
jne
mov
negb
pusha
orb
adc
mov
fisttpl
cli
or
add
jnp
or
lahf
adc
loope
mov
je
repz
push
hlt
mov
imul
into
lcall
xchg
testb
out
mov
iret
add
sbb
iret
insb
je
stos
xchg
push
xchg
adc
mov
mov
xor
xorb
lea
jae
cltd
mov
sbb
insl
iret
push
cld
push
stos
push
std
addr16
loopne
mov
mov
rorl
cmp
adc
add
xlat
test
loop
sub
in
add
sbb
repnz
shr
sarb
adc
mov
cmpsl
loopne
sub
div
lret
pop
dec
and
mov
xor
in
addr16
and
push
cmpsb
sti
fsubs
rorb
decl
mov
xchg
roll
repz
imulb
sar
outsl
lahf
nop
or
cld
rclb
out
jns
repnz
fstl
xchg
add
xor
cmp
or
xchg
jns
and
mov
mov
outsl
sub
test
push
sbb
mov
jmp
rolb
mov
test
xor
adc
mov
push
pop
scas
loopne
cld
add
movsl
lea
inc
cltd
int3
movsb
pushf
cmp
fimuls
cmp
loopne
mov
ljmp
nop
popf
test
lcall
not
out
xorl
lret
nop
nop
mov
std
dec
adc
outsl
xchg
int
xor
test
mov
repnz
leave
cld
xchg
mov
fwait
enter
xlat
enter
add
popf
xorl
popl
xor
jg
pop
mov
jne
jmp
xchg
mov
clc
push
add
sbb
repz
add
add
xchg
sbb
bound
scas
sub
add
add
cmp
movl
mov
cs
out
mov
xrelease
jg
sbb
std
mov
add
in
in
jmp
pop
add
push
xlat
inc
xchg
mov
lock
out
testb
mov
pop
clc
and
add
movsl
in
mov
add
mov
fnstsw
rorb
inc
dec
nop
repz
xchg
in
inc
jb
cltd
pushl
xchg
pop
adc
mov
or
lret
cmc
or
xchg
dec
scas
rolb
push
popa
xor
fsubrs
movsb
xchg
xchg
dec
mov
js
dec
addr16
lcall
jnp
mov
rorb
push
sahf
loopne
shl
lcall
aad
xchg
les
subb
dec
adc
cmp
mov
push
adc
xor
jg
negb
mov
mov
mov
aad
inc
add
add
mov
ficoms
or
fwait
aas
stos
test
add
pop
ret
int3
jns
stos
xchg
mov
push
adc
push
cmp
test
dec
mov
cmp
movsb
mov
cmp
ja
xlat
cmpsb
outsl
jg
pop
cmc
add
adc
notb
popf
fwait
inc
and
inc
cmpsb
cmp
aam
pushf
mov
fwait
xchg
stos
xchg
call
aad
xchg
cld
xchg
mov
add
test
add
popa
push
cld
nop
lea
mov
sub
jae
xchg
aam
xchg
mov
aas
aam
decb
push
xor
mov
loop
cmp
cmc
pop
icebp
jbe
and
movsl
pop
xchg
test
fstl
mov
cmp
adc
xchg
scas
and
sbb
idiv
outsl
dec
imul
sub
std
pop
call
push
aad
mull
les
push
clc
cmc
cmpsb
pop
mov
nop
aam
jl
or
mov
repz
jne
mov
sbb
jl
andl
cld
mov
xor
repnz
sub
sti
mov
js
mov
mov
inc
in
notb
jmp
movsl
or
push
cwtl
sub
bound
xchg
jg
mov
int3
repz
inc
pop
inc
outsb
out
push
xchg
jle
pop
push
loope
cmp
call
or
ss
xor
sub
in
inc
ret
repz
hlt
push
shlb
xchg
sbb
pop
pop
mov
bound
fnstcw
hlt
ret
icebp
popf
fwait
lcall
cmp
and
mov
jnp
pop
adc
mov
xor
or
mov
mov
adcb
clc
cs
mov
outsb
movsb
push
mov
lea
jbe
mov
shll
push
cmp
in
mov
cltd
adcb
cmp
jno
jne
cmp
adc
xchg
adc
in
mov
mov
cltd
push
xchg
push
push
cwtl
stos
cs
and
xchg
ds
loop
cmpb
sub
inc
cmp
aaa
and
xchg
adc
push
gs
jne
lcall
clc
cmp
mov
adc
lods
push
into
jg,pt
daa
lds
test
inc
test
add
xor
lea
mov
xchg
std
pop
and
mov
mov
mov
push
dec
mov
out
insb
or
cmpsb
fs
scas
ss
mov
jns
and
inc
fldl
mov
pusha
mov
mov
stc
movsb
outsb
cltd
loop
stc
inc
in
xor
push
sbb
and
testb
cli
repnz
das
and
clc
xor
imul
mov
testb
in
cli
xchg
mov
mov
test
arpl
xorb
movsb
xlat
sub
xlat
pop
stc
cltd
fs
xchg
enter
into
adc
int3
ret
and
notb
and
dec
je
pop
int3
adc
pushl
cmp
enter
add
enter
jl
in
push
iret
repz
mov
outsl
mov
out
repnz
xchg
ljmp
lea
fcomi
xchg
icebp
mov
push
xor
jb
enter
repnz
push
out
pop
jle
jae
in
xchg
ljmp
mov
cwtl
jbe
hlt
mov
sbb
xor
sbb
cmp
fwait
fwait
clc
mov
xor
sti
inc
and
cmpsb
xlat
sbbb
adc
add
mov
xor
shlb
repnz
shrl
jno
mov
add
pop
add
leave
jno
fbstp
xor
adc
or
mov
movsl
fyl2xp1
dec
mov
ds
push
sbb
daa
js
or
inc
rcrl
int
jle
adc
mov
xlat
push
in
das
push
dec
mov
rorl
lea
xor
mov
xchg
cld
cwtl
test
leave
xor
mov
in
pop
stc
leave
addb
mov
jnp
in
repnz
jne
nop
mov
sti
testb
mov
cld
xor
lods
xlat
cs
pop
hlt
mov
in
pushl
xchg
push
int
les
loope
xor
popl
dec
test
clc
mov
sarb
mov
ds
into
outsl
dec
imul
mov
aam
jb
jo
mov
mov
in
scas
sub
mov
movsl
cmp
mov
ds
repz
adc
mov
ja
cmpsb
ja
out
aas
mov
popf
das
sarl
mov
mov
mov
ja
dec
mov
sub
leave
das
dec
jl
test
mov
inc
and
lds
into
clc
inc
stc
out
ja
out
dec
mov
int3
shrb
clc
push
and
fisubs
movsb
arpl
jo
stos
mov
cld
fildl
mov
pop
mov
das
push
cltd
mov
pop
push
les
lods
push
xor
cld
or
das
jo
mov
idiv
ljmp
notb
ljmp
adc
fbstp
mov
lock
fiaddl
clc
fmuls
pop
or
aaa
mov
lret
fldenv
jmp
fmulp
nop
repz
call
rcll
push
push
shl
es
pop
inc
push
mov
cld
pop
add
nop
cmpsb
out
push
mov
adc
adc
dec
lret
or
sbb
repz
jns
adc
in
out
add
pop
adc
xchg
push
xchg
mov
lock
std
bound
dec
mov
movsb
data16
xorb
cld
divl
popf
pop
sbb
xchg
sbb
push
add
jo
popa
andb
nop
mov
mov
jno
jecxz
xchg
scas
or
jecxz
pop
jae
outsb
bound
mov
adc
push
xchg
inc
movsb
mov
inc
sub
mov
cld
js
aam
push
jnp
xchg
mov
mov
rolb
mov
in
andl
cwtl
pop
mov
jno
fldenv
mov
insl
rorb
repz
cmp
add
mov
jno
mov
or
icebp
pop
fstp
xchg
movsb
lahf
icebp
repz
sub
jg
and
es
std
mov
fs
nop
hlt
push
push
adc
aam
push
in
push
mov
cmp
in
sbb
jecxz
icebp
insl
cmp
jb
repnz
ljmp
jl
mov
cmp
call
lods
add
cltd
test
add
outsl
sbb
stc
lahf
ret
out
inc
addb
sub
mov
jno
pushf
push
test
cwtl
int
js
fs
pusha
lcall
repz
lcall
jecxz
cmp
pushf
cltd
mov
pop
mov
push
mov
pushf
mov
bnd
pop
jae
lahf
xor
div
shlb
inc
pop
div
int
nop
jns
pop
jns
add
or
mov
mov
ret
xchg
mov
test
push
sahf
outsl
data16
fs
movsl
lock
jecxz
aam
push
or
scas
xlat
outsb
add
xlat
lds
in
mov
stos
or
nop
loop
xlat
xchg
int
jl
fdivrl
inc
mov
das
cmc
jae
testb
and
stc
cld
add
mov
jp
add
cmpsl
pop
subb
and
sub
repz
js
adcb
inc
mov
jmp
cmp
dec
mov
je
leave
sbb
sub
frstor
push
ret
cmp
movsl
lret
mov
shlb
sub
pop
cmpsb
push
dec
shlb
pop
les
lock
test
cmp
dec
mov
aas
test
mov
xchg
xchg
test
push
nop
stc
repnz
faddl
jle
mov
les
cld
in
pop
loope
scas
sbb
cmpsb
dec
outsb
xlat
subb
mov
fwait
in
jbe
scas
std
or
or
ljmp
add
into
lods
sbb
and
fcomi
cli
ja
mov
and
jbe
lods
movsb
push
lahf
nop
sbb
movsb
mov
mov
cmp
jae
add
cmp
mov
shlb
push
aad
jg
testb
mov
and
cmp
and
lods
cmp
pop
jns
and
aam
inc
ds
sub
loope
jmp
mov
xchg
push
push
stos
insl
cmp
add
mov
xchg
cli
aas
push
out
sub
dec
xor
pop
mulb
xchg
jg
mov
dec
jg
popf
sbb
mov
out
xchg
jbe
jp
mov
pushf
loopne
imul
les
imul
in
adc
adcl
push
mov
lods
adc
ficoml
xchg
mov
lock
iret
mov
xchg
add
test
pop
jnp
dec
xchg
adcb
xchg
shlb
das
cld
mov
cmp
inc
pop
push
loop
xchg
dec
mov
jne
mov
cmpsb
popf
je
movsb
mov
xchg
dec
movsl
and
fistpl
mov
mov
fdivp
ds
add
cmp
push
xchg
je
mov
stc
xor
mov
pop
cwtl
mov
jno
sbb
mov
jno
jbe
ret
xchg
hlt
or
mov
mov
pop
popf
add
stc
cmp
pushf
fwait
incb
xchg
shll
xor
jg
mov
xchg
movsb
aaa
push
cmpl
sti
mov
xchg
scas
popa
mov
mov
mov
cld
xchg
outsl
mov
add
inc
test
sti
cmp
mov
mov
andb
cmc
shrb
cmp
adcb
and
daa
aam
enter
outsl
sahf
sbb
or
das
cmp
push
cld
fcoml
fildll
pushf
sbb
mov
adc
pop
jns
jge
mov
js
loopne
dec
mov
std
add
imul
cltd
lret
jb
xchg
mov
add
sub
in
xor
adc
movsb
mov
inc
pop
xchg
cmpsb
sbb
test
or
test
aaa
cmpb
pushf
mov
mov
sbb
cmp
bound
pusha
add
or
out
add
add
orb
clc
in
into
cmpsb
ficomps
or
push
clc
in
cli
jae
out
push
cmpsb
imul
clc
cwtl
add
jne
sub
lods
mov
push
in
insl
jbe
fcompl
ret
xchg
mov
call
cmp
cltd
adcl
push
shl
push
cmpsb
xchg
and
or
adc
cld
jg
test
dec
xchg
sbb
add
mov
std
loope
lret
xor
sbb
inc
dec
add
mov
lods
xchg
cli
movsl
int3
inc
dec
xchg
jecxz
pop
fdivr
es
popf
pushf
insl
mov
sub
mov
pop
rcll
movb
outsl
daa
shrb
repz
mov
loop
stos
iret
lret
dec
mov
pop
lcall
fwait
ljmp
roll
add
or
mov
adc
hlt
loope
sub
dec
movsb
sub
notb
hlt
mov
add
cltd
dec
mov
div
push
cmpl
imul
test
sub
idiv
push
dec
frndint
in
out
pop
mov
out
bnd
enter
leave
dec
lahf
outsl
push
ljmp
sti
repz
push
add
jae
cwtl
outsb
sub
mov
push
mov
test
xchg
mov
adc
repnz
cmp
push
aam
sarb
push
mov
loop
shrl
mov
lret
aaa
into
mov
mov
outsl
add
vmread
jp
adc
mov
jg
dec
imul
and
or
xchg
pop
cmpxchg
lret
xchg
test
adc
rcr
jae
aad
cmpsb
jmp
cmp
sahf
cmpsb
jl
push
mov
add
ljmp
mov
not
xor
ljmp
push
into
mov
or
xor
test
sub
sub
out
or
xor
shl
sub
add
cmpsl
lea
add
push
add
test
sbb
jl
mov
ds
call
lock
lods
daa
inc
mov
dec
lock
hlt
clc
xchg
sbb
inc
fsubr
sub
fsubs
and
cmp
xchg
and
xorl
leave
out
aaa
cli
aam
xchg
mov
jae
mov
xchg
xchg
mov
xchg
adc
xchg
addb
negl
loopne
xchg
sahf
mov
push
ja
add
mov
movsb
sbb
rcr
mov
aaa
stos
out
sub
cmpsl
mov
cmpsb
and
negb
imul
and
in
movsb
xchg
fcomps
lods
scas
testb
jnp
xchg
pushf
mov
jnp
fidivl
xchg
sbbb
enter
jae
xchg
faddl
das
mov
lcall
lahf
xchg
pop
test
in
adc
cmpsb
xor
and
nop
movsb
and
lcall
mov
nop
in
jb
sub
cmpl
popa
adcl
mov
push
rcr
xor
fsubr
push
movsb
mov
jae
mov
clc
mov
rolb
mov
rolb
test
jnp
sti
jg
lods
adc
add
nop
test
push
pop
cmpsb
mov
push
push
je
lcall
inc
jg
cld
sub
outsl
dec
sub
add
cmp
dec
mov
sbb
daa
test
mov
xor
aaa
inc
or
cwtl
dec
sub
jg
enter
fcmovu
adc
mov
arpl
inc
lret
fmuls
rep
std
cmpsl
outsl
sub
adc
xchg
popa
adc
int3
sub
not
fisubrs
pop
mov
loop
add
lahf
mov
mov
lret
mov
in
lahf
stos
fwait
mov
inc
cmc
lahf
or
push
add
cltd
or
and
cmp
sbb
nop
cwtl
sbbl
mov
xor
xchg
add
mov
mov
ret
out
xchg
push
mov
add
mov
lods
pop
jg
add
mov
push
jecxz
pop
in
add
outsb
mov
aam
pop
mov
outsb
cmp
jp
cmp
or
outsb
sub
xchg
aam
xchg
clc
inc
xor
lea
and
mov
push
cmp
aam
xchg
mov
fwait
rolb
mov
lcall
fcomip
lcall
mov
sahf
inc
push
jp
mov
fisubl
dec
pop
test
mov
cld
xchg
xor
xchg
pop
faddl
push
insl
xchg
and
sub
push
pop
repnz
addr16
cs
cld
out
mov
add
mov
sbb
pop
mov
xchg
push
push
inc
add
rorb
in
and
gs
das
cwtl
hlt
xchg
xchg
shll
mov
out
into
push
xchg
xchg
cmpsb
lret
add
push
js
jmp
lods
mov
loopne
inc
lret
push
lods
sub
pushf
out
push
adc
xchg
or
jle
xchg
or
mov
vpshlq
insl
adcb
dec
repz
repnz
mov
jg
sti
je
js
lret
cmp
sub
push
ja
mov
aad
divl
test
icebp
lcall
mov
add
inc
fistps
push
jns
int3
stos
stc
scas
add
sbb
popf
test
cmp
in
or
es
lea
jnp
fsubrs
add
cwtl
lea
stos
dec
pop
mov
movsb
stc
pop
add
pop
popf
jl
mov
dec
stos
lods
dec
outsb
int3
arpl
mov
ja
shrb
arpl
clc
mov
pop
xor
jbe
xor
add
jp
int3
popl
clc
popf
and
les
xchg
aaa
xchg
pop
test
daa
jno
cld
mov
and
pop
out
repnz
dec
push
cmp
cmp
mov
cmp
lahf
subb
mov
outsl
inc
test
std
lahf
jmp
jg
or
lret
mov
icebp
je
xchg
add
adc
dec
dec
mov
lahf
lods
outsl
sbb
add
jl
lods
fists
test
in
push
lods
xchg
movsb
sbb
ja
push
movsb
add
inc
and
imull
fcompl
idivl
mov
adc
arpl
ljmp
popa
lcall
cmpsb
adc
jb
cld
jnp
test
decl
outsl
xchg
psllw
add
cld
or
ds
pusha
sbb
stos
push
mov
mov
push
mov
jmp
jns
xchg
cmp
push
xchg
nop
push
pop
out
gs
aaa
xlat
sti
ds
lds
push
inc
xchg
cld
jl
clc
add
mov
cltd
outsl
xchg
cmp
decl
jno
cmp
bound
cmp
in
xlat
cs
aam
shl
hlt
ret
mov
popf
sti
adc
das
dec
cmpb
push
stos
leave
test
lods
cmp
lock
andb
aas
ret
cmp
mov
scas
mov
add
inc
cmp
rol
push
shl
and
sbb
xlat
lcall
stos
arpl
xchg
stc
rorb
add
xchg
or
xchg
pop
adcl
sub
mov
lods
mov
adc
imulb
jmp
push
xchg
pop
push
cmp
mov
popf
nop
jg
xchg
sub
xchg
mov
popf
lahf
jle
sbb
mov
mov
jle
cmc
repz
xchg
sbb
adc
push
sub
cmpsb
cwtl
push
hlt
sbb
into
cmp
mov
push
rolb
xchg
fstpl
fucom
jmp
cmp
js
movsb
loopne
xchg
jo
scas
inc
lahf
in
mov
mov
mov
sti
fldcw
xchg
xor
lahf
out
leave
mov
inc
or
pop
add
adc
mov
mov
lods
cmp
jg
pop
xchg
out
addb
cld
mov
fdivrl
cli
mov
add
cmp
movsb
ret
ds
loope
jbe
ss
std
mov
outsl
xchg
mov
in
mov
push
mov
mov
mov
cwtl
adc
jb
repnz
out
sub
mov
sub
adc
nop
xchg
xchg
enter
mov
xchg
movsb
xchg
pop
and
out
loop,pt
mov
adcb
cmp
xchg
sbb
sahf
cmp
xchg
int
adc
cltd
inc
pop
movsb
idivb
fbstp
sub
mov
jge
mov
jp
mov
cmp
cld
lcall
sti
pushf
les
cwtl
movsl
inc
out
push
cwtl
movsl
fcompl
in
push
xor
mov
xor
popf
hlt
add
scas
jns
jmp
movsb
outsb
inc
jle
testl
mov
test
divl
adc
out
xchg
cmc
sub
lret
fldenv
dec
and
in
push
inc
mov
xchg
adc
sbb
ds
enter
mov
xlat
adc
xor
mov
inc
inc
and
test
call
mov
ret
pop
outsb
mul
daa
adc
cwtl
fs
pop
lods
inc
popf
add
cli
pop
mov
mull
cld
fcoms
mov
mov
outsl
loope
add
pop
ret
lea
int
mov
pushf
xchg
bound
xor
xchg
sti
cmp
sar
cld
fnsave
nop
sbb
cwtl
xchg
xchg
add
pop
inc
fldcw
sti
fs
sub
sub
ret
xchg
je
lcall
pop
xchg
movsb
sahf
xchg
add
repz
push
ret
sbb
jne
dec
outsl
sbb
out
and
fs
mov
push
inc
lock
sbb
or
mov
xlat
les
shr
mov
lea
inc
cwtl
mov
mov
lret
push
sbb
cwtl
pusha
mov
push
lods
mov
xchg
in
xchg
inc
sub
stos
sbb
iret
inc
jl
shr
outsl
dec
and
adc
xchg
jl
movsb
movsl
mov
rcrl
rcr
mov
inc
lea
push
testb
inc
bound
mov
push
pushf
and
hlt
cmp
bound
mov
mov
fs
push
repnz
popf
cli
push
push
xchg
cwtl
xchg
pushf
scas
lock
jae,pn
ja
mov
addb
add
call
sub
push
nop
test
shrb
mov
push
sbb
or
inc
cli
jle
hlt
sarl
loopne
mov
cmpsb
cwtl
pushf
in
in
add
xchg
inc
add
jbe
mov
adc
mov
xchg
jmp
hlt
in
or
xorb
or
aas
push
cwtl
mov
lcall
adc
inc
cmpsl
push
mov
pop
inc
push
int
repz
lret
xchg
mov
push
jmp
shrb
imul
xchg
test
stc
mov
push
int
push
cmpsl
mov
mov
lahf
xchg
arpl
incl
popf
mov
mov
mov
push
into
repnz
add
dec
cmp
xlat
data16
dec
dec
cmp
xchg
out
adc
icebp
jae
dec
adc
adc
insb
mov
mov
jecxz
loopne
mov
xor
std
pop
pop
loope
adc
test
pop
test
cltd
nop
ljmp
ja
fwait
push
xor
add
pop
sbb
xorb
cwtl
rorl
adc
enter
jae
call
mov
fcmovb
imul
push
lcall
push
testl
pop
push
dec
adc
pop
das
out
cld
loop
lea
jbe
stc
ss
cld
test
mov
je
mov
js
sbb
pop
sub
xor
cmp
xchg
mov
inc
std
dec
test
testb
push
stc
iret
roll
and
stos
push
lods
add
fdivrs
addr16
movl
dec
inc
mov
sti
xchg
repz
arpl
je
sbb
cltd
clc
ror
mov
push
ss
test
xor
jo
aam
adc
mov
jmp
aad
ja
jle
fisubrl
aam
cmpsb
mov
lds
mov
mov
mov
leave
imul
adc
mov
fsts
xor
int3
sbb
clc
ret
cld
mov
insb
cmc
ret
test
movsl
stos
mov
lahf
lock
test
int
xchg
shll
sbb
enter
xchg
lock
inc
hlt
or
hlt
jge
aas
add
cli
xor
jg
mov
nop
lcall
xchg
das
mov
aaa
mov
mov
xchg
test
sbb
pusha
xchg
cmp
cld
leave
outsl
rolb
stos
push
push
loope
cmp
mov
add
shrb
fwait
xchg
repz
push
xchg
mov
inc
sub
sbbl
lods
daa
aad
sbb
andl
and
in
les
mov
lods
into
jg
cmp
xor
add
fdivrl
mov
push
subl
mov
leave
dec
lahf
mov
es
mov
loop
cld
pop
dec
mov
or
jo
dec
fcomi
lea
push
inc
ja
or
orb
out
loopne
iret
call
xor
repnz
inc
fs
xor
inc
or
loop
lea
xchg
loop
adc
or
cld
stos
stos
fdivr
fprem
push
add
fwait
mov
divl
aam
stos
inc
std
jnp
ficompl
and
popa
cli
bound
push
outsl
xchg
sub
cli
xchg
push
jg
and
push
mov
fistl
cmp
cld
rorb
sbb
sub
cld
lods
sbb
mov
mul
xchg
aaa
nop
popf
push
lods
fisttpl
push
fdecstp
js
jg
dec
mov
cwtl
jmp
or
xchg
xchg
out
in
fstp
push
cwtl
test
rcrb
scas
and
xchg
jmp
ds
cmp
scas
lds
fs
cld
jo
insb
mov
fucomp
xchg
shr
outsl
rolb
lret
div
jnp
mov
and
pop
loop
aam
mov
in
sar
hlt
int3
xor
mov
xlat
mov
push
stc
insb
fwait
push
cmp
push
scas
xchg
mov
idivb
or
xor
dec
fwait
mov
jnp
mov
lock
cld
rep
cwtl
repnz
call
inc
sub
and
hlt
nop
ret
imul
pop
cmp
xor
insb
jle
xchg
ja
xchg
push
jns
mov
push
sbb
fistpl
inc
std
cmpsl
pop
xchg
ror
mov
outsb
push
test
mov
repz
inc
ss
inc
notb
mov
jge
jo
outsl
je
jp
mov
mov
loopne
lret
xchg
push
test
shlb
js
test
popa
out
mov
push
out
fidivrs
xchg
out
lods
test
stos
xor
xchg
jae
xorb
adc
pop
out
mov
stc
or
mov
jg
shll
in
and
sti
push
dec
stc
pop
inc
jecxz
lea
scas
push
adc
pusha
repnz
and
dec
mov
sti
ret
jle
decb
test
in
fldenv
shrb
testl
ret
dec
mov
adc
imul
lds
cmp
push
in
inc
mov
hlt
mov
test
rolb
push
mov
rolb
pop
and
mov
les
mov
sub
dec
or
pop
add
jmp
aad
in
fidivl
or
sbb
xchg
cmp
adc
mov
lret
xor
pushf
popf
ret
andl
sahf
jae
push
fbstp
mov
clc
outsl
loopne
les
xchg
es
in
sarb
adc
in
mov
lea
lea
leave
push
add
fsts
push
insb
sbb
dec
sarb
test
pop
cmp
mov
mov
call
pop
js
ret
std
pop
mov
jp
stos
std
repnz
in
xlat
or
js
mov
aas
and
sbb
loope
fcoml
jle
mov
lret
adc
mov
call
inc
outsb
adc
lahf
ds
push
push
sbb
adc
push
cmpsl
mov
jp
fldenv
icebp
inc
or
int3
pop
and
in
mov
decl
mov
stos
lods
xchg
adcl
decb
xor
jo
iret
into
jl
mov
xor
adc
cltd
sub
cmp
popf
repz
cmp
fcompp
repnz
xor
mov
in
xchg
xchg
cld
xor
ljmp
jb
je
popf
ret
mov
leave
iret
repz
mov
test
repnz
loopne
mov
cmpb
xchg
mov
pause
insl
ljmp
test
imul
imull
lcall
and
jne
cmpsb
in
in
aas
cli
repz
mov
or
sbb
hlt
icebp
mov
stos
out
cmp
repz
xchg
or
shl
out
nop
clc
in
cmp
shrb
popf
loope
fildll
outsl
sub
jb
les
test
ja
xchg
push
addb
in
rorb
cmpb
jnp
xor
je
sub
out
dec
pusha
popa
repz
and
js
mov
insb
repnz
cmc
xchg
dec
sti
lret
jb
push
cld
push
pop
mov
in
jo
mov
pushf
mov
nop
jg
arpl
clc
ret
xchg
out
in
xchg
out
pop
sub
ret
mov
sub
add
sub
push
popa
sar
loop
push
in
sub
es
add
pop
popa
nop
adc
xchg
push
in
sub
mov
lock
data16
ds
popa
mov
add
ja
adc
outsl
mov
jbe
mov
adc
pop
repz
jmp
pop
sarb
ja
repz
stos
outsl
push
dec
fisubs
mov
inc
dec
out
inc
xor
push
out
or
cmc
addl
adc
jno
je
shl
test
mov
push
insb
or
adc
mov
ja
adc
cmp
addb
xchg
xchg
out
push
sub
je
hlt
or
mov
imul
jp
nop
adc
lock
xchg
rorb
stc
js
in
pop
aaa
xor
movsb
mov
ja
rep
xchg
cmpsb
jmp
xchg
mov
cli
shr
popf
adc
xlat
popa
mov
push
mov
cli
cmc
test
stos
addl
addl
push
mov
in
lahf
repz
sub
add
xor
not
push
and
xchg
push
outsl
push
nop
xor
lock
push
or
std
rclb
xchg
sub
outsl
add
push
lods
enter
cli
jp
ljmp
scas
div
ljmp
mov
sbb
aas
jl
outsl
test
add
adc
sub
scas
jb
sbb
mov
ret
xor
enter
xchg
movl
mov
xchg
sub
pusha
adc
mov
jns
mov
inc
or
pusha
mov
hlt
xchg
xchg
mov
mov
hlt
insl
sub
mov
movsb
icebp
cmp
and
bound
adc
jbe
loope
jns
out
mov
jg
loopne
or
imulb
mov
icebp
fsubrp
mov
cwtl
test
mov
lea
pop
ja
and
inc
repnz
stos
xlat
inc
sbb
cmpb
push
pop
stos
decb
mov
adc
sahf
jg
pop
ljmp
cmp
scas
out
add
movsb
int3
ret
mov
mov
mov
dec
xor
sub
mov
adc
std
mov
jns
adc
lret
nop
cmp
nop
add
sbb
lcall
xchg
test
cmp
das
in
lock
cmp
inc
jg
jno
dec
stc
add
xchg
adc
imul
nop
mulb
xchg
inc
movsl
repnz
dec
dec
andb
repz
push
xchg
divb
test
pop
imul
imul
xor
cmc
jns
ja
les
inc
jns
add
call
mov
mov
ja
mov
jb
popl
xchg
mov
adc
gs
addb
cld
ss
clc
mov
pop
mov
loop
cltd
xchg
mov
or
mov
shl
or
ds
pushf
enter
ja
pop
jne
nop
call
hlt
testl
ljmp
xor
jb
sarl
repz
jg
pushw
jle
push
mov
or
iret
xchg
lcall
test
popl
repz
nop
pop
orb
js
inc
mull
out
or
mov
jne
in
mov
mov
push
ja
out
out
in
loop
jp
ja
or
fidivrs
xor
mov
es
cmp
xchg
dec
or
loopne
add
mov
punpckhdq
pushf
int
daa
cmpsl
mov
or
loopne
sti
imul
dec
push
mov
out
ds
popf
push
int
add
bsf
test
mov
cmp
mov
pushl
cmc
mov
or
scas
mov
xchg
mov
push
mov
rclb
add
jnp
sti
jg
lods
dec
loope
xchg
adc
lret
push
add
inc
mov
imul
xchg
xor
jge
mov
push
or
out
jnp
test
dec
dec
inc
and
stos
mov
bound
ret
mov
lret
std
mov
pop
or
mov
push
call
mov
add
lea
push
test
dec
loopne
xlat
mulb
imulb
in
movsl
jg
test
adc
mov
sub
xchg
cmpsb
icebp
and
mov
insl
es
xchg
test
or
test
mov
sbb
ret
mov
idiv
sub
pop
cltd
fdivrs
add
aaa
or
ljmp
pop
les
lock
pop
mov
cli
xchg
jnp
mov
jae
push
daa
into
in
orb
orl
jge
sbb
push
jl
sub
mov
xor
mov
fwait
movsb
mov
adcb
cwtl
test
jns
or
lock
xchg
scas
inc
dec
hlt
imul
pop
sbb
cmc
pop
nop
jge
jbe
jle
cmc
jae
cld
push
jnp
sbb
pop
dec
sti
test
out
int
lock
outsl
movsb
mov
lcall
adc
into
mov
repnz
push
lock
mov
js
popf
aaa
enter
inc
stos
aam
jecxz
shl
mov
stc
jge
pop
pushf
leave
mov
sbb
mov
or
fsubs
das
aam
jle
xor
test
jno
and
repz
hlt
mov
out
std
adc
clc
sub
jle
orl
lock
arpl
or
jg
cmp
shl
and
test
jp
out
xchg
jbe
mov
loop
int3
ja
xchg
shll
dec
out
xchg
adc
fidivrl
xorb
cld
jo
sbb
push
add
add
outsl
jge
call
paddb
jg
sti
hlt
sahf
das
mov
lret
pusha
lock
shl
mov
cld
in
ds
flds
dec
mov
dec
push
fidivrs
fdivp
inc
fstpt
pushf
arpl
mov
idiv
movsb
add
outsl
mov
rorl
mov
mov
loope
add
fnstsw
lock
jp
xchg
shl
in
push
jl
rcrb
stc
out
adcl
xor
icebp
add
testb
sub
inc
push
hlt
jo
jae
lock
dec
jbe
outsl
jae
sub
stos
push
inc
mov
stos
pmaddwd
and
push
inc
cld
push
test
jno
lea
adc
testl
add
add
xchg
mov
mov
insl
neg
dec
or
mov
repnz
clc
pop
dec
jg
pop
pop
jbe
nop
arpl
insl
sbbb
jae
xor
in
cmp
cmp
shrb
jb
testl
dec
stos
es
xchg
xor
rcll
es
mov
leave
mov
mov
dec
fadds
fbld
loop
lods
fisubs
daa
insb
push
dec
sub
cmp
cmp
in
cmp
sahf
outsl
addr16
pop
mov
xchg
mov
xchg
sbb
dec
sbb
cmp
sbb
xor
mov
clc
mov
jl
stc
test
sarl
push
jb
mov
aam
subb
ret
adc
insl
jle
icebp
adc
pop
inc
enter
movsl
loope
fiaddl
popa
xchg
xor
jne
ret
mov
mov
mov
repnz
icebp
inc
add
xchg
sub
insb
push
frstor
and
lahf
sbb
fistps
xchg
insl
inc
xchg
jge
std
insl
dec
add
out
jle
mov
mov
xor
xchg
pop
ret
mov
cld
out
sbb
popf
push
shrb
dec
cmpsb
jg
or
and
pop
xchg
js
dec
mov
clc
movsb
and
push
mov
cmpb
imul
repz
lock
movsl
add
pop
xchg
sbbl
inc
sbb
adc
push
mov
mov
add
xorb
aam
into
jbe
pushf
lcall
mov
mov
jo
adc
pushf
int3
push
mov
fadds
xlat
shlb
call
ljmp
jg
jno
adc
inc
lret
pop
mov
ror
insl
dec
daa
int3
mov
xchg
adc
loop
mov
jne
or
popf
push
pop
aaa
mov
mov
sbb
pop
jmp
fistps
daa
fbld
jp
jg
push
sbb
jg
popf
ljmp
mov
lock
xorl
mov
xchg
stc
outsl
inc
pushl
das
mov
adc
xor
pushf
sbb
repz
cltd
xor
adc
ret
test
mov
call
push
test
mov
mov
je
sbb
orb
js
icebp
repz
xchg
sbb
and
jp
mov
js
fs
mov
pop
inc
pop
and
inc
cmp
sub
jbe
clc
test
jns
push
fs
mov
aam
push
loope
xorl
push
out
add
cli
xlat
cmpsl
outsb
xchg
stc
enter
insb
mov
cmpsb
mov
imul
cli
dec
xchg
mov
inc
stos
cmpsl
stos
and
flds
pop
insl
add
push
testb
cmp
jl
xchg
jg
xor
xor
inc
mov
or
lret
jb
jo
lods
jecxz
xor
sbb
test
popf
xlat
iret
in
sub
cmp
iret
imul
cld
and
fcmovnu
push
cmp
lods
insl
cmpsb
add
sti
nop
jnp
cwtl
test
imul
sub
pop
adc
fsub
subb
xchg
in
mov
ret
cmpb
jg
jmp
and
mov
jnp
test
idivb
rolb
add
pop
xchg
or
mov
mov
cmpsl
adc
sti
lret
or
ds
and
add
addr16
repz
insb
inc
stos
mov
out
mov
mov
divb
mull
pop
inc
ljmp
nop
ret
sbbl
mov
add
xchg
sbb
gs
add
cld
push
mov
adc
push
idiv
addb
xor
outsb
cmp
mov
mov
ret
pop
mov
or
mov
ljmp
rcrb
mov
outsl
pop
push
iret
jnp
mov
pushf
mov
scas
add
inc
xor
pop
mov
int3
add
and
cld
popf
shll
pop
aam
add
mov
add
fldenv
xchg
popa
inc
sub
add
jmp
cmp
mov
fwait
in
mov
test
fs
xlat
add
lods
xchg
ja
scas
xchg
mov
cmpsb
jb
jno
in
inc
adc
in
xchg
das
div
push
mov
fwait
adc
xchg
sbb
cmp
mov
repnz
add
mov
sub
xchg
enter
mov
push
outsl
pop
pop
mov
out
mov
dec
insb
mov
gs
sub
cwtl
pushf
in
push
cwtl
cmpsb
and
call
adc
subb
xlat
cli
dec
mov
rolb
adc
mov
leave
mov
loopne
mov
ret
call
pop
inc
push
sti
and
jne
test
stc
dec
nop
nop
pushf
inc
cmp
incb
jl
loopne
test
inc
xchg
stc
lock
aas
ror
sbb
push
mov
testb
mov
je
xchg
sbb
icebp
cmp
clc
test
jns
std
xor
lret
out
aad
arpl
lock
ds
rorl
subb
pusha
lods
rolb
loop
mov
cmp
ficoms
icebp
jl
fdivrl
cli
repnz
push
shrl
aam
insb
mov
mov
lea
or
jl
pushf
and
shlb
lods
test
sbb
call
jo
mov
movsb
test
pop
sub
rcr
enter
fmuls
imulb
test
fldln2
inc
push
negb
loopne
sbb
jmp
xor
sbb
aam
test
pusha
iret
cmp
pop
es
jp
jo
adc
adc
jg
pop
jae
sub
nop
xrelease
inc
cwtl
adc
int
cmc
hlt
pop
xor
div
shlb
lods
ja
sti
mov
mov
mov
mov
ret
jnp
repz
mov
mov
ret
xlat
mov
mov
movsl
jle
loopne
xchg
testb
test
pop
or
pushf
xor
notb
shlb
aas
pop
xchg
hlt
lret
push
xchg
notb
xchg
inc
xchg
sbb
das
popf
in
push
ret
cmpsb
das
into
add
xor
cwtl
xchg
sbb
mov
xchg
inc
ret
repz
jg
add
pop
aad
add
int
in
push
mov
mov
cmpsb
mov
test
jb
mov
push
xor
add
fidivl
jge
mov
in
jo
rep
xor
inc
out
mov
test
jb
sub
add
ret
in
push
mov
mov
mov
movsb
jns
adc
mov
in
mov
cmp
sarb
in
jnp
sti
jg
lods
sub
mov
mov
cmpsl
jmp
mov
or
xor
hlt
mov
loop
xchg
ds
push
mov
out
nop
mov
popf
hlt
aas
xor
cmp
mov
fadds
loopne
or
mov
dec
or
decl
orl
cmpl
loop
and
dec
sub
loopne
cmpb
xchg
lea
xor
dec
or
push
pop
ret
xchg
sbb
xchg
testb
fisttpl
leave
rorb
mov
sub
dec
jp
das
fsubr
in
jnp
divb
push
push
add
or
scas
imulb
mulb
lret
adc
mov
mov
test
stos
out
mov
xor
sbb
jecxz
inc
leave
sub
and
mov
push
mov
mov
jo
je
stos
xlat
cmp
jb
fwait
repz
in
lods
mov
shr
pop
loop
pushf
mov
call
xchg
pop
aad
jmp
dec
add
les
ds
push
lock
jae
adc
iret
mov
cwtl
addr16
pop
pop
orl
imul
xchg
ds
add
lods
xchg
or
mov
cld
push
out
jecxz
int
xchg
cmpsb
mov
mov
repnz
adc
cmpsb
pop
add
jge
movsb
xchg
hlt
popa
imulb
stos
add
jno
sahf
out
fidivs
inc
enter
aaa
je
cmpsb
mov
hlt
push
mov
xchg
xchg
mov
nop
mov
in
aaa
aam
loopne
in
adc
test
mov
in
mov
and
xor
add
pop
divb
jp
cmc
or
cmpsl
mov
pop
loopne
sbb
xlat
into
dec
test
hlt
rclb
mov
aad
cwtl
faddl
jp
add
div
shlb
shlb
hlt
mov
nop
jno
rorb
mov
shl
in
adc
mov
mov
cmpb
or
adc
call
sti
out
jnp
mov
test
jecxz
pop
xchg
xchg
repz
ja
jbe
jecxz
jne
xor
lahf
add
lods
in
xchg
lds
test
cld
fcompl
sbb
rcrb
xchg
test
in
pushl
jge
xor
push
stc
fsub
aam
cld
jns
out
call
push
pushf
call
sbb
cli
jo
clc
mov
clc
imul
push
fidivl
xchg
push
jecxz
movsl
xchg
push
into
pop
cld
nop
nop
outsb
mov
les
loopne
or
mov
nop
ffreep
clc
push
push
push
ficomps
lahf
jns
aaa
mov
repnz
xor
mov
sbb
cwtl
cmp
fcoml
mov
nop
inc
lods
lahf
std
ljmp
sub
jb
loopne
sahf
shlb
inc
cmpsl
jno
xchg
mov
outsl
cmp
inc
out
jg
sub
mov
cli
or
sbb
and
cmpsl
xchg
mov
enter
int3
sbb
mov
xlat
pop
xor
jmp
sub
push
jae
jo
dec
stos
inc
and
arpl
mov
jl
sub
push
cmp
xlat
fldl
clc
jo
mov
cmc
xchg
out
lock
into
aad
sahf
cmc
push
call
hlt
clc
xor
out
mov
jb
mov
repnz
and
out
lock
mov
ja
repz
test
jl
and
je
popf
out
mov
mov
and
jne
iret
mov
testl
shlb
add
lock
xor
cld
add
add
jo
xchg
fldt
and
rorb
mov
imul
or
testb
out
cwtl
xchg
hlt
je
cli
mov
mov
cmp
xor
stos
push
daa
iret
sbb
xchg
pop
bound
pop
cmpsl
iret
dec
popa
ja
add
repnz
jge
hlt
or
sub
mov
xor
adcb
sub
mov
nop
out
xlat
push
dec
iret
xor
iret
inc
cltd
outsl
pop
or
mov
sar
sar
cmpsl
mov
and
sub
xchg
pop
push
dec
mov
adc
ret
gs
inc
cld
bound
inc
mov
adc
shl
insb
shrb
mov
mov
mov
out
fsubrp
push
out
jecxz
scas
add
repnz
js
xor
scas
or
fs
mov
add
pop
divl
mov
sub
inc
inc
pop
xchg
mov
jae
sti
jnp
cld
popf
or
movsb
mov
mov
ljmp
dec
subb
js
stos
cmc
out
into
insl
and
inc
ja
insb
data16
mov
ds
jnp
shl
mov
mov
lock
mov
icebp
iret
scas
and
test
cmp
xchg
xor
gs
sub
imulb
push
call
sbb
cld
ljmp
aad
ljmp
mov
mov
aam
xchg
cmpsb
sar
notl
into
repnz
test
inc
adc
imul
out
clc
test
xor
enter
outsl
sub
cwtl
aad
xorl
xchg
add
daa
movsb
xor
add
mov
stos
mov
fs
cld
jne
sar
jle
lods
mov
jl
movsl
rolb
loopne
add
xor
mov
adc
repnz
jae
mov
jno
insl
lahf
add
shrl
pop
icebp
fsts
aaa
pop
and
in
int3
sbb
mov
in
cwtl
daa
pushf
negl
loope
jecxz
daa
xchg
and
sbbb
jnp
jae
divl
aaa
xchg
incl
lret
pop
push
jecxz
mov
add
cmp
inc
push
lcall
notl
mov
cmc
sbb
pop
in
adc
cmp
scas
or
popf
sbb
in
lock
popa
imul
and
push
flds
and
lds
mov
pushf
ret
adc
imul
cli
xor
fdivrs
cld
xchg
adc
sarb
insl
sbb
fcoms
shlb
shl
hlt
xchg
enter
cmpl
push
movsb
mov
pop
cwtl
xchg
mov
and
mov
sbb
jecxz
popf
lods
mov
scas
or
daa
sahf
jbe
mov
add
add
shlb
test
clc
lret
mov
fs
in
dec
lahf
enter
subl
sar
jae
nop
sarb
mov
movsb
jp
mov
test
hlt
jmp
mov
test
lea
and
adc
and
mov
or
lods
adc
shlb
push
inc
inc
mov
mov
mov
add
xorb
mov
mov
jecxz
negb
nop
jb
mov
cli
in
xor
pop
xor
and
or
out
xchg
ret
inc
adc
fwait
testb
out
mov
add
push
nop
or
cmp
daa
jno
lds
jb
xchg
into
sbb
xchg
and
inc
sbbb
mov
mov
xor
es
ja
push
sbb
inc
test
hlt
gs
ljmp
sub
js
dec
cmp
dec
loopne
es
loopne
outsl
scas
push
div
lea
adc
scas
imulb
mov
popf
neg
mov
inc
fdivr
jg
and
mov
testb
or
ja
mov
push
cmp
mov
incb
sbb
cli
ds
fcomps
addr16
mov
je
sbb
stos
cmpb
in
jp
cmp
mov
or
mov
mov
mov
std
pusha
pop
clc
or
or
insl
mov
hlt
repnz
pushf
mov
icebp
sub
insb
xor
inc
sbb
cld
jbe
mov
xor
daa
inc
jg
aaa
nop
addb
add
mov
inc
mov
adc
lock
xchg
movsb
jae
xchg
cwtl
imul
fists
jns
test
mov
and
push
pop
fstl
imul
mov
aad
inc
xchg
or
mov
out
xchg
lahf
jle
pushf
loopne
push
sub
movsb
cld
mov
and
popf
sub
subl
add
and
dec
cld
mov
std
dec
clc
add
pop
cld
dec
xor
mov
push
xor
add
adc
insb
xchg
xchg
mov
aaa
loopne
stos
lret
roll
shl
fucomip
stc
outsl
std
cmpsb
add
push
jp
arpl
xor
mov
in
negb
lcall
adc
mov
mov
mov
cmp
popf
call
push
cld
pop
into
scas
idivb
sbb
push
aam
dec
inc
push
sub
pop
inc
cmpsb
outsl
or
sub
xlat
and
cli
outsl
add
out
jo
fsts
fwait
incb
popf
outsl
xchg
pop
stos
clc
lds
daa
lahf
or
mov
jl
xchg
xchg
sbbb
aam
sbb
xchg
je
sbb
dec
push
cli
lds
push
sub
inc
xchg
xor
sbb
mov
add
add
xchg
scas
scas
outsb
daa
sub
inc
js
and
xlat
push
cmpsb
lods
fwait
decl
or
mov
cmp
mov
std
xor
xchg
push
mov
rcl
mulb
clc
sarb
xchg
and
xchg
push
and
mov
jg
mov
mov
enter
pop
xlat
jl
sti
cmp
shlb
mov
inc
cmp
add
xchg
mov
rcrb
mov
xor
xor
mov
jmp
pop
xchg
mov
mov
mov
cli
jl
aad
clc
popf
cmp
call
sti
lock
dec
push
xchg
jecxz
nop
idiv
jo
ss
leave
lcall
nop
or
into
clc
inc
sbb
in
adcl
loope
wrmsr
or
mov
jbe
ds
scas
cwtl
js
dec
aas
xchg
xor
adc
push
add
stc
push
in
popf
ljmp
aam
insb
mov
test
sbb
push
gs
cmpl
push
xor
inc
jp
jp
test
cmp
dec
mov
dec
jp
mulb
ret
clc
jg
xchg
sub
jnp
mov
mov
mov
cld
insl
adc
mov
jo
sub
testb
cmp
mov
movsl
mov
mov
jae
nop
sub
add
test
cmp
sub
lods
int
dec
pop
enter
inc
sti
movsl
popl
lea
aam
sbb
jge
addr16
repz
jl
push
jo
jns
and
dec
sbb
dec
xchg
dec
xorb
push
std
push
cmp
pop
xchg
clc
mov
and
mov
cmpsb
sahf
add
imul
test
pop
adcb
in
xchg
jo
adc
xchg
mov
mov
xchg
push
test
sar
test
pop
jg
cwtl
out
aas
fwait
out
out
enter
jp
xorb
clc
dec
jmp
loop
adc
call
mov
cmp
sbb
sub
pop
xchg
scas
call
js
and
mov
rolb
shll
ljmp
dec
xlat
ja
rclb
leave
xor
and
shll
pop
imul
data16
cmp
mov
outsl
add
jo
ds
shl
and
fistpll
sub
sub
mov
inc
ret
icebp
inc
push
or
push
out
addb
add
mov
sarl
testb
xorl
or
mov
fs
adc
add
xchg
cli
addl
ret
or
daa
xor
fst
mov
popl
pop
jo
cmpsb
subl
cmp
loopne
popf
aas
pushl
lret
sbb
lahf
mov
test
ret
push
fsubrl
subb
ret
mul
jb
repnz
fiaddl
flds
iret
or
mov
xchg
cli
cmpl
les
cltd
je
mov
mov
popa
inc
filds
inc
leave
jecxz
js
jbe
mov
sbb
and
jl
test
idivb
ja
jl
movsb
dec
in
mov
testb
mov
add
mov
or
icebp
rorl
cmc
je
loop
jo
mov
cmpl
xchg
clc
lret
pop
jge
jl
adc
outsl
mov
inc
in
or
out
add
push
divb
xchg
mov
test
lock
lret
fcmove
divb
inc
sub
jae
rolb
insb
popa
cli
arpl
les
adc
pop
pop
std
nop
scas
lret
sbb
addr16
dec
loop
xchg
inc
movsb
sbb
testb
and
cld
stc
cld
jbe
cmpsl
push
cwtl
jb
repz
test
mov
mov
inc
or
hlt
pop
inc
jne
imul
std
int3
sbb
jg
test
mov
aas
filds
iret
in
mov
sti
mov
popf
jae
mov
je
pop
sub
pop
mov
aas
add
add
fisttpl
jge
xlat
xchg
jl
mov
rolb
jmp
aas
adc
out
stos
js
xor
arpl
test
push
mov
lahf
jo
xlat
cli
ret
xchg
xor
pop
dec
movsb
inc
movsl
arpl
mov
push
daa
jno
enter
push
mov
repz
add
pushf
lds
icebp
in
adc
imull
inc
inc
ss
popf
loop
xchg
inc
testb
inc
pop
push
movsb
or
sub
push
mov
lock
inc
inc
push
xchg
loop
jl
pop
adc
mov
call
or
jb
xor
add
pop
or
cmp
cmpsb
mov
sub
scas
cltd
outsl
mov
jbe
sub
mov
cmc
fbstp
mov
cmpsl
hlt
jle
rep
shlb
xchg
out
das
mov
or
ret
mov
adc
icebp
mov
jb
pop
add
xor
ljmp
jg
imul
ljmp
adc
or
cmp
lods
clc
aaa
out
push
mov
negl
jecxz
mov
jno
jbe
idiv
out
ja
lret
mov
xchg
out
mov
sbb
pushf
sbb
enter
test
mov
jbe
dec
pop
mov
jmp
dec
mov
je
ja
stos
mov
call
mov
lea
add
xchg
stos
iret
adcl
push
ja
in
mov
insl
imul
push
cmpsb
jecxz
cs
imul
pushf
xorb
out
jg
jg
rcl
stos
ljmp
pop
and
jb
lcall
lods
mov
fwait
inc
int
gs
mov
loop
jae
shl
fisubl
imulb
gs
mov
std
lahf
std
add
jmp
or
inc
jg
add
xor
es
push
dec
icebp
fs
jns
hlt
test
in
movsb
mov
mov
mov
and
xchg
out
or
lahf
and
or
jns
repnz
push
cltd
stc
xchg
inc
cmpsb
mov
push
mov
fsubr
int3
adc
mov
pop
add
popf
mov
push
xchg
shll
clc
mov
scas
pop
cmpsl
jmp
mov
jo
std
pop
sbb
negb
in
pop
sbb
movsb
mov
inc
jae
mov
and
inc
jge
mov
enter
cwtl
inc
test
fcmovnbe
mov
cli
xchg
mov
push
sub
lods
js
mov
loop
cltd
sub
mov
mull
rolb
adc
lahf
fsub
push
cwtl
popf
shlb
xor
jg
mov
xor
inc
mov
div
aaa
jp
je
cmpsl
outsb
data16
lahf
jnp
xor
movl
xchg
addb
aaa
sti
push
insl
ljmp
mov
test
stc
int3
push
clc
xchg
dec
js
xchg
ss
push
jae
mov
adc
aaa
xchg
jg
nop
divb
in
test
adcl
cmp
push
add
push
cmpb
bound
popf
dec
sbb
aad
int3
mov
daa
sub
push
add
mov
aad
movsl
push
insb
jg
add
mov
std
sub
mov
dec
sub
mov
xor
fs
xlat
push
push
jg
xchg
rclb
mov
aaa
decb
je
movsb
rcl
stc
xadd
scas
shlb
outsl
xchg
sub
mov
mov
inc
jg
cmpsb
mov
imul
lock
cmp
ja
icebp
add
fdiv
and
xor
popf
xchg
bound
mov
cmpl
call
adc
movsl
push
jmp
xor
jno
jo
mov
fldcw
and
push
push
ret
push
repnz
mov
stos
aam
jae
ds
bnd
xor
insb
call
cmpsl
cmc
cmpsb
rorb
xor
test
outsl
js
sub
pop
cmpsl
clc
add
addl
fwait
mov
xchg
xor
adc
fwait
jmp
inc
pushf
ja
jo
ret
lahf
lock
add
addl
jmp
or
cltd
mov
lahf
sub
ret
js
data16
mov
ljmp
xlat
faddl
push
pop
sbbl
mov
inc
mov
fnsave
cmp
test
outsl
jae
xor
jno
mov
adc
ret
mov
mov
add
xchg
inc
ds
seto
int
push
shl
add
test
xchg
fs
xorl
lds
repnz
xadd
sbb
adc
shll
test
or
sub
xor
add
and
mov
out
sub
cmp
add
sub
sti
scas
js
test
jne
jo
mov
test
mov
dec
dec
inc
subb
sub
sub
lods
popf
int
les
adc
es
push
sbb
cld
pushf
jae
jo
or
sub
mov
repnz
mov
sbb
sub
faddl
and
lret
pop
fbstp
ret
push
cmp
dec
push
mov
insl
mov
add
add
add
sub
repnz
sbb
test
daa
mov
sbb
sub
mov
jp
jg
pop
or
cmp
sti
pushf
dec
add
and
mulb
add
adc
add
sbb
add
pushf
mov
leave
push
call
fadd
test
and
pusha
js
cld
adc
jo
cmp
mov
sbbb
xchg
in
mov
mov
idivl
cmc
in
lret
mov
loopne
push
js
and
or
adc
fs
loope
xorb
mov
lea
adc
and
cli
sub
sbb
imul
lods
pop
imul
clc
decl
enter
out
and
jge
xorb
mov
mov
addr16
add
dec
jns
leave
lahf
popf
popl
rclb
loopne
push
jg
sub
je
cmpsl
pushf
xor
xchg
mov
xchg
jbe
test
sbb
inc
fisubl
inc
add
jae
cltd
mov
push
es
and
pushf
inc
lea
mov
popf
enter
jns
clc
outsl
inc
pop
shll
and
xchg
cs
idivb
inc
mov
test
mov
andnps
rclb
cli
sbb
mov
push
mov
insb
ja
bound
ret
ret
cmp
icebp
and
mov
xchg
mov
sbb
jne
and
into
xchg
fs
or
mov
mull
repnz
pusha
cs
or
jp
adcb
cs
insl
mov
mov
xchg
insl
into
imul
add
stos
inc
cmp
sahf
shlb
push
addr16
je
movsl
add
mov
les
dec
mov
mov
stos
sbb
mov
imul
jae
mov
out
in
sarb
jg
out
xor
xchg
test
in
adc
stos
xor
add
ljmp
repz
xchg
xchg
push
sub
or
in
mov
fstpl
sbbl
jnp
out
notb
adc
pop
icebp
cmc
push
scas
popf
pop
idiv
cltd
xor
clc
scas
jns
adc
add
aad
add
imul
clc
inc
shlb
adc
ja
jmp
mov
stos
sti
and
hlt
or
push
andb
aaa
in
ds
ss
xchg
fcoml
cmp
add
out
adc
enter
mov
les
rorb
pop
cmc
xchg
aad
mov
xchg
mov
xchg
pop
aad
sbb
mov
mov
stos
mov
clc
in
push
mov
scas
outsl
add
cmp
notl
jno
xor
mov
pop
std
inc
test
movsb
mov
in
mov
lock
test
mov
cltd
cmp
ret
mov
sbb
paddsw
lods
cmpsb
imul
fwait
jno
mull
pop
int
scas
pop
out
call
push
pop
std
out
jle
incl
imul
xchg
into
and
ret
insl
mov
jae
adc
push
hlt
cld
xor
jge
inc
fsubr
repz
ss
xchg
xchg
cmp
icebp
bswap
jo
fiaddl
or
lret
inc
nop
idivl
inc
mov
mov
mov
mov
mov
cli
lahf
repnz
jbe
push
sub
and
ss
mov
cmpsb
adc
je
sbb
pop
stc
repz
je
dec
mov
cmpsl
adc
jnp
push
mov
mov
mov
rclb
inc
div
pushf
xchg
mov
ret
loopne
pushf
das
xchg
jo
repz
test
jno
and
aaa
cwtl
call
xor
repnz
fsubp
rorb
fcompl
movsl
inc
lahf
xor
popf
xchg
mov
sbb
repnz
out
sbb
repnz
je
dec
sub
rcll
inc
add
stc
out
jns
dec
sbb
int
out
addl
or
cmp
cld
xor
daa
out
inc
mov
xchg
xor
shlb
pop
jno
xchg
pop
ficoml
or
fcomi
leave
in
aaa
dec
clc
jae
pop
dec
loopne
add
sub
dec
fwait
rorb
sub
and
rep
ror
out
adc
xor
pop
test
icebp
aad
out
icebp
popf
cmpb
cmpsb
sbb
stos
in
lds
jp
xchg
push
loopne
imul
std
shlb
inc
xor
pop
in
in
aam
rclb
mov
mov
jnp
repnz
shl
int
cli
iret
lods
rcl
push
into
testl
adc
stc
lods
cmp
test
loopne
pop
pop
sbb
sub
das
fldt
imul
xlat
or
cmp
iret
pushf
pop
aam
fwait
adc
hlt
add
clc
pop
and
imul
mov
xchg
dec
xchg
testl
shlb
push
inc
leave
ret
cmpsl
fsincos
pop
sub
insb
inc
sub
sub
mov
insl
push
shrb
sub
in
add
lea
mov
pop
xchg
ret
mov
loopne
repnz
les
mov
repnz
mov
jae
outsb
shlb
or
push
adc
mov
repz
inc
out
loopne
xor
dec
dec
sahf
pop
je
jle
pop
repz
rol
daa
movsb
adc
dec
rcrb
xchg
clc
int
hlt
daa
inc
adcb
orb
cld
iret
lock
hlt
lret
les
loope
aaa
loopne
jns
cmpsb
jl
xchg
iret
aam
pop
cmp
jae
bound
imull
mov
pop
sbb
mov
inc
mov
aad
lret
icebp
iret
cmp
mov
test
adc
add
inc
negb
ja
jns
mov
xchg
into
loop
cmp
mov
push
fdivs
xchg
fldcw
rclb
je
call
pop
popa
outsb
xorb
jge
xchg
jae
xor
lock
les
pop
mov
or
lods
arpl
jge
in
lea
add
adc
les
push
subl
lock
test
xchg
pop
icebp
nop
outsb
mov
das
adc
div
jecxz
push
enter
xlat
push
or
add
jo
add
inc
stos
outsl
inc
inc
in
cmpsl
outsl
popl
jge
std
add
outsl
nop
jb
ret
outsl
jmp
push
jecxz
sub
clc
scas
mov
lods
lods
mov
xchg
push
imul
std
cwtl
xorl
jb
xor
mov
mov
cld
repz
out
jmp
xor
xchg
rcr
dec
movsl
loopne
movsb
repz
mov
sbb
repnz
in
lods
pusha
fsubl
adc
jge
out
sbbl
daa
mov
or
iret
mov
jne
hlt
idivb
adc
cmpsl
xor
dec
mov
pop
ja
jne
add
mov
repnz
ja
fnstsw
aaa
shlb
and
sbbl
rol
xor
add
mov
repz
sub
imul
shlb
adc
fwait
test
or
mov
inc
iret
mov
hlt
adc
in
cmp
repnz
mov
cltd
adc
add
ss
sti
je
pop
mov
sahf
cmp
add
mov
jae
movsb
and
repnz
push
xlat
rolb
and
adc
mov
adcl
and
sbb
add
mov
sbb
cs
test
or
jnp
cmp
xchg
mov
and
test
cmpsl
outsb
and
lea
pop
sbb
xchg
rclb
jge
xrelease
aas
pop
stos
push
jecxz
cli
loop
and
xchg
cmp
add
cmc
gs
rcpps
cltd
arpl
and
mov
fwait
in
add
xchg
xchg
adc
xchg
rol
insl
cld
add
mov
outsw
test
lea
mov
jmp
shlb
push
clc
cmp
lods
ret
psubusw
jo
xchg
push
xchg
push
sarb
mov
repz
mov
or
mov
sub
test
jno
dec
xor
inc
jo
jae
test
mov
jmp
sahf
jge
push
ret
hlt
xlat
insb
pop
xchg
pop
jmp
add
adc
and
add
push
push
sti
clc
lods
rolb
lock
sub
sbb
out
xchg
xchg
xchg
outsl
js
jp
std
andb
mov
sbb
mov
xchg
mov
jecxz
mov
cld
mov
add
xor
xchg
mov
xor
outsl
cwtl
das
jns
notb
cwtl
les
aam
mov
jne
shlb
fdiv
dec
cmpsb
push
mov
in
inc
movb
out
dec
sbb
scas
or
out
xlat
int3
lret
cld
and
and
stos
mov
jno
mov
scas
lds
sub
repnz
mov
sbb
xchg
add
xchg
test
sub
mov
push
lea
fdivrp
dec
inc
sub
xchg
std
pop
adc
test
movsb
or
mov
repz
mov
std
inc
push
jno
fmuls
inc
ja
xchg
sbb
mov
add
push
js
inc
inc
sub
dec
les
nop
mov
hlt
push
pop
cmpsb
add
stc
dec
pop
xor
js
jae
jmp
sub
mov
cmp
xchg
adc
lret
push
mov
mul
das
popf
pop
sbb
jecxz
mov
mov
xchg
repnz
mov
scas
mov
loopne
mov
cmp
and
shrb
mov
loopne
and
cli
pop
or
rcrb
icebp
scas
out
pop
mov
je
int
jnp
lret
lret
mov
push
outsb
test
inc
imul
lahf
std
xchg
outsb
rep
testb
jecxz
sbb
push
fiadds
cld
mov
jns
idivb
cmp
into
rclb
cmpsl
outsl
les
sbb
or
xchg
jl
sub
push
das
cld
std
loopne
push
roll
mov
mov
ret
push
pushf
mov
sbb
aad
mov
xchg
sahf
mov
mov
into
cltd
ret
sub
xchg
js
inc
push
les
cmp
andl
shlb
cmp
cwtl
mov
test
fs
call
cli
std
pop
test
or
jge
test
sti
adc
jl
imul
jl
mov
dec
ret
sti
sar
test
clc
shlb
xor
or
nop
sarb
loopne
add
mov
pop
sbb
xorb
repz
in
or
cld
fsts
pop
bnd
addb
outsb
out
mov
lret
dec
loop
mull
and
fs
mov
xor
push
nop
cwtl
ret
dec
ret
addl
dec
inc
test
icebp
jl
pop
jecxz
lock
cmp
std
or
std
negb
xor
sub
mov
cmpsb
sahf
add
aaa
inc
sbb
into
imul
adc
movsb
sbb
cmpsb
lret
add
aaa
rol
ja
into
imul
sbb
loopne
movsb
popf
mov
clc
outsl
imul
mov
xchg
xchg
rcl
sahf
mov
xchg
push
rcrb
nop
movsl
bnd
shll
mov
push
shlb
nop
ret
bnd
iret
movsb
mov
mov
push
shlb
nop
loope
jbe
shlb
into
sar
mov
push
dec
cmpsl
cmp
repz
and
popf
lock
daa
stos
jle
jg
imulb
push
and
mov
shl
lock
ja
out
push
or
jg
neg
add
cmp
call
jl
es
divl
aam
mov
cmpsl
rorb
jecxz
xchg
aaa
mov
negl
jae
lock
cmpsl
mov
xchg
sbb
jg
test
fdivs
and
sub
out
xchg
mov
clc
xor
ja
rorl
sub
repnz
jmp
dec
mov
adc
lret
mov
cld
shlb
call
mov
imul
idivl
jno
cltd
cmp
out
sub
pop
movsb
mov
dec
aam
sti
clc
cmpb
mov
jns
repnz
loopne
in
and
loop
insb
jle
js
mov
push
dec
loopne
sbb
stos
in
insl
or
ds
idivb
cmp
mov
daa
shlb
outsl
push
fbstp
outsl
cmp
jne
cld
xchg
in
daa
js
sti
inc
js
arpl
push
cld
shll
imulb
clc
cmc
daa
push
imul
outsl
push
pusha
neg
cltd
dec
call
mov
xor
test
push
sub
sbb
sub
fstl
icebp
les
sub
out
jns
out
jg
popf
jb
push
ret
adc
inc
inc
scas
in
test
lcall
mov
cmp
lds
push
sbb
push
sbb
add
push
add
sbb
cwtl
dec
push
jl
test
dec
inc
andl
cmp
test
push
sub
fcomps
sub
jo
popa
addr16
sbb
cwtl
cmpsl
push
inc
xor
loopne
cmp
inc
ja
dec
sbb
nop
push
mov
ljmp
repnz
scas
pop
out
cmpsb
outsb
xchg
cld
in
lods
mov
xchg
testb
icebp
pop
test
jb
adc
call
add
in
xchg
daa
xchg
pushf
push
idiv
inc
clc
xor
pop
fnstenv
mov
lds
and
sbb
bnd
in
outsb
xlat
xor
ja
neg
in
pop
jmp
xchg
push
in
mov
aas
movsb
mov
mov
mov
xor
lret
test
fsubr
outsb
cmp
call
or
dec
inc
test
mov
out
xchg
ja
ds
fwait
jg
or
fsubr
mov
scas
dec
and
fstpt
loopne
mov
andb
add
cli
push
daa
hlt
push
call
mov
aas
inc
dec
mov
pusha
mov
xor
mov
ret
fwait
mov
mov
cs
mov
push
jbe
scas
div
in
mov
movsb
repnz
ret
and
lock
cmpsb
mov
mov
decl
and
js
cli
adc
notb
popf
jne
or
ds
cmp
push
mov
jg
and
mov
xchg
hlt
int
mov
cmpsb
push
jbe
xchg
test
pop
js
popf
notb
imul
in
movsb
fdiv
ds
add
jo
sub
ss
dec
push
fsubrl
aam
jle
cmpsb
pushf
mov
inc
dec
cmpsb
pop
pushf
add
pop
mov
adcl
fsubs
loop
push
imul
xchg
sti
pop
aad
dec
clc
nop
lock
dec
jb
sbb
mov
js
dec
lock
mov
add
dec
lret
mov
mov
lock
sub
push
insl
stc
pop
aas
and
xchg
insl
adc
stos
je
cwtl
adc
imul
clc
js
sbb
adc
rcrb
mov
popf
inc
shl
adcl
mov
das
xchg
addl
inc
mov
sbb
inc
lock
fwait
mov
lret
icebp
xor
sbb
ficoms
lahf
test
or
insl
mov
in
cmpsb
in
mov
xchg
pop
sub
mov
shrl
clc
sbb
repnz
testb
xchg
lock
std
and
shlb
ret
out
mov
inc
and
lahf
xchg
insb
leave
idivl
cmp
add
xchg
add
pop
mov
add
or
jl
xchg
rolb
xchg
orl
and
fbld
daa
pop
jno
dec
mov
lcall
push
lret
mov
cmpb
adc
shlb
sub
repnz
mov
inc
inc
xor
adc
icebp
shl
jo
ljmp
cmp
mov
jno
xchg
cwtl
mov
xchg
daa
sub
stc
call
hlt
inc
mov
xchg
aad
mov
jno
mov
jge
inc
je
ja
adc
mov
hlt
stos
mov
and
mov
jle
sub
adc
add
cmp
loopne
xchg
cmc
cmpsb
jg
out
push
jo
ret
xchg
cmc
mov
lods
mov
testb
push
scas
lahf
stc
push
jae
sbbl
add
add
xor
lret
out
js
repnz
adc
imul
lock
int3
inc
sub
adcb
push
lahf
mov
test
cwtl
inc
imul
cmc
nop
out
in
decb
jmp
test
mov
js
stos
dec
push
jl
inc
into
adc
popf
or
inc
and
sahf
neg
push
cli
xchg
popf
shrb
mov
jmp
and
pop
cmp
movsb
mov
popf
lock
daa
xchg
adcb
jl
fwait
test
out
adc
imull
movsb
adc
push
jno
jne
icebp
add
cmc
not
add
sub
jmp
mov
outsb
jb
scas
push
adc
mov
push
inc
sti
jae
addr16
outsl
inc
or
pop
rcr
sub
xchg
jne
inc
or
mov
jo
test
jge
pusha
mov
rcl
imul
xchg
jno
test
mov
nop
xlat
dec
mov
pop
adcb
jmp
mov
loope
orl
push
rorb
rclb
xchg
xchg
mov
mov
add
repnz
sub
lock
cwtl
in
xlat
cld
or
in
jb
ljmp
in
mov
divb
mov
aaa
mov
xchg
out
nop
orb
dec
inc
xchg
iret
mov
xlat
decb
dec
repnz
xor
leave
mov
mov
xchg
mov
xor
jae
lock
in
fs
loope
fs
push
scas
shl
push
ret
scas
mov
xor
leave
ror
shll
in
mov
insl
pause
hlt
mov
sub
xlat
iret
sbbl
notb
int3
movsb
faddp
mov
mov
mov
fsubrs
loop
lahf
mov
cld
addl
pushf
pop
dec
incb
loopne
xor
push
cwtl
xor
ret
ret
icebp
mov
sarb
mov
xchg
mov
mov
and
repnz
ficoms
testl
jae
subl
xchg
enter
stos
nop
mov
cld
xor
mov
repnz
into
aaa
mov
cwtl
notl
cmp
xor
cmp
scas
dec
jl
iret
in
mov
or
outsl
insb
in
add
test
popa
cmp
cmp
clc
insb
inc
fadd
pop
and
xchg
mov
nop
loopne
cli
push
push
insl
pop
inc
fnstenv
lods
dec
mov
cs
jb
orl
in
sbb
movhps
mov
icebp
dec
push
stc
insl
push
sbb
pop
sbb
jmp
ja
adc
addb
sub
jbe
lods
movsb
add
mov
xorb
bnd
les
in
mov
xchg
fprem
cld
pxor
push
popf
nop
push
mov
shrb
pushf
pushf
pushf
shl
lea
xor
popf
aam
cwtl
cmp
fs
notb
push
push
mov
fistps
cld
jge
clc
mov
push
push
pushf
je
pushf
fwait
mov
jp
lahf
cld
adc
sub
cmp
rcll
lcall
adc
or
mov
movsb
ficompl
je
pushf
xchg
cmp
repz
mov
jg
es
andb
cmpsl
jns
add
xchg
movsb
sahf
mov
mov
out
mov
cmc
outsl
xchg
je
imul
xchg
aam
xchg
jae
xor
pop
in
lock
sub
xor
mov
and
lret
mov
insb
aaa
mov
jae
xor
mov
cmp
movsl
popf
in
call
jmp
mov
or
lea
fdivr
cmpsb
aas
test
out
cwtl
mov
pop
imul
mov
je
cwtl
sbb
loop
adc
rcll
pop
add
cld
mov
jno
cmp
xchg
jg
dec
fistpl
sub
outsl
xor
js
jbe
in
xchg
cmc
out
nop
in
clc
imul
cmpsb
and
out
and
divl
loopne
pop
mov
popf
jns
pop
loop
xor
repnz
or
push
sub
or
cli
add
subb
jnp
scas
iret
orb
call
rolb
xchg
outsl
nop
jge
inc
lret
cmp
sbb
sbb
add
mov
push
lock
mov
fdivp
daa
rcr
loopne
daa
xchg
add
clc
add
ficomps
mov
cmp
call
rorb
data16
stos
loop
subl
add
rcll
mov
adc
cs
adc
fcoms
mov
imul
decl
jbe
loop
nop
xlat
lcall
mov
rorb
repz
lods
cmp
jg
xchg
aam
movsb
lea
lods
and
mov
mov
xchg
xor
testb
jg
incl
pop
movsl
ja
add
cmp
fwait
adc
mov
loop
stos
add
jae
imul
lods
cld
idivb
mov
cwtl
stc
add
lahf
xchg
andl
add
xor
loop
outsl
test
adc
shl
popf
add
push
fcmovb
dec
enter
xchg
push
cs
out
jae
fwait
stos
leave
rcrb
fiadds
aam
jae
clc
xchg
int
cld
popf
imul
inc
notl
jp
dec
outsl
cmpl
out
sbb
add
jo
cmp
mov
mov
jno
push
adc
sub
icebp
add
jae
cmp
aas
xchg
out
test
or
sub
outsl
ds
mov
add
lds
mov
and
jl
xchg
cmpsb
je
dec
cmc
fdiv
pushl
repnz
cld
mov
fsubl
rorl
out
test
out
mov
lea
push
adc
cmpsl
mov
cld
rorl
adc
jg
inc
pop
adc
stc
icebp
call
and
adc
in
xchg
jne
xchg
mov
std
mov
sarl
lds
cmpsb
add
add
xor
cld
dec
pushf
aad
cmp
xor
xchg
int
shl
int
ret
jmp
pop
dec
push
ret
and
add
nop
into
mov
divl
shrb
repz
cmp
fsts
add
stos
pop
sbb
or
xlat
inc
jo
lret
jo
mov
jge
sub
negb
inc
mov
stc
mov
sbb
cmp
mov
loop
rorl
jb
aas
stos
bnd
push
pushf
aaa
add
xchg
pop
sub
push
mov
outsl
clc
aam
jl
test
movsb
xor
push
xor
dec
push
xchg
outsb
or
lock
idivb
test
xor
push
cmpsl
pop
push
cmp
adc
mov
push
push
mov
insb
scas
mov
pop
xchg
mov
ret
add
mov
mov
mov
scas
enter
out
fidivs
shl
mov
movsb
das
xchg
mov
push
add
das
ret
lock
aaa
jge
movb
pop
adc
scas
loop
add
pop
aam
xchg
aaa
sbb
xchg
xchg
js
inc
xor
stc
push
lock
push
das
xchg
jb
adc
gs
jmp
mov
arpl
xchg
hlt
mov
mov
pop
xlat
or
pop
push
adc
fisubs
mov
sbb
ja
clc
movsl
fwait
stc
loopne
jo
cli
icebp
icebp
es
cltd
or
fsubl
ret
add
add
mov
pop
scas
xchg
jnp
mov
or
arpl
cltd
jecxz
pop
mov
xor
lcall
lock
imul
cld
lahf
stc
movsb
mov
jbe
pop
ja
or
call
addr16
xorb
mov
mov
shlb
adc
test
xchg
sub
pop
push
jmp
mov
pop
xchg
mov
xor
push
fcomi
or
push
cmpsl
xchg
fstps
and
sub
jo
dec
mov
in
jg
push
mov
fwait
int3
or
lea
pop
lret
cmpsl
inc
inc
repz
lds
cmpsb
imul
push
loopne
push
inc
inc
repz
xchg
jo
jbe
pop
dec
or
leave
enter
repnz
sahf
lods
cmpsb
jg
repnz
fnstcw
pushf
adc
lcall
mull
dec
fs
and
xor
std
int3
shrl
mov
adc
repnz
inc
outsl
std
stos
aad
sub
ficompl
repz
and
clc
jmp
in
aad
cmc
faddp
inc
leave
mov
xchg
sub
xchg
outsb
negl
scas
adc
in
xor
add
lock
lcall
int3
lea
sarl
mov
cld
lods
pop
leave
push
mov
xchg
pop
hlt
outsb
push
push
jb
inc
in
jbe
or
daa
mov
sub
push
mov
outsl
cltd
and
ficoms
adc
lea
sbb
out
mov
and
aaa
mov
pop
std
enter
mov
js
arpl
fnstsw
mov
hlt
xchg
in
add
mov
sub
adc
dec
xchg
and
xchg
pop
aam
xchg
xorb
clc
ljmp
push
push
roll
push
insb
push
xchg
testb
lret
aam
cmc
fdivp
mov
add
mov
push
aas
adc
into
lods
adc
stos
aam
mov
scas
subb
adc
xchg
xchg
dec
mov
mov
ret
cmc
jbe
mov
inc
clc
in
fwait
movsb
xor
add
aam
bound
test
pop
arpl
adc
fwait
cld
push
and
jnp
andb
cmc
inc
sbb
iret
xor
mov
ljmp
inc
mov
xchg
mov
mov
jne
out
xor
mov
ret
dec
fstps
dec
and
inc
dec
pop
jns
xchg
mov
inc
mov
lods
gs
jecxz
mov
lds
jnp
jae
dec
lea
shrl
in
add
cmpsb
cmc
adc
sbb
sub
movsl
dec
pop
leave
rclb
add
add
push
insl
and
gs
cmovl
pop
movsb
mov
mov
cwtl
imul
pushf
xor
repnz
jmp
nop
xchg
ljmp
and
xchg
mov
idivl
dec
mov
mov
clc
push
loop
push
negb
mov
sahf
mov
lahf
and
fcoml
nop
sbbl
mov
adc
lods
dec
js
ret
mov
mov
lret
fistl
add
test
fimuls
xchg
jae
xorb
es
lcall
scas
dec
cmpsb
fwait
gs
mov
push
jp
movsb
cmc
stos
pop
clc
idiv
je
out
jo
out
subl
mov
test
push
xchg
insl
subb
out
cli
lock
xchg
push
lods
test
xchg
mov
mov
cld
cld
ficoms
jno
jl
nop
or
or
aaa
jl
clc
popa
cmc
int3
std
cld
add
imul
xchg
movsb
test
ficompl
adc
mov
push
enter
aaa
pop
cmpsb
dec
sbb
bound
adc
push
call
or
add
jl
mov
fbstp
mov
ljmp
push
cmpsl
adc
les
sbb
inc
mov
push
pop
cmp
mov
xorl
aas
lods
jae
in
sbb
fucom
imul
and
hlt
negl
scas
ja
clc
jae
push
xchg
mov
out
add
nop
pop
xchg
lret
mov
jnp
mov
call
in
fmul
jecxz
or
icebp
xchg
int
nop
andb
sahf
cmp
mov
sbb
leave
and
mov
mov
divl
ret
js
out
add
fnstsw
nop
lock
outsl
mov
je
in
adc
sub
xchg
sub
lods
xorb
clc
dec
sbb
or
and
outsb
pop
dec
mov
xchg
nop
clc
lods
add
mov
jmp
inc
xchg
aas
mov
jnp
mov
cli
test
fdivrp
scas
stc
cmp
test
jp
or
cmp
imul
inc
mov
cld
das
loopne
or
push
sbb
unpckhps
push
imulb
std
std
push
add
mov
ljmp
xchg
adc
aas
pop
cli
repz
lock
rclb
test
jge
xor
push
rcr
std
jbe
add
inc
ds
es
dec
std
pop
xchg
xlat
cmc
push
int
int3
imul
mov
jmp
push
clc
or
incl
xor
sbb
decb
mov
add
clc
out
xchg
mov
cwtl
mov
push
add
adc
add
loop
pushf
repnz
mov
rorb
add
or
bnd
inc
jg
jb
xchg
test
addb
jl
pop
orb
sarb
cmpsb
in
mov
xchg
pop
xchg
mov
or
nop
fnsave
pop
call
xchg
cld
cmp
dec
push
fdivrl
and
jns
loopne
test
xchg
sub
mulb
and
cltd
or
cmp
dec
adc
or
addb
sbb
icebp
scas
cwtl
repnz
mov
cmc
hlt
bound
or
lahf
cmpsb
bnd
cmp
pop
inc
xor
sbb
jmp
jle
inc
jle
aas
and
mov
icebp
mov
xchg
push
cmp
add
mov
push
ret
cmc
inc
cld
mov
iret
mov
lret
aam
fnstsw
mulb
jecxz
mov
movzwl
push
nop
call
jge
lods
call
fbstp
idivl
rorb
stc
mov
test
clc
leave
cmp
adc
int3
fwait
dec
sbb
dec
mov
das
fcmovne
imul
movsb
inc
mov
cs
clc
mov
icebp
fisttpll
jle
ja
mov
or
lds
mov
sti
jg
push
nop
loopne
xlat
ja
fstps
ss
cli
and
test
movq
popf
sbb
add
test
xchg
push
stos
subb
mov
nop
xchg
fwait
fs
xor
loope
or
mov
push
cmpsb
add
sbb
and
add
sub
fldcw
pop
movsb
mov
imul
sub
cmc
jns
repnz
lret
in
in
lock
xchg
aam
sar
mov
inc
hlt
div
add
dec
repnz
shl
sub
mov
stos
jp
fcomip
inc
xchg
scas
push
push
out
std
aam
test
loopne
push
mov
add
mov
mov
sti
add
inc
in
jg
shr
or
div
hlt
jns
shl
int
sub
jle
jbe
xor
cmc
fdiv
test
in
adc
repz
nop
mov
test
mov
cld
pop
cmp
enter
fmuls
xor
pop
mov
push
sub
push
ja
movsl
add
mov
nop
pop
lock
pop
add
cwtl
jne
fstpt
cld
mov
or
movsb
ja
cmpsb
xchg
xchg
mov
and
mov
sub
popf
cld
and
enter
ja
jge
incl
cltd
das
push
pop
cmp
in
jl
sbbb
pop
in
inc
scas
pop
push
imul
add
cmc
mov
push
in
aam
jo
les
in
fists
or
adc
out
cmp
pop
jp
push
pop
xchg
pop
nop
adc
lahf
clc
std
stos
xor
cmp
inc
int3
lret
mov
rcrb
add
adc
stc
mov
fsubs
divl
insb
and
jle
fs
pop
sub
js
jae
jo
lcall
add
xchg
in
adc
imul
xchg
push
xchg
cmp
push
add
mov
stc
dec
push
outsb
sub
leave
add
xor
sahf
mov
daa
add
in
das
adc
mov
pop
scas
hlt
aam
lock
test
scas
sbb
leave
mov
sbb
addl
out
inc
lods
pop
mov
mov
daa
mov
bound
inc
mov
sahf
mov
push
dec
inc
enter
fsubl
add
jnp
xchg
xbegin
mov
cmpsb
lods
sbb
add
mov
sti
or
stc
inc
jo
push
add
sahf
xchg
nop
stos
ljmp
cmp
pop
lock
in
insb
jmp
call
movsb
ficoml
pop
incl
cld
popa
lds
in
add
inc
outsb
xchg
rcrb
sbb
popa
jmp
out
dec
fdiv
loopne
mov
pop
pop
movsb
es
cmp
loopne
push
dec
je,pt
jae
add
dec
mov
repnz
cmp
repz
mov
pop
lcall
test
ds
test
xchg
stc
cld
mov
xchg
loopne
adc
pop
mov
sbb
fwait
mov
inc
les
shlb
xorb
jle
jmp
dec
mov
test
hlt
sbb
xchg
xor
pop
jp
add
pop
popa
lea
and
jle
or
xor
sub
xlat
mov
and
adc
push
jl
pop
cmp
fildll
adc
or
mov
mov
ds
push
jl
pop
pop
in
lock
test
in
jbe
lahf
add
pop
popf
cwtl
mov
xchg
push
nop
out
mov
adc
aam
insb
cmp
jne
or
adc
push
cwtl
mov
jmp
test
loopne
add
repnz
cwtl
bound
inc
pop
xchg
orl
mov
pushf
mov
ja
lcall
mov
aaa
sub
push
test
adc
pop
lods
cld
add
push
sbb
loopne
aad
cwtl
fcmovne
popa
repz
cmp
jle
push
sahf
stos
mov
insb
hlt
xchg
add
aas
mov
mov
loope
add
pop
std
int3
aas
mov
dec
test
and
dec
mov
dec
ret
cli
sbb
cwtl
fucomi
sub
mov
lock
imul
inc
jge
notl
mov
lahf
or
loop
lea
stos
insl
out
inc
dec
lcall
inc
std
push
mov
stos
loope
dec
and
jg
sahf
pop
pushf
inc
ret
pop
outsb
fidivrl
xchg
pop
out
je
push
add
push
cmc
mul
mov
jae
outsl
popf
xchg
mov
jp
lahf
xchg
out
mov
pusha
loop
adc
cmc
stos
fimull
out
xor
clc
scas
dec
mov
idiv
xchg
out
add
inc
cmpsl
jo
jg
lods
sub
jg
jo
jno
shlb
jo
out
or
cmpsb
shr
leave
out
std
stos
jo
fdivl
mov
orb
mov
push
cmp
cld
adc
in
lock
daa
xor
dec
fnsave
stos
mov
adc
or
adc
xor
cwtl
in
cmc
fisubl
cmpsb
neg
pop
adc
mov
pop
xchg
inc
inc
enter
outsb
mov
bnd
dec
out
cs
and
jnp
jecxz
inc
subl
mov
cld
cmpsb
js
into
jbe
or
loope
inc
dec
dec
mov
mov
pop
pop
enter
ss
nop
xor
call
dec
sbb
pop
test
lahf
xor
cwtl
jg
jno
xor
in
add
jno
lea
dec
icebp
lock
add
jp
inc
jo
mov
bnd
add
ja
lock
jg
stos
or
lahf
outsl
jge
bnd
push
mov
add
out
lret
add
out
in
jb
divl
sbb
jo
lret
movzwl
js
xchg
hlt
jg
jno
mov
mov
in
sbb
fyl2xp1
add
std
push
movsl
loope
sub
lods
mov
gs
sar
mov
push
mov
or
or
scas
andl
mull
pop
push
mov
andb
setbe
jbe
fiaddl
idiv
fimull
xchg
out
or
faddl
fidivs
ljmp
adc
scas
std
mov
sub
add
sub
or
imul
or
in
mov
inc
incl
mull
push
mov
cmp
ja
jmp
clc
xchg
jmp
fnstsw
cmp
outsl
xor
pop
popa
jmp
cwtl
or
jno
adc
or
out
sbbb
cmovb
xor
mov
ja
jnp
sbbl
js
pop
push
popf
pop
stos
test
js
push
fld
jle
sbb
push
push
mov
cld
in
out
jnp
sbb
lahf
push
jno
dec
cmp
pop
test
cld
shr
test
leave
aaa
mov
jae
add
aas
std
cmpsb
dec
sahf
movsb
ds
test
inc
fists
test
outsb
movsb
std
mov
xor
and
xchg
int
xchg
xchg
data16
pushl
movsl
fwait
xchg
ret
add
or
dec
xlat
daa
in
dec
and
pop
dec
add
and
movsl
xor
add
jg
mov
outsl
push
movsl
dec
addl
sbb
sbbl
incb
and
bound
dec
lock
out
cmpsl
jg
cwtl
cli
sub
cmp
in
addr16
repnz
sbb
cmp
mov
cmp
jp
outsl
fwait
inc
imul
fidivs
mov
outsl
scas
repnz
lret
mov
push
in
push
movsb
mov
sahf
in
jae
enter
leave
inc
iret
fldcw
test
mov
int
jns
lock
mov
mov
lods
je
sti
add
xchg
and
pop
in
cld
sub
in
cwtl
push
mov
pushf
iret
int
cli
jno
aam
sub
sbb
test
push
pop
orb
in
cltd
subb
std
or
cld
mov
push
mov
mov
mov
push
cmp
aaa
scas
xchg
clc
lods
ret
lcall
mull
orb
mov
jg
iret
decb
xchg
dec
fidivs
push
pop
movsb
xchg
je
xor
adc
xchg
mov
stos
shlb
and
aas
cmpsl
js
push
xchg
adc
orb
cmp
add
daa
cwtl
sti
sahf
lods
xchg
outsl
test
call
stc
and
sti
mov
loopne
jl
adc
xor
mov
add
pop
icebp
mov
or
cmp
jg
adc
out
ja
mov
cld
shr
bound
dec
cltd
inc
adc
adcb
ret
lea
call
idivb
insb
mov
mov
add
shl
and
rorb
ja
mov
filds
mov
lods
mov
xchg
push
mov
sub
mov
testb
mov
sti
add
fwait
sbb
scas
xchg
xchg
arpl
sbb
pop
mov
leave
add
pop
jmp
xchg
mov
or
ret
mov
push
dec
daa
cmpsl
insb
fyl2xp1
les
outsb
mov
cmpb
adc
insl
push
push
andb
movsl
testl
movsb
xor
in
fdivrl
je
cmp
mov
sar
bound
cmp
add
sbb
xchg
pop
xchg
jne
mov
repz
jo
add
sbb
inc
pop
int
pop
mov
mov
mov
daa
lock
jg
orl
dec
rcrb
mov
mov
mov
mov
in
add
loopne
lea
jno
inc
imul
aas
adc
or
add
mov
cwtl
xchg
mov
add
xor
pushf
std
cmp
out
dec
jecxz
loop
in
lcall
mov
jae
cmp
mov
mov
dec
std
rorb
loopne
lock
fs
loopne
xchg
and
fldt
fisubrs
std
jp
jno
in
sub
loope
add
pop
cmp
jmp
out
sarb
jmp
repz
shr
adcl
out
shr
cmp
in
rolb
inc
mov
ror
repz
push
shll
movsb
jmp
sar
xchg
cld
pop
cmp
repz
imull
cwtl
dec
loope
mov
negl
and
jmp
mov
mov
popf
repnz
dec
and
mov
out
sbb
daa
data16
xor
outsb
idiv
sbb
dec
outsl
sbb
icebp
mov
repz
outsb
test
xor
int
cmp
push
mov
push
shlb
lret
aad
decb
adc
sahf
pop
shll
fstpt
cld
insl
mov
adc
lea
inc
cmpsb
rcr
xchg
cmp
mov
push
push
xchg
std
or
inc
lcall
xor
aas
ds
fstpl
fnsave
jg
int
hlt
std
cwtl
adc
in
inc
fwait
inc
sbb
stos
jg
mov
jb
pushf
push
and
cmp
mov
leave
int
sbb
cli
sub
inc
repz
jns
push
popf
scas
jg
std
lcall
or
add
dec
stc
dec
or
popa
mov
adc
mov
shll
das
adc
lahf
fists
xchg
daa
cli
jne
stc
stos
sbb
jmp
orl
test
sbb
push
int3
or
push
out
mov
mov
lds
mulb
jecxz
mov
idiv
jnp
jns
add
lods
adc
mov
and
popf
or
lahf
nop
sbb
pop
jle
lods
test
xor
enter
imul
cmpsl
cmp
pop
sbb
andl
add
repnz
mov
lret
sub
lret
cmpb
sti
and
stos
pop
cmpsl
std
cmp
pusha
jle
inc
mov
mov
dec
and
ljmp
or
xchg
rclb
call
dec
cmp
cmp
rcrb
outsb
pop
loopne
mov
push
icebp
jne
add
sti
sbb
pop
pop
nop
lock
inc
mov
stc
dec
mov
cld
je
add
stc
popf
popa
pushf
enter
jecxz
aaa
jl
jmp
loop
cld
add
push
cmp
cmp
jmp
sbbl
pop
lods
jge
add
dec
out
xchg
push
les
pop
pop
pop
dec
xchg
jecxz
mov
pop
push
loope
fsubrs
and
jns
mov
xlat
int
mov
cli
xchg
pop
xchg
and
lods
xlat
sti
int
stc
xchg
out
jbe
and
jb
mov
divb
jo
out
decl
add
test
xchg
imul
lret
mov
mov
es
xlat
scas
int
stc
in
or
repnz
ret
lock
cwtl
out
lcall
xchg
lods
add
xchg
mov
cmp
mov
loop
inc
ljmp
push
lock
jno
sbb
add
xchg
or
nop
adc
adc
imull
jb
xor
add
or
push
mov
movsl
jno
sbb
pop
jg
adc
pop
fs
add
nop
call
jno
and
and
push
cli
insl
in
inc
mov
push
lcall
notl
sbb
mov
cmp
int3
xchg
sub
scas
push
cwtl
mov
jno,pn
lods
gs
int
mov
negb
div
in
sahf
dec
add
inc
movsb
fs
sbb
mov
mov
or
shrb
or
aam
xor
push
xor
in
inc
nop
xor
xchg
loope,pt
xlat
testb
out
incl
aad
popa
sti
repnz
push
hlt
std
scas
push
fcmovnb
mov
nop
sbbl
jne
xchg
mov
in
mov
dec
push
or
mov
mov
xchg
nop
repnz
shl
lret
mov
nop
stos
mov
addb
test
xchg
stos
leave
pushf
lcall
adc
popf
push
test
adc
xor
pushf
or
push
sbb
cltd
or
xchg
mov
cmpsb
std
xchg
adc
ret
mov
or
clc
out
lock
mov
or
cltd
mov
les
mov
push
lahf
and
movsb
sbbb
mov
aas
push
push
push
lods
enter
jp
pop
mov
mov
nop
loop
jmp
fidivrl
clc
cld
sbb
sbb
push
hlt
jo
xchg
mov
jp
mov
pop
add
negl
jae
ret
stos
mov
cli
xorb
add
mov
imull
out
lock
aad
or
xchg
call
fwait
dec
push
xchg
cli
pop
adc
bound
cwtl
dec
mov
aam
xchg
hlt
decl
outsb
add
mov
fistl
cltd
gs
loop
test
mov
xchg
xor
incl
mov
dec
enter
in
mov
adc
jns
mov
xchg
add
add
fsubrp
call
hlt
dec
lods
testl
ret
pop
push
ds
cmc
mov
stc
push
repnz
mov
idivl
mov
loopne
add
pusha
jg
nop
and
jae
adc
movsl
sub
xor
rorl
mov
or
pushf
mov
mov
jbe
xchg
push
jnp
mov
insb
stc
xchg
adc
add
out
repnz
mov
lcall
jmp
stos
cmpsb
xor
mov
xchg
dec
lcall
testb
pop
jo
mov
xchg
inc
mov
ljmp
mov
lcall
jmp
out
mov
cmpsb
cmp
sub
mov
mov
mov
sti
add
jo
adc
lock
mov
mov
or
xchg
fidivrs
adc
dec
lret
stc
xchg
inc
das
jl
adc
jg
int
jb
push
lock
icebp
icebp
add
mov
jecxz
popf
cmp
cwtl
cs
movsb
sbb
ret
insl
and
call
nop
nop
cli
icebp
pop
mov
divl
adc
movsb
jne
jae
add
push
and
xchg
sahf
lods
call
push
mov
or
andb
xchg
in
push
pop
jl
jg
mov
mov
sbb
adc
or
add
icebp
mov
adc
push
mov
roll
adc
dec
mov
repz
add
test
xchg
stos
mov
cs
imul
sbb
lahf
sbb
outsl
push
aad
mov
xchg
jecxz
in
lds
and
negb
lods
sbb
mov
push
mov
lods
and
mov
mov
js
push
mov
or
mov
sbb
test
mov
mov
mov
cmpsb
out
sub
movsl
fcos
jp
jbe
lock
mov
add
xchg
cld
dec
dec
popf
cli
js
sub
dec
adc
sti
fsts
mov
pop
adc
xor
in
mov
fistps
test
test
add
jno
lret
clc
pop
sub
jecxz
aam
mov
imul
xchg
mov
dec
aaa
shl
orb
mov
inc
fmull
mov
inc
cmpsl
mov
push
test
jmp
sbb
std
clc
mov
cld
cmp
cmc
enter
push
shl
mov
pop
js
es
outsl
in
sbb
push
in
fdivl
dec
mov
test
movsb
add
add
fmul
call
notb
insb
fidivrl
inc
ret
mov
jl
inc
loopne
and
clc
outsl
icebp
sub
fcmovnbe
cld
out
icebp
ret
dec
pop
sar
jp
leave
mov
int3
add
movsb
repnz
femms
add
mov
adc
xchg
pop
xchg
ror
push
mov
push
jl
dec
push
or
popf
fisttps
mov
test
sbb
xor
in
leave
subb
clc
jae
out
loopne
outsb
or
in
add
cmpl
les
adc
add
jle
fcmovb
and
je
push
xchg
add
push
out
sbb
cld
das
or
addb
lret
pop
dec
jle
jg
nop
xchg
add
push
andb
adc
popf
cwtl
adc
loopne
movsb
enter
popf
lret
adc
mov
lods
inc
gs
lret
mov
mov
in
adc
ret
and
insb
testl
movl
inc
mov
mov
xor
popa
stos
lock
lcall
movsb
fimull
bound
lret
add
and
mov
ljmp
sub
mov
pop
loope
imul
pop
sbb
repz
cmp
bound
pushf
loopne
testb
mov
sbb
mov
loopne
xor
stos
mov
xor
shlb
jmp
and
xor
mov
movsb
mov
sub
inc
mov
lret
insb
mov
cli
pop
movsb
jb
pop
xchg
xchg
push
cmp
push
mov
adc
mov
repnz
fucom
fstps
push
xlat
fs
adc
jg
imul
sub
inc
outsb
pop
fwait
movsl
fstl
sbb
mov
out
idiv
jae
xchg
pushf
mov
daa
scas
jns
or
sti
ss
xchg
xor
add
loopne
dec
mov
rorb
lret
ljmp
xchg
bound
xor
jbe
adc
clc
sbbb
scas
insl
dec
cltd
sbb
mov
sti
div
clc
bnd
movsb
jmp
mov
adc
jae
sbb
mov
jmp
inc
stos
mov
ss
js
add
dec
push
xor
dec
sahf
cmpb
mov
in
sub
mov
je
cmp
fcmovbe
shl
jno
mov
sbb
xchg
testl
sub
sub
stos
push
std
xor
push
clc
xor
into
outsl
testb
cwtl
and
dec
bound
movb
shll
cwtl
dec
in
pop
or
fidivs
mov
mov
in
push
mov
adc
icebp
sub
or
sub
stos
push
xor
mov
fistps
xchg
lock
jnp
xchg
ret
mov
and
data16
nop
jle
vcmpsd
ret
jno
lock
jmp
repnz
or
push
hlt
mov
incb
push
add
jo
clc
idiv
mov
sti
push
mov
cmp
jbe
mov
push
jno
xor
adc
push
lret
stos
rolb
jnp
push
mov
clc
dec
push
sbb
push
dec
or
cld
and
push
mov
mov
or
cmp
mov
imull
jne
cmp
mov
sbb
push
shlb
mov
xchg
ret
and
fwait
cmp
idivb
in
dec
cmp
add
push
cmp
imul
mulb
ss
lret
cmpsl
xlat
sub
loopne
mov
mov
xor
push
shl
sbbl
mov
in
cltd
and
call
adc
push
stos
scas
lcall
loop
fcmovnbe
fwait
xlat
fadds
mov
je
and
les
mov
stos
popf
movsb
push
adc
inc
xchg
xlat
mov
inc
pop
clc
jo
std
shlb
divb
dec
pop
sub
repnz
das
nop
out
aam
js
pop
cs
pop
sarl
push
ds
popa
xchg
lea
add
mov
jns
cwtl
jae
push
call
sub
sub
xchg
out
cwtl
lock
aad
mov
add
outsl
jbe
inc
xchg
dec
or
push
rolb
pop
mov
jmp
inc
add
idivl
inc
mov
lahf
es
gs
mov
jl
shl
mov
repz
sub
aas
std
outsl
inc
jnp
jecxz
out
mov
insl
rcrb
adc
idivb
in
ror
das
lods
icebp
jl
nop
imul
cmc
inc
icebp
sub
sub
mov
dec
pop
inc
repnz
in
into
call
jno
negl
cmp
xchg
jp
add
ret
cmpsl
aam
movsl
sbb
fsubrl
rol
mov
push
pushl
mov
sbb
jno
in
pop
and
fbstp
icebp
push
mov
test
faddl
test
stc
jne
xchg
dec
mov
or
das
xor
pop
jb
xchg
repz
clc
pop
das
popa
aas
out
stos
ret
fdivrs
xchg
or
and
sub
cltd
lods
sbb
ss
rcrb
ss
idiv
fsts
xchg
add
sub
lcall
sbb
mov
xchg
sub
movsb
cwtl
jo
jae
daa
cld
lea
mov
jb
push
push
xorl
in
jo
out
std
imul
std
inc
jle
aas
stc
mov
push
imul
or
in
sbb
mov
mov
jno
push
jo
or
pushf
push
and
or
cltd
popl
push
xor
lds
sarb
pop
lret
mov
dec
mov
shrb
adc
aam
sarb
test
clc
pop
cmp
gs
jns
dec
enter
mov
lcall
in
mov
cld
ret
sub
pmaxub
push
xchg
ljmp
xor
lret
ret
in
xlat
in
xchg
mov
subb
sarb
ss
jg
ja
xchg
rorl
andl
jo
ja
cmp
inc
sub
pop
call
fadds
into
fs
std
add
pop
loopne
out
pushf
icebp
gs
je
jno
inc
nop
sub
pop
in
stos
cmc
lods
rol
js
mov
es
std
push
jno
add
jne
pop
mov
sbb
sbb
ficomps
sbb
out
or
jbe
out
popa
or
and
add
mov
xor
adc
inc
cmp
sbbb
mov
jg
cmpsb
lock
outsl
xor
leave
clc
mov
cld
jg
xchg
shrb
add
mov
jecxz
mov
and
int3
enter
rcr
inc
insl
dec
loopne
int3
mov
shll
lock
xchg
dec
je
mov
fidivl
call
xor
jae
fimull
lock
ret
filds
movl
adc
mov
icebp
popf
sbb
pop
pop
mov
insl
jg
mov
ja
lock
out
mov
repnz
out
jl
jo
xchg
jp
lock
iret
cmpl
push
divb
mov
aad
sub
sar
xchg
test
push
pmulhuw
popf
lahf
sti
add
in
cmovp
mov
xor
ss
cwtl
adc
ss
add
in
push
mov
mov
imul
call
clc
xchg
and
push
pop
sub
push
divl
out
addb
jl
cmpsb
inc
lods
into
js
mov
cmp
mov
push
mov
adcb
clc
cld
fists
lock
in
nop
movsl
ljmp
test
je
jae
int3
cmpsl
push
mov
mov
push
lea
push
xchg
fmull
push
adc
hlt
subb
inc
and
pop
testb
and
sub
ja
rolb
cmpsl
sub
clc
pop
dec
shlb
in
cmp
mov
shlb
cmpsl
add
lods
cmp
pop
cmp
inc
ja
jno
rclb
imul
es
jp
pop
ret
cwtl
xchg
movlhps
jecxz
cmp
or
arpl
mov
cmpsl
sbb
jl
fdivr
into
iret
cld
icebp
mov
shll
pop
and
xorb
nop
lea
lea
lahf
dec
test
mov
sbb
es
fadds
and
int3
mov
rcl
data16
testb
mov
push
adc
xor
push
xchg
xchg
idivb
test
sub
mov
sahf
loopne
scas
fidivs
sbb
xchg
push
pop
shl
jmp
leave
mov
mov
imul
movsl
mov
pop
dec
jp
js
sub
rcr
push
xchg
testl
popa
and
cli
sbb
pop
mov
pop
jge
jno
sub
xorb
xor
dec
aam
mov
and
push
int
frstpm(287
lahf
sbb
movsl
dec
push
call
insl
cmp
leave
std
fwait
push
add
mov
clc
out
fistl
insb
jns
jmp
testb
and
xchg
fldt
jmp
xor
cmp
xchg
xchg
test
add
pushf
out
xchg
je
xchg
lea
hlt
jg
jno
pushf
push
mov
jno
xchg
xor
and
loope
sub
mov
in
push
pop
jnp
clc
sbb
pop
cmp
mov
out
call
in
shlb
add
lds
fcmovnu
insb
sub
jns
test
cmpsb
adc
arpl
push
xchg
xchg
ret
sub
fidivrs
adc
outsb
fcmovnb
mov
adcl
clc
sbb
inc
sbb
insl
popa
aam
sti
adc
js
rcrb
icebp
push
or
pushf
cs
mov
lret
mov
lods
pushaw
in
cli
add
push
dec
les
subb
hlt
ds
sub
lret
dec
cmp
sbb
push
ljmp
into
xor
mov
jno
ret
pop
div
jo
jmp
movl
inc
adcb
repnz
add
repz
and
andl
arpl
lds
mov
mov
fildll
jmp
pop
lcall
ja
icebp
loop
mov
scas
jb
lcall
test
popl
mov
cwtl
lahf
inc
jp
adc
rolb
insl
jl
movsl
clc
jae
outsb
jno
rolb
leave
loope
data16
jno
mov
mov
clc
aaa
test
cld
add
outsb
dec
pop
popa
loopne
xchg
sbb
and
int3
inc
cs
and
add
jne
xchg
mov
push
hlt
add
shll
popf
push
push
inc
insb
cmp
add
in
adc
cmp
dec
adc
mov
popf
xorb
mov
mov
repnz
aaa
xchg
push
xchg
mov
xchg
out
push
aad
push
cli
dec
movb
sbb
add
sbbb
jle
xchg
mov
popf
adc
sti
add
cmp
testl
fisubs
mov
add
inc
bound
push
mov
hlt
mov
mov
or
sbb
add
mov
mov
jge
rolb
icebp
xor
enter
icebp
lcall
mov
scas
outsl
repnz
mov
cmpl
xchg
out
xor
inc
inc
je
pop
sub
sti
jo
pop
adc
mov
notl
nop
out
rcll
xchg
andb
negl
dec
outsl
in
lret
iret
push
into
add
mov
pop
in
scas
mov
pop
call
in
faddl
mov
xchg
in
sahf
push
in
lods
adc
mov
dec
loopne
dec
in
lock
cmpsb
repz
loop
add
push
out
outsb
lock
jne
xorb
mov
int3
shrb
fwait
insl
int3
ror
aaa
mov
adc
test
xchg
cltd
or
lcall
push
out
jecxz
add
xchg
add
imul
xchg
and
push
incl
loopne
pop
imul
or
lret
lods
imull
pop
paddb
inc
push
scas
inc
rcrl
test
mov
idiv
sub
testl
adcb
pmuludq
or
jae
dec
leave
cmc
out
fdiv
sub
push
lret
mov
jbe
leave
in
adc
sub
aad
insb
xchg
or
and
mov
test
xor
sahf
sub
pop
negb
cs
or
divl
mov
outsl
sub
cwtl
xor
shlb
pushf
add
mov
lcall
add
lret
dec
mov
add
jmp
or
daa
mov
mov
add
cmp
aam
cli
fs
das
sar
lret
jno
mov
in
out
sbb
mov
jns
mov
cwtl
jge
mov
ret
mov
mov
xorb
testl
sar
fucom
lret
out
sub
push
icebp
push
popf
xlat
inc
daa
aaa
popa
movsb
mov
or
pop
push
inc
or
inc
clc
data16
add
add
adc
mov
negb
movsl
ror
adc
lahf
leave
jo
add
sahf
stc
adc
cmp
push
das
nop
mov
mov
mov
lods
lcall
in
int3
fwait
pop
sbb
add
mov
dec
push
cli
mov
jmp
push
ljmp
cmpsb
dec
push
imul
lods
cwtl
cwtl
pop
mov
stos
cs
gs
imul
jmp
in
push
es
gs
nop
mov
sub
push
jecxz
cmpsb
push
ret
test
dec
lods
js
push
cmpb
cwtl
sub
cli
call
push
cmp
sub
ret
cwtl
jo
je
int
js
inc
lods
mov
cmpsl
and
out
or
stc
or
sub
and
xor
stc
andl
in
rcl
outsl
das
mov
jecxz
test
inc
adc
hlt
sbb
adc
mov
scas
and
cs
adc
mov
sub
mov
gs
xchg
pop
mov
clc
mov
mov
insb
mov
repz
dec
dec
jnp
cmpsl
sub
fiadds
repz
icebp
push
addr16
pop
adc
mov
not
or
jp
shrb
ffree
jae
mov
cmp
mov
iret
dec
inc
ja
cwtl
repz
xchg
test
mov
or
dec
push
pop
inc
mov
test
test
mov
mov
cld
jge
cmpsl
std
jae
mov
icebp
mov
loopne
push
mov
clc
std
adc
mov
mov
ss
arpl
fadds
hlt
les
std
add
inc
aas
push
pop
xchg
das
add
test
xchg
std
mov
addb
faddl
cmpb
jns
mov
mov
add
rolb
add
or
sbb
mov
stc
data16
dec
ljmp
movsl
push
mov
stos
push
outsb
xchg
mov
test
mov
in
stos
push
pop
stc
fisttpll
fists
xchg
dec
pop
push
out
or
mov
xchg
mov
test
mov
icebp
test
xor
xor
inc
jb
das
add
outsl
sti
mov
or
push
ficoml
aad
and
mov
outsl
addl
mov
ja
inc
or
dec
pop
icebp
mov
cltd
out
or
loopne
add
mov
mov
movq
pop
jl
xor
pop
testb
out
ret
ja
out
cmp
out
fs
mov
ja
pop
mov
push
mov
in
push
xchg
pop
incb
sbb
push
mov
ss
mov
xor
lock
lock
mov
push
sbb
stos
dec
cli
ss
imul
repz
idiv
xchg
mov
sub
pushf
mov
cs
idivb
cld
imul
test
loopne
push
mov
cld
test
mov
repnz
push
das
mov
inc
and
push
out
sub
in
popf
fsts
add
incb
cltd
fs
mov
into
aam
clc
sbb
push
xor
icebp
mov
xor
pop
repnz
pop
xor
add
stc
adc
mov
out
in
ljmp
hlt
add
xor
inc
jne
cwtl
jnp
jo
std
jb
cmc
mov
loopne
stc
sub
cli
aas
mov
aam
shrb
xor
orb
dec
lret
testl
jb
fs
adcb
and
sbb
mov
stos
mov
ds
roll
jbe
imul
sbb
jle
scas
sbb
pop
jl
sub
repz
stos
add
dec
fcmovu
push
les
mov
sub
mov
insl
cmp
lods
mov
ds
push
clc
in
mov
push
clc
and
pop
mov
sbb
mov
jp
fwait
and
popa
ja
add
fstps
imul
xchg
dec
mov
out
repz
mov
in
xchg
out
sub
cmp
push
jecxz
mov
ja
dec
jge
lcall
xchg
shl
cmc
dec
lods
enter
in
or
dec
inc
push
dec
mov
jp
mov
jge
repz
xchg
stos
mov
cmp
mov
mov
xchg
xchg
jg
lods
adc
out
ss
inc
mov
cwtl
mov
adc
xchg
dec
jg
lods
outsb
cmc
je
lahf
lret
icebp
mov
mov
inc
push
jno
pop
mov
shr
cmpb
adc
or
mov
movsb
xchg
inc
add
xchg
sbbb
daa
pop
add
test
inc
rcl
int
rcll
andl
sub
scas
mov
add
adc
rol
xor
cli
icebp
jp
std
mov
icebp
gs
xor
out
je
stos
ss
pop
testl
adc
fcmovnu
insb
imull
mov
testb
xchg
ret
pushf
or
pop
sahf
ret
pop
sub
xchg
outsb
ficompl
xor
ja
shlb
adc
lcall
insb
push
adc
jmp
movsl
sbb
and
icebp
cld
je
jmp
xor
push
clc
shl
mov
dec
mov
hlt
and
mov
loopne
xlat
mov
fnstcw
mov
cld
hlt
xor
sbb
je
daa
mov
jb
gs
adc
push
pop
std
ret
mov
movsb
outsb
mov
adc
inc
or
mov
jb
les
xchg
cs
negl
popf
fs
jecxz
cmpsb
push
mov
pop
xchg
xchg
push
sbb
rolb
lds
sbb
inc
out
push
sub
sahf
xor
rclb
mov
loopne
and
shrl
lahf
mov
xchg
dec
or
sbb
or
divb
int3
and
cwtl
cmp
rolb
es
cmc
rcrb
lock
insl
aad
pop
xchg
fbld
repz
jge
xlat
outsl
je
dec
lods
or
cmpb
push
imul
sbb
xor
push
out
jnp
ss
je
xor
sub
xchg
loop
mov
out
shrb
xchg
fs
stos
testl
clc
stos
xchg
lret
jno
divl
sbb
cld
pusha
cmp
cmp
jae
repz
push
cltd
repnz
mov
sub
xchg
mov
mov
mov
adcl
aaa
xor
loope
cmp
fcompl
xchg
lods
in
fs
mov
stos
cmp
jno
and
or
sbb
in
or
in
sub
enter
arpl
cld
bound
adc
repnz
mov
test
mov
leave
mov
gs
xchg
nop
addr16
es
faddl
cmp
adc
mov
adc
dec
movsb
mov
hlt
das
std
cwtl
out
inc
mov
and
bound
mov
mov
jo
adc
xchg
jb
sbb
jle
jo
mov
mov
out
sub
push
xchg
into
loope
adc
daa
pop
jns
call
sbbb
lock
icebp
std
mov
mov
insb
enter
sbb
adc
call
incb
fdivl
jne,pn
add
adc
or
jno
in
xlat
mov
pusha
pop
mov
mov
imul
subb
pop
mov
out
mov
cmp
dec
aam
xchg
cmp
sti
out
lret
xor
xchg
lock
out
test
xor
jp
or
jecxz
in
fs
loop
xchg
mov
mov
mov
in
ja
mov
adc
les
xchg
xchg
pusha
xchg
or
scas
fs
hlt
xchg
outsl
fists
test
cwtl
es
aaa
xchg
int3
mov
shlb
rorb
mov
enter
push
hlt
insb
aam
fcom
cmpsl
aam
mov
or
pusha
into
test
lock
test
addl
and
jno
cld
xor
pop
shlb
lret
lea
inc
xor
test
out
dec
call
pop
push
pop
xchg
dec
fcom
inc
andb
dec
mov
std
subb
nop
xlat
xor
or
lea
sti
test
jmp
int
xchg
sbb
push
test
filds
insb
cmpl
lret
cs
les
mov
jo
jecxz
or
xor
fstps
scas
add
push
in
adc
pushf
push
adc
inc
lods
test
scas
pop
rcl
cmpsb
repz
cld
xorb
cmp
jnp
xchg
and
dec
sub
stos
paddb
bound
mov
icebp
xchg
std
popf
mov
push
movsl
outsl
es
push
popf
shll
fwait
sti
pop
cld
sbb
mov
lock
cld
stos
and
sub
push
in
jmp
fsubrs
test
dec
iret
movsl
mov
mov
popf
jbe
push
or
fcoms
mov
and
movl
cmp
inc
xchg
inc
adc
ret
xor
ret
xchg
js
xchg
inc
inc
mov
ja
mov
add
xor
mov
sbb
xorl
loopne
orl
mov
testl
notb
fildll
xchg
inc
adc
icebp
mov
mov
dec
rolb
mov
cltd
subl
dec
lea
mov
mov
adc
repnz
xchg
xlat
xor
insl
outsb
mov
jmp
add
jb
pusha
adc
xchg
cmpsb
jecxz
xchg
popf
mov
xor
iret
out
or
ds
xchg
outsl
call
pushf
push
lock
fs
lret
in
mov
in
int3
mul
int
mov
rclb
cwtl
adc
dec
adc
sbb
fildll
mov
shlb
in
cmc
in
jp
inc
sbb
pop
jae
xchg
jo
mov
pop
mov
out
adc
mov
xchg
inc
xchg
mov
ret
xlat
scas
pop
iret
mov
push
sbb
sub
test
cmp
outsl
test
add
addl
arpl
jae
stc
lret
dec
nop
inc
adc
xor
xchg
pop
jns
mov
jg
aaa
ja
mov
cmpsl
inc
movsb
sub
xchg
and
jp
mov
fs
jnp,pt
sbb
adc
mov
sub
mov
add
test
push
hlt
xor
jae
call
fwait
stc
xchg
mov
cmpsb
xchg
jmp
xor
jbe
cmp
aaa
add
in
inc
jge
mov
cmp
and
in
push
cmp
cmp
filds
add
inc
and
aad
push
loope
dec
mov
adc
xchg
inc
test
jecxz
inc
movsl
pop
xchg
pop
jmp
rcr
cld
add
loopne
mov
js
outsl
dec
pop
andl
add
bound
in
jne
mov
test
in
cmp
mov
stc
movsb
loop
lock
sbb
out
int
cmpsb
stos
push
xchg
lea
dec
stc
movsb
test
or
and
cmp
xchg
inc
jo
icebp
jo
aam
or
mov
ljmp
mov
hlt
sub
and
sub
out
iret
repnz
and
test
in
mov
repnz
xor
sub
loope
jb
mov
jb
lret
mov
xorb
fcmovne
jmp
dec
std
and
push
push
ljmp
outsl
xor
xchg
or
push
shrl
std
lods
loopne
les
dec
popf
push
rolb
xor
sub
lods
push
adc
clc
mov
call
insb
pop
call
inc
test
in
jmp
leave
mov
loopne
or
jae
sub
add
mov
or
xlat
dec
in
std
mov
and
push
stos
test
les
or
repnz
xchg
cli
add
nop
mov
mov
sbb
jns
lds
xor
mov
jnp
lcall
xor
ljmp
ds
jg
shl
push
cld
nop
sbb
insl
mov
icebp
out
pop
outsl
ja
mov
fmuls
inc
mov
xlat
xorl
mov
xor
std
out
lock
and
loop
loop
xchg
and
push
out
push
inc
push
xchg
out
sub
push
sbb
mov
jbe
mov
outsl
negb
mov
lds
jge
push
cmc
or
jecxz
jge
jl
data16
insl
mov
je
inc
hlt
jo
mov
adc
add
rcrl
lret
orb
dec
lock
lcall
xchg
jg
jmp
mov
insb
mov
fdivl
and
mov
fistpll
loopne
adc
std
mov
xlat
test
push
pop
push
xchg
fwait
sub
xchg
mov
cmp
xchg
fisttpll
push
movsl
xchg
pop
enter
call
ret
loope
cmpsb
mov
pop
aam
mov
dec
lods
push
xchg
mov
dec
cmp
mov
mov
or
add
clc
pushf
out
leave
cs
lea
test
mov
fnstcw
push
cld
neg
jo
push
jae
cmc
push
dec
adc
ldmxcsr
loop
bound
das
jno
fsts
cmp
mov
testb
adc
adc
cltd
lahf
cwtl
int3
outsl
adc
cld
jg
xchg
mov
stos
mov
adc
jg
movsl
pop
outsl
and
aad
sbb
xchg
mov
mov
je
and
movsb
pop
fwait
leave
cwtl
divl
out
xorl
lods
jmp
push
jno
icebp
and
insb
xor
xchg
xchg
mov
push
lods
cmp
addr16
je
xchg
inc
cmc
push
jno
push
outsl
stos
leave
lcall
icebp
xchg
sub
push
cli
mov
lret
enter
jae
test
add
or
push
mov
loopne
outsb
xchg
jle
xchg
dec
or
ss
int
dec
jle
jo
jne
movsl
xchg
popf
jbe
cltd
push
push
outsl
add
inc
mov
mov
xor
ds
out
mov
in
add
mov
add
xchg
xchg
sbb
xchg
pop
and
xchg
test
nop
jecxz
loop
sbb
dec
leave
xorps
push
fists
adc
lret
or
pop
sbb
adc
pusha
cli
sub
xlat
sub
testb
out
mov
inc
stos
cmpsb
xchg
test
xchg
repnz
push
pop
call
popa
sti
add
sbb
sbb
jmp
xorl
fwait
lcall
xchg
popf
dec
adc
sbb
push
ss
cltd
mov
cmpsb
xor
add
in
or
jecxz
inc
mov
cmp
inc
test
add
int3
mov
adc
pop
aaa
lods
add
adc
fs
xchg
addl
push
lcall
mov
jno
sub
outsb
mov
mov
aad
popf
sub
fisubrs
adc
mov
test
call
xor
xor
loop
neg
xchg
pop
push
fnstsw
or
orl
lock
inc
jnp
add
cli
xor
push
cli
jge
aas
shlb
arpl
rcr
sub
mov
outsb
pushl
jne
sub
xchg
jb
lret
mov
jl
jno
xchg
mov
sub
jbe
xchg
pop
push
call
stc
test
pushf
cmp
add
rclb
mov
leave
mov
repz
mov
jp
pushf
xchg
add
mov
sbb
jl
pushf
lods
mov
or
xor
cli
call
test
repnz
mov
xor
xchg
iret
in
xchg
cmp
sti
add
jno
outsb
jnp
lea
xor
addl
sbb
cmpsb
and
pop
ds
push
loope
js
push
leave
hlt
mov
pop
push
cwtl
sub
in
dec
lret
negb
inc
sub
subl
mov
jae
cli
pop
cmpsl
out
mov
pop
cld
jno
mov
out
hlt
cmp
or
mov
xchg
jae
xchg
cld
adc
jge
cmp
cmpsb
repz
clc
mov
mov
mov
outsb
push
scas
mov
addr16
out
xchg
jbe
cmp
mov
hlt
fldenv
aam
lock
add
outsl
hlt
cmp
sbb
test
test
push
lock
pushl
cmpsb
pop
jp
add
nop
stos
jl
xchg
enter
lods
insl
xor
add
gs
test
mov
adc
cmpb
mov
mov
aaa
nop
std
cwtl
lock
and
rcrb
incb
in
adc
into
popf
add
jg
aaa
shr
mov
scas
jb
jmp
sbb
repnz
sub
aaa
decb
divb
xchg
inc
outsl
xor
mov
imul
jl
popf
mov
jae
repz
cmp
jae
xchg
out
push
push
inc
lea
adc
bnd
jg
xchg
rcrl
daa
jb
in
inc
mov
bound
dec
cmc
mov
repnz
cwtl
pop
loopne
xchg
push
add
repnz
jbe
sbb
lods
jae
xchg
nop
sub
mov
push
push
push
xlat
std
scas
push
cld
dec
jno
clc
addr16
mov
cmpsb
mov
sbb
addb
cmp
adc
sbbb
cmc
in
mov
in
enter
adc
cmpsl
mov
add
loop
mov
lods
popa
sub
icebp
ljmp
inc
xor
mov
icebp
jae
shlb
pop
mov
fdiv
xchg
jmp
jmp
je
aas
xchg
add
insb
adc
shl
pop
push
fs
call
push
fldenv
int3
sub
addr16
lds
cmc
in
push
pop
ds
cmpsl
icebp
add
jle
add
hlt
clc
pop
adc
add
jb
loope
sub
push
divb
clc
std
add
out
xchg
pop
cmpsb
mov
jle
mov
dec
mov
aaa
stc
shl
cmc
jne
push
cmc
cmp
lods
xchg
xchg
adc
mov
mov
dec
pushf
mov
jns
out
aad
add
lret
std
in
cld
mull
sti
arpl
sub
in
jns
stos
and
sarl
hlt
out
inc
mov
jae
movsb
lcall
sub
add
xchg
add
hlt
sbb
icebp
jmp
adc
pop
add
pop
add
or
paddsb
ja
idivb
nop
inc
xor
sbb
add
xchg
rorb
jne
push
adc
jle
idivb
xchg
repnz
mov
dec
lcall
push
mov
sbb
loopne
cwtl
jo
divb
test
xchg
jns
inc
stos
negb
adc
sbb
sub
ss
shlb
pop
push
or
out
mov
xchg
xor
fidivs
inc
xor
mov
mov
cwtl
xlat
mov
data16
or
mov
pushf
add
out
xchg
lcall
xor
push
push
dec
leave
cmp
ljmp
and
imul
cmp
and
in
es
fldenv
in
mov
call
and
loop
push
jnp
jns
stos
dec
mov
shlb
mov
jno
cmp
adc
push
xlat
mov
mov
test
xchg
iret
stc
insl
jb
in
xor
shlb
popf
jg
icebp
std
jg
xor
jb
orb
or
sub
cmp
sub
xchg
sbbb
insb
repz
std
push
add
cld
les
hlt
js
dec
leave
fdivs
hlt
xor
xchg
xchg
std
mov
icebp
cmp
js
mov
jb
cmpsb
pop
mov
decl
popf
in
mov
outsb
sarb
push
imul
mov
scas
ret
sub
pop
push
jle
push
cmpsb
cwtl
insl
aas
mov
popf
sahf
cmc
pop
inc
ja
mov
stos
xorl
xchg
mov
addb
adc
sbb
repnz
pop
faddl
sub
lret
add
out
lea
in
testb
mov
xor
mov
mov
and
mov
scas
dec
adc
lret
pop
push
lcall
sbb
lret
cmp
aam
or
mov
lock
jns
jbe
dec
addl
in
pushf
rorb
ret
jb
repnz
notb
xchg
repz
cmp
setb
mov
scas
ja
mov
out
daa
cli
ret
jmp
std
divb
call
orl
add
pop
daa
out
outsb
mov
jnp
lock
int3
int3
mov
push
sbb
and
popf
orb
inc
inc
jae
jbe
pop
push
mov
idiv
add
loop
cmp
mov
es
dec
pop
mov
repnz
lcall
jl
and
in
ret
mov
loop
imul
mov
icebp
cli
repz
lcall
xchg
imul
iret
push
daa
jle
shlb
cmpsb
mov
bound
ffreep
clc
popf
jo
loopne
cmpsl
push
sub
les
cwtl
xlat
xchg
lcall
xor
es
arpl
mov
sbb
pop
push
mov
sub
push
cld
xchg
dec
test
std
cmc
adc
flds
mov
jmp
insl
stos
ds
hlt
cld
mov
fstpl
jb
or
les
negb
jne
insl
sarb
or
fwait
nop
clc
xchg
pop
leave
pop
les
rcrb
mov
jbe
inc
jbe
mov
xchg
test
pop
hlt
addl
stc
mov
jno
inc
dec
aaa
or
push
jge
mov
div
sbb
xor
int3
mov
inc
inc
jo
into
in
movsb
stc
icebp
jl
rorb
cwtl
dec
sub
add
repnz
outsl
out
mov
or
iret
call
push
std
adc
mov
jno
ljmp
jmp
ret
inc
rcrl
ljmp
xchg
gs
test
sbb
jmp
dec
fisubl
orl
or
movb
push
scas
mov
dec
divl
pop
lahf
mov
adc
aaa
imul
cmp
pop
push
call
imul
add
or
loopne
and
insb
dec
stos
sub
loop
ret
push
icebp
fwait
mov
jae
setle
repz
popa
mov
sbb
movsb
xor
mov
mov
lcall
out
mov
jo
gs
lea
jle
incb
pop
rcll
imul
loop
pop
jno
rorb
int3
adc
jle
cli
testl
std
jge
repnz
in
movsl
xchg
mov
insb
xor
insl
xchg
jl
add
cmp
pop
mov
orb
movsl
add
xchg
add
ja
jae
mov
lods
fmull
insl
test
adc
nop
je
or
or
shl
sbb
fcomps
out
imul
in
loopne
dec
fldl
in
inc
mov
in
loopne
scas
sub
lock
repnz
in
enter
in
pop
lock
rclb
pop
mov
sub
std
push
mov
and
mov
nop
stc
xchg
cmc
cmpsb
mov
inc
loope
mov
lods
xor
icebp
xchg
int
xor
cs
mov
or
cld
cmp
pop
jg
outsl
push
or
cmc
xchg
cmc
jg
jge,pt
mov
cmp
out
dec
lods
scas
in
std
or
outsl
or
xchg
lea
jnp
idiv
ljmp
mov
xorl
cmp
dec
xchg
jecxz
and
popl
adc
jge
repz
out
mov
stc
pop
in
leave
stc
jae
cld
push
out
mov
mov
jnp
loope
add
sub
js
repz
cmpsb
xchg
bound
xchg
sub
or
sub
jecxz
adc
imull
mov
cmp
lock
xor
jg
out
inc
sub
jo
dec
mov
icebp
test
jg
mov
dec
pop
faddl
mov
or
jge
lret
push
push
or
mov
arpl
les
inc
mov
or
insb
jbe
test
stos
adc
jno
loop
push
push
mov
mov
jne
inc
mov
test
mov
lock
push
sbbb
and
lock
in
and
inc
data16
xchg
inc
shl
jo
movsb
in
mov
ror
cmpl
mov
ret
push
mov
jle
les
hlt
jae
inc
sbb
jae
xchg
ds
bound
cmp
shl
cwtl
shlb
pop
ret
test
jecxz
mov
add
adc
xor
push
mov
mov
sub
sbb
add
loop
inc
lret
mov
cwtl
or
mov
notb
sbb
gs
and
aaa
or
icebp
mov
fs
dec
insb
cmpsl
daa
rcll
or
or
lods
xor
shl
lods
dec
adc
lea
aaa
mov
jb
push
mov
adc
jmp
btr
orl
in
inc
xchg
repz
cmp
pop
push
ret
popf
xchg
addl
mov
sbb
cli
mov
push
loopne
push
cld
lret
insb
jmp
pop
lret
lods
inc
cld
decl
fld
adcb
enter
mov
movsb
nop
mov
imulb
scas
hlt
repnz
or
cmp
lret
subb
sub
ljmp
test
faddl
mov
or
scas
mov
jno
mov
jbe
mov
sub
cmpsb
sub
negb
xchg
in
xor
cwtl
clc
je
stos
cmp
jmp
and
inc
stos
pop
cmp
inc
sub
or
shll
mov
notb
mov
xchg
cmp
enter
aas
mov
stos
fninit
popf
sub
sub
dec
xchg
je
jecxz
pcmpeqw
xchg
les
int
xchg
push
mov
incb
push
pop
clc
loopne
loopne
mov
xlat
mov
insl
mov
stos
cmpsl
cwtl
mov
sub
data16
rorb
cmp
pop
in
adc
cmp
xchg
cwtl
mov
subb
push
lret
cmp
mov
inc
push
cltd
mov
shrb
xorl
xchg
xor
add
add
xor
sub
add
dec
pop
lea
mov
xchg
test
iret
add
pusha
mov
loope
add
roll
stc
testb
inc
insb
sbbl
movsb
jl
es
xchg
hlt
fadds
add
push
test
stos
inc
or
js
clc
adc
lock
pop
or
mov
es
fs
inc
lahf
or
xorb
cmp
push
mov
btc
jecxz
ljmp
jno
popf
enter
dec
sbb
clc
das
repz
mov
jno
loope
lahf
lock
cmp
mov
mov
adc
push
loopne
pop
rol
add
add
fwait
in
sbb
fistpll
andl
cmp
or
sti
pop
in
mov
jg
inc
pop
rclb
dec
rorb
xor
xchg
rclb
push
and
out
or
mov
xchg
orl
xchg
sti
pop
imul
add
xor
and
gs
outsl
and
fwait
or
loop
flds
std
inc
push
je
adc
mov
or
mov
test
dec
pop
adc
or
mov
xchg
into
xchg
adcl
repnz
add
dec
push
outsl
jne
mov
cmp
sub
insb
xchg
lahf
push
dec
repnz
cld
jl
push
in
shlb
fildl
mov
movsb
in
mov
gs
enter
push
fstpl
ret
ja
std
xchg
mov
cmp
push
pop
sub
test
xorb
mov
add
fs
and
pop
orb
add
sbb
in
mov
cmpsb
cltd
scas
mov
in
lret
adc
out
imul
repz
imulb
fistps
in
sarb
das
mov
cmp
das
pop
lea
addb
clc
xchg
mov
mov
in
pop
popl
orb
xchg
stos
mov
ds
mov
subb
push
js
lods
fs
xor
test
mov
imul
into
jg
call
scas
scas
push
aaa
pushf
in
push
ret
ja
mov
mov
loope
repz
adc
nop
mov
out
cmc
add
xchg
xor
mov
imul
test
mov
mov
ds
rorb
mov
int
push
mov
mov
mov
fisubrs
or
roll
mov
xchg
rcl
xchg
int
adc
out
jno
ss
sub
stos
mov
inc
pop
arpl
xchg
xor
inc
mov
flds
cmp
test
mov
cmp
movsb
mov
add
pop
adc
repnz
test
cli
rcr
xor
aaa
inc
mov
mov
in
mov
xchg
aaa
ret
mov
rcl
sub
sub
adc
inc
xor
test
mov
rolb
push
daa
pop
adc
repz
das
mov
les
jbe
lock
cld
mov
iret
shrb
pop
test
add
xor
sub
sub
lds
repnz
in
hlt
xchg
mov
clc
iret
imull
std
xchg
inc
sarb
sub
mov
xor
jno
fs
loop
in
ljmp
mov
xchg
mov
mov
cld
pushf
xchg
add
iret
arpl
mov
test
jecxz
dec
cmp
scas
jne
call
rorb
jle
das
out
mov
xor
mov
enter
mov
test
mov
or
cmp
push
sbb
mov
imul
shll
xor
mov
mov
popf
jae
adc
mov
dec
mov
int3
adc
jp
mov
mov
inc
mov
movl
lahf
mov
mov
dec
mov
jb
adc
mov
daa
cmc
jg
rolb
mov
mov
jnp
jae
dec
leave
xchg
xor
fistpll
mov
adc
adc
imul
scas
repnz
xchg
xor
data16
adc
shl
mov
xchg
das
xchg
dec
or
cmp
mov
mov
cmp
inc
repnz
pop
repnz
das
int
jg
negb
dec
mov
cltd
lret
mov
xchg
clc
cld
ss
lock
imul
cld
or
test
fstpt
adc
or
mov
xchg
push
mov
inc
mov
aad
inc
out
push
dec
cld
adc
stc
mov
pop
clc
push
stc
call
rorl
jmp
mov
stc
imul
adc
mov
ret
and
mov
dec
cmpsb
movsb
es
jo
mov
call
push
xchg
das
mov
faddl
cltd
ficoml
enter
repnz
out
add
testb
in
mov
loopne
mov
sub
jnp
iret
adc
lcall
sub
push
fwait
negl
in
loope
fwait
inc
popf
inc
pop
mov
je
cmp
out
or
repnz
clc
out
xor
adcl
mov
cld
out
je
jae
outsb
mov
lock
scas
jbe
cld
imul
dec
out
insb
and
push
sbb
inc
negl
jbe
xor
int3
xor
jo
cltd
jne
or
push
cmpsb
sarb
call
into
outsl
je
rcrl
cltd
clc
pushf
mov
pop
fdivrs
mov
jno
idivb
lock
adc
int3
outsl
sbb
shl
mov
rcrb
shl
movsl
sar
adc
and
incb
popa
fsubrs
jno
pop
pop
nop
mov
mov
mov
insl
add
adc
lahf
fstpt
adc
cli
andb
cs
lods
stos
int3
ss
cmp
push
mov
mov
sub
mov
insl
pop
jno
clc
and
fdiv
push
ljmp
dec
mov
and
xchg
jecxz
aad
dec
test
leave
sub
popf
cmp
add
incb
push
inc
pop
rolb
je
jo
add
pop
sbb
cmpsb
in
and
ret
aaa
xchg
jo
out
xor
lock
jno
loope
adc
jo
addb
lea
inc
lahf
outsb
dec
mov
sub
outsl
add
lret
pop
push
dec
mov
ret
stc
sbb
out
cld
mov
add
enter
stos
insb
stos
adc
addr16
inc
mov
xor
ucomiss
cmp
ret
mov
mov
movsb
mov
cmc
mov
jmp
adc
cwtl
push
in
inc
loop
dec
imul
icebp
cltd
movsb
mov
push
aas
mov
xor
sti
ja
std
mov
push
imul
test
jo
dec
jo
add
jae
inc
in
mov
std
xchg
test
push
movsb
out
insl
cmp
mov
mov
xchg
aaa
repnz
ja
pop
lock
xchg
push
mov
in
sub
xchg
mov
dec
stos
and
xchg
push
inc
mov
jg
icebp
jns
jae
jae
repz
nop
hlt
das
xchg
add
pop
pushf
outsb
jp
push
mov
cmpsb
pop
dec
pop
imul
jae,pn
frndint
and
outsl
jb
push
jl
imul
sbb
lds
mov
outsl
inc
rolb
popa
lods
rcl
cmp
insb
andb
and
hlt
xchg
inc
push
sub
mull
cltd
addb
sahf
add
mov
or
fistpll
mov
dec
xchg
mov
std
mov
les
bound
sti
rcl
mov
cmpsb
jp
mov
mov
push
mov
div
adc
dec
test
repz
call
test
or
in
jnp
cmpsb
add
test
mov
repnz
insl
andb
jns
fsubrl
sahf
add
dec
push
add
mov
mov
dec
mov
push
inc
jp
fiaddl
mov
insl
test
pop
adc
outsl
xchg
outsl
jae
insb
push
hlt
mov
xchg
outsb
fcomp
dec
insl
fadd
scas
sub
cld
pop
xchg
outsl
rcrl
outsb
cwtl
xchg
lahf
push
or
mov
loopne
cwtl
and
mov
pushf
xchg
push
xchg
sub
jge
xchg
cli
std
movsl
hlt
push
in
inc
cmpsl
ljmp
ja
xchg
ficoms
adc
jno
fwait
jae
dec
lock
ja
mov
stos
bound
out
jg
add
sahf
or
add
mov
push
lock
andb
xchg
mov
andb
sbb
mov
js
pop
add
pop
fs
outsb
pushl
lock
hlt
pop
mov
xchg
mul
clc
mov
xchg
not
inc
nop
cld
or
inc
call
loop
xor
xchg
push
add
dec
je
int
leave
mov
adc
test
sbb
dec
cmp
mov
insl
call
je
dec
rcrl
sbb
jae
mov
and
dec
xchg
pop
je
or
lret
add
xchg
mov
pop
add
xchg
add
notb
jno
mov
pop
iret
sbb
pop
lods
icebp
push
cmpsb
add
daa
jne
sbb
adc
mov
cmp
sti
pop
dec
jecxz
ret
push
call
sbb
fs
jno
sbb
mov
adc
cmp
iret
mov
mov
xchg
popf
testl
push
repnz
xor
cwtl
repz
mov
xchg
sub
lea
xchg
movsb
fbstp
fldl
cld
orl
gs
push
pop
add
out
int
test
cli
or
and
sbb
cmp
jp
jecxz
int3
test
div
cmpsb
dec
sbb
mov
lods
ret
add
repz
xchg
aam
int
pushl
jl
popf
adc
jmp
xlat
inc
aas
mov
faddl
pushf
inc
and
jno
mov
inc
xorl
xorl
icebp
push
negb
rorb
ds
dec
ja
out
push
cmp
and
jns
jmp
mov
orl
inc
sarb
das
std
repz
js
repnz
je
fstpl
lcall
out
out
add
xchg
pop
xor
rcll
mov
into
in
mov
rcrl
mov
add
mov
mov
xchg
xchg
lahf
in
stc
jns
test
arpl
mov
insl
es
pop
shlb
push
inc
call
inc
arpl
test
dec
inc
insb
mov
xlat
adc
insl
push
jp
push
test
sbb
clc
stc
mov
mov
repnz
jno
xor
mov
xor
mov
xor
push
ss
repz
mov
cs
icebp
jl
sub
jae
fdivl
fsubs
cmp
stc
jl
or
lret
adc
cmc
loope
push
and
fdiv
stc
insl
xorl
jns
jae
cmpb
outsb
dec
xchg
sarl
adc
jle
and
jnp
jle
push
ljmp
lcall
repz
xchg
in
in
sbb
jo
sbb
pop
pop
mov
mov
cmp
in
and
or
out
sbb
mov
xchg
push
mov
enter
ss
clc
dec
mov
insl
movsb
hlt
ds
aad
add
mov
movsb
das
sbb
ret
xchg
adc
xchg
sbb
fldenv
xorb
xor
mov
stos
mov
xorb
insl
popa
mov
add
insl
cld
mov
mov
mov
repnz
adc
mov
xchg
add
subb
test
inc
mov
dec
cwtl
cmp
dec
xchg
iret
dec
outsl
inc
push
pushf
sbb
xchg
cmp
mov
gs
cmpsl
jb
lret
fcoms
subb
int3
out
mov
jmp
push
cmc
add
xchg
lock
movsb
andb
sbb
lea
movsb
mov
das
repz
push
xchg
adc
and
into
pop
lock
adc
addb
jecxz
sbb
dec
dec
mov
push
cld
adc
sbb
xchg
jnp
xchg
lcall
mov
test
and
or
push
sub
jno
fists
jbe
fs
stc
cmp
gs
jg
test
xor
add
out
jae
ja
and
and
cmc
fbld
imull
cltd
inc
fwait
scas
fisubl
sti
test
cmpsl
mov
icebp
push
mov
fsubr
stc
push
push
and
ss
push
xchg
mov
in
icebp
ljmp
dec
mov
int
jecxz
mov
mov
mov
pop
cmp
xor
fnstcw
negb
fcomps
stc
sub
das
cwtl
jle
repz
clc
ret
adc
jns
repnz
insb
sbb
cld
xor
xor
jo
cli
inc
xchg
or
mov
mov
in
fwait
sub
jg
enter
push
das
sbb
sbb
push
stos
pop
clc
sarb
es
or
push
lret
icebp
popf
stc
fcmovu
andl
fwait
shrl
cli
jg
and
adc
scas
lcall
jge
mov
int
mov
orb
scas
ds
bound
popa
sub
jo
fmull
in
fs
or
sbb
pop
mov
push
jl
jmp
adc
fbstp
xor
lahf
push
cmp
outsl
repnz
out
xchg
jae
in
in
jle
sub
sbb
idivb
ret
jae
sbb
test
lret
push
out
jl
frstor
jmp
ret
jne
pop
jnp
test
clc
test
scas
sbb
fwait
iret
arpl
jge
sbb
cmpsl
jae
std
dec
push
adc
mov
push
xchg
outsl
lret
repnz
lcall
dec
jne
imul
cmp
cltd
mov
call
mov
dec
lock
cmc
js
add
or
pop
jge
in
mov
adc
std
inc
test
jecxz
xchg
cmp
xchg
pushf
mov
mov
movl
sbb
inc
or
jge
movsb
add
cli
mov
stc
lock
mov
cmp
inc
aam
movsb
movsb
orb
sub
test
decb
mov
and
test
sbbb
ret
jmp
loop
dec
fadds
add
arpl
mov
mov
sub
int3
mov
cmp
add
xchg
jno
jg
pop
call
sub
stos
lahf
inc
rcrb
jns
cs
stc
rol
ss
mov
cmpsb
notl
push
inc
jae
xchg
or
inc
xchg
dec
xor
jnp
sbb
sbbl
push
push
imul
outsl
std
inc
sbb
cld
ror
out
inc
pop
nop
xchg
pop
cwtl
out
xchg
mov
insb
test
xchg
xor
mov
arpl
adc
and
out
pop
clc
enter
and
imul
ja
andl
mov
xchg
xor
add
mov
mov
jb
mov
jb
sbb
sar
lahf
cld
outsl
mov
daa
mov
mov
sbb
jo
jb
stos
xchg
sub
xchg
add
adc
pop
outsl
inc
clc
mov
out
push
loop
rorb
and
mov
popf
lahf
inc
test
push
inc
mov
lds
jle
add
mov
fidivl
orl
sti
shll
sub
adc
cld
xchg
imul
dec
cmp
and
rorl
dec
lcall
sub
xor
aam
inc
dec
addr16
dec
add
adcb
sbb
jg
xchg
sub
ja
sti
test
xchg
adc
mov
lcall
mov
shl
es
xlat
jae
jecxz
lret
push
lret
push
iret
sarb
lahf
cltd
mov
push
push
xor
xchg
out
ja
repz
stos
repz
xchg
xor
fcom
das
or
outsl
adc
mov
scas
je
jno
jae
xchg
or
stos
sti
xchg
xrelease
push
jno
std
stos
bound
stos
shlb
xchg
test
jg
mov
icebp
and
les
lcall
popa
std
sub
addr16
repz
add
sarb
cmp
popa
mov
xor
es
test
xchg
out
and
mov
stos
icebp
stos
les
cld
icebp
jb
insl
loopne
outsb
push
cs
vpackuswb
mov
adc
testb
sub
je
pop
xor
imul
add
jbe
lods
mov
add
jno
in
enter
sub
faddl
push
ret
xchg
stos
push
movsl
xor
xlat
cld
add
cmp
testl
mov
loopne
sub
rorb
push
dec
stos
cmpsl
jo
push
adc
mov
push
dec
movsb
and
aam
rclb
pusha
test
xchg
sbb
nop
jb
xchg
shrb
gs
mov
xor
adc
sbb
jae
adc
jns
mov
sar
outsl
and
ret
gs
imul
incb
or
mov
aam
fnstsw
loopne
or
push
ljmp
repz
test
testl
xor
outsl
cmp
repnz
pop
inc
out
xchg
xchg
xor
push
jl
mov
aaa
out
xorl
in
int3
xchg
test
add
cmpsb
fucomi
cmc
sti
push
add
mov
lcall
fstpt
int3
sub
mov
xchg
enter
loopne
in
mov
je
xor
aad
sub
xchg
test
cwtl
mov
mov
sub
shl
sbb
pop
xchg
outsb
jno
fcmovnb
xchg
dec
mov
inc
test
jmp
inc
mov
cmpsb
aaa
movsb
jmp
pushf
negl
jp
ret
mov
xchg
aaa
addb
sub
movsb
hlt
imul
lret
xor
lock
xor
imulb
pushw
push
clc
fdivr
mov
sbb
out
fwait
ja
jge
xorb
mov
jg
ja
mov
xor
filds
in
insl
or
idivb
imul
andb
out
cmpsb
ja
jge
xorb
mov
jg
ja
mov
xor
filds
in
cli
push
idivb
xlat
imul
movl
adc
mov
add
lods
mov
xor
filds
cld
sub
mov
sub
adc
mov
adc
les
nop
mov
test
mull
rclb
mov
incb
nop
hlt
das
stos
repnz
xchg
jmp
idivb
pop
add
adc
data16
les
nop
mov
sbb
lods
mov
mull
rclb
mov
incb
nop
hlt
das
xchg
repnz
xchg
imul
sbb
int3
adc
data16
les
nop
mov
xchg
repnz
mov
mull
rclb
mov
incb
nop
hlt
das
daa
repnz
xchg
ljmp
nop
pop
add
adc
data16
les
nop
mov
repnz
mov
mull
rclb
mov
incb
nop
hlt
das
mov
mov
imul
mov
mov
inc
xchg
add
repnz
mov
mull
rclb
mov
lea
mov
push
and
xchg
xchg
test
subl
popa
fs
xchg
pop
pop
push
adc
clc
push
pop
pop
push
adc
jle
pop
jbe
outsl
imulb
pcmpgtd
pop
negb
orps
dec
testb
inc
lock
idivb
aaa
xchg
bound
push
xchg
push
xchg
dec
xchg
dec
xchg
inc
xchg
inc
xchg
cmp
xor
and
sbb
or
add
jae
jb
lods
fisubrs
bswap
push
iret
pop
iret
push
iret
jg
jle
ja
jbe
outsl
lahf
outsb
lahf
addr16
data16
pop
lahf
pop
lahf
push
lahf
push
pop
dec
hlt
sub
pop
ds
aaa
pop
ss
das
pop
cs
daa
xchg
pushf
dec
fisubrs
in
in
fmull
les
leave
lods
mov
hlt
cld
in
insl
in
fdivrl
mov
imul
pop
test
push
mov
test
add
das
loope
cld
push
std
push
push
pop
jl
rclb
cli
push
jb
dec
cwtl
add
std
jo
scas
add
daa
mov
add
movsb
push
push
into
lds
jge
xor
loop
cmpsb
enter
mov
iret
scas
xor
mov
cmpsb
fwait
sbb
or
repz
scas
or
push
fucomp
add
imul
mov
movsl
andb
in
imul
testl
sbbl
repz
xlat
daa
cmp
sbb
outsl
ret
sub
repz
addl
in
sub
xlat
std
clc
hlt
addb
aaa
icebp
mov
sbb
insl
and
mov
adc
pop
in
dec
inc
sti
add
hlt
sub
lret
push
nop
pushf
scas
jns
add
stc
inc
lahf
sahf
cmp
xchg
push
mov
andl
fwait
fwait
repnz
adcl
mov
and
add
mov
lret
jbe
insb
fcoms
aas
jno
jmp
test
fnstsw
test
bound
and
mov
testb
jae
pop
dec
xor
out
adcb
repz
testl
out
neg
insl
aam
nop
int3
les
fcomp
mov
cld
aaa
hlt
xchg
loop
das
aaa
stos
xor
push
ljmp
ror
adc
push
aaa
lods
xor
push
ljmp
ror
adc
test
xor
push
ljmp
ror
adc
push
aaa
lods
xor
push
ljmp
ror
nop
insb
xor
popf
ljmp
ror
adc
push
aaa
lods
xor
push
ljmp
ror
adc
push
aaa
jmp
jp
int
out
aaa
lods
xor
push
ljmp
ror
adc
push
aaa
lods
xor
xchg
imul
filds
aaa
lods
xor
push
ljmp
ror
adc
push
aaa
lods
xor
push
ljmp
ljmp
ljmp
ror
adc
push
aaa
lods
xor
push
ljmp
ror
nop
push
rcrb
adc
push
aaa
lods
xor
push
ljmp
rorb
cli
loopne
negl
xchg
push
add
outsb
mov
pusha
dec
sub
testb
adc
sbb
loopne
xor
cld
shlb
daa
inc
or
push
mov
mov
rclb
test
imul
cmp
mov
nop
clc
ljmp
push
ja
popf
fcomps
xchg
enter
sar
ja
mov
int3
nop
test
mov
negl
or
adc
aam
adc
push
js
sub
cwtl
ja
fisttps
adc
mov
shlb
dec
and
ror
mov
mov
imull
or
xchg
cwtl
mulb
decb
int3
nop
clc
das
cltd
jae
or
adc
aam
adc
stos
xor
sub
sar
es
enter
ror
mov
mov
imull
or
xchg
cwtl
mulb
decb
int3
nop
clc
das
xchg
jae
or
adc
jmp
bound
movl
pop
nop
shrb
mov
jg
ja
mov
stos
xor
sub
mov
jg
ja
mov
adc
call
loopne
push
idiv
mov
ror
nop
enter
shrb
cmp
imull
jmp
testb
nop
data16
mov
nop
clc
das
lcall
ljmp
testb
stos
xor
out
or
jge
cmpb
mov
test
mov
mov
stos
xor
data16
clc
vphaddbw
push
outsb
push
loopne
mov
or
enter
sarb
mov
sub
jmp
sti
mov
addb
push
mov
jle
ja
jbe
outsl
outsb
scas
repnz
pop
push
scas
push
repnz
dec
incb
inc
repnz
ds
aaa
scas
ss
in
leave
iret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andb
mov
mov
pushf
insl
ja
jbe
outsl
xchg
outsb
xchg
addr16
xchg
pop
xchg
pop
xchg
push
xchg
push
xchg
dec
xchg
dec
xchg
inc
xchg
inc
xchg
aas
xchg
ds
aaa
xchg
ss
das
xchg
cs
daa
xchg
es
pop
xchg
push
xchg
pop
xchg
push
xchg
sete
push
mov
lret
dec
jno
mov
push
fmul
les
pop
test
push
test
dec
test
inc
test
nop
inc
sti
mov
in
popa
repnz
jno
hlt
in
cmc
shll
mulb
add
jno
mov
pop
mov
sub
dec
xchg
insb
sbb
push
pop
lret
adcl
lock
adc
in
ljmp
jne
mov
xorb
sbb
sub
rdpmc
stos
cmp
clc
jecxz
subl
inc
ret
mov
insb
iret
daa
add
out
dec
hlt
mov
inc
inc
fisubrs
sbb
das
lret
mov
icebp
sbb
or
andb
xor
xchg
repnz
std
xor
andb
cmp
inc
scas
jno
daa
fdivrs
xchg
in
xor
push
fsubl
notl
call
dec
sub
movsb
leave
xor
mov
mov
mov
mov
mov
std
add
jbe
sbb
out
jmp
pop
mov
js
fnstsw
loopne
out
cmp
add
repz
loop
adc
js
pop
fidivs
xchg
mov
movsb
mov
divl
repnz
mov
lret
in
ret
filds
nop
cmpsb
out
cmp
hlt
popf
orb
or
pop
jmp
xor
ss
push
sbb
enter
and
fsubs
xchg
daa
clc
sub
fcom
jae
aaa
enter
mov
mov
aaa
mov
adcb
test
xor
push
ljmp
ror
adc
push
aaa
lods
xor
push
ljmp
ror
adc
subb
jp
int
out
aaa
lods
xor
push
ljmp
ror
adc
push
aaa
lods
xor
jp
int3
adc
push
aaa
lods
xor
push
ljmp
ror
adc
push
aaa
lods
xor
push
call
imul
ja
xor
push
ljmp
ror
adc
push
aaa
lods
xor
push
ljmp
shlb
ljmp
jp
int
out
aaa
lods
xor
push
ljmp
ror
adc
subb
addr16
int
out
aaa
lods
xor
inc
out
ds
outsb
repz
lock
popa
outsb
mov
testb
mov
clc
pushl
aad
jbe
je
xor
in
xchg
push
repz
movsl
inc
push
mov
sub
jg
cmp
add
xchg
add
sbb
or
insb
inc
js
lock
mov
hlt
ret
mov
data16
pop
shrl
clc
adc
xchg
cmp
mov
clc
push
jae
outsb
popa
pushf
inc
cmpsb
xchg
xchg
jns
stos
rorl
fcomi
mov
mov
das
ds
fistps
mov
inc
int
out
mov
stc
das
mov
rorb
mov
int3
outsl
adc
roll
add
mov
mov
ds
pop
cwtl
lret
xchg
inc
mov
mov
sub
shrb
mov
daa
jl
jmp
cld
or
clc
cld
sub
mov
xchg
add
cli
xor
mov
inc
xorb
aas
add
cmp
stc
adc
or
pop
cld
test
sbb
dec
dec
inc
popf
stos
jecxz
jg
jecxz
das
cmp
out
push
icebp
or
lds
pop
pop
fsubrp
dec
stos
int3
enter
stos
sahf
mov
setbe
mov
icebp
pop
rcr
stos
imul
mov
mov
scas
rcr
repnz
divb
test
lea
pop
and
jo
in
adc
mov
mov
sbbl
dec
ret
add
es
lcall
xorl
mov
mov
sbb
into
cmc
cld
popf
jno
je
je
mov
clc
add
add
cmp
nop
push
ret
insl
push
enter
cmpb
scas
call
cltd
fwait
je
clc
mov
or
xchg
pop
fxtract
inc
test
xchg
adc
and
shrb
or
and
jp
lock
pop
xor
cli
or
pop
fs
sub
std
sub
or
adc
call
divb
mov
push
sbb
push
xor
and
xchg
cmpsb
pop
insb
xchg
add
sbb
xchg
jb
fildl
push
shlb
testl
xor
jg
lret
imul
out
xchg
and
clc
into
aaa
jge
std
shll
loopne
pop
adc
test
xlat
sti
ret
fdivr
aam
jnp
push
cld
dec
jae
movsl
sbb
jb
jl
adc
inc
jl
inc
add
mov
dec
repz
add
add
mov
insb
test
int
test
adc
lahf
mov
repz
cltd
mov
mov
call
jl
insl
mov
jl
mov
decl
xchg
adc
scas
fxsave
add
enter
lret
ror
push
subl
add
gs
and
mov
ja
mov
div
popf
xchg
int3
stos
lock
repz
imul
in
jnp
pop
andb
icebp
xor
mov
aaa
adc
dec
xchg
push
inc
push
xchg
xchg
cli
cmpsl
div
outsl
inc
cmp
xchg
stc
pop
aad
jnp
je
mov
push
dec
je
add
das
enter
mov
shll
xor
push
adc
inc
mov
jl
mov
outsl
fdivs
xchg
fcoml
jp
icebp
sbb
lcall
mov
loopne
cwtl
sub
repnz
sub
stos
arpl
rolb
lcall
xchg
jecxz
in
daa
adc
scas
cmc
adc
ljmp
jbe
mov
ret
mov
clc
std
xchg
jne
jg
notb
lods
mov
mov
cmp
sub
clc
cs
mov
imul
out
enter
cmc
jg
sti
push
add
shrb
xor
jp
add
filds
outsl
imul
xchg
outsl
test
in
xor
test
jns
out
and
outsl
add
loopne
test
adc
mov
xchg
pusha
adc
sub
out
mov
mov
test
out
inc
sbb
repz
dec
ljmp
and
pushf
and
xor
push
test
fildll
in
repz
nop
pop
mov
or
add
xchg
xchg
xchg
jo
outsl
mov
xor
jo
or
jae
cld
scas
add
aas
or
lock
dec
daa
xlat
cwtl
dec
mov
js
pause
ljmp
imul
lahf
lds
mov
adc
xor
and
xchg
rcl
and
sbb
inc
adc
dec
lock
adc
call
mov
repnz
jno
jo
mov
xor
or
dec
xchg
add
repnz
cmp
jns
jno
out
idiv
icebp
lds
jp
push
lret
aaa
cmp
push
int3
js
icebp
sarb
xchg
mov
adc
mov
and
cmp
mov
add
and
cmp
gs
cmp
jb
xor
daa
pusha
je
jmp
jb
repnz
cmp
pop
xor
xchg
pop
lcall
cmp
jb,pn
mov
test
es
lret
into
clc
fadds
cmp
add
repnz
xchg
xchg
and
les
and
rcll
sub
roll
bnd
jae
lods
repnz
aaa
popa
jle
shlb
jl
jae
cld
shrl
js
mov
out
addr16
jae
jmp
mov
xor
jae
xchg
sbb
cmp
adc
mov
add
jae
jg
add
jae
fsubl
mov
and
cmpsb
out
repz
pop
pusha
loopne
pushl
movsb
jg
xchg
and
das
jns
mov
aaa
mov
add
in
cld
sub
mov
or
je
jb
in
inc
testb
je
xchg
xchg
repnz
test
repnz
inc
and
cs
cmp
xchg
je
jo
dec
subl
nop
sbb
and
cmpsb
repnz
xor
mov
test
int
add
hlt
loopne
ljmp
movsb
inc
mov
sub
int3
lahf
pop
jns
hlt
jg
mov
in
mov
mov
add
neg
ret
ja
sbb
mov
xchg
mov
xorb
jg
add
hlt
lret
test
jg
add
imul
adc
daa
push
xor
lahf
hlt
jno
jne
loop
fucomp
add
mov
jp
in
test
cmpsb
adc
int3
into
call
cld
mov
push
push
add
cmc
cmpsb
jo
lock
cmpsb
mov
add
outsl
cmpsb
sarb
lock
jg
jle
sub
jbe
sub
div
mov
mov
xor
xchg
in
pop
cmpsl
in
and
dec
xchg
test
icebp
xchg
cld
fdivl
shrb
push
pop
data16
push
inc
jno
or
int3
loopne
popf
push
cltd
cmp
mov
mov
mov
enter
sti
loop
lea
cld
dec
lret
mov
andb
loop
xchg
int3
in
pop
lea
xchg
int
ret
jl
popf
dec
aas
pop
dec
outsl
xchg
jl
outsl
mov
repnz
adc
dec
fildl
pusha
mov
push
stc
aaa
push
gs
subb
filds
rorl
mov
fwait
xor
mov
repnz
push
and
xchg
mov
jg
insb
out
inc
movsb
push
cmp
mov
daa
and
aam
clc
in
cmpsl
inc
jae
fnstcw
jno,pn
push
test
testl
push
lret
sub
or
mov
out
sbb
and
bound
mov
cld
sarb
std
push
clc
push
push
repnz
inc
std
xchg
sbb
mov
loop
scas
jns
inc
sub
cmp
jmp
out
cmp
sbbl
std
push
stc
shlb
or
in
rclb
imul
cmc
push
push
mov
je
pop
mov
pop
cmp
sub
sbb
daa
lcall
movsb
lcall
push
inc
clc
inc
pop
faddl
or
repz
pop
movsb
or
fdivl
xchg
xor
icebp
je
adc
lret
std
cmp
jl
jbe
or
nop
sti
pusha
lock
jnp
in
loopne
out
cmp
cmp
je
notb
xchg
or
cmc
addr16
sti
rclb
add
cwtl
jno
cmp
imul
ss
je
bound
ljmp
je
icebp
jp
stos
jnp
inc
push
sub
xor
push
insb
or
mov
fcmovne
in
mov
je
xorl
sarb
sub
mov
fidivs
mov
aam
cs
and
je
std
je
dec
loop
xor
fnstsw
and
and
stc
dec
jbe
and
mov
fistl
pop
inc
inc
shlb
and
inc
xor
adc
lock
mov
and
jns
test
push
fcoml
mov
cmp
leave
inc
nop
jae
cmc
push
stos
dec
cli
jmp
adcb
outsb
insb
imul
mov
mov
sbb
cmp
ret
cmp
xorl
ja
adc
mov
xchg
add
stc
xchg
scas
scas
std
adc
dec
sbb
jl
and
cltd
lock
lods
jo
jmp
mov
addb
push
inc
jle
icebp
mov
add
add
jnp
icebp
jne
cld
pop
adc
xor
xor
hlt
repz
repz
and
aad
in
icebp
mov
repz
jmp
mov
fcoml
adc
mov
out
and
rcrb
bound
seto
clc
xchg
pop
aad
out
jle
and
dec
sbb
pushf
jnp
mov
fcmovnb
addl
out
jge
ret
sub
hlt
jg
mov
inc
iret
cmp
xchg
out
fidivrs
lock
ret
lret
cmc
iret
mov
adc
push
aaa
bound
jnp
out
lret
pop
stos
stos
aaa
stos
xchg
testb
mov
cld
dec
inc
test
pop
inc
cld
imul
pusha
movsb
push
or
and
ret
test
dec
cltd
enter
rcrb
sub
cld
sub
in
mov
xchg
cld
incl
adc
lock
push
sub
xchg
decb
mov
sarb
roll
jno
mov
psllw
mov
pop
loopne
mov
push
decl
cld
xchg
mov
mov
xchg
mov
imul
cmp
aaa
je
ja
add
dec
lock
pop
fdiv
mov
js
add
mov
in
mov
imulb
clc
mov
insb
data16
pushf
call
in
mov
mov
mov
inc
mov
jae
jl
jno
addl
dec
xor
iret
out
pop
jb
out
mov
daa
jo
jb
sbb
je
cli
es
movb
shlb
test
mov
add
adc
imulb
clc
in
std
aad
mov
xor
ret
addr16
adcl
mov
pop
mull
xchg
repnz
fcomip
pop
es
imull
sbb
mov
xchg
add
faddl
std
clc
xor
clc
mov
jg
sbb
mov
mov
inc
call
das
roll
popf
pop
jg
xlat
dec
ror
xor
pop
test
cmp
or
shlb
add
sahf
dec
inc
push
jae
iret
shrb
lret
mov
cmc
xchg
shlb
in
or
ss
mov
adc
lds
jle
pop
arpl
lds
cld
mov
xor
lds
loopne
jo
cld
js
mov
call
jae
lret
je
fimull
pop
inc
cwtl
hlt
fwait
mov
cmc
repnz
mov
lret
dec
mov
cmp
pop
xor
hlt
or
adc
lods
xchg
mov
cwtl
rclb
add
add
mov
pusha
pop
pop
cmpsb
hlt
repz
adc
inc
hlt
insb
push
and
test
mov
movsb
jnp
outsb
xor
or
jb
push
cmp
xchg
mov
pop
scas
sbb
adc
or
mov
ret
ror
movsb
mov
lock
pop
fists
lretw
icebp
js
popl
mov
xchg
add
aaa
xchg
rclb
inc
loope
add
idivb
pop
movsb
sahf
cld
jo
mov
xchg
mov
cmp
mov
gs
outsb
jbe
pop
push
lret
addr16
scas
sbb
outsl
xchg
cmc
sbb
cld
cwtl
ds
jae
shrb
rclb
jnp
inc
int
std
out
sahf
lods
sub
decb
jo
es
xorb
fldl
mov
mov
jle
enter
cmp
out
daa
in
jae
cmpsb
scas
das
jmp
xor
sub
popa
jnp
repnz
negl
mov
dec
xchg
popf
out
in
xor
in
xor
cmpsb
jbe
aad
xchg
mov
js
inc
cld
insl
ljmp
sbb
arpl
lea
xchg
mov
shl
and
lock
icebp
loop
out
mov
dec
test
sbb
test
jl
push
xchg
imul
enter
cs
scas
mov
xor
movsb
test
fcmovnu
aam
mov
cmp
mov
mov
jl
stos
loop
mov
rcl
sahf
mov
mov
rclb
xchg
clc
xlat
sbb
test
test
adc
push
adc
xchg
pop
jnp
adc
push
aas
testb
aam
repnz
mov
mov
ja
xchg
pop
mov
xchg
aaa
scas
ja
inc
cmp
jmp
mov
pop
movsl
popa
and
in
cmp
cs
pop
test
jne
inc
faddl
cmpl
xchg
jns
cmp
imul
std
sub
mov
repnz
nop
adc
bnd
mov
mov
fmull
jo
ja
jle
push
notb
inc
hlt
out
cmp
jmp
mov
mov
lock
cmp
add
clc
cmp
fs
ljmp
das
cmpsb
lods
int3
std
clc
mov
mov
jge
jo
jae
cmp
mov
dec
add
pop
cmc
dec
mov
fsubs
stc
mov
xchg
mov
and
dec
mov
push
cld
cmp
mov
andb
cltd
repnz
lods
scas
sbb
mov
jo
adc
hlt
mov
testb
cli
mov
bnd
mov
fisttpll
ljmp
je
lock
cmp
jae
mov
leave
mov
mov
mov
mov
jno
xor
iret
add
jns
icebp
out
in
jp
xchg
mov
icebp
xchg
cmpsl
and
outsb
repnz
icebp
mov
jb
aas
cmpl
jb
mov
dec
pop
int3
sti
stc
cmp
lcall
je
mov
icebp
scas
pushf
jne
outsl
push
jp
pop
add
mov
popf
repnz
loop
mov
scas
sbb
testb
inc
mov
loop
aas
ds
push
cwtl
iret
xor
std
mov
cltd
idiv
fwait
jne
shl
mov
fdiv
lock
inc
adc
repz
xchg
inc
xchg
or
xchg
loopne
add
icebp
hlt
add
ret
mov
decb
aaa
push
clc
xchg
xchg
dec
aas
je
divb
push
ret
sub
sbb
add
jne
inc
sub
push
scas
in
ret
je
jbe
jb
push
cs
jnp
orl
imul
mov
adc
cmpsl
rol
mov
mov
mov
jle
pop
div
stos
adc
jmp
sar
sbb
inc
xchg
cli
sarl
cmp
test
xorb
aas
add
clc
outsb
pop
aad
push
cs
jbe
add
cmpsl
and
lahf
sub
xor
inc
sbb
imull
jnp
loopne
jns
inc
push
adc
loopne
sub
andl
xchg
xchg
lret
mov
xchg
dec
xchg
jns
repz
lds
das
inc
jnp
mov
mov
pop
outsl
push
jbe
test
xchg
xchg
stc
push
xchg
pushf
lods
adc
push
adc
pmaxub
cs
lods
lret
data16
dec
pop
fidivs
lock
lock
jno
inc
xor
sbb
cmpb
data16
add
mov
inc
notb
das
mov
movsb
xor
push
jecxz
push
test
repnz
cmp
je
sub
adc
stc
sub
sbb
mov
inc
clc
repz
push
add
sti
enter
mul
outsl
adc
mov
testb
ret
sbb
pop
lret
sbb
icebp
xchg
xchg
dec
sbbb
xor
push
jnp
test
push
test
mov
adc
nop
js
xchg
std
mov
cmp
out
mov
stc
or
flds
dec
pop
pop
or
in
rcrl
mov
xchg
out
sub
popa
and
add
xchg
mov
dec
test
add
test
pop
sub
je
out
mov
sub
imul
sarl
xorb
mov
popf
repz
frstor
cmp
push
sbbb
jns
sbb
stos
jl
loopne
pusha
roll
ds
cmp
or
lea
dec
add
shl
mov
dec
notl
xor
and
sub
cli
dec
lahf
cli
mov
jle
adc
sbb
test
mov
cld
sbb
adc
cltd
sbb
xchg
mov
std
lods
add
shlb
les
ja
push
dec
decb
cli
cmp
sub
mov
push
jecxz
iret
jae
leave
mov
mov
adc
jno
test
lret
aad
sub
adc
int
xchg
lock
test
xchg
xor
mov
test
test
out
in
sarl
in
and
jnp
push
ret
cmp
mov
mov
adc
sub
in
adc
mov
sbb
adc
idiv
rclb
add
stc
mov
mov
inc
shr
sbb
jae
loope
push
add
sbb
push
test
test
pop
xor
mov
jae
xor
xor
out
mov
aaa
out
jmp
add
loopne
decb
cmp
ljmp
mov
adc
idiv
clc
xor
cmp
scas
xchg
repz
mov
mov
repz
cmp
or
ja
jo
lea
xchg
inc
sbb
cld
mov
jbe
lcall
jg
cltd
xor
repz
out
hlt
xor
hlt
out
shlb
data16
fsubrs
or
jbe
mov
jb
xor
sub
pop
cmp
lahf
xor
jno
mov
xchg
test
mov
mov
adc
adc
outsl
inc
mov
fadds
jnp
test
pop
cmp
mov
dec
push
testb
and
rolb
jecxz
mull
mov
xchg
xchg
ja
mov
mov
std
nop
cmp
cmp
mov
sub
fisttpl
cwtl
jne
mov
mov
cld
adcb
xchg
push
fwait
adc
outsl
jae
jne
pop
mov
and
cmp
jg
jbe
aaa
fldl
jl
sub
int3
push
adc
xor
lret
xchg
mov
push
jb
rorb
mov
stos
in
popf
lods
in
into
inc
cmc
incb
push
into
push
cld
xor
cmp
fidivrl
xchg
fdivl
jb
out
lret
stos
aas
imul
sbbb
inc
popf
mov
cmp
xchg
nop
icebp
cmp
mov
inc
cs
pushf
mov
xchg
loop
mov
cmp
filds
aad
stos
out
rolb
cmc
dec
test
sbb
je
mov
xchg
test
sbb
outsl
sbbl
nop
or
mov
cmpl
mov
mov
mov
out
stc
repz
add
fidivrl
clc
mov
mov
and
push
pop
mov
das
cld
jle
mov
xor
jne
test
mov
fwait
sbb
jbe
sbb
subb
outsb
mov
inc
imul
loop
xchg
ljmp
fwait
inc
sub
sti
ficomps
pop
pop
or
das
push
cld
inc
push
repz
hlt
mov
lds
lea
cwtl
jno
rcll
rol
xlat
out
xor
outsl
sub
ljmp
js
movsb
xchg
mov
stc
mov
pop
lods
bound
mov
jg
mov
ror
repz
cwtl
jg
sbb
in
lret
xchg
lods
pop
in
mov
jae
sub
fwait
imul
inc
mov
mov
rclb
loopne
jbe
fdivrs
icebp
mov
push
and
cmp
mov
loopne
jbe
mov
push
add
cltd
shll
mov
cmp
inc
insl
enter
cmpsb
cmpsb
decb
in
int
sub
add
mov
xchg
push
insl
popf
insl
insb
paddq
dec
testb
mov
mulb
xor
les
lock
subb
out
cld
hlt
jb
inc
xchg
notb
mov
idiv
sub
insl
and
fsubs
mov
hlt
mov
or
hlt
jg
insl
mov
mov
sbb
outsb
add
dec
and
sub
nop
icebp
sbb
js
add
bswap
lock
testb
call
mov
bnd
inc
pushf
call
mov
ficomps
stos
je
mov
push
orl
stos
lea
in
pop
dec
test
icebp
jmp
pop
xchg
pop
sbb
pop
test
adc
clc
mov
mov
push
lds
inc
mov
nop
and
enter
mov
pushf
clc
lock
scas
clc
mov
or
adc
jbe
jbe
cld
cmp
in
push
pushf
lds
cld
fidivrl
jmp
and
xlat
cld
int3
aaa
test
stc
sti
add
cltd
cwtl
xchg
sbbl
roll
mov
ret
pushf
pop
xchg
pop
mov
inc
sbb
rcrb
dec
in
add
adc
xchg
push
jg
cld
xchg
int
rorl
mov
xor
dec
lcall
cld
cmpsl
shlb
cmpb
mov
dec
dec
push
addl
add
or
xchg
push
xlat
rclb
add
rorb
mov
mov
push
shl
pop
repnz
in
push
mov
ja,pt
dec
inc
pop
push
xchg
lods
sbb
jg
subb
push
mov
sbb
sarb
jg
adc
jnp
dec
mov
sti
cld
mov
pop
fimull
inc
jg
add
lock
adc
aad
repz
cli
pop
nop
out
xchg
jle
xchg
mulb
add
orl
mov
dec
inc
mov
push
jns
sub
test
and
adc
add
jns
jae
repnz
andl
sahf
sub
inc
fisttpll
push
in
jbe
in
js
dec
mov
loope
lret
mov
pop
or
inc
adcb
loop
je
add
loopne
cwtl
iret
pushf
add
xchg
scas
sahf
test
outsl
add
cmp
stos
ret
add
clc
mov
pushf
in
inc
mov
mov
adc
rcr
imul
pop
xchg
mov
push
xchg
mov
xchg
xchg
pushl
nop
clc
divb
hlt
jns
and
xchg
jae
xor
gs
les
cld
dec
shlb
movsl
je
outsb
push
lret
mov
mov
xchg
imul
push
test
mov
sbb
mov
cmp
xchg
jnp
cwtl
repz
cwtl
inc
inc
sub
incb
mov
outsb
or
pop
add
lea
jo
mov
sarl
xchg
lods
gs
cmp
out
xchg
push
pop
repz
lock
sub
inc
push
pop
push
lds
cld
mov
test
push
inc
out
imul
cmpsl
sbb
cltd
popa
mov
sub
jg
xchg
pop
aaa
enter
jno
fs
scas
jecxz
imul
adcb
and
pop
cmpsb
lret
xchg
sbb
xlat
jmp
pushf
mov
pop
dec
push
xor
or
mov
sub
cmpsl
mov
outsb
fdivp
xchg
cmpb
cli
pop
movsl
pop
cmpsb
add
scas
jne
xchg
xor
mov
adc
xor
or
sbb
add
mov
and
dec
add
imul
mov
fisubl
jo
dec
adc
jo
shrb
jb
cmp
leave
add
bnd
adcl
or
jno
subb
xor
repz
mov
jl
cli
loopne
test
repnz
in
fistl
sbb
xchg
dec
mov
repnz
jno
repz
pop
jg
divb
sbb
dec
sub
data16
xchg
icebp
stc
data16
jg
mov
negb
pop
mov
xchg
jmp
cmpsb
inc
sbb
fistpl
test
aas
aas
xchg
jne
sbb
bswap
mov
mov
xchg
jb
je
cld
fisubl
jb
je
imulb
mov
ja
jp
loope
sbb
loopne
stc
or
xor
fs
popa
aas
mov
sahf
push
push
stc
jbe
mov
dec
popa
dec
mov
lcall
mov
dec
xchg
testl
push
fnsave
or
rcl
pop
stos
xchg
add
lds
popf
adc
cwtl
test
xchg
and
sti
sub
adc
addr16
pusha
into
cmp
jae
sub
addr16
jae
rol
mov
and
rcl
pop
stos
enter
fbstp
arpl
fmull
test
mov
clc
leave
or
icebp
push
mov
mov
popa
fimull
ljmp
push
push
inc
add
or
div
ret
imul
repz
push
repz
movsl
push
lea
sti
cmp
fucomi
js
sbb
jo
repz
lea
cld
jno
dec
addb
das
sahf
jb
nop
xchg
repnz
push
xchg
add
jg
pop
or
divb
fists
js
or
or
jg
shl
push
cmp
vpmacsswd
pusha
testb
movsb
ljmp
daa
pop
mov
inc
fstp
rcll
aaa
jge
in
pop
xor
sub
xchg
jmp
adc
or
fstl
xchg
dec
stos
mov
mov
shl
lods
in
mov
lods
fidivs
js
pop
mov
sbb
xchg
call
jmp
cmp
sahf
add
inc
sbb
mov
div
adc
ljmp
push
cmp
xchg
push
inc
xchg
lods
adc
fdivrs
in
jmp
xchg
mov
loope
push
js
mov
cmp
lock
icebp
mov
xor
insl
es
ljmp
fidivs
mov
and
dec
jnp
popf
mov
orl
ret
jg
call
adcb
outsl
arpl
mov
outsl
xchg
test
cmp
lods
scas
test
daa
jle
dec
cmpsb
xbegin
repz
add
into
clc
outsl
lcall
and
xchg
cmp
lods
xchg
inc
pop
out
stos
dec
lret
jae
sbb
movsb
or
rcrb
adc
lock
test
sub
jecxz
jl
xor
mov
push
sub
adc
out
imul
jg
sub
rorl
inc
sub
ret
ja
sbb
xchg
sbb
xlat
fsubr
fldt
test
cmp
std
in
repz
inc
pop
mov
lock
fadds
fisubs
mov
outsl
sub
aad
cwtl
jecxz
cmp
outsb
dec
dec
mov
xchg
adc
adc
mov
outsl
je
loope
in
cmp
nop
push
sub
mov
fcomps
mov
jecxz
mov
jnp
mov
repnz
fdivrp
es
loope
inc
fidivrs
pop
out
jbe
mov
repz
jbe
cmc
mov
mov
push
sti
mov
sub
popa
iret
xchg
hlt
jle
adc
stc
sub
xor
add
test
aad
xor
xor
jle
repz
mov
in
mov
lahf
movsb
bound
sub
iret
dec
jne
ffreep
jne
sub
xor
dec
in
xchg
cmc
and
xor
jbe
insb
jl
xorl
rcll
in
dec
dec
in
test
lock
es
xor
divb
jmp
mov
and
ljmp
ja
cwtl
push
repnz
in
push
mov
movsl
es
hlt
popa
cmpsl
sbb
adc
icebp
cld
jg
les
pusha
movsl
push
les
repz
and
sbb
cld
movsl
les
mov
pop
push
ja
popa
lret
call
in
lahf
add
dec
sbbb
sbb
in
lods
lea
cli
lahf
insb
out
pop
insb
js
jge
stc
pop
repnz
je
xor
fisttps
adc
mov
xor
cmp
cli
mov
push
add
sub
lods
hlt
fidivl
add
mov
test
jl
inc
testb
dec
mov
int
dec
mov
sbb
inc
stc
imul
jg
mov
sar
js
out
dec
movsb
incl
mov
pop
insb
incl
mov
xchg
stc
hlt
mov
stc
adc
stc
mov
inc
mov
aad
push
mov
push
leave
test
shlb
test
jl
in
test
xor
into
sarl
mov
dec
sub
mov
jl
push
pop
mov
es
icebp
add
pop
std
mov
jae
jge
jo
jg
rorb
lret
xor
std
cld
pop
loope
nop
ret
pop
int
outsb
movl
shll
loop
xor
xchg
push
or
into
repnz
cmp
xor
testb
icebp
popf
add
jg
loopne
ljmp
je
cld
aam
shlb
ret
sub
add
and
mov
xor
xor
dec
jge
sahf
rcl
and
mov
xor
test
sbb
push
cmpsl
adc
sub
fs
adc
lock
push
mov
lahf
div
lods
es
dec
or
xchg
sub
jne
ljmp
mov
je
xor
push
add
fistps
push
mov
sbb
mov
jno
iret
mov
pop
mov
fisttpll
test
push
push
xchg
fstps
daa
cmpsl
push
scas
adc
ljmp
dec
ljmp
push
dec
pop
arpl
mov
mov
imul
xchg
push
fisttps
or
mov
pop
fisttps
mov
ds
outsb
frstor
or
mov
push
mov
addb
adc
scas
jge
icebp
mov
aad
push
mov
clc
stos
jb
xchg
sub
arpl
mov
and
xchg
mov
jb
je
xchg
cld
int
push
idivb
mov
into
smsw
dec
sahf
xchg
push
repnz
daa
mov
add
aaa
or
bnd
je
jb
xchg
mov
bnd
push
xchg
rcl
stos
mov
stc
jne
or
cmp
sub
mov
xchg
dec
pop
lods
mov
popf
pop
mov
jnp
xlat
xor
dec
xlat
cmpsl
rcr
nop
push
jno
pushf
mov
stos
pop
divb
xchg
adc
mov
popf
fistl
ja
mov
mov
aad
xor
inc
dec
test
aam
popf
faddl
clc
mov
scas
icebp
das
cmp
xor
in
je
nop
xor
mov
add
adc
sub
imul
arpl
fisubrl
xor
jnp
repnz
imul
addb
jmp
pop
and
sub
repz
dec
icebp
or
jnp
push
daa
je
ss
nop
in
jg
scas
ret
scas
pop
adc
xor
mov
mov
dec
loop
mov
pop
pop
mov
dec
dec
test
sbb
mov
and
je
fbstp
mov
xor
popa
jg
hlt
xchg
inc
cmp
paddsw
xor
mov
aad
push
hlt
test
cmpsb
cmc
sub
lods
push
xchg
leave
lods
inc
lret
mov
aaa
jg
clc
enter
adc
dec
pop
push
sbb
jge
inc
push
popf
jecxz
jne
xor
xchg
mov
mov
mov
imul
jle
jp
cmp
in
push
mov
mulb
add
movsb
test
cwtl
in
out
sub
bound
cmp
nop
inc
jg
cmc
pushf
cmpsl
pop
xor
jp
lock
jl
xchg
int3
pop
scas
mov
rcrl
ja
xchg
cmpsl
jle
sbb
imul
enter
addr16
lods
rclb
jne
and
imull
jecxz
inc
clc
jge
cmc
je
out
push
aaa
mov
repnz
das
call
scas
mov
add
ja
nop
popf
dec
cmpsl
or
rorb
push
jnp
mov
popl
sbb
sbb
test
push
push
jmp
jb
into
push
notb
jg
mov
stos
mov
out
add
jbe
je
xor
jae
repnz
dec
pop
fstps
mov
jl
lret
cmpsb
cld
lods
inc
mov
int3
das
pop
mulb
idivb
testb
adc
roll
in
pop
jle
jnp
adcl
mov
cmp
jle
enter
xchg
mov
mov
mov
mov
sub
add
es
mov
fldl
jp
mov
out
stos
je
sub
push
cli
lahf
xchg
and
mov
out
add
pushf
cmpsb
outsl
mov
mov
sub
xchg
filds
cmpsb
xchg
adc
mov
ljmp
ja
stos
adc
jle
jl
mov
jns
push
popa
push
jg
and
repz
jmp
stos
cmc
jae
jnp
repnz
dec
cmc
mov
push
popf
lret
push
adc
outsl
adc
cld
cmp
mov
ja
pop
mov
or
lock
pop
push
aas
data16
popf
outsl
je
sbb
pop
hlt
call
daa
es
testl
call
xchg
lock
divl
rcrb
loop
or
pushf
into
push
add
mov
mov
loopne
cmpsl
xchg
nop
aaa
xor
lock
pop
cs
call
adc
inc
js
pop
inc
movsb
repz
out
cpuid
aad
jo
lret
stos
das
jno
clc
mov
add
push
jno
dec
in
arpl
add
iret
sub
adc
pusha
jne
sub
scas
subb
mov
fmull
xchg
xor
xor
mov
or
nop
cld
sub
repz
aaa
nop
adc
or
pop
nop
and
push
fwait
or
cwtl
xor
je
sub
xchg
pop
fs
mov
mov
dec
inc
xor
adc
lret
shl
sbb
cmc
xor
lea
ja
fisubrs
hlt
divl
cld
orb
xor
js
nop
mov
mov
call
sub
lock
insb
push
add
dec
inc
popf
pop
xabort
pop
mov
shrb
fwait
out
xchg
rorl
fisubrl
xlat
in
mov
mov
jle
shlb
mov
xor
stos
outsb
repnz
div
lods
pop
icebp
test
push
sub
insl
xchg
nop
test
fstl
xlat
xor
cmp
mov
out
cli
xchg
es
or
jecxz
frstor
scas
mov
fcmovbe
and
add
sbb
call
jecxz
lahf
jnp
out
imul
cmc
cmpsb
inc
pop
xor
stos
cld
mov
imulb
cld
ficoms
xorb
hlt
popf
sti
or
inc
jbe
inc
ret
loop
adc
mov
pop
out
jl
xchg
mov
cmpb
pop
mov
test
add
testb
mov
lret
std
je
pop
loope
out
inc
in
divl
xchg
cld
int3
lock
rcll
sub
adc
mov
stc
nop
dec
mov
clc
add
aas
cld
mov
mov
out
cli
jne
sbb
lret
jle
ret
push
pushf
lock
lock
scas
dec
loop
cld
cmpsl
stc
std
sbb
addr16
icebp
scas
cmp
arpl
jno
jo
mov
and
or
push
dec
repnz
adc
mov
xchg
enter
pop
mov
and
push
test
adc
push
mov
adc
ret
fs
pop
adc
int3
lods
leave
mov
icebp
ret
cmc
outsb
and
pop
enter
repnz
pop
push
adc
lock
push
lret
repnz
ret
gs
movb
pushf
addr16
out
mov
leave
outsl
aaa
out
xor
push
aaa
jb
jne
imul
stos
xchg
sbb
jbe
and
push
push
bnd
clc
cmpsl
adc
add
and
sbb
sbb
rorb
call
adc
fldenv
pop
mov
mov
xchg
jb
xlat
mov
testb
mov
dec
mov
jnp
repnz
mov
push
sub
xchg
xor
add
pop
jbe
xchg
sbb
xchg
dec
pop
jae
xchg
mov
lock
mov
cmpsb
in
repz
divl
mov
sti
std
sahf
jne
push
loop
adcl
mov
push
sub
or
mov
jae
and
jns
stc
inc
adc
movsl
movsl
subb
jae
in
out
imulb
hlt
arpl
xlat
or
cli
fdivr
sti
je
mov
mov
stos
imul
jo
stos
add
mov
xchg
xchg
rclb
mov
andb
sub
in
pop
enter
ret
and
xchg
test
stos
jp
stos
std
arpl
cmp
cmc
shrl
or
inc
sub
mov
or
loop
in
add
pop
sbb
add
rcr
pop
loop
out
lcall
pop
repz
pop
divl
clc
iret
adc
sbb
imulb
stc
rolb
popf
adc
push
mov
fidivs
jp
push
cmp
rcrb
pop
pop
jne
imul
jae
xor
xchg
test
or
aad
repnz
outsb
cs
jg
test
stos
ret
xorb
addb
cli
enter
xchg
sub
xor
xor
ds
xor
mov
movsl
cmp
xchg
mov
add
xor
repz
addr16
outsb
daa
mov
imul
repz
pop
dec
std
popa
testb
jg
test
inc
loop
adc
inc
dec
lret
adc
stc
cmp
adc
dec
xor
rclb
xor
iret
pop
jg
xchg
cmp
dec
add
mov
jns
inc
lds
inc
mov
jmp
pop
test
add
icebp
mov
and
outsw
mov
in
adc
popf
jg
mov
lret
inc
xchg
sub
or
loop
inc
jl
mov
or
imul
inc
mov
orl
ret
stos
shl
popa
ret
cmp
sldt
repz
divb
or
and
je
or
mov
out
xor
xchg
dec
pop
clc
movsl
add
stos
lret
mov
in
int
push
sbb
jns
gs
xchg
cmc
cmpsb
add
jg
adc
jle
repz
mov
stc
add
cmp
out
cld
xlat
lods
xchg
cltd
cmpsb
or
adc
pop
adc
test
jp
loop
lods
outsl
stos
lcall
cmp
jo
mov
aam
mov
cmp
inc
adc
outsb
mov
mov
jae
aaa
stos
push
ret
mov
call
cmpsb
and
pushf
loopne
xchg
sahf
mov
adc
adc
sbb
data16
xchg
or
repnz
mulb
clc
aaa
cld
mov
cmpsb
mov
in
in
add
clc
fmull
xchg
aam
push
mov
data16
les
mov
sub
movsb
cld
pushf
mov
notl
test
test
hlt
jg
repnz
insl
push
sub
hlt
add
mov
add
cmc
not
add
lahf
push
mov
add
cmpsb
es
hlt
add
inc
mov
subb
cld
pmuludq
enter
movsl
ret
and
jg
add
push
mov
mov
and
jbe
cwtl
lea
or
pushf
loopne
lret
inc
stc
nop
xchg
mov
and
cld
or
xchg
hlt
mulb
cmp
sbb
ret
test
movsl
pop
iret
jnp
jbe
pop
cmpsb
mov
add
ds
adc
mov
cwtl
stc
and
pushf
out
pop
pop
stc
inc
sarb
add
stos
cld
sub
repnz
jmp
sub
fdivl
push
aaa
ljmp
stc
orb
movsb
das
test
pushf
mov
notl
add
mov
sbb
shrb
ja
jg
push
int
stos
xor
adc
int3
xchg
sbb
mov
or
mov
stc
nop
stos
lods
imul
stc
rclb
aaa
mov
pop
iret
jnp
jbe
cli
mov
imul
sub
stc
mov
dec
cwtl
stc
and
stos
jnp
mov
stc
mov
pushf
imul
stc
pop
and
shlb
lods
mov
jge
addb
pop
stc
mov
add
out
int3
rclb
stc
mov
lods
mov
and
stos
addb
jae
pop
pop
out
test
outsl
pop
sbb
add
in
mov
cmpsl
pop
insb
mov
push
push
in
dec
cwtl
cmc
pop
js
scas
mov
cwtl
cmc
pop
add
fmuls
mov
inc
ret
mov
mov
mov
hlt
arpl
testb
jp
inc
into
loopne
insb
jbe
popa
cmpsb
test
add
ljmp
xor
and
mov
hlt
movsb
cmpsb
leave
add
add
push
mov
pop
and
mov
sahf
dec
adc
lods
xlat
sti
mov
push
inc
stos
pusha
call
xchg
das
repz
test
in
mov
repz
mov
or
ljmp
outsb
je
call
out
jmp
aam
pop
sahf
or
jbe
jo
cld
hlt
repnz
in
mov
jae
in
mov
ud0
jmp
andl
push
test
xor
and
cmpsb
xor
mov
cmp
iret
negl
sarl
or
sti
push
adc
das
lret
xor
mov
and
jg
enter
push
iret
cmova
test
adc
ficoml
andb
jbe
outsl
lret
jbe
push
daa
mov
inc
je
mov
mov
cmp
dec
jmp
shlb
cwtl
jae
lret
std
push
jne
xor
inc
insb
jmp
xchg
jmp
movsb
xchg
subl
hlt
div
jo
mulb
xchg
icebp
test
xchg
js
je
mov
ret
aaa
cmpsb
nop
addb
lcall
test
push
int3
or
inc
add
xchg
cmc
rclb
test
inc
add
or
ficoms
test
dec
js
pusha
jge
in
std
sbb
jmp
ljmp
mov
std
adc
mov
clc
ficoml
pushl
lds
notb
xchg
clc
scas
enter
pop
xor
daa
jecxz
fbld
sbb
jne
mov
pop
xchg
jmp
jns
cmpsb
std
pop
cmp
in
and
push
cli
shrb
lcall
clc
jg
outsl
jl
sub
cmpb
add
push
jbe
jle
mov
mov
add
jle
aas
and
jle
mov
les
ja
notl
hlt
pushf
add
sbb
adc
test
outsb
sbb
out
xor
xchg
hlt
xchg
repnz
mov
mov
jae
aam
dec
fldcw
insl
add
xchg
mov
scas
leave
xchg
pop
imul
pop
sahf
movsl
lahf
pop
jo
call
test
sahf
jle
out
shl
sub
daa
in
dec
mov
mov
negl
das
daa
add
sbb
loop
jo
mov
jno
pop
stos
popf
jmp
sub
repz
arpl
inc
call
xchg
lcall
lcall
bnd
jae
jg
sub
jp
jne
jg
push
inc
lret
fistpl
divl
stos
adcb
notb
ja
and
div
jbe
cmpsl
dec
pop
stc
push
jo
test
repz
mov
cmp
jmp
clc
js
jno
clc
daa
jns
insl
xchg
repnz
xor
jp
dec
mov
daa
jnp
insl
mov
jl
jg
sarb
xlat
sbbl
lea
dec
jg
pushf
adc
fcmovnb
push
cwtl
fcompl
jns
inc
repnz
mov
push
pop
mov
mov
adc
mov
adc
lret
idiv
int
add
xorb
testb
mov
inc
call
fnsave
pop
idivb
mov
shlb
pop
mov
add
push
lret
add
lret
rcrb
add
pop
aad
in
cmp
popf
shlb
add
sub
xlat
sub
jg
lods
mov
popf
outsl
testl
add
lret
or
push
cmpsb
int
jne
faddl
mov
dec
jmp
mov
pop
xchg
test
mov
daa
ljmp
mov
imul
adc
aaa
mov
and
decb
in
xor
mov
push
js
add
mov
sub
mov
mov
push
lcall
xlat
incl
mov
outsl
sti
mov
movsl
push
ljmp
scas
jge
scas
cmc
in
scas
xor
cmc
add
fnsave
push
or
stc
popa
call
xchg
xor
lahf
cmpsb
outsb
sub
mov
add
xor
out
dec
xchg
movsb
cmp
mov
push
mov
jno
or
cmp
jne
cld
stc
lock
movsl
fisubrl
fdivp
adc
push
in
push
push
sub
test
pop
nop
movsb
push
mov
mov
icebp
je
lret
add
in
dec
repnz
mov
mov
xor
dec
push
hlt
cmp
and
repz
rorb
push
jp
test
xor
outsl
repz
push
mov
lods
sbbb
mov
push
sbb
lret
stos
push
mov
mov
sbb
adc
mov
xor
xor
push
xchg
mov
clc
xchg
push
adc
imul
add
mov
daa
fildl
jnp
orb
divl
ljmp
xchg
insb
push
dec
mov
in
icebp
mov
aas
fstpt
xor
loope
cmc
cmp
jne
stc
mov
cltd
jb
pop
jbe
clc
or
and
mov
cmc
mov
pop
out
xor
call
mov
cld
mov
xchg
repnz
cld
test
cmp
mov
insb
jmp
lock
mov
mov
clc
and
mov
cmp
push
outsb
repz
cwtl
imul
pop
and
rorl
adc
jle
push
inc
mov
mov
dec
add
xor
mov
stos
xchg
outsl
add
sbb
mov
enter
cmp
gs
sbb
pop
ret
leave
hlt
xor
push
enter
testl
mov
movsl
add
andl
cmp
fdivrp
mov
pop
out
add
loopne
test
lods
aaa
js
pop
test
es
lcall
iret
lcall
repz
jno
adc
fiadds
ret
cmpsl
mov
cmp
xchg
jns
adc
mov
inc
lods
mov
mov
pop
pushf
push
je
in
hlt
iret
je
test
sub
push
dec
call
ret
adc
daa
mov
insl
jb
mov
fdivrs
repnz
clc
mov
jns
in
inc
leave
jb
popa
roll
je
popa
insl
or
fsubs
or
cmpl
cmp
jnp
fldcw
mov
sti
mov
inc
or
adc
xchg
nop
cli
aaa
xchg
xor
cld
cmc
repnz
and
icebp
nop
add
jp
lahf
repz
stos
xor
int
add
pop
hlt
testl
push
cld
stos
jg
mov
push
mov
sub
mov
pushl
jae
daa
push
aam
jl
xchg
std
sti
popf
stos
sbb
jg
mov
sti
repz
mov
das
pop
xchg
cld
inc
push
cwtl
cmpsb
mov
test
sub
into
or
push
lods
sbbl
stc
cmp
push
ja
dec
mov
sbb
decw
pop
cmpsb
push
es
stc
loop
popa
inc
or
daa
movsb
in
mov
inc
out
mov
pop
xchg
test
hlt
and
dec
je
push
test
add
nop
push
jmp
xlat
aad
orl
call
dec
ret
xchg
mov
lret
cwtl
and
sarb
gs
dec
mov
div
lods
mov
sub
cld
adc
mov
and
jno
mov
jbe
testb
fwait
movsl
xchg
and
cmovnp
sti
mov
cmp
pop
ror
add
call
ret
dec
dec
adc
mov
mov
jbe
out
adc
xor
ficomps
mov
lea
dec
add
pop
adc
fdivr
add
cmc
inc
outsb
inc
leave
add
jmp
inc
iret
iret
pop
jne
adc
jae
sub
aas
cwtl
mov
shlb
add
jns
xorl
xchg
rcrb
dec
adc
mov
xchg
mov
sub
add
ljmp
shlb
notb
mov
fwait
adc
cmp
jnp
jo
pop
aam
adc
xchg
rcr
idivb
inc
icebp
mov
shlb
fcom
subb
divb
xor
clc
and
leave
into
insl
add
dec
shrl
and
jnp
rorb
test
pop
sub
imul
push
add
aad
sar
sub
stos
inc
popa
inc
ja
int3
fisubrs
lods
in
sub
in
lahf
into
cmc
insl
or
mov
xlat
sbb
inc
movl
push
sbb
sahf
pop
test
clc
add
xor
mov
lods
in
repz
dec
ja
xchg
pushf
cmc
rorb
cmpsl
outsb
mov
add
les
fcomi
add
movl
mov
int3
pop
insl
imul
repnz
loop
movq
mov
notl
mov
ret
mov
xchg
fs
xor
xchg
shlb
mov
test
incb
js
cmpsb
mov
sbb
add
bound
sub
adc
push
mov
dec
jg
jecxz
cmp
jbe
jg
lods
mov
mov
jle
insl
ljmp
daa
dec
xor
in
sbb
mov
arpl
lahf
stc
cld
ja
pop
clc
or
test
cmp
mul
fwait
cmp
sub
int
mov
stos
inc
mov
insb
xchg
aam
leave
dec
mov
insb
xchg
and
loop
les
int
adc
es
and
xor
lcall
lods
jae
jns
mov
xchg
jnp
into
cmp
cmpsb
xor
std
test
adc
jg
lods
jmp
mov
out
or
lret
dec
mov
mov
xlat
xchg
lods
sbb
mov
add
std
mov
sarb
add
bound
popa
cs
inc
fdivl
mov
fsubrs
inc
in
fsubrs
mov
mov
jne
icebp
mov
ljmp
inc
and
ret
jmp
fucomip
ror
mov
je
stos
outsb
sbb
jns
jl
out
push
pop
in
mov
mov
xchg
or
mov
jl
nop
jle
jmp
cli
call
adc
call
enter
stc
lock
testb
pop
hlt
dec
ret
ret
cmpsb
xchg
test
or
loope
xchg
ret
cmpsl
inc
fwait
lock
cmpsb
test
stc
lret
push
dec
out
and
pop
cmp
cmp
add
mov
xchg
add
sti
pop
stc
jbe
jmp
xor
xor
in
call
test
or
call
lret
insb
insl
inc
ds
jnp
incb
sub
and
add
push
in
jl
mov
xchg
and
mov
dec
nop
outsl
scas
pop
sbb
xorl
ds
mov
xchg
lock
cmp
popa
jmp
adc
push
mov
xor
into
mov
jae
jne
pop
jae
psraw
push
stc
sbb
sarb
or
icebp
inc
xlat
jmp
xchg
xchg
cmp
shlb
lock
popa
ljmp
cmpsl
cld
cmp
and
dec
aas
out
add
call
xchg
jno
not
je
and
iret
mov
mov
pop
sub
std
shr
adc
add
jle
mov
std
jmp
mov
xor
cwtl
rcrb
stos
scas
xchg
adc
cwtl
pop
xlat
add
out
cmp
push
mov
push
stos
test
or
mov
stos
int3
mov
add
je
call
adc
pushf
adc
orb
jbe
adc
movl
push
scas
add
push
cwtl
lcall
insl
std
scas
jg
daa
icebp
mov
testb
push
add
mov
stos
adc
adc
shlb
adc
je
jne
sbb
lods
xchg
or
loopne
nop
out
adc
hlt
mov
pop
jb
mov
xchg
xor
sbb
mov
xchg
shlb
out
adc
mov
notb
add
aaa
scas
addr16
aaa
xchg
dec
push
scas
mov
pop
fwait
xor
xchg
dec
out
shl
test
adc
ja
stc
call
mov
push
loop
xor
call
xchg
fcoms
jge
mov
lret
shlb
adc
sbb
jno
bnd
in
repz
push
jmp
iret
pop
push
mov
sbb
adc
jg
xchg
loop
push
sbb
nop
cwtl
mov
push
cmpsb
mov
js
out
ds
popf
xchg
loope
rcll
cld
ja
out
sbb
sbb
sbb
or
in
mov
cltd
cltd
xchg
stc
sti
insl
and
pushf
fsubp
je
fdivrp
aas
lea
jmp
fnstcw
fwait
pmuludq
ret
push
lea
xchg
enter
jmp
xchg
int
dec
testb
shlb
fidivl
add
xor
stos
mov
pop
call
lret
push
aas
imul
inc
mov
mov
ret
incb
repz
mov
pushf
adc
jno
shl
jp
mov
imul
push
std
mov
inc
imul
fs
jge
fstps
aaa
imull
loope
adc
std
or
testl
out
cmpsl
sbb
mov
sbb
dec
stc
mov
imul
add
addl
fisttpll
out
sub
rolb
divl
sbb
add
pop
je
add
test
adc
fiaddl
lcall
xchg
cs
pop
repnz
ja
add
add
push
sbb
lret
jae
int3
fwait
sbb
lret
idivl
inc
add
mov
cwtl
push
sbb
xchg
xorl
je
push
mov
or
mov
or
decb
jge
movsb
scas
sub
mov
mov
mov
push
dec
dec
imul
cmpsl
push
and
aas
jle
bound
xlat
out
popf
sub
xchg
shlb
mov
test
add
into
fildl
gs
movsl
lahf
mov
cmpsb
loop
sbb
lahf
std
mov
rcrb
jns
xchg
mov
jne
mov
pushf
sbb
je
xorl
xchg
jns
mov
fistps
or
mov
mov
test
adc
sbb
mov
mov
lock
mov
mov
les
lahf
loopne
inc
mov
cs
stc
push
sahf
aam
stc
xor
lahf
and
loope
lea
fiaddl
je
jns
in
popl
xchg
and
add
lret
cmp
and
popf
cmpsb
in
int
shrb
pop
loopne
ljmp
jae
fwait
clc
or
pop
push
shlb
xchg
jecxz
jl
sbb
pop
rclb
lock
hlt
xchg
int
jecxz
sbb
xor
push
ja
lea
lea
hlt
stc
ja
mov
jne
popa
addl
call
xchg
mov
div
ja
in
mov
xchg
mov
in
jle
aam
repnz
mov
leave
ror
popf
push
xchg
cld
ja
cmp
mov
pop
lcall
cld
add
lock
inc
mov
sub
insl
and
inc
push
rorb
lds
cmp
clc
sbbb
adc
inc
lret
cmpb
scas
or
add
mov
mov
aas
adcb
or
ret
test
setb
and
mov
mov
mov
and
inc
xchg
out
negb
mov
hlt
sbb
xchg
xchg
adc
popf
xchg
js
jg
popf
xchg
clc
dec
jg
popf
xchg
jns
cld
jl
addl
adc
div
dec
test
push
cmp
mov
lods
xchg
jns
jp
lcall
inc
push
out
je
es
push
outsl
out
dec
jae
inc
inc
adc
clc
inc
fwait
and
lock
pop
jle
scas
jl
icebp
aad
dec
imul
inc
movsb
push
mov
lods
pop
inc
adc
in
mov
lock
out
or
sub
xchg
scas
jl
ret
cld
in
stos
test
sbb
adcl
and
sti
mov
icebp
jg
test
aam
jno
std
pop
push
stos
mov
inc
xlat
cmp
inc
push
cld
jae
or
hlt
sbb
negb
jg
std
pop
icebp
cmp
sbb
jbe
js
movsl
icebp
nop
inc
add
fdivrl
dec
mov
out
popa
jae
push
ret
xor
out
mov
mov
add
jae
enter
xorb
cmpsb
pop
cpuid
jmp
movsb
sub
adc
adcb
stos
loop
sub
lds
fiaddl
xchg
jnp
dec
icebp
jo
jp
out
mov
lahf
or
add
lcall
insl
aaa
hlt
int3
jo
in
xchg
jne
lock
sbb
push
mov
mov
jno
jge
xchg
jae
repnz
sub
push
rcr
or
add
inc
add
cld
fsin
push
jl
lret
es
lock
push
add
in
xchg
inc
add
sbb
mov
insb
add
fnstenv
loopne
add
idivb
jbe
dec
lahf
call
hlt
dec
xchg
mov
jg
pop
ret
iret
rorb
jl
push
xor
jecxz
and
ja
rcrb
out
scas
insl
push
cld
mov
add
jl
clc
xchg
mov
loopne
repz
es
dec
iret
jns
jae
mov
cmpsl
add
insb
dec
fmuls
notb
mov
mov
stos
pop
testb
inc
jno
adc
cmpsl
fildll
push
div
call
sbb
xor
mov
dec
xlat
mov
cmpsl
xor
ja
jg
test
arpl
mov
lods
test
pop
je
clc
jp
cltd
pop
inc
cmp
pop
outsl
jbe
ja
imul
divb
jmp
mov
jbe
push
mov
mov
mov
sbb
push
ret
mov
xchg
clc
dec
stos
in
mov
jns
arpl
cli
jo
mov
mov
add
ja
les
insb
stc
cmp
cmp
loopne
and
int
test
stc
shlb
ja
out
dec
stc
cmp
iret
ljmp
jle
cmc
and
popa
cltd
cmpsl
pop
cmp
mov
cmpsb
jp
adc
lcall
stos
in
es
movsb
insl
sub
faddp
lcall
ret
sub
lret
ret
lahf
outsb
mov
mov
sahf
jmp
push
lods
mov
call
mov
add
lods
stc
lcall
cmp
sbb
xchg
xchg
imul
and
test
out
mov
push
mov
and
ds
and
test
jo
mov
pop
les
xchg
lcall
rcrb
xchg
jecxz
sbb
test
xlat
push
pop
xchg
ja
cld
mov
ja
push
call
adc
and
insl
push
int3
je
jae
rcll
push
cwtl
mov
shrl
fwait
stos
dec
mov
outsl
lods
adc
lods
add
popl
decl
adc
aaa
lret
xchg
cmp
adc
ret
xchg
idivb
icebp
jo
mov
jae
jo
stos
sbb
mov
or
xor
inc
lahf
mov
pop
test
push
push
xchg
out
inc
and
jge
adc
fs
mov
sub
pop
mov
cmp
or
fdivrl
inc
xor
pop
jmp
das
decl
insb
xchg
scas
push
mov
arpl
lock
pop
insb
inc
adc
rclb
jno
adc
shrb
mov
int3
sub
lock
shlb
aaa
dec
xchg
shrb
jns
cmp
rcrb
bound
inc
jb
jo
fdivrl
nop
jg
sbb
cltd
lcall
jbe
mov
test
std
ds
sbb
int3
lret
daa
gs
insb
lret
cli
decl
imul
inc
ljmp
loope
insb
mov
arpl
pop
popa
dec
insl
ljmp
lret
pop
adc
shlb
mov
outsb
or
shlb
icebp
mov
les
jae
mov
test
jae
mov
je
pop
push
cld
test
cmp
mov
xchg
jns
cli
mov
lods
loop
push
or
js
stc
test
adc
mov
hlt
mov
jp
mov
and
sbb
xchg
inc
push
cmpl
lret
xchg
jns
lcall
jp
nop
clc
idiv
mov
mov
fcomip
mov
ja
idivb
cltd
gs
sti
inc
lds
aam
sbb
sub
repz
cmpl
bnd
push
jmp
rcr
mov
aad
add
mov
pop
inc
cli
stc
jno
lock
cmp
xor
jle
inc
lcall
jge
push
je
push
jnp
and
sarb
and
mov
ret
sbb
pop
xchg
adc
cmc
dec
je
lahf
test
jnp
out
repz
shl
adc
mov
clc
inc
sub
sti
add
lock
jb
mov
aad
mov
xor
inc
lcall
and
adc
fwait
movsb
or
repz
testb
mov
test
xchg
cmpsb
fwait
ds
inc
lods
xchg
dec
test
and
cmp
pop
jne
scas
inc
adc
push
pop
mov
notl
jae
daa
lret
jbe
ret
ja
test
je
jne
push
jne
imul
ljmp
adc
pop
push
jmp
push
mov
jbe
push
inc
inc
out
push
jmp
ljmp
mov
cmc
xor
push
jb
enter
push
call
cmc
les
pop
idivl
add
aaa
rclb
insl
jbe
add
push
js
aad
cmp
jle
inc
lahf
in
push
adc
cmp
jnp
popf
cwtl
jge
daa
add
mov
stc
mov
inc
xchg
lcall
nop
loopne
lods
cmp
mov
int
jb
cmp
pop
leave
icebp
jae
js
aam
hlt
xchg
cltd
push
cmp
ret
jle
and
jbe
pop
dec
lahf
and
adc
mov
in
in
jle
lods
pop
and
jg
add
add
inc
push
jge
bound
mov
mov
adc
bound
cld
orb
jno
xlat
xchg
aad
std
mov
popa
lret
jg
lahf
test
mov
xlat
sbb
cmp
sti
pop
movl
lds
cmp
ja
std
rol
cld
or
rclb
xchg
lods
nop
cmp
nop
imul
das
push
out
inc
fwait
mov
insb
pop
jno
icebp
js
jbe
cmpsb
stos
dec
jns
pop
sbb
mov
jmp
mov
xchg
lahf
mulb
ljmp
bound
lds
lds
jae
scas
js
jl
repz
loopne
jmp
popf
jp
or
ja
clc
pop
mov
je
test
int
mov
xchg
jns
mov
cli
out
cmp
add
mov
jp
add
mov
mov
adc
lret
adc
lret
div
jp
jnp
adc
jp
stos
sbb
out
push
or
jmp
sahf
cmp
inc
mov
insl
aad
mov
ret
fmulp
mov
xchg
outsl
cmpsb
dec
inc
cmp
pusha
ret
mov
xchg
flds
sbb
aam
xchg
inc
dec
cli
fwait
int
stos
xchg
shlb
aaa
mov
inc
enter
xchg
cwtl
nop
dec
dec
pushf
sbb
cmp
jb
lret
js
jo
sub
js
ret
movsb
jbe
xchg
jo
jle
aaa
push
ja
jl
ja,pn
dec
cli
push
fildll
push
fbstp
jae
in
rep
jbe
je
jle
hlt
mov
aaa
jne
cs
roll
idivb
jo
ja
adc
shlb
js
jle
clc
lods
push
das
jns
cs
jp
outsl
imul
jnp
ds
imul
jl
jle
imul
jge
cs
cli
out
xor
js
lock
and
or
and
or
cmp
or
cmp
aad
xchg
js
cmp
aad
xchg
js
cmp
aad
xchg
js
scas
adc
aad
adc
cmp
jl
jg
jl
and
repnz
adc
adc
push
stc
and
adc
mov
stos
js
jg
jnp
lock
imul
jge
mov
std
shll
stos
add
repnz
jmp
jne
adc
cli
pop
iret
out
hlt
xor
data16
das
aam
test
int3
jle
mov
sbb
sub
xchg
imul
sub
jne
and
cmpsb
movsb
mov
jp
mov
fiadds
das
aam
hlt
lock
push
in
sub
and
scas
insb
mov
out
fildll
adcb
stos
jge
mov
mov
and
xor
lock
cmpsb
mov
shrb
repnz
dec
push
loop
hlt
push
adc
out
ret
cmpsb
shlb
mov
push
rcll
aad
fildl
pop
xor
divl
imul
adc
notb
jb
sarb
xchg
insl
xor
sti
das
fidivrl
jae
out
inc
push
xor
mov
sbb
xchg
xchg
int
in
xor
pop
hlt
sti
das
pushl
and
jne
std
cmp
mov
ret
adc
shrl
jg
jg
adc
xchg
outsl
mov
jmp
mov
push
into
divl
andb
fwait
popf
nop
xor
xchg
mov
nop
arpl
aaa
sbbb
test
testb
lea
sbb
nop
out
sub
mul
aas
fisubrl
mov
insb
pop
bound
pop
jae
das
loope
pop
jg
cmc
or
fnstenv
push
jle
jo
lock
call
repnz
fwait
adc
mulb
inc
insb
add
xchg
ljmp
jb
pop
out
adc
in
xor
xor
or
outsb
xor
xor
pop
jbe
jmp
add
test
mov
cmp
xor
mov
cmpb
push
notl
shr
nop
jecxz
int
subb
fstl
adc
jb
mov
pop
repz
das
cmpsb
int3
dec
int
jne
jb
lods
cmp
sub
add
adc
in
xor
fdivs
pop
icebp
sti
das
jno
mov
jbe
jae
out
or
fcomps
mov
cmp
shlb
repnz
ret
cltd
shrb
mov
icebp
repz
js
test
xor
incl
xchg
inc
add
mov
les
lods
cs
or
mov
push
js
icebp
mov
sbb
aaa
sub
jo
mov
hlt
adc
in
xor
outsb
xor
sti
das
push
sbb
repnz
push
lods
ret
mov
loope
out
add
xchg
clc
adc
inc
xor
sti
das
aas
ja
xchg
jbe
mov
sbb
aaa
je
or
mov
dec
in
xor
xorl
jae
das
aaa
pop
mov
cmc
aas
test
std
mov
jno
hlt
shr
pop
jle
rcr
jns
jle
enter
adc
int3
jns
movd
insl
outsb
xchg
adc
ds
pushf
jno
pushf
mov
testb
in
jmp
push
ret
addr16
daa
popf
mov
icebp
cmp
insl
cmp
hlt
cld
jge
inc
lcall
loop
sbb
mov
outsl
mov
cld
fs
movl
mov
jae
sub
or
pop
sahf
dec
adc
je
mov
and
jnp
xchg
jge
testb
cld
psrlw
sbbl
xchg
test
add
test
cli
mov
out
mov
repz
add
cmp
ror
mov
cs
add
insb
lods
ljmp
cmc
sub
and
and
test
mov
push
icebp
push
test
mov
adc
mov
loope
outsb
inc
adcb
leave
aad
inc
dec
dec
test
jg
notb
outsb
fwait
or
sub
mov
mov
movsl
repz
lods
ret
idivb
push
lods
xchg
adc
sub
adc
jns
movsb
cwtl
sarb
pushf
and
and
cld
loop
push
jbe
rcrl
jge
jle
jl
push
enter
inc
cmp
mov
psrlq
adc
add
mov
fistl
rcrb
mov
pop
lock
std
cwtl
inc
ret
xor
and
or
mov
std
nop
adc
lods
scas
int3
inc
adc
stos
adc
xor
jo
gs
aaa
inc
xlat
jle
testb
test
mov
in
je
loop,pn
xchg
lock
loopne
push
rorb
out
inc
jno
add
into
jecxz
mov
orl
jno
ret
bts
xchg
xor
add
repnz
jg
push
ja
mov
cmp
mov
inc
mov
rclb
jle
xchg
out
inc
mov
loop
xchg
icebp
jge
mov
adc
mov
stos
mov
mov
xor
xchg
jbe
cs
jb
xlat
mov
aaa
stc
pushf
xchg
adc
clc
xor
inc
add
xchg
repz
fs
loop
stos
popl
add
insl
mov
ret
subb
cli
xchg
imul
jp
testb
xchg
gs
sbb
repz
pushf
je
inc
out
inc
lea
xchg
lods
stos
sbb
pushf
xor
sub
pop
insl
je
fwait
ret
mov
xchg
lods
cmp
cmpsb
fcmovne
mov
xchg
cmc
ss
cmc
dec
stos
mov
cwtl
cmpsb
ficoml
sbb
jecxz
pop
jle
fcmovnb
imul
dec
mov
stos
mov
loop
cmp
ja
cld
sbb
ds
imul
mov
js
xchg
jb
pop
cmc
std
dec
pop
adc
mov
push
aaa
pop
dec
push
clc
push
cli
cld
mov
ja
rorb
ret
mov
xlat
in
cmp
add
sar
and
pop
inc
push
sti
push
clc
ja
jne
or
xchg
sti
ret
sbb
loop
sbb
jge
pop
sbb
lods
addr16
aaa
or
pop
or
addr16
cmc
jle
or
std
sub
loop
jae
arpl
or
push
push
stc
cs
and
stos
mov
test
add
mov
or
add
into
push
std
or
in
sub
sbb
push
xlat
jge
sub
mov
pop
jp
lcall
xchg
test
psadbw
iret
loop
ss
mov
xchg
shl
xor
inc
sbb
fcoml
xor
mov
ss
xlat
add
adc
rolb
adcb
rorl
adc
or
pop
pop
pushf
add
jno
ret
out
in
inc
or
push
das
rclb
in
adc
stos
xchg
test
cld
popf
test
push
in
adc
push
jge
pop
in
mov
clc
icebp
jne
mov
fwait
jne
test
xchg
aad
stc
addb
cmc
adc
out
sahf
or
and
and
add
rclb
shll
ret
and
adc
push
mov
add
mov
and
jns
xchg
xchg
mov
int
sbb
aam
mov
mov
out
adc
clc
or
lcall
ja
xchg
or
lea
arpl
mov
mov
xchg
test
mov
mulb
incb
mov
xchg
cmc
decb
cmc
ljmp
add
cmc
cmpsb
xor
imul
cmc
mov
aad
mov
nop
mov
xchg
cmp
lods
insl
inc
scas
or
in
xor
cmp
or
pop
mov
mov
mov
lods
ficompl
cmp
aas
or
push
int3
mov
mov
pop
pusha
jmp
movsl
dec
mov
orl
sbb
adc
cmp
xor
fistl
mov
adc
adc
dec
gs
orl
arpl
orl
arpl
add
add
pop
popa
mov
mov
xorb
mov
xchg
lcall
push
mov
out
cmpsb
or
test
pop
popa
xchg
cmp
test
and
cld
int3
aaa
repnz
mov
addb
call
push
mov
mov
repnz
mov
sarb
outsb
dec
mov
mov
ljmp
sub
ja
add
stc
lock
dec
fdivs
push
cld
stc
je
mov
jnp
add
and
lock
iret
sti
imulb
in
cmp
les
jg
jbe
notl
jno
icebp
fwait
test
mov
lock
adc
and
sub
sahf
sbb
aad
push
aad
mov
mov
push
cmpsb
scas
cmc
test
fistl
push
outsl
jle
lock
inc
add
outsl
inc
mov
outsb
inc
inc
sarl
xchg
mov
sbb
mov
adc
mov
push
iret
inc
add
loopne
dec
fs
dec
and
mov
imul
pop
out
out
repz
jae
testb
adc
dec
stos
pop
sub
mov
xchg
cld
xchg
or
in
or
test
je
add
aam
insl
loopne
inc
sub
jb
xchg
ds
and
mov
mov
cmp
out
in
icebp
adcl
in
movsl
adc
mov
push
adc
adc
repnz
jno
jo
adc
pop
xchg
xchg
push
js
sete
mov
aas
loop
ret
popa
out
lea
fdecstp
xchg
mov
movsb
mov
jns
cmpsl
sub
jo
sbb
mov
clc
pop
mov
insl
jnp
xchg
cmp
imull
lods
mov
sbbl
mov
or
ficoml
shlb
decl
jo
lock
aam
mov
cmp
mov
adc
js
insl
dec
jp
add
jl
mov
loop
jb
jno
jo
jl
mov
sbb
add
cmpsb
mov
sub
jae
repnz
push
test
jo
cli
jae
jg
mov
pop
mov
cltd
sub
lock
into
lret
adc
imul
inc
lret
bnd
sbb
icebp
adc
cmpb
insb
fs
sbbb
pop
push
xchg
xor
jno
lret
lea
and
inc
mov
dec
js
jg
mov
xchg
xchg
repz
xor
pop
dec
mov
cltd
sub
scas
ret
outsl
inc
mov
adc
xchg
xchg
fcmovne
lret
adc
fistl
out
mov
or
aaa
in
lock
mov
push
insl
and
idivl
loope
insb
or
inc
xchg
mov
icebp
sbb
lods
add
lock
out
pop
sahf
aad
pop
xchg
stos
in
mov
adc
negb
clc
push
pop
lret
sbb
data16
mov
stos
stc
xchg
repz
xchg
inc
addb
mov
lahf
scas
sbbb
mov
clc
lea
pop
push
dec
and
inc
fisubrl
mov
subl
mov
insb
ja
dec
ljmp
jnp
lods
sbb
cmp
add
cmp
icebp
shr
cmp
cld
add
lahf
shrl
ja
jne
arpl
pop
cmp
iret
cs
or
call
inc
push
ljmp
mov
jo
cmpsb
mov
out
ss
sahf
stos
inc
or
sub
jne
ja
ds
out
fnstenv
test
jns
or
add
iret
jl
sub
xchg
jb
lods
mov
popa
repz
and
cmp
outsl
inc
jne
mov
jae
jno
sbb
call
cmpsb
add
bnd
cld
or
orb
jb
mov
mov
lea
push
insl
ljmp
pop
int3
lahf
push
sub
lea
lahf
hlt
mov
ds
fidivl
lahf
mov
xchg
testb
shlb
out
rcrb
ret
jne
notb
enter
in
jp
jne
inc
pop
jne
lock
test
lods
in
inc
cmp
mov
stc
inc
mov
test
movsb
xchg
cwtl
rorl
in
mov
lods
mov
repnz
cmp
lahf
mov
push
sub
int
cwtl
adcb
aad
push
cs
jno
xlat
notl
jle
add
mov
xor
incl
jae
push
mov
mov
test
repnz
jne
std
mov
faddp
sar
std
leave
call
cmc
call
pop
xchg
cmp
das
sti
je
jno
sub
scas
dec
mov
call
rclb
insl
idivb
rcll
push
adc
and
test
pop
in
pop
rorl
mov
lret
iretw
nop
cmp
rol
dec
xchg
pushl
out
xchg
arpl
adc
xor
dec
sub
mov
movsl
rcrb
in
sbb
add
decb
sbb
pop
jae
testb
xor
insl
mov
dec
repz
mov
scas
enter
dec
in
push
pop
dec
test
js
inc
pop
std
cmc
ja
hlt
arpl
lret
sbb
push
in
add
fnstsw
push
into
fisubrl
ja
and
rcr
cld
ja
iret
rolb
js
fdivs
in
in
lods
movb
sbb
or
jns
jae
cs
jns
xchg
sbb
cmpsl
clc
cmc
or
fwait
inc
and
jns
clc
roll
out
clc
sub
sarb
clc
inc
fidivrs
mov
push
pop
add
nop
xor
xlat
and
loop
add
push
jecxz
xchg
pop
cmc
adc
sbbl
jg
test
cwtl
mov
add
test
add
inc
adc
xchg
leave
pop
rcll
mov
out
fisubl
cmpsb
rorb
das
icebp
jbe
rclb
movsb
mov
ja
sti
out
insl
ss
dec
mov
pop
mov
xor
test
bound
pushf
sbb
insl
je
push
rolb
pop
leave
icebp
add
pop
lret
or
cwtl
mov
xchg
push
sub
cmp
mov
icebp
cmp
lahf
dec
insb
mov
orb
sub
nop
sbb
mov
and
mov
push
subl
push
xchg
mov
jns
std
aaa
repnz
add
insl
arpl
cmpsb
mov
ret
insb
in
xchg
lret
mov
add
sti
stos
shlb
test
xchg
call
je
lret
jl
sbb
stc
push
and
cwtl
repz
jp
mov
mov
jno,pt
ds
aaa
or
dec
mov
inc
push
jg
fiaddl
jbe
mov
idivl
sbb
mov
insl
jecxz
cli
fildl
lock
hlt
je
cmpsb
xchg
xor
insb
mov
js
arpl
cmp
mov
push
mov
jg
pop
jno
adc
fisttps
mov
fisttps
stc
adc
xchg
enter
xor
mov
bound
jo
mov
stc
js
subb
mov
popa
fsubrl
sti
test
fistl
repz
orb
mov
mov
jno
ljmp
add
mov
outsl
cmpsb
out
mov
bound
cwtl
imul
stos
aaa
mov
icebp
clc
fdivrs
mov
insl
jae
sub
mov
cld
lock
or
push
push
cwtl
nop
nop
mov
jae
aaa
repnz
inc
movsb
ret
mov
aam
mov
test
xorb
push
jbe
loop
fwait
mov
and
int3
adc
lods
scas
lret
jecxz
jge
aam
icebp
jae
xor
xchg
sbb
cltd
lcall
nop
repnz
jne
stos
xor
in
sub
xor
pop
push
mov
mov
lcall
jnp
shlb
xchg
push
aaa
sahf
js
push
mov
mov
xor
js
mov
aam
and
xor
xchg
mov
call
lock
xor
fimull
jg
xchg
xchg
xchg
arpl
jecxz
repz
out
mov
jbe
push
faddl
into
push
ljmp
repz
xor
or
inc
xor
xor
sahf
push
sti
sub
mov
lods
mov
push
xor
xor
arpl
shl
mov
shl
out
xor
jl
mov
int
scas
sub
hlt
sahf
push
stc
mov
pop
sub
stos
mov
popa
jns
adc
dec
lahf
call
xor
cmp
leave
cmp
pop
pushf
into
out
cmp
push
push
push
lea
jae
test
pushf
test
cmp
pusha
jmp
lea
ja
bt
jmp
and
aam
inc
dec
push
and
into
mov
pop
and
rcrl
cltd
cmp
sbb
add
pop
cld
or
in
filds
mov
or
leave
mov
popa
jne
mov
mov
scas
push
stos
adc
pop
or
mov
mov
int
in
lds
mov
sarl
inc
aas
sti
jecxz,pn
push
jge
xor
cwtl
icebp
xchg
ja
loopne
and
fimull
adc
jno
insb
and
std
xor
xchg
cmc
cltd
iret
sub
sti
out
adc
pop
scas
mov
push
es
fcompl
xor
xchg
mov
sub
daa
mov
test
sub
jae
sbb
lods
cli
lret
pop
mov
adc
cwtl
push
in
ds
addr16
sbb
mov
mov
sub
int3
movsb
mov
ja
jnp
xor
gs
adc
jo
mov
cwtl
dec
cmp
and
mov
sbb
and
jo
dec
pop
jnp
mov
in
or
int
push
out
fists
mov
mov
pop
test
cmp
pop
xchg
mov
push
cs
repz
adc
mov
pop
clc
mov
test
xorl
pop
fiadds
das
and
cltd
sbbl
lods
mov
idiv
adc
jmp
test
jmp
mov
pusha
pushl
pushf
lea
jmp
push
movl
push
movl
push
lea
jmp
pushf
pusha
lea
jb
stc
jmp
int3
popf
pusha
pushl
mov
pusha
movl
call
push
jmp
mov
idiv
cmp
movsb
xor
and
ret
pusha
pop
in
ret
xchg
ss
dec
push
out
repz
repz
dec
jne
mov
scas
icebp
addb
sub
es
adc
fcomip
les
mov
pop
dec
sub
push
sbb
popf
cwtl
jno
les
pop
call
jmp
call
mov
lahf
push
sahf
mov
or
std
cmp
push
aas
inc
ss
rcr
das
cmp
popf
push
aaa
sbb
in
das
enter
jmp
pop
push
mov
push
dec
adc
and
mov
cli
ret
pop
in
lea
jne
adc
shl
ror
mov
pusha
cmp
movb
stc
cmp
call
pusha
pusha
lea
je
pusha
pusha
pushf
cmp
pushf
pushf
pushl
pushl
ret
jl
scas
repnz
pusha
mov
lea
jne
pushf
pusha
pusha
pushfw
popw
not
not
stc
jmp
pushf
pushf
movb
movl
pusha
jmp
push
lea
je
call
pusha
bswap
pushl
lea
push
lea
pop
jmp
sete
mov
cmpl
pop
adc
scas
subl
or
icebp
sub
clc
pop
push
into
sarl
push
inc
nop
jge
mov
and
out
jecxz
out
jge
cmp
xlat
add
testb
jg
xchg
es
push
ret
cld
lahf
rcrl
test
dec
gs
xor
mov
loopne
jne
push
andb
pop
and
mov
dec
pop
cwtl
rcrl
jno
push
xor
rcll
jno
ret
mov
fsubs
inc
sbb
leave
test
jmp
rclb
ljmp
inc
jae
and
pushf
bound
test
mov
push
lret
adc
adc
in
push
test
xor
mov
and
fdivl
ret
dec
bt
stc
pusha
add
stc
mov
push
inc
cmp
bt
mov
movb
mov
cmp
push
lea
jbe
btr
mov
movsbw
clc
bsf
shr
add
pusha
setg
shld
mov
test
add
dec
btr
shld
mov
movl
pop
rcr
setl
mov
stc
cmp
push
cmp
call
stos
mov
push
movl
push
lea
jmp
jmp
cmp
stc
or
push
lea
je
jmp
push
movl
call
push
cmc
add
cmp
pushl
not
bt
bt
pushf
sub
movl
stc
stc
ror
test
add
push
xor
pushf
stc
jmp
or
cmp
movsb
xor
fcmovu
int3
ja
push
xor
rolb
adc
jg
fstl
out
adc
inc
imul
sbb
jp
inc
lods
add
inc
xchg
and
jp
jl
push
imul
shll
lret
pop
xor
dec
jno
sarb
adc
stc
rcr
mov
clc
test
and
clc
cmp
push
jmp
call
pushf
lea
jae
pushf
push
movw
movb
lea
jne
call
mov
pushf
lea
jp
pushf
pushf
lea
call
push
jmp
pushf
cmp
mov
lea
je
pushf
pusha
bt
cmp
push
pushf
pushl
lea
je
jmp
cwtl
mov
call
lods
adc
or
mov
fnsave
daa
sti
mov
imul
lea
pop
push
dec
gs
xchg
rcrl
in
test
mov
adc
or
sub
jns
rol
in
xor
loopne
out
lods
nop
bound
call
daa
xor
mov
add
jp
pushf
movl
jle
push
pusha
lea
jmp
movb
bt
add
pushf
pushf
pusha
movl
lea
jmp
jmp
in
jno
dec
cltd
in
jp
aas
mov
fmull
mov
std
mov
mov
jecxz
jns
xchg
add
push
lock
in
insb
or
dec
hlt
sub
push
push
push
mov
clc
xlat
stos
jne
inc
sub
cltd
std
mov
scas
out
dec
pop
jbe
mov
xor
or
icebp
fldt
mov
jmp
inc
test
je
outsb
pop
insb
xchg
scas
jbe
dec
cld
mov
mov
mov
pop
lea
jge
hlt
repz
sub
sub
data16
sbb
jmp
xchg
pushf
dec
nop
iret
sub
aad
mov
subb
sbb
stc
mov
add
xorl
sbb
sbb
xbegin
xor
js
movsb
ficoml
jmp
push
jmp
add
mov
push
jmp
sub
lock
lret
jmp
xchg
daa
sbb
xchg
jp
cmp
test
mov
fidivl
sub
jmp
mov
dec
push
add
test
inc
xchg
cmc
xchg
rclb
movb
inc
popf
jno
clc
movzwl
mov
fucomip
addl
mov
fmul
xchg
jp
and
cmp
pop
and
out
outsb
add
sub
pop
push
add
int
dec
add
gs
lret
and
mov
or
sub
shl
loop
add
repz
or
shll
sub
pop
pop
lods
jmp
mov
add
push
push
sahf
mov
stos
adc
jmp
jns
dec
sub
or
lea
in
xor
sub
jno
inc
inc
imul
int3
mov
outsb
pmullw
inc
pop
fsub
mov
icebp
inc
xchg
push
daa
mov
repz
mov
gs
mov
xor
cld
inc
jb
xchg
loopne
or
sbb
sub
out
mov
enter
sbb
aaa
jnp
mov
mov
aam
inc
pop
lahf
enter
rcrb
mov
out
mov
data16
push
fdivl
mov
pop
repnz
int
or
aad
adc
ds
outsb
orb
jl
sbb
adc
cmp
hlt
push
lods
cli
pop
fwait
mov
cmc
xchg
fdivrl
and
sub
xor
mov
xchg
arpl
incb
jno
mov
add
aam
push
inc
cmp
mov
leave
mov
out
dec
push
lahf
xchg
insl
pop
das
pop
cli
stos
dec
shrb
pushf
pop
lock
pusha
push
sbb
aad
scas
sub
inc
xor
into
shll
mov
fcomps
jmp
mov
add
pop
or
incl
add
add
call
mov
pushl
mov
call
movl
jmp
pusha
lea
jae
cmc
push
push
add
jmp
pusha
inc
call
pushf
push
pushf
inc
pushf
push
lea
jmp
call
data16
jne
pusha
jbe
std
dec
fnstsw
sbb
mov
ret
loope
cmp
aaa
add
and
inc
lods
mov
int3
data16
inc
push
lret
js
mov
mov
adc
arpl
push
sbb
cmpsb
xor
mov
cs
jecxz
jmp
sbb
inc
pushf
lret
pop
pop
add
push
cmp
aas
lods
js
test
dec
and
jmp
add
mov
fs
jae
ja
pushf
lea
ja
pushf
bt
imul
stc
push
mov
jmp
push
inc
mov
mov
lea
push
lea
jo
pusha
push
lea
call
jmp
mov
rcl
sub
xor
sar
or
push
adc
push
aas
aam
aaa
clc
push
aad
inc
neg
dec
sub
mov
mov
pushf
lea
call
pushl
lea
call
pusha
pushf
pushf
pushf
lea
jae
jmp
mov
cmp
mov
stc
pusha
cmc
cmpb
call
jno
mov
negb
push
dec
and
mov
mov
lods
pushf
jbe
jno
in
cmc
add
inc
cmp
push
mov
test
leave
out
jo
or
push
aaa
pop
mov
sbb
out
fsubl
dec
dec
outsl
adc
mov
inc
and
xchg
cmpb
push
out
sahf
movsl
jno
mov
cmc
movsl
enter
and
jbe
add
shll
fcoml
in
push
push
ljmp
inc
jp
cltd
fnstenv
imul
les
add
scas
sarl
fbld
stos
mov
add
push
and
mov
sbb
pushf
push
movb
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
jmp
dec
shl
mov
cmp
stc
mov
btc
pushf
mov
cmc
test
push
clc
sub
pusha
rep
not
movsbw
mov
pushf
pushl
push
lea
jmp
jmp
add
push
add
mov
add
add
ret
pop
bt
cmp
jmp
lea
pop
pop
bswap
mov
lea
jno
jmp
in
ds
mov
mov
rcrl
outsb
xor
in
and
sub
stc
rcr
mov
loopne
mov
fldcw
ljmp
jno
jecxz
shll
mov
inc
mov
repnz
popf
cmp
int3
push
lret
xchg
inc
cwtl
fcompl
leave
jge
daa
aam
add
shl
xchg
into
jg
dec
imul
std
or
adc
mov
dec
lret
ds
mov
inc
test
mov
dec
cmp
mov
or
mov
cmpsl
lret
and
xor
and
and
outsl
hlt
ds
xor
mov
in
negb
cmpsb
popa
in
sub
inc
xchg
scas
or
fs
or
xchg
or
push
xchg
cmc
cmpsb
push
call
cmp
mov
or
pop
pop
fadds
and
xor
test
cmpsl
mov
repz
outsl
pop
stos
shll
shll
in
add
in
cltd
mov
lods
dec
std
js
and
xor
loope
dec
fcmovne
mov
aas
gs
cmpsl
mov
xlat
sarb
and
push
mov
cmc
adc
or
jo
dec
or
xor
mov
out
mov
mov
cmpsb
adc
aam
lock
push
jmp
and
mov
repnz
push
sbb
push
inc
mov
inc
imul
bound
lret
or
pop
xchg
jge
mov
std
dec
push
pop
ds
jle
test
cld
enter
outsb
loopne
xchg
mov
push
pop
adc
les
push
jl
fmull
xchg
push
imul
call
pusha
bt
jmp
push
fwait
jne
test
popf
mov
adc
stos
insl
xor
mov
fcmove
insl
inc
jecxz
add
jle
cmp
repz
fnsave
pop
mov
lret
je
stos
mov
jo
mov
loop
or
ja
sub
mov
pop
mov
sbb
iret
mov
sbb
out
repz
push
imul
scas
mov
push
sar
ret
sub
lret
test
nop
inc
mov
mov
icebp
cmp
sbb
cmp
jbe
xchg
imul
stc
hlt
xchg
mov
lcall
xorb
jg
dec
pop
shlb
xchg
xor
sub
cltd
enter
leave
cmp
adc
or
pop
dec
idivb
adcb
jecxz
add
mov
bound
or
test
inc
xor
adc
mov
mov
out
sahf
cvtps2pd
dec
es
jmp
test
int
mov
ljmp
jae
jge
sti
xchg
mov
loop
or
fdivrs
shlb
mov
cmp
inc
push
shll
inc
dec
mov
rcll
push
pushl
subb
sub
jbe
sahf
ja
lahf
insb
lods
jno
mov
jmp
call
les
pop
dec
mov
mov
sbb
outsl
dec
and
or
mov
shll
push
scas
or
outsl
or
jl
mov
loope
fdivl
sbb
lret
pop
mov
mov
xchg
cmp
int
dec
jbe,pn
xchg
jecxz
test
orl
stos
sbb
mov
pop
adc
shll
xchg
xor
pusha
jae
and
dec
aad
mov
ja
stos
add
sarb
inc
fisubrs
jno
dec
or
stos
cmp
pop
mov
lods
fwait
nop
mov
adc
lods
jle
ret
mov
mov
xlat
jo
rorl
into
scas
loopne
or
push
mov
mov
and
lahf
xchg
aam
insl
mov
push
mov
or
pop
in
pop
rorl
dec
sub
mulb
cmpsb
je
icebp
mov
popl
pop
jge
pop
pop
jmp
sti
pop
jae
pop
mov
inc
pusha
adcl
je
scas
ret
dec
arpl
dec
sahf
jge
xor
add
lret
cmp
mov
mov
inc
or
mov
jecxz
adc
jo
stos
lahf
push
xchg
adcb
pop
pushf
fcompl
sbb
pop
jl
cmp
lds
add
cld
add
ljmp
sarl
xchg
pop
roll
mov
fildl
icebp
cmp
cmc
add
adc
enter
mov
inc
xorb
es
xchg
aas
in
lock
sahf
insl
push
rorb
inc
add
add
sub
insb
adc
jnp
call
dec
xchg
and
add
dec
push
jne
sbb
test
lock
jp
out
pop
mov
sub
fwait
insl
enter
sub
jmp
mov
mov
adc
sub
mov
out
xchg
xchg
in
inc
sbb
loope
call
das
test
movsb
jo
dec
inc
jecxz
mov
test
fdivr
btr
rcr
btr
mov
jns
and
call
aad
movzbl
push
setns
stc
movsbl
mov
btr
mov
sub
test
push
inc
bsf
push
aam
push
shl
bts
rcl
pusha
mov
dec
mov
pusha
clc
test
jmp
cmpb
pushf
lea
jne
lahf
sub
aaa
pushf
sub
shl
cmp
ror
btr
mov
sub
and
ror
add
add
or
test
dec
add
mov
cmc
bt
cmc
jmp
or
mov
inc
stc
pushf
andb
adc
adcl
or
and
sbb
xor
dec
push
cwtl
rcll
ficoms
adc
or
fistl
out
cli
push
or
in
lret
gs
es
mov
ja
and
inc
lcall
ljmp
gs
and
lds
idiv
enter
sub
jno
mov
cmc
rorb
xchg
aam
add
mov
mov
xchg
sub
sti
fs
jmp
insl
or
aas
or
ljmp
cmp
sti
mov
adc
insl
sub
scas
stos
adcl
mov
fs
xchg
adc
pushf
inc
xchg
sti
fs
std
inc
or
add
or
mov
mov
xor
enter
ljmp
sbb
dec
ss
in
call
jno
arpl
stc
mov
mov
bound
pop
and
xchg
and
dec
sub
call
adc
lods
fcmovbe
aaa
clc
shlb
mov
jle
cmp
sbb
std
adc
test
jl
push
mov
cmp
inc
cmp
mov
mov
xchg
add
rcll
mov
data16
cmp
popf
aam
add
cwtl
xorl
mov
imul
bt
clc
add
pusha
movb
pusha
lea
jmp
subb
inc
inc
inc
inc
cmp
fiaddl
in
fstl
jno
movsb
ret
push
jbe
mov
ss
jmp
or
dec
dec
repz
in
rolb
adc
out
and
cmp
push
and
and
adc
inc
adc
jo
pop
test
call
lods
cmpsl
inc
mov
out
mov
out
jnp
out
fstpt
xchg
cmpsl
mov
push
dec
or
and
mov
fwait
xchg
dec
cmp
push
add
pop
xchg
fwait
push
std
push
in
push
jg
es
jae
mov
mov
or
fidivs
or
mov
add
inc
xchg
scas
lods
pop
les
push
dec
pusha
movsl
iret
sbbb
or
lock
loopne
pop
jne
cmp
aad
dec
adc
iret
xorl
mov
jmp
insl
int
test
xchg
xor
icebp
fcomp
mov
sarb
xchg
cmpsb
lods
jl
das
mov
ja
dec
or
xor
push
arpl
les
int3
mov
sbb
lock
rcrb
xor
stos
outsl
mov
xor
inc
mov
mov
addr16
loope
and
ret
call
je
push
in
mov
pop
daa
repz
jns
pusha
inc
xor
shlb
push
and
add
inc
and
or
add
pusha
lea
call
mov
movw
jmp
mov
jmp
add
cmc
test
pushf
cmp
pushf
pushf
mov
movb
lea
jb
call
pushf
pusha
movl
pushf
pushl
lea
jmp
pusha
pushf
adc
mov
mov
pusha
pushl
pushl
ret
movsbw
movzbw
pusha
call
mov
pushf
call
or
pushl
lea
je
btr
shl
bsf
add
dec
call
pushl
popl
push
pushf
pushf
push
pushl
ret
push
pushf
pushf
movl
mov
pusha
movl
pushf
mov
lea
jmp
jne
lahf
cwtl
pusha
movzbw
mov
pusha
push
lea
jmp
movzbw
pop
push
call
daa
push
inc
sub
inc
adc
cwtl
mov
mov
insl
sbb
add
pop
addr16
fsubrl
cmpsl
sahf
mov
push
push
xor
xchg
jp
rcr
mov
ljmp
in
stc
cmpxchg
in
jnp
cmp
inc
adc
aam
mov
cmp
mov
orb
scas
orl
into
mov
in
mov
push
std
scas
scas
hlt
into
es
std
cmovns
pop
pop
mov
jno
scas
sub
std
inc
cmp
pushf
lea
jbe
bts
shl
lea
clc
sub
add
stc
add
mov
bsf
mov
bsr
clc
movzbw
add
lea
xadd
shr
test
dec
sbb
mov
rcr
rol
bswap
add
bswap
movzbw
mov
jmp
sub
stc
rol
shld
movzbw
lea
pusha
cmc
cmc
sub
cmc
pushl
stc
clc
pushl
popl
jmp
lea
pushf
pusha
call
add
loopne
je
or
fdivrl
scas
jp
inc
icebp
in
les
and
push
fnsave
pop
mov
fnstsw
ret
push
out
sub
repnz
jmp
sbb
mov
movsb
in
xor
imul
rorb
test
pop
push
jp
jmp
lret
jmp
je
cmpsl
call
stc
or
ljmp
ret
outsl
or
ja
dec
jmp
adc
or
add
cwtl
negl
dec
mov
sahf
add
or
insl
cmpsl
loope
jmp
outsb
jp
push
into
out
adc
dec
adc
mov
les
adc
cmc
mov
mov
jno
pushf
call
mov
scas
inc
xchg
out
dec
push
push
imul
jae
mov
std
dec
inc
mov
dec
fldt
leave
scas
bound
lods
popa
insl
lds
add
dec
cld
lds
mov
out
pop
movsb
push
outsl
lahf
xchg
les
cmpsl
mov
incl
aaa
roll
adc
iret
orb
pop
fistps
stc
mov
cmp
stos
mov
push
adc
loope
dec
repz
dec
aaa
dec
mov
push
and
sub
sub
enter
cli
push
pop
add
add
add
add
add
pop
adc
pop
int
add
add
add
add
push
fstps
add
sbb
inc
int
add
fstpl
add
sbb
jmp
pushf
call
stc
cmp
call
add
movsb
sub
and
dec
clc
mov
jo
or
xchg
pop
dec
sub
gs
push
out
adc
loope
aas
lods
enter
fs
lahf
icebp
jns
jge
fiadds
xor
out
hlt
cmpsb
xchg
sti
int
imul
jno
stos
pop
mov
movl
pushf
movl
push
pushl
lea
jmp
movb
lea
je
mov
mov
jmp
push
setne
cmp
lea
xor
lea
xchg
bswap
mov
pushf
mov
not
lea
jno
seto
movsbw
pop
xchg
pop
lea
pop
push
pushl
pusha
pushf
mov
not
jmp
lea
je
cmp
cmc
cmp
add
pushf
movb
bt
cmp
pushf
call
ficompl
or
dec
out
or
scas
jb
pop
rorl
ljmp
pop
sbb
outsb
mov
cmp
out
add
and
inc
push
pusha
jo
sub
mov
icebp
out
test
ret
add
out
add
fidivrs
sbb
cmpsb
or
addl
loopne
fimull
mov
mov
ret
mov
divl
inc
test
hlt
jb
pusha
cli
push
jnp
or
mov
add
repz
jno
stos
repz
pusha
pusha
lea
call
push
push
adc
mov
movb
push
jmp
push
movb
xor
pushl
call
scas
out
jecxz
movsb
aaa
or
mov
push
sub
sbb
outsb
movsb
out
push
icebp
fisubs
dec
pop
ljmp
mov
test
jb
es
insb
mov
sub
jle
stos
pop
jno
outsl
and
div
les
mov
push
xor
call
pop
pusha
pusha
pushl
ret
stc
add
stc
cmp
mov
clc
bt
bt
test
pushf
jmp
call
push
rcr
xadd
shrd
rol
push
rcl
push
adc
jmp
pushf
xor
call
jbe
add
stos
xchg
sbb
nop
pop
popl
loope
add
and
sub
rcrl
jbe
mov
out
loope
adc
jno
subb
iret
push
mov
mov
xchg
mov
sub
out
mov
fwait
jl
ljmp
aas
and
dec
adc
add
ja
cmp
test
add
cld
incl
add
jae
popa
addr16
outsl
js
add
in
mov
neg
sub
mov
movw
call
add
bsr
mov
pushf
shl
pushl
lea
je
jmp
stos
call
call
bswap
movsbw
lahf
lea
jmp
adc
push
jmp
enter
inc
inc
xchg
jle
adc
push
and
mov
inc
xor
cmovb
out
fsubrp
movsb
xor
push
test
int3
insl
ljmp
push
xchg
cmp
mov
pop
fcom
mov
mov
ds
push
pusha
lods
jmp
sub
pusha
call
add
inc
js
je
jb
arpl
jae
add
pusha
movl
push
pushl
lea
jmp
or
jmp
pushf
pushf
lea
call
cmc
cmc
pusha
stc
sub
pusha
pushf
pushf
pushf
lea
jne
jmp
movb
jmp
stc
jle
and
test
pop
and
push
in
pop
cmp
mov
and
adc
shl
andl
lds
and
pusha
stos
insb
mov
sub
jmp
pop
mov
cmp
hlt
fdivrp
push
ret
push
imul
mov
xchg
fcompl
mov
aaa
nop
fnsave
mov
jae
adc
cs
adc
arpl
or
push
jno
cmpsl
dec
push
outsl
add
push
pusha
dec
pushf
pushf
jmp
ret
cli
aaa
enter
cmp
stc
enter
mov
enter
enter
stc
mov
test
cli
aaa
enter
cmp
cmp
mov
cmp
cmp
enter
pushl
pusha
lea
je
bswap
lea
call
lea
call
jmp
pushf
pushf
movl
pushf
jmp
pop
add
addb
add
in
lret
add
add
mov
adc
iret
add
in
mov
adc
mov
adc
mov
push
add
add
add
mov
cmc
jmp
xor
not
call
movw
inc
movw
pushf
adc
mov
pushl
ret
dec
test
stc
pushf
cmc
add
stc
bt
stc
sub
cmp
pushf
add
call
shr
xor
bswap
mov
not
bsf
neg
mov
cmp
stc
not
clc
pusha
not
cmc
bt
jmp
pushl
mov
pushf
mov
lea
jmp
mov
call
test
bt
jmp
push
shr
cmc
or
stc
push
cmp
bt
xor
pushf
pushf
inc
mov
decl
jmp
pushl
popl
movb
movb
movb
lea
jmp
pusha
call
mov
pusha
pushf
push
call
jmp
jmp
inc
rcl
pusha
cmp
mov
jmp
mov
mov
call
rol
push
ror
bsf
cmc
adc
btr
xor
sub
lea
bsr
inc
sub
clc
lea
mov
xadd
shld
shld
xor
mov
test
dec
pushf
not
add
sub
sub
push
mov
ror
add
movzbw
inc
lea
jbe
bts
lea
not
cmc
ror
push
rol
sub
xor
sbb
add
add
pop
lea
movzbl
movsbw
dec
dec
neg
xor
btr
dec
mov
cmc
neg
clc
add
jbe
push
mov
push
mov
pushf
pushl
ret
pop
movzbw
mov
jmp
test
test
sub
pushf
call
mov
call
test
xchg
cmp
cmc
stc
mov
call
cmp
jmp
and
setg
cmc
mov
shl
cmc
bt
rcl
mov
jmp
push
push
mov
movb
movw
movb
pushl
lea
jmp
pusha
test
add
pusha
stc
pushf
call
pushf
jmp
pushf
add
jg
rdtsc
jmp
call
mov
push
movw
mov
lea
jmp
add
bsf
rcr
pushf
mov
cmp
add
pusha
push
pushl
lea
jmp
pushf
pushf
popl
jmp
pusha
pusha
jmp
pusha
pushl
mov
pusha
mov
lea
jmp
pushf
popl
movb
pushf
call
cmp
add
jmp
pusha
mov
mov
movb
pushf
repz
popl
jmp
pushf
call
mov
mov
call
sar
bt
movzbw
mov
rol
mov
clc
test
push
clc
add
pushf
mov
pusha
call
mov
jmp
push
mov
call
mov
pushl
lea
jmp
pushl
pushf
repz
popl
pushl
call
pusha
call
push
mov
pushl
popl
pushl
movb
mov
movb
lea
jmp
mov
call
mov
bswap
movzbl
pushf
movzbw
push
bswap
pusha
mov
std
mov
push
movsbl
lea
mov
jmp
pushl
mov
movb
pusha
pushf
call
pushf
movb
pusha
lea
je
clc
pusha
call
shrd
push
pushf
mov
call
push
call
pusha
mov
call
pushf
movl
stc
shr
pusha
mov
pushf
jmp
setb
mov
not
pusha
ror
bt
mov
ror
clc
xor
shld
xor
mov
cmp
stc
stc
add
push
dec
mov
push
lea
jo
mov
pushf
pushf
lea
jmp
pushf
pushf
pushl
popl
pushf
push
push
lea
jmp
mov
call
pusha
stc
push
sub
pusha
mov
pushf
lea
jmp
jmp
mov
jmp
pusha
push
pushl
popl
mov
push
movb
lea
jmp
pushf
pusha
mov
pusha
movb
movw
pushf
mov
pushf
jmp
pushf
jmp
clc
call
pushl
popl
pushf
push
lea
jmp
push
pusha
jmp
movzbw
movzbl
movsbl
sar
rcl
inc
sub
pusha
jmp
cmc
call
call
call
movl
pushf
jmp
aad
movsbw
pusha
call
pusha
push
push
dec
call
jmp
shld
push
movb
jmp
call
not
aam
aaa
or
mov
jmp
call
jmp
xchg
mov
lea
mov
std
cld
call
mov
jmp
sets
push
mov
mov
jmp
pusha
pushf
mov
push
lea
jmp
jmp
pushf
cmc
ror
mov
pushf
sub
stc
test
cmc
bt
shr
pushf
pushf
call
mov
movb
jmp
shl
adc
sete
shl
movzbl
btc
rcr
rcr
add
pushf
rcl
ror
pusha
lea
mov
pusha
movsbw
mov
dec
jmp
pushf
push
pushf
pushl
popl
push
movb
pushf
lea
jmp
and
jmp
jmp
pushl
popl
pushf
movb
movb
lea
jmp
repz
popl
neg
mov
add
shrd
mov
btc
mov
pushl
pop
dec
bswap
xchg
not
xchg
pusha
shld
mov
lea
bsf
sar
pushl
bsf
push
setno
bsr
rcl
mov
and
sub
shld
xadd
neg
bswap
call
push
repz
popl
jmp
not
lea
jge
test
sub
pushf
test
test
neg
pushl
test
stc
test
xor
test
bt
cmc
cwtl
pushf
cmp
jmp
mov
push
jmp
jmp
add
push
lea
jmp
pushl
mov
pusha
lea
jmp
divl
movw
mov
pushl
mov
pushf
push
pushf
popl
call
mov
mov
mov
movw
mov
lea
jmp
call
mov
call
pushf
call
shr
ror
pusha
sub
shl
movzbw
sbb
bswap
xor
bswap
not
and
inc
movsbw
adc
mov
cmp
cmc
bt
sub
pushl
pushf
jmp
mov
movb
mov
jmp
push
mov
call
mov
movb
jmp
lea
jne
inc
test
xorb
setbe
push
push
not
mov
pusha
lea
jmp
push
pushl
pusha
call
sbb
pusha
aas
not
mov
sbb
bswap
clc
bsr
mov
push
test
mov
add
pushf
mov
mov
pushf
pushf
lea
jmp
xor
rol
mov
cmp
push
pusha
pushf
add
movw
pushf
lea
jmp
movw
mov
mov
jmp
sub
stc
clc
add
push
jmp
mov
pushf
push
push
movb
mov
pushf
mov
call
bsf
mov
shl
neg
or
mov
call
pusha
mov
movw
jmp
pushf
mov
push
pusha
jmp
pusha
mov
call
xor
call
shld
aas
stc
jmp
call
push
mov
jmp
call
movb
jmp
lea
jne
push
lea
jne
rcl
push
shl
bsr
mov
push
jmp
jmp
daa
mov
add
movzbw
mov
clc
add
pushf
call
mov
push
mov
call
mov
movb
call
mov
mov
pushl
lea
jmp
jmp
mov
movw
jmp
mov
jmp
add
movb
pusha
call
cmc
not
and
movzbl
pushf
cmc
add
bt
push
ror
call
rol
lea
mov
jmp
jmp
mov
movb
mov
mov
push
pushf
mov
jmp
mov
call
inc
mov
pushf
add
jle
bt
bswap
call
sub
push
bt
call
pushf
jmp
call
pusha
pushf
div
jmp
movl
mov
jmp
movl
call
repz
popl
pushl
mov
call
adc
xor
mov
clc
push
add
movb
pushf
jmp
call
pusha
rdtsc
not
mov
mov
setb
mov
pushf
call
bswap
mov
call
add
pusha
pushf
lea
jmp
jmp
call
not
stc
not
call
jmp
pushl
popf
movb
movb
movb
lea
jmp
movw
jmp
mov
mov
mov
repz
popl
pushf
push
movb
mov
mov
mov
jmp
jle
push
movl
mov
pusha
call
jmp
mov
test
or
push
call
pushf
pushl
mov
movw
jmp
pushf
popl
jmp
adc
setp
shl
js
mov
bt
clc
stc
test
add
pushf
pusha
push
mov
pushf
pushf
pushf
mov
movb
lea
jmp
jmp
call
sbb
mov
cmc
not
bsf
movzbw
mov
bt
test
add
pushf
mov
mov
pushf
lea
jmp
mov
mov
pushf
push
lea
jmp
movb
jmp
pushl
popl
pushf
lea
jmp
sub
jmp
mov
setl
pusha
mov
stc
call
shl
aas
mov
cmp
xchg
cmc
cmp
xor
stc
not
pushf
cmp
sub
cmc
cmc
clc
add
cmc
jmp
pushl
sub
call
test
notl
ror
mov
clc
pusha
movb
cmc
sub
pushf
pusha
and
jmp
mov
pusha
pushf
pushf
push
lea
jmp
sub
cmc
push
cmc
jmp
push
mov
lea
jbe
push
pusha
pushf
mov
movb
lea
jmp
lea
sub
ror
not
and
sub
shr
mov
sub
mov
jmp
mov
movw
pushf
popl
mov
call
pushf
pushf
ror
test
stc
sub
pushf
cbtw
pushl
movb
cwtl
push
jmp
shl
mov
jmp
movb
xchg
pusha
call
sub
pushf
mov
pusha
pushf
lea
jne
stc
xor
call
mov
mov
movl
pushf
push
lea
jmp
pusha
pop
sbb
or
mov
cmp
add
pushl
lea
jmp
pusha
movb
pusha
mov
pushf
pushf
pushf
mov
jmp
cmc
add
mov
call
sar
pop
aad
pop
or
sar
bsf
rcl
pop
cwtl
neg
cltd
bt
pop
rdtsc
pop
bts
pop
btr
push
mov
adc
mov
pop
cmp
pushl
popf
jmp
mov
push
mov
pusha
lea
jmp
call
push
pushl
mov
pushf
mov
lea
jmp
stc
shr
mov
push
add
push
pushf
mov
lea
jmp
aas
inc
mov
cld
neg
pop
adc
jmp
mov
mov
mov
pushl
pusha
lea
jmp
mov
mov
push
lea
jmp
push
mov
call
lea
cpuid
cmc
cmc
pushf
sub
clc
cmpl
lea
jbe
pusha
pusha
mov
push
pushl
mov
call
push
lea
jne
shl
mov
clc
cmc
pusha
and
pusha
bt
bt
cmp
call
mov
push
pushf
mov
movw
mov
call
sub
pushf
mov
movb
push
movb
lea
jmp
pushf
mov
mov
push
pushf
lea
jmp
pushf
movl
pushf
mov
jmp
lahf
shld
mov
cmc
bt
cmp
add
pushf
pusha
mov
movb
mov
mov
push
push
lea
jmp
mov
mov
movw
push
mov
movb
lea
jmp
cmc
stc
sub
cmc
mov
test
xor
pusha
jmp
call
jmp
call
call
call
sub
rcl
rcr
pushf
movzww
cmc
cmp
stc
test
xchg
pushf
xor
pusha
clc
stc
jmp
sub
call
ror
add
ror
pusha
btc
neg
dec
pop
pushf
lea
dec
mov
ror
shl
sub
bswap
bts
bt
and
movzbl
jmp
sub
bt
clc
pushf
sub
call
jmp
jmp
cmp
bt
push
add
mov
pushl
mov
mov
mov
pushf
mov
pusha
mov
pushf
lea
jmp
mov
push
push
mov
mov
repz
popl
pushf
mov
call
call
pusha
mov
movb
call
call
pushf
mov
pushf
lea
jmp
lea
pushf
sar
mov
pusha
jmp
mov
pushf
jmp
jmp
bt
xor
pushf
xchg
push
jmp
stc
pushf
btc
mov
or
bsr
mov
mov
cmp
add
pushf
movw
mov
pushl
lea
jmp
xor
pushf
add
bt
test
mov
pusha
jmp
mov
pushf
movb
lea
jmp
mov
call
pushf
add
push
lea
jmp
mov
movb
push
jmp
cmp
test
xor
stc
cwtl
test
sub
pushf
call
push
push
jmp
mov
jmp
test
jmp
push
mov
push
lea
jmp
lea
jns
pushf
mov
push
push
mov
mov
mov
push
repz
popl
call
repz
popl
mov
mov
mov
call
push
jmp
and
sbb
mov
shr
jmp
push
mov
push
call
pushf
mov
jmp
jmp
cmp
sub
pushf
pusha
mov
movb
jmp
mov
call
call
push
push
mov
mov
pushl
push
pushf
pushf
mov
jmp
call
add
jge
xor
pusha
pusha
xchg
stc
push
mov
cmc
jmp
mov
mov
lea
jmp
mov
pushf
call
lea
jae
pushf
pushf
jmp
mov
pushl
pushl
pusha
jmp
pushl
popl
push
push
movb
lea
jmp
call
push
pushf
mov
call
test
xorb
not
setne
pop
pusha
pusha
lea
jmp
push
mov
push
push
pusha
pushl
repz
popl
movw
pushf
mov
call
mov
mov
pushl
ret
pushf
jmp
lea
neg
xor
call
push
pushf
mov
pushf
mov
call
sete
cwtl
test
pusha
mov
sets
sub
jg
mov
cmc
add
pushf
call
push
push
mov
mov
mov
jmp
push
mov
pusha
mov
call
call
shl
pushf
mov
pushf
call
call
jmp
mov
pushl
popl
movb
movb
lea
jmp
pushf
mov
pushf
push
pushf
lea
jmp
push
xor
bsf
mov
add
jp
sub
jmp
pushf
add
je
bt
stc
sub
pushf
movw
jmp
pushf
popl
pusha
movl
pushl
popl
mov
pushf
movb
pushf
lea
jmp
pushf
mov
call
call
bswap
jmp
mov
call
pushf
mov
pusha
pushl
pusha
movw
lea
jmp
shr
test
call
mov
pushf
call
pushl
bswap
pushf
mov
dec
test
stc
cmc
pushl
add
jmp
xor
mov
push
mov
jmp
ror
clc
sub
push
test
cmp
sub
jmp
call
movb
jmp
dec
shr
rcl
mov
pusha
pusha
add
pushf
mov
pushf
lea
jmp
pusha
call
call
bt
mov
jle
add
push
lea
jmp
pushf
mov
call
movb
mov
jmp
jmp
repz
popl
mov
pusha
mov
pushf
push
call
pusha
push
mov
pusha
mov
pushf
mov
mov
push
call
lea
jbe
push
pushf
pushf
pusha
pushf
lea
jmp
movw
mov
movb
movl
movb
lea
jmp
mov
pushf
pushf
pushl
lea
jmp
repz
popl
call
jmp
not
lea
jmp
pushl
popl
call
mov
movw
jmp
movsbl
bswap
mov
push
pushl
ret
mov
bswap
cmp
pusha
jmp
call
stc
jmp
pushf
mov
pushf
pushf
push
pusha
lea
jmp
pushf
mov
pushf
pushf
mov
lea
jmp
shl
cmp
call
neg
mov
aaa
pushf
cmp
mov
movsbw
clc
dec
mov
jmp
push
repz
popl
pushf
push
call
call
call
mov
pushf
pusha
pushf
push
pushl
ret
jl
pushf
pusha
movw
mov
pushf
pushf
pushl
jmp
mov
mov
call
pushl
pushl
pushf
popl
lea
jno
popl
pushf
pushf
movw
push
lea
jmp
cmc
mov
and
pushf
jmp
call
pusha
jmp
mov
pushf
push
mov
lea
jmp
stc
call
movsbw
inc
mov
stc
sub
stc
add
jl
pushf
push
pushf
push
pushl
popl
pushf
lea
jmp
movw
mov
pushf
pushf
push
lea
jmp
mov
push
mov
jmp
bt
cmp
call
clc
neg
bt
cmp
cmp
stc
xor
call
add
pushf
jmp
sub
call
stc
mov
add
call
call
cmc
sub
jmp
bsr
mov
cmc
shl
stc
add
jmp
mov
push
mov
lea
jmp
jmp
movl
push
mov
pushf
jmp
clc
cmc
sub
movw
mov
pusha
pushf
movb
push
lea
jmp
pushf
dec
jmp
mov
pusha
lea
jne
bts
push
movsbw
not
xorb
lea
movsbl
mov
pop
pushf
pusha
mov
lea
jmp
shr
mov
mov
shl
xor
mov
test
push
sub
call
pushl
popl
push
lea
jmp
mov
bswap
push
mov
call
dec
cmc
test
test
add
bt
pushf
call
jmp
movb
jmp
call
pushf
mov
pushf
mov
pushf
popl
jmp
loope
mov
pushl
adc
incl
sbb
cmp
or
mov
or
pushl
mov
jmp
daa
mov
call
push
mov
jmp
mov
incl
or
incl
adc
ljmp
push
mov
cmp
sbb
pushl
mov
ficomps
mov
sub
ljmp
sub
pushl
mov
lcall
mov
call
mov
jmp
daa
mov
incl
and
mov
call
adc
lcall
mov
decl
push
mov
dec
das
mov
jg
mov
ljmp
sbb
dec
das
mov
ljmp
jmp
or
jmp
mov
mov
or
decl
or
pushl
mov
call
mov
mov
xor
call
mov
inc
and
pushl
mov
lcall
and
jmp
and
mov
pushl
and
jmp
sub
ficomps
mov
lcall
adc
ljmp
mov
dec
daa
mov
out
or
decl
daa
mov
ljmp
sub
jmp
and
mov
mov
sbb
pushl
mov
decl
push
mov
jmp
sub
inc
and
mov
sub
jmp
mov
lcall
mov
jmp
mov
cmp
sub
ljmp
mov
decl
push
mov
lcall
mov
incl
mov
std
das
mov
jmp
sbb
lcall
mov
ljmp
sbb
ficomps
mov
pushl
sbb
ficomps
mov
pushl
sbb
ljmp
and
mov
ljmp
mov
jg
mov
pushl
mov
inc
and
incl
mov
mov
pop
jmp
or
ljmp
and
mov
call
mov
std
mov
jmp
mov
pushl
sbb
sub
pushl
sbb
ljmp
pushl
sbb
decl
push
mov
pushl
sbb
call
mov
pushl
sbb
lcall
mov
pushl
sbb
incl
pop
mov
jmp
sbb
pushl
and
pushl
das
mov
incl
sub
incl
sub
ljmp
mov
jmp
daa
mov
decl
sbb
jmp
mov
pushl
sbb
std
das
mov
pushl
sbb
incl
std
das
mov
jmp
sbb
jl
mov
pushl
sbb
mov
and
mov
call
popl
jmp
call
call
movsbw
mov
pusha
pushf
mov
pusha
lea
call
pusha
xchg
push
stc
clc
mov
pushf
pushf
test
sub
movw
call
mov
mov
call
mov
movw
pushf
lea
jmp
and
pushf
sub
xor
not
rol
add
push
mov
call
jmp
jmp
mov
mov
mov
push
movb
pushf
lea
jmp
mov
pusha
push
pushf
lea
jmp
add
lea
js
pushf
dec
pushf
pushf
bswap
movb
call
pusha
call
not
pushf
pusha
ror
mov
cmp
add
pushf
lea
jmp
lea
lea
mov
call
mov
mov
pushl
push
mov
lea
jmp
lea
jne
bswap
mov
pushf
test
pushl
and
test
pusha
stc
stc
cmp
pushl
pushf
lea
jne
movsbl
jmp
pusha
mov
pushf
cmc
add
jmp
mov
mov
pushl
jmp
jmp
mov
jmp
mov
pushl
lea
jmp
ror
add
bt
test
mov
pushf
movb
sub
call
pushf
push
mov
pushl
pushf
pushl
mov
mov
mov
push
push
call
das
btc
clc
rdtsc
cmp
sub
pusha
push
mov
push
movw
movw
movl
mov
pushf
lea
jmp
mov
pusha
mov
movb
lea
jmp
jmp
mov
pusha
mov
lea
jmp
call
push
push
lea
jne
bt
jmp
mov
neg
dec
bt
mov
bt
call
pusha
pushl
popl
pushf
lea
jmp
push
pusha
movb
push
pushl
popl
movb
pushf
pushf
pushf
lea
jmp
sub
mov
and
push
pushl
call
mov
push
mov
lea
jmp
pusha
pushf
pusha
pushl
mov
pushf
push
movb
mov
lea
jmp
lea
jne
pushf
cmc
cmp
sub
call
mov
jmp
pushl
mov
pushf
lea
jmp
mov
jmp
call
xchg
jmp
add
push
push
call
mov
jmp
dec
pushf
call
pushf
pusha
push
mov
pushf
popl
pushf
jmp
call
dec
bt
test
call
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
rcl
and
mov
neg
shl
sub
rol
mov
push
sub
movb
mov
test
clc
shl
pushl
pusha
mov
pushf
call
btr
shr
rcl
rol
mov
test
push
push
jmp
pushf
popl
mov
call
call
push
movb
bswap
lea
mov
jmp
stc
stc
sub
pushf
push
movl
call
pushf
mov
call
pushl
movl
pushl
push
mov
mov
pushf
push
pushl
ret
call
mov
push
pusha
pushf
repz
popl
jmp
neg
call
mov
pushf
lea
jmp
push
pushf
mov
push
movb
repz
popl
pushl
mov
push
mov
mov
mov
jmp
jmp
pushl
lea
push
mov
push
mov
lea
jmp
pushf
lea
pushf
mov
mov
mov
mov
mov
pushf
push
lea
jmp
xadd
dec
btc
sub
mov
mov
rcl
seto
mov
cmp
pushf
sub
bt
pusha
mul
pushf
movb
mov
pushl
call
movb
mov
pushf
pushl
pushf
mov
pushf
push
pushf
popl
pushl
pushl
popl
pushf
push
lea
jmp
pushf
pushl
popl
pushf
mov
push
movw
lea
jmp
mov
mov
mov
jmp
jmp
push
call
rcl
call
pushf
popl
mov
jmp
jmp
inc
lea
mov
mov
sub
add
not
call
call
add
pushf
pushf
mov
lea
jmp
mov
push
jmp
push
call
mov
movb
call
mov
push
pushf
lea
jmp
sar
add
cmp
bt
mov
or
sbb
xor
push
dec
dec
sub
call
jmp
push
push
push
mov
pushf
mov
mov
call
call
jmp
shl
pushf
mov
shl
neg
mov
jmp
mov
pushl
pusha
mov
pushf
lea
jmp
push
pushf
pushf
pushf
popl
jmp
clc
stc
add
movb
call
sub
test
cmp
test
shl
pushf
mov
call
cmp
push
call
call
call
mov
pushf
call
mov
push
pushl
mov
pushf
push
pushf
lea
jmp
pusha
pushf
rep
clc
xor
or
mov
test
pop
mov
push
jmp
dec
mov
test
lea
jne
sub
pusha
call
call
push
repz
popl
mov
mov
mov
mov
mov
pusha
jmp
lea
jp
je
bt
stc
xor
call
btr
bts
not
movsbw
bswap
rol
or
jmp
xchg
mov
and
mov
stc
sub
pushf
shr
call
pushf
popl
call
sub
and
clc
rol
xor
neg
movsbw
or
not
and
ror
mov
stc
pushl
add
lea
jne
mov
pusha
pusha
lea
jmp
mov
lea
ja
cwtl
mov
rcl
lea
btr
lea
bsr
adc
adc
sub
cmp
bsr
shrd
call
rcr
test
mov
jmp
aad
shld
and
pushf
mov
stc
jmp
push
pusha
mov
pusha
pushl
ret
bt
pushl
sub
test
jmp
pushf
call
call
add
adc
ror
movzbl
clc
pushf
sub
movb
cmc
pushf
mov
ror
bt
movw
test
pusha
neg
call
pushf
popl
pushf
pushf
pushf
pushl
popl
movb
lea
jmp
mov
jmp
mov
pushf
pushf
pushf
popl
movl
pushl
popl
pusha
mov
pushl
movl
lea
jmp
mov
mov
call
mov
mov
mov
movb
push
push
lea
jmp
call
pusha
stc
pusha
add
cmc
pushl
popf
pushf
mov
pushf
movb
lea
jmp
call
push
pushl
mov
pushl
lea
ja
pushf
mov
mov
pushf
call
push
pusha
mov
movw
mov
pushf
mov
call
call
add
add
mov
pusha
movb
mov
push
jmp
movw
call
jmp
pushf
mov
movb
mov
call
cmc
stc
add
pusha
pusha
push
mov
lea
jmp
not
bt
bt
ror
clc
xor
cmp
mov
push
sub
jmp
mov
push
pushf
lea
jmp
push
jmp
mov
jmp
adc
movzbl
pusha
test
sub
stc
mov
clc
ror
pushf
pushl
dec
clc
clc
neg
jmp
shrd
btc
add
pusha
movzbw
push
movzbl
pushf
dec
shr
shl
mov
clc
stc
push
neg
cmc
clc
clc
pushl
add
lea
jge
push
pushf
movb
pushl
ret
pushf
pushl
lea
jne
jmp
clc
sub
jmp
mov
pusha
movb
pushl
ret
mov
jmp
shld
movsbw
clc
mov
or
bsr
xor
add
shl
ror
add
bts
xor
and
adc
mov
jmp
mov
mov
pushf
mov
call
rcl
mov
xchg
pushf
mov
rcl
mov
cmc
add
pushf
cmc
lea
jbe
cmp
shrd
pusha
mov
push
pusha
lea
ja
push
pushf
popl
jp
pushf
push
pushl
pushl
popl
mov
pusha
lea
jmp
lea
jno
push
pusha
pusha
lea
jmp
mov
jmp
pushf
pusha
pusha
pushf
mov
pushf
pushl
mov
push
pushf
repz
popl
jmp
mov
mov
pushf
mov
pushf
lea
jmp
mov
push
lea
jmp
call
mov
pushf
pusha
pushl
push
lea
jmp
call
mov
jmp
movb
push
mov
jmp
mov
call
pushl
popl
movw
lea
jmp
