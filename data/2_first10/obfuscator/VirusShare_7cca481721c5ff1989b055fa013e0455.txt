cmp
in
sbb
aad
mov
sbb
xor
mov
cmpsb
jae
and
clc
icebp
andb
and
lock
scas
idiv
in
fcoms
cmp
fwait
xchg
inc
pop
pushf
mov
add
inc
lret
mov
shll
rorb
inc
cmp
jbe
jae
pop
jbe
and
dec
ficompl
shlb
or
dec
outsl
inc
mov
adc
lods
scas
sub
arpl
push
push
lods
xor
mov
inc
pushf
push
xorb
fs
std
loope
aas
dec
daa
scas
into
das
out
or
pushf
ret
iret
cmp
popa
adc
fcomip
mov
dec
lods
aaa
aas
movsb
iret
test
mov
jo
adc
xchg
shl
pop
rcrb
arpl
cld
outsb
mov
xchg
add
sbb
xcrypt-ctr
cmpsl
fnstsw
testl
jae
out
js
ret
push
test
clc
push
cmpb
call
and
out
sbb
xchg
stc
xchg
mov
bound
rorb
inc
dec
push
je
mov
out
dec
gs
mov
xchg
jns
cmpsl
mov
add
sub
adcb
inc
lods
pop
fmull
xor
mov
movsb
and
sub
jg
jae
and
add
arpl
mov
mov
in
add
sbb
push
pop
je
mov
out
js
call
xchg
aaa
push
pop
outsl
scas
or
pop
movsl
flds
cmp
xlat
xchg
mov
mov
add
stos
pop
mov
cmp
rcr
sbb
mov
cmp
ljmp
sti
in
push
data16
dec
int
xchg
adc
cwtl
lcall
sahf
rcr
cmp
push
test
adc
jl
cwtl
and
mov
sub
rclb
ficoms
sahf
mov
fcomi
sbb
jnp
out
mov
adc
dec
and
jb,pt
shll
mov
and
add
pop
sbb
outsb
mov
int
repz
push
outsb
dec
jnp
rclb
mov
mov
lods
sub
xchg
mov
cmp
pop
lds
xchg
sbb
movb
test
lahf
jo
cmp
sub
imul
push
js
arpl
add
cmc
inc
pop
outsb
xchg
daa
or
lahf
adc
insb
cmpb
mov
pop
xor
sbb
popa
xchg
aad
addr16
or
sti
cmp
mov
push
gs
das
movsl
hlt
stos
ret
xlat
lock
lahf
jae
stos
pop
cmpsl
cmp
add
jg
cli
sbb
mov
std
pop
inc
push
jg
movl
fcoms
push
addr16
jp
lret
push
mov
add
sub
jb
sub
cmp
add
dec
push
add
pusha
mov
lea
call
push
mov
push
pushf
lea
jmp
rol
lret
int
lods
sbb
jmp
dec
dec
arpl
xchg
lahf
ret
test
inc
loop
pushf
in
dec
test
addr16
xchg
jbe
jp
mov
mov
inc
repz
pop
jbe
stc
or
stos
mov
pop
sbbl
mov
stos
push
jbe
js
push
pop
jno
dec
fldt
xchg
clc
in
mov
or
pop
or
ret
pop
fucomip
adc
out
daa
push
jnp
mov
cld
mov
push
cld
mov
cmp
push
movsl
xchg
mov
xchg
pop
loopne
cmp
and
adc
lea
sbb
icebp
cmp
flds
mov
dec
jns
dec
pop
in
pop
push
inc
pop
cltd
test
stc
or
dec
popa
imul
rcl
mov
loop
jae
das
xchg
mov
ret
xchg
sub
mov
xlat
loope
xor
fwait
mov
cli
mov
push
push
loope
into
or
push
push
push
jo
mov
sbbl
add
in
arpl
call
ficompl
xor
data16
sar
mov
mov
cmpl
shl
getsec
inc
arpl
mov
and
mov
dec
sti
ret
loop
test
arpl
jmp
int
mov
loop
cmp
fiadds
jbe
call
mov
into
int3
add
push
push
insb
lcall
decb
popa
xchg
aam
push
pop
idivb
push
cmp
sub
pop
push
mov
repz
add
cmp
push
je
das
push
push
jmp
add
mov
scas
and
fsubrp
lock
adc
pop
fisubs
pop
jae
mov
push
jnp
mov
out
mov
jecxz
popf
das
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
shr
and
in
test
sahf
pushf
into
aam
adc
dec
jle
mov
or
adc
xchg
dec
pusha
ret
rolb
push
iret
outsb
pushf
jmp
cmpb
add
dec
ja
xor
es
jno
data16
imul
mov
push
insl
insl
jno
popf
mov
jecxz
shll
movl
and
jb
call
test
mov
les
sbbl
inc
dec
jge
xchg
shl
xor
fisubl
mov
repnz
pop
fisttpl
cs
jp
incl
xor
cmp
sub
add
shll
dec
or
call
pop
adc
and
push
dec
pop
loop
je
fsubrp
hlt
repnz
pop
stos
insl
pop
das
or
cwtl
loop
pushf
push
jmp
mov
fbstp
pusha
sahf
iret
sub
es
cmpb
jp
sub
popa
lods
ds
andb
xchg
sub
orb
cs
jo
mov
push
inc
add
push
push
cwtl
sbb
dec
dec
push
mov
lahf
out
repnz
fdivs
jecxz
orb
stos
or
hlt
in
stos
cltd
leave
inc
adc
pop
std
cmp
mov
dec
imul
cltd
addb
sbb
mov
jl
sahf
into
or
inc
loop
movsb
jmp
mov
movntq
ror
xor
adc
pop
mov
mov
mov
add
insb
cmp
fisttpll
adc
push
cmpsl
pop
xchg
and
dec
jmp
or
xchg
test
in
or
and
xchg
fimuls
xor
into
stos
cli
bound
add
adc
dec
fwait
jp
inc
pop
sbb
xor
jae
lods
fisttpll
stos
mov
int
mov
or
fsubr
or
ja
lea
mov
adc
int
fisttpl
lret
mov
sti
add
mov
xor
push
int3
outsb
xchg
jp
movsb
dec
jge
mov
mov
mov
xlat
fstl
xor
mov
call
fildll
jns
lods
jp
xchg
sarl
lods
loopne
and
pop
pop
add
insb
mov
out
adc
mov
push
xor
xchg
mov
adc
ret
fwait
mov
sti
dec
add
outsb
addb
xor
xorb
inc
fwait
sub
cmpsl
out
repnz
push
pop
scas
bound
mov
fwait
repz
sti
inc
stos
ficomps
push
dec
lret
and
fistl
stos
adc
cmpb
les
dec
test
pop
test
insb
movsb
cmp
push
sti
inc
pusha
jnp
cmp
gs
test
sbb
push
jne
xchg
popf
mov
out
dec
shll
andl
mov
aaa
insl
xchg
leave
sti
adc
pop
mov
out
pop
mov
inc
dec
lahf
pop
std
sub
incb
fsts
cmp
push
test
sti
cmp
lret
sub
out
dec
dec
mov
iret
icebp
daa
pop
pop
mov
add
stos
sub
mov
inc
or
lcall
pop
mov
popf
shr
and
cmpl
cmp
les
add
mov
out
out
sbb
pop
arpl
dec
sub
or
cmp
mov
test
dec
outsl
jge
fwait
int
stc
sub
add
ljmp
jae
cwtl
mov
test
lahf
and
cmp
inc
dec
sub
sbb
sub
popf
shl
xor
es
inc
jnp
mov
test
pushf
mov
inc
jle
mov
in
jmp
sub
shl
xor
xchg
lods
cmc
inc
cmc
inc
mov
cmc
inc
hlt
inc
repz
dec
imul
jge
aam
add
les
shlb
shl
xor
push
data16
orb
xor
jno
jns
testb
cmp
test
push
sbb
sbb
jp
shrl
mov
cltd
lods
shr
add
ds
aaa
lret
and
xlat
cld
stos
pop
lods
add
outsb
int3
jmp
es
adc
dec
pop
rcrl
loopne
fstps
jo
mov
jae
lea
fstpt
xchg
vpsllw
sbb
pop
mov
in
or
insl
popa
addr16
imul
ja
aas
cmpsl
sarl
fldt
add
xor
arpl
mov
imul
lock
xor
add
pusha
lcall
iret
pusha
fs
cmp
sub
xor
mov
clc
loopne
inc
push
xchg
cmc
add
aaa
xchg
sbb
imul
mov
shlb
les
jno
ds
bound
imul
insl
xor
nop
shlb
lock
inc
jbe
clc
or
testl
jp
and
push
pushf
iret
xor
or
repnz
sub
loope
roll
ret
hlt
mov
dec
sub
rolb
fisubs
mov
sbb
daa
jbe
push
push
push
cmp
mov
add
mov
or
push
and
xchg
push
sbb
mov
sbb
push
adc
jecxz
adcb
lods
dec
test
stc
sbb
mov
outsl
mov
mov
shrl
push
dec
inc
push
inc
dec
js
subl
inc
ret
push
inc
in
dec
cwtl
dec
movsl
sarl
add
push
jo
lods
pusha
repnz
js
stos
lods
addl
inc
addl
fbld
movd
popf
cli
jl
fcoms
test
lods
int
or
jne
fprem1
or
mov
ljmp
fists
popf
xchg
dec
xchg
scas
xor
pop
jns
shr
stc
add
fdiv
sti
cs
insb
shlb
mov
mov
adc
lods
stos
xorb
fcoms
sbb
or
js
loop
nop
sub
add
repz
int
jno
stos
and
jns
inc
test
in
and
loope
or
sub
pop
mov
cmp
pop
jbe
push
out
es
push
nop
ret
sbb
xor
push
movsl
sub
popa
mov
aam
push
aad
adc
insb
adc
mov
call
cwtl
push
add
adc
and
sbb
fs
adc
ret
loopne
in
jne
mov
sbb
pop
pop
repz
pushf
pop
and
repnz
mov
adc
mov
subb
mov
mov
cwtl
lcall
inc
cld
adc
fsubrp
lcall
test
sbb
ja
fcomip
sti
sbb
mov
sub
es
aas
imul
loope
and
dec
inc
push
xchg
jmp
add
aam
loopne
push
add
test
or
add
cmp
ja
add
push
ror
or
ret
jae
cwtl
lahf
push
mov
je
mov
test
orb
insb
pushf
rcr
loopne
dec
mov
jmp
in
outsb
stos
adc
cs
inc
rorb
sbb
ret
sbb
jo
lods
cltd
int
xchg
push
into
mov
xchg
xor
mov
js
mov
gs
jl
or
pop
pop
push
test
adc
inc
out
jl
and
mov
popa
icebp
aas
out
fiadds
bound
int
fwait
xlat
movsb
xchg
loop
mov
push
pusha
js
xchg
mov
je
mov
sub
or
mov
sub
iret
std
pop
xor
sbb
sub
and
xchg
mov
cwtl
mov
inc
xchg
inc
push
mov
mov
jae
ss
into
hlt
stos
dec
push
das
mov
cltd
sub
dec
add
xor
or
aas
cmp
inc
pop
jbe
ficoms
lcall
divb
inc
dec
pop
pop
nop
xchg
mov
js
mov
call
repnz
mov
test
daa
sub
lret
cmc
sub
mov
test
popf
or
push
xor
cmp
xor
adc
lea
nop
test
push
in
add
sbb
jmp
int3
jle
mov
add
andl
popf
das
pop
jg
rcl
in
pop
sahf
xchg
push
lahf
dec
scas
xor
das
dec
call
push
jnp
pop
xchg
cmp
push
pop
xchg
xchg
sbb
outsl
test
sbb
xor
mov
sub
jle
pop
lea
call
push
pusha
lea
jae
jmp
movw
lea
je
cmp
or
pushf
jmp
jbe
and
push
in
push
repz
xchg
mov
jne
mov
push
push
fldcw
jp
pop
mov
inc
push
outsb
fwait
clc
mov
cmp
stos
ret
ret
out
pop
sub
lods
add
mov
xchg
imul
out
hlt
cli
add
pop
mov
xlat
ss
lods
stos
mov
mov
jnp
stos
leave
fucomip
pop
cmp
loop
cltd
and
dec
outsb
jle
xor
fidivrl
inc
imul
idivl
cmp
and
and
scas
lret
jae
ret
mov
mov
sub
dec
pop
fsubrl
cmp
sti
adc
sub
inc
ss
push
scas
cwtl
inc
and
dec
pop
popf
mov
jno
sbbb
push
mov
aas
ja
mov
xchg
idivb
inc
jp
mov
scas
and
sbb
dec
jp
sbbb
jecxz
cmc
adc
scas
mov
subb
or
outsb
ds
push
stos
mov
push
pop
mov
lret
lock
push
xchg
xchg
xchg
or
jns
sub
ss
icebp
pop
pop
movsb
ss
shrb
pop
aaa
cmpsb
mov
stc
std
lock
and
ja
int3
into
pop
sub
test
cmp
inc
imul
sbb
stc
lea
je
add
pushf
dec
push
pushl
jmp
mov
push
pushf
pushl
ret
dec
ds
push
mov
push
ljmp
mov
cld
jmp
aaa
xor
sbb
add
or
push
mov
nop
insb
mov
fwait
inc
ja
hlt
inc
mov
jmp
jne
cli
inc
mov
xor
test
dec
sarl
jo
sbb
outsb
ljmp
add
lcall
or
in
cmp
loopne
lods
vmovhpd
jb
call
ror
push
jns
testb
jne
outsb
nop
test
in
adc
cmp
mov
sub
fdivrl
rcll
mov
push
stc
lods
mov
out
clc
sub
mov
dec
or
jmp
jmp
inc
pop
inc
adc
push
lds
xor
cmp
shrl
das
mov
arpl
pop
call
ret
imul
lock
sbb
call
pushf
pushf
repnz
loopne
mov
sbb
mov
inc
inc
jae
fwait
stos
stos
mov
out
sbb
outsl
cmpsl
jecxz
mov
aam
int
lea
je
call
fwait
aas
dec
pop
xchg
shll
out
jns
adc
fincstp
add
in
int
int3
mov
in
popa
xchg
xor
lahf
xlat
cli
dec
pushl
dec
mov
push
std
mov
outsl
mov
out
push
pop
push
call
data16
icebp
int
insl
aam
sbb
cmp
inc
push
sbb
xor
pop
imul
nop
xchg
mov
push
add
mov
aad
shl
sti
stos
or
and
push
push
js
mov
and
sub
int
mov
aaa
xor
inc
jb
sahf
cmp
cmpsb
pushf
jo
push
test
movsb
movsl
and
xchg
aad
fisttpl
ja
je
pop
xchg
cld
nop
pushf
pushf
lods
fisubs
sahf
scas
in
xchg
test
pop
js
push
xor
xchg
or
cwtl
cwtl
mov
sbb
dec
pusha
jo
mov
stos
bnd
mov
call
aad
cmc
pop
sub
dec
sbbl
cmp
jbe
roll
mov
cmp
ret
addl
imul
fs
jp
dec
pop
in
call
cmp
dec
xlat
push
sub
jae
imul
and
jo
inc
mov
lea
or
out
or
mov
fbstp
fdivr
push
mov
pop
pop
outsb
into
push
je
addr16
test
cld
sahf
sub
xchg
aaa
imul
push
lea
cmc
call
sub
add
cmp
aas
xchg
jmp
jae
mov
xor
sbb
ss
ja
xor
inc
call
jb
dec
addr16
cmpsb
aad
push
test
lods
dec
xchg
in
cmc
mov
js
push
dec
mov
cmp
ljmp
data16
xchg
xchg
xchg
lcall
stos
mov
jae
mov
filds
push
xchg
mov
mov
adc
pop
test
in
sub
mov
rorb
insb
xchg
xchg
mov
push
mov
add
pop
pop
xchg
mov
mov
daa
push
xchg
mov
mov
inc
outsl
jnp
bnd
push
and
and
pop
inc
nop
fs
add
mov
je
xchg
jl
pop
adc
mov
fs
ljmp
inc
aam
add
pusha
push
movsl
sub
lock
dec
faddl
or
adc
sub
inc
push
jbe
mov
inc
andb
mov
pushf
pusha
lea
je
call
movsb
dec
bound
and
lods
mov
dec
jbe
stos
fdivr
sbb
push
insl
nop
sub
dec
jae
in
push
add
cmp
sti
dec
frstor
call
fbstp
xchg
arpl
push
adc
pop
fsub
push
fs
imul
popl
es
dec
fiadds
sbb
mov
xchg
fcom
jns
jnp
mov
sub
jmp
add
xchg
cltd
shl
cmc
xor
mov
shlb
imul
inc
test
sbb
pusha
jb
lret
adc
sub
xor
arpl
jge
push
push
cmp
repnz
addl
in
sub
test
sbbb
scas
xchg
test
int3
pop
mov
daa
xchg
and
fbld
lock
adcl
ds
outsl
jg
aas
mov
je
movsb
mov
orb
pop
les
shr
mov
cmc
cmpb
push
pushf
call
jmp
inc
test
inc
xor
movsl
mov
xlat
add
cmp
movsl
daa
pop
sti
mov
add
cmp
fwait
lahf
ret
cmpsb
mov
xchg
pop
add
jp
aam
pop
pop
ss
imul
and
fisubrs
jae
jl
dec
pop
clc
aaa
lret
mull
pop
outsb
outsl
test
dec
xor
int3
fcmovu
fdiv
rcr
xor
push
incb
sbb
adc
inc
nop
mov
test
mov
cld
cmp
mov
push
mov
roll
mov
jmp
jp
sub
and
mov
mov
sbb
int3
shrb
scas
fcomp
xchg
imul
shl
push
popf
leave
sbb
orb
xchg
lcall
xchg
test
addb
add
shrd
and
inc
fwait
sbb
ret
fildl
cwtl
sbb
xchg
aas
cmp
into
push
ds
adcb
outsb
jp
mov
rcll
push
jns
sub
dec
adc
pop
xor
xlat
icebp
mull
inc
push
lods
add
push
add
mov
test
lods
push
add
pop
add
das
dec
shlb
inc
movsw
in
jo
sub
je
pop
fwait
sbb
sbb
andb
cs
push
sbb
pop
mov
mov
fidivrs
in
pusha
sbb
shr
sub
lea
pushf
jmp
shr
jmp
dec
out
adc
es
xchg
shl
adc
pop
subb
pusha
mov
sub
sub
bound
pushf
mov
jg
arpl
rorl
xorb
imul
cmp
push
jns
cli
inc
cmpsl
add
sub
mov
and
jno
loopne
lahf
jmp
jb
sub
xor
mov
test
fs
jmp
dec
pop
mov
jns
cmp
mov
xchg
movsb
in
add
add
xchg
movsl
mov
fimuls
das
push
pop
cwtl
mov
jmp
or
test
cmp
inc
sti
rol
out
mov
pusha
push
xchg
adc
dec
in
cli
das
xchg
clc
fs
dec
addb
inc
cltd
lds
jo
call
push
push
mov
cmp
test
out
mov
lds
xchg
test
adcl
xchg
sub
sbb
inc
jb
xchg
inc
dec
orb
movsb
cmp
clc
adc
mov
hlt
es
push
push
mov
sbb
or
in
out
add
pushf
popa
nop
movsb
lods
das
pop
sbbb
loope
cmpsb
aad
jns
push
jge
add
sti
sbb
sahf
pushf
in
lret
or
lcall
stos
adc
cmpl
mov
ret
dec
loope
inc
mov
imul
cmp
mov
xchg
call
cmp
loopne
sbb
jl
mov
mov
fadd
inc
fimull
fs
je
push
or
add
adc
clc
mov
cmc
pusha
pushl
add
test
movl
stc
mov
lea
mov
pushf
mov
cmc
movb
cmp
call
mov
push
push
jle
repz
sti
and
xor
xor
pop
sub
adc
or
jnp
dec
loop
addr16
leave
mull
por
bound
loop
and
jecxz
add
insl
dec
push
pop
in
sarl
sahf
mov
in
sbb
outsl
and
outsb
mov
push
gs
cltd
mov
jns
rcr
adc
lods
mov
pushl
pushf
movb
pushl
ret
mov
outsb
lcall
mov
push
or
dec
bound
jnp
insb
or
jg
dec
jnp
mov
ja
bound
lret
stc
mull
scas
jle
dec
sbb
mov
push
pop
inc
mov
lcall
xchg
or
push
lea
ja
out
scas
imul
loopne
in
pushf
rcr
sub
mov
mov
cmpsb
fdivr
es
and
mov
sub
pop
jg
out
jge
aaa
in
add
cmp
mov
cld
adc
lea
je
xchg
sub
movzbw
btr
add
bsf
add
bswap
neg
sub
shld
and
cmc
shr
test
mov
rol
not
rcr
ror
add
and
add
or
xor
rcr
neg
mov
cmp
cmc
test
test
shr
test
call
cli
sahf
test
cli
mov
jmp
add
scas
aad
sbb
xor
fists
mov
push
mov
push
add
and
mov
cwtl
sub
jge
push
sub
or
and
push
dec
int3
xor
dec
jb
push
add
out
cmpb
sub
add
push
jle
mov
lock
xchg
mov
mov
mov
cmp
pop
test
or
or
cmp
je
cld
push
and
dec
jp
mov
sar
push
and
pop
gs
mov
and
insl
sahf
loope
add
out
outsb
and
lahf
hlt
test
xchg
imul
sub
xchg
and
mov
cmp
subb
pop
xchg
sahf
sbb
xor
cltd
out
pop
iret
pop
sti
push
pop
mov
sbb
mov
and
jmp
lcall
jp
arpl
or
cmp
je
nop
xchg
enter
dec
push
pop
mov
fcmovnbe
cmp
add
dec
gs
popa
addr16
outsl
js
add
jae
cmp
jecxz
sahf
xor
xor
test
pop
jbe
lcall
fbstp
xlat
push
aas
inc
add
test
add
inc
clc
and
jg
or
inc
imul
push
and
sbb
dec
lret
repz
movsb
mov
out
and
push
clc
add
push
adcb
test
mov
pushl
ret
fiadds
mov
dec
fiaddl
cmp
test
loopne
repnz
mov
jns
jbe
jae
mov
jae
rclb
in
mov
jne
pop
loopne
repnz
popl
mov
rorl
mov
fnsave
pushf
repnz
jae
movsb
scas
ficoms
dec
push
mov
decb
mov
fdiv
adc
call
xor
loopne
dec
xlat
imul
daa
cmp
stc
and
mov
cli
adc
push
and
cmp
pop
mov
nopl
sbb
pop
mov
ljmp
out
sub
dec
int3
in
cmp
pop
inc
xor
pushf
push
jp
mov
pop
hlt
ljmp
dec
iret
sbb
cmp
stos
xchg
mov
fmuls
inc
js
pushf
rol
mov
fmuls
pop
std
std
mov
mov
dec
mov
into
int3
out
cmp
mov
pop
outsb
ss
xor
jno
in
js
dec
in
push
aam
push
int3
add
ljmp
aaa
test
pop
xchg
push
xor
add
inc
in
xchg
push
xchg
bound
or
xor
jmp
sbb
dec
btc
not
mov
pushf
pushf
cmp
cmpb
jmp
insl
pop
xchg
xchg
mov
dec
shl
lock
dec
jle
xchg
mov
cld
ss
test
arpl
test
cmpsb
cmp
add
or
fwait
sub
jns
xchg
xchg
call
mov
faddl
sbb
rorl
icebp
push
adcl
dec
sub
dec
std
add
sub
jne
icebp
push
aad
and
jg
fstp
es
xchg
fimull
std
or
adc
mov
ftst
daa
mov
movb
call
call
mov
sub
mov
call
and
out
and
std
nop
and
pop
jbe
mov
inc
dec
add
push
and
add
in
js
add
inc
add
cs
aad
or
lock
push
inc
jnp
sbb
adc
mov
ja
mov
inc
subl
ds
decb
dec
lret
cmp
pop
lods
fnsave
mov
adc
mov
icebp
icebp
sbb
xchg
lods
mov
mov
push
test
cmp
pusha
lea
jae
pushf
lea
jmp
jmp
pusha
pushf
movb
mov
jmp
stc
popa
outsl
orl
mov
and
sti
mov
or
pop
push
fildll
int3
test
cmp
jae
push
popf
jb
imul
dec
lahf
mov
insl
lea
fsubrs
and
popa
mov
xchg
and
push
sbb
adc
popf
roll
xchg
mov
andl
mov
bound
and
sbb
sbb
sub
dec
outsb
jo
mov
xor
inc
imul
pop
or
gs
jo
fwait
cmpl
jmp
and
or
lret
iret
popa
enter
pop
dec
or
movsl
daa
jge
hlt
stc
cmp
pop
mov
cwtl
xchg
mov
scas
fcompl
rorb
inc
inc
lea
aam
cld
sub
fmull
movsl
gs
lcall
mov
or
jge
int
add
jns
cltd
mov
mov
cmp
push
mov
pusha
jmp
mov
dec
outsb
jbe
mov
xchg
adc
ret
sub
pop
xchg
sub
movsl
cmpsl
cmp
ret
xor
mov
sbb
jle
sarb
test
add
and
or
mov
cltd
sub
xchg
adc
jo
mov
jo
sub
aas
pop
lock
push
inc
pop
jbe
sub
jbe
sahf
fdivr
xor
xchg
xchg
cwtl
mov
add
dec
xchg
or
cmp
dec
or
mov
bound
add
cmp
or
insl
push
or
bound
sbb
out
mov
scas
or
mov
push
outsl
icebp
pop
loope
negb
pop
ficoms
sub
jns
adc
cmpl
cmpsb
sarl
push
mov
push
cmp
outsb
js
in
jle
cmpsl
lock
mov
into
cli
xor
outsb
jle
mov
les
adc
cmp
addl
push
test
adc
cwtl
xchg
or
bnd
stos
stos
cmp
loopne
ret
nop
leave
mov
mov
iret
cmpsb
xchg
xchg
aam
popa
push
enter
stos
test
pop
or
mov
mov
ja
in
push
add
into
ljmp
xchg
scas
mov
mov
lds
jb
stos
dec
pop
ja
dec
jle
add
repz
out
pop
cmp
pushf
shrb
ret
clc
jp
lods
jne
mov
je
rolb
test
imul
xchg
into
pop
ljmp
add
movsl
js
hlt
and
inc
cwtl
cwtl
xlat
in
inc
push
fbstp
xchg
mov
xor
aaa
sub
and
fmuls
pop
je
fadds
or
pop
js
sub
icebp
sbb
call
sub
xchg
mov
xchg
nop
mov
cli
adc
push
ret
clc
mov
shlb
movzwl
and
aaa
pop
jge
int
fs
js
jge
rcll
mov
lods
add
fistpl
ret
pop
popa
jmp
lcall
ss
mov
icebp
ljmp
rcll
jbe
mov
loop
clc
aam
xor
push
and
stos
negb
into
add
test
clc
push
xor
out
data16
lock
test
sub
outsb
xchg
scas
ljmp
sub
add
cltd
ret
repz
aad
stc
xchg
pop
cmp
fwait
test
pop
fiaddl
mov
sahf
sahf
and
jp
movsb
fstpl
adcb
sbb
jo
pop
or
or
or
xor
inc
dec
in
aam
vpmullw
inc
out
lods
sar
jg
push
jae
ja
or
cs
inc
push
test
dec
dec
insl
mov
or
jb
jmp
insl
fdivl
push
rolb
imull
pmulhuw
or
scas
or
outsb
xchg
mov
fcmove
daa
xor
sub
std
and
inc
dec
arpl
adc
mov
ret
sbb
add
add
popa
insb
inc
insb
insb
outsl
arpl
jmp
shl
mov
test
cmpb
jmp
test
cmc
add
pusha
pusha
lea
jne
jmp
pushf
cmp
push
pusha
lea
ja
clc
stc
pusha
pusha
imul
mov
add
push
pushl
mov
push
lea
jmp
mov
outsb
test
sub
inc
ss
out
es
pop
test
push
mov
test
outsl
mov
sub
pop
idivb
fwait
leave
divl
push
out
jbe
lea
jne
sub
pop
sub
cmp
mov
xchg
cli
mov
dec
out
data16
ret
lea
call
testb
dec
ficoms
add
lcall
fsubrl
jge
movsl
fstl
sub
sub
sub
scas
pop
dec
jnp
div
stos
movsb
aaa
push
in
add
jnp
mov
outsb
xchg
push
sub
ds
leave
mov
mov
push
inc
xchg
fnstcw
or
mov
and
movsl
stos
dec
mov
cmp
mov
movsl
pop
mov
sub
sub
mov
or
adc
sub
ficompl
add
sbb
dec
xchg
test
push
pop
pop
adcl
rorl
je
add
mov
rorl
pushf
add
stc
clc
cmp
test
call
sub
lea
js
clc
stc
pushl
clc
pushf
pusha
cmp
mov
push
lea
ja
test
xor
and
sete
sub
btr
jmp
mov
shrl
dec
je
test
cld
sub
pushf
cmpsb
enter
lret
mov
std
xchg
out
mov
mov
mov
psllq
jp
inc
push
lcall
mov
or
data16
test
xchg
mov
mov
movsl
fsubrs
push
mov
push
mov
loope
inc
cwtl
mov
mov
xchg
sti
or
adc
jg
jge
adc
imul
add
push
mov
pop
mov
rcrl
outsb
sahf
imul
push
xor
mov
loopne
cld
push
inc
outsb
xchg
mov
or
mov
lret
fstpt
pop
leave
pop
sub
pop
adc
shrb
cmpb
orb
jle
and
rolb
repz
dec
pop
subl
or
in
addl
orb
adc
and
stc
js
addr16
lock
inc
jb
dec
aad
adc
aaa
dec
outsl
xchg
lret
pop
adc
pop
scas
mov
into
or
and
shrb
setl
mov
cmp
dec
push
add
sar
add
mov
pushf
clc
clc
clc
test
pushl
call
out
pop
jae
cmp
jg
mov
aas
inc
insl
outsl
jg
nop
les
std
mov
dec
sbbb
fwait
push
cmpsl
inc
jbe
cmp
mov
jb
mov
shll
fldenv
cmpsl
imul
pop
lock
movsw
sbb
rorl
jle
insl
push
lcall
sbb
push
push
daa
sbb
lahf
fidivs
sbb
cmp
and
push
or
mov
iret
cmp
xor
cs
insb
add
loopne
cld
pop
mov
test
shr
xor
test
add
shr
mov
clc
bt
cmc
test
jmp
sub
shr
or
test
push
push
jns
shl
std
sbb
push
jns
mov
lcall
sub
adc
dec
outsl
xchg
enter
mov
xchg
lret
xchg
sub
testl
inc
jne
push
add
mov
gs
aam
ror
xlat
in
jg
adc
outsb
adcb
xchg
vunpcklpd
and
mov
and
jns
sbb
inc
dec
mov
dec
push
jno
orl
mov
xchg
mov
push
mov
adc
ror
shl
and
jne
inc
idiv
jns
pop
repz
fistl
dec
lcall
lods
jnp
lret
pop
mov
pop
pop
pop
test
int
sbb
sub
scas
rorl
xor
stos
adc
mov
jno
pushf
cs
cltd
mov
sub
aas
pop
subb
jle
jle
scas
loop
add
dec
jp
xchg
stos
into
testb
leave
mov
jb
fsubrl
sub
push
stos
loopne
call
jle
mov
fldt
mov
pop
shll
mov
movsb
fs
inc
scas
pushf
push
je
mov
pop
popf
outsl
movsb
ljmp
sahf
sub
in
jns
popa
jge
dec
gs
ds
shll
mov
out
mov
cmp
out
xchg
mov
sub
outsl
sbb
fstps
int
stc
push
lret
mov
dec
and
adc
push
lods
adc
fnstenv
or
test
sbb
dec
xchg
data16
add
xchg
mov
lahf
int3
outsb
lock
rcrb
movsb
xchg
fildll
in
testl
test
idivl
popa
sub
das
push
pop
pop
in
in
jns
out
jne
lock
stos
notl
jg
icebp
cmp
stc
daa
in
sbb
jp
clc
lds
scas
pop
inc
lock
mov
fwait
mov
cmpsb
callw
sub
mov
testb
sti
adc
inc
pushf
mov
dec
in
and
jge
call
scas
push
mov
add
and
bound
lods
test
popa
shll
xchg
cltd
xchg
xchg
pop
fcmovbe
in
loope
jl
into
and
mov
mov
test
xchg
scas
in
mov
jge
mov
xor
mov
inc
fcomp
xchg
arpl
cmp
mov
cmp
adc
ljmp
jge
mov
scas
scas
add
jo
cmp
pop
adc
and
lcall
sbb
mov
outsl
mov
lret
cmc
pushf
pushf
lea
je
stc
pusha
bt
sub
pusha
cmc
clc
cmp
movb
lea
ja
clc
push
stc
jmp
dec
mov
decb
xchg
js
mov
repnz
cmp
into
fimuls
sub
sbb
jno
aaa
dec
push
cwtl
sarb
jbe
cmp
and
loope
out
popa
mov
and
pusha
mov
add
mov
in
jle
push
mov
push
negb
sub
clc
imul
seta
dec
pop
cwtl
jg
out
push
mov
mov
cwtl
ror
in
cmp
pop
mov
lret
lret
push
add
push
inc
pop
cmpl
es
jl
mov
add
inc
pop
mov
push
into
pop
shrl
mov
jae
jb
adc
sbb
test
push
movsl
cmp
push
mov
sbb
pop
cmpl
jb
push
jns
cwtl
sub
sub
mov
and
lret
push
push
test
dec
arpl
or
popf
popf
popf
mov
lret
adc
cs
jmp
nop
clc
es
js
lods
mov
data16
movsb
mov
add
xor
popf
ror
push
movsl
aaa
pop
xchg
scas
in
adc
stc
sti
std
xor
lods
cmpsb
subl
mov
test
push
push
lods
lea
in
mov
fisubrl
push
mov
ret
push
lret
or
sub
mov
clc
and
mov
call
jb
jle
jmp
ret
and
sub
xchg
sub
mov
enter
inc
stos
sahf
sahf
pop
xlat
jno
cmc
pop
inc
inc
push
ja
fildl
mov
mov
cltd
cmpsl
cmpsl
mov
mov
pop
mov
mov
in
mov
jecxz
mov
ret
ljmp
inc
into
fisubs
stos
xor
adc
inc
jle
sub
aam
jp
daa
mov
call
lods
sar
add
inc
pop
pusha
jl
sub
inc
leave
pop
fadd
in
repz
sbb
pop
imul
sub
mov
es
mov
mov
mov
fimuls
xchg
inc
pop
cli
iret
scas
cld
jle
sub
pusha
jge
or
xchg
add
aam
lds
cld
jnp
dec
fs
adc
out
movsl
fildl
sub
outsl
stos
ret
sar
xor
jae
sub
into
dec
fistps
add
dec
hlt
mov
int
xor
mov
out
and
das
ljmp
and
filds
inc
dec
insl
mov
je
fidivl
and
dec
cwtl
arpl
jecxz
pop
jg
push
sub
dec
push
idiv
cmpb
jb
stos
insl
sub
in
sbb
cli
stos
jo
enter
iret
pop
pop
aaa
imul
adc
aas
sti
arpl
fwait
inc
mov
adc
mov
push
jg
mov
push
je
and
out
jnp
insb
mov
leave
push
sub
sbb
mov
hlt
or
aas
inc
imul
fildl
fwait
push
jg
fldcw
cs
xor
xor
sbb
sbb
push
cmp
cmp
jb
movsl
xor
mov
in
and
cmp
je
les
loop
add
imul
jae
cmp
repnz
pushf
jmp
xchg
cmp
push
mov
ficomps
jle
push
xor
cmpsb
loopne
hlt
cli
and
cmpb
and
xchg
adc
mov
lret
adcl
mov
mov
insb
stc
pop
and
aaa
pop
arpl
pop
pop
xchg
mov
mov
mov
inc
jae
ret
insb
aas
dec
icebp
adc
test
add
jg
nop
in
jle
mov
ror
jbe
jae
jo
movsl
shll
aam
rclb
xor
test
add
gs
cmp
pop
inc
jp
jb
lods
loopne
lret
mov
jge
cmp
or
xor
cmc
ret
loopne
inc
inc
dec
dec
xchg
cmp
jnp
sub
clc
sub
pop
inc
jmp
push
sbb
bound
movsb
stos
int3
loop
sub
and
push
test
clc
leave
mov
and
dec
ficoms
mov
and
inc
pop
cmpsb
xchg
xchg
inc
cmc
aad
leave
std
cmp
retw
in
pop
adc
xchg
lcall
sahf
das
xor
pushl
ret
ror
iret
pushl
out
jge
sbb
addr16
add
stos
cli
sub
pusha
jl
imul
jnp
fcomi
sti
das
dec
pop
xchg
into
pusha
clc
bt
xor
call
movsb
adc
inc
andb
dec
pop
fsubrs
pop
mov
push
cwtl
mov
stc
jo
push
out
mov
ret
jmp
pop
and
mov
push
xchg
and
sub
loope
cwtl
repz
lds
aad
jmp
cmpsl
mov
cmpsb
xchg
test
fistpll
pop
cmpb
sbb
jge
idivl
fldenv
icebp
inc
fisttps
inc
inc
pop
ja
mov
jge
int3
cmp
ret
call
sub
insb
pop
hlt
adcl
push
push
xchg
nop
int3
mov
lods
inc
jge
popa
in
add
fstpl
pop
imul
lods
test
movsb
int
gs
sub
nop
xchg
enter
and
dec
outsl
adcl
pop
shll
lahf
mov
xchg
test
mov
cmp
inc
push
add
cmpl
scas
movsb
mov
loope
aad
jp
push
ds
sub
xchg
jne
jnp
cmc
mov
imul
fnsave
jae
sub
cmpsl
das
or
mov
push
mov
aaa
xchg
mov
and
xchg
inc
out
adc
in
and
pusha
jo
cwtl
mov
in
mov
mov
cmp
jl
ss
or
shl
push
sub
test
or
xor
jle
xchg
adc
cmpsl
call
in
adc
push
inc
dec
cltd
mov
jns
sarl
inc
push
scas
out
int
sub
push
inc
sbb
movsl
fcoms
add
cs
jle
xchg
leave
call
movsb
pop
push
cltd
popf
rclb
dec
ret
cmp
enter
inc
clc
sbbl
popf
ror
int
ljmp
dec
xchg
inc
data16
je
bound
sub
fs
jae
pusha
bswap
adc
or
mov
call
push
cmc
repz
add
outsl
add
cmp
ja
stos
flds
xor
dec
test
mul
cmp
fldt
nop
fistpll
int
push
fstp
shrb
push
push
xchg
mov
aam
in
std
mov
xor
mov
jge
pop
loop
call
push
push
mov
imul
adc
xor
or
inc
cmc
lods
in
xchg
cmp
js
leave
in
je
lahf
mov
inc
jno
call
in
cld
sbb
dec
je
cwtl
lods
lods
fdivr
sub
mov
mov
xchg
call
mov
sahf
cmpsb
cwtl
fadds
and
nop
lret
sbb
pop
pusha
jo
xchg
incb
adc
out
jp
add
add
cmp
mov
lock
jno
iret
xor
pop
mov
push
xchg
xchg
adc
inc
pop
stc
mov
imul
mov
sbb
and
cmp
outsb
add
lcall
pop
bound
es
dec
fcoml
pop
or
sub
pop
mov
inc
pop
jb
mov
mov
and
add
jb
loop
shrl
pop
inc
push
push
pop
mov
xchg
pop
lcall
mov
xlat
imul
mov
xor
fucomp
movsb
or
mov
dec
clc
xor
pushw
outsb
pop
aam
jp
dec
lret
ljmp
ds
push
push
mov
and
mov
data16
adc
lods
mov
add
cltd
ror
sub
flds
je
out
inc
push
add
pop
xchg
adc
popa
jecxz
and
mov
icebp
pop
add
andl
inc
aaa
mov
mov
out
push
cmp
jae
cmp
stos
mov
repnz
lret
sti
sti
das
xor
xchg
mov
mov
das
mov
inc
pop
jo
scas
cmp
pop
adc
mov
add
jo
mov
in
or
dec
add
sub
rol
sbb
pop
inc
rcl
stc
dec
add
ja
clc
mov
dec
xor
sub
xchg
cmpsb
push
movsl
cmpsb
inc
jl
add
cmp
jbe
and
xchg
aad
decl
mov
mov
iret
push
out
fisttps
aam
lcall
cmp
fstl
in
or
xor
insb
lret
imul
cld
jcxz
loopne
push
and
xchg
and
mov
mov
cwtl
dec
inc
push
dec
inc
dec
dec
xor
cs
insb
add
jne
mov
push
mov
or
sbb
jbe
lods
push
cld
sub
leave
mov
mov
xor
dec
jno
leave
add
cwtl
rcl
sub
hlt
sbb
xor
test
mov
mov
inc
call
pushf
add
pop
xchg
pushf
xchg
xchg
out
jp
pop
insl
ja
mov
icebp
repz
sbb
cli
sub
lcall
popf
mov
pop
inc
xchg
jne
add
mov
orb
pop
pusha
mov
push
pop
repz
imul
pop
cwtl
lahf
and
ja
adc
stos
add
pop
xor
imul
inc
jb
cmpsb
ret
push
push
cs
cmpsb
mov
mov
mov
ret
add
shl
fadds
not
xor
setle
rol
rcr
bt
ror
not
add
setg
stos
not
mov
lea
call
jmp
sbb
ds
push
xchg
das
dec
mov
push
dec
dec
push
out
dec
sbbb
dec
repz
das
jge
pop
adc
fstpt
sub
std
sbb
ret
cwtl
jl
mov
rolb
insl
dec
stos
push
push
std
sub
xchg
lcall
sarb
out
fisubrl
fldl
mov
adc
js,pt
adcl
push
push
imul
xor
mov
push
jmp
pop
sub
test
ja
mov
pop
jae
out
das
inc
imul
je
fdivrl
mov
sahf
sahf
out
jns
jns
sbb
jg
jle
pop
mov
sbb
mov
inc
loop
mov
rcll
sbb
xlat
ds
xor
and
push
push
pop
xchg
inc
hlt
stos
roll
adc
jecxz
sub
dec
jle
mov
and
push
mov
mov
cmc
jmp
lea
lea
movb
push
push
pushf
movl
mov
pusha
call
adc
pusha
pushf
lea
jmp
add
dec
je
jo
outsb
fs
gs
gs
inc
add
ds
jmp
ds
decb
jl
lods
rcr
cli
and
xchg
mov
imul
aas
in
xor
movsb
int3
out
ds
adc
sub
add
jecxz
push
pop
das
sarl
jnp
push
jnp
xor
cmp
ja
push
arpl
mov
xchg
sub
inc
push
xchg
pushf
mov
or
aam
xor
test
sub
fs
pop
push
loop
xor
push
pusha
mov
gs
dec
xchg
mov
or
ja
lret
roll
daa
aaa
mov
mov
pushf
repnz
push
jmp
mov
add
add
add
add
xor
add
add
add
add
addb
add
mov
add
add
cmp
add
add
add
sub
add
add
push
and
add
add
stos
sbb
add
sbb
add
add
and
add
add
bound
add
imul
add
add
sub
add
add
mov
add
add
and
add
add
jmp
add
add
sub
add
lods
jo
add
and
pop
xor
and
inc
jno
add
add
add
add
cmc
pushl
jmp
cld
fs
clc
jp
mov
xor
stos
aam
inc
dec
or
pop
cmpsb
out
mov
add
sbb
popa
pop
sub
pop
int
mov
mov
inc
stos
mov
in
out
arpl
cmp
xchg
xchg
adc
mov
jno
jmp
dec
js
mov
jl
out
rorb
dec
loopne
cld
sbb
mov
pop
mov
repnz
mov
jbe
mov
push
cmp
jbe
mov
sub
mov
ret
scas
mov
addr16
sti
sbb
jg
fwait
leave
jmp
pop
pop
daa
loop
loopne
loop,pt
mov
adc
sti
jge
pop
je
pop
push
push
das
std
stos
jge
jne
pcmpeqd
mov
mov
push
cmpsb
cmpsb
or
xor
shr
and
pop
mov
popf
push
cmp
cltd
mov
add
sbb
into
dec
add
les
shl
or
mov
pop
mov
mov
cs
dec
fcomi
and
dec
loopne
dec
push
js
test
rolb
cmp
jbe
push
xor
popf
call
lret
pushf
mov
push
inc
xchg
xor
outsl
flds
shlb
and
leave
xor
rcl
bound
mov
dec
adc
adc
in
cmc
lea
or
fstp
cli
aaa
pop
daa
inc
clc
dec
push
pop
push
xchg
mov
imul
mov
jnp
jne
jle
repnz
mov
inc
inc
fsubs
push
adc
out
push
data16
xor
mov
mov
pop
outsl
lea
mov
movsb
cmpsb
shl
or
ds
jp
imul
test
cltd
mov
xchg
loop
stos
jmp
cmp
jnp
push
push
mov
cmpsl
xor
call
xor
outsl
imul
mov
mov
cmpsb
inc
mov
pop
je
mov
jl
int
outsl
icebp
movaps
mov
cwtl
mov
je
xchg
sbb
insb
jmp
lods
je
testb
and
pop
pop
xchg
xlat
out
mov
mov
cmc
cmp
jmp
movw
cmp
test
pusha
lea
je
cmp
sub
test
clc
call
push
jmp
scas
pop
adc
popl
pop
fwait
sar
sbb
mov
fucomip
jmp
dec
pop
int3
cmp
clc
clc
push
xor
rcrb
loope
mov
test
cmp
jp
mov
mov
ret
in
jbe
adc
es
dec
iret
out
ds
xor
add
add
cmpsb
rcr
data16
push
ds
xchg
xor
fistps
push
mov
std
cmp
xchg
inc
push
mov
inc
outsl
jne
cmpsl
lret
out
push
dec
pop
pop
outsb
xchg
mov
bound
data16
push
lea
adc
nop
pop
fsubr
or
pop
pop
pop
dec
push
mov
mov
fwait
mov
fldcw
mov
jbe
cmp
dec
loopne
sub
aad
dec
js
dec
pop
ja
mov
lret
leave
out
inc
inc
les
fmuls
or
inc
jo
rol
clc
and
fildl
xchg
aad
lret
popa
repz
and
jl
cmp
xchg
mov
xchg
testl
pop
add
stos
loop
aad
stos
ret
jle
jo
push
ret
inc
popa
sbb
or
adc
scas
out
les
mov
ljmp
xor
jae
sahf
ret
int
fisubrs
lret
mov
mov
jbe
test
xchg
xor
and
sbb
inc
cmp
cmp
sbb
cmpsl
aad
adc
dec
jg
xchg
mov
push
sbb
pop
pop
popa
jnp
xchg
cmpsl
bound
and
fistl
lcall
arpl
pop
jns
cmp
sarb
lea
jns
sbb
dec
push
xlat
adcb
mov
mov
xor
inc
pop
loopne
inc
jge,pt
outsl
jno
imulb
arpl
push
pusha
pushf
fistpl
cmp
test
cli
adc
dec
data16
mov
mov
mov
and
push
jl
movsb
in
hlt
testb
jb
push
js
and
addr16
jge
mov
fnsave
adc
xchg
idivl
push
dec
jle
sbb
hlt
xor
int3
push
call
cmc
mov
out
inc
pusha
lahf
sub
add
std
sbb
lahf
sbb
cmpsl
inc
popa
int
ss
inc
loopne
sbb
adc
in
out
inc
adcl
xorb
jne
lock
mov
push
or
sti
sti
insb
es
cmp
addr16
xor
popf
int
jmp
xchg
leave
cmpsl
pop
add
stc
call
cltd
add
and
xchg
mov
inc
xchg
fwait
push
and
cmp
repz
sub
cltd
adc
push
inc
inc
sub
in
movups
daa
jo
aas
movsb
sbb
scas
in
adc
inc
les
sarb
movsb
pushf
inc
lock
cmpsl
mov
pop
sbb
into
push
cmpsb
lret
or
ljmp
outsl
pop
into
test
ja
dec
pop
mov
das
imul
addr16
adcl
cmpsb
and
insl
pop
xchg
xor
test
sbb
bound
out
jmp
out
mov
jns
inc
xchg
jns
pop
test
stos
rcll
stos
test
cmp
and
add
sbb
mov
adcb
cmp
bound
arpl
cmp
out
xchg
hlt
pushf
xor
pop
icebp
testb
cmp
test
sub
inc
inc
aad
inc
xlat
add
push
xor
sbb
mov
push
mov
lret
cli
push
ss
lcall
xchg
cli
jl
stos
negb
mov
pop
inc
add
pop
rol
jns
popf
out
inc
loop
int
pop
rol
mov
sbb
sarl
cmc
xchg
daa
aam
repz
rol
adc
rcrb
icebp
pop
rol
jnp
pop
out
fwait
dec
imul
xor
push
push
pop
rol
jnp
or
daa
mov
hlt
pop
rol
addb
imul
xor
add
inc
leave
bnd
sahf
in
icebp
pop
rol
jp
in
aaa
lret
fst
pop
rol
jnp
das
mov
fistps
sarl
cmp
daa
xchg
push
pop
rol
jnp
cwtl
negb
pop
rol
jnp
fs
cmp
rol
jnp
inc
or
negb
shll
loope
jbe
call
jp
xor
sbb
aam
rol
jp
insb
sub
xchg
imul
and
push
repz
pop
rol
jge
js
and
imul
pop
rol
jnp
xor
dec
hlt
icebp
pop
rol
jnp
adc
popa
ret
pop
rol
jnp
hlt
ja
and
imul
xor
repnz
xor
ds
xor
loop
negb
sarl
xor
push
pop
rol
jnp
sub
daa
cs
pop
rol
jnp
out
or
pop
rol
jge
ds
call
pop
rol
jnp
stos
inc
test
rol
test
fidivl
sti
pop
and
jnp
xor
mov
out
icebp
pop
rol
jp
cli
mov
push
jae
negb
shrl
lcall
jge
loope
add
mov
negl
rorl
lods
out
push
push
in
pop
sarb
dec
inc
out
negb
sarl
or
inc
aas
or
pop
rol
test
jg
sub
rol
jnp
rol
mov
out
aam
rol
jnp
out
jnp
adc
repnz
rol
jnp
or
aad
push
push
pop
rol
jnp
xchg
jae
rcr
aam
rol
jp
xor
dec
pop
xchg
xor
xchg
negb
roll
loope
icebp
pop
rol
jnp
jnp
iret
sub
sarl
push
cli
sub
jnp
dec
xor
pop
rol
jnp
mov
jns
or
pop
rol
fsubrl
mov
shll
xchg
inc
dec
call
sarl
inc
xor
add
icebp
pop
rol
jnp
jb
cld
repnz
negb
sarl
ret
test
pop
rol
mov
and
sbb
jb
in
dec
decb
mov
repnz
notb
push
repz
stos
fsts
push
nop
mov
push
xor
jge
lods
sbbb
sbb
or
push
lods
lods
pop
inc
jp
imul
pop
xchg
test
jnp
sub
movsl
jo
fstps
jge
pop
das
mov
cmp
nop
xchg
sbb
movsb
mov
arpl
sub
jno
loope
sti
sti
push
push
cld
push
add
in
gs
daa
mov
cli
cli
cmp
bound
lret
and
sub
fisttps
pop
cmpsl
rcll
mov
sub
lods
sbb
adc
and
hlt
push
push
ret
rcrl
aad
xchg
pop
ficompl
push
mov
xor
adc
mov
jp,pt
mov
repnz
dec
mov
mov
orb
bound
test
cli
mov
dec
arpl
js
inc
pop
jb
loope
jnp
shr
lds
sub
fistps
shll
fadds
pop
dec
dec
int3
dec
push
push
push
fs
imul
stc
pop
sub
jbe
imul
adc
into
pusha
lea
call
jns
pushf
lea
jae
not
mov
push
pushf
pushf
pushf
inc
seta
mov
lea
call
push
inc
push
inc
push
dec
xor
cs
insb
add
cmc
aam
add
test
add
push
lea
js
push
adc
push
pusha
lea
jmp
pusha
enter
jae
movsb
shlb
inc
pop
pop
pusha
outsb
test
dec
outsl
xchg
dec
sub
adc
push
loope
add
sub
inc
jnp
arpl
imul
xor
and
std
push
fs
jp
push
push
sub
sbb
xchg
sti
or
testb
jno
lahf
mov
adc
and
pop
xchg
lahf
lahf
mov
jmp
pop
mov
mov
cmp
pushl
test
call
add
mov
pushf
lea
call
bt
call
xchg
sub
inc
xlat
sti
jo
sbb
mov
add
pop
nop
stos
lods
lret
pop
cmp
cmpl
loop
xchg
mov
cmpsl
jecxz
bound
cmpsb
shl
addb
fs
xlat
rorl
fisubrl
sub
sar
push
jge
fbstp
out
mov
jle
sub
sbb
xchg
das
addr16
lret
pop
inc
ret
ret
sti
pop
aaa
push
arpl
sub
sub
inc
inc
jl
fstl
xchg
or
mov
in
or
sbb
mov
vpsraw
maskmovq
or
popf
outsl
icebp
inc
sti
cmc
mov
hlt
inc
mov
pushw
adc
movsb
and
mov
js
inc
add
sti
cld
push
jbe
neg
int3
test
dec
push
stos
adc
sahf
shl
and
push
push
push
ret
or
aaa
arpl
xlat
xlat
or
cmp
mov
mov
xorb
mov
stos
lods
shr
cli
clc
add
jo
xchg
rcll
add
dec
imull
xchg
mov
xchg
call
pop
xor
xor
push
aad
repz
outsb
mov
jnp
pop
jne
inc
arpl
or
fucomi
and
sahf
test
mov
cld
lea
dec
push
pop
xchg
sbb
and
mov
dec
shll
pop
fs
loopne
push
jo
mov
inc
bound
mov
int3
aam
jbe
orl
testb
dec
jns
mov
jp
xor
inc
pop
jne
cmpsb
adc
das
ja
or
inc
inc
lcall
rolb
jle
inc
into
orb
hlt
jbe
push
std
sti
jle
cs
push
jecxz
add
insl
jns
arpl
in
cmpsb
cmp
mov
or
js
cmpsl
pop
imul
out
or
hlt
push
pushf
incb
outsl
cmpsl
fucomi
ljmp
sub
mov
mov
scas
es
jmp
push
mov
dec
addr16
lret
aad
and
mov
out
add
ljmp
jmp
stos
imul
rolb
push
push
scas
mov
pop
imul
sbb
outsb
dec
insl
xchg
lea
repnz
push
and
imul
pop
push
int3
pusha
loop
push
and
dec
fwait
pop
lods
lret
push
std
inc
or
rcl
adc
je
enter
sub
dec
dec
push
push
dec
dec
dec
cs
push
push
add
lds
adc
fs
enter
adc
cmp
push
mov
clc
test
pop
out
popf
in
pop
test
sar
jp
cmpsb
fadds
out
popf
sbb
jns
adc
add
loope
dec
add
pop
mov
inc
arpl
mov
pop
cmp
mov
adc
idivl
xchg
je
notl
mov
scas
ja
sub
pop
jecxz
scas
scas
insl
sti
lea
adc
loope
dec
es
cmp
xor
lcall
lret
add
jne
dec
mov
sub
mov
adcb
test
xchg
sub
jns
adc
popa
pop
or
rcll
enter
jbe
adc
or
or
cmp
jg
ret
push
lea
stos
jecxz
push
hlt
or
jo
cmp
test
shl
in
pop
sub
sub
icebp
mov
push
adc
inc
xchg
xor
mov
push
jne
sahf
ret
sbb
addl
insl
or
rorl
mov
in
in
cmpsb
sub
push
jne
rol
rorl
cmpb
jb
les
push
jecxz
push
inc
pop
jb
lods
mov
js
les
movsb
movl
xor
insb
jo
push
addr16
jle
scas
aad
add
adc
aad
xor
sub
aad
add
fwait
push
outsb
xchg
adc
xorl
adc
jbe
int
mov
stos
test
call
mov
insb
in
add
ret
inc
jae
je
lds
notb
or
inc
xchg
mov
adc
sub
es
push
xor
icebp
rcll
mov
lods
xchg
push
aad
add
sbb
sbb
adc
fs
mov
inc
outsb
xchg
xchg
xchg
lds
addb
popf
mov
push
jbe
aaa
cmp
out
out
iret
inc
stc
sbb
aad
and
sbb
cmp
cmp
aas
leave
cmp
mov
pop
pop
mov
fsubs
and
push
push
mov
ret
dec
dec
jno
mov
dec
mov
push
mov
mov
mov
cld
pop
sub
lea
rcrb
das
sbb
dec
dec
insb
std
sub
lret
aaa
adcb
mov
push
stos
mov
into
into
icebp
inc
clc
sbb
push
pop
pop
arpl
ljmp
std
std
std
cmp
cmp
insl
bound
out
bt
clc
sbb
pop
mov
fdiv
adc
cmp
mov
jnp
add
filds
xor
int
lahf
cltd
push
sub
or
adc
dec
popa
jno
lods
sarb
mov
adc
gs
jo
add
jg
xchg
stos
repnz
data16
pop
dec
push
bound
adc
mov
mov
inc
inc
push
jle
ret
aaa
int
inc
push
in
sbb
or
xchg
test
inc
push
mov
push
xor
xchg
push
adc
mov
rcll
icebp
cmpsl
jecxz
rcl
add
mov
stos
es
dec
mov
push
sbb
ret
mov
fs
lcall
mov
inc
outsl
jle
aaa
test
pop
xor
inc
push
ja
jae
cmp
cmp
jae
fisubrs
inc
aaa
lret
xor
ret
insl
int
es
xor
jae
cmpl
dec
lret
test
sub
in
sub
and
adc
inc
jae
shll
sbb
mov
sbb
cmp
jl
fcomp
fsubr
sbb
mov
stos
xchg
cld
jle
rcl
repnz
push
xlat
pop
stc
xchg
sbb
pop
xor
xlat
add
inc
jb
imul
shlb
movsb
insb
xabort
sbb
push
das
mov
dec
pop
mov
cmp
mov
testl
push
out
imul
jbe
mov
outsb
or
xor
xor
int
or
pop
adc
push
jle
pop
push
dec
std
xor
pusha
arpl
inc
jb
stc
pop
xchg
ret
push
data16
sbb
dec
push
xchg
stos
jge
xor
in
repnz
data16
test
loopne
and
mov
pop
sbb
or
sub
and
and
test
aas
cmp
in
push
addr16
add
adc
jg
xlat
enter
shr
sub
pop
daa
into
ret
daa
negb
mov
ljmp
movsl
or
pusha
mov
xchg
int
dec
mov
out
push
push
dec
jp
jle
mov
out
cs
test
and
bt
test
push
pusha
jmp
lahf
pop
and
sub
pop
icebp
adc
movsl
fucomip
movups
sub
popf
mov
scas
mov
push
push
fs
xlat
mov
xchg
adc
fisubrs
fucomip
adc
fsubr
fwait
pop
and
and
and
icebp
mov
push
push
loope
ffreep
and
fucomip
jnp
repz
jae
and
mov
sahf
dec
pop
or
sti
and
in
stc
xor
rorl
push
lea
jne
lahf
setne
movb
setbe
lea
mov
movzbw
push
pushf
seta
not
lea
push
pushf
call
cmp
jmp
mov
lea
jne
rcl
sbb
shl
mov
stc
call
rol
clc
es
jecxz
adc
sbb
mov
dec
push
nop
mov
into
call
lea
in
xlat
add
out
nop
jge
test
out
ret
dec
cmc
adc
out
movl
scas
adc
enter
adc
pop
out
sub
dec
jle
sub
bswap
sbb
rorl
mov
stc
xchg
push
ror
std
or
lods
mov
loope
mov
test
add
pushf
pushf
cmp
pusha
call
lea
jne
bt
stc
sar
mov
bswap
sub
sar
mov
push
jmp
movsb
dec
pop
nop
nop
iret
mov
incb
mov
loop
cmp
pop
push
mov
dec
jb
loope
jne
pop
xchg
mov
idivb
scas
loope
sub
mov
imul
mov
mov
leave
fstpl
mov
push
xorl
ds
jae
mov
fsubrl
addb
cltd
push
mov
cmp
rcl
insb
mov
cmp
push
int3
lds
je
xor
push
test
and
data16
xchg
ret
and
jb
sub
cmpb
loope
cs
adc
aaa
insl
cmpsl
lods
out
add
mov
mov
lods
das
aas
sbb
dec
je
jmp
mov
adc
adc
repz
cmpsl
lret
add
aas
arpl
cmc
mov
jge
xchg
rorb
out
mov
sub
std
and
repnz
scas
out
dec
cltd
sbb
adc
dec
jge
cltd
mov
mov
sub
xchg
or
sub
mov
loop
jbe
jae
popa
clc
scas
jle
dec
mov
pusha
loop
mov
imul
cld
jle
xor
cmp
mov
je
jg
mov
pop
jb
xchg
jmp
ss
into
fsub
adc
add
and
pop
jae
mov
push
jg
lahf
fcmovnu
sti
mov
xchg
jbe
pop
loopne
stos
mov
jle
out
repz
sub
mov
std
and
pop
sbb
lods
ds
test
psubusb
mov
xchg
add
xchg
and
lds
or
out
dec
push
or
inc
xchg
mov
in
cmpsl
cs
and
or
js
shr
xor
dec
mov
sbb
hlt
leave
sub
callw
sbb
dec
cmc
dec
lahf
cmp
xchg
test
in
sub
sub
test
sub
pushf
jmp
daa
push
inc
push
pop
mov
loope
lahf
mov
sbb
sub
jae
test
ss
fwait
shlb
andb
jp
jno
es
addr16
xorb
rorl
jle
ds
inc
inc
inc
pop
roll
mov
push
or
pusha
nop
and
sub
int
fwait
mov
mov
subl
and
imul
mov
orl
jp
clc
xor
jne
lea
adc
pop
push
pusha
jle
scas
repnz
arpl
cmp
jge
pushf
pop
jne
jo
cmpsl
sar
repnz
jne
inc
push
sub
int
leave
jno
dec
pop
popa
mov
dec
fsubrs
inc
sarl
xor
dec
ret
push
sub
mov
scas
xchg
sub
push
clc
adc
jo
pop
and
mov
xor
xchg
cld
pop
mov
shll
cmp
jmp
jae
jnp
mov
inc
outsb
push
imul
or
mov
push
shll
fildll
sbb
sbb
pop
fcmovnu
sbb
loope
push
in
out
hlt
imul
cmp
sbb
test
call
mov
cmp
loope
sbb
cmp
test
xor
mov
inc
call
push
shl
push
and
pop
xchg
inc
dec
push
mov
int
lret
and
bound
xchg
stos
xrelease
or
inc
cmpsl
adc
jmp
or
repnz
push
sbb
loope
push
ret
out
push
test
add
xor
and
or
insb
dec
xchg
imul
add
aas
in
cmp
call
fsubrs
dec
insb
add
push
popa
jno
xor
dec
mov
imul
inc
pusha
dec
arpl
out
cmp
scas
push
or
cmp
mov
xchg
out
cs
repnz
mov
movsb
mov
pop
outsb
test
in
xor
test
ds
add
mov
adc
mov
xor
xor
rcr
mov
or
sbb
jae
cwtl
mov
and
pop
mov
or
cmp
dec
nop
sub
xchg
mov
dec
imul
lahf
xor
mov
int3
add
sub
mov
add
out
fcom
xchg
dec
lahf
and
push
mov
cmpsl
notb
cli
out
xchg
mov
sub
notl
adc
ljmp
inc
mov
nop
loopne
xchg
stos
push
ds
nop
divl
fisttpll
pop
jmp
xchg
mov
shlb
mov
fwait
sub
inc
cmp
es
xchg
aaa
aas
jae
mov
mov
sub
lock
xor
stos
push
stos
aad
in
daa
cmp
popa
pop
xchg
mov
into
add
pop
loopne
stos
ds
push
popa
jecxz
add
or
push
push
mov
sahf
mov
cmpsl
cmpsl
sbb
outsl
lea
or
add
mov
adc
stos
ds
pop
into
push
cmpsb
ficompl
stos
xchg
xor
push
mov
je
ja
xchg
dec
mov
lahf
sbb
push
jl
out
orl
push
jl
ss
or
sub
inc
or
ss
mov
push
xor
xchg
mov
fimull
mov
mov
sar
scas
push
inc
mov
popa
jecxz
and
cltd
leave
out
or
sub
cmp
jb
or
push
adc
je
int
mov
xchg
dec
addr16
cltd
out
testl
bound
call
sbb
mov
mov
pop
rorb
push
xlat
xchg
xchg
aam
rorb
aas
xor
jb
in
xor
test
in
hlt
sbb
cmp
sub
sti
add
ja
mov
aad
add
mov
mov
lret
out
inc
lcall
mov
sbb
mov
popl
iret
or
mov
dec
jb
mov
in
dec
test
jmp
sub
cmpb
sbb
mov
cmp
movsl
xor
sub
mov
or
inc
mov
nop
mov
fsub
or
mov
inc
pop
insl
lods
frstpm(287
sbb
subb
cmpsb
and
enter
and
clc
int
jne
push
popa
jecxz
xchg
out
int3
int
xchg
dec
sbb
xchg
fidivs
xchg
daa
decl
dec
pop
mov
das
cmp
adcl
popf
lods
adcl
adc
inc
xor
cmpsl
mov
jae
xchg
fwait
mov
and
mov
xchg
pop
jle
cmp
jmp
lea
ja
jmp
pushf
sub
sub
jl
cmp
test
pushl
push
pusha
pushf
cmp
jmp
jmp
jmp
pushf
adc
pushf
pushf
mov
lea
jmp
pushf
add
call
push
outsb
test
ljmp
subb
ss
jle
stos
out
and
cli
sbb
adc
daa
mov
es
adc
pop
scas
inc
push
mov
mov
loopne
jle
mov
sub
rclb
stc
scas
or
je,pn
xor
sbb
idivl
dec
push
imul
sub
sbb
push
fprem1
negb
scas
aas
mov
jle
lds
addr16
aam
mov
sbb
out
cs
xchg
inc
js
out
in
cmc
adc
lods
fsts
and
sahf
aam
out
jmp
mov
inc
dec
test
pop
loope
stos
sub
dec
dec
insb
sahf
lods
in
es
jb
lret
or
imul
push
inc
mov
es
addr16
incl
cmp
pop
sarb
jne
pop
scas
fistpl
xchg
sub
cmp
cmp
lds
and
sarb
testb
and
movsb
pop
ja
pop
repnz
iret
jmp
bnd
fstpl
jge
sub
lcall
inc
adc
testb
mov
jge
test
popa
xchg
mov
sub
out
inc
jnp
jnp
sahf
and
sub
jno
test
mov
scas
sbb
sbb
test
and
ret
xlat
cli
sbb
loop
jge
inc
push
outsl
mov
aaa
lret
jae
mov
rclb
movsl
dec
lret
and
lcall
sub
mov
push
stos
cwtl
sbb
mov
int
popf
lret
repz
std
or
xchg
movsl
shl
add
lahf
or
and
jb
mov
dec
add
dec
dec
pop
outsl
jge
xchg
mov
pop
dec
jno
sar
mov
aaa
fnstenv
lcall
loopne
out
ds
jae
in
pop
pop
popf
cmp
es
pop
sub
jl
lods
adc
rcl
jne
lds
mov
pop
adc
out
pop
test
out
iret
divl
lods
je
out
sub
enter
xchg
iret
ficoml
add
inc
imul
testl
xchg
out
push
sbb
data16
cmpsb
fimuls
sub
mov
xchg
mov
loope
jne
sub
rcl
filds
and
sub
or
add
or
pop
test
arpl
mov
push
dec
in
cmp
repnz
mov
inc
pop
cltd
lahf
fwait
sahf
movsb
aam
movsb
ss
mov
in
or
int
movsl
daa
lds
dec
jmp
mov
cmp
inc
in
jae
scas
mov
pushl
push
mov
mov
pushf
jb
sub
xchg
pushl
mov
lea
mov
xchg
lea
lea
mov
movsbw
xchg
mov
push
mov
pushl
call
pop
imulb
pop
mov
mov
jbe
cmpsb
test
rorb
and
test
pop
movl
cmpsl
pop
push
rolb
ror
cmp
test
push
dec
mov
int3
insl
mov
xor
in
cmp
ds
mov
int
mov
cltd
adc
jae
dec
insb
fnclex
ss
daa
test
push
mov
mov
inc
and
enter
ds
push
xchg
mov
es
push
jle
sub
mov
ljmp
mov
js
sar
adc
push
push
jb
imul
pop
pop
jmp
nop
mov
loop
cmp
rorl
ss
or
sbb
xchg
sub
mov
and
shr
fnstsw
addr16
dec
stos
sub
sbb
sarb
outsb
popa
jns
cmp
mov
mov
mov
push
inc
pop
jle
lret
mov
popf
orl
mov
pusha
jmp
hlt
pop
xchg
mov
mov
push
ja
xchg
aas
cmp
lret
test
out
and
fidivs
aaa
pop
insb
or
in
xor
xor
pop
inc
aad
into
or
add
mov
mov
inc
dec
sahf
sbb
ljmp
fwait
push
test
aas
inc
pop
jae
mov
mov
push
andl
scas
xor
data16
pop
jno
std
shrb
inc
dec
jg
mov
lret
icebp
adc
outsl
ja
mov
dec
movsb
es
dec
sahf
pop
push
aaa
lret
add
ja
in
pop
pop
inc
sbb
ja
mov
mov
sarb
xor
int3
shlb
data16
adc
sub
fimull
shrl
mov
cmp
push
jecxz
sbb
inc
or
ja
scas
out
sub
fstl
inc
pop
pusha
nop
mov
or
push
push
insb
mov
add
jmp
out
and
pop
mov
test
and
inc
bound
push
ja
shr
and
mov
xchg
mov
fisubrs
cwtl
test
les
lods
shrb
addr16
das
stos
repnz
push
cwtl
jmp
sbb
movsl
in
push
xor
pop
daa
aas
push
leave
adc
mov
inc
push
sub
mov
add
push
aam
hlt
incb
push
sub
pop
xchg
daa
loop
and
xchg
out
test
repnz
out
mov
fs
mov
dec
hlt
ljmp
ljmp
int
cmp
add
lods
cmpsb
push
iret
lods
mov
nop
int3
or
sub
in
push
pop
jo
stc
and
mov
lock
xchg
mov
testl
arpl
mov
cwtl
jmp
bt
pushl
stc
cmp
pushf
movw
lea
ja
dec
sub
push
sbb
sub
inc
add
shr
sub
add
add
shrd
xor
mov
or
mov
adc
add
mov
clc
push
mov
call
push
sub
pushl
clc
add
jb
stc
repnz
js
pushf
lea
jne
setnp
shr
mov
jmp
repnz
pushl
lea
jne
setne
movsbw
bswap
pushf
movb
lea
cwtl
movsbw
lahf
mov
push
push
lea
push
movl
pusha
pushf
call
add
push
lods
jge
scas
push
and
je
xchg
scas
aam
cmp
cmp
pop
add
movsb
sbb
test
loop
cltd
push
movsl
inc
push
sub
mov
into
rclb
stos
movntps
adc
sub
sub
xchg
fisttpll
xor
imull
inc
bound
inc
push
mov
pop
mov
add
loopne
or
mov
adc
sub
fs
pop
inc
xchg
mov
repz
idiv
adc
jb
sar
mov
cltd
or
pop
sbb
jmp
mov
int
mov
sbb
fisttps
cmovno
roll
cmp
movsb
test
pop
lcall
pop
sbbb
xor
test
add
pop
je
fcomp
sar
sar
mov
jecxz
push
mov
and
push
sbb
cmp
dec
dec
dec
addr16
cld
std
push
and
out
or
dec
sbb
test
jns
jmp
mov
mov
pushf
popf
mov
or
push
addl
call
sub
cs
shll
add
rcl
notl
sub
pop
mov
xchg
dec
lret
sti
adc
cmpb
mov
pop
mov
in
dec
fisttps
lret
inc
std
aaa
insl
mov
inc
les
leave
pop
nop
mov
and
in
inc
jnp
dec
sub
mov
pusha
in
sbb
stc
out
lea
mov
xchg
aas
and
sar
std
or
sbb
lahf
rcr
adc
cmp
imul
xchg
push
push
or
mov
xchg
mov
xor
and
and
xlat
shr
daa
cmc
rol
in
and
fldenv
mov
sbb
sub
loopne
lret
mov
daa
xlat
push
stc
cli
adc
ss
mov
jno
mov
adc
and
ret
sub
pop
add
inc
or
push
mov
jle
enter
in
pop
icebp
fwait
icebp
test
ret
mov
push
inc
sbb
cmpl
pop
popa
stos
add
fsub
std
sarb
fsubrs
sub
arpl
fnstcw
adc
pop
aaa
test
leave
std
sbb
xor
inc
sar
push
push
aas
nop
out
dec
inc
sbb
popf
shr
jp
add
mov
mov
aas
fiaddl
lea
outsl
mov
cmp
mov
xchg
and
jne
jmp
stc
push
mov
pushf
bsf
call
mov
fidivs
xor
sbb
sbb
imul
push
adc
mov
mov
cmp
dec
or
repz
enter
lret
mov
stc
or
test
and
imul
and
push
mov
add
xor
jge
mov
std
std
sub
aad
sub
sub
mov
mov
lods
mov
mov
inc
jnp
aad
loop
adc
inc
inc
jb
and
sarl
aad
push
mov
sub
gs
push
or
movsb
es
xor
mov
jnp
xchg
fwait
fwait
stos
mov
test
test
imul
jns
imull
inc
jp
into
call
xchg
mov
sbb
inc
push
push
fistpl
jne
mov
lcall
scas
inc
cwtl
aam
push
push
xchg
fbstp
mov
mov
sbb
push
push
inc
mov
je
out
mov
pop
mov
mov
or
popf
sahf
push
push
loop
sbb
sahf
mov
cmp
lret
push
sbb
fcmovb
sub
xchg
add
insb
xchg
scas
xor
stos
in
or
adc
pop
jle
bound
in
fs
sbb
lcall
hlt
inc
popf
jae
mov
sub
xchg
es
pop
imul
movsl
xor
fdivp
outsl
fistl
imul
dec
insb
adc
repnz
xlat
mov
lea
int3
aas
lret
loopne
int3
loop
adc
dec
xor
pop
ss
rorl
xlat
fistpl
xor
in
jns
jge
leave
aad
sbb
mov
sub
loope
sbb
jbe
sub
pop
xchg
sub
dec
jb
arpl
adcl
jg
insb
mov
xor
mov
pop
roll
cmp
subl
dec
outsb
xor
sbb
dec
daa
adc
jmp
adc
pushf
push
addr16
iret
pop
aas
inc
ja
mov
das
dec
mov
subb
lock
mov
or
jmp
ret
shr
cmc
sub
movsl
mov
out
adc
add
mov
xchg
out
movsb
lea
scas
dec
add
inc
sub
out
xchg
gs
fsub
push
test
ljmp
arpl
mov
or
jo
sub
add
insb
ss
fadds
pop
cwtl
xlat
lock
xchg
mov
xchg
add
nop
cmp
addr16
fsubp
es
push
lcall
sub
je
or
mov
pushl
pusha
pushl
seta
mov
not
call
stos
lcall
ret
pop
fcomip
pop
sbb
xor
pop
jnp
fistps
and
inc
jo
movsb
mov
jo
adc
add
jge
js
pop
std
cmp
out
fbld
inc
fldcw
inc
andb
mov
cld
mov
repnz
and
cmp
lea
lods
dec
xchg
mov
jp,pt
jle
stos
ficoml
sub
sub
xlat
add
das
xchg
sub
mov
test
add
mov
lock
cwtl
sahf
out
jo
ret
mov
cmpsl
sub
outsl
dec
je
shl
cmp
scas
push
jb
mov
sti
push
aad
sub
enter
test
mov
int3
pop
hlt
add
int
xchg
mov
stc
cmp
push
lahf
rcll
outsl
dec
insl
add
data16
scas
fsubp
push
inc
inc
push
jle
sub
and
pop
arpl
icebp
and
dec
push
outsl
mov
dec
pop
xchg
jb
call
pusha
jbe
mov
lret
js
pop
imul
inc
pop
stos
pop
mov
dec
sbb
inc
shrl
sub
pop
nop
pop
imul
loopne
jb
mov
scas
mov
cmc
js
imul
push
fwait
jle
mov
mov
jbe
in
xor
sbb
mov
jge
es
popa
xor
jne
mov
stc
and
mov
andb
jb
mov
fwait
dec
dec
rcr
push
outsb
nop
sahf
movsb
lret
fadds
inc
ja
icebp
pop
out
mov
or
push
mov
mov
adc
pusha
jno
cmpsl
cmp
popw
es
aas
testb
pop
push
dec
aaa
addr16
push
insl
lods
or
adc
rolb
cmpsl
push
mov
insb
loope
sbb
cs
pop
movsl
mov
adc
push
ja
ret
decl
inc
dec
pop
mov
sbb
ljmp
int3
pop
lock
push
outsb
mov
cs
imul
fcompl
mov
jns
cwtl
test
int3
inc
pop
ja
cmp
cmc
jmp
adc
fdivrs
lods
jmp
shrb
cmp
sbb
push
and
pcmpgtw
lret
push
xlat
sti
and
int
add
mov
inc
inc
sbb
int3
xor
scas
aam
mov
ret
jbe
cmp
fiadds
xor
daa
xor
adcl
pop
mov
in
mov
lock
js
nop
stos
fdivr
sub
jo
xchg
int
filds
imul
imul
and
sub
out
add
inc
int
pop
sahf
sahf
fnstsw
xchg
cs
push
inc
shlb
dec
jl
mov
inc
cmc
inc
push
rep
cmp
fcoms
stc
inc
jnp
push
sub
pop
mov
and
cli
orb
loop
jo
mov
arpl
fidivrs
mov
das
aas
aas
pop
addl
addl
xor
cltd
sub
cmp
xchg
scas
fcos
cmp
cmpsl
xlat
out
stos
ficoml
movsl
xchg
ljmp
sub
mov
into
xor
sbb
adc
pop
xchg
jo
push
popf
stc
mov
lock
mov
pop
aaa
leave
mov
push
adc
cmp
mov
mov
clc
push
ficoms
sahf
enter
add
pusha
jb
into
aam
sub
cmp
sub
loop
cltd
inc
adc
or
xor
push
cmp
outsl
jnp
pop
mov
lods
push
push
aaa
push
sub
lret
and
loop
mov
icebp
jecxz
xchg
xchg
movsl
jb
nop
xor
push
sbb
push
xor
sub
jb
test
mov
pop
dec
jnp
repz
imul
sti
pop
ljmp
and
xor
cmp
pusha
pushfw
into
divb
in
add
inc
aad
pop
stc
popa
fisubl
into
test
mov
jne
pop
outsb
sbb
xor
push
xlat
adc
push
or
mov
mov
sub
sub
in
or
mov
stc
and
leave
aad
cmp
mov
mov
pop
jne
jmp
shl
btc
lea
add
test
neg
inc
mov
rcr
clc
mov
pushf
clc
pusha
clc
repnz
movw
movb
lea
jne
mov
movb
movsbw
setnp
sete
bswap
push
lahf
lahf
lea
pusha
pushf
mov
pushf
movl
lea
jne
push
pushf
pushf
pusha
pushl
ret
mov
mov
pushl
mov
pushf
pushf
pushl
ret
dec
in
push
inc
push
in
cld
mov
push
mov
fsub
sbb
cmp
test
in
sub
popa
lea
mov
cs
rolb
push
insl
push
mov
push
sub
ja
stos
shlb
sahf
add
clc
enter
mov
cld
or
push
jge
xchg
jle
es
adc
jge
in
pushf
ljmp
inc
pop
cmc
sbb
inc
ljmp
push
test
xorb
sti
inc
dec
jle
mov
inc
push
sbbb
cltd
add
sbb
cmp
shll
fstl
sbb
jecxz
or
stos
mov
loope
rcrb
mov
mov
xor
imul
mov
inc
jl
int3
out
pop
cmp
repnz
dec
pop
cli
lcall
push
jno
lods
rorl
cmc
mov
mov
push
mov
pushf
pushl
ret
sub
icebp
negl
insl
xchg
xchg
fwait
aad
xor
jnp
mov
jmp
dec
jg
dec
test
push
inc
adc
in
jle
or
mov
mov
aam
and
mov
or
movsb
cmpb
pop
mov
inc
jbe
jbe
mov
adc
mov
addr16
cmp
pop
xor
xor
repz
xor
inc
jg
mov
mov
lea
and
jne
shld
sar
dec
aaa
xor
bsf
lea
aaa
rcl
mov
shl
add
pusha
rcl
mov
jmp
es
add
nop
and
push
push
mov
data16
mov
sub
in
outsb
outsb
dec
pop
addr16
fisubrs
addr16
push
imul
pusha
test
pop
dec
arpl
inc
jae
sub
loop
sbb
add
frstpm(287
jo
xchg
pushf
mov
cmp
mov
mov
insl
mov
lea
idivb
xlat
sub
xor
inc
or
dec
fnstsw
addr16
insb
xor
jb
shll
arpl
sub
stc
cmp
jae
mov
int3
push
xchg
mov
or
sbb
add
rcrl
adc
and
outsl
cltd
mov
mov
add
std
adc
imul
adc
dec
jnp
lret
add
loop
rcr
adc
jecxz
pushl
lret
loope
dec
ja
mov
nop
mov
loop
mov
rolb
lock
sbb
stos
popa
pop
sbb
cmc
cmp
jl
lods
enter
cmc
dec
mov
out
and
xchg
sub
or
mov
stos
fdiv
cli
or
notl
clc
cs
loopne
sti
lods
js
adc
dec
jae
ds
movsl
mov
cltd
roll
xor
scas
mov
dec
push
pop
ret
xlat
sti
sti
mov
mov
dec
call
cmpsb
xchg
fwait
test
sub
xchg
xchg
lods
into
add
push
xchg
enter
int3
lahf
mov
inc
xchg
xor
lcall
lea
jb
inc
enter
mov
and
mov
lcall
mov
sub
mov
das
shrl
sbb
cmc
xchg
jg
into
cmp
xor
pop
jbe
ljmp
jp
mov
mov
je
dec
push
dec
dec
inc
xor
cs
insb
add
mov
popa
xor
out
sbb
jnp
frstpm(287
jecxz
cmc
stc
mov
int
mov
lods
xchg
jo
inc
or
xlat
fnsave
cltd
shr
ret
int
jle
in
jle
push
stos
repz
dec
mov
daa
jb
sub
in
movsb
cli
and
pop
pop
fsubrl
popa
cmpb
xchg
in
into
iret
mov
dec
mov
sbb
js
lret
int3
mov
dec
bound
dec
lcallw
sbb
js
mov
iret
dec
ret
pop
adc
inc
pop
pop
push
mov
sub
mov
ret
rorl
das
fsubrp
push
add
rorl
sbb
test
aam
dec
pop
test
xchg
sub
push
repnz
out
lcall
ljmp
jl
shrb
xor
shr
or
cli
jl
lret
jmp
rclb
movsl
fldenv
aas
nop
mov
jb
ret
repnz
dec
jp
out
mov
mov
jl
mov
sub
iret
dec
fcoml
sub
lret
loope
add
inc
sbb
nop
mov
push
insl
jb
gs
lea
mov
sbb
hlt
hlt
push
and
inc
inc
enter
js
mov
jo
shrl
imul
aas
jae
scas
scas
cmpl
jo
mov
sub
cwtl
out
out
cwtl
inc
pop
sbb
enter
sbb
add
push
aaa
jae
scas
lret
jmp
daa
pop
outsl
jg
sub
add
add
leave
pushl
lea
jmp
adc
repnz
ficoms
adc
mov
loope
sub
dec
push
pop
xchg
movsl
mov
iret
repnz
aam
repnz
hlt
inc
or
xchg
inc
test
lcall
imul
hlt
sbb
lahf
lahf
loope
testl
pop
xor
rcll
loopne
nop
sti
rcl
sub
xchg
jne
cwtl
sub
push
push
shr
insl
lock
cltd
cltd
xor
cwtl
and
and
push
or
xor
inc
push
mov
jbe
scas
inc
pushf
call
add
dec
outsl
arpl
inc
jb
add
int
mov
mov
inc
pop
cltd
iret
cmc
repz
pop
lea
and
xchg
cmp
out
add
mov
jmp
jo
rcll
pop
pop
dec
push
pop
jge
out
int
stos
xchg
popf
fs
ficoml
mov
repz
add
clc
mov
and
fwait
lahf
ret
or
repz
jb
adc
adcl
cmp
pop
ja
sub
imul
mov
sbb
rol
rol
push
not
shld
mov
cmp
mov
push
shl
cmc
cmc
mov
push
sar
call
add
push
outsl
insb
jns
outsl
outsb
add
movl
add
stc
add
fidivrl
out
xor
lret
inc
fisubs
cwtl
sahf
mov
push
mov
push
call
movsl
fisttpll
inc
imul
jmp
lods
lods
sub
rcrb
subb
mov
pop
test
shrl
dec
repz
sub
out
mov
mov
movsb
ss
and
bound
pop
es
cmp
iret
stc
xor
mov
add
sub
aaa
mov
cmpb
mov
xor
jl
mov
lret
pop
hlt
js
decl
sbb
mov
push
or
pop
xchg
dec
and
popa
mov
and
or
xor
jecxz
push
movsb
in
sbb
int
pop
cmp
push
pop
out
push
xchg
xchg
sbbl
jb
mov
adc
push
and
xlat
cs
mov
fmuls
bound
mov
push
jp
mov
je
mov
xor
and
add
xor
jo
mov
int3
add
mov
mov
pop
fildl
and
les
jns
test
scas
lret
mov
jne
xchg
mov
mov
imul
inc
rorb
xor
stos
adc
std
cmp
js
cmp
jmp
push
in
adcb
cwtl
mov
or
test
mov
clc
and
fnstsw
sbb
movsl
loope
or
test
mov
jne
sub
pushf
lea
jne
movzbw
rol
mov
not
test
pusha
sub
shl
pop
lea
movw
sub
stc
pushl
popl
pusha
cmp
cmc
cmc
cmp
push
movb
call
pusha
lea
je
cmp
clc
sub
cmc
test
test
test
cmp
pusha
jmp
not
jmp
pusha
lea
call
ja
push
push
push
lea
jb
pusha
push
pushf
pushf
pushl
ret
fiadds
mov
jl
xor
xchg
jo,pt
test
add
fprem1
sbb
sub
loop
lret
popf
outsb
ds
sbb
jne
clc
sub
pop
insb
mov
or
inc
inc
xor
loope
cmp
movsl
xor
jne
pop
in
mov
gs
aas
push
adc
sub
imul
adc
push
jl
rcl
lock
sub
sub
xchg
adc
push
and
movzbw
jmp
fs
imul
pusha
push
scas
in
or
and
pop
je
mov
mov
pop
xchg
cmpsl
sti
fdivrl
call
pop
xor
push
add
dec
add
repz
enter
lret
mov
adc
sub
mov
lcall
ficoml
adc
out
inc
leave
cmc
sbb
hlt
cmp
aam
jg
xchg
test
sbb
jge
mov
sahf
std
jg
jno
test
popa
call
sbb
lret
stc
xor
xchg
inc
aaa
jl
les
lods
mov
lea
mov
loop
dec
lea
sti
add
push
mov
pusha
pusha
orb
and
sbb
sub
lods
insb
jmp
outsl
outsl
lods
outsl
jmp
jl,pn
sbb
mov
push
in
outsl
jne
mov
mov
imul
ret
popf
dec
adc
iret
push
sbb
adc
cli
cltd
pop
out
adc
push
xchg
xchg
push
push
cs
mov
out
and
lcall
sbb
inc
inc
dec
push
jae
jecxz
add
jno
dec
jns
lahf
cmpsl
cmp
fs
pushf
into
hlt
cli
adc
test
cmp
xchg
roll
fwait
sub
pop
and
inc
xchg
ds
jne
in
imul
mov
and
pop
out
cmp
out
jbe
and
push
sbb
push
jno
mov
in
xchg
fwait
adc
and
dec
adc
dec
push
arpl
inc
pop
xchg
loopne
enter
mov
ret
pop
nopl
pop
xchg
xchg
fwait
int
or
mov
test
scas
xor
push
cmp
lcall
pusha
ljmp
out
fucom
cli
lock
subps
xchg
xchg
pop
mov
sub
push
je
orl
inc
or
sub
popf
stos
in
xor
dec
jge
shr
or
mov
jo
idivb
lcall
xchg
xchg
mov
push
lcall
dec
xchg
stos
gs
and
in
mov
xor
fwait
sbb
fs
fistl
pop
test
sbb
insl
into
imul
sbb
pop
jb
cli
test
addb
ret
xor
adc
addr16
test
jbe
mov
push
jns
xor
test
negb
es
jb
stos
into
push
push
pop
jb
sub
pusha
repnz
xor
daa
ja
xchg
movsl
lret
add
dec
dec
jge
ror
pop
aaa
and
jb
scas
cmp
mov
inc
repz
lcall
cmp
adc
jecxz
jl
mov
popf
lea
orl
ret
sbb
sbb
inc
mov
push
lcall
pop
loop
cmc
daa
pop
pop
or
loopne
cmpsb
mov
lret
sub
outsb
xchg
cmpsb
scas
mov
jno
movsb
pop
jnp
dec
push
cmpsb
in
pushf
sti
test
js
mov
testb
push
mov
sub
popf
mov
add
in
ljmp
inc
push
push
fwait
lret
pop
imul
adcl
addb
inc
pop
jb
sub
pusha
loop
inc
and
inc
std
xchg
repnz
jmp
push
outsb
js
lret
xor
scas
lods
ret
inc
push
jl
mov
cmp
iret
shl
and
adc
mov
mov
ja
dec
incb
xor
das
scas
mov
xchg
stc
and
dec
outsb
lret
jl
hlt
pop
pop
or
mov
daa
daa
push
arpl
arpl
mov
enter
pop
dec
dec
stos
cltd
cmpsl
cmp
dec
jg
xchg
movsl
movl
movsl
test
icebp
and
xor
in
pop
or
xchg
cltd
mov
mov
mov
cld
inc
fidivl
fs
ljmp
rolb
outsb
and
inc
lcall
mov
sbb
inc
ret
jmp
xlat
cmp
movsb
mov
xor
mov
div
and
xchg
mov
jg
cmp
imul
xor
shl
sub
xlat
add
fwait
push
push
or
push
sbb
push
fyl2x
adc
sbb
jo
icebp
sub
pushf
inc
fidivrs
adc
mov
cmp
loope
or
dec
or
out
movsl
or
sbb
mov
jg
xchg
lcall
adcb
push
andb
mov
jg
lods
cs
add
pusha
jl
add
clc
mov
inc
pop
addb
push
inc
js
aas
jae
addr16
aad
mov
arpl
stos
fistpll
in
sub
lret
sub
adc
cld
cmp
pop
push
in
sbb
jno
jg
das
test
pop
xor
js
cli
shrl
mov
int3
dec
dec
or
jle
ret
push
sub
clc
sub
push
add
inc
addb
jl
shlb
lock
mov
lret
std
or
mov
imul
loope
xor
mov
notl
and
cmp
inc
pushf
pushf
sub
or
sahf
fwait
xchg
push
xchg
or
adc
sbb
push
lret
pop
in
jne
mov
cld
push
push
xchg
or
jp
mov
inc
mov
inc
push
mov
outsl
ljmp
daa
xor
mov
push
adcb
jl
clc
jp
in
cmp
aad
jo
in
cmp
imul
cmpsl
ret
repz
dec
cli
imul
push
mov
vpsrad
xor
add
mov
inc
and
mov
addr16
test
ficomps
push
fs
mov
sar
sbb
lret
pop
outsb
jo
mov
sub
je
test
or
lea
jg
push
push
lea
jmp
les
pop
dec
pop
and
sar
xor
dec
imul
adc
cmp
int3
repnz
pop
xor
sub
scas
inc
inc
push
xor
jge
or
mov
sbb
fabs
push
out
push
push
cmp
jmp
push
dec
mov
mov
dec
pop
and
dec
add
pop
xor
push
mov
dec
add
xchg
pop
dec
ret
mulb
and
adc
push
push
mov
pop
aas
mov
in
scas
cmp
lcall
das
push
pop
jnp
fwait
ret
rorl
xorl
push
xor
lret
sbb
sbb
inc
jb
lcall
lahf
mov
or
dec
jae
fildl
push
movsw
int
mov
pop
and
jo
push
mov
xchg
lahf
lret
or
outsl
mov
sbb
lock
sbb
mov
cwtl
clc
ficomps
jbe
or
mov
xor
test
xor
adc
push
add
leave
pop
jbe
inc
and
addl
loope
mov
push
in
jge
test
insb
das
push
sbb
loopne
mov
sub
clc
pop
test
out
jg
loop
daa
daa
pop
das
mov
xor
repz
inc
add
sub
xchg
bound
ds
mov
or
jae
pop
inc
cmp
rcll
mov
pop
insb
daa
cmp
in
mov
fcmovnb
xchg
jno
bound
xchg
fwait
stos
filds
push
xchg
mov
xor
shrl
or
xlat
jmp
stos
in
xchg
push
cmp
inc
fcmovnb
outsb
mov
inc
add
xchg
mov
inc
les
jge
outsb
mov
call
movsb
test
cmpsb
fiaddl
test
bound
mov
sbb
xor
dec
lret
stc
xor
movsl
arpl
or
imul
add
cmpsl
cmp
pushl
imul
push
call
cmc
daa
dec
dec
push
ja
and
xchg
lcall
pop
jbe
mov
adc
dec
lahf
xor
dec
ljmp
sub
rcrl
sub
call
insl
push
imul
dec
push
in
jne
fisubs
mov
cmp
push
sub
popa
xchg
mov
inc
je
mov
sbb
nop
xchg
es
inc
dec
push
jbe
into
push
ss
push
sub
inc
enter
jge
incl
sar
or
mov
repz
daa
dec
arpl
test
out
ficompl
or
and
lods
aad
sarb
dec
pop
out
push
lock
pop
aaa
adc
lahf
sbb
ss
orl
repz
mov
or
adc
inc
or
out
repz
icebp
sbb
sbb
fcompl
xchg
xchg
and
dec
mov
test
inc
dec
fdivp
test
add
ds
orb
frstpm(287
out
or
ljmp
movsl
pop
pushf
imul
jle
adc
aas
sbb
bnd
enter
lahf
aas
xchg
mov
mov
hlt
stc
das
push
jne
cmp
fsubrp
or
pusha
xorb
addb
add
adc
in
test
inc
or
jg
subl
data16
les
stos
fsubr
jo
daa
dec
or
dec
aad
data16
pusha
daa
mov
cmp
pop
xor
push
mov
sbb
sahf
in
pop
cmpsl
leave
xor
data16
xchg
mov
mov
xchg
out
add
aas
insl
mov
loopne
sbb
xor
scas
ret
data16
mov
jns
mov
stos
dec
push
cmc
xchg
lods
inc
jnp
mov
dec
jae
mov
sbb
dec
sahf
jge
jbe
and
xchg
mov
push
fnstenv
and
cmp
add
xor
jp
call
push
das
mov
cwtl
push
out
cs
and
jbe
fiadds
xor
mov
in
scas
pop
pop
pop
cmc
ja
jge
rcrb
shll
test
sti
mov
enter
out
add
xor
lahf
sar
add
pop
mov
data16
xor
sub
add
test
jmp
mov
fcmovnbe
hlt
add
mov
shl
bt
rol
mov
shl
clc
cmp
shr
and
shl
rol
mov
pushf
add
jnp
pusha
or
movw
jmp
xchg
sbb
outsl
test
fists
cmpsl
mov
popa
jno
movsb
jecxz
cmp
xacquire
xchg
sbb
sbb
push
inc
pop
test
imul
adcb
nop
stos
cli
test
add
aad
stos
mov
bound
pop
xlat
mov
push
stc
inc
lcall
idivl
jg
inc
iret
popa
mov
aam
in
ds
push
dec
ja
ret
jge
movsl
mov
stc
adc
lea
sub
ret
and
add
pop
cmp
inc
mov
add
mov
mov
push
mov
mov
jg
mov
pop
mov
fs
fistl
ss
bound
xlat
orl
xorb
cmp
fistpll
push
cmpsl
adc
js
lock
sbb
sub
lods
push
dec
dec
xchg
sub
addr16
jge
ds
mov
or
ds
sub
and
cwtl
add
or
mov
movsb
in
mov
fs
sub
addr16
pop
xchg
lcall
icebp
xchg
aas
jle
mov
dec
das
push
inc
arpl
sbbl
cmpsl
daa
cmpsl
pop
cmpsl
loop
mov
pop
cmp
cmp
pop
inc
repnz
mov
mov
adc
adc
ret
sub
daa
jns
inc
mov
cmp
lcall
mov
mov
pop
inc
xchg
dec
dec
adcb
sub
call
nop
gs
lods
mov
lcall
scas
fwait
push
fwait
xchg
fwait
popa
addb
or
enter
imul
iret
dec
mov
shlb
sub
ret
dec
call
cmp
arpl
and
cwtl
shr
sub
adc
outsb
dec
lret
leave
lock
jecxz
push
addr16
dec
dec
or
orb
xchg
sbb
inc
popa
lcall
inc
call
push
jnp
mov
fisubl
xchg
lret
sti
sbb
add
sbb
sbb
add
xchg
push
xor
adc
test
in
aad
addl
push
inc
sub
xchg
or
adc
or
fsubp
arpl
cmpsl
aad
das
sub
mov
test
cmpsl
lcall
adc
xor
cmp
leave
jecxz
sbb
xchg
loopw
mov
int
cmc
test
inc
push
lret
or
iret
push
jp
sbb
add
ja
lret
or
inc
add
pop
mov
imul
loope
gs
sub
neg
arpl
icebp
adcl
add
in
xchg
or
add
mov
fwait
pop
push
testl
subb
outsl
add
js
push
cld
je
push
out
xchg
sti
add
lahf
lods
pop
adc
cli
sub
and
pop
test
sub
push
adcb
shll
xchg
leave
mov
and
add
jae
jns
pop
add
dec
adc
pop
mov
aad
push
xor
push
push
sbb
aaa
lcall
imul
gs
fcoml
pop
int3
insl
add
outsl
movsl
movsb
sahf
fsubrl
addr16
jae
xchg
sbb
cmp
mov
add
mov
sbb
fcomps
icebp
orl
adc
addr16
dec
lods
xchg
aad
or
sub
jmp
dec
arpl
sbbl
out
in
sbb
push
xchg
cmpsb
lahf
pop
icebp
sbb
sub
or
or
out
mov
add
sbb
and
aad
subl
das
sti
xchg
test
xchg
notb
xchg
or
int
clc
inc
hlt
test
or
push
aas
out
adc
sbb
mov
sub
movsl
ljmp
leave
adc
dec
arpl
imul
or
in
sbbl
mov
fimull
or
cmp
mov
test
push
push
pop
sub
sub
orl
or
jmp
sbb
cmp
ss
mov
cmp
pop
adc
lcall
or
lock
out
in
lcall
sti
sbb
out
push
xor
mov
cmp
enter
arpl
rcrl
mov
test
dec
lods
xchg
enter
sub
xchg
adc
mov
in
xchg
lahf
cmc
jmp
add
inc
and
bound
xchg
or
xchg
adc
xchg
mov
lods
xchg
dec
xchg
push
mov
mov
cmpsb
sub
push
jp
rorb
ret
ds
xor
adc
cmpsl
sub
scas
cmpsl
mov
movsb
loopne
in
in
adc
int
repz
and
loope
dec
int
mov
icebp
jno
in
arpl
popa
xchg
push
mov
pop
adc
pop
xchg
add
jb
or
and
or
mov
popf
push
popf
fiaddl
stos
pop
popf
popf
or
xor
xchg
cmp
ljmp
lods
repnz
dec
mov
jb
mov
dec
jae
fbld
sbb
js
stc
pop
xchg
andb
adc
or
add
fildl
sbb
jo
out
lods
dec
pop
xchg
mov
dec
inc
xchg
out
xchg
inc
rorb
pop
mov
jno
sub
test
addr16
sbb
imul
call
dec
inc
push
cmpsb
mov
sub
scas
cmp
sbb
adc
cmpsb
out
xchg
mov
add
mov
cld
shll
mov
and
aad
mov
or
push
aas
inc
das
or
xchg
movsl
mov
sahf
test
inc
out
cwtl
test
sarb
sahf
mov
lahf
call
add
xchg
mov
lcall
lret
bound
pop
jg
jbe
movsl
xlat
or
ja
inc
xchg
test
fwait
sti
sbb
pop
ficomps
cwtl
cli
xchg
push
jae
addb
jl
jnp
loope
sub
ss
push
cltd
ret
pop
popa
ds
pusha
adc
insl
mov
mov
test
and
push
scas
mov
mov
xchg
dec
jmp
test
add
out
or
inc
nop
outsb
mov
push
sbb
repz
dec
outsb
mov
aas
pop
ficompl
stos
push
or
pusha
inc
das
movsl
dec
jbe
loopne
je
popf
adc
sub
lods
int
mov
xchg
push
sub
push
aaa
leave
inc
insl
sub
cltd
push
pushf
adcb
fcmovb
test
adc
pop
lret
push
inc
lods
in
sub
jmp
or
cs
outsb
rorb
addb
jle
movsl
adc
pop
iret
cwtl
cli
dec
lods
push
mov
sub
test
push
lahf
inc
sahf
inc
nop
iret
repz
or
flds
or
jle
stos
push
in
dec
inc
or
or
mov
push
jle
dec
adc
in
add
shrb
and
mov
lock
mov
and
jge
les
pop
push
pop
xlat
flds
dec
divb
cmp
push
sbb
cmc
xchg
sbb
mov
fs
jmp
inc
jg
setae
mov
sbb
stc
jbe
test
out
repz
aad
bound
sbb
movsl
ljmp
inc
inc
pop
andb
xor
mov
imul
out
jl
mov
push
add
movsb
jnp
push
sbb
fwait
adc
inc
jg
repz
add
pusha
jne
cltd
and
pop
cmpb
jo
arpl
sub
xchg
cmpl
pop
push
lret
js
inc
sbb
lds
cmpsl
inc
mov
movsb
push
dec
sbb
sbb
mov
dec
dec
inc
mov
leave
mov
stos
mov
dec
mov
outsl
int
lret
lods
xchg
jne
lock
dec
mov
sbb
or
test
mov
iret
push
or
inc
pop
dec
mov
or
dec
aam
mov
inc
inc
xchg
in
ret
jecxz
test
cmp
sahf
gs
inc
adc
inc
je
test
jmp
push
xchg
add
mov
add
in
or
sub
sbb
and
sti
mov
cmp
aad
inc
add
dec
xchg
adc
addr16
sbb
les
test
and
pop
ret
adc
lock
popf
lret
jmp
mov
jle
push
popf
push
ret
push
push
fldl
cli
ret
cmpl
xlat
add
scas
mov
sahf
mov
mov
icebp
jp
das
adc
rcrb
xchg
push
lock
sbb
xchg
mov
inc
dec
or
mov
sbb
and
test
shlb
or
inc
mov
and
test
push
inc
lahf
inc
stc
sub
test
pop
inc
stc
loope
and
sti
loop
push
pushf
pop
pusha
adc
int3
popf
and
inc
push
sub
mov
out
mov
popa
test
cmpl
sub
xchg
or
repnz
xchg
sbbb
ret
cmp
push
std
xlat
cmp
mov
jg
or
mov
inc
add
jecxz
pop
mov
sbb
fsts
and
pushf
filds
test
sub
fisubrs
sbb
mov
add
popf
ret
mov
pop
xchg
pop
xchg
add
push
clc
xor
rolb
inc
mulb
xchg
sbb
movl
out
mov
sbb
daa
fcmovnb
add
inc
mov
imul
sbb
push
mov
pop
into
cmpsl
sbb
xchg
dec
add
lahf
pop
dec
sub
inc
lods
fcoml
jo
cmp
xchg
jl
add
adc
inc
sti
addr16
int
add
adc
push
popf
adc
fnsave
lods
test
lock
add
adc
into
push
movsl
mov
insb
dec
decl
out
les
orl
dec
push
add
loop
jns
inc
dec
les
loopne
test
rclb
pop
and
push
add
sbb
pushf
test
pop
push
ret
and
ret
and
orb
xor
sbb
xchg
ret
xchg
or
fisttpl
cmp
add
movl
xchg
sahf
pop
push
add
inc
or
fwait
cmp
idivb
mov
adc
or
testb
push
lret
loop
fisttps
mov
pop
iret
cmp
inc
mov
mov
idiv
int3
add
cmpl
stos
and
xchg
mov
js
subb
sahf
addr16
xchg
adc
movsb
fwait
add
fiadds
ljmp
sbb
inc
addr16
push
inc
xchg
add
lahf
cmp
inc
pop
and
or
and
fnstsw
ds
push
mov
xchg
arpl
addb
lret
xchg
xchg
and
pop
add
addl
or
inc
out
add
cmpsl
and
xchg
inc
addr16
lahf
inc
jb
inc
daa
and
pop
aaa
sbb
mov
xchg
lahf
or
inc
mov
and
add
add
lahf
or
inc
mov
mov
mov
lahf
inc
inc
and
adc
inc
nop
add
lahf
or
and
add
lahf
adc
inc
xchg
and
ja
inc
adc
lahf
adc
inc
pop
and
sbb
lahf
cwtl
jb
inc
adc
add
add
lahf
xchg
jb
inc
sbb
mov
sbb
jle
pushf
jb
inc
sbb
ds
ja
inc
sbb
inc
pop
and
pop
mov
fstpt
mov
not
xchg
jbe
ss
dec
cmc
aad
xchg
jne
mov
cmpsl
pop
ret
loop
mov
addb
sub
mov
jl
out
sti
sbb
mov
push
cmp
and
cmp
and
and
popa
mov
add
mov
pop
fiadds
add
jge
mov
push
mov
out
mov
pop
push
fistl
mov
sti
andl
cmpsl
movsb
test
jge
pop
push
dec
add
std
ret
loope
je
fs
fisubs
roll
push
xor
adc
or
popw
addb
dec
add
xchg
adc
inc
inc
and
mov
fisttpll
daa
nop
stos
pop
pop
pop
adc
dec
mov
ljmp
and
xchg
jle
mov
mov
addb
push
pop
scas
dec
ret
lahf
and
inc
inc
inc
cwtl
xchg
addl
sbb
addr16
cwtl
dec
fs
and
cwtl
inc
bound
fs
jp
icebp
sahf
orl
inc
push
add
xor
dec
les
add
xchg
movsb
or
pop
dec
inc
test
sbbb
and
xchg
add
dec
add
push
subl
inc
add
xchg
or
inc
sbb
cwtl
xchg
ds
mov
daa
and
pop
std
addl
xorl
mov
decb
cwtl
inc
in
xchg
xchg
dec
xchg
cwtl
add
inc
and
xchg
inc
repnz
sbb
dec
out
mov
or
rolb
dec
fnsave
in
aam
arpl
push
cmp
push
adc
and
sbbl
inc
in
dec
popa
jge
mov
loope
push
cmp
dec
pop
sbb
pop
mov
shl
add
adc
std
xchg
sbbb
insb
fimull
inc
cmpb
cmpsl
mov
and
loope
dec
inc
orl
popa
notl
cwtl
lea
mov
dec
lahf
pusha
popa
dec
xchg
jg
cli
dec
dec
bound
fs
pop
pop
cwtl
loop
repz
or
and
pusha
aas
cwtl
xrelease
dec
pop
cwtl
pusha
cli
popa
xchg
jno
jb
or
negl
ret
rorl
arpl
add
in
sbb
and
dec
and
or
cmp
loope
dec
fs
xor
fs
and
pusha
inc
mov
fcomps
sahf
lcall
addr16
ja
add
test
dec
sbb
add
in
dec
and
lcall
cld
imul
arpl
pop
inc
dec
inc
jl
loope
jb
or
cwtl
adc
mov
sti
sbb
std
xchg
dec
mov
cwtl
stos
xchg
fisttpl
mov
or
popa
inc
or
xchg
or
inc
push
add
inc
sbb
adc
sub
mov
andb
loope
xchg
cwtl
xchg
sbb
addr16
mov
mov
cwtl
ret
ds
dec
jne
roll
icebp
fwait
mov
daa
orl
jns
les
push
fsts
or
popf
clc
pop
cwtl
xchg
mov
loop
or
pop
and
scas
pop
inc
dec
jns
xchg
pop
cwtl
xchg
cmp
dec
and
xor
xlat
dec
aam
cmp
sbbl
in
fistpll
add
add
and
pusha
xchg
cwtl
sbb
ja
pop
dec
fists
lcall
aaa
jge
sbb
je
repnz
addl
add
adc
xchg
xlat
jb
flds
xor
popa
xchg
out
xor
inc
jecxz
and
add
cwtl
icebp
xor
icebp
mov
mov
popa
rorl
in
mov
xchg
sbb
dec
inc
inc
les
sahf
pop
testl
out
dec
inc
xor
fs
and
hlt
sbb
sbb
js
icebp
or
divl
xchg
orl
in
inc
movsb
popa
popa
xchg
mov
repnz
sbb
lahf
xchg
sbb
add
icebp
and
mov
mov
ficoms
xchg
xor
loope
dec
mov
dec
mov
fs
cwtl
scas
add
mov
outsb
aaa
inc
and
dec
jno
inc
out
add
cs
shl
shlb
jbe
adc
pop
xchg
cwtl
int
mov
xchg
mov
xchg
stos
out
iret
sahf
rorl
dec
popf
inc
and
pop
out
les
mov
cwtl
or
adc
push
add
aad
fwait
or
adc
adc
adc
dec
and
lahf
jle
mov
adc
mov
inc
cmp
nop
dec
jo
ret
mov
cwtl
xor
pop
loopne
shr
iret
loop
outsl
insl
add
add
das
cwtl
paddusb
inc
ds
pusha
add
out
lret
icebp
or
arpl
dec
inc
push
and
and
dec
cwtl
rol
sarb
out
js
sub
mov
mov
mov
dec
xchg
inc
xchg
test
mov
icebp
dec
pop
imul
inc
add
movsb
inc
popa
mov
fs
mov
pop
pop
cwtl
dec
cwtl
add
xchg
and
sub
loop
pop
dec
andl
popf
mov
movsb
mov
in
sub
int3
loop
or
lahf
inc
and
addl
dec
loope
dec
and
or
inc
add
addb
dec
add
jmp
pop
icebp
fisttpll
lret
cwtl
inc
stos
dec
mov
xchg
testl
in
arpl
dec
jns
inc
testl
and
and
push
and
arpl
inc
add
mov
data16
fldl
xchg
arpl
dec
dec
in
mov
pop
xchg
xchg
decb
pop
xlat
pusha
std
mov
pusha
addr16
movsl
cwtl
adc
and
pop
test
adcb
mov
jae
and
popa
pop
dec
fstl
mov
sahf
sbb
add
popa
mov
mov
inc
inc
sahf
add
call
dec
movsb
enter
test
mov
add
push
xchg
fstpt
orl
dec
inc
test
pusha
dec
js
inc
fildll
arpl
iret
mov
dec
jb
xor
fcomps
fnsave
xchg
addr16
call
pavgw
xchg
adc
ret
cld
jb
mov
and
cmpb
mov
add
push
mov
add
add
dec
jle
pusha
mov
ret
dec
or
and
mov
fwait
mov
fiaddl
inc
dec
jns
inc
pop
popa
sbb
dec
inc
xor
dec
pusha
shll
and
incl
and
and
and
in
push
roll
pop
fisttpll
movsb
fcomps
je
dec
leave
pusha
jle
fs
push
dec
aad
mov
notl
js
pop
in
dec
dec
mov
in
dec
push
add
imul
dec
lcall
mov
xor
dec
xchg
pop
test
inc
fs
andb
das
inc
inc
add
pop
add
and
add
imul
mov
mov
adc
sahf
in
lahf
jmp
add
sbb
add
inc
jle
xchg
and
xor
dec
sbb
mov
xchg
int3
adc
cmp
mov
out
mov
dec
fistps
pop
pop
in
dec
pop
rolb
arpl
test
sbb
add
loopne
inc
add
dec
sti
rolb
dec
pop
add
jl
js
xchg
arpl
dec
out
inc
fwait
addb
xchg
in
test
dec
popl
decb
fbld
dec
xor
xchg
push
frstor
add
fs
dec
lds
mov
and
sub
mov
xchg
push
fisttps
pop
popa
xchg
xchg
lahf
rcrb
and
xchg
sbb
fstpl
loope
aas
jnp
sub
mov
inc
mov
pop
pop
lahf
out
inc
pop
mov
push
rcrl
xchg
test
or
movsb
mov
popa
and
fs
pop
popf
fsubs
out
sbb
push
xchg
push
frstor
mov
mov
mov
loope
inc
movsb
xlat
jnp
das
sbb
pop
loop
xchg
mov
sbb
lcall
std
or
les
mov
dec
and
test
xlat
daa
je
fsubrp
xchg
cwtl
xchg
cmpl
add
shl
pop
orl
xchg
inc
loop
mov
inc
bound
and
addr16
std
dec
push
xchg
adc
dec
fiadds
mov
inc
dec
jmp
lret
ds
and
mov
loop
ret
sbb
roll
adc
add
xchg
or
add
daa
inc
loopne
in
inc
mov
pop
test
bound
sbbl
pop
mov
inc
in
out
and
fistps
orb
mov
ret
movsb
je
sbbb
bound
push
rclb
cmp
mov
shll
pop
or
xchg
and
xorl
adc
lahf
std
mov
out
aas
mov
or
jg
cmp
pusha
cmp
dec
incb
mov
and
inc
add
pop
movl
mov
daa
pop
ds
mov
stc
lds
pop
fwait
adc
into
push
addr16
mov
orl
xchg
daa
mov
ret
and
dec
pop
mov
popa
mov
pop
loope
xchg
xchg
int3
rcrb
sub
mov
sub
flds
cltd
pushf
fldl
add
pop
xchg
movsb
addl
cltd
sub
sbb
xchg
arpl
cmp
add
push
xchg
adc
fs
pop
xchg
push
addr16
popa
addr16
jle
dec
pushf
lahf
daa
sbbb
dec
or
lds
pop
xchg
inc
les
les
add
jecxz
dec
cmp
sbb
adc
inc
inc
incb
addl
test
pop
aam
adc
adc
loopne
rorl
call
mov
and
inc
inc
and
pop
aad
mov
jl
inc
pop
sbb
adc
push
lcall
test
or
popf
mov
les
scas
xchg
or
cltd
push
fucom
or
xchg
inc
jle
push
pop
xchg
pop
dec
out
sti
cmp
jle
xchg
movsb
fldt
fisttps
pop
pop
mov
fwait
push
or
or
out
loopew
xchg
and
leave
std
add
roll
dec
sti
lcall
pop
out
inc
outsb
lcall
sbb
or
add
fs
pop
les
mov
jle
add
adc
lahf
add
inc
mov
lret
sub
pop
nop
loope
and
in
add
pusha
inc
jle
inc
loop
addl
push
fiadds
int
mov
pop
andl
pop
invd
punpcklwd
inc
inc
or
inc
fcompl
pop
std
adc
adcl
movsb
popf
xchg
outsb
shll
js
js
add
sub
enter
pop
movsb
addr16
pop
mov
js
dec
int3
inc
or
and
fdivrp
mov
add
inc
lahf
pop
sbb
je
mov
imul
xchg
xchg
push
lret
dec
dec
out
inc
push
push
push
sbbl
test
and
in
and
test
add
dec
and
mov
sbb
out
pop
xchg
mov
dec
push
loop
and
iret
notl
sbb
js
ficoms
xchg
push
testb
nop
bound
cmc
movl
xchg
in
or
xchg
mov
or
and
or
js
add
inc
fidivrs
sbb
push
lcall
lahf
dec
mov
daa
xchg
or
popa
aad
add
and
les
and
inc
and
push
jl
mov
or
or
xchg
push
mov
push
xchg
js
jne
push
sbb
mov
and
xchg
push
push
add
sbb
xchg
add
or
adc
adc
js
add
xchg
fsubr
test
or
out
sbb
pushf
inc
and
dec
fiadds
or
outsb
mov
insb
rcll
adc
or
mov
loope
cli
out
jne
popl
xchg
mov
imul
dec
or
xchg
fsubrs
outsb
sbbl
mov
rcl
sbb
pop
sbb
or
add
stc
roll
add
inc
lcall
jle
js
nop
dec
push
sbb
adc
mov
xchg
dec
or
aad
add
xchg
and
arpl
in
dec
add
xchg
or
leave
clc
sbbb
scas
cwtl
aaa
xor
dec
pop
addb
jae
daa
push
inc
adc
pusha
pop
push
aam
inc
inc
inc
aam
adc
cmp
cmpsl
test
jl
arpl
adcb
or
rol
ret
inc
add
addl
leave
xchg
or
push
pop
or
pop
cmpl
mov
dec
xchg
sbb
sbb
pop
addr16
aas
fstpl
xchg
dec
push
xchg
pop
pop
push
fadd
fwait
test
mov
xor
xor
sbb
add
addr16
std
dec
fmuls
movsb
ret
push
js
fsts
fcoms
mov
sub
loop
cmpb
mov
repz
fidivrs
pop
daa
xchg
filds
add
add
addr16
add
lcall
dec
sbbl
sbb
ds
mov
cli
and
dec
daa
ret
popa
push
sahf
mov
pop
rcll
lea
pop
dec
pop
xchg
lcall
sbbl
dec
push
pusha
or
testl
bound
sbb
sbb
cltd
pop
sarb
mov
pushf
adc
fs
lret
js
add
push
inc
int
pop
push
pop
fcompl
rcll
pop
sahf
pop
andl
movb
xchg
fwait
in
sar
cli
mov
jmp
aad
and
test
jecxz
fidivs
push
inc
cld
inc
push
jp
inc
pop
pop
iret
ja
out
or
rcl
notb
inc
pop
sahf
pop
loop
js
sub
inc
mov
dec
lcall
xchg
enter
xor
rcll
adc
and
inc
xor
push
out
push
mov
ret
call
out
sbb
cld
loopne
pop
add
ret
add
loop
js
jl
jge
notb
rcr
cmp
cli
into
jle
cwtl
jno
xor
add
cld
xchg
inc
jns
stc
dec
insl
cwtl
loop
cmpsl
movsb
add
out
add
ret
xchg
je
in
xchg
jl
pop
jp
dec
frstor
pop
adc
sub
dec
ret
xor
lahf
ds
lahf
adc
movl
add
add
arpl
add
in
sbb
add
mov
aaa
xlat
lcall
loop
inc
mov
inc
fwait
sbb
jnp
cmpsl
pop
adc
popl
sub
in
mov
cwtl
jg
adc
push
dec
xchg
pop
subl
xchg
pop
cwtl
rolb
push
fwait
test
mov
pop
sub
icebp
or
fsubrl
xchg
or
xchg
pop
xchg
outsl
mov
push
inc
addr16
mov
rcr
fwait
sti
push
inc
aas
inc
jecxz
pop
lahf
pushf
pop
push
dec
rolb
xchg
aas
add
sbb
sbb
ret
fisubl
xorl
push
add
push
addr16
and
xchg
add
push
leave
sahf
nop
cmp
cwtl
adc
pop
push
add
pop
push
out
hlt
in
pop
inc
xchg
pop
mov
pop
jnp
arpl
sbb
xchg
pop
aam
into
adc
dec
sub
inc
mov
and
fcom
pop
mov
test
cwtl
push
xchg
xchg
push
or
aaa
xchg
xchg
or
mov
adc
adc
jmp
dec
das
andb
fldl
push
fstpt
sahf
xchg
adc
add
mov
lds
js
sbb
pop
pusha
push
add
leave
xchg
test
inc
setno
or
pop
adc
cmova
add
test
jb
ret
push
push
sbb
jle
push
push
push
xchg
and
mov
les
rolb
xchg
sbb
ja
rcll
inc
dec
pop
dec
loop
and
xchg
push
pop
cmp
and
xor
ds
sahf
push
jnp
repnz
test
mov
rclb
push
jns
addl
push
xchg
jnp
sbb
pop
loop
jae
fwait
test
cmp
pop
aad
test
dec
jnp
packssdw
push
fs
and
aad
test
add
adc
pop
jg
out
shrb
xchg
xchg
and
fs
adc
mov
mov
pop
add
xchg
push
push
sbb
cmp
jns
add
jecxz
jle
mov
arpl
push
adc
loop
inc
adc
mov
add
add
sbbl
arpl
incb
pop
dec
inc
pop
loopne
xor
xchg
jecxz
add
std
addr16
pop
push
jle
sbb
vpmacssdql
and
mov
push
inc
xchg
into
call
dec
add
notl
xchg
pop
into
xchg
in
and
int3
cli
inc
push
fisubrs
xchg
xlat
xchg
lahf
sbb
pop
in
and
add
jecxz
into
sbbb
and
pop
jp
xlat
cli
pop
ret
and
inc
pop
inc
push
mov
inc
dec
fisttpll
add
xchg
xchg
xor
out
pop
in
dec
xchg
push
jo
js
inc
and
xor
outsb
push
dec
jl
and
mov
pop
or
xorb
mov
in
xor
repz
test
xor
mov
xchg
pushf
xchg
or
xchg
aam
push
adc
int
jecxz
inc
dec
daa
sub
push
xor
jns
sbb
hlt
xchg
loope
dec
push
loop
add
dec
ret
mov
andl
and
lahf
add
sbb
fmuls
pusha
push
push
pop
xchg
les
xchg
stos
arpl
pop
ficompl
push
pop
les
fs
imul
sub
orb
fwait
popf
xchg
push
add
xchg
lcall
lods
mov
push
pop
jge
or
sub
pop
sahf
inc
nop
push
std
arpl
js
push
sti
mov
inc
and
popf
popa
xchg
addr16
fwait
adc
cmpl
mov
dec
call
pushf
mov
jl
adc
add
rolb
add
frstor
inc
or
dec
inc
adc
xchg
add
mov
xchg
pushf
adcb
lret
lock
push
jmp
fiadds
cltd
sahf
push
pop
or
jp
dec
fists
sbb
cmc
mov
and
or
and
sbbb
cltd
adcl
and
add
orl
xchg
fistl
cmp
pusha
lcall
loope
mov
sbb
add
inc
rorl
jl
frstor
jg
bound
fldt
jnp
or
arpl
push
lea
mov
push
adc
pop
pop
inc
arpl
fwait
imul
inc
pusha
xchg
insb
shll
sbb
je
push
fs
sbbl
leave
test
and
push
dec
out
xchg
addb
jns
pop
rcll
mov
inc
sub
adc
movsb
push
int
pop
mov
pop
orl
popa
outsb
xlat
fstpl
sbb
std
lahf
roll
adc
jno
imul
xchg
push
pop
pop
or
shlb
cmp
jo
and
or
iret
sarl
mov
scas
gs
loope
xorl
xchg
inc
cmp
loop
xchg
adc
pop
out
or
loop
dec
pusha
ret
outsl
xchg
fs
jl
inc
fs
jl
fimuls
pop
pop
pop
pusha
into
pusha
pop
daa
dec
ja
pop
mov
mov
aas
xchg
int
pop
cmpsl
in
sahf
dec
and
and
add
and
adcl
andl
xchg
and
js
mov
orb
fistps
mov
mov
or
lods
adc
sbb
lret
jp
mov
add
and
and
rcll
dec
pop
ja
ja
and
rclb
xor
and
enter
mov
inc
test
sti
daa
push
inc
out
outsl
js
shlb
mov
orl
add
pop
add
cltd
and
dec
fistpl
ret
rcr
pop
into
or
rcrl
dec
test
xchg
mov
test
push
shrl
daa
adc
popa
dec
push
sub
cwtl
in
pop
xor
xchg
add
in
insb
pop
lsl
jg
jp
sti
push
jl
out
inc
pop
ret
and
mov
call
out
push
dec
and
or
push
pop
adc
add
ljmp
adc
roll
loop
test
adc
aas
xchg
and
mov
mov
lahf
test
sahf
and
xchg
sbbl
cwtl
adc
and
push
cli
test
inc
add
outsb
lcall
les
sbb
mov
incb
test
pop
ret
subl
pop
and
mov
jo
mov
fists
rcr
xchg
adc
ret
pavgw
cmpsl
repz
or
mov
jmp
jo
fs
sbb
ret
jb
push
addr16
std
mov
xchg
and
fwait
or
and
or
add
jecxz
sbb
rcll
sahf
je
jge
pop
daa
cltd
popa
adcb
dec
jbe
or
popa
adc
loope
cld
enter
leave
inc
mov
iret
pop
mov
push
xor
roll
pushw
repnz
movl
div
mov
int
xchg
test
jbe
out
sbb
ret
xlat
xchg
fwait
jl
and
or
adc
sbb
pop
adc
test
fsub
int
sbb
push
fistps
push
sbb
or
add
pop
pop
mov
out
xchg
and
loop
lahf
sbb
sbbl
push
lar
adc
scas
xchg
inc
mov
or
xchg
inc
cmpb
add
push
and
pop
push
leave
dec
and
add
adc
add
cld
cmpsl
push
mov
inc
push
sub
sbb
in
fstpl
xorb
roll
and
out
or
dec
jnp
push
loop
addl
addl
xor
mov
pop
rcrl
xor
lahf
and
xchg
lds
dec
popa
and
jge
aad
mov
fiaddl
ficoms
cmp
and
mov
cmp
test
mov
add
xchg
push
push
ret
dec
or
aad
mov
sahf
ljmp
or
and
push
adcb
pop
add
rcr
dec
les
mov
or
jecxz
xchg
outsl
fcoms
pop
aad
jecxz
loop
sbb
push
psrld
pop
and
pusha
adc
lret
sub
mov
add
xchg
adc
lea
or
ficompl
cmpsl
or
add
mov
xchg
and
fisubrl
fwait
ret
rorl
or
pop
pusha
int
sub
daa
test
daa
or
mov
mov
push
sbb
dec
push
dec
pop
add
push
test
roll
sbb
les
dec
mov
lret
loopne
mov
dec
push
pop
rcll
sbb
outsb
push
xchg
wbinvd
push
xchg
xchg
sbb
add
arpl
nop
adc
push
jnp
sub
adc
lds
je
and
ret
pusha
and
adc
frstor
adc
mov
xchg
cltd
icebp
pop
fiadds
fwait
ret
int
sbb
sbb
daa
and
adc
adcl
addr16
mov
xchg
push
or
rcrl
push
xchg
sbb
test
sbb
inc
sbb
adc
add
adc
pusha
lret
cmp
andl
xchg
ret
pop
inc
inc
add
adc
pushf
aaa
pop
daa
add
fisttps
push
xchg
sub
xchg
adc
imul
icebp
adc
lret
jbe
cmp
in
adc
ret
mov
pop
not
cmp
loop
xchg
fs
loop
je
mov
xchg
inc
push
jae
adc
roll
push
int
aaa
lahf
test
movl
jae
negl
push
popw
scas
xchg
mov
add
add
leave
popa
data16
mov
in
fs
dec
test
loop
sub
jae
dec
mov
vextracti32x8
jae,pt
add
inc
pop
mulb
daa
in
pop
data16
int
sbbl
call
fwait
xchg
imul
std
jg
rorl
mov
pop
or
in
mov
pop
fistl
pop
mov
jg
pop
inc
inc
lea
jle
dec
mov
dec
adc
inc
mov
in
frstor
or
fnstcw
jg
inc
push
out
xlat
dec
loop
gs
sbbl
loopne
add
pop
xchg
push
xchg
sbb
loop
or
das
pop
loop
test
mov
std
test
xchg
jmp
in
xor
mov
push
shll
enter
xchg
xchg
shll
lcall
push
or
jnp
pop
dec
movl
dec
add
mov
in
popa
add
fidivl
aas
xchg
push
pop
pop
sbb
pop
sbb
fs
icebp
mov
movl
fcoml
ja
pop
xchg
loop
dec
sbb
enter
add
cltd
loop
dec
std
push
dec
sub
jmp
sbb
and
orb
popa
jb
pop
insb
mov
push
sbb
daa
jno
push
pop
iret
pop
loop
pop
std
loop
or
xchg
stos
loop
popl
push
pop
arpl
lds
ja
gs
in
pop
push
sar
push
pop
xchg
xchg
pop
js
jecxz
shl
inc
mov
movsb
jb
inc
add
sbb
xchg
pop
test
add
inc
xchg
inc
pusha
fs
inc
mov
and
test
pop
push
jae
std
and
and
in
fucom
dec
dec
xchg
daa
loopne
mov
mov
insl
lcall
push
and
scas
cmp
shl
fs
or
test
add
outsb
xchg
or
cmpsb
daa
add
jmp
fldl
loopne
rcr
dec
and
and
pusha
bound
and
bound
sub
pop
outsb
test
inc
loop
sub
cltd
xchg
sbb
jle
sub
sbb
push
jl
sahf
pop
addr16
test
std
andb
sub
sbb
addr16
inc
pop
loop
xchg
or
scas
cltd
dec
push
loop
bound
loop
loop
and
push
pop
mov
inc
test
inc
add
in
push
iret
pusha
push
jmp
sbb
xchg
add
pusha
sub
sarl
fsubp
std
lds
insb
inc
mov
cltd
test
fnstsw
mov
and
push
mov
and
dec
orl
addb
pop
and
mov
test
aas
ret
jb
ret
pop
stc
add
add
jecxz
adc
add
fsubs
movl
mov
xorb
inc
dec
dec
xchg
loope
fstpl
adc
mov
push
movl
movsb
pop
push
fdivrs
inc
xor
xchg
fisubl
mov
jmp
xchg
jno
jecxz
or
inc
add
aam
add
pop
popa
dec
imul
add
add
add
orl
lahf
or
adc
sbb
mov
inc
mov
fsubl
repz
sbb
adc
loope
dec
or
adcl
or
add
mov
in
inc
popf
mov
outsl
jle
inc
lcall
jg
mov
xorb
xchg
mov
call
inc
or
mov
pop
ret
dec
fisubrs
lcall
and
cmpsl
or
push
mov
fsts
frstor
outsb
rcll
push
out
and
push
decl
fistpl
outsb
adc
jae
inc
and
ret
xchg
aam
mov
adc
jl
pop
popf
ret
add
fiadds
or
mov
sbb
or
loope
xchg
icebp
pusha
mov
push
jg
mov
push
mov
out
sysret
rol
push
cli
fdivrs
jae
fstps
popf
xchg
pop
add
push
inc
outsl
sbb
add
push
xchg
xchg
or
xchg
cwtl
push
pshufw
sbb
orl
xchg
loopne
sub
add
gs
jecxz
cmpps
pop
sbb
loop
sub
sti
dec
add
add
lahf
leave
je
ficomps
xchg
push
jg
dec
pop
testl
push
and
cs
outsb
mov
arpl
push
pop
cwtl
loop
movsb
or
pop
pop
cltd
pop
adc
sarb
lcall
push
aad
pop
cli
pop
xchg
popa
sbb
jne
lods
cwtl
add
inc
sbbl
popa
xlat
cmpl
jb
daa
loope
push
inc
jne
xchg
push
dec
cmp
fistpl
aas
and
add
sbb
pop
pop
dec
test
fldl
add
sbb
add
push
je
push
xchg
std
insl
and
pop
or
into
adc
and
xchg
adc
shll
pop
jae
pop
leave
test
cli
mov
inc
xchg
dec
push
sbb
dec
add
pop
ja
addr16
lret
pop
icebp
add
les
mov
sbb
or
cltd
orb
lahf
scas
loop
add
aad
addr16
jb
xchg
and
bound
sti
cmp
adc
addr16
jp
addr16
test
or
xchg
sub
sub
push
arpl
cmc
int
mov
cmp
mov
jp
addr16
inc
push
add
lahf
xchg
jb
inc
pop
and
sbb
push
ja
inc
fildl
lahf
xchg
jb
ds
addr16
adc
icebp
lods
arpl
sbb
cwtl
loope
inc
test
mov
xor
lret
stos
leave
mov
mov
decb
mov
adc
inc
outsb
cmpsl
sub
inc
cmp
push
out
xchg
imul
push
cld
dec
xchg
pop
pop
xor
dec
or
aas
out
dec
lods
push
stos
pop
push
jp
mov
or
adc
inc
cwtl
lcall
xorb
cltd
mov
mov
and
cltd
add
pop
cli
jg
and
testl
mov
add
and
push
xchg
je
mov
inc
fistps
sbb
cmp
ja
pop
mov
aaa
sbb
test
xchg
inc
mov
mov
add
lahf
mov
inc
xchg
and
cwtl
add
lahf
xchg
jb
inc
pushf
and
and
lahf
sbb
and
add
test
cmp
push
inc
test
jb
inc
mov
mov
ja
inc
adc
lahf
adc
inc
adc
cltd
inc
pop
add
lahf
push
jb
inc
add
pop
add
or
add
lahf
adc
inc
pop
and
cltd
add
jp
rolb
ja
inc
and
lahf
fbstp
inc
lahf
and
ja
inc
pop
add
lahf
fidivl
inc
lcall
sbb
lahf
fnstenv
inc
cltd
and
cs
shll
push
ss
cmc
fsubrl
mov
shlb
lret
jnp
inc
addr16
push
ss
inc
cmc
add
lahf
mov
xchg
inc
jne
push
jb
or
aaa
adc
incl
jb
aaa
or
inc
incl
dec
mov
mov
sar
inc
mov
dec
addr16
push
fisubs
sti
pop
pop
jg
fwait
inc
sbb
cmp
fistpll
push
push
subb
sahf
scas
jge
popfw
movsb
and
or
adc
inc
loopne,pt
pop
jle
sub
inc
cs
aam
insb
mov
lea
mov
arpl
movb
movsl
inc
xor
xchg
add
inc
sahf
push
jge
sbb
push
mov
sarb
pop
dec
into
xchg
int3
sbb
sbb
sbb
sbb
sbb
sbb
sbb
gs
xorps
sbb
push
cltd
jge
add
sarb
cmp
lcall
cli
and
jb
pop
or
push
lahf
jge
add
sarb
scas
and
xchg
andb
jae
addr16
pop
or
add
jnp
pop
lcall
movsl
loop
jg
arpl
loop
loop
stc
pop
and
movsb
jne
xchg
jge
xlat
fsubp
xor
rcr
add
cmpsl
int
pop
rorl
fisubs
sbb
ret
fisubs
loop
jmp
jnp
mov
adc
imul
insl
fmulp
out
ss
pop
test
lcall
sbb
push
or
cli
sti
fcmovb
jecxz
pop
stos
mov
push
sahf
adc
adc
inc
push
sbbb
add
dec
les
adcb
pop
xor
add
lahf
mov
cmp
cmc
lahf
inc
in
cmp
lea
push
sub
mov
dec
cs
sub
bound
add
inc
push
and
ja
inc
xchg
add
lahf
xchg
jb
inc
fwait
and
sbb
inc
sbb
jb
inc
add
inc
or
bound
pop
dec
xchg
lahf
cmpsb
jb
inc
and
or
lahf
sub
inc
dec
and
js
inc
xchg
add
lahf
pushf
jb
inc
lahf
and
push
ja
inc
addl
add
inc
or
insb
or
inc
lods
add
lahf
int3
jb
inc
in
and
or
inc
sub
lahf
dec
jb
inc
imul
add
lahf
xchg
jb
inc
adc
sub
add
lahf
lahf
jb
inc
popf
and
pop
add
and
xchg
xchg
jb
inc
packssdw
add
lahf
dec
jb
inc
outsl
and
scas
add
lahf
iret
jb
inc
out
and
adc
bound
es
insb
push
punpckldq
jb
nop
inc
or
mov
add
lahf
adc
inc
xchg
and
push
add
lahf
sbb
insl
inc
lahf
and
xchg
dec
int
lahf
in
jb
inc
push
and
dec
add
lahf
outsb
jb
inc
mov
cmpl
sub
push
fwait
or
xchg
inc
dec
outsb
test
push
mov
popf
or
sbb
inc
add
je
sahf
lcall
mov
mov
jecxz
inc
lods
mov
push
cmp
push
mov
insl
call
pmulhw
fwait
pop
mov
push
cmpsb
push
lock
or
repnz
pushf
popa
das
pop
sub
mov
mov
dec
stos
lcall
xchg
and
and
mov
out
rorb
sub
dec
cmpb
xchg
xlat
outsb
scas
mov
mov
add
push
push
cmpsb
dec
rcrl
dec
addr16
dec
pop
pop
test
adc
ret
inc
outsl
mov
xor
test
push
xchg
mov
pop
je
and
pop
push
test
je
aas
adc
aam
xor
ficoml
pop
or
mov
repz
dec
lea
mov
dec
mov
pushf
stos
aad
mov
dec
cwtl
mov
repz
std
pop
jmp
mov
or
sbb
test
sbb
sbb
test
lods
cltd
adc
push
inc
add
nop
jb
adc
lea
sub
loope
pusha
push
or
add
jns
addl
adc
mov
mov
or
pop
adc
shll
mov
cmp
push
push
sbb
pushf
das
dec
iret
push
popf
sbb
push
add
fstps
mov
lret
ret
outsb
sub
fisubl
dec
loop
sbb
das
xchg
cli
lea
jl
pop
adc
add
call
xchg
test
add
adcb
xchg
pop
adc
adc
sbb
pop
inc
nop
adc
fnsave
pop
fyl2x
loopne
dec
sbb
pushf
test
lahf
pusha
pop
xor
imul
testl
mov
pusha
xorl
xor
sahf
mov
lods
das
stc
push
pop
ret
xor
test
mov
xorb
or
and
push
xor
fwait
or
inc
inc
lret
cmp
lods
pop
pop
mov
add
in
xor
mov
pop
std
sahf
aam
sarb
leave
mov
or
addb
test
or
mov
incl
xor
stos
and
sbb
roll
dec
fists
xchg
addl
out
subps
inc
or
xchg
subb
inc
outsl
repz
pop
cs
sub
dec
pop
mov
mov
add
inc
xchg
pop
mov
jnp
out
inc
inc
arpl
pop
mov
jmp
adc
jp
add
lahf
pusha
addr16
out
sbb
dec
push
fsts
cli
test
push
push
lods
shrb
sarl
pop
add
leave
push
lods
xchg
popf
inc
adc
lcall
inc
pop
or
out
sbb
mov
neg
outsl
sbb
cmpsl
pop
jg
cmpl
xor
adc
jmp
pushf
test
adc
test
push
ja
xchg
stos
sahf
daa
mov
cwtl
stos
add
sub
fmull
daa
dec
mov
xchg
add
pop
jbe
push
mov
ljmp
lods
inc
test
and
sub
jmp
xor
call
xchg
dec
pushf
dec
mov
fadds
iret
lret
stos
shl
fs
or
imul
pop
jp
xchg
iret
adc
cs
and
inc
pop
or
and
cld
ja
inc
mov
jb
orl
xchg
pop
adc
inc
mov
lahf
jb
inc
lea
mov
lahf
das
fwait
cltd
sbb
popl
out
das
in
xchg
xor
lret
sbbl
pusha
xchg
je
push
jg
fcompl
adc
pop
ret
add
jmp
test
ljmp
mov
dec
pushf
addr16
push
daa
mov
aam
pop
adcl
cmpl
adc
inc
fistpl
dec
outsb
xchg
xor
sbb
push
cmp
xchg
fcoml
jns
inc
xchg
adc
push
sti
xchg
jns
or
pushf
bound
addb
mov
mov
mov
popf
addb
xchg
xchg
or
flds
jb
add
sahf
inc
mov
add
lahf
mov
jb
push
roll
mov
bound
or
jno
xchg
outsb
mov
pop
cwtl
xchg
xchg
nop
push
xchg
xchg
add
je
lcall
xchg
cli
pushf
dec
mov
sbb
lock
or
cs
sub
fs
int
pop
push
cvtps2pd
mov
mov
out
adc
and
lods
out
ret
mov
mov
xchg
dec
mov
mov
adc
xchg
xor
push
sbb
adcb
jb
imull
sbb
cwtl
xchg
cwtl
sbb
dec
pusha
mov
cmc
pushf
fwait
idiv
imul
stos
scas
mov
lret
sbb
jno
adc
lahf
dec
jne
pop
xorl
arpl
clc
jmp
sub
insl
test
pop
lcall
push
lahf
sbb
sahf
dec
ja
ss
inc
jecxz
dec
outsb
or
add
add
or
adc
xchg
adc
or
in
rep
nop
jle
jge
fcomps
or
out
shrb
xor
rorb
dec
fidivrs
mov
cli
sti
mov
jl
ret
cmp
enter
gs
mov
cmp
shll
and
jns
call
pusha
jl
jg
dec
test
lea
push
xchg
test
push
or
jmp
mov
and
lahf
cltd
sub
sub
jle
inc
xor
sbb
test
adcl
push
movaps
hlt
inc
xchg
jno
or
pop
pusha
xchg
jl
jnp
add
mov
imul
andl
sub
push
pop
jmp
orb
xor
shll
cmpb
fidivrs
nop
rclb
sbb
int
andl
xor
mov
popa
and
mov
push
mov
pop
mov
and
xchg
test
mov
test
inc
adc
mov
push
adc
push
in
pop
pop
fisubrl
sbb
test
cmp
push
push
pop
cmpsb
mov
xchg
xor
push
pushf
mov
adc
ret
cwtl
add
xchg
cmp
inc
xchg
arpl
sbb
fs
add
adc
adc
jge
inc
fwait
jge
add
mov
sahf
and
xchg
xchg
cmp
popa
add
decl
xor
punpcklwd
popa
or
fs
jmp
sub
or
mov
mov
adc
inc
xchg
sbbl
addr16
dec
sbb
lahf
add
arpl
repnz
test
arpl
jno
popa
fwait
jb
sbb
test
outsl
pop
cmpl
popa
xchg
addr16
add
add
popa
andb
and
popa
xchg
addr16
jecxz
sbbl
popa
sbb
and
out
xchg
popf
jle
andl
fimull
inc
addr16
cmp
xchg
adc
inc
addr16
pop
popa
lcall
lods
xchg
fs
or
push
jp
pop
fwait
popa
cltd
stos
addl
sub
jle
pop
addr16
mov
inc
addr16
push
xchg
adc
add
add
nop
ja
pop
sbb
add
mov
nop
jmp
lea
into
lea
cltd
pop
addr16
jle
arpl
or
add
push
fildl
lret
add
popa
or
sbb
dec
sbb
lcall
ljmp
addr16
cwtl
popa
mov
jb
adc
xchg
inc
fwait
inc
mov
addr16
shlb
xchg
ljmp
adc
xchg
pop
jnp
aad
adc
lahf
into
or
mov
add
fimull
xchg
lret
rcl
popa
push
lahf
adc
pop
add
push
xchg
mov
insb
jp
push
outsl
sti
sbb
add
xchg
bound
sti
fwait
popa
pushf
popa
cltd
dec
mov
mov
filds
jle
or
mov
nop
adc
add
add
lahf
pushf
jne
inc
pop
add
sbb
js
dec
mov
xchg
adc
add
add
and
popa
xchg
sbb
popl
or
add
loope
ds
test
sub
sub
hlt
adc
rorl
fistl
xchg
call
pop
nop
ret
inc
xchg
cmc
gs
cmp
sbb
orb
cwtl
stos
mov
add
popa
or
adc
add
inc
adc
cltd
and
adc
lahf
popa
push
adc
xor
xchg
sbb
pop
pop
add
lahf
popf
lea
adc
pop
ja
pop
add
and
mov
jae
xchg
add
jno
push
addr16
add
or
sti
mov
adc
add
add
lahf
test
inc
addb
fisttpl
pushf
add
add
pop
popa
mov
ret
jp
xchg
bound
and
jle
add
popa
andl
xchg
pop
or
or
adc
xchg
dec
xchg
jb
les
or
popf
xchg
popa
andl
mov
popa
or
into
jge
popf
add
arpl
mov
sbb
ds
addl
pop
punpckldq
sbb
jmp
push
popf
xchg
xchg
inc
xchg
pop
add
cwtl
sahf
sbb
addb
pop
pushf
pop
xchg
mov
xchg
insb
xchg
aas
xchg
pop
mov
roll
in
jb
sbb
bound
mov
icebp
add
dec
or
jle
add
xorl
fs
add
call
dec
fs
add
inc
add
sub
xor
add
or
nop
adc
xchg
and
jb
fwait
xchg
adc
or
add
addb
pop
outsl
or
negl
dec
push
lcall
adcl
fs
mov
popa
pushf
outsl
inc
xchg
bound
adc
mov
mov
cwtl
push
xchg
mov
addr16
inc
data16
sbb
add
pop
xchg
nop
push
test
fwait
mov
lcall
xchg
pop
aaa
adc
inc
fwait
mov
sbb
addr16
mov
int3
or
mov
mov
mov
outsb
stos
cmp
push
stos
cmp
in
sub
pop
add
xor
adc
fs
cmp
jne
out
lahf
repz
ss
mov
pop
out
sub
das
in
out
and
mov
push
jb
stos
insl
and
dec
jo
outsb
rorb
fsubl
push
mov
push
nop
mov
or
push
stos
es
rclb
xchg
mov
cli
sub
xchg
mov
fs
lahf
rcrl
jle
inc
add
xor
ret
das
add
mov
sti
dec
mov
push
lret
mov
pusha
xchg
scas
and
pop
insb
daa
dec
inc
fs
jecxz
fwait
ret
jle
pop
addr16
rcll
pusha
ds
push
jp
cltd
addr16
cmpb
mov
ret
int
lock
incl
out
aas
inc
clc
and
subl
mov
inc
addr16
psraw
out
xor
add
inc
je
addr16
inc
fistpll
push
push
frstor
les
sbb
mov
test
dec
xchg
nop
das
xchg
jge
inc
xchg
lods
adc
leave
scas
mov
push
mov
iret
adc
pop
imul
dec
mov
ljmp
or
jo
test
pusha
jo
cmpsl
add
jmp
out
xorps
push
push
dec
in
push
addr16
mov
lea
jg
fidivrl
xor
test
inc
adc
flds
jmp
jle
fisubrs
mov
cmp
pop
stos
mov
sub
popf
pop
sbb
or
push
lods
insl
dec
adc
rcrb
test
cmpl
inc
lea
leave
iret
ds
sbbb
cmc
scas
xchg
iret
pusha
cmp
push
loopne
fisubl
add
jmp
pop
and
or
in
or
pusha
adc
or
dec
dec
fstpt
adc
ljmp
scas
jns
xor
cmp
int3
xor
out
lret
stos
cs
stos
sub
lea
inc
leave
out
ss
outsb
jmp
cmp
cwtl
stc
pusha
scas
xchg
cmp
cmc
add
mov
popl
sub
xor
fwait
inc
sti
cmpb
pop
cmp
pop
jne
in
stc
mov
inc
add
std
xor
es
addr16
das
stc
fwait
sbb
loop
sub
cmc
je
or
add
outsl
inc
sub
ret
sub
dec
iret
jmp
xorb
sbbb
push
dec
rorl
add
sub
xchg
movsb
ficoms
sub
test
cmpb
imul
pusha
lcall
mov
mov
in
xor
or
jg
je
ftst
test
cs
xor
inc
pop
and
xor
aaa
insb
mov
ljmp
ljmp
inc
adc
jg
inc
nop
lcall
test
dec
jge
rep
xchg
sub
and
xchg
sub
sub
je
dec
repz
adc
pop
gs
push
mov
sbb
ljmp
mov
mov
test
les
mov
sahf
mov
xor
push
ljmp
and
test
repnz
dec
scas
mov
test
and
test
mov
push
es
pop
outsb
lods
xchg
cmp
or
test
lcall
xchg
push
dec
pushf
add
addl
loop
add
cltd
out
lahf
call
out
xchg
or
sbb
bndldx
lds
or
sbb
pop
xlat
push
add
imul
repz
add
jb
jb
xchg
aam
in
dec
jle
and
adc
outsb
sbb
pop
lds
ret
xchg
and
call
add
jle
stos
inc
ljmp
inc
addl
dec
cmc
xchg
inc
lea
lea
inc
pop
les
push
jns
inc
pusha
push
filds
xchg
rcrl
sub
jmp
out
add
sbb
pop
push
xchg
sbb
fistps
dec
cmp
add
xchg
xchg
test
mov
add
lahf
les
nop
sub
inc
sbb
pop
popf
inc
inc
inc
sahf
push
inc
pop
pushf
addr16
sub
dec
sbb
lea
jno
adc
jbe
fldl
addb
int
jae
jecxz
cmc
fadds
dec
int
popa
mov
outsl
add
mov
jle
cmp
sub
lods
adc
jo
cmpsb
jp
hlt
mov
xchg
xchg
adc
arpl
xor
or
inc
or
shll
push
sub
jp
test
fs
jbe
dec
sbb
inc
jo
lds
mov
int3
std
push
andb
dec
sbb
leave
cli
add
repz
clc
cmp
arpl
adc
mov
push
pop
loope
in
mov
xor
mov
pop
outsb
rcrb
adc
lea
push
add
lods
cwtd
cmp
xchg
xchg
ljmp
scas
jo
or
jno
push
daa
dec
ljmp
insl
fildl
pop
cmp
pop
mov
sbbb
mov
dec
push
out
add
mov
and
jecxz
pop
pop
dec
in
jecxz
and
sub
stos
cmp
jg
xchg
sbb
testl
cmp
cmp
mov
xor
das
gs
mov
push
insb
add
push
mov
sub
out
outsb
out
shlb
je
cltd
add
je
test
sti
fstp
push
cmp
jle
xchg
cvtpi2ps
loopw
repnz
or
shrb
andb
lods
hlt
or
or
mov
je
pop
mov
sbb
push
xchg
mov
jno
mov
sbb
xlat
rcll
push
roll
dec
lret
in
movsb
dec
xor
xchg
mov
jp
xchg
mov
test
bound
dec
pop
fldenv
popf
mov
xchg
imul
inc
or
sbb
mov
push
rcrl
call
mov
adc
nop
push
jecxz
add
rol
jp
adc
jecxz
xchg
mov
or
cmpl
fs
xor
je
fwait
xchg
mov
movsl
mov
push
insl
addr16
addr16
inc
sbb
ret
insb
daa
jb
or
cmova
xchg
push
rorl
mov
dec
or
mov
leave
negl
pusha
test
sub
mov
ret
in
jg
ret
jecxz
rcrl
stos
push
scas
in
shll
jns
out
sbb
add
add
dec
mov
lods
dec
dec
fsubl
cltd
adc
add
jle
xchg
lret
lcall
lahf
mov
pop
lcall
add
adc
sbb
mov
outsb
mov
xchg
sar
mov
ljmp
decl
scas
and
add
jnp
sbb
lock
push
dec
jnp
jmp
repz
outsl
pop
push
lds
jne
push
test
dec
or
and
ficomps
stos
inc
sbb
fs
add
shrl
repz
fstps
xchg
push
add
mov
cmp
cmc
or
je
pop
lcall
mov
sub
pop
loope
adc
lock
js
pop
push
push
lcall
leave
push
push
cltd
xchg
jnp
or
and
dec
push
les
sub
fidivrs
ljmp
or
xchg
movsb
dec
enter
dec
insb
adc
push
adc
test
sbb
jnp
orl
jp
pop
adc
ds
adc
fwait
mov
pop
arpl
pop
fwait
inc
sub
and
ss
push
mov
inc
xor
addl
and
inc
ret
or
sbb
les
mov
inc
rorl
mov
icebp
ret
xor
dec
cmpsb
inc
sbb
lahf
int3
cmp
xchg
ret
sar
mov
dec
jo
sub
je
add
pop
add
call
ja
push
insl
pop
lcall
test
sub
rorl
loopne
addr16
pop
mov
adc
loope
pop
pushf
sbb
push
imul
or
adc
movsl
sti
aad
addr16
adc
inc
cmp
and
leave
xchg
test
push
jg
fisttps
push
pop
cltd
mov
lea
lret
insb
mov
adc
loopne
test
cs
fsubr
enterw
shll
and
fstpl
cmp
test
push
daa
cltd
mov
iret
adc
dec
lret
or
dec
push
push
mov
test
ljmp
por
adc
jbe
push
mov
hlt
int
add
or
orl
add
addl
stos
movsl
xor
sbbb
js
push
sub
lods
cmpsb
loope
enter
dec
inc
imull
cmp
sub
mov
dec
lea
fwait
jle
mov
sahf
inc
push
in
xchg
fwait
inc
pop
pop
adc
xor
arpl
push
xchg
sub
fisttpl
inc
divb
xchg
xchg
add
inc
fwait
push
or
add
sbb
movsl
dec
xchg
orl
bswap
pop
dec
or
push
sbb
int
pusha
mov
jl
jmp
shrb
adc
rcrl
jmp
xchg
push
fwait
add
pop
subb
cmp
add
mov
mov
dec
sbb
pusha
inc
stc
pop
cmp
jns
lea
jecxz
and
mov
or
movsb
or
ret
mov
dec
repnz
xchg
loopne
inc
leave
xor
xlat
mov
xor
mov
mov
sahf
fwait
pop
ljmp
xor
insl
add
mov
push
sub
imul
mov
out
adc
and
leave
arpl
push
lcall
xor
test
xorl
subl
fcomps
test
rol
push
pusha
jmp
push
les
mov
xorl
loopne
inc
leave
aad
xor
mov
adc
adc
test
pop
leave
sahf
push
cwtl
fcmovne
int3
adc
mov
pmulhuw
ss
add
jb
dec
dec
pop
vpcmpgtb
pop
push
jmp
into
fldenv
xor
in
sub
or
add
sti
stc
mov
jnp
or
sub
rorb
pop
pop
in
daa
pop
inc
mov
or
jbe
stos
leave
xor
add
mov
mov
pop
xor
xchg
lahf
xchg
push
xorl
pop
lea
pop
jmp
jl
jle
pushf
add
filds
lcall
into
jecxz
add
inc
mov
das
jge
lds
mov
xchg
test
jecxz
lcall
adcl
sbb
add
shll
lea
mov
sbb
adc
pop
fcoms
pop
or
mov
pop
sbb
adcl
sub
cli
adc
push
movsl
dec
add
scas
sbb
insl
adc
pop
sbb
mov
mov
popf
push
les
pop
xchg
dec
sbb
lock
jnp
push
sti
jne
mov
in
fwait
inc
mov
jg
push
in
dec
fadds
xchg
adc
and
in
adc
test
pop
icebp
dec
sbb
lds
lds
test
imul
pop
mov
or
xor
test
push
add
test
jle
imul
mov
pop
mov
fwait
mov
fs
std
push
gs
xor
sahf
test
test
add
jle
push
adc
loop
pop
data16
nop
mov
iret
sti
xor
sub
inc
cld
fs
jecxz
jp
dec
icebp
inc
xor
sbb
push
xor
xchg
sbb
ds
pop
mov
dec
inc
lods
dec
or
pusha
and
cmp
cwtl
adcb
sub
dec
sbb
pop
daa
jno
jl
sbb
mull
pop
mov
mov
mov
xchg
fists
push
sub
and
mov
rcrl
adc
and
rorl
leave
and
je
dec
adc
fistps
lcall
sbb
frstor
xor
sbb
outsb
pop
and
mov
jnp
out
push
mov
pop
fnsave
arpl
cli
cmc
mov
jnp
fbstp
push
andl
inc
lret
roll
mov
pop
ljmp
cli
sbb
in
in
ret
stos
lods
ficoml
out
pop
push
fcomps
jg
dec
lcall
stc
std
dec
sub
add
add
mov
nop
pop
sbb
lods
insb
arpl
sub
xchg
repz
in
add
sbb
sbb
and
add
pop
push
fisubrl
test
aad
loopne
inc
dec
les
adc
pop
loopne
pusha
inc
pusha
pop
pop
repz
fisubs
outsb
daa
addr16
mov
jl
adc
inc
push
ret
inc
lcall
ljmp
mov
iret
jp
cltd
or
add
adc
and
inc
shll
mov
movsb
stos
data16
mov
sbb
pop
jl
and
inc
xchg
dec
jnp
fildl
jo
fstps
add
cwtl
sbb
mov
sbb
fstps
mov
inc
mov
pushf
sbb
xor
arpl
xor
or
or
dec
cmc
cli
dec
popa
adc
pop
les
adc
push
imul
je
pusha
fists
idiv
cmp
inc
mov
jge
inc
fadd
imul
je
xchg
and
add
inc
push
sub
mov
mov
addb
sbb
cmc
push
addl
mov
inc
or
jnp
inc
xor
jge
xchg
pop
push
imul
adc
sub
fwait
and
jbe
pushf
cmp
mov
stc
cmp
inc
and
inc
jo
or
ret
fldcw
adc
test
jge
mov
mov
jl
add
mov
fwait
pop
inc
pop
cltd
fsts
xchg
sbb
xchg
fwait
sbb
pop
mov
xchg
rcrl
or
loopne
sbb
ficoms
mov
adc
xchg
pusha
icebp
inc
mov
push
lock
sahf
xor
xchg
cmp
jle
loop
rcll
addr16
sbb
jno
xchg
jne
adc
xlat
fwait
or
into
jecxz
push
ret
int3
and
adc
push
cltd
pop
mov
jno
out
popa
cmp
adc
shll
xchg
add
rcrb
xlat
pushf
test
cmp
cmp
mov
ficoml
movb
fistpl
pop
mov
dec
xchg
cmp
adc
imul
adc
dec
fnstcw
lock
out
xchg
or
insl
pop
push
lock
xor
ret
pop
arpl
out
addl
pusha
inc
loopne
test
cmp
lahf
cmp
sahf
mov
fwait
outsb
jecxz
sbb
mov
jnp
stc
adc
sahf
loopnew
jp
lcall
jg
xchg
roll
fidivrl
daa
enter
mov
jae
insl
pop
aas
bound
aam
jae
jmp
pop
seto
sti
fnstenv
mov
ss
rcrl
and
mov
mov
cli
mov
lds
sbb
mov
push
mov
stc
xchg
imul
call
cli
out
fisttps
push
jp
sub
mov
or
dec
inc
xor
lcall
repz
sbb
add
mov
jnp
and
push
sub
ja
inc
aas
adc
fwait
cltd
sbb
add
clc
loop
or
mov
pushf
shll
mov
leave
pop
daa
mov
jno
lods
xor
push
int3
cmp
leave
sub
adc
mov
pop
stos
frstor
sbb
xchg
add
or
lahf
mov
andb
push
addl
fidivrl
sbb
pushaw
loopne
sbbb
lods
sbbl
push
cmp
shll
insl
gs
pushf
pusha
push
roll
push
adcw
lods
jmp
lcall
jns
movl
sbb
insb
xor
dec
xchg
dec
sbb
and
pusha
scas
fistpll
cmc
add
pop
das
adc
cmovl
rep
pop
push
arpl
mov
imull
pusha
sbb
das
pusha
aam
jbe
jg
outsb
ja
or
repnz
loope
pusha
ljmp
jno
je
and
notl
push
pop
lcall
jecxz
adc
or
lahf
lods
lock
sbb
ret
lea
pop
sbb
cltd
xchg
pop
sbbb
sbbb
push
inc
std
les
xchg
sbb
cmp
add
push
lods
mov
xor
fs
jg
arpl
lcall
int
sbb
pop
sarl
push
and
add
sbb
push
inc
adc
mov
dec
mov
sbbl
xor
andl
pushf
mov
mov
push
mov
or
jno
inc
rorb
mov
xchg
fwait
mov
or
mov
or
xchg
dec
dec
inc
adc
sbb
or
pop
xchg
lret
leave
pop
iret
add
adc
pop
xor
pop
repz
outsl
jb
jb
insl
popa
fbld
dec
mov
orl
cltd
dec
and
cmp
out
xchg
pushf
push
sub
or
aam
lcall
les
push
inc
or
cmp
divb
xchg
int
jno
sub
inc
sbb
and
sub
outsb
mov
scas
insl
bound
dec
leave
or
mov
lods
aaa
jle
rorb
je
xchg
push
jnp
xchg
adc
jae
sbb
jg
shlb
inc
fwait
sti
cmp
dec
mov
aaa
add
arpl
push
and
push
adc
add
jb
popf
lahf
cmc
mov
cltd
lcall
inc
and
cli
mov
mov
lcall
mov
add
outsl
push
or
adc
je
out
sub
push
jl
lcall
lods
xchg
jg
lods
int
mov
sbb
mov
mov
mov
ja
and
andl
lods
lds
push
adc
addl
mov
pop
push
mov
or
mov
rcrb
cli
xor
mov
stc
iret
cmp
mov
pop
sbb
ja
inc
lahf
in
xchg
gs
sbb
push
xchg
sahf
addb
pop
inc
cmpl
push
cmpb
ja
popf
sbb
adcb
popa
sti
xorl
in
pop
xor
jecxz
ret
adcl
roll
sbb
xor
xchg
dec
dec
cwtl
rol
adc
lret
rcll
stos
out
ret
orl
ret
sub
push
ja
cmp
adc
fwait
push
popf
lahf
ret
or
pop
jmp
cmpsl
push
repz
cltd
pusha
xchg
ret
mov
jne
pop
mov
popf
jbe
lea
add
cmp
mov
test
jecxz
test
shrl
jbe
lea
xchg
roll
call
sbb
pop
hlt
push
les
adc
andb
sbb
or
xchg
xchg
pop
and
push
shlb
adc
ja
jb
sbb
mov
sbb
add
in
sahf
pop
or
mov
ret
mov
daa
sub
or
std
cmp
inc
fcmovu
orl
test
std
ficoms
frstor
mov
out
cltd
pop
les
jno
cli
sahf
or
push
outsl
jle
lret
add
scas
xchg
es
push
or
sti
jl
jnp
xchg
call
repnz
add
fs
dec
xchg
repnz
inc
dec
incb
inc
sahf
add
repz
aad
add
std
pop
jb
fwait
cli
pop
dec
jge
adc
sbbl
sar
rcr
int
arpl
sbb
pop
test
sbb
nop
jl
xchg
je
popl
or
stc
cmp
pop
bound
xchg
adc
pushf
sti
xchg
jl
push
in
test
stos
inc
mov
stos
cmc
fildl
add
lcall
dec
mov
stos
add
jne
push
and
mov
mulb
push
fsts
mov
es
xchg
xchg
lret
ja
jns
adc
cmpsl
xor
lcall
add
pop
pop
andb
sahf
cmp
inc
jge
add
roll
test
mov
push
cmpl
cmp
or
lahf
jp
bound
mov
xor
xchg
xchg
cwtl
mov
add
bound
sarb
loop
sbb
add
xchg
pop
jle
sbb
and
test
jb
dec
add
cmp
mov
xchg
mov
add
cmp
pop
xchg
jge
pop
test
and
push
inc
push
mov
mov
daa
pop
or
push
adc
dec
add
mov
scas
and
jb
adc
push
push
jge
add
sarb
inc
push
or
push
push
jge
add
sarb
rol
lret
cmp
adc
mov
mov
ret
and
jb
xlat
or
push
or
les
adc
mov
loopne
or
push
jge
add
shlb
das
add
ret
bound
and
jb
push
gs
sarb
js
orb
jns
mov
jne
jge
dec
movsb
and
jb
dec
cmpsb
jbe
ja
jg
inc
loopne
stc
inc
loope
lcall
std
push
dec
loopne
sti
and
jb
out
notl
jge
movsb
and
jb
push
gs
add
sarb
push
dec
jge
add
sarb
fwait
adc
or
ss
jge,pt
movsb
and
jb
rorl
inc
jno
lret
mov
cmp
push
shl
mov
leave
inc
cmp
add
sarb
aas
pop
gs
mov
mov
mov
or
push
mov
mov
mov
adc
and
or
push
mov
sarb
enter
jo
jb
add
mov
movsb
data16
outsl
add
mov
movsb
insl
enter
out
mov
repz
movsb
in
inc
in
or
mov
movsb
hlt
enter
lock
and
gs
sub
mov
jb
add
movsb
xor
mov
jb
add
mov
mov
stos
shlb
test
and
enter
scas
shlb
mov
or
mov
bound
mov
rcrl
addb
sbb
inc
cld
bound
cltd
xchg
sbb
add
inc
test
pop
lahf
addr16
pop
jno
lcall
dec
cwtl
and
xchg
popa
push
cmpl
jl
pop
mov
sub
sahf
pop
loop
filds
fs
mov
fwait
xchg
mov
add
out
test
or
sub
mov
mov
rcrl
sub
fwait
icebp
bound
incb
pop
test
pop
pop
mov
bound
mov
mov
push
push
ret
jnp
test
ficomps
cmp
cmp
call
out
fimull
and
sbb
arpl
nop
jbe
inc
cwtl
mov
jmp
out
pusha
sub
movsb
js
lcall
loopne
andl
mov
lahf
shl
ss
jl
cmp
xchg
mov
dec
lock
leave
xor
pusha
movsl
pop
cwtl
test
orb
lahf
jg
aas
pop
cli
mov
mov
sbb
mov
mov
pop
cmp
int3
insl
push
mov
xlat
mov
push
std
fnstsw
es
or
sbb
ficoml
sti
decb
sub
outsb
jp
jmp
inc
xchg
sbb
add
add
fstpl
push
add
jg
flds
lock
pop
in
and
cmp
repnz
sbb
fwait
lods
rcrb
add
mov
lods
pushf
push
into
dec
xchg
sti
sbb
pop
scas
jns
test
adc
fisubl
les
cmp
jne
push
mov
orb
fists
push
pop
jb
js
cmc
pop
pop
pop
sbb
aaa
and
jg
and
inc
cmp
push
das
aas
add
jl
les
pop
xchg
lahf
pop
xchg
cli
movsb
cmp
clc
sbb
addr16
stc
cmpl
add
cli
mov
sub
leave
jge
lret
movsl
into
jmp
cmp
pop
test
lret
clc
loope
push
call
rolw
ljmp
cs
lock
jg
faddl
lcall
xorb
mov
movsl
lahf
push
push
es
or
out
add
pop
xchg
xchg
xchg
popa
bound
lcall
and
push
push
sub
mov
sahf
into
inc
push
call
loopne
or
mov
or
sbb
jle
and
icebp
addl
add
stc
lahf
mov
imul
adc
inc
inc
cld
pop
mov
and
inc
and
ja
inc
jecxz
push
or
jno
cmpsl
pop
add
lahf
or
xchg
fwait
adc
xchg
fisubs
dec
addr16
out
or
loope
xchg
loop
ret
xorb
push
xor
repnz
push
arpl
inc
sahf
test
dec
add
mov
test
sbb
nop
inc
sub
cmpsl
xchg
loop
mov
dec
sub
pop
inc
filds
test
cmc
xor
enter
subb
je
adc
leave
mull
mov
mov
or
cmpsl
dec
leave
flds
pop
and
pop
mov
mov
sarb
inc
xchg
loop
dec
jge
mov
or
inc
xor
andb
mov
out
outsb
jge
lcall
dec
cwtl
add
fists
lcall
or
test
addb
mov
or
test
and
daa
and
add
aad
mov
add
ja
add
mov
mov
enter
push
sbb
xchg
or
mov
pop
mov
dec
or
nop
xchg
test
mov
sahf
jmp
xchg
addr16
xchg
subb
sahf
mov
mov
and
adc
addr16
sub
js
bound
in
jge
lcall
sahf
add
aam
jg
sbb
rorl
gs
das
loope
roll
and
push
xchg
xchg
xchg
xchg
inc
test
sahf
xchg
add
nop
mov
cwtl
pop
clc
insl
dec
bound
inc
push
jmp
dec
push
and
xchg
jp
cmp
push
fwait
xchg
push
mov
xchg
jno
addr16
aas
mov
addl
sub
das
sbb
fistpl
stc
sub
test
enter
je
xchg
imul
lock
inc
shl
push
mov
dec
out
sbbb
xor
xorl
sahf
test
js
sub
sbb
fwait
adc
xchg
popa
call
int3
push
xchg
xor
lcall
xchg
adc
pop
pop
test
popa
xchg
mov
lea
mov
adc
push
xchg
lret
nop
xchg
push
jg
jo
stc
mov
jl
js
sbb
mov
xchg
rorb
mov
shll
test
add
xchg
or
xor
xchg
push
and
inc
inc
test
cwtl
mov
cwtl
pop
jmp
test
lcall
js
mov
xchg
sbb
push
add
addr16
sbb
sub
push
mov
mov
pop
xchg
cwtl
dec
in
iret
cwtl
test
jle
jp
mov
testl
jnp
xchg
and
mov
mov
xchg
ljmp
lock
lret
ret
nop
cmp
or
sahf
fucom
pop
js
sbb
sbb
cwtl
mov
dec
fwait
out
mov
inc
cwtl
andb
mov
lock
dec
cwtl
adcl
mov
fwait
pop
xchg
pushf
pop
nop
mov
cwtl
mov
add
pop
xchg
cwtl
push
pop
xchg
mov
inc
xchg
bound
js
xchg
dec
mov
xchg
adc
nop
sbb
ret
xor
imul
or
inc
add
aaa
or
or
test
shl
gs
mov
jp
adc
nop
xchg
push
nop
mov
pushf
mov
loopne
pop
adc
push
mov
add
cwtl
mov
and
xchg
outsb
push
js
pop
pop
lcall
push
cwtl
test
xchg
xchg
nop
mov
cwtl
sbb
popf
nop
push
imul
xchg
sub
xchg
push
mov
mov
pop
cwtl
test
cwtl
test
test
adc
xchg
or
sub
xchg
mov
fs
shlb
mov
shll
cmp
aas
popf
mov
dec
mov
repz
xchg
push
inc
dec
fwait
addb
add
outsl
js
add
outsl
xor
lods
inc
jnp
lahf
mov
mov
xchg
mov
rcll
imul
or
push
push
mov
js
cwtl
adc
cwtl
xchg
out
xchg
push
cwtl
test
test
cwtl
xchg
jo
add
rorb
or
call
xchg
loop
lea
xor
and
cltd
or
loopne
mov
bound
xchg
jmp
xor
dec
pop
or
xchg
adc
addr16
movb
addr16
data16
mov
adcb
dec
sbb
filds
xor
stos
cltd
outsl
dec
ss
mov
mov
push
addr16
scas
mov
add
dec
and
out
or
inc
or
and
or
mov
mov
lahf
adc
inc
xchg
enter
rcrb
or
sub
repnz
lret
or
or
test
sbb
fisttpll
movsb
xor
push
mov
inc
or
mov
sbb
inc
or
jno
adc
in
std
mov
or
out
or
or
push
or
or
inc
and
leave
jp
or
sbb
mov
call
inc
adc
test
and
cmp
adc
cmp
out
mov
mov
add
add
or
or
rolb
xor
lret
sub
rorl
sbb
and
scas
push
scas
and
sbb
call
sub
xchg
lds
and
mov
xor
jnp
rcrl
xchg
test
stc
sub
popf
mov
rcrl
push
add
call
pop
and
addr16
xchg
gs
inc
popa
loope
adcb
imul
xchg
sub
or
push
xchg
jge
sub
addl
stc
push
adc
gs
test
jbe
mov
roll
ret
jmp
or
dec
or
add
cltd
mov
enter
cld
sub
ss
sti
mov
sbb
cmpl
test
inc
pop
push
xor
aaa
sahf
fidivl
sbb
sub
fidivl
pop
mov
or
jae
xor
lock
pushf
pop
or
faddl
enter
cmpsl
arpl
inc
mov
and
inc
sub
pushf
push
je
cltd
and
xchg
and
xor
push
or
andl
rcrl
cmpsl
xchg
pminub
decb
pop
add
outsb
pop
mov
add
test
push
xchg
push
and
or
and
stos
or
mov
adc
cmpsl
sti
loop
addr16
inc
out
pop
or
gs
adc
xchg
out
jge
pop
pop
stos
and
ffreep
pop
aad
mov
addr16
xchg
cmpsl
ret
and
insl
pop
mov
addr16
inc
jmp
in
xchg
or
nop
int3
mov
sarl
xchg
test
sub
jnp
inc
jp
jecxz
pushf
hlt
mov
popl
jb
and
xchg
push
add
or
adcb
movsb
inc
inc
es
xchg
adc
cmpsl
or
inc
test
out
je
or
xchg
mov
mov
jl
int
loopne
add
fcmove
push
fisubrl
add
or
mov
inc
pop
fwait
repnz
adc
sbb
or
lods
mov
imul
mov
mov
enter
repz
xchg
aas
cs
repz
and
test
push
sbb
add
or
push
mov
sahf
js
repz
inc
addr16
push
mov
push
inc
hlt
add
lahf
repz
cwtl
outsl
sbb
and
sub
adc
data16
add
jns
dec
bound
mov
sbb
aam
xchg
or
jg
xchg
push
hlt
icebp
xchg
pop
stos
lcall
out
test
rcll
adc
out
or
jne
xor
movsl
add
cmpsl
popa
adc
lea
adc
test
inc
xchg
push
add
add
push
das
cwtl
sub
clc
sbb
jp
xchg
lds
jge
push
sub
fs
rclb
icebp
add
inc
pop
and
or
out
inc
shll
sahf
add
lahf
loopne
inc
inc
fists
add
test
or
xchg
bound
inc
and
add
add
lahf
shlb
mov
flds
filds
andb
pushf
fs
fildl
dec
ret
jnp
jne
or
sbb
addr16
jb
inc
xchg
and
in
loop
fsubrs
push
add
shlb
bound
pop
jnp
arpl
push
add
call
daa
addb
or
les
inc
insl
xchg
cwtl
or
cmp
sbb
stc
out
lds
daa
ljmp
popf
or
and
addr16
nop
mov
cltd
or
push
jnp
cwtl
fimuls
enter
cwtl
fmuls
xor
fsubl
cmp
fwait
orl
jno
and
and
adcb
lea
gs
and
or
mov
jle
jb
push
movl
test
imul
or
je
xchg
xchg
sub
or
xchg
jge
jl
jb
addr16
addr16
and
arpl
jge
sub
pop
xchg
lahf
add
out
popa
push
popa
bound
sbb
les
test
fnstsw
adc
nop
or
sbb
xchg
pop
xchg
fwait
or
cltd
divb
mov
loopne
iret
das
or
cmp
push
nopl
push
or
inc
sub
lahf
clc
xor
andb
jp
ret
stc
shrb
pushf
xchg
into
insb
mov
dec
pop
jns
ficoml
jbe
fwait
out
mov
sti
psraw
dec
ds
push
or
cmp
pop
cwtl
mov
fsubrs
out
sbb
pop
or
xchg
mov
sti
xchg
adc
jns
mov
dec
adc
inc
aaa
and
jb
adc
pop
xchg
or
sbb
lcall
adc
xchg
mov
popa
inc
mov
or
pop
xchg
jp
sahf
out
xchg
adc
mov
loop
orb
ljmp
mov
cmp
leave
or
out
loopw
jns
add
jb
pop
mov
inc
pop
pusha
or
pop
sbb
xchg
ret
mov
addr16
mov
addl
fs
and
popf
ret
pop
jle
mov
mov
imul
jle
jno
rorl
add
cmp
ljmp
cmp
addr16
or
aam
nop
ret
stos
xchg
xchg
jno
fildl
bound
stos
jbe
out
xor
sahf
in
add
xchg
xchg
inc
sub
jae
inc
shlb
sahf
jp
jb
daa
sbb
pop
add
pop
addr16
cs
mov
inc
and
xorl
repnz
pop
popa
loop
ja
pop
pop
pop
loop
daa
in
adc
pop
adc
popa
inc
mov
test
jp
int3
es
adc
push
insl
adc
int3
movsl
jle
pop
lea
bound
pop
sti
addr16
mov
inc
push
and
push
ja
inc
push
add
lahf
or
inc
int3
and
ja
inc
inc
add
lahf
add
cmpsl
inc
inc
add
lahf
inc
jb
inc
inc
and
test
xchg
xchg
add
and
rorb
xchg
pop
arpl
jb
popf
loopne
aas
aaa
push
jns
sbb
out
shlb
sti
fwait
dec
mov
jp
sbbb
cmp
lods
in
or
mov
sbb
sbb
or
fildll
repnz
sbb
int
cmp
cmp
testb
xchg
cltd
stc
rclb
mov
int3
mov
ficomps
lea
scas
or
dec
mov
popf
add
addr16
jp
pop
in
mov
pop
mov
sbb
daa
mov
pop
add
xchg
xchg
ret
cmp
xchg
or
mov
xchg
or
inc
pop
and
loop
gs
and
mov
pop
pop
mov
push
mov
or
ds
push
daa
pop
sahf
mov
add
push
aam
pusha
pop
daa
jbe
fwait
or
xchg
xchg
ja
fisubrl
or
cmp
inc
pop
fwait
and
sub
jne
mov
and
movsl
or
inc
xchg
and
fcmovb
push
sbb
or
shrl
pop
ja
mov
addr16
lret
scas
fists
sbb
lea
fidivrl
adc
lea
sbb
and
lds
movl
fwait
and
adc
ror
jne
pop
gs
inc
cltd
pushf
cmp
add
or
cmpsl
inc
pop
adc
push
fimull
movsl
push
gs
add
enter
or
jp
cmpsl
or
and
dec
and
push
lods
nopl
or
addr16
fists
shrb
or
mov
pushf
mov
test
or
outsl
aaa
xchg
int
aaa
or
mov
cmp
or
dec
decb
daa
adc
pop
lods
push
jo
add
inc
sbb
sub
aam
popf
lcall
jge
fldl
enter
stos
enter
les
addr16
outsl
inc
shrb
adc
mov
push
test
out
sbb
xor
jle
in
pop
gs
ljmp
repz
xor
popa
lods
cpuid
sub
push
dec
lea
mov
or
sbb
jp
fmull
out
enter
jno
outsb
cwtl
or
lock
inc
sbb
add
pop
add
xchg
imul
mov
sbb
dec
sub
mov
lea
in
pop
sbb
and
popa
ficomps
sbb
adc
push
addr16
adc
add
lahf
scas
rorl
and
xchg
fwait
jno
vpackuswb
sbb
je
popw
das
and
pop
enter
cmp
stc
sbb
jmp
leave
out
in
pushf
pusha
pop
cmc
js
addr16
xchg
pushw
mov
push
lods
mov
mov
push
dec
adc
out
sub
sbb
and
stos
test
or
push
lret
sbb
das
addr16
sbb
or
inc
jle
addr16
ds
addr16
call
popa
mov
addl
rorl
rorl
pop
and
add
addr16
pushf
loop
or
or
arpl
int
dec
fsubrl
fisubl
adc
lods
xchg
sahf
repz
scas
adc
cmp
popf
pop
rorl
das
add
add
jp
cmpsl
mov
jl
out
mov
sub
hlt
and
popa
sub
or
xor
into
jne
shll
jle
inc
inc
mov
or
xchg
pop
ret
insb
xchg
ja
ss
in
sbb
hlt
in
popf
push
xchg
or
fwait
and
mov
jp
xchg
or
lret
js
jnp
fiaddl
call
mov
mov
ret
sub
sbb
inc
or
out
pusha
adc
lods
inc
cmp
cmpsl
imul
push
pushf
or
xor
mov
mov
rcrb
xchg
pop
test
lahf
sub
mov
dec
or
or
xchg
repz
sub
aad
sub
jl
sub
popf
cltd
out
mov
cmpsl
sbb
test
ret
sbb
stos
scas
lea
xchg
push
or
pop
in
subl
cmpsb
mov
adc
cmp
es
pop
pop
jno
lods
xchg
jge
inc
and
cmp
orl
xlat
add
addr16
pusha
subb
clc
test
or
sub
and
loop
subb
addb
xchg
or
push
insl
in
cltd
mov
jp
test
mov
bound
push
or
test
lcall
stos
repnz
cmpsl
andl
mov
lcall
lahf
lahf
inc
or
je
push
mov
xchg
push
stos
dec
xchg
pop
push
fcmove
mov
loop
or
xchg
jno
adc
pop
xor
xchg
or
daa
gs
int
ficoml
and
or
nop
outsb
mov
jno
insl
cmp
pop
xchg
push
cltd
adc
ret
sbb
mov
sub
test
adc
sahf
daa
xchg
cmpsl
inc
shlb
xchg
mov
and
jle
ret
outsl
nop
fildl
or
stos
jle
pop
jb
sbb
adc
cmpsl
lods
enter
lods
push
inc
fwait
or
loop
cmp
or
or
and
mov
scas
mov
outsb
stos
test
stos
lods
outsb
stos
test
inc
push
addr16
pop
or
addr16
ja
rcrb
mull
adc
mov
shlb
inc
pop
add
lahf
lcall
sbb
inc
pop
add
lahf
fwait
jb
inc
and
ja
inc
push
add
lahf
cwtl
jb
inc
xchg
and
shlb
inc
adc
lahf
push
jb
aas
movl
mov
push
and
ljmp
dec
in
mov
pop
mov
cltd
lea
mov
or
movsl
mov
jnp
xor
mov
addr16
ja
cmpsl
adc
test
mov
sahf
or
popa
sahf
fs
insl
and
and
test
out
add
jbe
jp
xchg
pop
add
or
test
arpl
adc
test
sahf
rolb
mov
jp
add
or
hlt
add
dec
mov
or
mov
mov
pop
hlt
pop
pop
cmc
xorb
roll
or
cmp
in
add
clc
and
push
cmpsl
out
pusha
push
les
hlt
pusha
lahf
fimuls
enter
push
in
loope
out
mov
push
dec
lcall
adc
adc
movsb
adc
mov
or
mov
pop
fisttpll
fsubrs
out
test
fmuls
pop
and
lods
test
pop
dec
sbb
mov
cmp
or
or
add
loop
adc
arpl
repnz
inc
mov
mov
mov
addr16
push
jg
pop
sbb
nopl
xchg
jp
ret
lea
fwait
stos
mov
sub
pop
or
or
mov
shlb
add
bound
adc
shll
arpl
and
xchg
cmc
jbe
testb
in
add
mov
outsb
jb
jnp
or
cmp
fisttpl
jmp
aad
pop
xor
pop
or
std
pop
xor
inc
addl
or
sub
test
push
sbb
in
and
fildll
clc
icebp
testb
leave
sbbl
xchg
addr16
xor
loopne
adc
lods
insb
addb
adc
sbb
popa
test
jle
mov
inc
add
mov
or
adc
pop
or
mov
sbb
jge
mov
mov
mov
adc
ja
inc
pop
dec
or
push
adc
xchg
push
xchg
pop
adc
test
inc
push
test
add
xchg
addl
xchg
ret
decl
addl
inc
add
loope
inc
mov
cltd
movsb
xchg
sbb
lret
sbbl
dec
mov
inc
mov
jne
add
jns
mov
sbb
inc
daa
les
pushf
testl
loope
mov
outsb
packuswb
popa
pushf
packuswb
pop
xor
test
jbe
jns
mov
cmp
or
iret
in
cmp
xchg
xchg
outsb
nop
fiaddl
cmc
lret
gs
cltd
sbb
add
addl
je
jmp
sub
ret
rcrb
orb
lds
lock
shl
daa
subl
cmp
je
mov
push
sbb
dec
lods
add
push
jmp
mov
mov
sbb
cmp
fwait
mov
and
or
mov
jmp
ss
push
cmp
dec
lods
mov
adc
lahf
xchg
sarb
jl
mov
mov
nop
and
sbb
flds
jg
aad
ss
add
aad
imul
lcall
rcll
pop
ds
cmp
int3
lret
or
jne
cmpl
inc
fidivrs
mov
cmpsl
pusha
cmc
push
popa
xchg
sbb
xchg
add
mov
pop
push
ds
pusha
scas
inc
mov
pop
jp
outsb
ret
xchg
insl
neg
idivb
xchg
and
loopne
call
rcl
xchg
fdivl
sbb
jg
jge
mov
pop
jmp
fwait
pusha
test
push
and
fcmovb
dec
pop
adc
cmp
xchg
cli
mov
mov
scas
jmp
test
stc
daa
rcrl
mov
pop
movsb
adc
mov
das
loope
fs
ret
orb
mov
inc
cmp
pusha
push
sbb
test
adc
push
ds
ss
les
idivl
and
fadd
call
pop
ret
pop
lock
xor
fwait
pop
pop
jle
jnp
aad
mov
cmp
add
ret
push
aad
dec
cwtl
adc
pop
mov
iret
jae
pop
add
mov
fdivrs
lods
out
popf
insb
pop
mov
xchg
cmp
jl
nop
outsl
aaa
ljmp
nop
out
add
mov
mov
rorb
jl
test
lahf
jl
sbb
adc
xlat
add
cwtl
mov
push
mov
icebp
adc
cmp
pop
xchg
pop
mov
xchg
sub
cwtl
rcrl
mov
cmp
mov
and
jnp
out
lea
pusha
fldl
push
movsb
sbbl
jae
xor
pop
shll
cmc
xchg
ss
or
rclb
or
push
neg
sbb
add
pop
push
cwtl
pushf
fistps
lods
sub
xchg
addl
repnz
shlb
popa
arpl
push
lods
pop
hlt
lcall
lret
xchg
and
jnp
sti
addb
xchg
push
jne
push
xchg
mov
pop
nop
sbb
jns
or
mov
jl
push
inc
mov
mov
int
inc
loop
addr16
cmpsl
jb
arpl
inc
add
sbb
xchg
add
inc
push
or
pop
addb
push
cmp
arpl
xchg
mov
sti
sbb
testb
xchg
jb
and
adc
sahf
dec
cwtl
push
jmp
pop
xchg
test
add
rcrl
aam
xorb
adc
and
icebp
lods
xchg
dec
lret
test
pop
and
adc
lcall
jb
inc
andl
mov
bound
inc
mov
mov
ja
inc
adc
lahf
or
and
adc
xchg
lahf
adc
inc
xchg
and
xchg
fwait
ja
inc
sbb
lahf
mov
and
add
addb
inc
cmp
ja
and
fs
pop
jne
lea
and
repz
js
mov
cwtl
sahf
xchg
jl
xor
or
jno
test
pop
cmp
aad
addb
push
or
inc
in
aam
bound
out
dec
xchg
je
inc
jp
add
fsubrl
nop
mov
mov
mov
jle
jg
push
mov
in
mov
repnz
xchg
sbb
inc
jb
inc
push
xor
xchg
cli
xchg
xchg
dec
inc
jne
add
add
sbb
test
lcall
or
xchg
cmp
adc
dec
popa
test
jle
add
and
adcl
jb
xchg
aaa
or
and
push
add
lahf
add
test
xchg
fs
pop
repz
mov
test
inc
lock
or
jbe
outsb
loop
mov
add
xchg
popa
call
sti
ficoms
sahf
pop
mov
lds
insb
sub
fldt
mov
push
dec
mov
xchg
xchg
ret
or
sub
jb
ret
sbb
fistpll
adc
adc
inc
ret
lahf
loop
adc
xorb
out
sbb
les
inc
inc
and
test
inc
pop
mov
lahf
loope
mov
lahf
popa
jb
inc
bound
addl
jb
mov
pop
inc
and
xchg
push
mov
aam
mov
in
andb
sbbl
das
inc
dec
gs
rcrl
testl
adcl
pop
dec
or
xchg
enter
push
lea
rolb
lahf
pop
jb
inc
fldenv
sbb
inc
cmp
lahf
aam
dec
inc
dec
and
xchg
ret
and
add
lahf
pop
jb
inc
fsubs
push
dec
ja
inc
push
leave
lahf
pushf
and
flds
add
lahf
push
jb
inc
into
and
dec
ja
inc
test
popa
movsl
or
lahf
loopne
pop
inc
pop
and
aam
xor
lock
lahf
dec
jb
and
test
addr16
and
xlat
add
lahf
dec
je
cmpsl
cmpl
subb
stos
mov
inc
fistps
mov
loop
fdivrp
stc
pop
or
dec
movsb
dec
xorl
subb
push
push
js
dec
pusha
push
pop
dec
sbb
mov
sti
mov
out
push
andl
in
ss
xchg
push
push
jae
adc
xor
lcall
arpl
test
loop
push
into
inc
arpl
movb
rol
test
lcall
and
orb
push
xchg
mov
xchg
je
popl
les
pop
ja
inc
mov
rcrl
inc
and
sbb
pop
testb
test
daa
jmp
ret
js
and
mov
in
notl
out
addb
push
adc
roll
push
inc
testl
xchg
mov
and
sub
lret
sub
test
and
jnp
mov
call
mov
cwtl
jbe
test
out
arpl
xchg
cmpsl
and
js
mov
pop
insl
stos
mov
test
movsb
xchg
push
xchg
imul
xchg
orb
sub
movsl
xchg
mov
int3
mov
and
inc
mov
sub
inc
arpl
and
test
mov
out
adc
sub
mov
icebp
stos
sti
js
into
xchg
popa
sub
xor
loop
mov
pmullw
lahf
cli
cltd
pusha
or
xor
cmp
cmp
out
stos
push
aaa
aam
push
pop
test
roll
mov
pop
mov
pop
or
mov
cld
ja
sub
mov
in
cwtl
mov
outsl
xor
inc
pushf
adc
cmc
and
or
and
test
test
lods
mov
loopne
in
xor
add
popa
dec
cltd
mov
cwtl
mov
and
cwtl
mov
sub
sub
push
jmp
adc
jbe
mov
jl
bound
mov
cli
adc
adc
loopne
outsl
sbb
cmc
and
add
mov
out
les
stos
test
and
dec
or
aaa
push
gs
jns
jo
outsb
cmp
test
rclb
loope
and
imul
dec
movsb
mov
adc
sbb
adc
loopne
xor
sbb
js
cwtl
inc
pop
popa
push
cmp
inc
mov
adc
ret
mov
mov
test
cltd
xchg
outsb
mov
rcll
jmp
int
cmc
mov
jbe
dec
xchg
and
pop
jg
pop
jge
mov
rclb
nop
push
in
pop
mov
bound
jns
addb
jg
push
into
lret
mov
mov
adc
int3
push
clc
and
aam
xchg
pop
mov
lcall
sti
pop
call
adc
bound
dec
out
in
rorl
mov
int3
out
inc
shll
mov
js
mov
out
and
xchg
repnz
out
mov
aas
add
ss
xor
or
es
js
mov
dec
loop
lcall
and
aam
pop
aad
sbb
lret
push
cmp
stos
adc
xor
xor
add
cmp
andb
cwtl
and
xor
mov
fidivs
mov
fisttpll
fmul
mov
xorl
popf
mov
cwtl
sahf
jmp
mov
pop
add
xchg
cmp
pop
ret
mov
jbe
inc
push
sbb
sbb
mov
sti
and
gs
inc
push
and
adc
in
ljmp
loope
and
adc
sarl
jle
mov
xor
adcl
popl
cld
xor
fldenv
mov
xchg
les
sbb
and
fildll
or
fwait
into
lock
xchg
mov
insl
xchg
ret
addr16
enter
cmp
mov
inc
lcall
arpl
ja
push
sbbl
ret
jo
shrb
cmp
dec
test
lahf
fidivs
popf
mov
add
sahf
mov
jle
fs
addr16
add
and
mov
fistps
add
and
cwtl
mov
push
xor
fwait
mov
jecxz
inc
mov
pop
outsl
mov
ret
out
mov
jb
inc
sbb
inc
movb
mov
inc
testl
loope
icebp
movsb
ret
addr16
fwait
pusha
mov
lahf
popf
cmpb
sbb
addb
add
frstor
lahf
cmpb
pop
js
bound
dec
aad
pop
sahf
or
cmp
addr16
adc
divl
mov
ja
aaa
xor
xchg
sub
inc
pop
pop
xchg
cmp
or
mov
repnz
mov
jbe
jbe
sbb
dec
mov
cld
xor
movsl
lods
rclb
decb
aam
push
loop
rcll
daa
jbe
cs
lods
jg
add
pop
add
mov
dec
imul
dec
mov
sbb
add
lcall
pop
sbb
pop
jg
out
repz
mov
loop
and
test
lahf
shll
or
mov
test
int3
fcmovu
or
test
add
pop
test
imul
sbb
ss
jae
fisubrs
push
fimuls
sub
push
add
dec
stos
push
mov
js
fcmovnu
loopne
test
sub
pop
mov
pop
or
jp
or
divl
cwtl
adc
lds
cmpsl
push
push
mov
in
movsl
xchg
add
push
push
push
sbbb
sub
mov
enter
inc
mov
enter
and
popf
mov
imul
shr
clc
jl
push
clc
pop
in
sbb
imul
inc
iret
out
mov
insb
cmpsl
push
xchg
sbb
jge
or
pop
ja
jnp
xor
mov
sbb
insb
dec
mov
out
push
adc
aam
dec
lret
iret
addl
out
ds
xchg
mov
mov
cmp
push
mov
jecxz
xchg
and
add
jmp
sbb
adc
jne
xchg
mov
rcl
repz
pop
daa
inc
data16
in
mov
mov
push
icebp
pop
cmp
adc
and
xchg
aaa
inc
es
dec
push
push
pop
jb
push
popf
xchg
push
mov
insl
sub
lahf
mov
jecxz
shll
mov
cmc
cmc
xchg
push
popa
repz
pop
jmp
pop
pop
mov
xchg
and
fidivrl
stos
jns
lock
adc
stos
sub
inc
mov
fisubrs
push
daa
jns
push
jne
adc
push
loop
push
and
pop
push
sbb
shlb
xor
fcomp
xor
jl
push
adc
cltd
popf
mov
int3
call
sarb
idivl
lods
cs
je
dec
test
popf
out
adc
lock
pushf
shl
in
lock
xor
testl
test
jge
and
inc
imul
std
adc
out
shufps
push
or
cltd
call
dec
sub
jge
insl
popf
lods
jmp
pusha
jo
sahf
mov
lcall
adc
scas
jae
pop
pop
js
fs
mov
ds
pushl
popa
xor
dec
pop
mov
add
pop
jns
hlt
pushf
add
dec
push
adc
and
dec
pop
movsb
mov
test
mov
orb
in
ret
repz
sub
pop
sbb
push
movb
pop
imul
adc
lds
inc
push
jnp
cmpsl
stos
lret
repz
push
push
mov
loope
cmp
jmp
inc
mov
scas
enter
or
cmp
lcallw
stc
push
xlat
and
sub
sub
xor
mov
xchg
rcll
inc
in
lcall
popf
lcall
sub
push
or
cmp
adc
outsb
xchg
cmp
out
sbb
or
sub
xchg
xchg
scas
ret
repz
push
pop
jg
mov
mov
jmp
outsl
jg
stos
aas
dec
pop
mov
dec
fs
sahf
mov
pop
push
mov
or
popf
cmp
pushf
mov
sbb
ret
adc
push
fsubl
testb
iret
mov
pop
jnp
mov
rolb
mov
int3
dec
aad
mov
inc
inc
cli
movsb
out
add
sub
arpl
dec
lret
jmp
stc
mov
data16
loope
int3
dec
pop
or
movsb
loopne
xor
fs
jl
rorb
pop
ret
in
movmskps
punpckhwd
scas
into
or
cmp
outsb
mov
add
xchg
cmp
inc
adc
fiadds
sbbb
leave
aaa
in
insb
inc
jl
jecxz
roll
adc
sahf
loopne
xchg
sbb
push
lods
insl
out
inc
jno
pop
xor
or
and
sbb
add
mov
comiss
ret
fists
daa
das
inc
push
mov
out
scas
in
cmp
sti
lock
jmp
testl
inc
pop
xchg
lods
sar
adc
sbb
cmpsb
sbb
mov
callw
inc
mov
and
dec
fists
push
fs
push
loop
insb
std
aas
sti
sub
in
iret
shl
mov
push
mov
add
sub
out
fnstenv
cmp
outsl
jg
cmpsl
test
stc
pop
pop
jmp
inc
fisubl
adc
cmp
mov
adc
test
push
mov
pop
out
pop
shl
or
sbb
dec
jbe
orb
lcall
inc
rclb
pusha
repnz
fldcw
pop
and
xchg
xchg
push
xchg
xchg
sub
mov
sbb
push
push
dec
mov
je
in
or
iret
inc
push
lahf
push
push
jle
cli
rcl
cmp
dec
mov
mov
add
mov
call
hlt
and
mov
fsub
outsl
jg
mov
or
xchg
iret
or
pushf
notl
and
mov
sbb
sub
and
mov
jecxz
sub
or
jl
or
je
pop
xchg
dec
insb
mov
mul
mov
std
inc
lret
mov
pop
fdivl
ds
mov
test
sbb
cmp
add
pop
jb
ss
mov
and
xchg
sbb
fsubs
cmpsl
iret
pop
sub
aas
push
subl
in
jb
sbb
je
or
je
add
jmp
pop
add
pop
cmp
insl
jg
in
adc
lahf
mov
inc
jns
int
mov
adc
cli
pop
adc
push
jae
mov
xchg
jb
pop
add
enter
xor
lcall
ja
js
test
xchg
mov
jp
in
mov
test
pop
loope
pop
dec
pop
jne
repz
imull
mov
push
ret
mov
pop
pop
fs
arpl
mov
sar
or
mov
sub
sahf
std
mov
incb
mov
movw
jmp
cli
bound
and
or
cmp
nop
mov
inc
push
outsl
into
popf
sub
xchg
xor
roll
dec
pop
stos
xor
inc
dec
push
test
xchg
sub
ja
push
lahf
xchg
test
dec
xchg
xchg
stos
add
stos
mov
je
icebp
shl
stos
aas
push
imul
mov
mov
lods
mov
mov
jmp
lret
pop
lea
je
test
cmp
jmp
aas
xor
in
cld
mov
xor
je
mov
in
and
dec
dec
push
jbe
cmp
jg
dec
pop
cli
hlt
gs
inc
imull
sbb
and
call
in
jle
sbb
pop
sahf
pop
pop
mov
idivl
add
aas
sahf
sub
out
ljmp
jb
mov
or
lods
enter
pop
ljmp
push
cmp
dec
dec
xchg
ljmp
xor
pushf
cmc
clc
ror
stc
clc
push
add
pushf
shr
mov
movl
jmp
das
adcl
xchg
scas
call
sbb
fs
int3
add
sarl
jae
fabs
rorl
test
inc
sub
lret
mov
test
add
imulb
lods
pop
jmp
mov
mov
cwtl
daa
test
add
push
or
dec
inc
mov
add
and
inc
je
enter
adc
jl
aam
sub
mov
and
call
call
ds
dec
xchg
cmc
pop
into
push
xor
lock
cmp
jo
mov
add
dec
jle
pop
jle
loopne
gs
inc
leave
dec
insb
xor
movsb
movsb
adc
movsb
sub
lds
jmp
mov
xchg
mov
xor
test
fldt
pop
stos
sbb
dec
stc
movsb
pop
jo
sbb
call
push
and
incb
and
add
es
pop
jle
push
adc
jbe
scas
mov
jmp
xchg
sbb
xor
in
xchg
loope
add
adc
ja
xchg
lods
out
cmp
je
testl
rclb
fndisi(8087
out
sub
std
fwait
sub
pop
fwait
mov
leave
adc
insb
cwtl
test
loopne
in
sbb
jl
xchg
mov
jmp
lret
add
outsb
jae
popa
jb
outsb
je
insb
je
pushf
call
gs
icebp
adc
sbb
and
lods
ret
stc
sbb
es
add
push
out
pop
insb
adc
adc
lods
cld
mov
stmxcsr
push
xchg
shll
mov
adc
push
ret
cld
movsb
enter
or
cmp
dec
jb
lea
test
pop
jnp
stos
test
push
les
je
into
xchg
repnz
mov
or
mov
inc
pop
bound
mov
call
lea
ja
pushf
stc
imul
pushl
call
xlat
aas
popa
ja
mov
jns
sub
stos
sbb
sub
pushf
push
subl
push
sti
test
outsb
mov
call
mov
lods
push
lret
insl
and
testl
int3
inc
dec
int
mov
out
push
lret
xchg
push
adcb
ror
xchg
xchg
adc
cli
inc
inc
adc
mov
xchg
push
dec
mov
mov
mov
cmp
push
dec
jle
fdecstp
add
xchg
inc
mov
daa
inc
mov
mov
mov
dec
dec
mov
mov
notb
std
xor
subl
jmp
cs
jp
jno
in
test
add
inc
jp
stos
lret
inc
jp
fiadds
or
stc
jnp
movsl
adc
nop
or
jb
mov
cmc
mov
adcl
jge
cli
inc
in
fisubl
lods
inc
push
cmp
roll
idivb
aam
sbb
enter
js
enter
xchg
or
stc
sub
sub
push
cmp
xchg
or
lahf
mov
and
mov
adc
mov
jmp
and
dec
push
push
inc
push
xor
cs
insb
add
xorb
ja
movsb
cmp
ret
adc
pop
jle
out
push
cs
jge
fcos
fnstenv
ljmp
ret
jp
leave
sbb
fisubrl
das
popf
xchg
test
mov
not
nopl
fs
or
aas
scas
mov
test
and
hlt
das
mov
ljmp
lock
shl
add
xor
mov
push
or
or
and
push
jno
sub
push
movsl
mov
pop
or
das
cmp
iret
repz
scas
mov
mov
dec
int
in
nop
ret
mov
sbb
and
push
jp
scas
enter
sub
xchg
sbbl
xchg
popa
sbb
lock
and
ret
cltd
xchg
pop
xor
push
inc
xchg
popf
jbe
je
cmpsb
mov
pop
pop
add
inc
lret
xchg
add
jl
fdiv
test
mov
mov
in
out
or
xorb
test
repz
daa
arpl
cmpsl
stos
mov
inc
ja
sub
repnz
mov
inc
not
mov
lea
push
xchg
sbb
rcr
btc
mov
cmp
or
mov
sbb
mov
bt
bt
push
cmp
or
jmp
lea
call
push
movb
adc
mov
lea
jae
pusha
pushl
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
dec
sbbb
iret
push
outsl
xchg
mov
pop
sbb
mov
or
movsb
int3
out
pop
movsb
lods
das
push
jp
test
inc
sti
inc
cmp
test
mov
insl
pop
pop
jne
je
pop
adcl
and
fbstp
xor
pushf
mov
xchg
and
dec
sub
sahf
and
enter
int
fistl
test
enter
dec
mov
lret
jg
pop
popa
imul
fstps
xorl
lds
jge
scas
cmp
bound
mov
ds
mov
pop
fmul
xor
mov
lcall
ror
or
cmp
xchg
shrl
loop
pop
xchg
mov
add
stos
movsb
js
and
cmpl
jmp
adc
jae
ljmp
or
mov
push
xchg
test
in
push
nop
pop
xor
ds
js
mov
push
xor
sbb
cmp
sbb
xor
xor
in
sbb
inc
js
fsubr
cld
cmp
xchg
pusha
lea
je
call
les
pushf
movsb
lcall
mov
pusha
mov
dec
add
jp
sub
lods
cmpsb
sub
push
imul
js
pop
mov
add
adc
scas
imul
rclb
push
cmp
adc
add
jge
dec
lret
negl
fildll
test
pushf
mov
push
adc
push
pop
fadd
or
cmp
jecxz
mov
pop
xor
cmp
pusha
je
mov
dec
insb
mov
sub
dec
dec
inc
push
dec
xor
cs
insb
add
mov
fs
call
push
jmp
pushf
mov
vmread
mov
mov
ljmp
sub
lods
push
add
shrb
dec
jnp
std
push
jnp
stos
bnd
cltd
cs
fiadds
test
pop
repnz
divl
fsubs
add
popa
sbb
rcrb
lock
stos
add
pushl
pop
loopne
add
popa
insl
outsb
aam
xor
repz
adc
mov
out
shl
push
out
xchg
mov
out
push
outsb
xchg
push
orb
mov
mov
adcb
xor
jl
lods
adc
xchg
int
xchg
cmp
stc
xor
pop
jnp
fldcw
xchg
cmp
mov
addr16
rorb
add
shrl
sbb
mov
jl
cmp
sub
or
inc
push
pop
mov
dec
push
push
mov
shrb
dec
mov
lea
je
call
mov
cmp
xchg
inc
movsb
sbbl
testb
sbb
test
fiadds
repz
and
or
cmp
mov
cmp
popf
mov
int3
cld
jnp
pop
bound
or
je
out
fld1
dec
cmpsl
lock
push
xchg
mov
inc
orb
xchg
daa
sub
dec
cli
or
mov
lock
mov
call
xchg
movsl
ss
jl
sar
pop
and
addr16
xchg
scas
fucomip
daa
inc
pop
mov
rorl
xchg
adc
dec
frstor
loope
or
test
call
xchg
enter
cmp
mov
and
sub
lock
in
lret
lret
mov
sbb
ds
add
xchg
adc
lcall
xor
popa
call
mov
fidivs
or
int3
aas
sarl
inc
cmc
vmovaps
scas
leave
dec
rorb
cmpsl
xchg
cwtl
mov
pop
stos
fs
cmp
es
lock
xchg
cwtl
popf
cmp
and
mov
mov
xchg
mov
insl
xchg
movsl
mov
push
fldl2t
fsub
cld
cld
cmp
add
lcall
xor
mov
jle
or
adc
cmpsl
dec
or
cmp
add
pop
adc
ljmp
inc
pop
loop
add
or
xor
test
xchg
xchg
out
int
inc
dec
xchg
cmp
lods
lock
mov
enter
les
fs
and
lret
add
dec
jnp
mov
rorb
inc
aam
fldpi
and
add
popf
stos
aas
pop
addl
and
jb
mov
sar
xlat
adc
cmp
mov
xlat
jbe
xchg
and
insb
int3
rorl
addr16
dec
jbe
adc
xor
cltd
sub
dec
inc
sarb
outsb
mov
xor
in
push
inc
sbb
pop
data16
addb
mov
cltd
push
cmpsb
cwtl
popf
cmp
addb
scas
xchg
subb
jo
xchg
mov
mov
shll
dec
pop
add
leave
pusha
pusha
lea
jmp
mov
test
sahf
dec
fcompl
mov
insb
jp
cmpsb
shr
movsl
rorl
in
sbb
xchg
enter
mov
test
addb
mov
xor
cmp
in
xor
pop
aam
mov
ja
dec
sub
pop
repz
cmp
or
push
push
es
mov
scas
repnz
push
mov
mov
rorl
push
pusha
jmp
lea
jne
movzbl
pushf
not
movzbw
movb
movzbl
mov
cwtl
cwtl
lea
call
in
hlt
add
cld
lret
jmp
pop
xor
cmpsl
lods
rorl
pop
xor
cwtl
mov
nop
enter
adc
or
aaa
add
add
movsl
ja
das
mov
sub
ret
sbb
jns
adcl
push
jae
int
push
jge,pt
mov
or
sub
mov
pop
or
je
jno
cwtl
pop
mov
push
pop
imul
stos
sar
lods
fstpl
test
pop
push
aam
jge
lahf
sub
inc
push
mov
outsb
outsb
xchg
lcall
jo
dec
pop
test
adcb
adc
pop
xor
jecxz
aas
bound
sbb
or
jmp
inc
inc
inc
xchg
sbb
orl
sarl
stos
pop
pusha
out
mov
fiaddl
mov
sbb
int3
sub
sub
jle
xlat
ret
or
push
push
js
mov
pusha
js
mov
mov
cmp
push
mov
fmul
lret
repnz
imulb
sub
nop
loopne
cmp
xchg
mov
lods
mov
xchg
les
jg
fwait
inc
xor
sub
lock
cmpsl
aad
mov
out
xor
pop
and
mov
dec
outsl
mov
imul
and
aam
movsl
test
adc
cmpsb
sbb
xorb
std
jg
mov
inc
popa
mov
mov
fbstp
sub
test
xor
incl
clc
stc
cmp
pushf
pusha
lea
jb
cmc
cmc
clc
cmp
pusha
call
push
dec
dec
dec
dec
cs
insb
add
lea
insl
scas
lcall
les
add
fadd
push
ret
pop
lds
xchg
pop
cvtps2pi
sbb
or
lods
sbb
loop
sub
push
rol
jne
xchg
insb
or
cmpsb
jno
xchg
mov
jecxz
add
fcmovu
xor
ret
les
xchg
loope
sub
jb
mov
fldt
shrl
mov
pop
dec
pop
sbb
jne
dec
lods
outsl
mov
cwtl
leave
inc
dec
aad
pop
jne
inc
loopne
daa
inc
fimuls
jmp
sahf
mov
mov
inc
inc
loope
pusha
mov
pop
push
sub
rcl
out
bound
fprem
xchg
lret
jmp
pop
cmp
ret
mov
test
xchg
nop
push
dec
mov
fdivrs
sahf
adc
out
sub
pop
lds
sub
xor
nop
jnp,pn
or
lahf
dec
jge
sub
aas
and
pop
arpl
ficoms
js
shrb
popf
loope
cmc
lods
lret
sub
cwtl
lcall
xor
and
outsl
icebp
pop
pop
inc
mov
add
cwtl
push
imul
push
dec
mov
dec
fucomi
rcll
lretw
pushf
pushf
mov
and
jmp
jmp
or
dec
dec
iret
rcl
rorb
je
mov
sbb
in
jle
xchg
scas
jbe
or
shll
xor
pop
jl
loopne
xor
cwtl
enter
fstpl
inc
pushf
pusha
adc
pushf
pushf
lea
jmp
push
arpl
bound
inc
leave
int
icebp
adc
arpl
leave
testl
vpminsw
pop
lock
rclb
jo
pop
xchg
in
lea
push
loope
push
insl
movsl
push
inc
jae
jbe
jae
mov
cmp
mov
popf
mov
push
push
loope
leave
and
add
or
xchg
les
or
scas
jmp
popf
xchg
leave
aaa
out
or
inc
pop
lcall
ret
adc
aam
adc
pop
test
ficompl
pop
xchg
mov
and
rol
add
cmp
arpl
pop
inc
pop
inc
in
xor
xchg
dec
pop
mov
rcr
dec
sub
sbb
mov
xor
pop
out
inc
pop
lods
mov
xchg
inc
in
adcl
push
movsb
cmp
pushf
sahf
and
lret
and
loop
divl
scas
out
and
push
jo
insl
out
sbb
hlt
cmc
pop
jle
fldcw
inc
ss
outsb
movsb
mov
jnp
rorl
or
mov
int3
add
or
mov
inc
mov
fidivrl
divl
cmp
rorl
es
jl
mov
cmp
stos
dec
mov
inc
iret
lock
mov
or
pusha
push
or
shrb
mov
xor
lea
mov
ret
jp
fcomps
pop
mov
dec
shr
sbb
es
jne
add
push
cmpsb
shrl
jae
lcall
xchg
xchg
dec
popa
xor
hlt
cmp
mov
adc
leave
in
inc
mov
fldt
jno
dec
mov
fisubrs
sti
mov
mov
jb
xchg
mov
stos
inc
xor
mov
ljmp
and
hlt
inc
push
add
dec
or
adc
das
xor
rol
test
adc
scas
dec
shll
pop
jae
cmp
and
pop
add
lods
fyl2x
and
rcr
adc
sub
out
sub
push
lods
pop
jecxz
sbb
mov
push
cmp
cmpb
xorl
xchg
mov
add
xor
xchg
xor
dec
in
jle
fsubs
and
mov
mov
cli
sbb
arpl
sbb
cmp
mov
jle
add
and
jge
lahf
sub
mov
sub
jns
rol
adc
dec
push
test
cltd
sbb
pusha
lcall
fisubl
add
push
dec
jp
xchg
movsb
lret
data16
xor
lret
xor
lahf
lret
mov
mov
sub
inc
sbb
cmpsl
fdivl
push
dec
fiadds
adc
iret
aas
shll
cwtl
sbb
test
pushf
rolb
movsb
mov
in
or
je
ror
sbb
mov
inc
push
xor
cs
insb
add
and
imul
pop
pusha
data16
fdivr
sbb
cmp
jle
psrld
push
jg
das
sub
js
xchg
out
mov
loopne
fdivs
jns
fiadds
sub
xor
add
or
pop
jmp
lcall
sbb
repz
scas
ret
add
dec
flds
inc
pop
xchg
pop
inc
inc
addr16
mov
fnstcw
and
test
inc
add
pushf
lahf
movsbw
movb
lahf
mov
lea
jmp
jmp
flds
insl
jno
jae
push
bnd
movsb
aam
cld
adc
test
sub
fs
lods
mov
xchg
cmp
sub
inc
test
or
mov
out
sub
mov
fnstcw
add
xor
push
stc
cmp
jmp
imul
pusha
pushl
stc
add
mov
lea
jmp
xchg
cmp
stos
add
mov
fucomp
stc
pop
inc
pop
mov
es
push
jp
or
add
iret
xlat
cli
cld
add
push
adc
mov
and
mov
jmp
xchg
jnp
ss
aas
sti
cld
xor
push
mov
ret
shl
mov
sub
sbb
add
or
pop
cmpsl
leave
in
jp
insl
mov
testb
push
push
stos
lret
push
cmp
mov
jge
and
pusha
bt
pushf
clc
cmp
mov
movb
lea
ja
bt
pushf
mov
pusha
imul
stc
add
pusha
pushf
push
push
lea
jmp
bt
shr
xadd
mov
cmp
test
inc
mov
rcl
seto
mov
call
push
mov
pop
add
push
sub
mov
push
push
rcl
cmp
dec
pop
idivb
push
jg
sub
sti
or
fidivs
das
jmp
lods
lea
scas
inc
leave
leave
or
out
cli
mov
repz
or
jg
pop
sub
out
xor
das
or
mov
pop
mov
mov
movl
mov
or
negl
dec
dec
imul
mov
mov
cmc
std
mov
test
cmp
out
scas
sub
cmpsl
iret
mov
mov
stos
xor
mov
rclb
jge
xchg
icebp
fwait
out
pop
shr
mov
fistpll
jbe
push
insl
das
testb
rolb
or
xor
mov
imul
arpl
or
ljmp
out
fmuls
jns
sbb
sub
sub
jo
test
int3
call
repz
jmp
test
and
outsl
jbe
push
mov
lret
sbb
cmpb
pop
fadds
dec
lock
je
cmp
sbb
sbb
lods
cs
out
sbb
call
adc
rcll
sar
hlt
xor
test
into
mov
lods
ja
push
test
add
sbb
inc
movsl
lret
jl
add
daa
xor
daa
jo
mov
sbb
in
dec
ja
lret
out
push
jg
cmpsl
mov
movsb
out
push
mov
jne
push
out
subb
xchg
movsb
rcr
push
or
outsl
andl
mov
sub
mov
jnp
cltd
mov
sub
push
stc
cltd
mov
dec
lock
push
xchg
test
add
sub
subl
outsb
xchg
inc
jae
mov
push
mov
cmpsl
test
or
push
test
add
lods
mov
loope
jnp
ljmp
and
gs
mov
aas
mov
lock
sub
movsb
enter
mov
lds
jle
int
xchg
mov
push
inc
pop
pop
jbe
rcl
ljmp
adc
adc
int
jge
ret
shrb
pop
ljmp
sub
fildl
enter
pop
jp
mov
fwait
mov
jne
lea
xchg
mov
lds
pop
lods
pushf
lret
arpl
repnz
xlat
icebp
call
dec
xorl
jp
nop
inc
ja
xchg
push
jnp
pop
pop
dec
popa
ja
jg
inc
sbb
push
mov
push
and
addr16
xchg
xchg
mov
loope
cmc
xchg
sub
fstps
sub
sub
xchg
popf
popf
daa
dec
lea
add
out
out
add
aam
jae
ret
movsb
jno
mov
gs
mov
iret
pushl
sub
push
pop
lret
out
sub
pop
addr16
ret
lret
mov
pushf
pushl
ret
pop
ret
adc
xlat
mov
ficoml
dec
jbe
cmpsb
mov
int3
ljmp
xor
inc
sbb
jp
lods
cld
fwait
movsl
pop
das
pop
es
add
scas
adc
push
movsb
in
jae
nop
sub
inc
xor
cltd
xchg
and
mov
adc
xor
or
outsl
popf
jge
adc
dec
push
lcall
mov
mov
ret
pop
jbe
pushf
pushf
pushf
lea
call
pushf
pusha
bt
sub
mov
mov
mov
jmp
add
ja
jbe
dec
jne
push
gs
je
jno
bound
push
mov
adc
push
ljmp
mov
or
stos
and
sbb
icebp
lods
mov
popa
jnp
and
and
dec
ljmp
xchg
lret
mov
cli
inc
push
lcall
jl
inc
xchg
jne
arpl
loope
bnd
test
lock
daa
jmp
fsts
inc
pop
jno
shl
or
pop
test
cmp
push
jge
movl
aad
mov
cs
push
inc
jno
cmp
mov
adc
sub
loope
les
jl
and
stos
push
incl
mov
fs
inc
cmc
pop
jnp
mov
pop
stc
add
jle
push
inc
sbb
test
stc
mov
or
in
and
lahf
mov
mov
jae
xorb
addb
mov
xor
dec
push
mov
mov
ret
aad
mov
int
aam
cltd
cmpsl
cmp
dec
jg
xlat
jmp
fwait
mov
fisubrl
mov
add
inc
adc
pop
and
nop
add
pop
cmp
add
sub
mov
cmpsb
adc
mov
out
das
shr
push
push
jp
mov
jle
fildll
in
sub
jo
rcl
add
and
dec
mov
rcrb
push
jmp
loopne
sbb
dec
rcll
loopne
sub
jo
mov
xlat
cli
outsb
hlt
dec
in
mov
mov
and
inc
xchg
xor
xchg
mov
xor
and
add
loop
lret
jae
mov
addr16
loop
adc
pop
repnz
iret
push
cmpsl
fistpl
xchg
and
lock
pop
repz
cmpsb
sbb
sarl
cmp
stos
std
daa
adc
mov
xor
mov
jle
push
push
adc
bound
xchg
mov
xchg
popa
cltd
mov
and
aam
mov
sarb
inc
adc
pop
xor
jg
iret
in
cmc
adc
call
pop
jle
fstps
loop
insl
jne
push
jl
test
or
jp
ret
sbb
cmp
int
or
or
mov
sbbb
jno
jecxz
mov
adc
mov
shll
mov
call
ss
sbb
icebp
adc
xor
arpl
inc
inc
pop
addb
cmp
lods
add
iret
divl
in
ja
mov
add
inc
mov
pop
cmp
lds
push
push
insl
inc
cld
push
outsb
lods
add
pusha
pop
insl
and
stc
mov
lcall
cmpsb
fsubr
sub
sbbb
jo
mov
shr
push
dec
dec
dec
dec
inc
push
cs
insb
add
add
je
outsb
fs
inc
imul
push
loopne
add
push
xor
ret
add
pop
js
jno
dec
and
push
cmpsl
pop
je
adc
dec
xor
scas
fstpt
pusha
or
ss
aam
cmpsb
push
movsb
add
and
clc
inc
inc
sub
leave
imul
movsb
stc
or
xor
in
or
pop
test
mov
cmpsl
pop
add
mov
iret
out
jno
mov
pop
xchg
mov
mov
or
fs
enter
cmp
pop
out
push
jno
ret
jae
int3
inc
pusha
loop
negb
jl
mov
fdiv
or
and
push
cmp
cld
sbb
int
adc
sbb
xchg
sarl
adc
mov
mov
or
and
lahf
mov
hlt
cmp
insb
pushf
mov
sub
mov
sahf
fisttpll
movups
pusha
ds
dec
test
inc
hlt
sub
int3
sbb
insb
test
xchg
jno
loop
push
fcmovnu
inc
addl
push
pop
inc
xchg
xor
cmpsb
adc
movsb
mov
add
and
push
jo
mov
mov
mov
loope
mov
xor
cwtl
mov
xor
out
sub
lahf
mov
mov
stos
nop
mov
into
loope
inc
mov
fwait
les
aam
into
out
or
cli
or
pusha
mov
sti
cmp
loop
cs
mov
adc
fs
mov
mov
iret
notb
xchg
xor
clc
mov
inc
pop
js
mov
mov
test
or
xchg
mov
subb
je
scas
fsubl
jge
xchg
inc
mov
fdivrl
jnp
and
xor
mov
xchg
mov
inc
jne
out
test
sti
xor
enter
bound
loopne
push
xor
hlt
scas
mov
push
test
mov
sbb
mov
sub
js
cld
lods
popa
sbb
mov
test
cli
shrl
mov
and
in
stc
std
xor
dec
add
fucomi
jl
xchg
gs
scas
inc
push
xor
mov
jl
mov
int3
cmpsb
pop
cmp
inc
jnp
and
pop
mov
insl
jae
mov
push
xchg
ret
fisttps
lret
aaa
loope
aam
stos
shrb
cs
mov
jns
outsb
test
movsl
outsl
cmc
jge
jb
in
add
stc
jnp
mov
scas
inc
fisttps
hlt
inc
inc
or
fadds
loope
test
mov
fsubrp
jl
pop
iret
fidivl
jge
pop
cmp
mov
mov
movsb
mov
mov
in
scas
cs
mov
aas
push
cmp
jnp
adc
data16
xchg
ss
mov
int
arpl
adc
xlat
jmp
mov
push
inc
dec
pop
xchg
pop
xchg
incb
outsl
mov
addb
cmp
aaa
lea
push
cwtl
mov
inc
push
pop
bound
push
ds
jmp
data16
ja
jge
adc
sub
or
and
ret
inc
inc
and
ds
push
test
cmp
sub
sbb
lret
lret
out
repz
es
jg
mov
callw
add
loop
stc
std
and
inc
xchg
jno
mov
or
jae
rcrl
xor
stc
stc
sbb
sahf
mov
sbb
adc
loope
je
xor
push
inc
leave
lea
fimuls
bound
pop
push
aas
or
test
lds
sub
mov
lret
adc
ss
stos
pusha
add
add
cmp
xorb
cmp
shl
in
adc
int
scas
or
fdivl
pop
mov
rcrl
push
pop
push
push
pop
xor
xchg
fwait
sub
fldt
loope
mov
aas
jl
cli
loope
or
sub
inc
iret
popa
insl
subl
dec
adc
mov
jl
jo
xchg
and
dec
fsubrl
daa
push
fistps
cwtl
les
and
jns
add
inc
jp
xchg
and
mov
push
pop
add
stc
ja
pop
mov
incl
cmc
ret
ret
andb
add
ja
cld
lcall
clc
add
xchg
lea
pop
xor
inc
push
test
jge
ja
fldt
ss
adc
or
ja
popa
lcall
sub
test
mov
pushf
xchg
or
jne
and
xor
add
lea
cmc
mov
inc
mov
jl
fcompl
call
or
cmp
mov
nop
in
xor
test
jne
add
add
add
jecxz
faddl
push
shlb
mov
cmp
notl
sahf
mov
movsb
insb
fldenv
das
call
dec
lcall
inc
cmpsl
cmp
fdivrl
aaa
fxch
mov
shrl
mov
and
or
adc
pop
sbb
pop
decl
cwtl
inc
add
mov
test
cmpl
flds
popf
bound
jp
jae
dec
loope
add
xchg
inc
mov
jno
jns
push
pop
into
xchg
and
pop
mov
adc
pop
cmp
inc
push
inc
and
roll
pop
cmpsl
pushf
or
repnz
dec
xchg
push
aas
sbb
pop
sahf
or
out
cmpl
lcall
clc
add
dec
insb
pop
cltd
daa
xchg
scas
cmpb
mov
imul
out
mov
mov
dec
in
xor
add
jl
hlt
mov
xchg
inc
pushf
popf
add
cmp
adc
and
jnp
xchg
shrb
out
out
xchg
adc
orl
add
cmp
pusha
arpl
repz
pop
xlat
subl
add
testb
sbb
dec
dec
loope
daa
lahf
xchg
xchg
and
pop
xchg
sbb
lahf
push
ffreep
sub
repz
pushf
mov
lods
cmpsl
cmovg
adc
xchg
adc
orl
mov
je
shl
push
std
add
cmpb
push
cmp
ljmp
es
popa
and
pop
add
pop
sahf
loopne
movsb
mov
push
cmpsb
lret
dec
scas
fisttps
pushf
inc
popa
cmpsl
loope
inc
cmp
xchg
fsubp
xor
stos
jecxz
lcall
or
scas
insl
mov
repz
jo
sub
xchg
fmulp
push
jmp
cmp
and
pop
mov
test
jno
jle
ficoms
inc
mov
xchg
mov
push
loope
inc
dec
lret
dec
dec
or
loop
push
fwait
nop
pop
adc
in
loopne
inc
sub
dec
adc
xlat
stos
insl
and
jle
inc
ror
stos
sbb
jnp
or
hlt
push
insb
inc
push
xor
mov
adc
mov
push
push
enter
adc
gs
dec
scas
lods
adc
push
push
xor
jmp
pop
or
cmp
fs
mov
out
cmpsb
stos
rcr
lods
pop
push
dec
loop
and
ljmp
push
push
out
cwtl
sbb
push
cmpsl
aad
sub
pushf
pop
lock
sbb
ds
mov
or
or
adc
pop
gs
mov
dec
dec
das
int
stos
es
and
addl
push
jnp
cwtl
push
xlat
jno
pop
xchg
inc
sahf
push
sbb
xchg
lahf
fidivl
adc
sahf
and
fsubs
push
fs
xor
mov
inc
sbb
test
dec
add
lahf
pop
adc
inc
cmp
les
jno
jge
adc
add
push
ja
popa
in
push
mov
add
lahf
and
cmp
mov
iret
ja
sbb
addr16
dec
mov
out
pop
ret
jecxz
mov
mov
filds
faddl
lahf
mov
xchg
dec
jle
jo
lret
aad
negl
inc
cmpsb
rcrl
mov
sbb
jno
lret
push
sti
jl
lret
sbb
sbb
mov
sbb
add
xchg
push
aas
jecxz
ret
stos
in
jo
sub
daa
outsl
insl
rcll
scas
mov
lahf
pop
sbb
sbbb
ret
cmpsl
or
test
sub
cmc
sti
scas
or
ss
mov
je
notb
addb
sti
add
or
mov
pop
sahf
sub
scas
pop
mov
jp
fcmovnu
sti
dec
jmp
lahf
adc
pop
push
jns
loopne
lcall
and
pusha
mov
cmp
and
fs
leave
add
insl
jg
or
push
push
push
cmc
lods
mov
and
lret
pop
and
sti
inc
inc
lock
xchg
add
xchg
ret
or
cmp
sbb
int3
sbb
sti
fisubrs
lods
xchg
inc
or
and
mov
sbb
ss
pop
cs
dec
or
pushf
loope
push
jne
enter
outsl
js
lret
dec
sub
scas
test
sahf
mov
enter
or
mov
or
xchg
popl
mov
push
mov
repz
sbb
push
jo
or
popf
das
mov
lahf
aam
inc
and
adc
inc
inc
sahf
movsl
es
xchg
insl
call
jp
pop
jl
cwtl
pushl
xchg
adc
dec
out
lret
out
stos
push
andb
adc
and
push
cwtl
sub
ficomps
sbb
ljmp
xchg
movsb
arpl
xchg
mov
repz
and
inc
fisubrs
push
mov
idivb
mov
add
leave
movsl
popa
lahf
mov
idivb
out
bound
imul
mov
push
test
push
aad
push
lret
or
pop
dec
ljmp
cmp
dec
pusha
call
pop
sbb
jmp
shr
inc
xchg
iret
inc
jns
cs
adc
fs
sti
adc
sub
dec
aam
lahf
xchg
mov
aad
dec
ljmp
ljmp
mov
dec
lret
xchg
xchg
push
cs
add
lahf
lahf
jl
mov
sti
mov
cmpsb
mov
mov
pop
add
sbb
inc
cmpsl
outsb
sarb
xchg
inc
sbb
gs
test
jecxz
mov
pop
int3
xchg
addr16
scas
inc
sub
and
movsb
xchg
jb
inc
cmp
pop
int3
xchg
lcall
rcrl
inc
aad
sub
adcb
dec
rclb
pop
daa
test
add
xchg
xchg
jecxz
sbb
mov
or
inc
push
popl
add
in
add
mov
jl
roll
imul
test
inc
test
and
sbb
mov
jo
inc
test
dec
test
fwait
cmp
test
pop
sub
fstpl
imul
xor
pop
mov
hlt
movsb
pusha
jl
inc
mov
xchg
in
add
and
push
inc
pop
adc
xchg
jae
mov
js
in
push
fadds
out
addr16
test
clc
add
loope
adc
dec
pop
sbb
cmp
push
push
xor
fsubrl
imul
xchg
int
xor
rorl
lahf
addb
int3
out
out
imull
shl
push
push
jg
test
movsl
lret
jg
outsl
add
push
imul
subl
and
sarb
repnz
loopne
adc
addl
sub
xchg
adc
ret
xor
mov
ja
cs
mov
adc
sbb
clc
cmpsl
xchg
inc
inc
sbb
xchg
add
sbb
fidivrs
stos
push
popa
fwait
fs
addr16
add
sub
andb
xchg
shll
add
les
fsts
out
add
int
lret
test
and
orb
dec
outsb
leave
mov
aas
inc
xchg
out
out
push
rcll
xchg
test
mov
sbb
scas
adc
iret
pop
popa
imul
lds
addb
roll
in
je
addb
cwtl
xor
fnstsw
std
ret
sahf
call
mov
inc
movsl
pusha
movsb
enter
jno
pop
popf
clc
nop
int
rcr
decl
leave
jne
stos
scas
inc
test
rcll
and
push
xor
xchg
mov
es
mov
into
dec
test
pop
dec
nop
dec
enter
dec
je
push
iret
lock
out
das
mov
jmp
mov
stos
jmp
xchg
mulb
cld
or
add
mov
mov
enter
sbb
cld
push
pop
pop
cltd
cmc
popf
mov
jns
sub
jne
push
xor
jp
sbb
scas
jp
iret
xor
sub
push
push
xchg
push
out
and
sub
and
lea
adc
adc
outsb
pop
mov
roll
sahf
jg
faddl
mov
cmc
sti
test
xor
filds
xchg
mov
pop
mov
loope
push
roll
mov
push
inc
and
add
stos
test
mov
pop
mov
fs
dec
pop
je
mov
pushf
and
popl
push
xchg
jge
scas
lock
popf
cmp
or
add
fwait
xchg
xorb
test
add
xchg
add
sti
fwait
add
cmpb
clc
mov
xor
rcr
lret
test
sub
outsl
and
mov
mov
stos
or
rcrb
push
js
and
xor
add
add
pop
jmp
pop
inc
sbb
jl
mov
loop
xchg
pusha
inc
filds
sahf
pop
stos
dec
sub
push
loop
add
and
leave
dec
cmp
mov
jo
test
fnstcw
adcl
shr
or
adc
sahf
ja
js
or
fdivrl
in
cmpsl
push
cmc
ljmp
cmp
repnz
mov
add
push
xchg
adc
dec
jno
adc
stos
cltd
iret
sarb
leave
addr16
lahf
add
inc
inc
andl
fidivl
inc
add
lahf
push
jb
inc
or
or
inc
addr16
lcall
pop
adc
adc
int
adc
sub
sti
push
xchg
sbb
pop
pop
ficomps
in
xor
sbb
shl
mulb
and
pop
jl
orb
cmc
ret
out
jge
push
leave
dec
mov
cmp
xor
shrl
adc
pop
push
fstl
scas
push
icebp
inc
popf
pop
rolb
dec
dec
data16
fmull
or
adc
int3
push
dec
jg
inc
cvtps2pd
clc
ss
push
xchg
fwait
mov
xchg
mov
sbb
cmpl
jecxz
pop
cmpl
cli
cmc
sti
sbb
xchg
pop
xorl
loopne
sti
or
inc
jl
mov
cmp
fimull
mov
test
testl
lods
dec
sbb
hlt
push
xor
insl
int
adc
inc
popa
stc
into
pop
test
sahf
push
push
test
add
lcall
pop
cli
aas
out
cltd
pop
fnstcw
push
inc
push
in
outsl
xorl
dec
imul
xchg
roll
cmp
movsb
shlb
sbb
or
pop
dec
popa
js
ret
nop
and
scas
loope
pop
cmpb
push
xlat
pop
jbe
adc
push
int
push
lods
mov
pop
sub
mov
stos
sub
jbe
push
bound
push
idiv
adc
pop
cmp
push
xor
stos
mov
sub
mov
mov
rcl
and
in
jl
ds
outsb
mov
and
mov
jle
adc
xchg
push
xor
and
hlt
sahf
icebp
mov
bound
imul
sub
ja
xchg
clc
hlt
pop
fdivrp
incb
pop
in
jl
inc
int3
aam
adc
fiadds
mov
je
out
xchg
and
insl
pop
bound
and
aad
sbb
mov
lret
loope
sub
pop
notl
outsl
mov
inc
outsl
xchg
out
and
xlat
cmp
jg
xor
and
and
inc
sbb
xor
jecxz
pop
pop
pusha
push
cs
ret
ja
jecxz
imul
nop
xchg
data16
loopne
xchg
dec
mov
decl
popf
das
inc
push
cmpsl
cmpsb
stos
leave
push
mov
dec
les
rcr
mov
or
jbe
pop
imul
and
mov
dec
xchg
daa
inc
jae
shl
add
adcl
add
mov
bound
into
notb
out
or
mov
push
and
xchg
test
push
insb
daa
xor
xchg
rorb
push
sbb
lahf
pusha
fwait
out
dec
in
int
inc
sub
add
fsubs
xor
xor
push
data16
inc
repz
addr16
cwtl
sbb
sbb
jnp
push
insb
pop
aaa
arpl
mulb
dec
test
pop
nop
movsb
aam
sub
lods
lock
aad
sbb
stos
mov
inc
js
mov
cmp
imul
adc
adc
cmp
out
mov
lea
ja
ja
ret
xor
decl
xlat
mov
daa
push
jmp
inc
push
xchg
xchg
mov
aaa
mov
pushf
pop
cmc
std
and
movsb
or
sbb
xchg
in
out
lock
mov
xchg
push
push
bound
shl
loop
sub
test
mov
xchg
jl
mov
je
mov
mov
add
mov
sbb
int3
aam
cmc
cmc
fucom
inc
jno
out
push
outsl
pop
sbb
inc
js
test
push
fs
and
mov
mov
data16
sbb
adc
repz
sbbl
cld
or
fs
cwtl
mov
mov
mov
loop
xor
xchg
dec
mov
leave
jmp
fwait
shl
pop
daa
adc
fistps
sub
lcall
cmp
fwait
mov
mov
jmp
jns
xchg
clc
or
xor
push
sbbl
dec
outsl
jo
stos
insb
nop
mov
rorb
mov
lods
jmp
outsl
repnz
cmpsl
push
jns
cmp
imul
bound
fwait
stos
imul
add
scas
arpl
cmc
ds
data16
rcl
fiadds
sub
into
mov
mov
push
pop
jl
dec
cmpsl
inc
in
mov
cs
xchg
aad
test
in
stos
imul
fwait
push
clc
adc
jmp
cli
ss
sbb
aaa
sub
testb
mov
pop
lea
inc
cmp
sbb
jne
mov
jmp
mov
jne
lea
and
rorl
or
mov
dec
jg
inc
mov
xor
iret
mov
push
fcos
and
pop
jmp
mov
ljmp
repz
dec
pop
push
push
jns
lahf
sbb
sahf
jns
cmp
mov
cmpl
fs
fwait
in
adc
insb
test
enter
inc
js
xchg
mov
std
adc
sahf
fsub
pop
xor
dec
fcoml
icebp
pop
dec
imul
roll
and
and
sbb
ret
sub
push
shll
lods
repnz
or
sbb
mov
leave
dec
mov
into
sub
jecxz
dec
dec
lret
inc
in
fwait
sbb
mov
gs
lods
pop
push
sub
pop
ror
push
push
jge
mov
mov
push
jns
movsl
aad
sub
and
mov
push
cmpsb
movsb
shl
repnz
sub
fs
stc
pop
push
popa
mov
mov
ja
jb
mov
mov
sub
pop
cmp
int3
mov
aam
test
xchg
mov
mov
cmp
outsb
xchg
rcr
filds
movsl
jae
loopne
fistpl
lea
orb
aam
adc
jno
jno
test
adc
leave
std
mov
mov
in
cld
cmp
pusha
and
sub
ja
mov
adc
negb
fsts
imul
pushf
lock
xlat
xchg
mov
in
mov
fildll
add
pop
pop
test
imul
adcl
lock
sub
cmp
in
cwtl
xchg
xor
inc
out
ret
mov
xlat
push
push
bound
in
adc
lea
mov
cmpsb
and
movw
lea
jae
stc
cmp
call
pushf
pushl
lea
jg
je
pushf
call
pushf
call
lret
outsl
mov
jo
jg
mov
testl
mov
loopne
inc
int3
shrb
rcrb
popa
in
mov
adc
imul
cmpsb
ret
dec
cwtl
sub
xor
leave
xor
add
cmp
out
orb
xlat
daa
mov
cli
xchg
movsl
shrb
jne
loop
stos
sub
into
jmp
xchg
cld
sbb
in
fldln2
into
add
shr
add
push
icebp
dec
cld
icebp
or
jo
adc
cmp
pop
sbbl
dec
push
mov
cmpsl
sarb
mov
mov
xchg
out
or
cwtl
lret
and
cmp
js
loopne
sub
dec
cmp
sub
inc
mov
push
add
subb
inc
xor
push
mov
int
xor
cmc
mov
xor
rolb
cmc
dec
sub
jl
in
outsb
stos
ficoml
jl
sbb
dec
outsl
icebp
repz
or
dec
inc
jg
dec
cmp
inc
cltd
ljmp
pop
mov
inc
dec
push
cmpsl
push
mov
lock
movsl
ret
repnz
inc
xchg
scas
fmull
cmp
dec
jb
cmpsb
leave
loope
mov
dec
mov
arpl
mov
fstpt
pop
scas
dec
dec
dec
pop
and
loop
lret
out
adcb
jp
rcll
pop
mov
in
loope
mov
mov
push
jns
imul
mov
xchg
mov
mov
mov
outsb
jp
fimuls
push
push
mov
movsb
cmp
stos
call
mov
subl
dec
arpl
fiaddl
mov
sub
push
inc
gs
push
movsb
and
nop
in
and
pop
in
dec
dec
xchg
pop
movsb
and
arpl
sbb
icebp
sub
adc
sbb
xchg
inc
pop
outsl
jo
dec
xchg
mov
sbb
je
test
jo
nop
mov
movsb
pop
mov
adc
arpl
shlb
push
push
jp
ret
hlt
adc
cmp
xorl
jne
loope
add
out
ds
rolb
lods
mov
pop
mov
mov
cs
shll
fldt
cmc
xor
xor
push
aad
fidivl
mov
push
pop
pop
lahf
scas
lret
jmp
fcoml
int3
push
test
push
inc
and
or
sub
out
int3
pop
adcl
cli
and
xor
int3
hlt
sbb
xor
js
sub
bound
fcoml
adc
xor
jle
xchg
into
rorb
fldcw
inc
pop
aam
repz
xor
inc
jg
jno
mov
and
or
rolb
leave
mov
js
fstp
ljmp
cmpsb
push
repnz
adc
inc
loope
mov
xor
stos
loop
add
push
mov
mov
test
or
add
and
push
stc
jns
mov
xchg
push
push
leave
adc
dec
mov
add
cmp
jae
ret
ret
repz
mov
movsl
lcall
mov
loopne
sub
jmp
movl
mov
mov
lea
pop
pushf
pushl
pushf
pushl
pushl
ret
lea
ja
shl
call
push
popf
jo
jbe
ds
rolb
inc
pop
cmpb
scas
std
xchg
rorl
lock
mov
int3
cmp
pop
jecxz
idivb
or
adc
dec
mov
cmp
out
mov
mov
adc
nop
xor
aas
inc
xchg
inc
rcll
sahf
shrd
mov
ret
xor
fwait
push
in
cli
mov
insl
jno
xlat
cmc
adc
pop
lds
push
jo
and
out
inc
xchg
mov
push
les
xlat
add
aaa
jae
stos
fistps
mov
mov
mov
inc
xor
call
push
data16
ss
pop
aaa
pop
and
sub
mov
sub
sahf
cmp
pushf
jo
in
mov
jne
call
sub
pushf
sub
repnz
lret
mov
hlt
xchg
mov
jg
dec
lret
sbbb
lods
negb
sbb
cmp
test
ror
adc
mov
mov
mov
test
test
push
and
clc
push
cmc
add
mov
lea
jmp
push
inc
jmp
jmp
pop
xchg
ja
xchg
das
cmp
mov
xlat
jecxz
or
push
fwait
imul
jnp
push
jmp
jmp
mov
loopne
and
jo
out
ss
ljmp
xchg
push
into
test
xor
add
mov
dec
fwait
cmp
das
adc
and
dec
jae
popf
and
outsl
sbb
jns
mov
add
aad
add
push
push
outsb
jp
mov
dec
outsb
jle
mov
mov
repz
adc
jp
out
inc
xlat
jno
mov
mov
pop
pop
addr16
ret
gs
int
inc
ret
jmp
scas
cmpsl
sub
dec
lret
adcl
test
test
es
lods
dec
push
cmpsb
cmpsb
pop
fstp
jp
enter
jnp
stos
adc
jmp
into
xor
add
js
loopne
push
mov
fnsave
mov
mov
leave
inc
aad
clc
add
aaa
xor
dec
pop
and
jecxz
daa
arpl
xchg
ret
ret
negl
inc
push
mov
mov
add
dec
push
je
gs
insl
dec
outsb
outsw
inc
add
leave
jp
pop
dec
fs
cli
cmp
mov
repnz
pop
jbe
cwtl
mov
lods
rcrb
stos
sub
das
sub
punpcklbw
cmp
movsl
fldt
push
mov
mov
and
pop
adc
xchg
mov
pop
mov
jnp
popf
fsincos
lea
je
or
cli
push
push
push
push
jecxz
cmp
in
ss
push
mov
incb
cmp
xorb
adc
inc
outsb
xorb
mov
fistl
sbb
daa
inc
outsl
test
dec
push
cmovl
fisubrs
rol
cltd
or
ja
sahf
enter
dec
mov
push
pop
arpl
jg
fadds
hlt
cmp
lret
jne
cs
loope
hlt
dec
bndstx
clc
cmp
insb
dec
enter
jno
popf
aad
xor
insl
mov
mov
in
push
pop
pusha
pusha
fdiv
push
fisubl
inc
imul
popf
test
mov
aam
in
cmc
pop
sti
jge
test
aam
or
in
sub
push
push
pop
aaa
xorl
lret
lret
fistpl
vandpd
jmp
es
aas
jne
mov
pop
mov
sbb
pusha
icebp
cmp
sbb
and
lcall
push
mov
sub
shr
add
adc
mov
push
pop
addl
sbbl
xchg
ss
mov
fsubrl
mov
je
stos
psubsw
das
xchg
lret
cli
imul
cmpb
loopne,pn
test
pop
leave
pop
daa
fmulp
mov
stos
divb
and
sbb
jo
mov
std
push
push
push
ds
xchg
pop
xchg
sahf
int3
clc
and
push
nop
movsb
shl
or
scas
mov
adc
and
ds
sahf
stos
cmp
je
loopne
cld
or
es
outsb
insb
movsb
aam
mov
add
das
or
ss
ret
mov
push
call
shr
push
push
or
leave
aad
pushf
push
and
fs
fistl
mov
add
sbb
fsubrl
jecxz
int
or
xchg
and
fsubp
dec
jbe
int3
shlb
addr16
test
ret
adc
dec
lock
pop
mov
inc
push
movsl
out
cli
es
mov
push
push
push
mov
scas
jne
dec
pop
ret
in
decl
dec
int
movl
out
in
sbb
cmpsb
loop
fsts
sar
push
test
aas
jae
shll
add
in
jl
jmp
jge
jecxz
mov
mov
cmpb
mov
loopne
xchg
or
mov
mov
dec
jns
mov
mov
cmp
fwait
fwait
mov
sti
add
sub
mov
sbb
test
xchg
in
test
mov
lods
xor
sbb
je
pop
pop
into
pop
in
add
mov
push
and
inc
je
push
insl
and
xchg
jmp
jle
mov
pushf
stos
mov
jecxz
rcl
pop
pop
mov
lea
notl
popa
repz
outsl
dec
push
cs
sbb
push
outsb
insl
dec
xor
les
add
pop
mov
mov
jno
repz
aam
jp
pop
cltd
xor
dec
adc
xchg
ret
es
push
bound
mov
rclb
into
fadds
and
cs
jl
and
dec
pop
jo
andb
test
mov
aad
hlt
jbe
cltd
mov
cmpsb
pushf
stc
xchg
push
in
outsb
aad
mov
and
push
ja
mov
popf
pop
xchg
imul
mov
jb
inc
inc
leave
int
jp
cwtl
cltd
mov
dec
imul
mov
jp
rcr
cli
mov
lods
fdivrl
rcl
ja
xlat
or
add
add
daa
test
pop
add
iret
sti
das
ljmp
adc
sarb
aaa
mov
adc
fsubp
jl
cs
ror
jg
loope
sbb
xor
hlt
cmp
push
lcall
popf
mov
dec
vmovdqa
inc
es
or
push
push
jno
xchg
mov
cwtl
and
out
sbb
inc
push
jnp
fwait
lahf
mov
lods
dec
rcll
into
add
inc
lock
cmpsl
xor
cmp
popa
jg
mov
call
into
push
movsl
jmp
push
add
jae
push
xchg
rorb
inc
xchg
lcall
cli
add
insl
movsl
xchg
mov
xchg
scas
int
jmp
mov
jg
dec
sarb
cmpsl
add
in
or
cmpsl
movsb
fidivrs
pop
xchg
arpl
pop
cmp
cmpsl
out
test
ds
fsub
mov
jbe
mov
add
mov
ja
test
iret
adc
add
loope
and
mov
mov
rolb
scas
out
mov
sahf
mov
mov
add
xor
pop
mov
fsubrs
mov
mov
jecxz
js
push
pop
pop
pusha
fs
mov
mov
leave
and
shrl
adc
adc
mov
stos
addb
push
out
xchg
outsb
lods
mov
inc
adcl
les
das
dec
push
andl
xor
dec
mov
idivb
mov
fwait
sbb
bound
mov
stos
lcall
mov
bt
cmc
call
dec
mov
push
push
scas
jp
lods
mov
sahf
mov
lock
and
je
divb
in
add
into
mov
jg
fidivs
orb
fdivrl
adc
fsub
jecxz
pop
or
bound
shlb
ljmp
sub
in
sub
adc
in
cmp
std
std
out
gs
add
bound
mov
xchg
sub
nopl
jbe
leave
testl
sbb
cmp
dec
push
lock
xchg
mov
stos
inc
lret
repz
xchg
stc
test
insl
out
adc
jae
sbbl
sub
inc
and
hlt
and
call
mov
dec
pushf
inc
add
push
hlt
sub
cmp
stc
add
push
popa
pop
push
mov
stc
cmp
mov
div
inc
push
or
dec
fimuls
add
mov
stos
shl
cli
cli
push
es
xchg
test
callw
test
mov
arpl
or
cmp
mov
mov
sbb
push
adc
aas
sbb
push
inc
dec
mov
cmpl
xor
jne
jnp
cs
pop
rolb
hlt
dec
outsb
cmpsl
adc
xor
cs
mov
out
orb
dec
insl
sbb
adc
loope
jne
jp
push
xor
cs
push
lahf
mov
pusha
mov
fstl
adc
movsl
loope
and
test
fiaddl
pop
lock
aam
divb
cs
outsb
mov
sbb
jp
jg
dec
xchg
popf
cmpl
test
mov
push
out
ljmp
xor
pop
pop
loope
dec
fsubl
int3
aaa
int
push
mov
jne
inc
adc
sub
jp
adc
test
cmpsb
cld
and
inc
pop
sub
cwtl
sub
jae
fisubs
loopne
jnp
repnz
xor
fadds
and
jl
movsb
fsubr
hlt
xor
sub
pop
sbb
mov
adcl
out
repz
stc
add
sbb
sub
fisubrs
pop
xchg
mov
pop
mov
out
jg
cmp
mov
lret
push
cld
or
xor
imul
loop,pt
imul
and
fldl
xor
test
lods
fldcw
push
jnp
roll
aaa
xchg
scas
or
popa
mov
fmuls
and
rdmsr
pop
lds
inc
pop
cmp
cmp
xchg
leave
mov
mov
icebp
sbb
push
sub
mov
pop
in
sbb
adc
sub
xchg
addr16
mov
ds
mov
mov
outsl
lahf
jl
push
movsb
fdivr
push
push
cmp
cmp
sub
add
movsl
test
out
ret
cli
sub
jbe
mov
xor
mov
ror
ds
or
jo
nop
nop
mov
mov
xchg
sbb
add
stos
and
call
dec
xchg
inc
jp
mov
frndint
int
jp
cmp
push
push
add
xor
adc
push
jl
test
sahf
sbb
or
pusha
fisubrl
cwtl
push
and
cmpl
xor
or
insl
jmp
push
mov
push
xchg
cmp
adc
mov
movsb
cld
push
shl
adc
and
loop
test
dec
jo
ja
stos
mov
pop
cmp
mov
fisttps
aas
mov
xchg
and
jmp
xor
movsb
mov
movsl
mov
pop
imul
bound
sub
in
es
sub
mov
and
jmp
lds
sbb
cmpsl
cmp
cmc
movsl
jmp
push
sub
movl
xchg
and
xchg
cs
pop
popa
pop
pop
push
cmp
mov
jle
cmp
fstp
xor
xchg
inc
pop
cmp
movsl
dec
imul
mov
inc
mov
sbb
data16
xor
lcall
jmp
pusha
enter
ficomps
xor
jecxz
sbb
mov
insl
sub
out
lret
mov
and
lds
mov
inc
mov
mov
xchg
fldt
flds
pop
clc
cmpsb
sub
aas
jnp
add
aaa
lea
push
clc
cmp
inc
inc
andb
enter
jle
mov
mov
js
orl
push
lahf
xor
jp
xor
adc
paddusw
cs
cltd
and
inc
fsub
sub
test
xor
imul
lret
shrd
cmc
mov
call
icebp
pop
xchg
cwtl
test
pusha
jp
sahf
pushf
cmpsb
loopne
or
dec
jle
ret
sbb
mov
icebp
inc
push
xchg
inc
adc
dec
jecxz
aam
mov
mov
in
cmc
push
dec
mov
aam
mov
push
sub
cmpb
js
mov
sti
jge
lea
stos
sbb
std
adc
pusha
gs
cmp
push
in
xor
mov
inc
pop
xchg
mov
adc
xor
out
and
lds
cmpsb
cmp
xchg
lods
into
add
sbb
mov
jns
out
cmp
aam
inc
adc
shl
and
cmp
cmp
push
test
lods
movsl
int
mov
pop
mov
aad
lods
push
repnz
xlat
dec
int3
and
shr
in
xchg
test
xchg
or
daa
xchg
adc
inc
jg
lds
jno
lahf
xor
cltd
popf
sbb
lock
imul
sti
push
sbb
dec
aam
fsub
inc
sub
cmp
mov
adcl
xchg
adc
inc
and
movb
call
mov
imul
cmp
jecxz
adc
lahf
aad
and
mov
negl
es
dec
into
push
mov
popa
mov
test
ret
mov
out
jno
xlat
push
push
and
lahf
cmpsb
cwtl
nop
and
sbb
loopne
shll
jo
xchg
add
and
stc
aam
repz
push
enter
xchg
mov
gs
push
push
jne
mov
xchg
int3
dec
shrl
std
sti
das
outsb
add
cwtl
mov
xchg
scas
aad
adc
pop
jg
fucomp
lret
bound
inc
cmp
in
and
or
sbb
in
mov
into
jg
adc
sub
cmp
setno
adc
repz
leave
xor
mov
shlb
sbb
pushf
jmp
es
jno
sub
mov
jge
int
adc
inc
jge
mov
mov
xchg
mov
pop
cmp
int
gs
mov
dec
push
xchg
xor
sub
mov
jp
adc
sub
testb
testb
push
pop
pushf
pushf
sub
cwtl
mov
jo
sti
rorb
imul
repz
int3
dec
sub
and
cmp
xchg
out
xlat
jbe
pop
mov
push
stos
stos
fists
ror
jmp
sbbl
add
aas
or
scas
push
pop
insb
mov
or
mov
xor
stc
call
int
and
add
inc
push
jl
test
inc
jp
int
clc
jno
jnp
push
ja
fsubl
fsubrl
dec
sahf
push
fs
xor
push
mov
or
mov
jge
shlb
pop
in
aad
sbb
mov
inc
vpsubw
sub
mov
cmc
div
xor
push
jae
mov
incl
and
mov
xchg
inc
lret
add
adc
bound
ret
dec
pop
subb
cmp
xor
mov
push
fcoms
push
mov
sbb
sbb
jo
clc
jp
jbe
xchg
es
mov
inc
rcrl
lods
adc
int3
mov
push
xchg
hlt
dec
jb
lds
stc
or
inc
insl
lahf
mov
jmp
daa
aas
outsl
ja
stos
scas
lret
rorl
mov
xor
lods
insb
jp
mov
sbb
pop
pop
mov
sub
xor
xlat
scas
into
enter
jne
arpl
xchg
jmp
aam
sbb
jg
xchg
insl
add
jle
ljmp
push
enter
out
jnp
dec
test
cwtl
mov
pushl
pop
test
add
dec
push
pop
xor
std
daa
pop
xchg
inc
jne
jg
adc
or
dec
pop
mov
lret
rcrb
jl
dec
cli
clc
movsb
dec
ds
or
xchg
inc
sahf
stos
mov
or
scas
sub
aas
inc
pop
mov
cmc
sub
ret
push
insl
xor
mov
repz
adc
sbb
push
jge
mov
test
mov
pop
pop
orb
sbb
xlat
in
pop
or
cmp
out
repz
ss
out
sub
mov
add
addl
and
xchg
movsl
adc
mov
xchg
and
add
or
inc
or
adc
and
repnz
xor
loop
adc
jg
jae
scas
ret
jecxz
pop
mov
stc
mov
dec
sbb
push
lret
pop
cwtl
inc
movsb
xchg
and
outsl
ja
filds
pop
adc
push
jg
mov
xchg
push
jne
push
outsb
cwtl
mov
int
lds
xabort
sbb
xor
xor
sahf
movsb
into
cli
adc
fcomps
sarb
sahf
ret
std
cmp
int
out
sbb
js
inc
dec
xchg
mov
jge
jge,pt
add
and
adc
enter
dec
mov
test
add
or
jp
mov
mov
scas
dec
dec
dec
push
push
je
rorb
or
and
mov
add
push
xchg
pop
sub
sbb
xchg
mov
mov
sahf
movb
cmpsl
mov
fadds
popf
rcl
decl
prefetch
jg
scas
rolb
sub
fs
sub
popf
das
das
push
insb
xchg
and
add
inc
idivl
inc
jns
mov
jl
mov
cli
add
inc
test
outsb
adc
imul
cmp
xor
jne
loopne
inc
lret
dec
fcoml
inc
push
jbe
ljmp
scas
loop
sub
out
xor
lods
sbb
jecxz
xor
dec
push
mov
cmp
push
sub
cmc
mov
cmc
and
cmpb
fadds
mov
movsb
into
or
sti
jle
xchg
push
push
inc
notb
bound
popa
outsl
ja
fucomi
lcall
sub
push
imul
mov
cmp
push
sub
or
jecxz
pmaxsw
popa
add
push
pusha
mov
lahf
flds
mov
sarl
test
cmp
addb
push
sbb
inc
andl
dec
lahf
and
imul
stos
sub
icebp
jo
andb
pop
gs
jns
clc
ret
sbb
rcrb
dec
popf
icebp
fs
and
jmp
ja
lea
lods
dec
jle
rcrb
call
negb
xor
pusha
cwtl
cwtl
test
hlt
sbb
mov
lahf
pop
mov
incl
dec
cmp
insl
jmp
pop
xor
out
pop
sub
mov
or
into
bound
rorb
movsl
aaa
and
cs
or
xlat
pop
scas
out
adc
xchg
cmpsl
lods
add
int
mov
or
sahf
cmc
out
cwtl
test
outsb
and
cmp
inc
loop
jo
out
inc
dec
insb
les
push
push
add
jae
push
sbb
sub
rolb
pusha
scas
gs
arpl
outsb
sti
xor
inc
jbe
adc
fcoml
std
in
xchg
xchg
ret
sbb
push
jae
xlat
cli
dec
ljmp
xchg
es
arpl
lds
repnz
in
dec
call
into
faddl
or
dec
mov
ret
cmp
jge
fwait
add
jnp
or
mulb
dec
ds
cld
jnp
cmp
mov
pushf
mov
lods
stos
mov
imul
adc
inc
arpl
mov
ljmp
sbb
mov
xor
pushf
rolb
mov
xor
pop
in
push
cmpb
fstp
jmp
pop
arpl
mov
mov
pop
cmp
or
ds
mov
xor
stc
sub
shl
and
cmp
jecxz
xor
cmc
std
adc
mov
popf
mov
popf
adc
or
mov
push
lods
rcrl
addb
cmp
test
mov
mov
dec
pop
cltd
shl
add
push
and
fwait
js
xor
lods
lea
dec
add
cs
pusha
rcll
pop
repnz
scas
in
sahf
mov
lret
enter
pop
adc
int3
dec
jl
xorb
xor
push
cld
dec
fcompl
stos
xlat
add
aaa
aas
pop
arpl
mov
sub
add
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
fwait
aad
pop
add
xchg
mov
arpl
xchg
cmpsl
lds
or
enter
cmp
in
cmp
stos
call
cmp
jmp
jne
push
test
mov
xor
xchg
cmp
mov
jo
outsb
lret
int3
dec
inc
aad
das
outsb
dec
insb
xchg
ret
dec
mov
repnz
pop
divl
loop
fisubrl
rol
dec
lock
inc
xor
in
clc
and
lods
mov
dec
pop
out
in
sbb
insl
xchg
leave
in
inc
inc
popa
xchg
xchg
mov
lcall
push
dec
outsl
je
data16
arpl
inc
add
shl
push
add
in
mov
mov
in
sti
sbb
gs
mov
xor
es
adc
ljmp
stos
sub
lds
bound
in
cmpsb
dec
or
xor
push
insl
jb
int3
jbe
xchg
adc
pop
popa
mov
fisubrl
xlat
pop
ror
push
pop
xchg
mov
ss
adc
and
pusha
mov
add
cwtl
xlat
sti
inc
fisttpl
cmp
outsl
adc
aaa
push
pop
inc
or
sarl
iret
in
sbb
xor
mov
pop
mov
fwait
xor
xchg
gs
mov
dec
pop
sbbl
lods
loop
jbe
add
jb
pusha
jle
shl
incb
push
dec
pop
outsb
subb
iret
lcall
lret
nop
or
mov
out
inc
mov
fwait
jle
repnz
push
in
outsl
movsl
mov
jmp
and
out
lret
in
xchg
mov
fimuls
push
inc
pop
js
cwtl
and
push
sar
push
sub
xchg
pop
dec
movsl
mov
incl
gs
mov
popa
jecxz
adc
jge
aam
pop
notb
pop
jl
pop
adc
fsubrl
std
sub
sar
sub
pop
mov
inc
fs
add
jge
jmp
add
mov
xor
xor
cmc
cmp
adc
sbb
mov
cltd
cli
sahf
inc
sbb
dec
jo
cmp
std
incb
pop
pop
out
lret
and
fistl
xor
push
lods
aam
movups
dec
add
jge
mov
and
nop
mov
mov
cmp
lock
into
ret
aas
jge
xlat
pop
imul
xor
inc
and
mov
push
cmp
mov
mov
cwtl
jg
push
cmp
push
pusha
pushf
lea
ja
bt
stc
imul
stc
cmc
cmc
add
pushf
movl
pushf
mov
lea
jmp
lea
jae
stc
call
call
cmc
cltd
movl
xchg
mov
push
pop
jge
mov
mov
push
xorl
jbe
testb
xchg
sub
mov
inc
sbb
push
hlt
mov
adc
pop
popa
bound
xor
imul
pusha
adc
sbb
fnstcw
and
popf
pop
scas
cmp
ss
out
push
std
add
dec
xchg
cltd
sbb
xchg
popf
mov
cltd
and
lea
jae
call
mov
add
es
insl
andb
mov
dec
jb
mov
in
lods
aas
addr16
cmp
ss
mov
imul
test
je
mov
push
inc
lret
outsl
lock
sub
and
scas
fisubs
in
cmpsb
cmp
inc
jnp
inc
ret
mov
sarl
cmpsb
movsb
mov
repnz
pop
inc
into
fimull
cmpsb
mov
aaa
dec
sti
xor
loop
and
outsb
sahf
mov
inc
jb
sub
pop
je
ret
ja
fwait
sub
out
std
pop
and
cltd
leave
mov
popf
repz
pop
aad
out
mov
cltd
bound
cltd
js
inc
sbb
pop
popa
pop
lahf
pop
pop
in
aas
std
cmp
dec
into
and
pop
pop
pusha
xchg
jne
orl
inc
jo
mov
cmp
cmp
addr16
fists
daa
sub
stos
mov
mov
xchg
inc
loop,pt
ds
cli
push
xor
jmp
add
xchg
mov
jmp
and
hlt
int3
push
sbb
and
or
push
iret
xchg
leave
sub
idivb
divb
fcoml
je
fcmovb
clc
aaa
lret
decl
dec
pop
je
fcompl
lret
subl
repnz
jmp
or
xchg
dec
std
mov
inc
lods
push
push
imul
popf
aad
add
lret
mov
xchg
decb
movsb
stos
lods
fdivr
or
push
jnp
cltd
sub
jmp
xchg
or
int
mov
inc
lds
dec
int
out
add
xor
or
mov
mov
xchg
sub
lea
dec
jle
and
adcb
stos
insb
loope
cmp
dec
addl
cs
pop
xor
movsb
sbb
pop
inc
mov
cs
cmp
push
pop
mov
mov
xchg
sahf
int3
fcompl
in
pop
js
mov
dec
push
data16
lods
enter
adc
jge
ret
push
jg
ret
roll
inc
ds
ljmp
push
jmp
add
lods
cmp
shl
or
cmp
stos
stos
jecxz
sbb
ja
sub
cmc
add
pop
sbb
ret
pop
out
sbb
idiv
nopl
sbb
xor
movsb
jl
jl
push
popa
or
aam
mov
jns
loopne
and
jno
or
rclb
mov
pop
dec
ja
mov
sbb
in
pop
push
inc
xor
pop
pop
jb
add
mov
into
repnz
push
mov
push
push
mov
rolb
inc
dec
dec
xor
cs
insb
add
add
mov
and
gs
sti
fldt
iret
into
pop
lea
jmp
xchg
pushl
sbb
jns
stc
daa
pop
pop
jno
leave
repz
sub
mov
pop
xchg
mov
idivl
xchg
loop
fstpl
cli
pushf
jo
xor
dec
lret
push
mov
fimuls
push
jns
push
pop
and
dec
cltd
test
pop
cmp
cmp
jbe
cwtl
mov
das
pop
adc
xchg
ds
clc
sbb
addr16
pop
and
cmp
mov
mov
int3
add
pop
pusha
js
call
insb
movsb
mov
test
mov
pusha
pushf
push
lea
jmp
loope
jnp
test
or
cltd
shl
add
mov
push
push
mov
cmp
cmp
call
aam
cmovae
sbb
ja
push
ja
ret
pop
jecxz
mov
loop
sbb
scas
mov
fwait
das
test
push
ret
iret
popa
mov
lock
xor
outsl
jnp
and
pop
xor
sbb
movsl
rol
or
mov
sbb
push
mov
test
sbb
fsubr
jne
sub
xlat
fsincos
sbb
dec
push
or
push
cli
push
aam
mov
cmp
pop
mov
nop
add
jl
mov
inc
fldcw
adc
daa
or
mov
cltd
mov
adc
sbb
mov
xor
rorb
into
out
stos
cmp
roll
lret
xlat
push
orb
addl
lods
call
jmp
outsl
xchg
lret
out
sbb
jg
xlat
jmp
mov
orb
adc
mov
push
shr
pop
dec
jae
fwait
shr
or
and
stos
int
jnp
mov
aam
and
jbe
aas
xchg
dec
pop
arpl
xchg
sbb
out
arpl
pop
push
call
mov
mov
lret
out
ret
lcall
inc
fmuls
pushl
xor
mov
fists
cmp
mov
sub
xchg
fistl
add
sbb
sub
jae
mov
fucomip
and
mov
mov
ss
in
fbld
inc
cs
push
dec
ss
mov
add
mov
pop
jbe
lods
scas
into
imul
xchg
jns
ret
sbb
add
mov
cmpsb
sub
or
xor
or
ljmp
xlat
add
dec
addr16
rcr
out
jns
xor
in
add
mov
stos
cmc
xchg
adc
mov
adc
aas
imul
loope
test
mov
or
aam
clc
sub
dec
int
lahf
fiadds
mov
call
jmp
sub
jo
cmp
and
push
cmp
pop
mov
cmpsl
sub
adc
cmp
mov
pop
xchg
test
lock
and
pushf
test
loopne
xor
sub
pushl
pushf
movl
movw
pushl
lea
jmp
popf
mov
jo
adc
adc
cmp
pop
xchg
pushf
mov
out
mov
sti
jge
imul
mov
loope
jns
pop
js
xchg
adc
fdivrs
adc
adc
mov
rcr
call
movsb
xor
xchg
and
aas
mov
push
push
sbb
dec
jb
mov
mov
cmpb
dec
cmpsb
in
ja
lea
and
pop
popf
movl
mov
loopne
cmc
xorl
dec
lret
cltd
aad
push
in
ljmp
xor
pop
xchg
xchg
pop
mov
push
outsl
mov
or
scas
ds
sbb
jo
push
and
mov
inc
in
clc
sbb
lret
into
insb
enter
leave
pop
xchg
mov
pushf
int3
or
jns
sarb
in
cmp
lds
mull
or
add
and
call
sbb
js
movsb
mov
or
sub
mov
xorl
pop
ja
lret
dec
jecxz
adc
xor
rorl
mov
aam
jl
imul
dec
aad
push
jg
and
out
and
mov
outsb
and
xchg
call
sbb
pop
pop
je
in
sbb
pop
pop
mov
orl
add
sarl
mov
push
cmp
xchg
mov
mov
sbb
dec
imul
imul
pop
push
rcl
stc
pop
adc
adcb
popf
fbstp
lret
or
ficoml
sub
js
sub
pop
jnp
xor
mov
xchg
mov
mov
push
jge
mov
sub
scas
pop
cmp
inc
mov
jl
mov
sub
outsb
jl
lcall
loopne
cld
ss
div
decb
push
inc
imul
xlat
incl
negb
inc
aas
cmp
push
add
sbb
push
call
xchg
test
cmp
adc
sbb
fs
aaa
insl
mov
inc
arpl
mov
adcl
sub
xor
cmp
cmp
call
mov
fimull
sbb
inc
dec
jo
cwtl
mov
repnz
sub
cwtl
rorb
ret
ror
xchg
rcrb
xchg
cmp
adc
fidivrl
call
sub
insb
repz
insb
subb
out
jo
incb
cmpsb
ror
dec
mov
insl
out
and
mov
jbe
mov
mov
pop
pop
jg
mov
idiv
pop
das
mov
mov
clc
cs
inc
sbb
mull
and
jne
fstl
sub
jne
movsb
lods
and
adc
stos
std
push
or
adc
in
xchg
imul
pop
arpl
loope
xor
arpl
push
jecxz
cli
pop
add
sahf
sbb
inc
pop
loopne
fwait
jge
cmpsb
adc
clc
add
inc
fcoms
push
push
jae
mov
mov
add
cmp
mov
xor
cs
mov
or
cmp
mov
jns
lea
jne
jmp
movb
test
cmpb
jmp
inc
scas
leave
push
aam
jns
mov
cmp
jo
mov
pop
adc
lds
stos
leave
in
lds
dec
insb
lods
lret
xchg
in
shlb
push
ret
inc
ljmp
lret
and
rcrb
dec
shrb
lods
add
bound
cmp
iret
add
sahf
push
mov
push
cld
inc
xor
mov
enter
fildll
ds
dec
repnz
lods
in
inc
pop
popa
addl
cmc
mov
pop
arpl
inc
jecxz
jnp
cmpsl
leave
out
and
ja
out
sarb
mov
cs
mov
mov
or
cli
es
mul
lds
push
fldcw
imul
or
in
push
in
sbb
dec
dec
rclb
test
pop
test
imull
fistps
jecxz
imul
lock
adc
mov
nop
adc
mov
pusha
pushf
mov
push
ss
sbb
xor
mov
pop
subb
mov
sbb
stos
daa
xchg
and
xchg
popf
mov
jecxz
pop
dec
jg
shr
test
out
das
test
sbb
dec
sub
sub
mov
or
fwait
adc
out
dec
push
stos
push
push
mov
cmp
adc
mov
xlat
out
sahf
mov
lahf
cmc
stc
cmp
sbb
sbb
add
adc
xchg
jns
sub
test
mov
or
push
subl
dec
ja
sub
lods
cmc
jmp
pushl
push
lea
je
call
andb
jo
loope
js
lcall
xchg
mov
ss
pop
pop
mov
mov
lock
cwtl
sbb
xor
xor
loope
outsl
div
xor
mov
lods
aam
call
jb
pop
es
jg
mov
fistpl
jge
insl
and
fscale
jl
cmp
xchg
pop
xchg
lahf
xlat
pop
mov
in
das
mov
sbb
out
push
push
movl
call
sahf
ret
rol
int
loopne
repz
xchg
stos
mov
jmp
jae
jecxz
jmp
jmp
mov
test
imul
mov
frstor
pop
cmpsl
mov
mov
mov
mov
xchg
sti
cltd
jno
ja
pop
add
fcomps
js
shl
jp
mov
mov
mov
sbb
popf
or
aad
out
add
insl
js
es
gs
les
mov
mov
js
mov
sub
xor
call
pop
jl
int3
ljmp
jp
xchg
in
test
sub
mov
xchg
fwait
mov
push
push
popl
ljmp
pop
and
jnp
cs
loopne
dec
add
into
repnz
outsb
repz
xlat
jne
pop
fsubs
lahf
leave
dec
adcl
sub
sub
in
outsl
cmpsl
jecxz
sti
pop
inc
ja
ret
ret
iret
out
mov
mov
aaa
leave
sub
jg
xchg
aam
testb
cmp
xchg
cmp
adcl
push
or
pop
xchg
xchg
cmp
sahf
scas
imul
xchg
xchg
sahf
fiadds
add
pcmpgtw
mov
adc
hlt
xchg
nop
add
sub
mov
adc
mov
out
sub
mov
mov
daa
xor
jmp
repnz
push
jb
mov
in
andb
outsl
jge
dec
lret
mov
mov
fadd
or
jmp
ret
dec
jne
arpl
es
sub
stc
fwait
pop
cmp
out
sub
fsubrs
push
cmp
outsb
mov
and
mov
pop
lea
mov
mov
adc
movsb
mov
or
and
fs
mov
mov
xor
mov
add
add
add
add
xor
add
add
add
add
addb
add
mov
add
add
cmp
add
add
add
sub
add
add
push
and
add
add
stos
sbb
add
sbb
add
add
and
add
add
bound
add
imul
add
add
sub
add
add
mov
add
add
and
add
add
jmp
add
add
sub
add
lods
jo
add
and
pop
xor
and
inc
jno
add
add
add
mov
rol
test
pusha
push
sub
bt
xor
cmc
call
mov
jge
mov
lret
decb
and
jl
lods
mov
loope
loop
lahf
jmp
mov
xchg
in
and
test
xchg
fldt
mov
imul
push
jecxz
or
mov
stc
jnp
add
inc
test
mov
orb
mov
dec
outsb
lods
jle
shlb
push
inc
pop
sbb
and
aas
imul
ret
mov
cli
sub
lcall
sub
mov
sub
sub
push
pop
fidivl
pushf
cmpsb
mov
jle
ret
incb
out
bsf
sti
sbb
mov
inc
arpl
jle
fdecstp
data16
addr16
out
sub
mov
daa
mov
xor
inc
push
xchg
out
int3
test
adc
std
bound
jb
lock
mov
rep
adc
jmp
outsb
cmc
sar
jge
aam
fsubr
adc
xchg
in
pop
aam
push
push
jnp
ret
out
daa
aas
outsl
jg
fwait
fwait
ret
out
mov
jbe
inc
fadds
loopne
mov
mov
inc
pop
test
add
xor
adc
mov
nop
adc
inc
jae
out
lds
sti
add
mov
mov
adc
leave
in
repnz
fadds
jae
cmpsl
push
cli
or
and
mov
out
daa
das
addr16
cmpsl
mov
jae
sub
rolb
pop
arpl
incl
lret
push
xlat
add
sub
pop
ret
fldl
add
push
cltd
jmp
ret
push
mov
sub
add
into
xchg
imul
jbe
sbb
iret
shlb
inc
inc
jns
in
cmp
out
jo
inc
xchg
or
js
decb
cmp
mov
mov
jns
das
arpl
subl
leave
push
insb
mov
push
push
sahf
sahf
push
mov
ja
xor
mov
movsbw
movzbw
mov
call
sarb
cmp
adc
dec
ficompl
repnz
push
dec
pop
test
lret
lret
out
jne
add
pop
sub
jle
imul
mov
cwtl
call
or
aas
xchg
pop
test
cmpsl
cmp
or
or
mov
inc
enter
mov
and
push
loop
sub
add
sub
fisubl
push
jnp
ret
mull
arpl
or
pop
mov
ja
add
dec
xchg
inc
enter
inc
insl
imul
cmp
mov
ja
dec
push
inc
in
lcall
mov
sub
addb
nop
adc
push
mov
mov
sti
pop
pop
pop
inc
jnp
xlat
call
mov
je
aas
sar
gs
movsl
aad
sub
mov
mov
dec
test
lret
dec
xor
push
push
pusha
adc
sbb
pop
fucomi
push
inc
jb
cvtps2pd
add
mov
fsubrs
sub
cmp
jl
push
in
outsb
adc
outsl
lods
cs
test
cmpsb
or
mov
mov
pop
and
cs
fdivr
or
or
cmpsb
inc
cmp
sub
clc
and
ret
adc
sbb
mov
enter
sub
jl
mov
lock
je
fidivs
jl
nop
int3
or
dec
cvttps2pi
cli
adc
inc
inc
push
xor
jb
leave
in
mov
xchg
pop
lods
imul
jb
adc
mov
dec
ret
pushf
dec
rclb
inc
cmc
test
imul
popa
pop
pop
icebp
dec
fdivl
lods
adc
in
push
pushf
pop
mov
add
rclb
pop
cltd
pop
test
dec
xchg
jne
pop
mov
mov
cmpsb
dec
cwtl
sbb
jp
cmpsl
xchg
ficompl
lea
sti
xor
pusha
pop
out
and
stos
stos
iret
add
push
pop
xchg
mov
jne
jns
cmp
cmp
pusha
jmp
add
dec
outsl
popa
fs
imul
add
xchg
out
call
inc
stos
mov
add
add
or
mov
cmp
ljmp
push
dec
mov
pop
pop
adc
gs
add
pop
cmp
pop
cs
pop
adc
clc
sub
aam
sub
scas
mov
add
push
jb
pop
sbb
ss
out
pop
out
addr16
jecxz
inc
sub
and
xchg
rcrl
xchg
xchg
dec
dec
daa
pop
orb
dec
inc
push
xchg
and
fiadds
sub
mov
mov
jb
dec
lret
into
ss
jle
sub
out
adc
pop
imul
adc
jnp
ficoml
jl
ror
mov
dec
jecxz
sub
outsl
pop
repz
fidivrl
jl
pop
cltd
add
sbb
mov
fmuls
add
add
jo
pop
jne
bnd
mov
int3
ret
xchg
jno
cmp
lcall
stc
mov
inc
push
outsb
mov
sub
sub
enter
outsb
insb
mov
push
es
clc
decb
pusha
bound
ja
lcall
sub
sbb
lahf
mov
ficomps
fidivrl
icebp
shlb
mov
pop
cmp
mov
testb
mov
push
imul
mov
xchg
ret
xchg
mov
sahf
scas
mov
inc
jne
fildll
push
push
out
inc
push
jb
leave
inc
fisubs
xchg
stos
xor
ss
sub
cltd
es
push
insb
andb
pusha
pushf
mov
sub
nop
adc
cs
jp
or
jmp
int
or
outsl
lea
call
into
into
ss
dec
mov
ret
mov
or
out
mov
je
push
sbb
xchg
sub
xor
js
or
outsl
cmp
nop
or
js
push
nop
ss
shrl
loope
repz
out
push
das
pop
mov
fisttps
dec
cmp
sbb
stos
sahf
cmp
icebp
jle
jle
or
xor
jg
incl
pop
and
ja
scas
mov
sub
add
xor
shr
mov
pushf
pushl
jmp
lods
lock
pop
pop
xor
in
aaa
add
es
int
xor
nop
dec
cvttps2pi
jb
or
mov
add
popf
insb
loope
hlt
push
and
jle
pop
insb
push
dec
test
lock
mov
or
push
int3
sub
pop
shrb
cmp
sbb
push
aad
xlat
mov
mov
daa
mov
mov
ss
nop
dec
dec
aad
push
mov
inc
xor
int3
fiadds
stc
ljmp
pop
mov
mov
pusha
mov
jmp
popa
cmp
fcoml
cmp
xchg
rcrl
mov
prefetchw
add
decl
mov
nop
out
or
mov
jns
pop
out
es
into
mov
rclb
adc
dec
sbb
out
and
push
arpl
enter
js
add
jmp
mov
and
or
pop
in
jnp
sbb
mov
mov
rcl
xchg
sahf
push
xchg
push
cmpsb
sub
cmp
add
std
mov
in
cld
jg
and
shll
shrb
jb
or
sbb
sbb
xchg
sarb
shl
pop
jae
mov
push
out
stc
adc
bound
pop
js
mov
or
adc
xor
ja
mov
sti
and
pop
xchg
mov
push
mov
nop
enter
shlb
adc
dec
jb
orb
es
dec
cmpsl
inc
out
jmp
xchg
mov
dec
cmp
jb,pt
lret
mov
push
push
cli
push
imul
jge
push
sar
imul
push
cli
or
sbb
clc
call
inc
jge
xchg
int
xchg
test
cmpsl
outsb
int
adc
bound
ret
pop
dec
push
adcl
paddusb
js
mov
xor
sub
mov
adc
pop
sub
jae
dec
fcompl
mov
shl
adc
push
rcrl
pop
sarl
idivl
in
mov
push
dec
fwait
cmp
mov
cmc
xchg
push
push
jns
xchg
lods
in
pop
sbb
dec
int3
dec
cs
push
popf
or
adc
rcl
fsubp
mov
jle
mov
fwait
cmpsl
cmp
and
ret
flds
sbb
and
push
out
loop
and
mov
aad
push
jp
push
sbb
lods
pop
int3
dec
mov
fs
push
lods
outsb
mov
fildl
dec
dec
mov
sub
cmpb
mov
pop
xchg
mov
inc
dec
insb
jo
cmp
mov
test
hlt
hlt
movsb
mov
jnp
sbb
in
xchg
sub
mov
sub
dec
sarb
sahf
test
cs
popa
jecxz
call
cmp
lea
sbb
fcoms
mov
adcb
pop
jl
xor
int
in
in
fcmovnu
mov
pushf
aam
add
sub
or
sub
shr
ljmp
decb
stc
inc
inc
pop
add
aas
ja
add
sub
sbb
pushf
mov
dec
ffreep
or
push
ja
jg
scas
out
sbb
outsl
mov
jg
bnd
cmpsb
cli
int
xchg
cmpsb
ret
mov
ds
outsb
mov
filds
sub
mov
test
jnp
pop
jge
mov
adc
cmp
inc
imul
icebp
adc
cltd
pop
fcmovnu
fistpl
je,pn
aam
xor
mov
xchg
mov
call
jmp
jb
je
sbb
nop
sub
dec
fcompl
test
lea
dec
dec
outsb
xchg
mov
xor
xchg
sub
sub
push
dec
inc
dec
xor
cs
insb
add
int3
out
add
imul
cmp
push
stos
enter
push
subb
sahf
ret
push
movsl
aaa
pop
lea
jmp
add
dec
lock
frstpm(287
pop
into
jbe
insl
int
xchg
insb
mov
cmp
mov
daa
lds
and
repz
test
jo
sbb
icebp
cmp
xorb
dec
jp
xchg
rorb
mov
jl
adc
popf
add
or
add
bsf
and
mov
cmp
pushf
add
test
mov
clc
clc
test
pusha
call
mov
lret
sbb
xor
push
push
jb
xchg
shr
sbb
inc
dec
pop
dec
pop
jle
sbb
fs
test
push
pop
pop
add
pop
cli
pop
xor
inc
shll
cmc
xchg
movsb
je
inc
pushf
xchg
push
insb
js
movntps
sbb
loop
jl,pn
fldt
jno
push
call
xor
call
mov
mov
mov
jle
outsb
jp
sub
cmp
sub
mov
push
cmp
sub
bnd
test
fdivr
cmpsb
xor
das
dec
jae
xorl
xor
push
mov
lret
adc
adc
test
std
sub
stos
sbb
jle
fstps
shrl
mov
xor
pop
jle
xchg
or
gs
sub
push
or
cli
cmp
scas
inc
loopne
popf
add
sub
xor
test
adc
xchg
orb
push
dec
xchg
xchg
cltd
ljmp
mov
or
cmp
mov
sbb
push
clc
out
adc
jb
int
dec
fmull
sbb
outsb
jo
mov
sbb
inc
mov
jae
pusha
js
push
outsl
js
imul
mov
test
ret
xorl
xlat
fistpl
cld
cmp
dec
jo
xor
inc
cmp
subb
add
adc
push
cltd
mov
xchg
mov
lock
cmp
pop
mov
aas
inc
inc
stc
adc
leave
push
sub
icebp
jmp
fmull
inc
push
jl
test
add
mov
jp
push
stos
mov
shlb
fs
aam
cmp
mov
data16
outsl
mov
cs
test
stos
pushf
into
cmp
push
mov
cmc
push
or
hlt
inc
dec
xchg
addr16
addr16
mov
or
pop
pusha
addr16
insb
sbb
jbe
cmp
test
xchg
add
hlt
xor
jecxz
xor
dec
sahf
mov
mov
cmc
decl
mov
jno
test
xor
inc
jp
xchg
mov
data16
mov
pop
repnz
mov
sub
jle
call
cmp
mov
lds
data16
and
ljmp
repnz
aaa
jmp
call
add
das
js
lods
jns
mov
push
shl
test
lods
push
fisubs
jle
loop
pop
pushf
test
and
cld
sbb
push
test
mov
and
dec
aam
cmpsb
lret
pop
aaa
cmp
hlt
sbb
lcall
pop
mov
sub
dec
iret
add
imul
mov
rolb
mov
ds
bound
subb
push
cmp
cmp
in
add
mov
and
pop
mov
adc
inc
push
ds
or
or
mov
loopne
mov
lods
or
test
mov
jl
add
mov
mov
sbb
adc
negl
xor
lds
pop
jae
repnz
mov
out
add
inc
push
ret
js
hlt
jbe
movsb
lret
adc
insl
and
andb
or
pushf
out
fmull
rorb
ljmp
sub
dec
add
xchg
sub
push
addb
mov
call
sbb
push
xor
pushf
es
dec
sti
mov
mov
pusha
jb
cmpsb
rolb
adc
cltd
lcall
xchg
loop
bound
ret
push
sbb
pop
mov
jns
pop
lock
dec
insb
movsb
clc
ljmp
stc
add
xchg
popf
cmpsl
jecxz
inc
inc
sahf
push
mov
add
sti
nop
lock
jecxz
rorb
mov
cmp
adc
push
push
in
rorb
enter
cmp
icebp
inc
push
xlat
in
add
and
popf
xor
dec
lret
fistps
jecxz
imul
dec
push
test
std
and
cltd
roll
and
mov
jns
les
enter
jmp
cmc
bt
stc
imul
bt
cmc
test
test
add
push
push
push
pushf
lea
jmp
out
sbb
out
outsl
lods
cwtl
sbb
outsl
sbb
sbb
xor
out
lods
sub
cwtl
jmp
lods
cs
insb
lods
out
jmp
sbb
in
lods
cwtl
sbb
sbb
jmp
insb
jmp
in
sbb
fidivl
insb
sbb
insb
lcall
outsl
xor
sub
icebp
aad
push
dec
aad
lea
and
mov
jmp
loopne
mov
fistl
ds
jmp
notb
xor
dec
std
mov
inc
stc
shl
jae
daa
scas
loop
sbb
cmp
addb
leave
cmpsb
inc
and
push
test
add
pop
popa
xchg
dec
jg
or
xchg
and
inc
pop
jg
repz
sub
jae
mov
iret
arpl
lods
fiaddl
mov
dec
in
jne
or
inc
jae
mov
lret
loope
add
sub
sbb
imulb
adc
in
adc
jbe
add
inc
addr16
push
dec
and
cltd
int
ret
jp
sbb
les
dec
aaa
mov
ss
sub
iret
arpl
movsl
aaa
dec
push
icebp
pop
fildl
inc
adc
xlat
fucomi
add
imul
mov
loopnew
mov
add
add
jne
outsb
je
jb
jo
jb
imul
adc
cmp
push
adc
ja
lret
aad
icebp
pop
sbb
arpl
cwtl
testb
pop
cmp
sti
pop
lock
sahf
jge
sahf
stos
repz
shrb
fs
xlat
outsb
sbb
test
jae
pop
pop
mov
scas
imul
xchg
imulb
push
jnp
sbb
icebp
cmp
data16
sub
xchg
stos
mov
mov
inc
dec
insl
lods
cmc
in
sbb
fdivp
xor
fs
lcall
xchg
xchg
pop
sbb
sbb
ss
mov
ja
fnstenv
dec
out
outsl
imul
es
xor
add
dec
push
fsubrs
xchg
push
cmp
and
int3
jo
loopne
xchg
sub
or
xchg
sbb
cmp
and
or
push
push
stos
xor
and
xchg
mov
mov
fs
test
fsubrl
outsl
jge
int
cmp
dec
xchg
jge
es
mov
or
lahf
xor
push
insl
dec
js
andb
sbb
xchg
mov
test
cli
cmp
icebp
mov
lea
out
push
cmp
lea
push
es
pushf
movsb
jecxz
adc
or
or
test
xor
aad
xor
cltd
leave
aad
mov
fs
and
push
mov
and
cmpsl
mov
or
cmp
imul
hlt
mov
sub
cmp
xchg
inc
adc
lds
in
pop
pop
mov
insb
push
mov
jmp
dec
fsubl
xorl
rolb
push
fs
jmp
mov
pop
mov
mov
jae
or
pop
ds
fdivrp
es
fstp
xchg
ret
sbb
xchg
mov
push
dec
push
push
mov
gs
jbe
iret
jae
scas
rcll
fisttpll
stc
inc
loope
imul
movsl
loope
inc
js
mov
in
mov
pop
rolb
push
cmp
jecxz
icebp
rcr
popf
pop
jne
pop
insl
dec
testl
or
stc
inc
mov
into
xor
lock
call
std
repnz
jge
mov
sarl
clc
pushf
pop
xor
out
testb
hlt
test
mov
mov
mov
or
lea
sub
js
rolb
cmp
test
bound
mov
lea
call
pusha
pusha
mov
lea
jae
call
lcall
jnp
cli
xchg
xor
mov
or
inc
jb
pushf
pushf
jns
pushf
inc
ret
addr16
dec
and
jmp
sahf
or
xchg
push
pop
test
inc
andb
xchg
pop
fndisi(8087
sub
cmp
sub
push
outsw
movsb
aad
mov
pushf
lret
test
sub
or
stc
dec
push
or
pop
pop
out
stos
jg
mov
add
outsb
mov
insl
fwait
mov
pop
xchg
lahf
mov
mov
bound
xor
mov
xchg
and
mov
jmp
sbb
cld
sub
add
cwtl
aam
mov
dec
fists
cmp
insl
mov
dec
pop
inc
push
or
fcomp
push
and
repz
dec
mov
jns
ja,pt
xchg
iret
push
jb
mov
and
sub
push
std
add
loopne
js
jg
out
xor
mov
xchg
rclb
sbb
lods
aad
push
xor
mov
xor
int
in
mov
arpl
sub
jecxz
stc
arpl
enter
xor
cmpsb
sar
sub
jmp
pop
imul
outsl
jg
imul
sub
call
jp
fsubr
sub
nop
adc
scas
fldcw
imul
shlb
add
xlat
mov
insl
sub
das
out
push
cmpsl
insb
loope
dec
push
nop
pop
push
andb
cmpsl
fisttpl
jl
mov
xor
inc
js
and
push
cmp
sbb
inc
mov
sbb
fs
sar
pop
mov
pusha
sarl
xchg
std
or
inc
int
fldl
or
xor
sar
sbb
pop
adcb
lods
ret
jb
cli
pop
adc
cmp
xor
movsb
sbb
insl
test
sbb
pop
stos
xor
imul
test
data16
sbb
xor
aas
rorb
push
lea
and
xchg
movsl
mov
sub
and
test
mov
lea
call
pushf
pushf
mov
lea
jmp
imul
lock
ja
iret
in
jmp
and
popf
cmpsl
aad
pop
das
push
jbe
rorb
addb
loope
enter
pop
test
or
pop
lcall
gs
pop
lcall
cwtl
dec
shrb
int
push
dec
ror
in
pop
pushf
ret
or
andb
and
mov
mov
pop
out
jne
scas
fisttpll
add
pop
mov
mov
lds
and
push
push
test
lock
movsb
rorb
in
sti
add
mov
repz
mov
movsb
or
stc
add
sub
cmp
xchg
arpl
and
mov
push
mov
mov
mov
pushl
lea
jne
neg
xor
inc
movsbw
stc
not
mov
cmp
inc
adc
add
sar
dec
sub
mov
clc
clc
jmp
test
pusha
lea
je
btc
sar
mov
sbb
add
rol
btr
movzbw
pusha
mov
clc
pushf
test
jmp
add
imul
jnp
ret
in
pushl
lahf
mov
push
mov
xchg
adc
push
clc
mov
rolb
cs
jae
inc
aas
in
jb
pop
mov
push
inc
std
dec
push
add
or
imul
jb
mov
lds
jns
cltd
movsl
ss
mov
icebp
daa
push
jnp
jmp
add
inc
arpl
sub
mov
cmc
or
pushf
jmp
mov
int3
xchg
rclb
sub
cmovns
xchg
xchg
xchg
xchg
mov
ret
jle
stos
cs
or
inc
lock
dec
jnp
test
xor
stc
loopne
mov
cmc
push
sub
mov
dec
mov
shrl
mov
cmp
or
pop
arpl
repnz
loop
mov
int3
aam
or
sbb
mov
inc
fs
adc
push
or
push
loope
jmp
adc
and
pop
fwait
iret
sti
xor
mov
outsb
out
cmpsl
push
pushl
lea
je
stc
cmp
pusha
pusha
pushf
lea
je
pushf
pushf
push
lea
jmp
in
mov
aam
xor
aaa
push
xchg
aas
pop
ja
sahf
jnp
rcrb
pop
jbe
jg
jp
pop
jns
pop
subb
aaa
mov
movsl
aam
cmp
scas
push
jo
jne
dec
movsl
loope
test
xor
mov
dec
sbb
xor
mov
fnstsw
xor
adc
cmp
in
xchg
cmp
aad
inc
pop
repz
jae
xchg
adc
repz
mov
aas
jne
test
pop
jns
mov
sub
add
push
xchg
cmp
in
push
cmp
jle
into
in
or
insb
je
lahf
stos
pop
adcb
arpl
or
pop
sub
sub
or
mov
pop
ljmp
insl
mov
loop
sub
mov
fistpl
mov
int3
mov
sbb
mov
cltd
sbb
outsl
es
fisubs
xchg
out
in
push
jge
pop
pop
push
cmp
fucomip
jl
cwtl
sub
mov
test
inc
dec
cltd
mov
adc
xchg
repz
daa
dec
pop
pop
xchg
mov
cmpsl
sub
jmp
lods
into
hlt
add
dec
push
xchg
pushf
enter
xchg
or
aad
mov
pop
outsb
and
test
and
mov
in
in
popf
and
xor
dec
pusha
mov
aam
cli
mov
push
jb
dec
pushf
xchg
stos
xor
pop
int
fsubp
and
jno
into
pop
out
sbb
btcl
int3
jbe
jp
lea
movsl
out
sbb
jl
aam
cld
sbb
dec
dec
pop
jl
mov
insl
orb
call
jmp
loope
dec
popa
mov
lock
call
scas
mov
adc
fistps
cmp
sub
xor
loopne
rclb
cmp
sti
bound
sub
adc
jno
lahf
pushf
mov
gs
lcall
je
fsubrl
repnz
iret
and
aas
inc
ret
aad
fisttpl
lcall
icebp
stc
pop
sub
fwait
mov
cmp
jo
sar
inc
push
je
enter
sub
mov
daa
ds
inc
imul
xchg
lret
cmc
add
stos
in
or
int3
ret
fdivrp
xlat
out
pop
icebp
and
sub
cmpsl
pop
xor
insb
ret
xchg
daa
popf
rcrl
rcll
jno
jg
cmp
jle
or
pop
ret
mov
xor
mov
adc
sbb
js
scas
fcom
loop
push
cmp
shl
ljmp
push
dec
fidivrl
push
adc
lea
dec
inc
push
push
cmp
insb
outsb
xchg
mov
pop
imul
mov
push
ja
in
insb
adc
xor
mov
aas
jl
mov
adc
mov
dec
mov
arpl
xor
pop
gs
sub
inc
pop
fdivrl
aam
dec
dec
fadds
push
es
jb
lret
push
cs
inc
mov
push
fidivs
xor
bt
test
movl
pusha
lea
je
jmp
mov
jns
scas
stos
loopne
mov
mov
inc
jle
enter
push
nopl
pop
mov
sub
xchg
ret
cmpsl
notb
out
js
sarl
jae
xchg
jge
or
mov
jge
lahf
pop
js
mov
rcll
scas
push
pop
shl
or
mov
shl
and
add
inc
mov
imul
adc
addr16
out
cwtl
sbb
inc
jbe
stos
cmp
xchg
mov
outsl
sbb
daa
push
pop
jmp
js
gs
mov
cvtpi2ps
out
hlt
dec
push
out
cmc
pmaxsw
and
in
inc
xlat
push
jmp
and
jmp
or
loop
aaa
push
pop
dec
add
sbb
mov
es
mov
sub
in
sub
cli
jno
mov
cmpsl
flds
sbb
inc
jnp
fwait
fwait
stos
into
into
inc
inc
stc
insb
shlb
sbb
nop
rcrb
xchg
and
or
mov
inc
dec
out
hlt
cld
std
push
mov
jmp
movsl
pushf
mov
es
sarb
int
or
cmpsb
cmpsl
loope
js
jae
inc
pop
outsl
scas
cmp
pop
pop
sbb
in
je
mov
ljmp
out
es
push
push
sub
outsl
add
imulb
and
xor
jns
lea
adc
imul
rolb
insb
mov
dec
inc
add
pop
fnstsw
add
cmp
sbb
push
js
inc
xchg
cwtl
popf
mov
in
addl
loop
and
loope
std
add
mov
push
pop
jnp
aad
aam
das
cmp
or
ret
aad
pop
aas
bound
mov
sbb
adc
aas
addr16
data16
mov
add
sub
pop
add
sbb
add
flds
lods
push
push
ljmp
lock
cwtl
enter
cmp
gs
cmp
sub
imul
xchg
mov
mov
push
flds
xlat
sbb
add
mov
dec
jbe
xchg
enter
je
scas
pushf
mov
pop
mov
or
ret
pop
lods
dec
in
dec
and
lret
popf
adcl
popa
cmpsb
dec
xchg
cmp
sub
pop
adc
xchg
addr16
aaa
imul
adc
add
cwtl
sub
jne
cmp
jmp
sbb
mov
out
outsl
sub
push
mov
into
repnz
ss
inc
mov
imul
stc
stc
ror
call
jns
inc
pop
popa
add
hlt
icebp
pop
xor
jecxz
or
inc
imul
jle
pusha
data16
xor
cmp
sbb
inc
dec
pushf
popf
fistl
pushf
jo
lock
mov
cs
adcl
push
push
jno
dec
jne
mov
je
jl
adc
jno
les
cmp
sbb
push
pop
lock
mov
xchg
lods
loope
or
cmp
mov
push
add
inc
pop
or
xchg
or
xor
pop
nop
mov
in
jae
xorb
cmc
mov
cmp
dec
jo
fiaddl
sub
xor
roll
jp
pop
xchg
pop
inc
jg
mov
cmp
xor
xor
fs
addr16
mov
pop
fnstsw
add
and
leave
rcr
fucom
sbb
push
lods
out
adcl
sub
xor
lods
leave
lret
jecxz
sbb
mov
inc
dec
loope
inc
es
out
or
add
icebp
jbe
fs
lcall
push
jecxz
jg
or
dec
push
stos
xor
mov
hlt
sahf
or
lds
cmp
and
bound
mov
subb
mov
inc
lods
shr
sbb
lea
cltd
lret
int
icebp
negl
inc
push
inc
jb
jbe
test
ss
pop
cmp
scas
out
out
pop
lea
sbb
sub
or
ds
xor
insb
ret
scas
into
pusha
mov
adc
xor
dec
aam
arpl
mov
mov
xchg
lahf
pop
pop
sti
scas
xchg
dec
jb
mov
or
leave
sbb
pop
stos
dec
faddl
or
pop
pop
mov
jl
sub
sbb
mov
jmp
test
inc
push
je
cmpsb
mov
rcr
cld
sbb
xchg
cmpsb
shl
sub
jmp
xchg
in
addl
into
test
in
lret
and
in
addr16
in
jg
js
ret
sbb
ljmp
xchg
es
sbb
movd
sahf
mov
stos
fcomi
ss
pop
pop
jge
out
pop
pop
aas
pop
pop
xchg
shl
decl
and
pop
xor
adc
dec
lods
mov
mov
stc
testl
and
fidivl
and
pop
fnstsw
dec
mov
jmp
xchg
in
iret
fstp
lock
and
nop
movsb
loopne
test
xchg
fdiv
pop
xor
out
sub
es
push
enter
add
repnz
cltd
mov
gs
xor
add
leave
jg
cld
fwait
into
jg
cmp
adc
and
sbb
sahf
pop
addl
jnp
mov
pop
and
mov
aam
jno
and
xchg
cmpsb
lret
iret
jecxz
add
xlat
sub
gs
inc
pop
mov
lods
shl
add
addr16
jecxz
daa
das
xor
mov
push
cmp
and
push
xor
lods
mov
jmp
pop
jl
mov
jb
and
inc
pop
inc
insl
incl
lock
test
js
int
sub
xchg
inc
xchg
push
hlt
push
jns
int
nop
fstps
mov
xor
clc
sbb
rclb
out
sub
test
and
mov
cmp
mov
jbe
lds
in
sbb
test
add
dec
mov
pop
jo
add
inc
andb
sub
and
cmpsl
mov
fadds
pushf
aam
or
and
xor
xchg
lds
dec
mov
jo
adc
rcr
inc
insl
mov
push
cmp
or
pop
sub
xchg
inc
mov
repnz
push
pop
test
adc
iret
inc
sub
cmpsl
cmc
mov
or
in
out
lea
dec
and
inc
test
push
mov
dec
jno
fists
add
fsubr
mov
jne
inc
jno
or
leave
jmp
lahf
or
jae
lahf
iret
negl
sub
jg
cmpsl
jecxz
mov
push
dec
int
pushf
inc
jbe
les
sbb
and
mov
hlt
push
xor
insb
xchg
xchg
ret
push
sub
icebp
dec
int
sub
dec
cwtl
dec
push
add
jmp
mov
xor
outsl
mov
test
push
out
clc
mov
add
out
mov
movsl
or
icebp
cmpl
rcr
add
push
inc
inc
push
push
shr
repnz
push
icebp
sbb
mov
rol
bt
sub
stc
mov
jmp
mov
mov
loope
insb
add
push
pop
push
cmpsb
loopne
add
cmp
xchg
mov
ja
dec
gs
ret
shl
movsb
in
or
pop
jmp
out
push
inc
add
rcl
in
and
pop
je
mov
inc
inc
push
jo
mov
sub
nop
adc
dec
pop
sub
mov
cld
sbb
xor
sahf
lods
loop
cs
jne
popf
xor
cmp
push
fistpll
and
xor
fstps
push
push
repnz
insl
dec
lahf
mov
ljmp
rcrl
mov
lcall
cmp
mov
jo
out
and
daa
das
addr16
mov
mov
push
lcall
pusha
pushl
ret
mov
lea
je
test
clc
pusha
jmp
push
push
xor
xor
fs
insb
add
lahf
or
mov
out
or
or
xor
js
xchg
mov
fwait
icebp
jae
int
mov
lods
xlat
add
addr16
out
outsl
dec
mov
push
loope
xlat
ficomps
sarl
fsubrs
mov
jmp
xchg
pop
int3
aam
lods
test
mov
push
in
add
jbe
int
pop
xor
lods
mov
jb
subb
cmp
and
stos
xor
adc
rcrl
bound
push
and
pop
push
mov
push
inc
enter
pusha
data16
lret
mov
popa
outsl
lea
push
xchg
xlat
jbe
inc
cwtl
sub
adc
cmc
sbb
push
inc
sub
mov
jl
mov
into
addr16
push
fwait
not
fwait
adc
das
arpl
jmp
ja
mov
xchg
aam
sub
jae
in
sbb
dec
cmp
inc
push
push
popa
mov
test
sbb
add
addl
push
fbld
mov
cmp
bt
mov
movsbw
adc
pusha
jmp
movsb
dec
pop
push
std
sub
lret
add
inc
dec
dec
jb
mov
jb
dec
push
icebp
test
sub
cld
mov
sbb
push
mov
ret
push
fsub
and
sbb
lret
and
inc
jno
mov
testb
icebp
clc
adc
scas
jmp
xchg
push
push
je
test
in
and
mov
push
notl
cwtl
outsb
lock
ss
dec
inc
cmpsb
ret
pop
jp
mov
sub
bound
test
or
out
sub
fiadds
push
out
and
cmpsl
test
cmpb
jb
popa
gs
sub
fwait
and
xchg
xor
or
insl
int
pop
adc
out
and
cld
or
outsb
dec
pop
or
test
fs
je
sbb
sbb
pushf
xor
pop
test
lock
scas
mov
inc
into
or
or
insb
insb
jo
mov
lods
mov
pop
add
out
aas
and
inc
and
pushl
lea
jne
shr
not
rcl
xor
sbb
aad
sar
mov
cmc
jmp
cli
sahf
mov
and
insb
xchg
mov
cs
pop
test
pop
cmc
leave
stos
adc
inc
push
scas
fs
add
inc
aaa
cli
dec
or
mov
cmc
sub
cmpsb
icebp
mov
imul
shlb
pop
push
imul
in
add
mov
mov
or
cld
cmp
pushf
roll
xchg
shrb
pop
inc
pop
fcomi
dec
roll
or
or
ret
rcll
or
mov
sub
int
stc
add
cmp
inc
test
popf
or
fstp
stc
or
sbb
xchg
sti
or
mov
push
jb
ret
ss
and
inc
sbb
dec
adc
imul
out
push
inc
jp
stos
adc
icebp
inc
xchg
scas
jae
mov
push
mov
sbb
push
xor
nop
jecxz
jno
scas
int
aas
jnp
xchg
cltd
xchg
int
icebp
sub
push
subl
push
stos
lea
icebp
and
cmp
inc
pop
push
leave
fcompl
loope
sbb
dec
mov
jnp
sub
into
adc
stos
into
or
testl
outsb
jle
pop
icebp
repnz
outsl
scas
cmc
xchg
add
arpl
cmp
mov
sub
jecxz
adc
movsbw
mov
pusha
jmp
pushf
movl
jmp
add
inc
gs
imul
inc
add
jb
xor
pop
fcomip
das
popa
arpl
cmp
pop
pop
movsb
shr
les
and
cmpsb
scas
xor
xchg
out
loop
jno
scas
stos
mov
pop
cmp
mov
pop
sbb
dec
add
andb
fwait
test
mov
pop
mov
insl
jge
lock
pop
in
add
mov
push
sbb
add
test
push
bound
mov
cmp
scas
in
sti
stos
dec
fmull
and
test
cmp
mov
pop
rorl
mov
fsts
dec
fstps
xchg
xchg
cmpsl
int
add
cmp
inc
jl
mov
adc
pop
sub
enter
and
punpcklbw
sub
jp
rorl
xchg
pop
lock
lcall
mov
lahf
xlat
push
call
sub
mov
pushf
bt
call
pop
mov
jo
cmpsl
mov
mov
int3
sbbl
cld
jle
xchg
scas
fdivrl
or
mov
fs
ret
mov
aas
push
arpl
sub
leave
pop
ss
aam
ljmp
pop
arpl
sbb
xor
lahf
stos
mov
nop
adc
mov
push
mov
push
or
jns
cmp
mov
jg
pop
sar
adc
lret
scas
in
sub
lods
cmp
ljmp
scas
pop
ret
daa
test
rorl
xor
jmp
mov
dec
fmull
sub
pop
fs
lods
fsub
lock
je
rorb
push
jmp
cwtl
xchg
adc
xchg
ret
aad
stc
pop
xor
xchg
std
add
jecxz
outsl
out
push
rorb
in
or
sub
xor
ret
jns
xchg
rclb
push
scas
mov
fadds
xor
push
subl
nop
sub
addr16
mov
fiadds
add
inc
sbbl
sub
push
add
xor
test
xchg
arpl
xchg
sub
sbb
push
xchg
pop
mov
mov
repnz
mov
mov
or
lcall
test
fucomi
or
scas
push
jmp
mov
adc
aad
insb
dec
mov
xor
test
inc
xor
adc
hlt
jnp
test
push
mov
call
mov
pop
pop
pusha
pushf
pushf
orl
out
add
mov
clc
fadd
dec
dec
dec
addr16
ret
iret
jmp
and
push
cmpl
repz
cmp
mov
sbb
popa
jnp
ret
in
icebp
sti
xor
cmp
push
andb
xor
pushf
in
xchg
popa
repz
daa
fisubrl
cmp
lock
mov
and
or
inc
mov
adc
add
test
rolb
sub
or
mov
jmp
inc
ja
xchg
imul
lcall
aad
jp
clc
xchg
fists
add
mov
mov
cmp
clc
sub
stos
or
xchg
and
movsb
mov
sbb
nop
mov
xor
sub
adc
xchg
sub
dec
fdivrl
mov
pop
dec
jg
cmpsl
lods
stos
loope
inc
pop
sbb
jge
sbb
jle
inc
shrb
sbb
mov
loop
push
mov
pop
out
jne
bound
push
aam
xchg
pop
cltd
out
inc
mov
scas
into
aaa
adc
movsl
out
mov
xor
xchg
sub
in
add
cmc
ds
jp
loope
loopne
inc
pop
jnp
lret
lret
repz
push
stos
scas
mov
mov
pop
mov
pop
fsubl
stos
data16
add
aam
mov
pushf
adc
addb
add
jns
push
mov
add
test
push
mov
add
push
pop
inc
lods
adc
mov
shrl
sbb
lahf
lods
stos
lods
iret
in
adc
aaa
pop
jbe
fdivrl
cmp
ret
clc
add
jbe
push
inc
in
pop
xor
pop
fwait
mov
xor
xchg
cwtl
movsb
sbb
add
push
divps
hlt
stc
adc
rorl
cmpb
mov
sub
lods
push
loop
movsl
xlat
or
or
mov
cli
sbb
fidivrs
push
jne
mov
faddl
and
pop
js
jge
daa
stos
sub
shll
scas
ljmp
sub
test
ds
mov
out
ret
in
dec
push
pop
pop
xorb
adc
xchg
aam
jl
mov
testl
push
shufps
push
jo
mov
dec
imul
dec
fucom
sub
popa
push
lock
movsl
mov
fisttpll
or
xchg
idivl
fists
lea
ja
dec
call
mov
pusha
lods
bt
cmp
pusha
neg
stc
call
pop
ljmp
aas
inc
lcall
scas
ror
shr
adc
jp
mov
cld
test
out
sub
dec
inc
and
addb
loop
jno
jmp
leave
stc
jnp
or
mov
inc
fwait
mov
jnp
mov
mov
leave
push
lcall
andb
ss
sub
pusha
pop
push
or
pop
bound
scas
fcoml
cmp
pusha
push
stos
int
mov
setno
add
pop
jo
les
dec
stos
adc
std
and
clc
inc
cmp
test
out
push
add
push
ja
pushf
xor
mov
scas
jmp
jl
lcall
push
sti
push
les
pop
jge
sub
js
cwtl
mov
int3
faddl
fs
mov
inc
fwait
add
pop
dec
test
mov
jge
lea
inc
jg
mov
adc
pusha
mov
sub
fiaddl
pop
cld
sub
cwtl
cwtl
pushf
jmp
lds
leave
lahf
shll
cmc
addr16
jge
shll
dec
jl
cmp
rorb
adc
rorl
lods
loopne
xor
out
jne
int
scas
inc
jns
push
cmp
dec
mov
sub
xchg
jo
ds
dec
sub
daa
inc
dec
ja
fwait
shl
mov
inc
inc
leave
dec
out
in
ss
sub
xchg
cmpsb
test
enter
xchg
push
xchg
push
jae
dec
jae
cmp
fmuls
sar
shlb
int3
dec
loope
inc
jne
pop
xchg
pop
or
xor
adc
pop
push
imul
out
insl
xchg
movsb
rcll
in
outsl
notb
push
push
addr16
xchg
xor
push
imul
in
dec
dec
js
aam
loopne
xor
xchg
mov
or
mov
aas
cmp
arpl
fisttps
in
sbb
sbb
ljmp
test
dec
ja
movsb
mov
mov
push
pusha
mov
loop
test
imul
mov
push
sbb
mov
leave
cmc
push
sub
outsl
cmp
sbb
movsl
or
dec
jae
movsb
int3
repnz
clc
jp
mov
icebp
and
push
pusha
mov
push
sbb
push
sub
xchg
dec
push
add
inc
iret
in
stc
mov
out
dec
xchg
popf
leave
add
adc
lea
inc
dec
iret
popa
push
mov
sbb
data16
pusha
pop
jl
pushf
ret
sub
jnp
mov
push
inc
cmp
lds
in
hlt
enter
or
loopne
dec
mov
xchg
addr16
test
inc
ret
jp
mov
mov
push
loopne
out
add
pop
pop
in
cli
clc
clc
and
sbb
ss
sub
leave
adc
orl
xor
int3
cld
cld
and
inc
mov
inc
or
add
pop
and
movsb
dec
and
jle,pn
add
dec
and
ss
add
dec
and
jle,pt
add
and
mov
jle
add
push
and
les
add
and
pop
mov
add
dec
and
push
jle
add
and
aam
and
pop
jle
add
jne
add
dec
and
data16
add
jle
add
dec
and
outsb
jle
add
pop
and
in
dec
and
jbe
and
push
sub
hlt
dec
and
jle
and
test
and
cld
dec
and
xchg
add
and
add
and
mov
add
cmp
add
and
xchg
jle
add
dec
and
sahf
jle
add
dec
and
cmpsb
jle
add
aaa
and
and
and
scas
jle
add
and
sub
and
mov
and
pop
mov
add
and
add
add
xor
pop
push
add
mov
xchg
inc
dec
push
gs
mov
mov
loop
xor
lea
push
mov
int3
mov
into
or
and
outsb
enter
add
cmpsb
stos
xchg
in
loopne
stos
add
test
mov
jne
or
adc
dec
test
and
inc
pop
cmp
sub
ja
or
insl
jno
sbb
or
xchg
mov
sti
daa
daa
inc
dec
arpl
stos
mov
inc
je
sbb
or
decl
xchg
nop
call
clc
sbb
sub
sub
ror
not
cmc
add
sar
dec
lea
or
mov
dec
setns
pusha
mov
push
bt
sub
jp
cmp
repnz
push
jmp
jnp
js
dec
cmp
outsl
movsl
fcomip
sti
and
jnp
movsl
movsl
xchg
scas
das
andl
sub
and
ljmp
lds
addr16
jge
mov
and
fcom
push
test
sti
mov
mov
in
in
and
popa
enter
aas
rcr
pop
dec
jge
in
pop
loop
mov
dec
pop
ja
and
mov
pop
ljmp
jne
xchg
int
add
sbb
sub
ja
mov
mov
clc
test
mov
pop
sbbl
test
jmp
sbb
fwait
xor
jnp
sahf
movsb
lods
sti
mov
adc
cltd
out
mull
fisubl
rcll
hlt
sbb
pusha
mov
cwtl
test
xor
pop
dec
loop
xor
mov
les
es
fidivl
sbb
js
ret
pusha
xor
aam
sti
or
insb
stc
and
cmpsb
add
ss
test
insl
sbbl
in
stos
inc
scas
int
cmovle
push
xchg
mov
cmp
outsl
popf
mov
pop
cmp
fdivr
sbb
fdivr
sub
mov
xor
and
cltd
lods
leave
sbb
ja
sar
sub
filds
out
int
jp
jbe
ds
jle
xchg
cmc
sbb
aad
pop
xor
mov
cmp
adc
pop
jno
adc
sbb
mov
outsl
mov
filds
push
loop
les
aad
jmp
addr16
jne
arpl
mov
outsl
scas
inc
mov
cmp
add
pop
and
xor
jge
fstl
and
inc
jae
sbb
and
sub
hlt
andb
add
mov
xchg
mov
cli
adc
ss
push
push
adc
push
xor
xchg
leave
lods
sub
testl
loope
add
dec
loop
lret
mov
add
xor
adc
test
repz
std
fcoml
adc
sbb
enter
xor
xchg
mov
pop
xchg
mov
loop
lret
dec
iret
out
aad
out
shlb
mov
jmp
dec
push
outsl
test
push
out
pop
lcall
mov
push
orb
dec
xor
repz
sbb
xor
enter
cmp
jmp
mov
dec
or
aas
arpl
int
jecxz
dec
add
mov
and
and
mov
jns,pn
in
pushl
pusha
sbb
ja
into
dec
add
push
jne
push
vmwrite
int3
sbb
sarl
add
xchg
ljmp
xlat
mov
fcompl
fcmove
pop
jo
loop
jg
mov
fwait
scas
mov
stos
mov
dec
and
inc
dec
ss
inc
test
lea
mov
xor
xchg
pop
push
outsl
cmpsl
mov
out
mov
dec
flds
mov
stos
dec
push
push
sub
mov
sub
sbb
int
xchg
fbld
cmpsl
xchg
pop
mov
push
cmpsb
inc
pop
scas
xor
cwtl
test
std
fs
push
cmp
icebp
mov
das
pop
fidivs
in
lret
sbb
push
jnp
jp
or
inc
push
outsl
mov
lret
pop
outsl
xorl
jmp
insl
insl
mov
cmp
or
loope
cmp
jne
test
push
mov
dec
lods
out
jno
or
ss
push
out
mov
push
push
jbe
lret
inc
jbe
mov
repz
and
push
jnp
dec
fidivrl
adc
fdivrp
or
inc
push
xor
sbb
bts
aam
stc
inc
pop
shll
add
fidivs
mov
pop
ss
add
push
loope
movups
test
jle
in
movl
mov
xchg
int3
incl
mov
getsec
push
xchg
inc
outsl
mov
dec
lret
pushl
popl
clc
bt
cmp
pushf
lea
ja
sub
mov
sub
neg
not
pushf
pushl
add
add
and
dec
shld
mov
rcr
bt
rcr
mov
bt
repnz
jmp
ret
mov
fistpl
jp
mov
outsb
adcb
add
leave
aad
sbb
dec
rcr
sti
jecxz
fisubrs
icebp
cmp
ret
stos
adc
cltd
out
sub
test
add
ds
gs
inc
ljmp
repz
mov
add
push
mov
fcos
or
add
xor
or
aaa
pop
popa
insl
movsl
int
icebp
and
pop
jns
mov
movl
xchg
inc
shll
loop
adc
jo
lods
fcompl
cmp
dec
jo
or
and
adc
mov
ss
push
push
cmpsb
pop
dec
pop
mov
jnp
out
add
fcompl
xchg
push
dec
fbstp
ret
test
and
movsb
cli
push
enter
xor
jno
and
ror
outsl
jb
outsl
and
push
mov
call
jno
ds
sbb
mov
out
pop
inc
pop
imul
sub
repz
lock
std
std
xchg
xchg
addr16
mov
ret
jne
jle
rol
lea
push
cltd
adc
lret
push
fs
pop
int
jge
in
js
dec
pop
and
aam
pop
movb
fsubl
adc
test
sbb
fs
mov
cmpsb
cmpsl
aam
std
sbbl
xchg
enter
pusha
enter
xlat
dec
pusha
jmp
movsl
xchg
mov
pop
xchg
jl
int3
fsubr
cmpsl
mov
xchg
mov
cmp
repnz
rcl
xlat
in
sbb
loope
jge
jns
mov
push
push
cmpsl
sti
mov
pop
xlat
sbb
and
cmp
sbbl
out
in
adc
mov
pop
pop
out
sbb
shlb
sbb
xor
sub
ret
push
std
mov
xchg
adc
pop
sbbb
test
jne
iret
out
xor
repnz
inc
jo
jl
mov
cmc
sub
xor
push
xor
xchg
stos
gs
outsl
rcrb
lea
jae
mov
or
lahf
xchg
mov
das
xor
jg
movb
sbb
inc
xchg
xor
int3
out
sbb
out
cwtl
popa
imul
mov
mov
push
jecxz
inc
mov
mov
idiv
cmova
ret
jmp
mov
dec
enter
dec
push
xchg
xor
stc
xchg
dec
push
push
imul
mov
iret
and
test
push
xchg
das
inc
push
jnp
or
shr
sbb
pop
jno
and
fninit
and
shlb
mov
push
or
mov
or
loope
bswap
dec
lcall
lods
mov
popf
es
push
or
or
mov
je,pn
push
push
fdivl
inc
mov
add
mov
dec
jl
pushf
mov
lock
sub
clc
mov
push
mov
or
pop
jo
mov
lea
xor
push
daa
sbb
shl
add
jle
dec
scas
insb
aaa
inc
jge
es
mov
fyl2x
adc
and
cmp
mov
fistps
pop
sub
push
cmpsl
inc
push
lods
rcrb
aad
jns
call
xorl
fildll
xor
dec
icebp
repnz
sbb
lcall
sbb
xor
inc
pusha
loop
mov
dec
orb
test
mov
idiv
adc
lods
rorl
stos
mov
aad
std
add
shlb
fdivl
fcoms
jecxz
mov
divb
xchg
dec
mov
mov
je
pop
pusha
xchg
push
cs
stos
dec
lods
mov
push
imul
repz
pop
add
icebp
lods
aas
xchg
int
and
loop
repnz
xchg
and
jne
push
lods
sbb
out
xlat
pop
subl
adc
int3
rolb
jbe
push
sbb
insb
test
in
and
push
mov
cmp
push
mov
push
mov
sub
pop
je
mov
xor
sbb
outsl
cmova
js
sub
and
lret
mov
int3
das
addr16
or
into
sar
jns
dec
lds
out
inc
push
cmp
rcll
mov
cmp
arpl
push
jmp
aam
iret
shll
push
cmp
push
shrl
jno
adc
sub
pop
pop
comiss
jmp
ret
push
jbe
stos
mov
ljmp
rcl
mov
dec
push
mov
test
push
mov
insl
sti
jge
mov
and
insl
mov
imul
push
outsb
imul
and
xor
dec
mov
dec
jnp
mov
sbb
push
cmpsl
lods
dec
push
add
pop
loope
aas
jle
mov
adc
mov
mov
mov
out
cmp
and
les
or
mov
xor
push
js
mov
fprem
jp
cs
ljmp
sub
sbb
sti
daa
sub
mov
add
daa
aas
jae
mov
ss
test
xchg
cli
and
inc
xlat
nop
pop
inc
adc
jmp
sub
popa
fwait
mov
adc
jbe
pop
mul
iret
sbb
repnz
dec
in
mov
cmpsb
and
out
xchg
andb
jno
jo
push
mov
shlb
sub
popa
repz
and
test
repnz
and
sahf
push
scas
std
xlat
dec
fdivrp
sbb
in
out
loopne
fists
je
lret
sbb
lcall
mov
ss
sbb
xchg
xor
pop
jmp
mov
in
push
xor
test
jle
notb
inc
dec
xchg
negl
stos
push
movsb
jp
xor
pop
jb
lcall
push
mov
sub
cmp
push
movb
lea
call
jmp
ret
mov
popf
mov
and
mov
sar
push
inc
push
nop
xchg
dec
push
sti
add
pop
insl
out
sub
cmpsb
sub
xchg
add
dec
push
mov
addr16
in
jle
fsubl
adc
cmp
cmp
addb
leave
pop
lcall
sub
int3
cli
adc
ret
cli
ss
mov
cs
xchg
les
not
pop
jmp
jecxz
imul
xor
out
adc
pop
xor
scas
in
sub
xchg
mov
mov
scas
inc
dec
jl
pop
fwait
je
outsl
jae
scas
gs
jne
fidivl
rcrb
aam
incl
sub
mov
bnd
ret
and
lods
ss
mov
xor
aam
cmpb
jb
mov
sbb
adc
pop
jle
inc
or
lock
jmp
cwtl
movsb
int3
fcoml
xor
xor
mov
sub
test
popf
stos
sub
pop
and
dec
pop
gs
jmp
pop
sahf
xor
lds
add
push
cmpsl
xchg
cmpsb
lret
dec
push
xor
test
xchg
mov
xchg
sti
daa
out
in
jb
jecxz
dec
push
imul
pop
test
adc
dec
hlt
mov
mov
inc
idiv
adc
mov
pop
pop
xchg
mov
add
popf
sub
adc
mov
sbb
xor
xor
out
xlat
lcall
or
xchg
mov
sbb
out
rclb
nop
jmp
int3
enter
add
lea
cmc
mov
xor
mov
aad
cmpsb
push
pushf
call
adc
aad
iret
in
cmp
inc
pushf
int3
mov
or
adc
jne
or
push
mov
or
repnz
clc
jp
jle
mov
int3
pop
pusha
sbb
in
sbb
dec
push
cmpsb
loop
out
daa
jo
jl
mov
add
cmp
pop
subb
pop
cld
jmp
repz
mov
or
xor
jecxz
and
push
xor
test
loop
jl
sbb
fiadds
mov
and
pushf
jo
addb
push
mov
das
enter
stos
cmp
iret
push
push
and
outsl
rcr
aam
cmp
in
in
sbb
fcmovne
dec
loopne
or
gs
jge
cs
mov
sub
xchg
lods
enter
sbb
jmp
cld
sub
xchg
ljmp
xchg
into
mov
xor
jb
mov
dec
dec
jle
and
inc
loope
lea
sub
pop
imul
inc
out
push
push
mov
dec
mov
xchg
dec
outsb
mov
testl
push
pop
out
inc
jne
xor
mov
fsubs
jecxz
sbbl
push
out
mov
jecxz
sbb
orl
push
mov
adc
dec
sub
aas
mov
lcall
popf
rorb
test
sbb
cmp
es
out
jp
call
dec
mov
xor
insb
insb
jl
sub
cmc
sbb
jne
jmp
xor
jmp
jecxz
jno
scas
scas
popa
fisttpll
pop
test
jecxz
xor
movsl
mov
in
fstl
in
orb
jnp
sbbb
fildl
add
paddsb
jo
cmp
inc
xlat
pop
jno
cmp
stos
scas
inc
popf
imul
and
ja
mov
adc
stos
xchg
mov
scas
ret
ret
ds
lods
repz
jnp
push
sub
out
push
std
or
inc
dec
pop
pop
call
dec
jae
mov
xor
xor
es
dec
adc
loop
test
test
rcrb
gs
push
mov
mov
sbb
add
lods
and
mov
outsl
cmpsb
ret
xor
popf
pop
mov
imul
cmpb
jno
sub
addl
xlat
mov
cmp
mov
mov
xor
negb
and
std
sahf
stos
cmp
lods
lret
sub
push
jbe
mov
in
clc
mov
xor
stos
add
je
lcall
dec
iret
add
cs
pop
shl
pop
sbb
sbb
enter
lock
jno
pusha
adc
pop
ret
fwait
pop
xchg
aas
cmc
inc
sbb
adc
or
mov
dec
push
sbb
xchg
int3
aas
testb
pop
fwait
sub
cld
push
cmpb
jmp
push
mov
mov
ret
mov
push
adc
frstor
sar
adc
push
adc
mov
xor
jecxz
stc
cmp
movsl
dec
mov
xchg
mov
cmp
ret
sbb
pushf
lock
and
lods
xchg
jae
fiaddl
xor
call
xchg
cmpsb
xor
and
subb
add
push
mov
or
js
push
jno
lock
adc
je
cwtl
lods
fmuls
sub
enter
and
stos
shl
push
into
dec
loop
adc
or
pop
xchg
or
add
dec
lret
repz
mov
pop
jno
sub
jnp
sbb
js
dec
lahf
xlat
push
out
out
fwait
sub
gs
xchg
stos
cmp
jmp
test
mov
mov
sbb
and
shl
aaa
add
rcl
add
fstpl
or
adc
cld
shl
push
cmp
hlt
sub
mov
and
push
pop
mov
sbb
test
test
pushl
repnz
jmp
sub
call
scas
pop
sbb
jno
pop
out
popf
leave
xlat
add
xchg
vpmullw
lret
int
jl
xchg
sub
cli
xlat
vucomisd
mov
movl
inc
inc
movsb
push
lahf
cmc
sbb
xlat
push
mov
cli
popa
jns
js
aas
and
gs
dec
mov
lods
js
fucom
jbe
fildl
or
lcall
ljmp
jns
pop
xor
scas
ljmp
outsl
jns
enter
pop
pusha
push
sbb
jo
cwtl
rolb
sub
jge
xor
xchg
and
lcall
setp
jmp
pop
dec
push
mov
push
aam
and
push
bound
inc
dec
insb
insb
daa
daa
mov
iret
sbb
rcrl
push
add
mov
cmp
inc
les
dec
sbb
pop
rol
testl
inc
xor
mov
in
add
sub
into
or
out
and
push
sub
shlb
ss
out
and
adc
ss
jb
mov
es
push
mov
pop
fsubrl
cwtl
imul
movl
pushl
pusha
lea
jmp
jne
xor
pop
repz
cmpsl
roll
gs
mov
arpl
sub
adc
stos
data16
inc
setno
in
shl
ret
or
fwait
jbe
push
pushf
and
sub
jbe
lods
sub
ds
cltd
jbe
fistl
jno
mov
popa
cld
test
or
adcb
and
cld
jle
fcoml
push
jae
mov
pusha
and
or
adc
mov
adc
test
loopne
cmp
pop
jl
fcomp
hlt
sub
mov
pop
iret
negb
adc
jmp
sbb
imul
imul
test
inc
bt
mov
cmpsb
push
or
or
fnstsw
mov
int3
insl
jb
jno
cli
add
clc
ret
mov
lods
xchg
push
mov
aaa
out
icebp
cmp
notl
xchg
stc
jne
mov
add
inc
dec
iret
add
pop
imul
sti
xchg
pop
dec
jge
push
nop
call
dec
jno
xchg
and
cmpl
push
mov
ret
iret
pop
mov
cmp
test
jecxz
clc
mov
bt
sub
pusha
pushf
bt
rol
bt
not
stc
xor
test
call
call
xchg
or
xor
arpl
pushf
push
pop
jnp
scas
int
add
push
cmpl
mov
cmp
outsb
loop
hlt
add
push
add
or
inc
fwait
mov
cmp
stos
sub
into
or
or
insl
jb
xchg
lock
jmp
cmpsl
es
ret
ficomps
pop
loope
iret
sbb
dec
push
jp
stos
loop
adc
push
orb
jp
lcall
or
fs
je
stc
cmp
call
add
cmp
pushf
pushw
popfw
pushl
inc
push
mov
adc
lea
push
pusha
push
push
pushl
ret
nop
xor
jo
dec
mov
jl
ror
push
dec
jle
lcall
jns
iret
hlt
shufps
out
mov
xor
imul
push
imul
lods
jmp
cmp
rcl
jae
les
loop
lock
jbe
imul
pop
xchg
test
fsubrl
mov
xorb
inc
xchg
mov
int
cmp
xchg
jno
scas
mov
call
pusha
orb
jnp
sbb
sbb
outsb
mov
pop
mov
pcmpeqd
xchg
or
mov
push
rep
lret
xchg
mov
adc
pop
mov
ret
jg
mov
cmp
rcrb
pop
pop
jno
mov
mov
push
xchg
loop
sub
inc
jbe
jae
fcomps
outsb
cmpb
jle
xchg
in
je
fs
sbb
stc
fstpl
ja
lret
cwtl
aam
fstpt
dec
pop
mov
mov
sub
test
and
sbb
mov
dec
lcall
ret
inc
sbb
das
jle
leave
dec
or
std
orl
mov
inc
add
push
xchg
mov
jb
lods
daa
test
cltd
in
scas
jle
sbb
in
sub
ja
cmp
rorb
xchg
popf
test
xor
sub
xchg
mov
and
push
inc
jbe
inc
pop
imul
int
sti
pop
push
jp
push
mov
pop
imul
imul
pop
aas
adc
lods
ret
pushf
xchg
jns
inc
int
jae
cmp
mov
xchg
mov
out
and
mov
int3
out
aaa
popa
pushl
push
adc
into
or
in
in
pop
pushf
xor
int3
into
pop
test
shlb
jns
xor
pop
xchg
int3
mov
push
mov
jae
repz
cwtl
repnz
rclb
pusha
aas
mov
mov
loope
push
jl
in
fwait
pop
pop
jae
xchg
scas
faddl
xchg
sbb
daa
adc
jb
repnz
pop
xchg
sbb
pop
stos
inc
pop
and
lret
adc
xchg
std
adc
idivl
out
pop
cmp
imul
and
lea
inc
stos
ret
add
xor
push
jl
sbb
jo
mov
loopne
inc
pop
lcall
pop
pop
into
add
ljmp
sahf
bound
push
sub
out
popf
repz
imul
sub
inc
adc
hlt
xchg
pop
push
jp
sbb
dec
adc
and
jl
mov
dec
xor
stc
xor
fdivrp
scas
loope
and
push
ja
testl
orl
cmpsl
sti
mov
sub
jmp
push
in
addr16
inc
mov
repz
lods
ret
fistl
ficomps
inc
ficoml
cwtl
stos
mov
sbb
jecxz
cmp
sbb
jo
es
cmp
push
xchg
das
shrl
mov
sub
lods
insb
popa
addr16
mov
lods
dec
fisubs
jmp
inc
je
fsubrl
jns
xchg
sbbl
push
sbb
fcomip
inc
data16
mov
inc
jns
pop
fcomip
bound
sbb
int
enter
or
mov
enter
movsl
icebp
out
mov
xorb
jae
mov
jmp
sbbl
inc
in
inc
and
rcll
mov
pusha
ret
inc
arpl
lds
and
sti
les
in
adc
leave
rcr
sbb
jmp
loop
jns
fdivp
scas
test
push
pop
test
sbb
in
je
mov
push
push
jbe
jmp
jl
cmpl
and
or
push
loop
jp
adc
sub
hlt
cmp
fisttpl
enter
xchg
mov
into
into
hlt
leave
mov
lret
pop
inc
mov
mov
pop
pop
out
in
mov
sbb
fstpt
or
pop
fwait
sbb
icebp
push
out
pop
jne
sub
jmp
lahf
and
in
scas
notl
pop
pop
adc
push
mov
pop
test
insb
movsb
dec
xor
cmp
out
addl
dec
pop
outsl
fs
mov
jns
mov
cmp
pop
pop
xchg
vpsubsb
xchg
test
out
jl
cld
adc
push
hlt
fs
push
es
leave
arpl
pop
out
add
add
inc
aam
jae
sbb
push
data16
rcl
cmp
lods
dec
xchg
in
or
dec
lret
int
xor
sbb
cs
addr16
pavgw
inc
xchg
scas
xor
test
arpl
cli
fistps
push
addr16
pop
popa
cmpl
cmc
push
in
test
sub
lcall
inc
pop
stos
ret
mov
mov
xchg
fistpll
movsb
fcmovnbe
mov
insb
mov
pop
dec
lahf
stos
cmp
rcl
sahf
push
lods
jns
push
ss
and
jne
cmc
adc
sub
mov
xor
sbbl
loopne
jne
fcmovnu
out
add
jbe
pop
jmp
push
jne
jno
adc
inc
xorb
idivb
lahf
mov
sub
mov
shll
aas
jle
insl
cmc
cs
lock
jge,pn
xor
mov
add
idiv
sub
inc
mov
add
jmp
mov
add
daa
mov
ret
push
pop
outsl
xchg
push
xchg
loop
sub
and
jp
and
sti
pop
mov
imul
loope
es
sarl
sbb
aas
push
jnp
mov
out
xchg
aaa
subb
jg
mov
xor
sub
lods
int
cmp
dec
pop
fldt
out
ret
pop
es
pop
pop
mulb
dec
sahf
mov
cmp
add
mov
pop
mov
cmp
jp
cmp
fstpl
loope
inc
inc
ja
lret
and
fdivl
je
fistpl
stos
cmpsb
xor
dec
pusha
push
jecxz
jg
add
dec
filds
inc
incl
jmp
lret
push
or
jbe
mov
or
pop
flds
adc
daa
jae
xchg
leave
and
and
cmpsb
jno
aas
jnp
ljmp
outsb
sbb
mov
jns
push
pop
addr16
jg
int3
and
scas
in
test
movsb
cli
push
cmpsb
je
jmp
test
std
mov
scas
sbb
daa
adc
nop
stc
fisubl
mov
push
push
or
jo
inc
jbe
jb
and
push
and
jge
add
pop
aaa
loope
cwtl
sti
xlat
loop
mov
or
pop
scas
jecxz
je
dec
aaa
mov
sbb
sbb
cli
test
dec
jmp
shl
push
or
jns
popa
pushf
je
pop
fists
bound
imul
inc
call
xchg
movsb
xlat
push
jecxz
orb
dec
push
xchg
in
aad
xchg
dec
test
fldcw
fdivrs
subb
mov
or
or
xor
lret
mov
lea
fwait
sbb
icebp
std
pop
cmpsb
shrb
lret
dec
mov
xor
bound
ds
daa
pop
lods
call
add
dec
je
test
jnp
mov
xchg
lods
jmp
and
mov
fucomip
aam
shrb
pusha
jbe
mov
call
pop
gs
add
arpl
mov
dec
push
popa
repnz
shr
cmp
push
stos
aad
aas
out
pop
cwtl
or
dec
int3
ljmp
out
fisubs
jecxz
inc
dec
outsb
sti
and
cmp
or
loop
push
lahf
out
add
or
mov
mov
pop
ret
call
xchg
test
dec
inc
sub
push
test
or
lret
scas
cmp
cmpsb
in
mov
sub
test
push
push
je
mov
ret
mov
idivb
xchg
rcll
mov
in
testb
mov
add
outsl
mov
inc
outsl
lds
icebp
arpl
in
out
add
pop
jmp
sbb
sarb
call
push
rclb
test
cmp
loop
insl
jns
add
ja,pn
adc
push
push
imul
pusha
call
fadds
mov
push
inc
test
sbb
push
xchg
gs
xchg
stos
std
jge
xchg
ss
xor
inc
dec
insb
mov
out
stos
fildll
dec
insb
mov
cs
mov
cmp
xlat
adc
push
inc
sub
jae
push
add
mov
sbb
ljmp
jecxz
test
adc
mov
or
sbb
or
test
lea
and
xor
cmp
push
add
mov
cld
or
push
jg
popa
cltd
sub
ljmp
mov
push
inc
adc
jbe
loopne
dec
repz
imul
ja
mov
mov
dec
xchg
inc
outsb
aad
out
lcall
in
mov
aad
add
mov
mov
push
cmp
add
jne
cmc
adc
push
mov
mov
test
pop
push
sub
stc
xor
aaa
jno
int
clc
loopne
iret
pop
lock
scas
lock
outsb
mov
aaa
push
adc
or
pop
cwtl
out
and
and
adc
out
in
jle
xchg
lods
cmp
xchg
adc
lahf
stos
lds
add
bound
test
add
nop
outsl
add
addr16
test
pusha
sub
rolb
movsb
push
outsb
cmpsb
cli
xchg
adc
push
mov
add
clc
sbb
popa
jns
fistpl
xorl
stc
jnp
push
inc
rol
sub
jmp
out
rol
call
notb
out
push
push
mov
call
test
mov
push
loop
out
cli
adc
js
rcr
jle
out
in
lret
sub
lcall
cmp
out
pop
mov
out
popf
repz
outsb
ret
pop
sbb
jge
xchg
cmpsl
cmp
sahf
xchg
add
mov
das
ret
ja
push
ss
movsl
loope
outsl
jnp
sub
adcl
std
sbb
mov
push
andb
call
ds
scas
cmp
add
shrl
add
pop
xor
arpl
pop
outsb
adc
stos
mov
aaa
jbe
add
lret
sbbb
xchg
jle
movsb
repz
test
imul
pop
lcall
sub
fnstcw
jmp
int
push
adc
jl
or
divl
insl
mov
notl
fistpl
les
xchg
fsubr
clc
sbb
jae
fldcw
dec
mov
out
mov
clc
cmp
ror
or
stos
mov
cmpb
cmp
or
jl
jne
ret
fsubr
aam
fisubs
repz
dec
xor
leave
rcr
jmp
push
adc
nop
mov
mov
sub
lret
pop
inc
test
out
and
mov
adc
enter
jmp
mov
xchg
loop
loope
jns
test
fistpl
jae
fsubrl
dec
imul
xchg
push
xor
fs
mov
sbb
in
fcoms
xchg
sub
mov
loop
aam
and
push
pop
add
xchg
lea
rcll
pop
in
rorl
xchg
call
cmp
pop
xchg
jle
ss
sbb
add
push
jecxz
fsubr
add
les
rcrb
jno
mulb
push
inc
incb
or
sub
push
lcall
cwtl
ret
fstp
jge
pop
gs
or
sar
movsl
mov
mov
mov
or
sub
xchg
pop
inc
fs
pop
out
add
add
jle
movsl
sti
aaa
jbe
hlt
dec
movsl
fbld
fildll
pop
inc
jge
add
xor
xor
inc
push
addr16
sub
pop
stos
mov
test
aas
fidivl
movb
clc
pop
pop
pop
and
or
or
das
mov
ret
fwait
popf
iret
add
rcrl
jns
mov
inc
mov
or
scas
ljmp
xchg
mov
and
xor
cmpsb
mov
fsubrl
push
jb
push
sbb
mov
inc
mov
popa
mov
push
push
lcall
jge
lock
add
pushf
push
push
add
push
mov
push
movsl
lds
pushf
xchg
ret
mov
jo
out
loop
test
mov
mov
out
addl
cli
fidivrs
outsl
mov
sub
mov
cmp
pop
cmp
insl
aam
mov
cmpb
and
out
in
fwait
mov
nop
pop
xchg
lcall
fcomip
xor
or
dec
cmp
fdivp
jno
mov
bound
pushf
xchg
fisubs
repnz
adc
jb
or
and
daa
repz
in
or
sub
pop
ficoms
int
pop
xchg
lahf
or
jns
stos
cli
leave
test
mov
mov
push
jecxz
test
fsub
or
dec
sbb
dec
inc
imul
jge
pusha
inc
jbe
sub
mov
movsl
mov
movsl
daa
inc
gs
movsb
es
push
dec
mulb
sub
xchg
shlb
outsl
icebp
and
fsubr
shrl
mov
enter
inc
pop
jle
push
pushf
in
outsb
mov
cmp
push
call
shr
comiss
fisubs
pop
jno
inc
mov
cltd
add
push
cli
or
ret
xchg
stos
add
mov
xor
sub
adc
loopne
xor
inc
push
int3
sbb
in
dec
xor
cwtl
bound
jle
fcompl
fsubrp
hlt
or
or
insb
test
jmp
scas
lds
aas
push
or
fs
js
jo
xchg
or
hlt
pcmpeqd
inc
fdiv
push
push
cld
insb
sbb
push
xchg
test
mov
pop
sbb
push
lea
add
in
cmp
jae
push
push
je
mov
pop
cltd
aad
lahf
cmpsb
mov
sti
jge
xchg
in
insl
xor
mov
aaa
jae
rcr
and
mov
hlt
add
out
mov
in
stc
mov
and
popa
enter
fldt
int
xorl
xor
xchg
and
jmp
dec
repz
mov
mov
sub
add
fs
and
pop
push
aad
adc
dec
loopne
sbb
mov
xor
dec
jae
push
fildl
sub
repz
lcall
xor
iret
stc
dec
mov
and
out
imul
jb
pusha
lret
mov
cmp
inc
std
popf
sub
mov
sbb
call
push
lock
and
cwtl
fcmovnbe
jg
testl
sub
xchg
pop
out
ja
jge
cmp
or
adc
sub
dec
sahf
pushf
in
mov
mov
push
gs
ljmp
mov
push
sub
pop
push
mov
mov
sahf
and
lcall
les
dec
pop
add
imul
ret
dec
cmpl
popf
xchg
sbb
mov
aas
fwait
sub
rclb
ret
cmp
xchg
fstl
mov
mov
xchg
out
aam
popl
mov
das
inc
pop
jno
push
and
cmp
ret
test
addr16
pop
cmp
ficompl
test
sarb
cltd
pusha
loop
dec
cmp
jbe
push
mov
dec
iret
or
mov
daa
test
outsb
sub
lods
mov
call
imul
pop
add
push
sbb
fsubp
lahf
xor
jae
cmp
sbb
test
cmp
sub
dec
sbb
sbb
ret
push
out
lds
movsb
mov
pop
fwait
sub
in
sub
add
sub
or
cmp
sbb
lret
push
mov
xor
jb
test
pop
stos
dec
lret
add
test
inc
aam
mov
pop
je
add
lret
test
testl
pcmpeqd
cli
sbb
fxam
add
jmp
outsb
mov
cs
xchg
jmp
out
movsl
std
rolb
adc
sub
push
push
sahf
enter
inc
add
fdivrp
test
push
int3
clc
iret
push
test
out
mov
icebp
jle
cmovae
inc
mov
pop
imul
xor
lds
test
cmpsb
pop
call
pop
scas
ret
add
clc
test
or
addr16
cmp
mov
in
add
daa
sbb
popl
push
mov
insb
test
insb
and
in
xchg
mov
fnsave
sbb
xor
fwait
enter
repnz
cli
xchg
fsubrl
pushf
mov
dec
int3
repz
mov
in
scas
mull
mov
lret
inc
stc
sbb
js
cld
pop
pop
push
xlat
jmp
push
pop
dec
push
and
dec
push
inc
jbe
inc
or
sahf
xor
mov
pushf
sbb
mov
adc
loope
or
jbe
add
insl
lods
or
mov
pushf
push
and
mov
sub
xchg
test
add
jl
out
push
xchg
and
mov
push
ficompl
mov
jnp
mov
cmpsb
xchg
mov
ss
in
sbb
push
or
cmp
cmpsb
repz
sub
call
pop
pop
mov
push
xchg
loop
mov
arpl
cli
pop
cmp
repnz
push
cmpsb
es
push
cs
sbb
std
cmp
cmp
daa
jno
mov
and
mov
mov
cmpsb
pop
jnp
iret
lcall
pop
out
push
mov
cli
scas
xor
lret
dec
dec
mov
add
in
mov
push
push
cmp
jg
dec
pop
lcall
and
sti
jge
mov
lret
in
mov
inc
dec
jnp
ret
inc
cmp
mov
cltd
or
cwtl
pop
mov
xchg
mov
imul
jb
or
xchg
cltd
lods
dec
xchg
rcrb
out
ficomps
sub
pusha
xchg
enter
xor
incl
inc
imul
push
rcr
xchg
cmpsl
mov
xchg
xlat
pop
mov
out
jl
or
inc
push
sub
and
sbb
mov
sbb
divb
jne
inc
jge
es
cmc
sub
push
cmp
pushf
sub
jb
test
inc
push
mov
stos
movsl
inc
leave
out
push
outsb
mov
cmp
je
push
pop
test
push
jb
jl
and
mov
test
adc
lret
addr16
sti
or
sub
xor
inc
aad
mov
push
and
daa
addr16
rcl
jmp
adc
sbb
or
in
push
and
sbb
fs
xor
xor
clc
loop
cltd
out
sub
sbb
inc
jle
aaa
dec
gs
mov
jae
push
push
pop
push
in
hlt
loop
jl
loop
xchg
std
adc
pusha
subb
and
xor
dec
into
push
pop
lcallw
fs
or
insl
test
mov
fstl
add
xor
subb
testl
pop
mov
gs
add
push
adc
out
mov
subb
and
dec
pop
roll
test
sbb
popf
in
add
in
push
inc
lret
fildll
mov
push
sub
fwait
das
inc
pop
inc
pop
or
jp
enter
inc
xor
pop
fcmovu
out
adc
andl
rorb
aas
mov
mov
insb
xor
int3
or
cmp
std
pop
cltd
lret
jle
and
sbb
add
add
ljmp
or
mov
pop
cli
fidivrl
add
sub
cmp
mov
or
mov
fiaddl
pusha
jbe
mov
pop
bound
stc
inc
push
or
pop
add
mov
cli
scas
ret
xlat
out
lahf
cmc
or
mov
jnp
out
mov
jg
std
jnp
pop
adc
pop
cmpsb
jae
sub
aas
mov
sbb
push
jle
int
ja
ja
sub
sbb
movsl
in
cmpsl
xchg
jb
repz
jbe
fmuls
lcall
test
nop
clc
and
pop
xor
jg
pop
jbe
cmp
out
and
xchg
iret
sbb
out
push
dec
sub
aaa
and
fildll
push
cli
push
jp
loop
push
ljmp
test
push
mov
jns
inc
push
pushf
xor
dec
pusha
js
push
cwtl
add
ja
in
cmp
xchg
ss
lret
fwait
jb
mov
xor
push
cmp
dec
pop
cmp
sub
xor
sub
scas
pushw
std
sbb
push
mov
jl
incb
adc
inc
mulb
lods
mov
push
in
lods
int3
pop
mov
mov
pop
mov
out
cmp
push
sbb
gs
adc
aad
jne
test
sub
xchg
int
push
in
dec
xchg
xchg
mov
or
push
ss
fcomi
in
outsl
callw
dec
mov
inc
subb
nop
xor
test
lea
mov
pop
jne
fcmovbe
and
dec
cmp
or
je
enter
and
pop
xchg
pushf
test
sub
ja
sbb
and
pusha
bt
add
add
call
stos
movw
lea
jmp
in
or
mov
push
ret
int
std
das
cmp
lret
jmp
xor
xorb
sbb
push
dec
rcl
clc
push
inc
jg
pop
insl
aas
lret
xor
fs
fldenv
daa
jge
pop
pop
cmpsb
clc
scas
xor
dec
or
cmp
and
js
sarb
fwait
or
clc
aaa
dec
lods
pop
aad
jmp
ret
xlat
push
into
push
mov
pop
push
pop
leave
and
dec
js
mov
lock
xor
nop
mov
adc
xor
scas
push
jns
mov
push
icebp
jae
mov
testl
push
pop
adc
add
out
mov
mov
fildll
sub
xchg
push
cmpsb
dec
adc
jns
sbb
arpl
rorb
dec
je
dec
cmp
add
stc
pusha
sti
mov
test
mov
imul
repz
xor
sbb
scas
leave
shll
ret
pop
frstor
inc
inc
push
sbb
mov
adc
pop
pushl
pusha
mov
mov
push
mov
inc
mov
pushf
mov
call
pop
dec
dec
js
into
test
sub
mov
push
out
push
push
and
inc
xor
dec
jg
xor
xchg
ret
pop
jge
lods
fistpll
dec
mov
push
pop
popf
out
dec
std
cmp
pop
xchg
int
icebp
cmc
sbb
mov
xchg
cmc
lods
lahf
pop
sub
hlt
pop
in
jge
test
dec
pop
imul
shlb
mov
ficoms
aad
xchg
mov
mov
push
ficomps
or
rcll
pushf
andb
sub
and
gs
and
cmpsl
or
inc
leave
jmp
mov
es
jbe
mov
in
shl
adc
push
and
lret
imull
js
out
les
and
push
orb
outsb
xchg
ds
call
pop
ret
ficomps
testb
inc
push
lret
adc
icebp
adc
shrl
loopne
ror
mov
mov
mov
rorl
test
jmp
ror
test
pop
fucomip
sub
aaa
shll
cs
sub
add
jl
or
pop
add
fs
sub
or
cmp
push
sbbl
and
data16
mov
dec
jle
mov
adc
addb
sti
cltd
push
bound
pop
mov
decl
cs
inc
dec
xor
fs
mov
sbb
add
or
jbe
and
lcall
popf
and
jmp
in
lret
dec
mov
jo
and
mov
sbb
push
mov
popf
lahf
mov
out
fucomip
std
mov
adc
sbb
dec
jns
sub
int
mov
dec
dec
cmpb
mov
adc
and
je
xadd
add
btr
btc
sub
shl
bts
btc
shr
btr
setbe
mov
mov
add
and
movzbw
add
add
movzbw
neg
neg
test
mov
clc
shr
clc
cmc
cmp
push
pusha
jmp
adc
pushf
xchg
lahf
mov
das
shl
daa
sub
sub
cwtl
stc
push
aad
bts
push
xor
daa
not
sub
push
call
mov
inc
addb
sbb
adc
sub
xor
inc
jo
mov
xchg
loope
arpl
inc
xor
lcall
pop
push
mov
push
leave
sub
testb
and
sbb
push
sub
add
push
xor
mov
pop
adc
sub
pop
outsl
mov
imul
push
lea
fisubrs
cmp
mov
sbb
mov
in
sub
push
orb
push
mov
push
test
sub
sub
pop
sub
cmpl
xchg
push
jb
lds
jp
mov
mov
and
dec
jnp
sub
stos
popf
pop
popf
pop
iret
xor
and
xor
mov
xor
pop
mov
inc
adc
adcb
jp
into
incl
cld
sbb
jnp
out
add
xchg
ret
lret
xor
scas
inc
pusha
adc
mov
call
cmpb
cmp
mov
xlat
add
push
addr16
mov
pop
jg
xor
xchg
movsb
stos
adc
cmp
test
ds
jge
mov
outsb
movsb
sar
insl
mov
xor
icebp
nop
pop
imul
pop
testl
data16
aaa
cmp
ja
inc
cmp
push
cmc
sbb
icebp
test
xor
push
cmp
mov
cwtl
and
sub
lahf
daa
sub
subb
out
or
movsl
aad
sbb
mov
sbb
pop
fistl
scas
ret
sti
mov
inc
pop
pop
js
shl
dec
push
push
lods
loopne
aaa
popf
push
jo
cmc
xchg
imul
jle
repnz
jmp
sbb
repnz
imul
xlat
lods
repnz
and
mov
das
test
xor
or
in
add
jb
adc
nop
mov
js
pusha
pusha
lahf
cmp
inc
je
scas
mov
mov
inc
in
int
push
ss
push
jp
imulb
inc
outsb
cmpsb
mov
sbb
mov
pushf
pushf
dec
stc
cmp
shl
not
lods
push
bt
call
test
daa
cmp
lock
loopne
adc
outsb
jl
shl
and
xchg
popf
sarb
mov
mov
push
xor
nop
xchg
adc
xor
into
push
mov
inc
xchg
movsb
pop
lcall
adc
jb
push
je
popa
insb
insl
mov
imul
cmp
mov
clc
add
xor
je
nop
rorb
lea
jb
pusha
pushl
ret
pushf
movsbl
mov
mov
pushf
lea
jmp
cmc
pop
mov
in
sub
xchg
dec
fistpl
test
adc
and
int3
xchg
sbb
pop
lea
jo
cmpl
adc
cmc
cltd
sub
jp
adcb
hlt
dec
jbe
add
aam
sti
or
in
cmp
adc
xchg
mov
mov
add
incl
add
mov
pop
jno
lds
and
bound
dec
je
mov
loopne
and
sub
and
incl
sar
bswap
in
idivl
pop
or
mov
dec
neg
lcall
loop
or
in
cmp
cld
cld
or
andl
mov
pop
or
call
stc
or
mov
daa
das
inc
test
cs
pop
loopne
loopne
mull
jge
fldcw
mov
out
sbb
es
ficoms
lcall
and
lea
div
call
out
adc
sbb
adc
mov
pop
and
cs
aad
sbb
jo
fs
mov
and
or
add
jge
dec
mov
iret
inc
lret
xchg
dec
lods
mov
add
adc
push
xor
or
add
jle
cmp
loope
xlat
cmp
push
push
xor
es
scas
cmpsl
lea
insl
insb
mov
int
aas
push
sub
js
xchg
mov
mov
sbb
inc
ret
push
xchg
xor
call
inc
inc
inc
dec
insb
cwtl
mov
xlat
popf
pop
xor
insl
insb
inc
jbe
pop
dec
pop
jo
pop
jl
inc
push
test
sub
bound
stos
mov
loop
sub
cmpsl
sbb
xlat
bound
aas
push
dec
fwait
cmp
addb
cmp
mov
push
mov
mov
sti
sub
inc
jg
rorl
jb
jle
pusha
pushf
xchg
adcl
bound
ss
xchg
sbb
ja
addr16
ljmp
cltd
cmc
movsl
sub
dec
mov
mov
dec
pop
mov
out
sub
bound
pop
scas
pop
ja
lds
push
pop
loopne
loopne
xor
dec
mov
mov
adc
in
add
les
inc
jb
sub
pop
jne
les
sbb
dec
pusha
je
js
shl
cmp
mov
sbb
cmp
xadd
dec
add
xchg
shl
rcl
sar
shr
shld
pushf
mov
shl
shr
xor
add
not
mov
lea
call
cs
dec
lea
push
or
outsb
mov
sub
subl
lods
xchg
stos
dec
or
cmpsb
leave
out
or
stos
cmpb
cltd
out
int3
jmp
jmp
dec
dec
dec
push
dec
iret
mov
push
lods
jcxz
adc
sbb
adcl
popa
subl
sbb
push
push
pop
fsubrs
in
sub
pusha
cwtl
mov
mov
sub
ljmp
clc
add
pop
pop
insb
jl
sub
cmc
sbb
jge
ljmp
popf
int
add
adcb
pop
pop
data16
cmpsb
movsb
into
in
repnz
ss
adc
aas
ror
jmp
call
out
movsb
mov
loopne
sub
popf
rcll
shlb
adc
cmp
mov
sarb
test
jbe
addr16
imul
jmp
jmp
leave
fabs
add
mov
xor
adc
mov
outsb
mov
sbb
cmp
mov
or
adc
cmp
xor
out
lret
sbb
ss
jle
mov
ss
mov
pop
jno
xchg
or
sub
inc
jl
xchg
mov
mov
das
pop
jmp
add
mov
adc
aas
push
mov
sbb
ljmp
ret
xchg
cmp
push
imul
int
add
inc
inc
sbbl
vmwrite
aam
jb
push
aam
or
loopne
cmp
adc
ss
inc
insb
dec
stos
push
push
mov
je
inc
mov
or
push
popf
stos
xchg
mov
daa
fdivrp
push
clc
push
jb
notb
mov
dec
fistps
push
insl
hlt
mov
pop
dec
mov
jns
scas
in
cmp
mov
repz
dec
jg
xchg
cmpsl
iret
xlat
or
inc
mov
push
mov
jecxz
pushf
sub
pushf
jmp
or
out
adc
sub
cmp
jno
lods
jecxz
sbb
fnstenv
mov
xchg
mov
aas
ror
xlat
mov
xor
xchg
sub
or
mov
data16
mov
sub
and
cltd
out
daa
jno
into
add
stos
jl
gs
loopne
sbb
cmpsl
pop
fldl2e
jl
jno
and
repnz
daa
cmp
add
mov
push
imul
adc
inc
xchg
ljmp
shlb
enter
insb
je
aam
cmp
insb
mov
test
sub
jbe
xchg
pop
inc
dec
dec
jae
mov
fucomip
cmc
adc
ja
cmp
push
inc
pusha
or
lret
xchg
jbe
scas
jle
add
and
mov
sbb
stc
addl
sub
push
jb
mov
sbb
fstps
stos
out
mov
xor
lret
aas
test
sbb
leave
fisttpll
dec
lea
jne
cmp
bswap
mov
stc
push
pushf
cmp
cmp
jmp
movl
pushf
mov
pushf
jmp
lahf
mov
sti
mov
pusha
data16
call
pop
pusha
mov
into
push
fbstp
xchg
pop
jg
pop
mov
xor
sbb
test
push
rcl
sbb
int
ljmp
jo
push
fnstenv
mov
rol
add
inc
jg
fildl
pop
inc
pop
imul
sub
jno
movb
movsbw
jmp
leave
insl
xchg
mov
cmpsl
pop
jmp
cmpsl
leave
fndisi(8087
fists
das
cmp
shl
es
sbb
fucomip
adc
mov
jnp
pop
inc
dec
and
ja
aas
and
addb
pop
sub
jecxz
push
loope
push
in
xchg
pop
ss
cld
xor
adc
cs
movsb
aam
pop
mov
or
gs
sbb
push
je
jl
cld
adc
mov
add
or
and
test
lea
jmp
pop
dec
dec
pusha
pushf
sub
push
nop
scas
out
or
xor
jo
test
adc
repz
and
rcl
add
dec
mov
mov
adc
addr16
add
push
pop
stos
nop
movsl
jge
lret
inc
shll
xlat
in
stos
adc
into
loope
pop
jecxz
mov
out
adc
sub
push
es
mov
mov
popa
jl
jecxz
pop
jge
cmp
jmp
stos
movsl
xor
add
sub
inc
dec
jle
scas
out
sub
in
sbb
lods
outsl
fisubrl
sub
jmp
lods
cs
insb
lods
out
jmp
sbb
in
lods
cwtl
sbb
sbb
jmp
insb
jmp
in
sbb
fidivl
insb
sbb
insb
lcall
outsl
xor
sub
adc
call
push
outsb
movsb
mov
sub
loop
mov
inc
pop
mov
pop
cltd
xchg
fcompl
jno
sub
cmp
scas
test
push
shlb
data16
mov
pusha
pop
pop
sarl
dec
jg
sbb
cmpsb
or
mov
loop
adc
mov
js
daa
jge
arpl
std
icebp
dec
push
dec
lret
mov
push
mov
cmpsl
mov
adc
xlat
mov
sahf
addr16
inc
hlt
sub
mov
xchg
daa
push
scas
mov
fwait
mov
xchg
mov
add
in
sub
ficompl
nop
stos
mov
fcom
add
cmp
mov
test
out
sbbl
cmpsb
popa
mov
testb
jne
dec
lock
mov
and
lods
fiadds
mov
ja
mov
movsb
and
mov
out
jno
mov
movsl
xor
test
icebp
cmc
sbb
popf
mov
fstpl
cmp
sub
int3
dec
jecxz
call
movw
lea
jbe
btc
bts
ror
bsr
mov
adc
stc
test
bsf
add
cmc
bsr
btr
push
mov
pushf
bts
bsr
bt
add
pushf
btc
movl
inc
shrd
rcl
mov
sub
cmc
test
test
cmp
push
lea
jbe
or
sub
movzbw
mov
push
stc
btc
mov
dec
jmp
add
cltd
movsl
in
mov
pop
mov
pop
cmp
jg
shl
das
sbb
cmp
roll
jmp
aad
ja
rorb
push
lds
lods
fs
inc
repnz
jbe
push
ret
mov
mov
jecxz
lret
jb
int
mov
sbb
push
movsb
movsl
sar
adc
push
push
insb
jl
call
insb
test
sub
sub
mov
inc
xchg
jge
sbb
cmp
cwtl
lcall
xchg
es
imul
jnp
xchg
ja
bound
outsb
sahf
test
inc
mov
loopne
mov
dec
in
into
iret
cmp
fcomip
xor
pop
sub
dec
mov
mov
inc
int
or
fimuls
push
pop
jno
js
mov
out
jbe,pt
mov
sub
arpl
and
call
stc
sub
jmp
call
clc
add
movb
push
push
mov
pushf
mov
push
pushf
lea
jmp
imul
sarb
sbb
mov
add
cmp
adcb
mov
mov
lock
jb
gs
mov
loop
push
int
xchg
loopne
pusha
adc
inc
lcall
data16
mov
mov
adc
in
adc
mov
lods
xor
cmc
int
mov
and
jmp
pop
dec
jge
cmp
cmp
gs
push
es
mov
pop
fldl2t
mov
cmp
test
jl
pushf
mov
add
add
adc
adc
aaa
inc
ja
mov
dec
jo
mov
inc
inc
outsb
stc
fwait
gs
pop
pop
jb
jge
jmp
inc
cltd
popf
ljmp
push
in
dec
dec
fisubrl
sbb
sub
lahf
and
jge
sbb
mov
imul
out
adc
and
mov
sahf
shrd
cmpb
addr16
aaa
jae
mov
repnz
jle
scas
mov
push
push
push
push
mov
push
leave
push
cmc
neg
jmp
jge
pushf
pushf
lods
bt
bt
neg
cmc
xor
jmp
stc
call
int3
jo
call
fisubs
rcr
out
clc
testb
insb
xchg
int3
cld
add
jecxz
mov
imul
rcr
sti
adc
jp
sbb
xchg
into
rcr
repnz
dec
insl
jne
mov
lahf
mov
xlat
ja
adc
push
cs
mov
dec
shlb
mov
lock
fsubp
enter
and
insb
outsb
test
xor
pop
and
adc
push
iret
inc
roll
jb
es
std
inc
adc
dec
test
mov
jb
imul
pushf
data16
jge
out
jg,pn
mov
mov
out
subl
icebp
flds
dec
dec
addb
xchg
xor
mov
cmp
mov
mov
mov
in
ds
aaa
or
fwait
adc
jne
out
xor
shrb
insb
or
add
dec
out
adc
xchg
push
lea
cmp
inc
mull
mov
dec
sub
inc
mov
jmp
imull
cmc
sub
jo
mov
sbbb
cmp
data16
scas
dec
test
mov
xchg
or
cmpb
aaa
addb
add
mov
sub
repnz
scas
fs
enter
add
push
mov
push
scas
incl
xchg
or
jbe
test
jns
movsb
add
lods
scas
scas
jg
imul
out
mov
aaa
test
mov
call
cld
push
jmp
adc
cmpsl
mov
cmpsl
out
ret
scas
insl
push
js
test
push
mov
sbb
push
pop
addb
test
jg
jg
lahf
outsb
popa
xchg
out
pusha
xchg
xchg
mov
pop
fwait
clc
aas
cmp
pop
lds
xchg
daa
cmc
xchg
xchg
test
repz
andb
mov
xchg
or
add
addr16
test
push
cmp
lods
jo
sub
push
addb
inc
and
bound
cwtl
sahf
xchg
nop
adc
nop
cmc
out
jno
inc
lcall
nop
jle
jg
push
jo
scas
or
adc
out
or
mov
and
mov
or
outsb
xchg
sbb
lcall
fistpl
mov
lock
je
dec
mov
out
inc
add
xchg
add
lahf
jg
ja
ss
loop
mov
rorb
push
insb
mov
xor
andl
jns
jne
cld
in
mov
and
sbb
add
outsl
add
subl
mov
add
fwait
inc
mov
in
addb
fwait
cmpsb
shlb
xchg
test
xor
xchg
and
outsb
and
push
aad
insb
shlb
xchg
jmp
jnp
add
fs
rcr
pusha
add
adc
sar
fbstp
jp
sbb
sbb
dec
sarb
rcr
pusha
adc
inc
dec
fsubrl
in
pop
test
xor
and
adc
andl
cltd
rorb
pop
dec
movsb
ja
xchg
aas
pop
mov
repz
daa
bound
dec
je
popa
jbe
cltd
shr
aas
mov
cmpl
sbb
bound
or
les
or
adc
daa
je
or
lea
or
and
xchg
xchg
mov
jns
pop
dec
addl
insb
ja
sub
cli
xchg
subl
js
xchg
daa
and
or
add
sbbl
divl
sbb
addl
push
mov
rcl
inc
jae
cmpsl
pusha
mov
or
dec
xchg
int3
jg
lds
xchg
or
das
and
dec
xchg
lds
mov
xlat
mov
mov
lds
push
dec
jmp
xchg
or
cltd
mov
cmpsl
push
jmp
sbb
ja
add
neg
sti
push
inc
jg
arpl
jp
test
push
insl
imul
in
dec
jae
popa
pop
sub
xchg
mov
sub
loope
inc
pop
cld
loope
js
stos
xchg
pop
xlat
mov
xor
dec
loopne
adc
inc
movsl
mov
inc
add
xchg
testb
mov
daa
inc
repz
xor
fsubs
lea
rorl
mov
rclb
sub
scas
inc
sub
pop
xchg
add
pop
mov
xor
fsubr
pop
xor
xor
sbb
adc
in
push
shl
mov
push
dec
in
ljmp
lods
outsb
pop
cltd
adc
insb
cwtl
lods
daa
jg
insb
std
inc
mov
out
inc
popa
cmpl
mov
lahf
cmp
jmp
out
pop
test
popa
ljmp
daa
cmp
cmp
stos
mov
lods
xor
clc
outsb
push
add
scas
movsb
sahf
andl
jo
loop
sub
xor
xchg
mov
ja
push
ja
loope
cwtl
mov
es
mov
jns
mov
dec
add
icebp
mov
lcall
pop
xchg
sahf
jns
inc
and
jb
lret
and
and
add
mov
jbe
fcoms
fs
in
or
add
mull
inc
or
ficoms
fs
and
int3
popaw
inc
inc
mov
mov
xchg
rclb
fs
push
or
add
mov
cmpsl
pop
and
bound
lahf
shll
lahf
xchg
movb
loope
pop
movsb
and
jp
orl
jge,pn
movsb
xchg
repnz
pop
push
push
pusha
sbb
and
lcall
cltd
jns
inc
push
mov
loop
into
pop
fs
dec
or
add
mov
ret
fsubl
push
pushf
shl
and
or
pop
and
bound
sbb
pusha
std
xchg
sbb
addb
pop
dec
push
pusha
fwait
adc
outsb
push
fwait
loopne
bound
dec
outsb
mov
sbb
add
ffreep
and
and
xchg
inc
and
xchg
out
inc
fwait
push
notl
inc
add
fcomps
push
mov
push
xchg
loopne
loope
fidivrs
inc
fs
mov
rcll
and
cwtl
inc
mov
dec
scas
sbb
scas
mov
daa
imul
shrl
aas
push
int3
pop
inc
jne
pop
xlat
scas
sub
pop
fadds
add
cmpsb
bound
scas
insb
and
dec
aas
cmc
and
or
test
add
std
xor
iret
push
lds
and
addb
dec
pusha
into
lods
adc
ficomps
mov
and
mov
and
loope
daa
mov
aaa
sbb
pushf
pop
mov
out
and
jge
mov
out
jmp
jecxz
xchg
cli
pop
jne
inc
scas
inc
mov
pop
popf
mov
lahf
out
or
adcb
sbb
orl
inc
call
outsl
jg
imull
adc
in
xlat
push
add
out
add
xchg
mov
dec
aam
mov
jno
xchg
cmpsl
mov
loop
mov
stc
or
scas
and
mov
notl
mov
mov
fistpl
mov
jg
sti
inc
aaa
lahf
mov
fs
dec
jnp
add
mov
cmpw
mov
repnz
adc
jno
sti
addb
jp
les
add
fcomps
push
mov
fwait
test
jae
orb
push
mov
and
sarl
ljmp
xor
fs
pop
mov
loope
into
and
adc
insb
inc
xor
cmpsl
sub
lock
xchg
shll
adc
out
xchg
dec
pop
mov
inc
jle
nop
movsb
bound
loop
stc
icebp
adc
pop
push
mov
mov
push
outsb
xchg
push
ficoml
add
imul
push
in
sysret
lret
adc
jge
xor
mov
je
sbb
push
and
popf
push
and
xchg
hlt
or
pop
test
mov
das
adc
es
add
lds
outsl
xor
addl
cltd
fidivs
jae
xchg
cld
ss
stos
test
push
or
les
sti
sbb
mov
adc
das
enter
pop
ret
mov
or
popf
adcb
fisttps
stc
adc
xchg
mov
fs
adc
jp
cmp
xor
dec
lock
movsb
insl
push
out
mov
pushf
rol
fidivrs
mov
mov
leave
test
dec
push
test
clc
out
aaa
jnp
ds
lcall
and
xchg
inc
fildll
push
or
cmpsb
jp
pop
std
xchg
inc
mov
or
adc
fwait
test
sub
orb
mov
or
cmp
cltd
adc
insl
or
ljmp
shll
xchg
and
fidivrs
xchg
jg
jae
outsb
jge
mov
mov
ret
push
repnz
dec
sbb
les
jge
repz
addr16
fwait
dec
pop
ja
adc
int
jnp
jne
cmovbe
out
mov
xchg
add
sbb
push
addr16
xchg
inc
sbb
lock
xchg
sub
arpl
je
shll
inc
nop
add
xchg
outsl
bound
shr
stos
and
or
aam
cmpsl
jbe
ret
add
and
repz
or
jge
pop
xchg
add
pop
inc
sbb
mov
sbb
movsb
push
jl
dec
test
and
jp
ds
and
adc
adc
inc
fbstp
mov
jb
dec
movsb
adc
xchg
pusha
xchg
and
ret
mov
pop
xchg
in
out
jg
add
mov
adc
xor
lcall
inc
js
or
add
enter
pop
jns
cmovl
gs
into
mov
and
mov
test
xchg
cwtl
test
leave
insl
cmovl
xor
add
push
push
and
outsb
push
orl
arpl
and
movups
sbb
test
insb
sbb
xchg
push
dec
arpl
sbb
adc
pusha
lods
outsb
or
or
inc
je
fdiv
dec
icebp
je
adc
je
add
pop
add
mov
push
pop
and
add
jecxz
je
add
call
shl
pusha
test
jecxz
pop
ret
sub
stc
movsb
push
mov
push
push
xchg
bound
iret
xchg
inc
cmc
jo
repnz
in
fldenv
jmp
xor
outsb
sbb
sbb
jns
sbb
pop
std
or
xchg
cmp
cmp
inc
daa
popl
je
push
push
sub
repz
arpl
inc
stos
and
push
cmc
lods
cmp
mov
add
sahf
or
sbb
outsl
lcall
jp
ja
daa
or
dec
cli
jecxz
xor
roll
lahf
cmp
adc
lds
sarl
cltd
cmp
mov
fs
imul
adc
adc
aam
mov
inc
pop
xchg
into
cmp
shll
popf
lods
outsb
jge
daa
push
roll
subb
sbb
stc
and
xchg
or
frstor
lahf
jno
xor
sub
mov
xchg
test
mov
inc
lea
insl
mov
xchg
stos
lds
adc
subb
dec
sbb
add
dec
pop
js
mov
push
dec
dec
aaa
js
fdivr
jp
add
aaa
add
pop
xchg
popf
test
adc
pushf
fcmovu
sti
dec
dec
add
jp
enter
int3
xor
cltd
adc
xchg
adc
or
add
lret
test
xchg
adc
adc
push
out
or
mov
xor
lcall
mov
xor
inc
icebp
xor
and
add
and
out
cmp
cwtl
cmc
mov
pop
cmp
daa
aam
sub
stc
pop
and
xor
dec
fs
daa
les
xchg
inc
mov
into
test
test
les
jmpw
arpl
or
mov
fsubs
bound
sbb
int
pop
push
sahf
imul
decl
cmp
or
movsb
xchg
cmp
or
test
sti
and
dec
jle
ret
inc
xchg
or
jo
in
dec
lea
pop
pop
adcl
out
jmp
ja
jno
pop
fsubs
divl
xor
popa
outsl
data16
movsb
lahf
push
push
inc
sahf
test
xchg
test
xchg
ror
mov
mov
xchg
dec
cmc
pop
loop
sbb
cwtl
jge
fildll
xor
mov
pop
and
mov
cmpsl
cmc
mov
nop
and
push
add
jl
inc
inc
mov
mov
rorl
clc
addr16
int3
push
mov
jge
and
js
add
pusha
pop
js
cmpb
cmpl
xchg
xchg
fdivrl
and
adc
dec
sub
loopne
aam
pop
loopne
mov
in
add
and
and
sbb
push
loopne
mov
mov
cli
or
pop
aaa
mov
jns
sbb
movsb
add
pop
xorb
lcall
push
icebp
and
mov
lahf
sti
pop
outsb
subb
enter
daa
dec
insl
popa
test
das
mov
mov
mov
sbb
jl
roll
dec
lahf
and
cli
push
mov
call
test
sbb
mov
pop
jne
push
rolb
sub
les
pop
rorl
fldt
jge
inc
push
leave
icebp
push
mov
pusha
lcall
jmp
pop
cs
hlt
out
repnz
and
subl
outsb
sub
pop
arpl
aam
stos
icebp
pop
mov
xor
or
xchg
sbb
popa
ret
mov
les
xchg
pop
and
fisttps
cmp
xor
inc
xchg
mov
xchg
loopne
movsl
push
cld
push
outsb
add
inc
mov
xor
pop
mov
jo
sbb
cmpb
pop
repz
nop
xchg
lahf
fwait
pop
jg
loopne
xor
xchg
or
pop
adc
mov
jno
jmp
fwait
fs
pop
or
lea
push
add
pusha
sub
pusha
test
ss
jge
and
adc
pushl
jle
sbb
call
out
sub
daa
bound
cmpb
push
pushf
in
leave
xor
sbb
jns
inc
or
or
insl
jmp
imul
out
sub
inc
mov
movsl
xchg
add
inc
daa
sbb
or
cmpl
adc
jae
and
add
fisttps
and
xchg
jnp
mov
enter
add
sarl
push
stos
adc
push
arpl
mov
adc
outsl
xchg
mov
in
cmpsl
mov
hlt
mov
std
or
jl
int
inc
mov
inc
push
lock
sbb
movsl
jb
cmp
pop
xlat
push
mov
in
addr16
jb
arpl
sbb
push
mov
imul
cmp
iret
cmc
arpl
xchg
xchg
ficomps
and
aas
test
xchg
push
xchg
jg
cld
xchg
testl
xchg
lds
xchg
mov
cmpl
xchg
rcrl
inc
mov
mov
cmp
pusha
mov
rdtsc
add
pop
frstor
popa
lds
inc
fidivl
pop
cmc
jp
sbb
and
mov
pop
pop
popf
fsubs
mov
lea
ljmp
lret
les
cmp
aaa
fadd
inc
dec
xchg
adc
xchg
jae
dec
mov
inc
mov
ja
cmp
lret
jnp
outsb
mov
inc
xor
adc
dec
out
push
cwtl
mov
into
inc
mov
imulb
add
rcrl
or
mov
ffreep
sbbb
rclb
testl
dec
xchg
test
shr
sub
aaa
xor
and
push
adc
data16
pop
dec
push
jo
aam
inc
add
adc
bound
push
xchg
adc
movl
popa
mov
cmp
sbb
jbe
int3
repnz
adc
xchg
test
shl
mov
jae
dec
mov
imul
jb
mov
add
ficoml
xchg
dec
mov
repnz
or
mov
jns
fwait
ret
adc
fcoml
inc
jecxz
mov
and
pop
pop
xor
jl
jne
mov
aas
adc
adcl
jbe
ret
cmp
jb
roll
xchg
flds
xchg
adc
inc
icebp
aaa
test
int
int
cmpps
mov
orb
dec
push
push
testl
lods
xor
xchg
in
js
push
pushf
xchg
cs
sarb
loop
or
loopne
push
adc
fwait
or
adc
add
dec
inc
sbb
inc
mov
jge
mov
cmpsl
popf
orb
dec
xor
loop
mov
mov
lods
roll
push
lea
jge
sub
xor
adc
and
xchg
stos
lds
stc
mov
leave
cmp
cwtl
and
pop
shrb
mov
push
push
jl
loop
jp
das
push
popa
nop
adc
test
int3
sbb
std
sub
xchg
dec
dec
inc
lea
xchg
cs
mov
mov
mov
push
test
mov
xchg
jge
mov
dec
pop
inc
sbb
popa
jnp
lods
test
in
add
aaa
sbb
int
pop
mov
lea
mov
adc
xchg
movsb
testl
mov
aaa
and
inc
adc
adc
push
and
xchg
lods
faddl
int
xchg
fs
jne
ret
mov
xchg
cs
cs
push
add
jg
sbb
sti
addr16
loopne
es
je
xlat
add
cli
add
mov
in
cltd
sbb
fwait
xor
xchg
hlt
sbb
mov
push
mov
movsl
into
aas
mov
cmpsb
in
cmp
repnz
sbb
mov
sub
idivl
lods
xchg
lcall
jecxz
pop
inc
or
hlt
adc
and
push
movsl
sbb
arpl
outsl
dec
add
mov
out
inc
mov
outsb
sbb
insb
jb
sarb
orl
cmpsl
pop
mov
aas
das
arpl
sbb
adc
rcrl
mov
adc
sub
push
das
push
inc
jg
ret
icebp
add
xchg
out
dec
bound
sub
or
xchg
cmp
jnp
popf
push
repnz
sbb
movsb
and
dec
pop
mov
xchg
lea
xchg
xchg
hlt
insb
mov
movsb
les
clc
fildll
mov
adc
xchg
pop
pusha
pop
xchg
addl
leave
js
iret
js
or
dec
adcb
adc
inc
js
and
outsb
or
adc
dec
loope
sets
hlt
es
cwtl
sbb
sbb
outsb
fs
xchg
mov
mov
sti
leave
sbb
push
aas
add
out
dec
mov
jb
pop
sbb
cmp
push
ljmp
and
int3
jbe
mov
insb
les
and
mov
cmp
xchg
repz
aaa
bound
inc
cmpsb
popl
jmp
into
fdivs
cmp
out
fmuls
and
push
dec
popf
fcomps
sahf
outsb
mov
pop
popf
and
dec
clc
les
clc
insb
push
clc
movsb
fs
jae
sbb
fldenv
add
adc
daa
pushw
inc
push
xchg
mov
xchg
adc
icebp
adc
push
and
or
inc
fs
sbb
add
mov
dec
xor
outsl
pusha
xchg
pop
jmp
loope
fisttpl
rcr
xchg
enter
push
adc
push
in
sbbb
fdivr
pusha
cwtl
push
sbb
pushf
push
loopne
sbb
mov
xchg
std
pop
push
adc
pusha
inc
jne
and
jne
add
jne
out
arpl
lcall
es
jne
addb
outsb
sbb
and
lods
lds
hlt
jmp
mov
ljmp
xor
xchg
xlat
imull
dec
fistps
mov
xchg
adc
xchg
enter
xor
xchg
xor
mov
inc
aad
and
mov
xchg
mov
dec
or
pop
push
ret
hlt
shll
mov
xor
gs
mov
aad
jne
aad
jnp
adc
xor
loopne
push
add
sbb
aaa
add
arpl
jmp
repnz
fs
pop
adc
add
mov
xchg
ja
xchg
fisttpll
std
mov
leave
loopne
xchg
adc
and
adc
dec
rcr
xchg
out
xchg
in
shlb
or
pop
sbb
repnz
pusha
ss
cmp
mov
pusha
pop
popf
jns
inc
je
push
les
push
inc
xchg
shll
cvtdq2ps
fs
sbb
push
jp
movsb
bound
pusha
je
data16
xchg
xor
sub
cmp
rcrl
jmp
xchg
gs
daa
orb
push
jmp
and
adc
divl
push
ss
gs
out
daa
xchg
xchg
xor
and
add
adc
or
inc
fs
sbb
add
repnz
mov
or
push
sar
jbe
jl
and
xchg
divl
push
and
dec
and
popl
ljmp
shl
sbb
mulb
pop
es
push
insb
arpl
jnp
test
sbb
lods
sbb
rcrb
insb
push
sbb
inc
and
inc
push
int
xchg
test
mov
cli
pop
sbb
xchg
jns
cmp
jg
mov
movsb
or
fistps
sbb
push
mov
xchg
jnp
xchg
pop
mov
cmp
sbb
jnp
jp
add
jnp
mov
fwait
xor
sub
push
daa
and
adc
incb
mov
daa
dec
jg
test
int
inc
inc
addb
sbb
push
andb
jecxz
mov
mov
and
fwait
or
add
movsb
adc
adc
fwait
xchg
loopne
fwait
sbb
fwait
out
cmp
add
pop
icebp
into
hlt
push
bound
insb
je
les
mov
xchg
mov
xchg
cwtl
loop
jb
movsl
xchg
test
stos
gs
adc
fistl
inc
idiv
mov
dec
or
out
inc
push
dec
xor
sbb
dec
xor
call
mov
push
addr16
jecxz
scas
sti
mov
fwait
shl
mov
bound
push
scas
jns
mov
sti
jge
mov
or
pop
mov
mov
loope
decl
cmp
pop
fnstcw
and
bound
dec
dec
or
sbb
mov
jg
leave
sbb
push
adc
enter
dec
pusha
int
sahf
incl
jb
push
and
sbb
clc
je
pop
and
or
ficomps
inc
cmp
dec
mov
fimuls
cmp
mov
movsb
adc
mov
cmp
xchg
and
cmp
fstl
or
ficomps
cs
xchg
xor
pop
sbb
pop
fimuls
pop
push
lahf
pop
loope
fldl
pop
bound
frstor
sbb
stos
mov
push
call
sub
out
jl
jmp
shlb
or
mov
mov
adc
xchg
aad
dec
jmp
adc
dec
push
loopne
mov
cmpsl
xor
xchg
pop
pop
mov
lcall
stos
pushf
inc
mov
xchg
fs
pushf
cmp
sbb
jecxz
fdivs
sti
xchg
mov
mov
xchg
xor
dec
push
int3
add
cltd
cld
or
icebp
jbe
mov
pushf
mov
or
xchg
push
pusha
mov
jne
icebp
cmp
dec
push
ror
pop
pop
mov
adc
rcr
or
mov
outsl
js
movshdup
lcall
fdivrl
jecxz,pt
mov
mov
mov
mov
test
mov
cltd
jmp
mov
jmp
gs
jg
jb
bound
mov
lea
adc
add
cmp
push
mov
scas
mov
cwtl
xchg
sbbb
pusha
jnp
mov
sbb
or
lea
jns
je
cs
int3
or
xchg
test
jmp
or
mov
std
adc
add
and
or
aad
mov
pusha
enter
adc
sti
push
adc
or
adc
mov
je
push
test
pop
in
loope
pusha
mov
or
and
sbb
into
push
in
dec
dec
push
and
adc
pusha
sbb
ljmp
fwait
mov
mov
push
pop
stos
jge
adc
jle
cmp
lret
add
or
mov
push
mov
mov
push
loopne
jbe
mov
inc
push
popa
daa
cld
add
mov
hlt
into
pop
push
fnstsw
jns
mov
aad
push
faddl
int
fsubl
scas
mov
sbb
mov
cmc
dec
rol
std
cmpsl
inc
stc
inc
and
push
or
sub
pop
mov
jle
pop
fwait
rclb
push
fs
pop
frstor
push
xorl
daa
and
and
push
cwtl
inc
inc
ficompl
pop
jecxz
test
fs
in
insb
stos
std
mov
mov
xor
mov
dec
scas
shll
scas
dec
mov
sbb
push
jnp
mov
es
cltd
rolb
stc
push
aad
mov
pop
dec
repz
jecxz
test
shrl
and
cltd
lods
insb
sbb
notl
aad
les
sub
scas
pusha
mov
mov
imul
cmc
or
push
lods
loop
xchg
lcall
outsb
mov
es
push
xchg
or
jecxz
fmul
sti
mov
call
mov
push
imul
inc
lahf
fdivrl
xchg
fnstenv
mov
cmp
xchg
iret
sbb
adc
incl
push
mov
ret
push
movsb
fyl2xp1
notb
movsb
inc
insb
sbb
inc
mov
icebp
inc
jno
push
inc
sbb
push
lods
inc
lock
jle
sub
mov
push
out
add
pop
push
inc
push
pusha
push
fdivp
xchg
dec
cwtl
xor
adc
fimull
adc
fmuls
int3
pop
sbb
stc
sbb
xchg
idivb
xchg
js
push
sub
sbb
fnstsw
add
pop
sbb
adc
and
push
sbb
and
lods
sub
ret
lods
jns
cli
fbstp
jbe
into
fbstp
je
push
in
sub
adc
inc
sbbl
sbb
sub
and
mov
cmpb
in
xor
or
mov
cmp
adc
mov
push
sbb
fwait
xlat
fisttps
fwait
and
popf
xor
and
pop
mov
inc
push
and
and
adc
and
xchg
push
pop
or
cmpb
push
pop
push
repnz
test
pop
add
xorb
imul
pop
xor
dec
addb
loop
mov
shrb
cmp
jmp
daa
cmpsl
pop
fsubs
hlt
sub
jl
scas
ret
cmp
cmpsl
pop
pop
movntps
ja
xor
mov
cmp
adc
sarb
mov
add
dec
adc
xor
cmp
mov
xchg
xchg
mov
add
fcoml
sub
lea
adc
pop
in
add
inc
sbb
add
jb,pt
push
sarl
dec
out
mov
mov
cld
push
xor
push
faddl
xchg
test
pusha
dec
aas
aas
pusha
fwait
xchg
icebp
jo
mov
dec
loopne
mov
bound
dec
xchg
cmp
call
out
test
testl
outsl
or
push
mov
mov
inc
repz
adc
rol
push
das
ljmp
sbb
mov
fldenv
rcll
aaa
in
mov
xchg
xor
and
xchg
adc
fcomps
fidivs
dec
fidivrl
or
pop
inc
lea
pop
mov
jmp
jbe
stos
inc
mov
inc
mov
or
orb
scas
cli
inc
and
xchg
rol
jb
and
dec
bound
inc
arpl
loopne
lahf
xchg
mov
mov
popaw
daa
cmp
sbb
xor
fsubl
xchg
sbb
or
fwait
shl
loopne
inc
fdiv
pop
sbb
fwait
fwait
pop
aas
lods
ficomps
adc
dec
xchg
jecxz
negl
mov
inc
mov
pusha
add
adc
les
pop
mov
pusha
ret
test
inc
pop
or
xor
cmpsb
bound
jg
call
lahf
xchg
cld
loope
cmp
dec
and
mov
mov
cld
push
pop
mov
shlb
mov
pop
sbb
mov
inc
or
loope
push
inc
leave
fisttps
outsl
les
add
lea
dec
jns
adc
mov
fwait
mov
dec
sbb
or
sbb
sti
push
dec
das
scas
loopne
das
or
jae
add
and
mov
pop
insb
jmp
push
fs
orl
lcall
cmp
ds
push
sub
fwait
xchg
mov
inc
pop
hlt
sub
fs
or
pusha
andb
scas
bound
loopne
push
sub
mov
pop
xlat
inc
mov
test
mov
and
pop
pusha
xor
loopne
push
pushf
mov
add
addb
cmpb
in
adc
push
inc
fnsetpm(287
adc
repnz
or
in
mov
add
test
mov
pop
sbb
mov
inc
and
pusha
test
add
popa
shl
or
shlb
in
js
cmp
and
mov
add
sbb
add
mov
cmp
and
int3
and
sbb
mov
add
ficoml
je
inc
cmp
lods
les
cmp
xchg
cmp
push
adc
xchg
add
or
sbb
inc
or
mull
mov
xor
loopne
daa
mov
inc
cltd
leave
shlb
out
imul
or
mov
outsb
int3
adc
shrl
cmpb
pop
jecxz
dec
popf
inc
adc
popf
mov
and
or
bound
out
int3
push
and
or
popf
add
push
mov
push
addb
data16
mov
andb
stos
fldl
test
fisttps
fs
mov
fwait
push
sub
std
fstp
fs
and
aaa
pusha
fadds
xchg
inc
jns
inc
bound
imul
and
push
fdivr
movsb
xchg
adc
mov
mov
in
negl
loop
loope
add
cmp
out
inc
mov
daa
insb
sbb
ret
push
ret
ds
ds
ds
dec
test
mov
pop
repnz
cltd
clc
pop
testl
in
je
xor
repnz
fwait
and
push
sar
popf
jno
mov
out
jle
fs
cltd
sarb
push
push
jle
pusha
sbb
pusha
ljmp
xor
aaa
loop
icebp
out
daa
add
movsb
jno
sbb
mov
push
mov
cmp
mov
pop
mov
xchg
int3
pop
mov
xchg
jl
in
pusha
sub
fsubs
add
mov
repnz
fwait
pop
mov
push
add
xor
mov
pop
hlt
loope
in
sbb
or
sbb
push
or
out
loopne
inc
addr16
adc
xchg
testl
add
cmp
dec
popf
mov
add
imull
popa
pop
iret
adc
xchg
andl
or
addb
adc
pusha
and
xlat
cmpsl
lahf
mov
mov
mov
and
lret
inc
add
leave
es
les
cmp
push
jge
ja
pop
pop
pop
repnz
mov
pop
push
jne
xchg
mov
sbb
inc
mov
xchg
pusha
xchg
pusha
es
mov
push
dec
adcb
sub
dec
mov
fldenv
mov
daa
pop
xor
jns
lret
les
xchg
or
xchg
and
into
bound
ret
gs
pusha
mov
loope
mov
mov
sbb
or
push
jns
sbb
jbe
daa
xchg
mov
sub
mov
dec
or
mov
pusha
sub
sar
leave
mov
ret
mov
mov
cltd
ret
sub
rcll
ret
xchg
leave
adc
push
mov
adcb
sti
jecxz
inc
mov
bound
inc
arpl
cwtl
fwait
adc
jns
fldenv
fsubs
jne
push
xchg
pushf
push
std
jb
je
scas
les
and
push
sub
lcall
jnp
pop
in
mov
repnz
sub
mov
add
outsl
shlb
lds
pusha
and
add
loope
mov
outsl
cmpb
xchg
mov
in
add
leave
push
inc
jl
movsl
pusha
push
mov
fsts
and
xchg
pop
add
std
and
movsb
and
test
mov
cmp
andb
sbb
mov
enter
repz
cltd
movsl
fs
fstpt
subl
cmc
push
push
inc
mov
dec
fs
fdiv
sbb
mov
imul
in
popf
cmc
out
xlat
fs
pop
popa
rolb
shrb
ja
xor
daa
mov
insl
ret
pop
mov
mov
and
cmp
xor
jae
mov
sbb
cmp
std
int3
outsb
mov
add
int3
fmuls
push
push
in
decl
arpl
xchg
pop
movsl
andb
mov
sbb
inc
cmp
out
mov
movsb
aad
pop
js
ds
insl
pop
test
xor
adc
xor
push
sub
cmpl
and
and
jb
loopne
test
mov
daa
in
jb
test
pop
and
cmp
push
pop
mov
shll
jmp
fs
pop
and
fs
mov
add
out
or
pushf
and
mov
negb
scas
loopne
jne
cmc
jnp
lock
push
in
lret
cltd
inc
shlb
xchg
xlat
jns
pop
push
add
inc
fwait
adcl
cld
push
test
mov
lods
pop
mov
lahf
ja
in
pop
xchg
xchg
arpl
insl
scas
stc
or
outsb
fiadds
or
cmpl
xchg
mov
bound
cmp
mov
add
in
and
adc
dec
mov
jo
mov
mov
shll
add
shll
cmp
cltd
push
add
out
sbb
fisubrs
out
bound
and
push
fnsave
loop
daa
test
pusha
and
sbb
inc
push
out
mov
insb
bound
testl
jmp
addb
jl
ss
setnp
orb
imulb
fidivrl
sarl
sub
push
pop
js
mov
daa
adc
mov
cli
add
push
je
inc
popl
pop
stos
xor
push
mov
add
sbb
cli
pop
repz
add
mov
inc
popf
push
xor
sahf
cltd
xchg
bound
ss
call
mov
insb
push
mov
ljmp
out
fnstcw
pop
mov
sarb
je
ret
sbb
pop
push
push
push
cltd
push
push
clc
mov
movsb
adc
inc
lods
mov
and
sbbl
push
xchg
adc
and
fs
sbb
mov
mov
iret
repnz
sbb
add
inc
mov
aaa
mov
pop
mov
cmp
xchg
add
jae
xchg
sub
cmc
xchg
rol
aad
ljmp
dec
shl
or
pop
add
adc
ret
xchg
dec
dec
rcll
pusha
mov
sbb
xchg
scas
loope
pusha
in
data16
loope
adc
pusha
mov
adc
dec
add
and
mov
sbb
mov
imul
and
sbb
notl
push
push
and
pusha
mov
cmp
cmpb
sub
clc
inc
je
inc
inc
insb
lock
ret
mov
dec
ffree
and
aas
adc
xchg
mov
xchg
outsb
rolb
fsubl
test
repnz
mov
push
xchg
adc
bound
pusha
arpl
push
gs
xchg
cli
pop
or
xchg
int
push
adc
push
sbb
add
push
cmpb
add
sbb
xor
repz
push
xchg
inc
test
mov
cltd
movsl
sbb
add
push
xchg
push
mov
fs
inc
loope
shrl
mov
outsb
shlb
xchg
ret
int3
ret
daa
orb
ret
xor
sbb
sbb
dec
xchg
roll
or
xchg
insl
loop
and
mov
fs
loop
fs
loop
mov
sbbb
and
pop
lds
in
iret
adc
pusha
pop
icebp
pusha
pop
push
rol
fs
or
ds
es
dec
daa
inc
xchg
repnz
or
mov
cmpsl
and
fcomip
xchg
shlb
mov
bound
out
inc
or
fists
xchg
adc
pusha
inc
push
xchg
shll
fbld
dec
xchg
cltd
insl
notl
mull
jb
aaa
inc
lea
xchg
mov
xchg
lds
inc
fs
pop
popl
sbb
xchg
ds
roll
pop
repnz
je
aad
jbe
fs
cmpsl
sbb
jp
daa
andb
and
pop
int3
in
out
sub
into
cmp
xchg
icebp
notl
ret
movsb
xchg
jmp
xchg
sbb
adc
mov
mov
and
add
pusha
and
sbb
jp
pop
ljmp
mov
in
add
xchg
sbb
jge
es
shlb
fadd
xor
subb
bound
test
repz
dec
ljmp
data16
or
imul
ljmp
and
rcl
adc
or
pop
fs
orb
outsb
stc
mov
aaa
mov
mov
icebp
pushf
mov
sub
sub
and
fs
dec
and
pop
xlat
mov
and
dec
scas
aam
jne
ret
dec
inc
mull
push
mov
mov
fld
push
push
stos
cmp
or
push
testb
push
dec
add
mov
dec
dec
cmp
popf
mov
not
fcomip
jne
mov
std
andb
jae
stos
xchg
jmp
loope
adc
adc
clc
mov
cmp
lret
mov
aam
jmp
fsubrp
sti
inc
push
test
jecxz
jg
sub
lods
mov
insl
fcmovne
cmpsb
fsubrp
pusha
xchg
and
jmp
fstpt
mov
and
pop
push
xchg
mov
testb
sub
insb
clc
xchg
jno
xchg
mov
jne
push
sbb
sbb
and
aad
and
inc
jnp
pusha
fs
and
mov
bound
call
mov
notl
fs
mov
std
inc
jecxz
mov
mov
sbb
add
ljmp
jnp
jns
jbe
xchg
mov
sub
shll
pop
clc
xchg
hlt
and
sti
pop
xor
and
or
and
and
fs
and
inc
push
nop
inc
sbb
add
pusha
inc
push
mov
aad
into
inc
in
flds
or
mov
xchg
sub
mov
outsl
push
insb
shlb
mov
sbb
shll
sbb
inc
pop
or
out
aad
lds
dec
or
sbb
outsb
mov
les
test
mov
cmc
adc
test
fs
mov
xchg
lea
xchg
jb
jb
adc
add
sti
cmp
fistl
xchg
adc
out
ja
sub
loope
mov
sbb
adc
mov
adc
mov
cmpsl
inc
or
xor
adc
sbb
in
inc
or
incb
shll
nop
movsb
pop
test
push
adc
add
pusha
push
mov
clc
jb
inc
jl
pusha
xchg
mov
inc
or
mov
and
fs
mov
fs
or
add
es
push
sbb
adc
dec
add
xchg
leave
and
outsl
inc
ret
pop
test
and
sbb
adc
call
pusha
daa
dec
jmp
pop
mov
sbb
cltd
repz
dec
loopne
andb
fs
sbb
and
dec
xchg
scas
daa
subb
jo
mov
sti
mov
inc
daa
clc
jb
data16
ret
sbb
and
and
cmpsb
adc
dec
notl
or
xchg
ds
and
ud2
dec
sub
mov
jecxz
movsb
int3
mov
enter
cs
dec
or
xchg
dec
lods
shll
fs
jns
mov
sub
es
int
or
out
pusha
movsb
pop
ss
and
out
lcall
fsubs
dec
cli
movsb
pop
sub
sbb
or
pusha
push
adc
mov
fs
lds
and
pop
sbb
and
sub
jg
mov
cmpsl
mov
loop
and
pop
and
and
add
adc
inc
xorb
insb
hlt
dec
inc
mov
dec
inc
inc
cmp
fistpll
in
pop
ret
mov
sarb
daa
xchg
into
clc
xchg
stos
imul
imul
pusha
mov
lock
negl
loopne
mov
mov
imul
pusha
or
xor
inc
jge
mov
xchg
adc
test
push
adc
pop
das
xchg
mov
sbb
pop
je
shlb
popf
mov
inc
push
mov
movsl
stos
std
enter
xchg
repnz
dec
add
adc
mov
decl
enter
cmc
enter
sbb
mov
xor
hlt
pop
mov
xchg
negl
jl
stos
les
out
bound
and
test
insb
dec
xchg
movsb
inc
jmp
int
loope
xchg
inc
out
loope
jnp
sbb
jg
mov
xchg
add
and
jmp
inc
cmp
adc
dec
out
loope
mov
jmp
mov
or
xchg
inc
int
scas
inc
outsb
sub
mov
sbb
mov
fs
movsl
and
mov
pushf
in
or
stc
addr16
xchg
scas
xor
sub
jae
les
push
add
fcomp
into
cs
test
add
cmp
in
mov
add
sub
pop
lods
imul
mov
push
push
loop
fs
daa
fldenv
dec
push
mov
int
jge
or
or
cli
fs
or
add
bound
fcom
das
call
dec
pop
mov
push
push
sbb
mov
xor
dec
and
pop
stc
sbb
and
daa
outsb
fdivrs
adc
in
dec
arpl
insb
gs
pop
or
rcrl
int3
xor
frstor
push
mov
push
lods
cmp
sbb
in
adc
xchg
and
xlat
mov
rolb
out
aaa
fs
mov
idiv
add
xor
sbb
add
inc
addb
sahf
xlat
mov
lods
loope
loope
in
adcl
loope
mov
cmp
jp
scas
pop
or
push
cmp
sbb
aaa
jecxz
mov
movsl
adc
xchg
mov
push
test
arpl
and
pop
in
das
add
xorl
mov
jne
dec
mov
push
nop
lods
in
aam
fsubrl
pop
mov
scas
adc
cld
pop
lods
lds
loopne
sub
xchg
mov
xchg
xlat
mov
mov
mov
add
out
leave
rcll
dec
sbbl
add
addl
clc
cld
mov
xchg
sub
dec
repnz
add
xchg
out
and
push
jp
sbb
or
fnstcw
mov
adc
into
sub
rolb
push
enter
adc
adc
in
fninit
test
xchg
pop
stc
jo,pn
lahf
daa
xchg
hlt
xchg
pop
adc
cmp
push
add
sbb
pop
push
ja
sahf
rorl
jb
sbb
dec
ds
nop
push
pop
jge
lea
mov
xor
inc
in
pop
fwait
test
sub
lret
loop
jo
fsubrs
mov
popf
aas
dec
xor
add
test
orl
pusha
addr16
sub
jmp
dec
pusha
imul
push
jo
or
loope
sub
pop
movsl
inc
mov
pop
pop
stc
cld
dec
insb
push
fidivrl
sub
lods
mov
adc
mov
push
mov
pop
adc
inc
or
jne
inc
test
orb
pop
sub
xchg
test
pop
lahf
or
push
out
iret
rol
and
aaa
push
sub
sbb
xchg
jae
or
inc
fstpl
xor
jnp
push
jle
mov
or
pop
add
test
and
push
popa
inc
mov
adc
mov
sub
mov
pop
or
loope
sub
mov
loope
cli
fnstenv
dec
jmp
fwait
pushl
gs
bound
ds
xchg
lock
or
movsl
enter
inc
mov
inc
mov
add
js
les
mov
and
pop
mov
fsubrl
inc
add
add
sbb
xchg
dec
sbb
sbb
aam
jl
and
ja
cmp
icebp
adc
out
and
push
xor
xchg
xchg
jnp
std
cld
sti
nop
outsl
add
mov
mov
test
push
sub
and
ds
movsb
enter
add
gs
sti
mov
test
adc
ds
jo
imul
cmp
sub
hlt
inc
pushf
bound
pop
dec
jl
jecxz
dec
and
ficomps
and
ds
inc
and
dec
and
daa
jns
and
lds
push
popf
and
push
repnz
pop
imul
fs
and
xchg
popf
mov
mov
fcomps
pop
mov
push
adc
sbb
int
mov
jmp
sbb
adc
sbb
cli
cli
pusha
sub
push
cmp
andb
dec
icebp
loopne
inc
inc
js
test
adc
mov
inc
out
mov
and
mov
popf
jmp
leave
inc
adc
and
adc
stc
cwtl
loopne
loop
and
dec
mov
and
dec
sub
dec
xchg
popf
addb
xchg
fisubs
movsb
adc
fs
mov
push
sbbb
popf
loopne
out
or
and
xchg
mov
lret
inc
and
test
repnz
adc
pop
fs
pop
stc
clc
dec
mov
or
push
aad
jge
add
cs
and
pushw
test
cmpsb
or
cmp
push
push
xchg
cltd
and
hlt
pop
xchg
mov
xchg
dec
jnp
dec
cmc
mov
inc
pop
shrb
ja
mov
adc
es
pop
push
or
mov
icebp
int3
sub
mov
dec
push
sbb
filds
outsl
cld
stos
sub
pop
test
shr
fwait
addl
aad
pop
mov
cmp
add
iret
imul
ja
aad
cmp
push
mov
mov
ja
xchg
sub
mov
out
sub
push
leave
arpl
aas
test
mov
in
sub
insb
or
in
pusha
mov
lea
jl
in
inc
sbb
or
jbe
mov
push
stos
js
mov
mov
sub
and
stc
lcall
cltd
and
subb
rorl
xchg
adc
aaa
mov
mov
and
jge
pop
mov
int
cmp
mov
adc
aad
jae
call
cld
arpl
mov
and
mov
fsts
or
lret
add
shll
lret
adcl
filds
cli
arpl
aaa
subl
jb
stc
mov
clc
mov
push
and
arpl
lret
inc
fisttpll
adc
mov
insb
nop
and
fs
sahf
mov
gs
loope
mov
mov
test
bnd
mov
inc
inc
jmp
ljmp
jl
leave
loope
orb
cltd
and
push
jns
cwtl
enter
push
test
or
jae
push
cld
and
dec
inc
add
push
sti
shlb
xor
bound
cltd
push
xchg
pop
sbb
rolb
mov
push
or
push
fs
push
pop
imul
inc
loope
push
jp
orb
ret
dec
and
adc
hlt
imul
xchg
test
add
inc
adc
xor
lahf
frstor
jle
jbe
movsb
push
ret
aam
fs
xor
pop
jne
adc
dec
push
mov
push
cmp
test
addb
adc
sub
je
lods
dec
loop
push
inc
cmpsb
ljmp
jecxz
test
inc
mov
jge
sbb
cmpsb
mov
cmpsl
mov
mov
mov
or
es
xchg
add
and
jl
dec
cmc
cmp
xchg
lcall
pusha
fwait
push
add
mov
outsl
adc
hlt
aaa
jge
std
inc
xor
cmp
or
or
fildll
add
add
xchg
and
out
je
mov
lret
add
mov
dec
and
cs
add
adc
mov
mov
orb
and
inc
mov
shlb
fidivs
lods
sbb
cwtl
and
mov
fs
xchg
mov
inc
inc
insb
push
inc
dec
test
imul
ret
jg
ret
inc
je
pusha
fsubr
push
jg
add
fst
shlb
ret
mov
sbb
mov
repnz
pop
je
scas
inc
lea
outsb
iret
inc
fcomps
iret
push
in
jp
and
test
inc
lcall
add
pop
addb
xor
adc
xchg
iret
rolb
adc
leave
mov
shrl
mov
and
xchg
sysexit
mov
lea
dec
sahf
lret
aas
sub
loop
add
ret
xchg
in
cmpsl
xchg
cld
addl
lea
sbb
pop
out
sti
pop
cmp
mov
xchg
push
ljmp
pop
ffreep
jl
daa
mov
push
adc
inc
out
xchg
cli
mov
xchg
test
sub
adc
inc
je
fisubl
and
mov
push
jp,pn
xchg
cmp
int3
jae
subl
lcall
and
repnz
xor
shll
inc
adc
inc
push
lret
cmp
fldenv
push
push
and
fnstenv
pop
imul
sti
mov
add
mov
xchg
test
jb
pop
adc
adc
jmp
fcmovne
pop
imul
int
leave
fsubrs
mov
push
push
rcrb
mov
inc
adc
cmp
in
dec
pop
add
push
orl
jmp
mov
xchg
imul
popa
mov
pusha
sbb
or
add
xchg
adcl
xchg
mov
cmpsb
cmp
pop
or
or
jb
or
mov
mov
add
jne
pusha
xchg
nop
mov
nop
jb
repnz
test
outsb
orb
fwait
negl
and
popa
repnz
lcall
pop
mov
nop
les
repz
fildl
test
cmp
mov
push
mov
das
inc
push
popa
mov
rcr
xor
outsb
adc
inc
bound
xchg
outsb
jne
cmp
inc
and
pop
aam
jnp
clc
es
lcall
dec
inc
fwait
xchg
xor
aaa
ret
lods
fcompl
fnstenv
mov
jmp
fsubl
cmpsb
jl
hlt
daa
and
add
insb
pushf
lahf
loopne
outsb
shlb
repz
insb
and
rolb
gs
nopl
cmp
and
lock
mov
xchg
aas
xor
mov
push
push
and
outsb
and
addr16
leave
les
and
out
mov
mov
mov
notb
pusha
ss
cmp
fdivs
lcall
or
mov
mov
cmpsl
popf
adcb
je
roll
inc
pop
cmp
jb
mov
dec
cmp
and
sub
lock
pusha
push
mov
mov
xchg
cmpsb
js
push
jnp
jl
mov
dec
fsubrl
push
mov
aas
adc
stc
inc
faddl
sbb
fs
and
adc
loope
push
rcrb
or
fadds
out
mov
sbb
mov
lea
xchg
dec
cmpsl
aam
inc
divl
sbbl
mov
popw
movsb
adc
mov
or
cmp
pop
mov
mov
movsb
jne
mov
clc
jbe
ljmp
repnz
mov
jne
inc
push
push
cld
in
imul
push
xor
push
dec
xchg
or
mov
fsubs
ret
and
cmc
and
dec
or
mov
daa
push
test
mov
ret
shll
cmp
and
jmp
pop
fsubs
loope
mov
push
and
inc
xchg
stc
and
repz
mov
or
cs
jmp
xchg
or
lods
insl
mov
sub
push
pop
lods
push
jmp
mov
dec
sbb
push
sbbl
push
dec
pusha
and
popa
mov
mov
xchg
enter
jnp
into
aad
imul
aam
cs
push
add
jge
push
int3
es
fs
or
int
mov
sub
std
pop
ret
lods
push
testb
inc
lahf
xchg
sbb
mov
lret
dec
and
push
imul
adc
int
inc
cmp
jb
sbb
in
arpl
jmp
add
in
pop
dec
cmp
or
data16
mov
out
loop
pop
jns
repz
pushf
xchg
testl
mov
inc
prefetch
or
push
les
mov
adc
imul
pcmpeqd
ss
clc
jmp
sbb
cmp
repz
pop
push
rclb
fstpl
add
inc
jmp
fldl
push
push
push
call
xchg
push
mov
xor
daa
jnp
int
shrl
jns
data16
fwait
in
sub
and
jp
jp
orb
mov
inc
push
cmc
movsl
into
pop
les
out
sbb
adc
je
pop
gs
jge
out
mov
or
sbb
push
mov
add
pop
hlt
icebp
arpl
jecxz
je
nop
cmp
ljmp
jecxz
jp
lods
popa
mov
or
lods
sub
fwait
inc
loopne
mov
cmp
adc
and
mov
jge
pop
push
sbb
mov
xchg
pop
jecxz
int3
xor
xchg
mov
outsb
subl
cmp
pushl
jne
add
sub
lea
add
out
mov
outsb
push
jle
sbb
sbb
out
push
into
and
xchg
lea
or
xchg
jl
shll
mov
arpl
loope
ficoms
dec
adc
sahf
adc
loopne
mov
test
in
daa
sbb
movb
add
dec
jp
jg
in
ficoml
je
lds
push
dec
lea
xchg
dec
loope
adc
pop
test
and
xchg
xchg
xor
adc
mov
and
mov
push
std
xchg
inc
xchg
hlt
push
sbb
aaa
dec
adc
and
pop
pusha
sbb
dec
scas
mov
mov
push
jmp
mov
bound
es
or
cmpb
ret
dec
out
sti
cltd
das
mov
cmp
outsb
ret
and
fchs
fimuls
mov
and
loop
jle
pop
out
and
and
and
add
mov
pusha
xchg
mov
xchg
dec
cmc
xchg
dec
adc
jb
xchg
xor
outsb
and
fs
xor
and
add
or
mov
cmp
lret
jns
out
cli
jg
mov
cmpsl
inc
insb
xchg
and
bound
xor
jl
ret
enter
cmp
xor
mov
sbb
xor
pop
push
je
dec
inc
sbb
pop
mov
mov
push
sahf
decb
inc
jmp
push
imul
sub
fcoml
arpl
cmp
and
inc
or
or
frstor
daa
pop
push
xchg
xchg
test
dec
andb
cmpsb
lret
shl
test
lods
add
lock
jne
push
popl
jge
inc
or
insb
xchg
orl
push
add
in
lds
mov
es
push
rorb
and
out
dec
mov
pop
cmp
dec
cli
shll
call
movaps
mov
lds
fisttps
add
outsl
cwtl
or
test
lcall
ret
pop
push
hlt
sbb
std
or
jmp
mov
jns
and
mov
mov
adc
cmp
shll
jmp
rorb
mov
shl
xchg
mov
xchg
stc
adcb
das
mov
je
and
or
xor
dec
js
push
repz
dec
outsb
clc
repz
or
fimuls
and
and
or
inc
dec
xchg
pop
pusha
dec
or
push
mov
sbb
mov
mov
and
shr
fwait
or
dec
sbb
xchg
inc
stc
sbb
push
dec
out
xor
mov
xor
push
adc
add
or
xor
test
and
or
add
sti
push
ja
imul
xor
loop
mov
iret
mov
mov
call
sub
movsb
and
xor
jae
push
popf
bound
jno
xchg
jb
out
loope
movl
jmp
sarl
imul
mov
enter
sbb
push
in
pop
push
fsubs
jmp
movsl
xchg
add
mov
je
or
imul
or
or
loopne
unpckhps
je
seta
xor
popl
push
add
in
mov
xor
inc
lea
aad
push
push
and
and
and
jbe
pop
mov
mov
arpl
push
enter
add
push
fs
sub
sbb
fs
scas
mov
jnp
addr16
pand
pushf
jne
sbb
pop
push
rcrb
or
aam
mov
int
aam
cmpsb
inc
ja
fiadds
inc
or
loopne
aas
sbbl
add
insb
hlt
movsb
xchg
incb
popf
push
and
jne
add
shlb
xchg
push
sbb
fisttps
addb
daa
xchg
adc
add
fwait
sbb
popa
orb
sub
shll
lods
adc
dec
adc
cmp
pop
pusha
rcll
shll
adc
or
jl
repz
sbb
daa
loope
xor
and
xor
icebp
xor
pop
xchg
mov
outsb
jg
pop
in
repz
jecxz
adc
lahf
dec
mov
xor
daa
ds
dec
stc
cmp
mov
adc
dec
js
add
sub
loopne
in
adc
push
std
into
dec
mov
mov
fstl
mov
or
sti
mov
cmp
cmp
pop
inc
mov
mov
or
pop
cmp
jb
je
mov
inc
ja
push
leave
repnz
push
lock
in
imul
fsubl
es
inc
mov
cmpsb
enter
mov
out
stc
bound
dec
jae
mov
cmp
mov
and
mov
lahf
mov
add
add
scas
push
cli
stos
dec
ja
sub
mov
daa
stc
and
xchg
pop
lea
repnz
ja
test
data16
bound
push
mov
cmp
rclb
inc
dec
popl
jecxz
daa
jg
xchg
jmp
and
shlb
dec
test
pop
mov
xchg
mov
or
mov
outsl
xchg
adc
ds
sbb
mov
fistpll
insb
xchg
inc
lds
js
aas
or
xchg
pusha
mov
scas
lahf
adc
mov
cld
sbb
icebp
jne
jnp
mov
add
mov
push
test
mov
fwait
sbb
and
fs
mov
push
inc
divb
addr16
stc
cmp
repz
loope
jb
testl
decb
xorb
scas
xchg
sub
push
sahf
enter
mov
pusha
inc
xor
sbb
idiv
jbe
popa
loopne
push
dec
pushf
cmc
imul
int
adc
mov
jo
dec
or
xor
outsl
mov
adc
adc
or
ret
sub
in
or
pop
movd
pop
stos
inc
jbe
add
popf
fdivrl
sahf
and
sbb
sbb
push
xchg
xchg
push
inc
inc
or
push
add
adc
adc
cmc
ljmp
insb
cwtl
push
push
sti
jp
mov
mov
push
fcoms
jp
or
in
lods
flds
jb
push
mov
xor
aaa
jb
lock
add
and
push
out
enter
enter
daa
in
ss
adc
xchg
cmp
lods
stos
xchg
bound
ret
mull
lea
popf
sbb
adc
inc
fmul
push
adc
push
insb
xchg
mov
add
jns
repz
cld
cmp
in
push
cmp
sbb
shrb
jle
dec
xchg
rcr
shrb
rolb
into
fisttpll
mov
jmp
insb
addr16
insb
jo
les
repnz
bound
and
or
ds
or
dec
sbb
leave
daa
cmp
out
test
and
fadds
push
pop
mov
xchg
pop
mov
or
inc
aaa
pop
jmp
popa
leave
xchg
mov
shrb
mov
xchg
decl
pop
mov
mov
in
lret
xchg
imul
dec
stos
push
test
mov
jecxz
mov
mov
mov
mov
mov
xor
xchg
mov
and
push
repz
ja
push
push
dec
xor
add
and
iret
or
jns
enter
out
imul
or
jmp
test
pop
jmp
xchg
dec
les
jo
or
dec
lahf
insl
ljmp
popf
daa
je
call
push
xchg
les
pop
xchg
mov
cmp
push
xchg
loope
movsb
rol
cltd
fs
daa
adc
mov
bound
insb
shll
jbe
adc
cltd
lods
mov
lret
mul
xchg
xlat
mov
add
lods
inc
pop
int
pop
scas
push
xchg
xchg
negl
push
out
jbe
dec
jmp
divl
jge
cmpsl
popf
jp
cmpsl
rclb
inc
shll
jae
fadds
cltd
out
sbb
icebp
adc
icebp
sbb
gs
in
dec
cli
sbb
or
add
lods
adc
sub
aas
fdivr
jnp
adc
cmp
fwait
or
orl
cltd
push
dec
mov
mov
addr16
xchg
sub
bound
sub
pop
in
pop
jae
mov
cmpsl
loopne
xor
jmp
inc
imul
jb
in
inc
imul
cltd
leave
loope
xor
and
adc
dec
push
gs
repnz
add
dec
outsl
sub
add
in
adc
imul
pusha
or
lcall
xchg
push
imul
jns
inc
adc
sub
mov
notl
push
inc
push
and
push
mov
and
ds
pop
push
push
adc
das
xchg
aam
mov
lcall
sbb
cwtl
out
sbb
daa
jmp
adc
push
call
push
into
xor
bound
and
in
or
cs
mov
js
mov
push
mov
test
pop
fsubp
pop
int3
push
mov
mov
aad
lods
inc
mov
adcb
or
orl
lea
and
sahf
sbb
rcrb
loope
addr16
in
scas
jo
jne
repz
sbb
adc
xchg
mov
xchg
fcoms
loopne
dec
dec
xchg
cld
sbb
mov
sbb
mov
sbbl
xor
xor
insb
aaa
clc
pop
imul
call
clc
push
fst
xchg
dec
rolb
cli
sbb
stos
cltd
inc
rol
fucom
or
push
sarb
mov
adc
pop
arpl
dec
les
push
arpl
push
iret
adc
or
imul
cmc
not
inc
or
mov
jae
daa
cmc
in
mov
and
inc
into
or
adc
mov
cmp
lea
movsb
mov
mov
mov
jecxz
fdivrl
pop
and
mov
addb
sbb
xchg
sbb
xchg
mov
dec
repz
sbbb
stos
jl
mov
or
mov
test
leave
or
sub
or
fsubs
pop
mov
aam
xor
adc
mov
xchg
mov
pusha
int
push
sbb
mov
pop
imul
or
lahf
pop
push
cmp
add
fsubs
pop
push
sub
inc
lds
stos
aaa
movsb
outsl
aam
push
gs
mov
movsb
fincstp
adc
popf
or
loop
push
into
dec
sbb
lret
sub
cmp
mov
jns
inc
jge
pop
mov
xor
cmp
xchg
dec
sti
stc
lgs
pop
xor
mov
xor
push
xchg
lds
xchg
cltd
or
idivl
jl
xchg
xchg
addr16
sub
fs
sbb
and
mov
ret
add
inc
dec
popf
sahf
lea
loope
je
dec
mov
cwtl
sbb
push
mov
loope
xchg
aad
xchg
lret
mov
push
pop
inc
les
fsubs
imul
mov
fdivr
push
xchg
shrl
sbbb
sub
insb
xor
jne
pusha
sti
cmc
pop
movsl
imul
adc
xor
jbe
jg
sub
jp
ret
cmp
fdivl
xchg
std
lea
loopne
lret
push
push
in
jg
clc
mov
rorl
test
pop
cld
test
xchg
and
inc
mov
sarl
inc
cmp
lods
cli
sti
xchg
or
loop
add
sub
sub
mov
adc
jbe
push
in
test
pop
dec
xor
jne
cmpsl
sub
xchg
aaa
popa
aas
sub
inc
shrb
int3
mov
pop
jg
insl
je
ss
loop
daa
push
pop
in
fisttpl
pop
xor
push
clc
xchg
cmp
in
mov
xchg
push
cmp
sbb
sub
inc
push
or
pusha
push
xor
mov
mov
jno
cmp
adc
test
add
dec
inc
jbe
scas
jbe
insb
mov
jbe
andb
inc
mov
fbstp
mov
test
ficoml
inc
jne
lcall
cld
xor
xchg
jne
push
lds
sahf
xchg
mov
and
mov
dec
mov
jecxz
call
adc
mov
inc
cmp
inc
es
call
mov
in
fst
fs
pop
cmp
sbb
test
mov
push
mov
inc
test
jge
mov
xchg
xor
incl
iret
jle
or
sbb
in
scas
mov
shll
or
in
out
insb
arpl
cli
mov
std
lea
popf
and
sub
add
push
xlat
ja
or
test
daa
inc
inc
cmpb
pop
mov
mov
daa
dec
loope
xchg
icebp
mov
pop
test
cmpsb
test
cmpsb
inc
std
imulb
lret
test
jmp
add
orb
push
inc
repz
sbb
push
dec
pop
push
push
xchg
pop
lcall
lret
popf
out
enter
xchg
dec
adc
cli
inc
mov
inc
dec
popa
es
iret
mov
addr16
mov
leave
jno
in
daa
fs
addr16
fwait
and
cmp
xchg
xchg
adc
xchg
and
cmp
jl
cmp
stos
dec
cld
xor
outsl
xchg
dec
pop
xchg
imul
imul
hlt
jmp
and
mov
jle
cmpsl
popf
ret
loope
lea
pusha
loope
iret
mov
add
bound
pop
scas
xchg
adcl
and
push
ss
out
incb
push
mov
and
and
out
jge
orl
fs
dec
adc
bound
inc
dec
xchg
imul
es
mov
or
call
iret
cmp
fisubrs
fldenv
ljmp
pop
inc
js
adc
rol
fs
shrb
bound
xchg
adc
fcoms
call
fldt
fisubrs
push
bound
mov
inc
sahf
jnp
sbb
mov
jle
out
in
xor
pop
xchg
jno
gs
rcrl
jno
pusha
fwait
dec
xchg
mov
cmp
inc
xor
adc
fwait
xchg
fdivp
xchg
xor
movsbl
icebp
inc
cli
js
arpl
jb
insl
inc
into
rcrl
std
cmp
adc
shlb
dec
push
sarl
push
in
pop
cmp
xchg
xchg
xchg
xchg
jns
inc
subb
jg
loope
mov
enter
loopne
bound
or
insb
les
test
cmp
out
ja
sti
fldl
insl
mov
fildl
daa
inc
xchg
shll
xchg
ss
popf
cmp
out
lcall
ret
test
or
lcall
inc
add
sbb
je
inc
jge
jl
cmp
sub
pop
andl
adc
ja
or
ret
cmc
pop
and
scas
sub
push
lahf
movsl
mov
add
cmp
stc
andb
rorl
loopne
fsubs
xchg
pusha
xor
outsl
pop
sub
pop
insl
push
xchg
xchg
xchg
pop
sti
push
mov
or
or
loopne
sti
inc
sbb
outsl
imul
out
rolb
bound
xchg
iret
jns
test
jp
fwait
dec
push
sti
sbb
sbb
push
xchg
add
xchg
push
lret
jo
inc
out
in
popf
xchg
pop
mov
push
push
enter
sbb
orb
popfw
rolb
icebp
adc
call
pop
lretw
lock
test
test
cld
loope
xchg
adc
lea
ret
adc
sbb
loopne
jo
data16
fs
dec
sub
lret
xchg
pop
fdivrl
fists
and
dec
das
jl
bound
xchg
pop
cli
xchg
xchg
dec
data16
pop
adc
fs
adc
mov
or
out
js
mov
and
fs
popf
and
dec
and
mov
stc
sbb
xor
pushf
adc
sub
sti
adc
cmp
pop
ret
xlat
scas
mov
lods
sbb
inc
inc
jns
xchg
jo
bound
mov
icebp
cmc
or
roll
out
jecxz
stos
out
add
inc
push
xchg
xlat
add
arpl
mov
pop
imul
add
repz
mov
fcoms
insl
cmp
pop
test
push
adc
loope
ds
mov
ljmp
out
fiadds
mov
data16
mov
repnz
inc
mov
lods
and
in
cwtl
sub
popa
sbb
xlat
push
push
cmpsl
sbb
into
cmp
adc
pop
pusha
mov
shlb
lcall
sub
andl
and
insb
sbb
dec
outsb
fs
je
enter
aaa
popa
test
adc
setb
or
adc
fadds
popf
fs
jns
lahf
sarl
xchg
cltd
adc
lds
test
cmp
sub
test
xor
xchg
add
add
rorl
sub
dec
addr16
mov
cmp
mov
add
or
cltd
fs
test
lods
adc
les
add
xchg
mov
xchg
jecxz
push
outsl
xchg
add
std
repnz
ret
repnz
les
pop
add
mov
pandn
cmp
sub
jle
orb
pop
mov
bound
inc
popa
js
stos
addb
lods
lcall
xor
sbb
into
cmpl
out
push
fwait
mov
stos
sti
mov
cltd
cmpl
fisttpll
sbb
movsb
test
pushf
leave
mov
mov
ja
out
popl
xchg
inc
mov
aaa
sub
sbb
inc
fwait
pop
hlt
or
iret
mov
popa
cmp
pop
scas
aaa
xchg
xor
pop
adc
jae
push
adc
mov
repnz
pop
fsubl
pop
call
pop
out
fistps
push
mov
push
negl
imul
sbb
xchg
je
mov
shr
imul
bound
arpl
cli
addr16
popa
jbe
ret
xchg
inc
pop
data16
jbe
pop
fwait
ja
dec
movsl
sti
mov
inc
out
jle
rorb
jns
sbb
adc
out
aas
loope
adc
mov
mov
cmpsl
das
fistps
movsb
lcall
popf
fisubrl
add
jecxz
jmp
insb
lea
sbbb
fs
cmpsl
mov
jb
pop
and
mov
inc
shl
pop
addb
test
std
subl
cmp
inc
and
xchg
call
rolb
inc
stos
fucomip
adc
push
push
les
xchg
aad
adc
jnp
not
inc
mov
xchg
fbstp
pop
gs
ret
xchg
lret
inc
mov
inc
leave
out
dec
adc
fnstenv
lret
fidivrs
subb
xor
cmp
dec
xchg
loopne
push
dec
fadd
pusha
adcl
fnstsw
inc
daa
adc
xchg
pop
in
or
frstor
stc
scas
lret
lea
adc
sbb
pusha
push
and
sbb
adc
sbb
xchg
mov
mov
orl
mov
or
or
add
sbb
sbb
jmp
sub
jb
and
shll
adc
sbb
xchg
loopne
xchg
and
mov
sub
dec
jmp
inc
sub
bound
mov
mov
inc
dec
xchg
xchg
jp
xchg
xor
lahf
daa
push
fs
daa
adc
add
pusha
jmp
sbb
adc
stos
inc
ret
out
or
inc
push
pop
mov
push
or
mov
mov
jno
mov
jns
jb
inc
mov
and
pusha
fbld
fmull
loopne
add
and
or
inc
fistpll
dec
insb
ret
orb
xchg
shll
dec
xor
inc
mov
js
pusha
aas
xchg
cli
and
inc
cmp
mov
inc
fsubrp
jb
out
inc
cmpsl
jae
push
mull
lcall
jns
mov
and
enter
adc
rcrl
mov
bound
sbb
stc
push
push
loopne
mov
vpmacssww
jmp
mov
arpl
pop
jmp
and
lea
loop
pop
lds
dec
adc
pushf
pop
xchg
dec
lods
cmp
jecxz
cli
aad
push
inc
arpl
movb
or
inc
popf
inc
pop
scas
or
lcall
or
lea
mov
fists
xchg
sbbb
mov
lret
imul
orl
ret
inc
das
pop
xor
rol
stc
imul
mov
je
xor
sub
jp
ficoms
js
popa
and
aaa
mov
pop
fs
push
or
or
fisubl
in
push
mov
lds
call
lds
leave
test
mov
je
fldenv
push
pusha
cwtl
shll
jp
mov
mov
jbe
cmp
jns
sbb
or
mov
dec
out
shlb
push
inc
mov
sbb
xchg
fwait
inc
pusha
repz
lea
or
sbb
adc
pop
rolb
sbb
adc
leave
xor
clc
mov
and
mov
aaa
lods
loopne
and
mov
enter
xchg
andps
dec
aam
daa
fnsave
daa
mov
inc
cmpb
stos
xor
imul
test
in
jp
dec
inc
or
je
jnp
popl
inc
jb
pop
push
into
andb
gs
pop
into
lods
enter
or
lahf
jmp
lahf
lods
add
test
enter
ficomps
push
sub
ret
test
xchg
mov
sub
out
lock
cmovnp
inc
inc
hlt
fwait
into
xchg
cld
je
adc
stc
sete
and
push
ficompl
bound
dec
test
pop
mov
test
xchg
sub
adcl
fldl
cltd
test
testl
test
lret
mov
leave
jbe
and
fisttps
gs
pushf
inc
or
fmulp
mov
mov
lods
popa
loope
and
push
je
mov
test
stos
test
aas
frstor
add
adc
push
mov
push
push
add
inc
sarl
xchg
xchg
xchg
aam
or
fst
movsb
push
mov
jno
movsb
dec
mov
inc
push
mov
arpl
mov
sub
enter
negl
daa
pop
hlt
outsb
loopne
loop
stc
shlb
faddl
test
lock
inc
dec
mov
sub
push
les
pusha
test
fbstp
subb
sbb
add
inc
xchg
mul
or
sbb
fdivl
cmp
xchg
testl
fcoml
sbb
xchg
adc
mov
mov
sbb
es
movsl
inc
arpl
and
cmpsb
pop
rorl
adcl
fmull
mov
jnp
cmp
andl
inc
adc
dec
inc
add
and
sahf
sbb
dec
adc
je
mov
mov
jne
xchg
fdiv
jae
or
adc
sbb
xchg
push
and
sbb
xchg
in
cmpsl
mov
push
dec
sub
and
xchg
iret
loopne
inc
dec
out
sbb
adc
sbbl
cmp
in
jl
and
pusha
pop
aaa
fcoml
cmp
ret
xchg
mov
in
mov
xchg
repz
or
pusha
notl
jbe
cmp
fsubrs
mov
jecxz
fmull
pop
lret
ss
lods
cmpsb
sarl
inc
insb
es
mov
data16
cmp
fs
fsubr
js
cmp
ret
push
cmp
fmulp
cmp
dec
push
les
lock
inc
pusha
pop
and
xchg
cmp
mov
outsl
dec
mov
xor
xchg
icebp
aas
jp
xchg
mov
fs
imul
pusha
inc
shll
and
mov
out
xchg
cmpsb
xchg
cmp
mov
lret
imul
mov
push
adcl
in
push
fsubl
pop
das
stos
mov
and
xor
pop
loope
ss
data16
cmp
inc
push
jge
mov
fs
inc
mov
sbb
xchg
jge
bound
daa
push
jb
imul
and
gs
pushf
xor
jb
pop
popf
mov
jo
push
and
push
stc
dec
pop
push
sbb
cmp
pop
adc
jae
insb
mov
fldl
mov
bound
test
aaa
hlt
mov
pushl
inc
mov
mov
enter
inc
out
cwtl
aaa
jnp
es
pop
dec
adc
aaa
stos
std
cmpsb
mov
ficomps
leave
jmp
sbb
fs
es
arpl
fwait
sbb
add
out
xor
leave
stos
lea
xchg
xchg
xchg
sub
adc
add
pop
popa
inc
add
or
mov
icebp
int3
mov
jmp
test
mov
mov
pusha
jns
adc
jle
cmp
sbb
mov
adc
sti
dec
jne
xor
inc
add
mov
xor
cmp
xor
aas
into
int3
loope
cmpsb
ds
sti
xchg
and
mov
add
outsb
scas
ds
jge
push
shl
jne
push
int
jne
mov
hlt
add
mov
lock
push
mov
rcrb
add
push
inc
fs
sbbl
inc
rclb
dec
inc
les
adc
mov
mov
bound
and
dec
cmp
inc
adc
les
xchg
lock
sbb
or
xor
aaa
les
adc
cmp
sbb
xchg
xor
gs
fs
jne
pop
jmp
in
mov
fldl
jle
jb
stos
xchg
jne
ret
sbb
cmc
jb
dec
mov
inc
notb
adc
fimuls
dec
mov
in
xchg
push
or
enter
mov
and
in
mov
sub
adc
clc
mov
ret
in
aaa
inc
mov
popf
add
fildll
mov
out
inc
add
inc
mov
add
jnp
add
popf
lret
mov
cmc
gs
stos
das
gs
mov
adc
inc
aaa
insl
dec
mov
imul
push
lods
or
sbb
gs
pop
cltd
lahf
pop
mov
insl
je
sbbb
adc
arpl
and
and
fiadds
push
and
dec
mov
aam
add
and
push
scas
sahf
mov
push
and
mov
scas
and
or
xor
mov
mov
fwait
shl
aas
out
mov
adc
xchg
loop
pusha
repz
add
lods
ret
pop
xchg
xor
sbb
daa
and
lods
je
rcr
jl
fwait
movsb
pop
cmp
and
jmp
enter
add
cmp
sub
idiv
enter
inc
cld
data16
jo
mov
pop
push
jl
dec
mov
jne
mov
stos
push
aam
cmp
subb
sbb
push
inc
cmp
and
fs
mov
push
jge
cli
addr16
arpl
add
jecxz
jno
or
dec
arpl
cmpsl
popf
daa
sbb
xchg
jmp
stc
mulb
arpl
add
sbb
push
pop
sub
insl
in
daa
xchg
sarb
daa
sbb
xchg
andl
imul
or
jae
mov
cmp
pop
sbb
icebp
andl
fcomp
sbb
jb
das
fwait
or
add
pusha
xorl
xor
arpl
xchg
negl
or
dec
out
mov
sbb
add
scas
mov
lods
mov
push
push
mov
mov
or
mov
fcoms
cmc
inc
in
dec
pusha
and
ret
mov
rcrl
leave
pop
pop
repz
mov
sub
ret
sub
mov
pop
mov
test
jb
in
test
jb
mov
inc
dec
and
in
xor
addr16
mov
cmp
movsl
mov
xchg
add
call
in
lods
daa
andb
cmp
nop
out
imul
aas
outsb
addl
call
jl
add
popa
push
pop
adc
inc
dec
pop
jmp
add
adc
fdiv
aad
and
test
js
call
data16
add
jne
mov
jl
enter
fxch
pop
mov
lea
adc
cmp
cld
adc
out
push
stos
and
add
mov
push
popf
cli
sub
pushf
push
dec
and
sub
dec
push
ds
movsb
mov
adc
dec
loop
push
sahf
sub
aas
add
and
test
mov
loope
or
jbe
or
xchg
outsl
ja
movsb
lcall
outsb
xor
addl
inc
mov
add
add
and
push
into
jp
push
decl
mov
pop
jecxz
inc
aam
xchg
adc
sbb
test
sbb
dec
xchg
inc
sbbb
imul
stc
shlb
addr16
mov
pushf
sbb
xchg
or
mov
pushf
mov
sbb
loopne,pt
jae
setp
adc
int3
push
notb
pop
aad
inc
jg
pop
push
pop
sti
cmpsl
movlps
es
bound
das
mov
add
mov
pop
add
sbb
data16
pop
push
adc
fistpl
adc
xchg
adc
test
popa
xchg
enter
movsb
ja
test
or
adc
push
ja
test
aad
push
dec
pusha
in
xor
stc
inc
aas
movsb
sub
push
scas
idivl
push
add
mov
mov
mov
out
daa
sub
ror
cltd
push
bswap
stc
mov
and
movsb
jmp
in
test
mov
std
ds
push
lret
in
inc
movsb
pop
fsqrt
dec
gs
fiaddl
push
daa
hlt
les
sbbb
mov
mov
mov
jbe
mov
and
xchg
lods
mov
repz
enter
jae
in
cmp
dec
mov
jge
cmpsl
jge
roll
in
stc
mov
xor
mov
and
in
xor
or
pop
sbb
mov
xor
pop
xchg
arpl
or
xchg
jae
bound
add
xor
cmpsb
adc
inc
add
hlt
arpl
outsb
adc
pop
cltd
subb
ficompl
xchg
das
addb
jle
mov
jae
xchg
xor
push
aam
adcb
out
xor
dec
lea
shrb
test
or
sbb
frstor
and
sub
bound
outsl
mov
mov
arpl
fcmovu
or
outsb
std
and
fsubl
mov
data16
pop
int
out
cmpsb
inc
lds
sub
and
mov
inc
xchg
scas
add
cmp
inc
mov
and
std
push
xchg
fwait
adc
inc
xchg
mov
inc
dec
push
inc
loope
jle
cld
xchg
popa
xchg
or
hlt
jns
xchg
inc
negl
cmc
popa
xchg
test
sbb
frstor
mov
int
js
mov
int
xor
add
je
stc
pop
shll
inc
in
pop
jb
xchg
gs
push
iret
xorl
xchg
clc
dec
std
bound
aad
adc
adc
dec
sbb
fwait
cwtl
imull
xchg
cwtl
or
push
push
leave
mov
insl
mov
out
pusha
jle
inc
fs
sbb
arpl
fstcw
mov
fcoms
sbb
mov
in
loop
pop
arpl
sbb
notl
std
cwtl
fmull
xchg
imul
xor
xchg
pop
arpl
clc
rol
jp
std
ficomps
clc
shrl
rorl
add
lock
dec
out
rcl
fdiv
enter
sub
mov
mov
lret
pop
fldenv
push
jmp
shll
cmp
mov
enter
dec
add
xchg
in
xlat
inc
jge
xor
inc
arpl
xor
arpl
test
gs
xchg
sub
pop
loope
mov
sahf
movb
hlt
or
pop
sbb
add
adc
xchg
aaa
add
jns
pop
lds
addb
inc
push
xor
xor
dec
call
xor
push
jmp
inc
jb
lea
push
and
pop
push
mov
and
xchg
or
dec
xor
sbb
and
push
test
mov
pusha
ja
fwait
enter
stc
icebp
std
aas
jecxz
jmp
add
ja
test
xchg
inc
push
add
test
fs
push
pop
scas
adc
push
inc
pop
dec
mov
xchg
ss
test
push
pop
mov
mov
push
dec
cmp
sbb
pusha
mov
jge
mov
jnp
inc
movsb
out
add
insb
xchg
bound
popf
jecxz
mov
arpl
jb
inc
andb
mov
push
push
inc
mov
dec
fidivrl
inc
dec
lahf
bound
inc
jb
xchg
shlb
xchg
xor
aam
push
fisttpl
push
bnd
cltd
and
add
gs
add
sti
push
push
shll
popf
sbb
sbbl
shll
and
inc
fs
pop
mov
mov
lcall
dec
add
mov
sbb
adc
pushf
add
sbbb
add
cmp
daa
fs
and
push
popl
daa
mov
mov
imul
xchg
xor
test
mov
bound
jno
ret
outsb
ret
adc
sti
fsubl
xchg
lahf
pop
stc
enter
pop
jns
test
sbb
lods
loop
xor
lea
and
push
mov
mov
sbbb
mov
je
sti
or
xchg
jns
inc
fs
not
push
xchg
sbb
xchg
int3
outsl
in
dec
jecxz
out
fildll
sti
inc
sub
ds
andl
les
les
enter
test
test
test
divb
add
pop
xchg
in
jmp
xchg
mov
mov
and
sbb
fs
and
mov
dec
imul
inc
daa
dec
lods
pop
sbb
daa
dec
push
aaa
add
cmpsb
mov
and
xlat
into
mov
jae
repnz
mov
int
push
dec
cmp
shlb
push
inc
pop
xchg
and
stc
jmp
jp
jg
movsb
push
subb
dec
add
sti
inc
out
sbbl
sti
shll
cli
mov
xchg
jmp
fcomps
sbb
dec
pop
add
orl
fwait
test
lcall
add
sahf
mov
pop
inc
dec
fs
es
mov
rorb
js
push
cltd
fcmovu
xlat
fs
outsl
mov
and
ret
sbb
pop
addr16
sub
xchg
xchg
mov
pusha
scas
xchg
adc
aaa
xchg
xchg
dec
adc
push
or
lret
pop
testl
incb
cmp
out
dec
and
daa
subb
movsl
scas
test
mov
dec
add
cmpsl
mov
mov
stos
mov
push
cmp
subl
jecxz
pusha
fdiv
roll
cmpsl
dec
mov
cmpsl
push
jle
inc
inc
jg
xor
inc
enter
push
xor
pop
xchg
adc
imul
mov
and
push
jl
push
out
insb
xor
add
les
andb
out
das
jmp
aas
mov
pop
push
iret
ja
mov
testb
int3
inc
fs
out
out
test
lahf
add
inc
aad
in
hlt
in
xor
jg
push
fiaddl
sarl
ljmp
out
icebp
push
dec
pop
and
sbb
cmp
popf
lret
dec
adc
push
andb
cli
sub
sub
inc
or
gs
inc
dec
iret
sbb
dec
inc
dec
mov
push
cmp
xchg
mov
jg
xchg
push
push
xchg
shlb
jmp
and
jp
inc
insb
dec
xor
and
cmp
insb
in
mov
cwtl
test
std
adc
and
mov
shlb
mov
filds
loopne
xchg
insl
adc
fcomp
fmull
xchg
sub
jbe
les
lcall
adcb
cli
bnd
les
jp
dec
std
sbb
xchg
push
inc
cmp
std
adc
xchg
jno
and
loopne
sbb
xchg
xchg
mov
xlat
cmp
xchg
and
std
xchg
insb
dec
jnp
cmc
test
std
bound
and
adc
pop
bound
push
jo
movsb
jb
into
and
adc
pop
ss
les
lcall
orb
inc
xchg
stc
repnz
test
inc
adc
inc
xchg
pusha
test
std
xchg
insb
imul
pop
test
std
cmpb
and
pop
scas
cwtl
mov
sbb
mov
test
push
pop
jae
cld
enter
pop
mov
mov
test
cmp
push
mov
mov
cmp
cmp
aaa
mov
push
and
mov
mov
stos
hlt
cli
and
and
fidivs
dec
pop
fsubl
cmp
mov
aaa
sarl
push
stos
hlt
popl
ret
mov
dec
dec
movl
jae
xor
cbtw
push
stos
jle
sbb
in
xor
outsl
or
aaa
inc
lahf
or
push
pop
pop
sub
cltd
or
enter
lahf
pop
dec
xchg
mov
stc
jns
ds
mov
ficoms
mov
push
adcb
push
add
push
lea
cmp
jb
adc
jbe
cmpl
fisttpll
pop
faddl
imull
xchg
pusha
sbb
es
or
and
push
xchg
jp
loopne
cmp
jp
aaa
pop
cmp
sbb
scas
es
xchg
xorb
jbe
ja
jbe
adc
test
lret
shll
cmpb
fwait
aam
xchg
divl
pop
mov
mov
lea
inc
insb
pop
push
addr16
daa
add
pusha
lahf
jmp
xor
data16
inc
sbb
cmp
jg
add
fs
and
rorl
out
pusha
mov
test
jno
xchg
enter
xchg
or
notl
or
insb
inc
add
mov
mov
cmp
cmpsl
cli
outsb
fdivrs
insl
flds
push
or
clc
mov
in
dec
aas
mov
out
or
mov
out
lret
imul
mov
jle
enter
ret
imul
not
mov
xorl
aas
outsb
add
cmpsl
and
xchg
push
sbb
arpl
sbb
and
cmpsb
adc
fs
faddp
cmp
or
insb
cmpsb
daa
jnp
fstpl
aas
es
cmpsb
aam
hlt
cmpsb
jb
xchg
repnz
inc
pop
iret
push
popf
cltd
roll
jecxz
cmpsb
loope
xchg
mov
aam
inc
test
add
orb
dec
push
jne
add
inc
ret
pop
xchg
gs
insb
popa
mov
cmpsl
add
add
imul
sbb
xor
fsub
xchg
out
shl
imull
fwait
push
fdiv
jbe
sbb
xor
fs
jp
pop
fisttpll
adc
sub
mov
ljmp
lock
push
or
and
or
and
in
adc
lea
daa
sbb
sub
xlat
jp
pop
jbe
push
outsb
lds
flds
adc
mov
pop
pop
add
test
dec
and
sbb
xchg
fstpt
es
push
sbb
jbe
iret
mov
and
imul
sbb
fisubs
imul
add
fstl
pusha
mov
sbb
add
push
clc
xchg
inc
in
push
shlb
push
movl
lcall
stos
fisubs
stos
adc
pusha
adc
cmova
fstp
inc
pop
adc
mov
add
sub
cmc
inc
lret
or
pusha
es
xchg
lret
ret
lret
les
les
mov
jmp
xchg
lret
jmp
and
jmp
mov
shr
fisubs
jmp
dec
loope
xchg
fstl
fnstenv
fwait
sbb
in
sbb
frstor
push
or
lcall
mov
push
xchg
fs
or
cmpsl
or
adc
sub
enter
sub
xchg
sub
xchg
mov
push
fstl
pushf
mov
push
pop
test
sub
pusha
test
sbb
mov
mov
rorb
add
mov
inc
hlt
test
dec
notl
dec
mov
and
insb
jns
fdivl
dec
insb
lea
loope
sbb
adc
arpl
fsubs
test
xchg
mov
pop
out
push
int
in
xchg
mov
push
fimuls
pusha
sahf
je
mov
sbb
mov
dec
lods
inc
pop
sbb
xchg
push
lods
mov
and
xchg
jmp
lds
xlat
fcmovb
andb
and
loopne
sbb
fiadds
push
int3
jge
mov
ror
jecxz
repnz
ret
xchg
in
leave
pusha
cltd
je
in
daa
sbb
in
adc
and
fmuls
mov
fs
mov
in
mov
loop
clc
xchg
fsubrl
fs
or
and
or
and
lret
adc
inc
cmpb
mov
or
ror
push
aad
pusha
mov
mov
cwtl
inc
arpl
xchg
ret
add
add
pop
cmp
mov
or
xchg
int
dec
lea
mov
cmp
jge
repnz
inc
dec
mov
pusha
adc
daa
sbb
call
and
fs
dec
lds
mov
mov
fs
fs
mov
and
mov
and
dec
adc
lea
mov
mov
sbb
cmp
or
loopne
or
xchg
adc
mov
rolb
test
adc
leave
xchg
dec
mov
mov
leave
xchg
cli
leave
repnz
mov
pusha
mov
daa
sbb
jmp
adc
adc
mov
lea
test
jmp
sbb
xlat
insb
xchg
inc
or
push
pop
int3
sbb
or
sbb
or
inc
pop
sbb
adc
sub
sub
push
mov
std
pusha
push
pusha
movsb
xchg
sti
sub
and
sub
sub
je
or
dec
or
or
xor
dec
mov
and
dec
jns
fdivl
inc
xchg
xchg
xchg
fisttpll
pusha
push
dec
add
lds
mov
in
jns
xchg
mov
push
in
notl
push
fiaddl
dec
data16
lcall
sbb
cmp
add
adc
mov
fs
lcall
std
pusha
leave
loopne
xchg
jne
push
and
stos
lret
clc
xchg
adc
sbb
or
lret
xchg
mov
loopne
xorb
data16
daa
sbb
lret
lahf
jp
pop
jbe
or
lds
adc
ljmp
ljmp
ljmp
inc
ljmp
push
leave
xchg
sbb
pusha
jno
mov
fs
setbe
pslld
inc
arpl
fld
fs
lcall
std
pusha
dec
pop
movsb
xchg
repnz
push
and
das
push
mov
test
cmc
xchg
das
movsl
xchg
or
inc
sbb
fisubs
dec
or
cltd
dec
inc
sbb
pop
pop
jbe
addl
je
outsl
daa
sbb
mov
popf
add
js
les
push
jmp
xchg
cmpb
xchg
xchg
sbb
xchg
xor
mov
pusha
xor
sbb
or
sbb
xchg
ffree
testl
fnsave
shlb
xor
out
lahf
cmpsb
sub
pop
sub
shrb
push
icebp
cmp
pusha
in
out
jmp
xorb
mov
fstpl
jge
sbb
sub
push
mov
scas
lods
mov
dec
mov
add
iret
loopne
adc
dec
fiadds
sub
bound
dec
ljmp
xchg
shr
push
jecxz
std
xchg
test
insb
jmp
movsb
fs
jp
pop
fisttpll
gs
movsb
xchg
sbb
push
and
adc
pop
mov
mov
xchg
xor
sub
push
xor
bound
insb
mov
sbb
jbe
cmpsb
push
mov
sub
insl
push
repnz
in
xor
push
lahf
push
movsb
pop
jno
mov
xchg
das
xchg
mov
sbb
and
jo
cmp
push
jge
std
icebp
and
xchg
faddl
loopne
push
dec
xor
repz
xchg
nop
in
pop
nop
xchg
mov
xor
notl
nop
in
data16
scas
mov
mov
ficoms
fbstp
sbb
cmp
in
jbe
sub
lds
fisubs
rclb
lods
incb
sbb
les
out
dec
lea
rclb
jb
scas
xchg
lcall
fs
lock
fdiv
repnz
mov
lock
pusha
mov
xchg
loop
pop
lds
xchg
sbb
or
test
or
sbb
lods
xchg
and
mov
out
mov
xor
mov
push
and
sub
push
mov
and
mov
and
dec
std
pusha
arpl
cwtl
dec
push
xchg
dec
movsb
pop
jo
mov
xchg
xor
adc
and
insl
xchg
xor
insl
std
icebp
divb
cmp
pop
lds
sub
inc
mov
sbb
xchg
push
inc
lea
das
pusha
adc
ret
les
les
int
notl
lods
mov
cmp
arpl
jbe
and
fld
fs
jp
pop
fstl
in
push
lds
mov
bound
int
sbb
mov
sbb
int
sbb
xchg
mov
mov
shr
xchg
mov
notl
in
std
xchg
jae
mov
jge
lds
idiv
popa
and
inc
test
pop
lds
bound
popf
push
xor
les
lods
nop
lea
inc
push
xchg
mov
lock
lcall
mov
and
jns,pn
inc
push
jns
flds
icebp
lds
dec
and
rorb
and
dec
push
xchg
dec
movsb
pop
imul
xchg
dec
cmc
xchg
sub
or
bound
or
ja
inc
jmp
pop
cmp
dec
jg
adc
pusha
cmpsb
push
icebp
fstl
adc
test
orb
sbb
adc
or
dec
bound
insl
dec
gs
int3
scas
sbb
scas
xchg
out
scas
notl
scas
std
xchg
sub
je
xchg
fnstsw
aas
lds
les
bound
mov
sbb
pop
sbb
into
xor
mov
pop
dec
mov
lds
mov
pusha
fs
mov
jbe
inc
icebp
lds
fisttpll
add
lds
or
in
iret
adc
cmpsl
insl
notl
adc
pusha
stc
adc
push
sub
sbb
xor
sbb
xor
shl
js
adc
jg
aas
repz
jge
lds
inc
mov
bound
inc
push
and
pop
push
and
popa
cmp
mov
xchg
cltd
cmp
inc
xchg
sbbb
inc
dec
loopne
filds
in
jae
dec
sbb
pop
inc
dec
push
sbb
xchg
inc
dec
xchg
sbb
std
push
cmp
jg
insb
ljmp
mov
jns
les
mov
subb
in
jbe
jp
out
aad
lods
sbb
in
std
push
pop
sub
fwait
shl
fildl
dec
test
loope
inc
subl
inc
bound
into
push
mov
and
adcb
leave
xor
mov
and
cltd
repz
lcall
cs
loope
ja
repz
and
fs
repz
add
pop
adc
test
pop
xchg
mov
sbb
pop
add
mov
xor
out
inc
sti
jmp
movsb
fidivl
aaa
in
sbb
sub
lock
cmc
mov
sbb
inc
adc
mov
adc
pop
lods
and
dec
mov
xor
lock
inc
sbb
adc
adc
xchg
mul
and
cmc
pusha
xor
adc
sbb
xor
mov
or
cmp
fldl
mov
repnz
jo
in
xor
aam
xchg
aad
divl
les
mov
and
fsubl
fdivrl
rolb
je
ljmp
cmpb
add
div
and
subb
scas
and
push
and
xchg
push
add
xchg
aaa
enter
ss
ficoms
inc
xchg
aad
xchg
sub
xchg
das
inc
ret
mov
mov
sbb
inc
and
and
int3
std
xchg
aam
and
aam
movsl
imull
or
loopne
pusha
adcl
loope
iret
jne
std
xchg
hlt
push
and
hlt
test
vmovsd
adc
ficoms
mov
ret
mov
daa
sbb
adc
daa
mov
aad
in
pushf
out
loopne
and
clc
and
popf
and
leave
dec
push
cmpsb
and
cmp
fwait
or
inc
popf
lock
jge
testl
sub
clc
in
mov
rolb
gs
mov
rorb
fst
fcmovnu
xlat
cmp
xchg
out
rolb
dec
jle
mov
xchg
push
pop
mov
push
leave
popf
sqrtps
cli
dec
jae
xor
inc
sbb
sbb
push
sub
lea
test
icebp
std
call
xchg
xchg
bound
inc
xchg
cmp
add
xchg
dec
cmpsl
mov
add
std
mov
add
loopne
xchg
fsubrs
dec
mov
popa
std
adc
rcl
std
sbb
xchg
nop
inc
out
cmp
adc
repnz
inc
inc
sbb
icebp
pop
push
xchg
cmp
sbb
xchg
mov
adc
xchg
mov
aam
xchg
sbb
xchg
adc
sbb
je
rcrl
xor
lock
and
pushf
xor
lret
xor
scas
cmp
xor
push
add
fstpl
mov
fs
das
jbe
adc
xor
push
sbb
ret
fwait
push
andb
push
adc
jb
stos
pop
cmp
mov
add
les
lcall
sbb
adc
jmp
push
jge
adc
int3
mov
sbb
xchg
mov
inc
cmp
push
sub
notl
adc
xchg
inc
repnz
ljmp
xorl
lcall
mov
inc
shlb
les
outsb
mov
fdivrl
inc
fs
inc
outsb
add
aad
pop
outsl
pop
mov
repnz
call
xor
std
cmp
fcomps
sbb
adc
les
bnd
les
jp
inc
stos
mov
inc
imul
push
dec
andl
mov
xor
ja
push
repnz
dec
ja
xchg
push
icebp
jbe
pushf
jmp
xorl
frstor
mov
movsb
xchg
lods
xchg
push
and
xchg
push
insl
xchg
in
fcoms
sbb
xchg
in
dec
cmpb
arpl
lock
push
and
or
mov
mov
pusha
sti
mov
xchg
xor
mov
push
movsb
mov
and
push
jmp
and
and
pop
sbbb
in
adc
mov
xlat
cmp
in
dec
and
mov
sub
loope
mov
xor
adc
jb
cmp
pusha
testl
sbb
sbb
fstpl
jge
addb
sbb
mov
and
or
cmp
je
cmp
push
notl
cmp
pusha
mov
pop
adc
mov
sbb
mov
pop
les
pop
mov
roll
xchg
xchg
pusha
pop
inc
dec
loope
sbb
and
pop
or
inc
arpl
fnstsw
ret
add
jo
ret
js
xor
or
pusha
repnz
cltd
js
je
js
pop
sbb
ss
cwtl
loopne
xor
xchg
mov
sbb
test
cwtl
mov
xchg
cwtl
xchg
cwtl
mov
aam
notl
cwtl
in
or
and
sarl
push
fstp
inc
xchg
adc
mov
pop
movb
mov
shlb
les
andb
pop
fistl
cmp
mov
jp
mov
clc
xor
xchg
jno
jge
insb
xlat
leave
daa
sbb
clc
and
fbstp
inc
or
clc
ret
adc
sbb
rcll
mov
xchg
sub
fnstcw
cmp
xchg
xchg
xor
inc
dec
fadds
es
xchg
jg
jle
addr16
push
dec
or
shrb
into
inc
test
or
cmpsb
mov
data16
out
test
sbb
mov
mov
pop
push
or
push
call
ljmp
sub
cmp
xchg
pop
fcomps
dec
mov
cmpsl
mov
xlat
sub
sub
sbb
repz
call
mov
fmul
aas
push
adc
mov
nopl
cmp
mov
pop
cmc
or
pushf
or
push
movsl
in
cmpb
repz
jbe
pop
pop
sbb
orl
sbbb
jp
stos
push
repz
lea
pop
adc
decl
fldl2t
mov
mov
mov
clc
dec
scas
cmpsl
jb
cmp
nop
out
jo
mov
xlat
cmp
es
repz
mov
lcall
sbb
rcrl
lcall
and
inc
xchg
loop
jae
data16
pop
dec
sub
sarb
push
inc
pop
cltd
lcall
jb
xchg
lods
xor
mov
cmp
sbb
jle
pushf
and
mov
andl
je
mov
shll
scas
push
fistl
or
push
jbe
jmp
jge
ja
cmc
mov
adcb
xchg
mov
fldcw
mov
rcrb
repnz
pop
mov
jns
clc
mov
push
data16
sbb
xchg
es
jmp
sar
adc
xchg
xchg
repnz
add
mov
pop
mov
dec
or
mov
jge
insb
push
lret
pop
cmc
and
mov
call
or
js
cmc
adc
lcall
loopne
pusha
sub
adc
and
fs
das
sti
fildl
mov
in
jae
xchg
mov
mov
xchg
mov
push
dec
inc
call
imull
lret
xchg
adc
jns
les
out
cmp
cmp
daa
mov
je
xor
add
std
adc
xchg
pusha
repnz
jmp
std
sbb
xchg
stos
inc
lods
inc
push
std
adc
pop
repnz
jle
testl
andb
divb
mov
fisubs
mov
jp
frstor
data16
andl
inc
int3
rcl
ret
xchg
cwtl
sbb
js
bound
adc
xchg
in
mov
pop
mov
pusha
push
insb
xchg
inc
data16
and
test
repnz
icebp
or
mov
push
jne
lds
mov
mov
jno
mov
repnz
dec
loope
mov
mov
sub
mov
aad
in
pushf
sbb
decb
xchg
fwait
inc
sub
sbb
add
enter
cmp
inc
dec
push
sbb
stc
inc
dec
xor
pop
inc
dec
adc
fs
dec
out
sbb
movsb
shrl
lret
mov
imul
and
push
into
mov
sbb
xchg
cmp
std
sbb
jne
test
int3
dec
hlt
std
bound
pusha
pop
and
mov
push
daa
sbb
mov
rcrl
fdivs
inc
stos
insl
xchg
pop
mov
sbb
test
jecxz
fstpt
notl
fnsetpm(287
mov
and
mov
out
mov
pop
sti
daa
aas
lret
jns
aaa
pusha
mov
pop
push
insb
push
sti
daa
xchg
xchg
push
mov
sti
sbb
mov
pop
jns
movsb
xchg
add
sbb
leave
sbb
pop
mov
sbb
xchg
sbb
and
repz
jg
mov
and
aam
fstpl
int3
and
notb
incb
je
lea
cmp
sbb
cmp
sbb
cmp
in
pop
sbb
pop
loopne
fnsave
dec
sbbb
or
pop
mov
addb
fstp
inc
xchg
data16
bound
dec
aas
loope
mov
sarl
jl
push
sti
jl
pusha
mov
movsb
xchg
inc
jl
and
jl
mov
outsb
pushf
mov
xor
mov
pushf
jl
pop
jle
dec
mov
dec
jnp
pusha
divb
daa
sbb
mov
insl
push
inc
je
lret
arpl
sub
rep
daa
lret
into
faddl
fcoml
aam
mov
faddl
in
xorl
mov
dec
mov
pop
pop
mov
repz
shrb
outsb
insl
movb
bound
shlb
jne
jmp
sti
hlt
call
xchg
mov
dec
or
cld
repz
cli
xchg
les
xchg
pusha
adc
out
push
icebp
call
dec
inc
stc
in
sbb
popa
lods
jne
or
cmpsb
insl
ret
xchg
push
or
mov
lock
sbb
jecxz
sti
mov
gs
sbb
fbld
inc
in
mov
lret
dec
xchg
aaa
lds
gs
mov
dec
cmp
icebp
jmp
call
popf
or
je
mov
inc
push
je
mov
pop
sbb
xor
and
xchg
or
mov
pop
cmp
and
pop
je
andb
pop
lret
or
bound
movsl
dec
insb
dec
cs
sbb
and
pop
repz
outsl
data16
sbb
rep
mov
jns
dec
sarl
mov
mov
mov
xchg
je
jne
xchg
add
std
xchg
jmp
scas
mov
push
dec
fwait
std
andb
mov
fiadds
ljmp
mov
pop
enter
inc
popf
mov
repnz
sub
in
jmp
scas
xchg
xchg
fincstp
jne
les
in
add
sahf
jne
daa
push
sub
stc
ret
stc
mov
xchg
pusha
stc
or
adc
inc
and
loop
fiaddl
lock
sbb
cmpsb
mov
push
and
sbb
mov
sbb
push
ss
rcrl
xchg
mov
push
mov
xchg
popf
jmp
push
std
dec
and
adc
xor
push
or
jb
into
bound
rorl
std
bound
into
and
adc
pop
bound
xor
push
xor
and
adc
fldenv
jbe
in
adc
push
push
in
pop
pop
xchg
je
mov
je
lds
jbe
pusha
mov
xchg
mov
scas
fldl
jecxz
push
xchg
mov
std
mov
xchg
shl
xchg
mov
fidivrl
jb
repnz
mov
jl
or
jbe
les
lcall
xorb
add
les
lcall
and
add
les
jp
inc
dec
push
sbb
aas
inc
dec
push
sbb
mov
dec
rcrb
std
adc
push
std
sbb
xchg
sub
bound
dec
xchg
std
cmp
in
nop
fistpll
xchg
lea
bound
push
mov
filds
je
lahf
inc
dec
ret
outsb
lods
sbb
sbbl
sbb
aam
dec
add
std
adc
xchg
push
fiaddl
insb
dec
in
mov
mov
mov
jno
aaa
js
mov
je
or
rolb
in
xchg
out
shlb
aam
pop
jmp
sbb
dec
push
mov
bound
ret
dec
xor
push
cmp
sti
jecxz
pop
insl
nop
cmp
aas
or
adc
add
enter
xchg
add
out
cwtl
pop
mov
or
mov
dec
imul
je
and
andb
es
jnp
lods
icebp
adcl
push
and
and
out
or
mov
dec
sbb
or
jns
push
dec
test
leave
inc
das
inc
cli
jo
imul
shlb
scas
inc
fimuls
icebp
inc
test
ret
inc
and
xchg
bound
jle
pop
call
or
cmp
decl
or
pop
leave
sbb
sbbb
fst
inc
lea
lcall
dec
ss
xchg
hlt
imul
lret
or
cmp
mov
cmp
mov
nopl
lahf
leave
or
xchg
or
rcr
pop
dec
inc
orb
sub
push
xor
icebp
push
cmpsb
lret
or
daa
and
cmpb
lea
mov
adc
xor
movsb
sbb
pop
insl
sub
mov
xor
lea
cltd
orb
push
inc
fs
mov
jne
idivl
icebp
dec
cltd
mov
inc
mov
push
pop
mov
xchg
push
adc
fs
shlb
adc
pusha
mov
sbb
loopne
cmpb
loopne
add
outsb
add
add
sbb
add
subb
mov
outsb
rolb
data16
push
sbb
mov
mov
sbb
mov
adc
out
rep
imul
lret
aad
xchg
cmp
dec
cli
cmp
xchg
cmp
push
or
sub
in
icebp
pop
mov
and
pop
xchg
mov
push
xchg
js
xchg
xchg
test
and
jge
xchg
sub
lea
mov
ret
popf
dec
sbbb
mov
sbb
dec
data16
in
mov
push
dec
xchg
mov
xor
mov
mov
int3
fucom
pop
in
fucom
xchg
xchg
jmp
xchg
fstl
fnstsw
lahf
movsb
mov
xchg
aad
iret
std
sbb
test
std
sbb
std
in
fdivrp
sbb
std
aam
jl
xchg
push
cmc
pop
aad
rolb
xor
mov
stc
xchg
test
pop
inc
sbb
pop
fisubs
pop
test
inc
pop
outsb
push
pop
and
ret
pop
adc
mov
daa
mov
dec
data16
adc
jle
adc
jle
jle
sbb
test
jle
cltd
sub
mov
daa
xor
pusha
cs
loope
cmp
pop
sbb
movsb
add
xchg
decl
dec
xchg
mov
movsb
xchg
jae
push
and
mov
ss
mov
rclb
cltd
adc
mov
movsl
cmp
fildll
fldenv
stos
xchg
sbb
cmp
xchg
incb
in
push
mov
cs
pop
and
xchg
mov
dec
adc
leave
into
out
lret
lea
adc
in
sahf
pop
test
mov
mov
je
xor
mov
jmp
dec
cmp
add
jge
testl
fidivrs
jl
cld
and
mov
addr16
lret
and
and
xchg
xchg
push
xchg
outsb
aas
and
and
and
xchg
add
pusha
and
test
mov
add
jb
xlat
fs
divl
movsb
sbbb
xor
fists
xchg
and
lea
fildl
or
dec
jne
movsb
lock
pop
rclb
mov
rcll
fsubs
fcoms
mov
arpl
sub
mov
lods
xchg
sbb
popf
shll
mov
xorl
inc
addl
mov
mov
inc
rcrb
enter
pop
daa
add
inc
adc
mov
inc
jb
or
jmp
adcl
push
jns
popa
cmpl
xchg
ret
arpl
cs
push
jp
mov
fldenv
ret
out
inc
outsb
rcrl
mov
or
and
test
mov
mov
push
pop
mov
dec
shl
add
cmp
add
pusha
adc
pusha
pop
adc
and
inc
add
push
div
jp
mov
or
push
and
push
into
and
shlb
push
and
and
mov
outsb
inc
and
sbb
and
lods
insb
mov
push
push
xchg
daa
xchg
jb
test
notl
inc
rolb
inc
push
and
and
les
outsb
scas
fs
sbb
fs
lock
add
mov
xchg
aad
add
lea
bound
je
pop
mov
inc
adc
fistpll
or
mov
mov
adc
and
notl
test
movsb
xor
push
push
movsb
stc
mov
mov
or
enter
xchg
inc
jnp
sub
gs
decb
lret
insb
imul
mov
les
outsb
int
clc
push
scas
inc
pop
les
loopne
in
fs
xor
jnp
ljmp
ja
repnz
jbe
and
sub
repz
and
decb
in
mov
pusha
push
sti
fsubl
push
adc
shll
inc
adc
addb
outsb
pop
add
cltd
push
mov
xchg
aaa
aad
inc
sub
mov
sub
cltd
sbb
push
test
mov
jecxz
xchg
aad
out
fsubl
xchg
fisubl
push
xchg
pop
negl
jle
std
pusha
imul
fbstp
inc
adc
cmp
push
xchg
fs
inc
mov
inc
notl
inc
jge
lret
cld
mov
notl
popa
in
int
in
pop
pop
and
and
mov
cmp
xchg
int3
fs
popa
xchg
xchg
sti
ljmp
popl
fisttpll
xchg
push
jmp
inc
mov
sbbl
aaa
or
mov
arpl
stc
jmp
mov
notl
mov
frstor
test
mov
rclb
xchg
or
movsl
mov
addr16
adc
je
shll
push
and
xchg
pop
jbe
movsb
xchg
add
enter
data16
daa
sbb
and
mov
adc
push
fs
jle
push
loope
filds
sbb
add
jno
add
cmp
inc
pop
dec
fucom
shrl
int3
and
xchg
pop
loopne
movsb
aaa
insb
and
cmp
mov
add
bound
into
and
adc
pop
bound
push
dec
js
jb
into
and
adc
mov
sbb
fdivrl
rolb
loopne
sbb
in
cmpb
and
into
ficoms
cmpsb
andb
jmp
fldl
jecxz
es
outsb
mov
push
and
adcb
mov
notl
mov
mov
pusha
mov
inc
cs
mov
inc
mov
pop
aad
pop
inc
mov
stos
sahf
or
sub
out
dec
mov
inc
subb
stos
ffreep
xchg
insb
inc
clc
data16
ret
ret
inc
ret
pusha
inc
insb
and
ret
loop
xchg
sbb
xchg
lods
loop
pop
out
push
loopne
xor
jp
fucomi
fimuls
std
mov
pop
popa
mov
mov
push
pop
ret
pop
xchg
rolb
or
ret
pop
daa
jo
fs
repnz
in
push
loopne
das
je
daa
daa
sbb
daa
mov
mov
daa
jg
dec
mov
adcb
or
in
lret
rolb
mov
inc
in
cld
inc
mov
pusha
inc
insb
mov
jbe
imul
mov
in
and
scas
imull
gs
push
jne
flds
adc
add
enter
pusha
xchg
ret
pop
insb
jl
xchg
enter
addb
xchg
pop
fwait
call
mov
mov
xchg
cmpl
inc
xchg
mov
sbb
cmpsl
pop
sbb
jae
sbb
adc
push
inc
push
add
fsubs
test
mov
sub
sbb
clc
xchg
add
sbb
or
jne
inc
sbb
fisubs
movl
outsb
lret
out
ficoml
xor
ret
out
add
ficoml
bound
xchg
out
pusha
mov
lret
jge
pop
dec
fisttpll
add
fiaddl
xor
mov
fcoms
push
xchg
pusha
fsubrl
aam
or
push
sbb
mov
mov
and
movsl
in
xchg
dec
cli
pop
daa
lret
sub
imul
bound
popf
shrl
pusha
outsb
push
sub
ret
xor
bound
imul
xchg
jge
jecxz
bound
inc
pop
cmp
enter
or
jmp
repz
test
negb
lds
das
ret
jmp
imul
jb
sbb
lcall
xor
popf
rcl
adc
movsb
cld
repnz
idivl
xchg
xchg
cmp
mov
orl
test
data16
movsb
out
repnz
pop
stc
fadds
mov
pop
jo
sbb
add
loope
pusha
cs
ret
les
fs
jbe
push
jge
movsb
fs
pop
fmul
inc
pop
jle
jl
add
dec
enter
dec
xorb
push
mov
push
sub
imul
loop
mov
nop
xor
test
xchg
jae
pop
push
xchg
xchg
fwait
sbb
pop
sbb
pop
lahf
xlat
inc
pop
fs
xchg
sbb
punpckhbw
pop
addr16
xchg
test
cwtl
mov
push
cmpl
cmp
adc
popl
pusha
mov
jg
scas
push
mov
js
nop
inc
into
mov
movsl
push
popf
fisttpll
icebp
es
popa
data16
inc
gs
call
dec
or
inc
dec
in
add
and
cmc
jge
mov
sti
push
push
jle
inc
and
fistpl
sbb
cmp
movl
aaa
shll
cltd
addl
xchg
push
xchg
inc
cs
dec
fistl
or
rorb
or
lds
adc
cmp
icebp
or
jbe
and
out
sbb
jns
pop
cmc
add
xchg
mov
push
repnz
fsubl
lret
push
jge
mov
aaa
adc
add
mov
sbb
inc
mov
xchg
pop
fisttpl
xor
mov
sbb
mulb
fdivr
push
mov
xor
mov
cmpb
push
fs
cs
popa
and
inc
sub
xchg
daa
outsl
mov
fstpl
lods
mov
inc
mov
shlb
push
popl
cmc
and
fisubrl
daa
jmp
xchg
daa
cmp
inc
xlat
sub
popa
pop
xlat
inc
ljmp
cmp
insl
pop
jne
and
xor
sahf
loope
jne
lret
in
outsl
std
xchg
inc
jmp
negl
push
mov
inc
loop
ret
lea
in
icebp
dec
fs
or
mov
jp
inc
test
addb
jg
clc
lahf
cld
les
fadds
in
fisttps
sbbl
daa
fwait
test
push
xchg
in
mov
xchg
or
fwait
lcall
jl
inc
inc
mov
jae
ljmp
arpl
add
mov
mov
mov
jmp
iret
cmp
xor
ret
cmpsl
pmaddwd
subl
and
push
dec
sub
jbe
jo
xor
movsl
pop
inc
mov
add
lea
inc
test
sahf
mov
adc
cmpb
test
inc
lahf
pop
and
and
mov
cmpsl
xlat
sub
shrb
sub
mov
out
insb
push
aaa
ret
xorl
dec
sbb
add
xchg
ret
cmc
icebp
iret
cwtl
pop
dec
pop
cmpl
addr16
popfw
push
fstpl
or
mov
xchg
xor
insl
jb
mov
and
pop
imull
xor
pop
pop
xor
in
ljmp
test
cmpb
or
add
sbb
lahf
xchg
push
push
and
push
loop
popf
jb
les
jo
mov
scas
repnz
bound
ja
jne
xchg
cmp
flds
xchg
cmp
popf
sub
lds
shrl
cmc
adc
adc
out
outsb
jl
adcl
addb
imul
and
inc
mov
fwait
addb
sub
andl
pop
add
cmpsl
lea
or
jae
jg
stos
cmp
scas
mov
fadds
adc
cmc
xchg
add
fdivl
and
mov
mov
sub
test
ds
and
or
sub
jle
fs
test
mov
cltd
hlt
cmp
or
arpl
or
jo
stos
sub
add
hlt
mov
add
add
sbb
inc
arpl
clc
arpl
cmpb
leave
sub
mov
adc
xchg
mov
pusha
or
out
xchg
filds
mov
sahf
pop
xorl
xchg
cmp
or
sub
lcall
push
adc
sbb
rcrb
inc
bound
push
xchg
mov
push
hlt
add
stc
je
inc
pusha
dec
call
pusha
jno
test
jb
add
pop
ja
cmp
jno
cmc
inc
cmpsl
mov
and
push
stos
pusha
cmpl
push
xor
lcall
sahf
xorl
scas
inc
cwtl
iret
adc
aad
add
xchg
mov
sub
arpl
in
inc
jns
push
aaa
jle
gs
hlt
sub
inc
push
aas
add
and
xchg
leave
xor
inc
fdivr
scas
mov
movsl
adc
add
xor
pop
stc
or
push
xchg
pop
push
mov
mov
dec
inc
dec
enter
mov
inc
sahf
in
es
mov
xchg
sbb
lds
cmpsl
push
addr16
cmp
sbb
inc
sbb
or
sub
dec
test
and
ret
bound
xchg
cmpl
repz
dec
push
enter
fnstenv
js
add
aas
lcall
cld
dec
adc
ficomps
ja
ret
push
addb
inc
fisubrl
loopne
cmp
or
push
cmp
stos
sbb
in
adc
add
pop
leave
fistpll
xchg
pop
and
add
inc
bound
movsb
push
pop
cmp
sub
mov
xchg
xor
add
cmc
shll
mov
imul
or
push
push
fidivrs
jmp
adc
or
inc
mov
loop
xor
cmp
cltd
cli
cmp
mov
cld
sub
pop
or
sbb
sbbl
cmc
push
and
xor
std
sub
addr16
dec
les
ret
sti
add
imul
add
push
xchg
sub
fisubrs
into
pop
pusha
sbb
sti
imul
add
fdivl
inc
andb
push
inc
inc
fld
mov
xchg
loopne
lahf
add
repnz
xchg
inc
repz
int
clc
bound
xchg
ljmp
sbb
pushf
subb
adc
cld
fs
mov
add
push
add
pop
push
mov
push
ret
inc
lcall
out
mov
mov
xchg
xchg
roll
lcall
popa
shlb
xchg
les
popf
jp
ret
mov
fldenv
push
pop
sahf
sbb
xchg
add
hlt
jns
xchg
mov
push
mov
xchg
imul
rorb
add
add
lcall
cli
nop
sbb
je
lcall
xorl
or
dec
inc
xchg
cmpsl
push
icebp
pop
lret
add
out
les
cmpl
inc
add
clc
mov
or
sbb
fs
sbb
je
popa
popf
fildll
add
int3
inc
push
pop
jl
cmc
lods
and
shll
inc
add
push
add
pop
ss
inc
fadds
cmp
cltd
jae
mov
push
lcall
push
inc
enter
movsb
stos
sub
pop
test
mov
fadds
sbb
push
iret
cmpsl
popf
jbe
push
test
push
add
pushf
adc
outsl
test
movsb
add
outsl
sbb
or
pop
push
loop
sbbb
push
addr16
mov
add
sub
sub
into
lds
and
mov
and
scas
mov
inc
and
sbb
test
xchg
xlat
mov
and
and
sbbb
adc
test
andb
xchg
jg
push
stc
xor
add
xchg
sarl
dec
push
cs
push
cwtl
in
cmp
sti
int3
addr16
test
pusha
dec
fs
pop
jge
sub
repz
test
add
inc
outsb
aam
call
mov
ja
fwait
sti
lahf
sahf
fisttpl
or
enter
mov
pop
xorl
cmp
xchg
test
fsubs
lcall
xchg
jmp
add
sbbl
and
mov
in
adc
test
xchg
mov
daa
cmp
or
push
push
cwtl
lahf
xchg
xchg
lcall
js
cmc
inc
inc
mov
mov
das
adc
ret
cmp
inc
pop
icebp
inc
dec
jg
push
daa
push
mov
lahf
popf
shll
inc
xor
test
xchg
sbb
adc
push
fisttpl
insb
dec
and
call
sbbl
ret
lds
test
mov
lods
mov
repnz
pop
in
sahf
push
sbb
mov
mov
or
stos
cmpsl
sub
pop
andb
xor
js
js
cmp
sbb
xor
femms
popf
xor
ljmp
xchg
sti
cmc
roll
ja
push
addr16
jmp
cmp
mov
dec
cmp
outsl
adc
ret
and
and
add
fisubrl
ds
lcall
ret
icebp
dec
dec
mov
test
jge
bound
sahf
cmp
adc
pop
push
xor
mov
push
adc
push
scas
push
inc
shrl
lahf
mov
pop
jle
mov
xorl
xchg
jecxz
or
adcl
inc
lcall
test
iret
sub
andl
pop
adc
pusha
data16
add
sub
mov
repnz
sbb
xchg
pop
adc
sub
cmp
lcall
sbb
pop
cmp
cmc
push
das
add
jp
cmc
push
xchg
xchg
cmp
inc
test
mov
push
adcb
jg
in
adcl
daa
bound
jb
inc
push
jp
inc
inc
cmp
sbb
clc
adc
ja
jp
dec
mov
xchg
push
xchg
lahf
pop
sub
stos
xchg
repnz
loope
or
push
lahf
or
or
push
inc
jbe
repz
xchg
shrl
push
dec
cmp
adc
sahf
jb
arpl
pop
shll
add
and
cmp
shlb
mov
jo
inc
in
stos
adcb
add
push
adcb
push
and
fnstsw
mov
add
lea
filds
cmp
jb
jp
mov
fistpll
sbb
xchg
and
adc
inc
jle
add
loop
fstps
xchg
fnstcw
xchg
jno
push
and
arpl
outsl
sub
out
es
sahf
sahf
icebp
bound
xchg
scas
jp
andb
mov
test
sub
xchg
adc
lahf
xor
pop
mov
ret
iret
or
mov
xor
and
sahf
out
pop
sbb
push
sbb
mov
inc
fsub
inc
shll
mov
ffreep
dec
add
shll
orl
sub
outsb
test
pusha
or
ja
dec
out
adc
pop
addb
add
sub
cltd
addr16
add
out
adcb
and
xchg
inc
orb
shrl
sahf
test
ret
push
jecxz
mov
aam
push
rcrb
inc
sub
sub
or
sub
in
in
pop
stc
cmp
pop
aam
push
xor
clc
cmp
outsl
imul
sahf
and
ja
push
mov
mov
jecxz
add
sub
pop
push
mov
mov
pop
sub
lret
incl
mov
faddl
xorl
add
repnz
jg
clc
mov
test
jg
je
or
push
push
testl
movl
jb
pop
stos
stc
cmp
sbb
jecxz
movsl
push
cmp
pop
and
pop
pop
xchg
inc
shrb
mov
add
test
sbbl
in
push
test
add
data16
pop
jo
xchg
andb
xchg
jg
outsl
jae
iret
pop
stc
pop
sti
out
cmp
fiadds
inc
pop
jo
jp
subb
pop
push
mov
xlat
mov
xchg
adc
popf
repnz
aas
dec
mov
les
cmpl
ficoml
test
push
or
inc
lret
or
mov
lds
xor
fisubl
pop
in
mov
mov
aas
cmc
pop
inc
scas
mov
sbb
and
hlt
mov
iret
es
push
stc
xchg
std
adc
push
sub
pop
xchg
jecxz
fistps
int
and
dec
pop
dec
int3
popf
inc
fwait
and
push
out
bound
add
sahf
iret
sbb
ds
add
mov
inc
pop
test
in
jle
add
cmc
mov
std
lea
negl
push
je
sbb
int3
loopne
cmp
xchg
mov
lahf
loop
mov
xor
and
je
data16
inc
push
lahf
aaa
shrb
add
ja
mov
mov
movsb
mov
inc
cmc
out
out
xchg
test
lods
push
fistps
sbbb
xchg
jg
in
repnz
orb
ret
iret
fwait
pop
xor
lret
cmc
push
movsb
pop
fldl
mov
xchg
pop
pop
pop
add
addr16
sarb
dec
add
ret
out
bound
sub
mov
or
out
sub
add
inc
dec
pop
add
test
je
xchg
xor
add
add
outsl
sti
xchg
cmp
sbb
cli
mov
addr16
mov
add
jnp
mov
sbbb
ds
lcall
or
cwtl
xchg
xchg
test
mov
outsl
jo
fadds
mov
jns
mov
sub
int3
xchg
std
sbb
jg
sbb
sbb
inc
cli
push
shll
je
in
xchg
lds
andb
rol
data16
sbb
lcall
xchg
or
orb
fnstcw
pop
addl
or
pop
inc
jge
test
movsl
dec
leave
pushf
les
push
fsubrs
pop
inc
mov
cmp
xchg
or
cmpl
test
sbb
adc
fistpll
sbb
add
ja
cs
mov
mov
sbb
lcall
xchg
inc
sahf
sub
fldl
test
cmpb
mov
sbbb
imul
mov
xchg
inc
mov
sub
movsb
inc
fldt
mov
sbb
and
aam
pop
jp
hlt
sti
mov
shlb
out
adc
js
rcrl
stc
cwtl
ror
pop
test
jecxz
sbbl
dec
cmp
pop
test
loop
xor
repz
mov
jle
inc
push
pop
push
xchg
pop
xor
shlb
sar
push
mov
mov
and
add
mov
in
addr16
daa
addr16
inc
add
lahf
add
dec
xchg
mov
and
push
mov
xchg
xchg
js
in
mov
inc
outsl
jne
and
mov
sbb
lret
mov
lods
cwtl
or
sub
aad
dec
dec
xlat
lea
cmp
fwait
jb
pusha
aam
addr16
cltd
dec
popa
sub
mov
lahf
arpl
push
arpl
inc
xchg
pop
jle
xchg
daa
popl
imul
dec
push
fsubrp
aad
dec
push
lock
pushl
lcall
sar
push
lahf
sub
push
mov
rclb
popf
sahf
cwtl
or
sbb
mov
fidivl
cmpsl
aas
stos
add
lcall
push
jecxz
leave
adc
ja
mov
repz
mov
sub
pop
dec
xchg
cmp
clc
cmp
rcr
sbb
mov
out
addr16
and
cwtl
cmpsl
xlat
dec
stos
iret
in
cmp
sub
repnz
push
push
sbb
and
inc
inc
movsb
push
pop
inc
adcb
iret
sub
lret
push
jbe
daa
addb
sub
test
inc
test
lcall
sub
sub
subl
pop
imul
xchg
jecxz
decl
push
inc
sbb
repz
add
imul
xor
lea
ja
mov
or
stos
std
stos
push
or
ja
shlb
pop
dec
pop
add
je
xor
add
xor
cmp
and
into
lods
int3
ret
pop
test
add
lret
nop
cli
orb
push
pop
mov
xchg
loop
movsl
jecxz
cmp
add
sbb
iret
mov
lds
pop
mov
adc
push
jp
dec
fistl
jle
loop
cmpsb
inc
mov
mov
lods
and
les
mov
sbb
xchg
pop
sbb
insb
inc
repnz
and
xorb
movsl
fisttps
inc
sbbl
and
jg
addr16
and
dec
sub
xor
or
cmpsb
in
sbb
jp
cmp
push
cmp
sbbb
push
lods
inc
mov
icebp
push
stc
pop
mov
xlat
cmc
mov
or
out
ret
jmp
jle
arpl
bound
jb
int3
sbb
outsl
adc
bound
jmp
mov
inc
add
or
lcall
and
jb
outsl
fstps
jmp
mov
pop
xor
lods
or
hlt
add
inc
inc
mov
push
daa
leave
pop
mov
ja
popf
push
jp
aas
cs
push
pusha
push
and
dec
out
mov
stos
ret
out
mov
pop
les
ja
shll
fcompl
push
popa
js
cmc
arpl
push
loope
notl
divl
adc
inc
mov
mov
in
jl
aam
jne
dec
cmc
and
in
ffree
in
sbbb
stc
repnz
mov
loope
pop
mov
ret
std
popf
add
out
jg
test
loop
xchg
xchg
pop
adc
push
push
sahf
jg
add
jp
and
mov
lahf
cmc
pop
mov
fldenv
and
cld
cli
dec
sbb
pop
cmp
sub
aam
and
add
xchg
add
mov
pop
jmp
jne
adc
popf
push
int
dec
and
out
sbbb
inc
daa
popf
enter
inc
aaa
flds
pop
dec
mov
pop
add
pop
fadds
adc
push
daa
mov
repz
pop
mov
ljmp
mov
xchg
xchg
fistps
cltd
cltd
add
movzbl
pusha
in
fstps
sbb
addl
jle
arpl
mov
mov
push
and
push
jl
cltd
cmp
and
sti
sub
packssdw
in
loop
push
inc
add
cmpb
jmp
xor
pop
mov
out
insl
pop
mov
fidivrl
dec
mov
aaa
sbb
lret
add
dec
shlb
push
rcrl
xchg
fisttps
pop
aaa
sarl
add
bound
and
mov
testl
xor
sub
mov
movsl
leave
js
shl
cwtl
in
xchg
lcall
aam
and
adc
movsb
repnz
lea
push
jecxz
out
test
fwait
add
pop
orl
jb
pop
xor
cmpl
bound
aas
mov
push
pop
cmc
dec
in
in
sahf
lods
inc
dec
add
sbb
ss
xchg
mov
push
nop
inc
adc
ret
test
sub
loop
push
bound
movl
cld
popa
outsl
xchg
or
jecxz
add
dec
inc
pop
inc
fdivrl
push
and
and
rclb
fwait
test
idiv
jecxz
push
cmp
cmp
and
push
mov
jbe
and
fildll
out
cmpl
imul
mov
leave
jg
pop
stc
mov
sarb
jb
inc
testl
or
mov
sbb
add
adc
or
out
xor
scas
xchg
mov
imul
out
imull
test
popa
ss
add
sahf
fcoml
xchg
jb
hlt
jg
aas
or
push
cli
and
inc
ja
add
sub
addr16
xchg
pop
xchg
repz
repnz
push
jmp
cmpsl
mov
adc
nop
jecxz
dec
cmpsl
mov
enter
pop
int3
fdivr
add
inc
andb
jecxz
mov
test
nop
imul
cwtl
xorl
sub
je
rorb
enter
pop
cmp
dec
xor
pusha
jne
popa
addb
dec
jge
dec
inc
inc
push
sub
fwait
pop
push
mov
inc
inc
or
pop
xchg
fidivl
ljmp
fimuls
xchg
push
push
notl
xorb
pop
xor
add
sub
push
xor
mov
cmp
mov
incl
push
inc
mov
and
and
cltd
pop
cmpl
cmp
dec
test
test
jg
mov
mov
adc
or
stc
adcl
mov
mov
pop
xchg
bound
or
cmp
and
mov
out
add
repnz
xchg
pop
fcmovbe
mov
addr16
cmp
pop
xor
pop
cli
adc
inc
in
lcall
popf
js
add
test
mov
mov
and
mov
loop
in
dec
add
dec
bound
inc
jp
dec
add
div
xchg
inc
cmpsb
mov
movsb
outsl
pop
jp
xchg
cmpl
lds
stc
mov
cmp
and
jno
cmp
add
gs
pop
mov
nop
push
fyl2xp1
xchg
rcrb
lock
xchg
cmpsb
mov
rcrb
test
pushf
add
jle
mov
iret
cli
mov
push
sub
loope
or
jecxz
daa
cmp
ja
int3
and
add
push
leave
fs
mov
insl
test
xor
push
push
lahf
add
fwait
mov
or
loop
xchg
in
sahf
stos
pop
push
lock
dec
xchg
mov
outsb
xchg
push
lock
data16
ja
adc
hlt
jb
add
inc
je
or
pop
jb
fwait
lret
jmp
ret
sarb
cld
jbe
addr16
inc
xchg
je
cmp
push
sbb
mov
add
mov
fwait
aas
comiss
sahf
add
inc
mov
mov
leave
lcall
cli
icebp
push
jns
addr16
addr16
nop
push
mov
frstor
xchg
and
inc
mov
or
jp
sbbl
fsubs
pusha
jle
loope
rcrb
cmp
dec
fnsave
out
mov
sbbl
sbb
jl
sahf
inc
fidivrl
daa
fistps
out
and
in
subl
pop
adc
fwait
test
mov
fsts
and
jno
add
add
cmpsb
jne
cmp
push
mov
dec
inc
inc
icebp
and
aam
or
fwait
xchg
push
inc
cmp
dec
add
sbb
add
fstpl
lcall
shlb
fwait
push
jns
inc
xchg
sbb
mov
dec
pop
sbbl
fs
mov
mov
push
arpl
enter
test
cld
mov
cmp
and
mov
xchg
cwtl
test
fwait
xchg
jp
xchg
cld
notl
lcall
dec
add
ret
sahf
xchg
push
movsb
testl
sahf
mov
pop
frstor
icebp
jo
enter
daa
xlat
movsb
fstpl
push
aaa
pop
aas
stc
push
out
adc
adc
stc
bound
sbb
lds
mov
or
sbb
mov
xchg
cmc
pop
mov
outsb
sahf
and
adc
js
push
push
repnz
push
adc
ja
dec
xchg
loope
dec
in
push
pop
mov
jecxz
inc
sbb
orl
push
push
je
dec
js
outsl
pop
inc
jo
lods
inc
clc
sub
adcb
inc
and
fnstcw
dec
lods
jnp
adc
jb
or
push
cltd
js
enter
pop
inc
bound
mov
sti
inc
add
xchg
mov
xchg
pop
bound
dec
ror
sbb
push
test
pushf
aaa
adc
pop
into
jl
aam
add
jp
and
push
dec
repnz
push
mov
jge
push
inc
mov
mov
add
addr16
fisubrs
mov
lcall
insl
sbb
stos
cwtl
pop
dec
and
testl
testl
in
aas
andl
mov
inc
popf
add
pop
adc
sahf
sub
sbb
xchg
ficoml
mov
dec
cmpsl
icebp
xchg
loop
mov
mov
sbb
gs
pop
cwtd
mov
mov
sub
popa
inc
push
inc
xchg
ja
push
sub
xlat
insl
mov
outsl
lahf
add
or
addr16
pop
xchg
nop
dec
imul
add
pusha
xor
jb
popa
lcall
and
pushf
imul
filds
xlat
cmp
bound
mov
sbb
and
cmp
add
sub
and
repz
js
test
in
pop
or
cwtl
imul
and
lcall
jno
popa
inc
out
imul
xchg
dec
idivl
outsl
fstl
push
popa
nop
cmpl
cmp
bound
xchg
inc
dec
or
mov
insb
pop
daa
call
int3
lret
addr16
loope
or
addb
js
cmp
dec
imul
inc
cmc
out
inc
icebp
aas
sbb
cmp
lahf
rcll
sub
inc
inc
orl
pop
imul
jge
hlt
ja
xchg
xchg
push
lds
ja
aaa
or
sbb
decl
out
cltd
ss
mul
xchg
ret
add
cld
xchg
push
lcall
or
test
addl
ja
fmull
mov
out
sahf
add
push
xor
cmp
adc
cwtl
mov
sbb
push
ljmp
push
or
xor
sahf
and
sbb
mov
pop
inc
inc
jg
sbb
bound
push
mov
xor
jecxz
xchg
mov
push
jecxz
std
mov
ja
repnz
dec
sarl
and
outsl
mov
scas
xchg
add
out
mov
je
lds
inc
add
js
and
xchg
jne
out
adc
jg
std
jg
jecxz
mov
mov
arpl
mov
xor
jb
xchg
repnz
inc
imull
lahf
add
adc
jns
add
pop
scas
push
mov
mov
cmc
sub
aam
in
cmp
mov
arpl
sbb
addr16
orb
loope
xchg
mov
lcall
dec
fisubs
xchg
adc
cmc
enter
aaa
sbb
mov
sbb
adc
adc
pop
inc
push
fisubrs
add
ja
xchg
out
cltd
movsl
adc
adc
xchg
jle
pop
ficoms
xchg
push
mov
fisubrl
fwait
test
nop
and
jo
add
dec
sbb
xlat
push
xor
sbb
xchg
mov
stos
ret
jp
cltd
jl
sarb
cmpb
cmpl
loop
adc
push
test
add
pusha
imul
sbb
sti
pop
mov
xchg
ljmp
jmp
and
dec
xchg
push
push
test
int
mov
out
je
or
insb
mov
ss
cmpsl
push
xor
pop
mov
scas
lea
lcall
pushf
pop
lahf
mov
rcrb
orl
inc
subl
or
xchg
adc
add
inc
adc
jo
mov
popf
fcmovne
adc
sbb
addr16
push
push
xchg
jle
loope
das
sahf
fidivrs
jl
push
bound
ret
pop
and
mov
insb
fnstenv
and
lods
pop
sbb
mov
mov
loop
fbstp
bound
jnp
lcall
jnp
xor
adc
mov
stos
adcb
leave
or
cmpsl
sahf
fmull
jns
jno
pop
andl
xchg
aas
dec
stc
jecxz
shrl
inc
cmc
pop
lock
xchg
pop
ja
cmp
popl
test
cmpsb
orl
push
jae
inc
pop
in
dec
xor
xchg
mov
in
ja
rol
rorb
adc
lcall
int3
push
arpl
cltd
pop
out
jp
or
mov
mov
mov
xchg
inc
inc
sti
jge
add
sbb
add
fs
adc
mov
inc
mov
cmp
jecxz
and
push
pop
gs
push
cmpsb
push
push
mov
outsb
repz
push
push
dec
push
bound
mov
and
bound
pop
sub
cmpsl
repnz
test
sub
shlb
ja
es
inc
jp
mov
into
es
mov
push
push
shl
fidivrs
mov
mov
sti
or
shrl
test
test
rorl
test
out
aaa
xchg
fldcw
out
lods
mov
dec
push
dec
sbb
sbb
dec
cmc
sbbl
jl
fstps
xchg
mov
inc
inc
aaa
flds
ljmp
cmc
and
pop
aad
push
xor
test
popf
enter
xor
test
movsb
cmpsb
popl
mov
and
rclb
adc
les
negl
movsb
int3
cld
loop
pop
and
in
inc
push
sub
xlat
push
xchg
push
add
sub
cwtl
loopne
inc
loope
cltd
inc
jg
mov
sbb
jg
xchg
xchg
cmc
fwait
stc
pop
loope
ss
push
push
inc
popf
adc
sbb
inc
aam
aad
iret
sbb
inc
push
mov
jae
fstpt
in
mov
sbb
rcrb
mov
ja
insl
ret
pop
and
inc
das
lcall
push
pxor
orb
cmp
inc
and
and
cs
jecxz
fsubrs
inc
jo
arpl
dec
in
stos
jg
iret
inc
and
aaa
add
pop
inc
call
dec
xor
mov
sbb
ret
testl
and
push
subl
aas
jno
orb
ja
pop
imul
mov
sub
xchg
push
ds
push
nop
mov
je
cmc
in
inc
ret
pusha
adcb
xor
int
add
popf
inc
add
loop
pop
push
pop
mov
jbe
jb
push
xor
mov
incl
adc
js
push
push
jmp
jo
ja
xor
mov
add
scas
xorb
mov
cmc
xchg
mov
in
jecxz
add
jbe
stc
mov
pushf
xchg
add
clc
or
inc
pushf
out
incl
aas
push
pop
or
mov
pop
or
mov
xchg
cmp
adc
jle
out
daa
data16
andb
in
mov
adc
inc
mov
add
fcompl
push
movsb
or
fisubs
cmp
sbb
mov
jecxz
mov
arpl
int3
and
orb
dec
sub
or
movl
pusha
sbb
fst
mov
mov
shrl
fidivrl
in
mov
mov
or
bound
add
push
add
xchg
fimuls
or
int
add
scas
push
fs
xchg
jae
test
xchg
popa
cltd
fcoms
fistps
jo
out
xchg
fdivrl
icebp
mov
sbb
mov
sahf
pop
bound
jecxz
data16
pop
cmpsb
adc
insb
xor
sbb
xor
xchg
aaa
sbb
jo
fdivp
mov
mov
iret
mov
cs
arpl
add
lds
xor
adc
xchg
push
cli
cmp
sbbl
inc
add
add
iret
sub
icebp
xor
sbb
sbb
sub
mov
adc
movsl
es
pop
lea
hlt
mov
icebp
out
movsb
mov
and
lcall
pop
or
popf
jb
push
xor
gs
or
rcrb
inc
pop
stc
sahf
mov
dec
pop
sbb
mov
xchg
pop
lcall
data16
sbbl
subl
mov
jp
test
pop
ja
fdivl
sub
xor
pop
mov
adc
incl
xchg
push
push
data16
bound
mov
and
insl
inc
xchg
and
lea
sub
jnp
adcl
stc
mov
in
movsl
pushl
popa
test
adc
test
xchg
cltd
mov
jp
sbbb
pop
ror
data16
xchg
repz
mov
pop
mov
icebp
jl
mov
xchg
add
out
icebp
es
inc
sahf
fildll
sub
dec
out
data16
sbb
test
mov
out
fdivr
pop
hlt
jno
dec
add
fwait
lahf
sahf
inc
outsb
sub
pop
mov
sbb
mov
movsl
imul
das
mov
mov
dec
into
jb
inc
ret
mov
cld
es
adc
fmull
jno
enter
adc
sub
lods
pop
mov
or
inc
ja
cmp
daa
or
shrl
mov
std
clc
mov
adc
insl
pop
xchg
cmp
cmp
cmpsb
fwait
cli
pop
cltd
cwtl
adc
fistpll
xchg
jbe
mov
sti
inc
pop
in
roll
lock
or
cmp
mov
in
imul
iret
fwait
hlt
in
imul
jge
add
push
jg
and
pop
js
sbb
mov
popf
pushf
clc
cmp
mov
fcmovnb
aad
inc
xchg
in
sbb
loope
bound
mov
fldcw
mov
fcomps
fs
sbb
test
inc
pop
inc
je
pop
fs
daa
in
mov
xchg
mov
lcall
pop
inc
pop
push
cld
cmp
sti
inc
cmpsl
sbb
hlt
test
test
mov
jmp
out
and
ret
mul
mov
loop
enter
xchg
shl
aaa
inc
xchg
add
mov
pushf
and
loope
mov
les
cmp
jo
nop
into
imul
nop
lds
pop
cmp
hlt
mov
js
pop
ds
push
in
in
xchg
roll
jns
fdiv
iret
jb
jp
dec
mov
pop
subl
xchg
jg
imul
ljmp
daa
mov
call
aas
xchg
mov
lahf
jp
jbe
shl
push
rcr
add
adc
in
popa
and
pop
out
mov
jb
add
ss
ficomps
hlt
add
lods
sbb
icebp
pop
add
and
add
inc
rcrl
nop
test
lahf
jbe
test
in
push
add
inc
mov
sarb
repz
aaa
mov
test
pop
mov
sbb
xchg
out
mov
mov
out
mov
fwait
pushf
and
imul
pop
and
inc
add
bound
xchg
cmpl
cmp
jnp
jp
insl
pop
idiv
in
mov
nop
cmp
xor
xchg
xchg
add
dec
push
xchg
push
push
sbbl
or
cwtl
test
mov
cwtl
ljmp
jbe
add
xchg
lcall
pop
shl
or
out
and
lds
sti
add
xlat
dec
add
loopne
bound
addl
aad
fsubs
flds
inc
xor
cmp
cld
andb
sub
xor
mov
fldenv
loope
inc
xor
mov
jo
fucomip
mov
std
std
and
fsubs
pop
iret
lds
test
inc
push
sub
mov
sahf
mov
imul
add
das
imul
mov
sbb
movsl
fisubl
test
adc
or
push
arpl
nop
adc
mov
imul
lds
jno
jne
lcall
cmp
mov
sti
mov
sti
mulb
out
cltd
inc
cmp
frstor
adc
nop
testl
sbb
pop
insl
sti
movsb
or
andl
addr16
in
leave
xchg
insb
cmc
pop
rolb
repnz
adc
lcall
or
lcall
and
outsb
sbb
push
cld
ficoml
pop
inc
in
sahf
mov
adcl
sti
movsl
imul
sbb
add
cmpb
mov
jmp
arpl
loop
push
mov
mov
subb
mov
sbb
cmp
add
loope
lahf
xor
pop
adc
inc
fwait
adc
sti
pop
loope
inc
rcrl
lea
push
and
xchg
add
pop
fdivr
mov
cmpl
jle
xor
cmc
sbb
xor
push
jp
inc
add
iret
sub
addl
sbb
sbb
lods
dec
mov
push
xor
pop
aam
sub
xor
and
mov
push
ja
insl
orb
fadds
and
push
gs
out
flds
mov
outsl
mov
cmp
ret
adc
rcrb
fdivl
jbe
xor
mov
imul
jnp
in
faddl
sub
cmp
scas
bound
scas
fs
pop
mov
xchg
adc
push
adcb
and
cmp
xchg
xchg
xor
sub
and
cmpsl
jae
xchg
jg
xchg
add
jno
dec
mov
lahf
dec
cmp
push
dec
add
or
xchg
mov
jg
mov
in
jb
dec
and
dec
arpl
sbb
push
test
cltd
jmp
mov
mov
jb
pop
fwait
or
xchg
pop
adc
data16
cmpl
cmc
fs
nop
xchg
push
cltd
insb
inc
xchg
or
ss
stc
add
inc
jge
xchg
pop
mov
and
xchg
leave
add
jnp
sbb
sbb
lret
rcr
inc
dec
inc
inc
loop
mov
pop
sub
mov
outsl
test
lcall
inc
jmp
rcll
sub
jno
repz
sbb
mov
cmc
sub
dec
adcb
mov
sub
pop
out
push
xchg
mov
icebp
gs
das
cmc
loop
add
test
xor
pushf
mov
cli
xchg
leave
out
xor
test
cmc
cmpsl
jnp
sbb
jo
mov
daa
pop
push
inc
scas
cltd
pushf
incl
sbb
out
mov
scas
cwtl
bound
push
popa
outsb
scas
mov
stc
mov
pop
mov
mov
mov
scas
js
out
mov
and
or
xchg
jae
test
inc
sarl
out
test
mov
adc
stos
test
aad
int3
shl
iret
sbb
fmull
fwait
mov
mov
les
jg
loopne
cmpsb
dec
aad
ret
push
dec
cmc
mov
inc
mov
pop
add
popf
add
sti
mov
iret
iret
lcall
popf
lds
fstpl
popf
mov
adc
stos
pop
or
lcall
add
sub
pop
loopne
mov
fstps
out
sbb
dec
xchg
inc
test
icebp
push
fdivrs
hlt
sbb
add
bound
pop
ror
and
pop
mov
add
inc
mov
jge
pop
fucom
mov
lret
push
popa
dec
cmp
mov
adc
add
sub
leave
daa
dec
lret
sub
sbb
add
clc
sahf
and
arpl
popa
imul
cwtl
xor
or
test
sahf
pusha
ret
dec
fimull
movsb
cld
sahf
mov
inc
cwtl
in
test
mov
popa
mov
je
leave
and
les
roll
nop
stos
add
addr16
add
icebp
mov
sbb
cmp
mov
or
icebp
out
lcall
daa
imul
cld
cltd
mov
or
add
pop
or
stos
inc
scas
mov
pop
fisttpl
mov
mov
push
or
out
sbbb
xlat
cmp
inc
lds
ds
cmc
shrl
sahf
inc
jp
pop
mov
ss
loop
or
push
mov
bound
aas
lock
cltd
aas
lahf
add
dec
insl
mov
cmp
mov
stos
pusha
fs
jle
loope
mov
ss
xchg
push
pop
js
push
xchg
outsl
xchg
fsts
mov
add
mov
aaa
fldenv
and
add
add
arpl
or
fcomip
adc
inc
cmc
jl
test
addr16
mov
pop
cs
fwait
dec
loopne
jmp
push
mov
or
xchg
data16
jnp
test
aaa
ficompl
mov
xor
mov
enter
and
pushf
ja
dec
aam
mov
xorl
sub
mov
jnp
sbb
and
int
xor
add
ror
dec
mov
test
push
mov
mov
fs
cmpsl
cmp
scas
mov
imul
adc
or
mov
cwtl
mov
xchg
mov
jno
jb
cltd
lret
and
fbstp
cwtl
loopne
pop
push
sti
repnz
xchg
add
arpl
mov
aaa
pop
mov
add
andb
push
mov
fimull
mov
pop
pop
pop
std
test
add
scas
fistpll
ja
pop
add
data16
sbb
pop
add
sahf
js
dec
popf
sub
inc
and
dec
lahf
pop
add
sbb
mov
popa
xor
xchg
pushf
xchg
hlt
sti
popf
jno
cltd
daa
outsl
orb
cld
push
dec
inc
faddl
mov
gs
mov
push
jmp
ja
loopne
and
pusha
mov
sti
jno
fcoms
add
xchg
in
add
xchg
mov
loopne
mov
test
pop
xchg
or
pop
arpl
ljmp
repnz
sbbb
xorb
pop
xchg
mov
add
mov
daa
mov
sbb
lahf
rcrl
ret
bound
pop
sbb
mov
dec
jge
dec
hlt
das
xchg
mov
pop
fisttpl
pop
rolb
xchg
xchg
pop
call
hlt
pop
sbb
pop
cltd
sbb
mov
lahf
push
jg
cmp
inc
imul
addr16
push
dec
xor
jecxz
xchg
sahf
movsb
jge,pn
sbb
cmp
mov
mov
dec
rclb
dec
jge
popf
mov
ss
sub
sbb
jns
aaa
dec
push
sbb
adc
mov
daa
and
loope
daa
fs
adcb
and
xchg
push
dec
popf
cmpsb
outsl
xlat
cmp
mov
dec
or
popf
dec
inc
outsl
xor
cs
lahf
jbe
pusha
add
or
fs
push
pop
outsl
mov
xchg
lcall
dec
pop
std
sbbb
jle
ret
mov
cmp
add
mov
and
adc
sahf
loopne
push
xor
dec
pop
or
sbb
pop
sub
mov
ja
add
mov
jae
adc
sbb
ja
inc
inc
clc
sahf
or
pop
cs
sahf
inc
cmp
mov
jnp
call
stc
fstps
aam
lds
pop
jp
les
push
and
mov
dec
xchg
popa
mulb
movsb
fmuls
mov
repz
mov
idivl
push
popf
imul
inc
cmp
or
xchg
and
mov
rorb
enter
cmp
pop
pop
pop
xchg
cwtl
and
push
push
sub
xchg
fcomps
test
and
addb
sbb
push
cmpsb
xchg
sub
dec
sub
mov
loope
xchg
bound
or
xlat
mov
xchg
addb
adc
popa
inc
or
jle
xchg
jno
jecxz
ficoms
sub
jo
cmc
pusha
mov
test
push
lods
add
ljmp
lcall
js
movsb
push
cmp
scas
lods
test
push
xchg
ja
fs
rcrl
dec
sbb
adc
add
inc
and
out
sbb
jle
fcoms
mov
and
push
pop
pop
ficoml
add
cld
mov
dec
sub
and
cmp
mov
js
mov
push
aam
fbstp
adc
call
nop
jae
dec
push
cltd
ss
loope
pop
cmpsl
sub
rclb
jb
out
dec
cmp
adc
xor
in
or
cmp
inc
fmul
popa
dec
add
popf
add
cmpsl
jo
andb
lcall
or
fdivrs
jg
lret
pusha
std
in
and
mov
inc
mov
shll
add
adc
lcall
outsb
cmpsl
cmp
pop
insl
lods
pop
ficoms
stc
cld
pop
push
call
iret
add
xor
sbb
mov
cmp
outsb
mov
pop
xchg
lret
push
pop
jge
or
lock
adc
push
mov
xchg
fimuls
cmp
pushf
xor
scas
push
arpl
xchg
cmp
cli
cltd
pusha
shll
cmpsb
dec
sti
xchg
cmp
mov
add
pop
bound
mov
arpl
ss
mov
sbb
ret
cltd
inc
addr16
sub
popl
jne
jg
mov
mov
mov
pop
jns
add
inc
xchg
pop
pop
or
addr16
add
mov
and
test
out
mov
rcll
adc
mul
mov
cli
pop
or
sub
out
cmp
addr16
and
jg
xchg
mov
cld
and
push
stc
add
je
mov
nop
mov
lahf
add
addr16
and
out
mov
xchg
mov
push
clc
js
add
lea
adcb
xlat
syscall
pop
push
repnz
sbb
add
fs
pop
push
rclb
pop
ja
xor
data16
inc
sbb
in
cmp
in
sbb
sarb
mov
out
loop
mov
and
lds
ja
sbb
add
das
add
jns
popl
dec
int
pop
lods
push
les
fbstp
inc
sub
scas
xlat
into
imul
pop
mov
xor
xchg
ja
cmp
cmp
out
push
xchg
cld
mov
mov
cmp
push
ja
lahf
mov
arpl
and
bound
popf
add
sbb
push
cmp
xchg
and
or
adc
cmp
pop
adcl
repnz
lahf
outsb
dec
jo
js
jns
mov
sub
adc
movsl
pop
sbb
sbb
xchg
sbb
xchg
or
ljmp
nop
adc
cltd
pop
pop
lods
and
and
arpl
fidivl
outsl
xchg
and
int3
pop
adc
sbb
dec
sbb
popf
ficompl
mov
stc
fs
cld
hlt
fsts
jge
xchg
sarl
insl
pop
sub
mov
imul
js
loop
ds
add
fbld
mov
imul
pop
pop
xchg
cmp
cmpb
ficomps
fcomip
xchg
inc
pop
lcall
inc
jmp
jo
ficomps
stos
clc
push
ja
enter
adc
dec
lea
int
ljmp
fwait
push
std
fistpl
mov
cli
jp
cmpb
adc
pop
cli
jp
pop
lret
push
ja
sub
or
adc
add
stc
inc
xlat
sbb
sub
xchg
sub
pop
ret
pop
inc
xchg
ja
inc
imul
pop
pop
aad
cli
mov
sbb
cmp
jge
xchg
repz
dec
or
lds
fwait
or
fisubs
imul
daa
test
rcl
and
jae
test
cltd
cmp
insl
stc
push
adc
shrb
pusha
test
and
mov
lahf
sub
adc
mov
jae
aaa
sub
lods
mov
push
cmpb
jmp
addl
jb
insl
xchg
inc
jg
adc
dec
pop
xor
xlat
out
popw
inc
jb
adc
rcrb
icebp
repnz
decl
adc
sbb
sub
popa
pushf
mov
aaa
mov
and
push
test
lret
movsl
push
jg
bound
and
add
inc
xorl
adc
jb
andb
and
mov
xchg
inc
pop
js
inc
adc
bound
dec
aas
add
fldcw
insb
mov
mov
add
inc
and
and
sub
jle
jns
repnz
mov
cmc
lret
mov
lcall
ja
notb
pop
inc
pop
inc
fbld
mov
loopne
and
flds
pushf
fistps
insb
fistps
ds
mov
or
fisubs
cltd
mov
sbb
gs
movsb
sbb
mov
shlb
lock
iret
adc
fsubl
jb
test
insl
ja
roll
jnp
jb
lcall
add
add
arpl
xchg
xor
mov
orl
sti
fsubrl
jo
loop
dec
add
or
pop
jo
repnz
mov
addb
add
les
orb
sti
add
push
out
pop
lahf
movsb
push
dec
inc
cmpsl
mov
test
cmp
notl
sbb
and
or
fiadds
add
lahf
shlb
inc
lret
bound
lahf
push
jb
andb
inc
out
decl
xlat
or
adc
mov
movsb
cmp
adcb
mov
inc
nop
cmpb
aad
dec
stos
pop
cmp
mov
mov
xchg
rcr
pop
sbb
fwait
clc
sbb
cwtl
fcompl
mov
daa
leave
les
je
pop
lret
jbe
fimull
icebp
and
or
sbb
sbb
mov
sub
jle
xchg
add
pop
ds
push
jp
jp
sbb
mov
xchg
sub
mov
or
iret
shlb
jp
add
jg
pop
daa
or
add
push
jb
sbb
iret
aad
jbe
add
lcall
mov
mov
cld
sarl
lock
sub
or
imul
jp
subb
pop
loop
inc
mov
push
and
jno
mov
mov
mov
into
xor
mov
add
push
adc
cmpb
jge
bound
cwtl
jns
push
mov
addr16
jg
js
mov
aaa
stos
mov
out
pop
packuswb
lods
fistps
in
xor
xchg
pusha
repnz
lret
imul
lea
mov
mov
fdivrs
insl
outsb
and
sbb
push
fisubs
stos
dec
or
mov
push
inc
addl
insl
sahf
mov
idivl
lds
mov
std
mov
popa
lods
or
adc
mov
and
popf
sbb
fildll
shrl
sbb
jp
cmp
aad
lahf
cmp
pushf
loope
fsubs
sub
movsl
call
cmp
fwait
or
jp
mov
ret
jmp
xor
xlat
ja
fcomps
cmpsl
or
dec
jecxz
out
xor
lahf
add
push
inc
and
aaa
mov
lds
jle
sbb
or
loopne
dec
jmp
scas
xchg
lret
test
mov
mov
out
cmpsl
scas
mov
add
push
push
lcall
inc
push
jle
sbb
das
data16
mov
in
pop
das
and
push
add
rorb
loope
jbe
ret
pop
adc
test
push
out
pop
mull
cmp
lcall
mov
call
loope
pop
rcll
jns
xchg
mov
loop
imul
test
andb
sbbb
shrl
int
xchg
xlat
mov
jecxz
hlt
divb
in
icebp
and
mov
addb
pop
mov
add
mov
sbb
cmpsl
lea
sbbl
loopne
nop
dec
mov
in
pushf
push
lret
push
sbb
enter
sbb
mov
daa
flds
adc
lods
and
lcall
pop
mov
divl
outsl
filds
mov
inc
out
addr16
xchg
mov
jle
jecxz
sahf
adc
lcall
cltd
inc
sbb
stos
or
bound
leave
faddl
or
fildl
orb
insl
push
les
andb
pop
mov
add
fistpll
clc
adc
push
xchg
mov
pop
das
cmc
out
sbb
shll
cmpb
aam
push
or
cmp
out
movsl
or
loopne
hlt
push
jg
dec
add
stc
aas
pop
pop
scas
cmp
or
jle
jp
test
scas
or
push
scas
sbb
es
mov
dec
adc
sbb
mov
ret
lea
cmc
outsl
test
cltd
pop
and
xor
je
das
mov
or
and
hlt
push
or
mov
push
cld
lea
add
or
jnp
pop
pop
lds
pop
decb
movsb
pop
jle
xchg
and
sub
mov
jnp
mov
mov
inc
fwait
negl
std
pop
mov
jp
popf
or
jb
ja
xchg
pop
imul
push
das
mov
cmp
pop
and
xchg
loope
or
and
std
inc
adc
xchg
add
das
cmp
xchg
mov
cmc
lahf
fwait
imull
fldenv
ret
xchg
repnz
cmp
sbb
push
dec
add
stos
jle
les
add
shlb
aad
pop
inc
inc
repz
mov
dec
or
mov
add
and
xchg
stos
pop
aaa
xchg
jne
lahf
shll
loope
mov
shrl
js
jbe
push
ja
stos
mov
push
mov
das
ja
inc
cmc
iret
sub
push
test
imul
jle
xorl
mov
adc
pop
push
xor
js
testl
aas
xchg
lea
gs
lods
push
jecxz
mov
pop
add
cmp
mov
test
cmp
adc
jp
fs
pop
pop
mov
roll
out
enter
adc
sti
inc
or
push
jle
imul
sub
jge
cwtl
mov
rcrl
rorb
rcl
dec
mov
stos
adc
loop
dec
inc
out
inc
loope
xor
imul
xor
push
jecxz
or
inc
inc
mov
scas
and
sti
pop
xchg
notl
test
rorb
scas
les
or
daa
push
clc
inc
mov
ss
xchg
jmp
dec
test
sbb
jle
flds
fsubp
dec
dec
xchg
xchg
lahf
push
xchg
and
mov
pop
sbb
inc
jle
cmp
xor
inc
je
fsts
cli
lahf
int
cmp
arpl
push
in
daa
out
push
mov
lahf
xchg
mov
mov
cwtl
outsl
and
lods
pop
jnp
xor
push
cmpl
ja
movsl
adc
add
mov
push
or
fistps
cld
jl
lds
mov
push
nop
data16
aas
xor
rolb
dec
cmp
daa
xchg
pop
push
lods
imul
sbb
popa
push
les
push
adc
pop
lret
adc
outsl
nop
jb
sahf
sub
mov
push
push
stos
pushf
pop
jp
rcrl
repnz
inc
jg
and
pop
and
lods
dec
inc
push
pop
xlat
insl
icebp
jecxz
sti
mov
push
mov
dec
lahf
fbstp
cmpsl
adc
jmp
nop
test
dec
pop
lcall
mov
sub
xor
test
sub
inc
out
testl
adc
mov
mov
xlat
cmc
rolb
fs
fiadds
dec
sahf
push
fs
inc
std
dec
dec
mov
push
jp
mov
mov
cld
and
pushf
inc
icebp
jnp
mov
xor
bound
add
xchg
jae
roll
clc
repz
insb
push
adcl
lea
cmpsl
imul
pop
imul
andb
cltd
mov
sub
inc
cwtl
popa
gs
lea
popa
dec
shll
fcomps
inc
sub
popa
bound
aas
insl
sbb
fs
jmp
jecxz
dec
nop
fs
cmpsl
sub
jo
andl
pop
pop
addb
xchg
out
mov
xor
ficompl
fwait
aad
cmpsl
mov
fbld
sbb
sbb
add
cld
ja
push
arpl
aam
enter
enter
loope
ret
sbb
subb
mov
imul
jmp
cwtl
or
adc
pop
jp
add
and
pop
pop
mov
xchg
sbb
or
ljmp
popa
hlt
mov
xchg
dec
add
out
sahf
aam
mov
addb
mov
fmuls
cmp
or
jb
fsincos
addl
and
push
mov
push
xchg
pop
xlat
inc
hlt
nop
pop
mov
js
xchg
add
iret
inc
or
or
movsb
cmp
out
xchg
mov
push
sahf
das
pop
push
faddl
sub
jge
mov
arpl
mov
pop
roll
repz
pop
inc
int3
inc
push
and
push
sbb
sbbb
mov
mov
ret
push
je
add
sahf
or
test
addl
push
or
cmpsl
lods
jl
ds
sti
mov
aas
inc
xchg
aaa
js
adc
rorl
jmp
push
adc
idiv
add
fpatan
or
add
popf
jle
mov
nop
mov
lds
mov
xor
addr16
inc
add
mov
faddl
lahf
into
inc
and
inc
inc
adc
adc
fnstsw
or
dec
mov
jb
xchg
inc
pop
or
push
and
aas
sbb
into
mov
pop
movsl
jno
decl
rcl
shll
dec
pop
outsl
sub
test
loope
mov
mov
out
sbb
cwtl
subb
and
out
popa
addb
inc
aas
fiaddl
xchg
sbb
xor
mov
inc
hlt
adc
insl
jecxz
bound
mov
loope
and
xchg
xor
ja
or
xchg
push
fadds
jp
daa
insl
mov
movsl
sbb
fstl
test
push
popf
lea
push
imul
xchg
xchg
test
lea
leave
xchg
xchg
std
popf
ja
daa
lret
fisubrl
pop
je
adc
aaa
les
andl
repnz
inc
inc
pop
xchg
pusha
xchg
enter
pop
dec
pop
push
daa
pop
popf
bound
lcall
sbb
fimull
adc
pop
iret
frstor
arpl
imul
stos
scas
mov
pop
fs
sub
sub
ret
xchg
arpl
xor
push
scas
xchg
xor
fs
ja
mov
sbb
inc
sub
loop
call
dec
dec
arpl
dec
push
mov
notl
cmp
push
mov
mov
fbld
mov
pop
mov
popl
les
sub
insb
mov
frstor
mov
sub
cmp
mov
lods
ds
or
testb
shll
je
push
popf
ja
leave
loope
inc
dec
cmc
xchg
jg
stos
xlat
pusha
movsb
mov
add
sbb
xchg
inc
ljmp
push
inc
js
inc
daa
mov
push
cltd
pop
divl
ret
stos
sbb
les
lcall
in
mov
and
mov
dec
ret
popa
flds
call
stc
jb
les
dec
stc
dec
mov
push
cltd
test
cli
ficoml
jg
clc
mov
push
cmc
out
stos
dec
sub
and
jae
mov
pop
stos
ljmp
jne
cwtl
xchg
mov
and
stc
repnz
sbb
sbb
mov
xor
sub
xor
cmp
add
loop
aas
ds
repz
or
push
push
push
cli
shll
add
repnz
cmp
imul
sbb
mov
ds
sbb
xchg
sbb
mov
pop
xchg
mov
scas
dec
lock
cmpsl
and
fbld
outsl
inc
add
call
or
roll
sub
sbb
jo
clc
inc
je
mov
dec
js
sub
adc
ds
adc
ds
ffreep
cmp
inc
push
mov
jp
xor
push
push
mov
xchg
jns
lcall
mov
sbb
mov
jge
aad
sub
push
mov
dec
fwait
pop
jp
ja
mov
sahf
mov
xchg
jecxz
stos
xchg
notl
inc
dec
sbbb
jg
ja
outsl
xlat
std
inc
pop
inc
popf
mov
cmp
insl
test
pop
add
xor
dec
pop
addl
adc
fidivl
and
mov
push
jae
lahf
and
cld
xchg
xlat
pusha
hlt
jo
out
in
pop
jle
mov
mov
dec
sbb
pop
lcall
sbb
pop
lock
sbb
daa
ljmp
mov
push
sar
iret
cmpb
jmp
push
cmp
rolb
push
inc
cmp
adcl
push
popf
sbb
inc
pop
rcrl
and
mov
pop
fcmovnb
adc
push
sti
hlt
out
fistps
pop
dec
inc
pop
ljmp
add
mov
repz
mov
cmp
push
mov
ja
sub
repz
add
mov
nop
popa
cmp
fwait
xchg
js
xchg
xchg
in
adc
push
xchg
bound
cmc
dec
cmpsb
ret
nop
arpl
addr16
mov
pop
add
jns
addl
in
scas
aaa
pop
roll
ja
mov
pop
fistps
cli
and
inc
jp
mov
lock
add
xchg
fistl
aam
pusha
xchg
sbb
xchg
pop
or
mov
adc
mov
sub
push
mov
xor
repnz
or
ds
xchg
testl
jb
daa
aaa
mov
fwait
or
int3
lahf
cmp
and
or
inc
popf
aaa
int
xchg
xchg
or
xchg
jno
xchg
and
ljmp
mov
fists
or
add
arpl
gs
mov
arpl
xchg
addr16
cld
sbbb
jbe
adc
sbb
fdivs
adc
mov
sbbl
mov
addb
aam
inc
loop
pushf
sub
sbb
sub
add
mov
push
cmp
sbb
jmp
mov
imul
inc
or
bound
sub
stc
sbb
adc
adcl
xorl
gs
cmpsl
xchg
lock
and
lcall
jns
sti
test
xor
fiaddl
cmpsb
xchg
adc
clc
lock
push
push
mov
ss
sbb
addb
mov
jmp
pop
outsb
scas
cmp
push
addr16
add
std
test
adc
test
pop
adc
cld
cmpsl
jb
shl
in
mov
aas
xchg
gs
mov
mov
dec
dec
fildl
rcrl
pop
aas
loopne
jae
xchg
pop
pop
enter
add
out
je
inc
inc
sbb
pop
xor
dec
or
outsb
outsb
sub
out
add
mov
test
or
and
adcb
pop
testl
imul
mov
pop
push
cmp
add
adc
mov
pushf
pop
adc
adc
mov
hlt
and
sbb
push
sbb
test
fmull
add
push
dec
push
mov
popa
aaa
xor
and
fists
out
pop
add
loopne
xor
lcall
add
and
out
faddl
xchg
cmp
add
push
pop
add
xorb
imul
xchg
jae
dec
js
nop
cmc
inc
cmp
push
jb
adcb
daa
inc
mov
push
cltd
or
test
jle
push
dec
movsb
fistl
ja
inc
and
jb
mov
jp
mov
scas
arpl
sub
cld
fyl2x
mov
dec
cmp
orb
jns
jb
add
popf
mov
cmp
xor
or
push
fstpl
fisubl
push
arpl
mov
mov
and
sbbl
sbb
push
lock
sbb
sbb
ds
push
inc
and
add
leave
ja
divb
adc
mov
mov
rclb
lock
pop
or
sti
mov
aas
test
rcll
orb
scas
inc
sahf
cmp
aas
jo
push
in
je
sbb
lcall
mov
pop
mov
push
arpl
mov
fisubrl
scas
xor
mov
bound
dec
xchg
test
pop
js
pop
data16
popa
push
lcall
push
insb
or
pop
jecxz
fldcw
jo
inc
addr16
dec
jno
pop
scas
nop
popf
fs
push
or
fwait
or
jno
inc
roll
sub
test
fadds
aaa
rcr
add
outsb
jge
loope
mov
subb
inc
add
xor
aas
jecxz
ja
xchg
ja
inc
fcomps
pop
lcall
jno
sbb
sbb
movsb
mov
mov
adc
add
jecxz
das
ret
add
mov
mov
mov
mov
sub
out
scas
fldcw
scas
or
push
xchg
cmp
push
out
fs
insb
addb
loopne
out
inc
pop
and
or
call
aas
outsl
mov
adc
add
fs
adc
and
test
pop
je
popf
rcr
mov
adc
sti
in
imul
sbb
divl
popa
pushf
mov
sbb
mov
add
jbe
ljmp
scas
sub
or
push
scas
push
inc
mov
mov
dec
inc
mov
sbb
jns
enter
dec
xchg
or
xor
cli
fbstp
push
adc
bound
or
bound
outsl
or
jmp
inc
arpl
push
daa
xchg
sahf
aad
popf
stos
lahf
cmp
and
aad
inc
mov
xchg
outsl
loope
daa
rcrb
dec
adc
xlat
in
out
jb
jl
sbb
mov
andb
xchg
lahf
jle
jae
sbb
xchg
xchg
jno
jne
fldenv
rorb
ret
add
adc
ljmp
xchg
jb
sbb
hlt
mov
fs
push
test
and
or
scas
bound
fistps
pop
repz
cld
push
loope
jp
fwait
lock
mov
inc
sbbb
mov
add
sbb
pop
in
or
pop
call
shl
inc
jmp
mov
mov
pop
cmpl
fiadds
push
jle
fbld
push
adc
pop
xchg
or
adc
add
pop
push
inc
push
sbb
xor
or
movsl
xchg
das
cmp
pop
push
nop
inc
and
cmp
adc
in
dec
fs
or
cwtl
call
shl
leave
outsb
mov
or
stos
jb
cld
addr16
mov
xorl
lcall
inc
into
clc
popa
xor
jl
pop
ja
and
inc
jns
pop
xchg
fists
inc
sub
push
jo
push
jg
add
dec
mov
sahf
lcall
dec
push
sbb
xlat
xor
fisubs
lahf
je
rclb
aaa
xor
sbb
xor
mov
loope
jo
pop
ljmp
decl
and
push
mov
mov
rcrb
bound
mov
fldl
adc
adc
jns
pop
mov
lret
mov
adcb
in
lret
push
aad
movsb
fbld
and
xchg
sbb
adc
cmp
pop
gs
cmpsl
pop
ja
jmp
movl
adc
xorl
cld
mov
loope
adc
scas
in
jmp
inc
in
mov
xlat
push
insb
dec
lahf
cwtl
in
xchg
dec
inc
mov
dec
mov
dec
jbe
add
and
push
in
clc
sbb
xor
push
repz
xchg
xor
sub
xchg
pusha
xchg
popa
push
dec
fists
adc
add
pushf
add
mov
xchg
jg
test
xor
adc
mov
dec
add
sbb
insb
jns
sbb
insl
out
dec
pop
nop
mov
adc
dec
insl
xchg
xchg
xchg
sbb
or
or
aas
arpl
mov
repnz
ret
push
lret
add
loop
xchg
mov
xchg
mov
stos
fisubrl
mov
xor
jg
and
inc
leave
inc
addr16
divb
inc
mov
push
xchg
daa
xchg
bound
mov
ja
inc
lret
and
push
xchg
rep
xchg
scas
inc
shrb
xor
clc
or
mov
call
adc
insl
add
and
lcall
bound
lcall
inc
inc
inc
ds
repnz
xor
adc
shll
popf
in
pusha
or
lcall
adc
sbb
inc
sbb
inc
jmp
mov
pop
stc
outsl
cwtl
push
fs
mov
push
add
mov
xchg
add
adc
mulb
popa
test
outsb
pop
jb
inc
inc
and
stc
ja
inc
mov
xor
loop
inc
fs
jg
cld
inc
jbe
negl
jo
lcall
repnz
addr16
lret
es
pop
sub
mov
and
cmp
je
orb
lahf
mov
mov
aam
cmp
out
fs
rcll
cmc
xchg
sub
add
mov
xchg
pop
or
rcll
dec
inc
sbb
adc
imul
sub
dec
cwtl
adc
and
mov
arpl
mov
and
mov
sti
xchg
lahf
insb
dec
ja
jp
and
shl
ljmp
mov
pop
cmp
jp
loope
and
pop
jb
cmp
nop
leave
sub
inc
xchg
in
loop
sbb
pop
cmp
rcr
test
lcallw
bound
add
xlat
pop
orb
jae
dec
adc
ret
lods
cli
arpl
xchg
jge
mov
aam
adc
xchg
xchg
xchg
shrl
inc
mov
shlb
adc
outsl
xor
stc
cltd
sub
cmpsl
xchg
mov
popf
and
mov
insb
xlat
or
int
pop
xlat
fsubrs
cmc
xchg
mov
daa
sub
sbbb
sub
pop
lock
dec
mov
jne
push
in
mov
sbb
jne
div
mov
dec
dec
inc
sbb
push
mov
enter
out
sti
loope
rorb
rorb
xchg
shll
add
cmp
sub
jp
add
inc
sbb
sahf
loopne
push
test
dec
sbb
push
push
popa
lea
jbe
mov
add
push
pop
jle
pop
and
pop
push
out
in
mov
ja
add
mov
lods
inc
imul
adc
push
js
jmp
push
pop
and
outsb
leave
push
pushf
add
rorb
inc
xlat
adc
popa
add
gs
or
cmp
daa
dec
mov
rolb
imul
or
jb
xor
int3
inc
rorl
sub
mov
adc
cmpsb
push
aam
cmp
mov
xlat
and
mov
xorb
dec
aaa
fdivl
faddl
cmp
add
shll
add
pusha
xchg
je
push
sbbl
pop
into
push
mov
push
stos
popf
mov
lcall
mov
cmp
stos
pop
sbb
rorl
fwait
dec
push
cmp
and
pop
inc
mov
or
pop
popf
mov
cli
in
pusha
mov
fnstenv
xchg
pushf
pop
inc
cmp
mov
mov
ret
and
cld
aaa
cmpl
xchg
fs
mov
sbb
notl
imul
fsubl
xchg
insb
xchg
push
addr16
and
and
loopne
dec
fnstsw
cmp
xchg
cmp
jo
test
ja
sahf
lea
mov
xchg
fdivr
sub
mov
loop
in
ds
add
mov
jb
mov
sub
imul
inc
clc
and
loop
xchg
fldt
enter
adc
push
repnz
pop
xchg
adc
lcall
inc
fisubs
sbb
scas
decl
xor
out
sbb
sub
clc
ret
xchg
pop
push
in
mov
adc
add
inc
pop
in
pop
sarl
out
inc
aad
or
hlt
lahf
mov
sub
lods
sub
cmp
pop
mov
test
add
mov
pop
sbb
push
stos
fwait
iret
push
jae
outsb
ret
in
mov
or
pop
xor
lods
daa
mov
outsb
pop
xorl
push
cmp
mov
popf
push
sub
loope
or
std
or
call
mov
sub
pop
jne
and
push
fnstcw
test
inc
in
fcmove
lods
popa
jecxz
and
add
and
inc
or
jb
jnp
mov
push
mov
in
shr
mov
cmpsl
arpl
pop
pop
mov
mov
xorl
or
push
mov
push
cmp
lahf
push
arpl
inc
dec
inc
sub
sbb
sbb
movl
xorb
cmc
cmc
mov
xchg
rcrb
sbb
js
add
jae
dec
pushf
mov
xor
out
xchg
decl
adc
daa
add
neg
sbb
clc
out
and
addb
js
pop
dec
movsb
lahf
sub
jecxz
cmpb
jne
jecxz
jmp
add
or
std
and
addr16
add
mov
pop
sbb
test
popa
or
inc
sbb
popa
jae
repnz
sub
mov
dec
mov
jmp
lock
sbb
mov
adc
out
dec
push
adc
xorl
repnz
lods
pushf
jno
imul
mov
fwait
cltd
push
sub
loope
push
ja
adc
test
mov
test
add
add
lahf
repnz
add
pop
mov
popa
sbb
dec
sbb
movb
and
rcr
lahf
mov
lds
pop
ss
cmp
pop
dec
test
cmp
into
jb
cmc
add
jne,pn
repnz
out
mov
xchg
xchg
sbb
xlat
jecxz
inc
inc
cmp
adc
mov
jb
dec
pop
aaa
rorl
lret
sub
add
out
pop
adc
subl
sbb
ficoms
or
divb
push
xchg
xchg
mov
outsb
xchg
lahf
mov
into
mov
ret
sbb
fcoml
sub
mov
xchg
int
outsb
js
test
out
sbb
add
and
icebp
sub
mov
cmpsb
mov
mov
and
jae
sbb
cmp
add
jp
push
jb
and
shr
sbbb
cmp
push
mov
push
aaa
imul
lret
pop
pop
cmpsl
jo
arpl
mov
mov
cmc
inc
jbe
mov
mov
out
arpl
add
xchg
dec
sbb
add
sbb
jp
sbbb
sbb
neg
jbe
and
jg
jmp
movsl
sbb
outsl
jae
push
ds
push
mov
mov
xlat
xchg
popf
mov
push
add
mov
scas
pop
loope
or
test
gs
aaa
ror
cli
push
loopne
incl
sub
fcoml
add
loop
addl
mov
inc
test
pop
into
dec
fwait
inc
fbld
sbb
sbb
shll
and
add
mov
sbb
in
jge
test
fwait
cmp
loope
push
imul
aas
repz
sahf
jb
icebp
iret
scas
mov
negb
lcall
adcb
sub
mov
sub
push
pop
cli
and
mov
aaa
or
inc
imul
inc
ficoms
ja
add
pop
and
jnp
ffree
in
push
nop
mov
add
xchg
pop
cmpsb
sbb
cltd
push
mov
add
ss
daa
pop
cmpsl
mov
aam
pusha
mov
arpl
in
fldcw
and
fwait
pushf
inc
jecxz
addr16
bound
addr16
xchg
mov
mov
mov
xchg
mov
cs
push
adc
loopne
scas
xchg
fsubrs
mov
adcl
fdivs
es
aaa
test
dec
repz
pop
mov
div
dec
inc
dec
das
sbb
sub
inc
mov
clc
inc
mov
inc
add
cwtl
mov
adc
inc
addb
cs
or
adc
test
push
xchg
adc
mov
out
push
mov
fs
gs
cltd
jns
sahf
add
mov
mov
fbld
aaa
pushf
out
push
aad
push
mov
and
mov
pop
outsb
das
loop
enter
repnz
rcrl
fst
jae
add
add
or
hlt
or
mov
repnz
dec
pop
lock
ja
int3
sahf
cmp
dec
rolb
ret
loopne
and
mov
sbb
movl
lahf
andl
jle
inc
push
jno
scas
andb
pop
push
mov
sub
inc
sub
cmp
mov
sbb
inc
and
outsl
push
lds
xor
test
data16
fs
pop
sub
add
mov
adc
push
sahf
mov
cmp
sub
xchg
test
pop
and
adc
jp
daa
cli
and
mov
fs
out
nop
ljmp
popa
sub
or
ret
mov
das
aad
xor
test
addr16
cmp
pushf
lahf
pop
int
pop
jb
and
aaa
inc
aas
pop
out
cmpsl
shl
pop
inc
sub
insl
movw
adc
push
popa
pusha
dec
mov
mov
data16
lahf
cmc
pop
inc
mov
sub
cltd
pop
lahf
inc
repnz
bound
std
mov
xchg
mov
aas
dec
mov
sub
lahf
pop
test
ret
sbb
lock
gs
and
jp
xor
jns
scas
and
mov
lret
sub
cmp
andl
mov
sti
test
iret
sub
inc
idivb
shll
cmp
or
inc
cmpsl
cmc
in
test
pop
add
xchg
jnp
mov
cmp
push
cmp
cmp
je
jns
test
jns
sub
pop
cmp
call
and
add
fwait
add
pop
xor
lahf
xchg
test
mov
outsb
enter
call
mov
push
cmp
iret
and
dec
lds
mov
dec
lods
nop
inc
scas
and
inc
add
fidivrs
lahf
std
aas
dec
jnp
pop
cmp
popf
push
jle
xor
mov
sbb
enter
push
dec
jbe
aas
idivb
push
adc
jg
add
fnstcw
adc
mov
fdiv
or
popf
in
jnp
ljmp
sub
rcrb
lahf
and
cltd
mov
stc
and
or
repz
and
mov
pop
and
in
or
add
pop
jp
jmp
mov
xchg
mov
mov
push
aaa
push
out
mov
dec
movsl
cmpsb
aad
fcomps
jg
add
aam
out
pusha
mov
cmp
and
in
in
xor
fwait
mov
and
adcl
sub
xor
jmp
lahf
push
pushf
jg
or
lcall
test
stc
dec
dec
cmp
jecxz
xor
mov
mov
inc
in
sarb
pmaxsw
mov
out
mov
fwait
addr16
mov
mov
mov
loope
cmpsl
mov
mov
xchg
add
fcmovnbe
xchg
nop
mov
or
je
shlb
push
lds
nop
push
sbb
cltd
cld
adc
out
xchg
xchg
and
into
ja
xchg
movl
push
xchg
ja
fadds
pop
int3
jbe
mov
faddl
sub
push
mov
in
imull
insb
movsl
cmp
add
incl
mov
cmc
sbb
orb
push
adc
cmp
ds
pop
xor
outsb
mov
pop
ja
andl
add
xor
shll
mov
jle
jb
jne
or
dec
cli
xchg
or
jg
enter
scas
xchg
mov
pop
in
shl
repnz
dec
popa
fstps
mulb
push
fstp
xchg
sub
lcall
stos
push
jae
out
xor
inc
hlt
cmpsl
lea
pop
mov
sbb
call
add
bound
adc
sbb
cmpsb
out
or
xchg
mov
roll
ds
sbb
loopne
rcll
adc
pop
push
fmull
cmc
mov
push
add
outsl
in
cld
mov
mov
push
mov
push
fadd
mov
mov
sbb
xor
add
xchg
mov
lahf
push
cli
stos
inc
xor
or
and
jp
pusha
movl
dec
add
adc
and
pop
cmpsl
hlt
push
cmc
stos
dec
orb
pop
mov
jg
mov
cmp
lds
imul
push
push
pop
mov
xchg
add
mov
fcompl
adc
sub
addr16
dec
jae
dec
xor
jl
addr16
test
push
aad
fxch
outsl
mov
faddl
mov
insl
jg
rcll
jge
inc
xchg
jae
fildl
pop
aas
ja
loope
xchg
insb
nop
cld
daa
ja
in
movsb
xchg
pop
xchg
cwtl
bound
xchg
lods
sbb
in
out
call
mov
pop
out
popf
adc
lret
adc
xchg
jge
xor
popf
pop
imul
inc
aaa
dec
popf
sbbl
icebp
inc
lods
xchg
inc
sub
jae
adc
mov
inc
push
out
push
stc
fnsave
add
xchg
mov
mov
fiaddl
xor
sahf
stc
lods
pop
push
test
lcallw
xchg
out
test
inc
xchg
add
test
sbb
cs
sbb
std
lock
fistps
jns
scas
xchg
add
arpl
xor
pop
dec
stos
in
loopne
inc
fdivrs
or
cmp
out
cmp
inc
ja
popf
sti
adc
xchg
push
in
push
inc
xor
add
fisttps
push
fldenv
push
cld
incl
xor
jp
pop
mov
gs
shll
test
mov
clc
pop
adc
push
popa
mov
push
scas
ret
inc
and
out
dec
cmc
sub
xchg
imul
mov
xchg
aas
inc
xchg
in
jl
loope
lds
pop
inc
add
sbb
inc
jge
jno
addl
mov
das
in
incl
mov
ffreep
test
sbb
loopne
cmp
je
movsl
pop
sbb
xor
mov
jne
mov
mov
sbb
outsl
mov
das
mov
sarl
add
xchg
sbb
outsb
les
in
push
orb
loop
fiaddl
mov
mov
rcll
mov
cld
je
add
daa
bound
jnp
adc
push
cmp
cmpsb
pop
shl
mov
addl
mov
scas
scas
pop
ficoml
mov
xchg
ljmp
stos
subl
add
inc
dec
and
pushf
orb
pop
bound
sbb
cwtl
mov
bound
mov
js
aam
mov
int
add
shll
loopne
sbb
xor
lret
mov
sarl
xchg
rcll
adc
sub
test
jge
das
add
mov
pop
lods
add
in
cmp
js
pop
xor
push
push
pusha
push
pop
jo
pop
push
addl
pusha
sub
cmp
pop
or
aas
mov
pop
enter
stc
jp
add
push
loop
inc
shrl
xchg
icebp
test
jns
pop
pop
jl
ror
fstps
lods
push
test
lods
mov
push
lds
mov
icebp
pop
in
adcb
movsl
cmp
hlt
add
arpl
ss
fistpl
mov
stc
lcall
cmp
xchg
fstpl
mov
aaa
push
es
add
cltd
pop
jecxz
lret
loop
xchg
in
outsb
rcr
enter
xchg
dec
sub
cmp
add
cmp
lods
pop
pop
add
fidivl
and
jp
push
cwtl
mov
fdivrp
dec
inc
nop
pushf
cwtl
outsb
inc
mov
dec
rcr
lahf
nop
mov
push
mov
mov
xor
cmp
add
sbb
in
mov
ds
sbbl
dec
mov
xchg
mov
mov
in
popa
inc
cmp
loop
xchg
frndint
test
push
or
jp
sub
add
fs
mov
adc
enter
daa
in
ret
lock
sub
add
and
nop
outsl
out
adc
xchg
xchg
jg
xchg
iret
hlt
mov
lcall
lods
fsts
das
or
push
and
jae
push
icebp
addr16
pop
shll
popf
cmp
xchg
test
test
hlt
les
or
cwtl
mov
inc
mov
and
lcall
mov
orl
je
inc
jge
cltd
ja
mov
ja
inc
inc
pop
and
aam
mov
and
add
push
inc
push
sbb
jo
imul
and
push
cmp
outsb
mov
inc
mov
lret
adcl
in
dec
sahf
outsl
xor
mov
out
out
clc
addr16
test
lods
test
sub
mov
outsb
mov
xchg
or
in
loop
addr16
push
cli
and
xor
test
nop
daa
out
xchg
lcall
xor
jno
fistps
adc
je
gs
lds
jb
aad
pop
jae
adc
xchg
xlat
inc
adc
xchg
fisttpl
test
test
hlt
cmpsb
nop
fwait
jp
sbb
cmp
cmp
push
js
cmpsl
dec
dec
lods
jns
and
or
xor
mov
loopne
adc
add
dec
pop
and
addr16
lods
pusha
addl
dec
ja
incl
pop
loopne
xchg
and
inc
movsb
inc
pop
hlt
scas
out
xchg
fcmovnb
mov
mov
or
xorb
mov
push
hlt
imul
stos
out
ficoml
movsb
jae
ljmp
xchg
dec
xchg
or
push
jge
and
addl
mov
xor
and
lcall
jo
or
popf
mov
dec
and
sbb
mov
mov
add
into
inc
sbb
stos
push
cmpl
sahf
test
hlt
jecxz
or
lea
xchg
in
mov
pop
subl
lahf
xchg
ret
addr16
sbb
jge
aaa
int3
outsl
or
mov
cmp
jno
fadds
xchg
mov
dec
ja,pn
mov
or
movsl
mov
lcall
jne
pop
xchg
add
mov
push
sahf
adc
repnz
jb
inc
shll
je
ja
add
lds
test
inc
jbe
fcomps
insb
and
mov
cmp
in
push
mov
fldl
stos
lahf
or
inc
data16
push
mov
xchg
sbb
movsl
daa
test
xor
subl
push
xchg
fwait
lock
sbb
mov
test
aam
or
sub
adc
and
jl
mov
orl
mov
and
xchg
dec
sbb
lcall
jne
frstor
mov
jp
fidivs
xor
sub
mov
xchg
scas
adc
xchg
cwtl
notl
xchg
fs
lods
sbb
add
cmp
mov
sbb
push
jl
jnp
jo
sbb
jmp
inc
fimull
cmp
rclb
mov
push
sub
addb
push
inc
bound
lahf
jnp
xchg
lds
sbb
mov
jae
push
adc
mov
aaa
lds
or
dec
mov
jno
cmp
ret
sbb
mov
insb
sub
jb
dec
daa
stos
scas
cmpsl
jns
loop
lods
orb
push
sbb
sahf
imul
xor
mov
add
test
out
out
pop
cmp
je
dec
loope
jo
cmc
pop
pop
push
test
mov
jae
pop
xchg
int
icebp
push
and
and
addr16
sbbl
adc
dec
ljmp
jno
daa
mov
mov
push
jg
hlt
ja
pop
mov
jg
in
mov
hlt
repz
cmp
negl
stc
orb
pop
cmpsl
jecxz
nop
fcoms
hlt
jge
push
cmp
bound
lea
leave
pop
xchg
inc
mov
cld
jmp
jg
mov
sub
mov
cwtl
push
jo
fldl
push
lds
and
mov
mull
addr16
loopne
inc
add
daa
cmc
stc
add
mov
mov
mov
js
out
fsubl
mov
addr16
flds
adc
lahf
sbb
add
test
adc
push
mov
ret
xor
cmpsb
ficomps
push
push
sub
daa
pushf
dec
add
mov
dec
movsb
pushf
jns
mov
in
fwait
inc
sbb
or
push
cwtl
pop
xor
fwait
xchg
push
je
mov
outsl
jnp
add
push
jb
mov
pop
insl
fwait
jnp
cli
in
fistl
std
xor
sbbb
or
push
ret
mov
lods
add
or
jp
ret
sbb
jp
movsb
jp
fistpll
xchg
incb
pop
cmc
mov
mov
dec
aaa
pop
imul
mov
aas
adc
mov
sub
and
inc
pop
lcall
fwait
xlat
lods
xchg
gs
adc
xchg
adc
mov
out
rcll
add
ficompl
out
adc
ret
xor
sub
cmp
jbe
cmpsb
in
aas
push
xchg
jne
push
and
lcall
outsl
inc
fiadds
out
aaa
push
ljmp
out
add
ss
push
jns
xchg
push
sub
aaa
push
push
xchg
jecxz
popf
add
sub
xchg
faddl
jp
arpl
cmp
fnstcw
aas
gs
and
xchg
hlt
fadd
xchg
jb
sub
push
pop
lcall
rcrb
jmp
outsb
jecxz
je
dec
lock
ljmp
sbb
clc
sbb
imul
xor
add
mov
orl
ljmp
or
sbb
mov
icebp
add
std
cmpsb
and
push
pop
xchg
lcall
mov
sub
addr16
arpl
inc
orb
stos
sub
outsb
pop
test
addr16
push
jge
lret
shlb
cmc
scas
xchg
ret
fisubrl
stc
mov
shrb
and
jae
out
mov
pop
imul
es
sbb
xchg
test
fcomps
and
out
cmovs
repz
pop
fwait
sbbb
fistl
int3
xchg
cli
enter
fisttpll
out
fidivrl
inc
fldcw
pop
cli
push
stos
sahf
mov
jle
divl
pop
inc
sbb
sub
xchg
jno
dec
xchg
test
pushf
sbb
es
pop
mov
sub
lcall
mov
cmovb
cmc
mov
xchg
stc
js
push
cld
insb
xchg
xchg
xor
fprem1
leave
xor
sub
cld
outsb
mov
fisttps
inc
subl
jmp
pop
shl
sarl
push
mov
push
or
inc
cmc
addr16
daa
mov
and
xchg
jbe
jnp
movsl
leave
les
sub
test
fsubr
sbb
add
mov
pusha
lcall
sarb
or
lcall
jl
movsl
inc
lcall
push
mov
imul
lahf
sbb
sub
add
cmp
adc
push
ret
fcomps
inc
rcll
dec
sbb
jl
mov
xchg
push
cmpb
icebp
mov
sub
push
mov
scas
aas
daa
sahf
scas
pop
fwait
mov
sub
daa
faddl
push
stos
and
sahf
adc
mov
lods
mov
fwait
mov
xor
pop
jno
xchg
jns
jne
jecxz
lods
jecxz
xor
pop
shlb
rcr
mov
gs
addl
sahf
jb
dec
pop
mov
push
mov
add
das
cld
sbb
bound
decb
jecxz
shll
icebp
pop
popf
add
sbb
call
jns
cmp
test
pop
push
fidivrl
xchg
shlb
push
and
insb
pusha
daa
lds
mov
xchg
cmp
add
ret
shrl
cmpsl
xchg
push
mov
push
sbbb
data16
cmc
pop
mov
mov
or
sbb
pop
dec
fisttpll
lock
fs
cltd
out
je
mov
mov
mov
aad
pop
lret
push
and
cmp
fstps
sbb
flds
sarl
pop
aam
call
cmc
iret
into
inc
pop
scas
and
lret
push
or
js
pop
insl
mov
fstps
push
addr16
jecxz
jns
inc
cmc
sbb
sbb
xchg
fstps
mov
stos
sbb
iret
in
xchg
add
jo
stc
mov
and
jle
mov
out
mov
dec
mov
sub
pop
adc
out
inc
mov
mov
dec
popa
jge
arpl
sub
pop
pop
cmc
lahf
and
push
subb
imul
fwait
and
inc
flds
lock
mov
cmp
ret
cmp
mov
and
cmp
test
sub
rorb
orb
xchg
iret
push
cmp
and
inc
fwait
test
adc
xor
add
mov
rorl
sbbl
cmpsl
fwait
and
out
iret
cmp
push
fwait
or
arpl
jmp
xorb
push
or
and
mov
aas
xchg
pop
lret
sbb
repz
cmpsl
mov
and
sti
xchg
lcall
inc
jl
sbb
ds
cmpsb
inc
mov
cltd
xchg
mov
adc
pop
sub
aas
arpl
lcall
decl
call
btc
sbbb
inc
jno
xchg
shlb
addl
ja
cmc
lret
icebp
xlat
push
sbb
xor
daa
mull
inc
sbb
mov
out
imul
gs
test
mov
ja
and
sbb
mov
ljmp
mov
sahf
daa
fiadds
xor
cld
cmp
jae
dec
lret
dec
mov
frstor
mov
repnz
pop
lcall
mov
mov
jno
out
sbb
sbb
lcall
rcrl
test
fwait
sahf
jbe
int3
mov
imul
out
in
lahf
repnz
sbb
or
das
adc
out
imul
and
enter
daa
or
mov
fcompl
add
jmp
inc
sahf
jmp
popf
mov
mov
pop
leave
sti
pop
std
bound
mov
xchg
ret
cmp
jl
scas
popa
pop
or
pop
popf
push
lret
addr16
fcompl
mov
lret
int3
jg
adc
sbbb
xor
pop
sub
or
dec
dec
jp
into
push
jmp
push
and
inc
push
scas
dec
dec
movsl
xchg
scas
orb
aas
mov
pushf
fmuls
aad
cmc
stc
leave
add
and
loopne
data16
xor
push
add
pusha
xor
adc
in
decl
dec
test
push
popf
sarb
mov
mov
mov
aas
lods
mov
js
cmpsb
stc
cwtl
pop
jmp
pusha
push
pop
mov
sbb
test
cmc
add
mov
dec
bound
ret
mov
loope
aaa
ficompl
icebp
aad
cli
fucomip
pop
push
cmc
jmp
ljmp
outsl
and
rorb
xchg
xor
sub
mov
scas
push
mov
fldl
scas
jl
shrb
add
incl
ja
and
test
mov
jne
inc
pop
ret
sub
fiaddl
out
mov
iret
or
cmp
lcall
sub
xor
movb
popf
mov
lock
popa
mov
sahf
xchg
scas
test
push
mov
lret
mov
mov
insl
gs
and
ficomps
ffree
pop
mov
jmp
daa
pop
push
aaa
lock
or
jnp
fmulp
xchg
outsb
sbb
dec
push
subl
jns
push
lea
or
xchg
int
inc
mov
sbb
insb
inc
and
lahf
cmp
adc
pusha
cwtl
repnz
loopne
rol
daa
push
xor
test
sbb
scas
popf
xchg
aaa
jne
dec
mov
sub
insb
mov
pop
add
pop
gs
sbb
into
mov
mov
insl
cld
sbb
xchg
addb
dec
fdivs
add
out
lahf
sahf
inc
jns
movl
and
lcall
in
push
sbb
adc
dec
pushf
mov
mov
lcall
ret
clc
insb
test
shlb
mov
lcall
jnp
add
pusha
scas
xchg
xchg
add
test
shll
fs
adcl
popa
sahf
addr16
arpl
popf
and
push
das
mov
lods
jle
lock
mov
shll
mov
pop
xchg
xlat
pusha
sbb
cltd
xchg
xlat
imull
dec
std
movsl
or
mov
xchg
cld
push
push
add
and
mov
daa
andl
cmpsb
xchg
mov
and
cmpb
fidivrs
out
mov
add
sbb
mov
pusha
and
xchg
pop
lea
fs
cld
data16
fs
std
push
inc
int3
dec
cmp
add
pop
cltd
imul
mov
sub
pop
mov
add
ja
inc
inc
lahf
popaw
imul
pop
adc
mov
sub
adc
sbb
pop
outsl
loop
sbb
add
mov
repz
rolb
pop
mov
xchg
sub
inc
inc
out
mov
add
stos
pop
inc
pop
mov
test
pop
add
out
adc
fdivr
add
mov
je
pusha
insb
loope
int3
lcall
rcrb
push
shll
insb
aaa
add
add
and
inc
mov
pop
lahf
mov
out
mov
push
popa
inc
loope
sub
imul
mov
inc
testl
jb
lds
dec
lods
add
fistps
dec
inc
pop
lods
adc
mov
mov
lcall
sbb
fistps
and
sbb
sbb
add
mov
lds
xchg
jo
addr16
std
jne
inc
and
dec
jno
out
roll
xchg
xchg
cs
adc
add
adc
clc
mov
int
and
jb
jae
jo
imul
mov
bound
jg
mov
and
lods
ja
add
cwtl
adc
dec
mov
subb
mov
insb
pop
add
sbb
fwait
mov
sbb
xchg
and
pop
fs
jp
mov
sub
sbb
fs
gs
pop
sbb
in
add
xchg
cwtl
insb
popa
jb
push
inc
cs
lahf
jmp
test
ja
inc
pop
add
lahf
jb
inc
xchg
and
add
pop
dec
rcrb
sbb
mov
and
ljmp
mov
inc
hlt
xchg
sbb
xchg
xor
push
fs
shrb
inc
out
pop
pop
aaa
push
mov
nop
loope
pop
pop
cmpsb
popf
jno
push
loop
out
jg
xor
sahf
jns
daa
inc
sbb
cmp
out
cltd
inc
sbb
mov
andl
and
xlat
jg
enter
xchg
addl
jb
xchg
add
subb
or
fwait
inc
fwait
repnz
lcall
lcall
sub
sub
add
js
mov
addl
jl
xchg
sbb
loop
sbb
or
ret
mov
int3
pop
mov
out
pushf
insb
cmpsb
adc
push
jmp
xchg
xor
mov
pop
roll
sbb
dec
mov
lcall
jg
je
inc
pop
sahf
mov
lea
mov
pop
addr16
add
push
xchg
and
iret
jo
mov
dec
inc
divl
negl
cmpsl
xchg
cmp
div
jo
ffreep
push
loopne
push
loopne
divl
cld
loop
popf
clc
and
mov
dec
test
jecxz
xchg
sti
mov
arpl
adc
jecxz
xchg
push
adcb
cmp
inc
push
xchg
inc
sub
orb
addl
or
dec
fdivp
mov
outsl
sbbl
call
in
adc
mov
mov
test
cld
pushf
push
daa
aaa
out
and
xchg
dec
jb
fwait
cltd
movsb
xchg
mov
mov
out
js
jno
loopne
fstps
xor
xchg
pop
addl
cmp
addl
mov
out
sub
push
sbbl
push
xchg
push
sub
clc
stos
push
cltd
adc
pop
mov
pop
or
pop
adc
addl
jp
leave
fisubl
pop
adc
out
addr16
mov
fxch
push
lcall
fisubrl
bound
sub
pop
add
mov
inc
and
jno
and
xchg
fwait
sbb
incb
fistl
sbb
jl
adc
icebp
imul
sub
xchg
jns
ljmp
stos
lods
mov
sbb
cltd
sbb
mov
mov
out
fstpl
xchg
shrl
sub
mov
or
negl
std
rorb
mov
lock
mov
mov
dec
xchg
out
push
push
pop
push
xchg
sbbl
test
iret
pop
push
push
dec
hlt
or
lahf
cltd
lock
hlt
cmpsb
ljmp
ljmp
pop
xchg
add
shl
enter
ret
cmp
mov
pop
push
add
and
adc
xchg
mov
jne
inc
adc
faddl
add
out
add
xor
js
xchg
push
cli
cli
xchg
cli
fstpl
stc
push
push
shll
insb
test
and
inc
aaa
mov
fs
lods
loopne
out
sahf
jb
fdivl
jl
sbb
scas
pop
jno
mov
rcrl
imul
mov
push
les
jbe
mov
je
in
mov
or
jp
repnz
fcomps
add
in
pop
fsts
in
xor
push
lods
jp
push
roll
cmp
mov
jle
repz
out
filds
mov
lret
inc
shl
adc
and
aam
jo
adc
add
push
out
fs
popa
orb
scas
xlat
or
ror
xchg
inc
sti
mov
call
fldl
adc
adc
or
lods
pop
add
fimuls
out
add
lods
ja
int
icebp
mov
cmpb
fsubr
mov
dec
mov
fistps
push
xchg
fnstenv
sub
or
out
fsubl
xchg
and
push
fcompl
out
ret
ja
stc
js
pop
lcall
cmp
stc
jmp
mov
loop
jnp
imul
pop
jmp
add
push
pop
pusha
sub
stos
pop
movl
sbb
cmp
or
sbb
pop
sahf
mov
subl
pop
cs
in
mov
mov
jo
test
xchg
sub
lcall
lcall
sbbl
call
dec
subl
in
sahf
add
cmp
mov
fwait
mov
lcall
bound
sbb
mov
sbb
lea
adc
push
pop
jecxz
jbe
jne
sub
lahf
andl
add
jge
roll
and
or
add
mov
xchg
adc
mov
push
and
dec
inc
test
mov
stc
stos
iret
lea
test
into
and
jae
xchg
dec
push
adc
push
dec
sahf
sbb
and
inc
inc
add
mov
sahf
dec
push
mov
notl
inc
les
push
or
popf
jbe
dec
and
inc
dec
sbbl
outsb
jecxz
push
pushl
lcall
jmp
cmp
mov
mov
or
add
pop
sahf
andl
arpl
test
into
cmp
popf
and
out
or
xor
bound
sbb
popf
xchg
mov
icebp
ss
jp
inc
sbb
mov
jne
repz
jecxz
and
adc
out
jge
cltd
les
pop
das
into
fistps
lret
pop
pop
stc
aam
pusha
fwait
push
jle
mov
dec
jge
ss
or
addb
and
dec
xchg
stc
popl
adc
xor
rclb
xlat
mov
clc
xor
jl
push
add
pop
aad
inc
lret
lahf
pop
mov
icebp
ss
into
add
mov
loopne
mov
movl
mov
test
jp
jp
fistps
pop
in
xchg
loop
jnp
sbb
sub
scas
mov
cld
lea
push
bound
lret
fisubl
dec
pop
out
lcall
shl
cwtl
push
and
adc
cld
jno
into
dec
call
dec
std
push
adc
push
lods
ficompl
mov
test
fcoms
pop
subl
push
rorb
inc
sbbl
jo
rcrl
xchg
mov
pop
xchg
in
xchg
jle
and
sbb
pop
xor
sbb
pushf
icebp
in
out
popa
xchg
xchg
pop
or
fcomps
test
pop
sahf
cmp
jg
cmpsl
jge
cmp
jecxz
xor
jns
loope
jl
add
sub
lcall
daa
test
pop
push
out
repz
lcall
push
loope,pn
xchg
int3
rcll
movb
mov
shl
sbb
shl
cmp
orb
adc
imul
mov
in
lret
rcll
push
inc
xchg
fists
dec
daa
mov
call
in
cli
icebp
xor
sub
mov
dec
movsb
test
hlt
icebp
push
pop
cmp
fninit
icebp
xchg
popf
arpl
loop
bound
fisubrl
lret
js
pop
es
inc
addr16
call
ja
bound
ss
adc
inc
mov
mov
jbe
cmp
mov
movsl
and
adc
cmc
jbe
rclb
xor
adcl
inc
cltd
lds
and
sbb
lret
in
jno
pushf
inc
sbb
pusha
fwait
dec
sbb
jb
adc
xor
add
inc
outsl
push
or
setae
iret
pop
xchg
xchg
and
mov
lods
pop
fdivl
xor
push
stos
jmp
inc
mov
xchg
mov
lahf
xor
inc
stos
and
out
js
inc
flds
lahf
jno
mov
lcall
add
mov
and
xor
sbb
fcoms
movsl
add
fcoms
pop
or
icebp
shrb
fcompl
bound
pop
decl
pushf
js
in
jmp
mov
addr16
and
mov
jb
jne
in
fs
mov
sbb
sbbl
xchg
lods
test
pop
mov
xchg
push
inc
mov
fistps
popf
or
clc
jecxz
mov
push
fsubl
push
adc
mov
sahf
or
mull
movsl
lods
notb
ljmp
pop
icebp
outsl
lret
mov
sub
jle
jns
mov
mov
or
dec
pop
fists
xchg
or
xlat
adc
adc
adc
imul
inc
nop
movl
or
or
adcl
sbb
inc
int
cmp
and
lock
mov
cmp
insb
mov
add
jecxz
push
lret
adc
ja
and
or
sbb
xor
stos
push
sub
or
mov
mov
icebp
jne
lcall
mov
inc
insb
out
sub
sbb
mov
repz
mov
gs
lds
mov
cmpsl
adc
jecxz
adc
jecxz
cmp
lcall
lea
testl
mov
adc
pop
jecxz
xor
and
icebp
cmp
pop
mov
push
mov
xor
sbb
out
ror
cmc
jns
xor
clc
jae
xchg
inc
inc
cmp
or
call
aaa
sub
fadds
jns
pop
cld
fimuls
jp
push
orl
mov
cmp
cmp
inc
xchg
bound
pop
jecxz
add
xor
icebp
orl
incb
insb
sbb
lods
push
add
pop
xchg
xchg
add
dec
xchg
cs
mov
mov
xchg
dec
mov
push
lods
cwtl
pusha
jle
les
xchg
xchg
cmp
lret
mov
repnz
inc
stc
rcr
mov
jae
mov
sbb
cmpsl
lcall
aas
int3
lcall
jmp
dec
pop
movsb
icebp
je
inc
lods
test
ja
mov
sarb
or
sti
sar
lahf
dec
mov
xchg
lcall
sub
mov
out
fsts
sbb
adc
or
sbb
sbb
sbb
les
test
xchg
sti
fcomip
dec
scas
movsb
addr16
inc
or
addb
or
pop
movsl
daa
add
adc
mov
xorb
shlb
bound
mull
xor
xchg
and
pop
add
jl
pop
xorb
orb
inc
adcb
inc
mov
je
std
add
test
mov
xor
or
dec
icebp
sub
cld
data16
xchg
loopne
test
pop
push
adc
adc
movsb
fs
clc
xchg
pop
pushf
insb
jge
and
inc
adc
std
in
jle
movsb
cmpb
adc
xchg
sbb
adc
fists
mov
popa
fistpll
stos
add
xchg
sti
out
jb
pop
dec
movsb
and
xchg
cli
add
fisttps
inc
dec
fcompl
test
inc
insb
push
or
lcall
rolb
add
mov
cmp
adc
sub
movsl
mov
push
sub
pusha
cmp
popa
inc
mov
pop
mov
pop
mov
adc
test
jbe
sbb
into
fwait
or
into
xor
mov
push
test
add
mov
fistpl
insb
and
cmpsl
xchg
aad
push
mov
ja
add
mov
sbb
and
jle
rcrb
jne
push
hlt
and
jmp
movsl
and
inc
inc
inc
sbb
cmp
inc
push
pop
jecxz
movsb
test
inc
ds
jg
sbb
fs
xor
in
std
cmpsb
push
mov
and
xor
and
push
rcrb
in
mov
add
test
push
icebp
mov
outsb
lret
and
sbb
pop
cmp
xchg
and
adc
mov
hlt
mov
add
mov
lahf
xorb
inc
and
and
push
rcr
mov
es
adc
cmpsb
jno
and
mov
mov
rcrl
mov
pop
mov
fs
sbb
pop
nop
add
mov
jb
mov
mov
pushf
or
aas
hlt
sub
xchg
jl
cs
and
xchg
pop
mov
and
scas
cmp
pop
mov
sbbl
mov
pop
sbb
xchg
and
mov
hlt
mov
inc
fcomps
inc
jmp
mov
dec
stos
out
push
jmp
jno
add
gs
fadds
xchg
push
dec
addb
mov
adc
xchg
mov
cld
sar
das
bound
xchg
outsl
scas
inc
int
mov
mov
xchg
cmp
or
clc
outsb
les
dec
dec
pop
lock
dec
push
add
flds
inc
fs
mov
xchg
jbe
push
xchg
dec
mov
js
fstp
adc
enter
test
fistpll
dec
fadds
test
andb
roll
js
pop
subb
pop
pop
or
ljmp
jnp
add
and
push
test
xor
mov
and
shll
mov
sub
or
and
or
outsl
in
jne
rol
sbbl
bound
cli
dec
xor
jecxz
push
sbb
and
push
loopne
jmp
add
dec
dec
xchg
daa
dec
out
stos
jg
add
sub
in
orl
inc
push
test
mov
notl
fnstcw
popf
pop
addl
jno
jle
cmp
dec
pop
cli
mov
arpl
fldenv
jp
movsl
aam
pop
enter
cltd
fwait
ja
inc
inc
sbb
loop
loopne
push
fcompl
mov
pop
xchg
sub
sbb
xchg
lods
xlat
pusha
clc
and
dec
lahf
aad
add
xchg
lds
cmp
xor
pop
jnp
cwtl
stc
sub
fwait
xor
stos
int3
mov
cmp
and
xchg
push
xchg
sbb
push
pop
and
imul
and
and
push
sbbl
test
add
imul
aad
or
aas
lds
sbb
pop
pop
rcr
fnstenv
adc
and
cmp
fidivs
outsl
fbld
inc
dec
jecxz
and
sub
add
sub
sbb
pop
mov
je
pushf
test
stos
ficomps
mov
lea
test
xchg
push
mov
mov
clc
jno
cmp
mov
fimuls
mov
jle
xchg
jecxz
stc
mov
ficoms
mov
and
sub
dec
lahf
cld
das
cmp
cmpsb
jle
subb
lret
imul
jo
dec
cli
lahf
ds
mov
jg
or
shlb
mov
mov
and
or
inc
fucomi
rcll
out
lcall
adcl
in
fsubrs
sub
outsl
mov
cmp
in
fsub
inc
sub
subb
pop
stc
ficoml
xchg
jae
inc
cld
xchg
insb
push
pop
jle
inc
inc
push
fistps
adc
ljmp
daa
insb
sub
leave
out
mov
mov
leave
xchg
mov
inc
pusha
enter
cli
and
mov
rol
push
scas
movsl
gs
ja
or
xor
rolb
mov
movsb
pop
push
jnp
adc
pusha
out
push
jge
dec
mov
ja
jg
arpl
and
cmp
inc
scas
lods
addl
call
mov
loop
aaa
pop
jnp
repnz
jbe
xchg
in
shll
outsb
mov
sub
push
jmp
packssdw
push
mov
mov
mov
and
lahf
xchg
mov
divl
push
sub
add
fildll
adc
fiaddl
cmpsb
enter
adc
mov
push
mov
inc
test
test
mov
lcall
inc
dec
xchg
jmp
cmpb
test
add
mov
inc
or
pop
outsl
and
add
aas
andb
sub
inc
mov
pop
add
jp
insb
xchg
jg
lds
aam
lahf
repz
aas
leave
test
push
xor
pop
fucomp
gs
fs
aam
mov
mov
insl
or
mov
xchg
adc
pop
mov
push
and
cli
sbb
sahf
jno
cmpl
lds
mov
fcmovu
mov
into
mov
cmp
pop
pop
lds
adc
sub
jecxz
or
jp
and
fisttps
js
jecxz
mov
sahf
icebp
mov
mov
mov
jle
mov
dec
or
outsl
cmc
popf
mov
inc
dec
popf
bound
arpl
sti
or
dec
mov
mov
jecxz
sarl
xchg
sub
mov
jb
pop
jb
lcall
xlat
push
mov
ficompl
mov
dec
inc
out
std
xchg
mov
inc
stos
stc
popa
jmp
ret
pop
adc
and
pop
inc
js
iret
in
cmpb
cmpb
sahf
icebp
ficompl
inc
into
jmp
repz
push
mov
push
scas
imul
jbe
adc
aaa
mov
sbb
sbb
or
lock
js
mov
inc
xchg
stos
and
and
sbbb
xchg
stc
mov
add
loop
mov
setns
fnstenv
fists
lret
rcll
lods
xor
mov
and
jle
jp
cmpb
out
xchg
adc
xchg
xor
pop
xchg
mov
xorb
pop
ja
fsubrs
cld
push
test
push
inc
daa
lahf
sahf
xchg
ficoml
unpckhps
jp
andl
imul
pop
dec
push
add
cmpsl
cmc
or
pop
or
fdivs
add
xor
add
sub
rcrl
mov
inc
xor
sahf
pop
xchg
sbb
pop
jg
lcall
inc
std
sub
jae
inc
xchg
adc
xchg
outsb
pop
push
push
outsl
orl
test
sub
push
jecxz
jae
xchg
jnp
in
flds
ret
pop
adc
xlat
adc
lea
in
jecxz
and
inc
and
mov
roll
loop
or
add
adc
aas
nop
cwtl
xor
adc
mov
adcb
in
mov
inc
or
jl
or
mov
nop
inc
sub
mov
test
cwtl
mov
inc
idivb
xchg
pop
add
arpl
out
ret
and
daa
push
xchg
fistps
fmuls
or
loopne
stos
daa
repnz
and
mov
and
fstps
and
xchg
loopne
mov
pop
pop
or
icebp
push
lcall
jb
dec
jae
mov
inc
mov
fbstp
daa
loope
fidivrs
sbbb
stos
es
cld
int3
sahf
jnp
mov
lcall
into
jp
sbb
jbe
push
xchg
mov
adc
add
bound
and
loop
lock
mov
sbb
faddp
cs
pop
loopne
xchg
je
stc
and
add
hlt
cwtl
add
pusha
jmp
sbb
jb
and
mov
jg
or
aad
ds
mov
fcompl
push
sbb
and
aas
pop
lock
mov
cmc
sub
dec
enter
adc
xor
dec
mov
and
in
stc
push
mov
adc
mov
mov
setbe
and
loope
pusha
ja
sbb
lds
aad
pusha
cmpsl
or
xchg
or
movb
popf
and
inc
divb
outsl
jp
mov
xchg
jle
fs
mov
aaa
mov
into
add
aam
mov
or
inc
jmp
adc
or
xchg
jb
sbbb
inc
test
ja
inc
dec
inc
mov
or
push
jb
aas
call
inc
pop
cmp
push
mov
roll
add
push
shll
bound
pop
add
notb
mov
mov
inc
sbb
xchg
mov
pop
jecxz
shll
stc
cmp
inc
subb
jl
outsl
pop
and
lret
mov
jo
cmp
xor
pop
pusha
sahf
pop
loop
inc
and
and
in
loope
testl
dec
dec
mov
pushf
sarl
jp
sub
or
negb
jno
sub
cli
pop
add
ret
aaa
add
xchg
mov
mov
ret
call
sbb
cmp
xlat
mov
cmpsb
jecxz
fdivrl
sti
repz
loop
jg
jae
mov
sbb
xchg
bound
pusha
xchg
pop
xlat
cmp
imul
movb
test
xor
in
adc
push
fs
or
xor
fcoml
fcomps
rcrb
out
aas
jecxz
fdivl
mov
sahf
mov
test
sub
mov
ja
scas
sub
mov
icebp
mov
sbb
mov
sbb
xchg
into
or
rorb
xchg
mov
ja
mov
and
push
mov
mov
addl
cltd
dec
pop
xchg
sar
es
test
loope
pop
mov
jnp
je
aaa
cld
incl
ret
mov
xor
shll
adcb
outsl
sub
dec
das
in
or
test
je
mov
jmp
test
mov
sbb
sub
fwait
loop
inc
and
pusha
sbb
fwait
push
jno
mov
clc
addr16
cmpsb
jnp
sub
shll
test
xchg
imul
inc
enter
xorl
adc
sub
inc
fbstp
or
aas
lock
xchg
nop
push
mov
jmp
lahf
mov
push
jmp
push
ljmp
pop
inc
and
imul
sbb
dec
jae
dec
xchg
lods
jp
inc
or
adc
jmp
xchg
pop
outsb
cmc
inc
ffreep
clc
xchg
mov
jge
push
imul
sbb
and
add
int
data16
push
cltd
or
push
jo
aad
inc
mov
inc
mov
xchg
xchg
xlat
bound
insb
push
movsb
jecxz
fwait
test
arpl
xor
xchg
add
pop
inc
dec
mov
add
popa
inc
or
mov
sbb
xchg
xchg
sbb
and
and
mov
or
mov
push
enter
jle
xchg
add
dec
fildll
bound
mov
pop
add
rolb
jecxz
fwait
mov
pop
addr16
sub
and
mov
mov
add
test
inc
pop
in
iret
xchg
fcmovb
out
push
fidivrl
mov
dec
dec
popl
fwait
xchg
inc
xchg
xchg
cli
mov
cld
movsb
pushf
inc
cs
sbb
pusha
lcall
aaa
sub
loopne
mov
mull
adc
sbb
inc
fs
jo
xchg
rcrb
out
out
push
pop
mov
daa
hlt
xchg
iret
cmp
call
xchg
cmp
xor
jns
lcall
push
adc
nop
sbb
sbb
popf
pushf
sbb
fstpl
mov
mov
repnz
ret
jecxz
hlt
dec
or
pop
int
shll
dec
add
xchg
push
pop
xchg
xchg
inc
cmpb
xchg
cvtdq2ps
cs
fsubr
out
pop
push
or
xchg
cmpsl
mov
xchg
mov
bound
test
mov
xchg
push
pop
sub
mov
insb
mov
xchg
pusha
pop
push
jae
addb
sbb
dec
xchg
dec
adc
das
and
xchg
cltd
es
mov
and
mov
xor
jnp
sub
push
push
xchg
daa
push
out
mov
xchg
repz
insb
lods
inc
ret
movsl
add
mov
hlt
inc
and
jne
and
jne
and
jne
and
jg
loopne
add
xchg
pop
pusha
andb
movsb
ss
pushf
bound
inc
popa
insb
xchg
fwait
bound
mov
jl
fwait
sbb
mov
outsb
adc
and
add
fcompl
or
mov
and
cmp
addl
filds
popl
sahf
lock
or
add
sbb
xlat
nop
push
and
push
mov
push
pop
jecxz
ror
outsl
cmc
scas
fnstenv
repz
jno
xchg
addr16
lahf
lahf
repz
scas
mov
orb
daa
and
mov
pop
lea
jmp
sti
imul
cld
jge
sbb
mov
mov
pop
dec
cld
int
out
cld
in
inc
test
mov
cltd
stc
xor
push
xchg
mov
inc
je
fdivrl
imul
push
cmp
jecxz
test
sbb
cmp
push
inc
lea
loop
sbb
xchg
pusha
pop
dec
lds
push
insl
inc
xchg
lea
cwtl
arpl
pop
or
inc
cmpsb
loop
out
push
fstpl
ja
add
sbb
mov
and
rcl
fs
inc
push
xor
xchg
fbld
pop
add
scas
bound
das
jns
xchg
mov
push
inc
and
sbb
inc
int3
jmp
sti
stc
mov
add
andb
pop
sahf
jge
sbb
adc
pushf
cmp
fwait
clc
add
add
mov
pop
or
std
imul
shll
xchg
popf
call
cmp
pop
pop
xchg
push
fidivrl
mov
sti
imul
pop
insb
imul
shr
or
sub
test
dec
in
add
sbb
and
aad
call
das
clc
adc
cmp
rcll
dec
je
aas
sbb
xchg
jb
cltd
insl
loope
cwtl
dec
les
rorb
xchg
popa
or
pushf
pop
fidivrl
fimuls
or
fs
leave
cmp
loopne
pop
jge
rcll
sbb
in
enter
xchg
jg
jg
icebp
ss
fsubr
in
xchg
or
xorb
inc
jl
cld
push
imul
and
bt
adc
add
jg
pushl
inc
aad
ret
add
push
addl
mov
arpl
ja
xlat
leave
mov
push
xlat
sahf
imul
fcoms
test
pop
xchg
jne
jge
push
xor
pop
aad
or
popa
mov
add
and
inc
add
pop
mov
outsl
pop
mov
jle
jmp
pop
push
mov
in
cmp
int3
rol
lods
in
popf
xchg
adc
sbb
dec
popf
mov
or
sub
mov
xchg
stos
movsb
cmpb
sub
or
mov
mov
inc
jle
xchg
inc
and
jb
dec
inc
cld
sbb
addr16
daa
jns
les
xlat
sarl
xor
or
addr16
fldl
cmc
xor
fnstcw
and
popf
xchg
outsb
mov
dec
popf
xchg
xchg
sub
rcll
and
adc
es
scas
inc
jl
pop
jnp
sbbb
fwait
in
adc
pop
adc
adc
jle
sbb
sbb
nop
xchg
add
jecxz
or
pop
or
xchg
fdivl
fs
pop
test
and
scas
fisttpl
scas
loope
jp
xchg
or
sbb
pop
jmp
push
popl
fmul
ud0
mov
add
xchg
mov
add
pusha
or
inc
cld
cli
xlat
pusha
xlat
xchg
pop
cmp
and
loope
into
pop
sub
xchg
adc
test
dec
adc
roll
sarb
adc
mov
addr16
sbbl
js
imul
mov
imul
xor
pusha
dec
sbb
jno
andl
adc
inc
imul
add
aam
pop
mov
push
movsb
cmp
push
sbb
fs
icebp
cli
ss
mov
mov
dec
imul
imul
sahf
imul
add
jp
pop
xchg
enter
aas
push
mov
out
mov
pop
sub
test
fcompl
arpl
dec
in
push
test
and
pop
imul
enter
addr16
mov
xchg
sbb
mov
ficoms
dec
jl
pushf
jle
pop
loop
cld
mov
enter
jnp
and
adc
xchg
nop
pop
movsl
mov
xchg
jge
mov
xchg
add
sbb
push
xor
sbb
aas
scas
movd
popf
test
mov
pusha
jle
enter
out
pushf
imul
jne
into
dec
adc
fdiv
xor
das
cmp
or
inc
repz
jmp
adc
cmpsb
push
jb
adc
call
int
mov
lock
jbe
fwait
mov
cld
cld
mov
pusha
jg
add
or
adc
loope
sub
subl
push
pop
leave
or
mov
mov
punpckhdq
cmpb
fisttps
lock
mov
mov
stos
pop
ja
enter
lods
cli
sub
out
adc
lds
mov
xor
adc
lea
inc
insl
out
jnp
gs
bound
insl
rcl
add
push
dec
mov
jl
and
jnp
cmp
in
push
adc
xchg
jmp
pop
sub
dec
test
inc
mov
xorl
push
lcall
das
int3
dec
dec
pusha
xchg
xor
inc
pop
mov
loop
dec
add
xchg
in
imul
or
mov
sub
ficoms
sbb
mov
dec
in
lods
fsubrl
mov
inc
dec
dec
dec
pop
pop
cmp
sub
jns
outsl
and
test
sbb
jmp
fs
or
stos
mov
xchg
lea
movsb
enter
idivl
mov
jmp
sbb
lret
fldenv
xchg
insb
push
or
daa
popf
xchg
xchg
xlat
push
vpmacsww
loop
andl
clc
dec
jae
stc
decb
push
lods
push
cmp
jp
decl
push
data16
cmp
repz
fxch
push
rorb
adc
sbb
xchg
mov
sahf
mov
lods
int
icebp
aad
pop
in
mov
fdivl
dec
xchg
adc
xchg
sbb
pusha
lcall
sarb
aad
xor
lcall
xchg
xchg
idivl
jmp
jo
out
xchg
push
and
jb
das
cmp
pop
cltd
scas
mov
sub
mov
outsb
das
outsl
or
imul
iret
inc
pop
push
fstps
or
ja
mov
fistpll
aas
xlat
xor
aaa
in
leave
jmp
fists
push
shlb
cld
outsb
in
fistps
mov
ficoml
inc
sub
cmp
ss
cmpsl
inc
cmp
mov
hlt
cld
sahf
jmp
mov
cmp
dec
arpl
add
sub
aam
jle
loop
jp
add
jp
test
clc
and
stc
popf
pusha
aad
outsb
xchg
pop
jnp
nop
push
jp
out
push
dec
imul
test
jmp
jnp
xchg
in
in
ret
jns
in
shll
cld
and
push
js
mov
cs
jle
sbb
ret
add
xlat
sub
cmc
repz
rol
jne
jp
orb
call
and
lahf
xlat
pop
mov
out
and
mov
push
cmc
loop
xchg
lahf
mov
cmpsl
decl
sub
pop
arpl
arpl
xor
mov
addl
pop
push
ret
fcmovne
cmpsb
cwtl
nop
sub
mov
and
cmp
adc
jp
out
add
repz
in
jp
sbb
popf
adc
dec
push
cmpb
and
je
or
push
add
add
mov
jno
in
fsubl
inc
sub
push
outsl
mov
sti
enter
sub
or
xchg
sbb
gs
add
mov
xchg
push
int
jp
dec
ret
aaa
cmp
adc
dec
jl
add
notl
cmpsb
push
xor
add
mov
jo
cli
sub
aas
popa
mov
dec
rolb
rcrb
add
pop
arpl
or
push
push
push
jbe
fcmovu
test
or
inc
adc
shll
mov
push
aaa
dec
xor
mov
and
mov
cmc
repz
fmulp
add
jae
jmp
lcall
popa
jp
loopne
leave
outsl
popa
push
pushf
cmp
shll
inc
pop
lock
push
mov
test
push
dec
sti
mov
rcrl
xchg
andl
adc
mov
push
dec
test
imul
and
sub
cmpsb
sub
ja
xchg
outsl
jp
cmpsl
adc
inc
xor
inc
arpl
push
cmpsl
aam
dec
adc
pop
dec
jle
orl
jb
dec
or
adc
adcb
fldt
imul
add
imul
mov
inc
push
bound
nop
sbb
cmove
mov
xchg
pop
mov
push
xchg
test
movsl
rorb
jecxz
xchg
pop
dec
test
in
and
pop
dec
cwtl
sahf
adcl
mov
mull
push
xor
out
push
push
popf
jecxz
sbb
mov
mov
fs
filds
or
test
fiaddl
mov
sbb
mov
and
lahf
xchg
pop
int3
jmp
std
les
scas
addr16
test
addb
or
pusha
iret
xor
pop
nop
mov
shl
jecxz
mov
lret
inc
call
test
or
fadds
mov
xchg
add
add
daa
inc
enter
push
es
mov
mov
mov
cmc
pop
mov
jbe
mov
bound
mov
inc
lahf
mov
cmp
pop
mov
push
xchg
cs
mov
push
add
xchg
sbb
icebp
pop
push
lock
and
dec
daa
add
adc
bound
popf
sbb
xlat
push
jecxz
aad
gs
jbe
fsubrs
cmpsl
dec
mov
test
popf
push
dec
lahf
scas
lods
sahf
movsl
pop
sbb
sub
xchg
stos
stos
and
adc
xor
mov
sbb
sbb
pop
into
ficomps
rclb
jg
sbb
loope
inc
mov
sub
mov
fmuls
mov
rolb
adc
pusha
cld
inc
arpl
jns
pusha
sbb
mov
and
daa
mov
ret
in
xchg
sub
and
out
jbe
adc
out
pop
xor
push
aam
mov
lock
dec
inc
push
dec
das
nop
cmpsl
mov
test
push
xchg
sub
and
repnz
mov
push
xchg
repz
adc
jns
les
pop
mov
xor
lock
dec
cmp
filds
jecxz
ljmp
mov
cmp
adc
inc
outsl
jmp
jecxz
mov
xlat
sbb
mov
testb
mov
pop
push
aam
inc
clc
mov
push
fistps
and
dec
push
xchg
push
or
add
clc
xchg
movsb
push
jp
xlat
les
push
lods
mov
pushf
sbb
sub
push
hlt
mov
push
mov
fnsave
xchg
and
adc
jge
sbb
inc
xor
dec
in
xchg
cs
inc
stc
or
jnp
scas
cmp
imul
sub
xchg
fwait
and
lock
mov
push
lea
inc
cmp
sbb
mov
sbb
push
xor
inc
xor
outsl
mov
adc
movsl
xchg
ficoml
aad
sti
xchg
mov
push
sbb
mov
pop
xchg
adcl
ds
mov
dec
push
pop
adc
sbb
dec
icebp
lds
jle
aad
fsubl
and
mov
sbb
sbb
lahf
sub
jbe
jb
pop
pop
daa
test
flds
xchg
and
and
ja
inc
lea
and
xchg
jb
mov
adc
add
mov
add
sub
test
mov
sbb
add
daa
test
lds
xor
cmc
lret
pop
sbbb
push
in
hlt
fs
cld
repz
add
and
and
sbb
push
pushf
mov
sbb
mov
test
push
xchg
loope
push
inc
xchg
xchg
stc
bound
fisttpl
repnz
inc
jnp
out
pop
outsl
arpl
mov
mov
adc
stc
push
clc
loope
leave
dec
jecxz
pop
or
jmp
pusha
adc
ja
mov
shlb
mov
shll
movsb
jecxz
mov
gs
adc
mov
gs
push
je
sbb
jecxz
cmpsb
lret
mov
push
xor
dec
pop
inc
adc
mov
push
or
mov
out
popa
mov
push
lds
xor
and
inc
xchg
and
ja
inc
push
inc
loope
or
lahf
mov
and
insb
xchg
sbbb
adc
lea
ja
sbb
test
hlt
mov
roll
outsl
pop
stc
dec
jl
lcall
dec
enter
adc
sbb
mov
cltd
pop
cmp
mov
lcall
xchg
jbe
adc
dec
jl
imul
pop
adc
cmp
sbb
xchg
jp
dec
mov
xchg
mov
mov
jae
das
lcall
inc
sbb
mov
ss
sub
arpl
add
les
adc
orb
mov
pop
mov
sbb
mov
imul
sbb
or
add
sub
pushf
mov
loopne
and
adcb
data16
sarb
sbb
popf
call
jnp
mov
gs
push
pop
inc
pusha
mov
push
lea
and
jg
push
movlps
xchg
addr16
es
clc
leave
enter
pushf
xchg
cmc
loopne
jae
lcall
mov
mov
stc
or
lods
sbbb
pop
and
dec
pop
lds
mov
mov
push
jno
pop
sahf
mov
mull
xlat
lods
lahf
jo
rcrb
and
jl
jbe
rclb
sbb
out
mov
cmp
mov
daa
sbb
mov
lcallw
mov
mov
mov
incb
js
dec
mov
add
scas
das
inc
mov
bound
jno,pt
imul
ljmp
fildll
out
les
movsbl
push
xchg
pop
sarl
push
xchg
sbb
sbb
andb
repz
sub
in
call
fs
fnstenv
mov
jle
sub
cmpl
adcl
pop
push
pop
shll
adc
inc
mov
push
test
lahf
pop
cltd
inc
or
pop
or
cmpl
push
mov
push
lods
addr16
mov
jo
pop
mov
shll
mov
outsl
in
sbb
sahf
mov
xchg
mov
aas
dec
mov
movsb
aad
and
inc
mov
xlat
mov
loopne
in
aad
push
jae
aas
mov
and
or
jae
rcll
call
imul
js
fstps
xchg
xchg
mov
pop
test
addb
aaa
xor
jecxz
add
ffreep
xchg
jbe
or
call
xor
sub
shl
stos
repz
jb
xlat
ja
test
push
sbbl
jp
fistpl
popa
fisubs
or
es
repnz
mov
and
inc
mov
lcall
and
sbbl
and
xchg
xchg
xchg
sbb
mov
adc
mov
pusha
stos
cmpsl
popa
hlt
mov
lret
dec
lea
xor
mov
imul
and
outsb
jb
jb
sbb
jg
pop
adc
pop
in
loope
push
jmp
adc
ret
lret
mov
fldenv
add
dec
jp
fnstenv
fwait
jo
pop
mov
stos
pop
dec
fdivrs
dec
and
arpl
out
mov
adc
mov
jp
imul
imul
repnz
inc
xchg
fidivl
pop
into
push
ljmp
pop
mov
jns
cmp
mov
enter
pop
pop
mov
add
aad
push
inc
xchg
pop
push
lahf
fadd
ficompl
cmp
rcll
xor
mov
adc
dec
sbb
addr16
loope
push
cltd
or
fwait
add
rorl
ja
push
aam
fildl
jae
mov
dec
repz
adc
and
stos
xchg
mov
rol
add
mov
mov
inc
sub
adc
or
outsb
enter
mov
cltd
xchg
or
and
addr16
rcrb
xchg
mov
or
lds
aaa
jns
outsb
dec
mov
sub
aad
jnp
mov
mov
xchg
aaa
adc
push
pop
fcomps
jo
fcoml
fisttpl
sbb
adc
mov
cltd
hlt
push
mov
and
xchg
push
xchg
mov
aad
fwait
addr16
inc
mov
stc
pop
out
pop
push
sub
cmp
sub
jl
mov
mov
add
and
mov
pop
pop
or
ret
je
cmp
sbb
xor
out
stc
repnz
pushl
mov
xchg
inc
pop
inc
add
bound
jecxz
insl
outsl
imul
js
es
mov
test
lcall
mov
inc
lret
pop
inc
sbb
sbb
btrl
xchg
xchg
enter
mov
xor
lea
sub
jle
fbstp
jle
pop
pop
sbb
cmp
add
and
test
frstor
test
pop
test
mov
data16
mov
loop
mov
mov
test
filds
inc
test
pusha
xchg
fs
ficoml
push
and
pushf
inc
cmp
mov
mov
xchg
test
aam
and
cld
scas
jecxz
rcll
sub
inc
shlb
bound
inc
fsubrl
cwtl
add
xchg
push
mov
fwait
jge
cld
pop
je
in
and
cli
pushf
adc
sub
cmp
and
imul
aam
jbe
pop
sub
ja
dec
jl
sbb
sbbb
cmpsl
clc
out
aas
wbinvd
inc
cltd
mov
out
testl
movsb
sarl
out
stc
cmp
dec
pop
cmc
push
adc
xor
mov
inc
mov
xchg
xchg
addr16
mov
pop
loopne
outsb
xor
ja
addr16
adc
sbb
jns
sarl
sbb
sbb
js
fisubrs
jge
aad
adcb
flds
xchg
xlat
push
js
adc
inc
adc
and
bound
add
lahf
xchg
jb
sahf
sub
mov
mov
push
mov
addb
or
repnz
and
cld
iret
mov
lcall
add
push
call
add
sbb
and
sub
sub
or
jle
push
int
pop
adc
pushf
clc
sbb
mov
mov
ret
cmovge
jbe
je
and
sub
jns
or
inc
inc
test
pop
lods
xor
pop
es
outsl
add
adc
xor
or
imul
ds
cmp
xchg
jge
adc
and
inc
inc
pusha
sub
je
sbb
or
inc
or
test
xchg
arpl
fwait
pop
inc
and
jmp
sub
mov
sub
push
dec
fsubrl
lret
aaa
std
xchg
mov
in
stos
mov
out
test
repnz
lcall
pushf
mov
push
shll
int
cmp
in
pop
insb
pop
cmp
inc
inc
mov
fwait
sbb
mov
push
out
rol
dec
mov
push
sbb
pop
adc
cld
or
pop
dec
js
inc
in
icebp
pop
ja
adc
pop
lcall
mov
xchg
mov
or
addb
push
dec
mov
das
sarl
adc
pop
xlat
push
addr16
xchg
ret
mov
jno
fstpt
or
dec
fistps
fsts
mov
xchg
pop
in
ja
in
fildl
lea
and
pop
ret
ret
out
dec
insb
in
pop
notl
loope
arpl
sbb
lret
cmc
and
fsubrs
jo
call
adc
and
sbb
mov
js
adc
lcall
push
pop
mov
imul
inc
pop
je
xchg
xor
adc
adc
cmpsl
sbb
add
xor
ret
jg
mov
lcall
push
sub
addl
arpl
mov
jno
mov
adc
sub
in
mov
sti
adc
sub
imul
dec
les
imul
pop
cmp
sbb
mov
inc
insl
frstor
call
sbb
mov
adc
adc
loop
jmp
dec
cmp
repz
test
add
ffreep
jecxz
jne
in
insb
inc
mov
loope
xor
mov
pop
sbb
jb
cwtl
add
add
into
inc
adc
cltd
xchg
mov
mov
hlt
adc
loope
pushl
xchg
add
addl
std
sahf
push
cmpsl
loope
arpl
or
xchg
dec
push
sbb
fists
lcall
rolb
ret
fwait
adc
sbb
loop
xchg
xor
je
xchg
pop
adcb
sbb
fs
xchg
xchg
pop
scas
out
and
sub
xchg
xchg
xchg
adc
xchg
pop
adc
xchg
inc
in
in
popa
adc
imul
rolb
nop
sbb
popl
pop
push
or
pusha
mov
mov
jl
or
xchg
lret
sbb
inc
or
xchg
xlat
and
test
inc
cmpsl
sbb
test
jle
sbb
xlat
bound
es
add
sbb
out
xchg
pop
dec
popf
addb
lahf
xchg
movsl
pop
add
pusha
andl
xchg
push
sbb
inc
sbb
pop
sbb
and
sbb
sbb
push
sbb
xchg
pushf
xchg
sbb
fwait
inc
sbb
pop
push
sbb
fs
sbb
inc
pop
bound
xchg
adc
xchg
pop
adc
mov
sbb
lea
xchg
nop
adc
adc
xchg
sbb
mov
or
mov
or
or
mov
inc
dec
or
test
add
fs
clc
push
sahf
icebp
test
sbb
dec
add
sub
sbb
jecxz
cld
sbb
and
sbb
mov
xchg
fs
fldl
push
pop
xchg
cmp
sti
shll
ljmp
and
pop
mov
xlat
and
mov
mov
jo
insb
cmp
outsb
scas
mov
daa
int3
xlat
stos
lret
rcrb
mov
mov
mov
mov
lcall
inc
cmpsb
jbe
push
xor
mov
ds
jb
ret
aaa
sbb
loope
xchg
xchg
aam
int3
pop
mov
mov
bound
jg
sti
enter
repnz
fbld
push
inc
imul
mov
and
cmp
xchg
pop
stc
mov
inc
enter
daa
insb
fiadds
insb
mov
dec
mov
inc
imul
mov
testl
jg
push
lods
fisttps
inc
test
les
adc
xchg
push
and
pop
ret
cmc
cmpsl
fadds
xorb
pop
scas
adc
lock
fwait
aas
daa
xor
push
pop
and
js
lods
out
xchg
xchg
dec
mov
pop
sbb
and
sub
rcrl
xchg
aaa
mov
bound
and
mov
sbb
or
bound
and
jb
rcrb
pop
sti
cmp
ret
fstpl
and
and
pop
rol
mov
fistpll
and
and
pop
outsb
adc
sbb
xchg
and
add
out
fcomps
cmp
cltd
pusha
aaa
lcall
inc
je
and
js
pushf
jbe
inc
pusha
adc
inc
jl
jbe
or
loop
add
push
inc
jg
pushf
pop
in
scas
adc
gs
inc
pop
sub
and
push
pop
outsl
std
dec
sbb
xchg
sbb
pop
and
add
xchg
pop
adcb
sub
jo
pop
call
test
test
outsb
test
cmp
push
bound
adc
add
test
leave
adc
mov
cli
js
xlat
push
mov
bnd
xor
loopne
xor
rorl
xchg
roll
aaa
push
jns
sti
xchg
flds
jl
cmc
and
or
roll
mov
js
and
hlt
or
ja
sbb
mull
push
lds
mov
mov
iret
sub
pop
pop
adcb
xchg
mov
xchg
lcall
ds
je
test
loope
insl
cwtl
adc
and
inc
mov
cmp
dec
outsl
cltd
dec
lcall
and
push
pop
lods
fistps
xchg
push
int
shlb
cmp
int
and
fwait
and
mov
xchg
sti
fnsave
test
out
mov
inc
in
push
pop
int3
jecxz
push
push
hlt
ss
outsl
push
imul
jmp
mov
fcmovbe
sbb
and
pop
and
xor
loop
fcoms
cld
sbb
js
add
ficoml
test
pop
push
pop
dec
pop
das
inc
and
jbe
fadds
jae
mov
pop
cmp
test
sub
push
inc
aaa
jmp
dec
out
addr16
out
and
scas
imul
scas
iret
dec
xchg
jecxz
dec
gs
mov
orl
xchg
and
mov
xor
stc
push
jecxz
push
sub
jecxz
lcall
and
fcomip
adc
add
xorl
pop
sub
aaa
outsl
cmpsb
out
mov
jnp
in
push
mov
data16
mov
jmp
bound
rcll
popf
mov
or
xorb
mov
or
jbe
cmp
cmp
mov
lods
xchg
xchg
sbb
hlt
mov
leave
xchg
hlt
add
outsl
loop
mov
out
adc
test
test
imul
dec
ret
jb
push
push
shrl
and
test
mov
adc
and
and
mov
in
push
lret
mov
push
and
sbb
popf
sti
add
scas
add
adcb
pop
add
sbb
mov
mov
mov
fadd
lods
sbb
mov
jb
xor
ds
or
inc
xchg
out
or
or
iret
sub
out
pop
push
test
mov
mov
mov
cmc
inc
lds
hlt
or
xchg
add
lea
cmp
pop
push
jle
mov
gs
xchg
push
outsb
mov
xchg
in
popa
into
push
outsb
out
mov
cld
sub
call
mov
and
xlat
addr16
push
in
test
xchg
cmpsb
inc
push
and
add
hlt
add
or
cmp
pop
prefetcht0
xchg
xchg
xchg
push
inc
jno
or
into
sbb
cmpsl
aas
in
dec
aad
mov
xchg
pop
and
inc
jge
pop
mov
imul
in
adc
call
sbb
pop
mov
xchg
or
addr16
push
bound
mov
enter
push
push
rorl
orb
add
outsl
push
add
mov
cmpsl
outsl
adc
incb
xchg
lahf
dec
push
mov
test
loop
imul
cmpsl
ret
xchg
and
sub
out
inc
cmp
fdivrl
inc
xchg
jge
xor
nop
inc
push
bound
popf
lahf
sbb
sbbb
mov
fs
or
fs
cmp
mov
nop
icebp
mov
xchg
pop
mov
movsb
cld
iret
xchg
pop
and
call
mov
add
xchg
jae
mov
mov
lcall
xor
jp
lahf
push
add
cwtl
fwait
sbb
aas
and
lahf
and
push
mov
sbb
push
andl
pop
aas
cmp
cmpsl
jo
loope
adc
sbb
sub
bound
xor
push
jns
fstps
xor
jp
pop
mov
push
add
insl
div
imul
sub
jg
lcall
test
outsl
js
lds
mov
iret
andb
push
adc
call
mov
psrlw
fwait
mov
cwtl
jecxz
sbb
push
xchg
sbb
lcall
mov
inc
sub
sbb
js
fwait
test
and
in
add
rcll
ja
std
pop
mov
lds
loope
cmpl
test
fwait
lret
push
and
jnp
ja
sub
xor
test
push
pusha
xchg
push
sbb
xor
add
sub
or
add
and
jae
lahf
sahf
sub
xchg
mov
stos
push
push
mov
push
mov
sbb
adc
mov
xor
mov
fmull
and
adc
dec
lahf
pop
push
inc
mov
sbb
xchg
sub
sahf
cltd
jg
fcoms
ja
add
xchg
pop
jp
lods
and
mov
dec
fdivl
sahf
inc
cltd
xor
push
addb
repnz
icebp
rclb
stos
add
or
jo
sub
rolb
stos
arpl
mov
sbb
inc
add
sti
outsl
cwtl
js
push
jg
jg
cmp
xchg
xchg
add
xor
sub
cwtl
lahf
xchg
ss
push
sbb
insl
loop
cmp
inc
cmp
cmc
sbb
add
stos
xchg
lret
cmp
jecxz
dec
xor
test
pop
call
cmp
lea
dec
ja
jmp
iret
sbbb
xor
cmp
out
pop
jle
push
jl
in
pop
bnd
stc
pop
fldcw
mov
fsts
xchg
scas
pop
sub
push
lods
int
outsl
loop
and
add
roll
hlt
ja
aad
mov
lods
popa
mov
out
or
mov
mov
fnstsw
and
adc
test
mov
xchg
jle
sbb
cmp
mov
push
ja
and
xchg
xorb
push
push
dec
pop
xchg
fwait
push
xchg
push
xchg
out
testb
mov
test
inc
mov
aas
dec
pushf
pop
jne
push
inc
clc
sarb
sbb
pusha
notl
xchg
sub
jp
popf
pusha
push
in
mov
cli
jno
andb
mov
inc
push
mov
lahf
cmp
add
pop
xchg
fcmovbe
out
outsl
jno
pusha
rcrl
push
mov
dec
cmp
scas
sbb
cmp
jns
mov
fwait
pop
mov
push
ret
rep
leave
daa
sub
cmp
daa
xor
pop
push
pop
jle
push
fadds
out
js
pop
and
and
xor
mov
loopne
xor
jp
cmp
adc
add
dec
push
roll
loop
mov
pop
cmp
xchg
mov
roll
add
imul
pop
clc
xor
addb
pop
adc
popf
test
xor
mov
xchg
aad
push
sbb
out
pop
cmc
pop
mov
inc
inc
cwtl
out
mov
or
das
mov
cmp
mov
adc
movsb
xchg
pop
out
mov
cs
icebp
cs
xor
addr16
jge
movsl
add
cmp
fadds
mov
cmc
jo
add
stc
dec
aaa
push
mov
inc
cmp
or
cmpb
aad
and
jne
ljmp
loopne
dec
mov
shrb
pop
mov
jo
orb
fs
fsubrp
dec
pop
cld
das
xchg
mov
mov
and
pop
faddl
ja
fnstenv
cmp
and
call
cmp
movsl
insl
xor
jg
sub
sbbl
std
sahf
arpl
xchg
sub
fld
pop
jle
andb
push
sub
add
sarl
fisubs
ds
xlat
lock
cli
cmpsl
or
push
dec
jbe
in
fdiv
sbb
xor
mov
mov
test
fadds
xor
jge
retw
arpl
out
dec
lods
inc
or
cld
mull
mov
cs
jmp
add
inc
push
aaa
insb
pop
pop
cmp
adc
push
cmpsl
sub
scas
mov
arpl
and
mov
cmp
xor
jge
sub
or
loop
push
scas
push
mov
jb
add
push
inc
in
test
inc
aaa
mov
fwait
ja
inc
fs
test
add
or
subl
xchg
sbb
mov
fnstcw
jb
cmp
push
mov
dec
ljmp
sbb
stos
insl
dec
push
cmp
ja
andb
sbbl
pop
push
jns
scas
pop
int3
mov
pushf
outsl
mov
rorl
xchg
fbld
mov
jl
loope
pop
add
mov
mov
sbb
and
add
icebp
test
lea
and
sub
and
ret
jge
jecxz
push
push
and
mov
test
stc
xchg
scas
pop
xchg
jb
adc
xchg
cld
inc
and
adc
incl
mov
adc
mov
adc
sti
add
adcl
dec
sarl
sub
pop
jb
xchg
mov
int3
dec
ds
jbe
addr16
or
sbb
fiaddl
jp
xchg
mov
imul
mov
sbb
fxch
lret
push
pop
pop
xchg
sub
xor
cmp
outsl
and
xchg
inc
adc
imul
cmp
in
into
ret
roll
sub
push
roll
push
adcl
pop
leave
dec
pop
xor
xchg
add
inc
movsb
ss
xchg
sub
lea
in
push
push
sub
jecxz
in
loop
sti
sti
add
les
insb
mov
cltd
fadd
fcompl
mov
jecxz
inc
adc
mov
xor
cli
outsb
hlt
mov
sbb
lock
addl
cwtl
cs
push
pop
das
and
xor
mov
sub
outsb
out
push
shll
mov
push
mov
sub
aas
and
lea
sbb
lds
adc
cmpsb
pop
stc
mov
lahf
outsl
dec
or
xchg
dec
sbb
push
fidivs
or
sahf
mov
push
mov
dec
fucomp
mov
mov
js
jb
dec
cmp
js
movsl
mov
cmp
test
aaa
adc
adc
rolb
stos
filds
movsl
pop
dec
pusha
aas
jns
xchg
and
push
add
movsl
dec
push
jne
andl
shrl
push
scas
les
and
xchg
cmp
pusha
inc
outsl
sahf
jp
mov
into
adc
pop
sub
cli
movsb
decl
push
jnp
jg
imul
sbb
dec
adc
mov
test
sub
mov
cmp
inc
push
add
push
sub
imul
or
out
movsb
pop
pop
xchg
inc
mov
fildll
sub
sub
loope
or
movsl
aaa
iret
loopne
fldt
pop
and
xchg
insb
sub
daa
aaa
pop
mov
mov
cwtl
or
out
push
mov
xchg
roll
or
xor
in
mov
sub
jp
mov
inc
sub
fcompl
pop
es
into
cmp
adc
xchg
jnp
call
and
imul
and
outsb
add
loop
or
pop
dec
mov
xchg
bound
xchg
iret
outsl
bound
fcmovnb
das
stc
addr16
push
or
push
aaa
or
inc
cmpsl
inc
mov
mov
lcall
dec
out
inc
cmpsl
xchg
push
repnz
ds
push
or
mov
lock
jl
inc
data16
lock
and
jecxz
aad
testl
mov
jbe
push
fadds
pushf
xor
or
dec
xchg
mov
xchg
dec
jecxz
into
sub
cwtl
bound
daa
push
dec
in
xchg
dec
cltd
cmc
lret
mov
jg
or
or
imul
hlt
aam
fdivrp
mov
mov
nop
subl
movsl
lahf
inc
dec
mov
ret
mov
push
sbb
cmpsb
inc
xchg
jge
push
xchg
add
mov
cmc
or
ret
icebp
xchg
lods
xor
sub
in
mov
cmpsl
orl
mov
test
pop
push
mov
leave
and
pop
aaa
sub
mov
mov
push
movsb
stc
jns
mov
je
dec
inc
and
mov
enter
es
shll
cld
shlb
pushf
leave
push
xchg
rcll
jp
stc
mov
outsl
mov
xor
aaa
mov
mov
xlat
fdivs
stos
add
mov
cmp
mov
call
orb
push
loope
sbb
outsb
test
or
jge
mov
lret
insb
pop
sbb
push
cmpsb
incb
out
or
mov
push
pusha
push
mov
cmpsb
jecxz
pop
push
xchg
inc
mov
out
or
xor
or
dec
jle
xorb
in
imul
andb
mov
or
imul
cmp
mov
adc
mov
jp
fildll
dec
xchg
pop
mov
mov
fdivrs
jns
xor
lret
orb
lds
dec
enter
and
jno
cmpl
mov
daa
rclb
test
cmp
in
les
nop
aas
int
mov
jne
jo
repnz
js
cli
add
mov
das
jecxz
or
jno
pop
shrl
pop
sbb
xchg
pop
and
sub
pusha
test
mov
cltd
testb
ret
sahf
movsl
jbe
dec
ret
ljmp
sahf
fistpl
push
clc
sbb
addl
call
ja
push
lcall
sbb
mov
xchg
fadd
addb
add
mov
cs
adc
addr16
and
bound
out
push
and
sahf
xchg
inc
mov
xchg
lret
incw
cs
fmull
mov
xchg
shl
cwtl
sbb
inc
jge
daa
mov
jg
in
repnz
pop
push
cmpb
lahf
incb
out
or
jmp
lcall
adc
js
mov
popl
repnz
ret
mov
lret
cwtl
inc
int
pop
std
fsubs
rorb
iret
addl
rorb
xchg
push
or
fs
xor
fs
lea
mov
jp
fwait
repnz
push
and
stos
fsubs
rclb
mov
lcall
or
ja
add
sub
ficoml
lcall
insl
jle
loopne
mov
sub
jg
pop
mov
or
pop
mov
scas
adcb
inc
xchg
addb
xchg
repnz
or
loop
jae
mov
test
adc
push
adc
or
add
xchg
fs
outsb
adc
pop
fists
fs
rclb
js
movsl
cmpsl
mov
jb
outsl
das
jo
push
test
dec
jae
cltd
mov
inc
popf
jle
ret
pop
and
pushf
add
push
and
pop
adc
sbb
xorl
push
addb
cwtl
adc
sub
sbb
mov
xchg
sbb
xchg
lahf
inc
xchg
sbb
pop
xchg
adc
adc
xchg
add
add
mov
les
inc
adc
jg
jge
lcall
sbb
or
lahf
int
push
sbb
or
test
repz
or
or
pop
push
popa
xchg
pop
xchg
insb
fwait
mov
add
imul
cmp
adc
xorb
pop
movl
inc
cmovae
sbb
out
test
scas
mov
sbbb
lcall
decl
add
mov
lds
push
rcrl
xor
pop
push
cwtl
or
bnd
xchg
push
mov
mov
lea
xor
xchg
xchg
dec
pop
mov
test
roll
xchg
inc
pop
aam
movsb
fdivrl
je
test
xor
arpl
pushf
cmpsb
inc
mov
and
pop
mov
mov
sbb
jl
imul
stos
mov
mov
jnp
enter
lea
fs
mov
fadds
sub
sub
and
daa
aaa
sub
xor
aaa
xlat
inc
daa
mov
jmp
xchg
and
sbb
push
mov
xor
cmpsl
mov
arpl
jmp
stos
popa
adcb
sti
sbbl
pop
ror
jbe
shlb
les
inc
sbb
pop
push
xchg
jo
sbb
mov
jge
add
loope
push
int3
sub
add
and
pop
pop
sarb
test
mov
or
mov
andl
js
das
hlt
inc
stc
inc
dec
pushf
adc
loop
fisttps
pusha
mov
xchg
adc
shrl
mov
push
popa
sbb
shrb
lahf
sarb
push
cmpsl
or
pop
test
add
inc
rorb
hlt
fsubs
stos
push
push
and
scas
mov
and
mov
out
aaa
inc
inc
shll
cmp
pop
data16
cmp
pusha
andb
dec
add
add
mov
jb
imul
mov
mov
fdivr
repz
xor
out
push
mov
stc
ljmp
push
push
xor
xorl
add
sbb
mov
mov
add
mov
xor
xor
sub
dec
sbb
or
sub
cmpl
jge
addr16
cs
arpl
insb
mov
push
sub
je
jbe
arpl
js
stc
dec
inc
subb
subb
push
fs
testl
adc
into
pop
push
mov
rcrl
aas
sahf
pusha
or
ds
test
and
mov
test
mov
test
fucomi
jbe
orb
or
push
push
push
arpl
jp
lahf
and
mov
push
jge
mov
repnz
iret
xchg
icebp
imul
fidivl
jo
popf
enter
dec
out
stc
ja
inc
lods
imul
push
and
test
test
out
out
call
mov
jnp
int3
cs
and
add
mov
push
enter
in
or
dec
mov
push
ret
cmp
or
pop
mov
in
xchg
aaa
sub
or
orl
and
push
imul
sub
hlt
xchg
hlt
dec
arpl
roll
xchg
jl
or
rcrb
pop
dec
mov
xchg
arpl
pop
shrl
and
adc
inc
mov
and
add
stc
dec
lcall
mov
les
mov
ja
xchg
call
je
inc
jnp
bound
std
mov
repz
or
jl
jmp
ret
jl
add
arpl
lcall
cmp
mov
jns
mov
and
mov
pop
and
push
les
xor
lret
jnp
scas
stos
ret
mov
cli
scas
or
addr16
pop
mov
cmpsb
pop
cmpb
jnp
adcb
dec
sub
add
sbb
mov
pushf
push
test
xchg
mov
repnz
mov
dec
icebp
lods
pop
ficomps
pop
popf
gs
and
cli
fs
fimuls
mov
push
decb
ja
add
lcall
outsb
sbb
or
sbb
mov
lret
xor
gs
scas
andl
jns
icebp
mov
sar
dec
mov
cmpsl
pop
addr16
xor
call
mov
popa
mov
dec
push
in
mov
scas
xor
or
xor
cld
push
inc
pop
push
mov
or
fs
pop
sbb
mov
push
aaa
popf
pop
jns
ja
loop
lock
adc
in
fs
xchg
ja
iret
js
push
or
pop
mov
ja
and
popf
ss
jle
xor
inc
xor
subl
jb
out
xchg
jnp
dec
pop
and
addr16
mov
cmpsl
sub
leave
sbb
xlat
lahf
cmp
movsb
aas
push
sar
mov
test
in
out
pop
push
ret
dec
pop
inc
pusha
sbb
jmp
push
pop
sbb
lock
inc
int
filds
inc
jo
les
movsb
dec
cmp
ret
popf
pop
rcrb
iret
stos
outsl
sbb
jo
and
mov
subb
cmp
dec
xchg
and
jnp
ljmp
push
repnz
aas
xchg
fwait
add
aas
mov
rcll
iret
mov
jns
or
cld
pusha
repnz
jns
cmp
xchg
mov
idivl
icebp
inc
mov
imul
fs
addl
add
icebp
push
and
lock
xchg
mov
cmc
mov
cltd
imul
cltd
outsb
or
enter
xchg
insb
imul
mov
or
mov
out
mov
cli
mov
fs
sub
sub
inc
mov
adc
pop
out
xchg
pop
mov
jb
and
test
xchg
dec
adc
jl
iret
pushf
inc
aaa
xchg
fidivrl
bound
ret
sti
mov
mov
out
test
pusha
jg
cmp
aaa
ficoml
lea
mov
daa
popa
sbb
repnz
ret
cmp
pop
cld
jmp
insb
mov
inc
xchg
push
cmpsl
cmp
fs
imul
adc
sbb
fadd
int
fwait
test
pusha
xchg
lahf
inc
xor
push
cli
aam
stc
cltd
push
cli
in
in
mov
insl
and
popf
sbb
outsb
ret
movsb
sub
popa
lods
add
cwtl
jbe
int3
into
test
cmc
fimuls
ss
fsubs
scas
loopne
aaa
jg
movsl
adc
ret
outsl
rcll
mov
arpl
pop
or
sub
aaa
pop
cmc
inc
xor
inc
fs
outsb
xchg
imul
inc
arpl
mov
sub
movl
jns
pop
cmp
repz
test
xchg
inc
sbb
or
dec
and
pop
inc
stc
inc
push
cmp
daa
sbbb
jecxz
inc
mov
and
jp
roll
dec
sbb
fbld
orb
xchg
pop
cmpsb
push
je
sahf
mov
popf
je
jle
lcall
pop
inc
inc
std
or
into
std
xchg
adc
pop
mov
mov
lods
dec
lods
jo
sbb
into
jnp
in
add
mov
jecxz
or
sbb
js
scas
dec
xchg
aas
fwait
loop
mov
mov
rolb
dec
or
lea
dec
pusha
ds
popf
pop
mov
lcall
outsb
xchg
fistpl
clc
cmp
jecxz
inc
mov
push
push
repnz
adc
inc
push
jle
popf
push
or
lret
outsl
mov
lret
shll
xchg
out
repz
cmp
mov
jb
mov
sub
clc
xchg
mov
jg
push
cltd
out
shrb
inc
pop
cmp
bound
pusha
inc
push
stc
or
adc
push
pusha
inc
leave
stc
add
and
jb
stos
bound
sbb
or
ds
ja
pop
pusha
add
pusha
movsl
mov
mov
fnstenv
xorb
in
ja
sbb
add
test
insb
andl
mov
sbb
inc
flds
lds
popf
inc
mov
mov
scas
das
ret
aaa
dec
inc
aaa
sahf
fidivl
shl
xchg
cltd
loope
pop
cmpsl
test
mov
pop
sbb
xchg
cmpsb
stos
lret
sbb
cmpsl
mov
sub
jae
shlb
lock
lcall
add
cs
test
popa
add
adc
add
sub
mov
adc
pop
pop
popl
lret
add
sbbb
pushf
mov
cs
add
add
push
and
and
inc
or
pop
bound
jle
or
lahf
xacquire
adc
inc
je
mov
outsb
arpl
shrl
ret
popf
fistpll
out
dec
inc
addr16
sub
add
add
lahf
sub
sbb
inc
pop
icebp
popa
add
xor
ja
inc
mov
and
xor
enter
bound
addr16
ja
inc
pop
inc
jle
or
pop
sub
icebp
xchg
mov
cmp
in
cmp
loop
adcl
sbb
pop
pop
cmp
or
cmc
pop
or
outsb
pop
mov
pop
inc
pop
outsb
ficoms
mov
pop
add
or
mov
leave
cmp
mov
cmc
les
and
pop
out
mov
xchg
adc
pop
dec
lcall
leave
sbb
enter
insb
inc
mov
xchg
inc
xchg
mov
fwait
jno
out
xchg
inc
stc
push
xchg
pop
shl
pusha
add
xor
arpl
add
imul
ljmp
add
rcrb
fisubrl
testl
push
stos
fisubrl
pop
or
mov
js
push
lret
mov
test
xor
in
movsl
jns
insb
and
xor
test
mov
pop
pop
movsb
and
cmc
cs
pop
call
inc
mov
loope
inc
faddp
sahf
rcl
shll
or
mov
out
and
test
jae
xchg
pop
xchg
xchg
fdivl
lods
or
add
push
shrl
jo
xchg
mov
or
mov
mov
icebp
push
int
sub
cli
mov
mov
cmp
adc
pushf
iret
add
push
cmp
or
sbb
lea
outsb
xor
cmpsl
negb
shlb
xchg
sbb
mov
adc
sub
xlat
mov
pop
jle
rol
sbb
push
imul
push
adc
mov
test
push
mov
aaa
dec
cmpsl
jnp
xchg
addr16
mov
sbb
mov
add
or
xor
cmc
shl
and
push
std
lock
inc
loope
sbbl
inc
enter
xchg
fdiv
lahf
lods
xchg
push
xor
fidivl
mov
xchg
cmp
imul
js
call
push
push
fdiv
pop
cmp
scas
add
xchg
hlt
out
pop
mov
cs
cld
add
int3
sub
mov
out
mov
bound
pop
jge
outsl
dec
push
mov
stos
or
cmp
inc
jne
mov
pop
sbb
bound
xchg
aas
dec
in
dec
or
sub
nop
mov
andl
push
pop
mov
mov
idivb
popf
testl
mov
push
std
dec
ret
mov
jno
aam
dec
mov
repnz
rcll
add
jge
fmulp
pushf
adc
mov
jnp
lea
repz
nop
lcall
or
mov
adc
std
push
mov
mov
adc
or
cltd
repnz
cld
adc
cmp
out
sbb
inc
cmc
pop
adcb
push
mov
fbstp
and
sahf
repz
shl
mov
rolb
pop
inc
hlt
aas
xchg
ja
xchg
test
sub
in
lahf
jmp
jl
cld
and
push
jns
mov
inc
js
iret
pusha
push
add
push
ds
shlb
aas
inc
dec
sbb
xchg
lods
push
mov
or
pop
xchg
dec
mov
scas
fidivrl
cmp
jb
or
sub
fcompl
pop
pop
ja
jb
push
lcall
mov
inc
rorb
nop
roll
inc
mov
mov
mov
jnp
mov
or
pop
sbb
rcrb
adc
and
xchg
push
mov
jp
ret
xor
mull
and
enter
outsl
mov
inc
jl
mov
js
aam
dec
lar
out
cmpl
push
imul
sub
and
gs
hlt
mov
inc
lahf
add
shr
lret
pop
addr16
sbb
sub
xchg
inc
fs
and
out
enter
dec
sub
add
xchg
cmp
push
je
nop
ljmp
dec
mov
and
and
cmp
mov
cmp
mov
mov
sub
mov
flds
rcr
mov
andl
ret
sbb
xchg
rcrl
iret
fbld
push
sbbb
lods
push
mov
mov
out
cwtl
mov
aam
fbld
out
sub
push
into
sbb
pop
adc
and
mov
loop
stc
cmpsb
adc
lds
pop
dec
push
out
mov
or
js
ljmp
add
stc
repnz
adc
roll
inc
xchg
das
and
cmp
xchg
arpl
popa
aam
loope
std
lcall
nop
mov
add
stc
hlt
xchg
inc
fisubrl
loope
stc
incb
out
jae
adc
scas
dec
pop
lahf
push
dec
aad
jmp
push
push
xor
xor
fdivl
mov
xor
cs
adc
hlt
sahf
jae
push
xor
inc
sbb
jg
cmp
pop
lcall
push
add
add
jecxz
jmp
mov
pop
dec
adc
fldenv
int3
and
sub
add
pusha
mov
cld
popa
and
sarl
iret
sub
pop
inc
imul
inc
add
dec
pushl
das
sub
test
testl
mov
dec
inc
repz
inc
and
lds
adc
inc
cmp
adcl
scas
jne
insb
out
mov
cmp
push
les
mov
pop
sub
add
sub
push
jno
cmp
arpl
pop
inc
lock
cmp
adc
loop
sbb
ljmp
fbstp
inc
mov
inc
rcrb
or
pusha
mov
jp
test
cmp
jbe
insl
sar
sbb
mov
sbb
xchg
mov
testb
mov
sub
sub
addr16
adc
hlt
mov
movsl
int3
jns
cld
pushf
cltd
lahf
cmp
pushl
iret
fildll
faddl
fcomps
lahf
lcall
mov
xchg
adc
aas
pop
test
sbb
into
jg
int3
mov
cmc
insb
rorl
adcb
or
std
inc
jecxz
jl
and
push
andb
push
dec
xchg
mov
and
sbb
in
pop
popf
lea
push
hlt
fsub
jg
add
repnz
test
adc
aas
push
iret
adc
enter
and
jo
jle
inc
or
jo
mov
test
aas
add
scas
jae
add
xor
shl
mov
and
xorl
adc
jp
pop
in
repnz
lock
pusha
cmp
inc
or
push
mov
push
mov
jp
pop
mov
fadd
and
iret
jne
out
fisttps
cmp
repnz
inc
das
loope
and
xor
xchg
daa
add
mov
jge
sub
scas
inc
clc
pop
add
mov
adc
push
xor
bound
ja
cmpsl
roll
ja
sub
scas
imul
call
mov
aas
xchg
jnp
ss
shlb
xchg
scas
jg
loopne
fwait
or
adc
fistpll
ss
mov
stc
movsb
and
inc
mov
popa
mov
sarl
sub
aam
dec
stc
ljmp
pusha
sbb
pushl
cmp
std
inc
mov
mov
jns
push
rolb
mov
enter
and
cmp
mov
sub
pop
cwtl
cmpl
cwtl
call
pop
aam
lods
insl
ret
adcl
push
test
mov
add
stc
mov
int3
mov
pop
xor
in
jecxz
or
setg
inc
or
mov
inc
insl
cmp
pop
jp
dec
repnz
mov
stc
dec
cmp
fs
sbb
sub
lcall
lea
repnz
nop
and
pop
outsb
ljmp
or
cwtl
popf
xor
out
in
roll
pop
cmp
xor
daa
add
and
push
inc
cmc
sbb
addr16
cwtl
emms
pop
or
sahf
pop
dec
and
ret
sbb
jbe
adc
adc
popf
test
mov
xchg
cwtl
scas
les
stc
fsubrl
cmp
xchg
sub
out
and
repnz
sbb
shl
cltd
xchg
imul
jno
imul
push
adc
jl
push
push
push
pusha
sbb
and
sub
cltd
push
out
sub
adc
les
jo
add
fs
iret
aaa
lods
mov
aaa
add
repz
stos
cmpsl
sbb
or
jmp
jle
cli
mov
jp
clc
and
or
addr16
or
js
fnstcw
cmc
inc
pop
push
mov
fs
fmuls
xchg
loope
mov
jo
add
fisubrs
rclb
jl
or
and
mov
jecxz
xor
adc
push
inc
cmc
popa
adc
mov
std
mov
cmpsl
cld
mov
dec
clc
arpl
mov
and
rolb
movsb
dec
loope
pop
aaa
mov
and
push
sbb
sub
xor
jo
lods
jmp
jp
aad
fiaddl
mov
push
mov
and
mov
dec
sbbl
adc
sbb
push
filds
cli
mov
cmp
sub
cmp
mov
jo
cld
loopne
push
orb
imul
pop
push
stos
xchg
outsl
incb
mov
dec
out
or
cmp
xor
sbb
jbe
jge
and
sbb
shlb
jbe
and
pushf
jecxz
xor
fnstenv
xor
push
ret
mov
rcrl
mov
out
ret
fwait
pop
mov
daa
enter
jno
cmp
fisubs
addr16
push
xchg
popa
es
push
pop
fsubs
add
add
cmc
add
in
pop
xorl
jecxz
sahf
out
mov
mov
je
ljmp
jb
cmc
lret
pop
fs
mov
or
addr16
inc
cmp
mov
adc
pop
into
ss
mov
hlt
push
jmp
out
push
in
push
loope
in
mov
ret
inc
pcmpgtb
mov
aas
sub
sbb
push
mov
pop
dec
movsl
ss
fisubl
xor
sub
fs
in
pop
xor
xchg
sahf
cmp
sub
je
cwtl
or
and
push
loopne
dec
lahf
xchg
fwait
sub
lea
decl
sahf
jmp
xchg
loopne
xor
mov
and
loopne
and
xchg
mov
out
sub
cwtl
andl
fucomip
pop
mov
and
pop
aas
cmc
adc
xor
stos
mov
or
test
pushf
xor
jnp
cmp
jge
mov
pop
push
pushf
pop
shl
cmp
in
add
popa
cmp
ffree
or
mov
sbb
jle
mov
lcall
push
inc
sbb
xchg
push
dec
outsl
outsl
sub
cltd
outsl
sub
sahf
lods
xchg
pop
mull
fsubl
push
loope
and
inc
push
ret
mov
xchg
movsb
mov
int
ret
and
rcrb
jg
mov
sub
inc
cmc
dec
sub
push
mov
mov
shl
cmp
push
mulb
pop
iret
xchg
or
xchg
add
inc
ljmp
push
mov
lcall
stos
loop
cli
data16
mov
push
adc
mov
faddl
test
add
add
sahf
lret
out
cmp
jg
mov
jne
stos
pop
bound
push
out
cmpl
call
nop
inc
sbbb
outsl
xchg
xchg
leave
daa
cmp
pop
sahf
cmp
dec
add
push
jnp
mov
pop
cmpsb
mov
adc
mov
pop
mov
xor
and
test
les
pushf
sub
jne
test
mov
cmc
sub
insl
pushf
dec
mov
jp
scas
push
aaa
cmp
das
mov
enter
pop
cmc
in
and
push
aas
dec
sbb
sti
mov
imul
into
subb
xor
jae
mov
std
add
loope
add
lea
mov
mov
lods
push
add
sbb
popf
cltd
push
dec
ret
repz
sti
ljmp
xor
pop
cld
inc
jns
outsl
inc
dec
push
lods
add
dec
popa
cmc
stos
rcll
jmp
xchg
xchg
inc
xchg
rorl
outsl
lahf
nop
inc
pop
xchg
push
addr16
xor
dec
push
mov
mov
jle
xchg
rcr
xchg
mov
jmp
clc
icebp
add
adc
scas
in
pop
fwait
mov
push
dec
arpl
testb
inc
xor
inc
addr16
movsl
sub
xchg
in
enter
sub
xchg
andl
xchg
lea
mov
testl
out
cmc
pop
xor
vmulss
mov
shlb
mov
fucom
jmp
scas
pop
addr16
xor
lods
enter
cli
popf
shrb
xor
out
sub
pop
rcrl
arpl
sbb
push
jae
ja
lcall
sbb
dec
adc
mov
sub
inc
sbb
fiadds
lds
sbb
cs
pop
repnz
clc
insb
pop
xchg
sub
aad
pop
push
xor
xchg
jbe
fstl
push
lahf
frstor
xchg
jl
dec
aad
inc
cmc
inc
add
and
lods
shl
pop
ret
sbb
pop
add
sub
jg
cmpsl
mov
ljmp
mov
daa
repz
push
xchg
mov
sti
jns
xchg
push
cmc
pop
pop
orl
imul
mov
jnp
bound
adc
stos
pop
inc
cs
sbb
push
sarl
xchg
arpl
pop
outsl
adc
cmpsb
ret
jo
loope
imul
cmpsl
mov
mov
xchg
push
jo
call
cmp
xchg
fdivr
jecxz
mov
fstpl
popa
dec
add
loopne
cmc
and
fldcw
inc
lock
jmp
mov
pop
sub
repnz
fldenv
jle
ds
inc
mov
add
jnp
in
xchg
pop
mov
adc
stos
scas
cmpb
fisubl
mov
lock
into
mulb
inc
jmp
dec
mov
mov
pop
inc
push
adc
dec
lahf
xchg
pop
or
popf
xchg
mov
test
mov
dec
inc
stc
movsb
test
jno
andb
and
adc
adc
rcr
aaa
test
fistpl
data16
repnz
loopne
pop
mov
in
imul
into
jg
jmp
mov
xchg
xor
mov
sbb
dec
jmp
loopne
mov
loope
rcr
dec
std
arpl
mov
mov
push
mov
repnz
jp
int
mov
pop
lcall
add
or
jae
adc
popf
cmp
sbb
into
js
mov
adc
test
dec
cmp
dec
xchg
cld
ja
out
sub
lock
mov
aaa
mov
cmp
cs
mov
pop
test
xor
imul
addr16
adcl
sbb
js
lock
rcll
or
pop
or
xchg
jae
pop
push
fistpl
pusha
jno
aaa
bound
lods
inc
sahf
fstpl
mov
inc
rcrl
and
decb
pop
fstps
dec
or
pop
insl
add
jno
mov
insb
mov
inc
and
sub
xor
xor
xor
daa
and
pop
xchg
pop
mov
sbb
xchg
sbb
lds
sti
cmp
mov
or
lea
push
jecxz
call
inc
dec
sbb
pop
pop
or
aaa
sbb
gs
xchg
adcl
cld
faddl
jmp
lods
jne
roll
je,pt
sbb
mov
scas
out
pop
jno
push
ret
fldcw
test
or
scas
test
adc
cli
stos
mov
cmpsl
imull
repnz
nop
mov
jo
cmp
and
mov
call
nop
lcall
loopne,pt
cmp
xchg
subl
xchg
inc
xchg
dec
xchg
addr16
jo
fwait
and
lcall
xchg
test
icebp
sbb
or
lock
addr16
jecxz
cmpb
mull
popa
mov
xlat
add
adc
jl
cmp
dec
push
cmp
xchg
xchg
cmc
rcll
jle
fcmovne
adc
adc
cmp
jp
cmc
scas
mov
inc
xchg
push
int3
pop
test
xchg
clc
push
inc
xor
push
nop
sub
mov
xchg
sbb
cltd
repnz
in
fisubl
lret
xchg
dec
adc
jnp
mov
mov
mov
sbb
aas
pop
and
add
push
test
loop
loop
adc
arpl
push
sbb
shlb
sub
push
lahf
rcrl
push
push
cli
aad
iret
jmp
mov
in
loope
cmpsb
aaa
test
fisubrs
xchg
aad
inc
add
mov
mov
pop
ret
push
xor
popa
jns
out
popf
cmp
push
jge
pop
out
lea
pushf
imull
adc
sti
call
movsl
mov
stos
or
repnz
addr16
adc
jno
cmp
je
or
push
jp
mov
or
mov
inc
inc
arpl
jmp
ds
mov
aaa
shl
sbb
daa
xchg
jo
mov
cmc
in
xchg
shlb
iret
subl
inc
ret
push
in
xchg
mov
mov
test
repz
ja
cmp
push
ja
jnp
cmc
hlt
dec
insb
cmp
jg
xorl
stc
pop
mov
xor
inc
mov
lret
les
insb
xchg
cmc
push
cwtl
jge
or
ja
adc
scas
test
xchg
jecxz
push
xor
in
sbb
imul
xor
addr16
xchg
sbb
mov
cmpsb
jo
mov
mov
sbb
or
scas
push
jecxz
cmp
and
jecxz
push
push
movsl
insl
add
and
or
lahf
mov
add
add
or
ret
sbb
xor
call
xlat
aas
add
xchg
xor
outsb
dec
popa
lcall
mov
je
fmuls
lods
adc
lret
adc
pop
addr16
jecxz
clc
cmpl
inc
mov
sti
loope
fwait
add
add
jmp
loope
pop
lcall
movsl
lea
cmc
cmp
lret
lcall
into
xchg
fiaddl
mov
imul
cmp
sbb
push
add
clc
cmp
iret
adc
lcall
push
add
mov
pop
icebp
mov
loope
sahf
mov
xchg
add
xchg
mov
inc
aam
mov
and
dec
pop
cmpsb
xor
ss
jb
js
das
cmp
fsubrs
addl
stos
adc
pop
dec
jl
pop
sub
stos
popa
push
sub
icebp
lds
jno
daa
mov
mov
mov
ljmp
xchg
push
loope
xor
out
and
inc
test
xor
dec
fildll
sahf
inc
sub
jle
push
cli
scas
dec
pop
or
test
lahf
xlat
jle
dec
pop
clc
cmp
test
nop/reserved
jae
sbb
clc
das
push
sbb
cli
push
repnz
or
stos
or
mov
or
mov
mov
ds
sub
xchg
clc
mov
add
jp
sub
pop
dec
aad
cmpsl
add
push
popf
or
dec
les
fsubp
mov
sti
mov
in
mov
cmpsb
ret
outsl
dec
inc
pusha
repz
sub
inc
mov
cmc
fwait
push
imul
push
mov
jecxz
cmp
xchg
addr16
sti
and
pop
cmpsl
mov
pop
inc
add
lcall
mov
popa
xor
mov
cld
repnz
scas
adc
xlat
add
addr16
sbb
jbe
aam
cmp
test
mov
push
and
mov
and
dec
aaa
jns
add
enter
add
sub
push
sarb
loop
add
push
cld
cmp
jnp
mov
lcall
cld
rcl
lret
sbb
sub
and
roll
mov
adc
pop
xchg
pop
push
test
xchg
push
push
and
fs
xor
push
mov
jl
jecxz
nop
scas
js
xchg
mov
aam
cmp
test
fs
pop
xchg
scas
and
push
subl
inc
rcrb
add
adc
sbb
xchg
scas
xchg
in
in
sub
aaa
pushf
leave
ljmp
incl
loop
icebp
inc
xchg
pop
jecxz
jp
ja
lods
ret
pusha
mov
mov
mov
lods
loopne
or
cmpsb
mov
mov
mov
fs
pusha
rcl
mov
icebp
cmp
pop
negl
sub
sahf
inc
mov
mov
xor
dec
aas
cmpsl
mov
mov
inc
popl
xchg
xchg
jns
and
enter
pushl
pop
dec
xor
ja
ja
pop
push
cmp
lret
add
xchg
outsl
inc
add
dec
movsb
cmp
inc
mov
repnz
cltd
lahf
fwait
or
sbb
lea
and
fsubs
sbb
push
das
mov
outsl
cld
cmpsl
stos
inc
in
sahf
mov
test
fmuls
and
std
cmp
pop
test
jge
jmp
add
mov
fwait
cmp
out
inc
in
fcoms
dec
or
bound
out
cmpsl
notl
roll
repnz
xchg
lret
or
mov
jne
hlt
fsubl
filds
fadd
je
xchg
in
mov
cmp
inc
mov
push
popa
or
scas
jle
pop
std
lahf
push
xchg
lret
mov
push
dec
jb
int3
ret
xor
insl
xchg
cmp
cwtl
orb
push
cmp
ljmp
cmp
push
and
mov
dec
jne
cmp
daa
mov
adc
dec
or
and
mov
icebp
mov
dec
outsl
arpl
cmp
dec
jl
ret
fwait
inc
pusha
jbe
test
pop
cmp
push
mov
icebp
cmp
cld
mov
movsl
dec
mov
or
xor
xor
test
push
rorb
adc
or
push
insb
inc
mov
sbb
add
push
mov
mov
add
sarb
iret
ja
cmp
mov
pop
xlat
jns
push
loope
fwait
sbb
xor
cltd
repnz
mov
sarb
scas
jge
repz
xor
test
xchg
into
inc
icebp
cbtw
sbb
fucomip
fmul
push
aad
mov
fs
lea
test
ret
inc
lret
fstps
divl
inc
iret
and
and
adcb
sub
out
testb
pop
xchg
gs
adc
ficompl
sbbb
xchg
cmp
lock
add
mov
cmp
xchg
adc
or
mov
arpl
inc
or
aaa
lahf
popl
xor
scas
in
jp
mov
loop
jns
popa
cmp
mov
rorb
test
dec
adc
fdivrp
gs
rol
inc
mov
insl
xchg
subb
sbb
ja
pop
jmp
mov
adc
cmpsl
addr16
stc
inc
jne
shrl
jae
test
repnz
cmp
xor
movsl
iret
or
cmp
mov
aaa
imul
aad
jae
ja
dec
sub
and
jle
inc
cmpsl
dec
sbb
mov
jo
sbb
sub
mov
in
pop
push
add
and
pop
sti
cwtl
adc
add
sub
push
std
adc
bound
test
std
pusha
jo
cltd
leave
jl
ds
andb
sub
jecxz
inc
addl
ficompl
aam
fs
cmc
and
adc
add
push
das
mov
and
jno
mov
cmc
inc
adc
xorl
rclb
xor
cmpsb
xchg
pop
pop
jmp
and
pop
loope
push
sbb
shrl
inc
pop
pause
or
jo
adc
inc
fsubl
pushf
mov
add
adc
pop
notl
jmp
pop
sbb
push
cmp
pop
test
inc
inc
addr16
mov
xchg
add
scas
cmova
bound
pop
mov
or
mov
iret
jp
enter
cld
cmp
shlb
lds
xchg
xlat
cli
mov
arpl
lea
test
sbb
sbb
xchg
jns
mov
mov
test
popf
adc
stc
add
cwtl
add
xor
cmp
das
loop
mov
das
add
lods
outsb
pop
add
icebp
sub
cmpl
add
pop
sub
jno
mov
lahf
imul
aaa
mov
cmp
lret
xchg
dec
test
popa
or
fisubs
inc
mov
in
subl
int3
dec
push
arpl
ret
jecxz
mov
mov
aaa
daa
and
add
adc
dec
pop
cwtl
jge
roll
push
cmpsb
xorb
add
pop
cmpsb
movsb
incb
inc
sub
push
jmp
push
inc
add
cltd
pop
in
xor
ficoms
outsb
xchg
ficomps
test
mull
enter
fs
sbb
ja
mov
and
pop
out
jns
sub
jle
push
or
add
fdivl
imul
inc
pop
cmp
rorl
in
outsl
xchg
mov
push
cmpsb
repnz
imul
pop
out
jb
arpl
pusha
pop
cwtl
cmc
mov
jb
imul
jle
sbb
cmp
subb
push
xchg
js
pop
inc
es
mov
pop
mov
bswap
mov
cmp
shlb
sbb
push
inc
lock
mov
aaa
popl
cmp
and
test
ficoml
pop
or
lods
add
call
and
addr16
mov
xchg
loope
enter
cmp
sbb
inc
sbbb
addb
testl
fs
push
addr16
imul
jb
cmp
mov
js
add
dec
rcrb
cmp
jns
xor
sbb
loope
jo
xchg
pusha
imul
loope
push
popf
fadds
and
add
cmp
addb
mov
add
dec
aaa
jg
out
divl
fsub
cmp
adc
jp
repnz
adc
or
lahf
mov
sub
mov
in
mov
ret
in
pop
mov
xchg
pop
fsubrs
insb
and
ljmp
repz
pop
inc
mov
xlat
lea
call
andb
jb
sahf
mov
mov
jge
or
shll
daa
enter
clc
xchg
lahf
aaa
add
mov
scas
xor
pushl
lock
imul
lret
push
pop
or
inc
pop
sbbb
and
jecxz
xor
rolb
jl
das
fwait
es
jecxz
adcl
and
movsb
mov
mov
rorl
dec
add
or
out
cmpsl
and
sub
sahf
and
ja
inc
ja
out
mov
jg
call
inc
fbld
mov
xchg
clc
xchg
int
inc
negl
stos
shrb
push
mov
pop
outsb
cmc
enter
ret
popa
loopne
dec
inc
sub
es
xchg
pop
ror
ret
add
or
adcb
jae
cmp
imul
dec
or
call
ja
xchg
jbe
mov
lcall
es
mov
cmp
into
cmp
jp
out
mov
movsb
xchg
jg
dec
clc
dec
push
jmp
pushf
ficoml
push
adcb
xchg
xlat
mov
ja
mov
or
sbb
or
push
insb
add
sbb
insl
inc
addl
cld
add
add
cltd
pop
add
sub
jecxz
mov
jle
rolb
scas
rcrl
subb
gs
lds
hlt
nop
rol
push
mov
sbb
cli
mov
outsl
mov
ja
mov
jb
loope
fsubrs
outsl
and
dec
adc
scas
add
mov
xchg
pop
in
or
and
inc
repz
imull
push
pop
inc
add
inc
daa
out
addb
adc
stc
adc
inc
and
pop
mov
xchg
jmp
jb
rcll
dec
icebp
fiadds
pop
cmpsb
and
cmp
cltd
orb
xor
jae
inc
dec
xchg
xchg
jmp
arpl
adc
xchg
adc
add
xchg
subb
pop
sbb
add
lahf
leave
jb
and
inc
mov
adc
mov
inc
pop
mov
mov
fdivrl
shlb
mov
push
or
add
das
inc
xchg
sub
jbe
mov
sbb
out
push
mov
and
sub
lahf
adc
push
xor
push
add
xchg
loopne
iret
mov
cmpsb
arpl
xor
mov
sbbl
ja
cmp
push
lods
sbb
add
add
fimuls
sub
jg
add
dec
rcrb
cmp
dec
add
sarl
sub
add
add
xor
inc
inc
subb
testb
daa
outsl
fdiv
fs
test
jmp
pusha
cmp
outsl
aaa
xchg
or
inc
nop
push
xchg
ja
xchg
rolb
arpl
cmp
imul
and
mov
fwait
push
mov
loopne
mov
inc
repz
mov
cmp
pop
enter
fdivr
ds
adc
das
xchg
popl
jp
imul
inc
mov
stc
pop
bound
xor
aas
xor
clc
adc
cmpsl
mov
orl
dec
mov
mov
out
gs
repz
push
adc
fcomps
push
xchg
pop
dec
arpl
push
xchg
mov
sub
stc
sbb
pop
andl
xchg
cmp
cmp
flds
ja
popa
mov
pop
inc
cs
jecxz
cld
fmull
fisubrs
inc
cmp
dec
sbb
imul
mov
nopl
mov
mov
pop
xchg
orb
mov
cwtl
test
adc
loope
lods
les
mov
jne
movsl
xchg
ss
xorl
xchg
sub
roll
fs
sub
mov
aaa
or
mov
and
hlt
lock
sbb
jns
jno
cmp
imul
jge
mov
push
push
rolb
dec
test
fsubrs
ljmp
jbe
inc
adc
mov
pop
mov
sub
stc
aaa
mov
add
cmp
dec
sbb
xchg
in
pop
add
insl
sbb
mov
fs
inc
mov
fisubl
dec
popf
cmp
dec
inc
aaa
setge
sbb
cmp
lcall
fcmovu
in
rclb
les
enter
xorb
inc
mov
dec
jbe
bound
mov
cmpl
add
mov
push
mov
sarl
lds
stc
jnp
sbb
sbb
inc
inc
pop
or
aas
js
stos
out
xchg
xchg
or
push
insb
icebp
mov
js
ss
das
add
clc
pop
lock
ret
push
rcrl
repnz
sub
and
mov
push
daa
ja
xchg
push
addr16
and
or
xor
jle
sub
mov
or
repz
sub
scas
mov
add
jle
test
pop
test
insb
mov
repnz
fidivs
mov
enter
inc
enter
cmp
scas
pop
push
cmc
pop
sub
cmp
insb
xchg
cltd
js
roll
out
inc
sub
adc
sbb
pop
cmp
hlt
and
sub
push
ja
mov
lock
mov
cmc
les
and
dec
push
cmp
cs
rol
push
sti
and
jp
inc
lahf
orl
clc
push
inc
roll
or
add
dec
push
js
push
xlat
rcl
add
adc
loop
xchg
jbe
pop
push
shr
call
push
mov
icebp
imul
inc
and
divl
add
out
cmp
cwtl
fs
sti
sbb
lret
push
pusha
xor
pop
sahf
add
jle
outsl
push
sarb
ja
movsb
shrb
add
fbstp
jb
out
push
pushf
stc
mov
push
push
or
ds
bswap
dec
test
aaa
dec
sbb
mov
sub
inc
sub
jl
mov
lret
push
inc
test
mov
push
or
pop
rcrb
ja
addr16
loopne
out
pop
incl
xor
js
loope
xor
repnz
in
jbe
xchg
fisubrl
and
pop
fadds
aad
sub
sbbl
sbb
inc
sahf
mov
rcll
jmp
and
push
mov
filds
inc
das
mov
pop
jnp
movsl
clc
jnp
cmpsl
jb
sbb
int
pop
in
ds
jge
inc
imul
fadd
cmp
jp
or
inc
cmc
data16
add
imul
push
push
andl
push
shlb
bound
push
cmp
sbb
sti
loopne
and
imul
repnz
adc
mov
imul
cmpb
xor
es
imul
xor
cmp
idivb
cmp
dec
mulb
cmp
sbb
adc
mov
push
call
lods
fiaddl
cmp
testl
data16
cmpb
xchg
daa
mov
in
call
add
lret
fs
sbb
and
fcompl
push
and
and
jl
cmp
notb
jae
pop
xchg
je
mov
xchg
add
iret
call
xchg
test
fnstenv
push
cmp
outsb
sub
dec
in
sti
cmpsl
push
jge
insb
out
sbb
mov
popf
mov
add
push
mov
adc
inc
mov
xorl
shrl
mov
and
xor
add
or
rcrl
sub
test
out
adc
stos
push
fistpll
sub
add
lds
ja
add
mov
or
xchg
gs
push
cwtl
dec
push
jb
movsl
sbb
xchg
loope
pop
xor
pop
push
pop
inc
cltd
pop
and
cmp
pop
bound
insb
jno
lahf
imul
insl
pusha
pop
and
xchg
scas
fisubrl
je
inc
mov
mov
push
hlt
leave
cmp
imul
add
sub
cmc
cmp
outsb
enter
std
mov
lahf
adc
mov
cltd
mov
sahf
sbb
inc
push
rorb
cs
inc
adc
lock
ljmp
jno
inc
xchg
xlat
cvtdq2ps
mov
mov
adc
xor
pop
inc
loope
lcall
push
popa
jo
pop
jo
daa
mov
xor
in
jle
and
xor
sbbl
imul
xchg
loope
sbb
pop
xchg
cld
loope
imul
pop
imul
jl
add
lret
lahf
and
dec
hlt
lret
mov
clc
bound
jg
xchg
cmovg
push
hlt
sbbb
iret
mov
add
dec
sbb
loopne
sbb
pushf
add
jl
lahf
xchg
lahf
sbb
mov
mov
dec
iret
pusha
mov
push
add
or
fcmove
mov
mov
and
insl
aas
sbb
jns
repnz
mov
fnstcw
lahf
out
test
pushl
cmpsl
lret
sub
fs
xchg
pop
orb
aas
in
jae
add
ret
decb
sbb
arpl
popf
sub
jecxz
adc
cli
mov
cld
jbe
imul
cwtl
inc
aaa
test
sub
data16
or
add
jl
movb
pop
cbtw
cmpsl
inc
cwtl
lahf
es
inc
push
add
lahf
cltd
jb
sbbb
adc
aam
rdpmc
jg
stos
jb
andb
ret
lcall
mov
push
ret
add
push
loope
inc
sub
jb
dec
test
subb
je
lds
pop
add
test
je
push
fbld
inc
pop
mov
xchg
sahf
mov
add
in
adc
fucom
mov
push
xchg
cltd
pop
sub
pop
push
inc
fwait
xchg
div
jle
adc
arpl
cmp
add
unpcklps
dec
cmc
adc
js
lea
nop
inc
jle
pop
into
xchg
cmp
mov
data16
cmp
pop
movl
mov
mov
sahf
push
out
xchg
insb
outsl
ret
scas
adcb
in
jmp
lea
mov
movsb
fnstcw
mov
jmp
cs
sarl
cwtl
sub
push
mov
push
sub
faddl
mov
aam
push
cmp
dec
daa
inc
xor
and
xchg
dec
fisttpll
mov
mov
adc
and
mov
inc
add
aas
out
loop
mov
aaa
imul
pushf
push
jo
test
dec
mov
filds
cmpsl
sub
mov
aas
sbb
xor
mov
imul
xlat
jns
adc
fistl
lcall
je
pop
icebp
and
pop
lahf
inc
ja
sbb
shll
inc
subb
ja
add
pop
and
test
xchg
decb
fisttpl
fildl
sahf
push
push
repz
mov
fwait
inc
sbb
xchg
shlb
xchg
roll
mov
xchg
xlat
and
mov
jnp
cmp
or
sub
mov
xor
or
scas
cs
xchg
addl
add
repnz
shrb
in
or
jnp
shr
push
mov
dec
subb
sbbl
and
fisubrl
cmp
bnd
pop
fs
or
xor
scas
shll
or
sbb
inc
shll
xchg
xlat
pusha
xchg
inc
xchg
dec
cmp
or
cmpb
and
adc
sub
push
add
push
and
cmp
or
mov
xor
pusha
fiaddl
sar
pop
fiadds
mov
popa
fcoms
lods
in
or
xchg
xor
xchg
add
mov
jb
mov
pop
hlt
push
in
xchg
sbb
std
add
cwtl
je
and
xchg
inc
loope
jno
jmp
mov
mov
inc
xor
pusha
sahf
sub
aas
pop
xor
pop
xchg
push
loope
mull
aas
arpl
dec
fwait
mov
pusha
sbb
dec
repz
xchg
lea
cmp
ds
inc
sbb
and
xchg
xchg
aad
stos
dec
pop
in
xor
dec
inc
pop
mov
insl
in
jp
je
mov
dec
or
xchg
or
mov
jge
or
sbb
clc
clc
leave
and
cs
outsb
or
scas
push
mov
shrl
xchg
mov
int3
xchg
or
lds
cmpsl
pop
movsl
cwtl
mov
pushf
popf
sub
push
mov
mov
aas
jp,pn
jl
stc
rcrb
aas
iret
gs
sub
movsb
or
cmpb
xor
pushf
sub
jb
pop
or
testl
cmc
sub
bnd
jae
notl
out
pop
push
test
adc
push
repz
dec
pop
shlb
test
dec
mov
aaa
into
pop
test
mov
jno
adc
sti
enter
das
pop
xor
repnz
repnz
mov
or
xchg
ja
xchg
sub
std
cs
popa
sub
xor
cmp
incb
xlat
xchg
mov
sub
fimuls
rcrb
push
inc
mov
add
pop
pop
rol
and
jae
pop
add
mov
cmp
pop
mov
sub
sti
addl
xchg
inc
inc
shl
mov
sahf
sbb
lahf
sub
jg
add
lret
sub
out
std
setp
jnp
pop
aas
lods
sbb
xchg
cwtl
insb
pop
xlat
sbb
movsl
mov
fdivs
add
data16
loop
sub
andl
cmp
or
ficoml
mov
add
std
and
test
fwait
pop
in
jno
outsl
loopne
mov
add
out
xchg
pusha
fyl2xp1
jl
insb
push
sbb
cmc
cld
mov
out
fwait
or
xor
pop
fisttpll
imul
mov
popa
arpl
sbb
repz
hlt
stc
xchg
sub
xor
cmpsl
scas
mov
daa
xchg
idivb
andl
or
inc
ss
sub
ja
sub
pop
xor
add
popf
pusha
and
mov
fmul
jg
arpl
lods
add
xchg
das
mov
mov
je
mov
inc
sbb
xor
pop
js
push
dec
inc
stos
rorb
popf
push
jg
int3
cmp
jmp
jge
sbb
xor
les
sbb
js
ret
cmpsb
clc
lret
dec
fwait
cmp
andb
popf
dec
addl
mov
push
nop
xchg
lcall
js
jns
xchg
pop
fwait
cwtl
sbb
movsb
cmpsb
icebp
inc
sbb
xor
inc
fwait
decl
hlt
push
hlt
sub
pop
inc
sbb
pop
cmp
popa
pop
or
sbb
add
push
pop
pop
fisubl
jnp
test
sub
out
test
jno
push
xchg
mov
arpl
and
sub
cmp
test
sub
mov
ret
bound
dec
jg
shlb
rolb
xlat
lahf
mov
cmp
push
pop
xchg
fwait
loopne
addr16
lea
xchg
or
loope
rcr
hlt
inc
add
sti
and
jmp
inc
bound
shlb
in
push
xchg
and
pop
cmpsb
xchg
dec
frstor
mov
mov
dec
or
add
or
mov
mov
rorl
test
popa
mov
push
les
ret
push
sti
add
xor
xor
std
loope
jecxz
mov
cmp
inc
xlat
ds
icebp
jo
and
inc
mov
fstl
loope
mov
testl
pop
cmpsl
arpl
jl
insl
mov
insb
in
inc
push
loopne
pop
xchg
pop
jmp
fsub
dec
pop
jne
mov
xchg
mov
sti
pop
jb
addb
out
or
loop
into
pop
sub
fmuls
sub
test
pop
or
adc
jmp
out
in
dec
shll
push
xchg
imull
jno
mov
sbb
inc
test
mov
cmpsl
cmp
and
push
sti
pop
sbb
bound
mov
popf
sbb
ja
rol
das
sbb
scas
mov
mov
loope
push
ljmp
inc
adcb
xor
pop
cld
cmc
push
sub
dec
ja
loope
cmp
mov
call
loop
inc
gs
jp
push
push
mov
adc
data16
mov
mov
rcrl
jnp
cltd
in
fisubl
mov
outsl
roll
out
imul
iret
push
pop
addl
lods
lcall
jno
xlat
insb
sub
and
shll
and
stc
mov
ficompl
pop
mov
test
fcompl
enter
push
mov
push
rorb
cmpsb
cld
jo
loopne
sub
iret
addr16
sbb
imul
pop
pusha
stc
jmp
in
push
inc
sub
and
ficompl
mov
ror
les
mov
ljmp
orb
dec
setnp
mov
mov
pushf
and
lahf
in
fnstenv
pop
xchg
xchg
idiv
jg
jmp
and
addb
cld
sbb
mov
sbb
loope
mov
sbb
add
fcoms
out
fwait
xchg
pop
cwtl
js
inc
inc
lock
jmp
xchg
cmpsl
mov
pushf
leave
lock
aam
out
mov
cltd
and
in
xor
and
xchg
jns
xchg
popl
mov
test
push
mov
test
mov
or
fsubrp
lock
mov
cmp
rorb
adc
and
dec
inc
out
add
or
and
pop
loopne
sbb
or
cmc
std
xchg
cmpsl
stc
pop
mov
imul
lahf
push
jns
sbb
stc
insl
xor
faddp
enter
mov
into
daa
xchg
es
and
push
popa
xchg
loopne
rcrl
loop
inc
xchg
adc
dec
in
lds
shll
clc
push
mov
cmp
jl
push
add
adc
inc
cli
xchg
push
pusha
fimull
push
xchg
or
in
bound
and
scas
push
loopne
mov
jg
mov
pop
push
bnd
rcrb
lret
cmp
cmpsl
lahf
xor
out
dec
push
push
add
jge
loope
test
add
test
mov
xor
mov
jp
insb
out
test
incl
mov
sahf
mov
add
mov
push
lcall
jne
jmp
out
xlat
in
add
sti
dec
pop
xor
mov
gs
jno
add
aas
mov
imul
mov
lea
or
jg
fwait
sub
mov
popa
cmpsl
ret
mov
inc
mov
jmp
aas
inc
mov
inc
inc
xchg
jecxz
js
inc
stc
add
lahf
aaa
jb
inc
sub
pop
cmpsb
xchg
cmpsl
loop
mov
mov
repnz
lahf
push
jno
je
jno
push
je
dec
addr16
es
shlb
dec
bound
pusha
inc
pushf
subb
aad
push
mov
jl
lahf
inc
inc
fistps
xor
leave
mov
jbe
pop
adcl
or
inc
aas
push
inc
mov
mov
or
test
jae
stc
es
sbb
jmp
and
sub
outsl
les
ret
dec
dec
jnp,pt
les
jle
dec
movsb
fdivrl
bound
je
xchg
pop
mov
rcll
cwtl
xchg
out
lahf
pusha
lret
inc
movsb
push
mov
mov
rclb
or
adc
orb
or
cli
push
pop
sub
in
cmpsl
ret
lahf
mov
and
in
dec
mov
jb
inc
mov
out
dec
ja
bound
orb
ficomps
imul
mov
fldt
lcall
scas
mov
loope
dec
sbb
and
cli
pop
xchg
xchg
inc
push
jg
jb
loopne
inc
add
add
xor
xchg
addb
stc
icebp
aas
inc
push
sbb
sub
imul
daa
inc
mov
mov
mov
aas
jae
test
cld
add
test
cmc
xchg
outsl
jo
pop
movsb
andb
iret
push
testl
push
dec
out
jecxz
cmpsl
push
daa
sub
repz
add
cmpsb
mull
call
flds
pop
or
cltd
dec
outsb
add
adc
andb
mov
std
imul
ret
clc
dec
mov
jecxz
mov
push
mov
add
ja
inc
loope
inc
loope
aas
shr
icebp
aaa
fcmove
dec
adc
jle
pop
negl
movsl
jo
inc
ficoms
icebp
jns
xchg
and
outsb
add
andb
push
movsb
mull
sub
and
gs
sbb
sbb
inc
fdivrl
jns
add
pusha
add
int
test
mov
mov
mov
stos
and
push
iret
notl
aas
loop
in
inc
or
mov
flds
dec
lret
push
and
cmc
lret
mov
push
test
cmpsb
pusha
xchg
fs
jl
adc
xorb
out
xor
mov
sbbl
inc
bound
pop
pushf
inc
and
mov
test
sbb
into
rol
xchg
test
add
cmp
push
call
add
and
dec
adc
pop
mov
and
aas
lods
or
adc
stc
add
enter
pop
sti
inc
xchg
mov
sbb
push
dec
mov
add
arpl
mov
mov
out
insb
mov
add
decl
inc
push
mov
loope
scas
pop
shll
xchg
aaa
hlt
iret
in
mov
xchg
push
xor
add
ret
jl
mov
roll
cmpsl
nop
clc
xorb
push
xchg
pop
inc
sahf
pusha
xchg
push
notl
sarl
push
rorl
cld
xchg
mov
adc
jg
insb
inc
cmc
shr
lea
pop
fcompl
mov
pop
mov
sub
add
and
inc
int3
add
sbb
out
lahf
loop
jg
and
jnp
push
icebp
sbb
sub
mov
out
and
cmpsl
loop
daa
movsl
shl
add
mov
cmp
rorb
or
mov
jecxz
test
pop
mov
pop
or
inc
mov
pop
xchg
or
adc
mov
sbb
pop
mov
lea
fs
xchg
sbb
sbb
enter
enter
push
xlat
cmpsl
loopne
adc
addb
insl
out
mov
xchg
inc
addr16
sub
or
push
sbb
addr16
scas
call
sbb
enter
xlat
cmpsl
sti
pop
and
mov
out
movsb
jp
sub
test
mov
or
pop
xchg
test
data16
sbb
test
in
inc
les
push
outsl
test
cmpsb
and
sbb
pusha
mov
jecxz
xchg
cmp
rorl
add
xchg
adc
sbb
bound
xchg
leave
cld
loopne
gs
mov
inc
inc
fcmovnbe
inc
jp
hlt
ja
mov
repz
or
sub
xor
mov
scas
push
inc
sub
xchg
cmc
jecxz
cmp
and
xchg
shlb
push
cli
cmp
dec
inc
lcall
mov
repz
mov
inc
mov
sahf
push
cmpsl
sbb
jge
fstp
outsb
xchg
jns
and
mov
cmp
mov
mov
cld
bound
gs
in
gs
add
jmp
cltd
cmp
pop
push
aaa
mov
dec
imul
pop
sub
aad
fsubs
out
pusha
sysexit
cmc
mov
pop
lea
pop
add
sarl
and
lods
mull
in
sahf
addr16
pop
sub
mov
lods
jne
insl
rcr
insb
xchg
xor
cltd
pop
cmp
fwait
lret
nop
sbbb
ss
xor
outsb
xchg
cmp
push
jg
mov
xchg
sub
test
insl
add
adc
cwtl
lock
mov
and
mov
clc
sbbl
ja
add
cltd
cltd
push
push
sbb
mov
xchg
test
loope
repz
jecxz
ja
fcoms
arpl
call
daa
add
pop
insb
insb
data16
pop
adc
mov
pop
pop
and
jae
pop
push
ja,pn
jns
push
fcoml
in
dec
fs
and
mov
roll
add
jg
sbb
lods
mov
mov
jns,pt
mov
fsub
ret
dec
imul
loop
rcrl
cmc
es
ljmp
mov
mov
mov
sub
mov
or
sub
dec
daa
sbb
dec
fwait
mov
push
sub
mov
dec
fmuls
sub
jnp
or
push
add
sbb
sti
and
cmc
lret
push
push
xchg
pushf
pop
dec
into
mov
pop
xchg
cltd
andb
insb
xchg
test
add
pusha
adc
stos
out
fwait
push
roll
or
sub
mov
ret
dec
test
pop
jp
adc
mov
inc
dec
cmpsb
cltd
mov
stos
push
cmp
andl
inc
or
enter
dec
cmp
pusha
rcll
pop
hlt
sbb
mov
dec
cltd
dec
mov
xchg
xorl
fisttpl
out
push
aaa
dec
mov
dec
and
pop
clc
dec
inc
jp
jg
push
adc
inc
pop
add
shrb
inc
mov
mov
push
mov
mov
inc
and
rclb
js
iret
cltd
shll
fidivs
dec
shlb
leave
ds
test
stos
or
lcall
and
jae
pop
dec
push
push
dec
in
ja
cmc
sub
xchg
bound
mov
xlat
cwtl
aaa
xor
xchg
dec
mov
test
outsl
mov
iret
fisubrs
movsl
and
mov
cmp
in
cmp
roll
push
mov
leave
test
notb
jg
mov
enter
int
jmp
xor
cld
and
inc
xchg
lods
mov
dec
sbb
lcall
sbb
data16
lahf
mov
mov
std
repnz
and
pop
mov
enter
xchg
aad
lcall
push
repnz
sbb
jmp
lds
add
add
sbb
js
push
dec
jmp
push
and
sbbb
shl
push
test
dec
bound
mov
sbb
adc
orb
lret
pushf
sbb
pop
and
mov
iret
int3
cmp
aad
lods
andl
sbb
aaa
or
sbb
add
xchg
push
cmp
aaa
out
leave
mov
addr16
lahf
popf
jno
xchg
loope
insl
push
sahf
fcoml
push
mov
out
xor
imul
aas
jecxz
bound
push
fimull
sub
cmp
sbb
xchg
cmp
inc
sub
xchg
dec
xor
xor
movsb
icebp
or
jmp
std
or
push
push
jne
call
sbb
lods
ljmpw
cld
and
mov
and
fcomip
ljmp
mov
xchg
scas
insb
gs
sahf
in
sub
data16
mov
sub
push
xor
rolb
bound
sbb
andb
stc
daa
dec
fwait
dec
popa
imull
cwtl
adc
pop
pop
sub
iret
adc
inc
mov
xor
inc
adc
repz
mov
gs
xor
pop
sbb
jbe
xor
push
jae
loope
inc
pop
pop
adc
lds
insb
fsts
inc
add
inc
inc
daa
xor
jae
pop
fcoml
test
icebp
gs
sahf
dec
js
jns
dec
cmp
outsl
imul
dec
mov
add
adc
jno
lods
subl
stc
inc
adc
addl
sbb
fdivrs
sarl
data16
in
imul
lret
test
dec
or
lods
mov
adc
mov
sub
imul
and
shll
out
stos
and
call
pop
lods
mov
shlb
es
or
pop
xchg
cmp
xor
cli
mov
add
cmpsb
mov
xchg
xchg
pop
dec
push
push
cmp
cmp
mov
mov
push
xchg
adc
shll
push
imul
push
fistpll
std
jns
scas
leave
or
cli
push
cld
stos
pop
or
pop
jns
xchg
aad
sbb
orb
fcompl
pop
mov
adc
add
fld1
or
loope
jge
sbb
mov
jp
bound
cmpsl
mov
rorb
and
ss
outsb
cmp
aas
rcll
xchg
or
and
cmc
icebp
xchg
add
enter
gs
loop
sbb
sub
out
test
mov
cmp
sub
jecxz
cmpsb
mov
aaa
adc
cmp
sub
sti
add
stos
xor
fdivrl
divb
lahf
int
clc
xorb
mov
pusha
sub
lods
and
push
adc
pop
cmpsb
adc
add
mov
pop
cmc
cmpsl
push
inc
outsl
fadds
testb
pop
cwtl
cld
push
or
mov
aad
xor
inc
aaa
cmpb
xor
movsl
mov
sub
jmp
inc
jmp
dec
stos
mov
faddl
out
dec
sbb
mov
arpl
daa
testb
jecxz
mov
mov
push
ds
pop
sti
mov
add
mov
mov
lock
dec
sbbb
mov
mov
jmp
cmpsl
stc
aaa
imul
inc
repnz
shl
and
or
and
fs
repnz
rorl
ss
daa
cmp
mov
cmpl
insb
jl
mov
ja
mov
cmp
inc
movsl
clc
sahf
pop
jae
icebp
dec
flds
add
push
std
push
andb
imul
movsl
sahf
popf
nop
pop
push
fs
push
ret
out
cmp
add
cmpsl
inc
out
push
addr16
sahf
jbe
ja
adc
leave
adc
cmc
popf
push
stc
ljmp
inc
stc
mov
inc
cmp
inc
inc
inc
xchg
jo
rorb
fcomi
xor
lret
sbb
mov
scas
mov
lods
sar
stos
xlat
fmuls
inc
sub
xchg
pop
decb
rorb
or
fildl
addr16
leave
imul
mov
fcompl
and
push
ja
scas
mov
fmulp
jge
rcrl
pop
aas
jp
loopne
test
roll
out
or
inc
test
mov
fadds
cld
or
adc
mov
xchg
lods
mov
pushf
in
pop
ja
cmpsl
stc
jbe
adc
stos
dec
mov
sub
stc
jb
jno
fwait
enter
jmp
mov
jl
pop
jbe
rcll
jns
and
push
fcoml
test
jb
xchg
cmp
add
jns
jmp
or
rcr
addb
fstl
mov
loopne
pop
pop
jle
add
out
sbb
pop
jp
push
dec
mov
mov
movsb
inc
mov
nop
in
scas
push
mov
in
mov
mov
loope
pop
and
sbb
decl
test
pushf
jns
dec
push
push
adc
pop
mov
cmp
sbb
lcall
xor
pop
cmc
pop
stc
loope
cli
mov
push
imul
js
adc
adc
jb
inc
push
dec
mov
xorl
xchg
sub
inc
sub
jnp
or
inc
lcall
lret
or
pusha
cmp
das
pop
addl
cmp
mov
outsl
dec
outsl
call
fcompl
mov
push
ss
cmc
xor
movsl
sbb
push
lret
lea
sbbl
fcomp
aas
orb
cmp
test
pop
xor
jl
hlt
cld
and
leave
cmc
mov
dec
call
ret
fisttpl
jp
imul
xchg
push
inc
fbld
adc
stos
jno
divb
outsb
imul
jecxz,pt
test
or
or
subl
adcl
sbb
inc
push
and
mov
push
mov
popl
pop
clc
bound
inc
rol
mov
mov
faddl
fwait
sub
pop
inc
jmp
pop
pusha
xchg
cltd
add
or
and
jno
and
ficoml
les
jno
shr
cmp
xchg
fs
jne
loope
movsl
or
stos
in
or
push
adc
xchg
mov
dec
or
test
fnstenv
xor
fstpt
sub
fisttpll
mov
insb
sti
stc
fs
mov
into
xchg
frstor
stos
jp
jnp
testl
lea
jnp
pop
dec
mov
cltd
or
add
adc
lcall
mov
sub
adc
push
or
movsl
ret
inc
xchg
and
cmc
pop
mov
push
scas
or
das
das
outsl
sbb
and
and
jmp
push
push
mov
push
movsl
sub
xor
xor
fldz
xchg
cmp
shlb
mov
inc
ficoml
addr16
loopne
dec
mov
pop
push
adc
push
bound
ret
repz
sub
and
sbb
sub
pop
cmp
and
sub
mov
stc
mov
dec
xorl
or
cmpsl
adc
in
cmp
add
inc
imul
push
lret
sub
cwtl
xchg
xchg
in
scas
fmull
dec
pop
aam
stc
push
fstpt
roll
xchg
sbb
inc
inc
sbb
cmp
xchg
dec
mov
xor
outsl
sbb
popf
sbb
mov
cli
xchg
mov
lahf
xchg
test
mov
out
cmp
dec
nop
clc
push
or
mov
sbb
mov
cs
loop
bound
xchg
fildl
inc
jp
mov
test
lahf
ja
jb
daa
mov
scas
data16
sbb
xlat
jo
cmpsb
dec
mov
push
sarl
pop
in
popf
call
in
repz
adcb
lahf
add
dec
mov
sbb
pop
filds
movsl
pop
adc
bnd
test
pop
inc
andb
mov
xchg
xchg
mov
dec
vshufps
add
stc
jns
mov
cmp
mov
cmc
rorl
pop
pop
inc
negl
push
mov
je
jge
cs
mov
jl
fidivl
push
mov
pushf
and
dec
xchg
add
jns
mov
xchg
jns
fsubrl
test
pop
aas
jg
push
mov
insl
inc
aam
or
pop
cmpl
inc
cmp
fsubrl
and
call
pop
jae
adc
or
shlb
xchg
pop
push
sub
das
cmp
mov
sahf
fildll
jl
jno
jle
dec
sarl
push
addb
dec
test
jnp
mov
cmp
roll
lods
scas
pop
into
dec
test
dec
int
add
add
gs
addr16
push
adc
or
cmp
xlat
xchg
push
pop
and
jg
loopne
sub
arpl
shll
loope
jge
dec
rorl
mov
mov
sbb
inc
mov
sbb
push
cltd
adc
pop
and
inc
mov
xchg
push
mov
mov
pop
sbb
add
imul
pop
mov
sbb
push
and
mov
mov
xchg
test
cmp
lcall
insl
fsubp
mov
ljmp
aaa
call
insl
pop
aas
xchg
outsb
pop
test
test
inc
add
movsl
addr16
adc
shrl
lods
xchg
aam
bound
aaa
cmp
out
popa
inc
dec
adc
add
mov
ffreep
divl
push
rclb
rclb
imul
and
xchg
hlt
aad
adc
or
add
addl
sub
xchg
add
or
push
out
or
cmpsl
jb
outsl
call
testl
push
pushf
mov
jnp
inc
call
mov
xchg
xchg
icebp
inc
or
adc
test
inc
clc
movsb
mov
pop
lock
mov
arpl
xlat
pop
inc
jb
jnp
bound
enter
and
stos
insb
mov
cmp
pop
scas
dec
xor
repz
out
add
mov
ja
dec
fs
dec
out
sbb
inc
xchg
mov
je
inc
orl
mov
dec
mov
cmp
adc
push
cmpsl
inc
hlt
cmp
ja,pn
adc
cmc
cmp
lcall
inc
jns
call
fists
inc
pusha
sbb
pop
push
jecxz
pop
cmc
popa
or
popa
push
bound
loope
sub
add
mov
mov
aaa
mov
dec
fs
repnz
scas
mov
movsb
test
pop
subl
lea
push
inc
pop
cwtl
cwtl
insl
adc
xchg
popa
cmp
jp
jne
mov
stc
cmp
push
dec
xchg
cltd
jno
negl
scas
out
sub
sti
sbb
incb
ret
movsl
add
pop
insl
hlt
sarl
add
add
gs
sub
idivl
sbb
ja
lods
loopne
and
xchg
mov
cmp
jle
push
repnz
xchg
xchg
test
test
sbb
lcall
sub
xlat
test
mov
incl
lds
mov
and
xchg
push
aad
fwait
add
jns
into
xor
sub
sbb
gs
aaa
lahf
pop
jo
or
jae
iret
cli
ja
sub
push
out
sub
lret
add
and
mov
ja
inc
sahf
mov
inc
pop
mov
pushf
aaa
mov
mov
push
enter
imul
push
add
cmp
jg
jo
filds
cld
pop
jnp
or
rclb
cmpsl
push
jp
pop
sbb
push
xchg
in
sti
sbb
adc
mov
add
testl
stc
negl
je
xor
inc
sahf
lea
daa
adc
repnz
pop
add
imull
xchg
fimull
dec
fadd
push
dec
lock
cwtl
loope
and
pop
inc
mov
xchg
inc
pop
mov
or
cltd
sub
in
or
arpl
inc
xor
cwtl
inc
mov
sbb
daa
pop
lods
or
call
lods
jl
cmp
push
or
push
mov
pop
into
pop
fs
cmpsl
jb
lcall
inc
jne
outsl
xchg
lds
sub
rolb
pop
sarb
jp
push
sub
jnp
test
je
or
mov
jno
sbb
rorb
adc
sbb
adc
pop
aaa
jne
je
rcrl
pop
stc
add
inc
push
pop
dec
pop
rclb
cmpsl
jle
ret
dec
sarb
cmp
xorb
push
add
gs
das
inc
call
outsl
in
or
mov
sbb
push
cmc
push
mov
mov
decl
testl
js
or
addb
imul
xchg
push
in
loope
dec
fwait
push
pop
cmpsl
cmp
jb
addr16
neg
pop
imul
mov
push
pop
pop
mov
mov
jns
inc
push
lahf
arpl
lahf
fisttpl
int3
cltd
inc
xchg
shrl
fcmovb
outsl
xor
cmc
cli
push
or
lock
mov
ret
jo
sub
pop
aas
popa
push
mov
lock
movl
cmp
mov
xchg
jcxz
repnz
push
adc
loop
and
and
call
in
out
jb
inc
daa
cmp
xchg
fistps
stc
clc
das
or
push
dec
add
sub
lahf
popf
inc
cmpsl
dec
ja
cmp
cmp
mov
mov
mov
arpl
call
in
mov
jle
in
pop
and
rcrl
xor
subb
shrb
xchg
mov
daa
ss
fnsave
pop
cli
dec
and
rcll
test
cmp
pop
fsts
add
out
and
daa
aas
popf
and
std
cmpsb
dec
fisubs
movsb
mov
je
mov
popa
push
adc
inc
ds
mov
lahf
inc
mov
add
arpl
xor
pop
sub
dec
and
jl
aas
or
ja
in
lcall
cmpsb
pop
push
sahf
mov
je
inc
xchg
pop
cmpl
mov
push
inc
sbb
xchg
les
jns
lods
bsr
imul
data16
ret
js
loope
adc
adc
dec
jo
adc
bound
pop
mov
loopne
imul
xchg
fsubs
push
enter
pop
pop
orl
push
jnp
addr16
sub
iret
xor
xlat
mov
push
cli
jne
ja
enter
pop
sbb
pop
call
pop
ret
imul
idiv
out
les
scas
mov
lods
xorb
lcall
test
pop
lret
rolb
sbb
imul
inc
push
push
jecxz
ffreep
push
fiadds
aas
stc
xchg
cmp
sub
sbb
or
aam
xor
xor
push
push
jecxz
int
xchg
xchg
orb
adc
cmc
js
push
arpl
push
call
adc
roll
xlat
loopne
fcmovbe
sbb
jbe
mov
and
pop
fnstcw
sub
pop
fiadds
mov
movsl
scas
mov
jb
add
daa
push
popf
call
outsl
xchg
sub
cmp
fistpll
icebp
jle
pop
jno
push
js
inc
inc
push
mov
les
push
hlt
inc
fisubs
mov
xlat
dec
jl
jno
jo
jg
inc
sbb
inc
shr
sbb
fcompl
enter
fs
mov
inc
and
xchg
test
icebp
iret
fsubl
sti
xor
sub
addr16
xchg
ret
add
sub
mov
dec
or
iret
sbb
loope
mov
push
idivb
cmpl
inc
std
les
mov
fwait
sbb
inc
mov
jae
test
xor
mov
popl
loope
fisttpll
add
out
push
pop
mov
pop
push
ret
mov
xchg
mov
dec
add
fwait
push
ljmp
sub
and
jae
cmp
mov
inc
fnstsw
in
fldenv
cmp
or
sbb
or
push
mov
push
rcrl
jp
cmp
or
pandn
in
push
out
or
shll
push
negb
pushf
xor
icebp
pop
sbb
imul
mov
add
xchg
sub
jg
adc
add
roll
ja
jb
icebp
mov
or
sbb
dec
cmp
sar
dec
inc
jp
les
test
pop
outsl
jns
sbb
ja
sahf
mov
dec
sbb
inc
insl
stos
int3
out
mov
cwtl
adc
out
push
sub
sarb
xchg
inc
push
imul
jo
popf
mov
shrl
sbb
insl
jp
cwtl
lret
movsb
ja
ja
adc
push
dec
xor
addr16
bound
mov
inc
outsb
test
repnz
xchg
orl
fwait
lcall
std
push
loope
lcall
sbb
sti
push
addr16
fs
lahf
mov
pop
fists
ds
sbb
or
ja
xorb
xchg
call
inc
fs
filds
push
and
add
scas
push
dec
dec
pop
ds
pop
fucomi
pop
jge
sbb
imul
cmp
leave
idivl
sub
push
popf
and
filds
or
fnstenv
pop
pop
lcall
xchg
loope
repz
push
cwtl
xchg
das
lock
hlt
cltd
push
popa
lea
dec
lock
pop
add
mov
push
dec
jo
aaa
dec
push
push
popf
push
xchg
rcpps
addl
mov
pop
add
test
adc
xor
clc
pop
out
shll
lahf
rcll
push
and
push
aam
adc
xorl
mov
test
faddl
dec
rcll
add
jg
and
addb
inc
mov
sahf
jb
inc
pop
and
inc
iret
stos
arpl
filds
sbb
push
cltd
add
pop
cmc
or
fs
push
push
shlb
adcl
or
lcall
xchg
arpl
mov
add
inc
repnz
sbb
dec
cs
xlat
xchg
add
fisubrs
adc
lret
repz
pop
lcall
ja
arpl
hlt
adc
jl
xor
xchg
jp
mov
out
add
add
js
inc
insl
out
inc
jbe
pop
cmpl
and
call
mov
dec
cmp
xor
mov
cmp
ja
push
adc
frstor
adc
mov
lret
inc
sbb
mov
push
pop
sbb
mov
lds
xor
xchg
out
jge
add
andb
fstps
daa
mov
mov
cltd
mov
and
call
mov
jg
add
jle
cltd
and
shr
mov
outsb
xchg
cmp
add
in
or
test
xchg
pop
cmpb
sub
sbbb
jbe
cmp
nop
inc
add
xchg
dec
sub
into
adcb
adc
xchg
jb
sbb
xor
pop
inc
imul
pushf
sub
inc
xchg
loope
mov
jecxz
gs
xchg
pop
fcoml
jbe
aas
xchg
mov
and
push
rorb
xor
cmc
and
or
xchg
or
iret
movsl
jb
test
out
pop
dec
jg
jnp
movsl
cmp
repz
jp
mov
jae
ret
shll
and
pop
adc
les
test
and
add
js
hlt
jo
adc
daa
and
cmp
scas
inc
xor
test
roll
pop
jmp
aad
xchg
and
rcll
arpl
imul
or
jne
addr16
cld
push
mov
ficoml
nop
xor
xor
mov
sbb
or
repnz
dec
popf
jae
jno
and
and
push
push
popf
inc
or
outsb
sahf
aaa
aaa
js
test
xor
fidivl
repz
into
add
jb
sahf
cmp
pop
xor
inc
sbb
push
jnp
and
ficoms
int3
outsl
daa
test
rcr
sarl
cltd
cmpb
data16
push
icebp
push
mull
int
inc
fnstcw
movl
cmp
daa
and
fsub
add
pop
int3
inc
mov
mov
xor
clc
mov
subl
pop
mov
pop
and
or
scas
adcb
jmp
cld
pop
pop
out
cmp
and
mov
test
xor
cmp
mov
fsub
push
leave
inc
lods
fsubrs
push
and
test
pop
mov
xor
jo
neg
inc
xchg
adc
shll
ret
sbb
xchg
push
and
sub
outsb
aas
dec
xchg
fistps
iret
xchg
xor
pusha
xchg
call
dec
jle
cmp
push
or
and
xchg
fldenv
cmpsl
rorb
addl
inc
sbb
and
out
jno
es
sbb
pop
nop
leave
sbb
rcl
repnz
pop
dec
sti
mov
xor
or
xor
xchg
xchg
fmull
daa
cld
xor
sub
adc
addb
push
loopne
mov
sub
add
jp
cli
add
and
jge
les
cmpsl
insb
xchg
xchg
pop
dec
push
movsb
addr16
sub
icebp
xchg
ret
pop
test
ljmp
add
cmpsl
rol
pop
in
adc
into
cmp
mov
pushf
pop
ds
cmp
adc
mov
ret
js
mov
mov
fs
fldpi
nop
dec
cs
push
jae
nop
insb
cli
add
pop
leave
xchg
push
orb
orb
fstpt
pop
aas
andb
fs
ljmp
xchg
add
pop
pusha
lods
into
jb
pop
pop
adcl
lcall
inc
mov
or
mov
subl
int
dec
add
ss
xor
movb
push
xor
clc
test
and
mov
popa
cmp
pop
sar
xchg
imul
clc
and
pop
mov
pop
sahf
xchg
add
test
lret
sub
lods
xchg
ljmp
sbb
pop
xchg
rorb
pushf
push
mov
pop
and
scas
mov
movsl
stc
test
jp
lea
mov
mov
jo
mov
cmpsl
inc
imul
cs
or
xlat
movsl
cmpsl
imul
pop
aad
mov
or
mov
inc
orb
scas
ret
mov
mov
mov
mov
bound
dec
imul
jle
dec
mov
cmp
lahf
idivl
jmp
in
cmc
insb
frstor
xchg
sub
or
cmp
xchg
or
adc
or
jp
orl
data16
fistpll
push
inc
and
jbe
xchg
add
mov
ret
addl
imul
sti
sar
in
arpl
mov
adc
fsubs
test
cmp
test
sub
js
xchg
add
cli
ret
or
add
cmpsl
jle
sub
mov
mov
and
add
xchg
push
sti
dec
mov
push
andb
jp
cmp
sub
push
mov
and
xchg
or
into
and
aam
sbbb
and
int
stc
out
xchg
imul
fwait
cli
pop
shl
push
cmp
bound
or
add
xchg
lret
hlt
inc
add
repnz
es
add
adc
push
lahf
test
xor
popf
test
mov
rcll
addl
pop
arpl
fldl
jo
scas
out
sbb
imul
ja
pop
pop
bound
sbb
fldl
dec
dec
and
sbb
cmp
leave
cmpsb
cmpsl
adc
daa
add
mov
add
stos
xor
mov
push
xchg
lcall
jmp
test
mov
mov
fnstenv
jne
insb
shrl
dec
jp
mov
jle
cmp
mov
and
cmovo
adc
or
pop
outsb
loopne
cli
add
jne
sbb
dec
push
lea
sbb
cltd
add
clc
mov
push
sub
mov
push
cwtl
ss
jecxz
lret
loope
push
aas
into
or
je
loope
rolb
pop
adc
jecxz
movsl
mov
inc
cwtl
mov
push
sub
dec
mov
and
bound
jne
xchg
mov
leave
add
addr16
bound
or
repnz
xchg
or
mov
add
sub
mov
jp
adc
mov
andl
outsb
push
imul
ds
pop
scas
sar
dec
out
push
xchg
fwait
jecxz
mov
imul
aam
mov
gs
out
fsubs
incb
pop
subb
gs
daa
in
push
push
push
loop
dec
push
mov
clc
dec
cmpsl
cmp
imul
cmc
lea
mov
cwtl
cmp
mov
push
movsl
jne
mov
sbbl
scas
fsubrs
repnz
fs
jecxz
adc
fisubl
push
cli
inc
xchg
fwait
mov
or
pop
popa
sbb
shr
pop
xor
inc
xchg
inc
cmc
push
add
dec
jmp
add
mov
icebp
in
pop
xor
cwtl
data16
data16
daa
or
or
jp
mov
mov
sbb
cmc
add
push
xor
push
lahf
xchg
fstpt
enter
jp
jnp
loop
js
mov
shll
scas
cmp
add
js
loope
loope
subb
mov
bound
mov
shl
outsl
sub
ja
mov
pusha
inc
mov
mov
xor
push
mov
mov
sbb
and
mov
cmpsl
lea
mov
mov
inc
adc
mov
dec
pusha
mov
cmpsl
shll
movsb
dec
loope
outsb
jecxz
cmpsl
int3
dec
mull
and
pushl
movsb
fistpll
and
dec
xorl
mov
xchg
mov
cmp
addb
movsl
and
iret
rclb
enter
pop
in
inc
cmpsl
cmp
mov
sbb
push
cmp
popf
pop
cmc
pop
jp
push
sub
push
and
lahf
fsubrs
pop
les
pop
andb
inc
fnstenv
ja
daa
call
mov
into
xor
xchg
in
ret
adc
in
aad
cld
mov
lcall
mov
fcomps
or
add
loop
jle
pop
and
insb
xchg
ja
mov
sahf
call
jle
test
div
lds
cmc
ret
into
cli
rolb
loope
cmp
dec
xor
loop
fisttps
add
and
pusha
lcall
xchg
cld
hlt
stc
mov
mov
orl
into
jns
pop
jae
pusha
sbb
pop
out
mov
mov
cmp
push
fadd
cs
inc
adc
rol
jbe
xchg
stc
ljmp
mov
shll
adc
aam
cmp
add
xchg
pop
inc
dec
shll
faddl
incl
pop
sub
cmp
lods
out
mov
lcall
sub
xchg
cmp
inc
xor
fwait
xchg
jae
lcall
pop
stos
mov
cmpsb
sub
mov
push
or
pop
fmul
std
inc
in
lahf
push
ds
ss
out
pop
push
orb
aaa
fucomi
fmuls
out
xor
filds
add
push
and
ja
inc
sti
mov
orb
cmp
aas
pop
push
rcrb
cwtl
cmp
sbb
mov
add
pop
imul
out
dec
inc
jg
daa
fwait
pushf
adc
loop
cltd
imul
cmp
jle
daa
mov
lcall
aaa
cltd
outsl
jp
repz
fwait
sahf
inc
in
or
cmp
aad
pop
fwait
mov
sub
mov
fwait
lea
pushf
and
dec
addr16
out
mov
or
icebp
std
into
sub
mov
dec
and
testl
push
mov
sbbl
push
pop
push
cmpsl
fcompl
nop
fsts
cmp
ss
cmpl
mov
jp
ret
aas
xchg
mov
or
xchg
ja
je
mul
push
push
sbb
pop
outsb
jl
cwtl
stos
in
call
xchg
in
mov
cmp
sbb
adc
rorb
in
xlat
fwait
dec
in
sarl
mov
pusha
jmp
gs
or
sbb
jg
loope
lock
mov
and
mov
mov
lcall
jo
inc
and
test
sub
sbbb
scas
outsl
inc
mov
sbb
adc
sahf
push
fs
jge
nop
pop
pop
mov
mov
jb
mov
mov
adc
sahf
popa
push
sbb
jmp
xchg
in
pop
mov
inc
fisubs
inc
lcall
nop
xlat
cmp
mov
sbb
in
aas
inc
push
inc
addr16
bound
js
or
xchg
inc
push
sub
sub
fwait
and
frstor
lret
xchg
pop
fidivrl
jae
unpcklps
inc
inc
jecxz
scas
jmp
mulb
add
cmc
ret
lods
cmp
fisttpl
mov
loop
jne
loopne
add
enter
imul
mov
in
adc
out
and
fsubrs
lods
divl
popf
dec
ljmp
arpl
mov
aas
dec
lock
leave
pop
push
sbb
out
fimull
orl
roll
loope
lret
fdivrs
test
adc
aad
mov
stos
stos
ja
test
xchg
std
fsubr
mov
fldenv
push
fimull
inc
cmp
dec
mov
add
and
or
sbb
sbb
mov
movsl
push
mov
push
test
lea
cmp
xor
mov
cmpsl
dec
jle
pop
lcall
scas
sti
insb
iret
lahf
in
push
sub
ja
addb
cmp
fcompl
pop
push
adc
add
pop
movsb
mov
lcall
push
and
lods
cltd
stos
lds
mov
jg
cmpsb
cltd
jns
pop
lock
inc
je
out
cmc
popa
pop
sbb
fdivs
mov
imul
out
out
cmpsb
sbb
ret
xchg
mov
mov
cwtl
dec
andb
add
andb
pop
xchg
sbb
pop
jne
jbe
ja
cmp
xchg
inc
fdivrs
out
stc
mov
test
mov
sub
push
ja
sub
xor
sub
cmp
nop
jecxz
popl
or
inc
test
push
orb
int
mov
cwtl
lcall
or
jae
incl
fldcw
call
push
and
push
xor
insb
mov
mov
mov
dec
or
ja
or
and
repz
add
rcrl
cld
loope
ja
lds
jae
inc
mov
or
mov
adc
mov
ss
adc
xchg
inc
clc
cmpsl
aaa
lidtl
test
dec
imul
arpl
lahf
movsw
data16
aad
test
cmp
mov
lods
mov
xor
fcomps
push
cmp
faddl
fdivs
mov
mov
loopne
scas
add
push
sbb
orb
push
sbb
add
pop
pop
inc
imul
fldl
outsl
mov
outsb
push
xor
enter
jbe
pop
dec
mov
adc
push
push
xchg
mov
cld
push
adc
and
scas
xchg
push
adc
cmp
shl
daa
cmpsl
repnz
jp
xchg
and
cmp
call
pop
or
or
adc
loop
push
adc
mov
addr16
jp
dec
add
add
rcr
jno
fwait
sbbb
add
popa
sbb
mov
nop
push
nop
add
dec
fsts
dec
cld
pop
hlt
fdivrs
cmpsb
sub
jl
or
out
fucomip
stc
adc
or
gs
push
push
push
shrb
call
add
or
fmull
out
repnz
jecxz
and
addl
mov
ja
mov
mov
and
fnstenv
lds
mov
xlat
mov
xchg
and
push
add
mov
repnz
dec
call
jo
or
inc
push
outsl
mov
mov
push
mov
push
and
lcall
and
dec
test
push
inc
imul
sbb
stc
adc
test
cld
inc
mov
pusha
cmpsl
add
pusha
jp
stc
dec
pop
add
mov
lds
inc
shl
scas
loope
mov
pop
add
inc
stos
mov
inc
jo
mul
cmp
or
xor
addb
fwait
mov
test
pop
pop
lahf
lods
ret
shl
clc
rcrl
pop
aaa
insl
jmp
lods
jno
lahf
in
mov
cmp
daa
pop
sbbb
pop
jg
loope
in
xchg
das
mov
inc
push
mov
mov
js
cmp
data16
xor
cltd
lods
and
mov
loop
xchg
sub
inc
lea
and
dec
pop
out
out
jp
repz
ja
test
data16
lret
mov
daa
sti
add
mov
dec
fsubs
insl
lods
daa
jge
negl
adc
push
xor
adc
mov
cmp
jecxz
jo
ss
jne
mov
es
inc
xchg
mov
movsb
mov
or
inc
aad
lock
loopne
in
cld
jg
xor
cmp
adc
push
in
pop
les
sbb
cltd
cltd
cmc
add
clc
add
mov
or
mov
xchg
cmp
out
fs
rep
test
push
loop
jo
imul
mov
test
adc
lahf
pop
pop
mov
sub
mov
lcall
sarl
pop
clc
arpl
inc
hlt
and
jb
and
bound
stos
mov
loop
mov
and
fisttpl
pop
icebp
jae
ja
mov
negl
lahf
xchg
and
aad
pop
roll
adc
lcall
hlt
push
das
test
out
fwait
cmpsb
dec
into
push
mov
jns
repnz
test
fisttpl
inc
jns
mov
dec
cmp
pop
out
adc
out
test
ja
jecxz
sbb
mov
dec
xor
or
jb
daa
push
mov
pop
inc
mov
popf
mov
add
les
pop
ds
insl
fdivl
data16
mov
push
xor
addr16
inc
pop
push
sub
xchg
sub
push
and
iret
call
jecxz
inc
xchg
out
inc
sbb
inc
pop
test
pop
push
inc
or
mov
mov
movsb
mov
dec
lahf
mov
jb
adc
das
sbbl
mov
jae
imul
mov
cmp
fnstenv
mull
sbb
ficoml
push
jb
cwtl
gs
and
pop
inc
fprem
js
cmc
loope
pop
fwait
add
mov
inc
fidivrl
lea
dec
testb
add
pop
sub
pop
daa
add
pop
mov
add
pop
movsb
add
ret
nop
xor
loope
frstor
add
jecxz
test
add
mov
cld
data16
test
pushf
push
mov
fmul
mov
inc
inc
in
sub
cmpb
cmp
fptan
ret
pop
std
sub
insl
mov
mov
repnz
add
xchg
push
dec
cltd
lcall
add
std
push
mov
outsb
and
rcrl
push
push
sbbb
and
xor
xor
or
icebp
sbb
cmp
popa
subl
jge
fistpl
jecxz
cmpsb
dec
xchg
xchg
push
filds
int
inc
loope
imul
ret
mov
rcl
aas
jmp
mov
aas
xor
pop
inc
push
test
jle
cmp
pop
dec
pop
imul
push
push
out
push
js
or
fiaddl
jl
cmc
fs
xor
mov
test
addr16
jne
pop
add
lock
push
and
cmp
mov
sub
sub
insb
mov
pop
push
repz
das
adc
jge
mov
out
mov
xchg
bound
inc
enter
jae
mov
ja
shl
jecxz
cmp
pop
pop
mov
cltd
cmp
push
cmc
inc
cmpsl
xchg
xchg
cwtl
sub
mov
out
xor
jne
test
rcll
jp
mov
xchg
xor
cmc
pop
xchg
fcomps
cmpsb
ret
outsl
inc
adc
pop
orl
push
cmpsl
test
add
cmp
sub
ljmp
jg
outsl
aam
sbb
pop
incl
xchg
or
in
or
mov
push
add
js
out
jnp
test
leave
insl
sub
inc
xchg
ss
inc
sti
xchg
jecxz
or
fdivrs
test
stc
enter
cld
sub
and
psubb
pop
or
inc
adc
xlat
jae
xchg
int
pop
add
sahf
cmpsl
mov
cld
fistps
mov
leave
stc
cltd
dec
popa
cmp
lods
xchg
ds
cmp
in
jp
sbb
and
out
jb
or
jg
out
fadds
jo
xor
fcomps
sub
andb
sbb
lea
stc
cli
dec
lret
inc
repnz
or
fdivrl
inc
insb
lock
and
sbb
push
lcall
test
xchg
pop
sbb
mov
test
inc
sub
lret
xchg
adcb
push
pop
lret
std
les
scas
inc
jnp
push
incl
sahf
adc
add
mov
sbb
mov
sub
add
cmp
sbb
xor
pop
mov
fidivrs
iret
xchg
loop
call
je
push
push
mov
push
adc
loope
scas
movsl
mov
fsub
xor
arpl
lcall
fnsave
sub
mov
sub
xchg
pop
ret
inc
adc
roll
jp
inc
mov
inc
sbb
add
insb
or
xchg
fdivrs
jne
add
sbb
js
jo
cld
inc
mov
aad
cmpsb
mov
icebp
sub
inc
lahf
fsubl
inc
repz
and
outsb
xchg
cmpb
cmp
or
push
xchg
icebp
xchg
popa
movsb
push
sbb
das
xchg
pop
add
sahf
mov
repnz
add
andl
cmp
cli
push
ds
sbb
cmc
inc
inc
push
pop
ret
inc
sahf
push
inc
jge
jmp
sub
add
sub
push
inc
rolb
outsb
push
pop
cmpsl
push
mov
aaa
jb
xchg
xlat
js
xchg
testl
pushl
cmp
sub
addr16
clc
or
inc
xor
aas
or
in
inc
jmp
mov
mov
scas
dec
add
fcoml
pop
hlt
jg
xchg
mov
pop
fsubrl
cmp
sbb
push
or
sbb
out
filds
ja
dec
hlt
or
adc
and
lahf
fdivrs
shrl
in
addr16
imul
les
cmp
mov
gs
lock
lock
cmpsb
push
cwtl
lahf
je
add
in
xor
data16
mov
mov
push
clc
and
mov
fisubl
inc
add
cwtl
xchg
out
cmp
outsl
mov
mov
test
test
inc
inc
repnz
fstpl
fcomp
xchg
jg
inc
mov
or
loope
js
fsub
pop
fadd
rcrl
in
xchg
mov
jmp
mov
data16
mov
adcl
rol
fstpt
inc
sub
imul
out
fstpt
push
sbbl
pop
push
cmp
mov
lahf
dec
lcall
fiadds
pop
sub
fs
movl
jmp
mov
and
sub
enter
aas
addr16
mov
inc
mov
xlat
lods
imul
ds
inc
jbe
lea
jge
aaa
push
sbb
or
inc
mov
push
addr16
or
pop
fimuls
mov
jecxz
sbb
mov
sahf
xor
ficoml
fcoml
fisubrl
jge
mov
xchg
adc
rorb
sbb
cld
or
mov
lock
ret
std
icebp
pusha
ja
fidivs
xchg
or
sahf
mov
pushf
fwait
lock
pusha
lahf
add
mov
sbb
fneni(8087
aas
and
sahf
cmc
dec
mov
dec
jae
cltd
fwait
subb
fadd
sub
and
inc
fwait
aas
sbb
and
xor
mov
pop
push
nop
xorl
sub
jecxz
push
push
gs
rcll
cltd
cmp
fcoms
popl
adc
ljmp
leave
mov
das
ficompl
inc
dec
inc
pushf
sahf
int3
stos
orb
xchg
cmp
test
scas
imul
and
iret
sub
cltd
cltd
std
xor
sub
push
mov
lock
add
and
push
push
mov
clc
pop
xchg
inc
movsl
jmp
push
es
push
pop
and
stc
jnp
inc
pop
test
xchg
inc
sbbl
mov
push
adc
sti
add
hlt
push
lcall
insl
aam
sbb
inc
adc
dec
pusha
inc
sbb
daa
ret
add
mov
dec
xchg
sub
mov
push
pop
aas
fs
addr16
xlat
cltd
and
popf
cwtl
clc
ret
cli
jl,pt
push
js
es
adc
xchg
lret
xchg
jo
mov
fwait
push
cltd
lds
andb
mov
and
xchg
xor
enter
loop
jno
fwait
mov
lahf
cwtl
outsl
push
xor
pusha
pop
mov
test
dec
add
scas
fildll
icebp
daa
lcall
or
xchg
mov
mov
pop
or
jp
fst
ud2
xchg
lahf
inc
inc
mov
inc
imul
shlb
mov
gs
or
jmp
xchg
pop
mov
xor
in
adc
idivl
lds
inc
sbb
mov
pop
mov
xorb
cmp
adc
sbb
add
iret
dec
jge
xor
push
pusha
or
addr16
in
fidivs
lea
push
dec
outsl
dec
cmpsl
hlt
mov
and
int3
sahf
dec
adc
xchg
out
push
fcomps
cs
mov
mov
mov
in
std
mov
push
mov
and
or
dec
cmpsl
mov
bswap
clc
inc
or
sub
movsl
idivl
push
mov
clc
xor
bound
lock
mov
pop
test
pushf
addr16
xchg
sub
xor
lcall
pop
fadds
lea
cmpsl
rclb
movsb
xchg
mov
out
pop
popa
mov
push
cmp
loop
lea
pop
pop
fists
fsubs
inc
cmp
test
pop
shll
nop
testl
clc
push
cltd
mov
adc
popf
mov
add
outsb
pop
cwtl
and
mov
cmpsb
repnz
icebp
daa
fistps
add
cmpsl
mov
adc
daa
sbb
push
popa
movsl
shlb
mov
fwait
incb
xor
pop
imul
jge
fs
fstpt
mov
dec
cmc
sbb
jg
and
jp
test
or
xchg
cmc
or
sub
daa
test
dec
cmpsb
jg
jmp
and
test
aad
pop
mov
push
adc
daa
das
int
add
mov
inc
sbb
hlt
sub
push
jle
or
jecxz
push
or
add
sub
inc
mov
inc
dec
or
jecxz
cmpsb
scas
or
mov
xchg
nop
rcll
lods
lock
cmpsl
pop
push
mov
mov
pop
cmc
adc
inc
aad
mov
cmp
xchg
cmp
aam
mov
lahf
out
jmp
adc
subb
pop
nop
sub
mov
int
cli
sbb
lcall
inc
dec
or
fldcw
jae
and
lock
xor
mov
jl
test
mov
sub
mov
xorl
in
adc
cltd
or
push
jo
xchg
mov
js
mov
sbb
sub
mov
shlb
xchg
pop
adc
cltd
clc
or
pop
ret
mov
adc
mov
imul
xchg
cmp
into
jnp
mov
call
or
inc
mov
addl
outsb
leave
cmp
jb
mov
gs
sahf
push
out
daa
cmc
and
stc
mov
lahf
adc
test
cltd
xchg
jmp
pop
scas
adc
jns
or
icebp
jae
mov
xor
je
aam
add
test
or
les
jmp
sbb
roll
push
pusha
imul
mov
les
push
mov
rorl
outsl
mov
dec
cmp
in
and
sbb
dec
xchg
jb
lret
jge
jp
lahf
and
icebp
xchg
sub
pushf
and
or
popf
enter
je
repnz
lret
jp
fstpl
jmp
addb
inc
xchg
jb
lds
mov
test
popa
popa
mov
shll
repz
mov
addr16
sub
mov
repnz
sahf
test
jp
jb
dec
xor
sbb
pop
pop
mov
dec
or
xlat
and
sub
push
cmp
loopne
ss
hlt
sub
mov
lret
cmp
and
pop
or
pop
jg,pn
cwtl
loope
lcall
aaa
out
sbb
loop
pushf
jns
pop
pop
mov
mov
mov
lahf
adc
cwtl
mov
mov
pop
sar
shlb
shll
pop
or
pop
jbe
test
das
std
fdivrp
notb
shll
push
stos
xchg
add
xlat
cmpsl
jge
mov
jp
cltd
mov
or
daa
pop
imul
xor
inc
loope
push
lods
lret
pop
adc
mov
arpl
jecxz
add
mov
pop
and
rol
xchg
arpl
arpl
stc
mov
pop
daa
pop
xor
add
loope
roll
insb
in
or
dec
jle
lret
jl
ljmp
inc
sub
dec
out
ret
mov
jnp
iret
cmp
mov
notl
call
into
scas
push
or
ljmp
icebp
push
mov
stc
adc
rorl
aad
add
xchg
js
inc
add
push
lahf
push
xchg
andl
inc
outsl
jecxz
add
out
xchg
inc
in
cmpsl
adc
sahf
add
test
jne
js
or
push
add
jmp
mov
cmp
mov
sbb
aaa
cmp
jg
in
xorb
enter
addr16
daa
xor
xor
mov
lcall
rorl
mov
xor
cmp
data16
mov
test
cmp
in
dec
or
add
and
je
jecxz
jne
or
or
sbb
pop
rcr
add
pop
fadds
mov
cmc
cmp
push
mov
inc
mov
stc
adc
ja
fnstenv
mov
es
xchg
les
pop
or
sub
mov
arpl
ss
or
gs
push
lods
mov
inc
hlt
int3
in
xchg
ljmp
xchg
and
sbb
adc
push
inc
iret
data16
sub
add
setg
adc
add
mov
mov
xor
sbb
adc
xchg
repnz
push
loopne
cs
lods
pop
out
xchg
xor
mov
test
pop
ret
lods
iret
push
mov
nop
push
cmp
mov
mov
leave
mov
push
xchg
ja
or
adc
push
cwtl
pop
orb
leave
daa
ficompl
les
fs
push
cmpsb
movsb
mov
jmp
decb
jge
in
and
mov
xchg
in
int
mov
movsl
pop
testb
nop
adc
xor
mov
pop
scas
ljmp
mov
test
or
inc
andb
subl
mov
adc
sbb
call
int
xchg
xorl
inc
insl
cmpsl
push
cwtl
jp
out
out
inc
inc
xlat
popf
imul
pop
pop
stos
inc
out
lock
xchg
sbb
out
data16
imul
pop
dec
rcrl
fcoms
adc
fbstp
lods
leave
arpl
bound
test
mov
fnstsw
add
jecxz
pusha
add
sub
jnp
xorl
out
add
shl
outsb
push
push
and
inc
jo
stos
or
and
cmpsb
pop
mov
outsb
int3
sub
stc
arpl
inc
in
sub
bound
fisttpl
lods
mov
push
orl
in
pop
mov
xchg
push
mov
leave
jne
in
jecxz
in
adc
popa
mov
mov
xor
jg
orl
inc
and
mov
enter
out
test
cmc
test
dec
dec
inc
mov
mov
insl
jle
add
fmuls
inc
test
jecxz
test
cmpsl
rorl
mov
xor
lds
inc
cmp
jo
loopne
pop
add
fwait
outsb
sbb
popf
lods
xchg
aaa
imul
jle
scas
add
lret
lcall
xchg
sbbb
sub
enter
xchg
aas
inc
add
negl
cmc
push
bound
adc
mov
sbb
icebp
mov
cli
dec
mov
cmp
test
push
jecxz
cmp
lea
pusha
push
loopne
bound
jae
xchg
dec
sbbl
push
sbb
test
adc
sbb
jge
mov
push
lea
jne
insl
data16
or
lds
adcl
clc
xchg
sahf
outsl
xchg
and
fcoms
fidivrl
aas
je
xchg
subb
les
push
dec
or
sbbl
pop
into
inc
out
inc
or
sbbb
sbb
mov
in
add
les
orb
jmp
sbb
addr16
scas
adcb
dec
xchg
addl
and
or
scas
rorb
push
cltd
cmp
nop
pop
scas
sahf
scas
cmp
mov
push
fnstcw
mov
lods
mov
nop
mov
movsl
arpl
mov
mov
mov
js
lahf
mov
inc
fwait
imul
mov
testl
enter
cmp
ds
pushf
jae
push
sbb
dec
cmc
push
mul
daa
fdivr
aaa
out
leave
fisubs
test
orl
sbb
fistps
xor
fs
aas
jb
jecxz
in
pop
jp
xor
frstor
and
dec
push
jge
mov
add
add
xchg
int
xchg
lock
dec
sub
sbb
add
push
pop
call
sub
nop
addl
aam
jbe
cmp
ja
clc
xorb
xchg
mov
jp
ret
pop
push
jmp
mov
shr
imul
outsb
lret
add
mov
push
daa
pop
add
loope
xchg
inc
cmp
test
insb
mov
fwait
test
lods
inc
adc
jnp
jb
rcrb
xlat
sbb
adc
mov
in
dec
mov
in
data16
in
jecxz
scas
mov
xor
dec
stos
adc
inc
mov
loope
daa
movsl
movsl
fiaddl
ficompl
push
sbb
stc
sbb
stc
lahf
test
sbb
add
jno
pushf
mov
sbb
shlb
push
pop
inc
shrl
jl
adc
pop
ja
test
sahf
mov
cmpsl
gs
aas
js
sbb
mov
push
push
add
mov
adc
mov
xor
loopne
lods
aaa
xor
xchg
xchg
pop
push
push
push
pushf
test
std
jl
and
lcall
fadds
pop
test
inc
iret
mul
adc
pop
stc
mov
incl
stos
fdivrl
inc
and
add
enter
movsb
adc
mull
cmpsl
sbb
dec
push
test
jecxz
pop
mov
add
jecxz
xchg
mov
and
in
bound
inc
aas
push
loop
fadd
xchg
cmp
pop
push
stos
outsl
mov
pop
xchg
dec
ds
ss
mov
cmp
push
repz
mov
and
test
sub
jecxz
imull
jns
pop
fsubl
mov
mov
pop
jecxz
cmp
xchg
mov
inc
push
out
or
add
dec
les
adc
jg
xchg
mov
jle
js
push
jge
out
mov
in
inc
test
scas
cwtl
or
xchg
and
mov
fdivp
lods
jae
cmc
dec
inc
xor
arpl
lcall
jp
jge
pop
insl
rcrl
pop
rorl
inc
insb
or
sbb
sbb
inc
push
dec
lret
adc
jmp
cwtl
mov
and
cmp
outsl
inc
dec
or
mov
mov
sti
pop
fnstenv
xor
sub
push
fstpl
jp
pop
and
or
roll
inc
inc
clc
cmp
scas
dec
dec
aas
add
out
dec
mov
push
subl
repnz
pop
cmpsb
fstps
scas
outsl
test
push
mov
dec
imul
out
jno
mov
imul
pusha
pop
or
sbb
sub
add
stc
aam
shll
xchg
adc
push
lret
sbb
pop
mov
je
sbb
sbb
cmp
dec
push
inc
dec
jle
test
fistl
scas
inc
subps
xchg
jbe
cmpsl
cmc
push
pop
mov
js
mov
fstps
repz
sub
inc
je,pn
scas
pop
daa
out
xor
jmp
and
sahf
sbb
lods
jnp
jp
ret
lea
out
dec
pop
pop
add
ja
cmc
leave
mov
faddl
inc
sub
test
adc
sub
push
je
pusha
lcall
ret
lcall
ret
rcrl
add
fcmovne
nop
test
dec
lock
sbb
dec
dec
xchg
fistps
orl
icebp
nop
lahf
jecxz
js
pushf
aaa
or
aas
xor
xchg
push
fldenv
push
jae,pt
jmp
sbb
imul
addr16
xor
test
insb
inc
test
push
push
xor
fcomps
sbb
test
mov
sbb
mov
add
nop
scas
out
cmc
loopne
pop
orb
cmp
lahf
cmpsb
ss
rcrb
or
sbb
mov
scas
fildl
push
mov
mov
sbb
cmc
cmp
notb
sub
jg
sub
mov
xor
pop
popa
sbbb
push
pop
xchg
imul
je
push
add
push
jp
adcl
in
or
xchg
bound
add
sbb
xlat
repz
add
inc
jmp
bound
shlb
pop
dec
mov
push
sysenter
xchg
lock
xchg
pop
shl
mov
outsl
test
daa
test
adc
fcoml
inc
sub
xor
test
out
jbe
cmc
and
push
and
fidivs
ror
add
xor
mov
xchg
pop
testl
inc
add
mov
add
mov
jle
or
mov
aaa
imul
pop
push
mov
dec
jmp
shrl
lret
mov
mov
adc
xor
pop
add
pop
sub
mov
daa
fs
jecxz
lea
jb
lock
or
jp
test
mov
fisubl
cmc
pop
mov
jecxz
add
fs
dec
insb
loope
cmp
fbld
lds
push
sbb
bound
inc
imul
adcb
push
or
pop
cmc
sbb
push
mov
add
pop
gs
shll
mov
or
jne
pop
dec
xor
rorl
adc
aas
push
shl
shrl
testl
inc
sub
jg
lcall
lahf
sbb
add
fld1
mov
mov
mov
and
and
mov
mov
jle
icebp
push
push
jmp
sarl
add
add
mov
jmp
ret
insb
cmp
add
jp
out
enter
fidivrs
dec
filds
fs
lahf
fadds
fnstenv
addr16
cmp
jp
mov
adc
sbb
dec
cli
lahf
adc
ds
sub
fcoms
push
hlt
inc
mov
bound
jl
mov
aad
jg
cli
repnz
dec
movsl
inc
mov
cmc
inc
add
ficomps
or
xchg
jns
fistps
stos
cmp
dec
mov
mov
ret
imul
dec
ja
push
imul
rcr
imull
xor
inc
sub
lahf
mov
xchg
inc
fsub
sub
fidivl
xchg
rcrl
repz
push
adc
adc
push
subl
movsb
sub
add
push
mov
jo
int3
inc
lahf
or
pop
je
je
in
ss
inc
push
pop
adc
mov
nop
or
add
loope
xchg
jl
xor
xchg
fwait
cmpsl
jge
add
xor
fimull
dec
mov
fcomps
loop
sbb
dec
cmp
hlt
fwait
ror
fmuls
pop
fst
in
sbb
add
sbb
mov
sbb
xchg
adc
hlt
jns
push
ds
loopne
inc
in
sar
xor
dec
xlat
xchg
sbb
cmpsl
cwtl
or
adc
cwtl
pop
fcomp
pop
pop
jo
pop
jae
xor
out
ja
cmp
push
popf
adcb
pop
mov
xchg
bound
or
pop
cmpsl
lahf
inc
cmc
lahf
andl
rol
jp
dec
sbb
cmp
adc
add
stos
sti
and
xor
shrl
cmpsl
fldenv
pop
xchg
or
adc
out
dec
jns
lahf
mov
aam
pop
ret
arpl
sti
lcall
call
lock
cli
or
push
loope
xchg
js
cmp
add
out
sub
mov
xchg
cltd
xor
stc
or
pusha
aad
lds
lret
cmc
add
cmp
in
outsl
cld
and
xchg
lcall
insb
jno
cmp
imul
sbb
cs
aas
and
xor
mov
push
fwait
test
sub
ss
out
jle
pop
and
dec
push
ja
and
mov
pop
js
insb
push
in
xor
xchg
inc
sub
sub
push
pop
repz
push
rolb
jb
xchg
shlb
out
push
loope
js
lahf
xchg
fnop
xor
out
mov
dec
loop
flds
sarl
js
fmull
test
jno
xchg
insl
mov
pop
jecxz
xchg
jnp
loope
jb
pop
add
jp
loopne
add
cmpsl
inc
mov
pop
test
lret
mov
inc
je
push
rcrw
testb
lds
adc
bound
jp
sbb
fldenv
xadd
adc
addr16
inc
ret
lahf
jb
mov
cmp
cmpb
jl
and
cltd
mulb
push
mov
mov
fstpl
and
les
and
test
push
bound
push
add
dec
xchg
xchg
or
inc
sti
scas
sbb
push
fistpll
lods
pop
jge
or
lock
call
aas
mov
movsl
dec
inc
pushf
rcll
cmc
inc
pop
mov
mov
aas
fimull
enter
or
jb
ret
fucomp
fildll
sahf
fnstcw
outsl
add
arpl
sub
sbb
or
sbb
cltd
jb
sbb
sbb
daa
mov
pop
shll
sarl
test
lahf
movl
popf
out
add
dec
cmp
push
pop
fnstcw
imul
stc
sub
pop
inc
ljmp
xchg
xchg
push
and
repz
add
mov
mov
push
cmp
lcall
stos
lea
mull
aam
imul
les
push
cld
fmull
inc
push
mov
xor
add
testl
sub
insl
in
push
inc
fnstenv
sub
sub
in
int3
jp
adc
mov
mov
adc
xchg
sbb
pop
mov
js
shll
cmc
loopne
ds
call
loopne
mov
xchg
mov
push
push
iret
xor
xor
cwtl
int
pop
mov
jmp
jp
arpl
or
and
dec
fwait
sbb
nop
adc
test
aas
cld
or
mov
sti
pop
xchg
pop
push
push
repnz
jl
lock
cmpsb
pop
in
cmp
pop
test
dec
push
mov
xchg
fmuls
xor
mov
xchg
imul
cwtl
fnsave
dec
je
fistl
aaa
and
pop
mov
outsl
mov
inc
cmp
pushf
lcall
pop
popf
jnp
pop
cmpsb
jl
push
daa
mov
ja
pushf
pop
push
or
jmp
ficomps
arpl
out
pop
pushl
aaa
mov
lret
mov
xchg
addr16
rorb
adc
in
test
sbb
rorl
inc
aaa
adc
push
idivl
sbb
sub
add
sub
inc
insl
out
dec
jp
pop
sbb
cmp
and
xchg
cmp
mov
mov
mov
pushf
cld
mov
rolb
jge
adc
and
cmp
push
xchg
lret
cmpb
inc
insb
lahf
push
inc
inc
push
test
and
fcoms
cmp
icebp
mov
push
adc
sub
adc
jecxz
fistl
sub
daa
cmp
mov
push
std
mov
xlat
inc
inc
xchg
fisubrl
syscall
xchg
adc
mov
inc
js
push
cmp
imul
incl
and
mov
imul
mov
push
xorl
xor
orl
mov
jo
sahf
js
fwait
xchg
pop
and
mov
mov
and
cld
pop
mov
cltd
test
jmp
je
mov
mov
sti
jae
test
inc
push
inc
rorb
fs
orb
and
sub
xchg
xor
movsl
sub
pusha
lahf
mov
cld
outsl
sahf
mov
push
pop
pushf
aas
ljmp
test
mov
jbe
jb
push
pop
out
iret
jmp
xor
mov
loopne
sbbl
or
mov
addr16
pop
loop
ret
inc
in
sbb
in
jne
pop
lcall
mov
sbb
mov
mov
mov
fiadds
mov
popf
pop
sbb
ja
xor
cld
mov
xchg
jno
jp
outsl
ret
cmpsl
mov
aad
mov
fwait
cmp
sbb
mov
fs
cmpsl
dec
sti
nop
xchg
mov
mov
and
adc
push
pop
in
and
push
push
ja
mov
and
mov
xchg
notb
or
icebp
dec
cmp
hlt
add
mov
in
jb
jae
xchg
hlt
xchg
cmp
sbb
or
das
xchg
rcrl
dec
mov
adc
mov
cmp
inc
sub
stc
and
jno
inc
mov
dec
mov
test
aam
adc
push
insb
cmpl
sub
imul
jae
mov
pusha
add
xorl
and
sub
add
nop
aas
adc
repz
inc
push
adc
jg
xchg
lods
data16
pop
cmpl
cltd
fsubs
ret
repnz
js
scas
cmpsl
add
subb
inc
test
mov
pop
or
sbb
push
inc
insb
loopne
loope
mov
push
xchg
jecxz
rcll
sbb
cli
faddl
jmp
pop
sahf
mov
test
xchg
inc
hlt
jmp
pop
aad
pop
cwtl
jae
pusha
cmp
loope
push
xor
fs
sbb
inc
and
mov
pop
inc
push
cmp
std
jo
pop
dec
cmp
mov
adc
xor
mov
imul
sbbl
push
xchg
int
out
jge
sub
int3
inc
aad
or
ret
inc
xor
xchg
cmp
mov
out
je
stos
mov
std
ja
inc
mov
inc
or
sbb
fwait
sbb
fcmovb
sbbb
dec
popf
xchg
mov
test
adc
mov
jae
aad
jne
push
jmp
inc
popf
in
push
addr16
and
das
mov
lock
dec
dec
dec
add
mov
and
mov
xchg
je
and
ret
jp
mov
jbe
scas
mov
sbb
and
dec
test
jle
scas
cmpsb
cmc
sbb
icebp
sub
xchg
out
inc
dec
mov
mov
ja
xchg
adc
dec
add
ffree
pusha
adc
and
add
push
dec
xchg
loop
rclb
in
test
add
stos
cmp
cmp
sub
imul
ret
mov
add
daa
push
stc
mov
sbb
daa
xor
clc
sahf
dec
jo
mov
jbe
test
or
repnz
xchg
out
jp
ja
ret
test
push
and
fists
aas
cltd
bound
push
push
push
push
jns
lretw
movsb
pop
push
cmp
and
push
inc
pop
sbb
jns
add
sub
imul
lahf
push
call
inc
cld
fcompl
cmp
pop
iret
adc
mov
fs
sti
ja
out
outsl
clc
inc
addr16
mov
lcall
shlb
stos
shl
data16
ret
jge
xchg
sub
inc
loop
pop
bound
aaa
rorl
sahf
bound
fimull
lds
popf
pop
fdivs
in
inc
add
mov
fcompl
scas
cmp
das
or
add
push
and
movsl
sbb
dec
insl
test
jo
xchg
or
and
sbb
pop
rcrb
mov
cmp
mov
jp
aaa
add
lock
sbb
push
cld
sbb
dec
mov
jo
inc
jle
pop
pop
mov
popa
push
inc
sbb
inc
daa
data16
jbe
pop
sbb
pop
loope
fwait
jg
mov
imul
lahf
pushf
jbe
ja
rclb
jno
and
arpl
insb
push
pop
call
dec
xchg
lahf
mov
or
xchg
xor
ds
add
push
mov
stc
popa
xchg
aaa
push
sbb
std
inc
movsl
dec
push
inc
stos
js
imul
push
icebp
jmp
and
sub
jne
loope
fcomp
inc
xchg
ljmp
dec
cwtl
cmpb
cmp
fcoml
mov
inc
cmp
add
pop
xchg
pop
div
cmpsl
gs
repz
outsl
out
xchg
popf
sarl
test
iret
bound
sub
sbb
push
test
imul
dec
sahf
xor
into
in
pusha
xchg
sti
stc
and
push
out
mov
push
movsb
ret
ja
out
mov
inc
xchg
int3
js
or
loope
in
mov
pop
in
xor
stos
es
fwait
sub
jo
mov
in
pop
pop
adc
mov
aad
cmpsb
out
pusha
xchg
in
or
inc
sub
sub
nop
mov
mov
pop
sbbl
push
cmp
cwtl
and
shrl
push
mov
aad
andb
ds
add
lea
cmp
jg
push
cli
js
aas
test
lahf
scas
popf
je
cmp
pop
out
push
inc
dec
sub
cltd
cltd
xchg
sbb
sbbl
sub
lahf
jle
and
sahf
inc
das
popf
cmc
mov
cmc
xchg
test
pop
rolb
xor
xchg
mov
shrl
cltd
repnz
call
jle
in
push
jl
add
int
test
jmp
stos
call
outsb
inc
sahf
inc
mov
jecxz
sub
aas
or
sbbl
xchg
cmc
rcrl
test
fildll
ja
pop
and
jb
inc
aaa
rcrb
lahf
lock
pop
cmp
adc
cmpsl
mov
or
mov
popf
inc
insb
add
std
data16
dec
cmp
and
loop
sub
push
dec
sbbb
outsl
jae
clc
xchg
cltd
mov
test
sub
mov
jne
sahf
ja
push
movsl
xchg
push
push
ljmp
leave
jle
pop
testw
push
fnstsw
mov
push
pop
fisubrs
sbb
hlt
testl
xchg
cmpsl
inc
cltd
popa
fisubl
aad
sub
pop
mov
stos
stc
fld1
adc
mov
repz
insl
lock
cmpsl
test
jno
mov
mov
sarb
add
ja
mov
inc
ds
mov
les
fdivrl
xchg
cmp
push
dec
icebp
mov
pushf
add
imul
push
add
mov
jmp
loopne
or
lcall
mov
jb
add
or
fst
rcrb
add
test
jecxz
fcoml
orl
mov
fildll
xor
and
xchg
sbb
addl
out
jo
dec
add
aas
push
add
push
or
jmp
mulb
outsl
and
or
jecxz
dec
addl
jo
hlt
sub
mov
popa
jp
add
mov
xchg
inc
and
imul
xchg
add
adc
mov
dec
adc
movl
repnz
adc
lcall
stos
mov
mov
jg
inc
icebp
in
adc
incb
test
dec
add
cmc
add
mov
sub
repz
mov
in
fsubrs
gs
push
test
sub
loope
push
in
test
pop
pop
and
orl
movsb
sub
shrb
mov
dec
jae
and
or
sbb
mov
add
dec
fstpl
jp
jecxz
xchg
cmpsl
push
jg
out
shrl
addl
outsb
add
sbb
dec
call
enter
push
out
xchg
cmp
mov
inc
mov
add
mov
mov
inc
xor
outsl
pop
adc
xor
and
cwtd
pop
mov
adc
xchg
mov
and
add
ret
and
or
jg
jb
lahf
jb
xchg
pop
frstor
lcall
jle
mov
sbb
fisubrs
inc
sbbb
push
jno
mov
and
fs
fidivrs
ja
cwtl
add
gs
fadds
repnz
jl
cmp
dec
dec
pusha
jg
xchg
pop
mov
into
mov
loope
cmp
cmpl
pop
daa
cmc
popa
sbbl
roll
filds
add
ja
sbb
and
rclb
stc
jecxz
enter
add
scas
sub
pop
bound
repz
aad
mov
mov
fisubrl
pop
pushf
adcb
xor
outsl
addb
sbb
cld
popa
arpl
loopne
sbb
test
test
and
push
add
bound
xor
add
add
addr16
cmp
loop
or
in
faddl
sbb
add
popf
jo
fwait
push
lret
sbb
sbb
mov
nop
sbb
imul
or
call
push
fimull
mov
or
pop
test
int
jmp
stos
repz
and
mov
sbb
and
pop
incl
sbb
pop
mov
mov
iret
test
add
jns
jge
sub
imul
flds
xchg
incl
dec
testb
test
mov
jg
out
cmc
iret
adc
bound
sbb
in
jp
ds
pop
call
movsb
mov
icebp
or
mov
inc
pop
lahf
dec
nop
push
test
movsb
jb
dec
and
adc
test
lea
cli
cltd
pop
insb
mov
jmp
mov
add
xor
test
out
push
mov
add
sub
movsb
imull
jp
and
aaa
inc
insl
cmpb
aas
push
test
fldt
mov
pop
je
jecxz
inc
cmp
jecxz
sbb
pop
flds
jge
dec
roll
pop
aaa
call
mov
add
clc
and
mov
and
dec
outsl
repnz
jp
mov
jmp
repnz
mov
cmpsl
pop
cmc
sub
jnp
or
lods
pop
or
add
cld
jg
push
pop
inc
cltd
and
fsubs
push
lea
fiadds
pop
jle
imul
movd
hlt
sbb
decl
lahf
aas
out
jecxz
loope
stc
xor
xchg
mov
cmp
mov
das
arpl
in
pop
xchg
incb
insl
xchg
roll
cmp
mov
iret
mov
roll
mov
cmc
dec
xchg
nop
sbb
popa
pop
and
sbb
pusha
dec
clc
jl
fnstenv
adc
lods
xchg
out
xor
push
addr16
sbb
lcall
int3
and
jle
inc
mov
lds
jg
fbstp
shrl
add
dec
mov
xchg
jl
pop
iret
fcmovnu
sub
or
pop
inc
cltd
cmp
inc
loopne
pop
sbb
adc
mov
stos
pop
cmpsb
mov
dec
sub
andb
sbb
jo
pop
stc
dec
mov
mov
push
les
sarb
xchg
sub
adc
psubd
push
add
enter
popf
call
mov
dec
xchg
mov
push
and
sahf
sti
mov
in
popa
and
sub
and
les
mov
dec
lea
jg
push
fs
cmp
inc
cmpl
inc
mov
jp
popa
mov
es
test
mov
or
pop
jg
test
ret
and
clc
and
xchg
dec
add
fldenv
or
push
xchg
rcrb
jae
xlat
imul
icebp
jne
pop
xchg
adc
mov
xchg
daa
cli
or
pushf
daa
mov
cmpsb
test
mov
push
mov
push
mov
mov
mov
test
stc
lods
enterw
hlt
adc
mov
out
xchg
sti
push
mov
pop
adc
add
paddw
and
movsl
add
dec
dec
xchg
inc
hlt
lahf
or
mov
sub
mov
and
mov
lea
test
lea
pop
xor
or
cwtl
or
lret
movl
fisubrs
dec
fldl
test
out
mov
or
xorl
ret
add
mov
mov
in
mov
subl
or
ljmp
xor
mov
jo
incl
popa
xchg
inc
ffree
sahf
xlat
shll
rorl
in
orl
mov
push
sub
mov
inc
loop
js
out
sub
leave
jo
jecxz
or
andl
jbe
popa
xor
ret
cmp
out
movsb
ret
sub
fldt
xchg
stos
pushf
pop
pop
push
pop
cld
xor
sbb
pop
aad
sub
enter
push
jp
adc
inc
lds
sub
adc
pop
mov
and
cld
jecxz
sub
hlt
mov
mov
xor
jl
mov
inc
lods
and
add
mov
addr16
ja
xchg
inc
xchg
daa
pop
lods
inc
es
sti
scas
mov
leave
gs
out
test
addr16
sub
jge
pop
cs
jecxz
test
xchg
mov
lret
mov
popa
flds
jno
cld
or
data16
cmp
loopne
or
pop
lds
das
pop
out
orb
sbb
fdivrl
inc
xchg
mov
lret
aaa
jle
push
iret
dec
ret
rol
bound
popa
test
xor
jo
jo
jg
sbb
xchg
push
pop
out
fsubs
jge
inc
adc
pop
mov
push
faddl
cmp
mov
jno
mov
ds
adc
sbb
push
sub
pop
arpl
dec
cmp
out
lods
cli
je
mov
mov
mov
sbb
into
lahf
or
rol
cltd
or
in
into
push
xor
inc
and
push
jge
icebp
dec
mov
push
xor
aaa
cmpsl
jg
or
dec
fiaddl
flds
inc
xor
ljmp
adc
aaa
mov
mov
and
aas
subb
jo
mov
xchg
loope
ds
shrl
test
xchg
lret
loope
bnd
mov
and
insb
adcb
cmc
icebp
and
es
jecxz
pop
xorb
inc
flds
out
xor
cmpsl
mov
pushf
mov
xlat
inc
mov
push
jno
adc
andb
loopne
sbb
dec
mov
das
xchg
loope
mov
sub
repnz
jg
dec
ja
in
pop
xchg
mov
pop
jp
jnp
adcb
in
jo
cltd
jle
je
cmp
pop
movl
shl
and
adc
stos
pop
out
sbb
orb
mov
push
btc
mov
push
fstps
into
shl
lahf
repnz
sahf
push
mov
sbb
addr16
push
packuswb
nop
or
loope
mov
inc
in
lret
push
xlat
rcl
inc
mov
lods
adcb
pop
daa
loope
or
adc
hlt
sbb
mov
jecxz
pushf
xchg
mov
idiv
push
sub
push
mov
popl
xchg
movsl
xor
inc
test
test
fdivr
push
inc
sbb
mov
lds
mov
rolb
jae
fimull
roll
clc
cltd
pop
cs
enter
mov
popf
inc
and
arpl
pushf
pop
xchg
fisubrl
enter
add
mov
and
push
mov
insb
push
dec
adc
lahf
mov
jmp
sbb
pop
and
xor
mov
adc
lods
repz
test
pop
dec
mov
loopne
rcr
pop
sbb
mov
sub
inc
sbb
add
aam
ljmp
sbb
jg
orl
sbb
mov
mov
cmp
js
adc
xchg
cmp
je
cmpsl
xchg
hlt
mov
push
xor
daa
repz
dec
pop
sahf
aas
fists
push
rcll
mov
pop
andb
stc
adc
jl
xchg
mov
popf
fwait
iret
mov
xchg
movsl
mov
jo
shll
out
or
mov
sbbl
or
sbb
dec
adc
iret
das
push
dec
test
pop
mov
sub
adc
clc
jnp
jne
lcall
loopne
dec
lret
mov
pop
incl
inc
pop
mov
mov
cli
cli
subb
popa
sub
add
xchg
mov
cmp
sbbl
jp
pop
imul
dec
fistps
mov
xor
fidivrs
pop
fnstenv
cld
fnstenv
pop
push
mov
push
inc
sbb
mov
add
pop
pushf
mov
pop
lret
test
adc
jb
orl
pop
mov
dec
in
xchg
and
iret
movsl
push
movsb
mov
test
lret
jecxz
xchg
push
pop
lret
loopne,pt
addb
fdivrl
pushf
push
adc
sahf
and
js
sti
mov
mov
add
mulb
scas
sti
add
mov
or
pop
push
push
inc
cltd
mov
out
jp
dec
daa
cmpsb
cmc
pop
adc
mov
xchg
movsl
popa
xor
mov
jno
mov
lahf
lahf
js
sub
sbb
mov
and
or
call
inc
or
inc
sbb
add
popf
mov
push
push
mov
push
out
jbe
lds
loope,pn
mov
repnz
mov
pop
sbb
xchg
pop
sarl
mov
add
jo
pop
mov
pop
xchg
test
sub
adc
pop
andb
inc
fwait
pop
sub
cld
sti
fwait
clc
sbb
cmp
push
mov
mov
subl
or
cmp
or
shlb
inc
data16
dec
push
jl
jle
cs
push
in
dec
mov
sahf
add
pusha
mov
repnz
xchg
sbb
jle
sub
stc
inc
icebp
out
cwtl
dec
sahf
dec
pop
mov
cmp
adc
pop
inc
sbb
ds
test
bound
jg
push
shll
pusha
mov
test
les
pop
pop
xor
cmp
jecxz
in
je
lahf
mov
dec
iret
jg
out
sub
adcl
lock
movl
jmp
data16
adc
pop
cmpl
adc
mov
or
push
lahf
fldl
mov
ret
insl
cmp
les
mov
adc
pop
cs
jg
push
stc
xchg
pop
push
inc
stos
jg
pop
sub
fisubrl
push
add
loop
jecxz
popl
scas
and
iret
repnz
popf
xor
mov
cmpb
jecxz
mov
insb
push
stc
cmp
push
shll
or
pop
nop
lcall
les
jns
ret
insb
sbbl
loop
inc
ret
push
xchg
mov
out
call
push
ds
in
and
test
mov
jno
loope
test
scas
sub
mov
pop
dec
incl
or
or
nop
pop
data16
mov
add
icebp
sbb
insb
les
mov
add
and
lods
fistpl
xor
mov
out
inc
pusha
cmc
mov
outsb
lea
push
inc
popl
cmp
xchg
sub
mov
push
cltd
dec
mov
pop
lahf
or
and
cmp
std
roll
and
jp
mov
xchg
addl
filds
test
mov
pop
jmp
mov
mov
xchg
rolb
in
mov
mov
psubq
popa
cmp
ret
add
xor
addb
fwait
int3
pop
cmc
xchg
or
pop
jne
and
jnp
mov
jle
sbb
mov
pop
repnz
jp
hlt
mov
pop
inc
int3
in
test
cmp
sbb
in
mov
mov
repz
xchg
lret
or
add
inc
test
rep
insb
in
daa
and
xor
sub
ss
or
add
lcall
xor
xchg
inc
test
aas
inc
xor
dec
adcl
lret
loopne
dec
lea
ds
les
jno
jecxz
pushf
mov
xchg
js
test
clc
cmpsb
xor
jo
or
jno
cmp
leave
and
xchg
adc
flds
pop
jmp
inc
test
cwtl
clc
iret
mov
movsb
call
inc
push
cli
adc
sub
int
out
sub
cmovs
cmp
or
mov
cmp
mov
bnd
cmp
leave
imul
sbb
repz
sub
dec
push
das
fsubl
out
xchg
loopne
cmp
repz
inc
adc
push
test
xor
pop
fildll
xlat
push
data16
xlat
xlat
outsl
sahf
pop
xchg
test
mov
mov
test
push
add
sbb
cmc
pop
clc
xchg
mov
inc
inc
cltd
in
pop
aaa
xchg
fsubrl
clc
shlw
daa
arpl
pop
add
lcall
int3
test
xchg
sarl
sub
xchg
sub
and
push
or
mov
cmp
sub
loop
lret
in
inc
dec
mov
mov
or
sub
push
add
or
nop
sub
xchg
js
xchg
jp
repz
in
mov
mov
cld
jnp
rorl
das
mov
sahf
pop
bound
jmp
jb
sub
add
jae
aaa
and
or
mov
and
add
pop
or
fs
repnz
pushf
loopw
push
lcall
mov
pop
cwtl
rolb
xchg
mov
js
test
bound
push
iret
xor
ja
push
xchg
ret
cmp
movsb
inc
je
nop
jg
mov
push
cmp
mov
or
sahf
add
scas
out
adcb
pusha
mov
mov
stos
xor
push
mov
sbb
sahf
jb
subb
jne
fsubr
push
mov
aam
and
mov
mov
or
xchg
dec
cmp
stc
fbld
lods
imul
outsl
xlat
cmp
xchg
add
out
ja
and
inc
mov
stc
and
cmc
pusha
cmp
iret
lock
test
jmp
xchg
mov
mov
add
fwait
sub
mov
jnp
imul
mov
mov
xor
dec
jg
sbb
and
and
xlat
test
dec
and
nop
push
dec
mov
push
arpl
push
push
mov
or
hlt
fdiv
mov
cmp
insb
test
pop
xor
dec
fwait
ljmp
mov
bound
out
pushf
inc
icebp
push
mov
imul
and
loopne
mov
xchg
push
push
fsubl
test
enter
mov
aam
sbb
das
mov
xchg
ds
jb
sbb
xchg
sahf
mov
sub
addl
jb,pt
mov
ds
xorb
xchg
add
lea
push
and
lods
or
inc
xor
rcrb
movsb
mov
mov
popa
pop
sub
movsl
xor
jge
outsl
jbe
ret
jmp
pusha
mov
xor
push
adc
adc
sbb
in
pop
pop
xchg
mov
jbe
push
pop
inc
inc
pop
adc
mov
ja
in
repz
fdivl
sub
mov
ja
addr16
push
adc
inc
loop
cmpsb
inc
sbb
loop
push
addr16
fsubrs
xchg
cwtl
dec
mov
xorl
jle
xchg
push
sub
pop
add
add
mov
pop
aad
fs
fstl
icebp
jmp
icebp
push
jg
add
jle
in
pop
shl
jp
sub
xorb
std
leave
push
aaa
imul
mov
cs
inc
adc
xchg
xchg
jbe
pop
pop
sub
pusha
pop
or
add
daa
es
loope
xchg
popf
clc
inc
push
jge
mov
xlat
pusha
add
cld
popa
imul
lods
xchg
pop
iret
popa
mov
in
insl
mov
and
cmp
add
add
cld
lret
ret
pop
lds
jo
repz
insl
sti
ret
in
mov
cltd
insl
sbb
xchg
add
imul
es
into
pop
lods
mov
imul
push
mov
loop
jns
lds
xchg
pop
aaa
cmp
inc
xlat
subb
dec
sbb
test
pop
or
xchg
das
inc
fwait
mov
jo
add
ja
addl
loop
dec
and
and
scas
sbb
sub
and
nop
addb
xchg
or
pusha
outsb
sub
or
xchg
dec
arpl
sahf
popf
inc
push
pop
sbb
and
cmc
inc
enter
enter
fistpl
loope
inc
mov
inc
sub
lods
pop
rolb
xchg
sub
or
push
xchg
and
std
pop
and
cltd
jb
and
repz
pusha
cltd
push
xor
xchg
jge
mov
in
testb
mov
add
inc
into
dec
mov
in
pop
push
pusha
aas
les
or
dec
lret
mov
sahf
push
mov
fs
mov
sbb
idivb
jmp
push
push
or
fisttpl
push
aas
loop
js
xchg
mov
cmc
pushf
mov
aaa
xor
insl
test
xchg
popf
sahf
cwtl
loop
mov
mov
pop
add
jb
xor
fiaddl
xchg
lock
or
pusha
stos
inc
ds
loopne
imul
mov
mov
dec
js
inc
popf
hlt
xorb
add
lahf
and
leave
rcl
stos
xchg
mov
xor
add
push
dec
rol
jne
daa
pop
xchg
std
push
fs
mov
out
out
mov
sahf
push
push
or
dec
mov
movsb
ret
movsl
xchg
sahf
sbb
mov
mov
push
popa
dec
inc
dec
adc
movsb
subl
out
sbbb
pop
repnz
xchg
jb
andl
push
out
jo
xchg
mov
push
inc
xchg
mov
sar
movsl
sub
ja
xchg
rol
jl
fnstenv
call
sar
ret
push
addl
xor
js
fsubl
mov
mov
gs
adc
insl
adc
xchg
loopne
hlt
pop
inc
cmc
push
sbb
icebp
mov
cmp
inc
mov
nop
mov
sbb
mov
xchg
pop
cld
xorb
mov
mov
ja
and
xchg
jl
push
mov
push
mov
jo
mov
lods
jbe
mov
cmc
test
and
dec
mov
add
sub
mov
xchg
inc
arpl
icebp
pop
cmp
mov
popa
jecxz
xorl
mov
add
out
sub
idiv
fcom
jecxz
std
out
push
pop
pop
std
cwtl
cmc
mov
scas
cmp
arpl
mov
mov
popa
add
pop
addr16
cwtl
jg
or
repnz
icebp
test
out
aam
pop
xchg
call
sbbb
xchg
lds
lcall
fists
cmp
lret
shlb
xlat
pop
bound
int3
pop
test
jo
test
jecxz
xchg
pop
stc
dec
xlat
in
mov
pop
scas
popa
js
cld
cwtl
js
jg
outsl
enter
inc
pop
iret
adc
movsb
scas
cltd
sbb
scas
out
xchg
pop
sub
mov
aas
outsl
filds
jno
arpl
dec
push
mul
repnz
cwtl
loope
ljmp
cmpl
mov
pop
cwtl
mov
dec
sbb
pop
and
pusha
sub
mov
fcomps
xor
mov
call
add
pop
lret
lahf
and
pop
xchg
sbb
sub
mov
cmpl
jp
test
pop
lahf
test
jg
mov
cmp
movsl
pop
cmp
scas
inc
jmp
add
jg
add
inc
shrl
and
push
popf
scas
es
aas
outsl
int
or
xlat
and
push
add
test
sub
xchg
pop
ret
inc
addb
mov
cmp
mov
lea
dec
test
mov
jmp
stc
xor
push
adc
fcompl
test
sbb
push
pop
mov
enter
push
xor
lock
or
add
cmp
ja
popf
iret
mov
jp
or
scas
inc
mov
hlt
pusha
pop
adc
aad
cmp
xor
xor
pop
addr16
cmp
xchg
sub
jmp
cmp
pushf
xor
daa
fwait
imul
xchg
push
push
sbb
outsl
stos
sahf
jle
lock
sbb
jle
orl
ss
es
inc
fs
sbb
jecxz
test
mov
sub
leave
mov
addr16
inc
notl
mov
push
pop
lea
out
rclb
push
adc
pop
out
or
inc
pop
cmpsb
enter
dec
sar
mov
dec
dec
pop
rcrl
mov
inc
pop
add
xor
pop
pop
push
pop
incl
mov
enter
push
sub
push
insl
push
jle
sub
and
cli
jns
or
mov
dec
add
addl
push
sbb
int
popf
xchg
sbb
das
leave
pop
add
into
mov
nop
lea
mov
insl
push
jnp
arpl
outsb
jg
push
mov
lods
push
fwait
cltd
mov
and
pop
ret
mov
jno
cmc
sbb
pusha
xchg
sbb
xchg
and
sbb
add
negl
sbb
fs
xchg
adc
mov
ja
xchg
or
imul
cwtl
and
aad
outsb
stos
dec
js
cli
sbb
cld
idivb
test
pop
xchg
lods
xor
push
sbb
cmc
mov
or
lds
pop
lods
pop
sub
jge
jnp
mov
pop
imull
jo
andb
mov
mov
jecxz
movsb
jle
imul
gs
push
mov
mov
aaa
stos
add
dec
in
leave
xchg
mov
loop
cli
xorb
jo
push
mov
rolb
add
and
lcall
repz
repnz
scas
addr16
add
cli
mov
sub
fs
fstps
out
mov
and
sub
imul
push
loop
pop
and
and
lcall
sahf
rcll
popl
lea
push
and
imul
ss
repnz
cwtl
mov
push
bound
sbb
mov
adc
and
loope
mov
jp
pop
mov
add
and
adc
leave
inc
mov
inc
js
cmpsl
jb
cmp
pop
ss
jp
leave
js
inc
jp
and
sbb
push
imul
icebp
sbb
fwait
xchg
xorl
stos
jle
mov
jle
sub
sub
cmp
mov
cmp
pop
mov
push
add
xchg
mov
mov
inc
mov
jne
push
popf
inc
push
aas
sbb
cmpsb
out
mov
jp
loop
push
cmp
cmp
mov
roll
jg
adcb
jne
aad
mov
mov
and
jo
test
jle
xor
nop
fwait
xchg
call
mov
cltd
sbb
cli
add
sbb
mov
mov
insb
and
pop
and
sub
xchg
pop
pop
push
mov
std
pop
push
cwtl
andl
lahf
insl
rcl
add
lcall
popf
sbb
add
add
mov
aaa
mov
sub
fiaddl
cltd
cmp
add
fs
jle
cmc
cmc
out
fmuls
pop
pop
outsb
data16
add
add
sub
cli
sbb
mov
mov
mov
jns
out
lock
push
add
pop
in
rcrl
xor
lcall
xor
cmc
sub
fldcw
pop
sub
out
fadds
jae
cmc
inc
push
rolb
jo
movsb
cmp
cmpsl
pop
lret
rol
jo
xchg
jo
cmc
andb
jmp
cltd
pop
pop
lahf
push
js
mov
xchg
popa
push
sbb
cmpsb
mov
cwtl
inc
and
push
add
and
jecxz
add
add
lods
pop
xchg
cmp
pop
jge
lahf
xchg
daa
pop
jmp
fidivrl
lret
scas
pushf
sub
cmp
or
mov
mov
jecxz
or
int
mov
and
or
mov
and
or
add
out
sbb
cmp
cwtl
or
mov
xor
jge
mov
jns
push
xor
rcll
dec
lds
or
xchg
pop
inc
xchg
sbb
arpl
mov
push
ret
aas
pop
push
loope
and
imul
lea
jno
dec
test
xchg
dec
add
push
adc
arpl
fwait
xchg
rcll
dec
and
cwtl
sahf
shl
loope
push
decl
mov
sub
lods
pushf
notb
add
pushf
popf
mov
std
jge
aam
adc
jp
bound
pop
adc
sub
pop
loope
ja
loope
test
mov
outsl
xchg
sub
or
inc
ficompl
or
xlat
repnz
xor
jecxz
movsl
jnp
mov
cmpb
rcll
fidivrs
cmp
mov
add
in
rolb
or
add
bound
sub
sarb
loopne
mov
cmpl
popa
pop
inc
cli
loope
adc
addr16
mov
repz
mov
xor
dec
and
addr16
jl
aas
and
jge
movsl
mov
leave
fmull
adc
or
mov
ja
pop
add
cwtl
pop
push
cli
movsb
mov
arpl
loopne
mov
and
cmp
fwait
shrl
jecxz
cwtl
cmp
mov
outsl
int3
rcrl
push
jo
xchg
mov
scas
xchg
mov
dec
mov
dec
inc
and
push
pop
adcb
ja
sbb
xchg
mov
xchg
gs
testb
fbstp
hlt
add
lret
jmp
repnz
repz
fwait
fs
mov
mov
mov
mov
fcomps
adc
xchg
lock
insb
movsl
pop
or
rolb
divl
repnz
sub
outsl
jmp
fiaddl
fisubrs
mov
pop
mov
icebp
sub
pusha
ja
mov
imull
sahf
or
mov
push
inc
aam
dec
insb
out
sub
adc
in
jns
add
fisttps
pop
daa
sub
scas
cwtl
cwtl
mov
push
push
cli
mov
stc
aad
xchg
aad
ja
mov
adc
arpl
xchg
or
loopne
mov
and
mov
mov
xchg
or
mov
sarl
ja
dec
add
mov
dec
lds
mull
push
je
pop
xor
cwtl
sbb
jmp
pop
push
add
mov
mov
mov
add
mov
fmull
jbe
fcoms
xor
lahf
insb
cli
mov
jmp
outsl
push
ret
mov
ja
pop
sbb
inc
pop
fmuls
scas
aad
jge
stc
lcall
rcll
inc
mov
jl
and
mov
lea
and
int
ret
pop
mov
sahf
push
pop
ja
push
jp
pusha
leave
add
divl
cwtl
scas
cmpsl
xchg
loop
aad
loop
orb
stc
cwtl
push
mov
mov
lahf
and
cmc
gs
mov
or
jge
push
cmp
inc
test
sub
sbb
mov
out
inc
js
xchg
mov
nop
pop
fadd
sub
sbb
cltd
call
push
jge
adc
or
cmpsb
in
insl
cmp
mov
test
aas
sbb
daa
lock
mov
mov
adc
mov
mov
sub
repnz
adc
and
fidivrs
mov
cltd
or
in
xchg
and
pop
sahf
fwait
add
ja
jle
ds
or
insl
and
inc
je
cmp
pushf
in
imul
das
mov
cmc
ficoms
sub
fsin
xchg
cmpsb
nop
jnp
and
jne
cmpsl
cltd
lar
adc
pop
data16
pop
pushf
xor
iret
cmc
aas
repnz
mov
ja
inc
fwait
add
mov
pop
movb
fcmovnbe
repnz
mov
jno
push
mov
jnp
dec
jp
inc
into
cmpsl
lea
adc
or
or
vmread
test
loopne
fs
das
fucomip
je
push
aas
cmp
jp
inc
fs
pop
sub
dec
aad
hlt
hlt
insb
in
out
cmp
ret
loop
add
pop
add
sahf
push
std
push
xchg
jle
ret
jae
inc
jecxz
adc
mov
mov
mov
pop
addr16
sub
fnstenv
sbb
ja
sbb
cmp
fldcw
push
and
jmp
fisubl
loop
or
in
rcrb
pop
xchg
or
cmp
push
repz
pop
filds
xor
sbb
repz
pop
xchg
pop
lcall
pop
mov
scas
jg
bound
jno
idivl
in
push
daa
fwait
shll
mov
insb
ret
lcall
push
sbb
clc
push
dec
addl
enter
jo
jbe
insb
int
into
enter
mov
outsl
out
mov
pushf
and
or
lret
pop
cmp
dec
sbb
and
xchg
push
pop
loope
repz
sti
mov
jge
mov
lret
pop
dec
sub
loopne
sbb
scas
inc
int3
sbb
add
cmp
or
xchg
outsb
xchg
xor
int3
push
jge
ret
popf
jp
ficoms
mov
and
lcall
fstps
ja
cmc
add
test
ficompl
mov
aad
sbb
cmc
xchg
addr16
add
dec
and
pop
sbb
ljmp
push
test
lret
rorl
gs
xorl
bound
stc
into
js
adc
push
cmp
js
ret
rclb
adc
pop
push
lahf
stos
out
sbb
std
fs
aaa
and
es
adc
inc
jecxz
insb
rcrl
jp
pop
xchg
cld
into
in
pushf
mov
jnp
xchg
sbb
loop,pn
push
sub
fbld
cmp
xchg
fdiv
cmpsb
ret
push
ficoms
mov
lcall
lods
sbb
sbb
js
lock
xchg
sbb
iret
cmp
repz
or
aaa
mov
bound
std
movsl
stos
xchg
test
imul
adc
xchg
mov
ja
dec
sbb
test
or
inc
xchg
fistps
adc
scas
cwtl
xchg
mov
mov
add
and
out
adc
and
cmp
jecxz
xor
jp
xchg
xchg
mov
sub
cmpsb
addr16
mov
pop
mov
pop
and
cmp
cmp
lret
movsb
xchg
add
lds
imul
addr16
mov
hlt
mov
push
ret
jecxz
adc
xchg
pop
xchg
sahf
fmuls
in
mov
jns
cwtl
repz
incb
mov
clc
mov
mov
pushl
out
das
lcall
lret
xor
popa
cmp
inc
ljmp
and
adc
in
lcall
clc
dec
xchg
sahf
xchg
loop
mov
pushf
jae
jae
aaa
loopne
adc
or
out
mov
pusha
inc
es
xchg
idivl
nop
adcl
rcl
in
in
cmpsb
jmp
cmp
mov
pusha
adc
pop
imulb
clc
iret
enter
mov
adc
xor
push
xchg
sub
test
fldenv
sti
and
test
iret
cmc
lods
push
xchg
xchg
lcall
je
push
rolb
leave
xchg
cwtl
pop
inc
repz
out
in
add
dec
repnz
lock
cmpsb
sarb
push
adc
mov
das
xchg
sbb
xor
rcll
jecxz
jge
arpl
nop
dec
and
xchg
xor
push
ljmp
cs
insl
or
add
adc
push
sti
inc
roll
mov
je
cmp
or
push
cwtl
cmc
lock
and
sete
test
lock
push
leave
sub
shrl
mov
int3
sbb
push
movsb
cmp
ficoms
pop
mov
xchg
push
inc
push
fidivs
inc
shlb
ret
es
push
xchg
sub
dec
jo
jbe
stc
dec
fwait
stc
pop
pushf
push
popa
dec
ret
and
and
jmp
imul
cld
cld
mov
loopne
adc
test
aas
mov
add
out
rol
pop
mov
push
or
shrl
dec
insl
dec
xor
and
xchg
sub
repnz
and
gs
mov
fwait
sub
popl
add
inc
clc
or
lea
pop
out
imul
jecxz
lods
fsubl
aad
imul
loopne
ja
pop
push
or
call
lcall
ret
addr16
pop
enter
adc
dec
inc
sbb
loop
mov
add
call
ja
pop
xchg
sahf
and
cmc
mov
mov
inc
mov
sti
or
or
add
shr
bound
push
and
adc
aaa
testb
loopne
add
iret
adc
sbbb
imul
sub
test
ja
aas
cli
lcall
push
mov
xor
in
jnp
mov
push
xor
and
into
fbstp
inc
popa
ja
jnp
movsb
jg
mov
mov
pop
add
push
sahf
faddl
sbb
mov
ja
push
mov
mov
mov
stos
mov
mov
jg
add
pop
fiaddl
mov
adcb
and
xchg
stos
stos
movsb
into
cwtl
jp
add
pop
dec
xchg
pop
adc
xor
cli
xchg
fisttps
ljmp
pop
lret
loope
inc
mov
out
mov
in
cmc
xchg
adc
mov
xchg
aad
loope
push
pusha
adc
addr16
insl
xor
jbe
scas
lock
cli
adc
sbb
mov
push
cmp
jne
pusha
fiaddl
dec
hlt
pop
push
shll
popf
cli
mov
das
sbb
clc
pop
jg
mov
adc
adc
add
fwait
mov
popa
jo
ret
add
inc
cmpsb
and
mov
push
loope
and
addl
push
mov
inc
or
insl
loope
push
sar
fbld
or
push
arpl
push
aaa
sub
mov
push
push
jb
or
adc
test
in
push
dec
push
add
inc
mov
test
ja
mov
cmc
xchg
mov
lds
fs
sub
adc
adc
jp
dec
sub
leave
push
mov
nop
and
enter
pop
out
out
popa
cld
fxch
sbb
adc
mov
je
or
sbb
or
lcall
fildll
aad
aaa
jp
xchg
pop
jp
inc
scas
add
fdiv
aad
jo
cmp
mov
and
and
dec
adc
iret
jg
mov
xchg
sub
fidivs
and
stc
lcall
jg
push
inc
pop
and
inc
dec
sub
xchg
mov
pop
inc
adc
inc
adc
inc
add
fidivs
mov
enter
cli
jbe
or
sarb
mov
nop
rorl
cli
or
lea
or
popf
mov
pop
loop
cmc
add
jns
inc
adc
mov
pushf
mov
add
cmpsl
lods
cwtl
mov
mov
push
ss
xchg
repz
pop
nop
aas
pusha
mov
addl
push
out
frstor
dec
xorl
shll
or
sbbb
lods
xchg
or
xor
insl
rorb
out
ja
mov
push
inc
cli
push
addb
arpl
and
sbb
movsl
test
cmp
notl
punpckhbw
test
outsb
push
xchg
lahf
out
fidivs
loop
push
or
imul
cwtl
sub
comiss
add
movl
or
cltd
addr16
sbb
popf
fwait
orb
jle
test
inc
scas
xor
popa
mov
xor
add
shr
inc
xchg
push
mov
stos
mov
dec
cmpsl
fwait
mov
nop
and
mov
int3
stc
or
subl
xchg
lret
andb
mov
testl
sbb
andb
ret
out
mov
sarb
pushf
pop
jp
cmp
push
rcrl
sub
in
shll
into
xor
mov
mov
frstor
lahf
popf
daa
jg
bound
add
and
fwait
les
mov
loopne
xor
iret
inc
roll
in
scas
xchg
roll
xchg
das
xorl
push
mov
mov
fsubl
mov
ss
cwtl
jo
sub
xchg
icebp
gs
sarb
test
sbb
iret
xchg
mov
mov
popf
and
xchg
lds
ret
add
sub
je
fstp
movl
inc
inc
ja
cmpsl
mov
gs
call
xlat
out
mov
mov
adc
vcvtsi2ssl
and
pop
jo
add
mov
pop
fidivs
pop
testl
pop
add
cwtl
test
pop
cld
imul
pop
pop
xor
xchg
pusha
xchg
stc
inc
out
add
mov
rolb
in
scas
cwtl
pop
or
pop
xchg
and
rcll
sbb
rol
jae
cltd
xlat
fimull
pop
xor
or
mov
shrb
mov
les
sbb
daa
xrelease
cmp
lahf
mov
rcrb
aaa
mov
dec
fimuls
dec
pushf
les
pop
cli
ret
push
xchg
mov
inc
pop
dec
shlb
and
ja
mov
xorb
xchg
mov
mov
cmpl
repnz
push
mov
test
jno
test
std
loopne
cmp
sbb
iret
test
icebp
sub
sbb
out
mov
jp
mov
mov
clc
lcall
mov
pop
add
adc
inc
scas
push
sbb
cmp
pop
andl
jp
adcb
xchg
nop
jns
lds
sahf
mov
sbb
stc
add
jmp
lods
mov
fs
xchg
push
mov
mov
clc
mov
cld
cmc
ss
pop
jne
mov
shll
mov
adc
fldcw
and
daa
cmpsl
mov
or
inc
or
push
bound
fnstcw
test
mov
sti
imul
push
cmp
scas
mov
mov
push
jg
mov
leave
push
mov
push
add
imul
cmp
xchg
cwtl
out
sub
dec
push
pop
xchg
stc
shll
mov
dec
mov
adc
lahf
sbb
pop
lock
ja
test
addr16
push
jno
fsubrl
sahf
fimuls
rcll
std
or
mov
or
add
out
loope
add
xchg
rolb
pop
xchg
and
xchg
movsb
andb
fwait
xchg
cwtl
xor
mov
cmp
cmp
sbbl
mov
loope
push
inc
xchg
sarl
sbb
icebp
je
fdivrs
ficompl
pop
inc
jl
cmc
jne
adc
add
cmc
fisubrl
ficompl
mov
je
into
xchg
push
fstpt
adc
cmp
mov
or
stc
add
rclb
mov
das
test
mov
js
ds
and
idivl
jo
dec
lods
int3
scas
mov
mov
push
loope
fists
lock
pop
pushl
imul
lcall
in
mov
mov
mov
sub
dec
pop
nop
push
ja
mov
ljmp
xchg
mov
mov
fsubr
sti
mov
add
jb
xor
push
xchg
es
and
pushl
lret
add
outsl
lret
or
lret
leave
mov
xor
lahf
mov
cmp
inc
push
mov
jle
pop
mov
lahf
imul
mov
add
pop
lahf
sub
addr16
test
mov
push
pop
xchg
ds
jecxz
outsl
aas
and
jbe
add
mov
push
inc
lahf
fs
mov
iret
add
inc
imull
push
out
addb
mov
mov
fcompl
mov
pop
or
jge
fdivr
jb
ret
dec
test
jo
lret
scas
lock
outsb
pop
mov
add
loope
pusha
push
jno
insl
lahf
mov
fdivs
rorl
ds
or
adc
xor
repnz
loopne
push
ret
xchg
ja
mov
adcl
adc
jnp
js
in
cli
fucomp
fistpl
stos
push
addr16
pop
pop
movl
xchg
pop
nop
mov
inc
stos
les
mov
mov
fcomps
jecxz
xchg
pop
sbb
idiv
lcall
cmp
test
add
js
pop
lcall
or
sub
fisttpll
pop
pop
mov
sahf
or
jl
adc
out
mov
imul
cmp
cmp
test
mov
dec
pop
push
test
lahf
icebp
imul
inc
subb
adc
imul
and
loope
into
inc
xchg
pusha
jno
sub
inc
addr16
and
jl
pop
out
xchg
pop
movl
loopne
addl
inc
or
inc
and
imul
lcall
pop
mov
jae
movsb
subl
jle
jnp
test
fmuls
inc
insb
and
arpl
jno
lock
daa
mov
mov
imul
mov
jnp
fwait
call
addr16
fcoml
add
faddp
aas
push
jns
xchg
lahf
shr
xor
xor
lods
lcall
push
pop
sub
cmc
add
xor
icebp
loopne
adc
repnz
pushf
scas
xchg
adc
mov
inc
add
xor
inc
fmull
or
adc
mov
sbb
push
orb
lret
inc
xchg
xchg
fnstcw
adc
add
cmp
sbbl
fs
cmpl
into
fwait
mov
lcall
xor
les
jg
xchg
fnstenv
ss
pop
repnz
lock
outsl
idivb
gs
in
aaa
jp
push
sub
aas
push
jg
test
cmp
scas
jno
or
pushf
outsb
mov
adc
cmpsb
mov
add
ja
adc
jl
or
es
and
clc
addr16
cli
enter
inc
sahf
popl
xchg
add
jno
fidivrs
jo
xor
andb
jo
and
mov
mov
into
adc
ja,pt
cmp
mov
rcll
clc
pop
loop
ja
dec
mov
int
repnz
mov
hlt
sub
les
loopne
mov
mov
data16
pop
jmp
jecxz
mov
sub
or
or
push
nop
and
pushf
aas
xchg
popf
dec
stos
mov
enter
fisubrl
test
adc
add
inc
sahf
and
bound
fsubrl
sbb
or
cmpsl
orb
pop
inc
nop
inc
cwtl
xchg
sbbl
incl
jno
inc
cmp
sbb
pop
pop
cltd
push
test
cmp
fbstp
repz
lock
add
iret
pop
sbb
xor
jnp
pusha
pop
loop
dec
mov
inc
adc
lods
pop
into
push
mov
lods
and
fsubrl
mov
and
std
lcall
add
daa
sbb
enter
xorb
sti
xchg
mov
popf
xorb
or
loope
mov
fists
push
test
andb
xchg
mov
fisubs
fwait
inc
in
inc
call
xchg
xor
andb
imul
inc
add
icebp
cmp
rcrb
xor
mov
adc
jg
cli
bound
pop
jne
cs
hlt
xchg
js
lcall
or
dec
std
xchg
std
andl
lock
pop
das
inc
cmp
ja
cmp
stos
repz
xchg
mov
es
orb
xchg
sbb
adc
shrl
fmull
add
jns
test
adc
test
jecxz
call
pushf
push
xchg
shrb
cmp
jp
jp
push
or
rclb
ret
insl
notl
mov
push
add
psubsw
mov
fsub
mov
icebp
inc
insl
add
sub
out
out
sbb
test
das
mov
mov
xchg
scas
add
rclb
negl
aas
js
mov
fcom
sub
mov
inc
cmp
inc
cltd
jp
and
add
mov
addr16
mov
xchg
cmpb
pusha
sahf
lock
fdiv
and
pushl
fwait
test
es
sti
xchg
and
dec
psubb
test
pop
pusha
push
aas
and
test
negl
subb
fcomps
inc
push
pop
fidivrs
jge
adc
xchg
mov
xlat
push
lcall
lcall
movsb
dec
in
testb
into
jbe
stc
cmpsl
movsb
fadds
cmp
rolb
push
fsin
loopne
je
dec
jecxz
adc
daa
push
pop
test
adc
inc
push
ljmp
cmpsb
movl
ret
stc
test
adcl
sbb
fcomip
call
xchg
enter
add
push
jle
pop
xchg
xchg
inc
add
loopne
or
sbbb
lds
stos
cmp
mov
or
movsl
test
or
mov
dec
fistpl
xor
mov
push
and
add
js
add
sbb
xor
imul
push
filds
mov
or
cmpsb
fists
sahf
fsub
fsubs
xchg
stc
das
jbe
out
stc
gs
daa
add
movsl
in
jns
mov
cmpsb
pop
int
sbb
shlb
inc
sbb
test
aad
cmp
outsb
pop
scas
push
push
xchg
add
mov
mov
js
loope
or
bound
data16
push
inc
sub
inc
jne
lea
or
xor
jne
in
decl
int3
mov
or
xchg
icebp
mov
das
ret
xor
jae
sbb
sub
jp
mov
mov
fmuls
sub
fimull
xor
scas
movsl
pop
cmpsb
shrb
stos
dec
mov
ficompl
push
movsl
or
sbb
ret
lcall
jns
fildll
sub
xchg
jbe
sbb
je
js
cmp
adc
out
or
ficomps
pop
cmp
mov
mov
int3
mov
sub
lahf
loop
rclb
movntq
out
fwait
xchg
inc
imul
test
sub
jnp
jb
mov
mov
jb
addl
sub
popf
shll
addb
daa
orb
mov
mov
inc
xchg
pop
and
or
dec
pop
pop
test
xchg
lds
or
roll
xchg
popf
mov
sbb
sahf
pop
loop
sbb
xor
jo
mov
adcl
add
jle
addr16
je
dec
and
mov
pop
push
shlb
dec
mov
out
mov
xchg
add
mov
pop
mov
sub
dec
mov
xchg
bound
fwait
bound
scas
pop
imul
dec
rcrl
ja
in
jle
adc
dec
or
cmpsb
push
test
push
fs
xchg
push
sbb
push
sbb
sahf
stc
ret
daa
push
sbb
sbb
push
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
lcall
jns
mov
inc
icebp
push
fs
jp
add
cltd
cld
pop
inc
push
xchg
movsb
orb
mov
xchg
in
mov
cmpsl
xchg
add
and
shll
pusha
cmpsl
insb
dec
adc
xlat
fdivl
fcoms
js
je
xor
mov
pop
popf
movl
pusha
jmp
lcall
decb
rclb
js
xchg
pop
xor
sbb
pop
xchg
addr16
rcrb
aad
addb
dec
push
rorb
aad
jae
adc
pushf
push
xchg
jae
cltd
in
sahf
and
cltd
pop
inc
xchg
test
sub
fndisi(8087
rcrl
movl
add
andb
roll
leave
xorb
in
push
cmpb
adc
cmp
shr
sub
jp
bound
xlat
jae
xchg
cli
sbbb
pushf
pop
lea
out
es
sbbb
pop
jo
pushf
pop
adcb
aas
test
repnz
push
push
fsts
ret
and
sbb
sub
inc
cmp
mov
sbb
mov
xor
push
sbb
lea
dec
push
adc
test
mov
xchg
mov
inc
lret
adc
outsb
jb
mov
adc
mov
jno
pop
push
dec
out
push
jae
jp
and
pop
or
test
repnz
addb
and
adc
test
mov
cwtl
adc
sub
inc
add
icebp
leave
int3
jg
enter
add
fldcw
sti
add
xchg
pop
sbb
rcrl
xchg
lcall
bound
je
loop
or
add
mov
mov
adc
xchg
fcompl
mov
cld
mov
push
push
shrb
aaa
faddl
bound
adcl
add
mov
mov
pop
cmpsb
xchg
sub
jae
cmp
arpl
subl
mov
stc
aas
cwtl
lods
in
inc
mov
inc
mov
xchg
adc
hlt
movsl
repz
addl
stc
xchg
outsl
push
mov
daa
push
out
add
and
jmp
cld
push
cmpsb
xchg
dec
jg
imul
jmp
mov
std
popf
xor
mov
sbb
xchg
fildll
xchg
push
pop
inc
or
shlb
lds
or
addr16
cmc
lret
jnp
fldl2t
sub
pop
cli
cmc
adc
insb
lcall
jl
mov
shr
and
fwait
inc
call
data16
jnp
jns
out
and
xor
stos
hlt
aad
mov
into
daa
lds
les
pop
xor
cmp
jl
scas
aaa
incl
inc
lar
xchg
fcmovu
dec
inc
loop
dec
and
cli
add
xchg
dec
loopne
mov
jno
subb
sub
roll
xor
test
rcrb
outsb
add
mov
jnp
adc
push
adc
adc
inc
cmpsl
push
addl
stos
clc
sbb
push
dec
push
andb
test
adc
mov
out
aas
imul
jle
out
movnti
mov
fs
sub
lds
fcomps
sub
xchg
icebp
pushf
mov
cld
pop
and
gs
addr16
enter
mov
mov
enter
loope
insl
sbb
mov
push
jno
movsl
gs
imul
cmp
aas
dec
pop
mov
and
test
daa
cmp
dec
fdiv
dec
sbbb
xchg
sub
fsubrs
pushf
or
lahf
aas
int
cld
cmp
in
adc
popf
jo
bound
and
pop
inc
mov
mov
stc
sub
dec
push
and
fcmovnu
arpl
jne
clc
dec
pop
or
mov
cltd
andl
jne
jae
aas
pop
sti
shll
jns
inc
ja
xor
pop
mov
rolb
outsl
sub
sub
addr16
mov
mov
push
mov
lahf
xchg
add
out
sbb
pop
pop
fadds
or
cmp
xchg
std
popf
mov
imul
sahf
inc
mov
push
cmpsb
jne
ret
mov
jg
nop
mov
shlb
and
or
inc
filds
sahf
pop
jne
fcoms
push
inc
outsl
lahf
inc
cs
outsb
inc
mov
mov
push
pop
xchg
sbb
mov
out
jp
cmc
test
nop
movsb
sub
addr16
mov
insl
mov
cmp
or
sbb
roll
lea
in
push
or
push
cltd
inc
sahf
sub
stc
xchg
dec
and
xchg
jg
add
inc
js
add
mov
add
inc
mull
adc
mov
popa
test
sahf
test
xchg
out
dec
rcr
push
jbe
loope
inc
dec
xor
lahf
fsubrs
adc
dec
jne
jbe
out
imul
bound
imul
dec
dec
xchg
sbb
repz
ja
mov
push
les
pop
iret
cmp
pop
mov
fisubl
addr16
mov
mov
pusha
sub
repnz
sbb
adc
inc
adc
or
daa
pop
repnz
jg
mov
sbb
test
push
xor
sbb
in
pushf
imul
les
cltd
cmp
test
addr16
add
fcompl
into
xlat
jne
cmp
int
jecxz
pop
imul
push
dec
test
or
repz
lock
sbb
sbb
imul
lret
or
xor
cmpsb
xorl
mov
incl
sahf
insl
les
inc
sub
cmp
inc
or
and
mov
mov
xchg
movsl
in
push
fwait
push
pop
lods
mov
push
mov
inc
pushf
sbb
or
test
shl
add
outsl
push
add
lcall
ret
dec
iret
xor
mov
and
sti
pop
mov
int
push
pusha
add
mov
mov
mov
arpl
cmc
insb
mov
push
aaa
mov
test
sub
adc
dec
adc
mov
jne
fmuls
xchg
mov
in
out
jb
push
test
stos
adc
sub
lahf
pop
loop
mov
mov
lds
lcall
lods
inc
cltd
jmp
add
xor
push
test
xor
lods
push
push
imul
and
pop
pop
mov
pop
daa
aaa
cmp
cld
leave
sbb
test
nop
ja
lahf
aam
loopne
mov
lock
dec
jle
sbb
adc
xor
mov
xor
flds
dec
pop
mov
mov
dec
lret
repnz
mov
test
faddl
inc
mov
pop
out
imul
xchg
movsb
lret
stc
loope
jecxz
xchg
or
das
lret
into
out
sub
xchg
mov
test
andb
push
fwait
lret
popa
pop
out
add
mov
mov
out
test
inc
mov
fsubl
add
sbb
sbb
inc
push
mov
popf
mov
mov
mov
fildl
cltd
ret
fldcw
in
dec
xorb
sbb
add
lea
push
jecxz
sarl
mov
sbb
lock
mov
inc
xor
add
out
jg
push
push
lods
aad
jl
test
fcmove
into
dec
test
push
xchg
movsl
or
cmp
mov
ss
mov
mov
mov
lcall
add
popf
test
ss
nop
push
cmp
xchg
or
sub
mov
or
sbb
lahf
jp
pop
mov
push
add
sbb
loopne
xchg
jge
cltd
insl
aam
sbb
push
mov
fdiv
sbb
jae
sbb
ja
inc
and
and
subb
mov
mov
leave
inc
xor
roll
xor
fisubs
ret
push
aad
popf
xor
popa
push
in
sahf
pusha
mov
rcrb
pop
push
mov
push
jge
mov
andl
xchg
pop
add
popf
xchg
jg
roll
or
xor
adc
jo
fsubs
push
mov
pop
mov
mov
sbb
xchg
fisubl
mov
add
subb
fsubrl
pushf
addps
sub
ret
xor
sub
cmc
fwait
jge
popf
jae
movsl
icebp
into
cwtl
out
and
push
cmp
jns
shll
test
ret
cmp
ss
add
stos
mov
sarl
mov
pop
cmc
push
push
fidivs
out
ss
rolb
mov
xlat
jp
pop
inc
sbb
add
mov
mov
inc
out
and
test
dec
std
pop
mov
add
mov
in
dec
lcall
pusha
lea
popf
adc
aas
pop
xlat
lahf
out
sbb
jb
lahf
sahf
sbb
je
mov
pop
xor
fwait
xorb
sub
push
xchg
imul
mov
and
mov
clc
xor
scas
sbbb
mov
push
ja
add
sbb
scas
push
ja
aas
or
cmp
xor
inc
stos
push
cmp
aas
stos
sub
das
jecxz
fidivrs
daa
cmp
pop
out
pop
call
cs
lock
push
fdivl
jp
and
xchg
rorl
mov
sar
popf
fs
cmp
sarb
pop
push
xchg
shll
pop
imul
pop
aad
cmp
scas
sub
xchg
imul
sbb
xchg
xchg
fs
clc
shlb
xchg
pop
jecxz
cmpsb
repz
fidivs
dec
bound
fldt
pusha
pop
cmp
cmp
xchg
adcl
cmp
pop
lods
or
mov
ja
cmp
fs
lods
iret
push
jge
sub
add
or
lret
xor
mov
in
push
push
cmp
sub
jge
imul
sub
mov
push
fsts
mov
push
scas
push
ficomps
subl
test
fdivs
mov
pop
dec
sahf
fcomp
sbb
and
pushf
dec
gs
jl
jmp
and
push
cli
sub
andl
mov
cmpsb
ds
xchg
movsl
out
and
sbb
mov
lcall
pop
imul
int3
xchg
mov
call
jle
inc
movsb
sbb
fidivrs
xchg
xchg
mov
loop
inc
cmpsl
gs
push
inc
fsubs
lret
iret
fyl2xp1
icebp
jl
stos
cmc
xchg
pushf
mov
inc
adc
es
iret
sarb
cltd
dec
inc
cmp
push
daa
xor
lret
mov
shll
loopne
cmc
lcall
and
repz
packuswb
xor
jle
pop
gs
lret
inc
xor
inc
daa
jo
and
jl
sti
jo
push
xchg
cmc
inc
icebp
fsubl
jnp
sahf
imul
inc
rorb
adcl
and
cmp
pop
jnp
stos
sub
or
out
lahf
enter
test
clc
test
xor
mov
fsubs
iret
ficoms
mov
or
arpl
mov
push
add
cmp
insb
jge
pop
xchg
pop
dec
sub
pop
and
sub
dec
jmp
sbb
cmp
outsl
jecxz
or
add
mov
sbb
push
bound
insb
test
push
inc
cmc
lahf
inc
jae
mov
test
xchg
jb
push
sbb
mov
sbb
shr
xor
lods
aad
out
cmp
cwtl
test
push
cmpsl
mov
inc
bound
xchg
xchg
orb
xor
mov
dec
nop
mov
xchg
mov
sub
push
fisttpl
mov
and
sbb
add
mov
out
fs
out
adc
jecxz
sahf
push
ds
mov
or
push
add
sbb
xchg
test
pop
lea
icebp
and
cltd
jp
cmc
aaa
inc
cld
lret
test
testl
jb
pop
repnz
gs
pop
test
fdivl
jge
iret
mov
add
ja
or
in
dec
mov
mov
jns
es
or
movsl
data16
jmp
in
leave
divl
xchg
xchg
negl
insl
lcall
jo
imul
fistps
cmp
jmp
stos
jmp
or
mov
jmp
scas
aad
sbb
pop
data16
int3
imul
push
fbstp
out
stos
imul
jmp
mov
or
test
out
jns
sbb
mov
xchg
xchg
xchg
sub
test
xchg
mov
sub
inc
push
add
xor
lods
xor
imul
cmpsb
xchg
das
addl
outsb
test
roll
std
orl
mov
xlat
roll
test
add
mov
fcompl
adc
mov
flds
inc
sahf
rcll
fistpll
pop
sahf
leave
xor
mov
mull
add
inc
rorl
sahf
push
adc
dec
mov
or
imul
mov
xchg
aaa
sbb
mov
pushf
ja
adcl
xor
xchg
fistps
push
fnstcw
jmp
adc
xchg
cld
mov
cmc
mov
cwtl
pop
into
sbb
test
xchg
sub
sbb
add
inc
jbe
out
in
pusha
int
push
mov
mov
out
jecxz
sbb
sbbl
movsl
push
in
out
daa
daa
es
rol
sbb
jae
imul
pop
sub
pop
dec
fidivl
into
imul
xchg
repz
mov
out
bound
inc
sub
pop
lahf
loope
pop
lahf
lret
or
cmp
sbb
mov
enter
sbb
cmp
mov
mov
cwtl
dec
sub
jecxz
aad
cmpsb
aas
fildl
in
and
or
jno
dec
fcomp
inc
or
xlat
pop
in
mov
xchg
inc
into
lahf
in
outsl
stos
pop
dec
xchg
jo
daa
adc
ds
sbb
loope
test
xchg
add
cmpsl
rcrl
fcomip
filds
fistpl
test
popa
sbb
push
mov
add
or
jle
mov
mov
xchg
movsb
jae
sbbl
dec
cwtl
inc
loope
lahf
inc
pop
daa
xchg
mov
adc
mov
push
push
out
gs
in
scas
jns
addb
pop
les
inc
pushf
sbb
mov
xor
loope
xchg
jp
push
jg
inc
jns
and
enter
test
push
pushf
inc
mov
fs
dec
jmp
sub
sub
enter
jns
out
push
or
hlt
out
and
mov
inc
mov
push
mov
or
or
out
add
ficompl
arpl
push
jmp
or
imul
xchg
sub
daa
cmp
pop
inc
out
notl
test
addb
cmp
rol
xchg
add
repz
xchg
mov
in
stos
and
mov
pusha
loope
add
shr
jb
imul
les
fsubrs
lcall
add
sbb
cli
mov
fisubrs
rorb
adc
sbb
lock
mov
jle
rol
cmp
stc
mov
das
outsb
pop
mov
push
inc
test
push
push
pop
or
into
loope
stos
mov
loopne
pop
mov
mov
xchg
jge
into
xorl
bound
sbb
pop
leave
or
call
dec
sub
adc
enter
jge
jp
bound
add
in
pop
and
sarb
push
loope
mov
jg
xchg
pop
push
adc
push
das
push
stc
pop
cs
lahf
nop
ja
dec
xlat
or
sub
mov
shll
ficoml
insb
mov
loope
sarl
pop
pop
cli
sbb
loop
rcrb
add
dec
inc
pop
and
sbbl
inc
fsubrs
inc
add
int3
sub
stc
or
xchg
popf
xchg
mov
jae
inc
sub
or
add
jnp
arpl
adc
icebp
enter
fwait
adc
push
mov
pop
inc
sbb
lods
stc
xor
push
cmp
mov
pusha
xchg
xor
imul
sub
repnz
sub
adc
imul
std
mov
push
sub
jno
inc
cmpsl
pop
inc
test
cmp
bound
fisubrl
xchg
out
push
test
jb
fadds
repz
add
jae
xchg
xchg
orl
add
outsb
loop
sub
push
inc
add
pop
loopne
sub
sahf
or
add
in
or
pop
add
sub
cltd
jp
ret
inc
sti
movsb
add
insl
mov
pushf
and
out
sbb
xchg
add
fstps
xchg
ljmp
dec
jb
pop
push
lahf
popf
repnz
pop
mov
int3
sbb
adc
pop
pop
jge
rcl
orb
pop
dec
sbb
mov
cmp
lcall
popa
loop
lahf
loopne
repz
ja
fnstsw
adc
fbld
push
pop
lcall
std
test
das
or
ja
sbb
cmovo
mov
or
test
outsl
loop
add
and
mov
ja
push
pop
pop
add
dec
sti
jae
sbb
adc
xchg
mov
mov
sbb
outsl
pop
lcall
dec
mov
mov
inc
andl
into
xor
xor
cmp
repz
mov
xlat
je
sbb
push
pop
stc
mov
mov
xchg
out
out
sbb
cmpsl
jb
aaa
fwait
jle
xchg
lahf
ret
cmpsl
fistps
arpl
or
jg
test
and
mov
repz
lock
cmp
sbbb
mov
xor
sbb
or
jge
pop
mov
jno
out
mov
dec
imul
cmp
and
lcall
jae
inc
pop
scas
or
cmp
adc
ror
orb
sbb
adcb
cmpsl
fadds
in
jns
sub
inc
test
call
enter
popf
addr16
fadds
lahf
lret
pop
mov
jg
repz
inc
adc
and
movsl
pop
mov
cmp
enter
sbb
xchg
mov
sub
cli
sub
lahf
jmp
fildl
icebp
mov
pusha
jp
xchg
cmpsb
add
xor
mov
ljmp
inc
dec
rcl
push
cs
mov
push
mov
mov
scas
lcall
pushf
pop
mov
jg
sbb
jp
dec
cmc
push
dec
in
push
xchg
add
add
push
push
fsubrl
push
mov
mov
xor
jne
aad
outsl
call
cltd
cmc
xchg
add
daa
xchg
test
imul
imul
mov
lahf
cmp
inc
fbld
cltd
pop
pop
push
das
push
clc
inc
imul
sub
xchg
mov
mov
repz
inc
mov
add
test
outsl
mov
or
mov
push
dec
or
and
jg
inc
or
pop
xor
fadds
movsl
cmp
sbb
sbb
inc
cmp
mull
xchg
xchg
sbb
adc
add
lcall
sbbl
sbb
js
xor
mov
jp
lcall
or
fwait
dec
jno
add
sbb
cmp
inc
pusha
test
mov
pusha
aam
cmp
push
incb
mov
cmc
pop
stos
dec
out
pushf
sbb
or
fyl2xp1
mov
adc
sti
push
inc
push
loopne
inc
sbb
jb
sahf
cmp
frstor
loopne
push
mov
outsb
fidivl
addl
jne
mov
push
clc
xchg
jnp
adc
dec
xchg
mov
add
add
enter
inc
push
sbb
stc
lea
push
icebp
jno
cmp
push
jmp
xchg
scas
xchg
sbb
add
nop
cmp
xchg
aas
jo
jecxz
push
mov
cli
out
lret
push
mov
sbb
xchg
out
cs
jg
add
andl
sbbb
bound
das
dec
loopne
sbb
lods
into
shll
sahf
push
pusha
and
add
arpl
stc
ret
and
mov
cmpsb
add
mov
sti
mov
dec
xchg
fbld
popl
lods
push
les
iret
pop
xchg
fldenv
pop
adc
and
jge
dec
lods
adc
fsubr
pop
pop
mov
jae
push
sbb
ret
movl
test
dec
jmp
mov
sub
jmp
sub
mov
cmp
mov
imul
pop
rorl
sbb
iret
sbb
push
movsl
in
sub
xchg
sub
push
fwait
add
adc
scas
push
aas
cmp
shr
lret
pusha
rorb
in
mov
pop
mov
dec
addl
adc
or
filds
movsb
out
aas
imul
jge
lcall
ds
repz
popf
repnz
dec
mulb
popf
inc
adcb
nopl
push
add
pop
pusha
push
mov
jl
mov
inc
roll
sbbb
mov
mov
int3
add
dec
push
lahf
test
fwait
or
in
fsub
sub
test
arpl
cmp
shll
pop
dec
mov
ljmp
dec
push
repnz
jecxz
das
imul
mov
outsl
push
dec
ret
jns
call
add
fs
pop
push
inc
imul
jbe
add
lcall
push
xor
mov
lds
xchg
rcl
repz
mov
fneni(8087
jmp
call
or
inc
mov
and
add
jecxz
ja
sbb
xchg
hlt
lcall
push
xchg
add
jo
lahf
shl
ficomps
xchg
jp
push
and
cmp
sahf
dec
shr
and
movsl
loope
mov
inc
push
xchg
popf
jns
daa
pop
int
sbb
addl
fs
stos
jb
xorb
lahf
das
lahf
push
rcr
lret
shll
subl
jp
int
mov
stc
adc
jmp
cmp
jmp
in
fs
sub
xor
test
enter
sbb
mov
dec
repnz
outsl
fisubrs
dec
cmp
adc
or
testb
cmp
out
jl
lret
arpl
adc
jecxz
iret
ret
xchg
pop
jnp
jne
cltd
jg
add
popf
sbb
or
xchg
pop
add
sub
ja
pop
sbb
mov
mov
jbe
jo
jp
sub
jns
loop
dec
clc
and
inc
scas
push
sub
push
xchg
inc
ret
or
jno
test
lcall
aas
in
lahf
cmp
xor
inc
and
mov
push
leave
push
ljmp
inc
xor
pushf
mov
lret
add
dec
negb
jae
push
xchg
mov
mov
mov
mov
mov
sub
insl
arpl
push
addb
sbb
inc
mull
xlat
loope
sbb
div
dec
pop
jl
jle
dec
loopne
cld
cli
inc
adc
cltd
mov
aas
shrb
mov
jmp
adcb
shrl
dec
fldcw
loopne
cld
lcall
lods
fldcw
jnp
or
push
jb
mov
gs
cmp
cmc
xchg
js
sbb
push
xchg
test
mov
data16
loop
mov
push
aas
mov
pop
cli
pop
mov
clc
push
push
loop
ja
xchg
test
mov
and
adc
jo
xchg
ja
pop
sbb
sbb
dec
cmc
cmp
gs
test
paddd
adc
lahf
push
xchg
mov
movsb
cmp
test
jge
jmp
push
ss
inc
les
loop
insl
bound
outsl
insb
push
daa
cmp
mov
sbb
add
mov
pop
test
push
cmp
sahf
rcrb
hlt
xchg
pop
les
ret
pop
dec
add
sub
stos
mov
lcall
cmp
stos
inc
rolb
dec
out
bound
repz
bnd
lea
jp
xchg
push
or
lcall
and
cmp
pop
negl
mov
imul
sbbl
rorb
jp
inc
sahf
arpl
push
jg
test
stc
jnp
push
jmp
push
mov
sbb
mov
ret
arpl
or
jns
xchg
jge
mov
divb
aaa
mov
vpdpbusd
clc
pusha
js
add
in
inc
mov
rcr
and
or
cmp
xchg
stc
and
jns
cli
push
ja
adc
inc
mov
add
push
ja
mov
xchg
pop
aas
jbe
and
js
imul
mov
ja
insb
push
test
push
ret
push
addr16
jecxz
cli
es
sbbl
xchg
dec
bound
imul
lcall
addl
sbb
fistps
mov
or
mov
pop
xchg
ds
inc
add
fs
pop
cmp
mov
mov
orl
popa
mov
jnp
dec
les
fwait
and
xchg
pop
lret
and
mov
and
addr16
push
stc
mov
addr16
push
mov
cvtps2pi
fcoml
mov
adc
or
daa
push
hlt
xorl
adc
push
lret
pop
scas
add
pop
imul
rcr
xchg
into
sub
mov
stc
dec
in
or
and
aaa
mov
sub
mov
mov
aas
or
rcl
fadds
insb
mov
aad
out
mov
fs
dec
fstpl
and
lods
fsts
lcall
mov
jecxz
dec
mov
mov
cmp
fs
mov
pop
in
jnp
outsb
rolb
cmp
dec
jg
lock
cld
cmp
pop
sbb
and
shl
cs
das
aas
xchg
mov
out
inc
lahf
fidivl
rcl
lcall
movsl
test
push
andb
shrl
lahf
mov
lcall
pop
push
mov
cmp
ficoms
mov
mov
enter
mov
jo
sbb
sub
cmpl
adc
sbb
fsub
mov
mov
mov
inc
mov
and
mov
jb
jg
and
sahf
mov
xchg
sbb
mov
out
xchg
or
fadd
sbb
cmp
sbb
aaa
popf
call
inc
pop
mov
push
in
push
sub
push
sub
scas
adc
sub
pop
xor
pusha
adc
hlt
fcoml
sbb
mov
mov
jmp
lcall
mov
out
cmp
pop
out
addr16
xchg
aam
rorb
sahf
enter
in
xchg
cmp
mov
add
loope
cmpsb
jns
stc
jp
cwtl
dec
out
sub
cltd
lea
sub
xor
xchg
cltd
add
in
jae
jmp
mov
popf
mov
add
or
nop
inc
and
lods
in
and
out
pusha
pop
mov
adcb
or
lods
inc
jo
test
stos
popf
cwtl
jecxz
pop
cld
fcompl
pusha
xlat
dec
sbb
jle
sbb
movb
pop
xchg
mov
cmp
insb
cmp
mov
scas
in
sahf
push
and
mov
add
sbb
test
push
sbb
test
add
mov
rol
outsl
shl
sbb
xor
and
add
pop
mov
mov
nop
inc
pop
or
inc
test
lea
icebp
scas
inc
xchg
pop
jo
mov
sbb
push
sbb
adc
push
arpl
js
xchg
pop
popa
jg
inc
jne
mov
push
shlb
lds
mov
sub
jmp
push
cs
jecxz
ss
adc
mov
nop
in
dec
push
nop
int
push
push
leave
mov
daa
movsb
push
ret
scas
mov
mov
cmp
jno
popa
std
sarl
inc
and
inc
cld
addr16
and
and
inc
mov
addl
pusha
stos
xchg
mov
pop
js
bound
push
cltd
xchg
test
ja
and
mov
shr
mov
xchg
pop
lahf
insl
pop
pop
pmuludq
leave
popa
ret
sub
xchg
sbb
loop
cmp
es
sahf
sbb
and
je
xor
ja
push
bound
mov
adc
mov
es
sbb
cmp
jne
adc
xor
gs
or
shrb
andl
int3
sbb
test
into
pusha
lcall
mov
test
jge
or
in
imul
xor
cmp
jecxz
call
cmp
fstpl
aad
scas
mov
jge
xor
fcompl
mov
das
pushf
fnstenv
sub
rcrl
cmp
xchg
icebp
bound
mov
sub
cmpb
jae
and
out
aaa
outsb
fidivrs
inc
icebp
out
xchg
mov
and
fistps
cltd
mov
push
adc
lret
fld1
sub
adc
push
and
pusha
xchg
mov
inc
fidivrs
stc
arpl
ffree
lea
add
add
ss
and
dec
xchg
test
or
push
mov
pop
aad
mov
scas
sbb
mov
pop
mov
dec
inc
loope
dec
inc
xorb
in
adc
jno
jb
add
jnp
push
sub
int
out
and
mov
xor
push
insb
lea
xor
add
jae
mov
rolb
and
ret
push
divb
and
arpl
add
sbb
push
bound
and
rorl
cmpb
jae
andl
xor
sbbb
jge
loope
shll
lcall
daa
fstpl
add
mov
add
loope
mov
aas
clc
jb,pn
into
ja
adc
add
pusha
jo
jne
pop
or
add
adc
adc
lret
lcall
jp
mov
push
out
mov
loope
jmp
pop
cmp
int3
sub
inc
pop
adc
pop
mov
xlat
fwait
xor
cld
test
xchg
pop
test
xchg
mov
daa
ret
cltd
mov
ljmp
sbb
xchg
mov
cmc
popa
fsubrl
movsl
push
ficoms
cwtl
vmaxss
or
jecxz
jb
mov
adc
mov
movsl
push
movsl
out
cmp
scas
fwait
arpl
insl
xchg
lahf
mov
jb
xor
stc
push
mov
icebp
dec
into
jno
xor
adc
pop
mov
sahf
mov
mov
inc
jb
or
pushf
repnz
pusha
stc
cmpl
sahf
sub
mov
into
push
jnp
add
add
and
cmp
add
fidivrs
jmp
jl
cmpb
push
jp
ljmp
xor
stos
jg
stos
xchg
dec
or
mov
xchg
leave
ja
pop
outsb
inc
sbb
hlt
mov
or
jmp
orb
cld
test
aas
int3
mov
push
or
pushf
jns
sbb
repnz
or
jg
or
outsb
mov
add
inc
subl
insl
mov
mov
daa
int
pop
pavgw
dec
in
aas
add
jge
xor
add
adc
mov
mov
fs
inc
fisubrs
lea
mov
imul
out
xor
je
or
daa
repz
mov
jnp
cmp
jle
mov
sub
bound
pop
cmpsl
ljmp
adc
inc
fwait
and
sbb
fdivr
ret
lods
jecxz
cltd
adc
add
sbb
addl
sahf
mov
insb
ds
ret
sbb
and
fwait
leave
sbb
fyl2x
lcall
lcall
dec
wbinvd
cltd
ja
loop
sahf
test
sbb
xchg
outsb
push
and
outsb
inc
jl
cltd
push
movsl
cmp
insl
leave
lfs
movsl
mov
icebp
mov
adc
mov
test
push
push
and
addr16
inc
inc
mov
das
add
sarl
and
cwtl
outsl
jmp
mov
dec
cld
xor
fbld
push
mov
mov
and
adc
jae
sub
inc
andb
cmpl
repnz
fwait
add
sbb
and
xchg
sbbb
and
mov
mov
jle
insb
inc
test
adc
adc
scas
xchg
inc
mov
enter
addr16
sbb
adc
ja
ret
jb
ret
xor
jg
out
imul
out
imul
inc
mov
push
rcr
notl
or
push
push
test
cmp
lea
mov
aam
pop
and
add
imul
call
stc
dec
cld
pop
xchg
jecxz
pop
dec
popf
add
push
xor
les
adc
mov
xchg
leave
jo
test
fildll
rcrl
xchg
inc
inc
ja
enter
nop
daa
scas
clc
data16
inc
fbld
fisttps
or
mov
fwait
mov
dec
sub
leave
xchg
inc
test
mov
imull
jle
push
mov
mov
push
lods
int3
sub
call
mov
insl
out
rcrl
cmp
xchg
scas
xchg
mov
sbbl
outsb
lds
sub
imul
and
xchg
mov
dec
push
xchg
cmp
mov
aaa
popf
sbbb
rorb
mov
lcall
das
push
mov
pushf
imul
dec
mov
jns
addb
xchg
or
hlt
push
inc
inc
imul
bnd
push
ljmp
push
push
sahf
ja
out
xchg
ljmp
push
jecxz
cmpsl
mov
scas
fwait
or
out
pop
lds
cmp
or
xorb
test
and
mov
fadds
xor
mov
mov
test
inc
cmp
test
roll
dec
nop
ss
iret
xor
lret
jp
sahf
repnz
mov
sahf
adc
push
mov
mov
mov
mov
addr16
xchg
mov
push
inc
push
inc
mov
push
pop
mov
inc
and
in
or
and
mov
dec
push
lods
scas
arpl
iret
bound
or
mov
add
mov
hlt
inc
xor
in
and
test
sbb
jae
into
add
imul
into
pushf
lds
incl
jl
mov
push
jle
jb
push
cmc
popa
outsb
adc
mov
repz
mov
push
pop
sub
lock
add
repz
mov
mov
jno
roll
test
ret
push
out
icebp
and
sbb
pop
xor
cld
inc
int3
inc
mov
mov
push
mov
and
es
sbb
popa
sahf
cs
inc
sub
dec
xchg
mov
pop
pop
xchg
popa
outsl
cmc
cmpsl
adc
emms
lahf
fcompl
mov
in
push
push
mov
es
repz
filds
and
aas
clc
cmc
mov
rcrl
push
out
lcall
addr16
push
sarl
or
sub
push
add
fsts
push
jne
insl
mov
lcall
idivb
aas
fsub
mov
and
mov
test
mov
sti
lds
xchg
push
cmc
stos
adc
mov
cli
push
jb
push
ds
adc
iret
in
jmp
and
inc
sbb
jl
ds
andb
jp
movsl
cmp
nop
jno
mov
dec
aas
sub
xchg
clc
xor
and
adc
jns
movsl
xor
mov
mov
dec
imull
daa
mov
lods
sahf
in
sub
les
and
push
sar
add
das
shr
xchg
cmp
cmp
out
pop
bound
sbb
cmp
dec
xchg
pop
xor
ret
je
scas
lahf
add
call
mov
push
pop
jle
and
fwait
loopne
insl
jg
pop
movsl
fcomip
mov
addl
sub
add
lcall
or
mov
leave
and
andl
mov
push
std
and
rol
jb
cli
push
or
hlt
dec
pop
lods
sub
cld
jne
and
in
mov
inc
mov
dec
dec
xchg
pop
je
pop
setge
jns
popa
push
test
out
and
inc
push
mov
js
jbe
js
addr16
pop
lock
mov
stc
inc
pusha
pop
mov
inc
andl
add
lods
and
testl
shll
js
mov
pop
lds
pop
icebp
xorl
mov
sbb
ljmp
das
dec
loop
jecxz
pop
js
icebp
mov
fwait
test
nop
sbb
mov
xchg
push
aaa
and
lods
adc
mov
fwait
outsl
mov
lcall
mov
xor
fstpt
imul
sahf
orb
xchg
sub
stc
sbb
pop
mov
imul
add
ss
lret
outsl
js
dec
mov
push
pushf
out
xchg
arpl
icebp
cmp
push
outsb
shll
or
cmp
sarl
mov
lret
mov
fdivl
xchg
mov
das
cmpl
push
xor
and
fwait
add
aas
negb
cmpsl
lds
add
addr16
push
outsb
cmp
inc
jle
jmp
loopne
adc
add
cltd
push
dec
sbb
xchg
aam
pop
cmpl
mov
xchg
inc
sbb
xchg
lea
mov
jmp
ja
adc
sbb
pop
xor
addb
and
xor
inc
push
pop
mov
or
push
stc
lcall
xchg
inc
adc
inc
ret
cs
pop
or
daa
or
push
jecxz
mov
and
sbb
in
push
stos
lahf
sub
or
scas
adc
pop
jg
lahf
xor
push
inc
ret
bound
arpl
push
lock
roll
aas
jecxz
lods
sahf
hlt
clc
ds
out
in
sbb
lahf
sub
mov
dec
imul
ljmp
push
jle
in
sbb
dec
adc
push
xchg
subl
sub
fmull
int3
mov
mov
inc
push
xchg
bound
xor
add
out
cwtl
dec
xor
or
push
idivb
mov
lock
inc
shlb
or
faddl
pusha
ja
push
call
das
dec
inc
jno
lcall
adc
xor
shrb
sbb
out
adcl
test
sub
push
loopne
cmc
pop
cli
push
js
jp
scas
xor
out
outsl
jbe
mov
xor
add
pop
fs
add
ja
call
sub
add
xchg
dec
mov
dec
aaa
mov
push
jbe
ret
out
sarb
cmp
out
aas
sbb
dec
xor
lahf
lods
mov
mov
repnz
sub
jge
mov
xor
out
mov
iret
dec
lods
sti
cli
or
add
pop
rcrl
pop
test
inc
push
pop
push
push
pusha
add
mov
orb
popf
out
push
loopne
mov
sbb
xchg
lahf
xchg
aam
push
or
mov
xchg
push
mov
push
or
and
mov
xor
jecxz
fcompl
dec
sub
or
in
and
popa
cltd
adc
and
loop
lea
inc
mov
cwtl
popf
mov
je
push
push
cmpl
xor
inc
inc
fmull
repnz
pop
repz
cli
icebp
mov
out
nop
repnz
cmp
jecxz
scas
xchg
add
or
rcrb
xchg
test
mov
sbbb
xlat
imul
dec
mov
and
pop
push
jl
mov
dec
sti
movsl
push
cld
jb
cld
cmp
adc
ret
xchg
pop
and
adc
test
pop
xchg
lcall
or
adc
xor
stc
jmp
xor
mov
sbb
int3
and
or
mov
inc
mov
adc
push
xor
cmp
or
xor
in
jg
sbbb
fs
lcall
mov
js
xchg
stos
adcb
cmp
and
mov
enter
neg
or
jns
mov
clc
popa
pusha
pushf
adc
jae
mov
fwait
addb
jp
je
enter
push
mov
or
and
mov
popa
add
sub
scas
inc
les
popf
pop
loopne
xorb
xchg
pop
add
rsqrtps
mov
inc
js
adc
xchg
daa
add
aas
sub
aad
inc
cmpl
jp
rcrb
jg
or
mov
adc
jecxz
nop
sbb
adc
add
hlt
ja
int
pop
or
sahf
pop
bnd
mov
addr16
fwait
sahf
mov
cmpl
and
dec
cs
push
sbb
ds
mov
int
pop
mov
inc
ja
inc
addr16
imul
push
pop
mov
scas
jl
ja
mov
or
pop
dec
mov
ficomps
scas
jbe
mov
fsubs
jbe
lahf
jp
mov
add
lods
sbb
pop
xchg
bound
inc
pop
add
xor
fs
pop
add
push
test
and
dec
jbe
dec
adc
jae
test
std
jns
sarl
jecxz
dec
cmp
push
adc
or
repz
aad
mov
sub
adc
pop
xchg
inc
push
out
mov
lock
in
sbb
mov
bound
cmp
pop
leave
fldl
pop
mov
es
mov
test
mov
pushf
out
and
push
fildll
mov
ret
rorl
pop
dec
scas
inc
or
push
sar
filds
cwtl
ds
stos
add
sub
addr16
inc
and
scas
inc
lcall
ljmp
insl
jg
jno
sahf
addr16
popf
add
push
add
xchg
je
cmc
ret
pop
xor
rcll
mov
inc
hlt
mov
mov
mov
ret
jb
inc
sub
mov
rorl
lock
xchg
push
xor
hlt
lods
outsb
imul
rcll
mov
sahf
add
jns
cmp
mov
bound
adc
dec
mov
sub
adc
or
lret
in
bound
add
mov
mov
aad
add
sub
aaa
aas
adc
movsb
outsl
sahf
cmp
jmp
adc
push
xor
fisubs
sub
xorb
or
push
test
hlt
dec
jo
cwtl
out
out
and
mov
mov
lret
xchg
popa
mov
jb
jb
sbb
add
repnz
or
add
mov
adc
fimuls
andl
mov
lock
aas
and
test
mov
mov
sub
mov
ret
mov
jp
mov
orl
xchg
fwait
pop
or
rclb
stos
ret
loop
sbb
enter
sub
jbe
jle
ja
fs
jl
sub
scas
stc
xchg
xor
pop
sub
mov
subb
outsl
outsb
fneni(8087
push
xchg
pop
repz
mov
push
pop
inc
push
xchg
bound
push
pop
pop
inc
mov
dec
lcall
pop
pop
inc
and
cmpb
sbb
push
xchg
mov
add
ret
and
lods
dec
pop
les
adc
cmp
lock
jle
imul
sub
pop
loope
pop
lahf
dec
fistps
or
sbb
sbb
sub
jecxz
ficomps
pop
and
jecxz
ja
lret
pop
out
adc
lods
repnz
mov
pop
in
rcll
jno
adc
xchg
sbb
dec
std
jae
mov
popa
add
inc
imul
pop
and
add
les
sbb
mov
inc
mov
or
mov
xchg
aaa
dec
lahf
nop
inc
imul
pop
movsl
test
jle
mov
mov
sub
sbb
lret
and
or
popl
adc
jl
mov
lea
mov
test
aas
jp
sub
sbb
popa
mov
addr16
loope
popf
mov
add
leave
insl
nop
mov
ja
in
or
or
das
pop
inc
decb
popf
xchg
ljmp
cmc
bound
jl
fistps
rorb
loope
and
lcall
sbb
dec
inc
test
mov
sub
aas
xchg
and
jp
mov
xchg
or
shll
and
pop
loopne
bound
adc
xchg
pop
mov
inc
fcmovnb
ja
and
fimuls
jp
mov
or
cmpsl
daa
mov
mov
fnstcw
push
mov
jmp
jnp
jecxz
add
jecxz
outsl
push
xchg
sbb
mov
xchg
xor
fs
and
inc
fidivs
fs
mov
dec
pop
pop
or
push
jae
lock
test
inc
daa
mov
sti
mov
cmpsb
scas
pop
lods
test
add
fldenv
sub
je
mov
repnz
call
icebp
scas
sbb
fldl
repz
pop
cmp
shll
adc
add
mov
repnz
shlb
lods
ds
xchg
ficompl
insl
lcall
enter
repnz
ret
jns
dec
inc
imul
shr
imul
clc
sbb
shlb
shll
call
in
jg
sbb
insl
cld
and
jo
mov
inc
test
adc
addr16
sbb
test
jb
push
add
dec
mov
test
jle
lahf
and
aad
daa
fstps
adc
jnp
nop
inc
pop
lahf
test
pushf
popf
loop
mov
add
dec
ret
and
pop
lahf
mov
shll
adc
addl
scas
or
adc
outsl
rcrb
lahf
mov
filds
cmp
mov
push
pop
scas
fs
call
and
adc
jg
sahf
inc
pop
mov
dec
pop
lds
loop
mov
mov
loope
or
mov
pop
push
jns
inc
or
fstps
dec
aas
lahf
pop
pop
xor
xlat
popf
dec
lret
xchg
push
xor
int
rol
xchg
sbb
jbe
push
cmp
outsl
mov
xacquire
out
outsl
pop
test
shl
and
cmp
stos
cld
mov
inc
fwait
rclb
pop
push
outsl
xchg
addb
inc
popa
xchg
push
rcrl
repnz
lods
lds
mov
push
mov
xor
jmp
add
jg
jmp
into
jp
mov
mov
xlat
mov
jg
lahf
popa
sbb
push
rorl
cmpsb
stos
inc
jns
fidivrs
hlt
pushf
mov
ret
fstpt
cs
xchg
pop
lock
out
adc
adcb
lock
jmp
das
lods
sbb
mov
cmp
fiaddl
mov
lahf
mov
push
jo
sbb
jp
cmp
dec
out
iret
pop
pusha
push
push
mov
xchg
push
sbb
adc
pop
jb
arpl
mov
cmp
and
mov
inc
dec
and
mov
call
xor
or
xor
popf
ljmp
and
test
xorl
imul
std
mov
xchg
pusha
mov
fwait
mov
adc
clc
add
movsl
mov
push
cmp
cmp
les
into
inc
or
ficoms
inc
inc
mov
hlt
add
shlb
mov
sbb
and
push
push
inc
out
fldl
sbb
not
cmp
xor
shlb
jmp
divl
lcall
push
lret
jp
out
dec
mov
inc
insl
push
xlat
push
mov
mov
and
jae
insl
add
stos
cmpsb
jl
push
mov
pop
mov
mov
push
je
scas
in
adc
jne
in
inc
sbb
cs
xchg
mov
loop
pushf
xchg
incb
std
dec
xor
ds
pop
test
cmpsl
data16
rol
call
in
mov
mov
orl
xchg
pushf
iret
jg
pop
fidivrl
imul
dec
jl
imul
rol
xchg
fsts
inc
fwait
shrb
push
add
test
jp
xchg
sti
push
popf
movb
test
jp
mov
mov
xchg
lods
leave
fiadds
fistpl
push
jno
fisubs
aaa
mov
push
fwait
mov
mov
xadd
faddp
mov
cli
outsb
inc
iret
jge
cli
sbb
xchg
inc
scas
fsubp
lcall
mov
sti
stos
mov
xchg
inc
sahf
xchg
adc
pop
add
mov
scas
pushf
mov
js
push
aam
or
es
andl
xchg
sub
in
mov
push
mov
add
adc
daa
add
and
imul
scas
les
in
test
jb
shlb
fsts
pop
inc
push
jo
adc
inc
fisubl
int
sbb
mov
dec
inc
lea
hlt
fisubl
xor
inc
mov
pushf
inc
pushf
push
pop
ss
pop
pop
dec
stc
inc
andl
xchg
xchg
add
popa
mov
scas
sbb
dec
bound
daa
sahf
fdivrs
mov
ss
pop
imul
jns
and
push
cs
sbb
mov
dec
jge
inc
adcl
popl
add
jge
lea
outsb
inc
push
cmp
push
push
sub
out
add
push
mov
jge
nop
clc
fistl
cmp
and
add
pop
add
shrl
xlat
xor
mov
test
sub
xchg
dec
pop
aad
pusha
rcll
stos
les
aad
lcall
das
pushf
jbe
push
mov
pop
fmuls
movsl
bound
and
aas
mov
or
add
pop
hlt
ret
insb
adc
fs
cmp
sbb
icebp
push
incl
inc
mov
xchg
lcall
jnp
paddsw
adc
push
daa
jo
sub
pop
shll
add
clc
lods
fimull
or
xor
inc
sbb
jp
aaa
xor
dec
in
pop
out
stc
repnz
adcb
mov
jmp
iret
mov
pop
xor
jmp
daa
loope
push
fstp
mov
adc
mov
pushf
sub
add
sub
dec
xor
jg
adc
loop
subb
dec
mov
imul
popf
pushf
cli
push
inc
cmp
mov
jp
pop
pop
imul
xchg
mov
mov
test
mov
call
icebp
sub
popa
ja
adc
sbb
repz
inc
inc
js
inc
and
sbb
test
scas
test
cs
int
incl
sub
mov
sbb
pop
and
test
je
push
lds
xchg
add
test
jg
jge
fadd
mov
cmp
shld
jne
pop
mov
lahf
pop
test
dec
fisubrs
xchg
gs
inc
pop
push
inc
add
xor
add
add
or
xchg
add
xchg
pop
dec
inc
add
roll
fs
xchg
jmp
les
mov
ds
movsl
in
or
dec
add
lock
cmpsl
repnz
push
xchg
cmpl
pusha
and
arpl
je
pushf
xchg
aas
jnp
jg
push
decb
loope
cmp
leave
jl
imul
call
lcall
push
aad
mov
dec
push
cmp
sbb
sbb
adcl
and
rolb
or
pop
mov
add
xor
adcl
pop
xchg
and
mov
imul
and
jo
xchg
adc
fnstcw
rolb
filds
fcoms
xchg
jle
clc
mov
fcompp
or
pusha
inc
je
mov
adc
and
pop
rcll
stos
push
test
int
inc
jp
inc
adc
mov
pop
shlb
popf
mov
aas
test
add
repnz
cmpsl
dec
negb
das
adc
or
jmp
lcall
xadd
shll
xchg
lcall
cmp
add
fsts
adcb
dec
lcall
mov
shrb
rcr
pop
fsubp
dec
pop
sub
loop
test
fdivrs
mov
fwait
outsl
or
dec
sahf
mov
adc
lods
clc
les
addr16
stos
jae
jno
cli
inc
pop
lods
aaa
fsub
dec
adc
sub
mov
ds
jns
sbbl
or
inc
adc
mov
xor
das
mov
mov
sbb
mov
movsb
jnp
leave
cmpsb
jecxz
test
sub
imul
mov
xor
xlat
mov
pop
cltd
addr16
call
daa
fsubl
inc
ljmp
mov
sub
bound
lcall
aam
hlt
repz
xchg
pop
sbb
add
popf
pop
loope
xchg
stc
rclb
cltd
bound
in
push
inc
or
shrb
popa
pushf
adc
outsl
mov
lcall
xor
or
and
xor
jp
push
cmp
add
and
pop
call
fcoml
addr16
movsl
xchg
insb
nop
cmc
popa
ja
in
fcompl
out
sub
js
sub
or
jecxz
out
mov
out
cltd
ficomps
aam
pop
scas
inc
pop
jge
loop
jmp
and
mov
shufps
scas
fstp
dec
sbb
sub
ljmp
inc
inc
pop
lods
test
xor
lods
xchg
test
push
ret
andb
fs
mov
nop
arpl
push
add
inc
xchg
xorl
mov
sbb
pusha
add
out
mov
inc
lods
stc
fcoml
cltd
mov
sbbb
sub
adc
push
sahf
inc
lcall
insb
jecxz
push
jne
sbb
xchg
pop
pop
mov
jns
jnp
fstps
mov
mov
xchg
sub
mov
and
cwtl
das
cli
roll
popf
jg
jp
mov
adc
repz
pop
inc
fiaddl
pop
sbb
jno
roll
cmpsl
ds
jl
out
and
scas
or
sbb
lret
out
int3
mov
mov
ljmp
inc
btr
scas
push
xor
daa
push
mov
mov
cmc
jl
add
rcll
outsb
popf
and
pop
repz
dec
fstpt
lcall
movsb
lret
lods
mov
bound
push
loope
xchg
xchg
repnz
xor
ficoml
sbb
cmp
incl
lahf
js
lods
add
stc
push
add
lods
or
mov
add
xor
clc
adc
jp
inc
bound
sub
cmp
cmp
push
fildll
jl
lret
shll
push
cmc
subb
jnp
clc
jge
fisubs
mov
jecxz
or
pop
and
lret
stc
mov
repnz
jno
dec
adc
inc
jl
mov
jp
ja
inc
fwait
lods
and
cmc
outsl
rolb
sbb
scas
fidivrs
push
push
inc
in
push
addr16
divps
mov
lahf
pop
add
ja
rcrl
test
rcll
aas
mov
shll
jmp
fcoms
jecxz
pop
sbb
mov
aas
sbb
pop
xchg
sahf
icebp
mov
cli
and
adc
dec
aas
mov
lea
and
lahf
mov
and
call
fnsave
shlb
jae
jecxz
push
cmp
gs
mov
mov
clc
adc
rcll
aam
mov
clc
jbe
push
mov
push
xchg
fcomps
jecxz
sub
jae
test
jp
imul
cmp
orb
fisubrl
imul
cmc
dec
into
mov
outsb
add
shlb
xor
sub
jl
cmp
inc
sub
fdivs
sub
mov
push
roll
push
xor
in
loop
mov
mov
push
sbb
cwtl
jecxz
cld
mov
sub
and
in
or
sub
push
xchg
sub
xchg
f2xm1
dec
mov
incl
fwait
lods
pop
out
or
fldenv
movl
mov
bound
scas
mov
mov
adc
inc
test
mov
or
jg
pop
cs
push
mov
push
jne
ja
cmp
push
cltd
jbe
mov
push
test
adc
lcall
lock
test
sub
xchg
cltd
daa
pop
vmulsd
xor
loope
push
add
cmp
or
adc
subb
shll
rcll
fs
sub
out
aas
out
mov
fcomps
aad
aaa
iret
add
divb
lret
dec
fisubl
push
cltd
test
cmp
iret
jbe
pop
sbb
adc
mov
ja
push
sbb
cmpsl
out
add
lcall
cld
cs
cmp
aas
insl
sbb
jae,pn
cmpl
mov
scas
shrb
and
sub
mov
js
mov
in
mov
xor
mov
sbbl
jge
in
and
outsl
iret
sahf
lods
push
and
pop
movsb
popa
neg
inc
xchg
add
sub
out
add
xor
and
out
fsub
pusha
out
and
pop
aaa
inc
out
inc
cli
mov
mov
out
mov
sbb
sbb
cs
sahf
pop
maskmovq
mull
adc
mov
neg
mov
imul
lahf
pop
mov
jecxz
arpl
int3
mov
mov
lret
jle
mov
out
icebp
push
xorl
das
mov
rolb
addb
sahf
cmc
aaa
lock
shll
push
sti
popf
sbb
in
cmc
fdivrs
and
out
or
push
dec
xor
icebp
mov
ret
lock
push
pop
cmp
gs
cmp
push
in
fwait
lcall
dec
leave
adc
and
push
push
insl
or
pop
add
in
stc
popf
xchg
lds
mov
mov
int
push
lahf
lcall
and
in
sbb
or
or
xlat
jnp
fcompl
push
int3
sarl
mov
ror
xor
xor
add
dec
enter
dec
out
daa
dec
cmpl
cmp
mov
ljmp
aaa
add
mov
cmp
lahf
testb
push
push
imul
push
test
sti
outsl
scas
andl
imul
fsubrs
sahf
jae
out
mov
jge
outsl
sbb
stc
lcall
sbbb
test
xchg
loope
mov
push
push
fldenv
jns
pop
xchg
aaa
pop
addl
repz
mov
push
fs
sbb
mov
out
and
daa
dec
testl
push
and
pop
pop
int
push
iret
loope
js
or
insl
xchg
xor
pop
dec
fiadds
aaa
lret
lds
add
or
cmp
lods
push
xchg
jecxz
push
ja
ljmp
inc
incb
movsl
hlt
data16
or
ret
and
mov
adc
arpl
inc
or
cmpsl
enter
test
out
cmp
bound
mov
xor
jecxz
mov
add
pop
xor
shlb
cwtl
inc
jo
xor
rorb
bound
mov
lcall
add
orl
test
mov
push
div
testl
mov
imul
add
mov
pop
test
jecxz
test
push
dec
jp
cmc
xor
pop
fs
pusha
xor
dec
ret
jecxz
enter
and
mov
mov
out
jge
push
mov
sub
xlat
sub
lea
aaa
or
adc
pop
clc
sub
lret
ror
xlat
push
and
mov
daa
inc
sub
add
inc
out
inc
jne
andl
add
pop
inc
add
pop
daa
add
pop
pop
add
pop
loop
inc
jle
ret
data16
push
adc
and
fadds
adc
cmpsl
mov
jp,pn
loop
add
sub
sahf
bound
dec
push
push
mov
scas
or
daa
sahf
ret
xchg
movsl
or
orl
icebp
clc
std
xor
jb
ja
subl
mov
push
sbb
shrl
sub
mov
cmp
jne
xor
xchg
repz
or
dec
enter
js
je
cld
loopne
pop
push
add
jle
addr16
loopne
add
popa
and
insb
ret
mov
or
aad
and
dec
push
jae
inc
xor
idivl
add
adc
or
clc
mov
inc
or
ficoms
mov
jb
std
inc
ja
repz
jmp
xchg
adcl
imul
in
jmp
and
pop
inc
mov
cli
mov
xchg
xchg
add
and
bswap
xchg
add
imul
dec
jp
dec
mov
sub
rolb
cmp
rolb
xchg
es
dec
push
mov
add
xchg
jmp
scas
and
jecxz
lock
or
xlat
add
cltd
ja
imul
mov
loopne
xchg
lahf
loop
jno
jg
mov
add
sbb
sub
dec
add
enter
test
ljmp
mov
loope
sti
push
inc
cmp
and
sub
shl
test
movsl
lods
and
cwtl
inc
pop
and
mov
jp
jno
inc
in
clc
adc
rol
push
icebp
sbb
subb
dec
push
push
jecxz
movsl
or
jle
xchg
pushf
lea
cmc
dec
mov
xchg
lret
mov
mov
addr16
xchg
rcrl
fimull
or
xchg
jl
aas
cmc
imul
mov
lea
ds
push
inc
aaa
push
sbbb
mov
xchg
xchg
mov
scas
jecxz
and
cmp
sar
sub
shlb
testb
rcrl
mov
ret
and
pop
or
sbb
pop
push
ljmp
test
mov
sub
movsl
dec
popa
cmp
decl
cmp
iret
cli
mov
out
jecxz
pop
ds
js
xchg
stc
or
ret
hlt
cld
mov
dec
and
mov
lcall
xor
sarl
cmp
test
mov
cmp
add
into
fimuls
xorl
add
mov
add
inc
or
andl
cmc
cmp
movsb
and
cmp
js
lea
lcall
pop
jmp
dec
gs
out
xchg
cld
out
and
xchg
cmp
in
cmp
nop
push
daa
fs
mov
or
scas
adc
push
or
xor
adc
inc
fldcw
test
hlt
lds
rorl
test
ljmp
out
push
add
sarl
pop
enter
jle
adc
xchg
int3
push
inc
bound
mov
aaa
inc
xchg
cmp
loop
lock
stos
sahf
fimull
fsubs
aad
hlt
fldcw
xor
negl
arpl
out
jecxz
xorb
adc
add
pop
sahf
mov
and
and
fs
dec
aaa
vmovapd
and
mov
pop
xchg
adc
jnp
sahf
xor
repnz
xor
xchg
dec
lea
inc
mov
std
adc
mov
xchg
or
jae
loop
stc
mov
cmp
mov
fsubrs
xchg
cmpsl
sbb
faddl
sbb
les
shrl
aam
push
mov
cs
jae
pusha
sbb
cmp
out
scas
push
out
xchg
pushf
push
sbb
or
jp
imul
push
scas
in
xchg
rolb
sbb
sub
xchg
in
or
push
daa
xchg
xchg
clc
nop
movsl
xorl
call
clc
push
mov
add
adc
and
jecxz
lea
aas
lahf
sahf
lods
inc
clc
mov
push
cmp
jmp
rolb
addr16
mov
or
add
insb
popa
sbb
cmp
add
enter
repz
inc
aas
or
je
bound
subl
lods
imul
or
outsb
cmp
cmp
aad
and
ret
into
inc
imul
mov
lcall
setge
fisttpll
ja
sbb
lahf
ret
and
adc
clc
int3
add
loope
sahf
out
jmp
dec
call
movsl
lahf
add
push
mov
pop
lock
push
mov
flds
lock
movswl
lods
jle
add
add
push
stc
or
ja
xchg
call
dec
stos
flds
notl
mov
sbb
xor
xchg
xchg
sbb
or
je
aad
dec
and
cmp
pushf
pop
bnd
mov
adc
add
inc
repnz
lock
les
dec
lret
push
nop
movsl
xchg
mov
sbb
cli
mov
imul
call
scas
mul
push
dec
data16
stc
lahf
inc
imul
enter
inc
sahf
addr16
addr16
mov
outsl
mov
jb
hlt
fisubrl
pop
push
shr
jg
sbb
ds
test
push
sahf
dec
xor
dec
xor
arpl
push
xchg
add
xchg
movl
and
movb
stc
adc
pop
inc
pop
inc
mov
jg
std
xchg
or
test
dec
pop
and
mov
ja
in
xchg
nop
dec
pop
xchg
lock
sub
ds
push
ja
mov
adc
add
inc
push
push
xor
pusha
xchg
arpl
cltd
cwtl
loope
out
pop
push
sbb
mov
xor
inc
cmp
xchg
call
mov
movsb
popf
push
add
lret
rcll
sahf
push
popa
push
cmp
inc
xchg
cmp
sbb
cwtl
sub
bts
add
inc
inc
in
jmp
sarl
in
push
jbe
scas
mov
shlb
cmp
and
sub
mov
fidivrl
push
cmc
or
cmp
pusha
sub
inc
cwtl
jno
fcomip
jbe
add
sbb
pop
bound
cmc
xor
adc
mov
aam
pop
add
inc
lret
pop
fldenv
inc
mov
mov
popf
jecxz
pop
bnd
gs
hlt
imul
and
jae
jg
stos
or
sbb
mov
mov
xor
stos
test
xor
icebp
aaa
add
popf
sub
cmp
xchg
mov
data16
and
push
pusha
push
rcrl
and
sub
out
sbb
adc
xchg
jo
push
leave
mov
test
outsb
mov
sub
pop
enter
ret
push
cmpb
jge
repz
nop
push
insl
inc
ficompl
mov
pop
filds
stc
inc
push
aas
add
and
out
jmp
call
rolb
orb
or
xorb
push
ffree
roll
adc
iret
into
inc
movsb
mov
adc
in
dec
sbb
dec
dec
arpl
in
outsl
jmp
lahf
jl
mov
out
das
inc
out
adc
xor
shl
or
dec
jns
out
xchg
sub
in
cmpsb
ja
fwait
sub
rorb
sti
xchg
gs
lods
mov
inc
push
xchg
inc
jp
xlat
lahf
adc
jecxz
add
push
aaa
aam
loope
cld
mov
sub
inc
push
and
mov
xchg
shlb
in
dec
mov
inc
mov
mov
mov
inc
iret
dec
add
lahf
subl
lea
popf
pop
sbb
lahf
xchg
push
mov
and
pop
mov
add
movsb
and
js
add
xchg
pop
mov
out
xlat
inc
scas
call
gs
lret
int
sub
orl
and
cli
orb
and
mov
push
jmp
xor
movsb
lods
arpl
or
pop
jb
aas
lahf
mov
dec
dec
fmull
loopne
addr16
jnp
clc
test
jg
xchg
orl
sub
add
mov
dec
in
push
test
add
mov
ret
cmp
sti
xlat
test
sbb
jnp
les
cmp
repz
ja
jg
inc
sbb
insl
xchg
fsub
xchg
dec
fistl
inc
sbb
repnz
movl
xchg
jnp
pop
stos
ljmp
xchg
fs
pop
sbb
cli
or
pop
and
pop
pop
mov
shlb
mov
mov
mov
jne
ss
cltd
inc
iret
arpl
sahf
xchg
inc
push
cs
adc
inc
inc
push
sub
test
popf
xchg
loope
adc
cli
pop
jno
ret
jbe
add
sbb
notl
mov
loop
aaa
scas
stc
scas
mov
adc
cli
or
jmp
dec
dec
pusha
les
jecxz
bound
mov
in
test
sahf
mov
cmp
mov
shl
lret
inc
mov
adc
mov
jp
ror
iret
push
add
insl
pushf
mov
inc
pop
sti
add
and
pop
lock
dec
push
inc
cmp
stos
sbb
mov
imulb
pop
jg
repnz
sbb
cmp
inc
loopne
pop
mov
cmp
dec
imul
ja
popf
mov
dec
movsb
aas
mov
lcall
lds
add
jl
aaa
lds
mov
insb
flds
subb
or
mov
test
jbe
add
or
mov
inc
xchg
push
jb
push
and
arpl
and
jno
out
mov
or
loope
or
xchg
xor
sbb
int3
dec
sahf
xchg
adc
adc
push
int
sahf
mov
test
pop
lods
aas
push
fadds
mov
test
rcll
jecxz
repnz
daa
add
lahf
pop
xchg
mov
sbb
lcall
mov
xlat
cmp
mov
dec
and
lahf
mov
pop
push
push
test
mov
bound
call
add
fsubs
divl
insl
dec
or
dec
xlat
gs
arpl
and
cmp
pusha
popa
jnp
jae
mov
roll
adc
inc
xor
sarb
fimuls
mov
and
pusha
cmp
cmpb
fadds
arpl
and
xchg
push
sub
pop
scas
pop
mov
ficomps
xchg
cwtl
es
daa
push
jns
mov
mov
repnz
daa
push
jp
mull
pop
fwait
dec
sbb
pop
pop
popf
and
imul
jle
in
stos
or
mov
mov
in
mov
loop
les
imul
dec
mov
test
fiadds
pushf
adc
enter
inc
jg
or
es
cmp
in
pop
push
dec
aas
test
and
faddl
inc
push
push
sub
jno
push
mov
inc
mov
or
add
ss
jb
movlps
and
mov
loopne
mov
mov
movsb
loope
ja
out
and
jo
cmp
sub
jecxz
or
push
aaa
sub
mov
loopne
or
sbb
inc
lea
sbb
inc
xchg
daa
iret
or
fistpl
jecxz
mov
inc
sub
fbstp
mov
xchg
pop
in
sbb
jg
andb
sub
pop
jmp
dec
cmp
inc
out
outsb
jae
test
in
sub
addr16
add
lods
stc
fwait
xchg
inc
dec
add
ja
lds
xor
cmp
xor
int3
xchg
hlt
xor
mov
mov
fsts
lods
inc
xchg
leave
ja
test
push
cmp
outsl
das
sahf
xor
pushf
xchg
xor
arpl
orb
xlat
insl
repz
aad
outsl
insb
test
int
pop
cmp
add
jecxz
sub
mov
pop
mov
lods
jo
clc
test
clc
and
sub
ficoml
pusha
add
push
pop
lock
inc
cltd
lea
ret
jb
ja
sahf
pop
mov
mov
mov
mov
negb
inc
pop
ss
scas
in
pop
sti
imul
mov
lcall
imul
xor
mov
incb
adc
and
jecxz
and
in
movsl
cmpsl
sub
in
sbb
cmpsl
mov
inc
and
movsl
shll
inc
pop
lret
push
mov
arpl
mov
mov
aaa
xchg
insb
push
push
add
cwtl
loopne
xchg
div
movsb
inc
and
or
notl
sub
cmp
mov
into
imul
repnz
test
sub
std
cmpl
dec
pop
inc
fwait
cmp
sub
pop
xchg
pop
push
nop
sub
mov
mov
imul
add
sub
jg
or
subb
pop
or
inc
mov
dec
lea
ljmp
jg
push
int
and
sub
mov
inc
aaa
add
lahf
sub
cld
mov
xchg
or
sbb
lds
or
and
dec
fwait
add
ficompl
mov
push
icebp
inc
mov
sbb
js
and
jo
es
jnp
pop
xorl
pop
cld
xbegin
jae
imul
pop
jecxz
das
idivb
dec
dec
sub
cmc
and
bound
addl
sub
jle
jae
rorb
cltd
mov
bound
js
aaa
addb
test
daa
cmp
repnz
cmp
cmp
add
jge
addl
cmpl
aas
lds
dec
push
popa
sbb
xchg
xorl
popf
cltd
lods
sbb
in
sbb
jl
inc
mov
mov
or
test
inc
faddl
aaa
jge
insb
ss
popl
outsl
int
or
or
push
pop
jae
aas
movsl
sbbl
out
inc
xchg
addr16
enter
popa
inc
adcl
xchg
cs
and
jecxz
out
pop
jns
scas
add
rcrl
sbb
fmull
lret
rcll
cwtl
push
jmp
inc
add
ret
mov
loope
and
inc
push
xchg
popf
mov
psubusb
outsb
add
outsl
push
rcrb
cmp
and
test
push
addb
xor
ja
rcrl
sub
fnstsw
sbb
mov
in
pop
in
scas
fs
mov
shr
movsb
xor
out
negb
push
cld
adc
cld
lret
xchg
push
xchg
fidivrl
ret
loope
ds
inc
fildl
roll
sbb
testb
pop
cmp
inc
mov
bound
popf
nop
push
test
pop
scas
popf
lods
sbb
outsb
enter
outsl
lods
stos
xchg
in
jl
cmc
jle
inc
inc
gs
fbstp
push
mov
dec
int3
mov
outsl
inc
sbb
les
insl
and
test
cmp
sub
rclw
popf
xchg
xchg
jae
sahf
cmc
lahf
cltd
push
mov
cmp
lods
push
pop
jl
stos
cmpb
iret
and
push
mov
gs
ret
icebp
mov
movsl
das
out
out
inc
shlb
movsb
pop
test
sub
fs
push
fld
ja
push
ret
test
mov
lds
jp
mov
orb
jno
and
sub
mov
pop
dec
pop
xor
xchg
mov
flds
popf
mov
dec
and
xor
stos
inc
jecxz
mov
popa
test
ret
mov
mov
hlt
mov
aas
sahf
fs
sub
cwtl
lahf
adc
sahf
insl
sahf
xchg
cmp
inc
pop
ds
nop
add
addr16
mov
das
pop
inc
sbb
movsb
inc
lea
add
flds
out
jge
xchg
cmpsb
daa
out
push
dec
cmp
xchg
or
jb
xchg
movsl
or
addb
pop
mov
imul
outsl
imul
mov
test
mov
lods
mov
push
pop
movsb
enter
mov
pop
sub
sti
call
dec
sbb
ss
fimuls
stc
jp
pop
sbb
stc
gs
push
jg
rcrl
aaa
mov
ss
mov
out
jns
sbb
in
inc
addr16
iret
sub
mov
adc
cmp
aad
stc
outsb
jbe
jae
push
pusha
fstps
aaa
lcall
repnz
test
cmp
push
cmp
jo
push
mov
jae
jmp
and
in
xor
ss
lcall
cli
add
nop
jg
and
mov
push
icebp
mov
mov
inc
cmp
and
addr16
sbb
repnz
xchg
mov
mov
ja
inc
mov
sub
push
test
dec
int
repz
mov
icebp
inc
xchg
pop
mov
cltd
pop
int
iret
jg
cld
scas
mov
mov
lods
push
or
inc
loopne
adc
mov
xchg
mov
loopne
ja
pop
or
adc
pop
pop
dec
shll
outsl
pop
and
aad
std
xchg
and
fcomps
in
data16
push
out
mov
pusha
scas
mov
mov
popf
ja
mov
cmpsb
clc
lahf
push
lahf
mov
pop
inc
in
mov
pop
add
mov
jge
add
add
inc
pop
stc
xchg
test
and
or
dec
and
iret
bnd
inc
push
in
xor
das
inc
jge
inc
rorb
inc
subl
cmp
bound
jp
jns
inc
mov
cmp
mov
popa
loope
dec
add
inc
decl
js
repnz
mov
mov
ljmp
jge
push
and
in
sub
aaa
loopne
ficomps
jp
push
scas
or
sub
add
fstpt
inc
xchg
test
hlt
divl
mov
xchg
call
sbb
inc
and
movsl
xchg
lahf
lcall
mov
xchg
icebp
xor
frstor
inc
jae
fadd
lock
add
test
sub
or
mov
jp
outsl
jle
outsl
push
jbe
cmpsb
leave
cld
rorl
fwait
mov
inc
adc
pop
pop
lock
pop
jge
aad
cli
out
lds
fs
and
xchg
stc
xchg
adc
rclb
in
call
in
adc
cs
xor
into
adc
jp
sub
pop
lds
mov
ljmp
cmpb
push
movsl
jno
xchg
popf
push
lahf
jbe
pop
push
cli
stc
int
pusha
cs
shr
sti
mov
xchg
mov
iret
das
add
iret
out
orl
add
sub
jbe
addr16
addl
shll
add
lahf
stos
mov
mov
movsl
mov
xchg
jns
add
fimuls
call
jge
mov
or
add
aam
and
out
sahf
mov
xchg
test
pop
push
push
fstps
or
xchg
xchg
rep
lds
cmp
mov
xchg
push
test
and
pop
mov
pop
das
jle
mov
xchg
pop
xchg
inc
fsub
and
push
addb
jp
mov
ja
cld
aad
lahf
pop
mov
ficompl
clc
mov
sbb
cmc
cmp
add
push
pusha
xchg
add
cltd
mov
lods
jns
push
mov
fnstenv
cmpsl
stc
cmp
shrb
inc
cmc
in
pop
pop
out
rcl
cmp
idivl
or
pop
xlat
xor
dec
or
in
lahf
mov
flds
or
shrb
lret
in
aaa
cmp
xor
lcall
or
inc
push
mov
inc
jb
aas
shlb
int
pop
and
pop
sub
lcall
add
mov
and
test
dec
sahf
cmp
in
mov
adc
pop
addl
into
mov
fisttpl
cmp
and
sbb
dec
cmc
xor
pusha
addb
cmp
ja
into
mov
jp
lock
aaa
push
mov
add
ljmp
inc
jle
xlat
xchg
push
sub
push
test
repz
stc
movq
cmp
add
jecxz
pop
call
stos
pop
ja
test
test
aam
or
mov
shrl
sahf
bound
mov
iret
lret
ss
js
and
pop
mov
dec
in
fcomip
popf
jecxz
dec
push
cmp
push
jg
sub
sub
out
pusha
sub
adc
cmc
ja
adc
lret
in
lahf
sbbb
mov
add
in
repnz
lahf
rorb
fldenv
jle
popf
jnp
xorl
mov
add
mov
xchg
jno
sbb
push
fucomip
jp
adc
inc
xchg
jle
fstl
movsb
in
xor
jl
addr16
je
xchg
hlt
mov
push
fistpll
and
mov
jp
adc
ret
dec
add
pop
pop
repnz
inc
xlat
xor
lea
into
lock
cli
push
mov
rclb
gs
out
sahf
push
fnsave
xchg
divb
or
lcall
outsl
jecxz
pop
adc
add
push
clc
mov
and
lahf
cltd
test
pop
imul
mov
inc
test
adc
sar
pop
adc
sub
xchg
fidivrs
sbbb
cmpsl
dec
daa
shll
fsubp
cmc
xchg
sti
insb
mov
pop
stc
scas
rcrl
push
cmp
sbb
pop
daa
ret
clc
cld
dec
push
add
dec
arpl
test
je
repnz
cmpsb
sbb
cmp
dec
xchg
xchg
jg
pop
ja
popf
es
inc
int
lret
jl
clc
mov
cmp
sbb
sub
fistpl
xchg
arpl
and
or
lret
xchg
scas
cmp
push
addl
lahf
sub
jge
pop
inc
add
daa
mov
pop
push
pop
push
cmpsb
adc
fimull
mov
mov
ljmp
test
add
inc
dec
out
mov
cmc
sub
and
cwtl
mov
pop
dec
and
jo
fldt
sarb
fstpl
fsubs
rorb
xchg
and
cmp
mov
cmp
pop
xchg
cmp
pop
push
xchg
dec
mov
mov
and
push
and
pop
and
mov
dec
lret
enter
fstpt
or
mov
fwait
rcll
mov
test
push
add
lcall
mov
mov
mov
icebp
inc
js
cmp
and
mov
and
in
enter
test
andb
jl
fmuls
andb
and
xor
push
fmuls
nop
ja
call
push
lcall
xor
xor
jae
cmp
mov
ja
xchg
ret
cmp
hlt
sbb
inc
lahf
cltd
scas
out
inc
jle
into
or
mov
test
fadd
in
inc
push
pop
adc
dec
aam
rorb
sbb
jae
in
pushf
out
jb
fs
cmc
cmp
js
popf
mov
jp
bound
mov
mov
out
orb
mov
jmp
in
sbb
jg
cmpsl
inc
outsl
mov
inc
stc
add
sbb
leave
jae
xor
mov
inc
shll
lcall
ja
mov
int3
jl
dec
and
fistpl
mov
push
jecxz
jl
stc
dec
repz
or
daa
sub
ds
aas
sahf
jle
mov
xchg
pop
pop
pop
add
out
and
push
outsl
xchg
mov
test
scas
push
jg
cmp
dec
sbb
jns
pop
arpl
stc
arpl
xchg
add
adc
and
bound
mov
sbb
popf
adc
insb
fs
loope
inc
jb
adc
pop
add
iret
push
mov
mov
out
pop
fisttpl
jl
imul
xor
cmpb
int3
stc
cmp
push
mov
sbb
pusha
inc
mov
sbb
ja
push
pop
cmc
jmp
push
and
imul
jg
mov
mov
jecxz
repz
cmp
add
rcrl
or
fs
or
dec
cmp
jge
rol
rcrl
arpl
pop
addb
adc
push
sub
dec
scas
ds
sbb
push
out
or
rorb
je
out
jg
pop
cmp
clc
adc
mov
jns
cmpsl
icebp
or
int
xchg
and
add
jg
test
ja
lahf
or
xchg
jp
sbb
negl
mov
bnd
xor
jns
and
jbe
mov
and
jecxz
cmc
inc
pop
aaa
mov
mov
inc
fs
ja
shlb
rorl
pop
pop
xor
test
xor
push
jl
mov
dec
iret
sub
adc
mov
xchg
fdiv
subb
dec
pop
sub
cmp
push
repnz
mov
adc
iret
pop
mov
stc
ljmp
dec
mov
pop
adc
push
pop
push
dec
cld
sbb
add
sbb
pavgw
test
dec
jle
test
dec
pusha
mov
pop
add
push
mov
push
fidivs
inc
add
rorb
ds
pop
scas
addl
add
dec
pop
jp
push
dec
sbb
sbb
inc
insb
ss
or
mov
cs
add
adc
mov
jmp
hlt
ds
xchg
vcvtdq2pd
jle
ret
fldl2e
shll
movsl
cmpsl
and
scas
dec
in
dec
invd
mov
outsb
adc
inc
push
cmp
xlat
pop
dec
int3
insl
inc
adc
jl
push
jbe
test
fldcw
mov
aad
ret
pop
push
mov
jmp
cli
ja
rcrb
icebp
cli
or
and
ja
movsl
jg
or
or
stc
inc
mov
mov
jg
add
jg
stos
fimull
xchg
das
jge
lcall
ja
pusha
sbb
fmuls
je
inc
inc
sbb
pop
loopne
mov
ret
imul
shrl
xchg
push
lea
adcl
sub
xchg
mov
int
sub
cltd
jecxz
cli
bound
out
inc
ljmp
movsb
das
cld
xchg
mov
inc
mov
lret
mov
imul
insb
fistpl
popf
imul
jge
cwtl
fidivs
outsl
popf
and
sbb
insb
sahf
push
jmp
and
jle
sub
sub
sahf
je
xchg
cmp
loop
movsl
pop
enter
sar
mov
fwait
mov
pop
pop
pop
xor
jl
sbb
ljmp
xchg
into
or
push
out
sahf
mov
xor
sbb
sarl
push
pushf
loope
repnz
inc
adc
mov
pusha
fstps
pop
inc
xchg
sbb
add
lds
dec
pop
push
shl
sbb
push
dec
hlt
sahf
xor
insl
ja
cmp
clc
jl
sti
ret
fidivrs
and
stos
addr16
cmp
and
js
pop
jmp
pop
sbbl
adc
push
ja
insl
clc
subb
sbb
cmc
fs
aas
jge
inc
add
push
cmpsl
daa
sbb
bound
push
rolb
int3
cltd
ret
jb
aas
lret
add
cmpb
add
jbe
jb
sahf
mov
loopne
pushf
jb
out
and
scas
pop
movsl
mov
cwtl
ljmp
push
movsl
dec
fstps
je
es
add
pop
push
push
xchg
bound
aaa
shr
cmp
mov
dec
lcall
shll
mov
mov
cltd
ja
push
incl
sar
es
pop
je
mov
pop
lods
fs
mov
push
fwait
sub
jg
pop
sbb
lock
pop
or
rcrl
xlat
sub
pop
push
jo
sub
xchg
sub
cli
fwait
dec
rcrl
sbb
jecxz
lea
pop
push
mov
out
in
cmp
adc
inc
std
into
mov
xchg
push
mov
sub
pop
daa
mov
cmc
and
sbb
arpl
add
push
mov
or
jmp
out
jecxz
adcb
xor
inc
add
jl
cs
aad
adc
xlat
and
mov
aad
cmp
lret
push
dec
dec
dec
xor
push
sbbl
fmull
nop
popa
jne
mov
mov
enter
and
jne
xchg
rorb
stc
inc
mov
aaa
cmp
inc
jg
int3
inc
insb
mov
fldenv
out
fidivl
addb
push
inc
pop
loope
mov
test
mov
in
dec
inc
mov
sbbl
ret
icebp
dec
fstps
push
or
xchg
sarl
out
adcb
mov
mov
and
pusha
sti
pop
inc
icebp
mov
cwtl
mov
inc
popf
ja
bound
fwait
aas
pop
pop
test
mov
shrb
mov
daa
aaa
adc
add
jp
mov
sahf
sub
or
mov
ja
test
pop
push
and
inc
test
shlb
lahf
lods
pop
mov
jne
add
addr16
into
sar
push
mov
push
xorl
inc
negl
push
pusha
dec
and
pop
lods
add
lret
outsb
sbbb
add
push
filds
test
pusha
popf
or
out
jp
in
lret
or
gs
xor
sbb
cmpsl
pop
cmpl
and
cmc
sahf
sbb
cmp
cld
enter
sub
insl
lcall
pop
mov
sarl
add
mov
hlt
stc
shll
scas
icebp
test
in
pushl
xor
jbe
xchg
mov
mov
cmp
or
sti
xchg
loope
dec
stc
adcb
inc
insb
pop
popa
sub
jp
lahf
scas
subl
cmpsb
ficoml
inc
xchg
aas
xor
pushf
test
pop
packssdw
in
sub
inc
pop
call
lret
stos
and
cmc
adc
jnp
cld
jp
and
mov
mov
pop
sahf
and
sub
sub
pop
lea
jge
fistps
mov
mov
hlt
in
mov
mov
gs
idivl
mov
icebp
cld
inc
pop
nop
dec
fwait
imul
push
adc
lret
ja
aaa
loop
xor
cmp
test
mov
test
xchg
push
pusha
lahf
ja
jg
dec
es
pop
inc
pop
sbb
cmpsl
mov
nop
fwait
xchg
lcall
scas
lret
pop
jp
pop
pushf
or
fwait
pop
rorb
loop
cmp
jecxz
gs
xorb
das
mov
and
mov
xor
sbb
insl
fnstsw
or
xchg
fs
iret
dec
inc
stos
arpl
adc
imul
pop
fwait
add
stc
sub
leave
mov
daa
mov
outsb
stc
stos
stos
test
leave
aaa
lea
test
aam
mov
scas
js
in
fbstp
incl
scas
mov
add
xchg
loope
or
sahf
mov
sbb
scas
test
jmp
bound
inc
pop
popa
ret
fmuls
inc
iret
inc
lods
pop
mov
or
lea
mov
ja
cmp
push
and
and
sbb
add
pop
loope
mov
test
mov
add
aaa
add
sbb
cwtl
dec
mov
push
sub
imul
faddp
cld
iret
mov
cmpsl
sbb
adc
xlat
jae
out
sahf
pop
pop
repnz
dec
mov
lcall
or
addr16
test
lock
in
mul
es
scas
mov
push
scas
xchg
cmp
dec
cltd
push
sub
sub
cmp
stos
flds
or
test
fs
in
push
jge
cli
jbe
inc
add
sbb
dec
pop
fstp
aaa
mov
mov
fmulp
jl
inc
xor
test
fidivrl
pop
mov
addr16
mov
sub
dec
movsb
loope
fwait
je
push
mov
xlat
jnp
xchg
cmc
xor
js
stc
xchg
test
pop
daa
adc
sbbl
in
push
rcrl
or
push
jmp
dec
sbb
add
inc
pop
jo
jp
push
jns
sahf
or
mov
movsb
lcall
loopne
iret
mov
add
jo
or
sub
sub
ss
fldt
ret
nopl
cld
sbb
jp
push
test
jno
jl
mov
in
ss
inc
enter
push
popa
insl
rcll
repnz
push
jo
dec
mov
pop
xchg
ret
loope
mov
inc
sahf
pop
cmp
inc
push
sub
jle
aaa
shrb
and
add
pop
cmc
out
and
cmp
sbb
jbe
jae
mov
pop
cmp
adc
test
jecxz
out
clc
jl
or
mov
xor
sub
inc
mov
mov
lock
cltd
jno
imul
jp
pop
mov
stos
mov
insb
or
ja
push
outsl
sbbl
add
insl
pop
fs
out
push
cli
rolb
cwtl
out
cs
mov
call
ficomps
ja
or
sahf
rclb
xchg
je
repnz
cwtl
and
ror
cmp
loopne
cmpb
xchg
sub
sbb
adc
adc
cltd
lahf
adc
dec
popf
xor
les
test
clc
fadds
pusha
and
inc
xor
jmp
int
dec
lods
mov
xlat
subb
xchg
lahf
imul
mov
daa
icebp
xor
jnp
jl
dec
loope
cmpsl
push
adc
pop
xchg
add
xchg
xorb
popa
fbld
sbb
pop
mov
jb
ja
out
cmp
xor
xor
cmpsl
loope
xchg
je
adc
inc
fdivrl
xor
or
gs
test
sti
add
add
inc
inc
shrb
pop
xor
inc
rcr
jg
sub
gs
std
daa
pop
sub
lcall
test
and
ja
leave
shll
sbb
push
xchg
lods
popl
mov
repnz
lea
test
pop
out
daa
and
pop
in
divl
dec
jp
xor
cmp
push
sbb
pop
addr16
popf
add
cld
loope
xchg
cmpl
mov
lahf
iret
aaa
pop
imul
std
imul
jl
ds
clc
cmp
inc
out
mov
push
popa
aas
push
mov
fs
fmuls
lds
fs
scas
push
mov
adc
hlt
lds
in
push
sbb
push
and
dec
pop
cli
fnstcw
je
out
call
lret
or
dec
and
mov
mov
movsb
jg
xchg
fwait
push
ja
add
cwtl
icebp
and
cmp
mov
or
ja
mov
test
rorb
and
into
xchg
mov
js
incb
out
pop
xchg
sbb
and
xchg
pop
nop
imul
pop
mov
cmp
mov
lcall
es
xor
push
lds
xchg
pushf
mov
stos
and
mov
int
pop
pop
mov
rcrb
pop
push
pop
mov
and
ds
in
enter
xchg
stc
dec
fstpt
mov
adc
xchg
adc
push
mull
test
js
cmc
enter
ljmp
movsb
cli
xchg
jae
xchg
test
test
xor
cmc
fs
mov
out
inc
sub
mov
in
fwait
xchg
mov
add
scas
pop
or
iret
loop
jle
test
pushf
add
pop
push
pop
in
mov
push
mov
rorb
and
lods
es
dec
xchg
sbb
xchg
sbb
push
imul
ffreep
xchg
or
pop
dec
cmpsb
dec
jae
dec
jo
or
and
pop
in
roll
add
adc
mov
xchg
push
test
ret
add
pop
push
add
jmp
mov
cmpsl
popa
fcmovb
in
or
jbe
mov
cmp
fiadds
dec
out
inc
dec
js
mov
dec
pushf
cmp
insl
jns
xor
ret
add
decl
xchg
in
add
xlat
mov
stos
jnp
cmp
pop
test
inc
xchg
mov
xor
in
aaa
mov
push
cmpsb
mov
mov
hlt
jp
out
mov
inc
xlat
cmp
ds
jecxz
ret
and
xchg
andb
sbb
mov
or
cmc
dec
mov
inc
xor
repz
mov
lahf
fwait
pop
push
sub
hlt
lcall
xchg
inc
insb
ss
js
add
sbb
pushf
mov
decb
pop
mov
pop
xchg
xlat
pusha
mov
push
inc
cwtl
pop
mov
lahf
and
pop
pop
adcb
sbb
xorb
lcall
mov
aaa
mov
pop
cmc
loope
lcall
mov
jb
fs
inc
mov
fwait
sahf
insl
in
inc
and
mov
aaa
leave
cmc
pushf
add
inc
fsubr
test
sbb
dec
mov
push
mov
mov
inc
test
in
inc
insb
sbb
mov
jge
pop
adc
mov
cmc
jmp
push
lea
or
add
fcmovb
sahf
inc
mov
and
add
adcb
mov
test
pop
iret
or
imul
xchg
cltd
jns
sbb
xchg
jp
adcb
sbb
mov
lock
dec
call
sbb
nop
sbb
add
sub
add
adc
loope
inc
inc
div
lds
sti
fs
push
jne
dec
test
mov
push
mov
and
dec
inc
mov
test
adc
sbb
push
rclb
pop
test
push
imul
in
dec
fcoms
in
pop
rclb
roll
add
enter
sbb
mov
rorl
int3
mov
int3
xlat
stos
push
mov
sahf
sahf
xchg
add
or
sub
jmp
dec
fldl
iret
incl
sarb
stc
fsts
adc
push
mov
mov
pop
cld
cltd
aaa
mov
mov
flds
outsb
pop
cwtl
cmp
mov
push
sti
dec
adc
pop
ja
aaa
and
in
inc
mov
fwait
mov
jl
jae
pusha
in
mov
and
addb
jae
in
push
sahf
and
jae
or
dec
je
jb
mov
or
sub
push
sub
mov
xchg
jge
lock
scas
push
test
test
and
test
push
and
inc
das
addr16
jns
inc
jmp
jg
adc
adc
test
inc
ret
sti
mov
xchg
cmp
sbb
shll
or
leave
adc
mov
aaa
jno
loope
and
dec
inc
xor
int
mov
cmp
adcb
push
sti
xchg
in
imul
inc
sbb
aas
scas
add
mov
inc
sbb
jno
es
cmpl
sbb
dec
push
int
add
leave
jno
inc
lret
add
sbb
rorl
outsb
stos
sub
xchg
dec
popf
sbb
adc
and
int
adc
jp
sbb
xor
mov
pop
hlt
adc
into
fisubl
jbe
loopne
mov
cltd
inc
mov
inc
movsl
addl
adc
push
jle
cli
jle
adcb
lock
mov
sbb
repnz
jno
jo
addr16
icebp
cmp
pop
push
popa
ficompl
movsb
addb
ficompl
dec
ds
add
lds
xchg
popf
roll
lock
sub
dec
bound
xlat
xchg
fisttpll
sbb
sub
iret
lods
jo
inc
pusha
insl
xor
test
cmp
mov
neg
and
push
push
aas
sbb
mov
cmpsb
mov
jecxz
stc
movsl
fistpll
lods
mov
sahf
xchg
outsb
cmpb
and
shll
add
ljmp
jp
or
fstpt
cltd
pusha
rcr
loope
pop
shll
push
adc
pop
push
mov
or
cli
push
mov
repz
xchg
mov
js
ja
pop
mov
or
insl
cs
xor
pop
ja
nop
test
pop
pop
pusha
popf
xlat
and
mov
cmp
xchg
sahf
mov
dec
test
inc
xchg
popf
jp
mov
rorl
sarl
ds
xchg
push
mov
dec
and
fistpl
xchg
rcr
pushf
insl
lds
ds
je
or
push
mov
sub
lahf
sbb
mov
scas
lea
pop
adc
push
push
aam
lahf
push
imul
and
xchg
les
cltd
sub
loop
rcrb
push
mov
push
and
dec
ljmp
xchg
sahf
pushf
daa
repnz
pop
cwtl
push
vpsrlw
or
rclb
lcall
sub
mov
aam
push
icebp
clc
mov
in
and
xor
inc
stos
frstor
jle
push
xchg
testl
jns
shll
mov
adc
mov
xchg
fwait
and
dec
ret
or
lock
rcrb
inc
lcall
imul
lods
sarl
adc
push
je
and
loop
mov
fidivs
fistpll
int3
scas
lock
xchg
add
adc
pusha
cwtl
dec
xor
mov
xchg
add
leave
mov
in
push
dec
mov
sub
decl
sbb
jge
aad
out
or
mov
dec
add
cmp
pop
cmp
xchg
and
daa
inc
cmp
xchg
enter
jo
push
mov
insb
adc
mov
mov
jecxz
scas
add
scas
add
ja
lcall
cmp
ljmp
popa
orb
sub
addr16
loop
ret
dec
movsl
mov
and
in
cmp
jnp
shlb
fbld
lcall
mov
aas
add
add
xlat
jp
mov
les
cs
cmc
xchg
sbb
sbb
jg
pop
jecxz
scas
cmpsb
dec
xor
pop
pusha
nop
jecxz
xchg
in
sbb
adc
cmp
cmp
mov
cmp
adc
sbb
es
inc
in
lahf
jecxz
xor
sar
mov
dec
pop
mov
mov
mov
sbb
mov
bound
jp
pop
cmp
sub
test
fwait
mov
mov
mov
and
xchg
push
outsb
add
andb
xchg
js
mov
dec
push
mov
gs
cltd
adc
int3
mov
mov
arpl
adc
jecxz
ret
inc
sbb
cmp
jb
daa
fldt
test
addb
je
popa
add
arpl
pop
mov
popf
ljmp
cmpsl
dec
inc
add
insl
push
dec
fbld
test
inc
repnz
ja
ror
pop
test
enter
inc
xchg
xchg
sbb
cmc
inc
mov
hlt
jge
inc
sbb
xchg
push
xchg
lods
repnz
sub
pop
jp
mov
sbb
push
les
pusha
xchg
aaa
andb
push
sub
pop
ja
jno
jg
pop
inc
push
cmpsl
jecxz
gs
add
test
xchg
nop
jns
mov
mov
jo
aaa
test
test
mov
loope
push
push
aad
pop
ret
outsb
addr16
or
mov
data16
loopne
mov
sub
mov
mov
or
andb
int
adc
cmpsl
jmp
jge
fsubr
test
push
push
aas
inc
into
sahf
xor
loope
mov
inc
adc
shlb
inc
dec
loope
inc
loop
sub
jne
pop
jge
push
mov
inc
lcall
ljmp
cli
imul
jl
fisttpl
xchg
mov
or
test
push
xchg
pop
and
outsl
fiaddl
lret
and
xchg
mov
pop
adc
aam
mov
or
jecxz
jmp
push
subb
mov
inc
push
popf
cmpsb
xor
add
lods
sti
inc
out
add
push
inc
or
insl
movsl
das
xlat
fnsave
xor
scas
fldenv
push
dec
stc
ja
daa
dec
jne
mov
mov
roll
xor
sub
pop
inc
mov
inc
xchg
mov
mov
dec
test
fld
pop
in
push
xchg
ret
outsb
jp
mov
mov
cmc
xor
in
mov
sbb
andb
mov
push
cmp
jecxz
test
dec
out
frstor
sahf
jnp
or
repnz
push
xchg
xlat
adc
rorl
mov
clc
ret
popf
mov
cmp
cmpsl
jmp
cmp
daa
mov
push
mov
push
sbbl
xchg
jle
lret
out
dec
out
into
ja
cmp
add
aas
mov
gs
xchg
sbb
lcall
fs
mov
mov
aad
or
negb
jae
loope
xor
cmc
loope
add
out
rorb
aas
mov
inc
call
dec
add
sbbl
cmpsb
mov
and
fcompl
push
arpl
loop
pop
icebp
clc
xorb
add
test
imul
ret
xchg
in
test
sub
lret
jg
inc
and
sub
mov
mov
push
daa
push
orl
mov
xchg
mov
push
mov
jns
test
mov
aaa
pop
call
fsubrs
push
lcall
mov
shrl
pop
pop
repnz
lcall
mov
xchg
shrl
sahf
pop
movl
mov
shlb
push
test
in
gs
add
js
minps
mov
iret
mov
ds
push
jle
cltd
jne
sahf
inc
addl
test
xor
push
shl
jne
push
aaa
mov
test
jns
pop
sbb
mov
sahf
ret
js
repnz
sbb
inc
andl
pop
pusha
mov
fnstenv
push
adc
std
cmp
popf
push
rclb
mov
and
out
mov
lcall
xchg
or
adc
xor
test
lods
ja
ret
scas
movsb
pop
mov
aam
xchg
insl
pop
ljmp
daa
es
dec
lods
es
dec
scas
pusha
movsl
fcomi
in
xchg
loope
cli
cltd
cmp
push
push
xchg
into
mov
ljmp
ret
xlat
loope
dec
cmp
xchg
add
ds
shll
add
jp
add
je
add
cmpb
xchg
xor
sahf
push
sub
outsl
xchg
adc
fwait
xchg
xor
roll
les
or
pop
je
arpl
sbb
inc
mov
mov
cmp
mov
ds
mov
or
roll
inc
sub
insl
xor
and
jl
adc
push
sbb
enter
add
and
aam
xchg
cmc
or
mov
jle
cmp
jle
pushf
loop
and
pop
fs
and
adc
jge
pop
inc
rorl
xchg
adc
call
repnz
inc
test
ja
mov
inc
clc
sbb
dec
jecxz
add
hlt
xchg
ss
xor
jnp
jbe
sahf
rcrl
data16
jle
and
push
push
cmp
clc
mov
push
addr16
aas
adcb
sub
sub
lcall
xchg
xchg
les
cltd
repnz
and
xchg
ret
addl
mov
jp
sbb
add
pop
addps
jp
xor
iret
push
daa
sahf
and
jnp
and
push
lea
incl
or
insb
enter
mov
cli
daa
jb
sub
or
clc
sahf
fldcw
xchg
add
inc
mov
fs
daa
push
rorl
cld
nop
or
pop
jo
out
sub
inc
adcb
sar
or
cmp
cli
mov
incl
arpl
fsubs
sbb
cmp
pusha
sub
cmp
cmp
pop
ja
or
inc
xor
inc
pop
jae
sbb
inc
inc
mov
in
movsl
mov
adcb
repnz
in
sub
add
insl
mov
mov
outsl
bound
test
outsb
mov
dec
mov
inc
lcall
and
inc
inc
sub
movsb
inc
fstps
mov
mov
filds
imul
cmc
stc
fmuls
iret
movsb
dec
mov
stos
shll
repnz
push
ss
xor
inc
stc
cmp
ficompl
cmp
sbb
enter
adc
pop
pop
sub
lds
sbbl
mul
inc
in
jl
lcall
jno
aaa
loop
and
ret
leave
jl
jb
cmp
add
push
sub
xor
mov
fldenv
sahf
ja
nop
in
mov
pop
add
subl
mov
dec
inc
rcr
mov
mov
xchg
addl
xor
push
loop
add
mov
xor
and
cmc
jmp
jecxz
ffreep
and
add
sbb
icebp
cmp
pop
xchg
test
sub
add
outsb
inc
xchg
fs
add
aad
cmpl
out
test
jecxz
out
push
sbb
sbb
cmp
sbb
xchg
dec
imul
sbb
cmp
dec
sbb
iret
repz
xchg
pusha
aad
imul
lret
pop
jl
jg
inc
mov
mov
xchg
pop
pusha
bound
mov
loope
js
adc
pop
imul
test
mov
out
cmp
loop
mov
xor
or
out
adcb
ja
sbb
lods
dec
dec
xor
incb
fimuls
lahf
xchg
sbb
scas
jecxz
out
rol
negl
popa
push
pop
mov
repnz
inc
sbb
or
insl
dec
add
mov
jle
jecxz
sub
inc
fdivr
xor
mov
and
mov
push
cmp
sbb
fst
addr16
leave
mov
fwait
xchg
adc
ret
nop
add
adc
inc
pushf
fwait
dec
sahf
mov
pop
push
xchg
bound
xchg
adc
mov
mov
xchg
sub
fsubl
into
dec
pushf
sbb
outsl
mov
mov
and
xor
lret
and
call
dec
je
push
scas
imul
fwait
aad
xchg
or
push
sahf
cmp
loope
les
sub
loope
in
mov
xchg
scas
pushf
mov
fisubrs
and
mov
push
pop
ja
sbb
xor
sub
fs
sub
or
jo
push
push
shlb
fadds
mov
pop
adc
dec
sbb
clc
cmp
add
push
xor
inc
loop
cmpl
pushf
jg
or
aas
es
test
iret
pop
mull
jmp
js
fcomps
je
and
aaa
mov
insl
mov
dec
fwait
test
popl
test
adc
cmpsl
fistpll
jo
loope
add
mov
pop
add
rolb
je
addr16
adc
pop
jp
pop
push
bound
inc
mov
cmpsl
xchg
mov
add
mov
scas
call
aam
adc
inc
lea
ret
hlt
out
or
and
ret
fildl
loop
lcall
cld
setns
mov
div
stc
xchg
lea
xlat
jnp
fiadds
nop
lcall
sbb
jle
push
cmpsl
add
add
adc
dec
or
xor
inc
mov
sub
iret
mov
pop
mov
popf
or
aaa
push
cmp
adc
repnz
pop
stc
cmp
bound
aad
pop
add
cmc
popf
add
orl
push
movl
mov
leave
out
inc
int3
lahf
addr16
mov
movsb
ja
sub
sbb
jb
rclb
pop
inc
outsb
mov
xchg
xchg
or
popa
push
adc
sahf
addb
xchg
sbb
mov
addb
stc
test
sbb
sbb
sub
ljmp
mov
cmp
dec
xor
or
mov
sub
xorb
mov
xchg
adc
or
adc
call
rcr
mov
mov
add
roll
addr16
sub
jnp
popf
jne
clc
mov
pop
lea
pop
xchg
pop
movsb
dec
rol
pusha
and
sbb
lcall
arpl
dec
add
mov
xor
into
ljmp
lods
inc
dec
imul
push
test
int3
scas
addb
stos
mov
inc
pop
orb
lods
mov
int
je
test
int
pop
push
out
mov
and
mov
mov
outsl
mov
or
sbb
adc
sub
jecxz
inc
jmp
fiaddl
cmp
repz
pop
lcall
fisubl
inc
jns
xchg
jge
cltd
jmp
inc
dec
orl
sti
orl
push
jmp
outsb
cmpsb
jle
jo
test
mov
cmpsl
push
mov
pop
mov
cmpsl
out
scas
cmp
push
ljmpw
ret
inc
fldcw
cmp
and
push
xchg
pop
lret
jmp
pop
imul
mov
mov
sub
lock
xor
movsb
pop
dec
and
movsl
pop
loopne
inc
in
cmp
movsb
lret
xchg
sub
mov
inc
pop
ja
jle
addr16
movsl
adc
gs
arpl
sbb
scas
movsb
mov
jo
xchg
mov
loopne
jp
cmpsl
outsl
iret
out
mov
jo
or
mov
mov
push
pop
pop
xor
and
sahf
pusha
xchg
test
je
xchg
sbb
icebp
fucomip
arpl
push
jp
xor
pushf
fistl
mov
push
cwtl
jnp
test
stos
sbb
xchg
inc
outsl
mov
scas
pusha
jo
movsl
adc
ja
cmpsl
test
xor
xor
add
test
andb
pop
pop
ja
mov
test
push
mov
mov
arpl
aam
lcall
inc
inc
bound
andb
and
imul
sbb
inc
jo
xor
call
push
cs
pop
and
in
out
xchg
cltd
jo
inc
jne
xchg
mov
sbb
push
cmp
inc
sbb
andl
jg
mov
fimuls
test
jb
lea
popa
addr16
jecxz
lds
mov
pushw
ja
add
mov
add
outsb
pop
and
mov
mov
mov
das
shrb
insl
push
pop
or
ret
xchg
ret
insl
jo
movsl
sbb
lock
int
inc
stos
sbb
mov
data16
jo
inc
or
cmpsl
cld
cmpb
insb
xchg
daa
dec
ja
lods
iret
inc
outsl
xchg
and
jb
xor
mov
dec
sbb
stos
sub
xchg
xlat
out
sti
aad
sbb
fiaddl
js
je
push
adc
mov
xor
pop
sub
rorl
stos
dec
mov
dec
push
test
push
orb
stos
lods
and
push
cmc
dec
adc
outsl
shlb
push
sbbb
add
push
sbbb
xor
adc
sbbl
fdivs
mov
jmp
xchg
inc
and
push
sbb
sbb
adc
jmp
lods
pop
scas
insb
roll
sahf
outsb
xorl
shll
daa
out
sub
push
xchg
roll
inc
mov
addl
std
lahf
subb
addr16
or
adc
scas
and
mov
inc
dec
mov
andb
jl
and
ds
cmp
push
pop
inc
push
out
sbb
aad
rcll
xchg
fists
adc
daa
pusha
jge
test
cli
imul
adc
outsl
cli
lods
push
mov
lcall
orb
lds
fs
xor
repz
xor
sub
mov
cltd
dec
loopne
inc
jl
notb
sbb
pop
nop
and
sbb
and
mov
lcall
test
sub
add
pop
and
adc
sbb
notl
dec
and
aas
jbe
jle
xchg
test
mov
ljmp
pushf
aas
sub
xchg
test
ds
and
xchg
jg
or
adc
js
inc
sbb
pop
pushf
inc
fstpl
or
xchg
test
dec
dec
push
test
pop
xor
je
push
pop
jmp
ljmp
jmp
sahf
cmpsb
or
push
xchg
push
call
in
les
arpl
in
xchg
or
js
out
aaa
jno
das
mov
jge
or
dec
xchg
into
or
mov
jmp
sub
jb
and
daa
movsb
push
fisttpll
adc
or
push
mov
xchg
jle
add
incl
inc
adc
lcall
addr16
ds
push
inc
arpl
inc
imul
push
test
sbb
xchg
lcall
xchg
roll
into
incl
fmull
out
and
xor
or
inc
cs
jb
cmpl
xchg
dec
mov
cltd
mov
pop
mov
sarl
pop
scas
push
test
stc
bound
loopne
xor
push
mov
inc
pop
in
or
cld
sbb
pop
push
ljmp
lahf
mov
clc
push
cmpsb
test
mov
repnz
jl
je
mov
es
add
pusha
inc
mov
sbb
pop
mov
fwait
mov
adc
test
or
inc
addl
lcall
cmc
and
adc
fidivs
push
xchg
fidivs
out
cmc
sbb
leave
lock
adc
bound
sti
lcall
jae
sahf
pop
jno
mov
pop
fdivrs
andb
lods
sbb
out
std
inc
pop
lock
add
outsl
subl
dec
test
mov
jnp
jmp
sbb
push
sub
movsb
cmc
jl
orl
pop
out
fmuls
dec
rcll
cs
inc
imul
cltd
movsl
xchg
test
fdivrl
and
sub
divl
cmp
jecxz
cwtl
dec
mov
iret
lock
push
jne
push
mov
aam
jo
test
mov
stos
sub
push
jmp
fdivl
cmp
inc
aaa
push
cmpsb
lds
dec
push
adc
loop
ja
lahf
cmpsb
movsl
pushf
pop
push
ret
xor
cmpsb
mov
enter
xchg
sbb
or
sub
scas
xchg
andb
push
add
add
cmp
out
xchg
js
and
icebp
fldenv
outsb
call
movsb
inc
xor
fldcw
popa
jo
repnz
and
icebp
aad
mov
lcall
movsl
pop
cmp
xchg
cwtl
xor
inc
sbb
sbb
add
daa
loop
xchg
pop
into
inc
icebp
jmp
fs
imul
and
out
mov
and
dec
mov
cmp
cmp
xorb
es
xchg
into
or
push
test
mov
pop
stc
enter
cmpsl
push
repnz
ljmp
orb
pop
ss
test
divb
mov
and
cmpl
add
call
fcoms
pop
push
mov
rclb
inc
clc
dec
das
adc
jo
addr16
cmp
scas
xchg
push
push
lret
mov
jg
mov
add
mov
lahf
or
insl
in
pop
xor
inc
mov
jmp
outsl
adc
cli
cmp
repnz
call
inc
outsl
pop
lods
subl
adc
xchg
add
sbbl
cmp
xchg
xor
mov
xchg
pop
mov
mov
sbb
fwait
mov
xchg
int
mov
add
arpl
aad
into
les
lcall
sub
in
mov
cmp
mov
cmp
cmc
cmpl
testl
ja
push
dec
sti
dec
adcl
push
ja
jg
or
xchg
icebp
or
pop
inc
cmp
frstor
fptan
fs
xchg
add
or
loop
cmc
rcll
and
mov
lea
insb
mov
cmc
xchg
mov
mov
cmp
in
stos
cltd
xchg
and
mov
cld
test
inc
js
sbb
mov
daa
push
pushf
inc
out
iret
rorl
fcomps
and
xchg
sub
bound
push
adcl
or
jns
mov
cmp
dec
bound
js
cmc
lods
cmp
xor
lcall
mov
test
pop
pusha
mov
xchg
movsl
pop
aaa
and
out
outsb
mov
pop
cmc
leave
pushf
jg
imul
mov
ret
mov
mov
or
add
push
adc
mov
ret
fiaddl
lea
cwtl
mov
or
in
add
loope
pop
lods
adc
imul
addr16
test
in
mov
pop
cwtl
lock
pusha
push
loop
inc
clc
pop
cli
add
add
jno
test
push
ds
cmpsl
xor
lret
push
mov
aad
push
mov
inc
leave
pop
or
lods
jae
andb
lea
push
das
sub
inc
mov
repnz
push
mov
dec
pop
xchg
addr16
adcb
mov
adc
ja
mov
js
rorl
dec
adc
mov
mov
cltd
mov
mov
mov
mov
push
repnz
fmuls
or
push
jmp
xchg
push
push
push
dec
bswap
mov
xor
adc
mov
popa
mov
fidivl
imul
orb
pop
jmp
ja
clc
popf
cwtl
addr16
out
rorl
push
lahf
dec
mov
xorb
lcall
jae
mov
mov
pop
xchg
lea
lcall
cld
adc
lods
pusha
xorb
add
push
int
jl
or
in
ret
lcall
fstpt
jno
mov
add
xorl
add
ja
sub
ja
cmpb
or
xchg
stc
push
dec
out
aas
inc
xor
sbb
jecxz
push
ret
dec
mov
lret
adc
leave
sbb
pop
adc
sub
mov
fcoms
xor
or
push
adcl
sahf
xor
xchg
cli
dec
pushf
sub
mov
dec
push
dec
mov
and
nop
fdivrs
mov
pop
shrl
pusha
call
sbb
add
scas
jmp
mov
mov
cmp
subb
push
lea
add
pop
sub
dec
push
cmp
ja
jb
mov
add
adc
push
push
push
mov
jo
adc
inc
sarb
and
add
xor
sub
mov
out
jge
and
push
xchg
sub
insl
jae
lcall
loopne
xchg
inc
imul
jle
mov
lahf
mov
xchg
xchg
dec
cmp
ja
xor
add
mov
xor
pop
leave
stc
or
mov
inc
ja
rcrb
push
dec
aaa
mov
push
sbb
sbb
in
in
push
dec
pop
data16
xchg
pop
lea
xchg
cltd
enter
inc
test
ret
cwtl
inc
adc
stc
dec
int
pop
or
ja
daa
mov
out
pop
arpl
adc
xchg
dec
push
inc
push
shr
and
lods
jb
fbstp
mov
xchg
inc
nop
jp
dec
lea
test
inc
inc
pop
into
adc
movb
outsb
cmp
pusha
jecxz
mov
mov
jle
clc
aam
arpl
out
add
xor
dec
test
movsb
mov
xor
sbb
push
push
test
aaa
inc
test
and
clc
mov
push
mov
push
jp
jle
or
fwait
sbb
xchg
sbb
inc
jg
cmpsl
mov
mov
push
or
xchg
subb
lahf
jne
in
inc
adc
lahf
cmp
leave
add
xbegin
rclb
xlat
sbb
bound
sahf
dec
xchg
jge
inc
aad
mov
fmull
filds
and
fidivs
xchg
roll
ret
xor
and
jb
fs
dec
add
jle
inc
lret
test
int
adcl
jb
and
xlat
subl
xchg
inc
lahf
jge
inc
xchg
cmp
addl
push
mov
push
inc
rolb
and
mov
jb
pop
scas
lcall
outsl
xorb
nop
popf
lds
adc
fnsave
fistps
in
inc
add
out
sahf
mov
fwait
push
lcall
or
pop
fwait
loopne
adc
xlat
ret
aad
inc
add
pop
push
xchg
fstl
pop
shlb
pop
jp
inc
adc
cli
xchg
pop
adc
cltd
jle
dec
xchg
xlat
inc
fbld
aas
push
sbb
pop
jg
inc
pop
add
cmp
rolb
enter
call
sbb
or
mov
pop
inc
dec
adc
gs
fldl
fstpl
int
adc
fisubl
pop
mov
inc
mov
jl
lcall
jns
inc
js
sbb
loope
fwait
mov
fisubs
js
lea
lcall
add
pop
notl
xor
shl
push
xchg
dec
pop
and
cli
add
pop
insb
inc
push
andb
rcll
or
lcall
aam
lock
sbb
adc
lds
adc
push
mov
cld
dec
js
sub
jp
js
mov
je
xorl
and
jg
push
pop
enter
aaa
cmp
cmp
test
in
mov
aaa
sub
mov
dec
fnstcw
push
lds
mov
insb
hlt
leave
and
add
mov
ret
cmp
inc
test
add
fnstsw
add
iret
push
mov
inc
dec
pop
ret
pop
aas
movb
pop
cmp
popf
icebp
aaa
shl
bound
loope
mov
push
pop
sub
sbbb
ja
andl
loope
fimull
ror
mov
add
xchg
cmpsl
add
jnp
mov
lds
in
aad
pop
int
fidivl
sti
sbb
dec
inc
push
sahf
mov
mov
adc
sbb
or
mov
pop
fisttps
cmc
pop
mull
and
dec
push
loope
rep
roll
or
lret
xchg
mov
stc
lock
xor
push
loope
xchg
mov
pop
les
fs
dec
push
jnp
add
mov
mov
fldcw
pop
fsubrl
pop
repnz
call
adc
outsb
pop
pavgb
loopne
mov
je
testl
pop
dec
cmp
xchg
sar
pop
push
les
ficomps
add
nop
mov
and
lcall
sub
fimull
aas
decb
mov
adcb
ja
dec
in
jl
sub
hlt
je
mov
mov
int
test
xor
pushf
jl
jo
ss
jl
dec
iret
fcoms
imul
jl
sahf
xchg
fwait
sbb
popf
stc
xchg
xchg
xchg
push
frstor
sbb
jb
and
repnz
inc
adc
out
dec
push
or
pop
cmpl
or
sar
or
pop
adc
xchg
in
fnstenv
or
pop
lea
pusha
mov
fwait
mov
popa
push
aam
and
sbb
icebp
xchg
sbb
push
jbe
jecxz
notb
test
sahf
or
or
cmp
push
shl
dec
out
sbb
call
cmp
mov
test
adc
les
and
sbb
xor
mov
cmp
repnz
and
out
or
push
test
push
dec
int
arpl
mov
and
mov
clc
cmp
push
adc
cmpsb
mov
fnsave
test
dec
cltd
cmp
cmc
adc
fs
add
mov
addr16
test
cmp
ficompl
or
inc
jp
dec
inc
cmpb
sarl
mov
sub
sub
gs
sub
loop
push
daa
jo
cld
sbb
inc
shlb
add
xor
nop
push
xchg
or
push
ds
lret
stc
pop
jp
push
mov
int
xlat
adc
and
adcb
add
pop
push
fs
pop
push
dec
add
pop
nopl
mov
jbe
dec
in
mov
inc
jns
xor
pop
lcall
or
sti
jp
add
insb
sub
iret
jne
mov
jp
imul
mov
ret
jmp
ret
xlat
or
cmpl
popf
pop
cmp
filds
fwait
mov
jl
sti
jge
or
mov
jb
sbb
mov
orb
sbb
adc
push
sbbl
or
sub
sub
jbe
fcmovnu
push
dec
in
pop
mov
arpl
dec
bound
adc
cltd
insl
fbld
xchg
or
fmuls
mov
sti
cmpsl
cld
push
mul
inc
scas
addr16
inc
sub
fsubl
outsl
lods
lahf
jnp
push
ja
test
jl
test
scas
jne
dec
js
or
mov
or
add
stc
iret
jno
fwait
xchg
sub
adc
mov
mov
stc
xor
push
neg
inc
and
dec
mov
enter
inc
pop
pusha
gs
cld
push
shll
pop
mov
pop
mov
outsb
pop
popf
jecxz
es
adc
and
inc
pop
xchg
push
or
lock
push
outsl
adc
jle
mov
aas
sbb
out
enter
push
inc
lea
js
push
out
mov
push
outsl
loope
adc
inc
lea
push
lahf
incb
mov
imulb
sbb
adc
out
sbb
cs
xchg
mov
lcall
add
jno
inc
lea
aas
hlt
mov
insb
insl
inc
mov
test
push
jno
cmpsl
iret
dec
mov
mov
and
test
add
test
mov
mov
mov
mov
xor
lds
lret
push
mov
dec
mov
lahf
testb
and
xor
sbbl
js
sub
aaa
shll
je
dec
adc
pusha
imul
lea
jb
fldenv
add
lods
mov
jb
adc
fxam
pusha
cmp
cmpb
push
mov
mov
and
pop
sub
daa
fbld
ja
mov
adc
mov
movsl
into
cmpsl
sbb
inc
adc
inc
sbb
jp
fnstenv
mov
loop
jp
packuswb
cmp
mov
dec
popa
pop
xchg
or
xor
and
fs
popf
xchg
push
je
daa
bound
mov
bound
shrb
dec
pop
and
jns
cmpsl
ja
or
lret
adc
pop
sbb
fsts
mov
add
xlat
add
scas
je
or
cmc
test
dec
mov
scas
sub
filds
popf
jg
arpl
mov
arpl
stos
add
xlat
cs
mov
push
and
roll
or
cmp
loop
ja
aaa
sub
or
sarl
test
dec
pop
ss
adc
push
clc
xrelease
rcr
cmp
or
jle
cmp
sub
jg
push
popf
pop
dec
data16
inc
inc
adc
xchg
cmp
test
xor
pushf
arpl
xor
pusha
enter
outsl
fildll
imul
icebp
nop
push
ja
mov
sbb
adc
push
add
pop
cmp
jp
stos
mov
jns
clc
push
jo
rol
icebp
inc
sbb
jl
addl
andb
adc
add
sahf
push
loopne
xchg
test
icebp
fstps
mov
jbe
mov
or
or
cmp
mov
test
xchg
popf
mov
sub
mull
adc
jp
mov
xor
xchg
inc
and
and
jae
ljmp
sbb
push
pusha
fwait
mov
xchg
arpl
popf
orb
mov
cltd
lcall
lcall
mov
push
add
push
fistps
lock
mov
xchg
jno
ja
roll
jecxz
pop
sub
dec
pop
mov
fcmovnbe
jns
loope
inc
lahf
xchg
inc
sbb
pop
clc
ja
inc
push
xor
testb
inc
and
jmp
jl
cltd
lds
xor
inc
outsl
jb
jnp
and
mov
shll
loopne
sahf
mov
add
or
push
inc
and
xlat
xchg
test
xchg
test
loope
jbe
out
lahf
pop
loope
adc
popf
and
and
sub
scas
jnp
rcr
sub
xor
jmp
and
adc
movsb
repnz
or
ficomps
js
adc
xchg
cmpb
mov
pop
ja
arpl
inc
cld
insl
aad
das
aas
jb
stos
fwait
nop
add
loope
push
ja
lcall
cmpb
in
clc
add
mov
add
cmp
bts
sbb
xor
add
and
add
add
add
ja
loopne
test
popf
cli
andl
ja
and
repz
int
mov
jg
shl
shr
aam
sbb
jo
fisubs
out
ljmp
mov
xor
lahf
jnp
push
sbb
pop
inc
iret
push
call
das
out
cmp
std
jp
cmp
pop
fdivl
fwait
xor
test
cltd
call
inc
xchg
in
and
flds
outsl
js
lahf
mov
inc
xor
test
cmc
inc
push
mov
mov
sbb
call
push
scas
out
mov
and
push
push
test
js
dec
les
push
lcall
jae
mov
dec
mov
scas
push
or
fs
sub
inc
lcall
imul
fldcw
ficomps
mov
mov
ficompl
xorps
lods
shll
add
dec
addr16
out
sbb
or
mov
mov
dec
andb
sub
mov
dec
and
subl
movsl
test
add
mov
data16
mov
lret
sbbb
pusha
lcall
mov
daa
rcrb
mov
rclb
outsb
orl
xchg
or
jg
in
mov
enter
orb
and
mov
adc
mov
test
sahf
mov
mov
iret
inc
dec
add
add
jp
loop
or
inc
std
cmp
mov
sub
aad
xchg
lret
loope
xchg
xchg
popf
daa
lcall
pusha
mov
push
pop
ficomps
sarl
jmp
add
dec
pop
mov
out
or
popl
add
inc
or
fimull
dec
popf
fs
fs
aas
jp
mov
mov
and
mov
test
push
pushf
insb
hlt
or
inc
movsb
in
insb
dec
in
lret
sub
repnz
sbb
bound
mov
xchg
rcr
inc
mov
in
pop
ja
push
xor
loopne
mov
fstl
js
mov
push
mov
ret
dec
repz
addr16
sahf
sub
je
enter
mov
sbb
out
pop
sub
fwait
push
inc
in
mov
sub
mov
out
fdivp
fmull
fistps
sub
mov
incl
into
iret
insb
mov
sbb
ss
lea
cmp
js
mov
test
into
or
xor
lret
push
sub
xchg
mov
adc
xor
repnz
ja
vpunpcklqdq
ja
push
and
inc
mov
mov
xchg
mov
mov
filds
and
lcall
cld
cmp
xchg
push
nop
dec
add
mov
xchg
jno
sti
and
cmpsl
xchg
mov
jnp
jecxz
lcall
jp
pop
pop
pop
fistpl
sub
and
push
push
pop
inc
lcall
in
mov
add
scas
repz
and
fcmovbe
jno
mov
inc
daa
ds
mov
ljmp
pop
sbb
dec
subb
add
pusha
outsl
ds
ja
cmp
or
push
add
push
xor
add
in
inc
jmp
sub
out
in
xchg
popf
xor
lcall
sub
xchg
ss
pop
adc
loope
out
xor
inc
ja
add
xor
mov
xchg
mov
and
jmp
fwait
push
xor
add
or
outsb
int3
movsl
loope
xchg
aad
idivb
jg
dec
cmp
out
popf
fdivl
jbe
pop
mov
iret
out
aad
mov
fadds
pop
jne
inc
sbb
push
hlt
call
jno
addr16
xchg
add
lds
xchg
fsubl
add
cmp
fidivl
inc
ret
sbb
test
stc
and
rol
xchg
aas
lods
and
int3
mov
mov
cmpsl
mov
or
addr16
inc
sbb
mov
fildll
lea
iret
add
inc
add
cmp
lret
sub
add
mov
inc
aaa
xchg
add
dec
add
mov
fldcw
adc
jae
pop
shr
add
and
jb
inc
ret
les
repnz
or
ds
push
fiadds
dec
inc
addr16
daa
or
popf
nop
leave
ja
inc
or
pop
lret
or
lahf
lret
nop
mov
jb
addr16
bound
stc
arpl
fwait
inc
cld
scas
test
into
or
push
xchg
imul
iret
dec
in
ja
outsl
test
adc
pop
mov
filds
ljmp
or
jecxz
jecxz
subb
mov
and
ds
insb
decl
and
inc
shl
fdivrp
enter
loop
and
add
jmp
inc
mov
adc
mov
fisubrl
lea
hlt
out
jns
adc
mov
mov
test
iret
test
xchg
dec
cmp
movsl
lods
push
mov
pusha
les
jo
add
movsl
imul
sbb
aaa
xor
mov
pop
push
xchg
sub
js
enter
jbe
in
je
xchg
adc
adc
lods
imul
pusha
fs
ficomps
lcall
xchg
mov
test
sbb
test
test
jb
pusha
ds
pop
or
add
push
inc
es
pop
jg
mov
mull
ret
popf
xchg
jnp
dec
sub
out
xorb
mov
jo
es
in
stos
pushl
call
sub
shl
int
test
xor
xor
xor
fwait
mov
jno
cmpl
and
loope
cmp
sbb
jecxz
or
pop
jl
and
rorb
aas
jg
loop
pop
movsb
cmp
jecxz
in
jbe
cltd
es
xchg
and
sbb
xchg
jo
sub
shll
jnp
xchg
test
cmpsl
dec
xchg
fdivrl
pushf
mov
pop
and
sbbl
sbb
xlat
std
cltd
arpl
fstl
xor
lods
je
push
and
int
fxch
pop
sbb
fmull
test
into
sub
cmpsl
adc
into
fidivrl
notb
cltd
fmulp
mov
fs
jmp
mov
test
imul
in
push
ret
xor
fstpl
xor
fldt
mov
insl
movsl
cmpl
test
lock
adc
pop
adc
jo
push
or
lds
xchg
xchg
and
push
lea
inc
jle
leave
cmpb
rorl
in
call
popa
cmp
rcrl
and
add
sbb
repz
mov
fs
repnz
adc
mov
push
stos
dec
xchg
pop
dec
or
jno
fwait
pop
and
mov
and
cmp
out
mov
sub
jp
bound
int3
arpl
enter
std
mov
xchg
push
inc
cmp
dec
mov
or
shl
ja
or
and
and
repz
mov
inc
jle
adc
push
fucom
hlt
ja
daa
mov
push
sbbb
aad
iret
fcomps
dec
dec
dec
lods
push
push
fldcw
xchg
ja
sbb
dec
inc
jmp
cmpsl
fwait
and
inc
xchg
call
lods
sub
test
scas
mov
jno
enter
pusha
xchg
jno
mov
es
mov
xchg
into
iret
xor
mov
int3
push
loopne
pop
fwait
insb
or
cld
inc
or
adc
sbb
mov
fwait
xchg
cwtl
fsubs
gs
test
mov
in
hlt
testl
or
sahf
sbb
xchg
cltd
enter
mov
cmpl
fsubs
push
js
shr
icebp
and
roll
outsb
dec
and
insl
lcall
and
iret
rcl
xchg
mov
mov
xchg
jp
adc
sahf
and
sar
adcl
or
jl
xor
lock
adc
ja
jmp
aam
and
mov
xchg
imul
pop
popf
add
inc
lea
lcall
cmc
stc
loop
pop
jno
fs
sbbl
xor
mov
pushf
fstpt
test
js
hlt
neg
fs
mov
fsubrl
sbb
pop
or
jl
mov
repnz
inc
arpl
jb,pt
push
dec
inc
cwtl
push
lcall
lcall
and
mov
jg
fadds
jns
jb
popf
and
jo
mov
mov
das
jle
xlat
stc
dec
jle
fnstcw
sbb
outsb
sub
push
push
cmp
jbe
outsb
add
repz
nop
mov
push
jo
lock
or
or
test
mov
mov
add
rorb
lock
std
push
popf
pop
xchg
mov
jecxz
xorl
xor
movsl
outsl
ss
push
clc
adc
adc
movsb
adcb
inc
xchg
repz
sub
pop
rclb
mov
or
sub
dec
push
test
repnz
push
stos
cmpsb
dec
arpl
cli
cmp
cmpsl
cwtl
or
adc
cmp
ljmp
pop
dec
mov
out
jge
lods
mov
loope
lock
push
cmpsl
orl
pop
subl
adc
addr16
xlat
imul
call
push
test
nop
cmpsl
cmc
fcomps
movsb
out
sar
into
test
roll
dec
fucom
aaa
cmc
dec
cltd
jo
sti
dec
cmp
call
cmp
inc
mov
add
xchg
adc
push
neg
sbb
pop
xchg
daa
and
dec
jb
cmp
mov
decb
and
inc
mov
and
aaa
dec
and
xchg
push
ja
push
push
mov
add
or
and
fs
push
mov
cmpsb
sahf
mov
enter
jg
movsb
movsb
lcall
dec
out
ds
xchg
rcll
xor
xchg
addb
adc
cmp
dec
pusha
test
mov
fisttps
mov
mov
cmpsl
movsb
faddl
lods
stc
lds
ds
ret
xlat
das
mov
sub
inc
mov
ficoms
mov
mov
sahf
push
or
shlb
lock
out
and
jge
push
addr16
pop
ds
ret
repz
or
push
mov
and
movb
and
xchg
clc
mov
int
dec
jnp
loope
loopne
fistpll
jp
pop
sbb
imul
xchg
mov
stos
xor
jne
bound
add
or
sbb
jmp
xor
push
cltd
fcoml
mov
or
mov
mov
inc
xor
cli
sahf
adc
cmpl
je
sbb
das
mov
sahf
dec
movl
xor
add
popf
lock
mov
in
bound
insl
iret
orl
mov
inc
shll
lock
outsb
dec
push
ret
or
or
mov
ja
xchg
cld
cmp
sbb
mov
xchg
xchg
xchg
insl
sahf
jb
out
mov
stc
pop
push
in
push
jmp
subl
adc
or
inc
add
or
xchg
dec
pusha
das
ja
cmp
fsubr
std
inc
scas
add
mov
xchg
mov
push
cltd
aam
cmp
pop
pop
loop
push
incl
jb
pushf
or
adc
fwait
sbb
or
sbb
and
iret
in
ss
pop
cmp
test
fwait
test
sub
cmp
repnz
xchg
xchg
xchg
mov
aas
mov
js
out
mov
sub
jp
sbb
sub
lahf
inc
xchg
fwait
pushf
andl
leave
cmc
inc
fwait
sbb
inc
push
mov
jns
add
dec
ds
adc
jp
rorb
sbb
lahf
sbbb
xchg
loop
inc
jle
or
xchg
adc
jb
fcomp
or
add
and
and
sbb
ds
adc
nop
add
mov
in
and
sub
mov
out
lcall
sbb
dec
and
ret
faddl
xchg
pop
jp
sbb
popa
add
sub
adcl
mov
fcmovb
inc
mov
push
outsb
fs
test
xchg
loope
and
daa
cmp
sbb
lea
lods
ficomps
sbb
mov
sbb
sub
xor
lds
or
loope
fiadds
xchg
bnd
jecxz
mov
mov
imul
cltd
pushf
inc
rcrl
xchg
shl
pusha
inc
pop
fwait
mov
sbb
push
jne
mov
outsb
add
loope
adc
mov
insb
mov
cmp
cmp
cmpl
jg
cmp
loope
mov
movsl
mov
xchg
mov
rcrl
push
push
mov
cmpsl
mov
sub
in
mov
and
ljmp
adc
insl
jne
dec
dec
lods
sti
clc
sbb
fiadds
cmp
xor
out
mov
lret
repnz
push
dec
dec
fstpt
dec
mov
scas
into
scas
pop
repz
mov
jecxz
sbb
fs
mov
lcall
adc
je
fwait
add
cmpsl
pop
mov
mov
cli
mov
fs
sbb
in
or
lock
pop
lds
push
adc
sar
and
dec
and
mov
rcll
mov
inc
mov
nop
dec
loopne
add
xor
mov
test
stos
adc
adc
mov
mov
in
jle
xor
add
inc
js
ja
pop
push
xchg
in
push
pop
sarb
repz
in
jbe
aad
ds
and
fs
stc
sbb
sbb
outsl
lcall
cmp
cmp
das
or
add
add
addr16
mov
push
jecxz
and
notl
pop
das
and
xchg
cmp
add
js
xchg
xor
pusha
push
mov
mov
pop
out
jne
mov
push
pop
push
add
psrld
push
test
dec
dec
shl
ficoml
mov
mov
adc
shrb
es
cmp
adc
cmp
in
and
push
cs
ret
jl
push
pop
jge
in
adc
ret
mov
fs
into
mov
jbe
mov
pusha
cmp
cmp
inc
outsl
sbb
mov
adc
inc
fistps
out
inc
shrl
addr16
cmp
adc
je
pusha
sub
pop
ds
popa
cmp
mov
mov
lock
sub
in
pop
daa
setns
dec
xor
add
mov
loopne
and
xchg
pusha
inc
inc
mov
test
psubb
insb
fdivp
divb
arpl
repnz
sbb
mov
fldt
cmp
bound
cmpsl
iret
and
bound
xlat
test
mov
shll
decl
bound
add
imul
adc
xchg
xchg
cmpsl
jns
es
shll
mov
inc
pusha
loope
popf
xor
testb
fisttps
cltd
sub
add
jns
mov
and
scas
xlat
scas
gs
jno
adc
xchg
aaa
pop
mov
rcll
fdivrl
hlt
mov
or
add
push
pop
pop
adc
sbbb
mov
cmpsb
cmc
mov
pop
movsb
imull
data16
lea
out
xlat
test
bnd
out
popf
imull
add
mov
outsb
pop
cmpl
sbb
jnp
sar
sti
inc
imul
sub
cmpb
test
xchg
test
aam
cmp
and
lahf
incl
cmp
or
pop
aaa
mov
ja
pusha
adc
and
insb
cmpb
out
inc
leave
lods
insb
std
pop
push
clc
cmpsl
jbe
xor
pop
pop
lahf
mov
jg
or
arpl
push
add
mov
jl
inc
sbb
or
sarb
loope
dec
pusha
xchg
xorb
aaa
fdivrs
cmp
mov
ret
insl
adc
xor
bound
adc
es
jp
ret
scas
test
dec
imul
lods
aas
pop
popa
into
cmpsb
ds
stc
xor
sub
outsb
sbb
shrl
xchg
idivl
jne
mov
shl
xchg
xor
jp
fwait
repz
jp
sbb
xor
das
dec
inc
fsubrl
add
fmuls
rorl
mov
pop
adc
lods
mov
loop
cltd
xor
loopne
adcb
xor
pusha
xor
lock
cmp
cmp
mov
cmp
xchg
push
push
jo
dec
popa
nop
add
in
in
stos
xor
fdivrs
jnp
orl
or
push
fwait
incb
pop
add
div
nop
cmc
mov
jle
mov
or
jne
cmpsb
and
std
daa
repnz
dec
pop
dec
pusha
popa
add
bound
xchg
outsl
cmpsl
push
pop
cmpsl
pop
inc
cmp
push
movsb
xchg
inc
add
repnz
cmp
mov
iret
data16
mov
mov
mov
inc
daa
sbb
insl
and
repnz
hlt
pop
sahf
cmp
aas
adc
xor
mov
add
dec
jge
daa
cmpsb
sub
std
test
mov
sub
adcb
fwait
cmpsl
shrl
out
fwait
out
sub
mov
sbb
je
lcall
shlb
out
cmp
cmc
pop
xchg
enter
lcall
jno
mov
and
es
imul
cmp
add
das
int
fadds
pop
sub
aaa
mov
cmp
mov
int3
ret
cmc
aad
xchg
xchg
loopne
cmp
or
pop
sbb
mov
test
lcall
repz
push
lds
cmpl
pop
xor
rol
jmp
sub
inc
mov
sub
incl
lahf
cmpsb
cmpsl
out
sub
push
pop
ds
lods
dec
rorb
mov
xchg
adc
fsubl
daa
rcrb
ljmp
loopne
mov
js
and
dec
cmp
stc
loope
xchg
or
xchg
pushf
lret
jg
sub
cli
push
mov
fcmovb
pusha
push
sbb
sub
pop
add
jg
or
xor
cmp
leave
xchg
aas
dec
cs
lods
test
mov
mov
fwait
out
in
and
xchg
and
loop
inc
inc
cmc
test
fwait
or
mov
cld
arpl
mov
mov
out
outsb
mov
push
mov
daa
pop
cmp
sbb
test
bound
push
mov
sub
pusha
enter
add
inc
adc
adc
rolb
jg
xchg
mov
ret
inc
adcl
fwait
xchg
xchg
xor
or
stc
hlt
imul
insb
shll
and
xor
adc
fcomps
enter
mov
xor
mov
lcall
or
in
ficompl
jecxz
inc
pop
icebp
pop
xor
notl
cmp
outsb
sbb
inc
cmp
inc
inc
lcall
xor
pushl
imul
mov
jge
xlat
icebp
mov
test
mov
cmc
pop
add
dec
push
or
sub
mov
cwtl
fimuls
daa
ja
pop
fisubl
adc
orb
jns
rcrb
cmc
into
in
mov
enter
jb
add
or
cmpsb
add
les
aad
dec
loopne
rol
mov
insb
dec
adc
cmpl
xchg
pop
les
sbb
adc
sbb
fs
inc
arpl
icebp
mov
fsubrp
inc
jg
cmp
cmp
pop
cmp
mov
xchg
cmp
lcall
ret
divl
push
negb
cs
cmp
push
sub
lock
shll
addr16
push
jl
scas
data16
mov
mov
lea
push
les
out
xchg
push
adc
inc
push
push
add
ja
add
or
push
xchg
and
mov
lock
pop
sub
sahf
js
mov
mov
xchg
aas
jns
add
test
fldenv
das
mov
mov
and
lcall
inc
test
jo
es
fs
adc
ja
or
cs
or
sub
aas
pop
nop
std
lcall
fwait
ret
pushf
andb
loopne
xchg
shlb
jo
addb
lock
scas
lds
push
int3
xchg
dec
and
shl
cmpl
std
sbb
je
push
and
cmp
sahf
pop
mov
xor
mov
ret
loope
iret
fldcw
ja
cmp
fcoml
sbb
push
or
stc
jecxz
xchg
dec
cmp
les
jno
loope
fsubrp
testb
cltd
insb
adc
push
adc
repnz
add
imul
mov
sbb
xor
fwait
or
sub
sbb
push
pop
mov
scas
fbld
aam
and
or
and
or
outsb
mov
rclb
mov
mov
shlb
insb
insl
push
mov
xor
mov
daa
add
sbb
mov
xor
cmp
sub
ja
jne
test
mov
nop
and
into
int
imul
andl
jno
out
imul
scas
addr16
pop
push
mov
fst
pop
ss
push
ja
insl
sahf
mov
xchg
inc
lods
mov
and
rcrl
mov
lock
xchg
loopne
cmp
test
jmp
mov
push
dec
mov
mov
test
add
mov
icebp
shrb
push
and
dec
dec
cltd
ja
ret
lods
mov
xchg
push
push
mov
sbb
decb
lods
repnz
call
daa
gs
fldln2
fs
push
mov
mov
inc
inc
je
cmpsb
rorl
mov
xor
lods
es
jg
xor
ljmp
xchg
clc
dec
ljmp
filds
mov
lret
add
sub
xorb
dec
sub
std
rorb
jecxz
mov
fldenv
clc
ret
or
mov
loop
jnp
gs
jb
aas
adc
sub
out
pop
mov
mov
xchg
sti
push
or
add
fsubs
fistps
popl
js
push
out
es
clc
and
dec
ffree
jno
pop
jp
clc
sbb
aas
fsubs
in
or
jb
sub
ficompl
or
xchg
test
loop
addl
pop
adc
jecxz
fwait
out
sub
mov
push
push
out
addr16
cmc
out
cmp
in
pop
push
and
add
lods
xchg
sbb
adc
rorl
fidivrs
or
test
into
push
aad
and
dec
je
aaa
xlat
fldcw
push
idivl
mov
test
mov
movswl
mov
add
and
mov
push
push
cmp
inc
loopne
insl
mov
bound
mov
lea
lcall
mov
movl
js
std
je
sahf
fldcw
cmpb
dec
int3
mov
out
aaa
pop
pushf
sbb
andb
inc
rolb
pushf
pop
mov
addb
shl
popf
inc
dec
jg
dec
xchg
adc
dec
fldcw
pop
and
mov
pop
cmpsl
cmp
andb
jbe
or
add
xor
pop
lret
push
shll
cmpsl
stc
pop
sub
adc
and
push
pop
add
mov
leave
jmp
jmp
cld
jge
sub
arpl
imul
ret
fistps
push
cmp
scas
add
jge
sub
sbbb
pop
inc
jo
roll
sub
in
cltd
adc
pop
stos
mov
jmp
stc
cmc
mov
cli
pop
cmp
sbbl
jo
mov
orb
jo
insl
adc
repz
enter
mov
add
shll
repnz
jge
cwtl
add
xor
test
fwait
ret
mov
insb
jb
and
push
push
xlat
mov
mov
xchg
xchg
jle
fcoml
pop
lcall
das
or
pop
inc
inc
and
push
sahf
push
push
addr16
pop
sbb
pop
or
add
cmp
and
sbb
in
bound
mov
adc
mov
pop
dec
xorl
jle
lds
ljmp
in
and
inc
loope
jge
imul
outsl
adc
jmp
jns
or
in
push
rclb
xor
pop
jns
jbe
popa
add
cltd
pop
scas
sti
int
outsl
call
js
xchg
pushf
out
pop
lret
and
and
mov
pop
jp
xchg
fists
mov
ret
add
mov
push
xor
inc
mov
aad
mov
outsl
fbstp
fsts
idivl
jp
notl
insb
aam
mov
imul
ficoml
bound
xchg
push
pop
pop
ret
jnp
insb
loope
movsl
or
sbb
pop
cmp
adc
les
xchg
int3
jg
ljmp
xchg
pushf
add
nop
inc
inc
div
inc
sub
push
nop
and
add
pop
movsl
pop
mov
xchg
repz
cmp
cmpsl
inc
es
cmpsl
mov
xchg
jno
dec
push
aaa
out
movsl
test
in
adc
dec
or
lret
dec
test
ljmp
jecxz
xchg
xchg
sti
push
add
mov
add
out
cmp
psllq
pop
addb
cltd
sbbl
mov
sbb
push
or
push
stos
push
mov
xor
push
pop
pop
ret
stc
inc
rcll
sbb
push
fwait
dec
out
cmpl
and
out
mov
push
test
daa
mov
adc
loope
addr16
and
or
xchg
sbb
cmp
mov
or
cmp
xchg
add
sbb
or
add
add
sub
jne
jbe
cmp
repz
push
leave
add
daa
orb
insl
dec
dec
xchg
lds
rcll
lock
sub
push
jno
sbb
cmp
loopne
mov
mov
in
add
mov
jmp
popf
jecxz
pop
fidivrl
pop
inc
scas
inc
dec
cmp
dec
or
cmp
lds
test
push
out
mov
ljmp
add
inc
bound
out
jg
loopne
enter
shlb
pop
sbb
popf
jmp
ds
pop
xchg
add
xlat
xchg
xor
adc
xchg
loope
or
inc
adc
ret
mov
mov
test
add
fistpll
or
pop
scas
mov
sarl
jns
imul
cld
push
movsb
add
xlat
sbb
jg
push
and
jecxz
mov
xchg
pusha
xor
dec
pop
fidivl
dec
aam
pusha
pushf
aas
xlat
in
pop
out
dec
mov
mov
faddp
xchg
push
mov
jp
nop
dec
mov
pop
test
pop
add
lcall
rcrb
scas
repz
jno
lret
cltd
push
xorl
xor
repnz
xorb
fsts
and
addr16
mov
sub
or
lock
mov
scas
mov
jnp
jb
and
movb
cwtl
addr16
and
push
xlat
orl
fisubs
js
pop
test
xchg
or
add
fbstp
push
stc
rolb
inc
jge
andl
rol
orl
xchg
and
arpl
sti
cltd
sbb
mov
std
ja
fistl
inc
sti
mov
add
cmp
sbb
sbb
hlt
pusha
inc
cmp
xchg
xchg
lcall
mov
gs
adc
mov
push
pusha
sbb
icebp
dec
add
adc
sbb
add
push
enter
popf
pop
add
sahf
in
movl
mov
iret
sti
pop
cltd
popa
jle
sbb
add
rolb
sbb
cmpsl
jnp
cwtl
pusha
ljmp
js
mov
imul
xchg
fimuls
lahf
dec
dec
pop
sub
sbb
mov
xchg
sub
mov
lahf
add
scas
add
mov
push
clc
jp
dec
cmc
dec
mov
xlat
mov
js
xchg
jnp
mov
js
mov
test
enter
outsl
in
push
filds
adc
cltd
fiadds
push
mov
cmp
gs
xchg
test
dec
out
ljmp
cmc
xchg
scas
or
adc
push
fsts
add
xor
inc
fnstenv
xchg
fiadds
aad
xchg
dec
and
mov
add
pop
push
jl
pop
mov
rcll
fwait
ja
or
xor
pop
ss
push
jg
adc
sub
loope
xchg
fld
fists
arpl
movsb
dec
sbb
in
cmpsl
add
pop
push
xchg
aas
xlat
mov
xor
cmpsl
push
pusha
stos
cmc
sbb
push
and
movsb
mov
and
push
mov
test
push
dec
cli
mov
ljmp
push
cmp
or
fs
dec
sbb
daa
fcmovbe
rcll
mov
push
lcall
decl
inc
push
leave
push
mov
xchg
outsl
ret
sub
enter
test
cmpl
ret
cwtl
pop
fsubrl
xchg
scas
ffree
dec
lcall
add
out
cmp
mov
sbb
sub
and
scas
orb
and
je
inc
mov
mov
dec
out
mov
mov
or
int3
sbb
xchg
inc
in
jg
in
dec
adc
sbb
imul
jge
ljmp
and
push
sub
dec
xor
mov
xchg
mov
xchg
add
in
stc
sub
lret
ja
les
int3
jecxz
nop
pusha
outsl
repz
mov
sub
and
jge
scas
fwait
xchg
sbb
lea
xchg
sub
scas
add
mov
in
cltd
mov
pushf
mov
testl
add
or
mov
daa
fnstsw
loopne
popf
sub
push
sbb
adc
out
mov
cwtl
xchg
adc
scas
xchg
imul
xor
pop
jle
xor
bound
xor
int
aas
push
sarl
lea
mov
int
lcall
popf
mov
xor
lock
insl
fmuls
popa
sub
rcrb
test
or
cmp
inc
sub
dec
pop
imul
mov
inc
lods
pop
xchg
sahf
fnstsw
and
daa
ljmp
sbb
movb
loopne
das
popl
xor
push
or
sbb
push
push
pop
xchg
js
cwtl
adc
shl
mov
add
lcall
mov
ja
fistps
aam
cmp
pop
pop
sti
xchg
cltd
push
jp
je
lcall
repz
sbb
push
lahf
cld
push
addb
bound
loope
sbb
fildl
jo
test
dec
movsl
scas
push
push
xchg
popf
test
dec
aaa
test
arpl
pushf
dec
xlat
sbb
inc
ret
xor
dec
aas
fadd
mov
rclb
sahf
xchg
xorl
test
out
and
push
daa
and
mov
sbb
xor
mov
push
xchg
ja
sti
mov
shrb
ljmp
jno
addr16
jp
mov
sbb
jnp
pop
outsb
in
xchg
lret
lods
jnp
and
inc
jg
in
icebp
jmp
mov
sbb
pusha
dec
add
inc
jo
sar
movsb
dec
and
adc
add
subb
andl
xchg
lods
mov
jl
pop
pop
mov
add
gs
pop
andb
and
stc
cwtl
push
cmp
rclb
sub
clc
stc
repnz
add
sbb
fisttpll
mov
push
loopne
pusha
es
add
sub
or
daa
mov
cs
adc
and
test
and
jno
sbb
arpl
test
enter
insl
sbb
inc
pop
es
pop
test
or
out
hlt
jb
out
adc
xor
push
imul
repz
pop
push
fisubl
add
mov
pop
insl
and
int
sbb
jge
push
ss
push
pop
subl
push
fcmovnu
mov
rcr
xor
cmp
xchg
imul
push
js
add
push
cmp
mov
add
push
in
test
fcompl
lahf
mov
lea
nop
jle
filds
sbb
dec
mov
jno
test
mov
fidivrs
cs
sub
and
pop
lock
das
mov
repnz
pop
je
add
test
dec
sub
lahf
sahf
sbb
add
add
fldenv
mov
mov
add
xchg
mov
add
mov
xchg
xchg
mov
pop
mov
js
xchg
push
pop
fiaddl
fstpt
enter
stc
int3
roll
out
pop
or
dec
ret
xchg
outsl
repz
mov
sahf
mov
add
adc
cltd
arpl
cmp
int
push
pop
dec
xchg
subl
aaa
cli
push
nop
push
xchg
bound
cmp
data16
call
mov
push
xor
rclb
mov
cmp
mov
movsb
aas
jae
cli
clc
mov
xchg
add
cmp
lcall
in
adc
cmp
jae
ja
xor
enter
clc
cmpsl
mov
adc
cmp
mov
test
aas
push
xorl
cmp
cmp
sbb
test
inc
push
ret
lods
pop
jmp
mov
fmul
push
rcll
and
outsb
sar
dec
or
movsb
loop
push
inc
ja
fisubrs
je
stc
mov
and
push
or
test
int
lahf
gs
notl
push
mov
mov
fwait
cmp
lret
test
roll
mov
jge
imull
aaa
lahf
sbb
cmc
xchg
cmp
xchg
mov
ds
cmc
ljmp
mov
sbb
mov
cmc
sub
lds
xchg
cmp
inc
cmp
cmp
imul
fiaddl
inc
xchg
add
pop
sbb
pop
pusha
aam
pusha
hlt
test
nop
inc
pop
push
add
add
or
xchg
ja
loope
cmp
pushf
testl
popf
xchg
mov
pop
sahf
or
mov
rcll
mov
arpl
mov
lea
mov
mov
out
adc
xchg
andb
mov
inc
mov
jae
arpl
xchg
mov
add
dec
clc
inc
inc
add
cmp
ret
add
popf
aas
adc
testb
push
cmp
mov
fisubrl
jo
mov
ret
jb
dec
cmp
fmul
ljmp
mov
ficoml
mov
adc
push
xchg
cmp
imul
sbb
gs
push
add
mov
pop
popl
in
bound
pop
dec
jno
cltd
mov
testb
andb
test
xchg
xchg
cmpsl
cmpl
leave
and
pop
loop
in
xlat
test
xchg
das
ror
mov
mov
fwait
les
xor
lods
sub
mov
scas
cmp
xor
ds
jmp
mov
lcall
sahf
shl
pop
mov
push
sbb
push
and
pop
pop
sub
fisttpll
aam
js
ja
mov
mov
cmp
lcall
pop
jb
dec
xor
fmull
xchg
imull
bound
add
push
and
push
inc
dec
jp
add
aam
dec
push
sub
cwtl
call
xor
subb
xor
jbe
into
pop
inc
push
sbb
daa
inc
xchg
pop
add
leave
jl
sbb
outsb
xorb
sbb
lcall
jg
shll
inc
cmp
push
test
lahf
mov
sti
jbe
scas
jg
mov
dec
inc
adcl
add
jnp
lcall
adc
cld
orb
pop
repz
cmp
pop
clc
or
out
nop
push
int3
int
out
imull
idiv
inc
pop
inc
mov
push
imul
inc
iret
and
pop
loope
cwtl
push
daa
push
sub
aas
add
pop
xchg
inc
mov
enter
aas
popa
incl
jp
lcall
pop
xor
cld
ja
popf
xchg
shlb
dec
rcr
xchg
lcall
jae
dec
pushf
jae
sub
test
inc
inc
mov
sbb
push
gs
cmp
jb
inc
cmpsb
pusha
emms
mov
mov
arpl
cmpsl
insl
lods
inc
xchg
mov
fldl
sub
lcall
xlat
imul
test
pop
and
pop
fsub
xchg
jb
cmpl
push
roll
xlat
daa
dec
mov
inc
xchg
xchg
or
pop
cmp
add
add
and
pop
pop
sti
sub
cwtl
test
movsl
addr16
es
shll
or
call
roll
mov
dec
mov
mov
add
sbb
and
push
inc
xchg
pop
or
pop
cld
xchg
xchg
lahf
lea
inc
jnp
adc
adc
jb
or
fistpl
bound
ret
sahf
addr16
fdivs
mov
jl
or
cmpsl
mov
addr16
daa
pop
sti
loop
ret
inc
loopne
mov
aam
jb
shrl
ss
call
insl
in
fwait
repnz
pushf
push
lods
and
dec
out
xchg
cltd
xchg
rcr
leave
sub
scas
jae
adc
ja
add
pop
scas
test
add
jecxz
ret
xlat
les
dec
and
orl
lcall
mov
stc
inc
cmp
ja
into
imull
xchg
dec
pop
imul
xchg
js
cmp
daa
sti
mov
fsub
cmpsl
fisubrl
movsb
arpl
pop
jl
xchg
xchg
mov
stos
sbb
add
push
repz
leave
mov
mov
pop
push
add
dec
push
sti
mov
mov
and
mov
andb
cmp
mov
cmp
and
dec
test
cmp
inc
add
pop
aad
ret
cmpsl
xchg
bound
repnz
cmc
arpl
mov
inc
lcall
jge
pop
cmpsl
pop
jo
mov
jge
mov
xorl
jecxz
test
mov
mov
sub
push
and
popa
mov
xor
jne
xor
cli
push
cmpsb
xchg
mov
mov
cmp
pop
jns
xchg
outsl
pusha
jne
xchg
pop
adcb
ret
mov
stc
imul
jne
and
xchg
sbb
sbb
cmp
mov
ss
jno
or
add
cmpsl
loope
sub
mov
pop
outsl
cmc
fnstenv
out
mov
dec
out
cmpsl
movsl
cli
push
filds
ja
cmpl
jmp
cli
adc
movsb
xorl
dec
sbb
jge
cmp
cmc
add
int
pop
in
cmp
and
scas
xchg
fidivl
imul
push
mov
mov
subl
push
add
daa
and
test
adc
fldcw
inc
lds
js
cmp
pop
orb
pusha
jg
jb
push
data16
jns
jp
ja
outsl
mov
orl
jg
dec
inc
mov
lahf
jp
es
arpl
repnz
and
test
movsb
and
xchg
jg
pusha
aaa
clc
pop
notl
fnstenv
adc
cmp
xchg
cmp
scas
mov
mov
into
stos
movsb
inc
shlb
push
add
sub
add
imul
dec
jb,pt
cmpl
jmp
push
mov
inc
imul
add
inc
push
mov
push
cwtl
ret
ret
dec
test
outsl
pusha
rcl
cmovbe
inc
cmp
adc
nop
push
dec
dec
push
pop
les
pusha
fistpll
aam
testb
mov
lcall
fwait
mov
mov
mov
jo
or
and
sbbl
jp
mov
add
ja
shl
inc
xchg
popf
aas
scas
arpl
mov
lcall
pop
add
loope
out
mov
cli
sub
mov
push
sti
jo
adc
mov
mov
shlb
inc
addr16
gs
push
xchg
sbb
inc
sub
pushf
pusha
mov
and
jg
incl
testb
pushf
lret
jns
shrb
mov
aas
arpl
or
shll
push
mov
sub
fbstp
enter
adc
jae
xorl
or
scas
cmp
push
jecxz
push
not
cmpb
pushf
mov
pop
ss
cmp
mov
faddl
fcomps
ja
outsl
rcrb
rol
sahf
add
add
mov
icebp
pop
setge
stc
fildl
pushf
incl
mov
push
xchg
mov
or
test
and
jbe
adc
das
shlb
jmp
pop
fmull
jbe
xor
pushf
mov
add
mov
sahf
adc
mov
add
and
xchg
lds
sbb
cltd
pop
bound
scas
es
rolb
mov
adc
js
adc
loop
test
sahf
jecxz
mov
xor
loope
lcall
cmp
push
loopne
rcrb
inc
add
mov
outsl
pop
mov
imul
xchg
push
ja
pop
pop
push
sbb
sub
mov
cs
lcall
iret
bound
pop
ss
stos
shrb
pop
xchg
jns
outsl
cmc
or
loope
inc
inc
repnz
push
pop
sbb
mov
fs
pop
popf
nop
lea
pop
pop
push
call
les
jns
lret
xor
mov
mov
sub
xchg
pop
cs
lret
push
add
nop
leave
mov
add
jo
mov
addr16
mov
push
adc
lahf
je
mov
pushf
fs
cmc
hlt
and
xor
adcb
pop
mov
data16
inc
in
or
sbb
xchg
fdiv
add
xchg
sbb
loope
inc
cmp
test
mov
xchg
jmp
lahf
aam
int
cltd
lds
dec
inc
mov
sub
les
fsubrl
lea
sbb
jb
xchg
subb
jns
mov
outsl
adc
js
outsl
or
pop
sbb
xor
inc
xchg
dec
jns
imul
jae
pop
or
dec
int
clc
cmp
xor
mov
repnz
in
subb
aas
sub
js
int
lods
pop
in
imull
ja
aaa
mov
mov
add
out
mov
arpl
iret
mov
pop
pop
lcall
addr16
sbb
sbb
dec
in
mov
fistpll
test
popa
cmpsb
mov
ret
push
movsb
rorl
mov
pop
fisttps
orl
pop
pop
adcb
dec
nop
addl
sbbl
xchg
xchg
push
addb
cmpsl
ja
add
dec
sbb
cltd
test
jl
mov
push
test
fwait
or
pop
mov
xor
imul
cltd
add
out
cld
fildl
mov
pop
add
mov
or
fwait
cmp
xor
cli
pop
cmc
and
pop
mov
pop
test
adc
add
mov
or
mov
test
jmp
xor
mov
mov
jne
nop
sti
scas
lea
adc
inc
jo
gs
ficoms
inc
adcb
mov
pop
fistpl
pop
mov
xchg
xchg
mov
ss
mov
jb
mov
xchg
jp
cmp
dec
daa
pop
push
in
mov
cmp
xchg
and
mov
loopne
cwtl
fs
out
or
xchg
dec
bound
pop
inc
push
cltd
and
aas
in
cmp
and
inc
pmuludq
inc
ja
repz
repz
xchg
inc
cmp
sahf
sub
sub
lahf
or
stos
in
roll
lods
mov
push
scas
xor
fcompl
jae
push
and
addr16
aad
mov
pop
dec
loope
data16
repnz
cmpsb
xor
lock
mov
mov
jo
lahf
repnz
xchg
sbb
xor
push
je
push
push
test
dec
xor
pop
lea
mov
mov
ja
xchg
jne
inc
xchg
jp
addb
test
dec
enter
pop
pop
out
xchg
aas
mov
mov
dec
mov
xchg
dec
aad
aaa
out
and
mov
push
fisttpll
inc
enter
aad
xchg
cmpsb
leave
nop
shrl
enter
cmp
nop
xor
lds
jns
mov
xchg
sahf
xchg
jo
cmpsl
repz
fistpll
push
test
lahf
mov
add
insb
cmpsl
jle
cmp
inc
test
subb
sub
and
sub
pop
fmull
ljmp
mov
lods
in
jnp
addl
test
sbb
lahf
add
mov
xchg
jnp
and
add
or
pop
jmp
sbb
movsb
movsl
sbb
jecxz
test
push
pop
orb
pushf
jecxz
add
sbb
pop
and
pushf
mov
mov
xchg
js
and
decl
mov
ret
jo
cmpsl
mov
dec
push
xchg
addr16
enter
mov
cmc
mov
test
loopne
jl
fists
std
pop
mov
lret
subb
mov
mov
jmp
sbb
pop
push
cmp
jns
adc
jecxz
addb
mov
and
aaa
cli
pop
mov
add
add
pop
add
aad
outsl
aas
xor
and
sbb
fld
xchg
fldl
imul
jle
repnz
fbstp
in
mov
jle
xchg
stc
xchg
fstps
icebp
leave
fwait
add
test
cmp
or
add
mov
into
add
aas
ret
andb
dec
pop
ret
pop
cmp
inc
dec
outsl
test
mov
decb
mov
into
add
cmpb
ja
repnz
xor
loope
jne
jae
adc
mov
fadds
cmp
enter
roll
fidivl
dec
addr16
pop
das
add
fnstenv
cmpsl
xchg
test
mov
adc
sub
dec
jl
jmp
sarl
adcl
adc
roll
adc
mov
ja
and
push
adc
jle
fnstcw
inc
pop
or
push
inc
inc
das
js
push
jnp
push
mov
movsl
xor
adc
add
lods
xor
roll
add
stos
jecxz
push
lret
sbb
or
daa
iret
fdivrs
cmp
mov
aaa
inc
mov
dec
cwtl
pop
ret
sbb
jmp
push
aad
sar
push
dec
cmpsb
inc
inc
outsb
call
sbb
imul
jo
add
test
inc
and
imul
scas
and
adc
call
test
rorl
add
push
ds
faddl
mov
sub
pop
addb
inc
sbb
fildll
xchg
sbb
xchg
mov
push
mov
orl
in
pop
xor
add
push
jne
sub
flds
sub
stos
jmp
ja
stos
cmp
enter
jns
sub
incb
pop
mov
push
push
addr16
jge
cmpl
adc
popf
xchg
pop
mov
lret
pusha
enter
sbb
inc
pop
loopne
das
pop
and
sub
xchg
mov
jne
xchg
sbb
bound
cmpsl
orl
jecxz
mov
sub
cmc
sub
popf
push
sti
rcl
sahf
mov
fs
repz
xchg
inc
dec
jecxz
or
push
sbb
enter
fidivl
es
pop
xchg
cmp
rorl
add
xor
int3
mov
or
jnp
mov
insb
pop
sbb
xchg
lahf
lods
mov
jl
xor
pop
dec
or
fsubs
lds
movsl
pop
adc
ret
int3
rorl
loopne
add
popa
mov
rcl
add
add
add
add
sbbl
push
fisubrl
or
shll
shr
stos
rcll
into
dec
push
out
fdiv
add
pop
pop
and
dec
fstpt
mov
cwtl
and
fwait
lahf
sbb
dec
xchg
cmpsb
xchg
pop
or
ret
xchg
orl
inc
stos
and
mov
inc
fdivrs
mov
add
out
test
shrb
mov
inc
xor
mov
mov
cmp
nop
jecxz
push
jae
mov
cmp
sub
ja
and
popa
mov
testb
adc
shl
add
pushf
sbb
cmp
and
inc
pushf
mov
rcrb
or
adc
inc
inc
sub
mov
lea
sub
bound
shl
cwtl
xchg
xchg
sub
aaa
das
mov
mov
xchg
cmp
out
mov
rolb
xchg
loope
adc
push
mov
sbb
xchg
mov
add
jg
sahf
outsb
std
pop
or
shl
clc
adc
push
pop
test
add
stos
jnp
pop
arpl
ret
pusha
test
lds
rcll
adc
xchg
sbb
mov
push
fsub
cmp
mov
imul
push
jno
jne
cmc
pushf
xchg
loop
mov
jb
add
xchg
mov
outsb
adcb
mov
ja
popa
aam
nop
nop
jae
sbb
test
rcr
mov
jecxz
xchg
or
aam
pop
mov
int
mov
pop
lds
in
ret
mov
dec
lds
dec
jg
sbb
xchg
jne
out
nop
daa
cmc
addr16
push
sbb
mov
gs
push
jbe
cltd
and
stos
rorb
push
bound
rclb
aaa
xchg
int3
inc
fcomps
inc
les
xor
jp
inc
inc
inc
adc
mov
aas
add
ficomps
cmc
sub
fwait
add
test
roll
std
cmp
xchg
loope
icebp
out
mov
mov
or
mov
sbb
pop
fistps
sbb
inc
push
fwait
pop
push
clc
jp
in
cltd
repnz
cmp
cmpsl
mov
add
mov
popf
test
lds
andb
jecxz
dec
jg
dec
pop
cltd
jae
cmp
sbb
mov
mov
push
push
sar
lcall
push
mov
cmp
xor
inc
aad
fsub
stos
mov
dec
ja
sub
rcrb
fsts
xchg
push
and
call
aad
addr16
jo
insb
push
pop
andb
mov
fiadds
pop
sbb
fmull
mov
mov
or
adc
sarl
repnz
push
lahf
or
xor
inc
ds
pop
cwtl
sbb
push
pusha
inc
ret
sbbb
jl
mov
push
cwtl
sub
test
sbb
xchg
nop
xchg
xlat
in
sahf
clc
daa
add
push
ja
xchg
jp
daa
pop
and
add
mov
das
orl
push
and
cmc
pop
inc
sbb
aas
iret
jle
inc
adc
out
jp
pop
sbb
daa
ja
addr16
fadds
adc
or
into
sbb
cltd
and
and
pushf
nop
xchg
sbb
cmpl
xchg
pop
mov
xrstors
mov
std
rcl
cld
shr
sbb
call
mov
cmc
lahf
xor
std
jecxz
fs
push
pusha
mov
inc
mov
movsb
inc
sbb
inc
dec
lahf
lret
idivb
mov
mov
adc
adcb
ja
repz
lcall
repz
xchg
aas
bound
std
rcll
pop
push
jnp
jns
test
jl
xor
subl
pop
sahf
test
jo
sbb
daa
fsubl
push
xor
scas
nop
mov
push
or
xchg
mov
fcoml
fsub
lea
das
sahf
out
shrl
or
and
cli
cs
movl
dec
xor
scas
mov
or
dec
inc
cld
sub
add
imull
push
inc
movsb
xor
test
stos
sbb
fnstenv
addb
mov
pop
clc
sahf
fwait
mov
shr
fwait
push
jbe
fcoml
pop
push
inc
test
aam
adc
scas
mov
add
rcll
dec
push
arpl
shlb
sar
fimuls
add
add
dec
mov
xchg
and
shlb
add
stos
add
mov
xor
cwtl
or
aas
loope
je
pop
fwait
cmp
pusha
push
mov
rcrb
adc
mov
mov
test
mov
outsb
popa
shlb
into
popf
call
rolb
jo
mov
fs
sub
xchg
adc
sbb
cld
cmp
in
lcall
mov
cmc
inc
nop
mov
and
pop
test
jl
pop
adc
fsubl
and
xchg
hlt
in
pop
jp
pop
push
xor
inc
lea
xor
fcmove
in
sbb
mov
xlat
and
imul
xchg
imul
push
push
mov
pop
mov
jecxz
nop
cmpb
addl
mov
ja
cli
test
and
je
addr16
nop
scas
stc
add
test
movsb
lahf
add
and
lret
jp
fdivrs
ja
cli
or
push
push
sub
repnz
ja
andl
jo
push
or
dec
inc
and
add
std
test
pop
jae
push
aaa
add
push
dec
ficoml
push
mov
cmp
and
imul
sbb
jb
clc
inc
and
cld
adc
cmpl
sbb
fdivrs
inc
and
mov
push
outsb
dec
rcrb
inc
sub
cmp
mov
jnp
xchg
inc
cmp
add
or
cmp
and
cmp
mov
out
sbb
in
repz
jne
mov
mov
push
imul
ja
add
rolb
cmp
incb
imul
jnp
cmc
dec
dec
push
pop
clc
dec
repnz
cmp
pop
xlat
sahf
imul
addr16
sbb
add
lock
ficompl
cmp
mov
add
push
cld
push
loop
cmc
std
xchg
ljmp
cld
inc
js
and
dec
jl
pop
aas
neg
sub
pop
pop
sbb
outsl
add
push
push
add
mov
lahf
clc
sbb
test
lcall
push
lahf
pop
mul
mov
rcrl
push
test
test
mov
pop
call
mov
fsts
imul
imul
ja
xchg
lcall
mov
pop
rcll
das
mov
cli
popf
addb
pop
insb
ds
in
call
loop
in
dec
xorl
mov
ret
test
pop
and
pop
das
scas
inc
rol
ja
test
loope
dec
scas
lahf
mov
addr16
pop
cmp
incb
jle
adc
add
pop
sbb
pop
mov
bsf
mov
repnz
sbb
test
pusha
sub
sbb
ret
inc
sub
leave
dec
mov
ds
sbb
pop
inc
enter
push
sbb
loope
mov
in
pushf
or
test
dec
sub
sub
lods
inc
inc
dec
lock
cmp
cmc
in
aad
adc
or
xchg
ljmp
push
add
pop
mov
cmp
jl
jl
pop
xchg
rcr
pop
xchg
movsb
fdivrs
test
add
pop
push
xor
cltd
out
mov
mov
and
fbstp
aam
cmp
jle
lcall
and
mull
pop
or
mov
mov
std
pop
cmc
in
pop
sbb
mov
adc
xor
pop
pop
addr16
sbb
push
daa
mov
or
push
pop
shll
repnz
mov
fisubrl
cwtl
push
xchg
inc
js
test
add
sbb
inc
fisttpll
cli
lods
dec
jae
jl
push
pushf
cld
xor
cmpsl
nop
inc
push
sub
or
je
imul
pusha
ljmp
pop
ret
push
imul
jecxz
pop
fadds
aas
mov
shll
insb
addr16
xchg
xchg
xchg
out
nop
lods
test
aas
xorb
mov
fwait
daa
pop
gs
jge
pop
sbb
test
ja
cmp
in
out
ljmp
shlb
lcall
scas
cwtl
fisubrs
sbb
jecxz
dec
aam
outsb
and
dec
js
and
inc
mov
addb
cmp
popa
pop
fidivs
lock
add
repnz
mov
es
dec
xchg
popa
addb
sbb
cmp
cmp
scas
mov
jo
adc
pop
loope
orl
sbb
cld
or
pop
push
sub
dec
clc
jg
sbb
jecxz
push
iret
mov
filds
mov
mov
and
out
mov
jae
pushf
loope
iret
test
mov
jo
cmpsl
push
cmove
lds
fnstcw
and
jecxz
add
dec
jecxz
add
rorl
xor
stos
ljmp
lahf
jbe
out
adc
dec
dec
xchg
xchg
sub
sbb
adc
pop
mov
or
cmp
ss
push
mov
cmp
lods
int3
mov
fmuls
imul
test
mov
mov
fiadds
pop
aad
sbb
mov
fcoms
push
push
popa
push
fsubl
or
lahf
clc
jg
mov
subb
xor
add
sbb
pop
mov
mov
inc
xor
mov
push
adc
dec
jns
movsb
sbb
push
call
shl
xor
icebp
outsl
push
mov
sbb
inc
jp
dec
in
out
push
insb
ret
xor
and
call
push
or
popa
jl
mov
and
ss
pop
push
out
nop
mov
mov
daa
dec
xlat
cmpsl
and
mov
mov
inc
sbb
ja
add
xchg
xchg
ss
sarl
ficoms
out
lea
into
sbbl
push
aam
pop
or
xor
scas
add
ficoms
out
rcrb
pop
pop
mov
inc
mov
into
fadds
cld
shlb
push
bound
jg
sbb
dec
jb
mov
cmp
stos
movsb
mov
adc
dec
push
sbb
add
inc
stos
fs
adc
cmp
cmp
adc
add
or
xchg
or
rclb
fildll
mov
add
rcr
dec
jnp
rorb
call
lods
stos
aas
mov
outsl
mov
inc
divb
add
ret
out
jecxz
jns
xchg
leave
or
mov
jg
test
xchg
inc
ljmp
out
push
ds
mov
movsb
lods
js
repnz
jno
test
iret
outsb
pop
pusha
and
insl
int
repz
mov
adc
dec
sbb
insl
clc
push
rolb
jo
sti
adc
lods
jl
add
cmp
mov
and
or
mov
out
push
test
les
push
jb
pop
mov
xchg
and
jecxz
aas
dec
mov
and
xchg
adc
or
pop
lods
jecxz
sahf
int
sbb
ja
xor
fisubrl
and
xchg
pop
into
xchg
xchg
jne
inc
cmc
ret
popl
sbb
jle
rcrl
bound
mov
or
dec
sbb
and
lret
push
add
ja
sbb
and
sar
daa
ja
repz
test
pop
add
lock
cmp
push
jae
in
clc
cli
cmc
adc
mov
repz
sub
jg
filds
mov
or
cld
push
mov
subl
jo
ljmp
sub
ret
fdivrs
aam
jnp
fbld
testb
aad
mov
dec
std
dec
icebp
stos
xchg
lock
add
sub
pop
ret
out
cwtl
inc
addl
out
push
dec
and
add
lahf
mov
add
add
je
cltd
stc
das
andl
jg
dec
mov
or
fidivrs
iret
sub
fsubl
nop
cld
xchg
pop
mov
rcll
or
nop
pop
adc
xchg
test
lods
popf
cmpsl
shrl
jge
mov
loop
pusha
insb
mov
lahf
xor
mov
pop
push
mov
add
mov
lcall
pop
mov
subb
mov
std
pop
mov
roll
fwait
das
xlat
sbb
and
cmp
xchg
dec
jb
xlat
rolb
addb
or
aaa
mov
jg
out
orb
jo
pushf
outsb
leave
mov
insl
out
mov
dec
inc
test
push
mov
jecxz
in
addl
lcall
sarl
add
clc
mov
mov
ss
or
lods
js
xchg
inc
ret
or
gs
mov
ljmp
addr16
mov
cmc
sbbb
bound
mov
jecxz
js
mov
cmp
insb
test
lret
mov
fmuls
adc
repz
dec
push
add
fwait
js
hlt
out
aas
pop
push
test
js
inc
lea
movsb
mov
xchg
in
sbb
xchg
out
inc
adc
mov
int
cli
pop
cmp
jo
pop
pushf
push
and
nop
sub
loopne
xchg
sub
cmc
pop
movl
push
push
mov
ficoml
mov
pop
jbe
dec
arpl
lods
sub
repnz
xchg
mov
and
test
push
inc
cmp
mov
ljmp
out
jo
ljmp
xor
rclb
dec
cmp
fs
jb
fs
aam
scas
fdivr
fwait
loop
or
packsswb
loopne
pop
or
sbb
sub
mov
xchg
dec
add
idivl
add
cld
xchg
fdivrs
mov
int
fists
xor
dec
int
and
xlat
add
loop
cmpb
jne
sbb
pop
jnp
outsl
enter
jge
sbbl
aaa
movl
pop
xchg
mov
cs
xor
sbbl
jns
test
call
push
or
stos
pop
fmull
mov
ss
pop
push
fstpl
sbb
in
mov
int
push
push
mov
mov
pushf
xor
inc
insl
pop
push
mov
test
and
movsb
cwtl
bound
push
jno
jmp
xchg
or
mov
pusha
test
movsb
and
ret
xchg
movsl
mov
mov
fistpl
mov
popa
lahf
xchg
push
xchg
xchg
repnz
adc
clc
sub
ds
bound
pop
fs
xorl
repnz
dec
fisubl
add
pop
adc
or
mov
jnp
mov
popf
pop
shrb
ret
or
cwtl
push
scas
sbb
mov
push
inc
insl
adc
inc
adc
cltd
jmp
cmpsl
cltd
mov
adc
out
push
cld
xchg
out
lds
add
repnz
sti
test
adc
rorl
push
sbb
movsb
test
jle
popf
lcall
sbb
ds
bound
test
cmc
xchg
push
clc
or
sbbl
push
jg
mov
test
mov
mov
pop
cmp
sbbb
out
and
adc
inc
fwait
sub
jb
push
subl
adc
push
test
mov
push
lret
fidivl
mov
lea
jmp
out
mov
and
mov
or
iret
call
push
movsb
loopne
adc
mov
adc
test
fiadds
lods
cmpsl
data16
push
std
repnz
add
push
jmp
push
imul
mov
xchg
mov
sbb
std
sbb
jnp
fmulp
icebp
or
fbld
fsubrs
cmp
pop
push
sub
dec
mov
and
pop
inc
cmp
xor
jne
jl
sbb
jecxz
fildl
cwtl
xchg
cmpb
shrb
nop
sbb
jmp
repnz
mov
sbb
loopne
push
sbbb
test
lcall
popa
sub
add
shl
pop
test
or
jno
inc
psubsb
mov
mov
scas
fmull
bswap
cmpsl
into
sub
aas
leave
mov
aas
and
mov
cwtl
aad
popf
mov
mov
sub
out
push
bound
sbb
ja
mov
in
mov
inc
add
or
sti
lahf
js
sti
ja
push
mov
pusha
mov
mov
or
lahf
jge
jp
addl
inc
or
mov
jp
je
lret
jl
jg
in
mov
mov
pop
aaa
pop
add
sub
popa
test
cmp
jecxz
imul
sbb
add
or
sbb
or
and
push
push
pusha
pop
test
lods
inc
mov
cmp
adc
je
sub
out
orl
mov
fcomp
scas
jl
cmpl
cmp
fnstcw
icebp
in
push
enter
out
gs
push
sbb
test
jns
add
jp
dec
pop
adc
js
sbbb
sub
adc
cmc
fs
imulb
xor
mov
mov
push
inc
jno
xchg
xchg
sub
enter
subb
mov
inc
jle
sub
out
push
inc
lea
cli
and
stos
mov
push
mov
adc
mov
hlt
testl
aad
fmul
jg
sub
ss
jmp
daa
inc
in
ja
cld
mov
adc
gs
push
por
or
xchg
dec
fisubl
out
outsb
sub
lahf
fsin
js
sbb
push
and
push
and
repz
fsts
inc
push
popf
pop
pushf
or
adc
push
daa
rcr
cli
stos
dec
mov
xor
mov
inc
xlat
int
dec
and
sarb
cmpb
xchg
and
adcb
std
and
sbb
sbb
sahf
shr
das
repnz
add
shll
mov
leave
dec
outsl
dec
mov
xchg
adc
test
push
enter
xchg
push
pop
movsl
insl
test
xchg
jge
stos
aam
repz
pop
repnz
xor
ja
std
adc
ret
repnz
pop
popf
call
out
push
xor
cmpl
or
scas
pop
pop
sbbb
mov
cmp
pop
movl
pop
add
push
xchg
mov
and
mov
sbb
aam
lret
aam
mov
inc
jmp
imul
xor
dec
jb
add
aas
xchg
mov
adc
popf
inc
sbb
lret
inc
mov
adc
ret
cmp
push
xchg
inc
bound
sbb
push
xchg
movsl
ja
clc
push
gs
neg
sub
scas
inc
sbb
dec
sbb
pop
jns
jge
popa
pop
xchg
inc
shlb
lret
and
add
push
adc
pusha
stc
ret
push
enter
xor
pop
into
push
sub
push
and
jge
push
ficompl
clc
cmpsl
sbbb
repnz
sbb
test
cmpsb
xorb
or
mov
fsubl
mov
xchg
sub
popw
sub
inc
addr16
fmull
and
xchg
dec
add
jp
mov
cmp
fnstcw
xchg
fidivl
aas
cmpl
push
lods
sub
and
push
mov
cmp
mov
sub
lock
jg
and
sbb
push
pop
xor
xchg
pusha
jle
jle
ljmp
loop
inc
mov
pop
pop
sub
outsb
dec
daa
dec
xor
lcall
push
daa
lods
push
jg
lret
mov
xor
sti
pop
popf
aaa
push
jg
add
dec
fidivl
stc
movsb
push
pop
sub
mov
inc
hlt
mov
add
add
adc
and
mov
xchg
nop
add
xorl
xchg
aas
sahf
lcall
pop
loop
dec
pop
scas
sbb
push
mov
orb
negb
orb
jg
dec
jl
add
lret
popa
inc
push
push
pusha
cltd
ficoml
mov
addr16
adc
sbb
adc
adc
add
cmp
push
fiadds
addl
pusha
aas
add
add
push
cltd
bound
mov
rolb
lret
mov
adc
test
ret
jo
enter
xor
pop
nop
clc
dec
pusha
mov
mov
repnz
aaa
shrl
jo
push
adc
xlat
addb
das
push
inc
pop
sbbb
roll
orb
nop
aas
add
or
lahf
or
loop
push
mov
mov
dec
jle
aaa
mov
mov
rorb
mov
add
pop
push
es
sub
and
sbb
or
xor
mov
jp
icebp
mov
mov
xor
adc
inc
inc
jge
leave
push
pop
subl
dec
pop
inc
mov
mov
mov
adc
lret
aam
push
ret
adc
and
jns
push
loop
mov
pop
or
mov
shlb
repnz
into
fldl
mov
addb
pushf
mov
pushf
shrb
pop
test
test
aam
inc
call
sahf
adc
sbb
rorb
aaa
add
xchg
addb
adc
adc
in
jns
inc
icebp
mov
ficoml
ss
sbb
testl
push
addr16
mov
pop
bound
mov
dec
add
roll
cmpsl
xchg
or
in
inc
mov
orl
cmc
adc
adc
cmc
clc
insb
xchg
repnz
lods
cmc
orb
nop
es
jb
adcl
cmp
add
inc
mull
cmpsl
jl
cmp
sbb
dec
add
rorl
inc
daa
and
xor
fisttpll
cmp
sub
lcall
div
lea
pop
test
add
push
dec
rclb
pusha
push
loope
and
mov
dec
dec
push
inc
enter
popw
repnz
stos
cmp
shlb
add
aaa
repnz
xor
inc
sbbl
pusha
pop
repnz
adc
mov
mov
push
out
pop
or
cmp
cmp
or
jg
lods
imul
sub
pop
bnd
jg
or
push
add
test
or
pop
mov
add
notl
sub
out
cs
sbb
mov
enter
push
sbbb
rcrl
dec
aaa
shlb
test
cwtl
jb
nop
push
cld
gs
xor
sub
mov
cs
xchg
imul
in
icebp
fdivs
cltd
cmp
push
cmp
cli
add
stc
popf
repnz
jmp
jle
pop
sbb
cmp
int3
lods
add
pop
outsb
shlb
pop
je
lock
xor
sub
imul
push
cmpsb
pop
push
fmul
test
pop
arpl
sbb
xlat
fcomip
pop
push
mov
xchg
mov
inc
dec
aaa
loope
cmc
sahf
test
jge
xchg
xchg
aas
hlt
pop
je
add
jg
dec
xor
xor
daa
mov
lock
roll
les
ds
inc
pop
and
lahf
mov
mov
fstl
xchg
cwtd
arpl
pop
xchg
fcoml
mov
inc
sbb
add
stc
mov
mov
fstl
mov
sub
repz
push
add
fs
xchg
sar
popf
sbb
adc
dec
pop
push
pop
call
ret
jo
cwtl
fnstcw
addr16
and
sbb
les
loop
cmp
or
loope
aas
sarb
cwtl
add
push
mov
ret
and
add
outsb
push
adc
adc
out
leave
sub
adc
imul
movb
inc
addr16
addr16
pop
jo
adc
push
xchg
push
mov
mov
add
push
adc
icebp
mov
test
adc
mov
mov
jecxz
inc
mov
andl
test
addl
push
add
add
mov
nop
scas
or
popf
jecxz
jno
xchg
xor
ret
in
outsl
jp
jp
or
das
mov
cs
xor
mov
xchg
mov
imul
jecxz
push
inc
jp
push
pushf
jle
ja
adc
push
dec
inc
adc
js
pop
inc
and
add
lret
pop
lahf
in
add
fsubl
aad
mov
pushf
sbb
sbb
pop
addb
jmp
mov
andl
add
mov
lcall
or
andl
xorl
push
scas
movsl
ficompl
cmp
push
pop
sbb
add
cmc
aas
jecxz
push
clc
test
sbb
pop
jns
mov
lods
cld
jp
mov
mov
cmp
popa
push
dec
jns
sbb
dec
out
add
jp
xor
outsb
mov
push
int
inc
enter
mov
fidivrl
xor
push
fcomi
fs
or
rcll
pop
lock
nop
or
insb
cmp
mov
aad
outsb
jo
out
dec
dec
lock
mov
xor
sbb
and
scas
arpl
out
clc
outsb
shll
push
shr
mov
aas
sbb
add
scas
popa
sub
adcl
xor
lock
mov
les
fs
jge
xabort
jle
and
test
test
jle
push
mov
sbbb
shrl
xlat
push
cmpsl
xor
push
fadd
jo
adc
pop
or
inc
dec
mov
or
test
pop
and
mov
ja
jmp
push
and
or
lods
dec
xchg
daa
mov
xchg
repnz
jge
fadds
andb
mov
jecxz
in
and
push
out
icebp
pop
add
stos
pop
imul
mov
adc
adcl
clc
test
lds
xorb
dec
add
jmp
xor
dec
test
jmp
mov
aam
sbb
test
xlat
xor
out
mov
xlat
sbb
pushf
jnp
mov
pop
sbb
push
cli
incb
mov
pop
dec
popa
cwtl
xchg
test
bnd
inc
clc
or
pop
rclb
add
rclb
inc
add
sbb
xor
dec
add
mov
sbb
mov
mov
arpl
in
js
xchg
sub
mov
add
push
stc
sub
xchg
test
test
sub
mov
mov
adc
push
scas
outsb
xchg
sbb
fs
insl
and
fdivrp
inc
lahf
dec
jmp
jmp
sub
jno
rclb
pushf
pop
cmp
xor
lods
jb
out
rclb
adc
xor
mov
jae
xor
test
xchg
dec
pop
lods
dec
add
js
jbe
ja
ja
push
and
lea
xchg
adc
dec
and
push
sbb
add
arpl
ss
dec
mov
and
add
fidivrl
js
xor
cmpsl
xor
fldl
adc
xchg
repz
xchg
andl
sub
jb
stc
mov
mov
add
xlat
inc
decl
jg
shr
scas
ja
dec
movsl
add
add
test
and
loopne
dec
rcrb
test
test
mov
adc
xchg
arpl
pop
mov
nop
ret
lahf
test
mov
js
and
cmp
fs
add
sahf
push
ret
adc
outsb
std
mov
adc
dec
push
loopne
outsl
in
js
lock
push
jo
xchg
aad
jns
add
fwait
rcrb
xchg
inc
xchg
add
dec
in
sti
out
jle
jl
or
pop
cmc
cmpsb
dec
clc
sub
dec
mov
cltd
enter
mov
dec
push
jnp
dec
xchg
addr16
add
push
repnz
sbb
and
xchg
ja
and
scas
add
xchg
in
jb
fstps
sarl
scas
hlt
and
inc
mov
push
ljmp
xchg
dec
push
xchg
lcall
fildl
roll
push
ljmp
insl
cli
push
out
mov
imul
mov
push
sbb
mov
jg
sbbl
std
xor
mov
pop
je
fiaddl
loopne
xlat
js
lods
and
ret
mov
repz
pop
lahf
sbb
push
mov
mov
jnp
std
add
inc
lcall
sbb
pop
add
push
fistpll
push
add
inc
xor
js
xchg
sbb
and
inc
mov
enter
and
repnz
xchg
jge
lcall
clc
pop
inc
fimull
sti
dec
pop
mov
lds
cmp
cltd
outsl
test
in
pop
jecxz
cmpsl
cwtl
ja
sbb
inc
adc
xor
addr16
sbb
dec
sbb
push
adc
and
adc
addl
popf
rcl
sbb
and
inc
or
shll
scas
inc
mov
mov
xchg
sub
cmp
decb
loop
rcrl
pop
xor
lcall
pop
into
test
cmpl
subl
mov
test
imul
push
testb
ret
dec
xor
mov
cs
out
dec
into
js
cmp
call
mov
iret
jle
movsl
fs
inc
in
add
dec
mov
dec
sub
dec
call
sti
xchg
stc
push
jecxz
cwtl
jo
aam
in
cmp
or
xchg
dec
test
push
or
iret
and
cmp
mov
fcomps
and
pop
sbb
lret
xchg
mov
dec
into
mov
pop
sahf
jmp
inc
lods
or
out
sar
inc
cld
inc
lahf
rcr
lcall
push
add
daa
mov
xor
push
in
sarb
int3
out
clc
pop
testl
mov
sub
imul
pop
pop
sub
dec
xchg
jno
and
ret
clc
or
aad
xchg
jecxz
dec
push
aaa
daa
daa
xlat
lds
dec
mov
lods
test
popa
popa
and
add
lret
fmuls
fldl2e
les
cmp
cli
addb
sahf
test
and
cmc
and
xchg
sbb
in
pop
addb
loope
sbb
inc
orb
jle
fisubs
out
jnp
pop
mov
mov
jecxz
xor
pushf
sbb
mov
mov
xchg
repnz
pop
mov
cli
cmp
pushf
xor
lcall
jecxz
test
adc
adc
mov
add
mov
fistps
pop
xchg
sub
jg
dec
cmc
xchg
lock
dec
cli
enter
or
cmpb
iret
shll
out
adc
sbb
lods
lods
jae
cmp
aas
inc
mov
leave
mov
and
xor
mov
add
mov
pop
fisttpll
ret
sub
cmpb
add
leave
mov
loopne
mov
jg
in
cmp
and
pop
test
fs
pushf
xchg
xor
subb
shlb
inc
fisubl
jle
cmp
inc
pop
mov
push
and
dec
mov
mov
inc
lret
and
mov
idivl
cmp
cmp
ret
mov
cmp
xchg
sub
fstpl
in
inc
and
sbbb
sahf
xchg
cltd
jecxz
xor
xor
pop
sub
mov
movsl
dec
fadd
test
cmpl
inc
push
xchg
pop
jp
lock
repnz
and
adc
push
fwait
push
pop
sub
mov
jnp
ss
jp
or
adc
pop
pop
dec
imul
shl
test
daa
or
cmp
inc
inc
ds
and
xchg
mov
ss
rcr
xchg
add
cmpsl
inc
push
pop
es
dec
int3
enter
adc
sbb
add
inc
lds
mov
inc
test
std
out
repz
enter
mov
repnz
loopnew
rolb
jmp
stc
jg
push
dec
adc
pop
loop
xchg
jecxz
sbb
jae
out
shll
or
push
js
cmpsb
je
aam
insl
cmp
movsl
ja
loop
pop
loopne
xchg
dec
pop
xchg
imul
inc
dec
jge
inc
test
fwait
rolb
out
dec
sub
fisubs
bnd
pop
bound
xchg
pop
pop
push
in
mov
and
mov
push
outsb
in
jle
pop
daa
xchg
sbb
xchg
lret
test
push
push
push
lock
cwtl
or
push
test
aad
cmp
push
pop
ja
mov
or
sbb
or
shlb
cmp
sbb
add
ja
sub
pop
add
sbb
pop
xchg
pop
fistpll
test
xor
mov
push
sbb
xor
mov
in
subl
and
xchg
bound
sbb
cmpsl
mov
or
leave
cmp
mov
push
mov
cmp
adc
mov
xor
add
cmp
pop
and
sets
clc
dec
pop
push
aas
dec
xchg
push
dec
mov
push
and
popa
ret
mov
andb
cmpsl
jns
ljmp
mov
jns
pop
dec
and
cltd
add
mov
fists
jb
fcoml
idivl
enter
lods
xchg
test
es
mov
pop
mov
arpl
sbb
push
bound
fs
andl
outsl
aas
in
pusha
inc
clc
push
cmpl
jb
lahf
cmp
and
mov
pop
and
sbb
inc
mov
sub
imul
cmc
sti
dec
out
repz
jge
or
jne
shl
imul
and
pop
std
adcb
lods
stc
mull
sub
adc
inc
fs
dec
inc
push
sahf
sub
fimuls
addr16
inc
fnstcw
sub
outsb
pop
ss
push
and
inc
add
inc
cmp
or
fidivrs
les
and
or
mov
sahf
push
pop
into
or
mov
ja
dec
push
into
or
cmp
inc
icebp
mov
jns
sbb
cmc
cmpsb
clc
xchg
push
insl
xor
lods
add
inc
addr16
test
jns
or
into
int3
adc
mov
sahf
adc
xchg
adc
jnp
cmp
ret
daa
cli
into
insl
out
add
out
aam
jle
and
rcll
js
push
imul
sbb
push
test
js
push
fwait
out
ret
orb
sub
stos
jb
inc
cltd
pop
ja
jmp
or
or
test
idiv
cs
mov
mov
xchg
out
pop
adc
inc
or
jb
loope
inc
mov
jnp
jne
cmp
bound
mov
cmpl
adc
push
cmp
mov
addr16
jp
add
divb
pop
in
insb
jecxz
addb
icebp
sahf
loop
add
add
sub
in
xor
and
sbb
mov
fyl2xp1
xlat
sub
lea
dec
mov
inc
sub
int3
dec
add
xchg
jp
or
ljmp
ja
enter
cmp
jns
sbb
fidivl
inc
mov
test
push
jecxz
adc
lahf
out
lahf
inc
sar
adc
test
xor
xchg
adc
leave
mov
lahf
leave
notb
fmull
fwait
mov
xchg
adcl
jb
call
add
pop
xchg
popf
mov
iret
imull
popa
adcb
lds
lods
push
jmp
push
test
fnsave
adc
push
jo
es
xor
addr16
pop
cmc
ss
sbb
push
xor
lahf
mov
xorb
pop
sub
test
mov
mov
in
cmp
push
pop
xchg
addb
jg
outsb
mov
inc
push
inc
adc
add
xchg
popf
mov
data16
das
ret
xchg
mov
lods
sbb
movsb
mov
scas
sub
add
test
popf
mov
orl
fnstsw
pop
popf
out
add
and
xor
push
addb
fistpl
cli
dec
inc
add
sub
push
hlt
popa
add
add
sahf
dec
add
sbb
pop
ds
xor
loopne
arpl
sbb
leave
jecxz
popf
and
ja
and
inc
pop
xor
lahf
sbb
sub
roll
iret
fisubs
and
ja
mov
xchg
sahf
cmpsb
add
push
mov
orl
decb
sub
push
or
xor
rcrb
push
mov
repnz
sti
nop
cmpb
sbb
and
cs
imul
filds
inc
addb
add
imul
in
test
xchg
scas
mov
jg
jns
add
cmpsb
add
ja
push
inc
dec
nop
sub
adc
stos
sahf
arpl
mov
adc
repnz
cmp
fiaddl
es
sti
cmp
jl
mov
jecxz
ss
cmp
mov
stc
inc
imul
test
lods
push
scas
js
inc
aad
xchg
fs
jae
pop
add
mov
sub
sbb
pop
bound
and
and
test
add
and
cmc
sub
inc
incb
mov
loopne
shll
xor
mov
push
daa
int
out
ret
xorb
xor
mov
test
test
lcall
lcall
add
ret
sub
or
lcall
xlat
lahf
push
mov
pop
xchg
sbbl
jb
stc
jbe
nop
push
shll
add
dec
xorb
xchg
push
pop
inc
js
push
jle
test
xor
push
hlt
push
roll
shl
cmp
add
xor
cmp
push
enter
daa
cmpsl
mov
mov
lds
xadd
pusha
inc
mov
jno
call
mov
arpl
fistps
add
pop
add
push
xchg
sti
cmc
cmpl
pop
xor
cwtl
repz
fwait
xchg
push
mov
lcall
and
adc
inc
xchg
fisubs
inc
ret
scas
pop
mov
and
hlt
sbb
lods
push
and
xchg
adc
adc
pop
pushf
jp
in
lea
jg
loope
mov
fisubs
jle
pushf
leave
repnz
adc
adc
in
jbe
pop
xchg
jb
mov
cwtl
cmp
in
xlat
pop
addb
movsb
mov
ja
and
jecxz
add
outsl
add
xchg
sub
iret
dec
xchg
mov
cli
and
mov
add
loope
xor
xor
jb
xchg
mov
lea
addr16
arpl
jl
inc
call
popf
sbb
arpl
jge
inc
jne
xchg
fldcw
pop
inc
outsl
inc
cmpsl
aas
jne
pop
push
and
adc
in
cmp
xor
sub
mov
pop
xchg
mov
xchg
test
mov
sbb
fisttps
dec
sbb
imull
js
mov
push
add
test
pop
aas
mov
dec
je
fdiv
or
call
add
mov
inc
popl
jnp
xchg
jns
mov
addl
pop
int
cmp
in
or
inc
mov
pop
mov
sarl
and
popa
add
add
rclb
jge
fmull
pushf
cmp
rcrl
insb
scas
add
xor
cmp
jge
mov
mov
lret
cltd
mov
xchg
jecxz
dec
insl
xor
push
jnp
xor
call
mov
sub
fsubrs
push
test
dec
mov
jno
int3
mov
test
fwait
add
cmpsl
repz
mov
lock
stos
lahf
sbbl
adc
leave
movsb
xor
cmpsb
xchg
cmpb
cmpsl
cmc
repnz
mov
imul
jne
mov
jge
sub
sub
inc
loopne
das
mov
sahf
adc
jo
add
mov
imul
iret
rclb
movb
push
icebp
jb
mov
test
cmp
xchg
adc
and
jg
cmpsl
stc
lret
pop
mov
add
lds
mov
add
imul
rcrb
add
movsl
xor
xchg
adc
and
and
jmp
fistps
out
dec
movl
stc
cmc
xchg
cmp
or
mov
jge
roll
cmpl
push
enter
int3
push
mov
ret
inc
bound
paddw
mov
in
mov
aas
cmc
dec
pop
rorb
cli
mov
cs
mov
ss
rcr
pop
stos
add
mov
out
aad
adc
cmp
nop
push
jp
push
dec
dec
out
mov
and
or
fldt
and
testl
cmp
mov
add
fcmovbe
shl
or
rorb
lcall
sbb
xlat
inc
test
js
lcall
xor
scas
lahf
dec
cmp
stc
jb
adcl
daa
ss
sbb
jns
lods
jge
arpl
push
rcr
jne
and
push
push
gs
jp
int
dec
stos
sbb
jbe
icebp
adcb
cmc
sbb
cmc
add
mov
push
push
mov
xchg
cli
pop
stc
lret
enter
orl
mov
cmc
aas
js
iret
pop
negl
or
push
mov
lods
jb
adc
scas
insb
outsl
fdivl
and
cmp
add
test
pop
sbb
push
inc
out
in
inc
sahf
es
out
cs
in
xchg
call
stos
pop
cmp
lock
xchg
sbb
dec
xchg
dec
dec
cli
mov
icebp
push
mov
xchg
or
pop
jo
mov
mov
xor
inc
int
or
add
xchg
aaa
inc
hlt
jmp
mov
xchg
push
push
movb
jecxz
or
pop
daa
scas
adc
out
bound
fs
or
inc
jecxz
jns
pop
test
xor
popf
pop
ss
lahf
movswl
movsl
mov
mov
push
je
mull
daa
add
pop
inc
pop
mov
inc
inc
jl
pop
jo
repnz
addl
ja
imull
dec
adc
arpl
lock
xchg
jle
sbb
pop
dec
clc
sbb
loopne
sub
cmp
ss
pop
push
pop
push
mov
jo
clc
fldl
mov
push
dec
mov
or
movsb
push
cwtl
inc
push
nop
ficoms
addr16
and
or
sub
jns
mov
mov
xor
nop
fdivrs
push
xor
aas
sti
in
jecxz
leave
add
sub
shr
stc
pop
jmp
pop
mov
sti
es
add
pusha
cmpsl
push
mov
lock
sub
inc
enter
aad
repz
pop
mov
call
das
mov
mov
test
ja
inc
bound
fcmove
imul
cmp
pop
cmp
xchg
test
in
lcall
inc
cmp
pop
sahf
mov
adc
add
mov
out
lahf
lea
sub
adc
lcall
push
int3
pop
daa
nop
inc
mov
lds
jecxz
jmp
hlt
mov
pop
jmp
xchg
dec
pop
cwtl
mov
inc
test
and
xchg
push
add
xor
push
jbe
jg
xchg
mov
shll
sub
jl
sbb
inc
mov
and
clc
cli
repnz
or
cmc
xor
pop
popf
or
fiaddl
pop
pop
arpl
xchg
repz
xchg
cmp
xchg
add
inc
cli
cmc
imul
xor
add
jg
mov
ret
cmc
lock
out
dec
lods
xor
adc
scas
mov
mov
mov
pop
jnp
test
cmp
cltd
ja
sbb
iret
fadd
xchg
cmp
add
sbb
in
mov
in
daa
xchg
aaa
int
cli
sbb
js
lahf
es
mov
mov
cmpsb
push
jne
mov
ret
pop
pop
mov
cmp
push
daa
dec
cmpb
in
std
and
xchg
call
lcall
andb
xchg
mov
cmc
mov
mov
test
rorl
sahf
mov
fdivrs
mov
pop
xor
aaa
out
cmp
outsl
adcb
xlat
adc
push
cmp
lahf
pop
xchg
mov
mul
pop
adc
push
mov
je
dec
push
and
jle
rclb
or
pushf
add
inc
arpl
mov
jp
or
aas
cltd
testb
pop
cmpsl
cmp
xchg
repz
xlat
sti
ret
test
pop
stos
sbb
pop
add
out
cld
cs
mov
sbb
pop
ret
rcrb
shr
or
adc
xchg
rorl
mov
xor
dec
fucomi
out
mov
cmpsl
and
and
pushf
push
inc
sahf
repnz
mov
sti
fidivrl
lret
xor
ret
ja
and
popa
jmp
test
cmp
xor
jp
pop
or
dec
add
das
sub
mov
ljmp
mov
out
xchg
jnp
movsl
popf
sbb
pushf
std
push
sub
lret
xchg
mov
enter
xchg
mov
rorl
xchg
sub
lea
dec
inc
add
or
sbb
sbb
repnz
outsb
popa
push
mov
jbe
cltd
xor
ja
mov
xchg
and
inc
pop
add
mov
lcall
mov
insl
shl
ljmp
sub
stos
jecxz
push
sub
sub
cmpsl
fsubl
pop
shl
dec
imul
dec
pushf
stc
and
dec
add
sub
and
xchg
cmc
mov
in
leave
cmpsb
andl
out
shll
adc
and
cmp
sbb
sbbl
jo
inc
push
fwait
push
addr16
add
sbb
subl
mov
daa
mov
test
dec
push
push
dec
mov
movsl
mov
lret
dec
sub
repnz
out
mov
lea
push
sbb
push
and
push
icebp
xchg
popa
fistpll
push
andl
leave
push
push
add
das
push
pop
xor
popf
jp
xchg
clc
fidivs
push
mov
cltd
dec
push
lea
jo
sub
pusha
repnz
pop
sub
cld
lret
fucomp
sbbb
jbe
inc
imull
movsl
xchg
and
mov
sub
push
jg
stos
js
cmp
in
add
xchg
and
sub
pop
jb
cmpb
and
mov
rolb
mov
xor
sub
shl
icebp
ficoms
mov
test
addl
mov
jns
test
into
mull
dec
and
inc
xchg
jecxz
xchg
adc
pop
mov
or
adc
fimull
push
test
sub
inc
mov
cmc
mov
pop
mov
inc
or
iret
inc
dec
sbb
pop
out
add
lahf
sbb
mov
insl
fsubrp
fsub
inc
notl
lahf
out
pop
test
adc
lahf
shrl
ja
sbb
bound
outsb
pusha
push
pop
push
and
xchg
or
test
test
lods
sub
mov
pop
mov
push
es
sub
ret
popf
jmp
ds
mov
out
jg
pop
push
call
aas
pusha
insb
add
cli
pop
das
push
ds
xchg
pop
ret
bound
outsl
addr16
cs
lcall
aas
push
decl
jg
es
test
lahf
mov
pop
data16
test
cli
test
aas
je
ja
xchg
lods
push
sbb
leave
test
adc
add
jmp
movsl
pop
mov
mov
xorb
xchg
repnz
inc
hlt
mov
lods
sahf
jbe
cmp
cmpsl
mov
cmp
inc
clc
cmpsb
inc
scas
mov
int3
push
pushf
push
fcompl
push
mov
rcl
add
xchg
bound
add
or
lock
rcrl
jnp
cltd
jbe
jne
cs
lock
cltd
ret
mov
pop
sub
push
pop
xchg
test
cli
cmp
mov
popa
lret
cmc
fwait
loopne
mov
jnp
sub
jmp
lret
popa
or
addl
xor
rcl
add
push
jnp
loope
lcall
mov
call
call
and
inc
incb
std
xor
jns
pushf
adc
sbb
dec
sub
insl
push
or
adc
add
leave
fdivs
daa
jns
pop
or
mov
stc
int3
div
mov
mov
adc
cmpsb
imul
xor
jecxz
mov
xchg
xor
inc
lahf
adc
scas
pusha
lcall
or
lcall
sbb
pop
add
out
idivb
and
xor
add
jmp
xlat
push
sahf
cmp
es
and
fwait
into
in
dec
xchg
rolb
lock
sbb
repz
sti
pop
loop
inc
out
stc
in
ljmp
pop
mov
pop
cli
stc
and
mov
hlt
mov
add
sub
in
xchg
mov
inc
movsb
imul
mov
add
push
fiadds
cltd
test
fcoms
cwtl
lds
lahf
int
fsubl
sbb
imul
arpl
imul
loopne
icebp
cltd
pop
xchg
mov
xor
cmc
js
jo
add
pop
or
xchg
add
clc
push
inc
push
repz
outsb
sbb
scas
mov
dec
mov
cltd
push
push
cmp
popf
test
lahf
cmc
sti
inc
xor
and
push
lcall
lea
js
pushf
aad
sub
jecxz
jmp
add
lock
in
or
shrb
mov
lcall
call
test
rcl
xchg
in
pop
mov
pop
push
mov
pop
inc
sub
fsubs
aaa
bound
jge
fidivl
mov
gs
mov
aaa
gs
pop
mov
fisubs
mov
adc
fucomip
call
dec
fcomps
call
repnz
pop
arpl
jecxz
fsubr
add
sub
jo
test
sub
cmpb
push
jmp
inc
push
stc
cmp
push
insl
mov
pop
xchg
jecxz
adc
dec
inc
sbb
xchg
pop
scas
push
bound
mov
jns
push
pop
and
dec
ja
and
or
jmp
ds
mov
mov
xchg
aad
jbe
fdivl
or
enter
inc
inc
cmp
mov
fsubs
ficompl
test
xchg
and
inc
lret
mov
aas
cmp
and
xlat
out
pop
xorl
adc
pop
shll
js
cmp
add
cmp
xchg
int3
cmp
xchg
xchg
cld
div
es
mov
out
adc
repnz
scas
jo
int3
mov
mov
dec
outsl
jne
in
push
out
dec
jno
dec
adc
xchg
hlt
cmc
repnz
outsb
mov
addl
xchg
lea
xchg
xchg
dec
cmp
iret
fsubr
dec
xor
test
aaa
push
daa
fdivrs
aam
mov
add
and
pop
mov
fs
inc
adc
shlb
mov
ss
mov
mov
fbstp
pop
sbb
test
mov
outsl
mov
aas
aam
jbe
idivl
mov
repz
sub
cmp
pop
lea
push
js
test
pop
sarl
inc
cli
lods
xchg
xchg
out
out
in
and
jno
mov
fsubs
cmp
jecxz
outsl
sbbb
imul
lea
sub
enter
stos
sarl
repnz
pop
xchg
rcll
push
lahf
add
and
mov
dec
insb
xchg
adc
cltd
xor
decl
dec
test
shlb
xchg
repnz
shrb
xor
jge
insl
pushf
mov
lret
ficoml
sbb
push
ret
pop
loopne
mov
stc
mov
jo
stc
inc
int3
xchg
mov
lret
enter
mov
in
sub
jp
push
mov
rcl
mov
rcrl
fsts
xorps
mov
in
dec
icebp
nop
bound
cltd
mov
xchg
xchg
and
xchg
push
and
nop
fdivs
and
jp
mov
popf
iret
in
mov
jg
and
jmp
xchg
sbbb
rolb
push
rcrl
call
add
fwait
sbb
ret
inc
popa
mov
shlb
xor
mov
pop
mov
mov
mov
push
inc
call
sbbb
mov
mov
mov
in
test
das
cmp
xchg
and
adc
aaa
xchg
jecxz
cmp
lcall
daa
lods
addr16
lcall
mov
in
dec
push
clc
add
mov
add
push
push
xchg
mov
and
addl
add
stos
fdivs
in
stc
mov
fistpl
sti
jp
int
icebp
jp
roll
int
arpl
xchg
sbb
imul
std
pushf
mov
ljmp
adc
or
aaa
addl
mov
fistpll
sahf
cld
xchg
xchg
addr16
iret
icebp
cld
popa
imul
shrl
lahf
gs
mov
in
mov
loopne
nop
addl
inc
js
jne
into
xor
mov
xor
fs
inc
aam
into
xor
data16
cmp
push
ja
inc
xchg
sbb
jle
in
aad
jae
ja
dec
lahf
pop
imul
mov
xchg
mov
push
fmul
xor
aas
das
mov
mov
ret
dec
mov
int
jb
lods
jnp
xor
je
nop
xchg
nop
loop
outsl
sbb
fiaddl
mov
cmp
imul
and
das
lea
pusha
mov
mov
adc
mov
neg
scas
data16
pop
add
divl
repnz
ret
sbb
inc
mov
jb
sbb
adc
enter
inc
fistps
sbb
xchg
sub
iret
ss
dec
sarb
popf
xchg
lahf
mov
pushf
push
mov
pop
mov
aas
rclb
jp
sbbb
inc
inc
mov
pusha
test
xor
roll
repnz
jns
lds
subb
or
sahf
iret
jg
je
xchg
testl
inc
rcrl
jmp
idivl
cmp
xor
iret
xchg
pop
sbb
cmpsl
ds
push
lea
and
hlt
adc
mov
sbb
push
sbb
pop
aad
sub
mov
add
adc
pop
and
in
insb
push
mov
inc
pop
lds
adcl
popa
sub
ret
popf
jg
inc
outsl
and
and
ja
pop
mov
cmc
xchg
ljmp
inc
in
mov
in
pusha
and
fimull
pop
jge
fbstp
add
push
or
xchg
pop
jle
mov
inc
mov
test
jecxz
cmp
test
add
dec
ret
and
icebp
jns,pt
and
adc
cmp
lds
repnz
and
aas
lcall
hlt
push
mov
test
push
cmp
sub
stos
cmp
and
dec
cmc
dec
cld
ficoml
lcall
dec
sub
lock
hlt
and
or
addb
inc
test
aas
nop
scas
xor
in
mov
pop
lods
scas
xchg
xor
xor
repnz
dec
repz
lock
sub
cli
pop
jle
pop
mov
stc
loop
push
inc
xor
and
mov
dec
mov
jnp
shll
repz
dec
test
int
sbbl
push
mov
mov
fucomip
outsb
xlat
add
pusha
inc
ret
or
pushfw
pop
xchg
sub
sbb
add
inc
fisubrl
mov
mov
mov
cmc
aam
mov
pop
inc
sbb
scas
bound
stc
or
jo
sbb
xor
pop
dec
lods
test
ss
incb
inc
sahf
bound
inc
fs
push
daa
enter
mov
jno
pushf
mov
cmpb
sub
dec
add
ret
addb
jle
xchg
pop
nop
popa
mov
adc
and
imul
int3
push
adc
cmpsb
push
repnz
inc
dec
cmp
mov
or
xchg
iret
sub
and
mov
les
es
add
mov
es
out
out
aaa
movb
pop
stos
nopl
dec
xchg
out
dec
cwtl
jg
push
and
out
xchg
adc
lods
xchg
jp
insl
stos
gs
pop
outsl
or
mov
cmpl
cli
jecxz,pn
push
mov
dec
jg
inc
pop
add
adc
mov
mov
xchg
pushf
hlt
pop
xor
add
cmp
sub
mov
test
sti
in
pop
sub
push
xor
test
xor
sbbb
jbe
mov
xchg
jnp
ds
sub
sti
or
cltd
xor
stc
jns
xor
movsb
push
xchg
test
xchg
es
xor
jnp
cmpb
incl
push
pop
jnp
lds
shlb
aas
and
out
and
shlb
and
sub
in
mov
in
cmp
mov
sbbl
add
mov
pop
mov
xchg
rclb
mov
and
add
out
pop
xchg
add
movsl
xadd
arpl
test
sbbl
test
and
addb
xchg
popa
movsl
pop
xor
jae
iret
loop
js
subl
adc
pop
popf
xchg
adc
cmp
or
cltd
and
subb
int3
aaa
fbld
mov
ret
and
call
xor
xor
mov
or
sahf
xchg
add
mov
scas
pop
jbe
add
pop
sahf
lahf
movl
sub
mov
sbb
mov
sub
inc
xchg
push
dec
subb
or
xchg
or
pop
xchg
scas
sbb
mov
mov
int
shll
add
dec
in
lods
jno
ljmp
movsl
sub
sahf
fwait
outsl
cmpsb
int
push
aaa
outsl
les
xor
mov
fiadds
jne
mov
cwtl
aad
lcall
or
lahf
bound
push
pop
jae
xor
xchg
jg
out
jno
sbbl
jo
icebp
jno
mov
xchg
add
and
mov
pop
pop
jae,pt
cli
add
andl
lldt
and
mov
repz
cmp
inc
mov
cmp
sub
push
add
pop
leave
add
sub
repnz
pop
sahf
test
dec
xlat
sub
pusha
test
push
addr16
add
xor
addr16
mov
xor
stc
push
cli
jecxz
ja
adc
sbb
sbb
sbb
enter
cltd
rcr
movq
stos
test
mov
sbb
call
mov
pushf
jb
xchg
popf
mov
adc
cmp
inc
mov
jl
adc
lret
cld
arpl
pop
push
xchg
or
iret
movsb
and
mov
addr16
mov
cmpl
pushf
repz
test
sbb
subb
pop
jno
jge
cli
dec
xchg
aad
mov
dec
xchg
xchg
nop
outsl
mov
dec
enter
cmp
pop
push
jbe
mov
movsl
dec
insl
lar
sub
addr16
jno
adc
shll
jae
xlat
ret
icebp
jl
aam
pop
mov
pop
ljmp
test
and
repz
adc
subl
subb
aaa
jp
pusha
pushf
add
add
jne
ror
outsb
sbb
jp
repz
and
insb
dec
inc
pop
jmp
jmp
push
xchg
daa
dec
sbb
cmp
leave
pop
push
inc
push
xlat
movsl
out
popf
and
dec
fs
dec
jae
push
adc
mov
sub
lods
lds
in
idivl
push
cmp
mov
push
pop
xor
mov
addl
xchg
pop
mov
xchg
test
add
push
mov
ret
nop
fimuls
inc
bound
fcomps
insl
test
inc
inc
and
addb
cwtl
add
test
mov
bound
icebp
dec
ljmp
or
in
je
jne
adc
adc
popa
jp
mov
out
ret
jnp
repnz
rcrb
addr16
inc
addb
sbb
and
jb
sbbb
sub
inc
inc
bound
jl
pop
xchg
pop
insl
test
sbb
sub
cmpsl
imul
mov
cmpsb
loopne
xchg
outsl
shlb
mov
outsl
or
insb
jo
xchg
arpl
pop
mov
andl
and
std
imul
inc
in
mov
inc
inc
lahf
imul
lods
dec
jo
insb
or
sbb
xchg
inc
jg
gs
lcall
lcall
mov
push
and
aas
cmp
aaa
inc
test
mov
lods
adc
out
shl
lea
xchg
pop
repz
stos
and
cmpsl
rcrb
testb
sub
mov
aam
gs
adc
dec
mov
inc
in
inc
inc
insb
and
jle
jmp
das
inc
jecxz
pop
dec
add
loope
jp
lahf
aam
push
inc
fcompp
push
inc
ljmp
sbb
push
repz
dec
das
xchg
clc
icebp
lds
push
jo
add
adcl
add
xchg
outsl
movsl
pop
int
mov
outsl
xchg
push
mov
icebp
fcoml
xor
mov
inc
lcall
adc
cli
fldt
xchg
mov
lcall
pop
xchg
mov
nop
addr16
mov
inc
pop
mov
std
add
mov
int3
outsl
ret
test
aas
das
adc
adc
frstor
nop
int
push
dec
jg
inc
sbb
fs
ja
outsw
data16
hlt
xchg
fdivrs
push
js
dec
clc
mov
mov
jmp
and
push
in
add
sbb
xchg
jne,pn
lods
lcall
xchg
sbb
jg
mov
icebp
mov
jmp
add
je
inc
je
inc
loop
je
jb
arpl
jg
incl
icebp
addl
loop
cli
sub
mov
jmp
in
pop
loop
jg
orb
adc
push
mov
xchg
and
cmpl
push
mov
cltd
pushf
mov
jg
sub
call
dec
in
cmp
adc
shll
paddusw
ret
lret
test
stos
dec
fldt
pop
aaa
inc
lahf
mov
add
stos
rcrl
cmpsb
mov
jb
mov
add
mov
fistl
pop
adc
mov
lods
ret
pop
push
jnp
filds
fstl
ss
sbb
pop
pop
int
jg
pop
or
aad
jae
pop
fstps
sub
test
sahf
xchg
add
loopne
add
in
mov
jo
inc
popf
add
popf
test
cwtl
mov
mov
or
mov
add
add
pop
dec
mov
xor
jmp
inc
push
mov
fcoml
mov
rorl
insb
inc
popa
popa
mov
push
pop
pop
ljmp
daa
negl
adc
call
xchg
or
orb
mov
inc
decb
icebp
leave
loop
lcall
pushf
and
sbb
xchg
or
mov
pop
lcall
or
js
cltd
mov
or
popf
adc
fdivs
xchg
data16
and
pop
mov
xchg
push
inc
sbb
pop
sbbl
cmc
inc
inc
xchg
mov
ret
mov
bound
push
mov
mov
lret
pop
add
popa
repnz
cmpsl
add
sub
mov
imul
mov
repnz
aaa
mov
push
pop
mov
and
push
push
out
iret
aaa
lods
xchg
enter
xchg
mov
mov
aam
inc
dec
ret
fimuls
repz
inc
push
cmp
xor
push
cmpsl
dec
and
pop
sbb
add
adc
out
leave
xchg
rcrl
and
pop
mov
xor
pusha
sbb
add
pop
xorl
xchg
fwait
mov
push
out
nop
lcall
and
ja
dec
fs
xchg
cwtl
pop
mov
pop
mov
sbb
insb
jecxz
sbb
ja
mov
mov
int3
cmpb
jp
iret
out
ss
jae
test
fprem1
jecxz
jae
enter
into
mov
lret
dec
rcrb
enter
sarl
rcl
repz
in
gs
adc
push
lcall
inc
add
lret
andb
out
mov
frstor
es
cmp
xor
loopne
add
jp
adc
adc
inc
fimuls
sahf
and
bound
pop
arpl
aam
mov
inc
orb
fs
loope
call
push
mov
clc
add
pushf
pop
test
sub
sub
push
cmpsb
and
test
adc
ret
push
add
loopne
xchg
push
in
pushl
mov
sub
sbb
fucomip
in
jne
hlt
add
ja
mov
gs
sahf
insb
cmc
or
ds
push
add
mov
xchg
jbe
push
testl
sub
dec
cltd
iret
ret
xor
cmp
adcb
sbb
mov
mov
repnz
sub
xchg
adcb
push
xchg
lcall
mov
inc
stc
idivl
xchg
lea
mov
push
cwtl
sbb
test
xor
xchg
inc
or
dec
inc
dec
xchg
xor
insb
adc
xchg
or
xchg
add
aaa
inc
lods
out
ret
push
loope
adc
cld
ss
mov
cmpsl
sub
call
fnstenv
jmp
lahf
sbb
add
dec
dec
aaa
jnp
inc
out
add
mov
lret
adc
sub
test
mov
pop
mov
xchg
outsb
cmp
bound
into
imul
arpl
lcall
mov
xor
in
xchg
and
xor
daa
cmpsl
jmp
hlt
iret
clc
jns
mov
dec
mov
inc
mov
jbe
ret
faddl
in
daa
xor
call
bound
xchg
stos
or
adc
push
push
hlt
arpl
loop
dec
pop
adc
aam
adc
dec
mov
sti
push
cmp
dec
add
dec
and
flds
in
cmpl
hlt
loop
add
ss
push
pop
jle
xchg
mov
aam
mov
in
xchg
push
lea
and
cld
enter
lahf
lcall
addr16
pop
aas
mov
push
ret
inc
dec
bound
pop
push
sbb
sbb
or
xchg
or
push
arpl
add
pop
add
lock
jg
ret
imul
push
loopne
pop
cmpsl
loop
idivb
daa
cld
sti
mov
adc
or
mov
mov
xchg
cmp
push
test
inc
xchg
fimull
scas
dec
sbb
pop
push
mov
pop
mov
pop
mov
arpl
cmp
xchg
lods
pop
fs
cmp
lahf
aad
xorl
jne
inc
ljmp
push
push
mov
jle
in
test
add
add
mov
scas
pop
arpl
inc
out
dec
movb
xorl
inc
dec
movsl
lds
incb
int3
outsl
insl
sbb
jge
xchg
and
mov
loop
jle
ja
jmp
popa
add
jle
fcomps
ja
sub
mov
idivb
pop
lock
pop
push
and
cmp
xorb
test
test
aam
xorb
fisttps
cmp
or
or
int
dec
rclb
mov
sbb
scas
bound
sub
ljmp
xor
fwait
mov
lcall
shlb
loope
xchg
arpl
mov
inc
or
dec
out
sub
lds
inc
leave
icebp
cmp
fiaddl
incl
das
rcl
pop
or
cli
addr16
popf
mov
aas
push
inc
cltd
xchg
scas
fisubrl
ret
pop
pop
and
sbb
cmpl
js
hlt
addr16
mov
fwait
or
cmp
mov
mov
mov
ret
cmc
and
shll
stos
push
and
inc
mov
add
outsl
out
sbb
and
sbb
inc
lcall
lock
popf
push
dec
mov
icebp
inc
mov
pop
nop
outsl
cmp
fmull
cmp
negl
lcall
push
dec
fdivl
xchg
mov
shll
fmuls
movsl
mov
jno
out
or
lcall
mov
sbbb
test
and
movb
setg
cmc
sbb
pushf
in
and
pop
pop
cmp
mov
pop
imul
lea
or
stos
cltd
dec
sbb
push
rcrl
and
pusha
pop
push
rorl
add
into
std
sub
outsb
icebp
arpl
insl
mov
ret
outsb
add
clc
cmp
add
or
xorb
xchg
in
loopne
jo
in
adc
mov
or
mov
iret
into
pusha
call
xchg
dec
cltd
xchg
orb
lcall
roll
adc
add
or
test
pop
out
cmp
and
pop
and
imul
jno
sbb
cmp
or
loopne
sbb
int3
mov
sbb
clc
sbb
pusha
and
or
loopne
fs
sbb
movsl
xchg
sbb
sbb
pop
push
scas
add
lcall
les
fs
sbb
pop
pushf
and
inc
stc
rcr
adc
mov
sbb
xorl
fcoml
cli
call
mov
subb
rcll
cmp
jecxz
add
dec
fiadds
addb
dec
roll
test
xor
daa
test
movsl
push
ja
repnz
popa
jl
and
lret
in
dec
popa
pop
mov
mov
adc
lock
cmp
nop
mov
fwait
or
pop
cld
xor
mov
pusha
repz
test
inc
inc
js
or
dec
jecxz
inc
clc
jle
lods
sub
push
inc
xlat
loopne
loop
cmp
jl
filds
test
fs
testb
xchg
cmpsl
pop
out
mov
mov
outsl
sarl
xchg
mov
das
push
jg
test
fwait
mov
mov
jo
test
cmp
mov
ja
inc
or
std
and
add
mov
or
fwait
and
or
and
jb
jnp
cmp
mov
or
sbb
ljmp
cwtl
dec
ljmp
pusha
test
stc
push
insl
in
enter
stc
pop
orb
push
sahf
sbb
mov
int
sub
push
push
push
arpl
iret
dec
pop
jo
mov
je
adc
mull
jecxz
mov
cmc
add
outsl
push
adc
fldcw
ss
int3
adcl
xchg
and
push
mov
sbb
add
popf
cmp
int3
div
xchg
mov
incb
xchg
daa
lcall
fistl
sbbl
jp
and
mov
inc
push
inc
inc
xchg
adc
jno
stc
ret
cmpsl
fwait
adc
ja
sbb
arpl
sbb
movsb
daa
xchg
xchg
int
xchg
xchg
iret
push
sahf
fdiv
jg
lahf
andb
pop
aas
mov
mov
jo
xchg
mov
dec
testl
lods
jecxz
xchg
add
and
pop
mov
add
stos
add
divl
inc
lock
lahf
in
bound
and
js
push
bound
sahf
push
jle
imul
addr16
jb
sbbb
mov
pop
mov
addr16
fdivl
sbb
xchg
aas
push
cli
push
sbb
xlat
add
xchg
cs
inc
roll
mov
mov
and
or
ds
stc
rcr
adc
jns,pt
addl
xchg
rcr
popf
cmpsb
pusha
hlt
and
int3
fidivrs
mov
std
pop
bound
mov
imul
rolb
mov
enter
add
xchg
xchg
sbb
jns
mov
cltd
inc
add
nop
daa
pop
mov
sbb
push
fwait
or
cltd
mov
mov
inc
or
mov
jno
sub
pop
xor
pop
xchg
outsb
cltd
dec
pop
sub
and
scas
adc
sbb
xchg
imul
js
pop
jnp
pop
dec
ja
popf
xchg
lret
pop
lret
sti
add
iret
xchg
add
ds
cmp
inc
repnz
lahf
scas
jb
inc
push
dec
es
or
js
inc
popf
add
lahf
es
pop
cmpsb
sbb
dec
sbb
ret
add
add
push
xchg
xchg
jne
andb
xchg
js
or
lea
dec
mov
pop
stc
icebp
lcall
inc
mov
fsub
adcl
jb
fbld
cmp
movsl
jp
pushf
cmpsb
mov
xchg
or
cld
or
popa
push
shl
test
cmp
and
xor
pop
inc
popf
push
sbb
push
mov
faddp
out
ret
or
adc
fs
sbbb
or
or
or
add
gs
pop
lock
fwait
inc
dec
dec
mov
cmp
sub
xchg
sbb
roll
mov
jno
adcl
data16
inc
cmpsl
jbe
and
and
enter
xlat
sti
mov
shlb
push
add
xchg
pop
push
mov
xchg
lret
icebp
ljmp
sbb
jg
daa
xor
in
test
js
sub
jo
cs
jle
dec
repnz
test
jmp
jno
adc
dec
push
jnp
cltd
test
push
scas
leave
mov
ds
adc
into
push
jb
test
jge
push
mov
mov
stc
and
mov
cli
hlt
inc
xchg
call
ss
cmc
enter
sbb
cmp
inc
jb
xchg
dec
adc
cli
mov
jo
cmp
repz
clc
incb
addb
bound
iret
arpl
sbb
in
repnz
jnp
fisttpll
fiaddl
out
lcallw
cmp
mov
cmp
push
mov
jns
sub
mov
adc
push
and
cmp
and
pop
daa
or
stc
jb
add
rcrl
cmpsl
inc
mov
mov
or
test
mov
cmc
pop
insl
ds
notb
js
maxps
int3
loope
int3
js
imul
into
ret
sub
rcr
fildl
cmc
pop
xchg
inc
mov
xchg
int3
aam
pop
test
jno
scas
pop
mov
jge
aas
push
sbb
cmpsl
pop
loop
mov
mov
arpl
sbb
orb
ljmp
jg
icebp
mov
repnz
xchg
je
jns
sbb
sti
je
stos
shll
xor
push
fsubs
nop
sbb
and
pop
ljmp
cli
mov
rorb
pusha
ja
mov
jg
or
xchg
push
mov
push
xchg
or
lea
dec
inc
and
and
jge
bound
cwtl
std
pop
outsl
aad
cwtl
icebp
jo
js
lcall
insl
mov
xchg
test
sarl
das
cmp
fs
lods
dec
jecxz
add
int
fsubl
mov
cmp
pop
addr16
and
stos
test
add
lods
and
adc
lea
add
sub
mov
imul
ljmp
mov
mov
push
sti
xchg
xchg
dec
mov
jg
jb,pn
inc
jbe
rcl
xchg
add
out
movsl
mov
cmp
addb
jp
movsl
push
mov
imul
mov
orl
and
xchg
test
xchg
ss
enter
cli
or
jbe
pop
ds
addb
popf
movsb
inc
xchg
fisubl
jecxz
cmpb
out
mov
repz
mov
or
or
sub
clc
pusha
sti
leave
mov
fiaddl
lahf
iret
test
test
out
add
push
or
add
adcb
push
popa
sub
adc
rolb
adc
aad
pushf
shl
insb
fs
andl
inc
daa
stos
mov
icebp
repz
jmp
jl
daa
push
inc
jae
mov
inc
test
jmp
outsl
adc
add
push
push
out
mov
push
in
dec
mov
hlt
sbb
lret
cmc
aam
les
jmp
mov
insb
movsl
push
jo
sbb
int3
lahf
pop
xor
cmp
sub
das
rol
lock
jb
rorl
rcrl
nop
and
leave
test
or
sub
into
mull
xor
and
insl
fs
fwait
pop
ret
inc
addr16
jle
xor
xchg
filds
cmp
push
out
sbb
pushf
mov
fdivrl
mov
push
lods
inc
adcl
fadds
mov
das
and
lods
cmp
xlat
out
xchg
cltd
insb
mov
popf
mov
mov
push
cs
or
inc
cld
sub
jmp
movsb
lcall
dec
mov
add
cld
inc
jge
nop
jne
xchg
and
xlat
in
lds
sbb
xor
push
sahf
das
add
shll
mov
das
add
sub
jnp
mov
movsl
enter
repz
jg
stc
inc
inc
inc
xor
ja
xchg
pop
pop
ja
fidivs
push
insl
aaa
sub
or
imul
mov
sarb
repnz
push
nop
mov
add
ja
pop
jo
push
sarl
cld
pop
aad
into
imul
push
xor
test
push
dec
mov
mov
jnp
dec
pop
add
mov
lods
adc
mov
ret
sbb
out
xchg
fs
inc
insl
iret
in
enter
adcb
mov
pop
sti
pop
pop
and
es
pop
sub
jnp
jcxz
scas
repz
sti
into
ljmp
push
cmc
addb
xchg
aad
inc
adc
dec
inc
bound
aaa
mov
or
ss
gs
add
jmp
sub
cltd
push
sbb
insb
outsl
js
mov
insb
and
and
iret
mov
sbb
daa
ficompl
out
add
fabs
mov
jp
arpl
idivl
leave
jmp
mov
mov
aas
pop
sarb
push
scas
cmpsl
fwait
iret
mov
pop
inc
subl
movsl
adc
loop
sbb
or
xor
in
frstor
test
xchg
pop
xlat
sbb
xor
xchg
push
lods
inc
sbb
inc
icebp
add
shl
lret
scas
lret
push
out
dec
in
inc
pop
addr16
pop
rolb
xchg
push
dec
sar
sahf
xor
xchg
mov
lds
int3
mov
andl
leave
js
and
sbb
mov
lea
or
lods
popa
push
xor
mov
jp
nop
loope
push
inc
lods
leave
fisubrs
jmp
pusha
stos
jp
add
pop
aas
aad
cwtl
inc
fsubs
pop
sbbb
std
sbb
jb
stc
rcrb
test
cmpsb
mov
imull
mov
pop
sbb
or
mov
addb
inc
push
mov
dec
push
iret
pop
add
mov
add
xchg
sbbb
in
sbb
adc
sbb
pop
cmp
cmp
xchg
into
xor
sbbl
cltd
movsl
sbb
aam
mov
cld
daa
jp
adc
push
fistpll
mov
sbb
inc
sahf
add
lahf
xchg
ds
mov
and
pop
fdivl
xchg
jp
xor
aam
lea
xor
loope
js
xchg
loop
fsubl
sti
sbb
adc
pop
shll
or
dec
lret
xchg
outsl
or
iret
fdivp
fildll
add
fwait
xchg
mov
test
shll
jae,pt
jecxz
cltd
pop
nop
mov
xchg
cmp
pop
add
jecxz
sbbb
or
mov
pop
and
incb
and
jle
fiadds
std
faddl
jnp
test
or
dec
mov
sahf
frstor
sarb
jp
pop
and
jecxz
sti
mov
jns
dec
lcall
test
scas
adc
stos
and
inc
bound
xlat
js
add
or
push
ja
fistps
mov
xchg
cld
cmp
inc
xor
aaa
mov
or
mov
lods
iret
sbb
test
popf
xchg
inc
sbbb
mov
adc
and
push
cmp
repnz
pop
test
inc
cld
sahf
pop
add
push
test
jecxz
leave
daa
jp
loope
cmp
add
addr16
or
mov
dec
imul
out
xor
cmp
jnp
jns
mov
inc
aas
out
clts
outsl
mov
mov
lahf
cmpsb
lea
sub
and
adc
add
clc
or
adc
dec
clc
test
mov
rcrb
push
dec
push
sahf
sub
call
pop
add
pop
js
fwait
cmpsb
repnz
fsubl
pushf
data16
pop
out
mov
sahf
cmc
add
dec
dec
jecxz
jp
divl
fldenv
xchg
outsb
addb
lret
mov
pop
mov
ret
mov
stos
mov
fnstenv
inc
test
xchg
popf
shl
adc
pop
enter
in
sbb
or
roll
test
push
push
jno
pusha
pop
pop
repnz
xchg
pop
pop
or
xor
jae
cld
cmp
mov
test
push
in
imul
sbb
sarb
cmp
scas
arpl
xchg
and
inc
and
sub
out
not
fs
pop
arpl
sbbl
cwtl
loop
ret
adc
xchg
aaa
cmpb
popf
sbb
jl
cli
mov
and
xchg
das
lds
clc
mov
repz
mov
jae
incb
jge
adc
lods
xchg
les
mov
push
sbb
mov
inc
jo
inc
cmc
jp
dec
xchg
and
pop
daa
push
mov
fidivrl
or
pop
nop
sbb
xlat
jmp
adc
xor
addb
adc
or
cmc
inc
push
mov
pusha
and
mov
sbb
fwait
and
push
jmp
mov
add
shrl
push
or
xchg
in
fsubrs
es
fs
or
aas
rcrb
dec
dec
lcall
daa
dec
xorb
cmc
bnd
in
mov
in
int
sbb
fidivrl
testl
daa
ja
or
sbb
movl
add
push
xchg
std
lds
dec
out
in
sahf
mov
stc
frstor
xor
shr
lcall
lahf
addr16
cmp
add
pop
inc
cmp
mov
andl
mov
lahf
and
xorl
pop
scas
cwtl
inc
ja
out
xchg
pop
or
fnstsw
cwtl
inc
xor
sub
and
mov
js
nop
lahf
jb
test
mov
test
sub
aaa
xchg
add
or
jecxz
jb
jle
fwait
xchg
fwait
jle
aas
adc
jno
cmp
data16
or
orb
cmp
out
sbb
test
test
sub
xchg
mov
inc
mov
push
gs
cmpsb
mov
rcr
cwtl
and
lret
gs
push
sub
nop
xchg
sub
test
pop
mov
andl
loope
aas
mov
cmc
pop
inc
or
popf
adc
add
fsts
mov
loop
cmp
pusha
inc
cmp
pop
sbb
sbb
add
out
loop
lret
js
enter
pop
add
daa
clc
mov
cmp
push
sbb
mov
add
nop
or
and
xchg
stc
mov
mov
roll
fidivrl
mov
mov
push
enter
imul
pop
ja
xchg
cwtl
push
cmp
into
shlb
jmp
pop
mov
fisttps
ret
out
adc
pusha
adc
out
inc
dec
or
sarb
orb
pop
pop
sub
hlt
out
push
jo
dec
test
adc
inc
int3
ljmp
inc
mov
in
mov
into
adc
into
pop
jo
xchg
icebp
jp
repz
fsubrl
dec
fs
shl
pop
xor
jp
aas
sbb
ja
fwait
je
dec
cmp
push
pop
negb
mov
in
dec
and
and
cli
test
imul
add
cmpl
outsl
and
cmp
xchg
mov
lcall
rcrl
mov
xlat
cld
pop
loope
or
arpl
in
popa
mov
fidivs
push
inc
xchg
sub
scas
sub
aam
rcrw
push
shrb
cwtl
std
incl
add
mov
jmp
ljmp
mov
xor
mov
lods
addr16
dec
inc
cwtl
ja
rep
sbb
leave
mov
pop
mov
cs
push
and
incb
jg
push
pop
imul
lock
les
jb
jnp
es
pop
inc
add
cltd
flds
pusha
inc
adc
frndint
das
movsl
iret
add
jp
adc
adc
fmull
divl
push
push
sbb
sti
mov
pop
fcmovnbe
push
fwait
inc
jg
and
mov
fistl
xorl
mov
fstps
sbb
out
xchg
add
mov
jl
adc
adc
icebp
mov
pop
lcall
or
scas
int3
jbe
bound
adc
stos
insl
adc
pusha
rcl
cld
int3
jle
mov
push
aam
xchg
pop
data16
out
cmpsl
sbb
repnz
roll
jecxz
call
das
mov
xor
xor
js
and
pop
jmp
dec
add
and
mov
jnp
and
mov
pop
fldcw
scas
push
movsb
ficompl
inc
scas
push
test
lcall
or
add
lcall
int
mov
test
push
mov
and
imul
ret
dec
bound
call
data16
mov
gs
adc
jae
popf
push
aas
bound
and
inc
rclb
sub
and
pushl
push
leave
mov
scas
aaa
jnp
popa
test
iret
lock
add
sub
aaa
dec
push
xor
cmp
imul
or
push
sbbb
cmc
mov
out
add
arpl
std
jge
ret
addb
mov
ret
jle
adc
pop
lods
pop
sbb
xlat
addb
imul
xor
xchg
push
outsb
and
push
lods
lods
imul
push
aaa
inc
insb
addb
sub
xchg
std
loope
fldl
sti
popl
mov
adc
xorb
dec
xor
mov
repnz
scas
fbstp
xchg
xor
jb
popa
sbb
mov
sahf
jb
mov
div
lahf
stc
lcall
xor
xchg
das
add
or
mov
arpl
js
mov
mov
xor
test
decb
adc
pop
lahf
rcr
je
outsb
mov
mov
fistl
nop
adc
cwtl
lret
fiaddl
inc
cmp
fs
xchg
jp
jge
adc
xchg
fisubs
aaa
jns
movb
push
xchg
addr16
and
pop
insb
test
push
push
add
mov
outsl
fyl2xp1
jb
jp
outsl
pop
pop
addr16
cld
adc
call
mov
loopne
add
sbb
fs
addr16
cmp
pop
mov
lock
lahf
addr16
std
std
add
push
ficoms
mov
mov
add
mov
sub
jmp
mov
out
mov
push
inc
mov
jge
cltd
cwtl
mov
lret
addr16
jno
sbb
test
xchg
popf
and
push
mov
sub
mov
mov
sub
popa
lods
add
cltd
fs
dec
mov
ret
pop
mov
mov
add
pop
pushf
pushl
push
pop
add
adc
mov
test
cmpl
push
flds
adc
adc
xchg
daa
add
xchg
aas
outsl
hlt
in
test
push
xchg
mov
dec
jb
push
xchg
test
repz
jo
outsl
mov
mov
and
inc
idivl
aas
stos
aaa
pop
sub
adc
inc
adc
pop
sub
fcoml
pusha
aaa
data16
mov
pop
repz
sbb
mov
inc
scas
pop
push
sbb
sub
mov
in
fdivl
pop
push
inc
sahf
mov
mov
and
and
loop
and
in
test
sub
roll
sbbb
test
mov
or
adcl
inc
adc
sbb
int3
sbb
sti
add
xor
dec
xchg
or
ret
cmp
add
in
pop
xor
sar
dec
sti
mov
and
leave
arpl
cmc
in
cmp
rcr
push
js
xchg
and
adc
rolb
in
scas
lock
lds
sbb
cmp
cmpl
jp
inc
sahf
fnstenv
inc
stc
stos
adc
mov
mov
cli
ja
mov
fwait
aam
addr16
dec
push
cld
jb
mov
inc
addr16
arpl
adc
lahf
mov
pop
jae
or
push
mov
shrb
pop
inc
fcoml
push
mov
cmp
cmp
lahf
es
sub
sub
ds
add
call
movsb
mov
movsb
sarl
rclb
cwtl
imul
rol
test
aad
sub
adc
repnz
sbb
bound
xor
jle
ljmp
bound
mov
loope
fwait
push
loope
fs
or
add
push
sahf
sbb
jnp
fnstcw
mov
pushf
sti
fwait
aaa
dec
pushl
mov
call
add
lock
mov
aad
sti
aas
xor
cmp
adcb
or
add
dec
cld
jp
or
cmpl
dec
cmp
jo
push
cli
jp
xchg
stos
cmp
out
add
insl
adc
loop
mov
mov
inc
js
inc
fstl
jl
cli
adcb
test
lods
adc
inc
push
bound
xchg
mov
push
inc
jge
or
addr16
mov
xor
daa
mov
popa
loopne
mov
add
jl
push
out
adc
jnp
aaa
dec
cmc
lods
arpl
adc
dec
mov
lret
adc
sub
in
mov
nop
and
loopne
dec
shlb
sbb
pushf
aas
sub
mov
into
ret
bound
in
sbb
aas
test
cmp
mov
daa
push
idiv
shll
nop
dec
or
js
adc
stc
add
lahf
and
mov
xor
movsl
mov
int3
and
aaa
shll
or
mov
sub
mov
adc
pop
push
cmpsb
push
ret
dec
subl
add
cmp
add
jns
pop
mov
inc
cmp
push
lcall
mov
sbb
pop
insl
aas
pop
push
int
pop
lret
aam
inc
xorl
fbld
add
ljmp
fisubl
xor
cli
xor
repz
add
mov
sbb
push
mov
mov
mov
cltd
sbb
sbb
pop
and
fidivl
pop
fs
adc
mov
icebp
pop
sub
int
adc
sub
movsb
inc
cld
sbb
mov
icebp
inc
xor
jb
aas
repnz
xchg
or
ficomps
and
add
les
jo
addl
push
ljmp
sbb
repnz
popa
hlt
xrelease
mov
jge
push
popf
push
ret
or
push
test
cwtl
sbb
fistpl
pop
xchg
aas
cmc
mov
lcall
cmpsl
mov
fisubrl
lcall
stc
jns
lcall
mov
sub
mov
cld
mov
push
je
xchg
andl
mov
fcompl
jg
cmp
gs
mov
cmp
test
xchg
addr16
dec
fiadds
and
sbbb
sbb
iret
addl
call
pop
in
and
or
das
sbb
jo
mov
scas
int3
dec
inc
jae
adc
mov
lahf
loopne
imul
hlt
cmp
inc
das
rcrb
mov
pop
xchg
mov
mov
xchg
fadds
add
fildll
mull
les
dec
or
loope
rcrl
mov
gs
or
addb
stc
bound
pop
out
cmpsl
ja
daa
repnz
push
ret
sub
popa
and
shrb
cmpsb
sbb
add
or
imul
mov
insl
addl
in
sbb
jbe
sub
push
filds
loope
push
xor
nop
add
daa
in
inc
insl
fsubs
sahf
cmc
jp
sbb
scas
insl
mov
mov
xchg
inc
xor
sbbl
lcall
push
jge
and
mov
pop
adc
adc
in
test
fwait
jno
sbb
popa
xchg
add
mov
jl
add
std
mov
adc
mov
mov
addr16
and
sub
daa
xchg
stc
mov
xor
cs
mov
push
xchg
xor
xchg
xchg
lds
pop
cmc
bound
xor
cmp
ljmp
jg
pop
aas
add
lea
adc
mov
mov
ret
mov
mov
push
addr16
adc
xchg
pushl
pop
imul
inc
dec
lahf
cmc
enter
add
in
ret
pop
mov
lcall
pushf
hlt
repnz
scas
sbb
xchg
cltd
lods
lcall
mov
aas
mov
mov
iret
divb
or
cmp
pop
sub
mov
repnz
xchg
mov
lcall
add
push
fs
pop
jbe
aad
jecxz
pop
gs
movsl
jno
adc
inc
into
repnz
push
push
sbb
popa
xor
cli
pushf
mov
insb
jge
imul
adc
test
jno
add
mov
jmp
add
ret
and
lahf
mov
fbld
cmp
add
rcll
shr
inc
int
cmp
int
imul
stc
roll
ljmp
jl
pop
in
fidivs
mov
dec
push
in
add
out
push
jns
sbb
rcrb
pop
xor
adc
and
push
push
stos
bound
dec
adc
pop
jmp
dec
mov
or
jbe
jle
xor
and
jecxz
fs
push
lahf
jmp
pop
aaa
fnsave
cmc
loop
push
pop
movsl
mov
pop
ds
das
scas
dec
xchg
inc
lods
xchg
or
sarb
adc
pusha
pop
jae
mov
jp
and
sub
ret
mov
scas
lahf
sbb
xor
dec
inc
cmp
fnstsw
xchg
cld
imul
cmp
clc
pop
mov
bound
orb
pop
test
add
mov
jle
jp
xor
in
cltd
andb
pusha
cmpsl
xor
and
push
mov
pop
leave
and
pop
mov
and
fildll
push
cmp
pop
das
push
outsl
mov
push
xor
push
mov
sub
xor
mov
inc
push
jns
xchg
and
pop
cmp
or
sub
dec
inc
mov
ljmp
cmp
and
test
jmp
repz
stc
pop
ret
cmp
cmp
or
cltd
inc
mov
or
cmc
cmp
and
cltd
mov
incl
xor
jg
inc
cmp
ret
std
xchg
and
shll
cmpl
add
call
aaa
pop
mov
scas
jmp
test
out
loopne
xchg
sbb
arpl
mov
sbb
dec
addr16
aad
mov
or
add
stc
aad
int
or
daa
xlat
jmp
ljmp
add
pop
xor
mov
add
test
xor
mov
xchg
cltd
arpl
or
or
jp
push
fnclex
mov
inc
inc
loope
add
inc
adc
daa
inc
in
in
pop
inc
add
pop
push
mov
inc
inc
add
out
lret
and
test
push
mov
sbb
lods
mov
lods
lret
int
aad
push
test
mov
dec
cmp
ja
enter
mov
stos
sub
inc
loopne
dec
stos
pop
mov
outsb
and
mov
sub
push
movsb
and
test
cwtl
push
fs
mov
dec
xchg
fistps
test
and
mov
in
cmp
or
in
lret
mov
out
cmp
pop
andb
popf
jae
jmp
loop
pop
std
sub
or
inc
roll
or
cmp
test
dec
jae
insb
out
das
mov
hlt
lret
cld
popf
fwait
jno
outsl
sarb
pop
adc
in
pop
inc
mov
pop
cld
sahf
out
adc
test
clts
pop
fwait
repnz
xchg
jo
js
in
je
popf
sub
pop
mov
cli
xor
and
insl
add
roll
sti
or
aam
pop
imull
int3
mov
arpl
add
adc
ret
cmp
rcrb
dec
sbb
outsb
maxps
rol
lods
jno
or
arpl
jecxz
mov
ds
scas
cmc
inc
adc
jg
lcall
dec
sub
sbb
fiaddl
adc
pop
adc
test
mov
lahf
xchg
push
add
or
cmpsb
rcrb
scas
xor
inc
push
cmpl
push
aas
packsswb
mov
push
pop
jb
dec
mov
xchg
jp
jno
or
lds
ror
xchg
mov
int
and
jbe
mov
outsl
aad
inc
in
mov
outsl
mov
in
icebp
push
mov
out
add
repz
mov
mov
popa
push
loop
loope
std
faddl
xchg
lahf
inc
hlt
icebp
je
mov
inc
push
cmp
dec
mov
ds
adc
push
mov
add
xchg
test
lahf
lds
mov
out
jg
cwtl
push
push
mov
jb
ja
mov
mov
or
outsl
push
nop
repnz
ja
orl
fwait
xchg
out
rorb
orl
xchg
and
je
loopne
xor
adc
ja
inc
xor
jp
and
pop
inc
fwait
test
xchg
and
pop
mov
mov
cmp
jecxz
jmp
sub
cli
cltd
mov
add
jb
jg
sbb
hlt
mov
adc
jecxz
sub
sbbb
inc
aaa
inc
mov
aaa
xchg
add
mov
shrb
outsl
cmc
push
sbb
or
pop
ffree
xlat
push
arpl
lcall
push
push
stos
inc
lds
pop
mov
xchg
mov
mov
mov
std
mov
pop
hlt
bound
sbb
add
push
sahf
sbbb
sbb
mov
outsb
jecxz
jae
dec
mov
sub
mov
pop
jbe
aas
and
test
pop
mov
pop
mov
cmc
mov
mov
lret
cmpb
popa
pop
mov
imul
mov
adc
fadds
jge
adc
jno
and
mov
mov
cs
mov
outsb
sarl
pop
inc
inc
fstps
arpl
mov
pop
cmc
cmp
push
sbbl
cwtl
mov
shll
test
sub
xor
cmp
pop
fcomip
movsb
push
mov
inc
nop
or
data16
test
addl
or
mov
imul
lahf
lods
mov
clc
inc
out
mov
ljmp
xchg
push
lods
imul
int3
testl
ljmp
jns
shlb
fwait
test
xchg
cmp
rcrl
jb
pop
mov
jb
pop
jp
adc
jmp
popf
mov
data16
push
adc
dec
cli
push
push
leave
xchg
rorl
sub
imul
pop
adc
and
mov
and
push
dec
inc
mov
cld
loope
lods
push
sbb
sbb
test
outsl
pop
inc
xchg
shl
bound
lock
hlt
sbb
scas
pop
push
jae
xchg
pop
mov
insl
fcoml
push
xor
xchg
fisubrl
pop
or
insl
ljmp
inc
inc
mov
out
hlt
inc
mov
negl
cmc
mov
add
in
add
xchg
out
std
cwtl
daa
pop
inc
push
nop
repz
jecxz
mov
inc
sub
scas
dec
stos
mov
iret
or
cmp
xor
inc
test
fstps
sbb
or
sub
fcompl
psubd
adc
xchg
ss
jl
dec
pop
xchg
push
fnop
inc
or
negl
and
or
mov
mov
negb
xchg
scas
into
aad
mov
pushf
jge
lds
xor
icebp
cmpsl
repz
xchg
xor
daa
dec
mov
stc
add
xchg
or
adc
xchg
xor
add
mov
xlat
sbb
jo
adc
and
outsl
adc
mov
movsb
insb
popf
xor
adc
pop
and
jne
push
or
sub
xchg
mov
fidivrs
mov
insl
fcoms
mov
addr16
repz
cmp
jno
mov
decb
loope
orb
push
add
xlat
sub
addb
addb
mov
jno
pop
push
inc
jne
pop
jecxz
push
push
add
iret
pop
mov
mov
sub
sbb
lahf
jp
xlat
mov
mov
mov
jb
int3
ljmp
pop
cmp
mov
add
ficomps
nop
cwtl
cmpsl
and
lds
dec
sbb
cmp
and
pop
enter
ret
and
out
sub
xchg
test
fldcw
outsb
leave
cmp
pop
or
sahf
push
out
mov
enter
add
jb
adc
mov
mov
fcom
pusha
mov
xor
arpl
jbe
adc
mov
in
inc
jb
add
and
and
xchg
push
jno
lahf
xchg
stc
cmp
fiadds
repz
mov
mov
out
lahf
xchg
xchg
fimull
push
dec
movsl
jg
add
pop
sbb
mov
outsl
je
and
and
sbb
and
stc
and
out
pslld
sbb
ja
lret
sbbl
push
data16
subb
xchg
insl
mov
mov
cmp
sub
mov
add
add
pop
lcall
shlb
push
inc
add
push
das
mov
push
imul
sbbl
sub
xor
push
pop
dec
xorb
sub
jbe
xor
push
inc
imul
sarl
repnz
mov
fisubs
rcrb
sar
xchg
in
jno
stos
loopne
push
xchg
cmp
out
adc
mov
cwtl
aas
stc
push
ljmp
ret
add
mov
sbb
mov
dec
xlat
cmpsl
sub
ret
shll
sahf
mov
jb
ret
mov
sbbl
repz
fistps
pop
push
lods
xchg
adc
popw
push
fxch
pop
jb
fldl
mov
mov
adc
inc
filds
push
adc
inc
push
int
mov
xchg
ds
mul
inc
xor
fsub
push
aas
repnz
jle
fdivr
inc
mov
mov
cmpb
repz
int
push
mov
adc
movsb
aad
loopne
lret
mov
xor
pop
jns
dec
sbb
aas
leave
test
out
adc
aam
in
mov
scas
jne
call
sti
int
or
mov
cwtl
cld
daa
jge
xchg
inc
cmc
in
sarl
sub
or
pop
ja
ja
jp
or
sti
xchg
jl
cmp
push
and
into
add
roll
sbb
inc
imul
lock
pop
add
and
bound
mov
lcall
cmp
sbb
xchg
mov
lods
test
push
push
clc
repz
xchg
cmp
xchg
adc
enter
xorb
ret
add
fidivl
or
mov
js
repnz
cmp
adc
fstps
and
add
mov
cmpsl
repnz
mov
out
sub
in
movsl
dec
add
inc
pop
push
adcb
ljmp
inc
popf
or
test
pushf
adc
mov
filds
jle
add
negl
imull
mov
xor
xchg
mov
pop
xchg
xor
out
push
rclb
adc
int
popl
xchg
jo
xchg
fwait
pop
test
hlt
aas
dec
test
push
gs
pop
scas
jno
rcr
test
mov
imul
cmp
repnz
sbb
push
pushf
fwait
pushf
mov
mov
inc
fiaddl
fidivs
xor
mov
pop
xchg
mov
pop
dec
leave
lock
push
sbb
mov
inc
insb
inc
cs
xchg
fwait
incl
xchg
jmp
pop
stos
int
iret
and
push
mov
dec
fistl
xor
and
lock
inc
sub
pop
cmp
loope
mov
xor
test
push
dec
test
stc
jno
mov
dec
or
hlt
insb
inc
or
ror
movsl
sub
mov
hlt
xchg
sarb
pop
inc
std
sbb
sarb
lods
lret
mov
popf
icebp
pop
or
mov
xchg
cmp
fldl
out
iret
mov
mov
mov
outsl
iret
sbb
ret
xchg
or
out
jae
cld
popa
push
fmull
push
adc
in
sub
in
mov
call
loop
andl
cli
jg
pop
mov
pop
orl
xor
stc
mov
jge
int
fwait
cmp
xchg
or
lcall
lahf
aas
xchg
mov
dec
inc
sbb
pop
adc
mov
enter
xchg
mov
fcompl
pop
xchg
sbb
push
xchg
cwtl
arpl
jp
pusha
adc
pop
pop
data16
jecxz
lcall
cmpsl
fcompl
sbb
jmp
shlb
mov
and
xor
repnz
push
scas
out
icebp
jbe
mov
mov
hlt
sub
inc
mov
pop
ja
pop
imul
jb
add
pop
xchg
xor
and
imul
testb
ficoml
mov
das
fimull
or
fildl
push
fistps
cmp
mov
insl
inc
daa
scas
xlat
jecxz
pinsrw
into
nop
out
rorl
nop
sbb
rorb
nop
pop
mov
pop
mov
inc
or
or
xchg
popa
sbbb
ljmp
es
push
cmpsb
call
rolb
pop
and
mov
lcall
adc
icebp
push
imul
push
mov
popa
cmc
test
and
cmp
aad
dec
xor
push
dec
inc
mov
in
jns
data16
jecxz
jp
arpl
xor
jns
xor
push
jg
lods
mov
mov
mov
orl
test
jle
nop
iret
inc
fldenv
xchg
cmp
sbb
xchg
fsubs
adc
xlat
dec
cmp
xchg
dec
inc
push
cmpb
fs
andl
mov
cltd
movsb
imull
enter
out
shlb
adc
gs
sub
adc
pop
fnstenv
repz
fcoms
call
ffree
mov
sbb
test
fcom
push
push
loop
mov
push
mov
dec
jg
popf
daa
outsl
subl
insb
jno
popa
push
adc
test
and
or
mov
xor
je
jne
pop
mov
fiaddl
push
mov
inc
mov
pop
mov
fwait
and
jg
xchg
iret
cmp
mov
push
mov
popf
xchg
pop
negb
and
ja
aas
sbb
add
mov
inc
mov
jge
lahf
or
xchg
cltd
or
adc
mov
cltd
jno
inc
xchg
mov
data16
mov
jae
sbb
cmpsl
in
jmp
push
pop
mov
stos
sar
push
pusha
adc
mov
sbb
push
inc
sbb
pushf
push
inc
pop
xchg
sbb
inc
add
fwait
pop
inc
das
pop
lret
clc
jne
addr16
aad
push
data16
lret
lahf
xchg
inc
int
stc
fidivrl
dec
cmpsl
inc
out
add
popf
mov
add
push
dec
rcl
mov
fcmovb
pop
out
push
lcall
mov
mov
inc
mov
push
inc
and
sbb
mov
dec
xchg
cmp
cli
or
rep
xchg
push
incl
push
sbb
inc
out
pop
inc
jp
sbb
cmpsl
inc
push
jge
jmp
addr16
mov
add
addr16
inc
dec
sub
push
xor
inc
jecxz
loope
mov
aas
jno
cmp
jno
insb
inc
mov
ja
sub
and
pop
cmpsl
inc
xor
mov
mov
push
sub
inc
das
mov
jb
stos
test
push
xor
ret
ss
xchg
ds
popf
and
cmp
ss
out
cmp
imul
push
repnz
inc
andl
aad
mov
fxch
adcl
sub
inc
sbb
in
cmpsl
inc
in
mov
add
add
rcrl
inc
ret
subb
sbb
sbb
sbb
sahf
sbb
lcall
lds
sbb
lock
fwait
xchg
xchg
and
mov
xchg
push
daa
hlt
pop
sub
add
loope
push
pop
or
sub
sub
xor
mov
lret
ljmp
jnp
or
rorb
sub
repnz
pushf
or
out
pop
mov
aam
movsb
js
outsb
mov
mov
js
dec
imul
pop
in
inc
push
mov
lret
daa
repnz
add
data16
clc
in
adc
or
push
push
aas
mov
lods
js
xchg
mov
xchg
sbb
cltd
and
mov
sbb
mov
cwtl
or
notl
std
repz
lret
xchg
icebp
jns
or
sub
loopne
inc
fbld
addr16
or
inc
sub
push
inc
cli
or
dec
andl
nop
out
xchg
jle
xchg
iret
sbb
shrb
lock
sbb
ficoml
cmpsb
pop
stc
sti
nop
cmpb
icebp
cmp
dec
xor
sahf
lahf
pop
das
inc
jo
xor
adc
out
clc
dec
inc
xor
imul
pusha
fdivrs
enter
stc
adc
mov
cmp
dec
inc
sbb
fcmovne
inc
jno
push
jle
mov
icebp
js
mov
mov
fnstenv
xchg
add
sbb
mov
gs
lods
or
xchg
mov
std
std
addr16
fdivrs
xchg
jnp
and
loope
add
sbb
test
sub
pop
mov
xor
or
and
xchg
add
xchg
lahf
cmc
data16
imul
shl
jnp
dec
jo
sbb
ja
fidivrl
or
std
push
popf
cmp
cli
bound
push
negb
rcrl
jne
jb
je
cmp
lret
lock
cld
jns
ret
bound
outsb
pop
push
std
sbb
iret
fcomps
sbb
xchg
sahf
sbb
scas
add
adc
sbb
xchg
fisubs
cmp
xor
fsubrl
ret
inc
lahf
call
mov
xchg
push
mov
popf
xchg
lea
test
adc
imul
mov
popf
loop
sbb
loope
mov
je
inc
mov
cld
stos
mov
adc
hlt
cwtl
push
mov
fwait
xor
add
push
jp
pop
adcl
repz
add
stos
inc
imul
adc
ds
ret
cmp
lcall
pop
pop
add
mov
fmuls
std
cmc
jno
mov
fnstsw
jo
fwait
addr16
and
stc
mov
addl
push
add
js
push
xchg
xlat
jp
inc
das
mov
jbe
jbe
sti
or
inc
sbb
aam
sahf
cmp
mov
inc
pushf
repnz
incb
leave
mov
adc
arpl
ljmp
push
in
sub
jge
and
out
enter
cwtl
cmpb
out
rolb
popa
cmp
inc
add
andb
pop
pop
xchg
inc
fs
or
stos
mov
hlt
inc
cmp
push
push
mov
adc
add
mov
inc
and
loope
fwait
dec
insb
cmc
adc
cmp
mov
jle
push
xchg
push
xor
cmp
cltd
jne
stc
ret
dec
mov
pop
and
pop
xorl
cmp
in
dec
test
int3
inc
dec
test
add
sbb
mov
sbb
push
and
and
sbb
sarb
or
mov
lock
add
cmp
fiadds
icebp
lahf
outsb
xor
xor
sbb
dec
test
loop
xchg
aaa
mov
sub
mov
adc
andl
fldenv
mov
jecxz
adc
inc
cmp
decb
and
imul
dec
mov
dec
rcll
add
jp
add
xchg
xchg
push
fcmovb
lahf
sbb
shll
push
in
mov
data16
jp
mov
fwait
sbb
rcrl
movsl
movsl
int
imul
enter
sbb
ds
fadd
mov
test
filds
ds
push
xchg
dec
xchg
adc
hlt
cmp
pop
std
dec
addr16
cs
push
pushf
mov
int
aaa
cwtl
push
adc
incb
dec
inc
in
leave
loope
bound
xchg
mov
mov
out
add
jno
xor
outsl
inc
xor
inc
les
in
fmulp
call
ret
es
or
call
mov
outsb
adc
insb
add
add
mov
push
cmp
add
arpl
sti
mov
inc
mov
jp
testb
push
ret
mov
aas
cmpsl
dec
cmpsb
add
and
in
enter
in
cmp
cmp
xchg
jp
dec
fcmovbe
mov
shll
imul
out
rcll
addr16
fstps
pop
adc
dec
faddl
cmp
icebp
pop
mov
fistpl
hlt
fnstcw
dec
pop
pop
cmp
stc
in
or
jecxz
stos
cmp
popf
fsubs
pop
lret
sti
add
pop
push
inc
add
or
lock
dec
adc
xchg
push
aaa
cmp
xchg
icebp
xor
bound
outsb
mov
inc
push
mov
call
pop
push
iret
jb
xlat
mov
mov
outsb
cmp
dec
lret
jecxz
jp
dec
rcll
xor
or
jge
test
inc
cmpsl
mov
sbb
in
sub
adc
daa
lea
mov
cwtl
outsl
push
inc
je
fadds
jp
clc
xchg
les
lret
mov
cwtl
daa
fs
out
xchg
xchg
lods
mov
clc
cmp
xor
ret
sbb
inc
jmp
sbb
adc
dec
rorb
dec
sbb
dec
aaa
pop
dec
outsl
sbb
push
adc
fmuls
sahf
sbb
cltd
addr16
dec
andl
push
inc
sub
les
mov
jne
in
faddl
daa
mov
and
pop
adcb
xchg
shr
leave
sub
fdivrl
pop
xchg
aas
out
insl
xchg
insl
lock
xchg
xchg
fdivl
mov
testb
inc
clc
add
fadds
add
cmpsl
xchg
daa
dec
testl
test
mov
mov
adc
aad
imull
imul
and
enter
mov
punpckldq
fs
repz
jg
push
pfrsqit1
pop
pop
jo
rclb
shrb
mov
add
sub
call
mov
xor
adc
cmc
sub
add
or
add
lret
insl
cmpsl
test
mov
push
pushf
push
test
jge
inc
xor
sbb
lods
jmp
jecxz
pop
ja
inc
aaa
je
mov
jns
add
sbb
imul
mov
inc
push
stos
xchg
cmp
jns
push
clc
fisubs
pop
sbb
ret
mov
mov
xchg
sub
fbld
pop
pusha
lahf
arpl
jecxz
cwtl
aas
hlt
stos
xchg
xchg
mov
xor
pusha
clc
jmp
enter
cltd
sub
jecxz
movsl
adc
icebp
dec
aas
fptan
pusha
subl
fnstcw
dec
cs
pusha
adc
cmp
fistpl
sbb
push
xchg
fxtract
mov
xchg
inc
mov
or
mov
out
and
addb
es
sbb
aas
andl
adc
sub
xor
cmp
cs
in
jp
sbbb
insl
out
xchg
or
cs
dec
push
int
inc
stc
flds
adc
mov
mov
push
loope
cmp
mov
fdivl
ja
jo
mov
xor
xchg
cmp
jp
cmp
and
cld
shl
sub
bound
mov
fldcw
pop
mov
lahf
cmp
jb
shrl
inc
cmp
sbb
pop
or
hlt
notl
pop
xorl
jge
out
icebp
adc
insl
mov
inc
movsl
push
aas
shl
cmpxchg
rol
pop
push
cmpl
mov
mov
lcall
add
ljmp
jle
xchg
loope
movb
add
and
adc
and
das
dec
jecxz
pop
outsl
cltd
in
sub
imul
xchg
je
add
sub
and
stc
jecxz
ja
jl
cli
xchg
mov
and
cltd
mov
push
cmp
or
addb
push
inc
xchg
dec
sbb
sahf
enter
test
adc
call
mov
daa
xchg
dec
mov
in
mov
mov
sbb
gs
pusha
das
hlt
mov
mov
mov
lcall
cmp
cltd
xchg
hlt
mov
mov
or
shrb
dec
stc
push
mov
lcall
daa
sub
call
jecxz
ret
jp
add
sub
into
movsl
aam
lods
cmp
sbb
pop
fistl
scas
adc
ja
cmc
cmp
adc
dec
push
jnp
push
jo
repz
adc
rolb
pop
mov
pop
and
inc
jecxz
pop
dec
hlt
test
or
jnp
ds
loope
pop
sbb
lds
scas
addr16
push
stos
push
mov
inc
fstps
adc
iret
pop
push
inc
cli
aam
cmpsl
iret
and
or
out
shl
mov
push
and
stos
cmp
lds
mov
cmp
idivb
arpl
mov
into
fisubl
or
out
push
mov
enter
into
dec
jno
sub
out
jp
lea
xor
test
adcl
scas
lods
pop
imul
push
xchg
jl
addr16
js
sahf
push
jle
gs
arpl
mov
cmpsl
cld
or
add
sub
lcall
adc
push
arpl
sbb
fldt
mov
stos
push
ret
and
push
jp
frstor
mov
test
das
cmp
sbb
push
xchg
andl
and
inc
cmp
shll
xor
mov
popf
in
enter
adc
sbb
ljmp
ror
pop
mov
xchg
lcall
xor
xor
mov
pop
xchg
pushl
cmp
sahf
sbb
loope
mov
pop
movsl
loop
lods
daa
mov
mov
mov
mov
mov
mov
repz
push
pushf
push
les
clc
shrl
popf
lods
inc
pop
test
mov
insb
ja
fs
jl
xor
mov
call
mov
imull
mov
pusha
jle
cmp
or
fisttpl
lods
pop
jae
push
mov
cmpsb
rorb
and
ret
popf
push
push
shlb
js
fwait
out
inc
fsubp
or
push
mov
mov
call
pop
pop
xchg
fsts
or
add
in
arpl
xor
in
dec
sub
add
dec
cmp
sbb
sub
cmpl
lods
add
add
in
fwait
or
mov
mov
inc
mov
adcl
test
and
popa
add
push
mov
dec
fmuls
stc
cmpb
fdivr
sbb
cmc
push
mov
sar
sbb
add
out
cmp
sbb
pushf
fldt
and
and
sbb
jecxz
mov
shlb
sbb
roll
and
pusha
and
dec
inc
sbb
xchg
adcb
xlat
rcrb
or
stc
cltd
push
jmp
push
sbb
and
hlt
ja
mov
mov
loope
dec
lcall
fs
pop
adc
or
test
mov
add
cmp
add
std
repnz
mov
mov
mov
push
push
push
pop
and
lcall
sahf
pusha
mov
push
out
and
incl
push
mov
clc
enter
lods
ja
jg
lcall
inc
fstps
subl
gs
test
pop
inc
mov
inc
or
push
and
loop
jp
sbb
or
push
outsl
lea
sahf
and
repnz
mov
loop
xor
loopne
iret
jae
xlat
mov
xchg
inc
fcmove
and
jecxz
bound
xchg
lahf
fwait
or
jp
dec
dec
xchg
jbe
inc
cli
out
xchg
or
xchg
ror
mov
adc
pop
sbb
xchg
movsl
push
icebp
xor
and
dec
mov
fs
inc
addr16
pop
pop
pushf
stc
or
sbb
mov
loope
push
icebp
cmp
mov
pop
inc
push
dec
bound
pop
addr16
and
ljmp
fadd
in
mov
add
ljmp
jge
cmc
arpl
in
loope
push
sti
adc
cli
incb
lock
stos
repz
jle
cmc
pop
lret
mov
pop
call
enter
mov
out
pop
fiadds
jecxz
mov
dec
cli
sbbb
fdivl
scas
mov
mov
test
inc
loope
xor
mov
sbb
mov
push
jge
jp
insb
xchg
add
mov
call
insb
sbb
enter
pop
fmuls
clc
push
mov
cmc
pusha
inc
cltd
sub
and
and
add
xlat
sahf
pusha
push
fldl
jns
adc
pusha
fbld
pop
addr16
out
testl
cwtl
dec
insl
sbb
xor
pop
scas
mov
popa
mov
mov
call
fwait
dec
mov
sti
out
sbb
enter
lahf
dec
and
frstor
cmp
mov
mov
sub
insl
std
sbb
and
stos
fcmovu
mov
push
pop
pop
loopne
sbb
stos
and
fistps
stos
mov
movsl
cmp
arpl
pushf
call
dec
jp
or
hlt
popa
sbb
addr16
sub
mov
push
dec
cld
ficoml
push
arpl
out
out
addr16
push
jnp
scas
sub
sbb
push
into
sbb
inc
aaa
adc
pop
xchg
add
xchg
enter
or
daa
inc
ret
inc
add
insb
icebp
dec
sbbl
cmc
adc
xor
push
and
ss
adc
or
xor
jmp
push
mov
bound
sbb
jp
xchg
xchg
movsl
or
dec
mov
push
in
sbb
pop
add
ret
xorl
xor
lods
mov
mov
gs
push
bound
cld
inc
jae
add
xchg
inc
mov
add
add
or
cmp
mov
es
and
add
add
mov
adc
in
sahf
flds
push
loopne
inc
bound
outsl
popl
clc
mov
pop
icebp
lcall
xchg
test
add
fisttpll
cmp
movsl
lods
les
shlb
pop
cmp
mov
xchg
and
cmp
cmc
inc
mov
pushw
push
out
pop
loop
jge
add
daa
not
cmp
popa
mov
jb
sarb
js
fadds
xchg
movl
es
ss
fcompl
outsl
jmp
aad
xor
cmp
sbb
xchg
cmpsb
inc
xchg
lock
mov
cltd
in
rcll
out
sahf
enter
xor
stc
dec
mov
ret
faddl
je
fisubs
jp
test
dec
out
test
movsb
out
dec
push
fiaddl
or
pop
inc
mov
jo
sub
lret
cmp
or
add
push
pusha
pop
cmp
stc
sbb
pop
xchg
arpl
mov
mov
loopne
xor
aam
daa
lcall
imul
xchg
test
ficompl
mov
cwtl
mov
and
es
addr16
pusha
arpl
sbb
repnz
mov
jo
mov
movsl
nop
rolb
setl
add
and
mov
mov
mov
jnp
ret
adc
enter
jecxz
or
es
loop
adc
cmp
dec
leave
push
xor
dec
rorl
lcall
and
aad
adc
xchg
xchg
jns
cmpl
add
cli
in
jg
addr16
push
pop
dec
xchg
mov
sub
inc
outsl
mov
sub
test
insb
dec
xchg
gs
jb
push
addr16
jae
call
or
mov
mov
dec
sub
imul
ds
sub
out
mov
adc
out
cvtps2pd
jmp
mulb
cmpb
popa
test
test
push
decl
icebp
and
and
and
mov
lret
arpl
fistpll
fisttpl
mov
in
mov
mov
sti
gs
aam
movsb
xchg
jecxz
std
pusha
xchg
ja
popa
lods
add
gs
aad
and
and
clc
jne
jno
bound
pop
pop
xchg
dec
pop
call
sbb
jno
push
sub
xchg
aas
jg
dec
xchg
leave
hlt
cmp
and
jp
and
insb
sarl
rcrl
loope
mov
arpl
mov
xlat
and
mov
mov
lods
cltd
cmp
rcr
sarl
outsl
rcll
push
out
pop
pop
stos
addr16
jp
xchg
mov
add
pop
sub
inc
sti
inc
ss
subl
loop
sarb
push
or
inc
hlt
jge
fwait
loopne
or
cld
loopne
into
sub
and
sbb
insl
cmp
aaa
inc
jecxz
scas
hlt
nop
xchg
pushf
xchg
or
dec
jmp
cmp
mov
int
aam
sarl
fimull
out
mov
sbb
xor
cs
fs
fwait
test
push
jg
sahf
es
negb
and
je
sbb
or
addr16
jnp
mov
les
std
in
pop
sub
hlt
mov
fcomi
stos
jp
sbb
and
addr16
dec
xor
popf
or
adc
push
loope
push
jb
leave
jge
inc
cmp
adc
repz
push
adcb
cmpsl
xchg
loope
testb
mov
ja
sbb
or
cmp
inc
jg
loop
loopne
lods
xchg
push
jp
mov
mov
jle,pn
and
mov
sbb
and
imul
mov
push
mov
cli
xor
repnz
jmp
jg
dec
sahf
ja
jb
sub
xor
sti
imulb
arpl
jns
push
popf
fcomip
cwtl
adc
std
push
mov
lock
inc
jge
cld
or
icebp
popa
xchg
cltd
and
jae
jb
mov
and
sub
push
adc
mov
jae
jmp
addb
jb
dec
lahf
sbb
cmc
loope
leave
dec
sbb
add
dec
jno
mov
nop
icebp
sbb
sbb
add
dec
and
js
inc
add
and
cmp
pop
pop
lcall
or
je
ficompl
cmp
push
or
shrl
inc
mov
orl
rcrb
mov
add
rol
mov
std
and
arpl
adc
aad
mov
jecxz
mov
mov
sbbl
xchg
fsub
mov
mov
scas
add
cltd
gs
jle
jno
scas
mov
aaa
add
das
pop
xor
dec
sub
or
in
xchg
cwtl
pushf
push
ljmp
push
pop
push
cli
aas
pop
xchg
fistpl
push
pusha
ret
lahf
or
ja
ret
div
cld
inc
xchg
cmp
add
xchg
mov
push
js
mov
push
cltd
adc
xor
xchg
in
pop
xchg
inc
in
jb
mov
lods
mov
lds
andb
add
loope
sbb
fbstp
scas
adc
cmp
adc
jecxz
push
test
test
lock
add
mov
js
lret
add
je
stos
xchg
add
jo
in
cmp
pop
insl
aaa
inc
mov
dec
jbe
fisubs
int
mov
dec
xchg
mov
test
jo
xchg
bound
mov
fs
mov
cmp
xchg
and
jb
xchg
subl
lods
inc
int3
mov
decb
xor
push
add
mov
mov
cmp
repz
sbb
mov
pop
imul
das
mov
in
dec
stos
or
jmp
sub
sbb
add
inc
sbb
and
sete
mov
jle
add
data16
fnstenv
imul
clc
sbb
and
fcomps
fninit
push
add
add
push
rcrl
mull
xchg
loopne
mov
and
lcall
fsubl
xchg
mov
or
xchg
addl
cpuid
test
or
jo
pop
cmc
pop
mov
mov
lods
into
pop
xor
jge
pop
xchg
cli
sub
test
jg
jge
inc
pop
test
and
andb
sub
cmpsb
call
xchg
inc
cmp
sbb
jp
cmp
ret
cmc
fcomps
jg
cmp
outsb
lcall
test
rcr
add
and
sub
xor
iret
or
test
xlat
pop
addr16
outsl
incl
pusha
xor
mov
xor
mov
dec
data16
je
mov
mov
xchg
and
mov
jp
lcall
out
scas
mov
insl
push
shlb
into
cmpsl
leave
mov
insl
fwait
and
mov
es
mov
sbb
test
adcb
cmc
inc
cmpsb
or
xchg
sbb
rolb
push
sub
cmp
sbbb
enter
xchg
xchg
or
insl
aam
js
cmp
loop
ds
mov
and
push
fisttpl
push
out
mov
hlt
xchg
pop
arpl
jle
mov
add
push
cmp
mov
mov
shll
and
gs
jae
dec
in
mov
je
mov
outsl
stos
and
mov
or
xchg
pop
jo
xor
subl
pop
dec
cwtl
aad
jmp
stc
pop
and
mov
insl
pop
scas
sbb
xchg
jno
mov
sldt
ja
add
ja
jg
push
or
adc
xchg
mov
push
and
inc
sbb
xchg
inc
mov
inc
stos
fdivrs
xor
jo
popl
pop
repz
jp
cmp
loopne
sub
jo
xchg
loope
lea
inc
adc
lahf
in
sbb
sub
xor
outsl
adc
lret
mov
lahf
aaa
adc
shl
dec
dec
js
cmp
sarl
sub
lcall
iret
insb
gs
aad
mov
mov
ljmp
cmp
jge
mov
cwtl
pop
hlt
out
adc
jecxz
sbb
subb
addb
daa
pop
and
popl
stc
pop
movsl
ffree
lcall
testw
mov
aad
loopnew
and
and
sbb
mov
and
bound
sti
int3
aas
jae
adc
or
insb
inc
pop
jno
imul
dec
fiadds
outsl
mov
fistps
mull
repnz
pop
xor
xor
ret
push
and
ja
lods
int
sbb
sbb
push
lds
js
ja
jmp
pop
pushf
std
dec
push
adc
mov
sub
or
sub
cs
loop
inc
in
jae
adc
fisubrs
mov
push
loop
inc
int
aas
fwait
pop
fistpll
xchg
mov
and
pop
nop
xor
jbe
add
cld
add
xchg
pop
mov
pop
lods
sbb
pop
lock
pop
push
addr16
mov
inc
xchg
jmp
pop
mov
shl
scas
enter
addl
rcll
scas
adc
xchg
stc
push
std
inc
imul
xor
dec
jo
ficompl
inc
push
mov
lcall
lcall
lcall
lcall
jmp
addr16
lcall
ficompl
test
or
sbb
pushf
sbb
lods
sub
mov
xchg
inc
xchg
push
lods
std
dec
cld
adc
scas
cmpsl
or
inc
push
popa
addr16
sahf
or
loop
pop
mov
std
mov
dec
pop
xchg
lahf
cwtl
outsl
inc
mov
test
testl
lea
nop
jo
and
and
aaa
test
jp
jbe
or
jl
jnp
pop
add
cs
jmp
fiadds
out
sub
lcall
sub
out
hlt
sbb
pop
andb
cmc
add
mov
test
out
ja
imul
add
adc
jmp
xchg
and
mov
in
sti
into
fs
imul
shl
sahf
inc
push
add
jne
inc
repnz
aas
adc
out
ja
mov
aad
fmull
shlb
test
cmp
jmp
cmp
addr16
nop
cmp
dec
push
rcll
icebp
push
push
mov
mov
fdivl
lods
add
pusha
loopew
mov
pop
mov
roll
push
xchg
repnz
dec
jo
fdivrs
sbb
daa
cmc
and
pop
xor
adcl
mov
inc
test
test
inc
icebp
cmpsl
push
pop
popa
and
jnp
out
dec
or
push
fidivrl
jg
xchg
mov
mov
movsb
outsl
inc
nop
cld
or
rcl
jno
fmulp
and
mov
test
inc
loope
orl
jp
pushf
mov
xchg
mov
mov
std
sbb
in
xor
push
push
inc
popf
les
arpl
fimull
mov
push
in
jp
andl
pop
test
pop
pop
push
cltd
mov
mov
xorb
test
fisubs
mov
into
mov
shr
xchg
sahf
cmpsb
fmull
pop
mov
jg
xchg
xor
or
icebp
int3
cmpb
mov
jp
pop
inc
mov
loop
jbe
fidivs
push
and
lahf
cwtl
cltd
fmull
push
and
sbb
int3
push
adc
mov
pushf
daa
in
mov
out
fisubs
xor
mov
mov
xlat
add
adc
aam
inc
scas
out
push
cld
sbb
mov
enter
cmp
sub
or
inc
pop
repnz
mov
test
pop
fcomps
inc
aas
cld
daa
dec
stos
jnp
popa
xchg
jne
dec
add
into
testl
and
lds
mov
and
jo
cmp
cmpsl
jne
ljmp
ss
and
push
xchg
sbb
push
fcmovbe
add
call
mov
aaa
fxch
jle
xchg
lds
mov
xchg
ds
addr16
add
mov
inc
xchg
data16
dec
fwait
rorb
add
cmpsb
pop
cmp
ja
cmp
xchg
xchg
rcr
hlt
pusha
xchg
lea
lahf
data16
fsub
mov
pop
xchg
cmp
movsb
mov
cmp
jb
cmpsl
adc
cmpsl
add
shlb
push
xchg
sahf
movl
sbb
xor
fs
sub
add
test
je
mov
lds
inc
push
hlt
and
repz
adc
dec
xor
inc
jae
jo
push
test
imul
testl
arpl
xchg
test
add
and
inc
pusha
daa
push
lret
js
ja
inc
xlat
lahf
andb
lea
decl
roll
inc
imul
subb
lea
mov
jns
fiadds
add
roll
sub
rolb
insb
pop
dec
out
ljmp
int3
sbb
daa
daa
aam
add
add
xchg
cmp
test
or
mov
push
adc
aaa
loop
mov
je
xlat
cltd
mov
stos
xchg
pop
pusha
or
fwait
mov
jp
imul
fsubrl
iret
ret
je
aas
in
adc
push
cmp
enter
in
dec
cmp
pop
mov
mov
mov
insb
jns
push
out
adc
add
lahf
sub
loop
rcrl
and
mov
stos
sarl
fsubrl
into
icebp
mov
pop
sbb
aam
push
xlat
inc
iret
addr16
mov
cs
popf
cmc
or
or
inc
lods
mov
xchg
inc
test
and
pop
iret
adc
xchg
fisubs
out
ljmp
sbb
push
mov
jno
les
and
push
mov
cmp
aaa
pop
fs
daa
sbb
dec
je
les
fadds
push
fdivrl
out
inc
into
loop
jno
xchg
cmpsl
mov
sub
sbbl
in
push
push
frstor
add
jae
inc
orb
popa
dec
jp
nop
subb
aad
aam
xlat
fstps
or
adc
push
or
cmpsb
inc
aas
add
push
addb
push
ret
or
add
js
shll
mov
or
inc
mov
test
stos
or
lds
add
xchg
cwtl
shl
dec
fcomp
rcrb
daa
push
das
cmp
jb
sub
dec
repnz
mov
jg
push
xorl
or
add
inc
push
lret
push
xchg
loop
cwtl
xchg
imull
sub
jle
int3
pop
fmuls
stos
xchg
push
push
in
adc
mov
jl
ret
inc
mov
adc
and
pop
into
and
inc
or
mov
mov
movsb
stos
movsl
jb
lds
push
and
pop
pop
push
fs
mov
jo
xchg
das
out
adc
lret
inc
fwait
mov
andl
pop
mov
mov
jno
jp
ret
pusha
dec
xchg
outsb
inc
xchg
loop
xor
lock
stc
mov
sbb
insb
loopne
gs
test
mov
mov
ljmp
arpl
je
andb
inc
in
js
sub
or
jp
fstps
fwait
mov
stos
leave
popa
push
test
pop
mov
sbb
lahf
call
repnz
and
les
gs
scas
dec
loope
scas
mov
and
xorl
push
jo
mov
mov
jno
pop
repz
xor
mov
mov
push
mov
addb
js
jg
insl
push
ds
push
in
add
scas
jecxz
xchg
subb
jle
xchg
out
mov
pusha
scas
mov
sub
pusha
mov
push
xchg
xor
push
jns
jb
push
mov
mov
mov
adc
cmp
mov
adc
repnz
lea
pop
loopne
ret
cmpsl
jecxz
jns
int
mov
or
lock
aaa
stc
pop
cmpsl
fwait
shlb
notl
js
in
out
jno
add
sub
inc
sub
out
enter
cmp
add
cmp
repnz
fdivs
cld
lock
fldcw
stc
dec
and
sbb
or
sbb
mov
stos
adc
ja
and
je
sbb
push
jp
insb
ficoml
adcb
mov
bnd
mov
cmp
int3
mov
mov
aas
or
xor
ja
pop
andl
jecxz
in
inc
pop
sbb
inc
push
imul
adc
outsl
scas
push
outsb
mov
lahf
sbb
movsl
scas
push
and
popf
xchg
scas
cwtl
ljmp
stos
sub
sub
lret
lds
out
das
iret
push
rorb
ja
cmpsl
test
test
leave
cmc
push
lea
push
test
xor
xor
lock
push
aas
push
mov
fsubs
dec
ljmp
aas
pop
scas
fwait
stc
iret
mull
and
mov
daa
lret
sbb
mov
sahf
cmp
and
js
mov
pop
fwait
lock
ss
push
cmp
nop
sahf
pusha
fildl
fmuls
ret
repnz
xor
clc
out
xchg
mov
loopne
cltd
std
mov
sub
loop
popf
ds
mov
push
mov
inc
mov
xchg
xchg
fwait
shl
mov
shlb
nop
xchg
test
vunpckhps
mov
loopne
push
loope
add
jp
sbbl
cmp
mov
pop
add
clc
sbb
mov
int3
bound
stos
push
mov
cli
xchg
fs
fwait
pop
sbb
add
rorl
call
jge
mov
dec
cmp
das
out
fstpt
cld
mov
jo
aaa
lcall
push
inc
popf
pop
dec
sbb
out
jns
or
jmp
icebp
jecxz
jns
movsb
test
orb
mov
fsub
and
mov
insl
out
mov
pop
out
enter
ret
jae
cwtl
adc
cli
mov
test
xchg
out
repnz
sub
sub
rcrl
mov
push
dec
mov
iret
sub
cmp
push
and
push
push
cmp
push
test
mov
mov
in
fnsave
push
mov
sti
in
xor
ja
imul
test
hlt
or
ficompl
pusha
cmpsl
add
rorl
nop
pop
cmc
and
sub
fadd
adcb
mov
mov
mov
mov
cmp
jmp
aaa
or
mov
xorl
daa
pop
lea
inc
xor
or
cmpsb
mov
fwait
jle
imul
in
inc
shrb
je
pop
mov
cmc
out
rorb
cs
inc
push
out
sub
xchg
mov
gs
sub
fistpll
push
dec
adc
push
pop
cmpsb
jbe
je
sbb
add
and
jo
mov
popf
pushf
clc
sbb
cmc
es
pop
jge
fbstp
sti
fiaddl
mov
into
and
popf
loopne
dec
push
dec
addr16
adc
test
inc
sbb
mov
je
ret
call
shlb
repnz
pop
cmp
popl
cld
push
sbb
cmp
int3
popa
ljmp
dec
mov
cmpsb
dec
imul
sbb
ja
adc
fsubrp
sbbb
xchg
loope
aas
and
push
bound
nop
xor
cmpsl
shlb
push
ljmp
dec
and
cmc
aad
fwait
xor
cmp
aaa
or
xchg
popf
fdiv
dec
dec
inc
jp
mov
call
mov
cmpsb
xchg
or
imul
mov
das
ss
sbb
adc
ja
dec
mov
cld
pop
cmp
mov
mov
adc
xor
popa
xchg
js
pop
mov
cltd
add
aas
lock
xchg
es
pop
roll
lods
mov
mov
mov
daa
test
sbb
inc
test
stos
and
cmp
scas
pop
call
and
sahf
testl
pusha
mov
lahf
xchg
out
mov
lcall
fdiv
into
cwtl
xchg
pop
ja
stc
jge
add
sbb
addb
fdivrs
addb
or
loopne
push
popa
gs
hlt
adc
aas
mov
jle
cmp
call
aam
mov
fisubl
push
in
cmp
inc
outsl
jbe
xchg
test
sti
loopne
push
fnstsw
cmc
out
insl
dec
mov
sub
inc
outsl
mov
inc
mov
addr16
ret
sbb
imul
pop
xor
push
sbb
enter
pop
xchg
inc
push
out
cmc
mov
sub
repz
ffree
jecxz
ds
sbb
icebp
push
push
stc
int3
mov
mov
sub
and
je
popa
add
ret
adc
nop
and
out
out
scas
movl
cmp
fldt
add
adc
sbbl
les
fs
popf
adc
shl
testl
add
mov
bound
adc
je
push
in
jp
shrl
or
adc
icebp
fdivl
jg
jae
mov
mov
test
and
rcl
inc
mov
pop
cmp
xchg
ficompl
mov
jmp
ljmp
rcll
lods
jecxz
ss
stc
ret
cmp
lods
movsl
mov
add
pop
and
and
int3
jb
cmpl
inc
gs
in
fadds
roll
xchg
cmp
xor
sbb
cmc
xchg
and
sub
das
cmp
xor
xlat
hlt
or
adc
and
test
mov
pop
lods
and
mov
xchg
adc
filds
jb
popa
and
add
ja
imul
jns
shlb
daa
out
fstp
add
mov
or
lods
xor
inc
mov
les
ret
test
imul
movl
into
je
ss
mov
pop
testb
je
mov
loopne
xlat
pop
push
sub
std
xor
push
lods
fs
js
mov
pop
push
in
jecxz
xchg
test
mov
inc
inc
imul
out
dec
pop
dec
sahf
cmp
aaa
adc
int3
out
pop
mov
sbb
out
js
and
mov
sbb
in
fwait
in
dec
ja
dec
mov
out
xorl
xchg
sbb
movsb
push
dec
lcall
fwait
cwtl
sub
cwtl
sub
pop
inc
icebp
xchg
pop
test
test
pop
sbb
add
stos
iret
mov
int3
js
adc
pop
pop
xor
mov
jp
ret
pop
lock
mov
lods
lcall
inc
mov
fs
dec
pop
cld
jbe
inc
sbb
movsb
push
daa
ss
or
or
stos
daa
sbb
xchg
andb
sbb
call
or
pop
das
adc
ja
cmc
insw
ja
push
push
loop
scas
cmp
imul
clc
ss
dec
mov
or
enter
or
push
cltd
bound
pop
fiaddl
jle
aas
shll
adcb
jl
sub
and
add
jbe
mov
aaa
test
inc
adc
xor
fsubs
imul
je
inc
sub
sub
ja
outsb
mov
sbb
lods
pop
pop
dec
mov
push
cmp
adc
fcomps
enter
mov
jg
inc
mov
cmpsl
leave
fsts
adc
je
data16
or
xor
sub
iret
xlat
and
fdivl
xor
repz
add
mov
loope
pop
add
cs
in
adc
pop
pop
shll
arpl
inc
cmp
sbb
mov
inc
hlt
int3
js
filds
scas
pop
popf
inc
aaa
iret
cmp
mov
xchg
adc
adc
shrl
movsl
movsb
push
xchg
aas
mov
mov
mov
or
dec
pop
subb
scas
aas
xchg
scas
pop
dec
add
subb
fcompl
xor
sbb
rcrl
fwait
mov
pop
or
jp
adc
aad
shrl
or
xlat
cmp
sub
inc
sub
xchg
xor
ficoml
or
push
aaa
je
pop
test
cmp
inc
rclb
adc
rorb
je
sbb
xor
pusha
or
mov
mov
cmp
cld
mov
push
inc
inc
je
call
in
jne
andb
sub
daa
stos
inc
jp
inc
pop
aas
popf
shrb
xlat
inc
dec
pop
ljmp
ja
jne
add
push
mov
movsb
xchg
add
sub
jmp
add
inc
mov
pushf
rcll
add
bound
xchg
aaa
push
xchg
mov
icebp
lcall
pop
cmpsb
arpl
fwait
loope
adcl
mov
pop
mov
jl
mov
mov
fwait
js
sbb
mov
inc
and
push
push
fidivs
imul
inc
aas
dec
inc
jmp
push
inc
and
cmp
sbb
push
aaa
js
rcll
cmpsl
out
in
loope
cmpsl
mov
push
sub
pop
clc
incl
and
dec
push
mov
out
add
mov
in
add
ficoms
adc
fisubs
mov
xor
push
add
fimuls
in
dec
in
loope
test
sub
inc
cmp
or
adc
inc
test
jle
jmp
pop
mov
aam
arpl
pop
orb
jnp
scas
movsb
adc
in
push
mov
ja
test
dec
fs
add
cwtl
mov
pop
dec
push
pop
scas
lcall
sbb
pop
add
push
movsb
pop
fdivl
sti
add
sbb
dec
fdivrs
sbb
mov
xchg
sti
xchg
imul
insl
or
xchg
stc
in
push
js
or
testl
fnstenv
push
push
jns
fs
cltd
jp
mov
int3
jmp
int3
xchg
sbb
mov
cmp
aad
and
dec
mov
test
push
push
xchg
and
jae
mov
mov
outsl
call
ja
or
incl
aas
rorb
fsts
xchg
filds
gs
sbb
mov
loop
push
adc
xchg
add
sub
add
scas
inc
sbb
cld
adcl
xor
and
into
test
aas
sbb
jb
cmpsb
jno
lcall
jb
lcall
ja
push
pusha
push
andl
xchg
sub
mov
ss
xor
inc
adc
lods
cltd
cmp
shll
xchg
or
jle
loope
jp
test
xor
sbbl
cmp
jo
out
rcll
sbb
repz
lcall
xlat
mov
xor
pop
xchg
cs
adc
imul
xlat
fistps
insb
lea
mov
testb
inc
pop
and
adc
pop
dec
inc
dec
mov
mov
inc
into
andl
inc
or
shl
inc
add
dec
xchg
cmp
add
arpl
xchg
sahf
mov
jp
ljmp
pop
sub
mov
mov
push
adc
cwtl
xchg
cmp
roll
cmp
inc
mov
push
mov
xor
rclb
pop
gs
xchg
mov
xchg
dec
jge
enter
lea
jb
imul
andl
jecxz
cmpsl
xor
aaa
shrb
sbb
dec
inc
mov
call
xor
adc
push
testl
cmpl
jnp
dec
sbb
sub
dec
and
mov
loopne
xchg
sbb
xchg
add
lahf
adc
inc
mov
es
mov
lea
lea
aad
xchg
sub
push
xor
lahf
and
cmpsl
inc
mov
andb
inc
xor
fstpt
dec
cmp
imul
lcall
mov
sbb
pop
clc
pop
inc
outsl
and
fcompl
pop
ja
iret
pop
jge
les
or
push
imul
inc
fs
shlb
lcall
and
or
cmp
xor
aas
mov
aaa
out
mov
lds
add
pop
mov
rolb
les
popa
icebp
test
mov
fwait
sarb
dec
inc
filds
or
les
pop
and
push
lods
dec
sub
pop
xchg
mov
lcall
out
pop
shlb
add
inc
stc
xchg
imul
pop
xchg
sbbl
lcall
sbb
xor
sbb
andb
aam
sub
adc
sarb
orl
pop
rcl
xchg
xlat
sbb
roll
add
cltd
sbb
sub
inc
adc
sbb
sbb
xchg
mov
movsb
fs
jb
cs
mov
and
sbb
outsb
lods
hlt
inc
fs
jb
inc
pop
popa
xchg
and
ja
push
jns
sub
pop
fcoml
rcrl
push
lods
rcrb
pushf
and
rorb
xlat
fxch
imul
in
push
mov
js
jno
ja
sub
pop
sbb
push
sahf
xchg
sub
shrl
add
rorb
jns
cmp
or
adc
ja
and
push
mov
ret
push
mov
je
mov
cmpl
pusha
and
lahf
lcall
mov
cmpl
test
ja
arpl
fistps
loope
xchg
lahf
inc
mov
mov
mov
add
inc
fs
scas
mov
inc
sub
bound
fistpl
stos
and
or
jl
cltd
mov
decl
and
subl
pop
es
addr16
dec
bound
jl
push
int
dec
add
fildll
and
jb
andb
inc
adc
xchg
in
sar
mov
sub
mov
xchg
lock
test
cs
xor
testl
xchg
adc
in
jmp
and
cltd
jb
divl
push
add
xchg
test
mov
jecxz
and
lahf
mov
xchg
loopne
sub
inc
mov
lcall
popa
fisttps
fwait
dec
adc
push
cld
les
sbb
inc
adc
push
rolb
push
cwtl
loopne
adc
in
pop
adc
mov
inc
adc
adc
ja
mov
sbb
jb
mov
xchg
or
scas
mov
out
mov
or
movsl
or
aas
outsl
xchg
pop
inc
addr16
xlat
xchg
and
xor
lods
add
lahf
lods
xchg
movsb
cmpsb
bound
inc
and
and
rolb
adc
mov
lcall
xchg
popl
pop
xchg
dec
inc
test
sbb
mov
xchg
inc
mov
jo
adc
mov
dec
mov
or
lret
call
iret
out
mov
inc
bound
popf
dec
mov
sub
dec
dec
push
xchg
test
test
out
pushl
clc
pop
ja
leave
movsl
jno
adc
or
pop
ss
push
lcall
add
inc
and
sub
test
fwait
push
hlt
add
orl
mov
fpatan
jo
dec
jp
test
aad
mov
faddl
lcall
jae
xor
pop
xchg
loop
mov
mov
aam
nop
or
or
adc
mov
xchg
xchg
xchg
inc
mov
aam
push
jl
sbb
jl
xchg
push
mov
aaa
insb
mov
add
scas
and
cmp
sub
xor
jecxz
je
push
cmp
push
cmp
or
pop
mov
pop
aad
fcmovne
mov
fs
mov
push
rclb
jecxz
fs
sub
int
jge
fwait
inc
loop
test
pop
lcall
pusha
popf
xchg
rolb
incb
xchg
rol
mov
mov
mov
fs
imul
mov
mov
inc
jl
out
fldenv
xor
test
xor
js
and
sub
sub
push
xchg
inc
pop
pop
xchg
vmovlpd
aam
shl
loop
jb
cld
ffree
addb
out
mov
cltd
cmpl
mov
xchg
add
in
xchg
shll
mov
aaa
mov
inc
fwait
mov
cmpsl
adc
test
mov
inc
inc
jle
mov
pusha
pushf
pusha
and
xchg
ja
fwait
push
call
or
int
lret
mov
push
sbb
adcb
pop
pusha
jb
cmpsl
cmc
pop
push
push
mov
out
pusha
jb
bound
arpl
pop
pop
and
popa
test
jge
and
ljmp
mov
cmp
mov
and
xchg
sbb
adc
pop
test
test
add
movsl
jne
mov
sub
fisubl
cmpsl
popf
jo
sbb
xlat
jno
add
adc
es
sahf
xorb
sbb
vmovddup
rcr
pop
adc
jl
lcall
pop
gs
or
xchg
out
cmp
mov
sbb
subb
mov
in
out
xor
out
push
add
fs
inc
mov
cmp
cli
dec
dec
bound
ss
test
scas
aad
insl
in
pop
ret
daa
xor
xchg
xchg
lock
lea
sub
add
adc
or
add
clc
pop
mov
adc
push
pop
mov
in
jns
jns
insl
pop
shrl
fwait
add
lods
sbb
scas
int3
and
xor
aam
xor
fiaddl
jge
jb
add
test
mov
mov
jnp
jae
scas
adc
mov
pop
add
push
or
mov
adc
stc
repnz
nop
loope
mov
test
fsubr
cmp
jnp
popf
out
rcrb
dec
mov
clc
and
leave
adc
mov
inc
xchg
dec
out
and
mov
mov
bound
movaps
push
xchg
mov
adc
js
mov
and
fsubrl
push
mov
cmpsb
jns
pop
mov
adc
fcmove
dec
jg
insb
andl
addl
push
xchg
bound
inc
push
cmpb
mov
sub
flds
mov
sub
sub
repz
shlb
push
bound
imul
fisubl
scas
cmp
loop
jg
jge
sahf
mov
stc
dec
daa
test
cwtl
mov
xchg
mov
mov
xchg
or
mov
das
mov
lret
fs
lahf
andnps
fisubs
sahf
mov
mov
and
add
inc
loopne
xor
pop
jg
mov
divb
push
adc
and
cmp
jmp
pop
sub
subb
inc
lods
adc
das
pop
jmp
fs
test
das
push
fwait
xchg
fs
xchg
inc
push
xor
cmpb
lret
inc
mov
popf
lcall
pop
pop
aas
add
ja
xor
pop
pop
jge
jl
add
dec
loop
mov
or
xchg
mov
es
xchg
out
mov
dec
mov
add
aam
in
xor
inc
mov
jbe
jmp
call
ficompl
fs
push
ficompl
dec
movsl
iret
dec
cmc
jecxz
lods
mov
xchg
test
mov
rcrb
push
pop
mov
and
ret
popa
jb
orl
sahf
mov
xor
mov
test
lock
hlt
pushf
ljmp
xchg
clc
andb
fwait
daa
pop
pop
jns
jle
push
pop
dec
mov
mov
mov
jae
add
xor
js
or
adc
lds
inc
fiadds
daa
out
hlt
dec
shl
and
sub
xor
push
add
jno
mov
das
subb
mov
data16
sbbb
leave
jns
aas
xchg
xchg
push
in
cmp
scas
iret
dec
xor
jo
pop
ja
cmpsb
xchg
inc
mov
adc
ret
mov
sbbb
enter
mov
xchg
or
jp
sar
cltd
popf
or
jne
xchg
repnz
jg
cmp
loopne
mov
dec
ja
dec
ljmp
mov
aaa
fadds
xchg
mov
cmp
xchg
mov
add
and
push
orl
ja
shrl
or
dec
cmp
lahf
and
inc
inc
leave
repz
xchg
pop
mov
aas
mov
nopl
dec
inc
lcall
bound
pop
xchg
xor
adc
xor
or
and
cmp
dec
push
push
fs
xchg
mov
adc
mov
jbe
add
sahf
and
add
gs
mov
pop
inc
mov
sub
xorl
int3
rcrl
std
or
inc
fwait
out
fnstcw
jecxz
inc
ja
inc
push
push
fistpll
arpl
insb
and
inc
daa
inc
lcall
or
add
jb
add
pusha
pop
test
inc
mov
push
repz
insb
dec
cltd
push
jmp
dec
ret
hlt
add
outsb
add
dec
pop
sbb
out
jae
pop
fistpll
fwait
inc
push
fmuls
mov
rcrb
loope
or
outsl
jmp
adc
mov
jecxz
movsl
aad
cmp
ret
icebp
rcr
call
call
and
ret
adc
sarl
mov
lods
bound
sbb
push
mov
dec
aaa
cld
mov
xchg
lcall
sahf
dec
sbbb
flds
rcrb
pushf
fcomi
out
add
mov
fisubl
test
cs
jne
mov
or
pusha
mov
xor
and
addl
jmp
jge
push
test
inc
or
into
daa
cwtl
xor
mov
add
gs
xchg
xor
ret
cltd
add
outsl
aam
mov
and
sbb
addr16
mov
bound
lcall
cli
push
xlat
imul
pop
les
mov
pop
data16
cmc
adcb
jecxz
xlat
push
pusha
and
daa
mov
xlat
pusha
add
dec
xchg
adcl
imul
outsl
in
jnp
sbb
push
sub
decl
testl
ja
or
stos
jb
xchg
lea
push
fldl
inc
fisttps
adc
dec
xchg
add
inc
fisttpl
mov
notl
add
loop
mov
sbb
fisubs
add
xchg
xchg
push
dec
xor
add
jl
scas
push
and
lods
push
mov
shrl
repz
hlt
sbbb
push
add
mov
insl
sbb
in
push
aas
sbbl
add
test
or
add
xor
sbb
push
in
pop
push
js
fsubs
push
ret
int3
out
xor
fwait
adc
testl
outsb
jo
mov
cmp
pop
xor
mov
sbb
pushf
out
cli
sbb
inc
inc
mov
ljmp
push
xchg
jns
fwait
sbb
enter
ja
push
sbb
sbb
mov
sbb
fdivrs
pop
loope
sbb
jnp
mov
ljmp
xor
dec
lcall
mov
sbb
sbb
aam
lret
sbb
sbb
insl
ja
orb
pop
aaa
xchg
mov
cmc
pop
mov
mov
jp
lock
cmp
sti
loopne
shrl
lcall
es
push
mov
mov
sbb
in
movsb
roll
faddl
jmp
cmpsb
mov
stc
stc
dec
mov
lcall
filds
cli
fstpl
inc
inc
into
add
sub
add
dec
xor
mov
dec
popa
lcall
xchg
ret
std
xchg
scas
popl
pop
add
sbb
insl
dec
add
mov
fistpll
loopne
mov
push
push
test
lods
or
fildll
jnp
les
push
dec
mov
out
ficompl
out
pop
dec
mov
jnp
icebp
sahf
pushf
sub
test
mov
push
loope
daa
jg
mov
pop
mov
cmp
xor
dec
enter
gs
xchg
jge
sbb
cmpl
ds
out
jge
sbb
inc
pop
lret
add
jl
out
add
or
int3
inc
jbe
dec
add
pop
push
in
push
mov
outsl
fiaddl
repnz
test
ficompl
xlat
icebp
sub
and
sbb
sbb
outsl
dec
and
jns
mov
or
pop
insb
pop
call
repz
xor
cmp
jl
adc
sbb
and
inc
jp
mov
jl
xchg
jnp
mov
das
repz
fwait
je
ret
xchg
pop
stc
push
xchg
adc
cmc
andl
inc
in
push
fwait
mov
pop
addr16
cmp
add
and
inc
xchg
and
jb
ja
bound
mov
nop
je
cmpsb
xchg
xor
pop
jno
dec
lds
mov
scas
or
loop
fsts
mov
icebp
or
mov
jecxz
sbbb
ficompl
dec
add
lcall
dec
sbb
jnp
push
outsb
adc
and
ja
jne
cmp
pushf
lahf
cmp
rcrb
push
loopne
mov
das
sbb
and
and
inc
inc
and
inc
or
xchg
jo
mov
mov
js
fadd
inc
mov
push
mov
xchg
xchg
pop
push
in
ficompl
andl
ja
fidivl
data16
sti
fmull
popa
test
sub
and
call
fs
ds
lahf
cwtl
jb
xchg
mov
sahf
aad
lahf
sbb
inc
inc
fldl
ret
ret
roll
inc
pop
push
fiadds
decb
sahf
or
mov
or
in
lret
ret
adc
mov
sub
add
jne
in
pop
cltd
dec
adc
xchg
movsl
pop
cli
sbb
push
sub
addr16
jns
cmp
add
xchg
imul
fs
stos
or
inc
pop
inc
ljmp
loop
ja
cmp
pop
add
lods
test
push
sti
mov
scas
movl
outsl
pop
and
iret
ja
xchg
ficompl
push
cmp
inc
pop
adc
cwtl
outsb
lcall
mov
fdivl
orl
push
mov
mov
rolb
out
cmp
ja
sti
dec
pop
lods
lret
add
or
mov
ds
test
and
mov
jecxz
cmp
pop
js
and
addb
fs
add
jne
xchg
arpl
or
hlt
lea
movsl
dec
cmc
imul
xchg
addr16
pop
jle
adc
cltd
adc
inc
out
sbb
jmp
add
outsl
pop
sbb
cwtl
stc
iret
and
mov
xchg
mov
or
lcall
mov
test
push
bound
pop
xor
inc
pop
cmp
out
adc
cmpsb
dec
cmp
bound
imul
add
jbe
mov
cmp
mov
cmp
mov
fnstcw
aaa
push
cmc
jbe
and
addr16
cmp
stos
mov
jl
fstpl
imul
mov
sbb
idivb
sbb
std
add
inc
mov
and
out
sahf
scas
js
inc
cmpsb
es
mov
jne
addl
adc
push
xor
or
test
jge
imul
xchg
leave
mov
fldcw
call
xchg
and
orl
sti
andl
in
cld
inc
mov
psubb
pop
into
push
sub
cmc
mov
pop
push
push
pop
aas
dec
mov
adc
insl
mov
icebp
jbe
pushf
sbb
daa
sbb
inc
hlt
lds
inc
add
inc
sahf
test
mov
test
mov
jae
hlt
inc
mov
jb
shrl
mov
dec
xchg
call
adc
ja
test
stos
sub
sub
push
adcb
fldl
mov
mov
mov
dec
mov
sbb
or
push
pop
mov
pop
sbb
lods
dec
or
clc
jecxz
iret
push
filds
rol
mov
mov
pop
xchg
sbbl
out
and
in
scas
test
in
popa
mov
push
fildl
repnz
fbld
sbb
add
lahf
dec
lock
aam
ret
popf
repnz
lcall
jo
sbb
pushf
mov
dec
mov
lock
imul
mov
ljmp
addb
pop
mov
inc
inc
movsl
pop
clc
xchg
cmc
add
and
ja
jle
sbb
stc
adc
and
dec
popf
mov
into
and
xor
add
push
aas
fsts
test
sahf
hlt
enter
push
cmp
add
pop
xchg
push
mov
addl
xor
and
movsl
ja
ret
dec
pop
or
jmp
decb
xor
mov
jbe
jge
addr16
or
mov
movsb
sahf
pop
sbb
fdivl
sub
push
xor
mov
xchg
push
into
sub
or
jl
add
pop
jp
lahf
jmp
pop
mov
addb
in
cmpl
jne
fmul
adc
fwait
lods
lock
fcomps
push
mov
into
xchg
xor
mov
mov
and
and
mov
sub
push
sub
mov
cmpsl
xor
cmpsl
pop
cmc
adc
xchg
fisubrl
mov
push
inc
test
and
mov
adc
add
clc
or
push
ret
sub
and
mov
push
mov
xchg
shlb
push
xchg
add
push
cmp
cmp
mov
jne
imul
push
mov
pop
xchg
sahf
ja
cld
adc
ret
movsb
cmp
loopne
xchg
sub
and
pop
scas
jmp
es
push
add
jno
shrb
mov
mov
pop
xor
push
xchg
roll
xor
in
cwtl
add
pop
fsubs
fidivrs
inc
or
cld
jmp
mov
in
or
pusha
iret
mov
inc
subb
into
xor
in
lds
pop
mov
xchg
mov
ret
cmc
xor
gs
in
loop
cmp
shll
and
lods
mull
inc
pop
idivb
fdivrs
pop
into
pop
pushw
mov
xor
stc
jnp
stos
out
popa
ds
dec
push
mov
add
mov
cmp
jbe
jecxz
faddl
sub
jae
xchg
mov
adc
in
add
sbb
pop
outsb
shlb
adc
mov
xchg
jns
and
in
inc
cmp
rcrl
pop
xor
xor
add
test
mov
xchg
pop
and
add
fxch
push
push
ret
or
stc
xchg
lcall
mov
mov
addb
into
imul
inc
test
inc
js
sbb
cmp
cmp
jl
sub
shrl
and
lea
dec
xchg
cwtl
jecxz
pop
fucomip
aad
mov
jp
add
sub
jle
pop
pop
mov
xorb
shl
jecxz
lcall
insb
mov
fmuls
jg
sahf
and
mov
andl
iret
hlt
mov
frstor
xchg
or
out
push
push
xchg
sbb
popf
cmp
cmc
mov
inc
mov
cwtl
add
inc
js
mov
je
pop
sub
adc
and
ret
adc
icebp
es
adc
ja
fld
and
ret
sbb
js
xchg
mov
mov
mov
std
mov
dec
add
add
jecxz
mov
ss
loope
pop
lcall
sub
add
pop
mov
daa
cli
or
das
pop
and
and
mov
pop
sahf
mov
mov
xor
pop
dec
andl
jecxz
movsl
into
push
push
cli
pushf
push
fnstenv
and
data16
mov
js
into
pop
add
dec
inc
push
pusha
cli
xchg
addr16
data16
stos
addr16
inc
inc
adcl
lods
add
inc
insl
pop
in
rcrl
inc
ror
loop
test
ss
movl
inc
pop
lods
xlat
int
test
jae
mov
repnz
scas
out
mov
mov
in
sub
push
mov
pop
inc
test
jb
flds
add
mov
push
mov
inc
leave
inc
mov
xchg
pop
jb
test
mov
ds
cmpsb
xchg
inc
cli
push
mov
add
lods
mov
daa
call
mov
in
scas
loopne
dec
jl
or
test
ljmp
adc
cmp
mov
cmp
push
inc
add
clc
xchg
cmc
jbe
inc
dec
sbb
push
dec
mov
jns
pop
cmp
cmp
outsl
mov
sbb
cld
mov
xor
iret
lods
dec
mov
push
fcoms
xchg
mov
pop
arpl
cmp
ja
lea
pop
into
inc
fdivr
cltd
sub
stos
repnz
popa
mov
inc
or
icebp
stc
cmpsl
pop
dec
jle
cmc
cmpsb
and
test
mov
pusha
cmp
cmp
movsl
cmp
xchg
xor
mov
and
push
rcr
xor
xchg
cmpsb
push
bound
push
pusha
int3
push
add
out
sbb
jecxz
and
mov
ja
mov
out
add
dec
push
mov
icebp
arpl
inc
bound
jg
pop
mov
fdivrs
inc
stos
or
inc
test
stos
stos
jnp
icebp
orb
aam
mov
lods
fildll
imul
cmc
jae
pop
dec
je
pusha
and
xchg
add
xor
fsubrs
into
out
jno
add
fs
je
cmp
out
ja
test
xchg
inc
fmull
mov
or
cmp
bswap
xorl
pop
out
push
sub
dec
das
popa
stc
fisttps
or
rol
push
mov
pop
lcall
adc
mov
mov
insl
sar
xchg
popa
jnp
test
jecxz
cmp
leave
fs
mov
push
pop
sbb
cwtl
cmp
sub
sub
js
and
test
filds
cmc
test
orl
test
xor
pop
xchg
mov
adc
in
fwait
xor
rolb
or
sbb
fidivs
mov
imul
std
sahf
mov
jp
leave
cltd
or
mov
jle
ret
stos
mov
fwait
rolb
jl
arpl
je
mov
ss
outsb
xchg
or
push
pop
push
test
cs
xor
xchg
subl
rcll
cmpsl
mov
jno
out
adc
cmpl
or
fwait
inc
inc
mov
fwait
xchg
add
fucomip
dec
andb
ret
mov
add
add
sbb
sbb
loope
mov
inc
mov
xchg
mov
and
sbb
das
and
ret
fimull
xchg
icebp
repnz
and
stos
push
add
mov
roll
dec
insb
pop
sbb
fimuls
lahf
mov
daa
mov
nop
icebp
jmp
sbb
clc
pop
inc
aad
xor
jp
fimull
add
clc
push
data16
scas
inc
xchg
sbbl
pop
lock
xchg
stc
mov
jecxz
mov
js
add
dec
icebp
mov
and
enter
mov
sarb
adc
inc
shlb
xchg
push
cli
cs
xchg
stc
cmp
dec
in
mov
shll
out
loop
xchg
push
jnp
push
popa
ficoms
daa
add
mov
push
inc
out
bound
fistpl
stos
push
imul
push
jecxz
xchg
cld
rcr
aas
or
push
or
push
lret
xchg
shlb
sbb
add
bound
sahf
fwait
or
cmp
sbb
adcl
xchg
loope
lock
push
fstps
pop
cmp
jp
xchg
fnsave
fwait
stc
cmp
mov
sti
sarb
sbb
aas
xor
sbb
repnz
pop
addl
inc
cmp
mov
pop
push
add
data16
inc
mov
gs
add
lcall
dec
into
push
mov
mov
add
adcl
insb
push
sub
push
das
mov
icebp
fsubrs
sbb
cmpsb
cmpsl
and
mov
xor
add
xchg
dec
je
mov
or
inc
je
xchg
int
or
inc
push
outsb
xchg
js
dec
es
xor
fiaddl
test
mov
mov
int
mov
dec
jno
fwait
jl
cmp
adc
xor
outsl
jg
and
pop
stos
roll
movsb
cwtl
inc
pop
dec
mov
outsl
mul
dec
stos
fcoml
das
jnp
xor
bound
pop
xlat
icebp
sbb
mov
fiadds
mov
xor
in
cmp
aam
imul
mov
pop
mov
jmp
push
pop
inc
mov
mov
sub
jl
repz
jnp
dec
imull
test
xchg
faddl
popf
repz
push
shll
dec
into
pop
mov
fistpll
dec
repnz
jmp
adc
pop
push
movsl
mov
sbb
and
cmp
push
andl
dec
pop
fcompl
mov
fimuls
jnp
filds
les
sbb
jecxz
adc
mov
int
inc
inc
sti
xchg
xchg
mov
sbb
cli
stos
xor
test
push
push
fcoms
jnp
sbb
mov
sbb
adc
call
sbbb
fs
cmp
lahf
ss
sbb
add
inc
or
daa
in
outsb
pop
cmp
ret
adc
dec
mov
in
shlb
repnz
pop
mov
pop
pusha
and
xor
adc
push
stos
fdivrl
dec
outsl
or
rcl
adc
and
in
inc
cmpb
push
daa
jecxz
add
xchg
xchg
mov
inc
mov
mov
xor
clc
or
dec
lcall
sbb
loop
pop
lods
fwait
inc
imul
popf
ljmp
and
sbb
lea
mov
and
sbb
mov
lahf
dec
mov
push
negl
add
add
aaa
add
jno
into
std
fstl
and
inc
addl
xchg
push
int3
sbb
mov
inc
movsl
stc
daa
mov
aas
insl
add
xchg
push
inc
aas
push
lcall
or
arpl
imul
imul
bound
dec
incb
subl
pushf
pop
sbb
inc
xlat
jno
pop
fcomps
orb
pop
popa
and
loop
pop
dec
arpl
ja
stc
and
xchg
mov
jb
add
jmp
out
cmp
mov
or
insb
pop
xor
lcall
shll
mov
or
xchg
insl
js
je
xor
insb
sbb
pop
pop
cmpb
mov
push
adc
add
daa
adc
aas
rcrl
jb
xchg
sub
movsl
and
clc
pop
data16
xchg
cmc
fisubl
and
icebp
dec
jo
mov
data16
pushf
les
push
inc
pushf
adc
addr16
push
out
jne
jecxz
andl
and
stc
aas
or
and
js
dec
mov
filds
cli
outsb
xor
dec
pusha
xchg
mov
xchg
mov
pop
and
test
into
mov
push
jp
pusha
fsubs
stos
jge
jg
inc
fsubrp
pop
movsl
sub
inc
repz
xor
jb
sbb
ja
mov
xor
pusha
jecxz
adc
inc
or
pop
xchg
sub
test
loopne
imul
nop
mov
cmc
clc
fdivs
and
or
jb
push
jns
add
smsw
aaa
push
mov
mov
sbb
pop
cmp
cs
rolb
inc
loopne
pop
shl
imul
shl
push
sbb
jnp
aas
lahf
sub
loopne
cmp
xchg
and
xchg
mov
xchg
pushf
in
mov
cmc
push
push
jmp
rclb
xlat
xor
sbb
in
lahf
aas
inc
mov
pop
sarb
push
sti
mov
sbb
shrl
mov
jp
in
ret
movsb
xchg
out
push
or
sbb
lret
push
pop
xorb
jp
sub
movsb
mov
add
push
cld
sarb
shll
inc
roll
test
fs
xchg
mov
and
ret
jge
ja
out
lret
iret
in
cmp
loopne
push
shll
outsl
dec
mov
je
xchg
xor
or
rcl
jmp
sbb
mov
mov
sub
inc
cmpsb
fmull
ds
xor
mov
lds
lret
cld
rol
mov
and
push
xlat
ja
dec
cli
aas
add
je
mov
inc
ret
loopne
mov
lods
sbb
packuswb
mov
scas
fcom
sub
cmp
pop
scas
bound
outsl
jecxz
sub
sahf
fs
jle
mov
cmp
fisttpll
add
add
adc
cmp
push
inc
dec
std
inc
loop
cmp
das
orb
scas
clc
das
leave
hlt
int
incb
pop
sub
xchg
aaa
dec
xchg
adc
cmp
dec
mov
stc
mov
add
std
cmc
inc
sbb
jns
clc
ja
sbb
mov
add
cli
repnz
jg
repnz
imul
xchg
add
push
adc
adc
xor
fwait
lret
repnz
js
ljmp
inc
push
je
lock
mov
xlat
daa
ja
in
push
sbb
out
inc
mov
sbb
js
test
sbbb
dec
inc
rcrl
leave
lock
dec
mov
cmc
loop
and
int
sub
pop
pop
repnz
push
roll
cwtl
aas
pusha
cmp
xchg
sub
dec
xor
sahf
insl
orb
mov
jg
out
and
repnz
pop
arpl
push
inc
sahf
data16
lds
inc
xlat
test
pop
shr
pop
psubusb
aaa
fists
test
insb
fsubs
adc
in
jne
mov
xchg
enter
xor
cmc
sub
fsts
push
repnz
push
inc
icebp
adc
add
adc
push
add
imul
xchg
pop
inc
mov
inc
cmc
rcl
and
jo
adc
add
gs
sbb
mov
inc
gs
mov
sbb
rcrl
xchg
sub
mov
aas
mov
mov
mov
mov
sbb
xor
or
hlt
jb
andl
sbb
xchg
inc
cmp
int3
add
add
dec
mov
pop
hlt
insl
shrl
and
xcrypt-ecb
cmpsl
mov
push
test
sub
cwtl
insb
sub
imul
push
rorb
dec
jecxz
push
das
in
pop
or
sub
and
jns
les
cmpb
ret
call
imull
xor
push
mov
inc
sbb
mov
adc
or
jnp
and
dec
mov
pop
jg
xlat
fs
xchg
loop
iret
push
fidivl
mov
and
jmp
mov
or
push
scas
test
sbb
icebp
iret
dec
xlat
lahf
fidivs
ds
pop
cwtl
push
mov
xor
mov
adc
jmp
adc
lock
xchg
sub
divl
xor
pop
jecxz
xor
mov
fdivrl
in
or
sbb
in
pop
stc
add
mov
mov
ja
mov
jp
repz
mov
or
inc
fwait
lahf
add
xchg
sbb
mov
sbb
mov
call
arpl
out
adc
push
sub
dec
mov
add
out
fdivl
mov
adc
inc
xchg
fldl
hlt
js
aas
jp
fs
sbb
and
stos
mov
push
lods
or
stos
pop
in
dec
popf
mov
jecxz
jne
jcxz
xchg
cmp
scas
adc
jl
sub
cmp
mov
fwait
and
mov
xorl
push
and
repz
sahf
or
lea
fadds
xlat
inc
adc
adc
or
xlat
inc
popl
enter
imul
push
imul
or
pop
or
pop
or
adc
mov
cmp
pop
lea
mov
sbb
lea
fwait
or
cmp
fidivs
js
mov
mov
mov
xor
fisubrl
xor
or
fwait
outsl
add
pop
popf
or
cmp
repz
inc
imul
jnp
std
lods
dec
jae
dec
cmpsl
stc
pop
mov
int3
fwait
lahf
mov
test
mov
pop
inc
popa
mov
test
jl
frstor
xchg
or
mov
jge
in
les
movsb
jle
xor
or
cmp
pop
xchg
call
repz
xor
xchg
jnp
out
mov
cmp
xor
adcl
popf
mul
popf
cmc
pop
sbb
sbb
imul
out
cmp
fs
pop
fwait
pop
aaa
lahf
inc
andl
fdivl
add
js
or
lods
push
roll
in
push
mov
mov
jecxz
mov
jecxz
dec
imul
sbb
test
push
add
xchg
in
xor
add
leave
pop
pop
roll
mov
nop
test
sub
push
jecxz
call
jmp
mov
ret
mov
mov
jecxz
or
or
jge
lock
fidivrl
adc
mov
ret
pop
jo
or
je
sbb
pop
jae
ja
adcl
cmp
in
mov
xor
pop
adc
push
mov
gs
aaa
mov
xor
mov
or
and
mov
rorb
sub
jo
mov
inc
repz
nop
icebp
jbe
jb
jecxz
lods
xchg
cltd
fadds
pop
jp
out
loope
jle
gs
shl
cmp
pop
pop
xchg
push
add
push
cmc
sub
push
popf
add
sbb
loopne
mov
das
loope
int3
adc
pop
mov
add
ss
cmp
enter
sbbb
mov
push
adc
sbb
jmp
pop
lods
in
mov
shrb
and
pop
insb
push
dec
pop
inc
scas
sbb
sbb
mov
shrl
xchg
mov
add
filds
movsl
and
pusha
lahf
gs
mov
icebp
push
ljmp
cmp
adc
inc
jno
jp
xchg
add
add
and
xchg
js
inc
mov
leave
test
jp
or
ret
pop
xchg
push
mov
xlat
xchg
xor
or
push
fsubrs
fistl
ret
push
fcoml
inc
jae
pop
in
mov
clc
andl
lods
pusha
pop
popf
pop
pop
imul
cmp
push
sahf
pushf
cltd
xchg
push
cmc
pop
mov
shll
je
int3
arpl
flds
mov
inc
adc
lock
mov
jg
pop
inc
test
mov
jmp
jnp
hlt
jp
mull
xchg
inc
test
add
addl
pushf
mov
lods
popa
cmp
aad
inc
mov
mov
sbb
addr16
popf
sbb
mov
dec
xchg
mov
adc
mov
ja
fistl
lret
aas
dec
jbe
nop
push
pop
movsl
push
icebp
mov
sbb
call
repnz
jne
mov
sub
leave
bound
xor
mov
pop
fiadds
cltd
adc
je
adc
jp
fnop
mov
add
ja
jo
pop
cmpsl
sbb
sarb
dec
lds
sahf
mov
fs
out
push
loop
or
xchg
pop
lea
inc
sahf
sbb
roll
imul
and
xor
addl
test
and
cld
loope
inc
sbb
inc
xor
adc
sahf
lahf
pop
sbb
sbb
and
loopne
jecxz
bound
push
push
loope
pop
jp
lcall
xchg
mov
sbb
sbb
out
loope
pushf
inc
add
or
sbb
adc
xchg
lahf
adc
push
ret
test
xchg
movsl
adc
pusha
push
fs
jmp
push
pop
xchg
fiadds
in
inc
rol
dec
cwtl
xor
mov
test
cli
pop
xchg
jecxz
push
mov
lahf
les
adc
jecxz
push
dec
ret
test
mov
mov
xorb
jns
repz
fdivl
and
in
std
cmp
sysexit
mov
and
shll
sub
pop
adc
loope
mov
ja
repz
test
jb
repnz
lods
mov
pop
pop
cmp
int
cmpsb
ds
loop
adc
xorl
js
nop
xlat
jb
ds
cmp
pop
xchg
or
mov
mov
mov
jecxz
sub
sbb
popa
aas
out
fildl
cmp
add
sbb
data16
je
cltd
push
mov
fwait
xchg
bound
imulb
lcall
movsl
sbb
sbb
fwait
incl
aam
mov
test
aad
adc
mov
std
push
mov
pop
scas
mov
add
push
cmpsb
push
addl
roll
jmp
cmpsb
sbb
mov
data16
mov
aas
cltd
mov
popa
test
mov
dec
cmpsb
mov
flds
iret
in
sbb
ret
inc
movsl
movsl
jp
idiv
add
sbb
xchg
add
pusha
add
es
stos
stc
add
xchg
into
or
dec
mov
fyl2xp1
sub
mov
ret
xor
imul
into
shrb
adc
xor
repz
inc
dec
and
add
out
arpl
ret
in
mov
add
fwait
popa
mov
nop
push
test
xor
or
sbb
and
sahf
mov
jo
icebp
es
in
repnz
push
sti
call
sub
in
inc
sbb
cmp
lahf
popf
loop
push
int3
push
out
mov
and
jb
mov
call
fstpl
jp
jecxz
push
stc
and
push
inc
mov
lahf
and
push
mov
inc
test
in
insl
shl
xchg
mov
and
lret
pop
ficomps
rorl
dec
push
scas
cs
inc
icebp
ds
push
gs
push
movntq
loopne
cld
pop
jmp
and
ds
sub
dec
inc
sbb
cld
ss
or
or
sbbb
fsub
stos
and
dec
mov
std
mov
cmp
cmpb
jp
mov
xlat
fiadds
pop
nop
stc
jp
jns
pop
pop
dec
repz
pusha
int
pop
lock
test
jo
into
lret
mov
mov
nop
lea
push
adc
mov
das
inc
jae
es
pop
js
mov
stos
pop
dec
pushf
nop
orl
push
icebp
jb
xchg
inc
out
push
shlb
aas
push
sub
add
testl
mov
outsl
add
xchg
push
test
mov
dec
or
sbb
int
jb
sahf
xor
cmp
movsl
imul
clc
pop
cmpsb
mov
mov
fidivl
sbb
jecxz
mov
push
adc
pop
cmc
fisubl
inc
or
inc
mov
stos
inc
pop
adc
push
mov
sbb
inc
jbe
aas
mov
mov
or
jp
ficomps
call
xchg
out
fs
sub
push
loopne
lock
pop
dec
push
shl
dec
inc
clc
sahf
mov
inc
sbb
shlb
lock
and
pop
sub
jo
cli
jmp
mov
pop
inc
push
bound
das
xchg
lods
jecxz
jo
loope
and
pusha
in
filds
imul
loope
cmpsl
cmp
sub
inc
xchg
push
cmp
sub
push
pusha
sbb
incl
pop
cmp
repnz
ret
aaa
fld
ret
outsl
pop
sbb
add
sbb
mov
mov
hlt
push
int3
pop
shll
arpl
cmp
jae
mov
je
lahf
addr16
adc
scas
inc
push
mov
adc
add
out
or
mov
add
bound
stos
mov
and
ja
add
push
sahf
hlt
daa
mov
jg
add
mov
or
jno
xchg
mov
faddl
push
dec
mov
xor
push
repnz
xchg
imul
stc
leave
js
or
jo
fsubs
shl
inc
xchg
add
dec
pop
aad
addr16
mov
cmp
lea
dec
mov
daa
aaa
mov
cltd
std
lea
into
inc
push
cltd
and
jns
sarl
adc
lret
xorl
jp
push
mov
sbb
jns
adc
sbb
push
push
cmp
xchg
or
mov
sub
or
mov
ror
mov
mov
lds
mov
into
push
icebp
dec
dec
mov
js
pop
sahf
xchg
loop
adc
mov
xchg
cmc
aad
pop
sbb
fadds
inc
jno
imul
dec
push
jbe
test
mov
inc
popf
in
icebp
scas
and
rcrl
loopne
fisubs
add
sub
push
pop
cmpsb
pop
lret
daa
mov
adc
jmp
pop
mov
mov
in
and
push
mov
mov
jge
sbb
ret
mov
push
jo
adc
mov
jmp
dec
xor
clc
out
push
fistps
fdiv
push
ds
cmp
mov
mov
mov
std
push
aam
push
leave
mov
and
fists
lret
test
mov
int3
test
frstor
test
stos
mov
add
fldenv
mov
dec
in
and
jle
jl
xchg
bound
loopne
call
inc
sbb
jecxz
movsb
subb
outsb
add
test
cmc
in
adc
out
cltd
xor
pushf
aad
notl
arpl
dec
jns
add
ja
lret
mov
pop
inc
pop
add
adc
jl
inc
add
xchg
lret
jge
push
cmp
or
add
stc
int3
xchg
jnp
lret
jbe
mov
gs
push
pop
insl
stos
add
add
jbe
fidivrl
mov
mov
daa
push
inc
vhaddpd
mov
shrl
daa
fsts
daa
xlat
leave
mov
jg
sbb
mov
sub
sbb
mov
and
xchg
out
add
clc
idivl
sarb
add
dec
and
pop
and
out
sbb
push
and
dec
or
stc
adc
je
ja
test
aas
mov
and
out
jg
mov
xchg
push
imul
out
push
pop
test
js
push
cmc
and
xchg
addb
faddl
sahf
mov
addb
jno
sbb
or
xor
in
pop
mov
mov
mov
push
jge
cmp
pop
ret
in
mov
push
outsl
addl
inc
xchg
pop
xor
mov
fnstcw
fiaddl
roll
mov
mov
test
jbe
addr16
or
in
mov
outsl
loope
ss
mov
xchg
or
lahf
addr16
xor
add
and
sbb
mov
adc
dec
shrb
mov
incl
sub
add
mov
in
fs
stc
test
sbb
push
pop
xlat
adc
jne
out
loope
or
sbb
dec
pop
mov
mov
xchg
sti
lcall
scas
xchg
cmp
sti
xchg
add
and
loop
mov
cli
insb
sbb
add
addr16
or
xor
lcall
sbb
adc
xlat
insl
fwait
mov
movsl
daa
dec
dec
clc
dec
sub
xchg
in
fstps
mov
xchg
jp
rolb
inc
pusha
or
addb
sbb
and
flds
fs
dec
dec
dec
jl
pop
sub
fwait
xorl
inc
in
adc
adc
les
gs
leave
xchg
inc
jp
pop
or
ss
lcall
shlb
mov
nop
xchg
jl
push
ffree
mov
xor
sahf
rcl
std
outsl
ds
and
mov
fbstp
aaa
jbe
pop
leave
xor
inc
mov
test
mov
push
std
sbb
and
sbb
outsl
cmp
scas
or
scas
int3
jp
adc
cmp
icebp
xor
xchg
mov
xchg
jne
jne
jg
outsb
pushf
jle
insb
nop
sbb
inc
mov
push
mov
adc
dec
add
arpl
dec
fimull
jbe
test
mov
inc
cmp
or
cwtl
cmp
ficomps
out
roll
xlat
out
dec
repz
cmp
and
jb
pop
loop
jne
pop
sbb
imul
arpl
lret
sbb
mov
push
or
mov
push
and
cmpsl
scas
fs
sub
mov
addr16
xchg
cmp
push
jmp
mov
xchg
arpl
push
aaa
xchg
mov
add
push
pop
outsl
inc
pusha
cwtl
rcll
xchg
into
rcrb
mov
fistps
call
fidivs
push
mov
push
jg
ret
lcall
aas
xchg
ds
stc
jp
cmp
cltd
xlat
mov
jo
fs
xor
mov
ret
cltd
push
pop
ss
jne
mov
mov
mov
inc
mov
dec
ds
mov
mov
push
out
push
loopne
pushf
repz
dec
aas
mov
mov
mov
nop
test
and
sti
mov
adcl
pop
aas
pop
aad
jle
mov
js
and
in
shll
jbe
xor
stc
je
in
sub
mov
fiaddl
das
sub
ret
jp
jl
out
add
dec
adc
pop
add
hlt
das
xlat
mov
mov
aad
fcoml
and
push
xchg
sub
outsl
mov
pop
mov
adc
fs
mov
xor
mov
scas
incb
xchg
jnp
loope
incl
pop
ret
in
outsb
add
scas
or
mov
xor
push
stos
in
cmpsb
mov
jecxz
mov
jnp
dec
rorl
sub
sahf
scas
add
dec
in
pop
xchg
loope
sub
mov
shll
jl
sub
leave
movsb
or
add
flds
sub
sub
mov
lods
lcall
and
lret
fsub
sbb
xchg
rorl
adc
stc
dec
push
ret
ss
repnz
mov
rcll
sbb
xchg
push
add
sbb
adc
mov
and
notb
pop
cmp
fistpl
imul
mov
mov
sub
mov
pusha
mov
in
add
or
inc
sbb
mov
addr16
or
pop
popf
lahf
xchg
pop
test
leave
lock
xor
pop
push
mov
orb
push
addr16
ds
insb
in
or
and
add
mov
mov
mov
insl
lea
xor
mov
add
lods
mov
ret
jns
jecxz
push
cmpsl
or
shll
sti
or
daa
fistps
test
push
sahf
js
xchg
push
fsubl
daa
cld
pop
and
inc
cmc
call
sub
test
int3
xchg
mov
ljmp
sti
jne
xor
fsubrs
lahf
pop
cmc
loopne
icebp
mov
xor
or
or
aam
mov
dec
popl
pop
jge
pop
push
jo
jne
add
push
imul
out
repnz
test
jno
pop
sbb
add
xchg
mov
movsl
popl
jg
xlat
or
mov
movsb
div
mov
add
cmp
dec
dec
test
or
or
mov
sti
sub
mov
push
jg
rcr
jno
add
and
fdivrl
mov
mov
addl
outsl
test
fistpll
outsl
sbb
lret
push
in
push
inc
adc
mov
test
push
mov
imul
popf
xchg
xor
jb
pusha
jg
insl
dec
xchg
cs
mov
scas
fs
or
jb
or
movsl
jo
dec
sbb
or
mull
inc
add
and
outsl
insl
popa
add
add
add
push
lcall
bound
xor
adc
and
mov
cmovb
mov
inc
arpl
cmp
xchg
fcoml
stc
and
xchg
cli
inc
bound
dec
sub
jmp
std
xchg
mov
adcb
sbb
out
inc
into
rcl
sub
pop
imul
jp
outsl
aas
push
mov
fcmovb
xor
mov
fs
pusha
out
rorb
lcall
add
pop
inc
jecxz
andb
or
fdiv
enter
cmp
jo
out
adc
arpl
mov
sbb
arpl
or
inc
ss
jp
jecxz
rep
pop
aaa
fdivr
and
fistl
lcall
jecxz
arpl
dec
add
leave
outsb
sub
jle
and
and
mov
or
popaw
pop
xchg
xchg
aas
adc
loope
test
test
jp
sahf
popf
mov
daa
xor
adc
mov
mov
add
aas
sub
stos
in
inc
cmp
lds
pop
push
xchg
jge
and
add
movl
mov
add
jge
jo
test
outsl
or
adc
enter
leave
pop
push
mov
push
pop
mov
lret
inc
lret
adc
nop
imul
sbbb
in
fistps
pushf
mov
popa
mov
das
mov
sbb
adc
jmp
das
mov
inc
or
mov
pop
nop
xor
arpl
repnz
adc
icebp
jns
inc
sbb
jge
mov
inc
cli
add
sahf
test
add
sbb
sub
cmc
adc
xchg
stos
insl
pop
inc
pop
inc
imul
mov
ljmp
jbe
push
fs
mov
xchg
jne
jp
loop
mov
movb
push
lret
ds
xor
add
mov
sti
jno
push
mov
and
ja
xorl
push
mov
lret
push
rcr
sbb
scas
inc
in
jb
addr16
mov
and
sbb
add
aas
orb
outsb
addr16
pop
pop
enter
sahf
addl
xchg
into
or
ds
decl
jg
psrld
lcall
jg
sub
push
push
mov
ret
rcrl
mov
xchg
cmp
mov
mov
arpl
push
cltd
lcall
cli
push
mov
push
dec
cmp
add
sar
or
cmpsl
call
cld
addr16
mov
ljmp
push
imul
xchg
cli
jne
mov
pop
repz
push
mov
notb
das
adc
xlat
cmpsl
sub
and
ja
std
call
mov
flds
andl
cli
xchg
nop
ja
in
sub
and
jns
dec
cmp
mov
jp
dec
daa
add
lahf
sbb
dec
push
add
jbe
sbb
fsts
inc
mov
jns
jl
sahf
aad
test
mov
aaa
aad
mov
xchg
insb
adc
dec
jecxz
cmp
ss
xchg
pop
bound
add
xchg
jecxz
ficomps
arpl
test
cmpsb
xchg
or
mov
dec
cltd
xor
or
sbb
and
mov
or
xchg
scas
mov
mov
repnz
les
push
iret
rcrl
pop
sar
mov
pop
lahf
popf
inc
fistps
or
sbb
cmp
test
mov
enter
daa
insb
or
mov
mov
lods
xchg
mov
sbb
mov
call
add
lds
clc
mov
data16
jae
mov
out
sti
in
stc
push
jle
movsl
sbb
popf
in
sahf
add
out
je
mov
lahf
jecxz
ret
cmc
push
in
mov
inc
loop
stos
gs
mov
imul
sahf
cmpb
es
inc
mov
ja
mov
add
lahf
jno
scas
inc
aaa
inc
and
cwtl
cmp
mov
sbb
mov
out
xor
pop
mov
xchg
ljmp
xorb
mov
gs
xorb
dec
stc
push
dec
xor
lock
adc
mov
sbb
push
bound
push
ja
inc
mov
mov
cmpsb
es
jmp
sbbl
cltd
outsb
jg
shlb
jnp
hlt
test
outsb
xchg
outsl
repnz
arpl
clc
xchg
mov
data16
movsl
sbb
test
lcall
or
cmp
sbb
add
mov
push
jg
add
pop
inc
outsb
sbb
and
popa
pop
pop
sbb
inc
pushf
sbb
lcall
stc
jp
incb
into
mov
movl
mov
cmp
add
adc
adc
push
lahf
enter
add
push
inc
testb
jp
jge
lret
sarl
cmp
pushf
icebp
mov
das
mov
jne
jecxz
or
enter
test
hlt
xchg
cmpsl
jns
add
stos
les
leave
or
sbb
dec
sahf
cmc
in
insb
aas
dec
xchg
mov
pop
fldcw
decb
inc
mov
xchg
push
add
inc
divl
sbb
test
dec
arpl
mov
push
addr16
cmpsb
iret
loop
jns
mov
add
push
mov
mov
push
dec
incl
mov
dec
ja
ret
lock
insl
outsl
cmp
out
ljmp
lahf
push
cmp
fcoms
dec
dec
addb
mov
mov
sarb
pop
clc
sub
xchg
fwait
mov
push
out
mov
inc
jecxz
and
inc
xadd
bnd
mov
and
subl
addb
sub
out
test
and
and
push
cmp
pop
sbb
imul
xor
pop
ret
add
mov
loopne
add
adc
jns
loope
sub
mov
sbb
pushf
xchg
adc
lcall
test
mov
sbb
mov
mov
mov
repnz
sub
test
fidivrs
ret
and
fisubrl
push
xor
push
inc
and
dec
rep
xchg
fisttps
push
adc
int
fcomps
jb,pt
or
add
ret
scas
xchg
and
fbstp
inc
insl
sub
cmp
outsl
or
mov
fdivl
repz
pop
add
sub
xchg
xchg
mov
dec
mov
stos
fisubrs
inc
iret
in
pushl
add
pop
mov
js
pusha
mov
shll
popf
mov
cmc
jecxz
xchg
ja
shll
ljmp
negl
sub
outsb
add
bound
fsubp
xorb
jns
inc
or
cltd
out
sub
sbb
in
sub
sbb
ljmp
pop
lret
cs
sbb
sub
xchg
xor
cld
or
adc
and
xor
dec
mov
or
xacquire
lea
inc
sub
and
add
out
js
jne
lahf
and
mov
pop
addr16
push
fmul
enter
and
call
aaa
inc
xor
add
xor
addr16
jb
inc
xor
pop
stc
xchg
mov
sbb
js
push
ret
push
jne
imul
lcall
adc
repz
scas
mov
lahf
arpl
dec
jecxz
rclb
cmp
mov
mov
push
enter
repz
int
scas
mov
outsb
and
xchg
pop
inc
adc
push
clc
sub
mov
out
addl
adc
shrl
pop
xchg
pop
mov
rcll
aad
ds
das
sbb
inc
in
mov
pop
push
lahf
add
lea
and
mov
adc
js
or
mov
xchg
mov
movsb
sahf
cwtl
stc
mov
out
test
mov
xchg
daa
mov
jns
inc
popf
xor
add
das
aas
pop
lahf
xchg
and
sbb
ljmp
pop
xor
adcl
xchg
add
or
mov
pop
fildll
call
inc
cltd
push
ret
cmp
push
push
ds
jne
and
das
rcr
xchg
push
mov
rolb
lock
in
fcompl
sub
sbb
lds
mov
inc
sbb
jl
adc
cmp
call
jno
pop
lret
and
sub
sbb
iret
mov
pop
sub
stc
xchg
lret
arpl
mov
pop
les
mov
pusha
adc
or
lcall
sub
stos
sbb
pop
pusha
imull
xchg
or
out
cmp
out
add
push
dec
fsts
xor
xlat
test
and
std
sete
stc
jb
cwtl
fimull
pushf
mov
inc
lret
cmpb
mov
inc
repz
mov
std
adc
pop
xchg
xchg
ja
push
jge
pop
xchg
addb
subb
loope
jo
scas
movsl
roll
ret
es
or
sub
and
pop
mov
addl
cmc
pop
push
push
add
frstor
xchg
sbb
sbb
xchg
cmp
push
cmc
push
xchg
addr16
aam
sbb
mov
test
or
sub
in
pushf
xor
jns
jnp
testl
xchg
cwtl
jne
cmp
pop
add
fidivs
rclb
sbb
jbe
loop
adc
jle
xor
cmp
inc
push
cltd
fwait
ja
sub
bound
in
cmp
cli
sti
loop
mov
pop
mov
xchg
icebp
movsb
xchg
aaa
lahf
pop
dec
stos
fiaddl
mov
cmpsb
ds
aas
pop
ljmp
sbb
mov
mov
xchg
rcrl
cmp
dec
push
scas
sub
xor
dec
dec
push
int3
xchg
sub
lock
sub
repnz
jmp
and
ja
push
fnstsw
add
and
xorb
test
cli
popf
aad
add
shll
fldt
das
mov
imul
adc
dec
popa
mov
out
and
inc
cmp
mov
mov
jp
rclb
movsb
mov
test
push
mov
push
outsl
lods
sub
shlb
sbb
dec
sub
or
fstps
lret
sbb
jns
push
cltd
cmpsl
push
out
jg
test
test
mov
sbb
jno
jne
arpl
icebp
ror
jae,pn
sbb
mov
and
or
xchg
ja
add
rcrl
inc
dec
mov
fisubs
push
inc
inc
sub
test
mov
push
sub
sbb
aam
nop
andb
sub
jmp
jge
or
inc
test
sar
sbb
ja
loopne
in
cmp
addr16
roll
mov
ljmp
push
sbb
pop
movsb
repz
dec
inc
cmc
dec
ds
dec
jb
orl
push
repz
xlat
gs
clc
orl
jnp
sbb
cmp
call
fldenv
jge
mov
pop
je
test
ja
stc
push
pop
pop
iret
dec
sbb
pusha
sti
addr16
adc
stos
mov
fwait
imull
out
test
or
sbb
aas
mov
pop
xchg
stc
sbbl
icebp
filds
mov
push
cmc
lret
add
in
mov
lcall
lcall
dec
jp
and
cmp
cmc
jle
cmp
js
and
popa
icebp
push
sub
pop
daa
rcl
pop
fbld
jg
inc
push
adc
imul
or
idivl
lcall
inc
mov
in
mov
int3
sahf
in
push
int
mov
inc
sbb
inc
mov
jnp
std
sub
inc
fs
test
push
movsl
dec
jne
fistpl
outsl
jmp
ljmp
sbbl
icebp
jno
xchg
mov
popf
lahf
jnp
adc
adc
dec
adc
mov
cmc
lea
jecxz
inc
mov
push
call
jg
push
jmp
xor
sbb
es
pop
cltd
push
sbbl
daa
inc
xor
mov
mov
xchg
repnz
leave
pusha
cmpsb
lahf
mov
jmp
shlb
es
add
lcall
fcmovnbe
test
lahf
pop
test
cltd
mov
mov
xor
xchg
test
adc
mov
xchg
mov
jnp
stc
sbb
push
lahf
movsb
cs
fwait
jno
xchg
push
and
xchg
mov
sbb
mov
fs
jb
pop
inc
idivb
lods
xor
xchg
adc
fiadds
jb
dec
test
test
icebp
mov
fwait
repnz
mov
jg
imul
and
addr16
cmp
cmpb
stos
pop
repnz
mov
push
fisubrs
enter
cmc
stos
cmp
out
insb
pop
xchg
sub
test
pop
outsb
jp
push
roll
dec
push
dec
movsb
xchg
dec
ja
and
fwait
cmp
sbb
test
arpl
mov
cwtl
pusha
cmpsl
jg
sbbb
cmc
cmp
test
jo
imul
popa
scas
mov
das
and
sub
dec
std
call
add
es
rep
mov
movsb
add
sbb
pop
cmpsl
dec
adc
push
dec
sub
fwait
jb
test
sub
mov
aad
fmuls
pop
ret
mov
rcl
in
gs
inc
inc
sahf
daa
mov
orb
lcall
ret
inc
test
xlat
aaa
mov
and
in
xchg
mov
push
inc
pop
pop
sbb
scas
push
lret
fidivs
jg,pn
jbe
xor
lods
mov
movsl
and
xchg
mov
dec
arpl
mov
mov
test
ret
loope
les
scas
cli
jmp
pop
xor
mov
xchg
lret
add
sub
rcll
jmp
rclb
addl
jecxz
test
test
or
pop
mov
jne
fsubrs
inc
or
inc
stos
sahf
js
sbb
mov
pop
sbb
mov
leave
aam
outsl
and
push
xchg
aaa
cmp
xchg
stos
sbb
xchg
jecxz
mov
negl
out
adc
xchg
push
xchg
in
cltd
fdivl
dec
push
repz
mov
adc
sbb
xchg
add
sbb
pop
xchg
xor
outsl
cmpb
adc
mov
lahf
xlat
js
mov
inc
lea
fiadds
negl
cmp
push
lods
push
xchg
mov
dec
mov
xchg
inc
lods
mov
mov
inc
adcb
xchg
mov
sbb
inc
addr16
jecxz
xor
cmpb
xor
add
mov
pop
mov
xlat
shll
addr16
mov
or
inc
xchg
popa
adc
out
mov
adc
inc
sbb
sbb
stc
adc
lods
push
js
sar
cmc
arpl
pop
cld
pop
xlat
orb
lahf
pop
mov
mov
add
ss
cmp
sub
mov
lcall
cltd
pop
and
push
stos
test
xchg
addl
sbb
mov
xor
push
addr16
jbe
or
inc
out
xchg
pop
push
fs
jp
xchg
orb
and
lahf
jne
mov
jp
jne
sbb
and
mov
add
lcall
push
jno
shll
sahf
mov
push
mov
xchg
test
sbb
mov
and
cmp
adc
lcall
addb
push
cmp
adc
inc
and
or
pop
enter
xchg
in
mov
cmc
or
insb
cmpsl
inc
mov
xor
orb
cmp
jb
pusha
mov
jb
stc
pusha
jno
mov
jb
rorb
xor
push
fdivl
mov
cmp
into
adc
sbb
inc
cmp
aas
mov
cmc
cmp
mov
mov
stc
bound
addr16
jne
and
or
cmp
mov
jg
enter
sbb
stc
or
addr16
shll
push
xor
adc
outsb
fs
bound
pop
jns
ret
sub
call
sub
push
push
push
fadd
std
scas
or
mov
cltd
fimuls
divb
adc
out
lods
dec
cmp
test
push
ret
pop
fnstenv
adc
in
cld
test
push
mov
inc
cmp
add
mov
mov
mov
mov
mov
jecxz
fwait
shlb
call
lcall
jae
inc
sbb
sahf
das
or
add
add
lret
mov
adc
sahf
out
pop
scas
xchg
and
pop
stc
repnz
push
lahf
inc
inc
cmp
fiadds
ficoms
cmp
inc
mov
int3
cmp
lcall
pop
cmc
dec
popf
fildll
nop
ret
ja
xor
mov
test
shll
add
mov
add
ret
add
jne
mov
loopne
add
mov
jmp
push
lods
fmul
or
adc
ss
imul
wbinvd
mov
xor
stos
sub
add
sub
and
or
cmp
push
add
ret
mov
cmp
inc
cmpsb
sahf
inc
lahf
push
sbb
mov
dec
dec
loope
addb
lsl
add
cmc
and
add
sahf
and
push
mov
imul
in
shl
mov
cltd
xchg
mov
xorb
cld
sub
hlt
ffreep
cwtl
lret
mov
and
fimull
fs
sub
mov
and
push
pop
mov
cmp
push
das
pop
jecxz
or
sbb
fidivl
cmc
xchg
mov
push
js
mov
addr16
and
sub
stos
jg
inc
xchg
dec
mov
orl
sub
push
xchg
mov
cmpsl
ret
sbb
pop
push
out
xchg
xor
push
or
test
rol
push
arpl
inc
mov
and
movsl
fwait
and
jecxz
add
ret
cmp
ds
filds
popf
insb
dec
jle
test
lahf
in
or
mov
or
into
pop
jge
sbb
add
jge
push
enter
push
lahf
jp
clc
adc
jbe
push
jge
enter
mov
popfw
add
add
mov
hlt
xor
es
adc
xchg
fsincos
lods
leave
rorl
jg
cld
and
in
mov
ss
scas
push
insl
jl
sbbb
into
outsl
sbb
xchg
je
rcrl
push
ja
adc
xchg
dec
lahf
jno
imulb
cmp
and
adc
pop
and
mov
inc
inc
cmc
aas
cltd
mov
dec
out
lods
push
loop
roll
sahf
in
mov
js
or
pop
cmp
out
sbb
std
cmp
fptan
mov
pop
sbb
xchg
sub
sbb
pop
or
xor
or
aas
cs
xor
jp
sub
enter
shl
orl
gs
dec
fcompl
sbb
andb
lcall
cmp
xor
in
orb
lods
jb
sahf
cmp
push
and
ret
aas
sbb
jmp
mov
jp
ljmp
fwait
bound
je
xchg
in
test
test
mov
bound
add
lods
adc
mov
arpl
jecxz
jmp
mull
pushf
fldenv
mov
stos
les
repz
pop
je
aaa
sub
push
cmp
cmp
das
xchg
andl
push
jmp
sub
lret
sbb
test
sbb
fists
adc
sarl
mov
or
jp
mov
lcall
roll
sti
ds
ljmp
push
cmp
in
lcall
out
repnz
or
jp
fstps
mov
lret
pop
hlt
fistl
sbbl
mov
cmpsb
xchg
ret
mov
sub
and
lds
pop
popf
cltd
add
aaa
cmpsb
imul
sub
repnz
andl
imull
inc
cmp
cs
push
ss
mov
cmc
xchg
mov
aas
or
push
push
adc
lock
cltd
aad
add
mov
repz
lahf
out
mov
mov
fbstp
xchg
pop
cli
mov
sbb
bound
shlb
jns
loope
mov
mov
test
xor
ja
mov
and
adc
aaa
in
pop
test
jge
out
ja
xchg
rcl
ret
push
fsts
jbe
cmc
add
fxtract
adcl
sbb
fisubrl
add
fwait
push
adc
add
loope
lahf
jp
stc
rcll
inc
push
cmp
push
cwtl
shlb
cs
pop
sub
and
fnstenv
popf
xorl
add
fs
sub
loop
je
mov
xor
adc
dec
xchg
xlat
jno
clc
mov
notb
xor
fmuls
stc
or
mov
and
push
outsb
fdivrl
push
mov
jns
jns
ret
sbb
js
shr
jo
pop
inc
mov
ja
mov
movsb
cmp
scas
faddl
and
addb
js
arpl
pop
out
lret
movsl
dec
das
mov
aad
inc
mov
daa
push
inc
aaa
push
sub
pop
sbb
nopl
rcrl
jp
or
cmp
or
mov
fcoms
jl
rcrb
add
sti
add
ja
insb
ljmp
stc
popa
pop
andl
ljmp
push
out
push
mov
cmp
push
dec
mov
xor
cmpb
jl
jns
test
sbb
pushf
ficoms
inc
std
jg
adc
mov
fmull
add
leave
daa
sub
clc
test
pop
xchg
insb
je
enter
push
fs
inc
icebp
leave
fidivrl
xor
scas
adc
cmp
lcall
adc
lea
inc
xchg
lcall
lods
in
mov
call
sbb
lahf
and
leave
mov
addb
jnp
lcall
inc
cmp
dec
ss
pop
shlb
mov
pop
filds
xchg
shrb
jo
xor
xchg
pop
nop
add
rcr
inc
or
fsubs
inc
cmp
fsubl
shlb
and
mov
adc
sahf
dec
cmp
adc
ljmp
loope
sub
fisttps
movsl
dec
aaa
cmp
loope
stc
pop
mov
add
xchg
mov
bound
rol
iret
pop
add
push
jmp
sbb
fwait
dec
addl
xor
jecxz
setns
and
jns
sub
mov
popf
xchg
jns
es
leave
les
mov
cltd
pop
mov
test
xlat
bound
pop
in
dec
add
and
and
stos
dec
mov
mov
les
and
and
aaa
mov
out
jbe
inc
push
mov
mov
icebp
mov
or
sbb
and
adc
fdivl
dec
icebp
mov
jnp
stc
mov
and
mov
ret
fidivrs
xchg
add
and
cmp
ret
push
push
mov
push
or
rorb
ja
popf
imul
xchg
test
mov
mov
sub
enter
lea
lret
and
call
adc
adc
ljmp
push
push
ss
mov
out
mov
mov
and
test
cmp
mov
add
mov
mov
push
push
lcall
and
adc
test
add
mov
call
lcall
cmp
push
idivb
daa
pusha
cmp
in
mov
or
movhps
inc
dec
icebp
push
or
into
fucomi
inc
mov
arpl
mov
push
sub
test
mov
rorl
sbb
or
lahf
mov
lcall
push
push
mov
sbb
fwait
subb
sbb
lahf
sub
push
repz
mov
and
jbe
shlb
inc
scas
xchg
mov
mov
dec
test
shlb
jmp
xchg
pop
popa
jae
ffree
ds
cmpsl
stos
push
pop
jae
inc
pop
test
add
adc
into
mov
pusha
xlat
sbb
popa
jl
inc
sbb
pusha
push
xchg
bound
xchg
pop
jp
pop
mov
loopne
adc
jmp
shl
sbb
popa
cmp
jg
push
mov
adc
or
pop
scas
xor
and
ljmp
pop
xor
sub
pop
std
fldt
fwait
insl
inc
leave
jp
sub
cmp
mov
jo
sub
jl
lds
mov
aaa
mov
xchg
mov
cmp
addr16
xor
scas
into
inc
push
lods
push
cmovbe
in
sbb
dec
add
lcall
nop
inc
add
stc
in
xchg
lea
pop
xlat
pusha
inc
inc
rorb
icebp
or
sbb
mov
cmp
aam
repnz
in
mov
aas
jge
mov
jne
cs
test
cmp
ret
fcmovbe
dec
xchg
add
lcall
add
imul
add
cmp
mov
pop
mov
frstor
outsl
jnp
ss
cmp
pushf
dec
lret
push
push
inc
adc
xchg
pop
fadds
mov
xchg
and
jbe
addr16
stc
jb
push
add
mov
inc
inc
mov
or
popl
mov
leave
jns,pt
inc
imul
pushf
cwtl
adc
inc
sub
bnd
cwtl
adc
jle
push
mov
xchg
fidivrl
cmp
push
ret
mov
pop
pop
popf
pop
imul
dec
pop
sbb
xorb
daa
repz
js
xchg
jle
push
pop
subb
mov
jo
inc
cmp
movsb
in
out
jecxz
lcall
inc
cli
fwait
xchg
sbb
mov
inc
scas
mov
dec
std
mov
cmp
pop
or
push
dec
adc
cli
lock
cmc
xchg
loope
xorl
add
pop
in
jno,pt
sbb
pop
mov
xchg
lods
xchg
into
js
fsubr
mov
and
fwait
mov
rcrl
push
sbb
or
jmp
jl
aam
or
sbb
cmpl
scas
ffreep
test
mov
nop
cmp
lods
or
jge
jg
adc
inc
leave
mov
mov
bound
xchg
jne
mov
push
aas
or
sub
push
cmp
jle
test
or
inc
adcb
cmpsb
jmp
cwtl
push
dec
icebp
push
mov
cmp
add
in
imul
push
and
inc
mov
mov
mov
outsw
dec
imul
mov
jbe
cmpsb
stc
mov
mov
out
test
notl
sbb
mov
icebp
xor
pop
cmpl
sub
jo
xchg
out
fnstsw
dec
imul
mov
addb
out
sahf
repz
dec
lahf
scas
xchg
popf
hlt
sbb
add
test
testl
test
lea
jo
movsl
or
sub
je
pop
ja
push
push
daa
jl
sarl
sbb
pop
and
sti
and
and
add
push
xor
push
stc
inc
leave
call
push
pop
mov
pop
adc
push
sub
dec
lock
mov
rcll
out
sbb
inc
adc
adc
sbb
cld
and
popf
xchg
sbb
mov
cmpsb
xlat
pusha
mov
cmpsb
inc
and
or
adc
or
outsl
popa
lcall
push
add
dec
mov
test
addl
div
push
xor
lahf
shll
pop
call
or
inc
subb
inc
repz
jne
inc
ds
shrd
sbb
ret
xchg
mov
stos
in
gs
sbb
push
mov
dec
inc
cmp
add
inc
xchg
jno
cmp
mov
push
sub
js
fidivrl
sub
iret
test
cmp
arpl
jmp
cmpsl
sbb
leave
insl
dec
ret
cs
dec
test
pop
fnsave
pop
push
dec
ss
push
mov
mov
ss
dec
stos
in
stc
xor
arpl
add
jecxz
test
cli
push
sahf
mov
dec
adcb
push
stos
push
sbb
out
sbb
pusha
fldenv
arpl
pop
and
enter
or
jle
push
pop
jne
ljmp
mov
lahf
int
add
jg
imul
cmp
and
add
scas
ds
lret
pop
mov
jne
mov
dec
ret
push
test
push
loope
jg
xor
arpl
xor
mov
dec
dec
add
pop
jmp
jmp
fdivrl
fcoml
or
sub
pop
cmp
cmp
sbb
pop
popf
cli
push
xchg
cltd
push
cmp
pop
cmp
pop
sbb
out
pop
xchg
outsb
mov
add
or
xchg
out
enter
and
sarl
xchg
rol
push
idivl
ss
sbbl
dec
jecxz
mov
icebp
add
push
movsl
add
pop
inc
pop
rcrl
cmc
push
push
cltd
cmp
je
dec
aaa
jno
mov
xorl
push
or
ficoms
cltd
mov
out
mov
outsl
mov
inc
push
add
bound
lret
leave
outsl
addr16
xchg
fisubs
out
sbb
dec
cmp
cmp
mov
and
cltd
inc
lods
dec
aas
xchg
scas
pop
insl
rcrl
in
rclb
dec
pop
into
aas
fwait
cmp
fcoml
outsb
mov
jmp
mov
lock
lcall
pushf
test
dec
sub
sub
inc
pushl
test
lods
lret
mov
mov
inc
xchg
bound
aaa
mov
and
adc
notb
jmp
jae
rolb
arpl
dec
inc
push
xchg
lods
mov
repnz
mov
cwtl
cmp
pushf
testl
enter
cmp
push
push
push
add
aaa
int3
aaa
mov
xchg
pop
notl
add
cmpsl
movsl
ds
fstpl
mov
loopne
loope
loopne
jo
mov
adc
clc
pop
cmp
xor
pop
in
mull
mov
insl
filds
xor
xchg
add
xchg
push
dec
addr16
add
rclb
arpl
pop
repz
add
sahf
bound
repnz
add
xchg
mov
jb
inc
pop
and
or
fadd
jmp
lret
inc
mov
arpl
jge
incl
lds
xchg
arpl
add
jl
test
arpl
jne
insb
inc
in
mov
fcomip
pop
aad
xchg
lock
sahf
ficoml
or
cmp
lea
push
xchg
inc
movsl
imul
sbb
notl
xchg
dec
ljmp
sti
div
xchg
adc
or
in
mov
mov
out
mov
pop
outsb
cmp
lahf
adc
rcrl
push
test
jecxz
xor
mov
sub
pop
std
dec
fstpl
lret
popa
mov
push
pop
ficomps
outsl
orl
call
inc
pop
xchg
js
mov
icebp
gs
sbb
sbb
and
push
dec
lahf
out
faddl
jae
jae
fs
xchg
add
pop
out
sub
inc
test
fsub
cwtl
aad
and
push
ljmp
sub
mov
mov
pop
xchg
je
test
mov
jb
insb
adcl
jo
cmp
pusha
mov
pop
mov
adcb
jp
enter
push
sub
mov
popl
stc
imull
xchg
jmp
div
imul
test
lods
pop
cld
pop
sbb
cld
mov
repnz
pushf
or
aas
pusha
roll
cmp
pop
or
scas
test
mov
sbbl
addb
and
adc
js
mov
lahf
mov
in
jb
pop
mov
inc
cltd
enter
sbb
adc
push
lret
mov
xchg
xchg
sub
xchg
lea
xchg
pop
jnp
outsl
adc
dec
or
scas
incl
test
mov
pop
les
cld
dec
mov
lea
push
enter
mov
cmp
insb
mov
sub
inc
ja
xor
rorl
cmovnp
push
scas
sub
add
and
imul
outsb
mov
mov
je
and
push
sbb
imul
test
movl
fs
das
addr16
or
and
in
xor
or
std
add
out
sub
popa
sbb
push
push
sbb
js
add
mov
out
inc
ja
adc
xchg
add
mov
sbb
add
adc
lods
jns
ret
mov
sub
rorl
pop
inc
push
jmp
push
inc
lods
jns
cmp
and
mov
stc
ds
cmp
or
sahf
sub
xor
sarb
bound
scas
jno
ljmp
push
pop
mov
rorb
dec
jnp
test
incb
mov
std
ds
cmp
xchg
push
cmp
mov
mov
push
test
pop
pop
lahf
mov
mov
xor
lret
in
imul
cltd
loope
jge
xchg
push
jp
adcb
sbb
rorl
aaa
push
pusha
nop
bound
and
pop
rcll
inc
mov
lds
inc
sub
fs
into
jne
andl
jmp
lahf
andl
mov
mov
push
clc
adc
push
lods
pop
cmc
rorl
pop
or
jae
adc
iret
add
std
add
loopne
mov
add
or
mov
cmc
leave
pop
inc
lret
adc
mov
in
shl
test
mov
xor
lea
xchg
add
cmpsl
lcall
aas
or
fnstsw
cld
adc
fistl
stc
adc
scas
adc
jecxz
test
mov
lret
xchg
adc
push
cld
daa
push
add
sbbb
jne
outsb
or
fcoml
push
mov
adc
sti
ja
jb
or
pop
mov
pushf
xchg
jg
aam
mov
dec
mov
dec
js
xor
imul
pop
fiadds
scas
pop
add
scas
adc
add
cmpsb
or
int3
bound
mov
lret
popa
rcll
outsl
cmpb
jb
cli
add
xor
add
or
in
stc
jb
mov
or
dec
push
ja
repz
adc
add
inc
shll
mov
loopne
dec
ljmp
sbb
add
adc
jbe
xchg
fwait
adc
jnp
inc
sub
cmpb
or
mov
aaa
or
or
leave
dec
out
out
sub
sti
jno
inc
loopne
inc
rorl
mov
lahf
stos
sub
add
cmpsb
mov
jecxz
pop
je
lcall
inc
cli
xchg
out
inc
pop
scas
dec
or
cmp
rclb
hlt
xchg
faddl
les
jmp
xchg
cmp
dec
cli
pop
jle
push
jl
mov
ret
out
cmp
add
mov
cmp
addr16
inc
cmp
cmc
sbb
cltd
dec
sbb
jecxz
shll
cmp
popa
xchg
inc
sbb
pop
adc
xchg
push
xor
pop
xlat
cli
xchg
dec
negl
mov
adc
mov
les
outsb
dec
add
push
test
int3
movsl
orb
xor
fisubl
fcmovu
jp
sbbl
sahf
mov
sbbl
mov
outsb
leave
fidivs
jne
sbb
popa
dec
pop
jmp
fstpt
add
js
dec
aaa
mov
decb
lret
inc
test
sbb
stc
mov
sti
mov
stc
repz
sub
push
push
inc
outsl
stc
dec
ja
fisubl
arpl
hlt
call
cmp
inc
pushf
dec
fwait
cld
inc
mov
fdivr
or
clc
sahf
into
lods
adc
loop
aas
xor
popf
jp
dec
inc
xlat
jbe
rorl
call
or
xchg
jae
cwtl
sti
push
sbb
ja
fstps
pop
sbb
loopne
rcll
inc
adc
cmp
xor
cmc
xlat
adc
sti
mov
jge
pop
orl
push
shl
mov
mov
lahf
push
push
in
or
sbb
xchg
mov
mov
add
leave
scas
push
xchg
push
xor
add
mov
lds
or
insb
or
pushf
push
push
clc
daa
popa
sub
adc
repnz
inc
out
adc
mov
pushf
xor
adc
pop
inc
orb
mov
jb
mov
jle
cmc
push
xchg
testl
mov
bound
sub
adc
push
jno
scas
iret
adc
dec
jno
push
push
call
xor
les
cmp
jbe
push
es
jnp
cmp
cmpsl
mov
dec
outsl
loop
out
outsb
add
push
andb
cmp
push
sbb
mov
dec
mov
fldenv
test
loop
pushf
adc
mov
add
jb
daa
ljmp
andb
mov
fs
inc
repnz
pop
cmpsb
aaa
pushf
and
mov
pop
xor
lods
cs
push
insl
mov
lcall
push
pop
ja
jge
subl
and
test
imul
jge
inc
sbb
xchg
push
xchg
lods
repnz
sub
pop
jp
mov
sbb
push
les
pusha
loope
ja
sbb
jb
push
sub
pop
or
adc
jg
inc
push
and
pusha
test
xor
out
mov
push
test
loop
popa
pop
roll
addr16
sub
push
mov
insb
adc
sti
or
push
mov
push
and
xlat
jb
xchg
into
push
out
out
addr16
add
ss
jns
cmp
and
sbb
xchg
mov
dec
dec
sub
pop
repnz
cmp
ficompl
mov
cltd
sbb
sti
add
je
loopne
sbb
pop
adcl
add
es
fmull
jmp
sub
xchg
push
xchg
inc
shlb
push
dec
fsubrp
push
pushf
aad
enter
xchg
pop
out
es
cmpsl
addl
add
movsl
dec
dec
das
mov
scas
mov
ret
mov
mov
test
add
push
fiaddl
lds
in
mov
xchg
jno
subb
jge
insl
jge
push
inc
aaa
rclb
add
pop
jg
add
incb
push
testb
leave
inc
cli
push
push
rclb
mov
and
xlat
out
add
dec
push
inc
xchg
lahf
enter
pusha
and
addr16
bound
in
hlt
xorb
push
outsl
pop
add
jmp
xchg
iret
mov
sub
lcall
cmp
pop
pop
add
sub
sar
cwtl
pusha
and
sub
cmp
mov
ja
addr16
inc
add
cmp
cmpsl
ljmp
xchg
inc
fisubrl
inc
cltd
mov
mov
push
fcompl
into
push
fstps
xor
adc
sub
lahf
and
inc
inc
mov
and
ret
sbb
mov
arpl
xchg
xchg
mov
push
fstps
sub
xchg
test
enter
mov
dec
dec
test
cwtl
push
and
ljmp
lcall
lods
mov
dec
push
sti
jno
add
aam
adc
sarb
inc
fstps
push
fldt
imul
mov
fadds
stos
jg
dec
lahf
test
andb
lods
andl
mov
and
subb
dec
shll
inc
xor
xor
int
inc
mov
in
insl
mov
xor
imul
add
sub
mov
push
popf
xchg
int3
dec
fildl
sub
jp
leave
push
xor
sub
sarb
adc
mov
lds
dec
clc
push
outsb
test
dec
das
call
shl
pop
std
pusha
add
test
mov
sub
dec
clc
xchg
mov
add
adc
xchg
push
dec
mov
test
mov
mov
sub
or
cmpsl
pop
lahf
and
add
dec
inc
and
outsl
bound
push
add
ret
faddl
adcl
js
push
into
push
lods
fnclex
push
mov
popf
push
pop
lcall
push
pushf
inc
shrb
or
jecxz
imul
xchg
xchg
addr16
xor
dec
fdivrs
mov
sbb
lods
lock
andb
push
pop
push
pop
pop
ds
cmpsb
dec
ficompl
test
test
mov
dec
orb
pusha
inc
sub
jge
add
push
inc
int3
sub
imul
pop
call
stos
sbb
pusha
jne
dec
lahf
dec
rcrb
jecxz
pop
jo
add
sub
and
mov
push
into
cld
pop
lret
push
and
sub
mov
xlat
out
mov
inc
xchg
idiv
and
push
or
scas
es
xchg
and
mov
dec
pop
imul
and
dec
adc
lahf
inc
sbbl
inc
fldlg2
push
xlat
xchg
mov
scas
jo
xchg
add
fcoml
pop
mov
rclb
sti
and
sub
hlt
out
push
es
adc
ret
fbstp
imul
mov
testl
push
jp
xchg
add
add
jo
add
pop
stc
lock
xor
jmp
push
cmp
xor
pop
ret
adc
lret
pop
fs
fnstenv
rorl
gs
mov
add
fcomps
jg
mov
js
pop
stos
js
out
addr16
or
mov
inc
incl
pop
and
dec
inc
testb
mov
jg
mov
fisttpl
jecxz
pop
sub
pushf
popa
sbb
ljmp
jb
adc
sahf
inc
cltd
jb
xchg
lea
xchg
pop
push
and
push
sahf
pop
adc
or
cmc
mov
mov
xor
cmp
jb
pop
push
push
aad
lahf
ljmp
icebp
mov
jg
mov
bound
mov
scas
int3
pop
jl
imul
inc
or
jg
in
push
add
adc
pop
cli
fucom
or
push
inc
mov
jg
mov
jg
call
sub
fcomps
mov
addr16
sub
sbb
add
pop
test
sub
jno
or
cmp
xchg
mov
outsl
jno
sbb
lahf
sbb
mov
mov
loope
push
adc
pop
push
data16
dec
mov
lcall
aaa
mov
or
mov
pusha
stos
idivl
pop
out
jecxz
xchg
pusha
mov
push
sbb
call
stc
adc
inc
les
push
sub
and
ljmp
mov
lods
lds
dec
outsl
dec
inc
or
jae
xchg
mov
or
or
mov
cs
cmp
mov
test
xor
les
scas
inc
shrl
sbb
add
bound
test
xchg
cmc
scas
test
dec
push
adc
pusha
cmp
test
mov
jmp
mov
ret
clc
rcll
clc
lods
or
or
or
push
fstl
ret
pop
imul
stc
enter
daa
xchg
lods
xrelease
inc
dec
xor
sbb
mov
mov
pop
lds
fistps
pop
fsubs
xchg
outsl
stc
fisubs
inc
test
dec
pop
shl
in
insb
mov
jb
cmp
inc
lock
test
fsubrs
sbb
out
icebp
fldenv
pop
xchg
mov
jp
and
lret
xchg
sub
jo
jno
lahf
pusha
sbbb
out
mov
inc
incb
push
sbb
mov
jge
push
xchg
mov
jp
xor
sbb
movsb
into
inc
movsl
jecxz
bound
mov
call
shl
pop
jge
add
add
cmp
sub
adc
js
jb
or
sub
repz
popf
inc
sahf
xor
pusha
mov
add
cmp
pushf
dec
test
xchg
aas
push
push
cmc
fwait
jge
cmpsl
mov
dec
cmp
test
stos
sahf
jecxz
mov
fs
and
ds
or
icebp
cltd
push
mov
xor
sarl
pop
jge
jb
push
ljmp
mov
fsubs
mov
filds
pushf
jbe
cmpsb
pop
pop
push
adc
pop
push
je
add
in
das
fstpl
xor
mov
scas
push
and
loope
adc
inc
lar
in
jmp
cmp
xchg
adc
fildl
fsubrs
xchg
arpl
ret
mov
sbb
fiaddl
mov
push
mov
pop
xor
aad
orb
repnz
mov
dec
pop
jg
add
add
jb
jle
xor
xchg
js
das
icebp
pop
inc
sbb
js
jmp
xchg
cmp
pop
in
and
sbb
or
mov
je
xchg
scas
lcall
stc
cmp
test
std
xchg
ja
and
in
sti
shlb
ljmp
js
dec
ja
lcall
cld
fwait
cmc
rorb
addb
repnz
lsl
inc
mov
movsb
sbb
scas
ljmp
push
jb
scas
dec
aas
hlt
mov
mov
and
roll
outsl
push
mov
push
test
data16
or
movsb
fldcw
mov
inc
mov
lods
mov
test
xchg
xor
pop
cmp
and
test
sub
mov
fldcw
and
sub
fsubs
popf
jns
inc
xchg
push
fidivs
adc
popa
lahf
sahf
bound
push
test
push
mov
dec
test
popf
mov
mov
outsl
lods
pop
inc
aas
cmc
pusha
insl
mov
ret
mov
xor
push
cmp
jns
pushf
fsts
aad
aas
pushf
dec
cli
cltd
adc
xorb
cmp
push
jle
mov
inc
mov
push
pop
add
pop
or
stc
jp
lods
mov
dec
xor
gs
mov
popa
pop
loope
pop
out
push
mov
mov
mov
dec
std
andb
ffreep
test
data16
sub
cmp
inc
mov
mov
test
fwait
imull
in
mov
in
iret
lods
push
push
add
rorb
mov
mov
push
xchg
pop
insl
mov
mov
lcall
inc
xor
aas
cmc
dec
add
sbb
test
loopne
cli
xchg
inc
sbb
jg
out
pushf
mov
ja
fs
sbb
or
popa
or
pop
mov
repnz
push
in
test
xchg
into
jbe
mov
cmp
in
cmp
push
mov
addb
push
push
inc
sub
pop
cld
jp
or
cmpsb
scas
sub
lods
or
push
pop
mov
mov
data16
or
cmp
movb
add
mov
jp
sti
test
sbb
int
push
rolb
sub
stc
aaa
cmp
mov
mov
cli
cmc
or
lret
outsl
fs
or
lcall
push
dec
xchg
movsl
push
fadd
mov
inc
incb
xchg
fwait
xchg
icebp
lock
cmp
sbb
pop
or
xchg
inc
gs
mov
push
jecxz
cli
gs
jg
add
dec
fiadds
mov
stos
sbbl
or
scas
mov
xchg
dec
mov
pop
hlt
sbb
das
int3
mov
push
jnp
mov
add
inc
aas
adc
sbb
neg
mov
ficompl
jp
pop
movsl
bound
mov
out
mov
inc
pop
dec
imul
jp
adc
mov
push
inc
in
jmp
imul
ss
out
je
loope
test
xchg
xor
jmp
xor
add
xchg
sbb
adc
jmp
mov
sahf
repnz
sarb
push
mov
rcll
xchg
ja
or
out
push
inc
sahf
in
dec
cmp
mov
jb
lahf
shrb
sub
call
test
lret
sti
and
cmpsl
adc
cli
mov
pop
push
dec
lcall
mov
xor
addl
ljmp
cmp
xlat
js
cmp
jl
pusha
push
and
and
arpl
jb
push
push
lods
adc
out
int
stos
sarl
sbbl
xchg
xchg
lret
mov
sarl
mov
pop
lahf
mov
push
dec
xchg
bound
out
lods
mov
shlb
test
and
pop
xchg
dec
mov
push
cltd
add
dec
push
push
pop
inc
lcall
iret
jg
mov
into
cmc
and
xorl
mov
sti
aam
out
sahf
dec
mov
movsl
popf
std
fiaddl
mov
testl
or
pop
jb
jle
pusha
cmp
dec
dec
push
daa
outsl
sahf
cmp
ljmp
repnz
xchg
dec
pop
push
pusha
sub
ficompl
and
rclb
lcall
or
lods
or
add
fnstcw
mov
mov
jp
incl
dec
pop
sbb
push
sbb
or
fiaddl
popa
and
data16
scas
ljmp
daa
cmp
xchg
add
mov
stc
mov
loope
xor
jmp
imull
pop
add
mov
test
or
es
dec
xor
sub
push
lret
adc
pusha
mov
or
cmc
sbb
ljmp
mov
and
add
pop
xchg
cmp
test
lahf
jp
fildl
popl
lea
inc
pop
enter
mov
lods
pop
xchg
lcall
add
adc
outsl
sub
inc
mov
popw
cmpb
lock
mov
xchg
test
push
cmp
mov
sub
or
andl
mov
sbb
movsl
jo
adc
mov
test
or
cmpsl
out
je
daa
cmpsb
cld
sbb
lret
rcrb
push
out
jge
jge
xchg
jge
jne
test
hlt
dec
fwait
daa
lahf
js
mov
cwtl
aad
jno
sub
cmp
rcrl
or
iret
bound
cwtl
orl
push
out
mov
xor
inc
adc
call
xchg
idivl
in
fistpl
lcall
decb
fsubrl
popf
scas
mov
subb
test
mov
cwtl
xlat
or
addr16
shlb
and
test
adc
clc
push
pop
test
jae
filds
or
mov
mov
lahf
pop
sub
adc
add
fs
rolb
adc
xorb
cmp
rcr
fsubrl
jecxz
pop
jmp
mov
cmp
sbb
stos
mov
inc
sti
add
into
sub
xchg
cmp
in
sub
jbe
sbb
cwtl
sbb
mov
adc
arpl
sbb
add
adc
cmp
fbstp
add
sarb
or
add
add
cmc
adc
adc
cli
xchg
rorb
mov
dec
mov
fsubr
sbb
cmpsb
push
lret
mov
xchg
data16
cmp
addl
mov
into
addb
sbb
nop
xchg
push
aaa
push
hlt
leave
repz
mov
shrl
call
inc
cmp
shll
xchg
inc
xchg
sub
sbb
push
daa
lea
fstl
mov
push
lahf
mov
fyl2x
cmc
adc
cli
inc
fisubrl
fdivs
imul
je
ljmp
mov
xchg
dec
pop
out
leave
insb
pushf
cpuid
and
push
mov
mov
in
rclb
mov
fdiv
test
sbb
mov
sti
xchg
shlb
jp
and
or
mov
add
ret
and
cmpsb
jno
sbb
lahf
adc
fsubl
and
test
add
lods
loope
mov
rolb
pop
pop
dec
clc
stc
sbb
in
sbb
mov
mov
mov
into
cs
cmp
cld
fdivrl
sbb
test
push
xchg
popa
sub
pusha
mov
mov
and
add
call
int
mov
in
pop
scas
sbb
and
or
arpl
mov
insb
aas
cwtl
mov
pop
fwait
jecxz
clc
mov
sti
stc
or
mov
xchg
rcrb
testb
out
add
test
push
mov
push
inc
test
mov
ja
add
aaa
or
ret
sub
xlat
add
and
ret
aaa
das
repnz
popf
sbb
shll
out
fisubl
test
fcmove
mov
test
add
and
imul
gs
call
fildl
inc
ret
mov
cli
or
movsl
into
maskmovq
imull
xor
adc
testl
loopne
jne
adc
ret
cmp
gs
fists
cmp
inc
add
mov
mov
jbe
or
pop
cmp
jne
mov
mov
test
mov
mov
das
push
push
push
adc
test
jge
cld
push
pop
or
lds
xchg
inc
add
ja
mov
jne
rol
xor
hlt
bound
and
mov
sahf
xor
mov
clc
push
inc
testl
mov
stc
add
sahf
orl
in
mov
popa
inc
mov
test
scas
pop
push
dec
in
sahf
or
jp
cwtl
loopne
pushf
mov
push
xor
outsl
js
push
xor
ljmp
lahf
push
lock
lcall
bound
shrl
mov
test
loope
lcall
and
pop
add
sbb
fwait
mov
iret
sub
dec
jecxz
pop
mov
fldcw
inc
push
call
push
mov
dec
dec
and
push
push
lret
roll
repnz
daa
push
push
sub
loopne
aaa
lods
lret
xchg
pop
icebp
jmp
mov
dec
pop
dec
call
xchg
fs
pop
cmp
xchg
and
pop
cmovs
or
testl
mov
mov
dec
and
mov
inc
mov
in
add
mov
mov
out
in
fmuls
lahf
xchg
xchg
xchg
or
imul
dec
pusha
jo
xchg
and
loope
push
mov
ds
sbb
xchg
cli
mov
sahf
push
jge
test
sbb
das
push
mov
adc
fldcw
add
es
pop
xor
leave
sub
mov
or
stos
loopne
sbb
mov
cld
aad
sub
lcall
shl
xor
cltd
into
mov
bound
sti
mov
mov
std
and
shll
jge
sbb
test
ficompl
data16
test
ljmp
lea
je
fucomp
pop
lods
push
inc
lcall
in
xchg
inc
lahf
test
jp
push
fwait
inc
adc
test
imul
adc
add
rcrb
mov
push
jae
mov
xchg
mov
adc
mov
xchg
loope
imull
test
jno
rcl
incl
xchg
cltd
out
in
mov
fdivrp
pusha
push
adc
jmp
push
test
pop
sbb
scas
daa
add
mov
test
add
std
scas
lods
or
xlat
ret
add
jl
fdivrl
jle
cmp
inc
xchg
jecxz
imul
xor
xchg
push
sub
mov
mov
sbb
dec
dec
sub
cltd
lahf
mulb
jl
mov
inc
and
flds
clc
fs
pusha
sub
fldenv
mov
inc
sub
lock
mov
loopne
mov
mov
add
jns
mov
cmpsl
pop
pop
dec
fisubl
in
enter
pop
mov
cmc
inc
popf
jp
mov
dec
repnz
lcall
cmc
jg
das
or
aas
dec
stos
and
scas
popf
mov
loop
mov
push
push
mov
adc
mov
stos
lods
mov
xchg
loope
or
mov
jle
mov
inc
nop
push
xor
test
sbb
and
pop
add
in
xchg
inc
popf
ja
cmp
fisubl
and
dec
gs
mov
xchg
add
cmpsb
mov
insl
pop
out
ja
jg
out
in
sub
and
mov
add
push
dec
jle
rcr
add
mov
sbb
dec
pop
std
rclb
adc
dec
enter
dec
and
gs
xor
jecxz
pop
cvtps2pi
test
movsb
mov
sub
cld
and
lcall
pop
lds
aaa
xchg
sbbl
test
push
icebp
sbb
and
int3
dec
das
enter
test
inc
bound
mov
cmc
jmp
and
push
xchg
fsts
inc
mov
fidivl
test
insl
cwtl
es
jo
cwtl
lods
mov
mov
jns
test
hlt
stos
xchg
sbbb
xchg
xor
mov
ljmpw
xchg
mov
cwtl
mov
push
jno,pt
sbb
lahf
cmpsl
dec
ja
pop
lea
or
fcmovnbe
jecxz
add
les
push
sub
bound
jnp
and
jp
add
pushf
or
orl
movl
pop
pop
in
loope
add
pop
adc
mov
insl
pop
ret
imul
ja
in
jecxz
jae
in
lcall
orl
push
jbe
out
mov
cwtl
lcall
ret
pop
inc
add
leave
bound
lock
je
push
lcall
lock
mov
and
xchg
adc
fisttps
and
adc
jno
out
nop
int3
xorb
or
jb
dec
mov
pop
mov
jle
inc
mov
ret
jg
fs
sub
jmp
pop
fnstenv
or
mov
mov
jbe
std
lock
cs
pop
mov
sbb
repnz
pop
xorl
jnp
ret
mov
inc
xchg
adc
sub
and
mov
mov
pop
pop
inc
outsl
mov
leave
sti
xchg
xchg
add
mov
cs
mov
mov
loope
loope
xchg
sbb
aam
fidivrs
lds
push
mov
mull
stc
inc
inc
popa
push
loop
xor
xchg
inc
sbb
fistpl
xchg
in
lods
mov
ret
xchg
movsb
stos
lea
and
cs
repz
or
pop
stc
mov
adc
addb
gs
pop
push
xchg
xchg
out
clc
mov
dec
sbb
jp
mov
in
adc
xor
mov
daa
sub
xchg
aad
adc
je
sub
push
rorl
insl
xorl
push
sub
mov
stos
xchg
lret
add
ja
push
xor
pop
pop
aad
arpl
pop
fisubrl
sbb
push
mov
loopne
rclb
out
xorb
pushf
add
outsl
mov
mov
inc
mov
inc
das
xorb
pop
sbb
or
nop
es
shl
test
adc
test
and
clc
sbb
add
int
jmp
push
test
add
xor
and
and
ret
add
mov
adc
pop
rorl
mov
jp
push
out
xchg
pusha
adc
inc
or
adc
cli
scas
mov
inc
js
addb
std
out
enter
std
pop
repz
mov
xchg
xchg
mov
lret
fs
mov
xor
xchg
mov
mov
test
stc
mov
pop
jne
mov
xor
filds
inc
push
dec
into
inc
lret
or
push
daa
xchg
xchg
mov
push
imul
sbb
or
pop
cwtl
fsubr
js
lahf
or
negl
fnstenv
pop
jg
je
dec
int
fiaddl
xor
or
mov
jbe
sub
loopne
xor
jge
pop
mov
sahf
inc
pop
adc
xchg
lret
or
addr16
xchg
push
jp
inc
mov
addr16
mov
dec
mov
ret
sbbl
je
inc
aaa
loop
enter
or
xchg
xchg
hlt
iret
mov
nop
adc
and
mov
xchg
cld
fs
outsb
xchg
and
subb
mov
orl
mov
xchg
int
lods
inc
dec
inc
cmpsl
in
mov
mov
aad
lods
inc
xchg
mov
add
sub
adc
sub
mov
lret
loope
mov
dec
pop
cs
mov
cwtl
iret
aaa
jmp
lret
iret
mov
daa
das
dec
push
xchg
sbb
lods
push
add
fstps
leave
arpl
movntq
pop
mov
decl
jl
push
pop
or
jae
dec
sti
mov
push
inc
add
jae
inc
mov
inc
loope
les
or
xchg
pop
pop
adcl
test
aaa
xor
ret
les
mov
inc
hlt
test
xor
daa
or
cmc
ret
fwait
sub
jno
test
sub
int
cmpsb
mov
or
sub
adc
lea
push
inc
pop
dec
outsl
or
fldenv
mov
xchg
addr16
xchg
or
into
adc
push
sbb
inc
xchg
cli
repz
sbbb
popl
jne
mov
imul
andl
mov
push
lcall
adc
mov
jl
out
in
or
adc
dec
pusha
lcall
in
jno
loop
repnz
push
js
sbb
cmp
adc
mov
scas
xor
add
adc
cmp
in
or
lds
test
mov
cmpb
cmp
sarl
dec
pop
les
push
push
stos
lods
xchg
insb
adc
js
imul
loopne
xchg
icebp
push
mov
cmp
or
test
idivl
addr16
or
repnz
add
out
xor
jp
cwtl
fadd
add
aad
xchg
jns
xchg
mov
ja
push
cmpsl
ret
jp
adc
aaa
loop
rorl
in
int3
imul
xchg
sbb
pop
insb
pop
push
mov
popf
mov
or
mov
jmp
lcall
flds
call
add
pop
ja
repnz
xchg
popf
xor
popa
or
lea
out
mov
inc
jo
lcall
sbb
lods
add
cmpsl
xchg
daa
enter
lock
xor
out
iret
sub
popf
adc
es
scas
push
push
test
mov
xchg
popf
inc
cld
xchg
test
leave
or
dec
pop
cmp
xor
movsb
mov
xchg
pop
xlat
cmp
je
mov
mov
xlat
hlt
loopne
pop
cmp
push
inc
aad
clc
or
dec
mov
int3
repz
dec
or
out
fstl
out
rcll
dec
mov
enter
and
push
add
mov
fdivrs
or
pop
mov
mov
adc
cltd
clc
xchg
movl
incl
add
sahf
mov
sbb
cwtl
les
aam
gs
inc
push
fdivs
xor
sub
sub
lds
sbb
mov
jmp
mov
cld
mov
cmp
dec
push
dec
pusha
scas
jno
shlb
xor
lods
loopne
push
jp
add
mov
andl
sub
mov
xlat
incb
and
and
adc
mov
sbb
dec
or
pop
jle
sbb
rcll
ja
mov
outsb
rolb
adc
lcall
xchg
enter
into
shlb
lcall
xchg
ljmp
dec
and
xchg
mov
jp
sbb
inc
add
sub
xor
mov
sbb
rcrb
and
inc
mov
ds
push
fnsave
cmp
jg
nop
sbb
inc
insb
cmpsl
and
imul
out
mov
mov
pop
movsl
xchg
out
xor
outsl
xchg
pop
out
pop
lea
or
outsl
sbbb
movsb
insl
sbb
sbb
push
dec
dec
add
sub
stos
mov
sbb
add
aaa
mov
add
mov
dec
push
and
xchg
or
test
imul
or
inc
jle
adc
scas
mov
inc
pop
orb
add
lcall
xchg
dec
mov
push
jne
jg
gs
and
outsl
mov
mov
jno
call
fyl2xp1
sbbb
stos
push
pop
jae
adc
call
cmova
dec
xchg
xchg
xor
ja
mov
inc
addb
mov
mov
ds
sbb
movsl
sub
add
repz
iret
dec
xchg
mov
inc
ds
loope
sbb
popf
test
cmp
inc
fwait
scas
js
fnstsw
stc
push
fcoms
mov
mov
sub
xchg
jne
leave
pop
and
test
sahf
mov
jne
int
xchg
mov
stos
jge
shlb
or
jecxz
lea
jp
in
xor
pop
es
fisttpll
mov
aaa
fadd
pusha
add
sbb
xchg
lock
or
pop
js
adc
fmul
out
adc
in
cmp
les
xchg
mov
sbb
cmp
shr
lret
stc
and
sbb
mov
push
repz
jns
dec
add
inc
fcoml
fcoml
jp
out
pushf
inc
ret
scas
enter
cmp
pushf
mov
xchg
and
stc
xor
cmp
push
out
inc
xor
call
enter
incb
je
pop
sub
jg
dec
fs
cmpl
add
in
and
daa
add
fistpl
pop
lock
andl
push
dec
mov
nop
lret
mov
in
sti
dec
push
xor
daa
mov
push
inc
aas
add
adc
pop
dec
sbb
in
sub
push
fdivl
std
jecxz
and
loope
lret
jae
push
stos
test
in
mov
xorb
push
add
and
add
subl
test
sahf
mov
dec
popf
or
xchg
lcall
add
pop
fwait
sbbb
sub
xchg
stos
test
pop
xor
ja
out
adc
pop
pop
inc
mov
scas
rorl
xor
push
test
aaa
mov
sub
xchg
rorl
fsubs
test
sub
mov
ret
sbb
inc
or
fwait
dec
das
mov
xor
cmp
test
jnp
adc
pusha
sahf
dec
inc
add
ljmp
idiv
daa
and
shlb
addl
mov
inc
or
stos
pop
sbb
xchg
xorb
mov
mov
imul
and
mov
and
pop
mov
mov
add
mov
xchg
xchg
xchg
mov
xor
test
dec
cmp
mov
mov
icebp
and
cmp
movsl
loope
add
pop
dec
and
jmp
adc
inc
mov
adc
adc
bound
ss
dec
pop
rcll
roll
push
gs
popl
inc
hlt
call
cmp
leave
fidivrl
enter
jecxz
mov
bound
add
shlb
add
xor
inc
cmp
pop
mov
xor
pop
jno
xor
dec
gs
pop
xchg
aas
or
mov
inc
pop
scas
scas
cmp
adcb
lcall
insb
push
mov
sbb
mov
scas
incb
and
adc
rolb
lahf
ljmp
popf
lods
leave
es
fs
mull
mov
mov
inc
pop
jbe
scas
in
cmpsl
or
sub
mov
or
sub
push
repz
xorl
inc
out
mov
push
add
push
jne
fildll
xor
jge
sbb
jge
xorl
leave
andl
inc
fsubrl
pop
sbb
lret
outsb
bound
lahf
push
mov
pop
in
out
sbbb
in
pop
lret
cld
mov
sti
dec
xlat
sbb
ds
or
xor
pop
test
loope
js
mov
sbb
lds
pop
sub
sbb
pop
lcall
dec
cmp
dec
sahf
aaa
jo
sbb
lea
test
mov
push
jo
out
adc
movsb
push
sub
fwait
or
jp
mov
popa
adc
mov
inc
arpl
outsl
pop
dec
mov
jp
inc
subb
mov
test
ds
or
xor
push
mov
and
push
mov
mov
rclb
or
jecxz
mov
aas
lcall
fadds
xchg
adc
mov
pop
out
mov
ficompl
pop
and
test
fwait
mov
inc
mov
mov
sbb
pop
push
nop
inc
testb
cli
ret
mov
inc
add
jg
mov
cmp
lock
int
in
cltd
xchg
cmc
and
out
push
inc
loopne
lods
and
add
movsl
mov
lret
push
sub
xchg
jmp
mov
sbb
movsl
pop
test
rcrl
xlat
push
push
mov
xchg
in
sbb
or
dec
xor
ja
es
aas
pop
test
push
loop,pn
xor
imul
mov
call
push
int3
ja
aas
inc
hlt
lods
or
or
int
iret
addr16
jne
test
cli
pop
xchg
inc
lds
jg
jecxz
test
xchg
jb
lcall
popl
dec
cwtl
fiaddl
push
jno
dec
pop
add
pop
and
push
stc
pop
test
pop
ja
bound
dec
popa
pop
and
mov
fdivl
sbb
daa
add
cs
push
roll
pushf
in
adc
sub
or
xor
adc
aad
call
adc
js
push
fwait
push
add
sarb
push
aaa
push
jmp
push
pop
aam
push
hlt
jne
dec
ds
lcall
arpl
bound
adc
add
sahf
insb
inc
mov
add
sbb
mov
bound
xchg
pop
xchg
xchg
xchg
mov
adc
xchg
js
aas
or
insl
xchg
mov
fsubr
sbb
into
xchg
xor
test
xorl
mov
lahf
imul
cmpsl
xchg
shrl
xchg
or
shl
movsb
mov
dec
out
js
add
push
mov
insl
inc
test
std
xor
mov
push
call
sbb
mov
ficomps
inc
sub
aad
pop
adc
out
sbb
jp
add
mov
loop
pusha
cmpsl
daa
xchg
sarl
lods
mov
popl
in
notl
jg
cld
mov
rcrb
xchg
insb
test
xor
jecxz
sub
fistps
push
mov
push
mov
xor
test
mov
scas
inc
dec
pusha
adc
inc
adc
arpl
addl
in
and
xchg
bound
iret
push
jp
addr16
xor
sarl
dec
cmp
mov
data16
sbb
in
daa
sub
inc
icebp
mov
arpl
enter
ds
cmpb
or
push
shlb
jbe
mov
cmpsb
or
mov
sbb
push
push
sub
inc
xchg
cmpsl
cmp
sub
fldenv
scas
and
je
lcall
dec
mov
mov
jmp
aam
mov
call
push
aaa
aam
aaa
dec
push
and
mov
fimuls
push
adcl
pop
sub
dec
xchg
mov
fidivrl
loopne
cmp
shl
lds
in
ror
inc
inc
out
push
cltd
imul
test
lahf
push
mov
pop
call
test
mov
mov
sub
and
sbb
ds
pop
andl
loope
push
call
cmp
push
xor
rolb
scas
les
fcom
jnp
add
iret
sub
add
mov
jecxz
icebp
sub
pop
fimull
mov
fcmovne
hlt
push
and
jne
fs
aad
cwtl
xchg
test
mov
out
rcrl
inc
pop
add
push
jmp
inc
jo
push
pop
stc
mov
push
jno
pop
cmc
add
push
jl
mov
stc
add
push
shr
clc
cli
sbbl
loopne
imul
push
fstps
faddl
movsl
mov
loop
mov
test
es
push
mov
xchg
aad
mov
cmp
xor
jg
push
and
inc
mov
mov
fiaddl
xchg
cmp
sbb
je
arpl
and
fsubrp
ret
inc
mov
adc
packsswb
divb
add
fstps
nop
sbb
mov
in
cmp
xchg
cmp
mov
and
and
popf
adc
xchg
notl
aam
and
xchg
divb
pusha
push
test
sbb
sub
popf
std
sbb
adcl
jecxz
dec
dec
jne
mov
inc
xchg
sti
in
outsb
pop
cmc
popa
insb
daa
add
xor
lds
cmp
lods
push
and
outsl
pusha
popa
push
jle
popa
push
inc
cmc
shll
arpl
rorl
js
add
dec
jg
aad
repnz
mov
jmp
add
xor
mov
dec
push
add
inc
lcall
push
fildl
lods
xchg
mov
hlt
imul
pusha
enter
sbb
xchg
aas
push
mov
test
ljmp
pushf
mov
mov
adc
shrb
es
pop
jnp
xor
imul
push
imul
adc
jo
imul
sbb
adc
dec
js
cmc
addb
or
in
ficomps
dec
mov
sbb
jg
cltd
in
pop
rcll
fsubrs
pop
inc
movl
sbb
pop
jecxz
xchg
out
mov
add
sub
enter
imul
dec
lea
inc
cmp
shll
push
mov
jo
out
push
jns
lahf
iret
sbb
and
out
repnz
or
scas
add
xchg
rolb
xchg
mov
stc
adc
rclb
or
popa
and
or
in
mov
fimull
inc
sub
outsl
mov
jno
popa
add
push
pop
out
cmpsl
and
dec
jnp
push
mov
test
aam
into
add
movsl
push
jo
sbb
cli
aas
out
test
stos
pop
cmp
mov
addr16
jno
mov
and
or
enter
push
rorl
jbe
jnp
sahf
mov
stos
mov
icebp
xchg
or
dec
push
aas
imul
imul
pop
inc
push
test
sbb
sbb
push
push
and
cld
push
mov
cld
ja
lods
cmpsl
mov
mov
test
sbb
mov
lea
stos
inc
mov
inc
pop
push
arpl
push
ret
inc
aas
mov
or
pop
insb
dec
push
test
jmp
pop
insb
push
push
mov
xor
mov
xor
inc
sbb
aas
pop
sub
js
inc
xchg
negl
and
pop
fisubl
ljmp
outsl
push
xchg
lcall
xor
dec
xchg
test
sbb
jae
les
xchg
ss
fmuls
inc
cs
pop
shll
imul
push
or
add
stos
cmc
mov
jecxz
cmp
sbb
mov
push
mov
test
je
mov
les
addb
sub
test
mov
mov
xchg
jb
mov
add
test
mov
stc
xchg
stc
mov
push
inc
aam
push
das
push
ficompl
mov
push
push
push
jge
mov
dec
pushf
xor
test
mov
mov
mov
ret
dec
scas
fadd
add
and
mov
mov
dec
fistpll
sub
adc
pop
pushf
ret
xchg
ja
push
in
and
mov
mov
pushf
enter
mov
pop
repz
loope
outsl
xor
scas
sahf
dec
xor
sarl
mov
lcall
cmpsl
lods
add
test
jecxz
imull
pop
vmovntpd
ret
cmp
out
jecxz
dec
pop
fwait
popf
leave
mov
push
inc
test
mov
enter
sbb
ja
daa
pop
es
mov
mov
or
imul
je
mov
sub
pop
addb
and
mov
imul
and
inc
out
stc
loopne
mov
scas
push
stos
mov
sub
or
stos
fwait
shrl
adc
sub
int3
add
or
dec
and
in
dec
lea
push
rclb
pop
xchg
add
pop
xchg
add
pop
fwait
add
pop
cltd
sbb
dec
jmp
mov
xchg
sbb
mov
loope
in
jbe
push
scas
mov
mov
pop
xchg
adc
repnz
sub
pop
test
ret
cmp
adc
push
test
stos
test
sbbb
incl
mov
cld
inc
add
xor
or
cmpsb
in
cmp
push
pop
mov
mov
pop
mov
push
fdivp
push
loop
pop
jae
daa
ja
push
in
mov
lds
ja
cmc
push
mov
mov
dec
stos
add
push
xorl
inc
ficomps
orb
movsl
addr16
test
out
mov
enter
jo
mov
jb
push
pop
and
loope
push
dec
push
ret
xchg
fcomp
cli
adcl
sbb
inc
inc
lea
push
and
repnz
leave
pusha
adc
mov
lcall
xchg
sub
loop
popa
mov
mov
and
mov
pop
or
push
cld
add
inc
jmp
xor
mov
test
hlt
xor
mov
stc
mov
rclb
scas
or
dec
aam
or
add
imull
push
repz
in
aad
mov
mov
jecxz
clc
ds
push
pop
and
lock
dec
sub
push
mov
pop
cmp
adc
leave
pop
stos
out
clc
insb
xchg
mov
and
mov
jecxz
call
xchg
loop
mov
mov
rcr
movsb
mov
cmc
pop
mov
sbb
mov
stc
mov
cld
mov
stos
push
lret
add
cmp
ljmp
popa
cs
mov
push
lcall
sub
int3
push
inc
cmc
push
dec
mov
pop
js
cmpsl
xchg
xchg
mov
cltd
mov
xor
xchg
incb
mov
jle
test
xchg
and
jnp
gs
mov
add
xchg
in
mov
cmp
mov
or
adcb
pop
adc
sti
add
mov
push
add
fistps
add
and
cwtl
jl
fwait
cmc
mov
pop
dec
add
mov
fldenv
and
sub
sub
sub
cmc
fs
sbb
fiaddl
xchg
ja
test
fldl
lahf
bound
jns
sahf
mov
fstps
dec
adc
inc
dec
dec
sar
mov
sub
xor
add
lea
pop
inc
movsb
loopne
shrb
ret
mov
aam
and
lret
out
into
fstpl
hlt
movsl
mov
sub
nop
rol
subb
sub
push
sbb
in
and
mov
xor
fstpl
pushf
fs
mov
movsl
inc
clc
pop
lcall
es
jle
mov
cltd
cmp
lods
mov
jle
sbb
sbb
mov
jecxz
ljmp
cltd
and
mov
mov
mov
repnz
outsl
cmp
adc
dec
and
jb
movsl
aaa
pop
inc
mov
lock
fwait
push
popf
ds
cld
inc
jle
popf
mov
mov
mov
add
loop
flds
cmp
mov
call
ficoms
mov
xor
jae
dec
dec
pop
in
or
test
lahf
divl
and
pop
inc
inc
insb
movsl
sahf
or
bnd
cmp
and
mov
retw
add
add
inc
lcall
iret
xchg
mov
and
and
push
xlat
sub
adc
iret
and
dec
dec
enter
movsl
xchg
push
add
hlt
call
ret
xchg
fstps
push
mov
rcl
repnz
lods
daa
loop
bound
test
sbb
test
mov
adc
sub
test
add
enter
arpl
sub
test
inc
mov
add
push
mov
mov
dec
ret
fistpll
cmp
ret
out
xor
orb
orb
mov
mov
xor
adc
dec
stos
mov
loope
andb
inc
aam
cmpsb
push
mov
push
dec
repz
int
sbb
lds
fsts
cmpsb
jge
pushf
imul
addr16
cmc
loopne
jecxz
mov
xchg
lds
iret
in
out
jg
mov
ret
pop
cli
popa
pusha
dec
andb
cmova
sbb
outsl
mov
cmp
add
mov
inc
mov
xor
lahf
js
pop
xor
clc
mov
test
fcompl
pop
sub
pop
jmp
clc
sub
push
ja
pusha
test
or
cmp
lret
inc
std
mov
ja
addl
xlat
sahf
pusha
out
and
xor
dec
incb
mov
lods
lret
insb
cmpsb
dec
lea
sbb
pop
add
rorl
and
add
add
pop
test
fistl
andb
xorb
cwtl
cli
outsb
mov
xchg
lcall
pop
or
adcb
das
pop
jne
insl
sub
push
sub
jl
daa
jb
add
dec
mov
and
aaa
mov
jbe
inc
xchg
fistps
test
add
ja
jo
jae
mov
lcall
cmp
mov
pop
into
mov
test
cmc
pop
xchg
fists
dec
push
mov
dec
jno
adcl
xchg
pop
xchg
test
mov
sub
andb
out
ljmp
xchg
lahf
repnz
add
adc
sub
jno
add
mov
ret
adcl
adc
and
int3
jo
inc
les
dec
xchg
pop
and
addl
movsb
lret
inc
test
mov
aaa
fsub
lret
lods
push
scas
aaa
mov
or
cmc
adc
xchg
xchg
mov
sbbl
imul
pop
lods
mov
and
sub
cmc
mov
xchg
rcrb
lea
sub
cld
ja
mov
sbb
faddl
int3
sarb
aas
xchg
xlat
xor
insb
xorl
jl
sbb
and
cmp
inc
fsubl
inc
fs
lret
fldenv
cmp
lds
test
add
dec
popf
sbb
cmc
lds
add
push
ret
sub
cmpb
shl
or
test
stos
aaa
rorb
jbe
add
pop
shr
repz
jl
push
push
imull
sub
ret
lds
aaa
mov
pop
je
mov
insb
mov
test
lea
sub
insb
mov
dec
mov
insl
notl
call
xchg
mov
out
ja
clc
or
inc
lahf
dec
adc
push
fistpl
cmpsl
pop
mov
mov
stc
daa
sahf
cld
subb
mov
stos
sub
inc
xor
sub
adc
add
sbb
and
push
xor
loopne
cmp
jmp
mov
xor
fcompl
cmp
jge
fwait
addl
pop
jge
add
stos
dec
fwait
sbb
nop
sbb
pushf
lods
cmpl
sbb
rclb
and
or
outsl
cmp
push
lock
rol
pop
xchg
loopne
lock
pop
add
cmp
dec
sbb
je
mov
aaa
cmp
testb
cmp
sar
es
and
jp
jb
pop
inc
je
clc
pop
scas
test
out
loopne
cld
addr16
cmp
xor
xchg
sbb
fiaddl
arpl
aad
pcmpeqb
pop
push
aam
cmp
test
bound
lea
lods
dec
pop
add
mov
inc
add
cmpsl
movb
out
dec
and
mov
push
dec
xor
ret
leave
mov
ja
cmpsl
in
mov
xlat
lmsw
dec
add
lret
inc
in
mov
push
movsb
jge
in
dec
mov
movsb
push
int3
mov
ss
inc
or
lds
adcb
ljmp
nop
mov
mov
dec
inc
and
imul
jns
iret
mov
out
loope
and
cltd
and
mov
push
push
dec
je
mov
aaa
or
mov
fidivrl
sub
push
repz
xchg
ljmp
std
lds
push
ja
loope
inc
icebp
pusha
pop
shll
andb
and
or
inc
mov
sahf
xchg
dec
xchg
sbb
data16
mov
add
mov
cmp
add
pop
mov
sub
imul
xlat
pusha
sahf
fs
adcl
clc
loop
loope
mov
in
pop
xchg
call
fwait
cmpsl
popf
mov
bound
cmp
xor
inc
rorl
repnz
notl
jg
or
or
xor
push
popa
xor
aaa
xchg
lds
mov
lcall
pop
xorl
mov
in
jle
add
mov
xchg
sub
mov
fs
inc
mov
mov
cmc
lea
shll
fmuls
popl
and
nop
xchg
jge
ja
fisubs
subb
xor
add
adc
inc
xchg
scas
aas
pushf
daa
jl
enter
lret
shlb
add
sbb
sub
push
orb
pop
imul
and
pop
lret
mov
pop
call
addr16
adcb
test
int3
jns
dec
push
dec
inc
xchg
jmp
sbb
dec
enter
mov
push
add
fiaddl
scas
pusha
test
and
std
lods
je
jg
push
aam
inc
lods
push
pusha
rcrb
cmpsl
push
mov
mov
mov
testb
dec
rorl
jp
push
push
sbb
js
push
mov
ja
cwtl
push
lahf
sbb
stos
icebp
or
mov
push
jnp
jbe
ja
cmp
sub
or
xchg
fistpll
imul
aad
or
icebp
pop
orl
in
pop
pop
addb
popa
dec
add
xchg
sbb
and
std
lahf
xor
cmp
aad
in
cmp
inc
ljmp
sbb
jnp
jl
iret
jbe
xorb
sbb
mov
or
xor
or
mov
repnz
popf
dec
pop
inc
outsb
cmpsb
jo
stos
and
add
pop
mov
sahf
dec
mov
mov
lods
xchg
arpl
add
repnz
pop
divl
in
lcall
mov
dec
ja
bound
cmp
add
call
into
xchg
add
daa
rcr
xchg
pop
or
ja
orl
inc
xchg
pusha
dec
inc
adc
in
pop
xor
andl
in
out
loope
push
xchg
subb
xchg
les
jmp
xchg
dec
add
mov
mov
clc
jp
mov
dec
push
lret
mov
pop
jp
mov
adc
push
pop
and
xlat
inc
sbb
insl
xlat
shrl
test
push
notl
cmpsb
mov
cmpsl
add
add
add
pop
sub
fidivl
leave
cmp
mov
fwait
jne
rcrb
fs
and
or
sub
stos
cmp
dec
pop
xor
orl
in
out
in
ja
sahf
cmc
pushf
pop
stc
scas
rorl
movsb
movsl
adc
cmp
push
sbbb
aam
popf
cmp
lcall
xor
fldcw
pop
jmp
sub
xchg
inc
mov
sub
cmp
dec
xor
inc
or
outsb
cmp
sbb
xchg
inc
push
xchg
cmc
jnp
rclb
push
ja
pop
pop
mov
decb
cmp
mov
test
lcall
and
adc
and
cmp
inc
mov
repz
push
jge
lods
enter
hlt
push
dec
pop
push
data16
je
cmp
inc
jp
add
jnp
mov
inc
aad
imul
insb
pop
in
mov
cmc
inc
fcompl
test
xor
jecxz
mov
fmull
inc
aad
adc
test
cwtl
add
popa
sub
lret
and
and
iret
push
test
sbb
into
mov
movsb
sahf
mov
mov
cmp
popa
in
push
std
je
mov
lcall
or
ss
adc
outsl
ret
cmc
inc
pop
mov
sub
bound
ja
test
mov
mov
jb
sarl
sar
and
fstl
insl
xlat
in
cwtl
addr16
enter
cmc
loope
inc
mov
int3
pop
dec
in
inc
push
icebp
cs
mov
stos
movsb
push
sahf
mov
ss
les
pop
lods
push
xor
jno
cmp
jae
push
clc
lods
mov
inc
cmp
insl
pop
jnp
pop
rolb
mov
sbb
jp
aas
push
dec
jmp
shll
mov
mov
xchg
add
rcr
ret
fcomps
movsl
sub
mov
dec
out
add
pop
test
mov
shlb
or
inc
sbb
pop
ljmp
scas
jne
push
int
jae
push
add
lahf
ljmp
pop
cmp
shlb
subb
imul
or
dec
pop
shl
and
test
xchg
jle
adc
out
shl
xchg
push
mov
scas
push
out
dec
mov
lcall
orb
xchg
or
inc
xchg
xchg
mov
push
dec
mov
jl
int
fistps
push
jbe
clc
sahf
mov
rol
push
sub
sub
xchg
pop
sub
aas
jb
xchg
push
push
push
mov
jb
jmp
mov
xor
in
pop
jg
lcall
sbb
sarl
fcompl
pop
popf
sbbb
repz
pushf
pop
sbb
stos
aas
xchg
adc
mov
pop
add
push
or
icebp
push
push
xor
fcomps
xchg
in
sbb
push
xchg
mov
inc
pop
lar
and
pop
icebp
push
repnz
add
pop
rcl
ja
aad
fldcw
test
aam
int3
mov
nop
mov
xchg
push
aad
incl
mov
pushf
jecxz
daa
or
jb
inc
lods
cltd
adc
scas
aad
cmp
and
jnp
or
cmc
pop
cmp
mov
sbb
orb
cmp
cmp
mov
rcll
pusha
test
push
xchg
movsb
pop
sbb
jmp
loope
push
mov
into
mov
adc
lcall
xor
inc
xchg
add
jge
mov
jg
sbb
imul
std
jmp
push
mov
jp
int
push
fsubl
cwtl
fcomps
lahf
add
pop
xchg
pop
js
data16
out
cmp
rcr
mov
add
adc
js
lcall
jo
mov
je
sub
ds
inc
add
sbbb
ss
enter
sub
mov
push
scas
and
ficompl
in
cmp
cmp
rcr
fcmovne
mov
fwait
sahf
dec
pop
in
addb
xor
sbb
loopne
pushw
jge
xlat
mov
lahf
lcall
idivl
in
adc
fsts
inc
dec
out
test
push
push
cmp
stc
fcomps
inc
xorb
das
lock
pushf
dec
xchg
ds
nop
jae
dec
push
stos
cwtl
mulb
pop
push
xchg
insl
push
andl
dec
mov
pop
mov
and
cmc
inc
aaa
loop
xchg
mov
xor
xchg
xor
shll
add
jns
xor
jae
inc
fs
jp
and
mov
lret
clc
xchg
inc
fsubrs
div
jg
push
pop
ret
cli
inc
in
and
cmp
mov
jg
push
sbb
and
dec
test
adc
inc
adc
dec
sahf
push
jmp
aad
inc
pusha
sbb
and
and
push
stc
dec
xor
inc
cld
jne
adc
adc
mov
hlt
dec
lea
movsl
pmaddwd
sbb
ja
mov
je
aad
iret
shl
inc
xchg
in
adc
outsb
pop
les
fsub
test
or
cmp
fidivrl
jo
sbbl
add
fildl
pushf
cld
inc
prefetcht0
pop
xchg
adc
mov
insb
cwtl
idivl
fcoms
ja
aas
scas
and
add
arpl
sbb
jg
dec
ja
sbb
ljmp
clc
fstl
lahf
outsb
jns
cmp
mov
mov
xchg
out
and
ret
and
test
clc
cwtl
cli
xchg
pusha
movsl
mov
jecxz
cmpl
loope
cs
test
sub
cmp
adc
inc
jge
rcll
mov
sub
xor
pop
pop
push
inc
pop
push
xchg
sbb
jp
jecxz
jmp
sbb
enter
daa
lcall
jo
out
mov
push
in
xchg
cmc
subl
jmp
sbb
aas
push
jbe
jae
test
and
ret
outsb
xchg
sbb
push
popf
sub
loop
mov
sbbb
cmp
pop
sbb
popf
imul
dec
xor
lods
jno
test
icebp
push
push
fsubrs
out
imul
in
out
jae
add
push
or
cmp
cmp
xchg
dec
jno
int3
sbb
pop
add
and
sub
mov
in
lahf
fwait
rclb
pop
push
loopne
xchg
mov
test
or
int3
cmpsl
cmp
mov
testl
sub
adc
mov
imul
cmp
ja
inc
imul
mov
fs
sbb
aaa
mov
inc
xchg
jbe
aaa
jae
loope
mov
jnp
mov
pop
andb
subb
imul
push
mov
inc
insl
mov
scas
movl
adc
iret
sbb
add
xor
shrb
add
fistpl
add
pop
push
insl
mov
dec
nop
je
fwait
inc
aaa
xor
mov
stos
in
aas
pop
jo
jmp
jbe
adc
xchg
ja
out
loope
int3
mov
iret
hlt
jae
mov
xchg
nop
mov
movsl
loop
and
ss
pusha
push
cwtl
in
xchg
inc
sub
sub
add
loopne
fildll
or
jge
xchg
arpl
xor
inc
xlat
xchg
out
popf
xor
int3
pop
outsb
ds
outsb
out
pop
jg
enter
cmp
ss
inc
add
mov
push
pusha
idiv
dec
adc
pop
jecxz
into
xchg
add
inc
mov
pop
or
sahf
sub
mov
fisttpl
test
inc
das
cmpsb
inc
ficomps
cli
xchg
mov
sub
idivl
mov
jmp
cmpb
mov
and
std
xchg
icebp
push
mov
int
inc
push
ret
cwtl
loopne
push
fs
mov
fidivs
in
fisubrs
loopne
mov
push
bound
mov
insb
mov
sti
negl
outsl
inc
ds
stos
xchg
out
js
push
push
mov
repnz
pop
inc
lret
sarl
movsb
les
fwait
mov
fimull
ja
clc
loope
mov
jg
xor
xor
fisttps
mov
push
pop
mov
fs
hlt
xchg
lods
or
out
ja
pop
out
addr16
jnp
pop
cs
pop
negb
filds
xor
js
mov
repnz
test
mov
push
mov
push
pop
adc
mov
mov
pusha
cwtl
clc
cmp
loop
loop
pop
inc
fs
xor
in
sbb
hlt
jmp
rorb
cwtl
and
pusha
rolb
or
ja
pop
jnp
xlat
dec
lcall
sub
push
fwait
cltd
cltd
lret
fisttps
sbb
cmc
cmpsl
push
lcall
lcall
add
jb
popa
leave
inc
stc
popf
insb
jno
pop
popa
ret
lea
scas
idivb
sub
dec
repz
shll
pop
inc
arpl
arpl
les
arpl
pushf
mov
mov
pusha
pop
ficoml
dec
inc
mov
loope
and
adc
aad
jg
popa
inc
push
push
add
imul
mov
inc
xor
in
inc
dec
mov
dec
dec
add
xchg
mov
mov
dec
and
cmp
lock
cmc
cli
add
cwtl
ret
mov
pop
xchg
ds
rorb
sub
fsincos
into
push
insl
sahf
outsb
xlat
sbb
jge
and
loopne
push
jle
sbb
cmpsl
lea
push
pop
test
outsl
ljmp
inc
adc
jp
cmp
xchg
mov
popa
sbb
fildll
fdivrl
aam
mov
or
lods
mov
loope
xchg
cli
aas
test
push
push
and
in
ss
mov
mov
adcl
xlat
xchg
out
push
push
mov
aam
sbb
push
incl
xor
lods
in
xchg
fistpl
sub
rcll
cmp
sarl
or
out
fs
movsl
cmpsb
and
push
jl
iret
push
mov
fnstcw
mov
sahf
cmp
mov
push
out
je
mov
loopw
sub
xchg
cwtl
in
adc
mov
mov
sub
jecxz
popa
adc
mov
repz
xchg
xor
inc
pop
leave
test
fwait
lds
cli
ljmp
push
or
cmc
sbb
int3
iret
xor
mov
cmp
sub
ljmp
xchg
outsl
push
fwait
add
inc
subl
or
movsl
jo
add
js
fnstcw
add
adc
das
jmp
fcos
mov
pop
ja
test
mov
rclb
mov
jg
cld
popa
and
mov
fadds
dec
mov
dec
ror
cmpsl
jg
xchg
and
in
rolb
mov
jge
xor
std
incl
notb
rcll
enter
or
add
popa
cli
pop
sub
xchg
mov
add
sahf
pop
cmpsl
mov
ds
negb
dec
inc
into
cltd
mov
mov
mov
bnd
sahf
jp
fdivrs
lock
pop
sub
mov
and
ja
hlt
imul
mov
jo
and
clc
push
ja
mov
popa
aaa
inc
and
adcl
cmpsl
in
sahf
xchg
inc
sbb
ljmpw
pop
int
dec
fstps
andl
mov
movl
mov
mov
cmp
sub
gs
xor
dec
roll
mov
sbb
cmpl
mov
pop
mov
cmp
and
sti
dec
insl
sub
jp
loop
iret
pop
cmp
fistps
mov
imul
lcallw
jp
add
scas
dec
cli
mov
imul
lahf
pop
adc
aas
leave
adc
dec
mov
adc
sub
and
adc
dec
shll
fmull
fcompl
js
pop
and
test
jp
hlt
enter
rorb
hlt
jp
ja
test
out
inc
roll
sub
cmpb
dec
xchg
mov
fstl
mov
lock
js
rol
dec
cmpsb
movl
sarb
jmp
mov
sti
or
sbbb
jle
mov
and
push
mov
adc
inc
stc
pop
cmp
pop
dec
add
or
fiaddl
movsb
push
popa
arpl
pop
bound
adc
aaa
addb
and
and
sbb
movl
out
inc
dec
and
cmpsl
sub
xlat
roll
mov
mov
lcall
movsl
imul
js
fistpll
sbbb
repz
cmp
fs
push
addr16
push
xor
mov
mov
cmova
nop
sbb
adc
call
and
jmp
sub
in
cmp
aaa
pusha
adc
cmp
lret
les
outsb
inc
jmp
xchg
push
xchg
hlt
pop
adcb
iret
inc
push
orl
dec
adcb
cmp
fsubr
not
sbb
lods
outsb
mov
aas
aas
out
mov
jae
or
lcall
test
stc
mov
gs
cmpsb
sbb
shll
pop
pop
or
scas
pop
xchg
fiaddl
in
mov
jmp
xchg
leave
lahf
adc
mov
lods
test
test
inc
sub
jmp
fadds
adc
aad
scas
stc
lds
stos
jg
fs
cmp
jmp
es
adc
push
mov
cli
mov
push
andl
sbb
mov
test
or
inc
inc
jge
jl
insb
or
dec
cwtl
or
sahf
in
inc
jb
out
jnp
in
lret
inc
fldcw
dec
testl
test
jecxz
or
xchg
pop
sub
push
pushf
fiaddl
jl
test
jne
pop
cltd
addb
and
inc
test
pop
loopne
mov
in
arpl
cmp
pushf
mov
dec
fldl
or
mov
movl
mov
pop
cld
cltd
push
sahf
sbb
cmp
mov
pop
adc
cmp
xchg
ja
mov
sub
xor
fadds
cmp
pop
inc
and
nop
push
sub
mov
and
pop
fsubl
cmpsb
stos
xchg
add
push
inc
in
mov
and
mov
lds
sbb
decl
call
xor
aaa
xlat
stc
xchg
in
and
xchg
fmuls
icebp
lcall
adc
filds
daa
gs
xchg
jb
add
sbb
adcl
xor
inc
sub
pop
mov
shlb
inc
andb
out
jns
or
sbb
out
js
lds
decb
push
outsl
xchg
jecxz
lds
ljmp
mov
push
jmp
in
mov
mov
and
adc
test
movsb
cmpsl
adc
xchg
movsb
mov
ja
xchg
inc
sub
add
pop
aad
mov
xor
push
and
inc
jp
les
cli
jle
jne
xor
gs
clc
add
nop
inc
pusha
inc
fiaddl
jecxz
orl
mov
or
sub
xor
hlt
mov
fistpll
test
pop
sar
inc
enter
and
add
aaa
adc
jg
jb
pusha
mov
jmp
lcall
add
sbb
mov
pop
pop
jg
mov
sahf
xchg
int3
test
jno
cmp
add
pop
jg
push
sbb
sub
shl
add
jecxz
sahf
notl
push
mov
and
sub
mov
jae
jae
xchg
std
xor
inc
add
cmp
sbb
add
or
jns
cmpsl
mov
push
push
call
add
popf
pop
sub
scas
push
bound
and
sbb
cmp
cmp
aas
mov
adc
popa
mov
mov
push
fnsave
pop
in
inc
push
pop
pusha
fldcw
loopne
aas
cmp
cwtl
scas
and
lahf
outsl
frstor
iret
js
inc
cmp
in
cmp
pop
mov
in
in
pop
inc
orb
add
jle
popa
lods
rcrb
bound
jecxz
aas
ja
into
sbb
pop
out
fildll
adcb
jl
lahf
pop
add
inc
ds
sbb
sti
in
imul
stos
push
pop
shrd
inc
sbb
fxch
push
call
shrb
pop
pop
je
leave
pop
cmpb
stos
lret
test
call
jno
movl
aam
nop
push
fistpl
repz
loopne
xchg
scas
imul
sub
psrad
iret
jbe
lahf
arpl
add
or
adc
xchg
fwait
ljmp
xchg
xchg
bound
aas
pop
test
push
lea
adc
scas
test
std
popa
lahf
mov
bnd
pop
add
add
mov
cltd
xorl
clc
popf
inc
in
ds
loop
cmp
push
and
sub
push
sahf
mov
mull
lcall
push
jge
pop
lahf
mov
xchg
inc
nop
mov
ja
add
cli
rcll
imull
orl
xchg
cmpsl
xor
cld
jnp
xchg
ds
jp
andb
sbbb
jo
dec
adc
fs
mov
sub
xchg
iret
pop
call
xchg
pop
xor
out
sbb
jecxz
bound
fwait
xorb
and
add
inc
ljmp
dec
xchg
add
sbb
test
repnz
inc
dec
inc
cli
mov
inc
or
mov
mov
jo
mov
sub
jae
sub
mov
mov
fs
adc
inc
dec
or
idivl
mov
jb
inc
sub
mov
inc
and
or
inc
and
sbb
push
fs
data16
and
push
sub
add
into
jne
subb
jp
inc
and
sbb
push
fs
jns
movsb
and
push
mov
pop
loope
cld
lret
inc
pop
jo
mull
cmpsl
fwait
jo
jb
mov
mov
jmp
imul
push
test
int3
dec
lret
xchg
data16
dec
cmpsl
loope
xchg
mov
jb
inc
cmpsl
sbb
mov
lods
sbb
xchg
hlt
dec
lods
subl
xchg
ret
mov
mov
xchg
dec
xchg
stc
jp
dec
push
bound
adc
or
imul
sbb
sbb
nop
repz
das
lods
gs
xlat
enter
addr16
xchg
inc
aad
enter
mov
sbb
and
push
sbb
loope
shll
daa
add
inc
loope
daa
or
daa
mov
daa
inc
popl
and
in
outsl
push
pop
mov
fs
jp
ret
gs
mov
pop
adc
stos
inc
daa
cmp
pop
loop
or
add
or
mov
cmp
push
lcall
pop
or
push
add
je
daa
and
pop
pop
ret
or
pop
movsb
icebp
ret
pusha
pushf
je
shll
inc
push
jo
and
test
jo
or
icebp
xchg
mov
xchg
ret
inc
roll
mov
and
nop
inc
loope
test
and
insb
repz
jo
and
mov
mov
jns
mov
dec
dec
mov
mov
out
mov
pop
mov
push
or
fildl
dec
pop
jb
pop
jno
addr16
push
arpl
mov
sbb
testl
cmp
test
cmpsl
sbb
lcall
inc
fnsave
and
je
jp
pop
sbb
ds
cld
lock
adc
sbb
fs
xchg
mov
data16
sbb
pop
mov
dec
jmp
cmpsb
in
push
mov
imul
cld
xor
lcall
pop
and
popf
push
mov
jmp
sahf
in
jl
add
mov
ret
xor
mov
mov
add
or
repnz
test
pop
or
dec
cs
vpcomw
pop
call
sub
add
cmpsl
mov
pop
sarl
repz
cmpsl
iret
and
out
or
adc
or
sahf
push
notl
jnp
mov
adc
loope
adc
out
test
je
lret
push
movsb
mov
out
adc
ficompl
jge
mov
dec
mov
cmpsl
sbb
xchg
loop
rclb
adc
roll
adc
jmp
push
loope
sbb
imul
and
bound
pop
jne
sbb
mov
cmpsl
mov
adc
sahf
adc
or
cld
pop
mov
and
stos
xchg
sub
arpl
jge
arpl
xchg
push
xchg
xchg
outsb
mov
push
flds
out
fmuls
push
push
addr16
push
je
push
jmp
mov
mov
sub
bound
and
xchg
inc
mov
xor
sub
sub
ficomps
inc
push
adcl
pop
push
flds
lock
pop
les
stos
xchg
daa
test
inc
sub
pop
aad
push
jl
imul
bound
jp
les
stos
xchg
fwait
jns
add
repz
iret
pop
push
jno
fwait
pop
adc
imul
ret
add
sbb
ret
xchg
loop
loop
push
push
mov
pop
adc
imul
insb
shlb
xchg
ret
xor
rclb
inc
ret
push
cmp
pop
or
push
movsb
ret
and
xchg
mov
mov
xor
cmp
push
push
push
xor
pop
and
in
fbstp
push
in
out
sub
insb
lcall
and
scas
sahf
ret
or
daa
sub
popa
xor
bound
sarb
add
xchg
mov
in
xchg
addr16
xchg
lret
outsl
lcall
sub
add
add
popa
xchg
mov
jns
sbb
test
pop
and
loop
cmp
fistps
js
bound
push
inc
add
or
jl
mov
jge
insb
xchg
idivb
xchg
lods
icebp
ljmp
dec
clc
add
push
test
jns
inc
in
aas
and
push
push
fldcw
pop
out
loop
or
mov
dec
xchg
pop
int3
movsb
dec
ja
xor
mov
test
sbb
out
lds
dec
imul
xchg
xor
push
mov
test
adc
xchg
fisubrl
loop
mov
cmp
inc
fimuls
les
inc
jge
inc
xor
loope
loop
cli
shlb
xchg
cwtl
lahf
js
pmullw
fsts
push
daa
mov
std
shll
add
movsl
imul
cmp
adc
in
jmp
mov
jle
xor
sbb
out
fdivrl
push
and
stc
inc
out
scas
adc
clc
cwtl
xchg
pop
jne
leave
push
cmpsb
out
push
scas
repnz
js
clc
ds
ja
and
push
adc
dec
or
fdiv
leave
dec
push
cwtl
icebp
or
cmp
lods
clc
out
ret
adc
jmp
mov
ret
mov
adc
sub
subl
push
gs
aaa
dec
gs
and
loop
iret
pop
movsl
mov
mov
push
pop
mov
jns
rorb
js
sbb
cld
test
add
bndstx
inc
pusha
addr16
add
xchg
mov
add
repnz
or
mov
sub
inc
add
mull
or
sahf
fstpl
test
xor
mov
inc
push
cmp
fsubrs
pop
cmp
add
mov
cmp
sub
and
loope
push
test
push
and
aaa
inc
jp
push
sbb
rclb
dec
sub
jl
loope
testl
add
cmpsb
andl
cmpl
lock
jnp
out
outsb
sbb
pop
int3
pop
cltd
gs
ficoms
mov
shlb
test
and
mov
addl
subl
jg
popf
or
dec
cwtl
aad
sahf
add
xchg
insl
mov
ret
fxch
out
add
xchg
test
js
sbb
xchg
fs
dec
mov
in
mov
jb
inc
xlat
test
and
add
subl
or
enter
dec
inc
aaa
mov
or
lret
test
test
jmp
mov
in
out
repz
xchg
xchg
jg
and
and
sbb
mov
fsubrs
ja
dec
jo
js
xchg
inc
push
aad
adc
and
cmc
pop
inc
ds
add
fistpll
or
jb
add
lcall
fildl
cwtl
dec
dec
cmp
jle
fistpll
scas
gs
mov
xchg
sbb
cmc
mull
jge
shrb
dec
or
ja
enter
cmp
cwtl
enter
scas
lock
mov
movl
repz
je
adc
push
inc
lock
ret
xchg
add
ljmp
and
push
enter
rcll
mov
add
push
jmp
mov
sub
or
jp
push
jle
push
test
subl
lea
pop
jnp
and
jge
dec
mov
add
call
add
sbb
mov
out
cld
outsb
or
pop
fbld
xor
data16
pop
cmc
inc
cwtl
cmp
adc
ret
xchg
rcrl
out
negl
mov
lahf
mov
ja
call
push
push
test
aad
dec
movsl
add
or
shll
sti
jmp
xchg
jl
xchg
repnz
jl
add
movd
rol
sti
cmp
shr
xlat
jno
adc
xchg
cmp
pushf
int3
and
bnd
sub
iret
popf
std
mov
dec
cli
mov
jbe
pop
sbb
cltd
mov
cmpsl
pop
dec
xchg
xor
xchg
sub
es
test
pushw
aas
mov
add
sub
es
movsb
dec
ret
or
addl
dec
and
xchg
adc
and
mov
adc
push
pop
mov
pushf
push
bound
xchg
inc
dec
adc
jl
sbb
sbbl
sbb
pop
jle
lock
xor
scas
mov
insl
jge
es
pusha
push
mov
bound
xchg
adcl
ja
imul
test
add
push
lret
mov
das
leave
mov
ret
add
and
subl
enter
dec
popf
xor
inc
inc
xorb
sub
cmp
pop
hlt
enter
jl
pop
xchg
data16
xlat
pusha
in
inc
les
jno
mov
cmpsl
mov
iret
xchg
dec
push
pushf
xchg
cwtl
mov
in
loop
pop
pop
repnz
rcrl
std
bound
sub
inc
sti
stos
xchg
xor
loope
in
push
mov
sbb
mov
dec
sbb
in
mov
cmp
mov
jl
js
pop
xor
outsb
out
adc
out
test
and
cmp
fsubrl
das
lock
add
jg
call
jnp
fs
inc
or
or
mov
loopne
push
test
dec
mov
push
arpl
sbbl
adc
dec
sbb
shl
stos
out
push
inc
rorl
jno
xchg
addr16
cmpsb
push
cmpsl
inc
inc
outsb
mov
inc
and
pop
mov
mov
add
inc
testl
mov
rol
xchg
sbb
add
fwait
addr16
and
push
and
xchg
xchg
add
inc
mov
add
aam
daa
mov
adc
sbb
xchg
mov
jne
mov
pop
loop
mov
inc
mov
test
mov
mov
movsb
inc
loop
adc
rolb
dec
dec
pop
jae
mov
mov
adc
mov
xchg
mov
pop
loopne
aad
sbb
or
imul
jb
stos
push
pop
pop
sbb
jne
shlb
shrl
fistps
sub
lahf
andl
sbb
add
mov
lahf
pop
bound
dec
or
push
out
dec
out
test
mov
daa
pop
imul
fsubrl
mov
push
andb
add
loopne
push
sbb
pop
fldl
jge
js
jne
inc
jb
xchg
sbb
sub
adc
jns
and
inc
imul
push
pop
frstor
mov
imul
repz
dec
pop
mov
sub
ds
sub
leave
jbe
jb,pt
lods
fwait
sbb
ret
shl
jae
aas
mov
sti
shll
fsub
xchg
jo
and
cli
mov
sub
lods
addr16
test
inc
xlat
add
lahf
dec
jb
addb
frstor
pop
fdivs
inc
iret
add
fisttps
jge
addr16
jb
inc
dec
test
and
ja
inc
or
or
lahf
xchg
jb
inc
adc
pop
pushf
outsb
cmc
in
in
dec
mov
jp
packuswb
popa
inc
mov
xchg
je
xchg
loop
or
cmp
push
mov
ret
test
mov
ret
mov
aad
leave
bound
sbbb
and
add
clc
fidivrl
repnz
jne
cmp
dec
inc
fildl
cli
cmp
xchg
das
int3
iret
ret
dec
mov
xor
loope
and
subl
mov
cli
adc
adc
xchg
jb
repnz
sbb
fs
ds
or
arpl
and
cmp
push
mov
xchg
adc
aad
repz
lret
ja
clc
and
push
pop
mov
push
stc
outsb
das
add
mov
out
add
sbb
and
mov
loopne
push
inc
lock
xchg
mov
or
push
jge
adc
xchg
cmpsl
cmp
cmp
jmp
mov
push
inc
jns
pop
popf
test
dec
pusha
imul
pop
stc
jle
pop
dec
jl
inc
jnp
shl
jno
pop
lds
sti
cmp
test
arpl
mov
mov
lds
or
out
jo
insl
pusha
xchg
push
andl
push
mov
jecxz
ret
cmpsb
xchg
xchg
mov
icebp
incb
pop
int3
fdivl
push
movsl
mov
lahf
ja
sti
xor
das
repnz
test
push
movl
enter
cmpl
or
xor
mov
mov
aad
jnp
mov
fsubrs
rcrb
dec
imul
xchg
mov
jg
in
js
inc
adc
adc
iret
fimull
or
movsl
dec
rcrb
mov
dec
xchg
cmpsl
cmp
fs
leave
cld
sbb
cmp
xor
pusha
ret
or
lea
sbb
xchg
je
mov
daa
push
cltd
movsl
sar
and
xchg
ljmp
mov
and
mov
pop
xchg
add
subl
in
cmp
aas
int3
xchg
jmp
push
xchg
inc
leave
arpl
orb
mov
pop
loopne
sbb
ret
outsb
or
mov
jle
addl
mov
adc
jecxz
pop
push
xchg
cld
test
fwait
push
xchg
mov
sbb
call
add
mov
xchg
stos
mov
adc
or
shl
xorl
lcall
sbb
outsb
xchg
lds
lods
jmp
pop
add
lea
and
cs
inc
xorb
xchg
add
sbb
outsb
adc
pusha
xchg
cmp
out
mov
xchg
in
inc
add
or
pop
inc
popa
add
sahf
js
adcl
push
daa
and
dec
or
dec
arpl
push
jecxz
repnz
sbb
outsb
fs
mov
xchg
mov
in
or
xchg
nop
push
das
adc
xor
sbb
or
mov
and
fsub
addl
adc
cltd
imul
sub
lods
nop
sbb
jcxz
cmp
add
les
insl
mov
rcrb
or
movsb
adc
and
push
add
add
daa
xlat
fdivs
jno
mov
popa
pusha
int
addl
ret
sbb
sahf
fdivrs
pop
xor
negb
mov
and
mull
cmpl
andl
sbbl
in
int3
call
decl
rorl
cwtl
sbb
add
lea
and
cs
add
lea
and
dec
dec
jae
enter
outsb
jp
aam
and
push
cmp
push
outsb
dec
adc
add
mov
push
push
sub
jb
sub
pop
lds
addl
mov
xor
cmp
outsl
in
push
and
test
nop
adc
sbb
iret
jle
xor
inc
imul
ret
les
adc
cli
sub
jnp
fistpll
out
pop
aam
test
movsb
cltd
xchg
xor
nop
push
mov
push
jns
imul
pusha
gs
in
cmp
inc
jge
sub
sbb
shr
stc
inc
mov
mov
sbb
jecxz
sbbl
adc
mov
test
cmp
or
or
lea
scas
mov
adc
inc
pop
sbb
outsb
cltd
inc
lea
and
cmp
outsl
sub
jno
push
int3
out
mov
adc
rclb
cmp
xchg
xchg
sar
lahf
mov
addr16
imul
pop
add
lods
fstpl
fs
jl
jbe
inc
lea
repnz
subb
xchg
push
fs
rcll
inc
dec
sub
lods
pop
cmc
repnz
mov
stc
add
dec
mov
call
orb
sbb
jo
int3
sbb
fisttpll
adc
loope
addb
inc
mov
dec
push
push
pop
dec
mov
mov
int
dec
and
fimuls
imul
jno
dec
pusha
leave
add
pusha
pop
into
and
adc
mov
gs
stos
inc
and
mov
push
inc
cmpsl
lods
jb
push
data16
adc
mov
lcallw
push
into
jne
bound
and
int3
fildll
jecxz
mov
pop
cmpsl
lods
jb
push
jo
adc
dec
inc
sub
cmp
cmc
dec
dec
cmc
out
test
mov
bound
and
and
xchg
xchg
fistpll
nop
mov
addr16
fcomps
mov
mov
loop
addr16
ljmp
mov
cmc
adcb
sbb
cs
mov
out
gs
dec
pop
aad
divl
mov
insb
push
ret
xchg
sub
fidivrs
lds
dec
enter
fcoms
insb
in
inc
pop
stc
adc
xchg
add
popl
and
jne
and
daa
clc
mov
lahf
adc
inc
test
and
mov
gs
lret
or
dec
ss
mov
jb
mov
mov
add
stos
mov
mov
pop
imul
lods
stos
xlat
push
sbb
inc
movsb
mov
push
sbb
xchg
movsb
or
rcll
sbb
sbb
mov
clc
jp
ret
aas
fcom
and
pop
jg
in
xchg
repnz
mov
testl
aam
xchg
xchg
nop
icebp
jg
or
cmp
inc
andl
pop
ret
mov
popa
mov
jo
inc
add
push
push
mov
bound
lcall
and
sbb
inc
pop
imul
add
cs
mov
cs
bound
cs
pusha
jbe
fs
sub
mov
aaa
sub
rolb
cmp
mov
dec
imul
pop
add
sbb
ja
dec
push
push
push
fld
mov
mov
pop
and
sub
icebp
or
jge
pop
inc
inc
push
dec
aad
or
jae
jnp
xor
arpl
jge
std
icebp
fs
popf
sbb
jae
inc
sbb
dec
js
add
cmpsl
mov
fs
mov
pop
ljmp
out
sti
sub
sbb
and
divl
sbb
mov
adc
movsb
jge
inc
dec
popa
popa
movsb
je
jbe
and
lret
sbb
imul
xchg
jle
flds
inc
push
add
xchg
xchg
adc
jbe
testl
addr16
movsl
jmp
popf
insb
or
loopew
adc
ds
div
xchg
adc
adc
btc
jge
cmp
and
sbb
cli
ds
pop
mov
xchg
in
mov
bound
xchg
daa
into
add
or
dec
pop
loope
dec
rorl
insb
mov
and
dec
mov
mov
mov
or
loop
and
add
divl
push
sub
aaa
mov
jmp
aaa
imul
pop
pop
adc
xor
ret
jbe
stos
shll
xchg
xor
movsb
popf
lret
and
rorb
stos
je
mov
mov
sub
popa
mov
popa
push
addb
dec
sbb
xchg
fnstcw
mov
jle
dec
dec
lods
and
xchg
loope
mov
aaa
nop
adc
stos
mov
push
andb
andb
insb
test
test
xlat
test
mov
movsl
xchg
test
push
pop
je
arpl
dec
loopne
push
addr16
mov
pop
xchg
adcl
out
push
test
mov
xchg
bound
dec
test
and
xchg
std
mov
adc
xchg
dec
imul
rcrb
insb
lea
stos
setge
inc
outsb
sbb
les
je
call
push
or
jle
call
adc
fisttpll
sub
repz
mov
in
or
daa
into
dec
xchg
cmp
pop
jb
addb
pop
cltd
in
ret
mov
out
aaa
rolb
pop
roll
sub
sarb
push
std
aas
aad
mov
mov
sbb
lock
js
and
push
cmpsl
into
pop
mov
lods
dec
cmp
lea
push
pushf
jecxz
test
pop
pusha
push
push
subb
lods
bound
sbb
add
xlat
cmp
inc
cmp
ja
inc
icebp
mov
dec
or
and
and
mov
jl
add
xchg
inc
pop
xchg
adc
xchg
sbb
pop
testl
dec
push
call
loopne
sahf
outsb
pop
pop
inc
sbb
idiv
imull
dec
adc
and
inc
jge
test
testb
or
dec
jae
lcall
or
fwait
in
xor
cwtl
test
xor
lods
hlt
sbb
sahf
call
shll
mov
xchg
cwtl
lea
in
xchg
push
mov
rorl
rol
adc
nop
adc
stos
xchg
lods
ja
bound
fsubp
and
fs
nop
icebp
add
data16
add
mov
sub
sub
lcall
or
sarb
mov
je
test
mov
lods
pop
scas
pop
jb
inc
push
in
dec
scas
mov
test
push
push
mov
stc
sbb
fiaddl
xchg
jmp
xor
fadd
adc
sbb
roll
out
xorl
mov
adc
addb
ja
push
jg
xchg
push
lahf
add
push
stos
add
lcall
orb
je
pop
imul
xor
and
fcomps
lds
xchg
scas
dec
mov
sti
sti
sub
test
and
dec
es
jg
cmp
call
lock
push
enter
and
jle
ja
jne
repz
das
and
push
push
sub
sub
and
mov
js
xor
addl
pop
sbb
ljmp
cmpsb
push
add
cmp
jecxz
cmpsb
data16
jge
loop
inc
test
js
mov
shll
lret
das
in
jmp
adc
sbb
jne
lds
dec
adc
push
sbb
add
lea
test
sbb
es
icebp
xchg
adc
stos
and
shrb
mov
sarl
jb
mov
jp
repz
jbe
sbb
add
mov
cmp
adc
ud2
lahf
jb
inc
jl
xorb
jecxz
rcr
mov
cmp
int
jmp
inc
pop
ret
push
xor
test
and
cmpsl
add
fs
mov
mov
mov
push
dec
push
mov
inc
xor
cmpsl
mov
shr
addr16
xchg
pop
fs
or
sbb
adc
lcall
ja
and
mov
jg
xchg
push
xchg
mov
push
test
lods
aas
lret
fldenv
test
mov
test
insb
push
push
mov
rclb
push
test
popa
pusha
lahf
cmp
add
pop
test
loop
push
cmpsl
imul
pop
or
pusha
test
subl
movsb
imul
or
sub
subl
jb
push
outsl
leave
or
movsb
imul
add
xchg
fs
push
sub
bound
pop
jmp
and
in
bound
sub
jns
xchg
inc
jmp
cmc
je
sahf
dec
mov
sahf
shlb
xchg
ret
jle
rorl
sbb
mov
cltd
inc
in
sbb
pop
in
xchg
mov
sti
test
mov
jb
xor
lods
or
inc
cmc
add
lahf
out
jb
addb
inc
sbb
mov
mov
insl
lahf
das
jb
inc
cmpsb
and
andb
filds
lahf
mov
lods
andb
mov
or
push
insl
adc
call
test
or
add
mov
insl
cmp
or
add
out
in
sub
mov
scas
sbb
enter
outsb
or
mov
or
sahf
outsb
inc
adc
enter
add
in
xchg
call
out
inc
add
not
iret
xchg
and
dec
call
test
add
cli
jge
sbb
fidivrl
cld
dec
push
bts
jecxz
mov
or
cs
push
test
mov
les
jmp
mov
std
pop
sbb
hlt
in
test
iret
jo
dec
push
ret
xchg
fmuls
jnp
mov
and
mov
jne
je
mov
in
loopne
aas
mov
enter
sbb
sbb
xchg
call
add
inc
pop
add
sti
pop
xchg
inc
pop
mov
sbb
cmp
mov
add
popa
mov
sub
mov
jne
push
push
sub
cmc
mov
and
imul
int3
mov
jp
mov
dec
lahf
addr16
ljmp
sti
in
inc
mov
ja
inc
mov
add
fdivrs
stos
sub
sub
bound
lahf
inc
rolb
in
lock
cmc
gs
pop
pushf
daa
inc
insl
cmpsl
cwtl
fadd
and
test
mov
push
ret
out
jo
daa
popf
jge
cmp
and
lods
mov
jae
loope
push
push
mov
stos
test
jne
ja
cmpsl
ja
fidivs
dec
aad
pop
in
pop
mov
fmull
cmpsb
sbb
sub
aas
mov
xchg
sahf
mov
call
inc
xchg
xchg
mov
jmp
sbb
mov
push
lret
ret
cmp
mov
sub
pop
cld
mov
imul
arpl
or
and
inc
push
frstor
es
loopne
in
or
add
and
dec
orb
xor
inc
xchg
sarl
stc
or
adc
pop
jl
pushf
pop
movsl
cmp
push
out
lea
aad
adc
loopne
stc
mov
sub
test
divl
popa
xchg
pop
or
and
aam
pusha
popa
xchg
inc
push
pusha
cld
lcall
inc
and
dec
push
jb
dec
cmp
call
out
xor
popa
push
mov
mov
aaa
std
adc
dec
pop
ljmp
add
popa
sbb
jge
mov
and
xchg
loope
addr16
or
fwait
add
sti
out
sbbl
rolb
test
scas
adc
outsl
push
es
mov
sbb
lret
adc
fsubs
int
dec
cmc
mov
jg
out
repz
fisubrs
pop
jb
mov
enter
repnz
jno
sbb
stc
mov
and
jle
jns
xor
inc
lods
cmc
ss
out
arpl
fistps
sub
mov
into
inc
nop
mov
push
mov
in
inc
and
popf
int
push
sti
inc
jns
incb
xor
xor
repnz
push
mov
dec
lods
scas
dec
in
xchg
mov
xor
mov
stos
aad
cwtl
ret
sbb
push
pop
jnp
dec
insb
ret
push
inc
inc
cmc
mov
out
cmp
xchg
add
and
add
jp
sub
mov
cmp
push
xchg
jmp
lret
dec
jns
sbb
insb
aas
mov
xchg
mov
cli
pop
int
mov
xchg
es
clc
mov
das
movsb
stc
jo
dec
test
mov
addr16
test
js
sub
inc
aad
insl
push
js
add
or
push
lods
lea
int
sbb
cltd
sbb
sub
push
jns
pusha
lock
les
add
push
lcall
sub
mov
ja
mov
lods
icebp
cltd
push
aaa
in
xlat
lcall
xlat
add
sub
inc
adc
fcompl
andb
push
fnsave
xor
in
and
xchg
mov
fstpt
jp
mov
push
inc
sbb
mov
cmpb
cmc
xchg
lret
cmpsb
addr16
aas
dec
mov
cmp
jnp
push
sub
mov
cwtl
pop
fsubrs
mov
adc
pop
pop
fld
mov
loope
outsl
push
mov
cmpsl
js
jnp
test
mov
es
pop
xor
iret
dec
mov
daa
adc
bound
outsb
adc
clc
add
push
out
ret
mov
mov
stos
pop
pusha
mov
jle
mov
ljmp
scas
push
mov
data16
test
cmp
loopne
jp
xlat
hlt
cmc
vmovntps
sbb
dec
cmp
sbb
jmp
inc
push
sbb
dec
roll
cltd
or
dec
sahf
divl
outsb
mov
mov
push
mov
pop
call
and
movl
cmpsb
fildl
js
out
xchg
xchg
mov
out
pop
or
add
jb
mov
xchg
stos
test
test
rorl
mov
add
mov
stc
in
ret
movsl
scas
inc
xchg
or
scas
movl
jecxz
aad
or
mov
push
out
stos
cmpl
or
push
xor
or
mov
ret
mov
out
add
inc
inc
mov
pop
inc
mov
xchg
std
inc
jae
jl
enter
sbb
add
push
scas
mov
int
je
popl
bound
addl
mov
push
fadds
andb
lcall
repnz
sbb
pop
imulb
sahf
cmp
add
daa
add
xchg
ja
push
lcall
dec
inc
pop
cmp
cmpsl
addl
jmp
bound
pop
mov
push
xor
cmc
cmpsl
pusha
ret
inc
xchg
leave
push
mov
mov
pop
test
cmp
lret
ss
gs
push
call
inc
lahf
add
pusha
lret
scas
inc
test
inc
ja
add
and
cmp
push
ljmp
icebp
xchg
inc
add
xor
adcb
lods
jg
sbb
dec
dec
pushf
imul
and
fbstp
ret
lahf
xchg
dec
mov
pushf
dec
inc
mov
pusha
scas
lahf
push
stc
pop
jge
inc
sub
fisubrl
fildll
lea
movsl
mov
filds
mov
bound
jl
scas
inc
int3
enter
out
inc
pusha
fwait
aad
stc
mov
cmpsl
inc
pushf
add
fadds
xor
cmp
inc
dec
push
add
jne
pop
add
sbb
addb
mov
add
and
rolb
mov
push
inc
mov
pusha
mov
aad
cmp
ss
xchg
xor
ret
sbb
dec
adc
ja
mov
cld
and
icebp
stos
subb
or
push
add
sub
cmp
mov
fs
imul
cmpl
pushl
xchg
cmp
sbb
sub
cmp
and
add
jmp
xchg
test
and
push
and
ficoml
mov
mov
loope
fsts
adc
sub
lahf
jl
loop
mov
mov
push
js
sub
aam
xor
jmp
imul
xchg
pop
jbe
lcall
mov
jp
xchg
js
out
jecxz
mov
or
xchg
pop
pop
adc
xlat
adc
or
or
push
mov
jp
data16
int
inc
inc
shlb
idivb
cld
bound
enter
in
push
scas
movl
mov
cmp
scas
jbe
orl
inc
insb
sbb
push
inc
bound
fistps
push
inc
and
push
dec
cmpsb
pop
call
lret
rorl
outsl
cltd
and
jp
hlt
loop
mov
movsb
flds
sub
test
test
icebp
or
jae
or
inc
pop
nop
ds
bound
pop
stc
xor
adc
decb
sbb
stos
xchg
xchg
add
xor
or
mov
pop
or
mov
test
inc
or
sub
xor
fisttpll
xchg
push
pop
dec
push
in
cli
pop
pusha
lahf
and
mov
push
ret
xor
mov
or
mov
xorb
mov
stos
cmp
loopne
inc
sahf
sbb
cmp
add
and
bound
lcall
xchg
xchg
xchg
inc
push
mov
cmp
fdivrl
repnz
lds
lods
mov
mov
test
cmpsl
insl
stc
popf
xchg
adc
test
out
xchg
adc
or
jp
or
mov
mov
sbb
mov
call
fildll
xchg
mov
hlt
cmp
lds
pop
sub
cmpsl
lahf
mov
popf
pop
push
mov
pop
lock
shl
testb
jmp
xor
fisubrs
fnstsw
les
push
ljmp
add
fsts
popf
or
subl
sarb
scas
and
int
push
and
sub
dec
sub
push
xchg
mov
ret
loopne
xor
cmc
push
adc
popf
orb
out
add
imul
jmp
es
ret
push
out
inc
or
xchg
cmp
dec
or
repnz
decb
add
lods
jl
loop
push
jae
fnstenv
cmpsb
mov
and
add
out
pop
mov
mov
jge
mov
push
dec
in
cmpsl
or
adc
cmc
and
in
mov
mov
jmp
insl
or
push
rorb
xchg
mov
pop
xchg
fadds
add
inc
bound
popa
sub
xor
xchg
movl
in
cmpsl
inc
or
cltd
dec
sbbl
pushf
xchg
or
jne
mov
jle
xchg
cmp
push
jbe
out
jl
test
aaa
xor
repnz
adc
inc
int
adc
add
inc
mov
lock
imul
addr16
ljmp
cmp
xchg
xchg
jge
aaa
xchg
mov
das
add
ds
mul
mov
fdivrl
xchg
cmpsl
cwtl
sub
sbb
push
xchg
ljmp
push
jecxz
pushf
mov
pop
dec
in
loop
sarl
popf
cwtl
push
loope
mov
inc
js
test
xchg
jmp
mov
rclb
mov
pushf
pusha
mov
shlb
mov
repnz
repz
rcll
negl
push
cmpsl
arpl
cmp
cltd
jecxz
fs
add
dec
call
xchg
jb
cmp
and
xor
xor
push
jg
jnp
push
ja
pop
stc
jbe
pop
cmpb
sbbl
cld
mull
mov
pop
jns
push
daa
mov
fstps
cmp
fnstenv
dec
scas
popa
iret
inc
push
fdivrl
mov
fsub
cmp
dec
xchg
mov
dec
mov
lds
inc
sbb
rol
xchg
sbbb
fisubs
inc
xchg
stc
aad
inc
icebp
adcb
loope
fs
pusha
fdivl
mov
dec
cld
loope
icebp
pop
fdivl
fistpll
pop
lcall
cmpb
mov
arpl
xchg
icebp
cmc
xorb
mov
pusha
fildl
fcomp
test
xor
push
negl
cld
adcb
inc
shrb
dec
fsub
popf
je
enter
aas
pop
andb
push
idivb
loopne
mov
pusha
mov
cli
mov
and
mov
mov
frstor
lcall
aad
dec
mov
orb
mov
stos
inc
hlt
jae
add
cmpsl
fstps
decl
jp
leave
scas
mov
mov
mov
loopne
iret
mov
mov
add
cli
mov
pusha
cmp
adcb
push
call
inc
mov
and
inc
jp
mov
fs
pop
jne
les
frstor
jbe
aad
lcall
popf
stc
pop
dec
cltd
loope
popf
jg
orb
mov
call
stos
inc
sbb
lahf
mov
xchg
ds
loop
xchg
xlat
sbb
das
or
push
testb
pop
push
xchg
in
xor
cmc
fiaddl
loopne
adc
iret
ja
cs
or
or
rorb
aad
lea
in
mov
popf
mov
mov
test
xchg
test
mov
cmp
pop
xor
cmp
out
lahf
cmp
jp
repnz
jo
xchg
js
mov
leave
lock
mov
call
push
ja
clc
sbb
negl
pop
sahf
subl
push
fs
outsb
dec
adc
inc
xchg
test
movb
sbb
or
mov
jo
lds
dec
gs
addr16
adcl
push
cmp
jmp
push
stos
sbb
addr16
inc
ja
jp
push
stc
and
ret
jno
or
das
add
test
add
in
scas
jae
ret
bound
and
xor
ja
scas
lahf
loope
pop
jge
fsubs
adcb
add
xor
lea
jmp
sti
mov
xchg
pushw
xchg
sbb
sub
and
cli
mov
add
mov
pop
das
inc
mull
push
jnp
xchg
mov
inc
test
popf
aas
cmc
xor
loopne
enter
cmp
icebp
mov
or
dec
dec
lods
fdivs
jecxz
ds
aad
shlb
ret
add
mov
push
dec
xabort
pop
jg
aam
enter
push
and
cmpsb
call
cmp
mov
pop
jle
mov
inc
pop
fists
sbb
pop
notl
test
pusha
movsb
ja
lret
pop
dec
sbb
inc
pop
popf
in
adc
insl
in
mov
dec
mov
cmpsb
loop
push
pushf
and
sarl
pop
pop
dec
rorl
xchg
cmp
pop
xchg
xchg
add
jnp
sahf
out
inc
dec
pop
add
mov
movsb
cmc
mov
icebp
add
push
loop
xchg
pop
je
inc
testl
je
mov
pop
and
add
add
scas
xchg
hlt
mov
lcall
fisubrl
and
dec
xor
test
sbb
xor
or
jmp
sbb
xchg
adc
push
jmp
loop
sahf
jle
je
sbb
push
daa
mov
jmp
inc
add
push
pop
xor
lods
pop
add
fadds
sahf
bnd
mov
cmpsl
mov
sti
lock
inc
sbb
pop
scas
out
and
ja
pop
loop
jp
and
scas
mov
jle
repnz
sub
pop
push
pop
push
sbb
lock
xchg
sub
sub
mov
inc
incl
out
inc
cmp
test
cmp
sbb
out
cmp
sbb
and
mov
mov
es
xchg
sbb
fwait
inc
xchg
adc
and
roll
jge
in
in
cli
popf
push
add
test
cmpl
sbb
and
xor
dec
icebp
sbb
xchg
pop
testb
push
dec
popa
add
inc
jl
xchg
nop
cmp
xchg
mov
pop
andl
daa
bound
movb
addb
jle
pop
daa
je
pushf
movsl
cmp
popa
push
cmpsl
push
testl
movl
cmp
dec
mov
test
mov
add
mov
push
pop
adc
les
fdivrs
je
sarl
and
loope
push
or
nop
mov
inc
sbb
std
xor
mov
adc
xchg
and
out
addr16
pop
out
test
push
and
out
jmp
cwtl
lods
loope
imul
push
inc
adc
ret
das
imul
mov
out
mov
mov
ja,pt
add
sbb
xchg
and
pop
pop
jmp
test
mov
sbb
addr16
xchg
jnp
inc
xchg
imul
xchg
xor
mov
cmpsl
scas
push
out
nop
enter
adc
dec
arpl
push
push
stc
pop
adc
sbb
addb
roll
cld
aaa
pusha
inc
sub
test
jge
imul
enter
cmpsl
data16
inc
sahf
sub
xor
mov
rcrb
or
add
aam
adc
adc
add
sahf
xor
dec
popa
insl
xchg
push
imul
jae
pop
dec
sbb
mov
lahf
cmp
enter
mov
js
xchg
inc
xchg
jb
ja
fs
popl
enter
cmpsb
push
mov
jbe
fnstcw
mov
outsl
call
sbb
inc
sub
and
push
inc
in
pop
fdivrs
nop
cs
sub
mov
shrb
clc
popa
mov
ja
add
out
std
push
icebp
add
adc
push
sub
push
loope
insb
mov
pushf
in
fisubs
je
xor
cmpsl
pushf
adcl
ret
vcmptrueps
repnz
mov
push
xor
aaa
nop
mov
rcrb
je
inc
ret
adc
shll
mov
stc
mov
ja
xor
push
fwait
xchg
stos
mov
and
mov
stos
in
inc
pop
icebp
adc
cmp
stos
xchg
stc
adc
mov
les
stos
out
outsb
jge
cmpsb
dec
in
jecxz
mov
iret
push
cwtl
repz
cld
adc
or
sub
pop
and
sarb
xchg
lcall
cmc
sbb
stos
mov
negl
xor
shl
push
mov
sub
push
andb
lcall
lcall
mov
jb
adcb
mov
mov
xchg
daa
je
or
loop
sub
adc
aam
addr16
test
mov
cmpsl
cwtl
mov
jmp
sbb
in
mov
xchg
aad
xchg
cmp
fnstsw
jmp
lahf
pop
bound
pop
dec
pop
xorl
cmp
jmp
push
pop
cli
mov
or
jg
xor
cmp
insb
sbb
push
jo
inc
call
xor
aaa
es
dec
in
ja
sub
out
ret
sbbl
inc
in
lret
in
sub
sub
jo
and
xchg
lods
and
stc
repz
push
scas
push
dec
jle
loop
ret
xchg
dec
sub
xchg
mov
lahf
cltd
mov
sbb
pop
je
push
fwait
ss
jp
int3
dec
xchg
xlat
xchg
test
cmp
je
lahf
add
pop
es
mov
shll
loop
in
fwait
cmp
lods
pusha
sub
and
xchg
adc
mov
jp
xchg
xchg
xchg
pop
or
fstpl
mov
xchg
incl
ja
dec
scas
js
mov
fistpl
adc
sub
sub
dec
out
adc
inc
inc
jae
xlat
aaa
jp
jno
rclb
int
cmp
pop
arpl
insl
cli
sbb
and
hlt
inc
jns
sub
das
pop
fwait
mov
mov
pop
xchg
fmuls
mov
es
je
or
xchg
test
addr16
mov
or
cmp
mov
mov
cmp
imul
cltd
pop
adc
jg
test
shll
cli
sbb
cmp
push
aas
out
popf
inc
xor
mov
jo
test
orb
inc
cmp
rolb
fldenv
push
mov
imul
mov
and
sub
test
adcb
mov
push
loope
aas
or
outsb
push
mov
pop
push
jns
scas
push
test
sti
les
or
lea
pop
jbe
cmpsb
inc
dec
push
sub
xor
test
mov
popf
ja
push
enter
outsb
enter
or
push
je
jmp
inc
pop
mov
xchg
mov
adc
inc
js
lcall
inc
roll
mov
push
jle
and
jnp
insl
ljmp
jmp
pushf
pop
lcall
sub
leave
jae
mov
xchg
inc
adc
out
ja
stos
sub
test
mov
mov
cmpsb
aaa
insl
subl
ret
dec
decl
xchg
outsb
jae
add
sbb
jg
or
js
movsb
cmc
and
repz
pop
mov
frstor
mov
and
daa
inc
xor
scas
jb
sub
out
loope
mov
pop
push
push
int3
mov
jne
add
rcrl
mov
pop
and
sub
or
clc
aaa
insb
mov
or
loope
leave
fcomps
popf
lcall
jge
gs
sbb
push
nop
xchg
insb
js
iret
cmp
add
inc
add
cmpl
out
sub
sbb
test
xchg
jp
dec
add
test
xchg
push
icebp
arpl
jl
sbbb
sahf
mov
dec
sbb
loop
inc
sub
cmp
jns
fisubrl
push
mov
mov
xchg
push
mov
out
or
fs
mov
stc
mov
sub
fs
pop
sti
cmc
outsb
cld
pop
and
cmp
pop
movsl
jo
cmp
jo
mov
push
add
xchg
pop
ss
popa
lds
pop
xorl
clc
repz
gs
movsl
jle
add
mov
rcll
mov
dec
mov
dec
ds
add
scas
jmp
and
pop
mov
and
outsb
cltd
pop
jae
insb
lds
cmpsl
dec
jge
add
sbb
in
add
or
and
cmpb
lcall
push
rolb
sbb
pusha
pop
popf
loope
addr16
push
test
mov
xor
mov
lcall
pushl
dec
daa
or
adc
mov
dec
test
leave
mov
inc
addl
lods
cmp
fiaddl
cmp
inc
outsl
ljmp
sub
push
loop
add
cmpsb
movsl
pop
jne
imul
sub
lock
sahf
cmpl
imul
dec
out
scas
push
pusha
sub
out
jns
sbb
lcall
pusha
xchg
sbb
cwtl
inc
into
pop
loop
sub
lahf
pop
xor
push
push
movsb
in
jno
adc
popf
inc
rcr
test
or
imul
sbb
push
gs
push
sbb
or
ja
loope
movsl
lods
jno
test
or
stos
in
jl
fwait
out
fs
cmp
inc
add
add
insl
outsl
inc
push
ret
add
add
or
ds
roll
dec
adc
call
jo
add
or
sbbl
scas
xchg
or
add
dec
add
inc
sbbb
subl
decb
xchg
inc
push
cli
lods
fidivs
push
pop
aad
xchg
loop
in
mov
xchg
test
sub
js
add
add
xchg
jae
mov
int
adc
xor
pop
cwtl
cli
cmp
jle
scas
rolb
jg
pop
bswap
add
push
mov
pop
std
or
xchg
adc
mov
add
sbb
adc
call
xlat
sub
jae
mov
sbb
xchg
repnz
popa
mov
mov
fidivrl
aam
xchg
int
ficoml
jno
test
clc
fistl
cmpsl
inc
lods
hlt
pop
div
add
filds
aas
cwtl
out
dec
pop
mov
sub
jae
mov
add
mov
mov
std
jne
outsb
mov
dec
push
and
jmp
mov
mov
jg
nop
aad
push
add
jmp
jle
and
inc
mov
add
cmp
out
lret
ss
jecxz
mov
adc
sahf
cmc
xchg
pusha
push
cmp
popf
je
or
pushf
lcall
mov
mov
pop
cmp
xchg
jnp
sahf
xchg
adc
or
push
cld
adc
dec
push
xchg
cwtl
rcrb
or
adc
push
push
mov
adc
sbbb
sbb
xchg
push
lahf
mov
cmpl
pop
loope
out
imul
mov
pusha
push
push
sub
jp
or
push
daa
mov
fs
lcall
fldenv
aad
andb
and
pushf
jae
mov
pushf
outsl
sbb
mov
push
push
fnstsw
cmpsb
sahf
and
lcall
mov
mov
lods
mov
xchg
push
pusha
aad
pop
xchg
sub
popf
lahf
push
add
pushf
xchg
pop
pusha
cmp
mov
mov
cmpsl
cmp
sbb
ss
inc
mov
ficomps
mov
mov
mov
adc
and
push
push
xor
sbb
push
mov
xchg
push
pushf
clc
adc
stc
xchg
sbb
lcall
push
xchg
orl
push
pusha
mov
xchg
sbb
sbb
pusha
sti
insb
scas
sti
movsb
sbb
xchg
push
pusha
xchg
lock
enter
xchg
lahf
lahf
aad
pusha
pushf
jae
mov
dec
mov
adc
cmc
or
lea
cmp
arpl
push
cli
cmp
xchg
sti
imul
in
testl
fwait
jmp
pop
je
fildl
popl
sub
sbbb
pop
rcrb
mov
aas
jg
neg
mov
fsub
add
pop
outsb
mov
or
lahf
mov
sbb
lahf
or
sahf
xchg
add
push
inc
int
mov
inc
shlb
inc
loopne
pusha
fwait
ror
sbb
jmp
cmp
loope
out
stos
popf
xchg
mov
pop
mov
test
jnp
aam
adc
push
icebp
rcrb
adc
test
pop
push
filds
add
nop
xor
and
mov
ret
xchg
stc
jb
mov
scas
fwait
aaa
inc
sbb
mov
gs
jae
cmp
cli
mov
pusha
and
movsb
ret
pushf
test
cmc
fwait
data16
cmp
jae
test
daa
adc
enter
xchg
xor
loope
std
cld
idiv
xchg
aaa
jmp
les
jns
pushf
xchg
xor
lea
in
int
test
adc
lea
pop
stos
mov
pop
xorb
jle
aaa
pop
sarl
addl
popa
push
mov
sub
arpl
push
adc
dec
std
and
push
scas
mov
sahf
aad
push
shl
gs
adc
sbb
fsubs
loop
pop
cwtl
lahf
clc
mov
lahf
daa
or
cmp
xor
lods
movsb
or
jbe
test
nop
mov
hlt
push
pusha
pop
xorb
loop
jb
add
mov
cmp
mov
dec
repnz
push
sub
inc
lea
add
rolb
cmpb
and
fs
insb
stos
jmp
loope
xchg
addr16
ret
jmp
enter
in
ds
je
xchg
pop
lods
bound
mov
and
or
push
or
mov
dec
xchg
fwait
xchg
stc
pop
sub
xor
xchg
ret
test
in
push
incb
mov
jb
shrb
ja
rorl
test
hlt
xchg
popf
mulb
dec
testl
fbld
into
shll
mov
mov
sahf
add
pop
fdivs
sub
pop
and
movsb
lds
sub
rcl
mov
mull
inc
xor
arpl
inc
in
mov
pop
jb
add
es
adc
hlt
cld
pop
push
lret
push
stos
mov
jge
lret
jle
addb
gs
pop
arpl
mov
arpl
mov
fbld
andb
je
sbb
loop
sahf
mov
gs
fsubl
arpl
or
or
clc
inc
ss
repnz
push
inc
stos
addr16
mov
or
flds
stos
mov
movsl
xchg
lods
bound
fmul
js
repz
subl
stos
adc
mov
cmp
stc
xchg
popl
add
sub
fisubl
lock
lds
add
mov
mov
sub
dec
mov
popa
decb
imul
stos
or
inc
orb
sbb
xlat
iret
out
repz
in
jb
into
xchg
or
jne
and
mov
xchg
xor
or
cmp
mov
jno
jne
inc
iret
fs
lret
inc
xchg
iret
lretw
daa
inc
sbb
faddl
and
sbb
mov
and
js
push
es
pop
mov
lods
xchg
jmp
push
mov
jle
xchg
cmpsb
pop
adc
xchg
mov
jmp
cmpl
sub
enter
enter
enter
leave
xchg
pop
je
inc
dec
inc
or
xchg
jmp
push
push
or
mov
sub
pop
dec
inc
cmp
ja
rcr
push
outsl
add
sub
mov
jle
cmp
nop
inc
popa
jecxz
dec
imul
inc
popa
add
sbb
aam
repz
les
repz
cld
es
sti
aaa
mov
mov
fsubl
shrb
pop
popf
clc
cmp
call
adc
add
sahf
cwtl
test
mov
adc
clc
sub
mov
add
dec
out
movsl
pop
dec
pop
xor
sbb
mov
cwtl
jb
in
sub
test
push
lret
sahf
pusha
ja
mov
sbb
mov
sbb
pop
xchg
pop
sbbl
pop
dec
push
add
imul
add
adc
lret
test
adcl
inc
push
push
mov
sbb
lahf
cltd
dec
pop
das
inc
dec
jne
fsubl
out
sub
mov
stos
add
repnz
lock
test
stos
inc
scas
test
mov
jae
test
out
lock
push
or
jg
cmp
xchg
outsl
lods
ss
sbb
and
aas
ja
daa
cmc
dec
mov
je
xchg
ss
aas
jp
jns
pop
mov
mov
negl
in
inc
lea
or
leave
std
mov
jp
jecxz
mov
xchg
push
mov
jbe
sbb
dec
imul
ja
movl
pusha
xor
jg
jo
inc
fisubrs
gs
addr16
cmc
dec
bnd
or
mov
xorb
mov
jle
lahf
adc
pop
lcall
and
addl
fisubl
pop
mov
and
sbbl
mov
test
fwait
adc
xchg
sti
push
std
adc
and
fdivrl
push
dec
cmp
sti
aaa
lcall
test
cmp
jecxz
push
jno
fmuls
xchg
mov
idiv
outsl
std
cmpsl
pop
mov
cmpsl
out
in
stc
mov
sti
fldenv
push
lahf
pop
addl
jb
cmpb
dec
xbegin
rcrb
adc
xor
movsl
scas
push
ds
push
imul
mov
cld
pop
and
pop
dec
aas
cmp
xor
test
push
test
xor
scas
pop
and
ret
adc
inc
push
pop
and
shr
lcall
mov
mov
daa
addr16
mov
popf
sub
addr16
jge
xchg
push
inc
sahf
dec
jo
and
add
pop
ja
push
nop
adc
test
cmc
mov
fcoml
fwait
movsl
pushf
push
notl
add
test
bound
or
lods
xor
push
repnz
push
scas
nop
dec
and
push
jp
add
mov
jb
xchg
and
xchg
mov
xor
fsubs
sub
andb
inc
adcl
add
test
icebp
mov
into
int3
lret
ret
push
and
xchg
fwait
jg
xchg
pop
jmp
cmpsb
add
pop
mov
push
sbb
lods
sahf
test
loop
sbb
xchg
xchg
js
data16
ja
sub
or
cmp
pop
or
inc
outsl
jg
iret
rcrb
and
fadds
jp
add
push
aad
mov
jae
pop
pop
push
cmpl
popl
fmuls
jb
ret
cli
fs
inc
pop
cmpsl
jg
stos
addr16
push
shlb
out
xchg
movsb
daa
jns
mov
nop
xchg
outsl
fnstenv
push
cmp
lahf
push
and
test
repnz
sub
and
xchg
gs
test
and
lahf
push
jmp
addr16
repz
mov
and
mov
call
push
xchg
add
gs
push
lret
int3
mov
adc
jnp
icebp
outsb
adc
addl
std
xchg
adc
xor
adc
xchg
xchg
or
push
adc
mov
enter
js
divl
pop
addb
and
pop
rolb
orb
jb
mov
aas
add
cmpsb
jno
add
push
ret
jb
call
imull
mov
in
inc
lahf
inc
les
pop
sbb
and
add
xchg
push
inc
popf
popf
nop
and
testl
xor
jb
adc
pop
add
and
pushf
call
jmp
jecxz
hlt
or
mov
cmp
dec
fstps
enter
pop
or
mov
xor
jecxz
stc
fildl
data16
popl
cltd
pusha
add
pop
popf
rorl
jbe
aaa
bound
jo
jae
ja
ja
aaa
pop
addr16
cmp
jmp
mov
cs
scas
icebp
push
xchg
push
adc
and
and
sbb
or
jno
inc
sti
adc
mov
mov
int3
and
jmp
gs
stc
jle
aaa
pop
ret
fistpl
sbb
je
cltd
pop
add
dec
fwait
test
int
xchg
cwtl
xlat
shll
insb
out
add
jp
call
repnz
lret
lcall
pusha
fldenv
or
push
jbe
mov
lds
push
enter
or
add
jb
lahf
inc
and
aaa
or
in
in
push
pop
in
ja
pop
cmp
pop
sbb
xchg
inc
test
pop
push
inc
pop
inc
xchg
jle
pop
fstpt
cwtl
xchg
mov
in
jle
iret
mov
fsubs
jne
xchg
jbe
jmp
repnz
ret
add
mov
pop
pop
mov
pop
pop
jno
test
sbb
test
cli
jae
gs
mov
mov
gs
pop
lret
stc
mov
jb
jb
xchg
sbb
jge
ret
or
or
dec
js
mov
inc
pop
test
inc
add
sbb
sbb
je
loop
push
sub
and
or
add
lock
mov
pushf
push
lods
aas
and
mov
mov
lahf
mov
stos
insb
or
xorl
and
xchg
clc
and
sbb
lahf
lahf
orl
cwtl
jle
loop
add
mov
xchg
outsl
sbb
lcall
addr16
pushl
jb
sbb
fwait
add
pop
dec
jge
into
sbb
mov
movsl
mov
pop
test
pop
fimull
aam
push
jg
sahf
push
enter
cmc
lds
xorb
mov
gs
pop
out
imul
and
addr16
mov
testl
push
or
jmp
sbb
test
punpckldq
mov
push
mov
cli
pop
lds
dec
lods
dec
in
test
sbb
push
dec
jb
adc
or
and
adc
push
popa
xchg
out
or
jne
lahf
imul
or
aas
lds
imul
sub
or
test
cmc
pop
scas
repnz
or
aaa
xor
out
mov
inc
fwait
popf
popf
imul
mov
ss
mov
dec
push
mov
push
nop
stos
jg
xlat
pop
xchg
sbb
test
movsb
jg
pop
pop
adc
mov
lods
jbe
pop
test
mov
push
pusha
leave
mov
push
imul
or
pop
push
popf
push
pop
sbb
bound
mov
cld
iret
push
loope
rclb
movsl
repnz
dec
in
cli
imul
cwtl
lahf
loope
pop
repnz
or
cmpsb
dec
mov
xchg
sub
or
mov
call
js
jo
outsl
push
mov
push
out
ds
push
cli
shlb
jns
fldl
jecxz
and
ret
xor
sub
add
arpl
jo
pop
cwtl
cwtl
dec
xlat
movnti
sahf
cmpsl
popa
test
adc
jge
push
mov
ret
mov
add
jne,pn
fisttps
jmp
push
add
or
jg
jns
mov
enter
sahf
push
popf
cmpsb
xchg
arpl
xor
push
pop
movsb
mov
test
ss
jmp
lahf
sbb
xor
adc
adc
sbb
daa
mov
mov
ret
inc
repnz
xchg
sub
stos
and
dec
inc
das
es
mov
out
lcall
pusha
sub
cld
adc
push
cld
push
cmp
clc
and
or
fdivrl
pusha
js
js
data16
fiadds
dec
adc
mov
pop
push
mov
push
es
subl
push
cwtl
mov
add
inc
add
sbb
adcl
jnp
sbb
jg
js
xchg
mov
rcrb
fimull
mov
mov
cmc
push
add
and
incl
add
adc
push
xlat
xchg
fisttpl
xor
cmpsb
push
or
sub
xchg
sti
test
and
aas
outsl
xor
cmpl
orl
sbb
dec
insb
cli
ja
jae
mov
fimull
push
pop
addl
cmpb
sbb
scas
sti
in
leave
out
hlt
adc
pushl
ja
push
inc
lcall
mov
or
or
add
lahf
popf
or
pop
lea
ret
je
xor
in
sub
add
xor
jns
scas
bound
adcl
xchg
push
sarb
lock
mov
or
or
outsl
sub
and
inc
adc
pusha
xchg
sbb
sub
gs
pop
arpl
je
pop
ljmp
das
fs
addl
cmc
pop
aaa
das
adc
mov
sahf
pop
or
shll
mov
jnp
add
mov
ret
outsl
xchg
lcall
ficoms
mov
xor
mov
mov
mov
inc
repz
ja
and
jge
adc
das
push
scas
sbb
lahf
ja
shrl
jle
add
scas
push
mov
mov
es
mov
jo
dec
fadds
decl
add
iret
inc
dec
addb
jecxz
lock
inc
pop
addl
imul
mov
xor
mov
xchg
inc
mov
jo
lea
add
sbb
jg
or
fisubrl
cmp
and
insl
clc
add
imul
aad
pop
xchg
aas
pop
add
or
imul
imul
lcall
orl
xor
add
push
faddl
mov
shl
jg
xor
bound
xor
enter
mov
jg
sub
ja
jp
lcall
outsb
and
mov
test
pop
add
test
xchg
sbb
mull
js
dec
movsl
sahf
xchg
dec
sub
into
xchg
sub
pop
aaa
xchg
and
loop
call
daa
adc
jae
jnp
pop
inc
repnz
xchg
xchg
cld
out
xchg
pop
xchg
jmp
jnp
and
fs
notl
xchg
cltd
jnp
jns
push
bnd
popf
out
test
addl
je
cltd
push
adc
fistpl
xor
js
and
movsl
out
mov
je
xor
adc
notl
aaa
or
clc
and
lcall
aam
push
ljmp
arpl
or
cmpsb
js
xchg
lea
dec
xchg
test
mov
xor
xor
jmp
repz
jecxz
pushf
push
sbb
add
addr16
pop
lcall
repnz
stos
hlt
xchg
sub
fimull
mov
sub
lahf
mov
adc
sahf
or
loope
sub
push
xchg
jmp
stc
bound
repnz
cmp
aaa
inc
cmpsb
fcoml
and
adcl
mov
orl
adc
jae
rcr
add
das
fsubs
loopne
popf
test
add
and
mov
xchg
add
and
jns
popa
test
pusha
rol
xlat
jmp
cmp
pusha
aam
loop
and
mov
xchg
jl
add
mov
ja
pop
and
adc
fsubrl
add
sbb
jno
andb
iret
int
subb
mov
jl
add
dec
enter
xchg
and
test
enter
or
daa
jge
jae
pop
bound
bound
mov
cmp
xchg
mov
das
add
fiadds
cmp
addr16
adc
push
aas
mov
icebp
arpl
cmp
stos
lea
mov
adc
sahf
mov
test
jae
inc
addb
lods
mov
add
and
int
inc
rcll
push
push
orl
jbe
sub
addl
xchg
xchg
fstpl
pop
les
add
or
jmp
stc
loop
imull
enter
adc
add
add
out
mov
nop
pop
sbb
rcrl
leave
xor
add
mov
loopne
xorb
js
shrb
mov
cmp
out
sahf
addr16
sbb
jne
xor
cmpsl
jl
and
sub
pusha
jmp
xor
clc
loop
xchg
negl
in
outsl
cmp
xchg
and
xchg
dec
inc
mov
pop
jno
mov
or
and
int3
pop
cmc
shl
add
lea
xchg
and
push
cmp
pop
outsl
jae
jecxz
cmp
outsl
dec
jge
neg
jecxz
mov
push
push
inc
mov
cmp
repnz
test
adcl
cltd
addr16
pushf
cmp
xchg
dec
orl
jns
jecxz
sbb
stos
mov
pushf
push
pop
lahf
lock
pop
jmp
fnclex
cmp
push
stc
pop
or
aaa
push
push
sbb
mov
filds
mov
add
dec
jmp
mov
sbb
sub
cltd
pop
jecxz
fs
xchg
mov
lahf
addr16
push
insl
jb
push
mov
adc
mov
cld
fucomip
rcrl
in
cs
add
es
adc
pop
inc
incb
pop
xchg
lahf
add
ficoms
mov
les
pop
lds
xor
daa
jg
lcall
fs
xor
xor
xchg
mov
cmp
cmp
sbbl
add
inc
lcall
jmp
shlb
add
xchg
or
jno
lods
add
and
shll
or
fwait
cmpb
pop
push
jb
cli
pop
pop
ds
sbb
push
dec
in
jle
ret
pushf
cmp
xchg
lcall
je
popa
dec
cmp
lret
ljmp
test
lds
ds
sarb
or
push
inc
mov
dec
adcb
cwtl
popl
sbb
cmc
bound
movsb
cwtl
sbb
sub
add
xchg
or
pop
in
pop
pop
loopne
pop
fildll
das
es
push
cmp
gs
pop
mov
sbb
loopne
or
dec
in
lret
pop
jle
cwtl
daa
and
push
mov
add
movsl
xorl
mov
nop
push
aaa
test
adc
sahf
push
push
adc
js
push
notl
cmpsl
and
ljmp
or
and
inc
out
test
lds
cmc
add
mov
repz
mov
leave
test
mov
push
rcrl
cmp
pusha
pop
or
dec
movsl
lods
or
mov
xchg
mov
push
ret
shr
cmp
loope
loop
dec
lahf
pop
mov
mov
push
int3
les
xchg
roll
jp
mov
and
mov
lds
or
pop
cmp
cmp
lahf
lock
out
inc
je
cltd
and
arpl
mov
and
xor
mov
or
cmp
fmuls
lahf
push
xchg
test
rolw
lret
sub
cwtl
adc
cmc
mov
mov
jmp
mov
inc
sub
pop
and
out
jmp
enter
or
andb
mul
sub
push
inc
lahf
fists
int3
mov
sbb
ret
mov
scas
scas
enter
mov
mov
fisubrs
xchg
sbb
jbe
test
pop
fildll
or
add
xchg
pop
push
repz
pop
and
std
sbb
adc
bound
sbbb
std
fs
in
sub
and
jecxz
test
inc
enter
push
mov
inc
movsl
ja
std
test
pusha
gs
pop
jo
imul
mov
es
std
fnstsw
pop
push
cmp
ret
outsl
dec
jge
push
inc
xchg
fdivrp
in
fwait
fwait
gs
dec
fld
xor
mov
bound
mov
popf
sahf
repnz
dec
add
fistpll
pop
je
add
popf
ficoms
and
xor
js
loope
test
xchg
das
cmp
cmp
add
stc
shll
sarb
mov
push
jmp
mov
mov
flds
mov
movsl
jl
sub
fldenv
cmp
inc
pop
pop
arpl
and
inc
adc
push
lahf
cmovae
je
dec
and
push
dec
pop
add
cmp
mov
mov
and
outsl
adc
add
push
mov
mov
mov
sub
add
loop
adc
aam
out
jo
xor
fs
test
mov
sub
adc
xchg
rol
cmpl
mov
aad
sahf
repnz
jae
pusha
adc
cmp
nop
std
cmpb
cmp
pop
repnz
mov
nop
clc
ret
adc
sarl
mov
jmp
cmpsl
xchg
addr16
cld
adcl
adc
fs
xchg
inc
cld
cmp
inc
dec
dec
dec
or
faddl
fnstsw
adc
fbstp
inc
ja
jge
nop
dec
popa
jp
pusha
sub
xorb
std
xor
jmp
je
pop
cmc
mov
push
pop
imul
ja
sub
fldt
aaa
pop
data16
and
xchg
enter
test
call
pop
sbb
xor
imul
cmp
cltd
xor
jo
sbb
add
in
cli
sub
leave
sbb
imul
xchg
sbbl
dec
mov
aaa
add
dec
add
cs
aaa
pusha
cld
xlat
mov
add
and
out
xchg
ret
pop
or
xor
shll
into
or
pop
inc
mov
mov
mov
add
cmpsl
in
mov
mov
mulb
and
cmp
and
mov
sbb
cmpsb
outsl
push
adc
adc
idiv
mov
mov
cmpsl
inc
sbb
mov
lahf
in
cmp
mov
or
xchg
pusha
stc
mov
inc
pop
addr16
add
fs
jg
in
lahf
or
push
mov
pusha
or
and
adc
mov
jle
outsl
jle
jo
imul
movsb
test
sbb
jno
sbb
popa
jbe
adc
and
xchg
and
inc
mov
enter
dec
cmp
inc
sub
or
cmp
test
in
pop
pusha
subl
inc
aaa
mov
sahf
dec
ret
repnz
xor
in
sub
xor
stc
dec
sbbl
test
clc
pusha
rorb
pop
dec
and
aas
fidivrl
pop
xchg
xchg
add
sub
imull
add
mov
push
loope
add
xchg
or
stos
aaa
xchg
cld
pop
cmp
push
rclb
mov
and
mov
adc
mov
fwait
or
fldl
fisubs
scas
pop
clc
cmp
pop
mov
or
mov
mov
iret
dec
inc
cmp
movsl
jo
data16
jbe
pushf
lahf
call
ds
xchg
adc
inc
push
loopne
push
aas
mov
push
addr16
cwtl
sub
lods
push
imul
lahf
lret
aad
hlt
mov
jle
pop
int3
adc
cli
addr16
ja
pop
push
out
sub
or
cmpb
sub
imul
rcrl
mov
icebp
mov
clc
lahf
pop
add
repnz
cli
iret
sub
cmp
push
dec
add
xor
inc
dec
pop
imul
negl
dec
xlat
inc
pop
imul
push
arpl
jo
lcall
jge
mov
inc
sub
inc
adc
lea
insl
dec
pop
dec
imul
outsb
jecxz
pop
push
cwtl
mov
stos
mov
add
aaa
xchg
adc
repnz
cmp
xchg
bound
rcrl
dec
popa
aad
mov
arpl
and
repnz
pop
iret
cltd
pop
sbb
jecxz
cmp
pop
test
cmpb
outsl
icebp
pop
push
pop
and
xor
push
cmp
std
jp
scas
sub
sbb
imul
mov
mov
sub
pop
repz
inc
lcall
xchg
mov
push
xchg
cli
pop
push
jb
mov
lea
inc
xchg
loopne
scas
sbb
xor
in
out
pop
sahf
mov
cmc
jmp
cs
xor
pop
lock
xlat
cmpb
push
insl
xchg
pop
ja
push
cmp
aaa
fadds
fdivrs
rol
sub
cmp
adc
out
cltd
adc
lahf
aad
fildll
arpl
xchg
aam
and
jb
mov
sub
mov
xlat
jns
lret
arpl
cmp
aaa
sub
cmp
aam
shll
cmpb
sub
push
mov
mov
mov
in
out
xchg
mov
lret
xor
jecxz
add
cwtl
push
mov
sbb
bnd
arpl
add
fisubl
push
mov
xchg
cli
push
fsubp
orl
push
popa
ret
ja
inc
jnp
add
adc
shll
addb
sarl
mov
xchg
lcall
sbb
repnz
and
push
in
inc
adc
sbb
enter
mov
adc
xchg
sbb
js
xor
movzwl
adc
pop
sub
out
cmpxchg
sbb
fldl
mov
sub
leave
repnz
mov
sub
xor
arpl
jecxz
xor
add
js
mov
add
jb
inc
iret
xlat
aad
rcrl
and
add
rcll
and
fsubs
jle
dec
xchg
lds
data16
lahf
sub
sbb
rorb
loop
inc
cmp
in
mov
js
pop
nop
test
mov
insb
ja
in
loopne
mov
les
inc
data16
sbb
decb
enter
jmp
add
aaa
rorb
nop
clc
add
mov
or
pop
hlt
repz
jno
cltd
andb
push
adc
orl
sub
mov
mov
push
mov
nop
mov
inc
js
js
mov
or
mov
xchg
mov
add
in
add
cmp
add
xor
push
mov
arpl
mov
mov
or
and
aaa
fildll
ficomps
dec
xchg
add
mov
mov
scas
jmp
adcl
push
push
filds
sahf
inc
repnz
jl
orl
insl
jb
xchg
les
sar
pusha
xchg
leave
shl
push
les
orb
inc
push
mov
notl
and
dec
test
mov
dec
lahf
popf
pop
mov
scas
daa
mov
push
scas
mov
filds
scas
push
cli
loopne
out
mov
cmp
insb
jns
mov
pop
dec
lahf
std
roll
xchg
lahf
or
mov
mov
imul
pop
cmp
add
mov
pop
dec
push
les
jecxz
and
lahf
add
mov
ret
and
pop
pop
arpl
adcb
push
ds
add
jle
nop
inc
addr16
dec
daa
push
push
sbb
sahf
inc
jp
ds
outsl
lret
inc
movsb
rorb
push
dec
add
aaa
pop
test
mov
cmpsl
cmp
stos
mov
incl
and
sub
mov
sahf
cmp
push
inc
pop
cmpsb
xchg
cmpl
outsb
lahf
popl
repnz
mov
sbb
pop
xchg
sbb
andb
repz
jns
xchg
enter
subb
inc
aad
imul
or
gs
pushf
sub
test
inc
in
or
cs
mov
scas
and
cmp
mov
or
xor
push
pop
mov
out
aad
sahf
rcr
ss
pop
mov
xor
pop
sub
mov
fbld
dec
sbb
inc
mov
ds
vcvtdq2pd
aam
test
dec
movsl
inc
dec
push
mov
repnz
mov
cmc
in
lods
mov
pop
fcmovb
push
sahf
mov
pop
and
pop
push
sbb
or
jbe
mov
xor
pop
fistps
pop
or
popf
test
iret
insb
and
sub
ljmp
aaa
sbb
xchg
xor
stc
adcl
jns
xchg
mov
loopne
sbb
outsl
fwait
or
inc
mov
mov
inc
inc
add
out
sub
cld
sbb
dec
in
aaa
repnz
pop
pop
adc
mov
rcl
sti
inc
mov
incl
jno
add
jno,pn
pop
and
lods
xchg
mov
add
pop
add
adc
icebp
cmpsb
nop
rorl
and
arpl
movsb
movsb
adc
add
scas
fcmovnbe
sub
sub
push
mov
inc
or
dec
add
sub
sbbl
jmp
jns
popf
rclb
jns
jae
cmp
jnp
mov
subl
dec
rcrl
mov
mov
rcr
mov
fnstenv
fldcw
mov
sbb
add
mov
gs
pop
mov
sub
daa
cmp
dec
cld
xchg
imul
imul
rcrb
jl
test
and
ljmp
push
jg
mov
sahf
cmc
in
das
mov
adc
test
dec
lds
adc
inc
push
dec
mov
cmp
inc
and
mov
nop
bnd
fisttpll
dec
daa
jo
pop
andb
or
ret
adc
sbb
out
mov
xchg
ret
mov
mov
adc
dec
subl
inc
adc
xchg
sarb
lods
jg
inc
addb
jno
icebp
cmp
incb
popf
pop
inc
mov
mov
addb
shrb
dec
loop
push
std
sbb
pop
pop
nop
lds
mov
jge
and
xor
cltd
xor
std
xchg
cmc
add
mov
call
movsb
xchg
test
mov
lahf
imul
mov
test
ret
xor
or
add
jp
or
add
imul
popf
lret
jg
pop
jb
sub
fadds
mov
test
test
pop
jbe
iret
idivl
movsb
xor
rolb
sub
je
out
es
jae
dec
sbb
jno
pop
dec
jp
xor
sbb
and
jmp
add
mov
and
sbb
test
xchg
dec
movsb
dec
inc
das
xchg
lahf
lods
xchg
jg
dec
add
test
push
stc
xchg
inc
sbb
das
jne
cmp
cs
jp
sbb
fstps
aaa
cmp
cmp
and
xchg
xchg
xor
xor
or
or
mov
ja
add
push
test
arpl
lods
sahf
and
cmp
sti
arpl
dec
pop
pop
decb
push
sahf
pop
inc
cltd
insl
test
sbb
mov
gs
jp
pop
pop
ja
mov
lods
popa
inc
xchg
sbbl
test
pop
mov
jmp
sbb
dec
pop
arpl
cmp
ljmp
dec
stos
test
jmp
dec
lock
and
imul
push
xlat
pop
out
push
shlb
sbb
loopne
adc
aas
and
andl
push
addl
lahf
aaa
scas
push
sahf
aad
xorl
cltd
xlat
inc
lcall
pushf
enter
lods
aas
adcb
test
aam
mov
movsl
push
into
sub
mov
pop
sbb
fdivrp
shr
test
in
inc
mov
xchg
sahf
adc
dec
mov
add
push
popa
daa
out
loopne
movhps
or
pop
je
jns
mov
adcb
fbld
and
repnz
subb
test
pusha
lret
pop
jl
sbb
lea
adcb
cmp
imul
mov
les
in
int
push
inc
sbb
mov
mov
add
inc
rolb
adc
je
or
fildl
dec
mov
test
cmp
ss
in
cli
dec
daa
sbb
cmc
imul
sub
mov
scas
xchg
pop
fildll
sub
sub
cltd
dec
mov
out
ret
dec
push
icebp
xchg
push
adc
pop
vpmacssdql
orb
push
add
jp
sub
nop
mov
cwtl
cmp
mov
adcl
push
lock
cli
mov
pusha
insl
xchg
mov
push
ds
test
out
mov
xlat
mov
fiaddl
xchg
jg
sub
jp
ret
nop
pop
das
jl
mov
mov
add
cli
xchg
push
mov
mov
push
mov
inc
daa
jecxz
lahf
popa
mov
movsb
insb
out
sbb
add
adc
cmpsl
ljmp
arpl
mov
pusha
xor
pop
add
cwtl
jo
test
fld
aaa
mov
push
cmpsl
xorl
shlb
push
mov
data16
pusha
sbb
push
pop
mov
cltd
xor
imull
and
mov
dec
ret
mov
dec
rorb
decb
xchg
je
cmp
dec
addb
stos
stc
mov
adc
leave
flds
cmpsl
js
mov
popa
pop
ret
cmp
das
xchg
mov
icebp
cmpb
jecxz
scas
dec
sub
xchg
js
push
hlt
out
ljmp
xchg
mov
mov
lcall
pushf
fldenv
add
mov
and
out
pushf
sub
mov
movsb
hlt
xor
mov
mov
lahf
pop
push
xchg
jbe
sbb
inc
imul
xchg
or
sarb
push
cmpsb
loope
inc
imul
cwtl
push
adc
fs
jae
xlat
lcall
push
fs
pop
ljmp
inc
fmull
push
dec
and
sub
test
adcl
mov
mul
orl
aas
cmp
dec
bnd
ja
adc
rcll
pusha
andl
scas
inc
and
pause
mov
add
xor
push
test
sbb
in
dec
jmp
in
push
add
cs
inc
outsl
add
outsb
mov
stos
in
testb
mov
pusha
sub
inc
insb
lds
fsubrl
jmp
stos
xchg
cmp
aam
stos
imul
pusha
and
scas
push
mov
scas
test
lea
push
pop
andb
or
lock
in
push
dec
clc
sbb
repnz
test
sbbl
pop
dec
sub
pushf
ds
jge
gs
inc
aaa
jo
jbe
aaa
repnz
cmpsl
mov
push
adc
cmp
mov
clc
mov
mov
pop
add
or
add
test
mov
inc
addb
mov
add
ds
sbb
sbb
dec
xor
pop
andb
fnsave
pop
out
pop
pop
jl
mov
repnz
scas
in
or
cmp
sbb
popf
sbb
xchg
popf
ja
jb
sahf
inc
add
sbb
bound
sbb
inc
pop
jno
jp
or
sbb
lahf
jb
popf
ja
mov
and
mov
sbb
inc
fwait
sbb
pushf
or
paddsb
inc
cmpsb
sub
jnp
sub
pop
sbbb
lahf
sbbb
mov
scas
lret
push
cmp
cltd
add
mov
lcall
pop
sbb
in
dec
xchg
es
pop
cmpb
cltd
jne
xor
lahf
or
pusha
sbb
and
push
add
ret
mov
sbb
mov
inc
pushf
xchg
and
roll
sbb
pushf
ret
addb
ret
and
inc
rorl
fs
lret
cmpl
xchg
xchg
inc
push
les
sarb
add
leave
adcb
test
add
lahf
lcall
cmp
insl
add
push
addr16
and
sahf
arpl
push
sbb
sbb
es
test
adc
xchg
mov
adc
les
bound
ja
adc
xchg
jne
mov
or
inc
xchg
xchg
jne
mov
sbb
lea
or
cmp
or
push
int
sbb
les
adc
adc
ja,pt
rcr
pop
cltd
mov
sbb
ficomps
jns
orl
ljmp
xchg
ret
sarl
lcall
xchg
sbb
push
inc
lahf
popa
add
popa
test
test
mov
fdivrl
xor
cmp
or
jae
ja
ss
push
in
aam
pop
pushf
or
mov
cmp
mov
pop
sbb
lahf
push
xchg
loop
pop
sub
push
sub
movsl
cmpb
add
jp
pushf
mov
insb
mov
fldl
jae
sbb
lahf
push
jle
mov
pop
lea
daa
subb
outsl
inc
inc
fcoms
jp
js
xchg
pop
mov
test
enter
xchg
pop
mov
out
enter
sub
push
cmpsl
sub
incl
lods
cli
or
jo
pop
sbb
cmp
cmc
ret
xchg
out
cmp
add
clc
les
sahf
pop
jbe
mov
mov
dec
mov
fdivrs
adc
test
repnz
ficompl
test
sub
sbb
ja
sub
ret
mov
add
pop
clc
add
test
add
fcom
out
sub
lret
jo
dec
sub
jnp
notb
movsl
enter
cli
shrl
mov
xchg
pop
xlat
adcl
add
sbb
imul
cmp
or
sbb
imull
sbb
mov
dec
imul
into
inc
sub
sbbl
add
add
in
stos
sub
fmull
in
sbb
lods
mov
roll
cwtl
aaa
inc
adc
xor
xorl
or
xchg
iret
push
jecxz
sub
adcb
fwait
nop
mov
aaa
aam
add
iret
and
mov
jmp
idiv
xchg
dec
bound
jns
xchg
jle
xor
cs
pusha
fildll
outsb
pop
dec
mov
lods
data16
push
and
fsubl
sarb
cltd
xchg
fildl
nop
addb
enter
out
sbb
repnz
movsb
xchg
popl
pushl
movsl
rcrb
mov
test
cmp
mov
push
pop
push
dec
test
cmp
cmp
cmc
sub
aas
imul
add
ret
and
fdivr
adc
les
xor
lods
int
mov
mov
pop
shll
jo
push
jo
jl
mov
subb
xchg
popf
fadds
sub
adc
ja
pop
xchg
inc
insb
bound
sub
push
or
mov
inc
addl
in
aam
mov
cltd
test
enter
ret
mov
out
pop
jp
jno
in
jno
xchg
jnp
inc
call
and
cmp
sarl
lods
dec
inc
dec
rorl
in
mov
or
xorl
inc
dec
scas
pusha
mov
pop
jae
dec
int3
imul
aas
addr16
dec
stos
and
add
bnd
lcall
jmp
push
or
lds
xchg
imul
push
mov
sub
push
push
sbb
xchg
cwtl
addr16
dec
adc
push
cmp
adcb
mov
decl
add
ret
inc
bound
or
sbb
outsb
outsl
repz
lcall
and
mov
int3
je
fwait
sub
push
mov
jae
or
adc
jne
cmc
popa
pop
push
subb
out
xchg
cmp
dec
outsb
sarl
movsb
cld
jns
movsb
jns,pt
movsb
addr16
in
mov
and
pushf
jge
push
popl
aaa
test
mov
mov
mov
faddl
pop
jp
mov
pop
sbb
xchg
out
cmpsl
test
pop
cmc
jnp
into
test
pop
fucomip
inc
cmpsl
scas
inc
adc
repz
push
pop
adc
insb
pop
inc
hlt
ret
or
outsb
jp
out
xor
sbb
jne
sbb
add
mov
nop
lret
test
cmc
add
orl
pop
mov
je
fdivr
push
cmpl
rorb
pop
jge
fildl
mov
scas
movl
inc
leave
adc
test
jmp
js
cltd
in
scas
in
xorl
cli
pop
mov
pop
xchg
orl
out
andb
mov
adc
lea
addl
or
or
adc
bound
pop
mov
mov
adc
js
push
bound
mov
sub
add
test
aam
add
scas
inc
jg
jno
jecxz
add
sbbl
mov
loopne
jo
addb
insb
test
ljmp
jne
pop
clc
mov
shll
jecxz
cmp
add
adc
test
test
fildll
jp
mov
xchg
push
gs
mov
xor
mov
xchg
jge
jecxz
jle
das
mov
sbbl
fwait
lret
mov
push
xlat
aaa
sub
fsubrl
mov
inc
fwait
ds
xor
mov
loopne
xchg
fwait
or
xchg
fs
sbb
test
fwait
push
notl
adc
pusha
cwtl
add
lock
jno
sub
pop
push
pop
xchg
xlat
inc
adc
subl
adc
adc
dec
mov
xorb
sub
mov
inc
scas
push
clc
add
loop
and
push
shll
mov
test
mov
fisttps
adc
out
jo
push
inc
repz
inc
sbb
inc
scas
enter
add
jno
sub
incl
sub
mov
rolb
push
lcall
sub
les
cli
insb
cli
lahf
push
dec
jno
pop
cmp
pop
negb
inc
mov
jnp
cmp
aaa
cld
iret
sub
cmp
xchg
adcl
mov
lcall
cmp
sahf
cmpsb
mov
mov
movl
test
inc
in
push
scas
repnz
repz
lahf
xchg
ret
fcmovnu
inc
sbbb
add
push
mov
and
fidivrs
popa
mov
test
inc
jb
idivl
xor
add
adc
js
loope
fldcw
push
in
aaa
cmp
test
or
fdivs
outsb
adc
pop
sub
shl
mov
pop
xchg
insl
inc
push
adc
dec
jle
mov
adc
pop
jae
addr16
fs
jecxz
icebp
inc
adc
add
das
sbb
sbb
xchg
mov
cmpsl
push
out
pop
mov
cmp
cli
push
push
rcrb
sub
aaa
pop
push
jnp
faddl
aad
mov
jb
xchg
out
lds
dec
push
test
insl
xor
popf
into
push
fsts
fsubs
pop
dec
fisttps
xchg
mov
jl
lods
rcll
lcall
sti
pop
ret
xor
fiaddl
cli
iret
test
xchg
lret
shll
sbb
leave
adc
ret
repnz
jle
and
mov
pop
out
xor
xor
cld
sti
jns
aad
jg
xchg
cltd
adcb
or
cmp
xchg
xor
ja
sbbb
sbbl
mov
in
arpl
insb
cltd
sub
xchg
mov
inc
fadd
push
mov
add
xor
fldl
or
cmp
or
xchg
xorb
pop
js
add
cmc
addr16
mov
cmpsb
inc
in
mov
jg
push
scas
sarl
xor
add
ret
adc
and
jg
popa
cmp
xchg
in
test
mov
or
nop
pop
in
enter
mov
loope
pop
lods
add
cltd
push
arpl
cmp
push
out
rcll
gs
push
roll
xchg
mov
mov
cmp
fs
push
je
and
sbb
cld
fisttps
dec
mov
mov
jecxz
fwait
dec
mov
dec
push
jbe
xchg
popa
pushf
test
addl
mov
rol
insl
and
loope
std
mov
in
lea
lret
ds
in
mov
adc
mov
xchg
dec
and
xchg
cmpsb
or
mov
xchg
sbb
ja
and
sub
ret
outsl
lcall
rclb
ret
add
flds
rolb
imul
je
xor
stc
mov
adc
inc
mov
lcall
inc
cltd
mov
cli
dec
jns
dec
aad
xchg
push
add
xchg
inc
adc
pop
gs
xchg
repnz
cmp
mov
shlb
xchg
stos
push
and
pop
and
cmpl
and
cld
jb
inc
jns
pusha
xchg
push
insb
aad
addb
mov
aam
and
dec
xor
mov
jle
jl
jo
repnz
and
sahf
add
mov
mov
and
punpckhbw
mov
add
xchg
roll
hlt
inc
fs
sbb
and
xor
push
fstpt
xchg
stos
mov
xchg
mov
inc
mov
or
mov
jb
lds
mov
cwtl
insb
mov
idivl
inc
sbb
add
xchg
fcomi
or
add
lahf
rcll
dec
imul
mov
xchg
ret
adc
mov
cmc
sub
subb
int3
jo
xchg
scas
inc
out
mov
cmpsl
xchg
mov
xor
add
jle
fldl
push
and
je
jecxz
into
js
dec
test
xchg
daa
cmc
daa
inc
das
lea
fs
aaa
mov
icebp
jecxz
sbb
pusha
fwait
and
loopne
loopne
mov
into
sub
inc
mov
imul
and
jbe
xchg
movsl
shr
pop
in
mov
add
cmp
add
sbb
nop
out
movsl
pop
fisubs
shrl
mov
or
in
pcmpgtd
lods
ss
add
nop
mov
cli
adc
cmovs
mov
push
sarb
arpl
outsl
or
and
into
xchg
jp
push
repz
nop
rolb
xor
dec
inc
push
sbb
jo
ror
add
add
insl
int3
add
jmp
mov
push
in
std
pop
mov
in
ret
fstpt
jmp
mull
hlt
in
and
clc
mov
adc
jne
daa
mov
and
cmpsb
pop
cld
inc
inc
sub
mov
inc
push
mov
cltd
imull
inc
incl
add
mov
mov
and
pushl
mov
sub
faddl
mov
mov
std
xchg
je
test
insb
iret
push
mov
push
jge
pusha
and
jecxz
sub
sub
wbinvd
inc
push
outsl
sbb
std
add
decl
arpl
inc
dec
lcall
xchg
sbb
jp
or
add
roll
adc
aam
stos
in
imul
push
ret
lahf
imul
scas
aam
and
cmc
pop
rcll
filds
ds
adc
movsl
push
or
fdivrl
sbb
mov
mov
repz
adc
icebp
jb
dec
cmc
stc
mov
fidivrl
fs
andb
jo
mov
mov
xchg
lret
arpl
enter
in
sbb
sahf
iret
lret
add
int
adc
pop
ret
bound
inc
test
out
loopne
sbb
pop
jg
das
dec
dec
push
mov
enter
rclb
mov
iret
lods
clc
push
pop
mov
sti
or
test
ja
mov
xor
sbb
mov
dec
inc
fs
insl
inc
in
push
mov
fstpt
cmc
cltd
stos
test
sbb
sbb
dec
adc
cld
cmc
xor
dec
sub
or
in
rcrl
push
daa
fwait
push
fcomi
sbb
loop
les
ret
xchg
ret
hlt
sbb
jmp
xchg
movb
cltd
in
cmc
daa
push
in
sub
and
daa
xchg
out
mov
ja
movsl
or
mov
push
sbb
inc
jmp
outsl
call
js
aam
xor
cwtl
subb
sbb
fstps
or
fcom
ret
orb
push
or
test
iret
add
mov
push
std
cli
or
sti
int3
or
and
adc
xor
add
fbstp
loopne
mov
mov
and
pusha
test
cmp
sub
mov
popf
add
mov
inc
pop
pushl
sahf
sub
push
sti
bound
push
imul
push
push
sbb
xor
xchg
add
test
mov
cltd
jns
mov
add
inc
cmpsl
out
sbb
mov
aas
pop
cmp
gs
mov
and
pop
aas
xchg
mov
and
mov
test
sub
je
push
rol
adc
dec
dec
ja
fwait
negl
and
test
loopne
mov
xchg
ljmp
fnop
mov
push
push
push
xchg
cli
lret
je
or
divl
jp
insb
xchg
push
cmpl
push
popa
dec
fwait
or
add
pop
xchg
or
bound
xlat
jne
push
scas
mov
mov
mov
cmp
fisttpll
mov
js
or
in
pop
popa
push
test
add
mov
ja
pop
testb
rcll
punpckhbw
mov
mov
cmovb
mov
cmp
ds
maskmovq
notl
dec
ja
rcl
jns
daa
and
addr16
push
push
stos
fimuls
stos
fwait
int
pop
std
jb
xor
mov
sbb
push
mov
scas
jp
mov
cli
cli
inc
xchg
and
sbb
movl
mov
cltd
add
std
daa
arpl
xor
sub
aas
lahf
std
lret
cmp
xor
cmc
cmp
jnp
sub
cmpl
push
iret
ja
or
adc
xchg
out
arpl
repnz
jge
cmc
cmp
in
xchg
fwait
movsb
pop
pop
test
cli
sar
cmp
cwtl
out
cli
add
ja
pop
cwtl
push
push
mov
out
xchg
ja
test
es
inc
fwait
adc
aas
adc
push
inc
js
cmp
ja
mov
pmulhw
call
push
dec
and
xor
pop
enter
cmp
std
xchg
decb
addr16
jp
inc
adcb
cmp
xor
aad
aaa
pop
cmpsb
and
lahf
add
cmpsl
inc
fwait
push
add
sbb
xor
mov
jmp
rcrl
lahf
in
scas
loop
add
or
ss
and
xchg
adc
cltd
arpl
inc
addr16
fistpll
sbb
movsb
cmp
leave
cmp
inc
addl
fdivs
movsb
int
pop
into
mov
xchg
fbld
fstl
adcb
fildll
dec
test
jg
scas
pop
mov
pushf
mov
xchg
adc
fcoml
stc
jns
xchg
mov
push
mov
test
fidivs
pop
sub
addb
and
jl
or
addl
xchg
pop
and
xchg
shlb
xor
sbb
mov
sub
xor
dec
movsl
mov
add
inc
aam
jmp
sbb
fdivl
or
out
xor
arpl
mov
pop
xor
jae
stc
div
cmp
mov
cmp
clc
and
add
loop,pn
nop
xchg
cmp
jmp
dec
sub
inc
data16
xor
addr16
in
mov
and
cmp
or
loop
cmc
lcall
std
cmp
gs
adc
and
insb
jo
cmp
fstl
or
or
jb
mov
inc
pop
testb
ja
mov
jae
jae
pop
push
jns
push
insl
divl
ja
sbb
cwtl
insb
pushf
aad
or
rcll
sbb
push
cmc
rorb
data16
stc
les
fistps
data16
outsl
fbld
imul
out
cmp
subb
test
cmp
sub
lahf
dec
push
arpl
jns
inc
push
arpl
sbb
adc
push
mov
addr16
mov
sbb
outsb
add
mov
xchg
mov
aam
shrl
pop
mov
adc
fisttpl
iret
or
or
mov
leave
inc
mov
add
decl
andb
call
test
mov
sub
mov
xchg
fistpl
lret
cmc
cmp
mov
dec
xchg
cwtl
fistps
mov
cwtl
loopne
pop
lds
jl
addb
add
push
inc
pop
xor
or
xchg
sub
xlat
add
les
jl
sub
sub
mov
imul
jns
repz
push
movsb
incl
icebp
in
cmc
ja
sarl
push
in
jecxz
lahf
add
daa
pop
nop
clc
jecxz
arpl
jg
xor
add
ret
test
sahf
cmc
add
add
movsl
data16
adc
sub
addb
add
mov
mov
sub
addb
mov
lret
sub
push
ret
mov
xchg
push
iret
mov
dec
cmp
xor
inc
cmp
pop
add
or
sbbl
cmpl
fists
clc
pop
push
js
mov
pop
outsb
add
inc
pop
loopne
popl
into
xchg
orb
and
and
lods
bound
adc
mov
lcall
jo
push
iret
fs
push
out
mov
movsl
scas
hlt
inc
cmc
add
int3
les
dec
mov
arpl
repz
xchg
jp
in
xchg
lea
cmp
jae
shrb
xchg
shlb
test
daa
pop
addr16
xchg
and
mov
pop
xchg
cmpsl
in
push
dec
sbb
scas
pop
cld
xadd
jg
add
cmpsl
fwait
sbb
xchg
and
filds
pop
mov
or
inc
adc
or
or
mov
decl
inc
incl
inc
incl
jecxz
cmpsb
jns
inc
inc
aam
popaw
andb
sahf
arpl
inc
mov
xchg
aam
pop
jb
xchg
inc
push
fld
jmp
repnz
jle
adc
xchg
add
loop
inc
or
andb
sbb
in
std
xchg
and
mov
xchg
popa
xchg
sub
cmc
mov
fisubrl
mov
mov
pop
mov
jb
adc
inc
lods
pop
cmpl
aas
adc
adc
cmpsb
scas
push
daa
fistps
sub
push
jno
pop
sbb
add
lahf
sbb
inc
mov
fwait
add
adc
add
xorb
lahf
pop
dec
and
dec
jg
jmp
test
add
sbb
push
bound
cmpb
std
std
jl
ficomps
ret
pop
mov
roll
and
repnz
xorl
clc
xorl
pop
stos
cld
mov
mov
iret
ffreep
movsl
sub
test
xor
loopne
cwtl
and
pop
push
mov
dec
xor
cmpl
or
sub
sahf
xchg
sub
imull
mov
ret
jo
shrb
cld
ret
mov
iret
mov
push
movsl
push
add
inc
cwtl
mov
test
mov
xor
mov
insb
movsb
imul
stos
out
and
loop
in
sub
mov
lds
add
test
popf
inc
mov
test
stos
icebp
dec
xchg
je
loop
jns
je
add
mov
add
out
sbb
ss
or
and
adc
insb
in
push
and
push
cmp
nop
pop
mov
vmovups
xchg
inc
in
fnstenv
ja
sub
shrl
leave
cmp
hlt
cmc
and
inc
ja
add
adc
jg
sub
push
jnp
ljmp
xchg
shll
mov
jbe
imul
and
lahf
imul
jne
cltd
test
mov
psadbw
call
push
jmp
mov
fstpt
pop
xor
sub
loop
jg
cmpsl
js
arpl
sub
jl
push
loop
xchg
add
jae
adcb
add
inc
cmp
lret
cmp
sbb
cmp
adc
ja
dec
iret
aaa
pop
scas
dec
test
test
aaa
sub
jne
aas
sarl
jae
push
pop
sbb
add
pop
les
push
dec
pop
xor
addl
in
arpl
add
popf
or
and
sbb
sub
cmpsl
out
cmc
test
outsb
sbb
adc
adc
xchg
or
adcl
xchg
push
push
jns
mov
mov
stos
mov
mov
test
jp
mov
dec
cmp
jp
sti
xlat
ja
imul
mov
repnz
mov
jmp
pop
ja
jb
or
mov
mov
ja
daa
pop
or
stc
push
adc
cltd
jecxz
pushf
sar
adc
je
mov
xchg
lods
ja
ss
xor
cwtl
mov
sub
adc
inc
fldl
mov
add
aaa
push
push
addb
setb
int3
adc
mov
sbb
dec
inc
lahf
jle
std
jl
in
mov
push
shlb
and
das
sbb
mov
mov
adc
sbb
pop
and
mov
repnz
mov
mov
sbb
ja
sbb
mov
xorl
inc
mov
pop
pop
fmull
loope
sub
sar
jnp
jp
pop
jecxz
mov
add
lcall
jne
bound
icebp
je
add
cmc
sub
test
xor
inc
pop
cmpsb
mov
xchg
push
pop
jle
push
ret
fnstenv
pop
add
js
mov
icebp
lret
pusha
dec
pushf
nop
lea
inc
ja
not
test
sbb
dec
xchg
mov
out
int
push
push
inc
in
nop
hlt
cmp
xlat
xchg
inc
xor
ljmp
push
test
pop
imulb
xor
cwtl
add
out
mov
mov
cmp
add
and
test
nop
add
lods
icebp
pop
repnz
inc
insb
orl
notl
clc
daa
lahf
movsb
aad
arpl
jle
scas
outsl
lock
xchg
adc
gs
testb
add
test
mov
inc
jg
push
and
and
mov
sbb
add
sahf
add
lcall
inc
mov
jnp
adc
aad
je
xor
out
nop
gs
xchg
pop
ja
jnp
fsubrs
dec
loop
pop
imul
mov
jnp
dec
fstpt
mov
or
add
addl
negl
xor
inc
xor
cli
cmp
imul
or
push
sbb
mov
sub
test
in
test
sub
fldcw
cmpb
loope
cmp
lock
test
or
sbb
and
mov
add
jmp
pop
scas
mov
sub
mov
andl
clc
xchg
and
fiadds
dec
adc
push
cltd
or
inc
or
xor
cmp
xor
mov
and
ret
mov
dec
lret
cld
mov
add
loop
push
sbb
pop
xchg
cld
jp
pop
xchg
fwait
and
lahf
xor
add
dec
mov
sbb
repz
test
call
and
hlt
ss
dec
pop
mov
rcll
dec
les
jbe
sub
call
inc
cmpsl
fistps
pop
xor
inc
cwtl
cmc
in
xchg
mov
inc
sub
repnz
or
sbbl
mov
ret
subb
mov
cltd
sub
pushf
cmp
imul
mov
scas
dec
loop
add
push
mov
mov
push
pop
jecxz
movsb
aaa
xchg
shll
mov
mov
sub
popf
les
ds
mov
test
leave
and
je
popf
inc
mov
stos
pop
cmpsb
testb
adc
ss
push
repz
pusha
test
leave
mov
iret
sbb
das
pusha
push
fadds
aaa
mov
ret
jmp
adc
mov
cmp
or
add
cwtl
cmc
out
mov
sbb
jo
mov
mov
das
sbb
test
mov
pop
add
cmc
add
jbe
add
cmpsl
mov
outsl
repnz
push
mov
popf
inc
mov
fstpl
add
lcall
clc
jno
mov
shrl
dec
hlt
pop
enter
call
mov
push
mov
andb
call
cmpsl
push
sarb
dec
out
add
std
push
cld
pop
cmc
jp
add
sti
repz
lret
cmpb
mov
rol
mov
add
push
jp
adc
inc
sbbl
jg
scas
nop
push
jbe
daa
push
mul
sub
iret
sub
out
repnz
addr16
jnp
jno
testl
cwtl
bound
andb
outsl
fidivs
xor
stos
dec
sbb
shrb
xor
xor
inc
shrl
jne
dec
cltd
and
test
and
testl
and
adc
xchg
lret
pop
sub
sub
push
pop
std
mov
sbb
sub
or
dec
imul
fsts
cltd
sub
inc
cwtl
inc
mov
jno
sub
and
push
je
and
fnstcw
and
or
sahf
out
pop
cmp
pop
sbb
xchg
outsl
push
push
sbb
adc
inc
ja
sahf
jb
push
lahf
cli
ficomps
js
or
test
sub
mov
cltd
inc
xchg
fsubp
lahf
add
lds
sbbl
sbb
push
ficompl
aas
aaa
jg
push
sarb
pop
add
mov
imul
pop
fldenv
roll
xor
add
outsl
pop
popa
fs
ja
outsl
pop
push
inc
push
cmpsl
cmp
outsb
pop
xorb
add
pusha
add
scas
movl
ret
and
ds
add
sub
sub
test
sbb
xor
sub
push
and
mov
push
xchg
out
and
aad
pop
js
mov
add
stos
mov
sbbl
roll
mov
scas
call
add
push
mov
daa
dec
iret
inc
pop
add
gs
pushf
add
inc
cmp
addl
std
lea
pushf
imul
or
test
adc
mov
or
test
add
mov
add
push
add
mov
movsb
or
push
xorb
mov
push
sbb
repz
filds
cltd
mov
fbstp
fadd
pushf
pusha
movsl
gs
scas
in
mov
xor
and
sahf
jecxz
push
sub
ja
sbbl
aaa
xchg
mov
stos
repnz
pop
pop
mov
mov
in
jmp
pop
bound
and
pop
inc
movsl
je
subl
fcompl
pop
orb
in
and
fdiv
daa
cmc
cmpsl
sub
imul
aaa
sbb
push
dec
push
outsb
jge
sub
scas
inc
jae
ja
xchg
mov
sti
inc
inc
inc
dec
shll
mov
ret
out
push
cs
aas
or
adc
sbb
jo
outsl
mov
movsb
lcall
and
inc
mov
mov
adcl
push
adcl
or
add
out
not
sub
cmpb
pop
or
or
loop
ds
lea
mov
rcrb
jmp
cmp
pop
adc
push
neg
xchg
pop
push
xlat
inc
mov
cmpb
xchg
inc
sub
roll
mov
xor
je
mov
gs
lcall
and
jge
loopne
in
mov
cld
test
xor
insb
movsb
aaa
add
sbb
daa
pop
outsl
lds
cmpsl
std
cwtl
lods
arpl
dec
js
ss
jge
lea
js
subb
rcrb
sub
in
scas
rorl
inc
imul
jae
out
add
lds
push
and
enter
xchg
pop
mov
loopne
sub
test
outsl
mov
testb
test
push
lret
dec
and
pop
sub
add
gs
sti
cmp
pop
mov
xchg
jo
daa
cwtl
popf
shll
mov
test
pop
scas
loope
cmp
inc
mov
out
xor
adcl
les
jnp
arpl
in
lea
fstps
in
in
cmpxchg
inc
cmp
bound
loop
scas
pop
pop
pop
xchg
jo
mov
push
out
mov
popa
cld
add
popa
ja
sbb
and
es
and
imul
cmpsl
add
ljmp
add
pop
sub
jae
pop
push
sub
sub
pop
fs
xchg
pop
ds
outsl
pop
or
xchg
sub
mov
mov
mov
scas
xchg
in
lahf
add
sti
xor
xlat
hlt
xor
inc
repz
shrb
aas
pop
mov
jecxz
bound
or
pusha
pusha
jns
jno
or
mov
cmp
xor
lods
or
or
lahf
sbb
aaa
insb
jmp
push
jnp
pop
jmp
fwait
lods
adc
mov
mov
ds
mov
int
dec
jns
mov
xchg
add
insl
adc
xchg
xchg
mov
lea
clc
jecxz
cmp
and
fsubs
dec
out
insb
cmp
fs
pusha
and
sub
xor
fisttps
and
lock
int
push
xlat
sbb
ror
iret
lret
arpl
xchg
lea
incl
addr16
mov
mov
imul
cmc
mov
pusha
and
cmp
out
cmc
addb
adc
inc
mov
sub
in
fildl
cwtl
inc
decl
bound
setl
inc
jl
ficoms
cltd
popf
or
popf
dec
in
push
push
scas
ficoms
add
fdivrp
pop
pop
mov
cmp
imul
cmpl
xchg
addr16
jnp
mov
mov
or
shll
and
adc
pop
or
inc
pusha
add
jl
mov
inc
inc
sub
mov
pop
xlat
scas
aaa
push
pop
xchg
inc
jge
in
sub
outsb
mov
add
fucomp
sbb
imul
cmp
add
xchg
lock
mov
mov
mov
xchg
iret
mov
jns
es
cmp
xor
adc
cs
test
mov
jle
lahf
push
jnp
or
rcrl
int3
inc
sub
cs
cmc
or
and
pop
outsl
push
and
sub
inc
jns
lea
push
inc
jb
jle
inc
rdmsr
fs
andl
insb
int3
andl
sbb
flds
xor
jg
loope
pop
adc
dec
pop
sahf
sub
xchg
jp
add
and
inc
xchg
jae
jb
cmp
inc
cmc
fstpt
faddl
sub
sub
lcall
cltd
mov
aaa
jg
add
in
cmp
dec
cmp
push
loop
mov
cmc
iret
repz
cmpsb
rolb
push
dec
int
rolb
cs
inc
jo
dec
xchg
mov
int3
rcll
mov
pop
sahf
cltd
jge
push
sbb
push
jb
outsl
movsl
mov
mov
inc
xor
bound
add
and
cwtl
xor
jl
push
aad
adc
movsb
fyl2xp1
sub
subb
notl
sbb
int3
dec
movsb
jnp
or
push
loop
xchg
xchg
mov
mov
enter
aad
push
mov
int
add
add
pop
cwtl
push
pop
stc
sbb
jecxz
jb
stc
sub
arpl
xchg
jecxz
nop
fisubrl
and
fildll
imull
rorb
mov
push
shl
int
stc
bound
subb
push
mov
jge
cmp
pop
andb
lds
push
xor
sahf
aad
cmp
inc
or
jne
adc
mov
in
shlb
scas
orl
and
mov
test
mov
push
mov
cld
cltd
mov
das
xchg
jp
mov
cmp
push
gs
mov
push
cltd
imulb
mov
ds
rcll
cmp
jg
adc
add
inc
jge
mov
repz
jb
out
inc
fnstenv
mov
ret
loopne
add
mov
inc
insb
xchg
sti
mov
mov
xor
ja
pop
ja
std
shll
rcll
inc
mov
mov
adc
popa
repnz
xor
jl
xor
mov
outsl
inc
sahf
xchg
hlt
ret
mov
inc
add
sbbb
test
xor
mov
dec
cmpsl
nop
add
xchg
xchg
out
movsb
cmp
fimuls
mov
fs
pop
call
or
bound
lcall
bound
out
test
mov
or
popf
xor
push
dec
insb
xor
push
cltd
adc
sub
fidivrl
xor
insl
lahf
js
jae
stc
out
fsubl
loopne
mov
daa
inc
ret
cwtl
cmp
xor
mov
inc
fisubs
lret
rcrb
and
push
xchg
ja
inc
xchg
andb
push
idivl
jnp
jmp
addb
push
lahf
and
aaa
inc
mov
lret
outsb
mov
repnz
sub
add
pop
repz
test
out
and
or
pop
push
push
daa
pop
sbb
cs
aam
pop
mov
mov
xchg
xchg
fisubs
repz
sbb
pop
push
cltd
pop
mov
inc
add
dec
popf
xchg
dec
flds
test
pop
dec
sbb
pop
cmpsl
pusha
add
xor
push
pop
outsl
test
andb
loope
mov
aaa
mov
pop
sti
jp
adc
xchg
dec
aad
outsl
in
mov
sbb
lahf
xchg
ret
cli
daa
mov
out
mov
incl
xchg
jne
nop
pop
scas
jl
or
or
inc
mov
or
fimuls
push
jnp
das
leave
add
enter
stos
dec
outsl
aas
add
xchg
sub
js
mov
pop
addr16
outsb
sub
je
aad
movhps
lea
int3
lea
filds
push
lods
lcall
mov
mov
xchg
outsb
jl
std
mov
lods
sti
dec
push
xor
push
fists
andb
mov
loop
sbb
xchg
leave
ret
aaa
and
cmp
fistpl
sub
and
or
out
pop
sbbl
addr16
test
jmp
xchg
into
repnz
mov
pop
sbb
push
inc
sbb
sbb
push
mov
into
sbb
data16
setg
mov
xchg
mov
repnz
lahf
scas
andl
add
pop
mov
mov
inc
push
cwtl
test
or
add
and
dec
outsb
test
fwait
inc
adc
jg
popf
pop
push
shr
outsl
dec
out
shrl
nop
repnz
xor
add
pop
addl
pop
inc
imul
push
in
jl
pop
push
xorb
and
inc
imul
mov
fisubs
jge
pop
push
popa
jne
das
add
cltd
inc
push
add
out
stc
xor
jecxz
popa
gs
xorl
jns
and
and
icebp
je
mov
iret
adc
nop
repz
pop
pop
pop
fmull
and
push
push
and
insb
or
inc
aaa
adc
ja
std
fcomps
xor
mov
add
movsb
out
ja
ja
cltd
mov
mov
cmp
dec
pop
ss
bound
andb
cmpsl
fmuls
cmp
pop
mov
jns
movsl
loop
movsb
push
mov
addr16
cltd
movsl
fisubrl
daa
fadds
sbbl
push
sbb
rcrl
or
cmp
mov
cmc
rcr
inc
mov
les
cmc
outsb
cltd
jl
and
scas
test
call
bound
cltd
enter
push
inc
mov
sub
push
pusha
mov
xchg
mov
loop
push
sbb
ljmp
pop
int3
stc
addr16
sbb
adcb
fsts
xor
enter
sbb
push
push
out
test
movsb
adc
add
pop
adc
sub
and
xchg
test
daa
or
xchg
mov
mov
mov
push
mov
call
push
loope
icebp
outsb
xor
or
cmp
and
mov
mov
mov
add
fs
jns
dec
out
mov
int
mov
call
mov
stos
popl
ret
jmp
mov
cmp
paddsw
adc
fwait
shlb
or
addr16
insb
ret
fs
shl
sbb
xchg
je
pop
sbbl
add
mov
ds
sub
and
je
subb
shll
cmp
imul
push
mov
lods
bound
sbb
daa
mov
cmp
push
xor
and
loopne
clc
leave
cmp
inc
push
dec
aaa
movl
in
cltd
scas
mov
jp
out
xchg
xchg
pop
pop
pop
xchg
or
mov
call
out
daa
mov
sub
shl
or
pop
dec
pop
je
add
sahf
push
cmp
xchg
jo
imul
xchg
loope
xorb
mov
mov
mov
jle
insb
jns
xchg
movsl
cltd
test
xor
pop
push
arpl
fadd
xorl
fstp
or
mov
clc
cmp
sbb
subl
xlat
in
inc
lods
clc
in
divl
fs
jns
pusha
add
fsubs
jo
jns
filds
jae
add
out
gs
and
sub
mov
mov
or
and
call
mov
in
xchg
fs
rolb
or
dec
lods
lret
jecxz
mov
mov
push
movsb
or
test
cmp
push
cwtl
ss
mov
dec
push
pop
pop
cmp
cmpsb
sub
ja
adc
addl
call
aad
adc
push
fsts
rcl
jecxz
and
scas
fimull
incb
jo
aad
mov
mov
fwait
popa
fadd
mov
pop
cmp
cmp
loopne
and
daa
scas
out
loop
mov
das
andl
inc
lahf
add
and
js
pop
adc
test
jg
dec
pop
popa
in
ret
jecxz
test
bound
sbb
cmc
repnz
test
add
mov
xor
cli
les
xchg
mov
popl
sti
add
dec
pop
ret
cmp
mov
je
hlt
pop
pop
fnsave
mov
mov
cltd
xchg
daa
pop
imul
pop
push
pop
and
in
dec
je
mov
mov
ret
xlat
decb
or
dec
js
imul
or
imul
jl
les
int
dec
xchg
arpl
jl
or
lcall
and
pop
push
jnp
mov
cmp
xchg
les
or
add
rcl
xchg
pop
xchg
fs
add
sub
inc
dec
daa
movsb
dec
push
jecxz
je
push
dec
into
dec
hlt
scas
push
mov
fbstp
mov
shl
pop
fsubrl
pop
loope
insb
sub
pop
xchg
andl
out
inc
mov
mov
test
cwtl
dec
inc
cmp
mov
jmp
mov
push
je
imulb
push
jl
push
adc
dec
inc
push
jg
and
andb
add
mov
es
nop
imul
mov
les
push
clc
xorb
sarl
adc
inc
rol
pop
mov
orb
sbb
xchg
jp
push
popf
iret
cmp
pop
xchg
ja
sub
mov
push
rcr
adc
int
arpl
int3
dec
pop
mov
push
sbb
arpl
setb
jmp
cmp
adc
add
sub
orl
testl
push
fdivl
test
imul
jb
adc
and
adc
mov
jle
sub
jg
adc
xchg
push
mov
addb
inc
add
mov
pop
movl
or
in
mov
shll
and
push
rol
dec
cwtl
lcall
cld
addr16
cmpsb
push
cwtl
mov
out
xchg
loop
pop
and
pop
xchg
mov
and
cmp
add
push
cmp
inc
jmp
dec
push
sahf
xchg
add
test
add
lods
push
fcomip
in
cmp
mov
and
arpl
stc
mov
mov
xchg
jnp
js
push
fwait
inc
mov
and
adc
cmp
mov
bound
inc
mov
rcll
xchg
inc
sub
cwtl
cmp
ret
rorl
movsb
outsl
jge
test
inc
ja
xchg
or
movsb
xchg
jmp
or
inc
or
fnsave
rclb
subb
xchg
xchg
stos
xchg
rorb
popa
mov
leave
cmp
cmp
pop
inc
cli
xchg
add
jl
jno
ss
test
andb
not
add
jno
rcll
xchg
add
cmp
push
push
fistpll
jo
and
cmc
ror
dec
das
pusha
imul
sbb
lahf
scas
xlat
cld
add
inc
sub
out
jl
mov
xchg
fwait
sahf
and
or
fwait
cmp
xchg
sub
fwait
sbb
ror
add
xor
imul
pop
sub
popa
sbb
and
shlb
and
xchg
mov
push
shll
shrl
dec
repnz
shrb
or
in
xchg
dec
add
ret
add
cmp
or
test
and
inc
and
xchg
add
xchg
sbbb
dec
insb
xchg
js
cmp
andl
notl
bound
in
pop
pop
add
mov
mov
pop
mov
adcb
call
aad
push
and
in
subb
sbb
xchg
inc
js
inc
ret
inc
imul
pop
loop
loopne
scas
fwait
out
inc
inc
shl
stc
xor
sub
mov
movsl
mov
sub
xchg
cli
sub
notl
inc
addr16
mov
imul
lret
inc
icebp
jo
clc
xor
jns
dec
or
es
mov
imul
mov
add
fsubl
mov
je
mov
test
rcrl
iret
daa
mov
imul
xchg
into
mov
pop
insb
fstps
mov
or
js
push
mov
mov
std
cmp
mov
and
add
pop
adc
out
call
in
arpl
int3
pop
aas
in
dec
outsb
mov
imul
les
cmp
hlt
outsl
movsl
mov
or
out
adc
and
add
lahf
inc
xchg
das
test
pop
xlat
cmpsl
imull
cmp
cmpsl
iret
in
arpl
iret
mov
xchg
mov
jl
mov
sarl
cmp
jbe
imulw
popf
and
fmuls
enter
iret
jmp
adcl
in
pop
sub
mov
orl
pxor
inc
or
fimull
mov
xor
clc
add
fcomp
mov
mov
push
imul
jle,pn
or
and
lds
js
and
fimull
adc
out
pop
mov
jecxz
sti
notl
add
pop
fstps
xor
inc
repnz
xchg
push
xor
adc
mov
mov
sub
push
mov
inc
fstl
icebp
das
dec
dec
or
cmpsb
sbb
bound
loope
push
sbb
lcall
loopne
push
sarb
movsb
jp
dec
int
inc
and
add
sub
mov
pop
or
addr16
add
les
je
subl
jecxz
jb
jmp
cwtl
cmpsb
sahf
jo
cmp
mov
roll
mov
cmp
mov
mov
xchg
cli
mov
push
jnp
mov
push
icebp
pop
cmc
mov
fadd
push
movsb
repnz
lret
mov
xor
aas
pop
cmp
xor
mov
fildll
loop
cwtl
and
cli
rolb
ds
and
sarl
movsl
cmp
mov
cmc
js
cmp
outsl
mov
and
jge
cmc
xchg
fcompl
pop
inc
adc
pop
mov
loop
cltd
and
mov
mov
test
jecxz
repz
fistps
inc
and
loop
mov
jae
adc
push
lock
shll
add
push
mov
fildll
dec
testl
lock
cltd
and
scas
mov
jae
sub
mov
imul
fstp
loope
pop
nop
mov
push
push
xor
outsl
dec
aad
out
iret
fsubs
sub
lea
add
imul
push
and
add
xchg
xchg
or
jecxz
adc
lahf
add
xchg
or
xor
push
dec
js
js
outsb
sahf
dec
cwtl
mov
js
cmc
add
xchg
aad
mov
pop
push
mov
int3
push
outsb
add
lds
iret
push
test
lods
out
test
inc
iret
leave
pop
inc
inc
xchg
aas
sub
push
and
dec
inc
popf
call
test
jb
sub
incl
ljmp
pop
mov
lds
stc
mov
daa
fcomp
cmp
mov
add
enter
cmp
cmpsl
cmp
jg
ja
mov
fs
sahf
or
icebp
xchg
ja
add
inc
mov
test
jnp
testb
add
push
sbb
adc
icebp
mov
adc
rol
and
xchg
adc
repnz
pop
xchg
loopne
jo
sub
push
mov
jp
test
jne
in
xor
popa
mov
nop
pop
xchg
inc
xlat
call
aaa
lret
sbb
in
xchg
pusha
and
or
sbb
negl
dec
mov
jge
stc
pop
incl
adc
fwait
sub
fsubrl
mov
add
push
into
sbb
add
xchg
mov
fadds
jecxz
in
pop
rol
repz
subl
add
es
mov
cwtl
sahf
sub
lds
imul
mov
add
out
scas
hlt
ja
or
insl
pop
mov
mov
sub
outsl
mov
mov
movsb
xlat
mov
mov
pushf
mov
sub
ljmp
ds
push
and
popa
pusha
mov
dec
dec
push
inc
inc
mov
ja
add
adc
sbb
in
enter
into
fmul
ret
sub
mov
add
jp
push
and
mov
in
dec
sub
bt
cmpsl
and
mov
jmp
movl
jg
pop
test
rorl
add
cmpsl
aam
ret
xorl
xchg
arpl
or
roll
fistpll
aam
imul
or
push
popf
mov
jle
and
in
dec
inc
sbb
inc
mov
imul
fsts
jmp
rolb
pusha
mov
mov
dec
mov
xor
pusha
fs
jns
jo
jecxz
jle
add
mov
xchg
scas
push
ja
fsubl
ret
rorl
repnz
pop
dec
inc
scas
push
nop
jo
test
xchg
adc
ret
xchg
jns
or
xor
lcall
inc
jne
xchg
aam
xchg
mov
aaa
das
push
add
dec
mov
sub
cmp
stc
mov
push
mov
lahf
mov
cmp
in
or
mov
aas
outsb
aas
mov
push
mov
decb
cmc
addl
mov
push
pop
int
jne
mov
push
xor
jg
lcall
and
push
movsb
xchg
addb
icebp
bound
std
pusha
sbb
insb
and
jae
push
xor
into
cmp
or
jno
mov
pop
mov
sub
push
sarb
lods
and
stc
enter
jae
inc
sahf
jp
popa
mov
inc
or
mov
mov
addl
xchg
pop
adc
sub
inc
push
in
jns
inc
loop
push
jecxz
xchg
xchg
xor
stc
inc
xchg
mov
jo
test
jg
loop
inc
mov
sbb
cmp
mov
adc
dec
inc
test
mov
push
imul
incl
negl
ret
stos
push
stc
test
lods
mov
and
orb
lahf
testl
mov
mov
xchg
inc
in
int
ja
and
push
adc
test
mov
std
add
add
ja
adc
sarb
push
ss
aaa
lds
push
cli
rorl
adcb
mov
and
add
adc
cwtl
xchg
in
push
add
inc
push
push
rcll
pop
adc
pop
pop
in
das
outsl
jmp
pop
movsb
pop
jl
push
and
mov
adc
sub
fsubrl
or
cmc
inc
pop
call
lahf
call
jp
xchg
add
in
pusha
mov
clc
or
sbb
adc
in
jno
repnz
cwtl
push
add
push
push
pushf
xchg
fwait
shll
movsb
jns
loop
filds
cld
dec
pop
xchg
inc
subb
jb
or
repnz
xor
ja
mov
addl
inc
aaa
push
pop
hlt
push
iret
or
jns
sub
rol
pop
popf
and
pop
add
fwait
dec
test
cld
pop
adc
add
inc
jne
imul
cwtl
mov
js
nop
push
in
xor
pop
aas
fmull
iret
fidivrl
rolb
loopne
out
inc
test
mov
xchg
movsb
fidivs
cmp
pushf
sarl
xchg
mov
nop
dec
add
cmpsl
leave
sub
sub
sbb
jns
pop
xchg
adc
aas
aaa
sub
dec
mov
lcall
fcoml
repnz
sar
cmpsl
or
test
add
or
mov
shrl
stc
cmpb
rcrb
hlt
inc
in
sub
lcall
cmpsl
ja
sahf
mov
rcr
mov
xor
test
fistps
jg
pop
cmpsl
mov
pop
jbe
cmc
movsb
ror
add
sbbb
orb
and
pop
fs
adc
sbb
js
and
mov
or
call
out
test
lds
js
dec
les
insb
loop
jg
pop
pop
and
xor
jecxz
fistpl
cld
pop
sbb
cmpsl
mov
repz
lock
rcrl
pop
pop
pushf
mov
pushf
mov
push
pop
jecxz
sub
stos
add
jno
orb
insb
and
or
out
or
out
pop
jb
fstpl
inc
fsubl
nop
dec
repnz
cltd
pop
out
in
adc
mov
fistpl
adc
jle
pushf
loopne
test
test
fadd
mov
fnstenv
mov
test
movb
cmpsl
push
lds
lods
inc
sahf
ja
cld
fsub
aas
add
dec
in
or
das
jbe
push
sbb
lds
call
mov
add
mov
out
pop
cmp
test
popf
iret
test
popa
movsl
lds
lds
sahf
cld
dec
imull
daa
jmp
jns
pop
mov
add
inc
sarl
std
sbb
and
add
es
mov
out
rcr
cmp
out
mov
push
dec
inc
mov
jae
lock
jae
mov
hlt
lret
add
int3
out
loopne
sub
bound
lds
pop
cltd
xor
imul
bound
cs
out
ficompl
ja
cmp
inc
or
push
add
or
pushf
mov
dec
mov
mov
insb
js
fcomps
jge
idivl
pusha
sub
out
cmp
hlt
in
addr16
fmuls
xor
loope
add
fiaddl
jb
sbb
loopne
xor
add
push
pop
add
pusha
mov
xlat
add
push
xchg
dec
stos
xchg
cmp
sub
inc
push
mov
jp
movsb
inc
sbb
ja
js
sbb
hlt
mov
sbb
adc
pop
jge
jl
push
insb
bound
dec
ja
test
or
xor
xchg
ret
jbe
ficoms
pop
jmp
outsl
adc
mov
in
scas
cmpb
testl
mov
lret
aas
filds
mov
addb
aad
test
inc
mov
pop
or
iret
jecxz
mov
adc
gs
int
dec
addr16
negl
inc
sbb
out
mov
mov
mov
aad
mov
lret
cmp
xchg
es
ja
mov
push
jp
test
nop
add
hlt
pop
pop
cmc
aaa
out
lcall
js
jmp
xor
sahf
mov
outsb
push
or
jle
xor
iret
or
call
cld
test
testl
outsl
out
scas
inc
push
jno
ret
ja
scas
shlb
and
xchg
fwait
or
jle
mov
lahf
xor
invd
aaa
enter
outsl
test
or
cli
leave
hlt
mov
jmp
xchg
test
filds
sti
sahf
jns
pop
xlat
cmpsb
orb
fisttpll
lcall
hlt
inc
xor
mov
subl
xchg
lods
jle
scas
jo
sbb
and
mov
push
jle
cwtl
popf
test
and
arpl
mov
cs
cmc
mov
cmp
pop
test
xchg
test
icebp
dec
mov
mov
sub
loop
or
push
pop
sub
icebp
out
fildl
push
fmuls
cmp
fucomip
test
fidivs
inc
insl
cmc
xcrypt-cfb
cmpsl
pusha
sub
fldt
insb
out
aam
pop
mov
out
out
subl
data16
popl
fwait
lock
sar
add
push
mov
xlat
fbld
sbb
or
xor
lds
lea
pop
jecxz
inc
jge
sub
loop
xchg
insb
inc
repnz
cs
xchg
popa
mov
mov
push
inc
aaa
sub
or
js
sbb
and
adc
xchg
and
cwtl
mov
inc
inc
aaa
rcr
pop
in
jb
ficoms
cmp
inc
pop
test
add
decb
repz
test
sub
mov
sub
cld
mov
je
int
mov
cwtl
mov
push
lds
sbb
inc
jmp
inc
pop
add
orl
mov
dec
pusha
add
imul
js
jecxz
pop
ret
mov
add
push
test
jbe
push
inc
xor
and
jo
mov
test
mov
lahf
fdivrl
mov
fnstsw
or
push
sar
dec
pop
call
lcall
jl
ret
xor
lock
push
xchg
push
inc
xchg
into
add
adc
roll
mov
call
sub
test
inc
adc
fs
push
sbb
sub
mov
out
and
cmp
out
jl
aaa
xchg
jbe
fadd
mov
and
pop
std
dec
rcrb
loope
dec
fwait
push
fcomip
mov
lock
insb
sbb
std
and
cmp
push
push
stos
les
call
inc
iret
inc
je
aam
jns
pushf
jnp
xchg
into
fisubrl
jl
ljmp
jecxz
xor
clc
imul
daa
popf
repnz
hlt
jl
cmp
pop
xchg
test
sub
jge
fwait
xbegin
pop
adc
pop
push
cmpsl
sbb
push
repnz
xchg
cmp
pop
add
jo
js
mov
lods
data16
inc
bound
pop
das
inc
xchg
push
sub
mov
addb
es
pop
jge
lret
js
cmp
js
pop
enter
push
xchg
jecxz
jmp
mov
inc
lods
xchg
sbb
push
xchg
pop
loop
add
cmp
sbb
cmpsl
cmc
cli
imull
mov
lds
lahf
in
orl
mov
iret
dec
or
push
pop
add
int3
pop
add
in
fdivs
jmp
cwtl
ficoml
in
mov
mov
ds
mov
add
pop
push
sub
imul
iret
ret
inc
fs
pop
add
stos
or
mov
test
pop
inc
sbb
push
pop
jne
orl
mov
incb
nop
test
daa
sbb
jbe
lahf
lcall
inc
pop
xchg
mov
xchg
mov
pop
sbb
icebp
shl
jne
ret
aad
decb
stos
push
pop
pusha
loope
pop
add
in
push
pop
or
sub
push
shrl
xor
aam
pop
fistpll
sahf
or
fstpt
popf
cli
pop
adc
out
sbb
sub
inc
inc
pop
xchg
ret
and
fildll
std
loop
add
fldenv
fwait
pop
scas
push
inc
scas
xchg
adc
inc
mov
xchg
xchg
jns
bound
pusha
out
xchg
push
dec
cmp
fwait
xchg
mov
sbb
jnp
xlat
push
lahf
mov
mov
iret
pop
fs
hlt
ja
stc
cwtl
mov
push
xchg
push
mov
mov
pusha
pop
rorl
pop
rorl
ljmp
sbbb
inc
or
sub
xchg
lcall
lea
mov
mov
add
out
icebp
stos
cwtl
popf
push
loopne
pop
add
cmpsl
nop
and
or
cwtl
jge
mov
popa
sub
cmp
call
and
in
jg
jns
jnp
lahf
test
clc
push
jns
jb
sub
and
dec
das
fwait
test
mov
xchg
pop
lahf
mov
lret
fstl
call
loop
add
scas
popf
mov
xor
cmpl
mov
pop
xlat
or
adc
loop
cltd
shll
clc
pop
loop
inc
and
add
je,pn
je
dec
add
sub
adc
sbb
dec
or
xchg
pushf
out
or
mov
push
push
push
data16
pshufw
sub
testl
rorb
mov
aam
js
or
in
cs
cmp
call
xchg
test
mov
pop
and
out
loop
out
inc
pusha
and
mov
mov
jg
jns
add
lcall
movsb
cmp
je
pop
xor
das
int
jecxz
sbb
pushf
out
pop
sti
lods
adc
bound
inc
fwait
lahf
pushl
int
push
or
mov
fwait
addb
push
push
jno
and
sarl
mov
movsb
and
rcrl
mov
mov
fwait
adc
frstor
adc
mov
clc
or
inc
in
out
mov
scas
lock
cwtl
addr16
add
stos
or
add
mov
lods
mov
shrb
dec
out
int3
fisttpll
add
mov
loope
mov
pop
mov
dec
mov
imul
xchg
test
pop
dec
out
sbb
pop
sti
or
ss
pop
cld
jnp
pop
iret
mov
xchg
sub
sarb
dec
sub
or
push
sub
fbld
cmpsb
call
sbb
imul
push
inc
loopne
pop
dec
adc
pop
push
add
sub
inc
inc
xchg
popa
loop
gs
imul
sub
jo
lahf
or
addb
push
cld
xlat
push
insb
rorb
push
cs
rorl
jge
and
pop
pusha
add
shr
scas
adc
ja
hlt
inc
add
sbb
addb
jae
sbb
mov
push
cmpsb
mov
adc
inc
fwait
rol
out
xchg
adc
dec
lret
adc
sbb
or
sub
jecxz
jp
mov
add
push
rorl
adc
add
popf
cld
sub
sub
push
das
cmp
xchg
or
cwtl
or
loopne
subl
jno
aad
pop
pop
fs
inc
cmc
in
iret
cmpsl
iret
repnz
inc
ja
dec
add
jo
stos
fstps
push
mov
roll
inc
faddl
addr16
push
sbb
sbb
jne
pop
movsl
sub
sbb
adc
lods
pop
in
mov
dec
xchg
mov
repnz
add
and
je
mov
std
push
xchg
es
mov
repz
mov
jne
sbb
or
xor
out
loopne
loope
mov
fildll
subl
xchg
iret
rcrl
dec
and
xor
gs
push
jns
mov
dec
push
imul
andl
jns
dec
not
or
and
test
xchg
push
adc
and
fistl
leave
push
outsl
lcall
push
enter
xor
push
xchg
xchg
test
aas
das
test
sbb
inc
inc
pop
aam
dec
lahf
cmp
or
mov
clc
inc
fwait
in
push
hlt
pop
mov
push
enter
push
bound
xor
loope
jg
pop
mov
das
int3
mov
clc
xorb
shl
pop
addl
lret
into
pusha
pop
inc
fisubl
and
xor
push
out
bound
sub
fcoms
pop
mov
jg
mov
movsl
shll
add
mov
into
adc
enter
cmc
aas
imul
rcrb
dec
int3
outsl
mov
jne
or
lds
push
add
lea
je
data16
incb
lds
in
xchg
fucomi
xchg
push
pop
les
jbe
notb
push
sahf
insb
sub
jecxz
into
pop
mov
dec
xor
xor
pop
lock
imul
cmc
dec
inc
adc
inc
fwait
jle
pop
mov
cmp
or
and
jg
fiaddl
stos
test
imul
rcrl
add
xchg
xchg
imul
jmp
insl
loop
and
cmp
mov
pop
or
push
hlt
push
scas
add
sbb
fdivrl
icebp
dec
cmp
icebp
sbb
mov
inc
add
inc
xor
xor
pop
outsb
push
loop
sub
mov
je
daa
data16
dec
sub
outsl
rcl
pop
les
sub
jle
movl
test
push
ret
bound
aaa
hlt
sbb
adc
shrb
pop
fldt
hlt
out
out
sub
ja
push
mov
xor
popf
lcall
pop
sbb
or
jmp
mov
inc
xor
pop
and
sbb
out
jne
jmp
call
push
mov
xlat
lds
or
ficoms
inc
mov
std
push
mov
rclb
jb
add
rcrb
mov
sub
out
add
or
push
xchg
ja
lea
push
cmpsb
sti
outsl
fdivrp
and
adc
sarl
fcmovb
repz
das
testl
dec
in
mov
lock
addb
test
sub
imul
outsb
cli
or
test
sbb
orl
lcall
push
push
pop
outsb
sub
in
cwtl
mov
sub
mov
ret
aaa
pusha
or
mov
pop
arpl
push
jae
test
dec
mov
imul
test
cmp
cmp
inc
nop
adc
xchg
shlb
pusha
or
incl
and
inc
mov
test
movsb
rclb
ss
lods
fs
pop
pop
and
add
dec
adc
jae
pusha
mov
mov
cmc
lods
xor
pop
pop
inc
fisubrs
add
movsb
les
loope
mov
fwait
in
mov
sbb
pop
cmp
ds
add
mov
arpl
add
loope
jns
inc
pusha
cmc
add
push
mov
stc
aaa
fsubr
negb
addr16
out
mov
pop
adc
fs
hlt
or
scas
or
pop
or
pusha
or
pusha
push
mov
cmc
add
jno
jp
jle
lahf
imul
test
incl
pop
cmc
push
hlt
stc
sbbb
in
push
jnp
mov
ret
not
lret
mov
jge
je
es
imul
pop
jge
push
and
ffreep
pusha
dec
sub
add
inc
xchg
adcb
pop
stc
xchg
scas
sub
mov
divl
mov
lods
or
pushf
jge
pop
sub
xchg
inc
cmp
lds
sub
in
test
sti
add
lea
adc
push
xchg
iret
add
and
pop
and
cmp
lods
adc
leave
inc
cmp
mov
or
mov
cs
sti
adc
movl
mov
addl
or
xor
mov
xlat
cltd
out
mov
or
mov
lods
mov
scas
out
xor
jb
movsl
cvtpi2ps
cltd
inc
test
or
mov
clc
mov
mov
lcall
inc
shl
add
cmpl
inc
sub
popa
xchg
push
xor
or
addr16
sub
xor
shlb
adc
lods
cmp
push
xchg
popl
lcall
outsl
loope
xchg
in
sub
cmp
pop
push
int3
mov
loop
ja
out
mov
ja
xchg
xchg
cmp
das
jp
popa
dec
aas
pusha
xchg
shrb
xchg
pop
mov
push
std
inc
sarb
sahf
lcall
cmp
orb
dec
mov
imul
lods
fstpl
sahf
add
fisubs
sub
xchg
fstps
mov
cmp
cltd
xor
jg
adcb
je
or
add
imul
data16
test
xchg
and
push
push
out
cld
cld
jl
movsb
ret
pop
cmp
mov
test
bound
stos
mov
mov
das
ja
xchg
incl
sub
mov
inc
or
imul
daa
cli
loop
mov
mov
js
in
inc
int3
lahf
addb
adc
outsb
test
push
and
fsubrl
push
lret
shl
jg
mov
movsb
lcall
and
in
cmpsl
sbb
mov
adc
cmp
and
enter
and
cmp
adc
and
enter
and
add
test
lods
mov
int
inc
insb
inc
enter
ds
in
nop
xchg
cwtl
fisubrl
pop
sub
and
sbb
movsl
sbb
inc
rcrl
inc
jnp
cmpsl
sbb
and
ds
roll
dec
sub
fildll
pop
popf
in
mov
test
and
cmp
movsb
add
out
push
add
scas
sbbb
or
mov
test
lds
push
mov
and
call
cld
incb
xchg
enter
shlb
inc
mov
xchg
pop
and
sahf
xchg
xchg
js
jb
push
cltd
adcb
notl
pop
push
jbe
push
fwait
cltd
popl
jge
sub
test
stos
fsts
pusha
fisttps
xchg
inc
arpl
xchg
or
inc
aad
popa
dec
enter
popf
xchg
lcall
dec
adc
arpl
sbb
adc
mov
pushl
pop
je
mov
pop
jns
sbb
mov
dec
gs
and
fldt
and
sbb
inc
fidivs
jge
sub
inc
cmp
mov
mov
movsb
and
movsb
and
rcrl
aad
mulb
out
cli
jle
or
sub
in
xchg
pop
adcb
stc
pushf
fdivl
inc
fucomip
jp
lret
bound
pushf
push
daa
pop
lea
icebp
mov
inc
test
cmp
inc
movsl
call
fxam
fwait
xlat
loop
push
inc
rcrl
inc
inc
jl
arpl
lds
jno
fwait
and
orl
mov
or
sti
add
add
imul
adc
test
xchg
leave
pop
sbb
adc
test
andps
ret
mov
mov
loope
pop
fs
pop
jl
cmp
ret
adcb
inc
fimull
ljmp
mov
sub
cmc
push
aam
push
sahf
and
data16
cltd
outsl
int
mov
push
int3
mov
add
cmp
pop
mov
xchg
out
daa
push
xchg
aas
enter
into
js
pop
push
mov
cmc
addr16
mov
cs
sbb
cmp
inc
icebp
lea
lahf
fisttpl
cmp
sti
cmp
dec
xchg
and
mov
cld
in
fs
add
jge
ret
pop
push
add
inc
cmp
sbb
cmp
dec
hlt
sbb
ds
jecxz
test
sbb
pop
int3
push
pop
inc
daa
lcall
push
stos
xor
insl
ret
cmp
jno
test
and
shl
sub
mov
push
aaa
shl
or
jecxz
shlb
enter
andl
enter
ret
sub
mov
and
and
jns
cli
sub
dec
ja
adc
aam
gs
out
push
ljmp
dec
orb
push
cld
gs
call
inc
lahf
cmp
jnp
cmp
arpl
inc
repz
xor
callw
in
push
dec
sub
push
dec
push
xor
sahf
add
push
jecxz
aas
hlt
or
add
cwtl
repnz
cmp
jns
scas
pop
mov
mov
mov
xor
dec
and
push
mov
and
pusha
mov
jecxz
ljmp
fucomip
add
jns
aas
mov
popf
push
sub
sbb
cmc
pop
nop
js
push
inc
inc
test
hlt
movsb
sbb
enter
sahf
cltd
ret
notl
imul
xor
jb
loope
loope
scas
fs
xchg
out
add
xor
call
mov
push
adc
pop
rolb
inc
or
in
out
movsb
ljmp
push
insb
loop
push
popa
sub
fisubs
sub
loopne
add
add
arpl
lret
inc
hlt
or
inc
mov
and
lds
inc
add
lock
mov
xor
xorb
xchg
add
xor
fcomi
cmp
ret
nop
fmuls
sbb
ret
mov
imul
cwtl
mov
into
int
dec
cmpsb
enter
push
lods
nop
adc
cmp
push
and
popf
in
cmc
les
shll
out
aas
xchg
ljmp
test
mov
ret
mov
sub
pop
add
or
scas
js
nop
mov
std
addr16
out
sub
int3
xor
xchg
xchg
mov
push
mov
imul
rolb
frstor
js
repnz
mov
mov
cmp
pop
sti
popa
xchg
incl
xor
les
mov
push
jmp
inc
inc
icebp
pop
push
bound
pop
adc
add
out
inc
sub
lcall
ret
sub
lahf
or
push
imul
ret
or
adc
neg
jp
fidivs
add
jae
daa
lahf
shl
bound
adc
pop
adc
fisttpll
data16
and
mov
xor
loopne
fcoml
lcall
jle
mov
mov
add
xchg
inc
lcall
dec
dec
adcb
xor
fisttps
mov
mov
adc
cmp
and
add
dec
sbb
sbb
aad
das
adc
dec
sti
aas
mov
rcr
je
adc
and
adc
arpl
add
mov
fmul
je
das
pop
adc
repnz
das
dec
mov
stos
xchg
filds
xchg
fwait
xlat
notl
cmp
mov
add
pop
fsubl
pmuludq
ljmp
movsb
mov
rcr
or
shlb
pop
mov
pop
pop
andl
sbb
sbb
aad
lret
je
mov
rol
fs
fwait
adc
and
add
pop
int3
dec
cmp
andl
sbb
je
lret
stos
repnz
lret
movsb
stos
xchg
filds
rorb
xchg
sbb
mov
push
lcall
and
inc
push
mov
and
lcall
ds
mov
popf
jne
jle
imul
pop
into
and
pop
mov
popf
sahf
and
mov
sub
adc
pusha
in
enter
js
pop
loopne
insb
inc
pop
fs
cmpb
fs
inc
dec
pop
or
or
bound
bound
sbbl
sbb
lret
enter
sbb
mov
adc
mov
adc
mov
ret
gs
add
and
out
test
jl
cmp
mov
std
push
aad
add
fimull
adc
mov
pop
cmp
mov
mov
inc
and
sbb
add
pusha
jle
sbb
pop
xchg
add
inc
sbb
add
cld
js
mov
pop
faddl
inc
mov
pop
add
jns
xor
mov
das
popf
cmp
cmpsl
mov
or
xchg
cs
jns
adc
dec
test
pop
push
movsl
push
dec
repnz
mov
mov
dec
inc
sbb
popf
insb
test
sarl
repnz
pop
pop
cmp
xor
dec
js
jecxz
sbb
insb
jg
ja
mov
outsb
inc
sub
dec
cld
xchg
mov
or
sbb
imul
add
jns,pt
push
and
test
ret
js
iret
push
push
ret
roll
rcrl
fldlg2
jno
sbb
pause
lea
mov
addr16
shll
sbb
xorb
rcrb
js
iret
or
pusha
movsb
test
cwtl
outsl
add
xchg
fwait
pop
pop
xchg
and
ja
jae
dec
push
inc
mov
and
jno
enter
cmc
mov
pop
push
inc
dec
dec
shlb
incl
add
pop
daa
mov
lcall
lods
jnp
outsb
mov
test
add
pop
sub
add
mov
test
xor
in
in
in
lds
sub
jp
mov
fwait
js
pop
mov
movl
mov
adc
push
push
jge
pop
fsubrl
cmp
xchg
les
mov
xor
aaa
test
lock
bound
fbstp
dec
ljmp
cwtl
inc
aad
bound
movl
loop
and
add
leave
pop
jp
lahf
cltd
jp
mov
push
and
lret
xor
mov
in
daa
push
fstps
jg
inc
lea
enter
dec
insl
stc
pop
jmp
xchg
ret
rcr
in
pop
test
sub
enter
sub
loopne
notb
scas
cmp
inc
loopne
lcall
push
les
jl
mov
dec
fisttps
cmp
mov
mov
std
or
addr16
in
sbb
mov
scas
mov
or
lods
mov
movsl
dec
mov
ret
fdivr
je
call
push
add
cld
mov
pop
add
test
lock
mov
sub
sbb
in
loope
sbb
in
jb
push
out
lods
ja
fs
cmc
and
push
push
cmc
paddusw
add
pop
xchg
push
fsts
pop
mov
adc
push
loopne
sub
push
lods
repnz
jecxz
dec
loope
test
mov
sub
inc
jo
sahf
dec
lcall
xlat
pop
sbb
ja
xchg
lods
cmp
adc
or
in
repz
rcrl
mov
ffree
pop
mov
sbb
or
outsb
test
aaa
inc
mov
pop
and
xchg
or
ficomps
adc
sbb
mov
test
sub
mov
andl
xchg
mov
cli
das
mov
pop
into
sbb
into
xchg
call
lds
call
popf
or
popf
sbb
add
inc
push
mov
out
sbb
es
adcb
add
add
pusha
mov
sbbl
and
sub
iret
test
cmp
push
lods
bound
adc
adc
inc
lcall
mov
aaa
sub
sub
ret
addr16
jae
aad
lahf
pop
aaa
sub
cs
or
xchg
push
mov
mov
cmpsb
nopl
inc
adc
popf
jne
jmp
xchg
xchg
call
xor
sahf
pushf
popa
push
bound
pushf
enter
mov
out
ja
rcrl
into
sbb
mov
inc
pop
ljmp
arpl
cmpsl
iret
mov
inc
xchg
roll
cmpl
push
cltd
fnstsw
fcoml
in
cmp
dec
push
mov
inc
add
jnp
adc
mov
sub
jne
xor
loopne
mov
jecxz
mov
lret
add
add
sbb
mov
stc
add
cld
jne
inc
fldcw
das
rcrl
mov
sahf
out
add
and
test
pusha
fcoml
cwtl
jne
je
mov
lods
out
adc
cmp
mov
sub
les
push
subb
fcomps
dec
cld
push
rcrb
loop
and
popf
xchg
sbb
pop
movsb
aaa
xchg
test
or
mov
cltd
mov
mov
js
xor
cmc
adc
xor
mov
sbb
repnz
sub
jbe
push
ljmp
clc
xchg
mov
mov
rcr
mov
mov
popf
mov
loopne
adc
mov
inc
and
mov
sbb
aad
movsb
mov
pop
cwtl
inc
test
xchg
fstpl
dec
pusha
add
das
stos
inc
inc
cli
test
jge
loopne
insb
roll
push
pop
and
test
inc
push
sub
cld
jne
icebp
cmp
aas
scas
jge
jle
ljmp
stc
addb
imul
jle
lcall
pop
iret
xchg
loope
xchg
scas
pop
or
push
mov
jmp
inc
stc
icebp
mov
or
mov
fs
loop
adc
test
push
outsb
int
and
clc
addb
loopne
inc
es
push
mov
add
xchg
fwait
cli
push
sti
inc
cwtl
sub
ret
aaa
dec
out
xchg
fldcw
test
push
iret
add
jae
adc
mov
cwtl
xchg
in
repnz
fimull
int3
xlat
cmp
xchg
xor
mov
lds
dec
ret
cmpsl
pop
mov
xchg
jp
mov
sahf
lahf
pop
or
inc
push
sub
fsubl
mov
imul
stos
ljmp
scas
push
stc
push
repnz
jb
pop
sub
cmp
jle
lahf
and
fwait
sub
in
andb
mov
lahf
inc
mov
and
andb
xor
mov
sub
sub
iret
or
inc
call
in
push
popl
fldl
push
adc
jge
adc
and
mov
sub
mov
andb
inc
jne
pop
push
push
mov
sti
fisttps
xchg
fwait
mov
mov
xlat
or
pop
jae
cmpb
and
add
aas
out
fldenv
xchg
js
pop
dec
into
mov
lea
hlt
subl
add
mov
mov
sbb
xor
xchg
xor
clc
pop
ret
out
xchg
ret
daa
mov
repz
xchg
push
fidivl
adc
addr16
jne
sbb
mov
aaa
mov
xchg
cmp
or
sub
xor
jne
outsb
push
mov
hlt
mov
ljmp
push
daa
xchg
mov
js
and
arpl
mov
mov
add
out
push
scas
ja
es
pop
xchg
push
ret
dec
je
sub
and
jbe
cmc
popa
jl
mov
and
or
jge
pop
incl
pop
ss
cmpb
inc
test
cmp
inc
or
enter
adcb
lds
fwait
or
aad
mov
mov
sahf
cmp
and
inc
jb
cmp
pop
cmpsl
push
add
pop
in
pop
or
jo
inc
imul
lods
adc
cld
sbb
xchg
fs
fisttpll
mov
add
xor
rcr
or
aaa
cmpsl
and
push
sahf
das
xchg
sub
fprem1
pop
loope
mov
fists
cltd
sti
outsl
jle
push
fcoms
push
inc
repz
fldt
cltd
sbb
fnsave
inc
arpl
mov
cmp
sahf
mov
lcall
in
test
inc
xchg
jno
or
jns
lea
cltd
jg
add
imul
addl
or
inc
or
test
push
dec
cmp
and
addr16
incl
in
xchg
js
rcll
mov
jp
sub
mov
scas
sbb
mov
rolb
insl
dec
fidivs
mov
sbb
test
adc
stos
test
shll
fmuls
in
cld
arpl
inc
sub
dec
mov
in
inc
mov
mov
push
pop
lods
popf
add
xchg
daa
xchg
pushf
push
movsb
popf
cs
sub
sbbl
shrb
adc
test
adc
aaa
rcll
add
jg
loop
push
jp
push
mov
mov
add
in
and
pop
push
lcall
and
loop
loope
mov
test
ficoms
push
fistps
mov
test
inc
mov
lods
fcomps
aad
mov
stos
add
ss
shll
popf
mov
mov
cmp
sbb
pop
cmp
nop
jl
mov
mov
or
push
push
dec
mov
es
fsubrl
lahf
repz
call
or
inc
and
and
roll
mov
fisttpll
xchg
inc
incl
inc
dec
xchg
push
insb
aaa
sbb
cmp
sbb
fdivrp
cmpsl
das
ret
xlat
jl
jne
jne
mov
lcall
mov
add
fidivs
test
rclb
mov
ret
jle
pusha
aaa
imul
xchg
fstl
sbb
dec
bound
jo
shll
xchg
lods
test
push
adc
fcomip
cwtl
pushf
push
sbb
and
xor
or
in
add
inc
cmp
aaa
lahf
popf
xor
mov
jns
scas
out
gs
jge
add
xor
pop
cld
aam
mov
push
je
arpl
and
push
push
inc
adc
fisttpl
sbb
call
pop
cld
and
int3
push
push
mov
dec
mov
mov
nop
and
ret
lahf
decl
ja
or
cmp
adc
or
sub
lock
daa
pop
cwtl
addr16
adc
and
push
inc
data16
mov
push
fildl
and
pushf
add
and
inc
cli
inc
inc
and
bound
mov
or
pop
mov
dec
sub
ds
rorb
bound
sti
cmp
mov
rcr
mov
mov
xor
call
das
mov
incb
adc
loope
adc
or
lcall
loope
incl
dec
jbe
jbe
imul
fiadds
fld
repnz
int3
je
fs
data16
jg
push
es
and
mulb
sarb
pop
xor
cld
jae
fsubs
call
addr16
cld
incl
outsl
sbb
aaa
xchg
incl
xchg
and
jp
inc
fmull
lret
cmpl
xlat
mov
jp
mov
xchg
leave
pop
pusha
sub
pop
jb
inc
and
jb
daa
sbbb
pop
dec
ljmp
mov
ds
and
test
ret
jecxz
mov
and
push
jecxz
or
pop
ret
cmp
xor
lcall
bound
movb
cwtl
inc
adc
pop
popa
mov
js
loop
or
mov
mov
adc
and
out
xchg
cmp
iret
mov
jne
jo
mov
or
rcll
push
sahf
cli
aaa
jecxz
jg
cmp
inc
add
enter
repnz
flds
inc
lds
cld
mov
cmc
fdivs
or
mov
in
sub
pop
aaa
aas
scas
cmp
pop
test
cwtl
aaa
dec
test
ret
or
and
loope
cmc
sbbl
popa
sub
add
shlb
fs
ret
sub
xor
sub
cmp
push
ja
pop
fdivrp
pop
scas
icebp
and
cmp
push
rolb
sub
adc
in
jle
xor
cmc
test
jecxz
and
and
fdivrl
aaa
xor
jge
leave
jecxz
mov
pop
cmp
add
jbe
ss
mov
inc
rorb
leave
fs
xchg
dec
pop
sub
or
ret
push
ja
mov
aas
mov
jecxz
push
fisttpl
jbe
mov
out
ja
mov
adc
lcall
js
push
insl
xchg
pushf
add
or
test
neg
sti
pop
lods
mov
pop
cmp
push
test
jp
lea
pop
enter
ss
clc
movsl
push
pop
ret
ja
addr16
add
jp
into
call
jecxz
mov
fldenv
aam
adc
insl
das
addr16
call
and
cmp
pop
fmuls
pop
or
pop
in
mov
ret
jo
mov
shll
jle
cmp
test
add
lcall
xchg
mov
mov
adc
xor
cltd
sahf
fs
daa
or
cmp
enter
mov
mov
xchg
pop
int
and
add
shrb
and
jle
aaa
loope
push
mov
mov
arpl
sub
bound
jp
lahf
add
cmpsb
and
aad
icebp
jp
dec
dec
loop
sahf
cmp
cwtl
aas
testb
sbb
ja
add
fsubrs
add
sbb
jle
ljmp
xchg
xchg
xchg
in
test
fcmovb
xchg
fistps
fisubl
sub
mov
sub
je
fcoml
popa
mov
cltd
jge
lock
lea
add
cmp
ds
stos
cmpsl
cmc
jne
dec
in
xchg
sub
or
bound
mov
sub
je
ret
inc
inc
loop
ja
movb
sbb
push
add
and
lea
jecxz
leave
mov
and
in
lods
inc
sbb
stc
add
xchg
and
sub
ja
mov
add
or
sbb
mov
mov
lret
jb
cmp
popf
push
cltd
mov
test
test
in
jg
inc
outsb
lret
mov
das
mov
push
mov
inc
sbb
xchg
inc
and
movsb
data16
push
cmp
rcr
push
fsubrl
pop
loop
repnz
pop
add
jl
test
mull
jle
stos
pop
mov
popf
cmp
sbb
mov
ja
or
dec
mov
roll
outsl
xlat
popa
in
sbb
xlat
pop
dec
sub
push
dec
imul
jne
out
xchg
xor
jnp
push
adc
rcr
stos
sub
int3
pop
cmp
rcrl
nop
enter
arpl
shlb
iret
mov
outsb
out
sub
mov
add
mov
mov
xor
cli
into
adc
xlat
lcall
jne
ja
inc
mov
add
cmc
xchg
fildll
and
jecxz
ljmp
loopne
inc
ret
cmp
inc
jno
iret
push
xchg
cmpsl
adc
xchg
pusha
or
sbb
inc
loop
in
xor
out
ja
adc
aaa
std
inc
popa
movsl
xchg
add
test
xchg
ja
xor
outsl
xlat
loopne
daa
fwait
adc
repz
fbld
and
outsl
adc
adcb
pop
xchg
push
addb
mov
pop
fwait
pop
loope
cmp
push
mov
leave
xchg
clc
sbb
inc
or
fmuls
or
xor
sbb
inc
xor
das
dec
in
xchg
cmp
daa
fld1
daa
mov
inc
lcall
jnp
pop
pop
lea
sahf
cmp
fbld
or
pop
pop
movsb
and
js
jne
fwait
jo
xchg
lods
mov
inc
push
dec
imul
cmc
xchg
mov
xchg
cmp
jno
xchg
or
mov
scas
mov
stc
inc
sti
les
or
loope
ja
mov
ss
shrb
inc
pop
out
dec
int
mov
mov
test
xlat
or
push
filds
out
sbb
xchg
sub
xchg
or
push
or
dec
fs
pop
call
ljmp
mov
cmp
lea
add
test
add
add
sbb
push
adc
sub
sarb
idivl
adc
movsb
mov
shll
cmp
rcrb
lahf
mov
mov
lahf
add
test
movsb
add
test
repnz
push
fbld
jecxz
xchg
adc
mov
mov
addr16
mov
andb
push
js
push
push
xchg
loopne
inc
pop
jo
or
mov
popf
and
popl
and
mov
fildll
addl
cmc
cltd
sbb
test
pop
shlb
stos
rclb
fldt
orb
cli
dec
repz
cltd
lahf
add
pop
hlt
pusha
and
inc
jl
push
jl
xor
mov
mov
test
inc
repnz
adc
aas
aaa
sbb
mov
ja
hlt
and
imul
aaa
jbe
test
adc
popa
push
inc
lahf
cmp
test
and
and
push
push
inc
rcrl
fidivl
in
in
movb
jbe
xchg
sbb
jne
mov
aad
rol
test
jg
jne
and
fcmovb
into
adcl
sbb
lret
sar
lret
dec
inc
jne
pop
xchg
fiaddl
js
ja
test
cmpl
push
pop
lcall
cmp
sub
fwait
test
mov
push
pusha
mov
push
je
daa
lret
xchg
lcall
push
mov
arpl
lcall
add
scas
pop
lea
sub
or
add
xor
popl
and
sub
ja
je
imull
inc
inc
std
bound
inc
sahf
repnz
cmp
push
add
adc
sub
das
loopne
je
out
data16
loopne
nop
call
push
pop
and
pushl
pop
lahf
adc
call
sub
daa
mov
inc
dec
nop
or
xor
cmp
mov
jbe
aad
mov
pop
or
in
sub
or
sbb
pop
mov
add
enter
push
mov
xchg
and
inc
xchg
scas
dec
sub
mov
jle
mov
mov
lahf
scas
mov
jge
pushf
mov
mov
loope
and
ja
dec
rcrl
or
pop
cmp
mov
aaa
test
mov
repnz
popf
jle
rorb
clc
fwait
and
dec
cmc
jge
out
fwait
cli
push
sub
mov
mov
gs
dec
cli
stos
pop
test
xchg
mov
sbb
test
sub
xchg
clc
sbb
push
inc
lcall
jne
test
idivl
repnz
and
inc
arpl
sub
or
inc
mov
in
data16
jg
hlt
pop
dec
lds
addb
push
movsl
adc
mov
cmc
jle
mov
js
in
mov
push
pop
je
ret
cs
in
xchg
popa
dec
loop
jo
mov
or
xchg
or
mov
gs
fimuls
mov
cwtl
outsl
xchg
popf
andb
pop
or
out
and
test
enter
adc
dec
sarl
sbb
fadds
addl
ss
mov
out
gs
xchg
pop
aaa
mov
adc
or
loope
xchg
jbe
lods
fsubrp
scas
push
pusha
push
outsb
and
fidivrl
fadds
notl
jne
add
adc
cmp
lret
ret
jno
js
xchg
sbb
cmp
dec
fistpll
push
loope
inc
push
sbb
ja
arpl
imul
cmp
jb
pop
das
pop
pop
icebp
sub
sarb
adc
scas
sub
hlt
sub
cmpsl
and
enter
mov
popa
cmp
lret
mov
sub
inc
pop
cmpsb
sub
test
loope
insl
cmp
dec
jge
lea
xlat
sbb
test
mov
add
das
fmuls
les
lcall
mov
bound
in
ja
mov
pop
add
pop
imul
cmp
jge
out
cmp
ret
nop
and
addr16
mov
sub
or
xlat
push
loopne
cmp
push
mov
mov
mov
sbb
aad
dec
inc
aad
sub
arpl
xor
pop
lods
ss
sub
mov
sbb
push
mov
dec
or
fs
mov
cmpsl
push
sub
movsl
addr16
mov
subl
cwtl
loopne
mov
push
cmpb
sbbl
sbb
cwtl
cmp
fildll
movsl
adc
adc
inc
imul
pop
fidivl
mov
sub
xchg
xchg
sub
cmc
aam
lock
adc
fwait
add
icebp
mov
cltd
movsb
jecxz
pushf
inc
add
and
popa
pusha
push
jno
pushf
pop
jle
add
lahf
mov
arpl
pop
jnp
push
mov
adc
and
shll
subb
rorl
out
outsl
mov
mov
pop
or
xlat
inc
mov
adc
adc
sarl
cli
add
adc
in
push
and
mov
sub
jge
adc
sbb
mov
pop
ss
cmp
imul
imul
mov
mov
adc
ja
popf
js
mov
mov
xor
xsaves
and
test
ret
pop
sbb
cmpsb
push
cmpsl
mov
jbe
pop
dec
icebp
iret
cld
addr16
outsl
mov
add
or
mov
adcl
mov
pusha
dec
insb
ja
sub
xlat
adcl
popa
sbb
or
and
inc
xchg
mov
push
add
mov
and
xor
into
mov
out
mov
mov
dec
jecxz
pop
ja
jp
add
leave
ss
mov
or
addb
mov
sbb
sbb
daa
xchg
inc
in
fcmovnbe
dec
rclb
jl
hlt
lahf
or
pop
jne
and
cwtl
cmp
dec
jne
and
int3
jmp
mov
mov
imul
aaa
mov
jge
and
aas
int3
push
jge
mov
addb
imul
es
imul
jg
or
inc
push
sbb
imul
addr16
in
insb
dec
mov
xor
and
test
arpl
add
fsubrs
push
popf
ret
outsl
call
lcall
pusha
mov
mov
je
mov
filds
out
xor
dec
repnz
jp
xor
push
filds
popa
xchg
into
outsb
mov
cltd
cmp
das
iret
addl
xchg
shll
das
cltd
push
add
and
push
inc
je
jae
xchg
push
sbb
ret
mov
push
jecxz
cltd
les
sbb
test
jle
or
jg
out
inc
data16
hlt
lock
mov
mov
jo
leave
dec
xchg
pusha
xchg
fstpt
fistpl
mov
nop
sbbb
mov
push
call
xchg
sub
pop
std
pusha
test
arpl
jg
notb
test
mov
mov
sub
notl
mov
push
arpl
mov
addr16
lahf
dec
add
sbb
movsb
mov
xchg
loop
flds
push
imul
or
xchg
cwtl
aaa
lahf
gs
and
xchg
push
or
sub
shrl
incb
pop
or
push
lcall
sarl
fdivrp
xor
ret
test
and
add
repnz
jge
mov
lea
stc
sbb
test
mov
ret
cmp
dec
ja
test
adc
mov
lahf
dec
loopne
xchg
push
loope
cltd
mov
rep
jl
lret
xchg
lahf
ret
outsb
inc
jb
push
arpl
out
test
sar
inc
testl
andl
jno
jnp
es
jne
out
jp
rcrl
and
push
test
mov
orb
mov
sub
sbb
test
push
push
and
pop
or
leave
cmpsb
leave
or
inc
imul
loopne
push
xchg
andb
push
or
dec
sahf
jle
jp
or
xchg
sub
push
mov
pop
loopne
stc
sbb
dec
loope
sub
add
push
and
xchg
jecxz
out
ret
imull
dec
pop
xchg
mov
sar
inc
push
pop
cmp
sub
loop
jno
xlat
pop
mov
sti
lahf
jns
cmpsl
nop
jno
jecxz
imul
fs
xchg
xchg
xchg
xchg
dec
xchg
inc
push
in
sub
popa
pop
adc
and
mov
dec
ja
mov
dec
in
dec
adc
xchg
xor
sti
pop
movsl
and
outsl
mov
daa
out
pusha
add
jnp
cs
push
popa
pop
mov
nop
dec
nop
mov
push
rolb
jae
flds
and
loop
js
xor
cmpsl
dec
and
dec
test
push
sarb
sub
and
rorl
sub
cwtl
and
fnclex
aas
mov
sahf
mov
movsb
out
fistl
cld
add
ret
or
adc
sub
test
and
sub
daa
add
push
lea
mov
and
jno
xchg
out
mov
jecxz
fnstcw
inc
inc
or
mov
xchg
dec
pop
jp
inc
xor
mov
inc
or
sahf
mov
fwait
sti
addb
pop
pusha
cmp
xchg
in
xchg
or
sub
or
ds
add
xor
jp
jne
mov
loopne
aaa
scas
mov
loope
dec
add
ljmp
shl
sbb
xchg
mov
loop
mov
sbb
add
pop
add
dec
cmpb
mov
ret
xchg
pop
pop
lods
jecxz
or
test
mov
xchg
add
pop
test
or
xchg
ret
push
cmp
out
arpl
daa
adc
mov
test
mov
lcall
in
cmpsb
xor
daa
fsubs
andl
mov
or
cmp
inc
add
cmp
xor
push
jno
ret
xor
mov
mov
xor
mov
mov
in
cmp
adc
jge
insb
cmc
sbb
loop
xor
and
jp
and
je
cmp
mov
fdiv
mov
push
or
xchg
dec
fdivr
fldl2t
cmc
mov
in
jns
and
cmp
ret
enter
arpl
arpl
mov
mov
out
mov
cmp
out
cmp
faddl
or
mov
jae
push
mov
mov
addr16
mov
xchg
inc
pop
test
inc
loop
outsb
in
push
in
jb
rorl
addr16
xchg
push
in
mov
mov
jns
repz
xor
pop
aaa
fldenv
push
pop
cmp
fiaddl
mov
dec
push
rcrb
mov
adc
push
mov
insb
pop
sbb
movl
lfs
cwtl
cld
pop
inc
sub
scas
inc
jbe
addb
lahf
test
mov
addr16
sbb
cmp
push
addr16
adc
xor
inc
add
cmp
imul
shl
inc
test
dec
cs
int
bnd
mov
inc
or
cmpsl
jbe
dec
cwtl
je
fistpll
cmpsl
or
test
and
test
addb
xor
insl
test
or
adc
sbb
ret
sarb
loop
push
inc
add
ds
jle
dec
jmp
xchg
movsb
push
and
es
xchg
cltd
and
or
jle
dec
dec
inc
clc
pusha
ret
push
jmp
or
push
jnp
or
stos
in
ret
sahf
dec
cmp
clc
jns
jg
cld
xchg
fs
repz
pop
in
pop
gs
pusha
fisubl
jae
ficoms
popa
mov
popf
push
mov
aam
mov
fyl2x
or
jecxz
pusha
or
inc
sub
sbb
add
sub
test
test
inc
and
inc
sub
pop
mov
pop
xchg
inc
mov
cmp
stc
pop
ffreep
adc
rcr
add
ret
push
mov
cwtl
loopne
jecxz
add
xchg
pop
das
mov
inc
inc
add
pop
dec
mov
pop
and
mov
jmp
xchg
mov
mov
hlt
inc
aas
inc
sbb
sub
mov
and
push
fadd
inc
push
mov
sbb
inc
inc
out
cmp
jge
sub
mov
pop
dec
in
repnz
clc
lcall
sub
rcrl
popa
fiadds
inc
mov
data16
dec
jne
or
orb
mov
fiadds
push
cmp
pop
lret
jne
add
dec
out
clc
and
sbb
mov
incb
test
or
cmp
dec
dec
cmp
sbb
xlat
pop
adc
addl
xor
push
jnp
fcos
xchg
movsl
daa
movsb
xchg
fdivrs
ret
or
jge
add
std
inc
xchg
push
or
pushl
inc
jmp
rolb
add
or
jle
pop
mov
inc
jnp
push
and
xor
xlat
lret
pop
mov
fs
pop
sbbl
lcall
xchg
xchg
jge
push
addr16
sbb
cmc
add
xchg
hlt
daa
sbb
add
lcall
stc
adc
inc
mov
mov
pop
jb
adcb
sub
mov
adc
push
int
rcr
adc
pop
addr16
aaa
pop
pop
sbb
sub
or
fs
fndisi(8087
mov
jb
fcoml
in
loope
cmc
sbb
xor
movl
mov
dec
in
adc
inc
sti
xor
add
jmp
incb
iret
sti
adc
jne
xlat
xor
add
cmc
out
add
mov
cmp
adc
fwait
stc
mov
mov
mov
inc
add
xchg
ljmp
fistl
xchg
and
loope
lcall
enter
sarb
test
push
sahf
scas
adc
arpl
pop
cmc
inc
test
scas
orb
sub
dec
imul
daa
and
enter
fs
mov
lods
test
push
shrl
xor
add
test
inc
inc
rclb
xor
mov
test
ficompl
daa
scas
push
sbbb
inc
and
jno
mov
out
fcompl
and
sub
ret
inc
and
dec
xlat
inc
pop
iret
es
cltd
push
inc
cmp
out
sub
popf
push
sar
cmp
mov
loope
call
xor
or
pop
xchg
sub
pushf
out
mov
pop
adc
xlat
pop
clc
jne
sub
dec
push
ja
mov
js
push
stc
das
xcrypt-ctr
cmpsl
sbb
mov
cltd
add
mov
fnstsw
or
jo
xchg
sub
pushf
dec
movl
cmpsl
cs
adc
pop
sub
push
dec
and
or
or
push
sub
mov
inc
lahf
mov
or
in
xchg
add
rcrl
mov
imul
inc
je
test
or
sub
fdivs
pop
push
sub
mov
dec
pop
add
sub
pop
mov
adc
das
imull
pushf
jb
pop
cmc
pop
pop
dec
outsl
adc
decl
das
loop
mov
stos
fisubrs
cmpsb
sub
pop
mov
push
arpl
out
lock
mov
ja
lahf
or
aam
or
out
jno
mov
xchg
pop
cmp
add
mov
lret
dec
push
fxch
lahf
sub
je
pop
xchg
or
std
cmp
pushf
popa
inc
bound
push
push
iret
pop
cwtl
jg
or
sub
cs
sbb
imull
ja
loopne
aas
mov
mov
mov
xchg
loop
jp
mov
push
mov
or
inc
cmp
lods
les
clc
dec
rcr
jns
or
leave
ret
xchg
add
sub
add
in
rorl
pushf
sbb
repnz
inc
mov
inc
bound
jmp
mov
or
fsubrs
push
fwait
jb
pusha
jge
inc
or
imul
or
sub
inc
push
insb
imul
adcl
stc
pop
sbb
leave
inc
jmp
xchg
mov
sub
shl
mov
push
inc
fisubl
jmp
mov
push
xchg
loope
movsb
mov
insb
cltd
push
cmp
icebp
stc
xchg
adc
inc
fildll
lret
sbb
arpl
fsts
aad
mov
sub
lock
fildl
stos
adc
imul
mov
mov
outsl
daa
stc
sbb
adc
add
mul
loopne
mov
mov
jecxz
das
fcomps
movsl
movsb
aam
flds
fld
popf
sbb
sahf
scas
ret
adc
repz
stos
aaa
mov
jle
clc
je
addl
bound
cmovp
popf
ja
dec
xlat
aad
fdivrs
scas
fs
cmp
fs
das
xchg
mov
mov
hlt
gs
ret
mov
dec
es
xor
pusha
es
or
or
mov
mov
mov
sbb
mov
mov
int3
addr16
stc
fists
stos
push
and
in
cmp
ss
mov
sarl
xorb
pop
xorl
mov
lods
jbe
add
xor
outsb
cmc
sbb
pop
mov
nop
jae
mov
out
popa
or
sbb
and
pop
push
add
dec
addr16
push
sahf
add
aaa
inc
insb
out
pop
inc
and
call
iret
add
inc
inc
mov
movsb
cwtl
sbb
push
sbb
dec
shll
xor
ja
sub
adc
jae
movsb
xchg
add
fstpt
pop
movsl
and
je
push
or
jecxz
in
repz
jecxz
push
call
lahf
xchg
and
dec
or
mov
sti
test
call
sarb
int
sti
inc
mov
call
sbb
shll
shll
ja
clc
inc
xchg
dec
push
mov
sub
or
adcb
fisubrl
iret
daa
and
jecxz
inc
fiadds
pop
mov
pop
sahf
xchg
addr16
jge
adc
xchg
add
cvtdq2ps
fcoml
fidivl
mov
addl
fwait
push
mov
mov
pop
inc
stc
push
scas
jge
ffreep
sahf
or
mov
divl
inc
jmp
dec
add
xchg
push
outsl
sub
push
cmp
cmp
fwait
into
mov
sub
test
subl
jg
jge
ss
jmp
lds
loop
sub
inc
aaa
jmp
jns
push
jns
adc
or
mov
inc
push
sahf
inc
loop
loope
int3
sub
pop
andb
and
cmp
inc
xchg
and
and
arpl
mov
fimuls
adcl
push
cmp
addl
mov
pop
xchg
adcl
cmp
push
cld
push
je
xchg
mov
insb
and
sarb
xor
xchg
lods
mov
mov
jns
out
jp
ds
push
fcompl
inc
sub
scas
xor
pop
inc
mov
repz
pop
int3
and
int3
repz
add
lock
add
mov
lret
push
test
test
call
jo
lret
push
bound
popf
jns
clc
pop
push
inc
movl
mov
shll
sub
insl
push
sub
xlat
pusha
outsl
sarb
mov
xchg
addr16
mov
add
inc
ficompl
jno
sub
cmp
mov
daa
push
sbb
mov
incl
dec
fucom
ret
lahf
ds
adc
xor
shrl
sub
test
push
mov
icebp
clc
dec
add
xchg
pushf
jns
mov
xchg
js
add
lret
sub
mov
mov
ret
pop
imul
les
sub
push
inc
addr16
mov
cmp
push
movsl
stos
popl
stc
xlat
sbb
add
imul
mov
pushf
mov
dec
test
popa
sbb
adc
push
mov
addb
adc
inc
mov
out
stc
adc
xchg
jo
cltd
or
push
inc
xchg
mov
int
ds
fmull
or
in
dec
jmp
xor
imul
bound
fs
push
addr16
fwait
add
loop
add
add
cwtl
adc
mov
and
pop
popf
aas
push
mov
dec
je
sbb
ret
imul
inc
mov
fstps
jp
and
and
addb
mov
pop
nop
movsb
inc
add
dec
inc
or
add
lret
inc
mov
dec
adcb
pop
pusha
pop
inc
mov
addb
aaa
fiaddl
loopne
cld
mov
or
cltd
cmpsb
cmp
or
inc
popf
js
mov
cmp
sahf
adc
and
ja
xchg
scas
in
int3
rcrl
movsl
lcall
in
mov
lahf
movlhps
dec
addl
pop
fwait
or
xchg
and
outsl
xor
out
mov
xchg
add
loop
je
ja
and
xor
pop
push
pusha
flds
mov
pop
jle
ljmp
mov
and
fidivrs
cld
cmp
mov
push
push
mov
sbb
cmp
aas
movsl
or
inc
xorb
loop
xchg
pop
hlt
push
sub
fiaddl
sbb
ret
fs
and
jp
fisubs
pop
in
xchg
add
dec
or
repnz
mov
lods
inc
adc
arpl
addr16
gs
dec
rolb
xchg
or
mov
repnz
pop
inc
and
iret
fadds
sbb
fwait
ret
std
or
sub
imul
cmp
push
inc
adc
push
push
adc
mov
add
push
add
fldt
pop
les
or
pop
inc
mov
jnp
andl
cmp
sahf
xchg
dec
scas
repnz
cli
push
mov
sahf
pop
mov
push
xchg
int
dec
lods
push
adc
test
mov
mov
adc
cmpsl
jecxz
fwait
jle
add
xchg
test
pop
int
push
popf
jo
push
enter
lods
fwait
xchg
negl
xchg
inc
xor
dec
mov
jge
je
fcomp
mov
sub
sbb
fildl
imul
pusha
in
or
sub
nop
addr16
std
dec
and
inc
sbbl
xor
push
xchg
jp
les
sub
sbb
adc
jbe
lea
mov
or
inc
sbb
xchg
out
mov
popa
mov
sbb
add
xor
mov
xchg
mov
mov
in
fldt
test
scas
mov
cmc
and
fstps
jecxz
bnd
cmp
enter
cltd
cmpsb
push
pop
pop
add
leave
jle
movsl
loop
sbb
je
sbb
fsubl
adcl
test
dec
mov
add
add
stos
adc
ja
add
pop
cwtl
fwait
and
lods
sub
jne
jne
daa
int
mov
or
pop
inc
test
ret
pop
test
xchg
aas
mov
mov
mov
mov
jge
xchg
sbb
cmpsb
dec
nop
andb
test
add
jae
push
sub
adc
mov
jne
push
loop
mov
cmp
sbb
stos
cmc
inc
mov
test
fsubrs
jecxz
dec
lahf
xchg
repnz
lods
int3
cwtl
jg
movb
sub
cld
xchg
lret
mov
or
sbb
loop
xchg
push
jbe
dec
lds
cwtl
js
mov
test
cmpsl
enter
in
enter
lock
sbb
xchg
xchg
clc
pop
jo
cmp
hlt
push
call
add
pusha
ret
imul
or
inc
adc
and
int
fldcw
shr
rclb
mov
rorl
and
xchg
flds
mov
cld
filds
or
sti
sub
fmull
cmc
push
shll
jo
lcall
js
fnstenv
icebp
ss
icebp
inc
mov
fmull
lret
jne
xchg
lds
xor
out
adc
and
mov
outsl
fwait
adc
fdivl
cld
sbbl
sbb
push
test
and
push
cmp
dec
sbb
lret
or
ljmp
scas
sub
scas
aad
out
dec
bound
adc
out
jp
mov
call
mov
scas
les
sti
fimull
xor
xor
enter
test
xor
pop
push
test
adc
js
inc
movsl
mov
cmc
adc
enter
pop
dec
inc
and
lret
ret
inc
cmpsl
xchg
jb
filds
lods
dec
movsb
mov
push
dec
dec
rclb
dec
pop
daa
mov
cmc
dec
pushf
and
mov
mov
test
mov
mov
loop
das
shlb
push
in
mov
push
stc
mov
sti
lret
xchg
call
cmp
cmp
inc
lds
popf
adc
xchg
dec
add
xchg
sbb
ret
xor
xchg
pop
ja
loope
xchg
shlb
cmp
sti
loope
add
push
inc
push
and
xchg
jae
and
lcall
pusha
sub
xchg
rolb
nop
loope
std
lock
adc
mov
test
cs
push
add
stos
orb
les
xchg
incl
sahf
and
popf
pop
imulb
pop
push
and
andb
lcall
mov
or
adc
std
adc
mov
lahf
fisubs
dec
push
mov
pop
jg
imul
fiadds
insl
cmpl
test
outsl
and
push
cmp
iret
sub
adc
mov
test
adcl
jnp
mov
lods
cwtl
pushf
and
xchg
xor
sub
sub
lock
xor
xchg
sub
xchg
push
add
cmpl
pusha
mov
movsl
imul
nop
arpl
jecxz
rolb
sbb
lahf
ds
sub
addb
in
out
adc
jae
add
int3
push
jp
and
push
es
jnp
cmp
or
cmp
cmp
lret
jb
lahf
aas
insb
movsb
push
add
pushf
xor
loop
push
pop
jp,pt
inc
xchg
adc
sbb
bound
cwtl
inc
cmc
in
loope
lcall
push
lahf
and
sub
add
loope
pop
lcall
pushf
out
adcl
add
add
lcall
popl
inc
cmc
adcl
ja
pusha
and
and
addr16
popw
mov
cmp
sub
out
mov
loopne
sub
std
dec
je
scas
inc
xor
je
dec
cmp
xorb
add
je
pop
daa
pushf
fiaddl
cmp
daa
dec
mov
sub
jo
lods
addb
clc
inc
or
jle
adc
inc
inc
fadds
inc
sbb
mov
add
jnp
call
mov
mov
cltd
lods
imul
bound
xor
xchg
xchg
clc
pop
push
add
lahf
sub
pop
negl
xchg
fisubrs
addr16
sbb
jnp
dec
fcoml
jo
sahf
ret
cmpsl
sub
adc
mov
cmp
add
and
call
sub
ret
pop
dec
and
fs
xchg
int
jl
movl
imul
inc
addr16
pop
divl
cmpsl
jb
sbb
xchg
cmc
and
sahf
mov
push
adcl
outsb
pop
add
push
inc
sahf
xor
pusha
sub
adc
pop
decb
shl
jnp
and
out
sbb
loope
loop
dec
orl
cmp
inc
andb
fisttps
xchg
cmp
sbb
ss
inc
xor
push
mov
in
test
outsb
jo
out
jg
jae
cmpsl
jns
xchg
arpl
pop
xchg
shll
sbb
rcrl
adc
dec
mov
mov
push
mov
fidivs
movsl
hlt
xor
mov
ret
popa
push
test
jl
add
lea
scas
sbb
or
add
stc
inc
test
xchg
aas
dec
out
or
fimuls
frstor
and
add
push
push
jnp
popf
andl
test
adc
cli
mov
pop
pop
mov
je
fwait
sbb
mov
inc
push
test
inc
pushf
xchg
xor
and
je
pop
and
shrl
arpl
inc
out
inc
mov
inc
loope
mov
mov
test
inc
rcr
scas
fnstcw
out
aas
xchg
cltd
das
xchg
mov
test
mov
and
push
fdivr
outsl
add
test
out
stc
popf
jns
jae
xchg
stc
push
cltd
out
inc
sub
pop
xchg
xchg
push
out
xchg
push
or
shll
lock
dec
xor
movsb
jne
or
arpl
or
mov
add
mov
mov
jmp
ljmp
dec
mov
cmp
pop
xchg
inc
push
sbb
mov
notl
xchg
shlb
cmpb
test
push
aaa
das
cmp
orb
in
xor
push
inc
xor
loop
test
sub
or
pop
lea
jl
jp
daa
sahf
ds
mov
fcompl
aas
andb
xchg
jno
jns
scas
inc
movsb
jns
les
mov
movsb
test
dec
pop
dec
testl
push
enter
or
popa
popf
rol
aam
nop
outsb
and
inc
decl
xchg
xchg
test
add
xor
cs
movsb
jns
inc
adc
mov
mov
hlt
loop
xchg
add
pop
loope
mov
mov
clc
stos
pop
addr16
mov
dec
test
push
jno
das
lods
push
sahf
addb
mov
dec
popf
or
bound
inc
pop
xorl
or
fs
cmp
cmc
add
inc
repz
mov
cltd
lret
out
mov
mov
cmp
inc
test
hlt
add
shll
jae
dec
into
int
fstp
sbb
push
push
in
mov
xor
je
or
outsl
inc
ret
and
xchg
gs
jecxz
ljmp
outsl
arpl
daa
outsl
cmp
jno
jae
jnp
sub
mov
jnp
sbb
fisubs
mov
inc
and
sub
and
daa
loopne
cmpsl
xor
aas
pop
test
fidivl
cmc
or
cmp
mov
jns
jbe
lods
adc
mov
xorb
sub
aas
dec
imul
inc
adcl
enter
fcompl
mov
dec
or
or
or
push
les
and
mov
mov
sbb
out
jecxz
pop
hlt
jne
and
enter
fsubrs
push
inc
mov
insl
loope
xchg
mov
dec
pusha
push
dec
lret
and
pop
pop
in
test
sbb
shlb
sbb
ds
aad
and
into
sarl
test
call
inc
add
repz
xchg
imul
andl
push
push
ja
testb
add
mov
jmp
sti
movsl
mov
arpl
or
ja
mov
push
daa
movsl
imul
sahf
daa
data16
cld
test
fs
roll
mov
inc
add
cmc
out
push
jle
sbb
into
or
pop
shll
sbb
jecxz
cltd
jnp
xor
out
ja
add
jle
add
mov
icebp
mov
adc
pop
cmpsb
pushf
sbb
sub
sahf
imull
and
mov
jno,pt
mov
mov
mov
pop
xchg
andb
leave
mov
daa
lcall
mov
out
loop
sahf
sub
cmp
pop
stos
jle
test
pusha
or
mov
popf
icebp
sbb
movsl
add
mov
jns
fisttpl
andb
loope
add
mov
andb
lock
cmp
ret
push
repnz
rorl
push
add
out
dec
cmp
fdivrs
ds
lcall
test
mov
and
imul
add
popa
imul
cmp
inc
push
cltd
and
push
xchg
test
sub
aas
fs
fwait
inc
mov
mov
dec
mov
or
fisubrl
xchg
lods
pop
pop
sti
into
loope
mov
aaa
aad
mov
mov
and
aaa
or
push
outsl
mov
sub
inc
ja
js
movsl
je
das
sub
push
lahf
xchg
mov
add
leave
popl
xor
or
lea
sarl
and
popa
and
in
shll
push
mov
xor
pop
subb
scas
mov
dec
adc
jp
sub
aaa
mov
xchg
push
fdivrl
xchg
dec
jp
sub
out
lods
insl
inc
cmpb
inc
rcrl
in
cltd
xchg
adc
cmp
insb
sub
cld
aad
mov
repnz
cld
dec
dec
daa
sbb
xchg
fwait
in
jbe
push
in
or
orb
cltd
dec
push
faddl
lock
leave
push
mov
daa
jns
xor
shll
mov
sahf
sub
inc
adc
mov
mov
lock
push
cmpsb
jne
and
movsb
dec
repz
testb
fs
fwait
cmp
mul
xchg
aas
sub
dec
scas
out
and
add
cmp
fs
sahf
insl
add
adcl
sub
mov
push
pop
pop
and
fxch
cmp
inc
sbb
mov
jl
fs
inc
cld
cld
stos
pop
jle
push
addr16
mov
xchg
cld
iret
or
push
inc
in
xchg
xlat
mov
test
sbb
cmp
mov
test
jp
popa
daa
push
movsl
cwtl
and
dec
push
inc
xor
dec
popf
cld
jno
inc
mov
sub
addr16
push
clc
or
aad
mov
mov
cld
repz
stc
jle
jge
adc
push
in
cmp
imul
jecxz
push
pop
addr16
mov
jecxz
xor
nop
ja
nop
push
ja
mov
shll
sbb
xor
inc
xchg
xor
pop
mov
ret
jbe
inc
jne
dec
jg
push
ret
lahf
push
mov
fdivrl
fimuls
xor
dec
inc
mov
out
out
insb
in
cmp
fwait
and
pop
jns
bound
rcll
dec
faddp
sbb
pop
mov
and
lret
fsts
cmpsb
cmpl
cmpsl
mov
cltd
into
ja
fwait
add
add
mov
hlt
out
out
add
adc
xchg
sbb
jbe
mov
outsb
je
xchg
int
mov
fcos
xchg
mov
js
dec
test
or
orb
pop
test
daa
addr16
inc
cmp
sub
mov
mov
dec
xchg
in
sbb
mov
push
inc
jge
cmpsl
mov
jle
int3
and
out
fists
xchg
lea
push
cld
les
inc
push
or
fistpl
xchg
xlat
jp
mov
inc
addr16
sub
inc
fwait
aam
push
movl
in
xor
fildl
inc
cmc
mov
cwtl
inc
mov
addl
sti
inc
mov
push
and
imul
scas
mov
add
addr16
pop
into
adc
popa
hlt
adc
xor
jl
call
shr
pusha
mov
dec
arpl
mov
mov
dec
and
mov
and
addb
sahf
pop
in
imul
ret
inc
dec
lods
mov
jg
push
imul
or
mov
inc
or
loop
cld
cmpl
es
xchg
inc
add
cli
aaa
xchg
mov
or
sbb
inc
push
sbb
push
jl
mov
cmp
xor
inc
repnz
or
pop
and
sub
sbb
mov
sub
dec
dec
mov
jmp
and
lds
mov
je
imul
sub
adc
addr16
cmp
call
sub
jo
adc
fisttpll
sub
nop
int
xor
insl
inc
fisubs
add
js
inc
mov
xchg
icebp
repnz
mov
xor
outsl
dec
cs
mov
int
pushf
pop
js
lcall
sar
jp
ja
lea
popf
rorb
not
popa
clc
xchg
popf
cmp
sbbl
sub
movsl
dec
mov
pop
ret
push
lahf
fs
in
or
cmp
sbb
nop
or
cltd
subb
dec
and
push
inc
adc
jge
loope
xor
sti
lahf
add
or
mov
add
mov
ja
subb
mov
stc
cs
movsl
arpl
adc
or
sub
add
addb
push
aam
stc
push
push
push
or
pop
dec
and
jg
loop
shrl
jns
xchg
xor
ja
or
jmp
cli
add
ja
xchg
jns
fcmovnb
cmpb
or
fiadds
fidivrs
sbb
inc
mov
ret
and
inc
and
xchg
push
cld
jne
inc
push
sub
xor
loope
adcb
andl
sub
push
and
mov
cmpsl
add
insl
cwtl
push
pop
mov
xchg
enter
mov
fnstenv
imull
sub
push
inc
int3
ja
test
mov
inc
hlt
ret
push
repnz
add
inc
in
fisubrl
xchg
xchg
xchg
mov
es
test
inc
std
aaa
fnstcw
cmp
sbb
ret
ljmp
adc
pop
imul
inc
push
sbb
push
pop
push
xchg
mov
pop
pop
clc
cltd
xor
repnz
xchg
addl
or
in
xchg
pop
and
lcall
push
test
ret
lahf
inc
adc
pusha
mov
adc
movsb
icebp
mov
imull
jle
or
cmpsb
outsl
pushf
sahf
loope
pop
cld
and
in
inc
jbe
jmp
pop
push
in
andl
fcompl
das
push
lods
cltd
lods
fistl
cltd
sub
adc
jle
fidivl
cmp
adc
adc
daa
xchg
popf
sti
pop
cmpsl
mov
xchg
pop
cmc
hlt
stc
push
pop
out
jmp
pop
aas
les
sub
rcl
lcall
inc
jge
test
sub
and
repz
sub
xchg
bound
push
pop
mov
mov
add
xchg
int
pop
sbb
jae
sbb
pop
mov
fildll
or
scas
mov
sahf
popf
adc
inc
lcall
or
scas
mov
pop
subb
add
cltd
xchg
push
daa
lds
mov
ja
cld
mov
addr16
or
sub
cwtl
sti
cli
sbb
outsl
lea
cld
mov
xchg
mov
out
add
lock
test
pop
sbb
jo
and
and
sbb
and
jl
loop
sub
cmpsl
pop
jg
lods
cmp
lcall
push
or
xchg
lods
fucomip
movd
mov
sub
dec
out
xchg
or
and
stc
mov
cmp
push
inc
mov
mull
mov
xchg
sub
and
test
and
and
and
stos
lret
loopne
sbb
mov
pop
movsb
inc
dec
and
push
jg
mov
shl
adc
jp
pop
add
pop
in
or
shll
jo
loop
sti
jge
push
push
push
popf
hlt
push
aas
push
xchg
sub
inc
js
sbb
adc
dec
sahf
daa
movsl
xchg
testl
stc
pop
inc
pop
mov
lods
jb
stos
pop
or
test
lds
imul
imul
lock
cmpsl
jno
daa
cltd
or
inc
or
pop
stos
movsl
repnz
cmp
adc
into
xor
adc
mov
mov
inc
and
cwtl
popa
shrl
or
mov
fwait
xchg
divl
jns
imul
mov
jmp
out
outsl
push
mov
xor
mov
cmc
xchg
sub
ss
cmpsl
cmp
stc
dec
pop
xor
pop
pop
sub
out
popa
mov
inc
xchg
pop
push
aas
sbb
hlt
sub
sub
mov
jp
inc
push
js
cld
insb
repnz
or
or
push
xor
scas
pop
test
inc
fwait
jbe
push
in
adc
es
lret
mov
jmp
outsb
test
es
fisubl
aas
and
clc
and
nop
repnz
in
movsb
push
dec
dec
in
sarl
loopne
movb
jae
adc
inc
ret
jmp
pop
les
mov
pop
jp
mov
jle
jbe
ja
popa
mov
sahf
push
xchg
cwtl
push
lret
ja
test
movsb
daa
sub
xchg
or
dec
imul
es
mov
or
inc
add
pop
imul
ja
in
and
stos
fldenv
and
loope
mov
mov
dec
mov
and
or
xchg
jp
lods
xchg
push
es
xchg
test
mov
pop
loop
repz
imul
pop
and
jge
pop
std
frstor
fisubrl
add
mov
xchg
lds
int
mov
ss
aas
or
push
xchg
or
clc
insb
push
dec
push
lods
xchg
js
test
ss
enter
ror
popa
gs
adc
roll
bound
out
fcomi
dec
lret
inc
inc
gs
pushf
or
push
xor
cltd
cmp
mov
jb
jmp
lret
and
dec
add
lahf
or
add
inc
cmpsb
shrb
inc
inc
dec
sub
loop
push
jl
xchg
dec
cmc
les
jns
jge
inc
xor
data16
pop
popa
xchg
mov
imul
fstpt
jb
lea
fisubs
movsl
test
and
or
loope
fbstp
pop
sahf
mov
inc
ficomps
mov
fistl
aaa
lds
aaa
push
and
jle
sub
jge
test
push
aaa
stos
xchg
jp
cmpl
negl
or
lahf
sub
stc
inc
cmp
mov
lds
mov
push
ret
cmc
mov
inc
mov
mov
stc
jne
mov
js
inc
test
ficoms
ret
adc
popa
pop
arpl
jns
pushf
fiadds
push
bound
sbbl
rclb
mov
mov
xor
cmc
inc
movsl
sbb
shlb
jmp
pop
xchg
sub
fsubrp
in
test
add
in
cwtl
fwait
mov
lret
or
fsub
lahf
in
push
fcmovu
mov
dec
ja
xchg
std
pop
fcomps
das
lahf
pop
test
sub
dec
flds
mov
bound
sbb
dec
movsl
addl
daa
add
sub
or
addr16
push
ficoms
jge
addr16
gs
repnz
sbb
push
mov
lahf
sub
les
sub
mov
xor
add
sbb
sbb
or
sahf
cmc
sub
push
imul
cwtl
cmp
push
push
in
sub
dec
xchg
and
jg
or
cs
or
filds
aam
dec
push
js
test
dec
js
stos
mov
fildl
add
repnz
pop
dec
xchg
aam
popa
mov
add
mov
mov
aam
shlb
lahf
aad
dec
sarl
fnstcw
add
fsubr
daa
leave
cld
mov
cmp
movsb
cmp
jge
hlt
pop
bound
sub
cmc
xchg
jg
aaa
imul
xchg
add
inc
aaa
dec
sub
jg
iret
inc
incb
push
mov
iret
fldl
or
addl
dec
sbb
push
pop
jle
lcall
push
mov
xor
inc
sti
mov
adc
js
pop
out
fsub
out
stos
cwtl
inc
out
test
xchg
xchg
les
jge
inc
ljmp
popa
push
adc
jl
andb
dec
outsl
fimull
or
dec
popf
cld
stos
xchg
jne
mov
aaa
loopne
ja
sbb
inc
inc
cmc
mov
outsl
add
adc
push
push
sbb
add
in
fstpt
push
jle
xor
add
ret
subb
sub
std
int3
aaa
pushl
push
daa
scas
mov
pop
ret
pop
fimull
or
xchg
les
sub
movsl
lods
push
test
push
inc
test
scas
xchg
cmp
dec
fadds
cmp
jo
mov
dec
cmp
pop
pop
adc
fcoms
sbb
jbe
pop
inc
or
xor
push
and
outsl
mov
repnz
dec
js
sbb
fcomi
ret
addl
sub
call
mov
lea
or
mov
add
repz
inc
cli
dec
push
and
push
pop
dec
add
cs
repz
xor
push
cmpsb
aas
adc
outsl
xchg
std
mov
xchg
xchg
mov
xor
fs
scas
lcall
leave
push
push
clc
xchg
pop
inc
sub
popf
out
jo
pop
out
loope
inc
xchg
mov
clc
fists
xchg
push
xchg
xchg
mov
mov
fidivs
xchg
and
xchg
cmp
shrb
imul
mov
xor
adc
ja
xchg
sub
xor
imul
push
mov
movsl
jecxz
js
mov
addr16
and
out
insb
mov
adc
pop
shrb
adc
xchg
add
jecxz
mov
jnp
rclb
inc
add
sub
adc
pop
mov
cmp
sti
bound
xor
incl
scas
mov
inc
add
iret
lahf
imul
lret
popf
mov
add
fsubrs
sub
adc
leave
sbb
int
xchg
stc
xor
adc
xchg
inc
or
dec
lods
flds
gs
inc
fdivl
sbb
cltd
inc
popa
add
lahf
cmp
mov
mov
xadd
or
mov
nop
aad
lret
or
ja
inc
into
inc
or
mov
and
mov
jb
mov
cwtl
aas
je
mov
je
or
rcrb
mov
pushf
iret
and
pop
pop
jp
addr16
adc
cwtl
fdivs
dec
add
fdivl
pop
jmp
std
mov
and
add
mov
mov
mov
test
orl
jge
and
nop
xchg
jns
rcrb
pop
add
cld
notl
loope
insb
fstpt
daa
sbb
adc
loope
pop
jno
and
and
out
fwait
mov
aaa
insb
insl
adc
lods
lcall
addr16
add
ja
imul
add
je
sbb
jnp
add
fwait
pusha
mov
insb
inc
pop
insb
daa
add
fs
punpckhbw
test
cmpl
fcoml
ror
test
inc
xchg
lahf
add
mov
mov
andl
pushf
int3
add
jl
loope
mov
popf
mov
leave
xchg
xchg
imul
push
add
or
into
dec
orb
fistpll
cmpsl
cld
jo
andl
push
dec
cmpsl
ja
subb
in
leave
add
into
test
lret
adc
les
imul
mov
and
add
mov
and
inc
enter
test
out
pop
repnz
sbb
arpl
xchg
adc
sub
mov
movsl
loopne
cmc
add
pop
bnd
lcall
mov
aas
fnstcw
push
aad
enterw
add
mov
cltd
test
jle
push
adc
mov
mov
and
test
pop
mov
push
add
or
scas
ja
test
jmp
cmp
adc
rolb
das
loope
sti
mov
cli
sbb
sahf
xor
or
sub
loope
cmp
faddl
ds
sub
inc
push
ljmp
add
jne
ret
pop
bound
add
sub
jb
test
push
repnz
js
call
sub
and
repnz
ja
insb
scas
fmuls
dec
ja
imul
fcomip
dec
in
dec
mov
dec
xor
shlb
mov
test
pop
sbb
sbb
cmc
push
mov
jecxz
mov
mov
std
jb
and
sti
jge
xchg
loopne
cmp
xor
test
enter
fstpl
xchg
in
xor
test
xchg
cmp
add
sbb
lcall
jbe
sbb
cmc
xchg
loop
test
adc
add
bound
sbb
test
int3
adc
pusha
stos
add
adc
mov
add
arpl
fnstenv
push
ljmp
sbb
xchg
sub
and
shlb
jae
lahf
loopne
jae
xor
lret
lret
cmp
and
push
aas
test
jg
pop
nop
fwait
cmp
inc
inc
fs
call
push
and
icebp
stc
insl
adc
outsb
push
cli
push
cmp
stc
adc
and
loop
dec
and
test
cmp
sbb
nop
sub
push
sbbb
sbb
cmp
pop
or
or
push
push
push
inc
clc
scas
cmc
addr16
test
push
or
mov
arpl
fs
loope
push
popa
mov
cmc
jbe
andl
rcr
insb
sbb
pop
fdivp
fs
adc
imul
je
cltd
test
jae
pushf
inc
sbb
sbb
adc
push
scas
mov
ret
sub
adc
cmc
cltd
lea
push
ljmp
rcrl
cmpsl
fdivrs
rcr
and
mov
popl
loope
or
popa
pop
adc
movhps
mov
fnstsw
iret
ret
insl
cmp
loopne
jo
mov
cmp
fsubr
jnp
jb
jae
pop
cmpb
push
fwait
mov
xchg
decb
and
sbb
push
mov
inc
bound
and
pop
mov
cmp
sbb
pop
stos
jecxz
cmpsl
cmp
push
fnstsw
pop
mov
add
adc
sbb
jle
sub
inc
add
sub
sub
enter
jmp
loopne
ficompl
push
pop
mov
mov
xchg
repz
cmp
fsts
pushf
jl
dec
adc
outsb
addb
mov
lods
push
xor
lds
add
in
sub
cmp
sbb
push
arpl
pop
jg
out
sub
fsubp
mov
lock
push
pop
xorb
out
and
add
std
test
outsl
testl
lds
lret
sbb
push
or
push
les
fs
mov
imul
lock
out
mov
and
aas
jle
lret
sub
mov
jno
jge
pop
and
xchg
ja
test
imul
push
fwait
inc
push
bound
jle
sub
add
pop
push
addr16
sub
and
ja
test
out
inc
arpl
stc
push
sti
jne
push
add
inc
mov
jl
mov
fwait
mov
into
cli
add
pop
out
shrb
or
movsl
push
xchg
ja
popf
and
push
pop
jp
fcmovnu
rcrb
js
filds
scas
ljmp
jb
addr16
dec
decb
leave
xchg
and
dec
aad
pop
test
push
insl
cmp
cmpsl
scas
lret
mov
adc
or
xorb
arpl
cmp
test
das
jp
fwait
sub
vmread
rcrl
adc
mov
inc
xchg
inc
int
rcrb
add
jo
stc
dec
loope
jl
frstor
aam
add
add
sbb
cmp
scas
sahf
xchg
cmpsl
adc
inc
dec
and
jns
mov
mov
loope
add
lods
sbb
xchg
mov
mov
xlat
cmpb
sti
scas
int
loop
xchg
add
or
rcrb
mov
mov
add
xchg
ret
imul
shl
loopne
mov
and
mov
jo
pop
mov
jb
fcoms
andl
mov
lock
loop
sbb
out
xchg
js
stos
mov
ret
xchg
ret
push
arpl
xchg
std
pop
mov
fiaddl
dec
fwait
popf
lcall
addl
pop
popf
dec
inc
pusha
xor
mov
test
xchg
ss
fisubl
filds
jp
jb
xchg
std
loop
inc
inc
mov
ffree
lret
scas
mov
xchg
pushf
gs
paddd
loope
dec
add
add
mov
ljmp
lds
mov
out
dec
addl
rclb
inc
xchg
xchg
inc
mov
mov
in
add
sub
pop
call
loope
add
pop
cmp
sbb
xor
or
fdivr
and
xchg
lea
push
iret
push
outsl
add
lds
dec
test
cli
or
aaa
addb
mov
ljmp
repz
jae
out
test
popf
lahf
rcl
repnz
jns
and
sbbb
sub
in
iret
mov
clc
inc
inc
mov
and
cli
jl
sub
js
cmp
cltd
inc
pop
add
add
flds
mov
mov
fbld
inc
aas
xchg
cmp
loopne
jmp
push
xor
pop
mov
push
cwtl
fs
sub
mov
test
and
nop
dec
cmp
dec
push
stc
fdivrs
incb
rclb
sahf
sbb
xor
sbb
gs
jmp
addr16
xchg
hlt
pushaw
lock
push
daa
pusha
xlat
inc
xor
xor
adc
cmpsl
cmpsb
or
and
inc
shll
call
ljmp
pop
mov
xchg
mov
cld
pop
or
jp
inc
ret
bound
mov
pushf
test
fwait
mov
bound
xchg
or
out
inc
sti
sub
sub
lahf
mov
pop
inc
mov
jbe
out
mov
inc
pop
adc
pop
mov
sbb
addb
repnz
adc
aaa
mov
fs
sahf
push
xchg
xchg
mov
cmpsl
insl
fst
xchg
sahf
repnz
cmp
insl
mov
mov
sahf
popa
or
fcmovu
xchg
popa
mov
sbb
and
sbb
cmp
mov
sub
packuswb
and
leave
or
daa
mov
lret
xchg
adcb
inc
add
cmp
jle
sub
negb
adc
lret
scas
loopne
cmp
cmc
mov
fwait
js
jbe
aad
movsl
ret
mov
lea
scas
aaa
inc
cmp
jae
sahf
cmp
sbb
dec
fsubp
and
ret
sub
push
pushf
pop
pop
mov
jns
es
pop
cmpb
andl
dec
adc
push
mov
xor
scas
xchg
lock
rorl
xchg
mov
and
negb
adcb
mov
je
fsubl
test
loope
cmp
xlat
and
lahf
push
mov
pop
sbbb
mov
jb
icebp
mulb
loope
xor
mov
jmp
push
adc
jge
xor
arpl
push
pop
inc
or
dec
mov
jo
mov
or
xor
aas
inc
mov
add
xlat
mov
add
adc
pop
lahf
dec
test
orb
test
push
int
or
jecxz
test
in
mov
out
nop
lahf
sbb
pop
sub
inc
mov
pop
dec
bound
addb
dec
xor
jo
pop
aas
aas
push
lret
cmp
jno
clc
leave
xchg
aam
mov
ds
push
popf
and
incb
les
daa
dec
icebp
xor
xor
xor
std
mov
add
xchg
xor
mov
cmp
loope
cmpb
mov
popf
sbb
js
mov
push
in
adc
xchg
pop
xchg
jecxz
jmp
add
and
pop
add
lea
xchg
orb
cld
mov
adc
dec
fwait
sar
lahf
push
adc
in
mov
cmp
pop
inc
mov
ret
aaa
fimull
leave
cmp
jmp
dec
sbb
cmp
pop
mov
testb
lahf
cmp
sahf
mov
jns
pusha
add
push
add
mov
loop
cltd
imul
xor
xchg
insb
dec
ljmp
out
pop
mov
daa
push
pusha
ja
ret
jbe
mov
jge
xchg
xchg
pop
arpl
mov
dec
mov
int
addr16
fcmovu
sbb
xchg
popf
fsubl
ds
sub
push
pop
bound
das
sbb
rcr
sbbb
sbb
pushf
sbb
jo
xor
cmc
add
mov
sahf
sbb
pop
test
xchg
shl
sub
sbb
lcall
dec
xchg
ffree
mov
fs
test
xor
daa
nop
lcall
ljmp
push
lea
xchg
sti
pop
mov
jns
call
mov
out
and
dec
out
xchg
filds
test
add
push
sahf
sti
rcll
adcl
and
gs
ljmp
bswap
pop
testb
cmp
fcmovb
mov
dec
popf
test
pop
sar
stc
add
mov
popa
and
pop
mov
push
popa
cmp
cld
or
test
ffree
and
ja
or
xor
cmp
mov
int
pop
xlat
repz
loopne
sbbb
fwait
sub
sbb
sub
lock
shll
push
sbb
lahf
xor
mov
lea
lods
cli
ret
inc
sub
fsubrl
andl
add
imul
pop
add
pusha
popl
pop
in
mull
in
aaa
mov
pop
enter
pop
mov
movsb
or
ja
clc
xchg
inc
enter
orl
scas
mov
or
jg
cmp
push
lret
rorl
js
mov
sbb
pusha
dec
scas
xchg
and
decl
pusha
add
and
push
and
ja
fisubrl
subl
dec
inc
popa
jp
inc
sbb
test
add
pop
mov
or
or
inc
or
xchg
movups
add
adcb
pop
push
sbb
stc
bound
fidivl
push
and
pusha
bound
add
bound
cmp
pop
xchg
xchg
and
xchg
out
daa
lcall
mov
sbbl
cmp
aas
movsl
repz
mov
mov
inc
or
push
sbb
xacquire
push
mov
cmp
rcll
std
mov
or
bound
aaa
sbb
sbb
push
lea
xchg
sbb
rolb
xchg
lcall
in
add
and
and
pop
loopne
sbbb
rorb
and
fnstcw
and
ret
sub
mov
fabs
xor
and
jbe
jge
bound
lea
popf
in
ret
out
test
cmp
mov
call
js
rcrb
add
movl
jg
fsubr
adc
xchg
lcall
dec
ljmp
loope
mov
sarl
leave
push
mov
mov
dec
rorb
testl
pop
dec
inc
push
xchg
sarb
mov
dec
es
aaa
pop
popf
fmuls
mov
cli
rcl
inc
iret
in
icebp
xchg
test
xchg
sub
jne
mov
jnp
cli
mov
xchg
jg
clc
loopne
jmp
mov
push
mov
outsl
sti
icebp
mov
sbb
mov
and
jo
fs
cmc
out
and
ret
ja
mov
dec
mov
pop
ljmp
lock
addr16
cltd
mov
fsts
test
push
jle
sub
outsl
rolb
data16
idivl
movsb
into
or
in
pop
xor
ret
inc
stc
shr
pop
inc
xchg
and
inc
insb
addr16
jecxz
sub
pop
pop
inc
repnz
inc
pop
sbbb
js
push
add
stc
aas
xorl
negb
mov
pop
add
inc
mov
int3
mov
lds
add
fld
lcall
daa
or
xorl
push
loop
iret
push
inc
pushf
sub
cltd
mov
inc
ss
adc
bound
push
inc
adc
fldl
jg
adc
push
clc
shll
ja
cltd
inc
lcall
pop
add
pop
addr16
mov
clc
or
repz
testl
mov
cmc
aas
mov
sbb
cmp
sarb
movb
popf
jns
sbbl
or
imul
xchg
xchg
mov
clc
out
xor
pop
and
sti
jo
popa
pop
add
mov
inc
test
mov
in
or
repnz
push
repz
jp
pop
mov
popl
adc
dec
inc
pop
mov
xor
loop
sub
loope
cmp
mov
or
jecxz
inc
pop
add
push
or
inc
jg
jb
aam
add
dec
fldenv
cltd
xchg
orl
jge
jns
or
or
jae
hlt
subb
dec
cmpl
clc
int3
frstor
test
jmp
pop
gs
push
mov
repnz
xor
xchg
mov
pusha
ja
stc
fdivrs
add
mov
and
mov
test
adc
cmp
inc
ja
cltd
pop
add
dec
fmull
inc
ss
jae
repz
adc
mov
mov
cmpsl
popa
in
inc
jnp
in
scas
test
and
add
in
dec
xchg
scas
xchg
sbb
insl
xchg
popf
mov
cmpsl
xlat
inc
sbb
addb
cs
pop
in
mov
pushf
adc
cmpsb
inc
sub
xor
jnp
jne
adcl
test
mov
mov
aas
movsl
dec
add
mov
xchg
cmpsl
lea
mov
mov
push
mov
lret
test
dec
pop
enter
inc
push
ja
xchg
outsb
mov
add
and
or
lea
hlt
xor
aad
push
mov
lods
shl
roll
or
loop
pop
xor
loop
lahf
jmp
fs
pusha
ljmp
test
test
pop
out
inc
add
xchg
sub
jbe
rclb
xchg
sahf
shrl
cmpsl
aas
push
dec
mov
orl
cmp
or
imul
fbstp
push
add
xchg
repz
orl
andb
loop
xchg
in
xchg
pop
movsb
pop
add
add
call
or
imul
cltd
js
and
scas
mov
xchg
or
pop
pop
js
jb
push
addr16
pop
adc
inc
je
pop
ret
int
das
shr
andb
ret
insl
adc
lods
mov
mov
lahf
push
ffree
lea
xchg
push
ret
mov
mov
adc
jne
scas
mov
lock
divl
outsl
shll
loop
add
or
lcall
inc
dec
fsubrl
repz
and
das
cmc
sbb
pusha
and
mov
add
sbb
fstpl
add
arpl
dec
test
std
pop
fwait
out
or
ret
testl
and
pop
or
and
jl
pop
scas
lcall
insl
addr16
sar
adc
xchg
lock
cmp
jl
rolb
adcb
mov
ret
cmp
sti
lret
stos
pop
and
fwait
les
jge
push
and
cltd
outsb
adc
jecxz
popf
rolb
xor
loopne
inc
dec
test
or
pusha
jg
mov
mov
gs
daa
repnz
sbb
mov
cs
sub
mov
sbb
dec
out
clc
gs
push
cmpsl
sub
fs
sahf
add
outsl
rolb
sti
xchg
imul
cmp
test
mov
arpl
mov
repz
movsl
mov
scas
adc
xchg
mov
or
xchg
lahf
or
lea
adc
ret
adc
mov
mov
call
add
imull
xchg
addr16
popf
insl
xchg
enter
pusha
sbb
imul
inc
xchg
pusha
lods
lret
out
sub
loop
les
pop
push
inc
xor
addb
addr16
xchg
xor
orl
std
pop
sub
getsec
enter
xchg
adc
mov
push
stos
push
jb
mov
addr16
insl
roll
cli
sbb
xor
data16
push
adc
push
fbstp
loop
cmpb
sbbb
fistpl
pusha
in
stos
mov
fmull
inc
jb
sub
repnz
hlt
mov
push
test
fs
fsts
mov
sbbb
in
popa
sbbl
xchg
mov
or
add
js
test
movsb
sbb
fwait
scas
notl
mov
les
popa
xchg
ljmp
mov
jl
xchg
loope
fs
mov
fbld
out
mov
and
je
mov
xor
cmpb
pop
scas
fs
lahf
and
stos
xchg
dec
inc
mov
mov
cmc
or
dec
ja
sbb
xchg
je
push
movsl
mov
mov
lds
xchg
cmc
data16
ja
cli
xchg
xchg
test
add
xchg
andl
jae
push
out
sub
fldenv
add
cmpb
popl
test
addb
pushf
inc
push
sub
cmp
xchg
repnz
dec
jae
and
test
push
subb
jmp
mov
testl
mov
adc
fwait
scas
idiv
iret
sub
repz
and
xchg
or
pop
adc
outsl
fistps
sbb
or
cmp
lds
int
and
jns
dec
or
inc
sbb
je
test
stos
loop
jbe
inc
shlb
xor
and
in
test
mov
cmp
add
inc
adc
add
shll
and
mov
fs
mov
pop
inc
or
setb
fmulp
push
mov
rorb
jg
inc
cmp
jno
test
imul
lea
cmpsb
or
aaa
fcmovne
and
mov
dec
jo
imul
orb
ret
push
fwait
hlt
inc
mov
xchg
adc
or
sbb
outsl
outsl
mov
arpl
cld
pushf
xor
iret
inc
pop
mov
xchg
and
push
popf
lods
adc
push
jb
mov
push
xchg
pushf
out
ss
in
imul
ja
xlat
ficoml
jb
leave
xor
out
inc
repnz
das
in
cmp
dec
icebp
shl
xlat
mov
xchg
loope
in
lcall
mov
push
out
and
cmc
inc
xchg
popa
mov
cwtl
xchg
dec
aad
bound
sbb
dec
cmc
enter
mov
movsb
loopne
mov
mov
xor
es
cmp
stc
ret
setge
xchg
cmp
and
rcrl
inc
cld
jb
xchg
popa
testl
stc
pop
ds
rorb
sub
xchg
loop
aad
mov
mov
inc
mov
adc
inc
cmp
or
mov
ja
cmp
cmp
and
aas
test
lahf
and
and
jb
pop
mov
cltd
lcall
jo
jle,pn
addb
imul
sbb
mov
subl
sbb
jg
push
fs
add
sub
fldcw
sub
pusha
adc
subb
movsb
jg
xchg
xchg
pop
jg
jl
mov
mov
add
in
lret
sbb
loopne
and
sub
push
aad
or
frndint
inc
xchg
jne
add
add
mov
jne
jge
nop
jo
test
push
imul
and
les
fidivrs
inc
sarl
push
mov
lds
daa
aam
push
dec
repnz
imul
mov
adc
xlat
loop
cmp
fisubrs
lea
dec
bound
pop
test
or
jecxz
dec
dec
stc
leave
inc
pop
or
aas
cmpsl
or
loop
pop
push
adc
xchg
xchg
and
popf
mov
xor
daa
test
inc
cmp
sub
dec
neg
fistpl
into
sahf
jmp
sub
xor
testl
mov
xchg
mov
sub
int3
xchg
pop
pusha
sahf
bound
dec
data16
bound
andb
fs
pusha
xchg
dec
bound
xchg
sti
xchg
push
cmc
and
push
imul
popa
sub
mov
adc
cmp
mov
jecxz
add
cmpsl
shll
sub
test
xlat
andb
leave
mov
lahf
iret
xor
or
xchg
xchg
sbb
mov
iret
outsl
or
loop
dec
divb
addb
inc
iret
inc
xor
ja
out
jp
jnp
mov
or
cmp
mov
iret
sbb
dec
repnz
push
cmp
inc
or
mov
pop
mov
imul
xchg
push
mov
jecxz
fiadds
jecxz
repnz
std
mov
pop
pop
jb
popa
test
out
push
rcrl
jb
fsubs
mov
lret
movsb
jecxz
clc
sbb
cli
test
inc
jae
pop
pop
sub
jo
mov
xor
jns,pn
xor
out
pop
add
ja
push
bound
or
pop
scas
cmp
lret
out
add
mov
ja
jmp
mov
cmp
cmp
sub
sub
and
xor
mov
cmp
fcoml
inc
rclb
mov
test
push
cltd
cmp
pop
stos
adc
sbb
les
lods
fs
push
lods
push
jl
addr16
xor
mov
and
or
daa
mov
je
cmp
jne
pop
clc
aad
mov
cli
inc
inc
or
xchg
xchg
fcmovu
lret
sub
cmp
xchg
gs
sti
fdivr
sti
push
mov
cmp
mov
cmpsb
mov
push
repz
mov
add
mov
adc
lret
lcall
arpl
xchg
jno
pop
mov
xlat
repnz
into
add
int
and
pop
in
sub
push
andl
outsb
bound
loop
in
lret
xchg
cmp
sub
mov
les
fcompl
sbb
jp
jbe
out
inc
fsubs
push
xor
cmc
inc
dec
jecxz
outsl
aaa
repz
out
cmp
and
dec
repz
repnz
adc
popa
push
fs
imul
bound
mov
add
popl
je
push
push
sti
sbb
cmp
ljmp
je
and
lahf
js
add
lcall
cmp
addr16
mov
and
sub
cmp
sbb
stc
fs
test
int3
push
pop
lods
inc
jl
cmp
jge
rcrb
fisubl
or
pop
pop
adc
jge
rolb
lahf
sahf
leave
cmp
cmpsb
push
icebp
lock
push
fs
xchg
or
push
sbb
out
iret
mov
fs
cld
inc
mov
ret
pop
inc
pop
fmul
cli
xor
push
pop
pop
dec
pop
inc
adc
add
jo
int
add
js
ds
cmp
and
or
or
push
mov
es
in
shl
test
or
xchg
add
xchg
sbb
jge
cs
les
aad
or
xorl
sbb
scas
mov
jns
out
fildll
push
cmp
daa
xchg
xchg
decb
fstpt
flds
imul
mov
bound
cmp
pop
repnz
sar
fcmovnu
cwtl
sub
jno
mov
xchg
test
cmc
adc
aad
std
jmp
xchg
hlt
fidivl
fldenv
pop
pusha
sbb
fbld
xor
dec
add
jp
test
sub
push
pop
repnz
in
pop
mov
add
mov
xor
inc
cmpsl
add
stos
mov
or
insl
sbbb
dec
push
cmp
insb
cli
movsl
test
pop
rcr
ret
and
jb
sbb
jge
push
push
sbb
fwait
inc
aaa
jae
add
pop
gs
es
imul
xor
nop
lds
mov
lret
hlt
pop
sbb
repz
cmp
cmpsb
inc
lods
sub
inc
ss
pushf
divb
jns
pop
sbb
cmc
and
cmpsl
inc
in
adc
test
mov
out
stc
dec
or
xchg
pop
out
or
outsl
pop
xor
ds
xor
shl
fsubrl
js
cs
pop
test
jo
dec
xchg
adc
push
iret
addr16
dec
popf
add
nop
cmp
jo
jge
insl
inc
ja
and
bound
dec
out
cwtl
xchg
lahf
xor
xchg
cmp
ficoms
add
pusha
and
sub
mov
mov
dec
sbb
pusha
sti
test
jo
dec
cmpsl
and
push
and
testl
lea
andl
test
popf
dec
mov
mov
pushf
stc
push
mov
fidivs
jg
incl
aaa
in
jecxz
push
add
insb
test
sub
mov
cmp
int3
sub
pop
inc
fdivr
jp
repz
out
adc
arpl
cld
fsubrs
jg
les
xchg
fsts
aam
pop
mov
ret
mov
rcll
push
jae
leave
jle
push
mov
jge
mov
ljmp
pop
out
mov
add
pop
arpl
push
mov
imul
repz
sub
adc
add
aas
scas
sbb
aas
sub
jnp
mov
test
pop
leave
subb
jmp
jae
xor
sub
dec
jne
jbe
scas
ret
jg
imul
pusha
fs
mov
mov
sbb
push
inc
jb
xor
jecxz
push
mov
xchg
xchg
dec
pop
jg
adc
mov
cmc
and
ljmp
xor
sub
lahf
aam
fisubs
add
loopne
imul
or
arpl
mov
shll
jo
std
add
arpl
fmul
das
dec
rcll
in
push
xor
cmp
xor
add
aas
data16
sahf
cltd
dec
jle
pop
mov
mov
pop
mov
in
xchg
push
cs
cmp
ret
bound
aas
jno
lcallw
add
sbb
inc
pop
inc
ret
stc
lret
sbb
scas
push
imul
xchg
sti
lret
ds
adc
push
outsl
mov
hlt
dec
lock
or
and
pusha
lds
pop
dec
cmc
mov
adcb
add
pop
add
adc
add
cld
and
sbb
popf
or
test
pop
ja
shl
pop
lds
push
in
dec
add
mov
aaa
mov
inc
jmp
sub
sub
mov
sti
xchg
xor
inc
aam
daa
push
mov
push
or
scas
add
jp
push
lahf
push
insb
xorl
cmpsl
aam
mov
and
pusha
pop
subb
xadd
dec
jg
pop
lret
imul
mov
or
test
mov
push
jg
gs
mov
stos
push
testl
or
repnz
imul
mov
pop
push
jo
imul
sub
pop
dec
mov
and
andb
and
jb
jmp
fwait
mov
mov
xchg
adc
or
jno
inc
ret
pop
pushf
cli
xor
mov
rcr
fidivrl
dec
cmp
aaa
daa
and
xchg
lcall
mov
sbb
mov
imul
push
mov
ljmp
data16
movb
std
push
loopne
jle
mov
fadd
pusha
aaa
loope
testb
inc
hlt
gs
inc
mov
sbb
mov
inc
mov
imul
inc
cld
inc
mov
jecxz
js
sub
scas
pop
sbb
cwtl
ret
and
mov
pusha
adc
jno
and
sarb
adc
out
rcrb
push
sub
imul
cmpsb
test
sbbl
popf
mov
mov
inc
fcomip
add
adc
adc
dec
lea
pop
loopne
push
xchg
push
mov
sti
xchg
or
mov
pop
nop
repnz
mov
xchg
daa
lea
ja
fsubr
loopne
mov
roll
nop
fldt
xchg
and
xchg
pop
inc
jo
cli
xadd
xchg
push
aaa
ljmp
add
lahf
adc
sub
and
jno
sub
dec
test
mov
mov
in
cmpsb
rorl
idivl
mov
fiaddl
inc
outsl
push
stc
pop
add
mov
lea
xor
fwait
push
and
addr16
imul
add
and
and
jnp
mov
dec
sub
mov
nop
mov
push
mov
push
pop
add
dec
push
or
mov
loop
cmpsl
lea
clc
cmc
leave
mov
outsl
cmp
add
mov
push
mov
cmp
fwait
movsl
adc
shr
mov
sbb
fcom
or
dec
xchg
lahf
loopne
xchg
ja
add
das
add
inc
cmp
lahf
lcall
cs
adc
jmp
and
pop
daa
notl
sbb
fldenv
add
and
inc
aas
fdivrl
enter
xchg
add
dec
je
bound
add
idivl
jl
stc
mov
fistl
cmc
push
jl
sbb
rol
aas
cld
jl
cltd
iret
in
popf
push
shl
cwtl
repnz
pop
test
push
jno
lea
ja
lcall
loopne
sbb
aas
iret
hlt
aas
mov
ss
jg
out
addr16
adc
gs
aas
fmul
repnz
mov
icebp
cmp
mov
call
jne
add
daa
leave
bound
sbb
fidivrs
or
xchg
cmp
es
mov
jb
fcompl
push
or
inc
and
mov
lds
mov
xor
mov
push
les
movl
cmp
sbb
addr16
shlb
sbb
jmp
jecxz
and
or
incb
pop
out
andl
inc
xchg
and
cmp
rcr
pop
hlt
and
fisttpll
sub
sbb
cmpsb
xchg
pop
loop
pop
cmp
ja,pt
outsb
xor
lahf
pop
out
hlt
xlat
inc
pop
or
sarl
iret
cmp
adc
sub
jmp
mov
sar
mov
mov
insl
jle
sub
andnps
ret
aad
stc
and
je
loop
clc
lret
mov
pusha
pusha
shlb
dec
push
add
push
addr16
jp
add
iret
lcall
add
add
push
lahf
push
push
andl
cmp
jg
aad
test
mov
mov
jns
pop
push
pop
mov
nop
pop
mov
addr16
adc
xchg
jl
jle
lahf
ja
cmp
adc
sub
fstps
lods
ja
push
mov
add
rcll
enter
mov
and
mov
dec
xor
mov
ret
ret
je
jecxz
pop
test
mov
fdivp
mov
pop
addr16
mov
sub
fcmove
and
out
xchg
pop
xor
cmp
jg
sarb
mov
push
mov
outsl
jp
sbb
popl
mov
lahf
push
movsb
outsb
and
in
nopl
xchg
push
repz
and
jg
pop
xlat
loop
aas
mov
pop
int3
rorl
enter
cmp
fs
mov
inc
jns
xor
pushf
add
mov
lcall
mov
out
repnz
outsl
repnz
pop
dec
outsl
mov
mov
addr16
lods
mov
out
mov
out
inc
xchg
inc
pop
shl
jp
in
mov
in
push
decl
mulb
adc
fstpt
sarl
shlb
out
sub
aad
add
xchg
inc
roll
jo
xor
test
outsl
dec
xor
mov
sub
mov
in
xor
adc
dec
inc
or
xlat
mov
cmp
or
in
push
jp
aad
lahf
std
push
cmpsl
out
mov
add
nop
loopne
xor
jecxz
jns
decb
aas
pop
cltd
dec
and
fisubrl
cwtl
lea
in
jne
insb
enter
add
adcb
sbb
mov
loopne
fidivrs
xchg
lds
mov
mov
mov
adc
push
int
call
es
or
insl
xchg
inc
xchg
push
mov
es
pop
mov
pop
jne
cltd
repnz
mov
popf
and
xchg
inc
enter
or
es
sbb
stos
push
push
pop
aam
repnz
pushf
or
ja
jnp
aaa
std
pushf
xorl
dec
addr16
test
daa
out
add
fdivrl
std
adc
xchg
shll
sbbl
jp
daa
add
cmpsl
in
cmpsb
lods
aam
push
pop
xchg
pop
push
push
mov
or
cwtl
pop
mov
mov
fcoms
mov
mov
push
jl
and
shrb
inc
aad
mov
sub
arpl
cmp
shl
inc
push
xchg
add
daa
iret
ljmp
xor
cmp
mov
add
insb
pop
dec
cs
insl
inc
mov
inc
int3
cmc
imul
mov
addb
jo
call
popa
cmp
inc
notl
test
add
inc
sti
hlt
sub
lahf
imul
dec
test
push
and
and
pop
ljmp
loopne
xchg
and
mov
jle
mov
push
sbb
jmp
and
sbb
cs
and
lea
pop
je
xchg
js
cmp
pop
fs
pop
sub
mov
enter
das
inc
push
cmp
lret
es
pop
imul
adcb
cmp
dec
mov
lods
lahf
sub
popf
or
add
xor
js
outsb
xchg
dec
js
adc
inc
adc
rcl
xorl
aas
push
xchg
xchg
add
inc
push
arpl
arpl
sub
in
mov
jno
shll
jo
jp
xchg
ss
pop
sbb
sub
iret
jle
push
orl
mov
inc
popf
repnz
nop
push
mov
xor
xchg
mov
sub
repnz
fbld
addr16
mov
mov
xchg
sub
lahf
das
inc
pop
out
push
repnz
daa
mov
ja
aaa
shrl
rol
mov
ja
lea
jns
lds
mov
icebp
pusha
add
daa
loopne
icebp
fists
mov
mov
sub
fidivrs
cmp
icebp
inc
push
lods
dec
mov
leave
shll
pop
inc
inc
sub
shll
and
pop
in
iret
loope
pushf
test
insl
lods
leave
orl
out
sub
rcrb
test
faddl
repnz
sub
arpl
add
push
inc
out
jbe
in
jo
add
jnp
fcmovnb
mov
popf
push
hlt
ret
test
pop
test
push
test
jp
jno
mov
inc
inc
clc
gs
adc
scas
pop
adc
fcompl
xchg
push
mov
jb
imul
rcrb
mov
pop
ljmp
call
mov
cmp
or
addr16
push
pop
shl
loope
xor
push
mov
sahf
xchg
stos
push
xchg
and
jecxz
xchg
inc
mov
jns
dec
or
lahf
and
test
push
xchg
xor
pop
fmul
cmpsb
xchg
insb
mov
xchg
push
mov
ds
pusha
in
sub
loopne
push
ss
faddl
inc
inc
mov
mov
mov
inc
call
pop
cmpsl
sti
addr16
fxch
and
cld
lcall
push
mov
pop
xchg
dec
push
mov
test
xchg
jmp
or
mov
xchg
add
nop
mov
sbb
pop
jb
enter
add
or
addb
mov
push
xchg
idivl
data16
mov
cmpsl
xlat
test
pusha
popf
test
and
cmc
aas
movsb
outsb
stc
cmpb
pop
push
int
push
mov
and
xchg
out
sub
mov
cld
stos
shlb
sbb
mov
and
adcl
pop
inc
imul
dec
daa
mov
xchg
add
fsubs
cld
and
inc
mov
dec
jnp
xor
xor
cmp
add
jb
pop
pop
lret
test
cmpb
and
adcl
loopne
jge
and
scas
pop
out
out
xorb
test
mov
and
and
icebp
xchg
fnsave
sbb
aaa
aas
leave
adc
leave
dec
lret
xor
inc
int
pop
btc
lods
jg
jl
jae
pop
test
add
fistpll
cmp
push
pop
mov
ja
in
or
mov
sbb
pop
push
sub
mov
pop
inc
mov
aaa
push
cmc
and
pop
inc
test
jg
inc
dec
dec
loope
sub
pop
ret
pop
mov
js
push
cmp
xchg
mov
addr16
xchg
and
adcb
dec
add
add
fnstenv
jae
mov
cmpl
inc
mov
lahf
add
lock
leave
cmp
lcall
scas
outsl
inc
cmc
ret
pop
sub
sub
mov
cmp
mov
popf
cmp
mov
jne
shll
jne
addl
fadds
push
and
sbb
pop
inc
mov
pop
dec
in
imul
mov
filds
lods
add
movsl
das
daa
adc
mov
jge
or
push
ret
add
jp
ja
xchg
out
pop
jecxz
or
jecxz,pn
in
lock
das
repz
jmp
call
faddl
es
or
sar
inc
inc
and
or
xor
mov
aas
sub
aaa
push
pop
mov
bound
sahf
cmpsl
jno
pop
push
sti
add
sbb
push
ret
mov
je
dec
inc
jecxz
mov
dec
inc
test
imul
and
cmpsb
sub
lds
adc
bound
fwait
pushf
mov
mov
out
les
in
ja
fwait
sub
pop
fstps
mov
or
mov
lcall
mov
inc
or
mov
xchg
push
mov
push
test
lret
add
mov
or
sbb
mov
xchg
inc
loope
mov
xchg
jecxz
push
xchg
adcb
mov
mov
psubsb
xchg
cmp
mov
jge
movsb
pmaxsw
ljmp
leave
sub
ds
mov
test
enter
dec
mov
cmc
ret
mov
push
cmpsl
popf
cltd
add
pop
cmp
stos
mov
adc
das
daa
je
and
mov
cmp
scas
sbb
sahf
ret
cmp
outsl
shrb
cmp
adc
mov
sbb
add
stc
mov
xchg
push
insl
cmp
add
or
push
into
sub
xchg
fcmovu
ja
loopne
xor
mov
cmp
mov
dec
pop
mov
or
jl
xor
adc
pop
in
into
mov
pop
lcall
and
dec
push
cmp
jge
pop
mov
jb
cs
out
pushf
cltd
push
xchg
ja
or
add
xchg
jle
cmp
dec
xlat
shrb
nop
jno
cmc
adc
mov
cwtl
insb
movsb
sub
jb
out
xorb
sub
and
addr16
ret
dec
rcr
jnp
fisttpl
arpl
and
das
xchg
addl
xchg
xor
cmpb
inc
cwtl
push
sbbb
ja
mov
xchg
aad
inc
aaa
xlat
bswap
out
fisubl
dec
scas
xor
aaa
int
jnp
in
popf
add
pop
and
sbb
dec
test
cmc
ret
leave
aad
imul
scas
jp
xchg
ja
mov
xchg
rcll
loop
lods
nop
adc
cmp
adcl
inc
faddl
cmp
push
fcomps
xor
pop
adc
ret
lds
jmp
cmpsl
js
or
cwtl
dec
cmp
push
xchg
jno
fdivr
rol
jp
pop
mov
mov
xchg
jne
jp
dec
mov
out
adc
jl
shlb
sub
mov
inc
push
xchg
insl
imul
adc
jle
loopne
cmc
shl
add
adc
orb
push
addl
dec
adc
rcll
lahf
int3
cmovs
xor
sub
dec
test
cmp
mov
push
fsts
ret
pop
mov
push
lgdtl
push
inc
mov
loope
loop
push
mov
mov
inc
fldl
dec
cli
mov
jge
inc
int3
daa
shl
stos
inc
push
fiadds
icebp
ret
addb
cld
dec
push
pop
popa
sub
pop
jno
cmp
pop
mov
scas
popa
dec
pop
js
fdivs
sub
popf
inc
movsb
and
lahf
lcall
xchg
xchg
cwtl
sbb
sub
cmp
xchg
add
rol
sub
sahf
hlt
mov
rorl
jbe
adc
inc
rcr
dec
xor
fstps
pop
or
sahf
add
orb
pop
negb
shrl
fisttps
repz
out
or
xchg
add
sub
jge
push
loop
push
orb
push
or
adc
xchg
stos
test
or
mov
subb
pushl
sub
iret
push
cltd
jnp
outsl
sub
imul
sub
xor
inc
add
loope
push
mov
sbb
jp
adc
roll
cmp
push
in
ret
movsl
das
xor
mov
mov
data16
jecxz
add
sti
movsl
out
mov
fisttps
jge
sbbb
lods
xlat
aam
test
cmp
pop
dec
mov
cmc
pop
andl
sbb
lret
test
push
mov
cmp
pop
sbb
jp
mov
pop
xchg
outsb
popa
inc
std
jbe
and
lea
xchg
xor
jmp
out
sub
cmp
pop
push
popa
mov
js
daa
jb
adc
movl
pushf
cmp
xchg
movsl
adc
inc
pop
movsb
ja
adc
and
andb
cmp
mov
ret
mov
cmpsl
rcrl
cmp
mov
xchg
out
xorl
popa
sbb
inc
mov
fwait
cmpsl
add
in
leave
outsb
xor
or
push
dec
inc
lea
pop
inc
jno
add
js
cmp
sub
out
xor
or
fadd
and
xchg
jae
mov
in
sub
and
cmp
cmp
push
lret
or
lret
lret
push
xchg
adc
add
je
pop
mov
fidivl
push
jg
lea
sbb
sbb
pusha
js
add
cmc
add
lcall
in
inc
jo
xchg
jl
orb
rcl
mov
jae
xchg
pusha
mov
jge
jecxz
and
push
push
pushf
movl
ljmp
add
dec
adc
mov
lcall
mull
cmp
lock
sbb
lea
pop
cmpsl
imul
mov
mov
xcrypt-ofb
cmpsl
scas
cwtl
lret
cmc
add
mov
and
loop
or
repz
sbb
clc
xchg
iret
jge
out
imul
ljmp
push
ret
sub
jne
mov
fs
cmp
xorl
push
sbb
enter
imulb
adcb
popa
in
in
jl
push
add
rol
pop
stc
xchg
or
mov
out
nop
sbbl
fildl
cmp
test
mov
and
inc
roll
cli
or
nop
and
xchg
subb
pusha
pushf
pop
and
add
or
mov
lret
lret
repz
fucomp
imul
or
or
test
test
push
ret
pop
sub
repnz
cmp
std
cmp
lea
xchg
dec
loop
xchg
dec
sbb
in
lods
pop
add
mov
cmpsb
lret
daa
add
mov
add
or
add
sub
jb
xchg
and
or
pop
int3
sub
mov
cwtl
cmp
mov
sbb
lods
sbb
jl
sub
pusha
aad
pop
dec
mov
pop
or
xor
ss
pop
pusha
or
push
jg
cld
xchg
dec
sub
outsl
subb
cli
fnstcw
inc
mov
je
mov
add
addr16
loope
arpl
push
mov
cmp
inc
imul
lods
test
inc
jg
mov
fisubs
add
insb
lahf
les
lock
push
movsl
sub
jp
add
cmc
pop
push
push
stos
cmpsb
testb
jp
lret
push
sbb
and
adc
lcall
ret
jnp
movsb
lods
jbe
add
jge
in
stc
mov
cmc
or
sbb
xchg
inc
sub
push
pop
add
call
subl
rorl
sbb
cmpsl
jbe
repz
jns
xor
aam
jecxz
pop
add
pop
cmp
int
stos
shl
pusha
ja
cmp
inc
pop
pop
xchg
mov
repnz
adc
loop
in
mov
pop
lahf
addr16
punpckldq
add
ljmp
pop
jl
jne
aaa
cli
or
jno
lods
lahf
out
jno
addr16
xchg
addr16
js
out
mov
xor
or
sbbb
pop
mov
jae
rcrb
adcl
mull
orl
mov
dec
or
push
andl
stos
cmpl
and
push
fistpll
and
addl
inc
mov
iret
jno
and
jp
inc
ret
mov
push
loopne
fnstsw
mov
mov
xor
jnp
int
inc
cwtl
out
shll
push
loop
outsl
pop
gs
jo
ss
pop
pop
fisubl
out
clc
xor
mov
ficoms
aad
mov
lcall
xlat
mov
push
mov
push
add
pop
insb
xchg
sub
outsl
push
ficoml
push
aaa
cmpsl
cltd
iret
stos
adc
adc
fdivrs
fimull
jne
sub
setnp
lods
outsb
add
aad
sub
iret
mov
aas
add
daa
push
dec
jno
sbbb
inc
adc
nop
mov
inc
pop
jl
popf
repnz
jo
mov
pusha
push
addr16
sbb
or
lret
aam
or
js
gs
sarl
cmp
mov
ds
les
mov
xchg
movl
orl
and
movl
cmpb
subb
outsl
add
fiaddl
adc
lcall
pusha
jmp
sti
sahf
mov
lods
ret
lcall
adc
xor
jne
mov
pop
mov
in
cmp
movsl
cmpsl
mov
fidivrs
aad
jae
dec
xor
pushf
jge
and
aam
loop
dec
fcmovb
push
pop
jb
cld
pop
jne
adc
mov
cwtl
aam
jge
inc
pop
mov
sbb
push
inc
incb
mov
roll
icebp
fwait
add
aaa
loope
cli
jno
sub
jo
mov
fdiv
mov
jno
mov
fwait
sub
sti
push
outsb
sbb
sub
and
int
push
mov
pop
dec
xchg
add
cli
leave
popa
or
sahf
mov
pop
jo
cltd
fldenv
arpl
loop
ret
xorl
jnp
aaa
call
dec
cmpsl
lahf
stc
out
or
lcall
adc
sbb
cmp
das
int3
in
add
fsub
mov
cltd
mov
add
xor
sbb
or
sub
aaa
ljmp
andl
lret
mov
xchg
icebp
mov
xchg
add
fistps
ror
adc
sbb
gs
and
ds
and
lcall
ja
das
pop
push
mov
iret
or
jle
sar
xchg
and
cmp
shll
iret
lea
mov
filds
push
into
mov
lretw
mov
cmp
popf
mov
push
cmp
jo
xlat
mov
adc
js
push
cmp
sbb
sbbb
mov
bound
clc
cmp
jno
adc
dec
dec
sub
mov
push
pusha
cmp
lds
aad
push
inc
jge
loop
pop
clc
pop
movsl
pop
dec
out
imul
loopne
cltd
outsl
popa
pushf
dec
push
xchg
push
fimull
loope
imul
or
lock
mov
xchg
mov
cltd
sbbl
jnp
in
mov
mov
icebp
mov
adc
push
xchg
cmc
aaa
imul
fwait
add
push
fists
add
push
mov
arpl
js
out
mov
push
clc
add
dec
iret
lret
jbe
ja
test
mov
push
fdivl
fstpt
push
or
daa
push
dec
cmc
mov
push
lcall
pop
push
decb
sbb
adc
cwtl
lods
in
push
icebp
or
andl
adc
fldt
push
sbb
lea
cmpsl
pop
fisttpl
dec
cmp
and
sbbl
mov
xorl
mov
lock
loope
js
mov
and
int3
shl
pop
mov
add
je
out
cltd
cmp
repz
mov
mov
xchg
aas
addr16
cmp
xchg
mov
test
push
jecxz
loopne
push
and
outsb
std
adc
fiadds
mov
jp
es
xchg
dec
stos
or
add
xor
or
pop
cmpsl
and
mov
out
aam
xchg
cmpl
test
add
addr16
pop
mov
ljmp
into
or
jmp
lret
cmc
out
add
iret
mov
inc
arpl
shll
push
push
dec
mov
jge,pn
mov
out
lods
xchg
mov
shrb
mov
daa
add
jno
add
fwait
pusha
dec
pop
lret
les
enter
mov
mov
shl
das
xor
or
sbb
lcall
cltd
inc
jo
repz
lcall
outsl
cs
ficoms
test
jbe
iret
ljmp
shll
mov
fstps
idivl
mov
arpl
or
and
mov
push
adc
push
fucomip
fldcw
cld
or
cmp
mov
cmp
aam
out
pop
inc
jl
loop
dec
sbb
pmullw
pop
ficomps
mov
testl
mov
cmpl
les
sahf
cltd
mov
outsl
pop
mov
dec
sub
mov
pop
pusha
test
mov
cld
jo
or
shrb
daa
repz
fdivs
inc
mov
cmp
mov
shlb
mov
and
icebp
mov
and
push
fwait
xchg
jae
repz
add
xorb
invd
ffree
rep
ja
mov
push
pop
jae
sub
cmp
mov
push
xchg
leave
lret
lods
or
adc
mov
xor
xor
enter
mov
sub
in
add
rcrl
out
and
jb
or
mov
divl
or
popa
pop
xchg
nop
jns
and
mov
adcb
loop
test
loopne
xor
add
pop
dec
mov
jle
cli
xchg
jp
aad
pushf
mov
or
sub
not
ret
push
lret
xchg
inc
mov
pop
sub
icebp
pop
std
inc
scas
pop
jecxz
add
dec
jl
add
pushf
sub
xorl
in
cmp
lahf
cmpsl
fstpl
mov
fmull
int3
lcall
jno
push
add
or
add
or
mov
psubusb
je
xchg
repnz
cmp
ret
sub
inc
sub
test
les
rorb
mov
adc
fsubs
or
or
or
iret
or
jp
jns
iret
and
mov
and
cwtl
ficoms
jg
xchg
clc
imul
cld
aas
or
sbb
inc
jp
mov
cmp
ret
add
bound
les
je
mov
scas
jge
sbbl
enter
mov
xor
pop
push
icebp
mov
ret
jb
cwtl
popf
add
inc
hlt
mov
push
pusha
add
inc
fldcw
push
les
and
cwtl
cmc
pop
popf
inc
sub
in
add
or
dec
fwait
jg
jbe
or
pusha
iret
fwait
push
movl
in
sti
sub
push
jmp
push
inc
test
sub
inc
jae
notl
adc
jne
pop
and
fs
fwait
sbb
bt
add
ret
outsl
lods
bound
dec
test
in
push
cmpsl
cmpsb
pop
aas
lahf
pop
mov
mov
xchg
fistpl
dec
jl
sbb
push
orl
dec
adc
adc
jge
xor
push
arpl
outsb
or
jno
cmp
ficompl
fsubrs
aad
cmp
sahf
push
mov
adcl
xchg
xchg
mov
fdivrs
int3
outsb
pusha
cli
cmpsl
jns
adc
fcmovbe
imul
pop
movsb
rolb
in
ret
loop
ss
jge
fwait
fs
push
pop
std
cli
sbb
dec
and
pop
aas
sub
xchg
xor
subl
sub
cmp
pop
sbb
icebp
sti
mov
and
addl
and
xchg
xchg
push
stc
jno
xchg
xor
bound
cmp
and
jnp
lret
jns
push
mov
test
fistpl
mov
jae
push
add
fildl
stc
aaa
pop
jo
cmp
add
mov
addb
jno
aas
les
add
xchg
inc
xchg
and
jne
jb
out
push
sahf
xchg
cmpxchg
loope
or
jnp
inc
cmp
pop
adc
jecxz
pop
loop
cmpb
cmp
fwait
pop
mov
and
xor
in
mov
xor
out
dec
xchg
xchg
test
jns
repz
subl
pop
cmp
sub
add
scas
push
filds
mov
add
movsl
sub
movb
je
jb
sub
lret
add
and
js
pop
cmp
mov
cli
nop
push
mov
mov
fs
or
mov
cmp
divps
mov
test
mov
sbb
vcvttps2dq
aam
sarl
cmpsb
jl
jle
jno
scas
daa
mov
inc
push
mov
xchg
call
stos
mov
cli
getsec
mov
fs
bound
cmp
test
inc
ja
test
cltd
repz
adc
aaa
mov
and
xor
lcall
mov
or
in
mov
mov
fs
repnz
xchg
dec
std
daa
es
imul
push
jg
jl
sbb
jp
mov
daa
xchg
nop
mov
pop
cmpsb
pusha
test
std
cwtl
push
mov
test
in
popa
lea
mull
push
mov
test
pop
inc
and
test
xchg
jo
jge
cmp
outsl
mov
mov
xchg
mov
mov
push
mov
sbb
adc
and
jns
sti
cwtl
inc
xor
popa
xchg
in
repnz
and
stos
outsb
inc
push
push
mov
and
addr16
cmp
inc
cmp
add
inc
sub
adc
into
inc
and
or
adc
dec
roll
dec
mov
into
xor
push
dec
int
ret
imul
hlt
repz
xchg
dec
jge
rcr
adc
mov
cwtl
xchg
loopne
cld
inc
dec
ja
imul
shlb
xchg
test
movsb
pop
aaa
jg
pop
cmpsl
push
jb
sbbb
repnz
adc
add
dec
sarl
fisubrs
daa
xlat
test
xchg
sbb
jb
int
int3
push
shll
cli
bound
mov
or
dec
push
fimull
lods
jne
in
jmp
mov
push
dec
mov
xor
mov
xor
daa
add
loope
scas
xor
pop
dec
or
sarb
sbb
push
mov
sub
fsubr
das
dec
jb
mov
jno
pop
mov
stc
into
cwtl
push
in
ret
shll
pop
xchg
inc
bound
cltd
dec
orl
push
int
in
mov
sub
rcrl
je
daa
pop
xchg
js
pop
fs
push
pop
into
lret
pop
jae
pop
lahf
push
or
pop
gs
or
je
pop
push
add
cmp
testb
lods
stos
sub
les
inc
int3
mov
jecxz
ss
dec
lcall
xchg
and
pop
repnz
mov
out
adc
lahf
repz
mov
push
push
pusha
lods
mov
bound
mov
jmp
mov
xchg
pop
test
leave
gs
cltd
in
pop
outsl
inc
push
push
daa
lea
stos
push
push
mov
cmc
test
lea
int
mov
shrl
daa
js
jmp
mov
dec
jnp
movsl
cmc
xchg
outsb
in
jne
cmp
daa
enter
jmp
push
or
insb
vpaddw
mov
pop
lea
je
dec
daa
jb
cmpsb
xchg
dec
aad
xchg
repnz
aaa
rol
ficompl
adc
jl
xor
ret
lods
lods
xchg
aad
or
sbb
xor
lcall
and
adc
push
cmpl
gs
push
sbb
clc
repnz
filds
mov
mov
mov
mov
bound
or
pop
push
add
mov
jp
aaa
test
jge
push
mov
aas
mov
fistpl
icebp
insb
lahf
add
aaa
pop
sbb
les
stos
xchg
push
and
cwtl
fildl
addl
xchg
and
cmp
and
popl
rolb
push
out
pop
inc
and
inc
or
stc
inc
dec
or
dec
test
cltd
es
mov
addr16
mov
sbbb
mov
jecxz
cmp
test
mov
xchg
repnz
in
dec
xchg
push
or
sbb
sahf
ficomps
cwtl
pop
sbb
xchg
sbb
push
bound
rcrb
bndldx
push
aaa
pop
pusha
or
fisubl
ret
into
scas
jl
add
es
fwait
pop
cmc
cmpl
add
sahf
mov
xchg
inc
lcall
lds
sahf
in
sub
dec
test
inc
xchg
jle
cmc
mov
dec
inc
test
out
adc
xchg
cwtl
jecxz
sbb
cmp
fs
stc
cmpsl
das
mov
cs
jmp
es
arpl
inc
mov
sarl
incb
sub
mov
push
movl
jl
jp
inc
int
cmp
sub
in
cmpsb
fsubrl
dec
push
fldt
cltd
sub
das
sbb
cmp
jecxz
add
leave
outsl
mov
faddl
adc
xor
mov
fimull
daa
mov
sbb
ret
xchg
ja
arpl
icebp
mov
imul
or
lock
xchg
incb
rolb
add
fwait
and
dec
push
fbstp
lcall
addl
adc
jb
dec
scas
or
xchg
lea
sbb
xchg
test
sti
rcrl
scas
rcll
adc
mov
or
lahf
mov
jns
and
rorl
and
cmc
fstpt
xor
mov
add
jp
and
xorps
push
pop
scas
pop
arpl
incl
cmp
sahf
push
test
cmpl
mov
add
inc
cmc
sbbl
int3
cmp
jnp
movsb
dec
push
jge
stc
out
xor
lcall
movsb
arpl
fdivrs
jg
sbb
js
enter
mov
dec
outsl
push
outsl
cmpsb
ljmp
test
xor
aas
mov
vpavgw
mov
pop
sbb
mov
inc
add
scas
dec
pusha
push
rcrl
test
push
test
push
inc
sub
lock
shll
mov
hlt
push
jle
and
inc
pop
gs
addb
mov
xchg
mov
add
int
mov
jo
cmp
ds
push
mov
rcll
in
push
pandn
jmp
in
adc
stc
jmp
ficoms
mov
xchg
aaa
in
fisubrs
push
adc
or
dec
enter
mov
fdivrp
sub
mov
pop
loope
les
lea
loop
popa
xchg
pop
mov
lock
xor
mov
fwait
cmp
push
push
lcall
adc
ds
fxch
push
icebp
xchg
loopne
mov
lea
test
cmp
scas
jno
movl
dec
adc
fsubs
call
cwtl
ljmp
sub
sub
hlt
or
fidivrl
add
stc
inc
sub
addr16
lret
mov
pop
sub
in
jg
test
cmp
xor
insb
cli
mov
mov
cmp
fbstp
and
pop
fcoms
cmp
popf
popa
push
sub
or
lret
gs
in
jnp
int3
data16
and
lds
lds
out
adc
add
jg
mov
and
mov
xor
out
adc
repz
inc
jl
push
and
mov
std
push
xchg
fwait
sbb
adc
mov
fs
adc
lahf
and
mov
or
arpl
ficoms
push
daa
scas
push
pushf
lcall
dec
pop
daa
les
xor
jne
jb
setae
lahf
lcall
pop
jo
sbbl
push
pop
pop
add
mov
or
or
cltd
ja
daa
sahf
mov
sbb
in
push
daa
sub
pop
mov
arpl
xchg
adc
mov
cmp
mov
adc
repz
repnz
pop
sbb
xor
mov
hlt
add
adc
pop
and
xchg
and
shrl
pushf
mov
or
frstor
mov
jle
add
out
js
mov
aam
pop
fwait
mov
fistpll
dec
mov
js
mov
adcb
out
xchg
add
jecxz
mov
xchg
data16
sbb
inc
or
mov
jbe
push
stos
dec
loope
xorl
sbb
sbbb
fwait
xlat
wrmsr
xchg
inc
out
jge
in
sub
out
aaa
jne
sub
cmp
or
push
push
clc
fsubrp
lods
mov
fnstcw
jmp
outsl
cmpsl
mov
stc
ret
subb
aaa
out
xchg
call
cli
imul
fstpl
pop
sti
cmp
addr16
add
test
arpl
dec
cld
leave
and
pop
ja
mov
mov
hlt
or
pop
xchg
popa
adc
fs
mov
sub
mov
test
fcmovu
lea
jp
inc
cwtl
pop
aad
sub
inc
adc
test
cmpb
xchg
push
push
or
jb
addr16
jo
addr16
push
inc
insl
bound
out
fcoms
sub
scas
mov
pop
jecxz
pop
mov
ss
pop
inc
or
push
xlat
int
icebp
xchg
dec
adcl
outsl
aas
or
mov
or
ss
ret
or
ret
loop
xchg
xor
pop
insb
and
shl
adc
push
es
mov
sbb
pop
cmp
roll
inc
insl
lret
sti
sbb
mov
mov
sbb
lods
cmpsb
iret
xchg
mov
dec
adc
iret
arpl
jns
inc
push
std
add
mov
mov
jmp
out
jno
cmp
sar
clc
cmp
cwtl
movsb
mov
inc
and
pushf
mov
sub
cs
sbb
lcall
mov
cmp
and
fcoml
add
js
and
pop
les
outsl
jle
xlat
adc
dec
xchg
mov
or
leave
inc
mov
jp
aaa
out
adc
ficompl
inc
aaa
inc
aas
into
add
jae
cli
add
adc
cmc
mov
mul
imul
mov
sbb
sbb
and
test
fdivrl
pop
and
jge
lcall
fcmovnbe
in
sahf
aam
lea
add
mov
dec
sub
popa
movsl
stos
jne
xchg
sar
add
orb
add
je
lret
dec
test
les
inc
movsb
mov
sbbb
inc
sub
jge
xchg
fcompl
scas
sti
cwtl
cltd
test
xchg
in
outsb
pushf
sbb
mov
cld
sbb
or
loop
cmp
pop
push
jns
cmp
mov
rep
dec
mov
data16
lock
mov
adc
cli
loope
jge
mov
mov
addb
pop
lods
mov
inc
add
push
pop
bound
sub
repnz
xchg
push
ret
out
ret
js
push
jmp
or
jl
cmp
test
add
lock
rorb
or
inc
mov
push
pop
ja
lahf
fists
xorl
dec
or
add
addl
shll
pusha
sbb
fisubs
roll
out
mov
xor
mov
insb
or
xor
mov
xchg
xor
and
test
cs
ss
mov
out
insl
jge
sub
stos
ja
out
dec
dec
push
cwtl
inc
filds
repz
fdiv
dec
cmp
mov
out
fdivrs
leave
adc
xchg
pop
scas
test
daa
fwait
and
aaa
xchg
fistps
sbb
mov
xchg
mov
stc
adc
fwait
jl
and
adc
dec
flds
pop
add
jns
inc
mov
mov
fninit
add
inc
mov
and
scas
adc
mov
ljmp
adc
xchg
xchg
jno
mov
push
adcb
int3
cmp
sbb
les
sub
mov
addl
imul
movsl
xorb
adc
and
dec
sbb
pop
mov
test
movsb
call
mov
sar
jecxz
cwtl
iret
ret
xor
pop
addr16
shlb
pop
push
fbld
push
out
push
mov
ret
cmp
inc
mov
sub
sub
sub
xlat
fadd
mov
mov
pop
mov
and
mov
aas
pop
inc
outsb
roll
push
ret
xchg
inc
jmp
mov
sub
test
icebp
out
mov
push
push
inc
aam
lods
mov
je
jb
scas
sbb
loope
mov
xchg
pop
sub
sbb
sub
jl
and
clc
push
inc
insl
int
mov
jb
or
lahf
arpl
push
inc
imul
in
pop
push
cltd
stc
fcomps
lods
fbstp
flds
and
push
pop
loop
inc
data16
enter
ret
imul
add
sub
inc
clc
adc
pop
movsb
cmpsl
sbbl
imul
mov
jmp
sbb
addr16
lahf
sub
jle
mov
dec
add
sub
orl
pop
popf
jmp
or
sti
cltd
in
and
mov
cltd
out
xchg
roll
push
mov
adc
jmp
sbb
fisubrl
jae
rorl
or
mov
call
dec
or
jp
and
pusha
mov
les
xchg
lea
ljmp
or
xor
dec
adc
xor
call
mov
add
call
mov
xchg
pop
pop
clc
mov
mov
push
mov
pushf
iret
stc
iret
push
ljmp
ja
jbe
inc
fnstcw
mov
push
push
inc
add
aaa
mov
fldcw
test
add
mov
sbbl
insl
xchg
outsb
aaa
imul
mov
push
sbb
jl
jmp
mov
push
cmp
jns
aas
cmp
rcr
pop
fbld
cmp
sbb
aad
mov
jns
jmp
movsb
mov
roll
jecxz
bound
pop
xchg
repz
mov
and
adc
push
fdivrl
mov
lea
lahf
das
pop
int
lret
int3
fdivrl
cmp
mov
das
test
jl
cmpsb
scas
fs
lcall
roll
jae
stc
fisttpl
mov
cli
dec
and
add
and
sti
fldcw
fwait
out
or
cmc
fldenv
lret
jp
mov
rep
xlat
sub
test
ss
mov
cmp
fsubs
dec
cmc
scas
shlb
sub
xchg
test
pop
sbb
or
mov
sbb
push
jmp
push
out
xchg
cmpsb
push
mov
sub
and
xor
inc
cli
mov
push
cmp
fistpl
sbb
sarb
test
insb
in
push
mov
inc
enter
sub
cmp
arpl
dec
dec
movsl
aam
mov
add
jecxz
pusha
in
addr16
ja
jmp
lea
testl
jl
cmp
and
xor
pop
sarl
subb
cmp
enter
fdivrs
sub
mov
scas
and
xor
and
pop
lahf
test
inc
xchg
jge
sub
in
jns
sarl
fwait
pushl
filds
lret
int3
addr16
mov
test
xor
aad
test
inc
ja
adc
cmp
and
lcall
push
xchg
fidivs
sub
cmp
mov
outsl
xchg
ret
andb
add
or
pop
xchg
rorl
js
dec
push
aaa
xchg
cs
cwtl
scas
frstor
cmp
jle
pop
into
repnz
mov
mov
add
aaa
cmp
sub
sbb
sub
aas
inc
les
xchg
inc
gs
sbbl
test
push
arpl
pop
jecxz
sub
je
dec
push
push
pop
and
frstor
xchg
mov
lds
xor
dec
dec
jne
push
lret
sbb
aas
sbb
daa
lds
mov
xchg
jns
addb
sbb
xor
and
stos
mov
aas
bound
sbb
pop
xchg
cltd
stc
fwait
cmp
xchg
mov
inc
inc
mov
out
rclb
push
sbb
add
sti
les
inc
xor
mov
mov
sub
xchg
in
xchg
inc
cmp
into
push
out
out
ficomps
add
pop
mov
imul
add
fs
or
arpl
outsl
add
push
push
add
adc
lahf
je
pushf
sub
push
add
pop
push
lcall
aas
lcall
test
jbe
add
test
cmpsb
outsl
loop
outsl
jmp
lcall
jmp
adc
sub
scas
mov
test
ret
fildll
jge
add
inc
mov
inc
jnp
jno
div
xor
jo
incb
repnz
xor
cwtl
push
test
xchg
cmp
sbb
pop
mov
inc
adc
stc
xchg
clc
cmp
stos
lock
jae
cmpb
xor
js
dec
aad
xchg
mov
and
cmp
push
out
adc
imul
pusha
and
lcall
lret
mull
fdivr
push
aas
test
push
mov
dec
rcrl
daa
idivl
leave
test
jb
testl
lcall
xchg
lcall
cli
adc
gs
bound
jge
cwtl
repnz
or
into
fnstcw
js
out
adc
pop
lahf
pop
xor
jne
mov
lahf
movsb
or
bound
adc
mov
adc
and
mov
mov
cld
out
pop
pop
mov
outsb
hlt
das
jl
jmp
mov
popa
andl
xchg
mov
fs
popf
add
add
inc
test
xchg
xor
leave
sub
adc
xchg
pop
test
pop
lock
xor
mov
fwait
clc
mov
mov
stos
cmp
in
xchg
pop
shll
les
mov
dec
cmp
cmova
jb
mov
jns
das
cmp
push
mov
and
daa
mov
push
mov
push
sbb
or
jg
push
inc
inc
pop
arpl
xchg
ja
adc
fcomps
cmpsl
and
xchg
ret
mov
and
push
push
lods
sub
pop
xchg
enter
push
sub
cltd
lea
pop
pop
jecxz
scas
lahf
xchg
and
cwtl
adc
ja
inc
vpmacsww
addr16
aaa
mov
pop
adc
xchg
gs
xchg
negb
mov
inc
inc
aas
pop
mov
or
test
mov
mov
jae
sahf
les
xchg
rclb
add
mov
pusha
jo
add
jb
out
into
enter
xchg
lds
pop
mov
and
cmpsb
aam
roll
and
dec
sub
addr16
push
dec
fbstp
test
cmp
pop
out
push
add
or
mov
test
mov
pop
cmp
adc
cwtl
lds
dec
negb
dec
shll
icebp
add
inc
loope
mov
xlat
hlt
push
insb
aas
push
scas
jle
and
mov
inc
add
ficoms
out
push
jbe
in
int
scas
push
push
jecxz
fisubrs
jno
mov
daa
imull
hlt
js
inc
or
xor
fistpll
inc
mov
call
jns
shl
pusha
xchg
mov
std
mov
call
inc
ret
out
sub
pop
xor
stos
dec
push
pop
push
jge
test
ret
lcall
leave
or
and
mov
inc
mull
inc
fidivs
push
mov
add
push
fs
pop
add
lock
in
mov
add
jae
icebp
pop
mov
dec
add
loop
xor
cmp
mov
xlat
faddp
jbe
push
pop
pop
pop
pop
mov
not
push
repz
push
cwtl
xchg
ret
and
lcall
pop
cld
fbld
pusha
inc
xchg
cltd
or
mov
and
pop
mov
mov
fdivp
push
push
idivb
sbb
mov
fdivs
dec
ret
pop
xchg
pusha
lahf
rcll
xchg
dec
or
xchg
std
pop
shll
xchg
mov
add
xlat
sub
test
add
mov
in
jge
shlb
adc
aas
xchg
mov
mov
pop
inc
inc
mov
cmp
xchg
mov
ret
or
repnz
xchg
jae
cltd
cmp
daa
ja
mov
mov
xchg
fdivs
xchg
xchg
imul
push
shl
imul
incl
out
inc
popf
je
test
in
xchg
lcallw
addl
mov
lods
aas
sub
adc
mov
pop
push
and
dec
fst
xchg
fisubs
add
mov
stos
push
pop
mov
xor
repnz
xchg
mov
fmul
loop
dec
fst
and
lock
sub
sub
add
mov
push
add
notl
fwait
push
inc
jecxz
roll
loopne
insb
xor
pop
test
nop
mov
and
xchg
mov
or
push
inc
lock
bound
movsl
test
out
jo
sarl
inc
mov
testl
xchg
pusha
repz
xchg
inc
mov
out
arpl
inc
jl
ret
aad
aas
and
aad
lea
xchg
add
in
adc
lds
pop
loop
add
dec
adc
dec
adc
or
les
movsl
xchg
jns
stos
and
mov
push
push
adcb
add
fiaddl
pop
jp,pn
pop
sbb
lahf
push
adc
fs
jb
cmove
dec
lcall
sub
inc
das
rcl
insl
xor
imul
test
and
jb
jg
stos
mov
jle
test
mov
jb
mov
out
mov
pop
dec
arpl
neg
dec
pop
sbb
lods
sub
orl
push
inc
in
cmp
adcb
cltd
test
dec
mov
fdivr
rclb
pushf
inc
xchg
mov
adc
adc
push
bound
orb
xchg
xorl
jp
pop
cmp
xchg
int3
jl
sub
popf
sbbb
mov
jle
cmp
and
call
lods
data16
pop
push
and
aad
xchg
hlt
push
lcall
rol
and
movl
test
sbb
addl
leave
adc
jno
in
loop
loope
and
sbb
sub
arpl
lea
mov
jnp
fucomp
jecxz
cmp
repnz
add
and
push
adc
mov
push
popf
mov
fisttpll
out
mov
int3
or
inc
addr16
xor
imul
add
and
inc
lahf
mov
dec
iret
mov
push
mov
cltd
xchg
xchg
dec
test
sahf
and
orb
pop
cld
and
mov
jp
das
test
xorl
repnz
stos
cltd
xchg
shll
clc
ret
faddl
data16
xor
sbb
test
mov
orl
fisttpll
mov
fadds
dec
xorb
negb
jge
scas
sub
dec
test
lahf
movsl
ja
sbb
pop
sbbl
decl
icebp
or
shll
jecxz
in
sbb
or
mov
mov
jns
addb
pop
xchg
popa
insb
fiadds
faddp
xchg
jle
cld
push
pushf
xchg
std
push
dec
dec
ja
push
in
jb
cltd
lret
ficompl
mov
fcoms
bound
jmp
adc
jne
sub
inc
sbb
mov
xchg
inc
xchg
leave
jns
or
andl
imul
sti
inc
sub
adc
bswap
pusha
pop
cmc
lcall
aaa
fdivl
add
lahf
and
push
add
aad
in
sbb
adc
test
cli
jo
aad
pop
pop
push
test
jno
mull
xor
lcall
mov
into
outsl
and
test
mov
sub
repnz
inc
cltd
out
and
push
addr16
popf
and
sub
sti
call
pop
jno
push
nop
aam
popa
pop
shll
xor
xlat
mov
or
pop
loop
jmp
push
cmp
or
xor
jecxz
dec
mov
negl
lahf
mov
mov
jns
fs
jbe
inc
cmpl
mov
sub
add
lods
add
pop
pop
pop
xchg
pop
xor
xchg
dec
pop
shlb
sbb
push
jge
test
arpl
push
add
sbb
inc
cmp
rcrb
cmp
bound
arpl
cmpsb
rcll
jno
pop
jg
ret
ret
and
leave
repz
aaa
add
mov
imul
sub
stos
sbb
sbb
clc
dec
mov
pop
adc
inc
push
sbb
daa
add
lcall
pop
push
and
dec
add
fstpt
rcll
mov
pop
jo
lret
push
sub
repz
lcall
xor
orb
dec
mov
ret
pop
test
sub
jno
dec
test
push
into
ss
scas
mov
mov
test
sbbb
jg
pop
adc
add
and
repnz
lcall
sbb
frstor
ret
xchg
jne
test
push
lea
adc
fwait
xlat
mov
adc
jle
ja
mov
test
dec
daa
push
clc
mov
and
xlat
call
xchg
test
popa
ja
daa
ja
xlat
and
xchg
daa
and
repz
pop
and
pop
insl
cwtl
outsb
adc
add
cld
adc
pop
and
iret
push
mov
mov
pop
enter
in
cli
inc
lcall
fwait
pop
test
scas
pop
aaa
xchg
aaa
inc
aad
das
punpckldq
sub
out
push
inc
clc
dec
fldl
jecxz
add
xor
loope
and
push
sub
outsb
insb
or
push
aaa
mov
pop
out
aam
fsts
push
cwtl
in
push
out
push
clc
jp
aam
movsb
out
push
loop
pop
mov
aad
xlat
sbb
imul
pop
push
iret
mov
sbb
lock
cmp
test
test
jl
jecxz
pusha
out
loop
mov
mov
mov
and
aas
pop
jae
push
lds
cmc
pop
stc
ss
imul
dec
xor
js
ret
sbb
imul
pop
ljmp
inc
pop
xchg
es
xlat
mov
in
ret
xor
loope
fistpll
fdivrl
movb
pop
adc
ret
mov
cmp
cmp
sti
and
int
arpl
out
pop
mov
sub
mov
ja
inc
gs
sbb
fidivrs
cwtl
mov
lock
lcall
add
test
test
fidivrl
repnz
jb
mov
sbb
jb
xor
add
mov
or
cmp
push
pop
mov
bnd
sub
push
jo
je
es
inc
outsl
lods
addl
test
icebp
fstps
push
aam
fs
divb
adc
pop
add
addr16
xorb
xor
and
push
jnp
push
addr16
add
dec
inc
cmpsb
add
and
mov
pop
xchg
cmp
jecxz
lret
mov
push
out
adc
mov
mov
xor
mov
or
jnp
jo
test
repz
dec
mov
mov
pop
xchg
and
pop
pop
scas
daa
je
adc
and
aad
mov
dec
pushf
mov
addr16
addb
incb
mov
test
pusha
jnp
sti
or
mov
cmp
mov
pop
sbb
add
sub
dec
mov
andb
dec
push
aad
jecxz
add
mov
fcomps
jmp
setle
test
pop
sub
je
lcall
fwait
xorb
adc
out
addr16
sbbl
adc
cmp
jge
pop
lahf
add
xlat
mov
adc
test
gs
pushf
mov
loop
loopw
xor
sub
orl
inc
mov
mov
fsts
int3
out
push
pop
in
jg
test
fwait
lahf
scas
out
outsb
push
daa
test
add
cltd
jb
test
imul
push
jbe
pop
mov
mov
fnstcw
and
fwait
rcll
or
and
scas
cmc
in
jnp
pop
test
and
jns
loope
mov
xor
xorb
xorb
inc
sbb
aas
mov
jle
or
push
add
in
and
loope
pusha
add
jge
sub
jecxz
in
push
dec
mov
and
ja
clc
aam
add
add
addr16
imul
dec
mov
pop
mov
imul
lds
push
addl
sbb
push
cmp
mov
inc
push
and
mov
ljmp
and
inc
repz
xlat
scas
mov
jns
jge
addr16
sub
push
dec
inc
add
or
add
inc
repnz
push
inc
out
adc
ret
mov
push
xchg
icebp
pop
sub
jnp
lds
cmc
mov
xlat
in
lret
jbe
popa
fadds
add
inc
les
scas
in
scas
jl
cli
test
mov
mov
or
aas
or
pusha
outsl
fsts
iret
jmp
pop
cld
jbe
or
inc
adcl
aaa
jecxz
push
loope
arpl
adc
xchg
rcr
arpl
xor
cmp
dec
and
xor
mov
mov
cmc
sti
mov
jb
or
cltd
dec
add
pop
xor
push
in
xchg
mov
movsl
in
fld
loop
outsl
pop
or
or
mov
jg
pop
pop
or
add
lahf
and
or
add
adc
xorb
push
mov
cmp
jmp
cmp
xchg
data16
inc
inc
je
nop
jmp
pop
leave
jecxz
inc
push
aad
rcll
fsubs
push
into
popa
pop
push
sbb
roll
add
sbb
jnp
and
out
int
xchg
roll
int3
xchg
jle
fdivrl
mov
test
aas
push
ja
sub
jae
or
jle
lcall
movb
sub
sub
push
cmp
adc
fs
repnz
inc
cmpb
je
bound
add
push
adc
mov
dec
xor
jnp
aas
enter
sbb
inc
xchg
shlb
or
dec
sbb
data16
decl
fldl
mov
cmp
cmc
cmp
push
pusha
int
and
jl
loope
xor
mov
popa
enter
shrl
shrl
xlat
add
push
lahf
cmp
outsb
inc
mov
in
movsl
ja
adc
xchg
xor
jle
aaa
adc
adc
rorl
sub
sbb
test
stos
cltd
test
insb
fimuls
sub
push
dec
pushf
fwait
or
jp
lcall
sbb
lcall
mov
lret
imul
mov
add
and
add
push
in
jne
inc
or
inc
pop
push
arpl
mov
push
cld
mov
orb
push
or
scas
loopne
adc
fisubs
push
or
sub
mov
cmp
add
lret
popa
or
and
mov
mov
fstpt
rorl
xor
das
ja
jb
test
push
ret
mov
mov
and
loope
sub
dec
and
inc
jg
shll
clc
jl
sub
mov
mov
cmpsl
pop
sub
and
test
wbinvd
hlt
leave
lret
mov
xchg
cs
cltd
pop
sbb
pop
mov
dec
lcall
cmp
cmp
rcll
notl
movsb
mov
mov
push
shrb
or
adc
pop
inc
lea
bound
adc
fcoml
icebp
push
in
add
enter
lahf
xor
test
sbb
movsl
loopne
pusha
jecxz
clc
adc
dec
loop
pop
mov
pop
lret
jo
sub
arpl
sub
xchg
adc
loop
or
les
push
or
push
push
fstps
mov
clc
pop
call
ja
sub
jmp
lahf
inc
adc
add
repnz
sbb
shlb
pop
xor
aam
mov
push
roll
out
inc
pop
les
and
jg
xchg
js
lahf
movsb
bound
dec
shlb
mov
pop
mov
loopne
add
mov
xchg
add
lcall
cmpsl
inc
sub
cmp
and
aaa
sarl
xchg
jl
cmpsl
fwait
and
hlt
out
add
lret
cmp
lods
pop
lds
mov
das
mov
or
mov
xchg
jno
mov
mov
enter
or
cmp
inc
imul
sbb
subl
mov
or
leave
pop
cs
int
bound
test
pop
mov
mov
js
fs
jno
lds
int3
mov
inc
jo
les
xor
inc
xchg
cmc
ja
push
repz
stc
push
or
loope
ja
cmp
bound
mov
cltd
std
or
push
xchg
xchg
sub
jecxz
addr16
out
ret
sub
call
jb
xchg
mov
mov
popa
in
pop
insb
js
push
lock
mov
sbb
fldcw
or
inc
jbe
rcrl
add
fcoml
outsb
shll
mov
ficompl
xorl
test
gs
mov
mov
lods
or
scas
cld
mov
adc
test
fwait
xchg
hlt
jbe
out
dec
dec
inc
insb
cmp
jg
js
jp
add
bound
jg
add
add
daa
mov
sbb
popa
lret
mov
cmp
frstor
fistps
fwait
je
mov
cmp
aaa
or
insb
test
mov
jge
pop
lret
and
daa
aaa
mov
sbb
add
ja
xchg
testl
push
cmp
mov
aas
lret
mov
or
add
or
or
sbb
out
int
das
cli
or
icebp
pop
push
xor
sbb
clc
out
sub
rol
jp
stc
roll
imul
aas
jo
dec
in
roll
push
jb
inc
aaa
andb
xchg
xor
mov
movsl
ret
aas
adc
fimuls
test
enter
or
cmc
jo
sti
xchg
xor
lock
add
lret
inc
mov
aas
fldl
test
inc
aas
pop
hlt
test
xchg
outsl
subl
test
mov
outsl
loop
outsl
mov
adc
test
cmp
and
test
shrl
inc
lahf
lret
push
orb
je
adc
scas
or
in
mov
fsubrl
jnp
jmp
xchg
js
cmp
jl
add
sbb
subl
and
lcall
jge
add
dec
mov
call
jbe
outsb
and
bound
inc
xor
test
cltd
xlat
aad
negl
ds
adc
inc
incl
jne
adc
out
mov
adc
ret
dec
test
sahf
jg
inc
mov
pop
sbb
mov
jb
add
aas
sbb
adc
test
mov
push
fs
and
test
outsl
pop
test
and
movsl
push
fstpt
fidivs
lcall
sbb
add
jle
js
mov
push
dec
ja
push
into
and
dec
lea
adc
call
jb
pusha
xchg
insl
aaa
jae
repnz
pusha
xor
xchg
push
mov
sarl
lea
pop
and
push
inc
mov
push
xchg
aam
fists
ja
sahf
js
subl
test
jecxz
pop
movsb
and
sahf
ret
popf
jecxz
xchg
in
out
adc
mov
mov
cwtl
ljmp
mov
jo
cmpsl
mov
in
sarb
aad
imul
dec
push
mov
sub
mov
shlb
cld
or
lock
mov
pop
and
adc
aas
bound
ret
clc
mov
and
hlt
pop
sti
call
pop
pop
ret
iret
sub
cmp
out
js
add
imul
jnp
sti
and
cmpsl
cmpsb
pop
sbb
jg
fcompl
fwait
ja
cltd
aas
jg
cmp
lods
dec
jbe
rcll
sbb
int
pop
mov
jl
fs
fstps
fs
xlat
icebp
incl
cmp
ja
mov
lahf
push
cmpsb
xchg
fists
jo
mov
xchg
or
xchg
xor
jp
sbb
add
inc
cmp
daa
mov
filds
cmc
cmpsl
mov
popf
xchg
lods
or
mov
jl
mov
fsubs
fldenv
mulb
cli
fcompl
mov
fwait
xchg
push
pop
in
dec
mov
cmp
cli
sub
xchg
xchg
inc
push
adc
pop
xchg
add
ds
mov
stc
mov
insb
push
mov
jl
xchg
cmpsb
mov
popf
mov
sbb
lods
inc
test
xor
push
xchg
js
cmp
test
mov
sbb
rorl
inc
mov
scas
int
xor
or
jp
push
inc
and
jl
adcl
jae
fiaddl
lds
push
mov
xor
inc
add
and
jl
xchg
je
adc
pop
add
data16
lea
lcall
pop
fldcw
imul
outsl
in
jecxz
shr
repnz
dec
dec
dec
mov
out
movsl
cmp
aad
mov
adc
push
cmp
mov
sahf
sub
ror
mov
loope
jecxz
inc
fnstenv
stos
out
subl
cmp
cli
adcb
movsb
test
leave
test
pop
xchg
jbe
mov
mov
aas
leave
inc
ret
sub
dec
dec
into
les
arpl
xchg
fistl
push
stos
mov
add
xchg
mov
pop
ja
adc
imulb
mov
addr16
es
stos
mov
outsl
sbb
sahf
ret
sbbb
repnz
mov
scas
inc
andl
aas
cmp
shll
and
lods
sub
loop
lcall
inc
inc
ljmp
int
lahf
shlb
xor
clc
lods
into
inc
int
call
nop
rcrl
jo
xor
loopne
rclb
fbld
subb
andl
pop
testl
or
and
lock
sarl
and
mov
repz
addr16
add
push
loop
jno
test
cmp
pushf
std
jns
cmpsl
sbb
jecxz
cwtl
xor
cmc
fwait
sbb
and
pop
or
cmp
adc
leave
lcall
xchg
fildl
xor
xor
pop
addb
inc
bound
xor
popa
nop
je
add
jbe
sub
imul
push
xor
pop
xchg
imul
loopne
orl
add
nop
inc
or
mov
fwait
hlt
sbb
cld
dec
in
test
jg
add
pusha
rorl
insl
shrl
faddp
or
sbb
push
repnz
cmp
lds
sbb
sbb
mov
sar
repz
inc
fdivp
popf
fsubl
loop
scas
push
sub
sub
xchg
fcomi
cltd
movsl
mov
pushf
push
sbb
js
sub
enter
sub
bound
std
pop
daa
push
sbb
popf
sub
add
pusha
dec
fs
jne
imul
dec
xchg
sbb
in
scas
sub
push
mov
loope
pop
cmpsb
adc
clc
outsl
cmp
mov
pop
hlt
cmc
mov
push
fwait
push
daa
mov
xchg
sbb
sbb
inc
xchg
ja
mov
mov
out
mov
pushl
sub
or
into
shll
or
mov
xlat
cmpsl
add
in
jmp
adc
mov
loopne
dec
push
and
jl
icebp
jo
cmp
pushl
scas
lods
adc
call
iret
xchg
pushf
cld
pop
inc
lock
loope
sbb
mov
mov
fcompl
inc
loopne
dec
mov
daa
push
cltd
and
mov
push
jmp
adc
mov
mov
cmp
xor
and
filds
pop
shl
pop
xchg
jmpw
popa
sbb
rcr
fimull
leave
inc
lcall
scas
insl
test
sbb
xor
in
jl
jns
mov
lea
xchg
loope
jge
pop
sbb
repz
jbe
sbb
jmp
xlat
dec
add
rcll
arpl
mov
pop
call
fwait
stc
lea
nop
inc
lahf
lds
cltd
mov
frstor
fstp
pushaw
add
test
ljmp
in
neg
jb
pop
pop
xchg
xor
dec
scas
andl
mov
je
mov
xchg
sbb
xor
adc
scas
daa
scas
addr16
inc
mov
enter
ret
inc
mov
push
push
popf
mov
mov
xchg
ret
cmp
enter
jnp
test
xor
pop
or
das
add
daa
std
xchg
into
push
sahf
subl
or
shll
in
or
sub
add
mov
mov
mov
sbb
cmp
or
leave
mov
clc
into
xlat
dec
and
adc
pusha
sbb
mov
addr16
sarl
mov
mov
stos
andb
dec
add
jp
imul
bound
mov
repnz
add
sbb
mov
aad
ret
popf
cmp
mov
stos
xor
loope
cmp
repnz
inc
lcall
and
jb
pop
into
xchg
inc
lahf
and
and
enter
add
and
fdivrl
mov
mov
inc
jge
arpl
daa
gs
call
sahf
xchg
outsl
sub
icebp
jle
enter
rorl
adc
lret
adc
nop
xlat
inc
xchg
fs
lock
fiaddl
pusha
push
sbb
aaa
cld
and
out
fimuls
jge
daa
sbb
dec
mov
adcl
fs
ret
xchg
outsb
and
push
test
xchg
and
adc
je
dec
add
push
xor
nop/reserved
fcomps
inc
call
lds
sahf
mov
adc
cmp
adc
add
xchg
adc
adc
or
inc
sub
mov
cmpsl
addr16
fs
xchg
adc
es
xchg
mov
xor
sbb
movl
imul
rcrl
or
sbb
call
xchg
ret
sbb
ja
in
cwtl
sub
jnp
in
repnz
sbb
fs
inc
fs
push
and
inc
loope
pop
sbb
inc
fnstsw
sarw
fiadds
adc
pop
xchg
mov
or
and
leave
roll
xchg
ljmp
aam
ljmp
xchg
sbb
push
sbb
fiaddl
inc
or
mov
fiaddl
mov
test
les
popf
mov
or
mov
out
xchg
mov
pop
pop
sub
sahf
pop
daa
mov
loop
popf
push
movsl
mov
ja
xchg
xchg
pop
xlat
pusha
xchg
and
ret
sbb
xchg
push
mov
fists
shr
sbb
xor
in
incl
filds
push
jbe
adc
aas
or
sub
mov
pusha
hlt
outsl
test
fdivp
ljmp
fstps
flds
out
and
xchg
fwait
cld
sbb
test
push
sbb
push
cs
sbb
cmc
pop
sub
pushf
jbe
pop
inc
sbb
jmp
jne
push
fwait
daa
ret
gs
sub
mov
ja
lods
pusha
jg
mov
inc
xchg
mov
mov
repz
pop
pusha
sub
jecxz
test
ss
mov
lret
bound
jne
mov
das
mov
or
test
push
aas
or
inc
mov
pop
movsl
mov
xchg
fucomp
scas
mov
dec
dec
xchg
inc
pop
sub
mov
sbb
hlt
xor
adc
pop
scas
lahf
loop
dec
shrb
mov
nop
inc
push
inc
push
clc
and
and
lcall
shr
pause
shrb
pop
and
pop
jp
and
and
inc
cmpsl
add
iret
pushf
fldenv
ror
fsubp
sbb
je
xchg
mov
xor
mov
xchg
icebp
lds
fadds
fsubs
arpl
nop
xchg
mov
es
xchg
pop
fucomp
pop
test
out
mov
fwait
dec
inc
lahf
movsl
stc
xchg
test
dec
sub
inc
dec
fs
mov
mov
fwait
scas
fbld
mov
outsl
loop
dec
sbb
fistl
shll
or
cmp
dec
cli
or
jmp
arpl
filds
xchg
mov
sub
cwtl
xor
insb
hlt
or
test
pop
cmp
repnz
push
and
fsubr
addb
mov
iret
test
cld
jns
xor
xor
sbb
ja
adc
fcoms
cld
out
cli
ret
fsubrl
outsl
xchg
ss
pop
xchg
pop
aad
jnp
in
gs
inc
mov
enter
aad
push
out
sarb
jl
mov
loop
cs
fisubl
test
xchg
dec
pop
icebp
jg
push
xchg
ja
pusha
jl
shlb
das
mov
rorb
cmp
imulb
mov
roll
mov
or
xchg
dec
pop
cli
bound
or
pop
xchg
jb
out
pop
pop
sub
mov
dec
dec
mov
cmpsl
adc
pop
ja
sbb
aaa
sub
add
mov
js
cltd
mov
pop
cld
sub
sbb
stos
outsl
mov
pop
stos
les
xchg
out
mov
add
icebp
cmp
inc
fsts
scas
bound
jo
xor
mov
cmpb
or
mov
or
sub
stos
inc
clc
jp
rcll
bnd
xor
xchg
cmp
rol
stos
scas
test
into
shlb
push
insb
mov
and
sbb
enter
xchg
inc
sbb
sti
lods
and
repnz
push
cmp
into
fiaddl
lcall
push
repz
aas
adc
gs
mov
addl
mov
mov
inc
fs
pop
sub
jo
rcll
mov
outsl
loop
pusha
mov
out
inc
add
mov
addr16
mov
out
inc
imul
scas
dec
sti
cmpsl
je
pop
aaa
mov
inc
xchg
fstpt
loop
xchg
jo
aaa
mov
fmuls
lds
cmp
aaa
decb
mov
add
mov
mov
movsl
shll
int3
xchg
mov
divb
jecxz
ret
addr16
test
pop
push
xchg
stc
adc
out
mov
repz
test
and
shrl
sbb
mov
mov
mov
cmp
pop
mov
loop
xor
mov
outsl
mov
outsl
xor
icebp
dec
clc
adc
jecxz
enter
cmp
adc
imul
cmc
rcrl
pop
loope
es
mov
jecxz
aam
shl
daa
cwtl
addr16
jae
bound
lcall
sbb
dec
mov
or
adc
jne
clc
xchg
fcoms
ret
pop
mov
cwtl
or
xchg
xchg
sbb
ja
dec
and
std
mov
ja
or
loop
andb
stc
and
cmp
out
popa
or
or
pop
adc
sub
adc
icebp
xchg
loope
cwtl
sbb
ret
mov
xchg
xchg
sbb
ds
enter
pop
xchg
push
sbb
pop
sbb
lea
insl
or
int
sub
aaa
cltd
mov
out
fs
jns
adc
or
orb
arpl
insl
mov
dec
jp
cmpsl
rolb
or
push
aaa
aaa
fmull
sbb
out
addr16
pop
push
hlt
pushl
or
lea
xchg
pop
into
pop
cmp
rclb
xorb
mov
pop
push
sub
shl
cli
andl
mov
andb
lret
or
in
bound
jp
shrb
xor
or
test
in
mov
orb
fildl
add
mov
leave
ds
lahf
decl
mov
mov
mov
js
lahf
cmpb
cltd
lea
push
mov
xchg
pushf
cli
fsubrl
adc
jb
add
daa
pop
xchg
pusha
xchg
inc
mov
pushf
fmulp
ja
faddl
roll
jecxz
cmp
lea
test
insb
xlat
push
cmp
pushf
adc
dec
in
xchg
daa
gs
mov
mov
not
adc
nop
aad
and
fisubl
xor
mov
or
aaa
fistps
sbb
lcall
and
adc
xchg
add
mov
pop
bound
inc
dec
xchg
in
fldcw
cmc
inc
mov
jge
test
std
xchg
icebp
xor
dec
mov
lahf
push
cmpl
mov
in
inc
fidivrl
sub
inc
test
mov
shl
jecxz
adc
inc
or
mov
test
test
pop
lea
repnz
lock
cmp
jecxz
or
stc
cmp
and
inc
cmpl
pop
repnz
in
pop
clc
push
mov
adc
jge
nop
inc
jo
add
mov
lds
dec
ja
sbb
cmp
sub
movsl
mov
xchg
jge
push
test
pop
xchg
mov
int3
clc
jg
ret
adc
or
sub
outsb
xor
jnp
cmp
imul
icebp
ret
bound
sub
sar
lods
inc
or
fwait
roll
ficoms
add
pop
jo
pop
in
into
add
shlb
push
and
dec
push
xchg
mov
orl
fistps
cmpsl
sbb
mov
sti
cltd
sbb
bound
mov
icebp
xchg
in
xchg
inc
mov
add
xor
in
lahf
mov
mov
push
inc
lcall
mov
hlt
aam
addb
lcall
sbbl
insl
shll
lock
pop
pop
mov
inc
fcomps
xchg
cli
in
jno
xchg
jg
sti
and
test
addr16
mov
mov
cmp
shlb
mov
dec
inc
stos
into
cmp
xchg
mov
xor
dec
inc
and
fs
aaa
lahf
loope
test
jo
xchg
cltd
pop
into
inc
js
and
mov
jns
pop
mov
xorb
andl
jnp
and
push
test
sub
cmp
xchg
ficomps
gs
pop
sbb
ja
sbb
shll
addr16
cmp
fnclex
push
mov
xchg
aas
cmpsb
ja
cmpsl
lahf
pop
loope
mov
out
mov
lahf
sbb
mov
ret
add
push
leave
mov
popaw
fcompl
jae
out
push
pop
and
or
sub
push
add
fistps
ja
testb
push
call
aad
mov
testw
pop
ficomps
cwtl
aas
test
add
push
popf
or
sbb
fsubl
add
add
xlat
loope
jge
xchg
cmc
pop
cld
mov
pop
mov
movsb
mov
push
pop
addr16
addr16
pop
fistpll
icebp
lret
mov
pop
repnz
mov
roll
xchg
adc
jl
jae
cmp
cmpsl
sbbl
jns
xchg
and
add
push
lcall
sbb
pop
mov
js
push
sbb
mov
cmc
addr16
sbb
cmp
mov
lcall
ja
mov
bound
mov
mov
add
and
subb
mov
push
data16
mov
push
fnstenv
ja
and
neg
adc
sbb
aas
je
xchg
sub
cmpl
call
scas
inc
dec
sbb
and
mov
jg
adc
pushl
xchg
mov
inc
inc
inc
subl
fwait
loope
jmp
roll
sub
push
push
pop
ret
sti
ret
mov
leave
xchg
subb
xor
mov
scas
xchg
outsb
mov
shlb
loop
mov
xor
inc
adc
push
arpl
jbe
outsl
sahf
das
push
loop
mov
jo
dec
xchg
dec
ja
sbb
mov
add
sahf
sbb
cmp
test
fwait
push
inc
cmp
sar
jns
adc
or
lahf
mov
xchg
outsb
mov
shl
aad
add
dec
mov
cmp
fistpl
rcll
mov
lcall
push
mov
and
dec
dec
jp
test
sbbb
add
leave
movsl
mov
rorb
add
jmp
std
fs
push
mov
fdivl
loop
mov
pop
repz
xor
mov
iret
push
fdivrp
test
xchg
inc
ss
mov
push
lcall
push
and
mov
and
and
cwtl
rcl
or
sub
cmp
sub
mov
xor
and
mov
adc
lahf
jns
inc
cld
jae
inc
test
sbb
xchg
ja
out
jecxz
repz
je
cmc
arpl
dec
xchg
icebp
test
sub
filds
out
fwait
add
inc
test
stc
outsb
cmpsl
test
and
lods
jb
scas
ja
dec
xchg
dec
pop
mov
or
inc
lea
cld
cmp
dec
xchg
mov
testl
xor
push
xchg
movl
xor
pop
inc
mov
mov
ss
lods
addb
pop
fiaddl
mov
or
sbb
sub
adc
and
in
pushf
outsl
pop
push
mov
cli
shrl
addr16
idivb
add
incb
pop
inc
jl
fstps
xor
pop
mov
cmp
jecxz
or
lea
mov
stc
nop
out
xchg
mov
xorb
pop
and
mov
lods
int
lock
add
inc
test
xor
xchg
inc
sub
cmc
enter
std
fwait
add
sbb
shlb
test
daa
andb
and
xchg
test
fdivl
ret
dec
repnz
lcall
jnp
repz
xchg
cmc
inc
cwtl
loopne
jmp
leave
adc
sahf
scas
mov
scas
outsl
dec
cmp
mov
sahf
cmc
mov
aas
pop
jae
test
pop
inc
mov
mov
shrl
fisttpl
sbbl
cmc
inc
inc
aas
add
push
call
in
or
bound
adc
push
arpl
cld
divb
jb
inc
and
inc
cld
push
mov
enter
xchg
daa
adc
test
add
xor
enter
mov
shlb
mov
push
push
cld
daa
pop
push
jl
out
and
loopne
popa
xchg
cmpsb
sub
rcrb
mov
pop
push
fcmovnbe
loopne
mov
sub
add
cli
imul
add
lock
in
pop
mov
ja
daa
stc
imul
jge
xchg
movsb
sub
mov
mov
repnz
mov
sub
xchg
lcall
xchg
xchg
mov
cmp
stc
dec
and
jne,pn
out
lret
adc
or
ret
pop
mov
int
pop
unpcklps
push
outsl
out
jnp
mov
add
sub
pushf
repnz
or
test
js
repz
lea
cmp
bound
test
add
pop
or
and
outsb
movl
xor
sbb
cmpl
popf
adc
cltd
je
ret
aas
pushf
rorb
adcb
addb
lea
ret
loope
jl
pop
mov
enter
leave
jne
cmpsl
cli
mov
cmp
mov
or
or
stos
xchg
aas
xorb
mov
mov
adc
ja
enter
and
adc
push
and
movaps
inc
daa
xchg
shl
adc
nop
pop
mov
add
les
loopne
les
inc
mov
imul
push
xor
arpl
addl
mov
xchg
jecxz
int
cltd
call
inc
and
adc
dec
and
mov
fildl
xchg
arpl
in
lcall
lahf
push
xchg
addl
push
dec
scas
pop
mov
pop
add
nop
fmull
dec
outsb
lahf
les
add
xchg
js
pop
imul
movsb
add
xchg
andl
pusha
mov
inc
shl
mov
sub
and
jo
jg
lahf
adc
xchg
push
inc
test
jg
popf
pusha
xlat
or
mov
pop
push
in
sbb
adcb
sbb
and
xor
call
pushf
xchg
daa
les
das
pop
movsl
in
cmpsl
pop
ret
jbe
fs
sbb
inc
add
cmp
sub
and
cwtl
jbe
in
incl
cwtl
dec
and
sbb
add
mov
rolb
fcom
arpl
xor
jae
pop
xchg
pop
xchg
and
notl
lahf
ja
xchg
adc
inc
cltd
pusha
fs
bound
xchg
inc
sbb
xchg
test
movsl
mov
into
faddl
test
sarb
cld
bound
adc
cwtl
inc
pop
mov
andb
setle
lcall
mov
mov
xchg
out
mov
and
test
fmulp
arpl
and
sbb
int3
fisubs
inc
fwait
bound
popa
dec
test
inc
filds
sbb
add
xchg
xchg
js
xchg
pusha
rorb
mov
mov
add
arpl
mov
cmp
les
test
mov
inc
xchg
mov
addl
ds
rolb
cmp
and
lea
lock
xchg
das
or
fists
jg
adc
test
aam
dec
mov
xor
and
rol
jge
add
cmp
sti
cmp
inc
add
jbe
mov
lcall
nop
jne
pusha
popa
xchg
add
jno
push
nop
nop
mov
pushf
roll
sbbb
int
inc
nop
popf
pop
addl
pushf
in
mov
in
jmp
orb
pop
rolb
mov
imul
mov
push
xor
xchg
mov
adcl
push
jmp
lahf
roll
xor
lgs
lret
pop
ret
lcall
mov
xchg
scas
xlat
in
pop
cmp
xor
xlat
pusha
push
xchg
sbb
int3
fs
adc
cli
pop
xchg
fld
fwait
pushf
mov
xchg
repz
jmp
pop
mov
xchg
sbb
push
mov
lahf
pop
mov
bound
xor
jg
pusha
leave
dec
mov
inc
and
dec
mov
and
add
sbb
push
adc
sbb
int
pusha
hlt
xchg
inc
negb
ja
pusha
movsb
inc
mov
bound
pause
jns
mov
mov
daa
enter
xchg
push
add
push
mov
xchg
xchg
and
push
add
fstps
ljmp
subb
adc
cwtl
adc
fcomps
and
adc
and
xchg
mov
mov
or
stc
mov
mov
adc
mov
nop
push
rorb
lcall
mov
pusha
and
push
sbb
jecxz
xchg
and
jne
xchg
pop
push
add
data16
mov
inc
fs
add
add
lea
data16
xchg
and
mov
xchg
inc
dec
loopne
mov
ficoms
cli
fs
jns
xchg
sahf
sbb
cltd
mov
pop
xchg
mov
mov
and
cmpsl
bound
inc
mov
fcmovb
subl
adc
sbb
subl
lahf
repnz
mov
sbb
and
mov
jbe
ret
adc
popf
pushf
mov
stc
aam
addr16
inc
mov
xchg
push
call
roll
inc
add
and
daa
xorb
popa
mov
lahf
fiaddl
les
inc
xchg
cli
xchg
and
adc
mov
xrelease
adc
pop
fs
adc
rcrl
in
adc
adcb
add
daa
ret
xchg
dec
arpl
fidivrl
roll
push
and
test
mov
rorl
fbld
mov
adc
jle
lret
mov
mov
adc
mov
mov
xlat
call
fidivrl
aam
insb
push
jmp
adc
mov
pop
add
adcb
mov
push
sub
mov
movsb
xchg
push
inc
mov
mov
mov
xchg
adc
lds
lcall
scas
sbb
fcomps
pusha
icebp
dec
jno
adcb
xchg
or
pop
xchg
hlt
cmp
adc
dec
adc
lahf
fs
sbb
xchg
jp
test
in
pop
lcall
bound
or
cmp
daa
or
adc
sbb
jp
decl
xchg
and
xchg
daa
in
mov
xchg
idivb
mov
mov
pop
or
addl
cmp
xor
jbe
cltd
mov
dec
mov
nop
jo
add
lahf
inc
popl
orb
in
addb
xchg
pop
stos
subl
in
mov
add
xor
shll
aam
jns
dec
mov
mov
adc
lds
rclb
adc
lea
arpl
dec
ret
sbb
xor
fisubl
out
mov
lcall
sbb
cs
pusha
push
jge
mov
jle
dec
pop
dec
xor
roll
and
jnp
cltd
out
jge
sbbl
sbb
pop
adc
lcall
cli
nop
dec
mov
test
mov
stc
fs
mov
flds
and
icebp
pushf
xchg
adc
push
ret
fs
fwait
test
xchg
ficompl
mov
aaa
mov
popf
xchg
cli
jb
sbb
jl
jb
scas
lcall
arpl
pop
pushl
pop
nop
leave
mulb
sbbl
xor
push
inc
inc
arpl
outsb
xchg
call
pop
leave
or
push
mov
lea
gs
lds
bnd
dec
bound
and
cs
andb
int3
inc
and
inc
in
push
pusha
subl
inc
nop
cli
stc
mov
mov
ficomps
test
pusha
ret
fs
xchg
add
popa
stos
sahf
pusha
mov
ret
test
in
xchg
xchg
mov
into
cmp
ja
daa
das
mov
cwtl
in
ret
subb
je
lahf
nop
sbb
jecxz
popa
in
xchg
and
mov
in
add
cwtl
or
lahf
cwtl
xchg
xchg
jns
lret
sbbl
pusha
das
dec
add
clc
es
mov
pusha
mov
fadds
xlat
and
mov
sub
es
or
lahf
inc
pushf
fcmovb
mov
xchg
mov
xchg
jno
xchg
push
lea
adcl
add
and
rorl
pop
inc
mov
pusha
inc
lahf
lret
cwtl
ds
adc
sub
mov
sarl
xchg
and
cltd
arpl
xchg
xchg
addb
adc
add
imul
icebp
in
cmpb
xchg
xchg
adcl
xchg
fisubs
bound
mov
cwtl
dec
xchg
int3
rol
xlat
jnp
popf
jp
sbb
or
cmp
ja
pop
jecxz
popl
sbb
inc
test
mov
ds
xor
sbb
test
sbb
mov
test
jnp
rol
pusha
or
mov
and
add
sbb
sbb
push
jle
xchg
pusha
push
lea
lahf
inc
push
add
adc
xchg
inc
rolb
pusha
sbb
xchg
inc
push
add
fs
nop
fs
pop
int
ret
pop
inc
or
pop
ret
and
popf
xchg
dec
icebp
and
inc
fs
xchg
push
or
inc
lret
add
mov
adc
pusha
mov
pushf
sub
adcl
inc
decb
fs
pop
popf
mov
loopne
inc
iret
adc
stc
push
lock
test
fadd
test
lcall
xchg
inc
add
add
andl
xchg
cltd
jmp
jle
ret
fs
add
bound
inc
popl
filds
mov
push
sbb
xchg
sbbl
and
xchg
sbb
pushf
adcl
and
adcl
mov
sahf
adc
push
add
test
test
xchg
ret
inc
xchg
pusha
popf
fs
and
inc
or
pusha
pushf
fs
and
inc
lea
pusha
adc
mov
test
outsl
mov
push
jb
icebp
dec
ret
pusha
push
xor
mov
pusha
adc
or
ret
inc
pop
rcll
xchg
lahf
mov
inc
mov
out
xchg
fbstp
jmp
ljmp
push
arpl
mov
test
jb
adcb
lahf
les
lret
bound
sub
mov
mov
or
movsl
pop
ficomps
xchg
sbb
jbe
lcall
lahf
fsubs
lcall
popa
or
and
lea
xchg
sbbl
mov
adc
xchg
mov
ret
xlat
sbb
add
mov
lret
cwtl
lea
dec
lcall
pushf
mov
inc
pop
movsb
mov
mov
lahf
pop
repz
repz
sbb
and
movsl
mov
lret
pop
imul
lock
or
cmc
repz
and
mov
fisubs
out
jle
dec
jle
dec
jle
ret
adc
add
mov
xchg
out
mov
or
jns
adcb
sbbl
ja
xchg
cmpsb
fidivl
fs
xchg
aas
add
arpl
aam
inc
inc
addb
bound
cmp
sbb
cmpsb
dec
xchg
or
popf
xchg
bound
fwait
pushf
sbb
and
clc
fwait
mov
in
mov
push
sbb
xor
add
xor
sbb
sti
test
mov
call
sbb
mov
in
pusha
or
sub
arpl
sub
cmpsb
xchg
outsb
and
loop
pop
call
rol
cs
inc
popl
sub
sbb
sahf
aaa
dec
andl
test
cmp
pop
jbe
xor
daa
add
shll
push
lret
sarl
add
andb
inc
xchg
inc
test
pusha
push
inc
xchg
mov
sarb
mov
popf
lret
pop
rorl
test
iret
repz
mov
jbe
xchg
imul
les
ret
pusha
sbb
cwtl
lahf
xchg
lea
dec
or
xchg
inc
and
lahf
shll
mov
mov
adc
inc
mov
inc
mov
inc
lahf
orb
xchg
daa
mov
add
int3
dec
scas
add
fstl
divb
inc
xor
inc
push
xlat
test
adcb
js
lahf
je
faddl
mov
loopne
jne
jb
xchg
pusha
mov
jl
subl
bound
outsb
scas
xchg
ja
xchg
push
test
xor
andb
es
out
and
cmp
test
je
pop
pop
gs
rcr
dec
inc
mov
loopne
and
idivl
movsb
cmp
dec
pusha
xchg
or
xchg
xchg
call
pop
jg
daa
mov
test
push
inc
cs
adc
inc
adcb
arpl
adc
mov
pop
cwtl
imul
addl
sub
add
inc
mov
cltd
gs
mov
inc
enter
inc
rcll
addb
jno
push
adc
mov
adc
inc
lcall
sti
fdivrl
shr
mov
outsb
xchg
push
add
pop
xchg
mov
sbb
bound
mov
dec
pop
inc
push
lds
arpl
shll
jg
test
xchg
inc
popf
pop
mov
xchg
in
pushf
test
xchg
stos
jecxz
xchg
aam
sete
mov
orb
imul
fsubl
js
mov
and
or
xchg
inc
xlat
in
popa
nop
inc
dec
sbb
lcall
inc
cmp
sub
adcl
xchg
jns
sbb
cltd
fstps
sub
int
hlt
pop
mov
pop
xchg
out
cmpsb
or
test
sahf
inc
fdiv
xchg
sbb
push
dec
xlat
pop
xchg
js
fsubl
xor
imul
and
adc
adcb
push
lods
add
adc
xlat
cwtl
pushf
xchg
arpl
pushf
mov
addb
cltd
cmpb
xchg
testl
sbb
sbb
mov
bound
adc
lcall
xchg
add
adcb
lahf
jge
xchg
sbb
out
push
test
out
cltd
daa
adc
aaa
mov
out
ret
icebp
adc
mov
jmp
xor
out
mov
popf
sahf
stos
xchg
adcb
test
cmp
push
lcall
test
mov
inc
rclb
xchg
jmp
out
nop
lahf
test
xchg
push
mov
sahf
rcrl
int
pusha
fwait
fs
add
lahf
sbb
inc
or
bound
jno
xchg
test
dec
push
bound
adcb
cwtl
jb
test
pusha
xlat
dec
adc
pushf
cmpsl
test
jbe
ja
gs
lcall
mov
mov
je
cltd
adcb
adc
jg
mov
pop
pop
and
add
xchg
sbb
sub
addb
pusha
add
popf
jb
or
lcall
xchg
jae
or
call
xorb
xchg
fimull
pusha
or
adc
sbb
xchg
sbb
iret
daa
prefetchnta
rolb
pusha
daa
cmp
cs
roll
xchg
shll
mov
mov
enter
lea
in
push
cltd
pcmpeqb
xchg
scas
push
jns
mov
outsb
not
shrl
lea
mov
test
shll
int
jns
mov
ficoml
lea
repz
and
dec
inc
inc
mov
add
pop
mov
fsubs
jne
cltd
ret
push
xchg
jp
xchg
mov
mov
or
xor
add
push
and
cltd
ret
sub
testl
orb
not
shlb
and
jnp
orb
out
sahf
push
lahf
out
popf
sbb
inc
fs
daa
das
xor
add
xchg
or
adc
sub
xchg
incl
inc
lods
daa
xchg
xchg
aad
push
movsb
push
ficoms
imul
xchg
xchg
mov
lea
jae
sbb
scas
xorl
adc
xor
xchg
out
sahf
sbb
popf
arpl
mov
call
sbb
inc
lret
mov
xchg
test
mov
nop
xchg
mov
popl
daa
ljmp
aad
fiaddl
inc
fimuls
bound
inc
xchg
add
mov
fiadds
lret
fstps
fs
mov
test
bound
test
inc
lds
or
lahf
fcomps
inc
addl
xor
xchg
test
pusha
xchg
fs
mov
dec
inc
or
je
movsl
addl
inc
sarl
xor
lcall
add
ja
xchg
add
repnz
push
jne
jnp
dec
stos
push
fadd
xor
mov
sub
push
add
inc
stos
push
pop
roll
xor
pusha
rcrl
bound
mov
jae
daa
rcrb
fisttpl
mov
clc
and
mov
and
andl
repz
fdivrl
xor
lcall
mov
loopne
pop
fwait
push
xchg
xor
and
xchg
and
or
popf
sbb
test
inc
je
xchg
mov
lea
inc
xor
pop
push
lods
pop
sbb
push
imul
mov
xor
bound
inc
lds
dec
xchg
xchg
xchg
jns
sahf
xchg
andb
jne
int
lcall
and
mov
pushf
xchg
jnp
orl
fs
adcb
pop
lahf
mov
push
dec
lret
or
and
add
xchg
into
test
mov
xor
jb
pop
add
test
popl
adc
lret
fwait
xchg
test
mov
mov
add
pushf
push
mov
mov
lahf
inc
mov
mov
imul
pop
jo
mov
leave
pushf
aaa
call
lcall
sti
add
inc
push
lcall
xchg
fwait
leave
push
mov
xchg
xchg
fistpl
jb
jae
xchg
mov
lret
jb
repz
pop
orl
int3
enter
andb
test
pop
loop
push
lcall
mov
in
and
inc
pusha
lcall
in
aam
push
lcall
test
lahf
mov
fsubl
ljmp
lcall
imull
fildl
ret
xchg
test
or
add
test
or
sub
orl
addl
mov
lcall
test
fwait
popf
adc
lahf
test
xchg
xchg
mov
addl
idiv
jl
enter
mov
js
int3
ss
sbbl
sahf
sbb
push
lea
data16
pushf
jne
loope
fwait
xchg
sbb
rorl
fdiv
mov
bound
addl
mov
mov
in
dec
add
mov
jo
jge
in
lds
stos
pushf
sbb
and
mov
mov
sahf
or
divl
subb
jecxz
das
jbe
xchg
sbb
push
and
sbb
and
xchg
pusha
push
add
xor
cli
xchg
ffree
rcrl
test
ds
xchg
cwtl
or
mov
test
mov
orb
xchg
sbb
and
jl
mov
test
lock
lcall
test
mov
loop
test
xchg
xchg
or
xchg
dec
pop
sbb
loop
lret
cs
and
xchg
inc
pop
in
mov
daa
dec
cmp
push
inc
jmp
push
popf
and
int3
cmp
xchg
xchg
mov
test
mov
adcb
adc
in
fs
jns
adcl
scas
pop
mov
mov
inc
shlb
mov
push
add
inc
sarb
and
adc
inc
mov
fbstp
push
fwait
outsb
call
je
push
inc
bound
xor
push
fwait
lock
xor
push
fwait
cmp
xlat
jle
es
cmp
xchg
jnp
lea
aas
pop
nop
fsubrs
loope
jge
notl
jle
jmp
or
dec
dec
mov
sahf
inc
movsl
mov
imull
mov
xor
sub
bound
pusha
fsubrs
cwtl
out
or
in
adcl
inc
jno
xchg
inc
incl
xchg
mov
addr16
lcall
and
jb
jne
xchg
pop
inc
inc
in
test
add
xchg
mov
fcoml
addb
push
out
inc
daa
mov
sbb
pop
push
fwait
xchg
pusha
aam
jge
jl
inc
pop
cmp
ja
push
cmp
aam
lcall
adc
pushf
pop
mov
jecxz
xchg
xchg
stos
mov
arpl
roll
sub
int
jo
xor
mov
les
rorl
and
lcall
fs
xchg
mov
push
xchg
push
xchg
stos
cltd
dec
or
insl
xor
xchg
xchg
xchg
push
setns
gs
daa
test
stos
out
test
mov
adc
xor
test
inc
jbe
rolb
fcom
inc
aad
shr
add
xchg
or
aaa
addb
lret
test
aad
andb
into
push
xchg
inc
shl
xchg
lret
and
fcompp
xchg
sar
pop
push
xchg
and
aas
or
xchg
lea
xchg
xchg
adc
xchg
adcl
xchg
bound
imul
jb
popa
daa
ret
test
pop
inc
sub
ds
andb
pop
icebp
stos
test
xchg
lds
xchg
les
fimuls
daa
mov
incl
push
sbb
inc
mov
sbb
inc
in
jbe
andl
sub
jno
inc
aaa
popfw
xchg
movsb
xchg
xor
pop
pushf
bound
or
daa
xchg
imul
sbb
fldl
repnz
faddl
xchg
pusha
aam
scas
xchg
incl
fcomp
pop
decl
lcall
cmp
jne
jnp
and
seta
inc
inc
lea
out
int3
inc
push
cmp
and
inc
les
jmp
sbb
mov
or
jge
adc
fs
xchg
stos
dec
xchg
push
adc
xchg
jbe
mov
fiaddl
daa
nop
mov
jbe
imul
sub
mov
mov
and
jne
lcall
clc
aas
mov
cmpsl
dec
and
and
jne
sbb
add
adcb
xorl
mov
xchg
sbb
fs
pop
fmull
stc
push
lea
mov
call
or
imul
add
bound
into
mov
adc
sbb
imul
mov
daa
or
js
and
sbbl
push
out
popf
test
push
adc
inc
dec
dec
push
xchg
add
movsb
xchg
jmp
mov
jl
xchg
inc
lods
das
lahf
xchg
popa
addr16
mov
adc
cmp
add
fwait
pop
mov
loope
xchg
in
mov
mull
xchg
xchg
jmp
lcall
shll
lret
mov
aam
shrb
xlat
and
test
lahf
popf
adcb
cltd
test
shrb
addr16
aam
popl
fsubr
add
sub
push
and
add
xchg
sahf
and
dec
test
jle
loope
in
adc
arpl
xchg
dec
adc
mov
mov
decl
dec
pop
ret
fisubrl
pop
pop
jne
pop
adc
mov
dec
pusha
xor
and
mov
popl
xchg
or
xor
mov
dec
jge
and
pop
mov
pusha
test
in
hlt
insb
add
xchg
sbb
fs
inc
adc
ljmp
inc
aaa
test
inc
ja
dec
sahf
sbb
add
lds
fistl
aad
xchg
xchg
xchg
push
inc
lcall
adc
inc
subb
adcb
fistps
jle
mov
test
cwtl
push
xchg
sti
ja
pusha
add
test
lret
notb
lcall
lret
rclb
addr16
out
enter
aaa
and
sahf
xchg
jo
push
cmp
pop
xchg
sub
addl
and
sub
mov
jecxz
daa
mov
inc
sbbl
push
xchg
in
mov
je
nop
xchg
mov
lahf
in
test
add
ficoms
test
mov
and
in
cltd
jecxz
test
add
lcall
das
dec
mov
faddl
lock
cmp
mov
shll
in
xchg
call
pop
add
jge
sbb
add
rcrb
mov
cltd
xchg
mov
addl
lcall
sbb
pop
mov
daa
loopne
call
sti
jecxz
sbb
das
lahf
or
pop
xchg
rcr
addb
sub
and
sub
xchg
xchg
xchg
fsubrs
inc
loop
ds
push
sub
fistpl
and
xchg
pop
mov
sbb
lea
test
je
fadd
push
xchg
loopne
lea
pusha
andl
test
out
inc
sub
pushf
lcall
cwtl
sbb
leave
jg
dec
sbb
push
fs
inc
cmp
xorl
aaa
xchg
push
lahf
ja
pusha
fsub
mov
fwait
cltd
cmc
je
faddl
pushf
subb
clc
and
and
roll
stos
lods
mov
sbb
je
loopne
enter
jb
fs
pop
pop
je
subb
add
inc
enter
sbb
sbb
push
stc
sahf
pushf
sti
nop
fbld
daa
les
dec
and
xor
clc
add
bound
nop
and
or
cwtl
adc
ljmp
add
daa
add
dec
mov
xchg
pop
add
cltd
nop
dec
popf
int3
dec
pop
lcall
aad
mov
adc
fistl
call
int3
movsb
rclb
pop
sti
sbb
mov
mov
or
aam
mov
leave
fwait
xor
test
and
fsubr
sbbl
lods
ljmp
sbb
test
cmc
xchg
sbb
lods
xchg
jbe
dec
mov
lods
inc
push
or
xchg
pop
sub
fsubrs
enter
cld
xchg
popf
and
sti
adc
cmp
xchg
outsb
test
xchg
adcb
xchg
cld
xchg
adc
jne
jbe
lret
xchg
mov
repnz
lods
jmp
shrb
push
dec
inc
shrb
mov
inc
hlt
loope
inc
mov
movsb
lahf
inc
fsub
fimuls
xchg
ret
mov
sbb
push
xchg
jle
jae
xchg
cltd
pop
ss
xchg
sbb
jg
out
add
xchg
scas
sbb
and
clc
pop
and
push
xlat
orb
adc
fldt
lea
les
sbbl
push
mov
pop
bound
call
adcb
jb
mov
pushf
orl
mov
flds
pop
test
xchg
xchg
lea
or
dec
mov
addb
xchg
xchg
add
andl
into
daa
xchg
xchg
rcl
pusha
xchg
or
stc
xchg
lea
pop
ljmp
xchg
je
xor
fimuls
inc
orb
popl
mov
outsb
mov
nop
xchg
xchg
pop
mov
popf
sti
pushf
sbb
pop
sbbl
dec
xchg
ret
lahf
or
popf
icebp
sahf
test
bound
out
mov
xchg
test
xchg
push
dec
xchg
lret
cmp
out
xchg
jns
add
xchg
adcl
dec
mov
inc
lret
mov
adc
mull
mov
mov
repz
fmull
xchg
xchg
xchg
cmp
je
cltd
inc
pushf
testl
ficoms
xchg
loop
mov
scas
sub
jno
mov
int3
imul
and
xchg
add
imul
ja
add
imul
mov
add
inc
cmp
test
rol
adc
lahf
mov
ljmp
xchg
orb
nop
test
sahf
xchg
jecxz
xchg
xor
orb
in
mov
pop
in
xchg
and
mov
xchg
test
add
pop
in
or
pop
jle
xchg
stc
mov
add
add
xchg
adcl
mov
daa
aaa
pop
xchg
sar
xchg
les
mov
movsb
rcrb
mov
jae
mov
loope
movsb
xchg
sbb
xchg
nop
mov
adc
adc
xor
xor
aaa
inc
test
push
xchg
scas
mov
fwait
jl
push
enter
mov
mov
pushf
sbb
pusha
mov
mov
repz
sbb
jge
loopne
daa
add
sbb
fs
data16
ret
sahf
push
and
les
mov
xor
lods
add
insl
mov
xchg
aam
lahf
xchg
lods
es
pusha
call
scas
mov
lods
or
adc
fimuls
xchg
cmp
add
xchg
mov
mov
jno
mov
gs
adc
xor
popl
jmp
jb
or
enter
je
add
push
push
mov
adc
repz
inc
ljmp
hlt
pop
fwait
lods
shll
insl
add
rcll
addl
xchg
pop
jbe
pop
cltd
sahf
sbb
loopne
sti
cmp
mov
xor
lret
or
nop
jecxz
call
fs
test
mov
mov
adc
xor
testb
xchg
movsl
and
shll
jae
lea
mov
gs
adc
fists
mov
xchg
test
jle
push
jns
pop
daa
in
jge
dec
push
add
xchg
adc
loop
dec
push
inc
popa
xchg
adc
sti
daa
xchg
pop
pop
andb
repz
and
sbbb
jbe
inc
xchg
sbb
jne
push
xchg
xor
ficoml
xchg
out
mov
sbb
inc
and
pushf
sbb
addl
add
loope
dec
mov
pushf
je
lret
mov
cltd
and
xchg
push
mov
popf
inc
xlat
mov
js
cmc
inc
inc
mov
push
je
or
dec
sbbb
test
aas
xchg
imul
and
les
xchg
sbb
push
sbb
call
loop
aas
sbb
xchg
sbb
out
lods
adc
arpl
adcl
test
popa
xchg
or
xlat
inc
test
adcl
jle
and
std
cmp
sbb
inc
mov
add
mov
push
inc
js
and
or
lcall
lahf
test
into
or
adc
loope
lahf
xchg
fcomps
or
pop
and
lea
lods
xchg
je
sbb
dec
orl
add
lea
mov
sbb
and
andb
inc
notl
movl
addb
dec
bound
aam
mov
dec
push
fs
jnp
pop
mov
add
adc
and
popl
addl
lcall
loop
nop
sbb
fistpl
adc
xor
lahf
add
xchg
pop
sbb
xchg
pusha
pop
pop
rcll
int
add
test
inc
sbb
xchg
add
lret
js
inc
loop
mov
jo
inc
int3
jno
or
call
rolw
dec
fadds
jge
mov
and
pop
push
push
xchg
add
loope
mull
adc
push
xorl
stos
xchg
sbb
mov
push
sbb
add
pop
lret
lret
daa
ja
pusha
add
shll
sbb
shlb
mov
pusha
push
bound
push
shll
xchg
divl
cmpsl
dec
filds
loope
jb
xchg
xchg
add
jp
add
xchg
xchg
add
adc
pusha
jno
pop
xchg
aas
int
adc
pop
dec
lcall
add
arpl
cwtl
cmp
insl
arpl
sbbl
imul
pushf
je
sahf
add
js
les
push
adc
aas
lcall
mov
mov
inc
dec
je
dec
xchg
cmovg
sbb
and
test
adcl
jmp
lret
or
lea
pop
adc
mov
pop
inc
ja
inc
orb
jnp
jns
or
mov
pop
into
imul
lcall
xlat
and
push
mov
jl
pop
andb
adc
sbb
pop
add
push
sbb
mov
test
push
sbb
and
arpl
cwtl
mov
orb
mov
dec
pop
aam
aaa
das
jg
dec
add
arpl
mov
adc
mov
inc
pop
adc
dec
testl
loope
add
cs
inc
daa
rcrb
mov
push
or
sahf
je
addl
notl
push
std
cmpl
xchg
je
sbb
inc
addl
add
test
fmull
pop
pop
cltd
mov
mov
inc
adcl
lahf
rorb
inc
insl
cltd
pop
sbb
or
inc
outsl
adc
cmpsl
mov
fs
sbb
pop
rcll
add
mov
jno
jl
dec
gs
lahf
sbb
push
push
sbb
add
lods
addl
dec
mov
fcoml
test
push
add
lods
popf
adc
inc
lcall
icebp
adc
adc
ds
inc
cmp
les
adc
addb
and
sbb
xor
adc
sbb
lahf
lcall
int
inc
adcb
push
fs
loope
and
mov
pop
nop
add
mov
fistps
pop
sbb
inc
popf
fisubl
or
das
fxch
test
sub
jl
mov
int3
repnz
lea
adc
and
mov
inc
pop
jg
sar
adc
inc
jle
test
pushf
pop
les
pop
pushf
fucomi
or
ficoms
rcll
in
add
pop
xchg
loopne
push
push
pop
shll
inc
jg
arpl
jmp
fsts
adc
xorl
ljmp
push
mov
outsb
lcall
lods
mov
xlat
add
sbb
pop
lcall
and
mov
cltd
ror
ljmp
push
inc
push
aad
and
cmp
jle
into
lock
inc
int3
ficompl
mov
lea
dec
push
xor
ror
ljmp
push
call
nop
das
dec
lcall
mov
xlat
mov
xchg
or
cwtl
shlb
pop
dec
xchg
jle
ret
inc
push
mov
mov
js
sub
addl
cmp
xchg
sbb
xlat
jecxz
jecxz
hlt
sub
scas
arpl
aas
leave
dec
mov
cmp
outsl
cltd
test
outsb
push
stc
add
cmp
sti
pop
push
lods
mov
shl
jmp
pop
jnp
filds
aaa
inc
push
mov
aam
jg
xchg
cli
or
adc
test
and
inc
jae
andl
push
push
jb
or
in
sub
xor
insl
cld
push
es
mov
and
in
out
mov
lock
xchg
mov
pop
adc
xor
in
and
insb
mov
hlt
inc
into
into
xor
or
adc
cmp
fisttpl
stc
lea
push
outsl
jns
popa
repnz
nop
sbb
fprem1
and
movsl
mov
and
xchg
clc
jp
test
or
outsl
inc
add
sub
dec
aaa
movzbw
pushf
mov
sub
sar
add
clc
pusha
sbb
mov
cmp
cmc
test
pushf
jmp
mov
pusha
jmp
pushl
call
movsb
dec
inc
dec
push
les
ss
xchg
cmp
js
xlat
adc
xchg
pop
push
or
dec
dec
inc
mov
lock
xchg
in
scas
decl
add
sbb
out
imul
mov
xor
or
hlt
cmpsb
sub
repnz
inc
aas
negb
stc
add
push
dec
addl
xchg
test
cld
and
inc
mov
aad
in
and
lock
inc
test
sub
jbe
addb
jg
ret
lret
and
out
sub
adc
jecxz
xor
movsb
and
inc
push
mov
push
in
push
setbe
arpl
push
fdivrl
lret
shr
jno
add
aaa
cmp
lret
cmp
and
sbb
rcr
inc
mov
adc
rorb
sub
mov
or
pop
scas
mov
xchg
adc
mov
dec
cmpsl
jg
das
inc
bound
push
pop
scas
roll
leave
loope
adc
jne
int
adc
rorb
lea
mov
call
negb
cmpsb
mov
test
stos
aad
adc
lahf
shl
mov
pushf
jbe
jge
or
jno
jbe
pop
imul
sbb
mov
sbb
imul
lahf
dec
cmp
gs
xor
loope
lret
out
cmpb
pop
mov
pop
ljmp
rorl
adc
pop
jae
cmp
fnstsw
cmp
adc
fwait
lret
shl
sbb
mov
shl
sub
pop
pusha
push
lea
jmp
lea
ja
pushf
call
sub
sub
mov
mov
aas
jne
jge
iret
repz
rorb
aaa
lcall
sbb
mov
pop
xchg
ret
mov
addl
inc
dec
mov
test
loope
inc
jecxz
lock
arpl
push
xlat
sub
icebp
in
out
and
inc
pop
int3
lea
jns
daa
push
in
div
lahf
lret
pop
add
jo
mov
sbb
xchg
xchg
lcall
push
mov
add
sbb
dec
jne
in
cmc
adc
and
stos
icebp
test
jle
aam
cmp
test
test
cmp
test
decl
mov
pop
jle
push
fidivrl
daa
dec
cltd
cmp
movsl
mov
xchg
fs
icebp
orl
mov
mov
out
cmpsl
nop
orl
adc
mov
repz
xor
rorl
adc
std
xor
mov
out
mov
pusha
fisubl
lock
mov
pop
call
pop
pop
outsb
sahf
mov
xor
stc
pop
sarb
es
dec
fucomi
pop
and
push
subl
xor
scas
jl
bound
or
push
dec
push
lods
pop
jge
sbb
das
flds
push
rcrl
movsb
mov
ss
xor
mov
inc
or
imul
mov
shll
mov
mov
jge
pop
test
cwtl
loope
pushw
nop
inc
adc
add
dec
push
xor
and
lea
xchg
outsl
pop
pusha
pop
outsb
jno
xchg
inc
enter
pop
pushfw
mov
pusha
fs
mov
xchg
and
daa
jbe
sub
jl
js
pop
dec
cmpsb
mov
mov
pop
popf
mov
jp
mov
out
sub
mov
pop
popa
mov
int3
push
int
movsl
sbb
and
jae
scas
bound
test
in
ss
je
rorb
pop
push
fmuls
lea
jne
push
lahf
pusha
movb
mov
bswap
movsbw
pushf
mov
pop
movsbw
lea
jmp
cld
jmp
sub
mov
mov
ret
jmp
pop
jae
scas
ret
push
stos
add
jp
sub
add
cmp
mov
rclb
add
pop
aam
and
aam
xchg
in
xlat
out
jno
pop
dec
jb
mov
ret
mov
lcall
cmp
dec
call
fabs
bound
cmpsb
shl
push
and
sti
jmp
lcall
push
lea
leave
jmp
lods
mov
imul
shl
lea
jmp
jmp
test
dec
fnstenv
push
in
add
cmp
js
nop
mov
push
repz
sbb
jnp
pop
in
and
mov
xchg
imul
lahf
mov
pop
sbb
xorl
cmp
cltd
rorl
xchg
adc
mov
in
xchg
loope
jae
xchg
lret
stc
int
stos
jle
sbb
fmull
cmp
mov
clc
clc
or
popf
pop
dec
jle
loopne
add
out
mov
rcl
fimull
and
fs
mov
adc
into
adc
in
imul
stc
xlat
jns
mov
cmp
insl
fadds
mov
mov
insb
outsb
sbb
sub
adc
mov
add
dec
add
cmp
pop
out
out
mov
pop
pop
ja
movl
arpl
mov
cs
out
lea
ja
clc
cmc
imul
cmp
jp
cmc
add
pusha
lea
jmp
pusha
pushf
push
movb
movl
pushl
movl
call
jge
sbbb
and
xorb
jle
mov
xor
xchg
daa
pop
adc
push
inc
xchg
jno
loop
je
push
add
lods
inc
enter
bts
lea
leave
push
xor
pushf
adc
dec
xorb
jb
mov
cmp
bound
xchg
jle
dec
aad
or
jns
xorl
fadds
jno
je
pushf
jmp
pushf
movw
pusha
xchg
pushf
call
jmp
jmp
sbb
and
xor
inc
outsl
lea
xor
pop
jg
mov
inc
add
adc
jo
jne
jbe
fs
cmp
outsl
pop
sub
mov
mov
test
inc
fadds
stc
mov
and
jnp
cltd
ret
sub
gs
adc
cli
ss
xchg
enter
and
or
xor
add
push
lea
lds
inc
mov
lret
pop
xchg
jecxz
test
mov
dec
outsl
stos
scas
out
mov
fcoml
and
je
push
cmp
pusha
pushl
call
out
push
pop
mov
cltd
sbb
pop
jge
test
jmp
pop
jg
imul
and
or
inc
iret
mov
jp
sbb
xor
lods
cltd
cmpsl
cmp
xor
loope
mov
imul
or
sub
notl
icebp
sub
jp
lahf
call
dec
push
mov
dec
pop
nop
mov
fnsave
pop
add
dec
insb
gs
outsb
imul
add
lcall
lahf
and
subl
movsl
mov
call
inc
cwtl
sbb
movsb
jmp
sub
arpl
sbb
add
jb
sub
dec
jo
dec
imul
pusha
fiaddl
dec
cmp
popf
insl
scas
jmp
sbb
add
jle
test
adc
sub
cmpsl
mov
dec
dec
push
insb
jo
mov
xchg
ficoms
clc
sbb
sbb
push
jp
mov
cs
mov
fcmovb
dec
fimuls
loope
or
data16
mov
mov
or
sub
inc
jp
scas
rcr
push
ficoml
popf
out
jno
fwait
or
push
add
lods
sahf
jge
enter
sbb
dec
jp
add
push
sub
inc
lods
das
int
and
cwtl
xor
fs
dec
xor
add
jno
leave
in
pushf
sbb
and
cmp
nop
lods
push
ret
push
mov
jne
mov
inc
xlat
and
cmp
xor
roll
pop
sbb
pop
pop
jg
mov
fidivrl
cld
or
fnsave
icebp
adc
dec
jnp
rcl
out
sub
mov
adc
dec
aad
data16
ret
fidivl
jnp
xor
fsubrp
and
daa
dec
inc
or
or
ffree
or
out
cltd
rcl
or
xchg
lods
aad
or
fidivrs
push
jb
movsb
not
pop
jmp
xchg
aaa
push
push
xchg
pop
push
in
adcl
mov
call
push
inc
jl
mov
pop
pop
pusha
scas
aas
hlt
inc
sbb
cmc
jmp
dec
jo
arpl
loop,pt
and
pop
into
insb
xlat
mov
data16
nop
sub
jecxz
scas
mov
xchg
xchg
and
jb
rol
test
fdiv
adc
jl
mov
pop
orb
xor
jmp
mov
jne
xchg
mov
xor
mov
add
xor
mov
sub
shr
adc
daa
ret
cltd
mov
mov
and
loope
mov
sbb
xor
xchg
loop
mov
push
cs
sbb
and
pop
pop
xchg
mov
cmp
xchg
cltd
mov
mov
fdiv
sbb
outsb
and
adc
cmp
mov
sub
jb
sub
fstpl
cltd
sbb
mov
dec
mov
or
sbb
nop
sub
xorl
loope
cmp
dec
fldl2e
insb
shr
cltd
and
dec
aam
adc
imul
addl
adc
frstor
push
sahf
cmp
jne
test
or
pop
xchg
cmpsl
filds
pop
aas
outsl
ja
cmpsl
shl
mov
fdivrs
mov
mov
rcr
cmc
repz
mov
repz
sub
push
add
test
cmp
ds
mov
setl
mov
popf
rcll
adc
shrb
inc
lods
shll
sbb
add
movsb
xchg
loope
or
in
mov
push
pop
cmp
push
adc
mov
imul
dec
mov
ljmp
outsl
xchg
vpsubsw
std
sub
popf
leave
std
mov
fxch
push
aam
dec
push
pop
pop
sub
das
jge
lea
dec
imul
push
push
push
xchg
pop
dec
sahf
and
push
ds
mov
lahf
shll
xlat
insb
dec
push
cld
jg
out
rorl
add
ret
call
push
loopne
imull
sbb
test
add
xchg
and
incb
or
movsb
fdivrs
xchg
fwait
popf
add
icebp
pop
push
or
mov
jb
je
fidivs
mov
cmpsl
aad
inc
js
mov
iret
std
adc
mov
popa
mov
lods
stos
dec
test
sbbl
icebp
nopl
inc
jns
aam
lds
jns
nop
in
adcb
and
mov
mov
push
push
add
push
xchg
gs
add
fdivrl
jnp
mov
sub
aaa
leave
out
movsl
adc
ret
adc
push
sbb
push
iret
push
jae
mov
in
outsl
movsl
fstl
xchg
jecxz
and
sbbb
pop
test
pop
les
test
add
ret
and
ljmp
mov
adc
test
out
mov
or
mov
es
rcl
loopne
dec
pop
arpl
nop
aam
lods
loopne
jb
aas
pop
xchg
notb
daa
mov
ja
lret
push
xor
lds
shll
stc
xchg
nop
test
pop
jle
adc
cli
xor
stc
aad
stos
jae
sti
mov
sbb
pop
nop
shr
lock
and
sti
and
sbb
or
and
pusha
xorb
je
int3
test
mov
and
jns
mov
test
sbb
movsl
leave
adc
aaa
addl
mov
gs
inc
ret
mov
jg
imul
mov
mov
sbb
xlat
shll
imul
mov
dec
xorl
jg
and
test
and
push
push
xchg
imul
mov
xchg
cmc
ja
jecxz
dec
xchg
orl
jns
mov
cmc
sbb
xchg
mov
jbe
mov
loope
inc
adc
xchg
mov
jo
cmpsl
adc
adc
jp
cmp
dec
test
and
cmpsl
cli
ror
aam
dec
add
arpl
add
xchg
scas
ljmp
dec
pop
mov
add
dec
pop
mov
mov
add
pop
loopne
sub
push
pop
jle
scas
mov
rcr
add
pop
insl
out
idiv
bnd
mov
pop
sbb
fdiv
xchg
in
neg
scas
pusha
repnz
insb
stos
jno
lahf
sbb
xor
in
in
jge
in
cmc
mov
xor
push
ss
or
mov
gs
das
xor
sub
pop
sbbb
mov
mov
cmp
mov
push
push
popa
imul
sub
stc
jmp
mov
clc
test
pushf
call
inc
scas
mov
push
call
push
push
outsl
cmpl
loopw
fidivs
lcall
mov
push
fisttpll
cmpsb
aas
jno
dec
jne
mov
mov
leave
addr16
jnp
mov
and
aaa
sbbl
xlat
sub
sub
pop
pusha
bound
xchg
scas
outsl
pushf
xchg
and
pop
pop
jb
adc
movl
cmp
js
mov
push
insb
je
mov
test
rol
cli
or
pop
out
and
sbb
js
mov
in
and
stos
mov
std
mov
std
jg
cmp
xchg
mov
push
roll
aaa
mov
push
jp
sub
scas
ljmp
or
je
popa
repz
test
fs
lea
andl
jbe
mov
or
and
jbe
mov
mov
inc
insb
xchg
mov
add
hlt
jbe
jle
inc
xchg
mov
clc
or
sub
xchg
lods
fmuls
push
ret
iret
push
pushf
call
repz
cltd
lret
sti
mov
xchg
mov
xor
xor
mov
jnp
pushf
lock
mov
out
cltd
jbe
int3
sbb
aas
mov
lods
xchg
adc
xchg
data16
popa
cltd
fdiv
lret
popf
out
insb
inc
cmc
cli
and
sub
pop
imul
xchg
outsl
or
xchg
xchg
sar
xor
jb
adc
sub
fldln2
adc
mov
cmpl
xor
cwtl
andl
add
cmp
xchg
test
rdmsr
cmp
pushf
inc
lcall
outsl
inc
adc
sbb
cs
lods
divb
cltd
xor
jmp
out
repz
jle
js
pop
sbb
add
dec
aam
mov
cmp
pop
fbstp
cmp
std
and
inc
mov
jb
les
and
lea
lahf
stos
fists
cmp
lret
add
in
mov
sti
jno,pt
add
ljmp
mov
shl
sti
mov
push
mov
pop
jne
call
pop
xchg
cmp
fcmovnu
loopne
sar
test
and
lods
scas
cmc
jnp
fisttpl
and
sar
out
inc
sub
or
sub
dec
add
sbbb
mov
mov
arpl
cmp
add
inc
jb
ja
imul
loop
std
sbb
pop
jmp
sbb
popa
jae
lahf
cmp
push
in
jbe
jge
pop
dec
and
nop
sarb
inc
stc
mov
mov
push
mov
rorb
inc
repnz
sub
ret
adc
adc
jae
push
jb
pop
cmp
xchg
data16
jle
loope
cmp
insb
je
aam
adc
mov
push
popf
int
or
mov
insl
jae
stc
pop
adc
insl
outsl
stos
rol
cld
push
sub
dec
into
int3
hlt
xor
add
push
xlat
jmp
jno
push
xchg
lret
inc
ret
cltd
and
daa
stos
push
mov
movsb
adc
jmp
inc
jo
iret
jb
mov
and
pop
cltd
aaa
mov
out
test
cltd
mov
sar
mov
ret
ret
repz
aas
pop
xchg
roll
pop
inc
inc
mov
sarb
cmp
lcall
test
inc
jecxz
das
ret
in
out
or
push
dec
popa
fwait
aad
add
mov
push
ret
xchg
sbb
xchg
stos
xchg
out
ret
push
jl
nop
lcall
pop
push
lret
pop
mov
sub
adc
idivb
push
out
shlb
loopne
ja
xor
loopne
shr
fnstsw
sti
pop
sbbl
inc
pop
jne
test
push
test
mov
sarl
in
mov
mov
sbb
pop
cwtl
mov
bound
jg
ret
leave
jecxz
sti
stc
and
test
imul
adc
js
ds
test
sub
mov
negb
pop
inc
ja
jp
push
ss
push
jmp
lret
mov
dec
insl
pop
les
mov
adc
push
or
jo
push
pop
cltd
mov
lods
out
mov
jb
jo
xchg
std
pop
sahf
and
sub
std
jge
cmp
dec
ficoml
sub
data16
cmpsb
push
inc
inc
mov
sarl
push
sti
ss
dec
cmp
fidivrs
and
jmp
in
xchg
jne,pt
loop,pt
jg
ffree
fcmovnu
faddp
mov
fidivrl
jg
sbb
lcall
imul
pop
fiaddl
jb
cmp
aas
lock
ret
adc
sbb
add
cli
jnp
test
or
and
add
adc
sbb
lahf
cmp
jge
std
or
cmp
les
subb
sub
add
jl
idivb
mov
cmpl
movsb
fstl
sbb
mov
add
jne
inc
fwait
sbb
test
push
push
jl
mov
ss
xor
imul
jns
cli
cmp
sahf
mov
fldcw
fcomi
push
test
dec
rolb
cltd
add
loop
cs
pop
add
push
lret
in
popf
daa
loopne
inc
inc
pop
js
out
loop
add
stos
insb
popa
test
or
inc
bound
outsb
mov
imul
sub
sbb
gs
jo
sbb
es
pop
scas
push
cmpsl
mov
scas
mov
mov
pop
mov
pop
scas
call
gs
mov
ret
mov
pop
call
in
sub
out
cmpb
lock
mov
push
insl
pop
stos
in
test
and
loopne
in
sbb
out
inc
repz
or
jnp
mov
dec
cmpsl
sbb
jo
leave
filds
push
mov
xor
jnp
ljmp
pop
inc
pop
lock
or
sbb
call
mov
aas
push
sub
rolb
push
cs
out
mov
add
lea
lea
and
inc
bound
int
in
mov
test
mov
add
mov
jb
inc
push
push
or
leave
movsb
lea
mov
lret
cmpsl
push
dec
mov
inc
addr16
test
inc
cmpsl
fldt
jmp
jge
int3
data16
sahf
or
rcrl
mov
mov
xor
sbb
lahf
fiadds
add
inc
xor
inc
mov
sub
enter
out
or
daa
or
sub
mov
mov
mov
addl
add
inc
and
jmp
pop
addl
daa
popf
mov
in
enter
into
xlat
imul
les
mov
add
sbb
and
xchg
stos
mov
and
push
insl
sbb
stc
jo
dec
enter
xchg
mov
cmpsl
cmp
mov
test
test
add
js
add
push
sahf
lcall
ret
inc
lahf
ret
in
adc
stos
mov
mov
lods
movsb
cmp
xchg
and
adc
inc
xchg
push
mov
lret
push
xchg
popa
mov
fbld
loop
movsb
xchg
xor
out
mov
cmpsl
xchg
ret
mov
inc
cwtl
nop
xchg
int
dec
mov
lahf
in
ret
cs
mov
add
loopne
popf
jecxz
sub
sub
mov
jmp
repz
inc
sbb
daa
call
scas
sub
pop
and
mov
push
push
adc
mov
adc
mov
inc
jo
or
in
push
sarb
add
lahf
movsb
lods
dec
ret
add
sbb
xchg
add
push
pop
inc
test
xchg
xchg
xchg
or
pop
nop
test
loope
dec
data16
dec
ret
lods
mov
mov
jmp
adcl
inc
mov
xchg
xchg
fisttpl
sbbb
insb
and
std
sub
les
add
mov
add
lea
xchg
xchg
roll
inc
dec
adc
dec
cmpsl
nop
inc
lods
testb
inc
imul
fadds
mov
ret
ret
cltd
in
sbb
out
xchg
lahf
movsb
cwtl
add
mov
push
rol
lcall
clc
ret
sub
sarb
mov
int3
popf
add
push
divl
inc
sub
push
xchg
pop
inc
jb
ret
jg
xchg
or
mov
daa
rorl
repnz
addr16
daa
mov
xor
js
adc
stc
add
push
out
fwait
and
adc
xchg
pop
add
stos
xchg
ret
mov
sbbb
xchg
add
xchg
cmpsb
xchg
orl
lahf
ret
sarl
dec
pushf
mov
jnp
pusha
test
ds
mov
in
and
inc
mov
js
popa
jle
jo
xchg
enter
negl
loopne
sbb
mov
or
jl
sarl
push
sahf
pop
add
dec
adc
je
cmp
shlb
xchg
cmpsl
fildl
mov
jbe
gs
mov
xchg
jle
mov
or
sbb
lahf
inc
lcall
mov
jmp
dec
test
test
fildl
je
pop
shll
faddp
jo
or
test
xchg
push
cld
call
push
add
sub
or
adc
das
mov
iret
and
test
or
cmpsl
mov
movsl
popf
test
addr16
gs
or
xchg
fcomps
inc
std
add
mov
add
test
daa
xchg
mov
shlb
add
sbb
cmpsw
cmpsl
sub
adc
sahf
mov
shl
shlb
into
jmp
lcall
or
jl
es
inc
lds
mov
popf
out
mov
call
shlb
xchg
addl
add
ret
ret
add
push
daa
aam
arpl
adcb
test
push
les
push
pop
popf
add
mov
add
mov
cmpsl
sbb
leave
push
in
mov
mov
repz
jb
popf
sti
daa
xchg
push
and
xchg
add
xchg
dec
sbb
call
adc
jo
push
add
sub
out
mov
lds
pop
xchg
out
cmpsl
add
push
pop
nop
mov
cltd
adcl
ret
fadd
nop
mov
test
push
xchg
xchg
xchg
or
scas
shlb
and
adc
sub
xchg
mov
jp
add
lret
lcall
call
orl
enter
inc
dec
call
mov
dec
lods
sub
xchg
adc
mov
lea
mov
xchg
int
mov
nop
cwtl
jle
in
mov
pop
push
orb
dec
nop
mov
gs
adc
loopne
and
out
mov
call
pop
nop
xchg
enter
mov
inc
or
lret
lret
and
sbb
out
adc
add
push
mov
jno
mov
lahf
add
inc
leave
dec
pushf
sbb
sub
xor
xchg
xchg
jns
cwtl
cmpl
jle
loopne
in
inc
cwtl
inc
or
pop
push
enter
xchg
jns
inc
add
dec
out
enter
test
nop
mov
jle
xchg
add
dec
inc
adc
sahf
pop
adc
cltd
gs
pushf
inc
lahf
enter
rorl
and
rcll
inc
aaa
xchg
addr16
pushf
loope
jo
shll
daa
cli
enter
fisubs
fsubrs
xlat
xchg
inc
leave
mov
adc
xchg
mov
sbbb
xchg
orl
test
sub
push
or
xor
dec
loop
sbb
xchg
ss
push
push
adc
adc
xchg
pusha
xchg
pmaxub
mov
and
pop
xchg
adc
scas
call
push
pushf
jno
pushf
xchg
in
cmpsl
test
add
lcall
xchg
adc
xchg
lahf
or
add
inc
js
pop
or
xchg
xchg
pop
xor
cmp
mov
add
mov
scas
ljmp
cmc
adc
popf
lcall
add
add
call
pop
cld
inc
jo
push
nop
or
push
add
dec
xchg
stos
add
mov
xchg
xchg
xchg
xchg
addb
dec
mov
add
movsb
push
and
movsb
lret
rcll
add
sub
add
call
loopne
dec
push
adc
out
ss
test
lcall
jne
call
mov
sbb
or
test
xchg
into
and
lret
scas
push
out
imul
jle
mov
call
xchg
out
test
pop
roll
rcrl
push
les
js
sub
and
jbe
add
mov
xchg
push
push
jo
aaa
nop
mov
xchg
inc
shrl
out
out
movsb
repz
into
pushf
xchg
dec
mov
ja
xchg
out
pushf
push
xchg
inc
dec
repnz
xchg
sub
push
inc
xchg
pop
add
test
jb
inc
pushf
int3
loop
addl
rolb
fsubrl
xchg
dec
call
xor
ret
sub
cmpsb
inc
dec
pop
call
xchg
mov
inc
push
sbb
sub
nop
dec
cmpsb
call
mov
and
test
inc
cmpsb
or
roll
xchg
cld
mov
addr16
dec
inc
mov
mov
mov
cmc
or
xchg
mov
gs
test
xchg
xchg
adcl
mov
adc
call
pop
data16
hlt
or
dec
sub
pushf
add
loope
adc
enter
mov
lahf
mov
inc
lods
push
xchg
or
in
push
addr16
mov
js
push
mov
ret
scas
push
adc
iret
sub
dec
sarl
bound
subb
and
rorl
nop
add
imul
movsb
pop
dec
subl
enter
insb
mov
fldcw
push
lea
or
popa
movsl
call
cmc
cmc
xchg
out
out
lds
sbb
inc
pop
mov
inc
loopne
xchg
xchg
imul
push
stos
enter
test
add
add
cmp
rolb
and
xchg
inc
cmpsl
pop
dec
fsub
jae
nop
leave
dec
daa
pop
cmpsl
push
mov
enter
cli
dec
pop
movsl
nop
rcrl
bound
nop
rorl
sub
mov
mov
push
or
in
dec
call
add
or
clc
push
pop
gs
xchg
sbb
mov
movsb
lret
daa
daa
inc
cwtl
dec
popf
lds
pop
out
out
push
push
sub
sahf
and
nop
out
xchg
test
popa
cmp
nop
daa
rcrl
mov
sti
add
sub
xchg
popa
mov
mov
cmpb
and
movsb
test
or
xchg
push
mov
out
mul
sub
js
pushf
fdiv
fiadds
les
xor
cmpsb
hlt
ret
and
out
or
enter
add
out
dec
mov
push
testb
adc
pusha
lea
jae
push
enter
mov
inc
jnp
dec
out
dec
dec
add
mov
movsl
aam
or
or
xchg
daa
cwtl
sub
outsl
xchg
fwait
test
gs
push
movaps
push
push
out
or
xchg
xchg
test
sbb
shlb
dec
out
inc
loop
pop
xchg
incl
jno
xor
xlat
inc
mulb
imul
push
sub
dec
int3
cltd
xchg
xchg
pusha
cltd
outsb
shlb
pop
nop
push
orb
lea
lock
ret
je
cltd
cmpsl
adc
scas
sub
iret
adc
daa
adc
mov
pusha
test
inc
mov
cmpsl
test
in
mov
push
xor
push
mov
nop
pop
push
movsb
filds
or
lcall
loop
aaa
les
pop
adc
pushf
lea
sbb
xchg
cltd
popf
inc
push
cltd
pop
mov
dec
ret
or
inc
mov
scas
mov
push
jge
mov
sub
and
leave
adcl
dec
clc
pop
push
daa
dec
push
sub
aad
add
mov
add
xchg
mov
push
nop
lea
xchg
test
pop
insb
fs
pushf
icebp
sbbb
mov
sub
inc
and
inc
sbb
xor
xor
addl
sbb
pop
jo
add
sbb
pop
int3
outsb
inc
pop
lahf
mov
or
push
mov
mov
fimuls
mov
bound
or
xchg
or
inc
loope
fistl
imul
mov
mov
test
roll
jo
dec
mov
xchg
call
test
lcall
xchg
and
lret
inc
scas
sbb
dec
imul
bound
dec
and
mov
mov
xlat
ficompl
inc
or
andl
adc
sub
cwtl
add
sbb
push
xor
inc
cmpsl
aad
mov
mov
shlb
adc
test
push
mov
int3
lea
xlat
adc
mov
cs
popa
loop
stos
inc
mov
dec
data16
es
enter
mov
mov
dec
dec
insb
pop
insb
mov
andb
rcr
pop
pusha
add
sbb
push
or
mov
inc
repnz
les
ret
addb
add
sarl
jl
call
adc
mov
test
or
or
test
fs
dec
pop
adc
int3
addl
mov
cltd
or
cwtl
fcoms
inc
in
jle
nop
add
rol
and
loopne
inc
or
cmp
xorl
std
inc
lock
dec
loopne
dec
pop
dec
inc
aad
icebp
dec
sbb
sbb
mov
lea
xlat
jbe
cmp
jmp
or
orb
mov
jl
adc
lret
ljmp
add
xchg
inc
adc
ret
icebp
dec
mov
enter
les
add
or
inc
dec
cmp
jne
mov
adc
xchg
or
int3
sub
enter
lea
push
push
xlat
mov
icebp
sbb
shrl
fsts
cltd
movsb
ror
jmp
xchg
call
jl
insb
cmp
fs
mov
orl
test
or
sbb
shll
shl
adc
adc
cmpb
xchg
dec
mov
nop
jg
das
adcl
cltd
in
mov
push
adc
ret
jnp
push
das
nop
daa
dec
adcb
adcb
dec
je
pop
jp
sbb
xchg
or
sbb
cmp
lahf
mov
mov
imul
pop
data16
jno
cmp
je
call
mov
out
les
sbb
xor
add
cld
pop
push
xchg
add
stc
lahf
xchg
test
in
mov
dec
xchg
cmp
jno
sti
jb
popa
clc
dec
inc
or
xchg
mov
inc
jno
cld
mov
jp
add
sbb
enter
push
mov
in
out
mov
movsb
sahf
push
add
inc
mov
adc
push
sbb
lahf
dec
mov
mov
adcl
out
insb
lret
mov
push
xchg
sbbb
add
aas
cltd
push
or
enter
sbbl
test
jle
or
jecxz
jl
sub
jns
dec
inc
xchg
pop
pop
sbb
xchg
mov
xchg
xchg
sbb
sti
enter
cwtl
push
mov
icebp
out
adc
dec
sbbb
add
sbb
and
fwait
pop
dec
lcall
push
adc
ljmp
je
sub
xchg
test
sti
gs
lret
cld
pop
jae,pt
jnp
sbb
push
test
nop
and
mov
shll
inc
xlat
sbb
mov
imul
cltd
aad
xor
addr16
xchg
xchg
fildl
push
inc
adc
sbb
pop
jle
sbb
cmp
dec
adc
xchg
or
je
das
add
push
fwait
sub
lds
movsb
jno
sbb
xchg
jge
dec
jmp
fidivl
and
fndisi(8087
dec
lret
add
sub
cs
insb
in
addr16
add
cltd
gs
invd
in
xchg
fstpt
fwait
sarb
daa
popa
jmp
test
pop
push
out
jnp
jno
bound
arpl
mov
imul
shll
testl
sub
les
mov
pop
loope
popa
inc
orl
lret
fwait
dec
lcall
arpl
inc
pop
dec
aad
sbb
pand
imul
test
pop
dec
push
and
ds
addr16
and
adc
call
add
and
pop
dec
andl
mov
mov
dec
popa
mov
stc
xor
fistl
push
pop
xchg
movl
loopne
inc
and
aad
fcoms
cwtl
inc
sbbb
xchg
add
pop
pushf
xchg
mov
out
lahf
das
test
xchg
rorb
mov
subl
fwait
andl
mov
xchg
adc
mov
and
pop
subl
addr16
and
mov
push
sub
cltd
push
xchg
xchg
cmpsl
mov
daa
jb
inc
cmp
sub
jp,pt
add
pushf
sbb
push
mov
orl
mov
lds
sar
xchg
xorl
movsb
mov
sbb
add
push
lea
mov
popa
cwtl
dec
movsb
bound
adc
insb
dec
xorb
or
mov
popa
movl
les
ljmp
je
xchg
or
test
test
test
xor
les
sbbb
adc
xchg
cmp
popl
xchg
popa
push
bound
pop
fs
sbb
dec
cwtl
js
fs
divl
adc
cmpsl
dec
xchg
and
mov
gs
lahf
decb
cmpsl
ja
mov
xchg
shlb
fistpl
cmc
push
or
stc
mov
pop
test
fwait
addl
je
push
push
test
fcomps
add
mov
add
xchg
shl
or
fists
or
push
xchg
repz
push
loop
insl
adc
rolb
sbbl
mov
jns
fisttps
sbb
mov
int
xorb
add
orl
hlt
or
mov
bound
dec
mov
sub
jnp
fisubl
mov
or
adc
xchg
mov
sub
xchg
push
es
adcl
adc
aam
pusha
push
mov
arpl
int
pop
arpl
xchg
sbb
out
mov
xchg
adc
popl
pop
xchg
adcl
mov
push
pop
jge
mov
arpl
xchg
adc
and
data16
ds
sub
sub
sub
dec
jb
xchg
add
sahf
mov
dec
mov
mov
out
clc
mov
cmpsl
xchg
aaa
xchg
xor
sti
push
add
fdiv
cld
xchg
movsl
data16
test
xchg
les
xchg
shlb
sbb
insl
inc
out
ljmp
xchg
test
gs
scas
in
add
and
ret
cmp
push
mov
mov
aam
xchg
arpl
js
shrl
orl
xor
add
push
lcall
inc
xchg
jb
mov
and
or
and
or
and
mov
push
xchg
sub
outsb
cwtl
xchg
push
insb
daa
fwait
roll
mov
push
add
lahf
adc
mov
pop
cmp
pop
or
mov
lock
cltd
cld
inc
xchg
bound
cmp
xor
dec
lahf
fdiv
cltd
mov
pop
lods
xchg
lods
xchg
pusha
mov
mov
adc
xchg
gs
pop
jb
out
lahf
jmp
cltd
or
add
sbb
rcrb
cltd
repz
mov
mov
arpl
into
mov
dec
pusha
pop
jae
cltd
or
sbb
inc
cltd
fistps
or
out
xchg
jecxz
pop
mov
mov
push
ret
cmpb
xchg
in
xchg
rcll
aas
lahf
mov
ffreep
mov
pop
call
outsb
or
add
push
xchg
lock
jg
sub
ret
setno
lea
add
lahf
xchg
pushf
dec
ret
cwtl
mov
xchg
adc
lahf
inc
mov
movsb
xchg
push
insl
mov
lahf
mov
xchg
int
xor
lahf
sbb
repnz
lahf
fwait
pusha
test
mov
lahf
outsl
js
inc
into
test
fsubrp
test
sbbl
push
ret
add
push
jmp
mov
cmpsl
fistl
out
ss
mov
push
test
shrb
mov
cmpsl
test
movsl
stos
ret
xor
mov
inc
cmpsl
xchg
xorb
dec
test
in
test
je
mov
and
jmp
fsubs
cmp
mov
in
ljmp
fwait
idivl
and
pop
add
xchg
and
and
shlb
xor
or
jne
and
test
mov
xlat
inc
mov
fisttps
popa
cmpsl
inc
add
jbe
inc
nop
fwait
mov
das
fwait
cmpsl
or
xor
cmpsl
ret
jbe
inc
mov
js
cmpsl
sbb
hlt
ja
xchg
in
mov
stos
ret
cwtl
cmp
xlat
mov
mov
inc
shrl
dec
inc
xchg
push
in
add
negl
adc
xchg
sbb
fwait
and
xchg
add
rcrb
jecxz
icebp
ret
gs
sbb
push
hlt
mov
push
xchg
xor
pop
xchg
test
cmpsl
aaa
mov
push
adc
pop
ja
mov
subb
xchg
test
mov
xchg
sahf
cmp
lret
push
sbb
daa
push
dec
dec
xchg
add
out
rolb
jmp
mov
xor
out
xor
mov
loope
mov
xchg
push
repnz
je
push
adc
sbb
mov
or
int3
and
add
or
cmp
arpl
adc
arpl
adc
je
movb
addr16
sbb
dec
outsb
inc
out
jle
pop
xorb
xchg
inc
aaa
popf
stc
mov
filds
jno
addr16
jo
push
jo
jo
jo
sbb
jl
mov
xchg
pop
and
loopne
pop
and
sahf
ja
bound
xor
inc
and
outsl
loope
fisubl
xor
xchg
pop
and
arpl
inc
and
pusha
pusha
adcb
pop
lea
fwait
dec
mov
mov
sbb
cwtl
jge
add
notb
loope
negl
inc
les
push
push
cwtl
jge
xchg
cmp
imul
outsb
sets
xchg
adcl
push
imul
inc
inc
add
pop
cmpsl
lret
daa
jge
inc
js
xor
fcmovb
daa
aam
test
pusha
inc
andb
popa
loope
rcr
rcrl
jge
mov
xchg
sbb
ror
push
push
xlat
sbb
cli
aas
and
pop
addr16
pop
sbb
push
add
scas
mov
fcompl
xchg
cwtl
sub
dec
es
cs
and
cmp
mov
add
test
pop
rorl
jecxz
mov
pushf
push
popf
js
test
sub
push
jge
cwtl
andb
inc
jbe
jae
fidivrs
and
add
mov
movsl
inc
rorl
mov
popf
push
pop
or
popf
mov
jl
and
add
ret
cli
iret
add
cmpsl
pop
sbb
sbb
lcall
loop
fisttpl
jmp
jb
cmp
jp
pusha
jg
mov
xlat
pusha
mov
lahf
xorb
cmp
jnp
add
rcrb
cmp
add
leave
cmp
or
add
xchg
xor
adc
inc
push
dec
test
fmull
xchg
push
push
out
movsl
aaa
inc
ret
cmp
mov
icebp
pusha
popf
inc
jbe
inc
sub
fwait
add
sahf
sbb
rolb
mov
sub
sbb
xchg
and
cmp
loop
fidivl
sbb
fimull
addr16
xchg
adc
sbb
roll
push
jo
loop
or
iret
sbb
or
cmp
hlt
mov
into
dec
inc
and
ret
sahf
inc
popa
popf
incb
xchg
sete
add
dec
mov
sahf
pop
pusha
mov
je
or
cli
add
push
jb
or
lret
shrb
aaa
mov
fistps
dec
xchg
push
inc
incb
dec
out
push
icebp
fs
add
lcall
xchg
push
mov
pushf
stc
mov
sbb
sbb
adcl
vminss
in
xor
jno
jp
cmp
popf
in
add
adc
daa
and
or
ds
cmp
pop
cli
xor
push
mov
in
repnz
mov
ss
adc
sbb
add
push
add
inc
ds
je
loopne
std
test
mov
inc
cmp
or
cwtl
xchg
xchg
ficompl
test
add
icebp
in
adc
daa
inc
cli
popa
dec
daa
imul
lret
and
jg
mov
pop
in
cmp
cmp
xchg
jnp
aas
mov
xchg
pop
test
test
aad
arpl
loopne
in
xchg
adcl
sbb
cld
or
test
imul
pop
cmpl
push
aaa
cmp
fiadds
popf
jns
jle
jl
dec
js
cmp
mov
add
adcb
fcom
pop
or
jb
sbb
pop
test
mov
or
pushf
mov
mov
xchg
pop
push
adc
xchg
xor
xchg
adc
rorl
fs
sti
mov
lcall
dec
rcrl
scas
add
mov
or
push
mov
lahf
mov
jb
xchg
pop
jb
clc
notl
xchg
dec
push
inc
sbb
push
fwait
pop
mov
or
movsl
push
sbb
fists
jp
sbb
xor
pop
testb
loopne
sub
fs
cmp
movsb
sub
pop
jo
jo
inc
stc
les
adc
xchg
add
inc
mov
sti
adc
sub
inc
repz
and
cli
add
jno
dec
arpl
pop
test
cli
pop
lcall
fnstcw
adc
or
sbb
xchg
insl
adc
mov
push
cltd
mov
lret
push
xchg
xchg
pop
ljmp
push
sub
cltd
jp
adc
dec
clc
xchg
aad
push
adc
repz
fwait
jge
sbb
push
addr16
idivb
mov
cmp
sbb
js
ficompl
out
es
jne
or
xor
int3
pop
leave
jns
icebp
inc
fbld
xchg
shll
and
ljmp
subl
jo
sbb
repnz
pop
dec
aad
xchg
jp
mov
sbb
push
imul
lcall
rorl
fs
cmp
cli
addl
sub
jo
pop
cmp
cmp
test
or
loop
popa
lcall
sub
or
xchg
pushf
fiaddl
sbb
dec
ja
daa
pop
lret
pop
mov
xchg
popf
xchg
add
shll
loop
insl
fs
dec
lcall
inc
xchg
ret
popf
jmp
popf
add
jo
daa
decb
inc
popl
daa
push
les
lret
push
out
adc
lods
loope
shl
sti
inc
fmull
cli
push
and
test
imul
mov
cmc
xor
mov
adc
je
popf
mov
sbb
cmp
pop
ret
jne
xchg
mov
filds
sbb
arpl
sbb
nop
rorl
inc
push
add
and
sbb
cltd
mov
jg
adc
mov
dec
pop
imul
arpl
sbb
test
xchg
test
roll
adc
sbb
aad
mov
mov
xor
lcall
mov
xchg
push
push
ss
cwtl
pop
lret
or
sbb
cltd
dec
jbe
data16
push
sbb
pop
sbb
sbb
ss
xlat
pop
fisubl
into
fdivrl
test
inc
rcll
xchg
arpl
sub
out
fwait
cwtl
fiaddl
clc
sbb
lahf
fdivl
xchg
shrl
push
mov
pop
inc
jp
icebp
insb
mov
mov
enter
sahf
and
popf
mov
pop
addr16
out
mov
repnz
lcall
push
xchg
add
xor
dec
iret
sbb
repnz
sbb
aaa
xchg
push
cmpsl
mov
lahf
and
xchg
lahf
cmpsl
or
jle
jecxz
andb
cmpb
sbb
xchg
pop
ffreep
mov
sbb
movsb
jl
in
fsubrl
push
je
cmpl
lcall
jle
addr16
cltd
sahf
xchg
addr16
pop
mov
xchg
or
addb
sbb
xchg
adc
mov
inc
lahf
or
inc
or
test
dec
push
je
pusha
push
cmpsl
lret
movsb
dec
lea
add
addl
xchg
jl
xor
sbb
cmpsl
aad
add
test
adc
sbb
xchg
mov
adc
mov
sbb
jg
fildl
pushf
pop
cmp
cltd
rcrl
arpl
xchg
pushf
std
fwait
xlat
push
xchg
pop
add
xchg
insl
pop
sahf
adc
cmp
push
inc
js
pop
pop
jecxz
adc
lcall
repz
ret
repnz
push
inc
or
mov
movb
pushf
js
pop
mov
sbb
fimuls
insl
cmp
loop
push
add
inc
out
icebp
sti
jp
add
pop
pusha
inc
mov
test
cltd
pop
inc
into
int
pop
sbb
pop
pop
pop
rolb
adc
orl
mov
notl
addl
ret
xor
addr16
imul
into
adc
pop
repnz
outsb
adc
std
jge
pop
daa
imul
cmp
cwtl
mov
vunpckhps
mov
adc
fcompl
xchg
sbb
pop
inc
adc
lea
push
ja
mov
pop
push
jo
imul
cmpsb
repnz
mov
add
xchg
rcl
xchg
push
add
inc
jo
mov
push
xchg
mov
add
ds
cld
pop
iret
and
cmp
ja
stos
fcomps
ficoml
addb
sahf
adc
jp
mov
and
fwait
inc
or
cmp
mov
daa
adc
cmc
out
mov
arpl
pusha
pop
insb
jno
movsb
adc
leave
cmp
push
adc
popl
add
inc
inc
jbe
xchg
roll
into
inc
into
xchg
dec
ret
loopne
dec
mov
cmp
or
adc
xor
out
ljmp
inc
xchg
les
pop
cmc
add
repnz
cmc
addr16
mov
lcall
lds
cmpps
inc
or
dec
dec
pusha
sahf
call
out
cmp
sbb
push
inc
sbbl
jl
jle
jg
pop
xlat
fsts
sbb
cmp
cmp
dec
pop
test
fcoms
xchg
mov
mov
mov
jp
cwtl
push
fistpl
ja
lcall
lcall
push
pop
and
fcoml
push
mov
loope
mov
lcall
pop
les
xchg
ja
dec
or
adc
cwtl
mov
pop
test
mov
cwtl
jbe
xor
in
jecxz
aaa
out
ret
add
les
ret
loopne
bound
dec
push
repnz
mov
sbb
cmpsb
push
icebp
dec
add
std
lahf
fmuls
pop
adc
sub
push
pop
push
add
push
xchg
and
subl
push
jb
outsl
addr16
addr16
adc
or
push
inc
ja
addr16
sahf
fs
fwait
inc
lds
xlat
sbb
test
aam
std
pop
out
andb
rcll
fnstcw
outsb
movl
push
repnz
push
flds
loop
and
popf
mov
or
xchg
mov
pusha
sub
call
imul
jmp
int
dec
popf
stos
sub
fpatan
sub
pop
imul
push
ret
out
adc
cmpsb
and
jb
repz
push
lods
mov
in
into
mov
mov
rep
cmp
pop
repz
jo
insb
dec
les
fsubr
mov
sub
adcb
incb
stos
adc
and
xchg
fwait
mov
jmp
aaa
dec
adcl
jecxz
xchg
sahf
ficoml
mov
mov
cmpsb
mov
in
mov
test
cmp
stc
cmp
mov
jmp
les
inc
jl
fstpt
popf
adc
mov
into
fmuls
cmp
xchg
jnp
imul
xorb
mov
xor
xchg
dec
les
sbb
pop
pushf
and
cmpl
test
xchg
daa
lea
jne
call
xchg
std
adc
adc
fs
lret
add
cmp
xchg
imul
ror
fisttps
push
jns
jne
addl
xor
lea
leave
out
dec
mov
push
or
pop
loopne
ret
enter
and
jge
dec
inc
ret
jnp
lods
add
cmpsb
xchg
xchg
nop
jno
jb
cwtl
sub
lds
inc
pop
xchg
dec
sub
aaa
outsl
xchg
push
pop
imul
ret
mov
test
and
add
mov
mov
popa
cmc
cmovno
stos
leave
jmp
inc
jne
fwait
lret
mov
sbb
push
mov
fidivrl
bound
xchg
negb
in
inc
inc
inc
jb
sahf
and
add
fnsave
dec
int3
sbb
mov
add
push
and
cwtl
sbb
sbb
xor
push
into
and
je
scas
mov
loope,pt
fs
cwtl
xchg
xchg
adc
adcw
movsb
mov
cld
and
xchg
pushf
mov
call
xchg
insl
mov
push
pushl
add
pushf
pushf
pushl
lea
jmp
clc
out
daa
arpl
mov
mull
mov
out
and
je
stos
mov
inc
pop
clc
lahf
push
cld
push
jmp
pop
pop
jbe
jl
call
jno
faddl
jae
xchg
mov
or
out
jmp
in
xchg
adc
adc
in
or
outsb
mov
xchg
xchg
jo
in
int
movsl
cwtl
cli
stos
das
jmp
mov
movsl
cwtl
lods
inc
iret
mov
fiaddl
or
inc
jl
lods
loopne
sub
mov
xchg
xor
loope
dec
jge
push
sub
add
loope
dec
pop
xchg
lahf
mov
xchg
pop
mov
and
je
pop
pop
adc
scas
add
xor
sbb
mov
cmp
mov
xor
rorl
fcompl
add
cmp
loop
and
lods
ss
shl
cld
mov
mov
sahf
mov
fwait
jbe
and
add
mov
call
mov
inc
pop
popa
and
xlat
std
and
or
push
sub
mov
ds
data16
xchg
mov
xchg
popf
add
jne
repz
jb
push
dec
push
push
mov
xchg
lcall
fwait
icebp
jae
loop
pop
clc
mov
arpl
sbb
mov
xchg
adc
cmp
out
ret
ja
mov
inc
fistpl
outsl
dec
aad
fst
and
mov
outsb
jb
rol
ret
jecxz
nop
mov
fldl
daa
cmp
jnp
jmp
repz
dec
ja
mov
xchg
push
jne
movb
and
mov
add
pushf
mov
movb
pusha
lea
jmp
neg
sub
and
shl
sar
or
add
add
add
mov
rcl
rol
push
mov
movw
repnz
mov
push
pusha
jmp
mov
movb
mov
pushl
ret
mov
push
sbb
stos
mov
push
test
cmp
mov
js
add
sbb
sub
xchg
xchg
imul
xor
pop
imul
and
or
xor
das
mov
int3
sti
imul
adc
sub
pushf
mov
pop
mov
push
repnz
fwait
lahf
lret
out
dec
pop
jnp
mov
xchg
adc
cmp
add
pushl
pusha
movb
movb
lea
jmp
pusha
adc
pushl
push
pushf
lea
jae
push
push
lea
jne
pushf
stos
pusha
movb
lea
jmp
call
push
jmp
fcmove
mull
sub
int3
sbbl
popf
scas
mov
fwait
lret
sti
call
inc
es
je
outsb
sub
cmpsl
filds
push
lock
roll
das
lds
ret
jp
in
imul
cli
cs
repz
fcomps
cld
cmp
insl
and
push
fcomp
pop
outsb
dec
int
subl
insl
cmp
adc
sub
js,pt
inc
enter
or
cmp
mov
outsb
mov
sahf
aam
daa
inc
sahf
jl
inc
dec
gs
mov
in
and
andl
clc
stc
sub
cmp
aam
inc
btr
mov
call
jmp
rol
inc
mov
bt
jmp
aam
andb
mov
ds
jp
scas
int3
push
or
and
push
mov
repz
loope
mov
xchg
es
cmp
inc
sbb
push
sub
and
fsubrs
sbb
bound
mov
and
rorb
lret
insl
lock
sub
dec
add
push
push
idiv
sbb
out
fdivrl
cmpsb
fsubp
sahf
sub
adc
dec
cltd
and
cwtl
and
cltd
aad
sbb
inc
inc
jns
mov
in
or
inc
aad
cli
add
push
xchg
jno
fs
add
or
pusha
mov
xor
inc
das
aaa
pop
pop
push
in
add
inc
into
xchg
cmp
mov
dec
call
pop
and
stos
inc
aam
dec
mov
xchg
and
xor
cmc
fdivs
call
clc
or
cmp
xchg
in
or
fisubs
subb
jo
xor
sub
push
loopne
and
jno
mov
hlt
add
inc
je
pushf
enter
sbb
mov
push
ja
push
aas
lret
mov
mov
in
sbb
push
push
test
or
inc
ret
add
incb
mov
incb
push
xlat
movsl
xchg
cltd
mov
push
pushf
add
enter
mov
mov
stos
lods
out
ja
cmp
push
outsl
pop
call
dec
int3
je
mov
aam
int3
hlt
sbb
sub
lods
popf
sub
cmove
into
xchg
sub
pop
shr
jne
cltd
call
div
clc
or
sub
movsb
mov
or
push
pop
mov
nop
or
addr16
int
sbbl
loope
inc
imul
pop
sbb
stos
mov
sub
add
icebp
and
test
dec
jg
jo
push
lret
leave
loope
imul
xchg
cwtl
out
push
in
jb
push
xlat
lods
ds
scas
repnz
xlat
jmp
mov
aaa
movl
lock
fs
xchg
mov
je
mov
nop
icebp
sbb
xchg
push
push
pushf
call
setne
pushfw
rcr
mov
clc
jmp
pusha
lea
jbe
lods
cmc
neg
cmc
stc
xor
pusha
stc
ror
clc
call
push
cmc
sub
sbbl
loope
cmp
lea
push
js
in
insl
sub
aaa
push
push
mov
in
sub
imul
push
dec
and
dec
mov
jae
es
lea
adc
pop
mov
cli
ficoms
jmp
mov
in
scas
adc
pop
dec
shll
pop
and
add
lea
xlat
imul
ljmp
or
xor
jl
mov
add
cmp
test
push
push
inc
dec
xchg
and
inc
push
rolb
inc
pop
data16
xchg
popf
cwtl
cmp
addr16
or
or
push
jb
shl
dec
int
mov
mov
scas
xor
cli
pop
pop
push
lea
mov
int3
add
outsb
pop
fs
popf
aaa
ds
iret
add
pop
mov
dec
jge
orl
sti
or
adcb
scas
in
or
imul
xor
enter
and
xchg
mov
or
mov
mov
mov
adc
inc
mov
add
loopne
out
adc
dec
jg
loop
andb
sub
scas
idiv
jb
xchg
sub
hlt
loopne
inc
ret
pushf
cli
dec
fnstsw
dec
push
mov
push
cltd
mov
imull
pop
xchg
xchg
scas
mov
aaa
mov
sahf
mov
imul
mov
data16
pop
xchg
sbb
negl
loope
fnstenv
lret
mov
inc
dec
sub
mov
push
stos
jnp
sub
and
std
cmc
ds
cwtl
xchg
and
mov
jne
popa
push
aam
cld
cmp
mov
in
movsb
xchg
jle
cwtl
xchg
hlt
and
push
andb
inc
mov
int
movlps
aaa
pop
jnp
fcomip
pushl
outsl
mov
jge
push
mov
and
nop
mov
jb
cmpsb
mov
push
pop
xchg
enter
bswap
sahf
cwtl
add
xor
xchg
push
arpl
popa
fsubrl
inc
aam
jbe
enter
adc
mov
push
sbb
loope
sbb
jbe
stos
adc
add
icebp
pop
ficompl
inc
lock
leave
cmp
mov
addl
xchg
lret
out
inc
mov
add
lret
cmp
cltd
cmp
jle
mov
adc
xchg
rorb
andb
movl
lea
jns
push
pusha
movl
push
pusha
lea
jmp
lea
jne
push
bswap
mov
movw
cmp
jmp
ret
jb
aad
jl
sbb
mov
ss
movsb
mov
xor
xor
push
imul
jmp
int3
test
call
test
lds
aaa
ficompl
jns
xchg
sub
out
rcll
enter
cmc
movsb
xchg
xchg
push
test
xchg
test
mov
testb
int
stc
mov
sbb
or
fwait
xchg
adc
hlt
sub
cs
lds
call
lahf
fistl
aad
push
pop
push
addb
loopne
sub
dec
inc
sub
pop
jle
testb
xor
jle
mov
and
leave
sti
or
inc
out
fwait
movsl
daa
push
outsl
jno
cltd
stos
mov
cmc
adc
push
jns
mov
je
bound
push
dec
push
inc
leave
add
xchg
mov
pop
xchg
rorl
pop
stos
adc
repz
sub
mov
inc
cwtl
rcrb
jp
int
outsl
sbb
hlt
icebp
cmpsl
add
imul
xor
or
imul
icebp
adc
int
push
jb
repz
mov
orb
stos
repz
ja
mov
popf
jl
and
movups
jae
mov
fucom
or
mov
and
add
xchg
pop
add
xchg
and
leave
mov
adc
pop
cmp
pop
push
std
inc
add
or
fnstenv
adc
and
aaa
lret
and
xorb
sbb
addr16
mov
std
and
push
je
dec
aam
or
cmp
cmc
adc
pop
jno
movsl
loope
sub
out
mov
pop
insl
lahf
xlat
call
mov
adc
cmp
jl
mov
test
dec
lahf
and
add
mov
mov
sahf
and
rcr
movsl
cmc
xchg
dec
movsb
mov
hlt
stc
pusha
cwtl
out
lret
rolb
sub
push
cmp
and
jg
ljmp
jge
jb
mov
xchg
cmpsb
dec
loope
and
cmp
cmpsb
mov
cmp
jb
and
test
inc
sub
inc
insl
imul
dec
andl
pop
adc
xor
jno
pop
ja
mov
rcr
pop
or
repz
enter
pop
movsb
fs
call
xchg
jmp
data16
fimull
xor
imul
popa
xor
and
fimuls
mov
iret
xlat
add
aaa
cmp
xchg
scas
fucomip
comiss
fldl2t
adc
jg
roll
cmpsb
scas
jne
cmpsl
fcos
add
xor
xlat
fstp
cmc
mov
cmpsl
lcall
stc
dec
fadds
enter
stc
sub
jmp
xchg
cmpsb
popa
mov
push
outsb
pop
ret
stos
push
jae
jp
jns
lods
mov
push
and
mov
or
mov
aas
push
mov
sbb
xor
cltd
mov
loope
pop
aas
addr16
subl
in
add
push
stc
mov
add
xor
and
pusha
xchg
mov
and
xchg
mov
adc
cvtps2pi
imul
pop
fdivp
mov
sub
fs
bound
adc
pop
out
inc
pop
jmp
xor
adc
aad
test
jmp
xchg
xchg
xchg
jle
test
stos
push
jo
stos
ja
cmp
dec
mov
fwait
mov
je
into
add
push
lock
push
mov
mov
cwtl
cmp
daa
and
push
dec
dec
ficompl
sahf
aam
and
je
pushf
mov
mov
cmovns
inc
jmp
sub
in
lret
popl
mov
sub
inc
inc
rclb
adc
call
push
fsubp
inc
in
inc
xlat
pop
sbb
inc
dec
es
cmp
inc
hlt
repz
and
mov
jns
mov
cwtl
xchg
clc
jp
pusha
movw
lea
jae
pusha
stc
clc
bt
cmp
movl
lea
ja
seto
setge
setp
inc
jmp
push
cmc
and
adc
ficoms
jo
xchg
movsb
fdivr
adc
je
mov
mov
adc
imul
ret
fsts
into
mov
jae
and
fs
or
decb
sub
insb
movsb
mov
xor
pusha
test
sub
aam
bound
sbb
pushf
mov
cld
push
sub
cmpsb
movsb
mov
push
loop
xor
cmp
mov
clc
enter
push
xor
sub
shlb
and
popa
inc
loopne
in
stc
test
xchg
shl
je
jecxz
cmp
leave
push
xor
mov
xchg
and
inc
je
enter
adc
sub
in
in
cmpsb
sub
hlt
xor
insl
lea
xor
mov
ficomps
xlat
ljmp
imul
divl
mov
cltd
mov
xchg
ss
aam
or
jle
ret
hlt
push
push
cs
pop
jl
outsb
cwtl
adc
repz
ret
mov
lock
inc
xchg
jae
in
sub
pop
cs
add
in
lock
ja
or
adc
adc
jmp
cwtl
rorb
push
and
mov
pop
mov
inc
push
adc
in
outsl
cltd
lret
lcall
and
inc
xchg
test
icebp
and
test
dec
jns
mov
xchg
and
dec
and
pushf
pushf
mov
movw
mov
bswap
pusha
mov
mov
pushf
pushl
ret
push
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
or
imul
sbb
push
pop
jo
int3
into
aam
adc
inc
or
or
inc
jmp
add
repnz
mov
fiaddl
sub
jno
jg
sbb
jecxz
daa
iret
jmp
sub
cmp
jnp
lcall
and
adc
testl
inc
insb
jo
cwtl
aam
hlt
mov
xchg
aas
testb
inc
push
push
xor
cs
insb
add
add
je
outsl
fs
gs
imul
add
add
dec
outsb
push
arpl
leave
lret
std
and
ljmp
lea
mov
fndisi(8087
sbb
lods
mov
ret
inc
cmpsb
adc
es
mov
mov
gs
push
dec
test
sub
cwtl
sub
xchg
adc
and
sbb
pop
mull
pop
pop
pop
xor
aad
mov
mov
imul
mov
insb
cwtl
xlat
insb
wbinvd
pop
sbb
in
or
ficoms
aaa
xchg
pushl
xor
hlt
cmp
jnp
ds
scas
out
and
push
push
pop
jb
mov
adc
sbb
sbb
inc
jne
jge
rol
or
lcall
push
aaa
mov
outsb
subb
lock
daa
mov
inc
je
push
jg
sbb
jmp
movsl
mov
jp
pushf
hlt
mov
jne
lods
mov
lret
push
imul
push
dec
fiadds
adc
cltd
pop
fninit
add
pop
pop
sbbl
dec
push
js
sar
or
insb
xchg
mov
test
pop
enter
daa
hlt
add
jae
xchg
pop
jge
fsts
arpl
adc
pop
pop
cmp
sbb
xchg
xor
pop
inc
push
sub
pop
shrb
dec
dec
lock
xor
mov
xchg
mov
aam
imul
loop
shll
popf
dec
push
jnp
or
sub
add
mov
popf
jmp
xchg
and
dec
jmp
jmp
jg
leave
loope
std
and
popa
gs
and
je
or
add
jecxz
pushf
push
pusha
lea
jmp
jne
push
mov
int
loopne
addb
dec
jo
nop
cmpsb
loopne
sub
push
cmc
icebp
das
jno
and
js
and
out
mov
lock
push
and
push
sti
das
push
mov
cmp
inc
add
cli
xlat
sub
adc
test
jae
push
xchg
mov
cmp
mov
les
rcrl
iret
push
imul
xor
jbe
mov
fimuls
cs
test
mov
shll
pop
mov
test
cmpsl
shl
inc
subl
loop
bound
push
leave
mov
aas
mov
push
stc
rcrl
mov
push
push
dec
mov
sub
mov
loopne
cmc
inc
and
mov
imulb
jle
cwtl
sub
repz
mov
sub
test
pushl
ret
out
sti
and
aas
jae
mov
mov
xorb
or
inc
and
add
push
push
mov
lea
jmp
arpl
fs
xor
cs
insb
add
adc
mov
add
pop
jae
stos
in
adc
shl
fisttps
mov
jg
adcb
xchg
gs
out
push
pop
in
inc
outsl
scas
adc
mov
lods
mov
std
xchg
clc
adc
dec
push
or
scas
cmp
mov
popa
int
scas
xor
add
and
and
xor
dec
or
jle
mov
pop
pusha
xorb
xor
push
mov
xor
aam
in
lock
and
inc
dec
xor
cs
insb
add
xor
pushf
clc
mov
stc
ror
movb
pushf
call
clc
sub
pushf
inc
lea
jmp
push
inc
inc
jns
inc
or
sub
xchg
xchg
mov
je
mov
movsl
outsb
xchg
cmpsb
dec
mov
cmp
in
and
pop
scas
xchg
aad
push
and
repz
and
arpl
adc
test
cmp
push
shll
lret
cmp
adc
aad
xchg
shl
in
lea
cli
jl
mov
fdivrs
sbb
cmp
inc
arpl
mov
into
or
push
inc
jbe
scas
lret
xor
and
pushf
lcall
insl
out
stc
pop
sub
or
outsl
sub
cs
adc
out
mov
add
jno
jnp
dec
js
mov
divb
in
xchg
mov
fcomp
cli
add
sti
imull
adc
shr
push
jg
jne
sbb
push
xorl
mov
jne
arpl
mov
xchg
sub
sbb
int
or
ror
mov
negl
xchg
mov
js
mov
clc
mov
xorb
pushf
mov
mov
clc
jmp
repz
add
int
sub
mov
call
sahf
sar
outsl
pop
das
push
sub
jle
insb
cmp
mov
jae
ficomps
pop
orl
add
int3
je
fsts
repz
push
in
mov
test
or
shr
mov
icebp
mov
fstpl
push
jne
test
mov
fwait
or
mov
testl
mov
and
pushf
movl
movl
pushf
movb
movl
mov
lea
jmp
add
mov
cld
cld
cld
lahf
popa
sbb
jbe
xchg
loop
xor
sbbl
aad
shr
in
callw
movaps
jl
shrb
inc
icebp
ret
push
stos
iret
jns
jnp
xchg
xchg
in
stc
cltd
mov
roll
arpl
sbb
cmp
push
stc
sahf
xchg
nop
std
jg
fisubrl
mov
insb
popl
test
loope
daa
inc
pop
out
inc
jmp
inc
cmp
mov
sub
xchg
dec
mov
subl
cmpsb
lds
testl
mov
or
jns
test
xchg
add
dec
cltd
aas
cmp
adc
push
sbb
jno
sarb
das
cmc
inc
movsb
gs
xorb
ret
add
adc
pop
stc
jnp
mov
mov
js
pusha
in
repnz
xchg
cmp
and
sub
fs
fsub
and
mov
mov
mov
pushf
mov
lea
jne
ror
shl
sub
neg
mov
test
mov
shl
setne
cmp
add
or
mov
bt
call
fildl
mov
inc
js
mov
dec
push
test
mov
or
aam
mov
push
mov
es
leave
sbb
fdivl
fcmove
ja
lea
inc
fdivrp
mov
fwait
dec
clc
dec
cmc
jae
sbb
fsts
repnz
sbbl
es
push
dec
dec
xchg
or
dec
push
sub
sub
pop
sbb
mov
push
fnsave
push
pop
mov
xor
lds
int3
test
add
or
aaa
jbe
dec
out
sub
rolb
or
mov
sti
jbe
aad
stc
push
int
adc
mov
push
sbb
pop
and
push
inc
adc
rcrl
mov
mov
hlt
pop
dec
js
pop
int3
mov
pusha
xor
mov
or
mov
pop
lea
xor
add
daa
adc
sub
enter
push
les
pushf
pop
dec
xchg
mov
cmp
loope
aaa
notb
mov
mov
push
fildll
orl
imull
dec
mov
test
fisubl
dec
pop
and
xchg
dec
push
xor
inc
xchg
adc
add
orl
mov
mov
test
pop
add
xchg
or
enter
adc
jno
sub
sub
xchg
lock
ja
mov
pop
pop
sub
dec
xor
inc
jmp
pop
mov
jno
inc
add
sbb
test
pushf
imul
xchg
push
imul
gs
xchg
dec
mov
sbb
cmp
call
jle
cmc
addb
ja
xchg
and
fwait
ret
or
je
jmp
push
imul
je
ja
mov
adc
test
push
push
pop
xchg
pop
je
push
mov
push
fistpll
xor
or
jp
xor
es
jmp
or
mov
pop
or
dec
imul
aas
dec
in
js
test
in
mov
addr16
push
repnz
loope
enter
jge
cmp
sbb
clc
mov
mov
pop
jae
nop
scas
and
test
ja
movsl
test
and
loope,pn
dec
adc
pop
lret
movl
gs
add
outsl
dec
jne
inc
stos
add
sbb
push
lcall
push
cld
jecxz
pop
ss
outsl
mov
shll
lret
push
sub
pusha
sub
rcrl
fwait
xor
imul
lret
mov
imul
xor
sub
ret
pop
test
push
fs
mov
inc
addr16
ds
mov
enter
addb
sub
faddl
push
movsl
jmp
loopne
out
iret
scas
ret
nop
mov
jo
iret
push
lcall
lds
adc
push
and
movsl
inc
pop
cwtl
insl
or
daa
bnd
sti
or
aas
pop
scas
mov
pop
cmp
cs
jg
test
sub
cwtl
dec
adc
nop
cmpsl
dec
cmpsl
test
or
sarb
xchg
sbbb
lahf
dec
sub
movsl
mov
repnz
punpckhbw
push
gs
addr16
into
push
jns
cmpsb
test
gs
mov
inc
daa
out
push
arpl
test
adc
ret
in
push
pushf
scas
xchg
push
mov
xor
dec
inc
aas
cmpsl
mov
add
jge
aam
sahf
ljmp
xchg
outsl
test
push
aaa
mov
pop
inc
jno
andb
jnp
int3
pop
je
test
dec
cwtl
cli
rcrb
sbb
nop
or
fidivs
cmp
push
lcall
sub
cmpsl
test
daa
test
mov
sbbl
call
mov
or
out
dec
popf
push
movsl
adc
mov
pushf
or
add
or
inc
test
mov
xchg
dec
dec
movsl
sbb
sub
cli
and
dec
push
lds
loop
subb
lret
add
dec
mov
mov
nop
out
gs
cmp
outsl
xlat
mov
scas
daa
stos
xchg
popf
mov
or
inc
and
stos
push
xchg
lcall
subb
ret
jb
lahf
scas
pop
push
pop
inc
or
pop
aad
add
sub
ljmp
shl
or
in
mov
shrl
repz
adcb
inc
lret
sbb
loope
data16
xor
in
mov
add
test
push
fs
pop
push
xchg
cltd
gs
call
pop
imul
mov
loopne
and
or
mov
mov
mov
cmp
orl
push
stos
test
mov
or
nop
push
hlt
iret
test
mov
adc
sub
xor
dec
xchg
sahf
loopne
dec
lret
pop
sahf
enter
imul
adcl
ficoms
or
xchg
inc
inc
out
movsl
sub
cmpsl
das
or
and
and
sub
cmpsl
rcrl
adc
pushf
mov
in
dec
test
xchg
mov
mov
mov
orl
test
lret
test
sbb
mov
mov
add
pop
adc
shrl
popa
jmp
in
xor
call
popa
add
cltd
iret
jb
sti
add
or
cld
flds
movsl
in
push
test
push
je,pt
fstpl
adc
inc
mov
xchg
push
repnz
sbb
iret
jg
test
pop
out
adc
xchg
add
inc
adc
jmp
das
xchg
insl
xchg
outsl
out
push
mov
sbb
sbb
sub
mov
fildl
jl
imul
mov
mov
dec
pop
ja
mov
jg
xor
test
inc
loope
mov
xchg
mov
add
push
jle
mov
orl
andb
pop
stc
cld
inc
in
mov
sub
out
cli
loop
rcll
inc
mov
addb
lods
or
rcrb
fwait
xor
ret
outsl
jecxz
mov
loope
imul
dec
fwait
mov
stc
jg
jp
jno
inc
in
jo
adc
add
icebp
daa
jmp
add
add
sahf
sub
call
mov
fldcw
in
mov
dec
rorb
out
nop
dec
dec
dec
enter
xchg
push
and
fisubl
adc
jg
dec
mov
leave
jns
scas
jo
cmpsl
push
mov
dec
les
movsl
lock
push
leave
pusha
stc
xchg
in
adc
popf
sub
imul
out
adc
dec
loop
xchg
push
jecxz
mov
or
mov
movsb
addr16
mov
test
rcrl
jno
add
jge
cmp
push
insb
mov
jge
ret
adc
mov
inc
jge
inc
stos
arpl
mov
mov
enter
dec
jge
push
xchg
jle
out
lret
jle
pushf
js
fisubrl
or
rorl
inc
pop
push
gs
sbb
lahf
out
mov
mov
popa
test
and
in
push
imul
ja
movsb
addr16
jb
xchg
pop
pop
mov
inc
mov
push
into
dec
push
jae
pushf
ja
xchg
jno
movl
mov
mov
int3
mov
ja
movsl
sbb
inc
in
sub
or
dec
mov
lods
cltd
lea
pop
mov
popf
pop
adc
push
mov
sbb
nop
in
xchg
loop
ja
call
mov
pop
rclb
jge
addb
hlt
pop
dec
adc
leave
pop
mov
das
ret
and
xchg
lcallw
cmpl
scas
xorb
negl
dec
leave
nop
je
sahf
mov
dec
or
xor
jg
dec
mov
repnz
jge,pt
jp
js
fwait
adc
lret
or
pop
adc
and
cwtl
cmp
mov
sahf
push
mov
jo
gs
insb
or
out
mov
add
add
adc
mov
out
add
out
mov
icebp
and
cmp
and
pop
cmp
sbb
or
lcall
ja
mov
repz
add
xchg
and
roll
add
arpl
lea
imul
rorb
shlb
push
pushf
push
adc
xor
ret
addr16
arpl
sbb
add
adc
push
push
adc
sbb
call
pop
scas
dec
repnz
pop
insb
mov
pushf
cmp
jecxz
out
and
inc
ds
loope
fisubl
iret
or
test
ljmp
push
push
dec
ret
adc
xchg
cmc
jne
test
lcall
fidivl
adc
sub
inc
aaa
ret
cwtl
test
pop
sar
sti
into
sub
ja
test
sahf
mov
cld
fstl
ss
mov
shl
dec
jl
or
pushf
cmc
cld
xor
fldl
shl
jnp
sub
cmc
fsubrl
add
adcl
adcl
lds
in
ret
test
xchg
and
pop
or
mov
insl
out
cld
mov
xchg
fstpl
pop
sarl
pushf
jp
or
dec
xor
js
aad
mov
stos
lock
mov
test
ficomps
in
sbb
popl
xlat
mov
jo
mov
xor
clc
add
pop
mov
rorb
fsubl
fistpll
lcall
jmp
gs
lock
in
fcmovu
push
out
or
int3
faddp
xorl
sbb
ret
sbb
clc
imul
idivl
cmp
lds
sub
fbstp
call
push
out
popf
movb
je
outsb
test
mov
add
mov
cmpl
jno
sahf
push
jmp
daa
pop
push
pop
mov
fcompl
and
xchg
inc
pop
movl
insl
aad
push
sbb
movsl
nop
out
mov
cmpb
pushf
or
lds
aas
test
cmpsl
std
test
sahf
add
gs
mov
imul
aad
clc
ret
cmp
imul
call
jae
out
and
imul
jne
cwtl
sbb
aas
xchg
add
pop
lods
jo
sub
sbb
sahf
adc
pushf
adc
arpl
inc
addr16
lea
gs
sti
loopne
mull
pushf
insb
repnz
pop
sete
adc
stos
jbe
inc
stc
dec
and
imul
add
stc
ret
lds
cld
push
inc
lahf
mov
xlat
adc
fcmovnbe
jae
xchg
cld
pop
fsubrl
sub
mov
xchg
negl
xchg
fdivl
and
mov
add
xchg
dec
scas
fbld
rclb
out
xchg
daa
add
les
xchg
push
cmp
jne
cld
addl
and
out
dec
lahf
in
test
orb
push
cmc
addl
loop
fwait
cmp
cli
enter
add
movsb
fwait
outsl
xchg
cmpsl
ds
add
xchg
std
jecxz
inc
aas
imul
sahf
lds
inc
mov
popf
jnp
adc
ret
push
xor
jecxz
pop
sahf
adc
hlt
push
icebp
imul
movl
dec
roll
ja
call
fnstenv
ret
test
adc
dec
or
add
hlt
adcb
push
jae
xchg
shlb
lcall
fisubrs
cmpl
xchg
roll
sahf
inc
fdivl
add
or
ljmp
popf
imul
push
inc
push
cmpsb
or
testl
sbb
loope
jo
mov
test
add
test
cmc
dec
mov
adc
test
adc
xchg
push
movsl
pop
cmp
imul
pop
aas
cmpsl
mov
dec
xlat
and
jle
push
inc
ss
jle
mov
cmc
jg
xchg
push
dec
fadds
call
cld
lods
inc
pop
into
cmp
jo
dec
out
call
xchg
loopne
jle
jle
fnstenv
icebp
push
add
stos
xor
mov
push
pop
addr16
fsub
pop
test
mov
mov
inc
adc
dec
push
mov
sti
add
imul
xorl
andb
fiaddl
pop
das
lahf
int3
push
test
sbb
subb
imul
pusha
inc
addr16
inc
jnp
nop
roll
pusha
or
std
loopne
push
sub
sbb
inc
cmp
and
int
dec
jmp
or
mov
or
xchg
pop
mov
xchg
adc
pop
sahf
jg
es
and
fsts
aas
cwtl
and
sbb
std
cmpsb
sbbl
jae
or
xchg
shl
xchg
sahf
jae
aas
and
pop
pop
adc
or
and
testl
mov
ror
nop
jns
std
add
in
mov
enter
mov
imul
dec
or
pop
ret
mov
inc
rep
pop
int
mov
xchg
test
mov
sbb
daa
pop
xor
jbe
icebp
xor
xchg
mov
cwtl
cmp
cltd
pop
lock
fwait
jp
sub
je
mov
inc
stc
xorb
imul
adc
push
mov
js
dec
rcrl
ficompl
cld
dec
and
or
cltd
iret
adc
adc
inc
ret
mov
orl
jge
mov
cmc
imul
popf
fldcw
xor
xchg
pop
cmp
inc
ss
push
inc
pop
fcompp
nop
ja
gs
incl
ja
and
aad
pop
adc
rcrl
inc
les
bound
lret
sahf
xor
testb
dec
pop
jne
pop
adc
sbb
int3
or
xchg
mov
xchg
pop
scas
outsl
ret
loop
cli
jecxz
lahf
rcl
dec
sbb
add
adc
insl
mov
inc
js
pop
mov
push
mov
adc
bound
test
mov
sub
push
adc
ret
fiadds
in
sbb
mov
xor
pop
or
inc
add
cmpsb
xchg
xor
cmc
rcll
mov
mov
loop
jb
mov
mov
sub
imul
cltd
into
mov
cmpsb
inc
or
repz
fcomip
lcall
mov
hlt
mov
or
movsb
mov
ret
mov
iret
orl
mov
nop
push
add
popa
bound
pop
stos
clc
inc
jo
aas
or
sub
dec
lahf
icebp
xor
imul
push
sbb
jmp
or
add
ljmp
loop
cmp
popf
mov
imul
sbb
repnz
pop
inc
xor
jl
inc
js
mov
fincstp
sbb
cwtl
xor
sbb
das
shl
test
adc
lret
sbb
outsl
pop
fnstcw
sub
dec
nop
dec
ljmp
inc
adc
test
test
in
jge
sbb
jns
jl
test
pushf
push
lea
andl
dec
or
sbb
call
push
ret
scas
and
clc
sub
lds
jo
test
cli
mov
dec
daa
les
mov
push
call
mov
pop
mov
adc
lcall
gs
pushf
in
mov
xor
cmp
mov
pop
pop
imul
cmp
mov
popf
test
fimuls
xor
inc
in
sbb
lahf
and
movsl
xchg
aad
fs
xlat
pop
imul
and
js
add
xor
stos
add
adcl
stc
dec
lds
gs
nop
testl
adc
fcoml
pop
ja
adc
fisttpl
cs
jg
fildll
xchg
pop
xor
mov
mov
popf
xor
mov
sbb
sti
lock
int3
lods
ficoml
or
cli
xchg
dec
out
roll
aas
xor
jge
pop
dec
aas
shll
sbb
mov
cmp
js
mov
dec
or
jg
jb
xor
orl
xchg
add
repz
mov
test
inc
pop
add
stos
mov
movsb
int
sub
mov
fstps
jb
add
sti
ljmp
leave
fwait
pop
xor
ret
jmp
or
mov
pop
cmp
fsubl
sub
add
xchg
sub
mov
mov
rcrb
and
pop
iret
xchg
dec
fwait
rcrl
fidivl
arpl
sbb
mov
int
or
daa
inc
orb
cmp
leave
add
rolb
sbb
nop
imul
call
rcl
and
mov
pop
adc
jno
xor
popf
jb
or
roll
in
jmp
jo
or
adcl
out
imul
mov
out
repnz
testb
bound
nop
xchg
dec
out
dec
int3
in
js
add
data16
cmp
sub
mov
mov
mov
das
push
jbe
mov
clc
stc
test
or
iret
xor
sub
popf
jmp
icebp
pop
mov
mov
dec
dec
stos
push
mov
or
popa
inc
sub
addr16
cwtl
out
fbld
pop
out
sahf
xchg
stc
xlat
mov
add
hlt
repnz
adc
bound
mov
mov
arpl
xor
lret
js
lcall
pop
sbb
push
sbb
imul
js
nop
xchg
daa
ret
stos
adc
pusha
aam
jp
fs
add
outsb
add
dec
dec
and
and
stc
jge
mov
inc
mov
lcall
movsb
iret
dec
xor
loope
in
jmp
pop
pusha
ficompl
leave
mov
scas
xchg
cmp
ja
test
xchg
sub
stos
test
dec
sahf
stos
push
pushf
or
dec
adc
mov
sti
ljmp
nopl
fs
jge
adc
bound
rcrb
fwait
sbb
mov
mov
xchg
pushf
fwait
sbb
xlat
push
adc
adc
subl
mov
shlb
pop
popf
jb
lahf
inc
andb
pop
stos
or
inc
repnz
jl
test
shll
mov
fwait
jge
or
sbb
add
lret
mov
rol
mov
add
xor
xor
xor
mov
push
sbb
movsl
scas
outsb
insl
movsl
cwtl
pushf
fwait
lcall
js
sahf
xchg
mov
cmp
mov
hlt
adc
or
sbb
aaa
cmp
cwtl
sti
movsl
scas
lock
sbb
xor
cli
fldpi
repz
mov
pop
test
mov
mov
cwtl
mov
and
popa
pushf
es
mov
imul
inc
fwait
addr16
les
xchg
or
xchg
jmp
xor
jb
mov
jecxz
gs
bound
sbb
orb
jno
add
aas
add
mov
jno
sbb
add
das
sbb
aas
bound
xchg
stos
xor
dec
ja
inc
jno
sahf
dec
out
test
inc
add
mov
insb
lea
sub
mov
push
and
stc
dec
test
jo
add
sbb
inc
loope
in
dec
scas
int
jle
orb
sbbl
mov
pop
inc
push
mov
fxam
cs
lahf
push
cmovne
sbb
out
pop
aam
call
and
repz
mov
je
enter
outsl
jmp
leave
jp
pop
sub
daa
jno
jp
loop
faddl
add
mov
dec
mov
adcb
push
xchg
stc
stc
popa
mov
ja
movsl
dec
sbb
dec
and
adc
stos
push
out
rcr
aas
je
and
test
fcomi
xchg
bound
cli
sbb
nop
cwtl
orl
push
mov
or
sbb
pop
sub
dec
and
and
mov
xor
int
xor
xor
in
cmpsl
cwtl
adc
test
push
stc
lds
adc
xor
push
jecxz
jle
repz
and
add
jae
dec
call
lret
into
jno
cli
fisttpll
mov
pop
cmp
inc
mov
mov
aas
xchg
stos
repnz
mov
and
loope
int3
daa
pop
fwait
hlt
outsl
and
mov
in
push
sbb
mov
mov
sbb
cmpsl
xlat
jo
nop
lds
addr16
or
out
shlb
andb
outsb
mov
inc
sti
dec
addr16
or
dec
pushf
sbb
push
test
fwait
mov
stc
or
mov
add
inc
pop
push
cmp
hlt
bound
icebp
addl
xchg
iret
mov
jl
push
mov
repz
jne
sahf
in
inc
cltd
movsl
and
push
pushf
ficompl
adc
pop
mov
out
and
orl
in
and
mov
or
dec
mov
inc
jb
xchg
sbb
xchg
adc
mov
adc
lods
sub
jbe
lret
cmp
fcmovnu
daa
push
inc
movsb
dec
repnz
das
mov
stos
fucomip
cltd
jl
imul
or
loope
mov
gs
inc
dec
push
ret
adc
imul
inc
push
push
and
sbb
iret
jmp
push
loope
jae
lods
mov
or
sbb
divl
fwait
sub
adcb
pusha
push
in
fs
sbb
es
dec
les
fcmovnbe
jne
jno
xlat
mov
xchg
and
sub
adc
lret
mov
inc
lods
add
and
xchg
mov
or
jno
inc
pop
xor
dec
sbb
sbb
push
loope
aam
aam
push
jns
and
xchg
pop
xchg
and
inc
or
jbe
pusha
mov
lea
iret
xchg
movb
test
push
mov
and
mov
dec
addr16
nop
pop
cmovne
or
and
cli
push
mov
push
and
repnz
shll
mov
nop
mov
inc
repnz
je
jne
jge
sub
out
fcompl
cltd
add
stc
and
imul
mov
fstpl
dec
xchg
jae
fdivl
jg
add
sub
add
adc
sub
mov
push
push
mov
inc
fs
sbb
and
inc
mov
dec
test
sbb
or
loope
rcll
mov
test
push
enter
mov
hlt
adc
mov
ljmp
fs
mov
inc
cltd
je
nop
mov
push
test
xchg
shrb
xchg
fcmovbe
push
pushf
sbb
call
mov
push
mov
das
scas
sub
lcall
push
push
jo
mov
sti
mov
dec
adc
jae
in
fcomps
sbb
push
dec
mov
subb
or
sub
stos
cmp
es
sbb
js
cmpsb
rclb
sbb
add
inc
xchg
fmul
push
or
dec
loop
ljmp
nop
fimull
dec
arpl
xchg
cltd
fimuls
mov
fcompl
and
mov
aas
movl
dec
push
int3
incb
int3
mov
xchg
push
pop
addr16
adc
aad
dec
enter
mov
and
repz
ja
or
push
dec
fnsave
inc
mov
push
dec
nop
outsb
scas
loopne
xor
and
cltd
mov
and
cmp
jne
std
fisubrl
adc
jecxz
xchg
push
loop
push
push
test
pushf
dec
jb
sbb
imul
nop
movsb
mov
xor
test
pop
lret
xchg
out
addr16
fidivs
in
xchg
in
pop
sbb
sbb
fwait
int3
adc
cmp
push
sbb
jmp
out
sub
shrl
jg
enter
ds
jmp
jmp
lds
ja
pushf
jp
lods
sbb
inc
inc
xchg
jb
adc
mov
fmuls
test
mov
push
xor
stos
ret
push
pop
adc
addr16
cld
orb
repnz
xor
adc
lock
into
pop
or
fiadds
or
ds
fwait
aam
xor
push
mov
rclb
js
sbb
xchg
sbb
cmpsb
inc
sub
hlt
push
jle
arpl
pop
mov
xchg
mov
pop
mov
jnp
or
xchg
data16
xchg
dec
inc
mov
test
mov
cltd
cmpsb
repnz
loop
pop
outsb
sub
fs
js
orl
fwait
popa
jno
addb
mov
pop
das
adc
xchg
xor
bound
std
mov
dec
jp
ret
jecxz
mov
sub
mov
lods
dec
in
pop
xchg
inc
sbbl
les
pop
push
dec
inc
fiaddl
or
mov
mov
mov
js
push
pop
dec
cmp
cwtl
lds
adc
inc
loop
popf
test
in
xchg
add
jp
aaa
xchg
test
mov
out
sub
movsl
cwtl
inc
fwait
mov
and
orl
mov
add
mov
push
pop
pop
and
pusha
xchg
cmp
out
sahf
xchg
pop
push
dec
inc
push
pushf
pop
test
jge
mov
orb
jg
shlb
pushf
pusha
dec
jnp
rolb
movsb
cld
pop
and
aas
add
test
sub
sbb
cmpsb
mov
loop
push
cmp
xchg
xchg
lea
popa
mov
xor
adc
jns
xor
adc
mov
pop
jp
das
imul
sahf
or
pop
addr16
cli
pop
and
sbb
pushf
inc
fwait
dec
push
jno
xor
stos
pop
xchg
and
inc
pop
test
xchg
pop
adc
and
xchg
xchg
dec
mov
arpl
fisttpl
mov
mov
or
cwtl
test
adc
mov
std
lcall
sbbb
xchg
adc
sbb
xchg
adc
pusha
and
adc
pop
push
xchg
sbb
pop
test
inc
xchg
xchg
mov
or
sahf
test
nop
pop
adc
xchg
pop
adc
pusha
or
pop
pushf
push
add
push
mov
or
fisttpl
pop
xchg
jmp
fists
lahf
adc
nop
fwait
pushf
push
lahf
add
and
test
xor
mov
mov
adc
andl
push
bound
xchg
filds
adc
test
cwtl
or
add
or
mov
fwait
sbbl
dec
mov
std
sti
lcall
push
cmp
dec
mov
orl
nop
jecxz
ret
sub
fnstcw
test
mov
cmp
adc
lahf
mov
pushf
cmp
xor
int
in
fcoml
cmpl
mov
dec
and
pop
adc
inc
lock
mov
xchg
sub
xor
mov
inc
daa
ja
popf
dec
nop
pop
sub
mov
push
mov
fsubrs
and
loope
mov
repnz
add
mov
add
add
imul
fwait
pop
and
adc
mov
mov
jns
push
test
jecxz
sbb
push
subl
pop
movl
jle
repnz
mov
lock
in
ljmp
ret
pop
jmp
add
lcall
sub
sub
in
mov
fdivl
adc
cmpsb
mov
jb
push
add
imulb
les
divl
jno
adc
cmc
je
lock
mov
cmpsl
sub
mov
xchg
sub
out
xlat
mov
ja
iret
stos
dec
ljmp
jmp
add
test
fwait
xorb
jae
cmp
in
pushf
adc
aas
pop
movl
fsubrl
xchg
push
cld
or
and
adc
push
stc
jno
mov
mov
xchg
imul
rcrl
in
mov
mov
mov
stc
xor
addl
aaa
cltd
sbb
adc
push
pusha
cmpsb
daa
mov
rol
mov
in
das
or
lock
xor
enter
ret
les
mov
xchg
xorl
test
mulb
mov
xchg
inc
cli
loopne
mov
shrb
jp
dec
push
hlt
mov
xchg
cmp
xchg
ljmp
outsb
movsl
mov
xlat
aas
xchg
stos
adc
test
mov
jns
mov
sbb
dec
pop
out
fldenv
jl
cmpsb
dec
and
lods
inc
mov
cmp
movsl
push
and
fdivrp
dec
negl
sub
mov
jecxz
call
jl
call
or
push
call
dec
mov
cli
repnz
jnp
adc
mov
sbb
xchg
ja
fisttpl
mov
loop
jne
push
test
jae
scas
aam
mov
cmp
jg
sbb
shlb
mov
fidivl
sbb
inc
hlt
lahf
xor
imulb
lock
mov
jle
stos
push
sub
xchg
out
test
mov
test
lock
mov
jne
lahf
pop
repnz
fwait
xchg
xchg
jl
mov
mov
inc
mov
je
mov
xor
hlt
or
sbb
sub
aaa
mov
add
fisubrl
mov
loopne
dec
and
adc
fidivrs
add
inc
mov
out
ret
lret
cmpsl
cwtl
inc
sub
sub
jnp
mov
push
pop
adc
gs
push
lds
pop
mov
addw
and
mov
dec
lcall
cs
sbb
xor
imull
add
gs
bound
add
pusha
scas
cwtl
gs
adc
lock
and
jb
stos
push
pop
fcmovb
sbb
ljmp
mov
jo
add
ljmp
test
inc
add
mov
popf
xchg
stos
js
adc
push
inc
outsb
dec
fsub
imul
inc
shrl
dec
nop
nop
dec
or
add
dec
mov
ja
jbe
icebp
xor
loop
mov
js
and
hlt
jns
and
push
mov
aas
stos
sub
push
negl
scas
jg
shll
pop
jmp
call
rorl
icebp
aaa
xchg
push
dec
jae
sbb
lret
xchg
mov
mov
or
jns
test
es
cmp
mov
in
shll
xchg
inc
outsl
ret
jmp
sbb
lahf
or
mov
push
inc
sarb
mov
mov
adc
stc
lods
mov
ljmp
leave
xchg
jb
out
rorl
pop
imul
or
push
inc
dec
pop
pop
sub
mov
xor
lcall
adc
inc
lahf
cmp
dec
push
and
in
stos
mov
dec
and
xor
mov
push
xlat
inc
sahf
cld
pop
clc
stos
stc
popa
mov
out
std
inc
mov
pop
adc
mov
lret
jmp
repnz
pusha
xchg
add
jns
into
dec
loopne
sub
adc
inc
mov
push
pop
or
lret
das
movsl
leave
cwtl
repnz
cmpsb
mov
cmc
dec
xchg
sub
scas
sub
sti
imul
or
xchg
jp
adc
mov
fiadds
dec
xorl
sub
mov
cwtl
dec
push
lods
inc
xchg
push
jl
or
dec
cmpsl
xor
dec
mov
and
je
push
fidivs
and
fwait
jbe
mov
rol
mov
and
mov
in
lahf
jno
jb
inc
repnz
pop
popfw
out
jns
jecxz
adcb
js
pop
sub
jle
or
xor
push
or
ja
mov
sbb
pop
ja
adc
pop
cmovge
fldenv
test
scas
imul
ljmp
jmp
mov
push
pushf
or
jge
inc
cmc
pop
and
call
cli
popf
notl
fisubl
jmp
movsb
mov
ret
rol
push
lock
mov
push
mov
fsts
sub
adc
sbb
mov
in
or
mov
sbb
out
push
gs
fwait
cld
xchg
inc
jp
jg
gs
mov
imul
in
pop
pop
xchg
loopne
dec
rorb
stos
mov
push
pop
les
cwtl
inc
sub
lds
cmc
pop
jb
mov
in
mov
lods
das
pop
fmull
mov
cmp
xchg
das
and
pop
pop
fcompl
ja
pop
jle
sbb
jno
divl
scas
in
lea
jmp
aaa
ficomps
dec
pop
jl
in
and
mov
mov
idivb
or
or
mov
dec
stc
ret
pop
shrl
push
xchg
adc
aas
mov
jle
mov
decb
fmuls
mull
sbb
add
mov
in
jmp
or
jae
js
dec
mov
pop
sub
and
dec
pushf
js
addr16
adc
mov
dec
lret
cmpsl
insl
mov
mov
adc
repnz
add
mov
xchg
push
lret
sbb
push
inc
xchg
pop
push
ja
enter
dec
jbe
push
push
pushf
add
scas
flds
inc
xchg
or
cmp
cld
add
ret
dec
xchg
mov
or
add
dec
leave
jecxz
sub
test
imul
xorb
or
add
cmp
push
rorb
cld
imul
out
sbb
cmp
addb
lcall
mov
pop
ret
ss
out
mov
jecxz
mov
and
arpl
rcr
cli
cmp
test
mov
lret
dec
out
cmp
mov
repz
repz
push
insl
pop
rep
xor
mov
aam
ja
lock
mov
ja
or
inc
data16
push
mov
out
aaa
xor
dec
mov
adc
fs
xor
outsl
push
xchg
jne
fldcw
pusha
popf
push
sbb
and
jbe
int3
outsl
in
xchg
iret
jle
cmc
pop
jne
xchg
jl
ljmp
lea
stc
stos
cmp
cs
cmp
pusha
jg
sub
xchg
js
xor
shl
xor
xor
or
xchg
inc
imul
xchg
cmp
or
lret
push
cmp
cli
pop
cmpsl
adc
shl
outsl
aas
in
imul
into
add
xchg
in
js
test
out
xadd
hlt
in
notb
adc
jge
imul
call
xchg
xchg
scas
lret
test
stc
or
mov
add
push
dec
leave
ret
sub
jl
aam
pushf
sub
mov
sub
jnp
mov
jae
mov
push
or
out
aaa
cwtl
adcl
test
sub
gs
mov
les
leave
nop
push
and
out
mov
outsl
push
pop
andb
mov
sbb
sub
adc
ret
lods
arpl
and
push
dec
sub
cltd
pop
xor
int
pop
inc
imul
and
aaa
mov
mov
push
arpl
and
xorb
inc
daa
aad
push
cmpsl
loop
mov
loope
cmp
and
xlat
add
cmp
inc
inc
lds
mov
or
clc
sahf
lock
popf
lock
mov
xchg
mov
push
das
pop
jno
loope
cmp
mov
repnz
out
and
cmp
aam
and
test
inc
lock
mov
mull
aad
cltd
aaa
addr16
xchg
adc
data16
push
jne
push
mov
fstpt
es
pop
jae
mov
sbb
or
sahf
push
push
fidivl
jno
ret
sub
pushf
adc
pop
jl
cmc
cmp
lea
aas
inc
adc
pop
mov
cmp
xchg
push
cwtl
jae
movsb
mov
les
call
jecxz
or
sub
pop
xchg
adc
xchg
jo
mov
mov
mov
pop
push
add
fwait
out
iret
jg
arpl
out
xor
inc
cmp
adc
shlb
iret
push
adc
xor
pushf
gs
add
daa
mov
stc
nop
xor
push
xchg
lock
loope
mov
gs
and
mov
inc
loopne
mov
add
jmp
inc
adc
jl
mov
subb
mov
aam
imul
int
push
push
xor
mov
push
imul
out
mov
aas
jg
jb
or
cwtl
add
pushf
sub
icebp
repnz
mov
lret
fldt
arpl
mov
push
sbb
sahf
pop
mov
repnz
mov
lds
aaa
sbb
xor
mov
test
and
fldl
pop
adc
or
dec
mov
rolb
add
mov
dec
inc
aaa
int
push
test
imul
lahf
loop
push
add
jo
inc
or
mov
mov
mov
addr16
adc
xchg
mov
sub
mov
popf
and
cmpsl
or
pop
adc
xchg
jnp
lahf
scas
inc
and
mov
adc
jmp
jb
dec
fwait
lock
adc
adc
mov
mov
imul
sub
pop
inc
sbb
cmp
fbld
jnp
xchg
jg
loopne
sbb
arpl
rcll
ret
xor
pop
push
jno
xlat
js
mov
test
jns
popf
mov
mov
dec
xchg
add
push
xor
xlat
imul
inc
rcll
popf
add
push
aaa
mov
add
aam
popa
push
das
push
adc
inc
mov
daa
cmp
jg
jns
xor
aas
sbb
jg
lea
xchg
mov
add
pop
pop
mov
sub
mov
add
test
scas
test
or
pushf
imul
mov
xchg
sub
stc
ret
cmp
push
or
mov
repnz
inc
jo
addr16
lea
sarl
or
cli
movsb
sbb
mov
fidivrl
ja
mov
push
test
imul
mov
jmp
push
add
sarb
test
fimull
sbb
negb
imul
repnz
shlb
pop
cmpsb
aam
pop
push
inc
mov
adc
loop
aas
js
mov
inc
or
lods
out
loope
mov
mov
inc
push
shlb
addr16
andl
aaa
sti
mov
xchg
dec
iret
inc
mov
aam
xlat
mov
add
mov
lea
fdivr
insl
add
test
jbe
out
jmp
pop
ret
jmp
in
pusha
aaa
ja
xchg
les
aaa
mov
dec
mov
addl
hlt
mov
lock
dec
aad
and
mov
adc
push
or
mov
xchg
imul
push
add
push
sub
xchg
je
xor
mov
mov
div
shrl
repz
bound
sahf
dec
xchg
pop
xchg
xchg
test
movsl
adc
xchg
or
shll
out
test
jge
jnp
lret
inc
aaa
out
ljmp
and
aam
jne
xchg
jo
cmp
pop
dec
je
xchg
les
mov
data16
or
pop
mov
xor
iret
call
mov
lock
push
mov
jnp
ror
add
mov
xor
mov
add
xchg
lods
adc
cli
ret
lea
push
sub
repnz
mov
sub
dec
mov
bnd
push
jp
sbb
and
cwtl
xchg
jae
mov
jecxz
pushf
xor
or
imul
jp
icebp
test
pop
dec
loopne
fwait
repnz
adc
inc
nop
push
arpl
xchg
add
sti
aam
jmp
fwait
inc
mov
imul
movsl
jb
stos
outsb
fistpll
dec
and
mov
ror
and
popa
je
mov
sbb
lds
sub
lret
push
fwait
push
lcall
xlat
les
sbb
das
leave
sub
pop
mov
xchg
mov
or
pop
inc
inc
insl
test
gs
push
mov
mov
and
sahf
movsb
push
rol
int
mov
inc
repz
test
std
and
push
and
dec
xchg
aaa
pop
push
push
pop
sahf
adc
cmpsl
cmp
popa
sbb
mov
mov
out
sahf
push
inc
sbb
addr16
repz
pusha
mov
test
enter
imul
jle
xchg
mov
and
ja
xchg
arpl
and
sub
add
lock
aam
xchg
push
pusha
mov
mov
xchg
icebp
int3
or
inc
mov
jg
pop
je
imul
xchg
stc
xor
aad
jno
adcb
in
xchg
push
scas
mov
sub
pop
adc
push
lods
adc
cltd
push
add
cmp
hlt
pusha
ja
jmp
cli
lods
mov
cli
sbb
scas
pop
push
mov
in
dec
outsl
test
cmpsl
out
stos
ja
loope
mov
push
cltd
je
xor
nop
push
ja
ja
fidivrs
sub
daa
mov
mov
fwait
mov
xor
xorl
cld
mov
and
jo
int
fisubl
jae
adc
mov
jmp
test
cwtl
pop
loop
arpl
mov
cmpsb
jle
rol
push
sarl
lcall
xchg
lea
inc
stc
mov
jns
mull
xchg
fcomip
add
imul
push
dec
lcall
xor
fwait
jo
xchg
pop
mov
test
shl
cmp
sbb
xor
test
cmc
inc
je
scas
pavgw
nop
imul
arpl
xorb
loope
pop
ret
ljmp
cmp
dec
repz
fldt
daa
leave
lds
mov
out
arpl
jle
pop
adc
pop
adc
pop
lcall
and
inc
inc
rolb
cmpb
sbbb
inc
push
jmp
insl
jg
rcl
fcompl
cli
jns
shrl
adc
std
aas
int3
cmc
xchg
mov
fwait
aad
add
fs
aas
enter
imul
loope
stos
jmp
sub
loope
imul
js
mov
outsl
dec
ja
addr16
and
lea
and
xlat
inc
mov
insb
int
or
fisubrs
push
dec
ja
cltd
add
add
std
push
adc
mov
ret
dec
sub
pusha
pop
xchg
pop
xlat
add
push
push
add
push
movsl
or
ja
fldl
or
loope
cmpsl
mov
shll
sub
out
sbbb
rorl
push
out
or
orb
lret
sti
pushf
dec
add
inc
addl
adc
xor
stos
lock
mov
lcall
push
push
mov
adcl
pushf
testl
into
ds
cld
or
in
xchg
daa
mov
inc
push
out
or
cwtl
xlat
mov
out
popf
loop
imul
stos
mov
lock
fisubrl
fdivrp
xor
imul
pop
pop
push
pop
xchg
lcall
nop
leave
rorl
stc
loope
mov
ficomps
mov
ret
pop
adc
jno
cld
dec
jbe
lea
aaa
push
inc
xchg
lahf
movsb
test
aad
insb
subl
lret
imul
rcrl
arpl
nopl
dec
cwtl
mov
cmpsl
add
shlb
dec
push
mov
push
daa
int
fisubrs
mov
dec
jae
mov
mov
and
inc
jl
inc
imul
xchg
fnstenv
dec
ret
add
stc
and
mov
mov
ficomps
push
loope
inc
dec
nop
cmpb
sahf
mov
dec
adc
lahf
xchg
inc
adc
outsl
sbb
outsl
dec
fs
or
imul
dec
ja
mov
sub
or
inc
sbb
pop
loop
jecxz
mov
addr16
mov
jle
adc
mov
cld
sbbb
lods
jae
addr16
stc
subb
xchg
stc
add
xchg
cwtl
or
jecxz
leave
out
add
mov
imul
lahf
dec
loopne
mov
movsl
xchg
add
daa
fstpl
lds
adc
ljmp
repz
lcall
stc
arpl
je
jbe
push
out
aad
or
sbb
xchg
jp
imulb
cmc
pop
jo
push
inc
sub
push
stc
push
or
cmp
mov
pop
mov
lods
les
pushf
popa
dec
dec
adc
movl
xchg
sbb
mov
mov
mov
testl
pop
stc
scas
sbb
dec
pop
adc
insl
xchg
sub
inc
xchg
imull
or
pop
mov
out
push
or
inc
jae
pusha
mov
jb
mov
push
mov
or
inc
mov
imul
or
cwtl
mov
add
int
mov
cli
inc
pop
add
popf
xchg
mov
stc
xorl
pop
pop
sub
pop
sti
push
sbb
gs
xchg
push
mov
loope
mov
add
or
jno
mov
ljmp
stos
push
bound
mov
sbb
mov
cmpsl
scas
out
in
insl
bound
fcoms
sbb
push
push
pop
jmp
mov
push
add
inc
jo
cmpsb
sbb
addr16
mov
push
xchg
lds
mov
shr
xchg
aad
cmp
xchg
pop
fistps
cmp
or
fwait
daa
incl
adc
jo
inc
lea
loop
ja
ss
cmp
jns
inc
dec
pop
jo
mov
movl
dec
bnd
andl
dec
add
dec
addr16
fsubs
lcall
sbbb
test
cwtl
push
add
fmull
movsb
in
mov
imul
imul
mov
sbb
aaa
out
rclb
push
mov
out
lahf
cs
les
xor
outsb
jge
aaa
add
mov
das
inc
sub
test
rolb
in
xchg
mov
cmp
or
jne
fwait
addr16
inc
xchg
ret
inc
out
lods
pop
out
int
leave
pop
push
pop
jecxz
or
packuswb
inc
mov
outsb
je
or
icebp
or
sbb
es
dec
sbb
push
inc
sbb
cwtl
xor
jo
rolb
xchg
xor
mov
mov
loope
adc
insb
xchg
imul
lds
in
dec
mov
mov
cltd
fwait
inc
movb
gs
stos
jno
mov
inc
test
inc
in
sbb
inc
xchg
dec
inc
imul
adc
mov
mov
cmpb
or
clc
mov
sub
mov
xor
flds
loope
sbb
xor
pushf
jp
xlat
pusha
add
sahf
jns
jmp
in
xchg
lahf
add
adc
dec
rorb
outsb
je
jbe
ja
gs
imul
mov
sbb
jbe
mov
stc
push
xor
inc
dec
pop
insl
mov
jl
push
loope
pop
scas
cld
out
fsubl
xchg
lea
or
or
adc
mov
push
in
stc
sub
fidivl
loopne
data16
and
lcall
inc
add
leave
inc
rolb
xchg
sbb
add
push
and
pop
pop
fidivl
pop
out
repz
jo
sbb
or
lahf
ds
jbe
arpl
push
dec
adc
xchg
mov
sbbl
mov
pop
and
movsl
aas
imul
js
cmp
push
cld
pusha
sti
jbe
mov
icebp
mov
and
lods
mov
arpl
xchg
cmp
out
push
mov
call
fdiv
mov
mov
repnz
mov
mov
cmc
nop
sbb
mul
push
xchg
jo
movsl
push
stos
dec
pop
pushf
ret
jno
ret
and
inc
mov
mov
js
cld
fwait
stc
imul
and
aad
stc
hlt
subb
pushf
rorb
mov
cmp
js
out
in
mov
sub
aam
mov
lods
jo
jne
pop
negb
pop
mov
mov
pop
and
lretw
push
pop
cmp
sub
call
nop
xor
mov
xchg
inc
das
sbb
loopne
inc
outsl
mov
push
or
negl
mov
add
dec
imul
fistpll
jecxz
sub
aas
pop
nop
les
jnp
xchg
mov
and
inc
push
xlat
imul
adc
pop
test
sub
sub
lods
lcall
imul
xor
jmp
dec
mov
push
das
pop
bound
lahf
cmp
push
mov
push
out
andb
mov
pop
flds
xchg
mov
in
hlt
lds
fcmovnb
filds
or
push
lea
inc
sbb
andb
pushf
pushf
jbe
fwait
cld
lcall
lea
dec
popa
lret
push
rcrb
mov
rcll
sbbl
int
movsb
inc
dec
lahf
or
xchg
add
push
daa
push
jnp
iret
cmp
pop
xchg
push
sub
dec
pop
pop
and
and
testl
mov
imul
nop
or
xchg
or
push
or
mov
aas
data16
pop
fisttpl
jg
lods
push
outsb
pop
sbb
ret
xchg
aas
daa
xchg
jo
popa
sarl
out
adcb
loope
fiadds
mov
fwait
inc
cmpsl
int3
add
jp
mov
mov
imul
cli
ja
add
popa
cwtl
xor
scas
push
sub
cmpb
stos
mov
fs
fsubl
sbb
and
cwtl
loope
iret
add
leave
pop
or
dec
dec
push
mov
and
dec
push
push
outsl
sub
mov
mov
add
scas
adc
pushf
xor
mov
cwtl
mov
adc
xchg
fnstenv
fsub
or
jnp
add
mov
inc
xchg
xchg
int
jle
movsb
shll
fwait
mov
xchg
jb
fwait
in
jno
gs
loopne
pop
lret
and
fwait
xor
sub
mov
pop
or
push
mov
lods
test
dec
cmp
sarb
push
rolb
insb
mov
lcall
scas
les
loopne
push
aas
cltd
lret
pop
jecxz
dec
push
pop
decb
mov
jnp
mov
imull
or
and
dec
jp
outsl
push
ja
mov
sub
sub
arpl
jg
inc
adc
and
lret
js
addb
pop
addr16
lock
xchg
cmc
scas
xchg
inc
in
inc
mov
mov
xchg
xchg
or
dec
jg
popf
fwait
mov
repz
lahf
leave
imul
xchg
ja
and
sbb
test
repnz
imul
inc
and
les
xor
jl
lods
push
addb
xchg
ret
push
xchg
out
or
fs
lahf
out
sbb
pop
or
mov
movl
xchg
dec
imul
les
sti
mov
push
enter
lds
mov
or
add
insb
or
cwtl
and
or
orb
pop
dec
popa
or
and
cmp
jae
cmp
mov
outsl
jne
loop
flds
xchg
jns
imul
push
xlat
jmp
and
fsub
int
sbb
movsb
mov
pop
test
in
dec
cmp
arpl
and
test
mov
les
into
leave
movsb
sub
pop
aaa
xor
sbb
xchg
xor
ja
andb
mov
cmp
scas
xchg
test
sarl
and
mov
mov
sarl
jb
mov
cmp
mov
imul
mov
mov
adc
lahf
rorb
leave
xchg
cmp
mov
and
loope
push
daa
inc
jge
cmp
push
lahf
dec
insl
inc
xchg
push
cwtl
outsl
sub
clc
call
xorb
sti
bound
jecxz
mov
sub
imul
sub
pushf
dec
xchg
mov
mov
mov
idivl
ret
jl
inc
xchg
sarl
jl
push
adc
outsl
sbb
loopne
fsts
inc
inc
xchg
jecxz
or
add
lret
out
jmp
push
adc
pop
adc
cmp
push
push
cltd
dec
cmpsl
xchg
pop
sbb
addb
mov
add
push
add
je
testl
or
inc
cli
js
inc
ja
gs
jecxz
mov
out
inc
jecxz
outsl
or
adc
xchg
decl
test
sub
or
sahf
add
xor
xor
pop
sbb
std
pop
rcrb
arpl
fisttpll
mov
fwait
push
in
outsl
or
lret
add
jg
mov
or
aas
push
mov
push
jecxz
cmpb
xchg
movsb
cmp
arpl
nop
sub
imul
push
adc
xchg
mov
mov
mov
imul
push
sbb
rclb
test
stos
icebp
sbb
jne
mov
xchg
lods
push
push
js
jmp
insb
inc
leave
adc
loop
jp
mov
xor
lea
dec
dec
sub
mov
dec
mov
inc
mov
shr
pop
sbb
and
jnp
mov
fldenv
lods
xor
sub
cwtl
icebp
idivl
hlt
inc
pop
shlb
pop
jge
lcall
or
mov
outsl
pop
aaa
inc
mov
mov
insb
and
cmp
sbb
mov
push
xchg
divl
faddl
iret
pop
cwtl
jnp
outsb
sub
xor
outsb
lea
push
xchg
rcrb
lods
sub
xor
add
shll
loopne
andl
sar
movsb
test
mov
and
mov
inc
fnstcw
shrl
pop
sub
bound
outsl
xor
pop
sbb
and
clc
xor
dec
pusha
mov
test
jmp
adc
adc
push
xchg
pop
or
addr16
mov
sub
push
fyl2xp1
pop
jp
icebp
loopne
movsl
dec
jmp
push
daa
sub
fwait
jno
dec
in
ljmp
notl
or
add
shlb
add
mov
sahf
aad
addr16
aad
lcall
xchg
aas
ljmp
jle
sti
add
xchg
inc
fs
add
push
rclb
mov
or
jecxz
aad
test
mov
imul
ljmp
sub
lahf
or
mov
fadds
jecxz
or
popf
pushf
push
in
scas
insl
insl
mov
or
jecxz
das
andb
mov
pop
frstor
cmp
scas
xchg
pop
sub
jae
rorb
add
fldcw
leave
and
xchg
mov
or
sbb
fwait
inc
sub
int3
jbe
scas
int
movsb
inc
in
push
call
jae
push
sub
lahf
mov
xchg
inc
adc
imul
mov
xor
test
mov
into
cmpsl
int
mov
or
sbb
cmpsb
dec
jg
add
js
in
jmp
push
ljmp
add
and
aaa
ja
cmc
test
push
js
lret
js
out
pushf
jno
imulb
jae
daa
xchg
jbe
push
dec
or
imul
enter
test
mov
imul
sbb
pop
mov
mov
inc
outsb
sahf
cwtl
fstps
xor
mov
xchg
sbb
js
mov
ss
push
xor
mov
pop
or
mov
push
cmp
or
lods
arpl
sub
jne
rcr
adc
fisubrs
testl
sbb
xchg
pop
xchg
push
mov
data16
push
inc
out
jbe
add
cmp
pushf
pop
fsubs
adc
pusha
and
dec
popa
popf
fwait
into
mov
enter
sub
mov
imul
je
movsb
cmp
jns
xrelease
push
lcall
mov
adc
adc
push
sbb
jmp
mov
lods
inc
je
sbbl
addr16
cltd
cmp
loop
shl
ror
repz
dec
in
jno
popf
imul
jo
mov
push
les
pop
push
mov
xchg
lahf
filds
mov
cmpsb
ja
add
lahf
sbb
ret
popf
lcall
and
pusha
mov
inc
push
daa
cmp
pshufw
call
push
pop
fcomp
mov
outsl
inc
lds
and
fimull
clc
aaa
out
adc
sub
aad
testl
push
xlat
imul
les
or
mov
nop
fisubs
orb
push
jg
shr
pop
gs
and
xchg
push
repz
pop
in
jnp
or
inc
data16
fs
cmp
inc
mov
add
mov
imull
stos
or
fs
clc
push
sbb
push
mov
jns
add
lret
dec
popf
int3
shlb
adc
dec
xchg
js
sbb
ss
inc
loop
xchg
smsw
aaa
and
mov
imul
mov
adc
mov
mov
fwait
xchg
mov
inc
dec
pop
push
jbe
ja
adc
hlt
jg
out
mov
push
mov
jmp
mov
or
jnp
or
jp
mov
jo
pop
lcall
mov
sbb
loop
or
pop
jo
mov
add
ret
cmpsb
into
out
mov
lcall
movsb
or
fidivrl
pop
je
imul
inc
lahf
pop
ja,pn
pop
mov
negl
imul
and
popl
ja
lds
movsl
cwtl
cltd
imul
leave
shlb
rolb
aas
or
out
mov
xchg
out
xor
pop
loop
inc
inc
add
fdivl
pop
icebp
lods
imul
cmp
add
orl
es
xor
out
jns
addl
mov
ficoms
xor
pop
arpl
imul
out
imul
mov
or
js
inc
fisttpll
and
sahf
add
imul
sbb
jge
jecxz
cmp
xlat
pop
nop
ss
adc
cwtl
sub
mov
fwait
arpl
jne
mov
pop
addb
xchg
sub
mov
int3
mov
or
add
xor
cltd
mov
pushf
fwait
inc
jle
shl
push
imul
pop
or
mov
sub
add
push
imul
mov
std
mov
jecxz
movsb
push
pop
cmpsb
or
lret
sbb
lock
bound
xchg
dec
xor
jg
push
sbbl
xchg
xor
aas
sbb
ror
xor
adc
mov
mov
movsb
dec
imul
sub
sahf
fiadds
cwtl
push
sbb
loope
mov
std
popa
lock
jge
decb
in
xor
push
rcrb
aad
inc
adc
test
xchg
xchg
and
dec
pop
roll
shrb
daa
jne
inc
push
xor
push
into
enter
negl
shll
movsl
pop
test
loope
test
xchg
lods
sbb
rcl
pop
shrb
or
lods
add
shrl
xchg
fwait
mov
aaa
xor
movsl
js
sbb
xchg
imul
sahf
mov
in
push
dec
cltd
aam
insl
jg
cltd
mov
ja
mov
sbb
leave
cld
shlb
arpl
shrl
loop
xchg
or
fisubs
adc
adc
loop
dec
repz
bound
cltd
cltd
add
cmpsb
push
fcmovne
les
cltd
mov
xchg
test
out
xorl
nop
pop
rolb
movsb
aaa
hlt
jbe
xor
xor
mov
inc
sahf
xor
xor
cmp
iret
test
jbe
mov
es
xchg
adc
out
inc
cmp
push
ljmp
fdivrp
jo
notl
mov
sbb
mov
sub
cli
loop
and
into
mov
cmp
subb
mov
sahf
sbb
sub
jp
fmul
mov
cmovae
in
dec
mov
nop
call
mov
out
inc
ss
inc
mov
or
test
scas
loopne
jecxz
enter
aaa
call
sahf
cmp
lods
adc
bound
pushf
add
pop
nopl
in
imul
out
dec
fsubrp
add
out
mov
push
shl
jbe
in
lds
push
sahf
arpl
push
popl
loopne
daa
pop
or
pushf
shll
sahf
into
push
jmp
dec
adc
cmc
jg
jbe
icebp
nop
jecxz
popa
inc
pushf
pop
cltd
xchg
fisubrl
sbb
mov
jne
push
sbb
cmpsb
out
aas
mov
repz
sub
jecxz
test
push
and
outsb
jns
ret
fidivs
movaps
int
sub
push
add
ret
mov
sbb
je
jg
and
mov
and
pushf
pop
imul
xchg
int3
mov
je
in
cwtl
sti
inc
add
dec
ja
and
data16
outsl
aaa
push
cmp
push
pop
xor
out
jmp
inc
leave
dec
jns
lahf
adcb
cmc
sbb
mov
adc
icebp
into
sub
sbb
cmp
cwtl
push
jb
cmp
pop
inc
inc
movsl
mulb
ljmp
imul
mov
and
xor
xor
mov
repnz
lods
jne
adc
dec
out
scas
jecxz
sti
push
mov
push
or
subl
inc
adc
stos
mov
daa
mov
sbb
sub
aaa
mov
les
jo
mov
cs
ljmp
jl
or
lcall
sti
in
sbbb
xor
jp
push
dec
sarb
mov
xchg
addr16
mov
repz
jae
pop
mov
sub
je
in
aad
stc
pop
cmp
out
imul
or
xor
lahf
pop
push
sahf
enter
dec
push
cmp
lock
pop
pop
jnp
pop
test
and
jne,pt
lcall
cmp
mov
scas
test
xchg
pop
loope
cmpsl
inc
dec
mov
test
addr16
mov
pushf
cmp
out
adc
add
and
aaa
pop
sub
ja
xchg
lahf
nop
mov
and
lcall
or
mov
fwait
and
mov
xchg
and
xchg
adc
fimull
daa
loopne
cltd
mov
cmpsl
and
stos
pushf
push
dec
jno
orb
cmp
add
sbbb
sbb
jmp
dec
test
les
aad
test
dec
loopne
aas
xchg
jmp
and
add
call
mov
aaa
and
sbb
sbb
adc
push
in
xchg
fbld
jecxz
sbb
sbbl
sub
data16
ret
dec
push
add
pushf
stc
popa
jno
push
mov
adc
or
orl
jne
addr16
push
ret
cmpsb
jnp
pop
add
sar
arpl
mov
aaa
ret
dec
out
jp
add
mov
dec
scas
aas
or
sahf
inc
sbb
std
and
or
xchg
addr16
in
leave
mov
cmp
lds
jp
add
movsb
es
adc
je
inc
push
add
xor
push
and
push
pusha
ja
mov
test
addr16
cmp
lahf
push
in
lds
mov
in
stc
mov
mov
mov
xor
in
push
xchg
jns
xchg
push
jb
pop
pushf
jb
jp
les
mov
add
imul
push
test
sub
fwait
lahf
fldcw
jb
addr16
outsl
fsubrl
sbb
or
and
daa
lea
repz
shrl
or
aad
sbb
leave
fcmovbe
out
jnp
lds
cmp
jl
cli
push
stc
popf
sub
fnstcw
pop
ffree
das
popa
or
and
pop
or
orb
adc
adc
lds
or
mov
movb
loope
aaa
lods
xchg
and
dec
mov
mov
icebp
cmp
push
sub
adc
decb
jne
mov
cmpsl
rolb
stos
je
pop
addr16
mov
sti
sbb
jle
es
pop
jne
icebp
dec
sbb
repz
jp,pt
jle
in
adc
idivb
movsb
dec
jl
out
testb
and
pop
xlat
push
mov
cmpsb
jbe
lods
push
imulb
mov
ret
nop
hlt
inc
add
sbb
push
push
out
mov
or
jae
lahf
outsb
imul
ja
adc
push
sbb
cld
out
jecxz
rcr
mov
cmpsl
mov
lcall
pop
imul
pusha
out
lcall
aas
lock
sarb
mov
fwait
xlat
mov
xchg
scas
cmc
cltd
iret
mov
cwtl
stos
cwtl
mov
adc
pop
fwait
inc
imul
xor
xchg
and
mov
mov
jl
pop
imul
cmc
addr16
add
xorb
push
sbb
push
add
pusha
pusha
pop
or
jns
mov
mov
inc
cmpsl
fwait
pop
push
add
test
adc
addr16
dec
gs
stos
mov
fwait
adc
mov
lahf
imul
pop
out
insl
js
lret
les
and
jb
int3
jmp
lea
pushf
sub
dec
nop
mov
mov
jecxz
js
shll
mov
lea
andl
gs
and
sbb
or
mov
nop
or
add
push
lods
nop
inc
lea
ret
fwait
addr16
fisttpl
test
xchg
push
cmp
adc
scas
jnp
mov
mov
jae
ss
xor
movsb
sub
jns
push
xchg
insl
nop
ja
mov
mov
sub
xchg
cs
mul
mov
pop
jb
sbb
ds
add
popa
pusha
adcl
push
imul
or
cmpsb
and
cmc
int3
jecxz
outsb
mov
jne
test
notl
and
inc
mov
xor
pushf
inc
jecxz
xchg
and
cld
addr16
mov
lret
cwtl
ljmp
pusha
dec
sbb
ja
scas
mov
mov
les
jmp
xor
xchg
push
sbb
cmp
into
jb
pop
mov
cmpsl
and
arpl
sub
jl
test
or
dec
jb
sarb
and
enter
push
daa
mov
dec
add
or
pop
cmp
cmp
dec
sub
or
dec
ror
fwait
sbb
or
lcall
pushf
ljmp
or
xchg
mov
pushf
add
ja
xor
sub
adc
mov
out
aaa
out
cmp
fldcw
mov
stc
bound
hlt
into
je
push
add
pop
js
aas
jmp
fstl
push
test
mov
or
gs
mov
inc
pop
mov
mov
push
in
popa
repz
cmovs
mov
add
in
pusha
xchg
aam
lahf
test
insl
aam
push
lahf
push
in
ret
repnz
stc
or
in
je
fisubs
add
mov
mov
adcl
mov
sub
test
out
ds
hlt
and
mov
jp
jae
push
arpl
inc
les
or
bound
mov
push
stc
xchg
cmc
jecxz
add
push
sub
xchg
pushf
rorb
adc
fstps
mov
les
adc
jmp
inc
jnp
scas
xorb
or
orb
lea
xchg
lods
mov
adc
add
xor
and
inc
mov
cltd
mov
lret
pop
sbb
addr16
mov
jno
sbb
jecxz
fprem1
add
or
aad
mov
outsb
push
mov
pop
outsb
rcrl
sti
inc
sub
jp
add
ljmp
in
fisttpl
push
adc
lea
loopne
dec
mov
jns
insb
xchg
adc
popa
gs
push
jbe
imul
mov
xorb
nop
adc
and
xor
ficompl
in
push
mov
fstpl
xchg
cmp
stc
mov
xchg
hlt
or
movsl
push
xor
mov
aas
and
cwtl
sarb
and
sar
lahf
fsub
sbb
mov
mov
enter
or
push
mov
xchg
jnp
orb
int
pusha
pop
loope
xor
cli
das
test
xchg
nop
mov
adc
sbb
xlat
ret
mov
push
sub
pop
in
imul
jb
pop
mov
test
fnstcw
icebp
mov
mov
test
mov
imul
leave
xchg
pop
or
dec
hlt
inc
cs
insb
roll
dec
repz
mov
aas
mov
data16
jo
mov
enter
adc
push
inc
movsl
dec
and
fidivl
cmp
out
mov
nop
sub
fwait
cmc
xchg
xchg
jecxz
in
push
xchg
mov
stos
loopne
data16
movsb
mov
enter
or
xchg
fisttpll
xchg
dec
mov
test
jge
lods
insb
sub
mov
xchg
sbb
stc
jo
jmp
pop
bound
pop
test
imul
icebp
lahf
aas
cmpb
nop
and
daa
test
lahf
scas
bound
mov
mov
xchg
fwait
clc
movsb
jg
add
dec
cmp
int
cmp
andl
lea
push
fisttpll
push
shll
jle
xchg
and
popf
xor
cltd
mov
adc
inc
pop
mov
stc
lods
arpl
sub
and
pop
subl
popf
mov
pop
and
movsb
inc
lret
fdivl
push
xchg
inc
inc
sbb
fstl
inc
mov
movsb
sbbb
rcrl
lds
fcoml
xchg
push
daa
sub
nop
mov
data16
pop
sahf
mov
pop
add
std
cmp
dec
add
pop
xchg
leave
stos
cmp
aad
shl
mov
jg
fadds
dec
sahf
add
cwtl
mov
stos
or
and
loope
inc
push
mov
imull
rorl
inc
sahf
mov
mov
add
lea
repnz
dec
mov
lds
test
adc
fisttpl
mov
das
popa
outsl
ficoml
out
hlt
or
jno
add
imul
movsb
pop
push
dec
leavew
cmc
xchg
xchg
and
sub
out
dec
popl
sbb
xchg
mov
mov
es
jnp
invd
lcall
data16
repnz
mov
fldt
push
hlt
sbb
dec
mov
imul
adc
popa
lods
fsts
lcall
out
js
xor
cmp
daa
sbb
xchg
adc
pop
adc
cmp
andl
adcb
jg
out
dec
xchg
faddp
fwait
testl
cmp
stc
mov
jg
cli
pop
insl
aaa
pop
pop
cltd
and
ret
mov
out
jno
mov
inc
jl
dec
sbb
xor
movsl
inc
xor
test
xchg
mulb
xor
mov
aaa
jmp
test
adc
pop
pop
xchg
jge
xchg
arpl
inc
or
and
mov
mov
lret
movsl
cmp
imul
mov
inc
addb
jae
sbb
pop
push
lods
push
test
sbb
mov
add
leave
sub
daa
lods
stos
jns
pop
mov
sbb
pop
xchg
pop
and
test
test
test
and
in
jbe
mov
jl
inc
pop
jp
lock
mull
mov
xor
or
nop
lds
fwait
adc
sti
adc
jge
imul
inc
cmpsl
bound
and
jp
xchg
jle
dec
test
push
xor
adc
cld
xchg
pop
cmp
push
jmp
stos
dec
aas
fimuls
imul
dec
rcl
mov
lcall
enter
pop
mov
bound
adc
sub
inc
push
cwtl
cmp
inc
push
shl
ss
push
fimull
add
lock
in
xchg
mov
lcall
and
rclb
mov
testl
push
push
scas
pop
fmull
fwait
std
outsl
mov
sbb
repz
test
push
mov
in
shl
cmpsb
or
test
imul
mov
xor
inc
mov
add
mov
hlt
pop
mov
sahf
leave
lret
jp
or
dec
imul
pushl
pop
xchg
je
shll
insb
or
repz
cmpsb
adc
xchg
subb
add
push
test
mov
call
xchg
scas
xchg
aas
mov
sar
mov
jnp
subl
fwait
pop
lods
addr16
pop
mov
sbb
cmpsb
mov
insb
cli
fadds
mov
orl
in
or
adc
pop
inc
imul
sbb
pop
adc
das
movsb
pop
sub
fimull
loope
lret
sbb
jecxz
xor
dec
ljmp
inc
addr16
jmp
notb
fdivp
insl
out
sbb
mov
roll
rclb
mov
ret
aas
jnp
aas
out
sbb
mov
mov
or
mov
adc
dec
xor
insl
fadds
dec
aas
fs
jbe
adc
dec
movsl
lods
daa
jae
test
es
adc
jo
mov
adc
inc
fiaddl
mov
or
ja
xchg
sbb
xchg
pop
adc
sbbl
and
or
push
mov
icebp
insb
jns
cmp
pop
cmp
imul
push
and
bound
lods
cmc
push
mov
xchg
jo
cmp
movsb
clc
sub
dec
cmpsl
sbb
fisubrl
lea
in
test
test
jmp
call
das
cmpsl
leave
fimuls
mov
popa
inc
or
imul
hlt
adc
xor
mov
imul
icebp
jge
pop
cmp
pop
push
fldz
sar
mov
aaa
dec
fisubl
imul
test
scas
jo
out
jno
fwait
or
jne
push
inc
pop
call
cwtl
xor
mov
pop
mov
aad
aad
in
orb
cmp
xor
rolb
lcall
xchg
fld
ja
add
jp
cwtl
xchg
or
test
xchg
mov
fs
mov
mov
addb
cmpsl
mov
and
ja
xchg
cltd
gs
jnp
insl
arpl
leave
sbb
inc
push
decb
dec
jge
rcrl
orb
repz
mov
shll
mov
push
jge
out
out
mov
mov
fistpl
adc
inc
and
into
xchg
cmp
call
mov
cmp
sbb
push
add
jo
push
ffreep
xlat
aas
cmpsl
pop
std
ja
cmp
cmp
out
add
or
clc
add
subb
xor
add
movsb
inc
ljmp
mov
push
scas
je
inc
out
jae
push
mov
fbld
xor
inc
mov
xor
xchg
jge
push
fiadds
inc
cwtl
shlb
int3
jle
mov
imul
fnstcw
rcr
dec
jno
push
std
popf
jns
cwtl
sub
rcrb
lea
movsb
popf
mov
push
dec
cwtl
hlt
sti
xlat
pop
inc
pop
fcoml
fwait
push
js
pop
cmp
mov
sti
rol
imul
sbb
pushf
xorb
dec
xchg
iret
test
in
pop
out
mov
ss
cwtl
sub
inc
dec
mov
mov
lret
inc
push
outsl
rolb
pop
push
daa
clc
jge
add
mov
inc
xchg
ret
es
push
push
loop
sub
in
clc
fdivs
pop
mov
xor
outsl
pushf
dec
loope
jnp
out
xchg
or
mov
sbb
sub
mov
das
cwtl
or
jnp
mov
add
or
inc
cmp
mov
mov
sub
mov
adc
fsubs
jg
adcb
out
inc
pop
xor
pop
mov
outsl
sub
adc
aad
pop
sahf
lds
pop
sub
ds
cmp
inc
jo
xchg
pop
sub
dec
mov
repnz
push
loope
shlb
cli
xchg
stos
outsl
insw
and
les
jb
enter
repz
mov
dec
jg
testb
nop
jmp
in
pop
in
divb
mov
out
push
out
sub
xchg
push
jecxz
inc
js
push
das
pop
ss
jae
shrl
lds
cmp
add
lods
cmpsl
aam
pop
adc
fwait
hlt
sbb
inc
loop
rcrb
lock
cmpsb
clc
push
fstpt
push
xlat
push
dec
lods
sbb
push
mov
test
xor
in
test
rcr
inc
mov
cmc
aaa
push
sub
int
cmp
mov
jmp
lret
pop
jecxz
pop
or
ja
pusha
dec
inc
pusha
in
cltd
je
ds
rcll
int3
sub
popa
xchg
xchg
or
imul
fwait
mov
xor
mov
xlat
add
adc
adc
out
sti
aad
repz
hlt
das
lahf
js
and
xor
sbb
push
push
pushf
dec
mov
ds
push
cmp
sub
cltd
addr16
xor
popa
xchg
adc
jno
push
cmp
stos
dec
lret
cli
and
xor
sbb
pop
and
enter
jb
sub
cmp
lock
cmp
xchg
ret
dec
inc
mov
mov
je
push
add
imull
fs
mov
popf
cld
movsl
jecxz
dec
shlw
jmp
or
jecxz
daa
jns
push
cmpsb
dec
push
mov
cwtl
jns
mov
insl
lret
paddusw
fsubrp
gs
imull
and
sbb
mov
jne
outsl
inc
sbb
shrb
fwait
test
ficoms
xchg
adc
fadds
imul
fwait
outsb
mov
int
shrb
lret
repnz
adc
push
pop
cmc
xchg
mov
push
cltd
adc
movsl
add
movsb
pop
mov
mov
sar
addl
jae
or
ret
xchg
mov
sahf
or
shll
cltd
adc
mov
cmc
icebp
shlb
stc
adc
add
or
clc
cmpsb
mov
pop
aaa
lds
or
outsb
mov
pop
ret
enter
sbb
or
addr16
dec
and
jno
les
ja
ss
adc
xchg
jne
addr16
rcrl
mov
out
dec
cmp
add
shrb
mov
or
inc
and
nop
or
rcrb
cltd
outsl
movsb
ficoml
jge
mov
neg
mov
and
cmp
mov
cmp
imul
xor
cwtl
or
lcall
imul
invd
or
inc
pop
adc
sahf
pop
pop
loopne
cmpsl
pop
push
les
xor
add
push
hlt
xchg
xchg
imul
int
daa
mov
out
mov
mov
lret
push
scas
mov
shll
xor
fistpl
mov
sarl
jge
stos
js
push
cmpsb
mov
pop
or
xchg
clc
sub
cwtl
in
aad
rclb
inc
pusha
test
stos
mov
inc
loope
nop
lea
dec
mov
push
jle
adc
jno
pop
xchg
xchg
fnsave
mov
fdiv
or
sub
fwait
pop
aas
iret
pop
cld
hlt
add
lock
arpl
sub
sub
pop
push
aaa
push
pop
in
cwtl
cmpsl
adc
jge
sub
cmp
xor
mov
dec
push
rclb
ds
inc
mov
out
fs
stos
fbld
sbb
shl
add
dec
or
xor
adc
subb
stos
xchg
xchg
inc
xlat
out
aad
mov
mov
dec
int
mov
dec
fwait
push
adc
mov
addb
sub
mov
push
pop
push
xor
pusha
sbb
aaa
divb
xchg
sub
sahf
pop
fildl
jo
ss
test
rcr
daa
and
push
nop
pop
lcall
pop
mov
push
sub
sbb
mov
push
cmp
push
xor
movsb
dec
mov
testl
scas
cmpb
icebp
iret
das
hlt
jl
add
xchg
rcrl
jmp
orb
mov
inc
outsb
ret
and
or
in
or
mov
sub
int
adc
mov
dec
and
or
push
and
imull
and
icebp
and
pop
push
mov
add
mov
sub
js
insw
xor
mov
xchg
stc
cmpsl
or
negb
int
inc
push
push
dec
inc
es
mov
jecxz
push
sub
jecxz
les
es
sbb
or
aad
jle
sub
mov
inc
insb
jg
jmp
jle
sahf
popa
mov
mov
push
loope
or
adc
and
mov
inc
and
mov
cmp
enter
outsl
lahf
dec
xchg
lret
push
out
repnz
lgs
sbb
lods
rcr
jae
pusha
fldl
daa
pusha
pop
movsb
pop
js
je
sub
addl
xor
fiaddl
or
jne
xchg
jecxz
fisttps
aaa
fistpll
add
dec
push
sub
std
push
fistl
adc
xor
jmp
mov
jo
sub
mov
xchg
clc
inc
out
or
jne
mov
lds
jae
or
pop
lcall
adc
pop
insl
dec
and
add
pop
dec
sti
add
or
push
dec
shrl
jo
xchg
imul
pop
inc
xor
je
pop
fimuls
divl
add
jb
stc
mov
or
je
ja
lcall
jb
dec
jle
sti
push
adc
test
adc
add
xchg
xchg
jmp
lock
and
fisubs
cmpsb
mov
rcrb
leave
out
ja
pop
test
stos
xor
shl
pop
int3
jp
outsb
sub
ficompl
mov
stc
aad
sbb
dec
insl
clc
fisubs
mov
arpl
cmp
gs
mov
jmp
push
js
call
hlt
enter
fisttpll
and
add
xor
mov
cmp
dec
out
stos
dec
dec
and
les
fsts
cmpsb
inc
imul
fwait
adc
sbb
sti
push
and
fsts
nop
out
push
dec
test
mov
ja
pop
scas
arpl
ss
mov
inc
pop
ret
add
mov
daa
inc
sbb
push
xor
adc
popa
js
sbb
ret
inc
notl
jg
in
sahf
pop
cmp
lock
fisttps
sbb
aas
ja
ret
jo
cld
sub
insb
aam
adc
fdivl
lea
cwtl
add
cmpsl
dec
outsl
inc
cmpsl
and
and
jnp
sarb
mov
idivb
mov
pop
inc
dec
in
dec
dec
into
sbb
repnz
mov
and
popf
jns
pusha
jmp
sbb
cmpsl
imul
xchg
sub
push
call
in
and
sub
dec
out
mov
icebp
cs
sbb
push
leave
mov
add
fwait
cli
test
scas
sbb
cmp
popa
add
push
jmp
jge
movsb
xchg
jge
mov
adc
push
add
push
lcall
hlt
scas
add
cmp
and
mov
xlat
inc
je
in
fistps
nop
push
loopne
pop
xchg
push
sbb
nop
repnz
push
decl
sbb
push
pop
sti
dec
mov
push
adc
int
cwtl
rclb
mov
or
mov
or
add
xor
mov
imul
outsb
pop
icebp
sub
ljmp
dec
xchg
push
and
mov
mov
arpl
xchg
mov
movsb
fwait
cmpsb
rolb
inc
push
pop
mov
les
je
push
ja
fwait
jmp
jge
pushf
repnz
add
or
xchg
push
inc
imul
and
and
clc
mov
and
dec
adc
or
outsb
fists
mov
or
sbbb
xchg
fwait
push
imul
push
data16
aas
stos
lea
nop
cwtl
movsl
xor
shl
push
jbe
cmp
mov
mov
mov
or
sub
jno
lds
ret
incb
mov
bound
cli
je
shlb
add
xchg
cmpsb
scas
or
divl
bnd
jno
mov
mov
and
addl
adc
xchg
aam
lods
lock
lcall
cmpsb
movsb
shrl
imul
xor
inc
sbb
inc
add
movsb
and
js
jno
push
mov
or
xor
pop
mov
insl
and
lret
cmp
outsb
mov
sub
dec
clc
popf
mov
xorl
fisubl
cltd
nop
add
in
cmp
out
dec
adcl
mov
lret
sub
bound
jecxz
sub
std
imul
jbe
mov
pop
cmp
inc
pushf
cmpsb
adc
lahf
aas
movsb
incl
repnz
in
inc
outsl
cli
mov
jbe
les
xchg
or
sub
or
push
roll
in
pop
rol
cmp
sub
jge
imul
gs
mov
dec
addr16
test
rcr
jle
sub
push
into
dec
jmp
cltd
lret
pop
cmp
adc
dec
mov
leave
aaa
and
xor
sbb
inc
ljmp
movsb
subb
shlb
mov
mov
mov
cwtl
ret
xchg
fwait
imul
loope
out
xchg
test
mov
push
pop
stos
push
mov
pop
cmp
out
push
and
pop
pushf
fwait
push
adc
jle
pusha
popf
mov
scas
and
pop
int3
nop
adc
fwait
ret
and
jmp
dec
lcall
pop
hlt
test
in
fimull
cmp
cmp
mov
or
int3
test
adc
mov
add
cwtl
xchg
fwait
push
fidivs
adc
add
mov
cmp
cmpsb
out
jne
sbb
pop
pop
cmp
add
loope
adc
xor
and
push
in
push
out
push
and
add
dec
xchg
cmp
lret
out
sub
test
imul
dec
imul
fwait
rorl
call
adcb
sti
pushf
fisttpl
adc
arpl
divps
into
cmpsl
out
cmp
fdivs
insl
jp
mov
imul
out
test
fwait
sbb
xchg
cmp
lea
push
mov
sub
bound
cmp
pop
pop
lahf
mov
cmpsl
xchg
scas
sub
mov
aas
daa
adc
and
ret
pop
push
addr16
in
inc
pop
dec
fwait
addr16
xor
or
sbb
mov
movsb
or
pop
mov
push
sub
aaa
aaa
adc
in
jmp
mov
insb
and
push
xchg
adc
imul
mov
sbb
sub
pop
dec
dec
mov
add
push
movsb
pop
add
int
mov
imul
test
leave
mov
imul
xor
cmp
xor
lcall
ja
mov
in
out
mov
sub
cmp
inc
fmull
pop
arpl
aaa
push
ja
mov
xchg
sahf
test
mov
ds
imul
mov
push
jg
inc
int3
adc
pop
lcall
pop
adcb
out
add
cmp
xchg
cld
mov
fdivrs
mov
cmp
mov
adc
add
test
sti
stc
lods
mov
mov
xchg
lods
or
inc
aam
shll
std
fs
fdivr
ja
in
or
fsubl
xor
push
cmp
cwtl
pop
jb
jo
fsubp
jno
adc
movsb
jnp
test
cld
rcll
in
mov
pop
lahf
js
aam
inc
out
jo
test
ja
sbb
jns
pop
nop
mov
xor
jbe
dec
in
push
xchg
cwtl
mov
mov
jb
data16
push
pop
mov
add
xchg
rcll
add
mov
sahf
jg
rcl
and
sub
enter
mov
push
prefetch
or
xchg
jl
repz
mov
pop
sbbb
stc
addr16
push
mov
ficoml
cmp
push
iret
pop
adc
push
jl
test
lcall
or
test
inc
imul
inc
das
jmp
lcall
cmp
mov
fcoml
lahf
cmpsb
ja
adc
or
enter
xor
sub
sub
test
pop
push
inc
imul
outsl
andl
test
xor
sti
push
cwtl
sub
fcmovu
imul
lcall
aaa
cmp
cmpsb
int3
cmp
jecxz
mov
outsl
fldenv
sbb
addb
fldenv
jns
imul
sbb
pop
movsl
mov
push
sar
ja
ja
lret
in
fldcw
jnp
jno
xchg
rcrb
imul
xchg
inc
insl
pop
sbbb
int3
xor
das
hlt
js
add
mov
adc
scas
sbb
mov
outsl
adc
imul
cmp
in
loopne
jmp
aas
movsl
jg
sbb
xor
repnz
insb
sub
mov
cld
lea
or
add
cmp
pop
stc
dec
mov
pop
sbb
push
scas
and
js
jns
and
and
addr16
xlat
dec
sbb
js
xorb
jle
mov
push
popl
fs
mov
imul
icebp
dec
in
call
out
push
dec
sbb
js
or
lret
lcall
xchg
imul
ret
scas
sbb
cmpsb
mov
lock
jo
xlat
cmpsb
dec
nop
fcompl
test
add
pop
xchg
cli
push
mov
pushl
pop
icebp
sub
push
vphaddubw
jno
int
push
out
loope
nop
xor
popf
imul
sbb
cli
inc
add
mov
imul
ss
pop
adc
loop
sub
mov
sub
xchg
adc
rorb
fcomps
imull
ja
test
cmp
sbb
add
push
mov
mov
fstpl
adc
leave
lds
xchg
aaa
mov
xor
push
push
fidivrs
lret
js
dec
test
mov
mov
lock
jo
cmp
add
dec
cmpsl
ss
bnd
fcomip
mov
dec
sahf
cmp
jo
xchg
xchg
push
push
fwait
stos
push
sti
jns
imul
xchg
inc
insl
jecxz
mov
jno
insl
or
xchg
and
sub
push
mov
push
int3
jp
loop
imul
je
or
andb
mov
or
jns,pt
inc
sub
ljmp
insl
mov
gs
mov
cmc
ja
and
loope
jns,pt
mov
pop
xchg
dec
xor
leave
ljmp
pop
and
fsts
ss
cmp
or
mov
push
mov
mov
or
xor
scas
outsl
sbb
out
aaa
xor
push
sahf
mov
mov
inc
ja
push
lret
xchg
push
popf
incl
mov
movsb
cmp
pusha
cwtl
lret
mov
aad
incl
lcall
xor
loopne
xor
cmp
or
addl
icebp
mov
pop
jecxz
out
iret
cmp
fdivr
loopne
inc
shrb
mov
and
pushf
aad
mov
addr16
int
pusha
mov
test
dec
test
xchg
inc
xor
xchg
repz
daa
rclb
out
and
push
pop
and
nop
lahf
imul
jmp
xchg
jb
xorl
mov
jl
push
lea
add
stc
arpl
scas
pushf
scas
add
in
int3
jg
out
sbb
mov
cmpsb
iret
lcall
imul
adc
inc
and
xor
subl
addr16
or
cmp
lret
movsl
lea
mov
stos
mov
push
dec
in
fs
std
popa
push
jbe
fdivrl
pushf
mov
in
push
or
in
mov
inc
xchg
xchg
lea
push
jb
out
xchg
push
sub
lahf
int
add
mov
cltd
or
mov
mov
jae
mov
pushf
xor
mov
cld
adc
mov
mov
scas
orl
fimull
call
mov
pusha
ret
pop
cmp
test
and
inc
addr16
daa
inc
lods
clc
insl
pop
push
iret
cmp
ljmp
dec
add
sbb
jecxz
cmpsb
inc
cmp
and
rcrl
push
xor
xor
test
mov
cltd
jns
scas
mov
iret
cltd
cmp
insb
test
jmp
ljmp
pusha
fld
pop
test
jmp
cmp
jecxz
leave
stc
mov
jecxz
mov
cmp
xchg
push
outsl
sti
je
daa
nop
daa
popa
mov
xchg
fadds
push
jbe
pop
stos
dec
adc
out
lock
aam
mov
lret
jno
stos
repz
sub
sub
mov
rorl
pushf
or
or
out
int3
sti
sub
dec
push
aaa
xor
and
into
scas
icebp
push
roll
fs
test
cmp
in
inc
ret
int3
sbb
jmp
andb
mov
cmp
xchg
movsb
xchg
push
jnp
iret
adc
inc
addb
int
pop
in
and
popa
xor
inc
pop
les
daa
pop
lea
adc
pusha
dec
gs
int
dec
pop
inc
mov
jg
or
push
int3
adc
popa
pop
outsb
mov
jae
adc
pop
mov
fcmovnbe
pop
add
ja
ret
cltd
aas
jecxz
cwtl
dec
fwait
or
pop
add
negl
cltd
mov
mov
lret
add
xchg
inc
cli
imul
lods
in
mov
add
jne
mov
iret
and
cmp
ret
push
aad
cmpsb
mov
jecxz
in
sbbb
imul
jp
mov
orl
add
imul
cmp
mov
clc
adc
sti
bound
push
xor
and
adc
jb
daa
rcl
cmp
xor
jecxz
subb
pop
aas
jnp
pop
jnp
or
pusha
fwait
daa
jecxz
into
mov
sbb
push
sub
mov
lods
xchg
cli
xchg
outsl
cli
sbb
sbb
inc
addr16
cld
adc
mov
mov
mov
fcmovnu
add
adc
pop
inc
push
or
imul
js
jno
cmp
sbb
out
mov
cs
sub
inc
imul
iret
mov
lahf
pop
cmpsl
mov
jp
fsts
mov
testl
lret
fwait
inc
fcmovnb
lods
dec
lret
roll
in
sbb
cmp
inc
and
sbb
fwait
mulb
lahf
mov
cltd
jne
mov
repz
mov
cmovno
inc
das
addb
pop
into
lahf
pop
adc
outsl
and
fcomps
jmp
sti
sbb
lea
addl
or
or
xchg
fmuls
xorl
es
lahf
pop
mov
push
xor
sbb
inc
adc
lret
jecxz
and
sarl
loope
sahf
lret
lret
mov
fidivl
cmpb
test
mov
push
stc
jne
in
icebp
push
mov
fs
shll
inc
inc
cwtl
adc
jecxz
fyl2xp1
push
mov
sarl
mov
push
lods
or
iret
push
mov
lods
mov
lahf
lret
call
outsl
out
dec
xchg
fcoml
mov
mov
loope
dec
repz
jp
mov
popf
fcompl
jnp
pop
xchg
mov
in
dec
push
call
ficompl
cltd
xchg
rcrl
addr16
push
adc
mov
and
cmp
inc
clc
add
and
cs
mov
stos
jns
ret
cmpb
mov
stos
mov
lods
adc
mov
xchg
dec
xchg
aad
into
in
lds
aaa
ret
dec
xchg
mov
test
ret
out
loopne
push
mov
push
sbb
jp
out
mov
or
sbbb
adc
adc
push
out
shlb
jmp
xchg
daa
pop
fwait
xchg
xlat
inc
sub
dec
xchg
mov
jp
adc
cmp
mov
ret
inc
mov
or
popa
mov
dec
jp
sub
hlt
lods
add
mov
adc
xchg
sahf
xlat
sbb
les
pop
adc
decl
imul
sbb
mov
ja
fcmovbe
dec
mov
or
loop
lahf
mov
push
roll
popa
mov
imul
outsl
push
sbb
pop
add
or
arpl
or
fs
into
repnz
adc
add
test
idivl
out
inc
cwtl
pop
rorl
inc
mov
sub
inc
xchg
rorl
sub
pusha
cmp
icebp
inc
jmp
dec
xchg
sbb
jecxz
cmp
cmc
pop
xchg
sub
sub
jne
notl
and
inc
and
scas
mov
cmp
out
js
imul
repz
iret
xor
pop
int
jo
ret
add
sbbl
xor
test
pusha
fmull
stos
mov
push
mov
imul
inc
push
sbb
xchg
aaa
xor
mov
or
sbb
rorb
xchg
aas
jmp
test
in
pop
cmc
inc
lock
lock
sbb
mov
dec
rep
gs
mov
das
pop
add
pop
inc
mov
in
jns
jb
pop
fisubs
fwait
nop
adc
je
cmp
int
pop
fs
mov
addl
mov
out
or
mov
add
adc
inc
aaa
push
lret
dec
mov
or
call
ret
xchg
subl
icebp
aaa
sub
xor
pop
lcall
arpl
lock
push
int
test
sub
or
mov
mov
mov
lock
ds
pop
out
push
push
sub
pop
adcl
jno
pop
cmp
inc
jl
adc
stos
aas
ret
lret
loopne
or
sub
mov
mov
out
test
xchg
mov
hlt
inc
inc
pop
test
daa
imul
js
push
aas
mov
mov
xchg
dec
mov
loope
sahf
jg
sbb
jo
xor
and
aaa
aad
jle
and
arpl
mov
mov
pushf
inc
fldcw
jecxz
cmp
mov
imul
push
inc
push
pop
sahf
adc
mov
loopne
popa
lea
push
or
pop
jno
leave
inc
jo
mov
mov
and
or
xor
out
int
insl
sbb
imul
fwait
addr16
mov
ja
shl
cltd
out
jo
mov
push
addr16
jg
sahf
call
or
popa
and
mov
push
out
popa
mov
mov
adc
pop
js
pop
test
hlt
into
pusha
sub
shlb
adc
cmp
cmp
dec
or
ja
jecxz
xchg
adc
mov
cmpsl
pop
icebp
addr16
cmp
dec
notb
lahf
push
cmp
jno
cs
or
lcall
jg
and
in
add
cs
clc
xor
dec
roll
stos
push
mov
mov
lcall
xchg
dec
adc
jns
or
jg
ror
mov
pop
jnp
lock
mov
push
insb
repnz
orl
sbb
adc
subb
xor
sub
jg
testb
lea
imul
lahf
mov
cmp
mov
pop
pop
sar
mov
inc
enter
icebp
data16
jno
inc
mov
cs
lret
icebp
dec
mov
xor
int
cmp
fwait
mov
lea
shll
pop
imul
pop
adc
add
mov
lods
out
inc
lods
scas
pushf
idivb
std
inc
or
mov
mov
inc
movsb
mov
add
push
cmpsb
mov
mov
xor
sbb
cmp
or
loop
mov
xchg
mov
push
push
mov
jae
imul
imul
out
cs
daa
add
out
mov
jae
ret
rol
test
xchg
fwait
push
daa
inc
jno
pushf
pop
jmp
fmulp
leave
pop
cmp
adc
mov
mov
jecxz
ds
addr16
or
xlat
imul
pop
mov
ficoml
imul
sbb
push
and
inc
push
jl
int3
cwtl
shr
movsb
in
cmp
lcall
mov
mov
fs
iret
push
leave
xchg
pop
lcall
sbb
jnp
out
adc
test
fdivl
pop
dec
rolb
aaa
daa
push
mov
mov
movsb
push
adc
iret
mov
cmp
sbb
xchg
or
decb
xchg
dec
xor
inc
cmpsl
lahf
cs
push
pop
data16
movsb
negl
roll
or
mov
imul
pop
cmp
adc
lea
adc
out
adc
or
dec
add
icebp
sub
mov
dec
mov
xchg
int
push
in
outsb
inc
popa
cli
jecxz
mov
sbb
popa
cmp
inc
iret
sub
cmpsb
pop
pop
inc
dec
clc
sahf
ja
std
xchg
in
inc
push
test
int3
push
mov
jbe
sahf
pop
hlt
push
data16
ja
sti
imul
imul
or
stc
mov
mov
insl
cmp
bound
pusha
push
adc
pop
mov
cmpsb
leave
sub
mov
mov
fdivrl
add
cmp
aaa
fidivrs
push
dec
fwait
mov
xchg
or
cmp
pop
shll
int
jle
xchg
fdivl
xchg
loopne
movsl
pop
ret
pushf
lods
je
pop
addr16
jno
sbb
js
in
jecxz
and
stos
test
inc
cmp
pop
pop
mov
ja
jns
mov
sbb
lea
xchg
sub
push
mov
mov
sub
ja
mov
fstps
and
imul
fmull
outsl
les
leave
lock
xor
dec
std
add
fwait
jo
push
movsl
test
mov
cltd
loopne
int
fcoml
cmc
pop
subb
test
xchg
jno
clc
dec
imull
std
pusha
lock
xchg
fistpl
sti
addr16
or
sbb
mov
pop
repz
gs
sahf
pushf
hlt
lahf
stc
insl
adc
xor
mov
adc
mov
sub
dec
dec
mov
ja
out
pop
mov
cmp
mov
sahf
roll
mov
dec
mov
pop
sahf
scas
in
das
pushf
add
cmp
pop
push
shll
lcall
jl
out
into
imul
lods
inc
movsb
pop
add
xchg
jecxz
xor
push
or
xor
xchg
jae
rcrl
lcall
and
dec
pop
jecxz
jp
xor
mov
sub
and
pop
ljmp
imul
add
inc
adc
call
add
mov
fwait
mov
pop
icebp
or
xchg
push
pop
cmp
cmpsl
sub
test
mov
ss
pop
mov
in
or
or
xchg
test
xchg
push
inc
bound
imul
sbb
jmp
pop
jnp
aaa
dec
lea
out
mov
ja
push
shrl
aas
out
sub
fiaddl
jo
push
inc
js
fwait
les
push
test
int3
icebp
jg
sbb
in
push
ds
dec
shr
lahf
xlat
push
add
ss
push
mov
dec
inc
fs
cltd
mov
mov
addl
jae
push
ficompl
cmc
or
cwtl
xor
pusha
sub
mov
shrl
adc
test
mov
rorl
mov
dec
imul
sub
xchg
adcb
sbb
lods
sbb
sub
test
xchg
outsb
pop
xor
xchg
or
xchg
dec
pushf
mov
jae
ja
fsts
shrl
int
mov
inc
mov
mov
cmp
cmpsb
and
mov
insb
sbb
insb
push
cmp
int
add
or
int
inc
xor
mov
movsb
sahf
sbb
imul
add
cld
clc
pop
ror
test
push
insl
mov
ret
lods
fwait
enter
nop/reserved
pop
sbb
ret
lahf
or
repnz
sub
mov
cwtl
pusha
jmp
scas
add
scas
imul
xor
sbb
call
mov
jmp
sbb
bound
add
pop
stc
incb
adcl
and
icebp
iret
add
cmpsb
push
ja
nop
call
call
pop
lcall
inc
mov
pop
add
adc
cltd
dec
fs
lahf
incl
adc
lcall
cmp
rol
fists
jmp
mov
adc
push
jo
mov
adc
ja
xorb
mov
fidivs
xor
clc
xchg
pop
sbb
rcrl
gs
sbb
roll
push
cmpsb
mov
xchg
out
mov
jmp
cld
mov
je
jno
adc
aas
xchg
ljmp
push
mov
pop
std
in
aas
scas
mov
sub
or
mov
xchg
jbe
xchg
jae
and
xlat
sub
or
inc
xchg
repnz
imul
sub
imul
mov
shrb
push
mov
adc
lcall
inc
popa
int3
in
mov
push
jecxz
push
into
xchg
aas
inc
mov
int3
mov
lret
dec
and
das
cmp
pop
aaa
push
cmp
pop
xchg
andl
mov
pop
add
faddl
aaa
call
pushf
pop
adc
lds
fdivl
out
dec
mov
out
xor
or
pop
push
inc
jbe
cwtl
pop
imul
pop
lock
outsb
leave
rclb
jo
daa
add
paddsb
repnz
adc
jns
mov
sar
dec
rol
imul
out
mov
lea
in
sub
adcb
ja
lret
jns
push
pop
fwait
or
mov
adc
push
dec
sbb
negl
scas
pusha
mov
stos
mov
outsl
bound
test
gs
jecxz
scas
jbe
imul
outsl
cmp
dec
imul
cmpsl
or
leave
aas
test
mov
ret
fwait
jle
popa
iret
divl
push
pop
fdivrs
add
fistl
sbb
imul
inc
mov
cmp
mov
imul
dec
xchg
or
in
movsl
lahf
pop
mov
xor
adc
push
mov
out
cld
pop
scas
fiadds
dec
mov
add
in
lahf
outsw
adc
cmpsb
ret
inc
xor
mov
push
ss
cmp
popf
in
lcall
push
jmp
or
dec
outsl
repz
push
jg
lahf
push
out
xor
push
mov
pop
mov
sub
ja
or
insb
das
outsb
out
pop
cmpsl
hlt
jns
pop
and
aad
mov
jp
inc
lret
xchg
bound
fwait
adc
pop
fmull
negl
imul
jne
pop
push
hlt
push
and
mov
cwtl
pop
adc
leave
rcr
ret
popf
out
insl
inc
popa
mov
mov
out
mov
sub
mov
je
cmp
jb
repnz
icebp
loopne
add
dec
sub
mov
std
and
pusha
push
idivl
addr16
pushf
inc
xchg
iret
pop
lahf
adcb
fwait
mov
lea
pop
fldt
sbb
int
mov
sub
lock
cmpsb
imul
adcl
jne
push
out
push
or
daa
fadds
addr16
fs
out
and
jmp
lods
or
ret
cmp
cmp
ret
sub
push
ljmp
jnp
xchg
mov
push
out
sahf
sbbl
cmpsb
push
push
inc
pop
arpl
fxch
jecxz
xchg
or
icebp
daa
or
sbb
mov
test
pop
repnz
addr16
roll
inc
test
sbb
lock
push
rcrl
ja
jns
aad
inc
cmp
push
mov
push
mov
mov
xchg
cmpb
xor
adc
movsl
cmc
inc
jl
cmpsl
inc
xor
rcll
pop
orb
ficoms
jo
daa
movsl
inc
je
imul
loope
and
jle
xchg
and
out
xchg
gs
xchg
push
in
sar
imul
loope
ljmp
fnstenv
mov
and
sarl
adc
adc
or
cltd
push
jns
sub
jbe
or
xchg
jge
imul
xor
lcall
stc
xchg
add
outsl
mov
arpl
add
repnz
lcall
and
ss
pop
dec
mov
pop
lods
sub
int
ret
stc
mov
icebp
jne
dec
jp
fs
xlat
ret
andl
int3
fs
dec
fxch
adc
insl
push
and
cld
cmpsl
pop
sub
addr16
jle
sbb
ja
outsb
push
cmpsl
mov
pusha
mov
add
mov
nop
sub
jb
sti
jne
das
mov
iret
jp
adc
lock
jp
push
mov
pop
push
pop
inc
push
push
jge
addr16
scas
push
imull
lods
sbb
test
pop
cltd
and
addr16
pop
lds
jmp
das
push
lcall
or
stos
divl
fisttps
ja
insl
mov
addr16
les
dec
fs
jp
push
xor
mov
mov
push
movb
and
push
fcoms
ja
movl
jp
push
inc
mov
xchg
lds
mov
dec
addr16
pop
mov
imul
mov
cltd
sbb
fsub
insb
mov
lock
ljmp
adc
in
mov
js
dec
lahf
xor
and
js
inc
cmpl
mov
cmc
cltd
or
aam
aaa
push
or
test
adc
push
es
insl
sbb
or
addr16
dec
data16
lock
mov
dec
fimull
outsb
jecxz
mov
mov
add
xor
adc
push
flds
icebp
pop
cwtl
and
dec
icebp
imul
lods
xchg
xchg
lcall
pop
mov
fsts
into
add
in
lahf
mov
daa
imul
repz
rcll
or
sbb
inc
lds
jp
addl
aas
pushf
dec
mov
insl
cmp
fwait
into
das
data16
in
pop
xorb
stos
imul
cltd
inc
hlt
ss
xchg
inc
in
jns
or
sbb
arpl
les
sbb
mov
sub
popa
mov
dec
aad
in
and
cmp
cli
sahf
ja
cmpsl
mov
mov
repnz
scas
lcall
mov
arpl
cmp
pushf
fnstcw
pushf
jno
sbb
sub
xor
out
xchg
popa
mov
test
adc
adc
sbb
xchg
pushf
icebp
mov
in
out
insb
mov
test
jne
int3
sti
mov
xchg
cltd
rcr
idivb
mov
dec
push
repnz
dec
mov
pop
fdivs
sub
dec
ret
lea
mov
ficompl
addr16
sbb
rorl
or
cmp
inc
cltd
repnz
jne
mov
lods
iret
sahf
lock
mov
je
cmp
bswap
dec
rclb
jmp
fnstcw
psllq
add
push
hlt
mov
nop
addl
mov
enter
lcall
or
aad
xchg
dec
ret
jmp
cld
test
imul
out
pop
in
scas
sbb
mov
mov
sbb
arpl
stc
popa
or
add
xor
loope
das
or
push
movsb
rcll
xor
xchg
lock
out
sbb
jnp
add
xor
shl
jnp
int3
lahf
sbb
xor
popl
add
aaa
push
daa
mov
fisttps
pop
adc
mov
in
pop
adc
sar
jb
push
jno
xchg
imul
mov
sub
shrl
or
jge
sub
mov
sub
pop
std
hlt
or
push
std
xchg
mov
mov
push
push
stos
dec
test
dec
dec
lahf
adc
pop
mov
sbb
jle
pop
cmp
sbb
test
lods
pop
mov
mov
push
in
xchg
or
daa
fsubrl
adc
test
cmpsb
daa
mov
xchg
mov
adc
push
mov
push
repnz
adc
sahf
inc
add
jge
push
nop
hlt
mov
mov
or
rcl
jnp
out
push
xchg
add
jecxz
pop
cmp
adc
fimull
sarb
sbb
imul
lds
adcb
jne
addr16
ja
int
dec
mov
pop
movsl
ss
push
pop
shrl
mov
jle
pop
mov
and
xchg
imul
and
mov
int
in
inc
rorb
xchg
shll
dec
cmpb
dec
outsl
mov
das
cmpsb
mov
mov
mov
mov
mov
add
pop
jecxz
dec
xor
jmp
mov
sbb
pop
popa
or
aaa
and
push
lahf
aam
cmpsb
je
repnz
xchg
mov
test
push
push
xchg
lret
and
lods
mov
xchg
jb
sbb
inc
pop
or
mov
out
inc
inc
pop
sbb
xor
in
call
push
js
pop
stos
jmp
cmp
ja
mov
in
cmp
sbb
xchg
rolb
mov
mov
and
mov
xchg
imul
scas
sub
dec
loope
leave
add
xlat
nop
sar
cmp
lret
xlat
sub
push
mov
or
fldt
jo
addr16
xchg
lea
add
mov
xchg
cmp
xor
cmp
jecxz
jmp
mov
popf
mov
gs
sbb
or
xchg
sbb
cmp
inc
aam
and
dec
push
adc
sar
orb
mov
addr16
es
cmp
lcall
ret
pop
idivb
jecxz
sub
pop
dec
shlb
and
in
cmp
jbe
sub
bound
incb
sbb
mov
xchg
pop
mov
dec
clc
cld
adc
inc
mov
lock
rorb
outsl
insl
andb
aas
test
test
or
xor
xchg
pop
es
mov
jbe
pop
addr16
fsts
cwtl
fwait
loop
daa
add
dec
lods
push
insb
pushf
int3
mov
or
dec
jecxz
push
call
and
ds
push
pushf
lods
fxch
cmp
sahf
pop
mov
add
nop
js
in
nop
sub
dec
dec
add
push
int
or
pop
shlb
mov
outsl
fnstsw
addl
jge
jg
pop
or
mov
sbb
daa
pop
aad
sub
mov
leave
lea
or
fcoml
xchg
aaa
jecxz
sbb
imul
mov
ds
mov
mov
push
inc
push
jl
mov
dec
push
push
mov
ret
jae
sahf
movsl
rcrl
cmpsl
dec
push
stc
out
mov
test
leave
mov
xchg
xchg
gs
push
jno
sub
cwtl
rclb
inc
cld
inc
arpl
xor
inc
pop
jp
push
dec
scas
adc
popa
sbb
imull
ficoms
loop
mov
dec
or
mov
mov
cld
xchg
mov
leave
mov
cltd
sbb
mov
jbe
adc
mov
shll
addr16
mov
xor
sbb
out
or
pop
mov
mov
cwtl
into
pop
sub
xor
push
push
pop
loope
mov
shll
pushf
fnstcw
xor
inc
xchg
add
add
cs
scas
test
dec
dec
mov
jp
leave
mov
sub
jno
jge
dec
jne
mov
vrsqrtps
lret
jae
subb
mov
push
enter
call
mov
dec
mov
pop
test
jb
andb
and
repz
lock
stos
cld
push
incl
dec
test
xchg
dec
out
cmp
and
scas
mov
mov
enter
cmpsb
sahf
in
push
sub
xor
test
sub
sbb
adc
mov
mov
int3
xchg
xchg
jns
and
daa
inc
mov
pushf
push
ret
jb
adc
add
test
dec
imul
dec
daa
cmp
popa
mov
outsb
jmp
mov
or
xchg
in
xor
js
insl
cmp
mov
sbb
fsubl
cmpsl
mov
cltd
or
popa
ss
daa
arpl
jp
pop
or
test
add
ret
rcrl
ja
xchg
fldenv
sti
push
adc
inc
insl
jo
push
sbb
xchg
int3
daa
adc
pop
aam
or
aam
xor
adcl
outsl
cmp
mov
sub
mov
sbb
dec
jle
pop
pop
push
jbe
mov
push
imul
lods
jo
mov
lahf
nop
fwait
lcall
push
mov
or
lods
sbb
icebp
adc
pop
imul
cmpsl
addr16
mov
rclb
cld
cs
shlb
cmp
ficoml
xchg
outsl
bound
sbbb
lret
orl
enter
pop
in
loopne
xor
fs
and
pop
adc
cltd
iret
mov
mov
adc
outsl
ds
push
out
and
out
and
cld
scas
push
jo
mov
test
sahf
mov
imul
ljmp
pushf
cwtl
and
sub
mov
sar
lock
sarb
mov
dec
nop
dec
std
fcmovnbe
hlt
push
mov
imul
mov
outsl
xchg
loope
adc
inc
or
mov
pusha
enter
test
ficoml
or
jo
ret
mov
test
out
sub
add
loop
sub
xchg
mov
sub
jb
ja
je
sbb
orb
mov
and
adc
jle
test
gs
imul
push
test
and
xchg
jo
cmp
ret
cmp
or
adc
jecxz
jle
or
inc
or
fs
xorb
jl
aas
dec
outsb
clc
fbld
dec
pop
imul
fdivl
sbb
pop
fldcw
xchg
fwait
sbb
push
add
test
lret
imul
dec
sahf
or
jmp
xor
nop
and
imul
test
mov
lret
jmp
lds
or
pushf
inc
mov
or
push
fwait
cmp
jbe
mov
scas
dec
cli
mov
pop
gs
cmp
mov
fwait
mov
popa
incb
mov
out
ret
addr16
roll
mov
repz
rcrb
shll
push
je
add
lea
data16
cmpsl
push
cmp
stc
lock
xchg
dec
enter
and
push
mov
mov
mov
cmp
test
mov
fwait
mov
sbb
or
and
xor
add
test
into
rcll
jns
mov
inc
mov
sbb
pusha
cmc
xchg
mov
add
mov
xchg
mov
xchg
and
lea
mov
push
fucomip
fimuls
mov
in
mov
pop
cld
daa
fs
sbb
cmp
sbb
jns
es
insl
je
inc
hlt
or
or
cltd
mov
push
xor
adc
pushf
fstl
repnz
add
loopne
mov
xchg
iret
jg
push
cmp
push
aaa
lds
adc
and
jecxz
push
mov
bound
rclb
xchg
mov
jp
jno
pushf
mov
in
bt
bound
sub
xlat
add
mov
cmpsl
vpunpckhwd
cmp
sahf
jmp
fisubrs
shr
xchg
cmpsb
out
jp
scas
cmp
and
nop
mov
stc
lea
repz
mov
outsl
add
sahf
movsb
out
in
pop
ds
sahf
jg
pop
andl
js
sbb
xchg
inc
add
test
fimuls
mov
jns
or
data16
aas
and
push
imul
iret
sbb
pop
and
loop
cwtl
hlt
pop
sbb
stc
push
test
mov
push
dec
rclb
mov
or
imul
mov
mov
pop
in
pmaxsw
popa
jnp
mov
outsb
clc
scas
into
sbb
cmc
cltd
lret
daa
pop
je
push
pop
aaa
fwait
adc
stos
std
ja
sub
mov
into
mov
out
sbb
scas
push
testb
pop
lock
adc
insb
in
dec
jmp
and
sbb
mov
or
pusha
push
jl
xchg
lods
arpl
iret
aaa
xor
hlt
and
fidivrs
mov
movsb
loop
inc
insl
icebp
fiaddl
ficoms
in
aas
jno
les
movl
jnp
mov
pushf
jno
cwtl
imul
dec
sbb
lcall
mov
lcall
xchg
mov
xchg
push
pop
leave
jp
pop
or
adc
mov
sar
fcmovnbe
mov
nop
add
jmp
dec
inc
pop
cld
cld
sahf
je
and
jg
pop
aam
or
insl
test
and
jecxz
insl
cmpsl
mov
mov
scas
or
inc
dec
aad
cmp
imull
out
ja
inc
outsb
dec
notl
iret
out
hlt
xor
jmp
outsl
fisubrl
mov
out
inc
pop
sub
add
repnz
mulb
mov
lahf
mov
pop
movsl
imul
lahf
sbb
dec
insb
movsb
lods
bound
fsubrs
sbb
ja
or
imul
iret
daa
scas
movsl
sub
mov
inc
cwtl
mov
or
cmpsb
jg
lds
push
loopne
sub
mov
push
xchg
fsts
je
push
cs
mov
mov
fldl
fistpl
dec
mull
outsl
pushf
add
into
scas
push
xchg
mov
cli
push
or
inc
push
out
leave
mov
enter
adc
fcomp
sub
into
fiaddl
mov
insl
mov
push
ja
fidivl
push
imul
ljmp
pop
les
shl
gs
pop
dec
in
ja
or
andl
push
pop
xchg
adc
jae
cwtl
rolb
outsb
jmp
and
adc
lock
pop
xchg
pop
mov
jno
mov
push
jl
push
into
sub
int
mov
mov
xor
adc
mov
mov
mov
sarl
into
mov
xlat
adc
arpl
lret
incb
loope
dec
lock
mov
ds
add
out
fcmovu
add
shll
cmpsl
aam
or
lcall
mov
lea
or
ljmp
pop
bound
and
cld
sahf
dec
gs
dec
dec
adc
mov
pop
mov
aad
pusha
xchg
mov
xchg
cmp
cmpsb
in
mov
loopne
xchg
xchg
stos
shlb
push
xchg
repz
jp
jg
fwait
out
lret
in
filds
jo
mov
imul
sub
testl
aas
aaa
lea
pop
idiv
sub
fwait
nop
inc
jnp
aad
inc
popf
pop
dec
inc
mov
lods
mov
lret
aas
or
cmpsl
mov
addr16
test
test
popa
pop
pop
fwait
lcall
je
sbb
cmp
mov
mov
pop
popf
lea
test
dec
rorb
insl
imul
mov
mov
push
stos
fnstsw
or
mov
out
pop
jb
mov
mov
outsl
jbe
sbb
imul
sub
fs
jns
or
es
call
pushf
mov
imul
clc
or
pushf
jg
int3
mov
dec
mov
scas
shrl
sub
stc
mov
mov
stc
mov
jb
mov
in
xchg
lods
ja
pop
mov
scas
clc
xor
sbb
mov
mov
test
mov
xchg
mov
adc
popf
cmp
test
hlt
sbbb
lcall
test
ds
mov
push
mov
insl
jle
insl
jle
repnz
jns
xchg
jns
xchg
mov
adcl
stos
push
xchg
and
xchg
or
and
jge
out
imul
mov
dec
and
aaa
lret
add
shlb
sub
sub
pop
xor
xor
mov
jl
or
notl
mov
and
es
add
inc
shrl
mov
jmp
jecxz
rcll
lds
mov
dec
xchg
cmpsl
out
nop
sahf
repnz
jp
jbe
lret
pop
out
mov
jno
cltd
jae
push
sub
jno
adc
pop
test
dec
mov
rcr
test
dec
xchg
lcall
inc
xchg
push
lret
pop
mov
jl
dec
jae
dec
enter
enter
mov
add
pop
and
push
mov
jl
mov
das
std
xchg
pop
xchg
push
jg
and
icebp
sub
addr16
inc
sbb
push
adcb
xor
xchg
cmp
push
loop
mov
out
mov
fidivrl
lea
in
or
dec
mov
inc
imul
pmaxsw
mov
daa
loopne
sub
mov
nop
mov
pop
ret
cltd
outsl
xchg
sbb
pop
out
repz
jno
xchg
mov
shrb
imul
out
jecxz
dec
or
lcall
sub
aam
jl
arpl
or
fsts
dec
fwait
insb
xor
jb
out
push
inc
pop
mov
cmp
add
fnstcw
lds
sub
roll
sbb
ds
loope
cmp
in
jb
or
fyl2x
push
or
xchg
cmp
sbb
dec
push
add
adc
xor
or
sbb
ja
sbb
and
cmp
idivl
mov
fdivrl
adc
dec
push
cld
je
imul
xchg
pop
ja
cmc
js
cltd
sarl
inc
dec
xchg
sub
das
sbb
lcall
mov
flds
inc
sub
adc
in
hlt
mov
popf
lods
imul
xchg
mov
adc
cmp
mov
cltd
mov
popw
jl
dec
xchg
mov
mov
lds
imul
push
xor
movsb
scas
or
sbb
sbbb
and
xor
xchg
mov
mov
lds
popf
mov
lods
addl
adc
inc
popf
cmp
insb
mov
fwait
ja
cmp
fnstenv
je
jge
mov
xor
test
adc
jg
jno
fisttpll
add
cmpsb
jns
jmp
repz
or
into
rolb
sbb
push
jl
dec
sbb
lock
insb
xor
mov
lods
mov
lea
mov
insb
xchg
adc
xchg
aam
cmpsb
ja
inc
or
lds
push
movups
into
sbb
pop
xchg
sub
jge
sbb
das
pushf
sub
jecxz
push
fisubl
cs
mov
mov
int
push
push
dec
aam
dec
pusha
cld
sbb
pop
mov
ret
popf
ja
dec
jbe
inc
jnp
pop
pop
push
aas
and
nop
xchg
jb
lea
pusha
test
scas
and
xor
xchg
mov
mov
xlat
movsl
nop
and
mov
xchg
jne
inc
dec
mov
xor
mov
jb
cmpl
adc
aad
mov
lahf
xchg
shlb
mov
xor
mov
push
hlt
xchg
or
or
repnz
mov
das
mov
jle
dec
sarl
add
jecxz
dec
add
insl
enter
or
movsl
dec
data16
dec
pop
add
jmp
mov
imul
das
jg
mov
flds
pcmpgtw
inc
mov
pushf
mov
sub
ficomps
pop
jae
lock
sbb
pop
fld
or
mov
dec
xchg
int3
pop
or
addr16
cli
dec
inc
jbe
push
sub
dec
jl
pushf
dec
loop
mov
inc
inc
mov
js
jge
test
jg
mov
dec
outsl
das
arpl
sbb
jne
ja
fwait
pop
hlt
or
orb
mov
rcrl
mov
dec
push
dec
hlt
sub
adc
push
and
rcrb
outsl
add
insb
sbb
add
enter
jmp
out
sub
test
add
testl
data16
pushf
mov
push
mov
repnz
push
mov
je
sbb
dec
inc
sbb
rorb
sub
push
mov
cwtl
lods
fwait
xor
mov
clc
es
push
insb
je
xor
jb
cli
sub
push
sub
outsl
sub
fwait
push
sbb
dec
dec
push
xlat
xchg
sbb
cmp
ds
dec
das
push
xor
pop
xchg
xchg
mov
xor
aad
sbb
push
lods
out
mov
add
push
jecxz
mov
inc
int
aas
mov
stc
scas
pop
mov
rorl
mull
dec
lods
mov
insl
jg
mov
imul
and
lds
cmp
lcall
daa
into
test
mov
jecxz
adc
mov
xchg
repnz
lahf
cwtl
mov
cld
adc
mov
pop
mov
les
adc
sbb
mov
out
pop
mov
inc
cmpsl
and
dec
popf
push
xchg
cmp
jns
nop
ret
dec
lds
xchg
cmpsb
outsl
popa
aam
xchg
jg
mull
je
stos
rclb
imul
add
lret
sbb
hlt
lds
or
dec
andb
inc
test
jo
sbb
cmp
sbb
popf
xlat
int3
out
mov
push
mov
ret
test
iret
jbe
loop
ret
dec
xlat
mov
cmpsb
aaa
test
int
movsl
call
xchg
or
js
mov
add
add
xor
in
cmp
stc
sbb
adc
pop
lods
adc
dec
repnz
cmp
movsb
cmc
jne
push
pop
xor
and
mov
dec
test
lea
out
xor
les
dec
cmc
pop
into
out
mov
inc
push
sbb
sub
or
sbb
sub
lcall
popa
xchg
jno
mov
jge
stc
sti
mov
fdivs
andl
pop
pusha
stos
sbb
pop
jmp
daa
jns
lods
push
test
sbb
pop
sub
mov
xchg
mov
mov
mov
mov
data16
cld
shll
mov
imul
add
movsb
test
andb
sti
pushf
jg
sbb
jmp
and
adc
xchg
ljmp
mov
daa
mov
jnp
sub
mov
in
repz
inc
stos
mov
clc
xchg
jae
cs
mov
xchg
jge
mov
inc
lcall
insl
shl
dec
cmp
pop
addb
xor
mov
sub
dec
popf
call
cwtl
push
jmp
xchg
jg
jno
mov
and
lds
fld
cmp
int
jp
sarb
imul
cmp
sahf
or
inc
fidivrl
sbb
jecxz
pop
and
leave
insb
adc
jl
jb
flds
rclb
xchg
leave
daa
jo
lods
mov
inc
adc
imul
xchg
mov
add
xor
in
jmp
mov
sub
std
mov
pop
pop
xchg
lahf
mov
dec
xor
fwait
and
xor
pushf
int3
imul
cmpb
xchg
cs
rolb
pop
pusha
fidivs
jb
out
in
cmp
dec
hlt
mov
xchg
jae
aad
inc
pop
or
mov
dec
shlb
gs
das
mov
lods
daa
pop
xchg
add
notl
xor
test
pop
pushf
aam
sbbl
hlt
sub
add
adc
lcall
js
imul
xchg
xchg
xor
mov
test
or
and
fwait
jae
or
mov
xchg
sub
adc
sbb
mov
shll
ret
lret
fcoms
inc
lret
test
fwait
shll
dec
mov
sbb
imul
movsbl
lcall
mov
idivl
xchg
push
xor
lea
add
dec
cmp
push
dec
push
mov
pop
sti
push
pusha
mov
in
mov
loopne
mov
in
sub
aas
sti
shufps
repz
insl
arpl
pop
andl
cli
or
mov
adc
stc
andb
movsl
push
rcrl
popf
call
mov
pop
mov
mov
push
sbb
xchg
and
lods
mov
ret
mov
push
inc
push
and
pop
test
out
movsl
movsb
ret
mov
into
jmp
mov
cld
jge
andl
stos
mov
sti
imul
or
mov
stos
shrb
add
lods
addr16
mov
cmp
ja
mov
movsl
sub
out
in
mov
in
fcmovnu
sarl
daa
lret
sbb
insl
cld
rol
or
xchg
xor
add
dec
mov
adc
icebp
test
sbb
aas
movsl
stos
mov
ret
push
add
and
imul
adc
pop
xchg
cld
cltd
loop
fsub
push
dec
pushf
mov
orb
add
jle
pop
adc
mov
sbb
lcall
mov
and
scas
in
mov
jecxz
lock
cmp
inc
cld
xor
mov
shl
xchg
daa
repz
lods
fdivp
sbb
loope
inc
mov
adc
cmc
arpl
lods
xchg
out
add
xchg
cld
adc
dec
mov
and
xor
sahf
fwait
mov
pop
push
and
orl
jno
mov
xor
xlat
jp
cmp
ret
roll
jp
icebp
sub
mov
subl
dec
pop
call
movsl
xchg
cmp
adc
adc
pop
cmpsb
dec
and
stos
cwtl
fwait
mov
aaa
ret
xchg
repz
adc
xchg
mov
shr
into
jl
lea
imul
out
pop
enter
inc
fwait
ret
mov
sub
sub
imul
sbb
add
test
add
aad
xchg
sub
push
sbb
outsb
jl
mov
pop
imul
bound
ror
dec
jnp
jae
add
mov
sub
push
imul
or
daa
aas
mov
xlat
pop
lods
push
or
fisubl
lcall
lahf
outsl
dec
mov
cmpl
pop
or
mov
mov
push
addr16
mov
pop
scas
test
xchg
pop
pushf
cmp
loope
fcomps
jbe
xor
xlat
or
cwtl
pushf
fwait
out
test
fdivrs
cwtl
enter
jb
ficoms
dec
pop
imul
enter
add
cwtl
push
imul
pop
flds
cmp
adc
pusha
or
add
cltd
pop
mov
cmp
mov
xor
ror
xor
outsl
sahf
nop
rcrb
cwtl
pusha
pop
sbb
xchg
sub
pop
jb
ret
pop
sbbl
jne
cmc
testb
or
pop
mov
test
jle
fidivs
inc
lcall
push
sub
mov
ret
arpl
mov
add
mov
in
cmp
cmpsb
mov
add
in
adc
jmp
xchg
or
or
lret
mov
cmpsb
out
jne
xchg
cmp
sti
push
gs
lcall
add
pop
mov
in
imul
inc
push
cmp
daa
test
mov
icebp
aad
dec
mov
mov
imul
pop
and
das
loopne
testb
mov
sub
ficoml
fwait
daa
out
mov
inc
aaa
push
sbb
push
imulb
movsl
and
and
xchg
xor
push
cmp
iret
in
inc
mov
adcb
push
adc
xchg
add
sti
pop
test
jl
sar
dec
mov
adc
ficompl
pop
scas
fwait
jmp
fistpll
out
mov
xchg
sarl
pusha
inc
mov
dec
ficompl
cld
nopl
xchg
idivl
lcall
fcomi
in
and
cltd
enter
outsl
aad
mov
mov
push
adc
mov
popa
cmp
popf
js
mov
push
mov
aam
aad
mov
dec
xor
sub
push
dec
or
pop
stc
dec
ret
into
sbb
jecxz
add
sub
pop
loop
pushf
imul
jne
jp
dec
fwait
rol
loopne
aaa
adc
pop
sub
sbb
cld
enter
dec
dec
aad
outsl
pop
cli
add
mov
dec
jno
mulb
mov
pop
xchg
push
add
nop
add
sub
daa
sub
mov
in
movsl
xorb
and
adc
mov
sbb
sbb
adc
into
jnp
stc
subps
add
lahf
sub
and
inc
cmp
imul
mov
pop
iret
xchg
or
mov
adc
push
mov
ss
adc
jecxz
dec
xchg
scas
dec
pop
cmp
sub
daa
js
and
mov
cltd
pop
pushf
xchg
in
mov
push
mov
and
adc
mov
into
cmp
fldl
setnp
out
sub
test
in
push
clc
dec
jl
lea
pop
mov
or
push
push
jae
cltd
out
pop
push
adc
and
fsts
mov
mov
lods
ret
sub
fdivrl
xor
mov
cmpsb
lcall
sbb
push
sbbb
into
add
outsl
xor
mov
xchg
fstps
cmp
adc
mov
test
mov
mov
adc
cmc
gs
imul
fwait
repz
aaa
xchg
inc
movsl
xchg
or
mov
push
push
in
in
fistpl
and
sub
call
pop
xchg
xchg
imul
sub
mov
xchg
shlb
int
js
out
popf
xor
dec
jno
icebp
ds
out
movsb
fsubrs
adc
push
xchg
imull
pop
loopne
movsl
arpl
mov
push
pop
add
daa
leave
ja
clc
and
ljmp
inc
pop
jb
adcl
repz
cwtl
out
mov
add
imul
cmpsb
sahf
movsb
push
sbb
dec
sbb
push
imul
mov
sbb
imul
fisubrl
loopne
loope
pop
adc
and
fwait
inc
sbb
inc
clc
push
testl
insb
jbe
jb
pop
or
fbld
lahf
fwait
out
stos
adc
test
es
cmp
cld
and
push
cmp
push
or
push
dec
mov
push
push
and
stc
inc
or
xchg
lods
fstp
add
xlat
inc
xor
cmpsb
ljmp
push
fdivp
inc
push
jmp
out
pop
mov
sub
inc
int
or
xchg
push
mov
mov
fwait
sti
call
cwtl
xchg
repnz
inc
loop
mov
pop
adc
pop
mov
out
cmp
cmp
cmc
lret
js
scas
jno
pop
sbb
add
xchg
and
pop
aas
mov
sbb
dec
int3
stos
and
sub
outsb
call
and
mov
dec
mov
fwait
cmp
or
add
enter
or
outsb
jg
xchg
push
inc
daa
xchg
pop
push
hlt
test
mov
mov
jecxz
push
jo
inc
cld
mov
add
pushf
dec
or
push
idivl
pop
in
xchg
sub
pop
or
sub
sbb
das
mov
adc
ret
mov
sub
in
and
xchg
and
in
adc
mov
mov
jecxz
sub
test
mov
dec
cmc
pop
shl
or
ja
cltd
or
shll
js
xchg
sarb
xchg
sbb
fstps
jns
inc
in
mov
jo
pop
hlt
stc
cld
addr16
mov
lods
lahf
push
jno
cltd
test
adc
sti
cli
cmp
fwait
int
jnp
push
aad
sub
fsubs
in
jp
cmp
and
lcall
and
cmp
push
pop
and
push
popa
mov
mov
pop
es
mov
pop
mov
test
mov
mov
push
lock
jo
inc
jecxz
cmp
dec
imul
enter
popl
cmp
jecxz
dec
push
js
pop
add
mov
jmp
addr16
lods
add
mov
in
icebp
push
sbb
push
sahf
push
xor
sbb
cmc
or
sub
test
pop
test
popa
or
jno
or
jp
sti
cmp
outsl
jle
popf
jp
popa
mov
push
inc
daa
add
into
push
dec
fnstenv
inc
fcoms
testb
sarl
orl
or
rorb
mov
dec
idiv
xchg
ljmp
mov
mov
or
jne
fdivrl
out
dec
sbb
jnp
add
adc
xchg
push
stc
xchg
fwait
divl
cld
push
or
push
sub
mov
mov
pop
in
mov
ficompl
andl
jo
xor
sarl
jp
jge
and
mulb
xor
and
pop
cs
das
test
mov
mov
mov
testb
inc
xorb
cltd
pop
insl
inc
fs
mov
lret
ljmp
or
int
js
pop
cmpl
dec
sub
imul
mov
pop
mov
fldenv
xor
lcall
dec
push
xchg
inc
cmp
push
hlt
int3
jl
jp
adc
jmp
xchg
notl
imul
mov
xchg
xchg
lock
add
jnp
loope
ret
mov
cld
jg
mov
insl
popa
pop
imul
aam
es
adc
adc
cmp
jmp
aad
jbe
jg
adc
xor
xchg
cmp
outsb
jb
sbb
imul
mov
pop
pop
aas
leave
enter
push
jno
jae
loope
inc
push
test
mov
sbb
mov
mov
pop
mov
push
sbb
xor
add
pop
incb
adc
mov
fsubrs
cld
arpl
arpl
or
data16
and
dec
test
mov
scas
cmc
mov
jnp
mov
popa
dec
and
fisubrl
add
fldenv
nop
bound
xor
mov
rcrl
mov
stc
test
sbb
adc
pop
inc
fildl
or
ret
or
es
cmpsl
addl
lods
insl
loop
push
xor
outsb
mov
stc
push
dec
mov
pop
shlb
pushf
sub
mov
scas
mov
inc
xchg
jb
pop
jb
je
das
cmp
fwait
adc
xlat
cli
mov
test
adc
jae
movsl
xor
addr16
pop
xchg
fdivs
or
imul
mov
xchg
fcomps
xlat
inc
lahf
enter
lods
jae
pop
add
sub
popl
ret
je
fs
lock
inc
or
push
dec
ss
pop
ja
push
out
mov
push
or
ja
popf
push
xchg
mov
scas
push
push
push
mov
xor
imul
mov
ljmp
scas
mov
imul
dec
mov
out
jp
pop
fcmovnu
jno
fcoml
fistpl
hlt
or
mov
mov
test
dec
inc
xor
in
icebp
int3
jne
xchg
jg
in
xchg
test
cmpsl
nop
hlt
cmp
or
push
into
xchg
jecxz
mov
lds
pushf
cmp
gs
dec
xor
mov
jne
aad
jns
add
loop
aaa
xchg
test
aas
push
mov
mov
add
pushf
jle
xor
jne
jmp
testl
jae
push
cltd
repnz
xor
push
lea
sbb
les
fcompl
pop
jns
in
jne
rclb
fwait
ret
scas
xor
mov
aam
mov
xor
movsl
rcr
dec
lret
inc
pop
test
imul
icebp
mov
xchg
loope
lret
les
mov
pop
jae
sahf
xor
rcl
mov
inc
int
xor
or
cmp
icebp
pop
or
cmp
adc
pop
push
aaa
icebp
inc
add
dec
scas
jl
pop
jg
sub
jmp
jmp
in
sahf
xchg
ret
test
and
dec
nop
jae
xchg
pop
cmp
ja
push
xchg
xchg
es
pop
push
test
mov
xchg
pop
mov
pop
in
test
push
das
sub
pop
xchg
lahf
push
jbe
xor
fs
add
pop
repz
pop
push
icebp
xchg
nop
lea
in
inc
mov
into
fwait
repz
decb
or
fwait
pop
stc
ret
sbb
je
cwtl
test
loope
scas
xchg
mov
mov
sub
push
data16
dec
push
jb
add
mov
mov
data16
xchg
add
pop
xchg
or
movsb
sbb
jmp
pushf
add
lea
sub
ss
mov
xor
jb
cmp
xchg
adc
hlt
fwait
setnp
sbb
or
and
js
mov
add
mov
mov
sbb
into
and
and
pop
add
into
stc
je
mov
fwait
cmpsb
sbb
ljmp
fidivrl
or
inc
es
push
xchg
lds
sbb
mov
cwtl
scas
mov
aad
xchg
inc
imul
pop
dec
and
mov
adc
add
mov
sub
insb
jp
insb
ds
ss
jbe
cmp
les
mov
aaa
aaa
setp
icebp
cwtl
inc
in
enter
and
popf
dec
push
cmp
fisubrs
add
jl
inc
lock
push
jle
movsb
or
sbb
or
inc
or
arpl
lret
pop
stc
rcll
sub
jb
sbb
add
lock
andl
test
xchg
insl
dec
das
sbb
sarl
mov
add
pop
or
insb
je
add
sahf
testb
fsubr
cwtl
stos
fwait
dec
pop
sub
addr16
fsts
fistpll
adc
lods
and
mov
dec
fisubrs
mov
jno
dec
pop
inc
shll
movsl
jp
adc
sbb
adc
rorl
jae
pop
jp
push
in
test
lods
xchg
rcll
nop
push
ljmp
mov
inc
mov
fucomip
push
loopne
outsl
pop
stc
repz
cmpsl
clc
dec
inc
fcompp
mov
and
adc
sub
stos
mov
add
xchg
out
fcomp
movsb
out
or
pop
fwait
mov
mov
rcpps
pop
aam
push
sbb
push
into
ja
add
or
enter
lret
sub
fwait
inc
imul
call
sbb
pop
shlb
adc
add
mov
inc
push
add
mov
data16
cwtl
fucomi
xlat
sub
mov
lcall
adc
xchg
and
movsl
inc
sub
mov
xor
cmp
mov
imul
and
and
xor
mov
or
sbb
jge
dec
popw
push
push
jnp
popf
mov
push
lock
jle
xchg
jbe
ds
mov
adc
pusha
fistps
push
insb
imul
xor
cld
jo
cmp
adc
pushf
ss
test
push
bound
pop
mov
bound
push
mov
pop
fcoms
sbb
xlat
push
push
addr16
test
mov
push
pop
movsb
mov
mov
add
xorl
jg
cli
imul
sub
jns
dec
pop
loop
push
and
jne
mov
lret
sbb
inc
mov
arpl
out
mov
movsb
in
inc
pop
mov
roll
js
iret
push
cmpsl
jne
sbb
sbb
enter
inc
cmp
xchg
scas
dec
or
sahf
add
jb
push
mov
stos
mov
stc
push
pop
mov
icebp
xor
dec
lds
jo
add
adc
xchg
cmp
cmpsb
cmp
sub
ljmp
insb
pusha
inc
iret
xchg
call
push
mov
inc
imul
inc
xchg
aas
lahf
push
xor
in
or
jl
subb
xor
sti
leave
mov
arpl
fwait
sub
inc
add
mov
mov
mov
jge
jle
push
fs
push
inc
inc
and
push
add
xor
fistpl
push
fs
mov
das
test
dec
cmpl
and
push
mov
adc
push
cmp
dec
shl
dec
push
int
and
pop
sti
test
orl
aam
daa
jmp
xchg
jecxz
addl
push
mov
sbb
leave
call
push
sub
mov
xchg
bound
and
mov
outsl
pusha
push
outsl
out
mov
sub
sbb
mov
into
cmp
xchg
cmp
out
sbb
push
fsub
cli
dec
std
inc
mov
pusha
incl
cmp
shr
sbb
loopne
xchg
sbb
shrb
fisubs
inc
jne
cld
gs
aaa
lcall
popl
negl
dec
adc
xlat
cmpsb
cmp
or
mov
subl
daa
fcmove
jl
xchg
xor
cld
pop
out
pop
ficomps
daa
fsubs
or
adc
arpl
fwait
xchg
or
mov
les
jge
stos
insb
pushf
mov
push
jecxz
cmp
mov
xchg
iret
adc
push
hlt
and
fldcw
out
testb
xor
pop
inc
mov
lock
add
popf
fdivrl
sbb
or
xor
add
rclb
inc
inc
vmread
mov
xchg
jecxz
aas
jl
add
call
mov
pop
cltd
sarl
mov
inc
mov
inc
xor
mov
dec
sbb
fisubs
mov
or
mov
push
add
subl
cmp
adc
xchg
pop
aas
roll
fsubl
cwtl
push
fsubl
fiaddl
or
xchg
push
xchg
cmp
daa
and
addr16
mov
push
mov
adc
loope
lcall
mov
loope
inc
or
dec
and
or
scas
arpl
xchg
xchg
divl
in
je
cld
xchg
aam
ljmp
sbb
adc
test
lahf
fsubrp
jbe
push
xor
cwtl
push
sbb
imul
xor
sbb
push
add
add
sbb
daa
xchg
cmpsl
xchg
add
insb
pop
sbb
lcall
jns
jecxz
jae
fwait
sbb
in
ret
movsl
sub
imul
out
fsubrl
xor
jns
aas
push
push
pusha
in
clc
sbb
fstpt
mull
out
xchg
push
or
aas
lds
ljmp
pop
xor
dec
adc
int
or
jle
cmpb
inc
jmp
lahf
outsb
addr16
mov
arpl
and
sub
cmp
fdivrl
fildll
icebp
pusha
ret
stc
jp
out
jecxz
xchg
nop
mov
or
mov
sbb
and
outsb
stos
jge
cltd
faddp
aaa
add
jne
xchg
mov
add
cmpsb
mov
std
pop
mov
or
sbb
jecxz
xor
bnd
sbb
scas
ds
dec
out
pminub
inc
out
mov
push
lea
addr16
xor
bound
sbbl
nop
sarb
je
fnstenv
push
repz
test
xor
xchg
or
icebp
cld
push
or
std
int
pop
rcr
xchg
ja
in
cmp
dec
or
sti
inc
pop
jl
hlt
dec
mov
xchg
push
dec
inc
mov
add
cmc
aas
aad
add
addr16
lock
leave
mov
push
clc
push
in
aas
inc
adc
adc
sub
xor
adc
std
dec
lcall
mov
xor
out
icebp
mov
inc
cmp
mov
clc
lock
fcompl
repnz
inc
mov
outsl
in
sahf
incl
mov
xchg
inc
dec
jecxz
mov
xchg
xchg
test
xor
jne
inc
mov
jae
bound
jnp
pop
cmp
ret
arpl
dec
xor
out
jae
dec
mov
fimull
jle
and
in
or
mov
pop
lcall
xor
sbb
inc
ds
xchg
aaa
mov
jae
pushf
int3
imul
pop
stos
inc
cltd
cmp
mov
insl
xchg
sub
pop
fidivrl
cmp
pushf
lret
sub
out
fdivl
or
add
lcall
movsl
faddl
mov
mov
orl
dec
insb
pop
pop
gs
arpl
jno
push
cmc
mov
jbe
push
and
daa
sahf
sbb
or
adcl
sti
inc
jae
lods
sbb
lea
jp
jo
rolb
pop
inc
mov
jecxz
jl
xchg
mov
sti
jle
or
xchg
ljmp
jnp
pop
mov
pop
jmp
lea
aaa
subl
sti
dec
mov
rcll
andl
jg
or
cmpsb
sub
clc
lea
or
stos
cld
adc
dec
add
mov
and
xor
push
shlb
inc
pop
mov
pop
dec
and
mov
sub
loopne
mov
repnz
lahf
add
xchg
lret
imul
mov
xchg
adc
xchg
popf
outsl
sbb
test
adc
mov
sbb
xor
mov
inc
dec
int
dec
and
sbb
notl
xchg
popa
data16
ror
mov
add
shrb
and
mov
pop
vzeroall
add
adc
loopne
or
inc
pop
sbb
mov
data16
fdiv
sbb
pushf
iret
mov
andl
push
mov
xchg
out
insl
dec
and
out
out
repnz
dec
dec
mov
xor
gs
imul
mov
cmp
inc
test
lret
pop
sahf
mov
pop
fiadds
jnp
and
lret
xchg
hlt
mov
shl
push
add
and
addb
push
mov
ret
imul
outsl
mov
mov
sbb
sti
out
push
xchg
mov
cld
stos
pushf
sbb
mov
cltd
sbb
test
inc
int
push
jo
mov
push
dec
aaa
mov
mov
xchg
push
dec
pop
call
loop
sbb
and
push
imul
cmp
xchg
mov
adc
and
fwait
sub
pop
adc
ja
test
cmp
cmp
sub
or
mov
imul
jecxz
jne
xchg
mov
sub
pop
adc
addr16
and
add
or
addb
ss
and
inc
mov
mov
pop
add
lea
jg
or
mov
inc
lods
mov
ds
scas
mov
dec
mov
xor
inc
dec
push
push
mov
mov
pop
adc
jno
dec
lods
xor
xor
mov
jg
or
idivb
dec
ds
adcb
jecxz
ficomps
subl
sbbb
add
sub
fisubrl
mov
add
jecxz
add
or
mov
mov
lcall
hlt
jg
inc
pop
test
adc
gs
fcomi
adc
sbb
mov
adc
loop
pusha
push
rcl
jge
testl
dec
push
mov
jp
fcompl
mov
lcall
lcall
xor
dec
stc
imul
and
popa
sbb
xchg
mov
and
int3
add
push
mov
mov
test
repnz
cmc
clc
test
fsubl
ja
push
aad
dec
inc
add
sub
fsubrl
add
int
mov
shll
xchg
mov
cli
mov
out
mov
lea
sub
sbb
scas
nop
outsl
cmp
pushf
xchg
inc
fsubl
inc
imul
dec
jnp
fwait
add
cmc
aaa
das
sbb
xchg
adc
icebp
cmp
add
mov
push
mov
push
movb
and
loopne
jp
enter
mov
dec
aaa
dec
fwait
scas
adc
or
sub
inc
mov
or
popf
icebp
jne
fwait
xchg
addr16
call
inc
ret
hlt
out
lahf
push
jo
fisttps
jg
adc
mov
cmp
icebp
xor
mov
mov
mov
xor
ret
adc
rep
outsb
sbb
mov
inc
pop
inc
bound
test
mov
pop
ror
pop
iret
push
push
mov
mov
sub
sbb
mov
fistpll
int3
repnz
es
popa
pop
mov
in
sahf
mov
sub
inc
imul
ja
inc
imul
lret
adcb
outsb
lock
push
fcompl
out
fxch
pop
ret
addr16
fchs
and
inc
push
xor
icebp
sti
cmpsl
loop
int
pop
jl
cmp
mov
cmpsl
push
cmc
pop
lahf
jne
add
cmp
mov
dec
stos
dec
pop
dec
dec
mov
lret
ja
xchg
jbe
mov
jbe
jae
push
jb
and
lea
pop
mov
in
clc
or
inc
sbb
inc
cwtl
cmp
pop
notl
cmpsl
stos
out
insl
cmp
and
in
popa
pop
add
ret
outsl
adc
mov
movsb
lcall
add
addr16
and
lods
inc
shll
push
mov
mov
inc
aas
cltd
stc
mov
xor
xchg
fistl
cmp
sbb
addr16
adc
xor
out
sub
cmp
rsm
lock
test
add
ficoml
pop
out
pop
out
add
repz
in
jp
addb
push
std
aad
aas
sub
adc
fists
das
mov
or
pop
out
movb
inc
out
mov
lock
dec
shlb
popf
mov
ret
xchg
in
or
daa
jp
adc
sti
mov
inc
ds
inc
cmp
mov
sub
inc
aas
mov
adc
push
sbb
fmull
lret
sahf
loope
sbb
add
lcall
xchg
sbb
dec
jno
gs
jbe
fisttpl
mov
in
sbb
movaps
or
rcrb
pop
adc
shll
lcall
sub
push
inc
push
pop
mov
mov
xor
scas
dec
pop
xor
pop
mov
leave
xchg
mov
mov
jg
ja
dec
pop
jmp
mov
inc
nop
ja
pop
roll
dec
or
leave
mov
push
inc
mov
pop
movsl
push
fwait
scas
in
and
jb
add
sahf
jno
sub
mov
fldcw
mov
ds
xchg
dec
jb
pop
out
into
pop
pop
adc
repnz
jno
addr16
test
add
xchg
ret
pusha
fidivrl
lea
lcall
sbb
cli
mov
fmull
jmp
les
and
dec
popa
add
jns
insl
js
cs
mov
daa
aaa
ja
orl
mov
imul
or
add
pushf
push
das
pop
jae
notl
daa
das
adc
add
dec
mov
jnp
dec
mov
mov
push
pop
rorl
jp
sbb
or
ret
aaa
add
jo
sahf
cmpsb
mov
into
leave
repz
pop
push
std
lahf
pushf
imul
jg
mov
dec
in
es
stc
xchg
out
fwait
rcr
insl
loop
imul
fdivrp
push
mov
out
rcll
cmp
loop
stc
or
sar
mov
cmp
or
jae
mov
out
test
push
cmpsb
test
jmp
iretw
leave
test
and
adc
add
mov
and
mov
cmp
fwait
test
mov
push
jp
into
jg
test
xchg
push
inc
xchg
mov
dec
and
lret
push
pop
sbb
mov
xchg
movsl
adc
xor
hlt
xchg
in
push
push
mov
mov
addr16
inc
mov
dec
inc
out
push
sbb
cmp
inc
imulb
and
sbb
xchg
lock
sbb
xchg
in
cmp
and
mov
movsl
jns
or
xor
push
mov
imul
push
pop
gs
cltd
xor
mov
leave
stc
outsl
lret
into
lock
adc
inc
push
fcoms
dec
repz
pop
aaa
mov
cmp
mov
lea
icebp
and
fwait
dec
add
imul
mov
imul
sbb
jno
popf
loopne
int3
mov
arpl
xor
jmp
jp
ja
xchg
xchg
mov
mov
jecxz
sbbl
sbb
sahf
fistl
cmp
pusha
pop
jp
pop
js
sub
daa
xchg
pop
cmp
sbb
fcmovb
pusha
ja
or
xchg
mov
push
add
mov
mov
stos
mov
and
in
into
dec
fidivs
adcb
lret
cmp
pop
lcall
or
mov
aas
push
movsb
ss
popa
pop
inc
pop
add
cli
les
jns
jle
sbb
jno
mov
push
mov
andl
add
aad
add
nop
mov
sbb
test
movsl
test
push
pop
sbb
rorl
lea
aas
outsl
mov
pusha
in
cwtl
mov
sub
and
adc
mov
lcall
adc
cmp
mov
add
subb
dec
test
fwait
or
mov
shrl
inc
imul
cmpsl
call
mov
mov
pop
xchg
xchg
adc
and
adc
ja
push
jl
arpl
or
push
outsl
jecxz
jmp
cwtl
insl
pushf
inc
xchg
call
inc
into
int
mov
repnz
in
jmp
xor
cmp
fnstenv
and
mov
out
pop
out
into
fistl
push
push
mov
repz
push
push
and
mov
inc
dec
or
and
fadds
pop
xchg
mov
test
ss
pop
and
filds
or
add
aas
add
push
add
aas
insl
repz
fisubl
hlt
js
lgdtl
mov
xor
test
add
int
add
inc
inc
or
out
sbb
xchg
push
xchg
xchg
mov
aaa
adc
xchg
sub
push
mov
dec
in
lock
das
push
and
sbb
xchg
push
adc
data16
inc
fimull
adc
scas
xchg
out
aad
sbb
inc
stos
push
pop
push
mov
popa
xor
and
add
mov
aas
and
push
loopne
test
in
popf
pushf
push
lcall
pop
inc
imul
dec
mov
call
pop
push
add
leave
push
sbb
hlt
and
xchg
and
sbb
xchg
mov
and
ja
cli
xchg
mov
mov
dec
sbb
jae
jb
jp
mov
xor
test
lret
call
lods
popw
xchg
mov
or
push
out
popf
ljmp
mov
push
pop
push
nop
fistpl
popa
fidivrs
add
or
mov
iret
adc
aam
loop
push
xchg
sti
pop
or
lock
fsub
dec
sub
mov
sbb
fdivl
outsl
rcrl
and
pop
mov
mov
fwait
xchg
dec
bound
popl
inc
shll
ja
sub
addr16
dec
inc
orb
mov
rcrl
dec
mov
aas
bound
or
xlat
int3
call
mov
inc
ret
dec
div
jno
pushf
scas
aas
dec
sub
mov
add
ljmp
iret
js
test
mov
push
mov
mov
rcrb
int3
and
ficompl
mov
add
mov
push
scas
pop
movsb
repz
rolb
popa
loop
inc
push
ja
lea
jmp
mov
jns
das
imul
push
mov
sbb
and
dec
xchg
xor
add
fwait
rclb
lahf
sub
iret
mov
jno
pop
pushf
sub
sbb
lcall
ljmp
ret
je
mov
pushf
ja
dec
lock
clc
push
inc
mov
imul
adc
cltd
not
jnp
cmp
loopne
mov
mov
lret
lods
dec
fbstp
and
mov
inc
scas
inc
adc
rcr
pop
test
sbb
inc
and
push
mov
mov
addr16
je
imul
outsb
or
sub
sub
dec
pop
pop
sahf
lock
xlat
jmp
loopne
and
jecxz
out
add
and
loop
imul
or
fwait
stc
push
enter
fildll
lahf
in
cmp
vmovaps
xchg
add
fwait
aaa
movl
dec
inc
lock
insb
ret
ret
icebp
push
mov
dec
sub
fadds
or
test
addr16
out
mov
lret
or
cmp
jg
lcall
stos
rcrb
lcall
sub
pop
mov
inc
xchg
rcrb
enter
jbe
jecxz
add
jecxz
pop
sub
jp
push
inc
add
insl
cmp
fs
pop
dec
lea
sbb
jmp
test
cltd
xlat
jg
fimuls
cmp
stc
pushl
and
jnp
push
dec
je
cmp
fisubl
rorl
lahf
movsl
adc
in
stos
add
cs
inc
mov
sbb
scas
xchg
lds
test
dec
push
out
fsubs
mov
jne
icebp
bound
dec
push
inc
add
or
cmp
push
loopne
je
add
pushf
xchg
imul
mov
xchg
mov
add
lret
jg
cs
test
pop
sub
cmpl
jae
adc
mov
scas
mov
mov
mull
push
lret
loopne
mov
in
addr16
rolb
add
sbb
shr
xchg
call
xorl
mov
scas
sub
xchg
add
cmp
mov
xor
jp
aad
pop
xchg
test
dec
arpl
mov
cmp
mov
cmp
sbb
aas
and
ret
scas
dec
adc
jmp
scas
xor
in
sbb
mov
gs
mov
cltd
aad
seto
pop
insl
sahf
cmpsb
test
sbb
test
adcl
aas
adc
jmp
pusha
mov
call
xor
cltd
stc
cmp
outsl
add
loop
outsb
ds
daa
iret
jno
out
stc
jbe
push
in
xor
mov
ret
outsl
cli
and
mov
and
jno
xchg
push
mov
xchg
sub
jecxz
std
push
into
jecxz
stos
imul
and
xchg
sbb
jecxz
js
push
adc
aam
loope
outsl
popa
sbb
push
into
sbb
mov
add
add
jo
dec
ficoms
pop
and
js
sti
or
mov
aas
push
xchg
mov
mov
sub
shr
add
adc
jno
pop
cmpsb
push
sahf
lods
fpatan
xlat
dec
sbb
popl
mov
insl
scas
push
hlt
sti
push
testl
mov
xchg
pop
imul
mov
xchg
orb
ljmp
push
inc
mov
pop
in
mov
xchg
fsubr
mov
shll
js
ficompl
pop
and
pushf
xor
and
lods
dec
sti
cld
inc
movsl
test
mov
mov
out
in
fs
xchg
mov
in
fistl
scas
add
mov
or
pusha
xchg
jbe
dec
pop
mov
add
and
jp
inc
mov
add
into
ss
or
aas
mov
mov
rorl
mov
insb
leave
xchg
jmp
test
fisubs
jp
dec
cld
stos
mov
xchg
push
sub
jp
movsb
jb
xchg
and
in
sub
out
mov
add
mov
imul
xchg
shl
inc
insb
sub
pop
rorl
mov
sub
rcll
mov
icebp
ret
test
or
in
jp
les
mov
jecxz
adc
rorl
imul
faddl
iret
jecxz
push
es
pop
sahf
push
sbb
imul
lods
jb
out
rclb
jo
push
adc
add
fdivl
imul
fisubl
and
jl
cmp
test
stos
pop
jb
nop
ret
stc
iret
jbe
rcrb
push
xchg
shlb
xor
jo
push
xchg
sbb
mov
sbb
out
adc
les
mov
pop
ja
nop
int
imul
dec
cmp
push
pushf
insl
test
mov
ret
sbb
jnp
xor
fwait
rcll
imul
fwait
pop
fdivs
leave
out
jae
sahf
xchg
jle
subb
pop
jp
push
imul
out
inc
inc
fstl
push
shl
cs
mov
fistl
aas
and
das
adc
imul
push
xchg
add
out
lea
adc
mov
mov
outsl
and
enter
lcall
and
xchg
outsb
daa
pushf
dec
hlt
sbbl
rolb
sbbb
loope,pt
xor
pushw
xchg
rclb
pop
addr16
dec
jg
sbb
ja
mov
mov
mov
enter
mov
imul
cmp
iret
mov
stc
mov
fwait
in
mov
shlb
sub
push
testl
movsb
jmp
mov
out
shll
sub
movsb
jns
jecxz
bound
ljmp
imul
and
xchg
insb
jecxz
mov
mov
xchg
imul
pop
in
lds
fsubl
xchg
pushl
fldenv
jnp
mov
shll
and
jmp
inc
or
test
sarl
sahf
cmp
push
dec
sbb
hlt
xor
pop
fcoms
push
mov
enter
movsb
cmp
jmp
adc
inc
push
push
inc
mov
int3
aas
std
xchg
inc
jns
push
mov
cli
mov
leave
mov
out
pop
mov
js
xchg
stc
cmp
mov
dec
repnz
hlt
roll
push
ficoms
fidivrl
jge
push
mov
mov
mov
into
in
fistps
in
outsl
mov
pop
mov
lret
stos
das
sub
hlt
mov
iret
mov
popa
mov
loope
sbb
mov
jecxz
fdivl
fnstsw
add
mov
je
mov
add
sbb
int3
inc
mov
sub
mov
dec
pop
fwait
adc
imul
xor
mov
ds
jb
sbb
jo
sub
cmp
or
xor
push
pop
movsb
add
adc
mov
movlps
mov
sbb
shlb
addr16
mov
das
popf
mov
arpl
mov
pop
push
pushf
xchg
stc
addb
fstpt
and
aaa
repz
pop
test
decl
dec
nop
incb
cmp
dec
out
inc
jmp
pop
jg
int3
jae
or
xchg
jbe
mov
ficoml
mov
daa
test
add
icebp
cmp
fbstp
mov
cmpsl
push
mov
out
add
sub
iret
mov
push
fwait
adc
pushf
imul
je
or
or
imul
sub
or
in
aaa
fnstcw
xor
mov
loope
int
cli
inc
fildl
mov
test
xchg
lods
jecxz
or
aas
push
mov
mov
das
lcall
in
mov
lcall
xchg
sbb
stos
out
and
pop
xchg
pop
xchg
movsb
add
jp
imull
cmp
add
leave
push
lahf
cmpsl
sub
cmc
pop
mov
fwait
movsl
mov
pop
push
xchg
clc
cmp
sbb
orb
jecxz
inc
adc
or
cwtl
jecxz
fcomps
cmc
loop
ljmp
bnd
lods
roll
mov
clc
iret
xor
push
xchg
xchg
mov
fcomps
bound
push
nop
sbb
fwait
ljmp
mov
mov
xchg
mov
adcb
out
pop
pop
and
pop
and
mov
dec
test
lea
test
mov
add
xchg
daa
out
in
dec
push
push
mov
cld
and
mov
sbb
and
xlat
out
js
dec
adc
inc
cmp
fidivrl
lcall
leavew
mov
dec
push
adc
aad
pop
in
cltd
lock
sub
test
sbb
mov
cld
mov
mov
cli
jecxz
mov
xchg
clc
sbb
cmp
popa
pop
push
adc
call
in
shl
fcomps
roll
std
mov
lret
add
push
cli
or
addl
ljmp
movsl
fcom
lods
mov
sbb
mov
xor
out
lret
xor
popf
ret
sahf
sbb
aas
sub
rorl
insb
repz
pop
ljmp
sbb
mov
jle
push
mov
fs
scas
mov
clc
test
fs
xchg
sbb
lock
fstps
addr16
or
enter
and
sahf
xor
push
imul
stc
jecxz
mov
jo
pop
xchg
cmp
dec
popl
jns
jge
stc
mov
aad
cmp
dec
test
aaa
push
xchg
cmp
dec
enter
mov
or
sbb
daa
icebp
jle
push
mov
cmpsb
ja
dec
mov
dec
mull
push
jl
add
push
outsb
subb
int
add
fbld
fwait
jecxz
in
push
andb
xorl
orb
add
xor
mov
imul
xor
pop
popf
xchg
sbb
dec
xchg
push
call
in
addl
push
daa
and
xchg
js
mov
pop
dec
or
fdivl
sbb
dec
scas
push
lahf
mov
adc
pop
inc
inc
mov
cwtl
push
nop
decb
daa
mov
fstps
arpl
pusha
out
lods
xchg
mov
adc
sbb
jnp
mov
dec
xchg
outsb
lds
out
andl
sbb
dec
lret
jb
or
sbb
and
lea
xor
pop
rcll
or
aam
xor
sub
mov
and
add
mov
out
lahf
cmpsb
imul
aam
cmp
dec
mov
push
loope
push
jg
shl
mov
sahf
jb
push
out
or
jg
test
inc
push
pop
in
bound
adc
mov
ret
stos
mov
pop
imul
cmc
push
leave
sbb
stc
push
fsub
or
add
mov
jb
imul
sahf
inc
std
ret
ja
inc
dec
mov
pop
sarl
push
dec
sahf
lods
mov
xchg
lock
aam
outsl
int3
lahf
push
cli
or
out
fwait
lock
sub
adc
pop
out
mov
mov
aam
pop
cli
pop
shlb
pop
shll
jbe
stc
pushf
push
sub
ja
xchg
or
dec
xor
add
sbb
incb
clc
popa
call
or
jno
mov
fwait
and
jecxz
lea
jecxz
daa
mov
call
jae
sub
jecxz
test
lahf
into
adc
fisttpl
in
into
sbb
and
sahf
cld
test
rcrl
mov
clc
test
push
adc
in
orl
add
and
mov
sahf
stos
rcl
fwait
xchg
into
rolb
sbb
pop
in
adcb
test
loope
shll
mov
bound
pop
inc
mov
dec
movsl
out
cwtl
fwait
push
fstl
movsl
push
aaa
mov
xchg
mov
dec
mov
enter
test
dec
or
ja
cs
or
aam
cmp
test
mov
xor
movsb
shlb
xchg
insl
cmc
fcmovbe
fidivrl
cld
outsl
mov
pop
xor
cli
enter
rorb
inc
movsb
mov
mov
cli
test
loopne
lods
pop
mov
dec
repnz
out
adc
mov
popf
and
loopne
test
mov
mov
cmc
iret
mov
xor
mov
fisttpll
lea
mov
push
mov
cmc
push
xchg
mov
aaa
mov
lahf
out
mov
xchg
movsl
fwait
mov
sbb
add
scas
xor
iret
daa
mov
loopne
push
xchg
or
jp
cmp
xchg
pop
insl
push
pop
inc
in
inc
inc
fsts
das
pushf
imul
outsb
or
roll
test
xor
jle
outsb
shrl
subb
insb
stos
push
xchg
ficoms
outsb
push
rdmsr
adc
xchg
dec
lock
xchg
stc
icebp
dec
pop
cmp
mov
testl
mov
aas
fstps
dec
inc
pop
mov
and
scas
movntq
cmp
xlat
mov
cmp
xchg
imul
insb
cmpsb
fs
hlt
jo
adc
addl
push
xor
mov
sbb
or
xor
aaa
ret
mov
icebp
xchg
ds
div
push
into
adc
jg
stc
xor
fwait
daa
in
pusha
ret
xchg
subl
jp
mov
add
ja
inc
repz
pop
cmpb
lods
adc
clc
and
dec
insl
xchg
in
mov
icebp
js
mov
daa
in
xchg
bound
mov
repnz
or
test
mov
inc
je
jae
int3
mov
cmp
pop
mov
pushf
insb
inc
jp
push
sub
inc
mov
subl
jb
out
jae
inc
xchg
out
lods
inc
push
fwait
mov
cmp
mov
sub
cmp
dec
hlt
nop
int3
sbb
pop
cmpsb
jecxz
xchg
inc
sbb
roll
dec
sahf
ret
xchg
mov
sbb
outsl
xchg
setg
push
inc
pop
mov
and
xor
jae
fisubl
es
and
xchg
sub
movsl
aas
xchg
adc
fcompl
aas
data16
js
pop
lds
in
das
mov
xchg
add
xchg
fcoms
pusha
imul
int3
out
xor
repnz
push
or
icebp
gs
les
arpl
dec
in
test
rolb
mov
lahf
mov
out
inc
test
jp
fwait
daa
cmp
push
dec
push
pop
sub
adc
push
lea
shll
add
orb
repz
lock
cmp
fwait
inc
rcrb
add
mov
loope
fdivr
cmp
jecxz
mov
cmp
and
stc
xchg
jb
ret
add
in
cmp
mov
cmp
cmpsb
btsl
jecxz
andb
sti
enter
mov
mov
dec
mov
add
cmp
out
sbb
mov
aad
mov
fstl
sub
iret
lods
cs
popf
nop
xor
rcr
dec
jae
push
addl
sbb
push
hlt
fldcw
jb
out
sub
sbb
pop
lods
outsl
iret
hlt
mov
cmp
and
out
inc
xchg
icebp
mov
divb
dec
or
xchg
fs
pop
dec
repz
ret
xor
in
movsb
repz
adc
push
cmp
xor
jle
add
and
icebp
push
jbe
dec
jp
push
imul
jmp
daa
jno
xor
xor
mov
cmc
pop
pop
pushf
cmp
movsb
cltd
xor
inc
adc
imul
pop
sbb
js
imull
pop
test
pop
ss
adc
adc
mov
sub
into
imul
add
jge
mov
enter
add
pushf
cmp
stc
cwtl
cmp
loop
dec
inc
cld
pushf
lds
mov
xor
inc
push
push
std
pop
pop
repnz
cld
movsb
xchg
inc
mov
dec
push
or
mov
push
test
in
sbb
and
inc
or
dec
out
outsl
dec
cmp
in
and
xor
lods
aad
jg
subl
movsl
iret
mov
jle
jp
mov
repnz
push
jmp
imul
sub
xlat
sahf
in
jo
xchg
sbb
imul
daa
jg
push
jp
ret
sbbl
repz
push
lock
jae
xchg
inc
pop
cmp
and
cltd
push
mov
mov
stc
xor
lods
fcomi
cmp
in
shrb
imul
sub
inc
inc
add
gs
repz
push
jno
jle
fiadds
add
or
out
aad
cmp
jecxz
imul
test
mov
mov
jp
popa
mov
std
mov
fwait
inc
outsl
jns
insl
popa
sub
dec
sub
mov
xor
push
test
mov
sbbb
scas
loopne
mov
mov
or
int3
mov
cmc
inc
ret
ja
adc
mov
insb
insl
pusha
enter
popa
pop
xor
pop
out
test
xchg
and
fwait
inc
jmp
sete
inc
into
cmpsb
pop
int
test
lcall
sbb
incl
adc
cld
movsb
mov
adc
dec
add
fxch
or
out
or
push
cmp
cmpsb
push
outsl
das
push
xor
adc
enter
push
mov
mov
or
push
sub
test
imul
insb
sbb
adc
mov
mov
rorl
ret
and
test
add
xor
mov
repz
inc
cmp
sbb
and
rclb
mov
xchg
ret
mov
add
mov
push
pop
dec
pop
pushf
xchg
mov
dec
dec
cmp
dec
mov
movsb
rcrl
hlt
jp
mov
ret
sbb
mov
lods
xchg
lahf
cmp
dec
dec
add
pop
adc
mov
sti
mov
jmp
inc
push
pop
imul
ss
or
repz
jns
mov
jb
inc
jbe
scas
sti
fimuls
lahf
fnstcw
subb
add
add
shll
sub
subl
sahf
mov
jle
in
daa
xchg
jns
es
mov
xchg
lret
xor
mov
daa
cmp
xchg
xor
bnd
call
inc
subb
pop
shl
in
add
pop
adc
mov
outsl
test
adc
lret
sbb
xor
sub
sbbl
pop
clc
int3
push
aad
xorb
pop
push
xor
movsb
ret
push
ss
fnstenv
jae,pn
insl
and
dec
dec
cwtl
mov
aaa
or
lret
jmp
ficoms
fmull
add
out
jae
adc
out
mov
mov
test
rorl
bts
lcall
mov
shrl
or
out
outsb
sbb
out
mov
bound
mov
push
in
jle
sahf
adc
push
mov
icebp
iret
push
mov
fcmovbe
ret
mov
and
sahf
dec
lcall
and
pop
sbb
xchg
std
dec
mov
pop
mov
cli
imul
aaa
test
not
or
in
push
inc
int
cli
jg
pop
push
xchg
outsl
jp
mov
adc
xor
adc
xor
fcomps
fisttps
xchg
and
jo
ljmp
loope
mov
inc
mov
adc
mov
pop
icebp
lea
cmp
insl
fwait
arpl
jge
sub
push
icebp
aad
outsl
xchg
cmpsb
fwait
int3
dec
push
lahf
cwtl
adc
imul
fwait
xor
outsb
sub
cmp
cmp
in
pop
xchg
aad
cwtl
push
jp
inc
stos
and
ja
push
aam
shlb
into
aas
sub
mov
add
and
push
jecxz
mov
sahf
inc
dec
lret
push
cmp
repnz
lret
and
mov
cmp
and
push
rol
loopne
dec
fildl
xchg
xlat
jp
test
cli
add
xor
fcomp
mov
adc
ds
roll
fidivrl
retw
push
fimull
jge
sahf
test
mov
call
sbb
lret
stos
movntps
shr
dec
aaa
add
lock
xchg
mov
aas
stos
push
push
and
ljmp
mov
mov
stc
mov
adcb
and
pop
cwtl
shlb
inc
out
mov
daa
ljmp
mov
out
add
or
mov
pusha
test
push
test
fwait
xchg
nop
adc
sbbb
imul
push
test
fcoml
fwait
icebp
pop
out
insl
adc
fcomi
jmp
clc
push
or
cwtl
insb
push
in
pusha
lahf
or
fildl
lahf
pop
insb
push
notl
call
mov
je
pop
jb
mov
pop
lock
jg
add
vaddss
mov
cld
push
mov
mov
aas
push
and
add
dec
adc
push
in
add
leave
cmpsl
rcll
jle
fwait
xchg
in
sub
sub
ds
int3
cmp
xchg
inc
movsl
call
fcoml
das
mov
push
lahf
xchg
sbb
dec
ljmp
test
das
int
adc
test
sbb
mov
and
xchg
lods
rcll
or
mov
in
dec
xchg
jbe
test
and
mov
sub
inc
mov
sahf
adc
pusha
mov
mov
shll
push
dec
xor
pop
adc
ret
cmc
jns
rclb
cmp
jno
rcll
push
xor
xchg
xor
sahf
mov
ret
aaa
imul
pushf
xchg
mov
call
cmp
lods
pop
vmread
xchg
out
push
test
cmp
insl
cmp
mov
in
sahf
dec
and
mov
sbb
pop
mov
adc
adc
fadd
cmp
cld
je
ja
or
cs
daa
adc
ror
shll
jne
jbe
fsubr
sub
popf
and
cmp
inc
insl
scas
call
pop
call
push
pop
pop
imul
xchg
aas
stos
stc
fsubl
cs
icebp
imul
cmp
sub
ficoml
mov
jge
imul
insb
cmp
lcall
or
in
mov
and
insl
push
adc
test
cli
ja
shrl
push
add
fs
iret
pop
adc
push
pop
lock
nop
fwait
enter
and
imul
int3
addr16
rorl
lods
dec
in
dec
mov
and
pop
push
xchg
cli
xchg
sbb
shr
or
jg
inc
inc
repz
lahf
jne
jnp
add
fstpl
xor
ret
adc
lds
fbld
aad
test
out
dec
cmpb
imul
sarl
loopne
mov
clc
imul
push
push
push
push
std
jo
mov
mov
pop
mov
adc
insb
mov
fildll
jecxz
lcall
ja
fsubrp
dec
std
sahf
gs
adc
xchg
add
fnstsw
pop
shr
mov
icebp
xchg
pop
mov
cmp
mov
xchg
jp
pop
xchg
lahf
cmpsl
loop
mov
jg
bound
pop
arpl
out
loope
sbb
sbb
out
lock
bound
sub
sbb
pop
sub
mov
push
int3
lcall
mov
xlat
dec
and
and
fiaddl
js
enter
jmp
adc
insl
outsb
pop
mov
aam
add
arpl
dec
jl
pop
mov
adc
xchg
daa
pop
imul
mov
shrl
stos
pop
adc
cwtl
fwait
pusha
or
or
push
jb
jmp
js
mov
dec
xor
push
fildl
xchg
sti
lret
and
loop
jae
enter
mov
lahf
out
pushf
lea
fiadds
xor
imul
push
cli
enter
sub
cmp
inc
mov
into
fucomi
adc
xchg
bound
and
cld
outsl
push
cmp
ljmp
lret
addr16
cmp
pop
and
jmp
mov
js
iret
jecxz
shll
cmpsb
fiadds
int
test
shr
movsl
imul
push
ret
inc
dec
andb
mov
jmp
je
sub
mov
fisubl
add
imul
enter
add
mov
sti
out
nop
aas
mov
and
sub
mov
rcrl
in
sbb
loope
sub
inc
push
rclb
or
mov
sahf
inc
fldenv
xchg
ret
popf
add
sarl
lcall
xor
in
daa
jg
test
mov
imul
jge
or
pop
pop
xor
aad
pusha
les
inc
imul
fcoml
or
xchg
lret
test
xchg
pop
dec
sbb
lret
or
xchg
xchg
call
push
jns
mov
cltd
pushf
mov
mov
out
neg
iret
out
add
inc
enter
out
mull
mov
xlat
test
sbb
or
mov
jb
outsl
pop
cmp
jns
xor
cmp
mov
ja
sbb
sbb
lock
jecxz
jl
fdivrs
mov
pop
dec
mov
push
rclb
jmp
xor
mov
xchg
xchg
jmp
fstps
jne
rcl
out
fildl
adc
rcl
aam
fadds
xchg
xchg
dec
enter
cmp
popf
pop
cwtl
pop
fwait
push
loop
cmc
push
daa
mov
inc
inc
pushf
ret
call
xchg
cmc
aaa
aaa
test
test
aas
jmp
movl
and
cmc
dec
mov
jecxz
adc
mov
jecxz
sbb
dec
and
xlat
movsb
cs
adc
movsl
cltd
fidivs
lods
jmp
xchg
ja
das
scas
fnstcw
into
mov
sub
psadbw
arpl
push
mov
mov
scas
imul
icebp
nop
in
das
cmp
jp
mov
push
add
inc
arpl
pop
outsl
xchg
cmp
test
fs
mov
sub
jmp
popf
xorl
jecxz
out
fcoml
xchg
insb
mov
in
je
call
fimull
iret
rcrb
dec
or
inc
pop
xor
xchg
add
adc
hlt
rclb
pop
mov
sbb
js
inc
push
scas
lcall
pop
cmc
fisubl
and
jg
pushf
dec
xchg
or
dec
cld
leave
jg
inc
xchg
jp
xor
sub
xchg
dec
pop
fwait
sub
mov
mov
popf
mov
mov
mov
sub
and
adc
test
aaa
movsb
fcompl
jecxz
lahf
scas
and
jbe
idivl
inc
pop
xchg
cld
inc
xor
fadd
mov
jns
pop
ficoms
push
cld
jl
sbb
in
add
cmp
out
pop
and
push
test
push
add
xor
out
and
leave
inc
xchg
out
out
js
pop
fmuls
xchg
sbb
xchg
and
inc
jns
jo
add
orl
or
sbb
xchg
loop
icebp
lret
lds
mov
das
fwait
insb
mov
xchg
imul
add
cs
mov
xor
inc
fwait
inc
xchg
std
outsl
gs
or
xchg
pop
inc
cmp
fsubrs
xor
cmp
mov
mov
pusha
sbb
adc
out
inc
push
pop
out
xchg
push
or
cmpb
sub
adc
xchg
daa
dec
xchg
pop
and
pusha
sbb
jmp
test
jo
push
mov
dec
jmp
push
lods
inc
mov
outsl
and
fucomip
in
jecxz
scas
mov
push
adc
sbb
inc
or
xchg
movb
pop
hlt
dec
outsl
push
scas
adc
test
je
idivl
jmp
pusha
adc
mov
add
mov
test
mov
out
shl
pop
addb
and
dec
cmp
mov
mov
mov
sbb
out
sub
add
inc
dec
dec
add
lcall
mov
and
mov
cmp
sub
jecxz
xchg
cmp
rcrb
int
lret
mov
pop
sub
sbb
outsb
das
cs
fsubl
dec
sub
mov
outsb
andb
aaa
fnstenv
and
mov
call
rclb
xor
test
jle
jmp
mov
and
mov
xchg
rorb
push
pop
sub
enter
pop
js
arpl
jne
mov
mov
sar
imul
lods
add
mov
cmc
lret
mov
inc
dec
mov
rcrl
xor
pushf
adc
or
cmp
das
mov
fwait
aaa
aas
daa
rcrb
enter
lcall
stc
cld
fistpl
dec
shlb
mov
out
push
les
pop
in
inc
push
popf
sbb
xchg
add
cltd
fcmovu
xchg
arpl
mov
jns
outsl
mov
aaa
daa
dec
sbb
jg
mov
int
mov
mov
enter
movsl
test
mov
add
lods
adc
out
cmpsb
pushf
cmp
icebp
jbe
inc
imul
stos
rclb
push
rolb
in
repz
shlb
pushf
jg
ficoml
adc
repnz
movsb
mov
mov
nop
and
les
out
mov
cs
xor
sub
pop
fldpi
pop
mov
sahf
test
jne
fwait
pop
push
insl
pop
aas
pop
imul
jge
repnz
out
aaa
inc
sub
jno
cltd
leave
pop
sbbb
jge
xorb
movb
iret
shrb
push
xchg
aas
jle
movb
mov
adc
flds
lcall
push
jns
sbb
in
addr16
test
movsl
imul
xor
adc
repnz
jl
imul
mov
xchg
stc
mov
pop
jg
sbb
xor
push
adc
mov
loope
sbb
push
ficompl
inc
fisubl
ljmp
cltd
lock
pop
dec
nop
inc
lret
mov
lret
daa
pop
fdivrl
pop
movsl
leave
or
pushf
mov
jmp
sbb
insb
aas
cld
insl
adc
fdiv
jne
pop
outsl
mov
movsl
iret
mov
sbb
jmp
mov
jbe
inc
dec
cld
or
js
fwait
xchg
ljmp
dec
fiaddl
stos
xor
adc
inc
and
and
imul
lcall
inc
test
sbb
daa
into
jmp
std
lret
imul
pushf
shrb
insb
sbb
xchg
nop
add
jnp
pcmpeqd
mov
lods
roll
mov
dec
inc
clc
out
popf
cmp
or
fsubrl
or
movsl
test
push
xor
insl
loopne
push
je
imul
jmp
dec
xchg
fisubrs
mov
ds
pop
shrb
lcall
lods
mov
pop
sahf
dec
stos
xchg
mov
shll
incb
out
sub
ffreep
test
popf
jo
mov
ret
ret
mov
jge
jecxz
into
in
sti
enter
pop
fwait
ss
dec
sub
pop
jecxz
and
mov
jmp
jp
out
pop
out
pop
pop
test
jmp
std
xchg
jle
lds
jg
mov
sbb
gs
add
pushf
ja
inc
cmc
ja
lock
push
es
nop
scas
sub
lcall
inc
pop
xor
pop
dec
mov
test
dec
scas
ds
aas
lea
mov
gs
xchg
out
loope
push
imul
imul
lahf
in
outsl
cltd
fisubs
sub
pop
ds
dec
or
push
mov
inc
mov
cmpsl
xor
jmp
gs
mov
test
movb
out
movsl
sarb
push
add
add
mov
shll
jg,pn
add
lret
mov
sub
fsubs
and
push
jmp
imul
jl
imul
imul
inc
subb
loopne
imul
cmp
xorl
xorl
jge
ds
mov
mov
push
add
xorb
mov
imul
pop
dec
jbe
cmpsl
cmp
mov
jle
jle
adc
xchg
aaa
push
push
xchg
pop
imul
fwait
maxps
pop
push
cmp
dec
mov
pop
subb
inc
mov
mov
filds
pop
outsl
adc
add
sbbb
fadds
repz
mov
loop
push
mov
inc
daa
rcrb
jnp
xchg
sbb
and
sub
xor
mov
test
rolb
test
jo
pusha
pop
xchg
mov
andl
cmp
xor
daa
sarb
xchg
data16
jmp
mov
outsl
in
sar
adc
fimuls
aad
cli
xchg
in
sbb
icebp
dec
pushf
xlat
out
and
mov
fcoms
movsb
pop
push
inc
out
xchg
out
adc
in
mov
fstpt
fcompl
repz
mov
adc
lods
jl
call
inc
mov
imul
and
jle
pop
xor
lcall
cwtl
mov
imul
aaa
mov
and
in
jae
mov
enter
fmul
outsb
mov
test
fisubrl
push
iret
mov
jbe
imul
sub
gs
in
lahf
fstps
push
dec
lahf
dec
lret
add
lock
mov
mov
mov
sub
or
cmp
xor
push
or
nop
xchg
clc
jecxz
add
jnp
mov
pop
push
cwtl
sbb
out
in
mov
subb
mov
and
daa
sub
mov
xor
push
jle
jo
mov
fsubrp
and
movsb
xor
jns
dec
mov
insl
adc
adc
push
ret
sbb
call
adc
cld
fwait
addr16
add
fnstcw
imul
mov
jae
mov
mov
bound
scas
daa
mov
sbb
loop
in
aaa
scas
adc
mov
mov
adc
sub
hlt
push
inc
hlt
aas
push
ret
inc
shrl
test
xchg
inc
cwtl
rorl
inc
cmp
int
dec
sbb
mov
inc
pop
mov
pop
jno
addr16
test
lock
out
aam
fwait
jae
popf
or
jg
mov
xor
mov
fsts
xchg
repz
sbb
jne
es
pop
or
lods
sub
andl
test
cmc
mov
mov
daa
loopne
test
inc
outsb
in
lods
icebp
mov
xchg
bnd
push
sub
mov
push
sbbb
orb
pop
in
jnp
mov
cmpsb
sbb
push
sub
xor
sarb
test
and
mulb
inc
orl
mov
addr16
test
aaa
icebp
cmc
andl
mov
adc
loop
sbb
test
shl
lock
mov
xchg
sub
bound
pushf
and
notl
adc
stc
fcomi
and
stc
push
push
subl
dec
rcll
fwait
push
and
cltd
xlat
xchg
and
and
insb
xchg
out
stos
imul
ss
push
aaa
mov
ds
mov
fs
rorb
pushf
xchg
sbb
aad
outsl
pop
adc
lods
iret
repnz
ljmp
in
rolb
cmp
or
xchg
notb
test
sbb
dec
inc
ja
cltd
addb
jge
jl
mov
test
imul
inc
jnp
mov
mov
adc
mov
and
dec
pop
test
daa
mov
pushf
push
jg
and
cmp
or
xchg
mov
das
pop
pop
fimull
out
fsubrl
rorl
cmp
ds
shl
and
imul
int
ss
xchg
bound
xchg
rcll
sub
cmpsl
js
xchg
add
mov
mov
ret
dec
push
icebp
pushf
mov
hlt
out
xchg
mov
imul
addl
daa
mov
call
add
data16
stos
lock
mov
push
or
shlb
mov
imul
sub
fwait
enter
mov
rol
imul
xchg
test
insb
fimuls
push
fwait
cmc
gs
mov
fdivs
cld
bound
cmp
xor
imul
stc
inc
sbb
lea
xchg
js
imul
xchg
pop
and
sti
add
xor
push
and
pop
pop
push
xchg
mov
and
xchg
das
push
cmp
loopne
adc
pusha
xchg
dec
jle
outsl
jns
int3
xchg
jnp
cmp
mov
inc
and
in
inc
repz
mov
or
cmpb
test
enter
or
ss
jecxz
fwait
ret
mov
outsl
js
stc
inc
in
shlb
cmp
lea
mov
int3
inc
nop
lahf
imul
test
cmpsb
xor
sub
rcrl
sbbl
adc
das
mov
lock
sbb
and
adc
shrb
cmp
lret
xchg
lods
mov
out
jl
fistps
mov
fwait
and
add
into
shll
and
jecxz
push
orl
push
lea
xchg
mov
push
xor
xor
test
stc
dec
pop
out
pusha
sub
mov
cmp
clc
arpl
xor
mov
and
sbb
dec
xchg
js
jne
xchg
sub
cmp
add
dec
jnp
pop
repnz
out
xchg
xchg
std
fwait
push
imul
jae
jnp
xorl
jns
lahf
dec
jb
cmp
cmpsl
scas
jecxz
icebp
sub
xchg
push
mov
adc
and
lahf
jae
mov
ret
pop
movsb
mov
inc
fiaddl
pushl
nop
es
jno
rolb
mov
mov
aam
mov
sbb
data16
dec
imul
js
fwait
push
add
xchg
mov
sbb
mov
and
and
mov
jp
xchg
leave
icebp
xchg
leave
xchg
jp
push
cmpsb
popf
mov
lds
in
mov
mov
xor
arpl
and
mov
mov
xchg
test
jl
pusha
dec
xlat
hlt
add
add
sub
fwait
sbb
cmp
or
inc
pop
jg
ja
add
jg
cmp
and
push
call
mov
dec
sub
jae
xor
sub
fmul
adc
pop
and
jns
call
mov
test
dec
cltd
mov
and
xorb
ja
mov
test
adc
mov
sbb
and
pop
push
jmp
enter
adc
xchg
inc
mov
or
test
cmp
cmp
mov
jecxz
mov
xor
rcll
out
lea
xor
dec
and
pop
mov
jns
inc
mov
mov
mov
fwait
roll
or
imul
subl
jo
lret
ss
sub
subb
stos
lods
nop
fwait
pop
jmp
push
imul
leave
les
xchg
mov
xor
push
daa
rorl
ja
test
jge
fistpl
in
inc
imul
cmp
jge
cwtl
cld
jl
sbb
addr16
daa
jge
mov
jb
cwtl
mov
idivl
movsb
xor
sbb
out
and
mov
xchg
repnz
es
adc
pavgw
sbb
cmpl
leave
stc
stos
insb
mov
jmp
lcall
push
loope
ja
leave
adc
sub
aaa
pushf
in
sbb
cmp
mov
xor
in
popa
push
fimuls
out
mov
daa
dec
xchg
push
mov
adc
add
push
jnp
clc
dec
mov
jecxz
bound
and
sub
out
or
daa
sbb
xchg
sbb
or
mov
mov
icebp
sub
mov
xchg
scas
out
inc
sbb
shll
loopne
push
pop
lahf
or
mov
sbb
adc
inc
lcall
cmp
insl
mov
lea
leave
mov
scas
jnp
insl
pop
addr16
push
les
dec
push
int3
sahf
pushf
cmpb
inc
jae
call
popf
out
pop
sarl
jecxz
sbb
sub
pushf
mov
lcall
pop
out
adc
movsb
scas
jecxz
dec
out
std
gs
mov
stc
fsubrl
xlat
mov
cmp
sub
adc
inc
mov
outsb
test
int3
pop
mov
add
ret
sbb
or
jmp
cmp
and
adc
outsl
inc
mov
test
fiaddl
test
lcall
xchg
and
movsl
inc
sahf
pop
xchg
adc
mov
inc
mov
cs
insb
jns
sbb
pushf
jmp
rcrb
aaa
jle
pushf
xchg
push
das
pop
jns
mov
in
inc
sbb
cmp
into
or
and
ja
mov
mov
adc
dec
adc
mov
push
popf
lea
adc
repnz
in
xor
dec
test
imul
inc
or
insl
cli
xor
test
outsl
jne
add
cmp
ret
cmp
std
repnz
adc
mov
fcomp
sub
xlat
pop
add
fs
adc
pusha
inc
mov
push
pop
test
fdivr
jg
xchg
stc
jnp
shlb
jecxz
ja
mov
pop
arpl
lahf
push
mov
adc
mov
pushf
or
sbb
ljmp
push
xor
push
outsl
sub
mov
dec
pushw
shll
jno
jo
pushf
jnp
push
inc
lea
out
outsl
insl
out
pop
mov
imul
or
clc
pop
nop
shlb
out
out
loop
mov
adc
dec
aaa
cmpsl
add
or
xchg
lret
lock
cmpb
out
fwait
or
pop
adc
and
test
mov
dec
loopne
ficoms
scas
xchg
push
cltd
call
insb
iret
jae
pop
cmp
pushf
pop
and
das
movsl
or
cmp
add
in
inc
sub
loopne
pop
inc
xchg
ret
xchg
cmp
pop
inc
dec
ljmp
sbb
mov
jg
gs
loope
jbe
rcrb
pop
xor
push
stc
or
rclb
mov
and
mov
inc
jg
imul
shlb
or
sahf
mov
jecxz
jecxz
outsb
into
mov
popf
scas
push
pushf
sub
xchg
push
aad
sub
imul
in
push
jb
adc
and
jmp
xchg
rorb
jo
movsl
outsb
adc
ja
lcall
out
out
rcrl
js
shr
xchg
push
loop
inc
outsl
hlt
push
mov
lcall
add
inc
daa
out
push
mov
insb
int
xor
rorl
aas
pop
pusha
fs
mov
sub
or
sahf
cmp
fmul
or
mov
int
sbb
movsl
jmp
rcrb
sub
sbb
enter
out
adc
mov
orb
ljmp
shl
jo
jo
dec
or
stos
jne
out
test
sti
js
test
xchg
mov
sub
cltd
sbb
cmc
jno
or
dec
in
pop
scas
lahf
add
dec
xlat
cmc
fs
mov
jbe
jno
sti
dec
push
addr16
scas
mov
addr16
push
or
ja
icebp
mov
mov
pop
add
or
jbe
leave
adc
xchg
mov
and
sbb
mov
sbb
lahf
or
lea
push
mov
cmpsl
mov
push
jge
aad
pushf
aas
adc
data16
push
sub
cmc
ljmp
rcr
fst
imul
lods
push
mov
adc
je
and
sub
mov
mov
push
mov
or
je
rolb
clc
nop
xchg
aaa
push
and
inc
or
cmp
fbstp
xlat
push
mov
add
lahf
addl
pop
cmp
push
insl
push
add
pop
mov
test
clc
add
push
mov
insb
rorl
push
inc
test
add
xchg
xor
dec
es
cwtl
adc
rorl
cwtl
lea
lret
add
lcall
sbb
sarb
movsl
leave
and
ja
adc
add
mov
xchg
sbb
out
leave
or
adc
xchg
lods
pop
nop
sbb
push
and
std
outsb
movsl
push
jb
xchg
push
addr16
adc
xor
mov
or
faddl
test
jge
mov
jns
subb
pop
xchg
gs
inc
icebp
xor
add
inc
loope
dec
push
loopne
cmc
xchg
out
mov
sub
jo
inc
cmpl
add
sarb
lahf
test
push
jecxz
lea
test
sbb
jbe
imul
pop
in
cmp
and
cmp
addb
dec
sbb
ret
dec
sub
scas
fs
push
adc
cmp
and
imul
mov
push
sub
pop
addb
loope
sarl
mov
scas
push
pop
or
aas
adc
xchg
push
addl
or
mov
pop
sub
dec
imul
ret
insl
cmp
mov
add
jae
xor
in
adc
sbbl
cmp
push
jl
icebp
push
mov
ja
jmp
nop
daa
cmp
pop
jecxz
adc
push
ret
mov
int3
imul
icebp
movsl
mov
xchg
lahf
lret
jns
shlb
xchg
fwait
mov
pop
aad
in
aas
js
cmp
and
jae
fiaddl
adc
pop
cwtl
aaa
std
cmc
sub
mov
lock
in
shll
fidivrl
sbbl
sarl
aas
jo
mov
mov
and
outsl
out
test
push
pushf
dec
adc
ja
xchg
push
mov
xor
lods
lds
into
leave
popa
and
dec
jp
setnp
dec
daa
aaa
repz
jmp
xor
mov
in
sbb
and
ja
xlat
imul
cltd
aam
arpl
jno
adc
mov
pop
stos
sub
add
rorl
dec
and
xchg
xchg
pop
adc
push
hlt
jecxz
fstps
xchg
fs
popf
imul
cwtl
pushf
cld
fsts
xchg
pop
adc
lea
and
sub
sbb
inc
popf
jae
xor
and
mov
and
cmp
and
inc
cltd
push
cmp
cmp
lods
pop
leave
loop
jne
mov
fimuls
jo
mov
jmp
xor
or
mov
push
arpl
jmp
aas
cmp
fisttpl
insb
out
add
push
xorb
mov
or
push
dec
sbb
mov
out
sarl
int3
push
rolb
imul
or
pop
push
mov
movsl
data16
or
lods
sbb
int
push
inc
scas
sub
mov
pop
dec
dec
xchg
dec
rcll
jecxz
stc
sub
adc
ficoml
mov
pop
xchg
jge
gs
sahf
fdivs
dec
push
mov
sub
addr16
sub
cmpsb
fidivrl
mov
sti
sahf
sbb
fs
pushf
lods
fwait
cmpl
inc
fsubs
scas
daa
addr16
lret
subl
addl
xchg
stc
mov
lahf
xchg
inc
cmpsb
pop
stc
nop
loope
mov
test
orl
xor
dec
andb
movsl
jge
push
loopne
cmp
jb
shl
cmpsb
fs
pushf
sbb
adc
rolb
push
lods
mov
mov
outsb
adc
jno
xchg
xchg
xor
pushf
addr16
lea
inc
and
sub
cmp
mov
xchg
out
lret
or
push
cld
ss
lock
mov
cmp
mov
inc
mov
in
daa
mov
xchg
and
jnp
ret
dec
es
xor
mov
pusha
pop
rcrl
in
js
xchg
out
mov
mov
jg
std
and
jg
push
pop
pop
mov
pop
cmp
pushf
push
mov
push
sbb
pop
dec
nop
or
pushf
sub
in
adc
or
lock
mov
fs
andl
sbb
test
mov
aam
push
pop
outsl
in
pop
roll
fisttpl
push
faddl
cltd
adc
pop
pop
movsb
popf
lret
mov
add
data16
and
xchg
push
xor
aas
vprotq
dec
jle
outsl
pop
jmp
and
dec
imul
bound
mov
dec
pushf
movsb
mov
lds
repz
sbb
in
push
xor
and
sbb
icebp
enter
rcrl
or
imul
mov
dec
fmul
push
mov
adcl
jno
mov
lea
dec
add
cmp
mov
in
imul
ja
aas
or
flds
mov
and
adc
push
fwait
and
mov
hlt
or
xchg
add
mov
or
sub
inc
es
rorb
bound
ret
jge
mov
pop
push
mull
add
rorb
mov
pop
ficoms
sub
mov
movsl
jmp
and
repz
into
push
pop
xchg
test
stos
sbb
sub
inc
pop
pop
xchg
test
daa
push
ds
and
fcomps
loopne
scas
push
mov
enter
decb
inc
nop
mov
lock
mov
jg
cmp
add
mov
xchg
addr16
dec
sub
pop
cltd
js
imul
jno
or
enter
subl
cmc
imul
fcmovb
andb
jbe
push
cmp
repz
fisubl
rcll
das
in
arpl
les
push
mov
add
sub
push
out
into
jmp
and
mov
mov
jbe
pop
std
push
push
movsb
inc
out
jne
icebp
xchg
lea
jg
repnz
pop
sarb
mov
aas
mov
leave
addr16
sub
mov
push
pop
or
mov
sahf
negl
sbb
inc
lods
mov
leave
fcompl
xchg
adcl
jecxz
test
movb
mov
imul
nop
mov
jmp
push
rcrl
fadd
sub
mov
ss
ljmp
jns
std
and
fidivs
cli
add
call
fidivrs
repz
sub
addl
jecxz
dec
cmpl
mov
jmp
bound
fildll
cmp
ret
adc
sahf
aaa
insl
cmpsb
enter
ret
or
dec
ljmp
dec
xor
clc
in
xchg
mov
mov
repnz
insl
shr
xchg
add
pop
xchg
ds
dec
push
addr16
mov
dec
cltd
and
cmpl
push
movsb
inc
subl
sbb
mov
in
pop
mov
push
mov
mov
xor
pop
pop
nop
bound
mov
jecxz
leave
pop
fcompl
inc
out
adc
sub
cmp
repnz
xor
mov
dec
add
add
rolb
addr16
xor
adc
xchg
lds
orl
inc
in
dec
lret
test
xchg
push
push
out
xchg
mov
ret
or
test
nop
sahf
vpslld
bound
inc
sahf
push
pop
and
sahf
cwtl
fwait
mov
jle
icebp
movsl
inc
or
and
outsl
mov
mov
sub
aas
test
subl
and
test
mov
jo
cwtl
xor
push
sub
jno
mov
mov
mov
cmp
fucomip
sub
pushf
fisubrs
hlt
adc
mov
adcl
dec
mov
out
mov
or
pop
shlb
enter
sbb
jns
adc
mov
lods
or
subb
sahf
std
pushf
insl
adc
pop
mov
xor
xchg
cmp
add
outsb
mov
pop
fmul
js
pop
cmpsl
jg
push
xor
fcoml
cwtl
xlat
inc
sbbb
nop
addr16
push
pop
mov
inc
mov
push
push
inc
adc
sub
addb
rorl
xchg
xchg
dec
hlt
xchg
andb
or
into
push
aaa
inc
sub
xchg
mov
js
xor
aam
dec
mov
pop
call
insl
xchg
sub
mov
jo
sbb
outsl
popa
xchg
jns
hlt
dec
xor
jecxz
xchg
out
enter
movsb
push
imul
popf
repz
mov
in
add
sbb
or
test
mov
or
xor
push
faddl
pop
add
fstp
aas
pushf
rorb
andl
or
inc
and
stos
clc
inc
das
fs
lahf
xchg
add
jns
in
pop
fcoms
mov
into
mov
ja
hlt
mov
mov
inc
adc
xor
lock
jbe
xor
jb
fs
mov
out
ds
pushl
ljmp
push
jae
int3
xor
sbb
mov
adc
adcl
add
sbb
and
and
mov
xlat
mov
mov
neg
imul
mov
xor
fs
mov
dec
pop
pusha
pop
fnstcw
dec
stc
xor
sub
xchg
mov
jl
lcall
addr16
out
cmc
gs
out
pop
push
xlat
iret
movb
xchg
xchg
sbb
mov
addb
xchg
iret
or
pop
mov
mov
daa
jb
xor
cmpb
xchg
dec
dec
add
mov
mov
mov
mov
cmc
cmpsl
pop
fs
pop
gs
movsb
mov
test
adc
cmc
lahf
dec
stc
push
push
addl
shll
xchg
mov
test
test
arpl
sbb
insl
mov
pop
inc
mov
test
cmp
dec
out
jnp
dec
in
cmpsl
stc
jb
mov
movsl
repnz
inc
div
sub
sub
pop
and
fisubrs
hlt
cmp
nop
out
xor
inc
pop
rcll
xchg
movsl
push
iret
out
imul
xchg
addr16
adc
lcall
xchg
fwait
lea
ret
push
inc
mov
filds
pop
rep
sbb
je
mov
adc
push
insl
sub
mov
pop
stos
cmp
sbb
dec
sbb
test
adc
sub
dec
outsl
insb
or
sahf
or
push
sub
adc
inc
mov
jnp
imul
xchg
push
add
pop
and
and
rorb
bound
std
mov
imul
cmp
cltd
stc
pop
push
push
mov
imul
add
imul
scas
lods
adc
sub
inc
shrb
sar
sbb
cli
cmp
dec
jne
xchg
stos
fwait
jecxz
xchg
ret
cmp
and
add
cs
out
mov
mov
lea
daa
dec
dec
fwait
data16
clc
lods
data16
add
es
jns
lcall
and
adc
mov
mov
jno
sarb
test
pop
testl
sbb
or
push
mov
mov
add
adc
daa
inc
insb
jmp
push
pop
daa
ss
in
dec
mov
and
sahf
popa
mov
int
cld
loopne
mov
and
aam
les
pop
fwait
sbb
push
push
mov
and
in
sbb
ja
fnstenv
sbb
outsl
rolb
sbb
sub
mov
mov
mov
imul
push
push
imul
xchg
pop
test
out
xchg
inc
mov
add
and
in
rorl
jle
outsb
inc
fiadds
xlat
fbld
lahf
cmp
pop
xchg
and
arpl
or
and
sub
mov
jle
into
push
int
mov
mov
pop
dec
imulb
int
shrl
and
mov
push
push
lar
sub
mov
pop
rorl
movsl
and
call
in
sub
test
outsb
out
clc
mov
lea
dec
jb
pushf
and
mov
lcall
mov
sub
push
and
jl
shlb
mov
adc
push
lock
pop
push
mov
imul
jne,pn
pop
sub
adc
and
shll
cltd
dec
mov
push
iret
mov
lods
sbb
dec
pushf
mov
push
rcr
lcall
add
xor
aad
out
int3
sar
movsb
ss
xchg
scas
in
jbe
out
lds
rorb
lahf
lcall
xor
lar
push
adc
cmp
dec
mov
mov
cmp
or
add
sub
call
fwait
mov
stos
dec
push
test
mov
jecxz
out
rclb
fstps
test
mov
pop
pushf
scas
insl
roll
jle
mov
test
sarb
int3
in
pusha
jmp
mov
xchg
dec
cld
lods
push
sbb
adc
mov
sub
std
add
leave
xor
dec
js
lea
dec
jnp
pop
icebp
or
dec
or
cld
ljmp
lea
clc
pop
mov
fistpll
testb
mov
add
mov
sbb
sub
lret
rcll
out
xlat
pushf
push
push
add
fldenv
sti
xchg
js
push
pop
pushf
jl
sub
daa
lock
movsb
pushf
imul
or
gs
imul
mov
lock
int3
cltd
mov
push
jecxz
dec
in
adc
out
add
jo
leave
mov
repnz
jae,pt
into
sti
cmc
inc
in
arpl
les
bound
xor
inc
lea
and
inc
pop
add
addr16
outsl
sahf
push
mov
lahf
mov
xchg
aas
mov
jae
xchg
cmc
mov
mov
pushfw
xchg
popa
push
add
je
mov
and
push
pop
mov
iret
adc
subb
push
push
mov
pop
mov
lods
mov
ret
inc
shlb
lahf
jmp
pop
test
xchg
in
call
cmp
mov
push
ret
lock
ficomps
imul
ja
mov
mov
out
lds
mov
insb
mov
stos
mov
ja
mov
orl
dec
and
pop
ret
shl
push
or
pop
xor
pop
ljmp
mov
inc
push
insl
jnp
imul
mov
jmp
mov
mov
es
mov
fldcw
cmp
mov
pop
inc
sbb
xchg
les
les
push
addl
pop
lds
daa
int3
inc
ljmp
insl
scas
and
sarl
fsubs
jns
popa
fwait
daa
iret
cmp
add
int
repz
sbb
jmp
add
mov
aam
mov
cmpsb
stc
jns
jecxz
cwtl
pop
addb
mov
sahf
fdiv
lahf
pop
cmp
fmull
ljmp
loope
mov
pop
ret
ljmp
adc
push
out
or
sub
inc
nop
xchg
fwait
mov
sbb
pop
test
mov
jbe
fsubrl
icebp
inc
dec
mov
jo
fisubrl
pop
and
and
mov
pop
and
lret
and
stc
sbb
sub
out
mov
loop
or
cld
sbb
jecxz
stos
dec
mov
je
in
lgs
pop
or
fidivl
addl
dec
inc
loope
and
ds
lea
call
call
insb
pushf
int
xchg
lock
int3
aam
mov
cmc
mov
pop
ds
pop
inc
lods
or
nop
testb
or
xor
push
pop
jmp
jmp
and
das
test
xchg
ret
cwtl
popf
jne
jnp
mov
mov
sub
es
hlt
fsubrl
aas
mov
lods
pop
sar
sti
test
cmp
les
idiv
lds
inc
push
les
mov
dec
iret
sub
mov
push
fwait
dec
jne
or
imul
addr16
mov
testl
in
aad
mov
adc
insl
mov
adc
fwait
sbb
push
fsubl
in
push
push
clc
lahf
insw
mov
pop
insb
push
popl
xchg
pop
mov
push
ja
cltd
jg
or
imul
dec
push
call
daa
mov
push
movsl
fdivr
dec
push
addr16
enter
sub
rcl
cmp
fsubrs
sbb
jge
mov
mov
addr16
xlat
ja
stos
mov
jo,pt
call
movsl
mov
orl
dec
cwtl
in
ffree
loope
xchg
mov
test
aaa
or
sbb
lret
push
lcall
mov
ja
push
fisubs
pop
test
inc
insl
cli
sub
cld
addr16
dec
lea
aas
frstor
xchg
jo
fidivrs
and
jle
xor
inc
push
test
cwtl
push
fwait
inc
mov
cmp
clc
lock
sub
sub
sbb
jae
jecxz
mov
mov
test
cmc
push
mov
daa
lahf
bound
enter
jp
scas
int
out
cltd
shll
dec
pop
pop
in
mov
dec
aas
push
xor
pop
arpl
aad
push
scas
daa
sub
data16
xor
dec
jmp
mov
or
push
push
addl
push
sarb
push
inc
xor
stos
out
and
add
mov
daa
mov
mov
or
pop
inc
pushfw
xchg
fwait
xor
add
sub
daa
fmull
lds
sbb
mov
pushl
lods
cli
addb
leave
push
lods
dec
add
adc
and
sub
rclb
adc
jnp
add
xor
push
test
int3
gs
fiadds
jne
test
add
jns
pop
inc
inc
and
push
popa
test
add
cltd
xor
sbb
gs
adc
ja
add
mov
cltd
movsl
jo
aad
push
mov
jle
mov
imul
jecxz
rcrl
push
xchg
jnp
nop
mov
scas
daa
mov
xchg
pop
pushf
push
mov
cmc
push
inc
enter
inc
xchg
insl
mov
push
fwait
aas
hlt
cmpsb
adc
jecxz
jmp
into
mov
mov
daa
fiaddl
lds
test
adc
imul
movsl
test
iret
adc
inc
sbb
push
out
shrb
add
dec
xchg
xchg
xchg
out
xor
pop
subl
lods
bound
xchg
repnz
jle
stos
daa
addr16
mov
xchg
pop
push
stos
jp
js
or
fcompl
mov
mov
jns
inc
pop
sub
mov
imul
jecxz
jbe
mov
pop
inc
sub
sub
es
push
dec
mov
repnz
stos
fcomp
or
gs
xchg
xorl
daa
pop
sbb
mov
das
inc
mov
push
push
or
stos
xchg
dec
pop
lcall
repnz
add
push
pop
fwait
shl
dec
xchg
sbb
adc
push
lock
push
shr
sbb
dec
stos
lahf
mov
fisubl
push
push
pop
mov
pusha
xor
fwait
test
pop
je
or
roll
mov
incb
bound
daa
hlt
imul
cmc
or
push
xchg
stc
test
jno
hlt
je
jmp
pop
out
or
or
outsl
addps
mov
ret
lods
in
movsl
and
sbb
or
sbb
dec
lds
jbe
stos
mov
out
add
xchg
mov
or
xchg
mov
cltd
xchg
mov
and
arpl
push
pusha
pop
rol
fs
or
je
cltd
mov
rcrl
repnz
push
aad
sarl
mov
cmp
mov
cld
jne
sub
mov
out
and
mov
in
pushf
sub
mov
pushf
push
sbb
repz
pop
mov
mov
sqrtps
mov
pop
sbb
push
sbb
lods
mov
push
testb
pop
addb
push
xor
fstpt
mov
iret
mov
inc
rorb
in
mov
mov
stos
ja
setb
int
mov
push
jecxz
inc
inc
jle
repz
xchg
jecxz
icebp
fcomip
addr16
mov
jb
and
jae
add
scas
push
adc
out
mov
pop
push
test
xlat
dec
mov
xchg
test
fstps
sub
mov
icebp
or
and
out
popf
imul
jle
sbb
xchg
out
sub
mov
and
lods
jge
sub
sub
fwait
daa
lods
mov
sub
and
or
xchg
mov
sbb
or
inc
insl
mov
add
lret
lds
sbb
jmp
faddp
data16
cwtl
xor
xchg
pop
aas
jge
add
and
pop
imul
dec
cmp
xchg
pop
mov
pop
outsl
test
repnz
dec
mov
adc
jle
inc
mov
mov
jmp
cmp
add
push
mov
push
inc
xor
mov
loopne
push
cmp
adc
or
into
cmpsl
jmp
jne
xor
mov
xchg
notl
in
xorl
cmovb
jecxz
pop
and
je
imul
xchg
loop
pop
movsb
repz
lret
fisttpl
sub
lahf
xor
jle
adc
xor
adc
or
jno
mov
icebp
stc
inc
pusha
pusha
inc
cli
enter
xor
lcall
adc
and
mov
popa
nop
hlt
addb
jae
mov
enter
jg
adc
sti
fwait
repz
addb
xchg
push
xchg
inc
ljmp
lcall
jno
stos
sub
dec
pop
jmp
js
dec
mov
sarb
ja
mov
mov
imul
sub
cmp
shlb
pop
push
testl
imul
sarl
addr16
xchg
fnstenv
aas
cmpsb
mov
push
mov
out
push
fists
rorl
dec
aas
das
movsl
orb
rolb
mov
into
adc
mov
in
jecxz
test
and
add
xchg
rcl
adc
sub
xchg
movsb
pop
add
test
jb
or
leave
outsl
xchg
lock
js
fwait
add
pop
das
inc
add
or
jno
cli
call
push
sbb
mov
push
jecxz
lret
test
push
movsb
dec
into
repnz
rolb
dec
pop
mov
pop
fwait
stos
sbb
push
js
push
rolb
xor
xor
mov
loopne
aam
ret
cltd
repnz
jne
or
sub
enter
mov
sub
mov
pop
dec
push
and
mov
in
and
pusha
push
out
and
cld
nop
fistps
test
outsb
int3
push
fimuls
cmp
pop
push
outsl
and
jmp
mov
loope
and
dec
fistl
xchg
sub
or
sahf
bnd
sub
adc
rcrl
mov
in
sti
and
mov
mov
push
fiadds
shl
aaa
push
dec
into
jno
cwtl
loopne
fwait
cmc
jl
or
movsl
and
imul
pop
test
sub
pop
mov
pushf
pop
aaa
push
lcall
repnz
or
lahf
mov
xchg
mov
popf
pop
lea
cmpsb
test
sub
add
divl
xlat
dec
fwait
sub
dec
or
or
pop
and
dec
push
or
mov
pushf
pop
sbb
test
jnp
jmp
xchg
pop
les
shrl
add
test
or
out
inc
xor
and
pop
jno
pusha
cmp
int3
pop
nop
fwait
jl
in
cltd
jecxz
pop
in
das
lcall
fdivrs
xchg
cmp
cli
fsin
cmp
aaa
push
jne
mov
add
fwait
addr16
mov
dec
jne
cltd
ficomps
cmp
cmp
mov
int3
mov
pop
stos
jmp
adc
imul
mov
xor
pop
jecxz
shlb
push
clc
pop
or
mov
inc
cmp
pushf
stos
imul
adc
pusha
insl
xchg
pop
out
addb
xchg
dec
insl
push
jecxz
lret
xchg
fnop
push
icebp
rorb
xor
mov
jl
and
mov
hlt
scas
enter
into
out
stos
pop
imul
adc
mov
add
xchg
dec
xchg
repz
arpl
adc
jecxz
out
lret
subb
add
fwait
sbb
cmp
xchg
and
outsb
subl
xor
sbbb
mov
mov
and
jb
jno
pop
scas
push
dec
ud1
pop
stos
sub
mov
pop
adc
aas
mov
dec
add
pop
add
push
imul
sub
mov
hlt
int
mov
loopne
inc
shll
jecxz
mov
xchg
pushf
into
dec
jo
loopne
sahf
or
jp
cld
aaa
daa
push
mov
outsl
addr16
or
mov
daa
sbb
les
mov
or
out
negb
cwtl
into
xchg
mov
or
or
inc
fs
jmp
cli
loope
adc
test
inc
inc
fisubl
xor
out
cmpsb
adc
mov
nop
loop
mov
dec
adc
nopl
add
mov
push
mov
xchg
nop
dec
jecxz
movsl
pop
pop
cld
int3
sbb
int3
dec
jg
fwait
cs
pop
jb
fwait
subl
jecxz
mov
adc
and
cmpsl
and
lock
pushf
ret
addr16
mov
mov
xchg
insb
xor
xchg
test
leave
imull
stos
outsl
aam
lock
xchg
rcll
add
pop
outsl
in
pop
lods
cwtl
cmp
lret
shll
and
mov
fldt
lods
cwtl
cmp
ficoms
cmp
xchg
pop
movsb
cmp
adc
add
sbbb
mov
push
mov
insl
fwait
mov
push
out
lods
inc
insb
aad
inc
jg
imul
outsl
gs
jo
mov
cmp
inc
enter
rolb
std
fwait
sub
in
pop
adc
in
push
xor
xor
add
mov
add
dec
imul
stc
les
jle
fdivs
adc
addr16
call
push
add
jae
xchg
pop
push
ror
adc
insl
leave
sbbl
push
cs
popf
add
out
cmpsl
xchg
lret
aad
push
sahf
hlt
adc
pop
cltd
or
cmpsb
mov
xchg
imul
sarl
sahf
push
ss
add
icebp
in
ss
lea
push
and
in
dec
ja
lods
jne
push
stos
daa
shrl
es
fwait
mov
jle
lahf
in
scas
cwtl
pushf
cmc
pop
lods
xor
mov
rcrb
pop
clc
add
push
and
fs
xor
mov
sarb
push
arpl
jmp
mov
cmp
addr16
jbe
cmpsb
lcall
test
loope
mov
shrl
xchg
xchg
mov
xorl
in
js
pushf
pop
ds
push
xchg
lea
sbb
fwait
lock
pop
out
add
stos
mov
arpl
adc
or
push
xlat
addr16
inc
adc
out
stc
pop
enter
dec
ljmp
jg
or
sbb
mov
adc
test
mov
clc
sub
sbb
pop
or
add
shll
pop
push
dec
add
sub
add
mov
ficompl
or
xchg
xchg
insl
lea
jg
and
aad
adc
std
mov
pop
imul
fisubrl
aad
negb
popa
push
lea
sub
add
mov
cli
sti
enter
leave
roll
push
cs
imul
mov
das
arpl
xor
xchg
cmp
cld
rcrb
or
jecxz
adc
sti
push
daa
sbb
xchg
xor
std
lods
xchg
sbb
push
jp
xchg
fiaddl
mov
sti
inc
out
or
xor
es
imul
xchg
or
insl
scas
popf
stc
arpl
int3
dec
fidivl
cwtl
jae
push
daa
inc
jp
xchg
imul
fidivs
clc
jne
xchg
or
inc
subl
icebp
sub
das
mov
push
in
mov
dec
cld
fsubl
sbb
adc
sub
pop
adc
pushf
adc
dec
enter
sbb
fdiv
leave
lea
push
lods
or
add
imul
jl
lea
dec
nop
add
stos
inc
jecxz
push
pop
or
and
jns,pn
jecxz
dec
sbb
roll
adc
shl
cmpsl
call
cltd
fcomps
movsb
inc
addr16
int3
mov
aam
jmp
pop
inc
or
adc
inc
enter
jp
scas
mov
sub
push
std
ret
inc
and
mov
jecxz
jae
mov
inc
adc
mov
adc
or
mov
test
xchg
cs
loop
int
dec
xlat
test
scas
rcll
mov
pop
pop
pop
lds
dec
mov
jb
outsl
xchg
in
xchg
xlat
mov
rcll
or
mov
rorb
inc
mov
push
jb
addl
xor
out
push
js
repnz
cli
pop
jnp
jne
pop
cwtl
data16
sbb
add
pop
insb
mov
push
and
or
push
leave
test
or
sbb
xchg
xor
out
ja
cmp
addr16
loopne
push
add
push
push
jle
xchg
or
int
jbe
ds
ret
imul
pop
push
lcall
dec
rol
in
aaa
int3
cmp
mov
pop
adc
cwtl
test
popa
mov
and
mov
aas
js
adc
mov
mov
and
mov
jmp
adc
dec
dec
lods
sub
sub
mov
shll
inc
call
mov
inc
jne
mov
push
dec
rcl
test
es
pop
dec
add
dec
sub
add
in
aaa
adc
cld
mov
movsl
pusha
sub
clc
dec
xchg
insb
xchg
add
cmc
add
jecxz
sti
je
out
testl
outsl
and
das
mov
call
out
mov
icebp
sbb
xchg
push
hlt
sbb
fdivrl
and
or
mov
mov
lock
xor
fcmove
mov
push
add
imul
xor
movsl
fisttpl
sub
daa
insl
imul
xor
and
sbb
idivl
sbb
dec
outsl
imul
add
es
dec
mov
mov
ret
out
mov
xchg
sub
xchg
fwait
jmp
ss
test
inc
hlt
fwait
mov
sub
mov
jecxz
cmp
jns
push
out
leave
mov
sbb
repnz
xchg
pop
dec
adc
out
stos
sbb
push
or
stos
or
lret
out
sub
test
push
jne
roll
sbb
mov
lcall
mov
sub
shll
jp
insl
test
xor
out
mov
or
push
je
imul
jmp
mov
push
inc
mov
call
mov
jmp
cmpsb
imul
push
dec
pop
cltd
and
xchg
test
imul
loop
in
mov
aas
mov
stc
cmp
adc
xchg
push
xchg
adc
nop
ss
orl
subl
ds
xchg
add
insb
outsb
dec
add
ficoms
inc
or
lcall
fwait
call
dec
sti
add
pushf
inc
imul
vpshaq
lock
in
mov
ror
inc
popf
imul
enter
pop
dec
lds
in
iret
neg
push
addr16
ja
dec
icebp
andb
and
outsl
cmp
pop
mov
fdivl
mov
shll
xor
pop
insb
cli
pop
rorb
sbb
mov
pop
xor
cmc
mov
pop
insl
add
or
mov
xor
lds
lret
popf
lcall
jbe
add
adc
and
pop
mov
in
inc
nop
aas
and
or
or
or
cmp
lret
sbb
fs
sbb
sub
inc
loopne
mov
cmp
stos
hlt
xchg
dec
mov
aas
flds
sub
mov
mov
push
jmp
aas
mov
int3
mov
es
inc
fwait
sub
fcmovnu
outsb
pop
dec
por
and
out
sbb
nop
movsl
shrb
xor
movsl
movl
sub
mov
mov
mov
je
mov
mov
mov
lds
repz
sbb
or
stos
add
push
xchg
jl
pop
aaa
fwait
ja
lock
aaa
pop
test
stc
or
repz
xchg
cmp
inc
sub
add
test
jbe
push
dec
mov
lahf
in
mov
mov
leave
push
popa
mov
ja
mov
inc
mov
add
xor
xor
iret
bound
push
push
lcall
jne
or
test
cmpsl
shlb
mov
xor
repz
ret
fdivl
pop
movsl
dec
xchg
xor
loope
les
mov
lock
cld
adc
sbb
je
fbstp
sahf
mov
cli
mov
or
filds
gs
imul
push
jecxz
pop
mov
cmp
les
sbb
mov
pop
in
and
test
pop
adc
std
mov
mov
sti
xchg
push
push
and
mov
mov
cwtl
xchg
sbb
and
lea
dec
pop
jno
jae
lcall
fwait
ret
ds
orb
sbb
arpl
jecxz
std
nop
aas
add
shlb
xor
pop
fstps
incb
je
imul
mov
pop
repz
cmc
std
in
outsb
inc
and
js
or
sub
xchg
mov
test
daa
mov
dec
gs
test
leave
lahf
rclb
sbb
xor
pop
fdivp
loopne
in
iret
mov
mov
aam
adc
imul
fdivr
sbb
mov
lret
lods
mov
dec
loopne
jmp
cmp
fmull
js
xor
add
adc
cmp
jp
cld
add
dec
add
rol
adc
fdivrp
push
xchg
fildl
jbe
xor
mov
shr
inc
xor
xlat
mov
lret
cmp
add
add
test
and
inc
sbb
nop
push
std
hlt
out
fmull
pop
jp
push
or
push
hlt
leave
xchg
mov
pop
cmpb
insl
add
in
pop
fidivrs
sub
call
push
inc
sub
push
jbe
jecxz
adc
in
imul
push
lea
xchg
or
mov
mov
stos
mov
mov
pop
je
xor
add
leave
pop
mov
movsl
fmuls
push
jge
cs
mov
popf
daa
add
xchg
shl
add
loope
dec
dec
mov
testl
add
les
add
lock
and
sub
xor
adc
lods
push
adc
arpl
cmpsb
mov
mov
mov
test
addr16
ret
cmp
jp
out
imul
sar
jp
lahf
push
rorl
scas
jo
lds
inc
xchg
enter
add
mov
jg
cmp
or
xchg
cmp
pop
jg
add
mov
pop
das
mov
xchg
jecxz
out
push
cmpsb
dec
fyl2x
adc
or
mov
insl
cmp
xchg
adc
cmp
icebp
jp
push
addb
jmp
stc
movl
xchg
mov
or
mov
scas
ljmp
sub
sub
pop
lcall
sti
xchg
mov
xor
mov
test
pop
sub
gs
pop
mov
icebp
stc
push
cld
fs
mov
jns
add
imul
push
das
addr16
stc
cmp
jmp
and
out
pusha
xchg
popa
icebp
iret
cli
int
xchg
shll
mov
les
mov
pop
or
pop
insl
xchg
aad
sbb
or
rcrb
notl
sub
sbb
lcall
dec
in
pop
aad
loop
ljmp
mov
cmp
jne
jb
std
xchg
or
jle
test
adc
cmc
test
add
jl
dec
xchg
out
lods
fmul
jae
xlat
add
mov
jge
cltd
iret
mov
mov
mov
add
movsb
adc
cld
fildl
sahf
push
ret
pop
movsl
pop
push
fsts
mov
dec
pop
sub
xchg
add
mov
decb
or
out
or
or
lahf
or
cmp
mov
add
and
mov
jnp
jnp
cmp
gs
imul
jg
ja
addr16
in
push
or
sahf
mov
sahf
dec
fwait
xor
and
stc
aad
mov
cs
push
push
pop
fs
or
xchg
cltd
pop
out
mov
fists
fistpl
test
pop
pop
inc
nop
cld
sbb
mov
fsubrs
mov
dec
dec
out
mov
jmp
adc
outsb
lret
add
pop
adc
sbb
or
and
notb
cmp
cmpsb
aam
rclb
fsubl
shll
cmp
ljmp
pop
sbb
nop
dec
shl
adc
ljmpw
scas
sub
shll
sarb
sbb
movsb
in
pop
in
dec
mov
pop
leave
xchg
loope
in
mov
ret
pop
test
dec
mov
lcall
add
pop
cs
jae
sahf
inc
push
das
sbb
push
js
fwait
add
test
sbb
pop
pop
mov
jl
imul
cmp
pop
mov
bound
test
adc
or
mov
jbe
dec
push
fwait
mov
es
icebp
push
subl
fs
push
mov
pop
xchg
aam
dec
sub
loop
or
incl
sub
dec
fwait
test
out
or
xor
shl
xchg
jp
add
adc
sbb
cltd
pop
xchg
mov
pop
sbb
enter
mov
ja
mov
ja
add
imul
push
sbb
mov
lret
jl
dec
inc
clc
mov
das
jp
imull
cltd
lret
addr16
shlb
shlb
ljmp
inc
lods
pop
and
sbb
adc
fisubl
cmp
adc
sub
addr16
mov
roll
xor
dec
sbbl
pop
popl
mov
aad
push
push
push
dec
pop
movsl
jp
adc
imul
subb
push
adc
sbbb
dec
cmc
sbb
adc
pop
jbe
cs
mov
ss
sbb
lahf
and
mov
mov
popa
xor
jg
adc
outsb
xchg
mov
lea
cltd
push
fisttps
aas
movsl
adc
push
out
in
inc
jg
aaa
sbb
aas
push
push
popf
fstps
mov
das
cmp
or
or
mov
dec
push
mov
jmp
imul
das
sub
pop
mov
add
adc
stos
mov
in
lock
dec
movl
jae
pop
push
in
pop
xchg
inc
xchg
por
cwtl
mov
adc
loop
jge
or
xchg
fwait
pop
cmp
addr16
mov
repnz
popa
jb
sbb
push
fdivr
shll
mov
pop
pop
rorb
push
mov
sub
sub
sub
test
cs
xchg
mov
adc
cs
push
mov
xchg
sbb
aaa
xor
test
sub
rorb
test
and
sbb
inc
mov
filds
in
sub
out
mov
pushl
sbb
in
jno
jnp
mov
popf
pushf
fldcw
cltd
fdivl
push
or
out
lcall
adc
mov
pop
nop
mov
imul
dec
inc
bswap
push
aas
outsl
in
push
xor
mov
jp
scas
xchg
ljmp
out
int
push
mov
mov
and
sbb
pop
in
xchg
pop
dec
imul
insb
push
jmp
loopne
imul
dec
dec
sbbl
or
mov
cmp
sti
mov
imul
inc
jns
rclb
decb
lcall
jmp
dec
pop
mov
xchg
sub
sbb
imul
loopne
push
leave
ja
jae
push
jge
filds
mov
out
pop
out
pop
xor
sbb
ljmp
int3
ficompl
dec
into
mov
add
inc
enter
negl
cli
imul
fistpl
xchg
lea
xor
mov
jnp
add
pop
jecxz
pop
fs
mov
out
mov
add
les
xor
imul
sbb
sahf
jb
arpl
lds
push
mov
aaa
ja
push
mov
inc
push
pop
bound
das
jmp
cld
push
sub
das
cli
dec
pop
inc
pop
imul
mov
hlt
bound
mov
or
lea
in
inc
mov
ret
fs
mov
pusha
add
ja
stc
imul
fs
movsl
fstpt
dec
adc
pop
xorl
pop
daa
xchg
mov
xor
adc
sahf
xchg
fwait
int
and
sbb
mov
mov
pmullw
mov
mov
sarb
adcl
push
or
data16
push
add
test
adc
lret
push
jl
sub
xor
outsl
mov
push
subl
push
and
jae
adc
shrb
pop
mov
stos
xchg
aas
pop
xor
sahf
or
xor
adc
and
pushf
lea
fdivrs
packuswb
or
or
sub
jbe
jecxz
inc
jo
xor
sbb
outsl
adcl
jo
les
push
sbb
adc
sahf
aaa
subb
outsl
ljmp
jae
notl
sub
push
cli
ret
popa
inc
loopne
push
mov
jecxz
adc
adc
xchg
test
repnz
sub
popa
subb
pushf
and
pop
adc
or
mov
enter
repz
stos
jne
sub
xor
lea
sub
jae
test
test
xor
imul
mov
lods
jmp
je
sbbl
stos
xchg
fidivs
fwait
sti
and
aas
jecxz
inc
dec
imul
adc
rolb
repz
lcall
int3
pop
xor
negl
sarb
add
mov
or
mov
pop
sub
imul
aaa
dec
jmp
adc
mov
push
fs
inc
lcall
mov
or
cltd
mov
dec
iret
data16
syscall
outsb
jbe
sbb
pushf
sti
scas
mov
rolb
idiv
out
in
into
add
fldt
mov
jg
rcl
dec
loop
inc
rorl
fdiv
jl
add
pushf
jg
nop
push
insl
jne
sbb
cmpsl
jns
mov
outsb
lock
pop
sub
cmp
hlt
insl
mov
test
rcrl
xchg
scas
sbb
movsl
push
std
push
xchg
iret
push
addr16
arpl
stos
test
or
es
orl
or
popa
pop
stos
add
inc
ss
or
push
cld
rorl
xor
and
ja
mov
test
fwait
stos
nop
stc
dec
push
xor
push
sub
js
sub
sub
or
cmp
lcall
mov
or
ja
and
cmp
fcoms
mov
add
ficompl
rcrb
ljmp
test
call
push
aas
out
mov
cmp
sti
insb
fiadds
test
lea
in
cmp
or
lahf
xlat
dec
movsl
and
push
mov
movsl
dec
pop
add
nop
xchg
cmc
andl
scas
mov
push
cmp
lret
loopne
push
xchg
xor
repz
out
hlt
jp
es
mov
mov
inc
scas
add
scas
gs
addl
in
xchg
adc
xchg
xor
jecxz
mov
icebp
shlb
jns
sbb
and
fwait
xchg
push
mov
call
ret
pushf
sti
jmp
cs
and
or
mov
mov
jge
xchg
inc
xchg
inc
cmc
mov
nop
dec
dec
mov
mov
imul
sub
xchg
dec
adc
mov
pushf
stc
cmpsb
dec
jb
fwait
pop
lds
ja
iret
adc
mov
mov
and
stc
lret
fwait
jb
push
mov
testl
fstpt
adc
imul
pop
inc
push
inc
sbb
clc
in
das
mov
in
xchg
push
xor
inc
and
xchg
adc
add
out
and
mov
icebp
out
fsubr
dec
fstps
adc
cmc
sbb
in
iret
mov
mov
lods
jno,pt
arpl
loop
push
roll
les
sbb
aam
out
push
loop
dec
arpl
aaa
jmp
insl
insb
aad
inc
xchg
mov
jo
inc
aam
aam
pop
cmp
aad
cwtl
push
in
inc
mov
fisttps
dec
fwait
jb
add
xchg
push
xchg
pop
jecxz
fsubrl
js
das
push
cmp
fwait
test
cltd
xchg
adc
lcall
repz
push
mov
rcrb
aam
mov
js
fidivrs
sti
inc
in
push
stc
aad
mov
nopl
clc
mov
mov
mov
push
fmull
pop
push
mov
jmp
pop
loope
jl
adc
cwtl
pusha
into
xor
mov
pop
stc
imul
test
pushl
jb
in
repz
out
dec
inc
and
mov
cwtl
pop
pushf
rorb
ret
sbb
or
jne
inc
mov
xor
lock
orb
stos
push
dec
loop
shr
and
movsb
scas
rcpps
lock
inc
mov
pop
das
mov
and
in
pushf
or
imul
or
push
leave
cltd
inc
fxch
data16
insl
pop
jb
xchg
aas
outsb
add
subl
cmp
mov
push
sub
sti
or
adc
rorb
add
push
pop
dec
inc
or
jecxz
scas
or
decb
mov
pop
sub
push
shlb
push
xchg
popa
popf
sub
das
test
mov
lock
cmpsl
ret
mov
ja
stc
jno
mov
xchg
fstps
out
sub
loope
imul
sti
cmc
lahf
mov
insl
mov
and
add
pop
xchg
cmpsb
and
inc
xor
sbb
mov
and
scas
cli
adc
xchg
ja
and
mov
fnstenv
ret
sbb
add
imul
repz
add
fadd
mov
adc
int3
inc
icebp
cmp
outsl
cmp
outsl
adc
fwait
mov
cmp
movsb
ja
inc
sub
jnp
mov
pop
jae
pop
out
aad
sar
in
jae
shr
scas
xadd
or
pushf
mov
sbbb
add
pop
xchg
insb
fists
inc
sahf
pop
mov
sbb
jno
imul
mov
pop
imul
aam
jmp
loopne
jp
mov
sarb
cmpsl
sub
mov
sbb
adc
dec
call
addr16
jns
jmp
xchg
inc
mov
fldl
mov
jb
fdivl
mov
lcall
and
mov
sbb
out
pop
push
mov
js
jo
push
out
mov
adc
les
mov
sbb
or
adc
cmp
imul
dec
movb
lahf
adc
fwait
push
pop
xchg
inc
imul
cmp
jae
xor
xchg
lods
and
cmpsl
imul
daa
cmp
ja
pop
jae
push
mov
gs
inc
mov
xor
pop
pop
jae
jge
lret
cmc
shl
daa
mov
or
mul
cmp
in
push
cmp
jle
lea
sbb
sbb
imul
in
xchg
mov
pop
dec
aam
add
jp
fdivr
lock
pop
ret
and
enter
test
jmp
mov
adc
pop
ficompl
cmp
daa
std
movb
dec
lret
fwait
cmpsb
add
mov
sbb
mov
xor
xlat
jns
je
inc
mov
inc
dec
test
int
and
mov
xchg
cmp
fnstenv
jmp
insb
sub
mov
xchg
aas
adc
dec
insb
cmp
cltd
mov
add
jle
adc
or
imul
adc
push
iret
mov
xchg
and
mov
ret
faddl
and
lds
clc
or
shll
or
inc
sub
and
xchg
pop
add
push
addb
mov
ja
add
mov
and
add
dec
mov
pop
rclb
cmp
cmc
leave
loope
das
pushf
mov
test
push
inc
psrld
mov
or
lahf
lods
int3
push
jecxz
sbb
xor
adc
nop
rclb
lock
test
push
sbb
dec
mov
sub
push
loopne
lcall
mov
pushf
fldt
aas
pop
push
cmpl
mov
dec
inc
add
add
js
xorb
push
ret
in
cwtl
cwtl
add
out
call
pop
dec
pusha
fnsave
sbb
mov
fwait
mov
scas
sub
imul
jns
sbb
fwait
mov
pop
out
ja
mov
push
stc
pop
lods
mov
jl
pop
cmp
stc
ja
xor
and
adc
and
pop
sub
sbb
mov
ret
and
lock
popa
movsb
jge
aam
add
imul
ja
out
leave
xlat
sbbb
pop
in
add
call
cmp
adcb
sbb
mov
mov
jp
out
imul
js
addr16
sbb
cmp
movsb
push
xchg
adc
das
mov
nop
popf
xchg
jbe
push
mov
pop
shll
mov
daa
or
pop
jns
sbb
mov
mov
std
and
or
mov
jae
dec
sub
fwait
xchg
mov
xor
push
pop
fnstenv
fisttps
jle
mov
cli
and
aaa
push
jmp
pop
mov
mov
popf
das
or
jae
jl
lahf
rolb
jb
imul
scas
fwait
xor
ja
out
rclb
and
jecxz
mov
or
sti
sub
movsb
daa
sbb
rcll
jecxz
sub
in
fmulp
in
jle
dec
sub
imul
sub
lahf
test
xchg
std
and
jae
dec
ret
cmc
push
mov
jnp
mov
dec
cmp
insl
rol
ja
mov
test
mov
bound
aam
sub
in
lret
adc
sti
or
into
pop
aam
push
lcall
xchg
mov
pop
aas
jno
outsl
pop
lcall
mov
sub
arpl
fisubrl
or
loope
add
pusha
adc
in
push
cltd
xchg
jecxz
add
sbb
outsb
jae
cltd
popf
addr16
mov
je
imul
aad
cmpsb
add
cmp
stos
adc
iret
lret
decl
mov
jl
jno
mov
jbe
sub
adc
mov
jp
mov
dec
dec
sbb
jl
dec
jbe
ja
ffreep
mov
sbb
xchg
fldcw
mov
stos
cmp
dec
mov
loope
das
dec
or
sub
lds
pop
fidivl
push
sub
nop
mov
clc
les
xchg
or
bound
addr16
ret
xchg
pushaw
pop
ja
mov
fildl
xchg
test
orb
mov
loop
clc
fldcw
dec
dec
mov
shl
ljmp
sbb
sub
xorl
add
outsl
push
shl
data16
jl
outsl
popf
pop
pop
int3
loope
fadd
mov
cmp
js
sub
test
jns
and
pop
jns
adc
clc
xor
aas
inc
cli
push
lret
adc
mov
scas
sbb
add
dec
jno
fwait
cmp
inc
mov
add
call
mov
das
lcall
test
ljmp
out
mov
adc
mov
push
call
nop
jb
pusha
cmp
in
and
stos
dec
or
lods
sbb
mov
pop
jmp
sbbl
rol
mov
in
sbb
ja
adcl
adc
and
ret
jo
jbe
imul
or
or
addr16
call
ja
dec
add
jns
roll
fwait
cmpsl
outsb
adc
dec
adc
jle
fildl
lds
or
dec
cmp
pop
fstpl
inc
jp
push
testb
test
in
out
dec
cmp
mov
out
mov
fstpl
lock
jns
dec
repnz
or
and
into
mov
out
cmpsw
addr16
pop
stc
js
sub
push
dec
adc
mov
and
add
mov
sbbb
mov
enter
jmp
aam
sar
mov
cltd
aaa
xchg
mov
fcmovne
outsb
addr16
imul
popa
decb
jmp
lret
push
sub
mov
icebp
pop
loope
fwait
sub
icebp
fidivs
xor
xchg
add
mov
or
pop
xor
xchg
mov
add
outsb
adc
dec
inc
dec
push
xchg
adc
sub
and
movmskps
adc
ret
or
cmpsb
inc
push
cmp
add
cmp
rol
lcall
mov
cmpl
xchg
aad
out
xchg
mov
in
dec
lds
inc
push
in
pusha
test
inc
out
in
jg
adc
xor
pop
test
imul
popf
mov
fadds
pop
mov
sbbl
mov
sbb
xchg
insb
int3
xor
cmp
dec
dec
xchg
sub
jmp
pop
xchg
aas
mov
add
les
xchg
sbb
js
cli
mov
mov
mov
addr16
mov
scas
or
imul
outsl
fcomps
pop
xor
in
dec
pop
jle
mov
pop
push
adc
add
mov
out
jg
and
fs
or
aad
cmp
rorb
mov
shll
mov
push
cmpsl
mov
outsl
push
rcrl
clc
and
pop
jl
fnstsw
pop
fidivl
push
popf
jl
xchg
std
mov
fwait
in
jmp
push
mov
jbe
dec
pop
gs
cltd
xchg
ds
add
xor
cld
pop
fisubs
push
sbb
mov
arpl
mov
mov
ret
inc
into
lret
push
cmp
jl
js
inc
into
sti
jg
je
mov
add
into
imul
pusha
cwtl
pushf
cltd
ror
adcb
dec
out
test
xor
jp
or
mov
andl
lea
daa
or
fsubrl
subb
fwait
or
in
lcall
adc
dec
xchg
fdivs
mov
cmp
mov
lret
xchg
flds
out
and
mov
mov
cwtl
in
sub
xchg
sub
jl
mov
mov
rcrb
test
stos
rcrb
or
out
fsubs
mov
and
imul
cld
sahf
push
mov
push
sbb
xchg
cmpsl
enter
jae
mov
mov
push
xchg
test
cli
fstps
scas
pop
and
rorl
in
fs
imul
xor
jb
pop
aad
sahf
xor
aaa
out
add
sahf
in
xchg
fwait
cmp
rorb
jmp
leave
push
mov
in
jle
inc
sub
out
in
sahf
out
xchg
sbb
mov
inc
dec
jp
inc
lea
xchg
adc
and
movsb
xchg
movsb
add
sbb
mov
cmp
inc
mov
fistl
ja
push
mov
mov
xchg
pop
xor
add
sbb
lds
roll
addl
js
aas
dec
cmp
mov
mov
data16
xlat
lahf
fdivl
mov
outsl
sub
ret
popf
mov
movsb
mov
cmovg
ss
out
mov
aaa
fstpt
fdivs
ljmp
lahf
mov
mov
jle
int
xchg
std
icebp
xchg
lods
int
rep
pop
push
fldt
xchg
fidivrl
xchg
dec
ret
shll
les
mov
sbb
cmp
cmpsb
fsubrs
push
sbb
fwait
pushf
imul
mov
pop
xor
arpl
loope
pop
push
sub
and
into
adc
test
insb
inc
sar
adc
pop
cmp
ret
int
lret
les
jmp
add
divps
push
lock
push
cld
addr16
mov
mov
test
push
push
inc
dec
jo
or
adc
xor
ffreep
sti
inc
gs
ja
fists
cltd
push
pushf
cltd
push
out
mov
test
cmpb
adc
repnz
dec
out
aas
arpl
mov
ficoms
xor
bound
ret
outsl
js
loop
int3
insl
inc
add
add
jg
pop
lahf
loopne
add
jg
cmc
test
aas
jb
getsec
mov
jb
aas
adc
cmp
test
ffreep
mov
push
xchg
adc
movsl
pop
les
cmp
mov
inc
mov
scas
in
or
rol
aas
pop
mov
mov
jl
mov
mov
sub
and
data16
add
inc
lcall
inc
mov
cli
and
jp
test
test
sbb
cwtl
mov
cmp
adc
mov
mov
movsl
pop
jle
jecxz
rorb
cmp
mov
fcmovnb
out
pusha
hlt
xchg
fcmove
aas
fs
xchg
sbb
xchg
cmp
cmp
mov
jecxz
in
sbb
or
daa
mov
sbb
rorb
lahf
xor
add
dec
sub
lods
mov
xor
pop
mov
xor
push
lock
and
fwait
or
pop
cld
test
clc
fimull
xor
mov
clc
jns
pop
iret
sub
xor
pop
rolb
ja
jmp
jle
iret
leave
iret
imull
sub
enter
push
dec
xor
jp
inc
out
call
fcmovb
in
loop
mov
push
outsl
xchg
push
inc
fwait
addr16
push
icebp
out
cmpsl
ja
addl
dec
imul
frstor
cmp
mov
or
jae
inc
scas
sbb
rcll
push
ds
xchg
xor
daa
out
push
lret
push
add
in
mov
and
cmp
add
lods
lcall
push
sbb
insl
gs
xlat
inc
shlb
lock
pop
notl
jae
fyl2xp1
or
fnstenv
pop
cmc
and
lea
lahf
adc
ja
mov
pop
jnp
push
jl
imul
jl
mov
xchg
sti
dec
outsb
lahf
iret
xor
add
outsb
mov
cmpsb
cmp
xchg
jmp
pop
add
fwait
in
mov
push
insb
mov
lods
subl
push
repnz
xor
shrb
shl
sbb
mov
sbb
xchg
mov
mov
repz
popf
mov
imul
out
adc
arpl
pop
pop
leave
dec
cmp
mov
sub
aaa
insb
aas
pop
sub
daa
cmp
ljmp
dec
lods
ficoms
sbb
pop
rorl
out
loopne
pop
mov
push
popa
mov
mov
std
sub
int3
mov
not
xchg
push
test
mov
bound
lret
das
pop
int3
pop
fisubrs
jbe
sbb
adc
mov
xchg
push
icebp
test
pop
push
xchg
cmp
sbb
add
stos
mov
pushf
pop
sahf
or
mov
ss
cld
sti
pop
and
mov
scas
paddusw
add
pop
mov
iret
pop
push
xor
fstps
ja
mov
call
pop
mov
push
xor
xchg
adc
int3
outsl
leave
xor
das
cwtl
xor
movsb
icebp
xchg
mov
cld
in
pop
jbe
push
repnz
outsb
fdivl
mov
lret
dec
sub
or
daa
gs
imul
jmp
push
shrl
xchg
inc
loopne
cs
mov
add
pop
in
xchg
mov
test
into
in
cmpsl
cltd
lea
ret
cmc
push
mov
fidivl
iret
jecxz
xchg
std
adc
movsl
cmc
sarb
in
fimuls
inc
gs
aaa
adc
and
dec
repz
insb
cmpsl
movsl
sbb
imul
repnz
lcall
ror
push
inc
and
mov
push
adc
out
push
dec
xchg
test
jecxz
inc
out
sbb
push
xchg
cmc
jp
xchg
add
je
inc
shlb
inc
xchg
push
test
push
mov
mov
cwtl
cmpsl
mov
mov
mov
shl
mov
push
jl
movsl
mov
jae
pop
nop
loopne
push
push
aam
fbstp
aas
push
mov
add
push
ficoms
stos
ja
test
or
sbb
xor
lea
xlat
or
push
scas
je
pop
ljmp
cmpsb
shll
mov
jecxz
andb
push
push
fisttpll
imul
push
pop
lcall
pop
push
pop
stos
fsts
and
and
adc
jecxz
sub
jle
pushf
scas
pusha
test
add
dec
test
or
out
jns
adc
clc
shrb
cmpsb
push
xor
dec
cmp
daa
fsts
popa
push
or
out
ds
xlat
popf
aas
jg
push
pushf
pusha
add
popa
stos
test
cmpsl
lock
jg
inc
sub
dec
lcall
movsl
fwait
je
ret
pop
xchg
mov
mov
mov
repz
mov
mov
push
sbb
and
mov
sbb
jl
dec
pop
ss
in
popf
cld
fists
sbbl
jns
insl
lret
repnz
push
or
cmp
scas
cld
cmp
sahf
pop
aad
enter
enter
push
jmp
jp
xchg
xlat
mov
addr16
daa
shlb
xor
ja
in
sbb
sahf
push
lahf
imul
sub
cwtl
insl
dec
pop
mov
test
add
loope
cmp
pop
inc
dec
jae
icebp
or
fiaddl
insb
adc
mov
mov
fmul
adc
add
addr16
mov
adc
push
pop
pop
mov
jmp
sahf
aas
push
mov
hlt
sub
sbb
xor
push
lcall
pop
insb
pop
cmp
cmp
das
addr16
xchg
imul
das
mov
fsts
mov
movsb
jae
pop
xchg
shl
sbb
pop
dec
mov
mov
stos
xchg
fldenv
pop
pop
inc
icebp
in
bound
push
or
in
call
in
cltd
imul
push
push
mov
in
xchg
fisubl
xor
mov
dec
nop
outsb
addr16
lods
pushf
inc
mov
add
dec
sbb
pop
xchg
mov
enter
movsl
fiaddl
movsw
sub
scas
data16
xchg
pushf
int3
push
cmp
mov
add
movsb
pop
repz
cmp
mov
mov
mov
orl
sahf
sarb
outsl
mov
in
sbb
mov
cwtl
xorb
mov
inc
call
cmpsb
pop
xchg
imul
andl
add
xlat
and
pop
std
rdpmc
ss
insb
ret
pop
add
es
dec
repnz
xor
into
imul
shll
pop
hlt
mov
fwait
cmp
test
cltd
cmp
and
push
in
pop
pop
push
test
mov
arpl
mov
xor
addb
imul
and
cwtl
popl
addr16
lcall
scas
loop
mov
call
cmp
sahf
xor
fiaddl
adc
test
cmp
movsb
sub
xchg
cmc
push
cwtl
mov
mov
cmc
xchg
dec
xchg
xchg
fwait
push
btr
jnp
and
dec
dec
cmp
inc
jp
testl
mov
rolb
adc
imul
push
in
scas
test
cmc
addr16
imul
jl
stc
insl
cwtl
pop
xchg
xchg
imul
test
adc
fsubr
in
inc
jne
and
aam
cmp
arpl
int3
pop
jl
mov
pop
dec
pop
push
imul
movsl
mov
mov
sbb
xor
mov
bound
lea
mov
sbb
rorl
xchg
rorb
adc
fdivrp
andl
mov
inc
pop
cmp
dec
ficoml
mov
xchg
mov
jbe
sub
xlat
fisubs
fisttps
jl
stos
cwtl
xor
xlat
movsb
xchg
mov
jne
sbb
mov
jnp
popf
push
push
cmp
or
ljmp
sub
cmp
pop
mov
sbb
outsl
out
dec
xor
push
mov
lahf
into
cmp
sbb
aaa
sarl
push
in
inc
mov
dec
pop
cld
sub
add
or
cmpsl
push
xchg
inc
sub
stos
repz
mov
pop
daa
sbb
adc
ja
and
push
jnp
sbb
sbb
inc
mov
push
add
ret
out
addr16
pop
lock
xor
cmp
outsb
ljmp
jg
pop
pop
sub
test
and
push
ja
aad
sbbb
cwtl
fwait
out
test
mulb
jg
mov
popa
imul
fdivr
ficoml
inc
int
ret
lahf
or
mov
adc
jecxz
clc
xor
cltd
inc
mov
dec
das
sub
addr16
push
add
inc
fistl
int3
dec
mov
push
mov
aam
rcr
orb
addr16
in
out
pop
imul
mov
not
inc
cwtl
je
lods
es
mov
loop
imul
lock
in
xor
and
imul
sub
dec
in
fnstsw
roll
rolb
out
mov
sub
repz
add
and
aaa
xor
jne
ja
xchg
mov
dec
jae
sbb
sub
mov
fidivrl
fnstsw
sbb
pop
jnp
fcmovu
sub
daa
imul
inc
int3
lret
divb
mov
mov
mov
sahf
cmpsl
xchg
mov
mov
lcall
mov
xchg
in
mov
xchg
jae
sub
pop
sbb
mov
movb
push
cmp
push
and
ds
mov
jb
in
movsb
cld
adc
mov
add
and
shrb
test
mov
xchg
fwait
mov
das
movhps
movsl
es
popf
mov
mov
jecxz
sbb
add
jecxz
enter
cld
mov
adc
or
ja
pop
jns
inc
jno
dec
pop
pxor
mov
push
mov
repnz
jo
inc
mov
fldcw
lods
push
idivb
dec
or
mov
adc
or
dec
pop
xchg
pop
insl
arpl
not
shrb
pushf
lds
adc
dec
insb
mov
xchg
cmp
in
push
jno
pusha
repz
cwtl
jo
xchg
shlb
loope
mov
add
int
stc
pop
lea
fiaddl
xor
sbb
mov
aad
int3
jmp
or
xor
xchg
mov
jno
sub
pushf
shlb
push
loop
adc
pop
dec
mov
cmp
or
mov
mov
and
mov
jl
ja
pop
mov
out
sbb
push
xchg
mov
dec
aaa
mov
lods
ficoms
sub
mov
popa
xor
cmp
jae
cld
add
push
aam
shlb
lods
lock
mov
test
dec
dec
ss
int
ljmp
and
test
xor
mov
in
xorl
adc
pop
mov
jo
fwait
inc
inc
pop
ljmp
and
mov
pop
nop
mov
addr16
out
push
or
add
negb
es
mov
xchg
pop
cmc
sbb
mov
repnz
pop
call
sbb
mov
ljmp
xchg
es
mov
test
xchg
lock
jle
xchg
add
dec
outsl
add
add
addr16
cmp
mov
sbb
mov
mov
dec
popf
mov
shrl
ss
icebp
and
aas
lahf
je
add
xchg
mov
mov
cld
adc
pushf
or
lds
pushf
ja
xchg
inc
out
fwait
cmpsl
clc
cwtl
lret
shrb
xchg
aam
dec
mov
adc
and
and
cld
popa
in
cmp
mov
adc
loopne
insl
das
cwtl
pop
fwait
js
mov
xchg
push
xor
sbb
testl
lods
dec
lock
mov
sbb
pop
jmp
out
test
dec
popf
cli
jmp
xorl
sbb
adc
inc
test
push
sub
jns
sbb
xor
sbb
inc
push
test
or
xchg
jg
imul
cmc
pop
sbb
fwait
stos
pop
js
pushf
xchg
pop
dec
ret
outsb
jbe
sahf
xor
cwtl
sub
sahf
push
xchg
lahf
and
inc
add
fwait
mov
push
hlt
adc
mov
inc
outsb
lds
nop
jb
sub
jecxz
jnp
or
xchg
pushf
pushf
push
cli
or
fdivl
imul
sti
pusha
mov
outsb
sub
int
pop
enter
jle
mov
mov
out
or
push
or
mov
or
cmp
xor
mov
addr16
dec
sub
arpl
or
aam
out
cmp
daa
into
fsubrl
call
insb
dec
test
enter
fs
inc
sub
xor
mov
xchg
or
fists
adc
jae
cmc
cmp
cwtl
mov
add
inc
push
test
mov
mov
dec
imul
push
fcomp
ficompl
mov
ret
in
cmp
add
lods
pop
aam
outsl
adc
mov
push
insb
test
sub
mov
fiaddl
cmpsl
push
enter
lret
push
inc
or
sbb
das
xchg
mov
in
push
push
and
ja
and
jecxz
and
xchg
ffreep
mov
mov
into
or
inc
push
sub
stos
mull
and
hlt
fwait
lret
pop
push
dec
xor
mov
jne
or
cld
xchg
inc
or
movsb
std
lock
in
adc
sub
sub
sbb
test
pop
add
lret
xchg
pop
mov
dec
or
pusha
or
mov
imul
mulb
outsb
pushf
inc
lret
cmpsl
xor
dec
lret
dec
ret
sub
push
xor
lahf
imul
and
stos
mov
jo
out
cmp
fisttps
xor
inc
xchg
out
addr16
faddl
stos
dec
pop
inc
and
fldenv
sahf
loope
push
inc
jo
push
and
pushf
js
ficoms
mov
cli
mov
push
lcall
std
daa
imul
flds
inc
decl
lret
cmp
data16
add
aad
pop
mov
and
jno
sbb
cmc
insb
nop
jnp
cli
push
bound
sub
test
cmp
fldenv
imul
dec
shr
lret
fnsave
cmpb
adc
daa
nop
add
adc
addr16
in
jnp
push
movsl
xchg
push
divl
cld
jb
xor
xor
clc
nop
pop
pushf
dec
xchg
mov
imul
cmc
push
movsb
sub
xchg
push
dec
dec
and
or
cmc
lock
loope
arpl
cltd
into
xchg
xchg
repz
push
lea
std
stos
std
in
jmp
aam
jg
sub
adc
mov
loope
dec
ret
xor
stos
mov
jle
repnz
and
hlt
jbe
sbb
push
in
out
adc
or
mov
aaa
add
fwait
sub
fnstenv
shll
incb
movsl
push
mov
nop
dec
aaa
int
out
insb
push
xor
mov
push
sti
mov
and
and
mov
xchg
jno
add
fwait
int
ds
and
lahf
sahf
rclb
push
cmp
out
inc
xlat
sub
rcrb
xchg
enter
imul
adcb
negb
mov
add
mov
mov
dec
dec
xchg
cmpxchg
mov
lods
jmp
xchg
adc
add
scas
inc
icebp
ret
mov
jbe
xlat
stos
xor
sub
push
mov
pop
lcall
mov
stos
sub
sub
jle
mov
pop
into
sub
bound
xchg
insl
cmp
mov
sbb
repnz
mov
aas
lea
mov
mov
mov
pop
test
stc
mov
push
push
add
xor
imul
xchg
pop
lock
pop
xchg
jmp
lahf
stos
jne
or
jecxz
adc
cmp
fsubrs
push
mov
dec
movsb
stc
jp
xor
shll
mov
ret
aad
jno
cmp
ja
movsl
andl
daa
mov
in
fidivl
gs
imul
lret
out
sub
xor
or
imul
icebp
sbb
mov
and
cwtl
std
mov
and
out
jns
push
js
inc
mov
pop
mov
xchg
clc
out
lcall
mov
jmp
sbb
mov
mov
mov
mov
cmp
mov
imul
pop
dec
cwtl
xor
sbb
pop
loopne
cmpsl
inc
insl
pop
out
xchg
js
leave
sahf
add
fiaddl
loop
mov
inc
xchg
add
mov
fwait
addr16
mov
imul
ret
mov
sbb
jo
lock
test
loopne
aas
push
pop
rorl
repz
ljmp
stc
js
and
fiadds
adc
pop
xor
push
add
and
pop
push
je
outsl
jb
mov
imul
dec
test
xchg
mov
jmp
xor
enter
inc
xchg
or
xor
sub
pop
mov
dec
pushf
jne
adcb
movsb
mov
aas
add
cmc
fsubrl
in
cmc
dec
jb
repz
and
mov
adc
push
cmp
mov
out
in
iret
shll
push
fmull
pushf
sub
lods
push
sbb
mov
or
mov
mov
adc
jge
xchg
inc
xchg
fsubs
cltd
push
dec
xchg
inc
xchg
mov
mov
js
bound
clc
dec
fisubrs
test
mov
pop
pop
pop
cld
lock
idivb
inc
imul
cmc
add
jp
insl
dec
popa
jb
stc
cld
pop
cmp
ficoml
lret
rol
cwtl
xchg
add
ss
pop
enter
mov
mov
push
inc
aas
dec
xorl
inc
loope
pop
push
sarl
aas
lods
ljmp
push
xchg
mov
cs
dec
mov
push
adc
pop
sahf
mov
mov
shrl
es
pushf
ds
lock
in
xchg
pop
add
ret
mov
test
lock
sbb
cmp
or
mov
pop
dec
dec
mov
mov
sahf
xorl
mov
mov
and
pusha
daa
mov
cmp
aas
dec
sbb
sahf
jno
stc
jge
mov
imul
add
addr16
dec
fistl
jnp
cmp
in
or
imul
xor
insl
cld
hlt
inc
leave
ret
or
jecxz
decl
pop
lcall
cld
dec
dec
xor
fnstcw
pop
inc
fwait
and
push
dec
insb
call
outsb
nop
scas
adc
adc
pushf
push
fwait
gs
jecxz
rclb
adc
and
iret
dec
mov
andl
lock
adc
les
mov
xchg
rclb
mov
add
adc
les
cmpsl
aaa
int
leave
test
sub
add
shll
xor
push
mov
ja
mov
push
or
jg
lods
aaa
sub
pop
jmp
repnz
push
mov
orb
imul
stos
pop
fwait
outsb
pop
adc
mov
dec
and
sub
or
xchg
mov
jecxz
xchg
jne
adc
push
adc
sbb
mov
outsl
xor
add
lret
mov
cmp
adc
nop
insb
add
push
lahf
arpl
inc
inc
xchg
xchg
outsb
loope
les
inc
or
cld
or
lds
and
sahf
xchg
jge
sub
mov
es
iret
cmp
cmp
gs
fwait
loop
cltd
aam
pop
push
insl
pop
test
cmovb
pop
sbb
outsb
xchg
repnz
cmp
stc
imul
popa
or
sbb
mov
ja
ljmp
pushf
mov
adc
loopne
hlt
push
mov
add
sbb
fsubrl
pop
inc
in
bound
mov
xchg
out
out
mov
sub
imul
mov
sub
sti
mov
fnsave
xchg
out
sbb
mov
in
cmp
xchg
jl
sarb
jecxz
xchg
jo
pop
mov
mov
mov
xchg
sbb
out
or
imul
pop
sbb
push
or
xor
mov
mov
mov
xchg
lods
adc
enter
lahf
adc
mov
xchg
lret
aad
xorb
aas
je
jno
ljmp
pop
push
outsb
mov
xlat
inc
ret
test
js
sbb
movsl
xor
and
scas
fwait
in
add
or
fstps
mov
ret
test
lahf
mov
aaa
fildl
jmp
or
lods
inc
mov
or
mov
sti
inc
imul
jecxz
xchg
push
divl
sbb
mov
add
or
aad
xchg
xlat
jecxz
popa
sbb
mov
clc
mov
jecxz
out
test
xchg
push
mov
xchg
jp
cmp
sets
push
jl
mov
add
mov
movsl
jns
mov
cwtl
mov
cli
inc
cmp
int3
cmp
into
or
mov
xchg
mov
scas
mov
adc
notb
cmp
mov
popl
inc
mov
repz
sahf
mov
es
add
xchg
sbb
push
and
xchg
clc
dec
pop
push
loop
mov
cmp
insb
mov
mov
cld
add
hlt
xor
and
pop
call
pop
cmp
add
xor
aas
dec
dec
jno
push
dec
stos
daa
pop
orb
xchg
dec
fisubrs
ja
cmp
mov
fbstp
xor
or
fnstenv
inc
pmullw
subb
pop
pop
or
push
in
push
call
push
mov
cwtl
mov
pop
xchg
sub
adc
pop
jg
pop
stc
shrl
aaa
nop
rclb
repz
icebp
aas
xchg
bound
popf
cltd
mov
addr16
add
addr16
sbb
subb
dec
cmp
mov
aaa
subb
lea
adc
mov
sub
gs
mov
dec
lahf
les
sbb
cmp
pop
stc
mov
sub
xor
push
outsl
arpl
sbb
orb
lods
and
mov
scas
xor
dec
dec
cmp
push
sbb
jecxz
mov
lods
mov
cmp
pusha
testl
push
dec
imul
cltd
mov
sahf
lea
negl
fsubl
rcr
dec
jmp
clc
mov
sub
adc
xor
lcall
pop
addl
xchg
les
mov
fwait
ret
div
or
sbb
nop
js
sub
mov
inc
pop
rolb
outsl
mov
pop
jl
orb
fs
fdivl
xchg
dec
add
dec
dec
sub
mov
mulb
addl
mov
jp
loop
pop
rorb
stc
or
insb
push
stos
fcmovbe
jae
push
mov
add
and
xor
adc
xchg
in
dec
xchg
call
mov
jo
sbb
mov
gs
int3
or
jg
test
mov
aaa
ja
pop
cmpsb
call
roll
mov
mov
xor
and
inc
mov
int
lahf
fdivrs
push
cmp
inc
sub
push
jbe
pop
sbbl
test
clc
cmpsb
imul
jecxz
mov
and
pop
daa
mov
mov
outsb
jg
inc
dec
fmuls
fwait
div
push
hlt
push
or
mov
adc
hlt
or
lcall
sub
push
mov
rorl
ficoml
lret
movsl
inc
scas
lcall
cmp
or
nop
pop
dec
out
push
clc
xor
and
xchg
rcrl
arpl
pop
pop
pop
push
data16
sahf
adc
hlt
cld
rcll
rol
cli
jnp
rcr
cltd
sahf
pop
in
pop
xchg
adc
es
loop
imul
inc
outsl
pop
or
outsl
call
push
add
icebp
xchg
mov
inc
add
lret
fstl
mov
testb
adc
sub
xor
and
xchg
jns
and
and
pop
mov
add
les
cli
int3
add
int3
mov
dec
push
hlt
mov
nop
imul
or
test
pop
mov
in
adc
cltd
outsb
fidivl
dec
xchg
test
aaa
fldl
pushf
sbb
pop
mov
nop
mov
call
add
inc
lahf
mov
repnz
addb
stos
push
mov
in
dec
inc
lea
inc
cltd
andb
loopne
aaa
pop
fsubrl
shlb
sbb
pop
mov
push
push
out
mov
push
nop
mov
and
nop
mov
pop
orl
das
mov
mov
lahf
jb
add
cmc
inc
fldenv
insb
adc
andl
out
lods
das
addr16
push
in
sbb
pop
mov
in
je
xchg
or
test
insl
andl
and
inc
sbb
jnp
lods
sbb
xchg
aad
fimull
rcrb
or
cmp
xchg
mov
push
sbb
rcl
xchg
push
mov
or
dec
xchg
ljmp
lret
lods
lea
call
and
or
iret
pop
sbb
dec
stc
jmp
mov
mov
mov
gs
cld
lcall
out
scas
out
mov
insb
jp
sub
in
push
adc
leave
in
sahf
pop
cmp
notl
roll
push
daa
sub
or
pusha
xor
push
pop
mov
addr16
add
jecxz
ret
sub
into
add
lea
mov
sbb
dec
lods
jp
ficomps
rol
mov
stos
sar
xor
int
pop
pop
addr16
imul
or
or
jae
push
movsl
mov
pop
sub
icebp
arpl
mov
imul
mov
xchg
add
enter
dec
push
inc
in
xor
inc
mov
sbb
and
dec
aas
test
sbb
mov
mov
dec
test
fwait
push
lret
call
mov
mov
add
test
mov
or
jmp
out
mov
scas
inc
outsb
pop
pop
cmpb
adc
adc
push
or
adcb
or
test
inc
ja
jnp
sbb
pop
imul
push
test
push
mov
mov
xchg
repz
xchg
dec
insb
scas
mov
xchg
sbb
xor
pop
fisubrs
ja
loop
or
ss
push
mov
loop
arpl
jp
dec
ds
int3
mov
cmp
cmpsl
test
mov
jo
xchg
call
dec
out
push
jge
pop
mov
orl
jne
or
test
imul
hlt
orw
sbb
cmpb
orl
mov
loope
pop
xchg
xchg
pop
mov
or
push
stos
jg
mov
dec
call
ja
push
insl
sub
mov
cmp
sbbb
outsb
and
ljmp
das
or
movsl
sub
test
pop
xchg
fiaddl
cmc
aas
dec
lret
mov
pop
adc
mov
inc
or
lahf
sub
adc
arpl
or
pop
and
jbe
ror
xchg
movsl
scas
sbb
or
lds
mov
cmp
sbb
lea
andb
int3
or
adc
movlps
pop
mov
push
pop
pop
jmp
aas
and
cmp
push
lret
mov
ret
mov
popa
scas
xchg
pop
daa
push
or
rcrl
dec
adc
pop
jne
nop
pop
lret
insb
addr16
adc
cmpsl
xchg
cli
insb
jbe
cmp
inc
jp
and
adc
lods
xchg
int3
cwtl
iret
popa
mov
mov
adc
push
out
shlb
pop
sti
aad
scas
pop
call
xor
jp
outsb
in
lcall
mov
inc
xchg
dec
movsl
mov
mov
fldt
mov
cli
adc
loope
and
dec
icebp
sar
adc
nop
add
stos
rorb
jg
in
int3
sahf
mov
fisubs
sub
push
outsb
pop
sbb
or
add
mov
mov
rol
addr16
or
cmc
push
sbb
rolb
mov
push
lods
jecxz
inc
and
ja
in
test
pop
cmp
add
push
enter
sub
lods
pusha
pop
cmc
xor
sub
cmp
fiaddl
dec
xorb
popa
jp
xchg
rol
lcall
pop
mov
pop
sahf
movsl
mov
shl
test
clc
orl
inc
jo
int
pop
pop
or
adc
ja
push
sbb
pop
inc
stc
and
fnsetpm(287
in
fnstsw
ja
add
cmp
inc
stos
stc
aad
mov
or
xor
cmpsb
mov
pop
shll
sub
ss
push
cli
xchg
pop
rcrb
and
sbbb
scas
mov
push
and
sbb
jns
xchg
cli
out
cltd
daa
pop
ljmp
pop
mov
cmpsb
lahf
cmp
stc
ja
jmp
lret
and
sbb
movsb
shr
fstps
xchg
xor
ljmp
xor
fwait
xor
jb
lds
xchg
push
adc
lcall
pushf
xchg
mov
push
push
call
scas
pop
xlat
jle
lea
fsubrl
mov
andb
mov
sti
adc
imul
xchg
cmp
insb
sub
mov
mov
and
dec
std
imul
jbe
shr
in
movsb
in
add
scas
mov
cli
mov
movsb
iret
idivb
test
sbb
int
mov
xchg
jbe
les
jg
adc
push
sarb
dec
sub
xor
shlb
pop
dec
or
ret
mov
jnp
xchg
bound
arpl
fwait
int3
jmp
or
fwait
je
jo
lcall
mov
sbb
dec
cs
lock
jb
inc
bound
mov
xor
insb
xor
dec
es
outsb
sub
xor
arpl
call
cli
arpl
mov
pop
or
xchg
fs
mov
cmpsl
sbb
dec
daa
stos
pushf
jne
pop
mov
dec
sub
dec
std
inc
or
andl
cmp
adc
jl
lret
imul
pop
inc
dec
es
jp
sbb
mov
inc
stos
or
into
repz
aas
push
pop
mov
push
mov
and
adc
imul
and
mov
xor
jecxz
imull
testl
xchg
in
pop
adc
mov
pop
cmpsl
scas
xchg
cmpsl
outsl
and
mov
mov
adc
fidivrs
aam
fs
inc
insb
dec
stos
addr16
bound
and
add
popa
cmp
je
fcmovnb
mov
dec
mov
test
fsubrs
iret
cs
addr16
dec
mov
add
lcall
movsb
xchg
xor
lcall
jecxz
pushf
out
pop
andb
pushf
xchg
clc
emms
insb
andl
pop
jo
shll
lock
popa
sub
xchg
jns
fs
in
add
inc
hlt
pop
enter
xchg
shrl
jnp
inc
mov
in
fldt
push
lcall
aaa
int
cmc
sub
or
rol
ja
iret
sub
push
push
push
xor
dec
out
in
sub
or
push
cwtl
sub
icebp
xchg
and
gs
imul
cld
cli
repnz
rcrl
jle
fistpll
add
inc
inc
loopne
or
les
ficoml
sbb
cs
lret
dec
sub
mov
mov
insb
mov
jle
xchg
dec
rolb
rorl
cmc
nop
mov
and
adc
or
jmp
lcall
rcl
pop
and
xchg
lcall
jle
inc
jo
xlat
jmp
cwtl
repz
or
and
test
data16
test
mov
imul
inc
adc
int
imul
mov
leave
sbb
pop
sub
push
or
lds
mov
bnd
pusha
push
adc
add
outsl
sbb
lret
or
mov
imul
mov
mov
pop
xchg
pop
sub
fidivrl
inc
nop
fwait
insl
inc
and
in
ret
dec
sti
lcall
cmp
lahf
test
outsl
mov
lahf
fsub
ret
mov
mov
push
mov
sbb
test
xchg
push
fmull
mov
clc
in
jmp
mov
mov
and
dec
xchg
jbe
mov
in
scas
ja
ja
fsub
adcl
out
insb
aad
jp
dec
mov
aam
or
testl
pop
imul
daa
cmpsl
sbb
mov
outsb
cmpl
movsl
jecxz
test
int
sarb
inc
xchg
mov
cli
and
sbb
and
pop
ret
and
call
je
inc
mov
pop
out
pop
xchg
fnstenv
imul
pop
xchg
cmp
push
stos
and
clc
aaa
int
xor
arpl
mov
popa
movsl
and
les
inc
and
jp
fnsave
out
cmp
adc
imul
stos
mov
jb
lret
mov
mov
sbb
fwait
nop
orl
jle
xchg
pop
jnp
and
lcall
sub
mov
test
pop
push
fnstsw
negb
inc
mov
push
xor
and
adc
fwait
push
imul
jae
ret
cld
push
sub
inc
xchg
xchg
mov
dec
sub
push
mov
fnstenv
outsb
rcrl
insl
xchg
lea
mov
insl
xchg
enter
mov
jp
cmc
dec
repz
data16
insl
mov
pop
mov
out
and
fwait
adc
stos
lea
aas
in
test
xor
push
mov
icebp
lea
ret
andb
push
sbb
js
nop
mov
stc
pop
pushf
sub
shrl
jne
jle
sahf
cmp
dec
int3
loop
call
push
repz
dec
pushf
xor
push
imul
xchg
cmpsl
inc
and
stc
subl
inc
xchg
sarl
and
jl
sbb
xor
or
cmp
jns
adc
ficompl
push
cmp
imul
lods
and
inc
pushf
or
dec
mov
cmpsb
push
lcall
cmp
pop
mov
fpatan
jbe
adc
iret
aaa
fcomps
repz
xor
sbb
or
addr16
push
enter
xchg
dec
inc
lea
insl
movl
aas
or
incl
pop
push
adc
shll
mov
dec
mov
or
mov
xorl
xchg
xchg
pop
loopne
in
mov
das
jbe
push
add
xor
jae
data16
mov
sbb
adc
push
mov
mov
sbb
shl
adc
and
movsl
bound
sti
jp
into
xlat
incl
mov
adcb
jl
or
jae
pop
push
fstp
mov
test
fwait
pop
pushl
pop
mov
dec
cmp
inc
imul
notl
fisubl
pop
fldenv
mov
out
loop
sbb
fidivl
sbb
add
mov
rcrl
imul
addr16
adc
push
mov
pushf
xchg
mov
pop
fsts
adc
pop
cmp
daa
imul
push
dec
inc
lea
aam
and
mov
jecxz
shlb
push
sarb
clc
inc
pop
and
push
ja
pop
cwtl
mull
repnz
repz
xor
pop
and
sbb
popf
cld
pop
inc
sub
testb
cwtl
mov
adc
imul
and
shll
mov
cmp
repz
out
aas
aas
lar
mov
fisubs
mov
xor
xchg
inc
xchg
pushf
xchg
enter
sub
and
mov
sbb
inc
and
add
adc
adc
insb
dec
std
rol
aas
mov
mov
mov
sbb
push
sahf
jnp
push
rcrl
sub
mov
mov
jecxz
pop
dec
jle
add
adcb
shl
mov
scas
ljmp
push
and
in
sbb
js
paddw
mov
lahf
imul
and
out
cwtl
fwait
mov
adc
nop
mov
sbbl
adc
pop
mov
movsl
xchg
in
loope
xchg
xchg
or
loopne
rol
inc
popf
lea
rcrb
and
and
int3
dec
jmp
push
mov
loope
iret
xchg
sahf
cli
mov
imul
add
mov
add
fldt
jbe
test
sbb
adc
sub
jp
pop
lret
push
imul
push
adc
jp
ret
mov
push
outsb
cli
add
hlt
mov
inc
and
adc
imul
jp
int
dec
pushf
sbb
push
mov
sub
test
adc
subb
outsb
add
sbb
nop
fisubrl
xlat
pop
mov
cld
mov
test
out
in
push
push
sbbb
pop
imul
mov
add
inc
pop
stc
sbb
js
sti
insl
stc
sbb
dec
mov
jo
xor
lcall
shlb
insl
inc
sub
cmpsl
hlt
adc
lcall
fcmovbe
sahf
pop
push
in
sub
push
jnp
pop
add
call
cmpl
leave
psrlw
sbb
std
dec
test
js
mov
clc
ss
sbb
push
mov
xchg
mov
leave
adc
xchg
leave
add
mulb
test
mov
dec
fwait
mov
cmc
lds
popf
imul
cmc
add
push
or
shll
xchg
lcall
mov
jmp
pop
pop
popf
in
inc
xor
sub
imul
dec
nop
stc
mov
mov
add
shl
rcll
test
ja
mov
lods
pop
cmpsl
mov
mov
mov
inc
or
cmc
push
lret
pop
icebp
jg
cmp
test
pop
shrl
aas
dec
push
add
cltd
lahf
movsb
push
aas
and
pop
push
xchg
call
sub
imul
push
xorl
lea
out
sbb
imul
or
in
xor
lcall
push
xor
lock
rorl
jns
rcrl
shlb
and
mov
daa
cld
outsl
add
out
hlt
add
lds
rorb
test
data16
imul
pop
mov
fwait
add
mov
inc
clc
mov
jne
jnp
mov
repnz
mov
cmp
stc
push
mov
cmpsb
popa
mov
pop
inc
aas
dec
dec
inc
in
nop
lods
sub
popf
imul
dec
rcll
push
jno
mov
incl
int
rcl
or
andb
mov
js
flds
pushf
fldenv
jne
pop
mov
mov
inc
dec
mov
mov
add
pop
mov
lahf
clc
insl
cmp
xchg
pop
bound
push
mov
mov
mov
sarb
ficoml
mov
adc
jns
push
mov
mov
xor
push
pop
imul
xor
mov
cmpsl
test
jb
sub
or
ficoml
subl
push
stc
fcoml
cmp
lcall
mov
and
inc
inc
xorl
ss
sarb
mov
call
pop
rcr
test
aaa
ja
or
add
mov
loope
push
stos
pop
pop
outsb
dec
xchg
pushf
mov
adc
dec
sahf
fwait
or
add
daa
movsl
dec
mov
addr16
mov
sbb
rclb
push
addr16
mov
out
bound
mov
lahf
popf
push
daa
imul
or
mov
adc
add
or
imul
pop
fwait
mov
dec
jb
dec
hlt
daa
push
out
xchg
dec
mov
pop
notl
jmp
jns
pop
inc
shll
iret
daa
call
ljmp
test
fwait
push
sbb
and
sbb
movups
aam
inc
jp
adc
pop
je
jmp
push
inc
mov
iret
or
inc
mov
stos
je
lods
outsl
in
push
and
insb
sub
and
mov
fsubs
and
mov
push
test
sbb
inc
add
pop
decb
cmovns
cmpsb
mov
clc
dec
mov
aad
cld
push
dec
push
sub
pop
jae
dec
mov
push
outsl
popl
hlt
rclb
or
leave
out
sub
or
je
mov
push
inc
mov
aad
test
aaa
inc
xor
and
inc
cltd
push
jle
rcll
push
lds
lcall
xchg
jecxz
adc
jne
test
sub
sub
mov
cwtl
shl
adc
mov
out
loop
fstpl
jp
mov
jle
pop
je
xchg
xchg
pop
mov
clc
jne
loopne
mov
xchg
mov
icebp
dec
dec
jle
jns
mov
push
aas
pop
xchg
popa
cmc
mov
dec
pop
dec
xchg
mov
addb
fcoms
xchg
xchg
and
push
adc
cwtl
pop
scas
test
sub
jno
test
mov
outsl
pushf
stc
test
ja
lret
cmp
inc
roll
adc
leave
subl
or
and
ljmp
mull
mov
sahf
mov
rcr
jo
add
cld
iret
push
hlt
mov
mov
jecxz
jmp
fwait
popa
pop
sbb
lret
ljmp
pop
test
rorb
imul
dec
or
lcall
pop
mov
pop
sub
pop
loopne
sbb
adc
lds
sbb
cmpsb
sbb
xchg
xchg
sub
into
mov
lret
pop
ficompl
gs
ss
mov
outsb
rolb
mov
mov
adc
cmc
pop
dec
popa
mov
lea
jo
sti
movsb
aaa
pop
mov
cmp
inc
xchg
or
mov
ficoms
and
fwait
and
dec
xor
push
popa
push
xchg
dec
mov
mov
out
pop
cmc
sbb
aaa
dec
push
pop
je
pop
outsl
fdivs
in
mov
hlt
adc
fadd
or
lds
cld
ss
ja
insl
add
xchg
repnz
inc
repnz
push
inc
mov
jae
dec
jo
aad
xor
adc
xchg
in
fwait
insb
add
insl
aas
push
nop
xor
ret
sbb
add
cmp
pop
shlb
cmpsl
cwtl
sahf
mov
aam
roll
and
scas
mov
push
fnstenv
push
ja
jbe
and
sub
cmp
test
inc
mov
mov
icebp
mov
xor
jmp
aam
sub
cs
pop
push
mov
shll
mov
shrl
mov
xchg
lcall
or
lock
or
jl
aas
jb
movsl
daa
jp
sbb
cltd
add
decb
sbb
sarl
shlb
mov
into
mov
popa
popa
mov
leave
adc
xor
sahf
sahf
mov
mov
xor
fildl
pop
movsl
fcmovb
loopne
inc
sti
sub
pop
cmpsb
call
fcmovnu
sub
imul
xchg
out
and
pop
cmpsb
push
mov
xlat
and
adc
jne
xchg
add
push
adc
and
fwait
subl
cmp
cltd
outsb
jne
mov
std
enter
mov
dec
popl
mov
push
loopne
ss
jle
das
sbb
pop
leave
xor
mov
dec
sbb
mov
loopne
xchg
and
cli
add
mov
inc
push
xchg
shll
sub
icebp
add
xor
push
xchg
sbb
dec
push
mov
fdivrs
ret
xor
push
loopne
fisubs
mov
jge
mov
test
hlt
push
adc
mov
fs
adc
subb
neg
mov
and
popf
push
sub
in
and
popl
es
and
imul
roll
lcall
shrb
mov
hlt
arpl
cld
nop
outsl
jl
cld
or
aaa
sub
lahf
test
inc
sbbl
push
jecxz
adc
scas
xor
fisttpl
hlt
xchg
inc
insl
inc
mov
mov
or
jae
ja
mov
dec
inc
cmp
mov
xchg
ficoml
xor
fidivrl
lods
inc
mov
stos
jp
cltd
mov
popa
jae
xchg
addr16
sbb
pop
aam
xchg
push
rcrl
shl
jo
pop
mov
insb
mov
or
popl
jle
push
jnp
inc
dec
fstps
xchg
fwait
xor
pop
ret
sarb
fwait
int3
inc
testb
xchg
cmpsl
mov
out
scas
lret
or
xchg
push
add
repnz
scas
xchg
xchg
xor
dec
fisubl
test
pop
jb
cmp
add
pop
mov
mov
jb
fwait
aaa
adc
in
inc
lahf
test
mov
js
fwait
and
cwtl
rcr
and
inc
fcompl
repnz
jae
cmpsb
inc
add
imul
dec
push
dec
inc
test
stos
cmp
cld
jne
push
lahf
jge
add
lods
adc
lods
cwtl
mov
or
dec
fwait
sub
inc
push
cmp
push
repnz
out
add
js
sbbb
repnz
icebp
popa
mov
lea
pusha
mov
inc
jmp
sbb
or
xorb
std
push
movsb
shll
mov
sbb
test
add
pop
inc
cmp
mull
sub
mov
add
icebp
jp
dec
jg
xchg
cmp
sub
lds
sbb
stc
pop
lret
and
in
inc
and
xorl
out
dec
jge
sub
addr16
push
fnstsw
sub
push
pop
and
daa
mov
pop
and
push
inc
stos
pop
scas
pop
pop
or
lods
addr16
xchg
sbb
sarl
dec
xor
loope
cwtl
cltd
movsb
adc
andb
test
adc
xor
xor
int3
add
push
dec
shl
xchg
mov
mov
icebp
pop
enter
fisttpll
sti
pop
add
imul
loop
or
sbb
and
inc
xchg
xchg
imul
or
fwait
sbb
sub
adc
push
fdivl
and
shrl
cmp
imul
jmp
add
iret
lcall
sbb
pop
pop
or
lahf
call
push
push
adc
enter
mov
mov
inc
push
int3
add
shlb
adc
push
push
xchg
push
sbb
outsl
arpl
repz
inc
dec
std
fldt
les
orb
aam
sub
mov
sbb
xor
jne
dec
fwait
addr16
popf
fidivs
aaa
addr16
jge
call
in
push
pop
dec
dec
adc
sbb
add
push
mov
cmpsl
lret
adc
test
int3
lret
jl
js
jns
enter
hlt
or
movsl
mov
sarl
popf
shrl
jle
sbb
mov
mov
and
mov
mov
mov
xor
rcll
cltd
mov
lcall
xchg
cltd
pushf
mov
pop
lahf
add
out
imul
jmp
out
outsb
leave
dec
divb
imul
sbb
mov
push
in
sub
jecxz
xor
mov
mov
mulb
fwait
lret
imul
inc
jg
and
pop
mov
sbb
shlb
inc
aaa
int
rol
test
in
sbb
shl
push
xchg
push
or
push
adc
jmp
jne
outsl
int
orb
iret
or
jne
movsl
mov
mov
jg
xlat
xchg
add
dec
mov
push
sub
xadd
fnstcw
aas
shrl
mov
pop
mov
xchg
push
adc
fsubrl
out
xchg
push
or
fs
popf
mov
jb
sub
cwtl
xchg
fwait
addr16
arpl
imul
orb
cs
in
shll
test
lock
cmc
push
aaa
mov
add
mov
out
cmp
cld
dec
aaa
cmc
push
mov
lret
cltd
ficoml
xor
sbb
ja
xchg
mov
push
jl
imul
fwait
in
push
ds
mov
and
lret
loope
fwait
cld
push
and
imul
inc
mov
inc
pop
movsb
jg
enter
es
js
mov
outsb
xchg
push
rolb
adc
lea
xchg
pop
daa
rolb
rolb
icebp
or
jl
xor
into
ja
xchg
adc
jmp
xor
mov
pusha
dec
lahf
sub
nop
out
jns
add
sub
scas
or
lods
cmp
rcr
inc
pop
clc
push
sub
jp
ret
jl
or
lods
bound
pop
test
mov
mov
int
push
insl
int
imul
rorl
icebp
mov
test
sbb
pop
fists
movsb
repnz
mov
rep
and
add
imul
jae
and
sahf
pop
imul
fwait
dec
mov
das
mov
enter
push
shlb
fs
lods
lret
jp
pop
jecxz
pop
rcl
mov
mov
sub
js
xchg
cmpxchg
imul
mov
ja
push
movsl
add
shll
push
xchg
roll
aad
push
sbb
shlb
lods
packuswb
add
pop
push
fs
adc
push
orl
push
and
lahf
xchg
lret
jb
adc
xchg
push
inc
pop
mov
xorb
push
fnstenv
sbb
or
push
mov
lods
negb
lods
xor
mov
sahf
leave
xor
push
enter
mov
outsl
mov
dec
dec
lcall
fwait
cmp
xchg
sub
loope
jo
adc
push
dec
mov
ret
cmpsb
loopne
adc
daa
mov
jge
and
or
int
aas
jmp
test
fadds
dec
or
andl
sbb
ja
test
sarl
aas
xor
cmp
mov
dec
adc
push
jmp
push
ffreep
mov
sti
cmpsb
xchg
les
dec
insl
cmp
addb
movsb
pop
mov
outsl
lods
aad
aas
push
push
daa
xlat
enter
jne
addr16
xchg
sbb
mov
push
and
and
xor
hlt
lock
mov
sbb
mov
in
push
push
mov
in
mov
sbb
add
popa
addr16
adc
push
mov
in
jo
insl
mov
movsl
xchg
push
imul
sbb
fwait
mov
loop
jb
nop
add
jp
sub
or
xchg
and
fistpl
fadds
add
outsl
lahf
jp
inc
sub
mov
push
test
push
pop
nop
mov
jns
xlat
inc
xchg
push
xchg
rcl
mov
clc
enter
push
adc
cs
rcrb
mov
cmpb
mov
dec
mov
sahf
jg
xchg
add
xor
cmp
je
jmp
add
push
popa
pop
mov
sub
push
cmp
mov
jae
push
inc
cltd
mov
add
xlat
ds
aam
cltd
sub
or
mov
adc
mov
aam
mov
push
in
add
aam
mov
leave
mov
push
call
fdivrl
stc
es
filds
jle
f2xm1
push
les
mov
jae
add
jb
test
test
push
sub
sub
pop
cli
xorl
jae
adc
cltd
jle
pusha
lea
cmp
pop
and
pop
int3
roll
xor
ja
and
dec
aas
cld
adc
adc
xchg
mov
jae
daa
imul
imul
xchg
js
fisubrl
inc
iret
sub
push
shlb
ret
fists
lret
lret
pushf
xor
stos
mov
adc
xchg
mov
jge
das
int3
or
test
test
fwait
push
out
roll
xchg
daa
ja
lds
les
shrl
inc
xchg
es
add
je
lahf
xlat
jl
adc
push
xchg
cli
cmc
push
repnz
cld
dec
dec
enter
fs
mov
or
xor
push
je
pop
lds
sbb
inc
js
jecxz
cmc
mov
dec
lahf
push
addr16
testl
jge
lock
jae
lds
dec
imulb
adc
adc
fcoms
mov
or
imul
addr16
dec
push
cmpsl
ficompl
cwtl
into
xchg
adc
jle
stc
dec
lock
xlat
rcrb
out
icebp
jp
mov
push
filds
imul
ret
pop
or
jae
clc
dec
loopne
or
js
mov
sbb
mov
push
sbb
push
mov
out
imulb
lea
jbe
jecxz
inc
movl
test
lds
lahf
cmp
xor
pop
mov
jno
jmp
data16
and
push
mov
pop
adc
xchg
arpl
hlt
adc
lret
sbb
sub
xchg
rorb
sub
inc
xor
mov
push
add
push
xchg
xor
cmp
mov
lods
je
mov
add
aam
sub
xor
mov
mov
pop
ret
fwait
fs
xchg
xchg
int
push
mov
and
inc
ja
fcoms
nop
lock
cmp
sub
jecxz
pop
in
sbb
mov
cmp
pop
mov
push
orb
and
cmc
fiaddl
mov
push
mov
sub
test
fwait
jo
dec
sbb
pop
sub
fisttpll
fwait
xchg
xor
dec
inc
in
mov
aad
hlt
jecxz
sub
sbb
pop
je
pop
ljmp
inc
pop
aas
test
test
testl
ljmp
sbb
out
add
iret
mov
lods
jo
mov
lods
add
inc
fstpl
sbb
dec
aam
shlb
popa
pop
ss
cmpl
push
inc
pop
dec
cld
jmp
xchg
fwait
pop
std
negb
add
dec
inc
sbb
lret
adc
lcall
pushf
fwait
pusha
push
sbb
mov
insl
or
pop
imul
sbb
adc
jg
sub
mov
scas
imul
pop
xchg
cmp
stc
iret
outsl
xor
mov
jno
loope
dec
jb
push
lret
jmp
add
push
jge
dec
cmp
jg
adc
das
lcall
nop
cltd
decb
cmp
cmp
repnz
xor
add
mov
inc
xor
aas
negl
sarb
fldl
jg
call
jne
jg
xor
cmpsl
push
cwtl
aad
clc
pop
push
mov
cmp
adcl
cmp
xor
pushf
push
inc
sbb
lahf
mov
cmp
addr16
ficomps
sbb
inc
lahf
bound
cld
push
nop
jo
ja
js
aaa
xlat
push
add
fs
or
add
mov
std
mov
mov
mov
fdivrs
popa
sbb
inc
aaa
js
add
adc
pop
cmpsl
mov
hlt
ds
arpl
insb
jo
and
sahf
enter
jo
sub
xchg
int
cmc
push
cmp
mov
push
fidivl
test
jns
fwait
fs
test
stos
fiaddl
iret
pushf
js
ret
les
cs
jg
loope
cmp
xchg
pusha
nop
mov
jns
mov
add
cmp
in
push
icebp
hlt
mov
jo
sbb
js
fwait
out
cs
xor
mov
jp
hlt
push
dec
mov
fwait
int3
ja
cmp
stc
mov
xor
data16
adc
fsubr
push
mov
gs
xchg
or
test
jecxz
jmp
mov
divl
inc
sbb
xchg
ja
jecxz
jae
xchg
dec
mov
dec
sbb
sbb
movsb
xchg
adc
mov
fnstenv
pop
mov
mov
xorl
inc
jae
push
pop
not
dec
pusha
and
cmp
lock
mov
in
call
pop
mov
mov
cmpb
repnz
fnstsw
dec
aaa
add
jg
aas
leave
pop
scas
or
jecxz
cmp
test
int3
ja
jge
and
xor
enter
in
aaa
test
cwtl
pop
mov
fimuls
or
jo
xchg
sahf
repnz
rcrb
movsl
mov
mov
rorb
inc
pop
fstps
pusha
imul
dec
jne
lea
dec
or
mov
out
push
adc
adc
sbb
adc
lods
lock
pop
enter
mov
loope
cli
sub
shll
add
pushf
mov
jecxz
flds
mov
mov
lcall
jp
movsb
test
sub
pop
push
cltd
je
addr16
lock
push
lcall
adc
stos
and
jbe
jnp
jle
fidivrl
push
cmp
sbbl
pop
mov
in
rcrl
or
pop
enter
movsl
xor
jmp
and
inc
adcl
sbb
pop
xchg
push
mov
loop
dec
cmove
mov
sub
xor
js
lret
rorl
fwait
leave
insb
add
fiaddl
sub
xchg
lret
out
ljmp
pop
inc
dec
push
dec
push
cmc
pop
shrl
mov
sbb
lcall
adc
or
lods
pop
cmp
es
jno
pop
jp
lret
push
ss
pushf
insl
stos
roll
pop
pop
hlt
jle
and
mov
hlt
lock
aaa
jmp
nop
je
adc
mov
sbb
jp
addr16
or
sahf
push
dec
sub
adc
in
and
pop
sub
cmp
pop
xor
repnz
ja
clc
xchg
cld
rol
dec
cltd
cmpsl
loopne
jg
inc
lods
dec
shlb
sbb
dec
rorb
insl
arpl
xor
sbb
shll
popa
lods
fldenv
adc
push
mov
mov
ljmp
lret
sub
and
xchg
rcl
or
or
push
fwait
rol
pushf
inc
dec
insl
jne
jo
xchg
lds
lahf
or
les
out
es
xchg
xor
stc
or
fmuls
sti
pop
cltd
rcrl
push
mov
xchg
hlt
cwtl
out
lcall
add
fidivl
sbb
movsb
sbb
aad
outsl
pop
dec
clc
push
subb
pop
lock
popf
jns
repnz
mov
ret
imul
fwait
push
in
and
or
stos
fldt
mov
xchg
mov
aaa
cwtl
xchg
mov
imul
mov
scas
jnp
cmp
maskmovq
testl
push
jle
addr16
xchg
jnp
aas
call
adc
xchg
fidivrl
in
mov
repz
shlb
mov
inc
inc
add
fcompl
insb
lea
mov
jno
ror
stc
mov
mov
dec
mov
and
inc
ja
cmc
fdivr
mov
sub
xor
jmp
push
addr16
xchg
adc
sub
daa
xlat
inc
jno
mov
bound
cmpsb
add
cld
jmp
adc
test
mov
jnp
adc
jne
ja
repnz
clc
mov
cwtl
fcoml
pop
dec
adc
xchg
inc
push
dec
xchg
repnz
adc
jle
fisubrs
xchg
or
sub
sub
inc
inc
out
lods
adc
add
je
cmc
stc
rcrl
arpl
bound
push
adc
jg
sbb
xchg
xor
xor
addr16
xor
int3
pop
fwait
sub
sbb
sub
pusha
adc
neg
lods
sub
in
inc
insl
push
out
es
pop
in
outsl
pop
lahf
and
nop
jg
xor
sbb
into
fidivs
sub
sar
add
dec
daa
push
sub
mov
hlt
dec
inc
mov
lcall
push
pop
es
test
and
loopne
fwait
or
push
shll
sub
lcall
mov
ljmp
mov
or
mov
xchg
call
mov
push
jg
add
pop
shr
mov
test
xor
jae
push
repz
lods
jno
iret
xchg
mov
fnstenv
fsubrs
and
jecxz
lret
fwait
sbb
jecxz
or
int
pop
rclb
or
lret
adc
mov
movsl
rcrl
popf
mov
cmp
lea
dec
imul
fmull
hlt
movsl
adc
add
imul
push
adc
mov
jno
mov
or
push
lret
sbbl
lret
cmc
and
mov
mov
lcall
add
test
dec
dec
xchg
push
adc
fldcw
ljmp
pop
and
std
xor
jl
push
add
sub
icebp
adc
pusha
test
dec
mov
dec
push
push
mov
das
push
test
and
into
and
mov
pop
dec
jns
jno
add
xchg
repz
shrl
lea
sbb
or
inc
inc
pop
pushf
lahf
out
sbb
add
mov
imul
icebp
xchg
lea
add
mov
aas
mov
mov
in
and
pop
mov
and
inc
stc
cwtl
adc
jns
pop
lahf
sbb
or
lock
jecxz
clc
xchg
push
repnz
stos
in
sbb
jo
mov
pop
fdivl
xor
mov
imul
add
mov
in
push
pop
ja
int3
mov
imul
dec
push
insl
pop
into
shl
mov
or
cmpsb
mov
cmpb
int
xchg
dec
or
push
xchg
push
mov
xchg
ja
fstpl
jmp
test
cmc
mov
jbe
push
inc
in
insl
popa
pop
aad
dec
fwait
mov
push
icebp
jbe
pop
mov
popf
dec
inc
mov
inc
cld
fldcw
mov
fidivrl
mov
ficoms
or
and
mov
xchg
jg
shll
fdivl
inc
cltd
sti
cmc
mov
mov
dec
cmp
and
mov
fcomip
out
push
fnstenv
es
xor
popf
scas
ja
mov
inc
cwtl
mov
pop
shlb
mov
push
mov
fsubrl
pushf
aaa
pop
fwait
or
aas
cmp
cltd
loope
mov
inc
ja
cmp
mov
mov
xor
loopne
daa
test
xor
pop
shrl
leave
mov
imul
notl
jge
sahf
add
inc
imul
push
pop
add
addr16
lret
mov
mov
mov
daa
std
aad
push
pop
ret
mov
shl
ljmp
and
in
add
ja
pop
lret
repz
jno
aaa
sbbl
rcrb
push
dec
pop
mov
cli
dec
and
push
out
lret
mov
jmp
inc
push
push
inc
jge
sub
xor
inc
int
out
rclb
cmpsb
pushf
push
stos
mov
imul
movb
test
sub
pusha
test
mov
jnp
daa
mov
or
lret
aad
cmp
les
in
cmp
fnstsw
push
dec
adc
adc
scas
or
mov
xor
mov
pop
hlt
mov
gs
jg
inc
add
add
xchg
pop
mov
bts
mov
ret
xchg
andb
xchg
rcrb
into
scas
mov
push
pop
mov
push
lock
mov
jo
mul
jmp
dec
scas
imul
cmc
xor
fisubrl
mov
push
call
fwait
in
nop
mov
nop
push
in
int
or
adc
pusha
adc
push
ljmp
int
nop
jp
pop
testb
or
mov
jecxz
push
dec
inc
movsl
das
cld
sbb
addr16
int3
push
and
cmpsb
adc
adc
sub
add
fnstenv
mov
or
dec
addr16
je
xor
sbb
cwtl
mov
dec
mov
mov
jb
jne
mov
jp
jns
sbb
imul
nop
cltd
pop
adc
in
cmp
stc
dec
mov
enter
rcrl
add
push
lcall
dec
ficomps
push
xchg
fidivrs
mov
imul
aaa
push
shrb
or
cmc
clc
mov
popf
mov
test
adcl
outsb
out
pop
aad
rolb
push
xchg
pop
sbb
jns
mov
sti
jge
js
lahf
rcrl
psrad
jnp
xchg
push
mov
mov
cmp
cli
rcl
sub
jl
cmp
push
dec
inc
outsl
repnz
sbb
lds
xchg
mov
cmp
xor
sar
push
mov
jle
fwait
into
fimuls
add
xchg
addl
xchg
js
jecxz
xchg
or
lock
jno
shlb
popa
mov
dec
dec
rcll
enter
xlat
pop
movsl
addr16
fcomps
rcr
je
aaa
or
push
mov
jmp
mov
xor
mov
mov
aaa
jno
xchg
and
sub
push
inc
mov
xchg
dec
sbb
mov
cld
sub
imul
and
or
jle
lahf
mov
mov
cmc
insb
imul
incb
adc
or
add
nop
push
mov
repnz
xchg
pop
push
xchg
mov
pop
and
imul
stos
jle
jl
inc
xor
pop
jne
or
mov
push
std
test
into
ret
imul
mov
pop
mov
xlat
xor
push
mov
test
mov
loope
pop
test
jp
jle
dec
sbbb
mov
mov
fwait
shlb
adc
in
imul
add
pop
pop
jb
out
aas
pop
xchg
test
test
mov
xor
mov
sub
mov
lock
dec
hlt
subl
push
jg
popf
push
jmp
or
jb
or
inc
test
mov
lds
push
cli
andb
dec
movsl
rol
pop
xchg
cmc
push
add
out
mov
stos
xchg
add
jecxz,pn
cmp
insl
mov
fistps
jmp
xchg
sbb
xchg
add
sahf
jb
or
test
inc
mov
mov
stc
pop
add
push
or
adc
adc
xchg
pusha
dec
shl
jne
mov
leave
add
gs
and
insl
push
es
add
loopne
add
mov
shl
arpl
or
xchg
adc
pop
or
mov
out
dec
psubusw
clc
xor
movlps
jp
push
inc
inc
and
mov
pushf
lcall
lret
dec
mov
sbb
shr
lock
jmp
push
push
stos
mov
push
jmp
dec
adc
mov
enter
mov
int
aam
mov
leave
jmp
push
out
add
sahf
add
dec
mov
out
test
mov
jae
push
shr
mov
fldln2
mov
xchg
cs
movsb
and
fwait
stc
push
sahf
and
imul
outsb
popf
inc
push
out
jecxz
dec
jg
mov
push
add
add
sbb
xchg
cltd
jns
xchg
and
fcomps
mov
in
gs
mov
fwait
xor
pop
test
lahf
pushf
sti
xor
and
leave
test
mov
mov
stos
inc
and
cmp
std
sbb
js
leave
pop
dec
mov
mov
popf
sbb
shll
xor
mov
fwait
jnp
mov
jo
add
repnz
mov
dec
mov
push
mov
jo
xor
mov
daa
mov
inc
adc
pop
ja
fldl
divl
jmp
pop
test
in
stos
adc
mov
sub
mov
leave
shrb
jnp
and
je
test
subb
pop
xor
push
in
pop
cli
rorb
je
and
and
pushf
test
pop
and
jne
cmp
mov
mov
pop
popf
push
popf
cltd
mov
cltd
repnz
and
mov
sahf
sbb
popf
mov
add
sti
pop
mov
roll
mov
into
inc
fidivrl
scas
add
testl
rcrb
inc
inc
adc
jo
pushf
mov
lds
sbb
jle
enter
jg
adc
aaa
cmpb
or
hlt
mov
mov
xor
roll
cmp
dec
sub
cmpsb
pop
dec
les
or
mov
jmp
push
inc
cmpsb
add
xchg
cmc
or
mov
sbb
pop
jnp
mov
jb
mov
xchg
and
stos
aaa
cmpsb
ret
pop
daa
lahf
popf
dec
push
pop
ss
mov
test
fwait
ret
loop
je
pop
mov
shr
lahf
or
in
xchg
hlt
addr16
jnp
mov
shl
sbb
add
fistpll
mov
add
das
pop
sub
lock
arpl
shl
lds
jecxz
aaa
lods
lret
test
mov
fldl
lea
arpl
sti
aam
inc
inc
xor
cwtl
fildll
pop
dec
fidivl
add
in
fwait
cld
adc
jp
add
cmp
push
movsb
scas
aas
push
and
xchg
sti
cli
icebp
xchg
dec
mul
add
inc
pop
sbb
roll
and
lods
inc
daa
mov
mov
lock
lea
sbb
movsb
sarl
daa
push
insl
pop
ret
clc
or
add
or
subb
dec
fwait
cmp
orb
leave
or
adc
dec
dec
sub
or
pop
cs
rol
sbb
insb
or
jecxz
test
jno
loopne
mov
mov
lods
lea
mov
imul
pushf
add
jecxz
xchg
lods
emms
cltd
rcrb
je
pop
cmp
pop
in
adcb
imul
xchg
mov
pusha
push
dec
sbb
cmc
pop
lcall
loop
nop
sbb
mov
ja
adc
jbe
insb
mov
rcrl
pop
and
fwait
cmovo
inc
mov
adc
lret
dec
dec
xchg
add
lahf
mov
xchg
inc
or
push
pop
iret
test
cltd
mov
andb
cld
push
mov
push
pop
cld
push
or
mov
cmpsb
aam
pop
mov
rcrb
lret
iret
ret
in
push
icebp
daa
stos
mov
lods
daa
sub
in
das
std
ljmp
daa
xlat
imul
inc
pop
jae
fcoms
jmp
xor
aam
sbbl
inc
xor
or
and
repnz
xchg
mov
ret
xchg
mov
lods
mov
pop
inc
cmp
push
repz
notl
jmp
in
or
addr16
cmc
rorl
pop
stc
imul
mov
or
fs
scas
loopne
bound
mov
push
jbe
mov
pop
daa
push
imul
hlt
xchg
push
dec
pushf
stc
je
dec
out
push
lcall
ds
cwtl
mov
xchg
lock
outsb
xor
push
lahf
push
cld
fs
and
dec
aaa
popf
scas
aad
jmp
and
mov
jle
sub
lret
test
fwait
addr16
mov
loop
mov
jmp
or
xor
addl
xor
mov
test
rcr
aam
mov
hlt
cmp
addr16
stc
jne
mov
dec
mov
sub
fidivrs
xchg
jb
ja
cltd
mov
lods
rol
xor
inc
dec
sub
icebp
pop
mov
cltd
scas
testl
or
call
pushf
and
dec
fldt
lcall
push
lcall
fucomp
cmp
push
mov
les
xor
aaa
pop
aad
aad
addb
mov
dec
rol
rclb
pusha
dec
clc
push
and
in
mov
fnsave
pop
aaa
lods
inc
mov
call
mov
pop
add
add
gs
clc
sbbb
add
sub
ja
add
adcb
into
fwait
push
fisubs
lock
mov
enter
push
aaa
out
sub
add
dec
pop
pop
mov
mov
sbb
pusha
lods
push
into
pop
arpl
call
in
and
std
sbb
push
mov
add
cltd
cmpsl
enter
xchg
mov
jns
pop
mov
sbb
rep
and
stos
scas
addr16
cmp
stc
xchg
mov
and
jecxz
sahf
sti
fwait
adc
sti
wbinvd
pop
sbb
or
orl
mov
mov
fsts
mov
call
mov
pop
mov
add
stc
jne
es
int
adc
cmp
xchg
cmp
test
dec
jae
xchg
outsl
cmp
into
sahf
pop
mov
add
jbe
fwait
les
pop
lds
sub
xchg
lods
arpl
adc
rcrl
push
nop
pop
pop
xchg
sahf
hlt
data16
stc
sbb
dec
pop
push
push
xchg
js
xlat
enter
pop
in
rorb
mov
iret
popa
mov
aaa
lret
push
movsb
push
das
sub
inc
mov
adcl
push
mov
mov
pop
andl
xchg
sbb
popf
enter
mov
ljmp
pop
popf
or
fcoml
jecxz
js
subb
addb
test
aas
or
repnz
mov
mov
adc
pop
adc
mov
mov
sahf
repnz
orb
add
cmpsb
dec
aaa
add
inc
and
addr16
jge
pop
mov
movsl
test
pushf
test
and
push
movsl
jb
sbbb
stos
mov
adc
mov
jnp
test
pop
jecxz
dec
movsl
or
pop
lret
loopne
ja
mov
imul
movl
adc
cmpsl
add
adc
dec
fisubl
jbe
cltd
popa
and
outsl
mov
pop
pop
shl
call
mov
dec
mov
test
js
fwait
xor
mov
jmp
fstl
js
outsb
inc
push
es
sbb
xchg
mov
addr16
push
jae
jmp
inc
inc
dec
pop
sti
mov
pushf
stos
leave
rorb
xchg
mov
test
movsl
jne
mov
push
outsb
inc
push
push
pop
push
loope
in
adc
push
adc
bnd
fldcw
inc
sub
ret
aad
pusha
and
dec
imul
fidivl
mov
or
dec
dec
inc
sbb
subl
pushf
insl
shlb
pop
jp
jbe
xchg
nop
adc
mov
add
in
mov
imul
xor
add
mov
pop
bound
gs
mov
test
xor
lods
and
xchg
mov
or
pushf
push
xor
loop
in
sbb
pop
jge
lds
pusha
fsubrl
mov
jns
adc
shr
js
shll
mov
add
daa
cmpsb
dec
adcb
xor
shrb
int3
aam
pop
in
push
ficoml
aas
data16
push
jge
xchg
stos
add
cmp
cmp
imul
add
lea
lahf
out
movb
notl
mov
addl
lock
pop
adcl
enter
scas
xchg
pop
inc
fsubr
inc
xor
aad
repz
pushf
into
enter
mov
pop
mov
std
pop
jecxz
and
push
in
mov
dec
sbb
adc
pop
adc
and
rolb
dec
or
inc
imul
adcb
out
mov
addl
add
fsubs
pop
cmp
test
je
nop
test
adc
pop
sub
mov
scas
aas
test
inc
fisubs
push
insb
cmc
push
inc
out
test
sub
jle
sahf
mov
arpl
or
daa
sbb
mov
xchg
imul
dec
mov
enter
daa
pop
mov
jae
ja
inc
mov
mov
sub
fmuls
enter
adc
add
imul
hlt
add
addr16
jo
pop
mov
arpl
popa
rolb
stos
pushf
jns
pop
add
movsb
mov
inc
bound
fstpl
xlat
xchg
daa
test
call
xchg
lahf
inc
xor
inc
fisubrs
jmp
xchg
mov
jecxz
addr16
in
xchg
mov
outsb
and
sbb
mov
adcb
fdivrl
sti
addl
push
std
sbb
sub
mov
ret
push
mov
dec
jmp
xor
scas
sbb
aaa
xchg
cmc
dec
inc
imul
jle
add
pop
imul
mov
out
aaa
mov
jmp
cld
xchg
dec
xorl
sub
mov
fs
in
popf
fldenv
and
sbb
lock
mov
mov
pop
cmpsl
fiadds
mov
test
andl
roll
pop
sar
out
xchg
add
and
cmc
adc
pushf
into
dec
test
imul
rorb
jg
mov
push
icebp
xchg
and
out
insb
orb
ja
daa
dec
xchg
adc
pop
pop
loopne
lock
bswap
enter
roll
rcr
push
mov
loop
cmp
ss
pop
ficoms
mov
push
pushf
mov
incb
in
stos
sbb
test
cwtl
repnz
iret
sbb
cmp
inc
dec
sbb
xor
ds
cltd
dec
mov
xor
push
adc
fwait
pop
xchg
cmc
add
xchg
mov
jns
mov
stc
mov
push
jl
and
adcl
dec
mov
xorl
adc
repnz
adc
das
aas
mov
mov
fwait
mov
mov
fldt
cmp
sbb
fcompl
test
push
sub
insl
cmp
mov
fildll
mov
sbb
or
loop
out
and
jo
insl
cli
movsb
ds
xchg
and
repz
sub
pop
icebp
mov
inc
inc
cmp
cwtl
leave
adc
lods
aas
adc
aad
cmpsb
js
mov
stos
mov
or
outsl
enter
cmp
push
mov
es
fcomps
loopne
cmp
and
ja
ja
in
stc
mov
inc
dec
pop
pop
subl
fiadds
push
push
mov
lcall
xchg
push
or
mov
in
jns
cs
mov
jmp
fsubl
mov
pop
dec
mov
dec
sub
stc
int3
dec
push
mov
xor
lret
fwait
daa
jmp
fwait
je
inc
mov
dec
hlt
jbe
in
pushf
mov
imul
mov
sbb
jmp
lock
mov
lcall
fwait
sbb
mov
js
sbb
push
lods
lcall
fdivl
cmp
repnz
pop
out
mov
mov
cltd
mov
decb
test
jge
and
fcoms
hlt
xchg
dec
and
lods
mov
fidivs
lcall
inc
mov
sbb
cli
sahf
sbb
sbb
call
pop
xchg
push
lods
aad
das
mov
mov
lret
test
ficompl
incb
sub
imul
xchg
pusha
add
xor
fldenv
lret
sub
sub
addr16
jno
mov
lds
cmpsl
xchg
pop
out
dec
lcall
pop
imul
sbb
xchg
xchg
std
test
out
add
dec
arpl
lds
xchg
cltd
subb
dec
fwait
cmp
jle
loope
loopne
das
xor
sbb
mov
xchg
lret
xchg
pushf
cmc
insb
into
dec
inc
ljmp
sbb
jge
cmp
mov
rcll
mov
imul
and
subb
fs
out
lret
fwait
lds
pop
imul
leave
jo
ja
inc
dec
es
mov
ss
mov
test
mov
mov
in
movsl
or
iret
pop
enter
cmc
adc
dec
and
lcall
jno
sub
fcompl
or
adc
xlat
adcb
pop
dec
jns
mov
movl
shlb
dec
sub
mov
mov
nop
lods
shl
mov
push
movsl
add
imul
add
cmp
dec
dec
cmpsb
adc
push
icebp
pop
insb
movsl
jecxz
aaa
cmpsl
lock
js
jae
xlat
and
add
nop
fwait
insb
imul
and
sub
pop
dec
pop
mov
xchg
mov
imul
lret
mov
sub
xchg
mov
imul
lahf
xor
and
hlt
xchg
cmp
scas
gs
dec
lea
mov
incl
fiadds
push
xchg
pusha
and
mov
shl
mov
push
int3
loopne
loop
fistpll
ret
sbb
xor
sub
sbb
pop
jg
sub
mov
mov
aaa
mov
loope
jae
cmpsb
and
xor
imul
mov
mov
lret
repz
das
cmpsb
dec
cmpsl
or
loop
push
aam
test
out
mov
pop
push
icebp
adc
inc
add
out
daa
ja
roll
sub
aam
jnp
cmc
popa
repnz
sbb
mov
adc
mov
icebp
push
mov
and
lahf
xor
add
in
pop
or
test
xchg
pop
icebp
pop
or
loopne
jg
mov
outsb
ja
bound
cmp
pop
out
orb
shlb
ja
int3
mov
imul
stos
arpl
pop
in
ret
lds
pop
and
cmp
inc
and
mov
fs
add
enter
mov
push
xchg
add
movsb
add
inc
dec
inc
sbb
mov
jl
push
xchg
fimuls
adc
sub
adc
iret
lds
jecxz
push
mov
in
lock
xor
inc
shrl
adc
xor
cmp
pop
pop
cwtl
imul
sub
cmc
das
daa
cmc
out
repz
dec
pop
je
mov
jg
adcb
mov
or
imul
jns
push
xchg
pop
mov
jbe
outsb
jmp
lods
push
test
dec
les
fidivs
jmp
jb
imul
jo
push
pop
xchg
rcrl
xor
lods
rorb
xchg
loop
mov
xlat
inc
pop
inc
jle
lret
xchg
inc
push
xor
or
faddl
add
push
cmp
incl
ds
inc
mov
test
fsubrs
pop
mov
outsl
stc
rorb
mov
addr16
dec
lds
out
sub
cmc
adc
fiaddl
nop
fwait
lahf
cmp
fimull
ljmp
lods
subb
dec
fwait
test
pop
mov
jnp
sbb
mov
call
lret
fwait
sub
in
mov
mov
xor
sub
push
xchg
adc
xchg
pop
addr16
lahf
pushf
inc
pusha
cmpsb
loopne
popa
rorl
inc
jecxz
test
add
insb
sti
mov
ja
pop
das
movsl
in
jno
xchg
sbb
adc
push
mov
lcall
rcr
push
repnz
sbb
push
push
pop
jne
inc
and
jp
sub
mov
inc
shll
mov
imul
jae
rorl
mov
adc
inc
add
ja
sbb
dec
gs
aad
and
dec
hlt
lea
cmp
jg
push
mov
add
cld
sbb
fistpl
aam
hlt
or
mov
sbb
enter
mov
pop
imul
mov
rcll
mov
lahf
call
aas
mov
mov
xchg
icebp
je
jns
push
push
ja
or
filds
fcomps
in
jo
xor
addr16
mov
leave
sbb
dec
dec
mov
in
lods
lcall
aad
push
mov
enter
xlat
out
xor
cmc
int3
sahf
xchg
filds
loopne
das
pop
jg
sbb
test
sub
lea
cmc
imul
xor
call
jb
pushf
scas
insl
repz
xor
dec
out
stos
xchg
jbe
push
out
in
jecxz
out
xchg
xchg
xchg
inc
xor
xor
mov
dec
inc
xchg
xchg
dec
and
fdivp
cmp
add
jg
sbb
or
jecxz
jge
lret
push
adc
roll
push
out
cli
mov
push
xchg
and
sub
xchg
push
scas
mov
jo
xchg
pusha
aad
movsl
jb
sbb
test
sub
mov
mov
or
iret
out
adc
xchg
push
mov
jl
mov
out
or
mov
push
iret
pop
jb
aaa
push
clc
imul
ret
int3
sub
add
dec
jp
ficoml
inc
mov
inc
push
jecxz
jmp
fs
mov
jne
insl
lahf
mov
idivl
adcl
inc
or
imul
int3
dec
fwait
mov
mov
sbb
sub
mov
mov
aaa
push
jnp
aaa
xchg
push
mov
push
call
sbb
les
sarb
lahf
mov
test
test
lcall
add
sahf
cmpl
decl
or
and
add
or
imul
mov
hlt
push
sub
lret
insl
pop
cmpsl
pop
test
sub
adc
add
lahf
jg
lock
jecxz
ret
bound
movsb
mov
sbb
inc
test
add
xor
les
xchg
sub
mov
cmp
add
addr16
iret
fsubrl
call
cli
or
mov
or
sahf
in
jecxz
xor
sbb
ss
mov
and
mov
or
pop
mov
test
lods
jmp
push
xor
adc
mov
cmp
mov
inc
in
jbe
rcll
dec
sbb
arpl
mov
mov
xchg
push
fwait
push
mov
push
lds
xor
outsb
lods
push
sbb
mov
mov
pop
shlb
repnz
pop
adc
out
adc
xchg
cltd
dec
hlt
mov
aad
fiaddl
inc
xchg
inc
jae
push
dec
daa
stos
ja
dec
sbb
sbbl
gs
hlt
cld
scas
push
push
int3
adc
sbbb
xlat
shll
imul
sub
and
xchg
add
fidivrs
out
mov
rorb
sub
scas
jae
push
pushf
sbb
mov
push
xchg
ret
lods
addr16
dec
push
rcrl
and
sahf
aas
mov
iret
mov
pushl
mov
out
push
mulb
ja
pushf
in
pop
dec
stc
jo
and
sbb
push
adc
jae
mov
pop
mov
addr16
push
sub
es
scas
aam
lods
jns
dec
pop
imul
clc
push
inc
or
add
pop
out
jle
mov
ret
mov
cltd
call
pop
cwtl
pop
jmp
cmpsl
addr16
mov
mov
dec
or
test
aas
or
test
icebp
inc
push
push
sahf
xchg
mov
cmp
nop
test
stos
xorl
sbb
lret
dec
mov
push
outsb
jae
push
sub
fwait
inc
es
or
in
sub
ja
ljmp
jno
lods
dec
jge
mov
adc
push
mov
push
inc
sbb
jno
jno
dec
mov
dec
sbb
sbb
cld
int3
cmpsl
cmpsl
out
lock
jo
andl
out
sbb
stc
inc
outsl
mov
mov
stc
sti
fldt
jmp
cld
jge
ficompl
push
push
cmpsl
add
movsl
popa
dec
sbb
push
or
inc
dec
or
mov
xchg
dec
lahf
xor
lods
push
sbb
or
sub
cmp
aaa
popa
mov
pop
add
dec
xchg
faddp
inc
ja
fsubl
xchg
fidivrs
mov
out
jp
test
lcall
mov
aas
cmc
push
les
aaa
popf
xchg
scas
movsl
pop
lods
cmp
fwait
mov
iret
das
arpl
stc
push
sahf
mov
repz
push
or
xorl
inc
cmp
fcoml
sbb
pop
xchg
in
inc
pushf
jno
rolb
push
xchg
and
cmp
faddl
xchg
addl
or
mov
sbb
in
mov
or
les
lods
ror
jnp
mov
mov
fcoml
pop
cmp
in
pop
loope
fisttpl
inc
imul
adcl
sub
mov
dec
divl
stc
inc
sahf
xchg
cmpsb
jl
jle
fcmovbe
xor
cld
sub
jnp
in
mov
sbb
repnz
out
cmp
ret
verw
dec
mov
mov
or
shll
insb
cltd
sub
scas
stc
adc
mov
orb
xlat
mov
push
pop
stos
adc
lock
mov
ljmp
and
xchg
aas
push
dec
and
sub
push
aad
and
sbb
lock
mov
call
push
pop
pop
shlb
subb
dec
arpl
ja
pop
inc
or
and
icebp
pop
ja
lds
pusha
lcall
push
loopne
add
adc
xor
push
inc
pop
mov
pop
xchg
and
xchg
xlat
in
cmp
cwtl
out
imul
mov
out
scas
aam
mov
outsl
and
mov
loopne
lahf
hlt
arpl
cwtl
pushf
adc
sub
adc
dec
jmp
aad
sbb
mov
inc
test
fcoml
dec
negl
int3
not
adc
stc
jae
daa
mov
pop
push
xchg
xchg
sbb
jle
mov
cmp
sbb
inc
xchg
sbb
inc
mov
sarb
jle
add
cli
jg
rolb
jecxz
int3
or
aam
mov
xor
dec
enter
pushf
lock
lret
rcr
dec
inc
dec
and
movsl
and
clc
addr16
negl
xchg
xor
jae
jbe
pushf
loopne
inc
push
nop
pslld
mov
es
filds
outsb
push
push
mov
pop
popf
adc
mov
lds
in
adc
repz
pop
push
outsl
pop
repnz
imul
nop
push
fwait
mov
stos
ret
outsb
push
fildl
mov
aas
icebp
lahf
incb
inc
mov
and
adc
xor
and
test
xor
mov
cmp
mov
push
mov
lret
lods
int
repz
mov
xchg
leave
call
sub
mov
xchg
pop
stc
cmp
jg
and
mov
mov
daa
sub
sbb
sub
add
adc
jne
popf
push
es
in
jno
pop
outsl
push
popf
movl
or
adc
and
push
ljmp
mov
inc
orl
insb
lcall
test
jg
fwait
les
aas
sbb
xor
sub
jg
add
xorl
cmp
mov
inc
daa
push
adc
std
inc
sbb
fldcw
cmpsl
add
pop
jl
test
cltd
xor
mov
inc
nop
cwtl
xlat
jne
pop
out
push
dec
scas
or
cltd
mov
dec
sub
ja
jns
sbb
jecxz
pushf
sbb
mov
je
cmpb
xor
aas
cmpsl
fwait
shl
or
xor
loopne
sbb
cmc
mov
dec
mov
bound
fsubl
push
cltd
jno
pop
or
adc
pop
addr16
inc
es
arpl
test
pop
scas
mov
cmp
imul
outsl
sbb
xor
int
repnz
fs
icebp
mov
rcr
xchg
dec
xchg
mov
jl
daa
xchg
xchg
mov
mov
iret
add
xor
ret
test
pusha
fidivrs
inc
lea
adc
push
mov
ret
xor
or
inc
dec
push
mov
push
lret
faddp
jne
dec
fsave
mov
mov
pop
push
fdivrl
lahf
xchg
mov
pop
dec
xchg
add
and
out
imul
lcall
mov
sbb
mov
popl
push
mov
mov
lea
fwait
lret
sub
pop
mov
fwait
call
pop
pushf
jp
out
cld
xor
popf
arpl
inc
aaa
lock
fs
mov
mov
arpl
cld
xor
fwait
scas
imul
push
pop
inc
mov
dec
cmp
fsubr
xor
testb
cmp
mov
cmpsl
out
iret
imul
icebp
or
add
lahf
shll
cmp
rcrb
outsb
imul
ja
in
enter
add
jle
mov
mov
jp
bound
pop
xor
bound
cmpsl
pop
cltd
sahf
pop
sbb
std
pop
pushf
sar
call
repz
push
mov
outsl
jmp
mov
jp
adc
aaa
std
pop
jl
jbe
push
pop
dec
xadd
add
test
and
iret
adc
lock
sub
iret
cmp
sbb
leave
adc
push
mov
lcall
mov
cs
outsl
rolb
jno
fnstenv
imul
mov
cltd
or
or
stc
jl
adc
pop
pop
jno
mov
mov
call
mov
jae
test
lcall
push
cld
or
adc
and
cmpl
push
jp
cmp
mov
adc
in
mov
rcrl
cli
ja
incb
clc
sahf
lahf
mov
gs
cmp
ja
cmp
pushf
data16
imul
push
popl
pop
test
jo
inc
and
in
sbb
jg
les
mov
jnp
ret
cld
sub
imul
sar
dec
pop
cmp
lret
popf
test
xchg
loope
ficompl
push
dec
sub
xor
rorl
xor
pop
test
push
shr
rep
adc
add
jo
clts
dec
mov
cwtl
sub
loopne
loop
add
pop
in
xor
cmpsl
out
fmull
xor
inc
scas
dec
inc
addr16
lahf
stos
dec
mov
xchg
test
cwtl
add
popf
jnp
cmp
sub
adc
ret
shl
mov
movsb
jne
ja
ficoms
out
lea
xor
ja
and
jno
cmp
xchg
lods
sbb
lods
or
cmpsl
addr16
and
mov
cmp
dec
add
mov
push
push
jg
aas
mov
xor
add
push
les
icebp
adc
leave
pop
xchg
cmp
mov
xor
pop
dec
test
dec
lods
mov
push
pop
adcb
clc
addl
scas
fdivrl
insl
sahf
cld
jecxz
cmp
shll
sbb
ss
cltd
mov
daa
cwtl
dec
xchg
ljmp
xchg
repnz
cmpsl
rorl
add
inc
out
push
lahf
and
outsb
and
mov
cltd
or
cmp
sahf
cmc
popa
mov
insb
dec
jb
or
es
mov
call
jmp
and
lods
xor
xchg
addl
loop
fwait
lds
hlt
lods
in
xchg
xchg
mov
leave
mov
xchg
ljmp
add
dec
mov
xor
push
sub
movntq
and
subb
jle
and
adc
cmpb
cs
mov
lock
push
shll
jp
std
adcl
pop
push
lret
lret
lea
jmp
sub
add
cltd
imul
fdivs
sbb
or
inc
inc
in
sbb
lds
in
pop
fiaddl
or
inc
loopne
jae
addr16
ret
ret
sahf
imul
or
mov
fsubl
or
rcll
cltd
popf
add
nop
fwait
cmpsl
pop
jecxz
cmp
orl
ja
pop
xor
ss
out
and
aas
sbb
mov
mov
fldcw
pop
lahf
sbb
jo
fisubrl
sbb
push
inc
pop
add
push
mov
jns
int
lea
les
clc
xlat
mov
stos
jo
xor
mov
push
inc
push
jg
and
arpl
pop
cmp
sbb
pop
inc
test
je
push
mov
mov
mov
test
and
sbb
test
and
lock
cmp
dec
push
enter
fs
jp
inc
xchg
gs
insb
mov
aad
std
sub
jge
jmp
fwait
push
or
sub
mul
lahf
shlb
pusha
in
imul
jp
sub
mov
lret
and
hlt
lds
addr16
pushf
cmp
jge
cmp
cmp
sbb
push
xchg
pop
pusha
and
rcll
mov
and
repz
jne
jle
addr16
add
sti
sub
out
fildl
or
inc
in
or
outsb
and
cmp
pusha
fisttpl
push
xor
mov
loopne
add
addr16
clc
inc
sub
xlat
ret
hlt
xchg
inc
push
xchg
shrb
lods
sub
lret
lcall
jb
sbb
jne
mov
or
push
mov
mov
or
jae
inc
cld
and
pop
popa
std
loope
add
push
cwtl
cltd
scas
lcall
xchg
sub
mov
xlat
mov
sub
mov
mov
xor
outsb
cmpsb
cli
xchg
fisubl
push
add
lds
int
jl
pop
dec
lock
jl
mov
pop
xchg
mov
mov
std
imulb
xor
mov
cmp
add
stc
sbb
test
jnp
cs
out
stos
mov
dec
xchg
xor
cltd
mov
repz
and
dec
scas
aad
daa
in
stos
adc
adc
cmp
lods
jne
jnp
popa
mov
or
mov
mov
loop
imul
mov
ret
fs
or
orb
mov
mov
dec
cmp
repnz
cs
mov
xchg
rep
testl
je
mov
ficomps
jno
xorl
dec
out
push
push
pop
and
push
adc
sarl
imull
or
fists
mov
jle
movsb
xchg
fsubr
adc
test
popf
addr16
xchg
movb
mov
sub
in
mov
push
imul
xor
xchg
xchg
cld
and
call
addl
pop
push
insb
mov
or
fyl2xp1
xchg
xor
imul
jns
or
fucomp
stos
cmpb
lds
hlt
pop
sub
movb
out
ja
xchg
mov
scas
and
xchg
inc
mov
cltd
fwait
rol
insl
insb
fidivl
ja
xchg
movsb
xchg
das
stos
mov
push
std
mov
and
icebp
in
xlat
pusha
pop
addr16
xchg
and
xchg
fsubrs
addr16
inc
inc
das
sub
pop
or
push
jmp
push
pop
mov
lea
xchg
test
jbe
jecxz
shr
mov
mov
in
adc
push
or
dec
clc
not
dec
out
mov
mov
sub
push
sbb
pushf
sbb
xchg
pop
dec
shll
jmp
fistpll
xchg
scas
cmp
cltd
mov
mov
jno
lret
mov
in
pushf
pop
adc
sahf
adc
fwait
bound
incl
daa
and
cmpsl
stc
jg
pop
jmp
inc
imul
fdivrs
lahf
fsubrl
sub
fidivl
xor
xchg
fimull
ss
dec
fwait
dec
mov
pop
add
mov
dec
movsl
movsb
imul
dec
lcall
dec
in
jae
outsl
mov
mov
mov
pop
sub
dec
jae
lock
dec
cs
adc
xor
mov
sub
jp
xorb
aam
aas
push
test
dec
and
js
xchg
icebp
sbb
jmp
mov
insb
loopne
xor
mov
dec
jl
mov
decb
test
inc
pop
loopne
out
fmuls
cmpsb
int3
or
sub
cmp
pop
cwtl
lods
jb
insb
pushf
fidivrs
jb
add
test
imul
cmp
aas
fisubrs
mov
aam
xor
mov
ficoml
out
push
outsb
xor
faddl
pop
mov
and
sbb
fwait
cli
pushf
popa
aaa
adc
rcl
lcall
mov
sahf
mov
pop
cmp
imul
cmpl
test
adc
add
imul
push
gs
jmp
bound
jecxz
clc
ret
jge
pop
jns
jecxz
mov
enter
test
hlt
lcall
aaa
shrb
in
mov
or
hlt
imul
lock
cmpsb
out
pop
movsb
rorb
ja
addr16
push
mov
shrl
inc
dec
adc
das
mov
push
daa
aaa
ja
sbb
jnp
arpl
int
mov
frstor
cmp
xor
inc
orl
repnz
add
out
cmc
sbb
scas
push
jge
cmp
or
aam
mov
lret
pop
imul
clc
xchg
xor
fwait
rorl
lea
adc
shlb
lea
add
loope
imul
add
fimull
sahf
divl
das
or
stos
aas
aaa
outsb
push
mov
cmpsl
xor
icebp
aas
push
xchg
cs
xorl
mov
mov
stos
mov
xor
ss
push
movsl
mov
ljmp
inc
in
mov
dec
ret
dec
mov
lahf
loope
cmp
sub
sub
test
mov
adc
nop
fucom
jne
pop
jb
dec
xchg
hlt
fwait
sbb
xor
mov
pop
popf
sbb
cltd
and
inc
sarb
lods
push
imul
dec
out
inc
cmpsl
jns
lds
outsl
mov
aad
pop
mov
sbb
dec
mov
sbb
xchg
pop
rolb
icebp
out
repz
lcall
push
xlat
cmp
xchg
mov
xchg
mov
xchg
test
pop
ret
lock
clc
mov
data16
pop
jmp
fsubl
fcoms
scas
dec
ret
pop
imul
enter
imul
jecxz
mov
pop
dec
lds
in
jnp
mov
xor
mov
dec
mov
push
popf
test
pop
les
lods
lds
cltd
lahf
and
adc
cmp
xchg
cwtl
cltd
scas
pop
test
mov
cmc
add
mov
shlb
fldlg2
sbb
out
movsl
sub
adcl
popa
gs
xchg
push
es
jmp
push
out
or
pop
rcll
cmc
cltd
loope
imul
jnp
push
ja
js
leave
inc
sbb
int
cmp
xor
sbb
mov
imul
sub
mov
lcall
mov
gs
push
xchg
or
dec
pushf
xchg
into
rcrb
or
dec
cmp
lahf
pop
cmc
mov
stos
push
inc
xchg
and
or
sub
shrb
or
xchg
pusha
sbb
mov
push
sbb
movb
jmp
arpl
frstor
int
mov
mov
mov
xchg
or
and
sub
imul
lea
pop
sub
xor
and
outsb
mov
lcall
pusha
xchg
dec
pop
sbb
scas
add
push
inc
lcall
jmp
das
push
sub
adc
push
fmuls
xchg
aas
lods
jmp
adc
mov
cwtl
dec
add
ja
fsubl
imul
stc
test
aas
adc
sbb
fwait
addr16
repnz
stc
or
xchg
add
mov
jmp
jmp
mov
out
xchg
out
adc
ja
lret
sbb
cmp
mov
test
mov
insl
pop
xor
jbe
out
scas
das
dec
outsl
xchg
pop
je
pop
aaa
mov
imul
adc
pop
pop
mov
push
dec
sub
aaa
push
fiaddl
lret
daa
pop
pop
mov
cltd
fsubrl
lret
scas
jbe
icebp
xorb
push
mov
outsb
scas
ret
jne
adc
popf
fwait
jno
inc
adc
imul
and
stc
jp
mov
mov
pushf
lea
test
or
rclb
js
scas
shr
stc
test
sarb
inc
movsb
inc
imul
jle
movsb
je
dec
out
mov
mov
mov
fwait
sti
cltd
sarl
test
mov
and
xchg
std
push
imul
pop
mov
mov
adc
rorl
add
push
int
daa
mov
jl
std
push
xor
shl
imul
sub
loopne
test
dec
pushf
les
jmp
lcall
mov
xlat
xchg
nop
xchg
rcr
popf
ror
test
mov
mov
in
jl
pop
ds
stos
aas
sbb
inc
sbb
push
xchg
xchg
sub
add
xchg
push
jl
outsb
dec
rolb
aad
xor
or
jae
sbb
lock
push
call
lods
xchg
sub
insb
mov
stc
pop
dec
jle
js
push
or
into
xor
aad
stc
lret
loop
add
and
xchg
fwait
jae
movsl
adc
push
and
sub
push
add
push
mov
push
imul
pushf
inc
add
push
xchg
sahf
add
xchg
cmp
bound
cmp
jg
repz
subl
push
fwait
cmc
inc
push
xchg
or
mulps
add
or
dec
ds
dec
push
xchg
xchg
lcall
out
pop
jg
inc
mov
mov
cmpl
loopne
pop
loope
fsubrs
cmpsb
mov
ds
add
into
pop
pusha
out
shll
inc
ljmp
jg
call
subl
mov
add
pop
xor
into
jns
xchg
adc
imul
sbb
lret
orl
not
jle
scas
shll
push
cwtl
gs
fwait
repnz
pop
adc
adc
fwait
movsb
inc
or
out
push
xor
negl
dec
hlt
test
lds
lahf
mov
daa
xchg
sbb
push
xorl
sub
in
iret
mov
test
push
icebp
cltd
mov
aam
fsubrs
outsl
vmwrite
add
mov
adc
stos
daa
aaa
outsl
pop
xorl
out
icebp
dec
fs
sub
sub
ffree
jle
push
loop
insl
arpl
mov
jge
inc
push
sub
loope
mov
cmp
push
shlb
dec
inc
lcall
jae
in
fsub
inc
lds
or
je
cwtl
sub
add
das
lahf
loopne
stos
push
iret
insl
in
hlt
lods
cmpsl
mov
mov
orb
mov
daa
mov
loope
mov
adc
lea
dec
insl
jmp
shll
add
imul
fcom
sahf
les
pushf
fwait
inc
fstpt
out
shll
enter
fwait
lret
mov
pop
hlt
inc
jp
std
imul
inc
xor
mov
xor
add
repz
xor
ds
xchg
pusha
mov
mov
xchg
rolb
lret
xchg
pop
repz
and
add
in
pushf
int
into
hlt
cmc
xchg
mov
leave
jmp
or
fisubl
lsl
mov
inc
cmp
daa
mov
repz
mov
or
sbb
or
mov
lret
negl
dec
fisubl
cs
fldenv
pop
mov
imul
insb
pop
fsts
push
test
mov
lock
push
cmp
insl
push
popa
pop
cmp
pushf
and
jecxz
jmp
test
mov
imul
lahf
push
fwait
inc
mov
pop
repz
ja
js
daa
iret
mov
mov
jo
fstps
sbb
lret
out
dec
push
xchg
ret
fistpll
mov
and
test
jbe
rolb
cmp
xchg
lods
jbe
add
cmp
and
out
jne
adc
add
dec
out
clc
xchg
fldenv
adc
repz
out
inc
sub
inc
mov
mov
mov
push
mov
cmpsb
pusha
xchg
arpl
inc
mov
add
test
cltd
lods
inc
in
stos
jecxz
arpl
fucompp
fwait
cli
cmp
mov
cmp
shr
daa
pop
stc
xchg
dec
out
test
cmpsl
mov
repz
lods
adc
push
mov
movsb
fmuls
pop
loope
rorl
daa
mov
clc
fildll
sub
pop
xchg
stos
mov
fsubrl
stc
call
aaa
dec
inc
mov
push
in
jns
je
mov
mov
add
dec
nop
pop
or
je
subb
xlat
idivl
lahf
orl
test
and
pop
push
adc
jp
shlb
adc
and
xor
pop
fwait
jecxz
shr
fcmovu
cmp
hlt
mov
mov
popa
sbb
xor
cmpsb
test
sub
bound
fwait
mov
mov
rcl
loope
out
out
adc
sbb
les
xor
je
into
push
aad
add
stc
lahf
insl
aaa
ss
and
adc
push
test
test
xor
ja
mov
in
out
jmp
rclb
and
popa
adcl
jno
lret
shll
dec
out
out
xor
out
xchg
xchg
jg
xchg
pop
nop
cmc
ja
stc
jo
dec
fmuls
cli
into
in
and
sbb
pop
push
insl
cmpl
or
pop
and
jo
mov
and
xchg
test
cwtl
jg
sbb
push
adc
mov
or
in
mov
imul
sub
and
jg
je
lock
scas
daa
ret
ret
or
and
fs
inc
popf
push
mov
xor
in
sub
mov
jmp
hlt
cltd
int
push
pop
pusha
imul
enter
or
xlat
inc
push
movsb
loopne
stos
rclb
sarl
fstpl
push
in
adc
mov
dec
jg
fwait
inc
hlt
clc
ja
jbe
or
test
sub
inc
stos
stc
mov
lods
jg
push
jecxz
dec
and
add
andb
push
test
sbb
pop
dec
dec
sti
rorw
cmp
cmp
imul
add
sub
mov
mov
mov
cmpsb
ljmp
xor
push
in
repz
movsb
inc
and
enter
sar
mov
scas
sahf
pop
pop
adc
or
mov
sub
loope
sar
pop
lea
shll
jno
pop
movb
cld
je
lock
fs
int3
hlt
or
std
xorb
pop
fisubrs
lret
addr16
xor
jecxz
dec
xchg
imul
inc
add
std
mov
mov
mov
mov
rolb
out
sbb
jp
inc
pop
test
stc
repz
testl
jcxz
push
and
xor
pushf
push
pop
out
adc
pop
aas
stc
popl
mov
add
jns
cmp
or
pop
lea
adc
lock
sub
popf
stc
pop
jno
movsb
mov
mov
mov
inc
rcl
xchg
mov
and
imul
mov
movsb
mov
repnz
sbb
shrb
call
ja
lahf
test
cmp
inc
jmp
test
inc
pop
pop
lret
faddl
add
pop
xor
aam
shrl
pop
push
adc
ljmp
fs
inc
and
out
pop
lds
dec
push
mov
or
mov
gs
std
fs
ja
mov
push
in
or
test
xor
add
mov
cmp
out
jecxz
jp
pop
cli
add
in
sahf
pop
popf
sub
fwait
ret
ret
lea
push
jnp
das
ja
xor
lods
in
xchg
test
dec
lret
and
sti
jns
fdivl
cmp
bound
mov
les
loopne
mov
fwait
add
in
fdiv
sub
mov
mov
aas
and
xlat
xchg
and
out
daa
pop
stc
xchg
int3
fldt
and
adc
push
sahf
mov
fld
repnz
cmc
jbe
adc
sbb
pushf
lcall
pop
insb
repz
mov
jle
insb
xorb
xchg
xor
fbstp
ret
or
ljmp
push
je
lcall
jne
std
lret
mov
push
pop
mov
or
dec
push
imul
jecxz
jecxz
fidivs
mov
add
ja
sar
xor
jbe
movsl
fsubr
nop
fdivs
inc
mov
inc
test
cmp
mov
aad
sub
ret
popa
or
cmp
addr16
jecxz
shlb
icebp
add
stc
clc
cmp
fwait
int3
sbb
insb
sub
push
adc
dec
jne
jp
sbb
out
mov
insl
dec
sub
shlb
dec
or
mov
sbb
daa
and
sub
jmp
inc
and
push
dec
adc
imul
rorb
adc
int
data16
sbb
push
cmp
scas
mov
push
lcall
out
testl
cld
xor
xchg
out
mov
fs
or
push
test
inc
push
push
addr16
js
jle
pop
stc
insl
lds
dec
scas
cmp
icebp
pusha
push
sub
rcrl
xchg
fimull
dec
pushf
hlt
fwait
jo
pop
mov
outsb
jbe
or
lea
mov
pop
pop
and
xorb
mov
mov
shrb
insl
cmp
call
out
movl
jmp
pop
js
ss
dec
pop
in
call
nop
test
pop
fnsave
imul
cli
outsl
shl
loopne
fmuls
sub
dec
test
mov
mov
push
pop
push
xor
dec
int3
pushf
sbbb
and
xor
pop
cmp
lods
pushl
xchg
lds
fildl
lods
sbb
mov
or
jecxz
jecxz
cmp
test
popl
mov
stos
stos
ret
dec
out
repz
aas
cltd
jg
lahf
pop
adc
add
inc
or
adc
xchg
shr
pop
cmp
subb
pop
push
jb
jmp
addr16
nop
imul
dec
adc
roll
stc
lahf
or
jbe
fwait
jg
sub
dec
pop
add
xchg
popf
pop
mov
enter
pop
jecxz
gs
mov
mov
jnp
push
push
lock
cmc
and
inc
and
fiadds
in
pusha
mov
jecxz
jb
jp
xlat
sbb
cmc
jecxz
pop
mov
mov
fidivs
sub
stos
lock
mov
mov
repz
xchg
dec
pop
cltd
jle
and
testl
cwtl
add
inc
cli
push
cmp
enter
xchg
add
cmpsb
ljmp
xchg
nop
mov
add
xchg
jo
jmp
loopne
dec
and
aaa
xchg
mov
aas
or
and
push
xchg
popf
icebp
and
add
ror
or
jns
xor
push
xor
jno
add
adc
mov
cmpsb
lods
insb
cmp
adc
sahf
fstps
lock
mov
mov
jg
mov
pop
xchg
jns
xchg
movsb
dec
mov
fucomi
pop
dec
push
xchg
adc
ja
sbb
out
dec
stos
dec
sbb
test
and
and
sahf
mov
jle
xchg
ja
mov
jo
fidivrs
movsl
jp
test
xchg
lret
and
cmpl
dec
ss
dec
pop
jb
cmpsl
push
stc
out
or
sbb
rcrl
and
adc
cmp
pop
pop
mov
pop
mov
push
sub
daa
lcall
mov
cmp
ja
sahf
movsb
sub
jg
test
push
fs
push
fwait
addr16
lret
adcl
pop
call
popf
fsts
jns
std
or
inc
and
shll
daa
push
mov
sub
nop
inc
cs
cmp
xchg
aaa
push
pop
jbe
adc
xlat
fmull
pop
push
mov
lock
xchg
in
fsub
pop
sbb
lea
mov
outsb
adc
mov
jae
js
add
aas
xchg
pusha
test
pop
mov
pop
rolb
int3
mov
pop
inc
add
sub
inc
adc
mov
mov
sub
dec
xor
adc
addsubps
dec
push
mov
and
mov
push
mov
fucompp
adc
leave
movb
jecxz
xchg
adc
xchg
mov
mov
pop
sub
jnp
imul
adc
inc
sub
cmpsb
divl
xchg
xchg
inc
jnp
lcall
push
xor
aas
jecxz
je
movsb
xorb
dec
sub
mov
ds
xor
xorl
insl
and
mov
jae
fxch
and
dec
out
out
and
mov
mov
lcall
xchg
jl
mov
cwtl
pushf
cld
mov
dec
sbb
adc
push
rclb
sub
aas
rclb
mov
lcall
popa
mov
cwtl
xchg
icebp
and
popa
test
inc
test
or
stc
hlt
jecxz
push
orb
je
pop
jmp
push
ffreep
inc
pop
mov
sub
mov
and
fidivl
fsubl
mov
aad
and
add
push
lret
dec
fwait
dec
imulb
mov
or
xchg
das
mov
cmp
jecxz
nop
mov
addr16
je
rcll
jecxz
and
add
and
xchg
xchg
fisubl
mov
xchg
pop
dec
jle
jp
mov
arpl
lea
cmp
xor
sbb
add
inc
fidivl
fildll
cltd
popf
adc
dec
mov
cwtl
mov
aaa
push
jns
iret
data16
pop
popl
scas
aam
cmp
lods
or
es
sub
jecxz
push
in
ss
sbb
inc
ds
hlt
jae
or
cld
fstpt
testb
push
mov
pop
stc
xor
scas
pop
mov
enter
inc
push
aad
outsl
int3
dec
ret
mov
pop
mulb
test
hlt
dec
mov
xorb
addr16
jl
pop
ja
sub
push
jecxz
cmp
inc
pop
mov
mov
sbb
imul
in
data16
es
ljmp
inc
pop
lahf
out
stc
je
fs
fdiv
iret
jbe
mov
add
fld1
outsl
imul
pop
cmc
pop
les
push
enter
ret
or
loop
dec
insl
ja
dec
addr16
nop
fimuls
lahf
test
push
int3
dec
mov
ud2
dec
pop
xor
lahf
fdivrs
aam
adc
mov
dec
popa
mov
push
in
leave
xor
test
mov
imul
popf
aad
jg
pushf
mov
push
jle
adc
pop
fimuls
hlt
push
sbb
fidivrl
push
mov
xchg
push
mov
stc
addr16
das
xor
fwait
cmc
dec
xchg
xchg
lods
jne
ja
mov
outsb
jecxz
xchg
nop
mov
lret
inc
test
ja
or
pop
and
xchg
jge
ja
stc
add
jbe
addr16
dec
es
stc
bound
addb
and
sub
inc
ljmp
dec
aad
jmp
in
xor
mov
scas
repnz
jo
mov
jnp
pop
cmpsl
jl
cld
fadds
and
pushf
mov
mov
and
bound
pusha
cmpsb
inc
lcall
ja
in
gs
push
mov
inc
mov
sbb
or
ss
das
fwait
aas
or
or
xchg
add
fadds
fwait
sub
or
mov
les
hlt
dec
pop
lea
lea
test
mov
xor
aas
call
mov
into
sbb
scas
mov
sub
inc
mov
inc
sub
cmp
or
mov
insl
push
out
xor
aam
mov
xchg
xorb
mov
push
ljmp
cmpsb
sub
pop
fwait
dec
bound
mov
and
xchg
test
or
aam
xor
mov
inc
loopne
lods
mov
jg
dec
ficomps
adc
xchg
mov
repnz
sbbl
leave
push
xchg
stos
inc
pop
pop
mov
xchg
lock
fsubl
movsb
mov
cmpsl
imul
xor
mov
mov
mov
pop
dec
cmc
xchg
lea
fisubs
jnp
or
cld
cmp
inc
mov
pop
xchg
shrl
inc
mov
sbb
jg
or
mov
pop
xchg
dec
fiaddl
add
mov
shlb
je
mov
js
pop
pop
sub
addr16
lea
add
sti
fisubl
jp
test
mov
addr16
loopne
lahf
test
sub
or
inc
aas
jp
call
fwait
imull
pushl
cmc
xchg
mov
mov
imul
aas
mov
sbb
jae
and
adc
gs
addr16
mov
fwait
movsl
popf
inc
push
or
lock
sbb
sarl
scas
bswap
pop
hlt
jmp
mov
sub
lret
lcall
loopne
pushf
pop
fwait
jecxz
mov
xor
push
mov
or
lock
mov
dec
pop
add
mov
bound
int
jmp
mov
mov
xlat
sbb
sbb
mov
xlat
push
js
or
ss
and
adc
xchg
fiaddl
mov
mov
adc
mov
cmp
outsl
xchg
xchg
lea
pcmpgtd
dec
pop
std
daa
cld
in
jb
out
lahf
sbb
fwait
add
jmp
sarb
mov
mov
or
leave
mov
int
jb
and
xlat
arpl
in
mov
adc
and
dec
insl
mov
mov
or
or
mov
xor
cmpb
movsl
call
inc
jo
and
sub
pop
add
jae
arpl
cwtl
cli
fisttpl
adc
fimuls
pop
pop
or
repnz
ret
cmc
into
xchg
push
inc
out
cli
lock
addb
ftst
xchg
add
nop
xor
or
jae
dec
leave
mov
mov
dec
into
addb
or
outsl
cli
movsl
cld
pop
jmp
jle
and
and
jno
pop
pushf
les
push
imul
es
enter
fcomp
orb
pop
sub
pushf
daa
dec
cmp
imul
lea
jnp
or
icebp
push
mov
repz
out
imul
cmp
dec
xor
sub
mov
push
cmp
add
or
push
fdivs
pop
cmovnp
or
push
mov
arpl
cltd
sti
sub
ret
xchg
fwait
lcall
jmp
ja
cmc
adc
cmp
les
outsl
insl
pop
dec
mov
push
mov
mulb
jl
inc
cmp
mov
inc
mov
inc
add
mov
pop
jle
call
sub
enter
pop
pop
scas
roll
scas
jno
out
cmp
imul
out
repnz
test
aaa
pop
cmp
mov
test
cmp
mov
sub
inc
ret
and
xchg
mov
clc
dec
cld
in
xchg
pop
and
mov
mov
sbb
imul
dec
jmp
jp
popa
push
andl
inc
outsl
xchg
or
sub
repnz
stc
cltd
mov
push
mov
cmc
cli
jge
sbb
aam
push
pop
mov
pop
les
push
divl
jns
adc
xchg
repz
jne
shll
push
sbb
icebp
adc
jo
xchg
cmp
rolb
pop
repnz
jae
lods
and
jno
fwait
sbb
mov
ss
or
ja
enter
push
imul
jg
mov
imul
mov
ja
js
fwait
push
pop
stos
mov
stc
clc
lcall
sub
sub
mov
xchg
ret
fwait
out
add
stos
sub
xchg
aam
inc
stc
pop
rol
test
imul
pop
lret
or
js
js
cmc
jae
pop
mov
dec
in
cmp
repnz
test
sbb
lock
loope
insb
jo
mov
dec
dec
lds
mov
iret
scas
sarl
mov
cmc
jne
mov
repnz
adc
mov
je
lea
mov
sbb
dec
sbb
dec
lock
mov
cmp
pop
andl
dec
mov
fwait
mov
mov
mov
push
adc
cmpsb
cwtl
jmp
sub
out
mov
adc
inc
dec
add
gs
sti
fdivs
inc
out
pop
orl
sbb
cmp
push
les
xchg
pop
pop
adc
fisubl
mov
hlt
adc
adc
scas
lock
mov
and
jecxz
sbb
faddl
movsb
add
sbbb
push
popa
sub
mov
mov
mov
outsb
and
add
mov
movsl
lods
push
sti
test
mov
mov
sbb
out
dec
mov
fisubrs
sahf
dec
xchg
mov
sub
cmp
in
cmpsl
jmp
mov
fdivrs
ja
mov
inc
pushf
cld
add
mov
adc
cmpsb
jg
pop
and
or
pushf
inc
repnz
cld
push
jecxz
lret
and
lds
cwtl
repnz
pop
cmc
mov
add
lret
push
mov
decb
mov
cmp
and
fdiv
mov
inc
enter
fisubs
loope
scas
mov
dec
cltd
mov
pop
imul
jle
mov
imul
or
jnp
repz
dec
js
xchg
jno
add
sub
jnp
andl
fwait
daa
jecxz
into
out
or
dec
jno
pop
fcompl
adc
fisubl
jo
daa
push
sahf
pop
out
jmp
pop
fwait
add
inc
cmp
subb
jnp
imul
jns
jmp
mov
push
nop
jecxz
frstor
or
fiadds
mov
or
aaa
les
mov
jp
addps
mov
xchg
jle
pushf
pusha
jo
adc
cltd
outsb
sarb
sti
dec
repnz
stos
in
rclb
cmpsl
xchg
imul
repz
or
es
insl
fisttpl
outsl
xchg
sbb
orb
push
loopne
push
xchg
or
ja
subb
jmp
loope
mov
cmp
and
xchg
dec
mov
jecxz
repnz
sub
mov
repnz
sub
call
clc
rcl
push
repz
shrb
aaa
push
repnz
bound
mov
dec
mov
pop
lret
fisubs
jle
push
pop
lds
shll
inc
pop
xchg
and
mov
xchg
scas
and
adc
cmp
add
dec
cmp
push
movsb
cwtl
mul
mov
inc
dec
jo
lret
cmp
jno
inc
dec
xor
sbb
dec
dec
loop
cli
jo
cmp
daa
mov
fwait
scas
push
lcall
dec
jmp
mov
mov
dec
dec
inc
cmpsl
repnz
pushf
mov
fcmovne
les
orl
or
pop
dec
repnz
and
cwtl
push
cmp
icebp
daa
push
test
push
lock
and
add
and
sub
cmp
bound
fidivrl
dec
jbe
data16
pop
in
cmp
sti
das
bound
stc
jbe
inc
xchg
add
jl
jmp
jb
sbb
loope
pop
dec
dec
mov
add
orl
mov
sub
les
adc
shl
ret
in
mov
imul
push
sbb
dec
lods
ja
cmp
pop
call
imul
nop
push
fwait
aas
pmaxub
push
rclb
xor
add
repnz
inc
pusha
push
xor
cmp
mov
mov
mov
jno
jb
daa
xchg
pop
lds
cld
add
xor
aas
cmpb
rclb
test
push
test
sub
repz
icebp
jb
pop
repz
xchg
adc
pop
rorl
outsb
xor
das
jno
or
mov
sbb
jns
adcl
pushf
aas
popa
xlat
push
and
scas
fsts
cld
fisttpl
jo
imul
pop
imul
xor
sbb
das
jb
fsubs
xchg
nop
mov
lock
and
push
icebp
inc
fldenv
inc
popa
lahf
andl
dec
ja
lods
push
xor
mov
movsb
sub
mov
imul
sub
xchg
xchg
xor
or
nop
jl
in
sbb
addb
addr16
cmpsb
fwait
dec
scas
jne
call
leave
nop
dec
rclb
cs
cmp
pusha
rolb
fisubrs
in
adc
mov
test
sub
rorl
sbb
sbb
ret
push
lahf
mov
mov
gs
loopne
out
pop
or
add
pop
dec
inc
out
pop
scas
mov
lods
mov
inc
and
negl
shlb
aad
sti
and
cmpsl
pop
xchg
icebp
addl
inc
lea
ja
jle
push
pusha
ljmp
push
push
mov
stos
mov
imul
andl
push
popa
inc
sub
mov
or
inc
faddp
cmp
test
insb
ds
inc
xchg
test
jl
out
sbb
inc
jns
cmp
lods
xchg
xor
fwait
loope
ret
arpl
adc
push
das
ficoml
push
pusha
mov
js
pop
sub
lea
idivl
xchg
sbb
xchg
insb
xchg
mov
vmovdqu
lds
dec
dec
fnop
xor
mov
sbb
in
mov
pushf
rcll
lock
or
int
or
sub
lods
jae
movsb
add
es
mov
dec
jno
popa
add
and
lock
js
xor
mov
cltd
mov
mov
test
jl
imul
aam
push
mov
xor
lret
xchg
or
xchg
ret
push
xor
imul
or
push
pop
pushf
cmpsl
fwait
aad
push
addr16
mov
add
jbe
pop
fdivrs
sbb
and
cmp
mov
or
sub
inc
pop
ja
add
fwait
daa
outsl
fdivrs
fiadds
lret
ja
xor
jb
loop
hlt
add
loopw
mov
cs
jecxz
push
inc
pop
loop
dec
out
cli
xchg
mov
imul
push
popa
movsl
or
aas
cmp
arpl
sub
jmp
out
push
inc
pop
jg
leave
push
pop
inc
mov
and
inc
in
aaa
ss
mov
and
fucom
in
ljmp
sub
negb
push
inc
jp
das
and
ljmp
xor
movsb
jecxz
pushf
call
pop
outsl
jg
insb
clc
add
xchg
adc
je
arpl
addr16
dec
adc
lret
mov
add
stos
imul
ds
push
sbb
xchg
imul
ss
mov
or
cmp
das
out
lods
or
repnz
dec
mov
out
sbb
mov
dec
xchg
addr16
decl
cld
imul
and
mov
cmp
mov
sub
dec
push
stos
testl
fwait
sarb
outsl
jbe
cltd
loope
icebp
adc
push
sub
test
out
xchg
push
cli
lods
lock
nop
popf
in
test
stc
mov
xchg
xchg
es
sub
inc
hlt
xchg
and
repnz
xor
mov
int3
sbb
std
pop
adc
cmp
imull
adc
xchg
mov
xor
xchg
pop
pushf
push
mov
mov
outsl
popa
add
add
shll
sbbb
shrl
sbb
pop
cmp
push
xchg
or
fs
xor
clc
push
enter
push
xor
roll
fcompl
lret
adc
cmp
roll
in
popa
pop
rcrb
sub
ja
dec
imul
add
sahf
xchg
jmp
ret
mov
decl
cmp
or
int3
out
adc
fisttpl
mov
test
jp
cs
fcomi
aam
out
jnp
subl
adc
hlt
xor
mov
aam
testl
mov
mov
mov
add
outsb
sbb
xchg
lods
nop
repnz
mov
jp
fldenv
cltd
nop
hlt
push
js
outsb
dec
int
mov
inc
jo
xor
mov
lds
push
clc
cmp
sar
xchg
fwait
addr16
pop
mov
mov
push
pop
add
sbb
int
pop
or
mov
stc
pop
out
popf
mov
inc
and
or
sbb
in
push
je
or
jg
imul
aad
dec
cli
xchg
mov
lock
out
scas
test
out
mov
int3
inc
repz
push
push
inc
dec
mov
decl
and
sub
jle
cmpsl
and
sbb
push
mov
imul
in
mov
cmc
in
shll
sub
adc
sti
sub
mov
scas
xlat
mov
daa
mov
pop
out
movsb
xor
xchg
insl
cmp
sub
stc
pop
stos
bound
pop
bound
dec
jno
lret
das
cmp
lcall
dec
add
inc
cli
ds
fldenv
test
jne
xlat
js
fisttps
movsl
insb
jno
or
leave
push
pushf
push
push
test
cmp
mov
pop
jno
enter
xchg
mov
and
add
inc
in
mov
notl
dec
pop
fwait
dec
test
pop
push
sti
sarb
cmc
adc
and
mov
repnz
dec
cmpsl
mov
je
push
sbb
ret
mov
or
cmpsb
push
inc
mov
push
cmpsb
mov
inc
aas
cwtl
jmp
out
dec
cmc
jp
ja
scas
mov
push
test
xchg
xchg
test
jecxz
enter
dec
xchg
cwtl
fwait
daa
xor
cmp
push
dec
push
icebp
movsl
cs
push
pop
adc
idivb
stc
pop
mov
hlt
push
mov
and
scas
out
cli
xchg
pop
test
adc
lahf
arpl
cmp
imul
into
inc
pop
push
leave
aaa
mov
ljmp
mov
movsl
lcall
xor
xor
mov
lahf
and
mov
pop
push
inc
in
jo
jnp
leave
or
push
sbb
mov
rclb
ja
adc
xchg
shl
push
jecxz
lcall
sahf
adc
xchg
mov
ljmp
mov
ljmp
cmc
repz
je,pn
mov
or
mov
cwtl
pop
loopne,pn
test
daa
mov
push
sub
xor
add
movsw
add
xchg
daa
sbb
out
pop
mov
dec
cmp
xorl
push
and
sbb
dec
lret
loop
aad
stos
outsl
xchg
inc
inc
xlat
lds
mov
pushf
loopne
pop
int3
dec
scas
in
xchg
push
pusha
scas
xadd
add
shlb
fimuls
xchg
test
cmp
push
imul
adc
mov
sub
popa
arpl
sbb
push
dec
test
pushf
in
pop
add
mov
mov
daa
jnp
pop
stc
push
xchg
dec
xchg
push
sbb
jp
in
mov
jmp
dec
es
and
dec
mov
in
add
dec
jnp
push
lock
and
or
test
jbe
outsb
mov
adc
inc
test
and
cmp
add
xchg
xor
xor
jae
inc
aam
or
jo
xchg
std
imul
inc
mov
and
jbe
adc
lret
xchg
adc
sbb
popf
pop
jmp
cmp
mov
stc
mov
lret
jnp
inc
daa
dec
cmp
mov
call
inc
out
xchg
add
add
dec
pop
cmp
and
pop
mov
mov
pop
mov
jecxz
rcll
insl
mov
push
push
testl
mov
cld
inc
xchg
pushf
adc
push
cli
push
inc
inc
outsl
inc
test
jecxz
shrl
add
fnsave
pop
aas
add
jne
sbb
int
mov
inc
xchg
mov
mov
sbb
ret
mov
jmp
filds
psllw
fmuls
cmpsb
cltd
xchg
sbb
mov
popa
popf
pop
xchg
lock
lcall
les
enter
fistpll
inc
xchg
jb
xchg
popa
inc
int
push
ljmp
or
rcrb
ljmp
inc
push
je
push
jnp
cld
dec
cmpsl
push
mov
pop
mov
xor
push
ret
adc
jle
fstl
cmp
cmp
mov
rorb
mov
stos
push
loop
mov
adc
stc
pop
sbb
insl
jge
add
xchg
adc
jp
dec
cwtl
and
sbb
fdivp
mov
mov
xor
mov
mov
mov
add
sahf
fwait
xchg
pop
jo
mov
cmp
imul
sub
sbb
je
int3
repz
gs
cmp
jg
mov
jne
cmc
adc
xor
dec
dec
testl
adc
dec
cmp
flds
mov
sahf
inc
fwait
lea
in
movsl
and
fwait
imul
pop
ljmp
sarl
sahf
xchg
int
mov
movsb
aaa
adc
sbb
lea
dec
out
fcompl
dec
push
nop
sub
mov
mov
ret
lea
adc
test
in
aam
aaa
mov
dec
sbb
jp
mov
cs
cmp
add
in
test
cltd
sbb
stos
enter
movsb
mov
popa
jnp
inc
adc
pop
pop
push
sub
adcb
imul
xor
std
clc
inc
inc
loopne
push
cmpsb
daa
frstor
add
add
or
sti
xor
cmp
or
mov
fwait
aaa
push
adc
dec
cmpsb
add
xchg
pop
mov
aam
stc
mov
add
fdivs
imul
sbbb
into
popf
sub
stos
cld
xchg
lahf
test
outsl
leave
insb
das
into
ss
or
clc
sbb
push
addl
ss
push
ja
push
dec
pushf
jnp
inc
jg
xchg
aad
mov
mov
jbe
push
fstpt
aad
aaa
sub
je
sub
adc
sub
xor
fimuls
imulb
into
inc
pushf
cs
js
jne
or
rorb
push
cmc
mov
push
add
or
xor
add
inc
adc
mov
xor
sahf
pop
fwait
mov
loope
test
xlat
pop
and
adc
repz
mov
out
outsl
adc
push
repz
pop
ds
sbbb
add
ud1
and
cld
aas
aaa
xorl
ret
mov
ja
addr16
jbe
and
jns
ficoms
cli
cs
cwtl
sbbb
adc
mov
enter
cmpsl
adc
test
popf
imul
xor
fwait
mov
es
mov
out
rorl
push
xor
jb
add
push
pop
cmp
ja
inc
jmp
xor
mov
dec
test
das
pushf
sbb
dec
cmp
and
cmc
add
mov
jmp
sbb
inc
add
pop
push
cltd
xchg
insl
repnz
jecxz
pop
pop
gs
test
push
fyl2x
fcomps
lea
sub
into
js
adc
rolb
dec
inc
mov
or
mov
xchg
ss
fcmovnu
mov
shll
jns
aaa
les
mov
pop
dec
xor
cwtl
imul
into
roll
fwait
mov
fildl
and
lahf
cld
sub
ljmp
add
bound
out
sub
icebp
jge
push
sarb
mov
add
aad
jmp
test
pop
lods
mov
fsubrl
and
cld
shr
adc
xchg
scas
pop
xchg
pop
imul
xchg
loop
lea
xchg
jnp
fsubrs
xchg
push
loopne
in
and
xorl
jbe
mov
js
pop
cmp
pushf
into
pushf
inc
mov
or
pop
repnz
ja
pop
dec
lret
mov
dec
add
and
jecxz
push
adc
pop
out
mov
dec
cmp
mov
fimuls
out
imul
les
xchg
into
insl
aas
add
and
sub
inc
mov
testb
pushf
clc
xchg
popa
push
pop
loop
pop
stos
and
outsl
in
nop
mov
mov
adc
test
inc
inc
cmc
lcall
enter
cmp
fildl
cmp
test
pop
popa
xlat
fwait
daa
sub
push
fmuls
pop
xchg
aas
and
cltd
outsl
iret
movl
call
sbb
aad
loopne
cltd
fsubrl
mov
mov
push
daa
fmull
test
pop
clc
sbbl
and
mov
jnp
push
enter
fdivs
jnp
jne
cwtl
mov
push
sub
xor
movsb
adc
inc
push
xor
lcall
icebp
push
push
adc
packssdw
fcoml
cmp
add
imul
subl
in
iret
shll
sti
push
repnz
hlt
push
push
pushf
cld
sbb
mov
xor
dec
shll
mov
inc
dec
mov
cli
mov
mov
addr16
cmc
addr16
inc
mov
sub
ficoms
sbbl
leave
getsec
sti
push
fidivrl
pop
dec
add
add
adc
xchg
cmp
or
mov
fbld
xor
fnsave
cwtl
and
movsl
add
xchg
pushf
adc
mov
mov
xchg
add
test
lods
test
sbb
pop
stc
nop
add
mov
out
mov
int
xchg
push
adc
xchg
add
in
fwait
mov
std
lret
add
nop
fldl
cltd
cli
xor
mov
xor
pop
addr16
fsubrl
les
dec
mov
push
lea
inc
pop
ror
das
and
push
xor
cmp
mov
xchg
sahf
and
mull
and
into
fucomip
seto
lock
cmpb
in
sbb
imul
stc
hlt
dec
rcll
jae
outsl
xchg
pop
jl
pop
cmp
or
or
jns
mov
out
fisubrs
push
jp
sbb
mov
cwtl
filds
out
add
mov
pop
add
mov
jns
mov
ficoml
xchg
call
stc
add
xchg
mov
and
sbb
jnp
push
cs
and
in
pop
enter
lods
popf
pop
cmp
aaa
or
scas
xor
mov
in
sbb
fimull
add
daa
push
xchg
test
cmc
cmp
int3
fwait
aad
sbb
jbe
aaa
ljmp
aam
test
cmpsl
iret
xor
fldenv
mov
mov
mov
jge
adc
fcmovbe
mov
xor
das
addl
dec
mov
enter
lea
cmp
int3
pop
sbb
jp
repz
imul
ret
scas
mov
lock
and
dec
out
sub
sub
adc
movl
pop
push
rorb
dec
cmp
das
out
sbb
test
cs
in
jg
es
push
mov
fldl
push
jg
sub
inc
cmpsl
or
lret
mov
clc
iret
cwtl
jno
xlat
xchg
notl
add
aas
mov
jl
int
cmpsl
or
pop
add
jbe
mov
outsb
mov
ret
cltd
mov
add
push
pop
mov
loopne
xlat
mov
inc
mov
imul
in
pop
sub
add
push
jp
out
push
les
nop
and
mov
dec
ja
pop
mov
outsl
fdiv
ds
lcall
xchg
push
orb
mov
adc
push
fwait
mov
outsl
clc
jle
sbb
mov
inc
daa
push
xchg
pop
stc
lds
cmp
ja
sbb
iret
pusha
aam
fs
clc
ja
test
iret
mov
push
dec
dec
mov
sbb
mov
jmp
sbb
outsl
fisubs
fs
jmp
aas
dec
rorb
push
aaa
pop
lahf
sbb
mov
notl
cmp
leave
pop
inc
push
pop
pop
mov
out
dec
lods
sub
call
repz
jae
push
cmpsb
xchg
in
xchg
lret
popf
cmpl
mov
mov
insb
xchg
imul
and
push
cmp
push
cmp
ja
mov
fidivrl
dec
sbb
out
jo
push
fsts
jae
jnp
push
mov
sbb
sub
cmp
rorl
repnz
or
int3
int
jmp
pop
shrb
arpl
ja
inc
daa
mov
scas
arpl
adc
or
pop
push
repnz
fmuls
fwait
lock
push
lods
iret
inc
fsubs
and
lret
insl
and
cmpsl
xor
rorl
fiadds
imul
mov
lea
sbb
aas
and
and
shlb
cmp
inc
loopne
rcrl
jb
xchg
fldcw
nop
rclb
mov
jecxz
inc
insl
mov
cwtl
and
mov
lods
sbb
jg
push
jle
cmp
push
bound
lea
cmp
addr16
or
mov
or
outsb
jp
imul
outsl
fimuls
mov
ret
jl
mov
scas
icebp
sar
add
sbb
lds
sbb
jnp
push
out
int3
xor
dec
bnd
adc
sbb
bound
out
pop
sbb
fwait
mov
jbe
dec
pop
sub
jo
mov
inc
jmp
mov
cld
jl
js
rcll
fs
ljmp
sbb
outsl
xchg
mov
nop
jl
call
jno
in
pop
mov
xchg
push
ja
cmp
ret
adc
or
ljmp
pushf
daa
mov
lea
sbb
out
pop
out
pop
enter
hlt
adc
nop
add
outsl
repnz
jb
dec
and
adc
or
imul
fwait
push
lds
scas
cmpsb
and
repz
inc
cmc
pop
adc
arpl
or
push
inc
lea
mov
push
shlb
adcl
aas
xorb
test
cmc
or
mov
dec
std
xchg
roll
andl
shlb
xor
pushf
push
je
movsl
sub
push
xor
addb
fadds
test
xchg
xchg
xchg
lahf
mull
mov
les
fcmovnu
inc
lea
xor
mov
jb
pop
or
mov
dec
pop
jle
or
loope
mov
sbb
sub
popa
sbb
cld
xchg
fucomi
mov
cmp
push
sbbb
xor
les
fwait
dec
mov
das
lds
mov
xor
xor
add
cmp
mov
fsub
push
adc
push
fstps
pop
mov
mov
pop
nop
or
pop
lods
or
pop
outsl
add
mov
in
aam
rcrl
dec
fwait
dec
outsl
imul
mov
sbb
test
cmp
inc
shr
xchg
dec
push
pop
daa
adc
fld
mov
pop
js
cmp
pop
dec
adc
imul
nop
jecxz
out
cltd
push
adcl
mov
xor
imul
imul
lahf
out
or
subb
xchg
mov
sub
jecxz
push
lahf
xchg
xor
je
stos
xchg
jp
movsl
sbb
xchg
nop
push
xchg
jno
insb
mov
sahf
pusha
pop
imul
xchg
push
popa
test
lock
push
sub
les
xchg
jle
mov
inc
rcr
sarl
push
inc
adc
push
push
adc
clc
and
jg
ljmp
pusha
push
push
xchg
mov
pop
leave
cmp
sahf
nop
dec
fwait
out
mov
pop
or
jns
adc
xchg
jmp
fwait
cmp
jle
test
push
add
sub
xor
test
in
or
inc
or
shr
xor
in
cmp
add
mov
les
daa
jge
fstl
pusha
mov
shrl
dec
mov
sahf
fwait
inc
imul
push
add
test
xchg
xchg
mov
dec
jbe,pn
add
test
mov
movsl
repnz
mov
andb
jne
add
dec
in
mov
das
ja
imul
lods
iret
mov
lods
adc
rcrb
jg
iret
data16
sahf
imul
ja
call
mov
jb
mov
out
dec
xchg
iret
test
pop
mov
pop
mov
sub
mov
cmc
es
mov
push
dec
sbb
dec
mov
insl
push
xlat
jnp
cwtl
shrl
test
fwait
sbb
ret
or
xlat
or
int3
js,pn
sbb
adc
fdivp
jecxz
xchg
imul
fsubs
fwait
test
int
lea
push
lock
fwait
std
pushf
cmc
insl
cwtl
cmp
mov
outsl
sbb
ljmp
cmc
data16
popf
in
push
dec
dec
pop
data16
outsl
or
cmp
in
cmp
imul
mov
lret
lods
adc
mov
sahf
icebp
mov
aaa
sbb
mov
add
dec
xchg
jmp
cmp
gs
js
mov
subb
out
add
nop
pop
fwait
xor
int
lcall
mov
mov
lahf
add
imul
pop
mov
ret
leave
fidivs
in
lods
int3
js
pop
mov
js
mov
jmp
imul
dec
dec
mov
ror
icebp
gs
outsb
sub
xor
fnstcw
mov
and
and
fisttps
in
fs
ja
popa
hlt
ja
jmp
in
or
lcall
sub
jb
dec
xor
out
adc
repnz
aaa
mov
filds
pop
stos
aas
rcll
fsubs
mov
clc
jns
aaa
mov
inc
sub
pop
test
dec
pop
int
and
stos
stos
dec
mov
sbb
imul
repnz
popf
iret
faddl
test
fs
pop
fiadds
lret
or
test
fdivs
stos
daa
test
repnz
in
lcall
push
sti
and
sahf
inc
dec
pop
mov
loop
inc
mov
pop
popa
ljmp
out
cld
xchg
lods
int
sub
out
or
inc
jo
push
cli
or
jnp
in
test
push
cli
testl
lods
in
sar
cmp
outsl
push
rolb
and
out
and
pop
repnz
inc
mov
stos
pop
lahf
cmp
xor
rolb
jg
es
dec
push
mov
movsl
dec
fwait
mov
idivb
or
mov
rcrl
mov
mov
aaa
lret
jbe
xchg
inc
mov
imul
sahf
leave
pandn
add
ret
loop
icebp
outsb
mov
mov
test
imul
int
pop
jg
push
daa
in
pop
clc
fisttps
mov
xchg
rcrb
in
jne
add
inc
data16
jmp
lret
cld
mov
imul
pop
and
or
fcompl
mov
shrl
cwtl
lcall
fnop
repz
sbb
push
fadds
mov
into
arpl
shlb
nop
mov
out
fdivrl
xor
mov
jnp
lods
ss
testl
js
pop
in
sbb
xchg
inc
push
pop
add
adc
imul
test
clc
add
adc
inc
fwait
xchg
negl
inc
idivb
and
lea
dec
adc
mov
fidivrs
mov
inc
jbe
outsb
push
cmc
decb
shl
loop
insb
and
fbstp
aaa
out
pop
jl
push
shlb
subl
dec
enter
adcl
mov
pop
es
hlt
jg
jne
add
stc
js
imul
int3
and
sub
adc
imul
sub
mov
out
scas
repnz
mov
inc
sbb
mov
jae
in
aad
push
lea
popf
scas
insl
fyl2xp1
shll
pop
jmp
ficompl
nop
fstpl
hlt
lret
mov
rolb
lea
pop
iret
lret
xchg
movl
xor
mov
jo
add
push
mov
pushf
jmp
mov
jns
mov
jle
pop
mov
jb
lret
pop
sub
mov
lahf
test
lea
or
lcall
mov
pop
pushf
hlt
inc
push
sub
test
xchg
push
cmp
ds
and
xchg
pop
prefetchnta
cmc
fs
test
scas
cmp
push
sbb
ja
cmp
pop
aaa
pop
or
jecxz
inc
leave
gs
cs
cs
dec
add
popf
loopne
pop
lahf
pop
aaa
xchg
les
push
inc
pop
inc
mov
stc
push
dec
outsl
xchg
out
lock
cli
and
popa
xor
jns
insb
test
mov
cmp
lret
adc
add
and
rcrb
push
fcmovnb
dec
push
mov
mov
add
mov
adc
test
jnp
pop
ja
and
ss
dec
fwait
into
and
adc
lods
nop
dec
mov
adc
add
mov
lock
sbbb
add
out
and
pushl
les
daa
imul
inc
xchg
mov
jne
and
and
xchg
xchg
call
pop
addr16
and
arpl
daa
fs
lahf
inc
fidivs
xor
mov
ja
lods
jns
roll
or
inc
int
and
sarl
sub
add
loop
aad
fdivs
jg
ljmp
repz
es
mov
mov
jbe
mov
aad
dec
pop
inc
lcall
repnz
out
out
mov
roll
out
ficompl
daa
lea
lret
aas
xchg
xlat
movsb
in
scas
jl
int
pusha
inc
shr
jge
das
cmpsb
pop
inc
xor
mov
pop
aaa
mov
fadds
push
in
jmp
mov
stc
mov
in
pop
outsl
dec
int
add
pop
adc
mov
push
or
mov
lahf
mov
cmp
aaa
es
pushf
xor
xchg
lods
adc
psrlw
rclb
pop
xchg
adc
mov
jns
ret
fwait
mov
and
lahf
mov
cmpl
mov
pop
fsubrl
sub
lcall
mov
imul
stos
arpl
enter
out
jno
out
mov
fld
pop
xchg
les
mov
sbb
cltd
mov
fwait
xor
gs
fwait
repz
paddsw
cmp
push
mov
arpl
lret
add
jl
addr16
cmc
daa
iret
lret
inc
push
test
pop
pop
test
cmp
mov
mov
sahf
cmp
mov
jno
subb
sub
mov
sbb
inc
arpl
xchg
adc
ljmp
sub
scas
data16
pop
push
mov
mov
sbb
ficompl
or
cmpsb
or
int
pop
imul
xchg
mov
or
xchg
xor
adc
into
lds
aaa
sbb
xor
test
out
xchg
repnz
pushf
dec
sar
imul
in
xchg
addr16
push
mov
test
mov
lret
jne
in
fisubl
dec
sarb
xchg
inc
cli
lret
mov
insb
adc
and
adc
pop
lock
imul
pop
leave
repnz
add
iret
stos
sahf
jo
dec
inc
jmp
arpl
out
fs
add
xchg
js,pn
enter
insl
mov
lcall
addr16
lock
shl
icebp
mov
jecxz
lret
clc
or
adc
lahf
fwait
repnz
dec
cmp
testl
insl
and
sbb
mov
into
inc
out
mov
xchg
mov
leave
fidivrs
hlt
in
inc
dec
mov
pop
adc
mov
sub
jnp
inc
cmc
out
out
out
stos
scas
test
inc
xchg
adc
cmp
jnp
das
pop
or
dec
dec
mov
shll
bound
cmp
push
lahf
call
scas
add
mov
and
push
mov
mov
pop
lock
mov
inc
js
push
scas
xchg
repnz
lock
test
or
mov
jo
mov
push
inc
lods
and
stc
shl
icebp
mov
jp
xchg
shlb
sbb
jl
mov
inc
mov
imul
pop
cltd
aaa
xchg
sub
testl
test
out
sbb
push
inc
mov
lcall
shl
mov
pop
imul
mov
push
cmp
sbb
sbb
decb
xchg
sbb
and
pop
mov
mov
std
inc
fwait
inc
jge
clc
inc
mov
out
fidivs
or
repnz
xchg
cmp
lods
sbb
es
ret
dec
push
stc
cltd
pusha
addr16
aas
aam
daa
js
das
dec
shll
pop
fstl
jns
mov
or
jno
inc
fidivrs
ret
stos
imulb
mov
inc
cmp
xchg
jl
mov
sbb
stc
nop
push
test
xchg
xchg
ret
rorb
cmp
lock
sbb
xchg
xor
mov
xadd
ret
dec
jo
or
ss
mov
nop
cmp
mov
and
call
mov
mov
xchg
mov
ret
xchg
aaa
out
cmc
lret
out
aam
mov
dec
sub
outsl
in
push
sbb
leave
insl
hlt
fwait
pop
lret
push
mov
push
push
imul
outsl
fs
sbbl
mov
sbb
mov
xor
mov
fwait
push
mov
scas
rcl
xchg
xchg
aad
hlt
and
cwtl
into
cld
sub
repnz
cli
daa
push
pop
and
adc
sbb
dec
and
inc
jns
dec
fiaddl
stos
add
pop
in
mov
sahf
mov
mov
dec
ja
inc
pop
pop
loope
sub
xor
mov
test
inc
cmp
xchg
sub
cmp
and
lahf
ficoms
lock
or
add
xchg
out
iret
in
xor
and
or
call
aaa
cs
adc
in
cmpl
sub
flds
bound
jbe
mov
mov
mov
out
test
push
adc
cmp
mov
cmp
and
pop
jmp
jo
xor
aaa
add
xchg
mov
lock
andl
cmp
addb
xor
cwtl
fwait
loope
cld
lahf
lea
jg
jp
mov
dec
dec
sti
call
fwait
movsl
repz
in
jo
leave
mov
xor
les
fdivl
in
push
andb
push
mov
xchg
shrl
insl
imul
mov
and
mov
mov
dec
adc
xchg
cmp
jno
loop
and
fistps
lcall
inc
mov
adcb
push
lock
sbb
cltd
pop
mov
jns
pushf
fwait
aaa
loope
fidivrl
imul
jne
inc
lock
scas
adc
es
sbb
pop
sbb
add
in
dec
xchg
sbb
ja
out
adcl
mov
dec
test
xor
imul
sub
and
or
imul
mov
add
movsb
jg
or
data16
js
xorl
pusha
or
pop
mov
push
push
int3
popf
cltd
mov
pop
mov
jno
push
push
mov
adc
jmp
mov
dec
iret
or
hlt
mov
jl
test
clc
cmp
cs
je
popa
test
sbb
mov
out
and
and
push
fiadds
and
adc
jb
mov
inc
outsl
jecxz
jmp
sbb
mov
mov
dec
hlt
xor
das
cmpb
aad
mov
clc
sbb
dec
call
jae
out
xchg
daa
mov
sbb
jle
daa
pop
mov
add
add
adc
cs
popa
mov
push
jp
jle
fcomp
icebp
push
dec
shr
das
repnz
enter
mov
loope
daa
sahf
pop
imul
dec
ja
in
xchg
imul
addr16
das
dec
daa
pushf
push
mov
push
inc
sbb
xor
inc
bnd
sub
pop
pop
into
lcall
mov
scas
add
insl
jle
and
xchg
ficoms
push
fxch
jns
mov
pusha
sbb
adc
push
test
lret
fs
mov
lret
cmovns
outsb
add
outsl
scas
gs
pusha
lock
in
inc
int
jecxz
push
mov
cmp
loopne
push
cltd
mov
add
push
mov
fwait
dec
xor
push
mov
mov
gs
inc
add
or
sbb
ret
testl
xchg
test
adc
clc
pop
sarl
repnz
or
adc
test
xchg
fbstp
sbb
insl
xchg
daa
out
fwait
lods
jp
mov
push
incb
mov
mov
and
aam
jge
sbb
test
mov
pop
xchg
and
dec
cmpsb
and
dec
inc
jmp
in
cmp
add
lods
jp
add
loopne
mov
stos
push
repz
fwait
loopne
ja
addr16
ljmp
adc
xchg
mov
fwait
addr16
je
pop
or
leave
out
out
mov
cld
ficomps
adc
ret
push
or
mov
pushf
xor
dec
xchg
fsts
push
lock
push
ljmp
mov
daa
mov
repnz
dec
cld
jns
js
inc
in
and
add
push
inc
xor
insb
mov
outsb
push
hlt
adcb
inc
or
aaa
push
jne
mov
hlt
cmp
fimuls
insb
nop
fwait
lahf
pop
lock
pop
adc
pop
outsl
insl
aas
inc
mov
or
jne
mov
or
xor
addr16
mov
sahf
adc
aam
mov
adc
push
leave
mov
bnd
mov
and
or
lds
mov
cmp
pop
mov
fstl
and
xor
jb
sub
xchg
inc
jmp
jge
pop
ja
cmp
stc
pop
mov
cltd
lcall
test
test
xchg
iret
push
sbb
dec
jmp
jp
push
nop
repnz
mov
lea
insb
push
mov
jae
repnz
push
mov
mov
push
lret
lea
std
mov
in
dec
push
ja
cmpb
insl
xor
mov
cmpsb
and
xchg
adc
mov
mov
iret
lods
incl
pop
clc
xchg
addr16
and
mov
dec
repnz
popa
int3
adc
push
mov
sbb
push
cmp
cmp
xchg
aas
adc
imul
fsubrs
push
adc
or
add
pshufw
push
cwtl
sbb
pop
cmp
sbb
lds
adc
mov
insl
lret
imull
jns
into
xor
mov
dec
sbb
adc
mov
shlb
pop
dec
xchg
lcall
jl
je
inc
jle
dec
jno
mov
pop
aaa
mov
lds
mov
mov
sbb
pop
stos
jecxz
and
pop
or
bound
adc
push
insb
rclb
popf
dec
int3
jb
xchg
push
xchg
cwtl
push
pushf
lcall
mov
test
fcoml
mov
push
and
xorb
inc
inc
pop
cli
mov
mov
sub
mov
scas
push
js
pushf
imul
mov
imul
scas
jle
sahf
cmp
sub
std
mov
scas
imul
rol
mov
mov
lret
mov
sti
test
ffreep
test
test
adc
and
lea
and
sbb
aam
ljmp
imul
subb
xchg
dec
ljmp
test
push
or
daa
gs
loope
adc
xor
mov
jle
cwtl
ret
popf
and
call
push
push
addr16
in
lcall
mov
lret
jns
adc
repz
icebp
inc
push
sahf
cmp
or
add
shll
mov
icebp
popf
imulb
pop
mov
adc
dec
mov
ja
mov
pop
in
push
ljmp
mov
and
dec
shrb
jnp
push
lret
xchg
cltd
fimuls
cli
jg
xor
cwtl
loopne
dec
or
xchg
pusha
dec
aas
push
mov
les
pusha
rcrl
add
push
hlt
dec
pusha
dec
shll
dec
cld
sbb
sbb
call
inc
shlb
mov
imul
imul
aam
icebp
xchg
inc
pop
adc
xor
inc
jb
jb
mov
int3
jbe
roll
adcl
out
aad
jnp
or
mov
rorb
mov
fildll
lcall
ljmp
xorl
mov
popf
cmp
rcl
xor
lds
cmp
dec
cli
call
imul
sarb
fimull
inc
pop
dec
push
mov
pop
scas
add
push
mov
push
adc
mov
call
hlt
jbe
jnp
mov
imul
cmp
repz
mov
pop
fwait
out
jnp
or
jp
inc
and
imul
hlt
stc
addr16
xchg
lods
movsl
mulw
ljmp
jle
fsts
ljmp
xor
cwtl
in
pop
rcrl
cld
xchg
or
rcr
cld
jg
jecxz
mov
pop
sarl
mov
rcr
xchg
aad
jns
adc
mov
int3
jl
dec
sbb
xchg
mov
cmc
pop
stc
sbb
or
xchg
mov
orb
rorl
add
mov
xchg
mov
xchg
andl
dec
push
fmuls
test
jne
andb
pusha
imul
dec
out
mov
clc
and
mov
fs
enter
jmp
nop
mov
outsb
pop
pop
push
mov
or
call
add
test
repnz
iret
pop
xor
jo
mov
je
cmp
xchg
paddusb
pushf
ja
mov
aaa
aas
scas
test
adcl
rcrl
pop
bswap
mov
outsb
dec
sbb
ja
subl
push
test
mov
add
and
mov
inc
mov
mov
pop
rcrl
xor
pop
lock
mov
imul
into
xor
or
das
outsl
icebp
jo
fs
frstor
add
jnp
pop
sub
mov
clc
push
mov
out
scas
xchg
ds
sub
daa
cltd
lahf
inc
jmp
xchg
push
arpl
nop
cmp
lock
stc
jg
clc
mov
dec
sar
or
addr16
pusha
aad
mov
icebp
test
cmp
push
jmp
inc
mov
and
sti
rcll
stc
movsb
sub
jno
xor
xchg
pop
icebp
or
fiadds
repnz
subb
sub
dec
shlb
leave
xlat
movsl
mov
int3
xor
mov
and
je
inc
pop
dec
cmpsl
addr16
mov
ret
pop
aas
imul
out
or
inc
add
in
hlt
mov
test
xchg
mov
adc
scas
and
iret
jno
sahf
pushf
rcl
sub
jne
mov
fs
or
push
inc
mov
xchg
in
fldt
mov
ret
jp
mov
rcrl
mov
fldenv
xchg
sahf
mov
push
stos
jb
mov
jl
xchg
ds
mov
cmp
clc
or
adc
add
pop
cmc
out
lcall
xor
cltd
mov
loop
mov
out
cmp
inc
add
cmp
push
mov
add
clc
mov
cmp
or
dec
pop
push
loop
mov
fisubs
pop
imul
sbb
ss
or
cld
inc
push
addl
pushf
dec
xor
push
mov
mov
in
and
pop
mov
adc
test
into
pop
push
mov
inc
loopne
xchg
je
hlt
mov
repz
xlat
cmp
hlt
mov
cmpsb
andl
inc
mov
je
movsb
dec
and
rorb
push
jb
push
jecxz
dec
out
and
fadd
insl
pop
repz
push
jge
mov
xchg
insl
pop
adc
push
lahf
mov
mov
fdivrl
sbbl
mov
cmpl
lods
xchg
imul
ja
fldt
or
daa
movsl
mov
lahf
lahf
mov
add
es
add
lcall
sbb
icebp
stc
enter
scas
mov
rol
jbe
in
pop
adc
dec
dec
xchg
or
rol
and
into
sahf
pop
jmp
or
push
mov
or
pushf
ret
dec
or
xlat
mov
aam
dec
addl
sbbb
into
lahf
enter
es
loop
movsl
sbb
pop
push
xorl
and
pop
xchg
adc
push
mov
ja
mov
inc
mov
imul
cltd
push
push
mov
cmp
push
dec
push
pop
aad
push
loop
pop
inc
ljmp
arpl
pop
dec
lods
ds
jmp
sub
imull
xchg
xor
cmpsl
jmp
dec
lock
xchg
test
cmp
cltd
mov
push
ja
inc
mov
push
insb
mov
subl
inc
mov
pop
outsb
fadd
inc
pop
jbe
xchg
lcall
push
jbe
lock
shll
lea
mov
inc
vrsqrtss
and
or
lods
or
cmp
mov
test
pop
fwait
insb
dec
mov
cmc
push
out
rcrb
push
cmp
pop
dec
daa
push
rorb
xor
mov
lcall
jl
push
jl,pt
cmp
cmp
or
lretw
movsb
std
out
push
ljmp
out
pop
jecxz
jp
sbb
push
fsubrs
aad
fldcw
cmp
mov
das
sub
xor
stos
mov
xor
imul
push
cmp
fstpl
aas
loope
adc
out
insl
mov
dec
adcl
cmpsl
add
pop
into
or
into
sub
cmp
lds
dec
fwait
push
test
mov
nop
icebp
imul
pushf
mov
mov
into
popa
std
jmp
loope
nop
and
fwait
jl
fdivrs
pop
cmp
or
fsubl
cmp
sbb
test
pop
cmc
jge
fisubl
rcr
mov
sbb
outsl
andb
loop
xchg
mov
pop
mov
add
daa
sbb
ss
out
jp
mov
inc
mov
jle
mov
jecxz
sub
adc
adcb
aaa
and
inc
xchg
xchg
sbb
cmp
adc
lods
jecxz
rcrl
mov
imul
cmpsl
enter
mov
lods
jb
lcall
out
push
jb
sub
mov
xchg
add
inc
testb
or
cmp
orl
mov
shl
or
pop
test
pushf
ficompl
test
jecxz
fwait
daa
jno
or
xorl
pop
ja
jns
sub
pushf
mov
inc
ret
int
jo
das
and
mov
adc
mov
pushf
xchg
xchg
and
dec
out
mov
add
test
xchg
dec
fstl
jne,pn
jae
movsb
add
jle
incb
imul
mov
jl
dec
jecxz
sub
mov
jns
lds
xor
xchg
fcoml
pushf
inc
add
jns
in
in
mov
inc
mov
cs
xorb
and
xor
jecxz
mov
add
adc
sub
inc
inc
mov
push
fwait
stos
or
ljmp
mov
xchg
inc
dec
jb
ja
cmpsb
cmp
daa
test
mov
int3
mov
jle
cmp
out
xchg
fdiv
xor
aas
fwait
ret
mov
lods
cmp
dec
xchg
dec
lcall
or
push
push
mov
mov
ficoml
xchg
test
xchg
les
jbe
mov
cmc
or
jg
dec
jno
push
or
push
mov
imul
orl
shrl
xchg
mov
push
jno
mov
and
out
xchg
pop
fisttpl
arpl
int
pop
fwait
inc
adc
mov
mov
mov
imul
int3
mov
xchg
or
imulb
pop
push
lock
mov
jo
lcall
or
ja
sarl
ja
sbb
dec
add
jmp
ret
inc
setae
mov
outsl
adc
or
fmull
or
cmpsb
xchg
jp
jle
stos
js
cmp
mov
imul
enter
mov
addr16
lret
sbb
cmp
cld
push
fwait
pop
sbbl
jecxz
add
mov
les
test
mov
jno
inc
add
cmpsl
mov
push
jb
ja
push
adc
test
imul
js
mov
test
idivl
call
inc
jmp
cmpsl
pop
insb
jg
movsl
std
fwait
out
inc
pushf
xchg
xchg
ss
popfw
push
pop
dec
pop
xorb
xchg
insl
nop
sahf
mov
outsl
push
jmp
or
das
pop
cmp
lahf
imul
mov
clc
cmpw
ret
jae
inc
add
pop
addr16
mov
xchg
lcall
jg
outsl
inc
pop
movsb
push
pushf
pop
jns
int
pop
call
add
mov
cmc
ret
push
mov
pop
adc
mov
add
inc
mov
or
or
mov
iret
stc
sub
cld
xchg
xchg
add
push
mov
sbb
jbe
negl
xor
mov
inc
sbb
imul
mov
xchg
mov
push
test
mov
push
mov
jl
movsl
mov
dec
mov
xor
dec
jecxz
cmp
mov
xchg
test
xchg
lcall
xchg
mov
dec
popa
add
and
jb
out
idivl
xchg
mov
sahf
xor
pushl
ja
inc
ja
and
sbbb
pop
xchg
push
mov
and
stos
mov
orb
push
or
testl
mov
sbb
das
out
mov
adc
cmc
lret
xchg
xchg
lret
lds
add
jecxz
idivl
rcrb
pop
jb
inc
mov
jp
arpl
dec
xor
sbb
arpl
mov
in
inc
in
push
cmp
xchg
add
inc
out
dec
sbb
xchg
das
lods
xor
add
lret
push
dec
or
inc
cmp
cmp
xchg
fs
dec
fildl
rolb
dec
aas
sub
out
fdivr
test
aad
nop
adc
dec
ret
mov
add
xor
add
daa
dec
push
or
add
sub
add
dec
pop
fwait
adc
sbb
aaa
aaa
mov
out
hlt
filds
inc
mov
test
imul
shlb
lock
xor
mov
mov
mov
adc
icebp
push
mov
in
xchg
imul
aas
add
rcrb
mov
rorl
lcall
icebp
adc
pop
aaa
call
lock
add
dec
add
pushf
and
mov
fcmove
push
pop
es
pop
dec
loopne
je
insb
mov
call
daa
js
and
ljmp
imul
cmp
popl
xlat
pop
iret
cli
je
xchg
and
stc
imul
adc
fwait
lcall
inc
pop
dec
dec
loope
leave
cwtl
adcl
lods
enter
ficoms
and
add
sub
xchg
mulb
and
fwait
inc
and
imul
mov
adc
daa
mov
adc
xor
subl
mov
sbbl
ror
xor
fildl
out
sub
movsb
nop
loope
mov
daa
or
rcll
mov
imul
or
in
mov
bound
mov
mov
je
movsl
int
mov
push
push
dec
mov
xchg
mov
or
in
fsubrp
test
mov
shlb
cwtl
test
lcall
fcmovu
mov
leave
jge
dec
test
or
aaa
test
sti
outsl
addr16
mov
push
mov
xor
add
nop
fwait
jecxz
pop
movsl
and
stc
in
and
mov
jno
mov
enter
xchg
jge
push
mov
and
dec
pop
pop
enter
add
sbb
xchg
push
daa
movsl
stc
sbb
popa
pop
mov
inc
sbb
mov
mov
mov
mov
cs
outsl
clc
sub
ljmp
stc
icebp
cmc
pop
jns
or
pop
xchg
orps
sub
sbb
jo
fwait
das
out
xchg
sbb
bound
pop
les
sbb
sub
aad
push
scas
xor
mov
clc
jns
push
add
jbe
movsl
test
mov
pop
dec
jmp
inc
test
xor
js
daa
cmp
std
je
imul
push
dec
je
andb
cltd
pushf
aas
das
or
adc
arpl
addl
leave
jl
xchg
out
lds
repnz
aam
add
pop
jb
jb
or
mov
mov
shrl
mov
mov
dec
icebp
xchg
in
push
pop
lock
sar
mov
fcompl
pop
mov
iret
hlt
push
sbb
push
xor
stc
aad
ja
push
into
add
int
fwait
push
in
pop
stos
cmpsl
shrb
push
mov
dec
dec
dec
shll
in
mov
push
xchg
imul
repnz
add
lahf
pushf
xchg
cmp
lea
lock
push
mov
mov
pop
xor
dec
mov
mov
mov
add
pop
fimuls
and
xchg
pop
pop
enter
mov
pop
jo
mov
ret
int
adc
iretw
push
push
mov
sub
sarb
dec
gs
enter
push
fildl
daa
shlb
fwait
addr16
cmp
in
ss
fwait
dec
pop
pop
imul
fwait
lock
movsl
jp
fs
sahf
xlat
lcall
cmpsb
fcoml
imul
mov
roll
out
imul
out
daa
outsl
fs
test
fwait
hlt
add
jne
mov
scas
pusha
jo
fwait
sbb
inc
xchg
loop
into
xchg
and
push
stos
inc
jg
repnz
sbb
call
aas
cmp
cmc
daa
push
aam
int3
mov
and
mov
out
adc
mov
imul
cmc
lret
mov
loop
out
and
shll
jne
ja
clc
mov
decl
in
mov
sub
mov
adc
addr16
push
add
cltd
xchg
dec
mov
in
ja
jmp
jb
pushf
lcall
or
cmpsl
adc
mov
addr16
fwait
inc
clc
xor
mov
and
rclb
mov
test
adc
or
adc
jl
inc
inc
sub
ljmp
sarl
mov
cmp
sarb
in
test
inc
xor
pop
sub
lea
and
fwait
push
push
dec
xor
lods
cltd
fwait
push
add
push
dec
inc
pop
xchg
stc
stc
fdivrl
or
fcmove
push
jo
repnz
addr16
dec
das
push
scas
fbld
test
mov
in
push
in
mov
mov
fimuls
fiaddl
test
lea
out
mov
xchg
push
shrd
out
insb
push
cmp
enter
pushl
pop
mov
jle
push
mov
outsl
pushf
mov
lock
xor
cmpsb
xor
shll
mov
movsb
test
ss
xchg
push
mov
addr16
mov
aas
pop
out
stos
dec
ljmp
and
jmp
inc
popa
fisubrs
repnz
and
int3
sahf
aas
popa
and
xorb
push
repz
xchg
push
imul
xchg
in
xchg
add
icebp
leave
hlt
jl
ljmp
inc
sbb
mov
adc
and
or
nop
les
mov
shlb
dec
dec
jnp
sbb
stos
jnp
and
lock
mov
fwait
jl
adc
icebp
adcb
push
cmp
jmp
xor
idiv
mov
sub
mov
jne
cmc
pop
clc
push
jle
push
out
sub
mov
xor
dec
dec
in
icebp
bound
mov
xor
xchg
inc
repz
sbb
popf
mov
mov
sti
mov
jp
insb
outsb
inc
jae
adc
mov
dec
js
lret
sbb
add
lods
sbb
and
in
mov
add
or
jg
inc
aam
cwtl
je
pushf
imul
mov
dec
add
shlb
loop
sub
adc
pop
pop
xor
mov
loope
cmp
mov
shlb
dec
adc
and
lods
adc
xchg
mov
add
clc
xchg
fwait
jo
mov
pusha
add
pushf
iret
push
or
in
pop
repnz
xchg
pop
mov
out
test
bound
dec
add
jmp
pop
mov
lret
addr16
mov
pop
mov
mov
stc
dec
add
stc
or
mov
mov
sbb
sbb
xor
jl
xor
stc
in
je
orl
addl
xchg
cltd
pusha
xor
shlb
jle
jns
sub
scas
fists
bound
or
adc
jne
cmp
and
gs
xchg
and
jo
mov
sub
sbb
sbb
cmp
cli
jmp
add
negb
loop
aad
inc
ret
pop
or
mov
push
xchg
lods
jg
nop
fwait
pop
sub
sub
sub
cwtl
fwait
and
jg
pop
push
add
jge
fmuls
out
push
pop
sbb
imul
enter
or
add
aas
clc
jnp
icebp
mov
fadd
add
dec
or
shlb
sbb
or
repz
push
je
jge
shrb
loop
imul
jp
aas
jne
loop
jg
push
mov
mov
dec
jno
inc
xlat
or
inc
inc
mov
fmull
sbb
fcomps
fistpll
and
mov
fnop
inc
jmp
mov
xorb
xchg
std
loope,pt
mov
test
and
gs
or
pop
sbb
nop
inc
out
mov
dec
adc
lret
inc
ljmp
dec
mov
pusha
jg
ja
daa
xor
bound
mov
mov
and
cmp
push
adc
mov
inc
cmpsl
jmp
imul
sub
hlt
cwtl
cmpsl
imul
jp
mov
lock
rcrb
fwait
aad
add
shll
xor
push
clc
add
dec
fisttps
mov
xchg
jne
cmpsb
fisubl
sbb
push
shlb
jmp
sub
rep
xor
test
or
add
push
mov
mov
xchg
dec
ja
pop
pop
add
sbb
enter
imul
xchg
push
push
sbbl
ljmp
mov
cmc
jnp
lods
inc
inc
fs
fbld
popf
xchg
pushf
addl
lock
adc
jle
pushf
shr
iret
test
pusha
popf
out
fprem1
aas
push
stos
mov
pushf
fdivl
add
push
mov
adc
xchg
xchg
jbe
jne
dec
dec
and
push
out
outsb
cmp
addl
fwait
adc
lahf
scas
mov
imul
pushf
in
add
pusha
add
fnstenv
jle
push
cli
loopne
mov
in
mov
flds
sbb
jns
mov
lahf
mov
cwtl
xchg
xchg
roll
mov
push
and
addps
fwait
in
aas
insb
sbb
cmp
enter
inc
shl
outsl
xchg
mov
pushf
mov
mov
int
test
sub
clc
aas
addr16
ljmp
int
nop
je
push
or
call
xchg
xor
jns
ret
jle
aam
adc
push
ds
aaa
jae
jns
pop
inc
repnz
fnstcw
repz
and
push
and
lods
mov
ficompl
xchg
inc
add
mov
inc
enter
and
daa
or
out
jecxz
sbb
cs
hlt
leave
xor
shlb
sahf
cmp
inc
hlt
mov
test
iret
lods
dec
or
repz
and
push
cmp
lret
add
xor
xchg
push
push
jle
and
repnz
je
ds
jle
loopne
cltd
imul
movsl
add
jg
mov
scas
cltd
std
mov
pop
lea
test
xor
push
cmpb
scas
sbb
test
das
jbe
daa
sbb
add
push
and
aad
jecxz
push
leave
add
xchg
lea
pop
insl
xchg
push
push
jmp
pop
and
fcmove
cmp
cmc
arpl
cmp
fs
aad
pusha
dec
sub
jg
std
mov
cmp
mov
orb
jmp
jns
or
fdivrs
push
or
nop
or
out
into
mov
jo
stos
cmpsb
rcrl
dec
xlat
push
jp
mov
in
add
xchg
mov
sbb
data16
mov
mov
sbb
hlt
arpl
daa
or
cmc
int
jecxz
insl
pop
cltd
sbb
rcr
out
sbb
mov
jae
ja
push
push
or
inc
enter
pop
repz
out
mov
add
mov
inc
sbb
ja
mov
cmp
mov
or
out
popa
pop
sub
mov
fimuls
outsb
lds
stc
bound
xor
mov
xor
jge
and
aam
data16
xorb
inc
enter
cmp
mov
cs
and
imul
jnp
cmp
ja
pushf
cmc
pop
mov
adc
push
sub
lds
sbbl
cmc
imul
test
inc
fadds
mov
mov
push
in
and
mov
xlat
push
xor
js
mov
mov
jecxz
je
dec
fldenv
rcrl
sub
push
push
movsb
cltd
cld
lds
stc
cmp
popf
aas
subl
repnz
pushf
pop
decb
fisubl
jnp
lock
ja
dec
data16
scas
cld
mov
add
mov
mov
shrl
mov
cmp
inc
adc
fcoml
cltd
lods
add
jle
push
inc
xchg
pusha
pop
rclb
cmp
adc
jnp
mov
mov
out
into
dec
gs
orb
push
sarb
push
jmp
mov
lea
imul
push
push
ljmp
adc
push
cmpb
jbe,pt
rorl
into
int
inc
cmp
rcrb
push
imul
setg
xlat
mov
test
or
das
xor
push
int3
sbb
bound
ja
fs
aad
jmp
cmp
sahf
loop
sbb
pop
dec
scas
add
push
jl
push
test
aam
cwtl
sbb
lcall
mov
sti
leave
pusha
ret
mov
inc
mov
mov
or
cltd
cmc
fadd
scas
inc
mov
mov
filds
icebp
jae
lods
mov
sub
xchg
adc
mov
mov
inc
inc
lret
adc
aaa
cmp
ror
mov
xor
cmp
popf
push
jb
inc
mov
mov
xchg
fsts
xor
cmpsl
and
push
rcrb
imul
jg
pusha
pusha
cmpb
ficomps
outsb
pop
pop
in
stc
xlat
fcoml
ficompl
cmp
inc
lahf
imul
scas
inc
adc
cmp
dec
ja
lock
nop
stc
fwait
sbb
and
ret
sub
mov
ret
sti
cltd
outsl
cmp
pop
push
icebp
adc
cs
or
ret
cmpsl
push
stos
mov
sbb
inc
scas
push
mov
cmp
xlat
pop
jo
cmp
cmp
addr16
jno
and
hlt
ret
test
mov
xor
mov
and
jae
adc
and
into
push
das
pushf
stc
pop
jp
cmp
mov
cmpsb
xchg
pusha
push
mov
out
in
mov
jnp
cmp
nop
or
shufps
std
sbb
es
push
fbstp
cld
cld
and
xchg
jns
lret
aas
push
mov
sbb
aas
addr16
add
jnp
les
popf
mov
push
ljmp
mov
cld
ja
aas
pop
ror
jns
packssdw
cmp
test
or
add
mov
adc
mov
fcmovne
pop
mov
jb
fwait
xor
push
mov
mov
leave
pop
jp
xchg
test
ret
rclb
cmpsl
add
xchg
es
in
dec
mov
mov
lock
add
pushf
fsubrs
lcall
movsb
inc
jp
pop
pop
sub
lret
pop
push
enter
fwait
jbe
jl
pop
pop
in
dec
sub
stc
inc
movsl
test
jb
fstpt
cmpsb
sbb
sub
add
adc
js
cmpsl
jmp
scas
stc
jl
push
jecxz
fwait
push
mov
xor
cmc
add
dec
hlt
jmp
in
cltd
hlt
xlat
fwait
lcall
jo
cs
std
imul
arpl
xchg
xor
push
or
cmpsb
push
outsb
gs
mov
ja
mov
inc
clc
add
subl
mov
mov
cmp
shr
dec
dec
imul
xchg
loop
mov
jns
fimuls
rcl
imul
xor
pop
mov
adc
cmp
cmpl
dec
jp
push
pop
jmp
and
aas
loopne
cmp
sbb
sbb
jo
imul
xchg
out
addr16
xor
fimull
lret
or
daa
xchg
jbe
insl
fcmove
pop
xchg
out
push
jecxz
je
xchg
cld
xor
jecxz
add
addr16
dec
mov
test
mov
push
sub
mov
mov
add
arpl
adc
pop
xchg
inc
cmp
push
push
fwait
mov
mov
mov
push
fnstenv
sbb
jecxz
xorb
test
pop
cmp
sbb
lock
add
ret
pop
push
or
subb
lret
lcall
add
inc
movsb
imul
mov
pop
test
and
pop
cmc
aad
jnp
pop
hlt
sbb
jg
sbbb
pop
inc
adc
add
adc
movsl
dec
mov
xchg
mov
lock
xchg
adc
or
shrl
push
cli
lcall
pop
sahf
test
loop
or
lds
loop
xor
mov
mov
fdivs
add
jmp
xlat
inc
jno
mov
push
mov
or
add
loopne
scas
push
sbb
sub
mov
jl
aam
repz
cs
push
addr16
mov
mov
cwtl
adc
ret
push
sub
repnz
jge
pop
xchg
xchg
data16
xchg
clc
sbb
fisubrl
sarl
ficoml
mov
or
test
add
sub
xchg
mov
dec
sub
sub
or
push
fwait
inc
mov
pop
mov
cltd
jns
jne
push
sbb
xorl
cmpsb
cmp
xchg
es
jno
and
or
xor
adc
les
xchg
fcmovbe
sub
lahf
stc
lods
out
ret
mov
pop
sub
inc
push
mov
std
ret
mov
arpl
lcall
or
push
add
shll
mov
adc
out
inc
or
in
cwtl
cmp
divb
mov
push
loopne
sbb
mov
jecxz
pusha
mov
xchg
es
in
push
and
addr16
repnz
filds
sbb
mov
fimuls
das
mov
leave
dec
sbb
ja
add
call
pop
dec
outsl
adc
jg
faddl
pusha
or
icebp
xchg
icebp
push
sti
addr16
xchg
cld
add
in
sbb
xchg
fwait
inc
fimuls
int3
mov
lahf
sub
xchg
pushf
clc
jg
int3
les
lcall
and
out
mov
push
mov
xchg
scas
or
je
mov
add
mov
jecxz
sahf
xchg
mov
int
dec
data16
sbb
cmp
jecxz
cmp
shrb
sbb
orb
push
pop
pop
loop
xor
and
pushf
je
mov
sahf
mov
int3
cwtl
xor
pop
pushf
imul
inc
mov
cwtl
adc
adc
push
je
fwait
sub
sub
hlt
mov
mov
mov
push
imul
jp
mov
outsl
lcall
mov
es
jno
xchg
loope
mov
fidivrl
imul
sub
out
xor
dec
adc
lahf
int
xor
scas
cld
pop
mov
dec
test
and
rcrb
xor
leave
mov
jecxz
jnp
subps
shlb
jo
mov
repnz
sub
inc
fwait
lcall
pop
sub
pop
cmc
in
ljmp
or
icebp
popf
sbb
and
test
and
scas
ds
or
jb
loope
cmc
js
mov
xor
test
cltd
ja
xlat
cmc
xorb
cli
sub
mov
add
lock
pop
sbb
mov
jp
cld
sbb
mov
pushf
mov
mov
push
mov
in
rorl
test
jecxz
test
addr16
dec
push
pop
sub
sub
mov
out
or
repnz
push
or
add
jns
mov
out
lea
xchg
cmp
push
lea
push
and
mov
add
and
in
inc
lcall
iret
test
cmp
mov
mov
cmpsl
cmpb
paddb
faddl
mov
pushf
out
pop
pop
add
pop
movsb
pop
stos
call
mov
les
out
jne
aas
jns
and
mov
mov
cmpsb
mov
test
sub
and
mov
inc
idivl
js
dec
xchg
out
mov
fistl
add
mov
lds
movq
sub
andb
ja
and
into
push
xor
and
push
fnstenv
sbb
fs
ffreep
test
pusha
fdivrl
test
cwtl
add
dec
and
adc
hlt
in
jb
andl
repnz
adc
mull
rorl
ret
shll
sbb
fstpt
loopne
je
testl
or
cmp
into
xchg
mov
scas
push
sub
mov
xchg
xchg
mov
imul
loopne
in
or
xorb
and
pop
repz
xor
xor
repz
rorl
loope
insl
stos
setp
mov
in
or
pop
adc
mov
psubsb
pop
mov
stc
and
lret
cmp
jns
fs
aaa
int3
nop
jmp
mov
fcompl
mov
xchg
xchg
mov
dec
into
and
mov
and
sub
dec
leave
mov
pop
adc
mov
imul
jae
xchg
jecxz
sbb
imul
clc
lret
jbe
out
jae
shl
cmp
mov
sti
or
test
pop
pop
aas
jl
div
push
js
mov
lods
imul
xchg
cli
fs
stos
add
and
fs
data16
mov
mov
jo
adc
cmpl
and
pop
aam
pop
mov
dec
lock
mov
mov
aaa
sub
adc
push
lret
adc
int
mov
add
jbe
cli
inc
xchg
cmpsl
add
pushf
inc
ljmp
push
imul
mov
scas
loop
mov
mov
pusha
outsl
mov
mov
pusha
inc
mov
fstl
pop
jns
and
lock
mov
mov
or
mov
pop
imul
sbb
adc
gs
pop
call
pop
call
cs
cmp
push
in
dec
pop
test
cld
adc
outsl
fiaddl
idivl
loope
lds
jg
sbb
xor
popf
into
int3
fiaddl
pushf
mov
sahf
dec
sbb
mov
jge
shrb
dec
jno
pop
push
sbb
test
push
push
xlat
mov
xchg
mov
sub
add
add
inc
out
stc
xchg
xor
mov
fwait
enter
mov
push
xchg
int3
mov
test
aad
sbb
repz
jnp
test
leave
aad
xchg
imul
loopne
and
add
pop
sub
mov
push
das
jmp
in
out
leave
xchg
xor
xchg
call
insb
mov
lock
mov
imul
out
testl
popf
push
sbb
sub
idivl
insb
lods
sbb
les
xchg
scas
testl
xchg
lods
cmc
jecxz
loop
mov
add
adc
fiaddl
push
xor
xor
push
pop
jb
loopne
imul
add
xlat
sbb
dec
ja
rolb
mov
pop
or
dec
adc
inc
lahf
ja
inc
sub
jg
fucom
cmp
and
cltd
and
negl
xchg
enter
call
mov
lret
xor
addr16
int3
sarb
fstps
push
aad
aaa
adc
pop
dec
mov
leave
loop
push
sar
sub
out
mov
xor
push
int
ljmpw
dec
lcall
ucomiss
mov
fwait
in
mov
scas
pop
lds
mov
sub
cwtl
fwait
popf
jg
xlat
lds
mov
addl
lahf
and
xchg
rclb
insl
mov
ja
mov
fisttpl
adc
cwtl
mov
in
jne
ret
das
and
out
hlt
adc
mov
shll
scas
cmp
lcall
inc
dec
add
jnp
cmp
test
test
xor
js
xchg
fstpl
inc
push
sbb
roll
or
mov
xor
inc
mov
mov
adc
cwtl
sahf
mov
mov
mov
push
mov
cltd
or
xchg
sbb
repnz
test
mov
mov
pop
sti
inc
int
push
xchg
ja
add
mov
out
imul
jae
nop
scas
pop
jno
lret
cwtl
iret
fidivs
push
xchg
pop
xor
pop
mov
cld
mov
imul
scas
xor
mov
xchg
jnp
inc
jecxz
mov
xchg
push
addb
arpl
cmp
mov
pop
je
inc
xor
mov
sub
jecxz
notl
adc
dec
rcl
pusha
fsubl
add
lcall
out
fcoms
jno
popf
jecxz
repnz
lock
jnp
adc
mov
cmpsb
dec
shlb
dec
add
sahf
xchg
test
sub
sti
push
movsb
add
hlt
xchg
ret
out
shlb
dec
mov
mov
in
je
pop
jmp
dec
aad
xchg
movsl
pop
mov
xchg
mov
push
jge
cmpsb
pop
mov
repnz
cmc
dec
mov
jno
rcrb
xor
imul
decl
cmp
and
adc
mov
or
mov
push
inc
popf
repnz
or
les
push
into
js
add
mov
cmp
sbb
jecxz
and
loopne
stc
cmp
data16
fs
in
hlt
sbb
femms
xor
hlt
jno
cmp
ret
scas
or
cmp
sub
les
inc
mov
push
push
out
xchg
dec
mov
outsb
sub
daa
xlat
mov
or
push
lcall
es
xor
into
ja
mov
sbb
pop
ljmp
sbb
lcall
and
jmp
xor
or
sarl
fwait
pop
dec
ja
stc
flds
xchg
mov
mov
sub
clc
ja
fcompl
sbb
jp
xor
aad
sbb
or
test
cmp
add
daa
xchg
psubw
jae
mov
iret
push
cwtl
adc
sti
sub
fstps
pop
inc
push
push
mov
lock
lret
pushl
imul
cmp
inc
ljmp
sub
fwait
out
xchg
ja
es
mov
outsl
xchg
ja
dec
adc
fwait
bound
xchg
test
mov
xlat
mov
mov
or
shlb
xor
jno
mov
stos
lds
nop
nop
insl
sbb
xor
mov
leave
aas
sub
jecxz
mov
inc
push
and
xor
add
ds
xor
outsl
pop
push
jne
int3
sar
inc
xchg
scas
in
inc
push
push
mov
movsl
inc
ret
mov
adc
push
xchg
inc
sbb
mov
inc
cmc
and
add
add
pop
in
js
imul
test
popa
mov
adc
sti
xor
pop
jo
jle
mov
mov
jbe
mov
and
mov
ficoml
xchg
aam
orl
add
push
gs
enter
imul
inc
pop
sarl
aad
or
loopne
out
sbbb
shll
push
sub
cld
fwait
std
cld
hlt
push
mov
cltd
push
pop
aas
addb
stc
push
dec
movsl
and
dec
push
cwtl
out
sub
les
and
adc
dec
daa
xchg
test
sbb
or
mov
sub
scas
in
shll
ret
cmpsl
sahf
stos
test
imul
dec
gs
push
xchg
xor
cld
fdivrl
fistpl
sbb
mov
jno
daa
imul
outsb
aas
and
xor
jo
out
test
int
jne
lods
xor
adc
mov
ja
sub
loope
jp
fs
jns
or
push
movsb
xchg
addr16
hlt
and
repz
repnz
stos
imul
loop
xor
and
cmp
fsubrl
xchg
mov
sub
fsubs
gs
mov
shll
icebp
jecxz
and
test
negl
and
dec
dec
outsl
pop
out
cmpsb
xchg
or
add
loopne
xlat
je
sub
mov
out
das
sub
inc
addr16
imul
sub
call
leave
and
mov
and
fisubrs
inc
mov
rolb
cli
jecxz
xchg
ja
idivb
mov
xor
lcall
mov
movsb
pop
les
and
out
enter
inc
xor
flds
push
push
pop
or
and
fnstenv
mov
sbb
dec
xchg
cmc
movb
cmp
sbbl
add
in
aas
jl
rcl
cmp
test
sbbb
ljmp
and
mov
imul
add
test
sti
cltd
sbb
fistpll
gs
pop
lds
mov
cltd
mov
bound
cmp
mov
pop
fwait
aam
push
fistpl
imul
sbb
mov
add
lea
xchg
ret
pop
add
stos
xor
and
dec
cs
push
mov
cmc
test
lock
xorb
outsl
imul
out
cmpsb
push
mov
xor
enter
out
sub
and
or
aam
sub
repnz
aaa
addr16
movsl
pop
xor
mov
aam
sbb
push
jbe
iret
adc
int3
dec
addr16
push
jbe
inc
fwait
pop
mov
mov
lock
mov
add
push
mov
iret
mov
int3
leave
lret
push
daa
ror
out
scas
outsl
or
lock
adc
sbb
mov
sub
test
movsb
stos
jecxz
or
pushf
and
add
mov
bound
outsl
loopne
aas
repz
jecxz
push
mov
rorl
pop
sbb
insb
aas
lods
ja
mov
mov
pop
imul
mov
sti
mov
or
cmc
lea
into
mov
fcomip
imul
jb
cld
and
test
repnz
cmpsl
fs
rorl
inc
out
push
adc
xchg
ja
out
mov
shll
and
cmp
pop
stos
mov
xchg
push
icebp
stc
outsb
jne
sbb
imul
sub
mov
inc
mov
dec
dec
aam
fwait
adc
je
cmp
add
les
loope
fsubl
mov
fiadds
or
jecxz
insl
mov
xor
mov
push
movsb
pop
xchg
fstps
pop
adc
cmpsl
outsl
pop
mov
cld
ficompl
nop
pop
aaa
add
add
hlt
jle
out
add
mov
xchg
push
mov
mov
mov
cli
xchg
add
pop
xor
aad
and
out
gs
mov
mov
add
test
and
je
mov
xchg
pop
jge
pop
test
roll
stos
mov
jno
cmp
fs
ja
dec
clc
jecxz
adc
aam
lahf
xchg
and
xchg
arpl
jae
test
test
lods
jl
push
lock
xlat
fwait
pop
rcrb
dec
xchg
cmp
or
add
rol
mov
shlb
or
inc
iret
pop
mov
addr16
cmpb
push
scas
jb
sbb
inc
mov
rorb
imul
int3
outsb
repnz
push
inc
pop
mov
push
and
xchg
mov
add
inc
pusha
xchg
test
mov
clc
mov
cld
xchg
cmpl
dec
sub
addr16
mov
cmp
xchg
arpl
adc
pop
jns
shll
jecxz
push
mov
pop
mov
xchg
stc
sbb
push
fcomp
sbb
lods
fldcw
nop
nop
lret
addr16
int
dec
test
sahf
jle
clc
add
mov
cmc
shll
fistpll
cmp
push
add
mov
pop
jp
pop
in
xchg
and
mov
ja
mov
xlat
lock
sti
aas
xchg
ja
jp
inc
xchg
pop
cmp
mov
push
ret
push
test
sbbb
xchg
rol
pop
or
leave
outsl
or
add
inc
xchg
push
xor
cli
pop
jle
push
push
xchg
leave
inc
int
loopne
lds
test
mov
repz
bound
rclb
sub
add
fwait
mov
stos
es
ss
bound
jns
pop
and
mov
or
jecxz
cmp
adc
js
sahf
dec
push
imul
in
mov
lea
cmp
lods
es
ja
gs
sbb
or
mov
jo
xchg
ja
inc
add
adc
mov
rorb
lods
add
dec
icebp
data16
inc
jle
jnp
addb
shlb
push
ficoms
or
daa
fdivrp
lret
lock
push
xor
imul
mov
cmp
xchg
xorl
inc
imul
outsl
les
aas
aas
int3
enter
cli
xor
or
popf
ret
pushf
mov
mov
pop
pop
sahf
xchg
add
push
add
sub
test
sbb
mov
in
sbb
jne
push
in
pop
dec
lret
jns
lock
pop
call
mov
mov
lds
or
shll
xchg
popf
and
mov
cwtl
pop
sbb
adc
sub
add
incl
nop
pushf
stos
xor
or
mov
xchg
pop
pop
xor
into
push
mov
dec
mull
cmp
adc
nop
or
imul
sub
push
cld
dec
outsl
repz
or
or
or
cld
scas
je
fidivrs
lea
mov
xor
mov
push
dec
lea
mov
xchg
hlt
popa
and
xchg
in
stos
push
jnp
ja
push
aaa
xor
xor
dec
dec
pushf
lret
and
sarb
popf
xchg
xchg
cmp
pop
push
in
iretw
jecxz
arpl
inc
daa
shr
cmpsb
punpckhdq
cmc
cld
pop
mov
adc
lds
pop
cmp
add
push
mov
mov
fwait
jmp
andl
push
mov
scas
inc
xchg
icebp
mov
rcrl
pop
into
fs
inc
fcompl
in
lea
xor
lret
mov
and
stc
sbb
imul
ja
xchg
sti
and
add
push
mov
mov
push
mov
sbb
cwtl
enter
or
movsl
in
xchg
roll
and
aas
inc
stos
lods
push
xor
add
outsl
fisttps
xlat
xchg
mov
lahf
adc
test
cmp
ss
in
jne
aam
adc
lahf
rorb
sbbb
test
xor
push
xchg
xchg
imul
sbb
mov
fwait
mov
xor
sbb
or
pop
call
cmc
inc
push
add
das
pop
adcb
push
cltd
lea
xor
nop
inc
lds
repnz
inc
shrb
push
xor
pop
dec
outsl
pushf
and
add
sbb
xchg
mov
ret
sbb
jmp
add
fidivl
mov
ret
xchg
repz
mov
adc
xor
out
xchg
add
hlt
ror
pushf
cmp
neg
mov
xchg
push
jno
jecxz
idiv
sahf
in
jo
insl
movsl
sub
fisttpl
add
add
xor
pop
ret
mov
lds
repnz
out
fcoms
mov
lods
push
stc
insl
jae
out
cwtl
movsb
insl
repz
or
shrl
shr
mov
fbld
mov
std
jae
leave
dec
gs
loopne
dec
inc
mov
lahf
sbb
ja
pushf
loopne
mov
push
enter
xchg
mov
dec
cmp
js
fcmovnbe
xor
idivl
stos
xor
jle
lock
pop
mov
mov
dec
mov
adc
adc
stc
loope
push
insl
xor
in
push
jb
xchg
in
jl
inc
cmpsl
dec
or
pop
ja
inc
gs
inc
cmp
mov
outsl
rcrb
call
mov
push
sub
imulb
lcall
or
or
inc
push
cwtl
mov
lods
xchg
gs
enter
ja
xchg
in
inc
sbb
mov
scas
push
inc
xchg
insl
pop
inc
lock
aaa
ja
xchg
std
dec
push
popf
dec
je
adc
mov
stos
ret
mov
out
lea
mov
lods
aad
pop
adc
mov
xchg
push
js
xchg
fbstp
dec
test
mov
gs
movb
fwait
ror
mov
adcl
xchg
push
or
jp
mov
dec
enter
dec
adc
roll
xchg
scas
xchg
ds
out
xchg
lcall
in
test
stos
mov
xchg
and
pop
addb
popf
mov
test
mov
cmpsl
sub
imul
aas
cmp
push
or
fs
aas
sub
dec
inc
push
mov
loope
pop
sbb
jb
push
push
imul
mov
fdivl
sbb
les
adc
idivb
imul
add
out
out
push
int
pop
or
add
ds
pop
out
jmp
mov
xor
push
xchg
movsb
dec
pop
dec
out
cmpsb
mov
xor
cmp
xor
inc
aam
arpl
adc
outsl
xchg
mov
cli
cwtl
cmc
push
or
lret
imul
xor
fldenv
xchg
arpl
cmp
xchg
mov
pop
outsl
popa
sub
pop
pop
push
movsb
jle
add
data16
xlat
arpl
mov
mov
inc
jmp
pop
decb
and
push
pop
mov
or
movsb
lock
std
or
inc
test
cmc
pop
mov
bound
mov
inc
repz
sub
cmp
and
push
mov
clc
mov
popf
packssdw
sar
mov
sti
incb
decb
add
inc
fcmovb
add
sub
enter
pop
inc
gs
fwait
and
std
pusha
mov
inc
in
mov
cli
ss
popf
fcoms
into
push
jnp
add
cltd
enter
mov
test
enter
mov
daa
test
aaa
jmp
mov
jnp
pop
scas
cs
dec
imul
fs
sahf
add
pop
mov
adc
push
daa
fimull
daa
ljmp
aaa
lahf
leave
fs
mov
scas
lods
inc
popf
fcmovnbe
in
fwait
inc
jns
cmp
fistpll
pop
xchg
xor
daa
imul
outsb
ljmp
sub
or
fcomi
je
popl
sbb
lcall
cmpsl
mov
push
cltd
aas
in
mov
clc
push
cli
popf
jae
addr16
xchg
sbb
push
and
addr16
jp
push
imul
lock
loopne
inc
daa
xor
enter
out
sbb
adc
aas
add
arpl
mov
out
jmp
test
jecxz
int
inc
pusha
add
lods
ss
pop
mov
or
testb
scas
mov
xor
mov
xlat
out
addr16
pop
negl
cmc
js,pt
inc
push
orl
out
mov
xchg
jl
inc
sbb
cmpsb
cwtl
fwait
addr16
xorl
lea
sbb
add
add
dec
hlt
xchg
dec
les
xchg
inc
ja
lock
xor
sarb
movsb
and
lds
lock
mov
cwtl
xchg
lret
xchg
lea
movsl
lret
cmp
jbe
xchg
nop
movsb
imul
mov
das
add
push
faddl
fwait
in
add
adc
pushf
jb
inc
repnz
out
test
fisubrs
ret
mov
fisttpll
call
jmp
daa
insl
es
add
dec
jecxz
mov
mov
mov
push
daa
imul
inc
into
jmp
and
jb
es
inc
movsl
in
or
fdivrs
inc
cltd
leave
inc
ret
mov
sub
push
pop
das
inc
mov
adc
and
xchg
inc
sub
xchg
sub
jae
addr16
pop
jns
test
iret
pop
fbstp
cli
out
pusha
stc
dec
cmp
hlt
movsl
push
lock
pop
testb
mov
insb
subb
push
dec
cmpsl
orb
fisttps
cmpsb
ljmp
mov
xor
mov
or
pop
int
dec
cmp
dec
lea
test
add
lods
sar
mov
aam
lcall
pop
inc
sti
jg
jmp
lcall
leave
push
testb
cltd
mov
pop
das
in
shlb
idiv
cmpsb
xchg
xchg
fldcw
cltd
call
xchg
and
insb
mov
or
out
imul
sub
adc
fisttpl
cwtl
mov
sbb
out
add
out
push
pmuludq
xchg
sub
imul
popa
xor
adc
sbb
push
icebp
call
inc
mov
aaa
popa
out
stos
in
mov
xor
dec
mov
pop
dec
data16
roll
sbbl
pop
dec
push
ljmp
sub
rolb
mov
insl
mov
and
mov
cwtl
stos
add
cltd
imul
xchg
scas
nop
scas
push
inc
subl
xor
popf
lahf
in
xor
cmp
or
mov
test
sbb
rorb
mov
cmp
fs
cmc
bound
cmc
inc
rolb
mov
rcll
xchg
sti
push
xchg
mov
in
dec
add
mov
add
and
add
jg
bswap
sub
inc
pop
fldt
out
xlat
out
scas
orl
loop
subb
mov
mov
ds
push
cmpsl
stos
or
insl
ret
pusha
sub
xor
and
addr16
sbb
cltd
fbld
xor
cmp
icebp
push
jg
das
daa
insl
fs
sbbw
and
int3
ss
mov
ds
rorb
inc
pop
loope
cld
and
lock
movsl
xchg
inc
out
adc
pop
mov
xchg
pop
addr16
mov
or
xchg
loop
add
mov
mov
sahf
xor
daa
je
lret
dec
andl
push
pop
repnz
push
mov
jb
adc
outsl
mov
cmp
sbb
adc
jg
or
in
pop
sbbl
cs
or
inc
fstpl
add
sub
xchg
mov
mov
push
stc
inc
xchg
or
mov
jle
rcrb
sub
or
mov
fistps
mov
shrb
sbb
lret
mov
push
shll
mov
mov
mov
icebp
mov
xor
dec
cmp
ret
out
aas
and
pushf
ja
and
rcrb
test
addr16
ss
imul
cmpsl
add
insl
loope
or
aas
mov
push
dec
and
push
push
dec
insl
lods
adc
pushf
and
stc
xchg
mov
and
and
cmpsb
shrd
dec
aad
adc
mov
test
pop
cmp
mov
and
rol
push
or
pop
adc
add
pop
add
pushf
aaa
mov
add
mov
mov
rorb
aad
fwait
in
rcll
xchg
hlt
fcompl
test
mov
out
pop
in
jo
sub
imul
pop
mov
fcoms
test
les
in
xor
adcl
xorl
int
xor
inc
jmp
sarl
mov
out
je
sub
rorl
mov
inc
cmp
mov
jo
out
xchg
xor
rcrl
add
insb
shll
jl
lret
pusha
in
sub
je
enter
xor
enter
fists
pop
xor
rorb
imul
popf
sub
fwait
scas
gs
flds
mov
dec
or
xchg
sahf
mov
fwait
js
xchg
fldenv
das
sbb
adc
xchg
fninit
mov
dec
jo
js
push
push
es
mov
loopne
lret
out
cwtl
outsb
inc
mov
jl
loope
cwtl
xchg
mov
mov
pop
mov
orl
dec
arpl
cmp
inc
shrl
sub
inc
push
mov
push
insl
push
dec
pop
push
or
ja
xchg
enter
adc
in
aaa
sbb
test
test
pusha
sbb
sub
mov
dec
dec
loop
pop
sarb
mov
pushf
inc
and
js
add
pop
inc
inc
xor
mov
out
mov
mov
cmp
adc
popa
idivl
out
xor
mov
pop
jb
cmp
popa
jns
cld
aas
or
xchg
in
fsubl
test
andl
pusha
ret
or
es
mov
and
insl
jnp
daa
out
add
cmp
or
xor
or
int
mov
inc
lahf
icebp
lods
push
jecxz
fsubl
pop
mov
jge
sbb
mov
xchg
mov
fcomi
shlb
iret
pop
jp
stos
fwait
stos
dec
movsl
push
filds
pop
pop
aaa
dec
add
adc
out
incb
jnp
sbb
cmpl
push
pushf
sub
mov
in
pop
clc
pusha
mov
sub
dec
mov
outsl
jmp
push
add
sbb
mov
mov
mul
js
call
leave
cmp
test
adc
sarb
pushf
test
popf
stos
pop
cmpsb
xor
mov
mov
scas
pushf
fnstenv
pop
add
shrl
pop
mov
jns
pop
cmp
push
mov
xchg
in
mov
std
loop
cmp
sub
pushf
test
adc
aaa
inc
inc
or
aaa
shl
addr16
mov
ljmp
add
test
mov
jb
ficoml
jbe
orb
or
cli
add
movsb
test
mov
cmp
mov
rcll
xlat
dec
dec
adc
int3
xchg
testl
mov
in
add
outsb
and
push
imul
mov
scas
mov
or
repz
nop
push
dec
cltd
stc
sbb
push
roll
cmp
repnz
cltd
jp
mov
dec
push
je
xlat
cmp
andl
mov
stc
dec
enter
sbb
mov
clc
fadds
mov
out
in
fwait
lret
lock
orb
push
outsl
arpl
push
imul
addl
ljmp
dec
test
jbe
mov
test
fwait
push
dec
push
cmp
inc
imul
shrb
repz
clc
adc
test
sub
loopne
add
fdivrs
push
sub
loopne
outsb
sahf
pushf
cli
xchg
inc
gs
sub
push
mov
or
repnz
fidivl
es
lahf
lock
xor
bound
xchg
imul
push
cmp
outsl
jo
icebp
sbb
cmp
add
mov
fildl
pop
stos
xlat
xor
inc
pop
add
and
mov
mulw
mov
int3
fdivp
and
negl
addl
pop
xchg
lea
xorl
mov
lahf
imul
mov
jae
test
add
negl
or
cwtl
in
pushf
jecxz
xchg
cmp
aas
dec
call
data16
add
xor
ret
adc
mov
mov
xchg
inc
or
or
and
mov
repnz
sub
sbb
ret
inc
cld
pop
les
popf
cmp
sbb
cld
xchg
push
outsb
cmpsl
jb
sbb
test
cmp
pushf
loope
ja
pop
or
iret
adc
pop
jns
xchg
lret
add
mov
inc
jmp
imul
lret
sbb
mov
fnstcw
adc
stc
je
push
mov
int3
lahf
imul
sbb
ret
mov
mov
scas
cmp
cmp
int3
jns
push
out
dec
sub
lock
inc
cmp
jne
movnti
bnd
js
mov
mov
fidivl
test
mov
push
jp
scas
arpl
dec
cltd
pop
mov
lahf
addr16
and
notl
lea
iret
xor
inc
xchg
pop
jl
lcall
mov
int
inc
imul
movsl
and
in
out
xchg
adc
imul
aaa
mov
dec
call
mov
dec
or
mov
cmc
and
icebp
mov
ret
dec
sbb
fwait
mov
into
push
adc
out
pop
adc
data16
ret
pop
add
inc
mov
lcall
push
imul
outsl
mov
push
icebp
sbb
mov
aas
scas
or
cmp
imul
cmp
mov
jnp
lret
jae
scas
int
daa
in
sahf
xor
mov
es
xchg
repz
mov
imul
jb
sbb
repnz
sbbb
mov
rcrb
testl
xchg
jp
xchg
inc
sahf
jp
inc
sti
cmp
sbb
rcrb
in
nop
popf
mov
rorl
adc
enter
add
mulb
out
jl
xor
outsl
movsb
mov
or
jecxz
jp
jae
adc
push
push
negl
mov
out
mov
insb
orb
jae
daa
inc
jl
iret
out
arpl
dec
push
imull
dec
pop
imul
ret
mov
movsb
sarl
and
fisttps
adc
mov
imul
test
repz
insb
fdivl
or
in
pop
pop
mov
mov
push
cwtl
sub
sbb
add
inc
imul
add
inc
xchg
push
mov
xchg
push
lock
add
inc
subl
mov
in
lret
cmc
mov
mov
jns
add
and
dec
addr16
sbb
shll
orb
sbb
mov
aas
sahf
dec
inc
cmp
mov
dec
lahf
in
xor
dec
lock
fnstcw
sbb
cwtl
pop
lods
repz
lock
leave
sbb
jp
imul
add
scas
test
push
nop
das
or
jb
cmp
pop
dec
cs
add
std
xorb
fists
xchg
pop
shl
mov
addb
mov
fimuls
cmpl
lcall
pop
imul
add
xchg
icebp
imul
jae
lret
cmpsb
lods
lret
mov
repz
hlt
adc
mov
jecxz
int3
mov
test
ret
jmp
add
and
lea
mov
or
pop
sub
leave
ja
dec
ljmp
dec
lock
cmp
shlb
jb
and
jp
dec
pop
shrb
ret
out
jbe
mov
insl
add
jecxz
cmpsl
dec
xor
addr16
divl
icebp
inc
jg
and
insl
in
add
lods
adc
jle
lahf
fisubrs
fbld
jae
sbb
push
mov
cmp
imul
cwtl
mov
or
pop
push
xchg
pop
pusha
inc
imul
sti
out
xor
stc
and
int
xchg
cmc
inc
sub
in
mov
mov
push
sub
push
mov
leave
call
mov
das
xor
addr16
mov
mov
imul
add
sub
fwait
nop
clc
cmp
or
mov
xor
imul
jb
mov
call
pavgw
adc
or
add
leave
mov
imul
leave
sub
fwait
enter
pop
imul
ja
mov
cmpsb
fwait
or
in
sub
mov
cld
adc
fld
fdivrl
mov
lcall
jmp
jbe
addr16
pop
test
inc
loopne
leave
scas
mov
adc
jmp
and
mov
ret
mov
or
and
pop
mov
repnz
push
cld
xor
es
cmp
aaa
cwtl
cmp
mov
fmull
addr16
mov
pushf
mov
ror
lds
sahf
jg
jg
add
movsl
mov
hlt
jg
sbb
mov
inc
outsb
lahf
mov
pop
push
dec
ret
jo
add
loopne
xor
push
sbb
pop
std
fwait
ret
mov
clc
test
pop
xor
inc
mov
adc
pushf
enter
pop
leave
sbb
pop
outsl
push
xchg
fmuls
cli
xlat
mov
pusha
mov
adc
adc
dec
jbe
fxam
add
ss
shl
sbb
fisubrs
scas
bound
mov
mov
mov
data16
ja
dec
repnz
stos
sbb
int
clc
jecxz
jae
dec
cli
add
call
scas
xchg
dec
add
cwtl
pop
test
repnz
imul
xor
pop
pushf
mov
pop
adc
jmp
jnp,pt
popf
pushf
mov
jl
mov
fwait
pop
clc
cld
cmp
stos
mov
cli
stos
cwtl
dec
mov
dec
test
dec
movsb
jns
loop
pop
lea
out
stc
mov
out
repz
inc
arpl
xchg
add
push
jge
lds
or
out
rcrl
xchg
inc
sub
jl
mov
hlt
aaa
cmp
xchg
jp
dec
sub
imul
ja
inc
mov
stc
and
jecxz
inc
pop
mov
or
inc
outsl
push
add
mov
pop
aas
sub
mov
loopew
shlb
xchg
test
xchg
outsl
dec
fldcw
int3
enter
ret
pushf
call
insl
ds
fwait
icebp
fcmovne
push
pop
jne
aam
mov
in
enter
sub
adc
popa
xchg
mov
mov
imul
shrb
inc
stos
dec
cmp
jae
xor
clc
rorl
and
xor
loope
les
mov
mov
inc
xchg
leave
fwait
pop
mov
fwait
notb
mov
pop
mov
mov
adcb
pop
push
jle
fsub
movsl
jae
cld
and
inc
popf
adc
movsb
push
xor
shll
push
loopne
mov
fmulp
hlt
jb
pop
pop
movb
movsb
push
mov
mov
xchg
mov
cmp
lock
in
mov
loop
mov
jge
rorl
sbb
or
add
adc
cmp
sbb
das
mov
mov
or
pusha
jns
adc
nop
mov
cmpsb
push
xchg
aas
or
pop
dec
in
lock
mov
dec
mov
les
sub
inc
enter
rclb
scas
push
sarb
into
lock
adc
mov
into
jo
dec
xchg
xor
cltd
and
pop
in
adc
mov
repz
lea
xor
mov
pop
push
bt
pop
lahf
sub
fwait
xor
add
aas
adc
xor
or
ss
mov
scas
push
push
addr16
mov
movl
imul
dec
and
jl
xlat
adc
fwait
xchg
sbb
xchg
push
mov
inc
pop
loop
sbb
lcall
mov
mov
pop
mov
push
inc
xchg
or
frndint
dec
cmp
and
xchg
sbb
inc
mov
lahf
cld
sub
das
hlt
jmp
ret
push
fcmovb
cwtl
sub
jle
fisubl
rcll
andl
data16
testl
in
test
pop
mov
movl
loop
fldcw
mov
jg
in
cmpsl
outsl
inc
out
jae
adc
dec
dec
pop
popa
inc
mov
imul
fimull
mov
imul
arpl
mov
pop
sahf
ret
jae
js
sub
jo
sub
dec
leave
aam
cltd
xchg
add
mov
or
dec
pop
mov
and
mov
or
push
xor
mov
sbb
add
cmpsb
cwtl
insw
or
cwtl
cmp
hlt
adc
stos
repz
adc
bound
adc
outsl
std
ja
ljmp
xchg
cli
or
iret
daa
inc
mov
mov
nop
stos
pushf
dec
mov
outsb
mov
pop
adc
push
dec
data16
or
pop
and
je
mov
sahf
ror
fdivs
sahf
imul
cmp
push
and
cmpb
les
call
loopne
mov
xchg
je
ja
xor
ja
push
xor
decb
mov
addr16
into
push
fstps
mov
mov
push
test
gs
pop
enter
imul
sbb
in
adc
and
cmp
mov
or
pcmpeqw
or
mov
ror
fbstp
cmp
out
sub
or
dec
sarb
dec
outsl
jl
data16
cmpsb
push
sbbl
mov
stc
adc
aaa
gs
jbe
clc
and
jp
sbb
push
mov
xchg
inc
pop
inc
adc
dec
out
pop
test
jo
xchg
sub
je
test
aaa
icebp
adc
adcb
xor
cld
inc
or
jl
lock
movsb
push
jb
mov
out
sahf
ja
sub
adc
pop
xchg
insl
pop
jp
mov
fcoml
add
pushf
xlat
mov
lahf
mov
daa
cltd
enter
test
cmp
rcrb
cmp
data16
fists
mov
sbb
stos
addr16
test
jmp
mov
andb
fwait
mov
mov
mov
sbb
inc
out
dec
and
cmp
out
add
ret
pop
push
pop
xchg
mov
or
lahf
divl
pop
mov
incl
mov
js
cs
aas
and
add
push
aad
lds
gs
div
cltd
out
stos
test
add
cld
push
pop
pop
adc
jb
add
mov
addr16
andl
pop
jg
fiadds
test
stc
jl
add
leave
lods
xchg
jo
mov
fsubl
jecxz
ljmp
mov
jge
orb
pushf
lock
int
cmp
push
push
or
mov
xor
punpcklwd
bnd
addr16
push
jnp
push
push
pushf
addl
jns
imull
pop
jb
pop
imul
in
icebp
mov
sbb
mov
in
add
pop
or
mov
sub
insb
enterw
pop
les
popf
mov
in
pop
popa
aas
repz
jle
adcl
lock
popf
imul
dec
and
mov
jecxz
aad
sahf
scas
adc
push
inc
mov
push
inc
lock
mov
in
lret
inc
inc
fiaddl
jne
scas
out
enter
xchg
movsl
int
mov
js
mov
stos
in
lods
push
daa
push
ds
sbbb
sbb
test
jne
push
jecxz
dec
negb
jmp
xor
cs
lahf
xchg
add
sub
pop
jmp
mov
jae
or
scas
and
hlt
sbb
pop
cmp
insb
repnz
out
ljmp
lea
stos
outsl
pop
lea
dec
mov
or
clc
test
or
xchg
lea
jecxz
push
sub
cmc
xchg
fsubp
cld
mov
or
dec
pop
pop
xorb
lods
popf
mov
jmp
sub
pop
xchg
out
rclb
in
fistl
or
movsl
mov
int
pop
or
into
imul
dec
push
call
dec
cltd
mov
daa
iret
xchg
mov
jne
xchg
std
mov
inc
adc
xchg
fdivr
nop
pop
pushl
ja
ror
movsb
lahf
fwait
out
push
call
arpl
ljmp
jb
dec
cmp
dec
mov
int3
mov
sbb
push
test
jbe
adc
jnp
shl
dec
xor
iret
arpl
jns
lahf
sti
lahf
mov
mov
andb
popf
inc
add
jo
notl
jl
fwait
sub
jbe
pop
cltd
test
jle
push
stc
pushf
push
int
daa
sub
movsl
mov
push
orl
pop
and
and
mov
test
inc
dec
mov
leave
or
sbb
test
ret
and
pop
leave
int3
sbb
in
or
lods
mov
xchg
stos
jecxz
cld
jp
or
pusha
add
repz
xchg
dec
cltd
sub
cmp
add
fcomip
jg
ret
cmpsl
test
mov
fwait
daa
dec
sub
push
fildll
les
xlat
dec
mov
jmp
add
dec
mov
mov
sti
inc
sarb
push
or
popf
mov
imul
mov
inc
insl
movsb
cmpsl
out
dec
pop
dec
dec
sar
xchg
push
or
jns
std
pop
sub
pop
test
jno
inc
xor
xlat
jb
ja
mov
in
xor
in
inc
loopne
pop
xor
data16
inc
daa
or
lahf
out
add
mov
cmpsb
mov
dec
insb
adc
xor
push
nop
mov
mov
jge
xchg
jns
jecxz
lret
pop
cmp
cmp
dec
iret
jle
push
jmp
dec
xlat
push
mov
ljmp
push
inc
mov
mov
mov
jb
add
mov
lock
scas
test
movsb
xchg
clc
cmpsb
xchg
or
ljmp
sbb
sub
xchg
xchg
data16
inc
insb
into
jg
mov
mov
adc
aaa
mov
jno
aad
mov
fwait
stos
dec
fistpll
rcrl
setp
rorl
fstpl
cmp
rorl
push
fstpl
lods
mov
scas
ret
mov
test
mov
into
mov
mov
test
rcr
xchg
aas
sub
rcrl
pop
pop
call
pop
js
or
call
xchg
inc
cmp
fwait
mov
aaa
xchg
imul
jbe
adc
aaa
mov
arpl
leave
lods
imull
fwait
mov
inc
xchg
cltd
push
xor
rolb
bound
mov
adc
and
out
lods
js
rcrb
pop
fadds
fwait
sub
sar
call
fldcw
popf
or
pop
insl
pop
xchg
dec
or
call
dec
testl
xchg
push
pop
pop
rcr
jp
xchg
push
mov
jp
js
in
cmc
xor
or
cwtl
dec
and
inc
fs
jle
xchg
mov
sub
and
bound
lods
mov
fwait
ret
and
sti
out
mov
xor
push
lock
push
inc
outsb
add
dec
jae
xchg
xchg
inc
push
cs
test
das
xchg
xchg
and
pushf
add
test
shr
pop
test
push
mov
not
shlb
fimuls
cmc
dec
sbb
xchg
cmp
repnz
arpl
mov
cmc
jnp
dec
cmp
mov
and
sbb
mov
daa
data16
mov
into
adc
cmp
jno
mov
insl
mov
aad
jp
push
mov
jns
fisubrl
jnp
data16
fadd
lea
aaa
cmp
das
pop
clc
cmpb
pop
adc
or
mov
mov
push
fwait
adc
in
mov
mov
mov
scas
imul
jnp
dec
shll
mov
enter
fcom
mov
hlt
and
mov
dec
out
pop
pushf
inc
xchg
lods
add
es
outsl
or
popa
xchg
mov
aaa
mov
lods
mov
fwait
addr16
mov
sub
mov
fisubrl
or
hlt
xor
xchg
adc
repnz
aas
adcl
pop
shld
fistpl
sbb
fsubs
je
and
lret
int3
out
mov
stos
adc
sbb
mov
test
test
or
pusha
shlb
fwait
xchg
push
shrl
mov
orb
sarl
push
faddl
imul
pop
icebp
test
adc
add
data16
sti
adc
daa
inc
in
clc
pop
insl
sbb
jmp
and
addl
cmpsl
mov
mov
xor
mov
fstl
xchg
jg
aaa
xchg
or
jnp
into
in
dec
pop
xor
ja
add
and
mov
hlt
pop
inc
push
daa
fldenv
pop
xchg
fmulp
int
cmp
je
inc
push
insl
vphaddwq
mov
add
pop
pop
and
adc
dec
dec
cmp
loopne
fnstcw
repz
xchg
cwtl
mov
ds
dec
shrb
mov
sahf
ret
imul
in
sbb
cltd
push
dec
add
sbb
jle
fs
mov
add
cmp
hlt
shll
dec
mov
pop
add
xor
adc
push
jp
cld
pop
aaa
fcoml
adc
xchg
test
rcrl
sarb
sub
ja
test
pop
pushf
push
stc
push
mov
fwait
mov
inc
mov
clc
pop
fldcw
pop
push
push
in
mov
lret
cmp
movsl
dec
dec
jb
pusha
insb
gs
in
stc
cltd
imul
adc
mov
lret
mov
iret
jbe
mov
fwait
push
push
mov
test
sbb
imul
mov
inc
scas
inc
in
lock
sub
and
enter
or
imul
addr16
mov
push
mov
push
pushf
push
pop
out
add
pop
inc
push
cmp
xchg
lahf
add
push
pop
mov
push
ret
mov
lods
pop
adc
jmp
push
jl
out
mov
cmpsl
enter
or
push
jae
aam
mov
icebp
mov
push
imul
orl
daa
jns
aaa
xchg
test
dec
push
xchg
fwait
mov
jmp
inc
psubb
mov
adc
mov
rcrb
cmp
imul
pop
subb
scas
xchg
mov
mov
or
leave
push
push
pushf
xchg
cmpsb
add
movsb
stos
dec
and
notl
mov
ret
xchg
mov
bound
mov
shrl
adc
cmp
add
pop
push
add
jno
mov
hlt
sub
xor
xor
jmp
push
popa
jle
stc
insb
mov
xchg
mov
aas
push
jecxz
adc
inc
pop
mov
scas
pop
pop
fadds
repnz
out
adc
push
sahf
jg
jle
mov
sbb
or
add
lock
pop
mov
std
pushf
into
inc
mov
scas
mov
sub
mov
mov
adc
xor
scas
jecxz
add
test
js
mov
dec
jecxz
repz
cmp
outsb
inc
push
out
sub
jecxz
or
jns
aaa
cwtl
fldenv
or
and
jg
adc
mov
xchg
stos
mov
push
mov
push
add
sti
sub
xlat
xor
pop
jns
mov
fsts
aaa
shlb
lret
movsl
xchg
test
iret
mov
cltd
lea
add
filds
fsubp
mov
fwait
jno
dec
rorb
mov
push
lds
xchg
mov
icebp
xor
daa
lea
mov
ja
lock
cmpsl
in
lret
push
cmpsl
push
lock
or
mov
mov
sbb
out
lcall
call
or
cwtl
arpl
adc
push
ds
push
adc
cmp
inc
mov
jecxz
pop
xorb
dec
adc
sbb
cmp
add
clc
mov
imul
out
out
cwtl
mov
repnz
xor
sahf
sbb
jg
icebp
push
xchg
push
pop
mov
cmp
aaa
push
cmp
cmp
insb
pop
mov
xor
add
pop
sahf
pop
cli
sbb
das
xchg
or
pusha
dec
jbe
dec
pop
pop
stc
enter
add
insb
cmp
pushf
scas
mov
mov
cmc
fsubs
lahf
mov
or
pushf
xchg
push
mov
push
popf
les
push
lret
adc
mov
aas
push
mov
aas
fsincos
ret
xchg
sbbl
call
mov
test
addb
maskmovq
idivl
ljmp
movsl
shr
pop
addr16
aaa
ja
adc
fisttps
cli
add
xchg
inc
addr16
test
adc
movsl
adc
fnstsw
sub
or
mov
jmp
icebp
insl
xlat
fwait
daa
xor
inc
pop
sub
sbbl
int
pop
and
jb
jecxz
sbb
pusha
mov
fwait
pop
push
push
enter
inc
outsb
sbb
mov
xchg
faddl
jp
inc
add
mov
cmc
call
imul
fbld
add
and
mov
pop
ret
movsl
add
lods
aaa
es
push
out
mov
ja
and
push
in
adc
aaa
push
daa
sahf
imul
cltd
std
xor
iret
fs
inc
shr
mov
mov
jecxz
je
lea
arpl
or
cmc
imul
fdivrs
dec
cwtl
mov
mov
ret
nop
mov
pop
out
xlat
mov
adc
sub
idivl
push
add
mov
jge
inc
dec
mov
jbe
sbb
mov
cmpsb
sbb
jmp
xchg
adc
dec
lea
arpl
repz
mov
in
add
fistpll
aaa
fstl
stos
mov
and
mov
icebp
ss
loop
xchg
dec
stos
jns
cmpsl
in
nop
dec
sbb
lods
je
mov
mov
std
lods
fwait
xor
fucomp
dec
shlb
frstor
leave
cld
inc
shll
lea
and
mov
adc
aas
mov
cltd
push
imul
or
mov
pop
ja
push
fsubs
test
jae
popa
lds
xchg
sbb
dec
adc
inc
mov
call
lock
mov
movsl
push
cmp
mov
mov
movsb
adc
fs
add
cmc
loopne
mov
orb
add
pop
and
ja
arpl
stos
pop
sahf
scas
push
imul
enter
out
cmp
scas
mov
fsts
insl
aam
sub
lea
xorb
cmp
pop
jb
call
jnp
mov
jbe
addr16
jp
mov
add
sbb
push
pushf
inc
sbb
push
xor
outsl
shl
mov
cmp
push
sub
adc
arpl
cltd
mov
divb
dec
mov
jecxz
add
pop
adc
lds
out
inc
ret
cwtl
cmp
mov
xchg
hlt
bound
push
call
jno
dec
adc
fwait
inc
pop
jmp
aas
xor
pushf
jmp
icebp
nop
xchg
inc
mov
repz
lret
in
push
ljmp
imul
push
sub
cld
imul
push
add
jp
sbbl
mov
scas
inc
add
outsb
fisttps
xor
subl
pop
lds
ljmp
or
into
pop
pop
add
lret
add
cmpl
mov
inc
fcoml
sahf
sub
fadds
jb
fistpll
into
popf
dec
or
adc
and
outsb
mov
and
imul
cld
cmp
neg
ja
sbb
push
imul
daa
fwait
in
pop
ss
sbb
jno
outsb
dec
push
xchg
xor
loop
cmp
mov
neg
dec
out
dec
sub
loope
inc
pusha
mov
test
in
dec
out
out
adcb
inc
mov
sbb
dec
add
arpl
push
stc
jecxz
jp
test
cmp
subl
jle
jmp
push
add
roll
xchg
or
gs
push
aam
xor
inc
mov
mov
xchg
hlt
roll
out
jg
lahf
cmp
dec
pushf
clc
xchg
imul
in
mov
push
mov
shrl
xchg
dec
lahf
add
cli
stos
int
fstpt
ja
mov
jecxz
cmp
jns
outsl
adc
addr16
jecxz
adc
adc
push
sub
jmp
mov
rolb
adcb
repnz
jae
pop
mov
cwtl
adc
aas
jnp
adc
fnstenv
dec
cli
jns,pt
jmp
xchg
xchg
stc
adc
leave
ljmp
stc
ja
addr16
insl
mov
add
int
or
cltd
sbb
js
daa
imul
cld
xor
movl
cmp
xchg
mov
inc
adc
mov
mov
jp
aad
gs
sbbl
roll
jno
or
cmpsl
mov
mov
xor
xchg
sub
outsb
js
xchg
inc
push
call
dec
ja
and
lods
addr16
bound
rclb
lock
mov
pop
gs
test
dec
cs
adc
mov
imul
adc
sbb
int3
mov
out
loop
mov
push
je
mov
sbb
negl
cmp
jecxz
sub
xor
sti
dec
das
xor
out
push
out
xchg
shrb
rorb
in
shrl
xchg
add
dec
push
jle
sbb
imul
push
test
addl
cmp
cld
lret
cld
push
xlat
mov
mov
push
aaa
or
out
sbb
adc
sub
imul
mov
xchg
shlb
test
addr16
xchg
mov
popf
rcrl
mov
sbb
lahf
pop
mull
adc
push
int
mov
adc
mov
test
shll
in
add
sub
xchg
incb
mov
jo
fsubr
cltd
enter
mov
jnp
int
int
addl
jge
out
mov
jg
cmpsl
fwait
stc
xchg
jno
lcall
inc
dec
pop
jle
sarb
dec
cmpps
push
int3
daa
repz
xchg
cmp
imul
push
sbb
pusha
mov
pop
mov
fstpl
hlt
jns
xchg
pop
shll
add
dec
inc
jge
hlt
lock
adc
daa
xlat
call
sbbl
jmp
mov
push
fucomip
repnz
test
sub
lahf
insl
jae
pop
mov
xor
mov
idiv
dec
pop
add
sbb
ja
jle
jne
push
dec
sub
xchg
inc
shrb
into
dec
ret
lret
test
in
or
push
adc
mov
sbb
pop
mov
lods
or
mov
dec
mov
fmuls
fwait
inc
gs
cwtl
adc
add
sub
icebp
lcall
shl
addl
mov
imul
inc
into
shrb
mov
daa
movsb
push
repz
jmp
inc
cwtl
sbb
cs
shrl
gs
int
xchg
sbb
xor
jae
fmull
pushf
ja
out
mov
cmp
ror
movsb
in
out
in
xchg
jge
lds
jbe
mov
xchg
push
add
orl
and
sub
out
jnp
int3
inc
daa
push
sbb
add
imul
jae
or
push
cli
ss
lea
into
mov
add
sbb
vpunpckhqdq
lcall
je
xchg
mov
add
test
mov
rolb
xchg
push
bound
fsubrs
out
mov
mov
fwait
leave
or
sbb
fwait
nop
repnz
pop
sbb
push
lds
popf
mov
mov
push
fwait
mov
lds
data16
inc
xchg
mov
mov
sub
dec
movsb
lahf
sahf
push
lods
pusha
sub
dec
cmp
jge
inc
jp
jo
inc
rorl
shr
outsl
stos
pop
add
clc
dec
filds
xchg
mov
mov
nop
data16
sbb
sbb
call
imul
push
inc
push
in
add
int
pop
mov
sbb
jae
adc
mov
inc
push
xchg
pop
xchg
mov
in
js
dec
into
mov
xchg
and
mov
mov
imul
add
dec
xor
inc
jecxz
outsl
mov
push
mov
outsb
lcall
xchg
sbb
mov
add
mov
lods
and
adc
jne
cmp
cltd
mov
xor
mov
out
insl
mov
jecxz
adc
pushf
mov
jg
lcall
fwait
ljmp
mov
mov
mov
inc
pushf
dec
add
pushf
call
mov
cwtl
das
and
xchg
lods
aam
inc
add
push
inc
mov
bound
mov
mulb
out
aaa
xor
mov
pop
test
lcall
lea
jb
ja
sbb
call
cmp
xchg
jne
pop
dec
mov
js
or
pop
test
dec
fsubp
push
sbbl
leave
cwtl
fwait
out
shll
inc
lret
mov
imul
leave
and
adc
add
daa
push
icebp
xchg
pushf
out
jp
jmp
mov
out
or
enter
push
sub
stos
lret
add
cld
xor
xchg
push
in
cmpsl
sarl
aaa
test
addb
cmp
es
stos
sbb
testb
and
negb
scas
inc
cltd
popf
mov
xor
dec
lret
mov
sbb
add
repz
lcall
subl
hlt
clc
push
mov
sbbb
xor
addr16
cmp
mov
mov
sbb
pop
aaa
push
dec
cwtl
cltd
inc
jo
shlb
pop
jg
or
test
mov
or
add
popf
test
pusha
in
rcll
or
push
dec
and
sub
pop
vpor
jns
xchg
aaa
arpl
mov
ret
cwtl
xchg
movsl
dec
xchg
jmp
push
imul
in
inc
dec
push
add
popf
jl
jbe
add
or
cmc
pop
mov
in
test
add
push
iret
adc
mov
out
pop
or
jne
repz
addl
dec
idivb
sub
addr16
ret
cld
imul
sub
lea
in
xor
mov
lea
out
cltd
mov
xchg
inc
out
sbb
jae
and
ja
int3
cmp
out
and
lret
pop
cld
cmp
dec
test
mov
and
mov
hlt
sbb
mov
jecxz
ja
sub
xchg
xchg
daa
stos
mov
and
imul
clc
sbb
insl
jbe
call
icebp
rorl
add
pop
pushf
add
add
fldcw
inc
sbb
xchg
sbb
push
cld
xorb
mov
and
adc
xchg
cmp
dec
mov
std
sbb
xchg
test
push
mov
xchg
inc
push
add
lock
dec
jo
in
adc
leave
dec
and
fwait
lahf
xchg
xchg
fildl
mov
cmp
pop
pop
repz
cmp
popl
cmp
sub
fs
pop
adc
mov
sbbl
out
ljmp
mov
enter
add
push
xchg
fdivrs
push
insb
add
or
mov
jns
push
pushf
pop
jno
cmp
fisttps
aaa
mov
cmp
dec
mov
jne
fs
data16
lcall
push
xchg
imul
andb
in
in
push
ret
add
jno
sbb
jecxz
lret
aad
cltd
addb
push
mov
out
dec
inc
mov
jmp
nop
or
sub
cld
and
cwtl
jne
addr16
lret
ja
ret
psrlw
mov
aaa
je
jns
loopew
lret
mov
fnstenv
xchg
cld
loop
dec
inc
mov
imul
dec
dec
test
xchg
jno
imul
cmc
push
fwait
mov
cmpsb
out
xchg
inc
in
add
jle
aam
cmp
xor
sub
test
or
mov
lock
or
hlt
aaa
imul
out
repz
test
out
pop
xorl
cs
adc
sbb
rcrb
cmc
clc
out
pushf
add
lret
xor
cwtl
les
test
mov
and
sbb
ja
inc
dec
add
pushl
aaa
lods
mov
mov
xchg
push
out
mov
cmpsl
inc
addb
rorb
fwait
hlt
xchg
imul
gs
or
sub
fwait
repz
daa
out
in
jbe
sbb
dec
xchg
inc
pop
push
test
cwtl
fwait
sbb
pop
int3
cmp
in
sbb
cwtl
mov
data16
stc
pop
pushf
or
push
js
xor
imul
sbb
ja
or
xor
xchg
xchg
mov
inc
out
dec
xchg
dec
lahf
push
xchg
xorl
lret
mov
loop
imul
xchg
sbb
cwtl
fwait
ljmp
sti
add
add
and
test
mov
lcall
call
cmp
cltd
das
or
sbb
xor
jnp
in
or
into
xor
cmp
sbb
addr16
test
icebp
add
sbb
sti
push
lods
fsub
out
dec
inc
test
pop
push
imul
jb
mov
xor
cmp
test
mov
or
cmp
jmp
xor
icebp
xor
ja
fldl
stc
rcr
ja
push
dec
and
cli
adc
pop
sub
mov
mov
fwait
movb
int3
sbb
stc
inc
stos
or
cmc
pop
pusha
enter
call
add
daa
sub
jecxz
sahf
lds
and
sti
test
adc
out
push
sub
dec
lds
bound
mov
xchg
cltd
xchg
sbb
or
mov
sub
test
sbb
test
inc
mov
stc
and
add
adc
lea
call
imul
jb
jmp
leave
sub
lods
jbe
scas
popl
add
mov
nop
fisubrs
cwtl
pop
xor
mov
xor
sub
jae
sub
and
imul
test
mov
dec
xor
adc
in
popa
mov
outsb
js
pop
mov
mov
xor
mov
xchg
bound
cmp
jge
or
sbb
call
jg
mov
lds
pop
mov
push
pop
adc
packssdw
pop
pop
push
xchg
jbe
push
sahf
ljmp
sbb
fistpll
lcall
int3
jnp
and
repnz
popf
lock
mov
mov
dec
pop
cmpb
jmp
les
push
inc
lds
pop
out
mov
dec
testl
mov
hlt
mov
dec
enter
dec
test
mov
ret
jnp
faddl
gs
mov
lds
xor
sbb
not
mov
into
pop
push
sbb
imul
sub
dec
cmc
pop
and
js
adc
pushf
cmp
sbb
lock
test
pop
test
mov
jb
rcrl
mov
dec
popa
adc
lcall
aaa
sahf
or
add
xor
movsl
add
add
sbb
xor
mov
pop
jle
in
inc
and
insb
sti
jl
cmp
pshufw
aad
repnz
out
mov
dec
cmp
nop
adc
pop
pop
movsl
test
orl
cli
inc
xchg
pop
shl
mov
sbb
inc
mov
adc
sbb
or
and
sub
adc
sbb
lods
fwait
addr16
sbb
inc
xchg
lods
jns
inc
out
aas
shrb
mov
cmp
and
mov
and
pop
or
pushf
out
jl
fsts
sbbl
outsl
adc
or
dec
add
call
outsl
ds
addr16
jns
add
popa
mov
sub
sub
mov
add
sub
in
lahf
fwait
push
inc
sbb
gs
dec
cmpsb
mov
clc
or
repz
cwtl
mov
mov
aas
cmp
add
or
mov
mov
push
ljmp
mov
push
shrb
or
mov
mov
in
inc
aas
add
ret
xrelease
push
inc
rorl
pop
or
in
xlat
dec
fdivs
add
ficompl
push
add
pushf
adc
jmp
sub
and
pushf
leave
xchg
idivl
pusha
lock
aad
loop
dec
mov
or
lods
jmp
orb
mov
push
inc
xchg
or
or
xchg
jmp
repz
mov
cmc
xchg
lret
fisubrl
add
dec
mov
jle
cmc
dec
push
test
mov
lea
push
xchg
rcrl
test
loope
sub
ret
push
sub
xor
xchg
inc
addr16
adc
test
sbbb
sbb
fimuls
adc
shll
jp
push
mov
aad
aas
lret
xchg
inc
out
cli
cwtl
jecxz
popf
or
push
push
mov
jae
js
lcall
lcall
mov
ret
mov
bound
cmpsl
push
stc
and
clc
es
inc
cmp
push
sarl
cmp
into
inc
cwtl
out
xor
ret
faddp
and
roll
out
push
repnz
dec
ljmp
xchg
fadds
xor
pop
mov
push
aas
mov
gs
jne
add
push
pusha
popa
lods
add
pop
mov
ja
stc
addl
imul
lods
jb
scas
rorb
sbb
xchg
or
ja
daa
push
bound
push
dec
outsb
pop
pop
xchg
out
and
repz
cmpsl
add
lret
int3
in
sbb
psubw
sbb
dec
fsubl
mov
leave
push
push
imul
cmc
dec
adc
xchg
je
or
leave
mov
jecxz
sub
push
std
jne
cmc
jp
testl
out
sub
mov
rcll
fcompp
loop
fmuls
adc
call
fisubs
adc
ljmp
push
out
es
pop
rcrl
es
imul
mov
subl
sub
scas
lahf
mov
xor
cmpsl
cmp
xchg
sarb
and
dec
stos
inc
sbb
imul
push
testb
pop
or
mov
enter
and
stos
pop
cmp
or
pop
xchg
sbb
xor
pop
hlt
mov
icebp
mov
push
aam
push
pusha
clc
cwtl
shll
dec
fwait
movsl
cwtl
mov
xlat
ljmp
push
lea
xorl
call
mov
fwait
loopne
xor
mov
and
jmp
call
pop
dec
daa
xchg
cwtl
push
pushf
sub
cwtl
js
xchg
pop
cmp
lahf
mov
outsb
mov
xchg
out
imul
push
das
xchg
mov
mov
mov
jmp
sti
sub
push
or
push
and
mul
leave
lea
fidivl
sub
cmp
xchg
pop
pop
insl
and
xor
pop
sbb
in
arpl
and
adc
push
daa
add
add
mov
sub
or
push
cwtl
testb
js
ret
outsb
mov
gs
pop
inc
in
call
push
jae
dec
inc
dec
cmpl
jo
call
adc
push
inc
mov
outsb
call
cmp
fisubs
ficompl
mov
mov
insb
dec
and
dec
sbb
dec
add
punpcklbw
das
leave
add
push
js
cmp
and
pop
cltd
lods
pushf
adc
sbb
mov
fldcw
jg
cltd
imul
jo
dec
adc
inc
aas
movsb
in
mov
mov
xchg
mov
pop
cmp
sahf
aad
cmpsl
mov
leave
cld
mov
jo
sbb
cwtl
popf
repnz
insb
jne
sti
aas
aaa
sub
sbb
dec
xchg
sbb
cmp
jecxz
pop
int
fwait
andl
mov
shl
call
in
sub
out
sbb
rclb
jo
xchg
push
adc
inc
fists
lea
push
jmp
push
stos
xchg
sub
sub
vpxor
dec
fistpl
dec
in
or
add
fcomi
aas
pushf
push
dec
dec
push
out
add
xor
xchg
ss
mov
clc
mov
mov
xlat
std
nop
cmp
test
dec
repnz
add
xchg
sub
mov
inc
cmp
out
push
xchg
movsl
dec
mov
and
pushf
stos
ret
hlt
test
ss
popf
dec
fisubrl
jmp
xchg
scas
imul
mov
mov
sub
sbb
pop
mov
jmp
jnp
inc
adc
imul
push
and
xchg
lar
sbb
packssdw
scas
test
ss
ja
mov
test
mov
popa
lea
jl
leave
or
add
xor
mov
test
nop
jmp
aas
sahf
hlt
fimuls
jecxz
sub
fisttpll
xchg
xchg
test
rorl
mov
insl
cli
enter
daa
daa
shlb
rorl
inc
sbb
sbb
roll
pop
notl
ja
jae
inc
or
lods
mov
mov
fwait
les
and
add
mov
cmp
mov
xchg
xchg
in
xor
pop
dec
or
ja
imul
pop
fdiv
pushf
mov
xchg
push
cmp
pop
cmp
xchg
out
cmpsl
int
and
mov
jnp
lcall
or
add
fsubs
stc
subb
xchg
xchg
fwait
xor
daa
addr16
imul
divl
fmuls
xor
or
cli
add
or
jecxz
ficoms
push
outsl
mov
rol
imul
or
xchg
push
mov
xor
push
test
dec
int3
rcll
js
lds
addl
adc
or
test
aam
decb
hlt
enter
std
push
xchg
test
das
imul
cmc
sbb
adc
pop
mov
add
scas
stc
rcrl
cmpb
out
adc
pop
dec
sbbb
dec
aaa
mov
dec
stos
jecxz
push
adc
out
sar
andl
lret
mov
or
add
pop
lods
xchg
pop
lret
or
rcll
cwtl
and
mov
pop
xchg
jg
jl
and
mov
sbb
and
icebp
mov
out
or
pop
pop
sub
mov
mov
adc
xchg
adc
dec
pushf
imul
aad
orb
aas
test
push
das
jo
imul
cmc
dec
insl
pop
test
xchg
cwtl
adc
or
lahf
or
aad
mov
dec
fs
jne
mov
mov
scas
push
xchg
sahf
in
cli
xchg
mov
add
rclb
movsl
and
xchg
xor
sbb
adc
pushf
push
adc
pop
fs
daa
outsl
mov
insl
pop
fs
xor
fstps
mov
push
fs
mov
pop
lahf
ret
in
push
scas
fcoml
jl
xchg
popa
mov
icebp
fpatan
push
dec
mov
mov
jbe
inc
sbb
mov
daa
mov
push
into
es
mov
mov
in
cmpsb
movsl
sbb
mov
movsl
mov
or
mov
test
or
or
imul
push
mov
or
push
leave
mov
push
add
mov
lret
push
dec
sub
and
mov
adc
and
inc
and
sti
sub
movsl
bound
fstps
shll
sbb
sbb
or
xchg
xchg
add
inc
mov
cmp
push
dec
mov
filds
outsl
xchg
sbb
repz
pop
lock
sub
inc
mov
add
xor
loopne
stos
pop
lahf
xchg
sarl
lods
mov
sbb
pop
enter
adcb
jg
jl
pop
push
pushf
pop
mov
pop
push
fstl
and
xchg
or
jge
addr16
xchg
mov
mov
cmpsb
imul
mov
xor
rol
adc
mov
into
and
jne
ljmp
cmc
inc
pop
divb
mov
outsb
cmp
mov
lock
mov
sar
jno
rcrl
xchg
into
jl
pop
sbb
and
adc
mov
mul
mov
dec
mov
or
mov
mov
push
mov
mov
addr16
out
imul
mov
push
sub
ret
rcll
pop
sub
jo
pop
mov
out
stc
ret
mov
inc
mov
loope
fldl
fwait
inc
loop
push
fs
xchg
add
dec
popa
lds
mov
icebp
icebp
cmc
push
aaa
pop
push
xchg
shll
sub
sub
mov
sti
cmpb
test
insl
pop
insl
add
ja
mov
fmuls
push
cmpsl
repz
xchg
jno
loopne
cmc
add
ror
push
rorb
ret
jno
pop
enter
pusha
jne
push
inc
dec
aas
or
test
push
aas
test
jbe
mov
movsl
cmp
fsubrs
xor
xchg
xchg
pop
clc
inc
les
mov
insl
cltd
sub
lahf
ljmp
and
adc
inc
xchg
mov
lcall
dec
scas
je
ja
lret
or
hlt
xor
in
jb
pop
pop
xchg
loopne
xorb
inc
adc
into
out
jle
cmp
out
movsl
adc
arpl
jnp
sbb
ror
cmp
push
fsubs
out
inc
sub
adc
mov
push
and
lods
jp
mov
fimull
xchg
xor
mov
fisttps
pop
addb
cmp
push
xchg
adc
test
or
pop
dec
dec
xor
pop
add
sub
mov
sarb
subl
popf
jne
mov
xchg
leave
lods
xchg
mov
je
insl
leave
imul
in
push
jae
mov
imul
push
fistpll
jp
mov
pop
aaa
int
pop
push
or
shrl
inc
mov
repnz
jae
jge
fneni(8087
sub
imul
gs
cmp
ljmp
dec
cs
add
insb
push
sbb
pop
pop
jne
lods
pop
dec
outsl
jno
and
xor
lock
pop
scas
push
dec
pop
sahf
mov
fisubrl
and
xor
cmpsl
mov
mov
pop
sub
lcall
out
inc
sub
sahf
sub
ss
lock
adc
add
dec
add
cmp
or
add
jno
lock
mov
adc
jbe
add
or
mov
or
dec
push
rorb
pop
sub
aas
push
mov
outsl
xchg
cmp
or
adc
jge
or
scas
add
pop
push
and
sbb
adc
push
call
lcall
aad
sbb
js
aas
fdivrs
enter
cmp
loope
ds
push
inc
in
or
mov
mov
rcl
jmp
mov
xor
or
jg
pop
ret
repz
imul
push
mov
out
fsubs
pop
mov
fistpll
mov
rdmsr
pop
test
sbbb
xor
les
pop
mov
add
jnp
mov
lods
jbe
mov
imul
mov
sub
sbb
pusha
in
inc
outsl
pop
cmp
and
fwait
enter
xchg
jne
sub
cmc
out
ja
or
out
push
sub
jmp
lock
xor
or
hlt
shr
test
stos
add
imul
inc
xor
cmpsl
repnz
rcrl
lock
adc
mov
jne
adc
xchg
dec
xchg
inc
cmp
mov
shrl
mov
imul
pop
mov
mov
dec
pop
into
mov
jle
sub
inc
lods
and
push
outsb
rorb
adc
insl
jmp
repz
hlt
adc
lahf
fisubrl
mov
mov
shl
pop
push
in
jbe
ja
movsl
push
and
push
hlt
fstpt
int
sahf
clc
imul
movsl
pop
mov
stos
cmp
jae
jnp
out
out
imul
and
adc
lea
mov
mov
movsb
dec
loop
push
loopne
fnstsw
xor
addb
out
lds
imul
mov
lea
loope
dec
lock
lds
aad
shl
cltd
mov
and
lret
add
shlb
or
lock
int
rcll
jp
out
and
push
pop
fnstcw
push
addl
jg
mov
xor
xor
add
cli
sti
repnz
in
sub
jl
icebp
pop
test
jno
adc
mov
mov
mov
sahf
xchg
outsb
ljmp
es
dec
aaa
push
movsl
out
int3
test
call
inc
pop
cld
or
rcr
mov
pop
mov
ret
adc
test
jo
test
push
and
cmp
addb
imul
push
cmp
sarb
mov
mov
sbb
pusha
loopne
mov
jne
sub
scas
jb
xchg
loop
arpl
and
sbb
roll
jno
adc
fidivs
pop
pop
xor
xchg
cmc
fsubrl
sbb
xchg
mov
faddl
mov
rol
enter
push
xchg
scas
leave
jae
mov
gs
xchg
pop
out
das
xchg
xlat
leave
pop
cld
lds
inc
loopw
enter
xchg
fmuls
xchg
jge
mov
pop
cmpsl
mov
sbbb
sub
dec
jp
flds
mov
and
mov
mov
or
mov
cld
xor
repnz
outsl
out
add
fdivr
mov
adc
ret
movsl
mov
scas
jae
mov
pop
and
mov
xor
je
ja
sarl
mov
xor
pushf
sub
into
mov
outsb
jae
cwtl
cmc
xlat
dec
ljmp
pushf
mov
test
add
aas
sub
in
xor
mov
dec
popa
adc
mov
inc
rolb
adc
mov
cmp
or
add
daa
sbb
mov
pop
lret
popf
jnp
inc
aad
mov
loopne
and
mov
inc
shll
bound
mov
jg
fistpll
out
out
ja
out
xchg
adc
fnstcw
push
mov
push
push
sub
xchg
jns
sub
add
ficomps
sub
fs
sbbl
sbb
push
pop
outsb
mov
lret
and
jmp
lcall
add
mov
in
vcmpss
or
jb
pop
in
or
les
and
fcoml
mov
addr16
ficomps
xor
inc
pop
stos
cmp
cmpsb
push
sbb
fidivrl
sysenter
insl
jns
jnp
jae,pn
fwait
js
stos
mov
pushf
xchg
sub
xchg
or
dec
adc
mov
inc
pop
in
and
scas
pop
outsl
aaa
cmpsl
outsb
je
mov
loopne
test
cmp
mov
and
jecxz
mov
cld
sub
imul
and
iret
int
adc
lea
mov
mov
call
fisttpl
pop
cmp
dec
sti
cmp
es
pop
cmp
fisubrs
ja
sbb
cmpsb
pop
cmp
and
out
mov
mov
fcmovnu
sbbb
mov
out
lds
cmp
out
sub
fstpt
push
pop
je
and
jp
jae
mov
add
ja
test
pusha
jg
inc
sub
pop
shll
mov
dec
in
push
xchg
ficoml
or
cmp
adc
cmp
addr16
or
jmp
cld
push
jbe
mov
arpl
jb
dec
scas
rorl
jecxz
mov
xchg
push
jecxz
adc
test
pop
jns
jl
pop
sub
jmp
push
jmp
inc
stos
int3
push
push
aaa
mov
mov
sahf
aaa
in
cmpsb
inc
pushf
or
shrb
dec
or
sub
jle
sti
pushf
cmp
sub
pusha
cwtl
out
rcrl
faddp
jecxz
and
rcrl
dec
fsubp
or
nop
stc
imul
jmp
jae
roll
adc
or
test
outsb
lcall
sti
stos
test
cmp
sub
cmp
repnz
mov
inc
push
jns
jmp
mov
xchg
fwait
mov
je
mov
aaa
pop
shlb
hlt
loope
subl
sar
out
out
xor
dec
push
clc
push
jns
xchg
jb
push
enter
cmpsb
mov
mov
or
imul
mov
mov
cmpsb
pusha
xchg
aaa
out
cmp
pop
pop
dec
pushf
xchg
test
scas
sbb
out
test
cltd
xor
or
cmp
fisttpll
jo
mov
jns
inc
aas
inc
jae
ja
dec
mov
sarb
add
lds
cs
fwait
pop
aas
fisttpl
pop
inc
mov
mov
rcrl
cmp
cmpsb
jg
mov
xor
repnz
pop
mov
stc
pop
jb
rolw
cld
jne
mov
in
dec
jg
jecxz
mov
jle
mov
xor
push
add
cmpsb
inc
lds
dec
les
sbbl
sub
ljmp
dec
mov
mov
sbb
aas
adc
sti
adc
inc
sub
pushf
and
and
test
das
rorl
adc
lock
ffreep
pop
out
shrb
cltd
jge
xchg
mov
shll
jne
or
or
test
cmpl
or
gs
push
cmp
mov
push
inc
sbb
mov
and
cli
xchg
test
jp
or
cmp
mov
pop
mov
imul
xchg
xchg
loopne
add
and
mov
or
push
lods
inc
pushf
and
push
sub
mov
rcrl
xchg
ss
int
mov
jnp
jl
adc
jle
dec
ss
fwait
mov
clc
mov
decb
mov
nop
pop
aaa
push
adc
pop
icebp
lcall
pop
mov
push
mov
nop
ffree
cli
cmp
hlt
outsl
pusha
mov
jmp
ja
jg
mov
pop
sbb
mov
inc
xchg
sbb
cmp
dec
gs
or
jecxz
push
mov
scas
inc
into
aas
push
ret
jae
jmp
push
sbb
mov
or
sti
scas
inc
mov
shrb
inc
dec
test
andb
dec
dec
in
imul
xchg
mov
aaa
iret
fistpll
loope
ret
pop
jl
out
insb
sbb
cmp
push
mov
or
cmc
mov
jnp
sub
in
jns
mov
testl
mov
or
fcomi
mov
and
xor
pop
popa
sahf
les
fstp
mov
lock
jae
jp
push
xchg
xchg
pop
push
add
and
cmp
vmmcall
imul
mov
jns
cld
mov
mov
mov
sbb
xor
inc
add
adcb
adc
push
mov
or
xor
clc
jns
xchg
lods
ret
jge
aad
das
ja
sub
jge
inc
and
push
repz
mov
repz
inc
int3
int3
cmp
sbb
bound
inc
int
ljmp
in
test
xor
or
xor
xchg
popa
adc
push
xchg
mov
mov
push
idiv
mov
adc
pop
mov
sub
addr16
ds
mov
call
ja,pn
adcb
or
pop
ja
adc
lahf
xchg
sub
mov
add
out
iret
scas
add
fwait
and
xchg
aad
push
or
aad
addb
push
push
movsl
cwtl
add
notb
mov
in
cmp
mov
jae
cmp
lds
fnstsw
test
ss
and
adcb
std
fwait
push
addr16
xor
pushf
call
mov
arpl
imul
dec
adc
xchg
rcl
clc
jae
stc
push
xchg
sub
insl
orl
addr16
xchg
lahf
jecxz
divb
cs
in
push
mov
imull
jnp
fs
jo
out
rcrl
or
lahf
andl
scas
lea
dec
addb
mov
pop
or
in
aad
repz
repz
aaa
imul
mov
ja
or
ja
push
cmc
mov
mov
cmp
mov
cli
out
out
jae
jmp
jno
mov
pop
sarl
pop
xor
ret
sbb
fsts
sub
dec
pushf
int3
icebp
push
test
pop
dec
xchg
stos
xchg
mov
pop
sub
pop
cmpsl
jp
push
ds
pushf
das
jmp
imul
scas
jg
adc
nop
lea
jecxz
in
add
in
mov
or
add
sub
sbb
sub
sbb
xchg
push
mov
pop
ret
hlt
mov
jl
aaa
shll
ljmp
sub
mov
jmp
jb
adc
flds
jb
bound
inc
addr16
mov
loope
hlt
popl
push
pusha
in
test
dec
jo
pushl
cmpb
dec
stc
inc
jmp
popa
pop
and
jmp
test
or
loopne
sahf
dec
fwait
pop
in
and
cmc
jp
push
and
lcall
jnp
adc
addr16
pop
adc
daa
inc
mov
xlat
add
jno
std
ljmp
pop
mov
mov
imul
cmp
mov
in
xchg
dec
ja
mov
adc
adc
adc
das
es
pop
sub
sbb
and
jbe
daa
imul
jle
dec
xchg
pop
notl
mov
mov
mov
sbb
xchg
xor
and
imul
into
fisubl
add
adc
pop
test
xchg
incb
cld
xchg
iret
mov
push
daa
pop
xchg
dec
loopne
imul
iret
xorb
mov
pop
ja
bound
dec
sbb
pop
adcl
mov
xchg
ss
mov
pop
mov
popf
lods
sti
shl
shr
add
popa
lret
aam
iret
ficoms
pop
dec
pusha
add
xorb
out
jmp
sub
test
loopne
sti
gs
inc
lahf
and
in
and
imul
int
jae
dec
ret
adc
pop
pop
push
mov
mov
lret
adc
lret
stc
dec
aaa
addr16
arpl
subb
push
pop
mov
mov
dec
cmp
add
add
ljmp
andb
cmpsb
cwtl
imul
mov
mov
cs
jae
xchg
xchg
mov
out
cmp
push
outsb
adcl
sub
pop
rcll
dec
or
mov
jo
in
ja
xchg
pop
pop
rolb
out
bound
repz
cmpsb
mov
jno
movsl
test
xchg
ficomps
sub
mov
popf
stc
mov
fistpll
mov
inc
mov
js
mov
and
pop
xchg
xor
lods
dec
add
and
pusha
adc
sbb
es
call
cmp
pop
sub
std
xlat
mov
add
or
out
pop
in
jb
stos
cmp
iret
fs
daa
dec
sbb
xchg
in
cmpxchg
or
cmp
iret
sbb
mov
jns
and
xchg
aas
inc
cmpsb
mov
jne
les
pop
cmp
mov
dec
test
cmpb
lahf
out
lahf
pop
cmp
fwait
pop
mov
jno
sub
push
sub
sbb
and
rcrl
in
repz
rolb
mov
int
popa
pusha
movb
test
mov
mov
lds
push
dec
cmp
cmp
and
daa
cltd
push
fdiv
jno
dec
arpl
push
dec
scas
inc
addl
shrl
push
sub
js
sub
mov
repz
fiaddl
and
inc
fs
sbbl
and
test
into
or
cmp
sar
test
cmp
cwtl
hlt
aaa
int
int3
dec
fstpt
xchg
imul
add
cmpsb
rcl
mov
cmp
push
dec
fs
ret
icebp
mov
pop
dec
in
sub
add
jg
and
call
cmp
mov
mov
fisttps
push
xor
leave
fstpt
bnd
jmp
pushfw
lea
jb
bnd
int3
adc
and
leave
adc
fwait
push
mov
mov
push
sub
push
cltd
mov
inc
dec
xchg
and
insl
lret
mov
movsl
sub
mov
mov
mov
push
xor
pop
cmpsb
cltd
mov
ljmp
lcall
faddl
rcrb
cli
push
adc
gs
inc
adcl
jp
sub
ficompl
push
outsl
push
aad
addb
pushf
and
mov
out
inc
jg
cmp
or
and
xchg
inc
push
mov
sbb
scas
xor
sbb
dec
pop
sbb
inc
xchg
scas
mov
cmpsl
add
push
cmpsb
loope
push
loop
jo
scas
loopne
push
xor
fildll
adc
jmp
imul
fimuls
popl
pop
dec
mov
icebp
jnp
repnz
and
fistpl
mov
xor
xor
cmpsb
scas
xchg
fwait
xchg
mov
mov
clc
dec
adc
ljmp
in
mov
xor
imul
mov
adc
iret
and
scas
cs
div
pop
pusha
pop
mov
aad
idivl
out
xchg
lods
arpl
xchg
stc
pusha
xchg
data16
xchg
or
inc
pop
stos
or
mov
sub
sbb
push
pusha
xor
sbb
inc
add
lahf
sbbb
outsl
flds
cld
jle
std
xchg
xchg
int3
pop
aas
in
and
dec
outsb
mov
shr
xlat
xchg
xchg
imul
lahf
push
cmp
mov
pop
mov
jl
add
pop
mov
xchg
gs
sbb
pop
imul
jl
jle
mov
sub
jle
mov
push
test
out
loopne
or
mov
idivl
bound
xchg
jbe
jns
mov
stc
inc
outsl
loop
jecxz
mov
arpl
pop
push
adc
in
sahf
cmc
ds
add
mov
into
mov
cmpsl
or
lods
inc
mov
pop
dec
cmp
fwait
push
mov
movsb
and
xchg
sbb
adc
fsubl
add
sbb
push
xchg
lahf
loopne
data16
mov
mov
mov
inc
cmpsb
dec
cmp
aaa
mov
clc
fbld
mov
cmc
push
imull
iret
xchg
or
int3
mov
inc
je
nop
push
cmc
popf
mov
mov
add
add
or
outsl
fabs
inc
cmc
and
cwtl
dec
mov
jae
lahf
mov
jl
jmp
inc
outsl
jg
fistpl
push
lea
rol
adc
pop
xchg
int3
test
xchg
add
xor
xchg
js
bnd
mov
out
in
adc
dec
imul
sub
stc
add
jbe
fldcw
and
add
cltd
pop
aaa
daa
jne
sti
cmpsb
xchg
mov
push
jp
push
sub
imul
pushf
and
adc
push
push
inc
sbb
fldenv
lcall
pop
pop
inc
and
dec
adc
sub
xor
sub
cmp
rol
ficoml
out
ror
jmp
aam
mov
lahf
fadds
inc
pushf
or
dec
xchg
lods
jle
cmp
pop
mov
icebp
rcrl
or
dec
adc
or
out
lret
ret
and
add
movsb
push
bound
push
ret
lods
dec
ljmp
loopne
xor
popf
cltd
adc
into
ljmp
push
sbb
scas
fs
jo
je
or
push
cltd
test
movsl
jmp
imul
shlb
dec
cmp
push
aaa
pop
sahf
fsubs
cmp
daa
mov
test
inc
xor
insb
lret
or
aas
add
fcmovne
ja
das
mov
into
int
inc
pop
jb
cli
in
cwtl
dec
jno
les
aas
sub
fs
inc
xchg
adc
test
shll
push
adcb
and
int3
test
mov
jmp
jb
or
inc
dec
xor
pop
scas
mov
dec
gs
mov
pop
pop
pop
lods
or
and
sub
ficomps
push
scas
dec
dec
outsb
add
and
dec
test
repnz
cmp
in
mov
aas
or
call
or
repz
lahf
dec
out
loope
mov
xchg
div
mov
pop
into
in
icebp
or
xchg
push
xchg
icebp
mov
sub
imul
mov
or
or
inc
test
ljmp
pop
sub
shrl
loop
fnstcw
aaa
mov
mov
std
xor
mov
stc
mov
xor
xchg
push
fwait
sub
or
aas
cmp
jl
adc
xor
mov
fisttps
out
push
ja
cmp
inc
insl
pop
xchg
orb
dec
movsb
iret
or
cli
push
insl
and
clc
mov
stc
jae
xchg
inc
dec
mov
and
mov
and
pop
mov
repnz
xor
cmc
push
call
mov
sub
xor
mov
push
inc
adc
pop
dec
push
in
movsl
pop
test
lods
pop
add
dec
movsl
xor
lods
iret
xchg
add
dec
inc
jecxz
pop
sbb
das
es
and
fwait
stos
push
and
dec
adc
dec
pop
sbb
cmpsl
lock
fimuls
shrb
imul
push
mov
lods
xchg
xor
dec
or
outsb
jg
xchg
or
cmp
andl
addr16
shl
adc
jo
sub
stc
dec
sub
cld
in
mov
in
mov
das
push
popf
out
cmp
xor
cmp
mov
push
pop
mov
mov
cltd
dec
je
ret
mov
lods
adc
xchg
mov
pop
mov
imul
mov
inc
nop
js
fiaddl
jle
pop
inc
and
mov
jecxz
imul
lret
and
dec
stc
fwait
je
cmp
push
call
mov
mov
aaa
xor
push
xchg
mov
in
push
lock
shrl
sub
sbb
xchg
in
test
orb
push
add
stc
inc
fs
or
mov
adc
and
mov
push
mov
jp
adc
and
sbb
sahf
js
adc
mov
clc
jnp
push
push
jl
xchg
sbb
jno
dec
mov
xor
mov
jmp
add
dec
ret
fsubs
mov
sbbl
subl
xchg
dec
adc
dec
fisubs
jl
jmp
rcl
rcr
fmull
cs
stos
lahf
daa
in
xchg
cmc
cmp
imul
imul
fldt
les
movsb
nop
xor
sahf
inc
xor
std
icebp
jne
addr16
flds
pop
cmpsb
push
imul
xchg
test
dec
fcmovne
sbb
call
movsb
push
dec
mov
jge
mov
test
in
or
jnp
leave
clc
pop
dec
mov
fdivs
out
mov
lds
xchg
xor
dec
fidivl
xchg
push
mov
in
hlt
cmp
jmp
test
pushf
jge
dec
in
ret
cwtl
clc
mov
or
stc
dec
jge
xchg
aaa
push
pop
pushf
push
inc
out
test
cmp
push
movsl
pop
shlb
and
out
dec
mov
or
mov
mov
addr16
gs
push
ficompl
jg
mov
lcall
leave
enter
pushl
mov
adc
das
jl
push
pusha
adc
es
fwait
popa
repz
cwtl
cmp
imul
subb
aam
xor
insb
or
pop
bound
add
lahf
mov
dec
lods
dec
out
pop
sbb
add
add
pop
in
scas
fistpll
sti
lret
pop
xchg
movsl
dec
pop
outsb
xchg
fsubl
repnz
cmc
inc
addr16
int3
ja
pop
pushl
push
xchg
stos
pop
fcoml
or
jo
mov
js
sub
mov
sbb
xchg
and
mov
sbb
add
dec
and
ret
data16
lea
jp
ljmp
sub
push
mov
jmp
movsl
pop
ss
imul
mov
lock
negl
mov
aas
adcl
sub
add
jp
jle
jp
popf
mov
and
cmpsl
cltd
pop
push
nop
aaa
js
imul
data16
mov
imul
add
decl
imul
dec
pusha
mov
faddl
xor
dec
jmp
inc
out
js
in
inc
mov
and
mov
sbb
in
fistps
sub
out
js
mov
pop
imul
popf
push
xor
ficoms
nop
cltd
adc
pop
scas
jecxz
pop
test
adc
dec
mov
dec
dec
push
imul
insb
push
or
aaa
sbb
popf
fiadds
mov
cltd
rorb
inc
lcall
aas
dec
add
movb
fwait
daa
out
out
push
mov
mov
pop
out
lock
and
or
sbb
inc
mov
test
out
lods
test
mov
flds
xchg
scas
repnz
sbb
mov
push
mov
out
push
cmp
addr16
mov
jl
rorb
daa
cwtl
pop
dec
movsl
jmp
push
lods
test
pushf
outsb
inc
mov
push
mov
push
or
sbb
mov
scas
or
inc
test
data16
leave
ja
test
jns
pop
pusha
fwait
inc
data16
pop
addr16
test
sti
out
jmp
inc
sub
negb
popf
jecxz
xor
mov
mov
mov
jle
bound
jp
test
pop
subl
mov
mov
push
sbb
out
mov
sub
js
int
addr16
filds
cmp
pop
and
test
and
add
mov
adc
sarl
lock
adc
lea
movsl
mov
mov
rclb
aaa
test
fwait
insl
fistpl
repnz
pushf
test
imul
mov
adc
sub
lods
pop
inc
aaa
stc
and
sub
jbe
mov
mov
jle
cmp
cmp
mov
push
shll
ljmp
pop
sub
pop
cmp
cmp
repnz
mov
push
mov
xchg
lea
outsb
lahf
lcall
imul
jecxz
or
cmp
push
test
push
loop
lods
mov
movsb
outsl
xor
ficoml
test
and
xchg
mov
pusha
push
jmp
sbb
mov
inc
inc
call
dec
add
xchg
js
pop
and
add
xlat
mov
add
cmp
ljmp
xlat
mov
daa
mov
testl
inc
pusha
add
mov
rorl
js
je
and
xchg
lret
sahf
lea
lret
stos
xchg
int
lea
pushf
gs
int
pusha
mov
stc
in
in
mov
inc
pop
addr16
lret
mov
push
cwtl
mov
imul
scas
mov
leave
mov
flds
dec
test
pop
cmpsl
lcall
fwait
je
sti
jne
inc
mov
roll
cmpsl
push
in
or
ljmp
int
mov
dec
lock
std
insl
sbb
xchg
or
insl
dec
sahf
pop
mov
test
in
add
fisubs
sbb
outsl
and
mov
sub
pop
mov
inc
cmp
inc
push
mov
inc
dec
cmp
out
stos
dec
jb
stc
ljmp
mov
popa
gs
fmull
lds
xor
pop
gs
push
shll
mov
pushf
mov
in
imul
insb
sbb
sti
push
jecxz
sbb
xchg
orl
lods
addr16
call
add
insl
addl
stos
scas
push
ss
mov
push
dec
mov
imul
in
mov
xchg
or
mov
push
dec
outsl
adc
out
popa
call
xchg
or
pusha
jp
in
and
imul
mov
fwait
and
in
repnz
and
pop
mov
andb
sbb
inc
fisubl
aaa
mov
pusha
push
stc
fstpt
int3
negl
mov
dec
mov
xlat
pop
rolb
cmc
test
cmpsb
jecxz
xchg
stos
int3
pop
leave
add
repnz
pop
xor
cmp
addr16
pushf
lahf
insl
rol
mov
sub
jp
imul
fiaddl
or
and
inc
jb
orl
mov
cmpsb
gs
push
jmp
cmp
sbb
sub
sbb
push
pop
pop
xchg
or
out
cmp
inc
pop
dec
pop
insb
andb
daa
fsubl
add
cmp
mov
inc
lock
loope
mov
lock
xchg
mov
lahf
mov
aas
adc
mov
pop
pop
ret
repz
into
push
or
fwait
out
arpl
in
mov
add
testl
fidivs
mov
shr
ss
aaa
mov
imul
push
cltd
push
inc
nop
mov
fidivrl
popa
cmp
fwait
inc
jp
ljmp
shl
adc
mov
aad
out
data16
addr16
pop
push
nop
outsl
pop
enter
stc
mov
or
imul
xor
sarl
cld
push
sub
sbb
mov
test
cltd
out
mov
jecxz
jb
xchg
jg
lahf
mov
ljmp
push
rorb
pusha
movsb
push
iret
repz
xchg
insb
fsubrl
shl
cli
mov
dec
sub
addl
adc
ljmp
fwait
and
outsb
xchg
sbb
subb
rolb
mov
xor
lock
mov
movsb
xchg
and
lcall
cltd
jae
fwait
mov
rcr
jns
mov
jge
cmp
mov
adc
jle
jecxz
cmc
push
push
dec
lock
fwait
push
cwtl
cmpsb
popf
int
lahf
xor
ljmp
adcb
roll
cmpb
mov
imul
xchg
mov
hlt
clc
xchg
pop
xchg
and
ret
mov
inc
push
push
fstps
aad
adc
cmp
xchg
fiadds
mov
xor
fcom
mov
sub
cmc
jmp
and
data16
mov
push
loopne
outsl
inc
mov
push
adc
iret
or
pusha
jecxz
push
out
call
inc
pop
add
pusha
mov
dec
sysexit
hlt
out
stos
std
or
fs
mov
jp
adc
and
xor
aas
adc
fdivl
roll
mov
icebp
mov
fldl
mov
das
pop
rorl
cmp
xchg
es
cld
adc
add
je
xchg
xchg
mov
inc
jo
push
addl
shlb
dec
addr16
xchg
mov
mov
pusha
in
test
lock
xchg
in
and
dec
aaa
enter
out
fwait
out
data16
loop
lcall
bound
fwait
insb
jae
clc
adc
push
inc
xchg
lcall
mov
sarb
mov
xchg
dec
push
sub
fisubl
out
mov
mov
xchg
sub
or
mov
loop
movsl
rclb
mov
push
lock
icebp
xchg
pop
mov
leave
test
mov
xorb
shlb
jp
sbb
jns
pop
test
dec
lods
jns
jmp
jmp
mov
mov
arpl
mull
lret
mov
ds
mov
and
inc
inc
push
inc
lahf
dec
test
push
mov
mov
jae
push
mov
dec
mov
pop
imul
addr16
test
addr16
ja
aas
in
push
xor
sub
pop
dec
lods
rcrl
push
mov
scas
arpl
ret
dec
popf
fstps
sub
mov
nop
insl
xchg
imul
in
cmp
add
test
scas
in
mov
out
sar
push
call
inc
mov
cltd
daa
imul
clc
add
sahf
push
js
inc
push
inc
call
xchg
jbe
insl
pop
loop
cmp
sub
lret
inc
mov
cmp
inc
pusha
in
xchg
and
inc
fldcw
das
pop
mov
push
adc
xchg
enter
mov
lock
push
scas
and
mov
popa
test
mov
sbb
xchg
fnstcw
nop
imul
jnp
sub
adc
enter
enter
je
pusha
leave
test
in
call
cs
jne
in
stc
jecxz
subb
dec
cmc
cmp
push
cmpl
pop
mov
pusha
addr16
lea
xchg
mov
roll
mov
jae
test
or
pop
aas
fs
fs
mov
in
stc
repnz
push
adc
mov
fdivs
hlt
jecxz
xor
push
xchg
jae
mov
hlt
jp
jg
jge
cs
sub
imul
or
mov
ja
mov
addr16
add
ljmp
icebp
xor
jae
xchg
scas
sbb
scas
outsl
mov
add
into
fwait
or
mov
daa
icebp
test
sbb
xor
ja
enter
hlt
nop
lea
ficoms
jnp
ja
inc
lock
fistps
jp
lahf
push
mov
lods
leave
cmp
sbbl
dec
daa
add
dec
inc
mov
mov
mov
inc
mov
mov
leave
popa
movsl
mov
and
ja
pop
cmc
sub
lods
scas
in
aaa
mov
push
outsl
inc
sub
jg
dec
mov
jb
inc
mov
jg
fdivs
adc
or
pop
idivb
rorb
hlt
fimull
out
push
lea
mov
or
mov
push
cwtl
push
sub
mov
or
mov
push
add
js
aaa
pop
out
pop
jne
pushf
ja
enter
dec
push
jnp
movsl
mov
xchg
ja
aaa
mov
add
add
add
aad
fsubr
ds
sub
sub
shll
cmp
clc
orb
aas
dec
mov
adc
mov
out
outsl
xchg
fwait
pop
test
cmpsl
sub
cmpb
jg
push
adc
xor
ja
inc
adc
push
mov
mov
and
test
sub
xchg
incb
sub
xchg
mov
test
push
out
xorl
movsl
mov
pop
xchg
or
ret
adc
cmp
sbb
xlat
lcall
xor
test
test
cmp
sub
mov
out
icebp
pop
test
test
sbb
push
and
xor
adc
sub
test
mov
and
pop
lcall
incb
in
ficoms
sbb
std
pop
enter
xchg
add
push
and
sbb
mov
mov
imul
pop
cli
inc
movsb
and
and
js
or
test
mov
jno
cwtl
ja
mov
movsb
out
inc
add
push
data16
lahf
fmull
fwait
push
xchg
scas
aam
xlat
imul
xchg
jecxz
xchg
out
jp
repz
ja
sub
fnstcw
dec
cltd
rcll
mov
cmpsb
mov
pop
loop
mov
sbb
mov
inc
adc
aaa
ds
mov
pop
les
dec
xor
shl
push
jo
jecxz
xchg
mov
cmp
mov
mov
xchg
xor
mov
sbb
sbb
pop
push
pop
pop
pop
cli
orb
mov
mov
inc
push
test
xor
mov
add
push
lret
adc
cmp
in
addr16
jae
sti
jbe
pusha
pop
dec
push
ss
loop
ja
fisubs
mov
popf
add
xchg
xchg
pop
dec
mov
pop
daa
push
cltd
xchg
mov
mov
cmpsb
cmc
fwait
test
data16
in
jne
push
xor
pop
inc
pop
enter
in
xchg
js
outsb
mov
pop
mov
repnz
aas
imul
fwait
jmp
jg
dec
inc
adc
rcll
pop
or
mov
dec
aas
mov
sbb
inc
mov
add
ljmp
push
imul
or
testb
out
lods
xchg
jns
dec
insl
cmp
nop
stc
pushf
imul
fwait
aam
jecxz
popa
gs
jg
or
dec
mov
and
fnsetpm(287
stos
xor
sub
add
pushf
mov
repz
mov
mov
outsl
pop
lods
fucomip
out
mov
jo
or
lahf
push
ffreep
repnz
mov
adc
mov
sbb
dec
lods
dec
fdivs
inc
xor
repz
or
jne
mov
mov
pop
enter
aaa
dec
jmp
imul
cmpsl
adc
jp
jp
add
inc
lret
jle
add
push
mov
cmpsb
and
xchg
movsb
add
adc
pop
mov
loopw
sti
popf
enter
fmull
aad
jecxz
add
push
std
mov
cli
push
int
jo
nop
inc
popf
fwait
jl
je
mov
in
rolb
test
jne
dec
sub
mulb
push
xchg
adc
add
sub
sbb
cmc
aam
adc
dec
sub
mov
mov
mov
add
push
jno
inc
addr16
adc
imul
dec
lds
daa
aas
std
push
mov
adcl
in
and
pop
outsb
jecxz
adc
repz
sub
jae
mov
pop
or
ss
pusha
ret
inc
xchg
aam
xchg
mov
jnp
sbb
stos
sahf
or
pop
shll
xchg
push
into
dec
mov
movsl
or
push
jnp
adc
scas
lods
inc
mov
mov
adc
cmp
stc
sbb
and
inc
lahf
jns
notl
aas
shlb
xchg
push
add
mov
fisubrs
xchg
pop
xor
sbb
cli
pop
cmp
xchg
lret
imul
addr16
jmp
scas
fists
outsl
xchg
mov
lods
dec
addb
arpl
adc
cmp
pop
vmread
or
mov
inc
pushf
fisttps
add
and
in
sbb
cmpsl
fwait
outsl
inc
shrb
and
fiaddl
rcrb
test
pop
pop
lcall
in
xchg
lock
push
outsb
andl
mov
xor
push
nop
and
mov
je
aaa
int
test
mov
cld
enter
stc
das
jp
jecxz
mov
shrl
lock
pop
movsb
aas
mov
int
in
ret
sub
int3
inc
mov
xchg
mov
call
imul
mov
lock
pop
mov
jb
jecxz
roll
test
add
pop
and
or
xchg
sbb
and
xchg
fcoms
mov
mov
xor
push
clc
lcall
test
cwtl
sbb
insb
nop
lea
jecxz
cwtl
xor
imul
outsb
lods
daa
inc
loop
push
push
xchg
mov
icebp
sbb
rcrl
mov
push
cwtl
dec
dec
mov
sbb
lods
dec
and
xorl
arpl
push
jmp
mov
lock
add
jecxz
icebp
sub
xor
mov
aas
xchg
add
dec
in
test
aam
in
test
push
fs
inc
add
jnp
movsl
lret
add
loop
dec
lods
pop
dec
push
rclb
dec
lock
mov
dec
in
daa
add
mov
outsl
xchg
xchg
dec
xor
lock
push
mov
imul
out
cltd
lretw
in
jmp
in
aam
jns
imul
lcall
fwait
push
imul
sub
outsb
and
xor
insb
pop
add
faddl
or
loope
addr16
cmp
test
lcall
cmp
push
lods
mov
mov
aas
fxtract
enter
ret
imul
cmpsb
pop
mov
mov
mov
adc
pop
imul
dec
popa
add
nop
leave
fwait
mov
pop
push
xchg
mov
pop
in
mov
int3
push
cmp
ja
mov
mov
icebp
in
mov
cmp
fstpl
push
push
imul
das
sbb
cmp
mov
out
hlt
fmul
and
pushf
shl
aas
xchg
scas
in
icebp
sahf
les
idivl
aad
mov
dec
rorl
pushf
adc
cld
cmp
cld
pop
inc
jo
cltd
xlat
pop
aam
mov
mov
mov
lods
adc
xchg
ficoms
popf
inc
call
sub
lahf
adc
dec
flds
mov
push
pop
or
jp
scas
fmuls
sbb
test
mov
cmp
call
das
cmpsl
add
lock
mov
cld
mov
fsubr
cmp
imul
mov
fisubrl
sub
subb
or
push
insl
leave
and
negl
test
adc
push
pop
stos
inc
aaa
xchg
inc
pop
imul
push
mov
add
xchg
jecxz
pop
je
or
inc
out
fcmovnu
insl
pop
enter
sub
nop
roll
lds
out
je
inc
mov
xor
ja
daa
divl
test
mov
pushf
lret
mov
sbbb
adc
test
out
out
daa
insl
mov
lcall
xchg
not
outsl
lock
jnp
adc
repnz
std
out
loopew
cld
add
test
inc
dec
in
pop
xor
jp
inc
or
jl
int3
sbb
out
inc
lods
mov
add
repz
push
cmc
or
mov
in
xchg
jge
je
lods
mov
mov
lods
inc
sarl
lahf
cli
popa
mov
xchg
or
sahf
lcall
push
xchg
lods
sahf
lcall
jmp
mov
mov
mov
fisttps
sub
or
outsb
clc
cmp
outsl
mov
push
push
cltd
and
stc
data16
mov
sbb
in
adc
std
jle
adc
jae
div
push
nop
xor
mov
mov
cmpsb
sbb
adc
inc
xchg
std
and
mov
pop
push
lcall
push
lahf
ret
addb
in
ret
xchg
in
push
mov
scas
aaa
mov
pop
xor
dec
test
out
dec
cmpb
arpl
xor
in
mov
leave
dec
mov
or
sbb
in
pusha
xchg
pusha
mov
inc
jne
sbb
xchg
xor
xor
pop
jnp
jmp
pop
push
cltd
scas
notl
andb
sti
mov
xor
nop
imul
test
mov
jp
aad
dec
shll
in
jne
or
adc
mov
fiadds
cwtl
cmp
adc
jecxz
inc
outsl
dec
pop
les
out
lock
movsb
dec
inc
int
dec
pop
fcompl
clc
hlt
add
pop
out
push
cli
pop
aam
mov
mov
imul
xchg
inc
jno
xor
push
dec
push
mov
inc
aas
xor
adc
nop
dec
lock
add
xor
jne
push
dec
and
ja
std
mov
leave
dec
pop
enter
xor
imul
jmp
jnp
or
daa
cmc
mov
mov
ljmp
jle
lahf
and
repnz
and
push
or
xchg
rcr
cmp
inc
out
dec
push
mov
lods
ja
cld
jne
ja
xchg
int3
xchg
rep
mov
cmp
cltd
andl
ret
mov
filds
imul
adc
dec
sub
lcall
shlb
popf
cmc
pop
jb
addr16
mov
shlb
mov
and
daa
pop
or
inc
call
ja
pop
and
clc
dec
xchg
xchg
loopne
inc
cmc
test
sub
or
cmp
fidivrl
scas
aas
lcall
mov
scas
dec
pop
adc
pop
or
imul
push
pop
adc
xlat
cmp
std
mov
mov
out
mov
add
sub
sbb
imul
sbb
std
popa
fistps
adc
outsl
xchg
dec
in
dec
inc
or
jns
pop
xchg
in
dec
push
and
outsl
xchg
mov
inc
daa
jmp
push
or
outsb
test
pop
arpl
in
imul
mov
mov
adc
mov
pop
in
cld
fmuls
xchg
loope
imul
dec
add
push
mov
loop
mov
sbb
lds
lcall
xchg
lea
repz
jno
mov
mov
pop
inc
outsb
mov
iret
js
ret
cltd
faddp
mov
lcall
arpl
and
dec
mov
xor
adc
rcrl
cmpsl
adc
jns
cmp
inc
mov
cmp
fildl
mov
fisubrl
ljmp
imul
xchg
jbe
sbb
popf
call
mov
mov
sbb
xor
orb
jmp
cmpsb
adc
lret
adc
mov
test
mov
jle
mov
mov
test
pushf
add
push
jae
pop
mov
hlt
imul
sbb
mov
mov
xchg
fcmove
jne,pt
xchg
or
dec
push
sub
cwtl
incl
repnz
adc
mov
out
stos
and
push
movsb
pop
test
mov
rcll
pop
mov
insl
mov
xor
aaa
hlt
imul
rolb
mov
ja
lret
pop
adc
jle
jb
stos
orb
rol
leave
pop
pop
test
ds
mov
push
adc
iret
xchg
inc
and
dec
lock
bound
sbb
or
aam
xchg
or
shll
jns
mov
jecxz
repnz
cld
mov
xor
movsb
dec
mov
xchg
in
mov
adc
mov
insb
pop
out
mov
jbe
mov
aas
adc
pop
dec
push
orl
push
clc
xchg
xchg
stos
xchg
je
push
pushf
subl
stc
cwtl
inc
rorb
call
mov
pop
cltd
mov
int
sbb
mov
shlb
lods
rorb
push
call
or
dec
mov
stc
cmc
jne
mov
cli
xchg
cmp
imul
daa
les
cmp
mov
xchg
mov
imull
inc
jns
or
repnz
in
arpl
test
aas
push
movb
xor
pop
into
sub
mov
mov
imul
imul
movsl
js
or
xor
out
stos
add
lock
mov
mov
mov
stos
sarb
push
es
je
ficomps
aad
push
fadds
mov
inc
jmp
ret
push
cmp
fsubrs
js
inc
shrl
dec
push
or
jg
mov
out
mov
popa
cwtl
out
repz
dec
pushf
jecxz
sbb
cmpb
cmp
mov
mov
das
mov
icebp
pop
cmpsb
add
fnstenv
sub
inc
cltd
insb
mov
cld
jnp
shll
nop
insl
mov
jne
dec
sbb
jecxz
in
insb
es
xchg
jg
mov
lods
push
jo
pushf
xchg
stc
jns
cli
sti
and
inc
cs
sbb
or
lock
fnstenv
sbbb
test
jns
xor
cmpb
repnz
mov
push
push
mov
xchg
xchg
xor
jg
cltd
jns
fabs
imul
inc
mov
sbb
imul
mov
pop
mov
out
inc
dec
int3
les
std
addr16
imul
bound
mov
lock
aas
xchg
mov
mov
pop
popf
ljmp
adc
das
xchg
sub
sub
movsb
pusha
push
fisttps
xchg
pop
push
stc
jbe
xor
je
mov
scas
xor
hlt
rol
outsl
dec
repz
repnz
xchg
aaa
sbb
into
inc
insb
into
arpl
out
sub
mov
cmp
incb
icebp
dec
fwait
jne
xor
adc
outsb
or
ret
jmp
dec
dec
mov
dec
nop
test
popf
int
les
nopl
jle
mov
aas
push
sbb
daa
or
mov
mov
pop
stc
push
setl
stos
hlt
pop
repnz
xchg
jecxz
sbb
pop
mov
in
cmpsb
iret
aas
mov
push
call
push
or
inc
and
cld
mov
test
cwtl
cmp
insl
icebp
sbb
pop
mov
mov
pop
inc
lds
and
xchg
test
out
pop
ficoms
movl
nop
or
sahf
jmp
nop
mov
mov
fisubrs
testl
or
or
bound
insl
inc
movsb
push
imul
loope
in
dec
xor
int
push
push
movl
inc
sbb
sub
aaa
int3
jnp
xchg
mov
or
mov
cmp
adc
and
inc
insb
aas
mov
popa
in
sbb
jb
mov
mov
pop
scas
inc
sbb
xchg
scas
fisubs
insl
mov
sahf
cltd
lea
sbb
hlt
xchg
mov
inc
sbbb
aam
cs
cld
orb
fsts
xlat
aas
in
popl
push
pop
fxch
mov
mov
or
cmp
pop
in
fbld
and
es
das
in
into
bound
mov
add
pop
fcoms
iret
xchg
push
stos
and
xor
push
mov
and
cmpsl
pop
jno
mov
call
mov
sub
mov
sarb
xchg
mov
cmpxchg
xchg
jns
daa
pop
mov
pop
mov
pop
mov
or
cwtl
vmaxps
add
shr
add
sub
lock
add
pop
ret
ss
lcall
xor
out
mov
outsb
xor
insl
push
aaa
lcall
insl
popf
pushf
or
je
outsl
es
xor
mov
push
inc
movsl
jno
int3
pop
fistpl
mov
mov
cmpsl
iret
scas
imul
sbb
frstor
movsb
stos
push
leave
push
dec
push
test
cmp
pop
fdivl
bound
scas
add
mov
repnz
and
pusha
jo
cmc
jns
jecxz
sahf
mov
test
jmp
in
jbe
jb
js
insl
imul
sub
and
iret
int
insb
test
xchg
mov
sub
mov
loop
pop
inc
cmpsl
adc
jbe
ret
insb
outsb
inc
sbb
fsubrl
xchg
jp
adc
outsb
xorl
add
fistps
lret
xor
push
push
imul
cld
sbb
xchg
jbe
cltd
addr16
push
or
pushf
or
sub
mov
leave
shlb
dec
imul
test
xchg
mov
xor
faddl
inc
push
xchg
outsl
or
and
sbb
pop
outsl
test
xorl
popa
dec
add
dec
mov
cwtl
dec
outsl
popa
outsb
mov
or
push
xchg
add
or
pusha
rsqrtps
sarb
shl
in
xchg
cmp
repnz
xor
lret
xchg
rcrl
or
mov
pushf
sbb
stc
pushf
clc
dec
in
in
jo
arpl
jp
cmp
arpl
mov
mov
fmuls
pushf
mov
in
stos
inc
repz
mov
jecxz
loopne
cmp
rcrb
repnz
push
mov
xchg
int3
sbb
xor
fstpt
pop
lahf
iret
and
outsl
mov
push
add
push
xchg
push
xchg
cmp
xor
dec
out
popa
push
jo
cmp
cmp
inc
mov
xor
fnstcw
and
mov
lods
nop
fwait
mov
fs
cmpsl
sub
sbb
or
test
ret
and
inc
repnz
dec
cmpsl
adc
mov
lahf
loope
in
ja
enter
push
cmc
loopne
dec
ds
enter
stc
adc
popf
inc
jbe
mov
pop
mov
fadd
in
shlb
lock
in
js
fldcw
enter
pop
xchg
or
daa
imul
rclb
mov
loopne
pop
rclb
leave
dec
push
leave
pop
hlt
push
cmp
imul
sbb
xor
pushf
sarb
or
pop
pusha
push
aad
movsl
enter
movsl
insl
scas
add
pusha
outsb
bnd
repnz
das
jns
out
push
loopne
out
ja
iret
inc
imull
je
shlb
pop
cli
std
sbbl
jnp
xchg
mov
inc
lahf
mov
shr
into
xchg
mov
fcmovnbe
xchg
clc
gs
addl
shll
mov
push
lahf
mov
jle
cmp
or
jne
fnsave
inc
inc
sub
into
js
movsb
out
aaa
pop
xchg
xchg
in
int
push
arpl
arpl
lcall
inc
mov
js
addr16
stc
inc
or
out
jb
push
insb
mov
inc
xchg
sub
mov
mov
adc
jae
mov
cli
daa
popf
ja
lods
push
cmp
mov
dec
jns
inc
mov
mov
aad
jecxz
jp
xorb
or
jb
loop
cmpsl
push
xchg
cmp
into
int3
sbb
push
and
adc
push
mov
lcall
sub
iret
push
lods
mov
sub
aad
test
xchg
inc
aas
or
ds
sbb
rorb
shrb
lahf
pusha
addl
hlt
and
cmp
arpl
cld
push
mov
scas
pusha
addr16
mov
out
add
mov
jo
neg
stc
mov
sub
inc
lcall
jns
fsts
xlat
dec
adc
jecxz
out
cmc
pop
int3
mov
xchg
outsb
mov
jno
adc
sub
in
fwait
cli
cld
fmuls
cmp
add
mov
add
call
dec
out
and
inc
mov
fisubs
pop
mov
pop
sub
inc
dec
ja
jl
or
mov
and
ja
test
dec
pusha
lds
sub
adc
testb
fisttpl
inc
xchg
jns
mov
lret
pop
sti
ret
inc
stos
and
notl
jmp
clc
mov
roll
dec
mov
mov
les
jl
int3
std
ja
or
iret
test
out
movsl
jnp
ljmp
dec
jecxz
in
pushf
xchg
dec
mov
sar
lods
jne
ljmp
inc
and
test
rcll
repz
dec
subl
cmpsb
gs
jmp
pop
pop
xor
aas
lret
cmpsb
imul
sahf
pop
lds
adc
ja
add
sahf
pop
jg
xchg
clc
testl
mov
jp
pop
cwtl
xor
repz
shl
mov
cmpsb
push
aam
popf
imul
test
add
out
adc
mov
add
or
cmpl
and
add
mov
sahf
rcrb
adc
push
adc
addr16
xchg
xchg
stos
adc
jnp
jo
xchg
and
xchg
xor
out
xor
pop
ljmp
fwait
mov
xchg
xchg
fdiv
scas
repnz
xchg
test
test
clc
cs
adc
mov
jbe
cltd
pop
xchg
imul
shl
cmpsl
adcl
add
daa
imul
enter
pop
dec
push
negl
fiaddl
hlt
sbb
jb
inc
enter
imul
sarl
or
push
shlb
std
and
nop
inc
loopne
leave
adc
fstpt
cmp
jge
and
or
cwtl
ret
pushf
cs
aas
xchg
dec
mov
sbb
mov
addr16
lds
or
inc
fsts
ret
add
dec
sbb
push
pushf
xchg
adc
sub
stos
pop
mov
dec
pusha
xchg
jp
cmc
fldenv
aaa
dec
add
lret
mov
ljmp
xchg
cmpsl
xor
xchg
fcoml
push
hlt
int
mov
inc
iret
popf
pop
push
testb
sub
cmpsl
or
mov
aaa
jno
test
std
imul
sbb
cmp
mov
fldcw
dec
push
loop
cmp
inc
lea
int
cmp
sahf
ja
mov
mov
or
incb
iret
test
aas
nop
sub
jecxz
and
mov
ja
scas
ds
dec
sahf
call
mov
repnz
aam
jp
mov
pushf
imul
mov
inc
bound
adc
pand
sbb
testb
dec
mov
jle
aas
fstpl
xchg
or
jg
push
mov
iret
mov
std
orb
imul
roll
icebp
int
mov
test
out
xchg
mov
mov
inc
mov
call
mov
scas
daa
out
mov
jnp
pop
and
push
jle
mov
jnp
mov
int
inc
push
push
cs
into
mov
pop
pop
push
cwtl
or
or
dec
mov
pop
and
inc
lcall
lock
inc
lret
das
xchg
aas
int
fnstenv
sbb
sbb
call
movsl
jae
std
in
fs
in
cmp
loope
fbstp
sahf
out
push
fdivrs
iret
in
cmp
xchg
cs
hlt
mov
iret
iret
adc
pushf
adc
addr16
call
pop
data16
shll
and
lret
mov
lret
into
addr16
fsubrp
cmp
dec
mov
jne
das
mov
add
adc
fwait
jns
int
inc
movsb
mov
dec
jp
gs
shll
inc
rorl
mov
inc
adc
out
addr16
xchg
les
mov
popa
add
mov
xchg
das
pop
push
js
das
mov
pushf
inc
jecxz
xchg
andb
nop
pop
sub
push
mov
das
push
cmp
mov
mov
cmpl
cmpsl
cmpsb
stos
dec
inc
aaa
inc
adc
cli
and
xor
pop
mov
cmc
hlt
fs
dec
push
test
fcos
and
aas
shlb
mov
pop
mov
adc
dec
push
jg
sbb
ret
insl
and
sub
je
sahf
add
sub
lret
sbb
lcall
mov
ljmp
in
xchg
mov
xchg
inc
sbb
push
push
subb
imul
sub
xor
ljmp
addr16
jns
push
inc
sbb
sbb
sub
push
sbb
int
xchg
dec
aaa
xchg
pusha
jp
daa
orl
dec
dec
mov
xor
mov
fwait
mov
jbe
dec
lock
jae
test
pop
jo
enter
test
inc
int
cmp
or
stos
inc
das
push
push
dec
imul
add
popf
lods
mov
rcrb
js
add
pop
cmp
lret
sbb
jecxz
or
mov
incb
fwait
xchg
sub
sub
dec
xchg
mov
push
push
into
daa
stc
xchg
lds
icebp
mov
rcrl
pop
shl
pop
or
int3
cmp
sub
adc
xchg
lock
mov
adcb
std
inc
inc
fwait
lea
jle
fnstenv
pop
movsb
daa
mov
sbb
cmp
insl
sahf
or
inc
orl
mov
adc
xchg
xchg
mov
and
and
pop
addr16
movsl
mov
scas
xor
inc
cmp
lahf
nop
stos
int
mov
shll
lret
andl
mov
in
je
pop
or
and
push
insl
cmp
cmpsl
sbb
in
fistl
mov
pop
shl
dec
mov
push
cltd
int
jg
jge
mov
xchg
sub
xchg
in
mov
fnsave
xor
fwait
inc
fs
mov
or
lock
jg
pop
testl
inc
addr16
test
mov
xchg
lods
psllw
fdivrl
cwtl
cli
je
mov
jae
test
mov
jecxz
xor
aad
xor
sub
mov
mov
sub
es
out
push
imul
push
popf
mov
jp
dec
mov
imul
les
lds
and
dec
pop
pop
add
fisttpl
pusha
xchg
xchg
push
jmp
repnz
jl
fisubrl
cmpsl
mov
stos
out
incb
jle
lods
dec
fwait
adc
xchg
loop
jbe
ror
push
cmc
mov
bound
cmp
mov
xchg
lcall
inc
out
imul
lret
or
push
mov
inc
out
jp
divl
ret
jge
fidivl
xlat
cmp
pop
mov
cltd
and
fmuls
js
mov
jns
addr16
adc
push
rcrl
add
push
add
outsb
or
aas
and
adc
jb
push
jns
or
xchg
mov
fwait
push
pop
loope
lds
aas
pop
ret
xor
sbb
push
pop
sub
out
or
pop
imul
mov
cmp
xchg
adc
int3
int3
les
imul
mov
jns
aaa
imul
arpl
mov
rcll
notl
outsl
jae
cmpsb
pop
nop
pushf
or
in
insb
imul
mov
in
out
and
cmpsl
lahf
dec
mov
xor
adc
je
or
mov
fldl2t
adc
cwtl
sub
leave
push
pop
mov
push
test
jp
push
mov
cmp
pop
cmp
jbe
pop
xchg
imul
cmp
popa
mov
sub
test
imul
jle
xor
icebp
gs
movsb
mov
sti
cmp
iret
in
mov
inc
sub
mov
add
push
das
dec
sub
mov
repnz
push
sbb
scas
fwait
sbb
adc
imul
outsl
dec
xchg
mov
mov
push
int
jmp
call
subl
mull
pushf
push
push
stos
push
adc
fdivl
leave
xchg
jp
push
ret
call
arpl
mov
and
leave
and
or
aaa
xor
add
jmp
xchg
outsb
adc
inc
mov
dec
out
pop
or
xchg
mov
arpl
test
dec
shrl
xor
mov
lock
add
popa
out
jp
xchg
jne
rorb
lret
pop
push
fstps
inc
imul
rcll
mov
outsb
dec
sub
cmp
or
xlat
outsb
loope
cltd
stc
jo
sbb
xchg
pop
push
mov
mov
and
mull
inc
rorl
mov
pop
xlat
adc
adc
adc
adc
mov
imul
je
sarl
data16
add
data16
dec
dec
xchg
sbb
fsubrl
push
jnp
pop
sub
das
sub
test
mov
pusha
test
pop
jb
stc
jo
sbb
mov
shll
mov
int3
inc
imul
dec
in
sar
int3
pop
mov
ss
jbe
mov
mov
out
cmp
sbb
dec
sti
push
jo
cli
pop
cli
rcll
out
or
mov
xchg
fstpl
pop
insl
mov
adc
push
inc
imull
dec
adc
sbb
js
imul
inc
mov
dec
jno
loop
shll
js
add
jmp
add
or
cmpsl
in
dec
push
hlt
js
int3
pop
movsb
imul
lds
jnp
xor
out
cmc
pop
jecxz
inc
fwait
nop
xor
test
dec
sbb
vmulpd
cmp
push
push
xchg
int3
inc
ja
adc
in
ficompl
pop
out
test
pushf
in
mov
fdivl
fstl
lret
adc
jl
test
loope
repz
jno
fwait
mov
pop
in
and
xchg
fcompl
imul
inc
insl
inc
nop
and
int
aaa
mov
sbb
and
dec
in
add
sub
pop
inc
push
fisttpll
jns
outsb
or
loop
pop
push
xchg
mov
sti
push
jne
in
dec
pushf
fdivrl
fidivrl
jecxz
xor
and
fwait
mov
scas
or
dec
test
mov
xor
data16
pop
sub
jg
insb
push
ficomps
pop
mov
dec
ret
mov
mov
fs
jp
shr
fstps
inc
scas
xchg
test
mov
xchg
inc
add
fs
sbb
mov
mov
aaa
push
es
clc
mov
mov
lcall
test
ds
push
mov
push
pushf
pop
inc
sbb
and
add
jae
nop
jecxz
cmp
rorb
dec
out
dec
add
cmp
add
ficoms
repz
add
pop
and
push
inc
and
mov
movsb
sti
sbb
push
lea
fwait
ss
loope
dec
mov
mov
mov
int3
lock
dec
sbbb
orl
outsb
jns
mov
pop
mov
sub
pop
aas
lret
sub
add
adc
push
pushf
pop
and
sbb
fistps
inc
xor
and
fdiv
jne
dec
jp
into
xor
test
jl
outsl
pop
repz
push
icebp
pop
mov
orb
jg
pop
imul
loope
or
fwait
inc
jne
dec
out
fadds
mov
repnz
test
stos
outsl
add
mov
dec
inc
aas
in
daa
inc
mov
std
inc
ja
stos
lret
das
jle
mov
pop
and
out
sbb
xor
test
fcomp
cld
shlb
adc
fildl
add
mov
dec
jg
adcl
fwait
jecxz
enter
mov
push
std
xchg
test
fcmovnu
addr16
xchg
push
fldenv
out
jae
je
lods
or
pop
pop
jno
dec
dec
inc
hlt
xchg
pop
and
mov
cwtl
inc
add
fwait
inc
sbb
xchg
cltd
add
mov
fwait
int3
bound
rcr
inc
sub
adc
in
sub
mov
push
mov
mov
mov
xchg
jno
push
and
jne
in
sub
adc
mov
mov
insb
mov
popa
std
or
inc
push
int
jle
inc
aaa
sub
fwait
jae
sbb
cmp
shlb
jge
in
dec
xor
aad
add
sub
decb
adc
xor
sbb
fistpll
ja
scas
outsb
subb
add
test
stos
jb
dec
mov
lea
incl
add
test
jge
and
adc
xor
cwtl
or
in
lods
fstps
imul
jl
xor
enter
lcall
mov
stc
inc
icebp
mov
jns
imul
fdiv
adc
mov
inc
out
js
push
push
xchg
inc
mov
xor
aam
push
push
adc
cmp
ret
inc
jb
pop
xor
and
or
repz
inc
push
mov
push
loope
dec
sarl
ja
ficoms
aas
test
popa
pop
jnp
incl
iret
or
out
mov
xor
fldcw
mov
fmull
mov
lcall
push
mov
pop
sbb
adc
test
mov
push
movsb
out
mov
push
add
cmp
test
das
add
fs
xchg
insb
rorb
inc
shrl
xchg
cmp
cltd
loopne
push
add
dec
vprotq
xor
xchg
mov
mov
fwait
add
gs
cmp
inc
in
arpl
inc
jo
dec
insl
call
jb
loop
and
pop
add
ret
sub
popa
push
fsubl
sbb
inc
and
lock
jmp
mov
or
addr16
loop
add
xchg
adcb
and
add
lcall
push
push
out
mov
pop
cmp
js
cs
das
lock
xchg
inc
lds
mov
mov
push
or
add
hlt
xchg
mov
and
or
jo
loopne
jmp
mov
cwtl
mov
xor
mov
in
pushf
and
jp
aaa
jne
loop
xchg
roll
mov
es
push
scas
jb
insl
in
inc
gs
lahf
cld
sub
fwait
dec
cs
push
psubusb
icebp
mov
push
je
test
hlt
jmp
mov
mov
xchg
inc
inc
test
dec
jmp
sbb
cmc
mov
lcall
sbb
dec
lock
cltd
arpl
push
inc
dec
push
imulb
lods
jmp
mov
jle
adc
mov
in
mov
cmc
and
jmp
xchg
or
sbb
fisubrl
dec
pusha
out
mov
push
push
lea
cmpsb
or
add
hlt
jne
cwtl
repnz
lea
fs
fisubs
sbb
and
lahf
pop
imul
push
mov
out
push
ret
inc
mov
cmp
call
inc
pop
lahf
daa
fwait
imul
inc
arpl
or
fs
mov
loop
cld
push
outsl
pop
inc
sbb
ljmp
xchg
iret
dec
shl
cld
lret
mov
aam
aaa
push
outsb
lcall
push
jbe
push
sbb
sub
sub
xchg
into
mov
push
loop
push
sbb
add
adc
lcall
lods
lea
xor
and
xchg
mov
xor
hlt
fstps
sbb
fcmovbe
ret
mov
sub
movsl
add
push
fsubr
pop
in
adc
ficomps
stc
mov
cmc
sbb
fwait
imul
pusha
push
shrb
jmp
test
jmp
fwait
dec
shll
pop
aad
shrb
cmpsl
popaw
flds
aaa
cmpl
int
jecxz
imul
mov
cltd
shll
in
dec
cmpl
test
inc
inc
clc
lret
iret
mov
mov
pop
sub
in
lret
or
dec
xor
push
inc
pop
sbb
aaa
out
pop
ja
push
xor
pop
lcall
in
sub
dec
jo
mov
imul
cs
mov
fwait
and
dec
lods
inc
xor
test
lea
inc
push
into
fdivl
std
lret
dec
daa
cmc
mov
outsl
add
xor
and
stc
mov
rorl
flds
aaa
pop
and
into
push
imul
pop
rorl
cwtl
xor
mov
shrl
out
pop
cwtl
popf
bnd
push
push
push
jbe
jp
pop
jl
xchg
lea
insl
mov
hlt
test
clc
or
mov
mov
fmull
inc
insb
mov
and
inc
adc
jp
daa
lds
cmpsl
popf
rorb
pop
jns
ss
mov
cld
add
and
pop
test
dec
sahf
mov
out
push
dec
mov
xchg
stc
test
and
mov
jo
adc
mov
test
ror
outsl
jns
lahf
xlat
lock
jl
lcall
scas
fstpt
and
fwait
jae
icebp
add
xchg
pop
ja
jp
fbld
sti
mov
cltd
sbb
push
push
lcall
lret
push
leave
in
push
xchg
pop
movsb
sarb
xchg
mov
lea
test
inc
cmp
mov
mov
and
add
loop
cmp
fld
outsb
mov
out
outsb
inc
cmp
in
cmp
cmp
adc
sahf
std
pusha
test
or
push
dec
pusha
mov
push
xchg
jno
mov
fwait
mov
adc
mov
jo
mov
movsb
and
pop
cltd
iret
pop
xchg
lods
inc
shrb
jmp
cmp
cmp
or
jg
inc
mov
stc
addr16
clc
hlt
enter
or
jns
lcall
push
out
lahf
jg
adc
mov
mov
push
cmpsb
fcoms
and
lods
pop
pusha
enter
js
or
add
add
or
mov
out
js
mov
add
cmp
outsl
lret
push
ss
mov
xchg
inc
fcoml
adc
stc
in
mov
sub
test
fwait
push
jle
ss
lcall
shll
aad
mov
rorb
mov
adc
call
jo
out
pop
cwtl
sub
mov
jbe
cwtl
mov
fisubl
test
dec
divl
adc
cmp
mov
lcall
andb
dec
adc
dec
inc
and
cltd
pop
jno
negl
mov
xor
add
js
aas
sub
mov
mov
test
mov
loope
pop
add
lcall
stos
inc
xor
fs
cld
fisubl
fsubs
or
movsb
and
andl
jno
pushf
xor
dec
fwait
pop
push
pusha
lret
mov
lea
pop
stc
xor
xchg
and
inc
mov
push
in
pop
sbb
mov
jle
int
pop
out
mov
pop
test
lods
test
sbb
mov
int
pop
jnp
gs
push
insb
push
mov
and
fsubs
jne
sub
pop
mov
jle
mov
lods
mov
ja
cmp
or
mov
imul
scas
gs
push
xchg
inc
xor
inc
test
shlb
data16
fwait
pop
dec
mov
shrb
aad
inc
mov
fwait
das
push
mov
adc
mov
cwtl
inc
imul
aas
add
packssdw
push
add
arpl
mov
or
icebp
push
push
movsl
jp
rcrl
cs
and
icebp
enter
push
stos
popa
testl
inc
push
lret
clc
fcmovne
mov
addr16
test
rorb
sub
daa
ret
jnp
push
lods
mov
sbb
negl
not
xchg
or
sahf
mov
fidivrs
mov
mov
xchg
jae
xchg
decb
mov
dec
cmc
movsb
addr16
and
lahf
fisubs
pop
jns
adc
jl
pop
inc
fldenv
jmp
xchg
icebp
or
mov
mov
cmc
pop
mov
imul
inc
xor
clc
push
dec
dec
push
inc
mov
adc
imul
mov
movl
imul
dec
adc
mov
repnz
icebp
mov
test
or
xchg
cli
add
dec
cmp
inc
and
mov
ret
rorl
addl
outsl
inc
fadd
outsl
orl
inc
jmp
fstps
enter
pop
imul
add
mov
mov
out
cmp
and
scas
sbb
dec
out
cltd
jl
js
repz
jnp
fcompl
icebp
imul
pop
and
aaa
cmpsb
mov
fldenv
popa
or
js
in
add
dec
sbb
dec
or
shlb
testl
pop
test
cmp
add
call
push
mov
mov
xor
les
mov
movsl
fildl
imul
jecxz
push
or
inc
pop
lock
cwtl
sub
xor
pusha
lods
or
lods
out
lahf
mov
and
or
stos
adc
jecxz
adc
out
addr16
imul
pop
push
mov
push
mov
insb
mov
nop
and
insb
cmp
dec
add
imull
mov
pusha
mov
xchg
dec
imul
jmp
mov
mov
cmp
repz
push
cmp
pop
mov
int
ja
jp
and
cmp
movsb
and
pop
es
dec
cld
test
stos
mov
hlt
mov
enter
xlat
cld
pop
rcr
sbb
iret
test
sbb
shrb
dec
inc
jno
inc
jecxz
cmp
cmpb
lea
inc
inc
xchg
imul
cmc
xchg
repz
inc
test
outsl
fstl
test
test
dec
dec
rorb
iret
mov
mov
lods
popa
insb
xchg
fcoms
inc
sahf
pop
mov
std
or
cli
ficomps
ljmp
add
mov
xchg
nop
cltd
adc
or
ja
xor
sbb
out
insl
jl
rorl
add
rcll
out
sbb
sti
ja
add
imul
mov
sbb
in
xorl
jb
subl
icebp
insb
mov
mov
addr16
imul
add
je
mov
sub
shrl
popf
lret
sub
inc
out
xchg
in
out
fs
push
mov
inc
xor
lods
fucomi
roll
gs
xor
test
adc
shll
imul
or
aas
cmpsb
push
loopne
pop
jmp
insb
popf
scas
add
lret
insl
or
jecxz
jae
or
mov
outsb
rclb
pop
fwait
icebp
xorl
cmpsl
stc
imul
mov
jp
mov
mov
call
cs
popa
cmp
mov
cmc
inc
pop
inc
adc
sub
sub
pushf
js
xchg
add
add
seto
xor
sti
push
out
imul
sbb
cwtl
aas
scas
jl
dec
imul
jecxz
fmul
dec
sbb
jns
xlat
mov
shlb
lods
jno
sub
insl
fldenv
cmp
mov
adc
inc
xor
pusha
push
jl
xchg
sti
cmp
imul
add
mov
cli
fisubrs
pop
jecxz
into
lcall
rcrl
jl
fcomp
pop
es
pop
mov
out
xchg
bound
test
fidivrs
addr16
fisubrl
popa
mov
test
mov
jecxz
repnz
dec
daa
push
les
cs
mov
ret
and
push
adc
pop
adc
jo
or
mov
dec
js
cs
bnd
adc
add
cmc
mov
sub
out
or
clc
cld
aaa
sbb
mov
push
shr
dec
or
dec
movsl
fiaddl
lods
loopne
jecxz
pop
ljmp
dec
and
cmp
mov
xor
pop
rorb
push
into
add
in
mov
popa
xor
push
outsl
sti
inc
cwtl
xlat
or
loop
lds
adc
addr16
fwait
jmp
mov
hlt
push
push
mov
out
test
xlat
mov
lret
mov
mov
hlt
fists
lahf
pop
aas
ja
ja
mov
mov
enter
inc
pop
popa
add
push
or
push
in
cld
mov
int
scas
xchg
pop
test
and
push
cmp
xor
xchg
jo
inc
mov
scas
xorb
sbb
aaa
ja
push
pop
les
push
mov
aas
inc
popf
test
sbb
xchg
std
dec
sysenter
adc
dec
fildll
cmpsl
fwait
scas
insb
mov
fisubs
lock
mov
dec
pop
inc
aaa
loop
mov
movsb
mov
dec
rcll
xchg
pcmpgtd
xor
aas
dec
push
and
cmp
negb
mov
movsb
rorl
or
loopne
sbb
and
push
sub
rcll
addr16
dec
movsl
inc
test
sbb
pop
stos
push
or
sbb
xor
nop
pushf
fwait
pop
dec
or
and
pop
aad
sbb
dec
jae
adc
sub
or
les
jecxz
stc
stc
lret
outsl
in
lret
aas
frstor
test
pop
xchg
fwait
sub
jb
pop
imul
sub
mov
gs
or
popl
mov
movsl
out
cmp
or
mov
loope
dec
jmp
pop
mov
pop
popf
lret
fsubp
nop
and
sub
aaa
cmp
pushf
imul
dec
addr16
pop
push
loopne
in
cli
adc
outsb
pop
and
outsl
lret
xor
and
fwait
scas
je
rolb
mov
mov
lcall
mov
jo
lea
xlat
cmp
out
jo
jbe
push
push
test
cmp
jg
into
jp
dec
pop
pop
ficompl
movsl
sub
sub
sub
insb
cwtl
mov
jp
adc
sarl
gs
sbb
js
xchg
cmc
ja
and
fs
call
ficomps
lock
adc
test
dec
and
jae
scas
mov
sub
xchg
sbb
add
push
jnp
mov
xchg
insb
inc
imul
incl
das
cwtl
mov
out
fmuls
jno
movsl
sub
aaa
or
dec
stc
or
push
sti
jl
push
fnstcw
inc
jle
repnz
xchg
enter
sbb
mov
cmp
pop
fyl2x
in
inc
cltd
and
stos
ficompl
mov
mov
jbe
mov
xchg
jnp
dec
add
fwait
test
add
sahf
cmp
repnz
popf
test
cltd
lret
inc
pop
dec
fidivl
in
and
lret
sahf
loopne
or
in
out
mov
lods
jl
adc
loope
das
push
inc
jo
test
mov
inc
mov
push
pop
stos
andl
in
lahf
adc
imul
mov
enter
adc
insb
mov
xchg
cwtl
fwait
enter
dec
loope
dec
bound
mov
xor
xchg
lods
hlt
outsl
in
xchg
test
or
out
sbb
mov
arpl
sbb
and
int
sub
ficomps
cli
lahf
lods
pop
xchg
lods
push
cmp
std
out
int
loope
aad
mov
pop
iret
cld
dec
sti
sarb
xchg
and
add
inc
das
pushf
jp
xor
mov
cmp
subb
lcall
pushf
mov
sahf
sbb
lret
pop
mov
stos
mov
mov
mov
sahf
fwait
and
movsl
pushf
stos
fsubl
adc
and
andb
cmovns
xchg
cmp
xor
and
daa
aam
imul
push
shrb
mov
scas
add
mov
adc
add
xchg
push
and
icebp
sub
popa
sub
les
jp
cs
inc
mov
pop
call
mov
call
inc
push
xchg
mov
jecxz
dec
clc
cs
jmp
inc
sahf
mov
mov
pop
popf
iret
pop
cmp
es
outsl
push
dec
loopne
xchg
push
xchg
push
push
xchg
mov
lea
dec
cmp
out
ljmp
or
jns
inc
aas
icebp
jne
in
stc
mov
sub
mov
adc
jo
leave
pop
in
in
add
dec
addr16
out
mov
shrl
push
test
addr16
jnp
push
xor
les
jp
sub
fwait
lcall
and
xchg
push
pop
pop
movsl
mov
jp
ffree
popa
iret
jnp
cwtl
aaa
pop
pop
cltd
pop
inc
imul
stc
bound
jbe
add
insb
xlat
lret
pushf
jg
push
out
in
xchg
cmp
mov
jmp
imul
sbb
aaa
outsl
xchg
call
lods
pop
lds
push
sbb
adc
sahf
mov
pop
repz
ljmp
mov
incb
push
mov
jmp
sbb
mov
mov
push
mov
aaa
jmp
add
sub
dec
xor
pop
out
lahf
in
mov
sub
fadds
fwait
push
in
gs
pusha
pop
mov
and
out
sbb
push
jo
rcrb
pusha
mov
sbb
adc
cld
insl
push
adc
pop
mov
jecxz
in
inc
fxch
lods
adcb
cmc
mov
xor
mov
mov
mov
cmc
gs
dec
imul
dec
sbb
sti
xchg
sbb
stc
scas
nop
cmpl
rcl
push
jg
iret
out
add
leave
daa
in
in
fwait
xor
pop
dec
out
mov
outsl
dec
jl
hlt
push
sarl
cmpsl
rol
jge
jns
xchg
mov
lahf
fsubrl
jg
out
int
pop
sub
add
xor
es
push
es
cmpsb
aad
jl
ret
enter
test
mov
fisubrl
mov
int
int
dec
fwait
inc
cmc
pop
imul
push
fcomps
jno
into
jecxz
add
pop
aaa
cmp
push
jno
push
cmc
xchg
jb
repnz
mov
nop
sub
lock
or
lahf
cmpl
fs
xchg
test
mov
clc
jb
cmp
lahf
push
shrl
ja
inc
mov
daa
xchg
ret
and
lret
cli
or
imul
mov
pop
pop
js
enter
gs
xchg
popf
or
xor
jge
aas
and
imul
inc
repnz
inc
div
sub
iret
lcall
adc
imul
adc
fbld
dec
test
xchg
mov
push
jecxz
or
fxam
push
and
pop
aam
enter
xchg
test
adc
lahf
xchg
popa
mov
loop
sbb
mov
rolb
ljmp
mov
pop
enter
pop
push
and
hlt
int3
lcall
pop
loop
push
repz
pop
fists
xchg
xchg
fwait
sbb
lret
movb
pop
sar
sub
push
iret
mov
imul
insl
mov
in
ss
sub
xchg
icebp
mov
movsb
lods
jb
jmp
dec
mov
cmp
fs
xchg
adc
pop
imul
fs
fldpi
jg
inc
in
dec
int3
movsl
mov
or
loope
cli
ja
xor
fidivrl
imul
imul
pop
xorb
ret
lods
movsb
cmp
cmp
dec
loopne
pop
insb
das
mov
lods
pop
subb
ret
mov
inc
jno
mov
mov
hlt
gs
add
imul
inc
mov
cmp
adc
jecxz
rcrb
pop
pusha
lods
sub
mov
mov
push
out
xchg
fidivs
cmp
and
pop
push
mov
dec
jne
test
ffreep
imul
xchg
test
sbb
cmp
imul
mov
xchg
addl
jecxz
lods
addl
arpl
sbb
imul
mov
dec
mov
xor
xorl
sbb
ss
jge
fwait
icebp
xchg
inc
adc
andb
push
lea
das
pop
cmpsb
pusha
cmpb
aaa
push
mov
cmp
stc
and
testl
movsl
jno
fwait
xchg
lods
jg
movsb
dec
sahf
adc
cmp
fwait
push
xor
cwtl
mov
jnp
icebp
mov
in
outsl
or
fiaddl
leave
dec
fs
pop
lods
inc
rorb
ljmp
js
shlb
stc
push
pop
jnp
imul
push
subb
pop
lods
cli
push
imul
sahf
push
or
icebp
jne
aaa
sbb
jmp
push
pop
loop
pushl
outsb
mov
sub
cmpsl
movsl
or
or
nop
dec
xor
inc
xchg
pop
pop
push
es
loope
pop
mov
and
fsts
inc
or
roll
insl
shll
sub
mov
mov
mov
imul
test
xchg
imul
mov
mov
jg
dec
test
sub
scas
add
mov
lds
mov
fcompl
or
sahf
mov
mov
mov
lock
mov
mov
xchg
pop
push
leave
jnp
rolb
data16
add
mov
adc
mov
in
ret
rorl
rcll
notl
mov
shlb
sub
inc
aas
xchg
js
adc
jmp
dec
sub
aam
js
fwait
insb
inc
mov
popl
hlt
ret
imul
jle
js
cmp
inc
test
dec
nop
fwait
mov
jnp
nop
enter
mov
xchg
imul
dec
xchg
fldenv
push
mov
cmp
imul
pop
mov
addb
sti
inc
je
xchg
or
xchg
jne
fisubrl
clc
xor
xchg
ret
push
fidivs
out
sbb
and
xor
add
into
cmc
test
push
mov
push
repz
mov
cmp
cmp
cmpb
pop
mov
cmp
fistpl
movsb
sbbl
fwait
xchg
mov
or
out
in
in
fnstcw
fimull
stos
xchg
pop
and
dec
shrb
cltd
mov
or
pop
test
mov
addr16
lods
dec
mov
sbb
pop
popf
outsb
subb
pop
add
cmp
subb
pop
ret
mov
xchg
loop
icebp
test
out
cmp
sbbb
imull
mov
lcall
vmovd
repz
xor
lahf
mov
push
mov
mov
je
push
cmpsb
lahf
and
fwait
pusha
or
xchg
add
xchg
inc
pop
js
test
xlat
jl
mov
pop
pop
jle
andl
adc
mov
lea
sbb
or
add
rcrl
iret
imul
scas
jecxz
add
sbb
test
adcb
mov
xchg
xchg
fmull
pop
cmc
pop
cltd
mov
daa
inc
mov
cmpsb
mov
das
imul
dec
inc
movsl
sbb
sahf
pop
xor
insl
subb
xor
jle
cmp
fbstp
stos
add
mov
or
fiadds
iret
into
inc
sarb
je
add
ficoms
push
push
adc
das
imul
mov
push
cmp
in
test
adc
xor
addr16
jae
imul
jecxz
cmp
mov
jmp
ja
mov
movsl
scas
mov
sbb
dec
ret
incb
mov
mov
out
cmc
cmpsl
movsb
ja
in
jp
mov
aad
mov
je
hlt
adcl
stc
mov
out
cwtl
std
jmp
imul
xchg
pop
movsl
add
mov
mov
cmp
xor
mov
in
sub
imul
jge
push
mov
pushf
mov
mov
data16
lea
sarl
mov
aas
push
jle
stos
push
cmp
sub
adc
push
inc
jmp
imul
js
mov
cmp
jae
fsubrs
inc
mov
sub
add
testb
sub
test
sahf
push
sbb
loop
test
jg
mov
test
outsl
mov
and
cmpsb
ss
mov
jae
inc
and
push
mov
dec
rcrl
xchg
mov
icebp
inc
push
movsb
into
jecxz
fildl
pop
pop
push
pop
adc
mov
ret
adc
ret
xchg
jmp
xchg
xor
jecxz
xchg
popa
pop
imul
inc
mov
pop
xchg
jnp
xor
dec
pop
imul
sub
xchg
mov
into
push
shr
jnp
cltd
movsb
js
mov
add
mov
mov
push
jmp
pop
pop
movsl
mov
adc
scas
fldenv
xchg
es
imul
or
aaa
lea
pop
cmp
fwait
pop
insb
les
push
mov
adc
sbb
fiaddl
pusha
cmp
ljmp
cs
mov
iret
xchg
cmp
mov
ret
imul
push
testl
iret
daa
mov
leave
mov
cltd
xorl
ljmp
cmp
dec
jnp
and
out
pop
dec
xchg
daa
int
push
cld
movsl
cld
je
xchg
stos
out
popf
cwtl
or
and
clc
cmp
out
xor
mov
testl
mov
or
fcompl
sbb
sub
in
cmp
rorb
std
add
sub
push
xchg
iret
cwtl
jns
aaa
loop
sbb
lcall
and
pop
aas
in
jmp
cmpsb
xchg
aam
mov
pop
dec
mov
add
pushf
mov
in
push
inc
out
imul
or
inc
xchg
jne
orl
sbb
arpl
pop
mov
mov
push
pop
hlt
lods
xchg
add
data16
iret
push
push
es
ja
adc
mov
rclb
jb
sub
in
jno
inc
cltd
cmp
mov
mov
sub
pushf
or
cmp
je
dec
fs
and
dec
mov
jmp
cwtl
xor
ss
jecxz
insl
xchg
cmp
lock
shl
rorb
iret
fidivl
xchg
dec
dec
lea
sbb
lea
outsb
sub
pop
rolb
sbb
leave
mov
stc
mov
sub
test
mov
cmp
addr16
imul
jnp
orl
push
add
test
dec
lods
addr16
xchg
aas
aaa
inc
jns
iret
mov
subl
rcrb
mov
pop
ja
imul
insb
cld
pushf
fidivs
lea
arpl
sub
lahf
in
lret
xor
xchg
adc
cld
sbb
enter
rclb
enter
imul
sbb
sarl
xchg
mov
mov
mov
sti
xor
fsubrs
jno
test
pop
fwait
mov
cmc
pushf
xchg
add
daa
out
mov
mov
or
sbb
cmpsl
dec
and
psrld
mov
or
enter
insb
nop
and
test
jbe
rcll
xor
in
pop
ds
arpl
stc
fwait
dec
pop
xor
jecxz
pushf
movsl
and
push
lds
mov
pop
ljmp
inc
push
cwtl
pop
lcall
mov
cltd
daa
cmpsl
mov
fdivl
outsb
mov
sar
or
in
in
cmp
aam
add
in
out
dec
jmp
fwait
insb
stos
jbe
mov
fs
pop
lcall
mov
xor
lahf
sahf
xchg
and
pushf
inc
pop
scas
sbb
cmp
adc
xlat
movsl
cmp
mov
rorl
jecxz
mov
test
sub
vpslld
clc
pop
lock
repz
adc
mov
les
mov
pop
lock
cmpsl
adc
or
xor
fs
cltd
inc
ss
fmuls
dec
in
orl
and
push
sahf
repnz
mov
scas
adcl
in
nop
mov
nop
pushf
sbb
mov
inc
inc
stc
pop
nop
push
pop
adc
dec
hlt
test
adc
fxch
mov
lcall
push
stos
imul
fmul
xor
pop
repz
lret
push
pop
push
ficoms
pusha
mov
mov
add
push
cmp
xchg
or
enter
lock
adcb
mov
in
out
int3
sbb
arpl
adc
aaa
xor
inc
stos
jo
ljmp
cmp
add
dec
sub
xor
inc
cld
jle
loopne
ficoml
mov
out
sbb
into
cmc
pop
mov
push
addr16
call
push
cmp
sahf
shlb
dec
jl
add
and
xchg
adc
xchg
stos
sub
and
int3
outsl
jo
mov
mov
push
adc
inc
stc
imul
ljmp
daa
mov
mov
fldt
lock
mov
jnp
daa
mov
into
adc
mov
cmp
sub
jl
div
mov
outsb
fmuls
dec
push
pusha
imul
sub
test
xchg
ficoms
pop
jne
inc
pop
test
fstpt
mov
dec
xorl
inc
add
jg
xchg
push
pop
cmp
mov
leave
push
and
mov
aam
ja
stc
movsl
lret
imul
fimuls
std
push
dec
leave
aam
aaa
shrl
rcrb
dec
int3
jae
clc
test
push
mov
int
push
cmp
mov
cmp
stc
fcmovnb
dec
mov
lods
psadbw
jo
xchg
adc
imul
nop
push
mov
mov
scas
push
clc
sbb
ret
call
sub
push
imul
inc
gs
inc
inc
xchg
cmc
xchg
mov
mov
adc
pop
scas
js
imul
decl
int
push
inc
mov
aaa
sbb
jns
cmp
cmp
stc
pop
inc
loopne
ja
xor
mov
pop
dec
clc
jo
jae
pop
push
cltd
xor
and
test
xchg
es
jnp
adc
cmp
xchg
imul
cmp
jle
adc
sbb
inc
pop
jbe
dec
mov
jae
out
imul
inc
add
les
ja
mov
cld
gs
adc
cwtl
stc
sub
out
pop
aaa
xor
push
sub
hlt
out
push
lock
test
call
pop
adc
cmpsl
mov
lret
lea
addr16
mov
cmpsb
sbb
dec
adc
movsl
lret
lock
push
int
shrb
dec
lcall
jae
cwtl
mov
pusha
mov
sbb
jno
cmp
mov
mov
xchg
imul
andb
mov
aad
aaa
scas
dec
xchg
or
sar
imul
jo
sub
jge
xor
add
inc
xor
or
mov
xor
jecxz
or
outsb
scas
rol
fdivl
sbb
sbb
enter
push
sbb
and
arpl
mov
cmpsb
pop
loopne
test
cwtl
push
js
jp
inc
stc
xchg
lret
jg
sub
xchg
jmp
das
push
test
adc
sub
xor
rorb
pop
mov
cmpsl
test
imul
call
daa
ja
iret
cmpsl
mov
outsl
cmc
xchg
fsubs
xchg
jbe
or
mov
adc
add
dec
adc
pop
lret
cmp
inc
xchg
mov
sbb
repz
mov
cld
mov
cmpsb
pusha
mov
popf
jecxz
pop
test
scas
addr16
and
add
mov
sub
jp
xor
mov
dec
out
push
jge
test
lahf
adc
pop
outsb
stc
sub
and
jne
lock
sbb
jo
mov
pop
sbb
pop
test
push
pop
addr16
adc
cld
dec
test
addr16
out
mov
sbb
mov
mov
dec
mov
adc
lds
ja
or
imul
adc
mov
lods
lret
mov
int
xchg
inc
int3
clc
and
sahf
adcl
dec
mov
add
mov
xor
inc
push
mov
int
push
clc
inc
imul
mov
xchg
and
mov
sbb
mov
dec
sub
lcall
outsl
and
inc
int3
test
pop
mov
fdivs
sub
cs
dec
lds
fadd
stos
xor
lock
sbb
call
imul
mov
jle,pt
sbbb
push
mov
fsts
cmp
xor
daa
adc
jo
mov
pop
sub
js
mov
aas
xor
push
pop
or
roll
cs
sarl
sbb
fs
lds
arpl
aad
lods
fsubl
xchg
data16
daa
adc
cld
orl
scas
jno
sti
in
fisubs
jecxz
mov
out
jecxz
sti
scas
lods
imul
mov
add
mov
sbb
imul
out
push
mov
les
cli
or
pop
fldz
mulb
shrl
add
ds
mov
jo
orl
fadds
ss
mov
pop
loopne
nop
sub
inc
add
mov
and
and
arpl
add
add
sahf
adc
mov
lock
xor
repnz
push
addr16
xchg
addr16
repz
sbb
add
dec
cmp
mov
mov
fcoml
rcrl
sbb
fwait
lea
pop
gs
push
cmpsl
inc
dec
sub
call
mov
xor
pushf
mov
sbb
rcrb
xchg
dec
adc
imul
jmp
and
push
jmp
mov
mov
mov
sub
add
scas
rcrl
in
dec
cmpsb
mov
ja
add
fildl
adc
xor
fmul
fyl2x
enter
fwait
xchg
jle
sbb
sbbb
daa
dec
dec
adc
jg
int
subb
push
pop
jp
test
mov
mov
stc
std
jp
or
cmp
jle
adcb
popf
enter
aas
pop
mov
push
dec
repnz
cmp
lea
aad
pop
sub
sbb
xchg
mov
xchg
loopne
ja
testl
push
cmpsl
scas
lods
jb
div
push
pop
cmp
imul
adc
imul
mov
rcl
adc
popa
sub
xor
aam
scas
arpl
push
jecxz
lods
pop
shlb
push
sti
bound
or
aam
aam
jl
fwait
std
or
ss
fisubrs
inc
sub
mov
or
inc
inc
xor
iret
ficoms
insb
xchg
jnp
jmp
lcall
fimull
push
xchg
nop
repnz
pop
mov
dec
mov
int
xor
out
aaa
push
das
and
clc
mov
shlb
lods
je
push
or
jne
lock
nop
push
adc
sbb
pop
pop
lds
pushf
repz
fwait
pop
sbb
mov
fidivrl
cmpsb
lahf
mov
push
aas
mov
stos
add
mov
iret
mov
movsb
fwait
add
mov
outsb
sub
into
movsl
push
inc
mov
sbb
add
or
pusha
imull
xchg
in
mov
rclb
push
punpckhdq
shrl
lret
push
push
and
mov
dec
test
cmp
or
loopne
or
mov
ret
inc
jno
cwtl
xor
jp
out
dec
mov
xchg
pop
adc
mov
xchg
xchg
mov
add
dec
dec
je
inc
inc
movsl
or
inc
mov
jns
outsl
cld
jg
cmp
add
into
cwtl
cwtl
fwait
and
adcl
test
sub
fistpl
xchg
in
enter
rol
mov
sub
cmp
pop
call
xchg
mov
ja
dec
arpl
les
aad
dec
inc
xor
mov
cmp
and
jae
jecxz
jmp
xchg
mov
loopne
mov
lret
mov
fwait
pop
mov
push
inc
scas
ja
stc
xchg
or
in
aad
pop
mov
and
into
jmp
xor
orb
jmp
add
mov
pop
fldcw
rcl
mov
fwait
rclb
mov
nop
test
dec
mov
xor
imul
inc
add
add
dec
cmp
daa
or
push
aaa
lahf
faddl
inc
dec
or
mov
ja
aad
lret
inc
pop
cmc
jo
into
xor
jae
imul
cmp
rcr
repnz
loopne
mov
sbb
jp
pop
repnz
cmp
jne
xchg
sub
pop
xor
mov
mov
cmp
push
daa
mov
sbb
dec
in
imul
mov
pop
inc
call
loopne
pop
sub
push
adc
mov
scas
popa
mov
push
adc
loopne
fmul
xor
xchg
addr16
xor
and
imul
sbb
sub
pop
cbtw
jle
sub
pop
outsl
mov
out
mov
and
and
aaa
test
inc
cltd
imul
xchg
adc
addr16
xchg
pop
pop
inc
test
out
xchg
fdivrl
mov
mov
push
loopne
mov
mov
out
and
push
leave
ja
push
sbb
adcb
repz
cmp
inc
faddl
pop
sub
push
loope
bound
inc
mov
aaa
push
stos
lret
sub
adc
fldcw
add
clc
or
mov
jo
push
stc
arpl
mov
xchg
lahf
jle
mov
xchg
and
in
enter
fs
pop
test
popf
push
movsl
sbb
jo
mov
jmp
mov
lock
clc
sbb
pop
or
repnz
mov
clc
sbb
push
sub
sbb
sbb
mov
lret
test
jbe
adc
xor
inc
xchg
shl
dec
in
push
aaa
jmp
decb
mov
mov
jge
jmp
loopne
stos
adc
and
fadds
mov
mov
mov
push
pop
mov
xorb
addr16
xchg
pop
pop
adc
mov
out
sbb
sarb
sahf
sub
add
jg
cld
mov
adc
mov
cmp
iret
jle
aam
aam
aad
fidivrs
inc
lret
sub
cmpl
dec
cvtps2pi
mov
sahf
xchg
jmp
aaa
iret
inc
xchg
push
add
xchg
dec
or
cld
cmpsb
pop
cmp
or
sub
and
pop
xor
decl
leave
in
or
xchg
or
mov
cltd
mov
clc
outsb
mov
dec
dec
mov
add
in
cmc
mov
pop
orl
sahf
testl
fsubl
addl
cmpsb
into
pop
inc
mov
jl
inc
out
test
in
xor
push
popa
mov
icebp
cmp
ds
mov
imul
jl
insl
mov
dec
popf
lods
xor
xchg
test
cld
pop
movsl
add
adc
mov
push
addr16
lods
pop
clc
hlt
ficompl
xlat
faddl
ds
dec
dec
sbb
add
jge
fnstcw
adc
dec
dec
fwait
dec
daa
inc
adcl
enter
je
adc
mov
pop
clc
adc
nop
xchg
inc
mov
repnz
dec
cli
mov
cmp
push
dec
adc
leave
jae
test
test
enter
cld
cltd
ljmp
inc
mov
mov
loopne
jb
test
fwait
add
jns
hlt
adc
imul
scas
push
outsl
movsb
fwait
andl
out
sub
in
sarb
fldl
mov
sub
cmp
in
fmull
insb
int
adc
adc
add
ja
in
and
jecxz
pushf
sub
push
cmp
pusha
or
scas
jb
mov
and
or
inc
stos
mov
jb
lret
jl
dec
sub
fisttpl
cmp
add
mov
xchg
cmp
pusha
jno
in
pop
xchg
ficoms
hlt
pop
mov
ja
lcall
pop
cli
add
out
pop
inc
sub
adc
lock
repz
inc
jp
iret
mov
xchg
dec
test
mov
aaa
xor
sbb
nop
pop
mov
push
idivb
jbe
and
adc
outsb
xchg
inc
adc
pop
repz
rcl
fiadds
mov
aas
xchg
insl
sbb
repnz
clc
mov
inc
push
add
mov
faddp
mov
ja
outsl
cmp
mov
shr
jecxz
mov
sbb
test
movsb
imul
push
divl
lea
repz
sbbl
and
mov
inc
mov
jg
push
fwait
ljmp
call
lods
or
addr16
or
add
nop
stos
jne
sti
mov
repnz
cmpb
ror
push
bound
mov
imul
inc
cmpsb
adcl
gs
fidivrs
or
push
stc
shr
inc
cli
xchg
stc
imul
xor
push
pusha
repnz
jnp
jmp
repz
in
data16
or
jo
pop
or
pop
fs
sbb
dec
jae
adc
push
lcall
ficoms
popa
stos
mov
icebp
fidivs
push
addr16
pop
xchg
aaa
mov
loope
outsl
out
divb
hlt
ret
add
and
icebp
xchg
pop
sbb
mov
cmp
out
pop
sbb
pop
in
cmp
adc
mov
adc
loope
int
inc
inc
mov
mov
jmp
cmovnp
sbbl
in
jg
mov
push
pop
ss
mov
fwait
imul
jns
or
cld
mov
cmp
shrl
and
pushf
insl
movl
cld
pop
sahf
sub
jp
inc
pop
mov
xchg
sbb
js
mov
lock
int3
cmp
mov
lret
xchg
popf
add
inc
xchg
fwait
cmp
pushf
dec
xchg
xchg
add
push
or
cmp
test
mov
xchg
push
icebp
inc
nop
xchg
mov
daa
jecxz
jb
imul
push
jo
xor
xor
jb
lcall
imul
dec
sub
mov
mov
add
cmp
xchg
call
fwait
dec
mov
or
push
jle
sbb
push
enter
imul
cmc
push
cmp
lock
int
cwtl
movsl
bound
xchg
or
fcmovu
pop
sahf
cmp
testl
lock
test
stos
fisubrs
aaa
outsb
push
shl
sahf
mov
ror
mov
pop
pushf
enter
stc
xchg
xchg
loopne
test
shll
pop
fimull
movsl
cld
xor
mov
jge
mov
pop
enter
cs
push
das
dec
adc
mov
dec
push
mov
hlt
pop
mov
ficoms
jge
jge
jecxz
xor
subl
pusha
cltd
mov
push
in
gs
and
push
add
lods
inc
stos
inc
sbb
sbb
pop
or
push
push
mov
repnz
imul
jecxz
outsl
mov
add
lock
sub
push
pusha
pop
xchg
mov
xchg
push
mov
xor
add
aaa
clc
jmp
sub
ja
mov
jo
ret
push
or
das
aam
jle
xor
xlat
mov
sbb
imul
leave
fisubrl
cmp
dec
pop
cmp
sbb
aas
add
add
sbb
and
notl
pop
out
mov
aas
or
adcb
push
pop
pop
out
mov
les
cmp
pop
mov
jge
sbb
es
jecxz
sbb
movntps
imul
inc
cwtl
mov
pop
and
mov
movb
int
sub
inc
outsb
es
inc
pop
pop
je
aaa
pusha
int
in
dec
mov
sti
daa
cwtl
dec
push
jg
adc
dec
lcall
sbb
scas
and
and
call
mov
cmp
repz
dec
test
pop
push
mov
ret
xor
pop
add
pushf
push
mov
jp
mov
pushf
or
and
jae
mov
fwait
jnp
out
jg
add
popf
in
mov
inc
cmc
in
mov
lock
xchg
out
pop
mov
push
aas
push
out
sub
push
adc
mov
jmp
out
aam
stos
mov
mov
xchg
sbb
push
int3
ret
in
sahf
scas
mov
add
cwtl
sahf
fwait
stos
mov
imul
addb
cmp
mov
sbb
data16
sub
adc
mov
pop
clc
mov
mov
push
lahf
push
dec
push
add
repz
out
jp
daa
add
mov
push
pop
addb
scas
lds
mov
fwait
or
jge
mov
fsincos
adc
test
imul
dec
mov
push
aaa
ficompl
imul
cmpb
xor
or
cmp
mov
addr16
test
loop
rcrl
ljmp
cltd
xor
mov
and
pop
add
mov
movsb
out
sub
xor
out
enter
mov
and
arpl
sbbl
and
jo
jecxz
dec
das
bound
ficoms
aas
cmpsl
cmp
fisubrl
aad
push
sarl
fcomps
das
lahf
clc
push
imul
fprem1
repz
mov
std
test
mov
inc
movsl
jmp
mov
lahf
test
clc
add
jb
inc
rcll
mov
pusha
xchg
mov
jp
das
mov
addr16
rclb
in
outsl
stc
sub
mov
adc
lahf
pop
mov
lret
adc
aad
fwait
cltd
addr16
mov
pusha
xor
xor
cs
dec
push
xchg
mov
pop
das
insb
pushf
mov
fwait
sub
imul
and
mov
aad
pushf
fwait
xchg
add
inc
imul
push
xor
imul
inc
leave
ja
adc
or
push
mov
pop
pushf
lahf
lods
pop
pop
inc
cwtl
mov
mov
mov
out
xchg
ss
xchg
outsb
shlb
shlb
dec
and
push
in
sbb
pushf
push
mov
insl
pop
cmp
movsl
mov
pop
stc
popa
dec
mov
ljmp
mov
push
and
imul
rcr
lcall
or
mov
push
cmpsl
pop
lcall
add
mov
xchg
icebp
hlt
sbbb
jns
ds
or
jnp
in
sbb
mov
ret
cmp
out
ljmp
stos
out
xor
pop
call
in
sbb
mov
test
sub
mov
shrl
cmp
lret
out
aas
or
jnp
aaa
cmp
jae
adc
cltd
out
adc
push
or
enter
movsl
push
xor
test
xor
cld
loopne
push
outsl
inc
in
adc
cmp
adc
adcb
add
adc
mov
pop
popa
mov
mov
xchg
orl
subl
addr16
xchg
adc
jns
scas
inc
xchg
sbb
mov
push
addr16
cmp
pop
sub
adc
jmp
daa
sub
mov
add
add
xor
mov
out
xor
imul
mov
test
add
lods
jbe
or
cmp
and
int
xor
adcb
shl
inc
imul
push
or
push
or
pop
enter
mov
dec
xlat
push
out
in
fwait
xor
and
xchg
int3
aad
push
mov
arpl
cmp
aas
dec
and
push
and
xchg
add
and
ret
pop
xor
aas
stos
push
imul
dec
mov
mov
xor
ja
push
pop
jno
pushf
xor
imul
fs
sbb
rcrl
jmp
lea
mov
insb
nop
lds
mov
mov
insl
addr16
mov
mov
rolb
lahf
jp
pop
sahf
sub
loope
test
jl
orb
ja
xlat
dec
cmp
adc
sub
inc
call
lcall
out
and
nop
push
sahf
and
sbb
jecxz
sti
cmp
add
xor
ss
out
aaa
adc
mov
popa
pop
test
pop
mov
inc
cld
jp
mov
dec
out
lds
test
xor
sbb
jmp
push
cmp
shll
xchg
int
mov
lcall
xor
roll
lds
push
xchg
or
daa
faddp
clc
mov
and
cmc
inc
loope
adc
add
jmp
gs
pop
add
mov
out
or
arpl
cmp
cmc
adc
fldenv
fwait
je
int3
cmpl
and
imul
mul
and
jg
insl
and
stc
jmp
fisttpl
jne
xchg
in
fneni(8087
dec
xchg
mov
pop
repz
sub
insl
mov
add
repz
xchg
nop
out
in
imul
dec
pushf
fs
daa
fsts
sub
inc
cmpb
lret
loopne
lret
adc
addr16
mov
cmp
push
sbb
ss
push
lcall
ja
jo
fiadds
daa
or
inc
addr16
andl
ja
inc
sbb
imul
and
retw
add
mov
out
insl
adcl
jp
imul
pop
inc
mov
push
hlt
insl
call
rclb
xor
ljmp
pop
test
sbb
ljmp
leave
jg
mov
mov
jb
aaa
stc
outsl
inc
inc
out
popf
into
int
ljmp
sbb
fsub
das
cmp
dec
cwtl
xchg
fwait
cmc
xchg
shlb
pop
loopne
jo
sbb
testb
jo
cmpsl
loopne
ret
std
arpl
adc
pushf
js
fwait
and
push
mov
mov
addr16
cmpsb
or
cwtl
mov
cmp
cmc
or
out
out
out
sbb
sub
mov
into
inc
clc
scas
mov
cld
das
lods
add
test
mov
jo
mov
aaa
loopne
ret
pop
into
inc
jns
dec
pusha
mov
loopne
imulb
shrl
jo
imul
jne
jnp
enter
jnp
mov
adc
mov
out
push
ljmp
pop
push
push
cmp
arpl
push
roll
add
cmp
cmp
insb
jp
fwait
addr16
or
lahf
push
lea
stc
hlt
jp
clc
sbb
push
je
into
xchg
jae
imul
pop
mov
daa
mov
stc
jb
mov
jp
push
lahf
movsb
sahf
sbb
stc
add
cmp
xchg
out
test
xor
xchg
popa
xor
sub
enter
mov
shll
imul
mov
mull
inc
xor
ljmp
lea
sub
pop
pushf
jmp
ljmp
push
dec
cmp
fwait
adc
outsl
test
dec
pop
mov
mov
mov
mov
mov
xor
xchg
ficoml
add
inc
repz
xor
in
dec
fwait
or
add
mov
into
and
fmull
scas
and
sub
dec
imul
cbtw
sbb
and
sbb
out
lret
enter
pop
add
pop
jae
pop
add
into
push
mov
add
sarl
cmc
daa
or
mov
jecxz
je
fs
add
xor
and
or
mov
mov
sub
add
mov
adc
sahf
repnz
stc
inc
fwait
xchg
leave
mov
out
fcomip
push
imul
add
ret
cmp
push
push
mov
das
mov
jns
mov
cmp
or
sti
fldenv
pusha
xor
data16
sub
fwait
mov
xor
movsb
push
inc
push
shll
or
mov
xchg
in
sbb
ja
test
xor
rcrl
mov
and
or
xrelease
int
call
pop
ja
jge
xchg
loopne
fnsave
xorl
mov
lods
mov
data16
mov
jmp
cmp
imul
and
stc
pop
aam
aas
xor
out
xchg
mov
or
shl
jg
jecxz
xor
jecxz
jle
mov
test
jnp
adc
gs
arpl
dec
leave
or
movsl
xlat
fists
test
pop
daa
pop
push
sahf
lahf
enter
pushf
test
mov
add
lea
pop
pusha
popf
sbb
ret
pop
repz
adc
outsb
xchg
in
xchg
adc
aam
jno
insb
loop
push
in
mov
out
cmpsl
pushl
and
add
negl
clc
add
add
mov
fisubs
sub
mov
adc
int
fadds
cmc
ficoms
inc
lds
and
cmp
popf
shll
dec
cmpsb
imul
in
stc
call
jge
insl
scas
daa
and
xchg
insl
push
push
lea
test
loope
stc
fs
push
movsb
fidivrs
or
and
mov
arpl
xchg
call
lock
out
push
cmpsb
test
or
mov
fwait
push
push
add
cmp
ret
cmpsl
rcl
add
xor
out
scas
stc
mov
push
mov
cld
sbb
pop
mov
or
in
xor
out
mov
scas
pop
mov
icebp
lods
daa
dec
add
pusha
pushf
add
add
cmpsb
arpl
pop
mov
xchg
repnz
cmp
imul
fsubrl
mov
push
les
mov
mov
jns
pop
lea
cltd
enter
cmpsl
je
iret
push
lcall
bound
jns
fwait
and
xchg
fistl
sub
mov
and
out
push
popf
imul
pop
out
pop
adc
mov
xor
or
pop
lcall
dec
mov
xor
aam
inc
pop
mov
inc
sbb
mov
cmp
stc
inc
or
insl
mov
inc
stos
sub
pop
xchg
or
xchg
sbb
sbbb
ja
jge
pop
lds
xchg
test
and
adc
enter
jbe
mov
aas
push
movsb
sti
data16
dec
jns
outsb
cli
fimuls
inc
orl
mov
in
and
cmpsb
sub
sbbl
dec
cmp
mov
nop
repnz
jns
fcompl
jecxz
push
mov
jo
xorl
sbb
add
or
jp
sbbl
fwait
loope
cmovae
sub
sbb
sub
dec
imul
ud0
inc
imul
pop
loopne
fwait
add
push
pushf
xchg
scas
push
aam
sub
mov
push
cmpsb
push
rcrb
shrl
dec
push
js
jle
inc
insl
xor
jecxz
lret
aam
sub
add
in
mov
fwait
xchg
push
outsb
out
inc
jle
cltd
adc
aad
sub
add
sub
movsl
ja
lret
xchg
ficompl
jg
orb
cmp
pusha
out
loope
sub
jbe
and
aam
push
ret
adc
pop
or
pop
test
xor
mov
fwait
insl
repnz
push
dec
imul
hlt
cmc
and
jge
int
mov
stc
leave
jl
mov
dec
pop
aad
daa
loope
clc
insb
adc
fwait
mov
xchg
mov
ljmp
mov
dec
or
mov
dec
test
cs
cmp
and
mov
pop
sbb
xor
and
mov
lds
jle
inc
enter
lds
xchg
jne
ja
bound
mov
aas
loope
test
js
in
push
jmp
dec
push
in
jb
xchg
mov
lock
in
and
fldl
lcall
jl
add
push
sub
inc
fmulp
clc
subl
mov
testl
xor
stos
mov
mov
xor
mov
pop
cmp
dec
cmp
fs
mov
movsl
pop
icebp
jae
pop
add
xor
sub
cmpsl
rcr
pop
pop
sub
fyl2xp1
push
in
fwait
sahf
xchg
push
aas
sub
add
sti
xchg
mov
je
imul
pop
add
scas
das
out
ja
xchg
mov
dec
mov
insl
and
push
jecxz
mov
cmp
and
push
repz
in
in
daa
rcll
xor
mov
inc
adc
add
fstpl
hlt
dec
sbb
cltd
imul
pop
test
rclb
sbb
ret
mov
cmp
jb
xor
jno
aaa
or
xor
inc
testl
pop
xor
loopne
push
pushf
jp
push
mov
inc
lcall
jle
leave
sub
jb
int
test
dec
mov
insl
pop
loope
rorl
int3
je
xchg
movsb
and
incb
fildl
jp
aam
push
add
or
addr16
rcll
mov
pop
xor
movsl
fbld
xor
jmp
dec
xchg
or
add
into
jmp
out
sti
lret
jmp
jecxz
and
mov
enter
inc
cli
or
jbe
jle
or
cltd
cmp
xchg
out
jne
mov
dec
cli
pop
add
or
je
repnz
inc
outsb
jle
mov
push
add
sbb
int3
cld
rclb
jle
jb
enter
cltd
pushf
mov
push
jns
add
orl
jecxz
xchg
popa
xchg
jno
movsb
xchg
xlat
push
push
add
push
and
cmp
aaa
adc
xchg
cmc
leave
cld
leave
add
mov
psrad
sbb
adc
dec
add
push
rcrb
fsubrs
cmp
pusha
xchg
lret
pop
flds
sarl
mov
not
mov
mov
ret
cmp
jle
and
xchg
fcoms
jg
subl
inc
ret
pushf
mov
imul
ljmp
or
adc
add
xchg
xor
xor
sbb
mov
xchg
popa
push
js
cmpsl
ljmp
inc
call
dec
aam
jmp
pushf
mov
popa
rorb
sub
cmp
mov
inc
add
lahf
faddp
and
call
xchg
lods
lret
js
xchg
or
jb
mov
add
popa
pop
push
lcall
cmp
sti
cmp
jecxz
ljmp
fwait
xlat
outsb
dec
mov
out
insl
cmc
enter
mov
pop
lds
and
dec
xor
ss
pop
enter
cwtl
xchg
lock
rcrl
xor
xor
out
clc
adc
scas
jmp
sub
sar
jae
sarl
insl
pop
aas
mov
xchg
sbb
dec
rorb
sarl
imul
push
data16
jns
repz
cmp
rcrl
jg
out
test
ss
xchg
mov
inc
lret
imul
dec
seta
mov
jp
aas
test
or
sub
and
push
lret
sbb
dec
test
popa
mov
imul
mov
add
stos
add
into
daa
aam
push
sbb
add
sahf
adc
popa
lock
cmc
cmpl
pop
outsb
or
xchg
ret
ds
mov
lods
add
cmp
mov
rolb
in
jne
and
jns
mov
xchg
xor
cmc
and
jg
addr16
rclb
jnp
pushf
out
sbb
xchg
ss
icebp
enter
xchg
jae
jmp
mov
pushl
pop
js
cmpsb
push
mov
orl
dec
int
mov
mov
inc
iret
lods
or
pop
in
mov
add
cld
test
push
inc
jl
icebp
mov
push
orl
pop
clc
push
fs
or
std
mov
sub
xor
mov
adc
and
add
xchg
mov
data16
orb
mov
lcall
lock
jns
inc
test
insl
adc
inc
enter
adc
push
sub
les
imull
jbe
test
stos
jmp
dec
scas
inc
lahf
ss
test
repz
call
mov
dec
bound
fsts
test
mov
rcrl
pushf
add
fwait
test
in
jecxz
fiaddl
daa
xor
stc
call
mov
jecxz
inc
mov
adc
jp
das
mov
stc
daa
leave
out
enter
int
add
push
leave
cmc
pop
push
xlat
mov
pop
adc
cmp
xor
adc
out
jno
xchg
push
add
xor
mov
xchg
shrl
jno
fs
pushf
fadds
adc
aad
iret
push
jecxz
dec
out
lahf
ret
je
rorl
repz
xchg
ret
push
out
aas
test
adc
stos
inc
xchg
cmp
mov
in
aas
sbb
pusha
fsubrl
fadds
pop
push
push
lcall
dec
or
push
icebp
jg
arpl
adc
adc
fimull
xor
ljmp
and
aas
xor
and
push
call
xchg
lea
cmp
and
cmp
push
inc
push
mov
imul
mov
adc
das
dec
aaa
addr16
movsb
mov
push
xchg
cmc
inc
fnstsw
sub
and
ficompl
push
in
cmpsl
fcmovnbe
mov
inc
cwtl
sbb
ret
cmp
xchg
adc
cwtl
scas
fwait
out
mov
insl
sahf
sub
cmp
popa
test
add
mov
daa
xchg
cmp
cmp
ljmp
xchg
lea
or
movsb
inc
lea
xchg
cmp
mov
dec
add
incl
ds
fwait
mov
dec
std
lret
mov
repnz
inc
test
call
out
int
andb
pop
lret
push
pop
lret
cmpsb
cmp
fisubrl
mov
lahf
pop
outsb
or
dec
cli
imul
jo,pn
add
push
les
pop
mov
in
jbe
sbb
sub
pushf
lahf
scas
enter
add
cmc
mov
mov
fwait
hlt
sbb
sbb
dec
or
cltd
mov
and
out
add
sub
dec
inc
jmp
rcl
xor
loopne
cmp
sub
xchg
ds
test
pop
aas
test
rcl
pop
cmp
loop
cli
push
mov
test
ficoms
pop
cmpsb
adc
aad
out
inc
cmp
aas
pop
xor
gs
call
enter
adcl
mov
push
icebp
and
or
sbbl
out
push
gs
lock
push
add
sbb
sti
aaa
nop
adc
fwait
add
jnp
lods
data16
adc
sahf
cmc
lds
pushl
fcompl
out
cld
adc
add
mov
test
and
imul
pushf
fs
out
cmp
mov
repnz
shlb
cld
dec
test
lahf
mov
jp
cld
into
jg
cmp
xchg
subb
sbb
mov
enter
push
adcl
sub
inc
sti
ja
mov
lret
addr16
pop
mov
roll
jno
inc
or
leave
dec
jp
and
or
insl
mov
fwait
pusha
lret
mov
jns
nop
mov
xor
icebp
sbb
imul
je
arpl
pusha
dec
push
test
loope
in
out
into
push
stos
jp
popf
fidivrs
pushf
aaa
out
pop
sub
imul
mov
or
sbb
push
out
data16
jmp
sub
sbb
xchg
mov
je
push
jg
popf
or
jmp
icebp
mov
pop
sbb
dec
fwait
cmc
or
andb
push
mov
lods
xor
adc
cmp
and
jno
xchg
mov
jmp
mov
mov
wbinvd
mov
in
pop
lret
aad
cld
adcb
iret
adc
inc
ret
out
fsubrl
inc
call
lea
xchg
pop
stc
mov
insb
ja
cld
and
inc
mov
mov
int
aaa
fstpl
je
sub
mov
loop
stos
insb
cmp
push
lahf
imul
dec
adc
xor
sbb
in
ja
addb
fiadds
dec
mov
daa
test
or
adc
pop
fs
out
cmc
sarl
inc
jecxz
mov
mov
pop
mov
pop
enter
mov
sahf
mov
xor
dec
xor
jo
pop
xlat
xchg
xchg
sbb
inc
imul
fwait
push
das
cmc
lahf
fsubl
es
xchg
pusha
hlt
enter
cld
outsb
jo
mov
mov
das
pop
jmp
imul
out
jo
arpl
psrlq
inc
movsl
insb
cmp
dec
push
hlt
mov
inc
cmp
addr16
pop
xchg
pop
lcall
pop
inc
push
inc
push
inc
sar
mov
jp
mov
inc
mov
or
xchg
and
dec
xchg
xchg
push
pop
imul
pop
cmp
push
testl
xchg
inc
jbe
lock
push
subl
loope
leave
mov
dec
pop
lret
fistpl
aam
pop
insb
or
je
xchg
adc
cmp
push
sub
divl
dec
jo
in
pop
ds
or
std
pop
pop
loop
aaa
jbe
stos
outsl
arpl
sbb
adc
jb
pop
pusha
dec
in
dec
enter
adc
imul
stc
or
lock
mov
xchg
pop
inc
mov
and
mov
or
lods
js
mov
iret
mov
lahf
mov
outsl
add
mov
sub
fcmove
test
or
inc
int
daa
in
mov
in
push
rol
iret
loopne
mov
mov
ret
in
add
mov
or
dec
outsl
dec
push
push
stc
addb
test
xchg
mov
iret
pop
mov
je
dec
pop
push
roll
pop
xor
push
ds
addr16
stos
movsl
jmp
mov
mov
icebp
fnstsw
icebp
data16
aaa
imul
in
xchg
mov
pushf
pop
add
push
add
lods
ss
xlat
test
add
add
cmpsb
nop
loop
outsl
call
lcall
js
inc
pop
test
into
xchg
leave
dec
jge
lret
cmpsl
fxch
push
pop
jp
lcall
push
push
aam
cmp
rorl
out
loop
fwait
rol
push
jb
xchg
dec
add
mov
pusha
sbb
sub
mov
shll
popa
inc
into
mov
cmc
in
mov
sahf
mov
fisubrs
not
lods
jg
mov
lods
pop
in
fsubr
sub
std
mov
xchg
mov
aaa
cwtl
unpcklps
xchg
inc
sbb
push
jecxz
add
or
aad
outsl
inc
jno
jbe
jg
and
fwait
xor
int
cmc
out
addl
adc
jae
lods
mov
addb
jp
jno
add
int
lahf
lahf
xorl
sbb
dec
movsl
test
mov
rcrl
ja
stc
xchg
push
pop
adc
wbinvd
mov
fidivrl
and
xchg
push
xor
dec
in
test
jb
fisttpl
inc
xchg
jbe
das
push
sbb
jae
add
rcll
ljmp
xchg
xor
fucomip
jbe
addr16
imul
adc
jne
sbb
xchg
dec
xor
jo
imul
shll
xchg
jns
pushf
cmp
fistl
cmp
cmpsl
jle
cld
push
and
pop
add
push
andl
xchg
mov
fimuls
or
sbb
jge
sub
stos
adc
cmc
loopne
cli
rorl
jmp
mov
sbb
xor
pop
mov
pop
out
xchg
aam
mov
pop
adc
xchg
ja
adc
xchg
out
jb
pop
cwtl
in
sub
pop
add
cltd
fimuls
mov
xchg
mov
pop
cmp
inc
sbb
movb
sub
jl
cmp
jp
xor
mov
aas
test
sbb
dec
nop
daa
in
into
and
lahf
or
imul
cltd
cmp
imul
cmc
xlat
mov
jb
xor
sbb
xchg
inc
clc
or
mov
mov
jo
cld
pop
out
fistps
inc
push
mov
push
loop
add
cmp
roll
inc
ret
mov
mov
cwtl
fldenv
aaa
mov
fidivl
aaa
xchg
mov
fwait
insb
adc
subl
dec
ret
adc
dec
cmp
mov
iret
adc
add
clc
jbe
cmpsl
imul
test
xchg
divb
mov
aas
add
fldcw
cmc
push
shrb
je
sbb
xorb
insb
inc
sub
out
adc
jp
cld
shlb
mov
lock
das
xorb
jns
xor
mov
pop
sub
out
repz
leave
cld
cmc
lds
dec
scas
imul
add
sbb
test
cmp
push
insb
add
mov
gs
pop
mov
jmp
or
fmul
mov
sub
mov
inc
out
push
imul
shl
lds
adc
lock
pop
sbb
jnp
and
js
loopne
push
jmp
dec
js
and
cmp
lret
imul
ja
cmc
push
test
icebp
lds
mov
int3
xor
jecxz
sbb
and
dec
or
dec
push
or
xchg
or
popf
sub
or
lds
cltd
mov
rolb
xchg
fs
xchg
adc
mov
pushf
enter
or
into
ret
xchg
sbb
int3
xor
shlb
dec
mov
mulb
call
pop
enter
xchg
jp
fadd
lods
sahf
cmp
pushf
jg
mov
xchg
lret
lock
xchg
mov
xor
int
pop
cltd
pop
sub
inc
mov
jne
add
addl
notl
sahf
dec
ja
adc
add
pop
pop
mov
orb
mov
mov
push
jns
outsb
inc
movsb
or
push
test
adc
adc
lods
sub
out
cltd
loope
fsubrl
insl
in
sub
fstp
pop
push
xchg
mov
jg
test
arpl
xchg
pop
insl
jge
movsl
jge
lds
outsb
loop
popf
ret
add
jecxz
pop
daa
jp
sbb
cmp
ret
sbb
out
adc
dec
aaa
mov
pushf
pop
cltd
repnz
arpl
test
mov
xor
aas
add
pop
xchg
cmp
fmuls
mov
enter
mov
push
pop
test
push
jp
cmp
mov
adcb
mov
cmpb
call
roll
outsl
sub
sub
imul
mov
jo
test
jne
mov
outsl
cmp
rolb
jle
out
rcr
pop
imul
shrb
pop
jecxz
iret
adc
or
mov
sbb
test
mov
sarb
and
sub
mov
popa
cmp
xor
lahf
stc
sbb
mov
jle
mov
mov
fisubs
fstps
pusha
lcall
movsb
mov
ljmp
lahf
mov
sbb
xchg
inc
xlat
scas
mov
mov
mov
scas
cld
pop
je
out
into
mov
out
fmull
imul
xchg
and
inc
and
xchg
sbb
push
jo
pop
fstpt
pop
int3
pop
adc
fwait
ss
adc
cmp
fistps
fwait
cmp
jge
dec
nop
pop
imul
push
pop
lahf
xchg
scas
hlt
or
mov
pop
pop
sti
mov
pop
mov
and
adc
shll
xchg
push
stc
shll
daa
dec
cltd
mov
jmp
push
jmp
cli
rclb
sbbl
jl
jb
lds
xchg
mov
xchg
push
into
inc
fiadds
and
pop
jb
je
out
add
mov
cmp
push
fcom
mov
or
js
aaa
ja
rclb
jp
dec
or
scas
in
xchg
pop
stos
loopne
lea
icebp
mov
fbstp
insb
loopne
push
sarl
ds
popa
in
push
or
adc
sbb
shrb
pop
inc
mov
push
rcrb
and
push
sbb
xor
inc
xchg
ficoml
jecxz
jl
xchg
jbe
js
jne
push
add
cld
sbb
xchg
js
fdiv
mull
outsl
movsl
ja
xchg
sbb
cmp
xchg
out
mov
cli
iret
mov
push
lret
out
mov
ja
ficoml
adc
or
xor
gs
arpl
add
mov
insl
push
mov
push
ret
inc
cs
dec
fwait
scas
out
fildl
imul
int
pop
push
cmpsl
xor
cwtl
adc
hlt
pop
jnp
fidivrl
cmpsb
add
push
fsubs
sbb
xor
inc
inc
xchg
and
lea
dec
std
arpl
mov
out
jo
sub
push
mov
cmp
daa
jb
enter
das
xchg
inc
imul
push
and
inc
or
mov
dec
lds
test
push
or
mov
jmp
push
cwtl
sbb
lret
pop
icebp
jbe
inc
in
jb
add
xor
sahf
xchg
jle
cltd
movsb
pop
lcall
flds
into
jl
pop
ljmp
jns
or
into
mov
dec
lods
mov
cltd
movsb
dec
sub
xchg
lods
push
adc
mov
or
ds
xchg
ficoms
repnz
repz
lahf
lcall
mov
test
cmpsb
push
inc
xchg
mov
inc
jecxz
nop
ljmp
push
insb
mov
bnd
cmpsl
test
mov
mov
push
push
xor
lds
enter
xchg
cld
or
cmp
mov
roll
xchg
mov
mov
test
fwait
jl
mov
addr16
mov
mov
fwait
cmp
ficoml
inc
or
pop
sbb
jl
push
and
xor
push
dec
incb
inc
sahf
cmc
inc
adc
xchg
push
sub
push
and
fs
es
xchg
dec
mov
shr
pop
pop
xchg
push
cmp
in
xor
and
xchg
mov
pop
inc
cld
push
push
cmp
ja
inc
inc
loope
pop
loop
xchg
mov
xor
dec
xchg
call
out
cld
fcomp
outsb
sbb
inc
cmp
jge
lahf
rclb
xlat
pop
jge
pop
fnstenv
jle
movsb
jae
or
sbb
jo
xchg
and
mov
jae
rep
xor
pop
sbb
mov
or
shlb
pop
out
inc
es
pop
push
mov
sti
lock
or
data16
mov
pop
xor
adc
fsubl
jns
rclb
mov
int
js
aas
adc
sahf
test
xor
and
imul
and
rep
or
cwtl
lret
imul
fimull
xchg
imul
cwtl
xorl
lahf
cltd
pop
jno
xchg
mov
roll
mov
ja
cs
rcrl
xchg
lock
mov
test
or
adcb
fdiv
mov
or
xor
ja
outsb
int
lcall
dec
shr
pop
sub
outsl
imul
adc
out
mov
cmp
fsubl
ffreep
adc
test
pop
or
cmpsb
js
into
cld
mov
cmp
jle
dec
rorl
pop
cmpsl
rorb
cmp
cmp
insl
jp
jbe
div
mov
das
aas
fidivrl
inc
push
xchg
ja
mov
faddl
adc
pop
xchg
sbb
lods
je
enter
lock
mov
mov
sub
xlat
xchg
adc
outsl
clc
pop
aaa
pushf
lahf
insb
imul
pop
mov
outsl
pop
orb
mov
mov
lret
adc
incb
ja
stos
cmp
sub
xchg
or
adc
mov
xchg
mov
clc
pop
mov
push
repnz
shlb
movsb
test
outsb
fwait
adc
and
jmp
pop
sub
and
mov
xchg
loope
adc
jp
enter
in
inc
outsb
into
fsubrp
fisttpll
rol
aas
jae
xchg
sub
ljmp
int
pop
adc
xchg
fnstcw
adc
add
pop
mov
imulb
mov
mov
mov
ret
cwtl
xchg
and
lock
stos
out
imul
inc
or
or
inc
ret
inc
mov
inc
sbb
test
ret
aaa
out
xchg
jmp
ret
push
int
fwait
jno
and
push
mov
ljmp
inc
adcb
cld
push
loope
xlat
or
sub
call
push
cmp
ja
stos
mov
js
imul
jg
enter
fdivr
bound
std
lcall
adc
out
sub
push
rcrl
dec
dec
adc
or
scas
xchg
pop
xchg
push
fwait
adc
xchg
aam
jl
mov
aaa
aam
pop
mov
pop
inc
aas
cmp
dec
lahf
fwait
in
mov
pop
and
arpl
lds
sbb
popf
add
lcall
testb
mov
push
pop
out
mov
cmp
stos
arpl
pop
fwait
add
addl
fmull
or
add
jmp
fildll
cmp
xchg
or
xchg
inc
mov
out
inc
lods
jmp
mov
lahf
fwait
mov
clc
mov
addr16
mov
aaa
mov
imul
mov
shll
sbb
pop
scas
cmpsl
adc
mov
gs
shrb
pop
dec
out
lods
pop
inc
jmp
sbb
add
mov
mov
js
cmp
inc
adc
dec
push
mov
sub
jne
inc
mov
hlt
mov
repnz
outsb
mov
jecxz
cltd
or
clc
test
imul
ss
movsl
or
xor
xchg
stc
adc
dec
fwait
or
lret
rclb
std
push
test
imul
mov
pop
cli
popf
and
mov
inc
pop
sbb
mov
mov
iret
js
xchg
enter
mov
nop
jb
sti
fs
and
inc
mov
push
out
jp
add
out
dec
call
add
into
cltd
add
add
push
mov
inc
sbb
cmpsb
push
les
cmp
clc
cs
mov
das
push
adc
pop
push
jl
imul
addl
repnz
mov
addr16
iret
mov
call
insl
lcall
mov
ljmp
rcll
pop
sub
outsl
add
out
adc
or
aad
cs
imul
enter
cltd
movsl
pop
in
js
imul
and
or
sbb
daa
outsl
jnp
je
fiaddl
pushf
lcall
in
aam
iret
push
dec
cmp
fcoms
add
add
cltd
pop
mov
dec
in
xchg
repnz
call
out
lods
iret
std
outsb
int
adc
bswap
xor
pop
out
test
xchg
sbb
or
dec
inc
cmp
in
aam
leave
pop
idivb
mov
mov
jb
jne
test
imul
jbe
adc
into
push
std
repz
test
aaa
lcall
aad
orb
enter
hlt
adc
and
push
jae
xor
jge
sbb
mov
dec
xor
mov
sub
add
inc
mov
cld
mov
sbb
sbb
call
dec
mov
jl
popf
mov
fwait
inc
fsts
jecxz
jae
in
add
std
mov
jae
add
stos
icebp
inc
out
lock
and
pop
mov
mov
sbb
out
jne
or
push
sbb
or
mov
xor
iret
mov
sti
in
xchg
dec
xchg
in
scas
lahf
jecxz
inc
test
dec
fwait
xor
dec
cmpsb
lock
and
push
outsb
jo
pop
mov
cwtl
icebp
push
sub
iret
daa
cld
lock
enter
addb
pop
mov
jne
inc
iret
adc
mov
ret
out
nop
adc
cmpsb
mov
hlt
jmp
xor
rclb
jb
or
dec
stos
fwait
enter
cld
popf
sarb
pop
mov
in
push
mov
imul
add
arpl
sub
out
aad
mov
sub
add
mov
push
mov
jns
inc
sbb
mov
addb
arpl
test
sbb
shr
sbb
mov
mov
xchg
mov
in
test
xchg
mov
xchg
sub
xchg
shlb
xchg
pop
sahf
mov
mov
aas
in
mov
je
int
clc
shll
add
inc
xchg
insb
jecxz
cmc
and
mov
cld
or
jnp
inc
pop
adc
xor
jecxz
xchg
pop
xchg
enter
pusha
insb
push
pop
mov
aas
movsb
cmc
fbstp
test
inc
lret
lcall
fdivrl
nop
scas
xchg
std
shr
pop
sahf
sarl
dec
or
pop
inc
mov
ja
mov
pop
pop
jo
adc
imul
enter
fiadds
and
fwait
xorl
shrb
lcall
jae
int
addr16
inc
icebp
pop
cmpsb
fcoml
fwait
scas
mov
or
cld
inc
jl
sbb
aas
cmp
mov
aaa
mov
sbb
jb
or
int3
add
push
pop
insl
in
pop
lahf
mov
mov
cltd
mov
pushf
leave
shrb
and
xchg
push
inc
jge
stos
out
add
addr16
jb
repnz
test
cmp
add
ret
testb
jno
sub
je
adcb
mov
movsl
inc
lock
xchg
add
aad
and
add
xchg
and
add
xor
gs
test
add
mov
ja
fsubr
push
or
aas
xchg
mov
mov
push
imul
test
jg
sbb
push
and
push
add
clc
mov
popa
or
push
mov
in
sbbb
dec
mov
outsl
or
and
mov
dec
xchg
jne
pop
dec
mov
inc
ret
and
jge
cmpsl
pop
addl
lods
addr16
sbb
pusha
push
adc
outsl
dec
fidivrl
jno
incl
sahf
xchg
and
repnz
pop
shlb
cli
push
cmp
pop
jo
outsl
sahf
test
mov
test
mov
cmp
out
sbb
dec
mov
mov
pop
imul
xchg
dec
imul
mov
pushf
fcmovbe
test
out
pop
xchg
sub
pop
mov
cltd
sbb
adc
popf
and
push
jbe
popf
movsl
xor
test
or
mov
sub
fcmovnu
jg
jle
lock
loopne
xchg
dec
sti
xor
add
orb
mov
sbb
sbb
cwtl
cs
cltd
insb
mov
js
cli
xor
pop
call
ljmp
or
add
xchg
mov
mov
in
or
out
in
dec
jg
adcb
int
mov
je
lret
mov
adc
or
push
jmp
mov
cs
adc
insl
outsl
or
mov
stos
lahf
fwait
inc
lods
jno
shll
mov
stc
enter
cmp
popf
test
sbb
pop
mov
jo
pop
mov
popf
cwtl
js
imul
aad
sbbl
je
mov
fincstp
fistpll
jnp
pop
out
scas
jb
mov
add
jmp
sbb
inc
or
cmpsb
sahf
or
lods
stc
dec
and
inc
orb
popf
sbbl
mov
fildl
pop
inc
dec
clc
add
movsb
mov
decb
rcr
sub
inc
testl
popl
repnz
arpl
sbb
pop
push
stos
hlt
mov
stc
imul
shrb
add
or
jg
imul
pushf
push
imul
push
jecxz
push
aad
cmp
sbb
inc
pushf
fistps
out
dec
clc
jmp
outsb
xor
add
sub
int
or
shll
aad
int
and
cmpb
sbb
dec
cmp
repnz
push
lock
sbb
or
pop
mov
mov
sbb
mov
mov
lcall
imul
jb
ja
fadds
jecxz
scas
pop
mov
xor
pop
adc
sahf
adc
add
and
inc
mov
mov
xchg
stc
mov
icebp
jl
add
or
sbb
cmc
test
add
mov
pop
lock
outsl
and
mov
and
test
das
cmp
sbb
daa
mov
out
or
sti
push
and
lret
push
enter
jnp
cltd
cmp
out
cwtl
jg
xchg
stc
mov
fbstp
jno
jbe
dec
push
cmp
cmp
inc
fsubrl
pop
imul
add
in
shl
xchg
mov
dec
push
xchg
adc
adc
push
add
push
inc
aaa
mov
pop
ds
bnd
pushf
shrb
cmp
push
imul
aas
test
cmpsb
add
add
adc
mov
sub
mov
xchg
js
insb
push
dec
cwtl
in
or
inc
enter
cmc
lods
mov
push
jecxz
call
or
adc
inc
adc
pop
and
loopne
pop
xchg
mov
mov
push
decb
aad
inc
jnp
in
inc
sbb
fsubrl
imul
imul
mov
sub
xchg
lea
jp
mov
add
popa
in
aaa
jbe
adcl
mov
stos
stos
adc
mov
adc
out
push
pop
cmpsl
sbb
sub
sub
lock
add
dec
xchg
aaa
out
jne
in
imul
xor
iret
push
rcll
adcl
jo
test
push
dec
xlat
aam
sbb
shll
mov
outsl
icebp
cltd
mov
pop
enter
or
add
dec
jl
int
inc
and
pop
int3
lahf
fstl
pushf
sahf
int
mov
dec
mov
lock
jae
push
push
es
movsb
lock
push
mov
pop
ss
test
enter
mov
shll
sbb
aaa
movsb
fwait
sub
mov
pop
lahf
mov
scas
push
pop
ljmp
popf
ficoml
pop
mov
lds
jecxz
cwtl
lahf
add
sbb
mov
pop
dec
mov
xor
lods
int3
mov
std
pusha
xlat
lods
jecxz
repz
pushf
ficoml
ret
mov
pusha
mov
xchg
mov
in
xchg
test
push
repz
pop
xchg
bound
xor
fcompl
mov
add
jle
sahf
push
ljmp
add
fimull
lea
fwait
or
jo
imul
fsubr
cli
movsb
pop
sbb
mov
cmp
fwait
jecxz
lds
imul
loop
pop
fsubrs
adc
ja
insb
xchg
sbb
into
outsb
in
jae
pop
inc
mov
xchg
inc
imul
sub
sub
adc
test
lahf
mov
fsubr
inc
lock
imul
mov
dec
les
adc
jecxz
jb
std
mov
add
sbb
cs
addr16
out
test
mov
cmp
mov
mov
fstps
mov
mov
iret
mov
shll
ret
imul
cmpsb
aaa
js
mov
cmp
data16
fnstenv
or
dec
xchg
dec
dec
pop
pop
and
mov
xor
lods
sbb
add
in
repz
and
push
je
mov
fnstenv
inc
scas
repnz
repz
pop
cmova
adc
pushf
rcr
cli
and
push
ret
push
mov
cmp
add
fs
push
cmp
pop
imul
push
sbb
fimuls
cmpsl
inc
sahf
xchg
cltd
xchg
push
pushf
xor
sbb
fwait
bound
xor
xchg
fisttps
dec
andl
imul
test
leave
or
addb
pusha
divb
imul
push
mov
pop
jl
push
test
fldenv
adc
sbb
jge
imul
or
dec
pop
sbb
aad
adc
fwait
or
hlt
jnp
pushf
xchg
movsb
xor
jp
sar
outsb
jno
push
mov
enter
mov
inc
adc
sbb
pop
sbb
inc
push
push
insb
inc
inc
push
push
inc
xchg
sbbb
fwait
stos
adc
lods
xchg
sahf
lea
es
pop
scas
push
icebp
mov
jl
or
call
cmp
or
movsb
mov
mov
imul
cwtl
mov
scas
cmpl
shrl
inc
test
rclb
xchg
ret
mov
mov
add
outsb
lods
fiadds
jecxz
sub
mov
cwtl
mov
mov
cmpsb
or
cwtl
test
mov
push
push
xor
inc
jmp
popa
sbb
outsl
adc
shl
push
aaa
jp
mov
mov
mov
jg
fdivp
pushf
loope
jns
jnp
shll
inc
mov
pushf
jo
mov
push
inc
int3
mov
lods
rclb
test
or
mov
into
fsubs
cmpsb
pop
fistpl
and
inc
mov
stc
mov
test
sbb
adc
lahf
or
or
xor
rclb
mov
sahf
out
repnz
roll
mov
imul
in
cmp
adc
inc
pushf
lea
ret
cmp
push
int
inc
adc
dec
jecxz
ret
in
cmpsl
dec
sub
push
sub
icebp
imul
cmp
jbe
or
mov
inc
in
sahf
cmc
mov
push
push
mov
sti
fwait
in
daa
mov
xorl
push
mov
cs
jge
aad
pusha
sub
push
ja
lea
mov
inc
enter
adc
jmp
sbb
sbb
push
ja
aaa
cwtl
sti
dec
lock
ficoml
pop
cmc
sub
ret
sub
and
rcl
and
dec
mov
push
gs
adc
xchg
xlat
mov
pop
pop
adc
mov
add
add
in
inc
mov
and
push
add
loopne
into
cmp
fimull
call
enter
or
loop
sti
mov
push
xor
sbb
imul
fwait
mov
roll
inc
ja
xor
inc
xchg
sbb
cs
lock
fwait
push
mov
scas
xor
test
mov
hlt
mov
push
out
hlt
mov
sbb
ja
insb
dec
xor
leave
mov
clc
pop
sub
outsl
fwait
push
insl
sbbb
sbb
push
test
xchg
xchg
sub
scas
mov
dec
call
mov
mov
mov
rolb
jmp
add
shll
dec
add
sbbl
insl
jg
aas
mov
nop
cltd
pushf
add
stos
mov
and
mov
and
push
fldenv
mov
mov
pop
push
daa
mov
pop
cmpl
imul
mov
and
mov
dec
fsubl
mov
ds
lahf
aas
int3
adc
push
or
fwait
subl
cmpsl
fwait
inc
xchg
test
jne
mov
cwtl
jp
in
insl
dec
fidivs
push
adc
or
pushf
sbb
push
aaa
mov
mov
pop
imul
call
aas
xchg
cmpsl
jp
xor
bound
pop
sub
test
rcr
test
jge
pop
stc
mov
cltd
mov
push
xchg
and
ficoms
pop
pusha
mov
jno
je
pop
jb
add
push
mov
mov
fwait
cmpsl
es
jnp
or
jo
imul
push
push
jl
push
popa
add
jecxz
ss
dec
xchg
cltd
push
hlt
pushf
or
mov
xchg
push
sbbb
add
test
sub
adc
adc
cmp
test
push
stos
jmp
lea
bound
insl
loop
or
sbb
daa
add
mov
push
add
mov
vpsrld
sub
mov
gs
imul
xchg
xorl
pusha
bswap
je
lcall
sbb
scas
lahf
pop
sub
and
mov
cld
test
rorb
add
and
pop
cmp
stos
test
daa
lods
push
cmp
mov
aad
sbb
lea
daa
jae
jle
push
mov
lds
mov
aam
addr16
jmp
cli
sbb
inc
imul
scas
sbb
sbb
jae
cmp
adcb
imul
mov
xor
mov
adc
pop
sub
dec
mov
push
mov
push
inc
and
mov
cltd
iret
inc
jl
fidivrl
sub
repnz
mov
lock
popaw
fisubl
xchg
roll
mov
sbb
push
push
lock
xchg
in
jo
imul
cmpsl
fwait
hlt
pop
dec
dec
lcall
inc
mov
cmp
sub
sbbl
int3
fbld
les
in
mov
mov
jb
shll
dec
lahf
divl
inc
adc
jae
daa
inc
int
and
lods
test
fistps
sub
xor
aad
pusha
adc
fdiv
cwtl
xchg
xchg
inc
stos
jae
cmp
pushf
mov
out
je
ffree
movsb
and
add
dec
jae
lcall
push
nop
daa
inc
mov
addb
cmp
aad
cltd
mov
jp
repnz
nop
ret
pop
movsl
mov
aad
fadd
mov
in
stos
outsb
sub
inc
jb
mov
in
sub
xchg
pushf
mov
mov
jnp
sbb
inc
icebp
or
loopne
test
mov
rclb
pop
mov
insl
adc
and
or
xchg
mov
shll
xchg
push
int
enter
xchg
leave
scas
jbe
test
daa
or
lods
lret
sub
cmp
clc
jb
ja
dec
mov
xchg
jl
inc
dec
cmp
cmp
ja
xchg
aad
or
cmpsb
inc
cmp
push
xchg
mov
dec
adc
andl
mov
sbb
repnz
movsb
mov
mov
les
nop
add
or
adc
rcrl
jno
mov
mov
pop
sahf
and
cmp
shlb
sub
cld
cmpsl
ja
lds
cltd
inc
adc
sub
test
push
mov
ficoml
daa
jle
out
js
jbe
popf
jge
into
or
mov
roll
scas
mull
into
cli
cmp
setns
lcall
aaa
sbbb
or
xchg
cmp
sub
cmp
adc
fistpll
enter
fnstcw
fists
orl
jbe
push
sbbb
jns
push
jecxz
fldcw
push
cmp
mov
aad
push
nop
and
test
cwtl
aam
in
lret
adc
jns
mov
scas
jecxz
jle
pop
xor
sti
push
movsl
add
sbb
xchg
outsl
mov
add
lret
jmp
icebp
adc
xor
fidivrl
sbb
mov
add
cmpsb
ret
xchg
jo
xor
xor
mov
jg
popf
cmc
mov
cmp
mov
pushf
out
dec
inc
lea
ds
sbbl
or
fwait
lret
lods
cs
and
sbb
xor
mov
pop
lds
fisttps
add
or
sub
gs
inc
lahf
lcall
jecxz
cmp
push
pop
pop
sub
jo
jmp
add
push
out
sub
adc
mov
mov
repz
xor
in
fildl
dec
scas
shrl
push
cmpsl
movsb
push
cmpsb
lock
arpl
imul
add
and
xor
or
push
adc
pop
mov
push
dec
adc
mov
xor
imul
mov
mov
jg
inc
xchg
mov
lds
dec
imul
shll
add
dec
jge
dec
fwait
cmpsb
shl
mov
pop
dec
mov
push
stos
daa
cld
outsb
subl
push
inc
sub
add
xchg
xchg
jbe
push
mov
push
fwait
mov
jns
orb
pop
js
sbb
xchg
dec
pop
pusha
mov
aad
test
lock
fwait
lret
fdivl
hlt
push
hlt
lahf
jge
fnstenv
xchg
ret
cwtl
sub
xchg
out
movsl
rolb
pusha
adc
sub
cs
leave
sar
mov
xchg
packuswb
mov
mov
mov
mov
or
push
lea
xchg
add
xchg
push
sbb
xor
mov
stc
sbb
jne
sahf
inc
mov
imul
dec
push
inc
vandnps
test
scas
hlt
test
ja
in
icebp
rcll
icebp
les
jae
daa
mov
pop
popa
clc
push
sbb
jb
rorb
imul
jp
adcb
xorl
jae
jbe
mov
ja
mov
mov
or
push
xor
shl
jg
call
aad
xchg
dec
popf
mov
push
jne
inc
cmp
aad
or
mov
aaa
int
sarb
aas
push
push
or
xchg
pop
fwait
inc
dec
mov
inc
add
shll
sbb
jge
xlat
push
fxch
mov
cmp
outsl
cmpsl
insl
jge
in
test
mov
enter
ja
ror
dec
les
push
sti
nopl
icebp
dec
mov
scas
xchg
icebp
ja
dec
sbb
mov
js
sahf
std
gs
imulb
stc
loope
lret
imul
scas
push
jmp
mov
dec
xchg
sbb
fwait
dec
enter
or
xchg
pop
pop
adc
push
push
lods
adc
mov
loopne
repnz
xchg
ja
das
in
xorb
fwait
mov
push
in
dec
sti
mov
je
outsl
add
fwait
aas
sbb
push
adc
inc
aam
mov
bound
pop
movsb
ja
cli
movsl
jnp
andb
jle
ljmp
add
out
inc
xchg
jae
xchg
lea
mov
mov
or
xchg
sarl
pop
stos
push
mov
pushf
sar
mov
xchg
movsl
and
or
pusha
mov
lret
mov
and
pop
dec
xchg
call
dec
pop
mov
mov
mov
ja
int3
mov
xor
adc
test
rcrl
add
lahf
hlt
shrb
mov
pop
dec
repnz
cs
dec
mov
mov
arpl
nopl
sti
test
les
xchg
jne
xchg
push
adc
es
incl
std
dec
pop
mov
pop
mov
insl
dec
shl
add
pop
jg
jecxz
std
call
in
add
daa
xchg
lds
test
das
fsts
and
cmp
jg
fcmovu
push
sti
pop
aas
add
adc
push
cmp
mov
sahf
mov
imul
pop
xchg
sbb
cmp
push
jge
cmp
sbb
dec
sub
sub
and
das
sub
cmc
and
mov
mov
pop
mov
inc
fwait
dec
icebp
mov
push
imul
not
mov
jl
sbb
les
stos
imul
mov
push
mov
lret
and
push
arpl
mov
add
in
adc
cld
or
sub
aaa
lods
pminub
daa
adc
mov
inc
or
push
mov
mov
cmc
pop
sarl
icebp
jge
mov
ja
adc
xor
sbb
loopne
pop
dec
push
jecxz
sbb
into
call
repnz
dec
xchg
mov
sbb
cmp
out
cmp
inc
imul
pop
fwait
arpl
fwait
mull
sahf
adcl
cmpsb
add
rcll
push
mov
sbb
jo
pushf
sub
or
cwtl
push
xor
mov
out
in
aaa
pop
out
subl
pop
enter
xchg
mov
inc
push
jo
fwait
dec
rolb
popf
adc
mov
fldl
aad
out
imul
cwtl
in
ret
cmp
mov
in
dec
mov
stos
sbb
mov
out
icebp
jae
fnstsw
pop
dec
lahf
pop
and
imul
mov
jg
pop
pop
xor
xor
xchg
push
cmpb
add
cmp
daa
test
push
out
inc
repz
mov
push
jmp
jae
xchg
jnp
sub
dec
push
call
stos
jl
iret
in
adc
push
xor
int3
fwait
shlb
imul
popa
cwtl
push
rcll
jp
dec
aas
call
add
int
adcb
flds
imul
repnz
clc
sahf
ret
jecxz
mov
mov
int
xchg
out
hlt
pop
in
mov
enter
movsl
fiaddl
and
inc
out
fs
fcmovb
popf
out
inc
sbb
rorb
mov
rclb
scas
inc
les
push
call
cltd
mov
out
mov
cld
int3
aas
push
mov
addr16
dec
mov
jae
pop
fwait
aaa
cmp
sbb
shrl
into
push
mov
xor
dec
cli
mov
mov
les
imul
or
mov
adc
sub
outsb
mov
xchg
xchg
sbb
mov
jns
or
icebp
int
inc
xchg
pushf
push
jb
hlt
cmc
jno
test
sbb
lcall
cli
enter
xlat
pop
lret
fldz
push
push
jecxz
xchg
test
xchg
ret
aas
push
inc
cmp
daa
call
aaa
pop
pop
fxch
loop
sar
jg
adc
in
and
cltd
dec
pop
adc
incl
pop
stc
jb
ja
sub
js
adc
out
xchg
rol
iret
call
aad
test
or
mov
mov
pop
rolb
mov
sub
aaa
inc
xchg
test
sub
dec
push
sahf
test
cmp
pop
dec
adc
xchg
js
fs
fdivr
dec
mov
add
push
test
icebp
sbb
pusha
out
cld
mov
mov
imul
xlat
cmp
insb
or
sahf
hlt
or
xchg
lds
sub
sub
lods
push
push
jmp
pop
cmc
adc
aas
cmp
int3
clc
or
fwait
jle
in
sbb
sub
incb
enter
jbe
mov
mov
mov
cmpsb
and
pop
push
das
je
gs
pop
test
ret
dec
ret
aas
cmpsl
xor
jmp
sbb
xchg
ret
inc
jp
dec
push
xchg
push
sbb
add
insl
sub
cld
stos
int
xor
adc
pop
test
pop
push
ss
cmp
xor
clc
lea
imul
mov
not
adc
xor
mov
sub
xchg
push
or
push
sti
je
jp
push
fimuls
div
pop
lcall
pop
push
arpl
mov
jl
jne
mov
mov
mov
stos
clc
jno
or
out
rolb
in
inc
pop
pop
insl
xchg
xchg
mov
mov
js
imul
sbb
xlat
jae
dec
cld
aad
jl
orl
aad
mov
mull
add
ja
out
or
mov
popa
fistpll
xor
mov
xorb
and
pop
in
and
mov
rorb
pop
repnz
dec
negb
imul
call
leave
into
mov
mov
sbb
mov
mov
test
mov
sbb
shlb
xchg
insb
mov
jl
and
lcall
shr
jle
test
mov
arpl
xor
inc
inc
insl
aaa
test
push
and
push
repz
sub
xchg
into
push
daa
mov
sti
and
jns
xchg
adc
sbb
xchg
cld
popa
adc
mov
cmp
mov
inc
and
test
outsb
pop
pop
in
mov
es
cmpsb
into
dec
push
inc
pop
pop
leave
ja
test
inc
mov
cmpsb
adc
dec
jno
xchg
shrb
cli
movsb
cltd
mov
mov
out
test
mov
hlt
cwtl
and
rorb
test
fwait
es
lret
sub
mov
ficompl
push
cmp
cmc
fimull
mov
inc
imul
outsb
xchg
outsb
leave
int3
mov
mov
push
jp
jmp
out
and
sub
inc
stc
fdivs
sbb
cmp
mov
lea
js
mov
cld
push
add
repz
shll
or
lods
mov
pushf
fwait
mov
mov
push
sbb
das
fsubs
cmp
mov
or
inc
xchg
xorl
outsl
jne
lea
push
push
outsl
jmp
pop
mov
mov
pushf
in
pop
rcrl
jo
mov
xchg
push
hlt
iret
cmp
and
scas
test
inc
cmp
sar
fcoml
or
subl
and
dec
imul
mov
int3
cmpb
mov
ja
xchg
fsubs
and
jae
out
xor
sbb
jl
nop
out
mov
add
lods
xor
mov
xchg
pop
cltd
fisubs
addr16
add
cltd
pushf
arpl
inc
mov
push
mov
mov
fwait
xor
sub
xchg
je
mov
into
mov
xchg
pop
dec
lds
leave
imull
bound
inc
jg
lret
inc
push
test
leave
jnp
imul
and
sahf
cwtl
lock
mov
mov
push
lret
ret
jl
pop
in
mov
test
dec
jle
mov
push
mov
cwtl
int3
mov
pop
adc
shlb
imul
add
insl
dec
mov
unpckhps
pop
orb
lock
mov
popf
xchg
add
hlt
fsubrs
push
jno
cmp
ret
and
and
fstl
push
and
add
mov
or
mov
mov
insb
cmp
mov
outsl
test
fists
bound
andl
sbb
xchg
xchg
and
sti
aas
repnz
dec
push
cmp
cld
fucomip
pop
push
js
push
pop
in
inc
xchg
sbb
clc
test
jns
jecxz
inc
lcall
mov
adc
pop
inc
mov
or
ret
fs
push
mov
es
and
aas
push
inc
rolb
pop
outsl
sbb
and
and
sbb
js
std
andl
pop
pop
xchg
xchg
sbb
add
insb
inc
mov
fs
xchg
jae
js
xchg
inc
fildl
add
mov
fwait
add
mov
inc
sbb
push
lcall
xchg
clc
push
loop
sbbl
jbe,pn
push
xchg
or
test
push
mov
andl
fs
out
and
xor
mov
pop
sub
mov
xchg
xor
adc
addr16
cmp
lds
cwtl
and
jp
shrb
push
daa
mov
movsb
jbe
add
fwait
jnp
es
aaa
stos
push
outsb
cmpsl
inc
ss
in
fldcw
and
add
mov
dec
xchg
jmp
cwtl
jmp
movsb
fdivl
dec
mov
sbb
xor
stc
push
adc
sub
adcb
or
imulb
pop
mov
fcmove
fsubs
dec
insl
aas
xchg
iret
or
pusha
mov
bound
inc
push
subl
mov
pusha
xchg
sbb
ja
pop
pushf
sti
out
enter
fdivrs
inc
adcb
outsb
dec
lret
mov
movsb
xchg
mov
int3
dec
std
rcll
bound
push
sbb
xchg
es
jp
or
cmpsb
adc
pop
dec
pop
imul
add
jle
lods
xor
jno
lock
or
inc
or
mov
and
sub
loop
fmull
outsb
sub
pop
imul
mov
adc
es
and
adcl
mov
jmp
xlat
mov
or
aaa
pop
not
xor
mov
mov
mov
clc
lods
dec
in
int
cmc
sbb
mov
test
push
lret
addr16
xchg
jl
ljmp
sti
movsb
adc
mov
adc
icebp
add
pminub
inc
sbb
add
imul
enter
xchg
pop
adc
sbb
hlt
cmp
addr16
or
popa
mov
jp
fwait
sbb
fldt
mov
sbb
jb
div
cmpsl
mov
xchg
cld
shrl
mov
ja
xchg
inc
orl
dec
jmp
dec
mov
lcall
sbb
and
and
addr16
scas
add
clc
sahf
xchg
jl
adc
jo
and
jmp
lahf
mov
xchg
push
mov
roll
negl
aas
test
insl
or
test
mov
shrl
push
les
fldcw
es
mov
rorb
jg
gs
push
popf
cmp
mov
mov
push
sbb
fwait
mov
adc
cmc
jns
rcrl
out
insl
insb
scas
and
and
add
adc
jmp
and
pop
ljmp
enter
mov
lcall
shll
ficoms
inc
sub
sarb
mov
xor
nop
xchg
arpl
mov
inc
dec
cmc
mov
fadd
cmp
sub
pop
inc
add
mull
adc
fdivl
xchg
das
test
cli
fs
stos
out
push
lcall
je
pop
jg
and
js
add
jnp
pop
mov
ficoml
pop
je
test
iret
imul
jns
rol
mov
lods
sub
cltd
pushf
lahf
push
cmp
mov
ret
jno
out
mov
xorl
dec
xchg
fisttpl
std
cltd
pop
enter
mov
cmpsl
mov
mov
xor
and
sahf
test
scas
sub
sub
lret
mov
xchg
cwtl
ds
jecxz
lahf
xchg
or
out
adc
jge
lret
leave
out
les
imul
enter
cs
xor
and
pop
imul
and
xchg
test
mov
testb
int3
lea
fs
mov
mov
and
mov
andl
sbb
out
push
in
add
push
stc
mov
or
out
mov
inc
addr16
xchg
mov
jnp
cmp
shlb
dec
fwait
aam
push
jmp
mov
les
repz
xchg
sbb
jb
into
xchg
sbb
and
in
inc
cmovg
sahf
push
mov
sbb
mov
cmp
jne
cmp
cmp
pop
imul
pop
imul
mov
fbld
lods
mov
or
xor
arpl
lcall
push
sbb
cmpsb
in
shrb
cltd
xchg
add
dec
sub
fdecstp
enter
lds
xor
sbb
mov
dec
loop
ja
mov
jb
imul
repnz
inc
int3
sub
outsb
xchg
cmp
lahf
xor
jns
inc
test
push
out
adc
push
fwait
js
arpl
insl
sbb
cmpsb
stc
xchg
pop
call
xor
push
popf
rcll
push
jecxz
adc
sbb
icebp
mov
lock
sbb
add
icebp
enter
jecxz
mov
xchg
cmp
incb
xchg
pop
into
jo
lret
mov
adc
ret
mov
or
popf
push
cld
cmp
push
mov
inc
mov
scas
movsb
jns
pop
lahf
lock
cmp
leave
mov
cmp
imul
inc
xchg
pushf
je
test
pop
or
call
or
dec
sub
repnz
cwtl
push
xchg
fwait
lcall
jne
cmpsb
mov
imul
shlb
jns
rep
xor
or
test
js
lock
inc
xchg
cltd
js
adc
sbbb
mov
imul
lock
sar
mov
aas
repz
sbb
and
imul
dec
push
push
inc
push
mov
xchg
imul
andb
and
mov
int
push
clc
out
sub
push
clc
mov
imul
leave
icebp
xchg
mov
cwtl
daa
jo
movsl
adc
mov
and
cwtl
and
mov
mov
iret
push
cmpsb
xor
mov
push
mov
stc
repnz
movsb
xlat
out
and
loopne
out
pop
enter
push
ljmp
orl
inc
adc
lcall
xor
or
rol
xor
cltd
push
fdivl
jle
pop
push
enter
outsl
aaa
mov
lahf
iret
stos
jecxz
ljmp
inc
adcb
jg
dec
adc
call
push
and
stos
or
std
mov
sub
inc
push
outsb
stc
pusha
out
pusha
jbe
mov
scas
jmp
and
and
shlb
lret
xchg
call
inc
mov
sub
mov
jns
mov
notb
into
dec
push
cmp
add
jb,pn
push
sub
test
lock
cmp
insl
sbb
ss
repz
push
imul
adc
xchg
or
jne
or
fbld
or
mov
leave
xor
adc
add
roll
xor
mov
out
jl
loope
outsb
ja
dec
fsubs
sbb
pushf
xchg
push
cmp
addr16
or
aaa
mov
arpl
dec
pop
dec
cmp
dec
push
rcrl
daa
aad
jle
adc
iret
or
lods
and
sub
stos
cmc
sahf
fs
xchg
or
xchg
and
dec
rcrl
xchg
and
or
dec
push
scas
in
mov
lds
xchg
into
push
cmp
pop
cmp
mov
pop
push
ja
cmc
dec
mov
lock
popf
push
xchg
stos
repz
add
ds
out
aad
sti
sbb
xchg
xchg
adc
jecxz
xchg
fwait
or
rorl
hlt
movsl
cmp
and
scas
mov
out
out
inc
push
jle
nop
pop
out
leave
mov
jg
dec
int3
jnp
mov
mov
stos
cltd
cli
lcall
shll
in
les
aad
test
dec
mov
or
sbb
lcall
lods
xor
js
cmp
mov
add
fidivrs
mov
mov
mov
and
xor
ret
push
cmpsl
sbb
mov
mov
scas
test
leave
inc
push
aaa
and
enter
in
and
mov
lahf
test
or
pop
pusha
les
ret
pop
and
test
mov
mov
mov
adc
adc
sub
in
out
sbb
sbb
cmp
ljmp
enter
imul
fwait
out
test
fstps
pop
adc
mov
mov
adc
mov
xor
lds
out
stos
out
movsl
and
add
es
push
pop
inc
or
lods
jae
aam
mov
inc
xorl
xchg
fmuls
fwait
mov
fucomi
cs
imul
jp
pop
xchg
adc
clc
adc
int3
push
sbb
lea
add
and
aaa
dec
jo
mov
pop
pushf
mov
xchg
rcrb
xchg
orb
les
clc
call
pusha
and
push
mov
orl
adc
push
pop
dec
je
imul
leave
into
aam
inc
das
ja
add
push
ja
sub
mov
js
rorl
cltd
jnp
cmp
or
sar
cmpsb
js
sbb
fildl
pop
ret
test
je
adc
scas
enter
pop
fnstenv
hlt
mov
repnz
insb
push
lods
xor
cltd
lods
daa
and
sub
adc
ret
inc
movsl
sub
and
pop
mov
or
inc
rcll
sbb
les
std
adc
shr
or
imul
and
xchg
inc
sbbl
dec
cwtl
xchg
pop
xor
rorb
pop
in
cld
xchg
imul
roll
adc
nop
pop
std
or
loope
fcoms
lods
decl
scas
shlb
insb
js
mov
pop
fwait
imul
xrelease
movsl
fidivl
test
inc
add
add
pop
out
add
sub
mov
sarb
jecxz
fwait
xchg
dec
in
push
xchg
adc
xor
gs
cmp
inc
inc
xchg
pop
cmp
shll
aas
int3
adc
or
testl
xchg
stos
das
xchg
mov
loope
pop
out
sbb
lea
sbb
test
mov
pop
ja
jo
mov
cmpsb
push
and
cwtl
lret
loop
mov
pushf
repz
shll
mov
jl
icebp
mov
inc
ficoms
data16
sbb
jbe
call
pop
leave
rclb
push
sub
sub
xor
imul
fmuls
addr16
jo
shl
repz
push
adc
hlt
xchg
sbb
sub
and
out
sahf
mov
mov
test
ret
popa
mov
add
cmp
addr16
mov
cmp
lea
out
insb
inc
add
lret
fdivrp
jae
dec
inc
cmp
bound
stos
scas
cmp
clc
mov
lea
and
hlt
mov
addr16
cld
gs
sarl
repz
popf
aas
xor
jl
cmp
pusha
inc
pmaddwd
jl
add
jge
add
in
and
xchg
nop
pop
mov
pop
movntps
jecxz
xor
movsl
dec
loope
mov
push
pop
imul
mov
sti
fadds
xor
mov
mov
add
jge
mov
and
cmp
push
out
emms
xor
dec
push
and
imul
add
shrl
repz
out
aad
xor
adc
test
add
adc
add
xchg
cmp
notb
or
mov
mov
sbb
scas
dec
mov
add
pop
jp
xlat
idivl
ja
cmpsl
pop
addr16
add
xor
cmp
sbb
xchg
adc
fimull
jae
jnp
stc
popa
fwait
outsl
cmp
cs
aas
jno
popf
ficoms
test
outsb
lcall
insb
lcall
mov
aam
pop
jp
and
pop
push
jbe
fcompl
sbb
lea
mov
ja
inc
push
mov
dec
sub
sub
mov
in
adc
in
ja
sub
push
int
gs
int
cmp
test
jns
idivl
inc
lea
jp
test
int
adc
cmp
cmp
sub
insl
inc
pop
adc
add
imul
sahf
push
imul
leave
and
aas
add
mov
ret
pop
pop
adc
fnstenv
xchg
in
hlt
je
imul
mov
mov
mov
xlat
ja
push
dec
inc
imul
push
cwtl
out
add
lea
and
inc
fwait
aam
lahf
pop
aad
jb
loope
stc
repnz
push
mov
mov
jl,pn
and
xor
adc
lock
push
loop
xchg
sti
sahf
mov
push
push
orl
lods
xchg
pop
mov
mov
mov
mov
mov
adc
mov
adc
mov
or
data16
mov
mov
test
push
pop
nop
imul
add
push
mov
or
cmp
pop
roll
ja
fs
lcall
mov
pop
imul
push
repz
sub
mov
mov
xchg
and
cmpsl
cwtl
dec
jg
rolb
pop
mov
hlt
inc
mov
ja
ljmp
seto
bnd
enter
shll
out
sub
push
je
jbe
sbb
movsb
lods
call
add
pop
sbb
xor
mov
push
out
push
jae
mov
xchg
xlat
inc
shrl
fwait
ret
shrb
outsl
fyl2xp1
push
mov
sahf
fwait
push
xorl
int
dec
sbb
mov
xchg
or
mov
mov
mov
test
outsl
aas
mov
jae
add
into
pop
xor
call
inc
cwtl
sub
loope
data16
pop
add
adc
ret
cld
ja
cwtl
push
mov
cmpsb
dec
or
mov
out
stos
repz
vpcomuq
lea
or
pop
lahf
adc
rcl
and
push
ja
fcoms
xchg
jmp
sbb
ret
aad
cmp
testb
cmpsb
or
jmp
shlb
ja
out
pop
or
cmpl
sub
pop
lea
sub
fwait
pop
mov
stc
mov
jb
cltd
insl
repz
mov
scas
fcmovnu
cmp
or
shll
lret
fcoms
adc
or
cmp
lds
imul
cmpsb
sub
mov
loope
sti
mov
xor
jnp
rorl
dec
andl
add
ja
mov
leave
stc
pop
pop
hlt
imul
push
icebp
cld
pop
shrl
fistpl
and
push
cmp
add
aaa
and
inc
inc
dec
imul
in
pusha
xlat
cmc
cltd
or
dec
pop
sbb
xchg
rdpmc
out
push
imul
inc
decl
push
lds
lcall
jo
sarb
aam
fsubrs
inc
das
mov
pop
or
inc
jne
es
movsb
shrb
imul
cld
adc
addl
xchg
sbb
repnz
push
outsb
mov
dec
cmp
nop
adc
hlt
mov
imul
insl
pop
movsl
push
adc
adc
fldlg2
repz
mov
dec
and
mulb
pop
xchg
xchg
imul
lret
gs
stc
cmp
or
sahf
lea
push
and
addr16
inc
inc
shl
dec
lea
sbb
mov
ja
fwait
add
dec
ret
xchg
lret
jecxz
cmpsb
popf
mov
jno
and
out
fcmove
lret
xchg
mov
in
pop
inc
test
dec
push
iret
mov
ljmp
sbb
jp
fs
and
iret
leave
add
mov
pop
ss
mov
and
or
aam
das
add
insb
fnsave
or
addr16
aas
dec
mov
xor
enter
sub
call
xor
test
cmpsb
mov
pop
sbb
mov
cltd
and
les
sbb
negl
sub
lea
xor
dec
test
pop
push
push
add
mov
mov
ds
jne
add
enter
leave
or
mov
push
and
fdiv
jl
push
mov
pop
jno
mov
aas
xchg
or
inc
and
inc
adc
std
stc
dec
inc
sbb
sti
scas
mov
or
pop
adc
sbb
add
xlat
aaa
sub
imul
fsts
hlt
xor
jae
mov
cmpsb
xchg
xchg
sub
xchg
sahf
sbb
mov
outsl
sbb
pop
pushf
push
sbb
inc
loopne
push
mov
mov
test
jg
aaa
xchg
sbb
enter
leave
xchg
inc
mov
inc
push
xchg
frstor
add
add
jecxz
pop
gs
out
mov
shll
std
daa
imul
imul
add
sub
push
je
xor
mov
xchg
pop
push
dec
and
mov
and
push
popf
pop
arpl
fimuls
add
popf
mov
push
jl
in
sub
dec
mov
adcb
jecxz
rclb
mov
nop
mov
xchg
lea
inc
mov
jp
jecxz
fists
cmp
dec
movsb
sub
xchg
sbb
bound
fwait
shlb
mov
push
inc
inc
dec
cmpsl
sub
mov
and
dec
mov
aas
mov
out
jecxz
jp
imull
add
aas
test
mull
inc
movsl
sahf
jb
mov
or
pop
and
nop
adc
or
cmp
inc
inc
cmp
pop
add
daa
lea
push
sbb
xchg
dec
xchg
dec
pop
and
mov
sbb
test
cmpsl
fwait
inc
cmpps
mov
insb
cmp
popf
ret
pop
mov
lahf
mov
pushf
pop
pop
mov
dec
jp
pop
mov
sahf
cld
lock
leave
mov
out
mov
push
jae
lods
cltd
mov
pop
pop
negb
mov
pop
push
sbb
cmp
je
or
add
jnp
test
rcll
inc
fdivrs
and
jb
int3
dec
inc
push
and
xor
xlat
fsubrp
xchg
pop
xchg
and
lea
scas
fninit
mov
ds
fsubrl
jne
adc
les
xchg
frstor
test
arpl
fstpt
sbb
leave
cmp
xchg
lahf
mov
cmp
jo
jmp
shll
fisttpl
addps
imul
ds
push
lahf
adc
jae
mov
inc
jge
pop
fwait
daa
cld
cmp
sub
push
sti
in
jb
nop
push
leave
imul
dec
das
enter
jne
mov
fnstcw
jae
das
gs
inc
jns
in
cmp
mov
aas
jae
mov
mov
jns
fisubrl
in
test
pop
imul
stos
aas
aam
adc
mov
or
iret
and
sbb
pop
scas
pop
aas
xchg
push
incb
or
ret
or
dec
mov
jl
pushf
jns
push
and
push
sbb
les
xor
dec
aas
stos
push
test
or
mov
imul
fiadds
scas
ds
mov
aaa
ds
shl
pop
lea
mov
sbb
cmp
cmp
int3
jnp
xchg
pop
sbb
ret
xor
aas
mov
push
fucomp
sahf
gs
add
cvtps2pd
inc
popf
mov
ja
test
dec
jbe
mov
push
test
orl
lods
pop
adc
sub
hlt
mov
fildll
add
mov
imul
mov
scas
pop
xor
cltd
dec
daa
clc
inc
ss
cwtl
js
xor
jns
rcrl
pop
add
insb
mov
xor
push
test
pop
pushf
pop
or
mov
dec
jne
fisubl
mov
xchg
rcl
mov
pushf
cmp
xor
push
inc
jecxz
andb
lea
fsubl
mov
lock
cltd
cwtl
into
cmp
nop
push
mov
lahf
sub
mov
pop
and
mov
loopne
pop
aas
push
cmp
sbb
nop
test
pop
mov
dec
mov
in
push
orb
inc
add
lods
mov
mov
sub
rorl
outsl
pop
stc
or
int
and
push
addr16
cs
clc
movsb
or
enter
cmp
getsec
push
outsl
aaa
sub
jno
out
js
inc
inc
pop
imul
sbb
and
mov
lahf
jae
clc
arpl
dec
jne
ret
aaa
movsl
push
movsb
lcall
call
pop
orb
jecxz
rorl
add
cmc
pushl
out
bound
lahf
add
pop
movsb
cmc
iret
sbb
xor
and
cwtl
fwait
cltd
push
pop
lods
sahf
add
push
cmp
pop
pop
mov
and
icebp
push
shlb
enter
jmp
js
sbb
xchg
mov
inc
cltd
push
lods
aad
jg
jns
daa
cmp
arpl
mov
cltd
jb
sbb
jnp
xchg
or
add
mov
mov
pop
insb
push
pop
lea
lea
sbb
sbb
and
jmp
cmp
mov
mov
aas
icebp
push
mov
jmp
out
in
mov
sbb
les
sbb
in
inc
push
xchg
fcompl
scas
dec
jecxz
adc
mov
xor
in
adc
xchg
jp
imul
mov
aas
in
sbb
sbb
fdiv
sbb
outsl
and
mov
add
pop
lcall
lods
fwait
mov
jle
daa
and
cmp
cmc
add
mov
lods
js
sbb
mov
pop
std
shlb
lahf
xchg
loopne
mov
loop
sti
test
mov
nop
adc
dec
xor
jecxz
cld
rorl
repnz
cmc
in
lea
imul
and
or
sti
jno
incb
daa
mov
mov
movsl
push
sub
in
xchg
mov
jge
insl
lea
cmp
es
and
jecxz
dec
movb
add
scas
xorb
mov
or
push
push
mov
cmpsb
xorl
adc
xchg
lret
lods
push
adc
xorl
je
int
or
inc
cmp
pop
sbb
icebp
in
shll
push
add
insb
mov
dec
dec
fimull
mov
mov
mov
dec
enter
cmpsb
shl
cmovb
inc
cmp
dec
aaa
jle
fists
adc
cs
mov
stc
rolb
pop
call
mov
pop
jb
in
sbb
jge
lret
call
jno
ss
sahf
dec
jb
cld
lea
addr16
xchg
bound
test
sbb
in
jo
aaa
xor
enter
test
and
inc
inc
adc
sbb
sub
sub
sub
lods
or
inc
mov
int
scas
subl
mov
push
ljmp
nop
insl
push
inc
lret
sbb
out
pop
out
mov
cs
sti
outsl
mov
cmpsb
flds
or
aas
in
fisubl
xor
dec
pop
dec
sbb
mov
ss
jb
pop
mov
lea
cmp
in
je
dec
addl
mov
pop
jg
jb
stos
pushf
xchg
mov
fcoms
mov
add
dec
inc
mov
and
jnp
pusha
inc
imul
xor
adc
in
mov
data16
outsl
roll
fwait
xchg
dec
movsb
out
sarb
jnp
stc
repz
sti
mov
insl
aas
mov
push
jp
xchg
test
movsb
push
lcall
in
pop
cmpsl
aaa
inc
push
fimull
mov
cwtl
imul
jge
fs
imul
push
pop
in
andb
add
lds
xor
mov
xor
sarb
sbb
and
sbb
sbb
pop
mov
cmp
cld
mov
adc
fiaddl
repnz
inc
xor
sbb
rorb
mov
mov
aaa
sbb
fwait
int3
jecxz
outsb
lea
jne
mov
push
dec
mov
fsub
add
ret
xor
decl
and
push
sbb
sub
and
mov
cmc
push
lock
stos
ret
scas
sbb
sahf
cmpsb
sar
dec
nop
pop
fwait
mov
xor
pop
sub
es
pop
sahf
ja
xor
mov
add
int3
movsl
cmpps
pop
fsubs
sbb
cwtl
pop
js
adc
and
xchg
mov
inc
lahf
xor
pop
bound
sub
gs
cmpsl
stc
mov
out
cmpsb
es
mov
inc
pop
mov
and
fwait
mov
aaa
in
push
inc
dec
sahf
pop
cld
lods
imul
hlt
in
popa
clc
mov
les
dec
test
insl
pop
mov
fs
imul
sub
dec
add
cmp
and
in
push
pusha
cmpsl
cmp
mov
pop
sub
es
cmp
and
stc
push
out
addb
or
lcall
dec
sbb
and
xchg
imul
fisubs
lods
ror
mov
cwtl
sahf
fwait
jae
jle
lods
sub
xchg
pop
jmp
or
daa
or
out
or
add
pop
movsb
pushf
sbb
adc
ss
mov
xor
push
pushl
and
jecxz
jecxz
adc
mov
popa
add
sub
sar
imul
mov
mov
inc
out
shrl
cltd
inc
dec
xchg
iret
ret
out
pop
aas
push
ljmp
shll
pusha
mov
kortestb
lcall
insl
fmull
or
mov
addl
fisubrl
in
sahf
call
sbb
xchg
pop
fists
out
xlat
mov
fs
call
fs
dec
add
popa
incb
jecxz
sub
xor
push
out
clc
cmp
scas
aam
or
adc
dec
in
lret
into
push
or
pushf
imul
xor
dec
jl
dec
mov
int
rcl
mov
push
mov
pand
nop
pop
cwtl
add
imul
imul
mov
mov
add
jno
mov
andb
jmp
movsb
or
pusha
pop
push
popa
sub
rolb
out
xchg
or
xor
mov
sbb
mov
sub
call
or
dec
clc
inc
inc
inc
and
mov
inc
shl
arpl
and
push
fbstp
inc
aas
pushf
jno
in
popf
out
icebp
inc
pcmpeqb
jb
jle
sub
mov
imul
adc
mov
ret
stos
inc
rol
in
xchg
into
in
fsubrl
and
add
lea
cld
aaa
mov
jno
or
fidivl
pop
push
xlat
dec
xor
sbb
std
call
jne
repnz
test
add
test
mov
fldenv
movsl
pusha
lahf
imul
mov
mov
push
sti
add
jle
imul
or
std
push
mov
lock
push
out
adc
fcoms
flds
sti
std
and
mov
fcoml
int
add
enter
mov
mov
sub
jo,pt
pop
pop
mov
ficompl
mov
shlb
jae
movsb
outsl
and
imul
xchg
add
addr16
daa
dec
in
fmull
cmp
movb
mov
sub
cmpb
fsubr
jmp
mov
mov
daa
mov
xchg
mov
gs
das
sub
jle
mov
xbegin
sbb
imul
and
and
push
xor
mov
xlat
imul
dec
mov
mov
lahf
push
push
cmpb
add
mov
or
push
nop
out
mov
icebp
icebp
xchg
mov
fwait
cmp
popa
adc
pop
mov
lcall
dec
push
lret
int
jbe
sahf
fcoms
or
imul
sbb
or
imul
adc
adc
push
xchg
add
aad
push
xchg
in
sti
mov
mov
clc
push
pop
push
leave
mov
addr16
xchg
jge
int3
addr16
mov
scas
push
lret
fcomps
test
and
pop
insb
jno
sbb
inc
aaa
xor
mov
sub
outsb
xchg
sbb
cltd
cwtl
sbb
mov
push
test
inc
or
xchg
mov
rcll
lds
pop
sahf
out
icebp
loope
and
lock
stos
in
xchg
mov
push
daa
sub
enter
add
pop
mov
inc
mov
fs
or
roll
mov
mov
test
push
jne
ds
test
negl
cmp
in
lahf
cs
das
icebp
inc
rolb
jnp
test
aam
test
rcrb
ljmp
icebp
test
mov
lret
lahf
mov
xor
aaa
sub
fwait
loop
cld
popf
outsl
and
dec
fwait
ret
int
xchg
shrl
sub
rclb
inc
pop
inc
mov
mov
xchg
push
xor
cld
imul
adc
ret
pop
loopne
jb
lds
imul
adc
adc
rcl
mov
mov
push
fmuls
daa
adc
sub
push
xchg
add
cmp
iret
cmp
incb
daa
mov
push
lods
shrb
shlb
xchg
xchg
pop
sub
test
inc
pop
hlt
sahf
movq
lods
insl
testl
aaa
mov
inc
xchg
mov
mov
scas
mov
lcall
scas
or
repnz
sub
jnp
vmulpd
cmp
mov
or
lea
fwait
cmp
sbb
pop
jg
lock
jns
xchg
inc
nop
fwait
xchg
sub
mov
scas
adc
mov
mov
ljmp
push
test
mov
lcall
lods
mov
popf
test
out
pop
xchg
mov
mov
mov
rorb
imul
enter
mov
adc
lds
push
cmc
lahf
or
jo
arpl
ja
pop
fsts
push
jg
cmp
mov
inc
xor
xchg
mov
jle
repnz
sub
sub
xchg
and
xchg
in
pop
shll
jmp
cs
cmp
xchg
cwtl
icebp
out
jae
lcall
dec
jle
cmp
sbb
aam
xor
loop
jg,pn
cmp
std
push
inc
push
fisttpl
xchg
sbb
adc
into
add
push
or
pop
sbb
xchg
mov
and
daa
cwtl
jno
cld
jnp
int
scas
jl
out
mov
repnz
clc
push
lea
ja
fs
sahf
push
adc
repnz
add
ja
in
sbb
add
mov
into
fwait
xlat
add
scas
add
icebp
pusha
sti
test
lods
test
stc
jae
enter
pop
pusha
xchg
and
cwtl
pop
xor
and
test
lcall
mov
addr16
cmp
fcmovb
pop
cld
mov
testb
daa
fucomip
aas
mov
outsb
loope
loop
and
jmp
in
aad
pushf
mov
test
imul
sub
mov
jno
pop
aas
push
loopne
test
dec
lea
push
popf
fwait
xchg
and
rcll
test
iret
and
pop
or
add
mov
icebp
les
mov
jle
loop
or
cmp
imul
dec
push
mov
mov
and
ret
test
mov
fildl
push
and
xchg
jns
imul
jge
jo
clc
dec
cmp
das
jmp
insb
xchg
adc
testl
mov
enter
enter
xor
dec
imul
dec
inc
jb
aaa
sbb
mov
dec
xlat
push
repnz
sub
sbb
add
andl
ret
mov
lcall
fistl
mov
xor
and
fisubrl
pop
xchg
scas
mov
dec
jb
lret
mov
insl
xchg
arpl
pop
or
jo
lret
mov
dec
cs
xorb
aas
cmp
push
mov
cmc
test
int
imul
dec
and
dec
dec
and
sti
push
faddp
fsubl
sub
adc
mov
xchg
sbbb
or
out
in
xchg
or
in
icebp
or
pop
mov
in
jne
mov
push
dec
cltd
in
mov
pusha
cmpsb
les
fildll
int3
jmp
sbb
call
dec
xchg
cmp
inc
jo
dec
mov
rol
sbbb
leave
leave
lcall
and
shrl
mov
mov
adc
or
inc
mov
je
mov
test
cmp
jg
jb
mov
pop
fadd
nop
lock
lret
pop
xorb
or
add
cmp
les
arpl
cmp
xchg
je
jo
xchg
vmwrite
xchg
pop
sahf
cmc
pop
add
mov
inc
fmull
push
fbld
dec
js
sarb
dec
fistl
and
js
mov
cmp
repz
mov
mov
or
repz
inc
xor
pop
jns
inc
lods
std
pop
adc
ret
lods
cld
inc
mov
xchg
jo
jns
imul
test
inc
repnz
pop
hlt
fcom
imull
adc
bound
and
or
sahf
xor
mov
jg
inc
shrl
ja
cmp
mov
cltd
jmp
inc
ja
rcrl
out
pop
or
pusha
addl
enter
dec
out
mov
jbe
cmp
dec
cld
lock
test
stc
pop
or
lea
pushf
dec
pop
adc
leave
mov
cmp
or
xchg
and
pusha
lock
cmc
fidivl
loope
and
nopl
pop
push
pop
ret
add
ss
enter
fwait
jecxz
or
inc
fmull
icebp
adc
fmuls
test
clc
add
pusha
push
add
or
jecxz
mov
sub
pop
stos
es
filds
pop
daa
push
inc
gs
ficoml
scas
repnz
sti
loope
mov
add
stc
mov
rcll
in
and
out
jl
mov
scas
add
jo
adc
cltd
xchg
add
movsl
nop
or
clc
bound
lock
repz
rcr
idiv
test
inc
jbe
mov
popf
mov
fcoms
mov
push
lods
orb
adc
fwait
shll
cmpsl
cmp
push
ds
mov
aad
cwtl
imulb
outsb
fwait
xor
std
ljmp
cmc
jo
out
testb
sti
cmp
mov
je
arpl
dec
lea
test
sbb
add
fbstp
jecxz
test
cltd
jle
imul
jmp
std
lods
test
push
lret
mov
call
inc
addr16
adc
cmp
enter
add
sub
outsl
subps
or
mov
pop
mov
loop
icebp
xchg
or
inc
xchg
or
sbb
adc
xchg
sbbb
fsubl
int
daa
mov
jns
push
jns
popf
dec
adc
adc
sar
inc
jecxz
adc
scas
jg
adcl
inc
jg
inc
dec
xchg
leave
jns
clc
push
xchg
data16
push
push
pop
les
test
mov
jmp
mov
push
cmp
adc
sbb
cwtl
out
mov
jbe
test
pop
sbb
adcl
and
mov
shrb
mov
sbb
mov
mov
test
add
xchg
push
and
cmpsb
aaa
rcrb
jb
lahf
fwait
outsl
inc
imul
and
sbb
imul
shlb
mov
push
mov
mov
outsb
div
cmp
xchg
inc
in
push
dec
and
mov
push
hlt
or
das
shrb
into
nop
ret
pushf
imul
xchg
inc
xchg
sahf
dec
mov
pop
int3
fisttps
mov
pushf
js
xor
or
lea
push
je
xor
push
inc
add
push
push
adc
sub
or
sub
sbb
orl
inc
jp
es
ja
fwait
sahf
rclb
lcall
cmc
jno
sbb
sbb
into
lock
sbb
mov
cmp
test
scas
adc
and
mulb
iret
mov
adc
cmp
inc
sbbb
mov
pop
pushf
pop
ljmp
call
dec
mov
lods
dec
iret
leave
pop
add
mov
loopne
pop
sarb
aas
repz
stc
cltd
test
sbb
cmp
sbb
add
push
fcoml
jnp
clc
mov
test
push
aam
add
pop
mov
lahf
mov
insl
std
pushf
cmp
lcall
push
sub
sub
mov
jo
ja
jmp
cld
rcrl
xchg
int
aas
xor
inc
pop
in
repnz
addb
jge
pop
push
mov
das
enter
lock
jnp
loop
mov
repz
xchg
fwait
push
loop
fimuls
ds
inc
sbb
jae
fbld
jae
fwait
adc
cmp
mul
and
adcb
rcrl
xor
aaa
push
cmp
rolb
vpcmpeqd
sbb
pop
dec
das
test
mov
mov
lcall
call
int
rcr
rcrl
xor
subl
adc
xlat
lods
repnz
add
imul
push
data16
mov
pushf
out
mov
mov
insb
push
xchg
imul
scas
outsl
inc
or
dec
xchg
mov
mov
xlat
mov
inc
cmpsb
ja
lahf
scas
test
sub
sahf
push
adc
sbbl
dec
orb
int
mov
call
xor
fidivl
xchg
rcrl
mov
or
aam
and
push
movsb
outsl
add
sub
add
pop
pusha
cli
cltd
fistps
hlt
adc
lds
out
push
call
mov
daa
pop
and
mov
pushf
xlat
scas
outsb
mov
mov
mov
test
xor
fildll
int
leave
mov
adc
mov
xchg
add
jl
mov
js
jns
dec
mov
push
or
dec
fwait
lea
fsubs
test
jo
sbb
daa
adc
dec
xchg
xchg
xchg
test
mov
jl
pushf
push
fwait
pop
aam
sahf
sarb
jnp
xchg
imull
ja
pop
sbb
stc
js
imul
orb
mov
insl
push
and
fwait
loopew
movsl
fstps
jo
cmp
adc
int
data16
pop
add
lret
mov
in
scas
call
sbb
and
jbe
fwait
lods
dec
add
fsubl
adc
adcb
adc
mov
push
out
xor
repz
pop
inc
jmp
and
iret
repnz
shll
rorb
xchg
inc
shl
js
pop
xchg
cmpsb
or
pop
xchg
inc
mov
xor
data16
shrl
out
sbb
inc
test
fwait
ret
std
and
adc
addr16
sbb
cli
cld
shl
jmp
mov
inc
dec
arpl
mov
cltd
imul
cmp
aaa
xchg
xchg
fwait
sub
mov
lahf
repz
int
xor
jmp
das
test
jmp
imul
push
shlb
in
pusha
dec
add
pop
push
and
enter
mov
pop
pop
mov
inc
in
imull
dec
pop
sub
fsubr
sbb
dec
or
in
sahf
in
out
xchg
mov
nop
mov
add
push
adc
int3
xchg
lcall
mov
sbb
jl
in
ss
dec
adc
jg
out
bound
push
inc
cmp
xchg
movsb
pop
push
clc
and
sbb
sbbb
jo
add
cld
pusha
mov
and
outsb
pop
and
pop
jecxz
mov
fwait
push
imul
popf
adc
xchg
and
rcrl
out
movsb
rorl
push
mov
sub
lock
das
test
sub
mov
cmp
or
out
iret
mov
les
jns
int
sub
orl
cmc
push
xchg
pop
xor
fisubl
lea
inc
mov
xchg
aaa
fwait
cmp
xchg
mov
orb
xor
xchg
sub
movsl
out
in
pop
add
xchg
inc
lods
into
in
inc
jne
dec
lock
mov
es
aad
test
sub
rcll
sub
repz
lods
xchg
sub
shl
mov
pop
imul
and
popf
jg
fcmovb
mov
outsl
adc
test
ljmp
pop
or
mov
lds
les
fldt
imul
dec
dec
ficomps
add
popa
cwtl
imul
pop
out
mov
movsl
test
addr16
imul
loope
jecxz
mov
cmpsb
mov
push
rorl
push
das
loop
in
and
and
loop
out
mov
add
outsl
cltd
sahf
mov
imul
mov
aas
mov
cld
pushf
mov
and
jecxz
sub
or
popa
and
mov
test
insl
in
imul
das
or
xchg
push
popf
mov
mov
lock
test
stc
stc
mov
push
out
mov
pusha
mov
std
adc
sbb
jb
gs
into
mov
cmp
jne
push
lods
dec
xchg
sub
mov
int
aam
fwait
aas
jl
jns
cmp
fisttpll
cmc
or
fdivrs
stc
clc
jmp
mov
mov
imul
fiadds
pop
dec
push
xor
aad
shl
adc
pushf
sub
push
dec
mov
adcb
pushf
aaa
hlt
adc
fsub
pop
lcall
jp
loopne
dec
lds
push
pop
jmp
decb
mulb
lock
mov
cld
push
into
addr16
push
scas
pop
xchg
daa
dec
fs
fbld
mov
mov
icebp
pop
cmp
add
push
pop
jnp
cmp
mov
out
shrb
inc
pushf
test
fwait
mov
or
cld
sbb
ja
jmp
pop
push
fwait
and
jb
lods
jno
ret
arpl
add
mov
mov
sub
add
ja
push
push
sahf
jmp
je
movsl
mov
mov
push
filds
fs
add
lcall
loopne
pop
outsb
sbb
cmp
cmpsb
je
pop
jnp
popf
lcall
in
adc
pop
outsl
or
into
and
mov
in
arpl
pop
push
mov
cmpl
int
repnz
decl
call
ret
xchg
jbe
or
iretw
xor
cmpsb
dec
aas
or
out
and
hlt
subl
ja
loop
cwtl
pop
cmp
lods
xor
dec
shl
insb
inc
xchg
mov
or
xchg
xchg
test
sub
and
or
mov
sarl
lea
daa
test
adc
pushf
fstpt
test
jecxz
call
and
pop
jp
mov
jns
xchg
jecxz
mov
add
mov
sti
xchg
adc
pop
cmpsl
push
jo
mov
fdivr
add
mov
cmpsb
aaa
scas
cltd
mov
pop
jnp
orb
and
cmp
jne
inc
or
es
lret
test
inc
mov
movsb
imul
mov
mov
fldt
rorl
pop
mov
cmp
jbe
lret
jb
add
push
lea
pop
sti
addr16
int
pop
jno
jo
hlt
test
xchg
push
cwtl
cmp
adc
icebp
int
aas
push
std
lret
daa
imul
pop
cltd
call
jp
nop
pop
jmp
in
fcmovb
imul
or
subb
xchg
cmc
mov
add
movsl
mov
jbe
or
je
mov
jecxz
fimull
dec
adc
arpl
add
mov
je
jp
mov
sbb
xchg
cld
push
and
xchg
scas
in
popa
jne
lcall
popf
imul
xor
mov
mov
fwait
xor
sbb
fcoms
xor
outsb
mov
or
fs
pop
imul
inc
movsl
and
js
mov
arpl
sahf
dec
cmpsl
dec
pop
fs
or
hlt
int
mov
xchg
jmp
jecxz
pushf
cmc
adc
sti
or
cmp
jns
ret
mov
scas
cmp
mov
outsb
ret
xchg
pop
jns
mov
pop
add
fisubl
or
adc
test
fdivr
mov
jp
add
arpl
push
mov
jg
mov
enter
setb
jl
mov
lret
icebp
enter
ret
dec
mov
or
push
adc
in
and
push
ljmp
or
aad
sbb
jo
mov
fdivrl
imul
add
sub
data16
fsubs
inc
out
xorb
xchg
add
das
outsb
cli
loopne
add
inc
add
push
fstl
aam
bnd
mov
call
out
sbb
pslld
push
imull
push
push
leave
pop
into
or
test
sub
cmp
in
sub
adc
icebp
pop
jns
inc
cmp
mov
xor
push
fs
pop
fs
or
xorl
fs
xor
dec
sbb
sub
adc
pop
mov
and
fwait
sbb
mov
lock
mov
xchg
pop
dec
fbstp
adc
andl
ret
or
insl
push
push
mov
xor
add
mov
subb
lret
out
sub
cmc
outsb
adc
jp
add
xchg
test
ja
pop
push
clc
xor
aas
mov
lock
js
mov
ficoml
inc
stc
inc
sub
jge
add
jl
xor
test
fwait
mov
pop
dec
inc
push
mov
out
jns
lcall
test
in
push
sbb
cmpsb
cmp
fnstcw
push
fbld
pushf
dec
imul
mov
in
jl
vmovss
add
ja
push
ret
rcll
adc
and
cld
cli
sbb
out
out
mov
inc
out
jmp
inc
fstps
pop
jmp
clc
sahf
rcll
pushf
dec
mov
test
movsb
lea
mov
lahf
std
xchg
sti
jo
std
mov
imul
lods
cld
mov
cmp
hlt
pusha
stos
xchg
int
sahf
lea
push
imul
out
and
cmp
and
daa
fwait
jae
cli
pop
in
cltd
test
push
ror
repz
into
mov
push
inc
mov
fwait
push
xchg
in
push
mov
mov
pop
mov
sub
movsl
cmp
lea
mov
dec
add
cmp
mov
shrb
jae
imul
mov
jne
pushf
mov
daa
xor
xchg
push
or
aad
mov
imul
sbb
lea
mov
add
mov
dec
lahf
les
dec
shr
loopne
lret
fstl
inc
pushl
std
xchg
addb
test
adc
insb
cmp
inc
iret
mov
ret
cmp
add
mov
ss
dec
loopne
cld
sbb
mov
push
imul
in
mov
or
shrb
sbb
xor
loop
popf
fstl
push
test
xacquire
stos
cmp
mov
test
and
rorb
pop
pushf
repnz
xchg
loopne
in
fisubl
dec
push
pop
imul
jg
xor
mov
hlt
lock
sbbl
cmc
stos
adc
vpaddd
jnp,pt
ja
clc
into
mov
lea
ljmp
sub
or
stos
enter
dec
inc
mov
sbb
mov
idivl
push
popa
insl
xor
jl
ficoms
pop
fwait
mov
xchg
sti
add
fisubrl
pusha
sti
mov
cmp
popa
inc
adc
push
fcoml
enter
stc
mov
xor
enter
sarl
cs
push
or
dec
es
daa
adcl
je
inc
inc
pusha
jecxz
mov
or
and
mov
sbb
adc
jnp
jge
mov
mov
push
jne
add
xchg
xlat
sti
pushf
pop
lret
pop
test
and
bound
mov
das
popa
pop
and
push
push
fucom
inc
cmc
out
push
cmc
add
outsl
adc
rol
add
mov
adc
and
xchg
add
and
pushf
addr16
pop
nop
inc
fwait
jmp
testb
outsb
sti
pop
cmp
or
psubusw
ja
push
int3
iret
mov
vpslld
pusha
sub
pop
outsb
xchg
jmp
out
enter
adc
loop
fsubrs
pop
adc
mov
xchg
into
pushf
pop
call
xchg
mov
enter
mov
adc
sti
lock
and
addr16
fadd
dec
jl
cltd
std
cmp
fwait
insb
inc
js
xor
loopne
ljmp
je
clc
pop
ja
lret
mov
daa
xchg
lea
push
push
or
or
fdivrs
fimuls
out
jecxz
pop
mov
xchg
cmp
jg
dec
mov
aaa
lods
mov
test
outsb
call
shlb
gs
xchg
mov
mov
fldcw
mov
jle
xchg
enter
or
ds
pushf
pop
sub
mov
mov
mov
xlat
pop
fisttpl
dec
repnz
dec
inc
aad
daa
push
aaa
movsl
inc
lahf
mov
jb
jo
or
dec
inc
imul
inc
icebp
and
mov
dec
adc
push
jecxz
rol
ja
pop
mov
and
xchg
filds
outsb
adc
lcall
dec
test
js
push
cmp
and
sbbb
cmp
mov
dec
div
fsub
lcall
jg
dec
rcrb
jmp
xchg
add
cmp
mov
sbb
mov
aam
outsb
pop
ss
ret
mov
stc
stos
xchg
xor
xchg
movsb
inc
jge
mov
mov
out
pop
mov
in
sub
scas
ret
pop
xor
dec
dec
cmp
repnz
push
dec
daa
gs
mov
iret
sbb
xchg
or
fwait
sahf
pop
loopne
xor
jecxz
call
jbe
shr
daa
xlat
push
xor
daa
xchg
push
movsl
push
cmp
sub
mov
sbb
inc
or
movsb
sub
cld
cwtl
hlt
call
repnz
addr16
sbb
adc
or
loopne
sub
popf
mov
ja
adc
cmc
jp
jecxz
pushfw
lahf
fwait
pop
jo
cmp
or
push
fs
add
push
mov
fsubl
movsb
or
sti
and
push
cmp
xchg
ret
movsb
in
and
or
add
insl
std
dec
jg
lds
fbld
fisubrl
xor
and
cmpsl
jl
xor
inc
in
jbe
icebp
pushf
dec
pop
lods
sahf
add
pop
sahf
rcrb
std
imul
push
das
mov
outsb
pushf
rcll
int
stos
jo
xchg
sbb
ja
sub
xchg
xchg
xor
call
enter
jbe
shll
pushf
mov
aaa
and
mov
in
jno
mov
jle
out
sub
mov
ljmp
sbb
or
loop
ja
mov
adc
mov
push
push
lods
xchg
or
imul
popa
dec
scas
cmp
xchg
stos
mov
jmp
sub
push
test
lea
jge
leave
jle
add
test
add
pushf
push
adc
push
test
cmp
andb
lods
cmp
jle
jns
loope
in
repz
mov
pop
aaa
adc
mov
or
or
mov
mov
pop
lahf
cli
mov
and
ffreep
test
mov
cwtl
lret
push
dec
addl
ret
fwait
xor
cmp
inc
xchg
xor
mov
sbb
adc
push
aas
lods
inc
and
push
pop
jl
push
call
pop
data16
dec
enter
pop
cmp
call
mov
fwait
pop
pop
cwtl
mov
xchg
mov
cmpsb
xor
mov
pop
pop
dec
push
push
repnz
sbb
mov
popa
or
cli
jmp
sbb
jns
outsl
cmc
adc
insl
arpl
and
lock
mov
movsbl
insl
adc
xchg
mov
insl
ret
xor
jmp
shll
hlt
jmp
push
push
inc
into
push
inc
in
test
rcl
lods
and
adc
mov
xchg
pop
movsb
mov
cmpsl
incb
testb
adc
dec
mov
lcall
clc
sbb
scas
loop
or
or
leave
loope
pop
dec
or
jno
das
jbe
xchg
stc
xchg
xor
imul
cmpb
pop
mov
fisttps
sahf
mov
inc
xor
mov
push
jae
lret
lret
ss
std
aad
gs
repz
adc
mov
jns
aas
sbb
add
cmpsb
test
inc
notl
scas
fists
les
xor
lock
or
mov
js
lea
push
inc
fucompp
push
mov
or
mov
sbb
sub
lcall
sbb
pushf
or
jg
jmp
in
sahf
mov
jecxz
and
dec
push
fs
enter
mov
and
mov
mov
xchg
sbb
nop
xchg
xor
mov
or
xchg
mov
sbb
aaa
push
sub
jno
and
imul
adc
mov
jecxz
jmp
mov
aaa
dec
fnstcw
pop
in
push
fcoms
imul
mov
insb
mov
dec
sub
js
lahf
xor
out
adc
pop
stos
call
into
inc
jmp
test
jo
sbb
mov
adc
pop
ds
mov
dec
mov
repnz
or
ja
xchg
jecxz
hlt
and
xchg
inc
adc
adc
pushf
shl
aas
jg
cmp
out
jns
ss
arpl
pop
lea
sub
fnstcw
push
sub
mov
iret
stc
lret
aad
mov
add
js
mov
fadds
and
mov
xchg
mov
inc
add
stc
sbb
jg
test
fstpt
stos
push
or
fildll
fiadds
imul
pop
and
cmp
push
lock
inc
imul
adc
xor
cmp
add
jo
adc
push
and
push
out
lcall
aaa
xor
xor
in
ja
xchg
adc
fiaddl
mov
adc
jmp
call
pop
das
add
fwait
stos
pop
jo
xchg
mov
xchg
aas
imul
jp
ss
rolb
lea
xor
lock
test
adc
push
fmull
outsl
add
jg
sbb
dec
scas
dec
push
hlt
imul
jno
popl
ret
fwait
or
pop
lods
and
rcrl
enter
icebp
clc
push
xchg
cmp
jp
or
push
nop
pop
dec
rorb
mov
pushf
or
fistpl
push
and
jb
sbb
rcrl
mov
or
cmp
push
ja
push
pop
pushf
jae
in
clc
fbld
pusha
divl
xchg
jl
cmpsb
pop
mov
mov
lock
out
aas
rcrb
jne
dec
dec
fadds
ficoml
daa
repz
mov
and
jae
cmp
mov
iret
int3
lods
xchg
ficompl
lds
sbb
and
ja
daa
pushf
imul
xchg
lds
loope
pop
mov
mov
sub
cmpsb
push
inc
xchg
psadbw
jg
mov
movl
ja
aaa
sub
dec
in
dec
shlb
push
movsb
mov
lock
hlt
ljmp
or
fsubl
imul
inc
test
jno
jo
test
inc
pop
add
mov
inc
aaa
push
sahf
test
push
push
jne
xor
add
fwait
sbb
inc
pop
js
mov
dec
pop
cltd
adc
mov
cmc
mov
pop
clc
xchg
inc
leave
cwtl
add
cmc
call
jmp
or
repnz
pop
es
push
push
mov
mov
jecxz
lock
fbstp
lahf
out
popf
pop
test
mov
cs
xchg
mov
lahf
movsl
sub
dec
inc
dec
mov
shrl
add
xchg
pushf
push
xor
xor
sti
inc
sub
insb
popf
push
jecxz
mov
cmpsb
dec
out
xor
add
sahf
or
dec
cld
or
std
imul
stos
push
bound
sbb
lcall
pop
xor
rorb
inc
push
mov
xchg
lds
out
movsb
lret
roll
loop
xchg
pop
ds
mov
dec
icebp
aaa
les
fmuls
mov
inc
mov
adc
addr16
scas
fs
sbb
cmp
pushf
les
jbe
rorl
test
push
pop
push
pop
rcll
xor
cmp
mov
mov
push
xor
xchg
add
push
xchg
jge
addr16
stos
fsubs
loop
cmp
popa
lahf
in
cmpb
inc
xchg
xor
mov
call
test
adc
lods
sbb
hlt
pusha
int3
jmp
jl
mov
fwait
dec
cwtl
aas
pop
and
dec
fsubrl
and
in
dec
lds
xchg
jno
xchg
adcb
sub
cltd
xlat
aas
sbb
dec
les
jb
js
gs
fiadds
mov
sub
jg
iret
je
out
xchg
inc
mov
mov
out
js
fldenv
jecxz
and
sbb
cld
push
rorb
out
subl
jecxz
or
divps
fldl
push
es
sub
jne
cs
fimull
outsl
sti
ret
das
sub
scas
test
stos
mov
js
mov
mov
iret
sbb
pop
sbb
inc
sahf
popf
imul
je
sub
popf
jno
aam
imul
imul
dec
clc
xchg
xchg
push
mov
sub
jmp
lret
xor
jne
adc
leave
xor
pop
nop
inc
push
or
mov
test
jp
adc
xor
lea
push
pop
push
add
in
scas
lret
mov
in
aad
xchg
cli
in
mov
xchg
jl
add
frstor
inc
xchg
lret
aam
mov
pusha
jo
push
cmc
pushf
and
dec
pop
in
rcrb
pop
sbb
adc
jmp
and
mov
lea
mov
push
add
fbstp
lds
pop
mov
fwait
ror
out
vpackuswb
mov
pop
frstpm(287
jo
mov
push
fwait
pop
dec
xor
push
adc
pop
out
mov
jbe
sbbl
iret
in
roll
imul
loopne
lret
xor
jge
cwtl
xchg
out
pushf
insl
in
mov
dec
adc
fwait
dec
pusha
xor
mov
xchg
imul
decl
sbbl
jb
push
scas
xor
jp
inc
rclb
xor
outsl
fistps
imul
lock
and
jno
fwait
stos
test
cmc
loope
sahf
gs
out
prefetchnta
int3
ljmp
mov
or
cwtl
mov
adc
dec
lret
jb
in
dec
adc
mov
push
mov
sbb
inc
cli
imul
into
or
cmp
aas
inc
gs
shr
cmp
pop
mov
pop
aaa
nop
mov
hlt
sub
pop
movsl
inc
xchg
stc
rclb
aas
push
loope
pop
add
cmp
mov
test
jecxz
adc
push
push
cmpl
adc
sarl
outsl
mov
mov
jns
js
enter
add
stc
imul
scas
repnz
lds
mov
push
jae
add
cmpsb
jb
cltd
mov
jbe
lods
jecxz
mov
push
push
loopne
in
inc
xlat
push
push
out
and
and
iret
arpl
enter
fmuls
lret
sub
vunpckhps
pop
jmp
or
cmp
call
xchg
pop
stos
xchg
enter
fists
pusha
mov
and
push
nop
lret
popa
insl
cmc
pop
jecxz
rcrl
fsts
leave
dec
pop
mov
pushf
cmp
ja
stc
scas
insl
dec
lahf
icebp
out
or
lods
pop
enter
mov
add
add
sti
lock
adc
lahf
mov
xor
jns
lret
rolb
imul
or
vmovupd
pushf
mov
filds
cmpsb
adc
and
push
stc
inc
loopne
jae
mov
cmp
jno
addl
lcall
not
js
sar
pop
add
lcall
ret
add
aam
or
inc
push
test
clc
out
mov
decb
push
mov
testl
mov
dec
shll
push
loope
sbb
repnz
sbb
mov
adc
jle
jg
jle
test
lock
mov
pushf
movsb
imul
or
mov
inc
out
int
popf
mov
rorl
mov
cmp
push
push
mov
test
xchg
push
mov
and
cmp
es
mov
pop
lahf
and
xchg
fwait
add
sub
cmc
andb
fcomps
cmp
adc
mov
mov
stos
sub
roll
dec
xchg
test
rorl
pushf
inc
jno
movb
out
imul
stc
cwtl
sbbb
ja
push
loope
inc
cli
in
mov
stc
data16
xor
scas
sti
into
dec
pop
in
pop
add
add
and
sbb
sub
add
les
arpl
xor
push
test
jns
inc
clc
inc
add
and
movsb
mov
pop
mov
test
cmp
adc
ja
mov
cmpsb
inc
jmp
inc
fisubl
insl
daa
fsubrl
into
lahf
xchg
aad
repz
addr16
into
and
pusha
push
mov
cmp
imul
lods
insl
cmpsb
addr16
xchg
insw
hlt
and
mov
jo
inc
or
fs
rcrb
add
jecxz
jo
xor
dec
inc
mov
sub
sub
pop
xchg
lret
mov
pushf
lods
dec
mov
mov
dec
sub
pop
push
xor
mov
push
inc
js
loope
push
std
cltd
dec
sti
mov
and
cmc
out
fisubl
or
dec
adc
mov
mov
or
mov
sub
cmp
popf
pop
lea
adc
fcmove
adc
cmp
subl
jns
sub
outsb
dec
mov
mov
incb
cmpb
ljmp
insl
les
ja
cwtl
shl
mov
aaa
cli
mov
adc
pop
ss
jle
movl
add
or
push
cmp
add
rorb
in
daa
dec
mov
inc
mov
les
mov
sub
sub
jo
dec
mov
enter
push
cltd
fwait
jecxz
pop
jno
mov
clc
test
lods
lahf
xchg
pop
inc
sbb
inc
inc
fnstcw
mov
push
fadds
fsubrs
xchg
fwait
xchg
in
in
jl
test
sbb
ret
sub
xor
dec
adc
pop
stc
jnp
jp
pop
push
fldenv
adc
into
mov
xchg
je
sbb
push
test
ja
in
xchg
pusha
mov
pop
bound
jns
sub
and
xor
je
inc
pop
mov
dec
pop
mov
mov
cmp
push
std
outsl
pop
cmpsb
dec
xchg
mov
push
and
leave
push
loope
mov
adc
sbb
mov
test
push
addr16
xchg
jne
pop
pop
mov
popa
inc
into
jns
or
or
popf
incb
push
clc
fs
push
sbb
lods
imul
addr16
pop
shrl
inc
sbb
push
in
mov
jae
sub
push
outsl
imul
push
leave
mov
out
shll
sub
ss
or
fwait
stos
sbb
test
pop
or
sub
add
xor
inc
push
andl
mov
roll
dec
pop
sub
jge
test
sbb
dec
out
fldt
ljmp
add
and
cmc
push
insb
cltd
add
pop
filds
orl
and
jno
cmpsl
stc
or
adc
ja
push
ja
rclb
push
or
out
push
lret
jo
mov
stc
popf
jnp
cmpb
push
mov
mov
cld
aas
js
fwait
insb
cli
into
dec
insl
ss
ds
inc
out
mov
dec
mov
jno
or
ja
pop
mov
cmpsb
shll
cmp
xor
clc
jp
subl
xchg
test
mov
push
ficomps
xor
or
push
cmp
dec
aas
add
push
or
push
out
inc
insb
jmp
and
jb
test
or
xchg
loop
notb
mov
pushf
xchg
mov
xchg
hlt
fwait
test
dec
mov
and
insb
mov
es
pop
mov
fnstcw
leave
fsub
mov
adc
dec
call
mov
xchg
pop
mov
dec
mov
pop
clc
and
test
jp
pop
pop
std
enter
clc
add
mov
mov
enter
or
arpl
in
mov
sub
inc
push
add
imul
add
xchg
sub
mov
mov
dec
mov
xchg
sbb
das
cmp
sub
pop
sub
inc
mov
inc
mov
inc
les
or
fistpll
leave
or
sub
mov
jecxz
data16
sub
xor
ljmp
rclb
xor
mov
mov
push
ja
cmpsb
add
xor
sbb
push
dec
lea
jecxz
addb
push
add
xor
push
xchg
push
push
adc
adc
and
lret
paddsw
push
mov
stc
fsubrl
js
out
mov
push
outsl
cld
fsubs
stos
lods
outsb
scas
stos
push
dec
push
xchg
stc
pushf
andb
and
dec
mov
dec
ss
pushf
popa
imul
pop
sbb
inc
addb
adc
pop
lahf
xlat
mov
rcrl
mov
arpl
leave
jns
cld
js
mov
lcall
lret
adc
and
out
daa
inc
sbbb
ljmp
jo
xor
hlt
xchg
xor
sub
push
imul
lock
es
imul
outsl
lahf
mov
rol
sarb
nop
lcall
add
stc
lock
insl
xchg
xor
fdivrs
xorb
jae,pn
add
pushf
int3
sahf
jg
add
push
pop
aam
dec
cmp
or
je
and
fldcw
cmpl
mov
mov
add
xor
cmpsb
andl
lea
into
lret
xadd
dec
jne
push
mov
pop
pop
mov
push
daa
add
xor
push
mov
mov
cltd
movsl
sbbl
mov
out
fwait
pop
mov
xchg
hlt
jecxz
jbe
shll
enter
outsb
mov
leave
aas
outsl
sbb
lcall
divb
mov
imul
pop
sub
lods
push
sbb
repnz
fmuls
rorb
push
mov
sbb
mov
jp
in
inc
xchg
ret
mov
inc
scas
pop
mov
iret
sub
mov
adc
in
mov
into
pop
mov
push
xchg
pop
out
cmp
out
sbb
mov
dec
push
stc
dec
add
aam
outsb
decb
pushf
add
insl
dec
in
lds
and
jns
mov
xchg
jb
and
or
aaa
add
mov
cwtl
mov
pop
fldcw
xchg
insb
daa
mov
cmp
push
mov
pop
mov
les
roll
sub
jp
dec
mov
mov
in
inc
mov
push
or
addr16
movsl
add
or
dec
or
push
pop
pop
scas
js
idivl
add
mov
jb
ja
add
fwait
addr16
xchg
imul
imul
and
inc
test
mov
or
jno
outsl
jecxz
call
cmp
push
mov
addr16
loopne
stc
pop
shrb
jecxz
jns
lret
xchg
std
or
sub
out
mov
push
enter
dec
add
mov
jp
jno
mov
pop
and
mov
imul
jmp
lods
addr16
xchg
popa
sti
in
or
sbb
rcr
mov
call
lea
movb
rorb
mov
adc
cmp
test
fistps
mov
add
xor
push
shlb
pushf
pushf
stos
pushf
mov
inc
repnz
and
or
pushf
fwait
daa
test
insl
lock
aas
out
aas
popf
fstpt
daa
lahf
cmp
lret
stc
dec
push
pop
lock
add
ja
cld
jmp
push
or
call
mov
sbb
xchg
daa
andl
push
cmp
sbb
sbbl
mov
and
les
scas
dec
je
sbb
add
mov
add
push
xchg
repnz
ss
mov
inc
add
mov
in
inc
lret
movsl
dec
ljmp
lods
sarl
and
loop
ds
lock
out
add
imul
sbb
nop
adc
ss
mov
jno
cmp
and
dec
sahf
insl
clc
adc
mov
in
mov
or
jg
mov
gs
iret
mov
imul
in
sahf
out
loope
jbe
imull
mov
sub
xchg
arpl
push
or
or
imul
fimuls
test
sbb
ds
jl
mov
rcrl
leave
cmp
cs
sbb
pushf
xchg
push
aas
cmp
sti
ja
adc
dec
mov
add
jns
mov
popl
rol
pop
test
leave
pop
data16
dec
sub
out
imul
rorl
xor
push
push
incl
lods
mov
scas
sbb
jl
gs
and
jle
sub
sub
jecxz
push
inc
cwtl
arpl
dec
addr16
xchg
mov
hlt
add
mov
or
repnz
outsb
mov
fwait
push
clc
addl
mov
leave
cmp
mov
add
mov
cmp
push
shll
mov
outsb
dec
sbb
adc
mov
out
lcall
push
cmp
push
dec
rorl
pop
mov
inc
mov
pop
fwait
popf
rorl
mov
cmc
xchg
mov
call
cs
jle
dec
imul
dec
andl
mov
mov
ja
dec
mov
mov
adc
lcall
pop
sub
inc
call
mov
test
adc
loope
fsubrl
shll
pusha
push
or
mov
or
adc
mov
fimull
adc
lods
call
xchg
pop
test
cmpsl
decb
int3
jg
pop
jno
inc
sbb
pop
insb
push
sldt
fbld
push
sub
rcrl
test
fcomps
and
push
rcll
incb
div
clc
mov
ss
leave
xchg
scas
pop
imull
lahf
jne
inc
sbb
add
mov
in
cld
mov
filds
andb
orb
add
xchg
dec
mov
das
loopne
insb
pop
into
and
add
jnp
mov
daa
cld
imul
mov
pop
imul
call
mov
dec
push
fwait
jecxz
inc
icebp
lret
gs
aaa
ja
inc
mov
push
jnp
je
and
dec
lock
push
dec
icebp
push
jbe
call
mov
pop
addr16
insl
bound
out
lods
xor
lds
mov
or
mov
mov
fwait
imul
inc
fs
fsubrs
int3
mov
sbb
loop
push
push
push
sbb
sbb
stos
insl
pop
in
daa
fld
jne
jno
addr16
add
pop
and
or
jnp
mov
and
adcb
dec
or
jmp
addb
mov
repz
js
stos
test
mov
mov
adc
rep
and
mov
inc
addb
sub
mov
popl
jecxz
stos
mov
mov
mov
mov
xor
push
mov
cwtl
push
push
or
xchg
adc
outsl
fidivl
addb
mov
bnd
insb
inc
shlb
das
mov
pop
lds
rolb
mov
mov
xor
xchg
ss
sub
sahf
out
mov
mov
lock
fidivl
loope
and
cmc
push
pusha
enter
mov
js
and
mov
mov
pushf
jmp
jo
adc
pop
push
mov
add
dec
sub
xchg
cwtl
xor
cmc
mov
push
pop
cmp
or
fucomip
push
add
or
xchg
pop
notl
cwtl
xchg
fwait
pop
or
fldt
jnp
psubw
sbb
sub
roll
or
add
test
and
or
fs
pushf
mov
fisubrl
test
mov
xor
jne
push
int3
imul
pmulhuw
sub
lcall
push
cltd
sbb
mov
clc
sbb
dec
or
dec
mov
pop
out
inc
pop
clc
ja
clc
inc
loope
cmp
mov
jg
mov
lods
popl
push
mov
mov
ret
xchg
mov
mov
adc
cmp
mov
jo
adcb
aad
fwait
fwait
mov
jg
sbb
dec
iret
add
insb
and
je
orb
jmp
lods
adc
sbbb
shlb
pushf
insl
mov
xchg
adc
aad
cmovne
rcrl
and
mov
callw
div
push
inc
mov
aaa
pop
push
ja
lahf
mov
cmp
mov
xchg
mov
mov
add
fs
push
xor
dec
and
mov
movsl
cmpsl
es
pusha
push
lods
fbld
andb
inc
sbb
jbe
aaa
xor
data16
jge
ret
dec
loopne
mov
les
pushf
sub
mov
cwtl
daa
or
pushf
std
adc
and
call
int
loope
stos
pop
add
lods
sub
fidivl
push
insb
jo
test
icebp
jne
lock
inc
pushf
leave
mov
dec
dec
mov
call
aad
out
loopne
jp
ror
fstps
sub
add
or
jnp
push
dec
add
cs
pop
xchg
jb
cmpl
or
nop
push
jnp
pop
rcll
xchg
fnstcw
repnz
push
push
sbb
xor
or
sbb
mov
push
jo
pushf
test
xchg
add
jno
adc
inc
adc
mov
pop
out
lock
adc
fnstcw
ret
add
fldl
adcl
push
jecxz
bound
cld
es
addb
sbbl
or
sahf
sbb
mov
mov
andl
in
mov
lods
jne
add
dec
pop
pushf
movsb
mov
rorb
fwait
push
inc
mov
rorb
dec
mov
mov
into
jecxz
jle
jae
pop
icebp
fwait
stos
dec
daa
imul
test
iret
adc
scas
mov
pop
jb
cmpsl
je
movsb
addr16
pop
test
xchg
sbb
mov
add
sub
mov
lret
sbb
mov
test
jle
test
lahf
fscale
aaa
inc
mov
test
sub
ds
or
insb
jg
push
mov
jmp
scas
sbb
add
mov
jo
adc
jmp
or
cmc
shlb
sbb
adc
xchg
mov
cmp
cmc
sbb
jecxz
xor
cltd
or
js
arpl
ret
das
call
xchg
popa
insl
repnz
xor
in
imul
dec
xchg
pop
pushf
stos
lahf
xorb
add
mov
lret
loop
dec
sbbl
in
ljmp
inc
adc
mov
out
xor
fwait
shll
inc
pop
add
bound
stc
pop
mov
in
out
test
add
adcl
insb
and
mov
jns
pop
das
dec
out
mov
xchg
or
jmp
test
stos
inc
xchg
gs
nop
dec
orb
enter
bound
lret
mov
cmp
mov
mov
aas
pop
inc
mov
out
pop
inc
movsl
push
je
mov
in
adc
xorl
cmc
push
fcompl
jae
jb
ds
stc
jge
imul
push
stos
jg
mov
imul
pushf
int
push
enter
or
cs
daa
rcr
fsubrl
inc
and
andl
call
loope
and
jmp
enter
arpl
out
pop
mov
mov
jg
icebp
and
sbbl
adc
inc
fidivl
stos
xor
out
add
jbe
adc
mov
or
shll
fsubs
mov
dec
rcr
and
lahf
or
jb
mov
mov
cmpsl
shlb
mov
cmp
shll
out
mov
dec
push
xor
addr16
pop
fdivr
jecxz
fwait
ret
mov
mov
xchg
popa
inc
cmp
lahf
mov
fdiv
mov
jae
leave
adc
gs
mov
push
lea
cmc
xor
xchg
and
icebp
mov
mov
cs
xchg
push
mov
out
arpl
or
sbb
loopne
mov
test
repz
in
inc
imul
sub
dec
pop
lret
out
add
xor
rorb
sahf
inc
int3
cmp
mov
mov
jl
inc
inc
inc
in
inc
leave
fisttpl
fsubs
sbb
addr16
adc
lea
and
ja
fsubl
and
add
and
repz
dec
xlat
sti
imul
pusha
lock
repz
xchg
je
mov
pushf
fsubl
imul
lret
jb
dec
iret
xor
inc
mov
rcrl
inc
mov
lds
add
push
notl
jns
pop
into
sbb
sbb
jo
enter
mov
mov
adc
add
pop
pop
push
ja
iret
mov
dec
adc
call
int
lahf
mov
shrl
mov
out
dec
mov
and
cwtl
shl
imul
mov
or
lea
pop
aaa
in
ficomps
cmp
les
cmp
mov
insl
fs
std
mov
sbbb
jge
ja
addr16
fwait
lcall
insl
sub
fisubrl
xlat
mov
clc
ja
pushf
popf
pushf
mov
sub
or
mov
xorl
stc
lds
leave
cmpsb
and
pop
stos
dec
mov
call
scas
dec
aas
mov
icebp
xchg
lea
fldcw
jae
pop
enter
or
pop
dec
pusha
fbld
inc
pop
mov
test
sbb
test
xchg
lock
mov
add
dec
or
mov
push
in
xchg
cmpsl
rcrl
push
test
popa
out
fstl
push
lret
lods
dec
ret
test
gs
sbb
daa
scas
xchg
fbstp
fidivrl
mov
loopne
and
add
lret
rcrl
mov
sti
test
xchg
mov
or
dec
in
movsl
notl
mul
mov
shlb
ja
dec
pop
addb
pop
test
xor
push
lret
fwait
and
mov
lcall
cwtl
repnz
push
std
sbb
ljmp
addb
aam
stc
sub
adc
stos
roll
in
push
sbb
test
and
fs
dec
push
jb
and
sar
call
xchg
notb
cltd
mov
adcb
mov
mov
jmp
pushf
insl
notb
add
jg
push
sahf
mov
mov
sub
test
movsb
hlt
inc
sub
es
push
inc
lds
inc
imul
xor
decl
dec
cmc
ss
into
pop
dec
adc
lea
lods
push
push
mov
and
dec
call
addl
sbb
push
dec
mov
cmp
aas
gs
jle
test
sbb
mov
lahf
ret
push
loope
test
add
xchg
push
xchg
mov
loope
pusha
inc
jmp
inc
inc
add
pop
jecxz
fwait
sub
jecxz
icebp
sub
dec
xchg
mov
push
aad
mov
jp
dec
sub
popa
mov
adc
test
fwait
xchg
jle
lcall
inc
xchg
ljmp
loopne
outsl
mov
mov
lret
pop
or
lods
les
mov
pop
bound
dec
sbb
ret
mov
stos
push
xlat
mov
jg
mov
into
adc
push
stc
outsl
pop
mov
mov
or
iret
adc
into
and
in
add
cmp
lods
mov
cmc
out
mov
test
pop
scas
loope
fimull
loope
and
les
mov
sahf
inc
shrb
loope
movsb
out
mov
pop
lods
xchg
mov
pushf
jp
iret
lret
xlat
lcall
cmpsl
push
xchg
mov
xlat
loop
das
pushf
dec
sub
mov
cmp
out
mov
call
mov
sti
sub
xchg
and
cmpsb
adc
cmp
push
mov
orl
sub
dec
lcall
sbb
adc
dec
and
aaa
jle
in
inc
push
incb
jp
inc
icebp
fmul
dec
inc
mov
cmc
repz
in
or
hlt
arpl
or
popf
imul
fcos
negb
cltd
push
std
mov
fidivl
movsb
fcomps
sbb
and
xchg
pushf
repnz
and
fnstcw
mov
adcb
cmp
sub
test
insb
push
loopne
aaa
lret
call
mov
push
dec
push
fwait
inc
dec
cmp
cmpsl
mov
mov
mov
jmp
rorb
inc
mov
pop
add
xor
lea
orl
inc
sbb
pop
mov
inc
mov
adc
pop
enter
movsl
ficoms
aaa
add
iret
dec
xchg
fsubs
mov
aas
into
pop
icebp
mov
cmp
stos
test
xchg
adc
pop
imul
arpl
leave
in
pusha
clc
pop
movsb
cmp
jne
jge
sahf
dec
add
inc
xchg
push
ret
imul
call
scas
jg
addr16
adc
idivb
or
and
shr
or
pop
imul
loope
cmp
jae
in
enter
bound
push
add
mov
mov
adc
adc
adcb
jecxz
jns
icebp
lret
cs
rolb
pop
lock
ficoml
test
fdiv
or
mov
hlt
dec
test
test
or
inc
out
jns
adc
rclb
test
popa
push
cwtl
dec
loope
inc
or
in
xchg
test
jg
mov
addl
mov
lea
add
fistpll
inc
mov
imul
rcll
cvtps2pd
sub
mov
lret
mov
rcll
aas
loopne
fcoms
out
mov
sbbl
rclb
mov
sub
jne
test
lock
sub
les
jne
sbb
mov
lds
dec
inc
dec
fwait
sbb
xor
xchg
rep
dec
mov
enter
lcall
add
sbb
dec
lcall
jne
mov
jmp
in
rorb
inc
inc
sbb
fs
mov
pop
inc
sub
test
jns
sarl
ret
mov
lea
lds
and
cwtl
das
icebp
inc
rcrl
cmc
mov
insb
aad
mov
jmp
ja
and
aad
jnp
push
push
xlat
push
mov
jecxz
orl
push
rcrb
sub
ret
inc
mov
mov
sbb
js
mov
test
cmp
jecxz
mov
lock
fists
or
sbb
in
jns
testl
rorb
lods
xor
jle
out
pop
jecxz
lret
lods
inc
jmp
pop
sub
mov
lock
sbb
xchg
lods
imul
push
cld
jecxz
imul
pop
mov
push
push
jle
sub
clc
dec
pop
test
out
mov
push
daa
shl
add
je
imul
enter
lds
repz
add
xchg
mov
mov
cld
xchg
aaa
lret
mov
je
imul
sar
or
xchg
lahf
icebp
and
xlat
jnp
ficomps
add
stos
pop
cmp
testl
inc
and
lods
jne
and
movsb
mov
and
lock
push
sub
arpl
and
test
jecxz
xchg
clc
adc
mov
cmpsb
cwtl
lods
fsub
sbb
mov
and
lret
out
pop
push
push
stos
push
cltd
push
stc
xchg
in
rol
repnz
fsubr
mov
and
dec
frstor
and
sub
sub
cmp
testl
nop
fcomps
push
inc
jns
xor
clc
sbb
mov
les
rol
push
paddd
aas
push
bound
cmc
mov
xlat
inc
mov
leave
mov
push
or
mov
adc
mov
out
pushf
dec
outsb
sahf
lock
lret
jmp
add
mov
inc
xor
loopne
lahf
mov
fwait
roll
arpl
mov
ret
lret
xchg
or
cmp
mov
mov
pushf
lcall
push
sahf
std
insb
jg
jno
test
test
sub
mov
pop
mov
imul
cmp
cmpsb
in
push
insl
dec
mov
xchg
testl
or
fwait
sub
push
push
insl
mov
jmp
jmp
frstor
js
dec
pop
incb
mov
leave
andb
fldl
in
inc
cmpsb
loop
xchg
jae
push
cmp
push
mov
int
xor
dec
sbb
pop
push
nop
jb
test
xchg
out
xchg
test
jecxz
or
add
inc
fs
jae
jp
gs
in
or
pop
adcb
dec
aad
jb
jo
mov
subb
and
mov
popa
or
sbb
sub
mov
cmc
mov
cmpsl
cmpsl
push
ja
jo
inc
fstl
xrelease
imul
test
inc
sahf
in
jb
jno
test
mov
ja
push
push
movsl
dec
jbe
cmpsl
jae
jl
and
or
xchg
push
mov
sti
xchg
push
stos
popf
and
pop
mov
xchg
add
adc
jb
xchg
mov
and
imul
push
and
cmp
fstpl
test
mov
rcrl
cwtl
imul
or
addl
out
add
jmp
jmp
sbb
js
mov
dec
and
sub
xchg
add
pusha
jl
or
mov
inc
push
sbbb
test
cltd
mov
adc
in
aad
lods
mov
jg
sub
xchg
mov
std
cwtl
mov
ja
test
add
out
js
out
cmpsl
rorl
data16
sbb
sub
mov
sbb
mov
jp
sub
lods
pop
xchg
or
xchg
push
pop
inc
mov
ljmp
lahf
xchg
xorb
sbbb
push
sbb
jg
pop
and
stos
data16
js
pop
stos
mov
cwtl
jl
dec
inc
cli
add
cwtl
sub
in
outsl
andb
push
pop
je
mov
orl
push
cmp
mov
mov
jo
mov
add
or
test
adc
imul
cmp
pop
leave
and
scas
test
hlt
xchg
push
mov
jle
imul
jl
inc
or
popf
mov
push
mov
jo
mov
and
test
cmpb
push
inc
add
fistl
ja
js
scas
dec
jb
xor
jecxz
andl
xchg
pop
test
mov
dec
dec
insl
imul
inc
js
jbe
push
and
outsb
push
mov
fistl
dec
dec
das
test
test
xchg
leave
mov
mov
pop
push
mov
sbb
jne
pushf
jb
xchg
lret
push
mov
jmp
cwtl
subl
xchg
out
dec
in
out
cwtl
sbb
lds
cwtl
sbb
cwtl
or
movsb
cli
xchg
dec
in
icebp
sub
sub
mov
cli
dec
repnz
pushf
test
in
test
adc
mov
dec
outsl
push
insb
mov
dec
jg
mov
push
xor
adc
aas
xchg
sbb
lods
and
in
inc
popf
adc
cmp
push
mov
push
mov
pop
pshufw
in
pop
mov
add
push
call
cwtl
push
xchg
nop
mov
xchg
mov
sub
pop
dec
cwtl
rcll
jb
dec
pop
dec
push
cwtl
dec
subb
test
popa
test
mov
outsw
dec
mov
sahf
cmp
std
jle
jmp
dec
xchg
into
dec
xchg
sti
sub
push
inc
cltd
inc
push
popa
sbb
sub
inc
xchg
adc
mov
gs
jnp
lods
add
data16
jmp
dec
imul
andl
sbb
ret
mov
push
push
xchg
push
and
fidivrs
out
pop
fwait
dec
xchg
mov
out
jb
andl
pop
xchg
xchg
sub
into
and
addl
ja
mov
cmp
ficomps
andl
sbb
sub
test
jb
push
inc
adc
adc
cwtl
jno
loope
call
inc
mov
sti
mov
jb
test
mov
sub
jecxz
or
xchg
xor
fldt
mov
and
sbb
jp
pop
adc
jb
jle
test
ret
cli
inc
lea
js
adc
orl
sub
or
xchg
add
jl
pop
test
jne
jne
xchg
sbb
clc
push
movsb
jae
or
pushf
mov
in
scas
imul
fwait
xor
call
adc
js
push
push
movl
dec
or
fcom
jle
setg
jmp
mov
mov
mov
ss
fmul
sbbb
dec
addr16
not
push
or
rorb
test
pushf
mov
xchg
insb
mov
sbb
sbb
push
mov
arpl
aad
xchg
cs
jp
shll
sbb
movsb
out
insb
dec
lcall
jmp
mov
imul
fs
sarb
xchg
adc
jge
movl
bound
leave
jmp
sbb
jle
out
inc
cld
xchg
jl
imul
ja
or
cmp
adc
bound
dec
sub
xor
push
cmpsl
lea
pop
inc
jl
cli
pop
dec
jg
retw
imul
lahf
nop
sbbb
pop
and
pop
loope
pusha
push
and
mov
ret
pop
dec
jne
int
test
dec
out
adc
inc
xchg
aaa
addl
sbb
lret
dec
popf
insl
jle
lahf
xchg
stos
sbbb
scas
inc
xchg
mov
sbbb
insb
pushf
addl
xorb
add
ret
clc
cmp
sarb
or
adc
xchg
test
mov
add
xchg
mov
lahf
ss
scas
rcrl
rorb
inc
testb
cld
dec
add
mov
cwtl
jg
cwtl
jnp
loope
or
pushf
add
add
lahf
add
js
shll
push
addl
test
out
sahf
sbb
jo
gs
test
dec
insl
jmp
dec
inc
jae
mov
icebp
cmpl
adc
iret
xor
inc
andb
daa
and
xchg
or
aad
mov
or
lods
xchg
dec
xchg
loopne
outsb
sub
or
lods
dec
icebp
xchg
push
push
xchg
dec
rolb
mov
pop
popf
popl
add
scas
pop
push
nop
sub
lds
cwtl
in
adc
addr16
sub
sbb
or
push
pusha
aaa
leave
xchg
xchg
and
test
pop
pop
dec
lcall
push
pop
psraw
fstpl
add
roll
je
and
xor
cwtl
jnp
jo
sub
cwtl
lret
lahf
or
jbe
mov
invd
js
fdivl
dec
int
push
mov
lods
sub
fildll
outsb
imul
or
pop
xchg
mov
push
bswap
jns
xchg
arpl
push
dec
mov
loope
dec
mov
adc
incl
and
or
jg
loope
mov
adc
outsl
xchg
xchg
mov
ss
xor
jbe
xchg
sbb
and
dec
inc
out
and
pop
iret
lahf
xchg
stos
sbb
xorl
movsl
roll
fs
subl
cmp
pop
or
icebp
mov
cltd
mov
cmpsl
int3
jge
or
stos
ja
sbb
dec
cmp
sbb
test
dec
and
dec
sub
lds
push
adcb
sub
adc
mov
popa
or
movsb
sub
cmp
sub
inc
fiadds
dec
je
xor
jns
outsl
pushf
sahf
xchg
test
jnp
dec
mov
xor
mov
notb
jo
sti
stos
dec
jns
rcr
loopne
dec
pusha
aam
sbb
int
inc
mov
jo
lea
lret
adc
lds
sbbb
jae
jge
lods
orb
push
cmpl
sbbb
add
add
cmp
or
add
and
test
lcall
cmpl
fisttpl
pop
imul
shl
add
out
std
push
adc
add
repnz
pop
push
sbb
xchg
mov
jg
xchg
jp
nop
decb
orb
jmp
sbb
daa
pop
incb
notl
xchg
and
cwtl
mov
xor
ret
aas
rolb
ret
push
jbe
push
imul
clc
xlat
mov
fisttpl
out
testl
jb
xchg
loop
sbb
sbb
sahf
fldenv
lret
cwtl
push
mov
negb
int
sbb
jp
popf
inc
mov
sbb
hlt
in
jb
mov
sbb
test
in
and
xchg
fdivrs
xor
cs
and
call
addb
fadds
xchg
fisubs
adc
pop
loop
insb
or
scas
mov
lcall
xlat
cmc
cltd
jo
or
adc
sub
jnp
or
inc
lea
sbbb
loopne
mov
pop
pop
inc
imul
or
addl
adc
lret
les
inc
movsb
cmp
or
or
or
push
insl
xchg
mov
cwtl
add
pusha
cmpsb
jno
dec
shll
imul
gs
out
imul
icebp
push
adc
xchg
bound
mov
add
cmpl
push
jo
inc
xor
inc
adcb
pop
inc
movsl
test
push
mov
inc
aad
xchg
cltd
or
push
mov
adcb
pop
push
insb
dec
rcll
test
sub
bound
sbbb
inc
enter
ret
push
mov
jecxz
mov
cmp
popf
int3
aad
cwtl
cmp
clc
subb
movsl
cwtl
xchg
hlt
flds
cwtl
pop
jo
cmpl
mov
inc
outsb
punpcklbw
jmp
jge
sub
addr16
test
mov
js
cwtl
jle
or
sbb
insl
pop
dec
add
inc
cmp
cmpsl
mov
pop
dec
rol
xchg
sbb
outsl
jo
and
jp
and
mov
and
sti
pushf
mov
cwtl
aam
cwtl
jns
daa
shll
sbb
mov
and
mov
fdiv
mov
das
out
mov
cld
sbb
or
mov
adc
and
sti
push
fwait
mov
add
rolb
jo
mov
repnz
xor
sub
insb
xchg
inc
push
mov
sub
cmp
lahf
popa
shlb
sbb
push
fisubl
xorl
sbb
insb
mov
jbe
gs
xchg
jo
in
sub
push
popa
or
xchg
cld
sar
xchg
sbb
cmp
push
lods
or
or
test
insb
leave
mov
test
fists
je
xchg
jne
insl
inc
mov
lcall
mov
sbbb
test
jge
test
adc
xchg
test
adc
mov
insl
or
cld
xchg
xchg
out
out
push
sahf
jmp
test
jle
outsl
or
daa
jmp
and
mov
mov
jnp
push
inc
lret
adc
cwtl
and
xchg
pushf
aad
test
and
outsl
pop
mov
jle
pop
sahf
scas
pop
push
xor
fcomps
add
repz
xor
inc
mov
dec
movsb
sti
xchg
pop
mov
test
mov
cmpl
push
pop
sub
loope
mov
mov
pop
inc
nop
jle
cmp
mov
cwtl
jle
jb
dec
pop
jnp
enter
fmull
jns
cmpsl
popa
jo
adc
xchg
push
dec
hlt
jb
dec
mov
mov
clc
test
mov
cwtl
imul
test
sbb
xchg
pop
inc
stc
push
cwtl
xor
int
pop
daa
test
mov
xchg
insb
test
sahf
add
jle
loop
fidivs
jbe
adc
pushf
adc
clc
or
rolb
and
add
add
dec
pusha
inc
lret
int
xchg
aaa
and
mov
pop
cmpl
sbb
or
mov
mov
inc
or
mov
cwtl
jae
xchg
inc
jne
or
mov
test
jae
inc
add
jno
decl
mov
popa
push
out
mov
jp
mov
incb
mov
lds
push
ret
pop
mov
and
test
lock
or
mov
shll
or
nop
dec
flds
push
mov
or
and
pop
divl
dec
mov
push
out
lahf
xor
je
push
in
bound
jge
out
xchg
dec
aad
xchg
popa
sub
pushf
movsb
jl
mov
cmpb
and
jo
push
adc
nop
data16
ds
mov
push
jecxz
out
mov
insb
cmpsl
push
clc
jne
shr
decb
cmp
sbb
push
or
in
or
mov
je
pop
sahf
daa
pop
cwtl
or
subb
bound
sub
daa
push
pop
dec
es
orb
mov
add
test
test
xor
subb
stos
outsl
dec
xchg
aas
xchg
push
fiaddl
test
cwtl
dec
xor
jns
cwtl
xor
ja
inc
sbb
jno
mov
das
test
fiaddl
cmp
jbe
cli
add
jge
pop
xor
xorb
rclb
data16
sub
cmp
mov
test
roll
popf
or
cwtl
movsl
int
pop
sbb
jno
outsb
inc
test
dec
rcrb
test
ficomps
push
nop
sbb
imul
mov
sbbb
jle
popa
sbbl
out
jle
into
inc
sbb
or
fs
xchg
or
push
dec
jmp
in
js
dec
lods
popa
cmpsl
or
fiadds
fcomps
jnp
push
bound
mov
mov
popl
imul
dec
push
xchg
pop
cs
cmp
cmp
cmpsl
jne
insl
es
inc
mov
xchg
mov
cwtl
clc
subb
mov
dec
push
or
test
sub
icebp
jo
or
je
mov
xchg
test
or
orl
jle
sbb
xchg
mov
test
xchg
mov
in
jne
daa
cwtl
ret
test
ljmp
popa
outsl
mov
icebp
or
jmp
mov
xchg
aam
jl
inc
cmpsl
stos
into
lret
jno
mov
ffreep
mov
or
push
adc
mov
mov
mov
lods
jl
cwtl
and
insl
sub
in
jle
popf
add
fwait
mov
cwtl
shrb
jle
lods
cwtl
bound
cld
cli
mov
xchg
pop
shr
push
xchg
jb
test
push
cld
adc
and
lahf
add
sbb
jg
push
icebp
inc
adc
packuswb
dec
inc
mov
imulb
push
in
je
cmp
mov
push
inc
add
xchg
sbb
sbb
mov
jl
out
test
inc
enter
notl
loopne
add
sahf
mov
lea
jno
mov
inc
mov
and
pushf
sbb
xchg
or
mov
js
dec
sbb
test
cwtl
jp
daa
pop
mov
pop
mov
push
test
pop
add
test
cmp
or
mov
jns
test
xorb
cwtl
inc
xorb
shlb
leave
shl
adcl
lret
push
cli
mov
ret
lcall
xchg
cmp
in
push
fsubrp
cmpsb
lea
movb
sbb
mov
mov
adc
das
jb
in
das
mov
insb
push
sbb
in
cmp
test
jmp
inc
in
stos
or
cmp
rcl
push
mov
sarb
imul
ret
int
loope
cmp
mov
enter
fstpl
cmp
sbb
inc
mov
in
cmpsl
or
mov
mov
sub
xchg
inc
loope
add
movsb
fists
adc
inc
subl
lock
mov
pop
xchg
xor
pop
cmp
mov
and
push
out
std
addr16
imul
inc
xor
xorb
xchg
adc
sarl
or
scas
rol
and
push
test
in
stc
sbbl
push
dec
clc
inc
int
sub
test
fisubrl
dec
enter
mov
pusha
aaa
cmp
add
imul
jbe
test
push
mov
gs
and
test
aas
hlt
sub
mov
lock
out
fcoml
pop
sub
xor
mov
push
xor
add
arpl
add
jl
pop
lcall
and
mov
mov
push
inc
xchg
xchg
and
sub
imul
iret
pop
dec
jne
jecxz
dec
add
sub
ficompl
xor
or
or
outsl
mov
aam
imul
cmpsl
add
fistps
xchg
xorb
cmpsb
pop
lahf
push
jg
out
insl
imul
notl
stos
mov
addl
push
imul
mov
mov
stc
lcall
cltd
mov
sbb
cmp
xchg
dec
add
mov
popa
xchg
dec
jb
xrelease
ffree
andb
pop
jae
push
loope
xchg
pop
jmp
jne
push
test
mov
rorl
push
mov
mov
xchg
pop
push
push
lcall
sbb
push
mov
shlw
xchg
jns
test
dec
addr16
mov
addl
push
inc
frstor
add
sarl
jle
cltd
dec
push
push
lret
inc
bound
in
cmc
or
popa
lret
xchg
sbb
jmp
dec
imul
cmp
fcoml
cwtl
pop
mov
faddl
jbe
mov
stos
ja
lock
and
xchg
sahf
jbe
lods
enter
jns
js
xchg
sbb
jecxz
jne
stc
dec
cmp
push
mov
cmp
mov
add
sub
decl
jmp
jbe
xlat
cld
lds
add
jmp
jno
or
xchg
or
cltd
adc
insl
mov
inc
ja
cmp
aad
inc
push
test
sahf
into
fisubrl
mov
jmp
fimuls
aad
mov
mov
movsl
subl
out
subb
xor
or
jae
shrb
pop
loope
sbb
pop
inc
pop
js
out
enter
cmc
mov
scas
imul
pop
mov
and
add
fcoml
repz
dec
and
dec
mov
or
xchg
loopne
xchg
mov
cs
mov
cmp
gs
mov
ds
nop
je
pushf
xor
lret
dec
add
pop
dec
xor
and
lock
imul
ja
mov
fiaddl
dec
push
add
test
test
sbbb
fwait
addr16
add
ja
mov
mov
mov
daa
dec
add
xchg
fisttps
fwait
mov
pop
or
lahf
adc
fwait
inc
shlb
push
iret
pop
inc
push
xor
mov
movsb
or
xor
pop
cld
cmp
daa
adc
mov
test
ds
bound
pushf
mov
loopne
cmp
shll
rolb
mov
inc
fcomip
pushf
jmp
mov
mov
mov
in
lock
rorb
lods
insb
hlt
pop
rorb
aam
test
in
hlt
dec
xchg
xor
sbb
sub
pop
enter
loop
or
call
pop
pop
inc
orb
add
imul
ds
in
leave
stc
sbb
and
imul
sarb
pop
rcr
xchg
ret
shll
mov
je
mov
out
ficoml
lea
ret
das
sbb
or
rcl
adc
cmp
leave
das
sbb
pop
adc
mov
test
fildll
sahf
ja
inc
stc
mov
test
jne
subb
mov
jp
dec
jl
add
clc
cmp
in
cmp
cmpsl
push
inc
pop
xor
test
les
pop
hlt
in
push
imul
sti
pop
mov
pop
movlps
rol
lock
xchg
cmc
test
pop
lock
mov
jbe
mov
add
xor
mov
test
std
sarb
aam
push
mov
jp
sarl
push
les
fwait
jp
sub
mov
insb
pushf
inc
cmp
sbb
pop
add
ljmp
addl
mov
test
or
fwait
sub
shll
addb
mov
leave
nop
xor
xchg
mov
lods
sbb
clc
into
arpl
pop
lods
sbb
cmp
rorl
lcall
xor
jb
daa
pushf
lcall
dec
mov
mov
sti
cld
jge
iret
add
jb
pop
and
imul
sbb
iret
dec
addl
pop
pusha
xor
fs
push
push
inc
lods
loop
jb
inc
ret
fistps
lret
push
and
pop
cmp
push
incb
mov
in
test
jl
mov
cmp
lds
jmp
jecxz
ret
ret
addl
arpl
incb
addr16
test
pop
cmc
or
lahf
mov
testl
fidivs
aam
sbb
sbb
inc
fists
pop
roll
dec
flds
mov
lds
daa
jp
enter
dec
dec
pushf
push
call
test
test
xor
mov
add
sbb
xchg
daa
mov
jecxz
cmp
pop
scas
mov
or
or
cwtl
dec
or
dec
mov
jecxz
push
sbb
int
cs
stos
and
add
out
dec
add
test
jg
adc
mov
dec
fwait
push
int
add
cmp
nop
or
rcl
dec
divl
cmpsb
aas
hlt
fxch
fwait
rcrl
mov
or
ss
dec
inc
imul
mov
mov
shrb
or
frstor
sub
pop
cwtl
lock
fprem1
mov
mov
outsb
cld
push
push
cmp
push
arpl
sub
gs
cmpsb
jbe
xor
cmpsl
cmp
sbbb
mov
lahf
movsb
popa
out
call
mov
xlat
dec
cmpl
cli
notl
js
gs
cwtl
lret
repnz
xor
test
jecxz
adc
dec
mov
push
out
in
fcmovne
fstpt
xor
dec
bound
cmp
js
adc
sub
insb
enter
lret
outsb
in
push
aas
jb
int3
mov
ja
stos
mov
mov
bound
sbb
xor
jns
es
into
inc
jl
mov
pop
fildl
std
and
imul
jno
stos
mov
mov
xlat
mov
pop
jnp
movsl
or
and
sarl
pop
and
xor
pop
js
fwait
icebp
sub
sti
test
sub
flds
lret
imul
cmc
mov
out
lret
or
fadd
xor
sub
ss
popa
loopne
or
dec
fwait
daa
bnd
mov
mov
cmp
cmp
test
xor
inc
cmpsb
push
ja
jo
xor
ffreep
idivl
and
out
sbb
jno
pushf
aaa
testb
and
mov
mov
jl
in
xchg
sbb
adcb
xchg
mov
cs
add
mov
jae
arpl
stc
int
roll
inc
pop
sub
jo
pop
or
rolb
adc
inc
xor
mov
addr16
mov
rolb
aas
push
dec
pop
test
and
sub
fisubrs
jle
push
push
adc
cwtl
icebp
and
add
lcall
test
cs
test
fwait
into
lods
movsl
push
and
mov
ja
or
push
decb
push
mov
add
vpand
shrb
rorl
je
sub
or
popf
lock
push
insl
scas
xchg
or
and
or
cmpsb
mov
mov
add
sbb
stos
les
lcall
pop
into
jmp
aam
lcall
cmpsb
sahf
sub
dec
imul
pop
pop
js
pop
dec
and
popf
lahf
inc
cmp
ss
hlt
iret
inc
xchg
sbb
or
fistpl
shll
pop
mov
adc
push
jae
les
jo
rcr
lahf
jae
out
fcomps
mov
addr16
hlt
jne
mov
and
repz
test
cld
shl
stos
dec
inc
lock
ret
sbb
lods
leave
or
push
aad
jp
or
lock
mov
imul
subl
imul
call
jle
and
pusha
sbbb
push
sbb
pushf
mov
icebp
and
mov
imul
les
push
dec
and
outsl
mov
loopne
mov
sub
jno
out
cmp
fidivs
mov
mov
adc
inc
mov
inc
pop
aaa
loope
clc
imul
mov
pushf
lea
inc
mov
jae
mov
je
or
lcall
sbb
or
in
inc
jnp
aam
push
push
lcall
pop
dec
xchg
repz
movsb
and
sub
mov
xchg
cmp
jo
decl
xchg
ljmp
and
dec
jg
test
pop
int
lcall
clc
xor
jp
or
mov
stos
mov
lock
push
mov
ds
sarb
lcall
mov
rcrl
arpl
mov
or
jmp
fs
iret
push
or
jb
mov
cmp
movsb
outsl
cmp
inc
mov
imul
imul
test
add
push
jmp
push
hlt
pop
jnp
sbb
mov
shll
movsl
push
pop
sub
and
and
mov
test
loopne
jmp
pop
sub
enter
sbb
gs
adc
movsl
popf
add
call
mov
jno
fimull
div
lret
stos
rcl
add
jecxz
fistpl
push
pusha
mov
in
and
int3
pop
push
push
out
xchg
fldcw
sub
mov
add
out
test
outsl
in
mov
xchg
hlt
lds
pushf
imul
popf
sub
pushf
push
cmp
mov
test
inc
fldcw
jns
imul
sbb
sar
lahf
icebp
pop
stos
aas
aas
mov
pop
mov
cmp
vpavgw
test
push
push
ret
adc
cmpsl
xor
out
jmp
pop
adc
push
test
fwait
xchg
xchg
inc
jge
jecxz
cld
imul
jmp
adc
imul
xchg
mov
ja
sahf
jno
jnp
ficomps
xchg
sbb
jb
mov
dec
mov
xchg
add
or
dec
dec
movsl
mov
jbe
jns
cmpsl
pop
popf
cmp
icebp
andb
in
push
fnstsw
push
mov
sub
lock
cmpb
jns
fdivrs
js
mov
out
push
inc
inc
sbb
cmp
cltd
push
lret
mov
mov
jecxz
in
jo
mov
hlt
imul
rclb
or
shrl
push
inc
xor
push
pop
push
adc
pop
repz
pop
jne
cmp
sbb
andl
fmul
daa
lahf
mov
dec
jne
sub
cltd
inc
inc
mov
jnp
add
mov
test
push
andb
jns
cmpsl
cmp
mov
jp
pushf
cmc
int3
aas
and
cmpsl
or
dec
outsl
out
pop
adc
pop
add
inc
ror
cltd
mov
in
mov
pushf
lock
pop
scas
xor
and
cmp
out
dec
push
jge
sub
js
xor
sbb
sbb
iret
mov
lods
add
inc
add
das
fcompl
pop
cwtl
jl
adc
out
pop
xchg
add
dec
jmp
inc
vmptrld
mov
xor
cmp
fstps
xor
push
out
sbb
xor
in
arpl
scas
jle
and
cmp
xor
aam
les
hlt
push
sbb
mov
sub
mov
dec
inc
fstps
jp
pop
dec
rcll
xorl
repnz
cld
imul
rclb
pusha
xor
push
in
add
sbb
and
jns
dec
sbb
les
or
jb
inc
leave
lds
push
pushf
mov
sub
arpl
jmp
jecxz
add
rcrb
mov
pop
mov
cmpb
aas
jnp
imul
mov
pushf
fwait
test
add
push
movsb
leave
fs
jns
xchg
mov
addl
rolb
mov
insb
js
sahf
adc
cli
fwait
ja
jecxz
xchg
cmc
inc
push
aaa
ss
xchg
insl
or
jbe
dec
jae
pop
imul
or
and
stos
mov
das
call
or
cltd
in
cmp
xchg
push
mov
outsl
mov
testb
sbb
sbb
pop
lret
sbb
test
pusha
fstps
mov
push
in
cmpb
inc
dec
out
sub
lahf
js
rcrl
sbb
sub
in
fwait
inc
movsb
mov
cwtl
add
std
inc
dec
arpl
je
movsl
mov
sbb
hlt
mov
xchg
or
sbb
sbb
jb
xchg
and
xor
clc
inc
sbb
jne
mov
shll
addl
subl
cmp
testl
pop
notb
test
add
dec
pushf
adc
adc
adc
push
aam
es
mov
push
fcmovnb
stos
movsl
push
add
xor
jbe
dec
push
add
outsb
repz
int
arpl
icebp
adcl
adc
push
jl
icebp
gs
xor
mov
xchg
add
cmp
stos
in
ja
in
data16
pop
test
out
jo
test
and
fistpll
ja
rcrb
xor
jp
jno
loopne
dec
xchg
jo
insl
pusha
and
adc
addr16
lahf
in
adc
retw
shlb
iret
lods
xchg
push
or
das
push
xchg
mov
stos
mov
push
int
mov
inc
orb
xchg
insb
mov
mov
mov
xchg
mov
jg
sub
and
push
jo
orl
push
sub
and
aam
mov
fldenv
aaa
insb
jl
sbb
leave
sbb
mov
mov
dec
xlat
inc
fwait
std
push
sub
sbb
dec
xchg
ljmp
pop
enter
scas
lds
cmp
or
pop
mov
fwait
xlat
fcomp
and
adc
rcl
ja
mov
scas
or
dec
sbb
lock
mov
push
jg
adc
and
lods
jb
mov
ficompl
aam
sahf
jmp
adc
xlat
cwtl
stos
int
imul
stos
dec
stc
cmp
pushf
ret
repnz
ret
pop
arpl
fdivrs
imul
fwait
daa
repz
cli
mov
lea
inc
addr16
and
cmp
fsubl
dec
mov
push
aam
mov
nop
xchg
test
aam
rep
enter
push
or
scas
popa
scas
aad
aam
ljmp
rcl
cmpsl
imul
push
in
outsl
cmpsb
mov
mov
jne
aam
mov
pop
and
mov
rclb
mov
leave
sbb
xor
test
inc
and
or
out
pop
inc
dec
or
lahf
push
sbb
inc
inc
pop
pushf
aaa
adc
pop
andb
fisttpll
int3
push
mov
cld
fildll
push
xchg
cmp
xor
inc
mov
ja
push
inc
mov
sbb
es
lcall
mov
sbb
cbtw
dec
fwait
es
lock
xorl
mov
dec
xor
jle
jmp
gs
insl
inc
mov
out
rorb
aad
xchg
xchg
push
pop
stc
pop
sub
cld
push
addr16
jae
push
xor
or
inc
adc
mov
ret
out
subl
xor
push
int
mov
out
mov
dec
leave
jg
divl
sub
fsubp
movsl
roll
push
ds
cltd
inc
test
fstpl
test
test
mov
xchg
mov
mov
jo
das
loopne
fimull
dec
stos
xchg
adc
cltd
inc
push
mov
imul
test
in
push
clc
pusha
mov
add
cmp
jnp
lcall
add
fdivs
popa
inc
mov
jae
push
xchg
mov
xchg
test
sub
imul
push
xchg
jmp
rcll
jp
out
fisubrl
lret
test
mov
aas
pop
test
orl
lcall
jns
xchg
mov
mov
mov
inc
arpl
xor
int
mov
cmp
push
mov
cmp
loopne
data16
sarl
test
nop
fwait
imul
mov
add
enter
int3
das
imul
sbb
cmpsl
fwait
int
add
lcall
dec
sub
xchg
outsl
cmp
lods
lock
cld
mov
not
pop
mov
movsb
imul
aad
jecxz
repz
mov
cmpb
sub
cs
call
nop
leave
addr16
mov
rcrl
lea
sbb
popf
xchg
xor
les
sarl
mov
nop
pop
aam
sub
clc
push
add
push
cmp
xchg
dec
sbb
idivl
lea
or
dec
outsl
xchg
pop
imul
add
mov
xchg
dec
xchg
mov
mov
jecxz
push
push
push
imul
sahf
and
xchg
pop
shl
cmpl
lock
repz
xor
mov
in
out
fwait
enter
stc
mov
dec
jl
push
pop
std
and
pop
cwtl
push
xor
scas
cmpb
adc
shl
mov
outsl
xor
or
or
inc
movsl
ds
push
test
push
mov
fistps
pop
push
mov
xchg
les
adc
mov
rorb
dec
inc
fs
jbe
shrb
push
pusha
pop
lret
xor
pop
jl
add
xchg
andl
sbb
movsl
inc
rcrb
mov
xor
push
repz
cmpsl
test
testl
sbb
jg
insb
mov
sbb
std
fsubl
sbb
out
mov
outsb
dec
xor
sbb
xor
cltd
cli
mov
mov
adc
sbbb
or
push
out
inc
lcall
mov
out
cmp
fimull
mov
or
sbb
sbb
cmpsb
test
outsb
add
cld
div
sub
mov
ret
cmpsb
mov
int
fwait
push
imul
arpl
push
shl
pcmpgtb
call
pushf
cmc
jecxz
xchg
dec
cmpb
mov
test
lar
pop
and
and
jecxz
xor
cli
cmp
dec
jecxz
push
or
mov
lcall
pop
scas
ljmp
cwtl
add
xor
adc
jl
push
lret
loopne
int
scas
divb
negl
and
div
dec
cmp
xchg
mov
adc
fstpl
leave
pop
in
mov
iret
mov
stos
daa
mov
xchg
inc
pop
push
not
inc
pusha
icebp
lods
xchg
out
xchg
int3
imul
leave
fs
mov
es
in
bound
mov
rcl
daa
iret
push
les
divb
sbb
in
mov
dec
test
hlt
call
xor
dec
sbb
fwait
int3
fmuls
repz
in
push
cmc
movsl
leavew
cmp
popa
sub
imul
push
adc
or
mov
imul
cmpb
int3
xor
cmp
ret
fmull
xchg
jg
pop
jp
lods
cmp
cltd
push
add
cmc
psraw
add
hlt
rcll
fistpl
jb
dec
popf
fnop
out
lahf
repnz
pop
push
int
inc
faddp
subb
xchg
xor
jmp
push
jge
dec
shl
fidivrl
pop
enter
add
jecxz
movsl
push
jl
jecxz
cmp
test
faddp
cmc
aad
fwait
mov
xchg
push
inc
popf
xor
dec
push
lret
pop
jecxz
mov
dec
sbb
inc
jnp
imul
dec
lds
cli
xchg
sub
mov
outsb
test
fmull
sbb
nop
mov
push
gs
cmpb
mov
mov
jg
push
sub
fbld
scas
in
out
dec
cmp
dec
daa
out
cmp
inc
add
testb
adc
and
lret
shrb
sbbb
loopne
sub
imul
shll
jbe
adc
scas
mov
inc
stos
mov
mov
mov
test
dec
pushf
fwait
push
pushf
imul
test
push
cltd
in
jne
jecxz
cwtl
dec
std
mov
cmpsl
mov
or
pop
mov
cld
push
lahf
xor
push
push
imul
sbb
ja
dec
and
sbb
ja
ret
cltd
pop
mov
mov
clc
sbb
adc
push
jo
lret
mov
mov
inc
fiadds
sbb
adc
enter
hlt
cld
jecxz
mov
inc
std
lahf
pop
jns
dec
popa
stc
aaa
push
mov
insl
mov
or
mov
cli
add
adcb
rcrb
dec
cmc
or
rolb
add
dec
lock
mov
cmc
or
push
lock
xchg
or
decb
xlat
sti
out
bound
and
out
icebp
jnp
push
mov
mov
and
out
cmc
popf
imul
sub
cmpsl
out
sti
sti
cli
push
xchg
popa
xchg
loopne
mov
sub
and
call
rolb
pop
cmpsl
dec
loopne
cld
adc
mov
andl
push
cmp
fdivrs
cwtl
sub
or
call
sbb
addr16
adc
jno
mov
pushf
and
pop
jmp
imul
and
mov
pop
dec
mull
sbb
dec
and
test
push
xchg
or
sarl
test
xor
mov
inc
sub
imul
inc
aad
enter
inc
push
je
out
or
adc
test
push
ja
sbb
mov
inc
add
add
pop
adc
push
and
pushf
push
insb
xor
jo
loopne
cmp
jns
pop
ljmp
xchg
js,pn
pop
sarl
sbb
xor
jae
dec
add
xchg
add
enter
cmp
sbb
addl
ret
test
sbb
arpl
add
xchg
sahf
addr16
aas
fsubl
test
push
adc
ret
sub
icebp
repz
push
sbb
mov
and
cmc
loopne
push
pop
pop
lret
icebp
mov
shl
pushf
pop
loopne,pn
arpl
xor
lret
js
outsl
aas
call
sub
adc
enter
in
dec
sub
cmp
mov
shr
inc
or
pop
iret
dec
add
imul
enter
sbb
inc
lahf
daa
cwtl
sub
jg
jmp
push
into
sbb
sub
fidivrl
mov
add
and
mov
mov
lret
mov
xchg
mov
subl
popf
enter
pop
cmp
les
push
ss
testb
xchg
inc
test
aaa
repz
movsl
push
in
fdivrl
sub
test
push
push
adc
push
sbb
repnz
inc
rol
rcr
cmpsl
add
call
fwait
mov
mov
push
aaa
imul
clc
leave
fcomps
mov
jp
pop
adc
mov
out
mov
daa
std
jecxz
add
imul
inc
clc
mov
stc
mov
jle
movsl
dec
dec
pop
rorb
push
aas
sbb
inc
imul
and
shrb
pop
sbb
sub
fwait
ljmp
push
lock
mov
sub
mov
imul
adc
dec
outsl
jge
hlt
ja
pushf
sbb
adc
push
ja
out
clc
subl
mov
jnp
cwtl
ret
adc
pop
addr16
pop
ds
or
out
mov
cmp
inc
mov
test
jecxz
dec
out
arpl
dec
or
int
fcomi
xchg
test
pushf
nop
sbb
aam
add
arpl
pop
sub
or
cltd
and
cmc
inc
js
ret
test
in
mov
ja
rolb
xchg
push
or
dec
mov
lods
xor
adc
jmp
pushf
imul
add
xchg
test
fnstcw
xchg
jp
jecxz
add
outsl
push
mov
test
cwtl
mov
mov
icebp
daa
dec
test
mov
mov
sahf
jecxz
cmp
mull
lret
push
sbb
lcall
imul
pusha
insl
push
fadds
jle
dec
repz
pop
lret
addr16
imul
popa
fs
js
test
and
iret
fdivrl
lea
mov
es
mov
daa
xor
test
cs
out
in
and
mov
repz
fldt
xchg
movsl
mov
lret
imul
xchg
inc
test
mov
pop
js
jecxz
push
xrelease
repnz
daa
push
pop
jecxz
insb
push
inc
add
push
sbb
adc
cltd
xchg
ret
sub
pop
dec
ret
rcll
xchg
call
xor
mov
xchg
xchg
mov
mov
hlt
mov
inc
mov
mov
adc
outsb
js
pop
sbb
lcall
jge
fwait
mov
pavgw
lret
mov
push
fbld
out
sti
cmp
fcoms
fcmovnu
aaa
xchg
push
adc
pop
lahf
push
mov
mov
push
shlb
ficoms
xchg
pop
test
mov
and
and
pushf
dec
cmp
dec
push
mov
mov
cmpsb
scas
jg
xor
fwait
loop
sarb
sti
lods
pop
xchg
jbe
lock
mov
enter
loopne
mov
xchg
mov
and
mov
sahf
add
in
sbb
pop
pop
push
adc
fwait
push
repnz
lcall
ficompl
sbb
cmpsb
dec
rcl
test
pushf
loopne
das
mov
mov
hlt
jne
sbb
and
stos
enter
mov
lock
mov
sub
add
adc
daa
jle
add
idivl
imul
mov
pop
bound
stos
clc
mov
test
dec
add
mov
xchg
add
adc
addr16
lock
clc
in
and
mov
or
mov
or
sub
push
pop
push
cmc
aad
jb
and
jecxz
pop
push
daa
stc
imul
cmc
add
aad
sbb
mov
adc
out
cmp
and
or
out
daa
adc
or
lods
adcb
orb
mov
sti
pop
cwtl
mov
iret
inc
cmp
js
pusha
pop
add
pop
inc
addb
push
push
or
push
mov
xchg
sbb
mov
push
adc
pop
mov
mov
dec
imul
icebp
jl
xor
adc
sbbb
cli
sub
pop
movsl
mov
inc
sbb
or
loope
daa
rcrb
ja
aas
or
sub
jecxz
jg
cli
cwtl
and
lock
ret
out
cmp
shrl
enter
bound
jmp
add
pop
notl
xor
inc
or
enter
add
xchg
push
mov
and
add
arpl
arpl
adc
lcall
dec
daa
dec
pop
nop
cmc
fcoml
sti
push
cld
jmp
dec
imul
stos
pop
fimuls
lcall
or
mov
int3
cltd
mov
mov
cwtl
jl
cwtl
sbbl
xchg
in
jns
cmc
mov
ljmp
xchg
or
lock
pop
xor
shll
fstpl
xor
jnp
addr16
mov
das
adc
cli
adc
mov
sub
dec
test
pop
xor
out
inc
push
inc
xor
sahf
jae
push
lret
push
cmp
pushf
lea
inc
jb
adc
lcall
mov
jl
imul
nop
sub
addr16
mov
bound
mov
sub
aam
js
sbb
mov
pop
push
dec
lea
in
xlat
sbb
sbb
test
add
in
adc
inc
fsubrp
xorl
lahf
fildll
pop
adc
push
or
mov
test
leave
aaa
adc
into
xchg
gs
hlt
dec
and
inc
inc
jmp
jge
fdivl
fwait
sbb
xor
and
mov
idivl
and
add
repz
icebp
xchg
clc
loop
lret
into
xchg
sahf
pop
inc
inc
add
enter
aas
cmp
push
push
adc
add
pop
or
aaa
pop
pop
pop
inc
imul
xchg
mov
sbb
push
inc
dec
push
nop
cmc
pop
push
outsl
pop
sbb
jp
adc
lcall
jecxz
in
mov
inc
xchg
mov
loope
sbb
cmp
sub
push
mov
sahf
lods
mov
iret
js
cmp
repnz
fmul
lock
cmc
aas
mov
mov
inc
push
sub
icebp
mov
aad
jnp
jmp
outsl
jecxz
cmc
dec
test
push
pushf
into
je
push
addr16
call
push
sahf
mov
lcall
adc
int
jmp
loopne
dec
ja
or
xor
lock
rcl
enter
fwait
pushf
in
dec
std
dec
scas
or
pop
mov
movsb
mov
mov
ficoml
mov
cmc
scas
push
out
test
fwait
push
int
mov
xor
movsl
push
jecxz
mov
mov
and
mov
add
or
push
clc
cld
push
dec
xchg
imul
cwtl
enter
mov
insb
sbb
icebp
add
call
jecxz
or
pushf
out
xchg
clc
paddsw
and
es
in
xchg
push
xchg
sbb
mov
mov
mov
stc
leave
and
and
xchg
vpsubq
inc
movsb
cmp
inc
or
add
ja
cmp
fcomp
and
push
pop
push
xor
movsb
mov
jo
xor
adc
sub
or
xchg
call
mov
orb
popa
adc
pop
xor
orl
xor
movsl
mov
fbld
cld
sahf
fnstcw
jnp
imul
daa
jae
rclb
xor
mov
jecxz
pop
in
cmp
aas
in
or
lock
push
and
fs
inc
sub
and
test
lret
inc
mov
mov
dec
aas
push
call
pop
and
test
mov
mov
adc
insl
rcrl
add
rcr
lods
repnz
dec
data16
mov
jge
dec
pop
insl
xor
push
inc
push
mov
lret
lock
jecxz
imul
xchg
mov
mov
add
jg
or
popa
sub
mov
fmul
test
fwait
daa
shrb
pop
aad
mov
icebp
jmp
es
hlt
push
loope
mov
xchg
lods
push
mov
cmc
loope
sub
dec
sahf
xchg
cmp
out
aam
loop
aaa
and
mov
nop
or
popa
jae
jno
jp
fisubl
sub
xor
mov
pop
xor
add
mov
push
pop
add
sbb
test
mov
in
push
aas
out
repnz
lods
xchg
and
ja
cmc
mov
xchg
std
cmp
mov
out
aaa
lret
mov
dec
cmp
sub
shrl
sti
inc
dec
imul
call
mov
jle
sbb
cmc
fwait
inc
mov
scas
xchg
add
pop
jp
mov
das
push
or
lcall
adc
jno
stc
mov
aas
add
dec
sti
aam
fidivrl
pop
addr16
aad
imul
fidivrl
and
push
mov
mov
xchg
add
dec
add
mov
ret
aas
test
rcl
incb
dec
fwait
dec
stos
mov
addr16
test
inc
pop
into
and
xchg
out
xchg
push
hlt
jp
aam
lods
ja
jno
push
inc
clc
scas
mov
jns
adc
inc
xchg
add
inc
fisttpl
cmp
mov
pushf
hlt
sbb
mov
push
shlb
fisubrl
inc
in
dec
jns,pt
inc
ss
loop
cmp
cwtl
in
xor
or
test
adc
lods
mov
das
sahf
jp
in
pop
fdivr
aad
jbe
jle
or
mov
icebp
mov
xorl
clc
lahf
cmpsb
inc
fs
xor
aaa
test
in
cltd
imul
pop
mov
sbb
push
repnz
push
cltd
aaa
xchg
cmp
fistl
mov
jb
gs
inc
call
inc
lahf
or
mov
rorl
arpl
xor
dec
jns
int3
daa
pusha
xchg
pop
lahf
jne
out
out
insl
xor
repnz
fwait
cmp
icebp
aam
rorb
movsb
pop
sub
cltd
pop
mov
sbb
ss
pop
and
sbb
iret
iret
and
cmp
push
rol
sbb
sub
rolb
jge
lods
aaa
or
and
into
pop
inc
add
cld
imul
sub
inc
pushf
mov
cmpsb
int
mov
pop
sub
cmp
xor
lcall
mov
lock
loopne
sti
fwait
and
ret
sbb
mov
mov
push
imul
fs
jecxz
xchg
orb
or
nop
frstor
inc
repnz
rcll
adc
mov
mov
mov
mul
test
xchg
loop
push
push
xchg
dec
or
loope
mov
mov
insl
pop
mov
fwait
stc
xchg
add
dec
xor
push
xor
movsb
mov
push
mov
and
inc
mov
shlb
test
test
mov
sbb
mov
cltd
mov
and
pop
pop
mov
mov
aam
or
scas
push
cmp
bound
jo
sbb
ret
std
xor
xlat
xor
out
loopew
mov
mov
mov
inc
fcoml
sarb
fistpll
sub
inc
imul
cld
cwtl
jae
or
mov
mov
divb
sub
mov
movsb
jo
mov
xchg
aas
daa
xchg
dec
xchg
cmp
popf
mov
fwait
or
sbb
mov
sarb
cltd
cld
ja
lds
and
das
mov
rcrb
sbb
lahf
pop
imul
movsl
xchg
sbb
mov
nop
fwait
and
imul
dec
and
cld
pop
test
out
fwait
rcrb
test
mov
js
sbb
add
mov
js
push
ljmp
add
gs
jo
clc
add
jg
fisttps
cltd
jb
push
push
shr
movsb
sbb
xchg
adc
aam
outsl
mov
fsts
mov
fwait
push
push
sbb
call
push
cmpsb
push
dec
mov
cmpsl
xor
cwtl
mov
ljmp
pushl
mov
repnz
adc
dec
mov
push
lods
adc
pop
mov
inc
xor
mov
xchg
push
sub
arpl
mull
push
andl
cli
lds
es
out
xor
jg
test
jae
shrl
sbb
int
lods
jb
dec
mov
sahf
xor
pop
insl
in
mov
sbbl
mov
dec
sbb
insl
xchg
push
jbe
loopne
les
fwait
les
sub
mov
pop
jnp
rorb
invd
sub
imul
xchg
in
mov
jb
mov
in
sti
mov
call
popa
pop
test
adc
sbb
jns
xor
dec
mov
xchg
out
mov
fwait
adc
xlat
icebp
dec
sub
inc
xchg
lods
out
cmpsb
push
test
dec
push
xchg
mov
fdivrl
in
xchg
mov
fldl
sbb
into
call
rcl
ret
cli
pop
cmpb
push
mov
lcall
push
loope
pop
cs
pop
cmp
sbb
ja
mov
std
xchg
cmpl
mov
dec
cld
lock
mov
or
popa
popa
mov
adc
or
lret
movsb
fwait
jle
dec
rcrl
push
repnz
or
adc
sahf
mov
orl
dec
adc
icebp
mov
jge
cld
out
push
lahf
ret
dec
stos
and
pop
push
mov
psubusb
cwtl
xchg
inc
add
lahf
imul
mov
shrb
sbb
out
adc
push
orl
popf
or
dec
sahf
dec
fwait
insb
lea
fsubs
testb
call
push
add
xchg
leave
mov
pop
pop
sub
ret
es
sarl
xor
xor
loop
and
fsubrs
sub
mov
xor
xchg
iret
mov
mov
stc
mov
loop
mov
sti
push
dec
or
rcrb
inc
pushf
lea
mov
jne
or
xchg
pop
sub
push
jp
aaa
ja
ret
test
ret
xchg
pop
dec
iret
pop
add
imul
pusha
inc
jae
mov
sbb
or
shlb
mov
in
bound
add
lods
xchg
mov
imul
shrb
bts
int
ficompl
shrb
ret
mov
cwtl
jns
lds
test
mov
xlat
jge
outsl
pop
or
lods
lea
movsb
prefetcht1
mov
call
inc
cmp
and
and
jecxz
mov
gs
xchg
ja
clc
inc
bound
sub
imul
jb
push
mov
inc
fs
fwait
lea
jo
pushf
sub
popa
movsl
dec
inc
flds
mov
cmp
insb
mov
or
and
imul
cwtl
daa
imul
inc
testb
jg
add
adc
inc
enter
aaa
movsl
pop
stc
aad
mov
pop
push
pop
decb
inc
push
adc
push
jecxz
lods
add
pop
mov
out
call
mov
push
mov
div
mov
les
lret
pop
test
aaa
insl
mov
mov
adc
pop
lahf
arpl
hlt
repz
outsb
roll
repnz
cmp
out
ja
aas
mov
adc
cmp
and
loopne
fldcw
stos
sbb
dec
popf
fwait
mov
imul
jg
xchg
in
aad
cli
and
inc
cmp
adc
push
in
inc
out
jmp
enter
aas
inc
pop
mov
and
dec
pop
lcall
push
pop
faddl
enter
daa
loopne
xchg
xchg
sbb
push
xchg
clc
call
in
mov
xchg
inc
scas
jmp
jne
adc
sbb
jecxz
xchg
mov
and
shl
sti
in
xchg
inc
pop
sbbb
add
mov
movsl
test
ret
cmp
xor
imul
stos
sbb
mov
cld
mov
in
movb
jp
mov
mov
scas
cltd
push
into
lock
xchg
int
or
dec
push
mov
ja
loope
rol
add
jnp
or
xchg
add
scas
dec
dec
enter
test
inc
ja
pop
subb
fidivs
mov
sbb
mov
mov
fimull
mov
movsb
adc
and
mov
sub
cwtl
pushf
mov
mov
pop
and
or
mov
call
jae
lds
jl
mov
push
mov
mov
adc
enter
mov
pop
andl
pop
dec
ja
and
adc
sub
jae
cmpsb
loopne
and
lret
cmp
adc
push
lds
pop
mov
inc
push
inc
sbb
enter
icebp
jle
fstps
or
std
lods
outsb
stos
pop
scas
and
mov
lcall
jecxz
jnp
pop
pushf
push
mov
cmc
and
repnz
lds
int
pusha
pop
mov
ja
movsl
sbb
sbb
xor
mov
push
push
or
hlt
cmp
test
imul
jecxz
mov
sub
test
adc
push
inc
movsl
ds
loop
jbe
pusha
shlb
mov
lret
xchg
ss
pop
pusha
inc
mov
loopne
stc
cmc
dec
xlat
cmc
or
cld
jae
aaa
push
jns
jg
call
test
inc
cltd
xor
pop
fwait
int
or
mov
aaa
and
in
push
cmp
cltd
sbb
mov
mov
lds
push
lods
mov
mov
and
jmp
or
push
mov
mov
movsl
mov
lea
and
imul
stos
addr16
sbb
loopne
sbbl
pop
and
ja
sub
xchg
xlat
mov
mov
cmp
lea
jno
dec
add
repnz
imul
inc
or
imul
ficompl
adc
inc
in
in
xchg
mov
cs
mov
mov
leave
fwait
lock
jns
mov
jo
and
dec
ja
lcall
jb
fidivrl
sbb
pusha
inc
mov
or
test
aad
in
addr16
mov
xchg
jb
dec
subl
cwtl
and
sbb
xor
xlat
imul
mov
mov
leave
fsubl
aaa
fsts
xchg
out
stos
jecxz
jb
push
repnz
push
cmp
clc
mov
add
cmc
sbb
stc
jbe
xchg
mov
lods
adc
cltd
ja
jg
or
pusha
jmp
mov
cmpl
mov
sbb
xchg
or
add
xchg
or
and
jo
icebp
add
push
push
ja
repnz
mov
movsl
aam
push
leave
sbb
xchg
cmpsl
xor
jecxz
jmp
adc
or
mov
jns
in
data16
push
push
or
pop
dec
push
inc
loope
cltd
inc
insb
or
lds
cld
xchg
cmp
fs
aad
mov
xchg
ljmp
fidivrs
in
sti
orb
mov
mov
jecxz
test
mov
popa
sub
add
out
and
lods
in
pushf
cmp
lods
aad
pop
fwait
inc
out
insl
mov
mov
inc
push
or
mov
fwait
sub
fdivl
sbb
test
mov
lods
mov
xchg
mov
testb
jns
add
jle
sub
inc
mov
addr16
jp
out
nop
movb
in
sub
cmpl
ret
add
je
scas
sub
mov
dec
sbb
lret
and
cmp
iret
pop
sub
out
sub
lods
push
xchg
in
pop
dec
shl
mov
jp
jo
and
enter
data16
ljmp
rcll
sub
icebp
or
mov
leave
int
addr16
and
sbb
mov
mov
sbb
and
cwtl
mov
pop
and
addr16
testb
mov
stos
pop
pop
jp
fs
cmpsl
push
xchg
outsl
adc
fisubrs
sbb
mov
leave
in
mov
push
mov
fcmovne
lock
mov
movsb
ja
mov
jl
jge
pusha
mov
pop
bound
pop
xchg
adc
mov
es
movsl
push
push
pop
fsubrs
test
pop
push
outsl
mov
mov
mov
out
sbb
addr16
test
iret
push
in
movsl
xor
xchg
ljmp
add
leave
ficomps
pushf
in
insb
fiaddl
sbb
data16
shll
inc
call
in
mov
int3
xchg
and
shlb
sub
mov
cmp
add
xchg
jmp
insb
mov
stos
popf
mov
or
fcmovnbe
lahf
hlt
daa
imul
imull
lea
lods
push
adc
or
mov
ss
movsl
stos
pop
ret
sub
enter
adc
fiaddl
ret
jle
ljmp
ja
dec
mov
popf
ret
inc
imul
lahf
out
sbb
flds
push
cmc
fistpll
dec
lods
loope
and
xor
imul
das
pop
test
sub
sbb
fwait
cmpsb
mov
out
xchg
loop
pop
sub
inc
or
adc
push
icebp
mov
fidivrl
add
pop
cwtl
mov
add
dec
inc
mov
xchg
and
xchg
mov
cs
mov
dec
xchg
shlb
inc
xchg
mov
test
inc
pop
jl
sub
or
cmpsl
fwait
mov
in
inc
pushf
cld
fwait
adc
int
inc
in
dec
dec
sti
dec
test
setbe
or
dec
cld
bswap
cmp
scas
inc
rep
mov
gs
mov
or
push
call
xor
subb
rcrb
jne
mov
xchg
mov
mov
push
les
jl
stc
adc
xor
addr16
das
pop
pushf
mov
mov
fsubr
inc
push
add
cmp
ja
ret
xchg
adc
imul
and
lods
test
lock
sbb
dec
push
ret
out
push
popf
sbb
bound
movsl
clc
add
shll
mov
test
add
loope
xchg
xor
add
xchg
out
bound
dec
adc
js
mov
and
out
pop
imul
gs
xchg
lock
movsl
lahf
out
iret
les
in
dec
fsubrs
rcrb
mov
mov
aad
inc
fwait
pop
dec
loopne
dec
lods
pop
adc
pop
pushf
and
mov
data16
xchg
imul
and
ljmp
mov
gs
push
xchg
cmp
iret
jecxz
xchg
imul
bnd
push
jne
mov
cld
push
stos
js
jno
push
inc
push
lahf
xchg
lods
flds
outsl
insb
jl
leave
mov
test
xchg
push
fwait
xchg
jns
mov
mov
inc
push
test
icebp
mov
pop
xchg
popf
jne
mov
adc
out
xchg
mov
add
or
hlt
adc
sti
imul
sub
lret
int3
pop
jne
cmp
daa
jmp
lret
test
jp
mov
lret
mov
in
push
lds
dec
sub
xchg
pop
imul
cwtl
out
mov
adc
cmp
fwait
mov
mov
jo
aaa
out
test
inc
test
shl
inc
fneni(8087
scas
mov
shl
jo
ss
and
mov
bound
jne
xchg
test
les
jo
pop
fsub
js
data16
xchg
xchg
push
and
rcll
mov
sub
add
repnz
shrl
add
int
pop
mov
and
repnz
xchg
sub
sti
out
out
sbbl
or
rorl
push
pop
sbb
push
nop
sub
lds
arpl
std
xchg
and
stc
push
pop
push
lahf
jmp
xor
insb
pushf
loopne
fisttps
loope
mov
imul
sub
insb
test
inc
mov
inc
sar
enter
mov
cmp
dec
adc
push
test
xor
or
out
pusha
jg
out
shll
mov
push
pop
add
pushf
insl
jmp
pop
popf
icebp
adc
push
aaa
fcmovu
inc
pusha
dec
daa
mov
test
xor
fwait
xchg
addb
cs
cmpsl
add
enter
out
dec
push
imul
push
in
cmp
fnstenv
ss
imul
andb
xor
addb
xlat
int
or
movsl
mov
cwtl
jmp
cmp
shl
mov
or
mov
cmp
adc
cli
mov
in
das
bound
popa
xor
std
popf
test
sbb
in
xor
sbb
out
push
pop
add
xchg
fldenv
clc
dec
out
push
out
push
dec
imul
lea
and
inc
sub
and
jb
enter
adc
xchg
adc
push
lds
jo
outsb
pop
mov
fimuls
cmc
pop
sub
mov
cmp
fimull
lahf
mov
xchg
sbb
aaa
cwtl
lock
adc
mov
ja
pop
in
jl
lds
pop
js
jno
fwait
push
push
mov
rcrl
jns
xchg
push
mov
or
fs
mov
leave
cmc
stos
or
imul
lret
mov
int3
push
std
and
insl
lret
loop
jbe
sahf
setl
inc
notb
mov
or
std
cld
lret
aam
push
cld
shrl
inc
lock
pushf
push
or
aad
imul
xor
stc
dec
push
inc
dec
push
mov
movsl
mov
lret
fstps
dec
mov
xchg
or
cld
nop
shrl
adc
roll
sub
sbb
xchg
imul
or
lock
cmp
ficompl
cmp
popa
and
cmpsb
sbb
cli
in
inc
lret
rclb
and
mov
or
cltd
push
xor
lods
push
icebp
pop
in
in
jmp
cli
hlt
lret
je
mov
jge
inc
mov
ret
push
cmp
daa
dec
fildl
add
les
nop
dec
dec
jb
add
test
push
mov
lock
imul
mov
dec
pop
sbb
xor
aas
xchg
push
repnz
call
lock
pop
out
xchg
inc
and
xchg
fisttpll
das
testl
pushf
and
ljmp
sbb
pop
icebp
pop
pop
mov
stos
in
mov
or
cmp
cmpsl
fwait
push
pop
sahf
aad
xchg
cmc
pop
hlt
and
push
jmp
cwtl
fwait
ret
aam
mov
js
subb
and
nop
andb
xchg
dec
push
hlt
push
jle
push
mov
jg
adc
mov
sarb
std
lcall
mov
lahf
sahf
adcb
jp
movsl
or
out
inc
test
into
push
aam
lock
mov
jg
xor
cmp
push
daa
jne
mov
push
mov
pop
add
mov
jg
fisubl
leave
add
aaa
push
fldenv
add
and
sti
lahf
adc
hlt
mov
cmp
aas
pushf
push
ret
aaa
sbbb
in
jle
loopne
sub
aaa
mov
add
clc
pop
addr16
inc
sti
jns
fsubrs
das
loop
pop
pop
or
out
jnp
pop
mov
shll
sub
das
sarb
imul
pop
jb
popa
daa
ljmp
aaa
cwtl
rcrl
or
mov
scas
mov
leave
and
ljmp
pop
testl
shlb
and
and
incb
dec
fwait
enter
icebp
test
mov
pop
xchg
xchg
mov
int
inc
adc
in
lods
xorl
pop
fsubl
push
jnp
mov
cld
jbe
sbb
andb
mov
adc
dec
shlb
xchg
inc
xchg
sbb
mov
mov
fldt
in
dec
movsl
cmp
roll
leave
test
test
dec
adc
popa
xchg
mov
push
pop
add
scas
push
pop
dec
adc
into
xchg
push
mov
pop
in
cmpb
xchg
shl
or
mov
mov
mov
shr
daa
das
mov
les
xor
pop
xchg
adc
aam
mov
test
and
insb
or
in
mov
xchg
js
jo
jne
mov
adc
push
iret
out
lret
mov
mov
dec
lods
and
push
imul
fidivrs
inc
push
jle
scas
aam
adc
cs
jo
adc
hlt
push
daa
shl
scas
sub
les
int3
xlat
jecxz
pop
fstps
xchg
lret
fbld
cwtl
imul
cmpl
shr
scas
lods
cmp
or
mov
jbe
rorb
cmpsb
xor
inc
xchg
outsl
insl
inc
and
dec
pop
or
push
mov
sub
in
pop
mov
or
mov
lds
sbb
pusha
add
jg
ja
rcl
jne
and
fldt
mov
xchg
test
mov
test
out
ret
sbb
cmpsl
das
jns
sub
ret
psubw
frstor
push
mov
and
fbstp
mov
out
xchg
mov
dec
shll
fcmove
mov
xchg
sub
repz
repnz
popf
mov
push
cmp
sbbb
and
pusha
push
push
xchg
repz
cmp
pusha
xchg
aam
mov
cltd
add
loope
inc
es
ffree
cmp
cmpb
cmp
pushf
xor
lcall
or
clc
cmp
sub
push
ss
add
push
and
ss
stc
fisubrs
nop
fwait
mov
aas
ret
xor
sbb
cmp
mov
mov
xchg
add
pop
adc
mov
and
cmp
xor
push
flds
and
clc
pop
pop
xchg
mul
mov
stc
push
cwtl
fwait
mov
dec
cmp
push
icebp
fldl
push
pop
pusha
pushf
xchg
call
cld
stc
mov
imul
sti
cmp
or
pop
fs
daa
jno
dec
movsb
int
bound
ds
jno
xchg
and
cli
out
xchg
mov
inc
add
sarl
adc
nop
lahf
hlt
jmp
imul
pop
js
shlb
adc
sub
mov
rorl
pop
enter
fwait
addr16
sbb
push
dec
dec
xchg
xchg
mov
or
or
sahf
xchg
adc
cmp
aas
add
mov
ret
or
mov
add
cmp
lret
add
mov
fs
pushf
repnz
mov
jae
mov
add
clc
fwait
out
mov
xorb
cld
aaa
mov
leave
inc
mov
orl
fdiv
sbb
or
inc
dec
ja
dec
dec
int3
xchg
out
hlt
leave
fistpl
ret
or
push
imul
dec
mov
inc
jno
sbbb
test
int
pusha
inc
aas
shll
jl
pushf
dec
xchg
xchg
fwait
adc
pop
cmp
in
or
outsb
lods
test
dec
dec
ja
mov
add
jns
jg
dec
fcmovu
or
hlt
dec
or
iret
outsl
shll
add
loope
mov
mov
xor
pop
pop
aaa
pop
inc
cltd
insl
and
jle
sbb
out
dec
jg
in
jb
dec
or
mov
cmp
sbb
push
rorb
mov
lret
sbb
cmp
pop
sub
imul
sbb
jecxz
dec
in
mov
fwait
add
push
push
jb
adc
sbb
mov
ljmp
ficomps
decl
push
lahf
imul
push
cmp
insl
int
fcompl
cmp
cld
imul
xor
repnz
jmp
sub
add
mov
xorb
xchg
dec
ret
setno
xchg
mov
xchg
shlb
inc
or
outsl
sbb
es
pop
dec
pop
dec
jg
andb
je
and
pop
cmc
gs
and
ficomps
adc
rcrl
cli
jecxz
imul
inc
fwait
push
add
mov
sbb
fidivl
mov
inc
and
lock
jge
loopne
fcmovu
sub
push
push
hlt
jp
mov
das
xchg
inc
ret
movsl
mov
fmull
inc
divl
jmp
pop
cs
lahf
cmpl
jbe
jmp
das
fwait
mov
inc
jp
dec
sti
andb
dec
flds
out
mov
adc
fisubrs
cwtl
and
pushf
inc
sub
imul
mov
adc
addl
mov
rcrl
adc
adc
pop
dec
imul
pop
aas
jo
push
adc
inc
cli
push
push
jbe
les
and
xchg
jnp
in
mov
orl
stc
popf
xchg
mov
fs
jbe
rclb
std
push
shlb
mov
daa
mov
pop
test
mov
pop
rep
cmp
mov
cwtl
dec
jp
xor
test
jp
roll
outsl
xlat
inc
and
lea
rolb
mov
imul
xor
mov
inc
and
test
jne
push
xchg
sarl
adc
xchg
gs
neg
lods
mov
pop
sahf
rclb
mov
pop
push
in
push
lea
sbb
fcmovnbe
sarl
jb
inc
cmp
in
lds
lds
and
cmp
mov
pop
inc
sub
push
mov
fmull
and
cmp
cmpsb
js
sahf
cmp
xchg
outsl
pushf
xchg
push
push
cmp
outsl
push
adc
arpl
fimuls
popw
inc
hlt
outsb
pop
and
inc
adc
icebp
imull
out
pushf
sub
jno
out
inc
push
sub
fs
xchg
xchg
mov
mov
jge
mov
xchg
scas
xchg
cmp
or
aad
daa
xchg
aad
rcrb
lock
std
push
aas
push
enter
sbb
fistpl
push
dec
mov
jge
inc
sar
dec
repnz
inc
inc
test
stc
sti
sbb
mov
mov
dec
ja
test
add
cmp
jl
lds
ja
lea
nop
xor
xchg
jmp
andb
mov
adc
lods
ja
sbb
sti
and
jle
orb
lahf
call
inc
scas
cld
pop
or
xor
cmpsb
push
ja
test
jno
sbb
pop
scas
fcmovne
repz
mov
pop
and
scas
pxor
push
inc
pop
mov
xchg
sahf
inc
mov
mov
pop
adc
mov
enter
push
xchg
int
mov
incl
dec
cmpsb
mov
loop
ret
or
inc
imul
std
or
fsubrl
xchg
popf
pop
mov
or
call
xlat
mov
out
jecxz
leave
fcom
lahf
insl
xchg
push
xchg
jbe
fistpll
pop
js
push
lahf
add
xor
pop
aaa
jmp
xorb
sbb
out
out
roll
movsl
sbb
dec
pop
inc
pusha
lcall
jecxz
pop
mov
mov
test
jns
xchg
mov
sarb
mov
jb
mov
xchg
sub
inc
inc
adc
sbb
xchg
jle
mov
and
cld
mov
in
mov
pop
sub
lock
cmpsl
test
adc
loope
hlt
jmp
sbb
jno
mov
adc
imul
jb
xchg
jg
fimull
fdivrs
loope
dec
in
jl
push
loopne
movsl
aam
cmp
loopne
testl
imul
lock
aad
test
shll
xor
pushf
xchg
push
sub
mov
pushf
in
inc
pop
in
inc
lcall
push
xchg
xchg
mov
imul
inc
mov
arpl
lcall
sub
mov
xor
and
mov
loope
insl
mov
cli
mov
sbbl
add
push
in
sahf
pop
xchg
mov
aad
add
pop
push
dec
test
xor
add
mov
xchg
lea
push
lcall
mov
scas
sub
cltd
loopnew
mov
repnz
inc
cltd
arpl
int
ret
jbe
fsubp
iret
lods
fbld
test
mov
adc
je
sub
ja
mov
dec
fldl
ficompl
test
imul
dec
dec
pop
mov
add
shll
push
lock
aad
and
subb
cs
or
out
inc
fwait
addr16
movl
inc
inc
add
or
sub
int
or
fisubl
sbb
or
pop
push
mov
dec
lock
daa
data16
incl
test
xchg
imul
push
lcall
pop
fwait
lds
out
fs
mov
and
mov
jecxz
add
dec
loope
xchg
fiaddl
scas
mov
in
mov
add
adc
push
mov
nop
fldt
loope
call
lods
mov
repnz
clc
lds
xor
pop
mov
xchg
sbb
arpl
sbbb
lods
icebp
sub
sub
fsts
mov
adc
das
xor
mov
and
mov
push
fiaddl
jb
xchg
xchg
fwait
jge
sub
mov
and
cwtl
insb
imul
pop
rorl
fs
xlat
mov
xchg
cmp
jno
dec
cmp
dec
fnstcw
fistl
orl
sarl
cmpsl
jne
sbb
and
sub
imul
lea
mov
pop
pop
fstpt
sbb
daa
jns
jnp
arpl
adc
aaa
imul
mov
or
push
cwtl
fisubrs
inc
xor
scas
shll
xchg
pop
cmp
or
inc
pusha
jl
add
fiadds
int
notl
or
std
push
mov
mov
sub
insb
xor
xor
arpl
test
pop
push
pop
or
out
rcll
dec
pushf
rorb
addb
mov
fnsave
jo
inc
clc
sbb
lret
lahf
das
pop
lods
push
cmp
inc
cwtl
sbb
mov
xor
in
dec
test
pop
inc
into
cwtl
sub
addr16
test
mov
pop
xchg
dec
xchg
xor
out
sbb
es
mov
mov
std
cmp
in
sti
loopne
shlb
fwait
stos
add
and
fsubl
xchg
insl
sahf
pop
icebp
outsb
push
push
rclb
pop
fcompl
inc
add
lahf
shrl
das
xchg
pop
xchg
mov
stc
and
fisubs
inc
pop
leave
and
in
jo
inc
mov
inc
jmp
call
fcoml
or
fs
enter
sub
jo
push
add
sbbb
cld
xor
mov
push
mov
pop
sbb
fwait
sub
pop
jecxz
mov
mov
mov
cmp
addr16
adc
mov
lods
repnz
mov
pop
mov
xchg
cwtl
cmp
push
test
pop
xchg
lods
cmc
and
adcb
xor
inc
mov
roll
xor
bound
pop
pop
out
push
lret
icebp
jecxz
movsl
shr
hlt
adc
adc
add
inc
xor
jnp
sbb
pop
dec
and
dec
xchg
or
scas
sub
mov
icebp
test
xorb
push
test
jg
in
rolb
jae
aas
imul
lret
jl
or
mov
xchg
push
aad
mov
push
roll
mov
or
int
push
cmpsl
mov
rcll
pop
mov
xchg
mov
inc
movlhps
out
xchg
outsl
jno
aas
in
dec
jp
mov
imul
ffreep
in
jbe
mov
xchg
clc
sbb
xor
imul
mov
insl
lret
in
lahf
inc
jg
push
adc
xchg
sbb
pop
add
adc
sbb
es
cmc
pop
and
mov
outsl
push
mov
mov
repz
imul
or
lock
cmpb
call
mov
test
in
mov
jmp
in
int3
mov
inc
out
xor
addl
pushf
mov
hlt
gs
imul
xor
addr16
push
rclb
loope
ja
fmull
cmp
push
adc
mov
mov
insb
cld
repz
sarb
shll
mov
push
imul
push
jge
mov
mov
mov
imulb
mov
pop
add
lock
hlt
xchg
fimuls
jno
cmp
push
aam
fisubrs
inc
sbb
fcompl
lock
and
out
adc
cmc
sbb
push
out
out
mov
arpl
dec
andl
sarb
add
mov
data16
repz
mov
mov
pop
out
xchg
shrb
push
mov
xchg
pop
rorl
mov
pushf
mov
cmp
cmpsb
gs
add
push
ret
jl
and
pop
lea
ljmp
cmp
into
mov
call
movl
add
jne
adc
xchg
fdivl
ja
pushf
rcrb
inc
sub
jg
inc
adc
lock
sbb
fmulp
mov
ror
cmp
cwtl
pop
sub
cmp
cs
test
out
mov
push
dec
push
out
xchg
xchg
aas
outsl
clc
fsubrs
or
jecxz
sbb
rcll
in
mov
or
leave
xor
test
lods
pop
xchg
stos
sbb
add
lods
mov
ds
dec
aas
dec
stc
lods
les
fadds
mov
out
out
lahf
popf
and
mov
dec
ljmp
jo
inc
test
fsubrs
pop
adc
xchg
jle
cmpsl
daa
cld
stos
xor
mov
xchg
stc
fdivrs
push
outsl
dec
cmp
jo
xchg
sub
cltd
and
mov
add
cltd
lgs
popf
data16
out
dec
enter
ljmp
push
push
push
cmp
lock
data16
out
mov
outsb
adc
out
mov
pop
xor
imul
mov
add
insl
leave
mov
addr16
mov
xor
lock
insb
fdivs
mov
inc
add
or
sub
and
sbb
in
rcrl
ja
mov
push
adc
insl
nop
mov
cs
mov
enter
mov
pop
xchg
dec
pop
dec
mov
hlt
aad
out
mov
inc
inc
ret
sbb
inc
jmp
loopne
mov
adc
push
push
mov
sbb
jo
ljmp
andl
dec
jmp
repnz
mov
and
repz
cmp
lcall
lcall
sub
test
cmp
pop
loopne
movsb
gs
adc
mov
test
loope
pop
mov
jo
sbb
movsb
iret
popa
scas
ja
mov
sbb
lahf
stos
loopne
cli
push
cltd
pop
adc
sub
cwtl
test
jae
dec
jl
sbb
lods
gs
rcll
stc
imul
xchg
ljmp
mov
jp
mov
imul
sbb
dec
xchg
push
lods
dec
adc
icebp
xchg
inc
scas
arpl
outsl
data16
imul
imull
jle
xchg
or
subb
in
lea
hlt
or
out
xor
stc
xor
jbe
cmp
push
test
cmp
popa
xchg
subb
mov
cmp
in
aad
sahf
push
or
cli
jmp
lret
or
push
inc
cmp
addr16
lahf
mov
add
push
adc
xchg
mov
xchg
push
xor
pop
push
and
data16
mov
insl
inc
sarl
fldenv
idiv
mov
and
clc
fcompl
pusha
xor
adc
aas
loopne
aaa
push
dec
mov
call
and
fnstcw
push
insl
xor
mov
mov
sbb
ja
test
mov
lods
sarb
outsl
in
pushf
lret
insl
aas
add
ret
inc
mov
popf
jp
mov
cmpb
sub
aas
mov
cmp
inc
dec
add
jp
sbb
lret
dec
jne
int
mov
xchg
sub
or
dec
add
leave
fdivrl
outsl
arpl
xchg
pop
lahf
int
pop
xchg
mov
rorl
jg
test
mov
mov
js
mov
cs
orl
sbb
xchg
pop
mov
lock
ja
dec
mov
bound
call
pop
or
jecxz
or
scas
sub
xor
sub
sbb
aad
subb
cmp
das
icebp
push
push
mov
test
js
adcl
xchg
std
and
imul
outsl
jmp
daa
mov
adc
jg
jle
test
imul
cmp
xchg
xchg
xchg
sahf
inc
loop
mov
adc
sbb
xor
inc
shl
mov
cmp
outsl
and
xchg
imul
add
in
stc
push
xchg
mov
outsl
repnz
ljmp
mov
push
call
fwait
pop
and
and
inc
lods
add
push
fld
enter
cld
into
fs
jl
pushl
inc
or
mov
xchg
mov
mov
icebp
sub
jb
ja
iret
xchg
add
xor
sbb
aad
mov
sbb
jmp
cmp
push
mov
sbb
out
mov
ret
mov
lahf
sub
in
fbld
rcrb
or
push
xor
arpl
dec
sti
mov
lods
pop
jns
incl
cwtl
mov
or
addr16
jg
add
add
call
jl
jl
fwait
mov
cwtl
mov
cmp
mov
pop
lcall
lds
fwait
in
mov
push
xchg
ret
sbb
sbb
daa
cmp
enter
xor
jae
pop
push
imul
xchg
sub
or
or
jns
cwtl
jle
shll
test
out
xchg
popa
inc
add
sbb
sti
shl
mov
mov
test
adc
or
xchg
sub
addr16
mov
mov
mov
in
xchg
xchg
push
rcrb
xchg
lods
imul
mov
dec
popa
add
sar
shrl
lock
imul
mov
mov
inc
adc
test
xchg
mov
pop
enter
ret
insb
lcall
mov
jecxz
hlt
and
repnz
orb
adc
xchg
insb
aam
pop
popa
and
iret
jmp
mov
and
sbb
xchg
leave
or
adc
outsl
mov
lock
aaa
or
in
mov
mov
mov
adc
daa
clc
hlt
jne
ja
xchg
sub
cmpsl
sbbb
je
cmp
cmp
mov
mov
mov
inc
xchg
pop
pop
in
adc
aaa
pop
bound
inc
ja
xchg
adc
ljmp
vfmsubaddpd
in
popf
and
xchg
addr16
jb
inc
xchg
inc
pusha
fcompl
adc
jae
inc
rorb
mov
daa
push
jbe
insb
and
jle
addl
sub
idivl
and
push
xchg
stc
fwait
cmpsb
dec
sub
cmpb
fcoml
xor
push
aad
scas
jo
push
cmpsl
stc
pop
imul
fwait
dec
mov
aas
sahf
and
xchg
sbb
aas
js
sti
jb
xchg
add
shlb
imul
and
loopne
mov
loop
pop
cmp
adc
aaa
and
dec
enter
xor
mov
mov
mov
lret
push
into
outsl
popf
mov
jnp
call
push
cmc
dec
xor
jne
ds
andl
dec
pop
mov
outsl
xchg
jnp
and
insb
push
push
mov
sub
roll
sub
imul
jp
in
js
jmp
js
mov
sbb
add
scas
dec
add
sbb
mov
fisttpl
fwait
sbb
jns
dec
movsb
mov
ret
inc
sub
stc
push
cld
dec
xor
xchg
mov
push
lods
fiadds
inc
aaa
ret
daa
jecxz
and
push
cli
and
pop
fwait
aas
push
rcl
test
dec
or
mov
movsb
pop
cmpsb
jle
pop
test
and
push
or
in
stc
jae
jb
cmp
pop
movsb
xchg
mov
jne
fdivs
cld
dec
sbb
mov
bound
pushf
orl
cmp
ja
xor
push
into
int3
jmp
xchg
adc
xchg
jmp
jo
push
add
jl
shl
enter
mov
cltd
iret
ficoms
aaa
mov
push
dec
out
dec
jb
mov
scas
dec
sub
repnz
dec
enter
pushf
push
cmp
add
in
enter
mov
push
and
jge
test
cmpsl
push
into
jl
into
pop
jg
cld
mov
cmp
lret
mov
sbb
push
pop
lea
sahf
ret
dec
pop
jnp
int3
push
mov
jl
iret
push
push
addl
enter
imul
add
sbb
jae
cmpb
mov
in
push
lcall
cmpsb
and
in
pop
ljmp
push
stc
jl
push
and
dec
jno
mov
dec
add
jl
fbld
sarl
xchg
shrb
pop
or
fwait
hlt
add
push
pop
and
loop
je
bndstx
and
mov
imulb
repnz
mov
into
lcall
xchg
enter
addb
mov
inc
push
insb
leave
pop
pop
pop
imul
lock
inc
roll
sub
dec
jb
stc
repz
test
push
jecxz
cmp
outsb
ja
cmp
sahf
popf
mov
mov
jmp
dec
mov
cwtl
fisubl
pop
lods
cmp
shlb
incb
lods
jno
sbbl
jl
test
adc
test
inc
shrl
dec
push
adc
cmp
push
cld
movsl
dec
lcall
inc
and
push
into
out
pop
push
in
jmp
test
nop
dec
js
push
daa
sbb
addr16
pop
popa
hlt
jbe
inc
imul
mov
imul
xchg
sbb
imul
pop
or
adc
pop
push
mov
enter
sub
imul
movsb
push
xchg
pop
jecxz
in
fistpl
add
push
mov
sbb
push
and
mov
pop
dec
lock
sub
xor
test
jnp
mov
test
lock
dec
push
push
xor
xchg
fnstsw
pop
sub
clc
mov
mov
mov
cmpsl
pop
loope
push
popa
test
mov
fbld
scas
push
adc
xor
mov
mov
jp
mov
icebp
lret
arpl
or
mov
sub
lods
into
xor
sbb
pushf
pushf
and
inc
dec
sub
enter
mov
xor
leave
or
fcompl
push
sub
mov
add
ds
and
out
xchg
aas
es
or
mov
cmp
mov
leave
aaa
add
dec
clc
andb
les
mov
and
push
add
fnstenv
push
shll
ret
sahf
lea
xor
xchg
inc
xchg
outsb
jns
addr16
fs
daa
mov
call
into
data16
in
movsb
push
and
sub
lock
cmc
and
iret
hlt
add
jle
pusha
leave
les
mov
mov
scas
push
in
or
imul
data16
mov
nop
je
jecxz
adc
mov
ja
out
bound
es
ficoml
roll
imul
and
sub
add
xchg
cltd
int
inc
data16
scas
mov
pop
push
mov
hlt
mov
push
xor
jmp
fcompl
lret
pop
mov
jecxz
adc
add
push
packuswb
and
aas
cwtl
movsl
sbb
aad
iret
in
lahf
lcall
rcrl
inc
mov
sahf
mov
adc
inc
repnz
jns
nop
sub
mov
test
push
into
push
push
lea
inc
mov
cmp
pop
or
cld
movsl
jmp
shll
lret
push
dec
pusha
mov
xor
lret
inc
pop
adcb
mov
inc
xchg
data16
clc
fcos
out
add
and
pop
iret
loop,pn
es
mov
mov
lea
mul
outsb
orb
les
repz
sahf
in
sbb
lcall
test
stc
imul
pop
imul
mov
dec
jo
movsl
test
sub
pop
test
mov
std
fdivs
mov
aaa
movsl
mov
inc
xchg
outsl
loop
cs
out
lods
fnop
mov
cmpsb
sub
repz
imul
add
push
popa
or
inc
sub
cmp
imul
add
mov
xor
out
xchg
fdivs
data16
movsl
dec
sbb
scas
xor
movsb
mov
ret
icebp
lahf
and
stc
jnp
add
mov
cmc
iret
ss
repz
sub
in
inc
push
xchg
jecxz
imul
orl
mov
mov
xchg
mov
fwait
daa
inc
rcrl
arpl
push
fwait
pop
push
mov
inc
and
mov
add
pushf
mov
jno
in
cmpsb
sahf
jb
hlt
test
push
sub
fwait
cli
mov
cvtpi2ps
xor
out
fcoml
das
pop
adc
addr16
mov
stc
push
addr16
or
leave
pop
mov
xchg
sbb
imul
jbe
pop
xchg
push
sahf
sub
repnz
pop
ja
int3
dec
jno
xor
test
aas
add
push
cmp
or
shlb
push
notl
pop
icebp
jg
sub
mov
mov
xor
sahf
pop
nop
mov
mov
mov
pop
test
adc
cwtl
cmp
jns
jo
xor
nop
aam
out
push
f2xm1
adc
es
aas
idivl
imul
movsl
adc
sub
push
add
test
imul
fimuls
add
fimull
insb
sub
or
lea
sbb
int
fwait
enter
lcall
in
mov
cmp
int
fnstenv
imul
sub
movb
hlt
or
sub
test
cmpsl
lods
ret
iret
or
imul
and
lahf
and
jb
pop
jae
std
fistpl
fstps
es
push
enter
inc
stc
jns
iret
pushf
bound
xchg
add
icebp
cmpsl
ret
or
push
push
cltd
pop
sahf
movaps
hlt
jmp
ds
inc
sbb
ja
mov
push
fstpt
adc
xchg
mov
jbe
gs
push
popa
pop
ja
lss
imul
cmp
mov
ja
jno
test
lcall
adc
mov
inc
jae
mov
push
xor
mov
mov
cltd
in
cld
lock
fcomps
adc
out
or
mov
les
push
aas
inc
insl
outsl
lcall
mov
adc
int3
rclb
fisubs
nop
add
in
inc
mov
pop
mov
das
dec
outsl
scas
cwtl
sti
sbbb
mov
rolb
mov
mov
addr16
lea
add
subl
addr16
cmpsb
popa
stos
cmc
pop
je
sub
mov
add
outsb
dec
stc
sub
push
movsb
lods
xor
repz
xchg
outsl
and
ja
fcompl
in
inc
push
or
jecxz
pop
sti
rol
push
mov
sub
xchg
cmp
cmp
and
add
sbbl
setns
mov
mov
or
gs
aad
adc
sti
and
xor
pop
fsubrl
cmp
or
cwtl
add
pop
adc
mov
push
outsl
jnp
jno
sub
adc
mov
ja
add
mov
enter
sbb
aaa
repnz
movsb
nop
jns
mov
lock
test
mov
popf
adc
sbb
push
sub
mov
fwait
sbb
adc
cmpsb
xchg
ljmp
loopne
sbb
and
push
rorb
xor
sarb
rorb
ja
mov
jecxz
int
xchg
xor
jnp
int3
lds
pushf
fwait
daa
mov
fisttpll
push
outsb
xchg
mov
fidivs
test
inc
mov
push
icebp
pop
xchg
and
or
flds
push
jno
and
dec
inc
imul
pop
ja
daa
cwtl
sbb
and
mov
cld
adc
je
push
sub
mov
or
pop
mov
inc
push
inc
add
cwtl
push
sub
jae
and
mov
imul
pop
call
lea
stos
mov
leave
mov
in
cmpb
xor
lock
ficoml
mov
fwait
push
xor
inc
lret
imul
jae
imul
pop
scas
orl
daa
mov
adc
outsb
or
cmpsb
subl
clc
jb
test
inc
test
into
sbb
or
test
notl
and
xchg
lea
adc
mov
shlb
inc
int3
jae
jecxz
dec
mov
xchg
lods
and
add
dec
mov
loopne
sub
jo
mov
mov
subb
ret
cmp
xchg
loopne
inc
sub
fwait
ds
int3
cmp
pushf
xor
dec
js
out
cmpsl
jecxz
movsb
cmp
push
daa
sub
filds
lea
jle
jmp
dec
dec
inc
in
data16
outsb
push
int
mov
xchg
xchg
dec
push
pop
jo
push
sti
lcall
dec
cmp
out
dec
testb
sbb
andb
fld
xchg
outsl
mov
push
mov
sbb
xchg
inc
out
enter
xchg
clc
cmp
push
dec
push
sub
daa
lea
add
pop
push
or
lcall
movsb
popf
jbe
jge
out
inc
insb
pushf
into
push
sub
mov
out
or
cmp
aas
pop
and
fwait
lret
aas
xchg
push
jne
movsl
jne
jl
les
es
arpl
xchg
xor
push
mov
mov
adc
jo
enter
mov
pusha
aad
and
sbb
lea
xchg
cmp
test
push
test
ret
cmp
cmp
xchg
pop
mov
pushf
jg
into
aas
xor
push
or
pop
jecxz
sahf
jb
rcrl
rcrl
sbb
jmp
mov
dec
xor
imul
into
call
sbbb
mov
xlat
imul
movsl
xorb
jbe
fidivs
adc
mov
repnz
push
mov
aad
stos
or
fldt
sub
jne
clc
fbld
mov
jae
mov
fidivs
out
jb
into
xor
in
sbb
mov
pop
aam
subl
pop
mov
movsb
ja
imul
rorb
adcb
ret
xchg
dec
lcall
jmp
xchg
jp
pop
mov
mov
pop
rcll
jo
shlb
mov
lods
push
xchg
sbb
or
or
inc
push
dec
cld
lock
sahf
mov
pop
jecxz
leave
xchg
add
aaa
into
and
mov
inc
push
add
mov
js
inc
xor
xchg
sub
pop
mov
sub
and
xchg
rorl
clc
pusha
xlat
pop
insl
pop
inc
mov
adc
dec
pop
pop
test
cwtl
loope
lods
jbe
push
lcall
pop
add
fwait
mov
pop
arpl
inc
imul
jecxz
roll
inc
aas
lcall
in
mov
int
sub
or
push
idiv
test
je
mov
in
pop
mov
push
repnz
popf
cmc
mov
dec
cwtl
and
popf
in
xchg
ja
mov
xlat
push
sbb
adc
push
mov
je
mov
mov
ja
rorb
mov
icebp
mov
daa
pop
lock
jno
sarb
inc
and
jmp
pop
sbb
mov
scas
add
es
add
inc
int3
cld
pop
lock
sbbb
mov
addl
fbld
xchg
cmp
cltd
mov
rolb
scas
mov
dec
cld
mul
andl
xchg
movsl
jmp
outsl
mov
add
fwait
and
aad
daa
out
pop
into
ja
nop
cmp
imul
push
aam
cmc
and
mov
mov
jp
jne
testl
sti
dec
push
push
mov
pop
xchg
dec
sbbb
imul
mov
adc
dec
fdivl
je
push
lret
lret
addr16
jns
jle
or
into
sti
aas
mov
mov
mov
push
mov
jg
push
and
cli
mov
ss
xchg
shrb
jb
popa
cmp
fs
movsl
xchg
cli
ret
pop
aas
pushf
lods
sbb
inc
mov
xor
orl
mov
ja
arpl
pop
push
sub
fwait
pop
push
dec
and
sbb
add
subl
cmpsl
pop
dec
pop
xchg
cmp
or
or
loope
and
dec
inc
sub
dec
es
pop
and
daa
sti
stos
pop
push
das
test
xchg
lods
repz
mov
imul
dec
lds
push
jecxz
jb
mov
fiaddl
inc
jl
cmc
xchg
imul
repnz
sbb
stc
setne
fwait
xor
out
sub
xor
xchg
mov
cmc
or
repz
lds
sti
lret
sbb
xor
dec
adc
mov
adc
cmp
stc
hlt
mov
push
and
in
mov
icebp
mov
cmp
pushf
rcrb
add
and
mov
inc
icebp
testl
cmp
mov
fwait
ja
test
xor
add
jbe
sub
adc
sub
int
fnstcw
icebp
xchg
and
test
cmp
xchg
jg
or
ss
cmp
lahf
das
shrl
sbb
addr16
mov
add
movsb
lahf
sahf
push
pop
enter
lcall
adc
pushf
mov
outsb
cmc
fsubs
fnstsw
imul
push
cmp
sbb
lock
rclb
inc
sub
and
orb
dec
in
cmp
sub
addb
mov
pushf
ss
or
push
stc
roll
mov
inc
dec
jns
jp
stos
add
sub
mov
mov
lahf
mov
dec
rcrb
imul
aam
popf
insl
mov
clc
and
ja
insb
les
xor
lock
test
sub
stos
fstpt
jecxz
cmp
aad
test
imul
in
addr16
icebp
adc
pop
inc
mov
ja
push
push
je
in
inc
pop
cli
dec
mov
or
xorl
out
or
nop
cmovp
hlt
mov
xchg
stos
in
fldt
push
rolb
lret
out
jl
mov
mov
mov
inc
flds
inc
sbb
and
fwait
mov
out
fsubrl
cld
sub
sub
mov
inc
push
add
ret
shrl
clc
jns
test
xchg
dec
fwait
js
push
pop
lret
imul
xlat
mov
jbe
cmp
lahf
lods
fdivl
mov
cmp
rorb
arpl
jg
cld
adc
sti
inc
test
aaa
orb
rolb
fbld
cmp
xor
setno
les
imul
sub
ret
sbb
enter
inc
les
rorl
mov
icebp
or
mov
push
or
cltd
push
jle
adc
outsl
in
mov
mov
cmp
inc
cmpsb
pop
mov
mov
sub
clc
sub
icebp
fiaddl
mov
mov
and
jne
movsb
cltd
sar
xchg
cmp
in
sbb
mov
fidivrl
jmp
frstor
and
das
sbb
sti
xor
mov
aas
arpl
xchg
repz
das
xchg
stos
mov
mov
mov
cli
add
adc
ret
inc
int
or
fwait
arpl
cli
inc
push
testl
subb
push
cwtl
add
insb
lds
lea
push
imul
test
xchg
pop
sub
js
out
mov
xchg
or
lock
stos
sbb
addr16
mov
add
and
and
lock
repz
mov
fisubs
imul
add
cmp
fistpll
mov
sbb
imul
daa
lea
cltd
rcll
repnz
xor
sbb
fldcw
jbe
leave
pop
mov
and
into
mov
push
je
lods
or
test
jmp
cmp
addr16
fs
push
and
pusha
mov
or
or
les
mov
imul
shl
arpl
jnp
repnz
cmc
imul
cmpsl
jns
mov
lock
ficoml
cmp
ja
addr16
faddl
or
xchg
stc
adc
clc
inc
pop
xlat
xchg
pop
mov
xchg
and
cmp
sahf
sbb
notb
pop
andb
jae
clc
push
sbb
push
pusha
lock
leave
enter
dec
push
gs
ret
leave
mov
xchg
or
adc
in
imul
in
mov
jae
xchg
shl
adc
push
ds
and
out
push
les
nop
cld
dec
repnz
and
test
xchg
imul
testb
inc
lcall
xor
adc
sub
je
test
fwait
andb
cltd
sbb
adc
bound
inc
out
adc
loopne
fs
mov
push
mov
pop
sbb
mov
xchg
or
mov
aad
xor
adc
push
rolb
or
adc
pop
pcmpgtd
ret
lret
cld
sahf
inc
cmp
or
ret
push
popf
orb
outsb
inc
fimull
imul
inc
gs
add
test
adc
rep
test
xchg
or
imul
add
jle
pop
add
mov
push
push
inc
pop
push
mov
sub
xchg
jno
dec
mov
or
addb
enter
cld
inc
stos
xchg
xor
sbb
dec
pop
sbb
lcall
sbb
hlt
icebp
mov
pop
in
je
mov
add
in
mov
fwait
dec
inc
xchg
mov
mov
cli
mov
and
movsl
and
lahf
fidivrs
sbb
sub
adc
adc
sbb
push
pop
icebp
es
cmp
imul
jmp
pushf
mov
xchg
mov
pop
scas
ja
push
inc
fnstenv
inc
pop
pop
cs
addr16
xchg
or
jecxz
sub
stc
rcrl
dec
rorb
dec
xchg
and
mov
imul
push
scas
mov
sub
lcall
adc
add
xchg
mov
jg
je
pop
lea
sbb
imul
rolb
mov
mov
sub
pop
imul
call
or
gs
mov
test
test
push
negl
or
xchg
daa
jnp
sub
aas
and
mov
add
sub
dec
stc
leave
inc
lret
setno
mov
imull
arpl
adc
inc
bound
repz
adc
pop
cmp
mov
test
pop
daa
shlb
adc
cmpsl
pop
inc
xchg
fstps
and
push
xorl
loopne
lahf
iret
and
jbe
jno
pop
mov
lds
mov
xor
js
lret
xchg
adc
cmp
fistl
mov
cmp
hlt
shl
adc
adc
or
push
add
cmp
enter
push
xchg
out
fisttps
fwait
xor
scas
mov
shlb
in
pop
mov
sahf
mov
dec
dec
pop
push
sub
or
imul
cmp
adc
pop
lea
pop
and
and
jecxz
or
lahf
nop
ja
loop
push
dec
call
repz
xchg
mov
lds
daa
xor
test
scas
imul
sub
nop
fwait
out
stos
sahf
and
aam
ret
push
push
xchg
mov
and
pop
sbbb
pop
daa
inc
or
jle
cli
and
dec
rcrl
addr16
fwait
pop
cmpl
mov
in
mov
pop
lret
test
mov
sub
mov
scas
cmc
adc
incb
sbb
dec
cs
sub
mov
push
pop
jns
mov
mov
out
xor
mov
xchg
adc
test
inc
push
test
lcall
dec
popa
or
mov
out
cmpsb
cmp
mov
call
add
arpl
sbb
lcall
mov
ss
in
fwait
aas
cwtl
fwait
xor
mov
dec
mov
sub
cmpsl
push
imul
sbb
mov
clc
fiaddl
dec
mov
sbb
and
fsubrl
outsl
jne
xchg
mov
xchg
hlt
mov
add
dec
incb
and
jp
push
xchg
and
pop
fwait
lret
inc
inc
and
mov
ja
mov
mov
std
pop
push
xchg
mov
mov
es
out
pusha
leave
mov
in
and
into
jns
scas
test
repnz
or
pop
lcall
mov
aam
inc
cmp
pushf
stc
add
push
pop
test
cs
fimull
mov
sub
push
les
idivb
icebp
fistps
and
mov
cmpsb
pop
pcmpgtb
or
into
in
fwait
add
and
and
cwtl
pop
out
lahf
ja
out
jge
cmp
sbb
dec
movsb
pop
adc
mov
leave
mov
inc
sub
lcall
xchg
mov
and
xchg
inc
pop
in
mov
mov
bound
cmp
add
je
sub
fwait
push
dec
push
push
or
ljmp
jp
aaa
dec
fisttps
and
lahf
adc
aam
sti
jmp
lods
lods
mov
imul
inc
add
mov
lea
icebp
add
repz
out
and
movsl
out
pop
xor
rorl
cmc
inc
je
sbb
inc
jno
mov
cli
movsl
jp
rcll
add
inc
pop
ret
mov
xor
cmc
fwait
add
mov
jne
in
sar
mov
out
loopne
clc
xchg
bound
dec
and
in
xor
inc
or
inc
sub
mov
shrl
fsubp
daa
sbb
and
aam
xchg
sub
rorb
rclb
push
mov
insb
mov
enter
pop
add
pop
pop
int3
jbe
test
in
fnstcw
cmp
cmp
cwtl
jnp
pusha
addr16
scas
pop
push
cmc
ja
cmp
pop
lods
cmc
push
ret
out
inc
ss
cmp
push
cmc
imul
cmp
cmp
dec
xor
jo
and
ds
or
in
jmp
out
dec
outsb
lea
xor
loope
fcompp
imul
into
test
mov
xchg
push
aaa
out
jecxz
mov
movsl
mov
imul
cmp
pop
into
add
shl
sub
add
xchg
repz
or
mov
and
dec
jmp
inc
test
push
cmp
cli
ljmp
jecxz
vzeroall
dec
loope
jne
jecxz
mov
data16
mov
jmp
lea
js
addr16
adc
ret
jne
aaa
insb
call
pop
xchg
outsb
mov
inc
inc
jl
test
jmp
sbb
adc
js
gs
pop
adc
push
jle
xor
imul
mov
js
mov
enter
jbe
pop
mov
stc
push
aas
dec
aaa
lock
faddl
sub
push
cmp
icebp
inc
lcall
fmulp
enter
xor
xor
jecxz
pop
outsb
push
es
add
std
cmp
stc
shrl
dec
mov
dec
xlat
inc
and
push
les
stc
adc
pop
sub
bound
or
out
or
mov
pusha
movsl
sbb
popf
fldcw
mov
mov
mov
gs
mov
sub
xchg
sbb
jns
or
jnp
add
mov
rcrb
mov
icebp
dec
lock
cmc
jle
f2xm1
or
sub
mov
add
push
inc
mov
ret
sub
sbb
mov
les
push
sub
out
xlat
mov
push
inc
mov
mov
call
and
sahf
loope
leave
in
cmpl
daa
xchg
pushf
cmpsl
lret
call
push
jg
add
xor
lahf
sbb
lock
test
and
xor
cmp
add
int
lock
lret
add
int3
mov
and
out
push
sbb
mov
mov
aas
mov
cmp
jg
xchg
bound
mov
je
test
lock
sub
cmp
xor
shlb
mov
pop
int3
test
in
push
add
daa
jle
leave
sub
test
inc
icebp
xchg
in
mov
movl
mov
fwait
and
aam
mov
push
adc
orb
jmp
lcall
test
cmp
add
inc
add
or
shlb
or
dec
jne
mov
xchg
inc
and
or
cmp
pop
mov
xor
pop
push
and
enter
imul
adc
jb
mov
xor
out
jnp
cld
sub
inc
aaa
call
mov
cmp
fstps
lds
shrl
mov
fsubl
jg
in
inc
invd
dec
dec
cmc
inc
outsb
cwtl
push
mov
in
sbb
les
test
fwait
pop
sbb
cmc
lods
repnz
insb
xchg
push
bound
dec
mov
xchg
insl
jns
pop
mov
mov
test
jp
add
imul
jnp
mov
lds
imul
push
cld
and
jno
mov
dec
in
pop
int3
jo
inc
sti
or
and
pop
pop
gs
fs
sub
push
sbb
mov
fwait
xchg
or
icebp
pop
mov
dec
mov
jg
test
shll
xlat
or
inc
sub
call
mov
incb
dec
dec
fs
cmp
pop
repz
add
push
cltd
cmc
aad
jnp
addr16
stos
lahf
sbb
fcompl
stc
inc
xchg
icebp
inc
jo
pop
out
decb
ljmp
fsubs
mov
daa
mov
sub
xor
dec
mov
test
je
mov
sbb
inc
and
add
adc
in
in
inc
jno
into
sahf
rorl
ret
bound
mov
sbb
cmp
mov
leave
inc
xor
ljmp
icebp
or
daa
mov
pushf
jp
es
sbb
mov
xchg
mov
push
inc
in
xor
jl
sbb
sub
lcall
or
xchg
and
in
ljmp
or
dec
pop
and
or
test
lcall
lods
jnp
call
imul
sub
fwait
mov
push
enter
stc
pop
xchg
add
cltd
mov
or
adc
out
movsl
mov
mov
pushf
push
pusha
ja
pop
outsb
push
mov
jne
dec
mov
mov
lods
fsubrs
imul
and
inc
fcoml
lcall
add
or
adc
mov
test
lds
mov
addl
jp
push
fsubr
js
jle
clc
mov
enter
lods
fadds
cmp
aas
and
add
iret
pop
rorb
out
je
fdivl
mov
out
xor
imul
mov
jae
ljmp
xchg
je
mov
lcall
mov
jle
add
sub
loope
push
cmp
mov
nop
jge
je
sbb
ret
dec
pop
lea
mov
clc
pop
mov
and
push
inc
imul
stos
ret
xchg
aam
and
xchg
divl
sbb
in
rep
clc
ja
fwait
test
mov
push
jo
je
push
sub
or
mov
jns
cmp
sbb
push
add
insl
pop
jle
xor
or
jmp
jnp
xor
or
stos
fisubl
popa
sbb
nop
mov
or
cs
popa
cmp
sbb
mov
pushf
or
mov
add
push
rcl
xchg
mov
daa
adc
mov
out
push
mov
mov
stc
dec
aaa
dec
mov
inc
push
dec
pusha
adc
out
mov
push
cld
aaa
and
test
jmp
shrl
mov
insl
aas
mov
push
fidivrs
into
outsb
cwtl
aam
imul
sub
imul
rorb
lcall
pop
jecxz
adc
les
cmp
lock
es
jge
les
push
push
adc
pop
cmc
int3
dec
jg
sahf
lods
adc
sbb
sbb
imul
enter
popf
and
jle
sahf
cmpsb
in
test
call
icebp
nop
lds
pop
cld
int3
dec
in
xchg
sbb
xchg
icebp
insb
sub
add
dec
mov
pop
cmp
leave
test
inc
jl
ret
subl
push
shl
repz
aas
jecxz
jne
ret
xchg
dec
aam
mov
mov
mov
repnz
ret
xor
cmp
fwait
mov
rcll
in
xlat
sbb
lret
cmp
movsb
clc
setb
ret
fwait
jns
mov
je
adc
frstor
dec
cwtl
mov
jmp
mov
lods
adcl
lods
mov
xchg
stos
fisubl
repz
xchg
iret
push
pop
mov
and
push
out
fldcw
sbb
aam
mov
adc
mov
push
fldl
xor
or
and
orl
in
sbb
mov
icebp
mov
or
or
inc
xor
mov
imul
movsb
dec
push
cmp
gs
ss
cwtl
fwait
je
inc
mov
cmp
add
jecxz
and
dec
sti
jb
sbb
stc
push
mov
mov
nop
push
sarb
and
leave
sbb
dec
nop
sub
das
cmp
push
lods
mov
daa
mov
in
push
dec
sub
and
dec
and
je
mov
inc
adc
pop
sbbb
imul
jo
sub
push
inc
fcomi
xchg
es
lds
inc
pop
add
ljmp
inc
les
test
faddl
fcoms
cmp
and
fistl
pop
insb
push
adc
mov
pop
subl
mov
lcall
popf
and
mov
sbb
scas
out
sahf
in
mov
mov
push
dec
imul
and
jecxz
pushl
int
out
cmp
cmp
pop
pop
push
test
jp
clc
jns
rolb
dec
std
aaa
sub
cmp
in
dec
lret
add
pop
or
push
adc
psraw
sub
fwait
ss
xchg
xor
jno
mov
xchg
imul
xchg
inc
data16
out
clc
ficoml
lods
leave
gs
add
pop
fbstp
imul
xchg
xchg
dec
xor
test
inc
pop
inc
push
shll
lea
movsl
or
mov
inc
imul
jp
push
fs
mov
outsl
and
sahf
xchg
adc
inc
push
addr16
mov
dec
mov
arpl
sahf
sub
out
out
xchg
loope
add
fidivl
shlb
mov
mov
ret
out
scas
daa
jnp
xor
xor
xchg
or
adc
cwtl
ljmp
add
fistpll
bound
hlt
sahf
leave
inc
ja
sub
fwait
test
in
add
and
adc
fisubl
mov
enter
add
sbb
mov
sub
mov
fcompl
and
stc
mov
add
es
xchg
into
push
stos
aas
fs
fdivrl
test
sbb
add
filds
mov
push
fwait
shl
push
adc
mov
in
mov
mov
lock
mov
cmp
and
and
cmp
inc
ror
xchg
sbb
push
imul
mov
push
adc
mov
orl
dec
shll
push
scas
test
stc
mov
jecxz
enter
fstpl
push
in
push
in
out
test
dec
cltd
and
orl
ret
inc
xchg
sbb
mov
push
lods
cmp
jno
dec
xchg
pusha
cmp
ret
cltd
and
mov
jmp
xchg
sub
cld
pop
cwtl
mov
imul
xlat
pop
jns
add
daa
cmp
fstpt
add
inc
fidivrs
mov
sbb
incl
int
mov
shll
push
add
mov
clc
fwait
and
aad
mov
pop
dec
mov
jp
lcall
call
mov
in
dec
dec
mov
dec
orl
pop
and
or
icebp
fs
push
dec
fwait
pop
inc
push
add
incl
outsb
mov
xor
hlt
sarb
repnz
xchg
and
inc
sub
push
stos
xchg
stos
imul
imul
add
imul
mov
sbb
xor
call
icebp
mov
nop
xchg
sub
pushf
xchg
or
rcl
rcrb
mov
mov
ret
mov
and
fcompl
movsl
pop
leave
shlb
test
dec
call
adcl
cmp
adc
push
out
nop
inc
sub
fiadds
pop
jns
outsl
xchg
jae
xor
jmp
orl
dec
imul
cmp
add
enter
inc
dec
dec
pop
ret
ds
test
aaa
xor
pop
imul
pop
and
mov
or
cld
mov
push
cmpsb
test
fmul
mov
insb
lock
ficomps
imul
and
push
outsl
pop
mov
nop
xchg
inc
mov
gs
jg
and
dec
mov
nop
dec
mov
lock
stos
mov
xchg
dec
and
and
pop
jle
add
add
pop
ja
sbb
dec
sti
add
pop
cmpb
mov
mov
repnz
subb
add
fsubrl
lock
xor
out
add
pushf
aaa
push
out
lcall
xchg
nop
adc
hlt
gs
xchg
call
jl
xor
into
pop
and
mov
adc
mov
mov
sbb
or
cmc
or
push
jecxz
sub
stc
jl
sbb
scas
int3
jecxz
enter
xchg
inc
aas
cwtl
inc
xchg
clc
ja
or
adc
cmp
arpl
insl
popa
data16
add
insl
inc
popf
push
mull
int
push
enter
pop
jno
xchg
int
aaa
daa
xchg
cltd
in
and
pop
cld
add
cli
xchg
jle
movsb
in
cmpl
inc
mov
xor
push
sub
test
int
jecxz
inc
mov
sbb
stos
add
outsl
adc
jo
fwait
inc
and
pop
lret
ja
mov
push
bound
popa
mov
jae
aaa
out
test
rolb
int3
test
xchg
js
dec
push
mov
cmc
aad
xchg
mov
xchg
ficoml
push
jno
or
repnz
sub
imul
xchg
xchg
pop
mov
jecxz
pop
scas
mov
enter
imul
mov
test
aas
sbb
clc
sub
cmc
ret
int
and
jmp
repnz
mov
jo
mov
sbb
repnz
or
cwtl
sub
sub
stos
out
pushf
imul
push
adc
jo
call
adc
dec
cmp
xor
adc
aas
lret
and
or
sbbl
pop
jno
mov
mov
jmp
lods
inc
cmpsb
lahf
push
jecxz
and
cmp
les
inc
mov
inc
scas
jns
add
and
test
ja
insl
fidivs
sub
lcall
test
inc
loopne
nop
loope
lods
or
cwtl
sbb
ret
aaa
push
adc
fdivrs
fsubrp
inc
dec
test
mov
hlt
push
adcb
cmpsb
pushf
push
mov
pop
sub
das
fdivs
inc
cmp
arpl
sahf
out
adc
imul
test
cmp
lods
aam
std
clc
mov
mov
stos
xchg
call
cld
push
cmp
outsl
pop
xchg
cmpb
jle
fsub
xor
aad
mov
mov
jb
fimuls
jb
and
mov
cmp
xchg
pop
mov
xor
lods
fcmovne
test
loopne
jb
arpl
jmp
inc
cwtl
sahf
fwait
test
imul
pop
jns
ret
scas
inc
jb
lret
pop
push
sbb
outsl
xchg
in
int
jg
into
push
lea
imul
and
ja
test
dec
push
fmuls
pop
sub
inc
or
call
pop
sub
inc
add
repz
repnz
push
cmp
mov
inc
mov
xchg
xor
stc
sbb
pop
jne
mov
enter
popf
out
mov
sub
repz
cmp
ljmp
mov
sub
jns
andl
es
inc
xor
jns
add
addb
lds
sti
dec
rorb
mov
adc
stc
pop
enter
aaa
cwtl
mov
mov
jb
xor
outsb
ficomps
ss
xchg
mov
sub
sub
sbbb
push
adc
and
loopne
scas
es
repnz
inc
inc
jno
stc
fcompl
inc
jns
lods
push
mov
pop
insl
or
mov
imul
ret
mov
cmp
mov
es
fwait
add
sub
std
lock
fprem
movsl
arpl
mov
and
cmp
inc
dec
inc
add
insl
xchg
mov
aaa
pop
loope
push
adc
mov
push
aad
arpl
push
xchg
js
loop
mov
out
inc
aaa
cmp
xchg
inc
pop
aas
pop
dec
aad
mov
das
js
pop
out
cmp
adc
push
nop
into
sub
ljmp
xchg
xchg
and
es
pushf
std
add
mov
mov
mov
jg
leave
push
out
dec
lods
fdivl
mov
fwait
push
notb
enter
mov
ja
mov
push
aam
adc
loope
cld
sbb
imul
je
daa
pop
inc
shrl
mov
and
repnz
and
movl
mov
mov
int
mov
inc
pop
mov
mov
hlt
dec
xchg
flds
rclb
sbb
cmc
dec
imul
sahf
jecxz
push
mov
push
insb
aam
and
fcompl
imul
ffree
mov
std
dec
frstor
test
mov
ret
mov
shl
test
jne
dec
lods
fimull
adc
and
inc
pop
cmpsb
into
fbstp
mov
sarl
mov
adc
add
jns
test
pop
dec
insl
lret
aam
imul
loope
pop
pop
daa
mov
pusha
xlat
cmc
aam
sbb
hlt
xchg
mov
jl
push
xchg
sub
sbb
mov
pop
shrl
sbb
mov
inc
mov
dec
aaa
lods
test
in
push
dec
pop
sbb
int
xor
enter
pushf
sbb
les
xlat
cs
xor
xchg
sbb
inc
aaa
xor
sbbl
lret
cmp
or
or
scas
push
xchg
cli
xchg
pop
or
pushf
add
add
dec
pop
push
xor
lret
bound
movsl
daa
test
and
pop
out
incb
jnp
pop
fwait
adc
test
xchg
fnstcw
popa
inc
mov
xor
aas
or
test
cmp
mov
jl
and
into
xchg
cmpsb
outsl
xchg
sbb
mov
lock
icebp
movsb
and
jle
sbb
adc
lret
cmp
in
mov
jns
movsb
mov
sub
mov
cltd
adc
dec
xchg
pushf
mov
ja
or
inc
data16
mov
lcall
push
jmp
and
xor
or
push
adc
fdivs
imull
or
popa
add
nop
bound
mov
idivl
sbb
pop
outsb
push
cmp
xor
mov
insl
pop
inc
or
lcall
cld
xor
es
std
pop
lret
sub
mov
cld
movsl
jg
inc
xchg
xor
leave
lcall
aad
fwait
cmc
pop
inc
or
test
mov
cli
mov
outsl
dec
cmpsl
dec
push
insl
pop
pop
lcall
mov
pushf
rorl
mov
mov
push
ss
mov
pusha
cmc
arpl
or
jmp
or
cwtl
lea
shlb
dec
adc
andl
adcb
add
xor
xchg
sti
icebp
mov
leave
inc
addb
in
cmpb
inc
clc
cmc
sbb
cmp
popa
cltd
mov
adc
lcall
mov
pop
clc
jmp
inc
std
push
call
inc
mov
enter
and
xor
test
mov
jbe
dec
jbe
push
jl
hlt
push
lea
jns
fwait
or
cmp
xor
or
mov
dec
mov
rolb
js
lock
inc
cmp
push
cld
stc
imul
mov
mov
mov
addr16
push
imul
ret
xor
pop
jb
movsb
mov
jmp
xor
pop
ja
mov
xchg
lret
repnz
push
xor
dec
sub
loopne
xor
loopne
mov
pop
xchg
fwait
aaa
pushl
call
scas
mov
jbe
xorb
push
push
mov
mov
cmp
rorl
adc
scas
push
pushl
testl
mov
sbb
jo
lock
lahf
xchg
pop
ret
dec
add
push
fists
pop
cltd
and
push
fstps
mov
inc
shll
test
jmp
mov
pop
repz
loopne
ljmp
sub
ret
outsb
xchg
mov
dec
bound
xchg
inc
imul
inc
dec
std
cltd
test
push
mov
imul
fnstcw
mov
into
adc
push
push
sbb
and
jb
add
xchg
sbb
add
sahf
out
xchg
xchg
mov
inc
mov
dec
mov
aad
sbb
ficoml
push
mov
adc
enter
gs
xchg
mov
dec
sbb
xchg
and
jne
aam
adc
adc
add
jecxz
jne
cmp
lock
xchg
adc
emms
out
jp
in
mov
mov
push
xchg
in
and
mov
rclb
movsl
testl
outsl
sub
push
lock
mov
imul
test
cmpsl
dec
or
pop
lods
int3
ja
mov
dec
push
test
jae
push
idivl
sub
jo
leave
sbb
repnz
bnd
clc
mov
das
mov
test
stc
adc
sbb
loop,pn
push
lods
mov
adc
mov
mov
ds
jb
adc
lock
pop
fimuls
sub
divb
inc
repz
push
sar
aaa
pop
outsl
pop
int3
push
aad
sti
mov
out
jg
push
rcrb
fimull
jp
movsl
or
outsl
int
add
sbb
rorb
iret
lods
adc
fs
cmc
cmp
addr16
in
cli
stos
cmp
add
or
lea
push
and
pushf
cltd
rorl
in
inc
imul
sub
leave
and
cmp
xchg
xchg
iret
adc
mov
faddl
imul
xchg
mov
ret
cwtl
lahf
mov
and
mov
and
xchg
mov
push
add
arpl
dec
jp
xor
call
adc
rorl
clc
pop
orl
shl
lret
sbb
jno
mull
stc
inc
in
inc
ficoms
mov
repz
addl
inc
jae
jb
ds
jno
repz
mov
call
fstpl
rclb
mov
mov
xrelease
jbe
xchg
lds
scas
lods
and
jbe
or
cmpsb
ret
cmc
pop
test
outsl
or
nop
mov
lcall
ss
inc
adc
mov
mov
sar
fcoms
push
mov
out
fidivs
jp
and
add
xchg
test
and
mov
and
inc
mov
ja
lods
push
in
mov
cltd
or
dec
aad
test
xchg
push
inc
cmc
cmpb
cmp
push
or
mov
and
and
aas
xchg
movhps
andb
enter
xchg
pop
negl
xchg
pop
jecxz
in
aaa
sub
sub
out
or
enter
inc
sahf
push
mov
sbb
repnz
sub
dec
gs
xchg
sbb
mov
cmp
pop
pushf
inc
mov
sub
sarl
movsb
mov
enter
out
and
movsb
mov
lcall
pop
jl
xlat
ds
test
push
loop
mov
fistl
aad
fs
test
lods
jae
mov
push
sub
mov
lret
test
fwait
nop
mov
and
hlt
push
lds
addl
lret
push
ja
push
inc
test
rolb
sub
add
daa
es
push
xchg
das
cmp
xchg
add
out
sbb
iret
loope
xchg
pop
sbbl
mov
cmp
mov
or
sub
mov
pop
inc
or
jp
or
jno
int3
push
test
inc
pop
shrb
lods
imul
out
adc
sbb
mov
push
jl
sahf
adc
scas
jae
cwtl
and
das
outsb
enter
mov
shr
aas
jecxz
ja
add
cmp
sub
in
sbb
popl
push
mov
int
cmpsl
out
fimull
pop
in
mov
in
pop
pusha
mov
test
ficoms
je
fdivrs
push
and
ja
hlt
jns
outsl
jb
adc
push
daa
js
sbb
in
and
jmp
loopne
pusha
adc
pop
jmp
fwait
shr
sub
lret
dec
push
cwtl
adc
test
xchg
dec
outsb
or
cwtl
add
cwtl
je
pop
dec
lods
sub
fwait
pop
je
push
push
mov
fsts
addl
add
sbb
sub
xor
lcall
cmp
sbb
mov
cli
pop
xlat
or
push
shlb
dec
test
imul
popa
xor
pop
out
repz
testl
inc
push
ljmp
add
xlat
lds
mov
dec
mov
xchg
inc
dec
inc
je
mov
in
inc
jo
xchg
idivb
jo
mov
fcmovb
dec
out
pop
test
outsl
mov
or
inc
imul
and
inc
add
mov
mov
cmpl
ljmp
icebp
inc
lea
cmp
inc
cltd
enter
mov
das
pop
shld
imul
inc
xchg
jne
adc
imul
sub
stos
mov
mov
imul
cltd
cmc
int3
jle
sbb
and
call
ljmp
pop
shrb
aaa
xlat
stos
lahf
psllw
mov
rclb
dec
hlt
mov
int
dec
jge
stc
fsincos
nop
fwait
test
pop
aas
inc
test
xor
ret
and
inc
out
addr16
adc
xchg
cwtl
cwtl
rclb
cmp
mov
stos
mov
imul
test
mov
dec
fiadds
leave
or
bound
ss
sbb
out
call
xor
pop
push
aad
mov
jecxz
inc
pusha
neg
jge
sbb
movsb
pushf
jno
cmc
icebp
idivl
out
xlat
mov
mov
jmp
jmp
jbe
dec
aaa
jbe
sahf
inc
add
inc
lahf
lock
sub
movsb
mov
cmc
add
popa
sbb
ja
cmc
repz
dec
sub
arpl
aaa
add
sarb
adc
out
loop
push
fsts
out
into
mov
cmp
cmp
push
dec
testl
loopne
in
rorl
xor
insb
mov
sti
jne
add
sbb
pop
lret
aam
testl
mov
push
jmp
int
mov
fadds
fwait
popf
pop
ljmp
pop
mov
inc
insl
insb
sbb
call
cmp
test
add
dec
jg
sbb
std
jecxz
aam
leave
pop
nop
bound
cld
push
lods
dec
mov
mov
es
hlt
add
pushf
insl
addr16
movsl
stc
inc
sbb
add
xchg
into
fwait
addr16
ret
jae
and
push
mov
in
movl
dec
pop
cmp
dec
mov
fcoml
adc
mov
lea
and
dec
shr
add
cmp
push
imul
enter
ret
rorl
imul
xor
pop
int
fwait
leave
push
repnz
pop
or
cmp
dec
fsubr
or
mov
clc
test
xchg
fwait
cmp
or
cmp
jp
addr16
lea
sbb
sub
or
mov
lahf
movsl
je
push
cli
negb
add
repz
push
stos
fsubl
sub
mov
jns
mov
xchg
mov
inc
les
xchg
fisttps
je
ret
adcl
loopne
xchg
pop
inc
jno
cmpsl
loope
and
mov
xchg
and
dec
ficompl
xor
scas
pop
jp
jecxz
xchg
call
stc
mov
inc
cwtl
xchg
addr16
jb
fisubl
pushf
adc
test
rolb
loop
mov
faddp
sub
icebp
int3
inc
jp
push
xor
call
xchg
nopl
faddl
jp
movsb
pushf
imul
out
xchg
shrl
fs
add
dec
xchg
xor
rcl
out
repnz
jbe
mov
jl
mov
xor
rep
outsb
stc
lock
insl
push
xor
cmpsb
icebp
inc
sbb
push
hlt
jo
dec
inc
cmp
lock
add
loop
mov
cld
push
into
movsb
lahf
push
fwait
ret
sub
ja
adc
mov
jbe
dec
cmp
imul
out
test
dec
adc
mov
enter
aas
mov
popa
pop
xor
or
pushf
insl
lods
jg
xor
xlat
loope
inc
imul
call
lret
add
xor
xchg
sub
dec
loopne
mov
cmp
mov
push
add
dec
push
ret
adc
lods
xchg
stc
imul
in
mov
test
in
or
dec
fistps
dec
xchg
movsb
push
ret
test
repnz
pop
jae
jp
cld
sbb
lock
stos
rsm
lock
push
jne
mov
cld
push
loop
jl
mov
or
sbb
adcl
cltd
out
shl
and
cmc
into
jo
mov
add
shll
scas
enter
mov
mov
xchg
iret
pop
mov
mov
xor
inc
jb
and
sub
subb
push
mov
mov
sbb
fimull
aam
add
mov
rorl
adc
or
movsb
lods
xor
or
xchg
sbb
inc
push
pop
pushf
or
cmpsb
das
jp,pt
jl
xor
dec
cmc
fcompl
subb
lret
out
add
imul
imul
cltd
xlat
dec
or
add
adcb
push
lcall
call
bound
es
xchg
call
dec
push
clc
add
dec
mov
push
or
or
orl
mov
imul
add
mov
xchg
add
imul
pop
call
lahf
sbb
xchg
add
roll
cmpsb
push
icebp
lods
inc
fwait
rcrb
mov
cwtl
out
dec
mov
ljmp
mov
scas
and
andb
cwtl
and
jl
sub
mov
and
mov
adc
or
out
and
xchg
aad
arpl
mov
cmp
lds
and
fildll
lahf
imul
push
xor
and
inc
sub
and
mov
sarl
mov
push
movsb
or
mov
adc
pop
push
stc
fwait
and
in
inc
orl
sbb
fsub
dec
mov
rolb
bound
xchg
inc
test
push
xchg
add
mov
xchg
sbb
cmpsl
rolb
out
das
scas
push
je
dec
aam
test
dec
loopne
sub
lods
adc
jo
inc
push
lds
push
fs
fcmovnu
push
stos
dec
or
leave
mov
xlat
mov
pusha
sub
xor
imul
out
shl
add
shrb
mov
imul
inc
cmp
arpl
out
inc
dec
nop
ljmp
repnz
push
js
push
inc
int3
cmp
or
sbb
mov
repz
int3
test
call
das
or
push
add
pushf
clc
dec
addb
push
fmulp
out
pop
stos
xchg
arpl
imul
push
jge
mov
leave
push
push
enter
sub
xchg
mov
push
add
call
sbb
xchg
cmp
lea
xchg
or
mov
out
repnz
push
cwtl
scas
bswap
ret
and
cmpsl
pop
lds
rcrb
ss
daa
ret
dec
aas
ja
pop
xor
cmpl
imul
in
filds
jb
xor
mov
push
push
leave
inc
dec
push
mov
dec
xchg
xor
and
xor
rcll
in
aas
sub
std
mov
mov
jne
adc
daa
sbb
fcomp
in
lret
xchg
aas
lahf
decb
mov
push
fldenv
cmovb
mov
andl
lods
pop
or
divl
sbb
mov
jmp
addl
mov
fidivrs
fnstenv
mov
jne
mov
insl
cmp
mov
mov
mov
icebp
adc
or
test
xchg
lods
jnp
stc
adc
arpl
les
and
inc
mov
arpl
sbb
jl
rcl
mov
repnz
jecxz
sti
ret
subb
cmp
pop
pushf
cld
les
data16
jecxz
iret
iret
push
sbb
pop
mov
imul
fdivr
adc
sbb
cs
fstps
int3
dec
mov
scas
repnz
sbb
arpl
mov
jp
sbb
int
pop
pop
out
icebp
lahf
fsubrl
jle
push
data16
pop
push
les
mov
or
or
mov
mov
push
int
push
mov
cld
mov
fwait
adc
rorb
xor
mov
mov
xchg
outsl
push
sbb
idivb
pop
xlat
pop
adc
or
or
adc
jecxz
idivl
shll
imul
ljmp
mov
xchg
jae
add
test
incl
mov
inc
repnz
je
or
push
shlb
mov
inc
out
or
dec
adc
sbb
cmp
repnz
in
pop
and
sti
mov
js
fwait
xchg
sbb
out
and
push
sub
repnz
in
push
push
lahf
xchg
cld
lock
aam
fmul
ja
mov
xchg
cmpsb
and
push
mov
sub
dec
mov
inc
loopne
je
add
movsl
mov
movsb
xchg
jl
rcr
push
in
sub
addr16
out
inc
test
cwtl
imul
imul
add
hlt
aas
and
pop
cs
cmp
xchg
fwait
inc
adc
mov
subl
leave
out
arpl
add
repnz
adc
rcrb
push
jb
pop
sbb
insb
lods
and
loop
cmp
outsl
shrl
shrb
mov
cmp
outsb
adc
xchg
fmuls
lcall
sti
sbb
xor
addr16
insl
inc
pop
les
jg
mov
mov
mov
clc
imul
mov
lret
inc
arpl
adc
cmp
adc
cmp
xor
mov
xlat
loope
push
mov
adcl
mov
test
add
mov
dec
fcompl
stos
adc
in
rcrb
scas
pop
jnp
call
movsl
call
jmp
mov
shl
pop
sahf
mov
lds
push
mov
ss
dec
xchg
rolb
out
js
mov
stc
cmp
xor
pushf
es
jb
pop
test
inc
je
cs
sub
leave
out
popa
sahf
xor
or
mov
fwait
or
and
mov
xchg
xor
repnz
je
shl
stos
scas
iret
jbe
sbb
je
call
aas
mov
stc
xchg
andl
scas
es
es
int3
lcall
pop
cmpsb
mov
call
pop
int3
inc
ret
adc
inc
out
and
jb
cmp
fnsave
sub
gs
fnstsw
fwait
out
pop
loopne
cmp
das
cld
arpl
mov
cmpsb
pop
and
inc
icebp
push
je
lcall
or
flds
cmp
mov
jmp
cld
inc
inc
mov
jns
xchg
cli
mov
mov
lret
jecxz
testl
push
addr16
and
cmc
cmp
movsl
xchg
mov
scas
stc
xchg
mov
mov
sub
mov
add
sbb
inc
ja
imul
fs
xchg
xchg
mov
js
inc
mov
inc
test
jnp
mov
cwtl
movl
mov
rcll
xchg
daa
movsl
hlt
cmc
add
sbb
hlt
xor
lret
dec
adc
mov
rclb
imul
jecxz
sub
dec
das
fldl
outsl
and
jge
push
insl
adc
adc
insb
jno
loope
incl
icebp
and
jmp
or
aas
dec
aaa
ss
jle
pushf
movsl
shrb
adc
es
fsub
mov
out
mov
push
mov
fwait
dec
inc
out
mov
add
adc
mulb
sub
pop
test
fisubrs
lds
popf
mov
lret
add
or
lea
dec
push
dec
xchg
imul
enter
call
xor
test
lds
add
icebp
je
inc
and
inc
mov
mov
xchg
push
inc
les
inc
std
jmp
insb
xor
jge
sti
cld
lods
adc
xchg
fcmovnbe
mov
or
sub
in
fcomps
fs
sbb
cld
mov
push
jo
dec
mov
or
dec
stos
iret
pop
test
call
pop
subl
cld
adc
jbe
inc
adc
ret
out
fwait
mov
inc
pop
test
lret
jb
shll
dec
xchg
call
mov
pop
push
outsl
mov
push
jbe
mov
cmpsb
cmp
ja
sbb
jb
mov
push
dec
cld
lods
dec
sahf
outsb
imul
icebp
inc
rolb
dec
adc
cltd
sub
mov
pop
hlt
daa
repnz
cmp
pushf
xchg
repz
lods
cmp
cmp
mov
arpl
mov
xchg
or
mov
pushf
inc
arpl
xor
leave
sahf
sbb
jmp
adc
movsl
cmp
ret
add
pushf
xchg
xlat
jns
repz
jno
cmp
inc
fadds
mov
mov
ja
push
pushf
sub
in
xor
and
or
push
notb
sbb
mov
mov
ja
adc
sbb
inc
lcall
sahf
in
adc
dec
xor
push
mov
stos
dec
and
push
out
sub
push
cwtl
xor
mov
in
jg
pop
clc
pop
adc
adc
xlat
dec
pop
inc
stc
sbb
mov
mov
xor
inc
push
sbb
mov
dec
lcall
inc
cmp
mov
insl
orb
jne
dec
push
movsl
rcrl
xchg
cltd
and
inc
push
cltd
jo
int
inc
dec
inc
pop
add
lock
stos
ljmp
mov
pop
ja
fadd
lahf
adc
adc
cmp
imul
dec
jno
and
mov
shlb
std
inc
push
mov
fcompl
pop
inc
imul
jno
mov
sub
and
scas
and
xorb
cmp
dec
rclb
daa
sub
jo
and
sub
lcall
adc
or
sti
pop
pushf
imul
mov
test
aaa
inc
out
movsl
jmp
and
cld
lock
inc
push
add
cmp
shll
pop
sub
and
dec
insl
cwtl
aas
les
mov
mov
xchg
sub
mov
das
pop
pop
gs
fsubrs
inc
adc
push
fs
js
mov
shll
mov
mov
or
leave
pusha
adc
mov
movsl
test
hlt
js
push
cld
cmpsl
imul
bound
jo
inc
mov
out
mov
in
xchg
xchg
mov
jnp
test
jle
xchg
inc
sub
push
test
sbb
add
popa
adc
mov
hlt
nop
stos
inc
ret
lcall
sahf
orb
jge
mov
mov
pop
push
cmp
add
sbb
sar
or
pop
loopne
pop
lea
insl
aas
sahf
cltd
rcr
push
jecxz
gs
cmpsb
mov
dec
cmp
add
adc
xlat
and
adc
imul
loopne
xchg
mov
adc
xor
mov
adc
fwait
push
or
shlb
cld
push
lock
mov
rolb
jp
jle
mov
mov
sub
iret
pop
test
sub
push
push
push
xor
mov
rorl
jo
rorl
mov
test
xchg
loopne
mov
pop
mov
xchg
jbe
test
shlb
add
or
pop
icebp
nop
leave
push
subb
add
sbb
push
mov
sub
sub
jge
fwait
jae
movl
jmp
daa
push
push
mov
xor
or
in
dec
xchg
or
xchg
dec
or
imull
fs
xchg
push
add
push
mov
shlb
mov
or
mov
daa
sbb
imul
xlat
xchg
push
mov
or
inc
out
mov
test
mov
mov
adc
pop
mov
pop
insl
pop
mov
mov
push
out
lock
aas
rcl
stos
ficoml
inc
pushf
outsb
pusha
mov
aam
sbb
in
insl
mov
mov
xor
inc
cmc
fs
mov
jge
xlat
outsl
mov
pop
push
xchg
lods
nop
push
dec
and
mov
mov
jnp
lcall
dec
out
mov
arpl
pop
lds
sub
fstpl
icebp
out
sahf
in
imul
xor
jl
push
fwait
cmc
int3
mov
mov
jns
scas
leave
or
adc
rcrl
jns
testl
imul
lds
or
nop
sub
jno
and
mov
inc
les
pop
nop
and
negb
add
cmpsb
or
dec
xor
andb
mov
dec
out
lcall
imul
xor
and
icebp
test
aad
out
and
pop
xchg
jmp
in
or
inc
imul
fwait
jns
cmp
cmp
pop
iret
in
js
pop
lods
mov
fists
push
mov
and
dec
and
xor
pop
push
pop
add
push
push
jae
scas
push
test
jo
test
aaa
cwtl
mov
fsubrl
sbb
jle
fucomip
aaa
pop
stc
imul
push
negl
inc
js
lds
jmp
aas
test
and
into
inc
lods
fmull
call
or
jl
push
pusha
loopne
mov
mov
inc
mov
insb
xor
add
in
add
and
daa
mov
push
dec
fdivrs
mov
inc
or
movsb
push
adc
cmc
and
jmp
mov
jmp
addb
leave
mov
nop
loop
sub
call
and
adc
sub
je
mov
sbb
test
test
dec
mov
add
mov
jle
xor
std
jb
fsubr
and
ret
push
jecxz
jecxz
imul
ds
mov
mov
scas
addr16
and
jno
and
gs
iret
xchg
mov
mov
push
imul
pop
clc
arpl
push
pop
movsl
mov
push
test
outsb
daa
mov
and
mov
mov
out
jecxz
nop
add
jnp
mov
cmp
insl
push
bound
push
xchg
int3
aaa
ja
in
lods
stc
lds
add
sub
mov
adc
jecxz
cmc
adc
loop
lea
add
mov
flds
mov
jns
xchg
addr16
mov
loope
je
and
dec
ret
mov
add
pop
xchg
cld
jl
jnp
inc
fsubl
ja
dec
orl
iret
mov
mov
cmpsb
outsl
sbb
mov
lods
sub
xor
lds
push
xchg
and
pop
out
jno
sbbl
xchg
imul
xor
xchg
cmpsb
or
imul
cltd
inc
mov
mov
mov
das
repnz
mov
in
and
pop
fwait
push
pop
rcrl
dec
xorl
mov
mov
fcmove
fnstsw
ret
pop
mov
or
mov
imul
push
iret
xor
das
fdivs
ret
push
lcall
and
decb
pop
sarl
mov
xchg
cltd
cmpsb
pop
add
xor
sub
jae
inc
cmc
outsb
jne
std
test
adc
push
mov
js
mov
jle
xchg
dec
push
fdivrl
or
test
orl
fisubl
add
cltd
and
mov
les
aas
cmp
cmp
stc
ja
push
mov
pop
xor
scas
jno
ljmp
cmp
pop
mov
push
pop
xor
nop
icebp
test
add
xor
outsl
addl
mov
jecxz
in
out
sbb
dec
pop
lea
je
inc
push
or
adc
adc
ja
and
sbb
and
nop
cmp
xchg
lea
jecxz
loop
pop
inc
in
jno
scas
pop
rolb
out
sbb
int
jnp
lods
dec
enter
push
xchg
jge
xor
adc
inc
fidivrs
sub
push
hlt
pop
aaa
call
cmp
jecxz
rcrl
inc
jns
inc
jmp
and
push
mov
mov
repz
pop
cwtl
shl
shl
xor
mov
dec
fwait
pop
sbb
daa
add
push
rclb
xor
lret
adc
lock
hlt
mov
movsb
iret
repnz
xorb
iret
inc
test
inc
fwait
outsb
shrb
aas
push
addl
push
pop
in
rol
sub
sub
push
sbb
outsb
sub
mov
fs
popa
sbb
ja
dec
stos
fcmovu
jno
sub
mov
call
jo
jg
stc
pop
test
dec
frstor
and
lret
cmp
pop
pop
cwtl
insl
dec
fldenv
enter
jge
ja
mov
and
mov
movsb
xor
loope
repnz
inc
pop
mov
mov
hlt
inc
jp
ficompl
add
std
cmc
mov
mov
xor
in
xchg
mov
fcoms
inc
test
imul
out
push
inc
and
inc
mov
push
adc
fwait
dec
inc
out
xchg
scas
inc
xor
xor
inc
or
add
call
pop
add
negb
imul
dec
fcoml
andl
mov
dec
int
mov
push
push
pop
adc
push
movsl
test
xlat
shll
in
xchg
daa
in
mov
lock
fisubrs
aas
enter
push
pop
lods
pop
mov
es
fldenv
push
call
xchg
jb
sbb
gs
xor
stc
lret
cwtl
xchg
pop
scas
push
frstor
stos
mov
push
lahf
cmp
mov
lret
mov
pushf
mov
shl
or
nop
lea
fwait
mov
test
mov
push
int
fwait
push
leave
out
mov
ffreep
ret
cmpsl
push
repnz
movb
dec
fs
mov
imul
shlb
push
inc
js
cmp
cmp
inc
into
loop
dec
mov
cwtl
xchg
loop
imul
dec
sar
enter
inc
fdivl
sbb
mov
add
add
mov
sbb
xlat
popf
sbb
sbb
lock
push
repz
lea
push
popf
adc
aam
dec
mov
dec
push
inc
and
addb
lock
mov
js
pop
imul
pop
out
jg
xchg
xchg
sbb
pop
clc
jecxz
int
cltd
add
fs
mov
rcrl
out
repz
loope
cmp
and
int3
sti
ror
orb
dec
negl
adc
fdivs
adc
roll
pop
dec
xchg
leave
ret
dec
faddp
imull
xchg
or
test
imul
mov
test
jns
pop
or
test
jecxz
dec
call
aaa
loop
adc
mov
pop
scas
out
and
push
shll
aaa
bound
insb
dec
scas
fsubl
xor
add
xlat
xchg
lahf
push
fstl
in
cmp
call
out
inc
push
mov
sub
pop
push
mov
dec
in
mov
inc
call
add
cwtl
dec
aam
int
mov
inc
mov
ret
cli
mov
or
push
ja
mov
fwait
pop
movsb
xchg
dec
sti
out
mov
mov
add
cs
pop
out
int
pusha
mov
cmc
pop
jb
jne
adc
inc
push
adc
adc
hlt
ja
mov
or
push
mov
js
roll
cmp
dec
pusha
out
sub
mov
dec
in
outsb
adc
xchg
jb
ja
add
lock
mov
add
pop
push
dec
pop
std
subb
xchg
mov
mov
push
mov
rcrl
or
sub
test
in
icebp
push
nop
dec
adc
xchg
js
out
data16
jns
pop
imul
test
push
fstps
cmc
sub
imul
mov
pop
jo
mov
fimuls
out
ret
cmpsb
xor
push
xlat
inc
ja
rorl
mov
sub
jle
push
xor
lds
cli
ficomps
sbb
push
sub
das
lahf
jp
xor
in
add
xchg
test
movsl
out
mov
int
mov
les
imul
call
mov
js
outsb
outsl
rcrl
dec
mov
andl
imul
repnz
xchg
int
dec
out
and
and
popf
fs
lock
add
dec
push
das
push
movsb
add
test
pop
fcoml
mov
pusha
pop
push
pop
inc
aaa
mov
lcall
and
std
mov
movsl
aas
sahf
xchg
sahf
imul
clc
xchg
sar
cwtl
adc
mov
aaa
and
cmp
xor
mov
icebp
inc
lcall
test
inc
ss
fwait
xor
jne
adc
and
das
cmp
and
int
js
jecxz
jno
scas
cmp
or
sub
daa
or
sub
cmpsb
lods
fdivr
test
inc
mov
ficompl
sbb
or
lods
mov
add
cmpb
adc
jp
ja
repz
movd
sti
out
xchg
dec
pushf
mov
push
and
or
and
sub
pop
adc
mov
ljmpw
lods
or
mov
mov
push
sbb
push
adc
sbb
cmpb
pop
imul
lods
sub
or
lea
pushf
hlt
or
sbb
arpl
lret
leave
stc
xchg
xor
mov
test
icebp
enter
pop
and
cwtl
imul
pushf
xchg
sbb
xchg
push
in
adc
and
fsubrl
mov
xchg
aaa
rcll
mov
into
inc
mov
cmp
es
xor
fwait
jbe
jo
push
repnz
call
movsl
add
jo
cwtl
fadd
test
add
int3
out
xchg
add
pop
out
ds
imul
mov
aas
cmpb
mov
adcl
daa
add
mov
cmp
jmp
sub
fistpl
pop
subb
dec
fldenv
cli
sahf
jg
dec
fwait
int3
inc
adc
xchg
sbb
mov
mov
mov
push
add
and
ret
loope,pn
imull
ds
mov
jge
hlt
fbstp
xchg
decb
pop
mov
lahf
imul
movsl
andb
rol
add
or
mov
jmp
pushf
fldcw
dec
mov
xor
mov
cltd
sbb
mov
lock
or
mov
dec
mov
and
push
cltd
mov
out
cmc
inc
enter
aaa
xor
scas
adc
push
and
out
lahf
fwait
xor
and
xchg
pusha
aad
push
xchg
pushf
in
fnstcw
jl
loopne
mov
push
mov
sbb
mov
cwtl
lret
divb
jmp
cmp
aad
test
add
mov
xchg
adc
cmpsl
mov
sub
mov
push
mov
mov
lret
loope
cmpsl
enter
xor
aaa
adc
mov
push
ljmp
dec
push
dec
fwait
sbbl
sub
sbb
mov
mov
xor
cwtl
xor
popf
jecxz
loopne
jle
push
iret
fisubl
xlat
xor
mov
popa
pop
mov
mov
jl
lds
inc
out
push
loop
mov
pop
je
pop
push
cmp
push
das
sbb
cmp
add
imul
out
pop
iret
daa
rorb
addr16
cmp
dec
jp
fwait
sub
or
xorl
sub
insb
sub
or
push
mov
adc
xor
fisttpl
adc
out
cmp
mov
enter
pop
clc
or
jg
xchg
jecxz
xchg
push
mov
enter
rcrb
and
adc
imul
cmpl
cmc
sub
pushf
insl
adcb
fiaddl
adc
imul
and
lret
lds
fmull
mov
dec
stc
xor
and
fwait
enter
lods
pushf
stc
or
jge
inc
lcall
popa
lret
push
push
push
dec
sub
dec
repz
aaa
fld
jg
and
mov
push
inc
jg
jbe
dec
jb
push
negb
add
add
add
ljmp
jnp
fsubrs
cwtl
cmp
xchg
add
orl
or
adc
pop
inc
lret
mov
loop
cmpl
fwait
aas
subb
inc
mov
or
mov
or
repnz
loopne
jae
xchg
jge
test
sbb
push
sbb
pop
cmp
mov
loopne
js
adc
mov
pushf
adc
shrb
out
push
insl
and
imul
add
and
lock
jle
iret
dec
jno
xchg
subl
loope
fmuls
push
mov
sbb
enter
addr16
mov
xorb
cmpsb
xor
fisubl
out
mov
setp
mov
outsl
enter
into
sbb
mov
orl
sub
aas
out
call
fdivp
imul
out
mov
hlt
and
push
xchg
mov
aaa
call
clc
sti
inc
xlat
lcall
or
insl
inc
aaa
pop
mov
pop
xchg
pop
loope
pop
mov
push
in
mov
jmp
dec
mov
in
mov
fildll
mov
lods
inc
dec
pop
daa
inc
jne
sub
icebp
jb
aas
fwait
aas
sbb
mov
mov
xchg
clc
add
add
and
popa
stc
sbb
and
repnz
mov
or
mov
mov
fidivs
mov
out
dec
mov
mov
lds
repnz
fadds
pop
fwait
push
adc
sbbl
out
fs
aas
fisubrl
repnz
and
out
mov
adc
lods
test
pop
dec
fildll
pop
push
lar
inc
xchg
cmc
stc
inc
imul
int3
cmc
sbb
loope
jle
mov
xchg
mov
cltd
pop
and
inc
xor
cmp
into
insb
leave
aas
jl
pushf
mov
out
push
dec
mov
xchg
cmc
daa
sti
and
inc
mov
cwtl
test
xchg
cmc
fwait
pop
shr
push
int
std
pop
xorb
dec
dec
aas
loope
mov
scas
imul
stos
inc
cmp
hlt
test
jnp
aaa
jge
ficoms
in
addr16
fwait
stos
imul
xchg
testb
insb
mov
add
mov
idivb
imul
cmp
sbb
sbb
jge
inc
ja
sbb
xor
jle
push
sbb
movsl
xchg
xchg
add
jae
cmp
stos
lret
jp
sub
divb
cmp
add
out
push
mov
dec
test
mov
and
cld
aad
mov
push
jmp
stc
xchg
ficoml
cmp
popl
mov
adc
pushf
pop
addr16
sahf
cli
jbe
inc
sbb
imul
cmpsb
ltr
sub
aaa
mov
insb
les
sbb
xchg
mov
xlat
or
inc
xor
jmp
fisttps
mov
out
jne
mov
popa
mov
and
test
sub
cld
repz
je
ret
outsl
std
lea
imul
adc
sbb
lea
and
out
mov
add
push
jo
addb
insl
test
cltd
pushf
fdivs
jg
mov
mov
imul
and
imul
clc
fldenv
call
mov
rolb
in
cwtl
addl
jae
rclb
lret
cmp
dec
test
mov
sbb
xchg
xrelease
pop
cmpb
jae
or
cltd
imul
rorb
decl
movsb
stc
mov
push
mov
and
bswap
arpl
jae
sub
subl
mov
add
fwait
jecxz
sbb
add
imul
andl
icebp
mov
add
mov
pop
xorb
sahf
and
push
in
fld
adc
sub
push
lea
xchg
mov
xor
cmp
scas
inc
sbbl
inc
inc
cli
push
out
mov
mov
int
hlt
scas
sbb
push
in
in
jno
orl
sub
mov
mov
add
push
outsl
or
fbstp
sub
je
and
lahf
loopne
dec
jl
sub
inc
imul
push
jae
dec
fwait
lahf
pop
movsl
mov
test
mov
in
adc
and
data16
test
sarl
sub
jb
push
sarb
inc
sub
out
mov
fcomps
cwtl
fwait
inc
inc
jnp
mov
rcll
fs
adc
push
cmp
pop
fcomip
fcoml
pop
pop
push
pop
lahf
inc
and
dec
xchg
stc
or
cmp
dec
sbb
and
mov
adc
imul
mov
ds
mov
mov
cld
jne
pop
out
outsl
mov
jo
mov
leave
sahf
fnstenv
adc
add
cmpl
jno
out
mov
add
scas
ja
mov
hlt
pop
xchg
mov
arpl
and
fwait
inc
fsubrp
and
nop
inc
mov
inc
or
pushl
int3
loope
sbb
mov
mov
stos
jns
push
pop
addr16
push
loop
rcll
rcll
out
rol
into
fdiv
addr16
enter
adc
jbe
xorl
fidivrl
ljmp
xchg
mov
jno
pop
xchg
out
mov
cmc
out
push
jb
pop
jmp
test
adc
lahf
lock
cltd
lcall
push
or
jecxz
sarl
adc
movaps
inc
mov
pop
cmp
mov
nop
daa
xor
scas
pop
aaa
daa
mov
inc
lods
add
cmp
xchg
inc
push
dec
orps
roll
incb
loop
sbb
xchg
popf
xchg
in
imul
dec
adc
subb
cmp
pop
add
xchg
out
cld
imul
jp
in
loope
or
add
test
clc
push
inc
mov
jno
daa
fisttpl
xchg
lret
shl
add
insl
sub
testl
push
loopne
push
and
jp
outsl
shlb
sub
and
inc
addr16
cmp
pop
adc
xor
stc
decl
sub
pop
mov
mov
xor
add
cwtl
daa
jecxz
pop
jns
mov
in
push
and
gs
inc
and
les
add
repz
imull
pop
mov
imul
push
adc
aaa
add
daa
cmp
inc
mov
sti
sbb
pusha
ljmp
or
and
mov
pop
sbb
test
xchg
mov
int3
addb
clc
or
clc
xor
and
test
imul
mov
pop
rolb
daa
add
jp
jge
pushf
push
mov
xchg
xchg
out
fsubrs
dec
adc
lods
inc
mov
sbb
les
jp
sarl
icebp
mov
bound
enter
scas
sub
pop
push
pusha
iret
adc
pop
fisttpl
mov
and
rcr
iret
push
mov
push
cltd
imul
pop
cmpsb
cmp
push
mov
mov
sub
leave
xor
xchg
pop
cmpsl
pop
lods
dec
inc
hlt
call
idivl
cs
outsl
jmp
xor
pop
add
xor
popa
lret
xchg
mov
push
inc
adc
mov
sbb
adc
cmpsb
sahf
dec
bound
imul
push
push
cmpb
mov
mov
push
pop
stc
mov
imul
and
pop
dec
lret
rcr
xor
in
iret
pop
mov
jno
sbb
out
add
fwait
adc
dec
ds
iret
mov
stos
daa
mov
xchg
scas
jno
cmp
mov
lret
dec
in
push
cmp
leave
jp
in
adc
or
movsb
sub
sbb
lock
or
xchg
xlat
adc
outsl
and
pop
cmpsb
xchg
add
sbb
inc
xor
daa
push
lea
inc
push
xchg
cmp
mov
mov
enter
dec
lods
lcall
and
pop
out
or
pop
sbb
shrb
es
mov
inc
push
insl
lahf
cmc
mov
cmp
jnp
inc
pop
subl
fwait
dec
cmp
push
dec
stc
je
mov
out
fimuls
jp
in
sahf
cltd
mov
cwtl
fwait
rcll
and
pop
xor
repz
vcmpsd
jp
mov
stos
and
cmp
lds
jmp
in
pop
test
add
sbb
mov
mov
push
and
js
loopne
ffreep
jmp
jmp
mov
pop
mov
cmp
sahf
pusha
cmc
add
lcall
popa
mov
cmp
jmp
sub
addr16
add
aad
adc
mov
fwait
insl
jmp
pop
out
jo
jo
dec
lcall
and
mov
jae
loop
loop
mov
add
add
and
xchg
sub
rclb
jle
add
cmp
aad
pop
xchg
dec
dec
push
popl
ficoms
jle
mov
xor
dec
cs
addb
mov
sbb
sub
movzwl
mov
in
out
adc
adcb
cmp
bound
mov
cmpsl
mov
mov
xchg
enter
inc
test
mov
pop
push
mov
cmpsl
jno
push
lock
mov
push
leave
out
scas
jp
mov
sahf
and
sbb
sub
push
idivl
lock
imul
push
add
push
jns
inc
mov
or
pop
inc
mov
cwtl
andb
lock
arpl
push
and
inc
xor
rcrl
xchg
cwtl
push
das
out
in
pop
aad
testb
mov
les
leave
or
daa
dec
lret
cmp
lahf
push
xchg
jle
loop
inc
imul
sub
dec
xchg
xor
inc
test
cld
or
adc
or
pop
mov
dec
cli
aas
cmpsb
or
out
push
mov
aas
or
fptan
cmpb
adc
loop
inc
pop
nopl
sbb
mov
test
outsb
pop
lea
xchg
push
mov
and
pop
adc
xchg
or
push
and
loopne
xor
ja
call
push
or
test
push
aaa
mov
hlt
mov
icebp
cmp
fwait
xor
jne
arpl
shrl
add
push
pop
adc
cmp
insl
mov
add
scas
lds
clc
repz
jp
adc
sbb
test
gs
leave
sbbb
jg
es
dec
loop
mov
ret
test
pop
fdivrs
cmp
jmp
js
loop
aaa
jns
fsubrp
jecxz
add
mov
fiaddl
imul
sbb
mov
sub
loope
fmull
outsl
cmpsb
js
add
imul
push
mov
fidivl
imul
fcmovnbe
fstps
mov
int
aad
xchg
jnp
jl
rcrb
mov
mov
clc
int3
call
and
lret
mov
sti
imul
fdivl
sahf
push
pop
push
adc
adc
stc
ss
adc
mov
outsl
outsl
inc
insb
into
subl
mov
jno
add
cs
ss
hlt
imul
nop
cmpsl
cld
and
or
daa
mov
out
push
and
out
fldl
pop
pop
or
ds
icebp
gs
jmp
lahf
add
rclb
lcall
push
xor
movsl
andl
cmp
xchg
dec
add
shrb
aad
xor
daa
adcb
repnz
mov
mov
cmc
nop
cmp
aam
mov
imul
mov
pusha
ja
roll
rcll
jmp
fidivs
pop
call
push
addr16
lds
and
stos
jle
jg
dec
mov
jb
enter
mov
cmp
ficompl
inc
ja
cmpsb
addb
loope
jg
aaa
mov
or
push
mov
aas
mov
mov
adc
and
fs
push
pop
insl
addr16
xchg
cmp
adc
test
fwait
rorl
call
loope
mov
push
rcrl
out
ret
and
mov
popa
leave
mov
mov
imul
or
lock
stos
leave
daa
mov
mov
fnstenv
lock
pop
adc
mov
mov
inc
or
add
sub
lahf
and
dec
xchg
rol
or
cmp
daa
subb
add
mov
pop
cs
pop
rclb
aad
out
cmp
or
dec
ret
fcomi
jbe
aas
push
pop
shll
aas
xchg
into
sbb
test
int
dec
notl
adc
stc
mov
mov
sahf
rorl
xchg
dec
mov
sbb
repnz
scas
and
mov
fwait
stc
sbb
xlat
mov
test
mov
mov
incb
push
mov
test
aam
lahf
add
aad
jl
cmpsb
sbb
pop
jns
adc
xlat
and
jne
inc
pop
xchg
jle
mov
sbb
lcall
imul
clc
jge
ds
sti
into
jg
idivl
and
cmp
dec
int3
mov
jne
rol
push
sub
jge
ja
lods
scas
mov
or
test
sub
flds
pushf
or
add
in
pop
and
dec
frstor
test
mov
ja
add
rclb
addr16
aas
imul
push
mov
cltd
idivb
test
and
sub
and
leave
lcall
pop
pop
test
add
imul
xchg
aad
sbb
push
imul
pop
sub
clc
adc
fwait
inc
clc
cmp
repnz
pop
pusha
cmp
mov
imul
inc
or
mov
push
push
ljmp
lds
repnz
inc
repnz
test
out
sbb
push
add
jecxz
outsb
stos
sahf
jbe
xor
andl
pop
pop
and
add
mov
inc
adc
cld
pushf
sbbb
stos
ss
push
pop
fisttps
popa
stc
adc
inc
lods
dec
mov
mov
mov
push
imul
sub
push
cmp
and
mov
jge
mov
mov
sbb
dec
repz
mov
out
clc
andb
mov
loope
les
fs
jb
popa
icebp
cmp
pop
add
cmp
fsubrl
sbb
adc
gs
cmpb
pushf
ja
repz
and
add
loop
jle
xchg
arpl
fnstenv
popf
js
xchg
push
movsl
xor
js
shlb
pop
cmpsb
pushfw
fcoml
hlt
jp
jle
imul
push
cmp
cmp
adc
xchg
cltd
xchg
sarl
mov
sbb
jl
cld
das
iret
cmp
cmpsl
mov
cmp
xchg
xor
sbb
lock
adc
repnz
cmp
call
sub
mov
testl
mov
mov
xor
les
shll
and
pop
cmp
adc
fadds
jne
lock
clc
addr16
fs
mov
push
data16
mov
push
jnp
fucomp
pop
sbb
addr16
cld
add
add
inc
scas
inc
cmp
add
push
mov
adc
mov
call
mov
imul
fbstp
dec
insb
nop
lock
push
sub
jae
inc
pop
pop
call
roll
popf
xchg
pushf
aam
cmpsl
mov
lea
stos
inc
or
dec
adc
addl
test
push
xchg
xchg
push
pop
xor
aaa
pop
sti
test
popa
fisubs
xor
push
loopne
jno
mov
jge
mov
lcall
mull
and
add
sbb
insl
mov
inc
adc
add
xchg
dec
fwait
sub
stos
jne
repnz
mov
sbb
and
inc
dec
jne
das
mov
and
nop
cmp
xor
addr16
neg
pop
repz
xchg
mov
iret
test
add
int3
xor
das
push
xchg
stc
fwait
je
sub
mov
sub
pop
or
sbb
pop
or
bound
mov
cmc
jae
xchg
mov
scas
mov
pop
imul
test
dec
mov
jle
adc
sub
enter
paddsb
push
in
idivb
adcl
pop
jecxz
ret
and
dec
push
pop
ja
fs
sbb
xlat
ljmp
mov
js
mov
push
xchg
add
iret
in
dec
pop
sbb
mov
fisttpl
int3
pop
insb
mov
and
in
and
rol
daa
in
xor
ret
cmp
cmpsb
mov
std
jno
leave
adc
pop
fadds
xor
push
aas
dec
mov
inc
lods
sbb
shll
lret
mov
dec
in
push
mov
cmp
add
and
pop
cmpsb
test
pop
lds
rolb
fsubrl
inc
frstor
fbld
cmc
addl
in
inc
sahf
mov
push
xchg
jnp
sbb
adc
jp
loopne
fs
cs
push
xchg
mov
jecxz
pop
mov
mov
popa
inc
js
outsb
mov
in
push
outsl
mov
cs
push
out
iret
test
push
cmp
jg
add
daa
mov
daa
dec
pop
stos
jno
xchg
sub
push
xchg
adc
lret
pop
in
lods
push
pusha
or
rcll
xor
pop
hlt
cmc
xchg
and
sub
xchg
xchg
mov
lods
test
imul
xchg
push
imul
loop
push
push
xchg
pop
jbe
lock
sbb
stos
cwtl
clc
mov
lods
fwait
xchg
addr16
xchg
xor
xchg
adc
addl
sbb
loope
enter
sub
mov
or
push
imul
jbe
mov
add
je
xor
inc
inc
dec
push
dec
ficomps
enter
cmpl
roll
push
push
cmp
mov
in
pop
addb
ficoml
cwtl
cltd
in
xchg
mov
push
xchg
or
xlat
imul
inc
push
sysexit
rcrb
dec
or
xchg
inc
xchg
dec
fimuls
mov
adc
je
mov
lea
pshufw
xchg
fidivl
jno
out
xor
movsb
lock
fptan
inc
push
adc
inc
pop
rclb
and
sub
lahf
pop
xor
pop
inc
lahf
mov
lods
inc
and
shrl
out
inc
enter
call
inc
adc
es
lahf
in
outsb
imul
mov
sti
cltd
inc
enter
sub
push
ljmp
mov
jae
call
inc
daa
xchg
xor
cld
lret
addr16
stc
xchg
popf
lds
mov
sbb
fcompl
hlt
lods
pop
fsubl
and
sbb
add
cmc
decl
lahf
outsb
push
dec
mov
subb
ret
sub
es
rcl
or
adc
push
pop
aam
cwtl
mov
pop
pop
pushf
push
push
dec
xchg
loop
int3
dec
stc
std
sahf
mov
pop
cmp
inc
rcrb
mov
jne
out
daa
jb
pop
fbstp
or
cmpsb
std
hlt
xorb
fistpl
out
mov
popl
jo
adc
out
inc
sbbl
arpl
fnstcw
pushf
adc
and
call
xor
push
sub
out
imul
in
into
rorl
jecxz
lret
int3
mov
add
inc
aas
fbstp
cmp
mov
and
cld
fiaddl
shrl
dec
imul
enter
and
daa
pop
pop
inc
push
pop
dec
xchg
pop
adc
push
mov
repnz
lret
or
dec
or
ss
pop
test
je
inc
and
add
out
insl
cltd
pushl
cmpsl
lds
imul
std
flds
js
dec
inc
lods
inc
subb
mov
pop
cmc
rol
mov
test
repnz
popf
push
les
add
outsl
push
push
pop
jle
jne
mov
fwait
and
in
fcompl
xchg
add
jle
fcoms
pop
push
dec
cltd
sbb
xchg
mov
push
mov
pop
push
addr16
inc
add
scas
jle
xor
push
pop
adc
repz
inc
push
mov
cmp
filds
xor
and
pushf
xor
inc
imul
mov
je
pop
push
and
out
xchg
sbb
call
aad
mov
pop
movsl
in
or
aas
sbb
pusha
pop
int
mov
insb
pop
push
stc
dec
data16
test
adc
sbb
pop
das
cmp
sub
jae
xchg
jecxz
leave
xchg
xor
stos
and
movsb
icebp
mov
lcall
test
adc
stos
mov
std
mov
mov
mov
pop
dec
test
ret
pop
inc
test
xor
sti
push
aad
adc
push
cld
enter
mov
ret
cld
jg
lea
pop
dec
xchg
pop
test
inc
add
sti
das
enter
adc
mov
cld
lock
clc
adc
xchg
mov
or
jne
mov
push
gs
pushf
ss
and
hlt
xor
sub
jno
dec
insl
or
addr16
jno
sbbb
cmpsb
mov
xchg
call
or
aam
add
and
aad
aas
int
fldl
sahf
xchg
fsts
sbb
xchg
in
xor
and
mov
fsts
sahf
pop
roll
jns
push
in
jns
push
jmp
xchg
fistps
mov
imul
add
out
sarl
iret
sub
inc
mov
xorl
enter
sbb
cmp
jmp
inc
mov
dec
loope
mov
dec
cmpsl
in
gs
std
call
mov
pop
test
mov
shlb
subl
js
in
inc
xor
lahf
sti
cmp
sbb
inc
push
pop
sub
sbb
popf
push
call
ja
stos
aad
jecxz
push
js
or
loop
fmuls
ficomps
pop
sahf
imul
xlat
xor
or
rol
dec
sub
mov
xchg
stc
push
push
ja
dec
rcrb
ja
leave
sti
jg
pop
jge
pop
je
xchg
push
pop
dec
jecxz
in
sbb
pop
pop
xchg
in
fwait
xchg
push
insb
decb
imul
adc
cwtl
or
out
jecxz
lods
clc
pop
mov
pop
xor
ret
shll
pop
xor
push
daa
inc
pop
and
inc
insl
ss
jl
push
jbe
repnz
xchg
sub
or
push
fdiv
fisttpl
aaa
loop
sahf
enter
sub
and
adc
mov
test
inc
push
call
sub
mov
loop
mov
inc
xchg
sbb
mov
adc
fdivs
shll
insb
fidivrl
xor
fcomps
dec
add
fmull
jbe
jne
xchg
pop
fisubs
into
and
xorb
daa
mov
adcl
or
jle
dec
fisubrl
mov
cmp
ljmp
xchg
pop
add
add
test
mov
in
inc
lds
test
inc
push
xor
nop
pop
fwait
sbb
fstl
test
adc
adc
mov
fistl
addr16
cmp
jmp
push
or
out
test
add
push
dec
add
dec
repz
sub
in
dec
faddl
inc
mov
fmull
fnstenv
or
loop
incb
jne
popf
fldenv
aad
jo
adc
out
add
ja
jecxz
push
inc
shl
out
push
aas
push
inc
mov
cwtl
clc
mov
inc
mov
insb
mov
xor
dec
fwait
push
add
int
xchg
cmpsb
out
sbb
pop
xchg
scas
mov
mov
fldl
push
imul
aas
pop
test
test
repz
mov
icebp
testl
and
fsts
daa
mov
stos
loope
into
and
pushf
add
sbb
cmp
ja
sbb
adc
inc
imul
out
cmc
fucomi
mov
jne
cmp
imul
pop
pushf
adc
movsb
adc
add
shlb
gs
gs
jmp
pop
xor
outsl
fcmovbe
or
mov
orb
ja
lea
fwait
mov
adc
data16
sbb
push
sub
cmp
pop
cmc
pop
xor
fwait
xor
outsb
daa
xor
mov
jns
imulb
mov
aaa
xor
gs
addr16
out
dec
mov
jg,pn
int
sub
sbb
subb
ficomps
imul
mov
mov
inc
out
mov
xchg
xlat
mov
fwait
out
scas
mov
cmp
pop
xor
push
negl
lea
in
out
push
pop
jge
mov
das
incb
xchg
pop
popa
jnp
dec
xchg
in
sahf
out
cmpl
addl
test
in
subl
gs
sub
mov
cs
xor
lahf
test
sub
test
aaa
loop
adc
xorl
test
cmp
and
inc
adc
sbb
mov
lcall
lahf
inc
daa
jl
in
inc
repnz
imul
pop
js
cld
addr16
adc
xor
dec
shr
xchg
sbb
pop
jl
jns
es
lahf
cmp
out
jno
add
ja
sbb
cmp
int
mov
pop
and
mov
adc
inc
into
test
xchg
and
pop
ret
ja
mov
hlt
xchg
cmp
lds
insb
ret
jecxz
cmp
and
pop
test
xchg
movsb
xor
fwait
cld
insl
sub
xchg
mov
dec
aas
pop
cmp
dec
mov
push
insl
in
adc
push
incl
sbb
ds
jl
jo
imul
movsb
cwtl
fwait
cmp
imul
mov
xchg
sbb
sahf
movb
daa
lahf
dec
in
pop
xchg
pop
fwait
test
imul
ja
insb
pop
fcomps
inc
gs
mov
jecxz
or
jnp
xchg
pushf
mov
adc
jae
dec
into
mov
test
aas
mov
faddl
and
shrb
mov
lods
mov
cmc
je
lods
nop
xchg
fwait
jno
inc
jmp
mov
pop
dec
or
sbb
cmpsb
pop
aam
les
fistps
xor
ja
les
add
dec
addr16
lcall
fstps
movb
adc
aaa
mov
ljmp
jp
int3
push
cmp
pop
inc
and
mov
rcrl
or
fnstsw
xchg
sti
mov
sub
cmp
std
dec
pop
push
mov
pop
das
into
sbbl
subb
test
and
adc
jl
stc
xchg
leave
lock
pop
jb
sbb
inc
pop
jno
mov
bound
dec
and
in
add
hlt
lcall
out
push
enter
xor
xchg
sahf
daa
movsb
imul
out
lock
push
inc
lcall
in
in
scas
subl
cmpsb
or
add
out
jl
imul
inc
int
or
and
jno
cmp
pop
mov
int3
lock
inc
cs
lcall
ret
xchg
repz
inc
xchg
mov
jbe
add
push
fwait
ja
fs
mov
and
mov
aad
add
jecxz
cmp
mov
inc
cmpsb
je
bound
push
nop
add
xor
mov
and
mov
daa
into
mov
inc
test
aas
pushf
inc
fs
cmpl
insl
stc
jbe
js
mov
cmpsb
jns
pop
imul
enter
cmp
xchg
dec
jns
mov
in
xorl
add
sbb
outsl
sbb
sbb
push
cmpsb
xchg
clc
adc
fisubl
mov
stc
jecxz
xchg
pushf
pop
mov
and
mov
pop
cmp
addl
xchg
xor
sbb
add
adc
std
sub
jle
push
bound
jp
cwtl
dec
jecxz
sbbb
inc
xor
das
adc
mov
xchg
or
out
xor
loop
scas
test
sbb
pop
fwait
mov
xchg
ss
mov
xor
cmp
adc
inc
jns
dec
jecxz
fsubs
inc
jbe
test
mov
jmp
std
rorl
test
mov
push
sahf
xlat
mov
xchg
dec
mov
jnp
rcrl
adc
xorl
cmp
in
and
inc
mov
sahf
mov
adc
cmp
pop
les
es
pop
rclb
push
add
adc
scas
xchg
inc
pop
mov
cmpw
out
or
xchg
mov
inc
lahf
pop
jb
ja
mov
scas
pop
or
negl
mov
rorl
imul
mov
pop
xchg
test
mov
inc
lret
dec
call
mov
adc
fucom
shll
cltd
cmp
sahf
dec
jp
fnstsw
mov
out
sub
repnz
jo
pop
xchg
sbb
cmp
cltd
pop
pop
pusha
sub
add
mov
int3
adc
gs
ja
add
pushf
xchg
adc
js
dec
fcoml
or
out
popf
mov
ficomps
lea
cmpsb
jnp
xchg
xchg
outsb
inc
lods
mov
jnp
cmpsl
mov
mov
jecxz
or
cmp
lahf
mov
xchg
int3
mov
push
popa
cmp
in
rolb
fxch
rclb
pop
mov
mov
cmp
aas
loope
addr16
sbb
jne
and
ja
clc
sub
push
sub
mov
or
mov
je
xorb
les
push
enter
cltd
stos
or
jnp
sub
mov
cmp
nop
iret
add
scas
daa
xor
fimuls
pop
lcall
imul
push
out
push
aas
or
jecxz
loop
fdivl
xchg
pop
mov
push
repz
mov
pop
lahf
shl
inc
ja
push
dec
addl
xchg
pusha
aaa
out
gs
adc
or
es
pop
mov
push
testb
cltd
je
adc
fstps
iret
lods
fbstp
xchg
cmp
adc
push
test
repz
push
adc
in
sahf
cwtl
lods
mov
cmc
mov
lods
or
lea
mov
pop
mov
ficoms
xchg
pop
xchg
fcoml
mov
jbe
loopne
addb
mov
pop
stos
mov
lea
popa
mov
rolb
push
testb
leave
cwtl
jb
call
jge
test
jl
cmp
jecxz
pop
aaa
jmp
mov
xor
movsl
adc
fwait
add
movsb
scas
xchg
lcall
ss
xchg
orb
inc
pop
mov
iret
cmpsb
sub
aaa
int
jecxz
notl
jbe
js
cmp
jb
in
test
xor
test
mov
icebp
cmpsb
outsl
repnz
sbbl
pushf
dec
push
repnz
fsubl
out
ljmp
popf
cmp
mov
cltd
in
dec
and
mov
fs
sbb
fcmovb
js
pop
into
lds
idiv
adc
push
testl
int
in
rcrb
or
jnp
mov
mov
andb
mov
xor
ret
fcomps
in
xor
and
movsl
mov
sub
sbb
lret
andl
test
div
inc
ret
push
mov
pop
or
push
xor
iret
adc
mov
mov
cwtl
xor
pop
scas
andl
mov
pop
xor
xchg
aaa
mov
sub
adc
mov
lea
fmul
mov
xor
dec
sbb
imul
mov
js
inc
repnz
mov
jo
shll
mov
inc
sub
mov
inc
mov
cmp
sbb
inc
enter
stc
icebp
adc
push
sbb
mov
or
sub
dec
nop
inc
and
or
jnp
pop
xor
xchg
bound
repnz
rorb
mov
je
pop
out
fs
je
inc
xchg
in
out
mov
xor
mov
fmull
rol
xchg
jl
push
xchg
pop
jbe
push
or
rorl
mov
dec
cs
movl
push
adc
call
push
pop
push
pop
xchg
cmp
movsl
mov
xor
js
mov
adc
mov
lcall
out
out
adc
adc
aaa
push
fwait
das
cmp
daa
and
fcompl
sub
jecxz
rcrb
imul
je
sbb
mov
pop
pop
test
jo
sbb
inc
jg
testl
loope
add
subb
xchg
push
mov
pop
pop
clc
call
xor
or
mov
bound
dec
lea
xchg
dec
lods
xchg
mov
fldcw
or
add
and
dec
push
mov
jo
mov
jns
stc
cmp
test
shrl
jl
cmp
nop
in
push
mov
stos
mov
lcall
movsl
jecxz
insl
jmp
idiv
dec
jbe
cld
push
les
gs
push
test
jg
fs
mov
mov
dec
hlt
sub
popf
xchg
jmp
into
add
pop
adc
sub
cmp
lock
test
ret
or
sbb
movsl
sbbb
inc
xchg
push
dec
outsl
inc
push
lcall
mov
in
iret
lock
push
lea
push
mov
clc
dec
int
ljmp
sub
push
les
xchg
push
inc
mov
bnd
outsb
insl
inc
sbb
scas
test
outsl
sub
popf
js
mov
pusha
cs
dec
pushf
iret
mov
test
jp
push
pop
pop
lcall
cmp
mov
insl
andl
xor
push
cmp
sbb
and
jmp
mov
imul
and
pop
mov
pushf
mov
icebp
into
imul
outsl
cmc
adcb
mov
mov
idivb
mov
jae
cmp
sbb
sbb
xor
mov
ja
cmc
push
and
fistps
out
bound
mov
add
mov
loop
aad
inc
pop
mul
pop
mov
inc
add
out
sbb
cmp
insb
fcom
and
int
cmp
mov
test
add
jmp
imul
pop
test
sub
inc
fwait
jmp
adc
ficoms
out
jmp
icebp
fcom
pop
add
imul
sub
push
cmpsl
push
stos
lahf
cmp
movsl
and
sahf
data16
or
push
mov
popf
icebp
push
sti
xchg
inc
mov
push
xabort
loopne
int
adc
sub
xor
lea
jge
out
rcrl
jecxz
pushl
sub
cmp
mov
fdivs
stc
inc
pushl
addl
jge
inc
mov
push
xchg
ja
imull
mov
lds
push
jge
mov
mov
add
jge
fs
push
call
test
data16
adc
fimull
gs
std
xlat
pop
xchg
and
mov
mov
mov
xchg
mov
mov
and
jae
dec
pop
lea
mov
imul
push
mov
sub
mov
ror
pop
leave
shl
xchg
adc
push
repz
push
ret
cmpsb
adc
ja
in
xchg
mov
cmpsb
test
dec
repz
iret
mov
push
adc
inc
dec
mov
add
jmp
sti
sbb
mov
and
adc
mov
push
imul
lret
cmc
mov
ljmp
cmc
xchg
lcall
jecxz
rorl
jg
pusha
mov
pushf
fwait
in
mov
inc
xchg
push
test
xchg
scas
imul
sahf
lods
jp
roll
leave
movb
mov
pop
repz
mov
hlt
pop
jnp
inc
lods
bound
push
mov
mov
addr16
and
pop
ret
sbb
shlb
pusha
pushf
mov
pushf
cmp
popa
fsubrp
mov
outsb
insb
fildl
cmp
sbb
int
arpl
test
mov
sub
arpl
call
mov
mov
mov
fwait
xchg
add
loop
rorb
pop
test
out
cmp
mov
mov
mov
xchg
lea
jns
mov
pop
je
adc
mov
loop
stos
add
rcrl
dec
mov
mov
jle
movsl
outsl
testl
rcll
pop
lret
test
mov
pop
outsl
repnz
adc
add
add
outsl
inc
fwait
jge
sti
mov
jp
mov
into
lahf
mov
push
inc
inc
mov
push
xchg
arpl
push
mov
jb
sbb
mov
lock
mov
repz
mov
andb
mov
or
fwait
les
sub
fwait
mov
inc
mov
or
iret
out
ds
pop
add
aad
addr16
dec
dec
fisubrl
dec
rorb
or
xchg
and
add
insl
inc
mov
aaa
ja
fstpl
lret
imul
or
xor
push
fcmovb
test
loopne
inc
pop
aas
lahf
sub
or
das
lahf
pop
les
mov
andl
popf
in
clc
or
pushf
stc
sti
xchg
add
xchg
je
sub
dec
cld
bound
add
lock
and
test
sahf
jge
int3
fsub
enter
add
xchg
adc
inc
jp
lods
or
push
aas
arpl
jp
imul
mov
mov
enter
inc
cli
lcall
mov
xor
push
and
xor
mov
cvtps2pi
cmp
rclb
roll
ret
addr16
scas
or
ja
in
bound
pop
fs
out
test
lcall
mov
es
ljmp
dec
in
stos
mov
mov
xchg
adc
adc
leave
mov
pop
loope
in
test
aad
test
cmp
ud0
pop
test
shll
pop
filds
mov
jle
popf
daa
add
sbb
and
lret
test
xchg
aad
cmc
mulb
aas
gs
outsl
cmp
push
decb
call
and
js
mov
mov
rorl
jg
outsl
mov
fwait
mov
mov
imul
push
test
imul
mov
mov
mov
push
fdiv
xchg
pop
out
adc
sbb
decb
xchg
mov
daa
and
push
loopne
mov
lds
adc
xor
fmul
inc
jb
sbb
bsf
inc
cmp
in
cmpsl
sub
lock
fdivrs
cltd
sbbl
jb
inc
arpl
push
pop
lea
fs
mov
mov
cmc
mov
add
mov
cwtl
dec
lret
test
and
pop
call
pop
aaa
lret
inc
sbb
xchg
push
xchg
inc
add
jp
fisubs
xor
popa
psllq
or
mov
int3
xchg
fwait
repnz
lret
sahf
pop
adc
dec
pop
jl
lret
shl
cltd
cs
inc
shrl
push
ret
jge
pop
imul
pop
in
cmp
mov
rol
adc
aam
aas
push
mov
test
lret
push
in
mov
cmp
addr16
and
push
add
cwtl
call
jae
dec
mov
cwtl
fwait
rcl
mov
popf
lds
pop
dec
mov
ret
aaa
imul
jmp
pop
mov
push
mov
mov
icebp
xchg
ja
mov
sbb
aas
pop
int
dec
mov
out
mov
sub
mov
jbe
push
inc
push
and
lahf
scas
sub
mov
push
popa
xchg
fwait
dec
inc
sub
adc
mov
push
mov
hlt
jbe
subb
jno
jmp
stc
push
fistpl
push
inc
lock
cltd
test
pop
jp
sub
sub
pop
pusha
or
pop
enter
inc
mov
ffreep
xchg
xchg
xchg
sub
enter
les
mov
sbb
sub
add
add
out
into
insb
mov
inc
leave
cmpsb
mov
jp
ds
out
add
sahf
xchg
es
int3
incl
adc
adc
mov
sub
test
mov
inc
mov
lock
dec
add
inc
idiv
mov
in
mov
push
repnz
mov
pop
mov
or
pop
mov
addr16
lock
cltd
sbb
adc
out
inc
call
push
add
cmp
inc
stos
mov
sbb
imul
and
and
movsb
pop
jecxz
cmc
pop
popf
cmp
add
mov
add
outsb
mov
fistl
ret
xchg
cmp
andb
cmp
fsubs
xor
dec
arpl
add
mov
jmp
push
cmp
xchg
das
xchg
imul
add
xchg
lret
or
mov
xor
sub
sarl
repnz
ljmp
popl
dec
cwtl
fwait
rorl
notb
stos
sbb
mov
std
movsb
stos
out
lret
dec
cmpsl
inc
test
sahf
lods
push
mov
push
aas
or
jbe
int
data16
mov
movsb
mov
jnp
stc
xor
xchg
imul
inc
mov
int3
xor
cli
in
mov
ror
mov
sarb
inc
jge
clc
push
in
push
dec
sub
push
mov
xor
cmp
jp
adc
and
pop
lcall
jo
xor
or
sbb
ret
xchg
jo,pt
adc
sbb
pushf
cmc
pop
sub
push
inc
aaa
jb
pop
jecxz
out
int
mov
and
mov
push
pusha
fcoms
adc
stos
jge
sbb
dec
outsl
push
cmp
pop
shll
nop
pop
mov
pop
rcr
hlt
jmp
fwait
inc
es
inc
sbb
xor
jno
jecxz
dec
or
sti
adc
and
insl
xchg
and
adc
inc
pop
mov
les
aad
xchg
cmpsb
xchg
jmp
lret
hlt
ljmp
fdivrs
sbb
inc
cwtl
xor
push
es
ret
pushl
ljmp
es
scas
addr16
dec
jns
mov
add
or
xor
mov
rorl
xchg
inc
push
push
xor
mov
jmp
sub
out
xchg
cli
fisubrs
hlt
mov
stc
fisttps
loopne
cli
mov
fs
gs
cmp
xchg
mov
lea
push
pop
jle
lock
rcl
lahf
xchg
daa
cmp
sbb
orb
loope
add
mov
mov
test
sbb
outsb
scas
xchg
fwait
ljmp
pop
push
adc
xor
add
clc
cwtl
dec
jno
dec
adc
dec
pusha
add
lret
aaa
push
jmp
jl
mov
mov
cwtl
push
adc
sbb
mov
js
and
adc
mov
mov
xchg
lea
hlt
mov
iret
or
add
outsl
push
shr
addr16
aad
cmpsl
push
jnp
daa
push
mov
xor
and
inc
xchg
lock
stos
inc
lret
imul
mov
jo
fsubl
mov
lcall
out
push
ret
xchg
in
pop
lds
and
xchg
lea
jl
lods
outsl
stos
sub
jae
subl
cld
xlat
popa
mov
mov
jl
aas
cwtl
test
pop
std
sub
jmp
jne
mov
lcall
dec
push
sti
in
pop
jmp
pop
test
int3
es
iret
jecxz
add
punpckldq
or
imul
lahf
dec
and
inc
sub
mov
arpl
lea
scas
sbb
cmpb
fimull
dec
push
addr16
ja
mov
inc
push
xchg
cmpsb
lods
andb
in
cs
inc
cli
lahf
loopne
dec
sahf
mov
push
pusha
cmp
add
sarl
jl
into
mov
mov
and
jb
rorl
and
outsb
sbb
xor
stc
add
or
mov
sbb
into
jno
mov
loop
lea
and
sbb
jg
sub
lea
jp
sbb
mov
cld
mov
add
cld
enter
mov
xchg
fcompl
cmp
test
xor
cwtl
rclb
jl
and
and
dec
xlat
jne
lods
mov
push
subb
in
shlb
cltd
rcll
aam
jmp
in
int
inc
sub
arpl
popa
mov
adc
jmp
inc
loopne
movsb
in
add
loope
xor
inc
in
test
push
out
push
leave
cmc
out
mov
decl
pushf
jo
adc
cltd
popf
test
scas
add
pop
test
aam
lcall
mov
cmp
cwtl
mov
mov
fisttps
das
cld
lds
jnp
nop
fs
fwait
lret
inc
sahf
mov
jb
imul
sarb
repnz
mov
mov
mov
lret
dec
xchg
outsb
add
jb
rcll
mov
mov
pop
jns
sbb
jp
mov
inc
pusha
mov
fstpt
cmpsl
aaa
xor
popf
and
mov
mov
dec
iret
jne
cmp
test
repnz
rorl
out
cltd
addr16
gs
lds
or
pushf
test
pop
fnstcw
outsb
aaa
mov
fwait
mov
mov
lret
mov
aas
mov
enter
movsb
dec
das
and
mov
push
mov
fimuls
icebp
mov
mov
fiaddl
mov
leave
mov
fadd
lcall
inc
out
mov
je
mov
fcom
xorl
mov
and
mov
add
mov
imul
mov
inc
add
cmpb
and
mov
inc
jns
inc
repz
dec
dec
into
add
test
lcall
jo
or
mov
cmp
subl
adc
aad
push
or
sbb
addb
pusha
mov
pop
sbb
add
cmpsl
adc
cmp
sub
xchg
mov
dec
dec
push
jmp
mov
std
repnz
push
xor
mov
mov
sub
push
xorb
fsubrl
cmp
inc
pop
xchg
rolb
pop
add
pop
stos
enter
out
xor
cmp
out
sub
jo
or
stos
nop
and
f2xm1
int3
dec
sbb
into
call
push
mov
mov
ja
adc
daa
add
test
cmp
xor
decb
push
dec
xorl
test
pop
mov
loopne
pop
enter
push
sbb
cltd
ja
subb
adc
adc
cmp
call
mov
mov
jns
jg
int
sbb
ss
int
imul
js
mov
ficomps
add
sahf
mov
loope
outsb
mov
mov
ret
icebp
jae
das
jno
daa
enter
fistps
bswap
mov
ljmp
imul
inc
mov
mov
cmp
mov
push
or
or
sbb
in
stos
mov
test
leave
xor
ja
push
ss
jns
popf
jecxz
jns
inc
sahf
pop
int3
mov
movsl
mov
mov
nop
test
aam
in
dec
mov
fmull
mov
mov
inc
movsb
jg
push
rcll
push
enter
xor
dec
xor
addr16
insl
pop
mov
pop
sbb
add
xor
fiadds
daa
jb
mov
jns
or
mov
aad
mov
subb
daa
ljmp
and
mov
adc
fildl
aad
pop
sahf
jle
dec
push
shl
call
test
sbb
sbb
or
outsl
scas
push
pop
imul
fidivrs
imul
sub
sbb
mov
fisubrl
loopne
xchg
fnstenv
pop
daa
movsl
jmp
pushf
sub
imul
out
mov
mov
icebp
icebp
lahf
adc
mov
jb
mov
mov
and
xchg
loop
or
mov
pop
mov
int
mov
inc
dec
sbbl
pop
xchg
mov
movsl
repnz
cld
inc
sub
cmp
sub
adc
imul
cmp
ja
fdiv
xor
shr
ss
push
sbb
pusha
loop
pushf
out
ss
daa
imul
roll
outsl
adc
pop
nop
jg
mov
jns
push
rcll
insl
fbld
jae
pusha
fimull
sub
add
pop
dec
cmp
int3
das
jo
out
popf
add
enter
sbb
bound
mov
stos
dec
lahf
mov
lods
fistps
pop
xor
lea
inc
xchg
pop
enter
hlt
jne
sbb
test
adc
pushf
in
cltd
add
lea
sahf
mov
push
and
dec
pop
inc
dec
cs
dec
fwait
xchg
sub
mov
test
jns
push
inc
popf
std
inc
jge
into
pop
negb
dec
pop
mov
xchg
testb
adc
mov
and
out
add
sub
gs
xchg
movl
dec
hlt
push
je
ja
mov
cmp
push
or
push
xor
inc
add
inc
dec
pushf
mov
push
xor
insl
mov
imul
push
incb
cmp
call
push
imul
and
loopne
and
lea
add
lret
xor
xor
hlt
js
scas
imul
push
mov
insb
movsb
mov
jb
jmp
mov
enter
xchg
arpl
test
xchg
repnz
test
nop
mov
xlat
pop
inc
sub
les
mov
pop
sub
js
lods
sbb
icebp
or
sahf
mov
fs
lret
xor
or
adc
jns
cld
mov
mov
cmp
sbb
pop
jl
pop
in
outsl
insb
mov
push
cmp
xchg
jns
sub
jecxz
es
mov
jge
inc
add
jle
pop
dec
inc
imul
dec
fs
sbbb
popa
adc
out
and
out
pop
mov
ds
add
rolb
add
icebp
pop
cs
out
nop
jnp
or
popf
mov
je
fsub
or
gs
sub
and
fcomip
cmpl
outsl
fmull
frstor
jnp
add
jecxz
sub
and
pop
test
xchg
cld
ja
or
xor
push
cmpsb
jae
ljmp
arpl
mov
adc
jmp
out
mov
dec
and
repnz
std
and
push
sbb
fs
mov
pop
rcll
test
fcoml
fstps
bound
mov
sub
xchg
sbb
lcall
out
call
stos
sahf
dec
dec
mov
mov
xchg
jge
lahf
out
fsub
fxch
cwtl
sarb
and
pusha
popf
xchg
pop
test
cmpsl
add
lea
shll
stc
js
insl
sahf
ret
cmp
or
and
jecxz
pop
enter
pushf
inc
bsf
aam
scas
xor
lods
popl
daa
minps
inc
adc
les
push
stos
das
pop
dec
enter
push
pop
adc
push
jp
rcrl
jo
out
outsl
push
in
test
punpckhdq
push
mov
xor
inc
pop
cmp
cs
mov
sub
loope
inc
push
or
std
jb
sub
push
and
sbb
leave
push
std
inc
jb
icebp
lret
lds
jg
push
js
fs
fwait
cmp
pop
outsl
bound
cmp
lahf
sub
sub
jecxz
cmp
jecxz
scas
or
daa
dec
push
fistpl
loop
jecxz
sti
mov
cmp
sbb
mov
adc
outsb
mov
add
fsub
adc
push
inc
mov
mov
push
mov
mov
adc
pop
push
dec
mov
fnsave
dec
insl
mov
mov
sub
shll
cmpsb
inc
lcall
xchg
and
jb
push
inc
xor
daa
and
int
insl
mov
pushf
cmp
imul
adc
cmpsl
stos
jb
xor
fsub
mov
js
outsl
add
enterw
aam
data16
jnp
inc
jecxz,pn
call
mov
jno
jb
adc
inc
push
sahf
xchg
jae
adc
into
jns
xchg
cmp
icebp
xchg
jp
xor
sbb
test
ss
movl
and
jl
lahf
cmpsl
xchg
frstor
mov
bound
inc
cmpsb
test
movsb
pop
fsts
adc
push
js
int
push
mov
mov
jbe
xchg
xor
mov
push
je
and
adc
and
sti
mov
dec
pop
dec
push
sub
jns
leave
jbe
xor
mov
in
sbb
push
scas
rcrl
xchg
inc
xorl
push
subb
sbb
or
dec
jae
sbb
add
and
fdivrl
jnp
or
cmpsl
adc
add
out
fucomi
int3
rcrb
lods
out
mov
int
imul
push
mov
jb
dec
pusha
xlat
cld
or
imul
xlat
dec
outsb
add
mov
out
loop
fisubrl
idivb
and
sbb
jecxz
jae
inc
sti
popf
cli
adc
aas
dec
dec
int3
lahf
and
fisubs
jle
daa
orb
cmp
or
pushf
sbb
aad
or
ret
test
adc
mov
rclb
sbb
inc
push
mov
or
cmpb
adc
loopne
data16
cs
xor
cmp
ud1
sub
sub
jge
mov
pop
rclb
jo
xor
incl
mov
outsl
and
lods
push
pushf
in
bound
es
lock
adc
jecxz
ja
lret
pop
inc
lea
pop
jb
jmp
in
lods
inc
sub
outsl
int3
sub
push
inc
sub
popa
mov
pushl
push
add
xchg
cltd
cmp
ja
in
aad
sti
adc
daa
push
movsb
jg
xchg
mov
das
scas
rcll
daa
xchg
insl
pop
loope
lahf
push
insb
adc
inc
xor
pop
pop
jnp
jp
xchg
add
sub
fisttps
dec
pop
js
pop
and
cwtl
mov
inc
jae
add
hlt
dec
pop
fwait
es
jg
stc
mov
ljmp
dec
pushf
mov
sbb
dec
push
jl
sbb
lcall
pop
xchg
add
xchg
mov
dec
lret
ljmp
lods
push
mov
jae
add
jmp
fcmovbe
add
add
sahf
sbb
cmc
gs
mov
fiadds
sahf
fwait
adc
cmp
inc
dec
xor
inc
pop
pop
push
flds
mov
lods
cmp
jg
outsb
and
push
sub
jp
mov
daa
and
hlt
pop
cld
add
mov
pop
mov
addb
insl
fists
push
xor
sahf
pusha
adc
cmp
repnz
clc
subb
or
jbe
mov
push
sarl
in
fwait
mov
add
test
xor
xchg
mov
inc
dec
pop
aaa
int
lods
add
jbe
andb
pop
mov
dec
andl
mov
adc
lock
lcall
push
out
test
adc
shrb
sbb
push
mov
repnz
mov
mov
push
jle
pop
lret
xlat
shll
sub
inc
mov
mov
shrl
fbld
jp
outsl
push
inc
inc
or
pop
test
aas
or
jp
mov
and
bound
out
jae
xor
mov
fpatan
call
add
sub
mov
pop
mov
fmuls
pop
fldenv
loop
sub
dec
adc
inc
cmc
push
ss
xchg
dec
fs
fsts
cmpl
mov
push
and
or
jb
mov
lods
adc
aad
lods
xor
repnz
xchg
test
sub
add
add
add
adc
adc
out
loop
mov
shlb
lahf
xor
mov
int
insl
fnstenv
sti
adc
xor
jb
scas
inc
pop
es
pop
sahf
pop
dec
inc
xchg
add
cmpsl
movsl
sbb
outsb
lods
mov
cmpsb
push
dec
popf
in
cmpb
sub
rorl
dec
xor
cmpsb
jle
fwait
sub
or
daa
and
push
repnz
xchg
scas
test
loope
mov
xchg
aad
and
dec
or
scas
inc
xchg
adc
sub
aas
add
ds
outsl
cmpsb
notl
and
xchg
add
or
mov
cmpsb
out
adc
mov
mov
lods
popa
mov
in
lcall
add
push
lds
repnz
ret
les
aaa
or
jae
xor
fcomps
ret
movsb
call
pushf
js
push
jns
and
aam
xor
adc
mov
dec
push
mov
clc
mov
sbb
pop
mov
invd
insl
or
mov
hlt
fldenv
repnz
je
adc
ljmp
or
les
mov
jecxz
lcall
int3
pop
or
sub
loope
mov
mov
mov
cmp
push
clc
mov
xchg
adc
dec
dec
mov
add
mov
mov
jbe
jmp
jb
fimull
es
lahf
stos
rcrb
loope
nop
lcall
xor
sub
sbb
add
xchg
mov
push
pop
fwait
cmp
add
mov
rorl
push
test
mov
out
dec
shl
test
insb
mov
cmpsl
xchg
fistpll
arpl
adcb
decb
pop
mov
inc
loope
mov
pop
sbb
mov
jp
popa
sub
test
nop
in
fnstenv
stc
int3
mov
bnd
pop
dec
and
adc
repnz
pop
nop
mov
mov
mov
movsl
mov
xlat
mov
push
jne
sbb
or
sub
mov
leave
mov
adc
lret
dec
call
or
aad
and
sub
mov
das
sbb
jg
adc
test
sbb
cmpsb
cwtl
pushf
mov
mov
xadd
test
mov
stos
dec
or
add
or
mov
pop
pop
push
or
cwtl
lea
sbb
or
xchg
data16
mov
cmp
adc
ret
cmp
sub
pop
mov
xlat
nop
xchg
bound
push
push
push
test
nop
outsl
cmpsb
repnz
jo
js
out
jae
test
add
clc
xor
or
cltd
xchg
or
add
or
fs
enter
sbb
pop
imul
xchg
push
mov
fwait
pushf
pop
cmp
mov
fistps
mov
mov
mov
cli
sbb
xchg
mov
push
mov
adc
popa
jmp
inc
clc
xchg
popl
popf
or
ljmp
mov
cld
jno
jbe
popf
add
dec
rorl
xchg
in
cs
push
push
in
xor
fwait
pop
dec
dec
lea
xlat
add
mov
outsb
push
xchg
sbb
cwtl
mov
insb
mov
sbb
push
jne
jmp
or
pop
add
pop
ret
mov
or
or
cli
xchg
je
les
mov
cmp
mov
mov
mov
sbb
pop
or
dec
out
cli
call
sub
mov
ds
pop
mov
fwait
enter
insb
adc
inc
lcall
inc
mov
sub
mov
jae
neg
dec
inc
mov
pop
je
les
insl
sbb
adc
or
sub
mov
mov
scas
inc
mov
adc
xor
lahf
shrb
cwtl
je
push
mov
xor
or
xchg
mov
mov
mov
mov
pop
subb
mov
int3
repnz
mov
sub
adc
and
dec
sti
into
xbegin
dec
mov
sahf
fs
sbb
cmp
inc
stos
lcall
mov
aam
sbb
pusha
sub
pop
js,pt
mov
loopne
inc
fisubrl
scas
add
cli
lods
xchg
mov
mov
test
mov
push
movsb
gs
mov
push
and
cmp
mov
in
aam
mov
push
imul
test
int3
addr16
inc
or
mov
les
lret
adc
aad
test
mov
aas
jo
stc
adc
popa
mov
test
push
add
lret
cld
jbe
cmp
loop
outsb
mov
adc
ret
aad
adc
shrb
leave
mov
pop
or
cs
inc
mov
popa
jp
lock
jno
subl
xor
ss
mov
jae
sbb
stos
add
lahf
inc
mov
jecxz
orb
xchg
aaa
jl
push
gs
test
cmp
subl
es
scas
movsl
push
jo
add
cmp
jnp
sub
popf
adc
ret
dec
mov
pop
pop
movsb
sbb
scas
test
loopne
inc
mov
mov
sub
or
repz
faddp
lcall
cmp
push
mov
pop
lock
sarb
cwtl
jbe
pusha
mov
lret
es
fsubrs
xchg
iret
fwait
mov
and
lea
sti
ret
sbb
lret
inc
out
lahf
stos
inc
popa
in
push
les
mov
inc
daa
xor
pushf
adc
lahf
int3
inc
js
mov
sbb
pop
scas
out
jne
lock
push
push
dec
loop
sahf
add
mov
push
lods
cmp
cwtl
jbe
mov
jns
fwait
mov
btcl
mov
addb
sbb
dec
gs
add
out
cmp
lret
mov
aas
mov
cmp
push
stos
mov
mov
cmp
mov
mov
sub
cld
mov
lahf
stos
in
pop
std
ret
xor
scas
lds
inc
mov
jp
dec
jg
cwtl
add
and
jle
sub
or
pop
rdmsr
mov
cmp
sbbb
push
pop
call
cld
lods
push
iret
push
loop
mov
insb
scas
loopne
cmp
push
pop
dec
pusha
addb
mov
jle
outsl
mov
roll
add
sti
stos
sub
out
jl
and
jmp
mov
std
nop
fnstsw
xchg
test
cmpsl
fdivrs
xorb
popa
ljmp
adc
mov
cltd
sub
xchg
push
pop
pop
popf
mov
adc
mov
fmull
jno
sahf
adc
sub
in
in
cwtl
xchg
rcrl
testl
gs
call
pusha
jp
xor
in
les
sub
pop
xchg
ret
cmp
stos
aas
mov
pop
leave
movsl
ror
sub
pop
mov
sbb
cli
pop
inc
mov
cmp
rcl
fisttps
mov
jp
add
mov
and
xchg
fmull
shlb
xchg
pushf
sar
movsb
or
mov
pop
ret
mov
or
mov
ljmp
data16
std
cmp
mov
add
or
bound
lret
jo
ljmp
and
roll
dec
xor
jne
mov
movsl
les
xor
and
sbbb
js
mov
push
cmp
mov
and
stos
inc
and
insb
adc
sub
in
sbb
push
inc
cmpsb
das
add
inc
pop
repz
into
or
xchg
pushf
add
inc
mov
lcall
push
fs
sbb
mov
in
enter
xchg
cmp
xor
add
mov
shr
inc
fstpl
inc
inc
xchg
dec
xchg
mov
fisttps
mov
mov
pop
push
pop
xor
pop
lahf
dec
enter
filds
jp
xchg
movsb
lods
lods
sub
movb
mov
pop
lea
inc
dec
cld
pop
cli
mov
jl
mov
imul
add
das
inc
xchg
pop
cmpsw
sbb
jle
out
or
jge
push
mov
xor
pop
dec
icebp
rcrl
push
sahf
test
mov
mov
inc
negb
xor
mov
in
insb
push
mov
push
sbb
adc
sub
dec
and
mov
out
mov
inc
pop
iret
mov
jge
nop
cld
xchg
jno
xchg
xchg
sub
or
mov
pop
mov
pop
in
scas
push
mov
stos
pop
or
cmp
xchg
neg
ja
int3
mov
je
lods
mov
movsl
or
mov
cmpsb
jecxz
xchg
fldenv
test
push
dec
stos
pop
jo
in
lds
int3
xchg
xor
jle
mov
dec
std
aaa
cmp
shlb
xchg
icebp
ret
jp
dec
mov
mov
jo
sub
inc
pop
aaa
add
mov
inc
mov
ljmp
int3
sbb
cmp
out
cwtl
inc
aad
out
mov
lcall
inc
dec
push
cmc
movsl
jmp
or
lahf
dec
mov
jl
outsb
or
xchg
icebp
jg
jbe
jecxz
cmp
sbb
lret
inc
hlt
pusha
or
gs
cmp
les
push
and
sbb
test
ror
push
inc
mov
mov
mov
xor
lret
push
ja
cli
dec
jb
xchg
mov
sub
leave
mov
dec
push
inc
stos
cmp
jne
pusha
adc
sbb
mov
sets
in
andb
cltd
xchg
mov
imul
sub
sbb
ss
add
js
mov
mov
mov
cmp
pusha
mov
inc
int
in
mov
push
test
push
stos
notb
mov
sub
xchg
repnz
mov
in
mov
mov
aam
mov
add
or
hlt
mov
scas
cmp
adc
mov
clc
pop
mulb
mov
imul
test
cwtl
mov
mov
jb
pop
clc
mov
add
fstpl
adc
cmpsl
loope
push
mov
xchg
xchg
push
addr16
xor
cld
mov
hlt
or
mov
repz
test
dec
ja
ret
and
nop
add
push
jno
cmp
mov
in
movsl
mov
pop
mov
xchg
push
test
and
daa
or
sbb
js
mov
fistpl
int3
xchg
js
push
or
jmp
subl
adc
test
mov
jl
test
mov
pop
mov
fcompl
clc
pop
and
pop
jg
dec
push
shlb
xchg
inc
daa
movsl
pop
xor
dec
lea
push
mov
mov
mov
cmp
jno
dec
or
fstpl
mov
add
xchg
nop
cmpsl
mov
test
mov
idivl
jge
cmp
loopne
lcall
xor
adc
jge
sub
and
inc
or
mov
push
out
sub
cwtl
jb
popf
ret
xchg
inc
cmpl
ret
popf
sbb
js
imul
jecxz
xor
leave
fs
add
outsl
pop
push
mov
push
lods
add
jge
sbb
mov
xchg
xchg
std
cmp
adc
mov
add
jns
ret
pop
fidivl
cltd
subl
ds
push
out
xor
pushf
popf
lret
jge
jge
js
arpl
dec
add
mov
mov
jle
mov
pop
imul
sbb
mov
nop
or
mov
mov
dec
cmp
cli
inc
mov
in
xchg
push
sbb
inc
daa
loopne
mov
nop
xchg
mov
sahf
outsb
inc
lret
hlt
shl
data16
jae,pt
adc
test
jae
or
sbb
add
outsl
mov
jge
mov
ret
cmp
mov
add
fs
xchg
das
insl
ror
inc
pusha
pop
mov
add
lds
mov
sub
xor
mov
popf
sbb
lds
pusha
jge
push
ret
pop
cmp
add
or
jge
xchg
pop
je
cli
loopne
inc
mov
sahf
stos
xor
jge
int3
add
push
cwtl
dec
std
sbb
mov
pop
jp
push
push
xlat
sbb
int3
mov
cmp
jecxz
cmp
push
inc
sti
rorb
mov
sahf
scas
ret
and
pop
dec
inc
ds
xor
xchg
pop
push
sarl
pop
scas
mov
popf
in
xchg
dec
sub
pop
movsb
cmp
cmp
mov
cmpb
pop
add
pop
rcrb
mov
sahf
adc
in
outsl
sub
mov
ljmp
fimull
cmp
fnstsw
jo
add
repz
pop
adc
cmp
sbb
mov
xor
or
cld
rclb
xchg
lcall
jle
rcrb
adc
push
dec
sti
push
jecxz
cmp
pop
adc
xchg
aad
addr16
sbb
dec
push
outsl
je
inc
cmp
ret
pop
sbb
ret
mov
adc
xchg
addr16
or
and
ds
jmp
std
addr16
jg
dec
lods
mov
je
fnsave
outsl
leave
sahf
inc
mov
jge
mov
rclb
jge
mov
add
lret
xchg
loope
sub
sarl
sbb
loopne
rclb
test
mov
mov
repz
push
ds
pushf
push
scas
mov
jne
xor
adc
add
div
cmpsl
pop
mov
jl
cs
out
adc
dec
or
cmp
mov
cmc
jge
jp
dec
gs
xor
mov
sahf
mov
add
xor
ret
push
cmp
aad
xchg
mov
and
mov
pop
push
enter
ret
pushf
and
notb
test
fimull
test
adc
fdivl
mov
inc
pusha
dec
sarb
push
mov
mov
sub
into
icebp
pop
leave
fists
pushf
pop
and
xor
xor
push
cwtl
ret
aad
sub
ret
push
dec
mov
sub
popf
pop
in
pop
rcl
lea
cli
addl
lods
cmp
sbb
out
add
mov
fs
shlb
xchg
xchg
inc
sbb
out
hlt
hlt
mov
mov
fs
insb
outsl
das
add
cs
mov
jge
mov
and
sbb
xchg
imul
pop
out
sub
lea
insb
test
mov
rcrl
cmp
into
rorb
cwtl
and
or
push
cmp
xchg
push
jge
dec
push
movsb
std
test
insl
ret
fcmovnu
sub
movsl
jge
pop
mov
jge
hlt
pop
push
jge
movsb
faddl
add
lahf
add
imul
mov
andl
push
imul
add
add
mov
sub
dec
push
daa
cmp
sbb
jb
jecxz
jo
loopne
outsl
xchg
xor
xchg
xchg
xchg
pop
inc
sahf
inc
pop
sub
inc
xchg
mov
mov
or
jge
pop
out
ret
roll
popf
imul
mov
pop
jo
dec
addb
icebp
add
push
les
jl
mov
cmc
mov
and
adc
mov
pop
fisttpll
fs
out
int3
popf
cli
insb
lret
pop
mov
cltd
test
ret
push
ficoml
mov
sti
andl
mov
add
add
push
add
insb
dec
fwait
push
push
push
push
mov
mov
add
in
rolb
pop
xor
and
add
loopne
hlt
jmp
pushf
mov
sahf
adc
adc
jb
ret
inc
adc
les
cmpsl
stc
push
adc
std
mov
mov
inc
popf
or
mov
inc
pop
sbb
lret
xchg
push
mov
jge
scas
dec
sub
imul
je
jle
pushl
ret
pusha
in
cli
mov
popf
jno
or
push
mov
push
sbb
hlt
xchg
add
and
add
jle
hlt
mov
xor
or
arpl
dec
or
std
jo
cld
jge
xor
test
inc
pop
mov
cmp
dec
sbb
loopne
pop
test
daa
rclb
add
ret
jge
mov
jge
xor
xorl
std
cmpsb
and
and
mov
mov
add
je
test
pop
or
mov
jge
call
inc
adc
mov
out
lret
xchg
cmp
mov
outsl
jle
mov
mov
push
jp
std
xchg
outsl
dec
push
hlt
sbb
int
inc
scas
aas
stos
sub
cmp
fucomip
xchg
dec
mov
pushf
push
scas
or
imul
adc
in
xchg
inc
les
xor
xor
dec
loope
dec
insb
push
xchg
outsl
in
push
sub
fcmovbe
das
inc
aad
mov
lret
mov
popf
sub
jge
jp
xchg
inc
out
xchg
push
pusha
jns
inc
or
sbb
dec
xor
mov
inc
mov
mov
cwtl
mov
nop
sbb
or
jge
or
rolb
fstpl
fcmove
mov
mov
sbb
cmc
rolb
push
test
rorb
jg
add
mov
test
sbb
push
push
and
in
fimull
js
cmp
jno
sahf
mov
or
add
jecxz
add
rcrl
into
popf
add
jg
sub
add
loopne
xor
outsl
cs
xchg
lcall
sbb
lea
hlt
sub
mov
cmpl
andb
push
jmp
adc
mov
push
sbb
nop
mov
js
ret
fwait
addr16
sahf
xor
outsb
ds
outsl
sub
jp
cld
pop
sarb
mov
push
les
repz
inc
shlb
mov
cmpb
aaa
cwtl
loopne
adc
sahf
fidivrl
repz
aaa
ja
jo
jmp
addr16
aaa
dec
xor
add
cmp
and
icebp
add
rcll
add
stc
mov
mov
sbb
sub
xchg
add
mov
imul
adc
sahf
or
push
icebp
add
push
hlt
mov
jmp
fs
mov
jns
add
mov
ja
cmp
je
cmp
mov
jge
int3
pop
push
cmp
jmp
es
inc
sbb
mov
dec
and
add
jge
adc
in
cmp
jge
leave
ret
aam
paddw
fucom
dec
push
push
mov
popf
dec
mov
jge
mov
cmp
pop
addr16
dec
push
rorb
or
mov
push
jo
sahf
push
pushf
ficomps
js
in
sarl
pusha
xchg
mov
adc
cmp
into
sti
cmpsb
mov
sbb
ret
pusha
mov
cltd
sbb
addr16
mov
call
pop
cmpsl
jno
xor
in
call
mov
int
jge
or
jge
dec
ret
sbb
sbb
call
xchg
add
and
xchg
fistpl
or
jge
ljmp
mov
mov
jecxz
push
or
jge
inc
xchg
jo
pop
rcr
xor
mov
xchg
test
adc
stc
hlt
inc
inc
and
enter
fnsave
sbb
push
sub
ret
mov
add
sbbl
ret
stos
mov
cmpb
ficoms
xchg
add
add
iret
fimull
fs
sub
pop
push
xchg
aad
out
inc
cmp
jge
sub
loope
sbb
fdivrl
pop
sub
fsincos
add
xchg
jge
lcall
out
push
std
xor
xlat
dec
lds
cmpsb
add
js
pop
mov
mov
jo
add
push
add
xchg
mov
ret
ds
flds
mov
std
pop
jg
cmp
stos
pop
lahf
sbb
ficoml
lock
imul
push
mov
ds
nop
sbb
xchg
lcall
jle
mov
pop
or
ja
subb
fstpl
ficomps
add
hlt
xor
dec
mov
inc
sbb
xchg
cmp
ret
pop
out
les
cmp
add
jge
push
in
mov
pop
cmp
lahf
mov
testb
fldl
mov
mov
add
std
xchg
sub
add
add
rolb
sbb
push
or
add
cwtl
aam
cmp
mov
lods
jge
pop
inc
adc
mov
add
lcall
mov
xchg
jle
or
cltd
pop
mov
mov
enter
lcall
xchg
fcompl
ret
xchg
add
lcall
push
repz
inc
addb
bound
aam
xchg
cmpsl
cs
push
and
mov
fstl
cmpsl
xchg
mov
pop
mov
xor
iret
sbb
inc
inc
pushf
or
pusha
cli
sahf
xchg
cltd
xlat
aad
cmpsl
jle,pn
pop
or
fs
push
push
pop
sbb
jne
scas
xchg
xchg
push
aam
arpl
mov
add
hlt
rol
inc
add
mov
add
jns
outsl
je
pop
xchg
pop
jl
pop
outsl
aaa
push
or
jns
sbb
stos
sahf
and
push
mov
shll
cmp
xchg
sahf
cmp
mov
mov
or
cmp
leave
rcll
in
push
lods
sahf
call
hlt
adc
data16
sar
jp
sbb
out
add
fiadds
jge
xchg
bound
popf
dec
daa
inc
sbb
xchg
and
and
or
add
sub
int3
jg
cmc
rorb
sbb
shll
push
xor
mov
mov
jge
pop
scas
aas
jo
and
loopne
dec
push
mov
out
xchg
xchg
gs
ds
aaa
inc
std
or
imul
lahf
inc
ret
cld
add
pop
cmp
cltd
add
and
mov
dec
lret
sbb
jg
cmp
sahf
nop
xchg
sbb
adc
xchg
pop
fisubl
push
push
mov
adc
xchg
push
dec
fstpl
xchg
sbb
mov
jge
xchg
daa
inc
jge
pop
fwait
adc
add
ret
xchg
inc
dec
push
aad
lret
inc
pop
loopne
push
dec
sbb
mov
and
test
pop
lret
push
sbb
addr16
cs
xchg
adc
cltd
adc
mov
movhps
jl
jbe
enter
jge
scas
pop
dec
addr16
add
dec
lock
jnp
jns
aam
mov
adc
jo
sahf
faddl
sbb
jg
sub
jge
ss
push
cmp
ja
mov
popa
mov
shrl
jge
pop
subb
push
mov
arpl
inc
pop
rorb
lahf
jns
inc
cltd
push
push
sbb
or
pop
and
xchg
ret
test
outsl
popf
cmp
and
popf
cld
xchg
jecxz
xlat
or
outsl
addl
add
add
hlt
lods
cmpsl
add
ret
ss
jg
fwait
cmp
sahf
dec
push
adcb
sbb
mov
fs
outsl
ficomps
mov
leave
sub
add
jo
mov
les
filds
pop
jo
mov
jl
outsl
xor
imul
ja
cmpsl
mov
mov
loope
jge
add
ret
inc
iret
ret
fisubrl
jg
cli
mov
jge
pop
das
xchg
orb
mov
mov
jle
xor
cmp
nop
pop
rorl
mov
cld
sbb
les
dec
jecxz
jl
outsb
outsl
lret
cltd
inc
jge
ret
out
jg
cltd
sbb
push
add
je
notl
lahf
fsubrl
and
ds
dec
pop
mov
jg
setge
jge
mov
xchg
xchg
ret
adc
addb
or
jge
rcrb
mov
sar
sahf
les
adc
inc
xchg
pop
xor
xchg
cmp
mov
das
add
sbb
outsl
fldt
imul
fwait
push
xchg
mov
ret
icebp
fimull
shl
xor
xor
lods
xor
sbb
int
and
inc
nop
and
scas
adc
pop
cltd
roll
inc
ds
push
xchg
ficomps
std
js
pop
or
mov
push
adc
nop
les
add
jne
popf
dec
sbb
ret
lcall
loop
push
cmp
stos
out
jae,pt
pop
dec
xchg
pop
outsl
dec
push
mov
fldl
mov
in
mov
popf
pop
mov
dec
cwtl
sub
pop
pop
push
mov
adc
and
cmpsl
loopne
xor
xor
add
pushf
xchg
jo
sahf
and
push
inc
jo
mov
shrl
add
popa
ds
fisubrl
rcrl
push
mov
int3
mov
pop
fstl
push
push
add
popf
sti
xor
lds
inc
ret
cmp
sbb
cmp
nop
lahf
sub
ja
ret
xchg
jecxz
sbb
icebp
push
or
push
cmpsl
pop
ffree
mov
adc
jge
clc
adc
pop
cmp
jmp
or
imul
adc
inc
mov
lahf
mov
jle
fcmovbe
cwtl
sbb
push
insl
or
mov
cltd
add
shlb
push
cwtl
jnp
mov
cltd
inc
ficompl
js
jp
test
imulb
xor
bound
mov
push
xchg
jb
jbe
ret
pop
es
daa
pop
adc
inc
push
push
cld
int
ret
mov
int3
cmp
inc
xor
push
data16
in
pop
mov
push
dec
dec
push
push
inc
loopne
xchg
pop
ret
jecxz
aad
aam
jb
push
or
add
out
rcrb
std
nop
ljmp
cwtl
xor
icebp
nop
inc
test
push
jge
adc
rol
xchg
sbb
bound
pop
lret
cmp
dec
mov
dec
mov
jge
int
mov
xchg
ffreep
jne
or
mov
xor
out
add
aad
addr16
shlb
pop
adc
sbbb
jle
mov
ret
in
rcrb
xchg
pop
add
inc
jne
pop
or
jge
xor
mov
ret
cmp
pop
adc
sti
hlt
mov
in
push
or
adc
add
adc
inc
rcl
insb
icebp
inc
fwait
sahf
xchg
mov
ret
test
mov
cwtl
dec
addr16
aam
lds
clc
mov
mov
mov
sub
pop
fstps
mov
xchg
adc
orl
pop
mov
stos
xor
shlb
stos
push
pop
aad
and
fstpl
cmp
xor
xchg
test
adc
cwtl
loopne
sar
pop
fistps
mov
fwait
xchg
cmp
inc
fldl
push
mov
popf
adc
dec
fnstcw
push
outsb
outsl
inc
std
pop
ret
stos
mov
ret
mov
arpl
fstps
adc
in
mov
jle
add
nop
iret
pop
adc
push
iret
and
push
push
pop
push
outsl
inc
imul
orl
or
jecxz
adc
cmpsl
sbb
test
mov
xchg
addb
mov
sbb
xchg
fwait
adc
cli
jecxz
jl
sub
fistps
jecxz
nop
mov
fwait
sbb
imul
dec
sbb
aam
or
mov
push
movsb
xchg
sahf
push
ret
jle
inc
jg
outsl
xchg
jns
rorl
fbld
scas
xchg
leave
mov
pop
pop
xchg
cmp
loopne
insl
sbb
dec
mov
sbb
loopne
jg
xchg
pusha
push
jp
inc
pop
insb
cmpb
xchg
push
mov
and
sbbl
jge
pop
mov
insb
push
sarl
clc
jge
pop
add
popa
jno
js
jecxz
push
js
mov
sahf
mov
dec
jle
pop
sub
mov
ds
std
insl
fs
jp
mov
xor
mov
ss
movsb
pop
sbb
inc
jge
cmpsb
addr16
sbb
mov
xor
fwait
push
hlt
push
pop
xchg
sbb
jle
dec
ds
push
jb
mov
xchg
ret
or
push
dec
push
mov
push
dec
lahf
or
rorb
ret
pushf
pop
sbbl
cltd
ds
hlt
lar
push
push
cwtl
aad
add
std
pushl
jo
fldl
jns
ret
outsl
cltd
pop
add
inc
jge
arpl
jecxz
xchg
xchg
bound
jg
sbb
outsl
pushf
push
sbb
jl,pt
cwtl
ja
mov
inc
lcall
cltd
mov
pop
stos
adc
mov
popf
lret
adc
or
mov
pop
fcompl
mov
xchg
jmp
xchg
push
shlb
sbb
sahf
or
push
sbb
cld
mov
xchg
sarl
pop
xchg
lahf
aas
mov
test
inc
popf
pop
or
mov
xchg
dec
jecxz
insb
xchg
and
dec
push
sbb
es
sbb
add
pop
lea
push
out
shll
cld
loopne
mov
stc
mov
insb
dec
jge
pop
push
dec
push
sbb
aas
jbe
dec
leave
dec
add
sahf
int3
cmp
cmpb
fwait
xor
ds
xlat
cmc
or
jb
push
push
xor
sub
popf
push
add
dec
ret
aas
loope
inc
add
hlt
cmpsb
roll
xor
loopne
sar
jmp
sbbl
pop
and
mov
push
mov
inc
std
stos
adc
mov
mov
adcb
fcoml
mov
nop
loopnew
cltd
adc
lret
pop
and
mov
xchg
add
pushf
xchg
ss
mov
lahf
or
mov
xchg
popa
jecxz
insb
sbb
push
daa
and
adcl
xchg
and
es
sbb
test
cmp
mov
cs
mov
popf
add
std
xor
mov
jge
addb
and
push
push
push
add
les
out
mov
xchg
jne
es
add
in
pop
push
inc
push
addl
pop
cs
int
add
push
push
xchg
add
pop
gs
inc
pop
pop
aas
shl
adc
js
sbb
and
fcmovne
xchg
inc
pop
icebp
adc
test
mov
fsts
lock
add
dec
aam
xchg
sbb
mov
rol
push
cmp
shll
cmpsl
add
mov
mov
cmp
lea
pusha
pop
jo
inc
pusha
lcall
xor
push
inc
mov
push
adc
xchg
inc
ret
hlt
fidivrs
jge
ret
dec
cmp
push
sahf
sbb
pop
enter
inc
mov
pop
cltd
daa
ficoml
ljmp
ret
popf
pop
fimull
push
xchg
jge
jg
cmpsb
outsl
push
ret
jg
jl
push
outsl
mov
jle
outsl
inc
sub
ret
cltd
mov
inc
sahf
fstps
xchg
nop
xchg
pop
add
std
mov
xchg
outsl
icebp
mov
mov
pusha
sub
mov
and
jg
js
loopne
shrb
adc
lds
jle
inc
addr16
je
push
aas
dec
dec
pushf
mov
xor
mov
sbb
dec
pop
push
ret
cwtl
cmp
sbb
mov
lock
sbb
inc
pushf
or
jle
outsl
lea
mov
roll
ror
add
or
negl
ret
pusha
out
inc
xchg
int3
fdivrp
jge
or
pop
fimuls
dec
sbb
push
pop
sahf
ret
lods
adc
jecxz
test
faddp
sbb
xchg
push
xor
stos
cwtl
push
aad
addr16
fnstsw
dec
addr16
jl
dec
int
loop
out
sbb
cmp
cmp
add
mov
or
or
and
hlt
xchg
push
sahf
pop
call
aad
jmp
and
xchg
pop
shll
in
aas
sbb
xchg
dec
push
lea
movsl
add
dec
sbb
nop
jge
inc
jle
pop
xchg
test
dec
mov
adc
idivl
cltd
xchg
sbb
mov
jge
insb
mov
into
push
faddp
adc
inc
repnz
push
loopne
insl
cwtl
xchg
test
mov
push
or
repnz
xor
push
clc
push
pop
cmpsl
cmpsl
push
faddl
mov
pusha
xchg
mov
bound
dec
cmpsl
jle
cmp
iret
mov
xchg
sbb
xchg
rcrb
cwtl
jmp
push
ret
sbb
movsl
lods
insl
xchg
push
and
std
xrelease
mov
add
in
repz
sbb
or
sub
pop
pop
sahf
into
sbb
push
outsl
icebp
sub
int3
mov
adc
add
filds
push
jge
add
cmp
pusha
jecxz
or
insb
or
orl
add
add
jge
daa
stc
pop
hlt
xchg
pusha
xchg
dec
cmpsl
push
push
and
mov
lret
push
rcr
push
sbb
test
adc
stc
push
sar
adc
not
push
bsf
push
bt
adc
xor
bsr
mov
push
and
pusha
movsbw
mov
xchg
mov
push
rcl
not
adc
sub
lea
setb
lods
pushf
call
scas
push
push
jle
out
add
js
xor
dec
jbe
into
lock
inc
push
push
pushw
pop
lea
jb
mov
jmp
cmp
jno
pop
push
jecxz
sub
cmp
mov
lea
rcll
lret
fucomip
sbbb
push
stos
fbstp
xchg
jbe
dec
popf
add
fcompl
and
and
inc
dec
arpl
jno
call
mov
jnp
mov
pop
mov
pushf
and
xor
mov
push
clc
pushf
cmpb
push
pusha
lea
jne
aad
xor
shr
call
imul
daa
dec
and
fbld
mov
or
push
pop
mov
scas
push
inc
cwtl
sbb
add
push
jecxz
xor
jmp
paddusw
fsubrs
repnz
inc
repz
push
addr16
mov
das
int
adc
jb
or
out
call
movsl
mov
push
push
data16
cmpsb
fsubrp
adc
xor
inc
dec
test
es
fadds
and
xchg
pusha
sbbl
nopl
addr16
sbb
mov
dec
push
pop
ret
insb
inc
ja
and
fcmovnu
fnsave
pop
pop
addr16
jne
popf
movsl
roll
push
insl
mov
cmp
fyl2xp1
mov
negl
mov
xchg
mov
cmp
jle
lods
lds
in
and
hlt
imul
sahf
cmpsb
leave
pushl
xchg
sub
push
iret
push
cmpsl
fists
mov
and
enter
xchg
jae
add
or
or
loopne
test
je
jg
mov
lods
cs
je
xor
call
xchg
iret
push
test
jle
fs
sub
push
addl
mov
jle
ja
mov
iret
mov
test
arpl
cmp
add
fdivl
ret
rep
xor
push
and
push
inc
je
repz
jne
pop
scas
pop
pop
pusha
imul
mov
xchg
fdivrp
mov
cwtl
lods
aam
das
adc
lahf
xchg
call
mov
dec
dec
imul
push
mov
ss
xchg
ret
sbb
lret
and
notl
jmp
not
inc
dec
push
test
xchg
lea
sub
inc
mov
rol
mov
bt
jmp
jmp
test
and
add
movsl
fisttpl
inc
insl
ja
mov
aad
and
mov
je
in
mov
adc
push
ret
mov
sarl
sarl
pop
inc
xchg
movsb
inc
ljmp
imul
lgdtl
fstps
xor
jge
scas
sti
mov
sbb
and
fcmovne
add
je
mov
fdivl
out
icebp
cmp
adc
mov
mov
adc
int
sub
mov
pop
aaa
cmp
jae
fcmovnu
pop
dec
pop
xchg
mov
repz
lods
iret
push
daa
xor
push
mov
ret
cmc
pop
dec
ja
ja
mov
loope
sbb
js
dec
out
fstps
ss
push
icebp
movsl
cmpsb
ja
inc
mov
sub
or
inc
stc
incb
inc
test
mov
xor
cld
push
mov
stc
pop
rcrb
stos
mov
mov
cmp
repz
add
aaa
outsl
mov
jge
movsl
xor
movsl
push
lea
sbb
addb
test
fsub
in
out
or
adc
push
or
and
pop
adc
cmp
sahf
sub
lods
out
sbb
mov
insb
insb
cld
push
jmp
xor
mov
mov
mov
ljmp
pop
mov
sub
mov
dec
jae
pop
ljmp
addb
mov
mov
ret
out
call
cmpsl
movsl
loope
out
adc
jg
adc
scas
add
xchg
jmp
sbb
aaa
adc
jecxz
popf
or
fs
xchg
adc
mov
jnp
cmpsl
xchg
mov
mov
push
cmp
mov
jg
lock
and
js
mov
xchg
adc
mov
dec
jno
test
cmove
scas
push
imul
or
adc
fistps
sahf
aam
in
lock
pop
mov
shl
or
rcr
je
das
aas
bound
adc
dec
test
pop
mov
lea
jb
push
bt
cmp
cmc
cmp
pusha
pusha
call
pusha
push
lea
jne
ror
bts
mov
btr
sub
ror
inc
mov
mov
jmp
rcl
mov
test
call
jns
outsb
sbb
rorb
push
iret
fs
xchg
inc
aam
mov
loopne
add
xchg
lret
xchg
xor
shl
cwtl
pop
cmp
xchg
pop
xchg
insl
in
adc
repnz
out
sbb
mov
sbb
movsl
scas
sbb
mov
lods
adc
mov
loopne
sbb
ret
jmp
nop
enter
fildl
push
orb
pusha
jnp
push
pop
outsb
mov
mov
jo
fs
lea
lret
stc
add
inc
adc
mov
pop
xchg
loop
dec
repz
jno
scas
or
into
mov
stc
jnp
mov
js
add
dec
pushf
sbb
adc
test
mov
movsb
cmpsl
or
nop
jbe
cmp
mov
push
scas
setge
int3
sub
cld
mov
out
push
push
mov
mov
lds
sub
cld
lods
mov
sbb
mul
sbb
push
cmc
mov
sbb
mov
lods
imulb
push
js
or
dec
or
repnz
xchg
jmp
add
pop
pusha
and
movb
repnz
rclb
or
cmpb
sub
sub
jle
ds
jmp
mov
inc
movsl
outsl
jp
push
mov
aaa
jno
adc
ret
testl
jne
add
sub
mov
cltd
fnstcw
or
inc
iret
jbe
jge
lods
dec
cmp
dec
inc
roll
test
inc
aaa
dec
inc
aas
xchg
popl
mov
addr16
or
repnz
sti
mov
jne
shlb
adc
movsl
enter
mov
cmpsb
in
pop
adc
mov
les
loop
push
pop
xor
mov
stos
sbb
gs
and
adc
fisubrl
push
into
xor
and
neg
xchg
push
pop
push
push
pop
nop
ret
xor
mov
out
stos
mov
and
fimull
inc
out
jge
in
imul
pop
mov
adc
mov
add
inc
lea
xchg
ss
mov
push
mov
int3
sub
ret
jge
dec
mov
shll
mov
popf
or
mov
inc
mov
mov
or
mov
loopne
fs
mov
mov
test
test
rcrl
decl
pop
fldenv
adc
sahf
roll
pop
out
jne
lds
lea
mov
pop
pusha
test
pop
call
adc
aaa
pop
push
xchg
and
inc
push
fsub
rcrb
push
pop
push
movsb
icebp
pop
std
cmpsl
cmp
mov
hlt
xor
scas
mov
imul
jmp
mov
jns
pop
or
dec
ret
pop
rorl
mov
jae
sub
mov
out
pushf
and
xchg
std
aad
repz
xlat
xchg
scas
mov
add
or
inc
mov
add
js
out
lahf
insb
bound
loopne
mov
push
jge
shlb
fistpl
inc
or
cmp
pop
jb
sub
add
fsubrs
adc
push
ss
sub
mov
cmp
sbb
mov
aad
adc
int3
mov
jnp
test
imul
xor
or
hlt
insb
jmp
sub
lahf
dec
sahf
mov
mov
jnp
nop
sub
push
lods
lret
push
orl
xlat
dec
cmp
mov
cmpsb
loop
pop
jae
and
sub
cmpsl
jg
inc
xchg
push
add
daa
sbbl
sbb
mov
mov
cmp
sbb
es
mov
inc
test
add
jp
rcrb
mov
mov
pop
in
xchg
xorb
popf
jnp
push
lret
ret
or
mov
movsl
mov
mov
mov
loope
mov
das
sarb
mov
outsb
dec
popf
mov
inc
mov
push
mov
cwtl
test
push
push
and
sbb
aad
inc
pop
mov
dec
ljmp
cmp
aas
pop
call
aad
mov
jno
push
sbb
cmp
fsubs
fbstp
addb
mov
adc
pop
movsl
cmpsl
jne
add
fldl
mov
mov
sub
sub
lock
or
movl
push
cli
xchg
mov
cwtl
mov
xchg
dec
xor
iret
cmc
adc
push
fwait
pop
leave
mov
int3
decb
fimull
or
inc
xor
adc
bswap
mov
mov
nop
lock
ljmp
fs
push
jle
das
in
addr16
xor
adc
ljmp
xchg
xor
loopnew
gs
cmp
sub
rclb
out
cli
cmpsl
mov
fsubrs
rorl
lock
jne
add
cli
nop
stos
minps
fucompp
pop
jg
push
daa
and
xchg
mov
ret
pushf
or
in
jp
call
xchg
sbb
notl
xlat
imul
mov
mov
test
add
push
adc
test
cmp
clc
in
lret
sbb
cmp
mov
pusha
or
nop
xchg
pop
xchg
and
nop
iret
jecxz,pn
inc
sbb
mov
xchg
or
fsubs
cmp
push
addr16
ret
pop
push
pop
frstor
nop
cmp
inc
arpl
or
and
inc
dec
mov
ss
push
sbbb
mov
xor
dec
sub
jmp
cmpsl
repnz
mov
mov
push
stos
in
jnp
mov
mov
jl
mov
in
pop
insb
mov
aam
bound
xchg
mov
imul
xchg
arpl
xchg
add
cwtl
insb
jle
fnstcw
mov
inc
mov
into
cwtl
stc
xor
out
enter
scas
push
imul
aas
sub
cmpl
xor
dec
dec
nop
mov
push
push
xchg
xchg
mov
flds
pushf
icebp
mov
mov
lea
push
stos
mov
fsubrl
mov
sahf
jg
les
lahf
sub
inc
fcomps
sub
add
xchg
dec
push
jno
mov
jmp
rol
movsb
lret
insb
add
sbb
cmpsl
cli
sbb
inc
push
mov
mov
or
pop
jg
gs
sub
xchg
pmovmskb
inc
insb
adc
inc
push
xchg
push
sub
mov
dec
sub
dec
mov
insb
fstl
in
in
nop
ffreep
push
and
jle
adc
arpl
in
push
sbb
sub
lea
dec
xchg
mov
inc
mov
ret
dec
pop
xlat
ljmp
push
test
aad
mov
inc
jl
subl
adc
jo
insl
loopne
out
jmp
rclb
dec
xchg
lea
dec
cwtl
cwtl
jnp
inc
mov
dec
jmp
popf
test
jle
push
push
mov
call
stos
ret
fcompl
push
ljmp
or
loopne
lock
std
or
inc
jle
sub
out
xchg
push
cmpsl
adc
jb
sbb
xchg
adcb
psubd
xchg
bound
popl
js
inc
stc
add
lahf
cld
jb
inc
aad
cmp
add
lahf
shll
inc
nop
and
lret
inc
or
lahf
dec
jb
inc
inc
test
dec
and
and
add
jecxz
fiadds
lahf
jp
pop
inc
cmp
lahf
fwait
jb
inc
mull
aam
ja
inc
popl
lahf
or
addb
inc
test
push
lahf
ja
inc
add
lahf
pop
jb
inc
adc
sub
sub
add
loope
arpl
and
sbb
clc
add
lahf
jb,pn
mov
sbb
sbb
scas
mov
sti
push
stos
add
cmc
sub
shl
fs
adc
cmp
add
je
je
fwait
daa
inc
shrl
mull
test
lcall
push
push
sti
jne
cmc
mov
jne
jmp
sbb
in
pop
lea
jnp
mov
mov
fwait
mov
sub
sub
ret
push
jmp
imul
call
cmc
test
cltd
add
adc
out
inc
fstps
ja
test
sbb
inc
fwait
pushf
jl
cli
cmc
sbb
inc
pusha
push
jne
xor
lcall
dec
sarl
pop
cmp
addl
jns
sbbl
adc
and
xorb
sbb
inc
dec
xor
cli
mov
dec
into
mov
stos
lods
sub
into
fidivrs
mov
cli
jle
mov
js
call
cmc
fdecstp
sub
xor
ss
ds
out
jb
sub
mov
add
addr16
ss
push
pop
lahf
push
cmp
pusha
ja
xchg
arpl
aad
mov
call
and
scas
mov
std
and
movsb
sub
arpl
fdivs
fldl
ja
xchg
addr16
js
bound
pushf
cltd
bound
orb
jle
xchg
jecxz
out
andl
jns
jb
push
lock
jmp
inc
xchg
dec
add
sbb
sub
cmp
adc
sub
push
loope
push
xchg
loope
arpl
or
adc
xchg
inc
decb
int
pusha
cwtl
xchg
push
repnz
jmp
cmp
sbbl
xchg
fs
bound
mov
or
push
insb
mov
and
xchg
fcoml
pop
jne
mov
sbb
int
cmp
xchg
or
je
jmp
ret
xchg
inc
jmp
xchg
iret
inc
jp
sub
add
xchg
xchg
ds
shrb
addr16
or
mov
bound
dec
mov
xchg
enter
lret
repz
adc
sbb
xchg
les
mov
nop
xchg
dec
shrl
pop
ret
sahf
jge
pop
cmp
jle
std
inc
fsub
push
and
mov
nop
stos
in
mov
cs
das
mov
leave
mov
cmpxchg
fisubs
inc
sbb
add
addl
xchg
aaa
adc
loop
cmp
xchg
jnp
push
fs
pop
xchg
addr16
sahf
test
ret
mov
lcall
xchg
popa
addr16
orl
sbbb
cmp
jne
movsl
sbbb
and
push
insl
xchg
js
inc
cs
mov
jle
fisttps
stc
lds
sub
jle
push
sahf
imul
add
orl
insl
mov
orb
insb
jp
test
push
xchg
push
popf
mov
pusha
adc
jle
xor
in
pusha
sub
dec
insl
rcll
or
sbb
fistpll
jle
mov
jl
popf
dec
aad
cmp
and
sbb
pop
and
or
repz
sahf
xor
pusha
jle
lret
ds
mov
add
fstl
inc
jne
pop
sahf
fdivs
clc
mov
mov
jnp
fisttpll
sbb
sbb
pop
stos
inc
mov
addb
stc
adc
mov
lock
arpl
lret
push
ret
sub
pop
mov
sahf
fistpl
dec
sti
in
push
std
jge
cmpsb
sub
int3
push
adc
inc
stos
fisttpll
xchg
into
repnz
push
dec
sub
push
sbb
ds
push
aam
mov
movsl
inc
inc
sub
mov
pop
popf
aam
int
stos
lods
cs
xchg
mov
pop
xchg
scas
fistpll
jle
scas
dec
sub
or
int3
inc
movsb
cwtl
dec
and
cmp
mov
and
rorl
mov
dec
xchg
sahf
or
lahf
jl
lahf
xchg
subb
xchg
xchg
mov
mov
push
shrb
sub
ljmp
ret
cmpl
lret
pop
xlat
in
sti
adc
int3
std
xlat
xor
clc
int3
push
movsb
inc
sub
leave
jg
les
gs
cmp
xchg
test
stos
lahf
add
add
divl
xchg
inc
or
iret
dec
jb
insb
pop
dec
mov
imul
push
lock
cwtl
pop
sub
nop
mov
xchg
jb
sahf
sbb
notl
sahf
movb
push
mov
mov
hlt
test
addl
sahf
mov
je
data16
lcall
pop
lea
shlb
sbbb
sbbb
je
push
sub
adc
xorl
movsl
in
test
fstps
bound
ret
movsl
and
fcomps
jg
shlb
mov
push
test
lret
cwtl
push
and
ret
push
inc
loope
test
loop
and
cwtl
inc
cwtl
sbb
jg
jmp
sarl
call
popf
inc
addr16
jg
test
enter
ret
mov
pushf
and
and
fs
mov
fldl
and
xchg
mov
cltd
mov
lret
icebp
popf
dec
xchg
insl
jg
xchg
push
lahf
mov
cmc
or
xor
cmp
jl
jg
and
add
mov
sbb
rorl
inc
xchg
adc
mov
ljmp
push
mov
push
or
sub
or
inc
sub
fs
jp
pop
add
sbb
push
subl
dec
push
jbe
aas
orl
add
pop
fdivl
cmp
dec
cvtps2pd
mov
cmc
push
dec
push
pop
inc
cwtl
outsb
mov
push
pusha
mov
outsl
lds
cmp
push
mov
push
pusha
add
push
mov
adc
or
xchg
sub
cmpsl
and
mov
jge
or
cmp
outsl
xchg
mov
call
add
movsl
in
adc
or
lods
leave
test
ficoms
xchg
jmp
cld
mov
mov
add
and
jmp
add
je
clc
push
int3
fsubrp
sub
jo
push
out
pause
pusha
cmc
jbe
ret
mov
lcall
xchg
mov
incl
mov
cmp
inc
push
imul
pusha
mov
in
repz
push
or
sbb
mov
push
out
imul
mov
xor
das
flds
lock
xchg
rcrb
and
or
cld
ret
adc
xorb
outsb
out
or
and
push
pop
sub
jne
in
push
sub
or
jl
xor
in
aas
fdivrs
xchg
mov
xchg
sub
addr16
sub
and
mov
add
jbe
and
gs
pop
out
xchg
gs
test
dec
outsb
leave
sub
push
jno
lods
cmp
sub
cmc
xchg
mov
cli
mov
xor
cwtl
fsts
dec
or
sbbl
jecxz
hlt
movsl
bound
test
jg
jns
lods
out
inc
int3
insl
lds
xorb
rcl
orb
pusha
add
sbb
cmp
and
loope
sbb
inc
data16
mov
lea
in
xchg
fwait
pop
dec
out
test
pop
push
fadds
pusha
push
inc
push
icebp
sbb
push
pmulhw
jnp
fldt
sti
gs
pop
jae
int
out
jnp
gs
xor
out
cmp
cmp
out
les
push
imul
mov
mov
lods
inc
lcall
in
arpl
mov
out
addl
mov
ret
mov
xchg
jp
punpckldq
jg
ret
jbe
orl
inc
int
jmp
lods
mov
sub
insb
test
sub
mov
jl
xchg
shrb
or
sub
leave
adc
jbe
push
and
out
hlt
dec
outsl
insl
rorl
mov
ficoms
lcall
fists
sub
sub
mov
pop
fwait
mov
pop
jbe
push
jle
ds
xor
push
or
mov
aas
xchg
bnd
mov
fwait
sti
subb
mov
push
adc
mov
jmp
or
leave
nopl
addr16
rorl
xchg
ret
or
negb
mov
jge
cmp
push
and
xchg
and
mov
sub
sub
pop
inc
push
leave
iret
test
xchg
mov
lret
mov
mov
pop
incl
sbb
sub
mov
mov
jo
je
gs
lods
inc
mov
stos
push
sti
sbb
inc
mov
jb
mov
scas
sub
mov
les
xchg
push
inc
in
or
mov
dec
imul
lcall
mov
xchg
lcall
cmc
xor
cmpsl
adc
xlat
cmp
mov
popa
sub
pop
add
fimull
or
lret
andb
xchg
sbb
shlb
dec
dec
jl
and
or
jns
jo
pop
popf
jo
pop
or
test
xchg
push
xchg
xchg
pop
lret
rolb
inc
ficoms
jmp
cld
cmpsl
pop
das
sub
add
inc
roll
add
lods
in
lock
test
sbb
sti
xchg
or
jnp
test
xchg
mov
mov
xor
fsub
mov
cmc
xchg
cmpsl
lret
mov
je
or
test
lds
inc
and
stos
lods
test
and
rcll
das
rolb
bound
inc
inc
xor
sub
test
push
sahf
bound
pop
fdivs
cltd
or
daa
push
iret
test
or
je
ret
cmp
nop
ljmp
outsb
xchg
shrb
or
leave
movsl
mov
subl
cmc
popf
lcall
sbb
dec
push
add
leave
cld
fiaddl
ret
sub
lret
push
test
xchg
imul
repz
sarl
dec
push
lods
repz
pop
or
ja,pt
inc
std
add
lahf
mov
xchg
lea
out
inc
pop
bound
xchg
sbb
and
jns
dec
daa
pop
add
xchg
push
jbe
ret
ljmp
daa
ds
push
dec
std
add
fstpl
pop
inc
in
repz
mov
lock
jno
lods
cmpsl
sub
fmuls
fld
inc
popf
ss
add
or
les
sub
rep
sub
pop
push
mov
adc
jae
shll
mov
sub
repz
lahf
lock
adc
dec
or
cltd
insl
pop
lahf
inc
add
push
push
jg
lcall
add
lods
dec
in
bound
sbb
lcall
xorb
sub
testb
pop
or
jnp
divb
xchg
xor
sti
rolb
push
pop
xchg
add
push
push
mov
mov
sbb
repz
and
jnp
and
jl
cmp
or
pop
loopne
aad
loope
push
sbb
add
out
iret
jmp
sub
pusha
nop
jo
out
xchg
js
jp
jb
pop
cmpb
outsl
test
and
js
inc
sub
or
xchg
mov
loop
inc
fwait
and
les
bound
jmp
mov
adc
test
xchg
cmpsl
gs
inc
lock
addl
arpl
test
and
xchg
enter
push
pop
add
jo
push
ret
subb
push
shrl
push
add
les
test
inc
push
ret
push
inc
push
push
jle
mov
push
jge
mov
push
andb
andb
andb
sbb
scas
inc
mov
bound
aas
dec
rolb
and
pop
or
mov
lcall
fstps
outsb
test
and
sbb
jae
andb
cwtl
aas
cltd
js
bound
jns
lret
inc
sbbb
lahf
movsl
xchg
pop
cmp
addb
popa
mov
bound
dec
testl
rcll
jl
test
repnz
ja
bound
sbb
scas
inc
inc
sti
ret
bound
inc
int
bound
inc
jnp
cmpl
sbb
testb
pop
sub
test
test
push
test
test
test
cmc
sbb
addr16
loopne
xchg
xchg
jle
bound
inc
stos
add
js
inc
lret
inc
cmp
adc
bound
popf
cwtl
inc
mov
xchg
sbb
inc
inc
cli
cmp
xchg
and
sbb
jp
xchg
xchg
and
bound
test
xchg
popf
ja
xor
push
dec
je
dec
add
cld
inc
adc
repnz
jl
push
lret
arpl
push
adc
push
xchg
outsl
adc
addr16
js
bound
hlt
push
inc
sbb
jne
inc
je
jb
ja
mov
adc
in
dec
xchg
add
and
roll
shlb
mov
jae
jl
or
push
lahf
ljmp
int3
test
and
cmpsb
xchg
pop
out
cwtl
add
cwtl
lea
adc
imul
cmp
cmp
dec
sub
jp
bound
andb
stc
sbb
jnp
or
jmp
inc
stos
or
imul
out
sbb
or
mov
lahf
xchg
xchg
out
ljmp
lods
or
cwtl
add
inc
inc
test
xchg
data16
pop
out
inc
xor
add
fistps
pop
fisttpll
ds
jp
aas
xchg
mov
jle
ficoms
rcrl
mov
into
insb
inc
sbb
lret
add
ss
mov
popf
pop
inc
mov
and
sub
sahf
adc
xchg
sahf
add
mov
in
mov
outsl
add
stos
cmovns
fstpl
xchg
inc
inc
daa
jle
mov
inc
test
inc
push
sahf
cmpsl
mov
xor
cmp
and
adc
jle
cmpsl
popf
cltd
test
pop
fimuls
push
addr16
std
adc
jge
sahf
xor
sahf
out
fildll
ja
ret
int3
lahf
call
dec
scas
das
jns
push
fbld
in
jne
popa
mov
rolb
or
mov
clc
outsl
xor
stos
pop
sub
jge
xor
cwtl
in
push
pop
call
pop
or
adc
mov
sahf
in
mov
mov
scas
lahf
sub
add
pop
adc
and
mov
xchg
mov
cmp
and
ds
adcb
aas
insb
fsubs
xchg
xchg
dec
scas
subl
out
outsb
rclb
xchg
jb
leave
lea
mov
jl
dec
cmovl
or
or
cwtl
shrb
and
in
mov
lock
adc
je
stos
rolb
mov
insl
mov
pop
mov
and
es
test
mov
in
and
test
lcall
add
cmpsl
dec
jo
leave
xrelease
or
cmp
int
movsb
mov
push
stos
outsl
shlb
ud2
jo
push
jo
loop
test
cs
je
sub
stos
int3
jo
mov
jmp
adc
loope
dec
mov
outsb
jo
test
xor
out
das
into
cwtl
or
nop
and
adc
push
loop
dec
or
popf
iret
cmpsl
lods
outsb
ror
jmp
int
mov
loopne
pop
xchg
fs
iret
addr16
sahf
aad
insb
cmp
cmp
iret
test
mov
mov
shlb
sub
jb
jp
add
inc
push
outsl
ret
mov
es
push
int
sub
sub
insl
int3
push
xchg
inc
enter
mov
mov
bound
mov
fistps
sahf
iret
xchg
xchg
arpl
mov
mov
subb
mov
xchg
movl
fnstcw
pop
test
outsb
mov
int3
cmp
subl
loope
xchg
push
in
sbb
icebp
subb
pop
aaa
hlt
bound
push
cmpsl
cmpsb
bound
push
int3
addr16
adc
popa
push
ja
and
sarb
pop
aam
test
ja
cmpsl
xlat
adc
or
into
push
int
or
jle
adc
push
ja
inc
sub
pusha
or
mov
cmp
loop
xchg
arpl
xchg
fisttpl
sarb
mov
add
scas
jbe
addr16
mov
jb
stos
bound
ret
leave
and
test
jnp
bound
or
outsb
into
push
cld
push
mov
cmp
sbb
pop
xchg
dec
push
test
int
or
cs
cmpsl
sbb
faddl
jge
shlb
jge
das
jno
cmp
lret
inc
jmp
sub
adc
pop
pop
outsb
xor
addr16
scas
cmp
inc
jae
orb
sub
bound
jno
in
stos
jb
sub
jl
cmpsb
xor
sti
and
jle
addr16
adc
mov
pop
lret
add
lahf
lods
xchg
sub
cmp
cmpsl
or
lahf
stos
xchg
jmp
or
xadd
mov
iret
xor
cwtl
cmp
or
sub
or
stos
jno
sub
pop
cwtl
pop
bound
test
or
sub
js
stos
lods
ja
iret
out
lods
addr16
outsb
push
and
movsl
popa
and
add
xchg
lahf
jmp
andb
xor
mov
bound
insb
or
test
test
fsubs
sub
sbb
packuswb
cmpsb
cmpl
sub
sub
cmp
fs
test
out
sub
dec
in
loop
jno
sub
and
out
jge
jg
in
add
in
jge
or
insb
dec
bound
push
and
addl
and
cmpsb
xchg
lret
mov
adc
out
ret
popa
cmpsb
int3
andl
and
popa
punpckldq
jmp
call
hlt
subb
int3
movsb
add
frstor
imull
mov
or
jo
pop
fsubp
mov
jg
mov
icebp
decb
fisubs
mov
lret
sbb
fildl
nop
pop
stc
jl
push
dec
repnz
test
add
aaa
jmp
xchg
sahf
lcall
adc
int3
mov
add
cmp
cmp
adc
popf
dec
add
push
mov
mov
sbb
or
repz
cmpsl
inc
mul
fcomps
lock
lret
js
jl
add
push
xchg
imul
sarb
fidivrs
mov
test
xchg
sarb
stos
mov
dec
decb
loop
jo
dec
jb
xor
xor
pop
and
add
add
pop
inc
movsl
out
push
jle
adc
sub
sub
scas
sbb
fsubl
jo
mov
iret
ficomps
aam
testl
mov
inc
arpl
xchg
je
repz
xor
jp
or
and
pushf
pop
imul
outsl
faddl
jle
mov
push
jl
sbb
mov
xor
sar
xor
push
icebp
mov
rolb
add
je
movsl
adc
jno
scas
add
rcll
pushf
mov
and
cmp
mov
hlt
mov
push
adc
icebp
xchg
jb
and
insl
stos
mov
sbb
cmp
sbb
mov
mov
nop
xor
push
add
bound
cs
push
lahf
push
push
cld
sbb
clc
push
out
pusha
jb
and
dec
orl
inc
add
mov
and
add
insl
pusha
mov
rcrl
jle
push
dec
jns
jl
cmpb
nop
sub
mov
sbb
mov
add
pushf
mov
lea
mov
or
pusha
fwait
cld
iret
push
mov
pushf
pop
std
fldcw
push
lcall
cmp
repnz
jns
je
pop
push
sbb
mov
pushf
xor
pusha
xchg
ret
imul
loop
inc
push
mov
nop
pop
xchg
aaa
test
pop
pop
push
movsb
scas
roll
pop
pop
ds
mov
inc
sbb
sahf
pushf
add
xlat
inc
or
cmpsl
mov
jns
cmp
rorb
xchg
loope
insb
pop
jg
pop
mov
gs
adcb
shrb
pop
mov
jne
mov
loope
test
shlb
add
push
adc
mov
sbbb
dec
inc
inc
loop
add
imulb
fwait
into
mov
xchg
inc
pop
jecxz
mov
xchg
loopne
add
xlat
mov
and
out
fs
push
fnsave
js
sarl
cmpsb
popf
xchg
movsb
dec
sahf
or
pop
jb
arpl
push
add
jnp
sbb
cmp
aad
mov
sti
arpl
ret
jo
push
pusha
sub
mov
add
mov
pushf
push
mull
jle
or
mov
insw
pop
cli
lret
inc
insl
cmp
rol
out
add
and
das
adcb
sbb
mov
movsb
std
sti
jmp
push
and
hlt
jne
mov
push
pushf
or
aaa
xchg
inc
mov
inc
test
xor
orb
arpl
lret
sub
ja
cmp
inc
pcmpeqd
imul
imul
ja
lret
inc
idivl
sahf
lret
lret
inc
sti
daa
sub
jmp
mov
mov
loope
mov
inc
xchg
pop
mov
mov
adc
dec
jbe
push
pop
arpl
push
sbb
push
insb
push
dec
push
dec
cmpsl
mov
add
sub
int3
pop
mov
inc
mov
mov
outsb
aam
stc
out
inc
dec
sbbl
mov
test
push
bound
dec
mov
bound
std
enter
dec
add
bound
mov
inc
cmpsl
xchg
nop
and
fsubp
cwtl
pop
adc
xchg
out
inc
cwtl
xchg
xchg
xchg
xchg
xchg
adc
mov
xor
nop
xor
xchg
movsb
xor
add
mov
inc
arpl
xchg
jb
mov
add
push
aam
jp
lret
xchg
or
imul
push
js
into
jb
jecxz,pn
sbb
aam
shll
sahf
inc
addr16
shlb
addr16
addr16
push
jns
adc
xchg
jecxz
cwtl
fwait
dec
popa
or
sbb
xor
mov
arpl
stos
jecxz
adc
das
inc
fsts
scas
add
pop
sub
jae
adc
sub
xchg
jge
ficoml
dec
push
pusha
xchg
or
ljmp
jecxz
mov
test
cmpsl
mov
cmp
orb
lods
jbe
sbb
int
push
sbb
stos
pop
out
adc
scas
mov
rcl
jae
pop
das
stos
addr16
mov
loop
sub
push
movsl
test
test
sub
jge
fs
adc
das
xchg
addr16
inc
test
adc
cmp
xchg
xor
test
and
mov
sbb
stos
in
inc
test
bound
mov
jecxz
adc
push
icebp
outsb
nop
sub
stos
fsts
adc
mov
es
movsl
inc
sbb
test
sbb
outsl
inc
icebp
jle
sub
fsts
jno
stos
mov
repz
popl
addr16
mov
sub
xchg
lods
pop
mov
add
out
push
sub
sbb
les
adc
addr16
push
test
fimuls
pop
stos
sub
xor
pop
bound
ss
xchg
dec
push
adc
es
mov
xchg
sbb
xchg
es
popa
or
outsb
adc
cmpsb
fsts
sbb
out
xchg
int3
inc
jmp
adc
jb
or
addb
xchg
xchg
mov
call
andl
fimull
xchg
ja
cmp
xchg
push
or
ljmp
xor
movsb
cwtl
or
ljmp
dec
jno
sahf
int3
xor
jb
ljmp
lahf
xchg
scas
adc
dec
imull
pusha
nop
cmpsb
jbe
shlb
inc
cs
addb
arpl
test
fistl
popf
xor
fs
add
push
push
or
jne
xlat
in
adc
inc
scas
adc
lcall
call
push
mov
jl
sbbb
cmpsl
push
mov
aam
mov
jae
sahf
adcb
ljmp
mov
js
jbe
push
xchg
mov
js
cltd
movsb
and
xchg
dec
mov
pop
mull
rcrb
xor
xchg
orb
push
add
add
bound
pop
call
movsb
push
test
aas
sub
pop
jecxz
sub
in
sub
sub
mov
add
andb
popf
lods
pop
in
gs
pop
fnstsw
test
push
push
test
imul
cld
pop
fsubrl
xchg
movsb
ret
icebp
and
mov
sub
andb
call
pop
push
mov
nop
cltd
inc
bound
jbe
fucomi
ret
fcomp
and
cwtl
bound
mov
inc
test
fcomi
xchg
and
mov
gs
jg
dec
pop
add
fdivs
loope
adc
stos
fs
test
in
fdivr
xchg
inc
cmp
bound
and
adc
aam
mov
fcoml
mov
mov
mov
lea
roll
pushf
add
dec
xor
mov
and
push
pushf
jo
mov
rorb
fisubl
xor
push
inc
movsb
mov
ja
sti
sub
popa
bound
fildl
pusha
mov
pop
ja
cli
cmpsl
and
cmpsb
or
mov
mov
int
dec
push
pop
mov
xchg
mov
cmp
sarb
xor
lcall
test
push
testb
movsb
mov
lahf
cmpsl
add
push
xchg
orl
lcall
cmpsb
xchg
pop
and
aam
adc
push
dec
mov
add
dec
ljmp
inc
xor
lcall
xor
and
outsl
bound
stos
lods
mov
cmpsb
outsl
int
popf
pop
pop
imul
pop
mov
cmp
xchg
pop
in
mov
xor
and
mov
mov
lret
add
in
push
nop
fldt
xor
sbb
xor
push
ja
jb
stos
mov
scas
jl
xor
adc
sub
stos
or
lds
push
xor
test
popf
add
orl
adc
stos
aas
cmp
pop
lods
mov
mov
iret
xchg
shlb
sub
test
adc
adc
sbb
mov
lods
jecxz
test
stos
cmp
movsb
and
cmp
adc
inc
cmpsb
subb
movsl
cmpsl
subb
leave
xchg
jge
cmpsb
xchg
es
push
or
nopl
or
leave
in
jno
test
int3
adc
jg
and
or
int3
loope
cmpsb
or
jbe
jae
xchg
jno
jb
cltd
filds
mov
arpl
rcrl
cmp
xlat
mov
cmp
pop
push
xor
push
add
sub
shlb
lock
xor
xchg
xchg
jnp
out
push
cltd
push
mov
mov
xchg
jp
mov
ret
mov
jne
cltd
ja
adc
lods
ficompl
out
aad
pop
xor
mov
mov
lcall
cmp
sbb
mov
pop
sub
mov
addl
mov
je
push
int
addr16
shlb
add
in
xchg
sbb
push
daa
jl
dec
pop
loopne
nop
dec
mov
pushf
and
sbb
jg
sahf
clc
loopne
cmp
cmpl
aaa
push
cwtl
scas
cli
jecxz
nop
sub
sbbl
xlat
mov
xchg
inc
roll
sahf
mov
inc
fstps
sti
and
movsb
jg
popa
xor
dec
xchg
popa
out
loope
mov
and
xor
sarl
xchg
call
arpl
js
test
cmpsl
push
xchg
mov
lahf
pop
outsb
mov
sub
ret
insb
jle
dec
addb
mov
jno
or
addr16
test
xchg
jne
mov
or
mov
sahf
push
and
lea
or
xorb
aas
aam
nop
adcl
arpl
imul
das
or
mov
push
ja
pushf
ja
sti
sbb
and
jecxz
cltd
cmp
and
test
sub
adc
imul
dec
addr16
push
mov
adc
mov
add
test
pop
add
xorl
xchg
xor
add
sub
pop
cmpsb
add
or
jecxz
mov
cmpsb
icebp
jle
es
aad
xchg
stos
in
subl
or
sub
orl
cmpsb
std
mov
mov
sub
into
sahf
jb
lock
sbb
movsl
sbb
xchg
xchg
and
pop
adc
mov
fidivrl
sbb
cmp
ss
fstp
mov
pop
cmp
pop
pop
cmp
les
incl
ds
pop
popf
sbb
pop
mov
xchg
popf
pusha
arpl
addb
jo
cli
insl
das
mov
ret
mov
addl
fadd
and
sub
pop
add
cmp
dec
mov
test
inc
add
test
ret
jns
xchg
mov
into
add
cmpsl
in
xlat
xchg
addl
jle
loope
pushf
addr16
jecxz
xchg
fildl
xchg
nop
pop
bound
out
pushf
inc
cmp
pop
mov
into
push
mov
mov
or
cmp
sub
xchg
adcl
aad
data16
push
xor
xor
and
aaa
call
sahf
fsubr
dec
popa
xchg
jg
pop
and
dec
and
xchg
orb
in
fcoms
inc
cmpsb
test
aas
or
inc
sbb
int
jecxz
rcrb
iret
and
and
and
adc
out
cmpsb
mov
insb
popf
dec
test
jmp
lcall
out
or
adc
in
add
test
addr16
nop
adcl
movsl
fs
jge
mov
mov
dec
orl
faddl
cmp
inc
xchg
pusha
or
pop
add
stos
pop
pop
lea
inc
orl
arpl
pop
stos
adc
pop
pushf
pop
jnp
xchg
or
stos
fmuls
xor
or
sbb
inc
test
lea
push
inc
leave
xchg
loopne
add
mov
outsb
add
sbb
pop
test
adc
popl
int3
test
cwtl
stc
in
or
and
cwtl
push
sub
movsb
xchg
stos
lcall
loop
inc
xchg
je
cmp
xchg
push
rorl
xchg
test
in
testl
ja
add
lock
or
adc
sub
mov
lea
sub
adc
or
lods
adc
xor
jb
lahf
adc
mov
leave
out
adc
in
addr16
je
dec
cmc
xchg
repz
xchg
adc
mov
lods
je
adc
jg
xchg
lahf
pop
inc
cli
lcall
gs
or
outsb
adc
je
mov
notb
adc
pop
sbb
or
or
mov
or
pop
add
mov
adc
je
aad
stos
out
outsb
mov
bound
and
jg
sub
aas
and
push
xor
or
cld
dec
or
or
xchg
and
or
push
dec
cmp
rcrl
sbb
sub
cli
or
mov
test
nop
cmpsb
adc
dec
adc
xchg
pop
mov
and
mov
sub
pop
pop
rolb
lahf
in
dec
xchg
xchg
sbb
adc
adc
xchg
push
ss
or
pusha
nop
inc
adc
divl
lods
pop
xchg
push
nop
in
test
cltd
add
cmpsb
adc
adc
cltd
fs
das
push
push
test
mov
jbe
loop
sbb
repz
sbb
icebp
mov
sbb
les
gs
test
push
add
test
mov
push
xchg
xlat
or
sbb
lea
sbb
pop
and
dec
add
adc
mov
xchg
sbb
arpl
aas
jl
pop
mov
jae
out
sbb
and
push
aaa
movsl
out
add
out
xchg
push
cmp
lods
adc
aas
out
adc
fs
negl
ja
and
ja
mov
push
adc
or
andb
jge
bound
imul
nop
imul
out
mov
pushf
adcl
mov
fs
push
nop
notl
fwait
or
jge
lods
xchg
stos
bound
lret
lods
lahf
in
pop
xchg
jmp
jb
in
sahf
and
cmp
int3
mov
out
jle
in
or
xchg
xchg
pop
lahf
adc
xchg
nop
adc
or
adc
test
cmp
aad
xchg
pop
jge
adc
push
sbb
mov
xchg
pushf
test
push
pop
testl
sbb
pop
ret
or
clc
or
fists
dec
fs
xchg
lods
or
mov
jge
cmp
or
pop
cmp
mov
rolb
je
lea
mov
mov
sbb
bound
adc
cwtl
faddl
jecxz
adc
xchg
fidivl
adc
sahf
nop
fs
arpl
mov
cwtl
adc
testl
ret
sbb
xchg
sub
sub
in
dec
nop
insl
jmp
push
dec
out
pop
xchg
int
sbbl
ficoms
xchg
fists
push
lock
lea
mov
je
mov
and
or
jge
and
orb
nop
roll
cwtl
dec
aas
insb
mov
adc
or
or
or
nop
and
nop
jle
adc
lahf
pop
mov
adcb
and
leave
in
loop
mov
and
add
nop
pop
adc
pusha
fs
pop
cmc
xchg
nop
jnp
mov
pop
adc
int
or
add
inc
mov
jp
jecxz
xchg
or
nop
xor
lcall
push
xchg
fbld
cmp
or
mov
pop
jp
xchg
popf
pop
je
jns
je
rsm
xor
addl
push
filds
jecxz
int3
inc
push
rorl
fildll
jb
leave
cbtw
dec
adc
daa
jae
insb
or
nop
sbb
cmp
cltd
xchg
push
test
testl
inc
mov
sbb
dec
cmpsb
xchg
adc
lock
or
or
push
pusha
rcll
push
sbb
jecxz
lret
sti
sahf
push
ret
nop
xchg
aam
xor
or
dec
push
in
or
lahf
or
leave
pushf
and
sub
test
adc
xorb
adc
or
stos
xor
lret
add
roll
shlb
fsubrl
test
stos
pop
and
xchg
lret
mov
scas
xor
or
or
lods
lock
push
cwtl
ljmp
adcl
jecxz
add
nop
adc
pop
stos
cmp
or
mov
arpl
xchg
popf
and
fs
movsw
and
mov
adc
add
or
inc
adc
cmp
sbb
sub
ja
std
add
nop
out
maskmovq
imull
pop
push
or
sbb
mov
ja
std
enter
iret
xchg
js
int3
fwait
sbb
or
sahf
in
and
jge
mov
xchg
or
mov
lcall
jge
pusha
push
mov
xchg
leave
lds
nop
push
pop
add
outsb
xchg
and
xchg
addr16
dec
xchg
pop
notl
sub
negb
xchg
jg
push
mov
adc
lock
fists
orl
nop
out
lret
add
out
and
pop
inc
mov
call
push
mov
adc
int
inc
fs
pop
mov
outsb
push
addr16
xchg
ja
out
push
mov
imul
test
nop
dec
xchg
aam
fwait
or
stos
adc
adc
cmp
popf
mov
dec
shlb
jb
push
xor
xchg
xchg
sub
addb
cld
xchg
arpl
pop
adc
lea
pop
bound
call
or
inc
push
leave
addr16
xor
scas
rcll
push
or
or
cltd
xchg
cmp
dec
adc
cmp
punpcklwd
adc
mov
xor
pop
sbb
lods
je
or
inc
xchg
sbb
into
out
push
mov
lds
movsl
push
stos
clc
xchg
mov
inc
or
les
sbb
lock
mov
or
popa
fs
fiadds
popf
mov
or
repnz
adc
fnstcw
movsl
push
sbb
scas
mov
sub
test
adc
movswl
lret
jns
or
inc
pop
push
add
sahf
dec
push
lcall
leave
mov
mov
xchg
adc
fs
push
jns
mov
jg
inc
jp
pop
or
lahf
push
pop
cltd
sbb
add
movsl
addr16
cmp
or
aad
sbb
mov
dec
mov
pop
movzwl
das
dec
mov
bswap
lahf
xchg
adc
lea
mov
in
lea
pop
push
ret
out
addr16
movsl
jp
loope
mov
dec
jnp
or
cmpsb
test
push
lea
orb
lret
xchg
testl
nop
add
pop
push
xchg
sub
or
insl
dec
xchg
adc
jge
xor
or
mov
nop
push
cmpsb
pop
sahf
mov
jo
push
aaa
xchg
push
mov
sbb
push
cltd
or
push
pusha
xchg
mov
mov
sbbb
xchg
xor
dec
pop
or
aaa
test
cwtl
sbb
mov
cmp
xchg
movsl
push
addr16
xor
mov
test
and
arpl
jmp
pop
xor
mov
sbb
adc
xchg
pop
lret
mov
adc
jge
sbb
mov
ficompl
mov
in
add
xchg
movsl
inc
xchg
sub
pop
dec
mov
push
xor
jecxz
pop
jg
adc
test
mov
xor
ror
popf
pop
sub
inc
cwtl
repz
jecxz
pop
jecxz
comiss
xchg
push
movsl
ja
sbb
aas
dec
xchg
mov
fwait
sbb
add
mov
repz
out
adc
notb
fbld
push
mov
popa
inc
sbb
mov
inc
mov
add
loopne
icebp
xchg
inc
inc
push
lea
or
cmp
es
dec
jge
popl
test
pop
movsl
add
gs
ljmp
dec
pop
sub
or
xchg
sbb
sbb
lret
pop
pushf
lret
add
push
or
nop
or
jl
sub
pop
xor
mov
adc
xor
xchg
adc
addb
lds
jecxz
xchg
pop
test
icebp
scas
sbb
sti
push
fwait
xchg
pop
push
add
cmp
cwtl
bound
xchg
push
out
test
xchg
lea
icebp
mov
and
sbb
test
mov
mov
mov
pop
call
outsl
arpl
cwtl
fadds
adc
push
outsl
sbb
out
arpl
and
cmpsb
pop
and
es
push
inc
lahf
mov
sbb
push
sub
mov
icebp
lcall
aas
push
push
pop
xchg
aas
mov
dec
push
mov
inc
pop
adc
pop
xor
test
mov
das
mov
adc
pop
lds
push
cmc
gs
push
add
push
cltd
add
adc
jmp
nop
add
or
mov
out
test
aad
pop
or
popf
int3
imul
push
lea
mov
dec
cwtl
int3
pushf
sbb
adc
fmul
xchg
das
sub
in
lahf
test
xchg
das
pop
sbb
cwtl
fisubrl
inc
dec
sub
jae
test
out
xchg
imul
pop
cwtl
imul
clc
or
je
iret
fcomps
jg
fimull
cs
or
or
insb
pop
inc
adc
shl
xor
or
pop
push
insb
sub
repz
jge
push
inc
inc
clc
ja
push
or
or
lret
sbb
fs
adc
push
mov
daa
adc
cmpsb
in
popf
add
push
or
xchg
int3
jne
stos
es
sub
push
xchg
sbb
ss
das
jecxz
stos
xchg
xchg
sbbb
push
ficompl
fildll
pop
sbb
xchg
mov
xchg
adcb
repz
adc
and
lea
sbb
mov
lods
push
sahf
mov
jns
out
sahf
and
mov
sbb
sbb
lea
pop
lea
std
insl
add
lea
cwtl
inc
fs
repz
mov
dec
cltd
mov
mov
or
xor
mov
stos
pushf
aas
andb
jae
and
mov
andb
outsb
nop
cmp
sub
mov
in
push
and
testl
dec
mov
int3
or
push
cmp
or
aaa
cmpsb
sbb
mov
roll
je
inc
ljmp
aas
fwait
push
orb
mov
xor
outsb
push
loope
mov
push
dec
add
pop
mov
jle
daa
sbb
xchg
ret
sbb
push
or
sbb
shlb
push
sbb
mov
hlt
sbb
repz
ja
imul
dec
cmp
or
loopne
lea
push
fiaddl
sbbl
leave
hlt
push
or
or
lea
xor
xchg
mov
sbbl
cmp
jns
sbb
or
test
mov
scas
syscall
xchg
and
cmpb
movsb
add
mov
sub
xchg
sub
pusha
cmp
push
pop
jnp
lock
lret
aas
leave
scas
mov
adc
addr16
aas
jecxz
out
cmp
lods
dec
sbb
push
or
or
adc
adc
and
lret
jecxz
stos
iret
or
aad
jle
sbb
sbb
xchg
xchg
aas
jge
nop
xchg
jle
cmpsb
xrelease
mov
sub
push
test
cli
or
ret
fs
adc
adc
ja
cmp
jecxz
adcb
test
test
xchg
out
push
jno
sub
jnp
push
dec
mov
dec
sbbl
jecxz
or
xchg
adc
cmpb
lahf
and
inc
sbb
inc
or
test
sbb
or
and
xor
dec
sahf
mov
jns
das
mov
push
or
popf
jbe
ficomps
lahf
lcall
arpl
jge
push
sbb
cwtl
pusha
movsl
icebp
icebp
adc
add
cmpsb
adcb
pushf
mov
pop
adc
pop
and
xchg
ret
xor
mov
sbb
add
sub
xchg
sub
inc
or
adc
cwtl
mov
adcl
or
xchg
or
mov
sub
out
pop
and
ja
das
je
in
inc
addr16
lock
ja
flds
push
hlt
pusha
mov
cmp
popf
aas
jmp
scas
adc
sbb
aas
pop
mov
test
fisubl
xchg
add
out
adc
int
mov
pop
mov
xchg
faddl
repz
cwtl
adc
xchg
nop
jae
push
pop
mov
test
push
repz
or
test
or
adc
sbb
rcrb
mov
mov
push
jle
cltd
or
sbb
xchg
arpl
shrl
fwait
inc
insb
mov
shlb
xchg
xor
dec
mov
lcall
lret
inc
imul
and
aam
and
ret
nop
repz
in
int
push
mov
das
sbb
dec
testl
out
daa
or
lahf
dec
adc
in
pushf
xor
dec
sbb
adc
sub
xchg
xchg
pop
int
cmp
loopne
mov
push
hlt
pop
cld
push
or
rclb
mov
imul
adc
add
adc
mov
or
test
push
adc
adc
cwtl
lret
out
push
or
sbb
fisubl
xchg
leave
jecxz
subl
cli
cwtl
bound
mov
mov
adcl
je
xor
or
mov
push
bound
cltd
push
xor
mov
adc
sbb
test
adc
shll
js
mov
sbb
sub
dec
mov
and
xchg
shrb
mov
inc
add
push
push
adc
imul
xor
or
movsl
jg
ret
fistl
loopne
adc
dec
sbb
orl
add
or
push
mov
or
lea
in
push
mov
les
lret
scas
out
or
and
addr16
popl
notl
cmpb
rolb
dec
cwtl
pop
dec
pop
inc
and
adc
addb
mov
xchg
jecxz
xorb
aas
push
adc
test
or
mov
adc
mov
xor
pop
mov
mov
xchg
push
stos
adc
gs
jg
mov
fidivs
adc
sbb
repz
ret
dec
lcall
lds
es
jp
imul
sbb
add
mov
cmp
adc
out
icebp
adc
leave
adc
xchg
push
pop
pop
orl
xchg
leave
negl
repnz
cmc
push
xchg
mov
test
movsl
dec
or
mov
sbb
cmp
xchg
subb
in
xchg
push
lea
xchg
sbbl
out
sub
cltd
lea
add
sub
ja
into
adc
lods
push
push
aas
cmpsb
jno
jne
pop
or
inc
rcll
push
pop
decl
cmp
test
pop
into
cltd
inc
stos
xchg
test
loop
int3
xchg
das
in
dec
adc
lcall
sub
out
jle
jge
mov
jb
mov
add
xchg
push
inc
test
jno
dec
jo
mov
sbbb
pop
test
mov
leave
add
packuswb
jno
ja
and
call
dec
mov
lahf
jno
decl
adc
imul
jb
aaa
or
inc
mov
fisubs
aaa
sbb
inc
cmp
add
add
lahf
ds
ljmp
out
enter
ja
mov
mov
cld
inc
mov
mov
mov
call
bound
sub
jecxz
fwait
jb
inc
ds
add
sar
inc
mov
mov
mov
lds
mov
sar
inc
mov
jle
adc
addr16
push
mov
adc
incl
jb
aaa
or
inc
call
inc
mov
mov
shr
lds
mov
popa
rorl
cli
push
inc
rorl
insb
add
xchg
push
call
inc
mov
mov
sar
inc
mov
mov
mov
inc
mov
mov
shr
lds
ffreep
and
ds
sahf
mov
jno
push
inc
ret
mov
es
aaa
fstps
sahf
xor
rclb
aaa
fistps
les
xchg
aaa
pusha
sahf
mov
and
sub
addr16
sub
add
lahf
stc
jb
inc
inc
pop
bound
int
dec
lcall
dec
int
dec
lcall
dec
in
lcall
mov
popf
mov
inc
ret
or
push
mov
add
ffree
fs
sbb
imul
cmp
xorb
insl
fs
inc
mov
test
outsb
mov
stos
sub
iret
adc
stos
mov
inc
fstl
xor
xor
cmp
dec
arpl
ret
test
sub
push
mov
push
xchg
fsub
cwtl
or
fwait
cld
sbb
xchg
insl
xor
in
imul
lock
cmp
sbb
loopne
dec
cwtl
sub
inc
mov
aad
mov
sub
and
dec
cmp
mov
xor
in
jmp
movsb
pop
add
in
aad
sbb
clc
aas
and
loop
add
push
in
test
mov
out
add
andb
movsb
mov
xchg
pop
mov
jnp
inc
xor
pusha
test
insl
pop
ljmp
je
lea
repnz
insl
loopne
push
mov
mov
lock
arpl
push
je
or
inc
cwtl
mov
xchg
rol
lahf
pop
movsb
push
test
mov
out
clc
mov
stos
mov
and
and
mov
cmc
mov
or
adc
je
jg
sub
and
and
mov
push
test
dec
int
loopne
stos
jg
fsubs
xor
add
mov
sbb
out
adc
lcall
mov
pusha
ljmp
lds
lods
roll
add
sub
or
fidivrs
sub
sbb
push
push
in
inc
test
aas
ficoms
lcall
leave
scas
adc
or
push
xor
xor
divb
xlat
and
lret
inc
lock
add
xchg
adc
xor
movl
outsb
adc
out
xor
shrl
inc
dec
es
sub
loopne
into
mov
adc
mov
iret
push
into
adc
push
movsl
sub
ret
insb
xchg
cmpsb
mov
imul
xor
stc
xchg
pop
or
in
mov
xor
cli
inc
addr16
or
add
notl
xchg
fnsave
stos
pop
iret
dec
adc
lcall
addr16
std
cmpsl
sbb
pusha
mov
cmpsl
push
jle
les
mov
dec
inc
loopne
push
out
std
mov
scas
insl
call
sub
lds
fidivrs
cltd
lahf
dec
adc
inc
inc
cmp
inc
cld
loop
lret
lcall
outsl
out
xor
leave
cmpsl
or
in
adc
push
dec
stos
cmpsb
xlat
sub
xor
shr
jo
popa
mov
leave
xchg
orl
in
adc
data16
insb
mov
mov
rolb
int
popa
cmp
jo
push
bswap
adc
ljmp
dec
test
nop
cmpsb
add
mov
mov
mov
sub
fmuls
lcall
cs
lret
xlat
sbb
lea
sub
mov
les
dec
int
or
leave
enter
ds
pop
test
sub
mov
insb
outsb
push
xlat
pop
adc
mov
mov
enter
jo
iret
dec
sub
imul
outsl
inc
push
jmp
dec
inc
mov
pop
out
das
mov
dec
add
test
jo
or
mov
xchg
insb
insl
add
adc
mov
int
sbb
mov
outsb
xchg
lcall
in
rol
dec
dec
insl
dec
or
in
sub
stos
or
adc
push
imul
imul
sbb
cmp
mov
jecxz
or
into
out
leave
push
ljmp
out
pop
lcall
lret
ror
sub
push
xor
rcrb
jns
cmp
jo,pn
lcall
push
lret
pop
ja
sub
push
push
lds
mov
push
push
enter
lods
shlb
es
mov
scas
sub
sbb
sbb
jl
lea
push
clc
rcrb
xchg
insb
adc
sbb
xor
jo
jb
nop
lret
dec
jp
xchg
shr
sub
leave
pop
inc
add
or
pop
dec
scas
lock
cmp
iret
das
push
loope
insl
out
add
pop
test
and
stos
push
mov
out
rorb
stos
cs
lcall
jp
xchg
dec
push
pop
ficoms
inc
or
fs
imul
sub
add
add
iret
xor
and
mov
mov
dec
push
sub
push
inc
inc
add
xchg
nop
mov
fnsave
jae
or
test
xchg
jo
sbb
iret
lret
push
pop
adcb
in
push
insb
out
int3
cwtl
outsb
or
or
fisubrs
fcmovnu
adc
je
lret
mov
mov
cmp
lea
sub
push
out
fs
or
jmp
push
cmp
cmp
pop
add
les
into
add
mov
push
add
xchg
stos
or
testl
inc
adc
lods
ljmp
dec
int3
fisubl
iret
adc
dec
pop
jl
jmp
inc
stc
jbe
mov
loope
leave
into
adcl
dec
add
or
mov
adc
push
int
in
xor
test
mov
and
lods
cmpsb
addl
jmp
or
in
mov
sbb
xchg
psubusb
cmp
addr16
mov
iret
push
pop
jo
nop
dec
dec
leave
or
dec
mov
lock
insb
js
das
imul
cmovno
push
dec
int
lcall
arpl
inc
or
mov
sbb
inc
les
jo
jecxz
push
daa
cmp
adc
sub
loop
out
dec
xchg
arpl
enter
pop
int
sub
insl
inc
imul
push
orb
out
push
cs
jle
push
jbe
jl
and
mov
sub
mov
sub
lods
push
std
daa
add
loop
sahf
sti
dec
loope
in
loop
inc
pop
in
out
iret
inc
mov
xchg
addr16
add
daa
jo
test
addl
cwtl
fnstcw
pop
das
mov
add
push
mov
mov
daa
mov
xchg
daa
loopne
bound
adc
out
daa
test
daa
dec
sbb
dec
inc
daa
mov
cltd
out
out
sub
daa
out
or
or
outsl
mov
sbbl
mov
xchg
or
dec
cmp
daa
and
lret
bound
xchg
fwait
and
dec
repz
outsb
push
sub
mov
jo
es
int3
in
push
ljmp
fwait
push
daa
repz
roll
movsb
push
fistps
daa
mov
mov
lods
mov
lods
mov
push
mov
inc
mov
xchg
cmpsb
daa
fwait
push
cmpsb
fsubrs
insb
mov
insb
fwait
daa
fiadds
cs
add
addr16
repnz
loop
and
gs
mov
mov
inc
pop
movsl
aas
lahf
shll
jb
mov
insb
testb
dec
inc
lock
mov
rcl
movsl
mov
or
movsl
or
adc
jmp
lods
lea
daa
mov
xchg
xchg
mov
dec
daa
pop
out
nop
cs
pop
pop
loop
mov
bound
or
push
rcll
add
jmp
sbb
pop
pop
bound
sub
push
mov
dec
sbb
bound
inc
subl
push
push
jl
sub
out
mov
bound
nop
mov
inc
das
pop
in
adc
stos
mov
push
daa
inc
insl
insb
push
dec
and
adc
aaa
ficoms
loop
mov
xor
fiaddl
mov
testl
push
xchg
testb
xor
push
insl
dec
daa
inc
ss
lods
test
push
rol
xchg
adc
decl
lock
add
pop
mov
xchg
out
into
sub
mov
jo
dec
scas
loop
or
sub
mov
lea
test
add
mov
mov
push
outsb
sub
ret
xchg
cld
pusha
pop
cmpsl
pop
fs
dec
inc
cld
jge
mov
fimuls
sub
mov
ficomps
lret
cmp
pusha
xor
dec
mov
lret
outsb
ror
pextrw
inc
orl
dec
scas
sub
lock
lea
xchg
pop
add
or
test
mov
jecxz
das
mov
shrb
xchg
ficoml
dec
mov
or
dec
aaa
xor
jo
fs
sbb
add
notl
pusha
mov
or
add
notl
pusha
das
dec
jns
daa
fs
mov
shll
or
daa
fs
sbb
add
xchg
insb
dec
dec
shll
lret
jns
daa
mov
add
ja
add
sbb
xchg
mov
inc
pusha
xchg
cltd
jns
daa
fs
sbb
add
lcall
inc
daa
and
add
notl
pusha
aas
and
daa
cmp
pusha
orb
jns
addr16
shll
bound
daa
fs
xchg
shll
inc
jns
daa
fs
sbb
add
xchg
pop
dec
inc
shll
pop
jp
push
shll
mov
cmp
dec
shll
cmpb
add
push
pusha
shlb
mov
add
daa
inc
sbb
testl
xlat
sbb
add
mov
xchg
jns
daa
fs
mov
dec
aas
shll
ja
jg
sbbb
lcall
pusha
cmp
fs
inc
add
xchg
pop
dec
add
jns
daa
fs
sbb
add
xchg
shll
mov
inc
repz
clc
adc
fs
and
mov
loope
pusha
dec
xchg
adc
ja
in
fs
loope
std
notl
fsin
mov
xor
pusha
cltd
xchg
cld
jp
inc
fs
pop
sbb
sbbb
mov
lcall
jp
mov
flds
pop
sbb
sbb
sbbb
mov
sub
jo
push
daa
fs
sbb
add
notl
cwtl
daa
mov
cmp
cmpsl
arpl
scas
out
shlb
sub
daa
pop
call
out
cmp
cmpl
orb
es
cmp
js
call
js
add
pusha
iret
cmp
add
divl
xchg
test
jns
daa
fs
dec
add
notl
pusha
bound
mov
sub
mov
sub
je
sbb
scas
add
inc
mov
inc
and
icebp
lahf
addr16
aas
jp
inc
pop
addl
popf
push
and
outsl
inc
add
arpl
add
in
lcall
sbb
mov
jp
cltd
addr16
testl
das
test
out
lea
xchg
sub
xchg
sub
fs
mov
mov
adc
arpl
inc
push
pusha
xchg
icebp
rolb
fidivrl
inc
in
mov
sti
pop
add
pop
pop
divl
and
inc
je
es
div
je
mov
xchg
jp
ret
das
rcll
pusha
in
loop
loope
fs
sti
add
jecxz
pusha
decb
loope
nop
mov
push
or
fs
sub
inc
add
adcl
push
test
fs
sbb
subl
aam
and
inc
daa
les
push
shll
jl
xchg
rcl
pusha
sub
je
lcall
movsb
push
and
ja
shrl
pop
notb
adc
sti
jbe
inc
add
pop
rorl
mov
jmp
not
pop
add
cmp
add
or
inc
je
nop
inc
xor
mov
in
imul
push
pusha
loope
xchg
std
mov
add
xor
add
lahf
push
cmp
add
scas
testl
sti
xorb
dec
aam
push
into
inc
pop
fmull
sub
int
jns
daa
and
add
xchg
jle
jbe
fs
pusha
js
add
popf
add
adc
fldcw
pop
in
dec
jmp
lock
lods
pop
in
out
call
ret
and
fistps
add
xchg
pop
mov
push
sbbl
mov
pop
out
xchg
xchg
add
and
xchg
cmp
not
ja
inc
xchg
add
lahf
push
jb
inc
repnz
mov
xchg
inc
jb
push
lahf
xor
inc
icebp
and
mov
xchg
inc
jno
push
lahf
xor
inc
hlt
and
mov
xchg
inc
je
push
lahf
xor
adc
repz
mov
xchg
inc
jae
push
lahf
xor
inc
out
and
scas
push
lret
addr16
mov
and
push
mov
sti
mov
das
xchg
cmp
imul
xchg
xchg
testl
adcb
adcb
cmp
cmpb
dec
inc
insl
andb
xor
outsb
loope
mov
xchg
mov
popa
cwtl
cmp
and
xor
push
les
movsb
orl
out
test
bound
test
and
aad
fnstsw
sub
adc
push
gs
cmp
or
push
mov
push
mov
test
jnp
test
inc
shrb
addr16
ficompl
dec
jo
jle
lahf
pop
inc
hlt
pop
and
roll
movsb
push
notl
dec
mov
pop
fbld
mov
sbb
out
push
imul
mov
xor
add
cmpsl
divl
pop
insl
jbe
fdivr
inc
and
inc
inc
jmp
cmp
dec
xor
inc
std
popf
pusha
cltd
ja
pop
xor
mov
push
out
pop
pop
bound
pop
out
push
cmpsb
dec
add
jle
push
adc
add
mov
mov
cs
push
loopew
arpl
push
mov
subl
jp
pop
xchg
jg
hlt
dec
and
int3
jbe
ret
inc
cmpb
dec
xchg
xchg
jg
push
pop
mov
cli
ljmp
subb
cmp
das
lret
and
popf
inc
repz
in
mov
dec
dec
jns
inc
loop
rorl
adc
lcall
jo
out
pop
dec
sbb
push
xchg
mov
pusha
leave
movsl
push
mov
sbb
loopne
leave
movsl
bound
fs
inc
sbb
adc
mov
pop
and
fxch
lea
mov
mov
xchg
cli
xorb
and
xchg
in
jmp
mov
or
xchg
adc
pop
jns
sbb
clc
les
sub
sbb
lret
pop
and
insl
cmp
test
jge
xchg
fs
andl
adc
jge
adc
dec
mov
hlt
icebp
fidivl
mov
ret
icebp
leave
cld
mov
inc
xchg
xor
leave
push
mov
jmp
loopne
push
dec
notb
xchg
outsb
inc
xchg
cld
jb
fisttps
cmp
imull
or
pop
lret
ja
and
inc
imul
sbb
dec
pop
mov
and
xorl
mov
jmp
pop
mov
repz
push
xchg
aaa
ret
push
rcll
pop
mov
ds
adc
lret
mov
push
out
cmp
movsb
xchg
daa
mov
test
test
repz
pop
adcb
mov
and
push
mov
out
push
sahf
adc
mov
leave
es
cmpl
repz
push
and
cltd
mov
mov
cmpsl
sub
jge
out
mov
jnp
fnstenv
mov
pop
fnsave
pop
imul
push
andl
lret
mov
mov
adc
mov
xchg
fstl
sub
push
stc
jb
gs
or
scas
pop
das
shll
insl
outsl
xchg
adc
icebp
push
dec
or
ss
into
dec
fstl
jae
xchg
cs
lds
add
les
dec
push
int3
repz
mov
cmp
cmp
jnp
or
xchg
in
or
mov
fnstenv
mov
cmpsb
sbb
lea
or
in
xchg
push
push
movsl
pushf
push
dec
mov
push
mov
mov
dec
mov
mov
pushf
or
inc
gs
dec
in
mov
xchg
scas
stc
ljmpw
xchg
scas
cld
imul
push
subb
fcoml
cmc
xchg
fisubrs
mov
imul
cmp
xchg
clc
jb
mov
iret
dec
mov
jb
test
push
cmc
mov
jae
lds
lahf
and
addr16
int3
arpl
xchg
cmp
push
dec
or
mov
nop
lahf
jo
push
inc
adc
out
into
ja
inc
mov
lahf
dec
jb
inc
push
and
int
lods
inc
lea
inc
hlt
and
mov
xchg
inc
je
push
lahf
xor
adc
repz
mov
xchg
inc
jae
push
lahf
xor
inc
clc
and
mov
add
lahf
cmp
inc
mull
xlat
mov
xchg
inc
ja
push
lahf
aaa
jb
inc
repnz
mov
xchg
inc
jb
push
lahf
xor
inc
icebp
and
mov
xchg
inc
jno
push
lahf
pop
jb
inc
sti
and
mov
add
lahf
cmp
inc
mulb
mov
xchg
inc
jbe
push
lahf
ss
inc
cmc
and
mov
or
xchg
xor
jno
sbb
dec
loopne
addr16
test
cmpsl
mov
bound
dec
sbb
repz
or
out
jno
dec
adc
dec
and
or
shll
xchg
pop
bound
subb
ret
mov
addb
test
test
add
mov
jb
cwtl
mov
mov
addr16
or
mov
test
add
or
in
mov
movsb
js
bound
dec
dec
inc
pop
inc
or
and
or
xchg
adc
dec
ja
adc
sbb
xchg
xchg
arpl
addr16
and
cmp
cmp
addr16
test
cmp
addr16
mov
sahf
dec
adc
fcompl
or
mov
mov
sbb
bound
popa
addr16
cwtl
fstpl
add
loopne
rolb
repnz
xchg
xor
inc
jb
mov
insb
push
clc
in
adc
fidivs
pop
fists
mov
bswap
call
cmpsb
sbb
push
insb
out
dec
add
mov
inc
aad
or
iret
or
je
or
in
cli
cmp
or
stc
leave
dec
push
call
nop
cmp
or
cmp
inc
test
popf
shll
sub
lods
shr
es
arpl
jb
dec
push
out
in
push
repnz
fcompl
outsl
and
ja
daa
into
and
push
push
imull
dec
movsb
fistpl
data16
lods
jle
inc
xor
jns
push
nop
push
mov
xor
es
inc
hlt
push
sahf
movsl
shl
xlat
jnp
out
das
cmpsl
sbb
and
je,pn
pop
and
adc
lcall
fs
cmp
frstor
mov
cmpb
sahf
mov
pop
ds
push
pop
std
out
lods
add
mov
gs
aas
adc
scas
outsl
add
and
push
pop
daa
xor
xchg
add
arpl
in
add
dec
and
mov
movsb
mov
jb
paddq
dec
fisttpll
imul
scas
sub
call
or
leave
ljmp
std
sti
mov
and
rcr
xchg
loope
adc
adc
je
dec
call
aam
addr16
jg
mov
shlb
loopne
xor
in
pop
dec
pop
orl
jp
jp
xor
or
push
mov
jp
popf
xchg
push
mov
sub
add
push
and
push
insb
mov
pop
jbe
ret
adc
pop
lock
jne
ret
fs
adc
pop
or
enter
dec
xchg
test
scas
or
cs
jp
clc
mov
push
jbe
mov
div
faddl
xchg
jnp
jns
ret
in
ds
xorb
movsb
flds
xchg
popa
stc
or
test
notl
jb
adc
cmp
call
into
stc
jb
test
je
mov
adcl
mov
ret
mov
ret
das
lret
dec
dec
sub
lds
mov
push
jecxz
and
jmp
adc
test
dec
stos
ds
fs
out
xchg
mov
pop
or
lahf
add
arpl
push
pop
cmp
rep
sbb
mov
pop
mov
std
cmp
jge
jbe
pop
or
push
cltd
pop
test
xor
hlt
jmp
or
loope
hlt
pop
push
jmp
fldl
sti
push
xor
sbb
dec
inc
cmp
adc
sbb
adcl
inc
outsb
pop
push
and
jecxz
lock
fs
sbb
jno
mov
ljmp
pop
inc
cwtl
sub
xchg
jb
and
outsl
mov
mov
jle
add
xchg
imul
clc
inc
outsl
adcl
push
mov
fs
sub
adc
mov
outsb
mov
jnp
scas
jmp
dec
jno
sahf
jle
fdivl
mov
push
mov
popf
lret
rorl
fcoml
jo
jp
and
in
outsb
push
lret
sti
xor
aaa
mov
gs
or
dec
sub
pop
sbb
lahf
lahf
or
push
daa
adc
or
jnp
mov
mov
lods
fdivrl
repz
inc
and
push
add
adc
enter
adc
adc
xchg
push
lods
ds
xchg
stc
cmpb
mov
pop
test
imul
ljmp
and
adc
jns
incl
push
push
rcll
mov
jb
fs
fsubl
xchg
fnsave
and
ds
fs
movsb
inc
xchg
sti
pop
lret
dec
push
sahf
neg
sbb
pop
sub
leave
lahf
add
std
or
cmp
negl
hlt
push
gs
xor
cmp
test
in
out
pop
sub
ja
push
icebp
xchg
inc
sub
out
jne
gs
repnz
ror
stos
and
insb
xor
pushl
push
insb
mov
adc
pop
lea
inc
xor
js
mov
xchg
dec
inc
mov
push
mov
fnstsw
jmp
jge
daa
push
test
jge
pushf
mov
jle
mov
fcmovu
jge
ret
ficomps
push
in
sbb
mov
or
xor
xor
jb
arpl
fmull
sbb
push
popf
js
ja
aas
testb
inc
push
adc
rorb
fsts
sbbb
loope
test
stc
mov
in
cmp
mov
dec
push
clc
in
sbb
lods
aas
int3
dec
mov
mov
lods
mov
gs
lds
mov
loop
scas
jmp
push
cmpsl
xchg
stos
push
push
or
cmpsl
in
sub
jns
cltd
loop
sub
pop
fs
sti
cmc
lods
dec
jecxz
ljmp
lret
fisubl
mov
mov
je
popa
pop
addr16
adc
add
enter
lahf
fisubl
pop
cmc
cmc
or
mov
popf
insl
jb
inc
xchg
and
aas
push
pop
push
aad
rcrb
sub
out
out
dec
fistpll
pop
popa
ds
push
xlat
inc
std
fstl
push
fisttpll
xchg
jle
jb
adc
stos
push
nop
sub
push
lahf
jae
sbb
loope
xchg
pop
cmp
push
xor
in
push
hlt
std
dec
sti
sub
iret
fisubrs
mov
and
and
xchg
lahf
mov
mov
jg
pop
or
ja
mov
int3
icebp
cli
test
mov
pop
pop
lock
sub
ficoml
jae
sahf
cmp
icebp
cli
vmwrite
out
sub
pop
jne
sbb
aaa
test
sbb
lock
mov
imul
arpl
xor
and
in
push
add
scas
cmp
mov
and
mov
nop
repnz
sub
jmp
outsb
fnstenv
mov
add
push
mov
push
mov
insb
mov
je
add
pop
rcll
jb
inc
push
inc
popa
mov
and
jbe
inc
fs
bound
jle
loop
andl
sub
xor
dec
rorl
push
mov
xor
addl
dec
inc
mov
xor
ss
out
dec
shlb
testb
pop
insb
pop
sub
fmuls
cmp
fimuls
inc
adc
or
nop
or
xor
sbb
imul
jecxz
cs
repz
xchg
je
ds
mov
sbb
pop
adc
je
cmp
push
pop
test
add
cmc
cld
cmc
and
mov
andb
leave
xchg
fldl
cmpsb
loopne
push
testl
xchg
mov
xor
xchg
ret
push
sbb
hlt
or
das
call
xor
jle
push
and
and
mov
push
push
rcr
lds
cli
jne
mov
stos
or
sub
lret
cmp
mov
inc
mov
std
push
add
cmc
lahf
sub
push
addb
cwtl
mov
adc
mov
fisubl
ret
lods
adc
jns
les
lret
incl
loopne
jle
mov
jb
cli
cmpsl
sahf
pop
addl
jmp
and
mov
lods
mov
fistpl
js
test
push
cmp
addr16
pop
ds
xchg
cmp
sbb
ret
imul
xchg
and
addl
ret
test
ljmp
sahf
faddl
add
mull
nop
mov
addb
inc
ret
sbb
push
or
std
addr16
sahf
mov
out
mov
mov
add
lock
cmp
xchg
pop
icebp
test
pop
sarb
inc
inc
pushf
imul
dec
fidivl
test
cmp
cmp
sbb
inc
mov
clc
push
sahf
add
mov
pop
sahf
xchg
adcb
adcl
lea
xlat
pop
xchg
test
test
xchg
sahf
andb
lcall
jle
leave
or
inc
lcall
test
imul
mov
sahf
add
in
xchg
xor
mov
mov
xchg
xchg
pusha
and
xchg
adc
push
arpl
sbbl
xchg
andl
outsb
mov
mov
xchg
enter
test
sbb
mov
mov
fimull
lock
xchg
pop
xchg
jle
testl
add
adc
mov
mov
lock
test
mov
inc
loope
fsubl
or
test
mov
js
fiaddl
mov
shlb
mov
fwait
adc
jo
xchg
adc
cmpl
mov
mov
xchg
jno
inc
xorb
and
bound
cbtw
push
mov
test
xor
icebp
mov
jno
or
mov
inc
test
loopne
outsl
loopne
inc
out
aam
sbb
dec
mov
mov
rorl
test
jmp
pop
and
sahf
adc
dec
dec
mov
mov
xchg
fs
ljmp
mov
jb
test
xchg
jle
test
mov
adc
mov
mov
adcl
popf
push
test
popf
xchg
lcall
xchg
mov
adc
adc
stos
popf
push
mov
cltd
add
sbb
test
mov
mov
add
mov
xchg
ret
push
cwtl
ret
push
mov
loopne
sbbb
nop
ficoms
add
mov
out
xchg
and
or
push
or
mov
pop
mov
dec
adc
nop
pop
xchg
andl
sbb
mov
mov
mov
and
adc
mov
and
and
push
xchg
fbld
in
nop
filds
inc
mov
push
xchg
pusha
lods
mov
cltd
icebp
stos
mov
jg
add
sahf
sub
sahf
inc
xchg
pop
loopne
cli
mov
adcb
mov
mov
jne
mov
xchg
orl
lahf
mov
test
mov
sahf
cmc
cli
xchg
or
add
popf
and
xchg
xchg
loopne
xorb
aaa
adc
and
push
data16
lcall
iret
mov
jbe
nop
xor
mov
insb
xchg
inc
mov
adc
test
adc
cmp
mov
mov
pop
nop
adc
clc
xchg
adc
add
pushf
or
mov
lahf
adc
lcall
xchg
arpl
mov
mov
mov
and
push
sbb
add
fadds
cmp
adc
stos
dec
test
xchg
orl
pop
stos
xorb
out
cmp
or
push
or
sub
orl
leave
roll
or
inc
ja
bound
jg
orl
nop
or
xor
dec
bound
add
scas
push
andb
adcb
xchg
xor
jg
packuswb
fs
dec
xchg
outsl
or
rorl
sbb
fildll
add
jge
addb
movb
nop
mov
xorl
add
xchg
divl
daa
test
or
xchg
mov
ret
ds
xchg
add
popf
adc
jg
xchg
and
loope
push
nop
mov
aam
xchg
sahf
mov
inc
ljmp
cwtl
add
add
xchg
into
mov
jbe
mull
fs
sbb
mov
inc
sbb
adc
mov
xchg
test
lahf
movsl
inc
xchg
dec
adc
dec
popl
mov
xchg
test
or
or
imul
mov
call
xchg
and
inc
loope
mov
jl
and
ja
jo
sub
xchg
scas
pop
stc
sbb
mov
subb
mov
jb
and
sub
or
sbb
cwtl
pop
jp
and
and
adc
or
push
xchg
adc
repz
mov
jl
sbbl
out
add
inc
rcll
popf
sbb
push
pop
add
xor
push
mov
sahf
ja
inc
mov
xorb
pushl
nop
setl
ja
inc
adc
hlt
pusha
int3
orb
mov
cmp
jp
stos
test
pop
icebp
es
dec
andl
or
sahf
inc
xchg
xchg
mov
iret
xchg
adc
leave
bound
mov
hlt
pusha
and
mov
push
addb
xchg
adc
mov
popa
xchg
addr16
fnstsw
dec
nop
cmc
inc
mov
xchg
and
fs
sahf
movsb
inc
ljmp
ret
xchg
sahf
mov
test
or
mov
nop
jle
mov
mov
add
addr16
ljmp
or
dec
cwtl
lds
bound
jecxz
xchg
xchg
cmp
loopne
mov
mov
test
xchg
mov
addb
and
xlat
orl
jne
xor
xchg
lret
inc
sahf
pusha
sti
data16
adc
std
sbb
sahf
rorl
cwtl
mov
jecxz
lods
or
lcall
or
mov
mov
xchg
in
test
int
mov
cmpsb
sbb
sbbb
xchg
jecxz
mov
fisubrl
mov
subl
push
fwait
xchg
xchg
mov
mov
lea
cmp
test
pusha
subl
and
sub
outsb
xchg
jbe
xchg
repnz
xchg
pop
lret
sahf
js
mov
or
lcall
in
sbb
mov
xchg
imul
fwait
xchg
fwait
into
test
ret
pushf
testl
in
popf
xorb
or
out
mov
push
or
jb
cmpl
jbe
out
xchg
jo
mov
mov
std
ja
mov
xchg
in
xchg
incl
mov
aam
sbb
xor
ds
ja
and
arpl
push
andl
mov
sub
rcrb
xor
dec
ljmp
adc
xchg
sahf
out
jno
pop
cwtl
dec
or
adc
xchg
mov
ljmp
addr16
lea
popf
inc
mov
xchg
mov
lcall
or
fildll
test
outsb
push
lahf
mov
cwtl
lret
fildll
cmp
inc
mov
pop
adcb
in
mov
cmc
pop
fistps
xorb
mov
jp
mov
mov
popa
test
sahf
or
adc
fiadds
cmp
testl
xchg
xor
xor
xchg
pop
subb
xchg
jecxz
cs
popf
ja
mov
jb
xchg
xchg
push
mov
nop
or
add
xchg
xchg
sahf
int3
push
lcall
mov
xchg
sbb
orb
outsb
out
flds
nop
arpl
mov
jle
mov
dec
gs
sbb
xchg
fs
in
rep
pushf
lea
lea
test
cltd
in
mov
sbb
mov
mov
idivl
data16
cltd
xchg
and
mov
push
test
lea
cld
or
filds
popa
loope
mov
dec
pusha
inc
jl
xchg
or
xchg
jecxz
inc
subb
and
arpl
arpl
sbb
jb
push
mov
xchg
jg
pushf
push
decl
or
adcb
incl
nop
mov
xchg
test
pop
cld
and
lcall
jne
mov
sbb
adc
mov
lcall
popf
mov
push
sar
addb
or
flds
push
mov
mov
loop
pop
dec
roll
rolb
jbe
xchg
pop
inc
xor
shll
inc
fstpt
and
mov
mov
gs
jl
dec
push
mov
sar
fcompl
iret
aas
mov
dec
cmpsl
pop
adc
mov
sbb
insl
lods
je
mov
test
dec
cmp
xchg
xchg
insb
push
sbb
inc
mov
lcall
cmp
and
mov
adcl
xchg
andb
jb
push
testl
add
pop
dec
mov
inc
imul
mov
cmp
test
pushf
lock
xchg
addr16
movsb
mov
mov
sbb
xchg
and
outsl
sahf
push
push
jecxz
sub
cli
mov
lcall
cwtl
out
mov
addb
data16
jl
fiadds
xchg
pop
push
andb
mov
mov
mov
mov
xchg
sub
outsb
xchg
cmp
inc
insb
cmpb
lea
cmp
aas
dec
mov
shl
mov
xchg
sbb
cmp
aad
cmpb
mov
cmp
test
xchg
and
nop
jbe
bound
mov
xchg
push
sahf
test
add
inc
sahf
arpl
loope
mov
mov
jp
xchg
pop
mov
xchg
or
xor
push
test
fiaddl
xchg
mov
xchg
aad
pop
and
push
daa
cmp
imul
test
inc
inc
lods
adc
test
in
fcomp
lret
sahf
and
ja
inc
add
xchg
das
test
inc
loope
add
mov
and
and
cmp
mov
jecxz
add
cmp
outsb
mov
pop
std
addr16
jb
inc
mov
fdiv
mov
arpl
cwtl
fs
test
call
inc
insb
and
ja
xchg
ja
inc
test
lahf
mov
test
mov
pusha
pushf
aas
cmpb
inc
sahf
xchg
bound
fs
fwait
xorb
sbbl
test
incb
sbb
andb
xor
fsubl
sbb
mov
adcl
int
addb
mov
shlb
int
pop
xchg
sub
sbb
mov
outsb
lcall
cli
jb
stos
push
mov
cmpsl
sbb
test
les
imul
jp
insb
push
stc
xchg
push
nop
sahf
xchg
sub
ds
mov
adc
mov
mov
mov
or
and
mov
xchg
pushf
xchg
lcall
cmp
cmp
xchg
mov
push
daa
das
cmp
mov
xchg
sbb
mov
push
aaa
aas
sub
lods
mov
mov
add
and
and
mov
xchg
fwait
xchg
cltd
adc
mov
sbb
cmp
cmp
dec
push
pop
inc
ret
loopne
push
ljmp
push
rcr
mov
fdivrs
outsb
jbe
cli
mov
clc
inc
dec
inc
dec
faddp
mov
int3
fs
bound
out
in
push
pop
push
pop
into
mov
fdivl
jp
testb
inc
iret
mov
lds
jge
out
mov
in
pop
dec
push
xlat
fisttps
insl
jne
decl
inc
dec
ret
lret
mov
leave
arpl
imul
push
pop
push
pop
rcr
mov
fnstenv
jno
repz
add
stc
push
or
push
shl
mov
or
sbb
fadds
test
xchg
fwait
xor
lcall
lods
scas
pushf
push
and
pusha
pusha
lahf
adc
sbb
push
sti
mov
mov
mov
inc
orl
mov
mov
inc
sahf
add
jno
pop
dec
addr16
inc
jle
inc
pusha
add
lahf
pop
jno
jb
jb
scas
inc
or
call
adc
mov
mov
mov
adc
aam
hlt
scas
adc
nop
inc
cwtl
mov
mov
sbb
xchg
xlat
xchg
pop
xchg
xor
mov
or
popf
cmpsl
out
jg
mov
mov
out
lahf
es
test
arpl
or
lahf
adc
adcl
mov
negl
sub
sbb
push
inc
shll
xchg
adc
test
nop
jb
cwtl
mov
push
js
mov
add
in
adc
xchg
or
xchg
dec
adcl
shlb
bound
sub
decb
push
addr16
lock
xchg
jb
cmp
inc
hlt
ds
sub
mov
add
lahf
xchg
dec
cli
sbb
stos
ret
loope
inc
cmp
lea
ds
fs
dec
mov
fnstsw
xchg
xchg
sar
mov
adc
pop
outsl
movsb
xchg
xchg
cwtl
dec
sub
notl
rorb
ja
xor
xchg
sarl
fidivs
sbb
imul
or
xchg
sub
int3
inc
addl
aaa
addb
jnp
xchg
cwtl
stc
or
xchg
and
ljmp
inc
lock
mov
subb
mov
xchg
test
lcall
lahf
fstps
lahf
adcb
lea
mov
jg
sbbb
andl
popa
dec
daa
test
add
and
mov
mov
in
ljmp
mov
and
les
and
lahf
xchg
lahf
lret
mov
sub
mov
mov
sahf
insb
xchg
add
cmp
mov
mov
and
int
lock
xorl
push
mov
xchg
xor
fs
jne
mov
pop
orl
adc
mov
adc
sbb
xchg
jg
scas
sahf
jbe
faddl
fnstcw
inc
test
sbbl
cwtl
mov
pop
jne
imul
imul
cwtl
add
call
xchg
or
xchg
addr16
sbb
dec
lcall
cmpb
lea
pop
loope
jmp
push
mov
cmp
shlb
mov
mov
mov
fisubs
sahf
push
or
xchg
aaa
test
adcb
test
xchg
lcall
mov
add
fidivl
sub
push
ss
mov
push
jnp
pushf
sbb
movsb
jne
jb
mov
or
es
popf
jle
aas
and
mov
jne
bound
daa
sbb
or
ljmp
inc
push
fs
xadd
out
cmp
sbb
mov
aaa
pop
rcll
pop
mov
aaa
nop
pusha
cwtl
inc
out
xchg
add
pushf
xor
adc
cwtl
xchg
pushf
mov
sahf
mov
xchg
xchg
fwait
mov
popf
lea
mov
add
sbb
add
sbb
push
pop
pop
pop
mov
add
sbb
add
sbb
add
push
inc
push
pop
dec
inc
push
pop
mov
dec
push
inc
inc
push
pop
mov
push
pop
dec
inc
push
pop
mov
dec
push
inc
xlat
fisttps
lret
rcl
mov
aad
ret
mov
fmulp
mov
fmull
enter
mov
je
insb
bound
mov
outsb
jbe
addr16
mov
jae
imul
mov
insl
jne
out
decl
jmp
icebp
stc
mov
std
in
cmc
in
repnz
mov
out
mul
in
cld
mov
add
clc
call
xor
cmp
and
cmp
es
aaa
aas
mov
and
cmp
and
cmp
and
scas
mov
mov
mov
mov
mov
mov
lods
shlb
nop
sbbb
xchg
mov
and
adc
add
mov
push
push
push
push
xchg
cltd
xchg
mov
popf
xchg
lea
lidtl
adc
add
mov
or
orb
push
jl
je
jle
outsb
out
mov
out
loope
icebp
jmp
jmp
cmc
in
in
jg
ja
popa
jns
imul
jne
gs
mov
ljmp
mov
out
clc
lock
push
inc
pop
push
dec
inc
pop
mov
push
dec
inc
fisttps
ror
ret
fisttpl
int
inc
pop
mov
inc
pop
push
dec
inc
pop
mov
pop
push
dec
inc
ret
ror
int3
mov
loopne
ror
sub
cmp
and
xor
and
mov
ds
mov
mov
mov
movsl
daa
aas
mov
das
and
xor
and
mov
sub
mov
mov
or
cwtl
mov
lcall
mov
bound
cmpb
js
je
mov
insb
dec
inc
inc
pop
mov
pop
push
pop
push
push
dec
mov
dec
inc
sub
and
mov
cmp
cmp
xor
mov
sub
or
add
mov
sbb
sbb
adc
mov
or
out
jecxz
mov
stc
sti
cmc
div
repz
mov
jmp
ret
fisttpll
xlat
rcl
int
iret
leave
lret
lds
mov
mov
lods
mov
addl
xchg
lea
addr16
arpl
jg
jnp
ja
jae
mov
imul
inc
pop
mov
pop
push
push
push
push
dec
mov
dec
inc
daa
and
cmp
xor
mov
sub
and
mov
sbb
adc
mov
or
add
mov
cld
idiv
repnz
out
lock
in
out
ret
loopne
fcmovu
fcom
aam
rorb
mov
mov
mov
mov
stos
lods
cmpsb
test
lock
xchg
pusha
jb
addb
lcall
ficomps
push
popf
stos
and
lcall
jg
and
subb
fimull
fs
mov
fs
cli
ret
add
cmp
lcall
mov
out
xchg
mov
xchg
xchg
lahf
jns
andl
push
sbb
notl
jmp
scas
xchg
push
pop
fidivrl
bound
outsb
push
decl
xchg
mov
leave
mov
xchg
sbbb
push
ficomps
pop
adcl
pop
or
addl
ret
pop
mov
adcb
cmc
xchg
xchg
test
xchg
inc
mov
mov
cmpsl
and
pop
ds
std
mov
mov
inc
and
lret
mov
test
jne
ljmp
mov
push
imul
cmpsl
mov
jl
dec
jp
addr16
adc
mov
std
repz
xor
sbb
mov
sub
adc
or
les
jmp
mov
pop
int
mov
adc
lea
xchg
sbb
lods
mov
mov
es
orb
inc
sub
in
idivb
test
scas
imull
cmp
nop
xchg
cmp
push
gs
call
mov
sbb
cmp
add
mov
repnz
jnp
or
pushf
jmp
push
push
sub
aas
call
in
ret
inc
xchg
xchg
std
sbb
outsl
sub
adc
sub
mov
sbb
or
push
adc
cmpsl
int3
jp
test
mov
and
mov
fnstenv
dec
stos
mov
aam
dec
addl
imul
outsb
mov
pop
fwait
cltd
mov
in
jo
fcmovne
mov
jbe
push
xchg
inc
sub
movsb
ja
outsb
cwtl
movsb
in
int
repz
mov
or
cmpsl
xchg
push
mov
xchg
rorl
ret
loop
mov
xchg
sbb
cmp
pop
jl
add
fiaddl
cmpsl
inc
out
mov
jo
xchg
adc
mov
lcall
shlb
adc
lods
in
pop
jg
dec
loope
mov
pop
sti
pop
or
cli
lret
pop
mov
or
sub
pop
test
adc
and
pop
imul
push
fists
pushf
mov
decb
and
in
mov
mov
adc
jbe
lcall
daa
mov
xlat
test
outsl
jecxz
fwait
mov
mov
mov
or
lret
int3
fcoml
inc
cwtl
mov
mov
js
xchg
fidivrs
out
sbb
test
lea
int
mov
pop
dec
imul
push
jge
jmp
hlt
loope
ret
sub
cmp
or
inc
mov
cmp
sbb
pop
mul
xchg
scas
adc
hlt
test
xor
inc
outsb
aam
clc
push
and
xchg
enter
cld
mov
mov
movsb
sbb
nop
cmp
aad
or
mov
dec
orb
lods
insl
gs
cmpsb
add
rolb
lods
mov
mov
leave
mov
xor
adc
popf
push
mov
xchg
mov
in
sarb
dec
lahf
mov
loop
pop
and
movsb
lds
cwtl
pushf
push
or
push
stc
cmp
jle
sarb
mov
jl,pn
inc
cmp
or
jecxz
dec
fwait
pop
mov
mov
movaps
rorl
ret
out
cmpsl
sarb
lock
push
pop
mov
and
pop
sbb
jle
mov
aaa
aam
imul
mov
inc
cmp
adc
cmc
push
jae
addr16
fisttpll
cmpsl
push
and
pop
mov
add
dec
mov
and
popf
and
pop
mov
rorb
loop
jmp
or
mov
pusha
dec
nop
test
in
fwait
mov
cmp
ljmp
insl
lds
mov
mov
pop
cwtl
fcoms
dec
cmp
push
sti
mov
into
pop
test
or
jl
out
mov
rcll
mov
test
push
mov
jge
ret
mov
pushf
mov
mov
mov
loopne
pop
push
or
leave
imul
cmp
cwtl
or
int3
mov
test
sahf
add
inc
lock
push
push
dec
dec
xor
cmp
xor
add
fisttpll
ljmp
mov
push
fldt
lea
mov
inc
mov
je
pop
xor
repnz
dec
incb
add
mov
inc
lret
pop
sbb
ret
and
fistpl
jl
cltd
pop
jle
or
add
jne
jnp
fwait
push
lret
ret
std
daa
push
popf
dec
das
mov
sbb
enter
dec
fiadds
jno
bound
xchg
cltd
mov
movsb
pop
sbb
cmp
cmp
addr16
inc
xor
xor
dec
adc
sub
push
sub
loopne
inc
xchg
pop
stc
fcomp
sbb
push
loope
or
movhps
jle
ja
jb
js
jo
push
dec
add
jg
gs
rcrb
addr16
add
lahf
xorl
pushf
out
or
or
notl
and
mov
push
rorl
or
adc
pop
sbb
bound
daa
sbbl
rolb
mov
andl
xchg
sbb
sub
sarb
sbb
adc
enter
dec
sub
mov
xchg
int
loopne
inc
lock
mov
insl
jg
lret
sahf
insl
jae
or
cwtl
aaa
adcl
xchg
arpl
inc
mov
loope
mov
in
mov
dec
jl
icebp
adcl
lcall
cmpl
pop
sbbl
push
lcall
lods
in
xchg
xchg
adc
mov
pop
mov
sbb
adc
mov
mov
stos
xchg
sbb
iret
adcl
scas
adc
clc
jo
ds
insb
xchg
iret
mov
roll
daa
add
or
out
mov
ds
outsl
ja
adc
invd
or
mov
andb
dec
lahf
bound
jg
add
jg
adc
pop
and
loope
xchg
popa
and
xchg
addr16
jle
addr16
popa
dec
xor
xor
mov
addl
sbb
mov
xchg
add
mov
fisubl
mov
in
inc
xor
push
mov
jmp
push
fists
adc
jnp
jnp
dec
rolb
pop
lcall
xchg
mov
mov
rorl
jns
cwtl
cmp
jp
pop
incb
lcall
fidivrs
mov
fadds
or
xor
jbe
test
popa
test
lea
bound
add
xorb
cwtl
and
jp
or
pusha
mov
stc
xor
jmp
addb
cmc
sbb
outsb
or
jo
in
int
mov
push
imul
arpl
adc
pushf
mov
pushf
lods
jg
mov
les
add
pop
jge
mov
lea
jge
pop
cs
and
cmpsl
cld
in
aam
cmp
adc
sub
pop
call
and
add
jno
addr16
inc
pop
add
lahf
jb
add
lcall
xor
mov
xchg
pushf
and
add
imul
adc
mov
push
lahf
mov
rcll
adc
and
sbb
pop
loopne
sti
fwait
pop
sbb
lods
adc
stc
lahf
adc
jg
addl
popf
xorb
adc
and
lahf
pop
adc
lahf
push
icebp
adc
popl
adc
sbb
rcrl
lahf
sbb
push
add
xchg
inc
jb
inc
sbb
and
cwtl
adc
inc
lret
and
pop
xor
ljmp
mov
jo
lcall
pop
adc
xchg
nop
add
dec
cmpl
fimull
fdiv
adc
loope
pop
push
push
fwait
popf
sbb
mov
sbbl
inc
frstor
popf
pop
addr16
test
cmpsl
pop
pushf
push
jno
pushf
inc
adc
adc
roll
adc
cwtl
dec
pushf
jns
outsl
and
icebp
inc
xchg
fsts
sub
pop
pop
das
adc
or
sub
icebp
aam
icebp
rorb
out
xchg
dec
sub
dec
je
mov
add
subb
add
cmpsl
or
add
mov
sbb
add
fidivrs
fidivs
div
pop
mov
jno
pop
mov
in
addr16
ret
xchg
add
aam
cmpsb
mov
or
sub
orl
mov
adc
jbe
mov
pop
rcrb
repz
fnstenv
jge
ficomps
xchg
sbb
out
aam
pop
orl
adc
lcall
fidivl
xchg
xor
sbb
xchg
cmp
mov
jnp
outsl
je
inc
cmc
or
dec
stc
sbbb
inc
cltd
mov
add
xchg
out
ss
dec
or
scas
jne
xlat
xchg
xchg
add
faddl
clc
cmpsl
push
sbbl
sti
bound
stos
pushf
dec
mov
je
xchg
xchg
xchg
jae
sbb
fcomps
sbbb
hlt
filds
sub
push
adc
xchg
inc
adcl
rolb
test
xchg
xor
test
mov
xchg
pop
inc
mov
xchg
test
addr16
mov
jp
or
push
popf
lahf
insl
icebp
jnp
lds
addl
nop
inc
popf
lahf
pop
mov
test
push
sub
sti
xchg
test
push
idivb
inc
in
test
filds
push
sbbl
cmc
ss
dec
cltd
std
inc
lcall
cmc
push
mov
push
aas
lahf
pop
orb
and
mov
subl
add
push
arpl
sbb
jp
add
jnp
pop
inc
popf
cltd
lds
sti
push
sbb
nop
pop
sti
ss
cmc
push
testl
push
fs
jg
dec
mov
mov
xor
or
bound
xchg
data16
dec
inc
lods
adc
daa
lods
push
popf
ret
or
dec
xchg
arpl
add
sub
imul
mov
mov
data16
ret
dec
ds
addb
test
jle
push
adc
cltd
gs
mov
push
and
ja
mov
gs
push
cltd
inc
in
aaa
xchg
bound
lcall
jns
push
ja
sti
sub
jns
adc
adcl
notl
cmpsl
sahf
xchg
and
mov
lahf
jl
imul
ljmp
lcall
pop
adc
out
lds
or
pushf
lahf
sti
sbb
adc
add
cmp
mov
jnp
xorb
popf
mov
and
mov
mov
sbb
cli
mov
mov
xchg
mov
xchg
mov
inc
add
or
xchg
outsl
jg
mov
arpl
subl
inc
fldl
movsb
xchg
mov
inc
das
jg
add
adc
out
fimull
jl
xchg
sbb
and
mov
jle
movsb
adc
xchg
or
inc
sbb
jle
sar
out
xchg
jo
fwait
dec
sbb
jmp
xchg
jmp
movsb
xchg
xchg
leave
js
movsb
inc
inc
and
inc
mov
mov
cwtl
jmp
aas
xchg
mov
fcomps
mov
xchg
sbb
jle
adc
test
fistl
in
cmp
pop
xor
sti
and
ss
pop
inc
mov
pop
sbb
into
mov
and
dec
jl
sti
out
inc
fs
mov
mov
popf
rorb
fisubl
fwait
je
jg
fcmovne
mov
test
and
cmp
fisubl
xchg
push
negb
adc
add
pop
xchg
push
jne
je
cmpsl
cmp
aas
repz
inc
xchg
int3
sbb
stc
addr16
pop
ds
call
push
sbb
mov
outsb
xchg
xchg
daa
scas
int
sbb
mov
sbb
cmp
sub
arpl
aas
pop
pop
jecxz
dec
sub
jg
inc
jecxz
stos
adc
adc
call
addr16
sub
fisubs
adc
incb
add
ficoml
mov
icebp
popa
lahf
push
in
mov
push
adcb
jl
rolb
fistps
cmpb
arpl
ss
cmc
pusha
jns
pushf
dec
mov
mov
xchg
jbe
or
test
jge
jl
xchg
pushl
js
mov
mov
mov
lahf
add
cltd
loope
fs
dec
dec
or
das
adc
jbe
sbb
push
sub
fwait
cmove
mov
fs
mov
lcall
inc
or
mov
cli
clc
hlt
sahf
out
inc
cli
pop
test
imul
ficomps
mov
push
or
adc
ja
and
js
or
lahf
pop
faddl
roll
mov
cli
addl
sbb
cltd
jle
mov
xchg
cmpsl
cwtl
test
xchg
cltd
mov
in
cmp
jge
pop
xor
mov
clc
mov
xlat
xor
in
and
jbe
aad
addr16
adc
fiadds
in
js
bound
push
add
repz
mov
xchg
mov
jo
orl
xchg
jecxz
adc
dec
xorl
add
pop
fimull
lahf
dec
insb
push
or
loope
loope
cmpl
arpl
jne
inc
cli
sahf
mov
in
jecxz
adc
cli
les
sti
aad
in
insl
jl
dec
imul
add
cmp
cmp
loope
inc
xchg
fildll
cwtl
and
dec
lcall
or
aaa
jns
dec
icebp
es
cmp
fisttps
jb
xor
lahf
js
jnp
fwait
add
jne
arpl
addl
and
xchg
jecxz
jge
sti
test
jne
lahf
add
out
loopne
inc
sbb
fwait
push
xchg
xchg
mov
incb
lahf
mov
push
push
mov
daa
mov
ja
sub
xchg
stos
mov
imul
xchg
loopne
add
pushw
popf
ja
adc
xor
pop
xchg
aas
jns
in
test
andl
pop
sbb
icebp
dec
lds
pop
pop
sti
xchg
adc
scas
pusha
cwtl
int
loope
mov
rolb
xchg
jmp
mov
je
pop
orb
lahf
mov
sqrtps
popf
mov
or
sarl
test
or
jmp
xorl
jb
dec
nop
es
cmp
sbb
xor
cmpl
mov
dec
xchg
and
repz
adcb
or
sbb
je
mov
mov
fwait
sahf
jnp
or
add
pop
fisttps
add
add
sbb
add
jbe
inc
mov
data16
orb
gs
add
sbb
and
aad
addl
xchg
iret
xchg
jbe
stc
lahf
or
mov
xor
xor
dec
cmp
cltd
fwait
fwait
test
add
sbb
andl
mov
or
das
xchg
mull
mov
push
add
nop
inc
inc
sahf
adc
es
mov
inc
cmc
push
or
roll
mov
cwtl
xchg
fisubs
pop
xor
inc
jle
push
cltd
imul
cmp
mov
pushf
inc
and
push
mov
enter
lahf
arpl
arpl
xchg
jge
mov
data16
mov
push
fwait
outsb
lahf
dec
pop
inc
ljmp
sbb
jl
or
add
jno
orl
mov
sbb
enter
ret
sahf
test
cmp
test
or
repz
ja
pop
out
pop
sahf
fucom
cli
decl
xor
stc
adc
push
mov
lahf
cmpsl
ss
out
ds
or
popf
sbb
inc
jns
mov
mov
mov
xchg
cwtl
popf
inc
cwtl
jns
movd
test
pusha
cwtl
mov
outsb
cwtl
loopne
push
adcb
or
dec
jl
cmpl
xchg
pop
out
mov
cltd
mov
sbb
push
sti
lods
ja
rcrb
jg
rorl
pusha
mov
add
add
inc
cmp
push
test
ficompl
jg
into
les
jge
in
addr16
lcall
and
cli
mov
add
xchg
xchg
sub
fwait
sub
fdivl
push
shl
bound
xchg
jle
bound
mov
popa
jns
mov
frstor
imul
repz
addl
xchg
adc
iret
repz
fwait
push
cltd
jp
lea
andl
cmp
mov
cwtl
mov
in
fadds
xchg
add
inc
les
xor
ficoml
aas
repz
mov
lods
fnstcw
sbb
pop
pusha
adc
inc
aam
and
popf
nop
fiadds
rol
or
xor
xchg
sahf
ss
fistl
mov
movl
adc
andb
in
or
cmp
sbb
cmp
or
add
mov
jp
dec
push
aas
pop
and
rcll
popa
cli
xchg
jnp
mov
aaa
cmp
pop
jle
mov
push
mov
mov
mov
adc
std
fcmovb
sbb
adc
xchg
jne
mov
and
aas
pop
xchg
xchg
adc
addb
sbbb
insb
cmp
inc
or
cmp
testb
out
jmp
ja
pop
ret
inc
push
mov
add
jne
js
mov
jecxz
push
push
mov
aaa
in
sti
push
xchg
testl
cmp
xchg
cmp
jecxz
test
int3
push
xor
fldl
fs
sti
adcb
jb
or
xchg
inc
outsb
popf
jmp
or
sbb
pop
daa
push
pushf
cltd
test
pop
pop
xchg
stc
nopl
sbb
pop
cmc
gs
shll
xchg
inc
sbb
sbb
iret
xor
loop
sbb
inc
mov
cmp
xor
popf
sbbb
dec
jl
ja
repnz
inc
lret
xchg
mov
pop
cmpb
dec
lret
cmpb
pushw
stc
lcall
mov
fdivrl
cmpsl
ret
fldcw
push
push
mov
xor
rorl
and
pushf
mov
loop
cli
add
inc
sub
sahf
pop
popf
addl
sbbb
push
and
fdivs
inc
xchg
popf
lahf
addl
adc
fwait
jecxz
xchg
mov
pushf
xchg
push
or
lret
inc
fstps
fs
rcrb
and
jne
repz
push
pushf
add
xchg
dec
mov
in
inc
sub
pushf
jle
scas
test
xchg
out
sbb
mov
mov
jns
popa
push
rcrb
pop
xchg
inc
fstps
stos
imulb
sub
dec
jecxz
inc
cmp
cmp
std
das
repz
add
ja
push
testb
out
fsub
lods
pusha
shll
mov
mov
in
inc
jns
fdecstp
push
adcb
add
popf
cmp
arpl
push
std
lods
sbb
cmp
cltd
cwtl
cli
xchg
fisubrs
fxch
inc
xor
scas
dec
pop
hlt
cmc
pop
mov
xor
push
inc
cld
pop
mov
fs
pop
jmp
sbb
lcall
dec
dec
xor
push
mov
mov
testb
pop
pop
test
test
cmp
push
pop
lret
xchg
mov
fwait
fs
dec
mov
test
cmpsb
mov
call
xchg
jne
addr16
or
jmp
mov
mov
sbb
fwait
mov
pop
push
pop
lahf
in
sbb
test
ret
mov
outsl
xchg
sub
cmc
xchg
fs
insl
fnstsw
push
sbb
sti
jl
pop
push
xchg
pusha
mov
push
fwait
popf
xchg
dec
xchg
mov
jle
sahf
xchg
sti
and
test
or
pop
loop
xchg
je
inc
lahf
cmpb
cmp
hlt
xor
addl
mov
arpl
mov
adcl
mov
and
xchg
bound
popa
cmpsl
push
cmp
invd
decl
sbb
inc
add
test
xchg
lea
mov
mov
xchg
sub
enter
out
mov
pop
cmc
pop
sbb
arpl
sbb
dec
xchg
xchg
popf
sahf
cmp
lahf
ljmp
and
sbb
add
push
xchg
je
adcl
js
jne
mov
sbb
adcl
xor
dec
rep
ja
sbb
pushf
pusha
pop
jl
orb
pop
das
jo
cmc
dec
xchg
add
cli
jmp
outsb
leave
sahf
cmpsl
cmc
mov
mov
xorb
jns
xchg
sahf
cmp
jle
jp
sub
sbb
fbld
cmp
pop
fimuls
loope
movb
xchg
dec
shrl
dec
ret
int
ret
push
in
mov
js
test
sub
xor
push
xchg
fisttps
dec
movb
adc
xchg
nop
cwtl
and
mov
or
cwtl
push
and
scas
and
test
inc
inc
int
fldenv
pop
push
sbb
rcr
pop
adc
pushf
out
xchg
cmp
jle
mov
jne
inc
sub
pop
cltd
addr16
sbb
sti
test
xchg
testb
ficompl
mov
inc
pop
test
sti
xchg
mov
test
mov
popf
add
test
cmp
addl
negb
add
hlt
test
movsb
mov
adc
and
xchg
popf
pop
add
jecxz
andb
lcall
xchg
lcall
inc
and
lcall
les
lahf
xchg
mov
sbb
sbb
dec
cwtl
loopne
and
lcall
and
mov
dec
fwait
lods
mov
inc
xorl
mov
cltd
lcall
xchg
lcall
cmp
add
mov
cltd
mov
add
cltd
mov
xorl
loopne
pop
mov
dec
xchg
addr16
adcl
push
roll
mov
adc
and
jbe
add
test
repnz
jbe
adc
xchg
push
cwtl
orl
mov
lea
and
mov
dec
cltd
nop
fadds
addw
adc
and
lcall
xchg
fstl
js
xchg
pop
add
inc
divl
cmp
add
cltd
outsb
test
inc
insb
popf
and
mov
cmp
xchg
clc
dec
pop
xchg
jno
test
cltd
mov
add
add
add
cmpb
cltd
addb
or
pop
cltd
add
addr16
add
push
inc
and
adcl
icebp
mov
add
fwait
cmp
lea
arpl
or
sete
test
xchg
mov
pop
xchg
xchg
dec
out
nop
mov
xchg
mov
or
addb
mov
adc
outsb
add
xchg
lahf
gs
lcall
add
mov
adcb
ja
cmp
mov
cmpl
les
cmp
xchg
fsts
xchg
add
xchg
lcall
dec
and
mov
xchg
pop
ret
test
and
xchg
push
out
pushf
jp
cmp
add
test
test
mov
cmpb
cmp
inc
insb
lcall
add
cltd
cltd
dec
xchg
loope
xchg
clc
dec
pop
nop
jno
xchg
inc
stos
mov
sub
inc
and
mov
inc
popf
mov
and
pushf
add
lcall
and
add
movsb
lahf
xchg
mov
filds
out
lahf
out
xchg
cltd
push
xchg
or
add
mov
xchg
add
fnstcw
in
xchg
negb
pop
push
sub
pop
or
add
mov
out
push
sbbb
js
test
add
negb
and
mov
cmpsl
lahf
lahf
adc
and
add
xchg
xchg
add
std
inc
out
sbbb
hlt
lcall
mov
and
or
andl
movsb
mov
adc
xchg
insl
pushf
sbb
fisttpll
dec
pushf
xchg
fadd
lahf
fstpl
mov
arpl
popf
adc
mov
mov
mov
fwait
sti
mov
sbb
add
mov
jbe
mov
xchg
fwait
mov
arpl
lahf
and
lea
mov
xor
jns
movsb
andb
popf
lcall
sahf
addb
std
xchg
adc
and
add
lcall
xchg
push
inc
and
movsb
mov
rolb
cltd
outsb
addl
mov
insb
mov
adcl
add
fadds
xchg
jge
or
xchg
lcall
xchg
mov
and
mov
add
mov
sbbb
and
xchg
push
lahf
pop
out
lcall
fwait
push
add
mov
sbb
push
xchg
mov
sbb
test
add
cltd
mov
add
loopne
sbb
arpl
inc
xchg
pop
lahf
cmp
xchg
xchg
and
xchg
sub
pushf
mov
mov
dec
sbb
mov
test
lds
fisubl
inc
inc
sbbb
xchg
jbe
add
scas
leave
push
pop
sbb
or
sahf
mov
cmpl
adcb
add
dec
add
mov
adcb
mov
cltd
xchg
add
pusha
mov
dec
popf
pop
xchg
in
sbb
lahf
xchg
pop
addl
arpl
ret
repz
out
mov
mov
mov
sahf
dec
xchg
int3
arpl
add
out
ret
pop
xchg
jge
or
and
mov
loopne
out
xchg
add
sbb
push
or
mov
out
mov
aam
rorl
loopne
lahf
inc
jno
inc
fwait
dec
add
bound
lcall
and
sbb
fnstenv
icebp
mov
popf
inc
sub
jne
scas
pushf
in
add
nop
push
add
or
flds
and
mov
pop
orl
cltd
nop
int3
mov
mov
jge
loope
mov
ja
lahf
and
mov
arpl
push
std
popf
ja
mov
adcl
rcrl
jb
pusha
adc
out
xchg
jns
and
bound
xchg
mov
mov
bound
sbbl
bound
jl
add
roll
fisttps
xchg
les
inc
ss
jns
andl
cltd
dec
mov
xchg
xchg
out
xchg
mov
and
xchg
pop
xchg
fwait
aas
sahf
and
jne
add
and
mov
dec
scas
mov
and
xchg
test
stos
inc
lea
mov
and
xchg
cmp
jmp
push
lcall
sahf
lahf
push
dec
xchg
pop
lock
sti
xchg
pop
lock
or
push
cmp
sub
dec
inc
das
adcl
sub
orl
fistpll
sbb
mov
cmp
fsts
cltd
pop
xchg
xchg
call
xchg
sbb
inc
lcall
adcl
push
or
aas
fwait
bound
and
lcall
mov
ret
fidivs
and
jb
pop
jmp
pop
sbbl
testb
inc
xchg
jp
cmp
push
mov
outsl
out
popl
int3
cmp
es
pop
lea
cld
xchg
movsb
adc
xchg
inc
adc
xchg
std
mov
bound
xchg
insb
lea
cld
mov
pop
xchg
add
xchg
xchg
xchg
cmpl
filds
mov
adc
xchg
in
xor
mov
popf
lahf
sub
xor
shll
add
xchg
mov
mov
push
mov
pop
mov
lahf
pop
repnz
pushf
sbb
sbb
lcall
add
xchg
xchg
pop
repnz
test
mov
mov
sub
lds
stos
xchg
or
mov
and
insl
adc
pushf
int3
and
fwait
jb
arpl
arpl
and
jb
bound
xchg
mov
dec
roll
or
xchg
mov
orb
pusha
pop
insb
fucomip
ret
mov
mov
test
cli
adc
push
mov
pushf
jbe
sti
fwait
cmp
mov
adc
add
ja
dec
mov
adc
cltd
jl
bound
add
mov
fisubl
mull
adc
faddl
jnp
call
xchg
fwait
or
arpl
adcb
xchg
test
jge
inc
cltd
or
rorb
lea
xchg
fldenv
push
lahf
mov
mov
pushf
xchg
xchg
fwait
ds
xchg
and
cwtl
mov
lahf
dec
xchg
insl
mov
pop
lahf
int
pop
jo
popl
mov
lods
bound
inc
xchg
popf
lcall
and
ds
addb
pop
cmpl
inc
cmc
and
push
xchg
xchg
leave
add
cmp
xchg
mov
push
nop
cmp
lret
sbb
sahf
jp
push
mov
or
cmp
xchg
cmp
adc
inc
sahf
js
cmp
nop
sahf
adc
inc
cmp
sbb
pop
xorb
and
ja
dec
adc
scas
sahf
xchg
sbb
sbb
xchg
mov
pop
or
mov
xchg
fsts
cmp
mov
xchg
cmpsb
bound
mov
jb
inc
shl
daa
xchg
mov
and
popf
jb
and
jne
add
xchg
mov
xchg
insl
xchg
mov
sar
nop
pop
xchg
xchg
in
pushf
jb
dec
sub
data16
and
xchg
sahf
fistl
xchg
popf
hlt
pop
nop
popa
sbb
lahf
jns
bound
dec
jle
pop
pushf
loop
lahf
sbb
adc
dec
add
push
stos
jge
pop
subl
popf
inc
and
mov
bound
add
mov
xchg
int3
pop
mov
mov
stc
in
xchg
faddp
cwtl
mov
stc
fiadds
stc
and
xchg
mov
adc
sahf
mov
jb
bound
mov
inc
xchg
sbb
dec
pop
nop
xchg
test
xchg
adc
jns
pop
lcall
xor
jl
popf
test
push
xchg
jno
xor
mov
adc
dec
mov
sbb
lahf
arpl
test
in
outsb
mov
xchg
ds
xchg
loopne
pushf
push
cltd
mov
cwtl
mov
cwtl
or
mov
xchg
or
mov
nop
or
mov
mov
pop
jno
out
lahf
cmp
orl
xchg
cltd
scas
xchg
xchg
sbb
sbb
xchg
rcrl
mov
mov
rorb
mov
jns
sbb
or
cwtl
repnz
adc
aam
jle
cmp
arpl
xorb
test
push
cmpsl
sahf
std
push
mov
cltd
flds
sahf
fwait
add
xchg
xchg
andb
lock
lahf
xor
jge
inc
sahf
adc
xchg
pop
or
mov
mov
xchg
out
xchg
cmpb
test
sbb
bound
lea
inc
push
roll
jge
mov
cwtl
arpl
inc
lea
sahf
jns
and
test
addb
jb
pop
mov
fistps
popf
fs
and
aad
adc
push
dec
sbb
mov
ja
xchg
xchg
dec
pop
xchg
mov
xchg
lret
aam
mov
movl
ja
inc
ret
lahf
mov
and
inc
add
lahf
and
inc
add
cwtl
loope
rolb
add
lahf
mov
and
inc
add
lahf
and
inc
add
xchg
ja
inc
les
or
xchg
cld
mov
lahf
xchg
jbe
pop
sahf
dec
pushf
sbbl
test
lcall
cwtl
scas
rcll
dec
xchg
scas
nop
xchg
scas
lret
or
test
add
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
sahf
dec
jbe
xchg
adcb
les
xchg
add
xchg
pop
aaa
inc
bound
fcoml
xchg
mov
xchg
scas
push
aaa
lcall
mov
xchg
lcall
xchg
nop
mov
dec
or
and
orb
xchg
pushf
or
nop
jbe
mov
addl
pop
xchg
mov
mov
jp
and
sahf
push
cmp
adc
xchg
lahf
outsb
mov
mov
orl
bound
mov
lahf
or
xchg
push
or
push
aam
stc
ja
jl
xchg
jns
push
daa
and
jle
inc
test
test
jle
dec
mov
xchg
loopne
xchg
sub
fildl
mov
bound
jg
bound
adc
mov
jb
inc
cmc
and
clc
ja
inc
not
popf
js
repnz
inc
add
lahf
and
inc
add
xor
ja
add
into
imul
pop
orl
sti
inc
ljmp
pusha
test
and
les
mov
mov
inc
inc
xchg
adc
lahf
jb
fistl
jne
and
xorw
or
fwait
mov
mov
cmp
push
xchg
mov
sbb
addr16
xchg
les
jecxz
mov
sahf
cmc
pop
xchg
popf
pop
xchg
inc
pop
xchg
jp
cmp
adc
ja
inc
cmpsl
add
lahf
xchg
inc
addr16
je
adc
push
mov
mov
push
and
dec
lahf
leave
mov
pop
xchg
xchg
nop
cmp
xchg
jb
push
jmp
pop
sahf
pop
arpl
mov
lea
sbb
xchg
in
popf
jb
mov
call
adc
ds
adc
mov
mov
andl
insl
jo
ret
jne
mov
add
xchg
and
rcrl
xchg
mov
xchg
sbb
xor
imul
inc
xchg
data16
xchg
sub
jb
adc
lcall
cwtl
cmp
dec
stos
xchg
daa
mov
lea
add
call
xchg
pop
xchg
das
subw
repz
pop
sbb
add
cwtl
adcl
fs
mov
mov
fwait
roll
jne
les
and
mov
lcall
xor
xchg
mov
mov
lea
adc
adcl
into
xchg
mov
popl
xchg
test
sahf
les
and
frstor
adc
popf
xchg
sbb
cltd
xchg
xor
andb
sti
cltd
cmp
cwtl
mov
mov
mov
xchg
mov
xorb
sbbb
cmp
rcrl
cmp
xor
cltd
cmp
pop
pushf
cltd
and
dec
pop
mov
andl
stos
xchg
inc
rorb
xor
orl
cltd
loope
xchg
xchg
fistps
dec
xchg
and
sahf
cltd
adcb
sahf
shrb
lcall
jb
stos
jne
adc
daa
sbb
sbb
jg
lcall
mov
xchg
xchg
leave
mov
xchg
nop
fsubl
or
bound
xchg
scas
adcl
roll
mov
push
ljmp
cmp
test
clc
mov
lea
push
subl
or
xchg
pop
mov
xchg
or
cltd
popf
leave
mov
int
inc
xchg
in
popf
ja
clc
stos
mov
jns
pop
pushf
test
cmpb
mov
loope
mov
mov
push
mov
repnz
sti
pushf
add
sbb
sbb
sbb
push
or
add
jo
mov
sub
sbbb
inc
and
fwait
cwtl
or
mov
mov
lea
pop
cmp
mov
int3
cli
mov
mov
mov
subb
sbb
repnz
xor
sbb
fistps
insl
data16
xchg
adc
adc
adc
adc
adc
popa
adc
adc
adc
adc
adc
adc
out
cmp
cmp
test
jbe
mov
bound
bound
bound
inc
inc
add
lahf
and
outsl
inc
add
or
ja
inc
ret
add
lahf
mov
mov
arpl
add
lahf
shll
incl
dec
add
lahf
mov
mov
cltd
jb
inc
cmp
lea
xchg
and
cwtl
js
adcl
les
les
and
imul
and
sub
bound
xchg
scas
cmp
scas
mov
scas
ss
scas
js
scas
mov
scas
hlt
xchg
scas
xor
scas
aaa
adc
sbb
lds
mov
adc
adc
inc
lcall
mov
and
push
xchg
dec
pushf
in
popf
jb
dec
xor
nop
cmpl
mov
sbb
xchg
test
mov
mov
pushf
or
mov
cwtl
or
mov
xchg
or
mov
nop
jb
and
jne
add
push
sbb
xchg
lds
push
jle
mov
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
jle
dec
ds
out
xchg
pop
xchg
jno
rcrl
lahf
outsb
rcrl
scas
xchg
icebp
dec
xchg
dec
in
xchg
jmp
push
xchg
es
lahf
enter
xlat
aaa
pushf
xchg
fists
popf
data16
mov
mov
lahf
leave
add
cmp
xchg
or
cli
mov
aas
xchg
and
jne
add
fbstp
or
sbb
pop
xchg
jge
inc
or
push
sbb
xchg
mov
adc
xchg
and
adc
adcl
mov
mov
nop
pop
pushf
repz
xchg
adcl
or
mov
fists
xchg
int3
mov
adc
lahf
and
popa
sbbb
xchg
push
add
nop
popl
in
xor
cwtl
dec
mov
adc
lret
lahf
outsb
test
jno
dec
leave
mov
sahf
ja
ja
xchg
and
adc
cmp
sbb
push
xchg
scas
js
out
xor
mov
push
aam
fsts
sbb
inc
xchg
fisttps
mov
adcl
lods
mov
clc
call
inc
je
fisttpl
leave
test
pop
mov
rorl
lcall
sti
dec
add
and
mov
mov
bound
test
aad
in
test
popf
data16
xchg
xchg
enter
fsubrs
dec
adc
mov
xchg
inc
mov
or
clc
incb
mov
into
mov
les
notl
pusha
movsl
outsb
add
xchg
dec
mov
pop
xchg
xchg
imul
xchg
mov
xchg
fldenv
mov
jle,pn
inc
mov
and
aaa
or
aaa
or
or
fwait
push
xchg
cwtl
outsl
adc
pushfw
xor
test
and
and
xchg
cwtl
lea
filds
xchg
les
js
xchg
mov
add
fwait
and
jge
sub
cltd
and
jne
mov
pop
pop
xchg
xorl
pop
and
adc
jb
xchg
or
mov
xchg
push
bound
xor
or
push
jge
inc
mov
push
sub
xchg
filds
xchg
mov
repnz
or
xchg
inc
pushf
insl
cwtl
fwait
pop
xchg
mov
pop
xchg
orl
bound
lea
repnz
lcall
pushf
and
xchg
mov
mov
xlat
fdiv
dec
mov
fwait
into
adcb
arpl
xor
cmp
dec
or
cmpsl
lea
sbb
inc
mov
xchg
mov
mov
mov
mov
test
adc
mov
mov
cltd
dec
sarb
mov
cltd
adc
push
popf
xlat
add
adc
and
mov
cmpsl
test
xlat
mov
adcl
xchg
stos
int3
and
cmp
jnp
les
les
and
je
les
les
and
imul
and
sub
movsb
and
and
cmp
les
mov
push
xchg
xchg
jle
dec
mov
sbb
push
xor
mov
nop
aas
andl
mov
insl
jo
addl
or
lcall
fcomip
adc
pop
fwait
fwait
jge
inc
xchg
mov
mov
filds
sbb
int3
andl
mov
xchg
jns
add
mov
push
rcrl
jge
add
xchg
adcl
xchg
pop
sahf
xor
push
xchg
inc
sub
invd
ja
aas
lcall
rcr
sub
subb
scas
inc
ja
mov
pop
lcall
pop
cmp
add
arpl
cltd
xchg
xorl
out
nop
add
sbb
adc
and
mov
int3
lcall
add
adc
xchg
outsb
mov
bound
xchg
pop
sahf
dec
nop
cmpl
mov
and
xor
mov
xchg
xor
jmp
adcl
and
or
inc
out
pop
ds
adc
mov
pushf
and
jb
xor
lret
leave
aam
sbb
data16
sbb
shll
dec
popf
in
sahf
jb
fwait
je
les
ret
mov
pushf
ja
pop
adcl
sti
xchg
icebp
xchg
cltd
adc
sub
imul
loop
and
loope
xor
mov
popf
sbbl
and
xchg
xchg
xchg
inc
xchg
mov
int3
cmp
leave
mov
mov
xchg
outsb
nop
bound
and
xchg
xchg
sahf
xchg
pop
xchg
cmp
arpl
sbb
mov
xchg
jb
xlat
or
add
mov
or
push
nop
pop
out
mov
mov
dec
fldl
dec
jle
pop
xchg
lcall
cltd
add
xchg
js
xchg
dec
scas
xchg
loope
lcall
inc
push
fistps
fisttps
adcb
mov
push
mov
loope
adcl
push
fistps
or
inc
sub
nop
inc
xchg
jge
loope
sbb
fimuls
xchg
xor
inc
popf
test
mov
popf
or
adc
xchg
pop
mov
pushf
out
popf
xchg
cmpsb
cmp
sahf
xor
cmpl
adc
fwait
and
and
mov
xchg
xchg
xor
mov
jns
sbb
xor
jne
popf
leave
mov
xchg
sbbl
leave
mov
fcomip
insb
mov
sahf
jb
or
xchg
lods
and
and
jne
mov
nop
add
and
mov
or
lcall
hlt
loopne
mov
bnd
sbbl
mov
cmp
out
cwtl
cmp
sahf
dec
mov
xchg
jne
and
xchg
aam
and
mov
mov
cmp
jb
daa
dec
fmuls
test
xchg
repnz
rcrl
jge
mov
lea
add
ds
adc
arpl
xchg
mov
xorb
xchg
xchg
xorl
pop
xchg
repz
icebp
lcall
xchg
or
and
insl
adc
sahf
test
xchg
lahf
xchg
push
xchg
jbe
and
cmpl
push
mov
mov
rcr
inc
xchg
insl
xchg
xor
sahf
xor
lea
inc
mov
mov
mov
mov
xor
xor
mov
mov
or
lcall
ret
sbbl
xor
dec
mov
popf
push
xchg
leave
andl
xor
add
adc
xor
and
jno
stos
enter
jae
xchg
arpl
xchg
mov
popa
xchg
dec
dec
jle
dec
jle
dec
jle
dec
jle
dec
fstps
or
mov
bound
bound
inc
sbbb
int3
mov
ss
fmuls
push
adc
add
lcall
jge
pop
or
cltd
mov
test
and
inc
xor
mov
xchg
mov
mov
fiadds
hlt
popf
inc
dec
pushf
stos
gs
jbe
mov
jns
sbb
xor
stos
mov
inc
xchg
and
pop
mov
and
mov
jno
jg
xchg
and
mov
xchg
cltd
adcb
inc
sahf
js
popf
dec
fmull
lcall
inc
mov
jl
cwtl
jecxz
fmull
mov
cmp
arpl
fwait
sbb
mov
xor
mov
orl
dec
inc
lea
cmp
xchg
sahf
leave
lcall
xchg
add
xchg
xor
xchg
pop
test
mov
xchg
mov
orl
dec
xchg
or
adc
xchg
pop
sahf
and
jne
add
repnz
lcall
repnz
xchg
pop
cltd
xchg
arpl
popa
xchg
xchg
fwait
lcall
nop
dec
ja
loope
xchg
mov
mov
test
out
jo
pop
jge
inc
orl
xor
adc
out
sahf
pop
pushf
mov
out
lahf
icebp
fwait
adcl
push
fistps
xchg
dec
jle
dec
jns
adc
sti
lea
nop
jno
pop
xchg
mov
mov
xchg
push
xchg
xorb
sahf
xchg
repnz
xchg
repnz
push
push
add
xchg
adc
jns
and
cmpl
repz
jb
lock
mov
bound
jb
or
or
mov
and
cwtl
incb
roll
movq
and
mov
dec
mov
xchg
and
adcb
or
addl
fs
pop
xorb
or
lahf
mov
xchg
jbe
pop
orl
sti
xchg
pop
xchg
nop
jmp
add
push
mov
nop
xchg
jns
mov
ficoml
test
repnz
dec
clc
jbe
or
fs
xchg
mov
cwtl
jb
rorl
lahf
mov
pop
sbb
push
mov
mov
mov
pop
ds
mov
sub
sbb
xchg
mov
arpl
popf
lea
pop
dec
sbb
jae
fwait
jmp
and
xchg
mov
fistps
loope
adc
xor
jns
add
jo
and
sahf
sti
aaa
pop
fwait
roll
sahf
stos
enter
cmp
push
and
ljmp
pop
orl
test
mov
mov
or
mov
mov
icebp
data16
sub
adc
popl
and
jb
cwtl
or
push
xchg
jno
scas
pop
fwait
and
or
fwait
xchg
into
adc
lahf
lret
jb
inc
data16
add
into
bound
in
xchg
jb
loopne
jg
pop
jb
inc
loop
mov
inc
cmp
sub
dec
adc
mov
sahf
jns
add
loope
push
enter
and
test
pop
sahf
and
jne
add
xchg
mov
adc
scas
das
mov
add
xlat
cmpb
xchg
aam
push
lcall
adc
mov
in
popf
jecxz
mov
test
mov
pushf
pop
jne
and
jns
add
xchg
cltd
jns
and
cmpl
nop
jne
and
mov
mov
xchg
add
xchg
xchg
adc
xor
mov
dec
pushf
cmpl
cwtl
jne
and
nop
or
lahf
mov
mov
sahf
pop
orb
les
mov
push
xchg
add
mov
jne
and
mov
or
push
scas
and
fcmovu
scas
fwait
xchg
or
test
inc
lcall
and
jne
add
mov
test
inc
mov
popf
repnz
and
popl
push
orl
fwait
and
fwait
sbb
cmp
mov
popl
jne
and
mov
mov
mov
mov
mov
mov
mov
push
or
mov
inc
push
xchg
xchg
int3
incl
fwait
mov
jp
addl
mov
adc
xchg
xchg
pop
orl
sbb
addb
in
dec
or
pop
orl
je
outsl
jns
jmp
sbb
mov
xchg
adc
mov
insl
pop
mov
and
sub
push
int
scas
cltd
xchg
mov
mov
mov
xchg
jne
add
inc
adc
stos
xchg
sub
lahf
orl
push
or
adc
lods
scas
lea
mov
mov
arpl
xchg
and
lea
add
lea
sbb
sbb
sbb
sbb
add
and
adc
and
xchg
int3
decl
xchg
ret
mov
adc
mov
dec
repnz
xchg
outsb
cwtl
orb
sahf
dec
adc
fistps
inc
cwtl
mov
cltd
jne
and
sbb
xchg
subb
mov
cltd
and
fildll
adc
xchg
and
mov
adc
or
xchg
dec
and
jne
add
popf
sahf
jns
and
xchg
xchg
bnd
add
sbb
sbb
pinsrw
inc
mov
fistps
cwtl
xchg
test
dec
ja
and
mov
stc
cmp
lock
push
mov
add
xchg
cld
jmp
sbb
sbb
push
mov
orl
fisttps
test
les
sbb
sbb
sbb
insl
add
nop
inc
add
fisttps
adcb
popf
and
pushf
xor
fwait
lds
nop
xchg
xchg
adc
sarb
dec
std
popf
push
adc
mov
orl
jmp
add
sbb
xchg
adc
xchg
or
outsb
or
lods
cwtl
push
or
scas
mov
push
pop
xchg
xorl
flds
xchg
push
and
xchg
or
sbb
lcall
mov
adc
lcall
outsb
sahf
xor
push
adc
nop
mov
les
xor
aas
dec
mov
mov
nop
sbb
mov
sahf
pop
adc
cltd
testl
xchg
enter
push
xchg
mov
fists
insb
or
lea
or
or
mov
xor
inc
jnp
pop
les
cmp
jbe
mov
int
mov
push
cmpsb
mov
or
frstor
vpsubq
add
cmp
xchg
jae
lock
or
mov
pop
cmpsl
loop
scas
js
dec
xchg
cmpsb
test
test
jmp
mov
push
or
lea
inc
mov
ret
imul
adc
add
pop
mov
mov
inc
dec
jnp
cmc
cli
rclb
cwtl
lahf
inc
lds
xchg
repz
imul
ja
mov
sub
inc
gs
int
mov
xchg
outsl
jo
sbb
mov
inc
insl
jns
mov
cmp
mov
vprotb
or
mov
mov
and
dec
mov
sbb
data16
jae
push
lock
pslld
aaa
pop
mov
leave
push
pusha
sbb
sbb
sub
mov
mov
push
xchg
push
jns
shr
sub
add
dec
inc
nop
hlt
and
das
repz
arpl
push
movsb
nop
cmp
mov
inc
push
int
mov
mov
dec
add
mov
jns
mov
ss
mov
cs
jb
mov
xchg
sbbb
xchg
ret
ret
test
add
fs
out
lret
xchg
mov
pop
in
jns
aaa
sub
sbbl
jb
inc
and
daa
xchg
jmp
sbb
addr16
lahf
shll
inc
xchg
and
mov
inc
xchg
xchg
bound
jno
addr16
add
and
pushf
popa
aad
addr16
inc
adc
push
dec
ja
inc
lret
lahf
mov
and
stos
jno
addr16
and
cwtl
add
lahf
aam
adc
int3
ja
bound
dec
pop
add
lahf
inc
jb
inc
lcall
pop
add
lahf
int
popl
inc
add
data16
inc
addr16
and
pop
add
lahf
adc
inc
push
and
dec
add
mov
and
fwait
add
lahf
pop
jb
inc
dec
and
xchg
pushf
jmp
cli
pop
fisubrl
jmp
mov
inc
mov
ja
inc
cltd
add
lahf
push
jb
inc
xchg
and
ja
inc
mov
lahf
add
inc
push
ja
inc
flds
lahf
xchg
jb
inc
push
and
adc
lahf
lret
jb
loopne
nop
shll
push
add
lahf
lcall
xchg
ja
inc
roll
lahf
or
add
inc
andl
pop
ja
inc
push
add
lahf
shlb
inc
lea
dec
dec
addl
inc
faddl
ja
inc
filds
dec
xchg
dec
or
inc
rolb
lahf
xchg
jb
inc
push
and
mov
push
sub
dec
emms
dec
inc
into
add
lahf
shlb
inc
fwait
and
ja
inc
cmpl
mov
int3
movb
dec
jb
inc
xchg
and
push
ja
inc
cltd
add
lahf
sbb
test
push
lret
ja
inc
dec
add
lahf
xchg
jb
inc
xlat
and
ja
inc
fiadds
lahf
inc
lea
xchg
fadd
mov
mov
test
addr16
add
bound
jg
xchg
mov
dec
inc
addr16
inc
or
jb
jnp
mov
xor
stc
cld
push
test
dec
and
or
pop
xorl
or
insb
cmpsl
xchg
jb
inc
iret
and
xchg
ja
inc
xchg
add
lahf
inc
pop
and
inc
ja
bound
dec
dec
add
lahf
dec
jb
inc
shll
push
ja
inc
filds
lahf
ret
jb
inc
inc
test
add
lahf
into
jb
inc
xchg
and
ja
inc
pusha
add
lahf
xorl
cmpsb
inc
push
lahf
lea
inc
xchg
and
push
ja
inc
lahf
add
lahf
ret
jb
xchg
xchg
inc
in
js
inc
dec
add
lahf
or
and
adc
add
lahf
fnsave
inc
add
inc
inc
mov
inc
iret
add
lahf
shll
inc
xchg
and
pop
add
lahf
mov
and
js
inc
mov
lahf
lea
inc
shll
push
fdivs
inc
faddl
lahf
fbstp
inc
ret
and
xchg
addr16
inc
rolb
lahf
push
jb
inc
adc
int
ja
inc
fadds
lahf
cltd
jb
inc
frstor
test
xchg
test
dec
inc
nop
lahf
push
jb
inc
xlat
and
mov
jb
add
inc
dec
and
ja
inc
adc
xchg
lahf
fdivs
inc
fsubl
lcall
xchg
int3
mov
adc
cwtl
in
xchg
scas
dec
out
dec
addr16
fstps
pusha
fiadds
inc
lahf
xchg
jle
js
mov
icebp
jns
std
or
stos
jb
add
frstor
lret
jb
add
push
jle
mov
adc
cltd
inc
fwait
add
lahf
shll
les
ret
cltd
lahf
and
mov
lcall
and
add
lahf
bound
inc
andb
push
popf
insb
ds
adc
and
pop
xchg
dec
in
sarl
pop
xchg
iret
addr16
push
inc
int
mov
xor
jg
out
aas
mov
iret
stos
add
sbb
aam
and
add
fcompl
int
mov
aam
add
mov
ret
mov
mov
test
mov
push
mov
and
xchg
cmp
cmpsl
cmpsl
lahf
mov
fwait
sbb
jl
int3
clc
jp
mov
lahf
pop
mov
loop
xchg
xchg
pushf
pop
or
mov
stc
mov
test
loop
pop
ret
pop
and
in
loopne
inc
testb
sub
sub
int3
xor
push
insl
cwtl
hlt
es
std
mov
addr16
ret
pop
xchg
mov
push
testl
mov
stc
sbb
ret
lret
jle
sub
adc
lods
pop
inc
cmpsl
pop
cwtl
mov
in
xchg
ret
mov
insl
test
add
imul
pop
pop
inc
negl
loop
clc
and
mov
imul
inc
mov
adc
mov
xor
cmpsl
mov
mov
pop
repz
mov
in
sbb
mov
fstpl
int3
cwtl
dec
iret
xor
arpl
rcrl
mov
adc
or
sbb
in
ja
addb
push
mov
xor
or
out
lret
popf
xchg
sahf
in
inc
sub
sbb
int3
jnp
ret
cmpsb
and
cmp
mov
jl
mov
xor
leave
pushf
mov
jge
sub
push
cwtl
pop
lret
in
xor
mov
mov
jb
mov
lock
or
mov
cwtl
pop
mov
pop
mov
mov
scas
enter
stos
call
push
adc
fdivrs
iret
call
lods
pop
ret
pop
mov
adc
add
clc
outsb
mov
mov
xor
mov
cmp
fisubl
cmpsl
outsl
in
push
mov
lret
decl
pop
aad
cmp
jbe
jmp
push
daa
cmpsl
or
das
bound
mov
push
mov
cmp
mov
xchg
pop
loop
inc
push
jnp
mov
mov
xchg
mov
out
sbb
sub
xchg
clc
out
cld
popf
test
pop
xchg
and
ss
sub
xchg
sbb
cwtl
mov
mov
cwtl
mov
fwait
clc
push
xor
jge
addr16
jl
inc
sbb
mov
mov
push
pop
nop
aas
dec
fs
cmc
ret
mov
mov
cmpsl
lods
aad
int
sub
les
mov
fstpl
sub
sbb
stos
in
xchg
outsl
mov
stc
mov
xor
pop
cmp
mov
cld
inc
mov
or
movb
mov
test
pop
xor
data16
in
inc
out
jmp
mov
adc
mov
imul
cwtl
xor
or
dec
pop
cltd
push
out
das
pop
or
bswap
mov
mov
mov
mov
sub
inc
cwtl
mov
rcll
jns
mov
arpl
cmp
xlat
cld
mov
xor
popa
adc
daa
xchg
xor
pop
sub
xor
cmp
fcmove
xchg
in
shrb
incb
pop
mov
lea
fisubrl
ret
push
mov
addl
sbb
mov
je
push
push
sbb
enter
jno
sti
or
or
push
aam
push
mov
mov
add
push
popf
int
nop
lret
cltd
sbb
ror
out
ficompl
lahf
popf
mov
dec
shrb
mov
jnp
fcmove
arpl
cmp
sbb
cmpsl
call
push
test
mov
aam
cmpsl
inc
fcompl
xor
sub
push
rcr
mov
mov
scas
lcall
lock
popa
int
std
cmp
cwtl
mov
push
je
xor
jge
out
imul
popf
inc
mov
jp
mov
fsubp
sahf
lods
dec
mov
scas
mov
addl
dec
out
imul
mov
dec
and
cmp
int3
or
mov
cwtl
pop
xor
pop
mov
or
fbstp
xchg
mov
test
in
pop
dec
fiaddl
leave
movsb
pop
mov
mov
or
cwtl
test
inc
fisubrl
cmpsb
mov
stc
pop
jmp
adc
imul
in
sti
fsubl
adc
xor
sbb
xchg
jp
jnp
mov
and
mov
pop
sahf
jmp
mov
es
pop
xchg
xorb
sub
dec
bound
sbb
ret
mov
mov
inc
jmp
push
lahf
or
or
push
outsb
push
cmp
sahf
dec
mov
mov
mov
push
lahf
inc
std
push
maxps
dec
enter
inc
add
jb
loopne
mov
mov
mov
pop
mov
adc
cmp
call
arpl
inc
and
push
orl
mov
mov
xor
aas
jg
push
xchg
push
mov
xchg
inc
mov
sbb
mov
lods
inc
outsb
dec
dec
rorb
repz
mov
enter
add
add
scas
js
shlb
xchg
in
lret
popf
in
dec
sub
inc
mov
mov
xchg
popa
mov
xchg
ja
dec
mov
add
cmpsl
push
pop
mov
aas
stos
xchg
and
mov
xor
xchg
test
leave
cmp
xchg
xchg
mov
adc
and
nop
dec
push
jp
sbb
cmpsl
rcll
mov
mov
push
stos
and
negb
rorb
xchg
push
sarl
add
push
pop
sar
xchg
xchg
mov
aaa
scas
in
xor
jo
dec
and
aas
or
out
mov
mov
int3
shrl
sub
sahf
jg
mov
aam
outsl
mov
jnp
jns
push
cmp
add
int
subl
jo
fs
cmp
or
mov
add
imul
shlb
and
mov
and
add
sub
test
jne
inc
jl
fmull
js,pt
mov
jp
int
rcrb
scas
or
sub
fwait
mov
cmp
adc
movsb
clc
cltd
xor
mov
xor
data16
aaa
jecxz
js
fimull
inc
jns
into
push
sbbl
add
adc
call
pop
xchg
sub
cli
push
mov
cmp
cmpsl
aas
sbb
icebp
ss
test
cmp
imul
mov
mov
out
adc
sahf
cli
mov
in
dec
mov
ja
mov
iret
mov
push
jg
pop
nop
nop
movsl
mov
jmp
insb
fwait
pushf
mov
bound
clc
inc
int
in
mov
jmp
sbb
test
test
push
add
add
mov
scas
add
pop
dec
and
cld
xor
adc
hlt
push
pop
into
push
dec
pop
jb
call
bound
cli
cmp
scas
gs
mov
pop
mov
sti
push
data16
out
loop
es
adc
cwtl
dec
ds
xor
fistpl
push
push
jb
push
jecxz
mov
mov
dec
pusha
pop
lock
add
xchg
mov
jp
lcall
push
mov
xchg
loope
sbb
mov
call
jb
inc
sub
gs
mov
pop
add
cld
gs
sti
cs
xchg
mov
ljmp
cmpsl
pop
in
mov
cmp
lds
scas
bound
mov
mov
xchg
mov
outsb
mov
xchg
adc
inc
les
nop
or
hlt
dec
dec
lahf
sbb
sub
xchg
inc
ret
ud2
scas
clc
push
or
sub
fsubr
add
mov
into
xor
ss
sti
add
movsb
gs
sbb
push
orl
cld
loop
pop
cmp
push
jecxz
lret
nop
xor
daa
out
dec
add
mov
mov
xor
adc
and
sahf
enter
cmp
stc
jo
push
push
outsl
mov
xchg
xchg
mov
cld
idivb
push
sahf
shll
out
nop
out
mov
pop
mov
mov
mov
ja
cmc
repz
inc
pop
dec
inc
jmp
jmp
loopne
mov
mov
popf
dec
pop
mov
lcall
or
mov
mov
sbb
dec
mov
shlb
insl
mov
notl
mov
mov
pop
xchg
adc
sub
xor
std
xlat
mov
fdivrl
inc
inc
mov
xor
cmp
lods
mov
push
jo
lock
movsb
mov
ret
or
inc
dec
lods
in
mov
mov
xchg
pusha
das
stos
mov
add
cmc
push
push
add
nop
push
pop
mov
in
movsb
push
andb
xchg
push
mov
ret
add
mov
adc
sub
pushf
sahf
je
sbb
outsl
pop
or
xchg
ja
nop
adcl
mov
push
adc
daa
mov
bound
ret
pop
lret
sub
jl
sbbl
cmpsb
dec
cs
dec
mov
lea
adc
lret
and
std
call
cld
push
dec
ret
fisttpll
xchg
jo
dec
out
mov
daa
push
js
push
sub
cmpsl
adc
repz
push
push
outsb
loop
mov
pop
sti
mov
fwait
mov
rol
mov
icebp
pop
mov
enter
sub
pop
repz
jge
inc
sbb
mov
mov
sub
mov
and
outsb
push
popf
daa
loopne
call
mov
xchg
mov
shrb
aas
push
push
jmp
ret
sbb
mov
sub
leave
dec
mov
scas
arpl
xchg
dec
cmp
cwtl
iret
lcall
and
ret
insb
dec
pusha
cmp
mov
sbb
out
mov
pop
test
mov
mov
cmp
pushf
jae
pop
mov
and
xchg
mov
iret
mov
data16
lea
and
inc
jmp
sub
mov
sbb
mov
pop
mov
inc
mov
mov
sub
in
inc
popf
hlt
dec
orb
mov
mov
pop
sub
sub
xchg
mov
std
test
pop
mov
mov
aaa
pushf
lds
xchg
stos
ret
orl
scas
jp
jecxz
pop
mov
in
mov
mov
adc
xlat
sbb
mov
xchg
sti
xor
xor
sbb
inc
push
mov
into
adc
add
sbb
push
mov
mov
out
inc
ret
mov
push
cwtl
lahf
adc
dec
or
ljmp
stos
mov
and
enter
inc
out
mov
int
xor
ret
test
fcompl
adc
xchg
push
test
out
cli
push
or
adc
jne
mov
mov
add
jnp
rcll
dec
test
lea
lods
jecxz
xor
stc
pop
ficoms
and
xchg
in
data16
ja
fxch
adc
mov
pushf
xchg
and
imul
and
sub
clc
cwtl
jp
loope
lock
arpl
je
mov
xor
pop
sbb
int3
dec
es
mov
cmpl
sub
fsts
sub
and
xorb
mov
xor
add
cmp
addr16
loopne
push
inc
stos
sti
nop
cmpsl
mov
ficoms
fwait
add
loop
lret
cwtl
mov
test
popf
xchg
xor
mov
sbb
movsb
add
imul
icebp
xchg
into
add
pushf
shll
sti
fcompl
fs
mov
cmp
out
filds
cmpsl
testb
out
movsl
mov
ret
sahf
push
dec
hlt
fwait
cmp
dec
or
mov
mov
sbb
call
push
sub
mov
cwtl
sub
scas
cmpsl
ficoml
movsb
push
aad
in
cltd
xor
push
faddl
js
mov
vmaxss
cmc
ja
pop
sbb
pushw
add
xor
daa
xchg
dec
fwait
mov
mov
addr16
push
punpckhbw
dec
daa
mov
sbb
clc
les
mov
pop
ret
and
mov
mov
jmp
movsb
shll
sbb
mov
movb
ss
cmpsl
adc
insl
mov
mov
movsl
rorb
sahf
mov
mov
std
mov
leave
add
xor
mov
movsb
out
je
movsb
dec
cwtl
push
nop
mov
or
fld1
jb
push
nop
mov
loopne
stc
xor
imul
call
mov
loopne
xchg
pop
pop
ret
mov
scas
adc
mov
xor
loopne
nop
pop
bound
sub
sti
mov
mov
add
and
pop
pushf
out
mov
ljmp
push
cmpsl
or
mov
rorb
mov
leave
mov
xor
pop
mov
mov
mov
arpl
aam
xor
in
mov
dec
sub
imul
jae
pushf
pop
xchg
add
dec
inc
paddsw
test
push
push
lret
pop
dec
in
mov
and
and
in
test
sub
lcall
mov
lea
std
push
lahf
mov
add
fldl
mov
stc
mov
xchg
mov
andb
xchg
js
mov
pop
aad
decb
rcrb
mov
movsl
mov
inc
and
loop
adc
sub
scas
shlb
push
es
pop
mov
lcall
arpl
hlt
add
cwtl
mov
mov
mov
mov
cld
jmp
out
pop
adc
lods
cwtl
cltd
sub
out
test
arpl
ljmp
lods
xor
jo
sub
daa
xor
jb
xlat
add
xchg
dec
das
lea
aaa
gs
cwtl
jns
ljmp
xor
test
mov
repnz
enter
cmc
ficomps
cmp
lret
pusha
jno
cmp
xchg
jne
ss
sbb
mov
push
xchg
int
in
xchg
inc
rclb
ret
imul
enter
mov
push
jl
mov
xor
test
lahf
cmp
icebp
inc
nop
outsb
and
cmp
pop
ret
cmp
cwtl
dec
cmc
insb
jo
js
mov
push
sub
pop
imul
push
cmpsl
add
dec
push
mov
mov
mov
push
les
aas
mov
mov
jne
adc
push
push
mov
xchg
mov
es
xchg
lahf
inc
sub
xchg
stc
mov
jb
out
leave
subb
fwait
inc
into
mov
mov
mov
inc
cmp
loop
sbb
jecxz
mov
cmpsb
cmovs
pop
filds
add
pop
jecxz
inc
andb
inc
push
mov
dec
jp
stc
rorb
out
cmpsb
outsb
xchg
cmpsl
sti
lock
in
mov
out
out
nop
mov
pop
decb
dec
adcl
dec
mov
mov
sub
cmc
cmp
ret
jb
mov
dec
mov
push
sbb
sub
jnp
call
adc
ds
sub
add
shll
shlb
ret
insl
cmpsb
push
mov
in
mov
inc
sub
push
sub
sarl
cmp
inc
mov
mov
mov
sbb
mov
testl
loopne
pop
rcll
sub
adc
xchg
movsl
mov
in
iret
xchg
jecxz
push
pushf
xchg
popa
cmp
mov
xchg
gs
sub
pop
push
jnp
cwtl
inc
push
fisttps
sbb
push
pushf
add
divl
pop
and
sub
sub
mov
loopne
sar
jmp
scas
out
in
outsb
roll
pop
xchg
icebp
js
and
es
jl
mov
sub
enter
stc
das
nop
clc
xor
pushf
fisubrs
movsb
sbb
and
or
and
outsb
xorl
fmull
pop
mov
sbb
mov
pop
adc
js
outsb
mov
movsb
fcmovnbe
push
inc
rcrb
ret
or
daa
nop
sti
repnz
mov
test
jp
leave
xor
adc
xchg
fs
mov
add
lods
popa
push
dec
mov
cmpsb
fwait
jb
andl
rcr
nop
fcoms
xchg
lea
imul
xchg
cli
xchg
xchg
sub
outsw
aaa
stos
fimull
mov
dec
cmc
pop
and
or
pop
mov
push
cmpsl
aad
popf
xlat
ret
pushf
jae
imul
mov
nop
mov
lods
cmpsb
dec
mov
aam
mov
js
repnz
test
movl
mov
and
lods
xchg
mov
or
test
add
jp
xchg
int
or
adc
out
mov
sahf
mov
scas
adc
adc
imul
mov
aam
or
jbe
push
jmp
and
test
push
pop
jp
test
mov
cld
push
hlt
jbe
xchg
jecxz
leave
or
mov
imul
mov
je
xchg
pop
mov
fidivrs
dec
and
aaa
jne
sahf
aas
dec
mov
movsb
mov
jge
fistl
lock
cmpsb
rcrb
in
jg
test
jae
and
adcl
push
add
iret
mov
bound
fnstenv
mov
mov
mov
enter
into
outsl
andl
pop
lcall
cmp
mov
insl
mov
lret
ret
adc
push
int
jp
ret
mov
test
or
and
xor
jbe
jecxz
fimuls
nop
jo
orb
push
xchg
mov
cmpsl
jle
rclb
push
lret
xor
fwait
lahf
cmc
mov
dec
push
mov
xchg
pushl
add
orl
icebp
test
mov
dec
scas
dec
xchg
add
imul
sbb
xchg
jmp
int3
fs
fwait
mov
in
ss
insb
xor
sub
shl
or
in
mov
mov
jle
shr
sarl
or
sti
ja
inc
mov
cmpsl
inc
fcmovnbe
xchg
scas
mov
jp
insb
js
push
fimull
into
stc
or
xchg
aam
movl
and
aas
mov
mov
push
and
js
frstor
pushf
mov
mov
insb
out
mov
pop
lret
and
mov
jo
xchg
test
xchg
mov
nop
mov
bound
inc
mov
call
sub
sub
sbb
cwtl
push
jnp
in
mov
adc
mov
cmp
movsl
inc
js
inc
je
mov
mov
sub
addl
mov
mov
cwtl
xchg
and
fdivs
pop
insb
mov
test
mov
stos
push
dec
add
pop
mov
mov
sub
inc
cwtl
jae
shl
xor
mov
movsl
pusha
cmpsl
cli
pop
and
aam
rclb
mov
fisttpll
lcall
xchg
out
imul
mov
test
mov
mov
rorb
jp
ds
fs
sbb
into
sbb
rorl
stos
or
mov
mov
xor
mov
inc
inc
sbb
das
or
mull
mov
xchg
add
jecxz
or
lods
clc
test
ret
push
fsubrl
jnp
fdivrs
ror
lds
scas
cmc
mov
and
popf
sahf
lret
pop
ror
cwtl
sub
mov
jbe
xchg
mov
mov
cmp
pop
jmp
data16
stc
mov
stos
int3
mov
mov
xchg
in
pop
push
es
xchg
dec
shrb
mov
pop
fcoml
scas
loope
pusha
push
xor
push
inc
xchg
push
xor
cli
dec
xchg
push
dec
xchg
xchg
cmc
mov
or
push
into
sub
sub
in
mov
xchg
inc
lret
mov
xchg
in
iret
cld
aas
and
popa
mov
sbb
push
sub
adc
or
xchg
jo
push
cmpsb
mov
pop
cmc
idivb
clc
lods
sub
xor
loopne
cwtl
adc
ret
mov
xchg
xchg
jg
int3
pop
popf
xor
adc
add
adc
adc
ret
nop
ss
sbbl
sub
mov
cltd
push
fsts
outsl
sub
sbb
mov
push
enter
xchg
xchg
mov
pushf
xorb
adc
test
movsb
ret
jg
push
popa
jne
int3
inc
nop
lcall
cmpsl
lods
cltd
xor
mov
adc
add
std
and
leave
sub
xchg
push
bnd
jecxz
or
orb
nop
jbe
mov
jns
cmp
sub
out
mov
dec
inc
jp
fiadds
subl
mov
pop
push
adc
mov
mov
loopne
add
or
sub
movsb
fstp
push
stos
jns
jmp
jge
adc
aas
mov
leave
cmp
in
rol
cwtl
push
imul
cmp
cmc
push
in
les
jp
nop
lret
outsl
jo
xchg
rorl
mov
jp
mov
int
mov
and
push
fwait
cwtl
icebp
cmpsl
daa
jmp
mov
sbb
sbb
xchg
out
scas
mov
pop
and
ljmp
loop
or
cmp
in
int
cwtl
jmp
cmp
cwtl
and
mov
xor
mov
mov
mov
imul
xchg
mov
es
insb
xchg
fcompp
sahf
lret
ja
scas
test
push
rcrb
sbb
cmpsl
pop
mov
push
and
mov
sub
lcall
pop
push
cmp
lods
outsb
mov
mov
sub
testl
lahf
add
mov
stc
pop
or
aam
shrl
sub
mov
pop
pop
out
xor
fisttpl
insl
push
decl
xchg
cmp
xchg
xchg
clc
cmp
mov
add
inc
scas
and
mov
add
dec
call
movl
pop
das
das
and
sbb
popf
aaa
movsb
mov
jb
inc
xor
fidivrs
inc
jne
sbb
mov
sub
jb
int
sbb
mov
or
lret
adc
mov
dec
shl
daa
fst
popl
loopne
cmp
out
jge
fcoms
push
inc
das
cmp
arpl
sub
test
fildl
lock
push
jo
mov
sbbl
xchg
pop
mov
inc
and
xchg
push
rorl
inc
loopne
mov
cmp
lcall
mov
ja
jne
push
icebp
je
insb
jl
testb
ret
ficomps
mov
inc
cwtl
xor
push
mov
jb
dec
inc
lea
subb
test
mov
aaa
pop
lret
sbb
nop
scas
cmp
in
jne
nop
push
pop
dec
addl
test
pop
mov
mov
nop
push
sbb
mov
clc
mov
ljmp
sub
and
add
loop
xor
adc
mov
scas
jmp
lahf
jne
daa
aam
mov
out
filds
mov
jge
movsb
ljmp
std
xchg
pusha
add
or
in
lret
or
dec
lcall
data16
mov
sbb
add
jo
mov
push
icebp
inc
cmp
scas
nop
mov
add
pop
out
push
adc
loopne
adc
hlt
pop
clc
aaa
push
inc
push
sub
ret
sbb
inc
xchg
xchg
sahf
addr16
int3
xchg
adc
repnz
mov
lahf
pushf
or
jl
lock
nop
xchg
xchg
jno
mov
arpl
int3
enter
in
mov
and
dec
mov
cli
push
repz
addr16
pop
and
mov
mov
dec
insl
cmpsl
adc
push
inc
repnz
out
test
mov
cmpsl
mov
popf
fsubr
mov
jne
inc
mov
sahf
jbe
stos
pusha
pop
lcall
leave
in
xchg
aam
mov
push
dec
inc
sbb
stc
mov
lea
cmp
shrb
sbb
dec
mov
nop
add
push
mov
dec
shl
arpl
ss
test
dec
gs
dec
call
lgs
mov
or
pop
fidivs
mov
cmp
or
adc
out
lret
jecxz
add
nop
fs
sub
sti
pop
pushf
sahf
cwtl
addr16
dec
scas
cltd
lds
xchg
fs
nop
inc
pop
xor
pusha
push
and
push
out
enter
dec
xor
mov
dec
imul
rcrb
shlb
inc
push
f2xm1
dec
pushf
cltd
stos
pushf
mov
mov
jae
sbb
jmp
fildl
adc
mov
cld
movsb
and
jbe
jg
loopne
ja
fimull
cmpsb
imul
push
lods
mov
mov
mov
or
dec
mov
and
push
lcall
sahf
mov
cmp
mov
test
and
mov
ljmp
fsubs
cmpsl
xor
into
lods
add
pmuludq
pushf
mov
aad
inc
mov
xor
push
push
cmc
cs
mov
add
sub
cli
cwtl
testb
fidivs
xchg
jne
repnz
out
icebp
xor
iret
frstor
aas
jle
nop
mov
jne
mov
aad
repz
stos
push
push
mov
or
push
sti
adc
stos
jne
test
sub
mov
nop
mov
ja
hlt
sub
cmp
pop
adc
pop
shl
js
movq
ret
sub
int3
fistps
fbstp
mov
dec
and
sbb
or
aad
pop
mov
scas
jne
sub
xor
loop
inc
mov
mov
sti
dec
push
xor
push
xor
mov
push
aaa
sbb
ss
cwtl
cmpsb
xor
pusha
filds
push
mov
inc
xchg
data16
mov
mov
mov
cwtl
pop
dec
xor
andb
loop
mov
pop
jl
test
test
and
mov
add
insb
pop
cmp
stos
pop
mov
cwtl
popa
pop
mov
jnp
or
pop
ret
push
mov
inc
and
sbb
inc
data16
inc
out
mov
mov
sar
insb
push
xlat
gs
enter
adc
mov
scas
mov
lock
in
adc
adc
fistps
xchg
call
scas
fisubs
cmpsb
and
bound
mov
xchg
mov
add
les
mov
sub
popf
outsl
cmpsl
sbb
or
fwait
nop
mov
xor
adc
gs
pushf
icebp
xchg
add
add
pop
mov
mov
jbe
repz
insb
fisttps
pop
push
add
mov
mov
test
xchg
ror
cmc
or
mov
fdivrs
fnstsw
push
lret
jne
or
lahf
lret
popf
add
mov
jo
lds
mov
mov
cmp
sbb
out
mov
subb
jmp
jg
or
add
xchg
sti
nop
or
test
dec
and
lods
roll
sbb
sbb
mov
cwtl
aaa
jge
xchg
cltd
inc
pop
mov
mov
mov
cs
jg
pushf
mov
in
mov
mov
scas
arpl
cs
sbb
dec
mov
adc
imulb
fwait
jns
dec
out
sub
mov
cltd
imul
int
lret
cmpsl
rcr
orb
pop
into
fstpt
push
dec
std
adc
mul
fildll
mov
dec
gs
cmpsb
mov
push
dec
push
das
sbb
mov
imul
sbb
mov
test
push
mov
or
jg
pop
inc
mov
insb
inc
jmp
mov
jnp
pop
mov
cmpb
lds
mov
lcall
pop
inc
add
xor
lods
mov
popa
bound
xor
and
xor
inc
lods
cmp
xor
nop
or
mov
sub
or
pop
subb
xchg
and
jo
dec
dec
cmpsl
mov
dec
movsl
popf
xchg
jmp
das
inc
idiv
movsb
test
mov
sahf
rolb
stos
jnp
pop
stos
fs
mov
push
pop
xchg
outsl
test
dec
mov
js
aam
pop
mov
mov
int3
test
mov
add
orl
mov
cmp
sahf
or
mov
cmp
mov
out
jns
sub
push
inc
subb
mov
push
push
mov
arpl
mov
mov
in
push
sbb
push
mov
xchg
cld
mov
mov
js
fwait
scas
lret
push
aaa
stos
roll
imul
cwtl
fwait
sarb
pop
out
xlat
sahf
test
sub
sub
repz
lret
and
cmp
mov
mov
or
nop
and
cmp
sub
popf
mov
adc
mov
xchg
sub
ret
fisttpl
sub
fsubr
xchg
fcmove
sbb
jp
insl
pop
insb
pop
cwtl
orb
mov
fdivl
push
jmp
or
inc
mov
jle
xchg
lea
rcll
mov
inc
push
outsl
enter
adc
sbb
mov
or
enter
jge
call
ret
sub
sarb
xchg
lods
mov
outsl
lahf
xor
xchg
out
add
arpl
mov
jge
cli
out
pop
jae
lea
sbb
popa
xchg
vpmaddwd
xor
pushf
push
and
jmp
lea
arpl
in
inc
cmp
adc
pop
jge
stc
xchg
imul
dec
dec
icebp
pusha
adc
js
frstor
xor
leave
dec
jmp
adc
lock
sbb
cli
or
jmp
pop
cli
mov
in
aam
loop
ljmp
pop
out
cmp
jbe
ret
jmp
and
jae
lahf
mov
and
clc
and
pushl
lea
jmp
and
add
shl
sbb
cmc
mov
cmp
bt
test
call
insl
adc
gs
aam
fldlg2
add
hlt
div
cli
add
push
sub
addr16
cwtl
gs
scas
data16
enter
nopl
and
xor
or
mov
inc
test
aam
repnz
pop
out
lea
insl
call
shlb
cmc
fcomp
pcmpgtw
push
push
sar
add
add
pop
lea
and
fldln2
std
mov
je
dec
pushf
popl
call
mov
jmp
add
sar
pushf
inc
movzbl
test
cmc
pushf
xor
mov
dec
push
pushl
push
pushf
dec
jmp
movzbw
mov
bswap
mov
jmp
rol
mov
pushf
shr
mov
and
add
setp
setp
mov
pusha
call
mov
pusha
mov
push
mov
pop
repz
popl
not
pushl
call
movzbl
mov
lea
pusha
not
pop
mov
lea
repz
popl
bswap
pushf
pop
mov
inc
mov
movsbw
mov
movzbl
xchg
mov
xchg
mov
mov
pushf
pusha
pushl
popl
pushl
bswap
mov
movl
pushf
mov
pop
call
call
lea
push
push
pusha
mov
lea
jmp
pushf
dec
rol
cmc
inc
bswap
xadd
xor
sar
rol
lea
stc
sar
sub
mov
pusha
lea
push
pusha
pushf
mov
lea
jmp
call
mov
sete
cwtl
call
lea
mov
pusha
lea
jmp
mov
pusha
pushf
movb
pushf
popl
mov
pushl
popl
movb
movw
mov
lea
jmp
dec
rcl
rcl
bts
sets
ror
neg
movsbw
call
pushf
mov
pushl
lea
jmp
decl
movb
jmp
pushf
sar
cmc
mov
bt
cmp
sub
mov
mov
clc
call
mov
call
mov
pushf
call
mov
pusha
mov
call
mov
mov
lea
jle
pushf
jmp
adc
xor
pushl
cmp
movzbw
xadd
lea
jmp
lea
movzbl
mov
movsbw
pop
mov
dec
mov
pushl
popl
call
pushf
popl
pusha
pushl
popl
pushf
pushf
lea
jmp
mov
inc
not
inc
lea
mov
mov
movzbw
mov
lea
movzbw
jmp
pusha
mov
pusha
repz
popl
jmp
pushf
stc
sub
lea
jle
mov
pushf
mov
pushf
mov
lea
jmp
mov
jmp
call
cmp
add
movzbl
inc
sbb
cmc
neg
bsr
shl
rol
sub
pop
jmp
add
pushf
pusha
pushl
pushf
popl
pushf
pushl
popl
mov
mov
mov
lea
jmp
xchg
movl
xchg
dec
rcr
movsbw
cmc
bswap
movzbw
test
xor
jmp
shld
pushf
mov
mov
call
push
mov
cmc
mov
cmc
sub
stc
movw
bt
movw
add
pushf
pushf
popl
mov
pushl
popl
pusha
movb
lea
jmp
mov
pusha
pusha
call
pushf
call
push
lea
cld
xchg
pushf
movzbw
lea
call
bswap
dec
xchg
pushf
push
mov
bswap
not
mov
lea
mov
jmp
not
clc
stc
pushf
sub
cmc
movb
and
movl
movw
call
mov
mov
jmp
neg
shr
sar
adc
stc
sub
pusha
pop
push
dec
bsf
sar
sub
btc
bsf
ror
shl
movzbl
sub
bswap
neg
bsr
mov
movb
cmc
pushl
cmc
add
jmp
bsr
rdtsc
rdtsc
test
bt
sub
call
call
movl
pushf
push
mov
not
dec
shl
bswap
bsr
call
adc
movw
pushf
lea
clc
shl
and
sub
mov
movzbw
push
lea
mov
pushf
lea
jmp
movzbl
movl
inc
mov
jmp
call
movzbw
pusha
lea
repz
popl
pushl
movw
push
mov
call
call
xor
rcr
sbb
lea
pop
sub
call
movsbl
mov
call
mov
mov
push
bswap
mov
pushf
bswap
mov
movl
bswap
pushl
popl
push
pop
xchg
movsbw
movl
inc
mov
mov
movw
dec
bswap
dec
sar
bswap
cmc
xor
call
pushf
add
clc
lea
jg
xor
pusha
push
pushf
lea
pushl
rol
clc
add
movb
cmp
pushf
add
call
mov
movb
pusha
pushf
popl
jmp
push
mov
push
movl
pushf
pushf
popl
pushf
lea
jo
popl
pusha
mov
lea
jmp
bt
rol
call
jae
clc
clc
stc
and
call
bsr
jmp
pushf
mov
lea
mov
movzbl
xchg
mov
pushf
repz
popl
movzbl
mov
dec
movsbw
dec
xchg
inc
mov
not
mov
pushf
lea
lea
call
xor
jmp
mov
call
mov
mov
movb
movw
mov
lea
jmp
add
cmp
jmp
mov
pushf
pushf
pushl
pushf
lea
jmp
mov
clc
test
lea
bt
cmc
mov
sub
jmp
push
call
jns
pushf
pushl
popl
pusha
lea
jmp
call
mov
call
mov
not
lea
pusha
movsbl
mov
movsbw
mov
lea
lea
repz
popl
inc
lea
call
dec
rol
and
test
pop
bswap
lea
btr
xor
bsr
movzbw
mov
not
mov
neg
call
bswap
mov
call
xor
not
bsf
lea
rcr
neg
jmp
movw
pusha
push
mov
push
jmp
mov
pushf
pushl
ret
push
pop
jmp
mov
jmp
call
sub
pusha
jmp
test
sub
pusha
push
mov
pushf
push
lea
jmp
push
movsbl
dec
not
mov
call
push
ja
lea
dec
push
bswap
pushl
lea
movzbl
xchg
xchg
push
pushf
xchg
bswap
mov
pusha
movsbw
dec
not
jmp
not
lea
jge
pusha
pushf
and
pushf
pushf
lea
jle
mov
pushf
pushf
popl
pusha
pushl
popl
pushf
mov
lea
jmp
clc
bt
sub
mov
pusha
jmp
pushf
lea
jle
dec
rcl
ror
xor
mov
xor
xor
and
ror
mov
test
lea
pusha
add
pushf
jmp
call
pusha
pusha
pushf
mov
movb
pushf
lea
jmp
cmp
stc
jmp
cmc
stc
pusha
xor
jmp
not
push
pop
mov
pushf
call
test
call
mov
xchg
xchg
not
not
repz
popl
pusha
xchg
bswap
mov
jmp
call
movzbw
inc
dec
rol
bts
movsbl
and
clc
bsr
mov
cmc
cmc
add
jmp
neg
aad
mov
neg
bsf
mov
jmp
bsf
pusha
mov
stc
bsf
cmc
sub
jmp
movl
movsbl
inc
bswap
mov
mov
dec
shl
neg
bswap
pusha
dec
xor
shld
neg
ror
btc
lea
shld
sub
pusha
jmp
add
pushl
pushl
mov
push
pusha
pushf
movw
lea
jmp
call
mov
push
lea
jmp
mov
pusha
dec
movzbw
bswap
bsf
bts
xor
bt
bsf
lea
pop
sub
pusha
lea
movzbw
lea
mov
movw
pushf
lea
jmp
pop
movzbw
mov
push
pushf
pusha
pushl
lea
jmp
pushl
pushf
popl
call
mov
push
mov
mov
pushl
ret
call
shl
shl
shl
mov
sar
movsbw
mov
push
lea
jg
stc
add
jmp
lea
pushf
pushl
pushl
pushf
lea
jmp
pushf
pusha
mov
call
mov
mov
mov
lea
jmp
pushf
pop
pushl
inc
jns
inc
push
pusha
inc
mov
xchg
pop
dec
rcl
jmp
sub
pushf
test
test
add
clc
pushf
sub
jmp
movl
call
sub
pusha
call
pushl
popl
mov
pushf
lea
jmp
jmp
mov
pushl
mov
mov
movw
lea
jmp
test
and
bts
not
test
neg
inc
movzbw
call
mov
pop
mov
repz
pushf
dec
push
mov
xchg
xchg
call
mov
movsbw
movzbw
push
repz
popl
movzbw
movzbw
mov
call
mov
push
mov
lea
jmp
movb
stc
add
jmp
mov
push
push
push
pushf
lea
jmp
mov
pusha
push
pushf
popl
push
pushf
pushl
popl
pushf
pushf
push
movb
lea
jmp
pushl
mov
call
movsbw
xchg
jmp
call
dec
xor
stc
or
btr
bswap
movl
xor
jmp
movb
mov
pusha
push
mov
mov
pusha
mov
call
jmp
pushl
popl
jnp
add
cmc
jmp
shrd
cmc
movzww
pusha
clc
xchg
push
pusha
movw
mov
add
clc
xor
jmp
push
btc
mov
test
call
clc
shl
bts
sub
lea
push
movzbw
push
mov
bswap
pushf
movsbl
jmp
rol
xor
movsbw
bsf
mov
pushf
sar
add
push
test
sub
sub
neg
shrd
neg
bsr
mov
cmp
jmp
mov
pushf
pusha
lea
jmp
jmp
push
pushf
popl
call
jmp
mov
pop
lea
pushf
mov
pop
movsbl
repz
popl
not
movw
pop
mov
lea
movzbw
pusha
xchg
dec
bswap
xchg
mov
xchg
inc
mov
pushf
pushl
popl
pop
movl
inc
mov
xchg
mov
dec
adc
pusha
bsf
bswap
btc
stc
xor
lea
lea
bswap
sub
lea
mov
pusha
lea
jmp
pusha
pushf
mov
push
push
pushl
call
cmp
add
pushf
push
movb
pushf
mov
push
movl
pushf
pushl
ret
inc
pushf
jmp
call
lea
xchg
mov
movzbw
pushf
call
mov
movsbw
push
pushl
popl
lea
movl
xchg
xchg
mov
xchg
dec
movsbw
pop
dec
shrd
shrd
adc
bswap
shld
xor
cmc
shl
or
lea
and
sub
call
mov
pushl
popl
pushf
pushf
lea
jmp
xchg
pop
pop
jmp
mov
pushf
pusha
lea
jmp
pushl
popl
movl
mov
lea
jmp
movsbl
pusha
xchg
pushl
pusha
xchg
mov
call
jmp
mov
push
pushl
popl
call
jmp
pusha
pushf
call
call
jmp
jmp
pushl
pushl
mov
pushf
push
mov
pusha
push
pushl
pushl
lea
jmp
pushf
mov
movw
jmp
movl
jmp
add
jmp
pushf
jmp
movl
xchg
pop
lea
pushf
mov
xchg
xchg
movw
lea
dec
shrd
btc
shl
bts
bswap
cmc
movzbw
sub
movsbw
xor
sub
clc
ror
lea
test
pushf
sub
mov
call
mov
pushf
bt
test
clc
sub
stc
shr
jmp
cmc
stc
mov
cmp
or
jmp
inc
bswap
mov
push
mov
pop
mov
movsbl
lea
bswap
movw
pushl
popl
jmp
call
push
bswap
mov
mov
inc
bswap
not
push
mov
pushl
movw
pushl
movzbw
pushl
popl
dec
mov
call
mov
clc
bt
push
movb
add
mov
lea
jmp
call
call
dec
pushl
popl
movsbl
movl
bswap
call
lea
mov
mov
mov
lea
jmp
pusha
mov
call
aas
ror
mov
ror
or
rol
sbb
mov
cmc
add
pushf
pushf
mov
pusha
lea
jmp
sbb
bswap
bts
xor
bsr
lea
and
call
pusha
dec
bswap
pushl
popl
dec
bswap
call
cbtw
cmp
sub
jge
bt
cwtl
push
sub
push
pushf
mov
pushf
lea
jmp
shl
btc
lea
and
add
bt
bswap
sub
push
bswap
bswap
pop
mov
pusha
pushf
pushf
lea
jmp
pop
xchg
inc
mov
jmp
das
or
lahf
mov
pushf
clc
clc
cmp
bswap
stc
mov
cmc
xor
stc
stc
test
bt
neg
clc
sub
call
pusha
pushf
pushl
lea
mov
push
lea
jmp
mov
inc
movsbw
movsbw
not
mov
call
not
call
movl
inc
call
mov
push
push
mov
bswap
jmp
push
mov
pusha
pushl
movsbw
xchg
call
pushl
popl
push
movzbl
movl
pushf
inc
mov
mov
movzbw
inc
call
movl
lea
pop
movw
jmp
lea
jl
pushf
jmp
ror
stc
xor
call
push
movw
lea
je
jmp
pushf
stc
xchg
call
jg
pushf
push
mov
movb
xchg
pusha
push
mov
mov
pusha
mov
not
push
lea
jmp
lea
mov
bswap
repz
popl
jmp
bswap
dec
jmp
cmpl
pusha
push
mov
call
xchg
mov
pushf
call
test
test
stc
test
and
jmp
cmc
call
pushl
call
pop
movl
jmp
mov
pusha
mov
lea
jmp
push
movw
pushl
mov
mov
push
push
lea
jmp
ror
mov
or
sub
inc
add
bsf
not
movsbl
neg
clc
add
sub
pusha
dec
adc
pop
bsf
movsbw
sub
add
rcl
movzbl
pushf
mov
cmp
call
pushf
setg
movl
lea
jmp
cmc
lea
pushf
movw
jmp
jmp
pop
mov
xchg
jmp
pusha
pushf
xchg
pop
movsbw
call
jmp
test
movzbl
neg
add
push
inc
pop
bts
cmc
ror
mov
xor
inc
setns
rol
add
neg
btc
lea
movsbw
stc
shld
movzbl
call
pusha
call
not
mov
mov
pop
mov
jmp
neg
movsbl
bswap
inc
mov
call
cmp
push
btr
mov
and
movsbw
xor
setbe
not
pushf
dec
rcr
clc
call
test
jmp
mov
movzbw
push
movsbl
dec
mov
pushl
jmp
call
add
test
jmp
mov
push
pushl
popl
mov
pushf
mov
movb
lea
jmp
mov
bswap
dec
mov
pushf
pushl
popl
inc
pushf
mov
bswap
movl
push
dec
call
pop
mov
movsbl
not
movsbw
push
lea
pushf
pusha
movzbl
pushl
popl
movsbw
call
rep
bt
rcl
cmp
mov
btc
shl
dec
bsr
mov
bt
bt
test
pushl
popf
movb
lea
jmp
mov
mov
jmp
mov
push
cld
cld
call
bt
pushf
rol
pushf
xor
pushf
clc
stc
sub
jmp
bt
shl
test
bt
shr
pusha
test
pusha
or
cmp
stc
push
xor
pushf
pushl
call
divl
call
call
jmp
pusha
pushf
pushl
popl
push
lea
jmp
call
push
mov
pusha
push
pushf
pushf
lea
jmp
call
mov
pusha
xchg
pushf
mov
call
pusha
mov
push
mov
movb
call
pushf
inc
xor
rcl
ror
xor
and
pop
test
ror
btc
mov
clc
push
cmc
sub
pusha
call
push
pushl
popl
pusha
pushf
lea
jmp
xchg
pushf
call
lea
pushf
pusha
pushf
mov
lea
jmp
movw
xchg
call
not
push
mov
movsbw
push
jmp
mov
not
lea
jp
push
dec
or
movsbw
xchg
bswap
shrd
and
cmc
pop
xor
cmc
movsbl
mov
clc
sar
sub
mov
mov
and
cmp
bts
mov
xor
btr
pushf
rcl
add
shld
call
call
mov
lea
repz
popl
not
bswap
mov
call
xchg
bswap
call
call
mov
xchg
call
xor
xor
btr
mov
cmc
lea
clc
test
call
dec
bswap
dec
cmp
neg
bswap
not
xor
adc
neg
clc
shl
lea
bt
inc
sub
pushf
movzbw
lea
mov
pusha
movw
lea
jmp
jmp
not
sbb
or
xchg
mov
stc
mov
call
clc
pushf
cmp
jmp
xor
bswap
bts
rcr
cmc
rol
jmp
xchg
lea
mov
movzbw
movsbw
repz
popl
pushf
mov
dec
mov
push
dec
pop
mov
lea
jmp
shld
shld
movzbl
sbb
pushf
jmp
xor
sar
bswap
neg
dec
lea
neg
sub
neg
sub
lea
mov
pushf
pushf
mov
lea
jmp
jmp
bswap
mov
bswap
bswap
mov
pop
seta
pushl
popl
movsbw
movl
not
movsbw
not
push
mov
movzbl
dec
clc
lea
bswap
setns
bt
xor
push
neg
test
sets
lea
xadd
add
sub
and
not
shrd
mov
setno
mov
cmc
add
rol
jmp
movb
mov
pusha
pushf
pushf
mov
lea
jmp
push
mov
pushf
pushf
mov
push
movsbw
xchg
pushf
lea
jge
push
movsbw
xchg
movsbw
pusha
call
push
not
mov
xchg
pushf
mov
mov
pushf
lea
je
pusha
pushl
popl
jmp
mov
pushl
call
jmp
aas
mov
jmp
mov
movsbw
jmp
xchg
not
movzbw
pusha
mov
mov
mov
call
pushf
mov
call
movsbw
mov
jmp
call
pushf
mov
jmp
lea
pusha
pushf
lea
jmp
repz
popl
dec
call
shr
rol
pushf
shl
mov
jmp
ror
movb
pusha
cmp
xor
bt
pushf
movb
xor
mov
cmp
pushl
mov
call
xchg
movzbl
xchg
lea
push
mov
xchg
repz
call
movzbw
call
cmc
test
stc
add
stc
popf
pushf
push
pushf
lea
jmp
sub
pushf
call
jmp
not
mov
dec
mov
cmp
clc
sub
bt
shl
call
rol
mov
call
movl
xchg
push
mov
inc
pushf
mov
not
dec
shrd
jmp
call
pusha
mov
lahf
mov
shl
sbb
shl
rol
mov
shl
mov
cmc
add
bt
call
ror
btc
bswap
bt
bsf
test
jmp
add
sub
setl
and
sete
xchg
mov
btc
sub
bt
add
add
shrd
neg
setge
clc
cmc
clc
sub
push
pusha
dec
not
xor
neg
sub
shr
ror
or
movzbl
and
mov
jmp
pushf
pusha
mov
jmp
lea
mov
pushf
dec
btr
or
shrd
pushf
bswap
bswap
dec
xor
pop
add
mov
lea
bsf
rcr
cmp
sub
not
not
lea
mov
push
pushf
lea
jmp
call
pushl
not
movl
inc
mov
inc
pushf
dec
bswap
sub
bt
bswap
rol
cmc
rcr
xor
add
push
lea
neg
bts
mov
sub
mov
movzbw
push
lea
pushf
pushf
lea
jmp
mov
push
pushf
mov
lea
jmp
movl
pushf
movsbw
xchg
pushf
mov
mov
dec
bts
cmp
bswap
xadd
and
push
rcr
xor
movsbw
lea
pop
movsbl
sub
push
lea
bswap
lea
mov
push
lea
jmp
call
movzbw
test
aam
shld
mov
inc
mov
neg
mov
stc
test
add
pushf
test
shrd
movb
push
mov
jmp
jmp
pusha
pushl
mov
call
dec
call
pushf
mov
jmp
movb
pushf
mov
pushf
lea
jmp
pusha
call
cmc
cmc
mov
stc
sub
cmp
test
shl
pusha
call
xchg
movl
movzbw
movsbw
mov
mov
movw
call
bsf
sbb
mov
seta
mov
bt
stc
test
pusha
add
movb
pushl
lea
jns
mov
pushf
movb
lea
jmp
cmp
pushl
add
pusha
lea
jmp
jmp
popf
pushf
pusha
lea
jmp
lea
ja
push
pushl
mov
pushf
jmp
lea
ja
test
mov
cmp
bt
shl
not
lea
shr
btc
or
sub
bsf
adc
lea
sar
and
call
lea
jge
xchg
movsbw
push
bswap
movsbw
pushl
lea
dec
push
lea
not
mov
inc
pusha
movw
dec
bsr
bsr
bswap
test
stc
stc
xor
bsf
bt
adc
lea
btr
sub
pushf
pusha
bswap
lea
pusha
push
push
pushf
lea
jmp
call
mov
push
mov
pushf
pushf
pushf
pushl
ret
lea
mov
movsbl
pushl
xchg
push
inc
push
pop
mov
dec
bswap
dec
bts
movzbl
cmp
movsbw
bswap
rol
btc
xor
push
lea
neg
shl
test
call
cmc
movb
movb
sub
jmp
mov
jmp
pushf
pushl
popl
pushf
push
pusha
lea
jmp
lea
mov
movb
push
push
lea
jmp
movb
add
pushf
mov
call
movl
inc
mov
stc
clc
ror
stc
bt
xor
stc
stc
bt
bt
add
call
call
mov
pushf
lea
jmp
jmp
pusha
mov
pushf
pushf
popl
call
mov
lea
mov
mov
jmp
lea
movsbw
cmp
lea
pusha
cmc
cmp
call
xor
jmp
mov
mov
push
xchg
bswap
inc
mov
inc
mov
pushf
pushl
popl
movsbw
movl
dec
xchg
pushf
mov
movw
dec
sbb
lea
stc
bswap
sar
xadd
bsr
xor
clc
bsr
lea
shrd
xor
rcl
sub
pushf
push
lea
movb
pushf
push
pusha
lea
jmp
mov
call
mov
movzbw
lea
dec
rcl
rcl
bswap
rol
movsbl
xor
or
lea
neg
sub
pusha
call
add
jmp
push
bswap
xchg
mov
sar
mov
call
xchg
pusha
xchg
call
call
pushf
add
movb
call
clc
pusha
shl
mov
cmc
add
pushf
movw
mov
movl
inc
bt
pusha
cmc
jmp
call
mov
push
push
lea
jmp
add
jmp
sub
btc
movzww
call
bt
and
call
dec
sub
shr
shl
bswap
cmp
shld
bsf
xor
movzbw
lea
mov
ror
sub
mov
pusha
lea
pusha
lea
jmp
sub
or
cmp
btr
movzbl
btr
and
btr
mov
call
mov
call
pushf
mov
xchg
jmp
push
mov
jmp
not
mov
not
movsbw
jmp
sar
clc
bswap
xchg
xor
bsf
xor
lea
sbb
lea
sub
movsbw
pusha
pusha
movsbl
lea
pushf
pushf
movw
push
lea
jmp
cwtl
clc
mov
sub
call
call
not
lea
movw
push
lea
jmp
push
pushf
mov
pushf
call
dec
sbb
or
rol
bswap
btr
adc
rol
xor
pop
bts
lea
pop
sub
jmp
pushf
call
shr
mov
clc
mov
pushl
add
jmp
pusha
call
aaa
mov
cmp
add
push
jmp
inc
seta
rol
neg
mov
cmc
pushf
cmc
cmc
lea
stc
pusha
add
push
pushf
call
push
pushl
popl
pusha
pushl
push
pushl
lea
jmp
mov
push
pushf
pushf
push
lea
jmp
pushl
push
pushl
popl
movb
lea
jmp
lea
dec
sbb
not
bswap
rcr
xchg
dec
add
xor
rol
shrd
movsbl
lea
stc
xor
bsr
sar
sub
pushf
jmp
into
or
mov
es
into
or
mov
cld
mov
into
or
mov
add
stc
xor
int3
sub
push
or
sub
xchg
mov
mov
add
mov
add
aam
add
scas
and
cmpsb
add
sub
jle
mov
into
or
mov
add
mov
add
aam
add
xchg
mov
mov
push
mov
into
or
mov
or
adc
mov
or
mov
xor
mov
or
and
push
mov
aaa
sub
lds
mov
stc
es
stc
xor
scas
and
or
aam
and
mov
mov
lahf
and
and
push
mov
xchg
mov
mov
sub
faddl
mov
pop
sbb
or
mov
xchg
decb
aam
adc
xchg
mov
stc
es
push
mov
push
mov
stc
xor
cs
mov
daa
sbb
faddl
mov
mov
mov
pop
add
sub
add
sub
or
aam
sub
aam
es
pop
sbb
imul
aam
sbb
hlt
cld
mov
imul
aam
push
mov
xchg
mov
or
aam
and
xor
mov
and
xor
sub
daa
sbb
faddl
mov
push
mov
mov
and
lds
mov
push
and
mov
mov
sbb
mov
loopne
mov
mov
mov
scas
and
and
sub
mov
mov
xchg
decb
aam
adc
lds
mov
faddl
mov
jp
mov
mov
es
scas
and
mov
mov
mov
sbb
faddl
mov
pop
es
loopne
mov
mov
mov
mov
decb
aam
sbb
push
or
mov
add
jp
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
aam
sub
daa
sbb
add
push
mov
mov
mov
lds
mov
inc
add
and
decl
aam
adc
loopne
mov
push
mov
mov
mov
mov
or
int3
sub
adc
xchg
mov
mov
sub
aam
add
aam
es
aaa
sub
push
mov
jp
mov
fwait
push
mov
or
mov
mov
add
or
mov
lds
mov
push
mov
xor
mov
or
mov
lds
mov
adc
jle
mov
imul
aam
adc
lahf
and
inc
add
xor
mov
add
es
sbb
mov
mov
mov
pop
add
faddl
mov
pop
sbb
sbb
mov
stc
btr
btr
bswap
mov
neg
not
not
mov
bt
pushf
test
cmp
add
push
mov
pusha
push
pushf
lea
jmp
push
call
not
pushf
movsbw
rcr
notl
bswap
rcr
mov
bt
sub
test
bt
clc
and
movb
pusha
pushf
popl
pusha
jmp
mov
jmp
jmp
mov
call
pusha
pusha
jmp
shr
mov
mov
inc
sar
shl
shl
mov
bt
cmp
stc
pushf
sub
push
clc
shl
mov
call
movzbl
repz
popl
pop
not
pushf
mov
lea
jbe
not
not
push
jmp
call
dec
push
mov
pusha
pushl
popl
pushl
jmp
jmp
call
add
pushf
mov
pushf
pushl
pusha
mov
lea
jmp
mov
inc
push
dec
not
dec
stc
cmc
bswap
rol
xchg
xor
neg
lea
not
pushf
sub
movzbl
pusha
lea
pushf
pushf
pushf
pushf
lea
jmp
xchg
pusha
mov
xchg
movsbw
pushf
pop
repz
popl
pop
movsbw
mov
pushl
mov
push
movzbw
pop
pushl
mov
inc
lea
mov
bswap
lea
pushl
popl
jmp
pusha
push
pusha
lea
jae
mov
pusha
lea
jmp
mov
push
lea
jmp
call
push
pushl
popl
pusha
lea
jmp
dec
jmp
lea
xchg
inc
mov
not
push
jmp
mov
movsbw
movzbw
xchg
push
lea
call
mov
movsbw
jmp
pusha
push
pushl
popl
push
pushf
lea
jmp
call
jmp
call
cmp
pushf
pusha
lea
jne
add
bswap
xorb
pushf
lea
bswap
mov
pusha
pushl
push
lea
jmp
mov
mov
push
movzbw
mov
jmp
clc
mov
jmp
pushf
push
mov
movb
push
mov
push
lea
jmp
jmp
cmp
push
pushf
call
cmp
cwtl
clc
sub
call
repz
popl
lea
lea
mov
pusha
mov
inc
xchg
xchg
mov
mov
xchg
pushf
movsbw
mov
not
movsbl
pop
inc
pushl
popl
call
bsf
mov
aam
cld
mov
test
not
shl
pop
rcr
not
sar
rcr
pop
neg
cmp
pop
bswap
pop
shrd
adc
xor
shl
pop
mov
std
xor
pop
bswap
mov
cmp
neg
popf
mov
not
pop
pusha
bswap
not
pop
mov
jmp
not
call
mov
call
xor
stc
rol
call
pusha
pushf
pushf
popl
call
call
movsbw
movl
inc
pusha
lea
mov
movsbl
jmp
seta
call
bts
bsf
sub
inc
mov
bsf
setle
or
rol
mov
sbb
or
adc
call
lea
jno
push
push
mov
call
mov
bt
call
movzbw
ror
adc
movsbw
and
xor
movsbw
movsbw
bswap
adc
add
test
setae
btr
xor
pusha
cmp
sbb
mov
cmc
add
movb
call
bswap
mov
movzbl
pop
mov
dec
call
push
jmp
push
mov
pushf
mov
pusha
pusha
call
pushf
jmp
mov
jmp
add
clc
clc
clc
mov
add
pushf
call
pusha
sub
pushf
movw
mov
shr
jmp
mov
inc
mov
mov
jmp
pushf
pusha
mov
lea
ja
push
jmp
jmp
movl
mov
pushf
pusha
lea
jmp
mov
dec
xadd
xadd
bswap
push
inc
mov
clc
xor
movl
bt
lea
neg
sub
stc
call
mov
pushf
mov
pushf
lea
jmp
stc
cmp
bt
pushf
cwtl
test
cmc
jmp
jmp
mov
pop
movzbw
xchg
repz
popl
movzbw
mov
jmp
lea
cpuid
bt
sub
call
jmp
setne
bts
shl
xadd
mov
test
add
mov
push
push
push
mov
pusha
jmp
lea
cmc
inc
sub
movzbw
lea
pushf
pusha
lea
push
movb
push
movb
lea
jmp
mov
lea
jne
pusha
pushl
push
call
call
movb
lea
jne
pushf
jmp
pushl
popl
call
movzbl
mov
pushf
add
or
mov
bt
sub
ror
cmp
add
jmp
push
pusha
push
call
mov
pushf
movb
call
push
dec
mov
call
mov
pushl
popl
mov
push
mov
lea
jmp
shl
cmp
pop
sub
call
movsbw
bswap
movsbl
pushl
not
push
dec
mov
jmp
jmp
jmp
pushf
jmp
mov
jmp
xor
test
clc
xchg
clc
jmp
mov
pushf
popl
call
adc
mov
cmp
test
add
pushf
pushf
popl
call
jmp
shr
push
push
pushf
mov
movw
pushf
pushf
lea
jle
pushf
call
lea
pushf
jmp
mov
jmp
pusha
push
mov
mov
mov
not
lea
pusha
movsbw
mov
push
bswap
not
jmp
pushl
popl
pushl
mov
lea
jmp
movzbw
call
add
mov
movb
jmp
add
sub
mov
not
mov
pusha
lea
jmp
push
pusha
pushf
mov
call
pushf
xchg
pushf
push
movl
movw
call
call
pusha
call
not
not
push
movsbl
mov
not
not
repz
jmp
sub
pushf
pushf
pusha
mov
pushf
pushf
lea
jmp
push
mov
xchg
not
pushf
pushf
mov
call
mov
mov
mov
push
pushf
lea
jmp
lea
jns
repz
setbe
push
jmp
push
jmp
mov
movsbl
lea
mov
push
call
movsbw
jmp
mov
pushf
dec
cmc
clc
pushf
ror
cmc
cmc
cmp
jmp
mov
mov
mov
pushl
popl
jmp
rol
cmp
add
jmp
jmp
aam
shrd
mov
shl
not
mov
jmp
pushf
mov
mov
pushl
ret
pusha
pusha
pushf
popl
push
pushl
popl
push
pushf
mov
lea
jmp
mov
pusha
mov
mov
pushf
pushl
ret
lea
jne
test
push
pushf
sub
call
push
pushl
pusha
mov
pushl
jmp
pusha
lea
jge
push
mov
jmp
repz
popl
push
jmp
jmp
mov
not
inc
pushf
xchg
mov
bswap
not
mov
movw
not
mov
bswap
pushl
popl
lea
mov
bswap
movl
pop
lea
jns
mov
not
not
xchg
dec
call
movzbw
movzbw
inc
shr
mov
sbb
rcr
bsf
call
push
xchg
push
bswap
mov
not
mov
mov
xchg
pop
xchg
pushf
repz
popl
push
xchg
xchg
mov
movsbw
movsbl
push
pushf
mov
bswap
call
movw
pusha
movb
mov
pushf
pushf
pushf
lea
jmp
pushf
mov
mov
pushl
pop
mov
mov
push
movzbw
jmp
pushf
mov
pushf
pusha
pushl
lea
jmp
movb
pushf
popl
pushl
pushl
popl
push
pushl
push
pushf
lea
jmp
add
add
pushl
popl
dec
jmp
not
repz
popl
call
push
bswap
not
lea
mov
mov
call
mov
call
dec
movsbw
rol
bt
xchg
bswap
adc
movw
xor
rcl
shl
xor
lea
cmp
shl
sub
jmp
mov
pushf
pushl
push
pushf
mov
mov
push
jmp
movb
movb
mov
call
mov
bswap
repz
popl
movzbl
pushf
movzbw
mov
movsbl
movsbw
xchg
not
jmp
stc
cmp
jmp
neg
movzbw
mov
push
clc
test
clc
add
pusha
pusha
movb
push
mov
pushf
movb
pushf
lea
jge
mov
pusha
mov
pushf
lea
jmp
add
push
call
mov
not
dec
mov
not
pushl
popl
not
pushf
movl
xchg
lea
dec
mov
pusha
pushl
dec
stc
bswap
lea
ror
ror
xor
stc
ror
lea
pushf
sub
mov
movzbw
push
lea
pushl
lea
jmp
not
clc
test
clc
call
call
bts
bts
cmp
mov
mov
inc
mov
stc
pushf
not
stc
call
pushf
movw
mov
push
movzbw
bswap
not
mov
xchg
xchg
pushf
jmp
pushf
movb
mov
pushl
lea
jmp
pusha
sub
test
pushl
jmp
pusha
pushf
mov
push
mov
lea
jmp
lea
xor
je
shrd
mov
ror
call
mov
pushl
lea
jmp
jg
popl
push
lea
jmp
not
mov
pop
movzbw
movzbw
dec
btr
bswap
shl
dec
movsbw
xor
shrd
dec
mov
shr
jmp
