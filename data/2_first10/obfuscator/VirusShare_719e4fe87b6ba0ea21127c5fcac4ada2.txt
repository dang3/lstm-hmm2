push
call
ret
ret
xor
pextrw
inc
and
jb
dec
inc
loop
test
xchg
aad
and
jmp
or
or
or
pop
daa
cmp
shl
push
cmp
cld
mov
ret
jns
sbb
mov
mov
xchg
xchg
mov
adc
jno
mov
push
test
lock
mov
mov
hlt
sbb
or
inc
inc
subl
xchg
push
pop
mov
push
mov
jae
enter
cmp
int3
sbb
pop
jb
sbb
cltd
out
jmp
xor
pop
mov
out
in
pop
movsl
ljmp
stos
mov
imul
jbe
mov
cmp
dec
fs
aad
dec
dec
les
repz
into
xor
cmpsb
cmpsl
lret
mov
inc
stc
ror
inc
out
mov
ficoml
push
arpl
mov
movsb
sub
lahf
adc
test
fadds
sub
xor
les
and
mov
pop
add
mul
pop
sub
imul
jb
repnz
xchg
push
mov
movsbl
outsl
sbb
lret
repnz
mov
mov
sub
lds
ret
shll
push
mov
jo
xchg
ud1
fsin
adc
mov
jmp
stc
add
lret
inc
fsubr
add
fldenv
mov
jp
mov
cmp
mov
data16
and
inc
std
dec
sub
push
fwait
pushf
inc
mov
fyl2x
mov
jnp
xor
xor
addb
xchg
mov
lock
lret
movb
lcall
idivl
adc
iret
sbb
or
push
mov
cmp
inc
lret
sub
in
add
fists
lds
mov
popf
push
jbe
add
mov
dec
mov
inc
mov
sbb
mov
andb
fcoml
xor
stos
xchg
jge
mov
lods
dec
fldenv
or
int
mov
inc
mov
neg
xor
cmp
mov
faddl
icebp
adc
jns
mov
clc
out
adc
call
scas
popa
int3
clc
and
or
push
scas
push
cs
gs
hlt
ret
sbb
sub
inc
repz
stc
stc
jae
push
mov
xchg
int3
push
dec
loope
arpl
in
pop
push
pop
inc
mov
jecxz
scas
jmp
adc
dec
je
lcall
add
sti
out
push
mov
inc
or
pop
fadd
pop
in
call
ja
jns
jb
add
int3
pushfw
scas
or
mov
adc
inc
pop
dec
cmp
int3
push
divl
frstor
mov
mov
mov
movsb
fldenv
fwait
test
jae
cmp
and
lret
sub
cmpsl
and
movsb
clc
sbb
mov
shrb
jnp
mov
cwtl
cmpsb
imul
out
jmp
jbe
xchg
ja
fsubrp
negl
hlt
cwtl
fs
or
push
dec
shll
inc
jmp
mov
adc
push
sbb
inc
orl
in
loop
cli
lahf
pop
cld
es
movsl
mull
xor
xchg
and
subb
pop
xor
fcomps
idiv
adc
in
ljmp
mov
mov
dec
addl
sub
adc
or
mov
repz
fadds
jb
gs
cmp
icebp
imul
fwait
popf
repz
cmp
lods
xchg
insb
dec
xor
mov
popf
mov
xchg
mov
rcr
enter
xlat
movsb
mov
jle
jl
adc
or
jge
lcall
repnz
pop
ftst
aad
fst
rcl
cmp
aam
push
sub
adc
icebp
imul
cmpsb
push
iret
or
loope
pop
outsl
push
aaa
iret
std
leave
sbb
arpl
or
lahf
lcall
pop
sub
mov
lret
mov
lods
lds
cmp
add
pop
pop
iret
mov
inc
pusha
fdivp
sbb
cld
sbb
add
lahf
push
cmp
push
mov
sub
std
idiv
pop
and
jg
insb
jb
mov
cld
scas
inc
sub
lock
or
pop
sub
scas
aas
jnp
lods
insl
daa
sti
cmpsb
jp
add
cmp
outsb
mov
aaa
xor
push
lret
sbb
bound
movsb
in
jl
add
mov
loope
xor
pop
es
push
or
xor
mov
sbb
mov
outsb
push
leave
lret
sub
adc
adc
divl
loopne
std
or
xchg
and
lret
lea
dec
pop
aad
pop
int
aam
sbb
xchg
cmpsb
pusha
out
int
push
xchg
jecxz
ss
xchg
push
adc
sub
data16
je
ja
ljmp
sub
xor
orb
or
xchg
psubb
pop
arpl
andl
mov
outsl
jmp
inc
push
push
rcl
roll
outsb
sbb
out
mov
jbe
mov
or
test
gs
dec
dec
imul
pop
inc
jbe
dec
cmp
lcall
sarb
sti
inc
push
rorb
out
test
shrl
int
outsl
pushf
mov
aad
lahf
add
sub
pop
ljmp
sub
ljmp
cld
push
bound
cmc
mov
pusha
pusha
mov
xbegin
cmp
stos
jl
cltd
push
jns
repz
mov
mov
add
insl
mov
repz
mov
call
or
popa
jbe
adc
fnstcw
sarl
sub
lret
pusha
test
or
sbb
sub
enter
push
pushf
mov
rclb
fistpl
inc
dec
cltd
fisubl
xchg
jl
rorl
fiaddl
rorl
mov
mov
ds
enter
push
out
pop
pop
cmp
fwait
fwait
inc
in
xchg
push
cmp
scas
push
add
inc
pop
mov
cli
les
es
test
clc
cmp
xlat
fcom
iret
je
stos
addr16
pop
movsl
nop
push
scas
sahf
push
pop
cmp
cwtl
test
xchg
sarb
cmp
mov
out
in
mov
and
dec
mov
lret
xchg
mov
pusha
ss
xor
cmp
pop
sub
jae
hlt
rol
repnz
xchg
out
ficompl
sub
cli
movsl
sub
mov
cmp
nop
int
into
popf
les
stos
or
mov
sub
fstl
scas
pop
xchg
addr16
sbbl
fs
mov
cmp
pushf
mov
add
enter
rcrb
hlt
dec
in
dec
rcll
int
mov
fdivr
jmp
or
adc
lock
adc
cmp
movsb
gs
dec
sarb
or
push
xlat
ret
push
repnz
mov
jle
jmp
rol
sbb
mov
xchg
stos
or
dec
into
add
sub
call
cmp
js
cli
sbb
mov
adc
es
xchg
cmp
int
mov
outsb
xorl
xchg
outsb
push
mov
and
cmp
outsb
sti
dec
clc
add
aaa
mov
xor
dec
aam
stos
daa
lret
cmp
mov
adcl
int
stos
jo
mov
mov
push
mov
add
push
sbb
mov
jbe
cmp
dec
test
pop
ja
fmull
repz
fadds
xchg
sbb
movsb
inc
adc
xchg
aad
or
lock
mov
in
adc
cs
int
jmp
out
cli
loop
fldt
fcoms
lds
mov
jl
inc
ja
rol
jns
movb
or
push
sub
or
lahf
outsb
rorl
adcl
sbb
mov
xchg
jbe
fs
movb
mov
cs
outsl
test
subl
dec
loop
adc
push
gs
testl
lahf
adc
scas
push
int3
sarl
sti
push
cmp
mul
icebp
jmp
stos
adc
sbb
xchg
mov
sbb
das
insb
push
popa
jno
or
sbb
jp
cli
add
inc
loopne
or
cmp
int
and
xchg
cmp
lcall
push
jecxz
in
xor
arpl
pop
filds
mov
out
scas
jmp
aam
mov
hlt
adc
movsb
jle
adc
mov
jge
push
ss
push
or
clc
mov
test
jo
inc
jmp
int
pushf
push
repnz
mov
call
pop
in
fldcw
sbb
xchg
lret
push
push
xchg
cs
mov
jno
lahf
xchg
xlat
pop
loopne
es
shlb
dec
jne
mov
push
mov
je
lea
dec
aas
and
shrb
xchg
loopne
and
in
mov
fcmovb
loope
jl
pop
mov
adc
ret
dec
sub
jl
lcall
cld
xchg
hlt
lds
or
nop
mov
add
mov
cmc
jae
push
ljmp
cmp
pushf
aad
pop
push
sub
bound
insb
sbb
cmp
test
pushf
setns
gs
imul
xor
xchg
mov
push
test
mov
data16
sbb
aam
repz
mov
cwtl
pop
mov
gs
cmpsb
outsb
ret
ficoms
cmpb
roll
mov
dec
cmp
push
cmp
push
or
add
or
xchg
mov
mov
mov
cmpsl
push
bound
mov
or
mov
stc
outsb
std
add
iret
cmp
dec
dec
ds
jmp
dec
in
lock
and
test
rcrl
test
dec
data16
stos
cmp
jmp
sti
cmpsl
mov
sbb
std
sub
xor
sub
mov
in
dec
fdivr
rolb
ljmp
shlb
adc
stc
cmc
mov
push
sbb
das
int3
inc
xor
fldt
and
pop
sbb
xlat
adc
xor
cltd
mov
xor
cmp
imul
xchg
jbe
jg
or
bound
ss
sti
xchg
sub
fstp
stc
dec
fistpl
out
hlt
ficoml
fnsave
fisubs
out
jb
clc
ret
pop
cmp
incl
shlb
test
pop
jae
roll
sub
jmp
ret
loope
and
mov
pop
int
clc
imul
adc
inc
jp
loope
mov
or
push
imul
cli
imul
mov
ds
mov
jmp
lahf
adc
dec
inc
jle
add
lock
pop
ret
dec
and
fbld
and
push
cltd
mov
aam
and
mov
into
xchg
and
stos
fmuls
mov
jp
ja
cmpb
jno
lds
sbbb
mov
xchg
pop
dec
bound
xchg
mov
sub
inc
enter
popf
arpl
andb
lea
pop
sub
arpl
test
push
adc
aam
cmp
filds
js
xchg
mov
std
sti
mov
cmpsb
outsb
inc
out
jne
cmp
dec
insb
adc
add
sti
int
call
loope
dec
sub
jnp
and
gs
jns
aas
scas
mov
sbb
mov
jp
jecxz
and
mov
fwait
inc
test
jo
jecxz
pop
dec
mov
sti
push
and
pushf
in
mov
daa
fwait
mov
repnz
in
add
or
mov
add
lret
mov
mov
std
inc
fisubrl
adcb
dec
cmpsb
test
sti
jg
sub
pop
sbb
adc
dec
movsl
sub
into
xchg
call
aam
sarl
cmpsl
sub
sub
pushf
sarb
sbbb
mov
mov
sbb
fimuls
jb
pop
loop
ret
nop
lret
mov
adcl
ficoml
sbb
sub
sbb
xchg
fwait
mov
mov
sbb
mov
or
jmp
or
mov
ljmp
jg
adc
or
cmpsl
in
cmp
cwtl
sbb
cmp
out
imul
and
sub
loopne
int
xchg
pop
pop
cmp
outsl
push
shlb
jo
movl
or
mov
mov
es
push
or
dec
iret
adc
adc
ret
ret
push
filds
inc
pop
push
dec
rcl
or
pop
hlt
fcomip
jmp
arpl
pop
cld
sbb
adc
sub
and
cmpsb
inc
sbb
lret
mov
jmp
inc
pop
fstps
push
rcr
xorl
jno
jbe
sub
push
aas
mov
in
fisubl
push
int
xchg
scas
lea
sub
scas
xchg
ret
scas
cltd
jno
inc
scas
adc
xchg
adc
pusha
mov
inc
mov
repz
mov
and
incb
mov
mov
xor
mov
mov
sub
push
outsl
jecxz
loop
mov
inc
data16
cs
das
jmp
mov
push
int3
fistl
pusha
scas
daa
fisubrl
in
test
add
sbb
jecxz
xchg
pop
lret
mov
ret
inc
lea
xchg
xchg
inc
jl
jne
mov
out
clc
mov
adc
arpl
jp
stos
cmp
xchg
orb
adc
mov
negl
xchg
ljmp
scas
add
xchg
mov
mov
adc
gs
mov
mov
mov
dec
mov
inc
addb
sbb
cmp
pop
frstor
xor
sahf
add
popa
sub
in
push
sub
lods
jle
sub
xchg
add
mov
mov
out
testl
pop
mov
mov
loopne
sub
dec
xor
inc
cmp
rcl
pop
or
adc
insl
mov
pop
pop
inc
mov
jmp
clc
push
xchg
mov
xchg
cmp
cs
pop
call
dec
sbbl
mov
sub
jecxz
xor
cmp
ret
and
std
fcmovnb
jmp
mov
imul
addr16
ss
out
push
cwtl
js
in
jns
and
jmp
out
mov
cwtl
add
jmp
nop
imul
pushf
xchg
push
cmp
jmp
daa
sbb
dec
cmc
cmp
in
mov
pop
push
sub
xchg
xorb
adc
cwtl
add
outsb
clc
aaa
or
popf
adc
das
leave
out
imul
das
or
loopne
cmp
lahf
ret
xlat
mov
mov
pop
or
sbb
pop
xor
loop
test
rcrl
push
mov
dec
push
ret
cli
insl
das
inc
mov
sbb
xchg
mov
push
cs
push
gs
repnz
lahf
ret
pop
inc
aaa
fucomp
jnp
ja
pusha
pop
dec
shll
mov
scas
mov
push
mov
sbb
addr16
orb
jbe
fbld
scas
jno
xlat
notl
xchg
mov
fisubs
lcall
or
lahf
cmp
rcll
ljmp
sub
sbb
inc
jbe
jl
xchg
sub
lods
icebp
and
dec
jg
xor
lods
cmp
lea
sti
dec
xor
dec
xlat
dec
push
jmp
adc
or
dec
xchg
jnp
cmc
nop
cmc
jge
xchg
pop
sbb
adc
ss
jb
cmp
xor
in
ljmp
jl
dec
jmp
jmp
ds
mov
lea
das
lret
mov
repnz
sub
inc
test
xchg
jg
xor
xor
out
aad
cmc
stc
cmp
add
mov
mov
push
jmp
fmuls
shlb
dec
test
cmpsb
mov
push
adc
adc
repnz
jecxz
mov
and
cmp
inc
loope
add
jb
fimuls
rcll
dec
test
sub
mov
xlat
stos
xor
icebp
es
mov
mov
jle
cmp
lock
popa
adc
xchg
das
and
push
xchg
hlt
dec
sub
cmp
and
jnp
shl
mov
test
in
test
sbb
or
or
mov
mov
cwtl
jno
mov
dec
jle
mov
ja
ficoml
adc
fwait
popa
adc
out
jb
cs
mov
push
das
mov
sub
jle
dec
push
jmp
mov
scas
ja
mulb
add
cltd
aaa
aaa
sarl
stos
mov
loopne
das
stos
in
push
pushf
jecxz
loop
icebp
int
mov
test
push
repnz
imul
int3
cli
rep
addr16
cli
jecxz
xchg
add
ljmp
lahf
xchg
jb
nop
sbb
fmuls
jle
add
iret
inc
pop
cld
adc
mov
and
cmpsb
push
xlat
xor
push
add
rcll
dec
loope
lret
push
js
fldt
loop
and
jns
scas
xchg
add
aam
or
dec
mov
and
into
xchg
xor
or
maskmovq
mull
rorl
mov
mov
or
mov
pop
or
pop
test
cmp
mov
outsl
push
daa
add
ljmp
jno
ss
or
das
cld
jne
cmpsb
nop
arpl
or
out
je
aaa
mov
or
xchg
test
cmp
pop
test
in
xor
stos
sub
iret
out
bound
scas
or
in
xchg
lcall
or
mov
sub
jne
mov
adc
mov
push
xchg
jp
sub
lcall
or
xchg
test
rorl
iret
outsb
inc
add
sti
sub
fistps
outsl
adc
movsl
mov
icebp
mov
adc
mov
rol
scas
fldt
in
popf
add
dec
inc
jne
xor
jl
stc
orb
jnp
mov
data16
mov
push
and
mov
add
jb
jecxz
dec
ss
pushf
cmp
cli
aam
add
xchg
adc
out
imul
jae
xorl
or
fsts
rcll
aad
cld
jnp
popf
sub
mov
ret
push
data16
mov
shlb
andb
lds
in
sar
mov
sub
mov
dec
pop
filds
add
add
sbb
shrb
fimull
je
in
pop
and
pop
xchg
mov
cmp
cmp
xchg
sbb
mov
mov
mov
or
push
cld
gs
add
insl
mov
ds
mov
push
fsubl
addr16
insb
cltd
shll
mov
and
or
andb
hlt
fucomi
cmp
xchg
cld
ficoml
adc
mov
adcb
sbb
das
cmp
lds
cs
push
sti
rorb
out
cmpsl
mov
lods
test
adc
icebp
xchg
mov
mov
or
jle
aam
adc
pop
rorb
mov
cmp
hlt
outsb
hlt
je
pop
lret
xchg
mov
outsb
in
cmp
xor
mov
or
adc
mov
and
out
sbb
repnz
test
inc
enter
insb
adc
or
xchg
test
xor
std
add
mov
push
push
and
fwait
jge
in
nop
xchg
mov
subb
fxch
je
push
scas
jl
mov
mov
dec
repz
aaa
pop
and
sbb
pop
cmp
sbb
xor
jno
iret
add
fsubl
and
sub
mov
rorb
movsl
dec
mov
mov
jbe
int
mov
push
cli
jae
into
xchg
inc
pop
xchg
loop
movsb
lods
adc
in
inc
mov
filds
push
xorb
jne
cmp
ficoms
mov
push
cwtl
pushf
js
xchg
test
jmp
xor
jno
sti
shlb
push
xor
ficompl
bound
sub
testl
push
jb
notb
sbb
pop
mov
cli
inc
pusha
and
movsb
popf
push
or
lock
sbb
adc
fimull
xchg
or
test
mov
jp
in
mov
imull
insb
mul
mov
fidivs
inc
sbb
int
adc
mull
inc
mov
inc
pop
mov
add
and
cmpsl
mov
and
subb
in
jns
es
pop
adc
jl
mov
mov
rcrl
jmp
std
or
xor
jnp
lods
sbb
sbb
xor
dec
aas
xor
xor
jns
dec
psrlw
jle
xchg
cwtl
pop
pop
aad
cmc
cmp
xor
dec
sahf
sbb
aad
sub
dec
xchg
pop
xor
out
imulb
imul
out
das
mov
mov
gs
mov
aam
inc
leave
sub
mov
cmpsb
mov
ret
dec
cli
lods
cli
loopne
sub
push
cmpsb
mov
add
pop
and
fnstsw
adc
sbb
test
pop
push
cmp
test
and
and
mov
test
push
ret
cmc
not
imull
gs
mov
je
sub
adc
mov
test
xchg
push
sbb
mov
std
push
bound
int
or
add
xchg
cld
popf
cli
rcll
xor
js
aad
push
push
mov
movsl
sbb
sbb
popf
add
xchg
out
out
xchg
jge
cltd
jg
insb
addr16
push
lds
mov
push
lods
pop
mov
push
ficompl
adc
push
xor
mov
dec
sub
iret
dec
xor
movsb
stos
das
add
das
lcall
cmp
cmpsl
pop
sbb
pop
dec
js
add
les
xchg
inc
lret
out
add
mov
leave
push
inc
inc
aam
dec
inc
ss
jne
add
orb
pop
stos
popf
add
pop
stos
pop
mov
push
xor
or
cltd
add
sbb
into
sarb
inc
xchg
fcmove
aaa
aad
sti
xchg
push
testl
and
daa
addps
testl
push
mov
ret
mov
stos
and
fidivrs
std
jp
push
sub
inc
sbb
in
adc
or
mov
test
mov
push
in
or
mov
sub
mov
sub
sub
and
cmp
sarl
xchg
sti
jle
int
fstps
jmp
sbb
and
inc
fs
cli
aad
fsubl
cld
sub
jns
adc
push
xchg
popa
in
jge
in
inc
or
lcall
xchg
test
imul
push
pop
sbb
inc
repz
xchg
mov
pop
and
lahf
addr16
cmpsb
xchg
jle
xor
faddp
andb
sarb
cmp
or
dec
scas
pop
test
mov
cmp
lock
insb
jno
add
xchg
movl
dec
shlb
movl
mov
insb
jae
push
rclb
subl
dec
pop
or
and
mov
and
adc
add
jo
sahf
add
jbe
test
in
xor
lret
pop
jno
and
jp
dec
mov
in
pop
jmp
loopne
mov
mov
inc
mov
pop
and
xor
sub
xor
clc
push
xor
pop
sub
pop
ds
ljmp
cmp
adc
push
push
xor
pop
cltd
and
loopne
mov
lret
sbb
mov
and
xchg
aam
popa
lods
test
mull
dec
xor
lods
or
cltd
mov
inc
and
in
sbb
into
ja
inc
in
sarb
push
jae
adc
fcoml
out
sub
das
xor
mov
xchg
std
and
cwtl
or
dec
fldcw
bound
or
lds
jo
mov
mov
dec
cmp
notl
xchg
stos
ja
test
dec
sub
push
scas
insb
std
pop
cmp
push
iret
pushf
and
scas
scas
das
js
dec
repz
testl
ljmp
xchg
arpl
bound
jno
mov
add
iret
repnz
scas
addr16
xchg
sti
dec
mov
jl
sahf
or
add
or
xor
xor
mov
mov
jmp
push
push
sub
dec
mov
cmp
lret
cmc
jp
insb
push
andb
movsl
jge
lods
scas
insl
sbb
les
outsb
push
push
and
sti
rolb
ret
cmp
fstl
or
aas
dec
sub
clc
xor
leave
ret
insb
add
insl
cs
lret
fistps
and
or
lds
and
cmpsl
pushf
rorl
jb
jecxz
jg
enter
int3
sub
push
js
adc
xor
and
xchg
inc
ret
push
sub
das
ss
into
adc
mov
jb
ja
jmp
or
icebp
jecxz
es
adc
or
sbb
and
icebp
sbb
add
nop
jl
mov
movsl
dec
and
xor
dec
std
xor
mulb
pop
popf
and
inc
fnstcw
stos
push
lods
mov
pop
adc
jecxz
cmp
push
or
push
jp
or
xorb
outsb
lock
push
arpl
pusha
or
pop
jnp
rorl
jns
aas
int
movsb
outsl
cmpsb
sub
or
movsl
mov
loope
and
jne
sbb
inc
fidivl
mov
mov
cli
out
cmp
js
cmp
outsb
mov
ret
cmp
or
movsl
rcrb
mov
jno
out
test
call
psllw
cmp
mov
jo
cmpsb
mov
dec
rol
add
pop
inc
jge
into
jp
aas
insb
add
jge
pop
ss
aas
ret
inc
pop
xchg
cmp
and
icebp
xchg
jns
dec
xor
das
push
mov
mov
jb,pt
lock
jge
test
inc
cltd
mov
aaa
sarl
test
enter
mov
add
bound
pop
xchg
popa
flds
in
sub
es
mov
mov
add
in
sbb
movb
push
xchg
adc
outsl
sahf
insl
int3
clc
adc
insl
je
or
loope
dec
pop
js
or
mov
mov
mov
sbb
aaa
stos
sbb
push
inc
jb
sub
xchg
mov
ljmp
cmp
shrb
push
xchg
mov
dec
add
pop
xchg
mov
out
in
les
xor
test
mov
mov
mov
lcall
or
sub
adc
sub
std
jmp
push
mov
clc
lcall
fwait
scas
imul
sub
aas
sbb
loop
push
stos
xchg
data16
add
int
adc
pop
insl
add
sub
jle
cmp
or
mov
mov
cmp
mov
dec
movsb
insb
movsl
repnz
pop
in
push
das
popf
repz
lahf
stos
mov
jg
add
pop
jno
scas
pop
stc
test
gs
enter
sub
xchg
cmp
mov
sbb
mov
lahf
xlat
sti
pop
push
mov
inc
lahf
mov
mov
cwtl
scas
imul
sbb
sahf
scas
cmc
fcompl
das
lods
dec
inc
or
fdivs
mov
cmc
bound
and
dec
ret
fidivrl
int3
pop
mov
fdivs
fwait
mov
adc
and
sub
call
arpl
jae
xlat
cs
mov
cmp
or
ror
in
ror
rorb
jnp
leave
negb
mov
insl
pop
adc
fs
sub
or
push
xor
pushf
lods
xlat
xchg
int
add
in
cs
ds
daa
pop
std
arpl
not
xchg
mov
mov
and
cmp
sahf
mov
mov
mov
mov
sub
mov
sub
jecxz
sbb
fsubrs
fld
leave
jno
cmp
roll
cmp
add
pushf
out
lods
ret
xchg
arpl
fsts
jnp
pop
bound
fisubrl
pop
inc
mov
mov
adc
sti
and
loopne
xchg
lock
or
aad
ret
inc
cmpsb
movsb
adc
mov
subl
and
out
push
fldl
nop
mov
dec
loop
ljmp
cmpsb
mov
sbb
add
std
mov
and
mov
mov
enter
inc
addr16
push
scas
pop
push
clc
dec
in
xchg
cmpsb
mov
xchg
cs
pop
repnz
jns
in
sub
ss
das
into
sbb
insb
push
add
mov
pop
lods
push
into
push
cwtl
ret
or
mov
add
fdivs
pop
out
shll
push
out
adc
mov
push
gs
push
and
lahf
or
fnstenv
pop
sub
aas
shrb
pop
xchg
fidivrl
xchg
stos
pushf
cltd
popa
pop
iret
pop
jo
sbb
mov
and
sub
mov
cmp
adc
lahf
add
imul
daa
pop
pusha
cmp
loopne
and
pop
sarl
cmp
out
mov
and
lret
lahf
sbb
add
push
jae
and
sub
push
outsl
repnz
xchg
push
cs
call
push
xchg
jns
addr16
in
addr16
push
lahf
test
ret
xchg
jns
cli
out
lods
rcll
nopl
push
mov
mov
cltd
push
out
jae
push
push
out
push
sbb
aas
bound
pop
dec
pop
push
push
fimuls
outsb
nop
jecxz
sub
aaa
mov
push
mov
fsubs
cmp
andb
ds
xchg
out
cmp
out
shlb
pop
xor
jmp
arpl
jle
pushf
mov
daa
cld
lds
sbb
jmp
faddl
arpl
pop
mov
jno
lea
pop
imul
add
cs
lock
mov
jle
mov
sbb
adc
mov
xor
pop
std
xchg
call
sti
iret
and
mov
pop
test
pop
mov
es
aaa
jg
or
insl
and
cs
push
and
push
add
cmp
lods
cmp
mov
push
push
pop
scas
inc
sbb
jae
cmp
rcll
cmp
test
xchg
push
push
lcall
sub
xchg
or
test
pop
cmp
sbb
pop
mov
out
sbb
arpl
mov
and
imul
stc
loop
and
mov
add
mov
add
push
push
cwtd
inc
mov
das
outsb
sub
xchg
xchg
lahf
adc
les
add
add
mov
adc
or
in
add
inc
loope
pop
dec
mov
push
lods
inc
arpl
cmp
enter
ja
xchg
leave
fimuls
call
ret
loopne
fildl
loopne
xor
ss
mov
sbb
xchg
cli
mov
mov
pop
pop
mov
push
xor
shrl
mov
movsb
rcr
jle
mov
shr
push
sti
pop
xchg
dec
hlt
icebp
mov
scas
pop
xchg
clc
loope
fdiv
loopne
inc
imul
push
or
pop
arpl
testl
lcall
call
push
push
bound
xor
mov
jns
and
mov
xchg
jmp
je
jp
es
xchg
sbb
cld
jl
repnz
in
mov
fsubrs
xchg
dec
push
sub
lods
loope
call
out
pop
test
sbb
fwait
pushf
sbb
daa
scas
jo,pn
lcall
daa
push
ds
push
pop
jle
pusha
add
stos
or
mov
scas
xor
mov
lea
push
push
dec
mull
out
or
push
sub
xchg
lret
je
sub
cwtl
xchg
loope
mov
mov
pop
xchg
shll
add
inc
xor
sub
arpl
mov
xor
mov
and
pop
std
push
mov
xchg
test
cltd
out
jp
sub
inc
leave
out
ljmp
mov
lock
xchg
and
pop
sub
pop
pop
roll
inc
xlat
sahf
dec
lahf
push
lahf
mov
jge
sub
pop
xor
sub
jo
lahf
getsec
xchg
or
loope
xor
jle
or
cmpsl
lret
sub
mov
test
std
fstps
sub
add
in
scas
xchg
nop
out
add
mov
xchg
mov
das
inc
push
adc
push
into
ret
insl
fcomi
test
xchg
daa
mov
xchg
imul
call
mov
pushf
dec
ja
fidivs
in
xchg
ljmp
stos
out
or
mov
jns
loope
xchg
sbb
leave
inc
and
or
cmpsb
test
sahf
cld
orps
sbb
shrb
test
dec
mov
addr16
and
jb
loope
jno
or
mov
adc
mov
das
mov
addr16
ret
adc
aam
es
roll
push
cmp
lock
ljmp
sbb
inc
cltd
xchg
cmp
push
mov
xor
movsb
lahf
pop
push
push
mov
adc
cmp
inc
mov
movsb
out
mov
scas
das
push
or
jno
and
test
es
mov
inc
out
shl
gs
aad
adc
lahf
loop
mov
sub
jne
aad
stc
rcrl
js
sahf
dec
imul
adc
mov
js
lcall
dec
jl
adc
dec
fnstenv
lret
outsb
xor
mov
aaa
incb
adc
pop
js
mov
sbb
ds
pop
push
pop
cmp
fs
mov
sub
mov
cmp
negl
dec
arpl
pushf
inc
cmp
ret
scas
out
in
lahf
pop
jecxz
lret
xchg
sbb
outsb
mov
mov
xorb
push
sbb
xor
sahf
sbb
push
sahf
pop
outsl
mov
inc
lcall
ja
int3
jo
dec
add
mov
mov
add
pop
fsubr
outsb
stos
sahf
lret
mov
bound
test
mov
filds
scas
xchg
sbb
mov
pop
shl
sbb
jl
pop
lret
mov
mov
or
jbe
in
subl
out
or
xchg
pusha
insl
adc
sbb
cmp
cmpsl
je
inc
and
xchg
jo
in
sub
pop
fisttpl
cmp
sub
and
sti
xchg
ret
call
fsubr
ja
psubq
rol
aaa
xlat
adc
xchg
mov
cmpl
shlb
loope
inc
test
out
or
pop
xchg
shlb
ja
in
jecxz
jle
cmp
test
outsl
je
lret
pop
sub
idivl
mov
cmp
inc
repnz
test
mov
les
lea
cmp
enter
and
dec
decl
push
inc
pop
cs
xchg
movb
adc
pop
sbb
jno
subl
adc
mov
xor
movsl
les
pushf
xor
push
jp
popa
adc
sbb
cmp
xchg
jp
inc
add
xchg
xor
xor
inc
cs
add
mov
addr16
hlt
adc
mov
and
jl
and
pop
pop
dec
pop
cmp
ja
ljmp
cli
xor
push
mov
stc
fisubrl
jb
or
repz
mov
lret
adc
divb
je
js
mov
repnz
imul
xchg
lds
cli
fstl
movsb
enter
pop
mov
int3
mov
push
pop
lahf
mov
inc
sbb
neg
adc
mov
fsts
and
jmp
dec
loope
repz
js
into
xor
popf
xor
inc
and
insl
xchg
lods
jp
ljmp
loopne
sbb
test
mov
or
dec
sub
bound
mov
dec
fidivrs
out
xor
mov
lock
outsb
xchg
das
jae
xchg
cmp
loopne
cmp
icebp
lods
dec
movsb
push
divl
in
adc
cmp
lret
loope
arpl
jne
xchg
jge
ja
cmpsb
in
sub
mov
push
mov
pop
jp
pop
push
in
std
cli
in
mov
enter
inc
or
arpl
iret
push
add
cmp
jge
out
xor
test
aad
fcom
cmpsb
stc
out
mov
sar
sbb
push
pushf
insb
mov
idivb
in
imul
xchg
movsb
jge
in
mov
xchg
dec
xchg
in
lds
sti
cmp
and
pop
incl
fidivrl
call
inc
pop
or
mov
out
out
jno
add
loopnew
stos
mov
fs
fcoml
clc
sbb
dec
bound
mov
movsb
test
les
sub
imul
hlt
pop
push
cltd
nop
and
cmp
shr
cmc
inc
and
jb
movsb
mov
into
cmp
das
jl
mov
adcb
push
fucom
sub
pop
out
mov
lret
mov
add
inc
dec
mov
jmp
mov
std
jcxz
jge
sub
aaa
sub
jecxz
pop
pop
inc
xor
pop
xor
bound
lods
dec
insb
popf
dec
adc
lock
jmp
push
dec
lods
sbb
xchg
scas
push
add
aam
sbb
inc
mov
movsl
xchg
sarl
dec
push
mov
xchg
outsl
and
xchg
inc
xor
test
or
sub
fdivrs
cli
jne
mov
push
and
scas
mov
sub
dec
mov
mov
nop
add
mov
xchg
and
add
flds
cltd
or
and
sbb
je
push
iret
cli
mov
mov
lock
sbb
movsl
popf
fdiv
sub
pop
xor
bnd
mov
arpl
jb
fwait
sarb
pop
loop
push
mov
sbb
out
je
nop
add
jns
rolb
push
bound
repnz
movsl
ror
adc
inc
jbe
daa
and
mov
sub
mov
jl
test
popa
jno
cs
hlt
sahf
jbe
mov
mov
xor
mov
add
sti
popa
sbb
mov
mov
movsb
mov
movsl
push
jl
popa
push
fmul
and
js
andb
lcall
imul
movsb
div
cld
lret
xchg
cltd
pop
xor
cltd
adc
sbb
or
xor
inc
int
sub
sub
imulb
loopne
jbe
lahf
inc
or
push
push
jno
mov
xor
shrb
in
out
jo
cmp
stc
push
in
and
push
xlat
lret
sub
imul
adc
icebp
xor
js
mov
sub
pcmpeqd
xchg
mov
mov
repz
outsl
push
jmp
jmp
in
inc
xor
lods
pop
ljmp
pop
add
ret
push
scas
xor
fwait
les
out
xchg
loope
sub
mov
cld
int3
jecxz
inc
dec
and
test
lods
jno
jbe
imul
fdiv
pushf
jle
sti
repz
mov
imul
movsb
xor
imul
in
mov
popf
dec
mov
sub
xlat
push
outsb
inc
rcrl
packsswb
jl
mov
push
lock
mov
movzbl
call
out
lahf
inc
xchg
pop
fistpll
or
outsb
and
addr16
adc
jne
idivl
ja
jl
int
dec
icebp
and
cwtl
imul
and
cmp
std
pop
int
test
adc
test
mov
fadds
and
pop
sbb
push
sahf
adc
xchg
adc
rcrb
clc
inc
mov
jg
or
add
jno
in
in
mov
repz
sub
lds
ds
in
sar
leave
jmp
in
mov
ret
les
mov
fcmovnb
in
push
into
pop
fisttpll
dec
jno
testb
cwtl
xlat
push
aas
cmp
push
xor
vmovupd
push
popf
arpl
fists
mov
ds
sahf
jno
push
inc
je
ljmp
xor
ss
mov
inc
data16
push
xchg
lods
loope
add
xchg
jae
pop
andl
ja
pop
aad
cmp
and
call
mov
pop
clc
add
mov
and
dec
cmp
mov
inc
sbb
out
cmp
xchg
sbb
pop
arpl
mov
dec
mov
popf
rcrb
mov
outsb
loope
int
mov
dec
xchg
fwait
xchg
ret
sub
sbb
lds
push
les
into
ss
mov
pusha
mov
push
push
sub
repnz
xor
ss
daa
xor
jp
scas
aas
jne
outsl
push
movl
sub
call
and
in
mov
mov
lods
out
fcoml
fldenv
cmp
inc
mov
xchg
nop
mov
dec
dec
xor
outsl
int
xchg
lods
xor
xor
add
loope
fidivs
setg
jne
or
dec
roll
inc
add
xchg
ja
push
cmp
hlt
scas
js
pop
aaa
or
scas
cli
pop
outsl
jp
sub
stc
cwtl
jne
les
adc
scas
rclb
rorb
lods
testl
subl
loope
mov
pop
mov
push
mov
ret
push
into
lret
mov
cmpsl
mov
cld
mov
adc
mov
rorl
dec
addb
cmp
out
or
sar
stos
loope
imulb
pop
gs
fnsave
push
cmp
insl
mov
aas
and
mov
call
xchg
adc
mov
pop
je
call
dec
lcall
sbb
dec
xchg
dec
xorl
leave
add
pop
sub
in
fnstcw
mov
dec
mov
cmpsb
or
arpl
sbb
divl
test
add
stos
movsb
add
cwtl
xor
mov
dec
jnp
sub
lea
lea
fisubl
push
and
and
bound
loop
and
jecxz
cmc
inc
fildll
mov
push
cmpsl
mov
leave
imulb
repz
popf
lock
mov
jne
int3
fldenv
inc
xlat
dec
push
xchg
or
push
adc
out
pop
xor
mov
fs
int3
stos
and
jbe
add
mov
mov
mov
call
mov
inc
bound
hlt
fnstenv
fs
sbb
push
popa
xor
dec
lods
aam
fisubs
xlat
push
mov
xchg
out
pushf
das
aam
std
push
push
mov
fstpl
dec
psadbw
ljmp
xchg
cmpsl
rcrb
mov
fnsave
shl
inc
sbb
jp
add
mov
clc
jne
mov
dec
jbe
and
mov
popf
dec
test
stos
xchg
js
movsl
sbb
inc
jns
das
lret
dec
inc
testl
call
cwtl
jno
mov
mov
mov
mov
addl
in
roll
push
push
sbb
adc
mov
mov
xor
fnsave
paddw
push
stos
push
icebp
inc
das
testl
lahf
pushf
add
stos
sub
insb
cmp
mov
ror
mov
lds
outsl
or
pusha
aaa
dec
stos
mov
idivb
popf
mov
rclb
mov
inc
add
inc
push
jbe
sbb
mov
and
out
mov
icebp
mov
adcl
sahf
dec
out
roll
aaa
fisubs
sbb
insl
addb
adc
test
test
and
sub
jg
mov
mov
fsub
push
cmc
sbb
xchg
add
and
fcomps
mov
dec
nop
addr16
lcall
flds
jge
xchg
jecxz
dec
out
scas
and
mov
sub
rclb
adc
xchg
mov
adcl
gs
xor
sub
lock
fsubl
ds
sbb
or
cs
call
xchg
shlb
clc
cmp
xchg
add
test
popa
out
sbb
push
std
and
test
loop
add
scas
in
rclb
pusha
cs
lahf
movb
adc
push
and
xlat
sub
sbb
insl
dec
jbe
mov
and
mov
pop
pop
std
jl
mov
or
cmp
mulb
inc
or
ret
ret
lret
incl
xor
inc
xor
or
lods
cmpl
xchg
stos
aaa
ja
outsb
add
cmp
mov
pop
pusha
sbb
mov
and
push
adc
mov
enter
mov
cmp
pop
jp
push
js
sti
inc
test
or
mov
std
pop
aad
push
out
dec
pop
pop
add
lods
jge
outsb
mov
fistpll
fildll
mov
int3
sahf
inc
xchg
xlat
sti
cld
daa
push
mov
inc
das
popf
addr16
mov
mov
push
dec
popf
dec
and
push
sbb
mov
dec
mov
test
insl
and
xchg
cmp
add
lcall
in
push
pop
push
lahf
mov
sbb
mov
popf
fldenv
lcall
xor
sbb
mov
mov
fstpt
repnz
scas
xor
adc
or
cwtl
dec
mov
int
icebp
sbb
add
add
inc
jmp
push
cmp
lods
in
xchg
cmp
mov
jl
sahf
xchg
les
xchg
lahf
call
inc
jle
jne
outsb
fisubrl
ret
xchg
lret
bnd
cmpsl
cli
arpl
mov
mov
inc
sbb
in
and
ficompl
out
push
fmull
aad
inc
dec
sbb
gs
cmp
add
out
outsb
adc
sub
add
loope
or
jne
and
lret
fwait
popf
sahf
adc
xlat
aaa
mov
lret
adc
clc
mov
sub
xchg
int
push
stos
es
adc
pop
in
sbb
adc
pop
lret
xor
ret
aaa
xlat
sub
mov
push
xor
jae
dec
mov
adc
adc
imulb
sub
xchg
sbb
xchg
sahf
inc
push
ret
pop
xchg
adc
cs
and
xorl
jecxz
push
pop
push
pop
xchg
xchg
mov
inc
and
push
fcmovb
leave
data16
enter
xchg
xor
out
fistpll
aas
out
enter
dec
xchg
sti
test
into
dec
adc
dec
lea
sbb
leave
aad
dec
adcl
inc
stc
adc
xchg
push
outsb
ss
aaa
test
cwtl
pop
negb
sti
frndint
or
mov
cmp
icebp
and
mov
lods
mulb
into
stos
ljmp
popf
mov
je
popf
adc
shlb
imul
shufps
faddl
enter
sub
cmpsb
movsl
mov
adc
xor
add
push
push
sbb
pop
mov
jl
xor
add
xlat
fidivl
lds
mov
xchg
and
push
cmp
dec
pop
into
dec
and
ljmp
xor
push
mov
adc
dec
repnz
out
pusha
out
outsb
sub
les
stos
xchg
ljmp
mov
fidivrl
sub
push
dec
or
or
repnz
movsl
jbe
xchg
mov
fiaddl
shrb
jl
pushf
sbb
pop
xchg
nop
add
movsl
sbb
or
hlt
mov
js
mov
mov
dec
mov
jne
push
rcl
js
ficompl
das
push
jmp
inc
fwait
arpl
mov
ss
push
and
sub
xchg
test
xchg
mov
les
mov
adc
push
xlat
gs
aaa
push
ror
jmp
adc
add
mov
insl
ds
popa
jne
jns
je
std
fcompl
cmp
xor
in
add
jo
call
lret
jbe
adc
and
fwait
in
mov
jp
pop
cmp
inc
jecxz
pop
inc
and
fmuls
lods
int
inc
leave
shrl
subb
jno
hlt
sub
std
and
imul
out
dec
fcomi
add
lods
pop
xlat
scas
cmc
mov
mov
repnz
jno
mull
lcall
shll
jnp
dec
subl
aam
je
out
adc
dec
das
mov
pop
mov
movsb
in
xor
clc
repnz
adc
jo
cmc
shll
jbe
outsl
cli
pop
push
mov
fimull
sar
add
je
add
add
adc
sbb
dec
and
pop
cmc
insl
cmp
fisttpl
movsl
xor
cmpb
adc
aas
inc
inc
gs
sbbl
mov
jg
sbb
rolb
fcompl
call
ficomps
lock
mov
lret
mov
adc
sub
pop
fldl2t
lcall
adc
sarb
mov
movsl
xchg
mov
std
xchg
jl
push
jne
pop
xor
aam
aad
jae
mov
push
shr
in
mov
movsl
dec
jmp
loopne
jmp
xor
lock
cmp
inc
jp
lcall
sbb
addr16
es
add
dec
add
cltd
roll
dec
jno
sti
repnz
loope
fld1
aaa
out
inc
cld
sub
fwait
ret
pop
in
shrb
daa
mov
fs
pop
roll
cs
jl
icebp
mov
cmp
aad
adc
xor
dec
imul
fists
cltd
mov
add
mov
icebp
mov
push
out
sub
inc
pop
dec
iret
dec
add
lea
dec
and
and
mov
push
aad
shl
xor
sbbl
sbb
outsb
andb
inc
inc
and
pop
nop
and
push
loope
subb
push
out
cli
addr16
or
or
aam
loopne
xor
mov
mov
in
mov
mov
loope
sbb
in
cmc
push
dec
rcrl
mov
and
cmpb
int3
into
into
divl
mov
sbb
jl
in
jnp
sahf
mov
aas
inc
push
dec
pusha
push
sub
lea
rorl
ss
mov
sbb
fsts
scas
lods
push
inc
mov
mov
mov
lock
xor
mov
and
mov
and
test
pushf
int3
popa
or
jae
fisubs
xchg
pushf
add
xchg
ds
dec
mov
push
add
je
lods
jle
outsb
movsl
or
xor
scas
pop
je
jno
adc
xchg
movsl
shll
dec
outsl
dec
cltd
xchg
rcr
out
fmuls
pusha
stos
mov
sarl
mov
pop
das
pop
pusha
sbb
shlb
mov
stos
xor
cmpsb
inc
mov
loope
or
cmp
push
xor
mov
fbstp
shl
mov
add
loopne
ret
sub
mov
jb
shlb
and
test
fmul
lahf
imul
in
dec
push
jo
lods
mov
fldt
lock
xor
pop
mov
mov
fsubrp
mov
rep
lds
stos
xor
xchg
pop
roll
jns
lret
jne
mov
add
jbe
rcll
xor
shl
ror
push
or
sahf
jl
inc
lahf
pop
push
stc
sub
in
int3
jb
adc
scas
test
insl
lcall
rclb
insl
stc
pop
or
dec
sahf
ds
lds
int3
in
jecxz
push
push
in
push
test
nop
xchg
pop
cld
jo
mov
inc
stc
lods
or
xchg
push
dec
jg
imulb
jno
into
fs
mov
in
hlt
repz
jo
mov
lock
pop
lahf
sti
xchg
or
clc
push
mov
adc
and
mov
mov
data16
cmc
popa
hlt
add
and
add
inc
es
out
dec
ret
mov
xor
inc
gs
xchg
mov
ljmp
jp,pt
aaa
mov
dec
sub
outsl
inc
pop
push
push
lret
out
push
in
movsl
ret
pushf
xchg
int3
fsubs
pop
sbb
xchg
or
mov
mov
lret
add
or
or
aam
inc
and
pop
mov
cmp
pop
pushf
push
nop
fnstcw
mov
loop
fisttps
or
fsts
nop
icebp
fsubl
test
rcrb
mov
roll
adc
xchg
xchg
jnp
xor
mov
out
mov
imul
inc
cs
inc
rep
sarb
push
aas
lcall
xchg
mov
mov
mov
xchg
rolb
and
fisubl
adcb
cmpsb
xchg
shrl
dec
mov
and
cmp
mov
pop
orb
inc
mov
outsl
int
pop
pop
out
popa
jg
int3
aas
negb
int3
inc
rcrl
push
push
sbb
xchg
and
sbb
jp
jge
sbb
out
dec
aam
push
pop
and
ljmp
push
add
and
shrw
aam
inc
aas
pop
aas
lcall
repz
add
mov
lock
inc
mov
jo
rcrb
popa
xor
jl
rorl
mov
shll
jmp
lret
out
mov
cmp
arpl
sahf
add
xor
clc
rclb
pop
jl
pop
icebp
pop
push
mov
aaa
cmp
cltd
ret
repz
push
cltd
xchg
xchg
in
daa
pop
aad
lds
movsl
and
scas
fisubrs
int3
mov
mov
sbb
xor
ss
fstpt
aam
dec
in
dec
dec
mov
lods
xchg
inc
dec
insb
dec
add
sbb
sub
addb
mov
fnstsw
aad
pop
xor
pop
repnz
adc
inc
push
or
movsb
jb
out
pusha
movsl
mov
jae
lods
imul
leave
out
add
je
push
jl
repz
sbbb
or
mov
mov
shl
dec
mov
inc
int
add
orl
cmp
sbb
add
pusha
and
jl
insb
test
iret
fbstp
jecxz
jecxz
sub
push
int
movsl
xlat
rcrl
jbe
or
sbb
movsl
mov
cli
sbb
cmp
loope
in
arpl
mov
jg
pop
push
add
jb
pushf
pusha
sbb
scas
jp
test
outsl
idivl
leave
sbb
push
cwtl
mov
add
push
lahf
ljmp
ljmp
sub
pushf
push
pop
xlat
push
add
dec
pusha
push
mov
lock
in
mov
inc
popf
inc
sbb
mov
ficompl
lods
arpl
les
and
dec
sub
cmp
sarl
inc
adc
push
sub
clc
enter
aam
add
inc
xchg
cmp
push
icebp
cs
push
fcmovu
test
in
push
inc
mov
fsubrl
repnz
js
hlt
and
loop
icebp
push
bound
adc
cmp
adc
clc
or
xchg
adc
or
mov
or
mov
mov
fistl
fcmovb
xor
nop
xchg
out
cmpsl
jl
inc
lahf
lea
jae
int
fcomp
fstps
xchg
aas
orb
pop
cmp
add
mov
and
addr16
je
cld
adc
mov
pop
push
lea
and
and
mov
mov
or
push
aaa
adc
dec
movsb
sbb
push
mov
mov
in
or
cmp
ja
adc
repz
dec
int
ljmp
aaa
aaa
sub
or
test
sbb
popf
sbb
inc
pop
inc
pusha
test
lcall
push
add
dec
test
sub
cld
enter
sub
insb
out
cmpsb
or
out
pushf
daa
jecxz
mov
pop
js
push
inc
mov
fwait
mov
jp
outsb
in
mov
jbe
mov
mov
inc
subl
jge
aas
jae
fnstenv
movsb
and
mov
pop
mov
dec
iret
mov
mov
mov
sbb
sbb
iret
rclb
push
ja
imull
inc
int3
cmp
out
sub
xor
push
push
sub
test
push
xchg
dec
cmp
jo
aam
sbb
xlat
xchg
xlat
ljmp
xlat
bound
cmpl
out
cmp
lret
stc
mov
loop
add
lret
mov
inc
shll
imul
lcall
lahf
ficoms
mov
cwtl
enter
imul
xor
jle
sbb
add
inc
mov
bound
sbb
pop
add
outsl
and
push
inc
fiadds
sub
movsl
mov
clc
xchg
mov
aad
fsubp
jns
push
pop
push
sub
add
dec
andl
ret
adc
mov
fcomp
sbb
orl
xlat
jbe
int
adc
mov
xchg
sbb
jae
test
mov
jo
adcb
push
jecxz
push
and
jno
and
fildll
xchg
cmpl
lock
adc
or
xor
rcrl
inc
and
mov
inc
jle
addr16
cmp
lods
repz
mov
sarb
gs
orl
adc
in
fcomp
rolb
outsl
jp
sub
xchg
xchg
inc
add
cld
pop
iret
loopne
cmp
jecxz
pop
ret
iret
mov
xlat
rolb
sbb
jns
notb
loop
aaa
jg
mov
pop
divl
stos
iret
imul
or
fwait
test
rcrb
shl
sub
dec
pop
mov
cld
pop
add
sbb
data16
int
mov
mov
xor
test
xor
xchg
or
pop
mov
dec
jg
in
sub
add
ss
call
mov
inc
imul
mov
and
scas
icebp
loope
lret
mov
mov
mov
mov
mov
movsb
dec
test
ss
xchg
jl
jecxz
push
les
inc
sbb
mov
je
out
insl
gs
call
mov
adc
sahf
adc
stc
movmskps
pop
mov
xchg
dec
pop
repnz
add
and
ds
jp
push
mov
mov
int3
adc
pop
lcall
mov
mov
jne
call
inc
and
fbstp
cltd
xlat
push
inc
adc
mov
cmp
jo
scas
jbe
inc
add
sub
daa
outsb
jne
sbb
mov
cmpl
xchg
pop
addb
sbb
lods
jg
sub
clc
out
mov
lds
pop
ds
lcall
sbb
push
xor
out
adc
call
cmp
ljmp
add
and
jne
pop
test
inc
insb
insb
int3
lods
cmpsb
jmp
iret
addr16
push
pop
andl
mov
mov
rcrb
add
mov
insl
mov
fbstp
rol
aaa
pop
ret
lods
arpl
dec
jbe
scas
jmp
mov
cmpsb
dec
and
or
lock
xor
insb
xor
outsl
mov
sbb
push
mov
int3
std
mul
jg
test
mov
lds
adc
stos
jo
out
jmp
fsts
std
fstpl
inc
cmp
or
mov
jae
sbb
in
inc
push
fsubrl
stos
in
dec
inc
mov
sbb
sub
dec
adc
jge
arpl
xchg
sbb
xchg
jl
sbb
dec
lret
test
adc
or
aas
sahf
xchg
fbstp
hlt
mov
into
xchg
xor
sub
push
pushf
idiv
jl
mov
ljmp
xchg
in
mov
xchg
mov
outsb
jns
hlt
cmp
mov
and
pop
jmp
or
push
push
imul
adc
push
loop
push
inc
dec
in
ja
ficompl
pop
popa
in
add
push
sub
repnz
xor
and
cld
gs
imul
loope
pop
inc
imul
mov
and
stos
loop
shll
inc
cmp
gs
das
ret
fsts
fsubs
mov
cmp
and
das
leave
inc
cmp
mov
lods
insl
js
push
pop
and
ret
xchg
ja
push
sbb
je
rcrl
into
idivl
or
xor
enter
into
mov
nop
or
test
in
std
jo
jb
or
dec
les
js
sub
jbe
mov
scas
lahf
testl
sub
movsb
iret
mov
lcall
ljmp
rep
mov
into
cmp
rcrb
mov
sbb
mov
add
fnsave
sbb
adc
xchg
test
lahf
fadd
cmpsb
lds
test
mov
sub
xchg
inc
outsb
dec
xlat
in
jmp
sti
icebp
cmp
jmp
cs
clc
daa
outsl
fimuls
dec
pop
mov
add
cmp
mov
inc
cli
pop
inc
jg
inc
mov
cmp
xchg
in
add
and
fstps
adc
cmp
add
testl
inc
popa
daa
ss
hlt
mov
and
lods
xchg
adc
fwait
mov
and
test
jl
jp
add
jecxz
sahf
repnz
sub
lock
bound
in
scas
mov
fisttpll
or
std
add
ja
pop
add
and
jns
je
out
inc
sub
add
xchg
addr16
movsb
mov
call
fbstp
pushf
jo
dec
mov
jl
mov
cmpxchg
or
mov
js
daa
int
cld
adc
dec
sbb
push
adc
push
imul
in
add
mov
dec
out
jp
add
and
mov
sti
dec
scas
xor
jns
mov
xor
or
xchg
sub
jp
push
dec
movsb
sbb
and
mov
data16
ret
lcall
sub
or
sbb
jns
out
mov
pop
push
sub
sbb
cmp
inc
cmp
jl
pop
lahf
push
mov
data16
dec
fidivs
test
jmp
mov
mov
adc
pop
xchg
lahf
into
int3
pop
mov
xchg
aaa
sbb
in
rolb
mov
dec
push
sub
dec
sub
sbb
jl
das
je
sbb
xor
fistps
sbb
mov
icebp
jbe
and
scas
xchg
inc
adc
lods
sbb
dec
cld
push
mov
fwait
mov
insl
faddl
scas
or
mov
push
in
bound
cmp
adcb
sub
inc
cwtl
pop
leave
push
cmp
mov
in
orl
mov
or
pop
dec
jmp
fstpl
mov
fisubs
mov
das
insl
mov
test
clc
jb
outsb
aam
and
dec
sub
mov
lds
enter
mov
and
jb
hlt
or
loope
adc
push
xchg
push
and
adc
or
xor
pop
or
or
ds
enter
mov
mov
and
sub
int3
out
add
sbb
xchg
cwtd
out
ds
hlt
popl
iret
rcrl
sbb
loope
scas
fs
jne
jl
mov
jl
aaa
mov
pop
mov
inc
out
out
scas
push
loopne
jae
shl
adc
fstpt
push
jge
inc
aas
andb
je
sub
mov
into
mov
mov
add
pop
xchg
scas
jnp
imul
call
cmc
stos
xor
dec
jecxz
mov
out
aam
test
push
fs
cmp
repz
fiadds
adc
jl
dec
repnz
pop
idiv
xchg
mov
adc
sbb
push
dec
clc
xor
xchg
sbbb
lret
xchg
bound
das
imul
jbe
scas
bnd
push
mov
inc
cwtl
popf
in
inc
push
mov
jb
xchg
out
jno
lret
sub
add
xchg
cmp
cld
gs
xlat
dec
imul
fld
inc
jecxz
inc
mov
sti
sti
xlat
cltd
jecxz
jmp
mov
clc
sbbb
das
dec
jp
xor
lods
cltd
lds
vmread
js
xor
jnp
lock
dec
mov
mov
xor
push
insb
sub
movsb
push
adc
das
aaa
cmp
inc
stc
mov
std
aas
pushf
lods
mov
cmp
sahf
mov
aas
push
or
sti
add
inc
fimull
dec
insb
sub
and
mov
faddp
jmp
adc
ljmp
test
in
fnstsw
xchg
pop
mov
mov
outsl
in
and
test
and
mov
popa
push
jecxz
testl
bound
add
loopne
and
and
or
jae
cmpsl
and
lret
iret
rcrl
scas
xchg
ss
and
repnz
cmp
push
scas
imul
leave
dec
stc
lcall
ds
shr
push
mov
arpl
xchg
mov
push
int3
test
dec
shl
push
inc
push
lcall
outsl
test
pop
fdivrs
mov
fcmovnb
dec
pop
cwtl
jae
push
mov
scas
dec
mov
adc
mov
inc
pop
fists
xchg
imul
insb
int3
fsubrl
outsl
rol
enter
stc
sub
int3
adc
jnp
out
jbe
xor
loope
jecxz
sub
mov
and
push
fadd
mov
pop
mov
lcall
pop
dec
mov
sbb
fisubrs
xchg
jl
bound
scas
add
push
aam
inc
mov
and
xor
inc
dec
mov
dec
jecxz
jnp
and
aas
xchg
ret
cltd
mov
std
imul
mov
nop
mov
mov
aaa
pop
jae
std
cmp
mov
cmpb
push
and
cmpsl
out
shrl
out
ss
mov
out
jle
lock
repnz
in
mov
and
mov
lea
sbb
lods
popa
div
jb
loopne
jns
in
mov
push
jg
fdivrs
je
mov
aaa
mov
stc
xor
idivl
dec
outsb
add
aam
jecxz
aas
cmp
push
xchg
imul
lea
or
jnp
xchg
int
and
daa
xchg
sub
loope
sbb
mov
or
insb
ss
testl
xor
pop
add
insl
jne
mov
pusha
cmpb
push
mov
jecxz
adc
or
div
add
push
fs
ja
orl
xchg
leave
in
adc
scas
les
push
pusha
add
push
mov
out
mov
test
orb
mov
adc
mov
loope
dec
shrl
aaa
xchg
ljmp
fnstenv
adc
cwtl
into
fbld
daa
mov
ret
push
adc
fdivs
lods
cmpsb
jne
and
popf
ds
xchg
and
inc
dec
std
or
sub
dec
dec
xchg
mov
jbe
rcr
push
arpl
xor
stos
lock
sub
stos
xor
jmp
mov
cltd
mov
and
mov
fimull
cmp
in
push
shll
adc
adc
jge
test
xchg
or
jl
cwtl
in
mov
push
nop
jmp
out
sub
bound
sub
jg
push
fstpt
inc
adc
push
and
in
loope
fcomp
aaa
stc
dec
sarl
in
dec
add
mulb
loope
dec
fidivs
adc
lods
adc
pop
add
jns
cmpb
cmp
lods
adc
add
movsl
repz
adc
xor
outsl
iret
test
roll
bound
dec
fbld
stos
add
insl
sbb
mov
call
shrl
mov
adc
idiv
fld
push
and
jne
popa
fsts
repnz
lock
xchg
lods
or
sti
scas
js
xchg
xchg
push
gs
xor
add
pop
mov
xor
lods
push
mov
loop
stc
push
push
dec
stos
test
xor
cwtl
out
mov
cmpb
mov
out
pusha
jle
enter
stos
in
mov
fimull
sub
mov
sub
movsb
in
jl
test
es
divl
shll
das
dec
sahf
ds
mov
test
mov
rcr
fwait
ss
xor
aaa
pop
mov
push
int
fdiv
jnp,pn
popf
push
lds
or
call
flds
inc
mov
dec
cli
pop
push
jo
fstps
out
and
xor
mov
push
pop
sbb
adc
je
xchg
popf
ret
in
into
cmc
sti
xor
and
or
in
nop
jbe
dec
int3
icebp
fnstcw
or
sti
xchg
ljmp
test
xor
sbb
ret
jge
adc
lret
mov
mov
cmp
iret
int3
insb
jb
xor
sub
inc
daa
fisubs
mov
xchg
incb
xchg
popf
adc
xor
sub
int
icebp
hlt
push
push
daa
mov
sub
mov
faddl
cmp
outsb
les
test
ret
cmp
sub
sub
lea
dec
cwtl
loop
popf
mov
mov
add
push
sbb
pop
outsb
fcompl
stos
mov
or
popa
sbb
btr
sbb
ja
mov
mov
je
mov
dec
sbb
daa
push
and
loope
add
scas
out
mov
das
shll
mov
mov
inc
adc
clc
sahf
and
add
mov
lcall
mov
dec
pop
sub
arpl
in
add
test
sbb
push
in
cmp
mov
lret
pusha
div
lahf
lock
cld
cmc
cmp
sub
add
sbb
sbb
lods
sbb
add
std
scas
push
cmp
and
sub
cmpsb
scas
addr16
clc
cmp
push
cmp
push
xchg
int3
lcall
insl
pop
enter
int3
jbe
xlat
ja
jo
or
int
leave
xchg
sub
pop
scas
dec
inc
mov
imul
in
fisubl
add
xor
stos
aam
ja
fs
push
inc
jb
fcmovne
imul
clc
fmull
daa
push
lods
not
add
lea
pusha
dec
fadds
cld
and
mov
sarl
popf
pop
lods
movsl
and
fcmovnb
mov
sti
cwtl
sbb
popf
pushf
dec
andl
sbb
xor
ja
shll
fs
and
adcl
lret
int
mov
fwait
sbb
mov
jp
mov
dec
cmpsb
lods
cs
orl
sub
sarb
add
lret
lods
pusha
xor
gs
ljmp
jg
aas
loopne
clc
in
mov
cli
rol
iret
pop
dec
andl
bound
sbb
ret
mov
mov
je
and
shll
test
push
outsl
jecxz
or
ljmp
int
cmc
sti
mov
push
hlt
dec
and
mov
inc
out
sti
lret
inc
jle
xchg
daa
mov
imul
and
jge
fistl
add
pminub
sub
dec
sbb
sarb
idivl
mov
repz
xchg
das
sbb
in
push
out
jle
mov
or
adc
nop
cmp
sahf
pop
loope
fisubrl
cmp
adc
inc
jg
popf
or
dec
loopne
daa
push
ss
test
xchg
sbb
insl
xor
mov
inc
inc
fwait
sub
and
or
jge
inc
inc
sbb
insl
rcrb
jecxz
cwtl
adc
inc
push
lret
dec
mov
aaa
in
movsb
pushf
mov
xchg
sarb
test
fdivs
jns
ss
aam
mov
push
das
pop
pop
lock
sbb
xchg
gs
jg
stos
adc
pusha
pop
scas
stos
or
xchg
mov
jecxz
mov
ret
add
fmuls
cmp
jecxz
pop
hlt
mov
dec
subb
mov
je
enter
popf
or
ljmp
dec
movsl
and
movsb
pop
jns
jns
mov
enter
subb
in
sbbb
cmp
inc
rclb
loop
mov
push
xor
mov
add
ret
mov
shll
xchg
sbb
adc
adc
mov
jne
adc
and
in
cs
lods
jge
lcall
out
cmc
into
push
push
pop
es
mov
adc
icebp
pop
ffreep
sti
lods
or
stc
push
xchg
pop
loopne
lods
out
insb
icebp
mov
sbb
icebp
vmwrite
pop
cmpsb
push
enter
cld
pop
mov
cld
cwtl
leave
popl
dec
xchg
dec
cli
add
pop
and
sbb
mov
mov
sbb
nop
ja
and
xchg
fistl
cmp
incl
repnz
cmpsb
scas
sbbb
addb
rorb
gs
imul
or
and
push
bound
mov
data16
cld
and
shlb
dec
mulb
mov
and
repz
cmp
repnz
pop
ds
repz
test
xchg
mov
iret
cmpsl
repnz
in
into
arpl
stos
mov
addr16
into
loope
test
mov
inc
xor
setbe
ds
imul
or
jle
cmpsl
bound
rcrb
sahf
or
ret
ds
sbb
aas
push
nop
xchg
inc
add
sti
mov
mov
rolb
and
pop
xchg
sub
cmpsb
inc
or
add
mulb
cmp
bound
call
ja
push
jno
lods
addb
jg
in
xchg
fisttpl
xchg
cmc
sub
push
xchg
movsb
mov
push
sti
lea
lret
jnp
mov
shl
cmp
cs
jne
lds
mov
push
add
rorb
mov
ss
lock
ljmp
add
adc
sub
mov
hlt
fistpll
les
push
sti
ja
in
pushf
mov
and
sbb
dec
add
push
lds
gs
lds
bnd
outsb
scas
in
cmp
fcmove
cmpsl
scas
push
mov
pop
lret
insl
cmc
fldt
js
popa
jbe
or
movsl
clc
mov
mov
ret
inc
jmp
in
hlt
sub
mov
psubd
fisubl
loop
mov
icebp
push
jne
lahf
lahf
mov
push
xchg
push
stos
andb
ljmp
loop
lret
in
lret
xor
push
inc
das
push
sbb
mov
loope
jle
loope
clc
inc
stc
lcall
out
pop
pop
into
dec
mov
jg
scas
ret
inc
or
in
nop
xchg
lahf
pop
andb
xor
shll
push
shrb
out
jnp
mov
icebp
stos
sub
mov
mov
mov
mov
lret
cld
ret
leave
test
lds
enter
shr
decb
cs
rclb
imul
xchg
int3
lods
pop
inc
gs
fcmovnb
mov
dec
cmc
cmpsl
pop
call
imul
fidivs
xchg
pop
das
insb
lods
loop
jle
adc
dec
pop
sub
pusha
cmp
pop
jmp
sbb
mov
pop
dec
and
test
test
out
mov
icebp
adc
inc
daa
jecxz
js
dec
mov
iret
pop
imul
pusha
and
mov
lret
test
adc
repnz
hlt
ss
sbb
test
mov
aad
pop
and
push
xlat
jmp
dec
pop
cmp
shl
mov
adc
shl
mov
push
ss
mov
xchg
les
mov
subl
cld
mov
or
aad
dec
imul
insl
xor
xor
adc
mov
mov
sub
subl
bnd
mov
rcrl
lods
int
cmp
cmp
xchg
imul
lret
cmp
repnz
mov
jne
mov
pop
hlt
inc
repnz
add
add
mov
xchg
lret
fisubs
test
sub
mov
loop
insl
std
ja
or
cmpsb
pop
sbb
cmp
add
iret
dec
xor
mov
mov
in
shl
cltd
mov
push
les
push
sub
shl
or
stos
push
in
push
pop
aaa
sbb
in
add
dec
mov
cmpl
xor
lcall
out
mov
jae
fs
mov
xor
std
dec
push
es
xchg
imul
dec
pop
mov
leave
fisttpll
cmp
xor
dec
cmp
xchg
das
push
sbb
out
jge
and
fsts
xor
mov
inc
inc
imul
fwait
test
movsl
out
mov
inc
arpl
xchg
jbe
mov
jbe
mov
push
sub
sub
jns
and
out
int
add
stos
add
jp
xor
mov
xchg
mov
aam
push
in
dec
inc
in
fwait
sbb
cmpsl
fdivs
out
xchg
push
mov
pusha
pavgw
mov
push
pusha
movsl
pushf
cmp
and
int
jo
xor
or
fistpl
xchg
mov
cmp
jmp
test
mov
inc
js
sub
mov
loope
mov
gs
jne
call
leave
dec
xchg
inc
inc
lret
nop
shrl
in
out
or
jl
mov
lods
fildl
mov
push
pop
add
andb
mov
movsl
nop
mov
push
mov
pop
mov
divl
fcomi
fistps
sub
in
aam
in
push
jecxz
add
shll
pop
dec
arpl
push
sub
cwtl
sahf
mov
icebp
inc
jno
fcomip
mov
jecxz
insb
push
in
xlat
aas
mov
arpl
lahf
xor
cmp
dec
add
add
push
out
push
jmp
les
mov
rol
push
test
adc
xchg
mov
fildll
jnp
push
ret
inc
outsb
sbb
xlat
ret
jbe
jmp
pop
and
repnz
cld
fcoml
flds
pop
sbb
jo
inc
daa
fiaddl
pushf
int
add
sub
in
mov
inc
xor
or
lods
ror
adc
clc
fsubr
pop
lret
xorl
push
jnp
sub
jl
stc
and
cld
fwait
xchg
mov
and
lahf
cmpsl
movsl
pop
adc
xchg
cmp
push
pushf
insl
pop
ss
push
mov
data16
pop
icebp
pop
push
and
fldt
push
popa
pop
push
pusha
jmp
gs
lea
mov
inc
rcr
push
sahf
sti
push
pop
mov
jecxz
cltd
sub
aas
push
xchg
lea
and
addr16
outsl
loopne
add
leave
out
ss
mov
iret
je
and
insb
mov
pop
mov
mov
sbb
cmpsb
push
push
push
or
rclb
out
mov
inc
movsb
mov
cmc
adc
jl
lods
push
ljmp
fisttpl
push
cmp
cmp
inc
pop
ret
sbbb
mov
jmp
mov
pop
pop
dec
insb
xchg
mov
in
mov
sahf
inc
jo
adc
cmc
xchg
idivl
fstpl
inc
loopne
icebp
mov
dec
mov
jno
out
xor
adc
mov
inc
stc
stos
adc
cltd
pop
mov
lret
mov
cmpsl
sub
rolb
jne
and
loope
jbe,pn
push
adc
in
divb
add
stos
clc
imul
fsubrs
adc
scas
jmp
xor
out
imul
imul
jb
out
in
das
ja
sbb
sub
push
jl
cmpsl
mov
xor
jmp
mov
and
or
popw
js
popa
jmp
inc
adc
inc
mov
mov
outsb
dec
xor
mov
ret
rorb
jmp
popa
xchg
leave
adc
xchg
cmp
iret
adc
nop
lods
pop
rorb
mov
pushl
lahf
out
dec
xchg
xor
sbb
fistpl
or
rcr
inc
xor
jo
push
jg
inc
lret
jge
push
mov
shlb
dec
sbb
jg
addr16
cmp
loop
imul
insl
or
sub
sbb
iret
test
bound
push
push
ret
mov
popa
mov
out
pop
lds
cmp
jl
xchg
xor
fwait
push
sub
mov
rorb
mov
push
xchg
add
sti
fstpt
insb
add
inc
push
movsb
add
test
test
push
dec
sbb
int3
xor
fidivs
xor
shl
fs
push
imul
mov
insb
pop
mov
inc
scas
mov
jge
or
enter
aaa
rol
sub
jle
push
mov
and
movsb
in
or
les
scas
divb
das
es
add
and
mov
dec
lahf
daa
mov
jb
shll
test
femms
enter
rcrl
mov
jnp
ds
lea
mov
dec
xlat
stos
sub
popa
add
or
in
inc
push
mov
jle
add
aas
add
movsb
dec
loopne
enter
lea
and
das
fisttpl
js
jnp
stos
sbb
mov
popa
repz
leave
sahf
mov
mov
bound
ja
out
mov
in
movsb
or
loope
xor
hlt
call
inc
test
sub
add
inc
ds
push
sti
out
and
mov
mov
fists
pop
mov
dec
push
pushf
js
bound
pusha
loop
inc
lods
pusha
sbb
add
pop
push
push
adc
xlat
imul
xor
or
mov
hlt
push
jge
adc
stos
dec
mov
cmp
adc
push
movsb
jl
cmp
jo
sbb
loop
mov
mov
addr16
imul
jg
add
dec
mov
rcl
adc
sti
call
jns
cmc
push
pop
popf
mov
sbb
aad
scas
or
loope
mov
fcompl
cmpsb
pop
push
ljmp
in
int3
jg
mov
iret
das
in
xchg
js
loope
scas
ljmp
fildll
push
xor
bswap
mov
gs
sahf
mov
lds
cmp
mov
dec
hlt
in
xor
sbb
arpl
mov
and
data16
sub
cltd
mov
push
fcoml
std
int
inc
sbb
repz
or
adc
repz
fcomip
pushf
movsl
in
and
mov
cld
popa
xchg
and
lea
cld
xor
enter
out
lahf
dec
sbb
xchg
ret
test
sbbb
repz
mov
sub
add
gs
roll
jecxz
stc
movsb
test
mov
jnp
out
call
call
loop
inc
mov
cmc
fsub
adc
loopnew
xchg
jp
cmp
dec
mov
jge
dec
inc
xchg
sbbb
stos
mov
cs
inc
push
cwtl
pop
ret
xchg
xchg
in
and
mov
and
das
sbb
sti
sub
test
adc
aad
cwtl
insb
mov
mov
lock
fnstsw
fildl
push
mov
jno
int3
bound
adc
and
addr16
pop
pop
sub
shlb
mov
mov
iret
aad
popf
adc
out
add
push
movsl
sbb
pop
repnz
mov
xor
daa
leave
rorb
mov
mov
fwait
lods
xchg
pop
movsb
in
pop
dec
adc
xchg
add
rcrb
shlb
sbb
jl
pop
cmp
or
xchg
jp
mov
insb
mov
mov
test
adc
inc
xchg
nop
mov
pop
xchg
lods
adc
dec
shlb
pop
mov
mov
or
fs
dec
sbb
enter
mov
pop
jb
mov
adc
add
pushf
or
jmp
push
pop
xchg
sarb
adcb
cli
cli
aad
jle
fwait
mov
imul
notl
sub
fwait
test
cltd
pop
mov
mov
clc
mov
xor
add
add
inc
daa
rolb
scas
negb
insl
xchg
aam
outsb
aas
jno
call
ljmp
ds
inc
ss
loopne
test
int3
int
icebp
jmp
vmptrst
or
dec
loopne
cli
mov
cmp
fcoms
leave
add
imul
xor
and
ljmp
mov
sub
xchg
push
inc
cmp
pusha
add
aad
xor
push
and
cs
imul
sbb
inc
cmp
cli
inc
cmp
jg
movsb
pop
or
in
or
icebp
data16
push
cmp
adc
inc
xchg
popa
imul
fwait
jmp
cmp
mov
jg
pushf
sbb
sub
sub
pop
sub
pop
rcrb
xor
pushf
clc
adc
jge
mov
cmp
sbb
cmp
cmpsb
jb
test
mov
in
cld
and
xchg
and
inc
xor
or
ret
hlt
int3
decl
jp
sti
ret
push
cmc
xchg
push
mov
push
mov
jne
in
mov
jbe
pop
pop
out
lret
jo
inc
mov
adc
jns
xchg
jnp
repz
outsb
sbb
push
xchg
test
mov
jnp
adc
ja
rorl
hlt
popa
movsl
sbb
add
sub
push
int3
mov
leave
pop
lods
fsubrs
jecxz
xchg
xchg
lea
mov
adc
aad
mov
sub
sahf
jecxz
jno
jmp
adc
lock
inc
push
out
mov
xchg
rcrb
lcall
std
xchg
xchg
jbe
push
and
push
mov
popf
movsb
je
adc
fldt
pushf
add
pop
jle
dec
sti
push
or
pop
lea
pop
push
sbb
dec
fadds
adc
shlb
fwait
or
dec
sbb
adc
sub
mov
mov
addr16
jp
fcomp
rcrb
jnp
jl
sbb
mov
inc
leave
jno
fldcw
testl
jmp
push
adc
sbb
xchg
dec
jge
cmpsl
or
jne
inc
fnstenv
int3
inc
xor
fwait
push
jo
fs
in
lea
xlat
popf
test
push
sbb
xchg
and
cmp
scas
bound
mov
xchg
mov
push
or
cmp
ret
push
adc
push
jmp
mov
ja
insl
insb
scas
fldl
stc
hlt
clc
fcmove
pop
stc
push
jae
fwait
dec
or
aad
shlb
xchg
fidivs
aas
jno
sbb
mov
dec
add
jmp
aaa
lods
adc
mov
pop
add
xor
mov
pop
adc
and
das
dec
cld
add
jg
daa
repz
cmc
leave
dec
sbb
fldenv
sub
iret
test
out
in
mov
cmp
inc
cmpsb
sbbl
mov
dec
push
lcall
cmp
sbb
sbb
aad
insl
sbb
push
add
mov
adc
mov
add
insl
xlat
xchg
dec
cmpsl
cmp
jns
sahf
gs
mov
cs
inc
push
rcll
adc
jb
dec
imul
pop
ljmp
jne
or
insl
jae
lea
repz
addr16
jg
inc
insb
cli
jmp
sub
das
daa
imul
fwait
mov
inc
repz
mov
out
fistpll
mov
sbb
test
inc
mov
fldenv
bound
inc
insl
cli
mov
xlat
inc
mov
cmp
xchg
lahf
fs
sub
icebp
addr16
jb
movsl
jb
mov
xchg
rorb
or
test
xchg
and
sub
mov
pushf
sub
aam
inc
cmpsb
sbb
scas
clc
jg
out
subb
nop
pop
fsts
test
xchg
sbb
pop
in
push
cmp
shrb
stos
int
cli
fs
mov
add
mov
add
shll
fucomi
mov
arpl
jno
sbb
adc
jp
lock
sub
jge
sbb
repz
mov
sahf
dec
rcrl
mov
jae
and
lods
add
sar
add
cmp
adc
cmp
daa
lret
sub
call
xor
cli
bound
lret
or
ljmp
fdivrs
mov
pushf
jmp
cmc
mov
sahf
adc
lcall
aad
jo
adcb
sbb
xchg
dec
sub
push
jae
std
or
dec
sub
lret
sarl
lret
sub
dec
sbb
sti
pop
sbb
cmp
ror
mov
jns
jne
stos
sub
xor
and
sub
dec
sbb
or
sub
fsubs
mov
pop
inc
lods
cmp
adc
daa
lock
xor
mov
sbb
dec
in
xorb
dec
fnsave
push
inc
dec
out
inc
inc
cmp
pop
add
mov
push
pop
dec
mov
shrb
ljmp
shrb
test
out
arpl
add
push
or
mov
cmp
push
mov
sbb
and
shr
outsl
icebp
stc
out
rcrl
push
push
ficoml
ret
pop
add
fsubl
xchg
arpl
ds
je
adc
sbb
js
in
inc
xor
notl
negl
scas
in
sub
loopne
adc
add
mov
dec
or
mov
mov
and
pop
cltd
sarb
adc
mov
sbb
rorl
aad
mul
test
add
stos
adc
mov
push
je
jo
rclb
push
dec
fwait
mov
cmp
mov
adc
add
add
nop
jne
not
mov
scas
fidivs
pop
neg
int3
out
rorl
jp
fbstp
nop
push
divb
mov
mov
pop
adc
mov
sbb
mov
xor
test
lock
cmp
jle
hlt
jg
mov
dec
mov
sbb
jge
xor
lahf
inc
gs
in
aam
push
mov
mov
loop
pop
adc
lcall
aad
jecxz
xor
sub
mov
pusha
insl
lcall
ret
mov
pop
ror
push
jge
out
pop
jnp
push
jo
xlat
inc
xchg
fists
dec
or
incb
mov
sub
push
xchg
scas
cs
sarl
mov
int3
pop
hlt
inc
or
cmp
dec
add
cwtl
pop
pop
push
sarb
enter
repz
and
cmp
jmp
stc
fucomi
sbb
or
push
rcll
js
enter
or
or
js
pop
and
mov
fldenv
xchg
cmc
mov
scas
xchg
lcall
sub
pop
movsb
xor
fsubrl
jl
cmpl
or
imul
jne
sub
pop
nop
call
lahf
sbb
mov
ljmp
aam
in
fwait
cmpsl
repz
sbb
mov
lahf
out
aad
jo
ljmp
aaa
add
leave
in
xchg
mov
pop
push
ret
xor
lds
nop
or
lret
push
loop
lret
jle
aas
xlat
sub
subl
mov
loope
mov
std
pop
mov
icebp
mov
cli
sub
aad
hlt
add
hlt
adc
adc
jno
js
mov
mov
in
sti
iret
hlt
int3
adc
pop
clc
adc
nop
sub
test
subl
jnp
das
int
and
add
loopne
push
mov
push
pop
ss
lods
fs
cmpsb
pop
imul
pop
gs
sbb
sub
sub
lret
mov
sub
std
ret
or
pop
out
jmp
das
mov
fdivl
pop
in
scas
scas
and
into
push
std
fcoms
mov
popa
nop
xor
enter
dec
xor
nop
lahf
insl
cmpb
js
sub
pushl
iret
in
outsl
int3
or
jne
xor
adc
and
cmp
xchg
push
add
arpl
es
dec
std
sarl
mov
cmpsb
mov
sbb
cmp
xchg
in
xchg
mov
adc
jp
cmpsl
push
repnz
adcb
xchg
cmpsb
mov
addr16
ljmp
xchg
rclb
push
loope
xchg
lock
cmp
lea
jg
mov
and
call
jns
or
popa
mov
jmp
imul
lods
mov
bound
and
lea
xchg
mov
notb
push
js
pop
and
insl
test
sub
push
jl
mov
sub
ffreep
test
test
mov
inc
fcomps
das
mov
push
mov
lods
pop
jecxz
call
sub
dec
popf
repnz
xchg
add
out
imulb
cmc
adc
fbstp
lds
xchg
adc
in
sbb
pop
cmpb
stc
out
inc
cltd
xchg
fs
inc
cs
mov
push
fwait
push
inc
aad
jb
cmpsl
call
or
je
sub
and
rcll
in
push
dec
loope
sti
and
fmul
inc
not
jbe
or
pop
aam
lahf
in
mov
inc
icebp
add
rcll
xchg
rcrb
jb
movq
inc
xor
mov
sbb
mov
mov
push
mov
sub
orl
popa
add
or
dec
jb
jl
xchg
test
in
mov
xchg
sarb
jns
adc
ucomiss
and
lods
cmp
mov
cld
jecxz
rorb
dec
inc
fwait
or
mov
inc
or
sbb
cmc
lods
cmp
add
xchg
scas
sbb
aaa
fildll
stos
fwait
mov
movsl
jg
xchg
xlat
jmp
mov
mov
mov
lods
xchg
mov
out
push
dec
fdivp
xchg
dec
sbb
or
inc
mov
xor
shrb
or
insb
xor
fwait
adc
or
arpl
jp
sub
stos
rol
lods
jl
add
scas
inc
cmp
pop
lds
jns
adc
mov
mov
sub
push
jb
cmpsb
ret
out
aas
sarb
call
cltd
mov
and
call
fstl
pushf
dec
mov
aas
into
push
xchg
push
insl
or
rcl
adc
or
inc
cmpl
enter
adc
incl
jge
push
jb
movd
jne
repnz
xor
mov
mov
sbbl
mov
ja
movsl
and
daa
pop
cmp
and
mov
xchg
iret
pop
stc
pop
mov
mov
shlb
jge
lods
rcll
and
sub
mov
sub
cli
pop
sub
mov
mov
and
jp
sti
pop
fwait
pop
addr16
cmpsl
fcompl
daa
mov
data16
push
add
cmpl
cmc
mov
lahf
lock
xchg
jnp
mov
jns
sbb
xor
ss
sarb
xchg
out
pxor
loop
ret
push
xchg
add
dec
out
xor
mov
out
pop
dec
cmc
ret
lahf
cmpl
jecxz
enter
mov
xchg
pop
fldenv
add
xchg
and
sbb
leave
inc
lcall
and
adc
sbb
cltd
lcall
mov
dec
jne
xchg
fisubs
mov
fistl
scas
ficompl
inc
or
aas
clc
push
sbb
jecxz
mov
shr
pusha
leave
inc
jp
push
mov
dec
jns
roll
call
popa
pop
xchg
push
sbb
and
pushf
xor
jb
mov
loope
testl
dec
jg
fidivrl
into
jbe
jle
sarb
idivl
dec
xor
push
gs
fldcw
jmp
xchg
cmp
or
inc
adc
pushf
iret
sub
fcmovbe
aam
cmpsb
jns
ja
jmp
push
imul
sub
sbb
lcall
xchg
es
pop
sbb
push
les
sub
adc
sahf
xchg
sahf
insl
jnp
xchg
fldt
lea
mov
mov
push
lods
test
xor
lock
test
leave
popa
xchg
nop
sub
loope
or
or
xor
sub
cmp
mov
sub
mov
adc
sahf
xor
xchg
mov
rol
mov
and
adc
xchg
push
rclb
mov
shll
aaa
sbb
mov
cmp
test
pop
mov
stc
xor
clc
xor
dec
leave
outsb
movsb
add
mov
lret
scas
dec
pop
cmpsl
adc
cmp
in
imull
test
inc
popa
lcall
pop
shl
push
cmp
dec
push
cmp
jns
ficoml
arpl
movsl
fdivl
adcb
adcb
cmp
mov
jb
sub
rcll
dec
lds
mov
push
xchg
inc
mov
adc
push
fidivrl
jns
jge
shl
pushf
mov
in
aas
jmp
add
addr16
push
fsubl
out
sbb
sub
insb
sbb
je
mov
movsl
je
mov
sub
mov
out
lahf
mov
clc
incb
shlb
cmp
adc
xor
add
idivl
cli
stos
inc
push
jnp
movsl
dec
cltd
out
xchg
stc
addr16
jle
sarl
insl
and
and
clc
mov
lods
xor
pushf
shl
jb
adc
sub
pop
daa
faddl
das
fldt
add
pop
packssdw
scas
addr16
in
popa
mov
jl
dec
sub
or
inc
sbb
xchg
cmp
xor
mov
sub
lea
mov
push
in
out
sub
repnz
sbb
xchg
xchg
gs
dec
rclb
dec
sbb
out
shlb
pop
test
ljmp
sub
data16
in
cmp
loop
dec
push
xchg
jp
in
call
pop
jb
stc
push
mov
cmp
push
inc
jno
mov
xchg
and
add
divl
xor
xor
ss
jl
jg
rcr
inc
movsl
and
nop
and
addr16
adc
ljmp
aad
es
and
xchg
or
pop
xlat
adc
push
push
call
test
outsl
ficoms
das
leave
xchg
les
mov
pop
cld
cli
add
cmp
outsb
cmp
jge
jp
popf
sub
jnp
pop
cs
mov
mov
mov
xchg
mov
push
and
inc
aas
clc
adc
pop
movsb
push
mov
inc
cmpsb
dec
out
pop
shrb
push
add
jno
jle
cmp
insb
and
stos
hlt
mov
hlt
arpl
xor
stc
ljmp
outsl
pop
add
cltd
mov
cmp
xchg
fsubrl
cwtl
pop
test
jle
ss
into
add
shll
jns
mov
les
popf
fidivrl
and
mov
jns
ficoml
add
es
ja
fisttpll
jle
adcl
pushf
push
pop
in
pop
cld
push
aas
and
loopne
mov
push
and
scas
jnp
fcoml
cmp
arpl
xor
pop
shl
xlat
or
jae
inc
cmp
xchg
outsb
dec
jge
jb
sbbl
mov
sbb
ja
cmpl
fsubrs
add
lods
fists
pop
in
xchg
daa
lret
inc
mov
and
jo
dec
out
or
mov
xchg
inc
mov
xchg
sub
dec
popf
mov
rcrl
std
mov
out
jmp
sbb
dec
push
cld
insl
lock
mov
scas
aaa
push
mov
dec
int3
aaa
sarb
movsl
std
xchg
and
or
xchg
jns
adc
xchg
in
xor
fiaddl
push
push
inc
or
jbe
frstor
xchg
je
cmc
fwait
arpl
mov
into
shll
fldl
ss
mov
adc
outsb
pop
and
mov
subb
inc
scas
mov
mov
mov
loope
push
mov
pusha
scas
mov
das
out
xor
adc
dec
sub
pop
arpl
xchg
pushf
cwtl
pushl
or
icebp
cmp
inc
mov
test
sub
and
xor
inc
pop
inc
daa
push
hlt
push
test
pop
clc
lret
mov
or
fwait
out
adc
cmp
int3
push
xlat
jae
repz
adc
mov
jmp
out
xor
call
jmp
mov
imul
cmpsb
push
shll
xchg
ja
in
lahf
xor
jg
mov
push
insb
fstps
add
jge
push
shrb
pop
and
adc
fcoms
mov
push
mov
adc
iret
loope
inc
xchg
insb
rcrl
cwtl
pslld
xor
or
pop
or
popa
push
cmpsb
imul
int3
test
jno
clc
dec
lahf
xchg
jne
repz
lahf
jl
rcr
xlat
push
les
gs
add
adc
cmp
pushf
cmpsb
mov
and
xlat
out
push
sbb
movsl
aas
push
push
sub
mov
fwait
xchg
hlt
sbb
jmp
stos
lar
shll
clc
sub
stos
pushf
mov
push
enter
lock
shll
add
lcall
les
sub
push
jge
and
out
mov
popf
in
adc
xlat
shlb
ja
xchg
mov
arpl
into
cmpsl
or
in
pop
pop
sub
aad
dec
ss
xchg
loop
or
sbb
push
push
xchg
push
fimull
mov
inc
mov
movsl
orb
repz
adc
jecxz
mov
movsl
dec
push
mov
fdivrl
sbb
mov
xor
mov
pop
mov
movsb
jno
xor
mov
jmp
mov
adc
sbb
into
and
int3
inc
push
push
mov
movsb
xor
dec
orb
scas
iret
xchg
test
jns
adc
js
stos
imul
mov
icebp
sub
mov
add
mov
call
mov
push
aaa
out
scas
pop
xchg
push
pop
or
fwait
xchg
outsl
outsl
push
cmp
mov
add
popa
in
mov
cmp
cs
jge
fsubr
jne
xchg
push
aad
jne
jl
mov
sti
xor
xor
push
repz
lcall
and
fildl
or
out
rclb
imul
jecxz
dec
aas
aas
movb
mov
es
adc
fisubs
jae
ja
and
lods
fwait
mov
jp
pop
imul
call
mov
pop
jmp
call
nop
ss
lea
adc
fistpll
add
dec
mov
xchg
and
mov
push
std
les
int3
and
movsl
rclb
sub
movsb
fnstcw
and
jbe
mov
mov
test
cmc
xlat
and
scas
inc
ds
and
jne
inc
mov
jnp
jl
stc
jle
fsubs
lds
inc
mov
push
adc
inc
lret
faddp
mov
add
out
stc
cmp
in
in
mov
xor
test
shl
cmc
jg
add
test
jbe
add
je
jne
mov
ret
stc
push
push
inc
mov
aad
mov
inc
jp
mov
or
leave
and
test
mov
adc
adc
ds
les
aam
adc
pop
iret
xchg
or
rol
and
or
daa
xchg
push
jle
in
pushf
xchg
sub
daa
rdtsc
add
shlb
push
push
or
shrb
test
sub
out
mov
jo
pop
scas
roll
push
push
scas
shll
daa
mov
int
sbb
xchg
ljmp
sub
or
test
mov
into
popa
ljmp
mov
js
xchg
insb
mov
cmp
sub
push
lock
cmc
add
xor
inc
or
fsubrp
fadds
lds
jb
adc
test
mov
cmpl
mov
inc
or
xor
mov
dec
out
loop
movsb
push
mov
jns
pop
lcall
fnstenv
lahf
jbe
push
jg
jns
adc
sbb
adc
imul
shrl
mov
cmp
mov
mov
add
mov
sub
aad
loopne
mov
mov
adc
add
jo
cmc
and
ss
pop
jg
dec
loope
mov
stos
cmpsl
stos
add
das
popa
adc
or
mov
rcrb
inc
stos
adc
repnz
sbb
cmp
sub
outsl
pop
clc
icebp
mov
arpl
mov
xchg
add
xchg
sbb
ja
sbb
cltd
jnp,pt
xor
aam
rcrb
pushf
cmp
mov
aad
dec
cwtl
add
pop
out
jg
jp
insl
inc
sbb
stos
push
jmp
sub
cld
cmp
mov
clc
jnp
push
jp
mov
cmpsb
add
pop
pop
add
jecxz
pop
jp
xchg
popf
fdiv
push
ds
std
xor
out
cmpsb
push
add
jne
push
pop
int
dec
scas
outsl
mov
pop
enter
sub
insb
jb
data16
lds
pushl
fsubl
mov
in
inc
out
fnstenv
or
test
fstps
sti
mov
leave
aad
mov
ret
aam
xor
mov
dec
add
cwtl
iret
add
mov
mov
mov
xor
fs
ret
fdivrl
stc
jae
xchg
test
fwait
decb
gs
out
push
mov
mov
cmp
or
fstps
imull
xor
cmp
movsl
mov
mov
pop
cmp
or
ja
pop
push
sahf
ljmp
insb
push
insl
imul
jp
push
daa
jno
and
shlb
out
mov
std
fcoms
data16
cmc
lods
or
cmpsl
imul
dec
sub
mov
aaa
sub
mov
fs
popa
adc
ljmp
lock
int3
nop
xor
dec
dec
adc
fsubrl
jl
into
and
fcmovnu
cltd
sub
jnp
loop
shlb
loopne
fs
into
cld
xacquire
sbbl
cmp
add
or
das
push
movsl
cli
add
mov
inc
lcall
fsubr
or
jb
sbb
or
mov
and
dec
mov
sbbl
cmp
sbb
sarl
pop
sub
pop
lret
jle
addr16
push
inc
sub
jo
mov
and
cli
xor
sbb
out
cmpsb
push
mul
call
clc
push
inc
fldenv
pop
sub
dec
mov
insb
hlt
inc
mov
push
push
sahf
mov
sbb
fstp
jl
mov
jecxz
ds
into
insl
push
scas
loopne
sahf
mov
loopne
bswap
or
inc
adc
inc
add
sub
fcomip
fisttpll
dec
mov
mov
dec
adc
mov
sub
xchg
int3
fistpl
dec
mov
pop
dec
lret
sub
ret
sub
pop
fidivl
pop
leave
fcmove
pop
lahf
fiadds
cmc
adc
out
cmp
cmp
or
adc
mov
and
or
add
add
mov
dec
cs
addr16
push
in
push
cmp
cmp
fidivrl
mov
in
ret
dec
pop
xor
test
lea
xchg
pop
xor
idivl
sbb
aad
xor
mov
sub
jnp
xor
in
jecxz
arpl
pushf
rcrl
sub
sub
xchg
pusha
insb
inc
xor
aad
jmp
xchg
sbb
adc
loopne
cmp
push
push
lcall
icebp
stos
dec
jecxz
xor
lret
jnp
sahf
push
fmuls
int3
cld
shl
loope
dec
xchg
bound
ds
pop
jecxz
into
add
xchg
out
push
pop
push
popf
int3
shr
mov
pop
cltd
cwtl
movsl
cli
rolb
into
sub
adc
push
push
push
jle
mov
add
scas
mov
mov
mov
test
addr16
inc
sbb
add
inc
call
add
jnp
mov
cwtl
mov
sti
sbb
pushf
leave
mov
divb
sub
sub
fcomps
fisubs
adc
jmp
inc
pop
mov
jns
sbb
push
stc
movsb
shlb
mov
in
std
xor
or
movsl
inc
sub
jbe
inc
ret
in
imul
jg
push
and
leave
xchg
out
shlb
fstpt
jae
repz
jno
movsb
push
sti
es
movsb
data16
sub
addr16
jmp
enter
add
sbb
fisttpl
ds
mov
icebp
dec
jnp
sbb
test
mov
movsb
out
mov
int
or
sbb
mov
int
cmp
stos
add
es
imul
fwait
adc
pusha
call
adc
mov
enter
cmp
jge
daa
sub
jl
out
pop
pop
hlt
lcall
inc
mov
or
xchg
sub
out
xor
dec
std
inc
sbb
xor
push
in
jne
aad
sub
mov
loopne
int
sub
sub
int3
bound
jns
loopne
ljmp
xchg
and
daa
xchg
push
movsl
mov
adc
nop
and
int3
push
mov
xchg
inc
mov
sbb
out
adc
inc
mov
fs
loopne
or
mov
cmp
push
jmp
inc
sub
pop
test
mov
lret
cltd
inc
stc
repz
jg
mov
pop
scas
add
inc
outsl
and
add
push
pop
iret
pop
mov
lcall
push
sub
adc
xor
in
pop
fistl
mov
push
pop
in
mov
sub
int
mov
imul
sub
mov
adc
loopne
cmpsl
mov
mov
mov
cld
push
in
mov
lcall
jle
rorl
fisubrl
sub
nop
sub
pop
push
ljmp
enter
xor
adc
lods
and
lds
sub
or
pop
xchg
mov
push
adc
sbb
fyl2xp1
fnstsw
or
push
adc
cwtl
mov
jp
dec
pusha
lds
scas
fldz
cli
inc
je
mov
cmpb
into
xor
xchg
dec
enter
or
push
leave
inc
adc
aas
jb
sbb
imul
xchg
adc
pop
negl
jnp
pop
ss
loopne
sub
or
jp
mov
fwait
inc
add
mov
cmp
mov
pop
shll
cld
js
sbb
jp
cmp
inc
jmp
in
ja
les
dec
inc
mov
pop
pop
xchg
scas
and
xor
mov
push
mov
pop
dec
jb
push
add
xchg
mov
push
imul
and
jecxz
mov
imulb
mov
dec
xor
lret
pop
sub
out
push
imul
lcall
call
mov
cmp
shl
bswap
pop
xor
xchg
jo
mov
aam
pop
mov
in
jge
test
ret
mov
mov
sbb
test
movsl
pop
inc
cmp
add
or
mov
pop
pop
call
dec
xor
ljmp
xchg
fsts
js
fisttpll
xchg
push
in
sub
dec
or
sbb
fwait
push
mov
bound
or
test
stos
sbb
loope
mov
sbb
or
es
stos
icebp
pushf
adc
inc
pop
add
iret
pop
ljmp
or
lods
xor
inc
mov
ret
ret
ret
sub
ja
cwtl
mov
movsl
sbb
pop
js
in
sub
adc
sbb
lea
mov
andl
xchg
cmp
arpl
push
sbbb
pop
lock
out
jne
lcall
cwtl
jmp
rcr
jmp
pop
jae
sbb
repz
daa
lds
jecxz
push
icebp
or
and
aas
testb
leave
add
scas
push
add
lds
push
and
mov
lcall
aam
add
xor
rcr
inc
and
movlps
cwtl
pop
sbb
je
test
sbb
and
xchg
xchg
punpcklbw
push
and
ja
add
mov
int3
or
xchg
adc
gs
shlb
or
mov
fildll
mov
sub
sbb
scas
dec
push
andb
dec
out
cmpsb
ret
fisttpll
je
data16
mov
stos
popf
mov
xchg
jae
mov
pop
inc
adc
mov
leave
pushf
lds
clc
lcall
mov
fwait
ds
pop
into
mov
ret
or
aad
mov
jno
cld
movsl
mov
mov
pushf
pop
movsb
mov
int
cmp
cwtl
jle
lods
stos
pop
push
fimuls
xlat
aad
cmp
xor
loop
xor
mov
iret
insl
sub
addb
movsl
xchg
adc
cli
push
xchg
pop
test
cmp
jg
ret
mov
ror
lcall
lock
mov
or
iret
mov
bound
sub
call
sbb
cmp
cmp
xor
pop
cli
incl
ret
insb
jae
arpl
mov
sbb
push
sub
orb
jl
fsts
fsubrp
icebp
in
sbb
xchg
or
add
ss
and
adc
cmpsb
mov
decl
mov
ret
cmp
ret
iret
add
jmp
sub
xor
bound
lock
push
jmp
mov
jns
pop
shll
inc
inc
mov
dec
leave
fcmovnb
testb
test
ffree
xchg
cmpsl
cmpsb
icebp
std
mull
mov
les
lea
sbb
mov
inc
sub
test
pop
into
ds
xchg
jns
adc
push
mov
adc
fsubs
mov
xlat
jmp
scas
inc
loop
jne
popf
insb
outsb
je
out
les
xor
fucomp
or
jecxz
adc
push
shr
jecxz
and
push
addr16
stos
icebp
jmp
sti
loop
mov
push
xor
sub
pop
dec
dec
adc
test
cmp
cmp
xor
outsl
clc
sub
ret
adc
inc
and
pop
aad
jns
sbb
sbb
push
js
sub
js
imul
lahf
sarl
push
or
mov
sbb
cwtl
or
push
xchg
mov
js
inc
scas
imul
adc
ret
std
adcb
push
mov
sbb
xor
pop
into
jecxz
sub
rorb
das
xor
popf
repnz
das
jecxz
dec
sti
bound
jo
adc
lods
arpl
cmp
cmpsl
lea
dec
xchg
pop
js
in
inc
or
jno
xchg
jnp
xchg
fwait
pop
cwtl
or
sub
xor
fwait
in
aas
jb
lock
mov
ficoml
add
mov
xchg
inc
test
and
insl
lds
in
jecxz
push
les
rcr
inc
xor
divl
push
sbb
cltd
stc
imul
jp
cmc
xor
cmp
xorl
inc
pop
mov
ss
jecxz
xchg
push
pop
bound
sbb
sbb
push
ret
jno
xchg
sub
cmp
ss
sbb
lods
xor
sub
lods
lea
lea
jae
sbb
push
sahf
adc
pop
je
adc
out
xchg
pop
rclb
or
pop
xor
push
inc
rcrb
cwtl
pop
cmp
fs
or
ret
xor
outsb
clc
test
iret
sahf
push
int3
push
fwait
dec
mov
and
sub
sbb
orl
mov
jmp
pop
xor
cwtl
popf
push
fstpt
xchg
repz
mov
xchg
lods
cmc
mov
adc
test
or
mov
adc
push
int3
out
sub
mov
mov
std
sbb
popa
in
pop
pop
daa
jge
stos
in
add
roll
mov
lret
jns
imul
lds
fwait
call
jge
xor
stos
or
push
pusha
pop
daa
imul
fldcw
xchg
dec
gs
nop
or
push
nop
sub
aam
dec
rdmsr
ret
push
lods
cmp
add
jecxz
xor
lods
add
call
addb
scas
push
dec
push
add
mov
js
lds
dec
test
fadds
jmp
insb
pop
cwtl
jmp
jecxz
xor
inc
sti
mov
fmulp
mov
jg
mov
aam
xlat
sbb
add
sub
mov
cmp
pop
in
arpl
fwait
cmp
int
xchg
mov
cld
mov
sub
cs
xchg
mov
ja
push
adc
mov
sbb
add
dec
pushf
into
pop
movsb
out
push
inc
je
pop
popf
aaa
sahf
pop
dec
xor
mov
int3
mov
lcall
adc
negb
pop
push
test
push
and
xor
loopne
and
fildl
pop
iret
xor
mov
mov
cmp
cmp
mov
push
loopne
stos
mov
jmp
lcall
sbb
adcl
or
mov
pop
sbb
insb
xor
notb
fmull
mov
jmp
imul
dec
xchg
cltd
mov
dec
mov
inc
movsb
ja
add
sub
ds
add
jbe
pop
lods
movsb
js
loope
repnz
outsb
dec
or
lret
pop
jp
in
aaa
add
pop
jmp
sub
mov
rcr
sbb
stos
dec
divb
push
pop
and
adc
lea
push
out
sub
popf
cmp
jmp
bound
push
lea
fisubs
inc
hlt
adc
push
in
bound
add
push
cltd
mov
jnp
lds
and
mov
pushl
filds
popa
scas
or
je
inc
jle
mov
in
lock
pop
mov
cmp
outsb
insb
mov
sahf
xchg
sbb
lock
mov
push
jbe
incb
pushf
mov
ja
lds
and
mov
add
mov
stc
std
hlt
jg
pusha
mov
call
ficompl
and
ret
pushf
push
jl
mov
in
rolb
push
fisubrl
cmp
push
addr16
sbb
lods
ror
mov
pop
cmp
movsb
and
movsl
aaa
push
jmp
fstpt
xlat
mov
jg
xlat
sub
xor
sub
and
ja
gs
out
popa
pop
or
ficompl
dec
add
test
rcrb
in
pop
push
movl
out
scas
mov
cld
sahf
pushw
cmp
mov
adc
ds
push
add
pop
ret
sub
test
mov
sub
adc
push
cmp
lret
xchg
sbb
lcall
mov
fidivrl
out
sahf
fisttpll
mov
dec
xchg
scas
out
xor
mov
shl
into
xor
xor
add
lock
lcall
rorl
xor
mov
aaa
pop
loopne
test
cwtl
popa
sbb
popf
leave
xchg
sahf
ret
pop
mov
push
xor
push
jle
scas
cmp
xchg
inc
clc
lret
std
pop
scas
cmp
sbb
cmp
jg
popf
jbe
pop
mov
jmp
les
sub
or
and
dec
nop
mov
into
cmp
mov
xor
pushl
sbb
sub
xlat
sub
jmp
inc
jl
lock
pop
out
xchg
adc
lcall
push
dec
repz
mov
inc
cwtl
cwtl
sti
mov
xor
shl
std
pushf
xor
adc
movsb
rorw
or
repz
jmp
xor
out
sbb
aas
lds
and
mov
add
mov
lret
adc
int3
addr16
mov
cltd
cmpsb
sbb
inc
prefetch
mov
cld
jp
mov
push
pop
mov
int
mov
scas
jecxz
jmp
adc
or
nop
test
or
inc
jmp
push
adc
inc
sub
fwait
repz
sub
dec
iret
mov
push
imul
shlb
add
aam
jle
adc
in
fildll
jb
ror
mov
cmc
inc
mov
insb
movsl
pop
dec
adc
jne
jg
add
and
dec
scas
inc
stos
xrelease
sahf
lock
mov
jg
xchg
cwtl
mov
and
xchg
mov
nop
ds
inc
test
xor
jnp
subb
cmpsl
out
dec
cmpsl
sar
jl
adc
test
adc
lret
setl
nop
movl
inc
adc
and
xrelease
inc
mov
add
in
lock
fidivrs
test
cmp
mov
in
push
push
add
nop
in
xchg
icebp
add
inc
lods
test
aaa
xor
outsb
or
mov
js
push
sub
mov
cwtl
mov
xor
sbb
pop
add
in
xchg
into
xlat
cmp
dec
xchg
push
stos
sbb
xorl
and
out
ljmp
pop
pop
popf
cmp
test
dec
push
pop
lods
xor
dec
pop
roll
movsb
popf
aad
dec
cmpl
push
cwtl
mov
xchg
gs
jle
sbb
sbb
inc
adc
push
pop
xchg
mov
pop
dec
dec
add
add
mov
mov
push
sub
out
sarl
aaa
add
mov
js
lret
lret
or
cmp
loope
shr
jno
cmp
add
and
invd
inc
or
xchg
dec
pop
imul
jg
jnp
enter
fnstcw
out
lret
mov
jne
dec
gs
pop
lods
daa
pop
jl
xchg
cld
push
inc
sbb
iret
fldt
inc
js
push
mov
fstl
cmp
jnp
cs
sbb
fildl
scas
push
insb
add
mov
pop
lock
out
test
sbb
add
ljmp
loop
inc
scas
aaa
divps
lds
cmpsb
jmp
jbe
lahf
stos
clc
in
cmp
sbb
cmpsb
dec
orb
jge
xchg
ljmp
lods
bound
enter
cmp
lea
adc
mov
inc
jmp
sbb
xor
test
insl
lcall
pushf
ss
mov
push
pop
push
lret
mov
jp
int
fnstcw
test
sahf
jg
mov
fwait
cmpb
sbb
ret
dec
fbstp
cmp
mov
scas
xor
inc
mov
cmc
inc
shlb
xlat
int
sbb
aas
mov
cmpsw
pop
xchg
xchg
aaa
push
push
pop
pop
push
jmp
dec
fnsave
sbb
push
add
xorb
das
cltd
mov
mov
xor
mov
scas
pop
imul
adcl
ret
mov
mov
dec
pop
push
mov
inc
out
aad
pushf
ss
call
inc
lds
rclb
and
punpcklbw
enter
jb
jl
add
les
cwtl
push
mov
sub
movsl
push
or
addr16
cmp
or
adc
jns
xor
insl
fnsave
sub
in
data16
gs
push
dec
out
push
mov
fsts
push
loop
mov
sbb
lods
or
popa
push
int3
dec
dec
call
push
mov
lret
shlb
inc
push
jnp
cmpsb
out
mov
add
in
dec
mov
rcrl
jnp
mov
jae
jle
and
loop
push
leave
insb
dec
es
iret
fldt
test
daa
rcr
push
jl
add
mov
mov
int3
mov
add
mov
sti
movsb
es
jl
sahf
daa
arpl
sub
out
add
lret
pusha
cmc
or
sub
cmc
repnz
push
lods
jbe
sub
cs
test
aaa
pop
cmpsb
cmp
icebp
cwtl
aaa
fcomip
in
lock
inc
test
jnp
adc
xchg
pop
stc
jge
stc
in
and
jg
mov
loope
sub
xchg
jbe
fdivrl
setle
lods
imul
jmp
adc
movlps
cmc
push
inc
loopne
inc
jmp
stc
add
orl
push
outsl
sahf
xor
int
movsl
add
push
lret
movsb
movsl
fs
jns
mov
lret
je
jno
popf
push
cmpsb
neg
mov
xor
push
and
enter
sub
xchg
pop
jl
dec
imulb
xor
outsl
dec
jae
add
psrlw
and
push
sbb
ljmp
sbb
jno
into
ror
in
notl
loopne
jmp
lret
mov
jne
sbb
mov
sub
xchg
inc
cmp
dec
icebp
xchg
jg
pop
mov
out
arpl
popf
pop
dec
cld
push
fsubrs
sbb
and
scas
adc
jg
in
out
pop
inc
push
adc
les
inc
loop
and
loop
scas
imul
mov
lahf
repnz
xor
dec
and
imul
and
mov
ret
cli
or
roll
sbb
mov
loope
lea
mov
repnz
fs
jno
sub
iret
xor
xchg
xorl
pop
push
shl
out
push
test
mov
cmp
lcall
dec
jmp
inc
shrl
jl
dec
lcall
sub
iret
push
dec
xchg
sti
or
popf
pop
push
std
leave
push
adc
push
call
mov
js
mov
add
ss
mov
je
and
xchg
repz
in
xor
sbb
jb
leave
mov
sub
setb
jecxz
testl
lahf
insb
sahf
in
fcoms
and
aam
xor
incl
sub
jne
pop
jb
pop
testb
rcl
mov
fmuls
mov
and
lret
fimuls
dec
pushf
outsb
dec
cli
dec
jbe
or
add
inc
test
test
es
mov
mov
pop
iret
ret
push
dec
jp
jmp
jmp
mov
push
hlt
fisttpl
imul
stos
fdivr
pusha
xor
inc
scas
push
push
adcl
sbb
fimull
repz
xor
addb
lret
popa
xchg
fs
mov
xchg
cmpb
push
movsl
movsl
sbb
lock
dec
push
jnp
dec
cmpsl
stos
iret
mov
dec
xor
aam
xchg
jl
rcrb
xor
xchg
mov
dec
dec
in
stos
push
jnp
mov
lea
out
adc
xchg
imul
cmpl
mov
jne
stos
cmp
push
cltd
mov
enter
push
and
movsb
jl
daa
pop
lcall
out
outsb
inc
rcr
divb
je
iret
xor
jge
ljmp
std
rclb
rcll
mov
mov
gs
pop
mov
cmp
icebp
dec
cwtl
fldcw
inc
add
das
lds
jmp
sbb
inc
pop
sbb
add
xchg
mov
stc
aas
sbb
cmpb
mov
insl
insb
or
lcall
mov
dec
out
pop
add
test
dec
dec
lcall
jecxz
xor
cli
xchg
sti
jnp
inc
inc
lret
cli
add
mov
push
xchg
inc
sbb
adc
pushf
push
andb
pushf
or
orb
add
icebp
push
xchg
hlt
adc
sbb
push
int
cmp
inc
and
sti
mov
xchg
pop
lcall
fstpt
dec
fs
dec
ret
out
jnp
jo
or
jmp
ret
and
push
and
lret
xor
popf
and
int3
nop
mov
aad
imul
sbb
add
mov
mov
or
stc
xchg
pop
das
or
stos
in
test
add
rcrb
ds
inc
das
ficomps
mov
out
stc
dec
testl
in
xor
add
loope
or
lods
mov
lea
or
lcall
push
and
mov
decb
in
inc
out
mov
xor
cmpsb
xlat
pop
test
lea
pop
repz
mov
cs
cmp
aaa
dec
pop
adc
int3
lock
and
sbb
cwtl
sbb
lods
stos
and
lahf
xor
clc
add
movsb
divb
outsl
mov
cld
ljmp
and
push
lret
xor
pop
adc
cltd
dec
mov
neg
xor
outsb
mov
ficomps
scas
inc
cmc
fcmovne
mov
mov
notl
leave
cmp
shl
adc
and
cmp
fistpll
mov
jae
sbb
lahf
adc
mov
les
cmp
fisubrl
xchg
dec
push
and
leave
outsl
pusha
lret
and
jae
std
mov
stos
ja
jle
lret
sbbb
loope
dec
push
rcrb
mov
mov
dec
or
mov
mov
sub
cltd
cmpsb
adc
xor
in
and
int3
andb
cmp
lock
and
push
cmc
mov
mov
xchg
mov
in
ss
or
repnz
das
sub
psrlq
jno
adc
sub
jns
dec
inc
adc
mov
inc
mov
fimuls
lods
mov
loopne
cmp
shll
jnp
dec
pusha
dec
aam
movl
inc
inc
ret
add
push
add
xchg
and
test
xchg
adc
pop
les
pop
fiaddl
push
int3
xlat
mov
ljmp
inc
es
out
jb
jp
bound
cmp
gs
aam
mov
adcb
test
mov
lahf
roll
loop
inc
and
ljmp
pop
in
cmp
stc
lahf
and
jmp
xchg
cmpsb
adc
mov
loope
sub
and
andb
push
mov
stos
stc
mov
lahf
int3
mov
stos
dec
push
loopne
into
push
cwtl
mov
or
inc
dec
sub
adc
cmp
and
shrb
test
mov
and
xchg
jmp
jle
inc
inc
out
mov
ss
ja
in
pop
cmp
and
les
out
pop
mov
ja
push
daa
mov
push
xchg
adc
test
fwait
pop
out
in
jb
pop
mov
insb
jecxz
inc
sti
inc
or
cs
pop
hlt
xor
push
bound
aam
and
scas
popl
lock
mov
dec
sub
dec
inc
das
sub
insl
int3
int
mov
inc
leave
mov
mov
push
loope
orb
and
call
es
lret
xor
mov
fsub
aas
xor
daa
cs
sar
test
cmpsb
mov
mov
scas
lcall
sbb
fcomp
fwait
xchg
cmp
movsl
cmpsl
mov
icebp
adc
imul
pop
add
inc
mov
leave
dec
iret
insl
push
js
rolb
pop
out
aad
popl
out
cmp
insb
mov
fidivrs
xchg
xor
xor
mov
sub
cmp
add
or
out
shl
add
sub
call
es
xor
lret
sub
insl
mov
jno
mov
and
mov
sbb
mov
pop
sbb
jnp
push
and
and
outsl
fwait
push
mov
mov
jmp
mov
jns
adc
lret
js
les
in
pop
dec
adc
pop
insb
andl
lahf
push
aam
fldcw
push
lret
int3
xlat
push
inc
push
repz
inc
pop
aad
mov
loop
mov
je
xchg
cltd
arpl
push
and
iret
fbld
decb
pop
call
loopne
lds
lret
sbb
pop
stc
inc
pop
cmp
inc
cwtl
cmp
outsl
stos
arpl
cwtl
and
out
inc
fildl
add
daa
push
rolb
stc
inc
mov
push
or
test
ss
jg
pop
ljmp
rcr
int3
cmc
jp
mov
inc
or
push
xchg
push
mov
sub
fmull
test
lock
shrl
cmc
xlat
add
decl
xor
fdivl
adc
or
push
xchg
mov
ss
imul
inc
mov
icebp
xchg
cmp
into
scas
fcompl
dec
sbb
jge
cmpsl
cmp
ja
jg
jl
mov
lret
xchg
ret
into
test
icebp
or
xor
lret
dec
push
orl
and
cli
or
xchg
or
movsb
jno
in
pop
cmc
jbe
fs
adc
pop
sub
mov
mov
outsl
stc
faddp
into
fstl
mov
inc
add
mov
sti
cs
loop
ss
gs
jne
jnp
fnstsw
pop
add
loopne
rorb
test
hlt
xchg
mov
add
ja
cmc
jl
and
xorps
adc
mov
es
sub
push
loopne
adc
mov
mov
aas
jnp
adc
outsl
mov
adc
xchg
shrl
jge
fldcw
fsubrs
arpl
pop
call
dec
mov
jb
out
push
insl
lds
jge
imul
mov
lea
fidivs
je
stc
ja
aaa
sbb
jmp
pop
bound
xchg
mov
into
jnp
xchg
xor
mov
mov
pop
in
sarb
xchg
push
es
xor
call
pop
arpl
arpl
mov
and
xchg
outsl
push
dec
std
repz
push
xchg
lret
fnsave
outsb
sbbl
sbb
sbb
int
dec
negl
fdivs
dec
sahf
push
mov
cmp
mov
mov
add
addr16
int
cmp
cwtl
mov
pop
fdivrl
mov
test
lahf
push
adc
out
andb
cmovae
cmp
xchg
jge
pop
xchg
test
jmp
mov
cld
imul
cmpsl
arpl
adc
push
les
and
rcrl
push
cmc
pushf
jns
loope
inc
cmpsb
daa
negb
outsl
and
jl
push
stc
dec
dec
gs
js
pop
push
leave
dec
push
sbb
push
cwtl
les
dec
jno
aad
cmp
das
or
fcoms
test
cld
and
stos
rorb
inc
pop
aad
and
pop
cli
lods
sbb
pop
xchg
repz
mov
xlat
inc
jae
inc
xchg
imul
sub
inc
clc
outsl
mov
cmc
pop
psubw
pop
mov
and
cmpsl
mov
icebp
jge
dec
in
daa
mull
or
mov
sub
imul
jo
das
xchg
jns
cmovs
scas
dec
cmovbe
clc
xor
sbb
sbb
cmp
pop
push
scas
and
in
mov
pop
lret
mov
cmp
out
ret
dec
add
or
mov
or
pop
push
cmpsw
push
dec
xorl
outsl
or
adc
cwtl
xchg
xchg
icebp
xchg
mov
lret
out
insl
mov
push
pop
shll
jmp
imul
mov
cmp
sti
bound
decb
mov
aad
pop
push
xor
scas
loop
pop
int3
sbb
lods
ffreep
test
push
mov
pop
repnz
mov
or
bt
mov
adc
iret
jg
dec
sub
data16
orb
int
inc
xchg
into
scas
or
lods
cld
mov
fiadds
repz
imul
jb
xchg
mov
sub
mov
into
fucomi
lahf
adc
iret
mov
fidivs
mov
adc
add
popa
cs
sti
and
sbb
push
pop
cmp
push
xchg
or
xchg
xor
pop
dec
into
push
cli
jo
out
or
addr16
add
jp
hlt
push
inc
lahf
mov
dec
stos
test
stc
cltd
jae
rcr
xchg
cld
mov
outsb
sbb
jle
mov
ja
or
daa
cmp
fs
jl
mov
inc
outsb
sbb
xor
xor
push
jnp
ret
out
iret
das
mov
sub
mov
gs
dec
daa
xchg
sbb
pop
cmp
or
pop
dec
test
dec
out
and
icebp
jle
lcall
fwait
mov
pop
inc
rcll
and
mov
inc
mov
mov
sub
fbstp
push
test
cmpsl
addr16
daa
popa
pop
ss
testl
clc
ja
sti
cmp
mov
in
sbb
nop
rcll
movsb
loopnew
sahf
jno
lock
adc
or
aam
sarb
cmp
lds
mov
jb
insb
lcall
pop
enter
cmpsb
adc
jp
mov
lea
lods
call
mov
xchg
adc
bound
jmp
mov
gs
arpl
decl
jb
repz
cld
cmp
sub
gs
dec
ja
mov
push
dec
cltd
adc
add
sub
and
dec
sub
pop
stos
js
movb
cmp
jle
dec
decb
iret
popf
fnstsw
stos
and
sbb
and
mov
cmpsl
cmp
ss
fcmovb
xor
or
sahf
jmp
stc
push
push
dec
jg
addr16
push
loope
mov
ljmp
data16
testl
sbb
dec
testl
add
outsb
clc
lea
out
scas
lahf
out
cmp
push
pop
lods
cmp
or
xchg
aam
mov
or
mov
sbb
jl
enter
lret
les
aaa
nop
adc
outsb
xchg
pop
adc
add
inc
divb
push
sbb
xchg
mov
fstl
cmc
adc
jns
jne
sbb
test
push
es
inc
insb
cmovb
mov
xchg
stos
int
int3
mov
mov
xor
sbb
xchg
jge
adc
ret
push
mov
lods
iret
push
lret
xor
mov
jo
inc
mov
repz
andb
fs
mov
sbb
mov
ljmp
ljmp
push
lds
mov
ds
and
inc
pop
in
mov
movsl
sbb
pop
dec
xchg
xchg
sub
sbb
xchg
mov
jmp
movsl
xchg
mov
ficoml
nopl
gs
xchg
pop
sbb
adc
icebp
ljmp
jl
lcall
sahf
jecxz
fs
fisubrl
inc
inc
bound
mov
cmc
ss
insb
cltd
push
out
rcrl
cmc
jno
loope
stos
int
cmp
lret
push
popf
in
mov
mov
jg
popa
sbb
je
out
repnz
mov
xchg
and
imul
ret
outsl
mov
cmova
movsl
sahf
dec
aaa
inc
test
mulb
js
xchg
sarl
lock
pop
pop
stos
sahf
add
div
idivl
nop
and
cmpsb
test
sbb
mov
stos
pop
int3
outsb
fbld
ret
jge
mov
adc
icebp
push
dec
add
jae
mov
test
fstpt
arpl
das
add
iret
inc
cmp
push
les
cmc
sub
in
ss
push
xlat
out
loope
bound
fs
mov
push
jmp
pop
test
pop
mov
mov
push
pop
faddl
ss
fwait
xor
cmp
sub
orl
popa
xchg
les
inc
xor
pop
ss
arpl
sti
sbb
jb
pop
xchg
xor
pop
lea
out
dec
cmp
aaa
or
sbb
filds
jno
add
sub
or
sbbb
fidivl
xchg
lret
lds
cltd
sub
jne
sbb
stos
mov
inc
mov
lahf
aam
cli
jae
push
and
aaa
adc
mov
pop
lret
adc
add
fcoms
adc
push
sub
adc
mov
in
cltd
fldenv
aas
sbb
push
lcall
shr
adc
add
in
jle
lds
fdivl
loope
sahf
sbbl
ss
test
enter
mov
ja
cwtl
add
js
add
push
leave
in
pop
pusha
gs
bound
pop
cmp
sbb
sub
pop
dec
mov
pushf
xor
daa
jl
push
rol
iret
cli
dec
add
lret
pop
lods
clc
je
fwait
adc
mov
xor
orl
mov
cmc
test
into
out
sahf
fs
mov
shlb
lea
out
outsl
sub
push
xchg
outsl
fsubl
je
enter
inc
jp
sbb
lock
cmp
push
or
out
lret
sub
jle
pop
mov
fnstsw
sub
mov
loope
inc
jns
rclb
and
lcall
or
arpl
fdivrs
add
fisubs
insb
inc
xchg
les
popf
add
or
aaa
or
add
shrb
mov
dec
add
xlat
jo
inc
xchg
sub
push
idivb
scas
and
fisubrs
inc
push
ljmp
xor
fwait
xlat
les
in
xchg
jo
push
inc
sti
repnz
and
sbb
add
or
xchg
inc
sahf
rclb
stos
fsubl
ds
push
cmpsl
lds
sub
pusha
shrb
dec
rorb
mov
lea
icebp
outsb
repnz
xchg
in
les
repz
or
mov
sub
cli
in
pop
fs
xchg
inc
push
mov
shll
inc
scas
sub
lock
ss
add
jg
pusha
sbb
stos
adc
sbb
in
xorps
loopne
xor
out
push
xor
and
daa
pop
imul
rep
push
test
cmc
stos
mov
arpl
dec
jmp
jle
stos
dec
jg
mov
ret
iret
jo
mov
pop
xchg
mov
sbb
push
adc
push
test
test
or
daa
pop
stos
inc
pop
xor
test
inc
add
and
dec
dec
cmp
fdivr
cwtl
sub
and
cs
hlt
dec
outsb
roll
jp
pop
test
jns
adc
add
xchg
lret
movsb
arpl
negb
jne
and
adc
inc
sub
push
pop
inc
jbe
cli
shr
cli
out
rol
stc
mov
popf
mov
inc
mov
outsl
clc
mov
xor
dec
loopne
add
test
adc
popa
inc
in
or
pop
sbb
lret
xchg
test
or
outsl
in
data16
mov
xchg
enter
fisttpl
repz
jo
jo
dec
inc
dec
sub
shrl
movsb
jg
pop
and
mov
fidivrl
ljmp
cwtl
jnp
lret
adc
mov
pop
pop
mov
loope
ja
je
and
xor
mov
mov
std
jmp
in
int3
mov
cltd
jecxz
out
xor
es
stos
add
fisttps
fldl
push
hlt
sub
push
xchg
mov
xor
pop
movsb
cmp
mov
out
movb
out
ja
inc
xchg
xorb
mov
imul
fisttpl
je
fdivrl
push
xlat
pop
and
outsb
aam
rorl
cmc
repnz
jle
repz
jg
xchg
sub
and
fs
mov
xchg
mov
aaa
jo
pusha
mov
imul
push
shlb
xor
pop
loope
and
inc
and
or
aam
inc
in
pusha
outsb
push
leave
popa
mov
dec
pusha
lahf
nop
or
jns
jnp
pushf
jge
aas
mov
movsb
pop
sub
mov
into
pop
jbe
or
pop
push
sti
ds
mov
inc
data16
xchg
lds
mov
int3
mov
cli
pop
divb
es
cmc
int3
add
adc
icebp
out
mov
adc
mov
jl
xchg
mov
aaa
add
jbe
popf
sub
jle
fnsave
cmp
scas
sbb
cmp
push
and
scas
clc
cmp
and
push
repz
shll
xchg
neg
push
sbb
test
xbegin
mov
cwtl
adc
adc
rorl
rorb
and
cli
icebp
push
push
push
stos
push
push
imul
mov
sbb
sarb
or
xchg
pop
pop
ficomps
pusha
rcrl
into
mov
jp
inc
lock
push
push
mov
int3
movsl
inc
mov
arpl
loopne
lods
mov
cmp
xchg
dec
jb
sbb
lds
mov
adc
in
dec
fisubl
dec
xchg
cld
imul
push
dec
and
mov
movaps
mov
pop
in
pop
loopew
ficoms
and
imul
push
call
sbb
outsb
pop
ja
leave
out
jns
push
sub
outsl
dec
fwait
xchg
sbb
xor
dec
xchg
aad
sub
hlt
das
stos
aas
mov
push
fsubs
jmp
fcoms
jae
and
ud1
pop
pop
loopne
imull
jmp
xor
inc
insb
lds
sbb
test
imul
enter
leave
push
fs
fadds
imul
mov
lea
jle
pushf
rcr
pop
push
shrl
popf
or
mov
cmp
fistpll
fdivl
xchg
xchg
shr
loopne
pop
mov
test
rcrb
aas
jl
xor
xor
xchg
bound
xor
adc
stos
icebp
add
dec
test
xchg
sar
roll
fs
xchg
aas
inc
aaa
push
cmp
mov
dec
scas
or
pop
pop
push
pop
mov
andl
jno
sub
xor
int3
dec
cmc
and
test
call
movsl
push
out
mov
mov
repnz
stos
inc
mov
mov
jnp
repnz
jae
push
inc
sbb
mov
rcll
and
jle
mov
mov
cmp
xor
cmp
add
cmp
fidivrs
or
cmpb
lahf
jae
outsb
call
mov
pop
lret
push
lret
les
ret
sarl
lahf
out
mov
in
mov
pop
adc
adc
lods
sarb
test
xlat
jge
pop
xor
aad
or
in
aad
pop
cmp
sub
jle
add
and
scas
std
jmp
lret
es
fwait
in
mov
hlt
enter
pop
test
dec
lods
decb
push
sbb
pop
jmp
call
sarl
add
dec
test
in
hlt
push
into
cli
mov
jb
cli
cmp
mov
addb
sub
push
xchg
inc
popf
adc
jg
pop
adc
sub
dec
sub
xor
mov
int
add
lods
jbe
lea
out
mov
sbb
push
sbb
or
popf
hlt
ret
in
jnp
mov
mov
sub
aas
stos
scas
sub
mov
outsl
mov
aas
dec
dec
ret
adc
xor
data16
mov
cli
mov
sub
aam
inc
cld
pusha
inc
mov
sbb
rolb
ja
jae
test
and
xchg
dec
inc
mov
mov
dec
shr
mov
jle
xlat
xchg
rol
mov
cmp
lahf
cli
clc
test
fwait
ja
imul
sub
daa
sub
outsl
adc
dec
push
mov
aaa
inc
inc
xchg
bswap
inc
cmpsb
mov
add
jecxz
lret
sub
sub
sarb
push
stc
sbb
fnstsw
iret
stos
xchg
sbb
jns
mov
xchg
mov
fwait
sbb
xchg
cmpsb
inc
cld
add
ret
mov
mov
lods
jecxz
and
cmpsb
dec
jmp
push
mov
imull
fimuls
in
call
popf
imul
fmuls
add
orl
insl
xorl
xorb
popf
in
mov
pop
aas
mov
mov
jmp
dec
fldcw
or
xor
sbb
int3
mov
jne
outsb
iret
adc
xchg
mov
cmp
inc
cli
out
imul
xor
popf
cmpsl
cmpsl
push
arpl
cld
ret
lahf
xchg
dec
dec
pop
fildll
mov
int
fadd
aam
sbb
sbb
xor
adc
lahf
pop
out
mov
adc
xor
fnstsw
jno
ret
add
push
dec
out
daa
and
popf
and
sbb
cmp
mov
sbb
adc
mov
xchg
int3
subb
sbb
dec
dec
jmp
aad
xor
aas
xor
lcall
loopne
mov
fdivrl
lahf
lcall
pop
mov
dec
shll
lret
stos
mov
cmp
xchg
dec
jo
xor
cmp
push
mov
mov
maskmovq
divl
pop
jmp
jb
fildll
sub
push
sub
les
shr
arpl
sub
sahf
mov
hlt
cmp
pushf
div
ja
mov
pop
popf
and
inc
xor
fdivl
inc
fiadds
std
inc
xor
sti
xor
or
loope
aas
adc
jmp
add
xor
xchg
pop
mov
xchg
inc
push
mov
daa
mov
adc
scas
std
scas
repnz
es
mov
rcll
mov
outsb
jo
out
add
sbb
in
xchg
xchg
movb
sub
fisubl
pop
mov
sub
sahf
in
dec
ret
pop
xchg
push
lcall
xor
dec
sarl
fcom
ss
and
aam
mov
mov
sbb
cmpsl
in
adc
stos
xchg
daa
adc
ret
lods
mov
aas
and
ret
loopne
xlat
and
jecxz
cmp
xlat
aas
mov
int
repnz
mov
jb
cltd
jb
das
inc
sbb
push
adc
jp
xchg
clc
fisttpll
loopne
lock
aad
add
mov
xchg
les
fwait
adc
jg
shr
xor
cli
gs
mov
or
jnp
popl
jmp
mov
bound
movb
fidivl
ss
mov
ret
out
dec
das
sub
mov
pop
cmp
sbb
test
inc
rolb
in
loop
xlat
shrl
in
popa
mov
lcall
ss
in
je
sub
fisubs
cmp
pop
pop
jecxz
shl
or
inc
dec
sti
sbb
add
mov
add
sbb
movsl
adc
or
incl
mov
ret
leave
out
or
cmp
mov
xchg
fadds
ret
clc
push
jne
push
dec
fcomps
mov
popa
stos
cli
push
dec
movsb
xlat
jne
add
cmc
or
fiaddl
hlt
ljmp
jmp
mov
rcr
jns
mov
add
pop
pop
cwtl
push
shlb
cmp
cmp
xor
and
or
adc
or
mov
and
fisubrs
sbb
mov
test
jne
loopne
stos
ret
pop
add
in
mov
mov
ljmp
and
inc
mov
dec
jmp
mov
pop
cmpb
je
dec
sub
xchg
add
js
hlt
add
pop
imul
repz
loope
add
xor
jae
jae
jg
mov
xor
aaa
push
in
push
cmpsl
iret
rorl
data16
push
cmp
add
jnp
gs
enter
mov
repnz
cmp
sahf
pushl
inc
jle
jbe
mov
push
js
lods
shlb
cmovb
and
shrl
sub
cld
add
xor
aas
aad
sbb
mov
cld
and
test
xchg
push
add
fbld
lret
js
pop
aad
or
rorb
or
je
jno
push
xlat
sbb
fadd
into
sarl
das
jno
xchg
iret
imul
in
test
inc
jl
leave
out
add
cltd
pop
in
les
jmp
fsubrs
push
aas
cld
pop
adc
mov
movsb
dec
ljmp
sub
imul
mov
mov
push
mov
rcrl
xchg
lods
mov
cmp
les
dec
bound
icebp
in
push
pop
cmp
xchg
lods
lret
xor
dec
jae
jge
jmp
out
sti
fcoml
adc
ret
jae
sbb
loopne
dec
push
pop
xchg
out
subb
ret
jno
insb
xorl
mov
outsb
es
push
rol
stos
inc
sbb
pop
sbb
mov
pop
movsl
ds
and
lods
or
fstps
sbb
inc
nop
in
mov
rcrb
cli
add
movsb
jmp
lds
loop
push
aad
sbb
lods
push
fisubs
sar
or
cmp
rcll
jl
push
stc
pop
mov
je
jmp
orl
xchg
xchg
adc
hlt
addr16
mov
popl
jae
enterw
xor
and
xor
jnp
and
push
out
mov
mov
in
dec
shll
cs
push
xchg
add
stc
jge
pop
or
insb
clc
dec
pop
scas
pop
sub
call
cmp
ljmp
mov
cmp
mov
iret
pop
pop
jo
arpl
xor
adc
out
inc
or
mov
jecxz
mov
dec
cmp
mov
dec
sub
stos
dec
xchg
mov
pop
test
cltd
popf
hlt
adc
add
mov
add
pop
or
mov
sub
rcl
sbb
inc
inc
loopne
movsl
xchg
decl
jnp
mov
shrb
mov
jae
loop
pushf
adc
or
dec
cmpsl
mov
or
adc
pop
sub
nop
sbb
jo
or
adc
mov
je
cmpsl
adc
pushf
fisubs
lock
movsb
push
into
loope
mov
lret
sbb
cmpsb
lahf
rcl
add
jl
xor
adc
fwait
out
addr16
leave
gs
sbb
addb
or
loopne
pop
jp
jne
sbb
jle
int3
js
addr16
adc
cmc
add
scas
icebp
mov
jecxz
pop
push
pop
pop
fyl2xp1
jl
sbb
lock
add
mov
push
adc
cmp
pop
or
ja
cmpsl
jne
aad
mov
test
jmp
test
xchg
rcrl
inc
popa
fsubr
shlb
sub
or
and
push
pop
aas
push
ljmp
fmul
mov
mov
push
leave
pop
add
lods
mov
pop
inc
int3
outsl
ss
jmp
cld
adcb
cli
push
mov
out
mov
mov
xchg
sbb
arpl
mov
movsb
cmp
mov
aaa
push
push
jecxz
and
bound
add
std
and
adc
add
cli
ds
clc
test
pushf
mov
inc
mov
push
roll
add
push
lods
loopne
inc
sub
cmpsb
fnclex
fisubl
repnz
inc
push
fcmovnu
adc
push
mov
dec
je
in
repz
add
ret
mov
inc
jo
pop
mov
repnz
adc
icebp
jp
or
aad
xlat
sub
das
xor
push
jge
xor
insb
test
es
sub
sbb
mov
and
sub
les
push
xor
sub
xor
xor
pushf
iret
sub
lcall
push
inc
jmp
scas
loop
mov
test
xchg
arpl
subb
pop
shlb
out
jp
inc
mull
insb
iret
stc
popf
and
icebp
adc
into
mov
mov
out
add
test
fsubl
mov
mov
icebp
mov
jns
and
test
add
adcl
push
pop
sahf
push
ja
pop
mov
xchg
stc
mov
popa
add
pop
aad
loop
pop
mov
cmp
add
aas
loopne
adc
out
addl
jmp
rcr
xchg
data16
leave
jbe
stc
cmp
cmp
mov
push
xchg
imul
shll
std
mov
out
xor
jmp
jp
fwait
inc
shrd
test
faddl
jecxz
pop
or
mov
cmp
enter
stos
jmp
mov
mov
inc
jne
fistl
ss
ss
xlat
rolb
jb
jmp
jl
nop
in
into
and
cmp
push
je
sbb
xchg
movsb
iret
jae
mov
sarl
jle
mov
lock
cmp
cwtl
bound
ja
add
scas
dec
dec
push
aas
sbb
push
loop
into
inc
sbb
dec
xchg
shl
xlat
jle
cmpsb
rorl
call
fsubrl
sbb
int
insl
sub
addr16
loop
popa
dec
dec
cmp
adc
jae
cmp
pop
cmp
sbb
or
mov
rolb
xor
jp
in
push
pop
lock
mov
out
arpl
cli
fmuls
nopl
int3
push
mov
inc
jle
push
or
and
ss
outsb
pop
sti
sbb
iret
in
or
mov
sti
mov
stos
inc
mov
outsb
lea
lret
xchg
mov
dec
push
jp,pt
iret
call
in
dec
sub
int3
xchg
test
sbb
daa
fwait
inc
aam
enter
push
xor
sbbb
ficomps
jb
and
flds
cli
sbb
insb
mov
dec
in
mov
arpl
push
nop
cmp
xchg
add
xchg
int
jne
subl
mov
repz
and
inc
nop
push
xor
adc
data16
inc
stos
fisubs
addr16
fidivrl
fdivs
jp
repnz
jno
loope
xchg
fmull
xchg
stos
push
adc
xchg
lret
out
aaa
stos
mov
divb
out
xor
jecxz
loop
xchg
mov
mov
mov
mov
cli
sar
sub
xchg
mov
xchg
les
lahf
imul
leave
aad
jo
xchg
bound
xchg
adc
push
popf
test
pop
sbb
psubw
in
xor
adc
nop
ds
mov
rclb
add
in
dec
jo
jecxz
add
cmp
inc
arpl
je
push
adc
push
popf
movsb
pop
into
daa
inc
scas
aas
xchg
addr16
mov
std
sub
lret
in
and
inc
adc
mov
dec
push
cs
inc
jno
and
mov
and
pop
bound
push
xor
popf
mov
adc
pop
mov
ljmp
imul
pop
mov
nopl
fstpt
jmp
pop
mov
pop
fsubl
and
push
mov
mov
dec
mov
jle
je
xchg
push
xor
push
xchg
add
ds
push
bound
mov
cmp
sbb
and
mov
das
push
cmp
jle
xor
dec
jb
cwtl
sbb
mov
inc
jne
fdivrs
cld
cmp
xchg
xchg
call
imul
mov
sbb
sti
dec
in
pop
inc
adc
jns
mov
jp
inc
mov
sub
hlt
lock
xchg
or
sbb
std
pop
sbb
sbb
mov
ss
or
pusha
fs
aas
sbb
out
xchg
test
mov
gs
out
pop
sub
out
inc
sti
mov
fistps
testl
notb
in
cltd
ja
stos
jmp
adc
pusha
cmp
fistpll
and
sbb
and
lods
and
bound
stos
jo
inc
lahf
mov
sbb
mov
cmc
stc
cmpsb
lahf
mov
shlb
add
leave
mov
sbb
in
ja
mov
scas
std
arpl
test
xor
popf
das
jns
fadds
cs
lods
lea
decl
call
fisttps
out
icebp
xchg
sti
rcrb
in
ret
fisubrs
adc
xor
lods
test
push
mov
mov
cmpsl
dec
cwtl
add
push
dec
scas
sti
pop
pop
ret
dec
and
add
cmp
sbb
repnz
or
add
rol
pop
xchg
aam
sbb
aas
mov
push
jns
cmp
test
loopne
rorb
sbb
mov
xchg
adc
sbb
sub
mov
sbb
sbb
adc
mov
fwait
rolb
adc
push
inc
ret
lret
daa
jp
mov
daa
dec
and
insl
leave
test
push
dec
and
scas
add
adc
adc
push
aaa
pop
daa
and
repz
sbb
test
sub
xor
mov
add
ret
jp
push
cs
sti
call
sbb
int
test
daa
movd
out
dec
mov
pop
push
sub
rcrl
add
xor
jns
mov
imul
lret
ds
and
pop
push
pop
jg
mov
lods
mov
pop
scas
inc
mov
insb
xor
mov
cmpsl
test
and
into
or
xor
lret
xchg
mov
pop
ss
call
dec
repnz
mov
jno
out
pop
push
lea
pusha
push
mov
lahf
lcall
and
adc
or
mov
sahf
lret
lds
pop
adc
or
movsb
out
sub
clc
mov
daa
xlat
aaa
mov
inc
push
sarb
add
popf
sti
enter
movsb
sbbl
inc
lahf
and
dec
pop
xchg
and
std
sub
shrb
out
jns
nop
pushf
dec
movsb
dec
dec
mov
gs
int3
push
loopne
xchg
stc
fsts
jns
inc
scas
stos
les
je
adc
jl
and
lods
in
cltd
sbb
xchg
lahf
sub
nop
aaa
adcb
push
aaa
std
pop
mov
ljmp
jle
jle
insb
es
test
cmpsl
pusha
je
xor
shll
or
xchg
push
and
lret
fs
mov
ljmp
cli
rolb
push
shll
ljmp
out
into
ret
pop
mov
jbe
and
push
je
mov
imul
ret
mulb
out
pushf
jbe
push
lock
xchg
cmpsb
jecxz
fmuls
inc
dec
jmp
push
int
dec
inc
add
rcrb
adc
rcr
out
stos
pop
add
bound
movsl
pop
inc
mov
xchg
mov
lret
dec
or
out
outsl
or
push
mov
pop
das
ds
jg
inc
out
call
mov
je
in
and
out
inc
int3
das
aas
fwait
xlat
fadds
pop
sbb
adc
jg
add
stos
jge
das
xchg
ja
stos
push
mov
inc
rcrb
mov
mov
aam
mov
das
push
imul
shlb
addb
adc
das
mov
xchg
inc
jl
xor
or
cli
movsb
ret
int
dec
lcall
aam
fistps
negl
inc
in
icebp
out
add
push
int3
rcrl
aam
add
pusha
xor
inc
les
mov
or
push
je
sub
outsb
scas
mov
sbb
mov
cmpsb
inc
jg
pusha
out
push
test
or
in
dec
cmpsl
lock
movsb
xor
cmpb
insb
lret
shlb
mov
mov
mov
adc
pop
mov
inc
shl
or
mov
cmp
mov
add
repnz
adc
sahf
xchg
add
xor
inc
int
sub
cmp
push
and
adc
or
addr16
std
fisttpl
and
xchg
out
outsb
sbb
pop
or
add
mov
ffreep
lock
and
xor
pushw
or
xchg
cmp
add
and
pop
and
or
cs
lods
lock
mov
mov
or
jbe
jg
dec
test
gs
inc
mov
sub
pop
test
ljmp
ds
loop
mov
out
cmp
inc
test
jno
mov
push
in
add
cmpsl
rolb
adc
imul
jg
ret
dec
jns
add
pop
mov
adcb
pop
pop
sbb
imul
movsl
negb
push
jmp
imul
sbb
mov
mov
outsb
test
sub
int
fs
fwait
xor
sub
call
call
jecxz
pop
xchg
inc
sub
test
push
xor
inc
gs
mov
jo
fidivrs
test
outsb
imul
sti
nop
mov
imul
test
lahf
adc
adc
fmuls
fcoms
lods
mov
xchg
inc
loope
test
and
bnd
jns
call
mov
fidivrs
cmp
std
jecxz
stos
sub
pop
push
test
mov
data16
in
addr16
das
cltd
test
dec
stc
faddl
add
pop
sub
fdivr
xor
mov
mov
jmp
and
add
adc
cmp
push
in
aad
and
mov
inc
xor
repnz
test
jcxz
inc
dec
cwtl
test
pop
into
clc
fcom
in
push
out
clc
addr16
cmp
mov
mov
jmp
imul
push
xlat
fadds
sbb
call
inc
lahf
fistpl
outsb
or
sub
mov
jb
mov
scas
sub
push
mov
loopne
pusha
cli
lahf
sub
mov
adc
push
imul
add
cmp
neg
inc
test
ds
lds
mov
scas
lea
scas
out
out
adc
and
mov
adc
dec
and
adc
mov
ja
pcmpeqb
mov
or
dec
movups
iret
and
dec
xchg
stc
icebp
mov
jno
sub
repz
push
jne
notb
shr
js
jmp
adc
sbb
sbb
aad
cmp
and
push
add
mov
test
fsubs
jge
push
cmp
or
sbb
pop
sbb
dec
fidivl
rcll
mov
push
lds
jmp
mov
lret
int
aam
test
mov
xor
inc
in
adc
add
jnp
cmp
inc
rcrb
mov
xor
int
addr16
pop
jmp
jge
xlat
push
ret
stos
clc
lret
enter
dec
xor
ja
insl
jne
test
xchg
pop
int
mov
push
stc
lods
dec
pop
dec
cli
nop
test
sbb
pop
xlat
int
mov
sarl
addl
outsb
lock
xor
jae
jp
push
push
mov
push
dec
enter
push
sbb
pop
jmp
out
mov
push
call
mov
loopne
pop
sbb
ljmp
cmp
xchg
lret
js
js
std
call
sbb
mov
inc
adc
movsl
mull
loop
push
sbb
into
push
cmp
stos
shr
push
fcoms
sub
notl
push
lea
xchg
pop
aam
fildll
lret
fdivrs
pop
scas
adc
dec
sub
xor
jns
or
lret
mov
push
lea
cmp
test
nop
rcl
popf
mov
xor
dec
gs
sahf
mov
mov
jbe
cli
cmpsl
ja
jns
lods
push
pop
fisubs
cmpsb
out
sub
int3
test
ficoml
ret
mov
xchg
movb
insb
aam
shrb
out
in
dec
sbb
push
enter
aaa
sbbb
inc
adc
fstpt
aad
xor
neg
sbb
mov
out
insb
cld
mov
stos
divl
adc
mov
fldt
sbb
xchg
pop
ja
mov
out
pop
in
push
bound
push
mov
push
mov
loop
mov
cmp
mov
sbb
inc
jl
lods
adc
push
imul
es
or
gs
movsl
push
int3
mov
int
daa
lods
mov
add
pop
xchg
dec
cmc
mov
shlb
push
pop
mov
ljmp
daa
rcll
or
mov
sbb
leave
push
or
sbb
mov
fwait
xchg
repz
jne
xlat
test
fmuls
push
push
or
xchg
mov
mov
pop
loop
xchg
jb
xchg
xchg
cmpl
jno
lret
aas
mov
arpl
inc
dec
inc
xorb
add
xchg
adc
je
mov
rorb
mov
je
adcl
sub
fildl
imul
clc
jbe
std
fidivrs
adc
inc
insl
jb
aaa
ret
enter
shlb
pusha
jo
lret
pop
xchg
sub
cmp
mov
test
nop
cs
ret
testl
das
addb
pop
push
cmp
xor
inc
sbb
push
jno
cmp
or
ficoms
loopne
xchg
stos
jb
mov
leave
adc
pop
lret
shll
mov
decb
inc
cmc
nop
scas
movl
nop
sub
push
adc
call
pushl
ret
xchg
pop
sahf
push
push
push
popf
mov
stos
in
fucomi
cltd
add
rorb
fcmovbe
sahf
jne
icebp
aad
mov
sub
fiadds
mov
adc
clc
mov
scas
test
jbe
in
call
shll
lods
dec
adc
dec
fwait
lret
add
cmpsl
fstpt
or
ja
jae
sbb
test
mov
call
enter
inc
xor
das
nop
and
in
and
nop
cmp
pop
ljmp
les
push
pop
test
mov
inc
cs
in
insl
sbb
sbbl
cmp
inc
into
dec
sti
std
adc
fcoml
aas
cmp
cmpsb
call
adc
cmp
pop
jne
mov
mov
mov
jp
and
addl
xchg
push
add
insb
jnp
jns
repnz
push
jmp
test
mov
dec
mov
mov
add
adc
stc
jl
mov
pusha
and
push
pop
jl
inc
int3
jge
mov
inc
cmpsb
fdivrs
inc
xorl
iret
lods
call
mov
push
stos
add
or
add
mov
push
dec
jle
lret
ss
pop
pop
repnz
mov
sbb
sub
push
add
jno
sub
aad
pop
push
jecxz
cmp
popa
xchg
add
aas
fwait
scas
cmpsb
adcb
imul
mov
cmp
cmp
daa
lahf
roll
pushf
push
bound
repz
sub
das
cmc
fildll
insb
or
jecxz
outsl
loop
cmp
lods
pop
add
aad
pop
pop
xchg
pop
faddl
mov
jp
loop
xchg
adc
and
jg
mov
mov
pop
add
or
in
mov
push
sbb
xor
and
icebp
add
and
xchg
sbbl
adc
lret
adc
sahf
repnz
jecxz
pop
arpl
aad
dec
loopne
xchg
movsb
arpl
push
sbb
dec
xchg
mov
push
inc
ss
sbb
sub
xchg
mov
sbb
push
or
add
cmp
inc
sub
add
pop
dec
pop
xchg
mulb
cmp
push
lods
inc
mov
roll
pop
cld
call
push
add
pusha
xor
add
jbe
addr16
add
orl
stc
and
mov
pop
imul
scas
push
popa
daa
pop
lahf
divl
add
mov
push
int
pop
aas
rorb
push
loopne
push
ret
nop
sti
fnstenv
mov
ss
push
mov
sub
les
mov
pop
and
arpl
pop
push
dec
pop
fdiv
adc
in
andb
clc
ret
and
fdivl
add
pop
or
mov
jne
lcall
icebp
les
repz
or
mov
push
in
out
shl
int
call
jle
outsb
leave
cwtl
jae
stc
jp
imul
movsl
push
jbe
movsb
les
jge
std
ja
mov
movsb
hlt
cmpsl
lods
cld
push
inc
push
pop
cld
mov
add
jle
mov
iret
mov
push
xlat
inc
add
cmp
dec
add
enter
jle
push
push
gs
fdivs
sub
jo
mov
aas
lods
or
or
and
xchg
iret
push
jecxz
inc
loopne
push
sub
mov
int
jno
xor
andl
mov
addb
sbb
jg
loope
push
push
dec
push
lock
enter
push
mov
sub
jp
lock
out
shll
in
mov
shrl
sbb
mov
adc
xor
fcomps
mov
inc
mov
insb
in
out
mov
jne
inc
ja
imul
mov
push
or
sahf
idivl
shlb
int3
fsubr
ss
out
mov
fimull
mov
fs
pop
data16
fs
arpl
std
idivl
rcrb
push
jns
jno
cwtl
negb
lcall
out
testb
clc
les
mov
js
rcl
data16
adcb
enter
mov
clc
jbe
mov
mov
pop
cs
inc
xchg
sbb
cmpsl
dec
and
sub
xchg
in
xlat
pop
pop
mov
push
mov
push
outsb
inc
add
xchg
jae
push
int
movsl
jbe
mov
mov
fwait
pushl
or
dec
ficompl
insl
push
inc
pop
mov
bound
cmpl
and
inc
ja
adc
jb
jne
adc
pop
in
stos
adc
adc
loopne
loope
test
test
sahf
cltd
and
inc
incb
jb,pn
jbe
test
lods
sub
push
incl
jp
movntps
xor
fdivrs
xchg
pop
and
dec
int3
jge
insl
js
shll
mov
adc
mov
cmpsb
imul
inc
nop
test
jmp
pop
inc
push
scas
cmp
pop
mov
add
mov
fnstenv
gs
aam
inc
add
out
mov
stc
frstor
jl
jae
adc
xchg
rcll
mov
add
das
pushf
push
lods
das
mov
fsubrs
bound
inc
popa
in
call
sbb
pop
add
mov
xchg
mov
into
je
xor
mov
mov
prefetch
mov
movsb
pushl
lods
sub
popf
fisttps
into
jbe
lods
pusha
jecxz
addr16
ret
imul
shll
xchg
add
sub
pop
push
popf
in
push
push
push
into
add
mov
test
or
or
pop
jae
cs
and
xor
push
aad
add
dec
mov
lahf
xor
and
ret
jo
pushf
add
sbb
aad
mov
xchg
mov
lods
loope
sti
outsb
mov
pop
pop
xor
pop
imul
fdivs
imul
lock
sbb
lret
mov
xor
push
and
or
add
sub
hlt
lea
fdivr
scas
pop
dec
mov
rolb
subb
adc
and
or
movsb
shl
loopne
lahf
scas
add
das
cs
cmp
loope
lods
push
imul
mov
hlt
pusha
mov
inc
rol
or
pop
popa
sbb
xchg
outsl
sar
jl
jbe
adc
mov
into
mov
cltd
lods
js
sarl
inc
orl
mov
push
pop
jmp
xor
mov
bound
std
mov
jne
sbb
fdivrp
outsb
pusha
jmp
dec
jecxz
cmp
les
imul
fimull
sub
cmp
jl
std
lods
cwtl
xchg
cmp
jno
out
aas
xor
add
test
dec
nop
pop
cwtl
rclb
inc
add
cli
sbbl
or
push
icebp
leave
push
pop
mov
sbb
mov
hlt
mov
shr
mov
push
out
rolb
bound
cmc
ss
in
test
cwtl
mov
icebp
mov
rorl
clc
lret
push
in
aaa
adc
jo
pop
shl
jnp
lock
das
stos
mov
fildll
jns
mov
test
xchg
ror
sbb
loopne
dec
stc
cmp
cmp
rorb
inc
leave
pop
bnd
and
pop
fistpll
mov
dec
dec
fidivrl
repnz
fisttpl
test
cmp
stos
in
int
mov
scas
xchg
mov
add
fcoms
add
add
adc
mov
icebp
sbb
dec
or
enter
cli
lret
ds
mov
iret
pop
mov
or
inc
aad
dec
iret
push
push
pop
stc
adcl
stos
divb
add
clc
jecxz
cli
lds
push
add
xchg
cmp
pop
jne
mul
ret
xchg
ljmp
int3
ror
ja
ss
jge
les
mov
cmpb
ds
out
add
add
push
in
xor
pop
add
out
aam
mov
pop
in
and
das
xchg
pop
mov
sahf
imul
inc
push
movsl
jmp
sbb
loope
pop
int
push
int
xchg
ljmp
adc
in
out
repnz
bound
cmp
dec
outsl
push
xor
jbe
pop
add
repnz
mull
mov
movsl
jl
xchg
imul
sbb
push
lahf
lret
inc
aad
dec
xlat
pusha
sub
and
adc
js
fistl
lahf
mov
sbb
push
cmp
adc
lods
sub
inc
cwtl
add
push
inc
adc
les
sbb
ret
sbb
sub
lret
add
inc
dec
pop
inc
out
sarl
ljmp
sub
outsb
shll
push
sbb
push
cmp
sahf
scas
lds
cmp
jae
sub
sbb
mov
add
add
sub
leave
aaa
fnclex
xor
sarl
ss
xchg
sbb
lcall
sbb
push
call
cmpl
sbb
pop
push
sbb
mov
xchg
rorb
push
lods
lret
addr16
out
sbb
fsubr
ficompl
outsl
icebp
loopne
jge
mov
mov
test
mov
popf
pop
push
xor
test
imulb
bound
out
dec
dec
gs
jno
or
cmp
loope
lahf
mov
pop
dec
idivl
xor
push
cmpsb
lods
jns
lods
fildl
fwait
push
aas
push
dec
jnp
test
in
jns
not
out
rorl
into
adc
repz
lods
xchg
gs
cmp
inc
xor
pop
fisttpl
mov
test
jno
or
pmuludq
mov
mov
dec
notl
mov
ret
jmp
or
fisubs
sub
mov
pop
shrb
insl
loop
inc
cli
cmp
dec
cmc
movsb
gs
outsb
mov
enter
scas
cmpsb
iret
lahf
and
or
test
lahf
and
shrb
cwtl
inc
pushf
cmpsl
adc
push
fdiv
mov
call
je
insl
sti
sbb
enter
jnp
mov
sbb
int
outsb
push
ret
xchg
jno
cmp
mov
add
dec
sub
aad
inc
aad
or
push
inc
orl
mov
jg
mov
fnstcw
iret
adc
mov
adc
dec
mov
mov
jl
loop
mov
sub
mov
ror
addr16
pusha
stos
outsl
stos
arpl
inc
sub
lods
aam
add
andl
into
mov
imul
jno
adc
mov
leave
xchg
lods
popa
jbe
mov
cwtl
into
mov
repnz
jmp
and
pcmpeqw
mov
movsb
jmp
jl
mov
popa
mov
stc
addb
add
call
dec
movsb
xchg
int
inc
negb
cmp
ja
hlt
repnz
js
imul
out
fstp
xchg
mov
xor
sahf
mov
sub
sub
test
cltd
mov
push
mov
leave
inc
or
idivb
daa
sub
sbb
jle
mov
pop
inc
mov
cmp
sbb
ret
stc
mov
pop
scas
popf
pop
xchg
mov
repnz
rorl
dec
outsl
loope
mov
mov
fists
rdpmc
ja
sub
ds
ljmp
daa
in
test
xchg
fnstenv
jae
mov
arpl
pusha
sbb
sahf
fisubs
jae
push
xchg
and
into
clc
es
jnp
or
mov
mov
jb
add
aad
bound
pop
ror
scas
rolb
aad
or
fldl
mov
xchg
ljmp
stos
sub
and
adc
xor
inc
inc
subb
lcall
jnp
lds
pop
mov
cmp
int3
arpl
push
jl
mov
outsb
bound
inc
lcall
fimull
adc
jo
xchg
icebp
hlt
sub
sbb
pop
inc
mov
test
mov
push
scas
lock
popf
bts
gs
in
xor
mov
mov
movsb
adc
add
mov
shlb
sub
push
adc
rcrb
test
int
push
loop
sbb
cli
mov
pop
pop
ss
daa
aad
insb
add
mov
sbb
lret
adc
cmp
hlt
xor
inc
xlat
push
daa
sbb
mov
mov
out
rorb
jp
cmc
mov
mov
fidivrs
jo
mov
cmp
call
mov
sbb
pop
and
sbb
repz
adc
cmpsb
lea
sub
push
dec
int
imul
sub
mov
sub
sbb
movsb
sbb
or
scas
jecxz
and
and
rolb
sbb
rclb
sahf
or
ds
adc
add
sub
fdivl
jp
ljmp
jmp
ret
mov
ljmp
test
mov
mov
cmpsl
outsb
or
subb
test
out
cmp
out
lcall
jmp
add
adc
pop
lea
mov
dec
repnz
sub
xchg
mov
push
mov
xchg
cs
push
and
mov
mov
pop
mov
aaa
inc
add
mov
push
lods
push
aam
lahf
xchg
dec
mov
popf
loop
loope
ds
arpl
jno
test
mov
shl
out
pop
pushf
rcrb
jae
mov
outsb
in
adc
shll
dec
sub
mov
mov
or
stos
push
rorb
ret
popa
pop
mov
jle
pop
lock
sub
sub
loopne
aas
fsubrl
xchg
lods
movsb
cmp
repz
lock
sbb
sub
or
inc
jl
das
sub
push
push
in
lds
mov
lahf
add
jle
pop
test
movsb
adc
cmp
adc
fwait
pop
inc
xor
jae
mov
add
leave
aam
mov
and
dec
imul
cmp
push
xor
cwtl
sub
test
or
rorb
aam
incb
fnsave
jns
psubd
inc
rcl
pop
jbe
ja
jle
rorl
jns
sarb
and
rclb
cltd
leave
pop
jmp
xor
loope
jg
push
jnp
mov
pushf
scas
movsl
into
xor
movsl
aam
pop
pop
inc
out
xchg
fwait
addr16
cwtl
jae
mov
jae
filds
cs
xchg
incl
andb
jne
out
fs
popa
inc
nop
fyl2xp1
mov
add
call
aam
mov
xchg
add
adc
dec
push
adc
push
add
arpl
xlat
mov
shrl
xor
cmpsb
lods
dec
and
testb
fwait
sub
sbb
or
nop
stos
cltd
ljmp
loope
push
out
inc
inc
rdtsc
aaa
out
dec
mov
sbb
outsl
lods
sub
flds
cwtl
gs
cli
test
dec
cmp
adc
mov
xchg
mov
or
bound
or
push
push
mov
adc
dec
jmp
mov
js
mov
orb
adc
mov
adc
popf
sbb
or
inc
sbb
sbb
rolb
clc
ja
mov
leave
mov
aas
xchg
mov
loope
sti
jnp
test
mov
xchg
lahf
adc
or
ljmp
aas
cmp
sub
hlt
mov
dec
shlb
mov
repnz
mov
mov
push
xlat
jae
xchg
mov
sub
jo
cli
sbb
in
imul
inc
arpl
jl
jl
fidivl
xchg
jge
xchg
cmp
jne
pop
or
push
fwait
outsl
or
jle
cld
jns
push
or
test
stos
fmuls
adc
and
out
ficoms
jae
dec
pop
pop
int
je
ret
cmp
mov
xchg
scas
mov
insb
hlt
push
arpl
nop
push
lock
cmp
fmuls
leave
movsl
les
leave
popa
leave
inc
in
jge
mov
scas
sub
xchg
pusha
es
and
imul
outsb
dec
test
mov
fstpt
fwait
jne
or
jmp
dec
aas
inc
fimull
lcall
dec
lahf
sbb
inc
mov
mov
out
sahf
cld
pop
mov
adc
adc
adc
std
sti
sub
mov
cmc
gs
aaa
mov
pop
adc
inc
push
push
or
jb
aad
or
fldcw
pop
pop
sbb
sub
popf
mov
loope
sbb
ss
dec
scas
cli
or
inc
lods
cmp
lret
imul
push
fmull
leave
mov
js
mov
sbb
mov
mov
int
aam
mov
jecxz
jnp
adc
xchg
iret
jbe
lret
sub
shl
and
imul
aaa
clc
xchg
mov
add
sbb
lahf
mov
roll
cwtl
pop
call
movsl
mov
or
or
ds
mov
and
clc
push
imul
pop
pop
hlt
and
loope
mov
xchg
aaa
add
arpl
popf
mov
sub
adc
mov
and
push
push
int3
outsb
cmc
jecxz
xor
dec
xor
sahf
sahf
rcrb
mov
push
xchg
call
and
dec
inc
pop
fiaddl
cltd
mov
cmp
addr16
scas
lahf
test
pop
in
mov
and
repz
cmc
cwtl
cmp
adc
in
sbb
cmp
rol
sub
movsl
mov
lock
xor
xchg
push
lock
sub
or
pop
imul
mov
pop
xor
adc
jbe
repz
dec
addl
dec
mov
dec
or
pop
popa
mov
cli
or
mov
mov
mov
cmpsl
js
scas
test
ficompl
jb
out
jge
lahf
pop
sbb
and
comiss
popf
sbb
inc
test
sbb
adc
pushf
mov
mov
js
mov
cltd
test
ja
dec
fcmovnu
sub
aas
enter
dec
enter
call
push
shll
ror
dec
call
sbb
bound
dec
add
jmp
mul
ret
adc
push
xchg
xchg
adc
jge
or
aad
xchg
mov
or
fldl
mov
dec
popf
addr16
sub
out
les
sub
push
xchg
pop
sub
jl
es
roll
add
push
add
sub
mov
push
ret
int3
in
sub
ror
dec
cmp
mov
nop
imul
xor
das
push
ss
inc
pop
hlt
cmovo
daa
or
or
mov
in
loopne
out
adc
mov
inc
hlt
repnz
aas
push
into
clc
jb
gs
sub
pcmpgtb
stos
int3
aas
add
pop
cmp
xchg
fcomps
push
mov
add
cs
popa
jb
inc
orl
ds
cmc
shlb
sbb
push
or
fwait
or
cmp
ret
inc
mov
pop
sub
xor
sub
in
mov
cmpl
dec
sub
stc
popa
or
aaa
mov
enter
addb
pop
call
sbb
clc
xchg
push
mov
add
stc
adc
inc
cli
repz
add
subb
inc
xor
in
js
sbb
pusha
xchg
pop
xchg
or
pop
xchg
fstp
jae
mov
cmpsl
xchg
sbb
fidivrs
mov
xchg
sbb
sti
cli
int
xchg
das
push
adc
mov
jmp
int
dec
adc
fistpl
mov
iret
sub
fisubs
bound
add
cmp
lods
pop
jle
sub
cwtl
enter
in
ret
in
imul
pop
pop
inc
nop
mov
push
inc
or
outsb
sarb
pop
jecxz
ja
sbb
sub
bound
pop
push
fmull
popf
lds
mov
mov
cmp
in
xchg
sarl
sti
fdivrs
and
mov
movsl
cwtl
clc
outsl
pop
das
push
mov
stos
xchg
out
dec
xor
lcall
loope
popa
mov
loopne
out
jecxz
ss
xchg
mov
sub
jmp
sahf
cmp
mov
sbb
mov
dec
aaa
lret
jb
mov
aaa
sub
xchg
mov
cmp
or
inc
and
in
mov
mov
sbb
pop
jne
cld
and
in
xchg
mov
pop
fnsave
jo
add
movsb
movl
sahf
sbb
popa
pop
ficoms
xor
dec
sub
cmp
adc
cmp
and
dec
sbb
daa
xchg
ss
mov
or
pop
mov
jnp
cmp
jecxz
pop
dec
fildll
jno
cltd
inc
movsl
sbbl
add
xchg
inc
sbb
dec
xchg
sahf
or
or
sub
mov
mov
push
adcl
cmp
mov
ret
adc
cmp
loopne
mulb
xorb
js
pop
stos
outsl
push
inc
jl
push
test
xor
popa
lret
out
inc
out
dec
icebp
xor
mov
xchg
mov
push
pop
outsl
ds
xor
pop
sub
mov
add
and
jmp
sahf
out
dec
mov
or
pushl
sarl
loope
ljmp
or
cmp
inc
adc
cli
fidivs
sbb
mov
sbb
cli
lock
in
or
js
iret
and
and
mov
mov
ret
in
or
cli
and
ret
repnz
test
sbb
mov
cmp
inc
mov
popf
loope
enter
mov
insl
cltd
mov
push
iret
pusha
jb
add
pusha
out
mov
shll
sbb
jae
repz
call
mov
pop
pop
out
sbbb
mov
mov
dec
aas
sub
mov
sub
adc
push
inc
jae
sub
sbb
aam
in
jo
aam
stc
scas
pop
loopne
push
out
cmp
sbb
dec
or
and
lret
js
pop
jge
mov
aam
stos
push
mov
mov
xor
das
inc
add
pushf
mov
sbb
insb
mov
and
xchg
mov
xor
fadds
aad
jl
and
inc
and
xchg
push
bound
push
mov
popa
xchg
test
loop
fists
stc
mov
repnz
ret
fsubrs
or
hlt
jg
mov
pop
rorl
pop
jnp
jmp
sub
mov
cli
push
and
xchg
and
inc
mov
pop
insl
mov
bound
enter
hlt
mov
lahf
push
add
xchg
or
push
shrw
add
push
sub
and
testl
loope
out
shrb
pop
xor
outsl
sub
cmp
mov
clc
jge
rcrb
or
divl
arpl
nop
in
pop
addl
mov
push
mov
push
and
push
inc
enter
nop
mov
or
push
and
lret
lahf
jle
or
and
push
pop
inc
bound
scas
mov
aaa
call
and
ret
loope
mov
push
adc
mov
fwait
sbb
mov
pop
out
arpl
fidivrl
not
jns
or
xlat
and
jmp
sbb
ja
mov
or
in
pop
ss
sbb
cs
les
fiaddl
dec
inc
faddp
das
adc
mov
pusha
xor
and
mov
inc
push
mov
insl
dec
ljmp
lret
sub
imull
lret
jmp
pop
xor
sbb
push
lcall
ret
xchg
pop
test
gs
fistpl
popf
sbb
adc
cmpsb
mov
mov
inc
dec
lods
sbbl
adc
mov
daa
add
int
push
lret
jge
xchg
loopne
mov
inc
xchg
stc
test
ret
outsl
scas
mov
push
mov
cmp
xchg
scas
and
inc
adc
sbb
xor
or
jnp
fcmovbe
jl
mov
xor
mov
sub
inc
lods
scas
pop
add
scas
fisubs
inc
mov
sbb
push
xor
cwtl
loopne
test
mov
adc
addr16
lahf
fs
in
enter
xchg
idivb
sub
sbb
mov
call
js
inc
imul
je
fwait
push
jns,pt
jmp
into
or
cld
pop
aas
adc
xor
pop
jne
adc
clc
mov
sbb
lods
mov
mov
rorl
sub
mov
lret
pusha
xor
pop
xor
or
scas
ret
mov
xor
add
push
cmc
add
loopne
xchg
adc
imul
pop
sub
pop
es
jae
int
cld
decl
push
jmp
cmp
pop
outsl
push
add
xchg
and
outsl
push
in
xchg
adc
pop
arpl
cli
fwait
mov
mov
cmp
mov
jecxz
mov
out
mov
mov
mov
push
cwtl
aam
jecxz
mov
ficomps
jb
gs
add
mov
pushl
xlat
lea
inc
mov
mov
pop
adc
nop
movsl
push
xchg
notb
loopne
mov
jg
xchg
sbb
sub
push
testl
xor
push
lods
and
push
out
mov
jmp
dec
push
test
icebp
mov
mov
rorb
mov
fdiv
or
jns
mov
das
dec
xor
push
mov
mov
call
sub
fcmove
mov
cld
ret
cmp
mov
shrb
inc
hlt
sbb
xor
les
adc
aad
ja
ret
xchg
add
and
push
mov
pop
sbb
mov
lret
xchg
adc
sub
arpl
or
jo
pusha
push
cwtl
jmp
mov
push
lods
or
jle
mov
or
xchg
sbb
xor
pushf
mov
out
cmc
pop
xor
adc
add
jp
mov
enter
or
out
add
sbb
shrb
and
adc
jae
pusha
jnp
loop
and
inc
jecxz
inc
xor
lret
scas
andl
das
cmpsl
cmp
add
mov
xor
and
pop
in
xchg
lods
adc
loop
push
popa
xchg
push
in
xchg
add
cmp
hlt
cmpsl
and
icebp
ss
mov
imul
cmp
jb
in
mov
push
mov
dec
push
xor
add
fadds
dec
repnz
aam
jnp
orb
xor
rolb
out
in
and
lcall
add
cld
inc
lods
in
aam
xor
lds
popf
fcomp
jg
mov
mov
cld
dec
pop
push
std
arpl
or
shrb
std
fisttps
add
fs
push
mov
push
movsb
mov
notl
sub
fdivr
mov
dec
mov
push
stc
or
push
negl
push
jo
add
sub
add
pop
shrb
out
hlt
rcrl
test
and
xchg
dec
lds
or
cmp
ret
fstpl
movsl
jp
js
mov
xchg
lea
pop
sbbl
pop
cmp
or
loopne
shlb
das
or
fsts
mov
and
sub
mov
orl
push
xlat
in
pop
inc
mov
pop
orl
jnp
sub
mov
pushf
inc
mov
push
add
ljmp
jnp
imul
imul
pop
icebp
iret
or
les
incl
and
cli
pop
inc
lret
in
leave
inc
or
sahf
out
sub
lret
xchg
push
rcrl
xchg
cmpsl
xor
xchg
dec
inc
mov
jecxz
mov
loope
cmp
or
inc
loope
sbb
neg
jb
mov
cmc
mov
jne
pop
je
dec
lahf
add
inc
mov
and
mov
orl
fwait
or
cmp
clc
push
mov
mov
dec
js
jne
das
popa
shrb
adc
iret
mov
fstl
push
popa
fimull
mov
popaw
sbb
mov
out
lods
add
mov
or
ds
jne
insl
xchg
lret
fistpll
mov
push
adc
popf
adc
add
shll
sub
cmp
outsb
mov
lods
cmpsb
in
aaa
add
shll
test
arpl
cli
jnp
cmpsl
jp
dec
jo
inc
popa
mov
mov
in
push
xor
fcoml
out
loopne
sbb
push
mov
push
mov
aam
leave
jge
icebp
mov
add
jbe
mov
or
rcrb
frstor
mov
adc
push
sub
lock
lret
test
repnz
mov
mov
call
sbb
imull
inc
add
and
add
cs
mov
cs
push
inc
aad
sbb
mov
sbb
test
jle
and
add
jae
out
aam
and
scas
xchg
fistpll
mov
mov
inc
and
dec
fldcw
dec
cmp
sahf
or
test
std
data16
js
popl
pop
stos
out
jb
bound
fidivl
mov
fisubrs
fdivrp
mov
rclb
sbb
gs
jne
int3
mov
into
data16
push
jb
ss
xchg
xchg
mov
aas
inc
cltd
xchg
or
dec
test
cs
xchg
rorb
popa
popf
mov
or
aaa
fisubrl
icebp
jb
cmp
pop
inc
out
sub
aas
repz
mov
inc
lock
add
push
adc
mov
push
loope
sub
scas
arpl
iret
xchg
std
push
insl
fistpll
das
shlb
leave
test
and
das
insl
jge
push
pop
insb
movsl
loop
fnstsw
mov
sbb
mov
adc
inc
shlb
frstor
imul
or
add
insb
mov
fdivrl
stc
pop
imul
add
xchg
push
or
movsb
ljmp
mov
push
mov
pop
jnp
mov
loope
sbb
push
mov
movsb
jo
cmpsb
cmp
fldl2t
push
fs
push
cld
jmp
pop
dec
lret
mov
aaa
inc
outsl
dec
adc
mov
jbe
pop
and
jge
push
or
inc
xor
jno
xlat
mov
add
sub
sub
es
mov
xchg
xchg
push
lret
dec
divl
sub
push
cltd
sbb
pop
inc
hlt
xor
loopne
stos
mov
arpl
aaa
jecxz
xchg
mov
add
push
add
add
dec
xchg
loope
cmp
sbb
push
jbe
sub
in
xor
pusha
mov
sub
mov
push
mov
rcrl
xchg
loop
cmp
cs
xor
sbb
jno
pop
add
push
mov
dec
push
jae,pn
in
mov
jne
shlb
cld
sub
add
js
sub
aam
adc
jp
push
lds
jl
loope
test
xor
inc
and
jp
imul
jecxz
jg
pop
push
and
jl
cmp
out
inc
fistpl
std
sbb
xchg
and
orb
xor
push
and
lods
push
dec
xchg
mov
mov
rcll
stos
pop
pop
push
mov
xlat
mov
xchg
pop
enter
adc
in
cmp
ja
sub
jnp
pop
cmc
std
mov
sbb
push
jp
push
iret
xchg
inc
movsl
jo
sbb
push
movsl
fwait
jle
jg
cli
ljmp
cltd
adc
in
nop
sub
or
mov
push
cmpsb
popa
cmp
mov
xorb
ljmp
inc
inc
lahf
mov
lods
push
in
pop
mov
je
push
dec
mov
push
or
ret
rorl
push
sbb
ret
jge
xor
xor
adc
lahf
mov
icebp
rcrb
pop
cmpb
and
push
mov
js
inc
in
lods
lods
pop
mov
dec
mov
push
xchg
adcb
rolb
jae
out
jb
ss
push
arpl
push
mov
in
or
ret
call
and
lock
ret
std
pop
in
js
aas
sub
mov
loopne
xor
push
lahf
enter
and
sub
stc
cmp
xor
fwait
mov
push
jle
jmp
call
push
nop
jbe
xchg
repz
dec
rclb
jnp
mov
and
mov
jns
call
int
inc
adc
pop
mov
insl
pop
dec
inc
jp
daa
or
jns
test
mov
imul
ss
add
and
test
arpl
call
mov
test
push
loopne
roll
incl
lret
mov
mov
fdivrp
xchg
daa
mov
data16
fildl
xor
icebp
fisubs
jmp
push
push
mov
mov
adc
sbb
push
adc
out
mov
pusha
add
inc
imul
fwait
push
pop
test
es
sbb
int
lcall
movsb
adc
sub
hlt
cmp
sub
inc
push
out
xchg
cmp
loope
test
cmp
adc
daa
inc
push
std
pop
popf
imul
sbb
ja
push
add
xchg
inc
mov
jg
jno
and
lds
lods
aad
and
xchg
repz
lods
outsl
cmpsl
or
les
faddl
cmc
ror
and
nop
xchg
adc
dec
sub
sbb
adc
outsl
out
stc
pop
sti
push
cmpsb
jge
loope
mov
bnd
dec
add
je
xlat
xorl
push
add
sbb
aad
and
outsb
sbb
addl
mov
test
ss
daa
mov
es
jge
cmpsb
xchg
sbb
sbb
les
jmp
frstor
mov
ss
mov
test
fnstcw
insl
mov
shrb
sar
mov
xlat
test
inc
in
sub
iret
xchg
inc
jae
stos
ret
aad
js
mov
push
inc
xorl
sbb
arpl
push
lret
sahf
pop
gs
aad
ja
aam
adc
push
push
mov
outsb
pusha
js
fs
iret
shll
jmp
out
cmpb
cmc
inc
jb
sub
dec
mov
mov
mov
aad
pop
ja
divb
in
mov
lcall
dec
cld
mov
mov
adc
add
dec
add
mov
xchg
movsb
fmul
notb
out
jbe
rcl
mov
cmp
dec
or
push
or
movsl
lock
je
jmp
rcrb
cltd
cs
adc
test
lods
mov
sbb
xorl
mov
add
ds
xchg
add
orb
cmpsl
cld
out
sbb
mov
mov
jp
stos
scas
in
pop
inc
mov
ret
or
fbstp
sbb
movsb
leave
sub
int
cmp
cmp
push
push
push
lock
shll
pop
jnp
inc
stos
cmpsl
jl
shll
xor
mov
fwait
into
jle
enter
in
cltd
js
fmuls
jbe
inc
dec
mov
mov
dec
dec
mov
repz
push
jnp
flds
jmp
cmp
adc
or
or
cmp
pop
mov
icebp
mov
outsb
repz
es
test
sti
outsl
aaa
insb
jge
testb
and
xchg
ret
cmp
pop
xlat
sub
nop
xchg
mov
test
add
mov
xchg
and
dec
push
jns
fsubrl
mov
jne
mov
stos
cltd
ds
jnp
push
mov
inc
data16
push
dec
push
in
lcall
pop
pusha
cmpsb
push
push
stos
jno
fldcw
scas
jmp
lock
mov
jno
int3
adc
mov
xor
adc
cwtl
fcmove
addr16
fidivl
sahf
nop
push
xchg
rcrb
js
dec
jmp
add
fdiv
mov
stc
adc
sub
call
push
test
sbb
in
inc
mov
mov
jae
es
mov
pop
leave
lock
popa
adc
fdivrl
out
adc
mov
pop
sub
insl
addr16
fildl
sti
cs
test
xchg
cmp
loope
xor
mov
push
in
test
cmp
imul
sbb
jb
ds
xchg
pop
push
jnp
hlt
or
pop
xchg
jbe
call
pop
lds
aas
add
movsl
mov
fisubrs
jmp
dec
mov
fmul
mov
or
sbb
jge
adc
xchg
adc
or
cld
int3
jno
les
xchg
xchg
loop
lds
mov
test
add
add
xor
add
je
sub
jbe
clc
movsb
mov
addl
imul
lcall
sbb
jnp
hlt
cmp
hlt
sbbb
cmp
leave
jb
repnz
inc
push
mov
xchg
or
in
jp
push
mov
mov
ss
jmp
push
scas
jge
aam
pop
loop
mov
xor
sub
js
xlat
rcl
xor
cltd
fwait
jne
stos
popa
mov
mov
or
insl
mov
xchg
sbb
cmpsb
jl
sti
adc
dec
adc
push
inc
and
mov
std
stc
jno
call
in
mov
sub
jno
ss
lea
mov
filds
jle
pop
stos
adc
mov
jb
test
mov
rcl
xor
rol
xor
xchg
xchg
cmpsb
pop
popa
mov
ret
pxor
test
rclb
xchg
aaa
mov
and
lret
mov
jg
xchg
mov
jno
push
lret
stc
inc
sarl
sub
mov
ljmp
mov
fiadds
sahf
mov
xlat
mov
xchg
mov
sub
or
call
xor
or
in
adc
std
pop
mov
xor
call
paddusw
std
or
popa
adc
jecxz
cli
lahf
push
je
mov
mov
push
fwait
push
ficoms
sti
ss
insb
gs
cwtl
sbb
xchg
jmp
push
push
in
cmpsl
lea
bound
add
sti
inc
xor
cmp
rolb
cmc
mov
adcl
jb
xor
stos
nop
cmpsl
orb
inc
outsb
fsubrl
adcl
or
xchg
stc
mov
mov
dec
movsl
mov
outsb
rclb
xchg
cltd
mov
jnp
pop
or
jnp
and
out
cmp
push
ret
add
mov
test
idivl
outsb
inc
aaa
xor
pop
ljmp
xor
inc
mov
sub
sub
dec
mov
or
gs
mov
cli
popl
pop
jp
xchg
xchg
aaa
loopne
lock
dec
sub
sub
test
xor
imul
lds
cmp
scas
xchg
pop
sti
xchg
hlt
xor
pop
shll
push
or
inc
adc
xor
int3
in
jae
xchg
inc
push
jle
xchg
inc
repnz
pslld
pop
jge
push
in
pop
push
das
xor
push
das
popf
adc
lds
scas
js,pt
xchg
add
daa
daa
push
lcall
mov
cmp
rcrl
cwtl
fbstp
adc
loope
jne
inc
add
dec
fisttpl
mov
pushf
and
cmpsb
inc
movsb
lahf
sahf
andb
leave
orl
mov
sbb
shlb
jge
sbb
test
mov
shrl
loop
imul
hlt
negb
in
jg
cmp
jecxz
adc
jecxz
xchg
xchg
sub
mov
and
mov
popf
mov
lods
repz
dec
fdiv
rcrl
mov
cmpsb
out
rcr
addl
aad
loop
xor
push
and
movsl
and
push
push
lds
psubq
es
lds
mov
aas
iret
test
mov
jae
into
in
xor
outsl
mov
jg
cltd
mov
add
push
int
jnp
pop
jecxz
outsb
cwtl
push
bound
sub
in
out
cs
adc
cmp
shlb
jns
roll
jmp
push
or
cs
into
mov
xor
ljmp
jno
bound
pop
imul
add
add
dec
pop
dec
xor
fdiv
pop
fdivp
or
testb
mov
or
lock
push
cmpsl
sub
mov
add
std
xchg
xchg
fnstcw
lcall
adc
cld
stos
pusha
movsl
insb
cmp
mov
pop
inc
cmp
jge
xlat
repnz
push
movb
cmp
scas
push
mov
push
call
shll
xor
icebp
aas
sbb
dec
ja
adc
pusha
adc
repnz
cmp
ljmp
add
jb
repz
xor
clts
or
ss
sbb
rclb
push
mov
fs
xor
inc
pushl
and
cmc
imul
cmpb
outsb
push
hlt
dec
adc
lret
fs
lcall
mov
out
push
mov
xchg
aaa
sbb
xor
aam
popf
mov
mov
or
rcl
ss
in
and
scas
ret
sbb
insb
cli
inc
push
cmp
cmp
cmp
vpaddsw
stos
bound
repnz
jns
clc
repnz
xchg
addb
pop
je
jl
ret
dec
mov
dec
aas
push
fsubrs
pop
pushf
xchg
ds
pop
into
add
iret
and
inc
dec
adc
inc
out
test
aad
arpl
pop
xchg
mov
mov
clc
mov
dec
fnstsw
movsb
inc
fmul
adc
xor
cmp
xor
movsl
sbbl
mov
mov
sbb
dec
dec
add
push
push
or
imul
jecxz
pop
sub
loopne
push
dec
dec
movsb
mov
push
sub
out
mov
xor
push
pop
and
lahf
cld
adc
and
mov
mov
sarb
pop
das
sbb
mov
push
sbb
mov
ret
sub
shl
push
loope
jb
mov
int
imul
sbb
cmp
rorl
aam
outsb
sub
pop
pop
pop
mov
loop
insb
movsl
cmc
icebp
das
ret
rcrl
adc
jecxz
imul
pop
jns
outsb
mov
xlat
test
in
push
jo
mov
push
ja
cmp
daa
dec
add
cmp
cmp
out
repnz
loopne
fldenv
repnz
adc
pop
mov
add
mov
pop
aas
test
adcl
lods
lods
es
in
orb
lods
dec
mov
dec
cltd
stos
div
lret
and
and
jb
push
sbb
cmc
pop
ret
xor
mov
mov
faddl
addl
mov
sbb
and
sbb
inc
ror
jecxz
lcall
push
hlt
shrb
dec
dec
sbb
mov
fistps
ss
outsb
or
jecxz
jns
ficoms
imul
cmc
cmpl
daa
fstpt
lret
xchg
out
out
inc
enter
push
dec
sbb
ret
and
frndint
ja
bound
stc
inc
add
iret
and
fwait
add
inc
inc
outsl
imul
dec
xor
loop
lea
xchg
cmpsb
sub
fsubrp
inc
inc
jle
jnp
xchg
sbb
mov
push
in
jbe
xlat
add
fadds
xor
cwtl
outsb
mov
outsl
xor
add
mov
mov
fs
mov
sbb
loope
xor
mov
loop
rorl
pop
sbb
inc
repnz
or
insb
and
ret
inc
mov
inc
outsb
sbb
jo
outsb
movsl
mov
pop
lret
es
push
popf
xchg
push
inc
in
pop
sbb
in
pop
mov
dec
xchg
and
mov
inc
push
dec
xchg
data16
sti
add
cmp
pop
push
push
cld
adc
dec
inc
jne
xchg
loopne
out
ja
out
dec
inc
mov
cmc
xchg
push
roll
mov
mov
aam
mov
sub
inc
mov
sub
bound
xchg
test
dec
inc
dec
lret
sub
mov
in
push
push
divb
js
cltd
jge
in
jmp
mov
pop
pop
push
or
push
sub
xchg
repz
iret
mov
mov
mov
decl
into
cmpsb
mov
xlat
mov
mov
inc
int
daa
inc
popa
add
int
fnstsw
inc
ss
jmp
add
clc
sbb
sbb
lea
mov
fsts
paddd
ja
jae
inc
mov
ret
fmul
pop
push
sti
icebp
add
mov
movsl
jns
xlat
sub
aam
jmp
dec
ficompl
notl
inc
or
push
ficompl
mov
loope
out
sub
jns
dec
sbb
xchg
inc
fwait
shlb
cli
push
add
das
xor
js
dec
je
rclb
xchg
cmpsb
push
xor
inc
jb
sub
pop
mov
pop
leave
add
mov
xchg
xor
mov
daa
xchg
shrb
and
lock
xchg
jle
out
cld
adc
lcall
cwtl
push
sbb
sti
loop
sbb
out
sbb
sbbb
mov
push
pop
movsb
call
jbe
sbbb
inc
jbe
adc
ljmp
scas
push
roll
mov
push
addl
test
push
aaa
push
call
out
gs
sub
je
mov
dec
add
pop
cli
cld
outsb
sub
rolb
out
es
std
mov
cmpb
call
lret
out
cmc
pop
cmpsl
cmp
adc
mov
cltd
mov
loope
xor
outsl
repnz
push
mov
pop
pushf
xor
ficoml
and
mov
out
stos
lods
cmpsl
lea
data16
mov
push
dec
push
pushf
ret
mov
imul
loopne
and
popa
jge
inc
inc
mov
out
idivb
out
ljmp
addl
inc
leave
xchg
jl
mov
test
cmp
push
add
sub
sahf
push
xchg
int
test
mov
das
mov
sub
xor
fnstenv
ljmp
mov
stos
dec
into
loop
mov
int3
cmp
out
cltd
or
addb
jns
testl
lret
sbb
dec
mov
clc
decl
ds
inc
jle
and
ret
aas
push
inc
mov
andb
mov
inc
or
add
jne
or
jp
leave
jecxz
fsubl
adc
mov
cmp
mov
in
xor
xchg
sbb
in
data16
cmp
fs
and
pop
ret
sbbl
adc
ljmp
aas
or
push
sub
adc
repnz
shll
jecxz
addr16
daa
xchg
mov
js
or
push
mov
lahf
mov
xchg
and
mov
xchg
cmp
inc
inc
mov
cmpsl
or
lock
push
lahf
mov
movsb
dec
mov
push
out
popa
mov
sti
lods
clc
push
adc
jnp
push
out
jecxz
dec
fadd
std
stc
cli
pop
push
fdivrp
adc
mov
mov
xchg
add
popl
shrb
mulb
and
lods
das
adc
subb
mov
sbbl
add
and
inc
pusha
and
inc
lods
cld
nop
addb
jae
mov
lret
and
mov
leave
dec
jmp
pop
loope
dec
sahf
push
rcrl
scas
in
insb
sbb
push
push
rolb
inc
fidivl
syscall
and
jnp
inc
push
enter
pop
add
sub
dec
mov
ds
jmp
shrl
sub
jl
cli
neg
sub
push
fwait
or
inc
push
adcl
inc
xchg
out
or
std
arpl
lds
inc
cs
andb
mov
jae
sub
and
ret
fidivrl
adc
adc
dec
add
cmp
out
data16
adc
xchg
and
lahf
inc
dec
je
clc
aad
not
jno
xor
push
mov
mov
ja
rclb
rsm
arpl
mov
mov
pop
dec
fisubl
test
loope
pop
clc
or
popf
pop
fdivp
dec
iret
sbb
xor
int
das
push
mov
sub
xchg
mov
loopne
popa
or
add
adc
inc
xor
inc
divl
push
jbe
rcrl
pop
add
xchg
mov
xlat
popf
xor
fwait
inc
lcall
test
push
aam
stos
pusha
ja
aaa
scas
jmp
pop
and
or
lock
in
cltd
dec
mov
fcmovnb
jecxz
xchg
mov
xor
mov
lods
popa
and
mov
and
or
cmpsb
jno
sub
pop
inc
mov
daa
jo
jl
push
and
inc
outsl
jecxz
pop
scas
stc
addr16
aad
cmpl
lcall
aaa
das
inc
push
sub
popa
jnp
setnp
pop
mov
dec
xor
jae
call
mov
push
ficoml
dec
cmpsl
push
push
aaa
imul
and
mov
mov
sbb
gs
loope
sbb
cld
xor
jl
mov
and
cmc
scas
mov
lcall
aaa
sub
cltd
or
push
mov
ds
gs
fildl
js
mov
pop
inc
sahf
push
out
sbb
subb
dec
mov
or
cmc
inc
mov
xchg
popf
add
add
cmp
adc
dec
aas
pop
jle
dec
movsl
es
pop
sbb
mov
jae
je
inc
sbbl
sbb
add
cmp
mov
inc
and
adc
jmp
xchg
loop
lea
adc
or
out
cmpsl
movsb
stos
out
jno
pop
nop
inc
mov
test
nop
test
popf
cmp
imul
push
lds
in
xchg
jl
mov
popa
xchg
in
data16
mov
aas
enter
in
lahf
aad
inc
mov
bound
inc
mov
scas
mov
lea
cmpsb
pop
mov
cmp
push
cld
push
fs
lret
fldt
scas
cmp
mov
ficomps
xchg
cwtl
out
fildll
xor
cmpsl
mov
jle
add
pop
test
and
rolb
cltd
scas
lea
xor
cmp
stos
shl
mov
ret
jnp
mov
fsubl
dec
mov
movsb
lret
lods
jb
mov
and
pop
dec
inc
data16
mov
mov
inc
loope
into
mov
hlt
adc
idivb
add
sub
test
jb
dec
outsb
push
push
xchg
lock
arpl
fistl
fdivl
jmp
push
and
mov
pop
mov
std
mov
into
jle
jno
add
or
adc
pop
ret
lret
adc
xchg
stc
push
jmp
jle
or
add
lret
and
sbbl
flds
dec
mov
loope
sar
xlat
into
inc
xchg
dec
andb
xchg
add
subb
and
mov
lea
popa
mov
int
into
test
out
cmp
loop
dec
rolb
pop
or
inc
out
lret
inc
jbe
xor
mov
hlt
mov
aaa
pushf
xchg
mov
rcll
add
ret
jecxz
dec
int3
jle
jle
les
add
movsl
xor
roll
mov
subl
cltd
mov
jecxz
cmpsb
inc
adc
lcall
sub
stc
jl
push
inc
jb
or
add
inc
mov
push
iret
testl
mov
cmp
pop
pop
mov
mov
pop
push
jb
lcall
gs
sub
sub
nop
clc
lea
xchg
dec
sbbb
push
xchg
data16
loop
push
lods
fistpll
mov
movsb
movsb
mov
and
jns
xchg
insb
sbb
jl
ds
lret
add
ds
frstor
ja
dec
cli
cwtl
add
jmp
rcll
cmpsb
sbb
pop
shll
test
sbb
call
ret
push
fcoms
lods
adc
push
pop
test
nop
cmc
subb
cli
cs
sub
cmp
cmpsb
mov
cmpsb
jl
dec
movsl
xor
clc
mov
or
in
and
stos
xchg
pop
hlt
ja
imul
xor
or
sub
xchg
imul
xchg
jbe
sub
repz
xchg
jecxz
jmp
mov
or
sub
mov
or
mov
push
mov
xchg
pop
loope
mov
sbb
enter
cmc
xor
lahf
enter
and
out
mov
pop
add
xchg
out
loop
jns
js
and
int3
jo
adc
jp
stos
pop
or
repz
and
test
cs
mov
mov
xchg
aas
cmp
cld
aaa
repnz
jbe
popf
jne
je
test
lock
jl
and
dec
xchg
jge
in
and
cmp
lea
ret
sbb
test
add
js
sbb
jo
int3
xchg
and
xchg
mov
loopne
mov
adc
sub
ret
and
pop
and
pop
push
xor
sub
pop
lcall
je
adc
lds
push
push
or
mov
daa
lods
in
loopne
jns
cmc
push
addr16
ljmp
pop
push
pop
xchg
inc
or
ret
popa
fiaddl
push
lds
leave
and
jle
pushw
inc
fcomip
cmpsl
or
add
lods
rdpmc
pop
cmpl
xchg
mov
fistps
add
fimuls
out
pop
xor
pusha
lret
addr16
mov
mov
jnp
popf
js
das
js
mov
jl
bound
sbb
es
ljmp
push
push
xchg
popl
jle
xor
adc
int3
jo
outsb
push
aaa
cld
mov
iret
cltd
test
es
pop
iret
aaa
dec
mov
jns
popf
add
add
rep
add
adc
pop
or
sarl
in
pop
in
test
sub
cmc
es
dec
dec
nop
cld
xor
mov
incb
adc
fcompl
outsl
push
jecxz
daa
push
mov
adc
and
into
aad
or
and
jl
inc
and
addr16
aas
xchg
adc
inc
mov
idivb
mov
pop
push
mov
add
sti
js
daa
lret
fstpl
jo
pop
push
add
mov
mov
pop
xor
imul
or
mov
icebp
and
cmp
je,pt
push
cmpsb
jge
pop
fstl
leave
sahf
bound
inc
push
jp
adc
std
in
loopne
arpl
iret
daa
add
fcomp
mov
rclb
adc
in
xchg
inc
iret
sub
sub
data16
insb
dec
dec
sbb
mov
jo
sbb
inc
daa
popa
pusha
or
cli
rolb
call
fcoms
dec
mov
lret
add
pop
pop
mov
jbe
cld
pusha
inc
and
sub
scas
mov
dec
aam
movaps
pop
fsubrl
mov
hlt
jo
inc
pop
mov
jge
stc
call
sub
sbb
punpcklwd
jmp
pop
push
xor
stos
cmp
into
test
add
push
mov
mov
jb
jns
pop
inc
repz
ja
aaa
mov
xchg
outsb
or
stos
mov
pushf
mov
scas
test
push
push
jnp
jp
inc
dec
fwait
jle
ret
jo
mov
ss
mov
cmp
fnstenv
popl
lock
scas
rcrb
fnstenv
mov
cmp
lea
subl
xor
pusha
test
inc
mov
mov
ss
movsl
stc
or
jmp
stc
and
push
mov
enter
mov
inc
pop
movsb
jle
jmp
subl
int
decb
cwtl
jo
inc
cmc
xchg
or
xchg
shrb
pushf
cmp
cmpb
mov
add
movsb
and
jp
dec
sti
dec
imul
jne
test
jge
xor
adcl
nop
jno
inc
rcrl
das
cmp
outsl
jns
cmpsb
test
push
jae
cmp
call
in
or
movsb
inc
call
or
adc
xor
and
cwtl
or
inc
scas
dec
pop
sub
mov
xor
jle
pop
mov
les
push
test
cmpsb
mov
jecxz
mov
divl
inc
push
jns
xchg
lods
jge
dec
push
xor
push
testb
test
cmp
sub
jge
mov
xchg
jmp
fnstenv
jnp
mov
lret
push
mov
mov
cmc
mov
mov
add
mov
xchg
movsl
cmp
push
adc
repnz
out
ss
add
mov
mov
pop
cmpsb
push
mov
xlat
mov
into
arpl
mov
ficoml
test
fistpll
xchg
sub
je
sbb
ret
scas
imul
daa
mov
add
test
mov
ficoml
dec
dec
push
inc
push
repnz
push
lret
mov
pop
pusha
orl
into
cmpsl
push
popf
adc
sahf
out
xor
adc
inc
repnz
lock
iret
into
pushf
sbb
int3
ret
popf
xchg
mov
test
adc
xchg
insb
stos
stos
pop
jmp
testb
pop
aam
pop
loopne
fs
push
movsb
xor
cmpsl
or
mov
push
sub
xchg
adc
push
dec
mov
sahf
sahf
jae
sbb
cld
popf
std
push
stos
inc
pop
jbe
notl
imul
sbb
mov
jbe
dec
in
or
lds
mov
xor
sahf
pop
and
push
ficoml
jmp
add
push
test
repz
sbb
lock
sbb
lret
arpl
pushf
or
lds
out
sub
aas
push
les
add
outsl
mov
add
sbb
or
mov
adc
fsubl
test
arpl
or
cmp
aad
or
fs
jecxz
cmp
sbb
lcall
jecxz
scas
mov
mov
or
adc
jnp
test
mov
add
in
xchg
add
lcall
and
test
addb
jnp
jne
inc
push
movsb
lods
test
push
leave
pop
mov
pop
dec
sbb
push
dec
movsb
daa
inc
icebp
xchg
stos
add
jnp
out
pop
cmp
push
add
jl
outsb
mov
sbb
cmp
adc
es
xchg
and
subl
in
jle
pop
into
scas
inc
stc
push
adc
push
or
test
mov
xchg
aaa
js
jbe
dec
mov
xorl
es
test
jg
xor
or
xchg
in
pop
loop
lock
das
sbb
jg
enter
pop
lock
jl
aas
push
lret
jmp
mov
int
cwtl
cmpsl
repz
addl
mov
inc
pop
addl
and
js
add
and
xchg
dec
push
out
pop
sub
ljmp
sarb
inc
jmp
jp
addl
push
xchg
jns
lods
test
sti
negl
push
arpl
cld
jo
mov
aas
adc
push
sub
call
push
loopne
jno
js
or
pop
ljmp
push
lods
fnsave
xchg
int3
xor
push
mov
ret
jno
xchg
into
aad
dec
lret
adc
inc
pop
loopne
mov
dec
into
xchg
sub
mov
les
roll
push
fdivl
and
fsubrs
js
ljmp
mov
pop
mov
xor
mov
pop
gs
xor
lds
add
std
subb
es
jae
repz
icebp
out
or
pusha
sbb
lds
add
les
or
incl
push
jp
fwait
enter
inc
pop
movsl
sub
test
dec
fldt
mov
mov
sbb
bound
sbb
mov
mov
or
mov
in
mov
imul
cs
out
popf
xchg
pop
rcll
push
dec
xchg
mov
rcl
jle
popw
mov
jmp
sbb
ss
inc
icebp
mov
std
mov
xor
mov
push
cltd
fiadds
leave
fidivs
cmpsb
stos
into
jne
int
xchg
jno
pop
mov
sbb
inc
jg
and
mov
pop
mov
adcb
cmp
int3
setg
lock
or
inc
mov
or
test
lcall
imul
lret
sbb
mov
add
xchg
sti
push
in
cmp
push
cmp
lods
aam
bound
jnp
pop
in
jp
lods
enter
xchg
add
push
push
push
pop
add
lock
inc
or
repnz
cmp
filds
ffreep
xchg
pushf
test
arpl
mov
push
pop
dec
in
sbb
pop
or
bound
pop
mov
dec
jb
in
aaa
dec
addl
mov
mov
mov
fs
xchg
add
insb
inc
fisttps
mov
shrb
xchg
fldt
xor
mov
adc
les
das
ficoms
lods
xchg
push
std
xchg
add
enter
push
bound
dec
out
xor
mul
fidivs
xor
enter
imul
inc
inc
mov
xor
fcmove
pop
dec
loope
mov
dec
adc
sbbb
dec
mov
mov
push
mov
decl
adc
lcall
int3
pop
adc
cmp
enter
adcl
andb
bound
std
hlt
shll
into
sbb
push
pop
sub
scas
and
divl
mov
sbbb
inc
xor
int3
lods
cmp
lret
stc
ss
jecxz
jg
addl
out
mov
repnz
jbe
stc
pop
outsl
mov
ret
pushf
fidivl
xlat
fists
das
fbstp
add
fdivs
dec
shl
bnd
mov
in
push
lahf
stos
push
aam
test
jecxz
scas
add
mov
loop
push
out
xchg
out
sti
scas
cmp
sbb
lcall
lahf
xor
jnp
imul
imul
mov
test
jmp
movsb
jnp
cli
das
push
mov
or
xlat
scas
insb
mov
in
test
addb
sub
and
dec
je
cltd
add
add
sarl
inc
mov
and
xor
push
or
stos
inc
js
mov
push
sub
bound
nop
mov
cmp
insb
xchg
adc
into
shll
mov
and
mov
imul
pushaw
pushfw
lahf
lahf
ss
fbstp
shrb
ja
lret
mov
and
lds
dec
icebp
scas
push
out
and
mov
jb
sub
pushf
cwtl
dec
out
sbb
mov
jnp
outsb
cwtl
sbb
aas
movsl
pop
mov
insb
mov
idivl
mov
loope
mov
jge
mov
sbb
imul
int
std
xlat
add
enter
mov
mov
stos
and
adc
and
std
push
mov
popaw
cmp
in
in
mov
ficomps
xlat
and
dec
jb
jne
xor
push
sbb
dec
sbb
arpl
out
sub
lcall
push
mov
das
dec
loopne
mov
sbb
test
test
dec
cli
xor
js
inc
xchg
fs
pop
add
lods
cs
jbe
arpl
xor
add
mov
fbld
or
je
push
in
mov
push
pop
push
int
cmp
pop
cwtl
fldl
movl
lea
js
jle
inc
out
es
nop
loopne
sti
sbb
out
mov
and
jp
stos
jle
and
jl
loopne
fiaddl
inc
xor
dec
sti
dec
ljmp
sbb
cld
dec
int
mov
popf
xchg
push
out
jbe
hlt
bound
outsb
pop
mov
jnp
push
adc
push
pop
aaa
adc
mov
and
pop
popa
sbb
dec
pop
push
xchg
ja
cmp
repz
push
sbb
fadds
fidivl
mov
enter
jns
daa
cltd
adc
sbb
pop
repnz
lods
adc
aas
ret
cli
adc
pop
dec
or
xchg
stos
jno
outsl
clc
push
divl
jb
in
mov
xchg
xchg
imul
sub
mov
daa
adc
sbb
pop
mov
mov
enter
test
das
jnp
imul
jnp
add
orb
cmpsl
cld
ret
lea
std
or
out
bound
push
xor
sbb
stos
or
xchg
or
dec
sbb
roll
imul
and
sahf
leave
jnp
dec
repnz
jb
add
dec
or
lea
loopne
jnp
pop
fstps
adc
or
mov
in
das
test
call
aaa
push
fucomp
or
pop
or
cmp
ret
and
scas
push
xchg
jo
arpl
cmp
sub
roll
fstps
gs
push
add
push
ja
stc
sbb
jno
cmp
inc
arpl
sub
rclb
xchg
sbb
inc
push
pop
loopne
push
cmp
pop
mov
ss
pushf
dec
push
cmp
stos
aam
xor
xchg
subb
rclb
nop
adc
subl
cmpsb
cld
popf
fcmovb
or
inc
fists
xor
loopne
inc
mov
sub
lret
js
inc
jnp
mov
push
fmuls
jnp
gs
pop
mov
nop
inc
mov
repz
pusha
xor
pop
jno
jnp
cmpl
pop
scas
mov
repz
mov
in
cmp
push
in
add
arpl
add
iret
mov
sbb
push
ret
popf
or
scas
aad
stc
mov
xchg
das
stos
mov
xor
shll
andl
test
imul
sbb
aaa
ljmp
rep
mov
xor
jg
rcrb
shl
loop
jae
xchg
fdiv
sbb
pop
movsl
jmp
pushf
adc
dec
jae
in
mov
mov
pusha
mov
rcrb
fisttps
pusha
insl
out
popa
pop
cwtl
add
pop
je
xchg
aaa
xlat
add
jl
rep
in
fbld
adc
cld
push
call
sub
pop
sub
sbb
pop
push
test
sti
add
mov
vunpckhps
sbb
and
clc
xor
lods
mov
in
stos
sbb
push
int3
call
test
outsb
hlt
xchg
push
pop
subl
sub
inc
movsb
push
mov
loop
pop
neg
mov
hlt
leave
jne
mov
sub
mov
pop
xchg
push
loopne
add
test
sub
iret
stos
mov
lds
stos
inc
dec
add
xchg
orb
mov
adcl
bound
adc
and
or
mov
loop
fadds
jle
sarb
push
arpl
jae
imul
adc
jbe
pushf
je
mov
add
je
adc
or
pushf
and
sub
sub
sbb
push
xlat
mov
sbb
dec
xor
push
jbe
mulb
cmp
test
xchg
jno
hlt
test
sbbb
sbb
mov
xor
add
subb
adc
imul
xchg
xchg
into
pop
sbb
inc
mov
into
call
das
xor
repz
repnz
xchg
xor
sub
aad
jbe
add
loopne
aam
mov
insb
mov
pop
insl
fisubrl
subl
inc
inc
xchg
or
mov
outsb
xchg
and
adc
ret
mov
imul
movsl
lret
lds
xor
push
jnp
mov
xor
sbb
cmp
inc
scas
ljmp
rcll
adc
pop
ss
or
aaa
in
sahf
shrl
shlb
add
jnp
sub
inc
adc
iret
and
cmp
addr16
in
test
repz
mov
aam
ja
jle
adc
sbb
pop
jb
fldenv
scas
shr
dec
scas
sub
mov
mov
pop
pop
adc
pop
cmp
pop
mov
push
test
imul
lods
popa
mov
lods
jbe
data16
inc
imul
sbb
setl
xor
pusha
sbb
xor
xchg
dec
movsl
sarb
fldt
sub
jne
imulw
std
lods
cmp
dec
cmp
mov
das
stos
cmpsb
push
movsl
xchg
pop
inc
lds
addr16
mov
dec
sbb
out
adc
aas
push
mov
jbe
sub
ljmp
loopne
cmp
jno
xor
lds
insl
bound
ret
sub
enter
in
cmp
pop
cltd
lcall
adc
das
cwtl
into
jbe
sbb
ljmp
dec
jp
iret
nop
mov
nop
jbe
js
std
cld
xchg
mov
xor
lahf
adc
sbb
lret
scas
dec
rcll
dec
lods
aad
iret
xchg
in
dec
pop
xchg
push
pop
bound
je
cmp
testl
sbb
sub
push
inc
daa
mov
stos
dec
xor
loope
cmpl
lahf
cli
cltd
dec
sub
push
and
mov
adc
or
or
std
xchg
out
mov
out
fldl
arpl
cmp
xabort
or
and
push
mov
fstps
add
in
je
sub
cwtl
xchg
jns
test
or
jge
rcll
movsb
lcall
xchg
mov
in
dec
and
xchg
shl
sbb
int3
dec
push
mov
out
fwait
or
lcall
or
and
dec
in
pop
in
roll
mov
popf
sub
into
cli
negl
push
cs
icebp
push
xchg
dec
xlat
add
rorl
scas
push
xlat
push
test
mov
jns
cli
mov
pop
aad
sub
daa
dec
sub
jo
jl
hlt
and
inc
mov
mov
inc
pop
daa
cmp
mov
fidivs
aaa
inc
ret
mov
int
mov
add
loopne
dec
call
adc
and
pop
cmp
cmp
stc
lcall
xchg
lods
xor
xor
or
xor
sbb
push
sti
in
ljmp
sbb
cmpsl
mov
inc
fsubrs
mov
cwtl
xor
xchg
or
dec
in
lcall
es
mov
mov
in
popa
jno
adc
fwait
sbbb
jnp
outsb
adc
repnz
pop
sbb
call
cmp
ret
js
jne
fwait
adc
dec
xchg
mov
or
movsb
cmp
mov
int3
pop
pusha
inc
popa
inc
mov
push
add
mov
std
and
insb
inc
enter
mov
pop
pop
adc
or
xor
scas
fadds
mov
pushf
les
mov
dec
jns
add
inc
mov
sbb
clc
dec
cmp
mov
imul
pushw
push
adc
push
pop
pop
xchg
dec
jge
repnz
andb
fldt
jg
das
fwait
leave
dec
ss
int
into
add
outsl
icebp
test
xor
or
or
stos
incl
dec
jle
mov
aam
jge
sarb
movsl
imul
push
out
out
and
jle
ja
incl
pop
push
pop
or
aad
daa
addr16
push
sub
mov
lods
mov
fimuls
in
fcoml
push
add
mov
nop
sbb
loop
test
mov
outsl
jmp
rorl
ljmp
xchg
cmp
sbb
push
lcall
xor
ret
add
fistl
scas
xchg
cmp
inc
sub
mov
rolb
adc
int
and
sub
cli
leave
flds
lcall
popl
fistpll
pop
push
pop
and
and
jae
ljmp
aam
pop
pop
mov
pop
stos
adc
popf
push
mov
ljmp
mov
cmp
xor
addr16
and
adcb
jmp
leave
or
dec
cmp
pop
repz
xchg
push
cli
pop
fdivl
inc
sti
sbb
cmpsl
mov
shlb
add
lods
mov
pop
push
hlt
icebp
push
pop
pop
inc
cltd
stos
xor
xchg
cmp
jecxz
pop
push
lret
mov
mov
sub
mov
mov
movzwl
xchg
test
out
jnp
arpl
or
int3
jae
push
and
mov
sub
mov
movsb
stos
cmpsl
lret
xchg
inc
popf
inc
jnp
jo
push
test
lret
inc
lea
mov
cmpb
and
xor
mov
jmp
shl
cmp
call
in
mov
je
in
jno
call
mov
fimull
mov
sub
sub
and
popa
cmp
jge
ja
cmp
cmp
cmpsb
nop
sbb
lcall
cmp
arpl
incb
ss
out
fst
inc
mov
push
pusha
xchg
or
mov
sub
push
adc
ret
add
sub
pop
jmp
pop
shrb
pop
mov
sti
or
jb
cmpsb
in
jbe
fs
push
inc
and
out
push
outsb
div
fdivrl
mov
pop
jl
adc
cmp
mov
das
or
mov
lock
inc
les
inc
add
push
push
movsl
or
mov
pop
adc
jecxz
test
cmpb
xor
repnz
xchg
jae
sti
jmp
jbe
cmp
mov
cmp
addr16
xor
in
out
sbb
dec
ds
mov
inc
iret
fmulp
mov
adc
cmpsl
inc
mov
lcall
dec
inc
xlat
xchg
jl
jns
ja
and
mov
cli
mov
and
sub
ss
dec
push
mov
mov
push
push
fwait
mov
es
xchg
mov
inc
or
push
ljmp
push
xchg
and
sub
xchg
jp
xchg
gs
push
pop
testb
cmp
dec
popf
in
leave
filds
mov
pop
jb
aad
jmp
hlt
push
push
fs
mov
xor
cld
push
jns
clc
push
sub
xchg
scas
adc
and
out
popf
inc
roll
xor
xor
xlat
push
movsb
popa
insb
insb
mov
popa
mov
dec
mov
sarl
xorb
cmp
sbb
dec
jae
mov
mov
in
inc
ljmp
lods
sbb
push
mov
pusha
movsl
movsl
jbe
rolb
and
add
jp
sbb
pop
mov
mov
test
in
lods
push
shrb
fldt
outsl
gs
mov
hlt
fwait
ja
sbb
push
push
pop
popa
sub
fists
nop
lods
xor
lods
add
leave
mov
sub
mov
loop
or
mov
popa
adc
add
xchg
insl
add
imulb
cmp
push
scas
xor
xlat
loope
movsl
mov
push
pop
ret
push
sub
mov
cld
xchg
push
jns
pop
lcall
mov
icebp
lods
mov
pop
and
nop
fcoms
sarl
mov
sub
cld
push
cmpsb
adc
clc
pop
pop
fs
dec
sbb
gs
outsb
pop
sbb
mov
xchg
and
scas
mov
add
out
lea
lea
push
mov
aas
jle
ret
fdivl
inc
pop
pushaw
xchg
std
sar
inc
cltd
add
pop
jb
pop
jne
dec
mov
stc
pop
xchg
pop
stos
test
loopne
fldl
fldt
jg
js
dec
in
sarb
or
xor
cmp
dec
jg
and
push
jg
adc
test
mov
dec
or
ljmp
gs
jle
or
xchg
and
dec
call
mov
mov
push
inc
xor
xchg
iret
mov
jnp
mov
mov
pop
lea
aaa
adc
cwtl
mov
xchg
adc
xchg
in
ret
add
insl
mov
inc
sti
jne
inc
dec
jnp
cwtl
cmp
xor
lock
out
and
jno
imul
ror
or
in
cmp
scas
mov
rorb
add
cmpsl
fs
push
xor
repnz
loopne
bound
stos
push
sub
imul
arpl
cmp
dec
push
scas
xchg
inc
sub
insb
in
std
mov
fldenv
lds
sbb
sub
and
pop
sbb
jns
int
pop
xor
dec
or
cld
add
xchg
inc
dec
xchg
pop
add
test
les
sub
lods
arpl
push
sbbl
iret
pop
popf
add
sbb
pop
repnz
inc
xor
fwait
inc
dec
lods
popa
sbb
xchg
aam
pusha
add
movsb
jmp
mov
ret
mov
lret
mov
out
inc
inc
jg
mov
mov
xor
decb
mov
add
daa
fsubrp
fld
fwait
out
out
jns
out
sbb
adc
mov
xor
push
cli
xchg
or
je
cli
jb
fucomip
popa
inc
jge
aad
fwait
jae
in
out
mov
icebp
fistpll
popa
leave
pop
fidivrs
cmpsb
cmp
stc
mov
rcrl
add
outsl
push
push
push
push
xor
inc
loopne
cmp
cmc
or
pop
fistpll
icebp
adc
add
je
cmp
mov
fimuls
mov
mov
pop
mov
or
out
fstpl
sub
cmp
movsl
fwait
adc
mov
jb
mov
or
test
in
push
xchg
push
xchg
mov
rclb
insb
xor
mov
fsubr
aam
data16
ja
cld
mov
cmp
neg
push
rolb
mov
or
pop
xchg
shlb
adc
ljmp
sbb
into
add
jae
xor
int3
pop
in
mov
dec
cmp
pop
adc
mov
mov
pop
push
les
movsl
js
xchg
xor
cmc
pop
popf
mov
sbb
cmc
lds
adc
or
lahf
and
cmp
in
jl
xor
push
sub
lret
xchg
popf
into
push
insl
jo
jne
push
mov
lret
repz
cbtw
cmpl
adc
repz
imul
xor
enter
mov
fst
rcll
roll
arpl
mov
int3
jo
addb
rcrl
push
mov
out
outsb
xchg
add
das
cwtl
lods
mov
pop
sub
push
in
lds
push
mov
lods
mulb
addr16
jne
sbb
mov
arpl
pop
cmc
aaa
cltd
sbb
pop
repz
adc
ljmp
jmp
repz
pop
jmp
pop
mov
add
mov
insb
imul
js
in
arpl
aam
push
sahf
sbb
inc
mov
stos
sbb
sub
or
out
mov
push
jbe
mov
dec
out
mov
int
sub
scas
jle
insb
jmp
fmuls
pand
nop
sti
filds
outsb
xchg
in
in
jb
and
mov
xor
loope
jb
cmp
out
mov
and
pushf
and
adc
and
mov
mov
xchg
jbe
cmpsb
scas
sub
loop
xchg
mov
out
loopne
mov
xor
stc
lahf
pushf
push
fadd
sbb
pop
pop
dec
pusha
xorl
lods
sti
sbb
lea
pop
mov
enter
ljmp
mov
mov
xchg
sahf
ret
popf
mov
mov
aas
xor
aaa
push
sti
sbb
shlb
inc
data16
push
movsb
mov
pop
stos
mov
ja
inc
adc
testl
in
shr
lcall
xchg
in
inc
adc
test
push
adc
ret
leave
mov
xor
xchg
test
movsl
rorb
arpl
in
fwait
mov
repz
xchg
ret
movsb
mov
arpl
push
test
sbb
and
and
daa
push
jo
aas
fdivs
jo
push
and
xchg
aas
cmp
filds
or
mov
dec
adc
xor
sahf
mov
xor
jmp
cmpsb
dec
test
inc
stos
je
dec
xor
mov
cmp
mov
fcoml
add
mov
cwtl
idivl
int3
popa
mov
push
aam
fimull
mov
cmp
mov
test
inc
mov
mov
popa
xor
xchg
and
mov
rorb
repz
mov
pop
dec
cmpsb
test
orl
or
mov
jno
aaa
push
fnstenv
xor
pop
sbb
jae
dec
imul
pop
and
mov
aam
test
rcll
ja
xor
ficomps
mov
xchg
nop
mov
shrb
or
call
pop
mov
and
or
int
xor
clc
cmp
je
popa
pop
test
xor
jg
icebp
shll
push
add
jno
sbb
lods
cmp
xor
push
shl
xchg
push
stc
loop
pop
xchg
cmc
inc
mov
stos
cmp
xchg
mov
add
xchg
adc
sub
jbe
adc
aaa
xchg
xchg
jno
adc
jle
test
add
push
jae
in
cmp
inc
adc
test
mov
aaa
mov
push
mov
test
mov
ret
xchg
mov
arpl
mov
outsl
add
add
inc
jg
cmpsl
xlat
std
ja
iret
loopne
inc
lret
das
orb
mov
inc
incb
or
sub
popf
pop
mov
pushf
or
lock
cs
cmp
repnz
or
jecxz
and
cs
stos
fstps
mov
call
push
push
xor
push
xchg
lret
ret
lock
and
dec
or
in
lcall
clc
xchg
orl
sub
fldt
addr16
xchg
fcoml
fsubrl
aas
jns
cmc
sbbb
in
pop
adc
in
ret
mov
insb
push
int3
fnstsw
js
iret
or
outsb
push
jae
mov
mov
lods
push
mov
pop
scas
jns
ja
pop
mov
bound
push
pop
adc
fisttpll
pop
mov
shl
jmp
shll
push
subl
inc
dec
cwtl
sub
ds
jp
bound
pop
xchg
jle
xor
ficoml
stc
cmp
mov
std
sbb
push
arpl
fs
out
fld
jecxz
or
mov
ss
bound
or
icebp
mov
inc
das
push
push
fcoml
adc
mov
xchg
inc
ficompl
or
pop
fadd
mov
and
outsb
lock
jge
mov
xor
ljmp
push
out
int3
jge
aas
or
lahf
jno
mov
movsb
into
cmp
xor
pop
xchg
xor
or
adc
lret
cmp
lods
insb
lock
popf
xchg
xor
dec
push
stos
loop
cmp
cld
dec
fdivrs
pop
push
incl
and
pop
push
lahf
lret
mov
push
movsl
sub
jae
aas
inc
out
lods
popf
lea
cmp
scas
jae
pop
jle
xor
push
pop
fmuls
int
mov
sahf
cmpsb
and
push
andnps
push
jo
or
scas
jp
xchg
movntq
xchg
inc
mov
ret
ljmp
ficompl
push
xchg
sub
mov
dec
lods
outsl
mov
shl
shlb
je
out
ds
into
aaa
cmp
fwait
sbb
xchg
xorb
dec
adc
dec
dec
subb
inc
fsub
mov
inc
into
dec
inc
adc
or
add
pushf
dec
add
jo
push
and
jp
gs
mov
ljmp
and
ret
jno
cs
popf
adc
je
add
bound
jae
mov
sub
in
mov
dec
data16
in
xchg
mov
mov
outsl
jge
and
movsl
xchg
fisubl
add
dec
lret
jno
hlt
aad
call
cli
aad
mov
rorb
or
sub
xchg
les
pop
mov
scas
and
test
push
push
push
ljmp
pop
cmp
push
mov
scas
dec
push
xchg
loopne
in
cld
lret
stc
jns
pop
jbe
dec
iret
cmpb
int
jns
xor
adc
mov
xchg
lahf
cmpsb
out
loop
les
lea
add
mov
test
push
movsb
int3
lea
aas
sub
adc
aam
fiadds
mov
les
mov
in
push
jns
aas
aad
xchg
cmpl
fistps
and
sbb
loopne
xchg
cmpsl
add
xchg
rcll
and
aas
inc
ds
cmpb
test
mov
inc
adc
scas
in
cmp
pop
inc
mov
mov
adc
rcrl
and
or
xor
imull
and
xor
jge
sbb
inc
mov
ret
mov
imul
aas
call
sub
or
sub
xor
mov
shl
xor
xlat
mov
cs
push
aas
mov
jb
push
xchg
fsubp
and
aad
testb
in
popa
lcall
scas
stos
ret
mov
cmp
shlb
or
adc
dec
pusha
fcos
pop
lahf
hlt
inc
push
in
sub
push
movsl
lahf
mov
jp
and
nop
mov
or
out
mov
push
xor
les
xchg
dec
in
lds
aaa
pop
mov
lods
aas
negl
sub
mov
xchg
fbstp
sub
ljmp
or
dec
scas
inc
rorb
mov
movb
jge
push
orb
das
sbb
dec
cmc
aad
or
xchg
pop
dec
addr16
dec
and
pop
ja
push
scas
push
lcall
sbb
addr16
xor
pop
inc
sub
cmp
cwtl
aam
jg
sbb
loope
movsb
adc
push
dec
cmp
in
dec
pop
pusha
push
es
inc
bound
inc
scas
stos
aaa
xchg
mov
rorb
inc
rclb
mov
stos
pop
cwtl
sti
imul
inc
dec
arpl
repnz
roll
mov
pop
cmp
stos
dec
jecxz
cld
adc
jns
add
and
mov
insb
insb
insb
xchg
icebp
mov
repnz
dec
stos
std
and
popf
jnp
and
mov
faddp
xchg
sahf
mov
jecxz
popa
into
cmp
sbb
sub
push
mov
clc
xchg
push
pop
sbb
loopne
fld
fadd
ret
xlat
loopne
mov
push
dec
rorl
push
dec
xchg
lahf
mov
call
subb
pop
add
xchg
movsl
jmp
mov
mov
mov
sub
pop
add
sub
pop
arpl
into
loope
sub
ss
push
cs
inc
sti
pop
push
lea
sub
sub
dec
push
std
mov
sbb
lret
sub
lods
std
xor
cmp
and
movb
jae
lcall
jbe
rcrl
mov
jge
dec
ljmp
shlb
leave
das
lods
in
pop
and
mov
pop
lds
jmp
lcall
stos
xchg
aad
rcrl
jo
adc
ret
iret
scas
xchg
in
inc
push
xchg
mov
lock
je
shrb
sbb
push
test
xchg
inc
fcmovb
inc
test
repz
inc
xchg
lea
cmc
imul
adc
adc
xchg
ljmp
pushf
aad
push
lahf
ret
or
neg
mov
adc
xor
lahf
dec
insl
lret
and
mov
das
xor
xor
hlt
int
mov
jge
dec
mov
in
pushf
push
xchg
dec
subb
int
stos
pop
push
imull
popf
adcl
jne
mov
andl
push
or
mov
int
lods
imul
loopne
xor
out
js
push
into
mov
cli
repnz
sbb
cmc
clc
pop
cltd
imul
mov
fdivl
inc
cmp
push
push
pop
pusha
mov
adc
ja
pop
lea
cmp
leave
push
cld
int
shll
add
out
into
scas
cmp
stc
out
adc
xorl
cwtl
dec
pop
insb
jecxz
scas
push
hlt
mov
mov
push
movsl
test
jl
inc
or
sub
pop
push
insl
and
and
loope
enter
adc
hlt
pop
dec
popf
push
cmp
jbe
iret
das
sbb
or
aad
movsb
pop
sbb
or
jl
pop
and
jae
cmc
les
push
hlt
mov
loopne
push
inc
pop
and
xchg
test
cmpb
insl
in
xor
leave
fildll
stos
addr16
sbb
stos
jg
imul
test
test
andl
cld
rolb
out
loopne
push
mov
repz
add
pop
jns
jae
add
push
add
adc
int3
sahf
pushf
lock
leave
ror
inc
sub
mov
fsts
xchg
out
into
mov
test
enter
popa
xchg
and
lea
xchg
xchg
push
jo
in
pop
push
xor
cltd
test
pop
add
cmp
sbb
xor
sbb
call
loop
jnp
pushf
data16
jbe
lock
daa
inc
xor
loope
xchg
stos
cmp
pop
lret
inc
dec
movsl
push
mov
mov
mov
mov
mov
sti
xlat
push
push
pop
xchg
mov
pop
scas
xor
jo
in
ss
inc
nop
pushf
loopne
cld
mov
fnsave
ret
cmp
test
push
add
xchg
stos
jl
shll
and
fsubr
or
dec
into
and
cmpsb
xor
jb
iret
sbb
mov
and
enter
mov
ja
mov
jp
popa
jne
js
jg
dec
jo
cwtl
in
xchg
outsb
test
xchg
in
xchg
pop
out
mov
test
loopne
cwtl
push
pop
pop
push
fdivs
mov
pop
xchg
arpl
sub
adc
ss
xor
test
insl
pop
pusha
fsubr
cmp
pop
or
loop
xor
inc
std
xor
add
outsb
outsb
mov
pop
cli
mov
mov
mov
xchg
pop
outsb
sub
jbe
cltd
mov
mov
lret
fincstp
adc
sub
jle
hlt
movsb
xor
sahf
push
xor
add
andb
add
dec
xor
loop
into
sub
lods
and
outsb
fsubrs
nop
and
dec
cmp
pop
mov
jno
push
lock
mov
jmp
jne
cmp
cs
jle
pop
pop
xchg
lret
mov
movsl
mov
push
jne
cmp
jp
shrl
jns
jno
aas
ret
and
xor
cmc
test
fwait
loop
or
imul
aad
es
das
lea
cmpl
aam
js
outsl
data16
fsubl
xchg
movsb
cmp
sti
jne
push
divl
jb
rcll
mov
jbe
in
icebp
rorb
ret
mov
dec
enter
sub
scas
cld
movsl
adc
mov
icebp
xlat
mov
lea
push
repnz
es
or
and
lcall
xlat
adc
incb
test
jb
and
jle
sbb
hlt
mov
adc
xlat
or
stos
adc
or
adc
pusha
insw
out
test
pushf
loop
adc
cwtl
mov
mov
movsl
dec
cmp
lret
push
adc
and
pop
xchg
dec
sub
cld
fimuls
sbb
and
aas
mov
mov
lea
out
adc
popf
jg
sbb
in
push
testb
cmp
andb
movsb
or
sbb
mov
or
xchg
or
dec
fwait
pop
outsb
dec
jo
popa
or
adc
xor
mov
xchg
jl
dec
jp
sbb
dec
fcoms
cmpl
arpl
sbb
fwait
sub
adc
mov
loope
sbb
mov
data16
orl
pop
xchg
aam
xlat
inc
mov
cwtl
dec
push
faddp
mov
mov
xchg
xchg
aaa
mov
add
and
test
sbb
push
sub
mov
mov
or
xchg
xchg
mov
push
stos
mov
or
lahf
sub
adc
mov
pusha
add
pop
mov
lea
sbb
mov
sbb
divl
xor
sub
das
push
lcall
mov
mov
or
mov
icebp
or
mov
xchg
xchg
sbb
repnz
dec
jne
lret
scas
out
push
in
repz
sahf
add
dec
jg
jnp
ja
call
inc
and
dec
gs
lock
jge
cwtl
mov
rcl
xchg
jb
es
pop
pop
iret
xchg
out
xchg
dec
mov
daa
loope
xchg
or
stc
addr16
mov
cmp
mov
js
add
xor
mov
cmp
sub
push
out
in
imul
xchg
lret
cmp
cmp
xchg
insb
add
mov
out
movsl
inc
xor
popf
cmpsl
lcall
movsl
fstpt
inc
fst
sahf
imul
shlb
and
shll
iret
lds
roll
and
jae
xchg
out
xchg
fcomps
lcall
cmp
loopne
ja
movsb
insb
fs
inc
sub
icebp
pushf
outsl
imul
xchg
jnp
push
test
inc
cs
ss
popf
leave
mov
lahf
adc
addl
mov
and
leave
push
sub
mov
sub
jns
arpl
pop
fidivs
push
lds
out
pop
or
shll
sahf
push
mov
push
andb
ret
js
popf
lods
push
jmp
data16
jmp
aam
test
and
repnz
repnz
leave
jnp
mov
lds
movsl
les
adc
ret
xchg
inc
jno
inc
scas
loop
xchg
push
mov
in
les
loopne
mov
aam
and
add
loop
test
lods
mov
or
shl
push
sub
imul
lea
int3
pop
fs
sti
dec
daa
pop
sub
fs
xchg
jl
pop
and
sbb
xchg
sub
or
inc
rcl
mov
mov
out
or
jb
iret
xchg
sub
add
addl
insl
xchg
cmp
lea
sbb
sub
mov
mov
mov
cs
orl
stc
mov
cs
pop
repz
movd
dec
mov
and
pop
loop
add
mov
popf
and
push
rorl
sub
je
out
addr16
data16
mov
and
cwtl
cmp
or
or
jno
stc
xchg
and
push
jnp
adc
dec
lods
xor
inc
test
mov
lret
and
or
cmp
sbb
push
shrl
out
mov
jg
mov
or
mov
fld
repz
sub
xor
and
push
filds
xorl
push
cli
pop
fwait
jo
xchg
sbb
hlt
jp
mov
xchg
fsubl
adc
imul
sub
das
push
pop
xor
mov
mov
enter
inc
xor
fndisi(8087
mov
icebp
aas
out
insb
jmp
and
inc
lcall
dec
rol
push
les
ret
mov
sub
arpl
xor
pop
into
inc
ss
mov
pop
shlb
jecxz
loop
jne,pn
mov
mov
jnp
xchg
out
xor
cmp
test
mov
sti
in
jb
outsb
arpl
jae
and
aam
insb
js
outsb
shl
xchg
aad
xchg
hlt
in
jo
sti
shlb
movl
dec
lods
imul
adc
movsl
or
dec
sarl
add
roll
mov
jnp
inc
rolb
pop
sub
pop
add
cs
jnp
mov
xchg
out
scas
jnp
or
rorl
clc
js
aaa
sti
test
out
push
imul
mov
int
mov
mov
jne
xor
sbb
inc
mov
mov
or
xor
push
icebp
int3
test
pop
les
jnp
push
cmpsl
fwait
dec
sahf
mov
mov
mov
leave
cli
cld
push
fsubs
int
dec
jbe
icebp
add
jecxz
imul
ret
jl
jg
cltd
xor
xor
mov
mov
mov
pop
push
jecxz
mov
mov
fdivrl
xor
cmp
scas
ljmp
sub
push
fdivl
rcrl
ret
fistps
int
lea
add
mov
xchg
mov
les
cmp
adc
push
dec
pop
cmp
inc
outsl
int
stos
add
sub
cmp
adc
inc
jecxz
dec
xchg
xchg
in
ja
adc
mov
popa
mov
mov
add
or
push
in
dec
push
mov
adc
cs
xchg
lret
movsb
inc
sbb
subb
inc
cltd
cmc
adc
push
mov
pop
fmul
push
add
into
jge
push
lds
sbb
arpl
pushf
dec
xchg
push
pop
repnz
push
sbb
cmp
in
lods
icebp
sbb
sbb
adc
into
mov
lods
cmp
shll
and
mov
add
xchg
jmp
icebp
add
test
popa
pop
push
mov
push
inc
pusha
lock
lcall
and
and
xchg
addr16
xchg
rcr
cmp
ds
push
mul
mov
rcrb
jbe
jmp
ds
adc
xchg
jne
or
in
adc
inc
and
cmp
vmwrite
or
mov
mov
scas
cmp
push
sub
jo
mov
sub
mov
lahf
mov
daa
test
imul
sbb
ss
dec
and
jno
push
sbbl
sahf
insl
jge
cmpsl
adc
jno
jmp
adc
pop
mov
adc
xor
dec
dec
mov
pop
fs
sbb
cmp
jg
sbb
mov
add
mov
sub
push
inc
dec
mov
fdiv
add
in
mov
inc
mov
inc
test
out
mov
pop
mov
xchg
movsb
xchg
out
inc
inc
mov
ss
je
popf
shll
mov
leave
mov
xor
xchg
push
out
add
rcll
lret
pop
cmpsb
out
jecxz
xlat
loope
inc
fmuls
into
mov
outsl
outsb
jge
pop
rorb
push
dec
cld
xlat
ja
leave
cltd
or
xor
adc
fidivrs
mov
sub
mov
outsb
into
sub
call
mov
dec
cmpsl
cmp
cmp
repnz
and
jbe
mov
mov
xor
xchg
call
clc
pop
data16
and
cwtl
adc
or
icebp
xchg
mov
pop
adc
add
fidivl
fsubrl
mov
testb
xor
pop
hlt
sahf
loope
xchg
icebp
cmp
jb
add
adc
xorl
sbb
loopne
fldl
pushf
jle
xor
jmp
ja
pop
negl
outsb
test
lret
mov
popa
xor
mov
nop
in
push
clc
es
cmp
jns
jns
stos
xchg
and
scas
in
insb
aad
clc
pop
inc
xchg
sub
mov
sub
mov
xchg
mov
pop
dec
orb
jno
adc
xchg
or
mov
call
mov
xor
addl
sub
jle
mov
in
pop
or
in
or
popf
cmp
addr16
push
jecxz
xor
insb
add
xor
jp
xchg
and
movsb
clc
stc
ds
xlat
ss
sbb
mov
jmp
ret
lcall
enter
test
popf
adcl
fs
push
test
sbb
pop
iret
push
cmp
roll
pop
pop
xor
xchg
xchg
xor
xchg
adcl
add
cwtl
pop
stc
lods
push
jb
les
xchg
stos
aaa
movsb
mov
std
sbb
pop
jae
lret
jae
popa
pusha
aas
xor
push
fists
pop
stos
bound
push
sti
aam
int3
in
repz
jmp
popf
sub
insl
pop
test
jle
xchg
pop
mov
lea
mov
add
sar
in
mov
pop
popf
mov
xor
pop
rorb
lock
mov
jns
aad
jbe
pusha
fstpl
sub
xor
sub
aad
mov
pushf
push
mov
je
test
xor
into
push
cmpsl
ficompl
lock
dec
shrl
arpl
jae
jbe
fs
push
fsubrp
xchg
adc
mov
sbb
pop
inc
and
inc
clc
or
hlt
pop
inc
cwtl
push
sar
mov
sub
push
cmpsb
push
movsl
addb
pop
push
rorl
sarb
cmpl
inc
mov
push
imul
loope
rcr
fs
or
pop
xchg
repnz
dec
push
mov
sub
add
jge
loopne
inc
adc
jae
lock
sbb
ret
sub
std
jns
cmpsl
lahf
call
add
mov
adc
pop
in
test
cmp
aad
jnp
stos
jne
subl
into
jmp
and
lds
das
mov
test
test
sub
pop
in
cmc
insb
mov
lahf
and
rcll
adc
mov
pusha
pop
dec
out
jge
push
jnp
sub
and
push
cld
dec
or
mov
inc
aam
mov
popf
xor
xor
jb
xchg
aas
jge
fldenv
inc
popa
std
fisubrl
mov
adc
xor
cmp
sbb
inc
jb
pusha
pop
ret
repz
nop
mov
adc
adc
inc
cmp
mov
pop
mov
fs
sub
sub
jnp
fadds
jecxz
cmp
pop
pop
sub
push
mov
lods
insb
push
lret
stos
add
xor
ja
push
jl
pop
movsl
cmp
push
push
mov
sbb
hlt
pop
cmpsb
mov
dec
sub
clc
rcrl
xor
andl
push
xor
aaa
dec
repz
cmp
or
and
iret
mov
inc
sbb
add
pop
mov
xchg
lcall
cmp
cmp
clc
pop
push
xchg
popa
jmp
stc
movsb
and
sub
cmp
sub
and
sahf
aam
lret
stos
std
loope
mov
cmp
mov
mov
mov
xchg
cmp
test
xchg
and
adc
jecxz
jae
rclb
lahf
orb
jle
testb
push
push
test
inc
pop
push
inc
jmp
xchg
pop
outsb
je
enter
scas
les
stc
xor
enter
jnp
mov
cmp
lods
pop
lret
shrb
mov
gs
mov
sub
cmp
in
frstor
jne
sub
dec
in
sbb
pop
cli
lret
out
sbb
mov
jo
adc
adc
jne
mov
lea
stos
inc
add
lea
pop
cld
in
lcall
mov
mov
push
inc
and
fwait
sbb
adc
xchg
jo
jno
xchg
xor
jbe
sub
adc
bound
lcall
push
mov
in
test
inc
inc
scas
push
or
and
mov
not
stc
push
mov
add
das
xchg
sbb
push
xchg
lret
imul
inc
xor
ret
lods
mov
or
daa
xchg
into
adc
xchg
fcoms
mov
mov
pop
add
or
das
loope
xchg
dec
test
cs
ss
mov
cmp
push
aaa
lcall
xchg
lcall
mov
rorl
sahf
xchg
pop
in
mov
cmp
es
push
sbb
out
jno
outsl
mov
inc
add
dec
and
std
dec
shll
pop
push
adc
addb
mov
repnz
xchg
repz
adc
add
jne
scas
push
sub
addr16
push
stos
push
dec
add
cmpsb
add
inc
std
lcall
inc
or
jl
pop
add
push
mov
sarl
mov
mov
cmpsl
cmpsb
fadd
call
xor
jne
sub
xor
ds
imul
and
xor
mov
adc
pusha
lcall
les
dec
pop
inc
or
push
or
mov
cmc
fldl
fistps
push
rol
fsubr
jne
fcompl
dec
sbb
jle
inc
mov
xor
pop
fs
in
lock
adc
stos
mov
ss
adc
push
inc
mov
bound
subl
jno
push
push
shll
bound
xor
dec
lret
test
push
or
repnz
sarb
scas
lods
cmc
or
mov
repnz
push
push
add
stc
inc
sbb
mov
test
cltd
pop
outsl
pop
test
dec
repz
jg
sub
cmc
cmp
in
inc
dec
out
adc
popf
divl
loopne
mov
mov
pusha
aad
push
scas
out
mov
push
je
cmc
pop
xor
push
mov
lcall
sub
icebp
adc
js
jo
cmpsl
outsb
dec
orb
rcll
aas
mov
add
mov
daa
lods
sbb
dec
add
xchg
pop
xchg
cmp
xchg
mov
je
xchg
cmp
xchg
mov
mov
dec
sub
daa
std
xchg
mov
sbbl
nop
ja
or
or
test
xor
arpl
je
xor
cmp
pusha
xor
cmp
mov
pop
mov
ror
int
jmp
loope
push
jbe
in
lahf
stc
xchg
sti
sub
dec
jne
in
stos
fs
stc
je
mov
or
lds
out
xlat
cmp
cmp
aad
insb
add
mov
jle
insl
xchg
push
cmp
dec
aaa
dec
xchg
jno
testl
add
orb
shlb
push
les
mov
dec
mov
rorl
cli
mov
cmp
mov
mov
out
add
xchg
xor
andb
jb
mov
pop
or
aaa
flds
pop
jmp
cmp
lods
and
ret
mov
mov
cmp
cmp
ret
add
xchg
and
insb
mov
jge
mov
sbb
fldl
lods
or
flds
mov
inc
les
sub
lret
pop
mov
pop
cmpsb
fwait
xlat
xchg
aad
mov
aaa
push
mov
sbb
int
cmp
sub
rorl
js
inc
jno
xchg
out
mov
out
leave
mov
int
push
add
cs
xor
repnz
fstl
stos
mov
or
xor
xor
imul
cmp
and
dec
adc
bound
cs
sbb
sub
test
hlt
fcomip
jmp
mov
imul
push
lods
sbb
in
adc
repz
lock
call
mov
add
ja
aas
mov
into
mov
mov
or
xchg
int3
jno
mov
jmp
xchg
pusha
mov
bswap
stc
push
out
lock
cmp
xor
negl
outsb
outsb
sbb
daa
lcall
mov
test
test
test
mov
ficoms
cwtl
jecxz
or
inc
push
rol
dec
sbb
mov
call
add
dec
cld
sbb
outsb
outsb
sub
xor
mov
popa
xchg
inc
enter
in
movsl
xchg
shrb
push
jne
add
cmp
aas
imul
pop
cmp
inc
fbld
push
sub
push
stos
pop
movsb
sbb
test
sbb
xor
bnd
outsb
lcall
loop
test
add
fnsetpm(287
imul
pop
or
in
cmp
mov
pop
loopne
and
mov
pop
xchg
into
sbbb
mov
fisubs
and
insl
dec
aaa
shr
bound
arpl
mov
insb
dec
movups
mov
xlat
scas
in
lds
into
or
push
rclb
inc
lret
test
lods
and
negb
cld
mov
pop
jmp
into
mov
negl
lea
icebp
scas
fnstcw
dec
jg
add
or
mov
fmull
out
jb
in
shrb
inc
loop
rcrb
sahf
fdivl
int3
pop
or
imul
xchg
pop
cmp
push
loope
inc
sbb
outsl
in
inc
add
nop
cmp
add
call
add
fidivrl
lods
outsb
test
cmpsb
push
les
mov
fcmovnu
dec
xor
dec
dec
jp
pop
mov
lds
stc
std
rol
sbb
jbe
loopne
sar
mov
loop
out
pop
popa
cmp
incl
pop
xchg
aad
popa
enter
dec
cld
sbb
mov
lods
inc
pop
xchg
xor
mov
adcl
outsb
daa
cmc
ds
xor
jns
out
jno
push
dec
imul
add
call
bound
push
aaa
push
fwait
inc
fists
lret
lods
in
adc
lret
mov
sub
leave
sub
jmp
push
sub
sarb
fistps
int
pop
dec
insl
fstpt
adc
fsubrl
or
jnp
ret
xchg
fadd
lods
mov
je
sbb
sub
in
push
mov
repz
nop
xchg
add
aad
pushf
push
jp
aaa
inc
sti
jecxz
xchg
aad
fdivp
mov
xor
loopne
xor
push
mov
mov
es
insb
daa
cmp
push
push
mov
fadd
in
push
into
test
fisubrl
xor
fisttpl
lret
hlt
jmp
js
mov
add
cs
test
roll
adcb
xlat
sbb
addr16
aas
pop
scas
inc
dec
inc
adc
cmp
sub
pop
sahf
inc
call
dec
rcrb
mov
pop
imul
out
jno
cli
or
sub
iret
iret
insl
lret
push
aad
mov
xchg
push
jo
inc
xor
cmp
jl
filds
push
xor
and
dec
add
rclb
dec
mov
sub
cltd
mov
cmp
sbb
stos
xchg
adc
push
repnz
jbe
pop
or
pop
inc
mov
push
xchg
sbbl
cltd
stos
push
pop
sub
loope
inc
movsb
lret
inc
inc
xchg
mov
sbb
inc
out
pop
ds
push
xchg
stc
cmp
inc
jno
insb
xchg
or
push
cmpsl
xor
mov
imul
add
ret
pop
lods
fnsave
cmp
adc
orl
leave
mov
xor
jae
pop
sahf
push
cmpsl
cwtl
loope
sbb
inc
mov
shll
or
insl
cmp
mov
sbb
mov
jecxz
insb
inc
lea
sub
dec
imul
xor
pusha
jp
arpl
ficompl
or
sbb
ss
cwtl
push
lock
daa
lock
pop
push
mov
sub
xor
roll
enter
mov
shll
push
fisttpl
pop
mov
pop
dec
sub
sti
out
pop
pop
mov
insb
insl
test
sbb
ljmp
lret
shl
xor
out
jns
les
cmp
inc
push
orb
mov
mov
ljmp
mov
movsl
cmp
js
sbb
mov
lea
dec
lret
xor
int3
push
sbb
gs
mov
bound
or
bsr
ljmp
loop
sub
xchg
clc
pop
jno
or
daa
xlat
aas
inc
cld
pop
mov
dec
jb
push
xchg
faddl
mov
mov
enter
sub
sub
push
mov
push
call
andb
lcall
and
cmpsb
and
sbb
dec
aas
jp
sahf
mov
sub
adc
push
mov
fists
inc
add
jno
imul
rep
fiaddl
fs
jno
push
incl
int
xor
mov
into
or
ss
stos
push
mov
int
sbb
ljmp
push
xlat
or
or
fxam
dec
mov
and
push
cmp
pop
mov
in
addl
jae
push
insl
or
addr16
push
jle
daa
aas
dec
push
mov
in
push
testl
jecxz,pn
mov
test
fcmovne
push
mov
repz
lods
mov
repnz
sub
inc
popl
inc
popf
popa
aas
sub
lret
add
xor
add
mov
sbb
movsl
push
sub
lock
xchg
mov
cltd
jns
inc
cli
es
jmp
cld
add
adc
pusha
sbb
pushf
and
lret
cmp
push
mov
mov
mov
mov
push
xor
pop
jle
lcall
push
mov
dec
dec
push
and
sbb
and
or
mov
lret
dec
push
pop
loopne
movsl
movsl
gs
clc
xor
pop
dec
xchg
into
aas
xchg
sub
xor
movsb
sbb
sahf
pcmpeqb
mov
mov
ljmp
lahf
add
mov
mov
je
call
pop
mov
rorl
out
out
adc
mov
jecxz
inc
andb
xor
cmc
pushaw
push
aam
xchg
enter
mov
ret
arpl
insb
insl
push
xorb
cmpsb
nop
mov
ret
dec
and
ds
dec
jo
adc
loopne
subb
push
pop
or
mov
repnz
pop
sbb
mov
out
in
repnz
pop
in
cld
movsb
xlat
sub
fidivrs
jo
shl
jnp
mov
cmc
mov
mov
mov
cmpsb
retw
sub
fmuls
mov
mov
or
mov
arpl
sti
adc
loopne
xchg
and
dec
cs
clc
sub
mov
mov
pop
cs
ss
testl
add
in
repz
lret
mov
mov
xchg
or
in
mov
add
je
repnz
inc
dec
push
xor
mov
into
push
fdivrs
adc
inc
movsb
cmp
add
outsl
jle
mov
cli
stos
aaa
pusha
xchg
add
pop
xor
dec
mov
insb
push
push
sbb
sub
scas
jge
std
pushf
xchg
lret
stos
mov
cmp
mov
jo
shlb
and
cmp
cmp
sbb
dec
in
jmp
sbb
adc
inc
cmp
inc
addr16
std
test
mov
jecxz
out
repnz
fimuls
je
repz
sbb
shll
inc
iret
mov
ret
dec
sbb
push
jp
pop
push
sub
jge
fsubrl
push
test
xchg
cmp
push
sahf
addr16
pop
xchg
or
xchg
sbb
hlt
sbb
call
xor
xchg
mov
outsb
out
mov
cld
fs
icebp
xlat
std
icebp
pusha
test
fs
dec
ret
add
mov
cs
mov
pop
sub
sub
add
lahf
fwait
add
inc
inc
clc
call
jmp
leave
and
aaa
and
es
shrb
pop
outsl
and
iret
enter
xchg
push
ss
je
mov
pop
pushf
dec
test
fsts
leave
pop
xchg
fiadds
es
or
test
test
push
ret
rcrb
lea
dec
dec
push
in
ficoml
sub
jb
push
pop
loope
jg
cmpsb
test
mov
test
add
sbb
repz
or
pushf
mov
mov
xchg
jp
aad
xchg
jo
pop
and
in
insb
cmp
mov
gs
mov
jle
stc
lcall
adc
into
imul
xlat
push
rcl
xchg
xlat
jbe
outsb
mov
imul
jp
lret
mov
push
sbb
repnz
cltd
add
pushf
insl
lock
sahf
stc
and
push
mov
int3
xor
aam
imul
inc
inc
and
inc
push
mov
js
lea
bound
dec
cmp
aas
fimuls
jle
or
imul
sbb
push
test
push
sti
int3
popf
pop
out
and
xchg
stc
push
std
popa
andb
dec
mov
loope
jmp
add
out
test
mov
pop
cmc
imul
xchg
mov
lods
scas
jno
mov
pop
mov
aad
mov
xor
mov
xchg
xlat
pop
in
cld
pushf
repnz
jle
sub
pop
fnstsw
stos
push
mov
lahf
stos
ss
mov
cmp
mov
loopne
cwtl
fcmovbe
sar
mov
xor
xor
lods
xchg
fwait
add
popa
sti
inc
fstpt
xchg
inc
jge,pn
add
stos
scas
ret
lock
jo
push
icebp
jge
sbb
fwait
popf
pop
vhaddps
sbb
stc
out
mov
test
ret
and
shll
xchg
arpl
cwtl
push
sbb
mov
ss
icebp
fdivr
fistl
aas
cli
roll
mov
repnz
jno
loopne
notl
fistpl
jae
outsb
jnp
xchg
pop
ja
add
add
aaa
lcall
sub
adc
sub
fs
pop
adc
pop
mov
mov
mov
mov
aaa
xchg
repz
mov
jbe
inc
pmaxsw
or
xchg
dec
daa
adc
cmp
sbb
aam
mov
mov
sbbb
outsb
loopne
fdivrl
pop
or
les
push
sbb
mov
inc
mov
test
xchg
xor
mov
inc
in
mov
prefetch
add
jb
jp
push
mov
shr
fld1
push
lds
mov
dec
push
shl
sub
jecxz
out
lret
mov
mov
fldenv
and
and
add
inc
js
sbb
mov
lret
dec
cli
adc
push
lods
push
in
adc
mov
std
mov
pop
rcl
push
iret
adc
mov
lock
ljmp
scas
pop
jmp
mov
xchg
pop
or
fs
in
cmp
into
adc
leave
xor
dec
pop
pop
xchg
adc
pop
add
adc
test
test
fmuls
add
movsb
addl
cmp
jle
aad
imul
fs
iret
inc
xor
mov
jne
inc
xor
repz
rclb
outsb
fbld
push
sub
fisubs
outsl
or
inc
sbb
sbb
inc
aas
jb
jg
orb
cmp
stc
scas
out
xlat
cmp
xlat
loop
test
in
mov
aad
jbe
lods
je
repz
xchg
fwait
cmpsb
inc
pop
push
and
icebp
add
mov
add
jecxz
dec
sbb
iret
pop
fdivrl
mov
and
imul
imul
xchg
loope
lret
mov
add
xchg
cwtl
sub
rclb
sub
paddw
mov
lahf
pop
jge
cmpl
cmp
mov
push
ffree
cwtl
fldt
fdivrs
mov
pop
sbb
push
icebp
ja
mov
aad
mov
sbb
pushf
jo
push
xor
cmc
fdivrl
pop
andl
cmp
arpl
xchg
fdivl
loop
mov
gs
jle
pop
sub
outsl
mov
test
popa
push
imul
push
mov
mov
jbe
xor
mov
pop
or
into
sbb
push
or
rclb
dec
xor
into
or
lea
or
xor
scas
sub
bnd
stos
cwtl
pop
arpl
outsb
cmpsl
xchg
dec
mov
mov
leave
cmp
xlat
or
inc
js
mov
cmp
iret
das
dec
ljmp
lret
or
xor
inc
jae
add
pop
push
loop
mov
out
imul
and
cmp
pop
add
add
push
cmp
mov
sbb
dec
jae
or
and
addl
bswap
das
js
add
adc
mov
mov
mov
cmp
repnz
push
sahf
jle
pop
and
add
repz
mulps
sbb
inc
dec
bnd
pop
fisttpll
cmp
xor
xchg
dec
fwait
imul
and
mov
push
dec
sbb
add
inc
stc
fldcw
mov
jle
addr16
fsts
pop
ret
je
sub
cmc
push
sbb
pop
jno
clc
rclb
xchg
orb
xor
mov
lahf
clc
push
bound
sub
out
jg
add
mov
and
xor
es
mov
and
cmc
fisubs
mov
imul
incb
push
cmpsl
int
cmpsl
add
mov
xor
push
loop
subl
jb
insl
push
inc
out
pop
sarb
push
loope
and
rcrl
lods
imul
outsl
pop
sub
test
xchg
loop
dec
sti
je
sbb
pop
call
pop
into
pop
sub
je
adc
jne
ficompl
cmp
pushf
out
fucom
xor
sub
pop
xorl
jecxz
inc
jns
out
das
ljmp
push
cld
dec
mov
stos
jp
loop
jnp
sbb
pushf
outsl
imul
enter
je
pop
imul
fbld
pop
xor
xor
in
jg
fidivl
cmp
in
xor
aaa
inc
es
sub
in
dec
push
adc
into
cmc
mov
sub
push
adc
roll
pop
leave
push
data16
loopne
stos
lods
xor
movsb
inc
sarl
or
pop
stos
dec
cmp
cld
rcrb
adc
rorb
pop
xor
dec
cld
mov
cli
sbb
imul
fwait
xchg
lcall
popa
jne
mov
cmp
fwait
jle
ss
decl
dec
nop
mov
sbb
idiv
sub
loopne
lcall
or
jbe
xorl
and
jbe
cmpsb
ret
mov
dec
pushf
cld
scas
aad
and
jns
xchg
sub
repz
dec
pop
enter
lods
sbb
cs
arpl
push
jno
inc
jge
mov
jo
mov
push
cmp
pop
lret
int
cld
inc
movsl
mov
and
sbb
mov
leave
mov
and
mov
push
lea
mov
inc
js
dec
cmp
je
js
xchg
xchg
stos
push
stc
cmp
fdivl
clc
in
mov
and
aam
enterw
xchg
aas
push
shl
xlat
pop
les
mov
data16
loop
push
jbe
mov
and
fadds
lret
jno
sub
int
loope
cmpsl
out
addr16
bound
add
adc
jl
ja
orl
repz
fidivl
and
adc
push
out
sti
ja
stc
daa
xchg
push
sahf
cli
push
add
hlt
pop
imul
std
int3
adc
cmp
sbb
add
push
pop
pusha
add
in
pop
inc
les
pop
push
xor
xor
pop
or
outsb
outsl
add
out
jne
sar
dec
icebp
jb
mov
dec
nop
stos
loopne
dec
mov
push
mov
inc
incl
add
push
or
jne
fsubrp
in
jp
inc
fmull
cmp
inc
and
negl
adc
fsubrl
shll
scas
mov
int
xchg
es
inc
sti
jmp
dec
jp
jns
shl
sbb
leave
inc
stc
xchg
cs
add
lds
pop
xchg
daa
xchg
scas
std
sbb
dec
shll
jg
jmp
xor
xchg
add
mov
out
xlat
add
stos
lods
lret
pop
loope
out
int3
hlt
je
fs
mov
add
inc
in
js
lcall
test
sbb
fcoml
add
add
xlat
in
jecxz
mov
aas
pop
cmp
cmpsl
add
push
mov
icebp
icebp
test
add
lcall
mov
je
loopne
xor
pop
div
inc
hlt
fdivrp
mov
iret
pop
push
stc
fwait
mulb
jno
mov
and
jno
push
cmp
fidivl
and
or
adc
push
lahf
clc
or
cs
cwtl
pop
pop
scas
stc
fidivl
jo
push
fwait
cmpsl
std
lret
ja
xchg
daa
sub
daa
and
or
adc
outsl
test
fiaddl
cltd
hlt
or
adc
aam
fs
jecxz
cmpsb
push
jb
mov
pop
les
xchg
aad
les
mov
popf
jecxz
jge
fwait
ret
jo
stc
mov
dec
sbb
or
dec
aaa
lods
and
mov
fistps
das
call
mov
adc
mov
icebp
fs
hlt
ret
cmpb
cltd
pop
xor
xchg
fcomps
xor
mov
cmpsb
jno
mov
and
mov
jne
decb
jle
push
sub
repnz
push
and
gs
cmc
aad
and
sbb
rdmsr
aad
xlat
push
test
pop
aaa
push
adc
pop
ja
filds
jle
bound
pusha
push
inc
lret
mov
int3
sub
mov
inc
add
in
ds
jns
insb
jmp
add
insb
cmp
test
mov
cmc
shlb
mov
pop
add
inc
int
int
icebp
sub
add
int3
inc
cmp
or
iret
pusha
mov
push
or
insb
mov
push
sbb
inc
sbb
jbe
subb
pusha
fwait
add
divb
cmp
xchg
gs
cmpsb
imul
add
in
mov
jecxz
aas
mov
inc
shll
cmp
xor
stos
jmp
mov
addr16
data16
cmc
popa
lds
inc
or
mov
adc
and
sarb
mov
sub
fs
loop
push
fwait
push
mov
les
mov
test
jge
mov
movsb
popf
pop
js
xor
push
clc
pop
xchg
or
mov
and
mov
xor
popa
int
cmp
ret
call
faddp
insb
inc
pop
xchg
in
mov
ss
sub
xchg
hlt
mov
jno
add
popa
push
push
jp
fwait
lret
aas
ds
popf
pop
push
mov
int3
dec
movsl
stos
aad
dec
mov
push
rcrl
sub
cs
inc
int3
cli
lahf
pop
push
hlt
stos
cmpsb
sbb
inc
je
cmp
xchg
fistl
dec
pop
repz
inc
inc
and
decb
aad
mov
cmp
cmp
repz
pop
mov
dec
cwtl
shr
sbb
sbb
jo
pop
and
and
pop
testb
push
divb
adcl
pop
or
xchg
popf
mov
insl
dec
fwait
adc
mov
cmpsl
jne
lahf
decl
enter
cli
jle
dec
dec
in
dec
stc
mov
push
shll
out
adc
xchg
mov
loopne
xor
test
push
sbb
jmp
and
mov
inc
push
pop
xor
cmp
outsb
cmpsb
cli
mov
mov
cltd
sbb
icebp
cmp
xorl
xor
arpl
push
ret
jno
dec
std
cltd
xchg
addr16
jbe
pop
cmp
data16
fstps
std
mov
dec
jmp
ja
idiv
or
mov
jae
scas
pop
test
jl
cs
mov
push
test
rol
mov
rclb
dec
outsb
divl
ljmp
clc
orps
or
sbb
xor
nop
pop
mov
jge
push
sbb
into
in
jno
dec
test
cld
bound
dec
xchg
lock
in
push
push
in
cmp
lcall
cmp
addr16
outsb
cmpsl
mov
mov
push
mov
jle
in
data16
sbb
das
das
lahf
aaa
jl
sub
sti
scas
loope
xorb
jle
xor
cmp
xchg
add
cmp
xchg
xchg
ret
out
insb
cmc
lods
lea
lock
test
movsb
mov
mov
or
xchg
int3
adc
les
mov
pusha
fstl
mov
popa
cmc
icebp
and
jo
movsb
loop
add
aad
pop
xchg
aad
loopne
ja
mov
rorb
jae
pushw
cli
xchg
pop
shr
xchg
dec
push
and
mov
test
pop
or
pop
lds
mov
rcrb
jnp
mov
jns
call
rclb
bound
lock
test
in
dec
inc
insb
push
test
sub
jbe
pusha
sar
sbb
jecxz
cmpsl
fidivrs
sub
call
movsl
sbb
add
mov
push
mov
rolb
jb
test
pusha
insb
sub
imul
push
popf
push
pop
popa
push
sbb
sar
fists
insb
rcll
mov
ja
aas
xchg
xchg
in
lods
sti
iret
addl
dec
inc
xchg
sar
stos
sbb
in
jno
faddl
xor
data16
lret
data16
xor
lret
pop
jmp
jmp
sub
pop
cmp
push
outsl
enter
mul
fildll
jne
daa
jns
sub
push
cmc
or
adc
and
push
jecxz
jbe
fs
inc
push
ret
push
clc
inc
mov
cltd
lds
icebp
add
in
push
and
pop
pop
mov
lret
add
test
mov
xor
arpl
aam
jl
and
stos
scas
rorb
jg
in
xor
push
inc
std
jb
hlt
jae
outsl
sbb
mov
aas
sub
jb
shlb
push
rorb
xchg
sbbb
jo
stos
push
cmc
addl
clc
add
insb
fstps
cmpsb
int3
lods
mov
mov
inc
fdivrl
das
push
clc
lret
jb
mov
sahf
test
push
sub
ljmp
push
add
enter
out
test
lahf
sbb
pushf
fnsave
in
std
mov
dec
dec
popf
pop
lcall
push
mov
mov
int3
mov
push
add
inc
outsb
add
mov
out
je
xlat
fisubl
cmp
movsb
jecxz
lret
hlt
in
and
insl
xchg
nop
xor
jecxz
mov
ja
gs
xor
mov
cwtl
xlat
pop
ret
xlat
aad
xchg
lret
jle
pop
push
daa
xor
in
mov
and
dec
fchs
adc
lahf
xchg
enter
add
mov
pushl
loope
xchg
rcr
das
lods
bound
push
inc
fistpll
xchg
adc
fnop
xor
fsin
cmp
daa
mov
movsb
add
cmp
mov
or
call
cmc
mov
lds
xlat
sbb
cmp
rcrb
call
pop
fcmovbe
loope
mov
pusha
jg
cmpsb
lcall
lret
lock
push
mov
push
shlb
ret
adc
and
sbb
cmp
sbb
sti
push
mov
lods
sbb
in
and
pop
jmp
cs
sub
arpl
enter
sahf
cmp
outsb
cmp
popf
or
push
movb
jo
dec
sbb
les
push
ljmp
test
inc
or
pop
cmpsl
push
jl
xor
ds
in
sbb
sahf
addb
ljmp
imulb
insb
inc
aas
push
loope
movsb
inc
jo
and
jecxz
push
cmp
cmpsb
rorl
dec
fs
shl
test
cmp
std
scas
xchg
adc
mov
sub
push
int
sub
pop
test
adc
aas
xor
mov
stc
push
mov
in
outsl
mov
pop
jne
notl
dec
mov
sub
lcall
or
push
test
leave
cmpb
or
inc
xor
xchg
cmp
pop
sub
vpermi2d
in
dec
cmp
scas
and
repnz
mov
and
stos
lea
ficompl
sub
clc
mov
fnstsw
fnstcw
aad
mov
push
into
adc
xor
mov
add
add
adc
add
imul
adc
in
jg
xchg
add
test
mov
add
jnp
dec
test
insb
mov
push
sub
pop
xor
mov
imul
mov
push
pop
push
inc
pop
enter
sbb
push
pop
daa
sbb
daa
mov
or
fnstsw
call
stos
test
inc
jns
cmp
bound
mov
rcrb
inc
cs
add
pop
scas
ud0
stos
stos
xor
sub
jmp
xor
push
jae
adc
dec
cltd
fcomps
push
mov
push
xor
mov
rorl
aam
imul
and
data16
xor
iret
insl
cmc
add
sbb
push
pop
lahf
xor
and
ret
adc
push
and
push
test
xor
push
popf
mov
out
clc
jg
mov
in
ret
adcb
adc
int
jg
ljmp
enter
mov
inc
data16
jg
inc
aam
in
mul
in
aam
xchg
out
jge
out
es
pop
inc
mov
inc
cltd
imul
mov
std
cli
sti
jg
cli
inc
xor
shll
inc
nop
call
loope
jecxz
xor
arpl
lret
dec
xchg
orb
cmp
add
mov
je
or
dec
xlat
lods
mov
in
cmp
inc
mov
inc
rclb
ret
sbb
popf
push
sub
das
xchg
mov
jo
xchg
movsl
jecxz
xor
orb
in
lods
ljmp
test
in
mov
mov
nop
and
stos
fdiv
mov
out
idiv
mov
cmpsb
cli
jmp
lret
stc
mov
pushf
outsl
sbb
jbe
fildl
aad
enter
jecxz
mov
push
or
imul
stos
fcompl
sti
lret
ja
adc
sbb
aaa
inc
xor
rcr
aad
xlat
in
scas
dec
cmpsb
les
cmp
lods
pop
ret
das
xchg
or
inc
push
adc
mov
dec
push
xchg
dec
jno
push
cmpsl
and
pop
loop
add
fs
loopne
pop
sbb
mov
and
inc
xchg
clc
daa
dec
xchg
mov
ss
xchg
cmpsl
inc
push
repnz
xchg
scas
shr
jnp
out
int
test
daa
push
outsl
inc
mov
or
xchg
daa
sub
fs
enter
mov
nop
mov
jo
lret
enter
addr16
ffree
mov
inc
sub
push
jns
sub
pop
repz
cmp
inc
lahf
adc
push
out
push
outsb
xor
sub
pop
jp
es
inc
jp
xor
and
push
xchg
fwait
and
cli
push
repnz
sbb
inc
stos
push
pop
ficompl
scas
ss
and
mov
mov
mov
xchg
sahf
cmp
or
sub
push
arpl
sub
movl
cltd
dec
inc
mov
leave
and
xchg
fnsave
int3
mov
fcoms
xor
sbb
rolb
push
mov
pop
cld
push
repz
aas
cmc
xlat
lret
xchg
arpl
shr
jecxz
mov
ja
xchg
out
xchg
mov
js
add
add
mov
sti
gs
rcrl
mov
mov
inc
mov
sarb
dec
insl
repz
jle
add
js
mov
in
mov
xchg
insl
cwtl
test
mov
jg
mov
arpl
mov
mov
pop
clc
xor
or
mov
adc
mov
jp
cmp
adc
pop
cmpw
std
push
xor
das
mov
fnstcw
xor
sub
mov
or
mov
sub
adc
shll
mov
sub
sub
fbld
shll
cld
pusha
ret
lret
inc
jns
push
int3
out
push
adc
lret
xchg
xlat
outsb
aad
cmp
mov
cltd
imul
add
and
inc
daa
push
movsl
add
jb
xchg
sbb
loop
test
fnstcw
pop
in
out
mov
jg
xchg
scas
sub
pop
inc
addr16
mov
cmpsb
jge
je
stos
push
into
scas
andb
outsb
gs
jmp
xor
sub
stos
sub
fmull
push
pusha
aaa
pushf
mov
push
push
jb
out
imul
jnp
jl
inc
sub
jmp
in
loopne
outsb
push
jmp
or
mov
daa
dec
mov
call
jne
lods
out
std
int3
test
xchg
pop
mov
andl
sahf
loope
js
mov
pop
sub
ja
ret
lret
mov
test
and
xchg
push
jbe
sbb
sahf
lods
cmovne
divl
gs
cmp
lea
cmp
sub
push
fsubl
aas
jo
rcrb
cwtl
mov
movsl
stc
mov
fisttps
and
pop
in
dec
outsl
mov
or
jge
dec
mov
pop
xchg
bound
out
xor
mov
out
outsb
xchg
or
xor
test
out
cmp
fmuls
push
sbb
sbb
les
std
adc
add
push
cmp
sbb
adc
xchg
jns
sbbb
jle
orl
mov
and
sbb
fidivs
jbe
repz
cmc
cmc
push
clc
js
add
fcomps
xlat
out
xchg
or
je
lds
xor
in
mov
and
push
dec
jae
addr16
fldenv
pop
mov
aas
les
xchg
cltd
adc
xorl
sub
lock
popa
sub
push
mov
loopne
xchg
int
jl
or
jbe
imul
add
jge
mov
orb
jae
leave
sbb
fwait
push
test
jl
or
out
adc
adc
lcall
lret
jge
mov
insl
test
pop
mov
mov
loopne
jb
repz
pop
repnz
int3
out
push
out
mov
lret
xor
jnp
pop
adc
sbb
and
add
or
and
cld
int3
jnp
pop
adc
out
mov
or
in
dec
fbstp
pxor
imul
xchg
test
add
dec
jl
cwtl
mov
lea
sub
mov
sub
mov
iret
test
push
dec
dec
js
push
test
shl
pop
inc
mov
push
stos
sbb
inc
lret
push
test
scas
jo
adc
push
dec
ljmp
sub
cmp
add
dec
fcmove
mov
add
xchg
cwtl
lret
mov
jbe
mov
outsb
mov
cmp
or
sbb
dec
or
jmp
cli
push
js
xor
aaa
stos
and
mov
mov
mov
jl
jle
or
imul
stos
xor
imul
imul
push
xor
lcall
insb
inc
cmp
std
aam
shlb
das
cmp
pop
aas
xor
daa
int
inc
lea
mov
dec
push
aam
paddusw
cmp
and
dec
xchg
or
rolb
mov
push
add
mov
fisubrl
rorl
sbb
adc
fstps
data16
mov
jb
rcrl
adc
mov
int
inc
sub
pop
mov
mov
push
xchg
and
idivl
cmp
mov
test
inc
sti
imul
mov
or
out
inc
xchg
and
in
mov
sbb
das
mov
dec
stos
or
cmp
adc
add
add
arpl
test
clc
and
push
xor
stos
lods
xorb
sub
inc
insb
or
cmp
xor
in
push
xchg
stos
pop
sbb
sti
rcll
mov
arpl
outsb
push
jns
pop
lock
insl
lods
jecxz
xor
cwtl
jl
int
mov
xchg
fbstp
cs
aad
lret
inc
or
push
push
lods
push
mov
sbb
cwtl
imul
xchg
cmp
sbb
test
push
fstpl
xchg
hlt
jo
sub
mov
shl
dec
inc
clc
pop
jo
jbe
xor
push
xchg
add
popa
push
pop
add
repnz
filds
gs
mov
fwait
lret
scas
jecxz
pop
jl
and
les
shlb
movsl
cmp
cmpsb
cwtl
ret
decl
rclb
rcrl
dec
aas
mov
dec
push
dec
sub
jnp
lods
enter
std
or
jns
cmp
xchg
push
sub
dec
sti
sub
pop
mov
scas
imul
clc
fxtract
adc
pop
pop
sti
sbb
dec
scas
lea
add
add
inc
pop
xchg
or
push
or
subb
movsl
mov
dec
sbb
mov
inc
xchg
cmp
mov
ss
jecxz
add
loope
mov
imul
mov
neg
push
xchg
pushf
leave
lea
mov
jb
test
hlt
jmp
add
xorl
stos
addr16
orb
and
jle
inc
cwtl
addr16
pop
bound
inc
push
xorl
xlat
outsb
xchg
pop
int
or
insb
pop
push
mov
dec
andl
dec
das
jmp
or
xor
sub
xor
ret
add
ret
ljmp
sbb
xor
xor
adc
mov
sub
mov
xchg
jl
and
fcmove
sub
or
je
mov
jns
addr16
lds
test
shll
sbb
int
orl
sbb
jae
jae
mov
movsl
bound
jnp
lds
sbb
xchg
sbb
repnz
ljmp
hlt
inc
push
jb
cli
fmull
incl
in
mov
out
push
adc
jno
push
xchg
or
pop
cmc
ret
lock
aas
xchg
xor
or
rcrb
pop
cmp
xchg
jbe
sub
lcall
pop
xor
lret
dec
mov
arpl
add
pop
mov
addr16
out
xor
add
mov
stos
push
push
jp
sub
lea
push
or
and
stos
bound
mov
pop
enter
cmp
popa
mov
pop
ja
pop
mov
mov
sarl
adc
and
popf
mov
testb
adcb
dec
fcoms
popa
stos
mov
shrd
imul
pop
jecxz
shll
aam
inc
ja
mov
je
dec
lods
push
icebp
cmp
stos
insl
stc
scas
cli
push
ss
std
jge
jp
sub
es
test
ds
aad
call
lcall
imul
add
sahf
movsl
push
nop
push
imul
lahf
popa
loope
pop
xchg
ljmp
lcall
in
mov
pusha
cmp
fiaddl
pusha
xchg
scas
xchg
push
iret
shl
rcrl
es
std
xor
push
push
test
roll
jge
movsl
jns
lock
je
fwait
mov
xor
push
movsb
sbb
js
sub
sti
mov
cmpsl
adc
sub
repnz
repz
mov
xchg
or
lock
mov
push
movsb
jo
jnp
iret
mov
xchg
lds
sub
push
dec
pushf
sbb
mov
cmp
push
xchg
or
aad
lods
mov
or
mov
mov
add
ljmp
mov
xor
jecxz
rcl
mov
cmp
cmp
mov
jecxz
out
adc
xor
imul
xchg
dec
mov
dec
xchg
shll
mov
out
into
lahf
or
fwait
mov
icebp
mov
xchg
lock
jae
jnp
movsl
imul
xlat
cmp
sub
cltd
aad
outsb
imul
mull
xchg
scas
mov
inc
inc
cmp
push
dec
loopne
mov
sbb
and
data16
xchg
dec
daa
pop
std
sbb
outsl
add
or
adc
and
rcr
out
in
inc
lcall
mov
insb
fwait
pop
mov
leave
push
xchg
pop
inc
ds
jno
lahf
jmp
js
bnd
push
ret
xchg
sub
mov
mov
push
scas
push
xchg
test
dec
outsb
popa
movsl
cmp
pusha
je
incb
and
dec
test
jmp
or
pusha
fcoms
adc
sub
push
mov
xchg
mov
sbb
adcl
adc
jl
jo
mov
mov
dec
xor
mov
mov
movsb
cmp
scas
data16
je
mov
mov
xchg
cwtl
sub
mov
ret
pop
scas
fwait
out
popf
daa
jle
icebp
and
sbb
fs
push
imul
push
pusha
arpl
iret
daa
call
push
lret
xchg
mov
mov
ficompl
testb
cld
add
bound
xchg
inc
or
adc
aas
lea
jmp
pusha
rcl
aam
cld
mov
stc
ss
or
jl
lret
xchg
mov
orb
arpl
lock
outsb
dec
or
push
int3
sar
aaa
push
mov
pop
or
in
fwait
ljmp
xor
sub
xchg
pop
jnp
inc
lret
dec
and
pushf
rolb
mov
ja
dec
adc
push
subl
jnp
push
int
ficoms
iret
jmp
and
jb
dec
repnz
lea
aam
ret
lea
inc
fiadds
pushf
jle
les
mov
lea
sub
xor
ret
in
jmp
popf
daa
lret
xlat
inc
int
mov
aaa
lcall
jmp
xor
or
dec
stos
xchg
pushl
shlb
jne
xorl
dec
mov
cmc
inc
lret
jno
inc
sbb
mov
dec
std
mov
icebp
cmp
push
mov
into
or
jb
lea
nop
ja
cltd
push
pop
or
pop
stos
add
mov
ljmp
icebp
adc
or
pop
cld
test
dec
je
pop
lods
addr16
mov
out
xor
fs
cmpsl
ret
fwait
arpl
xor
mov
insb
sbb
hlt
jge
lret
push
mov
out
add
mov
add
ds
in
int3
mov
popf
cmp
push
mov
scas
fisubs
and
scas
jmp
pop
push
inc
fs
cltd
push
sahf
jb
out
xor
pop
stos
pop
rclb
sbbl
ret
add
mov
sbb
fs
add
pusha
movsl
scas
loopne
or
or
icebp
jle
cmpb
lock
sub
arpl
stc
fdivl
pop
xchg
jmp
push
je
push
ret
int
mov
cmp
addr16
mov
icebp
in
bnd
loopne
dec
add
sub
lahf
movsb
mov
mov
adc
push
shll
in
out
pop
stos
stos
cmpsb
jb
push
mov
es
mov
mov
lret
sahf
fwait
and
pop
nop
sbb
or
dec
mov
std
nop
sub
lea
xchg
push
daa
mov
and
or
sbb
add
mov
mov
inc
jno
in
dec
push
push
test
cs
mov
inc
xor
cs
or
lds
push
sub
or
jp
push
sbb
pop
out
stos
jl
out
dec
sub
mov
push
int
mov
inc
fsub
xorb
lahf
das
imul
or
testl
lods
mov
mov
sbb
pop
je
ja
lds
imul
xchg
jge
sub
xchg
stos
jmp
mov
or
fisttps
pop
insl
adc
or
dec
adc
mov
or
adc
sub
popa
xor
inc
stos
mov
mov
movsb
cmp
jnp
or
adc
out
push
sub
xor
sti
adc
jae
outsb
xchg
movsb
mov
dec
xchg
mov
in
sbb
lret
push
pop
aad
xlat
pop
js
jbe
sub
and
repz
not
pop
mov
push
xlat
js
adc
stos
mov
jae
xchg
pop
pop
pop
es
push
pop
pop
mov
mov
out
lods
loop
in
sbb
jo
xor
clc
ljmp
and
insb
dec
cli
sub
scas
mov
sub
repz
push
sub
xor
orb
jb
or
pop
bound
pop
add
lret
mov
cmpsb
gs
xchg
add
jns
stos
add
call
js
int3
jge
inc
test
mov
lds
fnstcw
push
cmpsb
aam
sub
cld
xchg
sahf
pop
je
cmp
xor
or
mov
pushf
add
pushf
not
loopne
push
dec
out
mov
jns
jae
sbb
outsb
cmp
pop
add
push
call
push
mov
mov
xchg
lds
cmp
xorl
gs
addr16
lods
popa
mov
lret
repz
rorb
inc
add
jbe
push
decl
sbb
mov
jne
fisubrs
cmp
pop
cmp
cwtl
add
loop
ret
or
lea
imul
mov
dec
xchg
sub
mov
mov
cwtl
push
mov
xor
sub
cmpsl
sti
fs
enter
test
xchg
jmp
movsb
ds
dec
lock
pop
jl
push
dec
jl
in
jecxz
push
mov
lods
stc
xor
inc
pop
mov
test
cltd
pop
sti
sub
inc
cmpsl
jno
mov
cmp
data16
fnstsw
orb
or
xor
outsb
xchg
jae
push
fiadds
push
push
jle
jg
lods
push
add
xchg
xchg
pop
in
scas
pop
test
lods
test
lcall
ficomps
push
movsl
and
arpl
mov
inc
rcrl
lods
or
jae
ljmp
test
out
mov
mov
ja
or
or
incb
dec
jnp
fs
dec
jns
dec
cmpl
mov
fistps
shr
popf
sbb
sub
pop
mov
les
push
aas
nop
jns
mov
inc
push
cmp
or
mov
mov
push
xchg
lock
or
pusha
nop
out
cmpsb
or
mov
jmp
test
sub
jo
inc
jge
ret
fisttpl
xchg
jns
sub
fnstenv
ret
flds
inc
sbb
pop
mov
sub
scas
inc
sbb
add
das
and
xlat
xchg
mov
daa
fwait
ja
ficoms
push
mov
arpl
push
fidivrs
xor
pop
leave
in
xchg
jmp
cmp
inc
push
test
xlat
sub
lods
cmp
pop
sub
mov
sub
jmp
jne
xor
cmp
lahf
rcll
inc
loopne
idivb
fimuls
shll
and
lret
stos
cmp
sbb
jle
into
or
ds
fnstsw
mov
add
and
inc
sbb
and
xchg
push
cmp
in
lods
push
fistps
cmc
mov
sub
inc
inc
pop
inc
stc
jp
inc
dec
lahf
pop
imul
jns
mov
scas
jmp
jl
mov
leave
inc
enter
cmp
ja
data16
sub
data16
cli
shrb
in
ret
movsb
mov
cmp
dec
cmpsl
add
push
mov
and
fstpt
adc
pop
in
inc
adc
lahf
inc
nop
popf
addr16
daa
clc
subl
sub
movsb
inc
push
xchg
inc
mov
jb
test
shr
sub
mov
addr16
mov
call
test
fprem
cld
mov
fdivs
faddp
jge
popf
pusha
jecxz
sahf
fcmovnu
iret
adc
or
pop
subb
jo
lahf
xchg
test
dec
hlt
add
pop
addr16
xchg
xor
or
adc
mov
fidivs
inc
mov
test
xor
punpcklwd
push
fwait
xor
repz
push
aas
fisubrs
outsl
xor
lea
pop
lret
call
movl
outsb
aad
sub
call
ret
out
pushf
inc
pop
cmp
jnp
mov
dec
xchg
jnp
ret
or
out
int3
imul
popa
or
mov
in
dec
and
cmpsl
repz
int
ret
mov
and
and
mov
fidivrl
jecxz
xchg
aas
mov
pop
loope
aad
push
fcomps
sahf
repz
pop
cs
push
pop
mov
and
sti
xchg
mov
xchg
cmp
mov
jge
xchg
inc
jns
push
and
pop
repz
sbb
loop
testl
aam
cld
ror
mov
std
cld
sbb
pop
mov
out
mov
aam
xchg
jg,pt
fnstcw
mov
in
xchg
dec
pop
inc
js
cmpsb
aam
jbe
mov
sbb
mov
mov
inc
xchg
cltd
faddl
jb
mov
in
data16
pop
lcall
mov
out
lods
and
pop
sbb
and
loopne
or
insb
pop
popf
mov
int
dec
cltd
gs
test
mov
mov
idivl
insb
cmp
fldcw
imul
fbld
jnp
mov
jg
cmp
sarl
stc
movsl
dec
push
dec
das
or
pop
push
lods
popa
sbb
dec
sbb
jno
mov
test
repnz
jae
xor
fcomps
pop
and
and
mov
sub
xchg
jg
pop
popf
mov
popf
lock
fnstenv
ds
mov
mov
bound
sbbb
cltd
cmpsl
pushf
mov
inc
add
mov
push
std
add
and
lahf
fwait
outsl
imul
mov
addr16
les
push
add
std
sahf
dec
mov
fstl
mov
dec
lods
addr16
mov
stos
std
jbe
leave
test
and
mov
jo
jne
not
dec
xchg
fistpl
nop
mov
mov
sbb
mov
cld
movaps
mov
stos
subl
leave
cmp
jo
pop
and
pushf
mov
dec
lcall
xchg
mov
sub
les
sbb
icebp
sbb
dec
stos
mov
cwtl
imulb
inc
push
stc
mov
inc
fnsave
bound
ret
shrl
or
insb
fildll
mov
cltd
rep
test
subl
loop
ret
xorl
lods
dec
inc
xor
inc
adc
mov
sbb
daa
mov
ret
pop
mov
xchg
push
mov
leave
in
mov
sub
mov
popa
adc
mov
popa
inc
test
cmp
xor
enter
cmpsl
cmc
hlt
or
insl
pop
jb
in
shl
repz
sub
into
or
push
pop
pop
mov
adcb
addr16
mov
inc
fnstenv
push
lahf
scas
adc
in
jmp
pop
aas
jne
adc
nop
test
push
xchg
inc
xchg
sbb
cltd
lds
sub
dec
imul
repnz
scas
imul
add
jp
nop
inc
cmpsb
ljmp
pushf
jo
lcall
lret
mov
std
out
or
andl
inc
or
mov
lret
std
adc
mov
or
xchg
ret
pop
fldcw
xlat
fwait
cmc
lret
andl
ret
call
out
sub
mov
loop
pop
inc
add
mov
sti
or
pop
mov
arpl
xor
mov
out
dec
add
outsl
cmovb
jbe
or
adc
xchg
fstpt
lds
pop
lods
lock
aad
repz
mov
mov
mov
dec
sbbb
sub
pop
push
mov
std
jo
mov
leave
mov
push
inc
mov
sahf
push
xlat
in
xor
and
adc
mov
mov
insl
xlat
cmp
sbb
mov
xchg
and
imul
pop
adc
js
sahf
adc
and
xchg
jg
imul
mov
clc
xchg
popa
mov
lea
dec
xor
push
popl
pop
lret
mov
sbb
jns
in
das
add
push
xchg
push
cmp
cmp
rcll
mov
adc
cmp
jae
xchg
add
fcoms
aaa
adc
cmc
xor
mov
jns
cmp
sbb
stos
fisttps
xor
xchg
sbb
or
ret
inc
add
jecxz
push
movsb
imul
aas
and
call
cwtl
xchg
ss
lods
stos
sub
aaa
add
sub
mov
out
notb
test
cmpsl
lahf
enter
sub
mov
mov
and
cmpsl
lods
jg
rolb
cld
cmp
leave
dec
out
shrl
inc
jno
in
and
js
pop
inc
xchg
mov
bound
inc
mov
out
xchg
xchg
lcall
push
popa
jne
gs
dec
xchg
leave
sbbb
xor
je
cmp
xchg
mov
insb
mov
jno
andl
arpl
add
outsl
pop
add
xchg
outsb
inc
mov
cmp
inc
fimuls
in
loop
lea
iret
jp
movl
mov
mov
pop
in
in
insb
inc
push
lods
shll
and
fnstsw
push
test
dec
nop
test
cmp
or
insb
insl
fmull
jmp
insb
xor
adc
xor
mov
fildl
jmp
sub
sbb
xchg
adc
repnz
ljmp
pop
sub
jle
inc
jns
aaa
enter
nop
hlt
test
mov
imul
or
sti
dec
mov
test
scas
jo
inc
std
enter
and
dec
mov
adc
sbb
inc
fsubr
push
push
mov
mov
nop
sub
mov
add
pop
sbb
mov
sub
dec
fdivr
push
insl
jle
xor
lock
and
punpckhwd
push
call
outsl
jl
jno
shrb
mov
jp,pt
and
mov
xor
add
ss
stos
mov
cltd
lea
std
cmpsl
dec
outsb
popa
outsl
jge
xor
in
test
clc
jmp
add
aad
cmp
inc
mov
iret
push
add
stos
sub
pop
jae
pusha
pusha
hlt
fsubrp
and
jp
adc
ja
add
movsl
adc
mov
loope
add
mov
cli
xchg
mov
adc
mov
pop
scas
cli
rcr
cwtl
add
daa
adc
enter
jp
mov
inc
or
fxch
mov
mov
cli
gs
cltd
xchg
push
mov
sar
fs
aaa
push
enter
xor
pop
les
fucomip
lea
insl
jg
mov
stos
push
int
cmp
rep
adc
pushf
test
add
fdivrs
sahf
dec
out
jl
orl
or
jp
mov
lahf
enter
imul
adc
scas
inc
loope
sub
sub
lock
scas
add
pop
cmpsb
rcrb
addb
incb
xor
in
xor
aam
rcrb
dec
lret
and
or
pop
mov
fidivl
jl
das
addr16
jl,pt
push
sub
inc
pop
repz
mov
scas
movsl
adc
sbb
mov
out
mov
cwtl
popf
mov
lret
int3
fcoml
push
add
fstl
add
popf
or
stos
lret
and
stos
loopne
hlt
shll
jns
mov
rep
iret
lds
arpl
pusha
bound
jl
push
pop
outsb
decl
mov
mov
sbb
and
movsl
cmp
addr16
ficoms
ja
fcomps
aaa
xchg
mov
mov
loop
sub
fldt
in
bound
add
insb
sub
pop
xchg
and
cli
loopne
test
cmpsl
ret
add
inc
xor
xchg
sbb
in
pop
xchg
fldenv
dec
arpl
andb
jnp
mov
mov
das
pop
push
inc
dec
hlt
test
lret
mov
mov
mov
push
sub
cmp
push
jle
push
pop
jno
xchg
repz
pop
adc
cli
jmp
fidivrs
lods
movsb
das
xlat
hlt
mov
cmp
xor
mov
daa
inc
int3
pop
adcl
or
xchg
repz
test
imul
neg
jmp
inc
ljmp
mov
out
xor
or
gs
sbb
cs
out
xor
cmp
xor
inc
out
xchg
add
addb
shlb
and
inc
imul
xchg
int3
adc
xchg
sahf
push
loop
cmp
mov
fsubrl
cltd
test
out
jmp
lcall
pop
lea
dec
push
int
push
stos
jne
lret
jmp
dec
xchg
cs
mov
jno
jl
cmpsb
mov
cmp
das
dec
rcrl
inc
ljmp
dec
pop
jno
xchg
cmp
jle
mov
xchg
mov
int
notb
fpatan
mov
mov
or
jno
fiaddl
cmpsb
sub
icebp
pop
inc
xchg
sbb
xor
arpl
out
mov
push
div
ftst
add
sub
xchg
ret
les
fwait
xchg
xor
lret
mov
dec
pop
test
jg
mov
jmp
test
adc
add
xchg
scas
xchg
mov
mov
ret
out
mov
lods
mov
mov
cltd
mov
roll
xchg
outsl
push
lods
sbb
inc
or
sbb
or
mov
sbb
dec
push
lods
xor
negb
jnp
clc
inc
dec
pop
cmp
mov
rcrb
add
prefetchw
xlat
add
idiv
and
xchg
jae
loopne
jne
lods
scas
daa
fsubs
ret
push
arpl
add
jne
mov
or
out
jns
cmp
int
xchg
mov
pop
aaa
or
push
inc
jno
ja
jnp
sbb
fstps
push
imul
loopne
add
lahf
adc
and
and
dec
or
pop
std
pop
out
cmpsb
xlat
mov
stc
inc
fisttpl
pop
int
mov
aam
daa
xlat
es
gs
call
mov
sti
sbbb
sub
icebp
inc
jns
push
cld
aam
addb
lret
loopne
cld
xor
jmp
push
data16
sub
pop
inc
dec
sub
push
xchg
xchg
mov
dec
sbb
or
stos
or
jecxz
gs
jg
arpl
call
cmp
fnstenv
pop
outsl
fnstsw
in
out
outsl
xor
orl
cs
movsl
in
pop
push
inc
add
jno
cmpsb
dec
mov
daa
out
sbb
orb
es
mov
and
cli
shlb
and
mov
lds
test
mov
push
cmpsl
cmpb
in
fisubl
je
clc
outsb
add
or
lea
sbb
leave
or
mov
loop
scas
jne
lds
cmp
sbb
mov
and
xor
mov
jl
or
mov
mov
mov
jb
arpl
add
xorl
aaa
aaa
adc
clc
rorb
scas
pop
movsb
fcoms
mov
or
push
xchg
push
and
dec
int3
push
int
out
pop
xchg
inc
out
xor
out
add
dec
mov
mov
mov
xchg
and
inc
mov
mov
cmp
pop
rorb
scas
jg
sbb
in
mov
xor
lods
cli
sbb
in
dec
mov
aas
mov
cmp
hlt
outsb
pop
aad
mov
pop
pop
scas
mov
insb
mov
xchg
sarl
sti
cld
add
call
mov
iret
sbb
test
pop
fcoms
testb
push
inc
jg
jg
cmp
sbb
adc
arpl
fidivs
pop
and
mov
push
push
aam
movsl
dec
mov
cli
mov
jecxz
incb
push
and
fdivs
in
dec
jno
and
mov
add
cld
es
and
xlat
mov
fs
loop
or
pusha
jecxz
in
mov
sbb
dec
xchg
mov
ret
xchg
inc
ja
and
push
ja
and
in
mov
xor
ret
hlt
fidivs
out
rclb
pop
xor
icebp
sub
inc
cmp
cmpl
and
iret
in
add
call
test
insl
push
outsb
aam
imul
cmpl
sub
arpl
mov
inc
push
pop
sub
js
cmp
lea
jns
xchg
out
pop
xor
mov
dec
mov
test
xchg
dec
sbb
adc
int
add
les
and
pop
scas
jp
dec
std
mov
dec
dec
pop
add
dec
imul
mov
cwtl
mov
or
lea
sti
push
and
sub
orl
cmp
adc
pop
ja
dec
cmp
out
xorl
or
or
std
dec
cmc
jle
repz
ds
xchg
inc
jns
sbb
pop
xchg
cmc
push
aam
dec
mov
or
xchg
push
call
jle
mov
jnp
pop
popa
add
jns
pop
xchg
or
cmpsl
and
sub
xlat
bound
std
or
loopne
out
mov
pop
flds
sub
xchg
mov
scas
in
aam
dec
xor
or
flds
push
mov
js
xor
inc
stc
fwait
sub
adc
dec
rorb
xchg
pop
push
dec
inc
adc
adc
fisubrl
inc
fsubr
loopne
add
test
int3
mov
mov
inc
out
jb
cmpb
mov
or
jno
jno
dec
mov
adc
icebp
stos
mov
fisttps
lods
dec
xor
idiv
movsb
rcr
cmp
pushf
xchg
pop
cld
mov
std
cltd
push
lock
xchg
xchg
gs
cmp
jmp
adc
xor
and
add
insb
xchg
daa
push
and
jle
outsb
es
fxch
and
sub
xchg
mov
cmp
stos
jnp
stos
jmp
adc
cmp
fwait
cmp
xor
int
inc
out
addr16
and
lea
dec
and
stos
push
clc
aaa
adc
push
jbe
lret
test
and
popa
jbe
push
xchg
mov
cmp
test
mov
jl,pt
xor
push
fld
aaa
cli
nop
lods
lea
jge
lods
insl
dec
inc
push
fs
andl
inc
jge
mov
adcl
test
jb
shlb
or
push
jno
sahf
cmp
aam
pop
ds
mov
or
jl
scas
jns
cmp
mov
inc
cmp
adc
sbb
push
jg
je
jmp
push
jno
inc
test
jbe
mov
push
fisubs
addr16
ret
shrb
pop
lahf
push
movb
jg
decl
push
add
sbb
cmc
test
ds
cmpsl
dec
dec
out
sub
ljmp
dec
sti
push
push
push
sarl
addr16
xchg
and
in
push
jne
add
ljmp
bnd
push
and
fisttpll
dec
sbb
and
push
lahf
lret
mov
in
xchg
jg
int
insb
inc
and
bound
xchg
adc
jns,pt
cli
movsl
aas
std
hlt
subb
iret
or
cmpsl
out
xchg
and
jae
outsb
fidivs
pop
ss
mov
cmp
mov
push
lds
mov
nop
or
sbb
fwait
lock
mov
mov
in
cltd
ret
xchg
aam
leave
movsl
aas
int3
sbb
cmp
js
psubb
loope
clc
cmp
and
test
mov
lea
icebp
rorb
mov
out
insl
cli
or
push
mov
fildl
cs
adc
inc
ret
sti
mov
mov
xor
enter
fwait
inc
add
dec
imul
pop
pop
inc
inc
mov
insb
add
je
xor
xor
movsb
jne
idiv
std
ret
mov
mov
jl
jecxz
aad
pop
incb
xchg
fisttpl
xor
into
call
sbb
jnp
imul
mov
lods
adc
mov
lods
data16
test
adc
sub
out
ljmp
jae
mov
cmp
pop
jmp
dec
jge
jne
mov
mov
sbb
dec
adc
repnz
xor
add
out
jmp
lret
lahf
roll
jle
aaa
std
out
cmp
orl
cmpsb
mov
and
jb
call
xchg
stos
ficomps
push
or
lea
pop
jmp
xchg
rorl
test
stc
mov
sbb
nop
bound
or
ficomps
enter
and
out
pop
les
mov
ljmp
inc
mov
push
cmp
cmp
xorl
add
leave
cmpsb
jl
enter
mov
mov
imul
out
popf
ficompl
mov
cmpsb
js
mul
mov
jo
pop
int3
loop
xor
popa
out
sub
mov
pop
mov
cmp
push
stc
push
inc
mov
push
add
out
cmp
lock
add
fsts
aas
emms
inc
enter
cmp
or
stos
movsb
fucom
cmp
dec
mov
clc
mov
sbb
mov
xchg
xchg
or
shr
out
dec
add
sub
xchg
inc
mov
add
dec
sub
jge
sub
outsl
xlat
mov
dec
jmp
cs
lcall
jne
sahf
sarl
inc
sub
enter
leave
ficomps
test
xchg
jno
rcrb
inc
xor
mov
sub
in
cmp
mov
mov
jno
lcall
adc
inc
sub
xlat
roll
xchg
xchg
aaa
pop
loope
cmp
or
rolb
mov
pusha
das
inc
push
mov
adc
out
movsb
and
pop
add
cmp
push
jmp
stos
add
cmp
scas
push
mov
lret
jbe
lock
lea
jnp
lods
imul
mov
push
js
adc
adc
rcrl
pop
cmp
nop
call
ljmp
arpl
inc
in
push
sbb
imul
out
jbe
lcall
or
cltd
pop
popa
lock
in
dec
mov
sbb
inc
sub
and
and
mov
adc
pushl
and
and
int
jp
orb
jb
insb
push
mov
sub
lcall
loop
repz
xchg
gs
cmpsl
and
mov
mov
sub
push
mov
call
mov
loop
sub
push
pop
mov
push
idivl
pushl
lods
mov
pop
inc
testl
fldcw
jo
addl
mov
out
ficoml
add
dec
scas
cmp
inc
push
mov
mov
psraw
cmp
shl
cmpsl
dec
pop
fldt
insl
lds
decl
and
pop
mov
int
push
pop
lds
dec
leave
das
xor
push
cmp
out
in
xchg
lds
mov
mov
pop
enter
and
mov
ss
mov
inc
mov
pusha
xchg
mov
push
mov
mov
pop
shlb
mov
inc
jl
dec
insb
fs
outsb
dec
jmp
dec
sub
add
shlb
in
sub
loope
adc
xchg
clc
out
fnsave
test
into
cli
or
es
adc
lea
inc
inc
xchg
inc
sbb
int3
xchg
add
lret
scas
dec
loopne
sbb
mov
pop
cs
inc
adc
xor
iret
out
adc
bound
jae
lods
adc
hlt
cmp
jnp
negb
adc
mov
mov
andb
xchg
push
cmp
adc
lea
and
pop
outsl
xor
inc
mov
dec
or
jg
or
lods
mov
mov
in
adc
dec
js
or
add
xchg
add
fldcw
ret
push
mov
dec
adc
and
fsubl
cmp
mov
or
jae
cmp
insl
stc
inc
add
cld
lret
cmc
mov
jne
pop
rclb
and
movsb
jmp
stos
mov
fsubrs
sbb
cmp
or
addr16
scas
movsl
gs
mov
push
pop
andl
jae
and
dec
adc
xchg
or
jge
int
test
cmp
adc
leave
notb
lods
scas
nop
mov
insl
adc
pop
cmp
loopne
jno
sarb
les
cltd
inc
xor
les
push
xor
mov
aas
int
mov
out
xlat
dec
jbe
xor
lret
xchg
lret
push
in
cmp
push
mov
xor
and
ret
add
fs
push
mov
add
push
sub
std
cmpsb
int
sbb
jb
pop
xor
adc
repnz
sub
imul
push
xor
hlt
pop
inc
or
imul
dec
test
jbe
fcmovnb
mov
push
jnp
or
lret
in
add
loope
lret
cmp
mov
call
xor
mov
or
js
sbb
frndint
sbb
fdivs
jmp
jns
xchg
shll
mov
mov
clc
mov
fmuls
lods
incb
inc
sbb
ljmp
push
daa
outsb
sbb
aad
dec
lock
ficompl
outsb
lret
push
sahf
bound
pushl
cmpsb
push
out
cld
sbb
imul
xchg
mov
adc
mov
push
sti
cwtl
lcall
pop
push
ror
xchg
pop
lret
in
pop
push
mov
test
cli
jnp
in
inc
jl
lods
pop
xchg
cmp
add
movsb
lcall
mov
lock
leave
push
xor
repnz
mov
sub
popl
out
dec
xlat
pop
cltd
pop
xchg
xor
cmovo
not
ja
jo
mov
push
repnz
xchg
jo
shll
xor
int
sub
pop
mov
adc
int3
lahf
xchg
ljmp
inc
jecxz
inc
in
push
loope
gs
sub
std
cmpsb
jle
test
jnp
xchg
ret
inc
mov
mov
scas
dec
add
adc
sub
jne
scas
fisttpl
inc
inc
and
xor
scas
cmp
int3
mov
fnclex
or
pop
xchg
es
pusha
push
fadds
mov
leave
andl
mov
pop
mov
int3
pop
sbb
jge
mov
mov
mov
mov
ret
clc
push
mov
xor
mov
dec
loope
dec
inc
ret
and
xor
daa
or
insl
lret
frstor
arpl
jb
into
test
out
push
jb
in
andl
iret
stos
or
int
add
xor
jle
stos
inc
sbb
testb
inc
add
mov
dec
add
mov
or
scas
pop
cli
call
js
pop
adc
mov
cli
in
jo
jno
adc
pop
jne
xor
add
jg
and
inc
xor
cmp
rorb
out
stos
pop
inc
xor
dec
or
cmp
in
push
fisubl
mov
fwait
cmp
pop
insb
adc
xor
sarl
or
shll
sbb
cmp
pop
and
cmp
pop
ljmp
xor
mov
stos
ja
mov
sbb
repnz
and
sbb
and
inc
xchg
cmp
test
aas
in
int
bound
adc
cmp
hlt
mov
push
std
les
adc
cltd
mov
mov
jns
push
add
je
jmp
mov
nop
cld
filds
notb
jle
adc
xchg
sub
pushf
lds
pop
xchg
push
icebp
mov
test
jl
or
and
mov
movsb
pop
inc
pop
jle
sbb
jp
cmpsb
js
fwait
popf
shlb
push
scas
sbb
xchg
sub
and
jne
les
loop
inc
dec
dec
pop
sbb
pushf
movsl
and
repz
pusha
loopne
fdivrl
pop
lds
jnp
and
mov
xchg
inc
jne
enter
sub
scas
sbb
mov
insl
adc
ret
out
or
mov
push
shlb
cmpsb
fstpl
icebp
sub
xor
loope
inc
sbb
aam
repnz
loopne
mov
sbb
aad
arpl
dec
js
jmp
int3
fbstp
mov
sub
cltd
jns,pn
test
aas
pop
jae
jecxz
push
inc
dec
push
pop
jnp
dec
test
ljmp
dec
mov
sub
cs
sbb
sbb
xor
iret
out
cmp
cmp
mov
adc
mov
sub
lcall
das
mov
inc
pop
adc
adcl
fisttpll
mov
out
je
je
orl
out
xor
jge
rorl
jl
xchg
sub
ds
jb
aaa
dec
stc
push
loopne
aad
ljmp
test
jne
inc
xchg
push
rclb
inc
in
add
cltd
pop
test
gs
mov
push
lds
cmpsl
out
popf
notb
xor
cmp
mov
pop
ds
inc
clc
test
dec
out
mov
scas
pop
add
aas
int3
mov
pop
sbb
jne
jnp
js
fstpt
xchg
mov
xor
mov
and
lods
fcompl
outsl
je
mov
xor
test
xchg
lahf
xchg
jge
adc
inc
sub
jne
cmp
sub
inc
cmp
sub
orb
jbe
enter
insb
std
add
lock
mov
sbb
insl
ds
int
and
sbb
nop
xchg
scas
mov
sbb
mov
fistpl
jns
inc
sbb
movsl
lds
mov
push
ficompl
add
jle
xor
xchg
outsb
cmpsb
cmc
dec
dec
inc
popf
xor
mov
fdivrl
xor
test
fdivl
repnz
push
bound
push
fisttpll
aas
dec
mov
cwtl
pop
popa
imul
inc
xchg
jb
xor
and
or
orl
pop
push
and
inc
fwait
notl
subb
loopne
cli
repz
fbld
xchg
rcrl
or
jecxz
ret
or
test
nop
fnsave
test
push
aaa
xchg
cmc
lahf
scas
and
testl
inc
into
jno
sub
cmp
or
cmp
sbb
dec
call
fidivrl
and
add
repz
add
mul
pop
dec
addr16
push
or
jle
ljmp
cmp
jl
stos
sbb
or
or
dec
aad
jp
outsb
add
loop
ret
sbb
jnp
imul
push
cmpsb
mov
aad
out
pop
sbb
movsb
mov
push
bound
pushf
mov
in
cmc
push
fistl
and
pushf
rcrb
mov
movsl
lahf
inc
fsubr
inc
mov
loopne
xor
cmp
bound
mov
and
adc
mov
xor
test
push
mov
repnz
xlat
sahf
inc
xchg
aam
mov
adc
loopne
mov
rol
jmp
mov
test
mov
ja
incb
or
xor
ljmp
pop
mov
test
repz
sbb
popl
roll
sbb
mov
dec
jbe
fadds
cmp
fs
cmc
psrlw
insl
jecxz
sbb
jmp
and
ds
scas
dec
mov
scas
push
push
pop
cmp
idivb
mov
xchg
jmp
push
cli
push
outsl
sti
gs
popf
mov
ret
js
xlat
int3
push
inc
jbe
iret
mov
xchg
push
push
ljmp
sub
cli
je
mov
lahf
inc
jo
jg
adc
xchg
dec
jbe
mov
test
cld
mov
ffree
xlat
xor
aam
fldt
add
mov
and
add
or
mov
inc
fldl
mov
sbb
and
daa
aaa
jl
pop
pusha
mov
adc
push
cmp
js
xor
mov
icebp
sbb
sub
popf
rorl
ret
jmp
out
imul
cmp
ds
cmp
and
push
movsb
push
mov
test
push
sub
cs
mov
cmc
je
add
pop
das
pop
mov
or
les
rcll
aam
xor
in
mov
sbb
data16
sbb
cwtl
bound
movsb
sbb
orb
xchg
push
lret
cmp
mov
add
imul
mov
les
and
jns
push
jge
bound
and
or
cmp
sti
and
movsl
mov
mov
pop
sbb
in
mov
sbb
lret
push
jb
ljmp
pop
push
and
push
mov
dec
stos
xchg
vmaskmovdqu
jmp
xor
mov
ja
adc
les
jnp
idivb
sahf
es
test
add
pop
mov
andl
sub
filds
nop
push
push
out
insb
mov
fidivrs
push
inc
shlb
mul
pop
push
or
push
jmp
jp
mov
or
sbb
gs
xorl
or
inc
pusha
sarl
or
jg
dec
push
fisttpl
sub
mov
leave
fxch
mov
pop
pmulhw
and
lahf
mov
adc
shrl
in
inc
jbe
ret
cmp
cmp
and
fst
movsl
jno
inc
pop
andb
aas
inc
sub
and
aaa
mov
push
push
ds
sbb
and
mov
and
sbb
enter
mov
inc
imul
sub
xlat
daa
es
dec
cld
pushf
pop
push
call
push
aaa
stos
inc
sub
xchg
insb
leave
sahf
ds
mov
mov
popf
cmp
jae
xchg
mov
adc
mov
scas
jno
sub
stos
pusha
jmp
push
fsub
ss
ret
addr16
scas
jae
and
sub
int
jg
stc
jecxz
push
mov
je
stos
std
adc
pop
pusha
dec
out
punpcklbw
cmp
cmp
push
inc
enter
pop
movsb
das
mov
dec
in
jbe
loopne
cmp
pop
jle
inc
lret
xor
jmp
mov
xor
mov
mov
jmp
and
pop
jg
or
mov
out
jmp
in
adc
xlat
sub
daa
lcall
inc
test
fildl
inc
jb
daa
push
jecxz
inc
mov
mov
cmp
fcmovu
xchg
jno
mov
inc
ret
xor
push
mov
pop
movsb
sub
push
mov
xchg
in
sbb
loope
push
fs
mov
adc
jmp
inc
pop
cmp
sub
adc
inc
pop
jl
mov
pop
sub
stos
shl
repnz
fcoms
fstpl
repnz
cwtl
out
inc
rcl
or
cmp
inc
cmp
adcb
sub
pusha
inc
ss
jg
xchg
sti
push
add
xchg
push
add
or
jno
sbb
xchg
lods
pop
ss
fmull
xchg
xchg
scas
fcoms
mov
push
ds
addr16
cmp
std
dec
add
mov
pusha
js
xor
addr16
mov
stos
ljmp
sti
nop
das
lahf
xorb
pop
push
fs
imul
lret
das
repnz
sub
out
into
pop
loopne
xor
mov
or
rcrl
jb
repnz
loopne
sar
es
add
cmc
scas
dec
mov
stos
add
mov
ja
enter
jo
cld
hlt
nop
fdivp
jge
pop
and
xlat
adc
dec
jb
ja
cmp
lods
xchg
fsts
add
sbbb
jle
xor
jge
and
xor
jp
push
cmp
push
rcll
lahf
inc
rcr
lds
or
lret
scas
add
pop
sbb
cmp
aas
into
mov
or
mov
in
dec
mov
ljmp
in
sti
rcrl
scas
mov
xor
sbb
mov
adcl
es
leave
jb
dec
sub
popa
jecxz
das
insb
fwait
sbb
test
call
les
push
arpl
jbe
scas
ss
test
movsl
ljmp
shr
shll
call
and
fdivrs
aam
mov
add
pop
std
adc
adc
imul
sub
inc
std
clc
enter
jnp
mov
arpl
out
pop
gs
pop
cs
mov
lods
mov
call
mov
cs
jae
or
int3
cmp
pop
fbld
push
push
xchg
xor
ljmp
lock
es
jo
pop
sub
data16
mov
push
fdiv
and
stos
mov
and
rclb
insb
and
out
loopne
movsb
inc
jns
outsb
jmp
mov
mov
mov
arpl
adc
inc
gs
push
les
push
sahf
jb
scas
mov
loop
xor
sub
rolb
sbb
loop
pop
pop
sub
or
lret
ror
mov
dec
shll
int3
add
jnp
test
popa
and
aas
add
xchg
push
cld
mov
cmp
sar
divl
jmp
or
movsl
mov
movsl
push
mov
fisttpll
test
lods
inc
les
push
loopne
push
mov
adc
inc
pop
sti
push
jb
push
data16
lds
xor
mulb
jno
sahf
mov
jbe
dec
jl
push
sub
or
inc
or
fdivp
jns
imul
sarb
xchg
shll
bound
mov
cs
xchg
and
and
loope
mov
testb
movsl
sub
fucomip
inc
movsb
add
popf
dec
aaa
cmp
pop
mov
pushf
push
out
hlt
inc
mov
fwait
add
fcoml
insl
jmp
leave
repnz
add
fsts
and
cli
aaa
cmp
pop
loopne
pop
outsb
mov
lahf
xor
fbstp
inc
inc
xor
sub
dec
or
push
push
mov
sub
push
pushf
mov
mov
in
mov
mov
cmp
cmpsb
sbb
mov
aaa
mov
popf
mov
pushf
repnz
lds
call
aad
sbb
jg
popf
jnp
rcr
loopne
sbb
or
xchg
in
pop
lods
cmpsb
sbb
pop
rolb
pop
jnp
ret
sti
mov
fs
pushf
imul
jae
sub
icebp
dec
mov
and
push
inc
or
lds
test
lcall
cmp
xor
or
jno
push
add
cli
and
jb
jp
xchg
or
inc
inc
aad
in
imul
mov
stos
push
xor
loop
and
shrb
pop
mov
pop
cmpl
push
sub
or
xchg
dec
sahf
flds
pop
xchg
nop
sbb
rcr
pusha
sub
nop
push
jne
and
inc
addr16
pop
ja
mov
movsb
pop
pop
ret
adc
jg
xchg
push
ljmp
and
inc
pushl
popf
pop
pop
enter
in
jge
jg
aaa
cwtl
sub
daa
std
je
pop
push
mov
out
dec
xchg
xchg
imul
scas
jl
rcrb
cli
roll
imul
aaa
jg
xlat
call
lds
or
cmc
sub
xchg
mov
push
test
inc
push
lcall
sbb
andb
es
addr16
mov
into
cmp
fxch
std
mov
inc
lahf
add
icebp
shll
or
mov
xor
mov
add
stc
add
inc
stos
adc
clc
enter
inc
mov
es
loopne
mov
dec
sbb
cmp
sub
adc
dec
out
aas
jno
leave
cmpsl
fcmove
push
jecxz
outsl
mov
arpl
xor
cmp
mov
fisubs
pop
fidivl
xchg
cmp
mov
mov
into
push
jnp
shlb
test
cs
outsb
loop
fucomi
jne
and
xchg
adc
cmp
xchg
fsubl
enter
leave
idivb
jns
mov
xor
pop
add
loopne
push
out
leave
inc
stos
cmp
idiv
xor
pop
sub
add
orl
dec
mov
jnp
pop
xchg
pusha
scas
mov
mov
cmpsb
stos
cmpsb
jg
in
jmp
mov
fidivrl
pusha
xchg
negl
mulb
push
insb
or
mov
xchg
aas
sbb
xor
sub
push
sbb
lcall
repnz
aaa
setp
ror
int
jb
mov
popa
iret
in
or
setp
mov
icebp
jb
lahf
sub
and
pop
out
sti
adc
sub
mov
sbb
lds
xchg
push
push
cmp
nop
mov
out
cli
popw
xchg
add
int3
lcall
pop
fnstsw
push
push
scas
jb
xor
andl
push
xorb
outsb
xchg
popf
clc
icebp
inc
lret
mov
rcl
pop
dec
in
jl
pop
in
stos
aaa
mov
inc
jecxz
stos
lret
cmp
add
inc
das
cmp
inc
cmp
dec
xor
imul
jnp
mov
adc
adc
or
mov
cmpl
pop
pop
sbb
mov
xor
call
mov
in
pop
pop
jmp
xchg
push
add
hlt
xor
bound
lret
in
negl
in
rcr
mov
mov
xor
mov
adc
lds
adc
xlat
mov
js
aaa
jl
aaa
rolb
fiadds
getsec
inc
stos
test
pushl
lret
sbb
in
test
mov
sbb
mov
add
aam
test
inc
ficomps
sub
ret
inc
mov
dec
jb
xchg
and
or
sbb
test
adc
push
mov
pop
ljmp
xchg
and
cli
pop
in
xor
jns
or
hlt
bound
or
mov
inc
jecxz
mov
cmp
dec
jae
gs
pop
sbb
push
mov
stos
mov
jmp
pop
dec
cmpsl
mull
fsubp
add
movsb
sbb
sub
aaa
push
repz
pop
mov
mov
in
fdiv
pop
adc
mov
fnstenv
rorl
imul
inc
push
push
aad
pop
aas
and
fldl
jl
jge
xor
out
inc
ret
sbb
jae
inc
int
push
movsb
cmc
pop
cs
mov
sub
jbe
repz
fstpt
mov
bound
out
mov
cmc
adc
or
mov
pop
or
pop
es
das
sbbl
cs
fbld
add
lock
inc
mov
nop
cmp
sbb
out
xor
imul
std
out
or
clc
dec
mov
fldt
jecxz
jno
jge
incl
dec
ja
out
jnp
add
xchg
insl
loope
outsb
jae
adc
mov
fs
pop
xor
movsl
sbbb
inc
rorl
lret
mov
xor
into
push
mov
or
pop
js
rclb
es
icebp
insl
xchg
in
mov
xor
aas
lcall
pop
andb
sbb
cltd
cmp
sub
jnp
dec
mov
cwtl
jae
mov
xchg
mov
in
pop
cmp
pop
xor
sbb
pop
jb
dec
shrb
rorb
bswap
pop
add
push
adc
adcb
fwait
lahf
mov
cmpsl
sub
iret
imul
push
cmp
jb
xchg
jns
sbb
xchg
loope
mov
sbb
jle
repnz
mov
inc
xchg
cld
pop
or
dec
out
xchg
outsl
jl
fdivrl
je
push
push
imul
fsubl
adc
cmpsl
adc
rcrb
fdivrs
cmp
mov
jmp
ljmp
outsb
cld
cli
cmc
add
aad
pop
mov
inc
xor
lock
push
cmpsl
or
stos
subb
imulb
xchg
xor
push
outsl
mov
dec
lods
jg
dec
or
flds
inc
pop
rolb
cwtl
or
repnz
stos
mov
push
int3
iret
or
jge
adc
sbb
das
or
data16
outsb
test
jae
mov
sti
enter
loope
mov
pop
in
dec
pop
and
add
mov
add
jp
sbb
popf
stc
adc
sahf
dec
mov
hlt
mov
cli
xor
xchg
xchg
jbe
inc
push
sub
adc
les
and
je
cltd
and
repnz
adc
dec
data16
dec
push
mov
iret
mov
dec
bound
pop
xchg
jno
pop
add
mov
out
cmp
inc
xor
pop
and
and
repz
js
pop
mov
or
push
xchg
and
jecxz
mov
icebp
mov
gs
pop
daa
test
out
cmp
xchg
lcall
adc
stos
cs
loopne
popa
out
xchg
scas
and
inc
add
data16
scas
push
lahf
or
popf
sub
cmp
mov
int
int
sbbl
cli
push
mov
ja
xor
aaa
push
lods
jle
in
jmp
pop
lcall
movsl
jnp
cmp
or
jb
inc
mov
fisubrl
adc
or
daa
pop
les
std
push
push
mov
xchg
imul
mov
xchg
lahf
push
lea
xchg
into
xchg
fs
jns
sbb
subl
test
xchg
xor
inc
rorb
push
cmp
push
addr16
add
xchg
dec
push
jecxz
hlt
lods
sub
inc
jb
gs
dec
cmp
pusha
sub
cld
bound
fisubrl
inc
aam
mov
and
xor
dec
pop
mov
les
xor
mov
sbb
xchg
sbb
lods
idivl
hlt
incb
sub
xchg
punpckhbw
rorb
movl
imul
lahf
xchg
loop
mov
push
xor
inc
push
sbb
xchg
imul
add
xor
js
mov
xchg
mov
ljmp
mov
ja
push
xor
mov
cmpsb
push
idivb
sub
lods
jnp
sub
mov
jp
mov
pop
or
lea
or
pop
adc
jno
jnp
mov
mov
dec
sbb
xchg
sub
out
in
push
push
sub
sub
mov
xchg
mov
lret
mov
xchg
ret
xor
xlat
mov
cmp
jge
test
and
fdivs
cs
ljmp
push
ret
popa
xchg
jb
insl
dec
xchg
cwtl
clc
data16
lds
dec
cwtl
jnp
fwait
pop
pop
in
push
lock
fsubrl
movsb
rorl
or
lock
push
xchg
lret
dec
cli
das
xorb
sub
inc
pop
cmc
test
push
pop
fadds
add
test
push
rcl
sbb
jmp
in
pop
inc
push
and
push
aaa
fdivl
stos
lods
addr16
push
mov
adc
inc
sbb
shlb
jle
iret
scas
mov
faddl
mov
daa
pushf
xor
jle
movl
outsl
pop
out
add
and
lods
adc
mov
sub
pushf
in
mov
dec
push
hlt
jl
xor
addr16
push
sahf
jecxz
mov
lret
push
sub
repnz
xor
jne
shrb
jecxz
out
enter
pop
adcl
mov
stos
popa
xorl
sahf
push
add
lea
jb
imul
iret
mov
jmp
xor
push
shll
ret
loop
adc
xchg
mov
add
scas
push
stc
add
adc
shlb
pop
xchg
je
push
cmp
adc
mov
mov
sub
sub
sub
jne
jne
xor
faddl
outsb
fwait
lods
adc
iret
sub
out
inc
jg
adc
icebp
pop
sbb
mov
mov
ficomps
xchg
jae
sub
or
daa
mov
adc
xlat
sbb
cs
incb
adc
dec
cmp
mov
inc
push
adc
adc
xchg
mov
ret
adc
cs
mov
popf
adc
xor
mov
xchg
test
pusha
dec
hlt
and
cmp
cmc
inc
in
cs
in
js
fsubl
std
mov
fstp
push
fs
cmpsl
out
int3
xchg
into
or
aas
out
loope
notl
mov
nop
jge
adc
in
pop
push
push
pop
xor
gs
cmpsb
out
in
bound
inc
popf
cmp
or
pushf
jl
push
cld
sbb
push
mov
frstpm(287
sub
jge
mov
jecxz
sub
dec
sub
jg
jp
aam
insl
out
adc
push
and
mov
sbb
addb
mov
push
jge
mov
mov
xchg
cmpsl
jno
xor
loop
jmp
pop
cmp
arpl
or
mov
cmp
into
xlat
rorl
dec
mov
fsubrp
aad
or
and
test
cli
push
in
cld
dec
hlt
rcll
mov
mov
sub
aad
pop
mov
insb
in
ret
pop
mov
jge
inc
lret
lcall
dec
mov
pushf
cmp
mov
jl
add
inc
cmpsb
cmp
stc
shrb
popa
outsb
stos
addb
xchg
xor
popa
fs
fstl
or
xor
xchg
sub
and
daa
mov
das
fmul
loop
icebp
push
mov
outsb
cmpsl
pop
jmp
sbb
je
jnp
xlat
popa
xor
pop
mov
shlb
ds
dec
sarl
pop
sub
adc
cmp
cmp
loopne
out
je
mov
adc
shlb
or
into
mov
pop
mov
cmp
imul
pusha
dec
ljmp
cltd
sbb
xchg
pop
cmp
test
and
pusha
data16
sub
mov
push
jp
push
mov
mov
and
fbld
dec
mov
push
adc
or
outsl
shll
mov
dec
inc
xchg
mov
pop
jne
jmp
mov
addr16
sbb
adc
xchg
dec
insl
push
sbb
imul
dec
lahf
fimull
mov
mov
in
aas
ret
fwait
shl
jnp
and
gs
cld
xchg
jnp
test
and
pop
adc
mov
add
inc
inc
popa
jb
xchg
adc
mov
fs
out
ss
outsb
popa
push
outsb
xor
sarb
fwait
dec
scas
pop
std
inc
sbbl
add
fdivr
pop
fcoms
sbb
push
sti
inc
and
add
in
or
pop
or
stos
outsb
ss
mov
xor
pop
jns,pn
je
dec
mov
in
ret
adc
push
push
in
jle
in
pop
sbb
mov
sbb
jg
stc
add
rcrl
and
sahf
dec
and
stc
test
or
sub
aas
jne
sbb
push
or
js
push
pop
jbe
push
shl
retw
enter
lds
ds
jae
fdivr
movsl
aas
xchg
mov
sub
stc
out
or
jne
std
mov
rclb
inc
ret
in
test
outsb
mov
dec
adc
leave
in
push
sarl
and
or
lds
cld
mov
movsl
cwtl
mov
dec
sub
addr16
repnz
mov
mov
inc
mov
out
and
dec
es
adc
mov
sar
inc
adc
pop
fwait
cwtl
pop
inc
adc
mull
xchg
dec
or
mov
cmpsl
fstl
pop
mov
add
shrl
jne
adc
stos
mov
cmp
adc
push
mov
aad
test
xor
jno
cmp
push
push
enter
push
adc
stos
xchg
lret
mov
lahf
pop
or
iret
stc
dec
jecxz
xchg
negb
or
jle
pop
jb
pop
push
cmpsl
mull
test
pop
mulb
pop
negl
shlb
fidivrl
inc
adc
fisttpll
and
mov
fidivs
in
push
setle
gs
cld
pop
xchg
pushl
out
ds
lahf
jg
into
xorb
enter
lods
lcall
test
mov
push
lods
in
cwtl
ss
lret
pushf
sub
fucom
xor
xchg
cmp
test
mov
xchg
dec
cmp
ret
lock
pop
xchg
xor
cli
je
xadd
out
jae
sub
mov
rol
std
push
pushf
jmp
jns
push
jge
add
mov
loope
aaa
jb
je
or
mov
mov
stos
xor
ljmp
pop
and
mov
sbb
add
xchg
lret
subb
push
pop
dec
fmuls
bound
cltd
outsl
popa
daa
imul
rcrl
jge
and
sbb
cli
mov
aaa
std
inc
or
sbb
inc
push
loopne
bound
jbe
or
shll
jne
inc
into
cmp
int3
xor
fsts
xlat
xchg
mov
icebp
xor
add
xchg
hlt
mov
fsub
stos
xchg
scas
add
jne
xor
add
push
sahf
test
pop
and
jb
lahf
inc
mov
pop
inc
mov
jecxz
and
arpl
std
fldcw
add
add
mov
cmpsb
xor
js
push
addl
dec
mov
inc
in
roll
xor
fistpll
test
cmp
lock
xor
f2xm1
outsb
ja
icebp
inc
mov
push
lods
jmp
out
shll
add
add
cltd
les
arpl
xor
into
mov
fisttpl
inc
and
out
push
jp
dec
cltd
aas
stc
dec
xor
dec
mov
mov
mov
jecxz
imul
inc
push
xor
inc
inc
lret
cld
cltd
sbb
xchg
lods
rclb
popa
loopne
xor
sbb
hlt
pop
sbb
imul
stc
fprem
sarl
mov
xor
or
cmp
mov
fdivr
jo
scas
imul
bound
cli
jo
push
push
push
cmpsb
stc
fildll
stos
loope,pt
pushf
adc
lods
mov
sub
mov
adc
adc
insl
leave
pusha
dec
inc
daa
adc
xor
adc
shrl
inc
insl
inc
bound
pop
cli
mov
mov
inc
sub
out
cmp
call
clc
ror
mov
pop
adc
mov
xchg
into
mov
fisubrs
testb
test
mov
sub
inc
xchg
sbb
jl
push
sti
push
stos
sbb
cmp
ja
out
pop
inc
in
je
pop
jmp
push
movsl
jns
setge
mov
shrl
stos
mov
cmpsl
lret
cmp
push
mov
idivl
mov
jp
in
xorl
push
push
sarb
leave
aad
pop
add
and
inc
subb
punpcklbw
pop
cs
ljmp
add
fcomps
ret
mov
and
std
cwtl
lods
filds
repnz
dec
or
stos
adc
sub
and
divl
cmp
push
dec
xchg
fmull
stos
in
out
pop
rclb
adc
cs
js
adcb
pop
pop
inc
in
pop
mov
rorl
push
jmp
out
jg
popf
fistpl
sbb
inc
enter
insb
fcomp
int3
andb
lcall
mov
mov
and
es
in
mov
xchg
push
pop
jmp
decl
pop
in
cmp
push
dec
int
stc
pop
jne
xor
mov
subl
cwtl
inc
add
cmp
adcl
push
lock
shll
sbb
ret
push
adc
in
int3
cmp
stos
rolb
sub
out
mov
inc
and
jg
in
push
inc
push
mov
mov
xchg
or
cmp
sahf
dec
test
out
jno
cmp
mov
bound
xor
push
xor
stc
out
cmp
test
push
mov
pusha
push
test
or
mov
xchg
xchg
inc
ffree
cmpsb
xor
out
gs
and
xor
aaa
sub
jmp
jecxz
adc
repz
fsub
add
loop
and
daa
inc
jo
loopne
clc
clc
fwait
repnz
enter
jbe
jecxz
cld
scas
pop
push
mov
jb
add
xor
psubb
cltd
mov
sbbl
ja
adc
mov
out
cmp
dec
stos
ss
out
inc
jl
pusha
loopne
ss
stos
mov
inc
pop
push
fnstenv
mov
clc
mov
jp
es
dec
sbb
adc
add
scas
pop
sub
fiaddl
out
testb
cmp
scas
cmpsl
push
out
aam
fstps
mov
lds
jecxz
lds
xor
xchg
xchg
in
mov
nop
mov
nop
lods
stos
xor
daa
sub
xchg
out
sub
rcr
xor
nopl
pop
repnz
das
fwait
leave
in
les
lahf
hlt
jl
mov
data16
xchg
push
and
pop
mov
mov
pop
pusha
test
cmp
sub
sub
pusha
dec
mov
iret
std
out
add
fidivrs
arpl
add
and
add
xor
daa
push
stos
xor
mov
xor
inc
fsts
push
cmp
jg
mov
push
sbb
mov
mov
pusha
pop
movsl
je
dec
shlb
sbb
mov
dec
pop
imul
loope
ljmp
fs
pop
xchg
inc
mov
lods
fildl
je
adc
push
dec
inc
xor
cmp
adc
mov
lea
cmp
lods
icebp
add
or
daa
fs
mov
test
xchg
ja,pt
cmp
cltd
dec
pop
jg
test
das
jns
inc
out
jp
orb
xchg
mov
push
imul
adc
jmp
scas
decl
std
jmp
xor
ret
arpl
xor
mov
mov
push
cmpl
or
imul
mov
ss
mov
std
mulb
movsb
mov
cmp
stc
lock
sbb
cld
mov
dec
fimuls
fistl
mov
repz
lds
dec
push
jge
mov
cld
dec
std
inc
add
movsl
jle
jae
rcr
bsr
push
aaa
mov
test
lahf
mov
fisubl
or
iret
sti
test
jns
mov
dec
imul
pop
jl
mov
and
sbb
cmp
subl
int3
pop
sbb
loop
cmp
xor
loopne
test
daa
ds
daa
je
int
cmp
outsb
lds
pushf
push
cltd
enter
or
push
dec
inc
out
imul
jb
push
je
xchg
shrl
jnp
jg
mov
inc
sahf
cmpb
aaa
outsl
dec
shrl
stos
ret
or
out
lods
mov
fcoml
sbb
push
mov
add
cwtl
shrl
std
cmp
adcl
jecxz
inc
xor
test
lret
add
imul
sub
push
inc
inc
es
in
mov
xor
cmp
sarb
xor
lds
mov
push
or
mov
push
push
subl
mov
push
repz
jns
lret
lcall
sahf
pop
psubw
inc
js
cwtl
insl
nopl
sbb
in
cwtl
iret
rcll
testb
frstor
mov
push
sbb
pop
aad
push
xor
dec
imul
sti
ss
cs
add
mov
popa
push
mov
cmp
repz
cltd
add
push
push
dec
xchg
repnz
add
bound
repz
xchg
mov
jbe
sar
iret
cmp
flds
push
int3
cmp
rcll
shlb
cwtl
push
jno
addl
inc
cld
pop
insb
popf
xor
mov
jl
dec
push
jae
dec
adc
fmull
cmpsl
sub
dec
stos
repnz
ds
mov
fdivrs
xor
stos
xor
adc
cld
test
out
mov
and
pop
mov
push
cmp
add
pop
add
adc
cmc
cmc
hlt
stc
cmpb
dec
mov
inc
adc
int3
pop
lret
es
mov
inc
repz
sbb
mov
jbe
dec
and
or
les
psraw
or
divl
lds
sub
sti
or
lock
stc
lcall
mov
push
sahf
sti
mov
fwait
ja
fnsave
movsl
in
jne
scas
test
fucomip
push
mov
xchg
push
fcoms
fwait
jbe
cmp
add
cmp
and
fistps
cmc
xchg
mov
leave
xchg
popf
inc
inc
fdivr
fcomps
pop
adc
inc
sbb
stos
push
cmc
dec
testb
xchg
mov
inc
loope
cmpsl
dec
pusha
xor
cmp
pusha
ret
and
lcall
push
mov
aaa
movsb
jle
jle
or
or
leave
sub
out
pop
push
xor
sar
repz
dec
stos
and
fistl
mov
aas
cmp
stos
add
pop
lahf
lock
sahf
jecxz
div
inc
or
hlt
mov
rcrl
mov
xlat
dec
aam
xor
xchg
sbb
in
xor
add
imulb
sbb
fists
cltd
mov
xor
dec
int3
fisttps
jecxz
jnp
cmp
cmp
inc
cli
pushf
daa
lock
pop
cmpsb
into
or
dec
or
sti
cmpsl
sub
cmpsl
lods
dec
bound
ss
mov
cmp
scas
cmpsl
js
or
sarl
jge
xchg
cmp
add
mov
mov
jo
jge
pop
fildl
andl
adc
es
testl
insl
mov
rcrl
adc
xor
adcl
xor
mov
push
mov
loope
xchg
ja
les
lea
jg
test
clc
out
inc
mov
mov
inc
loope
sub
push
ss
das
sbb
inc
test
insl
xor
push
dec
dec
push
mov
push
pop
and
pop
pop
cwtl
aas
dec
lods
mov
pop
repz
sbb
push
cmp
cmp
jl
sub
nop
scas
fwait
push
aas
add
mov
dec
sbb
aaa
or
ljmp
and
shl
nop
adc
adc
add
adc
outsb
push
lret
fisubrl
mov
enter
dec
inc
jns
stos
sbb
and
push
addb
mov
repz
nop
data16
out
and
lret
jmp
cmp
std
xchg
out
sub
pop
in
jl
sahf
insb
add
push
and
out
call
xchg
mov
lcall
add
fwait
pushf
outsb
dec
scas
cmp
inc
sbb
push
or
sti
mov
mov
or
rcrl
fidivs
add
or
inc
pusha
test
sub
nop
ret
cmp
fs
or
jne
and
sbb
push
insb
pop
in
adcl
add
sub
fnstcw
imulb
and
js
icebp
arpl
inc
cmc
and
add
rorl
sbb
and
adcb
cmpsb
outsb
in
jg
mov
xlat
jns
dec
sub
fnstsw
ret
insb
in
popl
adc
lds
mov
rcrl
xor
sub
jns
jnp
mov
add
call
push
in
outsl
test
shll
push
in
imul
adc
sub
jp
lret
pop
out
push
fsubrl
mov
shr
add
jecxz
jne
cmp
hlt
shrl
mov
push
imul
push
sbb
hlt
dec
push
pushf
rorb
dec
pop
sub
loopne
cld
js,pt
pop
int3
icebp
and
dec
cltd
addb
stc
xor
out
and
adc
inc
std
cmpsb
cmc
mov
lds
cld
bound
fsubrl
inc
fisubrs
jl
dec
shrb
and
push
cld
xor
pop
xor
in
les
je
mov
ja
xlat
xor
in
test
xchg
pusha
sub
int3
fildl
insb
mov
sub
or
lock
adc
inc
or
sbb
aad
out
arpl
ds
push
xor
aam
dec
add
mov
xor
rcrb
dec
lret
inc
mov
out
jns
xor
ror
inc
mov
lahf
out
stc
inc
aas
subl
sbb
je
hlt
test
mov
test
or
les
stos
push
arpl
clc
pop
ret
repnz
sub
cmp
sub
cli
mov
push
outsl
pop
in
outsb
xor
pop
stos
cmp
sub
dec
repz
fstpl
mov
dec
mov
aam
pushf
cmpsb
out
sub
pop
cmp
and
mov
and
not
jmp
or
mov
jl
fadds
fidivrl
sub
daa
or
cli
insl
mov
sbb
lea
push
out
fimull
fistl
pop
lds
ljmp
sub
mov
cmp
push
test
rcrb
scas
add
movsb
ja
rorb
insl
test
mov
mov
push
xlat
cmpsb
add
cmp
mov
aad
js
std
stos
xor
in
movsl
sub
xchg
xchg
fiadds
lds
aaa
gs
pusha
stc
scas
mov
in
aas
inc
notb
repnz
xchg
hlt
jne
pop
xor
jmp
inc
push
inc
add
or
loope
inc
dec
loope
aad
lods
mov
jno
lret
or
mov
pop
dec
pop
cwtl
jno
es
sarb
mov
inc
outsl
sti
mov
mov
adc
clc
arpl
mov
inc
leave
jne
and
sub
mov
pop
cmpsb
fldcw
fwait
in
cld
adc
cwtl
mov
xchg
pop
fwait
push
add
arpl
divl
inc
cmp
pushf
mov
mov
xlat
cmp
jmp
pop
push
push
adc
out
mov
xor
dec
push
pop
in
cmp
popa
fs
push
and
pop
jmp
dec
adc
dec
pop
push
mov
jp
out
mov
add
add
mov
inc
imul
pop
icebp
aas
aam
pusha
addr16
push
mov
mov
sbb
in
mov
hlt
xchg
sbb
outsl
and
mov
fdivrl
fldl2t
push
scas
mov
mov
icebp
mov
popa
adc
inc
xorl
add
xchg
add
movsl
int
xchg
sbb
xor
xchg
cmp
addr16
dec
push
mov
rclb
lds
sbb
aad
fidivl
clc
sub
sub
pop
and
es
pop
out
cmpsb
aas
dec
ss
das
sub
popa
inc
fsubl
pop
pop
mov
sbb
repnz
push
push
ficoms
add
repz
cli
mov
push
inc
sarb
hlt
cltd
daa
and
sub
lock
insb
pop
jb
cli
push
aad
or
fcmovb
pop
and
pop
xor
insb
out
lea
icebp
nop
sbb
lahf
stos
push
push
stc
test
or
shlb
stos
incb
push
je
in
push
push
lret
xchg
stos
aas
fs
rorb
in
jmp
and
lea
push
xchg
xchg
cs
test
popa
inc
sub
clc
outsb
les
pop
xlat
mov
sahf
sub
and
mov
aas
aas
or
inc
repz
mov
mov
insl
outsb
jno
repz
pushf
nop
data16
ds
popf
add
cltd
jl
outsb
xchg
xchg
sbb
lods
mov
or
xlat
xchg
mov
aam
push
jo
daa
and
push
jne
jno
in
dec
ljmp
rorl
iret
mov
push
movsl
dec
scas
xor
lods
pop
nop
test
xor
mov
cmp
and
out
push
add
lods
push
int3
fwait
add
push
jp
xor
daa
cmovp
or
decl
fbld
xchg
pop
dec
xor
or
jae
int
push
sub
dec
push
push
add
es
cmp
shlb
ss
shll
cmp
dec
rcr
popf
sarb
inc
inc
pusha
jns
into
jo
add
daa
ficomps
cli
adc
mov
push
lea
mov
or
or
jl
icebp
in
fdivl
loope
pop
mov
sahf
je
imull
fs
bound
xchg
jne
or
repz
push
scas
cmp
orps
cltd
int
nop
ja
jg
push
out
mov
out
imulb
cmp
push
xor
cmp
arpl
mov
rclb
outsl
stc
xchg
movsb
dec
sbb
sub
add
clc
js
pop
in
sti
adc
lods
cltd
xchg
cmpsl
inc
xchg
adc
icebp
sbb
jecxz
aaa
cmc
es
test
add
jo
jbe
movsb
movsl
sbb
mov
cmc
pusha
lods
xchg
ss
mov
adc
dec
fstpl
cmp
mov
xor
imul
popf
mov
or
dec
out
xchg
jne
push
in
or
mov
jne
arpl
xor
or
inc
push
mov
addb
xchg
jae
and
imul
jp
inc
add
xchg
dec
fmulp
fsubs
adc
imul
fistps
pushf
inc
insl
insl
test
ficomps
lds
push
adc
scas
jbe
inc
negb
sbb
shrb
push
aam
mov
fdivrl
aaa
and
imul
in
sub
or
arpl
mov
adc
xor
test
push
cmp
std
inc
imul
fldenv
aas
popf
ds
or
clc
roll
mov
jbe
icebp
bound
xchg
testl
fcomps
xchg
ljmp
push
dec
dec
lods
add
ja
in
subb
test
push
test
push
ljmp
mov
int
xlat
mov
js
jo
pushf
pushf
outsl
fnstsw
lds
outsl
or
pop
xchg
jmp
pop
xor
int
xchg
and
sti
imul
mov
cld
gs
mov
mov
popa
popl
sub
pop
out
daa
mov
sarb
adc
inc
dec
ljmp
or
sub
fisttpl
outsb
int
dec
int
jno
popf
add
mov
push
stc
bound
adcl
movsl
das
xor
lds
leave
les
cmp
jb
cmp
scas
xor
rcr
add
pop
pusha
icebp
adc
cwtl
mov
xchg
and
cmp
subl
gs
or
xor
cmc
cmp
out
inc
aad
mov
mov
push
stos
cmpsl
jg
adcb
movsb
jbe
test
dec
jmp
movsl
fisubrs
mov
jp
xchg
js
call
mov
fs
fbld
xchg
or
test
and
fcomi
movsb
fists
and
insb
mov
jo
test
fidivl
pop
inc
mov
adc
add
scas
outsl
loopne
bound
mov
adc
mov
xchg
inc
mov
rcrl
andl
rorb
mov
inc
mov
sbb
cmp
sahf
or
mov
int
add
sub
out
mov
mov
je
cwtl
dec
cmpsb
jmp
les
or
ja
xor
jbe
and
adcl
fwait
sbb
daa
push
cmp
frstor
xchg
mov
insl
jecxz
sbb
pop
jne
jle
xor
aas
lea
xor
cltd
daa
sub
rcr
pop
pop
inc
in
lret
aaa
sbb
or
fsubrs
add
fmull
xchg
sub
add
adc
cmc
sbb
xor
in
jg
sbb
mov
jmp
xor
add
jo
mov
mov
push
or
pop
in
mov
add
mov
mov
mov
shlb
and
jae
and
fists
push
jecxz
stc
and
fs
repnz
xor
xchg
insb
mov
xchg
inc
push
xchg
push
dec
adc
sub
ljmp
push
fcmovnbe
aad
addb
hlt
cmp
sub
push
push
xchg
sub
adc
test
xor
imul
call
fcomi
daa
dec
add
and
lods
adc
mov
sbb
xchg
fstpt
mov
dec
mov
cmp
in
cmp
fisubrs
sbb
jle
loope
scas
negb
sub
sti
and
bound
push
ret
push
jnp
cmp
xchg
dec
mov
sti
pusha
or
add
imul
and
mov
adc
lds
xchg
das
arpl
xchg
pop
lock
pop
data16
sarl
adc
sub
jbe
iret
jno
mov
adc
and
scas
std
or
dec
mov
fsts
in
addr16
movsl
xchg
fmul
cmp
mov
cmc
stc
mov
jae
jecxz
lock
rcr
je
dec
sbb
or
inc
pop
push
shrb
cltd
into
sbb
les
cld
arpl
mov
outsb
out
insl
outsb
add
adc
rorl
inc
jo
or
jno
into
and
cwtl
shlb
mov
push
xchg
adc
add
sbb
sbb
cmp
pop
popf
mov
mov
imul
cmp
pushf
cmpsb
push
xchg
imul
dec
fnstcw
mov
loop
pop
pop
shll
sbb
popf
gs
pop
adc
packssdw
outsb
sbb
jge
mov
fiaddl
bound
xchg
adc
shl
rcrb
lds
call
inc
ja
and
cmpsb
in
mov
call
das
push
jno
sbb
sbb
adc
shlb
push
dec
test
rcrl
in
lahf
sub
cld
or
test
inc
fsubl
sbb
push
mov
aaa
sub
ljmp
mov
std
lahf
dec
pop
adc
je
or
out
lret
xchg
push
pop
shll
xchg
ds
out
sbb
jg
fwait
adc
movsl
fwait
nop
mov
or
inc
pushw
in
sahf
lds
cmp
loop
repz
adc
out
outsl
popf
jle
cmp
in
ja
sbb
dec
out
aaa
mov
mov
push
fwait
xor
lret
movsb
out
aam
sbb
leave
and
mull
test
mov
adc
sub
in
mov
dec
loopne
dec
stc
inc
adc
xor
adc
in
xchg
popa
push
popf
dec
aam
dec
das
ja
mov
into
sti
and
push
addr16
jle
outsw
jo
mov
xor
jge
adc
mov
int
sbb
fidivrl
cmpsb
add
fwait
icebp
cmp
hlt
pop
gs
add
jae
cmp
adc
push
cmc
fnstsw
push
loop
and
pop
sub
notb
dec
idivl
aad
cli
arpl
popa
scas
or
repz
cmp
loop
fadds
icebp
movsb
icebp
mov
pop
mov
bound
mov
sbb
js
lods
mov
test
pop
ljmp
adc
sti
sbb
jg
jnp
or
pop
ds
pop
xor
sbb
mov
inc
iret
jmp
fnstenv
mov
jns
xchg
mov
mov
fnstcw
lds
push
adc
mov
out
mov
movsl
js
shrb
mov
popa
or
je
jge
and
lea
mov
add
sub
pop
dec
aam
jl
nop
pusha
mov
dec
xor
pop
lcall
out
or
jb
mov
punpckhdq
repnz
cld
sti
ret
ja
adc
stc
mov
push
andl
lock
xor
sbb
mov
and
adc
aad
aaa
push
sub
outsb
xchg
lock
or
mov
add
mov
cmc
jno
mov
mov
pop
addr16
mov
ja
jge
jno
add
jp
loopne
cmpsb
adcb
movsl
incl
test
ret
out
cmp
pop
inc
pop
mov
mov
test
xlat
and
dec
and
mov
mov
cld
add
xor
sbb
jnp
ret
push
push
cmpb
jnp
cmc
cmc
pop
jmp
test
hlt
pop
sub
or
pop
in
pushf
sub
sub
gs
pop
cmpb
movsl
call
dec
pop
push
sub
adcl
sub
insl
lahf
xchg
in
jl
les
popf
pushf
addr16
js
scas
xchg
xchg
mov
sti
mov
dec
xchg
adc
add
notb
xchg
mov
push
pop
or
fs
jg
enter
loopne
push
mov
dec
fstpt
sbb
loope
sti
cmp
lock
aad
imul
fldl
pusha
adc
dec
mov
ljmp
xor
xchg
movsb
mov
jmp
loope
bound
shll
add
pop
shl
movsb
aas
loopne
outsl
les
mov
in
test
jge
mov
shll
mov
out
gs
mov
popa
mov
adc
mov
test
ja
push
fstl
stc
xor
jo
nop
in
aad
loopne
adc
pusha
xor
sti
mov
push
inc
aad
or
sbb
aas
xchg
sbb
addr16
mov
mov
jbe
dec
dec
mov
cmp
imul
fimuls
cs
daa
xchg
jmp
icebp
jmp
add
jge
dec
in
imul
xchg
adc
shll
fisubs
cmpsl
dec
cli
loope
enter
jge
in
gs
jne
stos
cmp
jb
test
pop
cmp
jge
jmp
shrl
cmpsb
push
clc
cmp
pop
adc
repz
adc
mov
mov
sub
mov
sbb
mov
ljmp
gs
xor
jp
mov
and
cmp
xchg
push
and
addl
mov
cmp
lcall
shr
cmp
mov
inc
mov
sbb
pop
or
pop
mov
lds
lea
bound
popa
jecxz
dec
jp
scas
mov
xor
cmp
shll
inc
cmc
pop
or
dec
sbb
lcall
pop
call
ror
nop
pop
pop
adc
push
mov
pushf
xchg
mov
xchg
imul
out
dec
push
testl
add
popl
in
jno
lds
pop
mov
addr16
push
adc
in
mov
pinsrw
pushf
push
addr16
pop
push
fnstenv
in
xchg
cmp
mov
cmp
pop
inc
int3
clc
mov
lret
mov
faddl
scas
cmp
lds
pop
mov
pop
sub
lret
cmpl
mov
add
notb
into
push
pop
rorl
jno
aad
loope
fidivs
cmp
sub
jge
repnz
mov
stos
stos
mov
addb
jne
dec
push
sub
push
jbe
jge,pt
pop
inc
popa
std
insl
dec
lcall
cwtl
inc
push
inc
push
or
addl
je
or
adc
dec
mov
fidivrs
jmp
sti
lea
sbb
int3
push
test
pop
fstpt
aas
xchg
mov
insb
ljmp
mov
shll
mov
in
mov
mulb
orb
outsb
insb
jno
ficomps
or
sbb
and
add
mov
inc
fistl
es
scas
sbb
jns
push
popa
sbb
push
sarb
cmpsb
mov
mov
insb
mov
test
les
xor
xchg
jb
push
jg
fwait
mov
sti
jp
int3
std
mov
add
cmc
jnp
jne
mov
movsl
lahf
inc
shll
fs
bound
push
xor
decl
ja
push
test
rcrb
icebp
or
mov
pop
mov
shl
xor
aam
fnsave
std
bound
or
out
into
or
repnz
sbb
cli
add
loope
lods
out
jmp
test
pop
rcll
pop
fstpt
jmp
mov
xchg
xchg
mov
push
iret
imul
ret
cmpsl
mov
xchg
lds
add
arpl
movl
push
pop
mov
popa
jno
dec
ja
lea
aas
and
outsl
xor
fsubrs
and
cld
mov
in
mov
aas
pop
imul
das
frstor
clc
mov
sub
mov
les
inc
loop
add
xor
jbe
fldt
mov
lods
les
mov
pop
jmp
lods
mov
cs
adc
sbb
pusha
mov
jge
neg
ret
andl
cwtl
dec
mov
inc
lods
jp
add
push
inc
dec
push
pop
mov
fdivs
adc
icebp
leave
push
adc
cs
mov
inc
xchg
in
dec
cmpsb
add
into
out
test
cmp
add
pop
push
int3
push
pop
mov
or
xchg
fxch
cmpsb
mov
cmp
xchg
cs
push
push
movsl
lods
cli
rcrb
xor
arpl
mov
neg
xor
inc
mov
daa
jno
rclb
inc
xchg
scas
out
inc
cmpsb
push
add
xchg
inc
insb
repz
test
xchg
repz
pop
jae
fdivrl
lock
lds
je
out
sub
icebp
mov
sarl
les
dec
mov
cmp
push
pop
nop
dec
mov
mov
jb
sbb
mov
pop
les
pop
and
in
mov
add
fdivs
pop
stc
inc
xchg
nop
push
and
or
or
pusha
popa
adc
popa
sarb
mov
push
test
in
push
out
in
ja
mov
notb
cs
mov
and
jbe
xchg
data16
mov
loop
loopne
negl
pop
insl
out
mulb
mov
and
imul
lock
addb
sub
dec
adc
out
jmp
push
in
fildl
loop
inc
inc
sbbl
jo
pop
lods
and
mov
mov
jb
pop
xchg
xor
ja
cmp
andb
and
int
dec
pusha
sub
mov
icebp
sahf
cli
data16
les
pop
movsb
ror
shr
mov
or
out
add
stos
adc
outsb
sbb
jmp
sar
fs
hlt
sub
lock
out
jmp
lods
push
mov
pop
and
pushl
push
push
loop
xchg
cltd
pusha
ja
test
out
sub
mov
dec
arpl
ret
adc
mov
xchg
pop
mov
inc
fsts
push
fstps
inc
mov
cltd
popa
pop
cltd
int
pop
jecxz
cli
jg
mov
xchg
xchg
cwtl
pop
cld
jmp
test
in
faddl
jmp
outsl
push
xchg
aaa
fucomp
mov
sbb
or
jle
adcb
pop
adc
xchg
push
sub
xchg
mov
shrl
stos
mov
mov
push
addr16
popa
or
rorl
pop
clc
insb
jmp
mov
outsl
jns
pop
sbb
das
fs
adc
out
jae
mov
pop
jge
rcll
xor
lahf
adc
cli
shld
mov
aaa
push
sub
mov
gs
push
and
mov
push
ljmp
sahf
fcom
lret
mov
iret
sbb
push
lods
jb
add
add
jns
xchg
cmp
rorl
addr16
jp
add
inc
sahf
loop
lods
add
pop
aam
sbb
adc
mov
arpl
mov
or
outsl
jle
out
out
sbb
mov
sbb
ljmp
dec
mov
dec
loopne
push
xor
aad
mov
imul
outsb
and
loope
and
les
or
push
cwtl
sbb
adc
or
lahf
addl
mov
jns
pop
lcall
cmp
xor
and
arpl
adc
and
cmp
ss
jae
fcmovu
sub
jmp
inc
roll
movsl
out
imul
cli
jns
nop
sub
mov
add
and
pop
push
pop
inc
dec
lock
push
and
ret
insl
loope
sub
imul
or
push
xor
test
dec
sub
fnstsw
mov
or
aad
cltd
int
js
push
adcb
loop
hlt
pushf
push
push
hlt
mov
sbb
and
or
stos
inc
and
js
xor
xorl
and
je
jbe
faddl
mov
dec
cmp
xchg
fdivl
mov
xor
adc
rcll
lods
aas
roll
insb
mov
scas
lods
cli
cmp
fildl
or
repnz
rcll
xchg
push
xchg
cmp
hlt
jb
fistps
sub
dec
mov
inc
test
mov
aad
lods
into
mov
inc
sub
add
push
cmc
xchg
es
xchg
mov
icebp
adc
xchg
mov
or
inc
mov
outsb
lds
mov
xchg
xchg
sahf
xchg
and
cs
pop
nop
les
jno
sbbb
lret
push
xchg
or
add
xchg
stos
sahf
sbb
shr
inc
mov
rorb
das
jnp
outsb
sti
movsl
xchg
adc
es
cwtl
loop
imul
shlb
mov
ret
stos
rorb
mov
pop
add
and
dec
aaa
cmpsb
insl
mov
movsb
jnp
sub
clc
cltd
pusha
xor
push
icebp
sbbb
adc
mov
cmp
inc
mov
addb
add
ss
stos
test
cld
std
push
mov
imul
jp
ds
int3
shrl
inc
addb
mov
cltd
sarb
stc
pop
orb
lock
cmp
cs
cmpsl
sub
jns
out
mov
xchg
xchg
test
sbb
mov
and
xchg
mov
pop
neg
clc
or
in
lods
rcr
jmp
out
sub
aas
mov
mov
aaa
rep
ficompl
xor
insb
cmp
lret
xchg
push
gs
iret
pop
dec
sub
ja
fwait
xchg
sahf
push
daa
add
fiadds
mov
inc
push
push
mov
inc
mov
push
clc
arpl
add
mov
loop
scas
out
popa
icebp
out
sub
mov
hlt
add
xor
mov
movsl
dec
dec
pop
pop
push
cmp
out
ret
xchg
mov
pusha
push
loopne
je
push
pop
popf
les
iret
mov
in
hlt
pop
scas
pop
shlb
or
ljmp
mov
adc
and
xchg
out
jle
out
mov
insl
aaa
xor
pusha
dec
adc
mov
fsubs
popf
xchg
ffree
dec
sahf
testl
mov
stc
jecxz
ss
sub
mov
dec
or
sub
into
jecxz
jno
cmpl
out
push
rcl
in
lcall
aaa
lretw
lret
ret
push
xlat
or
in
push
or
pop
cmp
fsubl
pop
fisttpl
scas
adc
xor
xchg
fxch
jge
ficoml
lret
push
iret
push
and
push
mov
pop
in
sahf
push
and
ficomps
xor
fdivl
cmp
push
xor
push
jbe
call
mul
jg
and
movsb
bound
sbb
mov
filds
movsb
inc
jae
ljmp
loopne
sbb
xchg
xchg
daa
aam
lcall
add
cmp
aad
out
jle
mov
das
xchg
pop
xchg
lods
loopne
pop
cs
mov
or
and
xchg
sbb
add
xor
dec
push
mov
es
addr16
push
adc
pop
cmc
adc
and
xchg
aad
xchg
loop
mov
adcb
ja
mov
sti
push
jecxz
iret
dec
sub
pushf
sub
xor
andb
inc
cmp
enter
or
pusha
lret
out
and
mov
add
sbb
xchg
mov
icebp
xor
push
cli
jp
mov
int
loope
cmp
add
add
repnz
xchg
inc
lcall
and
xor
mov
clc
cmp
pop
cmp
addr16
ds
inc
cltd
and
notb
xor
repz
mov
mov
out
xor
jge
xchg
or
sub
shll
out
cmpb
dec
testl
pop
cli
mov
lds
das
insb
ljmp
pop
or
in
jp
pop
cmp
int
clc
push
in
shr
pop
xchg
cmp
add
sbb
das
out
cmp
sti
mov
mov
shr
dec
xchg
lods
or
cwtl
ret
iret
dec
or
aaa
call
and
or
mov
or
adc
rcl
loopne
lret
cld
sub
and
imul
stc
std
cmp
sbb
movsb
mov
loopne
jne
ret
xchg
js
dec
clc
idivb
or
loopne
js
jecxz
movsl
mov
subl
mull
xor
cltd
sub
or
sub
jne
add
sahf
xor
mov
cmp
int
mov
and
cmp
loope
xor
fstl
dec
popa
inc
shl
fdivs
push
daa
xchg
repnz
mov
mov
mov
imul
xchg
xchg
push
dec
adc
inc
or
int
fistpl
test
out
jmp
xchg
stos
popf
test
out
ss
jg
mov
mov
mov
mov
adc
cmpsb
jnp
outsl
test
pop
mov
xlat
ficomps
arpl
or
mov
fistpll
mov
outsb
int
inc
sub
pop
mov
and
xchg
mov
lret
mov
inc
shlb
mov
jle
scas
in
daa
outsb
inc
mov
pushf
lods
stos
ds
xchg
mov
shrl
daa
cmpsb
jae
cs
inc
push
xchg
bound
sbb
and
mov
jmp
xchg
dec
sub
arpl
push
je
pop
mov
xor
cmpsl
xchg
xor
push
sahf
leave
fnstenv
rol
sub
mov
mov
jne
pop
sub
rolb
dec
jns
xor
mov
stc
lret
sub
incl
xor
pop
push
mov
in
pop
pop
inc
cmp
int
call
lret
cmc
dec
jmp
pushf
out
adc
lock
fistpll
cmp
hlt
mov
mov
lret
jae
xchg
adc
mov
jnp
mov
mov
xor
jg
movl
sbb
jo
popf
dec
sbb
aad
dec
jle
iret
dec
data16
pop
mov
mov
arpl
out
pop
jo
ds
loope
push
popa
shlb
sub
pushf
jge
sbb
ss
adc
std
aad
and
scas
jns
dec
or
decl
fwait
pop
dec
scas
adcb
cmp
dec
and
push
mov
test
mov
pop
fistpl
cmpsl
js
mov
inc
add
push
aam
cmc
xor
dec
dec
and
scas
cmc
lcall
and
mov
xlat
jg
ss
pop
outsl
outsb
sbb
xchg
add
cmpl
addr16
jne
and
lret
mov
jle
add
xchg
std
sbb
push
ljmp
sbb
push
push
sub
push
sbb
popa
or
push
dec
jnp
push
cmpsb
inc
and
rolb
push
ja
jecxz
pop
imul
jnp
mov
test
test
adc
xchg
sub
pop
push
and
inc
mov
lds
cmc
inc
loopne
adc
test
mov
sub
adc
mov
mov
cmpsl
pop
sar
cmp
setne
notb
dec
push
loop
lret
mov
push
pusha
inc
pop
mov
sbb
repz
out
inc
movsl
mov
pusha
xchg
cmpl
shl
jb
shr
inc
aam
add
push
mov
jbe
icebp
pushf
adc
das
out
adc
mov
dec
shll
jl
sbbl
mov
clc
push
mov
cmp
xor
test
orl
emms
jecxz
loop
adc
jne
aam
popa
pusha
sahf
dec
ss
jbe
test
fisttpll
push
in
fs
adc
ret
das
jmp
int
or
cmpsb
mov
cmp
inc
movsb
mov
pushf
pop
jle
xor
dec
std
mov
out
or
pusha
repnz
push
or
stc
sub
into
sub
sbb
cs
imul
jns
or
shrl
cmpsl
movb
mov
and
xor
pop
jnp
jp
inc
jnp
add
mov
aad
js
js
aam
jp
in
mov
negb
xlat
movsb
in
or
aad
dec
mov
fcoml
jmp
sahf
pop
inc
mov
cld
mov
fimuls
jmp
jle
add
ss
scas
popa
add
xor
mov
test
and
sahf
pop
daa
daa
cmc
jle
push
jmp
cmp
inc
sub
sar
inc
movsl
and
xchg
mov
dec
lahf
shll
xor
call
xchg
jb
bound
sub
or
vpsrad
stc
test
lea
test
arpl
test
and
or
inc
jecxz
arpl
xchg
sbb
jns
xor
jno
mov
adc
loop
and
or
mov
and
mov
sub
inc
cmpsb
scas
or
shrb
add
xchg
xacquire
mov
pop
jmp
or
outsb
pop
mov
mov
push
jecxz
cwtl
adc
cld
add
loope
sub
xchg
xchg
fisubs
repnz
fistpll
in
and
rolb
add
mov
lcall
jle
dec
mov
int
jb
and
nop
roll
jmp
into
std
xchg
jbe
xchg
xchg
rcll
ret
adc
dec
adc
hlt
push
mov
or
jb
dec
add
jns
sbb
lds
mov
jno
xor
pop
fadd
iret
es
gs
cmp
pop
adc
inc
bound
inc
jo
in
and
fdivp
jns
sub
push
and
outsb
jb
jl
sarb
and
dec
mov
xchg
cmp
aaa
sbb
mov
xlat
ja
inc
jno
sti
rclb
cmp
sbb
mov
inc
push
and
add
sbb
ds
pop
mov
ret
xchg
jmp
ds
lret
xchg
or
loope
shlb
and
aad
sbb
jp
scas
xchg
jns
lods
sub
lods
pop
sti
adc
ret
push
scas
mov
xchg
out
jp
pop
gs
adcl
stc
and
pushf
out
mov
sub
mov
mov
mov
data16
cmp
cmc
mov
inc
sbb
shlb
fnsave
out
test
loope
repz
pop
mov
jp
xor
mov
push
mov
jle
dec
cmpsb
dec
and
mov
push
cmpsb
and
xchg
jle
or
sti
dec
cmp
stc
jmp
mov
push
popa
jle
into
fmul
test
pop
cltd
fbstp
shrb
jne
inc
jnp
es
push
mov
jne
mov
incl
inc
push
inc
aaa
iret
jno
cmp
mov
mov
enter
ja
xor
push
sbb
cmp
dec
imul
lret
push
data16
mov
test
lcall
pop
inc
out
in
enter
inc
dec
mov
add
jecxz
xchg
daa
xor
iret
sub
or
jae
cli
jbe
lcall
xchg
inc
xor
in
mov
xor
cmpsl
mov
out
out
sub
stos
xchg
xor
and
int3
jle
add
pop
push
mov
jle
sbb
stos
das
call
fs
rcrl
and
pop
mov
dec
xchg
int
inc
rclb
imul
mov
adc
dec
mov
out
jl
cld
jmp
mov
ja
jecxz
dec
or
mov
in
xor
out
into
cld
xor
fisttps
xor
xchg
add
test
mov
test
sbb
lret
push
leave
jb
xor
cmp
ja,pt
in
sbb
adcb
jl
stos
cmpsb
xchg
popa
test
jecxz
xor
push
cli
mov
or
jne
mov
ja
mov
decl
xor
sti
push
loop
inc
push
pop
and
mov
cmp
roll
dec
mov
out
daa
sahf
aam
jo
enter
pop
add
ficoml
mov
cmp
lret
test
lret
cltd
inc
xchg
cmpb
sub
outsb
pop
jbe
mov
xchg
in
cmp
jle
mov
adc
bnd
faddl
mov
cwtl
mov
push
add
shlb
into
sub
clc
inc
add
and
pop
lcall
push
pop
fists
add
jg
lcall
or
daa
pop
cli
push
divl
insb
and
add
mov
mov
cmp
adc
inc
push
xor
adcb
addb
stos
inc
dec
clc
inc
inc
pop
push
push
pop
fdivrl
in
int3
lret
cld
adc
out
mov
jl
cmpsl
cmpsl
clc
dec
pop
lds
imul
cmp
addr16
je
dec
int3
rorl
pushf
xchg
sub
out
push
cwtl
test
inc
es
ljmp
arpl
das
jo
mov
mov
xchg
stos
jecxz
mov
stc
mov
pop
ss
hlt
addb
xchg
adc
cli
mov
jno
iret
shrl
jle
jb
mov
cwtl
pusha
xchg
adc
pop
cmp
xchg
jb
pop
push
xor
ret
xchg
scas
mov
pushl
push
mov
jl
repnz
fidivrl
lret
movsb
hlt
rcl
dec
push
lahf
sub
div
add
jg
lock
or
shll
loopne
mov
lea
mov
xchg
mov
push
mov
mov
lret
inc
inc
mov
dec
xor
mov
lcall
lret
jb
push
insb
or
jge
lea
xor
sub
cmpsl
cmp
adc
xlat
imul
add
test
mov
sub
pop
sahf
stos
ds
repz
mov
mov
in
ljmp
pushf
idiv
xchg
outsb
cmpsl
mov
cmpsb
jbe
call
or
pop
addr16
jmp
cli
or
in
add
cmc
cmp
cltd
daa
int3
fdivr
mov
mov
shl
pop
adcb
decb
out
fisubs
shlb
aaa
call
cmpsb
inc
gs
add
movsl
outsb
dec
stos
mov
rolb
ss
pop
cmpb
sbb
sbb
pop
xchg
xchg
in
jle
jle
xor
dec
inc
in
cmp
adc
imul
insb
push
daa
ja
std
sbb
sbb
or
pop
jp
mov
push
pop
nop
add
or
jmp
test
add
fildl
ss
mov
cmp
sub
stos
jg
pop
mov
mov
bound
sub
add
ficomps
cmp
lcall
shrb
push
imul
cmc
jp
jno
test
test
and
test
cs
cmp
es
dec
inc
ret
pusha
cmp
sahf
jmp
dec
call
mov
xchg
out
cmp
mov
ds
jp
xchg
dec
mov
stos
adcb
pop
mov
or
scas
fldt
les
add
repz
in
mov
add
pop
notb
jae
addl
imul
test
xchg
sbb
orb
mov
lock
lea
mov
push
arpl
cli
insl
and
lret
xchg
sub
stos
sub
sub
mov
fistps
mov
xlat
xorl
xchg
mov
das
dec
cmp
pusha
ret
fcmovnb
inc
xor
jae
mov
cmp
aas
movsb
or
lret
push
es
push
fstps
gs
imul
and
adc
jno
int
insb
cmp
mov
mov
sahf
mov
cs
cld
dec
mov
ret
enter
sbb
pop
dec
jge
mov
lcall
arpl
lock
addr16
stos
jecxz
jecxz
cmp
movsb
or
sub
test
daa
cpuid
or
out
popa
cmp
inc
jecxz
adc
in
call
gs
jmp
bnd
xlat
in
jno
adc
mov
bound
pop
or
decl
std
rorb
daa
clc
xor
jp
pushl
stos
mov
ss
fildll
shlb
bound
mov
adc
mov
add
xor
bound
jl
lret
stos
inc
clc
clc
push
jmp
xchg
lods
out
xor
insb
adc
xchg
leave
sub
notl
sahf
mov
mov
ds
add
pusha
popf
pop
ficoml
out
jno
mov
sub
scas
xchg
ds
xor
push
in
or
test
cmp
and
imull
mov
xchg
fcoms
xchg
jo
xor
push
clc
jmp
decb
inc
sbb
icebp
ja
dec
int
sbb
jnp
dec
mov
sbb
push
pop
and
ret
lcall
xor
rol
int3
ret
inc
and
mov
xchg
cmc
clc
add
ja
ss
out
inc
mov
pop
and
popf
es
fnsave
adc
test
popa
int3
out
inc
fsts
bound
shrl
stos
into
pop
das
daa
ljmp
pop
cmpb
jo
test
dec
popf
popa
and
and
adc
push
lds
jle
dec
inc
addb
jp
xchg
push
pushl
lock
mov
rcrb
imul
xchg
das
in
push
lock
mov
call
repz
mov
aas
mov
std
inc
xchg
arpl
push
in
or
add
adc
cmp
add
mov
insb
mov
inc
jne
in
imul
add
sbb
or
ljmp
mulb
mov
daa
sbb
and
jbe
ljmp
pop
fnstenv
mov
cltd
or
mov
pop
lcall
loope
adc
mov
pop
js
into
xchg
inc
andl
pop
cmp
fs
or
pop
inc
adc
pop
inc
jg
and
out
hlt
xchg
push
adc
les
jb
inc
and
xlat
push
rorl
rcll
psubsb
mov
add
push
int3
mov
push
mov
pop
xor
shll
push
cwtl
adc
aaa
adc
adc
out
xchg
mov
mov
popf
sbb
adcb
int
ljmp
push
mov
cltd
fs
cltd
xchg
sub
jg
jmp
cltd
jg
xor
lods
xchg
mov
aad
xchg
lcall
pop
xor
in
or
movlps
sbb
jne
dec
jecxz
xor
inc
insl
addr16
dec
scas
cld
and
xor
add
ret
adc
sbb
xchg
iret
popf
jg
daa
std
inc
cmpsb
push
xchg
xchg
sub
fbld
dec
or
xchg
lret
scas
int3
bound
inc
xor
fcmovb
inc
mov
clc
add
sub
stos
push
test
pop
test
into
loopew
loope
pop
incl
push
shr
jmp
and
in
sub
adcl
jae
push
in
lea
xchg
adc
negb
jae
or
or
js
or
jg
sbbb
add
in
js
lods
loopne
mov
mov
sbb
iret
movsl
stos
out
push
cltd
out
jge
pop
inc
popf
insb
or
jae
mov
adc
push
rcll
sbb
aad
pop
xor
dec
dec
std
cmp
xchg
pop
insb
cltd
out
test
int3
test
jns
in
imul
popl
mov
hlt
lret
xlat
lcall
cmpsb
lock
fwait
ja
lahf
repnz
mov
xor
ja
dec
add
rorl
out
xlat
push
call
cmp
adc
loopne
je
daa
xor
or
and
cli
in
clc
xchg
rcrb
xor
mov
mov
in
fdivs
and
jno
call
lahf
addr16
clc
mov
ss
push
xchg
aad
jae
xchg
cmpl
repz
aas
xlat
outsl
pop
inc
push
bound
add
cmp
push
or
pop
mov
xor
inc
dec
push
sti
lods
or
cmp
cmp
ret
inc
adc
cmp
jge
mov
ljmp
dec
pushf
iret
dec
adc
jg
jb
inc
xlat
outsl
imul
mov
mov
fdivl
orl
ja
dec
scas
dec
repz
mov
fmuls
dec
adc
in
in
push
ficomps
push
adc
out
inc
or
pop
cmpsl
div
repz
out
aaa
dec
lahf
xchg
call
push
xchg
lea
iret
pop
adc
cmpsl
fidivs
popa
addr16
pop
pop
aam
push
loop
pop
mov
push
xor
pop
and
or
push
pushf
xchg
js
arpl
fisubrl
and
push
iret
into
ret
inc
push
jg
sarb
bound
add
mov
repz
pop
loope
sbb
hlt
fs
xchg
mov
mov
lds
xor
cmp
dec
xchg
ss
adc
jmp
xchg
mov
jmp
push
testl
andl
movsl
sub
out
loope
and
cmp
fnstenv
inc
cmp
icebp
mov
les
lret
cmp
add
push
icebp
push
add
mov
fsub
test
lcall
push
enter
or
sahf
sbbl
daa
or
pop
mov
jmp
sahf
repnz
stos
and
cmp
jbe
push
test
outsl
sub
inc
fildll
sub
je
mov
outsb
adcb
aad
ret
mov
push
jno
addr16
sti
pushf
xor
je
bound
add
xchg
icebp
fdivs
or
sar
into
into
cmc
les
call
adc
popa
ljmp
cmp
daa
push
cmpsb
xchg
cmp
inc
jge
fnstsw
or
cltd
jge
imul
cmpsb
inc
pop
adc
nop
jb
push
pop
push
or
pop
movsb
js
mov
aas
mov
pop
or
mov
pop
mov
ds
push
scas
add
aad
sbb
mov
repnz
push
cmp
cld
ror
icebp
xor
call
push
lea
dec
addb
in
bound
popa
fdivp
in
mov
sub
lret
dec
ljmp
mov
xchg
ret
jbe
and
ss
scas
std
les
mov
mov
scas
push
out
sub
into
cltd
loope
enter
pusha
jno
xor
adc
add
push
mov
imull
sti
rcr
inc
insl
shrb
dec
xor
leave
ret
and
int3
sbb
test
cmpsb
insb
or
xor
cmp
or
aad
fcoml
mov
lcall
nop
adc
in
outsl
leave
or
lods
inc
or
lret
jno
test
mov
and
sahf
sub
dec
cmp
cwtl
shll
xor
out
pop
pop
inc
add
and
repnz
push
adc
scas
mov
xchg
xchg
jecxz
mov
push
jl
xor
or
add
mov
cmp
add
push
test
jge
jne
clc
pop
push
push
push
into
cmpb
pop
jno
push
into
inc
cmpsl
fidivs
jl
and
mov
add
gs
ss
push
leave
enter
std
mov
and
push
sbb
mov
cs
xchg
popf
sub
and
fmul
dec
addr16
nop
xor
mov
mov
stos
scas
sbb
fnsave
cmp
adc
mov
rcl
adc
insl
jb,pt
mov
mov
call
inc
cltd
cmc
sahf
jl
adcb
adc
adc
data16
mov
push
jl
imul
cmpsl
pop
sbb
push
sub
out
adc
mov
cltd
aad
int3
push
push
pop
pop
dec
dec
or
lods
push
pop
xor
add
and
push
loope
aaa
lret
test
sub
mov
pop
jmp
hlt
dec
xchg
mov
fbstp
icebp
shlb
jb,pt
or
mov
jb
repnz
clc
imul
add
push
xor
rorb
xchg
mov
xchg
adc
sbb
leave
jns
mov
cmp
cli
xchg
pusha
insl
xchg
add
icebp
fwait
das
mov
cmpsb
sarb
cmpsl
push
jp
sub
sbb
lret
mov
push
ret
lahf
xor
mov
xchg
pop
leave
mov
sbb
sahf
xor
loope
inc
sar
pop
push
mov
int3
pop
sbb
mov
nop
sub
imul
mov
jg
mov
jle
bound
shrl
sub
in
out
adc
jmp
lea
mov
xor
mov
jle
or
mov
dec
fs
imul
mov
shrb
mov
insl
fucomp
pop
jecxz
jae
enter
in
arpl
push
mov
stos
push
sbb
dec
xchg
fiadds
and
and
add
pop
xchg
nop
jne
dec
cmp
push
aaa
xchg
add
sub
shrb
aam
repz
dec
insl
push
dec
test
jl
negb
push
addl
or
bound
loop
aad
push
in
xchg
xchg
fisttpl
ds
mov
pop
dec
aaa
xor
mov
ss
dec
jmp
ret
mov
lahf
repnz
add
test
adc
stos
popa
repnz
imul
movsb
pusha
insl
insb
mov
push
cmpsl
repnz
loopne
inc
xlat
add
xor
lahf
cmpsb
scas
xor
ss
lret
add
adc
sub
sbb
push
xchg
into
loopne
mov
dec
push
mov
pop
pop
push
and
xchg
into
push
cmp
stos
dec
ret
jge
xchg
fiaddl
icebp
push
dec
push
or
xchg
popa
std
mov
cmp
mov
rclb
test
test
fimull
xchg
push
lds
push
add
sbb
xor
xchg
push
das
loop
push
mov
mov
lret
dec
push
shlb
push
ret
scas
pop
or
add
adc
push
and
js
negl
pop
mov
inc
shll
add
mov
pushf
sub
jle
lret
clc
mov
ljmp
pop
mov
shlb
sub
adc
pop
mov
mov
xchg
inc
lret
imul
jge
push
and
sbb
pop
call
popf
mov
add
arpl
cwtl
cmp
data16
nop
xchg
xchg
adc
lods
ja
cmc
fldt
mov
cmc
xchg
mov
pop
and
loopne
fs
lcall
jns
dec
in
iret
inc
add
push
mov
das
pop
leave
push
jne
jns
shll
dec
mov
add
mov
les
mov
dec
inc
mov
pop
jl
iret
aad
std
aad
arpl
fnstsw
inc
jp
mov
inc
ljmp
call
dec
addl
jo
test
aaa
fsts
adc
and
xchg
cld
jnp
sbb
and
cmp
lret
je
add
cld
lods
adc
adc
cmpsb
repz
xlat
mov
dec
in
insb
pop
int3
sbb
mov
lahf
rorl
pushl
in
inc
cwtl
fmuls
and
popf
pop
movsb
xor
fwait
or
push
sub
add
je
mov
out
dec
pop
mov
movsb
fcmovnb
fbstp
sbb
xchg
jecxz
dec
dec
pusha
xchg
mov
jne
int
mul
sti
xchg
push
iret
inc
xorb
jmp
inc
clc
sbb
in
sub
enter
addr16
inc
push
test
dec
cmp
inc
into
int
mov
add
fists
insb
cld
xor
aad
in
dec
push
mov
cmp
outsl
or
test
cs
jae
push
adc
or
mov
in
movsb
and
mov
push
pop
push
xor
std
sar
jb
jmp
mov
or
outsb
outsl
dec
jle
sti
inc
cmp
ret
ljmp
sub
rcll
mov
sbb
and
xchg
lds
and
sbb
cld
test
cld
jns
leavew
fisttpl
ljmp
dec
mov
add
push
cmp
cmp
arpl
push
imull
orb
andl
adc
out
mov
pop
pop
sbb
xorl
bound
inc
sub
shll
mov
fisttpl
ret
insb
lea
popa
inc
scas
lret
mov
push
arpl
scas
inc
cmp
jno
xchg
xor
push
les
call
sbb
es
inc
jns
cmpsl
aad
nopl
jae
mov
push
mov
dec
test
icebp
jne
pop
lods
int
or
mov
mov
xor
test
ret
add
push
lret
mov
mov
and
sahf
mov
adc
inc
or
add
addr16
jmp
outsb
imul
jmp
mov
das
out
mov
mov
ljmp
jg
xchg
adc
fcoms
sbb
or
cwtl
adc
xor
dec
jnp
pop
inc
jne
inc
fsqrt
inc
inc
sbb
or
cmc
into
bound
test
mov
jmp
in
loopne
xor
cltd
xlat
mov
mov
aad
neg
pop
cmp
test
shlb
jns
ja
lods
insl
cltd
movsb
imul
aam
nop
add
pop
pop
xchg
scas
jecxz
rorb
test
cwtl
xor
ficompl
in
mov
or
fs
cmp
dec
sub
clc
sub
mov
imul
add
xchg
fst
inc
lahf
stc
roll
or
jo
push
pop
jge
sbb
fdivl
inc
out
add
out
mov
outsl
rorl
add
in
ret
xorb
pop
adc
fnstcw
add
dec
out
push
or
inc
nop
sbb
add
outsl
adc
jecxz
iret
adc
or
bound
in
ja
push
sahf
lret
out
imul
andl
and
fxch
mov
jbe
xor
xchg
aam
insl
cmc
sub
in
pop
fildll
xlat
dec
test
in
lds
mov
sbb
addl
xchg
cmpsl
jnp
pusha
movsl
js
mull
cld
out
jl
jbe
mov
lods
sub
mov
push
nopl
int
push
nop
hlt
repz
arpl
fld
fmuls
mov
add
cmp
clc
dec
jbe
fsubrs
lcall
mov
movsl
jle
inc
inc
repz
movsl
test
pop
sbb
mov
mov
bound
aam
pop
divl
ds
stc
jne
push
dec
lock
push
and
call
cltd
ror
cmp
in
movsl
loope,pn
adc
and
hlt
rolb
lock
nop
sub
cmp
int
inc
cmp
sbb
call
sti
push
test
jns
popa
push
xchg
jecxz
insl
dec
add
imul
imul
mov
mov
push
jl
inc
xor
aaa
mov
std
shlb
xor
shrb
mov
cmp
cmpsl
xchg
inc
sub
inc
mov
mov
pop
cmp
pop
lods
sub
pop
sbb
inc
orb
jg
inc
nop
repnz
inc
divl
pop
pop
orb
popf
ret
jmp
cltd
xor
mov
xor
data16
nop
mov
aas
pop
in
or
insb
es
out
test
pop
lahf
sub
sti
out
loopne
pusha
xor
adc
ljmp
shl
lods
ss
cmpsl
ja
mov
insl
clc
xchg
nop
movsb
mov
lcall
mov
push
std
mull
push
lret
repz
icebp
jmp
in
dec
popf
iret
xor
stos
add
sbb
add
rorb
fdivrs
ljmp
push
test
xchg
push
pop
jmp
push
and
leave
cmpsb
xchg
sbb
cmpsb
cli
mov
daa
and
adc
inc
xor
xchg
jg
flds
ja
inc
daa
in
out
mov
movsl
fwait
sbb
push
push
mov
movsb
test
sbb
sbb
xorl
inc
mov
fwait
pop
add
mov
jp
outsl
int3
lods
mov
dec
xor
xor
dec
nop
decb
ja
mov
or
hlt
pop
clc
pop
cmpsl
cltd
into
sbb
insb
lods
outsb
pop
ja
cltd
xor
in
xchg
mov
and
sub
xorps
test
in
jecxz
sti
dec
inc
mov
addl
jnp
mov
test
dec
push
lock
stos
jle
aad
mov
jp
mov
jp
dec
mov
sbb
push
or
fidivrl
push
pusha
out
inc
push
mov
push
pop
sub
sbb
or
mov
sub
sub
hlt
adc
ret
jae
jl
js
cmp
add
mov
xchg
testl
out
out
das
ror
pinsrw
addr16
pusha
cmpl
xor
in
mov
xor
pop
and
sbb
jo
add
pushf
push
xor
adc
ljmp
leave
addr16
ret
ljmp
dec
push
pop
push
xchg
add
out
cmc
adcb
aad
mov
sbb
cmp
ljmp
lcall
rorb
dec
xlat
ss
aam
std
outsl
pushf
mov
dec
push
insb
pop
outsb
mov
xor
mov
test
add
pop
pusha
repnz
and
push
xchg
icebp
jmp
sub
lds
push
icebp
xchg
shrl
inc
xchg
dec
xor
dec
test
pusha
icebp
lods
sahf
clc
jo
inc
ja
or
push
pushf
fnstsw
dec
push
jnp
mov
sub
jae
scas
xchg
xchg
cmp
rcrb
mov
and
cmp
fsubp
mov
xchg
pop
mov
push
jmp
mov
notl
xchg
mov
mov
pusha
or
cwtl
pop
pusha
mov
icebp
in
jno
stos
cmp
xchg
dec
pop
mov
xor
xchg
jno
and
jecxz
into
sub
jae
ret
jge
dec
add
sub
push
sbb
insb
mov
push
mov
data16
fs
mov
test
fistpll
or
push
cmpsb
ds
cli
pop
inc
in
inc
xor
sbb
arpl
xchg
cmp
out
dec
adc
or
lcall
mov
sub
xchg
pop
push
pop
inc
fistps
or
test
cld
scas
cmpsb
cvttps2pi
fldcw
ljmp
or
dec
xor
into
stos
mov
pop
ds
mov
dec
jns
std
xchg
ret
dec
dec
inc
out
pop
incl
subl
lahf
dec
mov
lcall
push
cli
or
mov
scas
pop
ret
lods
and
xchg
into
adc
clc
test
std
cltd
mov
pushf
mov
dec
bound
sub
idivl
cmpsl
sbb
inc
lea
out
sub
lea
mov
popa
test
inc
fdivs
jg
and
pop
test
and
testb
cmp
add
sub
pop
jne
inc
sub
and
stos
jecxz
mov
xor
xchg
sub
mov
pop
call
out
jg
sub
out
and
xchg
dec
mov
hlt
hlt
fs
sbb
lds
fs
jnp
cmp
mov
fildll
jb
push
outsl
and
jle
jp
mov
cld
in
cltd
push
sbb
sub
ds
cmp
ror
jecxz
mov
or
rcl
cmpsl
mov
add
sbb
lods
sbb
icebp
imulb
mov
push
out
adc
mov
leave
add
sarb
or
es
ficomps
pop
ss
out
dec
outsl
popl
mov
or
nop
or
lahf
shlb
adc
pop
je
mov
aad
cmp
xor
imul
adc
inc
loop
imul
xchg
insb
add
mov
icebp
shl
stc
out
fldl
lods
fxch
push
pop
cmp
aad
stc
add
xchg
pop
subl
sbb
mov
and
mov
mov
pop
mov
xlat
loope
jle
and
jae
iret
and
pushf
shlb
nop
jae
scas
scas
in
cmp
mov
or
push
adc
test
aas
cmp
movsb
push
iret
daa
push
mov
cmpsb
mov
sub
mov
xchg
inc
cmpb
insb
clc
aam
enter
vmwrite
dec
cmp
mov
xor
int
cld
sti
aas
push
addr16
sti
or
pop
addb
pop
sbb
adcb
pop
sbb
dec
inc
shlb
popf
insl
stos
sbb
sub
mov
loopne
mov
jns
adc
lock
dec
int
rol
mov
inc
int
rorl
into
mov
push
add
addr16
dec
test
dec
sbb
ret
seta
lock
fmul
push
lahf
iret
xchg
adc
out
xor
movsb
fwait
jmp
fbld
repz
mov
test
inc
iret
mov
sbb
fcom
sub
adc
mov
enter
fucom
out
cmpl
fstl
adc
mov
int3
aad
cmp
dec
pop
or
dec
mov
xchg
fmul
std
insl
das
inc
loope
aaa
xor
iret
test
sbb
shlb
int
je
and
mov
jmp
lret
ja
pop
mov
ds
in
mov
cmp
push
push
sbb
cmc
jg
sub
arpl
es
cmc
sub
rorb
movq
lods
adc
mov
push
mov
fidivrl
rolb
scas
cs
rcrl
pop
inc
jmp
in
addr16
fwait
loope
stc
flds
mov
fdiv
aaa
sar
popa
bnd
cmp
xchg
jp
mov
cmc
adcl
inc
pop
cli
mov
jecxz
add
into
fildll
arpl
mov
imul
aad
iret
pop
dec
jb
icebp
fs
ja
xor
int
movsb
mov
push
in
cmp
adc
push
dec
xor
imul
dec
xchg
das
je
sub
fstl
pushf
aas
add
push
mov
out
sbb
mov
mov
inc
push
dec
and
sbb
mov
fildll
ret
cmc
mov
daa
jae
adc
inc
jl
xor
jb
sti
imul
push
in
mov
ds
pop
dec
and
sub
jp
stos
bound
and
cmp
mov
lods
or
lea
inc
sbb
inc
sbb
out
sbb
insb
jnp
mull
mov
andb
jmp
jecxz
outsb
jbe
xor
cmp
aam
xchg
inc
cmp
add
pop
inc
icebp
or
outsl
xor
jo
push
push
mov
push
cmovl
int3
data16
ds
dec
fsub
sbb
push
test
dec
or
sti
mov
sar
outsl
bound
adc
sbb
scas
jo
inc
mov
enter
adcl
cmpsl
mov
xor
ret
or
lds
push
adc
fstpl
or
shll
fs
cltd
mov
inc
push
mov
into
push
mov
add
inc
in
mov
out
lds
mov
sbb
cli
adc
cmp
jbe
fs
jbe
push
mov
mov
or
sbb
or
repz
mov
sub
sub
and
adc
mov
ljmp
aad
mov
je
stc
mov
xchg
in
sahf
ret
xchg
mov
pushf
cmpsb
sub
fs
cmp
push
loopne
add
pop
mov
imul
out
call
dec
and
shlb
xchg
push
addr16
mov
shrb
sub
dec
outsl
call
dec
std
enter
dec
push
cld
jmp
xor
and
dec
mov
mov
sbb
or
clc
leave
cwtl
or
push
push
jae
push
mov
xchg
outsl
test
adc
mov
and
sti
fs
cmovg
and
sub
orb
pusha
enter
inc
out
xor
sub
dec
xor
xchg
or
adc
fisttpl
adc
orb
test
leave
add
add
xor
sub
clc
lock
cmp
fimull
push
dec
fs
lea
cmp
xchg
loope
adc
cmp
lcall
xor
or
or
sbb
adc
jg
insl
or
imul
add
dec
xor
sti
jns
or
push
pop
dec
dec
testb
adcb
mov
cld
std
movsl
jge
cmc
add
shrb
ss
inc
mov
adc
testb
add
pop
sbb
or
sub
push
xor
cwtl
push
orb
or
mov
stc
jbe
dec
dec
adc
sbb
fdivrs
leave
das
lcall
pop
cs
imul
lret
addr16
stc
mov
movsl
adcb
test
fwait
cltd
pop
fwait
mov
enter
mov
loopne
mov
cmpb
and
aaa
test
xlat
xchg
cmc
pop
std
fcomp
fcmovnb
push
imul
dec
lods
lods
aam
push
cmp
loope
sub
nop
loop
jle
mov
shlb
loopne
lock
daa
mov
aas
aas
or
jg
pop
mov
fisubrl
and
cltd
inc
fcoms
xlat
lcall
xchg
icebp
or
lock
les
or
mov
push
stos
addl
xchg
mov
imul
xor
sub
and
xchg
std
sbb
negl
pop
sbb
jo
mov
mov
mov
sub
fsts
sub
xor
mul
iret
lock
sub
mov
adc
ret
push
mov
mov
mov
push
push
adc
mov
stc
ret
dec
inc
inc
rcrl
xor
or
push
imul
push
xchg
inc
loope
scas
mov
cmp
cmp
xor
imul
inc
jg
mov
cltd
sti
sarb
sbb
rcll
jne
inc
push
pushf
lock
imul
and
out
pop
sbb
lcall
negb
mov
jno
adc
sub
leave
mov
sbb
adc
popa
fwait
xor
cmpsl
xchg
mov
push
mov
cmp
movsl
xchg
out
push
mov
ret
push
out
in
inc
push
cwtl
jno
leave
hlt
enter
stos
sti
sahf
in
test
sbb
js
aam
icebp
mov
xchg
int3
dec
or
out
jge
fiaddl
aad
xor
punpckhdq
adcb
and
mov
jecxz
dec
xor
cs
xchg
out
jbe
jle
mov
test
sbb
mov
lahf
movsb
or
mov
add
outsb
jecxz
mov
sti
mov
cwtl
or
jecxz
pop
xchg
inc
in
ljmp
inc
push
cmp
mov
jmp
fnstcw
jae
jmp
jge
and
inc
rcrb
pop
imul
mov
or
xchg
cltd
xor
cmp
fs
loope
inc
adc
xchg
cld
fwait
jne
mov
out
sahf
mov
arpl
ret
pusha
ret
add
out
mov
adc
fidivrs
lcall
popf
call
lea
mov
and
push
iret
xor
test
leave
cmp
mov
mov
pop
mov
sub
sub
test
dec
sbb
pop
push
cmp
nop
test
mov
adc
dec
es
xchg
loop
pushf
int
in
out
dec
xlat
stos
lods
mov
cli
loope
xchg
enter
shlb
inc
in
sti
jg
mov
test
rorl
mov
jmp
jg
push
ljmp
inc
loop
lret
jmp
sti
jl
loope
dec
and
mov
shlb
mov
movsb
daa
and
lds
mov
sbb
cltd
roll
fdivp
imul
jl
test
out
push
jnp
outsl
pop
xor
adc
xchg
pop
aas
leave
jbe
inc
mov
data16
outsl
mov
in
lea
sbb
je
dec
and
xchg
mov
cmp
movsb
cmp
daa
pop
fs
aam
cmp
xor
dec
push
mov
test
lock
pop
jnp
mov
sub
leave
xor
fcomps
stos
es
sahf
aam
sti
xor
mov
cmc
mov
fs
sti
xor
lods
mov
and
push
jmp
mov
pop
subl
aas
fidivs
inc
mov
mov
shrb
mov
xchg
add
paddusb
in
shlb
icebp
cld
mov
enter
jl
mov
mov
pushf
clc
xor
mov
scas
mov
sti
xor
subb
fcoml
scas
lock
mov
out
or
push
adc
mov
add
push
rorl
mov
push
xchg
mov
subl
fs
popf
pop
cltd
or
cmc
adc
lods
addr16
xacquire
lcall
jbe
sbb
mov
les
outsl
popa
jle
fwait
dec
push
cmp
and
mov
xor
mov
jb
or
mov
xchg
mov
push
lret
pusha
pop
xchg
or
jne
pop
repz
and
inc
push
fadd
mov
rorb
lcall
jecxz
dec
mov
imul
xchg
cmpsl
aad
adc
shll
fdivs
lock
clc
mov
sbb
mov
or
sbbb
push
ss
arpl
sub
sti
rcrb
daa
inc
jno
dec
xchg
lods
adc
lret
xchg
inc
imul
push
jnp
add
test
mov
xor
mov
dec
sbb
jne
mov
scas
add
fcoml
fs
shlb
xchg
pop
cltd
pushf
pop
insl
lods
pop
icebp
push
sub
clc
push
push
lcall
adc
lods
push
xor
rclb
ss
test
mov
lahf
cli
shl
jle
andb
insb
lds
cmc
ljmp
ljmp
jnp
sub
dec
shlb
xchg
popl
repz
pop
inc
jle
mov
cmpsb
add
add
aas
add
xor
lret
jecxz
cmp
aad
clc
bound
mov
adc
fcmove
pop
rclb
sub
push
call
loop
daa
inc
mov
nop
mov
inc
test
ss
mov
ds
pushf
add
inc
pop
inc
mov
sahf
cmp
mov
push
aaa
notb
inc
ds
rol
dec
shll
push
or
fnsave
push
daa
rorl
aad
jo
xorb
add
and
cmp
cmp
out
mov
shrl
push
fbld
push
and
xor
in
loopne
dec
rcl
addr16
mov
push
in
mov
insl
lret
or
loope
sub
jne
fiaddl
add
mov
or
adc
jns
inc
mov
imul
or
lahf
cmpsb
mov
mov
pop
inc
scas
jge
push
movsl
outsb
ja
andb
shll
orl
clc
test
mov
push
mov
jb
xor
daa
mov
imul
mov
mov
in
push
ret
xchg
mov
int
loope
shl
dec
cmpsb
add
sarl
sarb
push
dec
test
mov
mov
or
aas
jg
pushf
fldcw
jl
test
adc
pop
iret
push
cmp
xchg
mov
inc
cmp
out
push
fnstcw
mov
dec
or
adc
adc
add
mov
shlb
mov
int
mov
sbb
hlt
push
in
aad
insl
jl,pt
in
dec
ret
mov
inc
mov
add
mov
sbb
negb
mov
adc
imul
xor
lea
xchg
xchg
mov
aad
cli
pop
push
int
idivb
pop
mov
push
icebp
pop
les
out
pop
pop
inc
mov
int3
mov
sbb
mov
in
dec
stos
in
stc
out
inc
mov
sbb
rcll
lahf
xlat
push
pop
fucomi
push
fidivs
in
test
dec
jmp
mov
and
orl
fistpl
ds
data16
int3
ljmp
subb
subb
test
pop
or
shl
mov
jp
push
push
jmp
daa
imul
hlt
mov
cmp
outsb
cmp
rorl
int3
fwait
pushf
jae
fsts
jo
sbb
inc
in
jnp
push
push
loopne
dec
mov
jecxz
dec
dec
sbb
shrl
and
push
call
mov
gs
sbb
stos
jbe
lahf
cmp
popf
push
adc
mov
imul
clc
cmp
scas
dec
in
es
orb
dec
sub
xchg
cmp
pop
ja
shlb
fs
popa
arpl
mov
or
push
pop
sbb
aad
and
fdivl
pop
mov
gs
add
xor
sub
das
jg
icebp
in
and
nop
and
and
sarl
imul
dec
jle
xor
cmpsb
negl
mov
xlat
and
rol
mov
jnp
in
stos
pop
movsl
lods
wrmsr
iret
in
pop
pop
mov
mov
inc
push
lret
daa
movsb
mov
push
out
out
push
sarl
repz
pusha
mov
mov
xor
js
repz
stos
stos
in
cmp
xchg
and
in
outsb
pop
cmp
push
rcrl
addps
mov
xor
mov
test
int3
jecxz
insb
xor
or
insl
sub
fcmovnu
mov
mov
mov
xchg
test
push
lds
jmp
nop
dec
dec
enter
std
pop
popf
mov
push
mov
dec
ds
int3
sub
lods
push
xchg
xor
cmp
outsl
lcall
inc
mov
pop
scas
lods
icebp
adc
mov
outsb
cltd
or
lds
out
stos
pusha
ret
fwait
add
mov
xorb
pop
xor
data16
push
dec
adc
nop
jnp
adc
sbb
dec
jae
popf
ds
scas
jg
mov
stos
mov
pop
inc
jbe
xor
xor
inc
mov
cmp
mov
ret
lds
mov
sub
test
lds
fsubs
addr16
jl
sub
xor
movsl
mov
jp
mov
out
and
mov
mov
sub
lret
cli
pop
mov
push
scas
lds
pop
fs
and
inc
xlat
add
lcall
imul
repnz
mov
jp
cmpsl
sahf
or
out
ret
mov
fwait
sbb
mov
mov
lcall
or
or
popf
lret
ficomps
cmpsb
aaa
push
mull
sbb
stc
js
xlat
dec
loope
cmp
add
jne
movsl
and
dec
mov
loop
mov
push
ret
pushf
add
cmp
adcb
in
dec
out
mov
bound
popa
aad
add
push
jle
jbe
sbb
or
insb
int
decb
aas
lea
or
xlat
in
pushf
fmulp
push
fxch
cmp
fbstp
pop
adc
inc
shrb
mov
ss
xchg
add
or
orl
fdivs
sbb
mov
and
pop
xor
mov
add
jne
inc
mov
dec
in
loope
mov
or
or
lret
push
mov
adc
push
xchg
fisttpl
lea
aad
call
sub
in
push
xlat
fwait
ss
or
in
test
and
mov
les
mov
and
xor
push
push
enter
in
sub
xchg
adc
das
sahf
mov
xor
imul
adc
in
lret
and
shlb
dec
call
leave
orb
testl
lret
cwtl
add
sbb
mov
fisubl
add
test
xor
mov
pop
pxor
fmuls
fwait
jg
add
popa
stos
cmp
sub
out
xchg
or
cltd
cwtl
arpl
cmp
cld
decb
cmp
pop
hlt
in
fwait
or
push
das
cli
data16
outsl
stos
add
cmp
dec
add
rorb
sub
mov
cmp
pop
jl
and
lahf
fstpl
stos
stc
leave
cmp
mov
pop
addr16
xchg
add
psubsb
xor
jae
loop
mov
push
sub
push
push
xchg
xchg
inc
fcompl
cmc
mov
imul
mov
sbb
lods
fdiv
mov
cmp
fs
icebp
jbe
pushf
arpl
insl
fistps
mov
nop
icebp
adc
or
out
cmp
sbb
sbb
aas
ret
cltd
fsubrs
pop
mov
mov
dec
pop
fdivrs
push
dec
pop
psrad
scas
sahf
push
enter
add
ret
push
push
cmp
cmp
fwait
sbb
pop
or
sub
mov
arpl
into
adc
cli
out
cmp
pop
test
xor
pop
les
js
pop
jle
in
pop
xchg
insl
ror
sarb
out
sti
jnp
xchg
aad
subl
sbb
push
adc
aad
mov
xchg
inc
test
adcl
out
js
sub
data16
movsl
mov
inc
inc
jmp
nop
in
testb
xchg
sub
jle
jo
add
push
mov
imul
adc
cmp
jle
aas
sub
mov
adc
mov
lods
xchg
xor
arpl
sub
adc
data16
mov
push
pop
jg
add
jle
dec
aam
ss
add
dec
sti
push
pusha
mov
andb
cmp
movsl
testb
sarl
fcmovnu
lret
fucomip
cmc
cmp
jmp
dec
pop
xchg
mov
mov
jnp
inc
push
lods
push
cwtl
dec
enter
and
mov
roll
or
aam
arpl
push
pop
jle
adc
cld
out
out
movsb
rcrb
into
sub
enter
lret
push
jmp
aad
push
dec
sahf
xlat
popf
aas
push
dec
cmp
inc
mov
or
inc
jmp
xchg
sub
les
adc
in
or
adc
aam
mov
sbb
adc
ja
lahf
imul
and
test
test
sbb
lea
int
jns
cmp
adc
xchg
adc
add
icebp
push
add
cmc
inc
dec
out
sbb
roll
cltd
push
sbb
pop
adc
pop
sub
cmpl
mov
notl
in
dec
add
shlb
add
iret
lock
mov
imul
adc
lods
sbb
fldl
jns
out
xchg
sbb
sbb
hlt
cmp
dec
xchg
shl
inc
cmp
sub
ficomps
push
orb
xorl
sbb
roll
sub
jp
cmpl
andl
out
or
or
and
xor
push
jmp
mov
or
mov
in
add
adc
mov
mov
andb
jae
push
repnz
cmp
roll
mov
cmpsb
xor
scas
rorb
lret
adc
loope
jno
divl
stos
mov
pop
call
into
cmovae
lret
sbb
or
imul
sbb
xchg
pop
sbb
scas
add
fs
aas
adc
mov
mov
jp
cmpsb
or
cmp
fs
pusha
jl
shl
dec
cmp
mov
or
adc
lods
jge
xchg
int
int
popf
pop
pop
jge
mov
in
ja
iret
ret
mov
adc
std
sbb
aam
push
jmp
ljmp
pop
dec
pop
leave
sti
imul
out
add
mov
inc
xchg
stc
or
jg
mov
arpl
sti
cmp
leave
stos
js
mov
lods
dec
aaa
sarb
sarb
jb
cmp
pop
shrb
test
pop
call
or
or
pop
fwait
xor
cmpsl
dec
mov
mov
xor
out
repz
dec
jle
lret
imul
jne
xchg
sbb
rcr
ffree
in
mov
adc
sub
xor
sbb
aad
cmp
cld
pushf
icebp
or
mov
ljmp
aam
pop
sbb
mov
ret
ret
shr
jnp
dec
imul
das
push
std
pop
sub
cmp
rclb
push
jo
xchg
mov
xor
mov
popf
sbb
out
fnstenv
xchg
inc
pop
test
arpl
sub
int3
outsl
test
lahf
outsl
push
push
sbb
xlat
lret
bound
jo
inc
and
imul
movsb
fdivr
mov
inc
cmp
pushf
daa
mov
or
pop
and
xor
jle
inc
and
fcomps
in
cmp
or
push
push
pushf
sub
test
test
imul
inc
shlb
add
sbb
enter
mov
xor
mov
push
lea
pushf
lret
repz
jl
in
les
mov
icebp
scas
mov
xor
mov
gs
mov
lcall
pop
sub
xchg
stos
push
adc
cmp
pop
aad
push
cmp
mov
es
xchg
pop
jecxz
fisubs
jp
lret
or
cmovg
in
rolb
mov
hlt
stc
or
fdivl
xor
daa
divl
mov
cmpsl
scas
sub
push
fnstsw
mov
cmp
int3
adc
xor
jne
cmp
test
out
aas
mov
xchg
ret
mov
jne
push
sub
inc
fiaddl
lods
pop
push
and
or
ret
imul
dec
scas
cmp
mov
mov
jae
out
test
mov
adc
movsb
rolb
sahf
cmpsb
arpl
mov
xor
cmp
dec
aad
sub
ftst
pop
mov
push
push
into
push
mov
sar
mov
imul
dec
scas
shlb
xchg
call
adcb
mov
jl
xchg
xor
imul
shr
mov
subb
dec
outsl
pop
pop
mov
xchg
sub
mov
inc
and
add
fwait
test
cmpb
fistpll
sbb
adc
mov
loopne
dec
xor
inc
mov
movb
pop
mov
out
sub
cmpsl
and
inc
or
ljmp
cmp
in
jmp
aaa
mov
les
push
std
jns
mov
outsb
lods
adc
jae
pop
ss
fs
inc
lock
xchg
xor
add
bound
incb
aad
std
or
aaa
push
mov
mov
inc
subl
repnz
jle
mov
add
fldenv
sub
aaa
bound
xor
cmc
jl
push
jb
ja
pusha
jl
fwait
xchg
mov
in
push
sub
ds
lds
jno
xchg
dec
rolb
rolb
jo
movsb
mov
repnz
imul
adc
or
cmpl
idiv
xorb
mov
dec
sub
push
in
sub
sahf
xchg
fdivs
mov
popa
lods
jmp
out
loop
clc
mov
xor
mov
push
xchg
loopne
nop
repnz
dec
adc
dec
int3
ja
scas
pop
pop
pop
roll
adc
cmp
clc
fildll
xchg
arpl
ficompl
lret
enter
and
inc
movsl
clts
mov
xchg
aas
mov
imul
rcll
cmp
or
das
and
mov
lds
mov
xor
and
popf
or
stc
movsb
scas
loopne
jae
aaa
fucom
xchg
dec
xor
sub
pop
pop
and
sbb
xor
scas
test
movsb
pusha
jnp
cmp
xor
fistpl
pop
dec
sti
test
and
xchg
pop
out
push
fidivrs
mov
jne
xor
xor
pusha
lret
data16
shlb
fildll
popf
pop
lock
xor
mov
scas
push
test
cmp
loope
cld
es
out
push
adc
jl
fldenv
or
enter
cli
mov
test
int
mov
lcall
push
cmp
or
jl
scas
pop
into
push
mov
add
jb
jl
push
mov
xor
ljmp
repz
xor
sbb
pushf
test
pushf
aas
mov
inc
xor
repnz
sbb
enter
and
movl
xlat
push
add
add
lods
lcall
call
sti
jb
add
fdivrl
mov
xor
jp
sahf
clc
mov
cmpl
std
std
packssdw
in
lcall
sbb
adc
lret
mov
jecxz
sbb
or
orb
adc
daa
test
xchg
sahf
jmp
jle
test
xor
cmp
test
mov
scas
cmpb
ja
and
sbb
repz
inc
mov
fisttpl
sbb
pop
loopne
outsb
das
add
mov
cmp
ret
sbb
negb
sahf
es
into
add
pop
xchg
mov
push
add
cltd
pushf
cmp
aas
sub
xlat
jge
mov
dec
pop
inc
adc
push
xor
cmp
dec
test
gs
out
sub
rcll
call
sar
into
inc
pop
aad
adc
clc
cmpsb
sarl
sub
js
iret
xchg
xchg
aas
mov
dec
fwait
dec
jbe
les
jo
filds
mov
mov
sub
dec
and
fs
ret
lods
leave
jb
imul
cmp
fwait
push
stos
mov
inc
idivl
leave
xchg
stc
jbe
sarb
xor
jl
or
xchg
pushf
mov
pop
sar
inc
xor
popw
mov
sbb
jne
in
push
int
dec
sub
mov
cmc
mov
sub
push
dec
xor
mov
xor
jns
or
pop
push
sti
sub
inc
push
das
mov
std
test
lcall
cmp
pushf
aas
iret
jb
insb
dec
mov
aad
shl
jg
push
loopne
mov
and
arpl
jg
cmp
ret
dec
jmp
pop
sbb
fcomi
inc
pusha
mov
addr16
jle
lea
aad
aaa
stos
push
dec
out
jns
xchg
xor
shr
popa
rorb
ds
popa
cmp
add
fistps
nop
aam
lret
call
shrb
push
push
imul
out
out
cs
lahf
cmp
dec
bound
push
pop
rorb
sbb
gs
loopne
int
xchg
popa
cli
icebp
jns
mov
in
rorb
dec
fildl
sbb
test
or
in
xor
lods
adc
popl
pushl
rolb
dec
xor
rol
pop
inc
and
pop
mov
jge
push
cmp
adc
mov
mov
icebp
dec
or
stos
mov
push
loope
xlat
sbb
shll
jnp
imul
adc
and
out
xchg
iret
outsb
xor
ret
jle
in
movl
orl
jl
adc
add
dec
and
xor
test
xor
daa
jge
popl
ret
test
sub
push
sbbb
pop
mov
mov
sbb
repnz
lcall
xchg
dec
xchg
pusha
bnd
xchg
sub
fcmovne
movsl
xor
int3
jp
add
lods
pop
clc
cmp
mov
mov
lods
dec
test
sub
fmuls
clc
ss
xchg
stos
ret
pop
test
sub
pushl
xor
jns
test
out
jns,pt
stos
cmc
sbb
jae
push
add
into
lock
adc
fmulp
scas
or
sub
sbb
lock
nop
sarb
pop
iret
je
add
and
imul
repnz
ss
fdivrs
sbb
sti
xor
sti
jo
pusha
jns
pop
addr16
ds
mov
ja
repz
movsb
dec
pop
xchg
pop
es
mov
mov
ret
cmp
out
sub
and
stos
mov
rolb
movsb
add
jne
xor
dec
out
outsb
mov
jbe
pop
lock
cwtl
mov
int
add
or
add
aam
iret
jmp
mov
imul
mov
cld
jae
sbb
aaa
ror
and
xor
xchg
das
add
mov
movsl
push
push
pusha
xchg
cmp
mov
pop
jbe
lea
out
outsl
outsb
in
pop
std
mov
pop
in
mov
pop
int3
mov
outsb
aam
xor
jne
dec
inc
sbb
push
mov
xchg
fildll
dec
in
pop
in
aam
aaa
inc
sub
add
sub
lds
push
push
pop
jb
mov
pop
sub
xor
inc
jle
je
xchg
add
fidivl
insl
ljmp
mov
repz
imul
pop
nop
arpl
aaa
std
int
inc
lods
popa
xchg
xor
out
data16
and
mov
xchg
xchg
pop
jmp
lock
std
jle
out
adc
stos
jge
inc
jmp
sub
loop
mov
daa
xor
push
xor
inc
mov
lahf
stos
arpl
cltd
inc
add
pop
int3
cltd
daa
stc
sub
jns
cld
sub
mov
xchg
or
pop
dec
jg
mov
jo
lods
cld
sbbb
inc
inc
cmp
pop
sub
mov
xchg
add
mov
insl
add
pop
mov
sbb
adc
jb
sarb
sar
jne
into
jmp
repz
pop
dec
push
rolb
inc
adc
fimuls
xchg
dec
test
iret
add
fcoml
or
dec
dec
fisubs
fcomps
mov
pop
jnp
or
jns
xor
test
and
sub
aas
mov
inc
cmp
decb
outsb
inc
movsl
nop
pop
rsm
mov
jl
lea
mov
and
movsb
xchg
mov
js
cmp
dec
into
sub
nop
movsb
pusha
xchg
stos
add
adc
mov
cmp
mull
or
xor
xor
iret
les
inc
fisttpl
negl
cmp
sbb
mulb
inc
mov
lods
fdivp
push
add
cmp
sbb
push
mov
dec
ljmp
adc
adc
adc
mov
cmp
dec
pop
jp
into
jb
test
xchg
mov
add
in
or
or
sbb
dec
stos
jo
dec
call
jp
aam
loop
ret
add
pushf
data16
inc
and
adc
mov
decl
xchg
mov
cli
mov
fmuls
fwait
in
pop
in
dec
xchg
lret
loopne
pop
ds
and
call
xchg
test
mov
sub
inc
pop
dec
cmp
pop
inc
jl
loop
ljmp
xor
pop
popa
xchg
repnz
jl
lret
imul
loope
xchg
jnp
cli
test
lds
mov
xchg
and
xor
adc
in
xlat
push
fadd
xchg
sub
xor
rcl
out
lahf
add
call
int3
subb
xchg
daa
add
out
pop
dec
ret
inc
dec
push
dec
lea
stos
lods
sbbb
sarl
xor
and
and
mov
pop
in
xor
sbb
add
testb
inc
aad
fisubrl
xchg
andb
js
mov
sub
out
push
adc
cmp
test
div
add
int3
lahf
adc
dec
jb
dec
popa
jmp
pop
xchg
in
sbb
push
pop
cmp
int
pop
and
add
xchg
nop
pop
sub
mov
mov
mov
out
push
aaa
inc
outsl
ret
jg
movsb
xchg
dec
adc
adc
shrl
mov
insl
dec
push
mov
std
pop
cmp
mov
xchg
xor
push
aam
jl
inc
les
add
scas
jo
inc
testl
xchg
xchg
pop
daa
sahf
xor
sahf
lds
xchg
cmp
push
shll
mov
pop
sbb
insb
cmpsb
int3
sarw
stos
mov
xor
popa
push
negb
les
or
jne
bound
inc
xchg
mov
pop
scas
call
jecxz
adc
xor
int3
stos
icebp
loopne
or
mov
dec
jp
sti
push
cmp
das
lods
push
subl
out
and
dec
rcr
lods
mov
pop
gs
aad
sar
mov
xor
push
and
sbb
pop
push
lahf
cmpsb
pop
sbb
jnp
icebp
mov
insl
mul
pop
sar
das
adc
divl
sarb
jo
sub
adc
lret
or
adc
xchg
pop
mov
adc
das
push
or
leave
jne
fsubp
pushf
gs
in
sbb
or
push
xor
xchg
lahf
adc
push
dec
xor
mov
mov
mov
inc
in
or
arpl
aaa
push
test
aad
movsl
outsl
or
dec
orw
mov
hlt
pop
je
aaa
ja
jecxz
adcl
push
movsb
in
mov
in
push
rcrb
mov
test
rol
inc
jbe
ss
xchg
adc
cli
add
cltd
adc
xor
or
xchg
cmp
pop
push
fsts
or
jge
lods
adc
and
jno
test
jbe
xchg
outsb
sbb
mov
mov
inc
fiadds
xchg
nop
mov
lret
les
inc
daa
sbb
or
jecxz
cmp
mov
jg
xor
insb
pop
pop
mov
test
push
int
push
jns
cmpb
sub
dec
test
cmpsl
pop
mov
cmp
add
cli
mov
js
lods
sub
dec
ds
mov
mov
and
sbb
lods
sub
add
test
jb
xchg
lret
shlb
xor
and
xor
and
int
in
ret
dec
adc
ficoms
rorl
sti
lret
pop
or
ds
push
sub
xchg
pop
pop
cs
roll
inc
jae
dec
pop
mov
sub
fisubrs
ds
sti
cmp
fcomps
cwtl
cmc
testl
push
push
jae
test
out
or
loope
test
ret
fwait
xchg
arpl
faddl
adc
dec
xchg
sbbl
outsb
fildl
jecxz
out
das
xchg
fldl
inc
pop
and
int
sahf
xchg
mov
xchg
or
out
sbb
pop
movnti
sub
xchg
adc
push
fldenv
push
outsl
jge
dec
mov
pop
xchg
mov
add
mov
ret
into
push
repz
mov
or
adcl
arpl
xor
out
and
pop
test
dec
sub
test
dec
xor
out
lock
stos
jae
cmp
ja
test
test
dec
pop
jp
int3
jg
mov
pop
hlt
mov
ja
fwait
iret
sbb
inc
push
imul
push
in
xchg
outsb
inc
pop
jnp
insb
into
push
mov
ljmp
xor
leave
rcll
aas
ds
rcl
and
addr16
jno
pop
or
jmp
xchg
cmp
cli
fwait
jae
inc
push
shl
popl
cs
loopne
mov
push
or
pop
pop
dec
xor
sub
mov
mov
mov
cmp
lcall
add
jo
mov
fstl
enter
mov
dec
fs
fildll
mov
mov
push
push
imul
jbe
pop
dec
and
push
mov
or
inc
imul
adc
movsb
insl
xchg
sub
push
sti
dec
mov
lcall
int3
jnp
mov
sub
or
push
pop
mov
mov
mov
loope
pop
into
je
push
outsb
mov
arpl
inc
add
inc
data16
ss
lcall
push
andb
or
mov
push
sub
sbb
in
sub
sub
aad
xchg
out
pop
pop
and
mov
sub
push
add
sbb
test
cmpsl
cmp
mov
cmp
and
push
pop
and
in
xor
lods
and
jle
push
push
fcomps
mov
outsl
xchg
pop
outsl
dec
adc
out
jo
inc
and
sbb
rorb
imul
in
mov
fistl
repnz
lods
popf
sbb
daa
xor
data16
push
cmp
repnz
mov
adc
jle
push
dec
xchg
test
adcl
adc
or
mov
iret
add
jle
inc
xor
out
xor
out
icebp
into
ja
outsl
dec
push
dec
xor
les
xor
call
jne
inc
mov
dec
pop
pop
cmp
stc
cwtl
or
sbb
icebp
mov
adc
andb
enter
mov
mov
addb
ja,pt
jp
add
adc
cwtl
mov
imul
sbb
add
popf
fcmove
test
pop
sbb
push
add
mov
mov
cwtl
pushf
and
sub
mov
insl
ja
jmp
out
jl
orl
imul
in
cmp
and
pop
lea
sbb
hlt
stos
pop
mov
fldcw
cmp
push
mov
addr16
inc
js
es
ret
cli
jg
push
sub
mov
sbb
cli
mov
sub
cs
js
mov
mov
lods
adc
sbb
testw
repnz
dec
sbb
pop
repnz
andb
xor
fisubs
loop
mov
xchg
add
pop
pop
dec
lock
mov
adcb
xchg
cld
jp
imul
mov
stos
jno
stos
out
jp
push
imul
shlb
sub
sbb
xor
fistps
enter
push
icebp
lret
mov
sti
dec
cmc
test
xchg
lods
pusha
hlt
inc
push
mov
or
aad
adc
xchg
pop
aam
dec
mov
lods
in
sbb
lret
lahf
adc
cmp
movsb
ja
mov
aad
sahf
les
test
test
push
fs
mov
cli
xchg
pop
cld
fwait
jge
xchg
movl
xor
out
lock
aas
pop
mov
cmp
mov
mov
push
fsubl
add
in
xor
xchg
add
jg
std
fst
lcall
mov
popa
fsubs
stos
pop
pushf
jl
push
dec
in
and
mov
popa
loopne
dec
mov
jne
fstl
jmp
pop
pop
sub
pop
sahf
cmp
xor
sub
cmpsl
xor
dec
add
mov
xchg
fiadds
xchg
pop
aas
or
pop
dec
insl
lds
dec
mov
gs
sbb
push
lcall
inc
imul
jp
adc
or
sbb
fwait
sbb
in
hlt
fcmove
lea
stos
pop
or
test
lods
daa
pop
aaa
mov
pop
mov
xor
pop
std
jmp
lret
mov
jnp
sar
xchg
xchg
cld
lcall
sti
aaa
push
stc
loopne
es
andl
icebp
outsl
or
cmpsl
cmpsl
cld
shlb
call
test
lds
fimull
lret
jg
cmpl
xchg
xor
fidivs
aas
mov
mov
dec
je
jns
xor
push
inc
sahf
std
fstpl
out
mov
je
ret
pop
bound
mov
lret
dec
stos
jp
lods
pushf
adc
arpl
jae
adc
test
mov
mov
xchg
mov
notl
jns
jb
push
and
aam
dec
mov
mov
sbb
insb
sbb
test
ja
push
arpl
sub
dec
fwait
std
pusha
jl
sub
pop
add
mov
pop
aas
pop
push
subl
mov
pop
pop
loope
sbb
sti
mov
jo
leave
jae
int3
insb
pusha
nop
int
fwait
negl
mov
fnsave
xor
test
clc
ret
clc
dec
mov
dec
pop
pop
pop
dec
movsl
xchg
out
rolb
imul
pop
cmp
push
pinsrw
aas
dec
andl
out
and
in
dec
fisubrs
inc
adc
ljmp
inc
mov
mov
sbb
imul
cltd
test
cmpsl
pushl
jg
scas
and
pop
pusha
nop
test
cmp
popf
pop
cmc
jno
xor
cwtl
add
insl
mov
add
cld
mov
loopne
rcrb
aad
push
mov
in
mov
inc
orl
sub
mov
sarb
stos
lcall
jp
jle
imul
test
add
dec
adc
pop
test
mov
int
and
xor
add
fwait
and
test
jno
ja
lods
addr16
pushl
movsb
cmp
scas
fisttps
add
dec
shl
out
dec
inc
lret
std
pop
jp
mov
outsl
xlat
leave
or
popa
mov
xchg
sbbl
sahf
lods
lret
lret
and
dec
dec
and
jg
adc
inc
and
das
pushf
lcall
fldl
mov
cltd
mov
or
xchg
mov
inc
testb
out
or
push
sub
push
sti
mov
in
or
subl
fnstcw
mov
lods
pop
jo
push
in
pop
test
stos
cli
and
aas
in
jmp
out
in
pop
mov
mov
push
adc
xor
inc
rcrb
xor
call
fmul
mov
test
sbb
sti
js
shlb
push
push
mov
leave
jae
pop
lret
out
mov
out
dec
pop
mov
sahf
icebp
xchg
inc
fcoms
sbb
sahf
xor
pop
nop
scas
pop
xlat
sbb
push
jbe
test
out
gs
adc
push
adc
dec
daa
add
mov
inc
jno
push
push
add
adc
pop
sbb
jbe
out
popf
sbb
pushl
and
popf
xor
inc
add
pop
mov
in
add
jo
cmc
or
mov
mov
mov
sti
xchg
jae
ss
xchg
jae
inc
repnz
lret
sub
call
cmp
fisttpll
jnp
mov
sbb
sbb
add
das
sub
mov
je
jae
or
pop
cmpsb
jno
dec
mov
adc
inc
xchg
mov
adc
xchg
mov
xor
dec
call
jl
js
in
sarb
ljmp
lods
mov
imul
pop
xchg
aam
sbb
fdivl
repz
xchg
repz
outsl
inc
and
mov
enter
js,pt
nopl
mov
sbb
mov
inc
mov
fwait
dec
mov
cmpsb
scas
push
mov
cld
aas
sti
xchg
adc
outsb
xlat
mov
sub
jecxz
cmp
xor
add
loope
icebp
int
xor
ret
mov
cmp
push
mov
iret
sub
sbb
pop
pextrw
inc
jge
cmpsl
divl
add
mov
xor
sbb
jge
push
aad
sahf
outsb
inc
mov
xor
daa
add
or
sbb
push
jne
mov
clc
rcll
mov
xchg
xchg
add
push
jbe
in
xchg
int3
mov
and
add
out
int
iret
xor
popf
jne
or
mov
add
hlt
push
test
push
sub
mov
jmp
pop
mov
and
or
ss
jbe
dec
rorl
sbb
aas
xchg
popw
movsl
stos
push
stos
and
mov
iret
push
ret
add
inc
call
dec
dec
std
hlt
aaa
pop
xor
push
test
add
cmp
inc
jae
inc
mov
imull
inc
mov
test
cmp
mov
cmp
int3
das
jo
sbb
les
adc
lcall
xor
idivl
nop
test
repz
xchg
loope
jne
lahf
cmp
sbb
aas
stc
mov
mov
stos
xchg
les
mov
or
adc
int
pop
das
cwtl
pop
test
out
jbe
fs
mov
xor
ret
adc
cmp
cmp
popa
mov
out
je
jno
or
add
pop
mov
and
call
lock
mov
daa
and
in
jge
cli
sbb
push
stos
scas
dec
lods
pop
mov
lahf
add
and
xor
and
aam
xchg
mov
or
jl
leave
mov
dec
pop
test
xchg
inc
aas
insl
ret
sub
mov
iret
loopne
inc
fldt
cmp
ds
outsb
pop
push
mov
bound
nop
addb
scas
jbe
mov
pop
popf
rorl
out
mov
push
mov
les
mov
jg
icebp
jo
andb
pusha
sbbb
std
movsl
mov
ret
outsb
outsb
and
aas
pop
int3
insb
add
push
sub
push
pop
mov
loopne
inc
or
jbe
fwait
xor
push
movsb
xor
in
mov
sub
push
dec
or
jp
addr16
cmp
and
out
jnp
xchg
imul
inc
xor
mov
loop
int
testb
mov
mov
stc
mov
sub
out
inc
adc
fisubrs
aas
rol
daa
lea
test
lcall
fwait
xorl
out
das
xor
jle
mov
aas
xor
repz
popf
cmp
je
xchg
insl
andl
icebp
mov
push
push
jle
pop
cmp
sbb
test
dec
jae
push
or
lret
mov
cld
mov
les
sbb
pop
mov
sub
cmpsb
aaa
loope
dec
xor
hlt
pop
cltd
test
shrb
jl
add
insb
fstpt
xor
andl
lcall
adc
lock
jnp
mov
stos
ffree
dec
inc
lods
add
fcmovnu
jge
jno
xchg
dec
sbb
repz
mov
or
cmp
lods
mov
pop
out
jb
insb
pop
xchg
xchg
xchg
nop
mov
jnp
cmp
fcmovne
jo
mov
jns
and
lahf
cmp
ljmp
int
scas
enter
inc
inc
mov
pop
add
dec
iret
pop
call
out
or
sarl
mov
mov
lods
test
push
cmpb
mov
shlb
imul
sarb
fcoms
jnp
inc
mov
jns
inc
test
push
and
xchg
test
ja
dec
in
enter
add
int3
jmp
mov
shll
orb
aaa
insl
out
jb
das
out
mov
mov
and
mov
stc
xchg
call
jecxz
fprem1
push
inc
and
push
ftst
dec
scas
sub
pusha
sbb
xchg
arpl
mov
fidivrl
adc
scas
lahf
ja
shll
or
cwtl
dec
movsb
fstpt
andb
outsl
dec
test
mov
and
dec
push
les
imul
clc
test
jbe
jle
add
xor
inc
sub
test
jmp
push
negl
enter
mov
test
adc
inc
ja
dec
loopne
xchg
shl
cmp
mov
pop
loop
insl
lcall
mov
imul
xchg
movsb
int3
in
out
cmp
in
aad
divb
and
mov
imul
xchg
ret
mov
xchg
pop
mov
imul
cmp
sub
out
jb
lret
pushf
xor
fdivrl
mov
adc
mov
arpl
adcb
push
mov
cmc
and
inc
inc
mov
push
dec
out
mov
jnp
roll
cmp
jp
sbb
lods
in
cmc
and
and
mov
push
loop
mov
cwtl
je
sub
inc
ljmp
or
pop
mov
es
inc
fiaddl
int
movsl
adc
pavgw
mov
mov
xor
adc
sbb
xor
out
aas
push
cmpsb
sub
jb
cmp
push
lret
xchg
nop
inc
mov
fs
mov
adc
lods
notb
out
push
sarb
addl
movsl
rolb
jl
add
adc
push
call
int
js
pop
ret
lods
mov
adc
arpl
inc
sbb
adc
adc
mov
pop
adcb
push
cwtl
int3
scas
jno
lods
fwait
sbb
jp
cwtl
pop
movsb
inc
scas
xlat
fiadds
mov
cmpsl
rcrl
sub
add
cmp
call
adc
sub
jno
and
lds
pusha
dec
and
mov
clc
stos
inc
inc
jns
mov
enter
cmp
or
and
iret
sbb
lock
xor
shll
dec
push
sbb
cmp
or
jp
stc
out
and
pop
xchg
cmp
inc
jle
push
stc
push
push
add
mov
inc
sbb
lods
clc
lahf
mov
ljmp
shrl
inc
test
adc
and
mov
adc
push
stos
xchg
lds
nop
rcrl
rol
xchg
add
lret
mov
jmp
sbb
xor
pushf
cmpsl
aad
mov
adc
xchg
std
push
aaa
repnz
pop
push
pop
icebp
dec
repz
loope
and
stc
stc
jecxz
dec
pop
jnp
fwait
hlt
sbb
int3
dec
add
or
shr
shrl
adc
imull
scas
out
add
clc
inc
dec
ficoms
xor
fistpll
inc
sahf
jp
popa
sub
lods
cmpl
fdivr
js
jecxz
inc
lods
arpl
aad
negb
mov
fidivs
add
pop
mov
out
jp
mov
adc
lods
cmp
cmp
pop
lret
mov
push
push
push
idivb
pop
bound
adc
xchg
and
repz
push
js
xchg
xchg
lret
xor
inc
and
fs
out
lods
xchg
inc
jb
je
dec
cmp
addr16
stos
subl
mov
ficompl
sbb
gs
cwtl
inc
pop
int
inc
dec
arpl
dec
les
mov
mov
inc
cmp
ds
sbb
loopne
pop
mov
inc
aam
jl
jl
cwtl
mov
mov
xor
xor
inc
aam
push
jg
fisttpll
ljmp
movsb
sub
pop
xor
shlb
xlat
fldln2
cvtdq2ps
mov
rcrl
ljmpw
fwait
jb
daa
lods
in
popf
loopne
adc
xchg
add
mov
mov
pop
fldcw
call
cltd
lods
mov
jae
lods
les
push
xchg
cld
sahf
sbb
shlb
cmp
push
test
xorb
push
push
test
pop
pushf
test
push
insb
mov
dec
jnp
movsb
or
xor
add
mov
push
movsl
mov
outsb
mov
push
inc
outsl
test
xor
mov
fwait
sub
ljmp
mov
pop
jae
mov
lcall
pushf
mov
in
pop
neg
xchg
xor
jno
sub
pop
orl
adc
pop
adc
cltd
pop
test
outsb
fwait
adc
or
xor
sub
mov
insl
mov
adc
pop
roll
cmp
rcr
push
dec
mov
push
jp
mov
out
mov
fisttpl
roll
push
imul
cmp
mov
mov
mov
sub
xchg
inc
stos
inc
sub
xlat
mov
inc
nop
pop
movsb
sbb
sbb
hlt
push
dec
sub
mov
out
dec
stos
cmc
fs
push
sbb
xor
xchg
mov
ljmp
or
in
xchg
sub
cltd
mov
or
out
pusha
mov
dec
mov
icebp
dec
movsl
push
xchg
adc
pop
lret
cltd
inc
push
jnp
ljmp
jo
loopne
pop
dec
subb
mov
inc
pushf
ret
mov
int
xor
push
jmp
adc
div
sahf
fstl
xor
or
pusha
push
movsb
lahf
mov
mov
cmp
lret
inc
out
mov
xorb
pop
pop
outsl
lds
push
dec
cmp
sub
pop
iret
and
push
enter
pushf
sbb
das
incl
sub
mov
add
or
push
push
add
xor
leave
icebp
sbb
aas
lods
nop
and
ds
notl
test
mov
call
adc
cmp
ljmp
push
adc
jns
dec
pop
adc
push
mov
xchg
mov
fdivr
add
push
mov
mov
lods
popf
stos
test
xchg
or
or
orb
lcall
mov
in
xchg
mov
or
dec
and
sub
dec
pop
daa
and
dec
imul
mov
sub
and
leave
sbb
test
and
subb
shlb
out
std
dec
sub
jmp
xor
es
mov
inc
pop
push
subl
cmpsb
pusha
insb
jp
mov
lret
add
hlt
and
xlat
repz
xchg
call
dec
mov
jae
jbe
imul
mov
adc
xchg
faddl
cwtl
insb
push
aam
mov
cmpb
mov
pop
inc
mov
pop
fwait
iret
or
cmpsl
xchg
dec
jae
sbb
jge
add
jne
xor
push
mov
push
cli
mov
add
pop
push
sbb
cltd
xchg
or
xchg
cli
das
push
les
pop
jp
icebp
mov
mov
imul
testb
adc
pop
sub
hlt
xchg
mov
adc
adc
push
mov
ja
fidivs
mov
ret
ss
xchg
xchg
lods
fisttpl
dec
sahf
mov
jp
xchg
sahf
test
sbb
mov
aad
inc
orl
and
cld
sub
outsb
adc
push
inc
jmp
push
mov
mov
or
cmp
mov
sti
iret
mov
mov
sti
jb
or
xlat
push
pushf
jg
xchg
mov
or
sub
mov
sub
xchg
jl
cmc
add
push
in
iret
out
in
adc
sahf
jno
es
jb
in
inc
mov
xchg
sub
sbb
insb
out
js
lea
cld
or
pop
xor
insl
int
pop
jmp
sub
es
xor
mov
mov
test
inc
pop
shrl
iret
jns
sarl
mov
dec
jb
sub
pop
sbb
test
fstpt
xchg
jno
bound
aam
pop
sbb
fwait
pop
fildl
mov
mov
pop
hlt
in
jb
sub
dec
std
mov
dec
rcl
lock
dec
rep
sub
loope
mov
jno
jno
add
cmp
out
pop
lret
addr16
insl
jae
mov
cmp
sub
cbtw
ljmp
sti
rorl
jnp
iret
icebp
sbb
xor
jno
and
ds
rclb
mov
push
outsb
jge
insl
push
ss
es
xor
fwait
mov
movb
test
clc
std
jl
sbb
adcl
mov
shr
sbb
lods
out
test
int
out
jp
pop
inc
push
fisubl
fdivs
push
push
cmp
and
mov
movsl
les
push
sub
enter
stos
fdiv
stos
ja
fs
or
sub
cmpsl
fbld
loope
dec
xor
mov
dec
fidivrs
test
and
jno
movsl
test
jnp
call
push
aad
jmp
push
pop
adc
insb
mov
jecxz
movb
push
sbb
pop
stc
cmp
pop
or
dec
fdivrl
inc
fs
pop
rorb
lcall
xor
jmp
repnz
into
or
add
sub
test
hlt
mov
enter
dec
js
js
hlt
sub
push
pusha
mov
push
mov
inc
pop
xchg
inc
out
jg
fisttpl
add
aad
pop
push
call
rcl
adc
adc
in
in
lea
sub
cmpsb
pop
ja
xchg
in
adc
lcall
iret
pop
lahf
mov
inc
movsb
and
jle
imul
fsubr
leave
dec
nop
or
insl
inc
adc
jnp
push
xchg
cmp
leave
jo
jno
int
xchg
enter
aam
xlat
movsl
adc
movsb
in
lods
mov
pop
adc
pop
subb
dec
jnp
jo
les
add
adcb
dec
dec
dec
jns
mov
xor
jg
stos
pop
test
or
shl
sbbb
sbb
add
inc
push
mov
inc
out
cmpsb
jecxz
std
mov
or
fcomi
inc
push
and
clc
popa
pushf
jo
xchg
or
sub
cmp
lds
xchg
mov
mov
cwtl
sbb
cltd
fists
std
mov
loope
push
and
and
fwait
shrl
cltd
fisubs
std
jns
in
dec
lods
jbe
inc
jns
or
mov
sbb
xorl
test
cli
nop
push
test
mov
and
cs
stos
jecxz
les
adc
addr16
mov
and
aam
outsb
pop
push
mov
ljmp
mov
clc
inc
scas
ss
dec
sbb
adc
adc
stos
push
mov
add
loopne
xchg
js
mov
or
xor
push
mov
inc
jns
xor
int
jecxz
inc
stc
rcrl
mov
ror
fsubrp
sub
push
or
data16
add
dec
fldt
out
jp
dec
mov
sub
pop
dec
sbb
mov
addr16
inc
test
sbb
es
mov
repz
out
gs
mov
cmp
rcrb
mov
js
jo
xchg
pop
xor
in
or
arpl
inc
shr
xchg
ljmp
cmp
imul
pop
cwtl
sub
pop
stos
inc
outsl
push
push
push
aam
rcr
fwait
cmp
repz
sbb
cltd
pop
stos
movb
and
in
fistpll
xlat
ljmp
lock
xchg
fwait
imul
mov
sub
out
out
insb
sbb
into
scas
fcompl
dec
loopne
aaa
xlat
dec
add
jne
mov
mov
in
scas
imul
clc
and
mov
pop
dec
in
sub
cmp
call
test
aas
aam
outsb
xchg
sub
cs
or
adc
cmpb
test
sbb
dec
adc
pop
pusha
aaa
lods
in
stc
push
scas
push
xor
mov
shlb
push
pop
sub
pushf
int
push
dec
mov
stos
les
jne
dec
jae
jl
repz
cmpsb
in
inc
mov
cmp
push
in
and
fs
sub
push
jne
or
xchg
ror
imul
add
fcmovbe
jle
ds
mov
int
adc
or
cmp
adc
sti
xorl
sbb
outsl
insl
xchg
out
mov
cmp
cld
std
mov
fcomps
push
adc
cmp
mov
push
pop
pushl
cmp
push
nop
pop
dec
popa
mov
fsub
das
mov
gs
push
aas
ljmp
jns
aam
lcall
add
add
lcall
dec
mov
mov
mov
cwtl
sub
lock
push
pop
cmp
cltd
dec
and
lret
cld
test
repnz
cmc
mov
icebp
jg
mov
jmp
pop
xchg
fsubl
mov
add
fbstp
call
test
xchg
jmp
mov
es
aam
jg
mov
jns
adc
pop
sub
in
jnp
lods
insl
stos
cmp
or
jae,pn
arpl
pop
mov
xlat
das
imul
and
jnp
pop
decb
cmpsl
and
ja
ficoml
stos
out
ret
subb
insb
jmp
xchg
stos
popf
addr16
push
movsl
jns
push
sub
or
pop
push
movsb
jns
fs
movsb
pusha
xor
insl
cmp
xchg
test
xor
dec
mov
ds
popa
sub
addl
fcomp
out
and
addb
arpl
jge
push
xchg
shll
in
push
fstpt
xchg
fdiv
mov
fiadds
adc
aam
ljmp
lds
int
out
mov
lahf
or
mov
mov
adc
fsts
mov
dec
nop
cli
in
inc
xchg
xor
ja
mov
call
xchg
ljmp
ja
mov
lcall
sbb
rcrl
daa
jg
lds
and
sbb
lds
mov
add
xchg
dec
adc
xchg
adc
data16
cs
cmp
mov
inc
pop
xchg
daa
popf
jb
lret
and
xor
xchg
stc
ss
dec
adcl
mov
xchg
mov
icebp
jo
gs
jle
mov
ds
iret
loope
stc
pop
outsl
adc
xor
outsl
jbe
xchg
mov
push
push
mov
rorl
subl
mov
mov
test
call
and
mov
jle
int3
scas
cmp
cmp
rcrl
xchg
sbb
scas
outsl
jp
insl
push
mov
dec
sahf
leave
xor
ds
mov
inc
mov
cmp
cmpsl
add
in
cmpsb
mov
sbb
pop
add
push
cmp
test
in
rorb
out
jbe
shlb
push
add
mov
push
push
inc
rolb
int
ss
ret
pop
push
pushf
std
movsl
pushf
leave
cwtl
andl
xor
in
ret
and
cltd
daa
in
aaa
dec
push
xor
pop
es
cmp
or
add
jbe
push
std
mov
fsubrs
jl
test
dec
hlt
mov
jo
and
inc
inc
rcl
jmp
xlat
or
jo
mov
fstps
incl
inc
or
mov
lea
cmp
cli
jo
push
cltd
adc
lahf
push
mov
inc
push
xor
in
scas
dec
sbb
jl
xor
push
push
mov
sahf
aam
mov
mov
fdivrs
ja
lock
outsl
pop
cwtl
pop
cmp
and
or
pop
mov
stos
jb
into
adc
add
imul
daa
dec
push
popf
test
je
dec
sub
sub
mov
mov
mov
push
lcall
mov
and
inc
gs
or
test
imul
adc
push
push
nop
jns
aaa
sub
andb
mov
lret
cmpsb
or
cmp
ficompl
in
jb
lods
and
cmp
push
ror
enter
inc
lock
pop
cmpsb
inc
add
xor
pop
jbe
pusha
jmp
pop
cmc
iret
push
jo
fsubrs
in
inc
gs
mov
pop
gs
jns
test
cmp
scas
mov
dec
int
add
add
data16
push
pop
adc
ret
mov
andl
ss
mov
adc
cld
outsl
mov
ds
aas
lret
add
xchg
push
sbb
aad
test
call
xchg
mov
or
inc
mov
aam
test
in
mov
rorl
and
rorl
sub
fmull
or
jecxz
movsl
loopne
outsl
xchg
test
push
dec
add
and
pop
and
fld
data16
fst
sub
cmp
cmp
adc
sub
inc
aam
mov
adc
mov
mov
fnstcw
inc
adcl
scas
test
xchg
in
mov
xor
ljmp
outsb
shrb
dec
fcomps
test
push
nop
or
pop
in
mov
dec
test
adc
inc
and
pop
fstpt
xchg
scas
loope
adc
xlat
out
xchg
xchg
push
xor
fstpt
sub
aaa
ret
add
cmp
and
push
out
or
adc
frstor
xor
popa
push
pushf
jg
adc
push
jle
jne
adc
arpl
ds
cmpsl
sti
pop
cmp
inc
sbb
in
add
lock
mov
mov
lcall
mov
dec
aaa
sbb
insb
popa
xor
and
ja
xchg
mov
sarl
lea
pop
xor
cmp
fs
push
shrl
jae
jecxz
push
dec
adc
sub
data16
inc
mov
lea
pop
in
jle
xchg
repz
cmpsl
enter
pop
cwtl
inc
stc
inc
ljmp
push
scas
fsubrl
xor
out
add
aam
lods
xor
je
jb
ds
lret
out
mov
std
scas
test
mov
arpl
jbe
test
in
inc
and
cwtl
call
jae
nop
es
imul
inc
int3
repz
cld
jmp
mov
xlat
scas
cltd
bound
fld
scas
mov
mov
push
and
addb
jno
fstpl
cmp
push
cmpsl
mov
xchg
jb
cltd
testb
pop
add
cmp
ret
push
adcl
inc
mov
cmpsl
leave
or
jae
dec
mov
xor
fistl
mov
lret
outsl
sbb
sbb
jnp
cwtl
iret
sahf
or
pop
add
cmp
mov
pop
js
je
insb
int3
das
cmp
xchg
int
or
adc
lret
sub
xchg
lods
in
push
dec
mov
jne
pop
xor
sahf
pop
push
dec
ss
xor
and
push
sbb
jmp
jecxz
and
ret
mov
popf
adc
imul
ffree
roll
fdiv
int3
xchg
xlat
mov
pop
mov
mov
add
xor
in
xor
jb
repnz
in
sahf
add
mov
jge
icebp
dec
pop
sahf
mov
push
and
enter
inc
mov
cld
fimuls
cmpsb
stos
push
cmpsb
fsubr
lahf
or
aas
xor
mov
test
and
fistps
xor
cmp
aad
jbe
nop
gs
outsb
mov
mov
fsub
push
orb
je
push
fwait
shrb
lret
bound
mov
add
inc
iret
ret
add
xchg
out
xchg
test
or
mov
mov
popa
sub
inc
mov
and
push
sarb
das
xchg
jp
jle
mov
ds
xchg
out
lds
lret
test
mul
adc
int3
add
in
jmp
and
cmp
or
push
push
mov
add
arpl
dec
sub
in
sbb
mov
pop
dec
lret
loope
icebp
cmp
sub
sub
out
stc
xor
mulb
in
pop
repz
insb
int3
lret
scas
loop
jg
and
mov
loop
jp
pop
in
xor
mov
jae
in
mov
adc
out
and
cmp
data16
ss
push
jo
mov
std
pop
fcomps
push
movsl
xorb
insb
adc
movb
lods
jnp
sbb
xlat
xor
pushf
add
dec
std
push
mov
hlt
sbb
mov
jmp
loop
pushf
imul
lods
clc
add
sbb
and
popa
and
inc
xchg
loop
cmpsl
sbb
pushf
in
or
out
mov
inc
sbb
xchg
cmp
sub
mov
or
fwait
pop
or
mov
or
dec
jno
popf
outsb
sbb
mov
xchg
jo
popa
icebp
addl
cwtl
jno
sbb
jl
adc
mov
push
or
cmc
jmp
imul
xor
iret
movntq
pop
vpcmpgtb
xor
pop
sti
mov
scas
or
ficompl
push
push
shlb
xor
bts
mov
jb
jo
or
pushf
sub
ljmp
push
ljmp
dec
lds
mov
jo
push
jne
xchg
negl
dec
add
cwtl
insl
sub
or
pop
jl
fldenv
stos
test
aas
cmp
xchg
mov
ret
shl
sarb
push
mov
icebp
dec
std
or
jbe
test
popf
pop
xor
lods
int3
sub
push
or
bswap
call
jns
gs
dec
mov
inc
sub
push
jno
ljmp
pushf
add
mov
sub
push
xchg
iret
pop
mov
sahf
sub
leave
lea
jbe
stos
inc
and
sub
add
lcall
lret
or
aas
ja
imul
mov
push
xchg
sti
cs
and
mov
push
xlat
stc
pop
mov
mov
jp
add
cli
pop
push
adc
pop
jmp
push
scas
fisttpl
mov
fisttpll
inc
xchg
orl
loope
insl
mov
jle
or
xor
daa
jo
jno
fisubs
dec
or
dec
cwtl
pop
inc
insl
nop
pop
mov
jns
lock
and
les
loope
daa
movsl
push
mov
pop
inc
cmp
ljmp
inc
test
or
fidivl
pop
and
cwtl
cmpsb
ljmp
push
insb
icebp
lret
scas
cmc
loope
inc
pop
cltd
cmp
push
mov
and
cmpsl
push
or
sbb
xor
in
xlat
jecxz
push
push
cli
mov
add
cli
mov
xchg
push
cmp
sub
push
sub
test
lahf
xor
daa
fsqrt
and
or
push
js
xor
out
sbb
stc
and
rorl
dec
add
mov
xor
stos
test
jbe
inc
aam
push
into
lret
push
and
test
ret
addb
loop
sub
jo
push
movsl
jo
ficoms
lea
add
scas
jo
xchg
mov
sub
add
sbbb
push
sbbl
sbb
cmpsb
or
repz
ficoml
les
xchg
or
and
push
daa
leave
jmp
fdivrl
pop
cmpsl
jno
lock
mov
ret
push
lds
pop
pop
sbb
lahf
icebp
mov
inc
das
xchg
lahf
push
xchg
insb
xchg
dec
sbb
pop
cltd
mov
pop
pop
dec
push
aad
fisttps
sub
inc
dec
arpl
mov
pop
test
mov
push
sbb
or
fldl
sbb
dec
divb
mov
lret
pop
add
scas
jge
sub
jne
adc
pushf
sbb
fsts
mov
xor
adc
pusha
mov
nop
adc
mov
inc
pop
or
mov
repz
mov
cmp
daa
inc
add
incb
je
imul
mov
cli
cltd
cmc
push
lock
in
ret
clc
insl
divl
lahf
fwait
push
rolb
mov
push
sub
addb
jnp
mov
cmpsl
orb
test
xchg
fcoml
dec
mov
mov
xor
outsl
cmp
outsl
jo
cmp
daa
add
outsb
add
pusha
out
push
pop
pushf
xchg
lret
lret
mov
jg
mov
jns
or
pop
jg
cld
jnp
mov
push
inc
mov
pop
push
jg
ljmp
adc
cmp
mov
add
popa
jecxz
add
cli
test
xor
jne
cltd
aas
mov
test
xchg
jb
push
bound
sub
movsl
jnp
xor
push
sbb
stos
lret
sub
ret
adc
fisttpll
gs
xor
test
dec
shrb
jnp
jo
xchg
popw
mov
xor
fwait
mov
cmp
lods
and
sbb
xor
ss
int
push
punpcklbw
imul
jns
repnz
into
lds
push
mov
and
test
loop
test
leave
add
fwait
lock
cmpsl
mov
outsb
sub
in
cmpsb
outsl
pushf
test
es
ret
gs
insl
push
xlat
push
xchg
jbe
xor
xchg
shll
hlt
movsb
pop
shll
sub
mov
lods
or
dec
test
popf
jle
cmc
add
sbb
lea
in
pusha
fsubp
and
pop
hlt
or
cmpsb
fcoms
dec
test
mov
mov
inc
dec
xchg
sarb
cmp
sbbb
push
in
pushf
push
push
sahf
insb
ja
mov
mov
lahf
loopne
xor
popf
sbb
dec
mov
daa
aam
push
push
scas
das
or
je
aaa
lock
xchg
sub
jb
sbb
cmp
pop
lret
dec
test
popf
adc
add
fstpl
and
das
xchg
dec
xchg
outsl
mov
das
repnz
jae
mov
and
sbb
sbb
fcmovnu
or
stos
repz
in
cmp
les
clc
rcrl
pop
jae
jnp
stos
xchg
or
or
mov
mov
jmp
sti
xchg
and
pop
cltd
xchg
fiadds
sbb
flds
sti
mov
daa
jecxz
leave
imul
loopne
xor
mov
adc
adc
cmp
dec
je
xlat
out
xchg
test
push
pop
aas
xchg
push
jnp
andb
push
xor
mov
jp
das
in
sbb
andb
or
mov
mov
rolb
scas
fmul
lds
add
test
xchg
mov
cmc
xor
xlat
lock
pop
loop
jae
ret
stc
rolb
cltd
stc
fisttpll
lcall
lock
adc
add
idiv
push
lods
movb
mov
inc
hlt
das
mov
dec
in
aad
xor
fistl
movsl
push
ficoml
xor
inc
sti
fidivs
mov
add
mov
and
mov
clc
sub
popa
dec
ds
sbbb
hlt
xlat
div
mov
cmpsl
sub
jg
mov
push
mov
jne
pop
data16
stos
fcomps
repz
mov
decb
jnp
sbb
outsl
icebp
and
insb
cmp
mov
pop
and
or
cmpsb
or
les
xor
sub
mov
popf
gs
incb
xchg
fsubp
loopne
inc
mov
lret
cmc
mov
or
mov
fmuls
pop
pop
dec
cmp
mov
fdivr
in
sub
push
bound
ret
mov
nop
ret
inc
adc
cmp
adc
mov
jnp
xchg
sbb
mov
ja
jb
fcoms
xchg
push
sbb
fistl
add
push
ja
adc
add
push
ja
movsb
aad
int
sub
aas
loope
mov
jecxz
dec
adc
imul
int
ds
loopne
addr16
test
inc
test
mov
sti
sbb
sub
mov
icebp
xchg
out
inc
mov
out
xchg
aad
js
jns
aas
lods
pop
mov
jl
mov
loopne
pushf
stos
sbb
xchg
sbb
int
dec
xchg
clc
jno
adc
inc
dec
mov
repnz
decb
sub
sbb
push
mov
push
jnp
frstor
in
int3
js
jmp
cmp
idivl
sub
aad
fucomi
cld
mov
ret
out
nop
pop
sub
and
fdivr
scas
jno
sbb
daa
sbb
inc
push
popf
sahf
inc
out
js
push
mov
cmpsl
jmp
xor
loope
xor
xor
and
or
sub
add
push
icebp
cmp
xchg
psubq
xchg
aad
mov
mov
in
mov
mov
or
in
mov
stos
xor
dec
sub
sbb
mov
add
xchg
inc
cltd
dec
stos
pop
jnp
or
dec
pop
xchg
jne
jecxz
pop
xchg
xor
mov
mov
xor
lahf
daa
adc
sub
lods
dec
inc
out
and
pushf
leave
sub
sar
cmc
jo
aaa
xor
filds
mov
push
shlb
pop
je
mov
ds
lahf
push
jno
add
pop
push
and
inc
pop
lods
scas
outsb
cmpsl
pushf
cli
pop
pop
jns
or
repnz
icebp
add
and
jnp
xchg
pminsw
push
in
aaa
scas
lret
push
ss
pop
push
scas
lods
fcompl
into
adc
dec
or
movsl
push
aam
stos
ret
push
sub
xchg
xchg
ret
clc
repnz
je
stc
mov
test
scas
cmp
mov
cwtl
mov
lods
mov
xor
or
pop
adc
pop
outsb
lock
imul
addr16
xor
mov
adc
push
orb
inc
loopne
dec
xor
les
xor
xor
inc
mov
loopne
inc
jle
mov
add
loopne
mov
int3
mov
jb
jne
cmp
sbb
outsb
test
cmp
sub
pusha
mov
addr16
mov
xor
ret
mov
xchg
push
insb
fildll
bnd
clc
cmc
add
out
mov
mov
mov
loop
cmp
pop
add
mov
or
je
jo
sbb
dec
mov
int
in
das
lods
loope
jae
ja
clc
outsb
mov
mov
jne
das
pop
and
xchg
push
stos
pop
ja
leave
mov
rclb
dec
dec
mov
nop
cmc
ret
add
sub
xchg
enter
mov
fildl
pop
je
push
sbb
ss
cmp
cmp
call
add
notl
mov
lret
jmp
nop
pop
shlb
in
sbb
cmp
test
imul
add
xor
cmp
call
xor
aam
sub
jl
pop
mov
xorb
mov
sub
out
sub
fidivs
pop
shl
push
bound
jl
xchg
lock
insb
test
pop
ja
pop
sub
bnd
jge
mov
aad
mov
lret
mov
push
jmp
cmc
pushf
icebp
jecxz
sub
sbb
scas
mov
in
pusha
in
cmp
icebp
fdivr
pop
xchg
in
stos
pop
inc
fwait
testl
pop
jmp
les
jg
je
pusha
ds
push
enter
lret
jecxz
xlat
xor
enter
push
cs
in
mov
jge
jecxz
mov
add
je
ds
leave
adc
jl
int3
aas
test
sarb
jge
mov
and
lea
jle
out
ljmp
stos
xor
push
xor
rclb
or
aad
jmp
cmp
outsl
sbb
sub
xchg
pop
enter
aaa
mov
cmpsb
lret
cld
gs
insl
ror
repnz
add
enter
shrb
and
pop
dec
dec
lods
push
in
pop
daa
mov
add
push
push
lock
int3
pop
jle
insb
pop
ret
mov
ret
push
inc
in
in
stc
callw
add
mov
rcr
cmc
stc
dec
out
sahf
aad
add
add
mov
push
mov
cmpl
mov
movsl
sbb
out
outsl
adc
inc
sbb
insb
shll
scas
xchg
hlt
mov
arpl
rcrl
push
lret
jne
cmpsb
push
or
and
add
pop
mov
outsb
sbb
stos
push
lcall
pop
inc
test
insl
inc
addr16
cmp
xchg
pop
pop
inc
jp
jmp
pop
lcall
fldenv
lahf
sub
outsb
shl
fstpl
je
jae
out
in
pop
add
lods
ror
inc
mov
lock
jbe
into
insl
jmp
clc
inc
rcl
inc
pop
mov
lret
out
insb
cmp
pop
mov
aaa
enter
divl
aad
ljmp
xor
push
jns
inc
mov
inc
jae
jbe
aas
mov
jecxz
or
inc
mov
xabort
jl
mov
add
sub
xchg
cmp
ljmp
adc
cmp
cmp
rcll
xor
loopne
ljmp
or
faddl
sti
mov
adc
jmp
sub
movups
pop
mov
sub
popa
dec
cld
pop
push
imul
rclb
adc
push
cmc
adc
cmp
pop
into
add
jge
test
mov
xchg
push
pop
popa
mov
sarl
add
xchg
inc
xor
and
or
adc
push
mov
int3
mov
and
add
in
roll
fcmovbe
sbb
test
aas
inc
add
je
je
jmp
loop
test
xchg
lea
mov
or
lea
lret
clc
push
das
ret
sub
xchg
scas
lods
pop
shll
lahf
lea
test
adc
sub
dec
pop
insl
cltd
mov
xchg
out
inc
inc
pushl
jbe
ret
adc
xor
ljmp
mov
aad
cmpsb
int
lcall
mov
or
jmp
xchg
and
pop
inc
in
clc
sub
ja
stos
cld
int
push
dec
mov
push
cwtl
dec
pushf
int
inc
or
and
dec
xor
fisttpll
mov
ret
add
jmp
bound
or
or
scas
cmp
push
xchg
roll
scas
fnstsw
fists
or
int
xchg
std
out
mov
or
pop
inc
out
lcall
in
jl
out
or
js
arpl
testb
idivl
dec
jg
mov
ja
mov
jge
pusha
mov
add
xchg
pop
ja
jp
clc
or
and
jns
jae
arpl
mov
in
push
xchg
out
ret
aaa
cmpsb
cmp
jl
adc
dec
and
cmp
sub
xor
cmp
inc
mov
int
and
loopne
xor
jge
inc
popa
jns
jg
lds
outsb
jmp
dec
bound
shlb
sub
push
shrb
xchg
cmp
out
jmp
imul
fsub
lods
adc
push
sbb
xorl
sub
and
dec
outsl
mov
jbe
int
fnstsw
stos
fildll
call
or
or
scas
and
sbb
bound
pop
jno
jb
push
mov
mov
mov
out
mov
mov
ja
stos
mov
pop
pop
das
mov
mov
or
int
pop
cmc
mov
sti
mov
scas
int
fcompl
mov
add
movsb
shll
sub
nop
mov
stc
mov
xor
cmp
push
mov
cld
adc
inc
sub
ljmp
lret
jo
out
dec
sahf
push
leave
mov
mulb
popf
rolb
mov
and
pop
jno
inc
push
xor
inc
into
insb
arpl
mov
pusha
das
adc
or
mov
mov
mov
popa
aas
xchg
dec
mov
pop
dec
pop
adc
bound
jbe
cmpb
xor
dec
xchg
in
push
das
sub
fsub
push
ljmp
mov
outsb
fidivrs
jne
shrl
push
lea
shr
jnp
out
lcall
add
arpl
repz
das
ja
mov
mov
xor
xor
push
frstor
filds
test
push
cwtl
pop
test
cmpb
fbld
rcrl
out
mov
lea
add
bound
push
sub
mov
cmpsl
test
repz
lods
sbb
pop
pushf
sar
int
inc
popl
decb
cmp
popa
cmpsb
inc
mov
aam
sbb
xor
add
ja
add
mov
jbe
cmp
pop
jge
inc
call
out
leave
sub
jl
stc
mov
or
outsl
jae
push
sbb
adcb
cmp
lahf
dec
cltd
aas
xor
scas
popl
jl
adc
and
inc
xchg
insl
sbb
ljmp
and
xchg
fnsave
faddp
mov
and
subl
lret
mov
push
in
xor
jmp
arpl
lret
push
inc
mov
imul
cs
addr16
pop
jae
cmc
cmp
mov
xchg
and
lcall
lods
lcall
push
pop
mov
jbe
lods
rclb
xor
cmc
mov
mov
les
jno
ds
sbb
in
pusha
sti
nop
xchg
sub
orl
xor
lods
lret
js
lret
lock
cmpsb
in
decl
loope
aad
pop
dec
pusha
adc
and
jae
pop
mov
jmp
add
mov
xchg
add
aas
add
mov
jae
adc
rcl
xchg
mov
loopne
push
call
cld
jl
notl
popf
add
pop
lcall
popl
mov
push
jle
scas
je
sub
adc
jle
adc
pop
jp
xchg
rcll
jle
data16
clc
xor
adc
mov
jle
lock
add
pushf
add
in
testl
mov
mov
icebp
push
cmp
dec
insl
inc
enter
push
scas
hlt
loope
mov
enter
adc
lahf
xor
pop
test
adcl
jg
ret
push
out
push
jnp
dec
sbb
jno
lock
push
cmp
inc
xor
int
jns
inc
pop
inc
hlt
add
insb
and
repnz
sbb
sbb
cmp
fwait
aad
mov
sbb
jb
aam
lea
lds
xchg
cmp
jl
pop
mov
sbb
rcrl
sub
sub
push
or
jb
push
pop
cmpsl
jmp
movsl
test
loopne
out
add
in
testb
cmc
insl
jo
xchg
sub
ja
ljmp
jmp
addr16
cld
jbe
inc
push
and
adc
lret
in
inc
push
adc
call
push
or
add
jg
pop
or
lods
repnz
outsb
sub
jbe
jo
dec
mov
dec
and
jb
cmpsl
cltd
dec
or
push
mov
dec
bswap
push
push
sbb
mov
or
or
es
pop
das
enter
push
xchg
test
bound
sti
es
mov
xchg
inc
and
mov
fisubrl
cmpsb
loop
cmp
push
or
mov
push
adc
ljmp
cmp
out
and
aas
xor
pop
xchg
dec
lret
dec
xchg
aas
xchg
xor
ret
jo
lock
repnz
pop
out
subb
int
ror
dec
emms
push
mov
adc
ljmp
lcall
mov
call
push
inc
adc
cmp
pop
pop
mov
movsb
mov
mov
imul
fsubrl
or
roll
mov
add
dec
clc
cld
dec
push
cmp
rolb
out
or
outsb
xchg
cmc
adc
push
push
pop
xchg
or
stos
scas
hlt
jo
cmpsb
punpckhwd
sarl
lea
push
add
out
push
push
pusha
pop
in
xchg
or
ljmp
push
test
dec
and
shll
addr16
ret
cmp
icebp
es
outsl
add
and
lods
pop
dec
mov
sbb
sbb
pusha
jg
inc
dec
push
mov
xchg
fmull
jo
dec
std
aaa
dec
mov
dec
out
out
lahf
adc
aaa
jecxz
push
xchg
leave
jbe
or
mov
mov
push
shrl
adc
imul
add
iret
sub
xor
popf
test
mov
rorb
and
aad
int3
fsts
and
and
cmc
dec
xchg
insb
imulb
out
mov
or
lcall
xchg
jp
popa
push
int
cwtl
or
sbb
aam
xchg
mov
pop
pop
pop
lret
insb
test
pushf
cmp
push
insb
pop
pop
inc
push
sti
push
in
pop
xor
loope
cmp
dec
or
dec
push
idivl
rcr
add
cmp
or
push
loop
fwait
pushf
je
push
sub
dec
cs
mov
es
or
pop
adc
sub
xchg
push
jle
jge
xorb
jl
inc
lea
or
pop
gs
insl
aad
cmp
jb
xchg
xchg
mov
jle
push
pop
sbb
fwait
mov
xor
jbe
lds
clc
cmpsb
pushf
and
ljmp
pop
andl
idiv
add
mov
cmpsb
in
pop
iret
pop
adc
fsubr
testb
xchg
xor
pavgw
fimull
push
dec
arpl
jge
jle
sarb
js
mov
inc
xor
xor
jp
push
imul
xor
in
bound
fdiv
repnz
inc
push
fistpll
sbb
pop
addl
daa
out
int3
cmpb
inc
ss
mov
lret
int3
add
loopne
das
int3
push
faddl
lods
int
fstpl
andl
jne
push
sbb
add
out
sub
pop
pop
fs
fidivrl
scas
mov
lret
es
lahf
pop
dec
sbb
in
pop
cld
xor
add
add
sub
bound
test
in
movsb
fdiv
sbb
inc
in
mov
and
push
and
push
ss
dec
in
xchg
sbb
inc
mov
push
imul
xor
out
dec
jle
jnp
push
inc
sbb
sub
test
jo
xchg
sub
jns
or
or
inc
sbb
dec
loop
out
popa
dec
loope
cmc
add
popa
gs
mov
scas
in
push
cmpb
test
daa
mov
cmpb
les
imul
cmp
xlat
mov
das
push
in
movsl
mov
loop
push
fsubr
xchg
ret
sbb
dec
adc
xchg
sbb
adc
sbb
adc
xchg
mov
xor
scas
push
test
inc
sahf
aaa
add
cltd
out
lret
adc
and
mov
mov
cmp
mov
mov
insb
pop
push
fildll
sbb
lret
sub
inc
pop
push
out
movsl
lock
iret
ret
xchg
jne
lea
mov
sti
inc
andb
test
adc
insl
and
mov
dec
popa
sbb
dec
jecxz
mov
adc
add
sbb
sbb
outsl
cmpsl
xor
xchg
rcrl
gs
mov
rcrl
in
inc
xor
fnstcw
xchg
gs
pop
mov
or
lock
xchg
mov
mov
pop
hlt
fsts
ljmp
mov
dec
pop
shr
cmp
sub
fs
je
out
andb
movsb
dec
arpl
jae
mov
or
dec
push
mov
mov
cmpsb
xchg
pop
add
pop
bound
gs
push
inc
or
jne
sbb
xchg
repnz
out
mov
in
cli
inc
jge
inc
fxch
decl
xchg
lods
inc
out
ja
sbb
cmp
mov
or
ja
cmp
movsl
adc
repnz
add
and
rol
add
jnp
js
sbb
jle
mov
adc
movnti
gs
je
mov
pop
jle
mov
jle
sub
xlat
xor
stc
sbb
xor
cmc
fs
mov
push
adc
or
cli
inc
divl
movsl
jne
aas
inc
pop
iret
jo
in
mov
mov
dec
outsl
imul
inc
jl
mov
mov
adc
mov
push
arpl
mov
jecxz
sbb
push
push
out
cld
jge
fs
xor
dec
inc
gs
pop
mov
shlb
testb
xchg
inc
lcall
aad
xor
and
jecxz
in
xor
push
enter
aas
and
lahf
cmp
ret
gs
test
push
in
cwtl
into
fnstenv
fs
call
push
inc
xchg
fnstcw
sbb
sbbb
adc
data16
pushf
xchg
call
testb
loope
xlat
and
inc
cmp
scas
xchg
mov
jns
stos
inc
xor
in
stc
pop
xchg
sbb
pusha
push
out
mov
rolb
imul
add
lret
xchg
mov
ror
je
lock
imul
out
mov
je
xchg
test
ljmp
fwait
mov
aaa
cmp
out
mov
cmp
lock
sarb
rorb
shrb
mov
add
mov
out
shrl
mov
in
jno
mov
sub
filds
adc
dec
cltd
stc
mov
lret
sbb
cmp
mov
mov
mov
sbb
xor
dec
iret
push
sbb
pop
dec
outsl
jl
scas
shlb
jmp
or
sub
int3
popf
je
mov
ret
out
mov
mov
cmp
lcall
inc
sub
loop
or
std
inc
and
pushf
pop
inc
sbbl
or
mov
push
fsubr
divl
mov
daa
sbb
cs
cmp
mov
int
out
jbe
pop
data16
mov
xor
cwtl
lods
mov
xor
add
pop
jnp
stos
insl
dec
orl
clc
pop
fdivs
sbb
adc
mov
and
xchg
xchg
rolb
ja
ds
mov
icebp
jb
jg
mov
fsubl
mov
xchg
jmp
mov
inc
sbb
cmp
push
loop
lret
inc
mov
mov
dec
sub
stc
or
jmp
sbb
and
xchg
xor
push
repnz
mov
cwtl
outsl
ror
adc
shrl
das
loope
cmp
sub
mov
fbld
mov
nop
ficomps
std
jbe
pop
aaa
pop
or
test
inc
inc
stos
jle
rol
lret
sub
clc
mov
lret
js
popf
jp
jp
cmp
out
ljmp
adc
test
add
or
repz
jmp
lds
pop
xchg
or
mov
ljmp
in
adc
cmc
lret
rorl
xlat
jae
jno
or
in
test
cmp
and
mov
fisubrs
inc
repz
ds
jbe
xchg
adc
push
test
scas
pop
cmp
pop
sar
movsl
sti
adc
mov
adc
test
mov
frstor
cwtl
push
lret
push
aam
test
in
mov
inc
adc
push
mov
mov
aam
repz
mov
std
pop
xchg
inc
lret
jl
notl
push
rorl
cmp
mov
aad
xchg
shll
in
ror
xchg
mov
xor
orl
lods
cltd
and
ljmp
and
fimull
pop
mov
xchg
and
insb
lock
movsl
fs
pop
pop
or
arpl
mov
sbb
fcomps
inc
test
jo
insb
subl
mov
mov
and
mov
mov
jl
dec
or
loop,pt
jo
test
subb
loope
call
or
sbb
mov
and
mov
dec
xor
ss
jae
sub
insb
add
loopne
jae
nop
enter
imul
ret
scas
lds
inc
out
cmpsl
cmp
fxsave
ja
pop
vfrczss
dec
into
out
or
jp
add
cmp
lock
jecxz
and
aaa
jbe
int3
sbbl
sub
arpl
mov
sub
fwait
adc
sarb
jge
cmp
xor
xchg
mov
push
add
push
jnp
jg
pop
xchg
stc
mov
les
xchg
ret
push
cmp
ljmp
sbb
sbb
mov
fbld
addb
and
xor
adc
js
cmc
mov
mov
daa
fs
out
dec
xchg
mov
mov
dec
mov
and
cmp
pushl
mov
xor
xor
fldenv
sub
jecxz
mov
fiadds
and
js
dec
sbb
pop
lock
push
rorb
mov
ret
and
xor
xor
call
push
fstpt
ret
pop
test
cmp
icebp
sub
inc
sub
out
cmpsl
add
mov
xchg
repz
imul
add
sub
lahf
pop
ljmp
pop
mov
mov
ja
sbb
rcrl
sti
push
mov
data16
lods
movsb
les
inc
mov
mov
mov
cwtl
jle
mov
or
xorl
mov
addr16
add
xchg
insb
mov
mov
and
ljmp
mov
cmp
sbb
push
pop
mov
jg
addl
std
xchg
inc
or
lods
pop
pop
loop
sahf
test
or
je
fistps
ret
inc
or
in
ds
mov
subb
pop
rorb
pusha
pop
lods
or
lret
in
andl
nop
movsl
nop
aaa
cmp
sub
mov
cmpsb
xor
cltd
repz
iret
jecxz
or
jl
aam
jno
push
pop
xor
aam
xor
movsb
inc
sti
push
mov
adc
sub
push
mov
adc
pop
std
sbb
mov
push
mov
jp
arpl
cmp
sti
xchg
mov
and
popf
mov
dec
pop
out
or
stos
and
test
add
pop
lock
pop
mov
fbstp
les
fs
mov
std
jns
imul
cs
mov
jbe
lds
mov
cmpl
sub
xchg
jo
dec
and
test
js
aas
mov
xlat
test
fwait
xchg
imul
and
cmc
cmp
add
outsb
incb
xchg
add
push
xchg
add
mov
lret
stos
mov
cli
inc
in
xchg
sbb
cld
lret
sbb
or
mov
bound
mov
into
jnp
xor
imul
or
or
push
push
icebp
mov
fdivs
out
rcr
mov
ret
mov
pop
cmp
bound
fucomi
add
into
loope
xchg
dec
xchg
cmp
lods
mov
fstl
adc
sbb
in
pop
ja
mov
fbld
cmc
sub
insl
lret
bound
inc
fwait
xchg
inc
pop
shrb
int
jl
add
or
jns
xacquire
mov
movsb
push
jo
and
lcall
ds
sub
cmp
ficoml
out
pop
jns
xchg
cmp
clc
mov
lret
mov
jno
and
rolb
mov
and
scas
fnstsw
push
add
mov
mov
ret
hlt
xor
push
addb
scas
data16
mov
int
jp
mov
jmp
and
out
mov
arpl
lods
push
sbb
out
pop
mov
pop
rorl
adc
and
ret
nop
inc
pop
sbb
loope
jo
xchg
xchg
pop
sbb
pop
arpl
xor
jecxz
push
ljmp
pop
in
mov
sahf
push
add
cli
mov
and
add
mov
mov
mov
dec
xchg
ss
sbb
in
aaa
xchg
jne
imul
mov
dec
loopne
xchg
stc
inc
aaa
lret
in
popfw
mov
xorb
pop
stos
std
sub
mov
cmp
add
push
or
xchg
aas
cmc
jb
sub
clc
dec
lret
lahf
stos
rol
adc
test
shrb
or
dec
aas
mov
movsb
add
jg
in
push
jne
pop
pop
cmpsl
cmp
mov
push
ljmp
inc
sub
out
aas
pop
jb
sti
movsb
subl
inc
repz
sbb
in
mov
scas
stc
cmc
lcall
inc
xchg
jg
cmp
rorb
jb
xorl
arpl
rorl
in
ds
div
enter
xlat
decl
lcall
pop
out
int
pop
sbb
cli
shrb
adc
scas
lods
pushf
aaa
movsb
out
enter
icebp
or
push
lret
inc
sbb
ret
fistpll
adc
lcall
sub
out
inc
mov
loope
jp
call
xor
scas
stos
sbb
js
addr16
data16
loope
lret
cltd
mov
push
addr16
test
adc
icebp
pop
clc
loopne
fdivr
loope
ss
xchg
add
mov
and
and
insl
jge
popa
fistpll
sbbl
aas
jle
inc
call
cmp
cmp
adcb
add
into
pop
adc
adc
nop
jle
xor
fs
mov
adc
lahf
std
jne
std
push
and
fnop
sti
int3
mov
ss
enter
fcomi
xor
mov
sbb
inc
flds
jns
jg
pushf
icebp
add
ja
inc
xor
xor
mov
add
fisttpl
cwtl
lahf
adc
pop
cmp
and
jecxz
adc
jno
pusha
mov
int
stos
icebp
icebp
fldl
inc
push
xchg
xchg
jns
in
clc
shrl
push
jecxz
sub
add
inc
cltd
outsb
ss
dec
xchg
sti
fidivrl
loop
into
add
pop
fsub
negl
or
xchg
imul
ret
setl
stos
push
mov
mov
adc
dec
mov
sub
sahf
in
in
mov
insl
jle
xor
std
push
shlb
jmp
fwait
lock
mov
jge
xchg
xor
push
inc
cltd
dec
pop
fnstsw
stos
jge
fsubl
ss
adc
roll
lcall
outsb
pushl
add
dec
jnp
push
add
int
mov
std
icebp
jo
pushf
sub
int
pop
add
out
sbb
push
jne
stos
mov
dec
or
add
mov
mov
pusha
shlb
adc
cld
mov
stos
mov
rorl
sub
dec
aaa
cs
pusha
or
cmp
lods
sahf
sbb
xchg
pop
ret
das
inc
ja
fsubs
and
cmpsl
sbb
add
stos
stc
lods
xor
les
adc
push
inc
daa
pop
add
dec
iret
movsb
fiadds
jp
icebp
xor
xchg
fstps
les
jb
jecxz
or
lods
or
out
sub
out
inc
mov
insb
or
push
test
mov
xchg
scas
dec
push
mov
adc
mov
add
mov
imul
ret
lcall
ljmp
inc
and
add
pop
js
psubd
sub
mov
lock
dec
call
push
cmp
xchg
jp
in
arpl
pop
ja
push
mov
sahf
lds
hlt
dec
inc
pop
out
xchg
mov
mov
out
test
jbe
and
xor
adc
test
sub
gs
jmp
inc
mov
and
mov
mov
cmpsl
leave
push
mov
js
scas
int
jno
mov
or
mov
outsl
mov
imul
push
add
and
adc
into
lcall
inc
or
data16
decb
int3
mov
aad
stos
pop
in
lahf
inc
jge
fwait
jb
or
outsb
repz
ret
cmpb
xor
popa
push
mov
inc
mov
aaa
jecxz
std
jg
sahf
shr
pop
aam
movsb
jp
mov
mov
insl
nop
shll
imul
aad
subb
movsl
mov
and
adc
inc
push
out
mov
gs
xchg
push
dec
adc
daa
mov
ficoml
pop
sub
mov
mov
loopne
push
fcomps
fcompl
and
pop
add
loop
push
pop
jae
sti
adc
dec
mov
fcoms
mov
pop
aaa
xchg
mov
dec
ljmp
inc
hlt
push
loop
cmpsl
jp
dec
arpl
jge
jmp
pop
xchg
pusha
ror
dec
push
mov
sub
push
ss
pop
or
mov
cs
ficoms
sbb
jb
test
fidivs
pop
mov
adc
into
and
dec
cld
subb
xor
fldenv
lds
fdivp
and
imul
out
sbb
ss
cmp
outsb
mov
add
or
push
movsl
lods
push
fcoms
scas
add
inc
mov
mov
mov
or
sub
sti
lahf
fldt
je
xchg
stos
lock
mov
loop
das
js
xchg
sti
mov
adc
les
mov
cmp
jnp
xorb
add
lock
jno
add
mov
sahf
cmp
mov
push
inc
dec
rclb
repz
inc
mov
inc
ss
insb
lds
lock
pop
pop
jne
jnp
addr16
daa
sbb
mulb
fistl
or
lret
cwtl
xchg
inc
pop
aas
mov
sar
xor
xchg
pop
shrl
adc
sbb
test
in
xorb
in
xor
jmp
gs
xor
fstpl
and
push
dec
js
adc
mov
scas
ljmp
stos
sbb
or
jns
pop
loopne
push
mov
lods
sbbb
xlat
aaa
adc
outsb
push
sahf
subb
sbb
sbb
into
adc
or
inc
ret
cltd
adc
sbb
xchg
lcall
lea
in
push
xchg
inc
test
mov
fmuls
xor
xor
dec
inc
into
imul
push
add
movsl
lock
cld
or
push
cmp
test
pop
mov
sbb
pop
cmp
pop
pushf
jle
sbb
je,pt
lds
jl
lahf
pop
out
or
repz
or
pop
popf
stos
add
inc
psubusb
aam
sbb
popf
and
jle
sbb
cmp
les
sbb
shlb
cld
lret
in
mov
dec
xchg
ljmp
cld
ljmp
loop
loope
test
pop
movd
in
pushf
shl
mov
fistps
inc
je
jl
sbb
fsubrl
mov
add
jge
aam
imul
int
add
xorb
addr16
xor
sti
mov
sbb
rcll
cmp
sbb
push
dec
sbb
test
xchg
repnz
mov
pop
or
cli
js
andb
mov
orb
push
icebp
je
decb
mov
sbb
das
xlat
mov
adc
aaa
xchg
imulb
xor
pop
and
xchg
xchg
sbb
cmc
movsb
repnz
js
frstpm(287
push
mov
insl
movsl
mov
mov
or
mov
cmp
cmp
mov
or
sub
lods
pop
loop
jns
xchg
mov
mov
pop
push
scas
jbe
adc
insl
cmp
outsl
xor
mov
stc
les
bound
dec
in
push
or
mov
sbb
pop
popa
addr16
lods
sti
out
fucomip
lret
or
or
jae
push
mov
pop
scas
in
sub
subb
push
jns
shrb
rcr
lock
lret
mov
mov
push
lods
dec
xchg
ret
pop
hlt
in
xor
push
ret
pop
fsubs
jmp
xor
inc
shrl
push
push
lock
rorb
push
xlat
mov
nop
loop
test
fbstp
push
sub
mov
and
loope
push
mov
dec
adc
in
adc
mov
mov
and
aaa
andl
bound
je
and
jle
lret
xchg
ljmp
ffree
mov
jle
sub
sub
pop
dec
sbb
repz
outsb
inc
sub
cmpl
call
int3
cmp
mov
mov
mov
nop
sbb
inc
sarl
iret
into
cmpsb
pusha
adc
out
mov
and
repz
sbb
test
repnz
and
in
dec
xchg
rcrl
add
loopne
pop
sub
push
cmp
movsb
stos
add
or
int
test
call
push
fsts
jle
ret
pop
jns
mov
inc
pop
iret
das
add
jp
gs
mov
add
lea
iret
jp
daa
icebp
and
xchg
xchg
notl
movsb
push
cmp
daa
lahf
adc
ljmp
mov
stc
mov
btc
popw
xor
dec
das
movsb
movsl
pop
add
push
sub
call
sbbl
dec
icebp
jmp
js
push
mov
cwtl
cmpb
cli
mov
roll
pop
jg
sbb
scas
mov
dec
sets
outsw
dec
hlt
sub
mov
xor
xchg
imul
mov
jp
fs
lahf
cmp
sbb
popa
mov
mov
mov
test
cmovnp
adc
lea
fistpll
mov
jnp
fwait
stc
jle
insl
scas
in
or
and
mov
push
or
testl
or
outsl
or
aad
jmp
mov
insl
mov
xchg
jae
pop
iret
and
inc
sub
stos
std
test
mov
sbb
or
or
xchg
cld
and
popf
mov
int
aaa
adc
test
mov
shll
mov
lret
insl
jg
inc
add
jns
mov
shrb
loope
jmp
push
sub
sbb
insb
outsb
lret
les
pop
call
enter
sahf
push
dec
sbb
push
aam
popf
inc
div
dec
lcall
adc
jg
sbb
xchg
dec
jo
cmp
add
mov
jl
sbbl
adc
xor
sahf
dec
repnz
pop
cmpsl
xlat
inc
push
xor
xor
stos
stc
pop
popa
mov
pop
fs
lahf
xor
fs
push
jle
jmp
pop
xchg
je
sub
push
jbe
xlat
ret
sub
mov
in
pop
sbbb
enter
add
movsb
inc
movsb
ja
xchg
mov
or
mov
outsb
mov
in
pushf
push
mov
shrb
jo
and
jmp
xor
xor
cld
push
lea
test
lds
ds
push
outsb
xchg
mov
jb
mov
xchg
xchg
or
sub
mov
mov
pushf
mov
mov
in
push
aaa
xor
sbb
sbb
into
xchg
xlat
jecxz
cltd
out
push
pop
pop
aam
sub
push
insl
mov
cmp
sti
xlat
shll
cmpsb
sbb
out
dec
and
or
mov
push
mov
js
aam
jge
pop
mov
dec
scas
insb
adc
sbb
xchg
mov
ja
pop
cld
loop
lods
jg
lea
or
pop
pop
sbb
sub
sbb
pop
dec
aaa
cld
sub
sub
push
pop
push
adc
and
inc
jg
dec
jnp
xor
and
xlat
mov
test
cmc
out
andl
mov
cltd
imul
pusha
and
lcall
fistpl
outsl
push
xchg
imul
mov
test
inc
int
mov
sbb
inc
push
leave
mov
jns
xchg
ljmp
dec
repz
or
push
jno
pop
stos
or
cmpsb
jne
lret
and
push
je
test
scas
push
pop
pop
adc
popa
sbb
add
fnstcw
into
sub
arpl
adc
fildll
push
pop
mov
push
mov
push
xlat
mov
in
fsincos
cmpl
sti
shrl
insl
ret
push
lds
lea
or
pop
jle
nop
lock
and
pop
loope
les
lods
mov
addl
jo
sbb
pop
jle
or
cltd
jmp
xorl
mov
xchg
sub
setle
add
pop
or
pushl
rclb
push
fucomi
ljmp
add
jg
pusha
pop
or
popf
ss
cli
xchg
addr16
inc
aad
inc
ja
pop
cmp
orb
xchg
mov
push
lcall
cli
fcoms
cli
loope
jae
mulb
rcl
sbb
xor
movsl
mov
jmp
xchg
ss
clc
test
xor
je
inc
and
xchg
lods
mov
addr16
je
hlt
inc
dec
xchg
push
cmp
lcall
call
loope
lods
push
or
xor
add
sbb
jns
insb
shr
mov
push
loopne
sub
popl
outsb
cmpsb
jl
rcl
cvtps2pi
push
hlt
aas
lret
aam
rorb
xor
adcb
add
sub
or
pusha
test
add
adc
xchg
iret
cwtl
inc
push
addb
insl
pusha
sbb
adc
int
cmp
into
or
jg
test
popa
in
loopnew
inc
sar
mov
sbb
pop
popa
pop
daa
lods
jg
lock
or
mov
imul
and
lret
lahf
lock
inc
xchg
inc
loope
shll
cwtl
xlat
sbb
aam
jl
mov
sub
mov
push
jb
add
cmpb
popa
adc
jno
mov
leave
xor
aad
pop
in
cmp
push
dec
cmp
fstps
call
mov
loop
add
stos
push
sarb
push
xlat
mov
cmpsb
adc
dec
sti
insl
mov
insb
je
enter
outsb
shll
jbe
xchg
inc
dec
xchg
push
fucomip
sub
jne
push
test
sbb
push
push
jmp
or
fdivr
mov
cmp
popa
lds
and
hlt
dec
sbb
nop
xchg
push
pop
icebp
test
in
xor
test
jb
pusha
std
and
pop
aaa
shlb
inc
xchg
pop
push
out
xor
sbb
cs
jecxz
sbb
inc
clc
jne
les
pop
mov
pop
lods
pop
dec
dec
push
xor
in
fwait
clc
sarb
mov
pop
out
lods
dec
inc
rcrb
inc
pop
xchg
mov
dec
dec
dec
out
fiadds
jecxz
sub
insb
xchg
stos
repz
pop
daa
aam
dec
push
in
inc
sub
dec
cmpsb
xor
cmp
dec
out
cmp
adc
in
loop
ljmp
push
mov
aas
lret
adc
pushf
dec
cmpsb
bound
test
xor
add
xchg
jb
or
test
dec
pop
adcb
outsb
mov
mov
outsb
ret
fidivrs
mov
push
inc
mov
sarb
ficoml
cmp
leave
std
cld
in
xchg
pop
cwtl
sahf
cwtl
pop
inc
repz
test
mov
jge
pop
repnz
dec
loopne
call
mov
popa
sub
lret
mov
leave
sbb
xor
in
jle
pop
cld
adc
mov
inc
adc
adc
movsb
arpl
adc
fs
into
fsubr
jno
es
out
jge
sbb
pop
xchg
sub
lcall
out
aaa
jae
ja
pop
adc
dec
inc
test
push
rclb
loope
mov
sarb
xchg
notl
push
sti
push
ss
gs
xchg
sub
mov
jg
inc
cmp
xchg
jo
dec
mov
pop
jmp
mov
jl
sarl
xchg
or
inc
mov
push
es
add
dec
sub
mov
enter
lahf
ja
inc
lods
testb
jmp
mov
jle
imul
icebp
insl
outsl
and
into
jmp
xor
cmp
dec
je
push
mov
jb
dec
fst
mov
push
movsb
aam
jp
js
lock
scas
xor
rcl
pop
leave
test
mov
inc
or
jns
ror
xor
push
sbb
je
add
imul
or
add
pop
cmp
push
mov
pusha
dec
cmpsl
add
mov
pop
inc
out
not
dec
add
jmp
arpl
pop
adc
and
pop
stos
mov
push
dec
in
or
fsubrl
adc
sbb
mov
adc
stc
imul
pop
in
lods
push
lahf
xor
cmc
rclb
xchg
mov
xchg
shrb
sub
sahf
mov
das
bound
xchg
xchg
roll
in
mov
pop
push
pop
stc
dec
jb
cld
scas
rorl
pop
pop
mov
das
ret
in
stos
dec
lret
adc
rcr
nop
sub
inc
or
mov
and
push
ds
icebp
addr16
dec
cwtl
fimull
cmp
adc
gs
vpunpckhdq
hlt
lods
dec
das
push
insl
dec
test
cmp
xor
fsub
cmp
mov
inc
cld
int3
test
lret
push
int
aad
clc
xchg
and
fs
mov
int3
sub
sub
movsb
push
xor
jo
dec
cmp
jae
xor
mov
adc
sbb
movsl
shlb
xchg
cmp
xchg
mov
push
ret
sbb
mov
jo
sbb
mov
das
ficoms
jg
mov
dec
filds
jns
mov
into
cmp
dec
out
movsl
push
into
andl
fistpll
fldcw
sahf
sbb
pop
pop
jmp
inc
int3
push
mov
sbb
and
lods
and
mov
ja
int
clc
adcb
sub
mov
xchg
inc
popf
jbe
enter
inc
int3
pushf
sub
fstps
ret
adc
xchg
cmp
int3
es
mov
pusha
sbb
call
and
nop
test
mov
sbb
cmp
add
scas
xchg
pop
sbb
enter
aas
dec
xchg
cmpsb
jp
cs
fstps
dec
lret
dec
scas
sbb
adc
aad
pop
loop
or
mov
aad
stc
dec
sbb
mov
xlat
push
jg
dec
ja
jno
addps
and
fidivrl
push
pusha
popf
sbb
xor
scas
scas
scas
enter
lods
into
aas
sahf
iret
mov
cli
nopl
dec
add
sbb
popf
cmc
push
inc
repz
and
lret
stos
out
popa
test
push
push
jmp
mov
mov
imul
or
adc
add
stos
jecxz
jnp
shlb
mov
mov
cmp
cmpsb
daa
fs
lods
test
adc
mov
and
push
push
sub
add
test
aas
jno
sbb
dec
notb
inc
sahf
fisubrl
and
or
in
dec
cmovl
scas
movsl
lahf
mov
pop
jle
adc
inc
push
jo
repnz
inc
cmpsb
stc
inc
jb
into
mov
adc
or
or
pop
dec
std
or
ss
lods
es
push
xchg
daa
xchg
cmpsl
outsb
cmp
loopne
addr16
cwtl
add
pop
mov
xlat
or
je
in
test
push
cs
or
mov
xor
jp
push
and
hlt
cli
orps
mov
lret
mov
and
xchg
pusha
push
pop
mov
mov
xchg
sub
std
imul
shll
and
movb
pop
lea
fimull
jmp
lds
mov
push
adc
xchg
mov
leave
jae
cs
inc
out
stos
push
jae
adc
and
daa
mov
mov
mov
jns
sbb
adc
jl
or
shrl
inc
mov
pop
push
mov
in
in
jno
outsb
test
lock
enter
mov
das
mov
test
push
das
adc
int3
sbb
ss
paddq
ljmp
in
fwait
push
orl
push
xor
or
xor
cli
out
mov
test
xchg
test
out
divl
cmp
movsb
test
stc
xchg
gs
sbb
call
std
adc
push
mov
jns
push
out
pop
sbb
sahf
mov
shl
fimuls
sub
fnstcw
mov
adc
inc
mov
insb
stos
stos
out
test
jmp
cmpsb
push
addb
dec
jo
inc
testb
ja
js
cmpsl
dec
fs
mov
push
les
loopne
jmp
sbb
xchg
push
xchg
and
call
inc
xor
je
sub
lds
and
xor
mov
jp
out
adc
imul
mov
mov
sbb
jle
std
loop
or
mov
outsl
sub
xor
lods
mov
int
lock
xor
push
mov
and
sbb
popf
cmc
lcall
cs
ljmp
test
sbb
cs
insb
sti
inc
ljmp
cmp
lock
or
je
jmp
cli
fistl
cs
inc
cmp
addb
iret
jns,pt
inc
xchg
xor
fwait
sbb
ljmp
scas
sub
and
rorb
xchg
cmpsb
pop
test
insb
sbbb
fwait
mov
fbstp
jl
push
or
sub
or
cld
mov
nopl
cmpb
jle
aam
int
fstl
jbe
shr
lahf
gs
fstl
jg
jecxz
push
mov
or
mov
ds
mov
flds
aaa
jecxz
lret
insb
popf
xorl
and
mov
idivl
roll
xchg
cmp
cli
stos
sub
leave
pop
das
stos
cmp
in
lock
inc
mov
pop
mov
xor
dec
lock
lret
inc
pop
push
es
ss
inc
lcall
out
frstor
mov
and
cwtl
jbe,pt
adc
outsl
fcompl
test
arpl
sub
inc
shr
cwtl
ja
je
pop
gs
ds
jbe
xchg
dec
mov
jl
lds
cli
jle
popf
xorb
stc
cs
or
mov
pop
or
jle
push
jno
sbb
in
movsb
pop
mov
add
sub
gs
cmp
mov
xlat
pop
jmp
add
adc
or
lahf
xor
and
mov
clc
fwait
pop
cmpsl
cmp
scas
shll
xchg
rcrl
jns
lcall
std
inc
sub
adc
xchg
aam
jb
sub
cwtl
dec
mov
sbb
inc
push
dec
add
pop
mov
repnz
pop
pop
xchg
ret
sti
shlb
popf
mov
pop
cmc
sub
cmp
cmp
pop
mov
adc
or
jle
lahf
adc
stos
dec
imul
out
out
mov
pop
lods
lcall
and
test
jecxz
xor
mov
and
xor
jl
mov
fwait
lret
lcall
es
cmp
mov
js
test
push
cld
stc
jl
xchg
push
lcall
mov
push
cmp
in
inc
push
xor
mov
outsl
aaa
push
mov
push
scas
mov
cmpsl
test
inc
add
jbe,pn
mov
inc
jl
xchg
fldt
xchg
push
mov
subps
lods
enter
mov
lods
push
ljmp
push
cmp
insl
lcall
rorl
lds
stc
pop
xor
rorb
test
xor
or
cltd
inc
mov
cmp
scas
mov
and
mov
mov
or
add
rcr
sbb
icebp
lret
leave
nop
movsl
neg
adc
inc
or
xchg
or
and
sarb
sbb
out
lea
mov
mov
icebp
xchg
pushf
imul
shr
dec
pop
daa
inc
push
push
pop
sub
mov
mov
push
lahf
mov
jo
in
mov
xchg
fs
xchg
fisttpll
adc
popf
inc
cltd
xchg
jl
ljmp
sub
lods
in
sahf
lret
push
ds
dec
loopne
repz
xor
rcrb
xchg
cmp
mov
mov
dec
das
or
jo
jp
mov
in
jns
lcall
cmp
jo
fistpl
push
rcll
imulb
xchg
fwait
daa
fisttps
push
pop
push
push
out
sarb
and
in
jns
ds
lcall
sub
pop
pusha
mov
push
xchg
adc
xchg
call
movsl
ljmp
xchg
jns
xor
je
or
xchg
rorb
fnstenv
and
mov
mov
mov
aaa
mov
ror
ret
test
mov
hlt
mov
out
mov
divl
insb
or
daa
js
imul
sub
xor
clc
xchg
fwait
jmp
leave
push
inc
xor
idiv
mov
das
jge
cli
mov
movsl
sahf
stc
push
inc
iret
enter
hlt
fidivs
cmp
adc
aas
fstpt
push
ficomps
call
dec
sub
movsb
adc
fstl
sbb
out
adc
or
add
jmp
xor
and
pop
mov
xchg
cmp
or
push
into
ja
lahf
or
outsb
xor
xor
int3
fcompl
sarb
popa
out
outsb
out
out
pop
fidivrs
pop
sahf
in
xchg
mov
daa
jmp
in
movb
into
mov
cmpb
aad
push
in
out
jecxz
sbb
cltd
push
mov
in
xorl
lcall
insb
popa
xchg
mov
mov
mov
push
das
loop
add
pop
popa
jbe
xor
popa
add
subl
sarb
xor
lahf
mov
xor
sbb
imul
xchg
cmc
cmc
das
fdivs
dec
sbb
mov
ret
jno
sahf
fwait
and
iret
aaa
push
shl
push
or
and
dec
or
cmpsl
imul
insb
cmp
mov
pop
cmp
frstor
enter
fdivrp
or
faddp
adc
pop
mov
lock
cmc
shl
add
out
push
bound
cmp
xchg
sub
roll
test
sub
nop
insb
repnz
pop
leave
call
xchg
or
icebp
lret
add
xchg
sarb
insb
fcompl
lock
mov
mov
push
mov
les
sahf
xor
or
adc
aas
and
out
lods
punpckhbw
leave
shll
popf
mov
out
clc
cmp
xchg
jno
sub
or
mulb
pop
mov
loopne
movsl
jo
in
inc
jg
test
xor
pop
mov
push
jle
scas
cmp
inc
repnz
xchg
pop
sub
das
repz
ret
lcall
movsb
jbe
gs
mov
fadd
pop
jle
pop
ret
ljmp
test
mov
movsb
mov
jne
adc
ss
pop
or
movsl
out
addr16
xchg
mov
jnp
stos
xchg
icebp
stos
mov
inc
xlat
imul
pop
add
add
mov
sbb
mov
fst
test
subl
jge
add
mull
rol
inc
push
mov
xor
cmp
or
xor
mov
mov
xor
xchg
push
cmp
hlt
test
lret
lcall
test
pop
stos
das
scas
push
fsubl
inc
jecxz
insb
test
xchg
mov
out
xor
xchg
xor
imul
repz
pop
add
and
in
rclb
aad
and
jle
and
or
aad
jae
fs
xchg
add
into
cmp
adc
mov
je
cmp
push
and
pop
mov
arpl
aam
pop
mov
lahf
outsl
or
sub
sbb
or
pop
push
out
mov
sahf
into
es
mov
lret
notl
imul
fidivrl
int
push
adc
sbb
das
sbb
cwtl
xchg
push
cmpb
pop
sub
scas
enter
imull
push
sbb
cltd
shl
inc
xchg
sbb
jmp
cmp
imul
cmp
popf
pop
in
push
sbb
mov
add
clc
mov
vfixupimmpd
arpl
das
stc
add
push
fadds
cmp
sti
out
imul
add
dec
mov
rolb
push
mov
clc
push
dec
out
js
aam
sub
lock
outsl
xchg
mov
push
inc
add
push
ljmp
xchg
push
cmpsl
sar
mov
mov
add
pop
fcomps
rcrl
outsl
mulb
leave
inc
mov
push
icebp
mov
je
sar
inc
adc
lret
and
jo
out
dec
lcall
dec
stc
push
mov
das
popa
mul
enter
push
xor
ds
dec
mov
mov
pop
sbb
push
nop
stos
inc
sub
mov
xorl
add
adc
pusha
dec
fldcw
out
xchg
rolb
mov
std
jp
movsb
insb
dec
inc
xor
loop
sbbl
push
mov
adc
mov
fbstp
je
jmp
xchg
loop
scas
fwait
std
enter
notb
in
mov
dec
imul
or
cmpsb
fisttpl
pushf
inc
adc
pop
mov
mov
push
inc
scas
add
test
jg
imul
je
rol
add
adc
mov
inc
iret
lret
mov
jb
push
fdivs
mov
lret
shlb
cltd
and
aad
iret
adc
pop
stos
imul
push
das
stos
outsb
out
mov
movsb
hlt
fld1
add
jp
mov
pop
dec
or
es
aas
add
cmp
cmp
jo
adc
addr16
xor
arpl
lods
mov
icebp
in
add
xor
out
movsb
pushf
jl
sub
push
popa
movsb
inc
test
loope
sub
push
outsb
xor
outsb
fbld
jg
aad
jmp
dec
sbb
inc
dec
dec
jl
popf
jg
mov
add
aad
xchg
ljmp
les
mov
mov
mov
cli
jp
test
pop
mov
pop
data16
movb
stos
jle
rorb
xchg
sbb
int3
lahf
pushf
fimull
xchg
shll
push
pop
std
push
push
jmp
movsl
repz
pop
les
mov
adc
sub
int3
adc
pop
testl
hlt
je
sbb
shlb
add
fisttpll
jg
sub
dec
sarl
lock
mov
cmpsl
lea
jo
sub
push
cmp
mov
jbe
cmp
mov
xchg
and
orl
testl
adc
add
mov
sub
mov
or
push
imul
cmpsl
subl
jmp
aas
mov
shrl
mov
cmc
je
jbe
add
ficompl
insb
iret
push
cltd
cmp
mov
xchg
jns
pushf
lret
sbb
stc
add
addl
ja
insl
cs
sahf
in
int3
push
dec
jle
mov
xor
inc
addr16
inc
data16
jno
sarl
ds
ljmp
dec
mov
push
inc
mov
lods
xlat
add
lods
ret
adc
cmp
shll
xchg
mov
repnz
xchg
loopne
dec
sub
mov
loop
xchg
xor
push
inc
roll
push
push
xchg
mov
push
std
xor
mov
mov
xor
mov
movsl
mov
clc
xchg
rol
dec
lds
pop
xor
mov
imul
xchg
push
add
int
dec
dec
inc
sbb
das
mov
nop
sahf
push
and
lret
fisttps
add
sti
sub
imul
cmp
in
and
repz
fstps
pop
je
addr16
push
test
out
add
or
fsubr
ja
rcll
sbb
idivb
mov
jge
and
adc
std
int3
int
nop
ja
push
dec
mov
jbe
cmp
push
xchg
daa
mov
mov
push
shl
int
js
pop
or
stos
inc
popf
popa
sarb
das
and
insl
test
gs
sbb
rcr
in
int3
cmc
xchg
sub
mov
cmpsb
ss
inc
push
lock
push
repz
or
sub
mov
ds
fcompl
mov
xchg
frstor
add
fnstenv
nop
lcall
aad
dec
test
mov
and
cmp
add
mov
lret
in
and
mov
out
pop
arpl
inc
lcall
mov
jbe
scas
imul
ret
loop
in
xlat
adcb
pop
insb
add
add
xlat
and
loop
xor
mov
roll
or
adc
dec
cld
mov
push
pop
movsb
lea
cmc
pop
push
mov
dec
nop
rcrl
sbb
imul
push
dec
mov
nop
dec
and
loopne
fsubs
les
mov
mov
cmpsl
xor
push
sub
pop
addr16
mov
orb
push
push
negb
or
rclb
xchg
xor
push
dec
dec
jae
jne
por
addr16
jmp
inc
jg
mov
jno
cmp
dec
fnstsw
sub
jns
xchg
adc
lcall
repnz
sbb
push
add
out
test
xor
daa
push
jge
mov
arpl
mov
test
push
mov
cltd
lds
jnp,pn
pop
fstl
jecxz
rcr
xor
incb
xchg
xor
aaa
inc
fsubs
push
aam
test
out
mov
icebp
push
test
pop
test
cmp
jno
mov
mov
sub
xor
fwait
cmp
pop
out
fistps
scas
jno
sahf
insl
sbbl
fs
and
aaa
adc
cmpsl
ss
mov
add
lock
movsb
mov
ficomps
inc
test
lret
and
movsl
fcomi
mov
jno
xor
mov
fucomp
jno
mov
mov
push
sub
mov
xor
push
jmp
mov
fmull
jle
rolb
jno
es
jno
mov
sub
mov
and
fs
mov
fs
mov
stos
pop
cmp
mov
inc
cld
add
ret
ds
ja
inc
shll
xchg
pop
add
scas
out
rolb
popa
les
aad
push
or
inc
cmpsl
std
shll
pop
fs
test
and
std
push
and
lods
test
xor
pop
inc
or
xor
mov
out
xchg
jmp
das
out
repnz
jge
mov
mov
ret
ss
ret
imul
mov
cmp
add
pop
mov
cltd
jl
arpl
stc
pop
les
lret
inc
inc
insl
and
adc
fistpl
mov
test
and
add
sti
xlat
fs
test
jmp
fmull
mov
mov
dec
aas
xor
out
pop
cmp
push
repnz
pop
mov
ret
push
pop
je,pt
lcall
pop
rorb
mov
jge
shll
cmp
add
addr16
cmp
and
icebp
and
jne
pop
push
adc
sbb
sub
jns
inc
push
mov
repz
popa
sbb
pop
sub
inc
fsub
fcmove
push
lcall
add
mov
mov
pop
xchg
add
mov
imul
sbb
push
es
mov
fucomp
lahf
out
xchg
aam
xor
arpl
and
pop
lods
sub
add
lods
mov
mov
clc
or
ljmp
jp
mov
loop
sbb
sub
loopne
jns
mov
jbe
pushf
mov
lret
pop
ja
popf
out
popf
xchg
imul
cmpsl
outsb
popf
jae
out
mov
lods
xchg
int3
out
aas
cmp
ror
jne
insb
cmpsl
xchg
lods
lods
or
xchg
lock
jg
jae
dec
jmp
mov
dec
movntq
mov
fisttpll
jo
into
sbb
leave
dec
dec
sub
mov
test
outsl
pop
pusha
cld
test
fsubs
sarb
repz
lcall
cmp
data16
adc
inc
xor
and
mov
lods
pop
cld
mov
out
loopne
sahf
lahf
in
pop
push
dec
mov
fsubl
add
and
leave
sarl
popf
aaa
or
push
jg
xchg
adc
lret
dec
scas
ficoml
lret
lds
nop
push
test
insl
repnz
adc
test
sahf
xchg
ret
jmp
mov
outsl
testb
ljmp
push
loope
loope
cmp
imul
imul
and
jge
xchg
xor
rcll
xchg
mov
push
xor
inc
pop
std
leave
daa
out
imull
jno
pop
clc
jae
dec
add
repnz
xchg
push
or
and
lock
bound
loope
into
sahf
dec
fimuls
cmp
popaw
lds
adcb
sub
inc
add
lret
cmpl
adc
jecxz
adc
aas
das
sbb
nop
ljmp
and
nop
cmp
ljmp
push
xorps
mov
lds
pop
mov
sbb
js
cmpsb
mov
cli
ret
xchg
lahf
scas
mov
dec
dec
or
fsubrs
bound
inc
cmc
xchg
gs
xor
flds
mov
aad
lret
and
or
mov
adc
pop
dec
out
rcrl
pop
pop
mov
std
adc
test
test
jp
ja
pusha
mov
inc
fstpt
inc
sub
and
xchg
dec
js
and
fs
dec
sub
movsb
test
fisttpl
stc
pop
lea
loope
or
cmpl
mov
inc
inc
jge
mov
int
xlat
test
sarl
push
sbb
and
lcall
mov
or
sub
test
and
je
sub
test
insb
inc
dec
mov
mov
popf
adc
push
ficoml
jge
rcrb
in
fs
stos
push
int
xor
lock
sub
mov
je
inc
cltd
cmp
pushf
fisubl
sub
icebp
inc
inc
jle
add
jo
lods
jg
out
sub
fistl
jl
and
jmp
pop
xor
das
inc
imul
lcall
in
dec
fwait
nop
fiaddl
fs
sti
adc
cmp
xchg
cs
mov
and
cltd
popf
xlat
sub
call
and
das
sbb
mov
mov
lods
jmp
add
hlt
xchg
movsl
fs
or
in
aad
stos
cli
or
stc
jnp
cmp
rol
xor
lock
mov
or
xor
xchg
shl
mov
fwait
test
or
and
or
fs
pop
xchg
mov
push
push
and
mov
sub
or
mov
iret
scas
inc
mov
ds
jae
or
rcr
jbe
cmc
iret
dec
adcl
sub
xchg
dec
into
dec
pusha
pop
xchg
mov
push
jmp
xchg
mov
loope
inc
mov
lea
mov
xor
cwtl
mov
aaa
add
loopne
repnz
fmul
bound
fnstcw
jb
loopne
shlb
outsl
adc
nop
aam
xchg
push
lods
mov
mov
out
add
stos
int
xchg
flds
bound
movsb
mov
and
loope
and
adc
mov
into
mov
mov
movsb
sarl
fsubs
lea
in
mov
out
and
test
xchg
loopne
shll
outsl
ficoml
pop
xor
mov
pop
fcmovnbe
inc
inc
or
mov
cs
xchg
xchg
push
jne
dec
sub
shl
xchg
push
add
daa
mov
xchg
mov
in
sub
cltd
pop
outsl
xor
xchg
jo
and
cmp
lret
addb
pop
push
cmpsl
mov
pop
adc
arpl
mov
bound
cmp
sahf
dec
lods
push
push
pop
xor
push
inc
push
aas
add
rorl
mov
pshufw
xorb
cli
push
cmp
rep
cmpsl
mov
jecxz
jnp
inc
insb
stos
insb
ljmp
out
adc
inc
sbb
add
and
or
shll
xor
and
pop
pop
pop
mov
outsl
xchg
sbb
mov
cmpsb
push
jl
mov
cmp
xorl
ffreep
scas
repnz
insl
jns
add
test
jp
jnp
add
inc
test
adc
ja
xor
lods
dec
mov
cwtl
es
or
mov
mov
pop
dec
je
subb
push
rcrl
rorl
les
mov
test
inc
sbb
xchg
or
test
add
xchg
xor
mov
inc
pop
or
insb
dec
fistpll
fst
clc
xchg
aas
lea
repz
jmp
test
sbb
mov
xor
xchg
lods
outsl
sbb
lods
pop
mov
lret
data16
ret
sub
test
movsb
in
insl
fidivl
rorb
clc
and
inc
iret
mov
jg
in
and
and
cmc
dec
sbb
cmpsb
sbb
pop
mov
sti
sti
cmp
inc
sbb
div
dec
faddl
mov
cld
xchg
push
adc
jno
in
xchg
imul
aas
jbe
arpl
xchg
cmpsl
xchg
dec
pop
inc
jmp
xchg
pop
mov
adc
adc
out
lds
pop
rclb
inc
add
push
add
adc
es
jno
rorl
aam
push
les
movl
push
xchg
daa
sub
push
mov
inc
jne
sub
out
xchg
sub
jl
cltd
in
insb
adc
sub
inc
or
fldt
leave
mov
dec
insl
ss
or
stos
in
xchg
pop
divl
bound
cmpsb
xlat
icebp
test
sub
push
push
mov
sub
loope
mov
aas
cmp
ds
xchg
mov
and
inc
loop
or
in
adc
aas
fidivl
push
cmp
nop
ja
jecxz
int3
das
popa
mov
or
lds
cmp
or
subb
decb
into
push
mov
pop
fstpl
or
dec
sub
lods
repnz
test
mov
cmc
and
and
jne
fnsave
repz
in
mov
fmull
mov
mov
xchg
push
test
test
or
pop
aas
mov
dec
pushl
ljmp
lahf
add
xchg
xor
ret
and
pop
shrb
xchg
dec
popa
ja
xor
fcmovnu
out
insb
xchg
mov
leave
pop
cmp
ficoms
repnz
cwtl
out
pop
inc
mov
xlat
jno
shl
lods
cltd
dec
aad
int3
adc
aam
xchg
bnd
test
les
xchg
mov
push
es
xchg
jns
fcmovbe
sbb
shll
jp
scas
mov
and
mov
loopne
addl
adc
shlb
std
aam
ljmp
cmpsl
jecxz
push
add
test
push
mov
and
cmp
ss
fisttpll
fisubs
shl
shl
or
fisubl
roll
cmp
aam
pop
xchg
mov
icebp
rcl
testl
dec
pushf
cmp
cli
adc
lds
sbb
adc
mov
fsubl
std
mov
notb
mov
add
jbe
data16
outsl
arpl
push
and
dec
cmp
mov
cmpsb
mov
ret
insl
js
push
xlat
es
pop
xor
movsb
cld
test
push
mov
scas
push
mov
aaa
adc
inc
in
pop
outsl
inc
mov
in
in
jecxz
mov
fistpll
repz
pop
xor
pop
int3
dec
inc
inc
push
insb
sti
fs
cmc
aad
mov
mov
fldcw
pop
jp
pop
out
hlt
call
xor
popf
or
es
shlb
inc
movsl
mov
shr
push
pop
sbb
in
sub
lret
out
and
jge
roll
fidivl
aad
dec
ud1
dec
or
rorl
in
xor
or
pop
jnp
test
push
and
adc
aam
outsl
fldcw
jb
fwait
test
push
jp
ret
cmp
unpcklps
inc
pusha
and
ret
or
mov
xchg
fwait
repnz
fcoml
mov
outsl
repz
mov
lods
mov
mov
ret
cmp
xchg
popf
movsl
divb
pop
imul
rclb
rcrb
inc
stos
push
mov
inc
sahf
inc
cmpsb
sahf
outsb
cwtl
frstor
push
jge
lock
pop
shrb
add
repnz
xchg
out
lods
jg
loopne
mov
mov
cmp
mov
jle
aam
test
lahf
leave
mov
orl
lret
push
enter
dec
cmc
and
push
push
or
jmp
and
xlat
scas
shrl
jbe
insb
mov
popa
dec
aad
dec
insb
cmp
movb
jp
ja
and
mov
pop
test
xchg
les
loope
rcrl
lds
jb
repz
sbb
pop
pop
cld
rclb
jg
leave
pop
mov
stc
and
mov
lods
push
mov
mov
addr16
add
out
pop
pop
enter
das
dec
xor
jne
fs
sti
in
add
andb
mov
pop
jg
fidivrs
enter
aad
mov
jg
shll
sbb
daa
mov
inc
fbld
pushf
repnz
jp
and
and
inc
fwait
and
mov
mov
push
cvttps2pi
enter
mov
imul
aas
inc
add
xchg
or
stos
pop
jmp
repnz
outsl
sbb
fwait
iret
and
out
cld
fnstsw
repnz
fidivs
or
mov
adc
flds
pop
mov
and
jnp
mov
ret
dec
push
out
jp
jae
jmp
or
test
and
sahf
jmp
lcall
pop
or
stc
mov
nop
add
mov
mov
mov
xor
daa
sub
mov
mov
adc
aad
jne
push
sub
fcmovnb
push
pusha
in
cmpsb
xor
ss
testl
mov
cmpsl
xor
mov
repz
popa
into
xor
mov
mov
ret
xchg
pop
in
iret
add
dec
lods
jae
xchg
and
cld
fwait
mov
scas
sub
sbb
adc
addl
pop
out
arpl
testb
mov
jl
into
xchg
out
inc
cltd
out
push
aaa
orl
adc
mov
shr
imul
fwait
adc
sub
dec
aad
rorl
lret
imul
sub
nop
stos
mov
daa
and
js
cmc
loop
out
adc
pop
les
es
sub
inc
in
shll
xor
fildll
scas
jg
out
mov
xchg
xchg
inc
mov
sub
je
notl
mov
inc
dec
mov
mov
shrl
mov
in
aad
arpl
stos
adc
sbb
cmc
cs
std
lcall
bound
cmp
data16
jns
jmp
in
je
xchg
incl
jns
lcall
xor
cmp
add
cli
inc
loop
dec
jbe
not
out
sbb
mov
sub
pop
arpl
jle
jecxz
ret
or
or
lahf
mov
jp
scas
xchg
cs
lods
inc
xchg
sbb
out
out
popl
hlt
aaa
mov
adc
insb
outsb
inc
aaa
stc
push
adc
fcmovnu
xor
daa
cmp
in
cmp
imul
mov
xor
or
xor
lret
fisttps
call
sbb
faddl
movb
cmp
xor
sub
adc
ds
pop
loopw
stos
adc
lret
mov
add
scas
iret
arpl
dec
mov
ds
test
sbb
int3
sahf
sahf
xchg
sub
mov
mov
pop
sahf
mov
sbbl
xchg
outsl
ret
cmc
cli
cmp
inc
jmp
enter
jmp
inc
icebp
in
mov
and
fbstp
cmc
pusha
repz
jns
pop
faddp
aaa
mov
lea
push
push
fcomps
adc
subb
mov
push
ds
and
cmp
dec
mov
lock
leave
push
out
data16
imul
fimuls
mov
sub
inc
or
aad
sub
jno
pop
inc
sub
lods
xchg
mov
mov
cmp
sbb
mov
movups
aad
add
pop
cmp
fsubrl
in
xchg
mov
mull
les
sti
test
and
iret
or
fisttps
shlb
fisubs
adc
into
in
xlat
out
adc
clc
or
in
leave
dec
aam
add
xor
jmp
jns
out
jb
or
lock
sub
mov
es
mov
jp
push
leave
pop
mov
adc
aad
xchg
sbb
sub
fdivr
push
ljmp
pusha
inc
pushf
addr16
push
pushf
cmp
lods
inc
sbb
push
mov
outsl
pop
mov
and
out
fistl
cmp
lea
movsb
lcall
ss
mov
lods
add
repz
aaa
inc
pop
std
sbb
mov
dec
popf
jne
ljmp
leave
xchg
or
push
mov
int3
hlt
jnp
xchg
das
inc
jg
cli
mov
lcall
jb
lahf
jne
mov
adc
xchg
xchg
les
aaa
imul
repnz
mov
lcall
xchg
call
or
sub
cmc
std
mov
xchg
push
xchg
push
push
loopne
dec
jg
sbb
popf
enter
mov
lret
in
jmp
push
jge
sub
rorb
mov
fbstp
or
push
in
cmp
dec
pop
cmpb
outsb
inc
push
out
and
mov
push
push
test
subl
outsl
std
add
ds
dec
pop
mov
mov
dec
fsts
movsb
fdivp
cltd
ljmp
push
xor
sarl
jle
lcall
iret
addr16
imul
cmpl
out
fs
xchg
imul
cli
pop
push
add
negl
cmpsb
dec
or
sbb
cs
nop
dec
dec
cli
jne
push
mov
and
sub
adc
pop
cmp
push
je
jo
jl
push
cwtl
mov
sbb
mov
push
incb
pop
out
xchg
int3
jbe
je
dec
jo
jmp
imul
sbb
jp
pop
pop
aaa
dec
in
stos
sbb
mov
iret
mov
mov
pop
xor
mov
mov
lods
sbb
insl
loopne
repz
fsincos
xchg
pop
outsl
test
lock
cmp
pop
add
xlat
repz
mov
gs
fbstp
lods
adc
fs
pop
sbb
cmp
mov
int
repnz
xor
popf
inc
ljmp
pop
ret
xor
ja
imul
loop
mov
and
ja
nop
dec
mov
mov
int
lcall
jmp
lock
nop
push
popf
adc
cmpsl
add
loope
sub
add
in
rorb
mov
testl
nop
mov
cmp
mov
sub
rcr
sub
mov
pop
mov
and
pop
or
cwtl
push
jnp
imul
shl
ljmp
icebp
xor
adc
lock
sbb
out
mov
das
arpl
inc
mov
adc
test
pop
ficomps
jge
les
pop
inc
and
jbe
or
sub
push
dec
adc
notl
outsb
cwtl
pop
xchg
shl
add
mov
dec
adc
mov
xor
ds
jg
in
out
iret
mov
rclb
bound
adc
jmp
cwtl
test
mov
sbb
adc
lahf
out
dec
sbb
dec
sub
addr16
mov
mov
push
or
fsubrl
fwait
dec
jns
es
jne
bound
dec
adc
loope
xor
mov
or
movsb
adc
dec
sub
aad
push
das
xchg
stos
mov
mov
cmc
insl
jmp
xor
dec
pop
pusha
aad
and
arpl
outsb
stos
xchg
jecxz
bound
rol
je
push
cltd
adc
aaa
fistps
push
clc
in
push
cwtl
pushf
mov
setb
add
push
xchg
sbb
add
pop
adc
lahf
aas
jno
jg
fucomi
test
ficompl
add
xchg
add
roll
inc
xchg
add
adc
sub
mov
xchg
mov
dec
arpl
in
fcmovb
out
ss
stos
cmp
xchg
adc
rclb
pop
push
add
testb
stc
sub
push
arpl
cmp
jae
push
call
and
xchg
sub
inc
and
dec
sub
adc
lds
cmp
xchg
lret
mov
lahf
mov
out
outsb
push
cld
repnz
sub
mov
cmp
mov
sbb
pusha
dec
cmc
call
das
add
icebp
stos
fwait
sub
gs
insl
enter
out
sti
mov
mov
lods
jbe
das
push
stc
lcall
xor
sbb
mull
xor
mov
lcall
pop
mov
les
lods
cs
xchg
lret
aaa
cmp
stos
test
mov
ljmp
out
subl
scas
out
push
lcall
stos
jecxz
ret
sbb
js
adc
cld
mov
lods
mov
outsl
xorb
sbb
push
sub
inc
mov
in
sbbl
bound
jbe
cli
lcall
imul
fs
rolb
or
adc
xchg
popl
lea
pop
push
pop
jge
leave
notl
or
or
lcall
fcmovnb
data16
mov
jbe
hlt
push
arpl
cs
add
sbb
js
insl
dec
scas
repz
ret
sbb
ljmp
or
inc
sti
lods
icebp
int3
dec
dec
ljmp
outsb
inc
out
lods
enter
push
aaa
adc
inc
fsubrs
xchg
dec
push
push
xorl
mov
imul
add
sbb
mov
inc
push
repnz
cmp
or
sub
in
xlat
mov
mov
xchg
subb
cmp
or
push
lds
out
outsl
out
mov
aas
fs
sub
out
outsb
ja
or
adc
xor
mov
cltd
push
xchg
inc
cmp
push
jne
sub
sbb
push
mov
add
test
and
out
jl
insl
xor
mov
fstpt
sbb
add
pop
sbb
aam
xchg
lock
rcrb
mov
mov
push
push
popf
sbb
nop
ds
adc
and
and
mov
stos
and
das
inc
das
jno
cltd
ffree
add
xchg
mov
in
pop
push
pushf
xor
mov
movsl
clc
das
xchg
out
xor
iret
out
mov
sti
sbb
mov
cmp
sbb
dec
push
xor
sbbb
push
mov
pop
or
scas
cmp
fidivrs
jge
leave
les
jo
mov
and
sub
out
jl
mov
std
sub
xchg
hlt
or
xorl
adc
cmp
mov
inc
cltd
xchg
sahf
cwtl
xor
mov
mov
inc
clc
outsb
push
sub
ret
mov
push
addr16
add
xchg
bswap
cmp
outsl
shl
inc
mov
shlb
mov
push
shrl
clc
jg
mov
clc
jle
insb
sbb
jo
inc
jno
ret
add
mov
sbb
xlat
adc
fucomp
dec
sub
je
cmp
dec
sub
jae
push
movsl
iret
push
sbb
and
or
enter
adc
clc
call
dec
dec
rcrb
rclb
xorl
icebp
jmp
movsb
nop
test
or
ret
jns
cmc
push
sbb
jecxz
or
jo
shlb
adc
and
lcall
insb
sar
mov
dec
insb
push
loope
mov
sbb
out
insb
jl
jp
sahf
pusha
ja
adc
inc
insl
sub
push
cmp
fldenv
dec
adc
call
adc
repz
test
sub
xchg
test
xchg
icebp
bound
in
or
push
cltd
movsl
push
dec
aas
or
dec
or
into
add
vcvtsd2ss
lret
mov
adc
xchg
hlt
fldl
push
cltd
sub
add
add
test
ret
outsb
push
roll
popa
fadds
jmp
jno
pop
push
or
iret
mov
out
jae
scas
insl
in
mov
xorl
orl
rol
imul
mov
xchg
sub
sti
xor
imul
stos
adc
lods
xchg
aad
mov
scas
jo
test
mov
mov
mov
out
cmpsl
fidivs
out
out
clc
inc
pushf
xchg
lea
dec
ret
cmp
daa
add
sbb
jb
mov
mov
je
xchg
lods
mov
xchg
movsl
or
jmp
mov
mov
xor
lret
mov
out
xlat
xlat
mov
adc
scas
sub
xchg
and
es
ja
push
fsubs
andb
cmp
sti
sbb
ror
push
bnd
incb
dec
iret
lret
mov
adc
ret
cltd
sbb
enter
popa
sub
cs
push
fisttpl
mov
pop
in
push
sti
inc
xor
cmp
jl
inc
push
inc
sbb
lahf
push
add
jl
lahf
xchg
cs
xchg
sub
pop
mov
or
test
mov
add
jp
sbb
cs
push
jp
enter
sub
sti
dec
inc
or
outsl
ds
aaa
pop
cmpsl
cmp
shrl
mov
js
ffree
push
xchg
inc
dec
jl
add
mov
and
loop
add
add
cld
cmpsb
cmp
sub
jp
sbb
cmpsb
pop
bound
leave
push
dec
xor
mov
fwait
lahf
push
scas
push
xor
jge
mov
call
fists
jno
sbb
sbb
mov
add
jle
cmp
cmp
fsub
addr16
iret
push
jge
xchg
imul
dec
loop
lock
arpl
cmc
dec
pop
xor
adcl
or
icebp
lcall
mov
sub
and
mov
gs
lahf
mov
loopne
gs
mov
mov
sarb
push
in
test
lahf
shr
dec
lea
cmp
adc
frstor
aam
mov
adc
mov
or
mov
inc
ds
jle
jle
xchg
push
pop
or
testl
call
movzbl
push
popa
out
incl
lods
fildll
lods
adc
mov
arpl
out
scas
push
in
dec
or
push
out
add
fwait
out
sbb
pushf
mov
add
call
ficompl
das
cmp
loope
ja
mov
adc
cmc
pop
stos
iret
mov
jae
mov
clc
fwait
jl
mov
jl
das
aam
scas
cli
mov
dec
or
rorb
ret
hlt
cmc
shrb
imul
jo
jne
xor
dec
mov
xor
cmpsb
cltd
fwait
das
das
shrb
fisttpll
ret
inc
xchg
pop
xor
clc
out
dec
movsl
jb
loop
pop
int3
xchg
fistpll
inc
aas
pop
and
sti
test
dec
popf
xchg
or
xor
adc
mov
cmp
mov
insl
pop
mov
sbb
xor
mov
cmp
push
in
add
inc
mov
outsl
xor
stc
push
cmp
lret
nop
sbb
inc
loopne
std
inc
or
lea
jp
mov
lods
in
lea
fbstp
cli
pop
push
mov
mov
lcall
or
sub
cld
cltd
cmp
dec
hlt
and
fstp
push
jl
fisubl
out
sarl
rolb
mov
ret
mov
mov
xchg
jnp
pop
add
fildl
mov
std
lret
maxps
les
lods
popf
addb
jl
mov
aam
enter
pop
dec
scas
xor
aam
lret
dec
pop
or
adc
movsb
xchg
inc
jb
xchg
pop
icebp
call
aam
pop
pop
mov
repz
ljmp
dec
sahf
jno
cmp
fnstsw
jmp
xchg
cmp
xchg
in
push
sbb
movsb
inc
out
cmp
xchg
fstpl
add
test
xor
lods
insb
push
das
out
or
dec
pop
sbb
pop
out
adc
decb
and
xchg
jp
out
sub
cmp
inc
or
push
pop
mov
mov
adc
inc
xlat
dec
lahf
ljmp
hlt
jmp
mull
cmp
std
cmp
sbb
movsl
in
mov
jne
inc
in
cmp
je
mov
icebp
push
mov
mov
mov
clc
xchg
jg
or
loopne
pusha
sub
xor
cmp
nop
mov
mov
cmp
fwait
mov
push
xor
pop
mov
mov
fnstsw
and
mov
and
les
popf
frstor
stos
and
lret
cmp
pop
mov
pop
into
imul
push
pop
jle
js
dec
repz
fsubl
or
std
pusha
add
shll
icebp
pop
sub
lret
pop
push
int3
add
std
dec
leave
cmpsl
adc
cltd
pop
in
pop
jne
xchg
cmpsb
loop
movsb
fistl
jl
sub
cmp
insb
es
test
or
mov
lret
mov
jno
sbb
cmp
fstl
dec
ret
test
and
pop
push
adc
cmp
cli
fadds
mov
push
add
test
pushf
sub
and
lret
cmp
sub
ret
jbe
pop
cmp
adc
enter
xor
push
mov
insl
out
icebp
xor
mov
xchg
pop
jne
inc
in
test
xchg
pop
cmp
and
std
popw
test
inc
pop
jl
test
scas
push
loopne
cmp
mov
xor
lcall
leave
push
loope
notb
icebp
jmp
ret
jae
mov
xchg
jp
add
xor
inc
jp
cltd
push
cld
mov
lret
fldenv
subb
shll
mov
xor
xchg
repz
int3
jne
mov
sbb
enter
add
into
sbb
mov
out
mov
sbb
lahf
pop
mov
cmpsb
cs
or
mov
sbb
xchg
std
xchg
ficompl
cmc
imul
test
xchg
xchg
or
decb
cmp
les
xchg
push
jne
cmp
sub
packsswb
mov
lret
rol
sbb
test
ss
divb
outsl
leave
cmp
fistps
bnd
nop
jl
pop
cmp
popa
addb
clc
xor
cmpsb
inc
cltd
mov
mov
mov
mov
clc
inc
adc
dec
aas
jbe
fadds
push
js
pop
mov
mov
inc
in
in
mov
adc
cli
sbb
add
loopne
dec
cmpb
jp
bound
pop
cmp
scas
mov
cmp
pop
lret
or
pop
mov
aaa
fwait
sub
sarl
jbe
adc
ffreep
and
aad
push
js
mov
xlat
fnstenv
sbb
mov
popa
rcr
xchg
out
popa
pop
xchg
or
xacquire
loope
je,pn
and
sub
mov
mov
popf
jb
in
std
aaa
dec
movsb
jle
ds
adc
cmc
cmpsb
lret
rcrl
fsubrp
adc
jmp
outsl
sbb
mov
lret
adc
dec
loop
movsl
movsb
out
loop
mov
jns
add
push
popa
out
jge
mov
jnp
adc
push
cmpsl
and
cli
outsl
cs
push
insl
add
or
out
rcll
jae
fildll
shrb
repz
rorb
repz
sub
mov
push
add
pusha
sbb
pop
jns
sub
sbb
dec
dec
pop
mov
out
push
shll
cmp
inc
push
lahf
jl
sub
pop
mov
mov
stc
jmp
jns
lret
push
pusha
adc
lds
and
push
or
mov
add
scas
adc
and
into
sbbb
insl
jnp
push
daa
in
stos
sub
fcoms
loopne
bound
mov
popa
jmp
loope
ljmp
push
into
in
std
pusha
pop
push
xchg
movsb
pop
fisttps
fildll
inc
add
xor
jns
and
subb
or
shr
cmp
punpckhwd
stos
test
mov
jae
scas
nop
repz
mov
int
fwait
mov
xchg
outsb
and
sgdtl
in
push
fdivrl
push
cld
push
sub
mov
cmpsb
shl
cmp
mov
out
lahf
bound
mov
xchg
jmp
cmc
je
mov
aas
cli
cmp
or
jae
repnz
jl
shrb
sub
xchg
shrb
inc
xchg
dec
or
xor
push
mov
push
pop
rcrb
pop
bound
stc
mov
mov
push
adc
push
pushf
or
aad
add
stc
mov
dec
and
or
ja
or
push
popa
icebp
ljmp
sub
mov
fmuls
shrl
mov
or
cmp
js
into
mov
mov
stc
inc
pop
gs
sti
jne
push
mov
sub
scas
rclb
jge
sub
xchg
push
cmp
mov
sub
in
and
call
push
pop
loopne
into
jmp
outsb
addr16
or
in
out
loop
call
mov
rol
cld
cmp
mov
adc
inc
push
push
in
inc
mov
scas
jmp
and
js
push
lret
or
rcr
mov
and
xchg
das
in
add
sbb
cld
xchg
jbe
jo
cltd
mov
push
push
sbb
jge
fcoml
sbb
fwait
sbb
mov
or
add
cmpb
add
enter
mov
xor
adc
mov
pop
roll
cmp
js
fisubrs
inc
out
push
xchg
es
mov
ss
jo
enter
sbb
ss
add
push
dec
sub
mov
jp
test
in
ret
ror
xor
xchg
cwtl
xor
mov
rorb
mov
ds
insl
jle
out
mov
sbb
aam
jns
faddl
inc
adc
inc
icebp
pop
push
and
push
push
imul
dec
mov
fidivrl
mov
gs
pop
imul
sbb
cmpsl
clc
pop
dec
daa
xchg
cmpsl
and
sbb
in
push
add
clc
pop
mov
xlat
or
push
cltd
lahf
testb
jle
sbb
call
sub
xor
dec
stc
fcmovbe
lret
cli
les
pushf
mov
cli
sti
jno
js
movsl
mov
jbe
in
sarl
pop
in
sahf
mov
movsl
push
mov
cmpsl
push
push
sub
icebp
int3
aad
jp
sbb
jmp
inc
dec
push
inc
data16
pop
xchg
aas
stos
sar
pop
cmp
add
pusha
jno
inc
in
cmp
jle
xchg
fisttps
mov
adc
adc
ds
movsl
xchg
test
pop
ja
mov
rolb
xchg
in
popa
adc
mov
or
xchg
sub
or
push
cmpsb
jmp
jmp
out
rcr
mov
add
sbb
mov
dec
xor
xlat
icebp
xor
and
ljmp
mov
dec
in
cmp
fistpl
scas
pop
stos
xchg
jp
sbb
jbe
mov
nop
jbe
call
frstor
mov
or
add
sub
xor
bound
push
mov
mov
fisttpl
psubd
xor
pop
sub
mov
and
jno
xor
pop
sbb
gs
bound
mull
clc
sub
dec
mov
add
into
pop
out
movsl
in
in
xor
xchg
cmp
inc
dec
inc
subb
sti
push
mov
fcomps
or
in
pushf
clc
push
push
add
jne
or
cld
lret
push
mov
lock
loopne
xor
or
jl
jmp
pusha
into
jl
imul
cmp
jmp
icebp
sbb
loopne
add
pop
aas
sbb
rcrb
rorb
xor
test
nop
cmp
push
notl
mov
pop
jno
repz
mov
idivl
mov
movsb
jl
xchg
mov
ret
leave
cli
dec
popf
inc
pop
cmpsb
or
sub
inc
or
add
xchg
or
pop
push
cs
adc
out
sbb
and
sbb
pushf
cmovo
mov
daa
push
jns
in
das
es
jae
jl
orl
sbb
xchg
jecxz
pop
or
adc
ds
dec
xor
push
cmp
mov
test
mov
lods
cmpb
cmp
xchg
in
mov
leave
lock
add
push
add
xchg
push
dec
push
or
push
mov
xor
hlt
int3
int
mov
push
mov
sub
add
lcall
push
outsb
mov
mov
xlat
fdivs
pop
cmp
push
ret
jge
int3
mov
cwtl
std
lods
push
testb
lods
cli
push
adc
fadds
sub
nop
mov
pushf
mov
mov
out
fcomps
ja
mov
or
xlat
lods
push
imul
insb
shrb
shl
addl
add
testl
movsl
pop
nop
popa
fcompl
mov
int
hlt
cmc
idivb
mov
xchg
xor
push
testb
cmp
adc
jae
xchg
xor
jg
add
int3
and
pop
sbb
sbb
add
push
movsl
rorb
add
dec
pop
or
add
sub
xchg
jbe
or
das
sti
aas
pop
daa
test
idivb
lock
out
cmp
push
cmp
outsl
mov
cmp
outsl
mov
mov
xor
mov
in
sti
fsubl
sti
sarb
loopne
mov
cmpsl
sub
jo
fs
bound
in
imul
stos
out
jns
jp
mov
in
mov
std
xlat
data16
push
jns
shl
xlat
mov
sbb
das
fdivrs
jl
adc
stc
push
dec
fwait
jnp
fnsave
rorl
cmp
das
push
ffreep
add
jne
xchg
mov
aaa
xchg
push
call
fs
pop
adc
jecxz
push
enter
mov
test
iret
xor
rcrl
sub
out
mov
xlat
cmp
jae
movsb
std
push
pop
or
loope
hlt
or
pop
add
xlat
aam
clc
push
lea
mov
sbb
loopne
lea
fildll
fisubl
mov
cmp
add
insl
pop
cmp
push
repz
into
insl
ja
dec
jl
pop
xchg
cmp
or
fsubrs
loopne
sbb
xchg
mov
pop
fsubrl
stos
jno
xchg
jge
push
push
lcall
or
mov
cmp
push
sbb
push
testb
pop
movb
pop
orb
movb
and
lock
outsb
scas
inc
outsl
jns
ficompl
sbb
je
test
negb
xor
jecxz
cmp
push
sarb
cmp
dec
jmp
xchg
and
pop
inc
pop
xchg
mov
ret
pop
mov
je
adcb
mov
push
lcall
dec
sbb
nop
cmp
inc
jmp
xor
pop
jge
push
jne
insb
movsl
pop
daa
fcoms
inc
jmp
out
rcr
jp
enter
cld
fs
fs
fistl
fmuls
jne
pop
inc
test
jp
jne
aam
pushf
cltd
jb
fcoml
out
xchg
dec
xchg
repnz
cmc
sub
or
aad
mov
out
push
es
push
jl
outsb
jae
test
stc
loop
mov
lret
cmp
xchg
inc
cmpsl
imul
imul
jecxz
xchg
cmpsl
clc
popa
pop
adc
and
and
ds
dec
shlb
int3
jp
cli
fmulp
add
test
repz
js
mov
ds
aas
sub
cmpsb
xlat
cmp
sub
push
test
fsubl
jo
scas
push
pop
aam
mov
xor
into
mov
mov
inc
jl
inc
pop
jnp
mul
ds
sarl
mov
sahf
mov
lods
jge
xlat
add
fistl
jp
adc
push
jecxz
stos
sub
ds
imul
mov
fisubrs
xor
xor
icebp
dec
sub
adcl
lods
call
aad
jl
aaa
orb
jecxz
jmp
sahf
add
dec
xor
mov
or
jno
cltd
xor
icebp
inc
subl
aam
lcall
pusha
addl
push
cmp
push
shr
out
and
repz
mov
mov
mov
mov
jle
pop
dec
push
pop
les
dec
insb
push
cli
insl
fidivrs
xchg
adc
stos
sub
xchg
jmp
mov
cmp
jge
and
sub
mov
cmp
shll
mov
cmc
push
mov
mov
xorb
shll
inc
icebp
pop
dec
ja
jne
add
mulb
in
jl
ljmp
adc
stc
imull
or
enter
adc
out
out
mov
je
lcall
in
add
and
leave
fisubs
nop
call
sub
outsb
sarb
imul
in
cmp
pop
in
and
dec
mov
leave
pop
nop
adc
fldenv
jge
imul
in
sbb
mov
lds
pop
and
inc
inc
les
lea
and
pop
scas
mov
pushf
in
inc
mov
test
pop
adc
mov
push
mov
cmpsb
adcb
lods
movsb
sub
ljmp
inc
dec
mov
jbe
imul
mov
mov
sahf
push
jmp
rol
enter
rolb
mov
fmuls
lods
xchg
stos
popa
mov
rol
movsl
xchg
pushf
lret
adc
and
call
pop
mov
sbb
mov
nop
jbe
sub
push
ljmp
mov
mov
dec
lcall
pop
and
sub
mov
push
fimull
cwtl
jg
stc
dec
imul
and
addr16
fnsave
mov
fbld
fidivrl
stos
add
loopne
movsl
xor
mov
movsl
pop
fsts
repnz
hlt
xchg
lret
xor
xor
insb
data16
lret
add
cmpsl
mov
inc
mov
icebp
in
pop
test
fst
push
mov
mov
aam
hlt
int3
lret
jno
cwtl
cmpl
test
gs
mov
adc
lcall
sbb
and
inc
push
push
push
int3
mov
mov
and
pop
das
sti
xor
xorb
shr
pushf
bswap
fsubrs
xlat
and
mov
cmp
mov
mov
inc
inc
clc
insb
inc
insl
lods
ljmp
mov
imulb
notl
xor
inc
jnp
or
pop
les
aas
mov
sub
add
or
and
sub
aad
pop
dec
push
sub
imul
imul
leave
pop
in
cmc
shll
or
lret
movl
pop
mov
mov
mov
rclb
mov
and
push
push
daa
in
inc
pushf
pop
je
xor
push
ljmp
cmp
mov
sbb
pop
mov
cld
xchg
jle
mov
jnp
xchg
add
push
xchg
push
data16
mov
outsb
lods
jmp
shlb
jnp
adc
stc
xchg
cmc
sbb
test
inc
push
pushf
mov
mov
cmpl
fidivrl
xor
mov
xchg
daa
push
cmp
sub
std
inc
and
dec
mov
sub
rorl
sub
rorl
xchg
pop
dec
adc
xchg
dec
mov
cmpsb
and
fwait
sahf
pusha
push
cmc
add
push
mov
fsub
sbb
xor
cmc
dec
int3
ret
lret
fimuls
leave
sub
jecxz
data16
dec
fidivrl
adc
ss
lea
int3
loope
arpl
aad
js
shl
pop
out
sub
xchg
jge
push
outsb
pop
iret
imul
loope
sub
pop
ret
jl
andl
push
mov
out
fwait
push
rcrb
xchg
push
mov
movsb
ljmp
arpl
inc
mov
repz
fisttpl
clc
cmc
mov
adc
xchg
popa
jge
or
sbb
jle
in
das
movsl
adc
ret
pusha
outsl
into
cmc
es
sub
or
loopne
repnz
mov
bswap
or
loopne
sbb
leave
push
push
fmul
fisttpl
sub
pushf
cmc
sbb
adc
sti
pop
mov
mov
repnz
out
xlat
out
repz
fwait
mov
xor
clc
popf
lcall
jo
push
mov
in
fdivrl
push
mov
sub
mov
test
or
cltd
ror
inc
push
call
adc
or
inc
xchg
movb
lds
mov
aad
shll
lret
fimuls
jle
mov
cmpl
sarl
push
jno
jle
test
mov
out
mov
dec
rcll
add
pop
adc
add
pop
scas
aam
test
and
jne
mov
pop
pop
addl
rcr
and
iret
insb
cmp
mov
and
aad
add
or
or
int
sbb
daa
mov
or
scas
pop
lcall
out
loop
or
xlat
and
xlat
push
sub
stc
mov
mov
fnsave
int
and
xlat
sbb
imul
cmp
int3
and
fistpll
cmp
subl
xor
nop
dec
out
lcall
mov
mov
rclb
cwtl
mov
pop
insb
pop
hlt
fcomps
aas
mov
sub
xlat
pop
outsb
in
hlt
stos
push
mov
inc
push
sbb
push
jb
in
popa
imul
dec
dec
mov
dec
xchg
mov
jb
sbb
fimull
sub
fisttpll
outsb
int
lahf
and
and
fcomps
or
add
mov
and
mov
subl
popa
and
movsb
push
imul
flds
push
sbb
mov
xchg
outsl
gs
stc
aad
cltd
daa
shrb
cld
js
mov
cmpsb
dec
xor
dec
sti
dec
popf
and
insb
dec
movsl
and
cmp
cmp
lea
in
loop
jae
dec
xchg
mov
cld
cli
iret
xchg
arpl
or
sub
mov
xor
lret
sti
ss
sbb
sbb
push
inc
jae
pop
test
call
or
cmpsl
mov
movsl
xchg
xchg
cmc
iret
sti
pop
stc
jg
adc
out
ja
shll
push
cmp
sub
mov
loopne
sub
popa
cmpsl
mov
cmpl
adc
int3
ficomps
fcoml
push
arpl
cs
mov
add
cmpsl
ss
jns
jg
cmp
aas
lods
push
mov
lcall
aaa
add
pop
cmp
sub
pop
imul
lret
cld
cmp
test
daa
xor
fidivrl
into
nop
cmp
cs
dec
xor
sbb
jnp
sub
orb
loope
sahf
sbb
orb
das
mov
jge
dec
ret
sbb
dec
mov
pop
sbb
lods
xchg
pop
stos
pop
mov
dec
movl
jecxz
dec
fistps
adc
loop
in
rcrl
pop
scas
je
ljmp
or
stc
sub
xlat
push
inc
pop
cmpb
sbb
les
enter
hlt
jl
jb
fidivs
les
cwtl
cmp
repz
pop
xor
sarl
inc
cmp
or
cmpsl
flds
push
fldl
rorb
fdivrs
dec
int
and
push
dec
addr16
or
mov
jle
into
insb
inc
cmpsb
out
lods
jbe
loop
mov
sub
cld
mov
mov
mov
pop
push
fcmovnu
fldcw
out
in
int
call
pop
fwait
sbb
es
xor
sbb
mov
mov
sub
jmp
jne
adc
xlat
pop
ficomps
aaa
bound
testb
nop
arpl
loop,pt
ja
nop
out
rolb
add
adc
xor
xor
or
mov
rcl
subb
mov
inc
fcmovu
jae
and
jne
pusha
jecxz
mov
jle
scas
stc
mov
out
pop
lods
pop
mov
cmpb
mov
fdivrp
out
xor
adc
push
and
sub
subb
sbb
lock
decb
xchg
push
nop
jle
cmc
adc
rcrb
jp
iret
jae
addr16
sbb
pop
lcall
mov
dec
movsb
ljmp
into
test
outsl
mov
sti
jle
movsl
jmp
or
add
adc
adc
inc
push
push
inc
lods
popa
mov
xor
push
daa
lods
xor
popa
das
push
test
xchg
fstl
and
and
or
lcall
ljmp
sti
cmp
orb
adcl
jno
leave
ret
adc
scas
popa
pop
int3
movsl
push
sub
movsb
out
in
jle
fcoml
push
xchg
mov
lods
sbb
dec
push
xchg
inc
inc
mov
int3
mov
enter
xchg
inc
pop
bnd
fistpl
pop
dec
cld
cli
or
adc
cmp
sarb
xor
in
mov
cwtl
out
adc
sbb
loop
test
movsl
mov
je
out
jb
pop
or
mov
scas
jge
cmp
lcall
cmp
jne
inc
cwtl
mov
popa
iret
nop
adc
sbb
mov
inc
ja
outsb
mov
xor
sbb
push
ss
fstpt
movsb
mov
dec
testl
add
ljmp
fs
mov
add
xchg
sub
pop
push
jo
testl
dec
pop
repz
inc
xchg
in
shrb
andb
jge
in
xor
lods
out
xchg
in
lea
pusha
push
push
add
push
rcr
push
in
in
cmp
cld
push
mov
cld
shll
push
sahf
or
loope
inc
and
push
leave
testb
loop
mov
add
xchg
add
in
bound
mov
mov
pop
add
loop
data16
xchg
add
adc
pop
mov
sub
insb
jae
mov
mov
pop
adc
iret
notl
pusha
out
cmp
mov
or
icebp
into
sbb
jecxz
inc
lahf
in
enter
repz
xchg
cmpsb
dec
add
xchg
xor
cmp
jo
cmp
sbb
imul
xor
xchg
mov
sbb
cmpsb
add
outsb
adc
stos
xchg
pop
movsl
out
mov
push
jno
adc
sbb
ffree
flds
sub
call
rcll
je
lcall
inc
cmp
rorb
cli
mov
push
loope
stos
adc
sbb
je
ror
in
adc
iret
jmp
pop
jge
mov
cmp
mov
xchg
cmpsl
mov
shlb
adc
icebp
fldcw
or
cmp
jo
test
sub
xor
sbb
sahf
fildl
lret
push
lock
push
jbe
test
arpl
mov
push
push
mov
shl
add
dec
fwait
mov
fsub
pop
psrad
cli
fstpt
jg
sub
pop
aad
mov
cwtl
rorl
add
fldenv
push
xchg
lret
jno
fwait
outsl
mov
bound
cmp
mov
stc
cld
out
inc
decb
mov
test
loopne
aaa
rclb
add
fstps
xchg
lcall
dec
test
das
or
push
jl
inc
xor
dec
sbb
das
mov
jns
bswap
outsb
mov
xchg
mov
pushf
scas
imul
mov
rolb
and
sti
aaa
sub
sahf
xchg
add
lods
sar
cmp
pop
sub
lock
flds
jge
mov
pop
pop
mov
cld
mov
ret
dec
fisubs
mov
scas
xchg
add
jbe
and
das
or
outsb
into
mov
and
sub
imul
int
faddp
sub
sbb
js
fwait
rcrb
aaa
pushf
jnp
popf
test
xchg
push
cld
ljmp
push
mov
mov
lods
mov
sbb
data16
or
xor
cmpsl
out
fisubs
sub
or
and
add
stos
dec
pop
idivl
notl
stos
mov
dec
enter
ret
or
mov
mov
adc
stos
or
pusha
jl
push
rcll
icebp
fisttps
mov
dec
adc
outsl
sahf
cmp
loopne
in
jl
xor
adc
lret
outsb
scas
mov
push
inc
mov
push
cmpsb
getsec
lret
xchg
inc
outsb
mov
sbb
cmp
std
push
fists
mov
adc
cli
push
stos
cmp
loope
sbb
push
shl
test
mov
adc
lahf
test
push
pop
das
dec
setno
out
dec
aas
testb
fildl
aas
sarl
cltd
into
mov
rclb
and
push
jmp
outsl
test
pop
jl
pop
ret
and
roll
lds
test
jbe
mov
movsb
cmc
dec
pop
daa
jecxz
inc
inc
jno
enter
gs
shll
mov
or
dec
aaa
ds
mov
leave
mov
fs
leave
inc
jno
sbb
inc
push
add
adc
add
cmp
mov
xchg
shrl
jg
jp
cmp
jb
inc
bound
cwtl
shrb
inc
faddp
push
test
fidivrl
pop
in
popa
jp
mov
inc
jmp
fwait
lahf
je
daa
pop
adc
inc
std
or
mov
insb
call
loop
push
imul
jl
sub
insl
or
sarb
pop
mov
out
xor
lahf
adc
data16
mov
xor
inc
xor
jmp
jbe
int3
call
xchg
sbb
sub
jge
fwait
int
xor
sti
je
sbb
sub
add
sbb
pop
idiv
test
mov
inc
test
dec
jle
mov
aaa
ds
pop
out
testb
or
pop
push
cmpb
in
leave
sbb
pop
loopne
pop
xor
pop
push
psraw
jp
pop
stos
xor
cmc
fnsave
frstor
test
sbb
out
in
popf
sbb
push
sub
out
xchg
popa
popa
rcrl
ret
mov
dec
int
andb
dec
xchg
dec
aaa
je
dec
and
loope
incl
cmp
xchg
push
rolb
dec
std
flds
xchg
jl
imul
push
and
js
mov
or
rolb
push
and
loope
pop
sbb
call
in
and
xor
hlt
insb
fs
aaa
fcompl
in
shr
lret
cld
cmp
inc
or
inc
stos
js
sub
lock
push
int3
scas
jp
pop
jne
pushf
jae
stos
xor
or
add
sbb
pop
int
icebp
sub
jle
fiadds
adc
push
add
adc
pop
fcoml
adc
in
add
cld
adc
inc
cs
dec
out
out
std
jg
mov
inc
fdivs
xchg
ds
icebp
gs
cli
jl
cltd
outsb
and
ficoml
iret
add
xor
dec
xchg
aad
jbe
jno
lds
jno
xchg
push
jb
inc
shr
iret
loope
cs
jo
cmpsl
or
repz
pop
push
jnp
test
call
sbb
insb
std
pop
ljmp
nop
jge
lahf
test
std
aas
loopne
out
stos
clc
fisubs
stos
xor
mov
lcall
push
cwtl
inc
push
hlt
or
push
mov
loopne
pop
and
jl
sbb
fwait
mov
lods
pop
notb
nop
push
rclb
aad
mov
adc
xor
sub
mov
cld
inc
mov
insb
aaa
fnsave
xor
into
mov
daa
pop
xchg
sub
imul
test
inc
sub
xor
into
inc
mov
sub
cmp
add
arpl
inc
les
sbb
ss
and
xor
pop
add
out
cmpb
iret
xchg
inc
mov
xchg
stc
push
leave
jbe
xor
adc
fiadds
in
dec
mov
xor
cmp
mov
xchg
lds
test
out
repz
inc
into
ja
push
mov
xchg
push
addr16
fdivrs
sti
fisubs
stc
popf
call
and
inc
lods
fildll
jbe
inc
push
xorb
or
les
cmp
mov
shlb
fwait
mov
mov
cmp
cmc
sar
shlb
test
adc
pusha
sbb
aad
ret
dec
xor
adcl
add
les
enter
xchg
sub
imul
in
xchg
mov
fdivr
jb
push
loope
rcrb
mov
call
je
inc
cpuid
inc
popf
mov
pop
shlb
and
push
sahf
jge
inc
enter
push
push
adc
add
cmc
push
cmpsb
adc
dec
sbb
out
or
cmp
mov
jle
jg
push
shl
jecxz
push
inc
xchg
xchg
movl
pop
cli
inc
std
mov
imull
cmp
jge
or
cmp
cmp
stc
push
test
push
insb
dec
and
xchg
lahf
fiadds
pop
cmp
shrl
sbb
mov
mov
mov
xchg
pop
out
loopne
fwait
mov
sahf
dec
fidivl
ret
sbb
and
xchg
gs
push
lds
nop
mov
ss
and
in
xchg
add
sbb
insl
scas
rorb
in
cmpsb
out
mov
or
hlt
push
call
pop
repz
jns
sbb
xchg
dec
cmp
mov
inc
out
inc
into
popa
and
fnstsw
mov
lock
loopne
mov
xor
rcrb
es
xchg
or
stos
adc
je
clc
and
lret
in
cmc
jae
xor
test
ret
popa
loopne
hlt
ljmp
push
mov
jns
repz
repz
inc
lret
xor
push
xchg
movsb
clc
hlt
ficoml
add
clc
ret
mov
adc
xchg
adc
andb
int3
cmp
popa
or
add
popf
sbb
and
loopne
adc
jnp
loope
enter
mov
lcall
or
add
inc
jge
mov
ret
mov
cmc
fmul
pop
in
shrw
repnz
jns
pop
sub
aaa
dec
dec
xor
mov
or
xchg
test
pop
sti
cmp
ds
mov
mov
roll
icebp
dec
dec
jnp
adc
fcomps
lret
pop
jo
gs
mov
adc
sub
inc
es
jg
aam
es
and
pop
adc
lcall
mov
mov
pop
xor
ffreep
cmp
adc
bound
pop
aas
jle
ja
push
mov
sub
cmpb
inc
cmp
inc
jno
push
xchg
inc
nop
div
stos
jbe
fadds
inc
mov
mov
imul
pop
lcall
loope
sahf
cli
xlat
push
addr16
mov
dec
out
dec
aad
cli
scas
and
fstl
sub
xor
sbb
lds
adc
dec
repnz
ja
stc
stc
fbstp
gs
pushf
mov
pusha
ds
out
jb
cwtl
mov
aad
pushf
cwtl
jno
or
jp
mov
dec
pop
negl
addr16
adc
jmp
mov
sar
add
adc
sbb
rcrl
xor
push
push
out
int
por
ds
pop
fst
outsb
enter
inc
sti
repz
mov
and
and
movsl
ret
and
lods
mov
inc
fidivs
nop
push
cmp
hlt
mov
shll
jb,pt
push
inc
adc
hlt
ss
sub
add
scas
mov
fistps
push
pop
out
popa
out
fidivl
cmpsl
mov
dec
leave
push
lock
sahf
sbb
pop
test
repz
loop
lea
mov
aas
inc
push
sbb
insl
pop
test
fbld
xchg
mov
and
jb
lahf
arpl
shlb
dec
xchg
shlb
aaa
iret
xchg
in
and
or
pop
push
adc
leave
mov
sbb
push
xor
lret
push
mov
lahf
aad
ljmp
mov
hlt
out
pop
insl
out
std
mov
push
stos
pop
cwtl
jp
out
test
add
dec
or
clc
sub
lret
hlt
fs
les
jno
xchg
in
out
insl
mov
pop
xlat
xor
test
jo
adc
cmp
mov
outsb
jns
ret
inc
sbb
cmc
dec
dec
cmp
push
and
xchg
or
or
je
stc
daa
jne
fnstsw
inc
call
movsb
leave
shrb
or
pop
into
lret
shrb
movsb
or
sub
mov
mov
rcr
int
in
mov
addr16
movsb
cs
xorb
fs
addb
jge
jl
inc
pop
jbe
das
data16
addr16
insb
lahf
insb
jo
lret
xchg
sbb
push
stos
test
stos
jg
adc
dec
pop
fs
xchg
mov
and
test
out
xchg
cmpsl
adc
pusha
andb
ffreep
cmc
inc
xor
add
mov
mov
mov
sbb
pushf
aas
push
daa
xor
fs
inc
fisttpll
mov
ret
jbe
dec
lcall
aad
sbb
pop
push
xor
pop
dec
sbb
xor
mov
sbb
inc
or
xchg
shr
sub
inc
das
sti
ret
out
jne
mov
sahf
imul
sbb
faddl
dec
aad
stos
daa
sub
call
ds
std
inc
cmpsb
test
int
xchg
hlt
stos
inc
inc
mov
imul
in
rcll
fcomip
sub
sbb
and
mov
arpl
pop
pop
jge
cmp
sub
out
insb
ret
push
push
mov
cmpsl
stos
pop
call
fdivs
jbe
cmp
add
xchg
loopne
xchg
mov
push
adc
pusha
mov
push
insl
jge
pop
lea
inc
xchg
add
or
hlt
int3
xlat
out
xchg
in
iret
inc
loop
das
inc
out
icebp
inc
fnsave
sbb
mov
pop
imul
ja
adc
out
mov
mov
sub
jno
aaa
cld
pop
push
dec
cwtl
sahf
enter
or
imul
add
int3
mov
pop
mov
sahf
and
mov
push
jnp
sub
jmp
insl
xchg
dec
pushf
cwtl
cltd
push
mov
stc
cmp
imul
arpl
jge
std
dec
and
bound
adc
ret
jp
pop
test
adc
rcll
xchg
negb
inc
mov
inc
push
mov
pop
sub
imul
cmpsl
inc
int
jecxz
jl
in
rorl
imul
jle
dec
rorb
jg
mov
cmpsl
sbb
mov
jnp
outsb
aaa
pushf
movsb
add
mov
push
dec
cmp
stos
and
in
insl
mov
xchg
cmp
add
add
cmc
pop
ficoml
test
scas
movsb
xchg
push
fmull
adc
stos
mov
faddp
jne
cltd
cmpsb
inc
push
sbb
testl
xchg
mov
lcall
add
sarl
pop
dec
push
mov
push
jmp
std
pop
mov
push
rorl
inc
shrl
xor
pop
sub
mov
cmp
aaa
dec
lret
cmp
dec
addr16
imul
xor
loopne
push
int
stos
ja
cltd
outsb
or
scas
xor
pop
jmp
add
les
mov
ljmp
xor
mov
subb
je
stos
movsb
jbe
pop
cmpsb
ljmp
cmc
aas
outsb
sbb
out
mov
and
daa
aas
mov
jo
divl
cs
icebp
and
shr
xor
cmp
rcll
jnp
adc
cld
cmpsb
bound
dec
sub
xchg
imul
mov
adc
rol
aam
js
fcmove
icebp
leave
jge
popf
mov
ljmp
or
xchg
mov
xor
jb
jne
iret
fists
xor
cmp
sub
jecxz
mov
daa
in
xchg
adc
loop
cmp
add
add
push
mov
sub
jl
push
rorl
loopne
adc
stos
and
jp
mov
fwait
arpl
rcrb
cwtl
or
or
add
xor
mov
xorl
mov
jg
test
jge
mov
sbb
pop
stos
mov
fdivs
or
cld
in
push
mov
ret
inc
fidivl
loope
mov
mov
out
sub
dec
shlb
adc
inc
fldt
loope
and
out
cli
sub
insb
adc
lret
jg
ds
stc
and
scas
cmpsb
pop
dec
enter
cli
fs
pop
or
mov
test
mov
pop
xchg
je
stos
sbb
inc
mov
and
pop
xor
cli
lret
cmp
add
mov
jo
std
lcall
cmp
pop
js
xchg
enter
push
xor
lahf
xchg
cs
adc
and
sbb
jl
jne
in
je
push
loope
popl
inc
jnp
ret
xorl
fistpl
insb
mov
pop
es
fsubrp
cs
and
mov
adc
cs
mov
int3
sub
pop
lea
iret
add
pmovmskb
out
or
dec
ljmp
add
xchg
push
stos
cmc
xchg
pushf
adc
pushf
ljmp
push
lds
dec
aam
mov
cmp
adc
sub
xor
lds
jo
lods
xlat
in
mov
sub
test
or
jg
mov
or
pop
je
cwtl
lods
mov
incb
pop
mov
mov
notl
inc
or
cmp
sbb
adc
rcr
or
mov
inc
lock
xor
movsl
xchg
xor
lods
test
pop
xchg
inc
mov
dec
adc
xor
stos
mov
or
dec
xchg
pop
add
shll
mov
iret
repz
mov
and
pop
jp
push
fldt
nop
insb
push
wrmsr
std
sbb
sub
push
mov
add
pusha
mulb
jg
mov
cmpsl
or
pop
inc
cs
cld
out
mov
imul
mov
dec
mov
aam
push
add
cld
repz
out
dec
sahf
xorl
push
or
or
out
iret
mov
push
daa
pop
int3
scas
test
es
pop
mov
inc
ljmp
js
sub
sbb
fists
rorl
xlat
xchg
sbb
rcr
or
jne
mull
icebp
inc
mov
jge
adc
inc
dec
or
add
cld
sub
rclb
ja
jmp
cmp
mov
pop
xor
adc
inc
sub
push
inc
push
xor
lret
sar
xorb
int
inc
push
add
mov
jns
imulb
aas
cmpsb
nop
imul
leave
sbb
nop
popa
aaa
pop
and
mov
in
lcall
push
jl
push
iret
and
fnstenv
dec
xor
push
pushf
mov
shrl
xchg
xchg
nop
xlat
mov
mov
mov
data16
and
mov
mov
bound
cmp
aad
pop
and
xchg
stos
adc
sub
jns
icebp
icebp
std
push
xchg
jl
mov
sbb
rolb
xchg
bound
adc
fistl
push
mov
out
imul
sbb
out
icebp
cmpsl
hlt
sub
insl
add
stos
jnp
lcall
cmp
test
pop
daa
jbe
sub
and
test
mov
shl
xchg
push
daa
add
pop
imul
inc
movsl
and
shl
cmp
cli
inc
push
jae
and
mov
push
add
cmpsl
ja
out
into
pop
xchg
pop
dec
push
xchg
and
ds
es
in
cmp
mov
xchg
and
cmp
mov
stos
dec
addr16
mov
dec
idivb
arpl
stos
nop
stc
pusha
mov
jmp
scas
stos
movsl
insb
int3
addl
jnp
and
mov
sbb
insb
lock
push
sbb
push
fbld
movsb
xor
clc
scas
sbb
add
xchg
cwtl
sub
mov
sub
jne
pop
mov
push
mov
xchg
pop
stos
pusha
xchg
jne
dec
cmpsb
dec
imul
inc
mov
inc
sub
jnp
leave
jge
push
push
rclb
cmp
ret
inc
jp
popf
ss
sbb
mov
push
bound
sbb
outsl
shl
jmp
icebp
test
sub
arpl
mov
jb
mov
lret
out
ds
jmp
je
popa
aam
inc
pop
cs
sub
stos
pop
jmp
adc
rcrl
leave
push
test
cs
repz
movsl
lds
aaa
addr16
jo
add
push
xchg
gs
jge
out
lcall
mov
imul
add
repnz
cmp
adc
and
sbb
mov
insb
pushf
add
loope
out
inc
mov
fdivr
call
loop
mov
aam
ljmp
add
int3
iret
lret
add
sahf
and
notb
push
cmpl
mov
sbb
xor
divl
or
repz
mov
arpl
test
data16
add
xchg
mov
cld
push
fstps
aaa
add
out
xor
or
aas
mov
in
rclb
loop
jo
das
int
in
rcll
pop
xor
sub
lret
lods
sbb
inc
xchg
jne
mov
test
dec
shll
sbb
ror
jns
into
xor
dec
inc
sub
xchg
push
addb
iret
ja
xchg
dec
leave
xor
outsl
push
lds
xchg
xor
cmp
aaa
fnstsw
in
mov
lods
mov
repnz
test
or
enter
adc
dec
jnp
pop
out
mov
xchg
dec
jp
and
iret
popa
pop
adc
xorl
fistps
sbb
lods
jle
cmp
or
jae
dec
inc
enter
test
scas
xor
int3
repz
pop
lret
cvtpi2ps
mov
ja
out
ud1
adc
adc
leave
jns
mov
fnstenv
das
push
push
fidivl
adc
pop
mov
push
add
and
jle
lahf
push
jbe
xor
rorb
ror
fdivr
cld
and
cmpsl
stos
daa
jp
mov
dec
lods
outsl
xor
dec
je,pt
jl
lods
mov
and
push
jle
and
xor
push
xchg
dec
daa
mov
adcb
jbe
in
jp
inc
dec
xchg
icebp
icebp
es
clc
or
inc
push
or
pop
mov
or
inc
les
adc
xor
js
movsb
pop
fucomp
mov
jns
push
mov
jae
adc
out
into
rcll
adc
jne
daa
adc
mov
pop
fistpl
or
dec
in
pop
inc
xchg
add
arpl
jb
bound
popf
mov
addb
movsb
ficompl
popf
in
adc
es
movsw
mov
dec
jno
or
lea
scas
aad
and
mov
pop
lea
mov
sub
cmp
push
adc
xchg
icebp
xor
je
sbb
push
insl
into
hlt
enter
enter
or
aaa
sub
das
push
adc
pop
jle
out
add
cmp
jne
xchg
sub
cmpsl
push
arpl
and
lds
test
ret
mov
out
xor
xor
lcall
jg
pushf
jp
fisubs
mov
mov
pop
addr16
fstl
and
ljmp
mov
or
mov
mov
leave
or
lds
cmp
cld
fsubr
call
aas
cmp
push
sbb
cmp
flds
gs
sub
xchg
sub
and
adc
insl
in
xor
cmp
push
cmpsb
daa
sbb
fdivs
je
adc
hlt
adc
ss
mov
pop
movsl
sbb
jbe
aad
xor
push
addb
lea
jp
adcl
mov
cmc
add
mov
pop
ljmp
cld
outsl
mov
ss
cmp
jns
sub
movsl
push
xor
jp
das
cmp
or
mov
fwait
loop
cmp
jne
out
push
push
pushf
stos
bound
push
mov
iret
shlb
mov
lock
push
xchg
dec
xor
mov
cmp
mov
pusha
lock
mov
xchg
pop
mov
movswl
repnz
insb
push
cltd
mov
ja
mov
movsb
je
sbb
mov
loop
mov
jae
int
inc
sub
adc
sti
rep
and
lcall
popa
lcall
cmc
test
pop
nop
jb
test
out
xor
mov
sub
sbb
sbb
arpl
push
add
gs
push
jae
clc
xor
xchg
push
mov
ljmp
mov
movsb
cmpsl
test
shlb
scas
sbb
in
jmp
repnz
subb
jl
dec
hlt
jns
mov
test
mov
xor
scas
stos
add
xor
jmp
aas
iret
jnp
cmpsb
rep
mov
push
xchg
ret
fidivrs
or
stos
xchg
mov
insl
jle
add
dec
add
mov
xchg
imul
mov
cmp
xchg
mov
je
xchg
xchg
mov
jns
pop
sbb
pop
add
jge
jp
jnp
arpl
mov
bound
mov
sub
push
imul
xor
in
pop
aam
movsl
cmp
adc
aad
mov
and
ret
sti
lcall
pop
ljmp
xor
xor
insl
jmp
adcb
addr16
mov
pop
idivl
cmpsb
xor
xchg
push
adc
je
jns
xchg
and
dec
into
xchg
lret
and
push
push
loope
bound
sub
inc
pushf
outsb
push
dec
cmp
insl
jg
sub
in
fldt
sbb
inc
lret
xchg
push
adc
push
dec
popf
or
xchg
ja
popl
popf
imull
subl
pusha
aam
stos
cli
sub
ds
popf
mov
arpl
xor
inc
outsb
cmp
mov
jge
dec
and
xor
lds
cmp
pop
das
add
mov
mov
loopne
scas
dec
in
and
xchg
jl
ja
mov
mov
mov
andb
rcrl
dec
pop
std
out
flds
sbbb
or
adc
nop
stos
jl
cld
icebp
xchg
ret
std
pop
push
pop
divl
push
outsl
lds
xchg
movsb
cs
dec
insl
mov
lock
xor
das
dec
and
fsubrl
xchg
sub
out
stc
mov
pop
rolb
or
imul
jno
inc
xlat
pushf
loop
pop
push
push
icebp
sbb
adc
push
or
repnz
test
jmp
cmp
aad
test
pop
cmp
pop
jg
aaa
out
xor
inc
cmc
inc
testb
pop
xlat
out
mov
or
sbb
mov
leave
or
cmp
pushf
fdivrs
mov
int
jecxz
adc
repnz
push
push
aaa
add
lds
std
sub
sub
inc
add
and
pop
js
aad
dec
outsl
jg
xchg
out
cmp
aaa
jge
push
push
mov
bound
fcoml
aam
jns
and
push
das
mov
inc
sub
xlat
addr16
mov
mov
adc
pop
xor
ds
jbe
lods
jg
ja
sub
icebp
movsb
push
call
stos
sbb
repz
js
pushl
xchg
enter
popf
add
push
cmp
mov
inc
jge
nop
mov
cmpsw
inc
rolb
dec
clc
sbb
fldcw
pop
or
pop
add
inc
imul
inc
jno
ja
or
jno
add
push
dec
int
mov
hlt
dec
js
out
and
mov
add
jae
xor
or
leave
jmp
lret
insb
mov
aaa
push
cs
outsl
jbe
test
mov
mov
dec
into
pushf
mov
xor
int3
lret
mov
movsl
jae
in
out
or
or
xor
jg
pop
and
pop
test
push
pop
jo
stos
xorl
pop
add
xlat
jl
xchg
scas
add
stos
pop
out
xchg
cmp
mov
cmpsl
shll
inc
push
enter
call
sbb
out
mov
adc
sbb
push
ret
lret
cld
lods
mov
psrad
out
cmpsl
dec
insl
xchg
pop
pop
mov
mov
sti
inc
jno
lods
pop
orb
js
cwtl
mov
frstor
fidivs
pop
xchg
fcompl
pop
shlb
pop
push
inc
or
dec
sbb
dec
sbb
mov
fdivrl
and
xchg
lret
sahf
fs
adc
cmp
inc
cmp
stos
ret
and
push
add
mov
pop
mov
pusha
rclb
cltd
jge
mov
sbb
cmpsl
bound
loope
adc
jns
es
fwait
inc
enter
push
xchg
leave
pop
push
xor
decb
stos
and
test
lcall
cmp
ja
andl
sbb
dec
push
jle
mov
ja
out
xlat
sarl
shl
pushf
mov
xchg
faddl
dec
cwtl
mov
test
dec
test
push
inc
aad
fs
lea
es
adc
ss
jmp
mov
pop
in
inc
aaa
xor
inc
out
test
mov
jmp
popf
jo
std
cltd
dec
pop
xchg
push
jo
xor
mov
mov
stc
or
pop
lret
adcb
fwait
push
imul
test
or
push
movsl
stc
fsubl
fmul
mov
outsl
jo
and
jne
loop
add
mov
xor
adcl
ret
outsb
enter
jmp
push
lret
add
scas
pusha
pop
cmpb
dec
imul
push
cmp
icebp
out
cltd
lret
cwtl
arpl
mov
arpl
mov
gs
cld
out
jnp
rcrb
ret
mov
subw
jo
cmp
cld
or
add
or
xchg
inc
rcrl
adc
arpl
test
aam
sbb
popa
push
xor
xor
test
add
mov
mov
mov
cmpsb
mov
xlat
cltd
into
pusha
out
adc
mov
je
shlb
jecxz
sbb
jnp
cli
daa
push
ljmp
jo
fldl
cli
xor
jl
mov
jl
imul
pushf
xor
mov
outsl
mov
pop
lret
pop
call
cs
jg
popa
movsb
cmc
fcompl
sbb
mov
fdivs
xor
lahf
popf
sub
mov
insl
mulb
lds
push
lods
mov
jmp
inc
cmp
sbb
mov
cmpb
das
fwait
push
sub
fwait
xchg
nop
sbb
jae
pop
stos
xchg
outsb
js
in
mov
loopne
fs
lods
std
rol
xchg
icebp
inc
mul
rclb
mov
fisubs
dec
icebp
mov
pop
push
xchg
daa
sub
hlt
inc
in
mov
lret
push
int3
sarl
fisubl
fidivrl
loop
in
into
pop
dec
inc
data16
pop
cmp
inc
xchg
sarl
dec
cld
mov
and
rcr
sbb
jge
outsb
cmpsl
xor
inc
pop
or
pop
fiadds
jnp
wbinvd
shrl
cmp
adc
addr16
sbb
lret
cltd
rorl
mov
push
push
cmp
dec
push
addr16
mov
dec
cld
enter
sub
dec
add
dec
cmp
jnp
testl
dec
jns
lret
mov
push
xor
push
mov
jp
cmp
lcall
nop
mov
das
inc
pop
push
mov
sub
cmp
shll
jae
fs
inc
pop
test
hlt
scas
mov
xchg
adc
fbstp
mov
jl
es
cmpsb
xor
fldl
mov
pop
inc
sti
out
repz
cmp
fs
mov
inc
mov
xchg
sbb
sahf
mov
and
xor
out
sbbl
mov
cltd
insb
jb
cld
xor
idivb
insl
fmuls
lahf
sbb
popa
inc
fnstenv
sbb
stos
hlt
pop
fs
mov
pop
add
jge
pop
inc
dec
cmp
jae
aaa
out
dec
ret
addb
cmpsl
pop
jbe
hlt
stc
pop
add
call
adc
mov
data16
push
mov
int
jns
out
stos
jns
es
mov
out
and
arpl
or
mov
aas
je
add
int3
mov
in
rorb
mov
je
loopne
add
xchg
push
jmp
sub
add
pop
mov
notb
mov
cltd
inc
adc
js
mov
movsl
cmpsb
push
hlt
jbe
mov
int
lods
add
mov
adc
divl
lcall
mov
int
enter
lea
dec
daa
sarb
adc
pop
or
test
ret
stc
jne
mov
fsubp
mov
jecxz
jo
add
mov
cmp
arpl
or
jg
push
popa
and
and
aaa
repz
dec
add
mov
test
ds
sbb
inc
out
cmc
xchg
xor
mov
scas
sahf
cmp
xor
cltd
adc
sub
jecxz
jmp
mov
jo
mov
xor
cmp
mov
into
pop
cltd
jb
bound
aas
mov
pop
shl
mov
lret
fwait
pop
test
inc
lahf
enter
mov
popf
cmp
xlat
xor
imul
cmc
mov
jmp
jnp
add
movsl
cmpsl
ljmp
pushf
cltd
cwtl
stc
fwait
add
daa
pop
shrb
xor
imul
sbb
mov
lds
adc
loope
adc
out
stos
ret
aas
pop
inc
lahf
pop
es
mov
pop
neg
and
cltd
js
iret
pusha
cmp
hlt
fisttps
mov
sub
lods
and
stos
imul
pop
lahf
movsb
movsl
int
xlat
push
sub
bound
adc
gs
cmp
mov
adc
enter
lea
hlt
or
std
out
sbb
mov
mov
rcrb
dec
add
xor
enter
xor
mov
pop
or
mov
stos
std
sub
push
sbb
mov
pop
sarb
repz
data16
sbb
pop
jecxz
out
int
mov
stos
jae
dec
sub
dec
pop
loopne
cli
add
ja
adc
loope
dec
lds
cli
es
mov
loopne
das
xor
clc
and
mov
stos
idivb
mov
mov
or
hlt
cmp
jp
and
dec
jg
xor
cmpsl
xchg
lahf
push
int
mov
inc
scas
xorl
push
mov
jp
pop
cmp
test
aad
xchg
add
mov
adc
pop
or
adc
iret
gs
popf
bswap
cmc
and
cltd
mov
jb
pop
sbb
sti
pop
movsb
and
and
xor
lret
push
out
jmp
ja
jo
sub
cmpsl
jbe
push
fisttpl
repz
ret
jb
jle
lret
xor
daa
pop
std
movsl
or
pop
adc
push
enter
addl
in
cmp
mov
loopne
pop
or
sbbb
fwait
push
test
rol
pop
xchg
out
inc
pop
push
mov
orl
xchg
mov
popf
cmpsl
mov
mov
in
mov
hlt
pop
mov
nop
fisubl
inc
adc
xor
pop
dec
add
fsubl
push
jnp
inc
in
cwtl
test
es
loop
insb
ds
mov
sub
adc
mov
ret
jae
mov
in
cmp
cs
xor
in
dec
adc
loopne
out
in
and
dec
fcomp
call
inc
xor
pop
aam
jnp
inc
in
sbb
or
mov
gs
mov
jecxz
pop
push
mov
aam
xchg
cltd
in
sbb
scas
ror
or
pop
mov
daa
sbb
jbe
push
test
scas
xor
sbb
cwtl
jnp
sub
mov
add
lods
outsb
adc
jns
int3
nop
in
ficoml
gs
lea
mov
ljmp
icebp
aas
fldt
xchg
jmp
jo
int
out
xor
sub
push
pop
hlt
mov
incl
adc
not
push
addr16
aam
mov
dec
movsb
lea
mov
ret
add
pop
pop
lea
or
pop
jmp
push
push
pop
inc
shlb
data16
push
loope
testl
cld
les
fildl
cmp
cmpsl
mov
int3
sti
in
nop
push
je
jb
mov
xchg
loopne
mov
imul
mov
repz
mov
int3
sub
xor
std
lods
jbe
clc
mov
js
jbe
sub
pusha
and
xor
movsl
shr
test
sbbl
les
pop
cmpsb
bound
jbe
dec
stos
out
mov
push
pop
dec
xchg
addr16
pushf
les
jbe
cmp
ret
pop
mov
repnz
stc
sbb
add
mov
jmp
pop
lds
push
mov
add
dec
pop
js
xchg
loope
xorl
repnz
add
test
cmp
push
mov
jb
incl
movsb
inc
enter
std
test
sbb
push
mov
das
out
inc
jbe
mov
mov
push
add
lods
and
imul
cwtl
cmp
push
cwtl
fldcw
out
and
lret
test
push
iret
push
sbb
mov
pop
adc
or
jae
or
shl
stc
daa
jbe
das
cmpsl
ja
sub
in
lds
leave
mov
inc
or
rcll
movsl
iret
sbb
mov
idivl
div
movsb
out
daa
je
cmp
sbb
enter
add
and
psllq
cmpsl
mov
fisubs
ja
movsl
sub
arpl
pop
push
out
bndstx
cmpsb
push
jb
xor
xor
popa
cld
or
dec
outsl
sub
or
pop
notl
les
mov
das
shlb
jo
rolb
fsubr
push
lock
insb
xchg
test
jecxz
cmp
insb
loope
loope
repnz
cli
sub
pushf
imul
subl
pop
int3
push
rcrb
xchg
outsl
push
xchg
jle
add
mov
push
scas
fwait
mov
fdivrp
jnp
jno
cmp
repz
ljmp
aas
inc
inc
mov
sub
in
sbb
and
pop
loopne
es
fcoms
sbbl
fistpll
and
insb
ret
roll
jg
jmp
ss
cli
stos
mov
stc
or
mov
mov
or
mov
aad
ljmp
sbb
xchg
loop
adc
jge
jmp
shl
and
mov
gs
ss
mov
ljmp
push
arpl
mov
stc
cmp
jl
and
lock
insb
mov
xor
xchg
dec
out
cmpsl
dec
push
pop
out
and
inc
cmpsb
cmpsl
xor
mov
addr16
push
mov
xchg
push
mov
dec
std
adc
or
in
mov
in
sub
fbstp
pop
out
xchg
mov
pop
jo
int
xchg
mov
sub
add
mov
sub
pop
sbb
push
sbb
sub
fistps
add
call
jae
mov
and
cmp
ficomps
push
inc
xchg
test
add
mov
leave
jo
outsl
pop
addr16
out
nop
jmp
mov
sub
roll
dec
mov
jno
stc
ss
mov
and
jge
fs
mov
xchg
imul
push
bound
xchg
sti
mov
cwtl
neg
lret
ja
bound
or
inc
popf
cmp
and
dec
jae
orb
das
test
add
out
pop
push
add
add
jo
mov
inc
push
movsb
and
mov
gs
data16
and
cli
fwait
sub
mov
arpl
enter
mov
mov
ss
clc
lds
popf
jo
ss
pop
insb
mov
fnstenv
in
dec
lret
iret
cwtl
addr16
mov
sub
dec
xor
adc
aaa
out
ret
cmpl
cltd
ret
scas
arpl
in
call
mov
daa
cltd
cmpsb
inc
scas
xchg
adc
jmp
enter
mov
or
rorb
sub
mov
mov
subb
pop
in
fcomps
aaa
xor
cmpsb
fwait
shll
cld
fisttpll
and
add
cmp
sbb
out
loop
jmp
incl
cmc
dec
or
mov
mov
hlt
sbb
mov
mulb
ret
lret
xor
insl
hlt
icebp
dec
div
mov
in
or
stos
inc
pop
dec
xor
int
inc
sahf
jae,pn
fnstenv
and
cmp
lcall
xchg
mov
enter
push
sbb
fimull
ficoml
jo
out
test
stc
fidivrs
sbb
pop
sub
gs
nop
or
fs
cwtl
movsl
leave
cmp
movsl
fwait
push
mov
out
pop
shl
lea
xor
jl
cmc
arpl
fnstsw
imul
sahf
dec
out
addr16
adc
mov
pusha
out
and
aaa
push
dec
cli
or
aam
out
cmpb
mov
xchg
mov
and
movsl
mov
mov
daa
push
ljmp
pop
mov
pusha
pop
xchg
dec
fs
daa
dec
cmp
std
movsb
dec
dec
or
popf
push
es
push
mov
fidivs
mov
jge
xchg
jnp
inc
mov
outsb
push
xchg
aam
clc
out
rcll
data16
out
outsl
mov
fwait
jbe
mov
adc
adc
fwait
adc
mov
repnz
pop
repnz
xchg
into
cmp
cld
cmpsl
addl
fldl
filds
mov
int3
xchg
leave
xlat
push
cmp
ja
or
push
fisttps
sub
jmp
ret
inc
mov
repnz
mov
imulb
or
idivb
ret
in
mov
mov
xchg
stos
pop
cwtl
and
jp
nop
mov
dec
mov
icebp
sbb
arpl
xchg
mov
fs
sbb
dec
lock
or
jle
sub
push
mov
cmp
xor
fmul
and
mov
fsubs
icebp
inc
stos
inc
loope
movsb
lds
jb
mov
out
xor
xor
sub
push
sbb
lods
xor
mov
jo
xchg
sti
push
addr16
jb
add
inc
cs
xor
cmp
mov
push
decb
pop
pusha
std
dec
add
test
pop
pop
leave
addr16
or
icebp
ja
sub
loope
xchg
rorb
stos
inc
jp
rorb
enter
mov
fisttpll
sub
pop
pop
pop
and
les
sub
sub
jb
or
in
or
fisttpll
shl
pop
je
fs
in
leave
int
push
mov
es
fsubrs
in
adc
shl
jmp
outsb
dec
outsb
adc
cmp
test
dec
into
dec
shlb
xor
scas
add
sub
inc
xchg
les
cmp
int
jge
bound
mov
xlat
test
test
fisubrl
mov
mov
jae
jbe
jge
push
dec
call
or
mov
icebp
cs
bound
adc
adc
in
outsb
ja
sbb
stc
repnz
jo
loope
inc
or
pop
stos
mov
adc
repnz
out
or
adc
and
mov
mov
les
and
rcrb
add
inc
pop
dec
or
xchg
js
cmp
mov
gs
xchg
sbb
sbb
mov
jecxz
mov
outsl
cmc
hlt
push
push
xchg
lods
dec
int3
adc
jmp
fidivs
in
dec
pushf
sbb
adc
std
push
lret
cli
enter
cs
sbb
cmpl
push
dec
add
pop
mulb
and
sbb
pop
es
fistpl
xchg
pop
xchg
or
cmpsl
jb
mov
mov
lahf
fidivrl
fs
mov
mov
mov
jmp
lea
pusha
pop
cltd
sub
mov
aad
clc
mov
dec
xor
cwtl
or
int
add
movsl
fadds
loope
push
mov
pop
aaa
cmpsl
mov
cli
mov
in
jp
cmp
inc
mov
cmp
pop
lret
data16
mov
les
xchg
bound
cmp
inc
mov
dec
pop
je
mov
pop
jle
push
mov
xchg
pusha
or
jnp
jae
lret
cltd
pop
into
cmp
inc
orl
jbe
push
inc
push
jo
inc
inc
mov
jmp
pop
and
rcl
sbb
mov
push
push
outsl
loop
imul
xor
test
in
adc
pop
movups
leave
xchg
loopne
out
scas
addl
mov
sbb
jb
das
mov
inc
jecxz
daa
imul
js
ds
stos
add
mov
push
scas
shl
ror
test
les
lds
cmp
jp
aad
fwait
ret
dec
mov
aad
inc
ret
sahf
or
in
loope
aas
scas
xchg
fwait
mov
maxps
cmp
mov
adc
or
pop
pop
in
sub
inc
into
dec
xchg
xor
cmp
xlat
and
xor
jns
enter
movsl
and
fxch
sub
add
cmpsl
loop
and
stos
enter
add
ja
and
lods
xchg
jne
or
fstpl
out
imul
and
lods
push
js
nop
adc
fisttpl
inc
xchg
fmul
jo
mov
xchg
adc
rcrb
fcmovb
stos
mov
pop
shlb
pop
andb
pop
loope
push
fcmovb
add
xlat
enter
mov
leave
hlt
fs
leave
xchg
notl
insb
jae
movsb
cli
xchg
mov
test
sbbb
jmp
xor
adc
mov
fwait
vhaddpd
jo
jge
in
lock
inc
adc
jnp
out
cltd
iret
mov
jecxz
pop
push
cltd
pop
and
ja
std
fwait
jnp
js
outsb
and
pop
xlat
je
clc
mov
jno
loope
lds
cmpsb
shll
out
sbb
inc
mov
or
dec
xchg
mov
es
xchg
call
outsl
jl
negb
xor
push
and
les
or
push
fdivrl
dec
jle
sbb
sbb
in
pop
imul
pop
pop
cmp
jb
pop
xchg
mov
fidivs
cmp
rcrb
add
inc
aad
push
int
test
mov
inc
jge
shlb
orl
enter
pop
sbb
ja
fsubrp
cmpsb
cli
push
add
gs
and
or
into
jp
sbb
inc
or
ret
pop
jnp
cmc
adc
cltd
mov
and
movsb
ficoml
ss
add
adc
dec
ja
push
pop
leave
in
mov
jo
int
mov
mov
cmp
ss
hlt
jnp
in
gs
and
lea
lock
insl
push
mov
mov
dec
jne
inc
int3
sub
flds
in
xchg
mov
ret
insb
mov
lret
xchg
push
mov
and
rcll
xor
mov
fildll
andl
push
push
inc
in
in
jge
js
xchg
pop
push
pop
mov
lcall
roll
mov
pop
fucomip
mov
lret
add
test
add
jg
out
cltd
pop
test
outsb
lcall
mov
jne
cmp
pop
mov
fidivrs
pop
or
fldl
mov
adc
dec
into
cmpsl
jae
not
rol
sub
rcrb
mov
das
test
fstl
mov
xlat
cmp
outsl
xchg
inc
test
int3
scas
int3
fiaddl
mov
repz
decb
in
push
stos
call
mov
inc
ja
in
jo
movsl
or
fadd
dec
cmpsl
mov
fcmovnu
das
add
ret
mov
insb
adc
insl
lahf
mov
es
lock
mov
imul
add
or
jl
popa
sbb
in
sahf
rcrb
js
leave
negl
inc
mov
popf
push
jns
loop
scas
cmp
nop
jle
cmp
mov
loope
pusha
clc
lock
cld
mov
sti
gs
daa
sbb
and
cmpsl
mov
add
cmp
mov
xchg
pushf
sahf
sub
stos
adc
or
pop
out
add
in
scas
sub
and
ret
fcmovnb
sub
nop
mov
inc
adc
mov
mov
xor
clc
mov
stc
fists
jno
cmp
out
lea
or
and
ss
push
sub
push
loopne
sbb
xchg
or
mov
pop
and
pop
ds
add
cmp
mov
aaa
xor
test
addr16
fucomi
in
xchg
or
fistpll
xor
xorb
jg
lret
xchg
outsb
pop
sub
mov
mov
dec
rcrl
and
xlat
and
addb
pop
dec
and
fcomps
cmp
fs
mov
cmpsb
cmc
dec
iret
fcomip
cmp
or
cld
xchg
fs
cmp
sbb
shrl
adc
dec
cmc
test
jo
orl
add
mov
movsb
push
sti
pop
cmp
pushf
jle
mov
mov
cmp
or
pop
mov
pusha
les
push
repz
push
dec
sbb
subb
dec
jns
sahf
add
and
enter
loopne
cmp
dec
loop
pop
add
test
dec
bound
ret
out
dec
lods
and
mov
test
xlat
adc
pop
add
ficoml
stos
mov
pop
ja
cmp
nop
fmuls
sbb
push
jle
jl
push
outsl
movsb
enter
aaa
adc
scas
mov
mov
add
pusha
cld
jbe
js
cmpsb
testb
subl
test
cbtw
outsb
mov
js
push
or
cmc
iret
aad
shlb
data16
add
ja
rclb
fcoms
into
imul
popf
mov
loope
mov
shl
shrb
jne
jecxz
cmp
jno
and
std
gs
mov
mov
cltd
ret
jbe
aaa
cmp
popa
xor
pushf
cmp
out
bswap
stc
cmpsl
mov
ficompl
das
cmp
jno
repz
sbb
stos
jmp
mov
fbstp
lcall
pop
mov
cmp
jle
bound
push
ljmp
xlat
mov
inc
insb
jl
lea
sub
push
popf
jbe
out
inc
add
out
push
xchg
jnp
cmp
aam
mov
loop
pop
push
imul
ss
push
int3
test
mov
dec
xchg
dec
ss
insl
mov
adc
out
jmp
lea
pop
dec
icebp
fdivs
mov
sub
mov
andl
sbbb
mov
adc
xlat
pop
fisttps
pop
inc
nop
inc
push
jns
ficomps
jl
push
rorb
in
ds
push
ss
out
insl
je
sbb
imul
call
test
lods
push
push
int3
ljmp
loopne
cmc
push
mov
in
scas
pop
sub
jge
lret
fsubrp
hlt
dec
cs
inc
rclb
cmc
xlat
roll
pop
dec
mov
mov
into
fs
test
fnsave
mov
int
test
push
pop
mov
add
stos
mov
add
imul
fsubl
stos
adc
and
mov
cmp
sub
cld
in
imul
mov
int3
incl
sbb
jnp
lahf
pop
sub
ficompl
xchg
and
inc
sbb
push
mov
mov
fwait
push
or
add
lods
out
test
insl
int
enter
jo
insb
sub
ss
xlat
push
aas
xchg
mov
xchg
cs
mov
in
mov
dec
out
daa
dec
loop
adc
cmp
andb
into
in
ficoml
push
sbb
lock
imul
inc
pushf
push
and
xchg
iret
and
jmp
and
xchg
pop
inc
sub
mov
xchg
pop
nop
adc
xlat
outsl
add
sbbl
mov
adc
xchg
ds
dec
xchg
repnz
xor
lahf
inc
pop
inc
lods
jno
ret
test
cltd
sub
mov
je
jno
test
insb
or
daa
outsb
sub
jnp
mov
sub
add
adc
mov
cmpl
inc
cs
loope
test
cmp
adc
orl
lds
jns
int
mov
sub
in
mov
dec
xor
cli
xchg
aam
jecxz
add
pop
adc
and
xchg
cld
mov
gs
mov
add
movsb
in
xor
vpsubsw
push
xor
mov
rcrl
or
pop
subl
mov
mov
mov
cwtl
shl
lret
repnz
inc
xchg
cwtl
lahf
lods
jae
aaa
popf
bound
or
imul
movsl
jecxz
js
xchg
stos
sti
shr
mov
or
sbb
pop
imul
cmp
out
and
js
imul
imul
outsl
fwait
cwtl
out
sbb
xchg
jno
cmpsl
ss
fcoml
push
test
fbld
xchg
or
push
mov
jmp
mov
movsb
jmp
xor
mov
es
int3
pusha
xchg
mov
cli
fisttpll
or
pop
cld
nop
fs
cli
jne
or
cltd
mov
jp
flds
and
pusha
sbb
fsts
sbb
xlat
add
mov
sti
and
loope
cld
cmpsb
rcll
repnz
je
pop
dec
js
jle
jne
popf
popa
jae
test
jl
loop
shl
testl
out
repnz
mov
loope
mov
mov
nop
aaa
test
push
imul
subb
fwait
push
imul
push
fnstenv
mov
cmp
bnd
ret
push
pop
xchg
pop
out
mov
in
lcall
sbb
mov
fsubl
loopne
add
push
dec
aad
xor
stc
jnp
outsb
inc
cmp
in
adc
movsl
sbb
repnz
daa
addr16
pop
lea
dec
cs
loope
cli
lods
adc
cmc
aad
mov
inc
js
jb
in
mov
out
jae
es
jae
insb
pushf
cli
xor
adc
mov
dec
mov
xor
mov
out
jecxz
sub
sbb
clc
pop
popa
push
add
pop
push
cmc
cmp
xorl
jmp
hlt
inc
xchg
pop
sbb
andb
mov
testb
je
enter
mov
fildl
xor
xchg
inc
pop
cltd
jbe
adc
in
jg
fs
fwait
aas
enter
and
cmp
shrb
inc
inc
pusha
inc
js
add
jmp
pop
aas
inc
jmp
mov
cltd
sub
inc
pushf
xchg
loopne
test
out
lods
adc
inc
xorl
jle
pop
mov
movsl
mov
scas
stc
or
adc
ss
sub
mov
add
clc
mov
adc
xchg
stc
mov
sbb
in
mov
dec
divl
outsl
std
cmc
sbb
push
notl
cmp
decl
add
cmp
jle
xchg
pushf
mov
push
and
mov
movsl
mov
push
test
jmp
xor
aaa
sub
lahf
mov
lcall
mov
push
sti
fcmove
push
mov
imul
int3
in
dec
pop
out
addb
jmp
ret
insl
xlat
fisttpll
arpl
jmp
jo
adc
fsubrl
addl
jmp
or
jne
and
or
shl
pop
sub
xchg
rclb
xchg
insb
mov
add
cmp
cltd
and
call
mov
test
popa
push
pop
std
jecxz
xchg
scas
fiadds
test
inc
fmull
aas
dec
lock
int3
and
outsl
mov
push
mov
mov
adc
mov
call
hlt
or
addl
adc
rorl
cmp
lret
loopne
jmp
xor
in
sbb
int
fwait
sbbb
mov
jns
xor
mov
mov
or
dec
pushf
jns
dec
cwtl
je
dec
fwait
push
jae
cmc
js
bound
fwait
mov
call
iret
in
sub
adc
push
inc
push
mov
nop
cmp
mov
fnstsw
scas
dec
jb
es
push
inc
enter
pop
mov
xchg
mov
jg
out
adc
add
ret
lahf
sahf
hlt
ret
inc
lahf
jne
mov
mov
xchg
sub
loop
aam
push
lock
subl
sahf
jl
movsl
insb
mov
divl
aaa
jge
outsb
fmul
adc
cltd
aam
sub
mov
mov
shl
xchg
jae
sbb
leave
inc
sub
push
fnstcw
push
pop
cmp
push
jl
xor
bound
das
sbb
xorl
cmpl
sbb
inc
mov
mov
xchg
and
cld
dec
decb
icebp
mov
in
cld
movsb
inc
les
call
push
lods
xchg
cld
rcl
adc
pop
lcall
enter
arpl
xchg
mov
cwtl
xor
sbb
push
daa
xor
lcall
mov
fwait
jge
cmp
adc
test
or
cmp
pop
sbb
gs
cmp
pop
arpl
xlat
adc
movsb
imul
outsl
clc
sbb
dec
mov
xchg
add
repz
jne
pop
jne
sbb
xchg
sbb
mov
into
call
fisubl
ja
or
mov
cmp
test
pop
push
pop
outsb
in
mov
xor
sbb
add
stc
dec
push
cmp
push
enter
mov
jl
inc
mov
lahf
sbb
icebp
mov
and
add
xor
or
repz
cmp
xor
sub
dec
xor
mov
ret
jmp
pop
pcmpeqw
mov
fwait
movsb
je
jo
popa
sbbl
jge
mov
push
pop
pop
push
shlb
add
dec
mov
inc
mov
loope
pop
mov
mull
mov
pop
subb
stc
ret
lcall
mov
lcall
sub
sub
dec
mov
pop
mov
hlt
arpl
cmp
ja
mov
gs
out
pop
sbb
and
dec
outsb
mov
jl
xlat
or
xor
xchg
aaa
push
stos
sub
sub
jle
pushf
push
xchg
loop
fcmovne
ja
ret
fnstsw
pop
nop
pop
mov
in
inc
sub
scas
mov
mov
in
shlb
pop
sbb
test
lret
int
sbb
sub
mov
repz
std
fucomip
cmp
mov
stos
lahf
adc
inc
repz
add
icebp
jno
mov
repz
aas
adc
jl
cmp
jns
cld
mov
mov
in
pop
sub
leave
ficomps
mov
add
cmp
xchg
inc
cvtps2pd
pop
dec
mov
lahf
je
mov
push
xchg
enter
mov
dec
push
mov
pop
into
movntq
xchg
inc
push
insl
or
or
add
cmpsb
pop
cmp
mov
sbb
inc
dec
ficomps
pop
out
sbb
or
mov
push
xchg
pop
pop
sub
push
mov
jnp
lds
aad
mov
xor
icebp
out
inc
sub
sub
dec
dec
inc
xor
movsl
pop
jp
ret
push
cltd
and
inc
loopne
lcall
enter
push
sub
shll
lock
data16
jg,pn
outsb
fildl
push
mov
add
mov
xchg
out
divl
or
mov
pop
mov
pop
pop
dec
xchg
aam
insl
xor
lret
popf
dec
dec
pop
into
in
jge
leave
cmpsl
mov
lds
dec
int
sbb
jle
repnz
fcomip
jg
hlt
pushf
iret
sbb
push
rorb
test
cltd
mov
mov
pop
jnp
enter
gs
mov
in
inc
cmp
xchg
imul
outsl
push
lods
unpcklps
sub
test
rclb
ljmp
lods
lcall
mov
mov
mov
mov
mov
xchg
les
inc
jp
sbb
insl
insl
les
and
stos
xchg
xchg
repz
stc
dec
aad
lock
pop
and
das
leave
orl
jnp
or
iret
cmp
out
hlt
fistpll
cmp
add
adc
pop
xchg
bound
ja
inc
outsl
jecxz
movl
dec
push
jb
das
arpl
loop
cmpsl
mov
repnz
pop
stc
push
test
pop
push
push
add
movsl
scas
adc
mov
fbstp
sub
cmp
out
push
ficoml
or
lcall
loope
cmc
test
jnp
sbb
inc
ret
mov
add
add
aas
lcall
dec
xchg
lock
inc
arpl
test
mov
dec
xchg
addr16
aam
sbb
xchg
inc
call
lock
mov
jo
out
mov
test
shl
pop
adc
sahf
repnz
ds
add
jmp
or
lds
jg
xor
push
cmpl
xor
repz
mov
dec
push
mov
sub
and
icebp
cmpb
cli
icebp
aam
jns
aaa
add
lock
out
push
jl
inc
add
cltd
inc
push
cltd
stc
std
mov
repnz
int
adc
jne
mov
xchg
hlt
sbb
testb
jmp
push
pushf
leave
stc
sbb
jl
hlt
jns
shr
push
je
lret
je
hlt
mov
icebp
lock
addr16
jno
adc
out
ja
xchg
lahf
mov
inc
das
jae
lss
loop
xor
xor
int3
xchg
mov
popf
in
jo
rorb
ljmp
call
jmp
fwait
pop
je
pop
aas
mov
push
push
sbb
inc
clc
std
sbb
test
mov
lea
shl
fs
dec
cmp
and
mov
sar
push
mov
xchg
pop
dec
pop
jp
pop
inc
jmp
hlt
sbb
mov
test
adc
sbb
mov
and
pop
ds
dec
mov
sbb
push
xchg
xor
inc
bound
mov
addr16
or
out
push
rcrb
sub
mov
cltd
mov
lret
mov
xchg
mov
and
sbb
lret
popf
and
lret
push
test
mov
lcall
and
pop
and
mov
xchg
push
or
sar
ja
inc
insl
leave
inc
loope
outsl
push
and
imul
mov
cmp
out
sbb
xchg
lods
movsb
cmpsl
sbb
jecxz
cmp
daa
repnz
jns
es
mov
push
test
aad
xchg
lret
es
push
cwtl
mov
cltd
pop
les
xchg
push
cmp
jns
aad
imul
hlt
jl
and
push
cmp
xor
sub
sub
outsb
fdivrs
mov
out
aas
cmp
popa
push
pop
jg
adcb
cmp
push
fidivrl
orl
je
and
call
cmp
adc
and
mov
fcomps
push
mov
aam
sahf
hlt
imul
icebp
incl
daa
or
adc
pop
shrl
dec
pop
pushf
xlat
scas
or
dec
ds
pop
push
cmp
dec
pop
mov
xor
push
dec
movsl
ja
dec
jae
ljmp
adc
in
cli
xchg
in
daa
sahf
mov
outsl
insb
sub
adc
iret
mov
cmp
adc
ds
inc
mov
int
cmp
xor
pop
inc
or
and
lds
pop
inc
mov
test
in
inc
imul
mov
pop
in
mov
mov
pop
sub
out
popa
les
out
pop
test
mov
mov
enter
fmulp
icebp
xor
mov
mov
pushf
mov
cld
in
adc
add
xchg
xchg
sub
jl
loopne
xor
bnd
dec
outsl
dec
sbb
fwait
mov
mov
ret
loope
add
jb
lea
pop
mov
mov
pop
sub
dec
inc
xor
mov
jmp
negb
dec
and
mov
daa
sbb
pop
xor
arpl
ss
mov
cli
inc
insb
clc
mov
lcall
add
xor
jmp
shrb
enter
inc
nop
adc
sbb
mov
push
stc
test
adc
lods
inc
mov
and
popa
sbb
int3
hlt
mov
xchg
cmp
cld
inc
cmp
out
inc
subl
adc
xchg
lock
dec
jne
mov
movsl
ja
out
xchg
dec
out
jb
sub
add
pop
xchg
mov
pop
pushf
ds
mov
jle
pop
dec
mov
and
idivb
pusha
fsubrs
sub
add
pop
cltd
add
shlb
jl
add
or
mov
arpl
iret
imul
sub
mov
addb
ss
mov
out
test
fsub
add
dec
das
cltd
mov
xchg
push
ljmp
or
fildl
pop
cmp
iret
cwtl
or
lea
mov
inc
inc
xchg
loope
outsb
sub
inc
outsb
or
idivl
mov
loopne
lods
cmp
not
mov
push
mov
sti
popf
inc
popf
cmp
dec
cli
sbb
icebp
add
dec
add
mull
popl
jae
fldt
mov
pop
int
cmp
js
adc
lock
xor
sti
repnz
pop
into
out
lds
pop
pop
shlb
cmc
not
add
mov
mov
sbb
jbe
fdivs
or
push
stos
fwait
cmc
adc
and
in
js
or
xchg
pop
jns
js
sub
les
pop
dec
push
dec
add
jp
mov
nop
loop
es
ret
les
pop
adc
daa
and
push
mov
bound
imul
insb
ja
movsl
rcll
lret
xchg
outsl
popf
cmp
mov
mov
je
pop
push
loop
arpl
hlt
cmp
iret
out
bound
lret
es
jb
sbb
push
bound
iret
cmp
push
jae
cmpsl
inc
mov
sub
jne
outsl
xchg
enter
sti
mov
ljmp
or
mov
lea
or
mov
pop
fisubrl
aaa
out
jmp
iret
cli
fnsave
lea
ret
add
cs
into
lods
in
in
sub
xchg
pop
sahf
stos
or
je
mov
lds
rcrb
sbb
push
xor
or
mov
sbb
xchg
mov
cmc
mov
fwait
mov
loop
pop
and
cs
mov
stc
add
out
jp
fnstsw
xchg
mov
test
ror
mov
cmp
mov
sbb
dec
call
sarb
dec
icebp
scas
iret
fdiv
sahf
imul
dec
jecxz
frstor
cmp
push
leave
es
fs
in
xchg
mov
xor
frstor
push
jbe
adc
xchg
jmp
xchg
loop
in
popa
out
shrl
mov
push
pushf
mov
inc
movsb
cmp
rcll
fldlg2
or
adc
ret
jno
cmp
mov
jbe
fistps
ss
push
mov
aam
arpl
scas
add
stc
out
movsl
hlt
inc
sub
push
and
std
call
jbe
adc
addr16
push
add
mov
out
shlb
arpl
cs
or
sub
adc
fiaddl
inc
cmp
mov
jno
cmpl
jp
push
adc
sub
stos
adc
xor
mov
pop
in
in
push
xchg
cmc
into
sbb
and
scas
cli
outsl
sub
outsb
mov
pop
bound
mov
pop
frstor
cmp
adc
je
or
pop
lret
mov
imul
push
cmp
bound
outsb
xchg
and
out
loope
ret
add
dec
xlat
cli
add
insl
icebp
mov
ds
push
stc
or
sbb
jo
inc
mov
push
adc
rcr
sub
ljmp
add
adc
push
push
sbb
shlb
sub
sub
dec
ja
xor
inc
jle
and
cmp
jge
ljmp
mov
pop
push
push
pop
nop
hlt
xchg
dec
mov
out
pop
push
scas
or
cwtl
mov
push
js
lcall
rep
stc
stos
dec
mov
push
ds
jnp
lcall
neg
imul
adc
lcall
test
out
mov
xchg
jne
ljmp
fs
jns
lods
and
movsl
xor
enter
scas
repz
pop
pop
fnstenv
movsb
xchg
lahf
stos
imul
jnp
test
fnstcw
adc
and
iret
insl
outsb
xchg
sahf
flds
push
test
dec
scas
movsb
cwtl
push
movsb
std
inc
dec
insb
fs
jle
int
imul
mov
jl,pt
movsb
loope
inc
test
sbb
repz
ret
rolb
mov
subb
movsl
cmp
fstps
or
test
jmp
sbb
inc
rcl
pusha
pop
and
in
cld
ds
inc
jb
xchg
mov
mov
stos
pop
sbb
adc
push
cmpsl
inc
dec
cmp
out
jmp
mov
lods
test
popf
cli
stos
pop
xor
and
lahf
or
iret
loop
outsb
insl
and
mov
jecxz
pop
inc
jmp
adc
call
jns
inc
into
mov
dec
mov
sub
fisttps
std
out
cmp
rcrl
cltd
sahf
es
lods
lock
adc
clc
js
shl
inc
mov
push
int
int
xor
mov
adc
jns
mov
cmp
xor
out
pop
enter
lcall
addl
jl
or
icebp
pusha
jns
cs
push
sbb
or
push
dec
push
sub
cmpsb
push
stc
xlat
dec
sti
das
test
mov
lea
pop
add
je
xchg
sub
call
clc
fcmovbe
sub
inc
xchg
mov
mov
imul
insb
push
adcl
mov
xor
jmp
sbb
std
ljmp
mov
mov
mov
or
push
xchg
push
incb
adc
push
xor
mov
das
leave
jae
inc
xchg
xchg
rol
push
inc
mov
pop
xor
pop
nop
push
repz
and
or
adc
and
pushf
cmp
push
test
cmpsl
xchg
bnd
xchg
mov
xchg
mov
fidivl
insb
mov
dec
mov
ficoml
out
and
jp
and
scas
and
mov
xchg
adc
addl
adc
ret
inc
push
mov
mov
dec
dec
jmp
mov
das
inc
mov
push
imulb
arpl
mov
mov
dec
ljmp
shll
imul
mov
outsl
jmp
mov
push
mov
test
out
test
jecxz
cmpsb
lock
cli
sub
fistpll
loopne
into
add
aam
je
push
push
imull
mov
in
mov
add
xchg
mov
incb
mov
or
in
leave
or
sub
aaa
in
push
adc
mov
sbb
aam
imul
je
dec
mov
jecxz
jne
inc
lock
roll
jo
inc
mov
jp
push
push
es
mov
mov
dec
dec
cmpsb
xor
sbb
mov
and
mov
or
std
ss
pop
xor
sub
dec
xchg
inc
mov
xchg
mov
add
cwtl
ror
mov
lods
cmp
adc
mov
push
add
xchg
fisubs
and
push
xchg
pop
jne
cmp
dec
das
inc
popf
outsb
pop
jecxz
cmp
adc
addr16
adc
addr16
es
mov
rol
stc
inc
xor
rclb
addps
cmp
pop
test
cltd
sub
ja
int3
ret
shlb
imul
imul
leave
sub
icebp
jecxz
lcall
jbe
jl
sub
into
clc
sti
sti
push
mov
aas
sub
test
xchg
pop
inc
cmp
lcall
data16
ds
mov
iret
repz
notb
jge
add
aaa
adc
pop
stos
xchg
xchg
inc
icebp
adc
mov
lock
aad
mov
mov
es
adc
xor
xchg
xchg
pop
inc
cmpsb
or
dec
adc
xchg
pop
and
in
dec
adc
test
or
in
sbb
fsubr
cmp
pop
mov
hlt
sbb
cli
bound
dec
aas
push
inc
push
sub
sub
pop
jns
mov
stos
and
mov
sbb
sbbl
push
hlt
push
xor
ficompl
dec
push
cmp
xlat
or
xchg
jo
mov
sbb
mov
xor
mov
mov
dec
lods
pop
test
roll
fisttpl
clc
test
outsl
shld
add
cwtl
clc
popa
push
mov
lds
cs
in
sub
lahf
mov
xchg
and
lods
mov
inc
push
push
inc
bound
adc
lods
adc
cltd
jge
repnz
dec
mov
mov
and
hlt
mov
sbb
shll
mov
sbb
pop
xchg
pop
jnp
and
or
rcl
inc
jp
and
push
scas
add
cmp
outsb
xchg
xchg
inc
mov
popl
push
add
xchg
insl
in
dec
push
popf
or
addr16
sbb
pushf
aam
pop
shrb
loop
mov
sbb
in
dec
fsub
sti
mov
out
cwtl
sub
sbb
mov
push
fldl
stc
imul
in
jle
push
faddl
add
cmpsl
call
ret
and
add
jg
lods
call
shl
orl
dec
jl
pop
ljmp
test
insb
in
test
pop
popa
jns
jg
jmp
fsubrs
lahf
roll
rclb
int3
pop
testl
fistpl
or
stc
adc
inc
adc
dec
fwait
xlat
cmp
fstpl
je
lea
sti
loopne
dec
and
mov
jge
movsl
push
or
sub
fisubrl
push
fdivr
push
cmp
popf
sub
outsb
lods
xor
push
adc
jns
arpl
sub
mov
jno
shld
sarb
gs
sahf
lods
xor
es
faddl
roll
mov
aam
add
inc
pusha
in
dec
xor
cmp
fwait
push
test
sbb
pop
sub
inc
mov
dec
mov
sahf
fcompl
outsb
test
xchg
or
lret
jo
cltd
sbb
inc
enter
inc
jae
jecxz
test
push
add
jbe
pop
sti
addb
and
xchg
loop
xor
nop
mov
mov
shll
pop
push
mov
out
in
leave
shlb
push
insb
out
adc
adc
mov
pop
pusha
lret
pushf
mov
add
test
push
cwtl
and
jnp
add
cmpsb
movl
in
fidivrs
out
cmp
imul
mov
in
fwait
lfs
xchg
pusha
imul
test
lahf
mulb
dec
je
add
cmp
mov
outsl
in
loopne
push
jno
insl
mov
mov
aaa
lods
cmp
pop
ret
or
test
popa
xor
and
pushf
leave
xchg
and
jae
push
pusha
pop
fdivrl
mov
inc
push
xorb
test
jae
aaa
dec
subb
xchg
dec
insl
or
mov
mov
lods
lods
inc
inc
iret
add
imul
mov
push
push
xlat
aas
mov
cwtl
dec
lret
or
cmp
in
push
inc
dec
or
lds
insl
pop
shll
ret
cwtl
outsb
test
xor
fwait
pop
dec
test
scas
inc
sub
sahf
sbb
insb
movsb
adc
mov
lea
sbb
cs
lea
push
cmpsl
idivl
mov
adc
push
cmp
cmp
cmc
icebp
jno
mov
xchg
addr16
cmpsl
icebp
mov
cmp
mov
out
jge
movsl
mov
pop
xchg
outsl
out
xor
inc
repnz
in
aas
cmp
dec
pop
sti
lret
andl
dec
sti
push
aam
dec
scas
push
pushf
nop
fdivr
jae
cmp
xor
sbbl
jp
leave
loope
push
jae
pop
arpl
pop
adc
inc
lret
mov
dec
dec
jns
in
pop
adc
or
sbb
gs
push
es
and
psadbw
scas
out
fcoml
mov
add
sub
sbb
fucomip
inc
pop
pop
mov
cmp
add
inc
mov
stos
mov
xchg
mov
sbb
or
imul
xor
stc
adc
arpl
xchg
stc
sti
repz
dec
dec
push
sub
lcall
or
loope
in
cmp
push
fnsave
mov
sbb
cwtl
sarb
call
pop
rcll
inc
test
aad
mov
nop
add
int3
adc
add
hlt
repnz
fnsave
jbe
push
gs
repnz
lret
sarl
push
pop
dec
mov
and
xchg
xor
cmpsb
adc
xchg
in
sub
mov
sub
jmp
mov
outsl
cmpsb
inc
push
test
mov
inc
xchg
aad
push
jmp
sub
sub
int3
mov
adc
sbb
pop
push
pop
xchg
pop
pop
cmp
inc
ja
dec
iret
nop
mov
pop
adc
cmpsb
aaa
rolb
ljmp
ja
inc
insb
cmc
cli
pop
gs
or
pop
push
in
nop
pop
lods
icebp
inc
fs
daa
cld
pop
jg
sbb
bound
iret
mov
dec
mov
mov
mov
fadds
pop
cmp
jb
xchg
mov
or
ror
jg
js
es
cmp
cli
pop
je
push
xorb
sbb
dec
xadd
sbb
cmp
pop
inc
pop
mov
mov
loope
adc
jp
and
inc
in
or
fcmovnu
or
aad
cmc
mov
or
fstl
ds
rcrl
mov
push
test
aas
xchg
ja
cmp
sarb
sar
iret
arpl
fwait
lea
cltd
push
xor
xchg
inc
pusha
adc
and
jb
push
pop
inc
push
sbb
pop
sbb
jae
cmp
shrl
push
cmpsb
cmp
loopne
es
inc
enter
mov
aas
int
stc
fildll
push
aaa
int3
in
or
add
add
mov
shl
in
lock
js
cmpsl
push
jne
sbb
push
imul
pop
divb
pop
pop
lahf
push
xchg
cld
ljmp
cld
lret
fdivs
push
test
jno
jge
fimuls
es
xchg
lcall
inc
xor
cmp
in
jp
xchg
adc
adc
add
cmpsl
lds
mov
xlat
mov
add
xchg
push
lcall
popa
dec
mov
push
or
pop
add
push
jg
out
inc
inc
or
jecxz
xor
cmp
stos
ljmp
and
sub
mov
pusha
add
jmp
xchg
mov
cmp
sbb
subl
int3
mov
test
mov
mov
out
fcompl
mov
adc
mov
lods
outsl
inc
and
mov
ret
pop
dec
sub
pop
cmp
sarl
fwait
mov
inc
testb
cmpsl
icebp
out
or
fidivs
call
xor
jg
loop
pop
and
rcrl
dec
imul
ja
orl
xor
into
mov
push
pusha
lods
or
add
mov
mov
inc
mov
dec
push
aam
fucom
pop
jp
xor
enter
outsl
adc
inc
cmp
jmp
cmc
ds
out
fstl
lcall
fidivs
movsb
inc
mov
lock
aaa
sbb
add
sbb
imul
mov
jns
dec
xchg
or
jb
and
mov
mov
jno
cmp
imul
push
inc
mul
shlb
outsl
decb
adcb
xor
fistl
adc
lods
test
rcrb
xor
inc
mov
pop
add
fwait
inc
pushf
sbbb
and
add
into
lds
add
and
xchg
ljmp
pop
ss
out
gs
lds
xor
mov
ds
pop
push
or
insl
shrb
loope
mov
cmp
xor
inc
add
push
xor
mov
sub
and
pop
jnp
adc
jae
test
fidivl
adc
dec
xchg
xchg
jno
and
add
cmp
pop
mov
das
or
addr16
dec
and
es
xor
jbe
out
dec
imul
inc
xchg
inc
lahf
mov
pop
sti
test
sub
cs
push
mov
cld
lret
jnp
es
test
sti
xor
push
jnp
inc
int
xchg
arpl
xor
fadd
mov
fwait
lahf
out
add
enter
xor
loopne
aad
mov
push
cwtl
popf
lcall
sbb
push
idiv
popa
cltd
loope
add
xchg
mov
jmp
push
arpl
mov
cmp
pusha
inc
push
cmp
xor
pop
dec
mov
sbb
mov
dec
ljmp
dec
sub
cs
pop
adc
lds
or
mov
rcll
pop
shlb
shl
dec
jp
jno
xchg
mov
ficoml
xlat
and
movsl
sbb
mov
subb
fsubl
and
test
jle
ret
xor
lock
fs
rcrb
shlb
sbb
in
dec
mov
dec
stc
int3
fiaddl
pop
gs
stos
test
inc
cli
daa
addb
insb
and
insb
sub
pushf
push
mov
fwait
cwtl
jmp
and
or
dec
lret
mov
or
ficoms
and
xor
in
imul
and
int
cmp
ret
jno
adc
mov
or
xchg
adcb
out
dec
lds
fs
dec
push
roll
sbb
mov
dec
pushf
out
mov
push
adc
fisubl
xchg
xchg
dec
movl
cmp
shrl
mov
xlat
icebp
cmp
outsb
mov
jb
in
lds
call
arpl
mov
pop
fstpt
js
mov
insl
mov
mov
dec
aad
pop
sbb
push
imul
adcb
pop
xor
push
dec
push
dec
outsb
pop
xor
fildl
outsl
mov
ss
mov
mov
rcrl
mov
arpl
sub
sti
and
jb
pusha
push
or
ss
pop
push
adc
out
push
cmp
into
jnp
addr16
mov
sub
mov
hlt
lret
or
mov
cmp
leave
es
dec
add
sahf
lods
fimull
rol
popf
mov
mov
out
test
ja
in
xor
out
sub
dec
lods
in
nop
test
rcll
add
add
mov
mov
lcall
nop
lcall
or
sub
rcl
or
inc
dec
jns
sti
jne
iret
pop
sbb
data16
dec
mov
and
sub
lret
push
lea
mov
cli
ljmp
cmp
inc
dec
inc
movsl
insl
push
pop
cmp
lahf
cmpsl
dec
xchg
cmc
mov
or
cli
iret
mov
mov
jp,pt
mov
mov
loope,pn
int
in
scas
jnp
adc
mov
icebp
inc
xchg
sub
ficoms
push
inc
mov
jnp
out
push
xor
ljmp
or
ja
stc
push
inc
in
leave
loop
in
mov
and
jae
popa
push
xor
pop
add
and
add
insb
repnz
xor
sub
scas
or
inc
jp
je
lds
iret
push
xlat
out
and
scas
ret
jle
mov
mov
xchg
mov
push
push
jne
movsb
imul
mov
ret
jge
mov
cmp
fdivrs
sbb
mov
mov
inc
insb
mov
mov
shrb
inc
adc
or
sbb
cmp
xor
mov
pop
mov
pop
mov
add
fildl
or
lret
clc
scas
and
cmpsb
push
jne
addb
mov
and
mov
dec
pushf
lea
fs
mov
xchg
push
mov
ja
push
add
inc
adcb
dec
cs
rcrb
popl
jne
jmp
xchg
cmc
mov
xchg
mov
hlt
mov
movsb
adc
jno
sbb
repz
pusha
cmpsb
jb
push
inc
dec
loop
add
fiaddl
jg
adc
fs
sbb
jle
repz
cld
cmp
sbb
mov
xor
mov
lds
pusha
jp
inc
out
dec
add
mov
shll
inc
popa
out
pop
inc
cmpb
lret
pushf
xor
bound
xor
int
insl
addr16
push
shlb
sub
out
inc
mov
jae
push
ds
out
les
loope
js
push
adc
push
fsts
cmp
data16
cli
lea
adc
xchg
lahf
push
mov
sbb
dec
lods
in
fwait
loope
pop
push
sbb
mov
lods
inc
or
and
movsb
xor
in
xchg
mov
pop
je
fidivrl
out
sbb
or
xchg
mov
adc
bnd
fimuls
sbb
and
sbb
hlt
push
add
jno
adc
cmpsl
sub
xorb
mov
cmp
punpcklbw
imul
das
push
push
stc
mov
mov
mov
enter
outsb
push
testl
jmp
xchg
inc
dec
mov
push
pop
imul
sub
popf
mov
sti
push
mov
dec
add
fidivl
testb
fst
scas
pop
and
mov
mov
jnp
mov
push
push
jmp
lock
cli
lea
arpl
and
and
mov
cs
int
cld
mov
mov
arpl
aam
and
data16
ja
xchg
mov
test
pop
add
push
popf
rol
inc
sbb
add
add
xchg
cli
cs
shlb
cmpsl
mov
and
repnz
mov
cltd
cmovl
insb
sarl
adc
insl
outsb
sub
stos
mov
mov
mov
hlt
bound
cmp
dec
icebp
ret
leave
in
sub
aam
test
out
mov
test
xchg
in
mov
pop
imul
lahf
cld
pop
sbbb
xchg
pop
or
jg
aas
andb
addr16
nop
fcmovnu
pop
adc
cs
outsl
push
dec
shlb
ds
push
xchg
or
sti
and
cltd
popl
xchg
sub
xchg
int
add
mov
aad
sarb
push
fsubl
loopne
sbb
sbb
je
shrl
cli
xchg
inc
inc
into
dec
sub
jne
loope
mov
repnz
addb
jno
fdivl
xor
mov
jmp
popf
mov
stos
es
roll
sti
cs
ja
push
int3
ljmp
scas
adc
mov
jno
push
and
jmp
sub
shlb
pop
cmp
lret
fadds
daa
dec
inc
cmp
call
mov
pop
mov
leave
frstor
in
xor
shlb
lret
mov
cld
jle
aaa
cmp
fnsave
adc
and
or
loop
popl
mov
mov
cmp
inc
sub
jmp
in
lea
xor
int3
mov
mov
js
out
lods
loope
repnz
sbb
shr
cmp
cmp
dec
test
lods
mov
pop
push
scas
sub
pop
jl
sub
imul
sbbb
inc
cmp
fldenv
orl
or
fsub
dec
mov
jnp
int3
aad
fmuls
dec
in
mov
add
jne
inc
and
adc
inc
push
into
inc
mov
enter
clc
fdivrl
adc
fimuls
lret
popf
cwtl
fwait
xchg
test
ret
nop
adc
jmp
cmpsb
mov
pop
test
jb
nop
mov
mov
enter
in
std
jmp
scas
addb
jnp
inc
mov
adc
imul
cmpsb
adc
lds
fsubrl
rcll
out
dec
pop
cwtl
inc
insl
cwtl
in
jge
divl
sub
popf
and
imul
add
test
insb
mov
shl
mov
addb
in
push
int3
xchg
sbbb
out
push
insl
and
test
xlat
lret
push
call
inc
fstps
push
lods
cld
inc
mov
daa
jecxz
jp
xor
icebp
push
pop
test
add
loop
xchg
lcall
subl
mov
mov
ds
test
jg
cmp
cltd
pop
mov
push
pop
outsb
pop
cli
testb
fidivs
fcmovbe
and
xor
stc
es
sti
lret
push
adc
push
mov
pop
inc
lret
mov
fdivl
mov
mov
cmc
imul
clc
aad
stc
movsl
stc
dec
dec
jbe
leave
xor
cwtl
add
cltd
inc
xor
cmp
fmuls
inc
cmp
xchg
ljmp
stos
mov
and
ss
loopne
ret
cltd
fcoms
jbe
hlt
inc
xchg
dec
pop
test
mov
mov
jne
mov
inc
lahf
dec
clc
ds
dec
push
sbb
push
sub
mov
xchg
lds
ds
mov
mov
cwtl
repz
insl
int
jmp
popa
mov
xor
orb
xor
sub
cmp
xchg
int3
fs
or
je
push
shl
or
dec
ss
jle
mov
pop
rol
mov
int
push
push
adc
dec
mov
inc
jge
pop
sti
pop
push
ret
push
jmp
outsl
test
popf
xchg
sbb
lcallw
jecxz
xchg
lret
es
cmp
outsb
fcomps
std
call
pusha
jo
xchg
jb
sub
mov
pop
mov
ss
xlat
pop
push
stc
jb
cmc
jle
pop
outsl
push
ror
jmp
cmpsl
lret
pop
test
add
loopne
data16
jnp
ds
inc
out
xor
daa
arpl
cli
xor
testl
mov
stos
xchg
or
mov
ret
xchg
push
inc
int3
cmpsb
mov
popf
xchg
xchg
imul
mov
leave
pop
jle
arpl
xorb
hlt
add
mov
xchg
imull
mov
leave
fwait
cld
fildl
repnz
add
push
adc
or
push
add
jge
out
out
fdivs
fimuls
data16
rorb
or
test
inc
pusha
mov
lahf
pop
aam
inc
pop
xchg
pusha
lret
jmp
std
adcl
stos
out
cltd
dec
sbb
je
adc
sbb
inc
flds
xor
mov
leave
xchg
pop
icebp
outsb
dec
iret
daa
iret
adc
imul
push
shrl
popl
and
pop
xlat
jmp
xchg
xor
bound
dec
insb
adc
jmp
stos
mov
andl
fcmovbe
out
or
es
pop
subl
fs
jne
push
adc
fdivl
addr16
push
mov
xchg
pusha
cmp
inc
sbb
cmp
xchg
jmp
xchg
jecxz
mov
jmp
mov
addr16
mov
jae
loope
or
add
dec
cmc
repz
or
imul
jns
add
adc
pop
stos
push
idivl
adc
xor
jp
mov
test
ficoms
jg
daa
ss
dec
fildll
adc
fildl
jl
push
pop
outsb
hlt
pop
sti
sbb
and
cmp
lds
inc
jb
jp
adc
mov
xor
ljmp
scas
in
icebp
adc
jge
dec
or
cmp
test
test
sub
popa
popa
push
inc
filds
shrl
loop
clc
cmp
cmp
mov
cmp
push
int
ss
scas
in
loop
gs
fimuls
dec
mov
icebp
sar
mov
pop
test
test
push
inc
shlb
inc
fwait
cld
xchg
dec
adc
fbstp
add
cli
xlat
and
fildll
shll
push
push
dec
sbb
fdivl
addr16
xchg
jp
cmp
aaa
inc
lods
cltd
enter
mov
and
pop
push
dec
cmp
jns
packuswb
in
xchg
cmp
adc
jg
popa
xchg
mov
pop
jmp
add
xchg
imul
stos
repz
and
adc
mov
cmp
shlb
xor
xlat
pop
ficoms
fidivrs
pop
jbe
mov
shlb
dec
adc
inc
xor
fcmovnbe
sahf
subb
sarl
xchg
push
int3
push
mov
or
js
sbb
imul
fcmovu
inc
mov
jno
xchg
or
sbb
sbb
cmp
in
mov
jl
or
jg
xchg
ss
pcmpgtd
mov
xchg
xor
enter
xor
mov
jmp
pop
fsubrs
jne
or
xor
mov
push
es
cltd
rcll
outsl
rorl
cmp
xor
add
or
cmp
or
loopne
aad
jbe
js
int
xor
sub
shll
push
push
adc
jle
sahf
dec
iret
add
xchg
gs
cwtl
mov
das
inc
loope
xor
pop
nop
inc
mov
test
push
push
jecxz
int
fwait
jg
mov
xlat
js
jnp
push
add
scas
mov
je
pop
pusha
scas
ljmp
outsl
iret
pop
push
pop
out
push
icebp
cmp
test
les
jb
pushf
jae
pop
add
enter
mov
iret
cmp
cmpsl
sahf
and
add
xchg
sub
push
adc
testl
xchg
push
cltd
movsb
cmc
repnz
xor
in
fdivr
push
cmc
push
lcall
adc
insb
dec
aas
push
or
dec
dec
dec
xor
fsubp
sub
stc
roll
aas
jmp
inc
sahf
mov
dec
bound
mov
cwtl
in
mov
xchg
rcl
pop
cs
das
push
je
adc
sub
addr16
push
inc
dec
lds
in
add
fsubrp
daa
mov
xorb
outsb
xchg
cli
xorl
outsb
add
das
data16
ds
jmp
in
stos
sbb
adc
sahf
adc
js
inc
icebp
and
mov
xor
add
scas
hlt
sbbb
fwait
les
addr16
inc
scas
adc
jae
push
aad
pop
imulb
cltd
push
pop
inc
insl
stc
jecxz
sahf
mov
fs
scas
push
mov
iret
add
insl
in
xor
out
mov
scas
sbb
mov
push
pop
jecxz
mov
mov
add
cmp
add
xor
int
jmp
daa
std
ja
aad
pop
mov
ds
mov
jo
popa
xchg
les
mov
popa
enter
jno
mov
dec
mov
sbb
add
jns
xlat
or
dec
mov
fs
jo
add
insb
inc
fwait
test
movsb
jno
movsb
and
xchg
das
shlb
inc
xchg
mov
xlat
loope
or
fmuls
imul
fistps
sti
cmp
xchg
out
inc
cmp
ret
cmp
jg
mov
pop
mov
movhlps
dec
fwait
sub
push
in
cli
push
add
xchg
jns
pop
push
aam
xor
sahf
inc
popa
push
imul
in
std
fbstp
out
adc
and
out
mov
sbb
cmp
pop
sbb
insb
or
add
nop
js
add
mov
inc
fcompl
stos
xor
sub
xor
jecxz
nop
dec
jb
lcall
mov
mov
adc
pop
std
rclb
push
orl
or
push
sbb
and
rcrb
push
jecxz
mov
faddl
movsb
xchg
mov
mov
jge
and
outsb
adc
xchg
ret
adcl
sub
iret
in
clc
call
test
sbbl
or
lea
add
nop
pop
jo
sbb
gs
pop
jae
call
insb
add
push
call
repnz
les
fwait
iret
jae
xchg
sbb
jb
pop
and
and
pop
push
xor
xchg
fsub
jno
jge
jnp
je
jno
and
adc
jecxz
pop
and
out
call
test
cmp
push
adc
mov
dec
lcall
andl
sub
jg
imul
mov
cld
fistpll
sub
push
xor
push
jae
ljmp
into
lock
cmp
push
mov
enter
xor
pusha
bound
ficompl
cli
frstor
jl
lea
aam
jae
fisubl
xchg
out
repnz
sub
das
movsl
adc
mov
mov
sub
lahf
jmp
jo
incl
movsl
inc
xchg
das
mov
push
push
add
stos
stos
jecxz
sub
and
ja
jae
xor
js
je
xlat
mov
popa
mov
mov
sub
outsl
outsl
mov
jecxz
xchg
jae
inc
ss
test
insb
cmpsb
dec
into
lock
and
scas
and
hlt
out
fnsave
aad
sbb
jne
std
mov
or
clc
jo
out
mov
xor
sbb
dec
inc
scas
test
mov
sub
ljmp
adc
adc
dec
jnp
jae
lahf
mov
and
push
ret
dec
mov
dec
ss
addr16
pop
mov
mov
pop
lods
mov
movsb
adc
test
stc
fdivrl
jae
add
int3
mov
cmp
les
sub
aad
sub
mov
adc
out
outsb
std
ljmp
xlat
loop
or
pop
std
add
xor
clc
sti
pop
mov
ss
popa
push
arpl
xor
loope
add
mov
cmp
mov
pop
js
pop
mov
pop
xchg
and
jl
inc
test
jnp
jecxz
lods
cld
call
mov
jp
clc
scas
inc
aad
add
ret
sbb
out
subl
lahf
push
pop
mov
ja
out
les
repnz
dec
mov
inc
inc
test
hlt
icebp
test
ret
mov
arpl
lods
or
in
test
jmp
mov
fcoml
mov
inc
jae
cli
mov
mov
aam
outsl
mov
push
popf
loop
cmp
inc
inc
jg
es
jecxz
xchg
add
jg
dec
jecxz
sbb
cwtl
push
out
sbb
mov
adc
cld
imul
mov
out
adc
mov
sbbb
sti
gs
ret
sub
pop
jle
loopne
jg
js
popa
mov
dec
push
push
cli
arpl
repz
pop
pushf
mov
fcmovnbe
test
mov
imull
mov
pop
mov
xchg
ja
aaa
sbb
cmc
pop
mov
sbb
icebp
data16
mov
sub
mov
lock
push
jo
sbb
rclb
gs
repz
adc
sub
jno
mov
xchg
jp
imul
imul
out
sbb
inc
gs
push
fsubrl
das
and
jmp
mov
cmpsb
fildll
fs
xchg
sbb
push
divl
popf
adcb
xlat
xor
pusha
ds
mov
out
xchg
add
or
mov
cmp
shlb
cmpl
fistps
push
popf
lock
mov
or
cmpsb
jmp
aaa
mov
je
ficomps
or
cmp
sub
mov
into
or
out
xor
cmpb
xchg
jg
out
push
cld
imul
sbb
dec
jnp
jns
mov
fucomi
rolb
popf
shl
fdivrs
andb
jge
das
int
or
dec
or
dec
xlat
inc
leave
outsb
mov
add
xchg
and
push
inc
repnz
pop
rcrb
add
xchg
loopne
dec
js
or
and
jno
js
sub
push
imul
push
addr16
or
pop
jbe
inc
xor
cwtl
fs
std
aam
mov
inc
sub
pop
inc
lret
sbb
inc
gs
in
lea
push
xlat
lahf
mov
inc
and
or
in
xchg
lods
adc
ret
pusha
out
lea
stos
ds
mov
dec
push
inc
in
xchg
cwtl
sub
pop
sub
push
loope
rol
push
cmp
mov
pop
cmp
sbb
aaa
fnsave
push
fldt
rclb
out
out
and
insl
cmp
mov
jb
icebp
imul
mov
jbe
xorl
push
ret
push
stos
inc
mov
lret
and
in
scas
sar
add
xor
movsb
gs
push
test
stc
inc
int
pusha
lret
test
mov
pop
lods
adc
or
inc
loop
bound
shrb
mov
fwait
test
pop
bnd
pop
or
jne
dec
or
lds
jg
inc
xor
jne
sub
dec
inc
xchg
jns
sbb
loope
or
rcll
dec
nop
fs
and
mov
dec
add
nop
jne
xor
sbb
pusha
xchg
push
push
pop
insl
shrb
jbe
outsl
or
inc
outsb
push
sbb
jns
and
lahf
in
or
loopne
mov
inc
out
arpl
outsb
stos
mov
or
out
fiadds
cmp
gs
jb
inc
fsubrs
addl
jns
aam
xchg
inc
sub
shrl
insb
xchg
xchg
xchg
mov
jmp
loop
mov
ret
mov
pop
pop
xor
in
mov
mov
adc
and
pop
fmuls
out
rorl
and
mov
lods
xor
jl
xor
fwait
cli
mov
ja
pusha
loopne
xchg
inc
cmpsb
pop
sti
pop
lea
push
inc
push
loopne
mov
add
lcall
pop
push
sti
test
imull
pop
dec
sbb
sub
aam
dec
fwait
add
sbb
lock
xchg
jmp
pop
push
in
and
inc
pop
push
or
rolb
dec
dec
fsubrl
push
movb
jbe
pop
or
icebp
and
jne
data16
push
jbe
xchg
cmp
stc
ljmp
cmp
jl
push
fucom
add
xchg
and
ficoml
shlb
fstps
mov
cli
fnstcw
jb
push
mov
sub
movsb
mov
cmp
jne
inc
and
mov
add
scas
pop
sbb
xchg
scas
inc
ret
jg
add
out
or
insb
cmp
mov
movsb
mov
jecxz
dec
mov
jg
std
pop
popf
dec
lds
stos
mov
mov
inc
or
enter
xchg
mulb
out
cs
xchg
mov
or
adc
scas
jb
jne
push
adc
leave
sbb
movl
clc
decb
sub
sahf
mov
pop
stos
jle
ljmp
inc
cmpsb
fisubs
cmp
nop
rcrb
lods
mov
in
fildll
add
jle
jno
cmp
shrl
xchg
sub
jo
xor
dec
sub
jl
loopne
cmc
mov
rcll
lcall
sub
mov
lcall
and
ds
xor
jle
test
loope
mov
fstl
cld
adc
mov
insb
jl
int3
imul
popf
test
aam
mov
movsb
out
sbb
js
mov
lock
xlat
xor
rcll
notb
dec
add
or
mov
fstps
sahf
cmp
stc
and
ret
sub
adc
cmp
mov
add
cmc
pop
scas
xchg
sti
inc
loop
repnz
js
adc
pop
dec
cs
imull
xor
mov
into
dec
ljmp
lods
dec
add
std
lods
je
scas
ret
and
inc
les
outsb
std
xlat
and
lods
sbb
scas
cmp
push
mov
insl
fidivl
sbb
jb
sub
jne
sahf
std
add
pop
sub
and
jle
cmp
jns
lcall
ss
js
jns
push
push
lahf
insl
shr
leave
mov
shrl
xor
pcmpgtb
stos
into
out
enter
xor
sbb
xchg
mov
sbb
xchg
mov
add
mov
or
mov
leave
cs
pop
outsl
xchg
nop
fmul
arpl
outsb
dec
test
out
fwait
pop
fidivl
imul
subb
in
stc
stc
mov
inc
jle
fnsave
add
mov
dec
xchg
mov
clc
testl
xchg
cld
mov
cld
push
std
mov
aam
shrl
mov
lret
inc
lahf
jg,pt
sti
fstpt
cmpsl
mov
sar
mov
dec
loop
in
dec
pop
fistl
fsubs
pop
mov
int3
sub
inc
repnz
xchg
jbe
cld
mov
addr16
stc
je
imul
scas
pop
aad
mov
pop
mov
cmp
subl
push
lret
xorb
jg
loop
arpl
xchg
sbb
daa
add
inc
jle
fidivrl
inc
fildl
sbb
aas
das
insb
fists
mov
loopne
jae
sti
aam
fs
int3
rolb
jl
insl
out
scas
rcrb
or
xor
lret
cmp
mov
ja
mov
inc
imul
adcb
xlat
js
push
xorb
ror
iret
ljmp
repz
mov
sub
rol
mov
movsb
inc
push
pop
jbe
pop
call
xor
sahf
jnp
sub
adc
movsl
loop
jge
aas
test
sub
outsb
imul
mov
cltd
repz
jb
imul
loopne
imul
sbb
and
dec
or
js
mov
mov
imul
in
lret
int3
mov
mov
leave
xlat
sahf
repnz
sbb
adc
or
loop
xor
xor
pusha
add
mov
cmp
xlat
ror
sbb
out
pop
dec
scas
mov
cmp
ret
adc
scas
pusha
and
push
lret
or
pop
jo
cmp
int3
xor
or
imul
push
fdivrs
mov
lret
js
mov
in
add
jae
cmpsb
sbb
repz
push
popf
stos
repnz
insb
xlat
sub
pop
js
ficoml
cmp
cmp
ds
lcall
loope
sub
pop
fildl
pop
or
je
mov
mov
ljmp
fidivrs
cmc
aas
push
jb
add
test
fstl
sbb
in
iret
or
cwtl
ret
pop
lcall
dec
inc
fldenv
mov
mov
pop
inc
pop
xor
int
mov
xor
jno
lods
enter
jbe
movsb
outsl
add
mov
pop
fisttps
push
mov
and
pop
mov
insl
cmc
pop
xor
xchg
mov
ret
mov
cmp
jne
shld
into
push
sahf
mov
decb
adc
xchg
jne
in
sti
adc
fisttpl
jno
es
or
xlat
bound
pop
scas
sbb
dec
ror
or
stc
add
es
int3
add
bound
cmp
push
pusha
sbb
shlb
mov
push
and
outsl
fiadds
fidivs
repnz
ss
sbb
mov
movsb
shl
pop
add
cltd
js
xchg
jns
jae
aad
ss
jns
fisubrl
xchg
lods
dec
xchg
inc
jo
pop
ljmp
mov
sub
dec
ficoml
cmp
push
andl
mov
dec
int
cltd
fimull
dec
scas
insb
popa
cmpsl
fmull
inc
jecxz
int
adc
push
lods
test
xor
imul
jns
dec
mov
lcall
xchg
insl
adc
add
test
add
in
mov
lock
rorb
push
dec
push
test
xchg
je
xor
dec
jbe
xor
add
mov
push
cmc
sbb
addr16
orl
push
leave
andb
inc
jmp
push
and
stos
xchg
xchg
cs
rcrl
mov
jle
lock
mov
xchg
or
stc
sub
mov
out
jecxz
ss
lret
and
mov
dec
fcomip
cmpsl
mov
mov
inc
jmp
mov
lret
lcall
sbb
sbb
lahf
insl
cltd
push
nop
mov
mov
push
mov
mov
inc
mov
sahf
pop
and
mov
mov
push
mov
xor
inc
sub
cmpsl
add
nopl
mov
mov
cmp
pop
repnz
ds
out
or
xor
dec
arpl
jge
mov
push
sarb
or
cld
insb
mov
xchg
mov
sub
das
stc
xor
push
repnz
icebp
mov
pop
mov
push
shlb
cwtl
push
das
test
sahf
dec
imul
push
stos
jbe
test
leave
xchg
fdiv
dec
fnsave
mov
fbstp
push
ss
out
mov
inc
cmp
xor
lods
jg
dec
jb
fsubrl
hlt
xorl
dec
sub
outsb
iret
test
dec
xlat
push
lret
xlat
sub
cmp
sbb
stc
or
jns
sbb
pop
jbe
mov
stos
jg
test
rcrb
xchg
sub
aaa
xchg
and
mov
fcmove
jg
rcl
in
sbb
les
dec
lcall
inc
jp
push
or
pop
inc
loopne
in
sbb
cmp
pop
addr16
jb
loopne
jo
push
xor
out
jnp
outsb
data16
loop
add
jno
rcl
sbb
mov
fcompl
cs
xchg
out
mov
mull
das
aad
jg
in
mov
dec
mov
add
sahf
cmp
fisubrs
hlt
mov
inc
icebp
subb
or
lahf
push
dec
iret
das
or
inc
jge
cli
test
ja
lea
mov
lahf
mov
inc
jb
and
ret
fs
test
pop
jae
pop
mov
xchg
xorb
out
mov
adc
xor
cmp
fdivrp
call
leave
iret
lahf
mov
mov
leave
inc
mov
lds
stos
rorb
mov
ja
sbb
aaa
call
hlt
xor
mov
imul
xlat
jae
lea
jmp
push
lahf
sub
cmp
xchg
mov
stos
add
cltd
inc
mov
jmp
clc
mov
andl
and
fs
out
setle
mov
jl
cwtl
into
sbb
imul
not
cli
push
cmpb
icebp
xor
out
xchg
xlat
loopne
jnp
cs
jle
flds
jp
cltd
push
maxps
popf
pop
push
aas
cs
jecxz
inc
lods
jl
out
sub
pop
add
test
mov
jge
jno
cwtl
popf
pop
iret
stos
lock
jo
repnz
jle
mov
nop
inc
shl
adc
sti
add
pop
pop
add
dec
sub
sub
insl
jecxz
sbb
jo
loop
xchg
or
data16
pop
and
imul
mov
jne
push
mov
cmp
dec
out
ljmp
sbb
insb
icebp
test
mov
jnp
sbb
pop
mov
dec
or
xchg
mov
rcll
push
or
popa
stc
repz
fs
loopne
fildll
cmp
dec
or
cmp
sub
push
cld
pop
jo
cmp
adc
cmp
add
xor
push
in
adc
mov
stos
dec
dec
push
rcrl
movsb
push
push
cltd
mov
clc
scas
or
push
push
shlb
inc
push
sub
fsubl
cmp
adc
cltd
imul
adc
rep
pushl
sub
mov
mov
pop
rorb
into
stc
sbbb
add
adc
push
aam
rcrl
fsts
lods
enter
jp
out
jne
cmp
rol
sub
pushf
popf
pop
push
adc
aam
dec
pushf
les
jecxz
int
mov
sub
mov
rclb
xchg
fcompl
ror
lret
adc
sbb
bound
pushf
js
lcall
stos
mov
fsubs
cmp
add
out
insl
scas
cmp
gs
or
ficomps
dec
or
dec
ds
jg
aaa
in
push
and
pushf
mov
or
int
dec
push
push
mov
xchg
add
sbbl
imul
js
leave
hlt
fdiv
jmp
xchg
out
sub
or
lods
inc
cmp
mov
adcb
addr16
add
dec
in
mov
movsl
imul
repnz
stc
imul
jno
repnz
push
cmpsb
scas
mov
cli
mov
lock
push
inc
in
cmp
mov
out
das
sbb
sbb
cmc
push
xchg
movb
push
pop
xchg
sub
jg
stc
cmp
shlb
cmc
adc
hlt
std
cmpsl
aad
mov
jle
outsb
int
jnp
and
movsl
out
cs
cmpsb
cmp
stos
pop
and
push
rcll
mov
sub
fdiv
dec
mov
add
adc
sub
mov
add
outsb
daa
xchg
scas
mov
sub
rcll
mov
bound
adc
and
sarl
fstl
jmp
push
stc
outsb
inc
sarl
xbegin
rcr
loopne
add
movsl
push
adc
and
lret
bound
sub
jno
xchg
daa
sub
int
xchg
lahf
xor
aad
mov
sti
xor
mov
mov
out
mov
jns
int
xor
push
dec
out
outsb
sub
mov
scas
inc
dec
jne
arpl
jl
movsl
dec
and
mov
cmp
adc
sbbl
cmp
test
mov
add
icebp
dec
mov
xchg
test
je
insl
lcall
scas
out
lcall
aaa
loop
adc
mov
in
scas
je
inc
xor
loope
pop
push
outsb
add
fstps
int3
out
mov
lcall
xchg
mov
scas
enter
jo
shrl
ret
xchg
test
push
cmp
inc
mov
mov
add
or
jmp
pop
out
rcl
jno
int
cmp
mov
adc
fisubrl
frstor
push
in
inc
dec
xchg
jns
xchg
sub
jno
inc
mov
xchg
pop
or
mov
aad
arpl
jno
mov
push
mov
nop
sti
adcl
inc
mov
out
in
xchg
cmp
mov
nop
outsl
test
fwait
mov
sub
hlt
notl
pusha
std
outsb
orl
loopne
add
push
fcmovb
fsubs
lcall
out
out
mov
sahf
shlb
inc
inc
pop
dec
cmc
mov
movsl
lock
jg
pop
mov
xchg
stc
cltd
mov
jl
sub
sti
jmp
adc
iret
frstor
xchg
rcll
push
clc
mov
in
fisttpl
je
ss
movsl
sbb
jl
ds
movsb
pushf
mov
test
lock
mov
add
pop
sarl
test
fucom
out
cmp
pop
dec
out
aas
and
pop
les
add
jnp
mov
fnstsw
clc
loopne
sub
adc
subb
cmp
testb
inc
cli
ret
mov
repz
mov
das
repz
sub
dec
in
ds
fbstp
sub
shrb
aaa
int3
gs
and
cltd
test
sti
and
iret
or
jg
pop
sub
in
push
dec
ljmp
ja
lret
sub
popf
and
bnd
mov
pop
xchg
pop
pop
or
aaa
pop
push
sbb
ret
dec
xor
shlb
cmpsl
push
in
sbb
and
loopne
cmpsb
jns,pt
es
add
push
bnd
add
cmc
jne
or
sub
and
mov
and
rcrb
push
inc
xchg
iret
push
cs
hlt
aaa
clc
sti
pop
and
mov
cmc
out
pop
push
mov
xor
repz
fbld
aam
adc
stc
dec
jg
xchg
in
outsl
push
cs
add
decb
pop
daa
insb
shl
adc
mov
xor
dec
mov
arpl
sahf
sub
clc
add
push
iret
pop
in
inc
rclb
xchg
rclb
push
fwait
push
sub
ret
inc
jmp
xor
mov
and
jle
push
cs
push
fnsave
fdivrs
inc
sub
cmp
sbb
push
jge
mov
sar
and
adcb
in
rcr
scas
mov
loop
mov
in
js
in
mov
lret
mov
shll
dec
hlt
orl
mov
lods
push
or
test
xchg
cmp
cs
ret
clc
iret
xchg
xchg
mov
and
shll
sbb
nop
mov
les
xchg
pop
cmpsl
testb
adc
sub
in
sbb
in
mov
filds
lahf
pop
mov
cmp
sbb
movsl
xchg
jns
push
cmp
iret
enter
fwait
mov
gs
inc
clc
push
mov
jmp
mov
repz
xchg
lea
adc
mov
call
xchg
js
popf
push
mov
sti
xchg
push
push
or
faddp
inc
mov
fsubrs
cmp
test
xor
icebp
pusha
sbb
xlat
scas
dec
nop
mov
pusha
movsb
or
icebp
sti
sub
mov
xor
call
in
adc
aaa
jnp
add
iret
das
inc
testl
or
mov
out
insl
loopne
aam
cmp
xchg
nop
sti
pop
rcll
push
fnsave
dec
aam
sub
add
mov
add
sbb
leave
xchg
mov
and
sub
scas
out
xchg
jno
ret
aad
push
push
rcrl
dec
aad
lods
inc
jle
push
lcall
push
lods
into
bound
jp
aaa
lods
sub
cwtl
ret
cmpsb
xchg
hlt
inc
mov
sbb
ljmp
push
mov
pop
pusha
mov
outsb
lods
mov
mov
in
gs
jmp
cld
call
imul
in
or
add
fnstcw
insb
push
mov
out
sbb
jo
push
loope
xor
ds
enter
push
mov
add
mov
mov
daa
sbb
sub
push
aaa
jle
popa
int
imul
jl
lcall
push
fwait
adc
xor
xchg
dec
aam
or
inc
cwtl
push
xchg
ljmp
push
shll
cmpsb
lcall
or
mov
mov
xor
sbb
stos
sbb
ret
bsr
mov
adc
xchg
arpl
loopne
dec
lock
mov
fcoml
in
pop
loop
sbb
bound
rcl
lds
xchg
jl
je
stos
aam
shrb
and
fdivr
mov
push
shll
add
inc
emms
inc
fnstsw
rol
arpl
ret
arpl
mov
test
lahf
icebp
dec
scas
scas
pop
sbb
outsl
push
xor
clc
test
jmp
dec
jge
xchg
and
shl
scas
out
aas
inc
or
adc
loope
stos
mov
jg
mov
mov
fnstsw
adc
pop
cmp
jns
and
loopne
sbb
push
lahf
mov
inc
mov
fsubs
xchg
loop
mov
test
sahf
xchg
add
aaa
adc
sbb
mov
pusha
pop
stos
ret
mov
cmp
ss
sbb
pop
cmp
xor
cmpsl
and
scas
imul
lods
fwait
test
xchg
jecxz
int
movsl
or
add
ljmp
ss
xchg
mov
sbb
lcall
outsb
pop
negl
add
push
ficoml
sti
mov
test
cmc
sbb
into
inc
and
pop
imul
add
dec
dec
dec
pushf
out
and
loopne
cli
fsts
ret
bound
cmpsb
lea
loopne
inc
cmp
shrb
dec
mov
xchg
das
push
movsl
cmpsl
dec
pop
in
or
js
pop
out
mov
inc
pop
aas
add
add
mov
jge
cld
lcall
jecxz
scas
cmp
mov
mov
fidivs
pop
jne
rcrb
adc
pusha
add
xchg
push
lcall
lahf
rorl
dec
mov
mov
pop
mov
dec
xor
sbb
sbb
jmp
call
movsb
icebp
push
and
push
push
inc
inc
and
imul
fwait
mov
into
cld
mov
xchg
int3
bound
push
shlb
sbb
cmp
lret
gs
rcr
int
fcomi
ret
pop
adc
fsubl
mov
mov
cmpsb
mov
mov
mov
dec
push
jno
ljmp
shll
loopne
or
sub
mov
pusha
mov
dec
out
or
lcall
hlt
mov
pop
sbb
xchg
mov
pushf
mov
xchg
gs
jge
aad
mov
and
inc
add
cmovbe
orl
pop
outsb
add
sbb
mov
and
cmp
cmp
imul
and
cmpb
xchg
xor
jp
sub
inc
push
jg
and
out
push
jns
mov
fisttpl
outsb
cli
imulb
ror
mov
out
dec
gs
adc
mov
fsubs
cmc
cmp
mov
add
mov
adc
or
scas
outsl
xchg
add
adc
hlt
cmp
leave
mov
sbb
dec
sahf
mov
sbb
mov
mov
sar
xchg
sub
mov
push
ret
xchg
rcll
fcoml
jne
push
jecxz
mov
rcr
in
scas
and
shrl
inc
ficompl
into
push
pop
push
jns
stos
pop
adc
mov
sub
pop
out
int3
mov
pop
enter
mov
imul
sarb
rorl
mov
dec
sub
test
push
pop
bound
mov
or
test
mov
mov
xchg
mov
pop
cmc
or
jecxz
pop
jl
incb
les
dec
xchg
jbe
test
xor
leave
push
shlb
sahf
xchg
mov
movsl
jo
push
ja
roll
mov
xor
addl
dec
xor
and
mov
mov
fcoms
sbb
orl
dec
mov
sti
and
or
xor
ja
mov
test
stos
jp
pop
cmc
sbb
aam
rcrb
into
in
loope
pop
pop
adc
imul
js
pop
jne
nop
das
pop
xchg
mov
filds
xor
mov
dec
mov
scas
push
pop
pop
adc
pop
aam
pop
and
adc
xchg
sub
adc
jg
inc
in
nop
and
xor
push
insl
fadds
pop
xchg
sbb
mov
push
mov
ret
movsl
and
xor
fwait
dec
data16
mov
push
adc
and
enter
fisubrs
std
lahf
mov
dec
adc
sti
add
lods
and
adc
jmp
or
test
push
imull
sbb
aad
jne
aaa
ljmp
mov
cs
pop
cmpsb
repnz
fisttpl
xor
lret
fcmovnb
push
out
sub
divl
hlt
je
mov
scas
dec
insl
inc
cwtl
jmp
test
inc
fists
mov
add
jecxz
mov
sub
jns
add
sar
cltd
mov
xchg
cmp
popf
add
mov
lahf
incb
cmpl
jg
mov
sub
pop
icebp
test
lods
popf
loopne
inc
stos
cmp
xchg
rcll
dec
mov
cmp
inc
inc
out
ret
in
mov
and
lea
mov
cmp
add
mov
dec
mov
jg
adc
movsl
into
cmp
pop
mov
sub
dec
out
jg
arpl
sub
xchg
cmpsb
and
dec
dec
movsl
repz
push
lock
stos
cmp
cmpsb
mov
dec
inc
sbbb
insb
push
sbb
orb
test
xchg
adcl
jae
ds
rorl
xchg
repnz
pop
in
cmp
testl
sbb
adc
pop
add
mov
pop
push
repz
push
out
rorb
sbb
xchg
hlt
outsb
xchg
pop
adc
xor
xor
inc
fisubs
popa
aad
mov
lock
push
xor
fadd
lods
xchg
fs
ds
mov
es
add
mov
xor
adc
imul
jne
scas
cs
dec
cmp
jne
sahf
dec
cmp
pop
sbb
aad
ja
pop
jmp
fstpl
and
pop
mov
orb
pop
or
add
jae
add
icebp
or
pop
cli
mov
icebp
mov
dec
lahf
rcll
pusha
dec
add
adc
test
in
add
sub
cli
pop
cmp
rorb
sbb
mov
jmp
fists
mov
xor
pop
inc
sub
fs
inc
jo
adc
cmp
jp
cmc
add
outsb
cmpsb
sub
insl
in
inc
adc
aam
push
jnp
lret
and
xchg
sub
ljmp
add
mov
adc
lods
push
inc
cmpsl
cmpsl
nop
and
iret
fstps
je
or
lcall
add
cmpsl
stc
push
scas
lret
fdivl
pop
imul
loopne
nop
or
popa
sbb
sbb
xchg
aad
add
mov
pop
test
sti
negl
in
insl
mov
sub
pop
pop
sbb
arpl
jl
cld
movsb
push
dec
imul
cmpsl
pop
in
xchg
sbb
fistl
shlb
mov
test
pushf
push
xor
fwait
rcr
or
xor
jl
call
mov
fbstp
and
pop
mov
data16
out
pop
movsl
xor
test
cwtl
jg
hlt
cltd
jns
leave
xchg
push
jbe
mov
push
lret
pusha
lods
cmp
xor
sub
jnp
int
pop
into
aaa
sub
mov
xchg
mov
cmp
inc
clc
shrd
mov
lret
in
pop
jp
add
outsl
adc
iret
jl
repz
aam
jge
xchg
aas
pushw
sbb
push
push
out
call
fwait
mov
mov
add
ds
sub
push
or
xor
sbb
out
insb
mov
push
mov
jg
push
cmp
push
popa
ljmp
dec
xlat
push
movsl
push
cltd
aad
pop
shlb
mov
fdiv
xlat
test
paddq
insl
leave
lods
pop
add
push
pushf
mov
push
add
push
andb
repnz
fstpl
cs
lahf
mov
dec
data16
sbb
pop
cs
xor
mov
jg
in
dec
sarl
cmp
xor
pop
pusha
inc
cs
add
push
ror
xchg
aas
nop
dec
test
add
stos
jge
cwtl
subl
outsb
jge
in
jnp
xor
dec
sub
lea
add
pop
pushf
ds
loope
lea
jae
pop
cmpsb
xchg
adc
mov
push
sahf
dec
sub
jo
test
mov
rcrb
loope
inc
inc
mov
pushf
pushf
pop
cmp
lcall
xchg
xor
fwait
imul
inc
adc
iret
rcll
call
imul
dec
sub
cmp
ficomps
bswap
push
pop
cmp
rcrl
cmp
mov
mov
jo
movsb
mov
jmp
fisttps
sbb
push
fistpll
sub
loope
mov
orb
ljmp
leave
and
jbe
xchg
lds
pop
orl
fs
jnp
addr16
in
xchg
add
cmp
sbb
fmulp
subb
jno
insl
dec
add
mov
jns
shrl
into
and
jge
nop
mov
test
dec
rcrb
mov
stos
push
mov
xorl
imul
xor
push
popf
mov
ljmp
xchg
add
pop
movsb
movsb
call
mov
cmc
nop
pop
mov
sub
push
out
clc
in
mov
in
dec
push
jnp
jnp
jo
mov
adcl
mov
lret
ficoms
cld
inc
fnsave
pop
inc
pushf
lock
adc
dec
fbstp
std
push
jmp
in
clc
push
int3
outsl
mull
and
mov
sub
cwtl
mov
xchg
popf
mov
mov
nop
sbb
add
sbb
adc
dec
cmp
lret
arpl
dec
in
xor
mov
in
fwait
loop
add
sub
mov
iret
icebp
icebp
cltd
pop
cld
cmp
add
mov
bnd
shll
int3
mov
mov
mov
inc
push
lahf
inc
push
rcll
ja
adc
aad
test
idiv
dec
mov
movsb
test
in
add
insl
cmp
jne
mov
mov
fwait
decb
push
out
mov
sbb
lret
or
test
pop
xchg
push
mov
flds
lock
add
xchg
les
mov
xor
jecxz
adc
test
dec
cmp
jmp
call
cltd
cmc
xchg
jl
dec
mov
test
into
popa
xlat
dec
popa
insb
pusha
xchg
xor
nop
dec
mov
add
fistpl
cld
ret
inc
jnp
imul
xchg
cltd
jmp
dec
pushf
jl
inc
mov
push
sub
add
push
insb
add
jno
ljmp
fistl
jb
push
lahf
or
mov
call
xchg
cmpsb
mov
pop
data16
insb
pushf
mov
cmp
lock
xchg
mov
sbb
gs
xchg
mov
int
mov
js
popf
stos
stc
and
mov
shrl
xor
decl
jns
sub
mov
adc
xchg
mov
pushf
sub
popa
mov
mov
nop
incb
dec
jle
ds
test
jb
scas
adc
jae
outsb
bound
mov
dec
jmp
xchg
bound
pop
mov
add
repz
iret
dec
push
addr16
xor
mov
fldl
call
sub
mov
imul
lcall
shrl
jae
jl
flds
repnz
call
cmp
test
xchg
jle
repz
fists
add
fdivrl
je
and
lds
mov
loopne
lahf
push
arpl
fiaddl
adcb
dec
adc
cmp
hlt
pop
gs
aaa
dec
icebp
sbb
jmp
into
push
inc
bound
aaa
dec
add
sbb
xchg
jle
sub
cmpsb
mov
adc
push
ss
pop
pop
outsb
lret
inc
add
sti
jb
inc
rcl
add
push
fisttps
sbb
mov
scas
into
cld
cmp
or
aaa
pop
mov
dec
and
icebp
testl
xor
bound
push
inc
call
repnz
xor
insl
fnstenv
cmpsl
cmp
call
xchg
ja
adc
mov
shl
lahf
aas
fwait
pop
sarb
test
pusha
inc
xor
inc
sti
mull
cmp
jge
sbb
xchg
enter
cs
pop
hlt
out
aas
sbb
cli
outsl
pop
jge
jge
out
dec
push
leave
sbb
aam
dec
pop
pop
cltd
ljmp
ret
sbb
imul
popf
int
movsb
out
mov
jbe
outsb
mov
cwtl
mov
jns
js
in
mov
mov
hlt
sti
mov
inc
cs
dec
xchg
cli
mov
and
xor
ret
leave
sub
and
jo
fcmovu
push
addr16
mov
adc
jmp
or
fadds
addb
pop
pop
inc
xor
add
dec
lock
pushf
adc
mov
cmp
js
das
push
xchg
xchg
sub
loop
adc
mov
push
hlt
lods
push
cmp
pop
jbe
pop
fs
xorl
sbb
fidivrl
enter
bound
mov
jae
add
stc
xchg
inc
jnp
add
pop
movsb
dec
int3
cwtl
dec
mov
sbb
lds
mov
xchg
inc
cmp
fistps
cs
lcall
xor
push
jmp
das
push
repz
or
jp
push
lahf
movsl
push
je
test
and
loop
int3
imul
enter
popf
jl
xchg
test
mov
lcall
mov
mov
loope
add
outsl
jae
jae
sub
cmc
xchg
push
add
sbb
cmp
lods
adc
fmull
sbb
adc
sbb
sub
imull
arpl
cld
mov
jmp
xor
pop
pop
movsb
lret
adc
jp
iret
dec
mov
mov
push
fisubl
gs
popf
sbb
gs
adc
idivl
test
jae
pusha
popf
insl
push
ss
cmp
mov
push
lahf
int
leave
or
lods
js
test
pop
fs
push
loope
arpl
mov
sbb
push
adc
xor
xchg
push
push
insb
pop
gs
cmp
cmpsb
mov
popf
push
hlt
jne
jnp
add
xchg
lea
ficoml
push
pop
inc
shlb
lods
and
outsb
mov
add
subps
popa
shr
push
ja
lret
add
aad
and
das
shrb
daa
or
mull
push
cmovae
push
xchg
testl
or
lods
adc
les
pop
add
inc
mov
fldt
mov
cmpsl
cmp
lcall
stos
jno
lret
xchg
gs
mov
and
fstps
ljmp
mov
std
sub
loop
sarl
pop
outsb
outsb
lcall
sti
cld
mov
inc
jle
inc
push
js
pop
test
mov
shll
sbb
scas
cmp
lret
insl
stos
lods
stos
push
in
sbb
inc
popa
xchg
in
gs
daa
jnp
jl
sbb
push
pusha
adc
fmul
mov
xchg
cmp
push
test
int3
movl
or
pop
shrb
mov
popf
dec
pop
jns
fidivl
adc
shrl
add
dec
push
sbb
lret
arpl
push
cmp
or
xor
sahf
shlb
and
push
inc
stos
mov
out
add
pop
jecxz
fimuls
jmp
sbb
out
or
rclb
push
jg
push
jmp
mov
and
xor
cmpsb
xor
cmpsl
js
jp
cmc
in
jne
sub
in
add
mov
out
sub
pop
xchg
les
fsubp
push
popf
fimull
dec
hlt
minps
gs
js
lret
sub
shlb
mov
insb
hlt
das
pop
and
nop
sub
mov
sbb
enter
out
scas
je
xor
test
pop
test
xor
stos
jmp
daa
sbb
stos
xlat
push
jns
push
and
mov
in
test
sub
sub
dec
jg
push
faddp
test
out
mov
imul
pushf
gs
lcall
or
sub
adc
lret
jl
loopne
test
sbb
add
scas
ljmp
sbb
or
imul
daa
mov
mov
decw
imul
inc
fdivl
ret
cltd
xchg
or
stos
pushf
fcoml
add
add
sbb
cmp
xchg
cwtl
cmp
cs
lds
enter
in
scas
adc
sbb
fiaddl
mov
inc
jecxz
cmp
cmpsb
scas
stos
hlt
push
push
pusha
xor
aas
stos
push
lock
cltd
jle
stos
jge
mov
lock
test
add
test
addr16
dec
rcrb
outsl
pop
incb
mov
addl
lcall
mov
inc
ret
dec
into
pop
ds
ja
inc
mov
mov
repz
sub
mov
pop
xchg
cwtl
ror
and
xchg
gs
sub
cmpsl
cld
jge
mov
pop
mov
cli
outsb
mov
adc
test
lahf
xchg
xor
add
inc
lret
cmc
ja
cmpsl
mov
clc
mov
nop
shll
pop
push
mov
sub
aaa
popf
sub
and
fnstcw
movsb
xor
push
pop
sub
inc
xchg
in
incb
dec
inc
out
lods
add
dec
mov
lahf
out
or
pop
daa
xchg
test
out
loope
sbb
fimull
push
mov
leave
out
cwtl
addr16
jbe
fistl
adc
gs
sub
cmp
mov
cltd
pop
stc
mov
push
adc
jmp
shr
jbe
loope
mov
jo
push
xor
sbb
mov
xor
mov
inc
aad
insb
jmp
sub
cli
inc
jge
mov
shl
ret
scas
push
aas
leave
cmp
inc
sti
out
lds
sbb
xor
mov
lret
dec
inc
sahf
in
push
or
movsl
mov
pop
mov
sbb
into
lea
rcll
outsl
aad
cmpsl
xor
les
xchg
mov
mov
jae
dec
xlat
adc
fisubl
shlb
pushf
pop
and
enter
fxch
xchg
pop
pushf
push
and
jge
dec
jp
and
addr16
adc
es
icebp
sbb
mov
mov
sbb
pop
xor
sbb
and
mov
out
subb
js
push
in
les
or
das
mov
aas
sbb
mov
fildl
shl
cmp
addr16
or
aam
sarl
pop
je
jecxz
lods
and
cmpsb
movsb
inc
andl
or
fldl
outsl
stos
addr16
imulb
call
dec
jns
jp
scas
push
loopne
jmp
sti
inc
jecxz
push
cmp
addl
js
and
pop
out
fs
imul
imul
push
or
lods
push
cmpsl
dec
cmp
cmp
fwait
and
out
cmc
dec
fstps
add
pop
cmp
cmp
sarb
or
lock
xor
pop
mov
je
and
mov
pusha
mov
adc
cmp
sbb
xorb
dec
pop
into
test
js
adc
or
daa
mov
punpcklwd
xchg
jbe
push
mov
mov
sbb
mov
je
repz
repz
into
push
outsl
outsb
mov
testl
lock
lods
int3
mov
push
fisttpl
cmp
adc
les
out
pop
lcall
add
testl
clc
adc
sbb
fwait
hlt
adc
pop
movsl
bound
je
adc
je
bound
gs
shrb
out
jo
sbb
sub
pop
fnstcw
mov
xlat
dec
nop
adc
popf
adc
loop
testl
jne
sbbl
xchg
es
jecxz
push
das
lods
adc
frstor
xchg
out
ss
dec
mov
adc
sub
out
xchg
loope
ljmp
mov
daa
es
mov
outsl
cli
adc
pop
add
dec
mov
push
movsb
shrl
jns
add
clc
scas
mov
add
dec
in
fidivrl
lcall
xor
mov
adc
les
shrb
jne
insl
js
adc
lods
cmpsl
test
sbb
mov
inc
adc
and
or
sbb
call
jb
push
in
out
iret
xor
pop
pop
pusha
mov
pop
and
xor
fcompl
mov
hlt
iret
push
sbbb
mov
in
fistpl
pop
inc
jns
fistl
loopne
add
mov
cmp
dec
stc
pop
sub
icebp
add
ficoml
mov
ss
mov
mov
rcll
repz
js
sub
shlb
ja
mov
xchg
gs
in
pop
jle
loopne
and
xorl
and
mov
cli
loop
cmpsb
fwait
or
loop
pop
ds
xor
insl
sbb
xchg
sahf
sbb
jle
jno
inc
in
xchg
cmp
sbb
xor
xchg
lret
pop
into
cmpsb
out
add
dec
popa
push
sbb
push
iret
adc
insb
movsl
add
mov
je
sub
mov
shrl
sub
mov
ficoms
inc
data16
fs
and
pusha
pop
cwtl
popf
jl
decl
test
mov
lcall
push
imul
sbb
dec
lock
lods
shlb
cmc
adc
imul
sub
cmp
sbbb
xlat
ret
mov
hlt
shrb
cmp
mov
pop
add
popf
nop
xor
xor
pop
mov
add
and
mov
mov
xor
in
xor
fistpll
shl
sub
and
inc
and
add
adcl
lcall
fsubr
call
std
cmp
out
cmp
das
sbb
movsb
jmp
dec
aad
je
repnz
mov
inc
push
dec
push
cmpsb
cli
in
lds
int3
add
and
xchg
in
mov
add
or
add
mov
inc
shll
cmp
stos
add
out
in
imull
push
fwait
mov
movl
enter
in
stc
imul
scas
loope
shll
push
ja
push
lods
sbbl
movsb
push
cmp
xchg
add
sbb
lcall
push
mov
jbe
jl
dec
loop
mov
pop
jo
fistl
inc
and
fucomp
xor
lock
imul
push
mov
addr16
and
stc
loope
push
xchg
ljmp
cmp
lea
push
xorl
push
outsl
sub
sub
cmc
arpl
clc
dec
addb
stc
or
ljmp
adc
pop
cli
cmp
push
mov
aam
xchg
lock
cmp
lret
cwtl
or
stos
adc
repnz
movsb
negb
repz
inc
mov
imul
mov
loopne
pushf
jnp
cltd
sbb
add
shlb
sub
dec
xor
and
add
int
mov
mov
mov
and
rorl
fidivl
mov
sub
mov
lcall
and
mov
in
xlat
jnp
fistpll
mov
cmpsl
jbe
sub
aaa
in
dec
mov
pop
fs
inc
mov
lret
nop
rclb
pusha
pop
aaa
test
cmp
or
into
mov
mov
sbb
popa
popf
add
aas
jae
out
or
jo
add
dec
fwait
jae
sbb
bound
popf
sub
call
and
and
decb
div
and
int3
mov
cltd
insl
int3
fmul
pusha
add
fildll
cmpl
addb
cmp
sub
sbb
loopne
dec
dec
negb
sub
jle
adc
int
sub
int
sahf
pop
jb
jae
repnz
in
adc
pop
jmp
repz
pop
push
cwtl
sbb
clc
fs
imul
add
daa
testb
mov
clc
jecxz
int3
adc
xlat
mov
dec
lock
mov
mov
mov
orb
mov
cltd
ficoml
cmc
mov
lahf
add
sahf
jbe
push
jns
pop
dec
cli
cltd
inc
fs
inc
cmp
jg
inc
xorl
fcoms
xlat
rcll
and
movsb
dec
inc
loop
stos
out
jnp
mov
shrl
dec
dec
lods
popa
fnstenv
test
xor
cld
mov
adc
sarb
push
js
dec
out
push
sub
repz
orb
add
iret
adcl
mov
lret
add
loopne
xchg
dec
shl
jle
ret
ss
dec
daa
lock
and
cmp
pop
arpl
push
fs
fdivrs
test
sbb
mov
dec
loope
mov
mov
xchg
adc
dec
sahf
sbb
jns
int
dec
inc
lds
int
repnz
int
adc
dec
mov
dec
mov
jl
jno
push
rol
dec
in
jbe
jae
sub
add
push
mov
mov
cmpxchg
jne
adcl
ss
into
pushf
mov
lahf
sbb
call
add
add
int3
cmp
lret
mov
mov
mov
pusha
push
adc
daa
jae
jmp
les
mov
test
cmc
add
push
loopne
imul
push
sbb
hlt
icebp
push
aaa
addr16
xchg
pusha
pop
adc
cmp
out
and
sbb
bound
dec
xchg
and
test
divl
cld
aam
or
or
push
jb
xchg
sub
inc
lcall
cli
xchg
mov
pop
fwait
xor
fmuls
push
or
repnz
clc
pop
bound
inc
or
ss
pop
push
dec
cmpl
jg
rcrl
and
dec
je
add
in
aad
jns
aad
xor
xchg
xor
pop
mov
shrb
pop
loop
movsb
repz
jb
cmp
cltd
cmp
fscale
pop
jnp
xchg
aam
cmp
pop
mov
cmc
xchg
and
std
out
mov
cmp
push
clc
adc
outsb
shlb
outsb
pop
mov
aaa
jnp
or
dec
gs
and
mov
mov
sub
cmp
inc
sub
test
mov
push
dec
fnsave
leave
shl
ds
sub
jmp
xor
negl
sub
test
jmpw
ds
mov
ret
xchg
jle
xor
arpl
repz
jb
cmpsl
lret
mov
pop
mov
cwtl
les
or
daa
test
jl
xor
sub
xor
pop
lods
add
jecxz
or
add
mov
adc
fistl
sub
rolb
mov
imul
sbb
jecxz
dec
in
das
or
out
adc
adcb
inc
cmp
and
adc
scas
pop
lea
in
or
or
imul
mov
xchg
mov
js
add
inc
mov
sbb
cwtl
cmp
or
shrb
js
jmp
inc
jae
mov
int
mov
mov
push
mov
movsl
jbe
arpl
call
or
lods
mov
loope
mov
std
pop
jns
adc
pop
outsb
lock
fcmovb
pop
ficomps
call
mov
inc
and
xor
pop
push
arpl
addb
jb
or
cmp
adc
xchg
push
movsb
stc
jle
mov
imul
cmc
mov
mov
or
adc
pop
iret
cmpsb
frstor
mov
sbb
arpl
pop
and
mov
rcrb
mov
jo
inc
sbb
fmul
cwtl
out
lock
mov
in
pop
sbb
inc
or
ret
add
mov
xlat
cmp
xor
and
inc
mov
and
es
add
cwtl
and
ficoml
xor
insb
test
sbb
inc
in
dec
or
insb
js
stc
jl
ss
dec
push
and
inc
jno
out
in
sarb
gs
ss
fcmovnu
nop
lret
xor
out
adc
cs
lret
jmp
imul
lea
mov
gs
cmp
sbb
pop
lret
in
ror
jmp
add
pop
inc
and
mov
sbb
xchg
movsl
repnz
cmpsb
insl
test
daa
jp
adc
adc
mov
or
xor
and
or
add
movsl
out
sub
mov
push
pop
outsl
ds
movsb
inc
add
pusha
mov
xchg
imul
pop
sub
mov
mov
icebp
mov
push
sti
in
pop
push
dec
or
loope
jl
or
imul
iret
pop
iret
clc
or
stos
and
push
daa
scas
insl
ja
adc
stc
jno
jge
aad
dec
imul
cmp
mov
cmc
aam
push
push
jl
rcl
xchg
aam
add
rolb
inc
mov
je
sub
cmp
shl
std
rcl
xchg
movzwl
inc
mov
test
xchg
cmpsb
or
popf
ret
adc
jno
mov
in
out
sbb
hlt
lods
mov
adcb
into
inc
add
mov
xor
add
push
mov
mov
leave
sub
xchg
outsb
mov
dec
repnz
mov
sub
fimuls
cs
inc
sbbl
nop
in
insl
xchg
push
xchg
ljmp
mov
fs
cs
jns
imull
adc
pop
push
nop
fs
jnp
cmp
fmuls
lock
push
lret
in
scas
lret
insl
push
repnz
mov
sbb
lret
lods
jne
mov
xor
pop
loope
pop
add
mov
out
inc
iret
adc
outsb
ljmp
mov
ds
insb
out
loop
mov
or
out
ret
jp
jno
dec
dec
xor
mov
out
pop
add
cmp
cmp
push
leave
xchg
sbb
dec
aam
fs
loope
push
stc
stc
je
push
pop
leave
sbb
cmp
pop
and
ss
insb
int3
push
pop
mov
push
push
in
pop
icebp
mov
repz
negl
shrb
xor
lods
sahf
std
and
leave
adc
out
scas
add
push
pop
cwtl
fxch
fsts
adc
fdiv
sbb
fimuls
mov
adc
icebp
fldt
jne
dec
sbb
adc
jp
lahf
mov
rcrb
xor
fnstsw
shll
fimuls
sbb
sbb
fs
testb
inc
add
inc
mov
inc
pop
pusha
push
push
mov
outsb
fsubl
xchg
into
cmp
jge
js
cmp
inc
and
dec
and
idivl
es
or
adc
inc
sub
mov
imul
pusha
repnz
dec
mov
jg
sbbb
and
scas
add
cmp
cmpsl
mov
ljmp
inc
sti
nop
dec
or
test
dec
lea
inc
sub
xor
mov
pop
je
and
loop
mov
loope,pn
mov
xor
mov
mov
adc
dec
push
call
enter
stos
test
popf
pop
jecxz
jns
stos
jno
in
dec
bound
outsb
clc
push
sub
mov
jge
adc
lods
outsl
xchg
sbb
gs
push
jp
inc
lods
loope
test
and
jae
insb
push
push
bound
lds
add
lret
mov
rolb
test
xchg
sti
bound
sub
test
dec
incl
enter
out
fstl
xlat
pop
adc
imul
sbb
dec
sbbl
pop
or
pop
mov
call
sub
js
xor
lea
add
xor
push
mov
jmp
jne
insb
cmp
sbb
test
imulb
add
pop
test
int
es
sahf
leave
or
cmp
cmp
inc
outsb
xchg
xchg
notl
fs
sbb
adc
xor
lret
js
jmp
mov
inc
cmp
jb
imul
sbb
jo
sub
outsl
ret
test
sbb
mov
pop
and
jbe
mov
jl
sub
fcomi
fdivrp
pop
test
add
out
movsl
cs
and
mov
cmpsl
cmp
and
xchg
xor
fsubl
cld
push
lock
outsb
aaa
mov
pop
fs
sbb
testb
nop
shll
pop
xchg
push
push
and
inc
in
sahf
repz
sbb
jo
sbb
mov
movsb
rolb
inc
lret
cwtl
lret
cmp
es
mov
push
je
jg
xor
in
mov
dec
push
xchg
push
lea
loope
xchg
and
pusha
mov
daa
stc
jl
add
jl
repz
or
test
loop
popf
mov
cmp
or
mov
pusha
jne
aaa
push
outsl
loopne
jle
popf
in
call
sub
add
or
cld
pusha
push
pop
lds
xchg
push
inc
jl
mov
cmpsb
int3
sarb
sub
movsb
xchg
test
cmp
stc
lret
aam
mov
imul
dec
fmuls
lds
sbb
pop
outsb
aaa
mov
dec
aam
mov
cmp
stc
aam
xor
xchg
ljmp
jno
xchg
jno
out
fimull
xor
push
iret
pop
sub
sub
test
mov
iret
jecxz
mov
es
xor
cld
sahf
test
arpl
jae
sbb
push
push
and
shll
jmp
xlat
sbb
fwait
xchg
iret
aam
stc
insb
dec
push
in
push
mov
push
lret
pop
sub
ficoms
mov
dec
adc
cmpsl
cli
test
shll
jo
imul
lret
fcomps
cwtl
jae
mov
mov
fst
jmp
ficoms
xchg
inc
jp
fldenv
testb
int3
aas
sbb
test
or
jo
sub
inc
jg
xor
adc
lds
jge
dec
das
imul
in
or
pop
sub
cld
das
ds
and
sahf
loopne
jbe
jmp
fwait
pushl
in
mov
xorl
jmp
loop
or
cld
out
push
and
inc
jge
cmp
push
in
popf
pop
lods
jmp
notb
inc
pop
lods
inc
test
pop
jmp
push
sub
xchg
andb
or
mov
sbb
xchg
insb
mov
outsl
jne
enter
xchg
ljmp
push
imul
mov
aam
push
into
ret
leave
pop
mov
cmp
adc
push
pop
push
and
cmp
scas
jno
arpl
je
mov
pop
add
icebp
out
fimull
xorl
imul
hlt
shlb
imul
dec
push
cld
aad
in
xchg
pop
fists
xlat
les
repz
rcrl
out
inc
lcall
repnz
sub
idivl
mov
jle
mov
out
cmp
or
cmc
xor
pop
je
int
cltd
pop
sbb
push
push
es
testl
pushf
enter
lods
and
sub
fisttps
ja
ficoms
push
shlb
dec
push
int
add
inc
mov
or
jg
fimuls
andl
js
aaa
in
push
pop
jb
jl
imul
stos
int
clc
sbb
jmp
cwtl
stos
je
stos
add
jl
xchg
inc
mov
cmp
sti
popf
sti
sbb
cwtl
fdivl
lods
sahf
mov
adc
out
mov
iret
jne
sub
adcl
xor
mov
dec
push
xchg
adc
xchg
iret
push
sub
cmp
stos
fwait
push
pusha
in
mov
mov
jae
test
mov
std
stos
hlt
jne
xchg
mov
jb
movl
cmpsl
and
in
cmpsl
and
xor
out
fwait
popa
and
aas
or
aam
jns
ds
xchg
inc
jae
js
js
inc
test
push
and
cmc
push
das
pop
jmp
and
adc
inc
mov
lret
lods
ja
and
inc
nop
jns
cmp
popw
movsb
cmp
adc
pop
jns
or
cmp
test
stos
stos
jb
mov
shlb
pop
sbb
insb
pop
inc
mov
mov
fldenv
mov
es
ds
fiaddl
add
loope
dec
repnz
mov
push
lret
mov
and
out
pop
xor
dec
mov
mov
into
aad
int
stos
leave
mov
sub
in
fistl
sub
sbb
inc
add
in
leave
sahf
test
dec
inc
inc
fistpll
inc
js
pop
jb
push
enter
das
mov
dec
out
mov
stos
lock
mov
inc
mov
push
or
or
mov
xchg
push
mov
xchg
adc
jb
adc
lock
inc
jo
adc
adcb
xchg
inc
mov
xchg
or
jle
mov
pop
aam
xchg
mov
inc
aas
xor
addr16
add
xchg
cmc
adc
add
dec
pmaddwd
incl
inc
icebp
inc
jb
and
xchg
jb
cmpsl
lds
push
cmp
lds
add
adcl
stos
xor
ror
test
loop
sbb
lds
ror
out
flds
pop
aam
out
fbld
js
mov
dec
mov
and
cmp
dec
jne
sub
push
mov
fistps
or
inc
mov
pushf
pusha
lea
dec
jg
pop
xchg
arpl
lock
ss
loopne
iret
inc
jp
sti
out
lahf
sbb
mov
int
lcall
fs
xchg
movsb
scas
inc
and
or
mov
int3
aad
inc
fnsave
jne
pop
pextrw
mov
fsubrp
sbb
ret
rcrb
pop
pop
dec
inc
dec
shll
outsl
int3
outsl
push
mov
out
push
aam
fcmovne
cmp
popf
inc
xchg
rcrl
mov
fcmovnbe
push
pusha
mov
mov
into
aaa
das
or
jnp
int3
bound
sub
inc
out
sub
lock
mov
test
loop
repnz
fsubr
fsubr
xlat
repnz
aas
sbb
pop
and
mov
xor
xor
push
inc
loop
fwait
iret
xlat
test
mov
fiaddl
dec
jmp
mov
ss
jns
call
gs
movsl
cmp
int3
imul
xchg
hlt
pusha
subb
aam
ss
mov
adc
and
cwtl
push
subl
iret
sub
inc
rcll
daa
cld
push
cmc
cwtl
popa
xor
es
cmpsb
test
mov
rorl
sbb
push
cmpsb
fs
push
daa
call
push
jae
add
aad
mov
sarb
loopne
mov
sub
push
imul
sahf
mov
inc
xchg
scas
test
mov
leave
rorb
int
cmp
cmp
stos
dec
dec
push
cwtl
mov
out
add
sbb
sub
insl
dec
cltd
ss
pushf
pop
sub
into
inc
ret
push
loope
cmp
js
fsts
xchg
sbb
andb
ret
mov
mov
xchg
test
sub
adc
call
aas
mov
mov
xlat
cmc
fildll
add
mov
mov
jae
insl
in
sub
or
cltd
pop
mov
arpl
adc
push
and
mov
add
push
aaa
and
lods
imul
seto
dec
push
pop
jns
iret
and
cmpsl
mov
xor
push
imul
sarl
cli
or
ret
ljmp
lahf
xor
sbb
stos
add
insb
mov
or
fcomip
and
sarl
xlat
and
dec
add
pusha
out
fcompl
out
xchg
or
loope
int3
cmc
hlt
je
push
shlb
xchg
imul
movsb
mov
push
ds
adc
inc
ret
push
sub
dec
daa
loopne
mov
cmp
pop
mov
aad
jle
xor
mov
add
xor
mov
iret
jmp
lea
xchg
test
test
cli
ja
enter
fbstp
lds
jo
dec
shrl
mov
xchg
lds
mov
pop
mov
push
push
inc
adc
xor
push
xor
add
jge
sbb
push
cwtl
sti
add
mov
xor
sbb
mov
scas
jno
cmpsl
inc
cmc
mov
mov
fbld
hlt
arpl
insb
nop
mov
dec
ficomps
lods
testl
sbb
mov
out
notb
pop
xchg
mov
pop
mov
std
insb
cs
stc
jmp
fiadds
subb
cmp
push
addb
inc
push
dec
sbb
sbb
or
enter
mov
jns
xor
test
mov
push
add
lret
mov
sub
sub
lods
add
or
inc
outsb
inc
xor
paddw
dec
pop
data16
push
movsl
dec
jp
xor
add
adc
out
stos
ja
jae
mov
xchg
push
jae
mov
mov
add
out
arpl
pop
test
mov
cmp
add
test
call
jg
cltd
xor
mov
sbb
lcall
sbb
mov
ret
mov
sub
pushf
imul
shll
insb
aas
loope
or
jnp
sbb
imul
mov
out
repnz
das
lret
pusha
mov
adc
cmp
outsl
sbb
roll
inc
mov
rol
pop
xchg
jae
lret
push
mov
aad
and
ljmp
cmpsb
clc
iret
gs
push
std
xchg
jne
int3
or
cltd
and
or
icebp
xor
adc
pop
cs
dec
cwtl
jl
jg
add
dec
jge
rclb
cld
xchg
xlat
in
dec
and
cs
mov
pop
inc
cmp
scas
std
push
jbe
es
lock
add
ret
sbb
insl
jl
adc
loope
scas
pop
inc
add
mov
fdiv
and
adc
popaw
push
pop
je
xor
sahf
int3
or
mov
sub
mov
fucompp
or
lods
inc
push
xor
sbb
mov
popa
and
inc
sub
in
mov
int3
cmp
push
mov
repz
add
lock
repz
test
fwait
jmp
loop
mov
mov
cmpsb
jmp
sub
pop
mov
lcall
cli
imul
push
in
jo
lock
test
mov
adc
xor
sub
inc
jb
adc
push
dec
aad
repnz
mov
sbb
xchg
jnp
adc
mov
dec
mov
inc
jo
push
aad
lea
test
fdiv
popf
and
mov
inc
sub
or
out
shrl
sub
je
aam
jo
mov
mov
lea
mov
ds
lcall
push
negl
or
or
rclb
cmc
cld
pop
and
adc
sbb
popa
jne
mov
mov
mov
mov
push
insl
scas
cli
mov
push
test
adc
push
ja
mov
cld
pop
adc
dec
gs
or
jmp
subl
mov
lret
sub
shl
mov
divb
jecxz
repz
ja
mov
sub
insb
inc
mov
insl
jge
lea
push
mov
mov
subb
sbb
add
rol
shr
xchg
pop
orb
dec
inc
cmp
cld
mov
add
fistps
pop
fiadds
fwait
or
and
jae
in
fidivrl
cld
mov
lds
ficoml
xor
test
mov
fdiv
lods
dec
imul
xor
push
rcr
xlat
xchg
out
dec
lods
fwait
mov
shrl
icebp
je
jbe
xlat
and
ss
and
sbb
dec
rolb
jo
jne
mov
dec
in
xlat
sub
push
mov
in
adc
es
lcall
stos
shll
sub
popa
inc
adc
outsb
jge
xchg
lock
jb
orl
xor
pcmpgtw
and
lret
adc
stos
xor
mov
sub
sbb
and
mov
xor
jp
adc
lds
dec
repz
call
xchg
dec
mov
jnp
adc
cmc
pop
addr16
jge
xor
pushf
cli
sub
scas
ljmp
mov
in
out
arpl
jg
test
fwait
sub
mov
cmp
xor
jecxz
popf
sub
push
adc
arpl
fs
loope
fcmovne
mov
test
pushl
hlt
sub
dec
enter
in
movsl
xchg
mov
popa
push
repnz
cmp
shl
cmp
mov
js
scas
cltd
mov
idiv
das
mov
xchg
xor
mov
sub
gs
ror
dec
mov
dec
dec
ret
scas
test
dec
sbb
xchg
into
iret
push
xor
filds
lahf
cld
imul
push
add
xor
and
out
xor
mov
gs
jl
or
mov
sahf
inc
push
rclb
shl
lret
mov
imul
stos
enter
inc
movsl
jl
dec
inc
mov
add
lods
clc
arpl
nop
sub
inc
cmpsl
sub
pushf
inc
push
in
out
mov
mov
mov
add
dec
xchg
and
popa
call
out
mov
ret
mov
xchg
jns
cmp
les
psadbw
ret
push
lods
gs
ret
push
in
mov
and
adc
sbb
and
out
cmp
hlt
bound
xchg
mov
fucomi
sbb
dec
or
mov
adcl
loope
lcall
imul
mov
jge
mov
in
lds
daa
pusha
shrl
scas
and
test
cmp
cmpsb
fsubl
mov
and
adc
push
daa
sbb
pushf
data16
lret
jo
in
call
push
and
xor
dec
int3
ljmp
mov
leave
sub
mov
loop
cmpsb
test
jo
mov
mov
pop
cmp
mov
popa
mov
lods
gs
fistps
add
sbb
push
cmpsl
std
fcmovne
repnz
mov
lds
nop
jne
out
inc
add
sub
insb
les
and
sub
xchg
push
scas
cmpsb
mov
iret
mov
rcrb
enter
imul
push
and
fs
out
add
inc
repz
imul
mov
in
hlt
addr16
jbe
sub
aas
cld
or
push
imul
add
out
daa
cmpsl
jg
es
add
loope
scas
in
std
xchg
cmp
add
out
dec
sub
inc
mov
ror
adc
aam
adc
test
stos
fcmovnb
and
push
cs
fisubrs
mov
push
pop
sbb
xchg
mov
aad
dec
or
push
mov
jg
mov
mov
movsb
inc
jo
sub
push
xor
and
mov
ljmp
dec
stc
xchg
jg
loop
xlat
add
int3
mov
ljmp
gs
addr16
jae
jns
sub
jp
mov
repnz
repnz
push
mov
fwait
jae
inc
ja
decb
movsb
mov
icebp
fidivs
scas
shlb
fdivrl
repz
in
push
adc
xor
fistl
cltd
notl
movsb
adc
sub
lods
pop
into
dec
pop
xchg
repz
dec
scas
loop
inc
rorb
dec
xchg
add
int3
leave
fistps
ja
push
cmp
mov
dec
jne
mov
mov
fmull
hlt
pushf
les
push
rol
stc
int3
jmp
in
sbbl
mov
call
sti
outsb
sbb
pop
sub
cs
scas
daa
gs
push
lods
or
xchg
xchg
push
jnp
lods
cmpb
xor
mov
mov
rol
pop
or
xor
das
jnp
repnz
adc
cmpsl
jne
mov
popa
insb
fisubrl
sbb
add
shl
enter
imul
and
dec
xchg
addr16
ret
fadd
mov
jo
mov
sbb
cmpsl
in
out
lret
mov
dec
cmpsl
js
lds
in
add
mov
movsb
lods
test
sub
rcr
and
lret
insb
xchg
ds
shlb
adc
jp
mov
outsb
fcoms
xchg
mov
mov
lods
movsl
test
lret
and
mov
cmpsl
jg
push
in
stos
testb
mov
ret
dec
xchg
dec
xor
shl
mov
daa
cli
pop
fcompl
mov
sub
jle
mov
pop
or
lock
mov
jbe
data16
aam
dec
lahf
pusha
int
loopne
sahf
in
mov
loop
xchg
jecxz
testb
push
or
jg
pop
pop
dec
repnz
sub
lea
dec
mov
fsub
mov
orb
or
cmp
lods
dec
mull
mov
mov
dec
cmp
cmpsb
dec
notl
dec
out
jg
rolb
add
push
xchg
fisttpl
cmp
push
add
jl
adc
loope
push
mov
fsub
jb
xor
lahf
lcall
fdivrl
outsb
addr16
out
int3
hlt
in
fsubl
daa
dec
xchg
add
shlb
add
test
bound
pop
cld
adc
inc
pop
fs
mov
ljmp
mov
es
cld
movsb
or
and
cs
pop
pop
or
jne
popa
push
rcrl
std
icebp
sahf
mov
mov
shlb
arpl
push
popf
sti
aad
cmp
dec
insl
adc
xchg
dec
cmp
mov
int
mov
xor
jmp
imul
mov
xor
xor
jo
dec
daa
mov
push
sub
insl
pop
idivb
mov
fmul
mov
xchg
sbb
jno
mov
dec
push
fiaddl
lods
sti
dec
rcrl
or
movsl
pop
jnp
adc
pop
mov
push
stos
pop
jbe
push
loopne
xchg
lea
addl
push
push
hlt
cltd
inc
inc
push
icebp
stc
rcr
sub
push
mov
mov
sbb
lock
jl
fisubrl
pop
xchg
imul
xor
mov
fimuls
push
outsl
dec
mov
cmp
aam
mov
insl
xchg
aad
mov
js
stos
sub
inc
dec
stc
jb
cmp
pop
pusha
in
push
push
dec
dec
out
xor
mov
dec
sti
pop
mov
mov
pop
lods
std
dec
inc
or
mov
inc
push
inc
jmp
sbb
movl
jge
fistpll
mov
rorb
and
stos
iret
cld
inc
stos
xchg
mov
xchg
mov
push
push
mov
adc
loop
addr16
xchg
dec
xchg
jne
mov
out
jmp
lock
sub
insb
inc
movsb
push
pop
mov
in
lds
test
cmp
pop
adcl
add
mov
adc
fldcw
inc
les
xlat
jmp
push
mov
sub
cltd
mov
dec
mov
xchg
sbb
jbe
push
lret
push
xchg
jbe
sub
and
rcrl
popa
mov
xchg
pushf
in
jmp
push
out
xor
dec
arpl
imulb
lods
pop
andb
jle
jb
faddp
jno
pop
pop
jae
push
inc
popf
ss
xchg
pcmpgtd
cmc
cmp
addb
sub
and
fistpll
pop
lods
pop
adc
push
mov
and
xchg
stos
lcall
push
mov
pop
lahf
mov
adc
orl
scas
test
sti
adc
xlat
pusha
test
gs
add
into
push
push
xchg
ljmp
adc
out
mov
xchg
out
lods
push
xchg
dec
adc
mov
push
dec
shr
and
xchg
out
js
jbe
or
dec
xchg
xor
mov
jge
or
and
hlt
and
jmp
lea
in
sbb
sti
cltd
fld
scas
lea
loopne
adc
fcoms
push
inc
cmpl
mov
adc
or
flds
dec
inc
jb
mov
test
adc
add
adc
and
bswap
out
jmp
mov
pushf
lock
push
mov
push
ljmp
imul
xchg
popa
neg
push
or
incb
jne
sub
inc
cli
cmc
xor
scas
loope
lcall
out
xor
das
cmp
out
push
test
cld
ja
mov
leave
inc
ret
pop
fistpl
cli
jmp
sub
out
andb
inc
adc
pop
push
ljmp
lcall
dec
pop
push
mov
add
jecxz
enter
jno
ret
push
sub
xor
xlat
cwtl
cld
ds
add
xchg
mov
xor
lret
push
out
sbb
pop
sub
xlat
or
mov
mov
test
xchg
dec
push
push
push
enter
int
cmp
stos
sbb
and
loopne
xchg
rorl
incl
sub
popa
and
loope
dec
iret
push
loope,pt
ds
sub
adc
pop
mov
xor
jl
jo
int3
jge
mov
shlb
push
sarl
cwtl
popa
iret
inc
cltd
add
adc
inc
call
or
mov
xchg
inc
mov
jmp
daa
adc
add
pop
cltd
repnz
mov
cmc
or
xor
adc
jbe
loope
lock
jmp
xchg
xchg
mov
jp
fsubs
ljmp
cmp
dec
jmp
mov
outsl
sub
adc
aam
orb
xchg
pop
cmp
cli
mov
aad
mov
jp
into
mov
iret
arpl
mov
aaa
int
inc
aad
ja
cmpsl
jle
mov
mov
push
sub
push
push
sbb
mov
xchg
lahf
rcrb
jae
mov
inc
jb
bound
out
xchg
mov
dec
sub
xchg
lret
adc
lds
lds
negl
out
sarb
pop
cli
push
repz
ret
jne,pn
mov
mov
fucom
movl
cmp
push
nop
lret
clc
es
pop
loop
jp
sbbl
imul
pop
xor
pop
sbb
or
mov
mov
mov
mov
xorl
adc
and
into
xchg
movsl
pop
dec
mov
leave
add
js
push
lods
mulb
pop
lcall
push
xor
pop
mov
loope
dec
bound
fisttpl
inc
fdivs
push
push
push
fcomp
xchg
mov
clc
stos
in
push
lret
loope
imul
imul
js
xchg
mov
mov
fimull
mov
clc
cld
dec
in
cmp
loop
lods
loopne
stos
jge
arpl
add
shll
dec
pand
lods
loop
pop
push
bound
movsl
hlt
sbb
sub
iret
sub
xchg
fisttpl
jecxz
dec
lds
xor
cmp
nop
jmp
xchg
inc
cmc
mov
xor
xchg
mov
lret
adc
loopne
adc
or
mull
subb
cmp
inc
mov
loop
cli
pushl
xchg
jb
ljmp
rol
jge
push
add
mov
int
inc
fiaddl
imul
mov
rcl
add
adc
xchg
js
fistpl
and
fwait
sbb
sti
push
nop
cli
jb
es
and
inc
mov
pushf
jnp
mov
ljmp
mov
dec
stos
enter
outsl
inc
dec
xchg
outsl
hlt
sbbl
mov
and
lea
add
lds
xor
fimuls
movsl
and
xchg
dec
movsb
hlt
dec
int3
or
dec
add
daa
cltd
test
pop
lea
aaa
sbb
jp
push
pop
movsl
xchg
push
pop
in
pop
lret
add
mov
jmp
mov
fisttpll
cli
push
test
add
mov
and
mov
aaa
sbb
addb
sbb
lea
orl
movsl
cmp
js
cmpsl
and
scas
xchg
mov
popa
enter
xchg
xchg
bound
inc
inc
and
rep
pop
out
sub
jne
icebp
stc
add
sahf
iret
or
sub
mov
mov
push
pushf
ja
lds
xchg
sub
int
popf
mov
bound
in
out
xlat
xchg
scas
in
mov
movsl
in
and
arpl
cmp
or
test
call
int
stos
dec
adc
aas
push
mov
push
or
cs
pop
repnz
xor
idivl
sbbb
mov
mov
pop
repz
mov
movsb
aad
push
icebp
push
xchg
jne
add
xor
inc
cmp
outsb
mov
dec
dec
mov
sahf
mov
mov
mov
xor
xchg
jbe
mov
ss
nop
sub
filds
repz
pusha
xchg
or
es
daa
outsb
test
lock
sbb
mov
and
push
mov
pop
jae
jecxz
xor
andl
jge
repnz
adc
cmpsb
pop
mov
add
pop
sub
adc
cmpsl
inc
in
add
pop
pop
mov
cmpsb
mov
lret
ret
aam
test
cmp
sti
lods
and
into
mov
insl
call
int
cltd
pop
loop
sbb
imulb
jb
push
sub
fst
lret
mov
out
pop
pop
lret
stos
enter
pushf
icebp
pop
push
xor
cmpsl
into
jle
lea
add
xlat
xor
push
imul
push
popa
arpl
pop
jns
lods
fistl
ss
inc
mov
xlat
fisttpll
int
xchg
imul
into
lcall
mov
mov
test
insb
repnz
push
pop
dec
cmpsl
popf
lcall
fisttpl
xor
in
sub
icebp
mov
xor
sbb
mov
movsb
adc
in
sub
dec
test
out
fstp
fcomi
jge
fnstenv
lds
out
jb
add
mov
outsl
test
insl
rcrl
mov
mov
push
pop
cmp
sub
ja
jns
xchg
clc
test
push
mov
push
rcrl
adc
pop
int
aaa
cmp
insb
enter
hlt
mov
and
mov
imul
sahf
add
jo
jle
rclb
aam
jns
xor
loopne
addr16
fstp
mov
jnp
mov
xlat
sub
pop
push
push
sub
das
decl
outsl
sarb
pop
pop
pushf
dec
jle
xchg
inc
xor
cmp
mov
cltd
cmp
test
clc
notb
out
cmp
fucomi
sbb
outsb
mov
outsb
mov
movl
add
std
lret
mov
mov
pxor
add
test
sub
cmpsl
xchg
data16
icebp
inc
call
push
data16
into
cmp
nop
jno
shlb
dec
sub
mov
jns
adc
daa
aaa
xor
aaa
icebp
xor
push
outsb
inc
lds
sbb
inc
push
lock
sbb
rcr
mov
rcll
scas
cmc
dec
xchg
xchg
push
arpl
pop
mov
addr16
push
out
pusha
inc
fsubrl
add
cld
repnz
stos
movsb
movsl
aas
aad
stc
subl
mov
out
repnz
dec
int3
xchg
pop
lds
mov
xor
inc
ljmp
xor
xchg
sbb
jb
ficoml
adc
inc
sbb
mov
push
in
in
pop
mov
or
fdivrp
iret
push
in
xchg
sbb
lods
sub
les
testl
cs
xchg
call
movsb
rolb
mov
dec
pop
fnstenv
loop
add
cld
add
push
stos
enter
lods
sbb
imul
jl
jb
sbb
mov
icebp
test
adc
data16
mov
fimuls
test
pop
jae
or
ret
call
loop
adcb
je
inc
or
cmp
jbe
cltd
xor
jnp
je
adc
mov
sub
repnz
cs
out
mov
xor
loop
pushf
xlat
and
sub
cmp
je
mov
test
es
pop
cmc
repz
add
movsl
popa
mov
adc
or
aam
jge
cmp
lock
and
xor
fldcw
mov
lcall
mov
sbb
sar
xor
inc
pop
rcrl
js
pop
inc
repnz
dec
imul
adc
cmp
push
dec
sbb
and
fcoml
sub
lahf
pop
ss
aad
dec
lret
fstpl
in
add
pop
and
ds
repz
or
daa
ret
mov
jp
mov
jo
mov
xor
popa
fs
inc
inc
cwtl
fs
xchg
ret
mov
push
dec
ror
data16
outsl
adc
or
cmc
xlat
cmpl
icebp
sub
xchg
loopne
pushf
inc
test
daa
mov
popl
cmp
and
in
mov
popf
shll
mov
dec
pop
ss
es
pause
add
jge
out
pop
jnp
dec
hlt
insb
enter
inc
pop
xor
loopne
bound
insb
xor
sbb
and
mov
cmpb
xor
or
aaa
pop
shrl
imul
mov
inc
negb
clc
push
clc
or
mov
xchg
das
outsb
es
shll
cli
add
aam
test
leave
negb
ljmp
iret
xchg
clc
and
mov
mov
push
push
shl
rorb
push
dec
mov
ret
mov
mov
sub
inc
or
sbb
pop
xlat
test
mov
lods
andl
inc
mov
cmp
mov
push
decl
decl
sbbw
cmpsb
sub
cmc
inc
fisubrs
sub
inc
popa
imul
pop
add
repz
push
sbb
and
jbe
lods
fisttpl
sahf
fwait
push
je
mov
or
xor
lods
inc
sti
hlt
das
mov
aad
ljmp
shrb
dec
sbb
xchg
fimuls
fnstcw
scas
and
lock
or
mov
cmp
pop
add
inc
sub
std
outsb
daa
inc
mov
sub
das
lret
out
sub
sbb
pop
scas
push
sub
sbb
cmp
jbe
subb
xor
xchg
clc
sub
jp
or
in
insb
and
sub
sbb
hlt
testb
add
pop
fdivl
pushf
mov
fisubs
push
scas
jg
push
xchg
sub
or
mov
and
shl
xchg
aas
or
mov
pop
out
inc
shlb
xor
and
ljmp
insb
adcl
mov
test
push
dec
mov
and
rcr
mov
push
loop
dec
gs
sub
sub
sbb
push
mov
and
rcl
subb
xor
mov
dec
push
jnp
mov
dec
shll
out
rcrb
test
daa
dec
int3
test
rcl
pop
jle
movsb
mov
mov
xchg
into
rolb
ljmp
mov
mov
mov
or
dec
lcall
xlat
test
jle
cmpsb
push
cs
loopne
mov
add
clc
repz
xor
xchg
pop
push
addb
pop
std
adc
fwait
inc
adc
jge
push
fcom
pop
xchg
push
push
add
inc
sub
xchg
push
mov
add
insb
pop
insl
add
pop
shlb
jmp
mov
add
add
das
jno
js
fs
subb
pop
mov
fwait
push
adc
insb
hlt
lahf
sbb
jecxz
inc
sbb
mov
jmp
jns
ljmp
jmp
push
cld
icebp
push
adc
sbb
insb
cmp
mov
mov
cmpsb
push
test
xor
push
das
rorb
sub
and
test
in
testb
fwait
nop
add
adc
and
mov
loop
xchg
jae
xor
xor
fisubl
push
mov
arpl
testb
in
ss
mov
push
lcall
mov
and
stos
inc
jge
sti
jne
test
jle
enter
adc
dec
out
stc
fists
push
xlat
xchg
xchg
mov
repz
mov
sahf
ret
and
sahf
adc
inc
lret
idivb
in
push
insl
sub
xor
push
movsb
inc
or
sbb
lahf
inc
adc
out
ds
lahf
shrl
adcb
inc
push
rol
pop
push
jns
mov
cld
cld
jno
lret
sbb
pop
data16
pop
mov
mov
cmp
dec
inc
pop
repnz
repz
std
jae
sub
adc
fistpl
and
and
insl
popa
adc
data16
enter
cmp
shl
lods
adc
add
mov
jle
in
sub
aas
add
sub
sarl
dec
cli
xchg
pop
ret
fwait
mov
or
ret
cmc
jmp
sub
mov
clc
aad
jp
jmp
dec
inc
inc
lahf
pop
gs
movsb
mov
out
jecxz
sbb
ja
jg
cmp
cs
lahf
movsb
cltd
aam
push
cld
es
jno
push
lods
sbb
dec
in
lret
cli
xchg
fistps
jne
test
xor
sub
std
xchg
adc
inc
xor
lods
iret
in
xchg
add
and
mov
jbe
lea
nop
imul
std
cmpsb
fbld
cmp
lods
push
push
jns
lods
cmpsl
and
and
jge
jg
out
jmp
fisubs
pop
push
or
lds
mov
aas
mov
fcmove
rclb
lods
xchg
mov
push
loope
cmpsb
fimull
xlat
bound
mov
or
xchg
test
test
stos
inc
jl
inc
mov
sub
xor
ret
jne
add
arpl
inc
mov
stos
add
daa
and
and
mov
lea
lret
sbb
cs
cmp
xchg
out
pop
sbb
sbb
mov
sub
adc
add
bound
sbb
mov
xor
and
icebp
sbb
stos
cmp
ljmp
ficoms
xchg
test
sahf
in
iret
insl
jge
jne
lcall
push
mov
push
dec
pop
add
sbb
inc
cmpl
xchg
rclb
xor
aad
scas
insl
mov
pop
scas
lds
subps
fmull
sbb
cmovno
lcall
icebp
xchg
popf
inc
ficoms
fnsave
cmp
rorl
loopne
inc
xchg
out
ds
mov
test
mov
cli
into
cmp
add
out
inc
lods
rorb
sbb
loop
push
ret
sub
loopne
rcr
ss
adc
pop
movsb
int
lods
aaa
daa
inc
jmp
add
or
stc
mov
ss
sbbl
cmpsl
mov
and
hlt
xchg
add
cmpsb
or
pop
aad
mov
in
xchg
insl
bound
push
adc
push
repz
stos
stc
outsl
and
fidivs
icebp
inc
fwait
ret
loopne
xchg
dec
xchg
add
mov
push
xchg
orl
sub
mull
inc
in
cwtl
fistpl
movsb
xchg
shrl
xchg
fnsave
push
xor
jae
arpl
cs
das
and
push
in
adcb
sar
xchg
and
push
aas
bound
or
jle
repz
inc
or
mov
jle
mov
sbb
mov
jnp
enter
testl
add
sbb
adc
fs
cwtl
dec
shlb
out
pop
out
mov
clc
mov
cld
hlt
add
addr16
test
mov
inc
sti
movsl
in
mov
arpl
push
iret
ds
inc
scas
push
sub
and
mov
das
neg
negl
and
mov
iret
fsubl
mov
inc
and
inc
stos
sub
mov
and
push
mov
jmp
xor
frstor
aaa
xor
or
lcall
out
pop
and
fdivl
jmp
jno
insb
divl
xchg
dec
mov
aam
dec
insl
pop
lods
lret
stos
sub
xchg
and
imul
push
mov
mov
xchg
lods
aad
add
leave
jae
mov
cmp
dec
push
xchg
cltd
les
mov
mov
inc
inc
pop
sub
jbe
test
pop
ja
inc
mov
mov
xor
and
mov
addb
repz
lds
ds
into
repz
jnp
ja
jne
pop
xchg
lcall
out
inc
fstps
rol
leave
mov
outsb
sub
adcb
inc
xchg
rcl
loope
jmp
add
pop
pop
sub
arpl
jp
or
es
or
andl
xlat
push
mov
and
push
movsb
sub
jo
ljmp
push
ficompl
adc
mov
sbb
pusha
int3
insl
sbb
idivb
sub
js
push
popf
fdivl
cmp
leave
cltd
stos
mov
test
enter
xchg
sub
test
and
xchg
mov
xchg
mov
imul
or
popf
hlt
mov
sahf
aam
adc
int3
and
mov
sbb
jge
in
sub
enter
mov
scas
out
add
cmpsl
hlt
test
jle
call
test
scas
pop
sbb
aad
cmp
mov
xor
sti
or
jp
sti
sbb
ret
rclb
sarb
daa
add
in
xchg
sub
mov
xor
roll
mov
iret
cltd
jbe
dec
cmp
jmp
jle,pt
loope
xchg
in
jb
adc
out
shlb
push
mov
lods
lret
fldt
lcall
pop
mov
push
mov
loopne
sub
or
dec
sar
pop
test
outsb
xchg
subb
repnz
int3
dec
sub
sub
lds
push
cmpsl
xchg
lock
aaa
bound
dec
fcomp
pop
push
dec
pop
cmp
push
test
or
nop
jecxz
insl
sub
jnp
enter
sbbl
mov
out
gs
pusha
mov
xor
dec
push
add
int
in
test
js
push
push
dec
push
sahf
xor
pop
mov
sub
xchg
dec
add
mov
fadds
xchg
xchg
jnp
push
ret
es
movsl
sbb
pop
jae
js
sti
aad
xor
mov
jmp
inc
dec
mov
fwait
add
or
or
in
arpl
xchg
cmpsb
imul
or
sbb
mov
rcll
fwait
mov
stos
xchg
aas
imul
mov
ret
clc
je
scas
cmpsb
xor
ss
mov
xor
loopne
loopne
or
negb
jge
pop
adcb
test
or
stos
mov
jbe
aam
mov
js
aaa
ss
into
and
dec
div
pop
pop
outsl
and
jns
insb
aas
adc
clc
or
inc
push
sbbb
cmp
pop
notb
jg
xlat
rclb
es
fisubrs
push
pop
in
dec
movsb
jmp
mov
push
imul
jbe
jbe
pop
push
dec
es
mov
mov
jmp
sub
lahf
dec
repz
cmp
cld
xchg
ss
xor
arpl
add
test
jae
xchg
stos
out
repnz
fs
push
mov
mov
jmp
mov
pop
add
lods
dec
mov
fnsave
cmc
mov
out
orb
sbb
lahf
sbbb
fneni(8087
addb
in
mov
sbb
and
inc
and
inc
mov
mov
jmp
mov
or
pop
pop
cmp
divb
jg
adc
mov
cs
out
jge
addb
imul
negl
lods
jmp
idivl
dec
out
lcall
inc
cmpl
sti
sub
and
sahf
mov
dec
dec
mov
or
movb
mov
hlt
enter
nop
lock
mov
push
outsl
adc
sarl
lahf
sub
xor
inc
sbb
or
aam
hlt
shrl
push
push
arpl
pmovmskb
arpl
iret
sbb
es
pop
cltd
mov
sub
in
mov
divl
loop
dec
mov
imul
push
fidivrl
lock
cmc
add
lret
je
xlat
or
push
jne
addr16
in
stos
sbb
pop
js
sti
stos
ds
scas
inc
ret
lock
mov
cmp
add
lds
pop
loopne
int
add
int3
fadds
shll
jno
out
iret
fsubrl
add
mov
lds
mov
mov
pop
in
sub
pop
test
popa
dec
mov
test
popa
adc
xor
aad
imul
fadds
add
lods
lock
lea
repz
mov
je
dec
shll
mov
fwait
sti
bound
jnp
sbb
imul
mov
add
lds
sbb
lret
jo
das
mov
pop
lods
test
add
push
orl
mov
or
push
jb
ret
push
xchg
call
je
cwtl
sub
or
adc
inc
xchg
mov
loope
outsb
pushf
dec
test
push
les
sbb
jle
ret
adc
fsubrp
lret
adc
jmp
xor
sub
dec
pushf
push
xchg
mov
sbb
xor
xchg
stos
mov
sub
adc
cwtl
pusha
push
fnstsw
sub
pop
scas
das
mov
ljmp
jmp
pusha
xchg
lret
add
movsb
push
mov
jmp
lcall
mov
dec
jp
xor
test
popf
push
mov
imul
mov
xor
rcl
pop
or
or
add
sar
xorb
push
or
pop
subl
xor
call
js
jmp
cld
or
test
mov
mov
push
xor
outsb
pop
dec
test
pusha
and
push
divl
pushf
hlt
pop
addr16
lds
aas
insl
xchg
pop
sub
mov
jl
stos
jae
imulb
outsb
mov
rcll
lcall
gs
pop
xor
dec
jb
xor
aaa
mov
sub
mov
roll
nop
push
lock
ret
nop
fidivl
es
test
push
mov
das
idivb
dec
test
pop
push
lods
negb
das
and
fidivs
call
mov
les
outsb
pop
push
mov
fisubs
adc
sub
jg
xchg
imul
sbb
js
ret
faddl
in
cmc
sub
pop
pop
cli
lret
lods
test
scas
dec
sub
mov
xchg
pushf
stos
fst
mov
mov
jo
mov
int3
xchg
loope
jnp
outsb
ds
shll
pop
pop
adc
jg
notl
ret
rorb
movsl
pusha
add
mov
insl
ss
gs
pushf
cld
aas
stos
pop
add
cmp
outsl
inc
ret
jae
frstor
stc
mov
dec
inc
xchg
inc
bound
je
cmpsb
mov
cwtl
pop
mov
mov
sub
pushf
inc
and
ss
or
mov
repnz
scas
lds
push
call
inc
cltd
es
popw
mov
pop
sub
js
popa
cld
mov
sub
push
in
nop
jno
or
pop
fnstsw
dec
jo
xor
cmp
test
call
daa
adc
jle
cmp
mov
popa
and
jno
pop
loopne
enter
popf
xchg
push
pop
in
testb
je
fstl
xchg
mov
rcrb
adc
dec
fiadds
mov
dec
jmp
jge
filds
jnp
push
add
nop
cmpsl
sahf
dec
iret
jnp
push
cmpsb
rorb
jae
pushf
fadd
fdivrs
ror
arpl
pop
pop
add
pop
movsl
adc
les
jb
aaa
out
sar
pop
imul
and
jmp
pop
jno
sbb
test
les
lahf
iret
cmpsb
mov
sar
in
iret
and
and
out
add
xchg
lret
mov
ljmp
nop
divl
sbb
add
popf
sub
adc
pop
adc
rcr
sahf
and
ss
es
mov
adc
sbb
ljmp
rolb
or
outsb
mov
popa
int3
and
frstor
mov
pop
xchg
lahf
leave
ja
adc
cmp
in
shrl
into
cltd
ret
out
sbb
sbb
add
inc
push
repnz
in
cmpb
dec
pop
outsl
loope
mov
adc
out
int3
push
dec
mov
lea
xor
out
rorb
mov
inc
sti
pop
xchg
pop
mov
inc
pop
hlt
sbb
shrb
mov
mov
lea
scas
mov
push
fucomp
mov
in
adc
shll
cmpsb
inc
cmp
fwait
xor
and
scas
mov
pop
adc
out
iret
mov
mov
fidivrl
adc
daa
mov
jmp
add
jl
inc
jge
cmp
cmp
dec
aam
xor
push
stc
lret
xchg
mov
movl
and
stc
xor
aam
aas
loop
leave
push
cmpsl
xchg
jmp
lret
bound
dec
cltd
push
in
nop
jo
adc
mov
adc
add
xor
imul
loop
jae
rorb
ja
sbb
cltd
mov
aas
nop
add
lods
les
fbstp
ficomps
out
fcmovu
and
daa
or
das
xchg
pop
sbb
shlb
or
stos
sbb
pop
pop
adc
in
call
bound
push
enter
stos
mov
pop
pop
mov
gs
xor
out
fnstsw
call
repnz
stos
pushf
lcall
mov
or
in
sub
adc
mov
or
neg
movsl
dec
push
dec
adc
int
inc
adc
orb
loope
inc
mov
fcoms
lods
jecxz
cli
ficoml
scas
jae
inc
add
fucomp
ss
jp
cmp
insl
dec
adc
ljmp
idivb
mov
jg
jmp
fldcw
insb
and
and
aad
xor
fdivl
pop
insb
stos
popa
test
fs
or
mov
ljmp
clc
loop
pop
fstps
xchg
adc
lods
and
mov
mov
adc
and
popf
test
fs
bound
fisttpll
lcall
xchg
popf
or
aas
xchg
and
xchg
sbb
mov
inc
in
adc
pop
pop
cmp
add
cmp
jns
stos
in
test
and
mov
ret
hlt
pop
and
add
push
mull
xor
sub
mov
ss
arpl
incb
push
add
mov
push
mov
push
jbe
cltd
dec
xchg
icebp
das
mov
cmc
loope
int
in
add
imul
mov
xor
and
lahf
pop
mov
jae
lcall
sub
lcall
dec
dec
popa
jg
jp
aad
cmp
push
cmp
int3
mov
dec
aad
xor
mov
sti
xor
scas
xor
stc
mov
push
popa
jns
mov
fdivrs
adc
sti
sahf
cmp
add
adc
into
and
enter
cli
in
outsl
fucomip
add
insl
xchg
daa
sub
pop
push
sarb
mov
fs
popa
lret
pushf
xchg
dec
out
pusha
push
mov
push
test
insb
sbb
hlt
push
adc
sub
push
jo
sub
loope
arpl
mov
pop
jne
lea
fsubl
mov
nop
sub
fcomps
or
push
sub
xlat
lret
sbb
pop
lcall
xchg
pop
ja
lcall
dec
inc
ja
mov
sub
in
jno
push
ss
dec
cmp
cmc
pop
adc
lods
xchg
int3
adcb
movsl
xor
sbb
adc
jp
nop
ja
jo
jo
int
mov
pop
pop
rorb
add
mov
dec
fmul
sbb
lods
fsubrl
pop
jo
fs
cmp
jl
scas
xchg
lock
or
xor
sub
pop
fcmovnu
test
iret
jp
out
call
in
or
lret
or
das
or
notb
push
xchg
out
push
rorl
xchg
loopne
cwtl
imul
sbb
cmp
pop
and
cmovo
dec
addr16
sub
ficomps
jge
fsts
das
inc
mov
mov
dec
xchg
mov
jecxz
movsl
out
orb
sti
adc
leave
ds
push
and
or
mov
push
jo
call
add
cli
int3
ss
std
mov
add
lods
cltd
push
mov
xchg
or
lahf
in
pop
dec
jg
pop
lock
pop
mov
aad
sub
dec
loopne,pn
cld
cmp
in
mov
call
add
mov
out
push
sub
dec
aam
stos
insl
push
insl
sbb
rcrb
push
subl
inc
test
imul
push
clc
push
bound
ljmp
push
insl
fisttpl
xlat
mov
push
pop
sbb
sbb
sbb
out
mov
sub
out
test
das
rcll
inc
cmp
rcr
xchg
shll
fadds
fsts
adc
lea
int3
repnz
pop
arpl
mov
cmpsb
lock
xchg
push
xchg
jnp
cwtl
xchg
add
shl
push
leave
cltd
jge
and
dec
and
mov
lds
pop
bound
aam
pushf
cmpsl
out
out
out
mov
jmp
insl
and
pop
push
loop
mov
fnstenv
test
sub
add
aad
xlat
les
fistpl
adc
mov
xor
inc
loopne
cmpsl
lret
cmpsl
push
mov
stos
test
call
roll
mov
add
out
das
fsubl
xor
icebp
mov
rcrb
sbb
sarl
inc
inc
mov
cmp
mov
or
xchg
pop
sbb
test
mov
mov
daa
inc
lods
imulb
cmp
stc
insb
ss
lea
shrb
std
mov
test
or
sbb
fmulp
mov
dec
imul
call
xchg
cmp
mov
daa
ljmp
imul
dec
inc
and
dec
test
xchg
or
lds
inc
cmp
idivl
stos
imul
les
in
aas
rcll
xor
push
cmp
scas
xor
xchg
push
test
aad
xchg
daa
stos
mov
sub
xor
jns
not
xor
or
push
or
mov
add
nop
push
roll
pop
das
jbe
call
inc
push
lock
sub
xor
sub
mov
fstpt
sti
adc
mov
and
mov
test
push
or
pop
or
cmovno
popf
mov
pop
jbe
jnp,pn
pop
scas
gs
ljmpw
adc
inc
push
mov
mov
cmpsb
xchg
aam
xchg
cltd
pop
inc
loopne
dec
hlt
xchg
and
lock
lods
int3
or
cwtl
adc
cmp
loope
sti
fwait
test
sbb
std
sub
scas
dec
dec
pop
out
or
idivb
mov
js
cmp
mov
and
popf
in
mov
dec
jge
sub
lahf
cmpsl
dec
stos
es
push
push
or
add
test
adc
xchg
lahf
pop
je
cmp
dec
cld
adc
insb
mov
xor
and
mov
rcll
outsl
leave
jnp
push
repnz
xchg
cld
xor
into
aam
lret
in
ret
and
or
xchg
mov
mov
jle
and
jl
sub
out
adc
mov
and
fnstenv
stc
jno
mov
cmpl
arpl
aam
mov
dec
int
clc
push
movsl
loopnew
pop
jmp
jbe
scas
retw
and
jbe
push
insl
lock
xchg
ja
xchg
add
loope
aas
or
lcall
ffree
out
jp
add
icebp
xchg
mov
mov
filds
shlb
das
mov
mov
dec
pminsw
fistpl
out
stos
addl
stos
or
inc
pop
into
mov
cmp
test
je
mov
cmpsl
inc
xor
mov
imull
cmpsb
mov
pop
in
cmc
lea
lds
mov
or
pop
sub
push
test
mov
cli
xchg
xchg
mull
int
mov
jo
scas
add
cmp
inc
pop
adc
fwait
ss
and
mov
add
pop
xchg
decl
dec
xchg
jnp
repnz
js
jge
push
pop
inc
cmp
xchg
xchg
leave
sar
xchg
inc
clc
stos
add
dec
xchg
inc
pushf
or
xchg
mull
push
jle
cmp
rcl
lcall
repnz
andl
cmp
xor
inc
ds
ret
mov
dec
inc
and
cmp
inc
out
jb
jne
nop
sbb
mov
jmp
pushf
insb
popa
jae
cmpl
sub
je
xchg
fs
repnz
mov
jnp
cmpb
aaa
xchg
imul
sbb
sbb
or
cli
loope
jmp
in
or
xor
jnp
mov
cmc
pop
popa
aam
xor
popf
neg
xchg
inc
or
push
popf
jne
testb
pop
adc
fwait
mov
lcall
add
fwait
xchg
sbb
imull
add
or
xchg
sub
mov
mov
dec
out
and
insb
push
adc
xor
jae
fcmovnu
sub
popf
add
stos
pop
fcoml
shl
pop
mov
inc
das
addr16
pop
popl
fisttps
cmp
pop
int3
jno
stos
or
sbb
sub
add
insl
into
xchg
mov
pusha
cmp
fsubrs
sbb
and
mov
test
rorl
or
sbb
push
call
out
out
stos
mov
mov
cltd
push
mov
lods
mov
sub
cmp
lret
inc
sub
inc
xchg
push
adc
aad
pop
lcall
sub
pop
repz
mov
xor
jl
ret
rcr
pop
daa
and
jmp
mov
jno
sbb
dec
cmp
cmpsb
lret
int
insl
call
lock
xor
enter
or
inc
sub
ss
mov
jmp
iret
in
scas
adcl
xchg
sbb
das
push
pop
or
add
call
jp
popf
fisubrs
loope
vmread
sub
mov
pop
cmp
cvtps2pd
pusha
mov
jmp
out
dec
lea
xchg
xor
pop
popa
mov
sbb
leave
mov
inc
pusha
push
movb
mov
mov
ljmp
fwait
cmp
inc
sub
push
sub
enter
jecxz
fsubrl
dec
je
les
lret
es
xor
mov
movsl
and
dec
jg
rcll
and
lahf
sbb
lret
fildl
xchg
in
sbb
fwait
sub
push
test
loope
sub
aam
xchg
aaa
in
in
pop
mov
imul
iret
xchg
push
jmp
xchg
fs
jmp
mov
aas
std
lcall
movsb
mov
scas
scas
dec
adc
sbb
push
push
in
mov
and
push
movb
xchg
test
dec
loopne
push
push
and
enter
test
fwait
dec
cmp
outsb
dec
loopne
es
pop
cld
in
cmp
mov
mov
sti
xor
cmp
add
mov
rcrb
push
adc
fsubrp
cmpsl
mov
add
sbb
jg
fs
jle
aaa
pop
gs
xor
cmp
push
inc
loope
sub
imul
cmp
adc
imul
or
jecxz
push
pop
cmpl
in
jb
mov
push
out
mov
ret
lcall
xchg
push
mov
mov
xchg
cltd
sahf
mov
out
repz
add
jo
fisttps
call
push
fcomip
and
push
jg
movsl
add
jbe
jle
dec
repz
filds
or
push
je
push
pop
clc
or
adc
mov
pop
pop
test
push
icebp
getsec
sub
pop
insl
cmpsb
fcoms
in
outsl
adc
aas
icebp
jmp
ss
cmp
add
cmp
sbb
movsb
scas
push
push
imul
jmp
inc
in
adc
loopne
or
outsb
icebp
call
jmp
cltd
xor
repz
in
stc
popf
in
push
aaa
or
push
mov
jae
hlt
push
imul
imul
test
cs
lret
jne
or
add
cmp
and
decb
dec
mov
outsl
xchg
mov
push
call
dec
xlat
adc
and
jmp
dec
fcompl
loopne
movl
clts
xchg
jmp
pop
mov
jmp
adc
mov
adc
sahf
pop
out
into
jne
or
mov
sub
xchg
dec
mov
inc
ret
pusha
mov
mov
out
test
or
lods
daa
and
cltd
mov
dec
adc
xchg
jno
inc
in
addr16
aad
xchg
nop
cs
sbb
inc
jo
dec
jl
idiv
lds
jo
nop
out
mov
out
shlb
or
push
js
out
jns
pop
jnp
out
xor
pushl
push
or
test
add
lahf
jecxz
repnz
aam
stos
popf
mov
ss
js
out
lahf
add
xor
scas
inc
xchg
test
rolb
outsl
jbe
mov
fstpt
xor
sub
es
mov
lea
leave
push
or
xchg
fldl
les
sbb
scas
dec
sub
pop
add
inc
xor
lock
jmp
mov
pop
pop
je
mov
push
test
addr16
and
inc
rcl
push
push
imul
mov
rolb
shl
cmp
int3
fsubl
jecxz
int3
int3
sbb
clc
jecxz
sub
xor
ja
loope
fsub
xchg
sub
mov
xcrypt-ecb
repnz
fidivrs
test
and
mov
es
mov
jno
fwait
mov
int
and
lret
ja
hlt
push
add
adc
add
sarb
insl
imul
jns
xor
adc
cmc
lea
mov
out
enter
repz
lret
loope
dec
loopne
rclb
stos
mov
cmc
ficompl
sahf
sahf
cs
fdivrs
mov
clc
adc
mov
in
jl
aaa
pop
mov
loope
fmull
enter
stos
push
mov
push
xchg
cmp
aam
dec
fldcw
mov
push
push
jno
mov
mov
popa
sub
or
call
xor
ror
jb
test
ds
adcb
adc
rorl
xor
ljmp
popa
out
ja
cmp
pop
xchg
int
in
mov
icebp
mov
mov
xor
push
mov
loopne
mull
jecxz
xchg
mov
pop
stc
cmpsb
fstpl
pop
gs
jle
sbb
xchg
clc
mov
pop
pop
les
adc
adc
push
dec
mov
pop
test
or
mov
gs
fbstp
xchg
movsb
call
mov
jne
add
repz
iret
sub
dec
bound
test
add
sbb
js
cltd
lock
lods
arpl
jnp
inc
es
xlat
push
sub
dec
in
sbb
mov
dec
sbb
inc
inc
aam
fsubrs
jne
pop
inc
aas
sbb
jns
mov
es
lds
sbb
sbbl
outsl
mov
pop
cmp
lahf
sbb
lcall
dec
or
aas
add
cltd
mov
das
push
push
out
repz
sarb
mov
mov
nop
test
nop
dec
stc
pushf
pop
sub
push
repnz
push
movsb
jp
push
push
test
sahf
jne
sbb
lock
sub
cmp
push
iret
shlb
mov
inc
aas
aam
lahf
inc
sub
xchg
clc
out
in
call
or
leave
jnp
lahf
jge
test
mov
out
push
cmpsl
add
fcoml
lcall
inc
push
popf
jbe
ret
mov
push
insb
xchg
stc
test
adc
nop
shll
dec
sti
and
fwait
or
sub
add
icebp
jbe
xorb
out
cltd
outsb
jo
xchg
mov
add
add
frstor
imul
insl
pop
repz
mov
jnp
mov
lock
data16
mov
or
popf
dec
fildll
in
test
out
mov
insl
sbb
mov
outsl
mov
std
loop
fs
cmp
cli
xor
jle
pusha
xor
stc
mov
add
mov
dec
in
mov
test
cmpsl
fsubrl
sub
or
std
ja
negb
sub
fstps
in
sbb
mov
adc
ss
cmp
cli
shrl
push
cmp
lock
lret
jle
mov
popf
mov
push
dec
cmp
insb
and
and
out
sbb
cmp
cwtl
sub
mov
or
in
lret
fs
inc
cli
sets
mov
push
mov
push
adc
lahf
add
clc
dec
ret
stos
inc
inc
out
cmp
rclb
or
bound
and
sub
cmpsb
cmp
jge
maskmovq
testl
sbb
outsl
mov
fidivrl
ret
inc
out
popf
cmpb
dec
mov
sbb
xchg
insl
xchg
dec
lods
stos
push
rcll
add
mov
enter
das
inc
shrl
stos
mov
cmpsb
jo
cmpl
push
inc
and
icebp
jl
loop
repz
and
and
or
xchg
add
push
cwtl
inc
fcmovne
jnp
jbe
dec
faddl
imul
push
aad
sub
out
sbb
xchg
cmp
mov
mov
push
shrb
rcll
cmpsl
cwtl
fwait
adc
popa
in
imul
cmp
xchg
filds
mov
dec
sbb
mov
dec
dec
int
xchg
jg
in
inc
aaa
imul
std
int
loope
nop
insb
lret
inc
mov
aam
lret
cs
mov
jne
nop
cmp
jecxz
pop
test
mov
dec
jg
int
mov
imul
sub
dec
jmp
pop
pop
push
aad
popa
dec
sahf
bound
into
dec
xor
testb
pop
dec
push
pusha
les
inc
dec
or
add
insl
mov
mov
add
and
xchg
or
xor
push
push
xchg
mov
jl
inc
jno
xchg
lods
test
and
movsl
and
sbb
je
add
leave
push
jo
fidivl
call
enter
sbb
lcall
in
lahf
mov
and
pop
push
push
fsub
dec
pop
dec
js
pop
fbld
into
pop
xchg
mov
push
xchg
jae
inc
dec
cltd
ret
sbb
pop
and
xchg
arpl
js
jg
icebp
mov
sbb
push
or
mov
dec
daa
or
fistps
mov
fisubrl
ja
xchg
xor
cld
jp
loope
push
inc
aad
mov
rcrl
xlat
add
ja
adc
jge
out
in
jo
jb
out
mov
lahf
inc
lret
jo
xor
popa
jne
dec
jmp
pop
cmp
inc
mov
fsubs
add
aad
out
mov
jp
cmpsb
test
mov
scas
aas
dec
adc
add
ficomps
stc
dec
xchg
dec
add
mov
inc
pop
andl
add
push
sbb
inc
add
ljmp
sbb
pop
addr16
inc
rclb
and
mov
and
add
outsl
lcall
icebp
inc
imul
sar
testl
stos
xor
decb
out
push
sub
test
test
xchg
rorl
iret
xchg
lret
out
or
mov
test
push
fstps
sbb
or
jp
cmpsb
aam
clc
or
mov
scas
cli
orb
pop
idivb
sti
sub
jg
jnp
and
stc
and
loop
out
mov
fs
dec
in
mov
dec
push
lds
mov
xchg
pop
cmp
jecxz
jo
inc
push
sub
push
imul
pusha
adc
or
in
xchg
sar
add
xchg
cmc
mov
dec
push
xor
outsb
out
adc
gs
out
add
sahf
mov
repz
adc
xor
fistps
movsb
sbb
into
and
sbb
dec
pop
jge
pop
dec
nop
xchg
rcrl
jne
cmc
push
push
divb
fsincos
pop
shrl
outsb
inc
repz
psrlw
mov
test
cld
rcrb
jno
loope
rorb
fmul
movsb
sub
mov
addr16
fildl
imull
inc
mov
push
adc
pop
push
mov
jbe
repnz
jnp
xchg
aad
cld
jae
es
push
movsl
orl
inc
notb
dec
and
dec
int3
sub
das
das
mov
fisubrs
xor
xor
ljmp
dec
idiv
jo
add
repz
dec
mov
mov
loope
mov
sbb
xchg
xchg
mov
push
mov
xchg
pop
push
repz
ficomps
pop
sub
mulb
mov
sbb
xchg
outsl
and
test
shr
fcoms
call
inc
outsb
stos
mov
mov
pop
ja
leave
fistpll
adcl
cmpsl
and
adcb
jge
loope
inc
inc
xor
jb
lock
scas
adc
rcll
add
movsl
shlb
pop
xchg
jo
scas
add
sarl
adc
dec
les
fmul
mov
lret
mov
or
ljmp
ljmp
out
out
mov
ret
dec
stos
sarl
add
stos
inc
clc
mov
jle
clc
or
arpl
push
stos
arpl
pop
push
aas
dec
call
in
cwtl
xchg
loope
pop
inc
in
cltd
in
insb
icebp
hlt
mov
inc
fisubs
loopne
outsb
jb
sti
dec
idivb
jmp
mov
mov
or
call
mov
int3
das
xor
ror
arpl
ds
shlb
roll
xor
movsb
sub
popa
and
lock
adcl
pop
pushf
mov
mov
test
scas
out
mov
pop
mov
adc
lar
mov
inc
in
in
notb
addr16
add
les
bound
jl
sub
lock
jge
je
jge
lods
sbb
js
imul
addr16
out
outsl
gs
xchg
test
jmp
mov
cmc
mov
mov
sar
add
cmp
push
das
movsl
dec
mov
cld
pusha
loop
inc
aam
test
insl
lahf
mov
inc
in
loop
sbb
adc
iret
mov
mov
fs
push
push
bound
xchg
push
dec
movsb
or
lock
adc
es
cs
dec
mov
sub
and
sbb
push
sub
mov
outsb
outsl
jmp
das
jno
test
fldln2
sub
inc
xchg
popf
dec
pop
lret
test
add
or
fstpt
rcrl
shrl
incl
adc
and
punpckldq
sub
mov
jg
mov
stc
inc
test
jmp
dec
cmp
es
xchg
push
sub
lods
out
sub
cmp
sbb
dec
mov
dec
fs
sbb
sahf
in
arpl
out
rcr
xor
pop
or
rcrl
icebp
test
mov
loopne
icebp
aaa
ret
daa
xchg
repz
sti
rorl
sbbb
jne
ss
push
andl
xchg
jo
leave
cmp
sbb
mov
cli
mov
xor
outsl
cs
adc
rolb
inc
dec
faddl
loop
sbb
mov
sti
scas
pop
addb
icebp
cmp
test
loopne
jo
iret
mov
setge
adc
xchg
das
aam
clc
mov
movl
ss
cmp
daa
in
mov
mov
aaa
mov
popa
sahf
pop
or
or
cmpsb
lret
pop
cld
insb
xor
jmp
xchg
sub
stos
ret
outsb
test
sub
pop
lea
lahf
icebp
xchg
es
sub
aaa
mov
cli
xchg
cmp
xchg
inc
gs
enter
cmp
push
outsb
add
or
ret
hlt
xchg
icebp
lods
ffreep
icebp
orb
xchg
jle
sbb
negl
jp
xor
mov
sub
cltd
mov
movl
cmp
xchg
sub
pop
fsubrl
mov
dec
lods
inc
stc
add
xchg
pop
push
out
jmp
push
sahf
ret
mov
bnd
pmuludq
cmpsl
lea
push
das
js
es
in
fdivrs
lods
xchg
addr16
test
outsl
mov
loope
mov
mov
push
test
jb
lods
xor
clc
cmp
mov
mov
and
pusha
or
sbb
ljmp
and
lods
xchg
repnz
xrelease
jecxz
dec
fcmovnbe
or
dec
mov
insb
leave
cld
je
inc
or
xor
push
mov
jb
mov
mov
pop
test
add
sub
jp
or
or
adc
repnz
or
out
xchg
in
in
sub
decb
fldt
cmp
es
mov
mov
sahf
add
xchg
rcll
push
push
rcrb
lods
pop
jo
or
scas
and
fcoml
and
shrb
test
andb
je
push
insb
sti
rcl
lods
or
lods
jne
data16
pusha
cmp
and
xchg
inc
push
xchg
dec
call
push
pop
stc
fwait
ret
lods
cld
in
in
push
jp
lea
sbb
xchg
pop
push
pop
or
or
push
cs
es
cmpl
inc
xchg
xor
mov
push
push
rclb
mov
lret
inc
sbbl
lahf
pop
jp
std
and
setns
xchg
mov
insl
cltd
fidivrl
push
xor
out
inc
jp
in
adcl
mov
aas
dec
mov
xchg
and
inc
and
dec
mov
cmp
sbb
outsb
lret
shlb
sub
test
dec
enter
pusha
adc
mov
rcrl
data16
inc
xchg
mov
dec
mov
test
scas
adc
clc
push
fldt
xchg
lea
sbb
scas
int
dec
dec
test
push
add
out
xchg
mov
vpsadbw
mov
dec
mov
mov
lock
mov
clc
pop
outsb
and
insl
and
and
aaa
jge
aad
sti
add
lds
in
dec
call
rorb
fldenv
or
fisubrs
hlt
inc
push
jae
pop
mov
dec
mov
and
fwait
or
dec
pop
stos
jecxz
bswap
cmp
and
xchg
pop
nop
cld
mov
pushf
jle
cltd
mov
mov
and
stos
subb
jmp
in
bnd
xorl
movsl
lret
lret
pop
jae
fbstp
push
in
push
sub
test
push
jg
aas
pushf
pop
mov
mov
mov
cltd
dec
cmp
or
mov
jp
inc
adc
js
mov
dec
stc
test
push
dec
pop
xchg
outsb
or
in
imul
xor
mov
pop
adcl
lahf
push
push
in
ja
sbb
adc
stos
push
lods
hlt
int
push
or
daa
push
lods
test
jae
arpl
xor
or
insb
mov
inc
fwait
pushf
rclb
jno
nop
jno
stos
nop
flds
lock
loope
cmp
out
xchg
or
gs
mov
cmp
sahf
test
jae
add
inc
lcall
int3
hlt
push
xor
mov
mov
fcomp
push
sbb
aaa
cmc
adc
enter
fsubs
xlat
mov
test
stos
or
pop
and
push
adc
xor
xchg
addr16
lock
ficomps
call
jl
dec
pop
rcrb
xchg
aam
ret
sahf
sub
and
lret
repnz
icebp
xchg
fistps
out
inc
mov
arpl
aad
out
jl
inc
out
loop
cli
int
sub
lret
ljmp
adc
mov
mov
test
ret
inc
xchg
sub
cmpsb
push
lret
rclb
sbb
jno
jnp
aaa
sbb
leave
rcrl
test
es
clc
repz
add
cli
sbb
inc
aaa
leave
loopne
insb
daa
xchg
out
outsb
outsl
ljmp
cmp
push
aaa
in
ss
shll
mov
adc
lret
push
xchg
mov
pusha
lods
sub
jp
push
sti
std
lret
int3
sbb
mov
jae
fmulp
jecxz
push
mov
in
imul
pusha
gs
xchg
jp
outsb
lcall
aas
roll
int
sbb
scas
jb
mov
add
mov
movsl
imul
fistps
push
inc
xor
int
addl
mov
sahf
and
cmp
movb
mov
daa
cmp
cmc
arpl
jne
jbe
adcb
cs
loop
inc
in
xchg
std
push
dec
insb
mov
sbb
dec
adc
adc
lahf
pop
xor
adc
pop
leave
adc
xor
int
addr16
rorb
out
ret
lcall
add
inc
inc
je
push
roll
and
call
js
stc
insb
inc
sub
adc
xchg
pop
sub
pop
js
sub
mov
mov
clc
repz
and
xor
ss
dec
jo
xor
loopne
ret
mov
cmp
imul
fstps
xlat
sarl
mov
shll
cs
dec
test
cmp
insl
or
pop
movsl
cmp
lods
mov
pop
int
outsl
fsubs
mov
mov
dec
mov
jl
inc
sub
mov
leave
xchg
icebp
xchg
push
push
mov
pushf
out
mov
inc
lods
cmp
sahf
push
mov
ret
mov
xchg
into
hlt
les
in
inc
rolb
aaa
outsl
inc
std
andb
fwait
in
xchg
adc
lcall
cs
xchg
test
inc
add
out
stos
in
aad
icebp
imul
and
lahf
xlat
cltd
mov
cmpb
xor
das
push
xchg
pop
xor
nop
mov
dec
jl
lret
push
mov
ds
or
popf
rclb
and
std
add
push
dec
sbb
push
pushf
faddl
arpl
dec
and
jo
jmp
push
mov
pop
sar
add
mov
ret
aas
push
cmp
popa
xor
adc
push
sbb
adc
int3
rcrl
stos
jb
sbb
jns
sub
push
imul
jmp
pop
inc
insl
mov
push
pop
add
sub
aas
sbbl
mov
rcrl
aas
out
pop
jne
out
popa
adc
push
repnz
push
xchg
push
sub
mov
outsl
pushl
pop
js
dec
dec
iret
lods
test
xlat
scas
mov
aad
mov
jo
int
add
jbe
jnp
outsb
jge
sub
jp
dec
shll
sbb
adc
push
subl
imul
inc
pop
sbb
lds
cmp
test
push
notl
add
lcall
psrlw
inc
hlt
imul
cmp
xchg
aad
in
lds
add
xor
lret
lahf
call
sub
mov
push
adc
dec
daa
fldenv
aad
sarl
jmp
xchg
sahf
pop
mov
dec
fcomps
jmp
xor
stos
and
std
mov
jnp
xchg
mov
addl
popa
cli
clc
jp
rcrb
ja
push
pop
imul
pop
mov
ret
ret
jmp
mov
shlb
sub
jnp
lods
adc
pop
or
jb
in
cmp
popa
push
test
cmp
cs
jno
jg
mov
push
shll
test
pusha
ja
xor
fldenv
xor
mov
fisttps
out
push
loopne
sub
call
dec
jge
adc
mov
fnsave
pop
dec
jl
sbb
mov
out
and
cwtl
add
ret
cmp
lahf
gs
cmp
jl
sbb
push
movsl
add
movsl
in
or
mov
inc
dec
popf
cwtl
pusha
xchg
mov
cmpsb
dec
fimull
pop
cmc
idivb
les
jnp
cmp
mov
fildll
leave
xor
mov
lret
ljmp
popf
test
mov
cmpsb
adc
pop
mov
mov
xlat
dec
pop
sbb
cs
leave
pop
ds
mov
or
sub
pop
xor
fistpll
fsubs
out
data16
dec
outsl
xchg
popa
dec
pop
or
arpl
push
out
mov
clc
pop
mov
pop
push
mov
rcll
and
in
inc
ds
cmp
jge
sbb
scas
jae
add
cmp
xchg
aad
pusha
stos
sub
outsl
in
je
xlat
push
nop
outsl
dec
out
jnp
push
adc
inc
rclb
xor
mov
pop
mov
outsb
xchg
je
jl
jmp
xchg
jmp
add
andb
inc
sti
loope
stos
mov
or
dec
stos
ret
je
stos
rcll
xor
ret
lock
clc
mov
push
pop
negl
or
push
rcrl
pop
filds
dec
jno
sahf
imul
adc
push
mov
scas
mov
cli
mov
sbb
cwtl
test
cmc
loop
lea
cmp
push
xchg
mov
pushf
in
out
std
inc
aas
sbb
sbbl
popf
sti
xor
add
push
and
add
mov
push
iret
sbb
out
rcl
addb
and
dec
fistpll
cmp
lds
push
dec
shlb
aad
mov
test
dec
aam
sbb
and
mov
scas
jns
ret
mov
outsl
inc
jge
dec
out
push
jle
out
sbb
cmpsl
mov
fs
lods
pushf
cs
xchg
cmp
and
lret
push
push
fstpt
stos
filds
fsubs
sbb
xchg
int
mov
out
push
cli
push
outsl
adc
and
pop
mov
cmpsl
adc
sub
cs
inc
bound
fmul
xor
mov
aas
cmp
int3
dec
lret
dec
insb
sbb
mov
mov
sub
std
or
into
or
xchg
push
mov
cmpsb
pop
in
sub
stos
ja
cmpsl
add
stos
mov
fcmove
or
gs
repz
jns
aad
inc
int3
pusha
imull
pop
cmp
sub
out
xchg
sbb
dec
pusha
loopne
mov
xchg
cltd
dec
test
loopne
nop
jp
jne
and
scas
aad
mov
movsb
jge
mov
pop
add
fs
jmp
adcl
pop
fwait
popa
inc
stos
fsubl
in
int3
les
inc
movsb
pop
adc
cmp
pop
shll
or
aad
or
popf
and
into
mov
sub
adc
or
jae
cmp
mov
bound
int
inc
mov
loop
push
jl
push
rol
pop
pop
xlat
jg
test
popl
xor
fwait
push
testl
sub
mov
ja
xor
push
sbb
inc
push
bound
cwtl
gs
int
fwait
arpl
push
jbe
adc
cmp
jle
scas
jnp
pop
test
pop
sbb
out
ljmp
dec
jge
adc
sbb
loope
mov
lods
in
pop
push
pop
xchg
fisubs
mov
adc
jae
inc
ret
je
xchg
sbb
clc
lcall
pop
cs
mov
inc
or
fadds
xchg
enter
sub
inc
xor
test
or
mov
dec
outsl
push
add
clc
jbe
inc
xchg
xchg
dec
in
roll
xchg
frstor
lock
shl
in
sub
cmp
mov
adc
dec
or
js
adc
add
sbb
dec
loope
dec
arpl
or
sub
pop
fwait
jl
jne
dec
add
push
mov
into
mov
fildll
xor
mov
test
aad
lahf
lods
ss
xchg
push
enter
outsl
jmp
aam
mov
lahf
arpl
dec
mov
dec
dec
add
imul
pop
insb
in
ljmp
xchg
fldl
mov
arpl
outsl
rcr
or
insl
push
sub
sahf
outsl
lea
imul
cmpb
lret
sahf
lds
sbbb
inc
xchg
enter
mov
fmulp
mov
pop
or
push
clc
mov
outsl
push
stos
mov
cmp
dec
popa
jl
pop
sub
lcall
xchg
push
insl
push
and
imul
icebp
rcr
jb
sbb
mov
sarl
push
loopne
lods
jb
and
xchg
clc
adc
int
mov
or
mov
cmovae
loop
mov
push
scas
rclb
js
es
mov
xchg
mov
paddusb
inc
mov
push
js
repz
cld
cli
pop
jno
pop
lock
jne
or
mov
mov
jl
jmp
push
fcoms
mov
sbb
enter
mov
jb
std
adc
jge
clc
movsb
call
sbb
in
ret
and
or
es
pop
ret
dec
lea
and
js
stos
clc
testb
lea
or
mov
mov
lods
jno
adc
jg
cmp
lret
jl
mov
push
dec
push
push
je
lock
loope
outsl
mov
mov
dec
scas
divb
popa
int
lods
sbb
popa
push
lods
outsl
fcomps
lock
pop
xor
test
sbb
xchg
dec
in
gs
push
pushf
out
jmp
sbb
or
jnp
test
xor
sub
cmpsb
and
push
adc
and
cmp
cmp
clc
lret
jno
add
lds
das
adc
xchg
call
mov
mov
mov
test
std
pop
xchg
or
aam
xchg
inc
dec
fistpl
mov
sarb
pop
test
sahf
daa
xor
mov
sub
popf
subl
pop
int3
cmp
fdivrs
int
mov
xchg
sahf
lds
mov
in
mov
bswap
add
out
sbb
or
push
adc
xorb
sahf
movsl
test
loopne
ret
fucomp
mov
das
in
imul
out
imul
scas
inc
push
xor
rolb
sub
lea
ds
stc
jnp
loop
aam
out
sbb
fistl
adc
fcoms
sarb
mov
push
inc
and
add
mov
outsb
and
addr16
pop
cmp
loope
jne
cli
jecxz
dec
loopne
push
sub
scas
mov
jmp
add
mov
incb
xchg
push
xchg
push
sbb
fmull
push
inc
mov
stos
and
lea
pop
add
jp
cmp
test
mov
fs
icebp
mov
jl
in
sub
enter
xchg
cmc
aad
jnp
movsl
mov
rorb
or
xor
lock
lret
and
cmp
xor
mov
js
pop
jmp
fsubs
jb
dec
jnp
add
jge
adc
test
loopne
and
imul
or
test
add
mov
add
push
sub
sub
pop
out
stc
xlat
sbb
sbb
cmp
leave
mov
xorl
push
fldenv
ret
pop
leave
sbb
mov
pop
or
xlat
add
jg
xchg
jnp
xchg
rcrb
imul
stc
sub
ret
xchg
add
push
lds
xor
jge
add
cld
mull
pop
clc
pop
out
xchg
xchg
lds
fldenv
mov
mov
rcrl
out
outsb
je
or
mov
std
insl
mov
cmc
jo
lods
pop
mov
cwtl
mov
push
mov
adc
dec
jmp
hlt
dec
pushf
add
scas
insl
mul
cmp
cmp
out
outsb
lock
imul
dec
inc
lret
mov
std
mov
ficompl
data16
inc
sbbl
scas
lret
mov
mov
sub
outsb
xor
pop
popa
jge
mov
inc
lock
mov
ss
jg
les
xor
adc
mov
out
rcll
and
idivl
mul
mov
cmpsb
lock
push
jbe
jnp
pop
repz
sahf
mov
fsubrp
inc
imul
xchg
imull
sub
sbbl
dec
cli
dec
aas
jo
es
js
push
xchg
push
cltd
adc
mov
sub
mov
int3
scas
mov
dec
in
jge
sub
pop
mov
pop
into
pop
mov
js
mov
scas
jge
shll
into
sti
cmpsl
mov
xchg
mov
inc
insb
jne
and
outsl
xchg
push
popf
xchg
fisubs
rcl
dec
xor
mov
iret
arpl
icebp
dec
pop
pop
sbb
ret
popf
jnp
push
sub
hlt
ret
mov
mov
pop
xchg
push
insl
jns
fcompl
in
sbb
sarb
ds
roll
dec
insl
cmc
push
icebp
test
insb
jbe
movsb
or
or
subl
out
test
scas
mov
out
mov
jbe
sahf
dec
sbb
outsb
es
xchg
dec
jl
shrl
dec
dec
cmp
sub
std
outsl
in
pusha
inc
mov
inc
popf
sub
movsl
std
lret
imul
jg
cmp
sub
inc
adc
cli
gs
gs
lret
sarb
std
ja
jle
push
and
cmpsb
sbb
push
int3
sbb
jmp
dec
into
push
popa
cmp
or
js
ret
leave
sbb
and
sub
inc
dec
cld
pop
das
jnp
jno
sti
and
ret
dec
and
fwait
adc
pushf
sub
hlt
jmp
mov
mov
xchg
xchg
rclb
pusha
in
out
adc
mov
out
cs
stos
or
mov
mov
push
iret
jp
mov
insb
xchg
xorl
out
ljmp
mov
sbb
mov
inc
fs
sbb
addl
mov
outsl
push
pop
mov
push
test
jmp
fmul
and
xor
stos
and
push
mov
stc
push
in
fmuls
push
push
inc
lods
cmc
test
dec
push
cmpsb
cltd
sbb
sub
popa
jmp
mov
dec
xchg
pop
fbstp
adc
movsl
sub
or
cmpsb
jns
add
push
cltd
clc
aad
cmpsl
int3
xlat
xchg
repz
movsb
cltd
clc
mov
sub
movsl
in
and
mov
or
das
ret
xchg
pop
out
imul
test
or
jmp
notb
adc
fistl
mov
push
jl
lds
dec
push
daa
cli
pop
in
test
das
movsb
xchg
sub
call
adc
or
popf
mov
ficoms
loope
cmp
push
inc
insb
xor
hlt
push
hlt
and
shl
mov
or
stos
xchg
mov
repnz
ljmp
jb
xorl
jecxz
pop
test
and
out
mov
cmp
mov
mov
arpl
ret
xlat
jbe
inc
dec
les
and
cwtl
scas
call
and
out
mov
inc
jo
dec
mov
nop
jnp
mov
shll
insb
fimull
sti
mov
sub
incb
insb
dec
inc
jecxz
orl
aad
sbb
inc
ret
outsl
jle
addr16
push
cmpsl
inc
xchg
lea
daa
icebp
adc
insb
or
inc
and
sbb
lods
sbb
dec
xor
sub
adc
jl
pop
inc
push
fmuls
imul
mov
sub
out
push
js
test
and
stc
in
out
int3
out
pop
rclb
pop
inc
mov
adc
dec
sub
or
mov
ds
scas
in
les
loopne
lret
mov
sbb
incl
jp
lcall
ret
pushf
mov
cmp
movsb
mov
xor
cs
daa
pop
sarl
pushf
adc
pop
loop
mov
mov
enter
cltd
hlt
imul
stos
sub
sub
popa
or
insl
and
push
dec
jmp
mov
push
fbstp
enter
mov
push
in
sahf
data16
xchg
sub
mov
imul
push
pusha
jo
cmp
xchg
out
ret
fcompl
out
jb
xchg
cmpsb
or
sahf
mov
out
addr16
xor
inc
xor
test
xchg
dec
pop
out
out
sbb
jl
stc
daa
or
int3
fstps
mov
pop
and
ficoms
cmp
dec
jne
fstpt
xchg
pop
testl
jnp
in
addl
add
nop
ja
xchg
inc
mov
fnsave
mov
mov
mov
add
hlt
add
jno
fsubl
adc
icebp
push
or
lock
jmp
test
xchg
pop
je
push
insb
jo
cmp
push
fstpl
and
ret
cmpsb
repz
das
leave
ds
out
fcomps
insb
dec
mov
shll
cmp
xor
jne
mov
loopne
dec
cmp
scas
xor
stos
out
jle
fwait
xchg
lret
adc
in
fisubl
int3
cmpsl
subb
push
sahf
out
js
stc
test
jle
je
ficompl
pop
dec
push
adc
cld
dec
insb
cmpsb
add
aad
sub
mov
add
inc
test
add
cmp
xchg
cmp
sub
mov
xor
push
movsl
cmp
cld
or
adc
inc
aas
adc
pop
cs
jbe
nop
mov
xchg
lret
sub
adc
sbb
mov
push
cmp
inc
sbb
push
faddl
xor
movsb
shrl
in
call
lret
and
sbb
daa
dec
sbb
pusha
xchg
mov
out
int
shrl
js
imul
and
mov
nop
loopew
rol
pop
test
lods
stos
or
popf
int3
adc
fldt
imul
pop
lret
mov
fwait
fstpt
daa
inc
or
jmp
xchg
pop
xchg
and
test
xchg
sarb
xchg
lods
sbb
mov
pop
push
push
aaa
sbb
adc
clc
scas
inc
fs
pop
out
cmp
lock
cld
jo
pop
sub
xchg
adc
repz
inc
push
scas
in
mov
lcall
jbe
jg
jno
and
lahf
adc
mov
mov
data16
cmp
push
movsl
adcl
jne
scas
fnstcw
in
in
push
daa
mov
sub
pushf
ficoml
mov
int3
dec
sbb
pop
dec
jno
and
mov
jecxz
add
push
push
push
outsl
scas
dec
mov
pop
jno
xor
mov
std
push
cltd
mov
dec
das
out
mov
jecxz
mov
xor
popf
nop
inc
add
dec
fcomps
into
iret
push
scas
shrl
jne
lds
fbld
pusha
adc
loop
out
inc
rolb
dec
sub
sbb
mov
cmc
xor
call
test
aaa
push
pop
daa
int
movsb
push
mov
sub
jp
and
jge
loopne
fstps
aas
inc
adc
mov
xor
int3
pop
xchg
or
cli
dec
dec
inc
lods
cmp
bound
mov
rcll
mov
ret
or
cld
lahf
xlat
fcmovb
push
add
and
test
mov
or
xchg
cltd
iret
pop
dec
pop
or
mov
xor
das
jmp
pop
js
jecxz
and
xchg
mov
cmp
mov
mov
mov
cld
push
xchg
pusha
test
pop
fsub
mov
inc
sub
inc
cli
xchg
xor
pop
outsl
push
les
pop
mov
iret
and
cmp
pop
arpl
sub
mov
adc
lock
jb
xor
test
xor
das
shrl
push
fs
jo
or
mov
out
xor
jmp
clc
adc
mov
sbb
sub
xor
ficoms
adc
mov
rorl
stos
clc
mov
jb
pop
jl
or
sbb
jbe
stos
sarb
pop
sub
imul
fmul
int
aaa
sbb
mov
inc
outsb
cld
xchg
ss
ljmp
incl
cli
ret
fildl
bound
jne
shlb
sti
jg
push
scas
pushf
mov
add
dec
mov
push
mov
pushf
cmpsb
cld
mov
lods
cltd
loopne
mov
mov
push
ja
sub
cli
loop
adc
dec
push
insb
push
add
sbb
out
xchg
cmpsl
arpl
inc
aas
push
out
adc
dec
add
test
dec
jg
mov
mov
pop
inc
das
lcall
mov
adc
cmp
test
or
push
mov
test
mov
sbb
lcall
inc
enter
cmc
pop
push
sub
lcall
jnp
das
xchg
and
lret
add
ss
jp
lret
pop
fucomp
mov
in
push
cmp
loop
cmp
repnz
pop
pop
push
mov
add
sbb
adc
ds
imul
fisttps
jmp
push
sub
pop
lret
sbb
cmp
and
cltd
jg
pop
xchg
mov
sbb
xchg
xor
mov
inc
scas
popf
xor
adcb
sub
xchg
pop
repnz
inc
or
call
mov
mov
xchg
push
repz
repnz
fwait
sub
popa
in
scas
cmp
and
imul
rol
cmp
mov
lods
imul
into
int
cmpsb
xchg
aas
imul
xchg
fcomps
add
arpl
sub
push
inc
fisubrs
pop
add
or
lcall
add
imul
add
pop
lock
pop
movsl
sbb
data16
int
cmp
lea
adc
or
cmp
fists
xchg
add
jo
jmp
shll
int
sub
inc
aas
pushf
lret
in
clc
cmpsl
xorb
repnz
push
and
xor
frstor
outsb
or
aas
test
nop
jge
scas
mov
into
or
rcl
jmp
fdivs
mov
arpl
xlat
scas
lcall
sbb
mov
sbb
js
dec
xor
pop
jo
dec
sbb
loopne
rcrl
adcb
push
adc
add
jnp
ljmp
pop
xchg
and
fwait
mov
mov
imul
xor
stos
hlt
aad
inc
shrb
xchg
es
test
jo
fisubrl
fdivs
cmp
out
sbb
loop
outsl
fsubrp
in
stos
mov
pop
imul
xchg
lret
cwtl
outsl
xor
xchg
push
mov
jo
aam
inc
gs
fimuls
fistpll
mov
incl
and
adc
rolb
mov
sub
sahf
jb
xlat
jp
push
das
or
mov
jp
lahf
cmp
push
mov
xchg
lods
mov
pop
jmp
add
popa
xchg
dec
fsubl
push
push
icebp
icebp
sbb
int
cmp
cli
add
arpl
sub
clc
mov
faddp
arpl
inc
push
xor
cld
dec
fcmovu
mov
sahf
pushf
into
int3
aas
pop
adc
ret
pop
lahf
mov
mov
mov
mov
int3
scas
pop
mov
sbb
and
lret
jecxz
je
stos
xor
cmp
dec
adc
or
aad
andl
mov
fs
and
xor
inc
jmp
cs
mov
cmp
testl
test
mov
popf
cs
ljmp
push
xchg
std
pop
pop
xchg
faddl
push
pushf
imul
subb
sbb
fisubrl
ret
in
xchg
cwtl
xchg
mov
ror
or
test
daa
inc
les
in
mov
push
sbb
jge
mov
aad
cld
loopne
dec
movsb
xchg
aas
mov
push
in
or
sub
mov
daa
stc
fcoml
or
cmp
addb
add
jg
xchg
and
scas
mov
insl
xchg
cli
add
gs
mov
mov
lods
sub
dec
push
std
adc
ljmp
lea
outsl
out
xchg
testl
inc
jae
mov
jle
nop
fxam
lret
jne
cmp
inc
pop
out
mov
ror
pushf
push
inc
add
movl
mov
mov
fdivrs
sub
popf
mov
cmpsb
cmp
lret
mov
pop
and
out
addr16
inc
imul
mov
xchg
std
stos
movsb
xchg
mov
inc
jnp
mov
sbb
push
mov
mov
fstpl
adc
pop
aam
fmuls
mov
push
jne
rcr
or
fs
dec
ss
mov
call
cmp
loope
dec
sbb
push
inc
mov
cmp
pop
sub
mov
sti
cwtl
out
call
adc
roll
or
add
aas
outsl
mov
pop
aas
popf
cmp
or
scas
xor
je
dec
rolb
fisttps
push
ret
hlt
mov
mov
push
aad
outsl
jmp
inc
sbb
jne
or
ss
test
ljmp
or
int3
repnz
pop
imul
aaa
out
out
pop
enter
bound
add
bound
lds
lea
lret
push
cmp
adc
inc
shrw
sbb
push
sub
mov
sbb
push
gs
inc
test
mov
and
xchg
mov
add
std
mov
jge
push
xchg
jnp
popf
das
mov
cld
ss
testb
xor
ljmp
mov
in
dec
mov
mov
fdivr
push
add
mov
mov
sbb
into
movsl
mov
int
mov
cmpsl
xlat
add
fdivrl
sbb
xchg
test
cmpsb
jmp
scas
jbe
jnp
xchg
or
jp
dec
icebp
and
jo
ret
inc
outsb
xchg
cmc
hlt
lahf
xchg
sbb
jo
pop
cmp
ja
dec
je
mov
insb
sub
jg,pn
stos
xchg
pop
pop
bound
imul
cmpsb
xor
fnsave
mov
fdivs
scas
daa
clc
arpl
inc
lods
cmpl
int
mov
adc
sbbl
bnd
dec
mov
loope
cli
aad
jl
adc
pop
cmpsb
sub
pop
dec
sarb
cmp
and
pop
jg
push
pop
imul
jmp
enter
inc
jne
jne
stos
mov
popf
imul
je
addr16
divl
inc
pop
mov
daa
pushf
adc
cmp
popa
movsl
lods
mov
imul
movsl
loope
cltd
push
imul
jo
xchg
les
sub
jp
psadbw
cmp
mov
xlat
mov
xchg
dec
and
inc
xchg
mov
ja
testl
popf
inc
cmc
stos
mov
mov
lea
pop
sbb
push
or
popaw
sub
dec
adc
and
jg
fwait
lea
ret
mov
aas
sbb
rol
das
mov
test
stos
xchg
xor
sbb
adc
test
int3
mov
ret
mov
pop
shr
in
jo
adc
cltd
movsb
sbb
xchg
cmp
cmp
test
clc
clc
rcll
mov
aaa
outsb
dec
cmp
and
jmp
push
xor
gs
insb
aam
pop
push
test
repz
fbstp
jle
rorl
dec
add
test
mov
xor
rorl
popw
repnz
stos
push
addr16
push
out
movsb
loope
adc
mov
fildl
sub
insl
sbb
xchg
xor
lods
inc
pop
jb
pop
mov
ficomps
mov
push
cmp
es
xchg
mov
mov
insl
cmpsl
xchg
clc
imul
rcrb
or
jo
xchg
inc
cmp
push
lods
cmpsl
mov
sti
jmp
out
cmc
movsb
in
mov
in
aas
pop
xor
push
daa
int
into
cltd
rcrl
cmp
loopne
adc
and
fsubrs
or
add
cld
icebp
sbb
cwtl
add
les
mov
inc
mov
xlat
jmp
cmp
orb
cld
or
or
andl
jae
or
inc
aas
add
inc
mov
xor
lods
pop
mov
flds
roll
mov
mov
sahf
mov
outsb
les
repnz
push
sbb
push
xchg
adc
cmp
add
push
sub
stos
lret
jecxz
lret
pusha
fidivrs
aad
push
orl
and
into
inc
bswap
push
mov
loopne
hlt
cmp
std
fdivs
push
and
popf
ja
and
pop
cmp
mov
or
into
fstpl
sbb
cmc
cmp
push
repnz
cmp
inc
sahf
test
inc
int
jl
mov
and
xchg
mov
shll
out
or
add
sub
push
or
mov
iret
aaa
insb
and
gs
loop
mov
movl
or
pop
adcl
xor
xchg
dec
out
lea
inc
push
jg
icebp
test
or
int
std
cmp
jnp
push
dec
lds
ja
jecxz
inc
jmp
or
dec
arpl
idiv
pop
pop
shlb
cmp
sub
dec
jb
jle
lcall
dec
push
out
fwait
aaa
xchg
mov
aam
cmpsl
sarb
pushf
sub
sahf
pop
dec
out
add
rcll
cmpb
pop
ror
add
and
clc
mov
daa
inc
mov
imul
or
scas
pop
sti
cmpsl
pushl
lock
cs
outsl
or
adc
mov
push
xchg
dec
sub
inc
out
in
iret
flds
hlt
fsts
jno
xchg
mov
adc
adc
jae
xor
dec
lret
push
adc
mov
mov
lods
xchg
add
xchg
jp
in
lea
cmp
sbb
orb
inc
lock
out
xor
inc
dec
push
dec
jnp
jmp
pop
mov
ja
dec
mov
mov
mov
and
ds
xchg
or
and
xor
cltd
fstpt
out
nop
mov
mov
mov
mov
cltd
jnp
pop
dec
popa
cmp
in
inc
insb
xchg
cmp
hlt
add
scas
mov
push
test
xchg
cmpsl
cmpsb
daa
jecxz
xchg
and
test
es
inc
sub
in
mov
cmp
sarl
pop
lret
mov
add
imull
jl
fistps
ja
nop
aaa
add
sbb
lahf
xchg
out
xchg
ljmp
lahf
das
ja
xchg
jp
pop
out
scas
es
jno
sub
cld
dec
stc
ss
cltd
lods
jb
ret
sub
test
mov
jmp
cs
mov
push
xchg
cmpsb
es
es
push
clc
test
lret
sbb
mov
cmp
push
cmp
popf
ljmp
stos
mov
push
rclb
or
das
mov
lods
movsl
add
mov
adc
rcrb
in
mov
fisubl
addb
rcr
inc
popf
arpl
mov
das
ds
sbbb
arpl
pop
rcll
int
sbb
push
mov
add
stc
add
push
dec
fildll
dec
test
pusha
testl
pop
jnp
ret
mov
fucomi
jmp
and
rcpps
cwtl
jp
pop
push
sbb
rcll
rol
pushf
stos
in
jmp
addr16
jp
mov
sub
call
mov
fcmovnbe
lods
testb
cltd
xchg
in
lds
stc
jnp
nop
sbb
add
std
cwtl
int3
imul
mov
repz
add
lret
cmp
cmp
push
jb
jmp
dec
daa
push
mov
inc
jno
dec
dec
subb
lds
push
push
jle
mov
mov
outsl
das
sub
cld
popf
pop
int
jb
lock
inc
dec
xor
jle
test
nop
repz
cmp
jbe
pop
je
push
push
out
jbe
jne
pushf
sti
movsb
sbb
sbb
push
sbb
bound
push
lret
xchg
lret
push
sbb
mov
test
push
mov
aaa
enter
filds
xor
filds
nop
or
dec
dec
or
je
jle
data16
jmp
or
mov
mov
dec
and
inc
push
bound
pop
icebp
iret
or
or
add
outsl
sbb
push
arpl
subl
jecxz
rcrl
dec
sbb
je
mov
outsl
subb
cli
jbe
out
push
repnz
lea
js
mov
adc
cmpsb
popf
pop
or
sbb
pushf
orb
xor
push
mov
inc
popa
push
popa
lret
cmp
ficoml
cmpsb
outsb
lock
lock
cmp
sub
push
bound
mov
inc
xor
dec
es
insl
addr16
outsl
test
xlat
lods
repnz
repz
out
and
movsl
je
sub
xchg
mov
pushf
xchg
adc
dec
xor
test
or
insb
xor
sbbb
jb
daa
imul
adc
inc
xor
repnz
sbbl
aad
arpl
out
mov
mov
pop
or
dec
bound
mov
cmp
out
aaa
stos
sbb
test
loop
je
add
fs
out
or
loopne
jle
fldl
and
incl
push
add
jecxz
testl
and
cmp
xchg
es
rorb
xlat
jb
inc
out
lcall
sub
js
fisubs
pop
rorb
into
pop
jl
mov
sti
jp
push
sahf
cltd
push
sbb
stc
cmc
imul
out
xchg
sbb
xlat
jns
xlat
outsl
faddp
push
add
adc
sub
sbb
jmp
andb
mov
dec
xlat
jecxz
adc
push
sbb
push
outsl
inc
imul
jmp
insb
xchg
jp
movsl
les
insb
dec
or
mov
pop
xor
lahf
out
cwtl
lcall
test
xlat
call
les
cli
cmp
movsl
jb
test
xchg
in
jnp
pop
mov
loope
les
mov
insw
cmp
int3
jl
mov
xchg
inc
dec
mov
lahf
adc
add
sbb
sub
fdivrl
fildll
inc
mov
sbb
notl
mov
clc
fcoms
imul
fwait
rcrb
cmpl
movups
js
pop
scas
mov
mov
push
icebp
pushf
or
jne
sbb
inc
cmc
jne
mov
add
cltd
call
add
pop
fdivr
lcall
mov
loopne
test
out
je
loope
add
push
xrelease
mov
lret
pop
inc
push
mov
cmp
dec
inc
das
inc
inc
jbe
inc
xchg
jge
int
shl
mov
xchg
fs
xchg
sar
xchg
xor
sub
icebp
movsl
mov
add
notl
sbb
lea
sub
imul
pop
mov
mov
push
in
push
orb
and
ss
mov
or
ret
xor
cmp
push
cmpl
xor
lods
out
nop
loop
xchg
mov
imul
icebp
inc
adc
dec
cmp
jne
adc
inc
push
cmpsl
roll
add
shl
jmp
cmc
inc
lret
dec
das
idivb
outsb
cltd
pop
into
in
inc
stc
and
mov
mov
lea
push
imul
add
adc
or
inc
sub
mov
inc
test
jecxz
xor
dec
in
movsl
out
stc
xor
push
sub
xchg
xchg
loope
imul
xchg
repnz
or
jge
mov
xchg
inc
loop
movw
lahf
mov
std
aas
bound
dec
or
and
mov
adc
sbb
cmp
fistl
xchg
xchg
or
fisubrs
sarb
icebp
push
ljmp
jno
in
and
sahf
mov
sbb
cmp
pop
mov
pop
inc
lds
mov
fisubl
and
mov
jecxz
and
fprem
push
push
mov
or
daa
bnd
cld
dec
push
repnz
jnp
cmp
fsubrl
rcll
push
or
mov
jnp
ljmp
shr
movb
popf
dec
jl
sbb
arpl
mov
push
insb
lock
bound
cld
frstor
shll
sbb
mov
mov
shll
roll
adc
sbb
inc
lahf
ret
fistl
dec
les
fwait
push
rep
scas
or
inc
dec
sahf
sub
or
sbb
loopne
fisttps
test
xchg
cmp
in
sahf
xlat
add
outsl
xchg
loopne
pop
mov
mov
mov
mov
repnz
pop
in
inc
insb
fcomp
sti
push
cmc
pop
adc
push
std
outsl
fbld
mov
sub
dec
ret
xlat
je
pop
jnp,pn
cmp
orl
mov
iret
pop
sbb
aam
push
or
push
cwtl
test
mov
xchg
insl
shll
out
dec
mov
lcall
bound
pop
loop
ret
jo
jns
incb
push
mov
mov
and
push
sti
cmp
popf
cmpsl
test
daa
movsb
xor
movsb
cwtl
outsb
out
sbb
rcl
leave
xor
xor
rorb
push
pop
in
xchg
scas
adc
adcl
adc
sbb
je
std
cmp
call
pop
aad
and
fnstsw
js
nop
stos
lahf
mov
jle
jg
aam
negb
fnstenv
sub
or
mov
xor
sarl
mov
add
lret
es
or
imul
ljmp
jno
sarb
cld
lds
sub
or
add
or
pushf
test
pusha
and
rolb
jp
add
mov
lahf
out
inc
pop
xor
pop
pusha
adc
ljmp
ja
add
repnz
and
lods
or
call
test
scas
push
push
lcall
pop
lret
add
lods
xchg
push
ret
mov
mov
mov
test
jg
mov
int3
aas
mov
sti
mov
test
lahf
mov
sbb
cmpsb
xorl
outsb
jns
xor
xlat
fists
sbb
frstor
mov
shll
sbb
cld
rcl
sbb
sar
sbb
add
push
cli
inc
int
add
std
stos
fdivs
fnstsw
cmpsl
ljmp
stos
push
mov
knotb
add
icebp
shrb
testl
data16
or
jo
xchg
inc
mov
pop
fistps
bound
xor
mov
dec
sub
ret
sbb
cmp
cs
cld
jle
outsb
push
jl
sub
addr16
sbb
orb
and
neg
mov
lahf
jl
push
jg
jnp
push
iret
testb
dec
mov
and
sub
mov
ss
xor
aaa
sbb
data16
adcl
aaa
cltd
push
imul
dec
test
arpl
test
lahf
push
imul
call
sub
mov
lret
jle
call
pop
xor
ficompl
test
test
out
push
and
in
mov
and
je
imul
gs
adc
cmp
sbb
jae
dec
adc
stc
out
ss
and
fdivrs
mov
jbe
gs
repz
scas
andb
imul
jecxz
dec
divl
mov
jae
scas
jmp
dec
and
je
push
scas
sub
cmp
bsr
jmp
sti
cmp
out
incl
cmp
sbb
or
mov
notb
iret
add
mov
xlat
cmp
fadds
push
inc
mov
imul
mov
andb
pop
sahf
fnop
sbb
cmpsb
call
ljmp
ret
push
add
imul
sub
hlt
xor
mov
dec
jbe
and
flds
shrb
cld
out
and
sbb
int
fld
cs
adc
bound
movsl
es
mov
mov
adc
adc
sub
loopne
jge
adc
sahf
or
xor
mov
push
or
cltd
adc
jle
lret
cmc
or
push
pop
pop
mov
adc
imul
pushf
cld
add
xchg
lcall
push
gs
jo
push
inc
adc
inc
aam
adc
and
xchg
pop
inc
xchg
mov
or
ficomps
adc
sub
stos
mov
movsb
insl
mov
mov
mov
jb
push
sbb
push
into
mov
push
iret
and
int
cmp
cmc
fwait
sub
out
movsb
mov
pop
imul
notb
add
lcall
ret
imul
xor
mov
xchg
bound
xlat
loope
mov
inc
insb
pusha
ss
pop
push
sbb
dec
popa
cs
sbb
or
inc
jle
jnp
fdivl
mov
sub
xchg
movsl
push
xor
push
scas
rcrb
arpl
int
or
mov
and
aam
sbb
xchg
push
mov
pop
sbb
mov
sub
aam
xchg
add
xchg
aad
xor
ja
or
shlb
or
dec
out
mov
lods
lock
repnz
ss
push
sbb
test
mov
jno
jbe
sub
pusha
jle
mov
flds
sbb
imul
adc
out
test
sbb
lds
and
out
xor
pop
xchg
pusha
clc
xorl
add
popf
les
cmp
gs
subl
mov
les
or
test
popf
mov
xchg
jle
add
or
fcom
scas
sub
hlt
lret
aam
es
test
lock
cmp
jge
out
cli
loopne
inc
aaa
xor
sub
adc
shl
cs
lods
in
ds
pop
outsl
pop
push
ret
in
mov
lret
cmp
js
pop
xor
pop
or
dec
cli
dec
scas
fstpt
mov
sbb
and
push
decl
or
or
std
cmp
xchg
int3
jae
adc
lods
rol
or
add
pop
ret
dec
push
inc
in
adc
imulb
daa
int3
xor
mov
mov
rcll
cmp
inc
sahf
pop
and
data16
mov
and
xchg
mov
push
dec
outsb
loop
sarl
sbb
mov
pop
cld
and
and
movsl
loop
mov
xor
sbb
adc
mov
cmp
or
inc
es
test
xor
jb
and
cmp
jge
or
lock
hlt
push
cld
and
adc
enter
movsl
mov
inc
int3
inc
sbb
outsl
or
cmpsb
sub
sub
xchg
lcall
mov
dec
testb
xchg
sbb
adc
add
or
fistps
das
or
inc
imul
or
enter
cld
adc
sbb
test
pop
dec
dec
push
das
sub
mov
inc
and
or
icebp
lret
mov
jb
mov
inc
std
rorb
push
int
stc
scas
xor
mov
call
jp
jmp
leave
cltd
js
rolb
mov
xchg
push
int
mov
jl
or
enter
xor
jns
aad
imul
mov
push
pop
cld
out
and
adc
mov
in
insl
sbbl
mov
outsb
mov
cmp
mov
pop
leave
ss
mov
ret
cmp
iret
xor
fwait
ds
repz
sbb
fstp
pop
lock
mov
dec
cmpsb
push
xor
inc
lcall
sub
jge
push
lret
scas
sub
shlb
rcrl
das
lods
jae
jns
pop
jl
mov
test
dec
add
inc
repz
or
push
gs
icebp
adc
imul
xor
mov
ret
pop
mov
insl
clc
and
jecxz
repz
and
pop
mov
cmpsb
sbb
stc
mov
gs
xor
jnp
dec
inc
push
dec
nop
dec
aad
lahf
aaa
das
fsubrl
notl
fdivrs
sub
or
jle
test
cmp
shll
repz
stc
dec
sub
adc
or
sub
test
push
push
aas
daa
cmpsb
pusha
sub
test
movsb
cmp
out
mov
rol
dec
pop
xor
ret
mov
test
cli
scas
repnz
mov
xchg
push
je
mov
or
jns
imul
dec
stc
xchg
sbb
shr
and
adc
jb
in
xor
push
sub
test
sbb
mov
xchg
stc
hlt
jne
add
xchg
push
cltd
xor
inc
rcrb
mov
fsubrl
cmp
push
test
inc
adc
das
int
or
add
push
dec
add
es
les
pusha
add
stc
jns
nop
test
xchg
push
rclb
xchg
sbb
imul
aaa
mov
cmp
mov
sbb
pop
add
repz
add
xchg
lods
rcll
js
jmp
mov
push
add
pop
jb
inc
icebp
cmp
push
or
test
sahf
cli
cmp
cmp
shrb
mov
ret
jae
mov
pop
lds
and
lock
imul
mov
loope
jnp
test
xor
xor
mov
push
cmpb
sbb
out
imul
into
daa
iret
inc
out
jge
sub
imul
cmp
push
ljmp
in
mov
adc
jns
sub
sub
mov
jo
outsl
xor
sub
jno
mov
stc
idivl
jge
popf
call
push
push
stc
dec
push
mov
out
xchg
imul
addr16
and
mov
test
dec
or
cmpsb
scas
arpl
ljmp
pop
insl
ss
sbb
arpl
inc
cmp
mov
mov
lods
push
ficoms
adc
mov
xchg
insl
rclb
sub
hlt
inc
imul
push
xchg
and
mov
aad
testl
dec
xor
dec
sbbb
nop
or
shrb
pop
inc
jl
xchg
sahf
test
push
xchg
aaa
loope
out
sub
pop
push
daa
lret
popf
push
xchg
jmp
insb
mov
aad
cmp
dec
sahf
int3
jb
pop
fisubrl
nop
int
loop
xor
cmpsl
gs
jae
sbbb
shrl
movsl
lods
mov
icebp
lods
mov
negl
jle
shrb
mov
jl
or
adc
mov
nop
rcrb
and
out
insl
dec
ret
stos
sbb
lds
adc
aam
dec
ret
mov
test
shll
dec
pusha
test
pusha
insb
mov
aaa
mov
mov
loopne
clc
mov
xor
mov
sahf
or
aas
mov
push
hlt
mov
jnp
push
data16
sub
mov
or
mov
das
xor
cli
jbe
shlb
dec
sub
mov
out
lods
fs
fadds
push
call
cmpsb
sub
pop
pop
mov
dec
sbb
add
loope
xchg
sub
xor
pop
int3
aaa
mov
cmc
nop
xor
sahf
dec
inc
lcall
and
mov
dec
mov
dec
inc
dec
das
jnp
test
mov
inc
push
dec
int3
xor
gs
scas
out
and
adc
rorb
push
push
adc
nop
xlat
mov
popf
xlat
fildll
popa
dec
sbb
dec
push
adc
push
ljmp
in
pop
in
pop
and
xor
add
and
out
std
std
cmpsl
adc
je
mov
test
test
mov
fcoml
call
dec
pop
or
lds
adc
inc
testb
lret
jp
out
in
push
data16
fcompl
out
je
mov
sub
xchg
cmp
std
dec
inc
and
push
xchg
sub
outsb
push
push
loopne
sub
cmpl
subl
mov
push
int
push
pop
ljmp
push
mov
in
jl
jecxz
sbb
ret
mov
xchg
int
fcomps
mov
xchg
and
loop
mov
mov
push
jle
and
dec
jbe
repz
add
inc
cwtl
xchg
es
mov
pop
sbb
add
cwtl
fisubs
popf
clc
sub
mov
fsubs
push
adcl
sub
ljmp
mov
mov
popa
fstl
mov
and
add
pushf
lahf
push
addr16
xor
loope
int
test
bound
loop
loope
push
pop
and
sub
mov
cmp
push
fwait
psubusb
and
xchg
or
movsb
cmp
pusha
mov
repnz
into
mov
mov
arpl
jl
shl
fisubrl
mov
movsl
out
mov
jns
pushf
inc
add
xchg
xchg
mov
adc
pop
les
rcrl
pop
jge
icebp
sub
insb
sub
dec
cli
repnz
mov
rclb
ficomps
movsb
jmp
rcl
and
fisttps
sti
sbb
push
test
xchg
push
xor
cmp
fiadds
adc
dec
insl
mov
testl
aas
fisubl
ss
imul
adc
icebp
fsts
cmp
mov
popf
mov
xchg
imul
repnz
xchg
pop
push
in
test
push
clc
add
push
gs
dec
call
sub
and
jnp
in
icebp
mov
mov
sbbb
movsl
push
xchg
xchg
dec
push
ret
fstps
fldcw
in
mov
push
lcall
jo
mov
sarb
xor
jne
and
aad
jae
gs
test
scas
ja
dec
jo
dec
lods
cmp
push
testl
push
in
sahf
lods
push
mov
call
jb
push
pushf
push
jge
push
sarl
adc
mov
adcb
arpl
pop
mov
jecxz
adcl
xor
mov
aad
push
jno
nop
xorl
testb
inc
jnp
js
pushf
fstpt
inc
push
shrl
mov
std
push
sbb
ljmp
and
daa
mov
xchg
xor
push
sbb
ret
sbb
outsb
jnp
scas
push
jno
add
fwait
inc
call
jbe
and
mov
or
mov
cs
repnz
repz
pop
int3
push
fbstp
mov
mov
stos
sti
cltd
mov
int
pop
fsubl
mov
adc
dec
in
fwait
mov
hlt
cmc
gs
orb
push
xchg
dec
pop
add
or
cmp
xlat
dec
jle
out
or
popa
sub
ja
mov
jns
add
repz
xchg
mov
lea
scas
pop
push
and
mov
pop
test
inc
je
mov
mov
in
mov
or
dec
xorl
pop
stc
clc
lahf
in
pop
sbb
ret
in
sarb
pop
cltd
cld
pushl
push
shlb
dec
dec
adc
mov
subb
mul
or
aam
jge
aam
in
outsl
ds
hlt
dec
pop
xchg
and
or
test
enter
xor
dec
add
movsl
jo
clc
adc
xchg
add
mov
dec
xchg
stc
shrb
mov
das
insl
int
aas
dec
loop
imul
or
js
sbb
out
jo,pn
hlt
rcrl
pop
ja
add
jae
out
jecxz
mov
lahf
push
icebp
jg
rclb
mov
adc
mov
cmp
loope
cmpl
jmp
cs
push
adc
jp
in
insl
jbe
lods
xorl
or
cmpl
mov
xlat
xor
movsb
lods
rol
xor
push
pop
add
pop
xor
add
xor
cwtl
and
ja
mov
push
setp
sub
shl
mov
mov
cmp
adc
push
jle
or
or
mov
shlb
scas
pop
jae
js
bound
out
cs
mov
mov
dec
add
mov
out
push
push
pop
call
mov
mov
iret
data16
scas
aaa
sub
jbe
mov
jl
je
lock
sbb
insl
repz
test
inc
mov
pop
push
or
adc
lods
jle
call
adc
dec
cwtl
or
inc
ljmp
cmc
xchg
mov
push
mov
imul
enter
push
lock
pop
inc
shl
and
mov
mov
lods
pop
sub
cmp
insl
cmp
xor
mov
jnp
jge
jle
fldl2t
daa
dec
and
fimuls
out
adc
outsl
mov
jbe
cmp
adc
or
sarb
popa
sbb
fs
jnp
push
test
ljmp
cs
sar
fcoms
fisttpll
jno
mov
sbb
ja
jmp
xchg
mov
je
lods
pusha
outsb
pop
out
sbb
aam
push
add
fiaddl
and
xlat
cmp
std
ljmp
pushf
and
mov
xchg
aad
and
jnp
in
push
jge
cmp
cmpsb
int
lock
mov
mov
stc
cmpsb
cmp
test
lret
or
jo
dec
or
std
push
jmp
call
imul
int3
popa
mov
cli
push
dec
pusha
ljmp
xchg
cltd
add
andl
dec
icebp
mov
xchg
mov
xor
push
ret
dec
insb
cs
data16
scas
pop
daa
mov
jb
xchg
call
push
mov
sti
jp
and
and
dec
jb
mov
addl
and
fisubrs
ret
mov
fmuls
xchg
pusha
xchg
in
cmp
jl
pushf
in
ret
mov
jne
mov
adc
mov
inc
push
repnz
inc
mov
adcl
add
push
jo
test
pop
ror
push
in
mov
mov
sbb
test
jecxz
mov
adc
push
addr16
sti
shl
mov
int3
out
insl
xchg
mov
call
test
mov
call
movups
bound
mov
dec
mov
fnstsw
xchg
in
leave
xlat
dec
or
sub
outsl
adc
bound
or
gs
divb
es
popa
cmc
into
sbb
jmp
sub
inc
popf
fwait
in
mov
sbb
pop
fimull
jmp
mov
mov
int
mov
sub
test
jg
clc
std
bound
fbstp
pop
addr16
lcall
aad
mov
mov
ss
and
scas
nop
jb
mov
loopne
or
sarl
in
or
loope
outsl
clc
sbb
stos
popa
inc
xor
xor
sub
or
loopne
or
push
daa
aaa
popf
pushf
cmp
xchg
mov
addr16
out
fmull
or
sbb
inc
rorb
and
dec
enter
jge
mov
rclb
push
popf
push
scas
inc
jmp
mov
pop
pop
push
pop
pop
bound
les
out
fmull
sar
adc
add
adc
std
lods
mov
rorl
or
pop
add
and
dec
lods
cmpsb
in
or
pop
cmpl
aad
pusha
xor
gs
push
fsubrl
pop
scas
jb
jge
test
sbb
test
mov
push
mov
jmp
insb
xor
add
jo
iret
cltd
cltd
cwtl
out
imul
rorb
cmpsl
into
pushf
test
jo
push
pop
mov
pop
fdiv
stc
jo
dec
mov
xchg
shr
pop
cmp
xchg
roll
sub
cmp
popf
mov
testb
dec
sbb
mov
push
paddb
mov
mov
inc
stc
pop
call
adc
lcall
xor
std
mov
cwtl
in
mov
push
cltd
repz
out
jnp
movsb
sub
adc
fidivrl
test
jns
sub
jnp
stos
cmp
into
cmp
xchg
cmc
xor
sub
add
mov
insl
mov
mov
adc
sbb
jp
mov
loop
repnz
jae
js
jmp
lea
and
sahf
cmpsl
fnstcw
fidivs
mov
shrl
mov
notl
push
inc
data16
int3
mov
out
jle
pop
pop
mov
push
imull
jbe
push
mov
cmp
inc
dec
repz
sbb
xor
dec
je
pop
ror
cmp
and
repz
icebp
or
cli
cltd
cwtl
cld
and
pop
mov
roll
mov
and
stos
push
dec
divl
cmp
sub
mov
rorb
xor
out
xorl
jo
push
ss
adc
aam
test
stos
repz
mov
mov
ret
and
xchg
movsl
mov
ss
ljmp
fbstp
xor
jmp
xchg
adc
inc
orl
jno
push
xor
pop
jno
cmpsl
pop
aam
clc
ret
fwait
jne
mov
outsb
aaa
inc
sub
jp
movq
les
int3
mov
add
push
inc
out
je
jae
stos
movb
je
test
xchg
or
sub
gs
xchg
out
fstl
gs
data16
sbb
enter
ljmp
pop
lret
and
xor
cmpsl
jne
adc
inc
lret
movsl
lea
jae
fstl
jnp
jne
push
jecxz
shl
popf
cmp
and
das
dec
popa
mov
or
or
or
pop
add
mov
add
push
dec
out
mov
xchg
ffreep
sbb
adcb
sbb
jg
mov
aas
andnps
mov
fsubs
test
jp
aas
cmp
iret
into
xor
std
sbb
adc
outsl
ljmp
daa
leave
cltd
xor
fs
mov
lcall
xor
xchg
nop
mov
aam
inc
sar
aad
xchg
cmp
pushf
mov
add
fldt
decl
data16
sbb
insb
cmpsl
xchg
pop
jp
inc
sbb
fadd
inc
mov
add
cmp
jne
fadds
sbbl
lock
shl
cltd
fdivs
sahf
cli
mov
jg
and
fucomip
jge
add
arpl
jo
inc
sub
pop
sub
data16
in
or
inc
and
jno
adc
pop
add
xor
fildll
jmp
xor
mov
fwait
add
cmp
or
cmpl
pop
adc
inc
loopne
xor
lret
shlb
push
fwait
push
cld
in
mov
pop
push
cmc
or
add
mov
lods
arpl
mov
xchg
xchg
cli
xchg
xlat
xchg
cmpsl
xlat
data16
aam
push
dec
mov
stos
icebp
imul
outsb
mov
mov
dec
std
rol
push
inc
daa
in
icebp
mov
iret
loope
js
mov
addr16
mov
outsl
ret
jo
inc
jecxz
or
lds
pusha
out
gs
adc
pop
cld
and
movsl
or
xchg
push
mov
lret
adc
mov
and
cmp
or
cli
loopne
mulb
int3
icebp
ss
add
pop
mov
lock
pop
iret
int
aad
test
push
push
insl
test
push
std
and
sahf
jb
dec
push
sbb
dec
mov
and
aad
jno
ret
lds
in
pop
jne
xchg
insb
cli
int
inc
cltd
cltd
lea
ret
jo
ljmp
bound
lds
out
hlt
int3
push
jl
nop
add
dec
mov
lret
das
dec
cs
shll
daa
outsb
jle
imulb
push
xchg
jg
xchg
and
std
pop
faddp
xorps
pushf
sbb
inc
xlat
push
call
imul
aaa
mov
mov
movb
add
adc
and
addb
cmp
dec
xchg
ds
je
dec
movsb
test
adc
imul
vphsubbw
fisubrl
cld
aam
sahf
stc
loopne
sbb
inc
imul
dec
test
sub
inc
pop
imul
shlb
push
or
inc
scas
scas
xor
call
mov
push
mov
adc
ficompl
icebp
mov
adc
mov
sbb
rorl
jae
imul
xor
push
fcmovb
es
neg
mov
and
repnz
cmp
xchg
sub
push
xchg
aam
rolb
lds
adc
lret
xchg
jmp
inc
adc
xchg
jo
cmp
inc
repz
test
xor
dec
daa
int
inc
into
inc
stos
mov
es
scas
and
xchg
rcrb
test
push
push
jno
and
outsb
cmp
pushf
rcr
pop
nop
pop
loop
sbb
jns
add
repnz
mov
add
test
or
pop
test
iret
jnp
sub
sbb
movsl
dec
sbb
ret
lret
mov
es
pop
pop
adc
xor
fidivrs
or
or
fwait
sti
jne
push
scas
inc
jno
in
inc
mov
mov
fldcw
push
in
mov
xor
adc
out
pop
adc
sbb
out
stc
hlt
push
rolb
shl
inc
cmpsb
jbe
pop
orl
mov
and
lea
sub
xchg
push
icebp
cld
ror
cld
push
imul
sarl
xor
xchg
inc
imul
inc
lret
insl
mov
adc
push
adc
sti
pop
mov
outsb
jl
lock
mov
push
mov
stc
mov
mov
loop
xchg
sarb
into
clc
pop
int
pop
dec
notb
dec
xor
mov
arpl
inc
inc
xchg
shrb
xor
outsl
loopne
cltd
xchg
and
jbe
dec
ucomiss
out
fidivl
jmp
jbe
cli
adc
push
pop
mov
xor
ljmp
sbb
iret
and
adc
and
xor
je
out
push
sub
mov
int
int3
push
sbb
mov
sahf
hlt
les
jg
add
dec
daa
out
loop
pushf
cwtl
jne
je
cmp
add
push
push
cmp
sbb
adc
gs
mov
and
mov
push
faddp
inc
jno
lret
int3
out
xchg
xchg
pop
shlb
fstpl
popf
push
rcll
dec
pop
orl
pop
jns
pop
mov
pop
mov
push
lea
lods
iret
mov
and
out
or
push
mulb
leave
push
int
sbb
pop
pop
int3
push
addl
inc
push
int
pop
cmp
inc
jle
aaa
and
jb
cmpsl
testl
loopne
pop
movsl
inc
xlat
rcll
xchg
adc
lock
lahf
mov
rcll
mov
stc
mov
pop
push
test
clc
add
mov
pop
int
aad
jge
mov
cmp
pop
dec
mov
adcb
adc
fs
jge
je
xchg
mov
ficompl
enter
xor
lahf
cmc
jo
mov
rorl
in
gs
cld
std
mov
push
aaa
inc
mov
addr16
jle
pop
xchg
aaa
sub
fildl
and
xchg
push
cmc
push
dec
test
mov
andl
adc
std
std
cld
scas
incl
xor
rclb
cmp
int
fcoms
push
cmp
or
xor
gs
out
xchg
and
testl
aad
js
sub
jbe
arpl
test
add
aas
xor
sub
mov
xchg
das
cs
mov
sbb
shlb
fildl
cmp
nop
or
int3
xlat
les
sbb
loop
insl
addr16
pop
xor
cmpb
cmpsb
ret
lods
mov
jp
pop
mov
bound
movsb
in
call
dec
mov
stos
imul
cmpsl
cmp
js
jbe
dec
push
shr
xchg
jle
sub
jmp
xchg
sti
fisttps
or
adc
stos
icebp
ss
mov
adc
cmp
ljmp
in
push
ds
in
sbb
mov
mov
sub
daa
adcl
cwtl
adc
add
fldenv
dec
fnstcw
xor
icebp
and
xor
rcl
lods
shll
mov
divl
repnz
or
mov
xor
pop
ret
addr16
fistps
pop
mov
aaa
or
push
in
repnz
aam
and
imul
fstpl
cld
inc
jge
lock
push
jns
inc
adc
push
jo
xchg
enter
dec
lds
in
adc
sub
icebp
mov
fcmovnu
pusha
xchg
xlat
test
jge
dec
call
adc
mov
push
stc
inc
mov
in
imul
and
inc
xchg
pushf
shll
mov
cmpsb
jg
std
jg
jbe
push
shrb
aam
xchg
fwait
inc
cwtl
ror
push
and
test
mov
mov
int3
shrb
adc
add
or
stos
pusha
push
fisubl
rorl
xchg
xlat
xor
stc
icebp
xchg
scas
jmp
addr16
into
mov
roll
mov
xor
inc
push
mov
data16
push
outsb
jne
jg
pop
das
in
adc
loopne
mov
repz
sbb
sub
shrl
and
aam
mov
sbb
adc
push
shll
notl
aas
test
jecxz
lods
and
scas
and
movntps
cmpb
xchg
push
pmaddwd
mov
xchg
aaa
jmp
mov
pop
idivb
fists
or
sahf
aas
mov
out
daa
add
nop
call
adc
push
cs
mov
lods
imul
xor
pop
shlb
mov
ret
lea
mov
push
imul
jmp
scas
jne
inc
lea
fdivr
cmp
push
sbb
ret
adc
js
aaa
imul
andb
mov
cmpsl
xor
pushf
or
cmovs
int3
pop
jmp
cmc
mov
dec
dec
push
std
dec
add
mov
push
out
gs
jg
lods
jl
pop
xor
dec
mov
jmp
inc
test
sub
dec
ret
jnp
adc
aad
mov
fimull
mov
repz
cld
dec
add
sub
xlat
mov
cmp
jecxz
fwait
sbb
filds
int3
or
push
insl
jnp
xchg
pop
ss
movsl
mov
lea
dec
dec
sbb
or
push
loopne
nopl
das
les
cwtl
test
xor
inc
jno
gs
nop
mov
xchg
outsb
xchg
xchg
mov
xlat
imul
icebp
cmc
xor
mov
cmpsl
movsl
neg
dec
mov
mov
aam
popf
push
add
movsl
rcll
pop
insb
pop
fnsave
cld
sub
push
cwtl
and
xor
push
lret
sub
xor
or
sub
enter
mov
cmpsl
lcall
sub
outsb
pop
mov
mov
gs
mov
ficompl
js
sub
xor
dec
push
xor
pop
sbb
fstpt
mov
rorl
mov
cltd
bound
cmp
cltd
push
lret
repnz
inc
insl
inc
xchg
and
mov
arpl
xchg
xor
rcll
aam
pop
cmp
aam
ret
jp
dec
sbb
test
dec
call
sub
loop
adc
adcb
in
int
jno
cltd
inc
dec
sbb
leave
out
stos
mov
dec
xor
gs
ficomps
jmp
das
dec
comiss
sub
fists
inc
ud0
arpl
push
imul
push
mov
sub
daa
mov
mov
out
mov
push
push
mov
cwtl
int
loopne
mov
andl
mov
arpl
pop
push
les
add
or
pop
xor
dec
ja
lret
and
push
inc
xchg
mov
call
repz
and
push
rcll
mov
adc
hlt
adc
push
imul
rol
pop
test
and
sbb
jecxz
jmp
add
int3
ss
adc
lods
fs
mov
inc
push
addr16
dec
test
xor
mov
jecxz
stc
shll
js
in
push
xor
push
jle
pop
test
mov
mov
sub
xor
adc
jno
mov
das
rcll
lock
notl
aad
shlb
pop
xor
mov
lods
and
fs
and
mov
insl
sbb
mov
out
mov
mov
call
push
adc
clc
cmp
test
cli
jnp
dec
xchg
sub
shlb
aas
xor
pop
data16
pop
jno
std
pop
jo
sbb
clc
lods
rclb
subb
outsl
mov
fildll
mov
sub
sub
sti
push
inc
push
and
push
adc
test
adc
xor
xchg
jg
add
lea
sub
mov
insb
mov
pop
lcall
xor
mov
into
in
pop
cs
fs
das
out
or
cmc
into
in
jl
sub
sub
lods
adc
lods
scas
hlt
pop
sub
mov
cwtl
add
sti
mov
and
enter
movsl
mov
jg
movsb
push
push
mov
dec
fdecstp
fildll
orb
bound
sbb
in
insb
inc
stos
mov
jge
repz
cmp
ljmp
jo
inc
or
add
sti
sbb
cmp
mov
sub
push
sub
jg
push
lock
and
ja
xchg
pop
pop
cmp
push
xchg
or
pusha
jmp
test
pop
cmp
pop
or
gs
fistpl
sahf
movsb
sbb
fisttpl
push
adc
out
push
mov
mov
pop
lods
inc
mov
or
lock
dec
mov
and
outsb
mov
enter
lods
sub
bound
jbe
out
int3
imul
loop
clc
sar
adc
rorl
mov
xchg
ja
out
dec
sahf
subb
jp
adc
inc
mov
add
dec
add
and
dec
mulb
ss
adcb
mov
pop
pop
iret
inc
and
xchg
mov
sbb
ljmp
cmpsl
hlt
push
mov
bound
jns
push
adc
jb
sbb
cmc
sbbl
inc
xchg
adc
cmpb
add
jmp
inc
jo
xchg
daa
and
lea
pushf
in
push
mov
in
inc
jno
outsb
pop
mov
adc
ds
js
clc
jb
fs
call
in
add
inc
ret
or
imul
popf
sub
lahf
xor
push
es
xchg
lods
add
mov
ret
call
sub
push
xchg
iret
pop
pop
jbe
xor
scas
xchg
pop
xor
mov
or
mov
or
inc
add
pop
scas
sbb
mov
data16
push
test
push
jp
and
clc
stos
cmpsb
into
outsl
mov
hlt
inc
sbb
icebp
push
lahf
mov
pop
xorb
add
out
rclb
jno
std
movsl
mov
out
iret
outsb
pop
cld
call
sub
mov
test
pop
xchg
push
fistl
sub
fsubrl
jge
je
rcll
rorb
jb
xor
xor
out
in
pop
mov
mov
test
xor
adc
xor
cmp
sbb
add
ljmp
inc
icebp
sbbl
shll
mov
pop
mov
jae
clc
loop
and
inc
sbb
sub
push
fadds
mov
jmp
jmp
push
and
jns
pop
inc
cmp
adc
mov
mov
imul
cmc
lahf
cmp
jp
shll
clc
lods
xor
cmp
sbb
fcoms
in
test
out
imul
jno
pop
or
fldlg2
sub
in
hlt
push
fdivl
rcll
mov
inc
xor
out
xor
add
xor
add
jp
idiv
into
ss
nop
mov
ss
icebp
dec
mov
in
xchg
imul
gs
mov
movsb
aad
testb
test
adc
sub
push
adc
sub
mov
stos
jnp
cmp
aam
xor
add
jns
loope
dec
pushf
fs
adc
sbbb
sub
pushf
jbe
call
jg
push
adc
and
insb
std
lock
mov
xchg
or
mov
sub
sub
leave
pusha
inc
mov
sub
add
cmp
dec
cmpsl
pop
lods
lret
ds
inc
sub
test
fdivrl
rol
sub
xchg
loop
lea
fisubl
mov
mov
jg
push
in
jo
cmp
stos
push
ljmp
fcmovne
xchg
and
or
ret
popf
xor
clc
out
divps
arpl
std
or
pop
mul
js
xor
dec
lds
leave
je
ss
jecxz
push
fidivs
call
pop
cltd
into
adc
hlt
ss
sbb
jns
push
ficompl
fistl
add
mov
enter
xor
push
mov
add
sub
jp
xlat
dec
sti
pop
test
out
test
adc
aad
push
loop
sbb
imul
ss
lods
mov
ret
dec
push
insb
sub
repz
out
push
fstpl
js
dec
xor
rclb
jnp
xchg
ffreep
dec
into
xor
aam
bound
mov
pusha
sti
and
xchg
mov
add
mov
ljmp
xor
cmp
inc
or
push
out
mov
sub
or
mov
andb
push
pushf
idivl
adc
pop
cmpsb
sbb
jle
js
xchg
xchg
lock
mov
out
ror
nop
stc
inc
dec
push
ret
mov
pop
mov
out
push
lret
addb
push
and
cwtl
fwait
sbb
add
ds
xchg
mov
sti
mov
jle
cmp
movsl
or
lahf
cmp
cmp
pusha
pop
insb
jno
adc
mov
fadds
into
pop
arpl
mov
aas
jecxz
xchg
ss
cmpsl
jo
pop
mov
adc
push
loope
in
xchg
dec
in
xchg
pop
fbstp
repz
icebp
cmp
std
add
test
hlt
xchg
adc
and
lcall
adc
cs
push
dec
pushf
stc
fldl2t
dec
push
or
push
ret
jmp
inc
mov
pop
push
mov
stc
mov
orl
shrb
xchg
out
test
ret
xorb
mov
pop
sbb
jle
add
add
cmp
cmp
xlat
xor
jecxz
sbb
lods
div
ljmp
out
mov
jl,pn
inc
mov
lods
cwtl
scas
jp
iret
adc
fucom
ret
out
mov
in
xchg
and
rolb
ljmp
add
jae
push
push
jns
jle
rcrl
shl
push
pop
push
mov
das
cmp
cli
sbb
leave
cmp
push
dec
push
ds
test
push
push
sub
mov
rcll
inc
jp
js
push
in
arpl
mov
hlt
shrb
push
xchg
jne
out
add
outsb
cmp
cmp
or
pop
push
ret
cmp
pusha
loop
cmp
mov
out
movsl
movsl
mov
dec
mov
sub
aad
adc
inc
pushf
loope
or
xchg
js
sbb
lock
inc
arpl
adc
push
gs
repz
fisubrl
inc
dec
mov
cwtl
xchg
loope
push
xchg
mov
jbe
popf
add
nop
rcrb
ret
dec
stc
fsubl
imul
mov
popa
sbb
jns
jbe
test
or
test
or
or
gs
sti
push
aas
daa
mov
xor
ljmp
pop
inc
fbstp
xor
inc
jmp
or
inc
push
shrl
jbe
cmp
mov
int
rcrb
lcall
mov
nop
add
and
pop
and
lcall
dec
out
mov
iret
pop
aad
pusha
mov
fnstenv
aad
mov
mov
loopne
mov
jno
cmc
or
jmp
or
jmp
inc
aas
mov
mov
daa
ss
out
loope
rclb
adc
sub
mov
cmp
cld
sub
in
iret
das
lret
out
fs
mov
gs
add
mov
add
adc
lahf
sub
or
and
push
mov
push
out
movsb
movsl
insb
adc
sbb
shll
es
pmaxsw
in
pop
fistl
xlat
out
arpl
cmpsl
sbb
arpl
ss
push
shll
insb
sbb
nop
fisttpl
lcall
negb
fiaddl
jle
bound
in
ret
mov
fistl
cmp
test
loopne
dec
adc
lods
and
outsl
push
sub
xchg
repz
push
mov
hlt
lret
and
add
movsl
lret
sub
jge
xchg
pop
adc
inc
scas
shr
das
data16
scas
xor
je
scas
mov
jl
imul
insl
daa
jecxz
add
or
mov
jns
and
push
out
lahf
mov
ds
or
jp
adc
or
and
xlat
and
test
stc
inc
dec
sub
and
inc
pop
loopne
push
and
cmp
jo
mov
pop
int3
adc
sub
pop
push
icebp
jae
push
cltd
shlb
aam
xchg
cmp
pop
mov
adc
jp
push
sarl
mov
sarl
sbb
fiaddl
add
and
jl
ja
push
movsl
pop
orb
push
ss
mov
mov
mov
movsl
sbb
movsb
xchg
mov
jbe
daa
rcll
sub
mov
stos
jp
jle
int3
dec
add
sti
mov
mov
ss
testb
fwait
push
ret
mov
int3
dec
xor
rorb
jmp
inc
cld
adc
movsb
clc
cwtl
into
cmp
push
jo
mov
arpl
aaa
cmp
lret
mov
fisttpll
aam
push
out
aam
outsb
int3
in
faddl
into
rcrl
mov
jo
mov
aad
pop
pop
aaa
add
lock
mov
jb
mov
inc
or
loop
test
stc
jp
mov
xor
sbb
push
mov
outsb
scas
imul
lock
fiadds
test
mov
decb
in
mov
mov
xor
rolb
iret
mov
cmp
imul
jmp
mov
lods
movsb
dec
sbb
xor
add
int
mov
and
out
jae
pop
mov
sub
fnstsw
sub
call
mov
dec
mov
scas
push
cmpsl
inc
int
jecxz
stc
out
jbe
jmp
or
movl
mov
clc
pusha
test
lret
dec
lock
xchg
cli
adc
mov
sbb
xchg
iret
test
xchg
subl
cmp
jnp
rcrl
cmpsb
xchg
pop
pop
hlt
cmp
or
jle
or
add
xchg
mov
cwtl
xor
nop
lock
jmp
ljmp
leave
push
outsl
push
pop
scas
repnz
xchg
mov
bound
add
sahf
mov
mov
fsubs
inc
mov
xchg
movsb
leave
pop
icebp
int3
xchg
ret
dec
sub
cltd
add
xchg
subl
dec
add
xor
mov
pushf
cmpsl
fs
pop
test
adc
inc
popa
pop
fsub
mov
dec
sbb
sbb
imul
movb
leave
xor
jge
popa
aad
out
fsubs
cmp
test
fs
push
jg
insb
mov
jbe
push
add
mov
shrl
cmpsl
ret
xlat
ffree
dec
nop
dec
sbb
aad
or
iret
add
js
sub
out
decl
inc
sbb
push
inc
loopne
adc
sub
mov
sti
out
popa
cmc
sub
shrb
cmp
inc
sbb
inc
push
jle
dec
lods
cmpsl
data16
adc
adc
dec
dec
jnp
mov
test
sub
or
sbb
xchg
mov
adc
xchg
mov
orb
test
sarl
cltd
or
inc
xlat
jb
mov
insl
dec
add
sub
cmc
cmp
mov
xchg
mov
pop
clc
fnstenv
dec
roll
ret
mov
push
add
xchg
inc
nop
mov
jo
mov
sti
mov
mov
insl
imul
out
loopne
nop
push
dec
mov
gs
imul
pop
lods
push
ljmp
mov
test
int
jl
cmc
div
cmp
mov
inc
fsub
and
int
jno
and
orl
ss
sbb
cli
fildl
adc
outsb
icebp
add
rol
cld
pop
scas
sub
out
mov
rcrl
add
pop
jp
aas
cmp
jl
clc
or
pop
int3
xchg
in
gs
ss
rcll
fldt
movsl
loope
xor
pop
mov
mov
or
mov
lea
jg
scas
stos
loope
not
adc
inc
adc
inc
pop
daa
mov
data16
adc
dec
stc
sub
pop
sub
cmpb
lock
jle
and
xchg
testl
xor
cmpsb
loope
je
iret
loope
std
call
stos
sub
push
repnz
imul
pop
pop
adc
pusha
push
addb
mov
mov
out
dec
in
xchg
int3
in
sbb
inc
jo
cmpl
mov
mov
in
daa
mov
fldenv
and
pop
push
pop
adc
mov
cmpsb
jecxz
lods
or
out
xchg
push
mov
notb
cmp
push
adcl
call
daa
mov
dec
les
mov
popf
int3
sub
jbe
mov
or
mov
arpl
adc
dec
aam
shlb
add
out
and
inc
dec
in
rclb
aam
sahf
int3
fisttpll
cmc
cmc
iret
int3
hlt
movsb
in
aas
xor
xadd
xchg
les
inc
push
jle
movsl
je
xor
xchg
mov
mov
lret
movsb
xor
adc
push
jg
jo
clc
ret
data16
cmp
mov
fistpl
fbld
test
imul
imulb
aam
fistpll
push
push
push
movsb
pop
test
adc
xchg
inc
movsl
mov
into
cmpsb
or
scas
xor
sub
and
cld
push
movsb
mov
mov
es
sub
cmpsb
je
lcall
es
push
test
mov
push
aad
loope
js
scas
jae
gs
nop
and
mov
mov
xor
inc
add
outsl
loop
xchg
repnz
pop
fdivrl
inc
nop
cmp
ja
addl
add
sbb
arpl
xor
fucomi
xor
push
cmc
add
pop
push
mov
or
cli
cmp
insl
sub
stos
xchg
into
mov
mov
fisttpl
mov
add
sub
xor
jbe
xchg
jne
pop
stc
stos
and
push
nop
addw
pop
call
movsb
popa
mov
frstpm(287
scas
lods
and
cmp
lods
inc
hlt
aam
mov
sarb
test
sub
push
cli
in
push
push
or
sar
and
pop
repz
ds
and
xchg
outsb
into
fistl
sbb
or
xchg
sbb
add
cmp
test
out
lds
out
adc
pop
jl
adc
adc
popa
lea
movsl
insl
stos
repz
cmc
mov
pop
leave
out
das
out
sub
inc
icebp
pop
mov
dec
in
addr16
fiadds
orl
inc
sbb
inc
mov
dec
adc
dec
push
lds
pop
push
pop
mov
int
int
xchg
mov
imul
hlt
jo
int
repnz
test
sbb
xor
xchg
mov
xor
enter
arpl
cmp
lret
data16
pop
outsl
aad
shr
stos
loopne
repz
mov
sub
sub
cmp
cmpl
aas
sbb
lahf
lret
sub
scas
cmp
dec
pop
testb
les
leave
das
sub
je
pop
addr16
adc
or
push
or
adc
das
popa
popf
cmp
pop
les
icebp
cmp
push
rcl
repnz
call
pop
or
fisubl
in
cwtl
inc
bound
out
sbb
fwait
daa
les
pop
push
outsl
out
jo
xor
xchg
adc
and
xchg
stos
or
push
jp
xchg
int3
cmpsb
pop
cwtl
repnz
and
ret
mov
into
data16
negb
and
lcall
sti
jg
outsl
nopl
cmp
push
push
jmp
xchg
dec
mov
inc
icebp
lods
psubusb
sub
pop
and
sub
imul
dec
push
lret
sahf
inc
ss
mov
pop
insl
add
ficoms
and
repz
push
add
mov
xor
bound
and
sti
fidivrs
cmp
loop
pop
pop
or
sahf
or
scas
fiaddl
jb
dec
out
xchg
stos
sbb
sub
dec
popf
outsb
mov
sub
dec
jo
adc
ret
add
jle
aas
cltd
je
jecxz
hlt
push
adc
gs
leave
test
cmc
fisttps
mov
stc
les
cltd
mov
xor
scas
xor
pop
lret
and
stos
jge
dec
imul
aam
rolb
adc
cmpsl
jbe
xchg
dec
cmp
xchg
lahf
subl
repnz
jnp
xchg
fwait
xor
jns
lods
cmp
shlb
inc
loope
push
fisubrl
mov
jg
lcall
aam
hlt
mov
push
movsb
adc
jb
into
imul
pop
pop
shlb
adc
adc
pop
adc
fcom
outsl
mov
add
out
sbb
mov
add
ret
popa
daa
push
mov
ds
addr16
xchg
push
or
push
repnz
movsl
inc
fdivrl
int3
xchg
inc
xor
ret
std
lcall
xchg
sub
add
jne
fs
arpl
pop
fwait
jne
add
stc
add
dec
addb
repz
and
in
mov
loope
or
fldt
add
lahf
loopne
ret
push
jbe
mov
push
jge
dec
call
mov
adc
scas
insl
xchg
in
imul
andb
mov
and
mov
sub
xchg
push
je
es
aas
stc
and
push
and
out
icebp
test
mov
les
incb
jge
pop
aas
cmpl
push
push
add
data16
dec
xchg
roll
insl
and
sti
dec
lret
dec
mov
jp
cmp
ds
cmp
jmp
dec
mov
fcmovnb
jecxz
notb
out
cmp
mov
orb
insl
mov
dec
fisubrl
jbe
stos
bound
js
inc
inc
mov
gs
sbb
mov
je
inc
push
aam
aas
loopne
jnp
fs
cmp
jnp
cmp
push
adc
xchg
cmp
adc
loop
pop
inc
dec
add
lock
xor
or
push
mov
push
hlt
repz
out
imul
idivl
clc
xor
or
jne
mov
add
aam
ds
movsb
test
mov
mov
mov
inc
scas
sbb
ljmp
in
push
jmp
movl
dec
fstps
xchg
mov
inc
cmp
arpl
icebp
jmp
loope
pop
cmpsl
shl
push
adc
mov
sahf
mov
leave
insl
aad
mov
adcl
push
addr16
push
outsb
cwtl
jl
jg
mov
jp
mov
mov
push
shlb
aaa
imul
push
stos
adc
mov
pop
sahf
cwtl
gs
xchg
dec
ret
jle
or
or
call
xlat
mov
mov
mov
nop
mov
push
add
aam
movsb
call
loopne
icebp
mov
adc
shlb
and
jbe
out
pusha
test
sub
scas
adc
out
push
push
mov
bswap
shll
inc
or
push
inc
test
pusha
mov
and
jmp
out
adc
ret
fwait
jmp
movsb
jnp
ja,pt
xor
mov
add
or
notl
xchg
imul
rcl
jno
mov
lods
lret
ret
jae
or
jo
loop
jnp
lock
mov
jbe
stos
pop
xlat
cmp
mov
bound
add
pop
push
push
nop
cld
jecxz
repnz
mov
sbb
ret
or
in
xchg
cmpsb
mov
ja
lods
dec
jb
lea
mov
dec
push
and
andl
adc
mov
mov
iret
rorb
mov
xchg
mov
imulb
daa
dec
sti
pop
push
xchg
mov
repz
fmul
scas
ret
sub
add
imul
in
loope
push
in
ret
fdivs
add
scas
cs
fsubl
mov
fdiv
xchg
insl
cmpsl
das
and
and
sub
dec
dec
dec
add
add
jecxz
pop
adc
cmp
jmp
cmp
aad
stos
gs
shlb
rcl
ss
sti
jb
jno
aad
leave
cmpsb
bound
jge
push
pusha
or
int
jo
push
clc
lods
push
add
mov
xor
jno
push
mov
mov
jp
popa
jecxz
insb
xlat
mov
or
cmp
cli
and
or
pop
push
jno
mov
pop
or
repz
fwait
pop
int
jg
mov
jb
pushf
push
imul
loop
loope
stos
xchg
sub
repz
sub
sarl
sahf
xchg
sub
out
xor
jmp
and
add
div
incl
mov
loope
xchg
out
sbb
scas
cmp
lea
lahf
insl
mov
addr16
test
fsubrl
and
js
leave
ja
dec
mov
xchg
adc
hlt
xchg
pop
rcr
mov
xor
mov
sbb
adc
test
test
jae
call
shlb
push
jno
jb
sub
sub
push
rclb
pop
mov
sub
xchg
jo
xchg
sbb
test
cmp
xor
sti
push
jle
mov
cmp
inc
lret
mov
es
hlt
lea
and
dec
stc
cmp
dec
mov
movsl
cmp
or
sub
js
lock
aam
cmp
scas
cmpsl
sbb
push
push
scas
lcall
pusha
xchg
push
jl
out
and
mov
test
jne
xchg
in
dec
or
sub
inc
jns
adc
dec
cli
movsl
enter
mov
inc
ljmp
mov
push
icebp
fmull
add
mov
hlt
jle
pop
scas
sbb
test
mov
xchg
test
mov
or
xchg
mov
xchg
mov
stos
clc
test
cli
jo
add
jnp
test
or
js
call
int
and
sub
loop
daa
cltd
in
mov
pop
mov
push
pop
imul
cmp
push
inc
xor
push
mov
lods
adc
xchg
dec
out
inc
leave
jnp
xchg
ret
sar
out
sub
jle
add
rclb
fldcw
bound
mov
ret
fstpt
ss
push
hlt
popf
jae
aas
call
push
aam
rolb
inc
sbb
fldl
pop
and
inc
loope
push
test
push
mov
inc
scas
xchg
addr16
cs
sbb
sbb
pop
sahf
adc
xlat
lret
xchg
in
cmpsb
pop
dec
jecxz
inc
pop
mov
es
mov
out
add
shl
push
dec
mov
push
out
sub
push
out
cwtl
popf
lret
pop
sub
inc
leave
lgs
xor
cmp
jge
mov
and
cli
cmp
stc
scas
hlt
adc
cli
or
cs
data16
jne
jge
pop
mov
in
cli
dec
pop
pop
jle
dec
mov
sahf
pop
sbb
adc
mov
adc
leave
in
dec
mov
les
push
push
pop
iret
out
insb
hlt
push
push
cld
mov
rcl
push
jg
cmpsb
fsts
or
dec
fcmovnb
and
sarl
pop
clc
adc
gs
popf
fmull
les
bound
dec
loopne
cltd
fld1
cwtl
xchg
or
sbb
jmp
sbb
xchg
push
outsb
xor
popf
inc
xchg
and
push
test
pop
mov
mov
sti
sbb
int3
push
fwait
dec
call
rolb
mov
push
adc
mov
cmp
mov
jge
dec
rcrl
lods
xchg
dec
mov
rcrl
fldenv
ja
ret
gs
inc
jb
mov
add
mov
and
test
push
jns
pop
or
shll
iret
sbb
adc
cmp
rcrl
dec
cmp
push
cmp
sbb
loop
add
mov
pop
sbb
movsl
enter
aas
mov
fcmovbe
mov
push
sbb
and
or
outsl
les
roll
rcrb
ss
mov
xor
daa
test
jmp
push
notl
int3
insl
test
push
mov
popf
stc
int
je
sbb
or
dec
arpl
mov
popf
neg
adc
dec
jge
cli
add
jl
mov
mov
lahf
fmull
inc
mov
out
jno
xchg
mov
dec
xor
fisubrs
xor
call
test
dec
stos
test
cmc
sti
jno
ds
testb
popf
mov
call
aaa
mov
aad
sbb
mov
jne
mov
lock
xchg
cli
aas
inc
imul
test
jnp
xor
adc
data16
pop
addr16
jbe
adc
xchg
aaa
mov
add
lods
call
rcrb
dec
mov
fmulp
sti
dec
adc
or
cltd
mov
ror
jae
mov
fs
pushf
dec
cmpsb
adc
push
add
lock
outsb
add
rcrb
mov
outsb
push
lahf
dec
xchg
mov
in
lea
pminub
jne
xchg
shlb
mov
icebp
outsl
pop
movsl
jne
test
cmp
pop
jmp
mov
jecxz
cld
sub
add
add
mov
ret
jae
jecxz
repz
cwtl
pop
hlt
xchg
pop
and
scas
popa
loopw
addb
imul
pushf
popw
jne
add
lcall
decl
lods
cmp
sub
aaa
les
hlt
in
mov
add
mov
jae
jo
pusha
xchg
incl
cmpsl
mov
mov
loope
and
add
rclb
inc
xor
shll
fwait
mov
mov
sti
cltd
mov
push
int
loopne
pop
jp
pop
bound
andl
push
iret
aaa
and
jbe
push
mov
fisubrs
hlt
out
dec
nop
sarl
and
divl
loopne
adc
es
sbb
mov
jo
push
mov
fnstsw
and
jnp,pn
dec
std
sbb
addr16
call
xchg
add
mov
aad
mov
xor
pop
adc
imul
xor
call
subb
and
sbb
mov
cs
mov
leave
adc
xor
sub
movsb
cwtl
fisttpll
add
and
int3
adc
push
repnz
xchg
fwait
dec
or
mov
push
or
push
orb
cmp
xchg
std
sub
gs
lods
or
arpl
aam
out
adc
adc
jp
pop
jbe
mov
push
dec
nop
sub
sub
inc
dec
pop
sub
pop
ss
repz
in
xor
in
mov
and
cld
sahf
pop
insb
call
insb
dec
or
mov
int3
and
mov
lcall
xor
in
mov
mov
mov
adc
xor
pop
lcall
aas
outsb
pop
xlat
push
inc
jb
lds
dec
and
out
dec
xchg
and
xor
add
mov
xor
lock
test
iret
pop
iret
jo
lcall
dec
adc
xchg
icebp
in
adc
sub
or
jl
cltd
or
jecxz
push
out
sub
add
pop
xchg
mov
shll
movsb
dec
fadds
hlt
push
jg
add
sahf
mov
loop
dec
jge
insl
movsl
addr16
ret
inc
and
ret
sti
fs
add
ret
insl
scas
or
mov
mov
out
push
xor
fdivs
xor
fdivr
xorb
gs
xor
add
add
in
cld
mov
mov
hlt
lods
pop
dec
dec
or
sub
cmp
mov
cmp
jno
jecxz
nop
adc
dec
cmpsl
mov
bound
mov
or
std
or
push
jecxz
adc
in
pop
cmp
push
in
cld
cmp
jbe
inc
ljmp
aam
insl
mov
lds
in
add
add
lahf
xchg
mov
adc
xchg
pause
mov
xchg
add
rcrb
das
inc
data16
mov
stos
nop
add
add
iret
mov
adc
icebp
cmc
mov
xchg
push
jmp
xchg
and
jo
ss
rcl
xchg
sub
rcrl
movsl
jns
out
jb
sti
add
mov
les
stc
lahf
push
xlat
popa
movsb
or
mov
add
fcmovb
add
push
daa
scas
jl
mov
in
dec
pop
add
jmp
in
out
les
fcmovne
stos
sbbl
pop
xor
icebp
fbld
fucomip
daa
mov
and
pop
mov
sti
outsb
sub
jecxz
and
sbb
mov
xor
xchg
mov
push
mov
push
lods
xor
data16
push
dec
add
ficoms
dec
inc
in
or
xchg
add
xor
iret
dec
push
stc
mov
cs
pop
call
fildll
xor
stos
popa
adc
sbb
mov
nop
mov
push
pushl
repz
js
addb
pop
push
sub
mov
cmc
repnz
lret
jp
daa
pop
sub
mov
shll
inc
xchg
daa
jo
xchg
mov
aam
push
aad
dec
repz
cmc
and
inc
rorb
cs
into
icebp
xor
in
mov
jns,pt
ss
inc
dec
rcrl
push
dec
fdivl
int3
outsb
popl
push
mov
movsb
insb
and
sahf
cwtl
or
xor
ret
cmp
push
jge
aas
fxch
imul
pop
sbb
and
movsb
pop
stos
mov
aaa
sub
lret
in
xchg
lret
rep
sub
xor
adc
jge
mov
jno
mov
jp
lret
popf
lds
ljmp
mov
movsb
push
xor
push
loop
cwtl
push
push
lahf
adc
decl
int3
xor
aam
das
out
std
mov
add
inc
push
mov
outsb
xchg
adc
push
push
dec
inc
inc
arpl
push
loop
test
mov
jbe
adc
and
cmp
subb
fdivs
lret
iret
sbb
xor
orl
out
jne
xor
xorl
sub
push
push
xor
jmp
add
sbb
js
sbb
mov
out
push
jg
xchg
mov
stos
fsts
ret
leave
in
movsl
jno
xlat
pop
xchg
gs
fwait
enter
leave
mov
ss
mov
mov
xchg
mov
mov
cmp
or
jge
push
mov
fs
ret
xchg
or
ret
jp
sbb
mov
cmp
outsb
xchg
std
and
dec
add
xchg
fs
repz
push
xor
pop
and
scas
or
bnd
sub
sub
outsl
cmp
cmpsb
sub
fistps
or
mov
add
mov
loope
lds
bnd
lods
int3
test
pushf
and
jno
push
lret
gs
outsb
lods
or
in
mov
add
pop
pop
fdivrs
and
es
lahf
jmp
cmp
cmpsb
ret
insb
lcall
or
jmp
ja
popf
mov
dec
aas
sub
or
hlt
jle
shll
pop
jmp
pop
jg
dec
dec
cmp
lock
aaa
xchg
add
jl
int3
mov
test
test
outsb
mov
in
ss
cld
lea
fmulp
jns
loop
fsubrs
ss
cmp
popf
or
dec
xchg
insb
rcrl
mov
or
cmp
xchg
pop
loope
stos
push
pushl
mov
mov
clc
jp
dec
mov
xchg
pop
in
pop
shr
mov
inc
sub
mov
inc
pop
bound
gs
or
loop
push
lcall
sbb
sub
and
adc
push
xchg
push
lahf
jno
js
loopne
sahf
in
sub
in
fcoms
je
jl
stc
cmpsb
push
jb
test
shlb
lea
testb
xchg
add
jl
xchg
fld
stc
pusha
mov
imul
push
xchg
dec
lods
pop
test
imul
sbbb
popf
cmp
push
mov
mov
cli
jle
pusha
and
jne
push
cmpsb
mov
xor
in
jbe
xchg
dec
imul
sbb
xchg
push
xchg
lds
stos
divl
adc
shll
mov
mov
daa
mov
xlat
xor
cmpsl
wrmsr
pusha
sbb
jmp
jmp
movsb
sbb
push
loop
inc
mov
inc
dec
adc
adc
outsb
mov
or
fdivs
test
neg
ret
xchg
mov
arpl
imull
call
inc
jnp
dec
dec
sbb
leave
adc
and
mov
fldenv
jp
popf
iret
cmp
das
ds
sbb
daa
ja
fwait
sbb
mov
mov
or
adc
xchg
cmp
sub
dec
std
cmpsl
jmp
inc
mov
popf
xor
mov
xchg
lcall
mov
cmp
sahf
mov
cld
adc
sub
into
daa
int3
mov
pop
ret
add
dec
movsl
fistl
inc
daa
push
adc
mov
mov
daa
lcall
pop
aas
pop
inc
aam
jmp
fnsave
inc
cmpsb
fists
jno
js
fsubl
das
sub
mov
shrl
mov
xchg
rcrl
cmp
hlt
pusha
xor
adc
lret
ljmp
js
cmpsb
mov
mov
pusha
inc
xor
je
adc
cmp
std
scas
ret
insl
dec
fsubr
mov
sub
xor
or
loop
addr16
loope
ret
push
rcr
dec
imul
mov
shrb
jne
and
jecxz
xor
lock
xor
mov
jge
daa
mov
mov
push
dec
jo
addr16
insb
cmp
jl
dec
jae
xchg
jp
popa
mov
lcall
sub
xchg
pop
popf
cld
push
insl
sbb
jg
aad
sub
popa
fnclex
gs
test
repz
lds
adc
gs
enter
xchg
loopne
mov
pop
push
cmpsb
push
inc
xchg
out
mov
mov
or
mov
jl
add
shlb
ja
loope
inc
and
andl
repz
cs
ljmp
icebp
jns
mov
adc
outsl
sub
adc
arpl
fisttpll
push
adc
xchg
mov
rcll
js
adc
and
dec
and
push
popf
pop
pop
das
add
jno
gs
cli
test
or
and
mov
shrl
movsb
or
in
push
mov
int
push
jae
mov
ss
and
popa
adc
cmp
xchg
or
cmp
mov
cwtl
xchg
enter
shrb
jle
sbb
stc
mov
lods
sbb
push
lods
scas
mov
adc
jae
fadds
imul
add
test
scas
loop
mov
mov
mov
push
and
hlt
cld
aaa
jle
iret
mov
fnsetpm(287
jge
cld
popl
xor
lock
test
pop
lock
fimuls
out
repz
mov
inc
pusha
sarl
or
lret
fsubp
inc
mov
shl
inc
ja
jp
mov
flds
cltd
rcl
push
cmp
add
cmp
nop
cld
lcall
inc
jmp
sbb
xchg
pushf
add
sub
ffree
dec
xchg
frstor
test
mov
push
mov
or
inc
aam
shll
adc
and
ljmp
push
mov
call
mov
xor
lahf
or
popf
in
ss
xor
adc
int3
mov
mov
cmpb
movsb
mov
cltd
es
mov
cmpsb
push
or
jno
sub
jle
pop
mov
or
sbb
je
lahf
cmp
pop
sub
icebp
andb
sbb
clc
sbbb
push
cwtl
int3
lock
mov
aam
push
cmp
js
pop
scas
ror
inc
push
adc
xchg
mov
cli
testb
loope
pop
mov
and
mov
test
ljmp
inc
fsubr
ss
dec
mov
mov
push
adc
xlat
xchg
xor
lret
das
xor
xchg
in
mov
lea
int
hlt
mov
dec
lea
push
or
mov
pop
cmp
add
push
cli
xor
fnstenv
cltd
or
lea
xlat
jmp
adc
mov
mov
cmpl
rclb
roll
es
pusha
and
xor
xor
cltd
xor
push
movsb
jle
push
sub
mov
lods
mov
stos
mov
mov
xor
xchg
xor
int
fisubrs
cmp
jl
mov
mov
sbbl
shrb
leave
imul
sub
jns
dec
mov
hlt
aas
popf
xchg
inc
pop
sbb
aam
out
cmp
pop
fcmove
push
fiaddl
push
xlat
fstpt
pop
jno
ret
jl
andl
in
dec
sbb
xlat
sbb
sbb
sarl
cwtl
out
or
pop
jno
jp
rcrb
add
movsb
cmp
sahf
inc
push
ret
sub
push
loop
or
xchg
dec
jle
adc
and
sbb
mov
cli
mov
ss
push
add
ret
inc
loopne
adc
sbb
insb
mov
mov
pop
or
and
xchg
je
test
out
xchg
push
add
pop
push
push
jmp
push
ret
in
push
add
xor
push
mov
pusha
in
orb
test
or
push
mov
bound
sbb
jmp
inc
push
movsb
xchg
loope
hlt
out
icebp
cli
js
repnz
inc
aad
adc
jmp
outsl
fdivl
mov
shll
push
imul
inc
arpl
subl
addr16
es
push
jno
leave
cmp
jbe
inc
mov
jge
mov
add
mov
ljmp
or
mov
or
add
inc
addr16
sub
scas
dec
stc
out
cltd
lcall
lods
js
jo
cmp
arpl
jg
out
sbb
xchg
fmul
lds
jmp
sti
mov
mov
loope
inc
insl
mov
jnp
jbe
xor
dec
out
mov
fdivrs
aaa
aad
mov
std
rcll
cmp
mov
jecxz
pop
imul
inc
or
inc
mov
push
in
dec
adc
cld
xchg
hlt
ret
and
and
pusha
xlat
or
mov
mov
dec
std
cld
adcb
dec
mull
adc
sub
test
push
adc
adc
loope
loopne
mov
jg
into
lret
stc
sub
inc
jne
movsb
cmp
leave
jmp
and
rcl
ljmp
push
pop
fmuls
fwait
movsl
shll
xchg
add
subl
cmp
icebp
outsb
fldenv
shrl
ficomps
sbb
int3
ffreep
jb
xchg
sarl
adc
xor
push
test
push
mov
lds
roll
sahf
inc
cltd
outsb
outsl
jmp
stc
leave
mov
add
mov
mov
push
jbe
jb
test
les
out
xor
jae
aas
sbb
gs
pop
dec
in
mov
insb
lret
shlb
push
enter
xorl
mov
cmp
sub
jmp
jae
sub
negl
jns
out
sbb
cmp
add
cmp
sub
adc
gs
stos
xchg
sbb
lock
xor
xor
mov
dec
cli
or
or
sub
aam
imul
ret
das
decb
insl
sbb
ret
sbb
xor
mov
sub
enter
loopne
push
mov
sub
pop
call
xchg
sub
fsts
aas
loop
loop
dec
shrl
push
in
lret
mov
dec
push
sbb
test
rcrb
sub
adc
cwtl
push
sahf
nop
or
inc
cmpsl
in
sub
sbb
xor
xchg
fwait
xchg
in
leave
aaa
mov
mov
or
ljmp
loope
pop
sub
out
xor
cmpsl
jnp
roll
sub
or
js
enter
ds
ss
loopne
in
pop
imul
push
rol
mov
inc
pusha
inc
rcr
add
xchg
clc
in
add
dec
stos
xor
xchg
dec
jb
imul
repnz
or
ja
out
lret
xor
test
mov
fsubrs
rol
out
cmp
jb
lea
clc
dec
mov
push
shrb
sti
and
cld
icebp
test
sub
jp
fiaddl
xchg
pop
subl
fcoms
mov
dec
add
add
fs
adc
cmpsl
mov
jg
inc
dec
jg
add
xor
jle
lds
push
push
sub
push
aas
inc
add
mov
xchg
fsubrl
fucomip
cmpsb
xor
negb
aaa
js
fsubr
pcmpeqw
jle
cmp
xor
add
stos
xchg
jnp
xor
fisttps
decl
adc
cmp
in
dec
xchg
adc
push
mov
data16
and
cmp
cld
and
loopne
mov
daa
mov
mov
cmp
adc
mov
in
or
lcall
push
cli
das
jno
adc
hlt
pop
mov
sbb
aas
adc
sub
int3
imul
mov
and
bnd
andl
jbe
mov
sbb
lods
loope
xchg
or
add
es
adc
test
inc
push
mov
dec
cmc
popf
adc
outsb
das
dec
cli
sub
xlat
dec
loop
rcll
add
jnp
mov
ret
aas
lock
jl
push
pusha
mov
inc
xor
lods
dec
mov
and
sbb
pop
enter
push
add
push
mov
mov
lds
and
out
jecxz
mov
sahf
leave
pop
out
lods
xor
sbb
jl
jne
shlb
stos
pop
rclb
stc
jnp
js
stc
dec
mov
jmp
inc
pop
mov
push
pop
loope
mov
cli
xchg
pop
sub
das
xchg
lahf
jg
sti
adc
mov
fistpll
int
pop
adc
fists
inc
mov
test
cmc
ja
imulb
push
xchg
jb
cmp
mov
push
nop
outsb
cmp
cli
iret
bound
push
push
test
addr16
rorb
je
mov
cmc
sbb
ja
es
mov
lods
xchg
mov
mov
sbb
mov
xchg
mul
xor
mov
or
ss
loop
fistpl
xor
lock
mov
adc
dec
lret
out
inc
loop
jmp
mov
mov
test
insl
popf
jne
mov
jg
dec
call
pop
roll
clc
int3
imul
inc
xor
aas
push
xchg
out
cwtl
mov
pop
and
scas
or
decb
push
mov
dec
daa
aad
leave
ljmp
sbb
or
or
adc
out
cvtpi2ps
xlat
imul
dec
daa
or
mov
adc
push
jae
mov
stos
mov
fidivrs
repz
setp
fwait
jne
mov
js
jbe
and
lcall
scas
fwait
stc
addr16
jle
out
stc
jecxz
test
xorl
sbb
jg,pn
push
mov
outsb
xor
outsl
subl
mov
pop
addr16
inc
sub
dec
adc
ror
les
push
fisubrs
xor
gs
lcall
mov
jmp
and
inc
or
sti
push
cmp
sbb
lahf
jae
or
shll
leave
ds
xchg
adc
and
xchg
pop
push
mov
push
mov
or
jmp
add
mov
stos
mov
sbb
iret
xor
inc
sub
pushf
cwtl
ret
push
mov
sub
adc
pop
aad
jb
add
jle
in
sbbl
jl
ljmp
cmp
push
mov
js
int3
mov
mov
xchg
stc
or
inc
aad
int
mov
jg
sbb
dec
aad
xlat
out
mov
test
addr16
sahf
dec
sbb
rorb
push
shr
out
jnp,pt
scas
add
mov
mov
pop
xchg
adc
add
fwait
adc
scas
jmp
icebp
xor
je
mov
das
insb
or
mov
dec
daa
push
aas
ret
pop
push
out
cmc
sti
or
es
inc
scas
clc
jae
notb
scas
shrl
movsb
jmp
lret
pop
cmp
sbb
pop
mov
lcall
cs
mov
pushf
dec
cmp
flds
pop
add
add
mov
sub
or
push
or
popf
push
jno
sub
popf
pop
inc
mov
push
loopne
in
sub
icebp
arpl
loopne
sti
mov
nop
xchg
cwtl
sti
mov
movsb
or
ss
jo
cmp
out
dec
dec
inc
in
push
int
dec
jge
jae
xor
outsl
push
push
dec
test
fwait
shlb
mov
mov
xor
icebp
fdivrs
mov
adc
in
pop
jmp
or
push
push
inc
aaa
sub
cmp
movsb
ret
lcall
sbb
and
jo
fcomps
mov
cmp
aam
dec
jge
test
add
movsl
addr16
adc
jl
add
xchg
jae
and
ljmp
clc
inc
mov
add
mov
test
push
mov
adc
jg
je
mov
lds
das
pop
push
subl
stos
notl
or
fnstcw
out
push
or
xchg
repz
ss
lret
sbb
data16
sbbb
mov
pop
jmp
aad
cmc
jge
es
sub
inc
test
out
dec
jno
cld
dec
inc
stos
cmpsl
js
les
sub
clc
and
sbb
and
pop
push
addr16
xor
xchg
dec
sub
sti
andnps
out
movsb
jbe
out
inc
dec
pop
sub
gs
and
hlt
idivl
mov
inc
jns
jl
imulb
xor
lahf
cli
or
fmul
in
je
pop
roll
adc
fs
ror
lret
fwait
ljmp
arpl
or
pop
shlb
rcll
or
add
push
mov
push
xor
stos
pop
rolb
cmc
mov
adcl
rorb
movb
adc
jbe
jbe
inc
stos
adc
push
daa
js
jmp
int
cmc
and
jl
es
out
push
jo
dec
cmp
cmp
movsl
in
mov
fcomps
mov
mov
push
cmp
jle
xor
sbbl
call
inc
inc
dec
xchg
gs
adc
in
fstl
xor
sbb
mov
jg
mov
xor
jnp
dec
push
ficomps
addr16
pop
sub
mov
pop
pop
ror
out
icebp
cwtl
adc
ds
xchg
scas
ret
xchg
test
fcompl
popa
lods
sbb
rolb
xchg
loop
sahf
pop
mov
loope
jl
push
push
push
outsb
push
movsl
sub
sahf
pop
in
ljmp
je
mov
pop
cmpl
push
mov
inc
std
mov
pop
or
call
adc
in
es
dec
rorl
gs
fcompl
stos
loopne
add
repz
add
mov
jno
lret
adc
dec
out
pop
cmpsb
mov
push
push
or
mov
xlat
xor
and
ret
aam
rolb
fiaddl
mov
sarl
pop
ljmp
cltd
xchg
jae
inc
cmp
mov
sub
and
clc
push
add
scas
push
scas
bound
jp
and
adc
sub
mov
mov
add
push
xchg
cmp
xchg
dec
rolb
insb
cmp
in
jnp
push
mov
push
adc
sbb
cmp
fcmovnu
add
fs
jecxz
mov
lcall
sbb
or
fmul
out
pop
lods
fsubr
push
mov
int3
jl
dec
cmpsb
ds
adc
mov
fcomip
mov
std
xchg
cmpsb
push
sbb
in
jg
imul
mov
or
add
lcall
xchg
xchg
mov
sti
std
jl
adc
imul
outsl
cmp
addr16
loopne
inc
out
inc
sbb
mov
dec
mov
imul
test
roll
testb
xor
mov
xor
mov
xlat
popa
and
addb
and
ljmp
loopne
cmp
jbe
ds
jmp
lcall
push
jge
mov
out
pushf
das
mov
test
ss
clc
cli
iret
sti
lret
or
int
mov
dec
xchg
push
jbe
sahf
gs
mov
xchg
js
xchg
mov
dec
in
adc
xor
cmpsb
cs
sbb
push
daa
stc
shlb
inc
sub
mov
mov
mov
lds
stc
jne
stos
pop
in
ret
and
mov
jb
jo
mov
mov
mov
add
lret
fdivs
icebp
inc
idivb
mov
pop
nop
xchg
mov
data16
and
jge
les
xchg
loop
and
push
cltd
sbb
jmp
daa
in
jl
std
lret
jle
add
xchg
sbb
jae
cltd
xchg
aam
jmp
add
push
das
inc
mov
dec
or
or
jp
or
cld
adc
push
inc
cmpsb
stos
ror
pushf
xor
add
mov
mov
stc
push
push
je
push
ds
sbb
cmpsl
xchg
sub
lret
jns
outsl
xor
fstl
aam
add
scas
cltd
ss
hlt
clc
sbb
dec
aad
insl
arpl
shrb
arpl
dec
dec
ljmp
xor
push
lahf
scas
incl
fisubrs
imull
movsl
cld
mov
jl
test
cld
adc
cmp
jle
and
aad
mov
jp
pop
mov
scas
sbb
inc
in
sbb
mov
stc
std
pop
lret
mov
xchg
add
pop
call
mov
loop
and
adc
stc
mov
pop
frstor
dec
test
adc
daa
xchg
sub
and
add
pop
sub
popa
cmc
jge
fadds
xor
adc
mov
lock
stos
mov
in
xchg
dec
out
pop
jmp
xor
das
cltd
pop
inc
hlt
and
adc
sub
or
jge
or
fwait
xchg
fistpl
mov
and
and
jb
call
or
push
fistpll
inc
inc
push
js
inc
xchg
rorb
insb
insb
push
pushf
add
mov
cmp
or
xchg
js
js
mov
xor
mov
push
push
aas
and
movsl
xchg
or
xor
pop
cmpsb
int3
jl
sahf
ret
cld
sbb
jp
xorb
cmp
inc
adc
ja
jbe
pop
push
cmp
fistpl
icebp
clc
xor
into
dec
jl
mov
negl
pop
inc
lcall
or
int3
sbb
hlt
cmpsl
ficomps
push
int
lea
pop
jne
icebp
rdtsc
and
mov
ljmp
cs
lods
sub
adc
jne
int3
xchg
sahf
xchg
add
mov
lcall
pop
notb
sub
mov
jmp
push
outsb
xchg
in
push
out
inc
cmpsb
hlt
test
insl
xor
xchg
movsl
lahf
sub
into
xchg
adc
dec
out
pop
lods
call
in
mov
xor
sub
clc
clc
push
sbb
cmp
jl
mov
dec
into
add
sub
dec
repnz
scas
ds
sub
cwtl
mov
add
xor
pop
dec
sbb
cmp
dec
mov
mov
test
fs
stos
mov
jp
daa
loope
mov
pop
orb
pusha
xor
push
aas
jae
mov
aaa
inc
movsl
cmp
aam
lods
insb
aas
cmc
outsb
int
jl
in
filds
sub
xor
jp
les
mov
mov
jge
addl
aas
or
outsl
dec
and
xchg
out
cwtl
fucomi
aas
jne
sahf
loope
inc
and
jb
push
and
test
adc
adcl
jno
imul
gs
cmpsl
mov
dec
mov
jae
push
ds
pop
add
adc
inc
scas
xor
insb
movb
bound
jnp
jmp
loope
cwtl
fwait
pop
add
loope
adc
dec
shrl
xchg
shl
push
data16
lds
push
movsb
or
leave
jnp
stos
adcl
test
data16
pop
repz
stc
mov
cs
shl
adc
popa
cmpl
ror
repz
push
dec
js
mov
in
std
mov
scas
pop
clc
mov
outsb
cmpsl
mov
dec
jg
incl
arpl
mov
into
sbb
mov
popf
mov
pusha
vmwrite
push
mov
icebp
ret
cmp
mov
mov
loope
in
les
mov
stos
loopne
cmp
and
or
cli
dec
dec
addr16
js
sub
clc
mov
test
jns
es
fwait
movsl
call
inc
mov
inc
push
sub
dec
pop
imul
in
xor
and
fdivs
dec
js
imul
add
fldenv
or
add
mov
sbb
sti
lock
aas
sbb
sub
cwtl
jae
iret
nop
dec
daa
or
jmp
fimull
add
xchg
in
sub
fstl
stc
dec
out
dec
sub
outsb
clc
jle
leave
int
jbe
decl
sarb
mov
in
pop
cltd
push
mov
repnz
sbb
and
jno,pn
cmp
loop
shrl
mov
mov
out
pushf
push
xchg
xchg
push
push
cwtl
je
scas
cltd
es
jns
incb
ja
into
cmp
sub
in
xor
lea
sarb
pusha
sbb
adc
mov
and
cmp
dec
xchg
das
dec
or
leave
lcall
mov
out
ret
mov
and
inc
lcall
sub
mov
xchg
inc
js
movsb
push
ror
out
adc
or
push
cmp
pusha
add
jne
aam
imul
das
in
push
sar
mov
in
mov
lret
sahf
out
xchg
cld
mov
outsl
adcl
mov
pop
test
cwtl
pop
loopne
add
and
nop
mov
push
ret
xor
xchg
cmc
add
cmp
mov
dec
xchg
stc
xchg
stc
sbb
cmp
pop
dec
lcall
mov
inc
movsb
ja
push
or
vldmxcsr
cmc
in
data16
mov
inc
mov
sbb
mov
push
jae
fldenv
xor
sbb
aad
dec
mov
out
fdivs
xchg
cwtl
xor
sbb
daa
sti
dec
sub
into
mov
or
nop
lods
sbb
and
or
dec
dec
jae
pop
jne
cmp
pop
xchg
shrb
push
adc
jns
repnz
mov
adc
sbb
mov
out
leave
xchg
ss
dec
inc
mov
sub
pop
xor
inc
mov
aam
incb
out
jg
mov
shll
loop
pop
je
and
out
cwtl
dec
mov
stos
xlat
movsl
adc
stos
je
xor
popa
loope
fisttpl
mov
jbe
mov
or
cmp
and
cmp
dec
fildl
cmp
cmp
pop
daa
xchg
inc
daa
or
arpl
ror
add
or
mov
inc
cli
pop
lret
mov
sbb
mov
pop
push
mov
xchg
mov
dec
imul
cmp
sbb
mov
xor
ret
out
and
pop
ficompl
ret
bound
clc
cmp
fsts
sub
sbb
jne
sar
mov
inc
adc
mov
leave
dec
jmp
rcll
and
jge
loopne
push
mov
ljmp
mov
sbb
jge
scas
pop
sbb
add
sub
fistpll
or
dec
mov
in
leave
or
je
int3
std
jmp
mov
enter
xchg
xlat
bound
pop
imul
jno
adc
bound
jge
shll
sub
nop
cld
inc
jb
popa
xor
mov
mov
in
jb
sub
idivl
ficoms
out
fnsave
mov
and
aad
outsb
lahf
jno
int
je
lret
lods
jle
mov
push
mov
mov
hlt
lcall
repz
jl
push
jbe
lret
pop
std
push
std
test
mov
je
cmp
lret
xchg
or
in
nop
int3
cmp
sbb
ret
faddl
push
mov
nop
fidivrs
out
pop
subl
xor
ljmp
ret
shll
cmovp
sarb
xor
in
into
sub
mov
dec
mull
xchg
scas
adcb
shll
cmp
out
addr16
lret
push
pop
btr
xlat
negb
ja
pop
pop
jp
pop
pop
mov
cltd
imull
push
out
jno
sarl
cs
push
pop
insb
mov
shll
ret
dec
inc
cmp
test
js
ss
mov
loopne
mov
push
xchg
fisttpll
aad
pop
ljmp
das
stc
jp
repz
mov
add
in
loope
std
movl
mov
ljmp
pop
inc
fsubrs
cmp
sub
dec
pop
lea
pop
in
cmp
dec
cmp
cli
insl
mov
loopne
mov
popf
movb
jp
imul
fwait
in
mov
mov
fimuls
dec
loop
fsts
xchg
mov
mov
aad
mov
mov
jno
pop
push
jmp
pop
pushl
push
add
cmc
push
notb
inc
call
enter
mov
cltd
xchg
enter
jmp
xorb
stos
push
idivb
pop
sbb
mov
push
leave
cld
repnz
add
sub
push
xchg
shl
mov
aad
inc
cmp
inc
ja
lods
jo
movsb
movsl
xchg
scas
push
or
insl
int3
loop
cmpb
jg
pop
gs
fwait
popa
xlat
ret
jnp
movsb
jne
imul
aad
cmp
sub
imul
in
jmp
orl
shll
cmp
adc
inc
inc
push
pop
cld
js
pop
test
repz
ds
inc
insl
xor
cmp
cltd
sbb
cmc
xchg
f2xm1
inc
mov
lods
int
fstpt
xor
mov
dec
mov
xchg
push
and
cwtl
insl
and
mov
les
ja
jge
push
add
roll
adc
cmp
lods
push
push
mov
xchg
add
mov
ljmp
inc
and
mov
pop
cmc
jne
xchg
jecxz
std
movsl
dec
inc
and
in
mov
lcall
inc
push
sub
mov
mov
cmp
mov
out
mov
cmp
xlat
lahf
sahf
sub
or
cs
in
lock
adc
sbb
inc
or
lods
lea
loope
ret
push
test
fdivp
jecxz
popw
prefetch
xor
cmc
and
fyl2x
lret
aam
cmp
out
outsb
jmp
xor
mov
cwtl
sbb
movsb
dec
push
call
test
ja
cmp
and
sbbl
out
inc
andl
and
test
adc
inc
pop
in
pop
mov
adc
sarb
das
mov
shl
pop
movsb
cmpsl
out
scas
clc
sahf
ror
xchg
cmpsb
mov
scas
jecxz
fwait
cld
mov
add
and
push
jge
push
push
mov
cmc
in
sbb
out
pop
sub
fldenv
mov
andb
dec
jb
cmpb
insl
rol
mov
das
mov
rcrl
loope
cmp
loopne
cmc
cmp
fcoml
mov
aas
popa
lods
mov
decl
das
jp
inc
int3
decb
add
in
add
inc
cli
in
rcrl
icebp
xchg
push
dec
dec
nop
sub
cmp
mov
or
mov
cmp
cwtl
mov
insl
sarb
loopne
int3
cmpsl
outsb
movsb
pop
cwtl
fisttpll
sti
xchg
jg
push
adc
and
jne
mov
jb
and
mov
mov
mov
jne
sbb
scas
bound
pop
cmpsl
sbb
pushf
repz
iret
out
lcall
jne
fs
sub
or
icebp
nop
lahf
add
pop
sti
clc
push
and
jg
add
nop
push
xor
subl
pop
rcrl
mov
jg
clc
mov
movsb
mov
xchg
mov
jnp
push
and
ljmp
imulb
icebp
andb
fsts
cmpsb
test
push
mov
imul
sbb
sub
divl
stc
xchg
call
stos
lods
ret
pushf
and
inc
arpl
jns
pop
test
lods
push
arpl
sbb
push
cwtl
popf
dec
faddl
dec
outsl
leave
mov
aad
cwtl
push
and
ja
cmpsb
xor
icebp
pop
push
into
xchg
adc
xor
imul
out
pop
sbb
ljmp
adc
dec
mov
lds
pop
loopne
jae
cmp
pop
or
and
push
pop
jne
or
xchg
int
hlt
iret
notb
stc
cs
add
or
decb
xchg
dec
ret
dec
inc
lea
pop
fs
sbb
xor
hlt
das
repz
out
aas
je
jno
and
pusha
xor
idivl
inc
imul
mov
repnz
arpl
jbe
icebp
pop
fwait
ljmp
mov
stos
pushf
push
gs
out
cltd
push
and
in
pop
movsb
lods
pop
idivb
fs
test
arpl
xchg
pop
lods
pop
cwtl
cli
mov
inc
mov
daa
in
gs
sbb
push
stos
arpl
sbb
jno
jl
shlb
gs
mov
sub
sub
mov
imul
fcmovb
inc
je
fdivrs
mov
inc
push
pusha
rorb
test
and
cmp
fmull
pop
jle
decl
xchg
or
and
test
cltd
mov
or
aam
dec
or
push
addr16
sbb
mov
pop
jo
or
xchg
nop
add
sub
cmp
mov
nop
or
scas
and
push
add
out
out
xor
xchg
cmc
inc
test
iret
mov
add
out
in
add
pop
jp
pop
add
sti
je
in
or
inc
stos
pusha
mov
sub
and
stc
inc
out
cmp
and
pop
subb
jo
mov
xchg
or
add
insb
adc
mov
cmpsb
lea
sbb
cli
in
push
jno
shl
sbb
loopnew
lcall
test
jnp
fwait
mov
jb
and
and
icebp
decb
pushf
and
push
outsl
pusha
push
iret
jo
and
mov
adc
jge
stos
mov
mov
loopne
mov
pop
jmp
xor
leave
sbb
enter
or
mov
in
jne
push
pop
pop
out
cmpl
pop
mov
pop
lret
and
jae
fs
rorl
popf
add
cmpsb
das
lahf
dec
jle
iret
fstpl
add
add
push
and
sti
xor
mov
cwtl
xor
popa
xor
dec
cmp
jnp
sub
mov
hlt
aaa
sub
cld
mov
mov
in
sbb
outsb
or
outsb
loopne
imul
and
mov
adc
js
xor
fwait
ret
int
mov
aas
push
dec
jno
adc
sbb
push
rcrl
sbb
or
arpl
mov
movsb
dec
mov
add
lcall
andb
lahf
jl
add
pop
sar
mov
push
sbb
lock
pop
arpl
lret
jmp
inc
lea
iret
lds
sbb
jecxz
add
xorl
inc
ljmp
loopne
inc
clc
movsb
dec
call
or
adc
std
stc
mov
add
adc
dec
mov
inc
imul
lea
xlat
jne
push
cli
popf
aas
test
cwtl
and
cmpsl
popa
xchg
xchg
xchg
mov
insb
outsb
int
aaa
pop
mov
dec
repnz
loope
test
jne
jmp
mov
daa
gs
mov
xlat
push
ja
cld
popf
popa
jg
les
mov
in
mulb
sub
daa
or
mov
clc
add
push
push
push
lea
lods
shrl
jl
iret
cmovne
test
push
inc
push
xchg
xor
mov
ja
adc
enter
or
xor
cmpsb
dec
orb
dec
mov
mov
pop
lcall
xchg
gs
or
xor
add
fildll
sahf
pop
and
xchg
int3
aam
call
inc
ljmp
rclb
mov
xchg
cld
test
in
ret
in
pop
loopne
mov
and
sti
je
ret
inc
lock
mov
aam
or
add
mov
call
imul
call
inc
das
lods
adc
in
dec
pop
sub
cwtl
andl
ss
push
sbb
daa
fwait
xchg
pop
jl
rcl
cvttps2pi
xchg
jmp
mov
sbb
mov
cmpb
cmc
xchg
cmp
leave
jne
fsubrs
stos
pop
mov
and
lods
adc
cmp
or
clc
sub
jae
aam
inc
lods
pop
aad
scas
jecxz
addb
mov
push
js
push
sub
cmpsl
les
sub
scas
lret
push
in
xor
push
ljmp
or
jo
fstl
pusha
jge
mov
lock
jecxz
mov
xor
das
adc
inc
adc
filds
xor
pop
push
shll
aam
icebp
js
pop
inc
inc
add
xor
inc
aad
add
and
loopne
out
test
rorb
dec
ss
add
pop
insl
mov
pop
je
push
cs
aaa
push
pop
sar
inc
inc
es
mov
mov
dec
lock
mov
pop
push
ret
out
xchg
sbb
mov
daa
pop
pop
addr16
inc
adc
scas
test
add
mov
movsl
aam
inc
xor
out
jecxz
fimull
cmp
call
lods
rorl
movsl
add
mov
and
inc
inc
mov
xor
mov
xchg
rcrb
push
cmp
ds
filds
push
sub
sub
mov
sbb
lds
std
lcall
xor
cs
ljmp
jnp
fs
add
in
outsb
adc
mov
sbb
mov
fimull
lret
adc
push
xorl
jns
pop
nop
cmp
call
push
stos
shlb
mov
mov
cmpsl
out
pop
add
arpl
push
sub
cli
call
mov
cwtl
adc
xchg
xchg
aas
subb
mov
xor
mov
je
jge
or
sub
mov
fdivrp
mov
adc
fstps
mov
fldcw
mov
popf
cs
mov
loope
pop
and
jmp
aaa
out
popa
shlb
sbb
in
rorl
cmp
pop
mov
test
sbb
jb
ret
insb
sub
xchg
add
or
sbb
mov
lcall
mov
in
inc
pop
push
sahf
je
addl
scas
popf
and
ss
pop
addl
stc
repz
or
fsubs
bound
adc
mov
iret
test
rolb
mov
cmpsl
sub
enter
cmp
cmpsb
int
and
in
xchg
mov
xor
imul
clc
arpl
dec
add
and
adcb
fs
inc
ja
sbb
add
in
lret
loopne
inc
jo
add
or
jno
scas
sub
mov
push
stos
and
cmpsb
push
xor
inc
push
adc
out
enter
add
adc
mov
mov
jmp
fisubs
lea
sub
jle
xchg
pop
push
pop
stc
filds
scas
jge
and
mov
std
aad
imul
pop
push
ds
or
and
pop
jne
xor
jne
daa
push
gs
je
adc
xlat
cli
mov
stos
xchg
roll
or
pop
pop
xchg
sub
jg
xor
xchg
inc
flds
dec
sti
rcrb
inc
test
push
andl
mov
lret
je
or
add
or
daa
push
fistl
pop
leave
es
or
inc
rcrl
cmc
fwait
jnp
shll
mov
mov
fistpll
xor
xor
icebp
sub
cli
pop
aad
mov
call
test
or
lahf
rcrl
insb
inc
int
push
cmpsl
nop
dec
sbb
iret
imul
push
push
test
mov
xchg
cmp
dec
rolb
adc
mov
jnp
jo
cmp
lahf
out
and
jp
and
out
int3
sarb
out
iret
sbb
sbb
std
testl
mov
lods
movsl
xor
mov
nop
or
aad
sahf
pop
mov
lds
sbb
je
lahf
inc
arpl
cld
aas
ljmp
sahf
mov
aaa
mov
cmp
inc
inc
sbb
cmp
xchg
sahf
or
push
loopne
push
mov
mov
cmpsb
pop
mov
adc
jo
inc
call
adc
sub
stc
sahf
jmp
movsb
test
and
mov
cmpsl
lock
hlt
xor
clc
popf
clc
sbb
cwtl
mov
dec
jo
aas
mov
jle
fcmovne
loop
dec
addr16
into
gs
xor
sti
and
xchg
das
hlt
push
int3
xlat
and
sbb
lods
jb
mov
hlt
adc
xchg
sub
push
jns
xchg
aaa
xor
adc
in
mov
sti
sbb
imul
lahf
outsl
adc
jecxz
lret
testl
pop
xchg
push
test
or
cmp
or
sbb
inc
cmp
sar
mov
stos
das
addr16
pusha
pop
in
sbb
mov
mov
adc
lcall
dec
movsl
xchg
and
cli
mov
outsb
inc
jb
add
fisttpl
sub
mov
sbb
or
mov
bound
adcl
iret
notb
and
sahf
adc
bound
sub
jo
cltd
aaa
lahf
push
dec
jae
pushf
popf
sahf
or
sub
out
mov
mov
mov
sbb
or
adc
jo
mov
and
es
mov
sub
dec
and
mov
sti
addr16
sbb
mov
scas
test
ljmp
push
lods
pop
push
ret
sbb
jns
push
and
scas
ss
inc
stos
popa
fwait
aad
dec
das
mov
data16
inc
in
dec
loop
jae
cmp
lock
sbb
leave
pmulhuw
push
mov
jge
ret
pop
lea
call
or
fldenv
adc
ds
call
lret
imul
and
testb
in
fmul
adc
into
in
mov
mov
jle
xchg
pop
pop
std
inc
cmp
push
dec
jmp
jmp
aas
adc
sub
push
push
push
xor
or
mov
out
jmp
cs
add
or
sahf
mov
fwait
jb
adc
pop
rcll
mov
ds
xor
inc
or
inc
inc
sbbl
or
scas
lods
mov
xor
mov
enter
xor
xor
cld
mov
mov
xchg
xchg
call
jne
cmc
cmp
clc
pop
jl
sbb
inc
sub
dec
mov
sbb
mov
adc
sub
fmuls
add
out
add
aas
jp
lcall
jb
in
in
lret
xchg
clc
cmpsb
jle
cmp
aad
push
jp
jmp
jne
call
popa
add
cmc
cmpsl
mov
inc
and
cmc
cmp
into
add
lods
mov
mov
fcmovnu
pop
sub
push
test
adc
inc
dec
sub
push
insb
mov
xlat
cmpsb
nop
loope
xor
push
and
push
pop
leave
cmp
and
jg
push
scas
pop
pop
mov
lods
jg
hlt
inc
sub
push
mov
clc
mov
xchg
dec
nop
xor
or
sahf
xchg
in
inc
aaa
sub
call
shl
xor
add
pop
mov
nop
scas
ja
add
xchg
add
mov
jbe
orl
test
and
cmp
jl
jmp
pop
xor
sub
out
enter
mov
into
lcall
fstps
mov
mov
or
int
loop
jo
sbb
mov
pop
jb
add
add
pushf
scas
in
in
pop
push
lods
outsb
inc
test
adc
jb
sub
fbstp
data16
and
push
imul
loopne
xchg
push
mov
int
cmc
xor
cltd
xor
fucom
xchg
andl
and
int3
arpl
sti
cwtl
rcrl
cs
mov
jnp
adc
cli
dec
fimull
cmp
addr16
ja
inc
sti
jns
push
jb
movsb
dec
lods
mov
push
xor
shlb
in
sub
inc
jle
jge
xor
mov
xchg
mov
rcrb
sar
lahf
int3
sahf
mov
add
jl
dec
cmpsl
sub
nop/reserved
mov
lahf
cmp
cmpsb
inc
or
sub
or
pop
faddl
shlb
ret
imul
xchg
or
sub
push
popa
stc
dec
cld
bound
andb
and
jl
stc
add
std
or
fwait
mov
add
cmp
rcrl
jns
in
mov
hlt
xchg
enter
icebp
ret
cmpsb
push
ret
xchg
lret
xchg
cmpb
mov
ljmp
rcrb
adc
jg
popf
lcall
call
test
xchg
lods
pop
repz
pusha
lds
jmp
jne
jecxz
cmpsl
sub
add
out
or
aad
test
jp
mov
cmp
add
mov
or
add
or
imul
dec
and
or
push
call
lea
subl
push
add
in
outsl
dec
mov
xlat
or
xorl
cmp
dec
divl
xchg
inc
ret
adc
mov
pop
mov
ljmp
adc
bnd
pusha
push
es
sbb
mov
pop
push
cmpsb
or
xchg
cmpsl
xor
repz
jo
popa
push
or
je
clc
cmp
popa
cmp
push
es
sub
mov
mov
xchg
inc
sbb
cmc
push
lcall
ja
pop
and
in
hlt
and
in
push
adc
lea
int
mov
cmp
lahf
scas
push
push
and
push
mov
sub
mov
fadd
mov
xor
sub
sub
pop
popf
inc
push
fwait
in
jle
sub
into
push
push
fcom
loopne
mov
daa
int
insl
xor
pop
mov
jns
push
ss
dec
shlb
lret
hlt
pop
mov
pusha
cmpsl
aaa
inc
push
push
loope
dec
popf
sub
sub
push
dec
ss
add
cwtl
xchg
lds
or
hlt
mov
loopne
hlt
outsb
out
push
inc
test
repz
mov
jl
aam
add
pop
mov
pushl
dec
idivl
cmp
mov
out
adc
xchg
js
daa
out
inc
insl
mov
iret
ljmp
test
jno
sbb
xor
andl
add
ljmp
imul
ss
and
adc
imul
ss
lcall
pop
mov
insl
add
dec
push
popa
sahf
mov
stos
imul
push
dec
mov
mov
xchg
lods
sarb
mov
mov
inc
popf
imul
or
push
push
push
shll
stos
sub
jb
adc
mov
pop
mov
test
adc
imul
pop
pop
pop
or
add
mov
add
jae
test
sbb
pshufw
xor
repnz
pop
or
pop
pop
lcall
mov
frstor
int3
adc
shll
jne
sbb
dec
movb
mov
fnstcw
out
shl
pop
aaa
mov
jbe
das
enter
les
jnp
push
out
mov
mov
jg
adc
sbbb
in
inc
popa
jp
jle
mov
mov
push
push
and
sbb
push
and
les
loop
xchg
outsb
shll
cmp
jmp
stos
adc
pop
inc
mov
mov
push
xor
mov
fdiv
lret
adc
sahf
fidivrs
inc
push
pop
clc
dec
inc
adc
cmp
jmp
sbb
hlt
jp
pop
mov
pop
mov
sbb
dec
push
cmp
push
stc
dec
cmpsl
cmc
adc
and
jb
inc
cmp
mov
add
mov
xor
sti
xor
scas
ss
jecxz
movb
filds
idivb
mov
cmp
push
lock
pop
and
add
sub
outsl
mov
xchg
mov
push
cli
das
jns
negb
add
sbb
in
call
mov
adc
push
jb
sub
mov
cmpsl
jecxz
inc
or
jne
aas
mull
push
mov
adc
out
popf
rclb
cmp
dec
mov
lret
sub
mov
rorb
inc
pop
loop
mov
push
xchg
cmp
stos
adc
decl
inc
mov
jle
mov
das
lock
pop
rcrb
test
dec
call
xchg
mov
sub
mov
or
and
jmp
je
test
loopne
and
dec
lahf
sbbl
mov
jmp
daa
in
mov
pop
xor
outsb
push
mov
call
inc
int3
mov
jmp
jno
aaa
push
popf
add
sub
enter
add
arpl
test
mov
faddl
jbe
mov
xor
jno
push
movb
add
sarl
jnp
pop
je
sub
fsubr
push
pop
mov
inc
icebp
dec
lmsw
xchg
xchg
jp
lods
xor
fwait
popa
ret
enter
push
std
imul
sub
dec
out
lcall
daa
outsb
sbb
leave
sbb
out
push
xor
jmp
fcoms
idivl
xor
hlt
xchg
stos
xchg
pop
or
xor
test
inc
jbe
testl
daa
cmp
xchg
ljmp
xlat
mov
lock
jne
int3
mov
add
out
imul
je
imul
imul
lret
jbe
xchg
rclb
addr16
ror
daa
in
inc
push
into
test
ja
insl
outsl
xchg
imul
mov
dec
ret
push
in
sbb
pop
movsb
push
cmp
fsub
add
cmp
jns
mov
xchg
std
int3
in
push
nop
mov
fs
clc
jl
inc
pop
mov
mov
cmp
mov
and
inc
sbb
xchg
ss
fidivs
ljmp
sub
cmp
add
mov
mov
push
repnz
inc
or
cmc
inc
ret
jnp
movups
repz
sbb
cli
in
repnz
ja
xchg
jge
dec
bound
pushf
js
leave
dec
stos
enter
sub
hlt
cwtl
cmp
lods
js
mov
arpl
fs
mov
das
mov
call
das
jmp
add
inc
or
jno
xlat
jp
popa
adc
or
rorl
jp
in
sbb
sahf
loop
cmp
std
or
fimull
adcb
mov
xchg
dec
xchg
xchg
sbb
mov
mov
imul
cvtps2pd
mov
paddq
or
out
ljmp
subl
icebp
xor
test
pusha
push
fwait
into
bound
push
popf
push
inc
pop
xchg
punpckhdq
mov
ds
inc
sbbl
popf
jns
icebp
enter
je
enter
inc
ljmp
push
fnstcw
dec
jp
out
push
pop
add
dec
push
lret
pushf
lods
mov
inc
jmp
mov
mov
lret
std
sub
xor
dec
ret
and
mov
or
xor
push
movsl
mov
loopne
sti
es
jb
cwtl
dec
js
or
jg
bound
inc
cmc
mov
dec
push
dec
xorl
movb
popa
dec
mov
sbb
push
iret
lret
imul
lea
push
mov
test
push
mov
and
cmp
in
lock
nop
lds
shl
push
add
xor
and
sbb
sbb
mul
jg
aaa
cmp
pop
mov
les
dec
fldln2
add
jl
jo
xor
dec
xor
movsl
pop
mov
push
repz
mov
cltd
inc
test
lcall
push
pop
movsb
dec
adc
mov
xchg
rorb
pop
sbb
add
sbb
cmpsb
cmc
xchg
les
dec
push
xor
jl
icebp
mov
dec
das
mov
stos
dec
sbb
pop
adc
add
ss
jb
mov
into
xchg
sbb
rcr
pop
ss
mov
sub
sub
out
pop
outsb
sbb
inc
cmp
inc
test
cmp
lods
mov
push
jmp
dec
mov
cmp
dec
xor
xchg
js
out
push
pop
jp
mov
mov
fisttpll
mov
adcb
repz
shll
xor
call
xor
mov
inc
gs
push
inc
dec
and
add
dec
test
xor
jbe
loopne
aaa
adc
jno
inc
flds
and
in
loopne
gs
xor
mov
int3
mov
sub
test
lods
or
icebp
sbb
popa
std
fstpt
adc
ja
push
aaa
lcall
imul
pop
jbe
jns
add
push
std
bound
fildll
mov
or
inc
push
xlat
xchg
mov
xchg
mov
ds
cmp
into
adc
popf
add
mov
pushf
pop
cwtl
das
push
mov
call
outsb
out
cmp
jo
and
add
or
push
sbb
flds
cltd
pop
jns
push
inc
mov
pop
lea
popa
rcpps
sbb
sbb
fnop
jo
popa
pop
fisttps
pop
pop
push
cmpsb
sbb
push
inc
sbb
fstl
arpl
inc
loopne
mov
outsb
add
jo
loopne
xor
cs
push
sub
jg
arpl
xlat
negl
enter
adc
movsl
mov
or
pop
sub
xor
cld
push
sbb
jmp
mov
push
icebp
add
das
pop
mov
mov
dec
xor
mov
out
jae
jle
add
pop
and
xor
push
sbb
add
xchg
sub
mov
xchg
cmp
xor
insb
mov
adcb
push
stos
xchg
fstl
push
sysexit
cli
int
pop
push
mov
cmp
and
push
lea
lods
xchg
gs
movsb
dec
cmpl
mov
in
mov
or
mov
ret
mov
xchg
cmp
sbb
push
mov
and
dec
mov
cmp
int
mov
add
pushf
in
testl
xor
cmp
sbb
jo
out
dec
mov
push
xor
test
out
xchg
jmp
hlt
mov
jl
xchg
rcll
scas
xchg
push
xchg
daa
jae
popf
enter
iret
sub
mov
xor
xchg
in
jbe
cmp
cpuid
sahf
das
xor
add
icebp
push
cwtl
fcmovnu
les
dec
ret
lretw
cs
in
xchg
js
xchg
mov
mov
jne
cmpsb
lcall
cld
inc
jmp
xor
enter
adc
mov
shl
scas
in
fnsave
popa
inc
mov
pop
cmp
inc
cmp
xor
adc
adc
adc
cmp
xchg
clc
mov
pusha
mov
out
cli
movsb
fptan
nop
je
aaa
iret
add
jle
fcmove
mov
mov
inc
fs
jge
negb
xlat
mov
mov
xchg
rorb
sub
stos
push
scas
cmp
mov
mov
repnz
jg
add
insl
decl
lods
cmp
movsl
mov
jo
inc
jnp
mov
pop
mov
jno
cltd
aas
cmp
cmpsl
sub
cmp
inc
add
dec
jecxz
outsb
sub
jb
xor
arpl
dec
adc
xchg
xor
ljmp
adc
mov
aam
adc
stc
push
mov
jl
xor
int
adc
xor
lods
sbb
or
lret
add
pushf
and
aad
or
out
push
mov
jmp
sbb
mov
mov
pop
subl
rcrl
mov
or
pop
push
sti
fnstenv
test
ljmp
shl
out
popa
bound
out
jno
call
out
ret
xchg
pushf
leave
xchg
popf
push
push
pop
lahf
rorb
aad
xor
out
fnstenv
cli
insb
mov
mov
and
cmpsb
sub
xchg
cs
dec
test
ja
xchg
sub
mov
in
mov
fdivr
jge
inc
ret
inc
mov
or
pop
pushf
cmpsb
mov
cmpsb
je
loope
inc
push
call
pop
mov
xchg
mov
add
mov
pop
stos
cs
sbb
and
pop
pop
jne
xchg
das
jne
cmp
pop
mov
jo
mov
mov
arpl
add
dec
jecxz
mull
not
jg
mov
mov
mov
xor
push
outsl
fst
mov
push
fucomip
ljmp
dec
cmpsb
xor
mov
jge
mov
hlt
cmp
in
xor
inc
les
push
dec
mov
fnstenv
pop
mov
xorl
js
and
out
mov
sbb
jl
push
out
int3
ss
mov
std
stc
fwait
shrb
movsb
and
in
stos
dec
and
sbbb
xor
cmpsb
sub
inc
inc
jae
xor
mov
jl
nop
mov
pusha
mov
icebp
mov
ret
in
mov
mov
mov
jge
jb
lods
or
dec
add
pop
cmc
mov
sub
inc
jmp
cmp
xor
mov
fcompl
cmp
fadds
sbb
je
dec
dec
dec
sbb
sbb
pushf
cmp
jno
xchg
push
push
jo
jg
push
pop
aaa
clc
jle
shl
dec
add
mov
out
pop
push
xor
call
jmp
lcall
jg
ja
sub
iret
pushf
cmp
xlat
and
sahf
mov
arpl
lock
mov
fdivr
push
popf
scas
jg
mov
pop
push
xor
dec
call
scas
sub
pop
in
cmp
fimuls
test
dec
lcall
sbb
push
movsl
js
out
xor
push
sub
pop
addr16
cld
stos
dec
in
lea
push
mov
xchg
sub
les
lods
in
pusha
test
xlat
mov
lock
jae
outsl
inc
mov
sub
insl
fcmove
adc
test
test
mov
dec
inc
mov
xor
rol
sbb
and
daa
loope
lods
xchg
lahf
outsb
aam
adc
xchg
arpl
ret
std
or
push
repz
and
jnp
lret
jmp
xor
cmpsb
aam
mov
fcmovnbe
call
sahf
cmp
pop
subb
pop
andb
hlt
daa
leave
jbe
scas
xchg
imul
and
in
adc
sbb
stos
xchg
adc
mov
repnz
cmpb
inc
sbb
and
dec
and
mov
insb
add
cmp
or
mov
inc
inc
sub
inc
fnsave
push
out
mov
scas
nop
aad
fwait
push
jg
xor
aaa
push
shll
lcall
insb
mov
jne
push
sbb
inc
or
lods
adc
cltd
lret
clc
test
pop
call
xchg
out
jnp
inc
cmpsb
test
dec
and
ficoms
add
mov
push
loope
mov
cmp
cmpsl
xchg
test
enter
cmp
or
push
pop
mov
sti
push
dec
jl
sub
pusha
cmpsl
in
mov
or
test
and
dec
push
pop
jae
xor
xchg
sbb
scas
in
cld
sbb
dec
cmp
pop
mov
es
cwtl
mov
add
sub
mov
and
adcl
sub
or
out
inc
sub
adc
ja
fldenv
push
sbb
cmp
in
mov
pop
jmp
mov
sti
in
dec
mov
stos
dec
cmpsl
cmp
ss
jp
jbe
mov
cmpsb
test
pop
int
out
sbb
cmp
popf
insl
ss
call
out
pop
sti
mov
jl
std
test
cmpl
or
sub
mov
stos
add
fs
pushf
outsl
movsl
sbb
icebp
notl
cltd
xor
clc
mov
adcl
movsb
jle
adc
sbb
mov
sub
push
push
push
nop
lahf
lahf
cwtl
cli
in
cli
add
cmp
mov
jg
xor
push
push
mov
push
cmp
mov
movsl
int3
mov
cmp
mov
out
xchg
sbb
mov
movsb
movb
lret
jp
aam
cmc
out
and
popa
mov
jo
aaa
test
js
pop
jae
aaa
mov
cmp
sub
into
in
pop
dec
ss
sub
jmp
shrb
pushf
pop
out
lea
add
inc
pop
mov
je
mov
jne
aad
xlat
popl
inc
jg
insb
out
insl
adc
mov
sti
cmpsl
test
dec
cmp
and
fchs
inc
sbb
icebp
cmp
push
and
imul
imul
and
xchg
cmp
test
outsb
ljmp
sbb
pop
popa
xchg
mov
jae
mov
stos
rcl
add
xchg
rcrb
dec
sti
int
sub
cwtl
testb
jns
stc
jno
sub
repnz
dec
fildll
rcrl
shll
sbb
outsl
jmp
xor
lods
cmp
std
mov
cwtl
fldt
cmp
dec
clc
nop
fstpl
and
fildl
lcall
or
xor
insb
mov
sbb
nop
les
lods
pop
les
cmc
xor
mov
xor
add
leave
gs
cld
pop
push
into
mov
aad
mov
jo
icebp
imul
and
jmp
and
mov
lret
in
sub
jmp
leave
inc
pop
cltd
inc
xchg
sbb
push
sub
das
pop
mov
lret
jecxz
ljmp
push
jecxz
fwait
in
pusha
nop
clc
xchg
lods
sub
mov
sbb
xchg
testb
flds
adc
stc
cmpl
insl
jle
xor
sbb
test
pop
iret
add
data16
lret
ds
sbb
es
aad
xchg
ficoml
std
or
push
inc
xchg
mov
fadd
aas
jnp
sub
fcmovne
iret
jne
mov
lcall
imull
negb
sbb
push
les
and
popa
fdivr
int
gs
inc
mov
inc
adc
sub
je
pop
jns
data16
mov
cmp
cmp
xor
dec
out
pop
sti
fwait
adc
mov
repnz
shll
cltd
add
scas
xchg
sarl
mov
stos
das
enter
data16
daa
pop
std
push
mov
jle
aas
pcmpgtb
inc
xchg
mov
sub
sbb
daa
loop
dec
je
and
push
leave
xchg
cmp
dec
jae
cwtl
sti
mov
icebp
imul
imul
popf
test
cltd
xchg
iret
jle
adc
cmp
cld
or
int3
cmp
dec
fs
push
mov
dec
cmpl
xchg
xor
loope
out
mov
jl
inc
movsb
out
imul
cmpsl
jne
adc
push
lret
push
add
insb
sbb
popf
pop
stos
xor
arpl
push
or
xor
mov
imul
aaa
cmpsb
jge
int
push
imul
addr16
jbe
sub
pop
sbb
shr
outsl
pushf
mov
sbb
add
into
ja
ja
test
push
std
and
cmp
jecxz
cld
repz
xor
jg
fdivr
gs
out
inc
jne
ds
lods
fmuls
and
stos
stos
test
mov
mov
lea
gs
out
jp
test
out
add
xchg
shl
sbb
popf
dec
dec
or
sti
dec
aas
sbb
and
or
mov
cmc
jge
insl
push
dec
mov
push
and
iret
sbbl
into
push
dec
xchg
xchg
fstpt
lahf
mov
je,pt
mov
repnz
int3
je
xchg
sbb
scas
adc
push
in
or
icebp
jl
enter
jae
or
cs
adc
iret
test
ret
daa
dec
jge
movsl
cwtl
sub
pop
cmp
xor
pusha
std
subb
mov
add
xor
xchg
sub
ficoml
lahf
mov
xlat
pop
cmp
jle
pop
nop
mov
cmp
xor
jp
ljmp
push
popa
ss
push
clc
pushf
inc
sub
aad
cmc
lahf
inc
jge
push
mov
je
in
scas
fsubrl
adc
setb
or
enter
les
add
movsl
mul
push
xchg
mov
leave
aam
jnp
sub
outsb
add
xchg
enter
push
jno
cld
out
inc
mov
outsb
repz
jae
das
arpl
lret
push
fistps
adc
sbb
mov
adc
popa
lock
inc
ficompl
mov
jbe
rcll
call
stc
xor
andb
sbb
ror
cmp
add
mov
movl
fistl
nop
shlb
mov
pop
fisubs
fcomp
ss
sbb
lods
jl
pushf
or
dec
xchg
lock
mov
inc
leave
jmp
fs
mov
dec
mov
add
pop
call
aas
cwtl
fsubrs
pop
repnz
jbe
in
fmuls
mov
dec
mov
mov
inc
cli
shll
cltd
sub
cmp
idiv
adcb
inc
jle
sbb
sbb
or
ficoml
mov
call
jnp
fdivp
or
lea
std
stos
out
dec
mov
hlt
add
dec
lods
xchg
inc
mov
push
pop
outsb
sub
mov
xchg
pop
movsl
std
cmp
test
xchg
out
mov
in
cmp
mov
movsb
cmp
mov
nop
cmp
lods
aad
jb
stc
in
bound
out
sub
ret
frstor
pushf
loope
pop
mov
and
popl
fisubrl
daa
cmp
pop
fcomps
inc
xchg
jge
lcall
fldl
fsincos
mov
xor
jne
out
cmp
out
scas
fwait
outsb
lret
dec
pop
cld
push
mov
xchg
testl
push
lock
sbb
imul
mov
roll
xor
out
clc
nop
push
xchg
outsl
and
cmp
ret
test
sub
cli
lret
leave
jl
sub
mov
inc
xor
test
shrl
add
packuswb
ss
jae
es
cmc
imul
shrl
jg
xor
icebp
test
popf
mov
stc
adc
pop
cmpb
fwait
add
adc
fwait
stos
bound
ss
iret
xor
fdivs
or
dec
xor
push
mov
push
or
pop
andl
adc
ljmp
push
cs
xor
aam
push
or
xchg
sub
jne
scas
pop
xchg
shlb
insb
jge
mov
lret
out
mov
push
lahf
rcr
add
mov
cmc
cmp
movsl
int
pop
pop
fs
shrb
lods
xlat
orl
inc
adc
subps
cmpsb
and
movsl
jg
fistpll
pop
nop
arpl
cwtl
fisttpll
cmp
clc
mov
xor
js
pop
or
xor
lods
sbb
int3
in
jp
sbb
inc
jl
cmpsb
popf
jp
leave
sbb
cli
add
fst
pop
dec
push
sbb
inc
ss
arpl
mov
out
pop
cmc
lahf
mov
in
cmp
xchg
sub
xor
and
imull
ficoms
adc
fs
cwtl
xchg
pop
fcmovnbe
adc
xchg
loopne
dec
repnz
loope
push
arpl
in
inc
push
jp
popa
fs
aam
outsb
adc
imul
adc
lret
insb
mov
sub
sub
movsl
sbb
fdivl
jnp
sub
in
cmpsb
fisubrs
aad
jg
jle
js
cmp
std
mov
fldpi
arpl
jne
push
or
xor
adcb
xor
cs
scas
push
popa
nop
inc
adc
jmp
xchg
xchg
or
fstps
push
test
iret
rorl
push
xchg
cmp
bound
es
adc
sub
dec
pop
rolb
inc
mov
ffreep
data16
ds
xchg
and
xchg
jae
outsb
fsubrl
inc
or
mov
or
pop
lahf
and
pop
insl
lret
lahf
push
fcmove
cs
xchg
jp
popa
movl
pop
adc
idiv
lret
xor
mov
push
scas
inc
pushf
in
out
loop
rolb
push
mov
scas
fimuls
mov
pop
xchg
jbe
push
pop
sub
iret
xchg
out
in
inc
and
push
fs
das
sbb
pop
and
fimull
dec
xor
lods
ss
pop
lods
pop
loope
popf
jae
sti
out
andl
aaa
lahf
mov
push
test
mov
roll
adc
int
insl
hlt
or
imul
call
repnz
mov
dec
cmp
pop
lret
jnp
sub
imul
xchg
into
cwtl
xlat
and
fldl
or
popf
mov
leave
mov
testb
mov
dec
cwtl
adc
cmp
imul
sub
mov
mov
pop
insb
sub
xchg
pop
mov
mov
cs
das
mov
daa
mov
push
inc
lods
pop
mov
rcrb
pop
popa
jl
lea
jne
and
ds
push
add
or
cld
jp
dec
sub
enter
daa
sbb
and
or
xchg
jnp
js
test
jnp
out
dec
adc
xor
out
xchg
repz
int3
cmp
or
movsb
sub
sub
repz
aam
mov
jg
jl
add
jl
or
sub
push
cmpsb
mov
pop
pop
pop
xchg
mov
and
jae
jmp
popf
mov
and
shrb
push
lcall
int3
scas
fwait
call
pop
inc
add
jle
ja
sbb
mov
mov
push
fstpt
lds
jo
popf
cmpb
call
xor
insb
shll
xor
inc
push
sbb
imul
sahf
ficompl
pop
ja
int3
push
sahf
inc
test
out
inc
adc
add
dec
cli
mov
add
push
and
inc
pop
pusha
lahf
call
out
in
jns
dec
das
inc
inc
pop
lahf
mov
cmp
mov
clc
xchg
add
insb
jge
sub
lahf
push
or
pop
scas
rclb
xor
dec
scas
add
das
movsl
insl
cmpsb
sbbb
enter
test
sbb
mov
out
out
fdivrl
inc
cmp
push
ss
cmpsl
lret
jo
stc
and
mov
adc
int
push
pop
dec
inc
dec
fists
ret
xor
out
out
pop
pop
fmuls
push
out
dec
adc
or
push
cltd
cmpl
lods
loope
adc
andb
pusha
or
in
xor
sbb
insb
dec
dec
add
sbb
add
into
mov
xlat
mov
push
test
or
jns
call
mov
add
pop
inc
push
mov
dec
adc
fs
or
sub
push
pop
subb
xor
nop
in
nop
jge
data16
mov
cmp
xor
jp
and
dec
call
insb
cmp
or
and
dec
pop
pop
and
rcrb
jae
mov
dec
mov
mov
shl
xor
dec
add
jnp
pop
shll
rclb
loopne
in
xchg
scas
in
cwtl
insl
lcall
adc
mov
jbe
xchg
xchg
inc
xor
add
enter
lds
sbb
les
insl
repz
jnp
lea
loopne
cli
jmp
adc
popa
outsl
cmp
orb
xchg
push
xchg
sub
repnz
lcall
push
pusha
faddp
rcrl
pop
in
jmp
cli
daa
sbb
mov
lret
jl
dec
jno
push
mov
inc
sbb
stc
pop
dec
inc
sti
mov
notb
aad
hlt
test
dec
push
leave
mov
je
test
out
mov
imul
stos
mov
ss
adc
rolb
jne
push
cwtl
cmp
mov
cmp
inc
push
dec
push
out
xor
mov
aas
loop
mov
jbe
inc
lret
dec
fwait
sti
cmc
xchg
insb
push
add
sub
ss
enter
pop
in
mov
stos
ret
movsl
jbe
call
cmp
or
mov
clc
push
pop
inc
xchg
lds
shll
mov
dec
mov
fs
insb
mov
daa
push
iret
push
sarl
adc
xor
sbb
in
in
fimuls
jg
dec
push
and
or
cmp
mov
and
dec
sbb
cmc
push
in
jmp
out
stc
pop
enter
imul
mov
loopne
cwtl
mov
push
out
pop
pushf
or
jb
mov
inc
xor
sub
clc
xchg
pop
sub
nop
add
jge
jno
mov
loope
scas
adc
xor
sub
jmp
pop
movsb
cmp
loope
andb
cltd
cltd
inc
or
movsl
cmp
mov
xorb
push
int
mov
icebp
cli
jno
and
push
insl
incb
repz
into
push
inc
lret
push
pop
das
shrb
sarl
stos
sti
mov
mov
jns
lahf
movsl
stc
add
dec
mov
mov
inc
outsb
leave
xchg
push
and
adc
push
daa
xor
insb
addr16
xor
cmpsb
fsubrl
movsb
sbbb
push
jg
xlat
lahf
xlat
pop
ret
add
mov
mov
xchg
sub
or
es
dec
sub
lds
adc
out
daa
mov
adc
mov
push
enter
ss
stc
jp
jo
jmp
lret
push
jg
push
popf
jl
sub
cwtl
sbb
xchg
add
add
inc
int
daa
fnsave
repnz
jge
mov
mov
rorl
mov
xor
pop
xchg
push
jnp
adc
push
sub
enter
ss
ljmp
test
loopne
xacquire
dec
add
fs
out
xchg
mov
into
dec
fucomi
pop
adc
lods
pop
loopne
call
gs
loope
mov
out
mov
xchg
dec
jge
dec
shlb
mov
loope
ret
adc
into
xor
cmp
popf
add
sbb
shll
out
adc
pop
fwait
lock
adc
jns
mov
mov
lock
js
cmp
mov
out
out
push
lock
sbb
jo
pop
loope
sub
jle
out
mov
xor
adc
jnp
aam
jo
mov
mov
or
xchg
xchg
adc
dec
cmpl
xchg
iret
mov
pop
rcl
jmp
out
enter
push
xor
test
jmp
movsb
mov
andl
push
mov
addl
xor
inc
inc
lcall
sbb
dec
or
add
movsl
pushl
test
ret
ja
lock
lret
fwait
xchg
fidivrl
icebp
pop
sbb
lret
mov
push
sub
je
push
add
in
xchg
mov
lock
aad
sub
pop
xchg
imul
xchg
addr16
jmp
inc
test
inc
mov
mov
jecxz
pop
loopne
cmp
add
mov
in
fnstcw
or
jg
adc
test
cwtl
cwtl
arpl
aad
lcall
pop
sbb
jns
out
push
repz
ror
data16
int
imul
and
mov
fprem
shrl
push
dec
stc
push
and
outsb
out
pushf
test
xchg
icebp
pop
mov
mov
or
push
loop
in
jbe
mov
adc
fsub
fldcw
sub
imul
icebp
call
fadds
fwait
mov
testb
enter
sar
pushf
and
lea
test
jl
lret
imul
and
testl
mov
and
or
pop
outsb
call
pop
mov
pop
gs
fwait
fwait
xchg
pushf
jl
pop
pop
in
clc
or
xchg
mov
callw
jp
fisubs
push
inc
je
mov
out
push
pop
mov
mov
cmp
jno
push
dec
cltd
xor
lock
cld
xchg
pushf
xor
add
mov
push
lods
jns
pushf
or
mov
inc
lcall
add
ret
ljmp
popf
arpl
into
mov
sbb
insl
mov
or
sub
sbb
sub
call
jns
mov
out
dec
sub
lret
popf
inc
push
mov
jbe
js
int
sbb
shrb
test
std
cli
iret
sub
std
push
sub
insl
inc
divl
lods
call
jmp
nop
imulb
add
pop
scas
xorb
shlb
jno
in
xor
push
mov
jb
arpl
dec
xor
daa
cwtl
dec
pop
imul
int
inc
inc
or
jae
fistps
adc
arpl
fwait
cmp
call
stos
lret
fstpl
push
push
in
mov
imul
xchg
add
mov
scas
adc
mov
fistpl
cmp
ja
sahf
in
sbb
xlat
scas
push
inc
push
enter
mov
int
xor
test
test
fcoms
xchg
xorl
mov
xchg
sarb
pop
shll
mov
outsl
shrl
mov
add
ret
mov
adc
xor
or
adc
sub
aas
sub
ljmp
test
push
aas
neg
jmp
inc
xorb
sbb
mov
add
clc
aad
lret
call
pusha
nop
cmc
push
xor
or
dec
test
mov
or
enter
mov
sbb
jbe
jp
pop
xchg
pusha
push
inc
test
mov
sbb
xor
insb
xchg
and
lret
and
or
or
pop
dec
sti
scas
dec
and
push
insl
or
xor
push
lcall
mov
aam
out
mov
mov
and
pop
stos
dec
insl
xlat
push
adc
out
adc
cld
cmp
in
stos
popf
lret
and
push
nop
push
insb
pop
cmp
fsubs
push
or
sub
popf
and
loope
mov
adc
aas
add
jns
nop
mov
pop
or
fs
pop
push
sub
cmp
andb
inc
xchg
movsl
fs
dec
fsubl
and
xrelease
jge
pusha
pop
insb
mov
data16
mov
cmp
fs
enter
dec
test
jl
jnp
cli
pop
mov
in
stos
outsb
andl
mov
sahf
imul
mov
fs
gs
dec
jo
mov
aad
push
jmp
mov
sbbl
rol
dec
mov
out
and
push
sub
daa
mov
add
fnstenv
shll
sub
int3
mov
out
arpl
in
adc
jmp
and
sbb
outsl
mov
cmp
xchg
adc
jno
adc
mov
xchg
jge
bound
push
adc
or
mov
xchg
es
push
loopne
xchg
jge
data16
lods
into
je
je
hlt
fwait
das
sub
adc
out
jl
cmc
xor
push
sub
fisubs
pop
ret
xchg
jp
push
or
repz
sbb
call
mov
lcall
xchg
adc
fdivrs
mov
out
stos
lods
pop
rolb
negb
sub
jle
rcr
mov
insl
std
stc
sub
or
out
jo
test
lock
jno
push
sbb
pop
fucom
pop
test
fstpt
in
fistps
inc
and
push
dec
dec
hlt
mov
lret
mov
sbb
add
data16
xchg
mov
mov
lahf
call
mov
aas
das
pop
lahf
in
jae
in
cli
filds
inc
add
dec
jecxz
mov
dec
fisubrs
bnd
aas
xchg
pop
ret
sub
lea
andb
repz
leave
pusha
jbe
into
stc
inc
fcmovnb
loop
loop
loopne
push
mov
xchg
add
fistl
push
bound
adcl
mov
and
mov
call
repnz
fwait
dec
cmc
orl
lds
fnstenv
and
fcoml
dec
daa
push
xchg
pop
jb
sbb
pop
imul
mov
ljmp
adc
dec
es
push
rol
or
in
mov
mov
xchg
sbb
jae
fsubs
inc
loopne
push
cmc
push
addr16
out
jnp
push
add
and
js
cs
popf
mov
fisttpl
scas
jnp
decl
out
test
jle
lcall
xor
dec
adc
or
push
shr
sub
enter
inc
mov
insl
sbb
dec
mov
or
and
xor
aam
aaa
cmpsl
mov
sahf
add
jmp
enter
into
sbb
dec
mov
fstp
mov
aam
pop
mov
aam
push
pop
jmp
leave
adc
mov
push
daa
js
stos
or
shl
nop
test
sub
sahf
fwait
aad
jmp
cmpsb
out
xlat
in
xor
or
in
jbe
stos
mov
pop
xor
mov
mov
adc
jns
enter
and
adc
cmpsb
lock
cli
iret
cmpsl
inc
adc
mov
push
or
xor
jb
mov
icebp
push
bound
test
and
out
aad
cmpsl
xor
xchg
ss
ret
xor
aad
mov
and
and
inc
cmp
mov
mov
mov
punpckhbw
in
mov
ja
and
stos
cmp
sbb
fs
in
aas
int3
dec
lods
cmp
push
je
gs
ret
leave
mov
add
cmpsl
filds
and
into
iret
icebp
jne
jnp
sarl
mov
jae
sub
inc
inc
mov
mull
andl
and
cmpsb
out
aam
xchg
jle
fmuls
sarb
out
lock
lret
xchg
sub
neg
xchg
jnp
lcall
lret
xorb
rorb
adc
iret
repnz
int3
inc
cmpsb
pmaxub
stos
xor
lock
loop
xchg
hlt
outsl
shlb
lods
and
pop
pop
push
in
and
push
sbb
dec
xchg
xor
inc
adc
aas
jge
scas
ret
push
cmp
clc
mov
mov
pop
mov
sbb
and
and
cmpsl
pusha
movsb
hlt
mov
rcl
pop
pusha
lock
pop
sbb
les
lahf
push
cld
mov
jb
das
in
lods
ret
sub
mov
inc
jnp
adc
insb
sbb
cmp
sbb
icebp
shlb
sbb
mov
outsl
inc
mov
xor
cmpsb
mov
pusha
xor
ret
adc
sub
push
push
sub
add
sbb
in
adc
sbb
push
sahf
ss
sahf
cmpsl
xor
jo
inc
add
scas
jmp
popf
inc
icebp
mulb
or
mov
mov
push
dec
pcmpeqd
clc
lahf
pop
aam
roll
lcall
inc
inc
sbb
push
movsl
mov
dec
aas
aaa
jge
cmp
call
cmp
pushf
rcl
fldenv
xchg
mov
mov
outsb
bound
daa
dec
jle
out
mov
mov
sahf
push
mov
bound
shl
pushf
loopne,pt
loopne
cmpsl
test
int3
lret
jmp
ds
jno
es
mov
pop
mov
iret
jbe
mov
sarl
sbb
jge
out
into
testb
ret
test
mov
xor
jb
jge
cld
xchg
xlat
sbb
inc
ljmp
push
fildl
repz
mov
ljmp
pop
sub
mov
frstor
xchg
dec
sbb
call
or
es
jecxz
shrl
nop
sbb
in
pusha
aam
fwait
xchg
adc
push
push
pop
movsb
inc
add
sbb
cld
sub
sbb
jb
push
xor
rcl
inc
repz
mov
xor
fldl
dec
xchg
push
adc
jae
push
icebp
cmp
inc
pusha
cmp
popf
inc
xor
in
imul
jl
mov
sbb
pop
ja
sahf
mov
imul
sub
shl
les
jg
idivb
inc
cld
mov
les
xchg
fwait
mov
cltd
cltd
jo
aam
xor
js
add
adcb
divb
es
inc
and
inc
add
or
filds
pop
pop
jmp
jbe
push
cmp
fidivl
ds
in
ljmp
dec
gs
in
je
add
iret
mov
xor
aaa
add
xchg
pop
cmp
in
andb
ret
lods
test
incb
es
sti
mov
sub
lds
andb
push
flds
jno
int3
icebp
stos
dec
and
popa
mov
xsave
das
movsl
lods
jb
cmp
and
lcall
cmp
and
or
cs
mov
inc
jns
nop
imul
aad
fwait
arpl
cli
gs
add
decb
mov
xchg
mov
jg
ja
repz
shlb
fcmovb
in
cmpsl
dec
jg
lods
adc
enter
adc
push
mov
stc
sub
stc
gs
sub
ret
insb
sub
push
or
add
xchg
inc
es
fsubl
fistl
add
jo
jecxz
lret
sub
jo
adc
inc
pop
test
lods
add
and
pop
mov
push
gs
adc
nop
or
adc
sbb
imul
cmpb
adc
out
mov
gs
sub
test
pop
xlat
mov
adc
repnz
orb
test
xor
jecxz
cmp
and
add
test
dec
popa
add
cmp
addr16
and
mov
adc
sub
daa
cmp
xor
sbb
pop
stos
pop
push
push
enter
mov
jecxz
fldt
fs
negb
shlb
cltd
dec
fdecstp
clc
pop
out
pop
mov
pop
jnp
pop
adc
xor
scas
mov
in
or
or
pushl
pop
push
pop
sbb
mov
xchg
cs
insl
cld
sbb
and
call
pop
and
xor
pop
es
fnstcw
hlt
out
out
dec
xchg
or
dec
add
shrl
mov
lahf
xchg
mov
push
cmpsb
cs
jg
pop
mov
sbbl
jecxz
sarb
add
aas
xlat
test
aaa
mov
fisttpll
nop
adc
adc
loopne
pop
sub
inc
sbb
xor
test
test
mov
dec
cltd
mov
sahf
pop
adc
lahf
idivl
mov
jns
inc
in
addr16
push
dec
std
push
out
dec
outsl
jno
xchg
inc
pusha
xlat
js
push
adc
mov
leave
or
enter
lret
negb
shll
cwtl
movsl
cmpsl
mov
jbe
mov
jge
outsb
jmp
add
in
test
mov
bound
addr16
jmp
or
mov
insw
push
addr16
das
movsb
jp
imul
cmpsb
inc
mov
add
bound
dec
push
sbb
fwait
test
add
icebp
out
ret
sbb
repnz
mov
enter
in
mov
das
jae
pop
jmp
out
out
repz
mov
out
int3
pop
sub
push
and
push
add
add
ljmp
and
test
lret
and
xor
pop
pop
add
cmpsl
out
xchg
jp
je
and
and
inc
sar
xchg
inc
popf
push
xor
sahf
out
popf
mov
arpl
jnp
push
push
in
push
and
mov
push
mov
jb
icebp
es
inc
sbb
add
in
xor
mov
int
mov
test
lahf
xchg
je
mov
mov
ja
mov
mov
stos
insl
fwait
test
inc
cmpsb
mov
subb
sahf
mov
leave
loopne
lahf
out
lret
xorb
or
mov
mov
mov
jmp
inc
iret
bsr
pusha
push
je
fdivl
inc
sub
xchg
mov
jle
xor
call
cld
push
stc
xchg
inc
fistpll
or
in
mov
pop
mov
sub
inc
mov
rcrl
jb
repz
cmp
inc
dec
xor
das
adc
sub
sub
repnz
mov
push
mov
and
bound
jmp
push
incb
mov
mov
adc
movsb
daa
mov
cmp
test
ja
adc
data16
jae
xor
jge
jl
ja
ret
nop
push
pop
lcall
mov
xchg
xor
ljmp
mov
dec
lahf
loopne
push
stc
cmp
lods
scas
push
pop
mov
mov
jae
pop
pop
mov
xchg
push
sbb
mov
sbb
sahf
pop
fimuls
mov
push
add
push
add
jnp
jne
add
scas
and
mov
push
cmp
imul
sub
lods
push
sti
popa
mov
or
xchg
mov
push
mov
out
cmc
mov
nop
pusha
inc
mov
dec
mov
or
push
sbb
mov
cmp
pusha
std
ret
inc
mov
lods
push
lock
cmc
jl
dec
lea
fwait
xor
adc
mov
add
mov
filds
xchg
and
std
sbb
les
fadds
stos
add
lods
xor
or
hlt
add
dec
sti
nop
cmpsl
fidivl
inc
mov
lods
sbb
mov
iret
roll
push
fwait
lock
je
adc
icebp
mov
call
js
mov
pop
jge
enter
std
int
movsl
or
js
jecxz
mov
bound
mov
sbb
sbb
mov
mov
xchg
jl
push
imul
nop
es
std
add
lods
sbb
sub
in
add
and
mov
leave
xchg
lret
mov
and
int
mov
cmpsb
add
push
das
out
dec
call
xor
bound
mov
cmp
xchg
xchg
loopne
cmpsb
test
mov
jecxz
std
enter
mov
lea
js
popl
notl
and
pushf
rcrb
rorl
sbb
mov
adc
mov
lods
push
outsl
mov
or
into
jg
xchg
mov
mov
lret
test
mov
xchg
jmp
lea
jae
xor
xor
jae
shrb
jle
jns
push
or
sub
cli
loop
fxch
push
mov
fiadds
mov
incl
push
sbb
movsl
outsb
jns
push
call
gs
pop
jecxz
das
push
lcall
cmp
ret
and
xchg
pop
in
outsb
test
imul
fwait
nop
adc
outsb
push
pop
ficomps
movsb
xor
ljmp
mov
call
daa
jle
sbb
inc
popa
ja
push
ljmp
aaa
fsubr
pop
dec
xor
popf
jge
cli
mov
das
jno
pop
subl
add
pop
adc
icebp
mov
int
aad
xchg
icebp
pop
cmp
mov
sub
fwait
jecxz
add
mov
inc
popf
inc
faddl
iret
decb
fsubrp
loope
cmp
rclb
adcl
sub
pop
xor
jno
sub
iretw
mov
push
inc
dec
fsubs
out
out
push
stc
insl
dec
inc
pop
and
fsubp
inc
or
test
std
nop
inc
repz
lods
inc
out
in
add
xor
push
cmp
lods
lea
outsl
push
cmp
push
cmpl
mov
call
cmp
ss
mov
nop
imul
cmc
mov
ret
incb
adc
out
repz
xor
xchg
push
push
imul
in
mov
xchg
repnz
repnz
lret
push
call
sar
or
test
clc
test
movaps
jl
adc
dec
dec
outsb
sub
aam
xor
out
xchg
into
pop
cmp
sbb
leave
push
out
add
xor
call
add
inc
sub
xchg
inc
mov
push
loopne
jecxz
push
ljmp
js
arpl
add
aas
xor
pop
in
lahf
mov
ror
outsl
pop
push
sub
pop
lcall
xor
into
lock
sbb
jecxz
sti
loope
jnp
cmpsl
les
xchg
std
shrb
xor
sbb
push
xor
negb
and
and
cwtl
rcrb
or
mov
mov
and
push
cltd
scas
pop
xchg
inc
xchg
insl
xor
int3
sbbl
pusha
cmp
dec
xchg
aas
adc
xchg
sub
push
inc
int3
fs
pop
popf
lret
cli
push
fstpl
xchg
mov
add
shll
adc
pop
in
sub
ljmp
hlt
scas
mov
hlt
pop
movb
shlb
push
into
lret
out
lock
mov
sbb
pop
inc
popa
aad
movsl
scas
xor
sbb
or
jo
std
cmpsb
fcmove
dec
push
mov
dec
cmp
dec
aas
in
lock
test
iret
adc
adc
inc
cltd
mov
inc
repnz
xor
stos
mov
out
push
aaa
imul
mov
xchg
inc
cmp
into
xchg
lods
loop
or
mov
lods
jnp
add
popl
xor
jb
test
icebp
mov
adc
imul
or
lods
subb
push
data16
xchg
adc
cltd
and
pushl
lahf
push
repz
subb
dec
js
lods
push
cwtl
arpl
xor
in
scas
sub
push
or
push
adc
test
into
fisubl
fwait
xchg
std
daa
pop
xchg
aas
inc
pop
sbb
dec
adc
xor
cli
ds
mov
mov
call
cmpsb
adc
mov
hlt
outsb
out
pop
movsl
lock
xor
inc
dec
or
jl
jle
iret
int3
ds
in
mov
jl
jns
mov
repnz
xorl
sub
mov
cwtl
sbb
sbb
push
jne
inc
fnsave
inc
movsb
or
stos
cmp
arpl
daa
pop
xor
mov
mov
add
jo
adc
push
std
mov
fwait
jg
cmp
pusha
lds
xor
inc
and
cmp
popf
test
push
les
xor
adc
jle
pop
stos
mov
loop
jno
popa
lods
sar
cmc
push
iret
cltd
lods
mov
nop
in
adc
js
jno
xlat
fdivr
mov
fnsave
push
aam
mov
add
sub
test
jmp
add
in
xchg
push
or
mov
inc
dec
xchg
in
stc
xchg
data16
fnsave
xlat
rcll
sbb
xor
pop
lcall
cmp
insb
lahf
push
aad
nop
out
idivb
xchg
into
mov
mov
testl
and
addr16
or
add
outsl
sub
outsb
sub
add
das
fstpl
ljmp
loopne
mov
outsl
xchg
in
scas
leave
sti
xrelease
mov
mov
or
inc
sub
shrb
testl
push
adc
ror
inc
daa
test
pop
sbb
loop
adcl
jge
adc
jmp
inc
xor
xchg
xor
xor
into
mov
mov
mov
adc
insl
xorl
fildl
div
push
je
inc
fldenv
jnp
lods
into
cli
pop
jb
pop
add
decl
movsl
in
xchg
fcoms
inc
mov
repz
adc
pushf
fnstsw
repnz
dec
rolb
mov
shll
dec
adc
pop
fisttpll
or
cmc
or
sub
push
add
test
inc
das
cld
push
mov
add
push
aam
pop
hlt
or
and
popf
loopne
mov
int3
dec
movsl
adc
cmp
les
lds
popf
pusha
aad
aam
push
std
out
jle
ficoml
cmp
dec
loop
iret
das
and
sub
push
mov
sub
jp
push
inc
inc
enter
xlat
xchg
push
add
inc
aas
jp
xchg
xchg
or
mov
add
cli
mov
push
jmp
mov
ret
insb
or
push
push
stos
out
mov
xor
es
mov
aas
xor
sub
dec
nop
adc
xorps
push
sarl
mov
or
in
fs
popa
movsb
ror
in
lret
lods
lea
fmuls
movaps
stc
cmpsl
and
add
clc
and
arpl
jbe
fs
sbb
je
loopne
xor
sbb
leave
mov
out
gs
or
mov
inc
mov
popf
outsb
aaa
lods
push
out
lods
or
mov
push
cltd
adc
rclb
imul
pop
push
push
inc
mov
and
divl
popa
mov
cltd
pop
push
stc
push
insb
inc
loopne
sahf
sub
test
rol
pop
lcall
clc
xchg
push
fwait
imul
xor
outsb
mov
lret
ret
xchg
cltd
mov
pushf
pop
cmp
push
and
or
xor
mov
dec
aam
cmc
ret
lahf
pop
int3
imul
lret
push
orl
push
xchg
shrb
mov
dec
mov
mov
mov
sub
sub
fcmovnbe
aas
aaa
dec
jnp
xor
aad
shl
xor
leavew
or
jmp
push
cmpl
out
and
mov
outsb
xchg
cs
ljmp
sbb
addr16
inc
fldz
fldenv
jle
xchg
xchg
fsts
int
xor
ret
or
mov
pop
popf
xchg
push
sub
add
stc
add
mov
mov
xor
fdivrs
jecxz
stos
insb
sbb
pop
aad
mov
loope
scas
fs
dec
jmp
add
out
ja
cmp
data16
xor
and
pusha
xchg
mov
cmp
das
sub
sbb
dec
mov
cwtl
pushf
pop
push
pop
or
mov
inc
add
and
fwait
jo
inc
mov
out
mov
bound
in
les
jne
push
sub
mov
and
cmp
xor
xchg
insl
fldl
jb
rcr
loopne
cld
xor
int
ret
push
sahf
retw
jle
push
cmp
cmp
cli
or
pop
es
push
cwtl
out
sub
insl
into
jae
mov
dec
leave
test
xorl
rcrl
fists
mov
hlt
cmp
cmc
lret
xchg
rclb
adc
cmp
sahf
sbb
ljmp
xchg
lock
cmp
mov
pop
shrb
rclb
dec
adc
fs
push
popf
insb
mov
adc
pop
test
xchg
add
sbb
call
leave
mov
mov
push
push
xchg
jge
mov
pusha
mov
insb
insb
clts
loopne
dec
cld
push
fstl
loop
jl
lock
adc
mul
mov
mov
xor
popf
pushf
or
lret
pop
inc
pop
repnz
adc
push
jl
adc
jne
and
inc
inc
jno
fadds
aas
add
jmp
dec
cld
pop
daa
mov
enter
shlb
mov
push
and
mov
add
cli
cli
xor
jns
mov
mov
repnz
jl
sti
xor
mov
adc
mov
push
jne
andl
rcrl
or
jne
pusha
jecxz
or
in
sahf
mov
cwtl
orb
add
sbb
mov
sub
pop
aad
xor
lcall
shlb
jl
cmpsl
insb
add
js
mov
lock
int3
shll
sti
ret
dec
sbb
scas
sbb
sub
xorl
int
cltd
sub
mov
mov
jge
add
jno
int
jae
rclb
xlat
adc
ss
jp
or
add
sbb
mov
fsts
fs
setge
jg
stc
insl
mov
flds
push
pusha
pop
nop
scas
fimuls
lahf
imul
jle
push
sub
mov
pop
movsl
std
xchg
rolb
xor
pop
add
inc
push
inc
cli
adcb
dec
lcall
mov
inc
and
repz
jecxz
insb
data16
mov
xchg
lahf
int
rol
lods
rcll
mov
scas
pop
mov
xor
mov
cmp
sti
out
fnsave
push
and
xor
into
daa
loope
mov
xor
xchg
sub
insb
adcb
fnstcw
xchg
test
sbb
cmp
push
push
imul
insl
push
fmull
fwait
call
pop
push
jo
mov
cli
scas
or
fidivrl
nop
cli
or
enter
dec
sub
imul
lret
dec
call
pop
bound
xchg
pop
arpl
imul
out
imul
mov
mov
insl
lds
cmc
int3
ret
push
sub
push
mov
in
cmp
xor
daa
xchg
enter
aaa
rorl
or
pushf
and
iret
cwtl
scas
cmp
mov
adcl
data16
loop
jp
add
lods
inc
cmc
ds
aam
movsb
fcmovnbe
mov
shrb
adc
cli
or
lods
and
jbe
xchg
lea
or
imulb
mov
mov
lret
mov
fdivrl
in
inc
inc
pop
rolb
add
adc
sub
aam
xor
push
pop
mov
pop
fiadds
push
rcl
mov
push
add
aam
test
sub
fcoml
lcall
pop
insb
rol
ljmp
shrb
and
add
push
inc
or
std
inc
andl
pop
movl
ds
mov
push
adc
sub
lock
ja
daa
mov
jbe
and
sub
cld
insb
xchg
push
push
cmc
test
mov
lcall
lcall
dec
test
sbb
inc
push
test
pop
xchg
cmpsl
or
push
pop
or
lods
mov
dec
pusha
dec
jp
insl
dec
cmp
or
jb
shrl
jo
jmp
or
call
fldl
and
imul
jp
bound
rcrb
cld
pushf
add
test
lret
push
inc
mov
filds
mov
je
mov
dec
popf
mov
mov
xor
lret
daa
and
sbb
je
sbb
add
rolb
adc
dec
add
and
in
xchg
jg
in
call
cmpsl
scas
mov
enter
fsubr
jge
and
add
mov
sahf
fstpt
imul
jbe
mov
gs
insl
idivl
call
mov
push
inc
jle
addr16
mov
mov
cmp
imul
lret
imul
dec
pop
mov
ret
mov
mov
xor
and
in
push
data16
add
gs
jge
and
inc
in
aas
sbb
lods
adc
and
mov
mov
mov
jge
pop
fwait
fwait
inc
std
mov
inc
cmc
ja
push
lock
int3
mov
shll
stos
sub
inc
fbld
pusha
data16
scas
sub
jae
xor
cli
ja
push
mov
or
pop
mov
das
jl
push
mov
fwait
pop
stos
shlb
imul
scas
negb
repz
lods
dec
pop
or
es
push
cmp
mov
sub
sub
add
addr16
shrl
adc
imul
pusha
push
fld
mov
je
mov
xchg
mov
add
mov
cmp
pop
adc
dec
mov
or
int3
dec
jmp
adc
or
cld
jg
jp
mov
jp
add
jb
nopl
inc
lret
icebp
mov
mov
jne
js
icebp
adc
mov
stos
out
xchg
or
movb
lret
pushw
mov
fistpl
addl
leave
leave
rcr
add
and
mov
ja
mov
addr16
lret
cli
repnz
sbb
mov
sar
push
arpl
lret
dec
pop
mov
andb
int3
fldenv
imul
mov
imul
mov
out
push
sub
leave
or
test
sub
lock
nop
sti
sub
fimuls
imul
int3
arpl
loopne
dec
jo
mov
out
push
xchg
fisubs
lods
xor
movzwl
push
gs
sahf
push
jbe
insl
gs
sub
cmp
inc
pop
lahf
add
lahf
ss
shl
jge
adc
mov
mov
lea
xorb
pusha
fcom
mov
push
jbe
xchg
movsl
mov
fistpll
dec
pop
jae
sub
xchg
jns
in
aad
pushf
fnstsw
repz
xor
lock
cmp
push
jmp
and
sbb
lock
mov
inc
pop
push
push
insb
iret
add
insl
mov
or
or
es
push
pushf
cmpb
add
pop
notl
cli
push
or
insb
dec
lcall
pushl
clc
int
cwtl
add
xor
mov
iret
fisttps
out
sub
and
popa
and
mov
and
test
fldl2e
out
hlt
shrl
arpl
stc
xchg
push
xor
xor
push
pop
pop
shll
push
cmp
fdivs
out
or
out
or
scas
sub
cmp
lea
adc
jmp
sub
sub
ud1
mov
aaa
insl
xchg
fcmovnbe
ljmp
fldt
pop
loopne
jbe
fidivrl
fldln2
jle
or
push
mov
sahf
cli
mov
inc
shll
inc
xchg
in
sbb
pop
mov
imul
lods
and
pop
cmp
jns
mov
xor
popf
out
js
dec
dec
insb
ja
lods
inc
dec
int
lock
inc
xchg
mov
mov
test
pop
mov
mov
inc
rcrb
hlt
xchg
mov
shll
sarl
jne
int3
push
and
int3
dec
call
les
sub
jns
aas
fimull
inc
aaa
test
dec
bound
push
xor
adc
xor
int3
into
inc
out
dec
push
orl
mov
loope
adc
mov
add
je
xor
ffree
cmpsl
outsb
iret
inc
mov
test
stos
sbbb
cmp
outsl
jae
out
cwtl
jno
call
cs
movsl
test
xor
xor
shr
aad
jmp
cld
cmp
aad
imul
push
mov
loop
ffree
dec
add
sbb
adc
jmp
orl
jle
repnz
dec
jle
sbb
test
dec
jge
xor
jbe
lret
das
ret
push
adc
ja
pop
pop
xor
popf
ds
pusha
dec
cmpsl
cmp
pop
adc
dec
lcall
pop
js
nop
adc
addr16
mov
sarb
jb
dec
dec
cmp
or
mov
cmpsb
cmp
cld
icebp
popf
add
inc
je
bound
lock
popa
mov
mov
cs
lret
and
mov
cmp
dec
iret
cmp
lods
inc
or
inc
das
mov
adc
out
pop
insl
inc
aad
add
lock
mov
adc
ror
out
push
testl
sahf
jbe
pop
sahf
and
sbb
jle
lds
xor
rcrl
cmpsb
add
or
shll
pop
mov
inc
daa
das
roll
push
repz
ljmp
or
outsl
mov
addr16
push
jmp
popl
pushl
daa
sub
sti
shl
int
dec
push
out
ret
mov
adc
push
jae
jo
cmpsb
pop
or
xchg
fnstcw
or
repnz
pushf
mov
mov
incb
jmp
inc
stc
imul
arpl
dec
out
imul
dec
leave
rcl
stos
fisubrs
mov
lcall
test
inc
into
mov
in
in
out
pushf
mov
dec
popa
jl
dec
adc
push
add
xchg
insl
lretw
mov
adc
inc
cs
mov
and
push
lds
fcomp
push
lahf
mov
add
or
jle
faddl
insl
rcrb
jmp
jae
dec
push
sbb
cwtl
mov
mov
xor
mov
push
xchg
push
mov
mov
inc
arpl
divps
shrb
in
cwtl
cmp
out
out
scas
mov
shrb
inc
negl
scas
ss
and
mov
jp
lods
mov
push
cmp
shl
mov
popa
dec
out
jg
cs
pop
aad
pop
xchg
adc
mov
cmp
outsb
xchg
inc
push
fsubs
in
jo
loope
gs
jmp
or
mov
orl
fdivp
es
xor
aas
in
or
jbe
loopne
sub
inc
adc
add
lcall
clc
cwtl
scas
add
cwtl
push
ret
ret
add
arpl
ss
cmpsl
cmp
clc
and
movsb
and
pop
shll
add
bound
or
lea
shl
cmpsl
jle
loope
lret
arpl
push
lock
loop
lahf
push
mov
js
repz
inc
iret
push
rorl
orl
js
mov
inc
js
mov
fcmovnu
addr16
push
outsl
out
icebp
std
es
dec
push
leave
daa
or
push
fisubl
jmp
mov
jbe
or
mov
cli
bound
dec
aaa
out
or
ljmp
lock
roll
ret
icebp
nop
lods
insb
sbb
mov
mov
and
test
movsl
pop
add
sub
ss
push
pushf
or
ret
ds
repz
ret
loopne
pop
shrb
or
test
int
pushf
xor
push
icebp
adc
fmul
jno
aad
outsb
nop
adc
test
lock
fsubrl
cld
int3
stos
and
dec
adc
mov
testl
adcl
addl
testb
leave
comiss
notb
test
pop
je
mov
cmp
ja
mov
inc
pop
jp
xor
repnz
orb
adc
cmpsl
sub
mov
adc
pop
imul
subl
jne
xchg
inc
ja
pop
aaa
js
ss
fiaddl
xchg
xor
daa
in
movsl
hlt
push
lcall
mov
sbb
jecxz
cmp
lcall
mov
lods
mov
aaa
ljmp
ret
loop
sbb
dec
mov
nop
fwait
test
push
subl
lods
dec
ljmp
dec
pop
push
sti
mov
lods
popf
xor
mov
mov
mov
xchg
test
sarl
mov
pusha
daa
in
loope
icebp
jb
mov
mov
pop
inc
mov
jl
es
pop
push
and
gs
shlb
cs
mov
ds
call
ss
popf
mov
xor
and
loope
pop
les
push
imul
out
mov
sahf
inc
adc
divb
xor
mov
mov
pop
aaa
add
or
outsb
scas
pop
jo
sub
mov
add
rcrb
shlb
mov
add
pop
sub
add
mov
out
xchg
adc
aaa
pop
xchg
mov
mov
xchg
mov
nop
cmpsb
in
int3
dec
cmp
insl
xchg
mov
mov
in
rcrb
mov
out
mov
ret
inc
add
ss
pop
lods
cmp
in
pop
push
dec
push
sub
or
fcoml
frstor
iret
or
dec
fsts
leave
nop
aaa
inc
push
pcmpgtw
sbb
arpl
out
push
mov
call
adc
adc
mov
push
out
xchg
and
sbb
xchg
loope
or
sbb
stos
out
ds
cmpsb
cmp
cmpsl
push
imul
or
enter
cmovl
jns
jecxz
xor
pop
push
cmpsb
inc
imul
clc
filds
test
xchg
or
shlb
stos
outsl
adc
in
out
inc
push
in
cmpsb
mov
pop
or
not
out
sbb
in
ss
pop
xchg
mov
sub
jg
or
andb
dec
pop
pop
adc
ret
push
push
ds
adc
adc
jnp
pop
lds
sarb
mov
cmp
in
sti
mov
int
imul
out
push
mov
mov
repz
aad
lret
loop
lds
pop
adc
jmp
mov
pop
push
dec
xchg
icebp
jns
lods
and
sbb
adc
sbb
pop
inc
mov
out
in
mov
sti
sahf
push
in
sbb
or
mov
or
push
mov
insb
clc
add
or
mov
lahf
mov
mov
fsubl
mov
add
inc
fsubrs
sahf
retw
movups
xchg
stc
lea
sub
test
out
jae
cmp
fwait
jbe
movsb
nop
mov
fs
test
sub
jnp
repz
ficompl
repnz
xor
cmp
pop
xor
roll
xor
daa
int
mov
dec
unpcklps
in
je
lcall
leave
repz
mov
mov
lcall
xor
jg
ret
repnz
jb
std
loop
xchg
je
push
loop
xchg
pop
loop
sahf
jmp
pop
inc
in
jl
sti
stos
pop
out
fdivrl
loope
push
mov
mov
addr16
test
pop
cmp
inc
nop
daa
and
enter
popf
cmp
aas
or
loopne
popa
test
repz
pusha
in
push
ret
jle
mov
repz
xor
test
sub
adc
in
sbb
mov
fwait
ss
cmp
or
cltd
lea
sbb
sub
mov
gs
daa
mov
inc
push
icebp
test
push
shll
cmp
adc
pop
xor
dec
add
call
mov
mov
mov
dec
js
inc
je
repnz
or
lods
push
call
mov
jecxz
enter
cli
lea
addb
shrb
lods
rolb
lods
shrl
scas
cmc
arpl
add
mov
aas
iret
fdivs
ret
mov
shrl
pusha
sub
mov
xor
fldcw
push
mov
jmp
loopne
xor
rolb
fdivs
leave
mov
xchg
das
das
call
pop
add
cltd
xchg
sub
or
mov
insl
add
cmpsb
and
popf
pop
cmp
leave
outsl
xchg
jo
mov
rcl
push
stc
arpl
rorb
mov
or
pop
or
adc
inc
in
lock
sbb
mov
lods
setg
out
jle
push
add
mull
inc
sbb
add
test
dec
outsl
adc
imul
ds
clc
jmp
jg
bound
jno
jno
rorl
mov
mov
fwait
lret
jle
mov
mov
loope
movsb
mov
cmp
dec
aaa
jp
movsl
push
sbb
pop
fcompp
adc
adc
fwait
shlb
or
fs
sbb
dec
inc
fs
jl
lock
bound
and
sub
loope
xorb
sarl
jmp
cmpb
pop
loopne
jbe
lea
test
mov
jbe
sbb
fmuls
leave
mov
xor
ds
fnstcw
out
mov
add
cmp
jbe
scas
lret
dec
aas
je
xor
xorl
jbe
cmc
dec
rol
mov
test
outsb
mov
pop
roll
push
paddsb
lret
sahf
fwait
add
es
aad
pop
aam
cmp
adc
fcoms
dec
ja
fildl
mov
mov
xor
xchg
out
fnstsw
xor
sbb
adc
ficoml
scas
mov
dec
shr
cltd
lcall
inc
gs
lret
jecxz
outsb
and
ret
fisttps
js
fwait
lods
movsl
call
mov
xchg
mov
mov
inc
inc
nop
push
inc
pusha
cmp
mov
out
sub
in
adc
fucomip
cwtl
fidivl
adc
fiadds
stos
dec
pop
xor
dec
jg
repz
in
fisubrl
push
add
pop
pusha
mov
into
ja
and
sub
mov
jno
leave
add
mov
push
push
negl
pusha
mov
out
scas
push
rorl
popf
repz
sar
repz
pop
and
pusha
inc
pop
sub
lea
bound
pop
scas
ds
lret
lcall
dec
mov
gs
sub
mov
sbb
dec
and
or
stos
xchg
ret
iret
adc
leave
je
jns
test
push
fildll
or
fistpl
or
lret
jp
sbbb
or
test
mov
arpl
divb
xchg
cmp
mov
or
cmp
mov
data16
aam
out
test
pop
push
scas
sbb
pop
daa
inc
dec
rol
inc
insl
xor
jae
fmul
les
mov
xchg
cmp
fnstsw
punpcklbw
clc
out
into
jmp
faddl
pop
or
mov
push
pop
out
and
cmpsl
xor
dec
xchg
lea
cmp
push
insb
jmp
pop
jl
testb
mov
call
sub
ret
enter
js
cmp
rcrb
xchg
push
pop
sbb
inc
inc
xor
cmpb
adc
out
es
jl
rcll
and
repnz
movsb
dec
cmp
imul
or
and
sbb
xchg
stos
ja
pusha
xlat
pop
pop
add
outsl
jp
dec
bound
xchg
aaa
call
scas
jbe
gs
je
in
dec
inc
jecxz
mov
inc
mov
sbb
push
sbb
fdivs
in
inc
mov
cmp
mov
sbb
pop
lds
cs
outsb
or
rcrl
je
flds
test
sti
mov
scas
cmp
add
test
gs
inc
sbb
cld
xchg
sahf
aam
hlt
sbb
lods
cvtps2pi
cltd
fildll
xor
and
lahf
and
adc
lahf
movsl
sub
fsubr
mov
out
sbb
inc
jmp
push
xchg
shll
cmp
pop
push
sub
lcall
mov
jbe
lret
stc
shr
out
repz
iret
push
shrl
pop
and
mov
adc
inc
stc
loopne
idivb
dec
mov
jns
int3
sub
icebp
mov
roll
jmp
sti
movsw
dec
jp
rcrl
sub
add
iret
lock
push
pop
mov
fmul
mov
in
add
idivb
aam
sbb
testb
std
mov
push
pop
jmp
push
jmp
add
jmp
dec
outsb
mov
adc
dec
mov
jle
sahf
pop
rorb
addr16
sub
or
mov
sbb
stos
xchg
mov
scas
repnz
xchg
inc
sbb
pop
fsts
dec
push
stc
cli
adc
inc
nop
and
mov
icebp
jmp
jo
xchg
aas
mov
jne
mov
test
push
xlat
adc
or
or
mov
mov
insl
repnz
add
mov
pop
pop
push
in
cmp
cltd
inc
lds
insb
lods
sar
xcrypt-ecb
cmpsl
dec
lret
dec
fisubrs
insb
pusha
repnz
cltd
fs
sti
aaa
sbb
jbe
xor
subb
sbb
sub
cwtl
scas
mov
xor
lds
sbb
xor
push
cmpsb
enter
fwait
ds
dec
pop
jnp
ljmp
daa
pop
add
pop
test
pop
jnp
and
adc
push
mov
inc
imul
cltd
icebp
iret
ljmp
testl
and
inc
ffree
jbe
repnz
jmp
cmpsb
add
sub
or
ret
decb
daa
sub
jl
js
das
dec
movsb
imul
mov
sbb
lods
xlat
pop
jge
xor
jecxz
xorb
xor
or
inc
sbb
ljmp
outsl
pusha
add
push
adc
movsl
cld
pop
jbe
lcall
dec
ret
fisttpl
mov
test
cmpsl
dec
jmp
rcrb
push
dec
loopne
mov
in
cwtl
stc
enter
cltd
or
lock
rcll
inc
dec
dec
fmulp
jae
push
scas
jge
jnp
jo
xor
insb
mov
shrl
aaa
pop
pop
ljmp
xchg
dec
imul
inc
fisubl
sub
arpl
jecxz
ljmp
xchg
dec
fxch
loop
sbb
push
aad
jp
jae
sahf
cmp
mov
jle
out
aaa
mov
sbb
add
enter
pop
add
lods
mov
fstpl
int
mov
jge
cmp
imul
pop
rcl
adc
mov
jg
ret
pop
add
in
icebp
inc
dec
bound
sbb
cwtl
mov
push
imul
mov
sbb
ss
je
pop
insl
shll
leave
cmpsb
push
test
adc
jp
jp
fmull
mov
xchg
dec
inc
adc
pop
cmc
sub
addr16
sbb
in
sbb
pop
pop
fiaddl
xor
sub
pop
pop
push
out
xorb
adc
outsl
outsl
test
or
icebp
mov
into
inc
mov
bound
repnz
dec
sarl
es
adc
inc
ljmp
add
push
lcall
bound
mov
hlt
or
lock
inc
add
stos
int3
mov
cmp
data16
imul
mov
sbb
lods
mov
fisttpll
dec
mov
fdivs
fstpt
dec
lahf
push
jge
dec
and
inc
sbb
in
xor
dec
mov
aaa
adc
xor
jno
test
int
mov
sbb
or
outsb
ss
lahf
sahf
xchg
pop
and
sbb
lods
mov
imul
add
shrb
scas
shlb
sbb
xor
and
dec
pop
mov
lret
jmp
pusha
inc
mov
rcr
insb
aad
jp
and
aam
jle
xor
andl
lds
int3
sub
lods
scas
test
dec
gs
scas
mov
dec
add
aad
inc
popa
cmp
jne
xchg
sub
mov
mov
jp
mov
mov
dec
cld
pop
mov
jge
mov
mov
out
inc
scas
loop
adc
jne
mov
adc
pop
mov
cmp
cmpsl
imul
jne
jb
xchg
cmpsl
clc
cmp
out
fistpll
jno
mov
dec
pop
xchg
aaa
dec
jp
push
sti
mov
jecxz
add
xlat
test
pop
imul
pop
fstps
loopne
mov
mov
jp
pop
push
inc
push
xchg
pushf
in
jno
cmp
xor
dec
jl
out
dec
sub
lahf
and
mov
dec
inc
inc
sub
sub
push
xchg
jbe
sbb
mov
out
cmp
mov
pop
insl
sbb
in
or
mov
sbb
fimuls
lods
cmp
stos
push
sub
mov
xchg
xchg
pop
gs
movsb
dec
ret
pusha
jle
xor
popa
push
ljmp
xor
jecxz
inc
scas
int3
ret
xchg
test
push
sub
fadds
rcl
btr
movsb
sub
jbe
imul
add
cmp
xchg
push
lods
vphaddudq
test
mov
dec
push
xchg
or
jo
outsw
push
aad
or
inc
pop
adc
mov
sti
arpl
inc
scas
pushf
cmp
fsubrs
cwtl
cld
call
sub
jp
aam
les
dec
sub
jbe
mov
fistps
cli
pop
mov
sub
divb
roll
pop
cmp
ret
add
mov
leave
pop
or
xor
loope
cwtl
adc
cmp
xor
pop
lcall
jo
dec
sbb
inc
ja
sub
scas
cli
cmp
aad
lcall
pop
aam
imul
shlb
call
jecxz
or
sub
mov
daa
aaa
xchg
lea
aas
sbb
push
adc
adc
fdivrl
xchg
aas
iret
fisubl
push
sbb
rorb
in
test
jo
dec
ret
ds
jnp
jns
inc
lods
pop
mov
shr
xor
lds
js
lcall
sbb
adc
out
sbb
jns
fildl
lods
inc
aam
out
jp
incb
imul
aam
xor
pop
call
testb
mov
or
push
xor
test
stos
jl
adc
mov
fsubs
xchg
rcrb
sub
push
mov
shll
pop
shlb
test
mov
lods
ss
ss
push
mov
dec
fimull
cmpl
pushf
pop
add
cmp
xchg
pusha
test
mov
sbb
add
rsqrtps
mov
aad
mov
cmpsb
iret
int
jmp
push
enter
xor
adc
test
and
rclb
rclb
jno
pop
aad
cltd
cmc
imull
leave
or
pop
mov
mov
and
push
mov
pop
sbb
sub
jle
xchg
mov
jbe
add
push
and
ljmp
enter
add
inc
in
inc
lahf
fmul
and
dec
mov
fldcw
adc
xchg
sub
push
bound
aad
pushf
sbb
pop
or
in
scas
loope
adc
pop
scas
std
enter
outsb
push
clc
lock
push
hlt
movsb
divl
xor
inc
mov
aad
sbb
inc
addl
dec
xor
movl
idivl
and
add
xor
xor
xchg
aam
fisttpll
out
and
mov
jb
xchg
mov
fwait
jge
mov
lock
pop
xor
push
test
cmp
xor
dec
ret
add
push
inc
lds
push
in
xchg
loopne
add
imulb
mov
stos
aaa
or
inc
mov
aaa
and
inc
hlt
andb
or
xchg
xchg
test
popa
nop
mov
iret
xchg
clc
adc
jle
call
movsl
dec
mov
mulb
dec
test
push
sbb
xlat
repz
xor
push
push
std
or
mov
xor
push
sahf
out
jecxz
gs
and
scas
mov
jo
and
daa
add
push
xor
cltd
jle
test
movsl
mov
mov
in
testl
xorl
mov
cmc
pop
sub
adcl
add
mov
lsl
inc
pop
xor
adcl
in
push
jne
inc
scas
jns
andb
into
mov
sbb
xor
sub
sbb
add
stos
lahf
or
lahf
xorb
js
ljmp
mov
xchg
data16
fwait
sub
test
sub
rcll
in
or
pop
fld
mov
sbb
and
jno
out
and
inc
inc
cltd
incb
inc
ss
jl
pop
mov
cmp
leave
jp
jle
and
sbb
add
cli
push
pop
jl
pusha
cld
daa
mov
and
mov
lret
ds
sbb
iret
cmp
sub
add
mov
pop
sbb
pop
and
lret
movlps
dec
fs
bound
sub
idiv
ret
pushf
cmpsl
mov
pop
mov
enter
stos
das
stos
inc
jnp
dec
pop
push
cli
mov
and
xor
inc
mov
xchg
nop
mov
push
inc
sbb
mov
dec
fbstp
rorb
movsl
loope
add
lret
repz
addr16
jle
lret
shll
and
cmc
mov
repnz
or
jnp
test
jg
das
add
adc
adc
aas
out
xor
fistpll
mov
fdivs
into
jmp
sub
xor
pop
shl
repz
rorb
pop
rorl
fwait
inc
insl
inc
inc
xor
push
mov
mov
sub
sbb
in
pop
jl
sahf
out
leave
fildl
mov
ss
dec
push
jg
mov
dec
xor
lret
xor
mov
popf
mov
fisttpl
pop
cmc
cld
roll
inc
lret
sarl
mov
mov
cmp
inc
push
cmp
lret
sbb
lods
sub
xchg
adcl
add
adc
aas
dec
or
stos
lcall
ja
jl
fs
inc
cs
inc
in
movsb
cli
insw
pushf
pop
lcall
cs
fdivrl
fimuls
adc
xor
js
aas
mov
pop
pop
sub
dec
and
jae
pop
inc
mov
adc
or
mov
inc
xor
ret
lret
push
mov
mov
test
xor
xchg
jns
mov
inc
sbb
enter
jo
ret
out
mov
scas
mov
fmuls
call
mov
popf
cmpsl
push
inc
shll
jnp
fnstcw
jp
xorl
xchg
outsl
xor
cmp
jle
pop
icebp
dec
cmp
xor
loop
dec
ret
pop
insl
mov
cltd
jns
jb
jbe
sub
out
orl
mov
dec
mov
mov
and
out
or
xchg
pushf
mov
addb
dec
mov
outsl
adc
in
adc
test
mov
nop
cld
enter
pop
and
add
mov
jbe
cmpsl
ja
cwtl
mov
cli
cmp
pusha
cmp
jb
mov
or
mov
xchg
mov
mov
xor
adc
faddl
xchg
dec
imul
pop
cwtl
movsl
daa
sbb
ret
pop
iret
arpl
xor
ret
scas
adc
mov
jne
lahf
dec
jecxz
sub
xchg
push
mov
and
jl
or
mov
das
ljmp
inc
scas
sub
pop
push
aad
push
mov
xlat
test
adc
bound
aad
aad
js
mov
sbb
add
and
iret
pop
cli
push
xchg
jne
adc
jge
sti
cmp
pop
out
cltd
mov
repnz
xor
data16
dec
cmpsb
pop
jnp
in
pop
cmpsl
add
int3
inc
loop
fyl2xp1
sbb
xor
or
aam
pusha
cmc
inc
and
test
push
jge
int3
lcall
test
sbb
add
pop
out
pushf
add
dec
test
sub
jle
repz
dec
sub
into
fdivs
xchg
cmp
jmp
mov
push
std
test
outsl
push
test
out
les
xchg
push
cmp
inc
imul
xchg
pusha
out
xchg
rolb
stos
out
pushf
fldcw
sti
pop
inc
dec
sub
mov
cmpsl
or
mov
pop
mov
mov
std
enter
or
scas
divl
push
xchg
jb
adc
dec
lea
xchg
mov
aas
xchg
xchg
and
sub
inc
jmp
shll
adc
nop
jb
data16
cmp
fadd
and
stos
jnp
daa
push
and
aad
scas
bswap
lahf
sarl
imul
sub
testl
mov
push
dec
sti
inc
sbb
call
dec
pop
addr16
adc
cmovp
roll
stc
scas
cmpsb
jmpw
xor
addr16
sbb
ds
scas
and
mov
rcrl
mov
iret
mov
pop
lahf
push
movsb
push
xor
adc
das
pop
fimull
or
pop
cmp
pop
push
push
fsubl
enter
mov
mov
dec
cmp
inc
repz
shrb
cmc
mov
cmp
adc
xor
push
lcall
sub
xchg
pop
jmp
rolb
push
ljmp
inc
cld
repz
jbe
xor
dec
test
fildll
movsb
addl
mov
adc
mov
fldenv
fs
popa
mov
xor
fidivrl
pop
mov
jno
cmc
leave
mov
inc
mov
mov
push
into
int3
push
subb
lods
lods
imul
cmc
mov
imul
cs
lods
popa
pusha
fidivrl
dec
cmp
push
jl
std
clc
push
push
outsb
add
add
add
pusha
lret
add
in
je
xor
add
imul
xlat
sub
scas
or
into
ds
add
arpl
mov
repz
dec
icebp
test
xchg
outsl
loop
sbb
pop
fadds
ret
mov
sahf
lret
or
jb
stos
neg
jmp
xchg
inc
jp
lock
fisttpll
loop
sbb
cltd
icebp
sub
sbb
jmp
insb
call
int
sarl
and
fsubs
sub
jno
sbb
jnp
sbb
xchg
cmp
adc
xor
lods
or
mov
adc
dec
xor
xchg
xlat
push
and
pop
and
aas
adc
and
dec
push
pusha
pop
mov
addb
jecxz
iret
cmc
or
fldenv
jecxz
fwait
mov
push
bound
fbld
js
adcb
pushf
cmp
in
lcall
inc
andb
fisubs
arpl
in
cmp
cld
xlat
mov
add
repz
call
add
sub
mov
pop
adc
mov
scas
in
call
jg
daa
std
test
mov
negl
dec
sub
sub
inc
mov
sti
cmpsl
mov
mov
rcl
mov
mov
xchg
adc
push
sti
sub
pop
js
les
lret
movsl
imul
jbe
cmpsl
mov
pop
mov
inc
inc
mov
es
imul
cmp
aas
outsb
jns
gs
jecxz
cs
fsubl
push
mov
mov
dec
loopne
data16
leave
mull
mov
fldt
mov
xchg
loope
movsb
sbb
imul
and
in
jnp
inc
lods
bound
xor
jmp
leave
int3
insb
aaa
add
popa
sbb
or
cmp
xchg
repz
into
push
mov
insl
jecxz
fsubr
inc
xor
ret
bound
push
ljmp
mov
mov
pushf
adc
std
jp
adc
adc
mov
or
sbb
hlt
dec
dec
fsubr
xchg
lret
mov
sub
js
pop
out
scas
xor
fsts
or
lcall
mulb
rcrl
dec
push
je
out
jl
and
dec
jb
push
or
sar
movsb
fsts
and
dec
mov
inc
inc
sbb
sar
sbb
jnp
jecxz
mov
shrb
out
leave
xor
sub
xchg
jp
xor
das
push
pop
cltd
jecxz
pop
subb
sub
scas
sbb
leave
call
sub
scas
dec
scas
shlb
icebp
cmp
stos
push
pop
scas
lret
pop
out
js
decl
pushf
push
insb
dec
out
cmp
data16
arpl
xor
aam
loop
cli
jb
sbb
sti
and
push
xor
sbbb
imul
xorb
pop
push
adc
sarb
push
xor
jmp
out
xchg
jmp
repz
mov
mov
rorb
mov
aaa
ss
ficoml
iret
sti
jo
movsl
push
pop
dec
fsubl
mov
sub
xchg
jae
xor
outsb
pusha
pop
jne
mov
mov
dec
cmpsl
xchg
mov
xor
test
scas
outsb
lock
jnp
in
jnp
fmull
jae
xchg
shr
xor
push
jns
jmp
movsb
rolb
shll
imulb
mov
xor
push
imul
cwtl
adc
loope
adc
shrb
or
outsl
adc
shll
imul
es
jp
daa
hlt
xor
int3
aam
out
fidivs
shll
cmp
ds
dec
or
fimull
mov
inc
or
or
stos
cs
push
stos
in
stos
fisttps
movsb
testb
jnp
ret
cltd
push
jmp
dec
xor
adc
jnp
aam
fstpt
cwtl
lock
mov
jmp
lahf
adc
pop
in
pop
pusha
sub
dec
jb
fstl
jge
out
pushf
insl
cltd
pop
or
mov
roll
out
sub
fxch
rorl
pop
or
push
xchg
jmp
sti
call
or
or
fwait
mov
push
push
and
cmp
movsb
mov
jne
aaa
inc
in
stos
ret
aam
push
ror
jg
mov
jg
dec
arpl
imul
repnz
mov
out
ja
xor
xor
mov
cmpb
inc
dec
insb
loope
sarl
sbb
fiaddl
jecxz
sbb
imul
out
repnz
jg
and
adc
sbbl
mov
lcall
jne
cwtl
push
nop
scas
mov
add
fcoml
ret
jae
xchg
sahf
call
lea
gs
sar
inc
out
aas
sbb
mov
lock
mov
ljmp
mov
outsb
sar
push
outsb
daa
outsb
jbe
mov
pop
fstpt
or
or
mov
test
jns
popa
push
adc
jo
in
add
pushf
and
add
mov
cmpsb
bound
repnz
sub
fisttpl
sti
jns
sbb
aam
inc
push
push
add
add
dec
outsb
das
les
in
jae
stos
mov
imul
inc
mov
out
jmp
cltd
stc
test
pop
mov
xor
fucom
xlat
pushf
stos
icebp
filds
cmp
mov
or
out
insb
jne
orl
push
scas
lahf
jno
mov
mov
pop
add
addr16
mov
mov
xor
jae
daa
das
iret
xchg
sarb
push
push
sub
push
popa
repz
cwtl
xchg
loopne
adc
loop
gs
jg
xor
xor
sbb
xchg
pop
ds
cmpsl
fildl
and
sbb
sub
clc
sub
pop
ss
pushf
je
in
cli
mov
popf
test
sbb
fists
push
insb
ljmp
or
fdivrp
rorb
mov
sbb
out
push
mov
add
add
addr16
scas
cmp
fistpll
cmp
ret
in
sub
mov
sbb
mov
out
push
pop
xchg
and
sub
into
xchg
arpl
clc
sbb
clc
mov
movsb
sub
inc
stos
aad
sbb
mov
jb
inc
fimuls
clc
push
movsl
loopne
jne
sub
popa
int
cli
rorl
mov
push
xor
pushf
orl
xchg
imul
jbe
lcall
stos
and
mov
lcall
lods
push
push
xchg
lret
pop
adc
aas
divb
add
jg
movb
fwait
psadbw
sti
gs
ss
movsb
xchg
cmp
pop
dec
das
dec
rcll
je
cmp
mov
jo
fstpl
sbb
cmp
mov
inc
es
mov
mov
jmp
pop
ds
pushf
inc
mov
test
rcr
jne
and
sub
pop
outsl
fsubrl
or
outsb
push
xlat
jo
je
jp
or
inc
dec
cmp
pusha
les
lret
xchg
pop
int
push
jge
int3
pop
adc
sub
cmp
xchg
jbe
jne
mov
rcr
xchg
cwtl
inc
test
es
adc
mov
lret
daa
test
int
sub
sarl
mov
out
sub
aaa
and
push
sbb
fdivs
out
xor
pusha
and
cltd
sbb
jl
test
scas
dec
mov
push
jbe
adc
adc
inc
cmpsb
subb
and
and
xchg
in
mov
pop
aam
lret
and
push
pop
xor
mov
mov
cld
push
mov
push
jns
fs
outsb
jecxz
in
jbe
lret
les
push
rcrb
mov
lods
xor
loope
pop
mov
insb
and
mov
and
dec
insl
test
sbb
jmp
lods
aas
pop
leave
push
pop
xchg
adc
xchg
arpl
jl
into
cmp
add
mov
cs
popa
xor
roll
je
lods
push
pop
sub
sbbb
in
or
lcall
insb
add
lret
mov
sbb
movnti
fs
inc
jp
repnz
jle
xor
sub
mov
cwtl
ficoms
loope
dec
mov
imul
jb
inc
mov
jg
andb
sbb
outsl
pop
mov
push
inc
sahf
jl
movsl
inc
push
mov
mov
and
faddl
ss
add
push
push
xchg
cmpsl
cmpsb
aam
movl
outsb
daa
mov
mov
das
je
and
sbb
mov
and
add
cmp
sbb
cltd
imul
outsl
add
cmp
inc
mov
and
add
scas
jo
sub
sbbb
nop
ljmp
ds
cmp
fadds
inc
adc
mov
xchg
cwtl
stos
pop
jae
out
pushf
ljmp
negb
mov
cmpsb
cmp
inc
jle
ds
jge
sub
pop
fcoml
push
xor
or
and
sub
or
adc
mov
mov
inc
xor
iret
clc
mov
shrl
loop
inc
aad
pop
inc
pop
pop
adc
push
push
rorb
mov
cwtl
jno
xchg
and
mov
outsl
add
ljmp
jne
sbb
fists
cli
jns
inc
xor
subb
sbb
es
pop
in
push
aam
push
imul
ret
xlat
xchg
xor
push
push
mov
xchg
lods
adc
mov
test
or
pop
mov
inc
and
mov
mov
fidivrl
push
pop
pop
sbb
es
loope
arpl
scas
push
fldl
test
in
sub
dec
push
loop
xchg
les
in
and
cmc
nop
pop
test
subl
mov
sub
dec
test
daa
xchg
mov
jne
dec
int3
lds
sti
adc
jecxz
jge
push
mov
push
jmp
stos
sbb
cmpsl
mov
push
mov
add
fimuls
loopne
mov
sub
push
pop
adc
sub
jbe
push
pushf
aam
clc
xchg
mov
dec
push
pop
pop
xor
fisubs
xchg
jns
insl
cmp
fcmovu
aam
out
mov
sbb
sub
test
pop
push
pop
insb
ja
stos
outsb
clc
xchg
push
loop
jb
popf
jge
sbb
adc
sub
ljmp
inc
test
inc
mov
test
gs
in
cmpsb
pop
movb
rcll
int
insl
mov
mov
dec
adc
mov
or
mov
imul
mov
std
scas
std
adc
pusha
jecxz
and
test
addr16
daa
shll
stc
cli
dec
jne,pt
in
outsl
inc
adc
fcompl
aam
or
mov
cmp
cmp
sub
cs
call
adc
stos
dec
pop
and
xlat
sbb
fdivl
fistpll
ja
mov
into
xlat
or
push
rclb
push
pop
adc
outsl
mov
insl
jge
cmp
test
test
std
int3
add
ss
pop
and
out
pop
scas
jp
mull
divl
mov
jg
mov
or
loop
pushl
rorl
and
xor
or
cltd
sub
jge
or
sub
dec
xchg
xor
fs
mov
call
sub
mov
add
addl
andl
mov
push
adc
addb
inc
mov
dec
inc
mov
and
out
lcall
inc
lods
cmp
icebp
stc
inc
or
pop
push
mov
dec
dec
fistpl
push
mov
jmp
mov
out
push
out
mov
jbe
frstor
imul
sbb
andl
loopne
mov
xchg
mov
mov
cmp
inc
sbb
into
or
subl
repz
push
sbb
es
mov
pop
jnp
dec
cmp
aaa
pop
sbb
lret
enter
cltd
lahf
stc
arpl
pop
test
adc
loope
push
push
mov
lcall
das
lcall
in
xchg
ljmp
xchg
in
cli
adc
insl
dec
stc
jp
mov
js
xchg
in
jb
xor
inc
push
les
pop
xchg
dec
test
lcall
jb
imull
or
mov
mov
adc
fs
xchg
fwait
xchg
mov
sub
imul
pusha
cld
call
adc
or
lret
lcall
je
pop
mov
insl
out
fsubrs
stc
in
hlt
fwait
nop
mov
push
or
imul
mov
jb
cltd
mov
fwait
inc
mov
insl
into
mov
or
mov
loope
push
mov
or
inc
jg
int
xchg
xchg
dec
shll
out
pushf
add
push
in
fucom
add
mov
mov
bound
xor
in
mov
pusha
dec
in
out
bound
pop
fisubrs
adc
dec
insl
movsl
dec
jnp
clc
mov
out
aam
mov
sub
sahf
lods
dec
shr
lcall
repnz
sarl
int
pop
js
pop
nop
loop
ljmp
mov
mov
pop
lret
clc
fdivrs
dec
mov
mov
mov
push
ss
lock
movsb
mov
jle
lahf
addb
sub
addr16
sub
lods
mov
pop
mov
pop
push
cs
test
fisttpl
dec
cmpsl
ja
stc
int3
cltd
sub
fmulp
xor
sub
or
pusha
mov
xor
fldt
adc
or
hlt
popf
ret
std
sysexit
test
fs
stc
cwtl
xor
and
and
xor
hlt
pusha
xor
pusha
leave
mov
mov
cmc
ucomiss
jae
aad
cmp
fwait
hlt
data16
roll
out
cmp
mov
xchg
call
outsb
popf
int
fstpl
inc
push
fadds
loop
cmp
in
lahf
inc
xchg
push
aad
popl
cwtl
lcall
pop
std
dec
outsl
int
cmpsl
xchg
fildl
or
aaa
js
jge
sbb
cld
mov
mov
cmc
cli
ja
sbb
sub
mov
xor
sbb
add
jecxz
lahf
shl
ret
pop
pop
jl
into
aaa
mov
les
push
daa
stos
cmp
sub
or
aaa
loopne
pusha
sbb
sub
out
cli
test
pop
push
add
fsubl
push
mov
sbb
call
sbb
mov
xor
or
int3
call
xchg
jl
fidivl
cmpsb
lds
nop
dec
add
cltd
jl
xor
push
add
clc
mov
fs
mov
jbe
pop
fildl
scas
sarb
dec
outsl
or
sub
cmp
mov
cmp
cltd
or
xor
bound
fwait
mov
ret
add
xor
jb
sub
pop
lcall
mov
sbb
faddl
test
or
inc
imul
ds
xchg
sahf
call
mov
scas
das
jg
shll
js
lret
jle
into
pop
cmp
push
es
sbb
push
dec
push
sbb
cli
pop
mov
out
adc
adc
in
iret
test
adc
inc
ret
jg
sub
std
out
push
jns
pop
jg
out
imul
sub
xlat
and
mov
sbb
push
mov
in
and
mov
ret
push
add
lahf
jge
out
dec
jbe
xchg
pop
dec
in
jae
shrb
mov
xor
pop
sti
sub
push
jns
rcr
scas
cmp
xchg
sub
pop
cs
loopne
es
lods
xchg
aaa
nop
int3
addl
xchg
jmp
inc
jg
rorb
sahf
loopne
fstps
dec
loopne
push
cmp
cmc
jae
popl
sbb
sub
test
shlb
jl
mov
cmp
dec
add
adc
inc
shrb
je
push
andb
call
jecxz
out
test
inc
pusha
out
cmp
cmp
inc
fists
icebp
inc
push
mov
or
sub
and
sbb
mov
mov
adc
enter
mov
jbe
negb
imul
scas
pop
call
fwait
push
inc
xchg
xor
or
ja
inc
pushf
xchg
out
sarl
mov
leave
pusha
out
pop
lret
xchg
mov
fwait
es
bnd
clc
lahf
adc
push
add
pop
loope
adc
mov
enter
out
ficomps
mov
cmp
fs
cmp
data16
idivb
mov
pop
sbb
fs
jg
mov
add
add
into
xor
addr16
insb
sub
mov
std
and
popf
sbb
out
push
leave
lds
xchg
fdivl
cmovl
jecxz
aam
pop
mov
test
repnz
lret
movsb
mov
jecxz
mov
mov
stos
mov
dec
xor
dec
push
add
test
mov
or
and
cmp
cltd
sub
lds
xchg
or
mov
stos
sub
mov
push
insb
mov
das
and
push
je
sti
xchg
daa
sarl
push
mov
movsl
push
imul
or
lock
mov
int
cmpl
insl
out
stc
cmp
lahf
repnz
add
aas
mov
mov
pushf
mov
cmp
push
fdivr
mov
pop
sbb
add
xor
add
dec
mov
dec
xor
mov
frstor
xlat
sub
test
movsl
mov
repz
push
fbld
jnp
inc
sbb
mov
pop
adc
push
cwtl
jbe
cmp
inc
out
adc
or
addb
push
mov
or
out
scas
lods
xchg
ret
cmp
std
fsubrs
scas
xor
xchg
dec
dec
addr16
bound
shlb
adc
leave
pop
cmp
pop
jo
shll
inc
push
jmp
inc
frstor
inc
pop
adc
push
out
lea
jno
movsb
sarb
test
inc
mov
sbb
xor
addr16
aas
and
dec
jl
push
pop
rcll
dec
mov
adc
pop
fidivl
xor
mov
xorl
xorl
xchg
daa
iret
les
push
ret
pusha
outsb
pop
xlat
cwtl
into
push
jo
jle
divl
imul
lods
add
push
mov
pop
loope
xchg
sbb
into
or
insl
scas
add
mov
mov
lods
or
and
fsts
lods
ljmp
xchg
mov
add
sbb
xor
push
mov
icebp
iret
adcb
fwait
in
cmp
test
cmp
mov
mov
call
and
or
insl
stos
cwtl
jg
mov
mov
loopne
dec
sub
cmp
scas
ss
js
in
sub
dec
add
pop
cltd
lds
jmp
in
roll
imul
cmp
xor
mov
and
lods
outsl
xor
cmp
popf
inc
mov
dec
repnz
fdivs
push
popf
push
cmp
bound
push
inc
popf
rorb
rcr
test
mov
inc
out
pop
lock
push
sahf
jno
sti
jnp
mov
test
stos
xchg
jmp
xchg
push
test
sub
cmp
pop
fwait
ds
idivl
pop
or
push
xor
push
sti
or
ds
mov
rorb
xchg
xchg
movups
pop
ja
es
lret
dec
adc
imul
nop
inc
fnstsw
dec
mov
push
add
jmp
push
ja
repz
push
dec
stc
loop
xchg
sub
les
dec
or
iret
push
jmp
pop
movsl
fwait
repnz
sbb
ja
xchg
mov
cld
in
call
pop
mov
lods
or
sbb
ret
sti
cld
dec
pop
mov
push
lds
pop
cs
mov
cmp
sbb
xchg
sbb
push
sub
xlat
js
or
bound
out
mov
jnp
mov
xor
sub
ficomps
xor
pop
or
or
popa
sbb
std
rclb
or
gs
xchg
sub
dec
and
xlat
bswap
je,pn
pop
mov
lcall
mov
cmp
pop
aas
aad
shr
mov
cmc
loop
mov
mov
xor
aaa
or
lock
mov
or
mov
paddw
mov
pop
mov
fsubr
adc
test
adc
adcl
sbb
push
adc
sub
mov
scas
xchg
lods
mov
xchg
cmp
sbb
repz
jno
rcll
mov
aam
into
jle
mov
in
jp
mov
or
dec
cli
xorl
and
inc
or
jge
adc
adc
cmp
xor
movb
inc
test
jp
inc
or
or
sbb
movsb
in
cmp
lea
or
dec
int3
movsb
xor
nop
outsb
stos
mov
std
sbb
pavgb
lret
adc
pop
pop
add
das
roll
adc
pop
pop
rorl
and
insl
and
mov
pop
rcll
test
gs
adc
dec
repnz
ret
aaa
jb
jb
cmp
in
xchg
xchg
mov
or
dec
popl
jae
out
xchg
ret
push
jns
hlt
xor
or
sub
mul
jbe
and
or
jle
int
sbb
gs
mov
pop
mov
aas
cmp
test
xchg
jle
cmp
popf
popf
dec
stc
sti
push
sbb
mov
inc
cld
pop
daa
stos
add
mov
push
mov
inc
mov
int
mov
mov
lock
stc
inc
pop
rcrl
stos
mov
scas
sahf
out
add
inc
scas
sbb
in
stos
jno
bound
cmpsb
nop
mov
mov
sbb
mov
inc
push
jg
inc
or
adc
lea
test
xor
pop
add
jae
stos
jmp
das
lods
enter
out
sub
imul
das
pcmpeqd
fnstsw
push
cmc
lock
and
lods
test
rorb
addr16
dec
das
aad
sub
in
push
insb
pop
mov
in
inc
pop
and
ret
mov
rolb
xor
sbb
into
out
fwait
xor
stc
xlat
lret
dec
xchg
jae
jae
jb
cwtl
fstps
test
rorb
xchg
add
in
cmc
xchg
inc
fistpl
push
adc
xor
daa
inc
adc
jmp
xchg
jp
mov
shl
stos
dec
or
test
sub
pop
push
aad
inc
inc
dec
pop
xchg
movsb
adcb
out
pop
rolb
push
into
pop
mov
pop
imul
inc
data16
cmc
push
aad
test
outsb
mov
inc
cwtl
jbe
outsb
iret
push
gs
add
filds
fisttpll
add
out
in
lods
cli
mov
push
pushf
cmp
mov
cmp
or
dec
aam
inc
push
jnp
pop
mov
sbb
movsl
sbb
inc
sub
int
gs
insl
enter
sahf
and
mov
fdivrl
push
jecxz
hlt
and
jae
sub
movsl
push
clc
adc
ret
xchg
xor
sbb
addr16
pusha
jns
lcall
adc
xor
jo
dec
xchg
and
cmp
dec
sub
xor
sub
repnz
test
mov
movswl
repz
jb
sub
stos
xor
movsl
insb
fwait
dec
fdivl
or
inc
lods
inc
cmp
icebp
int3
stos
movsb
lods
std
mov
pop
pushl
adc
fwait
push
test
into
cmpsl
mov
lret
leave
push
cmpb
lcall
ret
dec
jno
movsl
in
das
jge
jno
sub
push
inc
mov
repz
ss
mov
in
cmpl
mov
stos
sub
add
push
xchg
int
sbb
lahf
outsl
test
int3
cmp
out
and
jle
push
lea
aad
pop
lahf
sub
loop
sbb
pusha
pop
push
and
into
pop
cmc
xor
mov
mov
xchg
xchg
shll
lret
je
aaa
mov
in
out
out
inc
jecxz
and
adc
stos
cmp
lahf
pop
loope
rcrl
aad
sbb
cmpsb
lret
arpl
push
add
movsb
movsl
test
push
call
push
push
cmpsl
popa
shl
pusha
aam
or
inc
push
gs
mov
push
mov
out
ss
or
ljmp
or
dec
out
add
cmp
aad
aaa
or
std
icebp
pusha
ret
movsb
fidivs
inc
jle
push
rcl
jl
or
cli
push
mov
jnp
shrl
lds
jp
sahf
xchg
sbb
mov
push
outsb
adc
cmp
sbb
fnstcw
sti
xorb
inc
insb
cmp
jmp
inc
jnp
add
repnz
push
jbe
repz
or
and
hlt
lahf
pusha
dec
ss
daa
mov
sub
mov
andb
shll
and
loope
xchg
mov
xchg
lret
in
jg
xlat
cmp
xchg
push
loop
dec
sti
mov
push
push
sub
xchg
stos
xor
push
adc
xchg
xor
xor
mov
out
adc
mov
sbb
and
lret
orl
bound
sbb
mov
xor
jo
push
jae
std
add
cwtl
shlb
dec
push
lea
iret
hlt
jecxz
push
dec
mov
out
jno
xchg
and
out
outsb
or
adc
xor
cmc
mov
or
sbb
add
xchg
push
add
xor
xchg
aad
test
jae
xchg
xor
nop
stos
loopne
out
mov
clc
fdiv
add
insb
rcrb
test
iret
xchg
sar
leave
fwait
add
mov
out
xchg
pop
fnstenv
cmc
out
insl
push
sbb
inc
lds
sbb
cmpsl
push
xchg
rcll
into
aas
lret
fs
je
stos
add
inc
nop
xor
dec
out
mull
inc
jecxz
divl
dec
xor
lahf
mov
sbb
push
sbb
sub
out
lcall
sub
push
pop
mov
fld
adc
jmp
lock
cmpsb
rcll
mov
lods
pminsw
lcall
shlb
repz
ret
enter
sbb
inc
sub
add
leave
ret
fadds
mov
loope
ret
adc
ja
dec
push
loope
sub
sub
dec
aas
xchg
je
test
test
ds
xchg
incl
mov
lea
mov
ljmp
jb
pop
test
dec
mov
add
clc
mov
decl
lret
and
sub
stos
ret
fstl
rcl
adc
mov
jo
jmp
sbb
mov
push
repnz
les
divb
jnp
daa
js
testb
sub
ret
pop
push
xchg
adc
jb
pop
aas
dec
inc
mov
push
push
pop
mov
jbe
inc
call
xor
loope
inc
jg
insb
lods
incb
pusha
jle
pop
data16
aad
dec
mov
xchg
xchg
xor
cmc
loope,pn
or
fs
jecxz
rcll
xchg
je
mov
mov
negb
sub
ror
cmp
gs
xchg
push
rorl
icebp
cmp
daa
and
push
xor
loope
pusha
or
in
cmp
scas
incb
sbb
ja
repnz
test
cmpsl
aad
call
popf
mov
ffreep
icebp
les
lods
lds
pop
int
lahf
push
xor
and
xor
xchg
lahf
xchg
dec
fdivs
adc
enter
dec
add
and
jp
or
sbb
inc
jo
sbb
hlt
mov
fwait
loope
push
or
xchg
and
fisubl
xor
push
js
outsb
xchg
jp
push
daa
int
or
push
mov
repz
push
in
pop
sbb
pop
out
xchg
lahf
and
mov
stos
mov
cmc
and
dec
jle
or
scas
cwtl
arpl
mov
jl
cli
mov
or
jmp
cmp
inc
xchg
stc
cs
mov
insb
inc
mov
inc
xlat
mov
fbld
xor
jg
pop
ficomps
push
lret
test
jno
xor
aas
pop
push
mov
mov
test
ljmp
gs
inc
and
adc
jno
or
stc
imul
test
and
loopne
cmp
mov
push
inc
loop
and
popf
bound
xchg
test
lods
sub
mov
outsb
mov
stos
inc
nop
pop
sub
or
scas
push
sub
xchg
push
xchg
sahf
push
jo
push
sub
mov
push
int3
inc
pop
cli
push
pop
jbe
stos
inc
push
inc
push
push
in
repnz
mov
rorl
loope
pop
sahf
jb
mov
or
push
push
jecxz
sbb
mov
es
fimull
inc
test
fstpl
sub
lea
lods
popa
xchg
test
shll
mov
rcrl
enter
aaa
leave
mov
fisubl
lret
js
lcall
inc
xchg
jb
sub
xor
aad
scas
stc
gs
subb
sbb
adc
push
inc
or
cmp
ret
test
rcrb
mov
jbe
cmc
aaa
fisubl
es
pushf
xchg
mov
fadds
arpl
sti
mov
movsl
arpl
pop
add
fbstp
sbb
cltd
ljmp
add
cmpsl
aas
adc
inc
dec
xor
mov
dec
aam
inc
stc
fisubl
movsb
movsl
cmp
pushf
push
pop
int
jp
inc
xchg
lret
es
aas
rcll
adc
push
fsubrs
call
fs
or
lods
rcr
mov
mov
iret
nop
out
cs
movsb
fdivs
in
sub
shll
or
fsub
lret
js
pop
xchg
call
cld
cmp
jecxz
inc
sub
imul
imul
adc
sub
fildl
mov
in
xchg
cld
mov
lcall
mov
and
ret
cmp
xor
fcoml
mov
loope
imul
xor
fwait
test
push
out
cli
xor
dec
xchg
push
push
fs
adc
sub
xor
adc
cli
dec
outsb
mov
in
inc
ds
int3
pop
cwtl
jmp
movsb
jbe
jae
mov
js
xchg
imul
cmpsb
xor
sar
repz
into
fistl
sub
and
pop
sub
fwait
lret
sbb
lds
push
mov
enter
bound
sub
add
cmc
sbb
pop
daa
test
pop
jl
mov
shrl
jle
xor
adc
dec
popa
lods
int3
or
push
loop
sub
into
cmpsl
fsubl
nop
push
dec
addr16
mov
sbb
mov
sub
adc
pushf
mov
movsb
aad
nop
lret
rcrl
fs
fldz
xchg
nop
jle
stos
and
jno
sub
adc
addr16
xchg
cld
data16
xchg
je
cmpsl
popf
push
cld
fwait
cli
aam
fisubrl
xor
int3
pop
arpl
leave
mov
cwtl
mov
xorl
stos
loope
mov
push
xchg
mov
mov
ficoml
pop
and
inc
xor
jmp
rorl
pop
jns
fwait
pop
cmpsl
push
sub
pop
cmpsl
jl
inc
push
dec
and
sub
popf
push
sub
lea
dec
clc
inc
xchg
pop
mov
jle
sub
scas
adc
jecxz
ret
push
int3
and
ret
inc
push
adc
sbb
push
xor
cmp
push
cmp
data16
push
outsl
sub
xchg
std
dec
sbb
mov
sti
mov
lock
mov
inc
ficoms
shll
inc
loopne
or
fwait
popl
pop
mov
push
loop
inc
out
das
leave
mov
in
leave
push
add
mov
mov
pop
cmp
xchg
in
xor
cmpsl
xor
mov
jb
mov
loopne,pn
gs
lret
fwait
fs
fs
outsl
jbe
add
imul
inc
fidivrs
push
rorl
clc
mov
sub
pop
mov
dec
jle
stos
lret
in
adc
mov
clc
cld
out
mov
inc
xchg
pop
notl
incl
movsl
das
ret
rcrl
int
mov
lret
sbb
dec
dec
inc
pop
cltd
repnz
lahf
sbb
or
jle
mov
or
mov
insl
out
stos
cwtl
adc
or
fisubrs
and
adc
movsl
popa
ds
mov
xchg
mov
mov
pop
hlt
dec
jge
pop
inc
jnp
or
sub
jbe
or
in
es
aad
fwait
sub
int3
jno
sti
stc
xor
jno
mov
rolb
mov
inc
leave
pop
jns
int
ljmp
dec
inc
jb
cmp
cmc
ljmp
jge
jecxz
cmpsb
lahf
insb
cwtl
sub
sbb
jle
sub
rcrl
sbb
mov
mov
fsubs
mov
loope
pop
int
ror
sahf
mov
inc
sub
scas
lret
adc
mov
push
cmpsb
mov
adc
mov
fwait
jb
and
jle
push
mov
push
cmp
inc
jge
or
lret
jg
xor
imul
add
ficomps
pop
pop
insb
jo
out
pop
and
mov
or
sbb
gs
addr16
cwtl
pop
mov
call
call
sub
add
lret
adc
jg
sahf
les
push
shlb
lret
push
xchg
add
and
inc
data16
push
ret
sbb
push
mov
push
sti
sbb
pushf
outsb
pop
jbe
test
jo
sbbl
push
jl
fcmovbe
xor
pop
call
hlt
xchg
inc
push
jle
pop
mov
hlt
addr16
bound
jge
inc
scas
icebp
cmp
insl
loope
stc
dec
push
add
mov
lret
fisttps
pusha
and
daa
daa
punpcklwd
mov
in
mov
or
mov
or
insb
lea
cmp
hlt
arpl
or
add
mov
out
das
cwtl
dec
ds
outsl
scas
stos
xchg
pop
pop
icebp
pop
xchg
push
or
mov
cltd
inc
out
stos
test
mull
sahf
xchg
sbb
sbb
cltd
xchg
dec
loope
ret
push
mov
xchg
fwait
loope
jno
cmp
mov
test
outsb
ds
fmul
jle
ficoml
inc
aam
sbb
push
mov
add
jo
cmpsl
hlt
nop
test
nop
cmp
xchg
idivb
xor
cmpsl
sbbl
mov
mov
dec
xchg
in
sbb
adc
dec
aas
xor
or
test
popa
stos
imul
js
jae
out
les
dec
in
insb
sub
out
and
lahf
cmp
mov
xor
add
andl
add
cmp
nop
and
outsl
popf
gs
jne
jg
xchg
int3
es
xchg
xchg
cmp
xchg
mov
insl
xor
cmp
mov
mov
mov
lahf
sbb
popa
inc
adc
add
and
jmp
or
in
fsubs
mov
or
nop
out
rcrl
jb
aas
int3
ds
xor
icebp
jbe
adc
push
lahf
test
push
orb
lea
dec
ret
push
enter
imulb
mov
outsb
xchg
inc
sbb
rcl
or
out
sbb
push
sub
and
stos
mov
je
fmull
daa
adc
adc
sub
sub
jle
in
movsb
cltd
xchg
cmp
sbb
jo
mov
bound
mov
shlb
in
push
jg
icebp
popl
cmp
cmp
push
leave
jecxz
adc
mov
out
sub
sub
jge
dec
mov
mov
inc
imul
leave
sbb
xchg
or
scas
push
push
adc
das
cmpsl
int3
mov
jae
imul
loop
imul
movsl
cwtl
mov
outsl
sbb
cmpsb
mov
sbb
stos
insb
test
sub
jbe
jb
mov
sub
cltd
fisubrs
jp
cld
jo
jp
fwait
in
mov
add
xchg
rolb
in
pushf
sub
in
mov
and
test
dec
jle
xor
push
push
sbb
mov
vpxor
xor
lea
or
mov
sbb
fs
lods
mov
jo,pt
xchg
das
sbb
out
add
lret
movsl
fdiv
dec
dec
mov
inc
jmp
mov
mov
push
aaa
sub
iret
insl
xchg
scas
idivb
sub
jge
shrl
xor
lcall
in
mov
xor
add
lods
mov
test
xor
loope
addl
mov
xor
ffreep
mov
mov
mov
cs
push
jmp
add
mov
das
cld
mov
cli
add
push
xor
addr16
mov
dec
fsub
lock
sub
loope
mov
arpl
rcrl
lcall
inc
imul
sub
mov
xchg
mov
add
mov
and
in
scas
sbb
cmp
stos
and
test
mov
aaa
cmpsb
outsl
and
pop
fbstp
cmp
rorl
jae
and
adc
imul
inc
push
dec
leave
sbb
add
shll
stos
lret
sbb
gs
dec
add
mov
mov
pop
dec
repz
rcr
xlat
mov
cmpl
push
pop
and
xchg
nop
xchg
int
sbb
icebp
sbb
adc
lret
xchg
ja
push
sarb
adc
mov
add
mov
and
js
add
mov
cmc
mov
std
aam
in
or
sub
jp
scas
mov
pop
pusha
push
or
insb
or
es
fs
cmc
jmp
or
jbe
dec
mov
jmp
lds
add
shrl
xchg
shll
mov
popf
test
test
out
push
adc
add
out
xchg
lock
in
pop
aaa
aam
fildl
dec
sbb
aam
nop
jae
pop
pop
arpl
dec
outsl
push
mov
addr16
xchg
cmp
mov
mov
call
leave
mov
test
int3
and
js
pop
xor
aad
sbbb
adc
les
mov
and
cld
repnz
mov
cltd
lcall
pop
stos
icebp
fcmovnu
fbstp
lret
push
mov
cltd
popa
push
jnp
aam
xchg
xchg
inc
adc
mov
mov
dec
sbb
ja
pop
push
out
xor
fimull
insb
push
pop
shl
stc
out
inc
sbb
aad
xchg
mov
jnp
cs
push
pop
sbb
xchg
xchg
es
arpl
lret
ret
inc
ljmp
sbb
das
movsl
popa
cmc
popf
test
lret
fs
aad
mov
outsl
xchg
aad
mov
shlb
and
lods
jge
cmpsl
imul
mov
test
cmp
es
shlb
cltd
je
outsw
push
pop
or
sub
data16
sarl
cmc
int
insb
push
popa
ljmp
andl
sarb
outsl
or
test
inc
cvtps2pd
sub
mov
lds
frstor
insl
mov
scas
nop
cmp
stos
data16
mov
fwait
inc
cli
xor
lcall
add
lds
rolb
out
leave
push
jge
push
xchg
xor
sub
dec
mov
inc
mov
call
loop
adc
popf
add
adc
jnp
loopne
inc
lcall
movsl
pop
ret
outsb
repz
inc
mov
out
inc
test
int3
std
and
es
adc
out
ficoml
mov
mov
cmpsl
cmp
push
int3
into
sbb
mov
mov
xor
inc
push
in
fdivl
or
add
pop
sub
les
fnsave
fisttpll
cmp
jnp
mov
xchg
inc
les
lds
mov
scas
sub
mov
pop
fisubs
jae
les
lahf
insb
dec
rolb
lret
mov
sub
lods
sbb
lods
cmp
mov
xchg
push
and
xor
dec
dec
xchg
lock
stos
xor
dec
fistpll
push
pop
dec
mov
cmp
adc
inc
dec
jmp
xor
xchg
inc
ja
sahf
test
xor
clc
in
lcall
movsl
jl
cld
out
insl
sbb
repz
js
dec
ret
xchg
add
mov
mov
or
cmpsb
push
xlat
add
jnp
fsubs
sbb
ja
and
popa
mov
push
lret
and
mov
das
mov
push
cs
out
notb
pop
add
rclb
imul
push
xor
sbb
mov
js
cld
or
icebp
leave
mov
xchg
adc
stos
clc
push
and
insl
dec
pushf
mov
sbb
test
mov
loop
pop
lods
xor
inc
mov
inc
fisttpl
or
xor
mov
sub
jl
in
or
shll
mov
cmp
or
scas
push
dec
cltd
pop
dec
fsubrs
cmp
push
fsubrl
ret
scas
ret
ds
sub
je
fmull
ss
aas
cwtl
adcb
fldcw
lds
scas
jae
adc
jp
iret
or
call
xor
cmp
pop
pop
cmpsl
aad
adc
mov
add
jge
cmp
imul
repnz
js
adc
push
fstpt
mov
aaa
xchg
inc
das
mov
mov
inc
mov
jbe
stos
xor
insb
and
popa
shl
in
jb
mov
adc
and
push
or
push
je
xchg
in
fcomps
mov
aas
gs
stos
les
dec
mov
pushf
xor
sub
dec
rcll
cmpsl
pop
call
add
or
xor
sarl
lock
movsl
add
clc
fadds
lahf
in
fistl
loopne
imul
inc
cwtl
dec
fadds
adc
fsubl
aaa
jge
out
add
lea
mov
sub
test
adc
push
mov
movsl
jge
rorb
mov
mov
jne
xchg
mov
fdivrs
push
mov
push
adc
push
add
adc
sbb
neg
inc
daa
inc
mov
sub
sub
aad
and
add
fnstcw
ljmp
daa
push
pop
add
add
push
rorb
push
leave
mov
lods
dec
pop
lahf
or
sbbb
sub
enter
or
or
mov
mov
outsb
mov
cmp
jns
cmp
sub
pop
inc
mov
rcrl
sub
xor
xchg
mov
scas
pop
adc
aad
imul
inc
scas
adc
mov
xor
or
loop
jg
cmp
fdivl
pushf
pop
enter
mov
stc
jno
cld
adc
mov
adc
ficoml
pop
ljmp
xchg
rcll
lcall
cmp
sbbb
std
xor
xchg
mov
ss
pop
jne
ljmp
shll
xor
push
mov
shll
dec
into
push
sbb
or
dec
gs
fwait
pop
mov
pop
inc
ret
xchg
adc
out
cmpl
andb
imul
xchg
std
jo
xchg
and
pop
sar
out
mov
icebp
pop
xchg
mov
adc
mov
test
call
xchg
mov
dec
mov
jno
sbb
les
outsl
push
aam
xor
xchg
cltd
test
dec
push
cwtl
mov
mov
lret
xchg
imul
cmp
aam
fdivs
push
or
fldl
cltd
movsb
mov
jmp
and
cmp
adc
ljmp
xor
pop
shll
mov
or
xor
mov
test
xlat
jp
xchg
aas
or
pop
push
shlb
pop
xchg
data16
fisubrl
sti
and
push
pushf
cmp
push
adc
xor
cwtl
xor
pop
daa
rorl
fadds
push
movsb
xor
xchg
fsubrl
push
outsb
mov
movl
xor
mov
cmpsl
inc
aaa
in
ja
add
les
aas
shlb
mov
jae
xchg
and
pop
lret
jecxz
daa
sub
cmpsl
dec
xor
lods
sub
mov
push
xor
mov
add
arpl
sub
pop
lock
pop
aam
mov
mov
push
xchg
inc
pop
test
ds
ja
int3
vpunpcklqdq
and
mov
sbb
add
imul
test
jne
mov
gs
inc
pop
sahf
inc
arpl
es
insl
pop
arpl
mov
jl
dec
out
sarl
in
xchg
insb
loop
lods
xchg
cmp
ss
mov
inc
adc
xor
es
test
in
mov
fldl
cmp
and
stc
adc
mov
sahf
dec
xor
or
insb
dec
xor
daa
mov
movsb
pop
mov
es
cmp
cmp
repnz
nop
call
mov
sbb
mov
and
jbe
sbb
fistl
inc
insb
call
mov
jg
add
inc
jl
icebp
pop
inc
lret
sbb
mov
int3
test
lcall
mov
dec
mov
pop
sub
sti
push
and
in
movb
sti
mov
dec
sti
and
jecxz
popf
sbbl
insl
leave
fmuls
cmpsb
add
frstor
sub
aaa
and
clc
mov
xor
xchg
or
mov
cmp
add
lock
loope
pop
imul
js
sbb
insb
int
mov
pop
int3
lods
iret
repnz
js
jmp
add
aad
push
mov
leave
loopne
mov
xor
ljmp
sub
cltd
lods
outsb
nop
out
mov
notb
jb
push
mov
or
or
mov
mov
jb
sub
int
xchg
xchg
cs
ret
jae
mov
xchg
jbe
mov
push
js
cmp
outsb
fnstcw
jl
ret
aam
add
inc
cmp
dec
pop
xlat
jl
xchg
mov
fs
sub
sub
and
dec
mov
stc
insl
in
mov
cli
arpl
jnp
stos
loop
mov
in
jmp
stc
in
mov
or
mov
imul
jmp
mov
xchg
xor
inc
push
jae
push
pop
icebp
daa
jmp
xor
push
mov
push
adc
cmp
sbb
jns
test
fisubrl
shll
clc
jecxz
or
cld
insl
imul
xor
mov
gs
scas
mov
push
push
xchg
imul
inc
or
leave
imul
imul
scas
mov
xor
adc
jo
push
loopne
xor
dec
sarb
or
rcrl
movsl
jnp
fidivl
rorl
xchg
lds
jmp
mov
jg
imulb
pop
stos
scas
mov
jle
and
test
jb
jmp
cmp
mov
sub
jbe
or
sbb
mov
or
loope
and
ficoms
sub
push
and
popf
fisttpll
in
dec
out
ret
sbb
jno
inc
out
push
mov
pop
sti
sub
xlat
pop
and
xchg
loopne
ficoms
cmpsb
jmp
and
xor
lods
push
movsl
inc
xchg
mov
js
push
adc
mov
mov
mov
mov
sti
push
inc
jp
popa
fdivrl
push
adc
fidivs
lret
rclb
mov
daa
in
inc
test
lret
cwtl
dec
mov
mov
ret
push
aaa
dec
test
loopne
cmpsl
adcb
movsb
pop
jle
lret
popa
clc
pop
xor
inc
iret
fisubs
dec
out
adc
dec
sti
mov
jecxz
sti
mov
jns
xor
mov
inc
dec
jbe
addr16
out
and
add
movsb
lds
pop
cltd
mov
mov
jl
cmc
jle
mov
xchg
int3
dec
and
clc
xchg
outsl
add
sti
imul
xchg
cs
cli
xchg
sbb
push
or
or
popf
shll
mov
adc
xor
addl
lds
adc
mov
repnz
gs
fcompl
icebp
pop
adc
shr
jl
adc
sti
and
lds
enter
add
dec
cltd
mov
int
nop
pop
sub
adc
jae
inc
jge
push
xchg
mov
xor
cwtl
and
mov
decb
in
or
lods
push
pop
shrb
ja
divl
or
xchg
dec
jnp
inc
loopne
fidivrl
mov
inc
xor
adc
rclb
ret
addl
cmp
mov
cmpsl
pop
xchg
testb
xor
mov
push
bound
add
xor
bound
dec
jno
popf
addl
adc
ja
iret
test
mov
scas
inc
jae
mov
mov
cmc
outsl
push
and
adc
inc
sahf
adc
mov
or
mov
sti
add
pushf
pop
push
sahf
sahf
es
mov
adc
pop
pop
add
cld
adc
cli
jb
hlt
xor
inc
clc
stc
fistpl
inc
dec
pop
jp
xchg
cmp
jecxz
push
dec
jp
or
mov
jge
adc
cmp
xchg
pop
xor
cmp
dec
inc
scas
shrb
imulb
sub
insl
adc
sub
daa
push
mov
aad
clc
mov
jg
lods
or
cmpl
fisubrl
jb
adc
jge
sbb
jle
lock
fnstcw
jl
imul
inc
pop
sbb
repz
inc
add
pop
cs
jns
pop
sbb
cmp
or
xchg
aad
cld
mov
mov
sub
fdivl
inc
pop
pop
jmp
inc
fdivl
push
scas
sub
cmp
shlb
ffree
mov
jns
add
sub
adc
jge
pop
xor
in
bswap
pop
std
mov
fwait
add
sahf
arpl
nop
cmp
dec
jo
icebp
lea
jns
ficompl
rcrb
dec
cltd
push
ss
inc
push
xchg
xor
divl
add
xor
stos
inc
shrl
inc
pop
bound
js
ret
xchg
cltd
sub
inc
push
or
dec
mov
or
out
and
inc
stos
cmp
and
jl
push
loop
xchg
les
xor
xchg
push
pusha
in
ror
insb
movsb
popf
sbb
cmp
fsubs
push
into
push
xlat
pop
jne
ror
or
cmc
sub
xchg
mov
mov
lock
leave
inc
jne
jecxz
jnp
daa
in
and
imul
xlat
jb
arpl
mov
cmpsl
loop
movsb
out
shl
sarl
jecxz
fsubrl
out
xor
std
jnp
test
rorb
dec
mov
stos
sub
lods
mov
into
fwait
js
xor
sub
in
pop
push
movsb
mov
mov
mov
fsubr
xor
out
xor
cmpsl
cmpsl
push
loopne
mov
outsb
lock
jns
mov
xor
loop
push
jno
into
dec
sbb
push
je
mov
xchg
sub
xor
xor
das
pushf
les
lods
addl
push
xchg
adc
fsubrs
dec
mov
test
int
inc
sub
mov
sbb
addr16
shlb
and
xlat
inc
mov
jb
inc
stc
pop
stos
add
add
lcall
and
push
and
add
dec
push
sub
mov
dec
ljmp
das
sbb
push
lock
rcrb
ficompl
mov
jmp
push
into
dec
push
fnstcw
fistpl
pop
cmp
mov
mov
add
mov
fidivrs
imul
push
adc
cltd
xchg
push
data16
cmp
push
dec
dec
int3
jl
call
xlat
inc
lock
fsubs
add
sbb
xchg
and
lock
jne
pop
mov
mov
shll
lcall
movsb
push
fdivs
into
jnp
into
mov
pop
sbb
mov
add
add
mov
jns
pushf
xchg
lret
cmp
sub
insb
in
xchg
imul
js
nop
or
dec
jge
cmpsb
sub
mov
cli
aam
dec
xor
je
ret
pop
pop
add
inc
sub
jmp
jae
cmpsb
or
popf
stc
test
jb
mov
fiadds
mov
jle
repz
les
cwtl
pop
pop
sub
outsb
cwtl
cwtl
mov
cwtl
je
cmpsb
xor
sarb
pushf
or
push
fists
in
or
jns
sub
sub
aam
inc
pop
lret
rclb
sahf
or
js
or
les
xlat
nop
mov
adc
sti
cmp
gs
add
add
cwtl
or
or
fstps
xor
xlat
sub
mov
mov
push
sbb
adc
aam
lahf
jnp
leave
lret
scas
mov
jo
mov
test
ja
outsb
mov
mov
es
cmp
int
dec
xor
pop
jl
jno
xor
xchg
and
daa
inc
repnz
stc
push
and
jl
dec
xor
aas
xchg
push
push
fistps
pushf
flds
mov
pop
xor
and
clc
repnz
shl
push
std
sub
push
out
das
add
fildl
mov
cmp
scas
loope,pt
lock
cld
push
ds
jno
lcall
mov
add
js
std
sbb
sbb
sub
ret
bound
sbb
subl
test
jecxz
idiv
in
xchg
test
cmp
int
pop
cli
mov
cmc
roll
fsub
inc
mov
movsl
sub
dec
pop
mov
iret
idivl
jge
icebp
je
push
movsb
inc
jl
and
push
mov
test
push
dec
dec
mov
or
jns
jne
sub
fdivs
int
shrb
cmc
filds
pop
inc
das
fldl
and
sub
daa
jne
std
je
mov
xchg
neg
xor
cmp
icebp
sub
sub
pop
pop
mov
arpl
aam
out
pushf
jb
test
call
mov
mov
std
push
mov
cltd
rorl
inc
mov
add
push
pop
ja
sbb
test
cld
dec
and
outsb
pop
mov
jbe
mov
mov
jmp
lods
andl
int
sub
jmp
mov
cmp
sarb
mov
scas
outsl
sahf
sar
sbb
cld
in
je
std
stc
push
fldenv
test
jmp
lds
test
aaa
mov
add
push
pop
xchg
repnz
mov
or
inc
xor
cmp
inc
xchg
je
or
adc
jbe
add
and
test
adcl
jbe
cmc
cmp
icebp
sub
cltd
push
divl
xchg
mov
add
shrl
imul
insb
or
or
ret
shll
xor
push
pop
imul
stos
dec
mov
sub
ds
pop
aam
out
cmc
cmp
jno
push
aad
imul
stos
xlat
out
scas
icebp
mov
cmp
cli
xor
pop
gs
cmp
dec
and
sbb
pop
pop
jecxz
test
inc
inc
jg
ss
xchg
sub
or
js
fidivrl
arpl
pop
dec
fadd
dec
insl
xor
push
xor
imul
mov
insb
inc
and
icebp
mov
int
add
push
dec
jnp
sub
js
out
push
subb
adc
or
pop
inc
fstpt
test
nop
cwtl
dec
or
sarb
test
inc
adc
lds
mov
xchg
xchg
in
je
pop
xor
inc
mov
mov
dec
stos
negb
xorb
arpl
lods
jle
nop
or
loop
leave
call
xor
out
xor
dec
faddl
cmpsl
nop
push
adc
mov
lcall
mov
sbb
jmp
xor
ss
mov
xchg
xchg
loop
dec
or
add
push
insb
cld
cld
fs
and
mov
call
mov
push
jecxz
cli
scas
adc
fsts
xchg
cli
aad
les
pusha
sub
sbb
and
fsts
jns
jb
lret
fmull
inc
addr16
cmpsb
arpl
mov
pop
or
jecxz
lds
ficompl
push
daa
arpl
daa
cs
sbb
pushf
out
negb
add
xchg
xchg
imul
sbb
cmp
vmaxps
lock
xchg
popa
insl
pop
jo
xchg
imul
cmp
push
jae
mov
inc
and
jns
lods
cltd
scas
sbb
or
jo
xchg
mov
imull
out
or
cmp
sahf
mov
repz
setbe
mov
sub
jle
rol
cli
fucomip
and
sub
jp
lret
xor
in
xor
les
adcl
roll
sbb
or
fnstcw
mov
inc
push
dec
pop
xor
mov
or
fs
xor
jno
jl
jg
rcrb
xchg
std
mov
mov
mov
jle
cmpsl
test
das
rcll
repnz
pushf
push
jae
pop
lds
fisubl
adc
aaa
inc
rorb
arpl
in
in
inc
cmpsl
xor
fs
rorl
jmp
cmpsb
out
test
outsb
test
and
fsts
hlt
insl
daa
sbb
fidivrs
fistps
popf
jg
shrb
xlat
pop
lea
aaa
lods
adc
ss
sbb
imul
adc
mov
in
arpl
test
xor
out
adc
rorl
mov
imul
movsb
cmp
xlat
mov
shlb
lock
leave
mov
leave
imul
dec
ficompl
jb
pop
int
bnd
lret
push
fidivs
rcrb
cmpsb
lock
xor
mov
addl
sbb
test
xchg
add
ja
jecxz
cmp
push
cli
adc
sub
mov
xchg
sbb
call
jnp
in
mov
mov
xchg
leave
outsl
push
dec
addr16
xchg
repnz
loope
jae
dec
pop
iret
sbb
xor
insb
test
cmpsb
mov
cli
test
sub
popf
pop
cmp
fwait
dec
cs
xchg
xor
lds
push
aas
jecxz
pop
jl
clc
or
in
and
dec
in
into
inc
xchg
into
and
gs
sti
jp
fs
push
test
pop
ds
int
aaa
mov
add
mov
test
xchg
push
loopne
and
cmpsb
mov
xchg
jp
daa
xchg
mov
jg
pop
dec
lea
mov
add
sub
sub
sbb
enter
mov
dec
cmc
mov
jae
pop
insb
xor
gs
loopne
pand
std
push
popf
rcr
mov
add
test
inc
sbb
scas
inc
add
cwtl
push
xchg
or
cmpsl
xchg
and
test
xchg
mov
je
outsl
mov
stos
mov
sbb
inc
rcll
ds
shl
fists
outsl
popa
lret
outsl
xchg
hlt
shr
cmp
mov
ret
mov
mov
mov
imull
xchg
pusha
test
mov
fldenv
jne
sbb
push
ja
xor
shlb
or
add
insb
xchg
int
out
jl
dec
xor
int
sub
mov
les
cwtl
jne
inc
add
stos
push
push
std
jmp
lods
rclb
imulb
test
push
mov
sahf
fstp
mov
mov
je
subb
dec
int3
in
lock
xor
and
xlat
xchg
int
bound
mov
mov
mov
imull
push
das
pop
inc
imul
mov
pop
ss
xor
xchg
jge
sub
scas
sub
xchg
push
mov
dec
push
mov
jo
push
push
in
push
mov
jns
jb
aad
lock
movsl
sbb
mov
adc
cmp
ds
dec
scas
inc
dec
mov
ret
bound
add
test
dec
ds
cmp
lret
fnstenv
test
cmpsl
fisubrs
xchg
add
out
out
mov
lahf
imul
xchg
mov
xor
inc
insl
mov
push
jns
jne
push
ljmp
lock
or
je
mov
lea
sub
test
xchg
repnz
xor
inc
fadd
div
mov
mov
js
mov
stos
xchg
fs
andb
jge
xchg
or
clc
std
ljmp
mov
sarl
xchg
lods
inc
in
mov
xchg
dec
loope
inc
out
pop
cmpsb
ljmp
fsubl
mov
jmp
mov
xorb
xchg
push
in
jne
sub
shll
sub
pop
jle
xchg
cmp
push
sub
leave
mov
pusha
sti
add
xchg
xchg
push
addb
xchg
jmp
mov
pop
outsb
imul
rolb
push
clc
repnz
mov
movsl
jne
push
test
sub
mov
adc
pop
fiaddl
and
and
mov
xor
mov
and
mov
jmp
imul
paddw
mov
rcrl
bound
lods
push
icebp
aad
insb
mov
sbb
popa
inc
popa
out
shrb
in
ds
stos
div
or
xchg
jle
mov
mov
cmp
sbb
pop
clc
add
and
sub
movsb
imulb
pop
xchg
jmp
push
mov
mov
stc
xchg
imulb
ss
flds
mov
in
cmp
cmp
aad
pop
iret
inc
add
subl
jb
sbb
push
cmpsb
lfs
dec
mov
arpl
pop
ljmp
adc
mov
push
pop
hlt
push
jo
or
test
add
push
push
popf
mov
loope
dec
pop
int3
sub
push
rolb
mov
xor
jp
insb
ds
into
std
or
mov
mov
pop
mov
clc
mov
jbe
mov
aam
popf
in
or
mov
xchg
sub
addr16
and
pop
int
addl
idivb
fists
or
pusha
lahf
sahf
inc
sbb
popf
test
pop
jmp
aad
stc
sbb
out
dec
mov
pop
mov
mov
out
cmp
cmpb
xchg
or
lods
inc
addr16
in
pop
sub
aam
loopne
test
imul
mov
arpl
mov
push
icebp
pop
inc
mov
push
cmp
addr16
jae
repz
repz
dec
leave
inc
ljmp
push
pop
mov
push
adc
lret
out
jmp
repz
push
fwait
stc
cli
push
inc
mov
sbb
lods
mov
push
pusha
popa
stos
jmp
sub
ret
adc
xchg
arpl
lods
lds
insl
and
pop
out
stos
fwait
pop
lea
out
das
pop
mov
pusha
ficompl
add
movsl
push
xchg
inc
cmp
enter
pop
dec
and
xor
sbb
mov
cwtl
leave
shrl
stos
push
es
shll
inc
stos
out
add
push
jmp
mov
sbb
adcl
daa
sahf
ffreep
fisubrs
dec
ja
mov
pop
mov
and
sbb
mov
jl
loope
out
xor
inc
aaa
mov
dec
jae
mov
push
das
adc
inc
rclb
push
int
or
ljmp
std
negl
daa
clc
cmpsl
or
adc
punpckhdq
scas
mov
inc
in
leave
in
shlb
pop
loop
stc
lret
ffree
arpl
shll
test
sbb
out
call
mov
add
push
movsb
xchg
frstor
pop
scas
mov
aaa
inc
xor
inc
fimuls
xchg
rclb
inc
dec
aas
lods
adc
dec
adc
out
push
js
hlt
pop
mov
mov
xor
xchg
pop
lea
xchg
dec
sbb
sbb
stos
push
loopne
xchg
push
pop
xchg
in
xchg
jecxz
jne
mov
push
cmp
adc
jo
loopne
adc
pop
icebp
rcl
pop
cmp
add
aam
call
les
out
push
dec
xor
xor
adc
xor
in
outsl
jae
gs
xlat
and
sbb
xchg
js
mov
movsb
and
cwtl
hlt
mov
or
pop
push
mov
dec
std
push
cmc
andb
scas
adc
inc
sub
or
pop
imul
in
add
and
cmp
insb
mov
das
dec
les
icebp
adc
cmp
and
js
mov
scas
ss
ja
mov
mov
mov
pop
add
dec
mov
add
ljmp
add
bound
push
lds
xchg
sbb
cmp
cmp
inc
iret
mov
pop
mov
mov
in
fsub
cmp
jo
call
mov
push
repz
pop
aad
xor
js
mov
aaa
inc
lds
cld
stos
lods
and
test
lahf
sub
frstor
lds
inc
jl
aaa
cmp
or
loop
ss
mov
push
push
daa
sbb
stc
sub
mov
clc
xchg
pop
cltd
call
iret
rcrb
sbb
mov
loopne
ja
pop
rorb
xchg
stos
mov
fs
test
and
addb
mov
fidivl
xchg
testb
mov
pop
dec
lcall
adc
addb
and
adc
sbb
test
jb
movsl
popf
xchg
xor
daa
outsl
mov
xor
fldcw
adc
and
outsb
adc
inc
mov
ja
adc
xchg
bts
les
xor
jo
testb
lcall
pop
sub
test
enter
fs
mov
outsb
insb
jl
push
cmpsl
fimull
or
repnz
pop
xchg
hlt
pop
lcall
pop
inc
sarl
call
fimuls
xchg
cmpl
xlat
imul
ljmp
dec
mov
int
decb
push
stos
adc
mov
fs
divb
inc
add
mov
test
dec
in
push
in
adc
push
sub
data16
cmpsb
bound
fmuls
loopne
mov
outsw
xor
mov
sub
or
fstp
mov
test
inc
pop
xor
pop
loop
out
or
or
mov
or
es
scas
les
in
ja
dec
dec
popa
cmc
repz
push
xchg
enter
pushf
jg
les
popf
push
hlt
lahf
push
movsl
or
jae
jl
dec
pop
mov
insl
pushf
ja
test
les
or
movsl
xchg
mov
mov
test
std
fadd
nop
outsl
push
dec
add
in
jecxz
insb
push
nop
mov
jmp
pop
daa
movsb
inc
sahf
xchg
jmp
lock
push
ja
test
inc
dec
xor
inc
mov
sub
dec
gs
aaa
in
fs
mov
and
dec
adc
push
in
and
sahf
cld
repnz
pop
mov
push
adc
adc
jmp
nop
fstpl
nop
std
sub
test
sub
push
adc
mov
shll
adc
jp
out
xchg
scas
scas
ljmp
xchg
sub
or
jnp
fcomp
mov
mov
xchg
and
and
push
inc
and
cli
js
xchg
jmp
adc
fsubrl
and
inc
jae
popf
push
fstps
fistl
popf
insb
out
fidivl
xor
jno
rol
lahf
dec
call
out
mov
stos
stos
jmp
jne
movsl
sahf
iret
in
clc
int
adc
adc
imul
push
shl
das
testl
or
or
pop
arpl
add
popf
cmp
or
inc
cmpsb
xor
test
mov
es
mov
fucomp
sahf
dec
movl
jle
mov
fstp
mov
es
out
xchg
sbb
xor
push
mov
xlat
sub
shl
and
xchg
fwait
leave
ret
push
mov
cmp
and
push
xor
cmpsb
mov
sub
jno
jnp
sbb
xchg
inc
jb
sahf
cmpl
sahf
stos
jo
sub
pop
push
jle
push
pusha
push
xchg
lds
cmp
adc
test
call
jno
jae
xor
xor
sub
mov
sti
jecxz
xor
ret
test
out
ret
mov
inc
in
pusha
fstpt
ss
push
mov
dec
jne
aaa
cmp
xchg
mov
cmp
inc
enter
push
inc
lods
test
dec
push
xchg
dec
lret
sbb
ja
shrb
addl
cmpsl
and
sbb
jbe
or
leave
outsl
fiadds
sub
push
add
cmc
dec
push
mov
pop
pop
in
and
fsubr
in
in
sub
imul
aad
inc
fadd
aaa
jb
aas
cmp
jae
imull
jmp
fmulp
dec
test
pop
mov
xor
fcomps
inc
mov
fstl
push
cmc
inc
pushf
mov
jge
ficoms
pop
add
dec
dec
out
mov
mov
sbb
xor
insl
lods
inc
fnstenv
int3
dec
jle
mov
cmpsb
jg
inc
jl
idiv
repnz
rcll
xor
test
xor
repz
inc
mov
sbb
lret
xor
fs
mov
push
mov
cmp
mov
std
arpl
stos
adc
fists
xchg
push
push
cli
push
pop
sbb
movsb
stos
sub
pop
out
ds
push
push
stos
or
add
in
sub
mov
fs
lods
mov
je
xchg
mov
into
ror
fldl
movnti
dec
or
out
repnz
inc
repnz
stos
xor
rol
sahf
fisubl
mov
adc
jle
add
das
pop
xchg
cmp
push
inc
sub
jne
add
add
imul
push
sbb
ret
test
addr16
adc
in
fmull
jmp
mov
nop
popf
jb
bound
push
in
pop
rol
movl
push
jne
pop
push
sub
dec
push
in
xor
sbb
movsl
stos
mov
insl
aas
rcrb
bnd
mov
mov
jnp
push
inc
dec
icebp
adc
xchg
jb
insb
loope
ljmp
out
sub
mov
or
mov
vpaddb
pop
dec
in
pop
movsb
push
popl
pop
arpl
sbb
shll
ret
pushf
or
lret
jb
and
adc
push
test
mov
les
mov
mov
xlat
pop
dec
cmpsb
push
aad
in
mov
cmp
jmp
mov
mov
lret
sub
push
jp
loop
or
sti
xor
lahf
lods
out
cmp
add
movsb
test
xchg
mov
pusha
rclb
xorb
insb
les
jne
out
push
and
sbb
outsb
jae
idiv
jno
jg
or
sbb
xchg
xchg
imul
arpl
xor
lcall
mov
sub
and
out
out
ficompl
mov
xchg
lret
sbb
imul
cmc
sbb
sub
scas
cmpsl
dec
lret
movsb
loope
jae
mov
fwait
sti
push
jne
mov
sub
sahf
pop
scas
in
ds
outsl
loopne
xor
push
jecxz
mov
rorl
adc
xor
xlat
rorb
dec
xor
sbb
fsubl
cld
and
cmp
test
adc
cmp
cmc
loopne
clc
pusha
dec
push
icebp
mov
leave
cmp
adc
test
repz
xchg
xchg
push
and
ret
add
test
lret
sbb
imul
xor
scas
xchg
or
xchg
out
fs
xor
fsts
aaa
scas
pop
bound
pushf
lcall
out
sub
mov
test
adc
insb
into
lcall
inc
push
mov
mov
out
cmp
jae
js
and
mov
jb
pop
lock
sub
jae
scas
outsb
push
mov
jg
dec
movsl
shlb
mov
xchg
xor
sub
jbe
sbb
in
out
test
push
add
stc
cmp
ds
scas
cmp
iret
pusha
sbb
ljmp
sub
jl
push
fcmovne
mov
es
nop
ljmp
stos
inc
dec
cmp
inc
xchg
repz
cwtl
aas
les
notb
jle
jns
jbe
or
lods
push
cwtl
push
call
inc
and
std
cltd
ficompl
push
sub
out
in
or
test
es
bound
sahf
fidivrs
aaa
jecxz
mov
pop
lcall
lds
xchg
cmp
mov
in
mov
sbb
sbb
repz
gs
insl
cmp
insl
xchg
or
int3
int
sub
outsb
leave
mov
call
mov
test
outsb
cmpsb
or
into
jg
and
data16
add
pop
es
or
in
or
pushf
lea
jmp
and
jle
dec
in
cli
testl
fs
divb
test
pusha
dec
ss
jge
int
enter
dec
mov
mov
clc
adc
mov
addb
pop
loope
xchg
cmpb
pshufw
and
mov
push
add
pop
test
test
and
mov
cmp
pop
push
je
pop
cmp
ficoms
mov
push
test
lock
sub
lret
das
gs
clc
jb
push
orb
sub
or
cmp
dec
mov
cmp
mov
push
add
adc
cmc
dec
out
push
rol
dec
rorb
cs
dec
dec
mov
jge
xchg
std
aas
cwtl
jecxz
test
sub
fistpll
push
jle
xchg
clc
or
sub
xor
pop
ja
sub
ds
mov
enter
int3
gs
icebp
out
adc
xchg
push
fidivrl
cmpl
mov
cli
loop
mov
jb
xor
jne
outsl
xor
lret
mov
fnsave
add
xchg
pop
mov
into
in
jp
pop
sbb
ds
xor
lock
daa
test
mov
pop
mov
cmc
rcr
mov
addl
das
lret
xchg
xchg
ror
push
pop
jg
fcomps
lods
sahf
dec
ljmp
pop
mov
mov
push
adc
dec
fsubl
and
mulb
push
arpl
inc
inc
mov
bound
pop
aad
mov
xchg
push
push
dec
inc
add
int3
push
std
stc
adc
divl
push
arpl
fiadds
dec
arpl
pop
or
or
ds
push
sbb
out
mov
cmc
stos
pop
aaa
and
sbb
dec
and
roll
es
pop
sub
lock
mov
xchg
cmp
cmp
and
lea
mov
dec
push
lret
rclb
jg
movsl
mov
sub
je
mov
addr16
scas
pop
sub
jb
jb
bswap
mov
andl
idivb
xor
fdivrl
aaa
fsubrl
xchg
insb
fisubl
adc
lcall
cmp
xchg
inc
cs
iret
push
pop
sub
and
nop
push
cmc
mov
add
sahf
xchg
sub
ret
fs
mov
mov
fs
in
andl
pop
pop
in
dec
sahf
js
scas
fmuls
jbe
enter
sub
mov
xchg
mov
add
out
imulb
push
push
mov
aaa
pop
or
orps
cli
adc
aas
mull
sahf
ss
aaa
sbb
cld
adc
notl
cmp
ror
outsl
and
dec
mov
and
insb
cmp
lea
negb
in
scas
pop
repz
lods
lea
xchg
fidivl
testb
pop
push
testl
xor
test
mov
mov
cs
cmpsl
pop
xor
test
lea
roll
add
sub
stc
pop
sti
xchg
and
popa
sbb
out
cmp
add
mov
sub
popa
mov
sub
aaa
sbb
xor
ret
mov
inc
and
test
and
sub
and
mov
push
cmp
dec
mov
aam
outsb
mov
pop
add
out
lods
fucomp
mov
mov
push
into
pop
jno
xchg
ret
push
pop
js
leave
mov
loop
mov
btr
inc
push
xchg
adc
call
sbb
push
inc
cmc
aad
adc
rcrl
ss
sahf
call
pop
sbb
sti
popf
vpmacsdqh
jle
pop
push
adc
sbb
dec
or
sahf
cmp
jp
rorl
or
pop
mov
arpl
push
mov
push
mov
sahf
jg
adc
jo
nop
pcmpeqd
pop
out
out
loopne
lds
mov
imul
pop
sbb
data16
inc
int
aaa
mov
lret
movsl
inc
push
popf
inc
fdiv
ja
sarb
jl
dec
xchg
pop
icebp
and
fisubl
push
pop
and
pop
pop
xlat
adc
sbb
pop
mov
call
mov
mov
dec
xor
push
jo
fcoml
mov
shl
dec
sbbl
call
sub
cmp
in
sub
inc
jle
mov
pusha
test
cmp
mov
repz
jecxz
jb
jle
popf
ret
or
inc
ss
add
add
jns
popa
cmp
test
movsb
fidivrl
xor
stos
or
mov
test
mov
push
shlb
fldenv
jge
lods
mov
xchg
mov
sbb
xchg
xchg
sahf
xor
test
push
jb
dec
insb
popf
leave
jae
cli
and
std
rol
pop
adc
xor
dec
stos
mov
je
push
jl
mov
mov
subb
push
or
jbe
xchg
testl
jno
cwtl
pop
or
lea
and
loopne
int
fs
lods
mov
sbb
in
movsb
in
fidivrl
test
dec
and
subb
cmp
add
decb
outsl
sub
adc
inc
out
popa
push
mov
and
loope
and
push
sbb
scas
pop
nop
adc
arpl
xchg
cmp
and
in
inc
lea
xor
pop
push
add
cmp
fcoms
stos
in
loopne
ds
jge
std
lds
movsb
mov
mov
jmp
test
sbb
mov
cmpsl
sub
sbb
es
or
test
les
mov
push
fldl
mov
mov
imul
pop
mov
adc
fisubrl
xor
repz
repz
int
sub
and
fldenv
outsl
sbb
pusha
and
cmp
and
call
push
mov
xchg
jge
xor
setp
stos
imul
dec
push
loope
dec
les
inc
mov
fisttpll
mov
dec
jp
outsl
rcll
out
popa
fs
xor
and
ret
xlat
movsl
loop
icebp
idivb
rcrb
out
jecxz
imul
cmpsl
mov
pop
mov
cmpsb
les
nop
lea
lods
jmp
jge
xchg
lea
pop
scas
jmp
add
or
clc
push
mov
sub
cmpsl
cld
mov
dec
push
pop
inc
mov
lods
mov
dec
adc
and
xlat
lret
fmul
jmp
sub
jno
icebp
jnp
pop
jnp
movsl
jae
or
repnz
rol
jg
cmp
movb
inc
xor
fdivrl
mov
movsl
sbb
cltd
and
mov
out
test
daa
push
jmp
pop
jg
cmp
out
rolb
loope
jo
js
dec
shll
sub
sub
scas
ljmp
das
mov
inc
test
out
mov
mov
xor
sub
mov
push
pop
sub
jmp
lds
mov
pop
inc
mov
xchg
pushf
lock
add
clc
leave
pop
mov
addr16
scas
xor
test
jns
xchg
add
mov
test
pop
add
stos
ret
iret
loop
or
mov
cmp
enter
jo
pop
cli
movsb
es
movsl
aaa
in
inc
dec
sub
pop
and
fwait
popf
add
lret
outsb
mov
shll
jmp
loop
nop
sub
bound
mov
sub
jge
inc
rcrl
cmp
in
getsec
imul
ret
mov
jmp
sub
gs
adc
adc
out
push
cmp
pusha
ljmp
xchg
adcb
insl
jnp
inc
sub
mov
inc
sub
je
push
mov
add
gs
pop
and
push
arpl
pop
cwtl
iret
xchg
loopne
adc
push
in
push
dec
cmpsb
in
std
add
jne
add
xchg
mov
iret
jns
pop
mov
jno
nop
rorl
movsb
insl
dec
out
int3
adc
jg
xchg
adc
mov
enter
push
lea
and
movb
test
test
mov
es
mov
add
inc
sahf
pop
jnp
cli
jo
or
sbb
aad
stos
mov
fiaddl
adc
shll
hlt
dec
push
in
sti
es
mov
test
push
mov
jecxz
movsl
cmp
out
mov
inc
stc
ja
or
pop
cmc
sarl
cmovns
adc
mov
sbb
push
xchg
xchg
mov
xlat
scas
jmp
xor
dec
sbb
jbe
out
insb
xchg
xor
decb
mov
insl
push
inc
ret
rcl
fcomp
movsb
pop
jle
lcall
push
popf
and
mov
test
xlat
xchg
imul
jmp
xchg
cmp
insb
popf
jb
adc
pop
adc
or
scas
popf
arpl
bound
mov
lahf
inc
mov
and
test
out
jo
insb
test
pop
xchg
adc
jg
xor
sub
fimuls
sub
and
mov
push
fists
adc
loopne
cmp
push
loope
les
movsl
xchg
pop
pop
into
test
xchg
sub
sti
inc
xchg
xlat
pushf
pop
sbb
mov
jne
aas
out
call
xor
sahf
xchg
lcall
rcrl
decb
or
adcl
in
xor
xchg
fsubrp
lret
dec
divb
xchg
and
or
adc
pop
sbb
push
lret
std
data16
and
inc
mov
lds
lcall
into
xor
insl
add
add
sbb
and
ja
out
iret
ret
xor
pop
dec
sbb
in
push
gs
jns
mov
mov
xor
dec
mov
cwtl
jno
jmp
enter
stos
je
in
sub
les
pop
je
nop
xchg
sub
mov
push
pop
xorl
push
arpl
loop
add
or
scas
js
mov
cmc
mov
shll
push
out
push
repz
xchg
and
out
pop
test
sub
das
fdivrs
jae
flds
aaa
cli
ret
push
xchg
xor
dec
push
xor
repnz
fadd
int
fistps
push
in
or
xchg
mov
insb
rolb
mov
dec
xor
div
dec
je
jmp
outsl
xor
rcrl
lods
fmul
push
push
xlat
bound
inc
xchg
mov
inc
sub
sub
imul
or
int
and
fs
icebp
xchg
dec
pop
xorb
test
jb
imul
cmp
fs
lret
ret
fidivs
test
loopne
dec
loopne
out
fdivrp
and
lock
sbb
jp
push
cwtl
add
fstps
popl
or
adc
scas
std
mov
inc
lea
inc
inc
movsb
and
mov
sub
out
jle
xor
jmp
adc
fdivs
cmc
push
mov
jl
jnp
mov
pop
outsl
loop,pn
ljmp
mov
fmulp
imul
or
dec
insl
mov
jge
loopne
jp
push
pop
push
clc
arpl
mov
shlb
mov
adc
inc
and
dec
inc
pop
clc
subb
mov
in
les
xchg
outsl
clc
mov
movsb
loope
push
fildll
stos
lods
jg
xor
push
xchg
push
test
roll
add
mov
repnz
jb
or
push
inc
jb
enter
daa
or
dec
mov
pop
out
or
pop
xor
loopne
shl
cmpsl
xchg
adc
subl
daa
pop
xchg
push
pop
inc
cltd
pop
mov
jg
sub
mov
cli
jg
push
std
mov
push
clc
and
mov
mov
shrl
adc
adc
hlt
mov
push
popf
xchg
jo
jo
clc
and
movsl
ficoml
sti
js
mov
lds
adc
pop
je
xor
xchg
mov
adc
jp
pusha
jns
scas
int
cmp
fcomps
stos
movsl
push
jp
cmc
push
test
inc
push
leave
lds
sbb
jp
adc
and
loop
rolb
mov
lock
sub
mov
xor
in
cmp
xor
in
sub
mov
pop
xor
sub
test
je
popa
xor
xor
add
add
mov
mov
push
xor
cld
das
js
dec
push
fildl
flds
cmpxchg
int3
in
xor
mulb
dec
jl
aad
push
int
ret
dec
arpl
cmp
sbb
mov
jns
pop
xchg
es
cld
popa
cli
sub
mov
test
sti
push
hlt
cmp
outsb
rolb
pop
and
scas
shl
xor
dec
jg
xor
sbb
es
push
imul
or
adc
or
push
subl
add
mov
loope
sbb
xor
push
cmpsb
inc
movsb
push
xchg
in
arpl
inc
sbb
xchg
xchg
cmp
in
jecxz
pop
sub
dec
pop
jl
aaa
pop
outsb
inc
cld
push
jp
cmpsb
xchg
push
jmp
push
stos
jne
mov
jno
popa
adc
icebp
shll
xor
inc
call
fnstsw
aad
movsl
out
inc
sub
add
ljmp
loope
and
fwait
pop
js
dec
ror
cmp
mov
dec
out
push
pop
inc
into
dec
jae
sbb
sub
mov
inc
sbb
jbe
imul
insb
mov
sarb
shll
mov
inc
cmp
pop
lds
call
es
insb
int3
mov
pop
cmp
or
bound
push
pop
push
cs
jecxz
leave
dec
push
ljmp
push
add
faddl
xchg
das
imul
sti
pop
data16
movsb
insb
and
jge
dec
fmull
int
ret
add
add
test
scas
xor
add
pop
push
leave
arpl
push
insl
repz
jle
subl
pop
adc
aam
pusha
fisttps
shl
dec
lret
push
cmpsb
push
mov
mov
mov
and
and
popa
adc
mov
dec
inc
bound
stc
daa
pop
insl
dec
out
fdiv
pop
cli
cmpb
das
mov
fisttpll
shl
add
sahf
xor
call
jge
dec
je
mov
jne
adc
push
fwait
stos
dec
pop
push
cmp
cmp
pop
out
aaa
loopne
insb
jne
mov
and
test
out
aam
jle
movl
in
loopne
mov
mov
out
out
xor
repnz
inc
das
push
jne
or
and
and
shl
xor
mov
fisttpl
lret
xchg
push
sbb
sbb
js
lret
mov
lret
pop
jmp
neg
jae
lods
mov
test
clc
pop
orb
movsl
aam
pop
in
sarl
aad
gs
push
fidivl
imul
sub
lock
mov
fcmove
insb
and
jmp
pop
inc
pusha
mov
xor
ja
mov
js
push
rcrb
js
lods
rcll
std
jne
push
or
negl
jge
sub
push
cmp
sbb
aas
into
sahf
rcrl
xor
inc
fistl
nop
stos
mov
sbb
xor
pop
adc
popf
stc
cmp
mov
in
xchg
daa
sub
mov
out
and
add
rcl
lods
jmp
test
pushf
mov
rorl
out
std
testl
inc
dec
xchg
or
lock
jns
inc
push
js
bound
dec
mov
dec
sub
icebp
fcoml
push
jo
addr16
inc
enter
sub
pop
pop
ja
sbb
cmp
jl
push
sub
push
popf
aad
sub
subl
push
add
shlb
jge
in
icebp
rclb
int3
mov
push
enter
or
inc
pop
xchg
jge
pop
xchg
mov
pop
mov
xlat
inc
dec
stos
pop
shlb
jb
push
pop
pop
mov
fs
adc
jmp
pushl
lahf
xor
and
and
int
inc
xchg
pop
or
or
inc
adc
std
iret
xor
das
cltd
xor
popf
jmp
and
inc
xchg
jns
mov
dec
xchg
or
test
sub
inc
jbe
arpl
or
dec
xor
call
and
fyl2xp1
sub
or
mov
xor
rcll
push
mov
or
fcoms
cmp
jbe
push
mov
sbb
mov
cli
and
ret
rdmsr
jg
sbb
mov
mov
xor
push
pop
add
mov
sbb
xor
and
push
mov
out
ud0
stos
out
dec
loopne
gs
in
jle
adc
clc
je
lea
ud1
sub
jbe
ds
inc
mov
cmpsb
fstpl
mov
adc
insl
jle
push
adc
push
cmp
int
adc
movsb
mov
push
pop
insb
jnp
nop
sub
xchg
ret
cmp
push
sahf
pop
xchg
mov
jae
mov
pop
leave
sub
cmpsb
loope
mov
pop
lret
js
push
lcall
pop
mov
xlat
jle
dec
popa
cmp
and
jge
and
mov
pop
mov
add
sub
ficoms
call
mov
loop
jbe
inc
enter
mov
dec
test
sbb
cmp
sub
popf
pop
je
je
aaa
out
out
pop
add
std
xchg
cmp
mov
dec
repnz
adc
lahf
scas
dec
popf
bound
hlt
mov
mov
lret
push
lret
std
inc
out
lret
push
js
xor
js
mov
aas
add
or
daa
cli
push
loopne
mov
cmp
enter
dec
mov
xorl
fdivs
fidivrl
push
inc
adc
clc
mov
mulb
sub
xchg
sub
dec
and
ss
in
add
and
test
inc
cmp
repz
xchg
inc
xor
xor
std
xchg
fisubs
in
ret
idiv
hlt
imull
fstl
xchg
imul
ficomps
mov
test
into
push
add
daa
cmp
cwtl
lea
add
icebp
jecxz
cmp
dec
cmc
ret
push
dec
dec
dec
bound
inc
jp
sub
add
or
xchg
pushf
leave
imul
enter
fidivl
mov
rcrb
ret
mov
mov
mov
mov
stc
pop
into
or
ret
pop
pop
adc
scas
jns
cwtl
lock
fiaddl
jne
dec
repz
dec
data16
pop
adcb
aas
fnstenv
stc
sahf
imul
push
add
push
mov
mov
sub
addl
std
mov
push
sbb
pop
test
cmpsl
bound
and
xor
and
sub
movsl
jl
push
lods
xor
repz
jbe
imull
inc
sbb
out
fcompl
ret
lods
stos
mov
sbb
sarl
mov
mov
mov
jbe
jl
cs
mov
fcos
pop
in
ljmp
and
pop
mov
and
pop
adc
movsl
std
loopne
push
push
push
loope
xlat
es
out
xor
mov
dec
push
add
sbb
mov
cmp
pop
adc
icebp
in
mov
mov
data16
add
mov
addr16
stc
shrl
stos
fucomi
mov
mov
in
nop
sarb
cmp
es
mov
loopne
inc
rorb
cltd
ja
int3
jbe
aaa
xor
mov
popf
xchg
adc
inc
pop
mov
push
dec
test
imul
fimuls
les
pop
lahf
xchg
jl
mov
mov
out
mov
xchg
pusha
mov
test
loope
or
mov
push
ds
das
clc
int3
inc
mov
pop
in
inc
mov
jg
pop
decl
lahf
push
xchg
push
mov
or
jecxz
adc
mov
xchg
test
inc
sub
cmpsl
adc
ret
imul
xchg
sbb
sbb
pusha
pop
pop
mov
notl
mov
mov
into
jecxz
adc
mov
rcrb
dec
or
outsl
fisttpll
bound
mov
gs
mov
cmp
adc
mov
mov
xlat
pop
push
sub
pop
scas
dec
pop
fs
insl
std
repnz
jb
fstps
xor
xchg
jmp
addr16
push
mov
push
cmp
push
in
jp
test
nop
ljmp
inc
fidivrl
push
and
mov
or
xchg
pusha
inc
mov
pop
mov
push
test
sub
pusha
lret
cmp
fisttps
add
call
hlt
xor
mov
jne
fwait
dec
fcomps
cmp
xchg
inc
mov
lahf
mov
jmp
dec
hlt
push
lea
inc
add
sbb
or
test
push
mov
testl
inc
andl
sub
push
cmpsb
in
xchg
shl
test
stos
insl
lds
add
scas
dec
jno
and
stos
fcmovb
call
push
aas
fidivl
loopne
jle
sbb
mov
ljmp
test
das
mov
pop
popf
nop
jbe
mov
mov
inc
xor
add
loope
xor
loopne
push
ss
jno
out
add
pop
es
jp
cwtl
add
in
es
lods
inc
xchg
popf
lret
jl
or
mov
inc
sub
adc
inc
ljmp
mov
daa
cltd
push
hlt
or
mov
jnp
xchg
in
scas
inc
inc
popa
mov
stos
test
xchg
dec
rcll
ss
out
hlt
call
sub
insl
push
adc
add
inc
xchg
jmp
lods
or
lods
gs
sbbl
ret
stos
sub
gs
push
sub
int
jge
nop
cld
or
lock
iret
pop
imul
rorb
xchg
mov
stos
mov
add
addr16
scas
ljmp
ret
add
fwait
sbb
mov
push
sbb
pushf
pop
inc
push
clc
loop
loopne
mov
inc
test
mov
add
enter
testb
mov
add
imul
or
daa
cmp
dec
push
mov
push
nop
mov
fisubrs
xchg
cld
or
add
fwait
xchg
jo
xor
call
ljmp
mov
fwait
inc
dec
stc
and
rcrb
scas
mov
adc
pop
gs
mov
lods
xchg
sub
mov
ret
lahf
add
lock
mov
fwait
inc
lods
or
loop
jae
inc
xor
push
stos
and
adc
lea
push
out
std
int3
negl
out
and
jae
dec
pop
mov
xor
pop
movzwl
mov
mov
cmpb
movsl
dec
lea
xchg
mov
jbe
mov
fs
stc
mov
movsb
lcall
inc
les
adc
out
sbb
pushl
push
aas
mov
les
sbb
pushf
mov
ror
cltd
jle
jb
cmp
test
and
xchg
push
inc
push
xchg
daa
cmpsb
mov
je
push
mov
pop
pushf
fwait
mov
jbe
mov
cmp
fisubl
out
out
test
push
or
add
jge
movq
mov
cmp
in
push
clc
push
cmp
mov
xor
out
xchg
sbb
ds
scas
test
sub
mov
pop
ss
xor
lods
lcall
push
mov
addr16
ret
pop
pop
pop
sub
pop
xor
add
arpl
lock
or
cmc
jle
lods
inc
les
sbb
dec
cmp
stos
out
jmp
fdivs
and
mov
imul
dec
test
lods
out
pop
ficompl
jp
push
push
les
dec
bound
pop
inc
test
push
hlt
push
stos
inc
inc
sbb
das
jmp
int3
xorl
bound
in
test
lock
jae
sbb
add
data16
rcll
and
pop
mov
mov
xchg
mov
clc
mov
pop
and
mov
imul
lret
cmp
add
xchg
and
push
pop
inc
pop
inc
ret
jl
pop
sub
sbb
xor
ja
mov
xchg
and
push
into
jo
and
xor
pop
lahf
cwtl
fdivrs
pop
cmp
xchg
int
cmc
push
mov
or
inc
les
loop
fsts
push
ss
out
xlat
push
std
sbb
mov
sub
inc
jmp
adc
add
and
imul
lods
lcall
in
ljmp
mov
dec
shll
xchg
pop
xchg
insl
sbb
fildl
push
xchg
es
dec
and
lret
cmpb
or
xor
ret
lods
pop
push
cmpsb
cld
inc
mov
fnstenv
jne
xor
cli
mov
add
push
aaa
xchg
in
das
pop
lock
pop
stc
roll
aaa
xchg
daa
popf
pusha
xchg
hlt
cmpsl
jnp
pop
and
mov
push
xchg
xchg
mov
xor
in
fisttpll
in
xchg
sub
out
jp
pop
into
xor
or
sbb
push
dec
popa
push
inc
pushf
pop
jecxz
inc
das
adc
es
inc
push
cmpsl
neg
lret
fld
mulb
jp
mov
sbb
int
inc
stc
jecxz
in
cld
dec
jo
adc
cmp
stos
loope
jne
fldt
leave
xchg
xlat
or
inc
cmp
movsb
imul
imul
xor
jge
mov
aam
mov
in
push
les
jge
adc
std
pop
add
push
xchg
addl
or
pop
cmp
aam
and
xor
clc
cmp
fcoms
add
mov
rol
adc
and
cmp
jbe
pop
mov
or
bound
repz
icebp
push
inc
scas
repnz
in
mov
dec
loope
jb
test
dec
rorl
push
roll
xchg
sbb
or
loop
js
add
movsb
rcrl
cmpsb
cli
les
or
loopne
in
hlt
je
dec
and
rcll
out
cwtl
jbe
pushf
xor
pushl
push
jns
cli
pop
js
mov
xor
fisttps
repz
js
xchg
into
mov
int3
xor
add
scas
fmulp
and
je
pop
cmp
inc
mov
mov
xor
push
inc
pop
ds
pop
mov
push
sbb
and
pop
xor
subl
sbb
and
js
pop
nop
and
es
inc
in
fstps
lahf
and
jno
add
stos
mov
lret
popa
dec
jns
adc
cmpsl
fdivp
xchg
pop
shlb
sub
sbbl
scas
jge
sahf
pop
adc
cmovne
push
insl
outsl
add
inc
mov
aas
test
dec
mov
test
xchg
add
daa
dec
adc
mov
mov
fimull
scas
adc
cwtl
imul
stc
mov
std
add
xchg
mov
xchg
pushf
inc
fwait
mov
ret
jge
movsb
cmp
adc
mov
jge
popf
sbb
loopne
push
fnstenv
pushf
aad
outsl
or
push
mov
or
ds
ss
test
pop
push
mov
test
push
jno
dec
or
int
popf
ja
mov
xchg
out
int
mov
addr16
les
jge
lret
cmpsl
inc
dec
adc
shr
mov
imul
add
xor
dec
and
enter
rolb
incb
xchg
jb
mov
push
xchg
cmp
fldenv
sub
mov
dec
cwtl
jns
fstl
mov
and
je
pop
dec
adc
adc
or
mov
stc
cltd
rcl
jle
je
push
sub
nop
mov
dec
sub
and
pop
fildl
cmpsl
pop
xchg
lock
and
xchg
shll
movsb
mov
push
addr16
xchg
out
movsl
stc
adc
ret
pop
jg
mov
push
scas
and
stos
hlt
ret
jb
sarb
mov
call
ds
mov
sarl
movb
cltd
pushf
mov
leave
adc
dec
pop
shrl
and
loop
and
or
cltd
xchg
clc
fdivp
movnti
bound
cli
add
xorb
and
push
mov
gs
and
adc
push
outsb
pop
jg
int3
in
in
mov
mov
lea
or
repz
aaa
fildll
sbb
mov
imul
divl
cli
in
sub
push
out
inc
add
popa
dec
out
or
pusha
int3
xchg
jp
mov
insl
cmp
cmpsl
fwait
rol
sub
inc
shrb
imul
add
testb
and
ja
fxch
fsubrs
mov
call
in
adcb
inc
aaa
rol
pop
das
aaa
mov
loope
xchg
out
push
mov
ss
jmp
testl
out
xchg
rclb
ljmp
sub
loopne
push
push
shll
iret
jbe
or
xchg
or
add
xor
iret
sahf
imull
je
mov
enter
push
ss
in
enter
daa
inc
push
sub
dec
popf
or
and
or
comiss
push
daa
dec
pop
push
adc
ficoml
ret
sti
aam
syscall
add
arpl
sarb
rol
lea
daa
ljmp
jo
imul
lcall
mov
mov
dec
test
mov
stos
xchg
fsubs
lcall
addr16
mov
cmp
bnd
enter
sbb
mov
jne
das
jmp
jle
jae
jle
test
stc
mov
pop
pop
sahf
jl
xchg
imul
loopne
pop
and
daa
and
xchg
xchg
sbb
icebp
fidivrl
icebp
inc
sbb
into
inc
mov
adc
lods
shl
xchg
push
xchg
add
xchg
xchg
mov
cs
outsl
jns
sub
or
fisttpll
mov
gs
cld
pop
jmp
jg
fdivrl
add
out
stc
and
mov
inc
dec
push
nop
test
add
push
jge
pushf
push
ss
push
ja
jne
push
mov
aas
fs
jl
or
bound
jg
repz
daa
pop
aaa
sbb
adc
test
sub
mov
dec
push
div
adc
mov
adc
call
inc
sub
and
roll
add
das
shll
int
pop
mov
shll
insb
jnp
xchg
out
mov
mov
loope
xchg
jecxz
mov
push
mov
inc
inc
push
jp
lret
ss
test
shl
adc
mov
xor
and
push
sbb
int3
in
jecxz
add
into
js
adc
cs
pop
xlat
jae
fwait
cmp
sbb
jae
nop
mov
push
dec
mov
and
xor
xor
add
cmpsl
test
jo
out
clc
dec
fsubs
jecxz
movsb
clc
jbe
imul
dec
ret
sbb
mov
in
sub
mov
xor
mov
mov
push
shrl
adc
adc
inc
imul
xchg
cmp
and
mov
cmp
jmp
sub
sub
xchg
movsl
pop
in
test
mov
stos
dec
ja
aaa
mov
or
das
mov
pop
shll
insb
push
push
fistpll
dec
fcoms
inc
xlat
add
mov
sbb
call
sahf
lcall
push
jl
pop
xor
fwait
mov
inc
and
push
xchg
inc
jns
bound
inc
inc
jecxz
insb
inc
dec
add
js
push
cmp
inc
xor
scas
mov
push
dec
jg
push
or
arpl
dec
in
into
mov
or
pop
push
aam
sub
add
sahf
inc
xor
or
sbb
xchg
and
adc
iret
subb
clc
jns
jo
std
mov
in
mov
mov
or
ret
cli
dec
aad
mov
jg
sub
push
push
repnz
xchg
bound
sti
cld
push
sahf
flds
adc
test
lcall
fsubr
insb
pop
push
vphadduwq
xor
or
cmpsl
dec
push
insl
mov
xchg
jno
addr16
dec
cltd
mov
or
adc
cld
xor
dec
rcrb
add
ss
sub
mov
ret
addl
jbe
cmc
gs
dec
mov
push
and
sub
sbb
push
fsts
pop
pop
repz
jg
push
rcrl
and
loopne
rolb
outsl
icebp
daa
push
int
sahf
dec
subl
mov
insb
sbb
stc
dec
dec
sub
lret
fadds
adc
push
mov
mov
idiv
out
fwait
cwtl
push
jle
iret
int3
es
lcall
xchg
mov
jle
inc
xor
imul
fisubl
rcll
call
icebp
sub
jg
jge
loop
fdivp
sub
jns
inc
inc
cld
xchg
and
mov
mov
addr16
rorb
test
mov
cwtl
or
sub
lds
movsl
out
inc
gs
idivb
sbb
xchg
jge
call
mov
fldl2e
aaa
std
dec
rcrb
in
aad
test
xor
pusha
aam
mov
mov
xchg
icebp
push
dec
mov
xor
stos
mov
adc
pop
fdivrs
adc
movsl
stos
pop
insl
lahf
xor
sub
xchg
adc
xchg
gs
mov
adc
scas
aam
stc
push
nop
in
aas
jg
cmp
out
jle
mov
jl
cs
add
add
mov
xor
push
sub
nop
fwait
aad
sti
xchg
mov
dec
bound
sub
call
mov
xchg
cmc
movsb
cs
pop
test
pop
mov
mov
mov
dec
cwtl
rcr
add
jne
aad
jns
sbb
pop
das
or
leave
adc
push
and
inc
sub
jg
and
adc
push
jne
ljmp
push
rorb
idivb
lret
hlt
lods
sub
hlt
daa
push
mov
push
cmp
loopne
push
sbb
call
cld
mov
aas
inc
fadds
repnz
sbb
inc
cli
add
dec
mov
adc
xor
scas
adc
cs
outsl
cmp
mov
jne
repz
inc
fsubrs
setl
mov
lock
test
push
mov
cs
and
inc
pop
mov
out
fiadds
in
xchg
in
inc
iret
sbb
xor
std
fdivl
inc
mov
int3
add
ljmp
pop
inc
loopne
dec
push
out
lods
popa
mov
mov
lret
fists
push
les
out
es
push
pop
jecxz
lods
pop
cmp
ror
or
xor
cmp
pop
jge
sub
jno
sbb
adc
adc
outsl
stos
lock
seta
sub
dec
cmp
xchg
fimull
jl
push
sub
das
outsb
push
push
int
ret
fnstenv
xor
mov
sbb
push
outsl
movsl
scas
mov
aas
arpl
sub
jmp
lds
enter
push
mov
out
xor
leave
xchg
outsl
cmp
insb
fwait
adcl
jl
jg
and
cmp
add
cs
dec
inc
mov
fdivs
pop
lahf
sbb
jae
mov
inc
mov
and
es
push
jg
fldenv
jb
fdivrl
sbb
cmp
push
aam
nop
or
je
pusha
mov
outsl
mov
or
lds
sbb
pusha
sub
mov
out
loop
mov
decb
das
in
xchg
cld
mov
adc
xchg
insb
jne
cld
hlt
or
push
pushf
pop
out
xchg
sbb
jp
shrb
jb,pn
adc
pop
add
and
add
cmp
lea
ss
jne
pop
dec
xor
mov
loope
push
out
incb
roll
dec
cmp
sbb
mov
mov
push
inc
mov
ss
into
dec
adcl
pop
xchg
xor
mov
sbbb
push
jg
dec
test
imul
fnstenv
pop
adc
lcall
sbb
lahf
cli
sbb
stc
cmp
stos
sub
pop
cmp
adc
xor
adc
sub
int3
mov
cld
inc
pop
cmp
inc
xchg
mov
xor
mov
cwtl
mov
dec
mov
sbb
loop
cld
repz
inc
inc
dec
mov
sub
push
cmp
adc
aad
add
cmp
pop
std
jecxz
sbb
clc
repz
and
idivl
jle
adc
dec
pop
fsubl
or
aas
in
pop
cmp
xchg
jnp
rcll
xchg
js
out
pop
imul
mov
clc
mov
mov
pop
adc
pop
lea
call
out
inc
stc
rcl
push
jno
test
mov
push
jmp
jno
pushf
add
inc
lret
enter
push
jnp
dec
sbb
outsl
fmuls
mov
mov
dec
jns
xor
dec
clc
lea
mov
icebp
subl
test
mov
mov
or
fcoml
push
dec
inc
sbb
iret
pop
test
and
xchg
xor
pop
into
arpl
je
fwait
iret
pop
mov
push
inc
cmpsb
jge
outsb
fistl
sbbl
mov
dec
mov
xchg
push
in
jl
mov
movsb
out
jno
jb
mov
out
pushf
xchg
inc
xor
sbb
jecxz
mov
int
sarb
lahf
inc
sub
test
sti
xchg
loop
imul
jb
add
mov
aaa
mov
jg
inc
dec
dec
fs
sbb
cli
outsl
jmp
jle
mov
out
xchg
ret
addl
dec
out
pop
rcl
xlat
adc
sub
jnp
shlb
sar
mov
add
sub
and
and
xor
aaa
xchg
pop
mov
pushf
push
sub
push
mov
aam
std
out
cmp
je
jecxz
dec
aam
xlat
jo
movsb
sbb
or
fsubl
clc
cmp
mov
cmp
cmp
test
mov
push
xchg
adc
icebp
dec
adc
scas
ret
or
add
cmp
loopne
out
cli
xchg
cmp
lea
pop
push
in
sub
clc
les
mov
pop
mov
or
lret
xchg
add
push
out
inc
add
rcll
inc
test
ljmp
push
ret
insb
das
jbe
lahf
cld
jmp
xor
xchg
push
pop
inc
mov
cmpsl
sbb
ljmp
inc
das
int3
pop
testb
mov
or
inc
mov
push
aad
cmp
dec
dec
sbb
sti
icebp
xor
or
xor
or
lahf
xchg
pop
mov
cwtl
call
sbb
shlb
dec
cltd
dec
inc
cli
xlat
js
pop
mov
mov
push
jmp
mov
fdivl
leave
push
call
into
jnp
sbb
ret
clc
das
mov
or
add
mov
sahf
sub
cwtl
stc
ficoms
add
mov
sbb
stos
add
jne
mov
pop
sahf
clc
xchg
mov
idivb
mov
pop
ds
mov
or
jns
lods
sbb
mov
sbb
dec
xchg
mov
mov
cmpb
mov
xchg
pop
sub
incl
jge
push
jp
lcall
sti
dec
mov
sub
adc
jg
aas
mov
jnp
aaa
mov
gs
insb
rorb
or
mov
xor
pushl
inc
popa
xchg
adcl
add
dec
cmp
or
call
je
push
sbb
pop
inc
dec
fwait
test
push
pcmpgtb
stc
add
lock
sub
pop
cmp
push
dec
mov
call
xchg
xchg
addr16
mov
mov
fs
sub
pop
jl
mov
lahf
gs
add
insb
sub
fs
push
outsl
jmp
jmp
jp
int
mov
inc
xchg
outsb
bound
out
repz
loope
mov
sub
mov
out
gs
pop
xchg
fildl
pop
aas
out
inc
push
cmp
insl
rolb
sar
lea
sub
push
clc
jns
push
dec
lahf
mov
mov
dec
sub
xchg
jo
sbb
sub
out
push
loopne
into
pop
std
pop
dec
xchg
pusha
repz
xor
add
sarb
jmp
ds
push
jo
shll
in
rolb
mov
add
jbe
pop
inc
sbb
jecxz
or
dec
stc
jbe
push
jmp
push
std
leave
mov
ret
push
jle
bound
mov
inc
xor
roll
popa
fdivrp
ljmp
inc
lods
ret
dec
sbb
adc
jno
into
jecxz
dec
lods
or
mov
lods
inc
sub
repz
movsb
jecxz
es
addb
out
ljmp
adc
inc
int3
cmpsl
inc
pop
movsl
es
and
fdivl
xchg
push
dec
and
call
or
add
pop
cld
jbe
xchg
cmp
dec
int3
xor
jl
cwtl
jne
out
rolb
fcmovnbe
dec
push
test
bound
jae
sbb
fcoml
popa
sbb
imul
jne
stc
cmp
mov
fidivs
neg
add
mov
jl
rorl
ficompl
sbb
inc
or
mov
add
jae
mov
jne
inc
pushf
mov
xor
mov
lods
push
mov
xchg
test
pop
pushf
test
dec
mov
mov
mov
lret
roll
xor
adc
xchg
addb
and
mov
test
bound
lods
das
rcll
cmp
andb
cltd
jne
mov
and
jnp
fldl
mov
int
rclb
xchg
cld
mov
lahf
in
add
mov
sub
sub
outsl
adc
fcom
xor
sbb
cmp
lcall
lret
mov
push
test
sbb
in
sti
sub
pusha
in
push
jg
xor
mov
and
dec
ja
mov
xor
fildll
fs
or
mov
aad
sbb
testb
ret
sub
xor
and
jp
mov
sbbl
add
fs
loop
in
jge
sub
pop
xor
dec
movsl
loop
xlat
inc
cmp
xchg
out
pop
outsl
lods
dec
xor
mov
arpl
icebp
pop
adc
xchg
std
loope
les
fiaddl
sbb
and
ret
sahf
or
push
jg
test
jo
inc
mov
in
into
mov
xorb
add
push
cmp
scas
xor
lret
cmpsb
dec
jp
mov
inc
lock
les
mov
fnstcw
ret
sbb
jl
inc
stos
xchg
xchg
scas
add
scas
mov
xor
mov
inc
push
sbb
sti
js
push
push
mov
cs
mov
rcrl
mov
dec
ret
mov
shufps
icebp
movsb
pop
clc
insb
xor
cmpsb
push
insl
outsb
andl
xchg
les
fmulp
out
andb
jecxz
dec
insl
mov
repnz
or
les
fbstp
out
lret
scas
fs
frstor
mulb
stos
mov
xchg
sbb
cmpsl
and
cmp
rorb
mov
push
xor
xor
out
cmp
je
push
fisttps
sbb
shlb
xchg
in
sub
test
xchg
inc
call
aam
rclb
rolb
ja
call
subl
mov
xor
loope
das
push
shrl
cwtl
jne
push
push
xchg
xor
mov
add
in
inc
je
std
iret
outsl
inc
cmp
add
and
jno
push
ret
lahf
sbb
push
bts
mov
nop
outsl
pop
push
adc
xchg
insb
and
orb
inc
jl
cltd
mov
inc
mov
sub
fucomi
popf
into
inc
push
push
call
pop
mov
ret
call
sub
imul
fists
and
dec
or
into
ja
jns
add
fs
or
test
push
test
aam
jp
mov
xchg
add
add
loope
mov
sub
inc
out
insl
les
sub
iret
mov
stos
adc
repnz
xchg
jno
jle
adc
push
sub
clc
popf
pop
rorb
push
push
mov
mov
das
add
jne
pop
pop
jg
sbb
cltd
jne
repz
add
xchg
arpl
push
call
add
fcomip
aad
pop
dec
add
loopne
lret
fsubrl
dec
js
xchg
mov
aas
inc
nop
mov
les
add
or
fdivrl
add
sbb
mov
fcmovbe
cmpl
imulb
and
xchg
stc
dec
imul
out
push
pop
adc
push
jbe
stc
pop
faddl
test
sub
inc
jp
cmp
dec
ljmp
xor
dec
mov
mov
jg
and
cmp
loop
scas
inc
pop
jle
push
xchg
sub
pop
pop
mov
je
and
outsl
cmp
mov
push
cmc
imul
push
sbb
popf
inc
jae
addr16
and
xor
repnz
les
decb
lea
call
nop
lods
dec
movsl
inc
pushl
adc
cmp
pop
dec
cmc
pop
adc
stos
cmpsb
push
push
jmp
sub
xchg
mov
cmc
shrb
sub
mov
loope
adc
inc
cmp
popa
pop
push
js
lods
bound
out
imul
xor
mov
out
push
daa
add
add
addr16
das
repnz
lret
xchg
cmpsb
popl
in
jno
xchg
sub
cmp
ds
lret
adc
dec
sti
cmp
inc
mov
mov
inc
add
jno
mov
jb
je
in
xlat
push
adc
ds
or
rcrb
nop
mov
jecxz
jp
cs
pop
roll
pop
xchg
xchg
fidivrl
xchg
sub
add
stos
mov
sub
or
sahf
lcall
test
flds
lods
scas
leave
das
or
flds
sub
add
outsl
popa
enter
or
loopne
addr16
stos
lret
scas
movsl
pop
or
mov
std
mov
xchg
icebp
hlt
rcrl
mov
sbb
pop
cmp
loope
pop
pop
lods
loope
in
jecxz
jmp
mov
out
mov
pop
xchg
mov
iret
inc
jmp
jbe
repnz
mov
inc
inc
jne
mov
dec
xor
insb
call
xchg
aas
jl
arpl
pop
xchg
add
les
pushw
and
stc
aaa
cmp
sub
clc
push
rcrb
pop
inc
xchg
jo
test
daa
push
sbb
inc
xor
jo
arpl
or
xchg
cmp
inc
popf
je
xchg
lahf
mov
fnsave
adc
lods
jne
adc
cwtl
mov
mov
add
call
lahf
jnp
repz
or
mov
push
xlat
dec
mov
negb
push
shrb
mov
mov
xchg
mov
push
inc
adc
pop
sbbl
cmp
iret
sbb
add
push
cmp
mov
pop
mov
pop
jo
mov
aas
pop
bound
sahf
jl
cld
je
inc
and
mov
insb
shl
mov
incb
popa
jno
pop
dec
sub
dec
pushf
lea
scas
jno
outsb
or
call
je
call
call
add
push
cltd
stos
scas
dec
sub
cmc
dec
sbb
loop
cmp
pop
fiadds
stos
dec
outsb
mov
cmp
fdivl
fs
repnz
bound
pop
loopne
lret
sbb
pop
inc
xor
out
je
xor
jmp
sub
push
out
mov
inc
push
pop
jp
jge
leave
xlat
cmp
dec
call
add
test
sub
jno
push
imul
cmc
sti
insb
sti
aas
sbb
cmp
inc
lods
push
and
jg
out
xor
movl
mov
mov
int3
push
cld
fs
cmpsl
daa
es
xchg
xchg
add
fimuls
loop
fcoms
cmp
insl
ror
fwait
out
mov
in
das
adc
and
adc
mov
pop
mov
jnp
add
and
es
pop
push
fimuls
mov
pop
fmuls
cli
in
fstl
sahf
add
cld
or
adc
cmp
jl
fwait
and
sbb
dec
repnz
sbb
out
or
imul
push
ljmp
cmp
pop
lods
lcall
pushf
dec
mov
les
repnz
ja
in
hlt
mov
push
or
jp
inc
jl
dec
popf
addr16
or
mov
mov
jo
and
jl
inc
xchg
and
sub
sbb
xchg
jecxz
mov
inc
jb
pop
mov
sbb
ret
sahf
mov
int
movsl
out
mov
addb
push
icebp
fiaddl
xchg
sbb
cwtl
arpl
or
jg
cmpsb
test
mov
insb
xlat
pop
push
ss
mov
jo
or
ds
insb
and
xchg
push
outsb
push
push
xor
pop
decl
adc
in
lcall
repnz
iret
mov
cltd
adcl
sbb
in
lret
movsb
dec
push
clc
mov
std
adc
xlat
int3
adc
cmpsb
fistpll
or
pop
rolb
insb
subl
sbb
stos
mov
jmp
fldl
adc
in
movsb
in
scas
roll
cmc
mov
fcmovnbe
mov
inc
mov
cld
mov
and
mov
repz
rorl
into
push
pusha
jmp
scas
pop
push
decb
jmp
mov
mov
and
mov
aaa
.byte
push
and
stos
xor
stos
mov
pop
xor
push
dec
pop
and
push
xor
call
push
mov
inc
int3
loop
loopne
cltd
pop
aam
mov
mov
pop
pop
cmp
inc
fwait
arpl
inc
lock
ret
xor
cmpsl
rcrl
lret
or
sub
cmp
jo
scas
mov
cmp
inc
test
cmp
jmp
jnp
adc
push
filds
stc
mov
in
insl
xchg
push
arpl
dec
repz
insl
sbb
mov
and
lds
dec
in
lahf
dec
int
hlt
in
pop
pop
pop
mov
test
pop
les
out
lea
xlat
adc
adc
loop
js
xchg
sub
jl
or
cmp
push
mov
dec
mov
add
cmp
hlt
xchg
notb
jbe
daa
insl
lcall
xlat
add
dec
inc
dec
xor
cwtl
mov
sbb
test
cs
push
aad
test
enter
cmc
stos
out
cmpb
cmpsb
jns
bound
mov
xor
inc
jb
or
dec
sar
push
sbb
or
test
dec
outsb
shrl
push
js
add
push
rorl
adc
mov
adc
loopne
outsb
lret
jl
mov
out
popf
test
shrb
dec
xor
sbb
jbe
clc
icebp
mov
xchg
mov
pop
pop
iret
mov
scas
in
inc
pop
out
jo
dec
fidivrl
std
jo
and
aad
lahf
out
jbe
notb
mov
sahf
pop
dec
in
pop
xor
inc
xchg
inc
and
outsb
lret
sbb
test
jnp
mov
clc
sub
andl
inc
dec
push
push
ror
popf
sbb
jp
das
in
shlb
push
lods
mov
mov
cmp
adc
cwtl
add
pop
adc
jno
jo
jmp
ljmp
imul
cmc
pop
sahf
pop
dec
aam
sub
fucom
push
ret
cmp
das
stos
ds
lock
adc
sahf
jg
adc
shll
shl
push
sbb
dec
das
je
adc
adc
lahf
pop
or
add
loopne
test
pop
cmpl
jne
xor
std
dec
in
call
and
lcall
push
scas
movsb
xor
mov
and
fisttps
push
xchg
aam
jl
test
jbe
test
jle
pop
pushf
out
nop
push
or
pop
jne
insb
and
push
jnp
test
and
movsb
cmp
mov
sub
xchg
cmp
adc
inc
dec
sbb
pop
mov
mov
out
sub
lea
lods
mov
xor
xchg
lds
mov
stc
pop
mov
std
and
imul
rorl
cmp
xchg
hlt
mov
sti
pushf
jno
pusha
call
int3
aas
imulb
mov
push
cmp
and
xchg
xchg
ds
aas
mov
adc
jecxz
inc
popf
push
test
aad
ja
pop
add
std
cmpsl
mov
nop
in
pop
xlat
es
lea
stos
movhps
jecxz
cmpsb
and
lret
and
inc
mov
mov
push
pop
cld
jmp
scas
add
xchg
push
movsb
or
pop
ret
loope
push
pop
jge
mov
cwtl
mov
cmp
push
jmp
rcrb
xchg
gs
ficomps
hlt
dec
leave
cmpsl
jne
sub
orl
loopne
out
and
sarl
dec
inc
in
aas
insl
insl
sub
cmp
scas
add
imul
faddl
add
xchg
sbb
push
mov
loopne
test
sbb
and
push
sbb
xlat
jg
mov
das
les
repz
mov
add
add
jle
stos
xchg
lods
xchg
sbb
lds
mov
rorl
and
ret
fsts
shlb
inc
popf
mov
mov
mov
mov
fidivrs
invd
in
inc
xor
jb
ja
xor
into
das
sub
xchg
scas
push
pop
fistpll
inc
repnz
sub
or
and
dec
sbb
ret
xchg
and
and
out
xor
jbe
clc
scas
xor
xor
push
sub
in
cmc
mov
xor
test
in
sub
adc
mov
pop
cwtl
sub
and
jns
rcl
imul
mov
cmp
int
mov
fwait
jnp
pop
div
lret
jno
outsb
pusha
sti
mov
xorl
imul
pop
xchg
jmp
fs
js
out
mov
jno
pop
xlat
stos
pop
adc
sbb
into
pop
ja
fcomps
shlb
std
out
scas
cli
add
inc
sbb
mov
push
cmp
cmpsb
fdivl
testb
lret
mov
bound
pop
dec
inc
mov
shrb
je
push
sbb
lods
push
mov
cmp
jp
push
lds
xor
sub
jg
fnstenv
jne
jl
lahf
in
jno
test
cmp
xchg
push
add
pop
cmp
lds
test
pop
not
jl
xchg
fcmove
lock
sub
in
cmp
or
shl
inc
mov
push
mov
out
shrl
fldcw
pop
jbe
std
in
or
xor
inc
inc
movl
pop
xlat
movl
xchg
sub
fisubl
scas
lret
xor
push
popa
fbld
fs
pop
or
add
sarl
sub
sub
push
pushf
or
loopne
fidivrl
add
insb
push
shll
jbe
dec
popf
xchg
in
cmp
xchg
sub
jo
sub
cs
mov
push
std
inc
pop
icebp
push
cmp
lcall
dec
sti
imul
mov
sbb
jmp
push
xchg
cmp
cmp
test
testb
lahf
aas
pop
jge
or
insb
jae
sbb
pushf
lea
daa
or
bound
int
int
sbbb
out
adc
pop
shl
lods
cmp
aas
add
add
jp
jne
xchg
lcall
xchg
icebp
int
ret
or
out
cmpsb
bnd
or
in
ljmp
jne
in
test
mov
push
mov
sbb
sub
data16
sub
jnp
std
mov
jmp
adc
push
xchg
dec
mov
cmp
icebp
and
daa
cmp
xor
dec
ja
sbb
and
enter
sbb
gs
adc
lcall
out
insl
int3
fcomp
mov
xor
mov
jno
nop
push
mov
fsubrp
mov
aaa
cmpsl
inc
xchg
out
das
fmull
inc
clc
call
in
repz
sbbl
lods
in
fwait
mov
jle
leave
jle
mov
out
je
jbe
mov
mov
mov
mov
test
xchg
jns
aas
jb
scas
arpl
mov
hlt
xorb
jecxz
inc
roll
ss
xchg
and
call
lahf
shl
and
mov
cmp
push
xchg
inc
or
mov
gs
in
inc
out
mov
xor
xlat
push
xor
xchg
pop
adc
xchg
or
loopne
dec
popf
decb
sub
loopne
out
inc
mov
outsb
xor
or
leave
push
jo
cli
icebp
mov
or
inc
shll
cmp
jecxz
das
decl
lea
mov
mov
xchg
repnz
jecxz
cmp
fs
add
adc
gs
mov
inc
test
imull
or
sub
xor
push
cmp
push
mov
mov
sbb
dec
xorb
in
sbb
cmp
sahf
popa
cmpsb
adc
mov
sub
scas
pop
outsb
xor
fisubs
loopne
ret
cmp
nop
cld
or
dec
inc
scas
and
rol
nop
std
push
sub
sub
aas
fwait
shl
mov
inc
hlt
jg
sub
neg
cli
xlat
xchg
xchg
sub
lcall
cmp
aad
cmp
das
cmp
or
bound
call
sarl
inc
xchg
dec
std
lret
js
nop
xchg
xchg
shl
pusha
movl
sarl
imul
test
in
xchg
pop
adc
insb
cmpsb
sbb
adc
in
iret
xchg
insb
pop
rorb
popa
mov
xchg
sub
fdivrl
pop
int3
ss
xchg
jle
inc
div
push
xchg
xchg
insl
cmp
jmp
lret
aaa
and
fcompl
sti
jne
loope
and
inc
dec
rorl
fs
mov
inc
mov
xchg
notl
popa
sub
aad
jno
add
lods
mov
repz
mov
cmpsl
pop
inc
shrb
subb
jg
mov
fldenv
jb
mov
scas
xor
stos
in
dec
add
out
mov
bound
sbb
rclb
jecxz
cwtl
xorb
xchg
lcall
dec
xor
jl
ja
ret
inc
bound
arpl
or
mov
dec
fstps
mov
cmp
push
dec
lahf
mov
inc
test
dec
inc
cmp
jg
and
push
jnp
test
stos
ret
push
mov
pop
mov
cmpsb
ja
cmp
imul
mov
sub
sbb
cmp
std
iret
add
stos
sbb
icebp
nop
repz
inc
js
fisttpl
adc
jle
sbb
mov
into
or
or
xor
ds
sub
mov
dec
inc
dec
jg
push
mov
sub
mov
jno
sarb
cmp
mov
into
xor
mov
mov
jnp
scas
add
ja
mov
aas
insb
ret
je
mov
fnop
fldcw
ja
inc
push
ret
mov
push
sbbl
and
data16
mov
cmpb
cmpsb
scas
and
and
dec
cld
cli
fwait
cld
test
add
int
jae
push
dec
add
int3
cmpsb
icebp
aad
jecxz
sbb
mov
mov
out
int3
cmpsl
push
push
inc
nop
jp
inc
rcrl
je
add
mov
lret
outsl
insb
pop
fstps
fnstsw
repnz
xor
in
jecxz
jns
sar
pushf
xor
mov
push
lock
das
rolb
inc
mov
adc
jle
adc
call
pop
and
mov
and
add
mov
repnz
and
in
imul
fdivp
fcomps
mov
popf
sbb
addl
pusha
insb
sub
xorb
dec
repnz
ret
pop
test
jp
mov
or
xchg
xchg
adc
adc
xchg
adc
sbb
mov
and
xchg
mov
movsb
inc
outsb
loopne
cs
dec
push
fld
call
xor
cmc
insb
xor
and
dec
xor
test
mov
jne
sbb
fcom
daa
outsb
add
lods
pop
lret
inc
out
lret
jns
shlb
fsub
in
rcll
cld
jns
mov
mov
sbb
xchg
jge
xlat
stos
scas
fstp
push
jl
push
sub
int3
out
dec
hlt
push
add
mov
hlt
leave
fs
mov
int3
imul
mov
xchg
dec
or
cld
add
inc
dec
insb
int3
repnz
ja
fimuls
popf
mov
xor
push
push
imul
aad
add
adc
data16
sbb
stos
xor
or
mov
in
inc
in
les
addr16
inc
sbb
stc
outsb
mov
pushw
cmpsb
pop
and
stc
lea
clc
mov
scas
mov
mov
std
cmpsl
ss
mov
xlat
adc
inc
xlat
shll
cmpsb
add
dec
pop
sub
mov
and
in
lret
pop
imul
push
fwait
push
pop
and
and
pop
cmp
aad
pusha
dec
jle
mov
mov
and
dec
push
mov
std
add
shll
and
add
push
mov
out
enter
push
add
lds
xchg
xchg
or
add
shrl
or
or
adc
scas
xchg
ret
ja
pop
xor
push
icebp
pop
ret
addr16
jl
loopne
xor
fisttpl
jl
roll
push
cmp
xor
pop
std
xlat
add
adc
cmp
xchg
or
mov
mov
insb
inc
xchg
cltd
test
inc
and
push
cs
push
ret
stos
and
stc
adc
or
sub
fisubrl
ret
mov
or
mov
pop
jb
mov
repz
andl
shlb
and
and
imull
jae
jno
jnp
cmp
into
push
cmpl
push
mov
cmp
scas
mov
into
fs
cmpsb
fstpl
xchg
mov
sub
jl
int3
sbb
dec
and
stos
jae
in
in
data16
pop
pop
and
add
push
imul
jns
cmc
sti
outsl
xor
cmp
stc
lahf
sbb
fiaddl
or
int3
scas
adc
jp
test
sbb
sbb
test
ds
xor
jb
outsb
mov
adc
add
es
adc
or
pop
pop
outsb
aam
pop
bound
aam
dec
int3
fs
test
test
pop
mov
daa
jle
lcall
clc
inc
ds
jecxz
xchg
jae
mov
dec
lea
or
jns
sarl
push
ret
xchg
cli
int
sbb
jae
mov
mov
adc
aaa
jl
xchg
push
std
aas
scas
mov
xchg
adc
hlt
cmp
call
sbb
sub
pop
sub
xchg
cmp
outsl
lods
push
inc
imul
sbb
shlb
inc
out
insb
mov
jae
ret
insb
ret
pop
pop
xor
add
cmpsl
lret
jno
enter
jle
in
sbb
lret
fwait
sbb
test
es
sbbb
pusha
fisubl
sahf
xchg
aam
xor
mov
add
or
mov
push
in
pop
xor
dec
fsubr
mov
inc
xchg
es
mov
test
or
sbb
adc
sbb
adc
cmpsl
mov
ss
les
decb
pop
roll
sbb
dec
xchg
sub
push
das
repz
shll
dec
lea
in
mov
add
mov
jecxz
ljmp
mov
imul
subb
cmc
push
leave
mov
into
pop
int
or
inc
sbb
call
adcb
js
dec
cmp
fisubl
jns
ja
inc
cmc
es
popa
jle
shrl
cltd
mul
pop
xchg
int
lret
daa
lcall
insl
sbb
push
jge
mov
mov
jle
in
sti
and
adc
add
les
or
xchg
idivl
sarb
cmpsb
or
outsb
test
lret
mov
sub
adc
lods
out
xor
push
popf
push
out
sbb
data16
mov
call
shr
cld
sbb
mov
sti
outsb
mov
add
cmpsb
in
mov
pop
std
out
xchg
pop
mov
fidivrl
imul
or
push
cwtl
fwait
les
lea
fwait
pop
xor
fistpl
lds
inc
xor
adc
outsl
push
cwtl
jnp
sbb
test
in
sub
mov
push
fsubs
out
sbb
std
push
add
inc
mov
iret
lods
adc
inc
push
mov
sub
lea
ret
push
in
or
add
dec
sbb
mov
pop
stc
ljmp
jb
jbe
shl
daa
and
jbe
cmp
xchg
jmp
mov
ja
fdivrs
xchg
cli
sub
adc
stos
imul
xor
pop
sbb
aad
data16
xchg
cmpsl
lahf
xor
outsl
cld
in
xor
push
xchg
add
inc
fsubr
inc
push
ds
pop
pusha
jg
push
xchg
shlb
jno
sbb
xor
scas
in
pop
fildl
ja
mov
sbb
xchg
test
add
movsl
scas
stos
les
loope
cmp
ds
push
add
jo
sub
mov
add
dec
insl
fsubrl
add
push
push
jae
cltd
rcr
fcomps
jg
jle
outsb
lds
rcll
lods
stos
xor
movsb
fwait
out
sbb
inc
or
mov
sahf
repz
test
mov
jo
mov
fwait
cmc
jmp
lahf
adc
lahf
das
or
adc
inc
mov
inc
outsb
out
sahf
mov
dec
mov
mov
ficompl
pop
mov
lret
pop
mov
add
out
orl
jns
add
cmp
cld
or
push
fisttpl
inc
adc
push
int
inc
sub
push
xor
push
mov
cs
sub
inc
dec
les
sub
mov
push
push
subb
sbb
pop
mov
dec
es
and
cwtl
cmp
orb
cmpsl
push
mov
stos
ds
xchg
out
pop
lret
mov
jmp
aad
pop
mov
orb
lret
shlb
cmp
jbe
or
in
imul
into
xor
repz
and
jbe
and
shll
mov
test
pop
lcall
push
push
into
push
jo
mov
cli
adc
icebp
jno
test
xor
jge
adc
dec
push
popf
dec
mov
cmp
lods
std
addr16
outsb
pop
test
out
mov
push
jg
testl
gs
push
mov
add
cmpsb
vmulss
lret
jns
cmp
in
shll
fstl
fbld
jl
and
fcoms
jg
mov
popa
testl
fildl
insb
sub
movsb
and
and
jge
pop
cltd
filds
ret
movsb
push
sub
jno
mov
gs
fistpl
fisubs
jl
xchg
lods
inc
and
cwtl
lahf
cmc
popa
in
pop
scas
xchg
daa
jecxz
mov
int3
popa
je
lods
add
and
inc
stc
gs
cmp
orb
xchg
pop
loopne
xchg
inc
arpl
inc
pop
loop
pop
fistl
lds
jle
push
movsb
jle
std
push
inc
xor
daa
fs
dec
inc
stc
cmp
jge
loop
push
push
ja
movsl
sub
sub
stc
lret
adc
scas
add
test
lock
leave
xor
fdivrs
fstl
sbb
into
stos
mov
loop
insb
mov
pop
insb
cmp
popa
mov
or
sub
out
addr16
sahf
or
mov
or
jmp
imul
pushf
test
push
ja
je
das
jecxz
xlat
out
int3
fdivl
dec
xchg
ljmp
daa
xchg
cmp
dec
icebp
mov
add
cmpsl
ss
dec
or
popf
in
mov
clc
daa
fs
nop
push
add
sbbb
sti
or
pop
lahf
jb
mov
or
lods
inc
cmp
jge
push
fisttpll
or
push
popfw
inc
shll
aam
imul
sub
and
inc
add
sahf
enter
fidivrl
xor
es
dec
mov
in
jg
inc
jecxz
js
aas
and
std
mov
jns
dec
sbb
mov
push
xchg
sub
pop
rorb
inc
sub
es
out
outsl
xchg
sbb
xchg
mov
sub
lock
adc
xorb
dec
pusha
xor
jmp
push
push
push
push
add
scas
or
inc
in
std
pop
int3
or
pop
je
mov
in
add
inc
jmp
jl
pop
stos
icebp
adc
mov
sbbb
repz
or
jl
lret
ds
subl
in
and
in
xor
bound
pushf
imull
imul
push
repz
adc
sbb
cld
pop
bound
icebp
enter
jno
push
stc
add
out
push
inc
scas
xor
out
inc
movsb
rcr
pop
testb
add
ds
push
jns
rcrl
push
cwtl
mov
jno
push
ret
jns
push
mov
sbb
gs
faddl
sub
fcmovnbe
ljmp
jecxz
loope
test
test
cli
adc
std
pop
jecxz
icebp
mov
inc
xchg
inc
push
inc
in
push
sub
mov
shlb
add
sub
in
jl
or
mov
push
out
xlat
insb
or
mov
pop
rcrl
out
push
sbb
popa
inc
jnp
.byte
pop
and
mov
jae
or
out
inc
and
and
push
adc
xchg
xchg
pusha
sbb
sub
pop
shlb
icebp
inc
cli
sbb
cmc
test
loop
sub
outsb
inc
sbb
imul
int
or
mov
push
xchg
bound
mov
xorb
call
je
mov
mov
in
cmpl
fildll
lock
cmc
insl
fs
xchg
xchg
pop
lahf
add
pop
inc
ja
out
fildll
dec
adc
mov
add
jmp
sti
pushf
shlb
into
stos
mov
sub
mov
pop
out
int
jnp
repz
xor
mov
in
or
mov
jmp
fistl
mov
pop
sbb
inc
and
aam
or
pop
mov
pop
fdivl
fistpll
clc
lods
pop
cs
dec
cltd
mov
imul
push
add
jnp
lea
idivl
cmp
out
and
nop
ss
mov
movl
add
icebp
push
lods
mov
sub
xor
imul
test
mov
xor
add
cmp
movsl
enter
fsubs
pop
dec
out
lcall
lods
sbb
cmp
and
mov
add
jae
repz
and
sub
sti
dec
ljmp
or
lock
mov
es
sub
decb
cmp
inc
cli
out
cmp
or
addl
mov
cs
cmp
sub
dec
rolb
pop
adc
adc
adc
jl
mov
jns
push
add
stc
pop
ds
xlat
rcrb
adc
cwtl
adc
and
clc
inc
out
cwtl
xor
xor
adc
xchg
adc
vmwrite
lahf
fcomps
sub
or
cmp
les
jne
es
or
les
outsl
jmp
rcrb
addr16
data16
sti
les
jge
jae
adc
sub
xchg
adc
or
cwtl
sub
or
cltd
sbb
pop
push
jae
push
inc
filds
mov
pop
and
sahf
enter
xchg
jg
lods
out
pop
lahf
out
mov
jmp
pop
dec
jae
pop
ret
icebp
and
xchg
psrlw
daa
pusha
loop
cmp
mov
push
shr
push
adcl
hlt
ja
dec
jg
pusha
in
rcll
jno
mov
loope
stos
sbb
out
scas
push
inc
movsb
pop
xorl
mov
push
pusha
mov
dec
loope
aas
add
out
les
cmpsb
jmp
mov
pop
and
sbb
adc
mov
xor
jnp
pop
mov
pop
push
js
cmc
lods
int
icebp
sub
mov
xchg
in
jp
aam
out
inc
mov
int
jmp
xchg
pushf
andl
daa
cmp
enter
inc
sbb
sub
jmp
mov
push
lock
stos
hlt
push
les
mov
shr
mov
sub
js
test
mov
and
and
sub
xchg
lock
xchg
subb
pop
pop
push
popf
pop
sbb
lock
loopew
int
add
pop
aam
cs
scas
repnz
in
jns
mov
jge
mov
fcoml
pop
sub
das
cld
mov
mov
sub
data16
cmp
out
cs
push
minps
xor
adc
in
popa
leave
adc
and
cmp
sub
movsb
jb
push
mov
lret
push
add
ret
js
add
xlat
sahf
jge
add
xor
test
orb
jmp
pop
inc
xor
mov
sti
insb
inc
lds
jo
arpl
mov
push
mov
push
dec
push
ret
mov
rcrl
fcmovnu
pop
pop
mov
and
aad
imul
mov
ds
adc
mov
mov
cmpsb
out
fistl
pop
xor
push
leave
sahf
lods
ss
pop
nop
or
movl
ficomps
insl
or
pop
dec
inc
stos
add
sub
sub
rcll
mov
data16
ret
cmp
and
incl
push
out
loope
xchg
add
mov
pop
jno
xor
cwtl
in
sbbb
pop
add
xor
loop
out
shrb
pop
jae
push
or
fsubl
repz
mov
jge
sti
cmp
sbb
fcoml
and
jg
lods
mov
and
pop
jnp
mov
insb
gs
frstor
loope
stos
gs
push
movsl
inc
ss
scas
fcomp
xchg
cmp
push
insl
lds
test
mov
mov
iret
rol
leave
mov
or
clc
adc
xor
and
xor
jnp
test
jl
outsl
adc
sbb
xchg
dec
lahf
sar
xchg
xchg
stos
hlt
push
call
fstpt
mov
add
fdivl
cld
dec
inc
and
popa
push
inc
in
shl
jle
loopne
xchg
int3
or
movsl
fstp
add
test
or
jae
jno
and
jb
movsb
xorl
dec
jl
loope
lret
enter
jl
flds
outsl
xlat
fmuls
nop
xor
jp
jnp
sbb
push
push
cs
dec
pop
add
lea
push
repz
adc
popa
nop
inc
inc
cmp
pop
inc
leave
mov
adc
inc
sar
mov
jbe
call
insl
jo
int
mov
clc
dec
and
ret
xchg
sbb
sub
pusha
mov
rcrl
pop
in
push
jl
fs
xor
pop
cmp
imul
jae
and
ja
lds
insb
sbb
or
notl
test
mov
mov
mov
andl
cmp
or
mov
sbb
and
sub
cs
sub
push
mov
popf
and
test
fwait
out
mov
cmp
cmpsl
push
pop
js
dec
lods
lods
mov
xchg
cmp
repz
jb
pop
shrb
ljmp
xchg
inc
push
pop
rcll
in
scas
out
inc
inc
stos
cmp
imull
fbld
rolb
push
fstpt
pop
mov
subl
push
addr16
jmp
cmp
xchg
push
fstps
push
mov
sub
aas
sub
lds
pop
mov
cmpsl
dec
cli
test
hlt
addr16
das
lea
imul
in
popa
test
dec
inc
enter
jbe
add
jecxz
mov
out
mov
sub
xchg
and
mov
cmpsl
dec
and
cs
or
cmp
mov
bound
xchg
jge
adc
stos
jecxz
ljmp
cltd
inc
fmul
jecxz
mov
std
adc
pop
std
addb
getsec
repz
sub
add
rclb
popf
hlt
cmp
lahf
adc
test
sbb
add
jmp
push
inc
jg
adc
pop
mov
imul
adc
sub
inc
add
ja
scas
xor
cmp
out
push
in
lods
lods
jo
sub
mov
sbb
mov
addr16
pop
dec
fsubrl
idivb
hlt
jae
push
mov
mov
inc
pop
jmp
mov
scas
ficoms
loop
shll
enter
lds
sub
cmp
push
jge
mov
or
mov
dec
fisubrl
inc
dec
imul
pop
shl
mov
cmp
push
mov
xor
and
es
sbb
jle
or
gs
mov
mov
xchg
mov
mov
por
stos
hlt
pop
and
mov
or
pop
scas
imul
inc
inc
add
adc
mov
add
clc
data16
or
negb
mov
and
jbe
test
dec
clc
jae
xor
int3
mov
out
cmc
ljmp
je
lods
cmp
push
mov
inc
add
enter
shlb
pop
jecxz
cmpsb
mov
in
rolb
incl
mov
sbb
pushf
les
aam
push
icebp
add
mulb
rorl
les
pop
mov
xchg
cs
inc
lcall
cmpsl
sbb
jmp
and
sub
call
push
sbb
push
movsb
mov
sub
pop
or
lods
jle
call
test
daa
and
ret
icebp
popa
hlt
stos
xor
mov
imul
and
and
aaa
lcall
sbb
fildl
push
test
mov
push
mov
sahf
inc
pushf
jb
or
cmp
fdivrp
call
rorb
jmp
aaa
lock
lret
negb
push
aam
xor
mov
out
xor
cs
out
jnp
mov
inc
lods
jb
dec
dec
sbb
mov
jb
aam
ret
jb
inc
and
mov
sbb
mov
pushf
hlt
push
clc
outsb
ljmp
shll
popf
sbb
xor
test
jp
or
je
add
push
mov
and
aas
xor
cmp
and
sub
jnp
mov
pop
sub
jp
cmp
loopne
ss
pop
push
xor
push
adc
or
repnz
in
dec
std
dec
add
pop
push
adc
dec
cmpsl
adc
mov
fsubrs
mov
movsb
mov
add
jbe
mov
cmp
sti
testb
out
or
pop
xchg
shrl
lea
aad
jl
repnz
andb
sub
inc
outsb
xor
mov
push
loop
sti
in
pop
fxch
stos
xor
adc
testl
out
cltd
ret
cltd
xor
xor
js
pop
in
jo
shr
mov
xchg
inc
push
sbb
mov
sahf
and
inc
aaa
inc
sarb
mov
dec
add
rcrb
pop
jns
or
sahf
repz
cmp
inc
jge
dec
outsl
mov
ds
sub
adc
jbe
adc
aam
sbb
jle,pn
cltd
fsubr
or
jl
sbb
sub
cli
test
mov
add
inc
dec
mov
in
pop
out
inc
or
dec
out
or
cmp
push
test
aam
mov
xchg
xchg
rcll
mov
or
sbb
test
pushf
loopne
nopl
inc
or
les
clc
lock
outsl
ljmp
mov
sub
mov
lcall
inc
cmp
adc
jle
cs
jb
push
xchg
pusha
fdivrl
push
pop
or
xor
push
xchg
imul
mov
mov
sbb
xchg
into
lea
mov
cs
js
js
fsub
gs
cmc
dec
addr16
mov
rolb
cld
xor
cmpsl
dec
enter
aad
jp
in
pop
xchg
test
inc
cmp
notl
xor
test
cmp
jle
jmp
into
jp
jne
testl
xchg
stos
xchg
sub
push
xchg
mov
lods
sbb
nop
adc
mov
mov
cmc
rcll
xchg
mov
push
out
pop
add
mul
ljmp
pop
mov
lds
imul
mov
jge
pop
adc
ret
outsb
cmp
imul
lahf
lret
insl
repnz
mov
xchg
lcall
cmp
inc
je
pop
aam
fisubs
bound
cmp
jne
mov
adc
sbb
jno
aas
pop
aaa
jns
pushf
sahf
ret
mov
mov
xchg
movsl
push
fs
and
pusha
mov
dec
in
push
mov
xor
sbb
push
pusha
sub
xchg
or
mov
sub
xchg
or
push
or
mov
add
mov
aas
xchg
icebp
push
pop
xor
loopne
push
sub
and
outsb
pop
or
jmp
mov
xor
mov
inc
adc
cmp
xchg
add
subb
lods
int3
aad
or
pop
xchg
sub
fwait
mov
sbb
fcoms
out
loop
cmp
and
push
out
ret
xor
inc
adc
inc
stos
loope
cs
fisttpl
std
or
scas
ret
cli
negb
in
and
mov
inc
rcll
xor
out
rcll
lahf
adc
ja
sub
or
cmp
jecxz
test
xchg
in
add
inc
out
mov
adc
xchg
mov
push
cmp
add
std
add
jno
push
fwait
shll
push
xor
hlt
add
inc
mov
mov
in
and
mov
les
cmpsb
adc
stc
int
ja
cli
and
and
out
movsw
sub
test
push
out
jb
test
bound
mov
fldt
dec
pop
ficoml
jbe
cld
mov
imul
sarb
xchg
and
and
pop
ljmp
repnz
shl
std
repnz
iret
jge
dec
push
pop
mov
call
jge
pop
cmp
mull
and
xchg
pop
clc
sahf
mov
test
sub
imul
adc
push
jno
and
push
mov
and
inc
jb
adc
inc
popf
xor
dec
sbb
out
mov
and
mov
push
ss
pop
push
ror
and
jge
xor
repz
shll
jge
pop
std
pushf
pop
stos
sub
cmp
sahf
nop
lock
in
out
fadds
les
pop
jno
mov
mov
xor
pushf
popa
sbb
ds
cmp
and
addr16
pop
cmp
dec
lds
iret
fucomi
dec
shrb
xor
add
cmp
pop
aam
xor
out
xchg
lcall
test
scas
rorl
int3
lahf
js
xchg
adc
dec
out
mov
aam
pop
pop
mov
and
sub
scas
stos
int3
cmp
xor
repnz
lock
fisubrl
xor
out
push
jecxz
es
xchg
xor
shrb
jge
mov
or
add
jg
imul
mov
push
mov
pop
jb
arpl
scas
jmp
orb
mov
add
scas
inc
push
arpl
hlt
pop
jge
notl
xor
lcall
xor
pop
decl
shrb
inc
adc
insl
adc
rol
adc
aam
inc
or
mov
push
fwait
push
inc
jae
fimuls
aad
jp
or
enter
sti
cld
clc
in
inc
ss
push
mov
rcll
sbb
xor
out
pop
mov
ja
pusha
push
bound
push
das
dec
fdecstp
dec
xchg
pop
je
pop
push
std
adc
test
int3
sub
aad
sbb
push
or
movsb
hlt
fmull
fwait
insb
mov
sti
xor
mov
jne
add
popl
notb
push
mov
pop
in
icebp
add
mov
lds
fcoml
mov
stc
orl
cltd
jbe
movsl
jo
addr16
std
mov
xchg
push
sbb
cvtss2sd
inc
sbb
or
push
mov
sub
mov
pop
in
in
sub
pushf
int
repnz
scas
fwait
or
adc
cmpsl
imul
adc
data16
insb
inc
and
jmp
jp
fdivr
jge
or
pop
pop
mov
xchg
mov
push
sbbl
testl
shlb
jg
mov
decb
add
jl
addr16
bnd
xorb
cmpsl
mov
inc
jb
ss
jb
outsl
into
pop
out
inc
lea
push
or
movsl
sbb
xchg
push
sbb
push
and
cmp
add
or
shrl
es
cmp
fwait
inc
xchg
adc
xchg
icebp
pop
cltd
movsb
ja
lret
lods
inc
fwait
mov
sbb
data16
jg
push
jo
cmpb
and
mov
sub
leave
pop
cmp
into
cmpsl
outsl
addr16
mov
push
loope
add
imull
push
adc
scas
jge
add
adc
bound
mov
sub
push
mov
fildl
rorb
push
lock
scas
add
ficompl
push
mov
test
shl
icebp
hlt
dec
nop
ljmp
shll
cmpsb
stos
popf
test
lds
sbb
sbb
aas
in
adc
inc
sti
mov
and
in
pop
jmp
jecxz
cli
outsl
cmp
in
mov
fnstcw
xchg
mov
sub
mov
iret
lcall
fisubrl
sbb
and
or
sahf
roll
xchg
mov
fstps
or
push
pop
std
imul
into
dec
sahf
or
inc
dec
scas
sub
cmp
sub
or
add
rorl
dec
mov
mov
pop
hlt
xor
into
add
lahf
insl
mov
lds
mov
pop
and
les
lods
stos
inc
cwtl
scas
pop
lea
ja
fisubs
mov
lock
inc
cmc
push
daa
out
nop
imul
cmpl
sbb
push
xchg
and
gs
xlat
jge
std
or
or
jmp
pusha
fcomip
lea
push
inc
into
jp
dec
or
mov
adc
orb
push
add
aam
adc
fcoms
xchg
push
gs
jae
pop
or
jnp
or
xchg
sub
dec
mov
loope
or
loop
les
pop
fists
mov
ss
sub
push
cwtl
jnp
cs
ret
pop
mov
cs
cmp
add
xlat
and
pop
add
push
jbe
jge
push
andb
repnz
mov
test
push
ss
jbe
test
addl
sbb
adc
mov
cltd
dec
jecxz
lock
xchg
shll
pop
subb
iret
lods
jmp
jg
inc
xchg
in
iret
pop
stos
mov
stc
clc
movsb
xchg
cmp
cld
pop
xor
les
mov
fsub
aad
cmp
mov
push
popa
add
movsb
adc
pop
call
ret
ds
cmp
and
or
sub
popf
outsb
pop
jns
mov
movsb
jmp
cvtps2pi
or
enter
push
pop
pushf
in
jmp
adc
daa
cmp
call
jne
mov
sbb
lahf
loope
mov
dec
fs
rorl
xlat
stos
dec
mov
or
mov
push
into
ja
sbb
add
std
in
xor
lahf
dec
incl
or
adc
out
jno
ja
lea
movsl
dec
sbb
push
push
sbb
adc
jle
jl
sbb
sti
not
mov
dec
xchg
push
cld
mov
sti
sub
sbb
popa
mov
into
and
pop
cmpsl
sbb
outsb
jmp
sbb
dec
in
loopne
adc
aam
mov
iret
rcrl
fdivs
jp
mov
test
cs
add
push
hlt
cmpsb
mov
std
lock
loope
int3
sti
negl
lret
sahf
sbb
dec
test
inc
test
leave
sbb
cs
xor
pushf
mov
pusha
fs
out
imul
push
fcom
cmpsb
in
leave
cmpsl
ljmp
sahf
hlt
icebp
out
or
subb
push
push
sub
jns
mov
int3
js
ds
ret
pcmpeqd
dec
adc
cmpsl
sti
popa
lods
mov
push
movzbl
jmp
inc
add
pop
lods
jae
fwait
rol
sbb
adc
jne
fsubrl
push
mov
mov
stos
mov
bound
lock
sarb
adc
jns
dec
pop
fistpll
je
cmp
sbb
rorl
mov
jmp
mov
pop
int
dec
aas
xchg
iret
add
vcvtsi2sdl
push
push
ret
rolb
push
mov
fadds
cwtl
mov
xor
int3
nop
shrb
rclb
rdmsr
lahf
outsb
rcll
mov
fsts
sbb
mov
cwtl
in
adc
fsubrs
push
sbb
fwait
sub
and
clc
push
mov
pop
dec
aad
repz
ret
insl
add
xor
loopne
into
je
popf
arpl
hlt
fstpl
jnp
jl
jp
push
imul
cmpsb
cmp
cmp
add
cmp
mov
loope
lahf
gs
sbb
sbb
aas
jg
dec
push
arpl
mov
xchg
repnz
sbb
mov
sbb
pop
pushf
and
sarl
nop
outsl
into
lret
mov
pop
imulb
push
loope
in
pop
imul
cmp
pop
popf
repnz
mov
ljmp
cmp
adc
out
pop
out
aas
xchg
and
cmp
add
ret
push
repz
movb
rcll
xor
fsubs
add
outsl
push
xchg
cmp
out
xchg
pop
fists
scas
decb
jle
mov
push
les
test
cmpsb
outsb
push
lahf
lcall
mov
add
push
or
test
dec
xchg
pusha
jg
fadds
stos
mov
jmp
stos
in
lret
fcmovnu
fcompl
arpl
cltd
xor
dec
sbb
ret
movsb
in
and
aaa
jmp
lret
mov
enter
xor
cld
push
mov
mov
scas
orl
hlt
scas
rorl
push
js
arpl
mov
out
outsl
enter
pop
mov
int
lcall
test
fsubrl
lahf
dec
dec
lds
jge
xor
jle
lret
jae
push
bound
cmp
sub
mov
add
std
fstps
mov
aam
sar
push
xor
push
dec
jo
add
scas
cmp
ret
push
gs
adc
mov
and
sub
les
lea
or
jp
aaa
testl
xor
mul
sbb
mov
scas
lret
lret
add
mov
adc
ds
xor
sbb
inc
sarb
test
mov
sub
ss
cmp
test
hlt
mov
cld
or
in
nop
outsl
mov
popf
lahf
icebp
sub
enter
mov
and
je
pushf
cmc
out
ljmp
ljmp
out
adc
inc
cmp
mov
insb
dec
aas
or
adc
add
lock
mov
mov
inc
outsl
cld
dec
into
and
mov
xchg
and
add
repz
inc
push
mov
arpl
xchg
in
shll
js
dec
push
adc
xchg
out
inc
cmpsb
xor
lods
fldl
and
fstps
sbb
mov
jnp
pop
mov
arpl
adc
iret
nop
sub
ja
mov
test
pop
adc
mov
xchg
cmp
mov
mov
mov
pushf
test
outsl
fs
test
pop
out
or
or
sbb
cmp
inc
lock
stos
sub
repnz
add
aas
inc
insb
pop
je
jae
out
cmc
jns
cmp
push
stos
mov
out
inc
test
iret
insl
dec
out
sbb
push
push
ljmp
daa
daa
sub
xchg
mov
repz
jae
mov
xor
add
lods
das
lods
popa
loop
mov
arpl
fsubrl
xlat
shlb
popa
pop
or
adc
cmp
js
mov
adc
sar
sbb
stc
push
into
and
dec
enter
gs
les
jg
dec
mov
lahf
shr
mov
pop
pop
mov
adc
mull
ret
jp
lret
lret
and
in
clc
outsb
mov
test
je
outsl
xlat
mov
ficomps
fucom
xor
xor
cmc
and
mov
xlat
stos
xor
dec
fidivl
lahf
fstps
test
das
xor
xlat
push
jns
lcall
pop
sbb
test
jmp
pop
or
push
int3
sbb
inc
ja
int
movsb
dec
mov
icebp
test
mov
jecxz
ja
jg
rcl
int3
test
adc
ret
pop
das
sarl
ds
lret
inc
mov
xchg
lret
jmp
popa
adc
outsl
scas
push
and
int
insl
push
mov
in
mov
inc
inc
sbbb
xor
mov
mov
aad
mov
outsl
sbb
and
in
pop
in
scas
mov
sahf
bnd
push
sub
adc
inc
ret
lret
imul
or
mov
pop
js
mov
adc
push
mov
aaa
dec
push
hlt
fcmovb
xor
dec
add
sbb
or
and
call
sub
and
xchg
out
popf
rolb
pop
gs
jae
pop
sbb
mov
inc
in
pop
sbb
mov
aas
imul
push
add
xchg
jno
and
mov
inc
scas
js
push
sub
cmp
lock
and
dec
push
push
imul
xor
sar
cmp
push
ficompl
jnp
add
cmc
or
out
fidivrs
int3
loop
or
mov
pop
and
mov
and
mov
test
shlb
mov
icebp
xor
adc
aaa
mov
push
mov
out
or
lret
xchg
cmp
dec
das
out
les
jno
and
mov
inc
jne
sbb
xchg
jg
iret
xchg
sub
add
cmc
popa
mov
cmp
test
sbb
and
sub
outsl
ret
repz
xor
incb
gs
nop
mov
mov
movsl
stos
mov
pop
es
jecxz
add
orl
ljmp
cltd
lods
dec
mov
shlb
movsl
pop
loopnew
mov
stos
addl
pop
mov
cmp
cmp
push
fcmovnb
push
cmpsb
bound
inc
pop
mov
push
dec
cmp
stos
xchg
xor
sub
icebp
push
inc
inc
xchg
popa
sub
jne
push
pop
mov
bound
aam
add
es
imul
movsb
pop
add
inc
sub
sarb
inc
pop
mov
fcmovnb
xchg
imul
imul
mov
fdivp
call
xor
push
or
or
into
push
addr16
mov
and
test
cmp
aad
inc
cltd
add
pop
jo
pop
rolb
push
mov
push
mov
outsl
aad
cmp
hlt
fstpl
fidivs
mov
cmp
adc
cmpsl
xchg
jle
pop
rclb
mov
jno
xchg
or
jae
and
psrlq
sbb
adc
push
push
jb
lret
mov
hlt
xchg
or
pop
or
jp
call
sbb
popa
jmp
dec
or
add
xor
ret
adc
imul
jns
or
adc
fwait
and
pusha
aaa
mov
jne
call
sbb
imul
sbbb
cmp
sub
imul
mov
mov
mov
inc
popa
xchg
stc
fs
js
inc
in
adc
pop
jbe
xor
lods
ja
push
sbb
mov
fstl
push
js
es
dec
imul
cmp
aas
lea
ja
add
mov
mov
pop
sahf
les
mov
sti
rcrl
sahf
rcrl
xchg
rcrb
mov
mov
jnp
dec
fs
movsb
fcomps
push
or
pop
push
sbb
add
jnp
xlat
push
mov
mov
xchg
inc
xchg
in
fs
push
and
jb
sbb
hlt
stc
pop
sarb
das
mov
leave
sbb
dec
mov
lret
add
xchg
dec
fs
and
loopne
mov
jge
cmp
icebp
jo
pop
test
push
es
pop
push
push
dec
dec
aam
inc
jno
xlat
jo
adc
repnz
jbe
adc
loop
mov
cs
popf
iret
fcomps
lock
jl
push
fnstenv
addr16
mov
jp
pop
int3
push
xchg
mov
sub
daa
push
mov
sub
popf
scas
adc
sbb
sbb
js
out
scas
aaa
lock
xor
js
fsubrs
xchg
sbb
lret
out
or
hlt
dec
jbe
enter
popl
push
cld
sub
loope
divb
jae
fwait
icebp
and
outsb
cs
sti
imull
xor
and
or
repnz
xchg
sub
mov
fmuls
push
lock
xchg
test
xor
pop
rorl
int
mov
lods
lods
lods
add
jnp
or
pop
pushf
pop
mov
pop
cmp
mov
xchg
inc
test
jne
mov
mov
les
jge
mov
loop
repnz
shll
out
fstpl
dec
push
dec
jl
loope
or
insl
leave
out
imull
jle
mov
stos
pop
add
pcmpgtb
mov
mov
jnp
shlb
stc
mov
clc
or
and
push
mov
in
pop
or
mov
add
outsb
sbb
dec
mov
lcall
jne
cwtl
inc
incb
ds
bound
push
in
subl
jo
outsl
ret
or
outsl
inc
cs
sbbb
pop
push
rorb
lods
inc
add
popf
push
movsl
orl
adc
idiv
test
in
xchg
daa
mov
xchg
out
lret
js
popa
cmpb
fwait
sbbl
fs
out
or
cld
or
loope
inc
aam
xor
and
pushf
pop
jp
call
push
mov
les
sub
dec
add
xchg
mov
iret
add
pop
fsubrp
popa
fnsave
sbb
lods
cmpsl
xlat
int
in
and
push
sbb
cmp
xor
mov
cmpsl
loop
cmp
leave
add
xchg
jecxz
hlt
push
or
enter
push
xor
mov
fcoms
jbe
inc
sti
push
and
mov
jne
test
popa
fistps
adc
xor
dec
popf
or
push
jns,pt
dec
push
out
mov
xor
cli
mov
leave
hlt
cmp
mov
mov
push
cmp
push
adcl
or
or
xor
lods
adc
sub
push
xor
or
mov
or
imul
lret
pop
or
xchg
dec
xor
lock
jno
mov
cmp
imul
sub
iret
cmp
mov
test
int3
cmp
mov
lods
outsb
mov
or
fsubrl
shrl
lcall
stos
push
or
out
das
lods
fmuls
js
leave
int
mov
inc
inc
jnp
movswl
push
subl
rol
xorb
fisubl
xor
jl
ljmp
insb
cmc
loope
mov
push
imul
adc
sub
mov
jl
test
mov
scas
stos
mov
cmp
repz
cld
jmp
push
aam
imul
inc
sahf
jbe
and
rcll
mov
pop
sub
pop
cltd
mov
cmpsb
fidivrl
sbb
mov
lret
add
mov
repnz
std
and
inc
sub
xlat
push
jp
cli
xchg
dec
or
shr
mov
scas
or
sub
mov
push
jns
bound
pop
fisttpll
and
iret
es
mov
dec
or
leave
and
stos
cmpsl
icebp
jle
xor
cmpsl
push
pop
bound
or
loop
fisubl
mov
mov
cmp
xchg
test
sbb
cwtl
aam
inc
jne
pop
xchg
lods
sub
pushf
cltd
in
psadbw
repnz
jno
jmp
jge
outsl
daa
add
int
insl
je
jbe
fdiv
pushf
push
out
cwtl
mov
out
lret
loope
mov
sahf
ljmp
lret
mov
adc
cmp
js
and
mov
fnsave
jg
insb
push
sbb
daa
dec
xchg
in
lret
shr
mov
testb
faddp
bound
xchg
lds
enter
xchg
sbb
sti
push
mov
push
mov
insl
mov
fisubrs
add
ljmp
arpl
test
cli
jg
push
iret
mov
and
std
cmpsl
dec
in
pop
inc
xchg
jge
jmp
and
xlat
push
or
pop
testl
mov
adc
sbb
add
jno
mov
cs
int
mov
and
mov
jp
dec
dec
jns
dec
jge
inc
inc
cmp
add
and
std
int3
cmpsl
cmp
sub
scas
bound
mov
roll
bound
pusha
add
cmp
pusha
push
aas
xchg
adc
out
popf
mov
rcrl
dec
pop
add
dec
add
and
mov
xor
add
add
mov
add
add
add
add
sbb
andb
xorb
add
add
add
mov
add
add
add
addb
add
cwtl
add
addb
add
enter
or
add
nop
add
orb
add
add
orb
add
sbb
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
orb
adcb
andb
sbbb
cmpb
sbbb
adcb
add
push
add
add
add
mov
add
add
add
add
add
add
add
add
lock
add
or
add
and
add
cmp
add
push
push
add
push
add
add
add
add
add
jo
add
sbbb
sbbb
add
sahf
sbb
or
add
loopne
add
clc
push
add
adc
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
sbb
cmpb
add
je
add
mov
add
stos
sbb
sbbb
add
xor
add
dec
or
xor
add
push
sbb
cmpb
andb
add
inc
sbb
subb
add
jbe
add
mov
xor
add
or
add
and
add
cmp
add
push
or
addb
add
sbb
add
cwtl
or
orb
xorb
add
sbbb
adcb
cmpb
add
sub
add
inc
or
orb
add
and
add
xor
add
ds
add
pop
push
add
jo
add
mov
add
cmpsb
push
add
mov
add
ret
xorb
add
dec
or
sub
add
add
add
adc
add
and
add
ss
add
push
pop
add
popw
add
jl
add
xchg
pop
add
movsb
pop
add
mov
or
or
add
loopne
add
repnz
add
add
add
sbb
add
xor
add
inc
and
cmp
add
adc
add
je
add
jle
add
xchg
and
xorb
andb
add
mov
and
cmpb
add
push
and
sub
add
add
add
mov
add
add
add
add
add
add
push
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
sldt
dec
push
add
pusha
push
add
js
add
nop
push
add
test
add
rorb
xor
add
fmuls
add
lock
add
or
add
and
add
cmp
add
push
sldt
push
sldt
orb
cmp
add
cwtl
sldt
mov
add
enter
sti
sldt
loopne
add
clc
sldt
adc
add
sub
add
inc
adc
addb
add
pop
adc
addb
add
mov
add
add
add
add
add
outsb
and
orb
add
xchg
and
cmpb
add
mov
adc
addb
add
mov
add
add
add
add
jg
add
adc
cmp
add
sbb
add
xor
add
dec
adc
cmp
add
pusha
adc
cmp
add
js
add
nop
adc
addb
add
mov
add
add
add
add
and
subb
add
mov
add
add
add
add
add
rclb
add
add
add
add
add
add
add
add
rclb
add
add
add
mov
add
add
add
add
add
loopne
add
add
add
mov
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
and
add
add
add
mov
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
adcb
add
add
add
add
add
add
add
add
nop
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
adc
add
lock
adc
add
add
leave
adc
add
imul
add
aad
add
bound
add
aaa
sbb
add
add
lock
add
add
lock
add
adc
add
dec
and
xor
add
and
and
xor
add
pop
dec
and
xor
add
mov
add
add
rclb
xor
add
hlt
push
and
xor
add
sub
add
add
pop
push
and
rolb
add
sub
and
in
add
adc
add
add
add
pop
and
rolb
add
mov
and
rolb
add
sbbb
rolb
add
push
pop
and
rolb
add
and
add
add
add
bound
rolb
add
shlb
add
add
add
add
data16
pop
add
add
and
pop
add
add
add
add
add
add
add
add
add
add
mov
add
add
jo
add
push
add
sbb
and
cmp
add
push
js
add
push
add
jl
and
cmp
add
mov
and
sub
add
faddl
add
adc
and
sub
add
cmp
and
cmp
add
je
and
sub
add
pushf
xchg
and
add
add
mov
push
add
enter
cmp
add
add
add
sub
add
sub
and
sub
add
push
stos
and
cmp
add
mov
add
mov
and
rolb
add
add
add
add
and
sub
add
add
add
pop
mov
add
test
add
in
ret
push
add
add
add
add
add
add
add
and
test
add
in
and
xor
add
sbb
and
call
int
add
add
add
int
add
add
add
into
and
call
add
add
add
add
add
add
and
sbb
add
shll
rolb
add
and
loopne
add
add
and
loopne
add
in
and
pop
add
add
and
pop
add
add
add
clc
aam
add
add
add
add
add
add
and
cmp
add
and
and
cmp
add
pop
fldenv
cmp
add
nop
fisubl
cmp
add
enter
cmp
add
add
and
add
add
add
and
cmp
add
cmp
and
add
add
inc
loopne
add
add
add
and
loopne
add
pop
loop
add
add
loop
add
add
and
rolb
add
in
add
add
add
in
add
add
add
add
add
and
loopne
add
push
out
add
add
add
call
add
clc
call
add
test
and
call
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
and
and
add
adc
add
adcb
add
add
add
add
sub
and
add
add
push
pop
and
add
and
add
and
add
add
add
add
add
cmp
and
add
add
fsubrl
and
add
and
add
xor
add
xor
add
loopne
and
add
cmp
add
add
add
add
movsb
ds
add
add
mov
add
add
dec
and
add
dec
and
add
dec
and
add
push
and
add
and
add
and
add
in
and
add
add
cwtl
icebp
and
add
add
shl
add
add
aam
and
add
icebp
and
add
icebp
and
add
adc
add
add
pop
add
pop
add
inc
add
dec
add
or
push
add
inc
add
inc
add
dec
add
add
push
add
add
add
inc
add
add
add
xor
add
inc
add
add
add
xor
add
inc
add
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
inc
add
inc
add
inc
add
add
add
push
add
add
inc
add
push
add
push
add
add
push
add
add
dec
add
inc
add
push
add
add
push
add
add
push
add
add
inc
add
push
add
push
add
inc
add
inc
add
dec
add
dec
add
add
add
add
push
add
add
pop
add
inc
add
inc
add
dec
add
add
add
pop
add
inc
add
inc
add
dec
add
add
inc
add
inc
add
dec
add
inc
add
dec
add
push
add
or
add
add
pop
add
add
add
add
add
add
push
add
add
pop
add
inc
add
push
add
add
push
add
add
pop
add
inc
add
push
add
add
add
push
add
add
pop
add
dec
add
push
add
add
push
add
add
pop
add
dec
add
push
add
add
inc
add
inc
add
dec
add
dec
add
push
add
push
add
add
push
add
add
pop
add
dec
add
inc
add
push
add
add
add
push
add
add
pop
add
add
push
add
add
push
add
add
pop
add
add
push
add
add
add
push
add
add
pop
add
inc
add
push
add
add
push
add
add
pop
add
inc
add
push
add
add
add
push
add
add
pop
add
dec
add
push
add
add
push
add
add
pop
add
dec
add
push
add
add
add
push
add
add
pop
add
push
add
dec
add
or
inc
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
pop
add
inc
add
push
add
push
add
push
add
push
add
add
pop
add
inc
add
push
add
push
add
xor
or
inc
add
pop
add
inc
add
inc
add
push
add
or
inc
add
pop
add
inc
add
push
add
adc
inc
add
pop
add
inc
add
add
inc
add
inc
add
push
add
inc
add
inc
add
add
push
add
inc
add
dec
add
pop
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
dec
add
inc
add
or
inc
add
pop
add
inc
add
add
dec
add
or
inc
add
pop
add
inc
add
add
push
add
push
add
add
push
add
dec
add
dec
add
add
push
add
dec
add
add
inc
add
pop
add
inc
add
push
add
dec
add
push
add
or
inc
add
pop
add
inc
add
push
add
inc
add
push
add
add
push
add
dec
add
push
add
dec
add
push
add
or
inc
add
pop
add
push
add
dec
add
pop
add
inc
add
push
add
push
add
push
add
dec
add
add
push
add
push
add
add
add
dec
add
or
inc
add
add
inc
add
add
dec
add
add
or
add
push
add
dec
add
add
dec
add
add
push
add
add
inc
add
push
add
add
add
inc
add
push
add
push
add
add
add
dec
add
inc
add
push
add
inc
add
dec
add
dec
add
add
push
add
dec
add
or
inc
add
dec
add
dec
add
add
add
add
add
pop
add
inc
add
inc
add
dec
add
add
add
pop
add
add
add
add
add
add
pop
add
inc
add
push
add
add
add
pop
add
dec
add
push
add
add
add
pop
add
dec
add
inc
add
push
add
add
add
pop
add
add
push
add
add
add
pop
add
inc
add
push
add
add
add
pop
add
dec
add
push
add
add
add
pop
add
push
add
dec
add
or
inc
add
dec
add
push
add
inc
add
inc
add
dec
add
add
pop
add
inc
add
push
add
inc
add
add
add
dec
add
push
add
add
dec
add
add
dec
add
push
add
push
add
add
dec
add
push
add
pop
add
dec
add
push
add
add
dec
add
push
add
inc
add
dec
add
pop
add
inc
add
add
push
add
or
dec
add
inc
add
inc
add
dec
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
push
add
dec
add
add
push
add
dec
add
pop
add
inc
add
pop
add
dec
add
push
add
dec
add
add
adc
push
add
dec
add
dec
add
dec
add
dec
add
dec
add
pop
add
dec
add
inc
add
inc
add
add
dec
add
dec
add
push
add
inc
add
dec
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
push
add
add
push
add
xor
or
push
add
add
dec
add
inc
add
inc
add
add
lldt
add
push
add
push
add
push
add
add
inc
add
add
or
dec
add
dec
add
dec
add
dec
add
add
sub
mov
adc
test
mov
and
hlt
mov
data16
add
jecxz
mov
cs
stos
adc
mov
push
mov
jo
xchg
or
out
sub
je
pop
js
stos
aaa
inc
mov
pop
push
inc
pop
pop
xor
inc
adc
fucomip
cs
xchg
mov
sarl
sub
lock
aam
pop
loop
shll
jle
adc
jge
enter
sub
cli
into
cmp
jno
jge
inc
in
movsl
xchg
cmpsl
cmp
sub
and
fsubrp
jp
orl
hlt
xor
add
jae
push
adc
test
jmp
popf
insb
icebp
jle
int3
xchg
xor
pop
loopne
imul
sahf
dec
insl
sbb
clc
adc
in
movsb
data16
push
xchg
rcr
outsl
or
push
popl
sbb
or
cmpsb
jg
mov
push
daa
and
or
dec
jae
enter
outsb
mov
xchg
int
mov
mov
push
ss
sbb
or
adc
vpandn
jae
mov
cmp
movsl
or
fisttpl
loop
push
pop
xchg
mov
adc
mov
test
popa
jns
aaa
push
clc
or
in
in
lea
jle
inc
nop
fmull
xchg
cmpsl
lret
pop
adc
ficompl
cmpb
mov
fucomi
lods
loop
icebp
mov
push
push
inc
sub
std
or
mov
sub
mov
pop
mov
xchg
sarb
out
pop
push
sbb
cmp
cmp
ja
push
loope
ja
ja
sbb
lahf
gs
es
and
aad
cmpsl
sbb
into
mov
dec
les
pop
mov
enter
cmpb
out
fldlg2
das
or
inc
and
push
icebp
push
icebp
dec
sbb
ds
cmp
dec
adc
rcrb
mov
sbb
fmull
or
mov
je
pushf
dec
nop
xchg
inc
or
push
scas
imul
push
adc
push
inc
in
add
mov
jnp
xor
test
adc
dec
push
int3
test
shlb
in
cmp
adc
int3
jo
adc
inc
fistl
adc
test
push
sbb
pop
out
mov
xchg
cmpsl
popa
imul
lcall
mov
je
fwait
sub
jnp
xchg
pop
addb
cmc
and
xchg
test
imul
push
inc
cwtl
lret
push
inc
jae
inc
push
les
sub
ds
shlb
lahf
leave
sub
dec
and
xor
jb
in
lds
push
sub
cld
sub
xlat
lea
addl
inc
cmp
decb
or
movsl
mov
icebp
aam
insb
rcrl
test
in
loope
and
movsb
lahf
iret
mov
inc
push
mov
dec
mov
out
enter
sbb
inc
cmp
ds
popf
pusha
lods
shrw
and
add
mov
add
lds
jne
jnp
dec
int
or
or
fldcw
addr16
push
or
lods
push
inc
xchg
mov
mov
dec
call
inc
sub
divb
sbb
dec
jl
jmp
shrl
cmp
mov
lahf
mov
adc
and
pop
lcall
add
fstpt
js
dec
cltd
xor
dec
inc
mov
adc
dec
sbb
jnp
xor
fiadds
into
adc
dec
push
ljmp
push
in
push
out
mov
scas
sub
inc
addl
loope
adc
add
subl
mov
mov
loop
cwtl
add
mov
cltd
out
and
ss
pop
xor
mov
mov
dec
mov
sbb
dec
add
and
mov
xchg
pop
subb
mov
or
jne
jb
sub
xchg
sub
jmp
jb
push
dec
adc
adc
jno
xchg
call
addr16
sahf
cmp
test
sbb
jmp
adc
fcmovnu
lods
xor
lea
scas
pop
es
pop
lret
sub
or
add
add
cmp
pop
lods
mov
inc
and
and
mov
xchg
adc
aas
xchg
jne
xor
xchg
xchg
inc
cs
sub
insb
jp
es
jnp
pop
in
out
cwtl
jge
sbb
loope
cmp
mov
sbb
or
outsb
mov
pop
jl
loope
pop
insl
push
fsubr
sahf
inc
movsl
fs
cltd
js
inc
stc
add
mov
add
pop
insl
or
jp
ljmp
jno
mov
sti
mov
mov
cltd
sti
dec
jno
xor
lea
leave
xchg
stc
popf
testb
das
or
and
add
arpl
jbe
imul
or
push
pop
mov
icebp
push
sbb
call
add
mov
xchg
or
cwtl
inc
adc
mov
xchg
mov
inc
xchg
jge
mov
xchg
pop
inc
mov
push
dec
sbbb
sbb
sub
add
sub
lock
jnp
and
push
test
lods
pushf
in
loope
into
sbb
stos
mov
mov
push
xor
mov
adc
push
ret
xchg
cli
mov
bound
cmp
inc
shll
stos
jle
sahf
lahf
outsl
int
mov
pusha
push
pop
int
sbb
aad
fldl
or
sahf
repz
in
popa
cmp
mov
inc
rdtsc
sti
aad
pop
lahf
stos
repz
fprem
fisttpll
in
jo
aas
int
inc
dec
fisubl
and
repz
cs
mov
out
in
clc
inc
and
sub
add
cmpsb
and
sbb
cs
outsb
pop
xchg
push
jecxz
movswl
out
imul
xchg
outsl
cmpb
or
sub
mov
xor
adc
pop
mov
jle
rcll
sub
lcall
mov
cwtl
addr16
pop
mov
fdivrl
xchg
test
in
fists
fs
das
or
dec
mov
jg
jns
jnp
adc
dec
sub
add
loopne
out
stos
cli
loop
jns
adc
out
stos
cmc
ret
push
mov
or
andb
dec
fs
aad
pop
or
addb
xchg
stos
xor
push
insb
and
rcl
lea
sbb
aaa
adc
jb
lret
adc
cwtl
jo
in
lods
stos
add
xor
shrl
push
test
clc
arpl
repz
aad
lock
in
mov
xorb
xor
cs
lods
adc
lds
int3
jno
jle
mov
mov
pop
push
test
xor
arpl
je
fistpll
repz
pop
inc
lret
jp
cmc
xlat
xor
sbb
mov
sbb
nop
inc
sub
shll
clc
pushf
sub
xor
push
jnp
cmp
inc
aam
stc
jge
mov
test
mov
push
pop
push
cltd
mov
cmc
jno
fwait
xor
dec
mov
pusha
cmovs
jge
cmc
subb
hlt
or
aas
sbb
sbb
test
xchg
xchg
add
or
push
outsb
les
fisubrl
xchg
xor
loopne
jmp
dec
dec
sbb
sub
movsb
out
push
xor
xor
mov
sub
idivb
and
jmp
sub
sbb
es
mov
mov
jle
dec
push
repz
mov
fadds
dec
stos
jo
cmpsb
xchg
aad
mov
cli
inc
frstor
shl
add
cmc
dec
jecxz
into
andl
enter
mov
out
dec
mov
jecxz
jle,pn
pop
mov
sbb
push
insl
sub
inc
pushf
cs
xor
mov
daa
inc
in
xor
sub
xor
mov
add
jo
adc
jne
or
stos
nop
add
sbb
jnp
mov
adc
ds
mov
sbb
mov
or
cmp
inc
xor
mov
das
ss
jno
cmp
ja
sbb
insb
ja
outsb
sub
push
mov
pop
cmpsb
xchg
fs
mov
mov
nop
scas
stos
lahf
adcb
dec
jbe
hlt
inc
mov
call
test
dec
hlt
pop
cmp
cmp
cmc
pop
arpl
mov
leave
rcll
rolb
mov
pop
or
cmp
mov
cs
xchg
in
mov
add
test
enter
repnz
dec
fwait
jb
icebp
lret
cmp
mov
into
xchg
decb
cmc
dec
mov
xlat
xlat
out
cmpsb
mov
and
pop
call
ret
sahf
jo
rol
rolb
xor
pop
nop
cmpsb
mov
test
adc
pop
out
aam
arpl
sbb
xor
xor
mov
pop
cmp
mov
and
dec
icebp
pusha
aas
push
pop
test
dec
inc
adc
faddp
sub
iret
arpl
add
in
mov
in
lahf
fs
in
incl
add
adc
in
arpl
cmp
or
mov
pop
xchg
mov
mov
inc
mov
cs
jbe
test
push
xorb
mov
push
ss
sub
fidivrs
xchg
xchg
ror
imulb
push
mov
xchg
test
push
out
loop
out
scas
ret
pop
xlat
sbb
imul
je
lds
pop
call
cmp
adc
xor
roll
out
or
mov
pop
pusha
xchg
scas
jae
dec
mov
dec
xor
rorl
inc
sarb
scas
in
inc
mov
ljmp
arpl
sbb
and
js
bound
inc
test
add
stos
mov
xor
lret
jl
dec
in
dec
inc
repnz
or
rolb
es
mov
sbb
adc
adc
nop
xchg
cmp
fld
push
and
arpl
adc
xchg
fistpl
popf
fsub
sub
xor
mov
mov
xor
pop
ds
pop
jg
mov
mov
ds
jmp
and
aad
xchg
aas
jl
addr16
jns
cmpsb
insl
rcrb
sbb
add
lods
in
dec
ret
pop
aaa
add
popf
xlat
mov
cmp
sub
jecxz
cmpsb
dec
ljmp
and
or
cmpsl
icebp
push
leave
arpl
inc
add
js
cmp
movsb
jbe
fisttps
mov
ja
repz
imulb
bswap
in
add
add
stos
pminub
mov
fwait
loop
shll
pop
aam
push
into
cmp
or
lahf
out
adc
mov
sarl
jg
mov
inc
cmpsb
call
mov
pushf
fwait
sub
fcmovu
jecxz
arpl
iret
lods
lods
push
lahf
iret
mov
push
cmp
das
push
xchg
and
cli
jb
inc
arpl
test
aam
sub
pop
lret
xor
pushl
orl
ljmp
popf
cld
push
lret
ret
mov
into
and
or
std
hlt
dec
jne
rorl
cld
push
pop
call
dec
dec
adc
and
aad
ss
dec
loope
jmp
scas
stos
pusha
jb
nop
fistl
push
dec
mov
pop
aad
xchg
push
adc
xlat
pop
ret
push
shr
adc
mov
mov
pop
mov
fnsave
xlat
nop
ret
mov
movsb
clc
call
call
xor
mov
mov
push
lock
shrl
jb
xchg
xchg
push
or
sahf
inc
mov
sbb
lret
das
lock
pop
mov
mov
lock
push
xor
fidivrl
add
fwait
xchg
out
jmp
test
mov
push
push
xor
rcrb
sbb
jae
call
aam
arpl
pushf
fs
sahf
enter
xchg
cmp
stc
roll
pop
stc
imul
leave
jmp
jg
xor
mov
xlat
call
popa
mov
sbb
xchg
les
loop
jmp
push
mov
insl
sub
jle
ret
add
lcall
pop
js
sbbb
movsl
jnp
adc
les
xor
jns
cld
rorl
das
lds
inc
mov
cltd
imul
jo
or
push
repnz
xchg
vshufps
push
cmp
sbb
sub
lret
add
repz
std
mov
stc
xchg
pop
mov
xchg
pop
std
xor
fwait
push
sub
and
stc
cmc
cli
add
cmp
cltd
dec
in
mov
sub
cmp
sbb
pop
leave
xchg
outsb
shlb
ss
or
out
add
cmp
out
adc
sbb
jl
mov
adc
leave
cld
sbb
sbb
scas
mov
adc
div
lods
movsl
mov
ja
push
pop
mov
js
mov
into
jecxz
pop
pop
and
int3
push
push
out
cld
fnstenv
leave
test
mov
sbb
mov
lea
xchg
inc
sti
xchg
xchg
lods
sti
jb
rorb
push
add
push
pop
in
adc
in
mov
enter
lock
test
insl
cltd
dec
inc
cmp
test
jg,pt
movsb
fcomps
pop
popw
xchg
xor
add
adc
inc
mov
shl
push
ss
or
out
mov
jl
into
and
pusha
jb
cmc
icebp
mov
pop
pushf
push
sub
int3
jnp
push
bound
and
cmp
sbb
push
fdivrl
dec
test
dec
inc
fsub
loopne
jnp
cld
jbe
dec
and
sbb
in
subb
dec
popa
jne
cmp
pusha
fs
xor
mov
and
mov
testb
lea
mov
push
mov
or
movsb
mov
push
adc
movsl
shll
sbb
jno
or
addl
jl
sub
aas
inc
pop
stos
dec
nop
mull
sbb
sub
cli
shrb
or
adc
scas
out
cmp
sbb
dec
pushf
leave
insb
fcomps
mov
iret
loopne
int
xchg
jmp
ret
sbb
jl
out
mov
mov
adc
push
cmp
pushf
test
movsl
jbe
int
mov
or
add
or
fld1
cmpsb
inc
cmpsb
shr
mov
lret
and
inc
jnp
jl
mov
lods
movsb
nop
xchg
ret
sar
inc
in
cltd
dec
pop
out
mov
xorl
jb
xor
mov
push
mov
dec
mov
data16
adc
fnstcw
cmp
lods
bound
xchg
and
adc
lods
in
adc
outsb
popa
push
jne
adc
ja
fdiv
mov
inc
add
cmpsl
enter
repnz
and
iret
bound
out
cmp
mov
and
xor
insb
rcrl
daa
cwtl
sub
pop
push
shlb
and
test
imulb
popa
hlt
mov
and
push
outsb
pop
add
icebp
pop
pusha
scas
subb
or
dec
js
dec
mov
ss
mov
sbb
pop
and
push
mov
aas
insl
xchg
or
in
fsubl
sar
pop
shl
arpl
xchg
add
mov
test
mov
imul
add
push
dec
push
jbe
mov
mov
sub
aaa
sbb
inc
and
ss
cmp
sar
jb
ret
pop
das
jp
call
sub
cmpsb
xchg
vhsubps
int
inc
adc
mov
shll
or
pusha
push
mov
cli
arpl
cmp
psllw
xor
xchg
dec
fucomi
add
fistpll
mov
dec
adc
pop
jp
cmp
out
jecxz
idivb
std
cld
sub
pop
test
ja
lret
test
dec
daa
in
mov
push
lea
xchg
lcall
lcall
dec
add
push
orl
cmp
out
repz
pop
cltd
or
repz
cmp
dec
cmp
in
dec
push
mov
jae
mov
sbb
sbbb
enter
push
orb
or
daa
push
cmp
inc
nop
in
add
das
mov
fnstsw
push
outsb
rclb
scas
add
out
js
dec
jmp
or
movsl
je
adc
sbb
push
xor
dec
jl
outsl
outsb
mov
jo
inc
stos
insb
sar
les
adc
roll
jmp
and
sbb
xchg
adc
sbb
loop
loope
inc
fs
movsb
dec
adc
mov
mov
xor
in
pop
cltd
lahf
jno
pop
in
mov
popa
hlt
outsl
lea
sbb
or
adc
or
jge
push
adc
lock
xor
sbb
addl
mov
pop
cmpsl
inc
std
hlt
js
cmpsl
les
jg
stos
push
jb
stos
insb
into
lcall
ljmp
fdivl
insl
cli
or
pop
pinsrw
mov
cmp
rorl
or
cltd
ja
add
or
test
cmp
lods
out
shlb
or
pop
pop
scas
push
outsl
add
adc
mov
and
pop
cmp
dec
ret
scas
aam
sub
icebp
test
sub
xchg
popf
fwait
lret
aam
adc
xlat
mov
insb
jb
add
jnp
iret
outsl
subl
push
out
rol
sbb
iret
sbb
cmp
outsl
stc
enter
xchg
adc
sub
test
mov
dec
mov
lods
xchg
xor
mov
pop
dec
in
inc
sti
cmp
stos
fwait
add
adc
test
jbe
jmp
gs
mov
icebp
push
lret
clc
xchg
aad
imul
enter
divb
ds
ja
outsb
dec
pusha
and
inc
add
cmc
and
lret
dec
lds
nop
sub
scas
out
add
mov
data16
xor
cmp
jo
hlt
faddp
inc
lret
inc
sbb
leave
leave
loopne
adc
xor
adc
mov
jns
push
add
inc
dec
and
ds
adc
xchg
pop
mov
aas
jno
inc
movsb
orl
sub
adc
in
jle
jecxz
ss
pop
dec
and
imul
nop
lods
inc
inc
jne
test
push
clc
push
mov
xchg
jp
inc
out
outsb
sbb
out
dec
xlat
loop
mov
lret
andb
and
out
mov
addr16
jp
push
ret
call
cmp
daa
cwtl
and
enter
and
lret
xor
jo
sbb
or
sub
jg
jmp
dec
lret
lea
pushfw
jl
sub
jno
xchg
fs
mov
cmp
jecxz
das
jmp
das
cmpsl
imul
cmp
mov
insb
daa
outsb
adc
adc
adc
negl
mov
xchg
mov
das
test
cmpsb
icebp
es
repnz
xorb
or
shrb
mov
rcrl
sub
cli
sahf
pop
stos
push
dec
scas
mov
jb
add
add
popa
out
add
pop
jp
mov
add
cmp
inc
mov
jl
mov
jns
xor
insl
xchg
daa
arpl
movsl
leave
push
push
sbb
inc
lea
or
pop
adc
pop
inc
sbb
dec
add
fs
mov
dec
call
mov
dec
jmp
jne
jp
mov
incb
daa
lret
xchg
fwait
dec
fsub
mov
out
mov
rcrl
cmp
mov
insb
and
fwait
icebp
pop
ret
stos
cli
ja
mov
xchg
inc
jb
cmp
xor
sub
jmp
add
xor
int3
pop
test
inc
adc
arpl
push
stos
mov
ja
test
pushf
xor
add
pop
push
mov
dec
or
cld
pop
aam
sub
mov
fs
sahf
pop
pop
mov
loopne
cmpl
push
pop
or
lret
outsl
repnz
pop
lcall
bound
out
cmp
push
or
sarl
out
int3
xchg
mov
sahf
orl
xchg
jbe
push
push
xchg
push
inc
push
lret
and
push
and
xchg
mov
mov
or
lret
loopne
add
mov
pop
push
aas
lret
sbb
cmp
xor
sbb
lods
ja
out
imul
mov
shl
cwtl
pop
xor
shl
out
mov
pop
xchg
lock
adc
and
ljmp
testb
cwtl
cmp
std
sub
inc
sub
push
push
rorb
xchg
neg
movsb
outsb
mov
mov
cmp
fildll
sub
adc
les
gs
icebp
test
movsl
aam
sub
push
push
cwtl
mov
mov
pushf
mov
jnp
push
dec
enter
dec
inc
mov
cmp
jge
push
std
les
sahf
xorb
mov
push
pushf
dec
pop
pop
push
cmp
les
pop
jns
lcall
enter
fistps
movsb
mov
lcall
adc
pop
movsl
push
mov
cmpsl
dec
insl
jl
loopne
mov
out
cld
int3
out
or
xor
call
mov
int3
mov
pop
add
pop
and
fwait
xchg
dec
jns
mull
mov
gs
lods
cld
lcall
shr
adc
repz
add
xlat
push
sbbb
inc
mov
adc
jno
jne
adc
mov
and
pop
xchg
scas
insl
pop
xchg
insb
sub
rolb
push
call
xor
push
pushf
xchg
enter
mov
lock
stos
fnstsw
lods
xor
inc
sbb
jecxz
jns
lods
xchg
dec
add
adc
add
push
add
daa
fs
sbbb
sahf
testb
les
mov
mov
lcall
jg
daa
fisttpll
adc
mov
dec
mov
jo
daa
lods
inc
pushf
push
mov
add
int3
xorb
inc
in
mov
dec
adc
into
mov
arpl
push
movb
rcrl
test
adc
into
test
aam
lret
mov
inc
mov
dec
lcall
popf
jecxz
movsl
cli
shll
jno
loope
push
out
ss
inc
pop
fucomi
outsl
mov
push
aaa
cmp
inc
int3
in
incb
or
xor
xchg
dec
stc
jecxz
ds
call
insb
xchg
mov
dec
dec
mov
push
test
shll
fcmovne
clc
or
sub
push
lock
rcrl
fldcw
push
xchg
scas
hlt
xchg
bound
mov
roll
loopne
sbb
movsb
xchg
inc
dec
mov
out
rorl
xchg
xor
or
pop
jbe
mov
sarl
xchg
sbb
cmpsl
popa
je
inc
mov
jmp
mov
adc
int
jl
mov
sub
xchg
aas
jb
dec
add
int
int
pop
cltd
rol
out
popf
in
js
test
and
scas
ljmp
orb
mov
cmp
push
int3
scas
ja
pop
lahf
dec
pop
fsubrs
fwait
cmp
and
fstpl
and
sbb
loopne
or
push
xchg
cmp
loopne
cwtl
fwait
add
in
push
aaa
sub
aad
out
xor
mov
mov
leave
mov
outsl
addr16
pop
js
std
xor
sahf
inc
ljmp
stos
jbe
xchg
fcoms
mov
jmp
push
push
inc
push
test
cmc
fchs
inc
xlat
ror
fidivs
xchg
divb
and
cmp
arpl
pop
mov
fnsave
mov
test
ds
movsl
mov
and
dec
loop
and
outsl
addr16
cmp
cmp
push
in
mov
loopne
fmuls
sbbl
out
into
mov
sub
push
sub
xor
mov
sub
adc
and
imul
cmpsl
push
cmp
test
lock
int
mov
cwtl
xor
repnz
nop
pop
lds
mov
or
dec
jmp
jns
jg
mov
pop
mov
xor
or
xchg
das
je
jg
jno
mov
or
cmpsl
ja
dec
incb
aad
repz
test
lods
mov
mov
scas
cwtl
outsb
stos
iret
push
bswap
aam
ffreep
sub
xor
andb
scas
aaa
ds
arpl
mov
fdivrl
out
sub
push
test
ljmp
xchg
cmc
ss
ficompl
int3
pop
mov
nop
cmc
xor
pop
pop
xchg
xchg
add
mov
mov
xor
jge
addr16
mov
inc
xlat
dec
popf
adc
add
push
xchg
pusha
outsl
movsb
mov
in
cmp
dec
inc
push
mov
aas
roll
adcb
cmp
jnp
mov
shll
adc
insl
and
leave
shrl
jne
or
ret
vmread
sub
rcrb
xor
popa
popa
les
jg
dec
mov
insl
cmpsb
xchg
add
sbb
js
mov
jns
jp
insl
clc
pusha
movb
repz
pop
cwtl
xchg
adc
stc
and
sub
lcall
loopne
sarl
and
aam
inc
fdivrp
mov
mov
in
adc
jg
pop
shl
sbb
adc
dec
inc
int
stc
fistl
push
push
std
nop
sub
test
mov
popf
cli
sahf
mov
cli
add
out
movsb
pop
popf
xor
inc
sub
adc
ja
std
mov
jae
out
fdiv
sub
mov
fwait
mov
sbb
xor
jne
add
xchg
dec
cli
cmpsl
loopne
add
subb
stos
and
mov
daa
cmpsb
pop
pop
cs
cmp
push
add
and
movsb
lret
lret
fistpl
dec
xor
imul
xchg
iret
scas
leave
in
pop
out
stos
mov
call
test
push
setge
adc
push
loope
mov
inc
pop
sub
fs
repnz
mov
sbb
pop
lods
mov
int3
jnp
pop
or
xlat
aaa
adc
fidivl
sub
push
or
jb
pop
aas
xor
add
mov
test
dec
pushf
into
push
enter
adc
iret
nop
into
in
in
adc
enter
mov
sub
inc
xchg
cmc
repnz
push
loopne
insb
adc
jle
and
add
outsl
sbb
xchg
icebp
arpl
out
addb
in
subb
imul
sub
cmp
outsl
cmpsl
sbb
dec
jb
test
in
dec
aad
xor
mov
pusha
xor
mov
jb
in
pop
ss
adc
es
jns
push
dec
mov
fdivp
lahf
mov
pop
xchg
and
jne
pop
dec
mov
data16
pusha
arpl
aaa
pop
std
bound
daa
add
jnp
test
jl
test
icebp
cli
jae
inc
push
xchg
lret
int
insl
int
cmp
cmc
jecxz
ret
aas
ret
add
inc
cmp
je
inc
push
es
into
jmp
sub
push
jb
out
add
pop
inc
and
in
sbb
pop
mov
push
sbb
in
leave
leave
insb
outsb
cmc
lret
outsl
cmp
cmpsl
bound
leave
xchg
push
inc
mov
mov
xor
pop
or
js
hlt
mov
gs
lcall
xor
inc
dec
sbb
xchg
into
xchg
push
addr16
xchg
and
std
pop
icebp
mov
lods
or
jmp
out
aas
sub
jp
sbb
in
hlt
in
sbb
inc
ret
mov
lods
jl
pop
mull
popa
lret
shll
jp
and
hlt
dec
mov
ja
in
jecxz
dec
dec
mov
sub
mov
pop
sahf
pusha
outsb
test
ljmp
cmpsb
or
std
mov
inc
add
in
aam
jae
jp
clc
rorb
dec
and
leave
sub
jo
dec
push
mov
sub
js
ret
cs
outsl
dec
in
cmp
push
xor
jb
mov
mov
adc
jge
cli
sbb
mov
pusha
and
add
cwtl
cmp
jmp
loope
inc
lds
fdivrl
push
adc
xor
call
cmp
movsl
or
inc
rolb
mov
pop
rcll
xchg
or
cmp
jl
stc
pop
fcompl
test
rcl
js
inc
fildll
aas
xchg
mov
lret
jns
push
ficomps
inc
jne
lods
adc
xchg
lods
jnp
or
xchg
cmp
pop
inc
jg
xchg
sub
sar
sub
arpl
call
daa
mov
fwait
inc
push
sub
dec
stos
mov
ss
mov
xchg
xchg
sub
daa
insb
adc
es
call
mov
adc
mov
xchg
push
xchg
xor
mov
xor
lods
clc
imul
push
push
inc
xor
inc
cmp
xchg
loope
adc
push
scas
pop
adc
add
in
sbb
pushf
mov
inc
jge
or
in
jge
je
add
inc
test
jecxz
fcmovnbe
insb
add
cltd
addr16
inc
pop
jge
shrb
push
cld
push
enter
aad
ss
cs
clc
in
dec
clc
mov
clc
inc
jbe
je
cwtl
jmp
cmc
out
mov
inc
cmp
sbb
dec
int3
dec
inc
sub
xorl
xchg
out
push
clc
faddl
std
js
mov
out
insl
test
pop
cmc
or
cmp
mov
and
mull
lcall
lods
xchg
lcall
dec
pop
and
cmc
popf
scas
mov
pop
imul
fs
icebp
idivl
mov
mov
addb
stos
loope
xchg
mov
push
push
fwait
aaa
xor
mov
js
repz
mov
push
lds
ljmp
inc
push
popa
int
cmp
xchg
mov
imul
lahf
in
mov
xchg
mov
ret
jecxz
pop
std
les
and
mov
loop
pusha
clc
adc
cld
jno
je
dec
sbb
pop
addl
inc
fs
fwait
lret
dec
mov
or
arpl
jmp
aaa
pop
rcrb
dec
pop
test
fisttpl
mov
jno
bound
push
or
in
bnd
sbb
daa
sub
into
and
neg
shll
inc
mov
xchg
mov
movsl
mov
inc
jb
gs
jp
filds
arpl
test
jnp
mov
outsb
out
int
leave
pop
shlw
jae
push
inc
repz
das
sti
pop
dec
mov
arpl
xchg
fwait
es
mov
mov
scas
cltd
xor
cmpsb
dec
jnp
stos
sub
fdivrs
fcoml
mov
les
std
insb
mov
push
jle
jb
pop
xchg
ret
sub
sub
inc
bound
sbb
je
lret
outsb
insl
and
jp
je
dec
imul
aam
xor
sti
mov
loopne
ret
es
jns
sbb
es
ljmp
stos
lods
mov
adc
mov
xchg
push
aad
repnz
mov
fwait
iret
jnp
sub
ror
mov
jmp
mov
push
mov
aas
add
addl
and
daa
in
xchg
mov
pusha
push
push
mov
lods
push
jp
arpl
sbb
fimull
ror
ja
lods
out
xchg
aam
mov
push
pop
sbb
out
and
xor
lds
xor
jnp
jg
fs
add
and
cwtl
leave
mov
cld
sarl
cmpsb
daa
lock
xor
shll
or
arpl
jl
call
xchg
stos
add
dec
xchg
inc
and
xchg
cmpsl
mov
xlat
out
pop
mov
stos
negb
test
lods
lods
push
cmp
mov
xchg
sub
movsb
push
mov
pop
mov
gs
dec
sbb
mov
push
ficompl
xor
lret
leave
subb
jecxz
mov
mov
pop
in
push
fwait
jbe
das
pop
pop
xchg
sub
cwtl
jg
sub
inc
sbb
jle
or
or
out
lods
aaa
pushf
cli
fdivrl
xchg
jecxz
test
mov
in
lock
add
popa
enter
mov
iret
hlt
cmp
ss
daa
adc
movsb
sub
je
jle
shlb
fists
lea
cmpsl
lahf
shrb
pop
push
testl
test
push
xlat
ror
roll
frstor
frndint
add
ret
push
sub
xchg
pop
adc
sbb
and
cwtl
scas
inc
and
pmovmskb
pop
stos
lahf
and
jmp
daa
loop
loope
or
out
aad
xor
dec
inc
lcall
into
inc
outsb
js
jns
es
cmp
cld
aaa
cmp
ds
loopw
add
mov
jmp
xchg
push
mov
mov
cs
mov
fsub
in
lds
sub
fs
pop
mov
sbb
jno
cmp
not
jb
push
lock
dec
shl
movsl
inc
arpl
jne
dec
sbb
outsl
shlb
ficomps
pushf
and
je
addr16
add
or
inc
mov
xor
mov
std
pushf
sub
es
sbb
dec
inc
xor
insb
popa
lret
push
pop
mov
mov
sbb
lock
in
push
push
jno
adc
scas
mov
xchg
out
pusha
jge
xchg
sbb
and
xor
cmpsb
aas
je
hlt
push
xchg
cltd
outsl
mulb
test
or
fwait
jge
mov
hlt
sbb
jns
icebp
sar
jmp
push
aaa
mov
loope
repnz
mov
std
add
sub
insl
push
mov
inc
cltd
sti
jge
jge
loopne
cmp
int
lea
pushf
jne
push
xchg
jbe
ret
fmul
stos
sbb
int
sub
adc
and
lahf
xchg
mov
adc
mov
cmp
scas
in
pop
cmp
dec
mov
notl
orb
in
movsl
test
js
sahf
stos
in
cmpsl
xchg
adc
mov
ss
aad
mov
mov
in
dec
lods
mov
pusha
xchg
arpl
cmp
rorb
inc
aaa
clc
sub
cs
outsl
inc
and
inc
int3
xchg
in
xor
decb
dec
jo
add
imul
jne
inc
push
loope
adc
cmp
stc
pop
cs
xor
cmp
xchg
xchg
ds
dec
lock
mov
in
cwtl
sbb
movsb
loop
bound
push
push
call
je
inc
and
cmp
outsb
push
pop
adc
addr16
movsl
je
fldl
jecxz
out
mov
cmc
adc
iret
jecxz
xchg
mov
nop
adc
outsl
fistl
jae
insb
add
les
popf
sub
pop
pop
mov
mov
out
loop
aad
rcl
mov
push
xor
lods
enter
adc
pop
xor
mov
lcall
xchg
sub
jecxz
nop
inc
or
sub
les
outsb
hlt
test
repnz
mov
pop
xchg
ret
imul
test
out
pop
mov
icebp
jecxz
xor
pop
les
in
mov
jge
jb
pop
mov
and
xor
pop
pop
test
std
mov
mov
and
mov
dec
int
idivb
xor
stc
mov
out
lcall
sti
stc
inc
inc
push
sbb
jae
test
and
fcoms
fisubrs
cmpsl
ret
mov
fwait
xor
mov
push
or
xor
mov
dec
jno
xor
int
adc
xchg
repz
aam
and
mov
in
sbb
sub
xchg
jecxz
push
and
xor
sub
ret
gs
repz
add
push
or
jbe
mov
pushf
jno
loopne
ljmp
push
lods
push
insl
cld
dec
inc
movsb
cmp
lret
into
aam
cli
push
aam
sbb
clc
stc
and
fstpt
xchg
dec
testb
mov
cmp
dec
xor
lods
adc
pop
aam
mov
xor
pop
adc
mov
mov
fdiv
jecxz
inc
dec
js
int3
push
cmc
adc
scas
cmp
or
stc
jmp
xor
add
jg
pop
iret
sbb
dec
das
jp
enter
push
xor
mov
ret
jae
add
mov
testl
dec
out
dec
and
inc
lret
mul
mov
push
loope
mov
xor
lock
pop
imul
xor
int3
js
cs
xchg
jp
lahf
jae
mov
es
push
pusha
hlt
das
lods
lret
inc
sar
pop
mov
mov
ja
pop
or
cli
pop
xchg
and
test
sbb
sbbl
adc
jecxz
mov
and
add
popf
dec
jb
or
testl
movaps
sahf
add
adc
cltd
jbe
ffreep
lcall
mov
loopne
sub
push
dec
call
xlat
and
xchg
and
aad
push
inc
cltd
mov
pop
lds
and
int
lcall
fwait
stc
decl
jle
jp
or
rcr
mov
jmp
aas
aaa
fisubl
pop
mov
shll
sbb
dec
lahf
shl
dec
add
ljmp
pop
icebp
dec
inc
pop
mov
or
and
mov
scas
fisubrl
and
mov
cwtl
hlt
adc
mov
arpl
in
cmp
subb
mov
inc
movsb
cmp
js
fldcw
jbe
adc
jb
lahf
out
idiv
cwtl
and
pop
inc
sub
sub
int
lods
clc
call
push
imul
add
or
push
fistpl
cmp
mov
cmp
in
test
mov
dec
xchg
lret
mov
lds
in
stos
sbbl
push
pushf
test
mov
cmpsb
sub
cmpsb
lods
push
mov
inc
dec
mov
push
adc
mov
call
jnp
adc
xor
jns
push
movsl
xchg
jge
sub
sub
pusha
sbbb
ds
pop
dec
mov
jecxz
ds
shl
mov
xchg
ret
dec
jmp
mov
or
pop
add
ret
hlt
int3
dec
push
pushw
flds
sbb
sbb
push
and
push
cli
mov
cwtd
mov
dec
push
fwait
test
lods
inc
fmull
jge
pop
add
fmuls
inc
std
cmpsl
adc
pop
fildl
adc
gs
bound
adc
sbb
pop
out
xchg
movsl
sahf
jmp
rcrb
push
mov
pop
imul
pop
xor
mov
sti
bound
push
adc
jo
jmp
outsl
movsl
inc
or
mov
lds
outsl
xchg
aaa
lds
into
mov
push
mov
inc
incb
add
jne
lret
xlat
sbb
repnz
or
and
out
xor
cld
sti
adc
mov
push
sub
testl
test
imul
mov
mov
fmuls
pusha
adc
mov
pop
mov
or
xchg
data16
dec
xor
cmp
test
clc
setge
mov
popf
dec
add
scas
mov
subl
cwtl
xchg
ficomps
mov
mov
xorb
cmpsb
dec
lcall
lret
lret
xchg
sub
jbe
jo
add
push
das
inc
cld
jmp
fsubl
jmp
add
out
lods
pop
mov
and
adc
repz
inc
shrb
movsl
xchg
dec
mov
outsb
jae
arpl
fisttps
jmp
jb
js
dec
push
jno
xchg
mov
add
es
clc
xchg
dec
adc
insb
int3
cmpsl
shrb
in
jmp
push
addr16
ss
rol
dec
dec
and
jno
push
cwtl
or
and
outsl
in
ret
cmc
in
lret
and
sub
packsswb
repz
imul
or
test
ljmp
pusha
addl
jmp
cmc
xor
sbb
fs
jg
jb
pushf
orb
ret
pusha
and
ret
jns
and
push
in
movsl
mov
aam
cmpsl
cmpsl
loopne
mov
mov
out
mov
sub
aad
xor
pop
cmc
xor
mov
loopne
push
test
inc
cld
xchg
repnz
enter
cmp
add
repz
jp
aad
mov
shll
xchg
sbb
hlt
out
mov
and
add
cmp
jp
into
cld
mov
movsb
hlt
jle
iret
hlt
and
cmp
mov
test
mov
lahf
dec
test
hlt
cmp
lea
mov
mov
fstpl
adc
xor
mov
push
push
mov
pop
or
dec
dec
xor
jae
mov
cld
testb
mov
xor
mov
or
xor
fdivr
icebp
cmp
pusha
mov
sbb
dec
std
cli
adc
mov
adc
mov
sar
out
add
cwtl
sbb
or
addr16
add
and
cli
mov
rcrl
cld
stos
push
sti
mov
pop
fldcw
mov
bound
or
pop
in
xlat
notb
test
sub
adc
test
mov
push
xchg
xorb
es
aaa
cmpsb
sub
pop
mov
push
mov
jae
pop
inc
inc
daa
repnz
dec
lcall
sbb
jg
add
xchg
mov
adc
xchg
jns
cmc
push
int
out
and
inc
push
sti
ljmp
repnz
dec
dec
pusha
ret
mov
dec
pop
mov
outsb
xor
ficoms
push
notl
mov
rorl
cmp
dec
cltd
or
out
dec
fidivl
inc
jo
arpl
sub
movsb
loopne
cs
mov
dec
jne
pop
or
das
mov
mov
cltd
out
jb
dec
idivb
pop
aam
xor
xor
filds
fsts
lahf
cmp
push
sub
sub
jb
push
js
adc
mov
adc
insl
fiaddl
mov
xlat
dec
iret
xor
push
adc
out
xor
outsl
pushf
inc
push
fucomip
sub
call
in
ret
push
xchg
dec
pop
outsb
roll
add
bound
cs
das
mov
test
orb
jg
lds
mov
fisubrs
out
fildll
lods
pushf
xor
xor
xchg
pop
xchg
lods
sti
insb
add
aas
sarl
xlat
inc
aad
or
pop
out
outsl
bound
aad
xchg
pop
and
in
in
pop
push
and
inc
loope
sub
stos
mov
in
inc
std
xchg
clc
in
int
or
sub
cmp
out
sbb
jno
aam
jg
jmp
push
and
inc
push
and
add
testl
out
or
add
adc
jne
shrb
les
mov
xor
fisubrs
stc
cmp
add
imul
jg
jmp
fmul
sub
cltd
dec
nop
or
ds
test
and
inc
lret
add
outsl
jmp
jns
lret
adc
popa
das
in
mov
push
xchg
mov
mov
jo
push
jne
int
xor
jnp
stos
js
sub
xlat
pop
roll
inc
push
stc
repz
in
popf
push
out
in
inc
inc
adc
dec
mov
xchg
pop
jle
add
les
xchg
lock
repnz
icebp
mov
shl
addr16
fimuls
stos
jno
mov
push
or
xchg
jle
mov
repz
push
loop
push
or
out
mov
cwtl
dec
mov
fisubrl
mov
sarl
push
pushf
iret
sub
test
addr16
dec
mov
pop
dec
nop
insb
and
mov
repnz
lods
ficompl
inc
mov
es
mov
cmp
loope
dec
fsubrp
in
pop
into
or
cmpsl
mov
jo
sbb
call
aaa
mov
xchg
adc
mov
popa
push
xor
pop
aam
orl
push
sbb
sbb
pop
jae
sbb
movzbl
mov
add
fcompl
int
pop
cld
xor
jno
aaa
test
orl
and
sbb
sub
lahf
xchg
cs
sti
gs
loope
cmp
in
out
mov
push
pop
pop
push
fisttpl
xor
sub
imul
push
pusha
cld
aad
adc
mov
aaa
shlb
pusha
mov
addr16
out
out
sbb
adc
push
in
test
decl
aad
xlat
js
mov
lret
icebp
push
adc
sbb
xchg
inc
test
lods
add
andl
loop
ret
fxch
pop
ja
xchg
daa
testb
insl
lahf
push
js,pt
cmc
test
lahf
dec
fdivrs
popl
in
pop
pop
mov
xchg
shr
cmp
or
xchg
and
insl
dec
fistl
xchg
clc
inc
enter
jno
sub
iret
push
test
mov
stc
ret
sub
cmp
xchg
addr16
pop
push
cmc
repz
mov
mov
xlat
ret
jbe
loop
push
adc
dec
aam
or
pusha
lret
ret
into
jg
aas
mov
or
cwtl
sbb
add
pushf
cmp
loop
xorl
in
in
mov
inc
popf
pop
sbb
lcall
adc
ljmp
mov
std
ficoml
pop
xchg
imul
inc
ja
jns
cs
int3
xchg
out
outsb
or
insl
stos
push
ja
in
pop
xlat
mov
dec
pop
xchg
pop
movd
mov
bound
fcomps
sbb
mov
rol
sahf
dec
dec
jg
mov
test
lods
inc
pop
mov
jl
lcall
cmc
pop
test
sbb
xchg
mov
mov
and
cmp
cmp
scas
cmp
push
std
xchg
jb
mov
ljmp
popf
loop
sbb
push
mov
push
cmpsl
cmc
and
adc
pushf
es
mov
loope
js
pop
push
xor
dec
jns
loop
leave
daa
js
sahf
jge
or
lods
or
add
frstor
ljmp
rcll
andb
or
sbb
mov
sub
mov
rcrl
inc
je
fidivs
mov
push
sub
cmp
sbb
fisubrs
dec
mov
sti
pop
flds
push
mov
dec
out
pop
shll
rolb
out
sub
js
das
fs
xor
pop
mov
and
xchg
loope
adc
mov
mov
mov
jl
and
sub
cmp
daa
lods
data16
mov
das
xorl
adc
jo
stc
add
loopne
in
and
jg
and
jl
add
inc
mov
mov
push
shr
xor
add
test
adc
aas
sar
pop
sbb
push
bound
pop
sbb
fs
outsl
lss
ss
mov
popf
sub
rolb
push
shr
ljmp
es
shlb
adc
jecxz
clc
push
shlb
mov
cmpsl
sbb
stc
adc
mov
dec
jno
push
xchg
lds
cmc
mov
fwait
pop
jo
jae
data16
lahf
decl
jns
test
jo
pop
das
test
cmpsb
aaa
lret
cltd
adc
je
in
cmp
icebp
push
pop
testl
cmc
xchg
push
rclw
es
lods
xchg
dec
pop
xchg
ja
icebp
pop
call
out
test
pop
mov
jmp
jno
lods
ljmp
adc
ss
mov
mov
inc
xor
xor
hlt
movsl
or
adc
xchg
mov
mov
outsl
mov
xor
cmp
cmp
lods
fisttps
jne
jle
lds
mov
add
pop
jns
fsubrs
lahf
xor
mov
sub
scas
xchg
pop
sbb
adc
push
out
jmp
jmp
xor
and
and
mov
sbb
jp
mov
jbe
or
pop
mov
inc
iret
shlb
and
push
mov
mov
cmp
adc
dec
and
push
cmp
int
adc
es
adc
adc
stos
repnz
hlt
sbb
rorl
insb
aad
jns
divb
ficomps
mov
scas
out
add
shr
imul
push
mov
sub
or
jle
shl
lret
cmc
sub
mov
lock
aam
cmp
add
jle
mov
jp
mov
js
in
mov
mov
sub
das
fildll
fnstenv
and
push
mov
jmp
stos
test
sarl
push
push
add
scas
mov
or
push
and
lret
sti
inc
jns
dec
jnp
pop
pop
fimull
leave
lret
add
sub
cmp
leave
stos
xchg
push
xor
push
cmp
fcoml
ljmp
dec
inc
scas
dec
pop
mov
or
iret
popf
hlt
les
jl
mov
sbb
jo
cmp
fadds
jo
dec
mov
fsubr
jg
inc
jb,pn
sbb
popf
add
adc
sub
and
jb
test
arpl
bound
pop
out
ljmp
jp
loop
fcmovbe
jne
sahf
xor
and
xor
in
pop
sahf
lods
pop
push
cmp
inc
mov
or
jae
mov
idivl
scas
mov
int
dec
pop
mov
sti
je
jge
mov
or
ds
lret
cmpl
jbe
cltd
mov
test
fsts
sub
shlb
jae
and
shrb
aas
andb
call
jb
repz
inc
pop
mov
pop
pop
adc
repnz
xor
jnp
call
outsl
ret
in
add
bnd
iret
or
das
outsl
rolb
fimuls
jae
inc
loopne
leave
xchg
into
out
inc
stos
insl
and
aam
push
mov
cmc
scas
clc
flds
sti
out
jg
push
insl
jns
out
fldt
mov
loop
jo
popf
cmp
mov
and
clc
inc
js
lcall
adc
stos
sbb
outsl
sbb
xchg
fldenv
cvtps2pd
sub
or
mov
xchg
sbb
push
jmp
xor
dec
mov
cmp
fwait
mov
jne
dec
push
enter
push
xchg
xchg
in
in
inc
lret
cmc
test
ret
out
mov
fldcw
inc
test
repz
push
fimull
xor
pushf
fidivs
adc
fisubrs
mov
rcll
xchg
jecxz
mov
pop
jmp
xor
stos
or
lahf
lret
pushf
nop
mov
test
incb
out
fmul
jl
pop
loop
or
or
jmp
add
mov
not
inc
dec
adc
cmpsl
sbbl
mov
clc
out
mov
fst
outsb
xchg
adc
xor
xor
pusha
pop
test
out
inc
lods
push
pusha
sti
imul
pop
shll
mov
ret
aaa
jle
int3
out
ret
sbb
push
push
cmp
leave
push
sbb
lcall
adc
jge
add
in
loopw
repnz
mov
into
dec
mov
push
pop
and
inc
or
lods
je
xchg
loope
push
adc
xchg
popf
fiadds
xchg
shrl
outsl
lds
xorb
fisubrl
out
adc
jae
insl
and
pop
mov
hlt
push
cs
pop
daa
rcrl
enter
sahf
fwait
insl
int
push
js
pusha
and
lock
adc
adc
adc
xchg
addr16
push
loope
sbb
addr16
or
aad
or
pop
fsubrl
popf
sbb
insl
adc
mov
dec
loopne
test
lds
dec
sbb
mov
xor
out
adc
test
xor
ficomps
pop
ss
push
outsl
mov
push
lock
jo
lock
fbstp
xor
add
jne
xchg
out
std
push
sub
mov
or
clc
test
and
mov
jns
cltd
data16
inc
inc
test
loope
stc
add
mov
scas
jb
sbb
mov
fadd
cli
cmp
xchg
jno
push
push
scas
les
lret
jl
loopne
ret
jmp
cmc
leave
pop
push
mov
xor
pop
sub
mov
data16
push
jle
stos
sub
ret
mov
pop
inc
inc
push
mov
test
jb
cmp
xor
pop
mov
xor
xchg
xor
sbb
nop
popl
rorb
in
icebp
test
jne
pop
and
cltd
incb
mov
cmpsb
sti
cmp
mov
hlt
ljmp
add
dec
sub
xor
out
mov
cmc
aas
sub
mov
test
pop
sbb
bound
sbb
push
lock
xchg
ret
jno
jp
lahf
mov
and
sahf
fidivl
push
shrb
stc
or
cld
cmpsb
push
cli
jg
xor
outsl
mov
jb
dec
cs
mov
andl
mov
rol
imul
or
add
cmpsb
dec
fsts
sub
mov
xchg
mov
sub
in
in
jecxz
fistps
or
std
inc
adc
nop
daa
mov
popa
and
lock
arpl
fisttps
xor
pmaxsw
icebp
pop
jmp
xlat
cmc
inc
or
pop
dec
xchg
jo
pop
por
int
je
in
or
test
cmpl
pop
fldenv
test
outsb
push
push
jbe
shr
mov
adc
xchg
dec
pop
xor
mov
xor
dec
xchg
shrb
or
pop
mov
sbb
mov
sahf
arpl
fldt
popf
mov
shl
push
jne
add
arpl
xchg
jp
jp
xor
push
xlat
test
adc
mov
rclb
jo
jb
pusha
lock
dec
or
xlat
std
shll
mov
inc
push
fiaddl
and
nop
inc
dec
xchg
mov
and
repnz
iret
sbb
sub
scas
dec
xchg
push
sbb
xor
xor
xchg
mov
mov
pop
adc
scas
fistps
testl
ss
call
aad
cmc
addb
flds
gs
sbb
inc
push
cwtl
cld
and
enter
or
es
repnz
jmp
xlat
xchg
pushf
out
cli
imul
test
das
sbb
mov
pushf
sub
jnp
pop
mov
icebp
ja
or
xor
add
inc
mov
nop
pop
dec
xchg
and
jae
cli
xlat
sbb
xchg
in
loopne
popf
xchg
mov
and
sub
in
sub
das
xchg
jle
pop
mov
dec
lahf
imul
cltd
sub
and
xchg
mov
cmpsl
lcall
int
movsl
je
inc
fwait
or
imul
dec
mov
add
jno
inc
dec
enter
sbb
sarb
mov
xchg
bound
xchg
and
data16
mov
or
dec
lods
jge
sbb
mov
add
pop
out
pusha
push
out
or
lock
mov
xchg
cmp
push
jno
repnz
and
cmp
xor
pop
mov
int3
js
xchg
push
pop
mov
fbld
sub
sbb
and
push
in
adc
cmpsb
outsb
xchg
jne
movsl
js
lock
adc
lret
cmp
je
ficompl
sub
or
ret
or
xchg
bound
inc
and
xor
inc
mov
lahf
mov
repnz
fwait
adc
fidivrs
lret
fwait
jmp
or
bound
add
mov
fistps
mov
mov
mov
jnp
movsb
dec
pushf
test
mov
sarb
mov
sub
loop
movsb
cmpb
loope
test
shrb
jne
decb
inc
jge
push
subl
fistps
adc
cs
bound
mov
adc
mov
in
add
mov
ret
aad
pop
fdivrl
ret
into
adc
jle
fsubrs
jbe
add
repnz
pop
or
adc
adc
icebp
in
pop
aad
stc
jp
mov
adc
sbb
pop
xorb
mov
ja
bound
notb
pop
jns
bound
inc
mov
sti
xchg
xchg
adc
inc
add
jl
lcall
movb
mov
pop
test
movsb
sbb
add
fs
repnz
pop
mov
jb
cmp
std
flds
jmp
fstl
push
enter
sub
loop
insb
fs
and
pop
add
daa
into
pop
xchg
mov
call
in
ljmp
movsl
cld
mov
sti
int
repnz
in
xchg
fwait
shll
cli
xchg
and
jl
bound
fwait
aam
sti
fcmovbe
ljmp
inc
push
pop
mov
mov
jae
dec
jp
fsubrl
out
mov
sub
sub
pop
pop
jno
xchg
jo
cmc
cltd
arpl
lods
mov
add
xchg
push
test
dec
jecxz
aad
mov
mov
xchg
leave
sbb
xchg
cwtl
std
or
mov
stos
mov
ja
out
add
jmp
imul
jno
xor
aad
dec
mov
js
cmp
or
dec
ljmp
pop
cmp
pop
inc
fstps
sub
lods
push
jmp
std
shlb
push
mov
imul
sub
fidivrs
adc
mov
stc
scas
fs
and
dec
xlat
mov
inc
sbb
scas
or
jp
fimull
imul
aaa
mov
rcl
jbe
add
scas
ret
sahf
mov
pop
movsb
cvtps2pd
mov
xor
push
pusha
xchg
lock
push
inc
xchg
js
sbb
mov
pop
lret
mov
jle
not
sbb
sbb
jb
dec
imul
nop
sbb
sub
pop
add
add
sub
sbb
pushf
pop
xchg
mov
popa
rcr
dec
insl
fldenv
jno
gs
or
mov
mov
cli
dec
dec
sub
pushw
mov
in
jmp
hlt
mov
popf
mov
lret
les
fisttpll
mov
clc
mov
andb
imul
out
jb
sahf
rorb
xor
and
jle
sub
lds
xchg
xor
int3
cmc
and
sub
cmp
jo
iret
xchg
adc
iret
aaa
mov
push
jmp
lds
jo
push
les
and
jo
out
aam
xchg
cmp
add
out
hlt
mov
xor
out
pop
push
shr
mov
mov
test
adc
mov
ds
insb
xchg
es
xchg
daa
in
pop
scas
inc
pop
sbb
jbe
push
mov
loop
jle
iret
adc
mov
push
arpl
jbe
sti
gs
xchg
cs
out
stos
cmc
cmp
jo
imulb
jne
push
mov
xchg
mov
std
clts
mov
xor
xchg
mov
fs
mov
imulb
test
push
aam
xor
sub
xchg
push
fstpl
pop
xchg
loop
or
subb
lods
jnp
popf
jle
mulb
dec
jmp
push
mov
js
inc
xor
and
loopne
adc
into
sub
ja
les
add
ret
aaa
call
pop
push
mov
pop
or
or
jb
ret
sbb
lds
xchg
adcl
adc
jl
mov
leave
jno
das
cmp
pop
ret
pusha
shll
push
add
jl
push
inc
mov
and
rorb
add
pop
outsb
inc
shrb
fwait
dec
sahf
cmpsb
pop
cmc
fldcw
push
sbb
mov
or
stos
xor
out
ret
testl
ss
andl
pop
out
clc
pop
cmp
bound
xchg
and
cmpl
dec
cmpsb
test
or
inc
add
mov
xor
xchg
gs
test
or
sub
mov
insb
popa
sbb
test
mov
xchg
xor
xlat
jecxz
sbb
xor
adc
daa
sub
mov
imul
out
inc
data16
je
daa
inc
clc
inc
mov
fs
mov
xchg
mov
xor
imul
xor
lods
ljmp
and
cmp
jecxz
xor
adc
mov
sub
das
lahf
rclb
in
and
pop
inc
ficoms
pop
cmp
cmc
or
outsl
mov
cltd
enter
mov
pop
adc
sbb
loop
sub
dec
rcll
pop
ljmp
pop
test
dec
cmp
mov
lahf
mov
mov
aas
ds
es
cmp
inc
mov
jnp
and
inc
ret
in
jnp
sbb
or
out
dec
and
pop
dec
fstps
movsl
testb
xchg
rcrl
fldcw
ficomps
dec
subb
mov
dec
pop
adc
push
sbb
cmc
fimull
shrl
push
xlat
mov
fsubrs
sbb
es
xchg
cmpsl
mov
jae
or
cmp
gs
shl
bound
ljmp
movsl
iret
out
outsl
insb
andl
in
stc
jne
mov
pop
dec
xchg
jg
mov
in
out
mov
jbe
repz
cmpl
add
ficompl
pop
orl
ret
lahf
daa
enter
in
sbb
mov
dec
lods
popf
adc
mov
sub
cmp
out
sti
xor
dec
xor
xor
lods
fwait
or
mov
jge
fiaddl
fwait
sahf
outsl
hlt
outsb
pop
sbb
jecxz
ret
es
ljmp
je
push
cmp
repz
xchg
sti
xor
pop
xchg
and
xor
xlat
icebp
dec
mov
mov
mov
pop
sbb
jg
rclb
cmp
icebp
mov
sbb
movnti
js
xor
subl
ljmp
mov
mov
mov
mov
pushf
adc
add
les
fcoms
fcmovnbe
je
mov
std
lods
sub
loope
lret
and
mov
lock
clc
xchg
push
cmp
lret
lods
repnz
push
dec
xor
adc
ja
movsb
ret
lret
je
lods
jp
icebp
clc
sbb
pop
ds
sbb
loopne
fwait
jl
shrb
cmpsl
movsb
xor
mov
jbe
or
outsb
jbe
jecxz
js
mov
push
mov
mov
and
cmpsl
scas
mov
dec
out
xlat
js
das
push
adc
mov
push
and
add
out
jle
jecxz
adc
loopne
test
jne
dec
sub
inc
add
outsl
out
repz
adc
mov
testl
xlat
pop
imul
add
mov
mov
lds
add
sbb
fsubrl
ds
fwait
std
in
sbb
loop
xchg
out
int
push
movsl
xorl
push
imul
fcmovnb
addr16
movsb
push
lods
mov
cwtl
mov
int
add
pop
push
lds
pop
jecxz
das
and
adc
or
xchg
ds
pusha
jne
loop
sbb
pop
test
xchg
cmp
sub
mov
dec
cmp
xor
jp
mov
ror
dec
cmp
cltd
lods
popf
fcomi
jo
iret
or
data16
mov
adc
loope
loop
dec
mov
shlb
mov
xchg
mov
mov
mov
leave
outsb
and
out
inc
cmp
ret
adc
dec
sub
adc
inc
in
jnp
popa
iret
push
add
movsb
inc
dec
xor
jge
enter
call
lahf
sbb
jne
mov
and
stos
xchg
push
mov
scas
test
add
add
out
data16
mov
or
cmc
dec
mov
cmp
int3
lahf
add
ret
or
imul
mov
shll
sbb
adc
outsl
cwtl
xor
push
jle
movsl
cmp
inc
insl
js
or
jo
push
inc
stos
or
mov
cmp
dec
pop
mov
fstps
sub
sbb
nop
or
jmp
gs
faddl
hlt
mov
dec
sub
mov
pop
les
imul
popf
mov
xchg
xor
mov
pop
mov
and
jl
and
xchg
mov
imul
loope
mov
fsub
in
add
out
repz
subb
jmp
pop
pop
addl
xor
mov
pop
popa
dec
lcall
push
nop
inc
jl
jg
dec
bound
sar
fisubrl
adc
cmc
adc
insl
jnp
out
push
jl
inc
aam
outsl
daa
pop
aad
cmpsl
sar
cmp
and
xchg
adc
lea
mov
test
push
orb
sbb
xchg
out
mov
frstor
pop
pop
loop
test
adc
sbb
jno
out
dec
mov
je
jbe
mov
jle
clc
xor
loopne
xor
inc
xlat
clc
xchg
aad
insb
sub
in
xor
cli
inc
mov
mov
mov
ret
filds
fisubl
fcomip
roll
mov
test
pusha
jno
and
dec
sub
dec
push
jne
inc
jmp
ds
sbb
mov
fwait
cmp
inc
fcmovbe
cmp
imul
andl
push
cmpl
cwtl
mov
test
es
lahf
push
xor
ds
rcl
setns
movb
inc
xchg
cmp
pushf
arpl
adc
sub
gs
mov
fs
test
test
pop
loop
movsb
xchg
cmpsl
fadds
jmp
xchg
sbb
pop
xchg
pop
inc
mov
xchg
out
mov
out
sbb
xor
in
dec
in
fwait
into
cltd
jne
dec
mov
xchg
scas
xchg
cli
jl
je
push
jae
call
sub
xor
ficompl
ret
xchg
xchg
or
or
jb
cmp
sti
jno
mov
xchg
nop
sbb
jge
popa
gs
call
inc
shrb
out
shlb
add
cld
daa
inc
in
pop
jp
xor
in
and
cmpsb
mov
repz
push
push
call
fdivl
test
push
inc
mov
xchg
out
push
xchg
and
or
cwtl
push
aas
jmp
mov
ss
push
aas
jl
push
test
arpl
add
nop
lea
push
imul
loop
hlt
das
cmp
test
lock
jmp
arpl
dec
fisubl
mov
out
xchg
out
cmp
xchg
inc
or
pop
pop
cmpsl
dec
dec
inc
jno
in
dec
lock
cmp
jp
cmc
and
sub
xchg
add
mov
inc
mov
int3
test
int
int
cmpsb
pop
push
jo
push
je
std
out
movsl
add
insl
mov
mov
mov
inc
sub
add
rcrl
jb
mov
cmpsb
cmp
shlb
mov
or
sbb
in
stos
jno
test
jnp
rclb
test
mov
sbb
add
inc
adc
add
xchg
in
or
inc
js
sub
dec
add
jo
fwait
bound
cmc
inc
mov
filds
sbb
daa
xor
aam
stos
and
movsb
imul
ljmp
je
shrl
mov
pop
or
dec
xchg
inc
and
push
fmuls
xchg
xor
pop
sbb
add
pop
push
xor
nop
mov
out
js
ror
scas
ds
pop
mov
in
aaa
or
daa
xchg
stc
mov
push
jns
pop
fnsave
rep
test
mov
xor
mov
mov
rdtsc
ja
bound
pop
inc
jmp
aam
cltd
ds
xchg
insl
idivl
fnstcw
adc
mov
push
fcom
mov
and
hlt
xor
out
mov
sti
stc
scas
xor
inc
xchg
push
cltd
xchg
xchg
lods
sbb
rclb
dec
cwtl
inc
adc
jae
es
ficoms
jne
push
test
or
rcl
push
stc
mov
flds
sti
ss
xchg
gs
mov
jle
xchg
jnp
lea
mov
cwtl
clc
push
sub
fs
cli
xchg
adc
mov
mull
outsl
ror
fs
mov
xlat
stc
les
cmpb
pop
jmp
and
pop
repnz
adc
imul
les
xor
xchg
and
mov
or
xchg
pop
je
aaa
push
ret
adc
adc
and
shr
jmp
add
ja
scas
iret
insb
call
into
inc
mov
mov
xchg
jecxz
sub
mov
push
inc
shlb
aas
mov
mov
mov
scas
mov
sub
pop
iret
jo
insb
inc
push
pop
imul
faddl
test
mov
inc
and
dec
pop
or
ds
stos
stc
and
push
repnz
sbb
mov
in
cmpsl
imul
test
xor
cld
repz
cmpl
add
adc
or
icebp
ja
fiadds
jmp
inc
ja
mov
lcall
outsb
xchg
and
out
lods
cli
or
sbb
jno
inc
jbe
das
and
jg
lahf
inc
ss
cmp
sbb
jmp
xorl
icebp
arpl
fmul
in
andb
inc
fisubrl
dec
mov
xchg
push
sub
mov
mov
mov
sbb
test
repnz
dec
adc
out
out
lret
push
adc
aam
inc
push
loopne
sub
dec
push
mov
sahf
lock
push
fistpll
sub
fbstp
xor
cli
cmp
sub
int
add
pop
cmpsl
data16
ss
cs
or
aaa
mov
jmp
fiadds
js
dec
sbb
sub
jg
aaa
test
popa
cmc
fdivrs
mov
repz
add
dec
mov
and
scas
mov
cmp
loopne
pop
jae
jbe
repnz
rcrl
fucomi
pushf
jmp
jae
dec
inc
push
fs
mov
jecxz
test
cli
jnp
pusha
push
fwait
adc
adc
notb
xchg
pop
popf
or
xchg
adc
jo
out
popf
mull
xor
sbb
jecxz
out
movsb
aaa
xor
ljmp
dec
inc
insl
cwtl
cmp
push
movsb
addr16
sbb
movsl
mov
idiv
xchg
mov
ficoml
mov
add
scas
and
sub
andb
jae
jae
stos
push
push
inc
pop
es
sti
add
jmp
pop
stc
xor
fs
push
popa
pop
add
or
sub
mov
jmp
dec
jb
mov
sti
fs
xchg
pop
test
and
push
iret
xor
xchg
repz
insl
push
pop
jecxz
mov
stos
xorl
fisubs
and
cmpsl
push
push
stos
repz
scas
mov
dec
mov
add
je
stc
add
hlt
cmp
jo
fwait
orl
inc
test
jae
add
xor
icebp
mov
push
jbe
lahf
movsl
lods
stc
jno
mov
mov
mov
in
sbb
xorl
mov
adc
mov
push
xchg
push
cmp
clc
fucomi
lods
stc
out
cmp
sti
mov
subl
dec
shlb
daa
pop
add
call
cmp
lret
es
jecxz
lods
pop
out
dec
jge
and
inc
cwtl
mov
mov
cmp
or
push
fadds
mov
adc
in
je
imul
and
stos
mov
cmp
fstl
pop
dec
sahf
test
mov
pop
cmp
mov
xor
mov
dec
imul
adc
jge
movsl
lock
gs
in
mov
jmp
pop
jecxz
dec
adc
and
bsf
pusha
aas
sti
lret
std
cltd
and
jmp
lods
test
ds
dec
gs
add
cmp
sub
jns
rolb
push
cmpsb
andb
bound
inc
add
iret
cli
popw
mov
mov
adc
scas
xchg
aam
dec
pusha
out
jp
out
mov
fisttpll
xchg
out
lds
or
sub
call
add
lea
stos
mov
std
fnclex
pop
outsb
adc
pop
pop
das
and
cmpsb
jge
jmp
jl
cmpsl
out
lcall
mov
cmpsl
ja
out
push
in
mov
jge
ret
xchg
cmpsl
xor
outsl
mov
pop
dec
pop
popa
das
and
pop
jle
cmp
imul
pop
cmp
hlt
cli
mov
mov
mov
xor
push
push
out
fdivs
mov
inc
mov
mov
sarl
inc
pushf
add
shrl
mov
jge
inc
in
push
mov
loop
daa
sub
mov
push
out
xchg
arpl
mov
jg
cmp
sub
filds
ljmp
push
sti
or
movsl
sub
test
arpl
xlat
inc
sti
lock
fwait
adc
test
loope
aaa
movsl
sub
push
jmp
push
or
movb
shlb
xor
out
aaa
jl
adc
pop
push
inc
cmp
pop
dec
adc
stos
outsl
aam
adcl
out
sbb
dec
das
pop
pop
xor
mov
push
divl
cmp
and
xchg
push
xor
xor
fnstenv
add
inc
fsts
push
fstpt
sub
mov
xchg
or
sub
out
and
cmp
adc
aas
rcrl
subb
mov
aaa
jp
arpl
fdivrs
fs
sub
add
ds
popa
aad
imul
inc
daa
cmp
insl
pop
out
mov
jp
outsb
stos
cmp
and
adc
scas
or
in
in
leave
pusha
arpl
std
or
cmp
test
cld
call
adc
pop
push
roll
sbb
mov
loope
loope
test
fcmovnbe
jmp
xchg
jae
dec
inc
jb
sub
sub
inc
cmp
loop
pop
mov
sub
je
imul
loopne
fimull
xor
mov
push
ljmp
add
popf
fimull
jne
repnz
lcall
aad
jp
icebp
cmc
pop
or
cmp
shrb
and
mov
scas
popf
mov
loope
pusha
xor
sahf
mov
shrl
or
cmpsl
aam
mov
jne
mov
push
mov
xor
shrl
xchg
int
cs
dec
aas
jl
xor
add
test
xchg
and
sbb
xchg
popf
cmp
sub
inc
bnd
pushf
inc
shrl
xor
inc
xor
mov
inc
dec
out
enter
jle
sbb
jb
aaa
pop
jmp
xchg
dec
in
test
jb
inc
scas
movsl
xchg
ss
imul
adc
divb
movsb
aas
ja
scas
pop
dec
pop
stos
mov
test
xor
or
mov
mov
iret
cmp
fisubs
xor
mov
mov
xor
ficompl
rcr
repz
mov
enter
jge
sbb
lds
sarb
mov
xor
arpl
sbb
xchg
pop
popa
fildll
inc
fldl
mov
xor
pusha
push
jle
out
cmp
dec
xor
jae
pop
dec
fimull
lret
fists
cmp
cmp
dec
jae
mov
ja
and
sub
lea
inc
xor
jge
xchg
bound
pop
pop
pop
sti
or
adc
icebp
cmpsl
cmpsb
cmp
and
stos
or
lds
ljmp
pop
fwait
sub
cmp
cmp
push
js
sbb
inc
sbb
bound
dec
cmpsl
data16
mov
stc
and
or
pop
mov
shl
mov
xchg
rolb
ss
cltd
adc
fucom
cmp
imul
add
xchg
or
divb
imul
mov
sub
or
dec
sub
std
aam
fidivrl
mov
sbb
sub
mov
mov
pushf
cmp
jl
js
aam
loop
adc
push
insb
or
ja
xor
adc
mov
mov
push
push
dec
xor
sti
test
jl
ss
aaa
repz
mov
push
cltd
xchg
jmp
gs
repnz
lret
hlt
xor
or
inc
and
mov
mov
mov
xor
or
fldt
cld
scas
lahf
out
add
jle
imulb
rol
xor
mov
sub
jno
inc
stc
and
cmp
out
hlt
add
xchg
data16
and
xor
xor
mov
xor
ficomps
add
jnp
add
add
xor
je
mov
inc
stos
sti
repnz
push
ds
lret
test
push
mov
flds
sbb
insl
icebp
xchg
fidivl
in
jbe
push
inc
stos
ret
inc
lahf
mov
xchg
lcall
popa
inc
xchg
or
pop
les
mov
mov
cmpl
mov
ss
push
fldt
popf
or
ret
mov
imul
in
fmul
add
sbb
push
in
mov
inc
shrb
enter
adc
enter
xchg
mov
out
xchg
popa
ss
pop
fstps
js
xor
fsubp
mov
adc
addr16
outsb
dec
mov
fdivl
xor
cmp
push
adcl
repnz
jmp
push
inc
jns
push
scas
push
xor
or
cmpsl
sbb
pop
fimull
inc
hlt
ljmp
pop
cmp
out
mov
int3
adc
std
rorb
mov
shl
movsb
mov
pop
stc
test
loopne
dec
testb
arpl
bound
dec
inc
bound
sbb
push
lods
xchg
xchg
lock
sbb
leave
jb
popf
and
dec
mov
stos
adc
popa
data16
mov
in
aaa
int
movsl
adc
adc
rcrb
mov
mov
pop
push
inc
std
insb
xchg
or
or
imul
lock
jbe
out
repnz
mov
fnstsw
pushf
sbb
push
lods
mov
jae
inc
xor
mov
jb
lock
and
rol
adc
push
sub
xor
and
cld
mov
shl
test
jnp
int
fs
mov
pusha
pop
xor
mov
pop
mov
push
iret
aaa
push
sub
inc
mov
pop
dec
pop
movsl
mov
adc
popf
je
lods
js
std
dec
popf
dec
xor
inc
aaa
xor
sub
mov
mov
xchg
ret
nop
movsb
outsl
test
cs
js
in
xchg
imul
sub
jp
out
rol
or
popf
adc
jbe
xor
gs
push
mov
pushf
enter
inc
aad
and
fmul
mov
and
lcall
in
stos
mov
sbb
es
mov
ljmp
cmp
sbb
dec
aam
mov
shll
mov
add
push
mov
xchg
dec
outsb
loop
xchg
xchg
cld
mov
stos
dec
test
adc
mov
and
pop
jne
ss
in
in
sbb
rcr
filds
loop
sbb
bound
add
push
xlat
mov
or
xchg
inc
fidivrs
je
cltd
scas
sbb
sar
std
lds
xor
cli
xchg
lret
sub
lock
push
movsl
test
mov
mov
add
mov
dec
je
jle
sbb
dec
jae
adc
stos
mov
js
test
or
cmp
jns
mov
ficompl
xchg
mov
dec
pop
adc
cmp
and
out
cld
mov
in
cmpsl
xlat
xor
push
aad
sbb
jne
push
cmc
out
or
jbe
jl
inc
andw
ja
ret
sub
out
sub
pop
xor
shl
lods
inc
lods
pop
xor
pop
mov
lea
std
addr16
fildll
cmp
fcmovnu
leave
mov
lcall
push
cwtl
lcall
inc
adc
mov
pop
xchg
shr
inc
jp
pushf
aas
add
sahf
sub
jbe
sbb
out
and
ficomps
xchg
cmp
inc
in
and
cmp
cmpsb
push
jae
sti
scas
stos
mov
loope
fcoml
ret
mov
xchg
cli
fnsave
dec
cwtl
inc
xor
push
cmp
xchg
adc
test
loope
mov
mov
inc
mov
jp
shrl
cmp
ret
fiaddl
sbb
add
jl
fisubl
test
xorb
mov
movsl
mov
pop
std
fwait
sub
jecxz
jae
dec
inc
xlat
fsubrl
rorl
jg
mov
cmpsb
xor
mov
loope
popf
sub
outsb
test
dec
xchg
fimuls
pop
mov
xchg
mov
test
std
inc
pusha
cmp
ret
aas
popf
cltd
pop
cmp
xchg
leave
lcall
pop
push
rcll
push
in
cmovo
je
pop
mov
ljmp
in
dec
pop
push
scas
adc
dec
inc
jp
pusha
lret
push
add
push
jbe
xchg
mov
popa
xor
lret
imull
dec
fcoml
arpl
xchg
lret
out
dec
fwait
xchg
inc
adc
mov
push
pop
enter
mov
cmp
lds
cs
pop
jae
inc
cmpsl
cltd
add
push
lret
addl
test
sbb
and
or
jo
ljmp
aas
mov
adc
cmp
clc
mov
xchg
enter
push
jnp
mov
inc
and
pop
lods
xorl
inc
mov
adc
xor
pop
imul
loope
sbb
jno
jo
lret
les
aaa
test
mov
mov
call
push
lcall
push
cmp
jge
add
and
out
xchg
add
mov
inc
out
scas
sbb
loop
jno
sbb
ss
out
mov
mov
loope
cwtl
mov
loop
pop
mov
sbb
lods
sub
outsl
and
shll
adc
fisttpl
nop
clc
call
cli
pop
jns
das
loope
imul
loop
push
push
and
sbb
mov
icebp
mov
inc
pop
inc
sbb
xor
xchg
shl
pop
lea
mov
jl
xchg
adc
mov
and
repz
jle
loop
sbb
aaa
adc
pop
cmp
adc
stc
cli
shl
xchg
adc
movsb
pop
pushf
inc
lret
daa
clc
add
jo
push
sti
pop
mov
push
std
gs
or
jbe
daa
push
or
fucomip
mov
sub
push
inc
push
xchg
mov
imul
push
add
and
push
mov
mov
xor
inc
data16
cmc
and
in
dec
or
dec
cltd
sti
inc
mov
mov
bound
mov
xchg
push
mov
adc
cmp
mov
insb
or
push
in
outsl
push
xor
stc
pop
or
pop
xchg
inc
es
or
sbb
sbb
and
out
mov
mov
adc
rolb
push
in
test
imul
jns
sarl
test
loopne
pop
mov
and
mov
icebp
push
inc
dec
nop
inc
scas
ds
ljmp
int
xor
fidivrl
jae
loop
sahf
add
adc
fisubrs
xor
adc
xor
jg
and
addr16
in
scas
rcrb
fst
cmpsb
int3
xchg
outsl
adc
shll
ret
or
xor
imul
imul
mov
mov
sar
adc
frstor
jmp
test
add
lret
stos
pop
or
sbb
cmp
pop
lock
lret
inc
mov
sbb
xchg
xchg
jbe
add
and
or
mov
clc
cmp
xlat
xor
cltd
popf
fdivrs
iret
sbb
stc
pop
insb
xor
lds
sbb
loope
filds
das
jl
pusha
cmc
adc
loope
jge
clc
jmp
icebp
pop
popf
pop
xor
ret
mov
lock
jle
or
popa
insl
repz
pushf
jp
pop
enter
sub
dec
movsl
xchg
mov
jns
xor
rcrl
adc
popa
adc
mov
aas
sub
sbb
jbe
cli
mov
mov
fcmovnu
fwait
pop
or
jno
in
std
sub
sbb
cmpsl
lock
mov
and
movsb
cmpsb
test
xor
popa
push
dec
cmp
aaa
out
xor
xor
and
call
push
jl
and
cltd
mov
insl
mov
or
mov
lret
imul
ja
dec
icebp
jmp
xchg
data16
mov
pop
mov
das
ss
adcl
mov
jno
push
add
sub
xor
cmpsl
dec
icebp
lret
popf
mov
popf
xchg
inc
js
pop
test
rcrl
fcoms
lcall
mov
js
xor
xchg
loop
mov
mov
sbb
orb
mov
xlat
ret
xlat
dec
cmp
mov
inc
mov
push
stos
jle
mov
lret
push
into
pusha
clflush
out
mov
cmp
clc
adc
adc
int3
lds
jnp
rorl
sub
enter
out
fidivl
test
daa
mov
into
ss
xchg
mov
push
mov
fstps
cmp
sub
lods
jbe
in
lcall
dec
push
adc
sbb
mov
ja
mov
or
sbb
sub
data16
loope
cmpsb
xchg
mov
fisttpl
sbb
stc
and
lock
cltd
lahf
stos
je
mov
fidivrs
or
jns
mov
or
mov
sbb
mov
adc
insb
test
add
divb
push
enter
mov
or
xchg
sub
inc
lea
pop
xor
push
dec
adc
and
fwait
loope
push
lods
xchg
xchg
sarb
nop
mov
adc
in
inc
sbbl
lahf
lret
jo
add
xchg
cmp
into
jmp
clc
or
or
xor
movsb
loop
shrl
adc
repnz
mov
dec
sbb
cwtl
cs
jge
icebp
add
lods
les
repz
mov
insb
in
inc
test
push
mov
mov
stos
addl
scas
rcll
and
icebp
xlat
test
add
mov
adcl
adcl
rcll
out
xchg
fildl
push
popf
sub
push
rcrl
mov
adcb
cmpsb
fucomip
lods
sub
sub
xchg
pop
push
sub
xor
push
aam
cwtl
xlat
adc
inc
repnz
iret
and
mov
xor
sti
pop
mov
sub
or
repz
shrb
in
push
fwait
pop
jbe
and
xor
data16
aas
pop
nop
fbld
mov
aas
push
push
sahf
xor
hlt
pusha
sbb
orl
xor
mov
cmp
sti
dec
pop
sti
sbb
ret
xchg
or
iret
test
or
movl
movsl
push
loop
jmp
push
sbb
arpl
rorb
or
clc
scas
xor
xor
fs
push
aas
pusha
mov
add
jmp
jp
inc
dec
dec
and
jg
adc
push
psubd
push
sub
jno
cltd
and
fisttps
add
add
ljmp
cwtl
negl
mov
dec
add
pop
sub
add
adcl
leave
jmp
sbb
jle
sub
fcoms
mov
xchg
push
ret
loop
into
adc
mov
lret
jge
rcrl
cmc
push
jne
stos
das
add
addr16
in
inc
sbb
adc
rcrb
stos
sbb
in
loopne
mov
fcmovb
in
outsl
and
dec
std
jbe
outsb
sarl
pushf
addr16
jp
je
xor
call
repz
pop
add
jge
or
int3
ret
test
in
outsb
sbb
out
mov
or
adc
arpl
nopl
fdivrl
fisubs
jp
out
incl
sub
push
pop
jecxz
dec
sbbb
push
cmp
sub
std
jmp
sbb
cmp
sub
dec
out
mov
xchg
sub
cmp
mov
sbb
sbb
pop
adc
dec
mov
push
js
movsb
dec
rcll
mov
dec
stc
scas
ss
xor
aad
adc
jno
add
aaa
jle
jge
cmp
lods
fwait
in
int3
popf
adc
je
inc
movsl
pop
aam
pop
jns
push
int
add
dec
rcrl
jo
iret
push
loop
cmp
jae
jmp
int
push
sarl
lods
add
cltd
jl
insl
mov
andb
add
dec
cld
jae
or
jp
mov
ss
adc
mov
ds
jl
mov
or
sbb
ja
mov
mov
and
jae
push
movsb
dec
mov
pop
cwtl
jmp
and
std
xchg
sarl
adc
push
sbb
mov
repz
sub
cmp
repz
adc
in
sbb
and
rcll
aaa
xlat
mov
pusha
in
movsb
jne
xchg
jp
sub
jnp
mov
lret
das
push
inc
push
sub
rorl
mov
mov
jmp
push
cmp
in
sti
call
jo
cmp
mov
mov
call
fidivs
sub
sbb
dec
dec
push
mov
sub
lahf
mov
sbb
push
xor
std
cmpsb
cltd
mov
or
xchg
xchg
dec
fisttpl
stos
rcrb
jns
test
and
and
orl
inc
and
adc
cs
lock
ljmp
xlat
ret
push
sub
cwtl
popf
inc
mov
push
dec
loopne
sub
repz
mov
sub
sub
mov
xor
int3
jnp
dec
loopne
inc
jbe
mov
arpl
mov
push
push
mov
xchg
or
jne
fadds
dec
or
test
je
cmp
aam
fcoml
arpl
jp
mov
mov
dec
cli
sbb
repnz
inc
rcr
or
scas
cli
jb
xlat
lods
out
pop
sbb
int
fsubrl
pusha
stos
inc
push
out
pop
fldenv
fdiv
and
mov
mov
push
cwtl
sar
js
inc
stos
or
je
lds
push
adc
pop
pop
xor
sbb
push
push
dec
lret
push
ljmp
push
cs
pop
int3
sub
ljmp
ret
mov
ss
std
sarl
pop
adc
pop
jnp
movsl
mov
dec
int3
stos
mov
sbb
out
call
insl
dec
push
add
lret
xor
scas
push
mov
pop
add
cmp
xchg
push
aas
iret
nop
js
cld
cmp
std
mov
fdivrs
xor
fbstp
inc
xor
outsb
mov
aaa
and
mov
dec
push
shlb
cmp
fwait
addr16
cwtl
sub
xor
add
mov
test
mov
stc
xchg
add
call
into
push
xchg
push
xor
cmp
lahf
cmpsb
mov
dec
pop
cwtl
mov
xchg
lret
push
int
xor
std
daa
mov
aad
pop
pop
fstpt
lock
push
mov
sbb
or
ret
popf
mov
outsl
imul
fistpl
pop
out
cmp
add
cmp
sub
jae
mov
xchg
nop
sub
push
xor
and
add
sub
scas
sbb
cmp
out
addr16
pop
add
test
sbb
arpl
dec
push
popa
cli
es
mov
arpl
xchg
mov
daa
sarb
dec
std
scas
out
push
adc
mov
cwtl
loopne
aas
add
lret
pop
ds
cmp
xchg
scas
testb
sbb
jg
aas
push
enter
mov
mov
cmc
xchg
pop
cld
lcall
mov
lahf
shrl
pop
movsb
into
mov
out
jmp
add
fiaddl
js
mov
loopne
inc
pop
shrb
xchg
loopne
lahf
iret
jbe
inc
push
pop
lret
lock
out
addr16
and
xchg
sbb
inc
out
inc
xchg
call
into
or
shrb
dec
push
out
testl
jle
fdivs
add
popf
jle
data16
add
aad
or
mov
mov
push
inc
mov
lahf
xorb
arpl
in
pop
sub
inc
imul
cmp
jne
and
subl
cmp
sti
aam
xor
xorl
mov
inc
gs
push
nop
xor
or
xchg
jp
jno
pop
pop
xchg
fs
jle
cli
xchg
xchg
lcall
neg
mov
xor
push
lods
bound
mov
movsl
into
mov
stc
dec
sbb
cwtl
pusha
ficoml
lods
xorl
imul
cmp
fnstcw
pop
sub
xor
pop
cli
fildl
mov
mov
pushf
out
sbb
lret
fwait
pushf
mov
pop
test
cwtl
or
sbb
cmp
xchg
jb
lods
dec
pop
mov
cmp
cmp
mov
lcall
add
dec
bound
xor
jp
dec
and
lahf
inc
mov
pushf
sub
je
lcall
test
mov
bound
adc
push
insb
mov
insl
xor
jl
jl
and
fimuls
xor
imul
imul
dec
add
mov
mov
fmul
cmp
mov
xor
sbb
dec
je
dec
rorb
jo
scas
xchg
mov
dec
popa
inc
jecxz
cmp
push
aas
lret
std
stos
mov
arpl
sub
cmpsl
out
jnp
call
stc
sahf
imul
push
rcrb
sub
sub
cmpsl
mov
aas
jge
mov
repz
xor
dec
pop
ss
loope
mov
jb
ljmp
cwtl
jne
or
mov
cmp
fldl
push
mov
mov
push
fldl
jns
mov
andl
int3
mov
jecxz
sub
fiadds
int3
push
into
adc
ds
in
aaa
orl
out
es
das
mov
aaa
and
filds
cmp
iret
arpl
imul
xchg
sbb
and
lods
idiv
add
mov
xchg
and
jg
or
test
mov
dec
mov
adc
aad
mov
repnz
xchg
pop
xor
cmc
sbb
lret
push
insl
rcll
mov
rcll
lods
and
repz
push
dec
lahf
loopne
xor
mov
bound
xchg
adc
sahf
stos
mov
cltd
leave
ss
shlb
test
adc
push
cwtl
and
fnstenv
rorl
imul
cli
loop
pop
or
jbe
mov
push
inc
std
loop
dec
add
inc
bound
lcall
aaa
push
popa
int
ret
push
and
pop
sub
sub
cmp
loopne
sub
insl
dec
repnz
das
pop
push
cli
inc
dec
add
stos
push
ljmp
cmp
adc
stc
fldl2t
xchg
adc
mov
test
dec
shl
jg
pop
js
lret
mov
das
adc
cmpsb
sub
idivb
push
add
ret
sub
fstpt
push
pop
add
xchg
mov
xchg
pop
mov
ja
enter
pop
xchg
out
jne
sbb
in
jp
push
pushf
lcall
push
popa
add
push
leave
cwtl
idivb
mov
mov
cltd
xchg
repz
aaa
jbe
in
or
and
lea
test
rcl
xchg
jecxz
pop
in
jnp
in
adc
mov
fs
cmp
xor
cli
dec
ljmp
fwait
or
pop
mov
mov
in
stos
insb
push
mov
push
imul
lret
jnp
mov
mov
cmc
jb
daa
xor
hlt
hlt
ds
out
out
rcr
dec
insl
in
push
popf
setns
shll
jns
fiadds
push
xlat
or
inc
rorb
mov
mov
movsb
jns
mov
int
sbb
sbb
jecxz
lcall
in
repnz
loop
sub
js
cmp
test
cmp
adc
mov
xchg
lea
inc
jecxz
jle
rcrl
into
mov
adc
mov
bound
adc
mov
stos
lock
sbb
aad
push
adc
cmp
mov
lods
jno
cmpsb
pcmpeqb
cmp
mov
dec
into
xchg
push
insb
dec
insb
leave
pushf
sti
movups
cmpsl
pop
mov
dec
fistl
stc
cmp
inc
test
outsb
xchg
mov
cmp
fs
das
xchg
or
rol
xor
out
shr
mov
or
outsb
push
push
rol
xor
push
push
xor
inc
jmp
lret
or
insb
jnp
int
stos
in
push
daa
mov
push
fwait
inc
hlt
out
dec
xor
add
sbb
sub
push
mov
push
sbb
xchg
in
and
mov
cmc
ret
xchg
inc
pop
ds
insb
sub
xchg
cwtl
aaa
addb
lea
fwait
stos
inc
push
push
xchg
mov
pop
sbb
xor
adc
scas
xchg
pop
loope
insl
and
subl
int3
fcmovne
sbb
pop
orb
push
and
ljmp
xchg
es
xlat
jecxz
dec
repz
inc
and
sbb
xchg
mov
xor
std
fcompl
outsl
cwtl
fbstp
mov
mov
xchg
sbb
jns
sti
mov
testb
hlt
in
cmp
xor
sbb
out
cmpb
test
rcrl
push
psubsw
jae
notl
popl
mov
fwait
lret
sbb
ret
imul
or
fbld
add
cmp
mov
ret
or
push
adc
and
flds
lds
jbe
jnp
or
cmp
or
add
stc
adc
rcrb
mov
mov
push
and
push
test
adc
in
adc
mov
stos
pop
push
test
or
scas
andb
popf
addl
pop
dec
and
mov
add
and
dec
incb
mov
loope
inc
dec
lahf
movsbl
cmpsl
lods
ret
les
inc
test
mov
adc
mov
aad
lods
xor
ret
push
popf
pusha
fsubrs
push
dec
call
jecxz
xchg
mov
dec
push
jge
fisttps
xor
fdivp
and
lea
xchg
data16
in
bound
pop
adc
mov
mov
jae
jmp
stos
mov
mov
hlt
xchg
movsl
popf
js
popa
mov
push
and
xchg
jge
dec
lahf
adc
movsl
pushf
mov
into
add
pop
popf
sbb
fistpll
push
inc
mov
or
rcrb
sbb
mov
xchg
int3
outsl
jns
test
aas
repnz
cmp
je
adc
jno
test
cli
daa
xorl
pop
repz
xor
js
bound
inc
pop
scas
ja
adc
aad
fbld
sbb
push
mov
push
daa
cwtl
imul
movsb
aaa
lahf
je
pop
cmp
dec
adc
into
pop
std
sahf
aam
mov
xor
cmp
pop
daa
lahf
jmp
aad
and
dec
mov
ret
je
push
in
fists
sub
cmp
push
adc
xchg
dec
add
cwtl
popa
and
shll
dec
jbe
in
xor
aaa
cmp
dec
scas
sbb
ret
or
jmp
jg
test
hlt
fldcw
addl
xchg
iret
popf
ds
push
inc
push
sbb
push
sub
loopne
arpl
movhps
sti
out
sub
mov
cmpb
das
cmc
push
daa
loop,pn
icebp
inc
fstpt
int3
loope
pop
adc
insl
testb
cmp
xor
cmp
nop
dec
testb
dec
xor
sahf
xor
aas
jl
jo
jp
and
das
test
lret
jae
cmp
mov
hlt
jle
add
pop
pop
add
lret
aad
stc
movsl
test
mov
or
xorl
xor
jb
pusha
dec
loop
outsl
int3
dec
ljmp
pop
aad
xchg
push
or
inc
daa
jp
out
jbe
mov
jge
outsb
imulb
js
mov
sbb
inc
dec
das
sub
out
fmull
fistl
iret
xchg
into
loop
imul
cmc
mov
lds
jb
cmp
ror
inc
jge
xor
mov
mov
inc
push
or
mov
jne
cmp
ja
sti
sub
cmp
sub
dec
inc
xchg
jb
iret
inc
adc
adc
jmp
mov
or
add
ret
add
xchg
pop
repnz
and
sub
popa
outsb
cwtl
jnp
fwait
enter
loope
sub
fwait
out
push
push
ss
xor
or
aad
gs
lcall
cwtl
into
mov
or
xchg
fcmovb
js
dec
pop
sbb
cmp
ret
cmp
jb
sahf
mov
pop
mov
repnz
repnz
popf
pop
sbbb
cmp
mov
rcl
arpl
or
mov
sub
cld
adc
inc
sbb
adc
push
inc
mov
scas
lods
mov
or
outsl
lahf
xlat
imul
push
and
mov
xlat
out
movsl
sbb
jae
gs
sub
rolb
stc
push
daa
outsb
jle
inc
lods
or
std
clc
and
loop
jg
push
mov
inc
cmp
or
mov
data16
inc
call
or
cmp
push
xchg
shlb
adcl
sbb
bound
stos
ds
loope
mov
add
inc
ljmp
inc
mov
cmc
imul
push
fmull
loope
jl
in
mov
pop
push
les
fdivrl
scas
cmp
mov
outsb
mov
mov
addl
xor
inc
fwait
or
adcb
xchg
std
add
outsl
fnstcw
lret
sub
out
stos
xchg
loop
pop
ljmp
test
adc
lock
sub
push
jmp
dec
cwtl
fbld
mov
jl
loopne
push
pop
sub
xchg
shll
adc
adc
adc
icebp
dec
mov
mov
mov
mov
cmp
xor
inc
fstps
ljmp
push
lret
dec
xorl
xor
mov
inc
sbb
rcrl
loopne
loope
dec
or
ds
repnz
bound
insb
push
xchg
cmc
inc
inc
mov
rcll
cmpsl
js
lods
repz
and
mov
hlt
dec
push
add
ds
xchg
cmp
mov
add
and
or
js
lret
jne
pop
enter
setae
std
fdiv
out
jo
mov
mov
push
lods
inc
jae
or
aaa
insl
mov
notl
push
mov
push
xchg
fsubrl
aam
pop
sti
cmp
icebp
jo
into
dec
inc
push
jo
lahf
imul
mov
mov
rorb
lds
cwtl
adc
cmp
sub
dec
rclb
push
ficoml
xor
out
dec
push
ret
jle
addl
xor
jp
fwait
sub
sub
jecxz
xchg
mov
xchg
dec
push
mov
mov
outsb
mov
sti
sbb
xchg
fucomp
inc
and
mov
jne
clc
in
inc
into
popf
push
jae
movsb
repnz
push
out
inc
test
mov
xlat
xchg
repz
js
ss
sbb
mov
dec
subb
mov
inc
iret
or
cmc
inc
mov
inc
jno
leave
mov
test
push
lea
out
or
fwait
std
mov
lock
push
cld
and
xorb
mov
mov
xlat
clc
ret
arpl
push
pop
aad
mov
mov
pushw
out
mov
adc
sub
jl
xlat
mov
nop
pop
mov
aad
std
mov
ja
call
lock
pop
out
cld
pusha
push
clc
gs
mov
scas
aaa
cmpb
jge
jnp
push
imul
popa
adc
or
sub
sub
push
push
pop
mov
push
adc
loope
in
rorl
push
mov
js
call
jecxz
inc
pop
insl
and
cmc
mov
or
and
pop
cwtl
xor
mov
sbb
clc
stos
ds
sahf
push
and
flds
inc
mov
cmpl
icebp
sbb
push
clc
cmp
les
pop
bound
inc
mov
leave
cli
inc
inc
ja
push
mov
or
inc
push
repnz
pop
addr16
dec
jmp
xor
int
mov
insl
movsl
push
mov
paddq
and
inc
rolb
arpl
mov
jmp
mov
jp
imul
stos
xchg
mov
aad
ja
mov
and
or
dec
jbe
fimull
push
mov
mov
dec
cmc
pop
inc
hlt
dec
cmc
test
xor
test
or
imul
stos
adc
mov
lret
or
cmpsb
lods
addr16
aaa
sub
mov
addr16
mov
and
add
repz
cli
test
cmp
fstpl
gs
lcall
dec
stc
call
add
or
mov
push
and
ret
xchg
cmpsl
xchg
jbe
xor
jg,pn
mov
rcll
mov
out
ja
mov
stc
inc
loopne
jo
sarl
add
jecxz
cmpsb
lock
cmpsl
xchg
inc
fs
sbb
xchg
icebp
lods
repz
ljmp
lret
sbb
dec
fxch
pop
leave
sub
adc
sbb
mov
push
andl
sub
call
enter
clc
fs
jnp
dec
inc
jmp
les
scas
pop
pop
sub
jl
push
xchg
sub
xchg
js
stc
imull
sub
adc
cs
loope
inc
inc
fadds
adc
inc
jl
or
imul
or
dec
jg
in
cmc
cltd
sar
jl
mov
fildl
adc
mov
jae
jae
lea
or
jl
cmp
sarl
inc
fs
ud0
rolb
adc
and
sti
xchg
push
pusha
cmp
mov
push
test
pop
es
test
xchg
mov
mov
jp
ljmp
xor
ja
jno
and
in
out
add
and
subb
jae
scas
sub
insb
inc
jno
in
out
mov
popf
cli
lock
stos
call
movsb
adc
lcall
mov
sbb
add
ss
loopne
in
inc
pop
push
clc
add
test
adc
mov
popf
jge
daa
jo
mov
xchg
stos
push
inc
and
inc
sub
sub
js
pop
clc
cmpl
ja
jp
outsl
add
leave
test
adc
enter
movaps
mov
movsb
adc
ret
pop
and
push
adc
push
mov
fwait
cmp
xor
mov
mov
cmpsl
sbb
push
add
mov
jbe
and
ffree
adc
cltd
lret
in
inc
xchg
cmpsb
lret
xchg
and
and
test
loopne
push
jmp
addr16
add
mov
push
sub
out
mov
or
idivl
xchg
jmp
fldcw
incb
loope
push
xchg
mov
repz
out
add
xor
and
cmp
mov
xchg
hlt
call
int
rcrl
pop
or
loop
xchg
mov
nop
mov
inc
adc
pop
loop
add
pusha
enter
aad
mov
out
sub
and
push
addl
scas
push
mov
nop
sub
add
stos
bound
test
int
imul
push
lea
mov
push
imul
pcmpeqb
bound
and
test
sub
sbb
xor
lea
ds
sbb
mov
or
push
lods
dec
add
je
popf
jg
lds
cmp
repnz
inc
mov
xor
addr16
pop
popa
pop
sbb
push
mov
imul
into
or
dec
jg
fidivrs
aam
cmp
jge
lods
push
fnstsw
jecxz
sub
jg
loope
imull
aaa
call
cmp
popf
fnstsw
out
add
cs
je
pop
and
sbb
inc
lret
pop
jle
or
mov
aad
popf
jo
xlat
arpl
xchg
cmp
cs
sbb
call
xor
loop
dec
in
sub
sub
push
testl
xchg
jno
leave
lahf
push
enter
xor
test
lock
popf
rcrb
push
adc
mov
and
adc
insl
or
and
adc
pop
out
repnz
xchg
and
dec
cmc
mov
js
cltd
or
dec
sbb
fstps
popa
jmp
cmp
mov
mov
xor
cmp
xor
rclb
xor
adc
push
push
testb
sbb
inc
in
mov
clc
loopne
pop
pushf
rcrl
jmp
mov
jle
gs
pushf
xchg
and
fcomps
sahf
adc
les
stos
pop
pop
mov
aad
divl
fs
add
test
mov
shrb
add
mov
ficomps
test
cli
mov
dec
icebp
mov
testl
inc
or
jle
mov
movsb
mov
sub
aad
mov
sbb
in
test
pop
lods
sbb
adcb
rolb
dec
lds
shl
in
xchg
and
xchg
fwait
xor
xchg
adc
pop
jge
or
jb
push
enter
je
adc
push
inc
lret
es
xor
andl
or
pop
pop
cmp
jp
ljmp
data16
xchg
js
pop
xchg
mov
aam
inc
sub
ljmp
cmpsl
sub
das
ljmp
sub
xchg
out
sahf
aaa
popa
outsb
shlb
repnz
roll
das
mov
mov
xchg
xchg
movsl
in
cmc
sub
adc
out
in
idivb
jb
cmpsb
add
roll
stc
dec
pusha
enter
aaa
ret
loope
pop
lahf
xor
iret
cmpsl
das
daa
sbbl
rcrb
push
or
and
ljmp
xlat
in
sti
inc
movl
ds
pop
loope
ror
in
or
inc
adc
xorl
mov
cltd
jp
pop
out
inc
adc
push
dec
popa
dec
jns
cmpsl
pop
xchg
jp
xlat
jmp
pop
dec
mov
ljmp
lcall
inc
cmp
mov
xlat
cmp
and
icebp
loop
add
mov
mov
test
icebp
in
loopne
shl
push
jbe
and
es
xchg
mov
rcrl
ret
mov
test
outsl
push
fwait
scas
test
and
dec
or
mov
icebp
adc
mov
lret
mov
fidivs
mov
pop
mov
lds
movsb
adc
inc
push
addb
and
rclb
sahf
adc
cld
pop
dec
test
lock
push
outsb
or
push
xchg
push
inc
or
in
loope
push
xor
cmp
inc
xor
xor
sub
jno
sub
mov
sub
and
in
mov
lahf
adc
and
sub
into
push
adc
mov
cmp
fnstenv
dec
iret
lcall
pop
sub
push
negl
xchg
addr16
fbstp
and
add
out
and
bound
out
mov
lods
push
sarl
adc
sbb
sbb
xlat
mov
or
sbb
rol
dec
fwait
mov
mov
inc
and
movsb
push
jl
in
mov
dec
push
xchg
push
xchg
push
bound
pop
scas
out
adc
dec
mov
aaa
xor
jl
roll
mov
ja
movsb
pushf
adc
push
jmp
daa
pop
jb
stos
out
sbb
inc
clc
cmpsb
ds
ss
enter
aaa
scas
pushf
popf
lret
jnp
push
sbb
dec
lds
jns
ss
mov
ja
cmpsl
or
push
xchg
adc
cmp
jb
mov
fists
pop
ret
and
in
or
ss
mov
jg,pt
ja
mov
cmpl
dec
mov
fdivs
in
mov
sub
add
outsl
pushf
daa
ss
movb
test
push
adc
aam
hlt
xor
sbb
cwtl
xor
sbb
test
mov
repz
pop
xor
cmp
dec
adc
lcall
adc
push
fwait
add
adc
enter
mov
xchg
mov
inc
mov
sbb
leave
sti
mov
jb
cmp
xlat
adc
inc
xchg
and
out
jae
adc
fiadds
xchg
jmp
sbb
repnz
lea
pushf
int3
lea
or
test
mov
loopne
sbb
mov
iret
in
mov
cli
sti
roll
mov
popa
dec
xor
sbb
push
test
pusha
adc
gs
cmpsb
movsl
dec
xor
movsl
into
fcmovnu
pop
aaa
mov
mov
test
in
stc
dec
push
loop
xlat
jp
clc
cmc
sub
or
xchg
mov
cmp
cwtl
lods
hlt
sbb
or
ss
pop
pop
movsl
rorb
jns
pusha
sarl
ret
xchg
mov
jb
push
push
out
nop
mov
push
es
pop
in
arpl
xor
je
jl
xchg
ljmp
cmp
dec
dec
or
mov
dec
inc
cmp
rcr
test
les
pop
out
mov
pop
rorb
loopne
mov
jl
lcall
addb
xor
pop
mov
test
das
mov
xchg
daa
stc
hlt
sbb
rcrl
lea
add
xchg
shr
push
enter
push
jl
rcrb
xor
pop
int3
jne
sub
or
xchg
mov
cltd
arpl
lods
sub
js
in
pop
pop
fadds
xor
mov
scas
jne
std
and
sbb
dec
mov
mov
jmp
or
mov
cmp
fnstsw
in
and
pop
dec
rcrb
fxch
movsl
mov
fimull
in
xchg
dec
inc
stos
xor
xor
inc
insb
lock
dec
sbb
aam
rcl
test
and
inc
jl
stos
jl
repnz
add
addr16
push
fsubs
in
jns
rolb
xchg
xchg
pop
rcr
test
sbb
jo
sahf
jecxz
dec
mov
add
push
bound
jo
add
inc
lds
xchg
dec
sbb
pop
in
or
gs
sub
icebp
inc
lods
or
cmp
sub
pop
test
ljmp
lods
lret
push
fisubl
lret
xor
loope
sbb
mov
lods
push
lods
pop
inc
in
sti
cld
idiv
imulb
into
es
and
loope
ss
out
aas
jecxz
xchg
inc
lret
stos
test
movl
mov
and
lret
adc
add
mov
jbe
rcll
xchg
movsb
stos
sbb
loop
out
pushf
nop
xor
jne
mov
xor
insl
sbbb
cmp
stos
inc
movsb
xchg
enter
ss
add
hlt
lea
push
shlb
pop
add
xchg
pop
xchg
cmpsl
cwtl
jmp
int3
lret
xlat
addr16
adc
jno
mov
test
inc
xchg
mov
imul
sbb
sub
adc
jnp
xorl
add
cs
push
repz
ljmp
jo
outsb
push
or
decb
push
lret
lods
test
add
cld
in
jg
mov
mov
mov
sbb
push
jb
fcmovu
dec
cmpsb
pop
adc
cmp
and
in
inc
cmpsb
sti
and
sbb
add
cmp
arpl
lret
cmpsl
subl
pushf
sbbb
xchg
cmp
xor
sti
lcall
xchg
leave
imul
mov
mov
int
popa
jne
mov
cmpsl
das
inc
mov
mov
aad
into
and
repnz
inc
outsb
ja
cli
fdivrs
push
int3
std
decb
lcall
mov
inc
mov
mov
add
inc
aad
pop
cltd
lcall
rcpps
js
xor
sub
jle
fsubrl
je
mov
cwtl
mov
out
add
xchg
out
in
arpl
dec
dec
mov
xor
and
dec
repnz
jns
mov
popa
addr16
fistl
add
xor
jecxz
pushf
in
test
leave
jmp
jl
mov
jp
out
mov
movb
ret
adc
sub
mov
adc
sbbl
xchg
nop
sbb
push
jl
mov
adc
cmc
jecxz
fmul
push
rcrb
fsubrp
aas
jl
les
add
cmc
sar
nop
add
scas
lcall
and
and
xchg
or
cli
jo
mov
mov
add
dec
cltd
xor
push
or
dec
and
ret
movsl
es
push
push
or
and
push
or
mov
mov
data16
fdivrl
scas
int
in
stc
push
jno
mov
aaa
std
mov
xchg
adc
or
shrb
mov
add
mov
jl
push
adc
jns
push
addr16
sbb
jge
outsl
dec
rcrl
icebp
stos
ds
pop
popa
jl
jo
lea
inc
shl
adc
inc
test
outsl
popa
jnp
cmpsl
or
cs
idivb
and
xor
fnstenv
movsb
loope
xor
lahf
and
sub
mov
test
push
pop
push
and
jne
lea
js
aad
inc
in
xchg
add
mov
jb
sub
xor
xchg
leave
in
push
xchg
mov
sbb
iret
popa
loop
lret
movsl
shl
insb
xchg
cmpsl
vpaddb
clc
lahf
jmp
cmpsl
insb
fldpi
rcrb
mov
insb
push
sbb
mov
pop
push
mov
sub
xchg
sub
xchg
jg
pop
pavgb
cmp
je
int
out
pop
jl
lock
adc
prefetch
push
xchg
sbb
test
push
clc
mov
xchg
rorl
xor
adc
mov
sbb
adc
sub
xor
cmp
mov
imulb
mov
jge
shlb
xchg
jmp
sub
mov
dec
stc
lock
imul
pusha
dec
mov
or
cmp
outsl
rcl
push
jae
in
inc
xor
mov
xchg
add
cltd
mov
xchg
xorl
push
cmp
sti
lcall
inc
lods
pusha
es
xor
jnp
shrl
pop
test
movsb
adc
mov
push
add
sbb
std
add
inc
out
and
and
popf
sahf
bound
pop
ret
jl
mov
push
daa
ret
inc
loope
or
stc
push
add
pop
mov
add
and
xchg
sbb
jb
jnp
push
mov
int3
lahf
or
jg
subl
jle
fsts
mov
lds
orl
imul
pop
sbb
mov
push
sub
push
push
jae
std
add
lods
jl
cmp
dec
push
sbb
shlb
in
inc
data16
inc
mov
jecxz
inc
daa
mov
inc
in
pop
mov
mov
daa
mov
push
jmp
xor
lret
jae
out
push
lods
add
call
push
orb
aam
lds
mov
adc
andl
xchg
or
xchg
and
outsl
mov
test
and
mov
fldl
aad
test
or
out
or
sub
and
test
or
iret
js
adc
jl
mov
ljmp
roll
out
inc
cmpsl
mov
mov
les
clc
pop
sbb
xchg
cmp
lods
sti
xchg
mov
js
call
jno
outsb
inc
sub
out
pop
lods
add
push
xchg
jp
and
fucomi
jbe
out
push
dec
in
loopne
or
sbb
inc
outsb
xchg
es
mov
stc
dec
daa
nop
push
sbb
or
mov
xchg
into
das
fmuls
push
mov
inc
jp
and
mov
in
out
std
xor
xor
mov
inc
sub
mov
mov
es
jle
or
cltd
push
cmp
fmul
add
xchg
pushf
imul
loope
jb
imul
push
fildll
stos
push
jl
lahf
jge
xlat
push
popa
and
movsb
push
or
inc
fiaddl
jne
pop
insb
cmp
aas
xor
dec
std
sub
dec
fdivrl
xor
jge
cltd
data16
mov
lds
popa
mov
lods
mov
jp
ret
popa
mov
repnz
enter
or
int3
std
fs
pop
pop
xchg
jae
adc
test
aad
or
cmp
out
stos
leave
push
notb
lods
jle
jo
and
xchg
or
pop
jmp
js
add
repnz
pop
cmpl
or
and
cmp
enter
and
mov
jno
push
inc
lds
add
cmpl
shr
imul
in
inc
mov
repnz
push
add
pop
mov
jg
xchg
or
inc
xor
and
lahf
adc
dec
das
add
cltd
js
ds
push
sub
and
mov
dec
jno
jle
dec
sub
mov
shll
inc
xor
jge
xchg
adc
and
int3
or
xor
inc
cmpsl
cmpsb
push
push
dec
or
pop
mov
dec
pop
shlb
incb
fstpl
inc
rcrb
ss
sub
lds
or
test
pop
add
fldl
dec
sbb
jmp
movsb
or
icebp
in
ljmp
mov
sahf
sbb
sbb
aam
push
sbb
inc
jl
insl
std
icebp
sub
xchg
mov
jle
call
int
xchg
insl
adc
mov
mov
sahf
push
inc
imul
decb
in
neg
mov
jl
xor
push
gs
mov
mov
mov
add
or
or
ret
dec
pop
in
rolb
adc
jecxz
jmp
dec
sbb
ret
or
push
cmp
rolb
ret
mov
insb
jo
xchg
daa
jae
jo
adc
sbb
jecxz
cmpb
ds
cmpsb
xchg
or
xor
and
xchg
rorb
std
adc
test
enter
cmp
and
ret
inc
scas
outsb
testl
ss
lock
xor
xor
lods
ret
lods
jns
movsl
add
cmp
jne
xchg
fisttpl
mov
push
xchg
add
mov
mov
mov
lods
pop
sub
cmp
jne
scas
insb
cmp
and
iret
aam
add
pop
int3
lods
mov
popa
mov
repz
jo
insl
jns
xor
pop
sbb
call
xor
sub
xchg
les
xchg
lock
add
cmpsl
pop
clc
pop
xorb
mov
fisubs
mov
inc
shlb
jmp
dec
lahf
insl
arpl
rorl
pop
pop
cmc
adc
cmp
sarl
adcb
add
arpl
push
sbb
cmp
xchg
or
sbb
xchg
xchg
rol
xlat
adc
insl
sbb
arpl
ljmp
dec
ret
add
mov
sahf
dec
in
mov
fidivrs
mov
loop
dec
add
lss
test
xchg
push
in
dec
and
push
pop
and
xor
cli
mov
mov
ljmp
adc
in
out
insb
push
sub
xchg
test
mov
mov
sbb
xchg
inc
sbb
call
xchg
sti
sbb
lock
mov
xor
pop
scas
push
call
out
push
rorl
aad
xchg
imull
enter
popf
add
xchg
int3
sarb
cmc
jecxz
xchg
sbb
pusha
std
mov
jno
xchg
inc
xchg
out
outsb
das
cmp
fwait
out
ds
inc
in
sar
setg
cmpsl
mov
inc
inc
mov
jmp
dec
cltd
stos
test
mov
mov
enter
mov
xor
mov
lds
mov
mov
scas
mov
mov
jnp
popf
xchg
mov
dec
aaa
movsl
in
sarl
inc
test
adc
cmpsb
sti
in
hlt
lods
push
fimuls
aad
adc
pop
push
roll
into
addb
loop
rcl
inc
or
popa
mov
hlt
int3
sbb
dec
adc
pop
dec
push
sbb
push
cmp
rcr
loop
shlb
hlt
test
pusha
xchg
add
jmp
xchg
popa
cwtl
inc
mov
leave
mov
shl
int
dec
out
scas
ljmp
or
jnp
adc
cmp
cli
inc
jp
pusha
xor
sub
inc
sbbb
adc
lods
pushf
mov
adc
popf
cmpsb
pop
mov
arpl
jo
or
cmc
inc
inc
jp
pop
cmc
in
jb
subl
xchg
popa
add
xor
cmp
ljmp
andl
push
adcb
stc
movsl
mov
pushf
adc
xchg
fidivrl
cmp
data16
mov
jno
icebp
mov
xchg
fst
jl
cli
push
stos
pop
bound
pop
pop
mov
add
call
jp
bound
cmp
dec
mov
insl
mov
xchg
dec
cli
call
cmc
mov
xor
push
pop
in
sar
das
into
or
int
inc
testl
in
shrb
divb
and
fwait
out
push
outsl
jp
push
pop
push
cmp
scas
je
fadds
mov
jmp
leave
ljmp
mov
pop
loopne
push
cmp
push
xor
mov
int3
and
add
jle
xor
push
push
out
inc
packssdw
cmp
cmp
inc
popa
jbe
mov
and
xchg
inc
fisttpll
sbb
insb
fcoms
in
and
enter
fwait
popf
sahf
paddsb
loop
mov
movb
pop
mov
jo
insl
push
leave
mov
cli
cmp
fcmovnb
daa
mov
xchg
mov
inc
lcall
xchg
ret
enter
loop
pop
jl
nop
cltd
push
mov
aad
rorb
xor
pop
pop
jne
sahf
cmp
mov
pop
orb
cmp
sbb
enter
xchg
aam
xchg
in
imul
loopne
sahf
popf
stc
mov
unpckhps
dec
lds
int3
xor
dec
or
cmpsl
adc
add
outsb
sarb
rcrb
pop
pusha
popf
mov
sbb
movsb
jl
cli
jae
aad
jg
arpl
lret
jb
xor
add
lea
mov
shrb
mov
add
fsts
mov
inc
das
nop
mov
and
jl
es
lods
cmp
fs
or
cmp
add
arpl
adc
ret
mov
test
jl
les
and
mov
outsl
popa
cmp
notl
sbb
cmc
addb
jge
adc
test
mov
pushf
or
pop
call
or
hlt
or
sbb
dec
inc
jnp
repz
jno
dec
adc
sbb
jge
out
dec
mov
stos
idivb
mov
imul
icebp
dec
push
fsubrs
jne
fsubr
cmpl
sub
cmpsb
sbb
pop
mov
jbe
mov
push
xor
jnp
jns
dec
cmpsl
outsb
ficomps
adc
jecxz
fiaddl
lods
cmp
xchg
out
mov
mov
sbb
dec
jle
pop
frstor
pop
lcall
les
xor
inc
in
xchg
dec
pushl
push
shlb
ljmp
in
and
das
push
das
jo
pusha
fistpl
mov
cmpsb
and
dec
mov
push
sub
outsl
stos
int3
pop
and
sub
or
add
icebp
out
imul
mov
pop
inc
mov
mov
shr
cmc
push
faddl
ror
sbb
popa
scas
adc
in
lret
pop
repnz
jb
sbb
repz
push
mov
jno
cmp
cmc
xor
xchg
stos
adc
pop
push
mov
loopne
and
sbb
fs
mov
mov
test
ljmp
adc
mov
lea
dec
xor
pop
mov
push
scas
movsb
ss
imul
cmp
push
xchg
test
or
push
xchg
and
adc
mov
pop
daa
stos
andl
insl
sub
jg
icebp
fcmovnbe
mov
data16
repnz
and
arpl
stc
xor
jns
sbb
mov
int
jmp
out
cmpsl
xor
mov
xchg
arpl
cpuid
ror
or
mov
es
dec
push
subb
inc
loopne
add
xlat
jb
out
pop
mov
rcll
enter
daa
lock
adc
push
cmp
jp
mov
and
out
mov
mov
popa
daa
cltd
mov
xchg
test
add
cltd
and
pushf
lds
sbb
and
cmpsb
lcall
ja
das
in
std
jmp
push
xor
push
lea
mov
cs
pop
push
and
movsb
xchg
sbb
aad
adc
lds
inc
or
es
jl
fs
pop
int
call
add
idiv
les
ret
movsl
enter
pop
imul
aad
pop
gs
shrl
mov
ja
push
stos
fdivs
out
mov
xor
adc
mov
mov
xchg
inc
cli
dec
add
xchg
sub
jno
jp
daa
adc
test
dec
or
push
daa
inc
sahf
dec
pushf
into
jmp
ds
in
in
out
add
push
and
movsb
or
push
loopne
aam
cli
sub
sbb
enter
int3
cmp
pop
nop
xchg
outsl
leave
ja
xor
jl
add
pop
inc
dec
rorb
rcll
cmp
add
add
mov
mov
fdivrs
jbe
ret
cld
adc
jmp
mov
inc
mov
xor
gs
pop
aam
adc
outsb
jo
push
std
test
mov
or
nop
scas
pop
shrb
mov
sub
pop
andb
jecxz
xchg
push
push
es
lods
in
sbbb
mov
mov
dec
xor
adc
out
ret
ljmp
scas
pop
cmc
or
pop
mov
lcall
pop
ret
mov
xchg
push
ret
mov
mov
test
dec
scas
inc
test
cmp
loop
data16
aad
push
test
ljmp
dec
push
cmc
jo
mov
or
lock
push
sbb
xlat
mov
push
and
in
sahf
or
xlat
add
cltd
inc
in
arpl
aam
sbb
xchg
scas
ja
icebp
lods
jecxz
push
pop
in
in
mov
mov
adc
inc
stos
sbb
fisubrs
or
sub
cltd
bound
jb
sarb
inc
or
mov
push
sbb
clc
and
xchg
iret
cld
adc
es
movsb
or
push
pop
icebp
dec
mov
lods
xor
test
rol
lret
icebp
cmc
stos
bound
stos
nop
in
scas
popa
inc
sub
pop
jmp
imul
fimuls
ds
jb
add
cs
gs
mov
pop
lds
pop
jo
push
clc
mull
jg
sub
ljmp
inc
bound
xchg
push
scas
xchg
fadd
jb
mov
push
stos
popa
cmp
mov
mov
add
fwait
mov
mov
push
rcrb
jmp
pop
pop
popa
shrb
movsb
jae
loop
imul
fistl
xor
in
pop
int3
scas
inc
fidivrl
jnp
scas
mov
ret
movsl
adc
fldl
push
sbb
fs
outsb
cbtw
cmc
sbb
mov
sub
mov
lahf
xor
rolb
push
sub
pop
push
loop
or
popf
cmp
cmpsl
movsl
jbe
or
push
pop
sub
or
movsl
orb
add
divl
cmpsb
adc
jecxz
clc
lret
test
pop
cmpsb
test
cmp
sub
xchg
sub
icebp
xchg
nop
dec
imul
fs
mov
and
sar
xor
xchg
push
sarb
add
fildll
inc
and
lds
inc
jecxz
test
mov
ret
cmp
ret
cltd
fidivl
push
cmp
lock
loope
shlb
cmc
xchg
cmp
dec
jle
cmp
mov
push
cmp
jo
pop
push
daa
stos
inc
enter
fsubrl
dec
mov
mov
xor
int
hlt
jbe
push
add
aam
jmp
setne
pop
inc
ja
push
movb
jnp
out
sbb
pop
or
enter
sbb
xor
mov
out
in
sub
ljmp
imul
imul
psllw
daa
mov
mov
push
hlt
and
sarb
push
mov
divl
fs
out
cltd
adc
sbbb
push
adcb
cli
sub
pop
push
mov
sub
imul
inc
sbb
add
push
test
cwtl
lock
pusha
sbb
out
imul
add
and
sahf
repnz
add
push
jge
dec
or
mov
frstor
sti
sbb
loop
mov
insl
imul
nop
push
lcall
ljmp
adc
sub
dec
sbb
ret
pusha
hlt
mov
mov
and
fdivs
mov
aas
es
xlat
mov
rcll
mov
sarl
bound
jp
sub
dec
pushf
enter
daa
xchg
loope
ljmp
jl
jae
or
cwtl
or
jle
insb
inc
jp
mov
enter
adc
mov
or
xchg
fistl
mov
pop
inc
fldenv
or
or
push
adc
fldl
stos
xchg
inc
mov
lds
jl
dec
mov
das
fwait
mov
adc
inc
lret
into
fiaddl
leave
jbe
repz
mov
jbe
adc
fcomip
cmc
cmpsb
jae
mov
cmc
andl
push
invd
ljmp
or
lods
movsb
arpl
push
arpl
fidivrl
call
sub
fwait
xchg
sub
pusha
sub
mov
or
pop
dec
xor
repnz
stos
push
lret
dec
fldenv
test
pop
pusha
int3
loope
add
push
jns
ret
pop
lret
and
add
aaa
jo
pop
xchg
jp
sub
sbb
or
int
mov
adc
arpl
xchg
xor
out
sti
cmp
leave
cmp
flds
xor
pop
pop
pop
test
xchg
mov
es
inc
jmp
fsubl
ret
xchg
das
imul
cltd
mov
imul
or
aaa
icebp
in
push
mov
fidivrl
ret
ds
btr
iret
out
nop
pushf
pop
or
lods
add
shl
push
adc
xchg
das
arpl
mov
repz
in
aad
jmp
mov
push
dec
adc
addr16
adc
or
std
jno
add
add
pop
lret
cmp
mov
addr16
enter
inc
and
adc
movsl
push
pushf
jbe
mov
rcll
push
push
dec
stos
and
test
or
mov
xor
mov
bound
mov
fiadds
adc
or
inc
subl
aaa
xor
xchg
test
dec
xor
mov
add
pop
je
xor
jns
incl
sbb
fstl
and
push
lret
into
lcall
fwait
pop
sub
sub
int
fcoms
add
add
out
inc
aas
fistps
inc
fstpt
xchg
jnp
out
imul
jbe
pop
xchg
xchg
adc
mov
dec
xchg
mov
lods
xchg
mov
or
lods
jle
es
xchg
sub
sarl
dec
mov
cmp
dec
dec
bound
jno
jns
in
mov
or
mov
stos
xchg
xchg
mov
cmc
loope
es
in
or
pop
inc
mov
mov
jbe
pop
enter
jp
push
mov
add
outsb
mov
inc
or
push
jo
cmc
inc
xchg
and
lahf
mov
int3
in
hlt
gs
sub
cmp
jg
mov
mov
and
stos
dec
mov
mov
insl
mov
xor
and
xchg
inc
jmp
pop
divl
cld
test
jg
rcrb
flds
sub
fisubrl
dec
mov
jle
shll
mov
mov
scas
nop
or
push
inc
dec
cmc
loop
fidivrs
in
xchg
mov
xchg
cmp
lcall
movsl
cmp
aaa
outsb
sbb
iret
and
fldt
push
sbb
dec
mov
cmp
adcb
fsubrl
in
xchg
inc
mov
xor
test
jae
pop
iret
in
das
fwait
movsb
ja
orb
test
cmp
push
xor
lds
dec
pop
aaa
scas
inc
adc
outsb
mov
sub
in
hlt
lcall
test
addl
jns
dec
xor
and
mov
jbe
and
repnz
shl
mov
icebp
loope
shl
mov
mov
icebp
inc
jmp
xor
addr16
add
push
call
imul
lret
out
cmpsl
dec
ret
mov
add
xor
lret
xchg
mov
mov
mov
push
rcrl
data16
popa
cltd
dec
jne
jne
sub
bound
cwtl
or
add
dec
sub
jae
jno
dec
insl
mov
push
movsb
fmull
scas
jae
inc
xor
mov
pop
sbb
adc
jne
push
andb
inc
mov
adc
rorl
sbbb
fdivr
adc
xchg
int
xor
xor
pop
mov
ljmp
or
or
inc
fwait
fldenv
xchg
pop
lds
push
pop
in
aaa
daa
inc
shlb
idiv
xchg
lea
cmp
test
es
jnp
insb
xchg
push
repnz
adc
pop
pop
rolb
cwtl
rcr
scas
sub
loopne
dec
stos
and
or
jnp
insl
mov
outsb
add
mov
test
mov
dec
dec
push
fs
out
dec
or
ss
mov
pop
push
es
dec
cltd
js
push
push
jno
jge
fnstcw
out
fdivl
pop
imulb
jae
movsb
imul
mov
adc
sbb
pusha
inc
and
int3
xchg
rclb
lret
imul
jge
mov
mov
inc
add
jns
jbe
mov
aaa
in
xchg
mov
pop
add
jl
test
fidivl
or
jo
addr16
adc
xchg
ror
sub
xlat
mov
nop
in
into
mov
push
in
scas
inc
data16
out
shlb
fisubrl
popf
sbb
popa
test
movsb
popa
push
inc
jnp
dec
ja
xchg
mov
cmp
sbb
leave
jo
dec
or
sbb
push
cld
dec
push
cmp
je
inc
lahf
pop
ss
inc
fidivrs
popa
or
dec
pushf
sbb
jp
fsubrl
mov
or
mov
ja
jnp
sbb
in
push
aaa
xor
mov
inc
dec
mov
push
dec
or
outsl
dec
cmp
dec
outsb
sbb
and
adcb
lods
push
test
out
call
xchg
cmc
jnp
adc
xchg
pop
cwtl
call
pop
icebp
fisttpll
stos
dec
mov
in
jne
lods
cwtl
and
fs
leave
xchg
sbb
test
out
add
jp
sub
addr16
xchg
ret
xor
popa
sub
leave
in
es
jbe
push
repnz
loope
fistpll
pop
outsb
lret
push
lret
sarl
jp
xor
push
lret
xchg
xchg
aam
scas
out
fistpl
mov
stc
outsl
jbe
repnz
xor
or
insl
arpl
loopne
and
xor
fisttpll
pop
xor
cwtl
xor
je
xor
inc
sub
lahf
mov
jmp
xor
pop
adc
stos
push
mov
xchg
push
in
or
fnstenv
push
xchg
push
fcompl
and
sbb
inc
mov
adc
jnp
xchg
shlb
sahf
add
or
sub
bnd
adcb
add
test
mov
shlb
loope
xchg
ljmp
push
les
or
sub
or
cmpsl
cwtl
lds
mov
pop
orl
xlat
pop
mov
cmp
std
pop
mov
xchg
es
ja
aaa
repnz
mov
aaa
jns
fwait
mov
cmpsb
in
es
jns
adc
and
movsl
aaa
lods
mov
int3
jecxz
or
lcall
dec
sub
pop
push
mov
pop
adc
aas
pop
add
adc
cmp
sbb
cmpsl
mov
pop
movsl
xchg
push
stc
mov
out
aas
repnz
or
xchg
sbb
loope
lds
inc
jge
cmpsl
loopne,pn
sub
xor
shl
pop
mov
movsb
rclb
mov
add
hlt
outsb
pusha
mov
ja
gs
or
inc
ljmp
and
cli
and
xchg
and
in
xchg
sub
shr
jp
cld
rolb
mov
iret
or
lods
test
mov
sub
or
add
outsb
mov
xor
push
cmc
fsubrl
pop
mov
icebp
pop
cwtl
jl
inc
mov
fimuls
test
push
lea
inc
add
repz
sti
jmp
and
out
jo
push
push
xchg
pop
loopne
mov
xor
out
and
sbb
aad
xor
sbb
add
push
mov
fisttps
dec
sbb
fsubrp
sahf
cmp
cmp
std
xchg
jg
cmp
cmp
or
adc
out
or
xor
aaa
adc
fdivl
or
rclb
dec
mov
out
cmpb
icebp
addr16
rcrb
cli
xor
sub
test
xor
jp
aad
and
mov
ror
cltd
aaa
fmull
leave
mov
out
mov
sub
pop
fs
jnp
lret
stc
ret
loopne
and
test
mov
jbe
mov
lea
pop
mov
out
jg
dec
mov
mov
cltd
adcl
xchg
mov
or
xchg
mov
pop
aaa
add
cmp
ja
xchg
mov
cmp
sahf
and
inc
jae
ret
jbe
pop
adc
sub
cs
mov
data16
mov
das
inc
jno
loopne
sub
inc
subl
fdiv
arpl
sbbb
adc
mov
cmpsl
dec
or
cmp
mov
mov
lahf
aad
cmp
push
call
xor
fwait
dec
mov
push
test
sti
daa
mov
incb
out
addr16
push
div
add
pop
fwait
inc
mov
call
fsubl
ror
inc
push
add
sub
mov
in
shrb
and
mov
popa
daa
xchg
ljmp
mov
sub
jno
push
inc
sub
cs
mov
add
or
add
outsl
sbb
movsl
repz
imul
cmp
mov
sbb
sub
xchg
int
test
neg
cs
or
fisttpll
test
mov
and
sar
xchg
jo
aaa
mov
clc
outsl
xchg
je
jb
sub
dec
pusha
adc
jecxz
imul
out
inc
les
pop
xor
lahf
jmp
ret
sbb
les
dec
mov
dec
sub
aaa
jl
sahf
test
push
mov
icebp
and
adc
lret
dec
aam
adc
push
fwait
mov
pop
xor
push
lods
jl
incl
and
xlat
xlat
inc
mov
pop
inc
mov
movsl
in
arpl
loop
add
scas
adc
add
loope
das
mov
jmp
pop
repnz
clc
or
xchg
addr16
xor
idiv
dec
in
hlt
mov
dec
jg
inc
bound
stos
cmp
inc
loop
xchg
mov
call
fdiv
adc
cmp
lods
and
scas
mov
cltd
mov
out
ss
cmp
gs
call
es
or
movsl
in
cmpsl
add
addb
in
xchg
mov
outsb
jl
test
bsf
and
jecxz
cmp
pop
imul
movsb
mul
vcvtsi2sdl
iret
xchg
or
xchg
scas
mov
mov
push
adc
inc
push
popf
cmc
jmp
mov
ja
pop
adc
leave
inc
cli
and
loope
sub
mov
sub
sarb
push
jne
int
cmp
es
or
test
push
test
inc
jae
ret
and
stc
dec
mov
lahf
jns
fiadds
xchg
ret
sbb
dec
jbe
mov
cmpl
xchg
in
add
add
adcl
push
out
daa
aas
popf
push
rorl
popf
push
fsubrp
inc
lods
in
sbb
jp
adc
fstp
mov
dec
add
mov
mov
push
jns
lds
mov
pop
cmp
xchg
mov
cli
jno
ss
adc
push
add
push
das
jne
out
leave
cwtl
jecxz
pop
in
ret
xor
mov
outsb
dec
int3
cmp
mov
fisubl
loopne
lret
pop
add
enter
push
call
jne
and
push
mov
mov
mov
insl
sbb
mov
addl
icebp
fsubp
pop
xchg
fwait
jle
jnp
int
shl
inc
pop
push
xlat
xor
push
in
das
data16
in
xor
cltd
movsl
orl
in
pop
sahf
daa
int
xor
xchg
cltd
addr16
test
popf
or
cmp
xrelease
add
mov
jmp
stos
adc
mov
inc
cmc
test
xor
or
push
sub
xor
sub
pop
push
movsl
dec
and
push
cmp
jmp
ja
cmp
and
hlt
das
jle
cmpl
inc
jg
lret
outsl
cld
cli
stos
dec
mov
cmp
mov
nop
fidivrs
pop
cmpsb
push
ret
mov
addr16
or
mov
repnz
mov
inc
pop
sbb
sbb
push
aaa
adc
subl
fwait
movsl
mov
mov
fisttps
push
aam
jnp
inc
jb
adc
jno
dec
stos
daa
sbb
fildl
adc
in
enter
jns
pop
dec
and
xor
xchg
adc
and
or
xchg
pop
and
add
mov
hlt
mov
jb
dec
sbb
add
xor
or
mov
popl
lcall
ret
popf
ja
cmpsb
or
pop
or
jne
sub
jns
outsb
dec
jno
cmp
into
jns
test
ret
shll
push
nop
loop
jo
jnp
jg
or
loope
pop
out
jle
stos
sub
outsb
test
cs
xor
lock
xor
and
adc
fst
mov
movsb
imulb
mov
in
push
jmp
fmul
pop
jecxz
add
sub
outsl
shr
xor
adc
push
push
push
jmp
push
sbb
adc
roll
sarb
push
pop
imul
or
shrl
dec
mov
cli
mov
andb
inc
pop
pop
pause
mov
add
jg
test
sub
sbb
pop
xchg
cmp
or
call
jg
push
pop
test
ficoml
pop
icebp
stos
arpl
int
ret
cli
mov
or
gs
int
arpl
and
gs
mov
pop
push
cmc
andl
cwtl
movsl
lcall
test
xor
imul
sbbl
inc
pop
or
stos
out
jle
cmpsb
out
mov
push
ss
lods
and
hlt
cli
sarb
jp
push
fadds
dec
pop
xor
outsl
mov
mov
cld
jle
inc
ffree
imul
xchg
fmul
lahf
lods
les
fimull
inc
xchg
shrb
add
ja
andl
pop
dec
sub
adc
and
sti
sbb
push
push
or
xchg
ret
dec
ror
inc
push
in
call
push
ret
push
mov
push
lods
imul
mov
jne
cld
clc
lret
out
push
cli
insb
adc
cltd
xchg
push
sub
mov
adc
mov
inc
mov
es
or
mov
inc
sbbl
push
push
pushf
xor
inc
rcl
push
cld
cmc
pop
push
inc
mov
cltd
sar
xchg
ret
mov
mov
mov
outsb
int
mov
pop
jne
in
outsl
dec
andps
sbb
ret
loopne
int
int3
jl
bound
and
jbe
fdivrs
pop
mov
jns
cmp
aad
pusha
hlt
jle
or
xchg
scas
lret
aam
lds
pop
out
xchg
inc
inc
call
mov
cmp
je
add
mov
cmp
gs
push
mov
repz
cmp
incb
mov
dec
fs
mov
iret
pop
stos
je
and
int
push
ja
and
mov
repnz
mov
movsb
test
sbb
loopne
push
adc
push
xchg
test
jp
xor
decl
wrmsr
sbb
sbb
loope
flds
mov
mov
outsl
xchg
cs
aaa
mov
mov
scas
fwait
and
or
jns
pop
fsin
cli
cmpsl
pushf
pop
and
fisttpll
dec
inc
push
dec
movsl
cmc
daa
ret
sub
mov
sbb
lcall
jnp
cmp
mov
stc
cmp
divb
mov
lea
repz
jp
out
into
pop
xchg
popf
mov
inc
xor
dec
inc
sahf
cmpl
popf
bound
add
inc
xchg
ja
out
aad
cli
movsb
fld1
push
mov
pop
lods
mov
and
test
ficoml
fsubr
bnd
mov
bound
pop
add
ret
xchg
dec
daa
popf
lds
das
out
bound
out
mov
pop
ror
test
jg
test
add
enter
scas
test
in
leave
ret
mov
cltd
or
inc
and
xchg
xchg
repnz
sbb
je
adc
cmp
sub
lock
dec
xchg
cltd
jb
push
test
test
inc
push
add
cmp
mov
inc
xchg
addr16
inc
sbb
jecxz
arpl
mov
in
ret
pop
cltd
jns
sbb
cwtl
repnz
add
in
push
add
pop
mov
xor
pop
push
ds
bound
cmp
iret
push
adc
dec
mov
stos
imul
in
jnp
push
add
incl
loop
idivl
push
shlb
push
je
add
sbb
pop
rcrl
out
xor
popf
ljmp
push
or
test
mov
mov
rorb
imul
ljmp
sub
lods
xchg
pushf
sbb
pop
pop
mov
hlt
pcmpeqb
push
jo
push
shl
je
mov
inc
mov
scas
xchg
and
into
out
pop
outsl
mov
inc
in
xor
mov
add
xchg
xchg
lcall
dec
cltd
adc
push
lahf
shll
icebp
mov
jb
pop
jno
or
jmp
out
xor
mov
loope
xor
add
mov
cmp
addr16
cmp
xchg
aas
and
cld
xchg
push
and
inc
data16
and
adc
cmp
jl
cmp
leave
outsb
dec
fmul
popa
sub
cmp
lock
inc
lods
in
jns
pop
popf
sbb
inc
mov
push
popf
pop
bound
mov
pop
lock
clc
cltd
jecxz
mov
lret
ds
xor
sub
push
dec
jae
cmc
jae
dec
xor
popa
out
xor
ja
xchg
sub
sbb
push
insb
outsb
add
ljmp
xchg
adc
jmp
adc
push
mov
push
xlat
insl
sbb
inc
or
adc
in
cld
and
in
and
mov
scas
xor
imul
xor
adc
out
push
lret
dec
rcrl
inc
test
fwait
push
clts
ja
xchg
and
clc
mov
adc
push
mov
lahf
fsts
push
or
sti
movsl
xor
push
mov
loope,pn
pop
mov
sub
mov
or
test
push
push
mov
pop
and
test
fisubrs
jp,pn
jl
ss
pushf
inc
xor
mov
shl
jl
and
cwtl
dec
mov
imul
cld
test
ret
inc
add
mov
dec
fdivl
and
rcrb
inc
xchg
lahf
or
cld
push
jg
mov
leave
addl
or
filds
fcompl
shll
sbbl
xor
shrl
imul
sbb
out
sbb
fisttps
xchg
push
arpl
andb
test
test
pop
xchg
pop
mov
stos
inc
push
cwtl
adc
xchg
hlt
out
inc
pop
xchg
inc
cmpsl
fiaddl
xor
clc
jmp
sub
pop
fwait
adc
imul
and
js,pn
stos
rolb
aad
clc
test
mov
imul
cli
push
mov
fisubrs
fildl
add
in
cli
xchg
or
iret
mov
fldcw
mov
imul
jecxz
iret
push
jb
push
push
ret
adc
add
test
mov
and
std
adc
inc
mov
daa
cmpsb
adc
into
jne
mov
push
fwait
push
sbbl
push
das
jno
xlat
out
and
jne
lahf
mov
test
jp
sbb
repnz
outsb
adc
jno
cmpsb
sbb
jbe
lea
add
enterw
stos
loopne
lods
mov
clc
inc
push
add
outsl
cmpb
gs
mov
daa
jae
lahf
push
addr16
mov
lea
cltd
inc
xchg
mov
lahf
in
fcmovbe
out
stos
pop
mov
dec
icebp
jecxz
mov
cld
push
add
and
add
push
subb
cmp
fnsave
hlt
jp
dec
mov
call
fbstp
mov
cmp
dec
xor
add
mov
lcall
insl
jb
or
dec
test
push
and
pop
cli
xchg
in
int
enter
mov
fsubr
das
pop
pushf
lret
arpl
aam
mov
jae
out
xor
jno
sbb
addr16
mov
cltd
xchg
jge
test
dec
out
fcmovu
lds
inc
testb
fsubrp
push
and
mov
jmp
aam
cmc
jae
das
lcall
cmp
icebp
xchg
add
icebp
jns
fldt
scas
adc
add
push
xchg
test
aas
movsl
and
add
mov
test
les
fistl
cmpsl
xchg
shl
sub
out
in
cmp
xor
cmp
testb
call
cli
cmp
aas
ret
pop
data16
add
sbb
xchg
fcomps
ja
outsl
mov
rol
stos
dec
jno
stc
cld
addr16
in
ret
rclb
push
cmp
dec
pop
and
adc
js
ficoms
aas
add
cmp
fimuls
daa
push
pop
push
mov
popf
xchg
pop
int
dec
add
mov
jle
cmp
sbb
jge
xchg
jns
popf
dec
subb
popa
mulps
jmp
into
lock
imul
int3
call
lahf
pop
pop
mov
repz
pop
inc
dec
out
outsb
insl
sub
popl
pop
rorw
lahf
je
xchg
lea
fdivrs
xchg
shrl
ja
dec
popa
or
fsts
ret
push
test
lods
xchg
in
aad
push
insl
mov
push
cmp
mov
mov
out
stos
repnz
mov
icebp
push
fsubrs
inc
jp
mov
mov
jg
push
sub
jae
out
loopne
out
mov
lcall
scas
mov
mov
cmp
pop
test
idiv
repnz
mov
loope
roll
addr16
mov
jmp
movsb
cmp
jp
pop
ja
jo
jl
mov
push
adc
add
push
pop
mov
adc
std
into
sbb
aad
stc
fisttpl
mov
cld
mov
xor
std
jbe
xchg
test
push
dec
add
cmp
std
xchg
loope
shrb
jb
imul
mov
addr16
and
sbb
mov
sub
mov
ror
jecxz
inc
xchg
insb
cmpsb
andb
cmpsl
fs
mov
mov
in
adc
lods
in
add
sbb
shrb
mov
pop
add
enter
mov
outsb
xchg
adc
not
adc
cmpsb
or
ss
fisubrs
loope
stc
pop
aaa
pop
icebp
mov
adc
cltd
popf
xchg
je
mov
lret
and
js
sbb
ds
scas
lds
dec
cli
int
lret
sbb
add
ret
call
insb
imul
push
sub
aad
inc
into
cli
lret
insl
sbbl
ljmp
jle
pop
repnz
xchg
incb
movsb
out
roll
pushf
push
dec
ljmp
popa
aam
pop
std
arpl
and
jecxz
fstpl
insb
or
jge
es
jbe
daa
movb
fadd
or
jp
and
xchg
aas
pop
bound
jl
cmc
pop
and
xorl
mov
pop
loopne
dec
lret
xor
test
outsl
mov
inc
adc
data16
cmpsl
mov
xor
xchg
xchg
jg
cwtl
test
mov
mov
cmp
add
cmp
mov
cmp
jmp
pop
shl
push
ret
popf
mov
lret
lock
enter
gs
cmp
fmull
es
mov
push
xchg
pusha
push
insb
mov
fwait
in
vmread
xor
sbb
pop
lcall
push
push
test
add
push
mov
orl
push
mov
iret
cmp
mov
jnp
cmp
xor
xor
movsb
xor
jmp
leave
cmpsl
jae
dec
cltd
test
popa
mov
mov
cli
insb
nop
mov
jp
sub
sub
in
sub
popf
jl
insl
aas
jo
insb
pusha
sahf
cmc
fsts
sub
inc
arpl
adc
inc
pop
roll
mov
popa
dec
repnz
inc
pop
push
in
fistl
ja
das
sub
or
push
sbb
aas
dec
mov
shll
pop
aas
test
sub
mov
pop
mov
and
in
sub
into
lret
and
xchg
inc
inc
inc
adc
pop
adc
imul
push
lock
or
daa
mov
cmp
mov
xchg
jno
pop
add
push
xor
lcall
mov
push
ja
loopne
lret
sub
or
int
xor
aaa
popa
xor
cmpb
popf
xchg
push
add
dec
xor
add
in
mov
jecxz
and
add
inc
add
in
or
pop
push
lds
out
outsl
cmp
repnz
push
pop
dec
jle
xchg
out
and
jae
leave
inc
inc
lahf
adc
jl
adc
mov
sub
inc
jae
dec
and
aad
jbe
sarl
ficompl
or
jecxz
and
gs
pop
mov
adc
pop
dec
sahf
mov
jnp
adc
stos
subl
sub
mov
ljmp
cmpsl
sbb
aad
frstor
inc
jl
jp
dec
jp
flds
jnp
filds
mov
push
inc
ljmp
push
sbb
imul
xor
cwtl
filds
adc
stos
xor
add
sbb
dec
xor
jae
cmpl
lods
hlt
pop
and
nop
ss
bound
aad
loope
cmc
test
mov
inc
fsubr
arpl
push
mov
cmpsb
push
jne
movsb
inc
scas
leave
imul
cmpsl
and
push
repnz
int3
xlat
mov
sub
dec
mov
mov
dec
mov
ds
xchg
sub
popf
inc
sbb
mov
and
cmp
clc
pop
int
lcall
fimuls
xchg
pop
loope
aas
enter
lahf
xor
repnz
ds
clc
test
repnz
imul
sub
mov
sbb
repz
lcall
xor
or
xor
or
in
sti
cs
mov
xor
dec
mov
stc
and
pop
pop
pop
or
shlb
mul
bound
pusha
sub
pop
sub
mov
mov
dec
xchg
or
xchg
sub
or
mov
mov
ja
push
insl
loope
jne
mov
mov
push
cmp
movsl
sti
pop
in
and
pop
stos
pop
xor
inc
xchg
lea
rorb
mov
in
nop
rclb
push
mov
cmpb
int
adc
ficoms
mov
or
dec
arpl
enter
push
shrb
fisubrl
lods
lret
test
ss
inc
jbe
test
mov
fsub
pusha
jo,pn
repnz
repz
sub
push
nop
mov
or
inc
adc
cs
mov
xor
mov
leave
mov
cmc
push
inc
xor
les
push
lret
frstor
fidivs
addr16
adcl
pop
mov
cs
or
mov
xor
adc
loope
test
mov
push
pushl
repnz
jns
inc
mov
xor
int3
fscale
shrb
and
fstl
adc
fs
loopne
roll
ja
cmpsb
cmp
mov
cmp
in
test
roll
pusha
mov
mov
addr16
push
cmp
mov
imul
mov
movsb
es
push
vunpcklpd
mov
fld
inc
xor
enter
test
pop
aaa
dec
lret
rcrl
fcmovnbe
lock
outsb
jecxz
xchg
jb
add
ds
ret
shl
pop
scas
lcall
pop
jne
sub
data16
js
mov
enter
or
imul
je
jbe
xchg
lcall
in
orl
jb
push
mov
adc
mov
test
xchg
je
sbbb
add
rcl
test
mov
adc
and
and
cli
loop
paddd
lods
lcall
adc
push
mov
and
cmp
dec
jp
lds
packsswb
mov
xchg
gs
push
mov
push
mov
mov
imul
xchg
push
lds
pop
mov
test
xor
mov
mov
push
push
jge
out
leave
xchg
push
movzwl
add
ror
sbb
xchg
int
pop
cmp
and
jmp
jno
scas
mov
out
jecxz
cmp
inc
popa
push
adc
inc
cltd
aad
out
xchg
cmp
cmp
mov
dec
jge
cld
pop
cmc
adcl
lcall
jnp
cmp
add
fldcw
fdivl
push
cmp
mov
mov
cltd
cwtl
sub
mov
mov
mov
and
dec
pushf
daa
movb
insl
dec
imul
push
insb
and
mov
jmp
test
dec
pop
xchg
xchg
push
arpl
mov
and
push
fucom
stos
push
and
mov
lea
jp
in
das
stc
lods
fsubl
dec
cwtl
add
loop
or
add
ds
call
sti
dec
pop
outsl
adc
rcl
lcall
cli
add
pop
push
xchg
in
add
xchg
out
push
xchg
fdivrs
inc
pop
inc
into
jbe
xor
insl
inc
fcomi
in
cmc
lea
push
adc
jecxz
mov
or
cmp
loop
add
xor
outsl
movsl
or
mov
mov
rcl
repz
lahf
cmp
repnz
mov
pop
sub
cmpsb
aad
aas
adc
mov
call
sub
sbb
jb
add
push
push
fld
stc
test
daa
fs
pop
push
in
iret
insl
enter
mov
mov
mov
push
movsl
pop
and
jo
ja
xor
std
inc
mov
pushf
dec
fstpl
xor
or
rcrb
pop
shll
push
fstp
hlt
inc
popf
imul
cltd
ret
jns
xchg
mov
sub
mov
jo
sbb
cmpsl
popa
jb
test
loope
push
shrb
les
out
mov
push
xchg
outsb
pop
mov
movsl
sarl
mov
loopne
loope
pushf
pop
xchg
jl
cmp
push
dec
mov
push
movsb
in
add
dec
data16
push
ss
jo
dec
push
push
add
ja
mov
mov
in
inc
call
mov
xchg
and
pop
les
into
mov
outsl
loopne
imul
bound
test
pusha
xchg
adc
cltd
cmp
ret
cmp
pop
inc
add
mov
lahf
pusha
icebp
jecxz
jns
lahf
shrl
frstor
aaa
xchg
cmpsb
mov
call
out
add
int3
aaa
sub
mov
je
sbb
sub
enter
lods
fs
cmc
out
mov
popa
and
mov
repnz
push
dec
cmp
sbb
xchg
xchg
aam
jb
mov
push
int3
sbb
mov
cmp
cmp
ds
mov
push
mov
pusha
aam
xchg
jbe
loopne
jne
lcall
inc
cwtl
pushf
or
jmp
insl
pop
data16
jbe
pop
xchg
add
pushf
dec
test
mov
ds
insb
lret
fsubrl
push
inc
loope
push
dec
lret
adc
xchg
push
mov
outsl
mov
leave
and
push
pop
je
out
mov
or
movsw
stos
jge
mov
in
outsl
std
mov
dec
and
loopne
push
les
mov
jne
ja
aam
xchg
cltd
and
inc
mov
daa
shll
sbb
out
cmpsl
repz
shl
push
sbb
lcall
dec
xchg
mov
outsl
rcrl
push
aas
jne
jns
out
or
test
cmp
hlt
cmpsl
in
shrb
nop
push
adc
roll
push
js
repnz
dec
aas
inc
scas
pop
xchg
lcall
sbb
push
and
fldenv
fcmovb
mov
pop
inc
jno
pop
mov
loop
mov
lods
and
dec
mov
mov
dec
jae
mov
sbb
dec
mov
mov
int
cmp
sbb
hlt
fwait
enter
stc
mov
or
mov
test
inc
shlb
or
faddl
sub
dec
icebp
mov
adc
cmp
adc
xchg
xor
sar
xchg
xor
pop
push
pop
cli
lret
sbb
pop
nop
test
int
mov
push
leave
mov
sub
cmp
and
outsb
mov
shrb
push
jb
cmp
or
push
mov
aas
imull
imull
cld
andb
orl
sar
pusha
push
enter
movd
mov
jnp
push
mov
ficompl
out
aam
fisubrs
rclb
ds
jl
test
dec
lcall
pop
xchg
push
das
inc
xchg
xchg
push
mov
scas
pop
icebp
lret
in
add
cli
addr16
cmpsb
outsb
adc
pop
adc
jbe
cltd
cmpsl
adc
insl
and
ds
ret
mov
xchg
out
mov
lea
mov
imul
lock
roll
hlt
les
mov
push
push
sbb
js
adc
xchg
std
inc
pop
adc
popf
lods
popf
mov
sahf
lods
sbb
mov
les
cwtl
jno
insl
iret
jns
mov
pop
out
xor
mov
mov
sbb
movsb
cmpsl
sub
fsts
aaa
adcb
mov
mov
jl
fsubrp
fldt
and
repnz
call
or
aas
in
cmp
jle
cmp
cmp
inc
mov
xchg
loopne
aaa
dec
test
and
jecxz
xchg
popa
pop
and
sti
int3
fmull
inc
jmp
mov
adc
xor
aad
enter
cmpsb
lds
sub
push
push
shrb
pusha
hlt
sub
push
push
xor
xor
mov
incb
das
arpl
mov
movsl
es
add
sti
iret
adc
adc
loope
dec
mov
add
cltd
sbb
rcr
mov
clc
sti
pop
or
mov
ljmp
scas
repnz
push
ret
jns
in
cmp
movsl
imul
jb
inc
jnp
les
cmp
pop
aas
cmpsb
ret
rclb
add
addb
mov
xchg
lret
inc
sahf
fwait
leave
arpl
mov
mul
subl
push
cmp
scas
iret
xchg
fisubrs
int3
add
xchg
test
mov
jle
js
lahf
rcr
lahf
das
adc
sbb
or
mov
fisubs
jns
pop
mov
rclb
dec
xchg
mov
cmp
xchg
or
jmp
jle
mov
pop
lock
xchg
cmp
adc
pop
movsb
push
hlt
cmp
sub
dec
mov
hlt
faddl
std
jb
mov
stc
pushf
xchg
sub
out
push
sahf
jns
movsl
cmp
fcomip
push
inc
xchg
lcall
adc
icebp
pop
fnstenv
push
dec
mov
cmp
xchg
imul
jecxz
addl
sub
lret
mov
adc
int3
xchg
xor
cmp
jmp
daa
push
dec
pop
into
sbb
test
or
fstps
xor
repnz
mov
fs
data16
addr16
repz
outsb
push
fstpt
gs
xlat
push
jne
sbb
in
nop
call
flds
dec
or
mov
std
stos
xchg
gs
iret
sbb
and
in
add
scas
mov
pop
sbb
or
xchg
in
pop
sbb
and
pop
and
jl
out
add
sti
fsubrp
sub
sahf
mov
push
xchg
aad
jno
jae
pop
lcall
in
and
call
test
push
push
out
xchg
ret
addr16
pop
into
addr16
fisubrs
jmp
fs
lahf
scas
sub
call
fst
lea
xchg
cli
cmp
aam
or
push
push
jl
pop
inc
insl
fs
cmp
outsb
je
mov
out
ret
sti
mov
sbb
in
in
xchg
cmp
mov
das
bnd
in
in
sub
xchg
test
xor
test
push
pop
dec
mov
push
push
ret
cmpsl
rcl
cli
inc
aam
in
popa
jmp
push
fnstcw
sub
mov
ret
mov
and
aaa
dec
movsb
xchg
repz
lea
push
jg
or
rcrl
sbb
repnz
call
inc
push
sahf
je
xchg
mov
out
mov
mov
push
lahf
push
enter
or
sbb
jns
aaa
lcall
jbe
mov
out
out
pop
lea
jge
sbb
ret
adc
inc
bound
out
mov
xor
pop
cmpsb
ljmp
frstor
scas
hlt
pop
jns
stos
mov
test
and
gs
push
popf
pop
push
xchg
ljmp
push
xchg
out
add
orb
xor
cmp
movsb
sahf
testb
in
aam
sub
sar
ror
xchg
and
sub
sub
pop
xchg
in
dec
scas
mov
repz
cmp
cltd
je
imul
data16
add
jno
pop
mov
jnp
dec
or
sub
add
jbe
lahf
jmp
sbb
repz
inc
and
push
int3
fwait
sbb
sub
js
lret
adc
push
test
lcall
and
cld
jp
xchg
pop
int
mov
scas
repz
jl
lea
mov
mov
es
filds
xor
sbb
sbb
cwtl
cmp
cmp
cmp
andl
add
mov
mov
rclb
pop
icebp
popa
das
cmpb
shrl
sub
xor
movsb
imul
dec
pop
dec
outsl
aaa
inc
cwtl
jae
or
inc
mov
cmovge
inc
lcall
dec
in
mov
in
adcb
add
fcomi
sbb
stos
scas
lahf
xchg
inc
and
fwait
and
fiadds
xchg
cs
jmp
aaa
rol
push
repnz
pushf
and
lods
rorl
xlat
loop
sub
adc
scas
shlb
out
scas
pop
cwtl
roll
adc
sbb
gs
loop
mov
das
inc
mov
test
daa
outsb
xor
xor
mov
mov
xorl
adc
sti
arpl
mov
lock
std
roll
out
sub
mov
dec
dec
dec
push
flds
nop
jbe
dec
push
dec
imul
test
addr16
cwtl
arpl
aaa
sbb
std
sub
mov
flds
adc
lds
lods
in
or
cmp
repz
dec
sti
cmp
push
sub
mov
fsubl
pop
and
stc
shrl
cmp
shr
insb
cli
mov
cli
mov
mov
and
imul
fs
loopne
mov
ja
sbb
push
jg
fcomps
xor
cmpsl
xor
pop
movl
xchg
ss
or
gs
shll
cmp
jmp
mov
dec
or
enter
mov
mov
add
jbe
xor
lea
jno
lods
dec
pushf
js,pn
cmp
icebp
clc
sbb
mov
push
push
jp
pop
sbb
mov
outsl
jl
mov
pop
mov
xor
mov
or
inc
arpl
pop
stos
cmp
xor
loopne
mov
incb
in
jecxz
mov
mov
ljmp
sub
xchg
jmp
dec
and
rcr
push
les
cli
daa
in
orb
jecxz
cmp
pop
fwait
xor
stc
mov
fs
push
lcall
packuswb
or
or
mov
fisubl
dec
fdivrl
mov
sub
add
or
out
lcall
cmpsb
or
push
mov
fldt
push
push
movl
enter
sbb
mov
adc
es
inc
fiaddl
nop
push
dec
sub
add
ja
fs
or
mov
gs
mov
stos
pop
cmp
sub
mov
add
lret
cmp
shrl
adcb
jg
jns
mov
fmuls
rcr
lahf
jns
pusha
cmp
js
int
out
nop
or
addr16
int3
je
fs
xor
lds
or
test
fdivrp
cmp
es
ss
divb
xchg
jecxz
add
push
das
dec
push
mov
xor
ja
fs
xchg
cmp
fcmovbe
dec
or
scas
dec
inc
push
dec
mov
outsb
fstpl
pop
xchg
fsub
fcoms
inc
jge
fcoms
cmpsl
and
cmc
fnstenv
push
outsl
es
jns
cmp
cli
std
push
or
outsl
inc
jb
rorb
inc
push
xor
stos
push
adc
clc
xlat
adc
dec
adc
push
jne,pn
sbb
enter
out
cmpsl
jnp
xadd
jp
fisttpl
adc
inc
jno
cmp
test
out
push
daa
lods
and
dec
mov
mov
loop
mov
push
loope
jmp
adc
imul
js
xor
inc
add
out
pop
add
adc
clc
jo
sub
fisubrl
jo
dec
sbb
cmp
lcall
pop
sbb
in
push
push
int
xlat
push
push
xorb
shrl
xchg
cwtl
scas
and
inc
and
fists
mov
hlt
movsl
sbb
lret
pop
mov
int3
cs
jnp
cmp
test
aam
mov
push
leave
mov
les
pop
sbb
aas
xchg
inc
enter
adc
fs
or
add
mov
fsubr
icebp
das
sbb
stos
insb
out
xchg
mov
pushf
es
fildll
movsb
sar
into
add
jle
pop
call
aaa
jne
daa
inc
lret
in
stos
cmp
pusha
loopne
dec
xor
testb
cmc
pop
ja
sub
fnsave
cmp
or
xchg
push
add
into
sub
out
mov
mov
or
xchg
cwtl
add
sahf
cmpsb
movb
pop
lods
jae
xlat
push
jae
mov
pop
out
adc
addb
data16
aaa
pmulhuw
dec
inc
rclb
and
sbb
add
shll
arpl
mov
out
pop
mov
lret
leave
rep
push
sahf
repz
sarl
cmpb
add
and
icebp
add
jmp
outsb
scas
push
lds
ficompl
fiaddl
cld
mov
or
pop
shrl
stos
adc
push
lret
add
xor
loop
adc
add
mov
stc
mov
loop
mov
ret
push
es
das
jp
mov
stc
mov
add
and
mov
and
pushf
jle
outsb
je
stos
xor
sbbb
in
inc
imul
call
dec
loope
pop
stos
outsl
cwtl
xchg
mov
dec
outsl
sub
fwait
fwait
adc
mov
sahf
pop
ja
mov
idivl
jbe
sub
bound
mov
xchg
push
imul
xor
mov
add
in
inc
in
lock
inc
call
addb
loopne
in
pop
adc
fwait
mov
mov
fs
fdiv
inc
test
dec
cld
in
sbb
loope
dec
push
pop
lea
and
xchg
mov
mov
ret
insb
push
scas
sti
pop
and
xor
xchg
cmc
cmp
fildl
lea
sbb
push
mov
lret
inc
fs
pop
pop
ss
pop
xchg
iret
jg
jg
sti
jnp
jg
cmpsl
hlt
in
outsb
fiaddl
sti
arpl
sub
lods
inc
sbb
clc
inc
aad
dec
test
xor
mov
and
pop
jb
cmp
aaa
pop
out
fidivrs
pop
dec
pop
pop
push
je
scas
adc
adc
rcrl
test
cmc
cli
or
push
and
cmpsl
xchg
lods
mov
stos
lcall
xchg
jns
xor
mov
inc
aaa
stc
mov
pushf
dec
inc
inc
cmp
dec
push
movsl
sub
lret
sahf
fimuls
and
testb
je
push
lds
add
lock
sub
jmp
mov
xchg
mov
out
mov
and
jmp
cltd
pushf
outsb
scas
xlat
adc
push
fistl
mov
add
outsl
divb
aad
daa
test
jo
mov
pop
sarl
les
pop
test
imul
cli
jb
in
push
test
gs
mov
outsl
dec
add
adc
loope
dec
jge
ja
add
ljmp
icebp
cli
xor
in
and
ja
mov
addr16
rcrl
leave
fdiv
fsubr
out
xchg
cs
xchg
mov
loop
sub
pushf
jnp
ret
aad
mov
push
jae
fcmovu
push
xor
push
add
inc
dec
jmp
mov
aad
fdivs
fdiv
ret
push
sbb
scas
outsb
mov
test
test
push
in
scas
jns
xchg
sub
in
xchg
mov
out
fiadds
hlt
repnz
or
in
into
cld
aad
inc
jp
fstl
fisubs
stos
cli
je
push
jl
sbb
rol
inc
sahf
or
jp
fwait
mov
lock
add
xchg
jl
sbb
imul
jp
icebp
clc
mov
loopne
xchg
cli
xchg
call
or
dec
cmp
cltd
sbbl
dec
adc
movsb
mov
or
pop
inc
and
test
mov
in
movsl
scas
insl
aad
in
mov
jecxz
pusha
cmp
movsl
mov
dec
mov
fstpl
test
xchg
jno
test
and
push
jbe
sub
scas
repnz
mov
jecxz
lods
inc
ret
dec
fstpl
mov
popa
xchg
cmp
pop
push
mov
add
or
and
jne
sub
out
pop
sbb
movsb
dec
std
test
or
mov
mov
imul
mov
fisttpll
daa
mov
mov
nop
scas
and
clc
mov
xlat
lret
cmpsl
ljmp
ret
pushf
mov
aam
int
clc
stos
and
mov
rdtsc
mov
cmpsl
inc
clc
xchg
shlb
insb
fidivl
lahf
lock
int3
adc
mov
rorl
outsb
aas
and
rcrl
insl
jb
test
repz
push
xchg
pushf
xchg
shr
leave
xchg
xlat
xor
and
mov
icebp
push
insb
jle
pusha
pop
divb
outsl
ret
adc
negb
fwait
xor
push
lret
cmpsb
pop
jno
outsb
test
imul
fbstp
sub
hlt
repz
ficoml
outsl
add
fwait
dec
adc
jg
rol
fstps
jns
adc
inc
add
adc
push
insb
loopne
xlat
mov
nop
in
lret
movsb
push
and
cli
inc
adc
and
lahf
inc
cltd
xchg
ret
int
int
cmpsl
mov
addl
in
push
stos
lcall
popf
dec
mov
mov
popa
sbb
jmp
jl
jne
notl
hlt
outsl
leave
lock
mov
xchg
loopne
lds
and
into
push
mov
add
clc
pop
mov
in
cmp
inc
mov
fldt
sahf
and
sub
fwait
or
pop
and
dec
push
jbe
xchg
aaa
in
arpl
push
cmp
adc
ret
cs
movsb
ja
outsl
out
add
stos
jne
pop
mov
sub
cmp
cmpsb
push
ret
aas
testb
insb
into
out
push
fs
push
mov
xchg
sbb
iret
movsl
shlb
push
sti
lret
pop
sbb
mov
in
in
adc
sbb
mov
inc
aas
and
aam
dec
cmp
cmpb
sub
add
test
sahf
xchg
clc
mov
iret
adc
ret
dec
shll
push
inc
jle
mov
aas
es
pop
mov
aad
comiss
mov
mov
hlt
cmc
and
subl
mov
cmpsb
out
test
mov
pop
nop
popa
scas
std
clc
inc
clc
mov
push
mov
shrl
xor
mov
and
mov
fcompl
insb
cld
sub
mov
outsl
movsb
cmp
inc
sub
es
jge
adc
cmp
sub
cwtl
loope
daa
push
xor
test
pop
add
inc
cli
fidivs
arpl
and
lods
pop
addr16
and
lcall
ja
cmp
divl
inc
imul
sub
fimull
addr16
push
data16
or
push
repnz
push
mov
pop
lea
imul
test
leave
cmp
sahf
ss
mov
mov
mov
dec
fldenv
pushf
and
mov
pop
or
lret
mov
xor
and
scas
mov
adc
das
mov
cltd
cmp
xor
mov
sbb
andl
jb
jle
add
out
cmpsl
pushf
xchg
xor
iret
sub
inc
cmp
outsb
into
push
sbb
fwait
push
sahf
aam
hlt
mov
xchg
and
cmp
xorl
cwtl
sbb
mov
in
je
or
or
and
stc
jne
adc
pop
jmp
icebp
inc
mov
movsl
je
test
mov
ret
movsl
push
sarl
add
adc
push
dec
jge
lahf
stos
enter
imul
test
out
aas
push
hlt
repnz
push
mov
insl
cmc
push
fwait
shlb
fsubp
or
inc
xchg
push
mov
or
mov
loopne
pop
lds
orb
lret
ret
or
ljmp
rcr
xor
addb
or
xchg
push
xchg
loop
and
subb
inc
mov
inc
cmp
xor
out
mov
hlt
in
push
sbb
cld
xchg
adc
push
cmp
xchg
dec
push
inc
fldl
cli
clc
icebp
ds
cmpxchg
cmp
or
cmp
lcall
nop
je
clc
mov
jl
xchg
cmp
mov
out
inc
mov
push
xchg
mov
or
xlat
xor
popa
xchg
dec
adc
loope
into
cmp
cli
mov
mov
xchg
lret
or
xor
jle
cmp
mov
scas
inc
and
int
fs
lahf
inc
repnz
inc
icebp
fsubl
je
lahf
push
scas
jp
jno
mov
mov
push
pop
pop
inc
outsl
push
cmpsl
xor
sbb
mov
loope
int3
ss
hlt
mov
pop
icebp
dec
push
lock
gs
mov
aas
xchg
cmpsl
lds
cmc
stos
jae
je
fildll
inc
sahf
arpl
sbb
jno
cmp
ljmp
mull
xchg
call
cmpsb
or
jp
arpl
orb
lret
fiadds
rorl
ret
fcoms
pop
xor
jg
xor
stc
jg
stc
pop
rorb
fldt
test
in
mov
jecxz
sbb
sbb
out
lods
clc
iret
stc
les
into
icebp
push
mov
iret
adc
inc
cld
cmp
in
xchg
sbb
jg
rcrb
mov
inc
fiadds
or
lods
and
push
cmp
popa
sahf
xor
mov
movsl
cmp
xchg
int3
or
aas
aad
jns
mov
sbb
test
mov
shll
push
les
loop
lea
cmp
imul
xchg
sahf
inc
and
mov
or
fdivrl
jp
pop
mov
fdivl
xchg
dec
xchg
pcmpgtd
andb
js
pop
jl
adc
js
inc
lock
dec
xchg
popf
pushf
repz
loope
pusha
gs
and
outsl
push
push
cwtl
pushf
loop
jge
daa
inc
pushf
xor
ljmp
nopl
icebp
bound
ret
leave
ja
cmc
in
fwait
mov
in
push
sarb
push
stos
aad
push
fxch
mov
jo
xchg
and
cmp
mul
dec
sahf
or
out
mov
in
nop
xorl
inc
jg
jge
pop
iret
xlat
pop
pop
xchg
sbb
mov
push
outsb
sub
out
xchg
and
sub
out
cld
jnp
xchg
fldt
int3
sarl
xor
lods
loopne
pop
insl
insb
and
push
cmpsb
shl
push
es
mov
jns
add
mov
pop
lods
xchg
cmp
lahf
xor
cmpsb
into
jge
negl
lea
or
inc
mov
imul
gs
loopne
cmp
adc
sbb
xchg
dec
repz
enter
cmp
mov
in
and
xor
insb
xchg
push
loopne
iret
xchg
arpl
xchg
into
cmp
dec
push
outsl
fcmovnbe
popa
push
lds
adc
jecxz
test
push
dec
ficompl
lods
and
sbb
mov
mov
mov
pop
stc
mov
stos
mov
mov
idivl
inc
xor
jecxz
sbb
jne
mov
mov
mov
bound
cli
icebp
mov
lcall
insl
xor
test
ljmp
cmp
dec
ljmp
addr16
pop
pop
and
sbb
scas
out
push
lods
xor
add
push
roll
mov
lock
dec
pop
lods
cld
mov
mov
mov
ret
adc
stos
pop
dec
imul
aad
pushl
inc
out
mov
hlt
rol
dec
icebp
push
pop
or
mov
bound
mov
jg
int3
nop
mov
dec
fwait
mov
subl
sbb
jecxz
cmp
xor
adc
adc
jecxz
xor
repz
stos
and
jbe
or
lods
push
push
test
pushf
ret
pop
pop
cltd
cld
cwtl
sub
xchg
std
sub
dec
int
inc
xchg
repnz
xchg
pushf
scas
ljmp
lock
pop
mov
mov
xor
repz
sbb
rolb
pop
sahf
aad
fdivrs
aas
adc
ljmp
and
jns
jl
rorl
cmc
movsl
jb
pop
jbe
push
aas
add
mov
and
mov
dec
jbe
adc
jecxz
popa
mov
sub
dec
daa
pop
push
cmc
lret
insb
inc
fnstenv
jne
jle
ficompl
shll
leave
and
mov
jns
xchg
mov
cmp
cs
or
adc
xor
dec
push
jle
cmp
mov
outsl
popf
mov
xor
in
je
mov
outsl
add
subl
and
ret
mov
or
adc
jno
mov
xlat
loop
outsl
jns
dec
xchg
mov
jge
adc
testb
xor
mov
cmc
or
pop
or
inc
jnp
sti
pop
ret
scas
call
sbb
mov
cltd
dec
jl
pop
pop
lods
xor
loopne
xor
mov
mov
dec
pop
push
adc
mov
hlt
int
pushf
cs
mov
and
popa
rolb
hlt
nop
sti
pop
das
jns
pop
jae
or
mov
in
add
call
cmp
arpl
jne
subb
cli
mov
movsl
sub
xchg
into
inc
mov
jmp
rorl
fnstcw
test
cltd
ficoms
inc
sbb
out
or
test
lret
xchg
mov
pop
fcomps
inc
mov
aam
imul
imul
adcb
cmp
aad
ret
inc
cmp
incb
rcll
jl
xchg
sbb
inc
test
sbb
ficoms
aas
not
push
cmpsl
mov
shll
ja
stc
pop
cli
jle
hlt
pop
jb
mov
shll
jo
lods
shlb
and
sbb
ret
add
xchg
daa
das
or
js
push
sub
sti
push
movsl
adc
out
int3
in
sbb
mov
mov
mov
jb
lret
push
sub
sub
es
pop
pushf
ror
adc
cmp
cli
inc
sbb
in
inc
add
idiv
bound
jl
outsb
jl
adc
push
mov
mov
jb
adc
iret
dec
hlt
jno
scas
xor
mov
sbb
lret
test
cmp
stos
mov
pop
push
adc
push
lret
xchg
mov
fwait
stos
sbb
inc
fcoml
add
popa
shlb
mov
dec
jg
in
inc
adc
iret
cmp
jp
pushf
leave
mov
push
test
xchg
cmc
setne
inc
mov
jg
ss
jnp
lret
sub
ds
or
or
leave
xchg
fiaddl
sbb
mov
push
and
mov
sub
std
cmc
inc
mov
adc
add
inc
pop
gs
hlt
iret
and
and
insl
outsl
cmp
jbe
pop
roll
inc
test
into
sbb
fs
fists
notb
cwtl
mov
pushf
sahf
push
daa
adc
add
fldcw
enter
push
adc
mov
nop
test
mov
data16
sarb
pusha
jae
aas
out
inc
out
rorl
inc
add
add
mov
push
les
insl
sbb
pop
mov
fdivr
dec
mov
mov
jns
add
das
jp
pushf
fisttpl
dec
adc
out
push
push
jbe
mov
imul
scas
cmp
in
jl
imul
ss
dec
cs
fsubrl
popa
icebp
pop
subl
cmc
and
movsb
pop
sahf
push
sub
insl
sahf
pusha
icebp
test
loopne
mov
clc
fucomi
test
lds
gs
push
lcall
or
sub
lret
pusha
and
mov
cmp
pop
mov
stc
dec
pop
aam
jl
ret
add
fidivl
xchg
out
mov
imul
add
mov
sub
inc
rcr
pop
pop
xchg
in
dec
adc
jo
cmp
insl
add
pop
adc
and
fnstsw
cmp
jp
mov
icebp
jns
insb
repnz
push
pop
or
fisubs
xchg
xor
stos
negb
push
dec
jmp
loop
and
jl
pop
fistps
mov
fbld
lds
pop
xchg
xchg
cltd
rcl
mov
aad
mov
fldcw
jbe
jo
sub
addr16
or
std
fadd
mov
adc
inc
jmp
mov
jne
notl
movsb
inc
dec
aad
test
or
mov
pop
imul
andb
xchg
mov
aad
or
xor
lcall
mov
rcll
mov
mov
test
lock
rcll
xor
nop
loopne
mov
jbe
xchg
pop
push
data16
out
xchg
addr16
scas
xchg
mov
sbb
jo
push
jbe
pop
adc
stos
loopne
mov
jl
adc
test
pop
and
shlb
je
cmc
or
shr
pop
inc
mov
adc
repz
dec
and
lret
pop
mov
xor
test
cmpsl
mov
sbb
fdivp
shr
enter
or
into
rcll
and
outsb
cmp
and
sub
lret
test
jo,pn
popf
jbe
ffree
mov
mov
jno
fisubs
lock
int3
mov
js
rclb
es
enter
mov
sarl
lods
js
pop
mov
sahf
adc
je
ret
push
int3
and
cwtl
loope
in
xor
fists
mov
fstp
push
int3
std
cwtl
inc
xlat
xor
clc
test
sub
idivb
mov
dec
fisttpll
cld
das
outsl
lods
mov
cmpsl
dec
and
aaa
ficompl
popf
mov
outsl
xchg
sub
sbb
xor
addr16
sub
int3
jno
sub
push
push
cltd
into
pop
jp
mov
inc
stc
lock
mov
outsl
call
ret
push
xchg
pop
movsl
fsubrl
in
inc
les
jno
orb
movsl
negl
adc
xchg
out
movsb
mov
mov
adcl
jnp
stc
dec
call
and
stos
mov
add
sbb
ret
roll
filds
in
mov
lods
imul
pop
xchg
imul
or
ret
or
repnz
iret
in
xor
pop
stc
mov
scas
outsb
pop
dec
or
imul
xchg
mov
push
dec
xor
enter
idivb
adc
push
xor
aas
outsb
fiaddl
lods
push
aad
out
mov
mov
pushf
and
inc
dec
adc
nop
out
and
push
xchg
pop
inc
ffree
jg
cmp
add
js
lds
cltd
sahf
enter
syscall
jl
jns
dec
cmpsl
ss
clc
int
jbe
into
jnp
push
xchg
mov
aas
repz
jns
sbb
mov
in
fs
lahf
outsb
xchg
aad
cmp
add
mov
cli
aaa
lds
inc
stc
adc
sub
cmp
sbb
jns
insl
call
dec
cmpsl
lahf
aas
imul
and
popa
outsb
cmc
in
stos
jns
jp
mov
xchg
xor
cmp
add
and
xchg
lret
aad
jl
push
enter
pop
xchg
lods
push
and
out
insb
aad
adc
loope
pop
movsl
cld
jg
cmp
dec
sub
push
fisubrs
sub
mov
fists
das
and
sarl
cmc
pop
int3
lods
cmp
outsb
push
lret
imul
or
div
mov
pop
inc
lret
push
xchg
sub
movups
fsubrp
jbe
shlb
adc
or
leave
scas
std
jb
cmp
pop
rol
push
iret
push
out
cld
out
sahf
loopne
jne
dec
daa
outsb
xor
sti
push
xor
mov
push
cltd
sbb
cmpsl
mov
stos
xor
sbb
xchg
std
mov
xchg
and
pop
jmp
dec
in
xchg
pop
stos
lods
in
mov
outsl
push
or
test
imul
and
mov
sub
mov
enter
loop
mov
lds
hlt
bound
mov
adc
sub
aam
mov
pushf
xchg
fisubrl
pop
adc
cmp
sarl
or
mov
loope
lods
shl
mov
adc
push
gs
fidivrs
mov
xor
xor
adc
mov
cmp
lret
and
leave
push
and
lea
xor
cmp
sbb
shlb
cmp
dec
xchg
out
sub
imul
push
std
pop
imul
mov
out
push
decb
push
jmp
push
mov
rclb
sbb
push
push
lods
push
inc
dec
mov
push
das
jns
jo
popf
pop
xor
pop
pop
ret
ss
adc
jecxz
popa
icebp
hlt
adc
ror
xlat
jmp
jns
xchg
out
pushf
sbb
movsb
add
cli
dec
inc
sub
test
repz
movmskps
js
mov
mov
dec
aam
adc
inc
sub
mov
mov
mov
outsb
mov
pop
pusha
leave
sti
lods
xor
xor
sahf
aad
dec
inc
inc
in
daa
sub
clc
outsb
mov
pop
mov
or
cmp
pop
scas
call
jp
mov
nop
adc
ror
jne
adc
push
imul
or
aad
mov
cmp
mov
and
or
jb
out
push
or
xchg
popa
cmp
cmp
shr
pop
jmp
out
hlt
adc
cmpb
pop
fdivl
push
cwtl
xorl
lock
stos
sbb
lock
loop
adc
bound
call
cmp
adc
jo
test
inc
mov
jbe
std
add
xchg
and
xchg
sti
inc
test
mov
jmp
sahf
adc
push
addl
sbb
jmp
or
out
push
mov
daa
ficomps
pushf
in
cmp
out
mov
mov
sahf
sub
out
push
cwtl
loope
or
popl
xor
jmp
pop
push
xchg
adc
jmp
adc
loop
lods
outsb
iret
xchg
loop
push
stc
sti
stos
mov
jle
push
sbb
pop
mov
cmpsl
mov
data16
jle
rcrl
push
jb
pop
cmp
je
pop
scas
enter
cmc
sbb
push
adc
aad
into
ja
in
inc
movsb
jae
scas
test
jne
add
movsl
inc
pop
xchg
adc
add
es
stos
loope
mov
fwait
jmp
dec
pop
xchg
mov
je
inc
sub
add
les
push
jmp
test
mov
int
inc
adc
sbb
ficompl
sub
into
pop
mov
xchg
scas
rclb
cmp
push
enter
test
sub
push
int
xlat
jne
jo
xor
jmp
push
jae
add
dec
xor
or
out
movsl
mov
clc
and
xchg
dec
xchg
enter
seta
pop
mov
jmp
push
xchg
iret
jnp
mov
dec
int
mov
jbe
pop
movntq
adc
pop
in
cmp
in
xchg
jp,pt
nop
icebp
popf
add
icebp
out
cmp
xor
out
mov
mov
addl
rcr
jmp
fcomi
int3
testl
pop
push
scas
js
enter
movsb
xor
hlt
inc
pop
in
xchg
loop
xchg
cmp
jmp
test
sti
add
scas
mov
rclb
dec
mov
nop
jmp
addb
bound
out
insl
scas
ja
ret
mov
out
nop
lds
cmp
mull
xchg
push
push
cld
lea
mov
bound
cld
inc
lahf
rolb
mov
rcrb
mov
sub
lret
out
fsubrl
pop
sbb
fldcw
xor
scas
pop
cmpsl
mov
inc
jns
jge
jno
outsb
push
push
cltd
mov
mov
ss
imul
push
fsubr
or
inc
aad
sub
jmp
mov
pop
inc
jae
mov
cwtl
mov
jmp
clc
notb
movsb
mov
dec
mov
std
shll
push
or
and
loop
pop
scas
xor
cmp
loopne
mov
mov
insb
fnstcw
dec
fs
inc
push
outsl
lods
jnp
mov
dec
mov
jnp
ja
mov
xor
add
faddl
jmp
xchg
in
adc
xchg
je
inc
adc
jle
add
xchg
push
fwait
or
fnsave
idiv
ret
repz
adc
lock
mov
adc
jp
ljmp
lcall
iret
sbb
push
hlt
xor
out
add
cmp
push
pop
iret
xchg
cmp
add
push
push
mov
notl
xchg
rcll
data16
inc
flds
cmp
nop
xchg
roll
mov
sti
xlat
insl
adc
mov
sbb
dec
push
pop
push
out
test
testb
push
not
jmp
pop
aaa
jl
loope
mov
lods
inc
enter
and
xor
cmp
and
push
and
cli
pop
mov
push
add
or
jge
cmp
into
xor
xor
test
loope
or
push
push
aad
mov
sub
cmc
pop
xor
loope
pushf
cld
inc
rcrl
enter
xchg
mov
dec
insb
aaa
push
clc
xchg
and
jecxz,pt
adc
fucomip
aam
in
mull
negb
mov
sub
clc
in
inc
mull
adc
and
add
dec
mov
icebp
jg
mov
dec
inc
int
mov
repz
sahf
xchg
movsl
jmp
mov
idivl
dec
inc
in
inc
and
aam
test
sbb
loope
mov
or
and
mov
addl
test
rolb
fs
xor
out
stos
sahf
pushf
pop
sahf
mov
pop
ljmp
shlb
push
sbb
dec
jmp
mov
repz
loopne
andb
ret
inc
jg
inc
mov
out
sub
mov
pop
nop
stc
loope
movsl
daa
mov
std
test
fdiv
scas
mov
or
push
ds
pop
inc
mov
sarl
mov
xor
aaa
xor
pusha
fs
imul
push
and
push
mov
jl
scas
es
and
or
push
cs
lret
inc
in
mov
in
jo
xchg
xor
rcrl
test
xlat
sub
addb
mov
or
hlt
mov
mov
in
fmull
lret
add
les
cmp
cmp
dec
int3
movsl
jp
mov
aas
pop
icebp
dec
and
addr16
loop
sub
or
pop
dec
hlt
sysexit
ja
push
lods
mov
push
cld
adc
cli
inc
inc
jle
and
es
mov
or
xchg
mov
test
cmc
xchg
mov
in
int
test
sub
hlt
and
jo
jp
mov
pop
inc
mov
rorb
jb
aad
mov
imul
cmp
cli
xor
mov
cmpsb
jo
cld
mov
out
arpl
loope
xchg
inc
out
hlt
pop
add
mov
inc
pop
dec
sub
sub
jmp
jg
and
addl
dec
aaa
in
jne
dec
out
add
out
imul
sbb
add
test
cmp
sbb
aam
leave
and
pop
adc
cmp
cmc
jg
and
push
adc
negl
mov
dec
mov
sub
in
mov
sub
jmp
jmp
insl
and
aas
xor
sbb
sbb
mov
inc
dec
sub
pop
loopne
ret
mov
and
or
out
cmc
sarb
leave
mov
cli
jo
mov
fiadds
adc
in
movsb
push
cmp
scas
add
mov
or
sbb
sub
push
cmp
adc
sbb
adc
out
loope
out
or
sub
mov
adc
cmc
std
and
push
pop
sti
xchg
or
inc
xchg
ret
in
mov
mov
push
add
jl
test
imul
movsl
dec
mov
mov
pop
jecxz
mov
mov
sbb
lcall
aad
pop
xchg
popf
bound
inc
sbb
push
fs
scas
test
test
jae
xchg
inc
loopne
jne
scas
mov
cmp
jp
stos
jge
les
mulb
outsl
mov
mov
stos
push
callw
pop
cmpsl
or
adcb
mov
cli
lock
pop
or
into
loopne
jae
icebp
lock
mov
mov
insb
xor
lea
cmp
xchg
stc
mov
rclb
jns
lods
ret
xor
in
lods
jb
xor
ret
dec
in
pop
dec
xchg
xchg
in
out
add
push
sub
mov
in
or
xchg
sbb
out
mov
divl
lea
push
push
insl
jae
mov
mov
bnd
mov
inc
xor
or
jnp
test
es
jecxz
clc
lods
aad
lcall
aad
mov
ret
push
and
aaa
inc
fwait
jmp
push
xlat
mov
pop
mov
repz
mov
cmp
mov
add
adc
lods
mov
mov
int
add
push
sti
adc
mov
sbb
sbb
test
loopne
jnp
inc
jae
notb
and
dec
dec
pop
xchg
aaa
push
repz
div
iret
inc
icebp
mov
push
lods
addl
in
sbb
stos
in
mov
insl
mov
lds
jge
mov
dec
sbb
jl
or
inc
mov
mov
bnd
jmp
fnstsw
jb
outsb
pop
aas
inc
pop
icebp
repnz
outsb
add
inc
inc
lahf
push
mov
in
std
mov
mov
in
and
adc
imul
repnz
imul
jl
add
push
fisubrl
pop
inc
test
or
mov
mov
xor
decl
aaa
ja
jecxz
movsb
push
xor
xor
repz
mov
or
pop
jmp
call
cmpsb
xchg
sbb
std
mov
fwait
add
xchg
mov
mov
mov
lahf
int
aad
jge
aas
stos
inc
jns
shrb
cli
cmp
and
scas
arpl
dec
and
jle
popf
cs
cmp
push
xor
outsb
cmpsl
icebp
ds
mov
cs
out
cld
repz
xchg
outsb
fsubl
lock
dec
mov
mov
movsb
fistl
push
icebp
into
rclb
or
push
inc
dec
jl
add
and
xor
sub
testl
sbb
out
aas
pop
movsl
je
mov
mull
pop
jge
test
frstor
sub
mov
shl
stos
and
inc
push
inc
mov
call
push
aam
cmp
pushf
dec
loope
dec
jmp
dec
jge
repz
loopne
xchg
jecxz
cmp
adc
test
and
ret
adc
test
pusha
or
pop
dec
mov
sbb
sub
mov
cs
dec
es
cmpsl
push
dec
and
sbb
das
mov
aad
sub
movsl
in
cmpsl
loop
dec
and
fdivrl
rcll
js
push
adc
xchg
pusha
sbb
je,pn
in
loop
cmp
cmp
call
add
fldl
jne
cmp
mov
imul
push
sbb
xchg
movsb
out
das
sbb
addr16
push
lahf
stos
lods
xor
pushf
and
jmp
inc
add
insb
cmp
pop
cmpb
xor
mov
and
inc
mov
fucomip
dec
nop
jne
mov
cwtl
out
sub
test
out
adc
mov
adc
inc
sbb
push
push
dec
dec
lret
adc
ja
xor
cld
mov
xlat
jne
mov
push
fcom
popf
jle
scas
xor
cmp
cwtl
les
inc
or
adc
dec
dec
jp
and
lds
sbb
xor
icebp
adc
aas
xchg
incb
in
mov
jns
jecxz
adc
mov
iret
iret
inc
loop
pop
inc
jb
mov
xor
cmp
jb
loopne
jnp
mov
enter
or
xchg
flds
jge
bound
mov
jp
outsb
jecxz
pop
hlt
ds
mov
adc
orb
fnstsw
gs
scas
lds
mov
aad
cmp
cmc
mov
pop
clc
xchg
mov
inc
sbb
jg
stos
popa
jp
sub
mov
lds
das
mov
or
or
imul
add
mov
or
fistps
jno
ds
pop
or
add
cwtl
add
pop
das
pop
aam
sbb
ret
inc
mov
dec
fiaddl
mov
cwtl
hlt
out
nop
repz
hlt
pop
dec
ret
pop
scas
lcall
int
cmpsl
sub
and
pop
fsubrs
lods
dec
pop
mov
or
xchg
stos
sub
fstp
or
mov
jle
insb
adc
test
cwtl
jbe
push
mov
sub
jg
pop
popf
jge
sub
push
sbb
rcrb
mov
dec
pusha
pop
jo
lcall
mov
imulb
dec
lds
lret
add
hlt
jne
add
adc
xchg
xchg
mov
xor
ja
or
lods
pop
fildll
pop
jnp
ret
cmp
xchg
jbe
ret
push
xchg
inc
dec
test
sarl
lds
mov
xchg
inc
sahf
bound
add
outsb
jno
cld
fwait
pushf
xor
arpl
in
ret
fcmovne
pop
fldenv
mov
int3
lds
ljmp
jnp
sbb
mov
int3
test
shrb
cli
cmp
into
imul
cmp
inc
jno
in
in
xchg
adc
out
inc
addl
pushf
call
lock
and
jp
mov
mov
dec
push
outsb
ja
jne
jle
and
xchg
and
sbb
push
jb
mov
push
cmp
shll
mov
clc
mov
xchg
call
fwait
dec
mov
adc
xchg
jns
mov
hlt
push
dec
mov
sub
mov
xor
mov
mov
loopne
sti
jae
sti
mov
jl
add
lahf
mov
xchg
ja
add
sub
shl
call
xchg
mov
jl
fnsave
sbb
push
mov
mov
cli
test
cmp
mov
jle
and
lret
aaa
push
add
insl
dec
dec
out
add
pop
jbe
sub
mov
loop
pop
scas
dec
cwtl
cmc
sahf
les
lods
scas
sti
sub
cmp
sbb
jl
aam
scas
sti
test
loop
lea
inc
push
add
xchg
imul
jle
and
fcmovbe
xchg
xor
cs
andb
cmp
scas
adc
xor
jle
popa
loopne
push
aaa
xchg
out
testb
inc
cmpb
mov
dec
fs
dec
aaa
ficoms
mov
gs
adcb
cmpsb
pop
cmp
fldt
dec
ja
int3
or
movsl
or
aas
aas
sub
repz
insb
xor
adc
lods
cmp
push
jecxz
je
push
jl
dec
leave
mov
in
sub
xchg
sub
mov
loop
sbb
and
jp
out
iret
jge
fadds
or
cmp
mov
fnsave
fsubrs
mov
data16
stc
xor
sarl
push
pop
popf
or
jae
dec
mov
sub
add
clc
fimuls
sbbb
sbb
adc
stos
jg
xor
roll
mov
pop
pop
cmp
sub
jp
addr16
mov
mov
adc
or
aas
aad
fs
sub
jle
mov
mov
mov
inc
inc
gs
insl
loope
les
pop
into
pop
and
sub
test
sub
push
dec
shrb
je
dec
pop
rcrb
aam
mov
mov
sbb
pop
xchg
sbb
outsl
in
hlt
rcll
or
add
rclb
xor
pop
cltd
mov
ret
jmp
and
into
push
add
stos
sub
xlat
daa
fwait
adc
add
das
stc
popf
or
rcrl
icebp
sbb
in
pop
fisttpl
dec
adcb
or
mov
nop
in
mov
cmp
repz
js
mov
mov
daa
call
dec
adc
test
notb
jg
inc
dec
or
mov
jp
stc
xchg
or
jmp
mov
jle
lods
or
inc
push
negl
mov
pop
insl
insb
mov
mov
cmp
xor
jmp
mov
call
test
ljmp
pop
push
inc
jle
sbb
or
sub
inc
mov
push
cmc
dec
xor
mov
jb
leave
enter
fcomps
mov
push
repz
jo
lds
dec
jecxz
add
fbld
cmpsl
adc
mov
stc
sub
ret
inc
test
jno
and
cmp
jnp
xchg
scas
push
or
push
aam
ret
push
jp
sbbb
int3
pop
xchg
jo
aam
cmpsl
xor
or
in
jne
ss
mov
jle
ret
pop
stos
pop
call
jne
cli
rorb
out
popf
sub
lea
mov
pop
mov
aam
xchg
xchg
rol
rclb
mov
adc
push
cli
scas
sahf
mov
inc
inc
movsl
in
jo
jbe
cmp
inc
sbb
pop
and
movsb
dec
or
xor
lcall
mov
dec
jns
mov
xchg
add
dec
push
jae
jns
cmc
lret
stos
fidivl
inc
fs
rclb
int3
scas
ret
in
cmpl
loope
fwait
add
or
mov
mov
test
fidivrl
fstpt
loope
pop
sti
popf
pop
adc
pusha
ss
out
bound
jne
je
insb
into
int
aas
sbb
jmp
mov
pop
lahf
cli
inc
lret
mov
aas
cld
test
cmpsb
pop
jbe
inc
sbb
mov
push
xchg
xor
pop
fs
bound
pop
adc
dec
pop
fdivrs
inc
jmp
dec
mov
push
pop
ret
xor
inc
sbb
cmp
jnp
inc
lods
fstpt
sti
dec
cld
lods
push
outsl
mov
int
xor
mov
adc
stos
lods
pop
test
pop
fldt
lcall
xchg
sbb
xlat
out
push
imul
mov
mov
jge
ret
dec
xchg
loope
scas
les
xlat
mov
push
pop
cmp
jl
push
lahf
gs
cmpsl
not
jae
lds
dec
xor
fwait
ret
js
aad
push
dec
pop
sbb
mov
mov
add
rsqrtps
dec
cltd
call
fsubrs
aas
fimuls
mulps
add
insb
in
pop
sbb
add
dec
es
imul
jns
shlb
mov
fnstcw
push
cmp
xchg
rcrb
ja
fisubrl
jecxz
dec
pop
cmp
outsb
shlb
xchg
dec
push
pop
popa
pop
cltd
lahf
hlt
fstl
xchg
sub
loop
adc
fsubr
dec
jp
jns
xor
iret
mov
mov
insl
cmp
pop
pop
push
cmpsb
or
out
pop
test
movsl
add
shlb
fstl
or
mov
jmp
cmpsb
cmc
cmp
inc
mov
inc
cmpb
mov
sub
dec
repz
inc
cmp
mov
pop
or
ficoml
pop
dec
hlt
ja
cmc
outsb
pusha
dec
dec
shl
mov
cmp
shlb
adc
cltd
push
fdivs
mov
push
and
jne
sahf
and
pop
mov
repnz
and
insl
popa
inc
inc
lods
push
pop
push
scas
pop
insb
and
stos
xchg
ret
push
notl
cmp
xchg
push
mov
dec
xor
nop
push
enter
xorb
std
mov
mov
out
fwait
ret
adc
sub
jl
or
pop
mov
rclb
push
and
lret
pop
mov
push
push
xchg
hlt
jo
bound
push
mov
sub
xchg
aaa
sub
mov
lret
mov
inc
push
jp
push
lahf
mov
inc
xchg
push
pop
xor
data16
fadds
push
sub
mov
fmull
leave
pop
jecxz
insb
sbb
xchg
jp
frstor
cs
fadd
loopne
test
xchg
insl
lea
jp
cmp
jl
out
sti
xlat
into
inc
lea
iret
in
pop
fnsave
xchg
les
jno
in
sub
sub
cmpsb
push
jb
sahf
hlt
sub
jmp
mov
rolb
dec
stos
mov
pop
jb
negl
lcall
ret
lret
rcll
outsl
out
shll
adc
pop
out
xor
idivl
mov
repz
leave
xor
xor
popf
and
arpl
lds
jbe
jp
popa
mov
rcll
aam
or
pop
stc
and
jnp
out
push
aam
xor
pusha
push
xchg
shlb
xor
mov
scas
and
xor
mov
ror
add
fsubp
mov
leave
sub
in
test
gs
enter
cmp
xchg
mov
mov
cmpl
mov
push
adc
xchg
xchg
xor
arpl
test
add
lcall
and
xor
loop
push
pop
sbbl
lcall
mov
fcomi
ret
push
es
mov
hlt
adc
cmp
movsb
repnz
dec
popf
loopne
mov
push
cmpsb
lahf
cmpsb
jns
jp
test
sbb
pop
xorb
inc
xor
sbb
add
imul
test
jl
mov
lods
sub
mov
loopne
cmp
clc
hlt
call
mov
arpl
push
jne
jmp
adcl
pop
shrl
jne
inc
mov
inc
pop
cmp
cmp
mov
lods
mov
cmpsb
ss
inc
nop
xor
jmp
fists
mov
icebp
dec
pop
or
mov
stc
dec
push
fidivrl
push
xchg
mov
lcall
out
inc
cwtl
fisttpll
push
cmpsl
jo
ljmp
xor
lock
sub
sub
dec
ljmp
in
xor
jg
pusha
sub
pop
xchg
stc
add
xor
mov
std
fldt
jg
inc
adc
bound
or
inc
pop
roll
cli
daa
sub
divb
test
idivb
bound
inc
inc
fldenv
sarb
std
jb
loope
jbe
lret
insb
inc
sbb
adc
xchg
in
sub
push
sbb
push
jae
mov
add
sbb
in
and
clc
arpl
sbb
aam
or
aad
ss
dec
fwait
jl
push
pushf
fcoml
inc
sbb
inc
inc
loope
adc
push
cltd
out
mov
xor
push
fnsave
clc
add
mov
insb
fldenv
add
add
cmp
add
fisubrl
in
addl
hlt
out
add
xchg
imul
pop
jmp
jecxz
sar
fcomip
dec
into
ja,pt
sbb
lock
bnd
addr16
xor
cmp
mov
pop
out
push
cmp
push
sub
jg
and
movsl
cmpsb
fwait
rclb
shrb
xchg
fists
data16
mov
sbb
scas
ret
cmc
mov
adc
mull
test
push
xchg
out
cmp
cltd
in
xor
test
mov
test
xor
xchg
imul
test
mov
or
and
test
lods
or
pop
jnp
ss
dec
fbstp
decb
fistps
or
fs
cli
dec
pop
addr16
xor
cmpsl
call
addr16
mov
cmp
inc
xchg
xchg
std
push
lods
mov
push
inc
push
xor
xchg
push
mov
pop
inc
mov
sbb
add
in
inc
mov
jg
out
xor
outsl
ror
xor
test
pop
gs
lods
sbb
mov
fldt
fwait
add
jae
mov
pop
out
jne
movsl
jmp
mov
jne
xchg
enter
test
out
adc
lahf
xchg
lods
mov
outsb
xchg
mov
shl
pusha
scas
orb
xchg
jb
mov
pop
fwait
cmp
adc
adc
leave
stos
testl
pop
sub
insl
in
jae
jl
mov
lods
sbbb
mov
nop
push
call
cmpl
push
das
enter
xor
push
gs
sub
adc
decl
sti
lcall
xor
xor
xor
aam
loop
repz
sbb
fnstcw
mov
push
int
mov
lahf
cld
sbb
out
testl
sti
lea
in
and
shrd
mov
loopne
pushf
mov
mov
sbb
pop
pop
and
test
sbb
rorb
adc
xlat
inc
mov
in
shlb
and
cltd
fwait
je
lock
dec
jmp
or
xor
push
mov
inc
mov
inc
mov
or
lahf
jecxz
pop
leave
xchg
mov
rorb
orl
aas
mov
pop
pusha
repz
sbb
sbb
mov
or
out
hlt
in
mov
pop
faddl
out
loop
sbb
into
int
dec
push
dec
push
xor
aam
outsl
arpl
and
add
pop
fdivr
sub
sub
or
xchg
mov
mov
fadds
sti
lcall
sub
push
daa
dec
sbb
into
jecxz
xor
cltd
fistps
mov
mov
mov
xchg
js
rcl
xchg
mov
xor
jne
leave
add
cmp
lcall
je
xor
sub
lret
popf
add
mov
mov
cmp
xor
sub
sub
outsl
jnp
arpl
pop
ljmp
adc
out
jmp
dec
fwait
xor
shll
test
cmp
int
insb
adc
push
imul
and
sbb
loop
mov
lods
or
sbb
push
lods
call
cmp
out
pop
mull
imul
psadbw
mov
push
lret
adc
out
fistps
pop
sub
cli
xor
mov
cltd
add
stos
xor
addr16
xchg
loop
int3
pop
cmp
fisubs
adc
xor
ss
pop
into
fistpll
shl
fldenv
adc
push
aam
inc
aam
outsl
xchg
decb
cwtl
roll
adc
stos
xor
in
loop
push
lahf
dec
lods
daa
out
mov
mov
adc
add
ja
nop
mov
cmpsb
mov
sahf
js
jnp
and
call
pop
add
push
lret
cmpsb
loope
aas
adc
jae
push
cmp
jb,pt
xchg
inc
add
mov
adc
popa
daa
popf
pop
fwait
mov
inc
aas
mull
jecxz
add
mov
repnz
xchg
xchg
js
fnstenv
sbb
sub
pop
repnz
push
addr16
mov
pop
je
loopne
jno
add
sbb
or
and
insl
cwtl
jmp
lahf
xor
mov
xchg
iret
imul
vpmaxsb
fwait
insl
add
sub
mov
dec
out
mov
adc
xchg
mov
vmovshdup
push
pop
sub
aas
in
add
out
out
mov
leave
arpl
mov
ret
and
mov
or
mov
int
jnp
popa
ss
test
jecxz
mov
testb
mov
pushf
stos
imul
jo
mov
fnstcw
add
ret
push
pop
dec
sbb
outsb
mov
ss
pop
push
out
lret
ljmp
arpl
into
test
iret
mov
aad
sbb
mov
mov
cwtl
out
or
inc
jmp
xchg
mov
shr
pop
aam
pop
daa
int3
mov
out
mov
mov
ja
aas
pop
faddl
mov
cmp
sbb
jo
gs
cwtl
repz
fisubrl
add
sbb
notl
push
and
pop
mov
jns
pop
fwait
dec
xor
jns
fnstcw
adc
xchg
mov
andb
jb
and
jbe
and
adc
sub
stos
xchg
mov
mov
aaa
bound
xor
jmp
std
sti
out
mov
pop
loopne
aas
inc
ja
xchg
dec
sbb
pop
sub
add
imul
inc
jnp
cmp
cmp
inc
mov
mov
scas
pop
fcomps
cmpsl
mov
sahf
xor
leave
sub
mov
dec
insb
sbb
ds
and
fsts
imul
les
jae
mov
in
inc
mov
xchg
cmp
icebp
insb
pop
loop
mov
push
dec
in
loopne
arpl
shll
test
jl
movsl
icebp
adc
inc
mov
cmc
cmp
xchg
mov
les
xchg
ja
data16
adc
push
mov
cwtl
cld
adc
inc
or
mov
lods
movsl
jb
xor
ds
nop
repz
mov
pusha
pop
inc
jae
fstpt
push
sub
adc
out
lret
mov
in
mov
inc
sbb
insl
pop
or
leave
icebp
mov
int3
inc
inc
adc
inc
add
and
jg
push
cmp
cli
adc
repnz
mov
sarb
dec
pop
mov
imul
sub
add
adc
aas
dec
jns
sti
int
sbb
cwtl
leave
aam
push
mov
mov
push
pop
cwtl
loopne
mov
jae
sbb
out
mov
mov
push
gs
rcrl
and
cld
jbe
mov
divb
fnstenv
and
cmc
outsb
test
ret
fadd
mov
sbb
dec
das
mov
cmp
fidivrs
out
in
pop
outsb
mov
fs
xlat
insb
cli
jle
stos
xor
lock
jns
mov
pop
mov
sar
hlt
and
scas
inc
inc
das
ja
jb
stos
xor
aad
cli
dec
aaa
sub
jnp
andb
scas
pop
push
mov
push
movsb
rcll
shl
push
sahf
dec
stc
sub
or
mov
xor
insb
mov
fmul
bound
mov
notl
pop
ficoms
shrb
inc
test
mov
xor
ljmp
adc
pushf
hlt
lcall
mov
xor
sub
ja
inc
fstpl
movsl
fsubr
pushf
cmp
loopne
mov
mov
push
iret
dec
call
in
add
inc
arpl
push
cld
lcall
xor
insb
xor
sbb
cmp
mov
rcrb
or
jnp
mov
cmp
push
scas
pop
mov
cmp
push
add
jge
pop
mov
test
clc
lret
pop
faddl
add
cltd
push
in
movl
in
adc
jmp
test
mov
cli
push
cmp
or
xor
pop
es
inc
mov
hlt
pop
cli
ffree
mov
adc
push
cld
sbb
pop
jno
push
in
fnstsw
cmpsl
leave
sbb
fcomi
xchg
push
dec
sub
dec
mov
sub
decl
outsb
icebp
jecxz,pn
dec
rorl
mov
mov
push
or
mov
jnp
loope
mov
adc
and
xor
mov
popf
out
negb
pop
mov
xchg
cs
jg
pop
ljmp
testl
dec
test
pushf
movsl
sub
mov
cmpsb
out
jnp
adc
and
push
xchg
scas
jo
orb
cmc
sbb
iret
jnp
xchg
cmc
ret
push
iret
xor
jle
adc
lret
lods
ja
sub
mov
jns
add
xchg
mov
frstor
aas
push
jo
ljmp
push
mov
sbb
pusha
add
sub
dec
jae
xchg
pop
subl
add
ljmp
test
and
fucom
ds
dec
test
aaa
and
push
xchg
in
inc
adc
pop
out
stos
imul
or
dec
ficompl
dec
stos
rcll
mov
fnstsw
shl
pop
cmp
add
les
inc
cmp
xchg
push
iret
fnsave
or
fisubs
popl
in
scas
hlt
fidivrl
or
pop
dec
cwtl
mov
stc
dec
pop
add
daa
and
push
sub
mov
pop
add
cmp
ds
xchg
gs
roll
ja
daa
push
stos
sub
add
inc
in
xchg
pop
out
dec
or
lock
jmp
test
lret
sti
ficompl
mov
mov
jp
out
jle
mov
loop
arpl
or
in
stos
mov
and
cld
idivb
pushf
das
xchg
sahf
add
cmc
enter
xchg
xchg
in
jl
xchg
add
js
xchg
incb
les
cmp
into
das
sahf
jg
mov
rolb
sub
or
clc
inc
pop
cmp
dec
add
lea
or
and
lret
popf
pop
push
xor
and
mov
negb
bound
ss
push
mov
xor
and
das
push
xor
jg
data16
cli
test
lods
add
ret
adc
movsl
aam
out
inc
movsl
mov
mov
repnz
push
pop
pop
xchg
js
pop
das
add
in
xor
mov
call
nop
fsubrl
psubw
inc
jp
pop
or
jnp
or
mov
fidivrl
out
and
mov
sti
bound
pop
add
test
xchg
and
mov
xchg
inc
loope
mov
out
dec
int
stos
xchg
loop
inc
out
xchg
adc
popf
cmp
adc
mov
out
jg
das
aas
mov
sub
push
or
mov
jb
imul
in
jecxz
mov
and
jo
repnz
lds
jbe
gs
dec
pop
fsubs
cltd
pop
rcrb
cmp
or
cmpl
daa
ljmp
orl
and
es
or
cltd
push
mov
fdivrl
in
or
rcr
pop
dec
jge
out
adc
dec
aad
jb
mov
fisubrs
jecxz
mov
inc
jne
dec
push
inc
outsl
adc
sub
data16
sti
lret
push
jo
insb
movsb
frstpm(287
inc
repnz
sbb
jo
mov
and
jno
and
mov
jbe
mov
cmp
xchg
dec
insb
push
add
jg
xor
pop
aas
loopne
cmp
dec
shll
lods
mov
fcoms
lds
sub
movsb
lahf
xlat
insl
cmp
leave
and
shlb
int3
icebp
pop
arpl
push
les
andl
shr
mov
xor
test
dec
mov
pop
int3
mov
and
mov
add
sbb
sub
xchg
fwait
dec
pop
das
cwtl
loopne
and
inc
and
dec
mov
mov
push
or
ja
dec
or
or
sub
punpckhbw
mov
sti
imul
loopne
fcoml
sub
pusha
xor
and
lret
xchg
sub
nop
adc
sbbl
sbb
enter
pop
mov
inc
mov
inc
cmpsb
pop
lret
fdivrl
push
test
fistpll
push
sbb
mov
clc
ret
pop
cmp
jl
aam
jmp
jmp
sbb
mov
call
inc
lcall
cmp
test
mov
bound
and
xchg
xor
cltd
popf
jno
xchg
ret
aaa
jmp
pop
test
mov
fdivl
jnp
add
xor
popf
leave
push
jo
or
int3
adc
loope
aam
pushf
fistl
loope
cmc
sbb
cwtl
and
jnp
xchg
push
iret
es
sub
xor
push
inc
inc
jecxz
clc
sub
pop
cld
pop
std
and
cmpsb
ret
enter
push
cmpsb
adc
stc
cwtl
fldt
fwait
or
sub
xchg
fnop
jl
andps
mov
push
jns
lret
insl
mov
fadds
push
ret
ljmp
pfnacc
jbe
mov
sbb
mov
es
xchg
sub
and
leave
push
lods
rcl
xchg
cwtl
out
mov
jl
pop
into
in
xor
push
loope
inc
les
adc
cmpsl
ds
sbb
sbb
ja
mov
sbbb
popf
insl
push
popa
and
loopne,pt
cmp
add
inc
push
xchg
clc
adc
aam
cld
ret
sbb
mov
popa
lcall
fs
inc
jb
mov
js
dec
push
outsb
mov
and
cli
mov
xchg
jmp
mov
leave
cli
and
xchg
xchg
popa
setno
cmpsb
or
shl
movd
cmp
dec
jl
mov
imul
push
xlat
lock
push
mov
mov
test
xor
movsl
cmp
aam
mov
inc
and
fnstenv
ffreep
test
pop
pop
int
loopne
shrl
cmp
push
sti
das
outsb
repnz
cmp
fisubs
pop
xchg
test
push
js
out
iret
jns
and
lcall
test
int
adc
loope
sbb
les
push
xchg
es
aam
in
jl
xor
xor
mov
lds
aad
and
lods
sbb
jae
adc
in
stc
xchg
aas
inc
test
pop
icebp
stc
lea
iret
test
stos
scas
pop
negb
inc
push
xlat
pop
imul
adc
in
pushf
popa
stos
dec
jp
adc
xor
fsub
fwait
xchg
xorps
adc
xchg
insb
pop
inc
push
pop
fistpll
jge
stos
int3
lret
dec
inc
ja
cmp
sarb
cld
je
inc
jnp
xchg
sbb
pop
je
repz
lret
in
lock
push
cld
adc
jne
out
adc
sub
incl
and
sbb
mov
outsl
dec
push
inc
dec
das
clc
stos
add
mov
mov
adc
jecxz
jl
outsb
mov
cmp
sub
arpl
dec
popf
mov
out
mov
push
xor
dec
cmpsb
out
mov
call
push
mov
iret
out
popf
xchg
sub
aas
xchg
sub
mov
xor
jb
aas
sbb
mov
cwtl
pop
fdivs
adc
imul
enter
hlt
mov
idivl
int3
cmp
das
xor
push
dec
inc
ret
inc
popa
loop
hlt
pop
push
sbb
in
sbb
sub
leave
std
xor
adc
jns
sub
repnz
sub
mov
loop
enter
cwtl
jg
daa
push
ret
adc
enter
lock
inc
js
jne
cld
push
out
aad
jg
rcrl
aaa
lret
pushf
insl
std
out
cmp
lods
cs
bound
and
int3
sti
mov
in
jne
rep
js
mov
cltd
adc
out
adc
xor
or
xchg
push
mull
mov
mov
in
mov
lea
es
repz
push
push
and
jns
inc
out
push
cs
dec
jmp
xchg
jae
cvttps2pi
sbb
stos
aas
popa
test
lcall
sub
pop
call
jg
and
pushf
rcll
dec
mov
ss
dec
rcr
dec
mov
inc
xlat
jbe
testl
fstl
push
and
jmp
fmul
js
or
sub
mov
bound
or
xchg
add
sub
data16
fiaddl
push
mov
fsubrl
cmp
cmp
or
scas
push
push
push
pop
sbb
adc
push
in
push
sbb
inc
lret
dec
int
shll
icebp
and
dec
test
cmp
shll
shlb
es
aas
xchg
push
inc
loop
cmc
ds
nop
mov
lret
test
in
dec
cmpsb
sub
test
inc
jbe
test
inc
or
xchg
fisubrs
adc
mov
fisttps
daa
sub
or
pslld
dec
cmp
push
imul
sub
fwait
arpl
inc
push
icebp
inc
add
inc
jmp
cmp
or
adc
jp
stos
fisttps
pop
cmpsl
fisttpll
adc
mov
shr
into
imul
and
loope
data16
cmpb
loop
dec
into
mov
scas
in
pop
lea
js
mov
adc
or
jne
push
jmp
mov
lcall
movsl
fstp
ja
xchg
cltd
fdivrp
out
jge
pop
push
nop
arpl
jmp
adcl
mov
add
aas
jne
lock
and
shlb
sbbl
push
sub
pop
mov
jle
lret
adc
sbb
insb
inc
aad
test
sbb
adc
mov
in
mov
shll
pop
stos
test
in
mov
mov
push
dec
fldln2
pop
rolb
cmc
inc
enter
xchg
and
sbb
cs
mov
fstp
pop
sub
in
cmpsl
inc
fidivl
jnp
arpl
sbb
sub
dec
in
cs
lods
add
and
pop
ret
xchg
inc
sub
add
mov
xor
pop
out
push
add
dec
rcrl
dec
outsl
imul
cmc
test
xchg
add
xor
pop
out
scas
rcll
mov
rcll
xor
pop
repz
inc
std
mov
std
sbb
popf
cld
in
mov
aad
xchg
iret
cmpsl
orl
dec
xor
push
adc
mov
pop
mov
std
xlat
ret
and
sub
cwtl
ja
aam
mov
jno
pop
xorb
pop
add
mov
test
cmp
sub
mov
flds
mov
xor
sbb
cmc
cwtl
int3
dec
push
xor
loopne
push
push
test
in
shrl
xor
cld
aam
mov
jns
filds
xor
push
sub
adc
xor
in
or
sbb
add
imul
jns
sti
bound
inc
hlt
pop
mov
outsb
inc
mov
or
push
hlt
fwait
adc
out
in
sbb
loopne
pop
scas
std
call
sbbl
cmpsl
fisubrl
setg
xor
nop
data16
ficoml
xchg
and
int3
mov
mov
xchg
out
gs
jne
idivl
stc
pop
sub
outsl
cmp
js
movsl
fwait
aaa
stos
into
and
jmp
in
clc
push
movsb
jecxz
push
mov
push
xchg
mov
sbb
add
mov
pop
aaa
mov
pushf
test
sbb
xchg
rol
call
adc
shl
xchg
pop
popa
mov
test
addl
mov
push
nop
test
faddl
sbb
push
lods
call
int
inc
paddsb
fldcw
cmp
jmp
icebp
mov
sbb
loope
in
sbb
fstpt
std
cmp
das
cmp
and
jae
rolb
mov
lahf
inc
or
jnp
pop
dec
inc
scas
imul
push
lods
push
divl
sbb
sbb
add
cmp
jge
or
push
fiadds
push
pop
dec
mov
and
jecxz
jle
insl
fsubrs
imull
mov
xchg
leave
packssdw
ja
lcall
jp
cmp
popa
add
aam
pop
and
outsb
mov
pop
sbb
lcall
test
icebp
out
push
adc
fisubrl
jbe
push
notb
aad
nop
push
in
lods
mov
inc
in
pushf
push
and
mov
mov
add
mov
and
scas
adc
mov
popa
pop
adc
rcl
xor
adc
stc
cmp
fsubr
jp
pop
jle
lods
xorl
xor
mov
movsb
leave
jno
mov
xor
seto
mov
rolb
mov
push
dec
test
sbb
push
dec
or
pop
subb
icebp
scas
je
loop
inc
inc
mov
enter
std
and
xchg
push
xchg
bnd
xchg
push
aad
lods
test
add
pop
cmp
sub
adc
nop
subb
inc
nop
sub
aas
jmp
xchg
mov
roll
xchg
test
add
repz
dec
ret
insb
mov
inc
cltd
dec
pop
inc
mov
mov
test
loope
sub
aaa
stc
mov
das
cmp
jne
add
cld
call
ja
adc
pop
and
movsb
dec
imulb
sbb
or
jmp
cmp
insl
jge
imul
push
ja
dec
pop
xchg
mov
mov
lea
adc
repnz
sahf
in
pop
addr16
lret
outsl
scas
lods
jbe
ret
lcall
lods
stos
sbb
mov
push
push
loopne
mov
xchg
ja
loop
push
popf
popf
cli
jb
inc
pop
repnz
daa
adc
jge
push
sub
int
xchg
cmpsl
sahf
pop
imul
add
and
pusha
ljmp
xor
cmp
mov
mov
adc
repz
int
xor
add
dec
repz
lcall
sti
arpl
scas
sub
pop
push
outsb
mov
fdivrs
mov
xchg
push
dec
cmp
iret
lock
mov
ljmp
icebp
pop
cmp
lea
loopne
adc
pop
imul
movsl
dec
leave
xchg
movsl
mov
out
cmp
daa
sub
test
pop
mov
push
push
insl
cmc
ljmp
jnp
cmpsb
daa
gs
inc
nop
jb
loope
sti
jge
cmp
mov
inc
cmp
push
jno
jbe
dec
xor
shl
addr16
pop
arpl
pop
sub
xchg
xor
add
imul
cmc
inc
mov
scas
leavew
ljmp
push
dec
or
mov
push
cmp
mov
bswap
loop
lcall
jae
icebp
mov
sbb
dec
mov
pop
adc
inc
dec
push
outsb
pop
mov
ror
in
jo
adcl
xchg
jmp
sbb
hlt
cli
push
pop
push
mov
stos
xchg
xchg
repz
lret
loopne
sbb
hlt
push
mov
andl
mov
out
cli
sub
testl
scas
div
fstp
xchg
cld
and
fldcw
push
stc
out
int3
mov
and
jo
test
lret
dec
mov
or
call
pop
movntq
lahf
cld
pushf
jne
insl
add
dec
cmp
sub
inc
push
repz
shrb
xchg
mov
dec
xor
mov
loop
mov
loope
mov
add
imulb
arpl
or
cwtl
repnz
dec
stos
push
test
daa
imul
stc
sub
lea
cmpsl
pop
cwtl
dec
or
xchg
sub
push
loop
mov
sarl
add
xchg
in
sub
fs
xchg
jecxz
sahf
fists
pop
xchg
xchg
jge
sub
lods
test
dec
testl
pop
sahf
dec
lds
in
sub
xchg
mov
inc
mov
bnd
lcall
repz
push
mov
imul
xlat
add
or
or
into
push
xor
ds
jp
sub
leave
loopne
inc
mov
jb
sbb
enter
inc
ret
add
jmp
rorb
std
mov
or
cltd
mov
outsl
ret
call
and
daa
xchg
push
sarb
or
shr
imul
div
std
stos
andl
leave
sbb
add
mov
sub
mov
testl
xchg
pop
mov
rorb
insb
xchg
das
push
mov
jecxz
mov
fdiv
outsb
or
and
push
hlt
xchg
in
cmp
jle
outsb
in
and
or
loop
repnz
rcr
repz
insl
mov
pop
test
arpl
mov
gs
sbb
cmpsb
mov
out
jbe
jne
inc
xor
int3
jns
call
mov
pop
ret
pop
push
fidivs
dec
inc
push
mov
push
pop
pminub
adc
xchg
loope
lods
push
addl
movsl
xchg
shll
lcall
and
pop
jg
mov
int
sbb
mov
or
add
mov
adc
or
mov
sahf
add
adc
mov
hlt
stc
sub
aam
lahf
xchg
adc
out
out
int3
sub
and
fidivl
mov
lret
std
pop
lock
cli
jg
jl
sahf
push
mov
ss
mov
outsb
nop
cmp
and
jne
test
xchg
out
and
shl
and
in
mov
inc
inc
adcb
ficoms
mov
dec
inc
cltd
push
std
call
cmp
and
ss
jmp
aam
mov
sub
adc
push
test
rorb
cmp
pop
xor
jno
sbb
js
ja
insl
sub
mov
xchg
jne
lret
xor
xlat
pop
hlt
out
jge
or
and
rol
std
cwtl
sahf
movsl
lcall
xchg
jno
sbb
add
mov
insb
dec
inc
mov
scas
jmp
enter
and
cmp
sub
and
loope
stc
push
ret
jbe
mov
test
mov
xchg
fucomp
jge
fidivs
cmpl
mov
inc
push
jo
mov
adc
or
mov
out
movsb
inc
jbe
movsb
adc
outsb
mov
fwait
sub
jp
lods
testl
repnz
cmpsl
pop
jb
push
cmp
mov
sbb
mov
xor
xchg
inc
xor
jno
sub
and
dec
dec
push
jecxz
sub
in
jbe
push
cli
dec
aas
xchg
push
xor
stos
mov
adc
icebp
sub
test
mov
outsl
inc
out
xchg
inc
addb
jmp
fwait
sarb
sbb
sub
gs
xchg
into
push
and
lds
arpl
bound
or
repz
lahf
outsl
outsb
jo
in
cmp
rdtsc
jmp
pop
xchg
mov
xchg
and
dec
xor
or
push
into
dec
mov
dec
xchg
add
cmp
orb
into
jecxz
outsb
and
js
and
ficomps
rorl
sbb
insl
out
push
cmp
adc
or
repz
pop
xchg
ud2
addr16
ja
push
and
dec
mov
jne
lock
dec
es
or
push
not
push
mov
orb
lcall
icebp
fildl
pop
scas
xchg
rorl
and
and
das
mov
gs
dec
ficompl
into
fidivs
aas
insb
sub
das
nop
mov
loop
jmp
mov
mov
dec
mov
lret
cmp
adc
inc
mov
dec
sbb
lahf
outsb
xor
inc
cmp
sahf
rorb
aad
clc
hlt
inc
aad
mov
or
bound
ret
outsb
lret
arpl
fstps
jb
push
mov
aas
xchg
testb
aaa
push
push
or
and
decl
lret
pop
jp
scas
adc
mov
or
xchg
and
divl
notb
adc
loopne
fucomp
rcll
jo
jl
iret
into
mov
dec
imul
and
insb
inc
repz
sbb
lea
sbb
test
xlat
push
pop
icebp
popf
testl
pop
adc
mov
or
out
xchg
push
xchg
inc
cltd
fwait
xorl
cmp
or
sub
fiaddl
in
inc
arpl
gs
add
sbb
mov
jne
sbb
jno
push
xchg
adc
jg
xor
pop
in
insb
jl
jge
pop
mov
rcr
xchg
jb
lret
add
inc
dec
push
mov
xor
cs
addr16
out
mov
roll
add
and
jno
fwait
mov
loopne
orl
out
xor
or
sub
or
sbb
pop
push
dec
daa
add
cltd
sub
iret
aam
lcall
sbb
mull
bound
in
jns
cmc
mov
adc
pop
ljmp
jge
jne
sbb
cmp
mov
jnp
pop
xlat
add
adcl
xchg
aaa
adc
jne
loope
pop
sub
sti
mov
test
ret
pushf
pop
out
inc
pop
orl
mov
xchg
push
inc
jae
sti
jno
in
lock
bound
test
mov
xlat
fisttpl
repz
dec
out
and
inc
xchg
jns
lds
jb
cld
out
inc
mov
jo
lahf
std
dec
add
push
mov
mov
ficoms
sub
jb
push
lods
sbb
stos
out
insb
and
int
movsb
cvttps2pi
xchg
addb
push
cli
and
fdivl
pop
jl
cwtl
add
repnz
or
mov
inc
lods
pop
leave
in
pushf
mov
mov
shrl
add
xchg
xor
jbe
daa
xchg
cmpsl
test
push
or
mov
repz
mov
or
and
fcompl
push
fiaddl
sub
or
mov
cmp
lods
aaa
mov
adc
adc
sbb
pop
jge
iret
adc
mov
stc
std
lcall
mov
mov
adc
xor
aad
xchg
aaa
stos
mov
in
stos
leave
repnz
lahf
xor
bound
pop
or
cli
rorb
fs
sbb
cmp
mov
pop
inc
xor
loopne
xor
mov
frstor
xor
scas
mov
xchg
and
cmp
mov
mov
jno
sbb
sub
xorb
cmp
mov
sti
ret
cmp
pop
xchg
push
shll
xchg
pop
jle
pop
dec
addr16
testl
add
xchg
fldcw
mov
cmp
fldenv
push
in
rcll
jge
jp
sti
data16
outsb
inc
push
sbbb
aas
mov
icebp
add
jbe
sarb
jb
leave
js
xchg
sbb
outsb
mov
out
add
in
lahf
pusha
push
das
nop
imul
or
mov
ret
out
jbe
ja
sahf
dec
pushf
fsubr
cmp
cli
movsb
lock
sbb
pop
aam
test
lock
leave
cld
icebp
imul
cwtl
pushf
mov
add
insl
and
jne
pop
cmp
push
cwtl
pop
adc
or
out
lret
jb
pusha
jo
aad
jb
clc
out
mov
adc
enter
test
je
adc
dec
xlat
inc
call
xor
ret
mov
fdivs
xchg
rcll
arpl
mov
lods
inc
xor
clc
fldt
lea
xchg
push
push
push
mov
scas
mov
lock
das
stc
dec
ret
pop
je
mov
pop
cmp
lret
add
leave
pop
pop
push
add
sbb
pop
es
push
cwtl
je
stos
sub
sti
sub
cmp
xor
gs
inc
inc
ss
or
jmp
shll
movsb
int
out
and
dec
loope
call
sub
fs
inc
cmp
dec
add
pop
mov
push
add
or
rorb
cmp
pop
or
jb
add
loop
inc
sbb
fnstenv
jae
addb
test
pop
sub
cmp
jl
test
aam
mov
xor
xor
push
cs
jl
insl
adc
inc
sub
pop
pop
sbb
stos
movsl
add
xchg
movsl
stos
cmp
fwait
mov
cmp
cmp
cmpsl
leave
xchg
mov
mov
push
mov
je
jne
jns
or
pop
cltd
lock
nop
fistps
dec
xorb
xchg
pop
xchg
dec
sbb
mov
push
sbb
imull
leave
adc
rcrb
inc
pop
mov
or
je
cmp
sub
fwait
jbe
sub
mov
addl
into
pop
mov
ret
xchg
and
xor
cwtl
leave
lds
and
mov
sub
push
popf
mov
cld
xchg
cltd
dec
adc
in
iret
scas
mov
loope
stc
inc
push
cmp
scas
cmpl
int3
dec
add
pop
fildll
xchg
jge
xor
add
mov
das
xchg
dec
subl
sbb
cmp
xchg
mov
dec
cmpsb
or
mov
mov
pop
mov
add
sub
dec
inc
pop
mov
popa
sbb
imul
cs
rcll
fcomps
adc
mov
sub
or
fldt
jnp
adc
addr16
dec
imul
stos
imul
fwait
mov
and
sbb
and
aaa
iret
adc
inc
pop
mov
flds
shrb
push
adc
pushf
stc
iret
stc
iret
dec
aam
shlb
in
nop
jmp
inc
pushf
popl
cmp
xor
cmpsb
adc
mov
push
repnz
pop
int
add
out
sti
aad
sti
nop
stc
inc
mov
pop
sbb
out
dec
dec
push
data16
mov
push
mov
sbb
jne
sbb
stos
leave
jo
fwait
cmpsl
push
icebp
divb
mov
cmp
and
mov
iret
xchg
lock
lods
and
dec
pop
and
xchg
xchg
sbb
popa
or
jle
xor
sub
decb
xchg
sbb
dec
bound
pop
sub
stos
sub
adc
out
xor
mov
sbb
mov
lahf
cwtl
jo
cmp
repz
jmp
repz
mov
mov
hlt
divb
loope
je
test
negl
jg
ret
sbb
test
sbb
fcomi
and
push
and
bound
or
mov
je
or
inc
push
enter
jl
insl
and
adc
push
adc
and
faddp
xchg
xchg
loopne
adc
ficoms
ret
mov
in
es
cmp
pop
repz
rolb
or
xchg
add
aaa
cli
or
mov
pop
pop
and
sub
rol
jno
mov
pop
cmpsl
fisubrs
push
jmp
pop
psrlq
adc
add
inc
ret
je
xor
xchg
mov
jecxz
pop
fcomip
cltd
jecxz
pop
mov
sbb
xchg
lahf
cwtl
xchg
mov
or
scas
mov
sti
add
mov
imul
lea
lret
or
jl
mov
imul
test
add
pop
popf
sub
js
xor
mov
xchg
shll
fidivl
stos
cwtl
sbb
fimull
push
in
or
in
sbb
and
mov
mov
lods
sbb
cmp
aam
andl
rolb
in
pop
xor
jno
xor
pusha
dec
push
xchg
mov
enter
push
loop
push
jmp
add
dec
jl
pusha
rcrb
or
in
out
cld
pop
add
jns
add
pop
xchg
out
shrl
push
mov
mov
cmc
mov
pusha
jne
ret
xchg
js
and
fwait
lret
orl
dec
pop
test
das
dec
xor
push
cmp
inc
jg
and
mov
pop
outsl
and
xchg
adc
cmp
aam
or
and
mov
stos
pop
xchg
cmp
cmpsl
pop
out
push
daa
mov
adc
push
mulb
or
insl
xchg
sbb
mov
inc
add
into
pop
mov
lods
xor
sahf
jg
leave
in
ffree
mov
jmp
insb
lahf
cli
lret
push
pop
add
sub
in
hlt
adc
lods
or
or
insb
push
jbe
outsl
sbb
popa
lods
jo
sub
lret
push
faddl
mov
in
fs
shll
push
shlb
sub
inc
hlt
mov
sub
xchg
out
adc
movsl
jno
sahf
sti
filds
mov
xor
fistps
sti
mov
fmuls
fldl
cmp
aas
push
ret
fwait
add
pop
cmp
adc
cltd
pop
dec
fbstp
push
jle
leave
loopne
push
pop
dec
xor
or
roll
ljmp
faddl
mov
jnp
test
sub
jns
mov
jbe
push
lock
sbb
jmp
decl
repnz
lcall
insl
inc
cli
mov
cmp
mov
pusha
inc
or
mov
int3
adc
jnp
fildl
loope
jecxz
pop
lock
cmp
push
add
pushl
jns
cwtl
push
mov
icebp
inc
add
jnp
insb
lea
xor
xor
lds
outsl
out
add
cmp
push
cld
add
push
insb
mov
ljmp
and
jo
pop
bound
dec
mov
push
cmp
test
aas
bound
jge
mov
ret
sub
mov
xor
fisttps
imulb
mov
fisttpl
xor
inc
arpl
lods
sahf
enter
lret
mov
inc
cmpsb
mov
xchg
dec
fistpl
pop
imul
cltd
sub
cmp
or
cwtl
out
lea
aad
inc
pop
andb
fs
mov
push
or
inc
push
imul
mov
out
and
aam
out
mov
leave
inc
inc
pusha
add
sbb
shl
in
cmp
sub
fstps
test
inc
das
test
pop
clc
out
dec
xor
je
test
leave
jmp
loop
int
std
mov
mov
shll
scas
sbb
mov
mov
dec
xlat
test
cmc
aas
mov
push
loopne
adcb
xchg
enter
mov
sub
jp
into
cmp
push
xlat
insb
cmp
lahf
mov
xlat
or
pop
pop
push
cld
mov
dec
fisubrl
sbb
je
pop
sub
jmp
or
je
popa
pop
pop
lret
cltd
mov
enter
sbb
addr16
fcmovb
mov
mov
jecxz
adc
ds
stc
mov
xchg
pop
sbb
repnz
mov
mov
mov
push
imul
lret
fiaddl
push
in
nop
clc
imul
aam
insb
fs
xor
sub
es
lcall
xchg
imul
and
ljmp
fbstp
sub
mov
movsb
mov
loop
dec
mov
mov
mov
or
add
push
lcall
inc
into
push
sbb
xchg
mov
cwtl
or
sbb
pop
or
mov
lret
popf
gs
add
jmp
ss
mov
lcall
mov
stc
aaa
decl
mov
negl
dec
pop
xor
addl
xchg
iret
adc
aaa
jnp
mov
in
faddp
dec
xchg
jmp
inc
test
dec
lods
or
nop
clc
stos
dec
cmp
pop
fwait
cmp
daa
test
and
mov
mov
test
jg
scas
in
or
xchg
cmp
adc
cmpsl
jle
andb
xlat
pop
mov
insb
add
xchg
pop
rorb
xor
cmp
push
xor
js
mov
xchg
dec
mov
scas
pop
add
dec
loope
cs
test
movsb
cmp
arpl
push
lock
clc
dec
cmp
stos
sub
sub
add
or
ja
add
and
test
test
ret
or
cs
repnz
xchg
int3
cld
push
xchg
adc
cmp
mov
std
aaa
push
jp
out
sub
jne
cltd
dec
fcmove
jne
cli
add
rcll
sbb
subl
iret
jge
repz
add
mov
insl
mov
daa
inc
sbb
fmull
xchg
and
sub
push
cli
aaa
enter
sub
hlt
popf
insl
outsl
dec
pop
lret
mov
addr16
js
jl
xor
pop
xor
xchg
into
xchg
shl
jbe
lds
lock
push
insb
xor
xchg
fbstp
sub
stc
inc
pop
xchg
rcrl
add
or
das
mov
sub
mov
jae
ss
jns
add
push
fisubs
fildll
int3
lds
cltd
cmp
xor
int3
hlt
mov
call
dec
pop
dec
add
add
xchg
mov
outsl
dec
in
adc
jb
mov
cli
call
cmp
dec
pop
sub
jl
shlb
cmp
jns
mov
imul
gs
dec
popf
test
or
les
pop
je
aaa
inc
jb
test
js
movsw
and
jne
sbb
jbe
hlt
adc
jecxz
pop
sub
repnz
push
add
lock
xchg
pop
loopne
and
sarb
pop
xor
ret
repz
lret
adc
xchg
push
sub
lds
mov
idivl
or
dec
aaa
jbe
xchg
mov
or
dec
mov
roll
mov
mov
jnp
mov
hlt
jmp
stos
xchg
add
rcrl
jno
xchg
dec
icebp
inc
ljmp
repz
ret
sub
or
sub
nop
inc
jle
inc
pushf
int
sbb
add
sbbl
sub
xlat
mov
jmp
cmp
mov
repz
sarb
fwait
pusha
mov
call
out
cmp
outsl
xchg
int3
out
pop
xchg
fdivrl
or
vpunpcklqdq
call
inc
cmp
adc
int
fistps
xor
lahf
xchg
int3
lahf
mov
fcmovu
rcrl
sarl
sub
imul
add
sbbb
call
mov
inc
dec
push
adc
xchg
jl
stc
stos
sub
arpl
mov
xchg
std
outsb
mov
cmp
cmp
sahf
add
xchg
jmp
iret
xchg
hlt
mov
mov
testb
sub
pop
fcompl
jl
xchg
push
out
sbb
adc
mov
sub
fcoms
xor
mov
pop
push
pop
ficompl
adc
arpl
iret
adc
adcl
aas
loope
cmp
ds
test
push
and
jecxz
dec
cmpb
subl
sub
sbb
mov
add
movl
hlt
pop
test
sub
out
pop
rolb
mov
movsl
sbb
cmp
insl
mov
in
loope
insl
test
mov
ja
sub
hlt
adc
sub
loopne
loopne
push
mov
mov
jne
mov
sub
pusha
fldl
fs
lods
xchg
js
movsb
loopne
outsl
push
mov
dec
or
rorb
call
add
pusha
jl
fidivrs
rorb
call
or
fstpl
into
add
repz
scas
cmpsb
shll
pusha
cmpsl
inc
into
in
push
mov
mov
dec
orl
roll
jge
add
fcompl
or
mov
sub
mov
cmc
imul
cmp
add
fxtract
dec
add
in
pop
daa
aaa
xor
iret
xor
pop
insl
push
test
rol
mov
nop
inc
shl
push
sbb
popf
mov
adc
or
lcall
int
xchg
mov
dec
mov
in
aas
int3
stos
imul
aam
dec
out
pusha
into
mov
mov
adc
sbb
cs
pop
cwtl
xchg
int3
jmp
push
cs
mov
out
outsl
cli
addr16
movsl
sarl
and
es
arpl
fnstsw
sbb
pop
mov
dec
xor
adc
shlb
fwait
aad
sbb
fiadds
icebp
sub
xchg
jb
in
fadds
iret
sbb
inc
aad
movsb
popa
push
aam
and
push
xchg
adc
xor
jns
push
and
repz
ds
jle
jmp
scas
shrb
aas
xor
pop
cmpsb
pmaddwd
xchg
mov
rcll
mov
sbb
mov
add
ret
ljmp
xchg
js
add
cs
mov
mov
inc
xchg
push
and
rcll
sbb
ljmp
xlat
and
mov
std
xchg
rorb
daa
pusha
leave
or
sub
lcall
push
rcrb
fcomp
xchg
jge
mov
sbb
push
pop
stc
rdmsr
jmp
enter
movsl
das
xor
xor
or
push
dec
movsl
xor
lods
jecxz
shlb
adc
inc
jb
fdivrs
mov
push
iret
leave
inc
shll
xchg
shrb
xlat
pop
repz
in
fmuls
pop
push
mov
or
negl
pop
xchg
jne
fstl
inc
fdivrl
xchg
insb
out
adc
pop
cs
cmp
sahf
ret
mov
fsincos
fnstenv
bound
into
mov
in
scas
mov
lods
xchg
jnp
mov
jae
push
stos
or
fists
xchg
sub
fs
ret
cld
cmp
cli
mov
scas
dec
fwait
push
arpl
into
mov
push
push
or
lret
mov
push
cmp
jp
es
lcall
inc
icebp
lret
test
aas
pop
dec
push
xchg
int3
cld
push
pop
mov
gs
insl
xor
cmpsl
sub
inc
or
ds
leave
xchg
cwtl
bound
dec
inc
fs
jnp
stos
arpl
pop
mov
out
push
lret
sbb
ljmp
cmp
mov
xchg
push
insb
jl
xor
scas
xor
shlb
lds
inc
je
xor
push
mov
mov
push
lock
inc
test
cli
rcr
push
lret
adc
in
cwtl
shrb
adc
sbb
mov
mov
mov
lock
or
sbb
mov
adc
out
sbb
sbb
sti
movl
mov
sahf
jo
in
dec
jns
js
insb
cmpsb
aam
loop
sahf
jns
push
add
cmp
fs
xor
xlat
add
sbb
lock
and
xor
jg
cmpsl
inc
std
ss
push
or
dec
sub
jnp
mov
test
dec
push
jle
add
xchg
rolb
cli
jns
jnp
sub
and
cmp
stc
mov
push
pop
int3
or
repz
fxch
jge
test
es
mov
add
rclb
fcmovnbe
jle
sbb
sbb
inc
frstor
loop
mov
lret
aas
and
shlb
stc
push
clc
or
and
cwtl
lods
cmp
outsl
xcrypt-ctr
cmpsl
sbb
data16
sub
mov
leave
inc
fcoml
sahf
inc
test
fwait
xchg
in
rcrb
sbb
jae
xchg
add
xchg
xor
int3
and
jae
incl
icebp
pop
sbb
ljmp
lods
jno
xor
movsb
jmp
jp
dec
lret
mov
rcrl
fucomp
mov
fisubrl
outsb
out
aad
add
mov
lret
adc
daa
les
push
test
sub
mov
xor
or
fisttpll
jne
push
and
data16
mov
call
in
leave
sub
cmp
mul
and
clc
test
xor
pop
jecxz
std
or
add
add
call
popf
jns
cltd
dec
mov
les
jne
xor
aad
test
filds
pusha
shrb
mov
dec
push
add
push
les
out
int3
rcrb
sub
ja
sbb
dec
mov
mov
in
pushf
xor
xor
cli
sbb
fcomi
inc
das
dec
loopne
loop
jns
mov
mov
roll
dec
test
mov
cmpsl
xorl
jmp
inc
scas
xor
cmp
jo
test
roll
xlat
lret
loope
mov
and
inc
ljmp
inc
pop
cmc
pop
mov
push
mull
cmp
xlat
aam
insb
pop
ljmp
arpl
inc
popf
cs
xchg
cmp
in
push
cmp
enter
and
mov
inc
add
fiaddl
sub
push
inc
div
push
aad
dec
lret
lds
stos
je
jg
addl
jae
xchg
xor
xchg
divl
cmp
cmp
cmpsl
jp
fimull
xor
mov
mov
inc
sarl
sub
aam
pusha
cmp
out
xchg
mov
mov
jno
lds
mov
push
adc
mov
and
jnp
jmp
adc
loopne
dec
add
push
sub
addl
sub
and
leave
pushl
cmp
sub
imul
in
rorb
lds
out
pop
sub
pop
gs
sbb
mov
mov
jecxz
push
mov
outsb
pop
dec
add
in
mov
repz
rcr
inc
lea
addr16
lods
cmp
pop
out
mov
into
push
scas
gs
dec
mov
test
shr
inc
mov
push
adc
xchg
and
lret
mov
mov
dec
mov
sbb
adc
imul
inc
mov
dec
out
popf
cli
mov
pop
cwtl
pop
gs
enter
aaa
jge
inc
mov
add
dec
add
les
push
lret
xor
adc
inc
mov
shll
sbb
lea
inc
daa
ja
repz
out
xchg
cmp
mov
mov
jne
lret
mov
push
adc
mov
mov
inc
jno
and
mov
pusha
xor
jp
int
insl
push
lahf
call
cli
frstor
push
nop
sbb
cs
jp
sbb
andb
push
sbb
mov
or
cltd
and
mov
or
pop
xchg
je
jp
in
fldl
dec
push
popf
push
pop
notb
mov
call
pushf
cltd
dec
pushf
sub
jae
test
jge
mov
mov
pop
lret
arpl
cmp
popa
outsb
sbb
insb
nop
movb
lea
sub
cmp
cmp
mov
lods
mov
cmp
push
daa
adc
mov
hlt
pop
push
loop
roll
cmp
shl
mov
add
push
fiaddl
mov
push
add
sbb
mov
insl
jbe
or
clc
xchg
jne
and
mov
daa
push
int
jge
pop
mov
movsb
inc
mov
inc
xchg
mov
lods
xor
mov
dec
cmp
ds
jl
adc
js
rcrl
sub
adc
lods
adc
sbb
adc
fbstp
and
hlt
pusha
pop
xchg
stos
cmp
scas
or
or
es
adc
inc
mov
ja
test
sbb
daa
dec
sbb
jo
mov
subl
ficomps
jg
cmp
xor
jne
shl
push
movsb
idivb
and
or
neg
ret
lds
in
jecxz
int
lahf
arpl
ss
xchg
pop
shlb
popf
scas
mov
ficoml
jbe
mov
cli
inc
mov
push
sarl
sar
sbbl
loope
insl
mov
inc
rcr
sub
push
lods
test
mov
xor
lock
xor
xor
gs
jl
data16
and
mov
mov
ss
dec
movb
ja
sub
pop
sub
es
lahf
incb
movsl
lahf
or
push
jb
jnp
outsb
in
xor
addl
ds
push
adc
sub
je
fld
add
add
xchg
aas
pop
or
add
or
insl
filds
addl
mov
aas
aas
out
iret
ficoms
les
mov
subl
and
mov
aam
in
push
xor
xor
sbb
scas
xor
insl
outsl
adc
add
outsl
or
enter
or
in
scas
or
fs
xor
repz
jbe
rolb
je
xchg
icebp
adc
xchg
inc
call
daa
lcall
cwtl
dec
jnp
fdivrl
and
gs
jge
fsubs
test
hlt
cmp
test
fs
pop
adc
popa
hlt
mov
pop
jl
jecxz
adcb
pop
aas
add
mov
testb
xorl
xchg
mov
into
xchg
in
sbb
xor
xor
stos
imul
mov
test
mov
pop
dec
je
pop
add
inc
push
pop
add
std
iret
mov
push
mov
dec
inc
mov
clc
sbbl
xchg
ret
inc
cld
jne
mov
hlt
outsl
out
lahf
mov
dec
push
lods
mov
adc
inc
add
test
push
mov
push
cmpb
arpl
cmc
mov
add
pop
add
jbe
lret
pop
rclb
stc
mov
sub
jmp
loop
lds
enter
fnsave
fstpl
int3
xchg
mov
lahf
sub
std
inc
pop
or
xor
jne
imul
jle
or
and
or
sub
mov
movsl
mov
addl
enter
xchg
dec
jle
xor
push
int3
xchg
fldl
std
imul
pop
imul
decb
cltd
mov
inc
ds
mov
xlat
hlt
fwait
decb
lcall
jle
push
xor
cmp
sarl
pusha
xor
mov
adc
ficomps
arpl
xor
jbe
sbb
push
test
xchg
sub
lods
popf
jbe
xor
bt
inc
cmp
xchg
mov
jge
std
pop
dec
in
and
sbb
cwtl
out
inc
jp
adc
imul
mov
roll
pop
nop
loop
gs
xor
adc
lea
sub
out
and
hlt
xchg
je
popa
mov
test
std
cwtl
xchg
aaa
cs
movsb
ja
cld
pop
push
decb
movsb
out
cltd
sub
jle
or
movsl
fcoml
jne
das
xchg
or
std
cltd
xor
adc
out
mov
loop
xor
sub
int
pop
jb
sub
fwait
repz
test
sbb
sbb
sarb
in
push
repz
inc
xchg
mov
test
out
or
nop
bound
and
ljmp
jp
dec
ja
mov
out
push
hlt
in
cmpsb
lret
lods
inc
repz
popa
inc
sbb
adc
repz
and
outsl
mov
shll
loopne
out
mov
mov
and
sbb
je
scas
or
pop
stos
pop
aaa
adc
push
mov
jp
in
xchg
xchg
add
push
test
mov
sarb
lock
jno
inc
sub
data16
dec
xor
stc
pushf
incl
sub
scas
lock
in
idivb
je
jmp
xchg
cmp
ud2
mov
jo
dec
jo
jg
mov
xor
push
inc
mov
jecxz
sbb
hlt
out
out
adc
lds
lea
xor
or
std
sub
add
lcall
pop
push
test
adc
inc
dec
stc
sbb
divb
lret
xchg
sahf
test
xchg
fisubrs
ja
adc
mov
out
fs
jno
jmp
jnp
int
push
push
cltd
push
js
lods
jp
imul
mov
and
cmpsb
pop
sbb
mov
mov
pushf
movsl
xchg
xchg
push
or
xchg
dec
push
xor
mov
adc
mov
cwtl
add
xchg
and
clc
adc
sbb
and
cs
ss
pop
jmp
test
fwait
cwtl
sub
ret
push
andb
loopne
test
xchg
in
pop
ror
jnp
pop
cmp
adc
je
mov
lcall
dec
in
aaa
divb
mov
mov
in
movsl
mov
cmp
xchg
push
or
pop
cltd
insl
cmpl
push
sub
in
addr16
pop
xor
push
dec
and
sub
sub
xchg
pop
mov
mov
push
cmp
aad
daa
enter
dec
mov
or
lret
mov
add
test
mov
into
jae
push
clc
mov
sar
addr16
jp
mov
sbb
pop
aaa
cli
push
in
out
aam
lods
jae
inc
stos
lea
das
lock
and
imul
mov
lret
xchg
fistl
in
lds
push
dec
rcrl
pop
mov
or
mov
icebp
clc
aas
xor
mov
add
and
int3
lret
stos
sub
pop
mov
outsl
out
sbb
decb
mov
out
cmpsb
in
jmp
int3
test
mov
adc
aaa
inc
mov
jnp
or
xchg
adc
imul
jmp
fwait
jge
hlt
lea
imul
rcl
fistl
mov
mov
cmp
loopne
jns
push
push
dec
jmp
insb
int3
xor
sbb
out
jge
xor
sarb
cmp
add
mov
sbb
ror
arpl
mov
test
inc
stos
xor
mov
std
push
shlb
lods
sahf
inc
aas
push
jg
bound
or
xor
push
pop
mov
ds
cmpsb
add
int
xchg
popf
pushf
arpl
or
test
sarb
dec
xor
vcvttps2dq
xor
adc
sbb
add
push
cmpsb
icebp
dec
popf
add
mov
ficoml
imul
cmp
mov
cld
xchg
mov
inc
repnz
data16
and
push
xorb
xchg
sub
js
mov
jg
movsb
sbb
iret
inc
ret
mov
push
cmp
mov
cld
adc
push
pop
dec
lods
push
orl
lods
loop
or
xchg
inc
fisubl
jne
xlat
sbb
mov
das
stos
inc
movsb
mov
in
mov
aas
adc
insb
insl
jecxz
xor
cmpsl
mov
scas
nop
push
ret
pop
xchg
sbb
loop
aas
sbb
pusha
pmulhw
insl
pop
add
into
mov
stc
mov
icebp
mov
pop
sbb
push
and
xchg
mov
jbe
jp
push
xchg
sti
das
fstl
lret
inc
out
add
cmpl
insl
pop
xchg
mov
jbe
movsb
fs
mov
push
fwait
add
pop
xor
adc
and
push
adcb
loopne
and
inc
fwait
mov
mov
sub
jb
imul
sub
fildll
jbe
inc
ret
std
fildll
pop
loopne
inc
mov
xchg
loope
idivl
push
push
fsubr
sbb
add
jae
cld
mov
pop
push
cmc
push
mov
pop
jo
sbb
fs
jbe
push
cmp
mov
mov
pusha
and
jae
mov
add
dec
testl
scas
lcall
cmpsb
sub
xor
cmc
push
sbb
jmp
xor
popf
mov
sbb
rorl
lea
inc
and
xchg
ss
lahf
sbb
les
lods
and
jle
sbb
sbb
in
sbb
movl
outsl
cmpb
cmpsb
mov
xor
ljmp
xchg
xchg
or
outsb
cmp
jnp
push
jnp
aad
and
fmuls
addr16
sbb
gs
test
xchg
sub
into
mov
aad
test
outsl
insl
dec
rol
and
cmp
xchg
dec
cs
shll
inc
lock
negl
les
jp
fists
xor
dec
inc
xlat
daa
int
dec
repnz
pop
les
shr
fwait
shlb
and
xor
xor
adc
sti
mov
jo
mull
stos
in
cmp
mov
dec
scas
push
mov
das
pmuludq
mov
out
inc
repz
mov
pushf
pop
sub
push
out
mov
popf
je
jne
rol
jg
sbb
jno
shlb
inc
sahf
int
adc
jbe
inc
or
inc
sets
mov
prefetchw
mov
push
cmpsb
adc
or
mov
sbb
or
sbb
insb
testb
inc
outsb
push
in
adc
outsb
xor
xchg
sub
jecxz
mov
sub
sub
movntps
or
lret
jle
sbb
xchg
stos
lods
fcomps
aas
mov
jle
dec
pop
add
inc
adc
repnz
fs
xchg
inc
lods
or
and
addr16
cmp
das
pop
adc
idivb
daa
add
aaa
int3
sbb
popf
lahf
lret
and
int3
popf
xchg
or
inc
out
lods
out
pusha
sbb
ss
lret
and
leave
inc
ret
add
ret
dec
lods
push
or
loope
rcll
xchg
ror
je
sub
mov
mov
adc
out
mov
xorb
out
pushl
jb
out
push
jecxz
push
add
pop
lcall
mov
mov
and
cmp
stos
or
jge
lcall
clc
cmp
mov
inc
jne
in
mov
mov
ret
jo
shll
pop
add
mov
xlat
lods
call
xor
lret
pop
or
out
sub
mov
dec
lds
mov
aad
pop
push
fstps
xor
jg
sub
pop
mov
xor
out
inc
pop
out
scas
xchg
inc
jnp
stos
daa
ret
test
in
testb
out
or
mov
mov
mov
xchg
call
push
clc
pusha
pop
sahf
inc
lcall
nop
imul
push
in
jg
nop
push
mov
adc
xchg
add
enter
push
or
into
es
je
daa
or
mov
mov
add
push
insl
fucomip
push
out
jp
mov
clc
mov
rcr
ret
add
sti
ljmp
xchg
fimuls
mov
test
dec
xchg
cwtl
test
dec
sbb
mov
lods
sbb
stc
imul
cmp
fsts
pushw
and
lods
push
negb
and
nop
cmp
cli
mov
std
outsl
dec
mov
xor
testb
xor
stos
xchg
popf
adc
sub
inc
jg
xchg
test
jns
cs
js
iret
pop
jnp
lock
sbb
pop
mov
insl
mov
addr16
and
inc
cmp
leave
enter
insl
lcall
outsl
dec
andb
lods
xchg
ljmp
jo
sahf
stc
aas
addr16
add
data16
sub
add
jmp
push
add
jae
int
inc
pop
and
xchg
pop
push
and
sub
jno
jmp
insl
pop
jae
cmc
mov
dec
fsin
cmp
mov
popf
rcl
jnp
rolb
inc
or
mov
mov
add
add
or
aas
add
test
gs
push
push
push
sub
xchg
cmp
movsb
test
ret
in
inc
jg
pop
jg
dec
sub
xchg
jg
pop
int
lahf
cs
fnstcw
fucom
adc
xchg
xor
out
fistps
xor
mov
jl
aam
xor
xchg
shrb
sbb
adc
sbb
sbb
jbe
xchg
sar
push
je
push
js
jb
clc
mov
enter
sbb
push
mov
mov
inc
aad
xor
push
rorl
ds
xchg
test
xchg
mov
pop
lret
shr
add
pop
out
outsl
cmp
push
push
push
inc
int
out
cmp
arpl
call
push
or
xor
jbe
jp
stos
lods
lods
pop
jae
cmpsl
fnsave
scas
addb
and
sbb
enter
push
test
sub
mov
adc
cmp
aaa
lock
out
jb
or
out
push
mov
sbb
stos
push
cmpsb
or
push
push
jp,pn
sbb
inc
sub
aam
in
jge
xchg
mov
aaa
shlb
addl
popf
push
push
aaa
and
mov
bound
push
stos
xchg
mov
out
lahf
mov
repz
xor
ljmp
addr16
jo
lea
mov
jp,pt
pop
sbb
cltd
add
imul
fwait
inc
fcmovb
mov
stos
in
bnd
sbb
addl
jo
in
xor
aad
and
push
ret
mov
negb
stos
das
xchg
shrl
pop
cmc
movsb
push
sub
in
xchg
lods
mov
shlb
adc
and
pop
xor
add
les
xchg
ljmp
xor
and
mov
xor
dec
addr16
loopne
outsb
cs
in
lods
sub
test
mov
into
f2xm1
js
add
pop
movsb
mov
sti
adcb
hlt
cmp
push
push
xchg
xchg
jl
pop
mov
dec
xchg
inc
insb
in
addr16
addb
push
push
cmp
cmp
sbb
movsl
dec
pushf
pop
jge
push
fwait
xchg
jp
cmp
inc
aad
shl
mov
xchg
popf
test
mov
test
mov
push
aad
push
cmpsb
call
int
ja
and
pusha
or
lret
arpl
sbb
pop
or
repz
xor
out
mov
cmpsb
add
repz
add
movsb
call
outsb
mov
inc
into
push
xchg
cmp
cs
xor
or
jge
insl
xchg
movsl
popa
ja
xchg
or
aad
nop
mov
dec
adc
push
test
adc
addb
push
or
inc
ss
pop
adc
popa
dec
clc
add
xchg
xchg
push
jno
jp
in
inc
pop
stos
fsubrs
aaa
out
popf
push
scas
addl
cs
jl
xor
loop
adc
sarb
shll
jge
cltd
inc
dec
std
mov
cmp
aas
push
iret
in
mov
xchg
mov
cmp
add
push
push
in
xor
test
mov
cmpsb
xorl
push
mov
mov
fisubrs
pop
pushf
nop
inc
jno
xor
mov
inc
pop
imul
mov
or
adc
add
cmp
pop
clc
mov
leave
or
xchg
sti
idiv
lret
lds
dec
pushl
cmp
out
jno
push
mov
xor
shlb
pop
and
push
cmp
cmpsl
cmpsb
adc
xlat
lret
adc
fmuls
xchg
insb
jl
dec
leave
jle
push
dec
leave
mov
dec
jg
fwait
repz
mov
pop
mov
cmp
call
outsl
jb
mov
mov
mov
idiv
xchg
mov
or
or
mov
cmp
fstpt
icebp
jns
push
adc
pop
pop
lds
jge
jne
dec
jp
cs
leave
test
cld
mov
sub
cmp
pop
pop
call
sbb
jp
mov
add
into
push
dec
dec
ret
push
inc
inc
push
mov
xchg
dec
xchg
mov
dec
dec
insl
rcl
dec
dec
sub
mov
xchg
out
in
clc
test
imul
pop
pop
das
ds
push
pushf
mov
in
or
inc
das
pop
dec
and
lods
sbb
inc
xor
sub
mov
cld
mov
scas
gs
in
imul
shrb
jne
or
mov
xchg
lcall
rorb
mov
sbb
jnp
dec
and
bound
and
aaa
mull
mov
jnp
cmp
mov
cld
mov
add
add
sbb
fiadds
les
pop
jo
cmp
or
ret
aam
imul
mov
dec
jle
mov
xor
and
inc
test
push
mov
pop
imul
cmc
mov
shr
add
jg
insl
jbe
push
xchg
test
int
jb
sub
mov
ret
push
mov
popa
rclb
dec
pusha
fcmovnb
pop
mov
imul
incl
xchg
jg
dec
movsb
cmpsl
pop
subl
inc
sub
push
ja
mov
inc
jl
push
and
mov
jns
jl
dec
into
in
scas
jo
inc
sbb
ds
decb
mov
popf
cmp
pop
push
cmc
cmpsl
add
movsl
dec
ret
mov
fs
repz
sti
mov
jmp
mov
scas
enter
push
fisubs
pop
mov
loop
inc
or
xchg
sub
lret
push
inc
in
xchg
das
scas
dec
arpl
xor
add
lds
inc
out
push
lahf
ja
fidivl
push
xchg
sti
xchg
outsb
and
out
ficompl
mov
lods
sahf
das
xchg
push
mov
fdivl
mov
xor
mov
jnp
push
imulb
or
lock
insl
bound
orb
jmp
pop
xor
add
aad
dec
jle
mov
jecxz
xchg
ret
and
xchg
push
sbb
insb
insb
iret
incl
cmpsl
aam
add
cld
mov
push
jo
and
lds
daa
andb
xchg
mov
sub
sub
icebp
cltd
outsl
pop
cmp
lods
xchg
jno
cld
lret
movsb
pop
stos
push
xchg
adc
pop
jge
jo
xchg
icebp
fadds
mov
pop
mov
test
les
lret
dec
mov
inc
scas
lds
cli
aas
ss
pop
aad
outsl
or
adc
pushf
mov
pushf
or
mov
pushf
out
mov
sbb
test
jns
jmp
xor
cltd
xchg
in
xchg
dec
push
pop
int3
shlb
pop
repz
in
xlat
rol
jl
cmp
enter
or
add
inc
mov
inc
adc
push
into
aas
sub
and
cmp
adc
jne
imul
or
aad
fbstp
adc
test
lret
clc
out
test
div
das
js
movl
jns
jnp
fwait
jl
lcall
clc
ud0
cs
leave
adc
aaa
push
mov
dec
xlat
xor
sub
sub
cmp
push
or
lret
jl
mov
repz
pop
cmp
dec
mov
and
aas
ja
test
shll
pop
lea
mov
sub
xchg
aas
add
jno
es
inc
imul
add
xchg
mov
inc
aad
sub
lret
sbb
push
sub
cli
loop
cmp
lods
mov
bound
xchg
lret
or
call
popf
sub
aam
repz
push
xchg
cmp
xor
sub
xchg
sbb
icebp
add
mov
xor
mov
cmp
out
push
clc
jg
xor
sub
pop
out
mov
outsb
cmpsb
or
orb
mov
dec
cmpl
shll
xchg
repnz
in
roll
loope
repnz
ret
fstps
in
and
test
subb
sub
lea
sub
sbb
adcl
jne
or
add
cwtl
jge
pop
pop
fbstp
test
test
cmp
sub
mov
xor
and
fs
pop
je
push
dec
pop
scas
push
fucomp
cld
jl
mov
ficoml
push
popa
xor
cwtl
xchg
faddl
aam
fmul
sbb
and
mov
and
pop
xchg
mov
push
mov
test
ja
psrlw
or
lea
rcrb
jle
imul
loopne
mov
stc
xchg
das
jl
cs
xchg
lcall
sub
inc
nop
xchg
in
push
imul
mov
and
push
in
dec
xchg
and
adc
or
mov
fisttpl
sbb
add
or
icebp
shrb
jo
cmp
je
mov
popa
fs
fstpl
out
test
stos
popfw
cwtl
inc
rcll
cmp
push
ss
rcrl
adc
inc
sbb
adc
decl
xor
negl
rcrb
inc
adc
sarb
sub
lcall
add
addr16
jecxz
cmp
dec
mov
popf
xchg
incb
daa
mov
sbb
arpl
jecxz
adc
popf
push
leave
mov
imul
arpl
fldenv
loope
jno
mov
cmpsl
in
push
dec
shll
hlt
xor
stc
pop
nop
shrl
cld
push
cmp
or
adc
mov
jo
mov
xchg
js
dec
pop
and
out
sarl
add
insl
dec
sbb
movsl
es
adc
pop
fisttpll
inc
or
insb
inc
call
mov
mov
sub
xchg
les
aad
jnp
mov
and
sub
repz
je
cmpsl
jle
xlat
inc
rcrl
aaa
inc
add
popa
lfs
add
imull
mov
inc
clc
paddsb
mov
cmp
cmp
imul
mov
ret
outsb
or
popa
lods
in
test
push
popf
fadd
enter
popa
pop
push
lods
sub
insl
dec
jle
icebp
inc
imul
add
sbb
ret
add
cli
into
jge,pt
movsl
jnp
cmp
repnz
cmpsb
insl
call
lock
mov
test
test
incb
pop
push
mov
test
sbb
rorb
imul
push
jns
pop
sub
mov
add
push
sbb
enter
icebp
fbstp
dec
add
popf
aad
pop
mov
mov
mov
and
inc
add
add
cs
xor
sbb
imul
outsb
arpl
inc
mov
pop
push
ficompl
push
xchg
sbb
loope
aas
inc
out
jp
mov
icebp
add
jle
inc
test
outsl
inc
sub
sbb
imul
pop
jl
mov
mov
orb
mov
jmp
xchg
push
dec
das
add
inc
scas
and
sti
jne
sub
daa
lock
jnp
cmp
shrb
lcall
cli
test
mov
lods
out
insl
jns
test
push
add
or
aaa
scas
mov
aam
pop
mov
fiaddl
adc
cli
xchg
dec
test
stos
test
lock
jo
jnp
pop
lret
ja
jo
mov
int3
sbb
clc
pop
mov
cmp
stos
xchg
cmp
xor
cld
test
jg
aaa
std
push
jg
ja
sub
daa
inc
cmpsl
movsb
pop
sbb
mov
outsl
popf
push
sbb
xor
in
shlb
nop
mov
repnz
xor
xchg
lcall
xchg
sbb
repz
leave
das
pop
imul
test
push
fsubs
jo
sarl
scas
imul
inc
mov
out
sub
rcrb
lods
xchg
mov
lods
xchg
cltd
push
xor
cltd
sbbb
adc
pop
ret
mov
push
in
xor
add
mov
inc
mov
aad
mov
mov
icebp
sbb
decb
mov
mov
jne
lods
xor
mov
nop
out
pop
adc
jb
fstpl
inc
stos
repz
std
aas
sarl
jne
rcrl
lea
add
inc
shrb
mov
scas
jg
sub
adc
jp
gs
inc
int3
or
out
sbb
test
fwait
aas
xchg
ficomps
subl
dec
stos
mov
daa
cmp
push
mov
lret
mov
and
aas
mov
mov
popa
imul
scas
jg
push
cmp
cmpsl
or
mov
rorb
mov
addb
mov
outsb
jmp
pop
lea
sub
xor
pop
and
loopne
idivl
je
dec
or
xchg
mov
leave
push
inc
mov
mov
push
jmp
add
nop
test
cmp
aad
mov
aas
cmpsb
jns
cmp
mov
das
stos
stc
inc
add
xchg
in
pusha
rcrb
aad
pop
inc
xor
sub
orl
mov
jne
mov
sub
cmp
add
aas
scas
in
fnstsw
xorl
inc
and
outsb
jb
cmp
outsb
cmpb
rcll
pop
stos
stc
sbb
lret
mov
xchg
mov
sub
mov
lds
cli
xor
enter
sub
adc
ja
out
jbe
scas
test
addb
fcompl
hlt
aas
enter
and
shlb
roll
frstor
push
inc
dec
daa
ss
pop
jmp
sbb
cmpsl
inc
gs
clc
push
push
xor
scas
adc
test
int3
sub
dec
jl
enter
lahf
shll
xor
xor
int
inc
stos
sub
outsb
jle
push
mov
aad
rorl
icebp
ret
out
mov
add
xlat
adc
mov
ss
scas
adc
dec
fidivrl
mov
pop
in
cmp
adc
lcall
mov
cmp
clc
test
scas
bound
fmul
sahf
add
pop
cmpsb
jbe
add
fisubs
cwtl
fists
cmp
adc
or
push
inc
fwait
das
test
dec
and
jp
xchg
fimuls
xchg
daa
jp
xor
orl
call
fidivrs
lods
fstps
and
sub
aaa
add
jg
xlat
mov
adc
dec
es
xchg
jb
idivb
mov
inc
or
stos
shl
popf
lret
movsb
testb
mov
test
mov
lock
test
nop
aaa
push
outsb
push
or
nop
or
sub
jae
movb
arpl
icebp
mov
test
and
sbb
fisubl
subb
adc
int3
jmp
cltd
addb
repnz
push
loopne
and
or
push
add
mov
js
jo
int
dec
lods
fdivrl
push
out
fs
stos
and
fisubrs
test
xchg
pop
xor
push
mov
inc
leave
addl
gs
and
in
mov
js
scas
dec
scas
cld
popa
add
jecxz
pop
sub
cli
jno
imul
xor
in
push
sub
inc
inc
or
les
and
popf
and
fucomp
push
aad
movsb
xchg
out
inc
lea
into
cmpsl
rorl
call
div
insl
pop
or
in
inc
mov
pop
pop
jecxz
shlb
fmulp
mov
lahf
cld
pop
aad
aaa
mov
jg
push
mov
pop
sub
add
xor
bound
add
aam
rol
sub
inc
mov
sbb
enter
jo
add
stos
int
xlat
je
fsubr
lret
pop
sbb
rclb
fldenv
outsl
mov
sbb
inc
mov
popa
fnstenv
add
xchg
pop
pop
cmc
shlb
xor
fmul
sbb
xchg
cmp
in
outsb
loopne
lds
pop
mov
scas
dec
sub
add
jg
sub
data16
push
aad
push
or
jns
and
aam
add
adc
clc
out
out
cmp
xor
out
push
in
data16
mov
dec
mov
pop
pop
enter
repnz
add
enter
cmp
stos
out
xchg
mov
pop
pop
mov
inc
stc
mov
test
jne
mov
jge
ffreep
shlb
cmpsl
cmc
loop
xorb
test
cli
es
xchg
cltd
mov
mov
sahf
or
out
and
mov
adc
fdivrs
inc
scas
ror
test
push
lahf
repz
push
dec
xlat
and
jp
test
pop
jg
fstp
imul
movsb
gs
add
rcr
sbb
clc
test
into
mov
in
ja
add
mov
and
popa
pop
gs
notl
jns
dec
dec
loopne
ret
std
or
movsl
push
fs
xor
lea
or
loope
bound
test
pop
push
cwtl
cmp
or
sbb
push
call
cmpsb
cwtl
or
movsb
scas
cmp
pop
jl
inc
rcr
adc
mov
and
cmpb
mov
out
stc
sti
rolb
movsl
adc
repnz
jp
inc
jl
xchg
ss
cwtl
neg
push
in
push
jp
sarl
cmp
rorb
or
xchg
ret
adc
mov
pusha
sti
jmp
into
cli
mov
pop
lods
push
mov
push
pop
addr16
addr16
pop
mov
shll
arpl
mov
push
add
lods
add
aam
mov
jae
adc
push
leave
les
outsl
iret
xlat
pop
dec
jecxz
cli
add
push
flds
mov
push
mov
daa
pop
repnz
xchg
out
cwtl
sbbb
cs
push
pop
add
fistpll
xor
mov
mov
and
dec
mov
add
test
cmp
add
divl
push
and
lret
fisttpll
mov
inc
push
inc
dec
in
in
mov
imul
dec
inc
mov
pop
test
pop
mov
in
push
pop
imul
lret
jmp
mov
pop
xchg
shlb
repnz
mov
cmpsl
das
jp
inc
arpl
dec
or
stos
mov
cmpsb
push
jl
stos
test
sbb
mov
and
push
push
sbb
shl
cwtl
jno
push
lret
xchg
nop
repnz
dec
sbb
lea
xchg
ljmp
mov
test
aad
xor
stc
js
out
pop
das
xchg
rcr
adc
scas
cld
daa
lock
or
jnp
ret
pushf
mov
imul
mov
xor
xchg
jae
mov
sbb
popf
and
test
push
sub
hlt
push
cwtl
dec
sbb
test
lods
movsl
dec
fistps
enter
push
out
lcall
arpl
sub
pop
dec
adc
jmp
sub
inc
xchg
in
push
movsl
mov
rcll
or
leave
jmp
xor
inc
sub
into
push
pop
repnz
push
fs
addr16
or
mov
mov
mov
loopne
ret
clc
sbb
jp
int3
ss
mov
out
mov
jge
cmp
inc
jbe
push
ss
push
test
add
rcl
pop
mov
push
adc
ret
push
jle
inc
mov
shlb
jl
pop
adc
mov
jmp
cltd
mov
shlb
lock
aam
and
jae
iret
mov
hlt
jae
sub
je
ret
cmp
mov
xor
fwait
lahf
ds
lahf
insl
es
sbb
sub
clc
repnz
outsl
xchg
xorl
add
loope
mov
xor
xchg
movsb
ja
inc
sbb
insl
fsubrs
inc
hlt
into
mov
dec
lods
gs
xchg
push
adc
adc
jecxz
arpl
xchg
or
nop
lock
mov
int3
sti
ljmp
jmp
idivb
jmp
stos
aaa
ds
cmp
cwtl
or
or
in
or
cmpsl
mov
jno
push
xor
in
jl
pop
jmp
push
cmp
adc
xor
dec
xorb
adc
dec
shl
pop
js
sub
pcmpeqd
push
jo
mov
stos
cmp
adc
mov
repz
pop
sbb
add
in
cmp
shrl
cmp
rcll
test
inc
or
rol
mov
adc
orb
movsb
dec
sbb
ret
lret
jl
jno
js
lahf
sub
xchg
and
outsb
adc
lods
push
popa
push
adc
pop
adc
test
fld
sbb
xorl
mov
add
mov
lret
aad
cs
insb
scas
arpl
pop
mov
jecxz
cs
fcoml
mov
fnstenv
add
aam
addr16
mov
mov
and
movl
xchg
loope
push
xor
mov
jge
sub
aam
jnp
inc
lcall
test
inc
popa
jl
lock
mov
jge
sub
jmp
mov
imul
pop
mov
inc
pop
mov
xchg
dec
adc
popf
out
jle
ficompl
xchg
in
sub
lds
outsl
pushf
jnp
add
popf
lods
not
xor
mov
adcl
fimull
out
das
mov
pop
cmp
addl
mov
loope
and
inc
xorb
jl
add
xchg
adc
imulb
lret
mov
pop
out
clc
pop
lcall
daa
movsb
push
mov
jb
out
leave
push
mov
pop
into
adc
ret
dec
cmp
or
sbb
movsl
std
fbstp
or
repnz
cs
cld
and
and
mov
sarb
std
imul
add
lahf
aad
std
repz
orl
jmp
lcall
imul
popa
and
je
mov
cmc
rcrl
test
cmp
enter
fucomp
jb
jo
mov
push
and
jl
jle
sbb
push
cld
jb
mov
mov
es
lcall
add
loope
fadd
mov
cmp
mov
mov
xor
int3
inc
xchg
add
push
pusha
jne
ds
inc
mov
or
imul
lcall
ret
lods
or
or
fnstcw
cmpsb
xchg
pop
ret
push
pop
dec
dec
icebp
and
mov
rorl
add
push
fwait
cltd
in
or
loopne
add
mov
jns
shl
or
fs
cmp
add
sbb
dec
pop
aaa
test
dec
jl
dec
lret
in
push
or
cmc
out
fdiv
and
flds
xchg
jmp
xchg
mov
mov
pop
add
mov
lret
sub
pop
mov
sarl
fsubs
add
ja
fsubrl
incb
or
add
adc
out
push
fldl
loopne
lock
push
push
add
or
sahf
out
dec
arpl
jne
movsb
or
notb
mov
add
cmpl
clc
push
lds
sti
fdivrs
aad
and
dec
mov
ret
jbe
mov
pushf
cmp
push
mov
ret
clc
lods
mov
std
sub
ds
push
mov
cmp
fisubl
aam
xchg
rcr
movsb
xchg
mov
jno
insl
xlat
xchg
jecxz
shlb
sti
in
inc
insl
add
lret
adc
adc
add
test
rclb
inc
adc
xchg
inc
pop
aaa
xor
pop
push
ljmp
xor
jmp
mov
xor
ds
repz
test
jbe
imul
loop
clc
jbe
std
popf
dec
cmp
test
adc
xor
or
ret
fildll
cmp
xchg
sub
xor
fldcw
ds
xor
shlb
pop
hlt
lcall
std
mov
xchg
dec
loope
xor
lcall
xchg
lcall
cmpsl
xchg
xchg
push
jle
cmp
mov
loopne
ds
cwtl
cmp
inc
push
sub
fildll
adc
and
dec
lahf
orl
cwtl
loopne
sbb
adc
cmpsl
mov
mov
cmp
lcall
test
pop
inc
fdivrl
mov
lcall
popw
sarl
int
add
jecxz
push
out
mov
stc
xor
rolb
dec
imul
jle
xchg
xchg
or
dec
mov
cmp
mov
rorl
addr16
add
ljmp
mov
jbe
sub
mov
xchg
ret
push
sub
push
mov
insl
sub
enter
mov
or
rcll
jecxz
in
cmp
and
jmp
mov
and
pop
sub
dec
sbb
xchg
pushf
adc
cmp
push
addb
mov
loopne
fdivl
icebp
js
test
inc
add
xor
and
sahf
fists
data16
xchg
fists
leave
dec
insl
add
fnstsw
cltd
sub
jl
loope
xlat
mov
in
insl
push
and
and
cli
insb
dec
sub
ss
out
fs
dec
xor
insl
or
xchg
imul
pusha
push
sbb
hlt
sahf
push
rol
les
mov
movb
insb
sti
jns
and
lock
xor
inc
cs
mov
push
pop
xchg
inc
stc
jns
xchg
inc
pop
gs
mov
adc
add
jb
es
repz
pop
lock
shll
push
outsl
push
jns
out
pop
mov
xchg
adc
sub
imul
sahf
lea
and
or
lahf
or
and
pusha
mov
mov
pop
and
out
nop
adcb
lods
inc
mov
push
xchg
adc
push
add
js
push
repnz
out
mov
hlt
mov
movsl
push
push
aad
mov
dec
add
push
pop
lret
fcmovnu
cmc
cli
in
scas
call
mov
push
stos
loope
in
pop
mov
jle
xchg
sbb
xor
push
ret
sahf
adcb
int3
inc
push
scas
sbb
pop
fwait
xchg
idivb
rcrb
frstor
mov
mov
push
push
ficoms
adc
jns
fdivs
enter
imul
out
push
mov
ds
mov
hlt
jne
and
outsb
leave
mov
inc
loope
repz
aas
pop
inc
jns
xor
add
gs
std
mov
xchg
pmaxub
adc
mov
cmc
cld
rclb
pop
adc
jbe
fistpl
aas
mov
je
mov
xchg
or
in
pop
and
mov
out
pop
cmc
imul
add
mov
andl
mov
jmp
xchg
push
mov
out
or
fisubrl
jmp
xor
cmp
pop
mov
int
fs
push
mov
stos
outsb
sub
pop
call
mov
fcomip
pop
loope
pop
mov
inc
xchg
push
cmp
sbb
adc
arpl
inc
test
addr16
mov
leave
mov
xorl
jmp
xlat
out
movsl
inc
lret
fsub
lahf
mov
clc
lahf
cmpl
jno
mov
adcb
xchg
lds
pop
lock
jmp
dec
pushf
popf
or
xor
add
shlb
adc
push
mov
ret
push
jge
fnstsw
jne
fbld
mov
shll
pop
add
push
mov
and
push
inc
pushaw
outsl
call
in
imul
mov
xor
cs
xor
mov
mov
pushl
movsl
or
add
sbb
int3
xchg
pop
scas
cmp
test
push
cmpb
out
pop
xor
popa
push
in
and
push
mov
and
adc
scas
int3
dec
call
mov
scas
add
idivl
sub
push
jmp
inc
mov
stos
test
repnz
imul
jno
int3
imul
mov
cmpsb
push
mov
xor
and
cwtl
stos
jmp
daa
testb
ud1
idivl
jns
out
sbb
sahf
cld
cs
dec
ja
add
or
icebp
rorl
push
fwait
cmp
xchg
sub
sbb
movsl
sbb
mov
cli
outsl
mov
shlb
push
inc
sbb
out
hlt
push
fwait
sub
pop
mov
mov
rcrl
pusha
dec
insb
adc
inc
aad
dec
fs
and
mov
int
pop
xor
hlt
jnp
jbe
pop
loope
aam
imul
enter
cmp
bound
rcrl
xor
test
enter
mov
test
inc
inc
sti
adc
and
repnz
mov
and
lods
xchg
add
add
and
push
aad
push
out
pop
dec
or
or
mov
or
std
popf
push
dec
lods
clc
cmc
pop
inc
cmp
xor
mov
loope
xchg
ja
cmp
outsb
outsb
pop
mov
add
sub
push
pop
stos
out
aam
dec
ja
jno
mov
cmp
bound
xlat
in
test
push
les
repnz
mov
inc
push
adc
test
pop
cmp
mov
test
dec
jp
inc
mov
lods
ret
push
loope
loope
ja
sub
stos
imull
jmp
andb
jp
mov
inc
es
xchg
rcll
std
dec
enter
fidivrs
pop
pop
stos
cmc
cltd
cmp
adc
ss
cwtl
lds
push
push
push
adc
jmp
in
mov
jmp
shl
cmp
mov
pushf
xchg
pusha
push
xorb
dec
xchg
inc
mov
mov
mov
cmp
pop
sbb
xchg
xchg
mov
fcmovnu
int3
jge
push
test
movsb
xlat
inc
or
pusha
scas
loope
stc
push
add
xor
mov
sahf
mov
nop
sbb
arpl
vxorps
lds
lahf
or
jnp
sbb
hlt
pop
add
mov
sub
shlb
in
mov
xchg
mov
jge
pop
or
push
mov
inc
mov
or
add
sarl
mov
lds
outsb
cmp
mov
mov
test
lret
xor
inc
pop
mov
jae
mov
mov
push
pop
sbbl
mov
mov
mov
push
cmp
ja
cmp
int3
push
cmpsl
decb
jg
insb
cltd
dec
sahf
xchg
icebp
fdivrl
cltd
xchg
aam
cmp
popl
fsubrl
or
inc
sbb
test
add
lods
cmp
mov
loopne
into
xorb
fldcw
mov
ja
in
ljmp
dec
test
jp
es
jmp
f2xm1
cmp
inc
scas
sub
xlat
lds
sbb
data16
mov
int
aam
mov
or
jns
jae
cwtl
pop
and
pop
dec
pop
add
stc
jp
dec
int3
cmpsb
pop
cwtl
lods
outsb
pop
sub
jb
dec
lods
mov
sub
in
stos
push
mov
insb
add
push
pushf
call
mov
pop
insb
rclb
sti
lds
sbb
sub
jecxz
cld
bound
insl
mov
mov
mov
mov
jmp
dec
leave
push
push
fists
xlat
fists
je
jo
push
pop
pusha
pop
sbb
mov
xchg
mov
push
cwtl
addb
movsb
aam
cmp
stos
popf
cmp
mov
fmuls
jecxz
fcomps
sbb
sahf
repnz
leave
xlat
test
shl
outsl
jmp
in
outsb
add
fmul
enter
add
inc
pop
cmp
cltd
sbb
dec
mov
jl
ja
fisttpl
pop
mov
xor
scas
js
ss
xor
xchg
sbb
push
cwtl
ja
mov
incl
sub
sbbb
lahf
jno
lcall
mov
add
std
les
lret
negl
shlb
test
adc
mov
xor
sub
iret
out
sub
test
das
fcomip
orb
fwait
mov
jmp
in
add
jmp
inc
dec
fwait
das
jbe
xchg
mov
mov
cwtl
mov
pop
jl
rcr
ljmp
paddusw
push
dec
dec
mov
jbe
xchg
cmp
addr16
int3
inc
test
mov
out
in
out
popf
repnz
rorl
jge
jge
xchg
ss
mov
xchg
mov
jo
cmp
adc
push
pop
in
mov
data16
mov
jnp
stos
fs
mov
push
pop
nop
push
jb
das
xor
cli
aas
lods
push
pop
mov
ss
sub
out
test
insl
leave
sarl
pop
pusha
sbb
out
aad
jmp
mov
inc
imul
in
jecxz
data16
mov
jno
sbb
insl
mov
out
ficomps
pop
ror
fisubs
sub
mov
mov
and
push
cld
mov
insb
sti
cmp
cmpsl
into
popf
inc
mov
push
fidivs
or
not
inc
mov
fsubr
mov
jae
cmp
mov
loopne
test
daa
pop
clc
cmp
ror
roll
das
sub
mov
ss
enter
mov
cmp
mov
insb
cmpsl
xor
in
fstpt
ljmp
xchg
sbb
cwtl
pop
pop
jl
popa
loope
cmp
add
xor
push
jb
xchg
inc
dec
sbb
mov
mov
dec
ss
xchg
ja
or
dec
or
fdivr
jmp
insl
in
xor
sti
les
test
pop
fadds
push
call
shlb
clc
mov
sub
aas
and
pop
lock
ljmp
mov
clc
bswap
or
cmp
dec
pop
cmp
iret
mov
aad
adc
push
xor
push
mov
inc
adc
jo
mov
in
mov
pop
mov
jbe
jbe
call
sbb
mov
fisubl
adc
shl
push
pushf
pop
jns
or
jnp
pop
or
xchg
sub
int
fs
ja
xchg
mov
test
jmp
push
ljmp
and
push
aad
jno
fadd
fisubrl
insb
sub
movsl
jle
or
and
je
push
fs
xchg
stos
enter
inc
xor
inc
mov
mov
je
insl
mov
xchg
int3
addr16
hlt
xbegin
arpl
mov
inc
f2xm1
sbb
jno
xorl
nop
ljmp
lcall
mov
pop
sbb
mov
inc
xor
push
and
pop
mov
out
lods
ret
outsl
mov
push
xchg
stos
pushf
cmpsl
or
cmp
mov
mov
das
andb
fidivrs
mov
aad
pop
and
xchg
sti
push
xchg
adc
pop
test
das
jo
fs
xchg
add
dec
sub
ljmp
imul
push
in
daa
into
mov
pmulhw
std
xor
stos
mov
hlt
add
add
dec
in
aam
mov
mov
movsl
push
ss
data16
arpl
mov
lock
sub
imul
cld
sub
repnz
push
es
mov
sub
cmp
sub
ja
jo
nop
sarb
inc
inc
cli
lds
movb
call
js
xchg
cmp
lahf
dec
ficoml
pop
ss
and
ret
fldlg2
pop
sbbl
push
xchg
inc
xchg
decb
mov
and
xchg
sbb
nop
dec
fsubs
out
jb
bnd
dec
xor
out
and
cmp
cwtl
int3
dec
gs
aas
mov
inc
lahf
pop
xchg
pop
jp
push
sbb
mov
loope
jecxz
loope
lret
push
adc
sbb
push
inc
xchg
mov
out
pop
mov
cltd
insl
xor
sub
pop
adc
cmpsl
xlat
fwait
cmp
cmp
ror
fstpl
xchg
or
daa
test
jecxz
arpl
sub
mov
dec
stc
fmuls
ds
dec
inc
pop
inc
outsl
cld
push
cmp
les
es
xor
popa
jecxz
push
sbb
test
bound
dec
mov
testl
cmpsb
jg
sbb
xor
inc
dec
xchg
fsubp
imul
in
dec
stc
sti
int3
cmp
cmp
in
lret
adc
cmp
lret
es
fdiv
jno
insl
cld
nop
cmp
adc
sub
push
or
push
addr16
and
pusha
aad
mov
in
add
jmp
or
mov
jp
cmp
in
test
jno
dec
mov
out
jge
inc
mov
or
and
or
pop
cmp
sbb
jmp
outsl
mov
cmpsl
call
rorb
jl
lods
sbb
loope
push
add
ds
out
in
out
orb
popa
pusha
lock
push
jp
mov
into
cmpsl
jnp
dec
mov
jmp
bound
ficoms
pop
sub
cmp
cmpsl
ljmp
gs
stos
sbb
push
cmp
cmpsl
inc
xor
ljmp
scas
add
ljmp
or
inc
jle
mov
shr
movsl
push
xchg
inc
sub
push
sbb
sub
pop
popf
insb
movsb
sub
xchg
mov
dec
aaa
rorb
loope
lods
es
cmp
jmp
icebp
push
mov
xchg
dec
dec
push
push
sub
jg
js
inc
xor
lds
mov
sbb
jbe
int3
cltd
add
lret
mov
lods
call
sub
sbb
pop
cwtl
push
aad
jnp
pusha
test
mov
aam
int
nop
dec
pop
lret
xchg
pop
jne
or
pop
mov
lea
pop
fists
adc
mulb
xor
addr16
fs
pop
test
icebp
leave
sub
call
inc
lcall
in
xchg
xor
pop
popf
loope
dec
mov
fwait
push
pop
xchg
fs
xchg
adc
adc
dec
test
jg
aaa
in
pushf
pop
fdiv
jbe
addr16
mov
loopne
mov
bound
fstps
gs
sub
movsb
xor
test
jecxz
jmp
add
popf
pop
mov
icebp
movb
addr16
scas
enter
jg
shr
xchg
sbb
addr16
jno
gs
addr16
cmp
cmp
jno
pop
mov
or
mov
or
sahf
inc
iret
adc
enter
std
and
orb
lds
mov
icebp
lea
stos
ja
loope
popf
push
ljmp
loope
mov
adc
outsb
fcomi
insb
xchg
cmpsb
imul
push
sbb
jns
ljmp
push
jl
cli
movsb
ficoml
jne
push
dec
push
or
es
mov
mov
adc
aam
mov
cmp
lods
sub
pusha
inc
or
sub
pop
xchg
mov
imul
push
and
jmp
nopl
lock
into
add
sbb
inc
enter
bound
aam
repz
iret
test
cmpsl
ds
pop
inc
sbb
mov
mov
cltd
xor
in
stc
testl
pop
rorl
add
pop
mov
mov
mov
push
mov
add
sbb
xchg
cli
ljmp
inc
dec
mov
clc
pop
adc
xor
call
mov
and
in
testb
jl
xchg
lahf
sbb
in
out
out
mov
xchg
lea
stos
cwtl
and
cmp
cli
xchg
addb
sbb
sub
cmp
push
insb
outsl
push
push
mov
mov
sub
or
hlt
jmp
imul
cli
xor
shl
sub
lock
cwtl
inc
leave
and
mov
cmpsb
popf
xor
jnp
ret
cmc
scas
cmpsb
mov
insb
sbb
sahf
mov
jmp
lea
or
jb
mov
add
adc
dec
xor
scas
out
das
pop
mov
cli
and
int3
jb
cmp
push
add
ficoml
dec
hlt
mov
inc
leave
adc
cmpl
stc
scas
popw
std
adc
stos
pop
cmpb
dec
and
ret
push
fldlg2
jmp
add
xor
jmp
push
xor
movsl
fsubr
jbe
cwtl
sbb
rolb
add
jo
and
mov
pop
jl
cmp
es
shrb
dec
cmp
lods
js
out
push
mov
shlb
pop
push
and
jne
out
dec
mov
sbb
movsl
in
add
stos
push
scas
and
add
jg
fsts
xor
sbb
ret
popa
icebp
jmp
push
shlb
and
mov
push
push
clc
cltd
dec
adc
sahf
xor
or
dec
mov
loop
mov
repz
daa
frstor
test
outsb
xchg
dec
test
xor
inc
xchg
dec
pop
cltd
inc
or
ret
pop
stc
into
scas
dec
shlb
sub
popf
jns
mov
push
and
and
pop
inc
sbb
sbb
sbb
xor
or
pop
adc
adc
jne
mov
add
xor
orl
add
push
inc
push
add
push
aam
push
xchg
aad
enter
sub
in
fstpt
icebp
pop
pop
inc
adc
fisttps
fucomp
pushf
sub
popf
push
fisttpll
subl
bound
aad
sar
dec
jb
cmc
lret
mov
adc
scas
push
data16
or
std
pop
fiaddl
bound
leave
cmp
dec
sub
sub
addr16
sub
loop
or
and
pop
hlt
lods
test
scas
loopne
call
scas
lock
xor
mov
lods
jne
lods
sbb
and
mov
xor
insl
cli
insb
mov
push
cmpsb
repz
lret
pop
mov
mov
adc
ljmp
jbe
inc
mov
jne
push
mov
add
repnz
or
inc
cmpsl
xor
mov
sbbl
and
mov
mov
adc
mov
inc
in
add
repnz
push
jle
int3
movsl
lldt
les
mov
mov
fs
mov
inc
mov
outsb
jge
hlt
mov
adc
stos
clc
push
inc
movsl
and
adc
mov
clc
cmp
mov
and
mov
sbb
xor
jae
leave
pop
in
or
jg
mov
push
cmp
mov
ljmp
aam
lahf
imulb
dec
inc
loopne
gs
mov
or
std
roll
mov
lea
adc
cs
pop
sub
pop
push
sub
lahf
lret
mov
xor
xchg
bound
xor
lahf
mov
fdiv
xchg
push
lret
or
add
jge
jl
stc
ljmp
adc
popa
fimull
adc
pop
mov
sub
pop
sub
enter
or
cltd
pop
push
mov
pop
fcoml
jmp
push
jmp
mov
rorb
pop
add
sub
sub
lea
movsl
push
xchg
jg
jg
shlb
test
pop
test
mov
pusha
in
js
pop
or
cmp
loope
call
mov
sbb
ljmp
xchg
mov
dec
jae
sbb
pop
sbb
pop
negb
sbb
xchg
pop
push
mov
dec
or
andl
pop
jl
dec
aaa
mov
push
adc
xor
in
fadds
fs
rol
lock
gs
adcl
bound
dec
jno
sbb
rorb
ffree
xchg
pop
pop
popf
cmp
mov
cld
cltd
push
sub
mov
sahf
sbb
xchg
jge
xchg
in
data16
mov
nop
xchg
out
push
daa
jle
xchg
xor
popa
or
in
sub
mov
jb
and
inc
jg
push
jl
ja
cld
jp
mov
cltd
nop
or
into
mov
add
jmp
scas
pop
lods
pop
cmp
push
outsb
push
pop
cmp
test
scas
adc
andl
je
add
xchg
test
test
ret
insl
mov
adc
jmp
call
pusha
inc
mov
popa
xchg
call
into
dec
mov
xor
sbb
jg
push
cld
push
stos
insb
and
shll
enter
out
ss
add
repnz
mov
jecxz
pushf
jge
shl
nop
int3
jp
in
mov
xchg
sbb
inc
loopne
aaa
pop
xchg
loopne
cmp
xor
and
push
jne
popa
test
sub
shrb
dec
aam
mov
push
test
lds
fcmovne
push
mov
mov
dec
mov
or
fldt
or
test
jo
mov
mov
xchg
ljmp
jns
je
inc
arpl
imul
or
pop
les
mov
mov
mov
loopne
sub
cmc
std
add
loop
ret
inc
mov
ja
cmp
fcmove
pusha
and
les
sarl
or
popf
test
aaa
cmp
mov
add
add
mov
jbe
popa
loope
and
push
push
mov
and
repnz
pop
pusha
and
mov
out
sti
icebp
scas
scas
inc
mov
sar
lret
aas
mov
bound
mov
mov
aad
inc
or
cltd
mov
xchg
cmpl
xchg
xchg
mov
mov
dec
xchg
or
xchg
enter
pop
xchg
or
fsts
es
mov
roll
addb
add
mov
into
fnstcw
mov
mov
jae
loopne
sbb
lods
mov
das
xchg
insb
push
sub
dec
or
sub
icebp
sub
push
jmp
movsb
and
sbb
cwtl
jl
dec
mov
pop
dec
dec
inc
or
push
cmp
rcpps
push
stc
ss
testb
sub
mov
mov
and
les
dec
hlt
ds
xchg
dec
fwait
mov
lret
jmp
jle
pop
hlt
fwait
push
adc
ret
push
xor
sub
mov
test
adcl
lods
sar
cmpsb
xchg
das
sub
mov
aas
dec
aas
test
das
jns
insb
push
add
pop
jae
ret
mov
scas
in
out
loope
xchg
jnp
pop
xlat
xor
add
addb
mov
out
ljmp
sbb
push
insb
lret
stos
inc
rolb
nop
sbb
fwait
lahf
dec
push
mov
in
in
sbbb
dec
xchg
je
int3
dec
imulb
jb
mov
inc
ficompl
sub
push
adc
xchg
push
sar
mov
push
mov
mov
pop
pusha
mov
mov
pop
add
inc
or
cld
jle
adc
mov
cmc
cltd
sbb
xchg
or
cli
int
loope
sub
insb
sub
xchg
out
mov
mov
sbb
mov
out
test
out
pop
mov
loope
mov
sarb
test
popf
scas
std
pop
scas
xchg
or
and
adc
aas
repnz
pop
ljmp
and
mov
aaa
shrl
xchg
jns
jo
test
lods
or
sti
dec
nop
adc
scas
aas
dec
aad
mov
mov
lods
stc
fisttpll
jae
cltd
mov
leave
aam
stos
in
es
ljmp
imul
stc
push
imul
adcl
xchg
and
imul
lods
lcall
sub
test
negb
leave
inc
mov
push
lahf
mov
pop
push
ljmp
mov
insb
xchg
push
ret
cmp
add
jge
mov
movsb
xchg
mov
sub
dec
cwtl
scas
sbb
pop
scas
sub
inc
mov
push
sbb
ds
out
mov
inc
xlat
std
dec
jne
adcl
jno
int
adc
aam
rclb
cmp
inc
and
push
cmpsb
mov
adc
ds
mov
fstps
jns
jp
cmc
sbb
dec
xor
test
or
sbb
rorl
test
cmp
inc
je
cmpsb
pusha
or
stos
aam
enter
and
ljmp
push
xchg
in
dec
sub
lret
fs
stos
ret
lea
pop
inc
sbb
lahf
jnp
ss
inc
leave
rcrl
inc
xor
ljmp
dec
cmp
inc
arpl
into
cmpsl
out
jbe
mov
sub
je
cmp
xor
in
fnstenv
out
dec
push
push
mov
stc
xchg
rcr
movsl
pop
mov
mov
loope
out
inc
push
sub
aam
orl
xchg
jo
xchg
jg
pop
fsts
dec
iret
cld
inc
push
or
mov
nop
mov
iret
les
adc
negb
movsl
and
mov
data16
xchg
out
js
sub
outsb
incb
arpl
xchg
out
pop
push
mov
and
fisttpl
pop
mov
test
and
push
sbbb
in
mov
mov
lcall
lods
fsubrl
das
add
ret
sub
leave
fildll
adc
adc
and
pop
enter
jbe
push
jb
lock
jmp
xchg
iret
mov
movsb
ja
adc
mov
sub
adc
dec
push
pop
pusha
je
insl
jae
add
mov
lret
inc
and
loop
es
jge
and
mov
cld
cmc
imul
stc
aaa
sar
mov
pop
enter
cld
mov
subb
jle
std
icebp
scas
jg
cmc
or
or
sub
dec
int3
or
mov
out
add
xchg
subl
or
imul
adc
mov
push
scas
stc
pop
pop
daa
lods
mov
fcmovu
cmpsl
jl
pushf
and
xor
mov
shl
add
in
pop
les
jno
cmp
std
aad
or
mov
out
loopne
xlat
aas
int
cmpsb
fnstsw
xor
pop
pop
stc
add
int3
test
cltd
mov
sub
jp
push
jns
loop
lret
adc
xchg
dec
out
outsb
push
shrb
cmp
sti
shll
jl
cltd
pop
lods
enter
xor
inc
fsubrs
aas
loop
cmp
jnp
jo
sub
es
popf
lods
xchg
sbb
add
mov
push
testb
mov
dec
jbe
pushf
inc
add
cmpsb
lret
and
push
rorl
mov
inc
push
aas
pop
xchg
sbb
adc
add
insb
and
jnp
sub
sbb
out
push
mov
les
jmp
stc
mov
xchg
mov
fidivrs
mov
inc
push
xchg
mov
cmp
ret
pushf
jmp
add
mov
in
mov
add
adc
mov
lret
pop
imul
mov
sub
mov
adc
cmc
lret
mov
mov
in
nop
jb
add
push
and
jbe
sbb
lahf
loop
mov
jle
fbstp
dec
and
scas
inc
xchg
lcall
loop
int3
dec
xchg
jecxz
pusha
mov
mov
stos
xchg
fwait
cmp
data16
cmpsl
or
and
and
sti
mov
aas
pop
mov
xchg
sub
roll
mov
dec
xchg
mov
iret
shrb
mov
mov
sub
out
arpl
stc
xor
mov
jae
lods
jle
and
cmp
jo
icebp
or
mov
add
inc
repz
add
cmpsl
into
adc
xchg
xor
inc
imul
mov
mov
aas
pop
sub
push
subb
ret
push
jp
shl
sbb
mov
dec
adc
arpl
cmpsb
rcl
lret
int3
jge
mov
jle
cmp
pop
je
push
cmpb
sbb
or
mov
cmp
push
mov
icebp
addr16
js
shlb
adc
pop
in
mov
std
push
repnz
cmp
adc
out
xchg
aaa
daa
lods
mov
adc
or
push
mov
inc
shl
sbb
xor
push
sub
es
movsb
xchg
adc
xor
rcrl
sub
hlt
mov
adc
sbb
jecxz
cmc
pop
shlb
push
fisubl
jne
add
cli
sahf
cmpsl
mov
cmp
push
pusha
divb
xchg
mov
mov
movsl
jo
ss
cmpsl
mov
push
xorb
popa
repnz
cmp
bound
and
cmp
push
mov
jl
subb
lds
xor
add
inc
jle
inc
shrl
mov
inc
fdivs
cli
jge
pop
ljmp
shrl
repnz
or
mov
adc
subb
cmp
dec
sbb
pop
int3
and
sub
and
cmpsb
push
imul
fnstcw
lods
ds
xchg
ret
faddp
cmp
push
fs
xchg
std
mov
clc
lea
and
nop
xor
sub
test
out
dec
faddl
jo
inc
testb
dec
leave
mov
sahf
popf
mov
ret
inc
adc
stos
mov
loope
inc
sbb
mov
fdivrl
pusha
popa
push
inc
mov
cmp
sbb
adc
orl
das
frstor
popf
scas
lret
cld
lods
push
mov
cmp
add
jecxz
or
sahf
jecxz
mov
pop
call
add
mov
outsb
insl
and
insb
mov
mov
pop
pop
mov
aam
out
psubq
fcomps
push
inc
xchg
adc
add
inc
mov
pop
fsub
ds
jno
popa
cmpsb
xlat
add
jp
mov
movsl
aam
pop
adc
mov
sub
push
loop
shlb
jge
lcall
hlt
test
push
call
dec
jp
stos
xor
clc
bound
fists
pop
rcll
sbb
sbb
icebp
xchg
xor
fadds
insl
or
roll
xchg
add
sbb
sbb
fimuls
pop
ljmp
sub
repz
cmp
or
outsl
push
cmpl
addb
jl
sbb
andb
daa
lds
ss
rcrl
sub
pandn
clc
rorb
push
leave
sbb
aaa
out
mov
sbb
push
call
mov
mov
sbb
mov
jns
in
aaa
mov
clc
test
nop
xchg
dec
iret
ja
cwtl
cmp
ret
cmp
imul
xchg
sub
sub
mov
push
cmp
mov
push
cmp
mov
scas
nop
and
shll
pusha
cwtl
fwait
gs
push
loop
rcrb
cld
int3
mov
std
out
jge
icebp
sub
mov
push
outsl
xlat
lods
loop
jge
pop
or
test
pop
sub
fbstp
scas
push
mov
arpl
out
aaa
fstl
loop
repz
add
loopne
arpl
aas
cs
or
or
mov
imul
dec
dec
dec
fwait
xchg
inc
and
inc
les
bnd
lods
cmp
test
dec
mov
add
sbb
dec
push
std
cwtl
xor
cmp
adc
mov
lret
push
jo
pop
mov
mulb
xor
in
mov
push
je
mov
mov
sub
fs
jmp
mov
imul
sub
cli
js
test
inc
xchg
mov
pop
subb
sub
mov
cmp
mov
mov
sub
mov
adc
xchg
xchg
push
jmp
sub
je
std
mov
inc
cmp
inc
outsb
movsl
repz
aaa
testb
in
movsl
mov
insl
addl
filds
and
xor
xor
adc
outsl
push
ja
out
xchg
cld
leave
pop
sub
mov
aad
ret
jl
jge
pop
push
testl
mov
cmpsl
cmpsl
in
sub
mov
adc
sbb
fisubrl
sbbl
mov
movsl
dec
faddl
mov
add
fdiv
mov
divb
xor
mov
callw
arpl
filds
push
push
loopne
dec
cmp
adc
sbb
hlt
pop
xchg
push
imul
addr16
adc
std
add
icebp
or
in
ror
les
add
lds
or
pop
cmp
xor
xchg
add
cmpl
std
ficoms
das
add
fwait
les
sub
and
push
mov
or
cmp
addr16
jbe
mov
enter
out
mov
ror
jb
sarl
leave
xor
adc
adc
cmp
lods
pop
rcll
dec
fdivl
xchg
addr16
fsubs
es
cmp
push
loop
aaa
inc
cltd
inc
adc
and
negb
shrb
dec
adc
or
mov
or
mov
jb
pusha
inc
ljmp
movsb
imul
sub
movsl
or
outsb
xchg
leave
cmc
dec
pop
aaa
pop
mov
in
daa
outsb
shlb
xchg
sub
sahf
fcom
cmpb
iret
push
testl
push
fistps
pop
push
mov
xor
js
das
or
loopne
loop
jno
mov
xchg
xchg
fistps
or
js
fsubs
mov
cwtl
cwtl
mov
xlat
repz
repz
push
insb
lds
aas
test
nop
stos
iret
and
add
or
aas
xchg
jle
pusha
or
pop
ljmp
aad
loop
xchg
pop
inc
add
fdivrl
mov
stos
out
inc
dec
mov
dec
jge
push
mov
addl
lret
ja
imul
stc
movsl
jns
adc
outsb
pop
jne
ss
ljmp
in
lcall
addr16
adc
xchg
in
jbe
xchg
sub
hlt
jg
adc
test
mov
dec
xchg
int
arpl
aaa
aad
jno
movsl
lods
push
ret
lods
adc
test
rcrb
fmuls
cmp
push
mov
rcl
pushf
loopne
inc
fscale
data16
daa
daa
test
js
test
rolb
sub
rolb
push
popf
mov
sbb
cmpb
mov
xchg
xchg
daa
ror
fsubrs
cmp
mov
sbb
imul
mov
fstl
mov
mov
cmc
mov
sbb
repz
inc
lds
push
mov
jmp
lods
movsl
push
test
mov
inc
inc
add
adc
ljmp
sub
pop
jnp
dec
mov
and
in
es
test
add
push
lock
jl
and
aad
dec
mov
maxps
mov
repnz
scas
dec
xchg
push
pop
bound
push
int
call
aaa
cmpsb
jp
divb
jg
sbbl
pop
dec
test
push
push
je
inc
in
repz
cwtl
and
stos
cmp
sbb
lret
mov
in
dec
jl
aas
push
xor
jge
icebp
push
lds
or
mov
pop
push
arpl
sbb
fwait
dec
jle
movsl
pop
xchg
sub
lds
xchg
test
idivb
adc
sub
ds
cmp
rolb
outsl
je
xor
roll
pop
int3
sbb
and
bnd
jge
xchg
stc
pop
sub
add
sub
nop
testb
fldenv
ret
adc
push
dec
into
das
movsb
out
shll
test
sbb
sbb
andl
adc
jmp
push
sbbb
jmp
insb
dec
xchg
or
mov
mov
mov
cmp
cmpsl
jns
mov
push
rcrb
xor
dec
push
mov
sub
xchg
mov
cmp
repnz
add
pop
pop
push
mov
mov
inc
sbb
jp
dec
aad
je
cli
dec
sbb
pop
jecxz
scas
outsb
inc
cmp
jg
adcb
xchg
inc
add
sbbb
adc
pop
jg
mov
cwtl
mov
arpl
lea
jp
dec
dec
mov
pop
sbb
mov
mov
sub
mov
push
faddl
add
mov
ret
and
cmpsb
mov
repnz
jge
jmp
adc
lods
adc
jge
xlat
dec
daa
pop
dec
insl
or
rcrl
addr16
scas
push
les
jecxz
pop
mov
repz
push
mov
lret
xor
sarl
mov
cmpsb
decb
cmp
or
mov
pop
mov
push
pop
add
lret
call
xchg
push
mov
pop
pop
add
loope
test
scas
lods
inc
inc
push
mov
daa
push
cmpsb
movsb
xchg
sub
fstpt
adc
mov
inc
mov
dec
adc
mov
nop
inc
ja
xor
or
jge
mov
sahf
mov
sahf
shll
aad
pop
imul
ficomps
imul
aaa
iret
mov
xchg
adc
jbe
push
lods
pop
cmp
ja
lret
imul
sbb
and
push
mov
fldt
es
in
lcall
and
mov
aam
inc
out
sahf
dec
cs
push
sub
cli
sbb
aaa
rclb
inc
sar
pop
lea
jae
add
lcall
in
jle
xchg
or
outsb
aam
sbb
out
push
cs
mov
push
mov
ljmp
fstpt
pop
cmpsl
pushf
loop
mov
jo
push
into
xchg
xor
inc
sub
imul
leave
push
fnstenv
insb
inc
jae
ficompl
push
dec
bound
out
aas
sbb
add
adc
rorb
pushf
shr
pop
xor
jg
sbb
mov
iret
jae
aas
sub
and
or
mov
movsb
and
pop
xchg
xlat
lods
lahf
add
cmp
out
dec
cwtl
and
and
lcall
pusha
xchg
xor
push
push
xchg
pop
sbb
cmp
dec
cmp
mov
jecxz
sbb
adc
aam
dec
ret
icebp
and
loopne
stc
pop
int
mov
jo
dec
fnstenv
stc
fadds
xchg
jns
cmpsl
add
in
ficoms
ljmp
iret
pop
popf
or
inc
ret
rorl
dec
lahf
push
mov
xchg
enter
loope
sub
idiv
rcrl
mov
adc
imull
call
rorl
les
xchg
adc
cmc
pushf
cmp
cli
mov
pop
jge
rclb
insl
pop
jecxz
das
or
jo
jg
xor
cmp
mov
cmp
cli
mov
js
scas
jecxz
add
dec
or
dec
push
sub
ror
sbb
leave
push
add
fnstcw
outsl
lcall
repz
inc
aas
data16
sbb
sahf
lods
push
add
mov
mov
ds
lock
add
mov
jbe
push
ljmp
jb
mov
imul
pushf
aaa
in
mov
mov
mov
cmc
push
jb
jmp
cmc
loop
inc
fbstp
xchg
icebp
fisttpl
push
js
jnp
and
pop
fisubl
cltd
mov
add
lret
mov
push
sbb
mov
out
mov
xor
add
adc
arpl
push
scas
adc
dec
xchg
cmp
xor
pop
sbb
out
mov
jbe
or
in
lea
jecxz
fimull
daa
xchg
sbb
inc
cmpb
popa
add
pop
or
fisubrs
adc
mov
lret
xor
dec
push
divl
ljmp
mov
xchg
pop
or
fcmovnbe
pushf
push
pop
mov
cmp
jmp
sti
mov
cmc
stc
cmc
dec
mov
xlat
js
movsb
lahf
mov
aam
ljmp
sbb
jno
pop
scas
cwtl
mov
sbb
clc
jmp
stc
divb
and
in
mov
minps
cli
lcall
leave
imul
mov
loope
dec
test
dec
addl
insb
sbb
pop
mov
mov
add
mov
sbb
aam
je
les
ja
fwait
rcr
shrl
push
inc
adc
stos
push
push
mov
mov
repnz
sub
jnp
fwait
lea
mov
sub
daa
in
or
or
sti
out
mov
sub
test
shr
test
in
fidivrs
pop
out
hlt
fwait
loop
repnz
fcmovbe
dec
mov
cmp
sbb
jle
lahf
add
xchg
mov
sbb
mov
roll
rcll
and
repnz
inc
insl
xchg
inc
sbb
fsubrl
lea
pop
es
test
add
xchg
leave
imulb
shlb
mov
cmp
mov
shl
sub
dec
or
loopne
sub
cmpsb
mov
lret
pop
pusha
leave
cld
outsb
ds
enter
cld
rorb
imul
push
xchg
jb
sbb
fcomps
jne
fdivrl
adc
js
out
jl
pop
lods
dec
pushf
sbb
mov
and
dec
stc
pop
dec
out
cli
xlat
outsb
in
cmpsb
bound
outsb
imul
movsb
movsb
pusha
out
cmp
dec
jne
xchg
sahf
ds
add
and
xchg
ds
negl
xchg
dec
push
pop
push
fmull
push
xor
loope
xchg
test
lock
dec
andb
push
lcall
and
dec
fidivrl
xor
subl
adc
rcll
sbb
push
inc
mov
sbb
inc
or
stc
cmp
sbb
dec
adcb
pop
mov
push
outsl
ret
add
mov
cmp
mov
pop
mov
cltd
in
dec
lds
pusha
cmp
mov
inc
lods
lods
std
and
sbb
aam
sti
js
lea
xchg
jns
jmp
leave
xchg
mov
cld
add
rorl
in
dec
mov
shll
lahf
lret
lds
fdivrl
inc
dec
jp
mov
je
loop
sbbl
adc
add
pop
cmp
inc
insb
adc
mov
out
inc
aam
xchg
mov
and
adc
das
or
mov
jno
xor
in
cmpsb
insb
dec
fdivrs
mov
dec
loope
fdivs
iret
xor
or
cmp
dec
out
ret
test
adc
pop
mov
mov
dec
mov
arpl
or
in
sub
jecxz
roll
adc
loope
mov
and
xor
iret
pop
imul
add
das
insl
jnp
inc
aam
fldenv
cmc
cltd
leave
sub
rcrl
mov
int
push
fnstsw
dec
xlat
dec
js
jmp
add
pop
mov
dec
xchg
mov
ficompl
xor
cmc
insl
out
in
pushf
and
cld
jns
popa
xorb
mov
xor
imul
inc
dec
dec
push
lcall
test
mov
jmp
cmp
gs
mov
dec
lret
jns
pusha
jns
xchg
fisttpll
test
mov
sbb
add
ret
mov
and
or
in
cmp
push
rcrb
mov
jo
pop
int
dec
and
out
dec
xorb
pop
fcomip
aaa
idivb
jne
in
sbb
push
adc
sbb
and
adc
add
nop
sarl
dec
in
jge
xchg
scas
cmc
and
aam
sbb
mov
mov
fwait
mov
test
pop
int
arpl
mov
xor
arpl
test
mov
dec
les
xor
xor
jl
sti
movl
icebp
je
push
mov
sbb
mov
mov
dec
mov
or
daa
pop
mov
push
imul
add
mov
int3
jne
in
ret
jne
pop
mov
inc
pop
shr
dec
xchg
imul
jbe
dec
rclb
dec
sub
call
cmp
rcrl
adcb
jnp
aad
into
mov
and
je
cmp
mov
lret
cmp
pop
dec
push
jmp
inc
add
les
test
insb
adc
lret
sti
adc
add
andb
bnd
mov
ret
add
aam
outsb
xchg
mov
mov
add
push
daa
les
xor
lret
jle
test
idivl
fcmovu
sub
in
jl
xchg
ja
adc
in
add
enter
les
dec
fstpt
pop
xor
int3
insl
sbb
cmc
pusha
jno
gs
or
push
ret
decb
pushf
xchg
jl
pop
cmpsb
filds
push
adc
dec
movsl
mov
jge
or
jbe
and
mov
jle
rorl
jg
xchg
das
jp
pop
adc
shll
sbb
jns
es
mov
fistpll
jl
sbb
push
dec
lcall
ret
arpl
stc
push
and
imul
imul
repnz
repz
test
cmpsl
les
orb
sub
xchg
fwait
bnd
pop
sbb
and
inc
add
andl
mov
adc
movsb
loopne
sub
loope
es
fs
in
out
pop
ret
add
int
lcall
test
aas
mov
andl
cld
cmc
push
leave
mov
inc
mov
jb
sbb
gs
movsl
xor
out
mov
add
inc
ja
xchg
scas
mov
xor
clc
imul
xlat
notb
jo
inc
gs
gs
lds
inc
lock
push
out
add
inc
pop
je
movsl
fnstcw
pusha
jns
sbb
shl
leave
pop
pop
sub
aaa
and
xlat
in
push
push
sbb
cmp
shl
cmp
adc
mov
scas
movsl
xor
sub
fucomp
inc
and
test
mov
imul
popl
or
jp
lods
mov
outsl
jg
icebp
xchg
xchg
cmp
mov
inc
cs
mov
sbb
mov
out
sbb
outsl
ret
lock
fdiv
das
pop
inc
movsl
push
mov
pushw
cltd
push
movsl
sbb
xchg
push
inc
push
push
inc
jnp
xor
push
test
out
sub
adc
mov
adc
mov
cmp
sub
jle
lds
mov
ja
inc
insb
hlt
cmp
sbb
stc
sti
sub
dec
xchg
loop
adc
shr
dec
push
jg
dec
add
ret
negb
adc
clc
icebp
xchg
push
testb
adcb
push
pop
insl
scas
shll
dec
iret
jb
inc
or
cld
jg
ror
add
xchg
mov
jno
pop
mov
fisttpll
nop
xor
movsb
inc
stos
push
jb
cld
adc
push
leave
push
pop
shrl
iret
or
jnp
add
push
and
adc
xor
loope
fcoms
out
mov
mov
inc
push
mov
gs
fldenv
out
or
sti
pop
imul
cmp
jbe
xor
nop
mov
xor
xor
out
adc
test
cli
lock
cmp
push
imul
add
add
dec
in
xchg
scas
cld
loop
mov
sbb
loopne
out
lahf
mov
adc
push
mov
movsl
cltd
mov
or
insb
mov
stc
imull
mov
sahf
mov
push
mov
sbb
movsl
outsl
iret
push
pusha
ud1
adc
push
rcrb
fsubrl
xor
loope
jp
mov
repz
in
and
mov
repnz
pop
jno
icebp
push
mov
push
test
ret
add
mov
pop
es
test
pop
sbb
xor
mov
aaa
cmp
loop
mull
xchg
test
pop
pop
cmpsb
or
sbb
test
adcb
or
pop
sub
pop
addl
in
fidivrs
inc
std
sti
out
jmp
imul
cli
or
jbe
or
ror
mov
popf
or
rolb
nop
add
mov
pusha
iret
adc
push
push
inc
pop
or
loopne
sbb
fisubrl
dec
fildl
jmp
sbbb
fidivs
psubw
cld
mov
or
jl
mull
push
lahf
mov
cwtl
xor
bound
sub
add
ret
call
call
push
int
xor
mov
ret
sbb
das
mov
mov
adc
push
mov
fcmovbe
arpl
aaa
movsb
xchg
cmpsl
xchg
sub
dec
scas
adc
jae
lret
lea
rclb
loopne
pop
add
ss
in
std
shl
pushf
pusha
pop
mov
xor
outsb
mov
push
cltd
jno
mov
call
push
push
fildl
je
jbe
inc
ss
jge
fdivp
inc
flds
imul
repnz
xchg
pushf
jo
shrl
enter
push
jns
mov
mov
cmp
jle
xchg
aaa
mov
out
sub
sbb
das
mov
scas
fdivs
test
mull
pop
push
sbb
inc
aam
push
outsl
not
sub
jg
mov
call
mov
and
sbb
cltd
mov
xor
stos
cmp
lahf
mov
mov
mov
in
sbb
and
gs
fidivrs
push
and
jmp
cld
int
sbb
mov
mov
das
push
mov
popf
jne
xor
dec
dec
jne
lret
sub
imul
or
fadds
popa
xchg
jnp
lea
and
and
cmpsb
push
repnz
push
outsl
pop
or
adc
pop
in
imul
clc
xor
cmpsb
mov
dec
out
mov
mov
out
dec
mov
push
cld
adc
sbb
repz
aas
and
sub
xchg
pop
das
cmc
xor
inc
jmp
adc
mov
jmp
nop
mov
rol
sbb
fdivrs
stc
sti
push
dec
pop
cmp
sbb
arpl
push
inc
daa
pop
or
into
imul
ror
arpl
cwtl
cld
int3
push
sub
mov
push
test
jbe
cs
xor
cli
adc
jbe
mov
ss
pop
xor
cmp
mov
outsl
test
cmp
pop
scas
data16
movb
cmp
inc
hlt
dec
jmp
xor
sahf
push
or
sub
fistpl
pop
or
mov
enter
jo
out
mov
sbb
gs
sbb
or
and
xchg
out
data16
push
adc
pop
jne
mov
or
loopne
int3
push
and
inc
iret
dec
clc
rorl
call
push
pop
mov
test
insb
mov
sbb
xchg
dec
fisubrl
ret
dec
pop
jnp
sub
and
inc
jmp
or
cltd
leave
sbb
aaa
cmpsl
ror
xor
pop
push
mov
xchg
inc
outsl
dec
sub
add
cmp
or
sbb
popa
out
in
xchg
fnstenv
push
xchg
into
sarw
jmp
add
add
aaa
test
aas
mov
mov
test
adc
fists
or
imul
sub
loopne
icebp
loop
pop
fimull
fldt
stos
jge
adcb
push
jne
lret
repz
lea
lds
xor
call
outsl
std
in
outsb
lods
cli
in
inc
jmp
fadds
cmp
cmp
repnz
ret
jbe
lods
mov
or
jle
jae
jb
push
int
imul
cli
push
fstps
jp
and
roll
cmp
in
dec
mov
es
call
jmp
repz
sub
stos
inc
out
ret
cmp
lods
dec
pop
or
adc
sbbl
sbb
jle
xor
inc
dec
int
das
dec
sbb
shlb
int3
out
cmp
dec
pop
ret
enter
mov
repnz
aaa
cmpsl
cmp
jp
adc
cmpsl
ja
mov
scas
adc
xor
jb
inc
or
xchg
jmp
xchg
xlat
pop
ja
mov
push
fwait
add
popa
cltd
clc
xchg
xorl
dec
adc
push
mov
dec
mov
pop
cltd
repz
sbb
mov
mov
or
dec
mov
jg
push
ds
pop
ss
xchg
arpl
stos
xchg
cmp
dec
dec
stos
dec
mov
test
xchg
and
ret
cmpl
dec
decl
push
sbb
movsl
sub
js
adc
xor
mov
outsl
pop
hlt
pop
test
pop
idivb
or
pop
leave
xchg
adc
rclb
jne
les
aas
lods
data16
stc
pop
loop
mov
hlt
pop
iret
fs
pop
mov
mov
fisubrs
fwait
sbb
or
loopne
push
je
sub
dec
push
aaa
mov
aaa
mov
mov
out
mov
in
xchg
mov
je
arpl
dec
add
popa
xchg
loope
lret
outsl
cwtl
hlt
adc
push
cmp
inc
mov
push
mov
mov
push
mov
fmulp
push
repz
test
subb
add
shrl
and
xchg
leave
cmc
or
testl
or
add
push
sbb
addl
and
xor
sub
cmp
pop
mov
dec
jp
shr
std
mov
xchg
push
shl
aas
push
sar
push
iret
push
gs
mov
jbe
cltd
out
push
xor
ret
pop
and
and
push
in
mov
scas
jg
and
adc
pop
ss
out
mov
mov
and
cmc
add
lret
dec
cmp
in
jo
pop
ficoms
mov
es
dec
dec
cmpsl
rolb
cmp
lock
fwait
mov
dec
cmpsl
out
and
mov
inc
sub
add
in
cltd
xor
sbb
daa
cmp
ret
iret
push
iret
xor
add
in
push
jb
cmpb
pop
ljmp
xchg
pop
jle
pop
jno
out
outsb
adc
icebp
lcall
cmp
nop
xchg
fsubrl
ret
xchg
push
out
ds
mov
sub
and
mov
clc
aam
out
mov
push
sub
js
lea
jl
cmp
mov
and
pop
xchg
insl
test
cmp
call
xor
ret
stc
push
and
dec
push
cmc
cmpsb
jecxz
stc
lcall
jmp
jp
inc
orl
jge
add
cmp
mov
out
in
aam
mov
and
dec
pop
mov
test
enter
push
push
cmp
mov
or
inc
xor
push
test
and
sbb
mov
ljmp
xor
mov
pop
lods
push
cmpsb
pop
lds
pop
mov
pop
xorl
xchg
mov
mov
push
popl
pop
sub
fstps
sahf
ja
pop
pop
mov
mov
xchg
xchg
cli
ljmp
fcmovnbe
inc
ss
inc
jne
jl
ss
cmp
lods
dec
out
pushf
inc
dec
mov
in
lods
fwait
imul
jg
inc
mull
out
rclb
int
cmp
jecxz
ljmp
lods
mov
aaa
nop
popa
imulb
repz
nop
pop
fistl
xor
push
mov
and
scas
lret
clc
aad
mov
cmpsb
push
lock
dec
pop
lret
adc
dec
or
mov
xor
daa
pop
push
xor
inc
add
nop
cmpsl
imulb
cmpsl
cs
inc
inc
outsl
jne
jge
ss
mov
mov
or
add
jns
into
shll
mov
cltd
adc
mov
mov
inc
and
and
sbb
or
pop
mov
cmp
mov
push
push
lods
mov
popf
push
xlat
and
dec
pop
and
sbb
xor
adc
int3
rolb
jbe
lcall
xchg
cmp
lds
gs
imul
mov
jmp
lret
and
inc
ret
mov
inc
out
out
test
cltd
jb
loope
test
pop
stos
aam
bswap
in
push
es
cmp
add
inc
push
cli
fsts
psubw
lds
dec
add
in
sbb
xchg
sbb
arpl
loop
scas
in
pop
and
inc
jl
xor
pushf
mov
lods
movsl
adc
jo
jo
pop
mov
adc
nop
popf
iret
pop
add
mov
out
dec
jbe
xchg
sbb
out
out
cmp
add
mov
pop
mov
fwait
lahf
sbb
rol
jnp
push
out
loope
or
mov
cli
jbe
push
out
sub
int
loopne
cmp
rcrb
mov
dec
adc
mov
arpl
jecxz
or
lds
push
jg
xchg
movsl
movsb
lahf
add
xchg
jo
sbbb
jmp
loope
adcb
xor
and
lods
xor
cmp
pop
addr16
mov
sbb
sub
jmp
inc
and
insl
roll
nop
fucomi
cmpsb
mov
sub
cmc
pop
pusha
adc
add
cld
and
jno
inc
mov
adcl
add
push
cwtl
and
cmp
or
sub
cmp
ja
fsubl
sub
into
cmpsb
cs
and
cmp
nop
mov
stc
lods
inc
aaa
rcll
fdivrs
out
xor
jmp
dec
cmp
lods
pop
stc
cltd
sub
orb
or
add
pop
div
inc
adc
mulb
lret
jp
imulb
jo
mov
fldt
jo
imul
lret
imull
mov
cmp
fyl2x
or
lret
aas
stos
out
pop
neg
int3
mov
or
out
inc
jge
mov
cmovge
jbe
push
dec
cmp
mov
inc
cmp
out
out
xor
rcll
push
sar
orl
push
push
dec
xchg
loope
xchg
icebp
sub
fcomps
cmpsl
and
or
and
mov
rolb
dec
outsb
fcmovbe
dec
jmp
jecxz
jo
mov
pop
xchg
pop
push
lea
inc
jbe
adc
cmp
and
xchg
je
shrl
test
lret
jns
scas
out
push
cmpsl
sbb
js
pop
jb
aas
enter
testb
lret
hlt
icebp
out
icebp
pop
in
sub
xorb
aad
je
out
cmc
pop
lock
push
in
pop
das
mov
cmp
pop
add
cwtl
lods
push
sti
push
xor
aad
xor
pop
stc
mov
lret
adc
stos
xor
inc
jg
mov
in
and
mov
cmp
addl
lcall
lahf
mov
mov
cmp
lds
xchg
inc
push
in
push
xchg
test
fcompl
dec
mov
stos
movsb
pop
bound
stos
test
sbb
movsb
cmp
inc
mov
push
insb
sbb
dec
mov
ret
xchg
mov
mov
sbb
fwait
lock
leave
push
fnstenv
xor
mov
push
and
and
test
in
push
icebp
int
cmpsb
daa
mov
xchg
cmpsb
and
push
int
fwait
mov
sbbb
xchg
cmp
pop
addr16
scas
movsl
icebp
and
gs
jne
iret
jle
mov
sbb
push
insb
xchg
mov
mov
ja
mov
jp
out
sub
shlb
popf
add
pop
mov
cmpsl
push
sbb
mov
push
jge
test
xor
dec
fnstsw
jp,pt
repz
hlt
ljmp
call
sbb
sbb
test
mov
pop
jle
sub
js
call
and
data16
cwtl
and
sbb
out
cmp
cmp
and
das
fidivs
jl
fisttpll
xor
jge
test
push
and
adc
stos
ret
xchg
pop
or
les
lret
sti
mov
imul
cmp
aas
add
jmp
or
addr16
es
inc
pop
bound
inc
arpl
mov
add
push
js
leave
or
cmc
mov
wbinvd
xchg
shl
loope
bnd
ss
in
cmp
xchg
scas
in
arpl
in
jae
stc
int3
loop
jecxz
data16
subb
fs
xchg
pop
cli
mov
sub
pusha
fcmove
test
and
lcall
call
add
enter
mov
mov
sbb
sub
bnd
lret
fstpl
mov
mov
pop
lret
sub
mov
movl
lahf
push
fnstsw
mov
jmp
loope
movsl
adc
scas
pop
push
cli
das
push
mov
mov
mov
mov
iret
mov
pop
push
adc
xor
xor
shr
push
dec
inc
mov
scas
lret
std
mov
jmp
popa
in
vcvttps2dq
cmpsb
mov
jns
cmpsl
arpl
mov
daa
inc
stc
stos
cmpb
inc
jns
jbe
or
insb
addr16
sbb
pop
clc
sub
xchg
pop
dec
push
lcall
sbb
push
mov
into
mov
mov
outsb
push
outsl
xchg
mov
jle
mov
mov
scas
ror
mull
aaa
ret
rcrb
xchg
jo
pop
es
test
fs
lahf
push
pusha
lods
dec
sub
pop
out
adc
mov
lcall
jb
aaa
push
mov
mov
xor
pop
insl
cmp
in
mov
xchg
mov
insl
mov
jle
jl
jnp
mov
les
xor
clc
repnz
loope
inc
test
lahf
cs
ja
jnp
inc
das
sub
cmc
xorl
xchg
mov
in
sbb
scas
mov
push
mov
push
mov
in
jmp
test
xchg
pop
adc
adc
repnz
enter
mov
jns
xor
inc
sbb
insl
ret
jo
cmp
xor
scas
arpl
shll
pop
sbb
cli
sarb
call
sbb
add
shll
cli
mov
aam
mov
call
mov
dec
xchg
push
imul
xchg
popf
call
push
inc
popf
cmpsb
dec
repnz
cwtl
jnp
and
mov
jle
xchg
test
mov
daa
mov
test
cld
lods
xchg
mov
push
imul
mov
xchg
cmpsl
sub
aas
mov
pmullw
inc
and
out
mov
mov
xor
sub
pop
xor
pop
aaa
xchg
das
insb
pop
pop
pop
ret
rcrb
inc
sarl
out
int
jae
inc
pushf
add
jo
aad
stos
iret
movsb
mov
sbb
pop
fisttps
jns
fcmovnbe
or
adc
or
cmp
xor
pop
mov
fwait
sub
pusha
iret
adc
scas
ret
popf
dec
jo
jle
mov
mov
ret
mov
mov
mov
mov
sbb
fsubs
fistps
test
scas
orb
mov
icebp
pop
lahf
adcb
shrl
jge
ds
pop
sbb
dec
pop
fimuls
fdivrl
cmc
fidivs
jg
addb
fimull
aam
sbb
sahf
out
jecxz
imul
bound
xchg
lock
imul
add
push
and
add
and
mov
sti
mov
jae
hlt
xchg
arpl
adc
adc
jmp
pop
in
pop
jae
addr16
test
mov
and
ret
repz
pop
jle
fistps
inc
shll
mov
rcrl
std
lea
loope
xlat
pop
pop
jo
enter
es
out
pop
mov
shll
addl
xor
leave
mov
mov
data16
ja
sub
mov
inc
cmp
jae
adc
add
insl
fldl
std
les
xchg
lret
mov
loope
mov
mov
and
mov
in
pop
lds
add
loopne
xor
push
xor
out
mov
int3
xchg
xorb
in
mov
lods
cmpb
inc
adc
dec
cwtl
jg
ficomps
jb
mov
push
mov
cld
mov
mov
mov
jbe
or
jbe
add
push
jno
pop
es
push
jno
sub
xor
movsb
and
test
out
stos
sbb
rcrb
sbb
mov
push
jl
out
pusha
popa
xor
addl
sti
or
and
xchg
sbb
popa
gs
mov
cmp
movsl
lds
aas
addl
jl
mov
dec
and
stc
aaa
sub
jl
neg
stc
je
inc
push
dec
mov
jb
push
nop
mov
sbb
cmp
xor
call
jbe
outsl
jmp
jmp
ss
dec
xchg
sub
add
es
xchg
mov
xchg
mov
cmp
out
mov
cltd
pop
sti
pop
cmpsl
movsl
and
test
outsb
sub
mov
inc
out
sbb
sbb
cmc
movsb
xor
notb
mov
lods
sahf
cld
std
lcall
dec
sarb
mov
mov
gs
and
xchg
push
and
push
stos
enter
jecxz
mov
xor
and
pusha
addr16
pop
xchg
out
aas
int3
clc
arpl
pop
lods
scas
adc
mov
es
rcrl
outsb
and
lret
in
mov
gs
cmc
adc
push
or
pop
popl
push
cmp
inc
xchg
repz
shlb
mov
push
sub
icebp
rclb
adc
and
test
pop
pop
jmp
push
clc
xchg
mov
icebp
push
pop
pop
enter
rcrl
cmp
ffree
enter
icebp
lahf
push
xor
adc
mov
divb
sub
arpl
sbb
jl
iret
xor
sbb
or
mov
popa
xorl
xchg
and
repnz
popl
fs
jbe
icebp
sbb
pop
cld
mov
cmpb
push
cmp
inc
inc
pop
inc
sub
mov
scas
es
cs
cmpsl
dec
mov
push
sti
jge
out
push
bound
adc
out
outsl
cmpsl
pop
divl
es
xchg
hlt
push
cli
inc
aas
gs
sbb
inc
mov
or
mov
inc
or
pusha
xchg
vpaddd
shlb
xchg
jo
out
xor
push
inc
loop
test
cmp
scas
fdiv
mull
cmp
xchg
in
sbb
ret
fs
push
aam
aaa
mov
pop
daa
lret
inc
enter
inc
jp
push
in
push
mov
stos
sub
ret
stos
shrb
dec
movsb
mov
sub
mov
addr16
xor
outsb
cmp
enter
insl
mov
ret
int
lcall
popf
bound
int3
push
dec
rclb
shll
in
mov
data16
aad
stos
popa
sahf
ret
cmc
adc
dec
std
or
add
nop
pop
mov
dec
mov
stos
and
inc
or
out
pop
and
aaa
sub
loopne
dec
jb
push
mov
imul
jnp
ljmp
outsl
call
stc
mov
jge
jmp
iret
insb
xor
loopne
sahf
out
pop
insb
mov
outsl
mov
pop
and
lret
out
push
negb
push
push
enter
test
movsl
loope
shlb
mov
enter
jno
dec
iret
dec
loopne
push
seto
mov
pop
mov
fisubrs
movsb
add
cmc
les
sub
mov
mull
into
sbb
ds
or
sbb
xlat
xor
fcomi
insb
jp
push
sbb
out
xchg
jmp
sub
xor
jle
mov
mov
data16
sahf
in
mov
or
fidivl
cli
sbb
jne
popf
add
cs
rclb
cmp
rcrb
or
adc
enter
rorl
pop
push
arpl
daa
mov
hlt
sarl
sbb
mov
cs
icebp
mov
pop
jl
sbb
push
jns
fldcw
js
subb
pop
pop
cmpsl
or
pop
sub
fldenv
clc
movsb
mov
push
mov
xchg
std
sub
mov
testb
fdiv
ds
or
shr
inc
or
jl
cmpsl
inc
lret
cltd
jmp
or
mov
and
std
mov
in
sub
scas
insb
bnd
adc
es
sub
sub
icebp
push
repz
xchg
loopne
repnz
jb
mov
ljmp
pop
outsb
adc
cmp
aas
and
jne
stos
mov
xchg
dec
insl
leave
mov
add
movsb
dec
test
imul
lock
aad
push
jge
xchg
leave
xchg
xor
push
dec
enter
mulb
push
pusha
dec
icebp
mov
jmp
je
inc
sub
sub
cmp
sbb
ds
clc
xor
popa
shrb
dec
aad
insl
fidivrl
add
cld
sub
ret
cmp
out
inc
xor
mov
movsb
jmp
sbb
mov
adc
stos
setbe
shrl
cmp
dec
data16
jbe
ljmp
jb
int
jbe
pop
repz
mov
pop
dec
mov
js
cltd
mov
mov
mov
add
es
clc
sub
rcll
cmpsb
lahf
out
std
jle
cmp
xchg
jle
mov
mov
and
xchg
out
sbb
lods
insl
mov
xchg
les
insb
mov
fcmovnb
mov
push
aaa
jb
loopne
mov
out
mov
out
mov
insb
ret
outsl
mov
mov
jns
jge
mov
imul
outsb
hlt
jmp
ret
add
int
jae
andb
mov
dec
imul
test
sub
jp
and
sub
fcomp
jbe
mov
popf
jnp
inc
dec
fs
push
sub
dec
push
cmp
stos
and
xchg
cmpsl
xchg
lods
std
inc
push
sbb
fdivrl
jmp
into
mov
xor
inc
and
xchg
daa
xor
jmp
sub
decl
sbb
fildll
mov
adc
das
adc
adc
mov
stos
xor
jg
mov
inc
inc
mov
shlb
push
scas
cs
sub
inc
das
filds
inc
xchg
xor
data16
cmp
or
cmp
mov
mov
ret
bound
bound
orb
aam
add
scas
xchg
or
fld
push
or
mov
cmp
je
sbb
or
addr16
fnstenv
push
xchg
clc
dec
xor
test
fsubr
inc
test
jno
pop
fsubp
mov
arpl
inc
rcll
dec
xacquire
and
in
mov
test
push
xchg
adc
or
cmp
sub
les
and
movsl
les
popf
mov
leave
add
xchg
mov
and
inc
sti
mov
sub
mov
in
and
inc
adc
add
add
shl
inc
sbb
push
sbb
adc
add
dec
cs
sbb
mov
sub
mov
jge
inc
lcall
jns
jmp
mov
into
rorl
divl
push
jecxz
pop
mov
popa
add
xor
shlb
mov
jno
jecxz
sahf
test
outsl
xor
mov
and
mov
dec
fs
cmp
sub
sahf
mov
ja
std
mov
xchg
and
mov
call
fadd
je
arpl
test
dec
out
push
loopne
es
and
push
fsubrp
out
mov
jp
shl
add
rorb
shll
pop
sbb
ret
push
out
xor
add
inc
jo
add
leave
jge
in
jl
test
jns
andb
dec
sub
je
add
lods
pop
mov
xchg
pop
jnp
mov
dec
inc
insb
pop
fwait
inc
ds
loopew
dec
xor
add
test
ret
pop
gs
add
cwtl
lret
add
add
hlt
fs
adc
jnp
movsl
nop
ja
shlb
push
adc
pop
out
pop
mov
jge
pop
popf
mov
and
xchg
pushf
push
out
test
sbb
pop
mov
pop
ret
das
add
inc
arpl
push
push
mov
sub
sbb
or
jecxz
rcrb
mov
inc
scas
call
inc
les
add
loopne
scas
xor
std
cli
mov
fsubrl
out
mov
jb
mov
fwait
nop
negl
mov
test
cli
loop
sti
pop
rolb
cs
pop
popf
movsl
in
sbb
in
xor
in
jno
push
into
xor
jbe
je
sahf
aas
movsl
lods
or
or
mov
mov
dec
add
and
lds
sub
arpl
dec
dec
inc
aad
fldenv
int
roll
mov
es
jae
mov
push
sbb
push
mov
iret
pop
mov
mov
pop
inc
mov
test
push
fmul
sub
sbb
in
cltd
sarl
mov
adc
inc
shl
push
insb
jmp
push
leave
jbe
cmp
jo
cmp
or
xlat
xor
aas
std
je
repz
dec
adcb
or
mov
hlt
decl
or
sub
addb
stos
out
insl
jno
pop
neg
addr16
loop
cmp
jge
jo
add
in
pusha
push
push
sbb
push
lahf
arpl
push
test
xchg
jno
scas
aaa
sub
dec
cli
pushf
out
push
das
and
push
jp
sbb
pushf
cmp
inc
stos
or
sbb
fwait
iret
ljmp
lds
xchg
mov
clc
leave
insb
inc
push
testl
or
fmuls
test
lods
pop
add
int
ss
cmpsb
call
mov
lock
mov
clc
and
rorb
or
fcmovb
or
jecxz
or
outsb
jae
cmp
xchg
mov
lea
cmc
jae
mov
fnstcw
insb
arpl
jno
sbb
xor
mov
imul
insl
test
movb
xchg
dec
xchg
outsl
ficoms
inc
xchg
mov
cld
jne
xor
jmp
mov
xchg
lcall
mov
jmp
push
jb
jbe
pop
xor
dec
jns
fdivrs
sahf
popa
cmp
fcoms
xlat
inc
push
cmpsb
das
fcomps
add
sahf
push
jbe
int
addr16
lea
scas
push
call
ret
loopne
push
sub
dec
push
addr16
xor
popf
add
js
or
add
mov
xchg
hlt
into
hlt
inc
push
sbb
popa
xor
or
or
dec
pop
inc
mov
sbb
mov
xor
in
lods
mov
movsl
jg
test
insb
mov
daa
jmp
cmpsb
sub
leave
enter
add
icebp
pop
int3
mov
sub
or
lods
sub
and
push
xchg
mov
inc
jl
adc
adc
mov
orb
pop
sbb
inc
cld
or
push
sbb
insb
xchg
enter
ficompl
xor
ljmp
jmp
cmpsb
pop
inc
jae
inc
mov
enter
fdiv
loope
loopne
ret
push
ffree
push
cbtw
xchg
adc
sbb
lods
or
jp
subb
adc
cli
enter
nop
ret
sub
fisttps
imul
adc
jl
shll
dec
fcompl
sub
sbb
and
inc
shll
pop
std
in
xor
fisttps
or
adc
cmpsb
es
jle
ret
sbb
cmpb
es
lods
daa
inc
sbb
ret
icebp
or
cmpsb
test
push
add
roll
sub
fmull
mov
in
jecxz
aam
cs
add
cmp
icebp
shlb
xor
mov
repnz
frstor
pop
mov
xchg
jae
pop
outsl
push
xchg
das
mov
sbb
fisttpl
mov
jge
push
repnz
push
push
lods
jmp
inc
sub
das
out
jne
jo
bnd
mov
xlat
jmp
xor
sub
xchg
cmpl
sbbb
stos
das
test
sbb
insb
mov
insl
and
fiadds
or
mov
js
jne
dec
jbe
mov
test
outsl
mov
pop
xor
push
or
scas
sub
jg
add
jb
mov
cld
push
push
add
mov
std
std
pushf
data16
fwait
dec
leave
add
adc
add
fcoms
enter
das
cmc
lret
rclb
or
dec
test
xchg
ss
clc
inc
pop
pushl
ret
in
cmp
roll
daa
dec
inc
xchg
jns
adc
insl
cmp
sub
mov
out
out
xor
imul
in
into
or
inc
sbb
sub
mov
loope
mov
or
mov
hlt
jnp
or
push
je
pusha
sub
and
or
inc
push
jecxz
push
xor
loope
mov
js
mov
pop
jecxz
shlb
fdivrp
ds
pushf
and
mov
xchg
inc
mov
hlt
mov
xchg
mov
int
sarb
pop
iret
push
lds
push
or
xchg
mov
adc
loope
xchg
pop
xor
jp
cwtl
sbb
dec
xchg
jmp
in
inc
sbb
popf
xor
inc
xchg
or
cmp
push
int
jns
in
je
dec
aad
pop
jbe
pop
mov
mov
repz
cmc
int3
cmp
fisubrs
xor
shlb
pop
pop
cmp
cmp
xor
cmpsl
faddp
icebp
das
inc
jl
adc
cltd
mov
test
sbbb
mov
iret
stc
xlat
xchg
scas
xor
sbb
notl
or
daa
jbe
ds
ror
add
jae
enter
daa
loop
push
loop
lock
dec
push
ja
insb
and
dec
test
cli
xor
shrl
gs
and
cmpsb
adc
in
mov
ljmp
xchg
imul
sub
jp
inc
add
or
out
sbb
cmpsb
xchg
mov
mov
pop
push
pop
jp
js
or
sbb
pop
adcb
mov
cmp
push
cli
or
mov
sbb
xor
lds
das
repnz
sub
in
push
decb
xchg
push
sbb
fs
repz
mov
mov
cmp
dec
jge
es
jle
lock
bound
mov
mov
mov
xor
sbb
mov
sti
sbb
sbb
movsl
not
cmp
jmp
adc
xor
shrl
and
sbb
mov
xor
dec
fcoms
cwtl
jae
jnp
stos
ss
pop
push
cmp
outsl
and
cmp
popf
fldcw
xor
orb
jo
push
fldenv
out
cld
push
sub
cli
sbb
and
fcmove
fmuls
loope
cmp
icebp
lods
js
sub
pop
xchg
jecxz
push
mov
xchg
dec
enter
stos
scas
out
jnp
xor
cltd
divb
inc
jo
inc
cld
or
jo
dec
insb
lods
dec
pop
sbb
inc
ret
aad
xor
xor
adc
mov
jg
lret
test
out
lods
in
js
outsb
cli
test
xchg
sbb
loop
xlat
popa
push
sub
or
in
mov
mov
cli
rcpps
ss
push
sub
mov
popa
and
mov
outsl
lock
in
rol
sub
and
push
mov
lret
jle
dec
dec
pop
dec
mov
push
inc
add
or
rcr
in
pop
and
pop
out
arpl
mov
add
out
xchg
mov
cmpsb
fbstp
add
popf
imul
mov
lods
test
fcompl
ficompl
add
fadd
sti
mov
gs
cmpsb
pop
orl
push
sub
or
das
int3
std
pop
rcll
ljmp
pop
push
into
or
xor
or
mov
and
or
pop
and
sbb
mov
or
xchg
les
push
mov
xor
push
je
lret
imul
enter
xor
pop
scas
push
inc
mov
mov
imul
dec
loop
cmp
xchg
inc
sti
dec
nop
jmp
pop
cmpsl
push
lods
pusha
or
popf
fisubs
std
mov
xchg
jge
cli
ljmp
nop
mov
jns
jno
nop
outsl
out
xor
stos
mov
cwtl
nop
xchg
roll
cwtl
addr16
push
fs
leave
call
lahf
hlt
imul
pusha
sub
fmuls
push
adc
push
mov
cmp
ja
push
sub
popf
push
adc
fldcw
push
mov
cmpsl
push
push
or
hlt
dec
pop
mov
adc
mov
ljmp
insl
jmp
leave
sbb
imul
fidivs
pop
lret
test
inc
mov
inc
and
loope
icebp
and
lcall
loopne
jne
addr16
jmp
pop
movsl
out
int
add
push
arpl
jb
jne
ret
test
popf
mov
ds
adc
mov
arpl
aas
push
push
jb
popa
sub
jbe
xchg
jno
sbb
fldt
outsb
mov
call
jns
mov
lret
add
repnz
mov
lock
ja
jo
scas
pop
orb
sub
in
add
or
xor
iret
out
and
xchg
mov
push
push
aas
add
push
xor
inc
stos
mov
or
mov
dec
jnp
cmp
lahf
ljmp
repnz
cwtl
popa
pushf
cwtl
jle
outsl
addr16
daa
mov
fwait
pop
mov
movsb
jo
adc
lea
jnp
sbb
fs
sti
insl
sbb
xchg
mov
insb
stos
add
jge
or
daa
dec
lock
xor
repz
lock
fimuls
sbb
sar
xchg
aam
adc
outsl
and
sbb
cmp
je
js
clc
mov
aam
xchg
cli
cmp
push
pop
fmuls
or
push
dec
repnz
xchg
jmp
pop
imul
ret
add
or
add
sub
fidivrl
cvtdq2ps
jle
data16
mov
ja
in
stos
out
lret
mov
inc
push
sub
jecxz
sahf
lock
loope
push
push
jns
jge
jmp
stos
fsubrl
out
ljmp
dec
xor
outsl
jge
sub
ds
subl
fisubs
mov
sub
mov
cs
lcall
sbb
jl
jge
jg
out
vfnmadd213ss
lock
mov
lret
cmpb
outsb
rcll
mov
rcrl
add
cmp
jecxz
pop
fcmovu
mov
xchg
mov
push
cmc
int
cwtl
mov
popa
out
int3
sub
cmpsb
xchg
out
pop
dec
add
sub
ja
data16
bound
mov
mov
adcl
mov
leave
push
movsl
xor
test
aad
lahf
push
pop
imul
adc
cmp
mov
pmuludq
sub
mov
mov
bnd
cmp
inc
inc
mov
std
inc
shlb
sub
push
add
jo
sar
jl
pop
loopne
js
pushf
mov
js
jmp
and
fcom
test
push
inc
and
dec
cmp
in
jns
jnp
push
sub
ret
lahf
cmp
jo
sub
flds
scas
ja
cmpsl
xor
cwtl
js
int
xor
std
in
cmp
mov
negl
bound
ljmp
inc
shll
jne
and
jae
lcall
pusha
mov
xchg
bound
jge
dec
adc
mov
cmp
cmp
loope
fs
push
mov
imul
and
dec
sbb
add
int
fcomps
out
inc
js
cltd
gs
aas
jle
lods
imul
stos
xchg
pusha
movb
inc
jge
pop
pop
mov
insl
mov
and
push
icebp
sti
jg
or
xchg
xchg
push
in
jns
enter
lahf
pusha
pop
dec
sbb
add
xchg
pop
shrb
lcall
jns
shlb
jnp
sub
mov
or
adc
jae
mov
mov
inc
nop
adc
mov
in
pcmpgtw
and
push
push
xchg
and
push
mov
stos
mov
cmpsl
movsb
adc
gs
pop
mov
jge
dec
dec
pop
es
mov
push
push
cld
idiv
xor
leave
dec
lahf
aam
icebp
xor
rcrl
decb
xchg
and
fnstcw
inc
mov
push
lret
inc
sbb
add
push
xor
clc
leave
pusha
add
pop
movsl
shlb
das
add
or
or
roll
xchg
and
insl
sbb
test
rorl
sti
dec
xor
jb
gs
mov
jl
adc
mov
gs
cmp
inc
mov
pop
test
jp
jmp
sub
push
dec
dec
sti
inc
sub
out
test
mov
call
adc
dec
hlt
pusha
mov
jno
inc
push
ret
cmc
movsl
js
cmp
fsubrl
cld
cmp
loope
inc
in
dec
dec
das
shrl
les
ret
arpl
xchg
mov
adc
int3
jbe
or
gs
pop
orl
mov
xor
xchg
je
cmp
mov
sbb
pop
clc
push
push
or
daa
stos
je
aad
push
aad
push
and
jb
jle
inc
mov
fmul
ljmp
enter
cmpsl
xchg
mov
add
dec
push
lds
ds
push
sbbb
lret
cmc
ss
popf
insb
icebp
push
push
fwait
mov
inc
xchg
xchg
xchg
push
in
cmp
xchg
add
int
jge
daa
jmp
insl
lret
pop
xor
cmp
cltd
stos
loop
dec
mov
test
lock
ljmp
in
push
mov
aas
push
nop
repz
and
pop
mov
and
push
dec
les
add
lea
cltd
stc
aas
rclb
fdivl
adc
inc
fldl
mov
push
xchg
mov
sti
or
mov
outsl
mov
xchg
insl
or
ret
mov
push
aas
js
add
mov
jecxz
mov
mov
pop
int3
mov
sub
dec
fisttpl
dec
cmp
pop
aad
inc
add
adc
and
sbb
out
mov
aas
repnz
inc
sub
xor
sub
cmpsl
iret
std
cltd
fucomp
ret
add
outsl
jne
dec
cld
mov
push
ds
pusha
iret
imul
inc
or
push
movsb
pop
cmp
inc
adc
ja
push
push
xchg
jnp
out
stc
lahf
xor
rol
pop
mov
lret
ror
in
mov
jne
loop
lods
dec
adc
mov
gs
fsubl
xor
loope
sub
popf
jmp
fadds
stos
cwtl
or
fnstsw
cmp
pop
mov
rol
or
dec
inc
mov
adc
les
enter
push
iret
sub
bound
loop
testl
icebp
mov
pushf
push
lods
pop
adc
fs
pop
dec
jbe
jno
mov
jge
out
mov
pop
daa
mov
jl
mov
push
packsswb
xchg
jno
inc
clc
and
push
sub
push
inc
subl
gs
je
sub
jmp
jge
inc
ja
sarl
lahf
bound
inc
dec
test
inc
out
push
enter
pop
or
sub
push
daa
pop
mov
insl
ret
mov
fwait
mov
ret
pop
mov
bound
test
std
or
inc
or
mov
daa
mov
mov
outsb
mov
mov
and
dec
add
sbb
xchg
addr16
or
mov
pop
cmp
add
iret
mov
jnp
movsl
sbb
inc
mov
sbb
add
mov
sbb
sbb
mov
xchg
cwtl
add
push
and
mov
add
adc
out
faddp
popf
fs
xchg
mov
pop
fisubrs
xchg
pop
or
fldt
adcl
mov
xchg
cmp
fsubrs
push
gs
xchg
push
xor
lea
jg
or
jmp
mov
jp,pt
mov
lods
add
mov
ja
mov
lds
adc
and
sub
mov
xchg
add
xor
cmp
rorb
hlt
pop
sub
sti
adc
jae
cwtl
xlat
mov
mov
sbb
sub
mov
shl
mov
fsubrl
mov
add
adc
sub
outsb
fadd
push
push
jle
sbb
fwait
cmp
adc
jbe
imull
js
xchg
mov
mov
xor
add
jae
and
xlat
pusha
es
dec
sub
xor
cmp
int
les
addr16
mov
adc
shrb
mov
sbb
xor
and
mov
lret
mov
mull
js
ret
inc
movsb
dec
mov
loope
in
imul
repz
xorb
sub
sbb
sub
push
or
xchg
mov
dec
jle
into
dec
out
ficomps
pop
mov
inc
xchg
push
push
clc
stos
add
inc
add
lock
dec
pop
lds
sbb
in
inc
iret
cltd
fistpll
scas
out
pop
sti
mov
add
aam
stos
gs
repz
mov
mov
shlb
mov
and
pop
jns
lea
std
xorb
in
and
test
fnstenv
in
and
cmpsl
mov
jp
jo
fimull
jle
jge
pop
ja
or
fstl
aaa
stos
adcb
loopne
mov
and
outsl
xor
aam
ret
mov
push
in
popf
fistpl
sub
ss
mov
mov
mov
adc
in
sbb
fdivrp
and
xchg
cmpb
and
js
sbb
mov
test
inc
or
mulb
insl
adc
dec
hlt
notl
fistps
pop
sub
add
arpl
pop
insl
xchg
jo
pop
fmul
push
sbb
negl
dec
mov
mov
test
xchg
pop
shrl
js
lcall
out
data16
mov
shr
pop
push
in
cmp
adc
inc
push
fimuls
push
sbb
divl
out
push
into
movsb
mov
scas
fnstsw
mov
repnz
in
jg
or
jg
js
inc
int
dec
stc
mov
data16
cli
leave
pop
mov
or
cmp
sbb
sbb
push
loopne,pn
std
pop
in
notb
dec
idivb
dec
cwtl
sbb
sbb
packsswb
xor
enter
int
fs
int3
xor
and
dec
shll
stos
jnp
cmp
addl
cli
xchg
dec
stos
push
imul
iret
cs
adc
xor
push
roll
fistpl
pop
es
mov
mov
push
xor
mov
push
pop
rcrb
sub
lods
xchg
stc
and
test
xor
mov
hlt
cmp
xor
mov
xor
outsl
add
xchg
fsts
std
addb
cli
insl
push
xor
dec
and
pop
out
push
data16
push
rcll
std
dec
cmp
jl
cmp
lods
iret
in
fwait
mov
test
mov
sbb
jmp
push
or
repnz
cld
fcom
sbb
gs
lea
add
repz
or
jb
roll
hlt
das
jne
clc
cmp
jecxz
xor
sti
imulb
mov
push
ds
scas
flds
insl
mov
push
mov
add
push
sbb
jae
loopne
les
cmp
jnp
push
adc
mov
sub
push
leave
aad
jp
mov
outsb
in
mov
imul
cmp
sbb
or
aad
dec
add
adc
adc
fcmovu
ja
sub
mov
push
fstps
andl
xlat
mov
aad
rclb
mov
add
shrb
cwtl
dec
mov
jno
xor
mov
sub
shl
or
pushf
mov
pop
xor
cwtl
sbb
adc
pop
addr16
push
or
inc
enter
jmp
push
add
or
push
daa
sub
fwait
cmp
in
lods
mov
jno
inc
jae
lret
or
jle
add
repnz
les
cmpsl
sahf
test
ret
push
out
test
jae
ffreep
sub
inc
jbe
mov
add
call
push
test
sub
out
ja
gs
inc
cmp
or
cmp
dec
sbb
sahf
push
dec
cmp
insl
daa
inc
push
insb
and
and
xchg
fdivrs
mov
test
mov
lret
pusha
inc
addr16
or
jne
jl
gs
mov
insb
or
es
lcall
xorb
hlt
je
inc
ds
test
inc
std
sub
movsb
rorb
push
jbe
dec
outsl
add
lds
and
mov
inc
inc
and
push
mov
mov
inc
ds
test
mov
aaa
xchg
fsubs
outsb
inc
or
jl
cmp
adc
fsubrl
jge
xchg
sub
pusha
daa
push
dec
cmpsb
cld
xor
pop
cmpl
outsl
fstl
add
jge
sarl
push
fistps
pop
xchg
or
pop
rcll
in
lods
sbb
movsl
test
mov
addr16
popa
jg
in
inc
xor
pop
xchg
ds
fistps
xchg
mov
aad
mov
into
dec
cmp
bound
mov
push
inc
mov
fisttpl
movsb
or
jge
jbe
xchg
out
mov
jecxz
mov
jns
outsb
sub
mov
mov
jnp
cmc
sbb
loop
daa
fwait
adc
in
xchg
adc
cmp
repz
mov
push
mov
leave
push
mov
jle
nop
fcoml
es
popa
xchg
lock
jge
mov
int
repz
push
cmp
repz
outsb
shrl
mov
push
adc
and
and
and
adc
cmp
out
xor
dec
inc
ficomps
xor
aad
mov
mov
mov
push
xchg
mov
pop
leave
push
xchg
push
outsb
test
out
cmp
jae
push
push
out
adc
call
sbb
sbb
push
pop
mov
in
cmp
dec
lret
add
add
mov
xchg
adcl
and
in
dec
fildll
dec
add
ljmp
fldenv
enter
xchg
or
ret
lock
xor
leave
sub
add
xchg
icebp
cmp
imul
jle
bound
mov
sbb
inc
xchg
dec
mov
or
sar
das
leave
inc
push
addr16
inc
push
mov
daa
push
mov
xlat
mov
pop
arpl
inc
scas
cmp
or
stos
add
cwtl
lret
addb
add
mov
pop
mov
pop
jno
inc
jae
fst
pop
frstor
in
mov
push
push
xchg
das
sbb
jmp
sbb
jb
adc
sub
pop
and
fwait
or
push
jg
je
sbb
xchg
sub
shll
je
cmp
and
jecxz
push
fsubp
rcll
ja
xlat
or
mov
mov
fistpl
xchg
or
mov
mov
pop
adcb
cmpsb
pop
sbbl
push
hlt
jne
or
dec
inc
sarb
adc
sarb
data16
or
addr16
or
lret
iret
pop
imull
xchg
jle
ljmp
push
lret
mov
pop
mov
mov
xor
loopne
mov
fiadds
outsb
or
adc
fidivrl
scas
add
leave
push
test
inc
cmp
insb
inc
jno
and
inc
insb
cmp
movsl
and
cs
push
xchg
rol
xor
subw
jecxz
jp
mov
faddl
mov
inc
or
test
ja
inc
pop
int3
or
inc
ud0
test
cmp
cwtl
mov
push
cwtl
add
cmp
push
push
lock
lcall
inc
xchg
sbb
add
pop
jne
loopne
lock
jne
shll
cs
mov
out
cmpb
in
shlb
aam
shlb
rcrl
repz
je
gs
stos
loopne
adc
out
xor
mov
dec
mov
mov
cmp
pop
add
inc
xchg
into
lods
ss
add
mov
adc
mov
inc
push
cmp
sahf
jmp
ds
mov
mov
pop
xchg
inc
in
push
test
ljmp
pop
mov
mov
mov
jnp
clc
inc
jno
mov
or
or
mov
sbb
aad
add
aam
add
lds
adc
pop
cmc
test
push
ss
jge
jmp
xor
incl
test
inc
mov
cmpl
fiaddl
in
jecxz
call
out
push
add
push
pop
ss
inc
lcall
in
xor
xchg
xchg
jp
loop
mov
faddp
dec
add
jge
jp
xor
push
cmovp
loope
push
mov
and
cmp
movsl
or
lods
mov
xchg
nop
fsubrs
adc
and
push
adc
jnp
clc
mov
dec
je
cs
jne
fcompl
or
or
repz
sub
xchg
cmp
adcb
ficoml
lea
stc
inc
inc
cwtl
and
jle
push
out
sbbl
rcr
cs
adc
xchg
mov
cmp
je
in
test
add
push
lods
out
mov
shrl
rcr
inc
mov
xor
loope
sub
ljmp
out
rclb
stos
ds
or
xlat
pop
pop
mov
mov
flds
addr16
and
scas
mov
push
push
cmp
pop
push
iret
sbb
and
jnp
add
lods
fcoml
cmc
into
stc
enter
mov
hlt
je
mov
mov
mov
cmc
mov
mov
scas
icebp
gs
jmp
pop
les
push
rol
add
inc
push
mov
add
cmpsl
scas
mov
sub
dec
rolb
out
cmp
cld
jmp
ret
aas
stos
loopne
and
xor
jbe
dec
inc
sbb
int
roll
fistpl
and
mov
jle
pop
inc
fwait
push
mov
loope
adc
and
or
cmc
sub
imull
jb
fwait
dec
fisubrs
jecxz
xchg
and
aas
daa
fcmovne
hlt
cld
jp
mov
nop
dec
cld
mov
inc
pop
bound
idiv
or
or
gs
jp
cli
test
inc
mov
ljmp
ret
or
sbb
adc
pop
lea
cmp
sbb
aam
hlt
mov
mov
enter
or
mov
fcoms
int
rorb
pop
iret
addr16
clc
lret
cmp
stos
mov
mov
test
inc
adc
push
push
out
dec
lea
pop
dec
roll
mov
and
bound
bnd
dec
test
dec
cli
lcall
mov
pop
faddl
fs
fildll
imul
mov
pop
shll
sub
lods
pop
pop
bound
xchg
jne
add
mov
xchg
cmp
out
push
inc
jmp
sub
inc
push
dec
jae
repnz
bound
sbb
xor
inc
jno
xchg
icebp
xchg
xor
test
dec
cld
test
leave
sbb
and
cltd
std
fidivrs
mov
leave
aas
outsl
scas
inc
out
push
jg
mov
fisubs
sahf
loope
shl
mov
imul
mov
cmc
shr
in
cmp
dec
cmp
mov
xchg
mov
inc
cwtl
stos
lcall
pop
fsubrl
and
sub
clc
sbb
imul
ret
insl
push
cltd
int
clc
lds
fs
sbb
and
push
inc
fcmovu
xchg
xor
inc
sarb
push
mov
push
cli
test
pop
into
cld
bound
jne
repz
aaa
mov
add
js
sub
daa
mov
pop
fwait
adc
lods
xlat
imul
or
pop
mov
sti
movsb
in
adc
dec
mov
lahf
mov
inc
pop
cwtl
and
cmpsb
sub
data16
ss
imul
std
push
lcall
jnp
pop
divl
rclb
or
fwait
sub
adc
stos
jae
jl
adc
repz
sub
subb
testl
xchg
dec
lret
arpl
mov
bound
mov
mov
cltd
push
jle
cmp
insb
stos
stos
imul
xchg
fisubrs
jmp
and
pop
repz
pushf
jb
jno
xor
scas
add
mov
outsl
sbb
into
mov
imul
adc
ret
lock
lods
push
in
aad
and
xchg
jge
loope
xchg
dec
or
fstpt
add
push
adc
test
aaa
shlb
jge
mov
mov
rol
mov
mov
mov
fsubrp
shrl
xchg
mov
ljmp
xor
dec
pusha
aaa
outsl
ljmp
stc
das
jno
sub
or
ja
xchg
mov
aad
shrl
pop
hlt
fisttpl
sarb
xor
hlt
jg
lahf
xor
xor
ljmp
les
pop
test
and
loop
mov
mov
outsb
jne
mov
bnd
mov
dec
int3
sub
mov
pop
dec
mov
imul
dec
popf
dec
arpl
xchg
or
daa
xchg
sarl
imul
pusha
jne
jp
popf
cmp
in
sbbb
lcall
data16
xchg
mov
jne
ficoml
adc
push
ja
lock
jne
fldenv
xchg
int3
shr
stos
imul
pop
xor
test
mov
shrb
xor
xchg
and
incl
hlt
ret
hlt
js
ljmp
and
push
dec
lods
mov
mov
ret
fsubrp
cmpsb
aad
test
adc
jecxz
and
sbb
add
int
xchg
cmp
xchg
mov
cs
push
daa
popf
insl
push
mov
mov
cli
scas
adc
mov
mov
jl
stos
sbb
xor
gs
add
inc
adc
fs
pop
loop
mov
rcl
push
sti
dec
lods
stos
dec
push
mov
mov
mov
pushf
push
mov
pop
repz
out
xor
enter
sbb
or
fwait
sub
mov
mov
cmpsl
rcll
and
sbb
mov
push
aad
inc
ja
ss
push
hlt
clc
je
into
cmp
push
cmp
insb
fdivrp
mov
mov
inc
xchg
lea
lock
adc
push
dec
jbe
and
clc
imul
arpl
fisubs
or
fdivl
inc
add
call
int3
in
sub
push
xlat
imul
pop
daa
jo
mov
mov
push
fstpt
out
aaa
pop
insb
inc
inc
cmpsl
sbb
sub
or
insb
mov
jne
jecxz
adcb
mov
push
aam
in
cmp
add
out
int3
pop
xchg
lcall
sahf
neg
out
les
jg
dec
insl
and
int
or
dec
cmp
inc
notb
test
inc
adc
sbb
adc
sbb
jge
ret
ror
pop
call
sbb
mov
cltd
or
xlat
stos
lods
outsb
jmp
aam
and
pushf
mov
and
aas
testb
adc
push
mov
pop
pop
mull
pop
icebp
test
imul
cwtl
pop
arpl
loope
scas
aad
xor
add
in
cld
lods
aas
cmp
rep
mov
jge
push
je
mov
dec
xor
mov
cli
add
loopne
clc
ret
push
dec
xchg
or
inc
pop
or
jne
inc
daa
hlt
xor
test
adc
mov
sarb
scas
jmp
push
pop
icebp
xchg
mov
jo
mov
mov
mov
mov
adc
shrl
xorb
pop
aaa
pmovmskb
push
cmp
shl
enter
inc
dec
adcb
shr
mov
mov
mov
pusha
mov
sub
test
lcall
data16
subb
movsb
in
js
push
fildl
mov
sbb
dec
and
jno
jl
push
mov
jecxz
xor
int
mov
jecxz
cmp
mov
and
cmp
jnp
sbb
xchg
cmp
mov
dec
aaa
lods
sub
mov
or
dec
lods
jle
xchg
xchg
jns
sbb
jae
popf
dec
xorl
in
andl
cmpsb
adc
hlt
jbe
adc
ljmp
adc
push
sub
pop
xor
subb
shl
push
idivb
popa
mov
sub
out
adc
imul
insl
or
repnz
cmc
pop
mov
mov
sbb
pop
push
xlat
xor
lret
in
mov
mov
jb
mov
cmp
push
mov
dec
jne
or
push
push
push
adc
mov
jg
stos
stc
sub
cmp
xlat
adc
stos
popa
sub
jp
idivb
pop
push
movsl
out
sub
stc
or
sahf
adcb
cbtw
mov
fimull
movsl
rorb
and
popf
mov
test
repnz
push
lods
sar
imul
icebp
and
vmread
test
dec
stos
popa
push
addr16
cmp
icebp
cltd
out
lea
or
xchg
rorb
mov
aaa
and
test
imul
jp
popf
jae
lods
pop
cli
push
movsb
add
jo
scas
pop
loop
push
dec
and
add
and
scas
pop
pop
daa
shrb
jl
pop
pop
scas
test
enter
test
mov
lds
movsb
xchg
add
jb
fiadds
inc
jnp
cmp
xor
mov
and
jne
xchg
jp
lret
jg
aaa
das
jge
insb
out
int3
scas
rcl
dec
pop
shll
adc
xor
cmp
inc
mov
les
sbb
insl
ds
inc
push
rclb
inc
xorb
sub
mov
xchg
push
and
lds
out
xlat
test
call
xor
sub
or
push
mov
adc
mov
leave
lcall
and
fnstcw
jmp
xchg
adc
les
aas
add
pop
scas
mov
pushf
aad
mov
jae
test
leave
adc
addb
push
cwtl
js
insb
dec
inc
mov
xchg
mov
mov
add
xor
lret
das
nop
iret
xchg
imul
add
out
pop
je
stos
xor
loopne
jmp
push
arpl
adc
inc
sbb
sub
jge
dec
jmp
sti
mov
pop
insb
test
cmp
or
scas
cli
stos
mov
dec
hlt
push
fcos
sbb
jp
push
or
sub
sbb
movsb
sti
cli
insb
add
jp
push
popf
cld
jmp
or
pop
jb
push
inc
xor
ret
adc
xchg
jne
stc
int
jb
arpl
ljmp
sub
or
stos
fnstenv
inc
leave
out
aas
cld
dec
pusha
inc
push
sub
mov
mov
outsb
fwait
pop
fisubrs
push
aam
data16
daa
mov
aas
xchg
rol
jg
icebp
inc
mov
clc
jle
test
xchg
or
sti
cmp
test
icebp
mov
lcall
jbe
lods
pop
sub
and
ds
fwait
inc
cwtl
repz
ror
movd
dec
ss
shrl
jbe
mov
or
adc
pop
jge
pop
cld
mov
pusha
dec
out
lcall
stos
aad
adc
aad
rolb
adc
dec
call
cmpsb
sub
ret
sti
lcall
movsl
xor
dec
aam
mov
test
pop
iret
inc
inc
adc
fs
cmp
dec
jb
fcomps
scas
pop
ljmp
addr16
mov
cmp
jo
clc
rorb
daa
aam
loopne
pop
push
enter
addr16
test
pop
sbb
decb
mov
rol
inc
sbb
sbb
test
repz
fs
dec
cmp
nop
pop
pop
sahf
cmp
outsb
mov
movsl
sbb
insb
cmp
inc
pop
out
xchg
leave
stos
cs
mov
pop
stos
std
mov
jge
xchg
gs
jmp
jle
pop
imul
adc
mov
pop
push
std
xor
outsl
movsb
les
xchg
addr16
je
fldt
popf
not
xor
lds
imul
dec
mov
pop
gs
pusha
lea
insl
mov
mov
mov
ds
out
sbb
ss
int3
clc
jp
jne
iret
mov
lock
out
cmp
jl
push
fwait
out
pop
pop
xchg
dec
arpl
push
sub
popf
in
pop
jge
cmp
push
lcall
xor
popf
ja
mov
adc
or
hlt
fisttpll
sbb
das
pop
cmpsb
idiv
cltd
or
fs
fwait
and
popa
sti
ljmp
and
cmp
mov
dec
xor
imul
cmp
sbb
adc
repnz
icebp
ret
in
and
cltd
xor
jp
ljmp
ss
outsl
xor
mov
out
or
jne
jmp
enter
pop
loope
mov
sahf
mov
repnz
push
ret
and
xchg
cmpsb
jae
repnz
dec
lret
xor
mov
and
cltd
sub
roll
cmp
shlb
insl
call
rcrb
pop
mov
pop
cmp
adc
stos
or
ret
mov
lahf
inc
sub
idivl
subl
dec
mov
aaa
movsl
jns
xchg
lods
in
loope
gs
jl
sbb
xchg
fiadds
dec
pop
pop
add
in
mov
in
andb
or
out
dec
push
imul
lcall
add
inc
push
pop
jl
adc
cmp
das
xchg
js
and
or
cmp
ljmp
cmc
cmpb
out
mov
ds
adc
mov
fwait
mov
mov
cmp
fldt
push
adc
mov
sbb
mov
mov
adcb
sbb
pop
push
incl
shlb
popf
aas
xor
je
pop
mov
jmp
inc
mov
xor
or
rcrb
mul
fbld
shlb
xchg
pushf
pop
sbb
sub
cmp
fmulp
add
cmp
dec
mov
jecxz
cs
mov
push
cli
jo
arpl
rclb
adc
push
jl
stc
cmc
inc
or
data16
arpl
movsl
sub
filds
cmp
cmp
adcb
push
jae
inc
cs
in
jnp
into
or
and
imul
movsl
enter
inc
stc
sub
jge
test
test
push
sti
stos
dec
add
xchg
or
mov
in
lret
enter
or
sbb
movsb
and
shrb
pop
popf
aas
mov
sub
cmp
add
push
xchg
cmp
stos
fcmovnb
cs
imul
push
xchg
test
mov
jne
xor
mov
mov
ljmp
xchg
sub
jecxz
mov
jecxz
in
aam
aam
mov
frstor
mov
loope
mov
jno
and
pop
loope
mov
push
sub
xor
pop
inc
and
dec
pop
pop
nop
fmul
push
push
inc
cltd
or
mov
add
pop
mov
jl
xchg
in
fidivrl
mov
inc
mov
lods
test
push
in
and
sbb
push
aaa
xchg
inc
jp
cwtl
leave
loop
pusha
ljmp
out
pop
in
icebp
lret
sub
lret
adc
lods
out
pushf
pop
jl
and
subl
push
jae
stos
loopne
sub
pushf
stos
mov
jg
test
jne
lods
push
ss
and
jg
cld
adc
jl
jnp
hlt
shrb
add
sbb
orb
xchg
adc
loope
jnp
and
int3
in
fimuls
ret
jl
das
add
inc
pushf
xor
push
outsb
test
pop
cmpsb
and
cmp
je
stos
sbb
add
hlt
outsb
or
filds
or
outsb
sbb
andl
mov
shll
cmp
es
jne
mov
popa
adc
add
loop
or
jns
dec
shrl
out
jnp
loopne
xlat
roll
ja
cmp
lret
mov
adc
adc
ds
fiaddl
mov
sbb
jg
cmpsl
rorl
fs
mov
add
mov
ret
test
mov
mov
outsb
neg
cwtl
mov
movsb
mov
stos
dec
imul
mov
push
cmp
pop
push
jbe
jl
addr16
cltd
mov
push
sbb
icebp
inc
dec
pop
xor
ret
aaa
dec
es
cmpsb
icebp
lock
loope
nop
rorl
sbb
popa
fmuls
std
je
jp
movl
stos
cld
adc
mov
es
mov
lret
mov
mov
pop
data16
cltd
mov
sbb
or
out
inc
nop
inc
cmc
stc
inc
cmpsl
sbb
insb
scas
test
fnstenv
xchg
jecxz
jmp
xor
push
pop
faddp
push
and
lock
ds
dec
mov
mov
sub
inc
push
push
in
add
xchg
xchg
add
push
loop
inc
in
lods
dec
mov
adcl
insl
sbb
sub
mov
xchg
xchg
sbb
mov
iret
xlat
mov
lds
add
push
ret
inc
mov
mov
iretw
stos
aaa
inc
lahf
pop
push
and
mov
out
or
mov
mov
cltd
inc
adc
dec
xchg
xor
inc
rorl
sub
imul
sbb
stc
sti
stc
std
lcall
xor
add
loop
jge
stos
mov
mov
jp
out
mov
dec
je
adc
std
in
cmc
je
push
mov
and
test
mov
cmpsb
pushf
mov
add
and
xor
out
sub
or
add
and
aad
aaa
mov
jmp
adc
xor
mov
hlt
mov
adc
mov
xor
push
sbb
mull
insb
mov
push
es
inc
imul
scas
add
cwtl
es
push
push
pop
add
ret
xchg
or
test
aad
ja
or
jp
fst
inc
mov
mov
repnz
push
je
jnp
mov
jns
aas
adc
call
imul
add
loop
add
push
pop
call
out
xor
mov
popa
cmc
push
scas
mov
in
imul
gs
std
fnsave
mov
push
mov
sbb
sbb
add
xchg
shlb
cmp
loopne
or
rcll
popf
xlat
jge
xchg
cmp
out
cmp
insb
ss
les
out
push
mov
fsubrl
mov
or
fisubrl
cmp
jmp
frstor
imul
ret
adc
int
out
push
ficoms
and
mov
stos
movsl
fadds
ror
cli
jmp
or
andb
xorl
test
sub
xchg
jmp
movsb
or
push
testl
adc
aad
shll
and
fildl
pop
subb
push
push
jmp
adc
mov
aas
dec
roll
sahf
cli
adc
push
insb
cmp
insb
lret
aad
push
fst
mov
inc
add
push
cmp
cltd
dec
in
pop
into
pop
lds
out
mov
fbstp
popa
push
stc
mov
jg
fcmovnb
jp
mov
or
aaa
les
xchg
loopne
mov
push
scas
sbb
mov
shrb
or
lods
clc
or
pop
fld
fs
loope
dec
orl
movsb
aad
mov
pop
push
add
add
xor
xor
lods
cwtl
faddp
pop
push
loopne
sti
rcll
and
mov
mov
cli
or
or
stos
inc
cli
and
pop
imul
pop
jmp
fstps
arpl
inc
sarb
loop
scas
testb
inc
and
xchg
ja
push
cwtl
std
scas
xor
jns
jae
icebp
psrld
int3
mov
loop
inc
sbb
leave
and
and
xor
stc
iret
mov
pop
xchg
xor
xchg
out
pop
push
movsl
in
pshufw
loope
fs
mov
ja
jae
mov
out
call
shl
call
cs
pop
inc
adc
loop
push
cwtl
xchg
inc
xor
jg
repnz
sahf
pop
into
cmp
es
xchg
popf
jmp
or
cltd
sbb
inc
gs
scas
push
dec
jle
ss
mov
mov
mov
pop
lea
adc
adc
mov
ds
add
dec
in
xchg
sahf
push
mov
cmp
xchg
outsl
xchg
mov
jbe
jb
xchg
in
xor
dec
xchg
mov
pop
or
fstps
sti
xchg
clc
mov
popf
je
sbb
sbb
jb
lea
scas
ret
out
enter
xchg
lods
mov
inc
addr16
lods
xor
xor
jp
pusha
push
test
push
push
ret
into
sbb
inc
push
pop
aaa
xchg
jl
hlt
push
cli
pop
loop
mov
sub
std
push
mov
stc
xchg
popa
dec
pop
bound
bound
into
cmp
leave
ds
xlat
subb
fdivs
and
sti
pop
adc
rclb
hlt
leave
dec
mov
and
mov
xor
js
mov
fneni(8087
add
add
inc
in
add
in
pop
add
cltd
dec
adc
int3
mov
ljmp
mov
dec
push
jns
pop
out
add
xchg
push
lds
or
or
shll
jge
hlt
pop
popf
cmc
out
jne
mov
ret
test
mov
mov
das
jb
sbb
fwait
jno
sahf
inc
mov
out
paddusw
loope
adc
into
jmp
ffreep
xor
xchg
pop
sub
mov
loope
mov
ljmp
int
stos
pop
jle
test
pop
push
loope
or
stc
add
mov
jp
fdivr
push
stos
sar
xor
lret
mov
in
movsl
stos
add
mov
push
fdivrs
int3
bound
movsb
sub
negb
gs
jmp
in
xor
add
popa
jg
pusha
adc
out
xchg
mov
test
xchg
or
xchg
and
cmp
inc
jmp
dec
mov
out
push
and
jl
push
fisttpll
mov
sub
fistps
push
pop
mov
mov
subb
mov
jbe
or
mov
clc
test
push
fnstcw
daa
and
jae
xchg
inc
jmp
sub
pop
mov
xchg
xlat
mov
mov
fs
cmp
inc
repnz
nop
lods
inc
xor
cmpxchg
push
testb
es
add
xchg
jno
cmp
or
push
in
inc
addr16
es
aaa
aam
loope
adc
sub
sbb
add
and
jbe
pushf
pop
jle
test
mov
mov
and
loope
jne
jo
std
fcomip
dec
push
mov
arpl
out
aam
fbld
mov
jns
pop
stos
out
or
cmp
inc
in
adc
dec
pop
push
out
cmpsl
bound
arpl
ficomps
mov
into
jmp
nop
dec
mov
ja
test
pop
sti
pop
mov
notb
and
push
fsts
inc
inc
into
leave
stc
push
mov
jp
out
xchg
loop
and
jg
mov
push
imul
insl
fcomps
rorb
dec
ljmp
jae
inc
pusha
addl
xor
mov
pop
scas
movsb
out
jmp
cmc
mov
or
xor
test
pop
out
jns
mov
insl
fsubrp
test
cmpsl
aas
mov
inc
adc
add
add
sti
push
bound
out
or
icebp
mov
ds
xor
shlb
pop
lret
mov
xor
es
or
xlat
jbe
fs
adc
mov
mov
add
filds
and
jo
mov
push
inc
mov
push
and
xor
mov
mov
stos
je
mov
imul
in
js
add
xchg
xor
lahf
lahf
int
mov
shrl
orl
out
iret
imul
js
lock
adc
push
arpl
in
stc
scas
xor
jno
push
icebp
and
aam
jmp
mov
jns
pop
shll
pop
cmp
jl
dec
jo
fbstp
test
mov
popf
je
push
inc
sbb
roll
mov
in
loopne
sub
push
scas
subl
pop
add
add
flds
leave
xlat
push
push
xchg
or
mov
and
je
dec
fldcw
cmpsl
adc
mov
mov
rcll
push
shlb
out
lcall
insl
pop
loope
xchg
cwtl
into
dec
ffree
cmp
pop
inc
ficompl
bound
mov
repz
fdivrs
pop
sbb
cmp
mov
pop
pushf
push
sarl
pushl
int
sti
stc
lcall
or
frstor
jns
push
int3
test
mov
jecxz
add
lcall
scas
inc
cmc
dec
rcll
ja
lret
pop
leave
inc
push
out
insl
push
clc
lock
inc
fs
ret
insl
inc
cmc
pop
cltd
push
sbb
mov
inc
jne
push
xchg
out
add
into
push
cmp
mov
cld
jmp
addr16
dec
fisubs
stc
xchg
and
in
gs
aas
mov
xor
lock
jns
mov
cld
dec
popa
out
mov
xor
push
cmp
mov
movsb
mov
sub
stos
addr16
or
clc
adc
mov
dec
imul
aas
pop
jne
mov
adc
mov
je
das
and
stos
iret
sub
cmp
mov
jo
fmul
ret
or
fnstenv
sbb
rcrl
and
lcall
mov
xchg
shlb
sub
or
popl
cmpsl
cmovns
loop
xchg
dec
jp
cmp
jg
mov
mov
out
pop
xlat
sub
xchg
insl
xlat
stos
jg
adc
xlat
pop
push
xchg
pop
inc
pop
push
shr
rclb
or
xchg
in
jp
mov
ret
enter
xchg
and
fcoms
imul
mov
pop
mov
dec
xor
or
lods
jo
add
jle
inc
dec
and
dec
mov
std
dec
das
icebp
dec
or
fadds
lret
shlb
jb
jnp
or
adc
adc
aas
mov
movsl
cmc
mov
in
lods
xor
iret
lcall
std
cmp
inc
push
in
aaa
add
arpl
inc
xor
push
stos
in
jne
movsl
add
mov
icebp
lods
adc
outsb
pop
mov
cltd
mov
addr16
adc
adc
jne
bnd
std
lods
dec
cltd
adc
pop
aam
out
cltd
popa
adc
inc
xchg
popa
xchg
loope
stc
mov
cmp
sbb
pop
into
movsl
xor
jb
sbb
jg
and
pop
fwait
push
pusha
sbb
mov
ret
jg
scas
call
sbb
xor
ljmp
pop
shlb
jmp
xor
iret
stos
decb
icebp
loop
scas
or
and
fcomi
loop
pop
add
lods
movsl
mov
sbb
xchg
enter
adc
pop
pop
adc
cs
sahf
andb
push
pop
out
fs
push
aas
aas
xchg
inc
jmp
mov
call
inc
xchg
adc
pop
pushf
dec
sub
je
xlat
or
xchg
daa
jecxz
add
cmpsl
adc
add
xchg
sbb
and
sub
mov
imul
dec
add
add
pop
cmp
fwait
pop
ss
jae
xor
inc
in
sbb
pop
dec
xchg
cmp
rcl
xlat
sbb
fmulp
stc
pop
pop
fmuls
leave
inc
rcr
icebp
int3
inc
add
iret
js
gs
add
or
movsb
xor
push
xchg
xchg
test
inc
rclb
repz
pavgb
rolb
push
mov
mov
inc
call
push
inc
idiv
jnp
lock
add
out
xchg
sbb
mov
adc
icebp
mov
mov
dec
fnstenv
xor
pop
pop
lcall
inc
cli
xor
mov
inc
mov
fwait
xor
jg
jae
sbb
out
and
xchg
sub
std
push
pop
aas
lret
lcall
lock
fstpl
in
jecxz
sbb
jno
xchg
jb
mov
pop
sbb
popf
clc
or
jmp
aaa
out
or
cmp
add
or
or
push
mov
push
mov
xor
in
aas
int3
fs
push
rcl
pop
dec
ds
mov
popa
outsl
adc
adc
mov
pop
lcall
xchg
jg
push
iret
dec
inc
xor
ret
cmovp
ret
dec
push
scas
jl
push
lret
pushf
pop
mov
lretw
in
xorb
sub
test
cmpsl
add
ja
insl
ljmp
adc
repnz
ja
bound
call
fcompl
xor
xchg
jbe
and
or
inc
sub
mov
jecxz
or
cmp
dec
fsqrt
add
out
aaa
test
mov
insl
or
rorl
shl
or
mov
xor
aad
mov
popa
cmp
adc
aam
pop
and
inc
adc
xor
aam
pop
jnp
outsl
xchg
adc
add
adc
add
fcoml
divl
test
push
pmulhuw
pop
test
popf
cs
test
aas
mov
jb
push
fbstp
int
loopne
mov
push
xor
stos
das
cmp
inc
enter
sti
inc
ficoml
stos
ret
mov
out
orb
xchg
lret
testl
xchg
cli
dec
fists
ljmp
pushf
les
dec
psrld
lahf
rorl
push
xor
inc
lret
mov
mov
adc
push
jl
mov
or
push
cmc
pop
and
mov
jmp
test
jl
loopne
lds
xor
hlt
add
xchg
lds
imull
inc
loop
mov
sub
dec
je
das
adc
in
jo
mov
nop
stc
clc
lods
sahf
jmp
push
xor
bndstx
repnz
out
fisubl
movsl
cmp
lods
adc
movsb
pusha
arpl
test
lock
pushf
rolb
sub
pop
lods
test
mov
mov
fst
addr16
fildl
jg
daa
push
mov
je
mov
pop
or
mov
pop
decb
xchg
and
fcompl
xor
xor
in
mov
cmpsb
in
fdivrs
cwtl
mov
dec
loope
mov
mov
imul
std
pushf
pop
clc
sbb
push
pop
push
mov
mov
incl
inc
insl
mov
das
bound
push
xor
ljmp
pop
xchg
jne
test
sub
cmpsb
inc
lcall
js
xor
mov
outsl
fstps
jo
shl
push
xor
xor
cmp
xor
mov
fs
frstor
and
pop
negb
cmp
in
mov
sub
and
in
sti
pushf
into
or
pop
fdivs
pop
nop
mov
sub
mov
pop
or
xchg
mov
jne
mov
cmp
push
xchg
bnd
mov
mov
call
xorl
inc
pusha
movsl
ret
add
adc
sbb
lea
add
mov
leave
push
mov
mov
adc
add
out
and
jnp
out
xlat
fcomps
cs
or
mov
dec
jp
mov
test
push
dec
cs
mov
xchg
iret
test
ss
adc
jecxz
jne
ds
adc
int
dec
mov
mov
or
sbb
mov
sbb
sbb
xor
mov
jae
cmp
sbb
sbb
mov
xor
loop
push
push
popa
and
push
std
ret
inc
lcall
outsl
addl
pop
adc
push
sub
cli
cld
and
negl
pop
dec
negl
jbe
inc
fwait
xor
loope
shl
xlat
repz
push
mov
jne
or
mov
mov
pushf
mov
mov
lahf
xorl
hlt
not
inc
push
xor
ljmp
xchg
loop
xchg
cmp
mov
cmp
pop
xchg
stos
movsl
aam
out
repz
cmp
push
sbb
jl
mov
cmp
inc
or
dec
xor
push
into
call
into
adc
xor
push
fistpll
xchg
lcall
pop
in
pusha
add
xor
mov
push
add
adc
sbb
insl
jl
mov
and
js
sbb
adc
cwtl
cmp
pushl
loop
mov
sbb
dec
cmp
out
loope
jne
pop
jmp
push
cmp
mov
jb
out
xchg
mov
test
add
mov
je
aas
or
inc
and
mov
add
xchg
xchg
xorb
lcall
push
or
xchg
add
loope
xchg
loop
test
xchg
dec
sbb
aad
mull
pop
mov
add
ss
int
push
in
xor
cltd
test
nop
pop
push
dec
fisttpll
push
cmc
mov
mov
out
test
mov
insb
dec
sbb
xchg
lock
loopne
out
in
pop
ds
mov
icebp
ja
adc
negl
xchg
fmull
inc
jecxz
inc
and
xor
leave
push
or
sub
dec
movsb
ror
lock
add
in
mov
and
or
push
sub
aad
and
sbb
pop
roll
sub
pop
mov
cmpsb
insb
push
push
cltd
mov
insl
dec
popa
lret
imul
add
pop
pop
shll
lock
adc
adc
imul
jge
add
ds
repnz
push
mov
outsl
nop
mov
in
inc
scas
cld
inc
mov
outsb
loope
sbb
leave
jae
sub
or
ja
xchg
mov
jns
rcpps
xchg
mov
inc
test
in
fisubrs
int3
jo
cmp
adc
pop
test
sub
js
scas
icebp
movsb
mov
adc
mov
jne
mov
jae
pop
stc
jp
movsb
cmp
or
adc
mov
add
les
jecxz
adcl
or
xchg
dec
cmpsb
push
inc
fcmovbe
push
pop
insb
out
out
lahf
and
sar
loope
xorl
call
mov
loopne
mov
rcrb
fsub
cli
lods
stc
ret
pop
pop
xchg
sub
mov
sarl
loope
cltd
fwait
ja
sub
mov
cmp
stos
xchg
lods
mov
dec
fisubl
push
ja
xchg
call
outsb
out
push
pop
pop
pop
jecxz
fiaddl
pop
push
sub
mov
cs
xchg
hlt
lods
add
add
lea
mov
dec
jmp
ljmp
inc
push
mov
ds
out
jns
ret
fidivrl
xchg
mov
jno
movhps
lods
bound
xchg
jge
nop
jbe
stos
jbe
push
jnp
and
sti
ss
stc
pop
xlat
or
mov
cmpb
jno
sti
sub
pop
jl
ljmp
es
lahf
std
xlat
aaa
push
mov
test
das
cmp
dec
int
xchg
xchg
int
aam
pop
scas
push
add
mov
inc
ja
testb
push
xchg
pop
sub
jp
and
mov
ja
shrb
fldl
inc
in
xchg
xchg
enter
and
gs
repnz
xor
mov
add
jl
cld
mov
pusha
adc
add
pushf
mov
out
or
rcr
and
lods
rcll
out
mov
mov
sbb
dec
in
sti
out
shrl
fsubs
lea
movsl
pop
push
cmp
call
mov
pusha
dec
jns
sbb
lods
sub
fadds
js
mov
out
dec
or
dec
jae
sub
jg
aad
inc
jg
cmc
mov
xor
loop
inc
mov
aam
shll
test
movsb
out
movsl
pop
and
mov
sub
mov
dec
fcoml
add
movsl
ficompl
and
fs
xchg
inc
add
cs
stc
clc
shll
pop
adc
aad
aad
inc
sbb
push
mov
add
inc
cmp
adc
push
fbld
fwait
cld
sub
and
push
sub
fadds
cltd
lcall
bound
cli
push
mov
cld
rol
lret
cmp
xchg
ret
push
mov
push
inc
pop
adcl
ljmp
test
xchg
mov
negl
int3
mov
es
adc
flds
mov
push
mov
pop
repnz
push
jmp
push
lock
rcr
jl
push
pop
cwtl
stc
cmpsb
pop
scas
shlb
rorl
push
sub
push
cmpsb
fcomps
push
mov
xlat
jle
push
pop
cs
in
sub
outsb
and
cmp
lods
push
addl
bound
test
rclb
jp
into
mov
fs
ljmp
mov
mov
hlt
sbb
inc
fs
xlat
xchg
and
loopne
sbb
pop
or
add
dec
popw
fwait
lahf
hlt
mov
mov
sbb
sbb
dec
push
scas
mov
push
insb
into
lods
cmc
pop
add
pop
xor
add
jbe
or
mov
aas
inc
test
divb
fisubrs
adc
push
negb
mov
inc
or
add
xor
xchg
sti
std
cld
sarl
bound
sti
mov
xor
outsb
das
movsb
scas
movsl
inc
xor
mov
das
jb
mov
decb
mov
and
out
nop
cltd
dec
repz
stos
cmp
outsb
and
arpl
sub
cli
test
add
int3
adc
push
repnz
aaa
add
inc
pop
mov
jp
mov
xchg
push
in
mov
add
xchg
ret
test
int3
inc
aam
sub
sub
push
pushf
lret
mov
fdivl
and
cmpsl
fists
hlt
das
scas
popf
enter
sub
int
mov
xchg
stos
mov
sub
jle
cmp
xchg
decl
xchg
test
loop
pop
cmpsb
mov
add
mov
arpl
xor
adc
pop
das
sub
fidivl
cltd
mov
leave
push
lock
xor
sbb
js
xchg
adc
dec
das
xchg
movsb
pop
out
mov
movsb
or
jmp
fmulp
test
jg
and
sbb
mov
pop
scas
and
xchg
xor
push
xchg
test
jbe
mov
insl
stc
and
mov
add
ret
sahf
jp
mov
stc
pop
mov
dec
xchg
outsl
push
fs
rcrb
popa
pop
xlat
dec
lds
fwait
leave
cmc
js
mov
imul
pop
jnp
push
mov
jg
mov
cmpl
inc
xchg
sub
sbb
mov
xchg
scas
push
rcl
sahf
addr16
fdivrl
xchg
dec
dec
loopne
or
sbb
jle
fisttpl
mov
adc
push
mov
pop
pop
push
out
add
dec
lret
js
sub
aad
push
inc
aad
ja
jg
pop
and
pop
dec
stos
cs
or
cmpsb
dec
js
test
mov
dec
int3
or
sub
lods
sub
or
test
dec
outsb
les
cmp
test
xchg
fwait
xchg
rcrb
inc
mov
mov
lds
pop
icebp
fs
sub
dec
in
out
clc
jbe
mov
jbe
xchg
xor
imul
mov
mov
mov
mov
sti
adc
fsubs
mov
lret
cli
outsl
sub
ja
pusha
lods
lcall
jo
test
pop
add
sub
std
enter
imul
xchg
imul
inc
iret
sub
orb
cmpsb
lcall
mov
or
sbb
xchg
jmp
dec
lret
push
ss
cmp
popf
mov
xor
repnz
jb
call
out
fildll
mov
push
mov
add
mov
gs
data16
fucomip
ljmp
cmp
cmp
add
jo
sub
jnp
dec
xchg
xchg
mov
icebp
stc
std
dec
lds
lahf
test
dec
movsl
enter
std
cmpsl
pop
pop
adc
adc
pusha
cmp
loopne
out
sahf
mov
pop
dec
adc
dec
mov
jg
loop
and
fwait
pop
ss
sub
dec
jl
loop
ret
shr
in
sbb
jle
hlt
int3
rorb
pushf
pop
dec
popa
lods
in
in
mov
out
xorb
inc
cmpsb
adcb
ja
test
cs
test
fcoms
add
xchg
fsubs
mov
in
cli
mov
xor
icebp
sbb
insb
call
mov
cmpsl
cmp
pop
inc
stc
mov
out
loop
jp
js
cmc
sti
jecxz
fldl
adc
enter
int3
cmp
fwait
mov
je
stos
or
jmp
fucom
jo
xchg
out
pop
aam
pop
dec
push
add
push
xchg
pop
sbb
ljmp
fidivrl
xchg
cmp
cmp
xor
push
movsb
and
enter
mov
imul
pop
xor
outsl
in
outsl
sub
dec
fdivrs
inc
aam
sbb
xor
jns
push
out
mov
rorb
fidivrl
inc
orb
add
cmp
mov
adc
sbb
stos
pushl
cld
push
sbb
pop
loope
sti
imul
adc
clc
mov
fimuls
or
jecxz
jno
xchg
dec
cwtl
pop
icebp
adc
subl
cmc
dec
ret
call
adc
ret
jecxz
xchg
movsb
pop
add
jl
fldcw
outsl
pushf
popf
fnstenv
rorb
and
dec
sbb
adc
cld
int3
aas
loopne
add
int3
in
movsb
popa
cltd
push
mov
adc
sbb
mov
or
gs
and
jns
loop
inc
mov
or
mov
mov
lods
pop
xlat
or
bound
dec
add
ficompl
cs
popa
cmp
push
insb
cmpsl
les
lods
mov
sub
inc
mov
iret
jl
xchg
loop
mov
leave
cmpsb
iretw
test
cmp
repnz
test
or
jg
xchg
imul
mov
jb
mov
or
xchg
xchg
sbb
dec
imul
jbe
jae
fmuls
enter
cmp
inc
mov
cld
xor
push
fdivrs
jle
out
scas
mov
imul
sub
inc
and
inc
outsl
jp
xchg
pop
adcb
xor
mov
xchg
xlat
cmp
mov
push
xor
dec
xlat
mov
mov
inc
xor
cmc
imul
adc
pop
adcb
scas
mov
xor
std
cmp
js
test
and
mov
jbe
add
mov
jmp
shrl
cmpsb
repz
ss
idiv
sbb
add
popa
dec
faddl
sub
mov
out
push
or
aas
pop
ficomps
adc
in
fcomps
cli
andb
jmp
ror
adc
xchg
call
or
xor
jnp
mov
mov
fisubrl
bound
es
pop
inc
icebp
push
cmp
popa
mov
and
sub
xchg
aaa
insb
sub
into
insl
xlat
movd
or
jg
sbb
fsubrs
and
mov
push
and
fwait
jecxz
int
stos
push
and
cmpsb
lret
adc
dec
xor
outsl
sbb
roll
imul
push
inc
mov
pop
hlt
insl
mov
pop
dec
je
jnp
pop
cmp
push
testb
daa
das
inc
adc
pop
pushf
nop
or
push
ljmp
in
xchg
adc
loop
xchg
rorb
jg
jns
jl
into
into
push
and
jae
fs
ret
fidivs
adc
test
popa
roll
adc
jnp
gs
adc
mov
lcall
adc
push
mov
sbb
push
insl
jbe
pop
mov
xchg
push
jns
mov
mov
mov
cmpsb
jbe
int3
mov
sbb
fpatan
push
es
inc
loop
aas
pop
lods
mov
xchg
out
data16
loop
fnstcw
sub
mov
in
pop
fimuls
jp
pop
dec
stos
and
sbb
xor
sahf
pop
in
push
pop
push
mov
sets
leave
mov
repz
mov
imul
mov
leave
mov
jbe
hlt
aad
mov
es
cmp
popf
sub
fs
push
push
subb
notb
or
sbb
pop
pop
into
mov
adc
pop
out
cmpl
ror
ja
stos
mov
sub
shll
xchg
cmp
scas
add
mov
pop
imul
arpl
jmp
or
xchg
pop
jl
out
adc
out
xchg
mov
iret
out
adc
mov
aas
ds
adc
ficompl
dec
xor
mov
mov
and
push
jmp
jge
mov
ja
int
adc
xor
subl
ja
jmp
insb
ja
cmp
lods
out
jl
cmp
mov
fistl
xlat
and
aaa
jnp
push
fwait
in
inc
dec
cli
cmpsb
pop
xor
shrb
cld
pop
pop
push
mov
repz
push
sbb
jge
test
and
xor
jmp
repz
in
addr16
pushl
jl
cmp
and
movsl
jle
adc
mov
sub
jo
int3
insb
cmp
push
sbb
pop
inc
shrb
ret
pushf
sub
push
movsl
pop
iret
or
add
in
cmp
std
jg
cld
adc
sbb
mov
sbb
pop
xchg
out
nop
cmc
mov
cld
ret
dec
push
fnstsw
jle
nop
pushf
xor
enter
ja
mov
popf
shll
cmp
sub
fimull
aaa
and
es
dec
pop
cmp
filds
in
cmp
mov
sarb
je
push
and
push
sbb
repz
or
or
mov
xchg
mov
mov
icebp
repz
jnp
pop
stos
add
xor
into
sub
dec
cmp
adc
enter
pop
adc
push
or
fidivrs
xor
add
cmp
or
cmpb
or
test
add
jp
xor
jge
sbb
jl
lret
test
leave
cmp
popa
inc
dec
or
test
cmp
imul
addl
lret
ja
cwtl
icebp
ss
aad
les
outsl
dec
dec
jg
sbb
sbb
sub
out
aam
out
cltd
pop
mov
fidivrs
testb
add
gs
mulb
dec
mov
stc
add
je
ret
lds
inc
jmp
outsb
sub
push
test
pushf
fdivrs
cmpsl
cmc
das
int3
mov
repnz
mov
xor
jbe
push
push
pop
movsl
add
mov
or
jle
rcr
test
aad
push
out
add
test
dec
jno
mov
push
xor
repnz
fildl
cmp
jne
jge
lahf
test
sub
or
lock
lahf
cmpsb
mov
xchg
cmpsl
repz
dec
pop
pop
ljmp
cmp
or
and
push
xor
jbe
add
push
fdivs
aad
mov
adc
sub
xor
sbb
subl
loop
in
adc
or
je
mov
push
lret
sbb
test
int3
jg
stc
cmpsl
fsubrs
roll
xchg
cmp
pop
enter
and
mov
dec
mov
and
nop
xor
sbb
je
in
add
mov
lds
fcompl
pop
les
add
cwtl
xor
das
sub
cmp
divl
icebp
pop
mov
daa
scas
cmp
lret
and
mov
lret
into
add
pop
fldl
push
out
add
push
jl
ja
loopne
out
aad
sub
push
pop
xchg
test
sbb
jmp
xor
pusha
test
mov
or
sub
or
test
es
xor
cmpb
jmp
ds
add
je
lret
pop
or
mov
test
fs
sbb
jg
add
ret
dec
jno,pn
push
push
sub
or
cwtl
xorb
push
sbb
jmp
sub
stc
inc
xchg
movsl
aaa
scas
or
insb
insb
add
jns
push
jle
push
int3
jl
jmp
and
pushf
rcrb
xor
fistpl
lds
push
int3
pop
insl
cmp
out
cmpsl
pop
mov
loope
sub
or
adc
pop
outsb
and
xchg
daa
hlt
nop
mov
mov
dec
jne
scas
negl
outsb
loopne
jnp
mov
inc
cld
lret
sub
mov
jmp
xchg
in
ljmp
lret
or
aad
sub
outsb
push
enter
fsubrp
add
push
inc
call
jmp
addb
out
lcall
dec
cmp
sub
xchg
nop
ds
mov
ja
pop
dec
dec
sub
jo
xor
dec
sub
ss
and
int
xor
sub
or
xor
or
push
pushf
out
mull
pop
sbb
pop
jbe
dec
add
mov
jb
jecxz
fwait
lret
xchg
outsl
fdivrl
imul
cmp
ret
test
lods
into
cmc
mov
xchg
ret
sub
inc
xchg
lret
mov
int
mov
xchg
ret
jg
xchg
cltd
jbe
or
mov
xchg
loopne
xor
insl
inc
push
enter
or
inc
shrb
mov
pusha
nop
test
push
repz
jb
test
ret
cmpl
xlat
push
fs
jns
int3
stos
scas
inc
aam
xor
pusha
cmp
ret
lods
xorl
add
ret
sbb
adc
and
mov
sarl
dec
movsb
arpl
mov
mov
jne
sub
fxch
push
mov
std
movsl
jo
mov
cmp
pushf
shl
mulb
mov
fisttpll
orb
nop
jbe
or
cmp
add
lgs
xchg
cmp
mov
loop
inc
xchg
stc
fmulp
addr16
cwtl
adc
ds
sbb
sub
les
jge
pop
dec
mov
ljmp
test
fisubl
jb
mov
cmp
jg
pop
les
cmp
sub
mov
mov
jp
push
fnsave
loop
push
mov
fldcw
pop
cmp
hlt
lret
leave
push
sti
inc
leave
pop
pop
int3
jno
and
hlt
mov
cmpl
cmpsl
cld
lret
cmp
in
sub
leave
inc
xchg
jge
imul
adc
jmp
xchg
movsb
xchg
adc
incb
adc
xchg
xchg
mov
xor
cmpsl
inc
mov
cwtl
lret
jl
pop
and
xchg
pop
ja
fbld
repnz
fs
push
movsl
mov
mov
sar
mov
pop
or
or
jge
ror
cmp
fimuls
xor
or
adc
sbb
fisubrl
test
cmpsb
push
enter
movsl
pop
adcb
test
xor
xchg
pop
movsl
int3
pop
cltd
loop
test
xor
icebp
dec
popf
sub
inc
out
push
or
jbe
mov
xor
pop
iret
push
imul
call
int3
sbb
in
inc
enter
xlat
stos
cmp
pop
cmp
mov
mov
shll
sbb
imul
push
pop
cmp
sub
xchg
imul
jno
add
xor
xor
imul
xchg
addr16
sbb
or
mov
mov
dec
lods
subb
sub
cld
and
rcrb
aam
sub
cmp
hlt
push
mov
jns
hlt
sbb
aaa
pop
push
lods
fcompl
mov
xchg
mov
bound
sarl
jp
or
imul
ret
cmc
filds
fcoms
mov
mov
push
insb
int3
sub
push
ror
jmp
adcl
ja
adc
jecxz
jno
daa
hlt
fwait
xor
cmp
sbb
popa
add
es
sbb
sub
jmp
mov
mov
dec
repnz
outsb
pop
pusha
push
hlt
sbb
add
ds
sbb
inc
sub
cmp
jae
xchg
xchg
popf
jb
sub
xchg
movsl
or
xchg
pop
xlat
pop
out
aaa
das
mov
xor
fcompl
repnz
dec
sbb
test
mov
in
inc
add
push
dec
sbb
ret
push
mov
dec
or
push
jb
push
pop
cmp
cmp
ja
fbld
push
out
pusha
into
mov
mov
movb
cmpsb
sti
aam
and
test
jae
mov
inc
jg
add
mov
pop
xor
push
aad
cld
hlt
pop
mov
out
fldz
or
cmc
hlt
push
imul
sub
cli
mov
inc
hlt
adc
adc
mov
inc
dec
out
xlat
repnz
pavgb
and
jmp
outsl
leave
xor
sbb
mov
dec
mov
inc
imul
sub
jmp
and
sub
dec
push
arpl
push
inc
lahf
or
icebp
test
cmp
jbe
jns
sahf
mov
and
cmp
int3
insl
inc
lds
mov
sbb
xchg
jns
sahf
mov
cmp
adc
lock
or
xor
xchg
rolb
rolb
out
jecxz
in
adc
mov
leave
jb
inc
cmp
sub
fisttpl
xor
xchg
data16
inc
shrb
shll
push
mov
add
pop
je
xchg
in
add
jg
mov
push
and
fisttps
sub
jb
std
int3
jl
inc
mov
and
dec
push
in
push
cmp
orb
imul
les
outsb
mov
dec
pop
xchg
adc
mov
jns
leave
xor
and
xlat
cltd
add
cmp
rcrb
test
aas
adc
dec
add
shlb
sbb
rcll
divl
call
shll
insl
mov
inc
jno
inc
dec
clc
fwait
movsb
mov
mov
cwtl
imul
mov
xchg
mov
mull
jg
popa
leave
fmuls
lret
inc
mov
daa
mov
ficomps
loope
in
pop
aas
int3
insb
mov
mov
lret
sbb
ljmp
xor
sbbl
xor
das
mov
mov
aad
std
add
mov
hlt
insl
add
xchg
ja
inc
stc
xchg
popa
pop
dec
sub
ds
dec
mov
or
insb
and
es
movd
or
pop
or
xchg
jmp
lods
jo
addb
inc
mov
push
xchg
inc
fbstp
in
add
dec
cmp
cmp
jecxz
jo
out
mov
pop
pushf
sub
es
call
jno
pop
sbb
icebp
push
sbb
dec
imul
cs
rcr
cwtl
push
push
add
addb
aad
cs
sahf
lds
pop
test
xor
push
push
xor
push
aaa
jae
pop
test
pop
in
mov
jecxz
ret
int
clc
insl
sbb
int
dec
leave
inc
push
ds
cs
mov
lock
inc
std
imul
and
mov
in
add
inc
and
dec
xchg
adc
cmpsl
pop
enter
aas
aaa
cli
setb
pop
mov
lods
inc
jl
pop
xor
es
jns
ljmp
xlat
vxorps
pop
in
jmp
mov
cmpsl
imul
xor
cmc
int
jl
mov
cmpb
pop
fsin
shll
adc
std
scas
movsl
mov
pop
sub
rolb
push
pop
lret
les
sub
mov
negl
push
cmpsb
cmc
dec
sbb
adc
lods
jb
addr16
cs
push
cmp
xorb
add
rcrb
stc
addr16
xor
sub
insb
imull
sub
jge
cmp
fstpl
push
mov
dec
mov
push
notb
sbb
mov
inc
scas
xchg
loope
jl
jecxz
xchg
add
mov
push
jge
jge
xorb
mov
add
push
loopne
inc
cmp
les
daa
mov
xchg
pushf
xorl
stos
fsubs
cwtl
xor
and
cmpsb
les
jb
xchg
mov
insl
pop
push
mov
xchg
sub
sbb
mov
shlb
pushf
imul
lods
push
rcrl
outsl
movsb
arpl
push
mov
mov
mov
sbb
mov
mov
jno
icebp
mov
cmp
test
fisubl
jne
in
push
push
pop
mov
insl
xchg
loopne
inc
xor
in
push
inc
add
xchg
push
fcoms
pushf
rcrl
jp
cltd
dec
or
fnsave
daa
xor
jle
cli
jmp
ds
mov
jg
dec
fisubrs
adc
out
mov
inc
xchg
xchg
es
and
ljmpw
jns
jmp
push
adc
or
test
mov
clc
out
popl
mov
pop
or
repz
push
sahf
outsb
sub
pusha
cli
out
dec
xor
push
push
pop
int3
xorl
pop
lea
inc
cmp
icebp
ljmp
addb
fdivrs
mov
cmc
inc
pop
jbe
or
movsl
daa
sub
mov
test
fcoms
push
jb
out
mov
aad
pop
test
add
xchg
dec
push
adc
and
and
sbb
in
loopne
jb
dec
lret
andb
lock
xor
mov
xchg
xchg
xchg
das
add
push
into
rcrb
shl
mov
mov
adc
shlb
dec
shlb
clc
fnstenv
shlb
aam
lods
gs
push
inc
decl
mov
sub
cmp
push
into
shrl
cwtl
push
push
inc
dec
mov
dec
mov
pop
pop
mov
xchg
push
stc
stc
push
xor
enterw
push
and
fcmovu
std
xor
test
add
clc
xchg
add
lea
mov
test
pusha
addr16
inc
popf
sbb
pushf
popa
dec
add
sti
gs
push
popa
or
add
mov
dec
fildll
or
cltd
shrb
add
fnstenv
cmp
fisubrl
js
inc
and
mov
adc
and
add
dec
sbb
popf
inc
aad
in
lock
sub
out
decl
repnz
and
inc
mov
jmp
js
fxch
push
repnz
push
sbb
jno
mov
jns
mov
mov
mov
lea
imul
packssdw
xor
iret
test
out
mov
xchg
pop
sub
push
adc
inc
cmpsb
cmpsb
or
push
jle
jmp
call
mov
add
jl
pop
dec
daa
cmp
cmp
xor
test
inc
lea
sub
add
mov
jp
push
sbb
cmp
andl
jae
les
sub
in
stos
push
das
jbe
push
or
inc
int
mov
mov
and
adc
sti
icebp
inc
daa
jmp
dec
rcr
out
and
inc
sub
mov
ss
or
faddl
mov
and
push
or
int
inc
dec
add
out
stos
addl
stos
inc
and
sub
jecxz
pop
jg
fs
mov
mov
inc
mov
cmp
lea
rcl
pop
push
test
adc
push
test
lock
xchg
lods
add
xchg
iret
rcrb
into
jge
inc
std
inc
and
test
aam
xchg
out
in
sti
cld
pop
push
pop
in
in
ljmp
adc
mov
add
pushf
mov
sbb
sahf
and
ss
repz
or
mov
inc
rolb
xchg
stos
push
aaa
or
or
aam
bound
xchg
mov
add
push
insb
bound
jbe
aas
aaa
ficomps
push
xchg
pushf
inc
std
and
adc
mov
and
int
lret
and
loope
and
or
jecxz
in
dec
bound
mov
mov
jne
add
dec
add
fisttpll
jno
rorl
add
repz
jg
sbb
pushf
inc
movsb
test
clc
popa
mov
inc
shll
jp
xchg
mov
jmp
and
jmp
xchg
mov
into
xor
imul
sti
scas
in
into
data16
jnp
sbbl
cmp
inc
push
subl
cmp
xchg
add
mov
in
push
cmpsb
mov
push
subl
push
outsl
dec
pop
pop
rclb
cmp
xchg
adc
and
xor
enter
jl
fldenv
fidivl
ret
pop
popa
mov
test
ret
stc
aas
and
sbb
fsub
lock
adc
mov
dec
outsb
fisubl
xchg
jg
add
dec
jnp
pop
jns
in
mov
mov
mov
add
cmpsl
jne
mov
jl
cmpsl
or
nop
sub
bound
add
je
push
xchg
dec
sub
xor
mov
test
lret
push
dec
mov
fldcw
pop
out
inc
test
sbb
and
jno
insl
sub
jg
jne
leave
mov
add
divb
outsb
sbb
pop
pusha
jns
je
pushf
dec
lcall
add
pusha
pop
xchg
test
xor
xor
mov
pop
jp
int3
and
sbb
mov
mov
cli
lods
dec
sbb
out
push
xchg
insl
test
addr16
pop
mov
int3
cmp
loopne
mov
cld
pop
idivl
cmp
aaa
xchg
sub
dec
imul
rcrb
cmp
insl
insb
add
in
lcall
push
lea
out
mov
jae
mov
push
or
and
popa
imul
or
or
insl
aad
sahf
int3
fcoml
add
jbe
std
mov
sbb
into
loop
mov
mov
imul
in
pop
test
mov
push
in
inc
test
pop
fs
inc
fbstp
in
and
int3
jl
xor
nop
data16
ficomps
or
xor
cmp
push
push
shrl
lahf
mov
sbb
dec
xchg
loop
push
or
pop
cwtl
cmpsl
imul
insb
lret
xlat
lock
mov
sub
mov
sbb
and
dec
popf
xor
roll
gs
enter
stos
fwait
cmpsb
daa
cmp
sub
xchg
xchg
push
in
stc
out
scas
jae
sub
mov
aas
jb
jno
int3
push
sub
outsl
adc
push
adc
mov
mov
jae
out
push
mov
or
sbb
fisttps
sub
sbb
add
pop
pop
jne
test
add
cs
scas
and
push
jmp
mov
dec
xchg
adc
negb
xor
ja
mov
sub
jbe
jg
and
xchg
xchg
mov
add
lcall
add
pop
loop
iret
lahf
xchg
pop
out
mov
enter
pop
add
pop
ret
and
ss
fstpl
sub
aad
out
dec
loopne
in
jno
scas
scas
neg
sbb
mov
mov
frstor
push
jle
jecxz
nop
mov
icebp
xor
test
add
fldenv
psubd
dec
repnz
adc
push
mov
mull
in
int3
daa
jo
cmp
out
pop
pop
pop
leave
dec
pop
and
xchg
sbb
fcomp
pop
in
scas
into
mov
out
adc
lahf
mov
dec
and
scas
fsubr
data16
cmpsb
inc
pop
rorb
dec
and
mov
cmc
mov
jle
xchg
mov
leave
jns
cmp
es
jnp
mov
test
xchg
sbb
shl
lcall
gs
xchg
dec
jle
push
repz
gs
sub
aaa
scas
daa
adcl
jle
jecxz
jo
aaa
jecxz
repnz
lret
and
and
iret
inc
and
pusha
cmp
lock
cmpsb
mov
jbe
es
inc
jmp
mov
pusha
lret
adc
and
movsl
aas
xchg
cmp
bound
mov
pop
daa
mov
jns
in
add
lea
js
mov
dec
adc
ja
dec
ds
addr16
fsubrl
mov
fwait
shrl
daa
mov
push
pop
inc
pushf
ror
test
fwait
mov
xchg
into
call
aaa
mov
or
sub
sub
in
sbb
imul
jmp
pusha
addb
xchg
inc
adc
inc
stc
cwtl
pushf
stc
or
mov
inc
dec
push
ljmp
std
and
jle
mov
xor
add
and
dec
in
add
pop
gs
stc
adc
xor
or
or
inc
mov
mov
lods
shrl
imul
cli
and
or
adc
sub
dec
sbb
cmp
aaa
pop
ficompl
cmp
je
movsb
adc
add
arpl
insb
ss
les
jp
mov
cmp
cmpsb
jge
xlat
xchg
lods
icebp
fmulp
add
pop
xchg
fmuls
cmpsl
es
pop
adc
ret
in
inc
lcall
ljmp
test
inc
test
out
lods
xor
sub
push
jle
or
pop
in
mov
lods
dec
das
sbb
test
or
adc
push
div
xchg
cltd
inc
aad
dec
sub
subb
or
push
arpl
int
mov
enter
lret
lahf
insb
pop
mov
dec
inc
fwait
inc
jmp
or
jns
pop
int3
ja
adc
and
xor
testl
mov
sbb
inc
xchg
mov
shll
and
fbstp
sarl
pushf
popf
pop
add
sahf
cmp
mov
push
mov
test
or
cmc
push
lods
mov
inc
testl
jb
popf
cltd
les
rcl
adc
lock
inc
push
or
jge
and
and
xor
into
shr
pop
cmp
jp
jl
sbb
addl
and
sbb
fcomp
dec
adc
xchg
ss
jg
pop
pusha
rcl
shld
mov
pop
push
cmpsb
pop
cld
adc
fldenv
outsl
mov
mov
js
or
xchg
subb
out
inc
inc
mov
out
pop
and
ret
jnp
mov
iret
push
jg
push
stc
xchg
scas
sbb
loope
pop
lds
popa
out
inc
es
das
in
add
mov
inc
out
movsl
mov
insb
push
push
loope
dec
je
xor
sub
dec
lret
mov
ja
mov
add
adc
pop
lret
lret
aad
jg
xor
push
outsb
les
scas
mov
out
out
lcall
scas
xchg
nop
xchg
or
outsb
and
mov
or
xor
inc
icebp
fsubl
inc
in
pop
pop
aam
push
mov
popf
xchg
mov
fwait
or
adcb
lds
xor
adc
inc
mov
pop
inc
clc
sub
out
and
inc
in
lds
dec
sti
aas
jmp
ja
lahf
fists
mov
outsb
mov
add
imul
lods
pop
mov
test
movsl
leave
mov
mov
sub
mov
mov
insb
push
push
rol
inc
push
mov
push
or
push
fsubrs
dec
or
in
mov
push
xor
cmp
clc
adc
add
sub
add
mov
xchg
imul
adc
shl
call
outsb
int
pop
out
pop
bound
out
ret
mov
sub
push
popa
xchg
sub
aas
mov
arpl
add
lods
mov
popa
xor
mov
mov
pop
jle
dec
popf
lea
inc
lock
fldt
cs
pop
add
cmp
xor
cmp
jnp
xlat
pop
into
shrl
mov
push
cmc
jno
and
popl
sbb
sbb
adc
xchg
loope
cmp
addl
lret
cmp
call
sub
in
rcl
lds
push
dec
lret
rcrb
imul
jmp
mov
adc
je
or
mul
fs
sbb
into
int
dec
push
mov
in
push
lods
add
mov
jecxz
and
push
dec
jb
mov
in
cmp
mov
jmp
adc
bnd
cmp
push
xchg
jle
out
les
jb
sbb
cli
pop
push
push
movsb
push
cltd
pop
or
add
cmc
loope
lods
lock
mov
in
fdivrp
mov
das
loopne
clc
add
dec
pop
leave
jbe
jne
and
push
negl
and
cmp
dec
push
xchg
push
roll
sub
data16
xor
xor
sub
mov
cmp
icebp
sub
jge
sbb
shll
jo
mov
push
mov
into
hlt
sahf
int3
mov
ds
xchg
cmp
daa
cmp
test
mov
sbb
push
gs
adc
and
jle
inc
mov
xor
xchg
sub
ja
insl
pop
in
mov
bound
xor
or
xchg
or
fistps
sub
rcr
and
adc
loopne
inc
ss
add
pop
dec
ja
adc
lret
pop
push
std
cmovns
sbb
xchg
idivl
mov
xor
adc
and
mov
pop
mov
insl
out
ja
and
cltd
dec
test
push
xchg
dec
fs
mov
mov
pop
add
in
jo
sbb
push
inc
adc
les
test
ss
jo
and
pop
jbe
jb
ret
aam
sbb
lock
out
mov
add
repnz
push
cmp
sub
dec
scas
jmp
scas
sbb
lret
or
mov
js
add
sub
pop
iret
mov
addb
sub
mov
jp
and
jne
cmp
int
clc
stc
adcb
sub
add
cli
sbb
add
cmp
mov
or
mov
and
clc
imul
es
in
frstor
test
loope
sbb
sbb
inc
xlat
insl
or
in
cmc
mov
call
push
pop
loopne
mov
imul
jmp
push
mov
leave
rcrb
cs
daa
jae
popf
mov
cmp
push
mov
xchg
sahf
fs
daa
cwtl
shlb
inc
push
ret
push
cmp
sbb
push
adc
xor
and
fnsave
cmp
xor
mov
int3
push
rcl
inc
cmp
cltd
dec
mov
ret
dec
sbb
sbb
sbb
fs
pop
mov
sub
adc
addb
push
push
lahf
adc
in
push
shll
mov
es
sbb
mov
out
xchg
jge
sbb
popf
mov
pop
xor
fnstcw
add
bound
fmull
repz
testb
sbb
cs
xchg
sbb
sub
xor
push
or
dec
les
push
adc
add
push
dec
mov
mov
inc
adc
pop
test
xor
inc
jg
pop
idiv
loope
inc
jecxz
sub
add
jo
push
fistpl
aas
mov
cmpsl
cmp
and
jo
pop
popf
mov
je
shlb
fs
sti
mull
pop
sti
or
sub
fwait
icebp
movsb
xchg
pop
test
repnz
fwait
mov
mov
pop
sub
push
in
into
test
adc
sbb
jp
scas
cmp
mov
gs
xor
dec
andl
arpl
int
cmc
pop
add
dec
lahf
sbb
xchg
arpl
outsl
fsubl
pushf
inc
pop
xor
lock
loop
mov
jl
aad
loope
in
mulb
jae
adcb
jge
inc
mov
xchg
add
mov
jns
es
repnz
sbb
and
and
popa
mov
sbbb
pop
xchg
add
xchg
aam
push
mov
cmp
test
mov
stos
adc
aam
inc
mov
fsincos
ret
xor
ljmp
mov
insl
jo
xor
sbb
ret
fisubrs
arpl
shlb
xchg
cmp
xchg
mov
lret
aas
mov
push
jecxz
addl
andb
jmp
mov
pop
jae
popa
pop
pop
clc
lods
aam
dec
dec
stos
jmp
xchg
xchg
aad
inc
ja
scas
or
mulb
rcrl
ds
fnstenv
mov
test
mov
mov
xchg
gs
cmp
inc
sbb
xchg
pop
inc
jb
imul
fldt
sub
hlt
lea
das
sete
pop
ja
scas
dec
fstpt
pop
push
loop
arpl
dec
ds
movsl
mov
jno
stos
lcall
je
enter
test
push
xor
jp
jae
shlb
rcr
mov
rcr
mov
dec
push
jbe
arpl
mov
cmp
rorl
movb
or
aam
ds
push
adc
xor
pushf
popa
cwtl
sbb
jnp
mov
cmp
enter
je
mov
jge
sbb
out
test
mov
mov
lahf
repz
sahf
jnp
jne
pop
adc
mov
and
mov
mov
sar
dec
lods
adc
ljmp
push
lea
fnstenv
xchg
push
ja
test
push
and
mov
add
add
push
jle
cld
scas
movsl
pop
sbb
insl
jne
mov
sarl
jae
and
mov
push
fdivp
pop
pop
int
jns
adcb
cmpsl
jmp
adc
and
cmp
sahf
sub
and
inc
cmp
xchg
fwait
insl
jno
fs
push
xor
xchg
in
xchg
arpl
subl
sub
mov
or
adc
and
ds
or
and
lock
dec
repz
or
mov
pop
dec
xor
shll
rcll
repz
cmp
das
mov
inc
repz
xor
mov
lea
sub
push
icebp
sub
sbb
cmpsb
repnz
jnp
xlat
das
enter
fstps
push
icebp
cmp
fucomip
enter
dec
xor
ret
xor
jg
fucomi
test
inc
xor
sahf
test
rcrb
push
popa
mov
mov
inc
enter
ja
inc
gs
popa
adc
outsl
shl
fmuls
add
aas
adcb
ja
cwtl
jns
sbb
xchg
stc
out
pop
das
xchg
movsb
push
pop
sbb
icebp
cs
jecxz
push
inc
ljmp
jb
js
push
aam
idivb
push
mov
lcall
push
mov
push
cmpsb
jge
mov
mov
faddl
stc
inc
add
outsl
mov
push
dec
in
inc
push
fidivrl
sahf
pop
into
xor
in
jg
std
es
xor
jmp
pop
cmp
in
sbb
pusha
mov
xor
sarb
std
mov
sbb
xchg
loop
jb
adc
mov
jp
repnz
sbb
push
pop
jge,pn
and
popa
jmp
bound
div
push
out
aam
fst
das
inc
imul
ss
dec
push
ret
xchg
test
push
xchg
mov
out
daa
out
inc
leave
leave
or
gs
loop
cmp
bound
fstl
pop
xchg
or
pop
inc
aas
fs
test
or
pop
or
mov
mov
cmpsl
and
fwait
fs
pop
cmp
nop
mov
or
dec
addb
popf
dec
cmp
repnz
les
xchg
ljmp
addr16
pop
cmp
cltd
mov
cltd
adc
test
inc
cli
add
pop
xor
fsubrl
in
push
stos
xor
mov
or
pop
mov
test
push
outsl
jb
jle
sub
mov
jg
mov
int
sub
jmp
iret
pop
add
scas
pop
in
xor
ljmp
mov
inc
pop
lods
nop
mov
cli
jecxz
ljmp
movsb
ficoms
pop
repz
in
addr16
mov
add
push
jno
subb
mov
and
sbb
rclb
add
xchg
aam
rcl
lock
dec
scas
xor
mov
cwtl
dec
mov
js
cmp
dec
ljmp
scas
mov
adc
into
shll
ds
mov
stc
aaa
xchg
scas
adc
fmulp
test
arpl
or
shr
clc
lahf
insl
rolb
insb
pop
arpl
movsl
push
jo
adc
push
pop
div
push
xor
addr16
repz
mov
push
xor
dec
sahf
lock
xor
and
mov
loopne
mov
test
mov
aas
in
sbb
inc
repnz
mov
mov
mov
jl
das
cmpsl
mov
add
add
cmp
fmuls
push
mov
mov
push
mov
lods
cmp
fcompl
js
push
stos
aas
mov
xor
pop
fsts
adc
xchg
pusha
sub
fisttpl
mov
icebp
sub
loop
das
cmp
sub
jl
cli
pop
icebp
shll
and
ds
insl
add
mov
daa
adc
jb
pushf
mov
mov
jp
inc
nop
sbb
push
je
or
push
add
and
adc
int
mov
popa
andb
mov
cld
dec
fldenv
mov
lcall
in
add
ljmp
popf
jl
add
push
add
aas
cmp
mov
sbb
jl
jge
mov
loop
je
mov
addb
leave
jno
in
ret
jp
pop
xchg
cmp
int
xchg
insb
adc
mov
loop
xchg
mov
lret
out
mov
dec
pop
cmc
push
add
int3
test
in
mov
incl
into
insb
jecxz
fidivrl
loop
rol
pop
xlat
sbb
mov
xchg
and
fsubrl
ds
je
xor
cmp
ja
in
cmp
movsb
ja
fstps
les
lret
bound
lret
fdivp
cmpsl
pop
push
ret
sub
dec
rorl
leave
xor
es
sarb
inc
dec
push
leave
jl
insl
mov
movsb
push
pop
mov
push
xorl
jno
imul
mov
aaa
jnp
lock
add
lahf
callw
fwait
inc
xlat
dec
sahf
subb
stos
sub
les
dec
or
es
jmp
lods
shlb
mov
mov
dec
in
rcll
repz
addr16
dec
mov
fsubrs
out
mov
aad
cld
test
pop
pop
movsl
hlt
or
push
rolb
ret
cmpsl
add
lret
les
ret
mov
dec
adc
jns
aaa
cmp
add
and
or
in
lea
sbb
jg
sub
jo
jecxz
push
mov
test
jecxz
gs
jge
add
cld
cmpsl
inc
sub
movsl
pop
or
cmp
push
xchg
inc
mov
add
loope
popl
jb
in
icebp
cli
add
dec
add
jne
xor
dec
push
aam
stc
push
cmpsb
jae
push
mov
scas
mov
and
mov
rclb
iret
jmp
pusha
in
insl
cmp
adc
and
mov
fcmovnb
cld
int3
pop
jmp
xchg
sbb
iret
add
xor
mov
fwait
ret
xor
and
adc
cmp
adc
icebp
or
fcomi
xor
stos
loop
sbb
mov
lcall
mov
inc
dec
hlt
push
pop
pop
push
mov
fadds
push
mov
fdivs
loop
sbb
and
in
sub
adc
repnz
test
xorl
cltd
int
xor
and
mov
pushf
stos
mov
outsb
or
lret
scas
ja
pop
cmp
jecxz
cld
ss
dec
test
sbb
pop
inc
mov
jnp
daa
xchg
cld
out
mov
je
notl
lcall
mov
mov
mov
mov
iret
loope
mov
mov
dec
es
rcrb
and
cmp
mov
mov
jae
adc
into
pop
dec
outsb
scas
mov
mov
inc
adcb
imul
jno
pushf
push
xchg
xor
sbb
sbb
push
orb
mov
mov
lret
jb
pop
enter
adcb
xor
xor
jge
jp
xchg
mov
mov
and
outsl
jns
pop
xchg
les
jg
lahf
and
dec
mov
cmc
jb
lock
or
lahf
jne
arpl
in
fisubrs
outsl
out
insl
in
push
sahf
out
mov
inc
loop
push
fisubl
adcl
rolb
addl
xchg
push
push
xchg
dec
mov
lds
aas
lret
adc
ljmp
xchg
imul
mov
int3
lock
push
jg
mov
in
jno
ja
cs
enter
or
add
mov
in
sar
out
xor
pop
mov
sbb
adc
addr16
out
jecxz
push
in
fcompl
push
add
lods
imul
push
mov
out
in
fcompl
fdivs
jbe
shll
mov
add
aam
mov
jmp
or
hlt
mov
enter
cmp
imul
or
sti
xchg
int
mov
or
mov
mov
ss
cmp
and
add
out
ror
add
xchg
mov
jge
cmpsb
call
mov
jb
cld
aas
enterw
dec
jb
add
xor
adc
in
push
adc
pop
fcomi
sti
out
adc
lods
scas
sub
jnp
fnstenv
clc
lahf
lds
push
repnz
pop
jecxz
and
sbbb
sub
add
sbb
xchg
cmp
btc
or
push
lret
push
cs
jecxz
inc
loop
and
push
out
movl
mov
movsb
loope
jl
fisttps
mov
js
dec
stos
stc
cwtl
xlat
xchg
cmpsb
jne
orl
dec
sti
popa
mov
or
jno
mov
xor
out
cltd
xchg
scas
rclb
in
loopne
push
xchg
sub
fs
lret
sbb
outsl
push
scas
and
push
outsl
lea
or
sarl
and
rclb
fs
loopne
inc
adc
popa
xor
or
jmp
cld
sbb
inc
jb
loop
and
xlat
push
mov
mov
xor
mov
or
sbb
cli
mov
push
je
out
je
or
out
bound
loope
test
inc
je
mov
ret
mov
jecxz
sbb
movsl
or
pop
inc
arpl
faddl
rcll
xchg
lret
gs
cmp
dec
mov
loopne
inc
test
push
scas
mov
xchg
jle
mov
pop
cmp
daa
mov
outsl
sahf
and
and
gs
out
jne
push
stos
data16
jne
clc
pop
imul
imul
xlat
push
popa
addr16
sbb
and
jo
xor
jle
leave
jb
cmp
and
aas
add
push
sub
jmp
sbb
push
pushf
adc
add
mov
sub
mov
out
sub
call
cmp
adc
jmp
jecxz
fadds
mov
push
mov
push
mov
jmp
cmp
xchg
xor
xchg
jbe
xor
ficompl
push
mov
je
addr16
out
ficomps
pop
roll
es
loop
inc
pop
js
outsb
daa
add
xchg
test
lret
repz
aam
or
in
push
inc
ret
jns
ss
mov
daa
push
in
fwait
iret
in
fcomps
xchg
pusha
add
xchg
punpckhdq
xchg
dec
cli
xor
cmp
mov
das
jnp
sbb
sbb
out
cmp
cwtl
cmp
popf
jl
xchg
mov
leave
lock
cmp
mov
in
movl
add
cli
inc
jns
out
sub
out
fwait
sti
push
fisubrs
ds
outsb
aad
mov
cmpb
sbbb
sub
pop
mov
mov
adc
cmp
xchg
push
cmp
mov
rolb
xor
lods
scas
aas
adc
and
inc
add
mov
in
scas
popf
cmc
gs
jae
mov
pop
mov
push
and
xchg
sar
fstp
pop
mov
xorb
mov
jmp
or
adcl
mov
cltd
stos
ljmp
arpl
xor
fistps
sarl
push
mov
inc
dec
ss
aam
cmp
aaa
mov
dec
dec
aam
pop
mov
enter
pop
inc
jle
mov
out
stos
mov
jne
iret
jb
push
xchg
pop
icebp
sbb
cmpsl
imull
sub
outsb
mov
adc
pop
outsl
xchg
stos
jo
pusha
rclb
cmc
push
add
pushf
ret
call
aad
push
daa
popa
repz
dec
les
idivl
xor
mov
cmpsl
xchg
lods
xor
aad
test
pop
jecxz
fstps
jg
enter
ja
inc
jne
jg
daa
mov
dec
cmp
fwait
cld
data16
dec
pop
jae
stos
xor
ror
dec
sbb
test
adc
dec
dec
aas
test
aam
out
xchg
ficompl
enter
and
nop
int
and
jmp
out
add
push
jl
hlt
lret
or
aas
iret
out
popf
and
addr16
cmp
jge
and
lds
cltd
bound
stos
cli
xorl
cwtl
mov
add
mov
pop
shll
in
xchg
xchg
pop
cmp
andb
aas
push
push
sbb
xchg
adcb
pshufw
cli
loope
or
push
mov
add
push
fdivl
lahf
jg
loop
sarl
xlat
pushf
std
xchg
jne
repnz
jno
cld
in
push
xchg
dec
popa
add
jo
arpl
adc
loopne
sbb
aaa
aam
or
rcl
daa
out
adc
iret
test
sub
lock
call
repz
or
cmpl
icebp
fstpt
pushf
mov
jecxz
and
cmp
pushl
mov
sbb
into
jl
fildl
imul
lea
or
xchg
and
jbe
fsubrs
xor
test
lret
push
sub
arpl
leave
ja
shll
ss
ret
mov
out
fwait
clc
in
sbb
inc
sti
clc
std
ffree
shll
fdivs
cmp
jb
jno
icebp
cwtl
jns
fisubs
push
fcomi
es
mov
sahf
jg
mov
dec
mov
decl
sub
test
inc
xor
loope
inc
add
jnp
xor
call
sub
and
rorl
xor
inc
call
jns
stos
jmp
mov
sub
in
arpl
lods
fldenv
mov
aas
pop
sbb
cmp
icebp
movsl
fdivrp
or
data16
rcr
mov
cmp
sbb
cmp
xor
test
push
pop
jmp
stos
fimuls
shll
cwtl
in
mov
jo
mov
xlat
pop
adc
cmpl
mov
jbe
pop
sti
test
mov
cli
out
pop
fidivs
xchg
int3
xchg
sbb
mov
jmp
xchg
mov
pop
xchg
sahf
jecxz
test
mov
movsb
sub
dec
repz
xchg
inc
adc
xchg
or
push
std
inc
push
and
inc
scas
loopne
icebp
fwait
js
xor
jmp
cmp
cltd
and
out
cmp
aaa
pop
jmp
cmp
mov
mov
scas
rcrl
mov
testb
pop
jnp
sbb
bound
fs
cmp
inc
and
frstor
mov
ja
sbb
pop
pop
lds
jae
add
movsb
mov
jbe
pop
mov
pop
bound
xor
xlat
cmp
push
mov
cmp
frstor
mov
mov
popf
add
int3
mov
movsl
pop
out
lret
shrl
repnz
out
xor
jle
jecxz
add
les
repnz
xchg
in
sti
or
test
jge
data16
or
mov
or
add
inc
js
stos
push
ret
fstpl
mov
cmc
mov
push
lcall
out
sti
daa
repz
pop
pop
lods
lock
jbe
into
mov
cmp
es
add
adc
fbstp
fwait
loopne
mov
idivb
out
sub
adc
fdivrl
divl
xor
pop
scas
test
addr16
imul
je
jl
inc
ds
cmp
add
xlat
std
fstpl
mov
sarb
jmp
mov
inc
mov
inc
mov
shrl
sbb
pop
int
inc
xorb
push
jmp
xor
ss
cmc
mov
cltd
leave
and
test
jbe
into
sub
adc
sub
loop
jg
mov
push
fidivs
xchg
dec
roll
jle
dec
mov
repz
or
and
scas
inc
fildl
cmc
jmp
dec
cli
insb
movsb
out
mov
dec
pop
in
xchg
mov
ja
pop
lcall
sbb
adc
out
inc
inc
stc
push
xor
push
sbb
daa
pop
mov
dec
add
pop
or
call
add
jg
xchg
xchg
push
or
lcall
in
push
int3
das
cmp
in
scas
mov
lahf
xor
fcmovbe
loopne
sti
outsl
imul
int3
mov
xor
xchg
cmc
mov
in
sub
out
inc
gs
or
movsb
mov
pusha
sub
mov
addr16
leave
aaa
push
inc
xchg
push
sbb
mov
mov
mov
xor
lods
push
add
mov
adc
lret
nop
in
pop
je
aaa
stc
push
or
xchg
filds
sub
mov
cmovg
xchg
lret
in
jecxz
inc
mov
inc
hlt
cmp
push
mov
divb
aaa
push
add
adc
mov
aaa
loop
in
out
cmp
insl
mov
xchg
loopne
int
data16
jnp
cmc
xchg
daa
cmc
xor
sub
hlt
arpl
shrl
mov
daa
data16
repnz
mov
and
popf
fnsave
fs
jnp
dec
dec
les
xchg
sbbl
push
rorl
jecxz
cmp
pusha
pop
sub
sbb
jns
cmp
adc
popa
xor
outsb
xor
push
frstor
xchg
lahf
cmc
push
pop
pushl
leave
pushf
sbb
cmp
xor
mov
adc
enter
hlt
negb
lret
lret
fdivrs
mov
mov
xor
or
outsl
jge
hlt
jb
dec
lds
sbb
adcl
inc
mov
insb
daa
in
adc
outsl
jp
add
add
pop
decb
je
stos
pop
movsb
mov
iret
lcall
xchg
out
loop
sbb
push
cmc
adc
xchg
popa
pop
or
push
lret
xabort
aam
aad
std
sahf
dec
push
mov
xlat
inc
out
inc
sahf
jno
pop
jns
or
jmp
stos
push
sti
fs
mov
pop
mov
jge
mov
fs
stc
mov
test
mov
call
scas
lods
lret
jecxz
xor
jmp
add
and
sahf
ds
mov
jne
stos
loope
dec
js
jp
mul
repz
sub
mov
add
sbb
test
mov
shll
mov
mov
xchg
push
inc
mov
add
in
mov
xlat
adc
mov
push
xor
outsl
lret
fiadds
insb
in
sub
xchg
popf
sbb
data16
jecxz
jge
ret
repnz
and
xor
mov
std
inc
gs
sbb
sbb
das
imull
mov
aas
push
cmp
mov
imul
adc
xlat
adc
lods
add
stos
insl
xchg
mov
out
mov
xchg
mov
repz
or
jge
lods
push
fsubrs
push
push
xor
pushf
jmp
lret
fs
in
cmpsb
outsb
scas
lret
shlb
jmp
cltd
pop
dec
xor
test
icebp
rcrb
xchg
lret
inc
sbbb
xchg
cmpsl
inc
pop
jl
mov
and
test
adc
dec
inc
fs
pop
gs
out
dec
sti
call
xor
andl
xchg
inc
jge
fwait
mov
popf
push
dec
mov
out
in
adc
mov
xor
aas
or
in
xchg
shll
add
sbb
sbb
in
add
fstl
imul
sbb
cmpsl
aad
iret
fcoms
scas
jnp
mov
push
addr16
bound
add
mov
push
inc
out
inc
rclb
les
mov
adc
add
repnz
mov
test
insb
cli
iret
jns
ljmp
stc
xchg
xchg
outsb
fnstcw
fxch
sbb
add
sub
pop
push
dec
mov
pop
int
lock
jne
or
sub
inc
cmp
jmp
das
mov
out
dec
test
and
xchg
add
flds
into
jae
and
loope
push
shll
inc
shr
mov
fcoms
loope
inc
pop
pop
sti
das
cmp
in
jbe
and
ljmp
pop
daa
loop
cmp
sbb
ljmp
and
inc
xchg
shrl
adc
mov
cmp
call
dec
cld
in
xor
lahf
mov
jmp
daa
push
fldenv
pop
and
add
fisttpl
mov
jnp,pt
cmp
ss
pop
and
test
jnp
lcall
jp
int3
aam
pushf
xchg
les
xchg
mov
or
test
xor
scas
push
add
outsl
or
cwtl
inc
repnz
push
scas
or
icebp
push
inc
add
push
in
outsb
and
pop
fsts
add
mov
insl
cmp
jmp
repnz
stos
fistpl
sbb
es
sub
sub
xor
jl
mov
orb
imul
in
sub
popa
mov
jb
shl
mov
jnp
js
mov
xor
aam
das
ret
test
add
js
jb
mov
mov
adc
test
inc
or
mov
hlt
pop
inc
into
cltd
popa
sbb
bound
pop
stos
jmp
inc
das
cmp
xor
jo
dec
addr16
es
aaa
and
into
cli
gs
or
test
inc
nop
xchg
shl
in
and
fcmove
jns
sub
int
mov
xchg
lret
and
enter
adc
mov
or
xchg
jo
iret
mov
sbb
dec
cltd
dec
lds
mov
movsl
clc
pusha
add
and
xor
dec
mov
pop
mov
cmp
gs
adc
pop
stos
out
insb
or
xchg
aaa
mov
test
clc
sbb
cld
mov
fimuls
dec
outsb
push
es
mov
cmpsb
cmpsl
sbb
andb
and
sti
lret
pop
and
push
xchg
and
pop
sbb
scas
sbb
gs
clc
push
cmp
stc
call
xor
lods
cld
sub
lea
mov
mov
in
dec
mov
push
mov
enter
mov
jne
or
pop
pop
mov
les
pop
mov
xor
pop
out
pop
in
outsb
xchg
pop
ret
mov
call
adc
mov
push
mov
in
in
les
lods
in
xchg
xchg
inc
mov
jb
repz
dec
cmp
ficompl
inc
inc
in
and
sti
mov
add
push
xchg
dec
or
loop
les
hlt
or
enter
ss
xor
lret
add
sti
ret
jmp
and
sub
mov
adc
mov
xor
nop
addr16
push
jno
pop
cmp
loop
mov
cmp
and
adc
push
mov
notb
sub
cwtl
push
or
cmp
xor
cmp
aas
fxch
pusha
sbb
sbb
adc
push
pop
divl
add
jge
jp
mov
sub
pop
or
pusha
insl
xchg
dec
lds
imul
ds
or
adc
sub
push
cmp
jne
xchg
or
pop
xor
jne
mov
push
mov
fisttps
subl
mov
mov
xchg
into
test
push
imul
imul
movsl
rcl
lods
jmp
popa
ficoml
dec
leave
rep
neg
mov
out
cmpsl
daa
mov
ret
xchg
arpl
scas
dec
popl
cs
ja
push
enter
ficompl
sbb
insl
add
xchg
cmp
and
sbb
xchg
pop
int3
sti
sub
or
outsb
dec
sbbb
and
std
movsl
hlt
stos
lcall
inc
das
stc
mov
cltd
push
rolb
arpl
aad
div
sti
sbb
xor
pop
nop
mov
fsubrs
scas
fistl
out
scas
xchg
sub
fimull
fs
out
cmpsb
mov
std
bound
lret
xor
adc
repz
mov
nop
cwtl
mov
mov
jecxz
data16
das
xchg
fwait
sbb
pusha
dec
cmpsl
dec
scas
or
icebp
mov
js
pusha
cwtl
dec
adc
insb
ret
bound
inc
xchg
dec
xor
lsl
pop
pop
sbb
sub
sbb
in
or
jno
or
shll
and
inc
in
mov
lcall
iret
xchg
push
lret
jl
mov
clc
push
add
je
cli
out
sub
aaa
aam
pusha
inc
data16
fldl
mov
pop
adc
xchg
inc
popa
negb
jae
jbe
lock
push
stos
hlt
cmp
outsb
sub
and
cmpsl
imul
int3
sbb
insb
outsb
pushf
int
inc
popa
dec
and
cmp
pop
aaa
adc
sahf
rcl
in
into
adc
lods
mov
push
xor
or
mov
enter
pop
xchg
outsb
ja
lahf
insb
decb
push
mov
push
pushf
sub
fmul
add
in
not
sbb
lea
pusha
adc
rorb
sahf
lcall
xchg
js
push
mov
out
fsts
shlb
aad
mov
push
pop
outsb
xchg
xchg
or
scas
or
xor
pop
stos
fimull
xchg
cmp
mov
xchg
push
jb
repz
push
push
sub
pusha
pop
in
or
xchg
pushf
fsubrl
vpmulhuw
jno
lods
in
mov
xchg
clc
int3
jecxz
shrb
fs
jnp
pop
pop
out
push
lret
push
out
add
aas
or
clc
and
mov
clc
mov
mov
out
sub
add
aad
insb
dec
imul
js
xchg
popa
dec
test
mov
int
arpl
cmp
lods
push
shlb
stos
cs
fwait
push
sub
xor
scas
pop
add
pop
jo
jns
push
ds
insb
pop
pusha
adc
call
bound
icebp
pop
gs
testb
test
fnstcw
jmp
mul
and
rorb
mov
insl
std
in
sbb
mov
es
mov
incb
sahf
push
scas
into
push
movb
push
test
sbb
inc
adc
negb
push
idivl
add
mov
pop
test
xchg
jl
inc
jle
sub
push
pop
push
cmp
mov
pop
cmp
or
jg
pop
sub
xchg
dec
mov
shl
stc
stc
js
sti
adc
xchg
cmp
sti
cmp
repnz
pushf
out
sub
pop
jp
cmpl
sbb
movsl
push
xorl
dec
rcrl
and
gs
outsl
xchg
lret
cmpsl
mov
fbstp
xor
shl
sbb
cmc
pop
dec
enter
sub
mov
jp
sub
testl
in
mov
bound
sub
add
pop
pop
icebp
push
es
sbb
and
dec
test
iret
bound
rcrl
mov
mov
adc
data16
in
sahf
or
push
loop
pop
cs
xchg
mov
shll
subb
push
mov
push
and
into
lods
aam
push
xor
mov
lret
stos
rcrb
jecxz
pop
push
jge
add
mov
jl
xor
jp
sbb
xor
repz
daa
aam
frstor
mov
dec
inc
daa
xor
out
xchg
push
mov
mov
cltd
in
fisttpll
ds
hlt
hlt
fs
mov
loop
aam
pop
mov
mov
fwait
sbb
xchg
push
push
out
mov
sbb
adc
fst
inc
mov
loop
mov
popa
loopne
dec
jno
push
jns
add
lds
mov
mov
or
outsl
cmp
xor
test
add
dec
cli
imull
inc
in
cli
push
insb
dec
and
push
push
std
sub
ficompl
xchg
mov
push
jne
pop
lcall
lods
sbb
push
outsl
inc
divb
dec
or
cmp
sbb
inc
std
push
jg
call
sarl
mov
rcl
in
mov
push
in
pop
js
loopne
lock
jns
push
sub
xchg
js
adc
cwtl
push
jnp
xorl
out
ret
sub
push
mov
jp
bound
frstor
movsl
jb
push
cmpsb
mull
scas
shlb
stc
out
cmp
push
push
insb
fldl2t
stos
cs
add
jnp
mov
aaa
xlat
sti
enter
mov
mov
xchg
leave
inc
ret
inc
mov
inc
dec
and
xor
fcoml
xchg
ja
push
dec
jne
jns
movsl
addr16
pop
pop
and
rclb
mov
movsb
or
xor
subb
and
xchg
mov
sub
ja
aaa
sub
push
jno
push
iret
cmp
aam
je
shll
sub
push
outsb
popf
sbb
repz
sahf
sahf
sub
cs
xor
push
jg
jg
inc
shll
cmpsb
pop
mov
push
enter
mov
or
hlt
mov
push
fwait
stos
cmpsl
test
sarl
and
adc
sub
mov
xchg
lcall
xchg
push
shll
mov
jno
cmp
mov
mov
paddusb
xor
aam
adc
xor
pop
adc
jb
in
scas
jp
pusha
data16
into
stos
mov
and
mov
adc
jg
mov
pop
add
pop
adc
add
mov
adc
aas
mov
jg
cmp
std
lock
xlat
inc
enter
cmovg
outsl
enter
mov
lock
cmpsb
popf
repz
dec
popa
stos
push
loop
add
outsl
loop
sbb
out
sbb
or
xor
lret
sub
sub
test
inc
push
and
mov
notl
nop
push
ret
popf
mov
dec
mov
in
fimuls
pop
cs
or
jmp
fwait
sub
fdivrl
cmp
adc
cmp
mov
jmp
push
xor
jns
repz
push
lret
jle
out
fisubs
push
mov
icebp
xchg
push
add
int
ljmp
out
xchg
aaa
mov
cmp
cli
add
daa
jae
mov
insb
shrb
mov
mov
push
sarl
cmp
or
push
insl
sbb
xor
ds
jo
pusha
xlat
mov
xchg
mov
xchg
lcall
ss
fistps
push
jecxz
jne
push
mov
pop
add
inc
lods
movsb
jbe
jge
ret
adc
jp
cmpb
mov
inc
cmpsl
jge
jle
xchg
lods
incl
loop
movsb
sbb
xchg
fdivrs
xor
lock
stc
jno
popl
or
mov
sub
add
jp
sub
out
lcall
jecxz
jmp
mov
clc
sub
repz
push
daa
push
sbb
adc
xchg
adc
lods
lcall
incl
hlt
fs
out
pusha
icebp
add
inc
xchg
sbb
popa
dec
push
sub
arpl
jbe
fisubl
jmp
mov
mov
mov
mov
outsl
push
mov
icebp
mov
lea
adc
fwait
mov
sahf
dec
repz
fimull
lock
push
in
jno
out
dec
cmp
add
repz
jge
jecxz
adc
das
aad
notb
cmp
or
test
xchg
dec
inc
inc
rclb
imul
pushf
pop
cmpl
fcmovb
test
cmp
ficompl
xor
fcom
adc
jbe
mov
and
stc
xor
addr16
pop
jae
xor
cwtl
jns
out
sbb
ret
dec
mov
push
jo
sub
icebp
ror
mov
testl
fdivl
push
sbb
shl
data16
cli
leave
push
jle
inc
imul
xor
mov
sub
fidivl
and
sub
mov
jg
lock
mov
out
push
mov
xchg
cmp
pop
out
pop
test
stos
fsubrp
enter
rcrb
lret
mov
mov
inc
or
enter
sbb
fcmovb
adcl
inc
out
push
inc
ljmp
popa
dec
mov
rcrb
jp
pop
xchg
mov
jbe
std
xchg
xor
sti
popl
sarl
insl
inc
mov
xchg
push
daa
nop
xlat
rorl
jge
mov
scas
mov
fmul
push
cmc
in
shrb
sbb
jbe
jns
lds
mov
dec
inc
fiaddl
fwait
negl
shlb
push
lahf
rol
add
or
repnz
gs
add
mov
mov
mov
out
aaa
xor
pop
mov
dec
cli
pop
cmovb
notl
lret
fdivs
xchg
add
adc
push
xchg
cltd
imul
sbb
movsl
sub
xchg
decb
lods
and
xlat
fdivl
push
and
dec
pop
mov
out
jge
ja
push
push
and
sbb
sbb
out
jnp
clc
into
outsl
dec
sub
sub
pop
cmpsl
inc
test
and
cltd
out
pop
cli
push
stos
adc
xchg
ds
jg
mov
cmp
insl
inc
fcmovb
jae
mov
push
outsl
mov
scas
jle
xor
or
daa
xchg
jl
loop
pop
icebp
lret
ret
test
faddl
xor
and
in
xchg
sub
sub
dec
pop
in
adc
adc
cld
js
mov
lods
adc
adc
addr16
addb
pop
aaa
mov
adc
fwait
adc
imul
cmpb
pusha
ds
mov
xor
push
push
es
mov
movsl
addb
sbb
rcrb
cmp
frstor
aas
imul
inc
mov
sbb
fistl
sbb
popf
arpl
add
mov
stc
xor
pop
lret
stos
dec
push
push
mov
data16
xchg
fistps
sbb
sbb
mov
push
lock
inc
inc
xchg
adcl
cli
xchg
push
sub
dec
mov
xchg
cmc
push
add
xor
mov
jnp
sbb
mov
insb
xchg
sarl
xchg
movsl
xor
inc
inc
mov
dec
pop
sub
cltd
cmp
or
enter
push
dec
addl
cmp
loope
sub
mov
test
out
or
mov
or
mov
aaa
hlt
sub
ret
xchg
out
out
inc
fs
xchg
sub
adc
movl
in
dec
into
xchg
ret
movsb
imulb
and
mov
movsb
and
test
or
es
dec
scas
pop
xor
out
mov
jnp
data16
mov
push
cmp
dec
add
or
outsb
push
lea
ljmp
add
fldenv
cmp
jne
lret
ss
jo
out
cmp
push
fsubs
divl
pop
xchg
xor
mov
mov
sahf
scas
insl
inc
sub
xchg
jp
es
add
cmp
sbb
mov
mov
aas
in
sbb
ss
mov
jmp
xchg
inc
jge
outsl
xchg
mov
mov
into
ljmp
cmc
mov
fs
arpl
and
dec
adc
into
cmpsb
xor
lds
mov
test
pushf
cs
shll
adc
ret
aas
adcb
arpl
mov
mov
jnp
jae
sarl
cmpsb
out
ljmp
test
ficompl
jg
push
and
jno
inc
lock
dec
jne
into
popf
lods
xor
mov
push
jp
cmp
lahf
dec
lds
xchg
out
iret
out
mov
xchg
sahf
in
out
out
mov
das
pushf
add
mov
data16
jnp
scas
shlb
cmp
cmp
jb
xor
sub
aaa
notl
inc
popa
and
jbe
xor
call
notb
cmp
insl
lret
dec
movsl
dec
dec
xchg
nop
stos
cmp
ret
mov
xor
mov
in
adc
xchg
popa
clc
cmpsb
mov
dec
lret
mov
js
popa
jp
out
fimuls
push
in
xchg
inc
enter
aaa
mov
fdivrl
mov
popa
fisubrl
in
shrb
mov
push
push
jnp
fwait
mov
sub
fdivs
out
loopne
inc
mov
sahf
inc
scas
push
call
repnz
push
les
and
shlb
xchg
push
lret
xchg
cmp
call
fsubp
sub
sub
mov
jmp
inc
lods
clc
xor
out
int3
icebp
fisttps
fcomps
mov
pushf
sub
jl
loope
icebp
outsl
push
and
mov
icebp
or
cmp
jp
xor
inc
addr16
and
ret
lods
push
outsl
sbb
das
cmp
cwtl
and
inc
pop
lea
push
roll
fcom
les
testb
jns
imul
sti
jg
bound
push
xchg
add
dec
pop
add
aaa
mov
mov
mov
lcall
lock
xchg
pop
insb
cmp
mov
mov
lds
stos
lret
mov
adc
or
push
cmc
rorl
inc
adc
js
add
add
bound
sbb
and
jbe
xchg
inc
add
fstpl
cmp
ficomps
mov
fs
pusha
add
inc
leave
add
sbb
mov
dec
xor
add
pushf
xlat
mov
ds
pop
dec
cmp
cmp
int
sub
cmp
mov
mov
int3
hlt
fs
and
shl
scas
ret
out
loope
cwtl
push
shll
repz
decl
lods
push
mov
gs
ja
iret
mov
mov
enter
jo
mov
push
push
jb
pop
sbb
push
scas
leave
fimuls
mov
insb
in
jg
add
mov
adc
mov
out
mov
xor
cs
mov
bnd
push
jmp
aaa
scas
dec
xor
mov
xchg
popf
jg
arpl
repnz
jmp
aaa
divb
lea
daa
jns
out
mov
pushf
stc
and
jnp
push
mov
xchg
pop
push
fs
fcmovne
fadd
mov
aad
addr16
inc
mov
mov
pushf
push
leave
sub
cli
dec
or
fisubrl
dec
and
fcoms
out
pushf
in
xchg
inc
inc
ret
ja
push
cltd
dec
mov
sub
enter
sbb
xor
adc
mov
daa
imul
and
loope
xor
mov
and
outsb
mov
rcll
in
movsl
inc
pop
xchg
ret
icebp
jo
jp
mov
mov
mov
adcl
popf
mov
scas
sahf
aas
or
icebp
inc
imul
insb
push
mov
jecxz
xor
xor
mov
lds
rcl
cmpsb
inc
ss
cmp
enter
repnz
fiadds
aaa
mov
push
or
jecxz
das
mov
pop
or
adc
and
ficompl
pop
push
in
xchg
jg
ftst
fldt
out
or
rcr
in
adc
cmpb
xchg
rdpmc
test
xorl
pop
cld
jmp
imul
push
pop
jg
jl
jp
jb,pt
mov
inc
insl
out
andl
leave
aad
add
and
cli
jae
rclb
or
push
jmp
and
pop
xor
xchg
icebp
mov
sbb
pop
inc
push
pop
xor
loopne
push
lret
add
repz
stos
cmp
pop
inc
add
xlat
movsl
sbbl
stos
lret
lods
wbinvd
mov
and
mov
ret
pop
dec
inc
pop
lcall
rcll
xor
dec
movsb
mov
in
mov
test
rcrb
leave
jne
mov
imul
ss
scas
xor
mov
rcl
xor
out
jmp
jg
ss
out
test
ret
add
in
ss
cmp
ffreep
lea
mov
jno
sub
insb
sbb
adc
gs
inc
out
jg
cmp
mov
subb
pop
lret
push
jbe
xchg
ja
push
xchg
mov
pop
aam
dec
fisubl
imul
filds
inc
in
jnp
outsb
test
push
mul
repz
repz
push
mov
lods
les
sarb
push
cltd
aam
imul
test
add
or
push
sub
mov
xor
mov
cmp
lcall
inc
ljmp
arpl
out
push
push
dec
jp
sub
pop
out
xchg
jo
xchg
inc
mov
inc
aam
addb
fcompl
jmp
ja
xchg
pop
cmpsb
loopne
repz
jno
in
cmp
cmp
jmp
mov
jmp
in
jae
das
das
arpl
pop
movsb
xor
xchg
mov
mov
cmp
pop
sarl
test
push
les
test
cmp
pop
pop
mov
add
lock
and
add
insl
incl
and
lea
iret
addr16
sub
loop
lods
push
push
add
sub
fldcw
mov
pop
mov
cmpsb
jne
andl
loopne
imul
and
cmp
sub
imull
loope
cld
push
mov
and
push
fdivs
lock
shll
jns
pop
sbb
adc
movsb
add
aad
lret
sbb
scas
ret
pop
push
or
aam
test
mov
xchg
cltd
fcomps
lock
imul
sub
add
bound
hlt
xor
xchg
int3
test
movsl
loop
fwait
sub
sahf
mov
outsl
push
les
filds
mov
cmp
mov
stos
and
es
jno
and
inc
xorl
out
jmp
in
mov
shr
or
in
or
in
test
xor
enter
not
xlat
cli
mov
test
leave
push
xor
loop
cld
std
adc
cmp
shlb
xchg
dec
adc
lret
ja
lock
mov
pop
aad
pop
pop
addr16
fadd
jae
jne
mov
pop
mov
sahf
div
push
xchg
xor
xor
xchg
rorb
sub
xchg
mov
lret
outsb
cmp
int
mov
xor
xchg
cmp
movsb
xchg
pushf
rcl
lret
jo
mov
loopne
mov
xchg
jle
movsl
lahf
mov
xchg
jae
divb
mov
xchg
les
and
pop
cmc
xchg
shll
pushf
and
movsl
loope
xchg
scas
pop
lock
es
push
test
pop
loopne
int3
and
lea
ljmp
add
push
in
sbb
adc
lea
ss
mov
lea
xor
or
pusha
ret
adc
mov
into
sub
pop
and
adc
inc
fistl
aas
inc
in
or
cltd
xchg
cwtl
mov
mov
pop
pop
insl
sbb
mov
cltd
xchg
es
pop
ret
add
adc
mov
push
inc
dec
leave
mov
dec
rorl
sbb
inc
cmpsl
inc
mov
movsl
movsl
and
xchg
inc
mov
aad
inc
fwait
inc
inc
mov
test
out
dec
scas
pop
sub
adc
fsts
push
lcall
in
out
and
cli
mov
stos
cmp
mov
sub
push
sbb
fs
scas
dec
pop
pop
cmp
mov
and
fwait
jno
data16
subb
loop
mov
call
cmpsl
rcrl
int
inc
or
xor
inc
aas
jno
outsl
mov
arpl
in
sub
loopne
es
mov
inc
inc
cmpsl
add
mov
and
fildll
adc
add
cltd
or
pop
cwtl
clc
test
xchg
mov
pop
sbb
jb
inc
repnz
lea
cli
in
inc
repnz
cmp
sahf
icebp
mov
addb
mov
js
cwtl
insb
insl
test
jae
insl
or
sub
add
jb
push
adc
jne
imul
or
in
fwait
lea
push
bnd
mov
imul
mov
in
insb
lret
test
xor
pop
je
adc
ds
loope
mov
and
mov
mov
hlt
int3
cmp
dec
ljmp
push
leave
adc
add
sbb
mov
inc
fucom
jbe
sbb
mov
lret
test
adc
ret
shlb
mov
fidivs
out
mov
sahf
add
test
out
sub
fsubrp
movsb
inc
test
adc
jmp
or
cmpsl
pop
in
and
in
fcmovnbe
andb
imul
cwtl
sub
push
dec
xchg
adc
xlat
inc
mov
testl
fnstenv
movb
adc
repnz
inc
inc
testl
sbb
jno
scas
cmp
mov
cli
fidivrl
fs
mov
cmp
adc
sub
pop
ljmp
dec
imul
and
dec
push
jle
ja
sub
mov
and
scas
sub
in
dec
dec
add
mov
dec
push
mov
jl
loop
enter
push
addb
filds
popf
js
ss
adc
and
or
iret
leave
mov
and
push
inc
pop
cmp
imulb
and
pop
jb
ret
sbb
out
add
std
in
jp
mov
mov
sub
adc
in
and
inc
mov
cmp
repz
movsl
and
sbb
je
or
inc
arpl
movsl
rcrb
cli
xchg
popa
out
push
imul
dec
out
es
or
ds
imul
xchg
loope
cs
fsubl
adc
ds
pop
fidivrl
xchg
sub
int3
pop
sbb
pop
icebp
or
xor
cmp
test
loopne
mov
dec
stc
incb
push
jbe
lea
jo
out
rcrb
cmp
rcrl
mov
ja
pusha
xor
pop
jo
sbb
out
and
dec
mov
shl
push
arpl
mov
mulb
mov
outsl
lcall
jl
pop
cmp
fidivrl
imul
push
cmpsb
aaa
in
xchg
scas
mov
inc
nop
jnp
xchg
loope
xchg
xchg
sar
hlt
icebp
or
push
jae
iret
adc
arpl
popa
aas
adc
inc
mov
loop
leave
jmp
cmpsl
sub
push
lea
in
imul
imul
iret
in
push
xchg
lods
repz
inc
test
aam
fnstcw
lods
jp
lods
jecxz
addl
pop
push
jne
xor
xorb
ds
push
add
nop
out
stos
scas
push
int3
xchg
sbb
mov
and
mov
pop
out
movsb
cs
push
andl
lret
scas
or
leave
add
mov
add
cmpsb
hlt
pop
push
and
pop
and
cmc
add
test
repz
dec
fcomps
xchg
inc
xor
cmpb
andb
push
sub
cmp
out
sbb
and
cld
inc
mov
sbb
stc
push
into
stc
dec
and
sub
out
push
mov
test
xchg
inc
xchg
or
leave
fidivs
jle
xchg
ds
repnz
xlat
cmp
xchg
inc
and
cmc
scas
or
mov
inc
sub
xor
adc
jo
add
in
sbb
fmull
lret
test
addr16
jne
in
mov
sbb
pop
add
rolb
push
ffree
fmuls
negb
xchg
inc
aas
mov
push
add
ret
repz
pop
js
push
or
imul
scas
cmc
pop
iret
pop
mov
into
ljmp
add
popa
jecxz
in
cli
or
lds
mov
repz
jle
mov
lds
test
and
mov
xchg
pop
fdivl
inc
sub
add
sarb
sahf
lds
addb
arpl
inc
js
pop
pop
sti
push
stc
xchg
pop
dec
add
fs
jmp
inc
xor
xchg
pop
pop
pop
inc
add
xchg
and
cmpb
xorl
xchg
loope
pop
inc
shrl
cmpsb
mov
lock
xchg
xchg
ja
adc
and
outsl
sahf
or
push
xchg
std
mov
and
icebp
xchg
xlat
bts
ret
mov
dec
ret
out
xchg
mov
xor
lcall
mov
and
je
mov
dec
and
jl
addl
push
push
mov
mov
in
jo
loopne
cmp
sti
adc
in
je
and
push
add
push
sub
cmp
mov
aam
nop
push
iret
dec
pop
sub
js
shlb
xchg
mov
sbb
pop
or
sbb
xor
sbb
push
js
out
xor
mov
test
cmp
jmp
je
fcom
insl
insb
cmp
roll
int
fcmovu
push
push
fcomi
cmp
xchg
decl
add
jns
scas
xor
jns
cltd
aad
sub
inc
add
or
mov
xor
mov
add
out
int
pop
ret
or
je
jno
push
das
test
mov
add
and
xchg
pop
mov
andb
and
mov
xor
sub
pop
icebp
or
lcall
out
scas
addr16
xlat
repnz
mov
lcall
aad
pop
je
lods
jle
shr
lock
and
into
mov
ja
loopne
stc
sbb
and
clc
lods
rolb
fisttps
aam
aam
and
or
xchg
xchg
add
jecxz
ljmp
or
jmp
std
push
mov
mov
subb
int
fmul
popf
or
cmp
jne
je
ret
lret
popf
sbb
mov
call
hlt
cli
pushw
lds
mov
mov
out
pop
push
mov
xor
jno
fldl
jne
into
lea
stos
sub
ret
inc
xor
jae
adc
fucom
xlat
push
pushf
dec
mov
call
and
fsubr
pop
push
lret
pop
sub
lods
jp
xchg
adc
sub
fildll
or
les
mov
lahf
xlat
cmp
std
lods
push
sahf
pushf
scas
xor
dec
cmp
push
sbb
xor
test
jmp
in
mov
loop
test
lahf
int
inc
sub
jmp
stos
mov
push
sbb
sub
dec
sbb
fidivl
fs
pop
jg
hlt
jge
mov
scas
cmp
clc
pop
iret
mov
adc
pop
lds
roll
lcall
push
out
adc
push
gs
dec
pop
in
scas
int
mov
fwait
and
push
bound
lahf
xlat
imul
push
imul
imul
xchg
addr16
fcoml
jo
sub
fdecstp
add
gs
iret
pop
arpl
or
shlb
inc
in
cs
mov
jp
popa
dec
insb
fisttps
jmp
daa
gs
ds
xor
test
cmp
test
sub
sbb
mov
and
bnd
xchg
mov
pop
aaa
xchg
sbb
pop
cmc
lret
sbb
clc
loope
or
sbb
adc
mov
mov
cli
loop
jns
pop
out
xchg
xchg
dec
sub
mov
xchg
xor
xor
pop
test
adc
testb
cmp
jns
mov
and
xchg
mov
sbb
scas
ljmp
icebp
scas
add
push
and
into
mov
sbb
ret
scas
pop
xchg
test
add
jl
loopne
add
dec
dec
jbe
adcb
xchg
jo
cmpsb
inc
push
jo
nop
dec
test
xchg
ror
insb
icebp
jb
mov
add
daa
addl
push
fisubrl
stc
mov
aas
cmpsb
sub
ficompl
mov
mov
cltd
andb
and
stos
lea
rclb
leave
and
mov
mov
push
push
cli
mov
ffree
popa
filds
mov
push
cmpb
mov
add
aaa
int
pop
pushf
dec
gs
aam
fnstsw
in
popa
stos
jg
adc
cmp
cmpsl
les
mov
ljmp
movsl
jns
inc
repz
add
pop
sbb
in
dec
jecxz
lret
mov
dec
cs
inc
in
icebp
or
out
fidivrs
inc
or
sub
xor
pop
decb
fidivrl
add
add
adc
jno
hlt
jns
and
mov
sbb
push
mov
mov
rcrb
or
sbb
xlat
loop
lahf
cli
mov
jp
pop
adc
dec
push
adc
jo
out
push
push
inc
in
scas
inc
sbb
cli
cmp
dec
in
sbb
dec
lcall
cmc
lea
repnz
cli
or
pop
or
lret
test
pop
dec
mov
or
ret
ret
cltd
movsb
and
mov
push
shlb
pop
pop
add
arpl
xchg
cmp
pop
mov
stos
sbb
xor
jno
shl
adc
test
and
mov
push
push
xchg
leave
pop
push
push
pop
filds
roll
ret
leave
jp
enter
mov
mov
mov
lock
sub
jnp
xchg
arpl
je
push
mov
cld
loop
pop
rcll
inc
mov
jbe
cmp
mov
hlt
stc
mov
aad
push
add
mov
adc
pop
insl
addb
xlat
dec
xorl
mov
push
jl
ja
add
sub
lds
movsb
test
adc
stos
xchg
pusha
dec
adc
push
mov
push
ja
insb
dec
ja
or
pop
int3
mov
mov
sbb
dec
jmp
push
sbb
pop
pop
fsubs
aas
inc
sub
dec
xchg
dec
mov
push
rorb
sti
sbb
sbb
subb
xchg
push
and
in
inc
add
js
sub
and
fwait
or
sbb
aaa
lret
cmc
lret
xlat
push
imul
mov
pop
dec
sbb
int3
dec
loope
dec
outsw
jl
and
fidivrs
lahf
jg
or
and
icebp
inc
pop
imul
icebp
mov
lret
sti
test
pusha
int3
addb
loope
mov
and
imul
xchg
jbe
fidivs
xorb
in
pop
std
stos
add
cmpsl
adc
lret
rolb
push
stos
mov
out
add
das
cmp
inc
xor
insl
movsb
pop
mov
loope
in
dec
and
lahf
roll
les
rcl
mov
fldenv
inc
jns
sti
mov
fbstp
fwait
lods
repnz
cmp
sub
scas
orb
fst
adc
adc
ljmp
xchg
jle
sahf
pop
test
add
cld
push
xor
pop
inc
iret
lret
mov
xor
cmc
jl
push
add
les
mov
jg
mov
sahf
sti
pop
xchg
dec
add
cmp
fstp
in
inc
cmpsb
adc
sbb
dec
lods
push
ret
je
gs
fwait
dec
lock
push
push
repnz
mul
daa
int3
sub
xlat
out
inc
mov
stc
clc
add
call
and
rclb
push
xchg
int
xchg
add
mov
inc
mov
out
test
scas
out
ds
jge
scas
lods
push
enter
lcall
jne
inc
mov
or
mov
es
and
push
jge
out
fldenv
data16
fdivrs
sub
mov
repz
lahf
lret
arpl
adc
cmp
mov
xor
push
xchg
xor
hlt
negb
test
out
leave
sahf
or
cltd
stc
stos
jl
push
push
xchg
rolb
pusha
test
fsubrl
jnp
push
into
fucomp
fstl
mov
idivb
and
loopne
outsb
and
test
push
enter
aaa
xchg
or
jns
mov
sub
shll
jecxz
push
sub
mov
aas
scas
outsb
dec
mov
pop
fldcw
or
jnp
data16
push
repz
push
inc
pusha
push
cmp
rolb
sub
push
dec
xchg
loope
inc
and
in
jns
mov
mov
lret
add
mov
shl
aad
mov
insb
sub
nop
mov
add
xor
xor
enter
mov
ret
cmpsb
add
fbstp
cmp
jge
xchg
pusha
es
jo
icebp
rcl
ljmp
xor
lahf
mov
adc
clc
xchg
sbb
xor
test
xchg
into
in
incl
push
pop
pop
jl
test
stos
loope
lea
xchg
sbb
rolb
jmp
cltd
pop
jecxz
cwtl
lahf
inc
fs
adc
mov
xor
xor
xchg
mov
adc
or
stos
dec
mov
xchg
insb
and
mov
pusha
inc
jge
jl
jp
mov
mov
stos
cmpsb
js
and
in
dec
adc
pop
std
enter
adc
adc
outsb
sbb
dec
imul
mov
cmc
push
xchg
scas
repz
adc
fldpi
out
add
inc
push
mov
mov
pop
orps
mov
int
mov
inc
mov
mov
xchg
dec
mov
inc
push
mov
add
or
or
orb
fdivs
and
jg
dec
pop
mov
leave
jmp
or
aad
inc
cmpl
push
inc
popa
out
fisttps
pop
out
lock
test
push
vmread
push
push
test
stos
mov
xchg
jno
xchg
push
rcrb
f2xm1
xor
add
inc
pushf
int3
mull
dec
mov
scas
ds
adcb
lahf
dec
inc
mov
rsm
pop
add
mov
inc
inc
jno
jp
mov
push
je
imul
push
cmove
jmp
mov
or
lds
stos
jmp
inc
shr
cld
into
sub
ret
jbe
shll
fs
inc
clc
xchg
lods
jecxz
int
inc
push
data16
int3
mov
insl
gs
sub
icebp
inc
decb
cmpb
mov
mov
test
xchg
pop
incb
sbb
nop
xor
shlb
sbb
mov
js
push
mov
and
xorb
mov
sub
imul
jge
nop
dec
inc
out
test
aad
inc
sub
out
into
mov
enter
and
inc
mov
fs
pop
mov
dec
jo
inc
ss
push
jbe
adc
xchg
lods
fisttpl
jge
stos
test
xor
fmul
inc
les
and
push
adc
cmc
sahf
movsl
sub
jmp
scas
or
outsb
cltd
xchg
push
xor
mov
add
jp
pop
fs
add
rcrl
shl
lods
or
lcall
push
clc
and
dec
jp
push
ljmp
scas
jno
mov
add
in
push
adc
das
mov
cmpsl
stos
outsl
call
push
outsb
fists
mov
xchg
fcmovne
pushaw
pop
pop
inc
xchg
repz
push
or
ljmp
adc
inc
xchg
je
ret
repnz
es
inc
ret
ret
xor
adc
mov
lahf
add
add
and
nop
xor
jle
stos
dec
rcl
test
gs
addl
aas
mov
sub
sahf
sti
pop
xchg
pop
xor
inc
push
sahf
in
xor
mov
sub
sub
cmp
cld
mov
into
xor
sub
aam
cli
mov
shr
sub
outsb
in
loop
lret
inc
fdivrs
movsl
imull
xchg
repz
xchg
xor
daa
test
xchg
dec
jb
pop
add
mov
sub
jae
adc
jl
je
and
jo
movsl
inc
and
mov
or
push
pop
clc
adc
cmpsl
and
sbb
lahf
sbb
mov
int
mov
stc
jmp
xchg
sub
inc
xchg
rolb
pop
push
int
mov
out
and
dec
adc
repnz
bound
mov
jb
cmp
mov
das
xchg
pop
adc
mov
adc
xchg
std
popa
adc
mov
repnz
jl
imul
shll
movsl
lea
push
mov
push
mov
in
out
push
rcr
mov
iret
fwait
push
cmp
xor
sub
pushf
leave
push
xor
and
xor
fs
inc
inc
call
call
outsl
iret
dec
sub
xchg
xchg
add
in
and
icebp
xchg
jb
dec
cvtpi2ps
mov
int3
mov
lahf
cmp
addr16
pop
fisubrs
mov
dec
mov
add
std
cli
and
jo
sub
push
xor
mov
scas
enter
pop
aam
pop
stos
jo
lods
jae
sub
cmp
pop
mov
push
jbe
and
pop
adc
push
out
lret
xchg
jg
lcall
or
push
mov
pop
xor
nop
jecxz
ljmp
in
xchg
imul
jl
xchg
cmp
pop
add
das
xchg
fimuls
jl
aas
add
insl
sub
jb
mov
push
roll
mov
jnp
cmp
sub
je
mov
imulb
in
cli
icebp
cmc
mov
inc
xchg
jmp
test
sub
sub
pop
and
lea
subl
dec
out
xchg
jno
jp
shlb
jnp
ds
in
xchg
and
pop
call
adc
cli
adc
stos
push
rorl
mov
outsb
aam
and
sub
push
outsb
js
repz
or
cltd
dec
xor
cld
jae
inc
lret
leave
mov
mov
test
push
iret
dec
fs
out
inc
dec
ds
shrl
add
js
insb
jo
stos
test
ficompl
jge
ss
push
clc
sbb
mov
mov
mov
es
jmp
scas
jae
jnp
js
out
rcll
enter
or
jmp
lcall
push
xchg
mov
jne
clc
cs
out
int3
xchg
cmp
imul
sbb
pusha
shl
sub
lret
xchg
push
mov
test
in
or
mov
scas
test
scas
dec
push
pop
fldenv
loope
dec
push
outsl
sub
incl
dec
add
add
pop
scas
mov
je
shll
mov
clc
add
cli
lods
call
jmp
pop
xor
xor
xor
shr
data16
mov
sbb
xchg
cmp
int
popf
cli
xor
push
adc
pop
fdivl
xor
add
int
push
dec
ja
mov
repz
inc
imulb
xor
dec
inc
mov
dec
test
sub
jno
fstl
xchg
xor
iret
jge
lcall
fidivrs
mov
mov
mull
movsl
xchg
lcall
jne
icebp
jmp
sub
sub
xchg
lret
lret
andl
icebp
dec
push
loop
lret
mov
pop
jnp
shlb
mov
mov
imul
cmp
fs
fisubrl
data16
mov
dec
push
outsl
test
repnz
ret
push
nop
cmp
and
dec
lret
sbb
outsb
shrb
mov
dec
movsb
push
imul
pop
mov
outsl
daa
push
orl
out
in
xchg
gs
jb
mov
shl
movsb
mov
pop
mov
lcall
and
push
or
repz
or
cmp
jno
inc
jl
in
jb
push
fnstenv
push
inc
sub
mov
mov
jnp
cld
imul
mov
cmp
sub
lods
loope
data16
pop
or
sbb
ret
ret
sbb
fwait
arpl
popf
mov
dec
sub
stos
push
or
stc
xchg
adc
in
mov
sbb
push
cmp
test
pop
push
rcrl
mov
sbb
filds
adc
mov
sbb
mov
mov
sbbb
mov
push
imull
insb
test
mov
sbb
setnp
jne
outsb
lock
mul
and
cld
adc
jno
std
mov
push
imul
jmp
imul
jno
adc
xor
or
inc
cmp
or
jne
stc
dec
sub
jmp
mov
xchg
sub
in
pop
sub
daa
enter
lds
loop
xchg
fs
inc
sub
popf
jmp
push
icebp
mov
pop
cmp
xor
jo
sbbl
sbb
call
mov
pop
imul
sub
popf
push
leave
add
mov
mov
popf
clc
js
aam
ds
arpl
addr16
fs
inc
mov
cmc
mov
ljmp
cmp
icebp
push
fcomip
lea
push
xor
jmp
sub
mov
push
cmp
xchg
cltd
loope
lret
cmpsl
aam
test
xor
out
or
or
dec
cwtl
adc
sti
inc
adc
mov
fisubs
xchg
mov
mov
lock
filds
xchg
xchg
decb
rorb
jae
push
sbb
popf
dec
fs
pushf
adc
cmpsl
int
lods
pop
push
xchg
add
mov
lret
sub
sub
loop
repnz
loopne
cs
xchg
nop
xchg
fdivs
jecxz
movsb
ret
push
stos
jne
sbb
sub
insb
push
dec
loop
sahf
cld
sbb
imul
mov
mov
sbbb
fs
inc
xchg
pop
mov
fsubrs
xorb
pop
mov
push
out
dec
aam
add
imul
dec
add
add
xchg
repz
push
stos
fstpl
stos
imul
fwait
mov
rol
sub
xchg
in
icebp
lea
mov
mov
push
imul
sti
sub
mov
out
pop
push
inc
ret
dec
sbb
movsb
es
lret
js
int3
xor
sbb
cwtl
pop
imul
lea
jle
shll
int3
sti
jp
nop
mov
aaa
xorb
push
cmp
idivl
push
ljmp
mov
stos
dec
pop
xor
in
push
sbb
xor
ficompl
pop
pusha
and
daa
int3
or
ja
je
fwait
jb
into
dec
sub
inc
push
and
jbe
nop
ficomps
pop
fsubs
xlat
and
notb
fs
icebp
cmpsl
in
faddp
jo
decl
loopne
dec
mov
fbstp
cli
mov
add
jo
mov
nop
push
dec
ficompl
in
sbb
cli
push
cmpsb
adc
lds
je
cmp
push
test
jo
inc
sub
adc
sbb
stos
push
popf
loope
xchg
inc
mov
cmp
aad
mov
xor
mov
sub
jns
mov
dec
in
pop
into
ss
cmp
and
mov
xor
out
popf
jae
nop
pop
decl
mov
xor
into
insl
mov
movsl
orb
js
dec
imul
lods
pusha
jg
mov
icebp
sub
popf
push
scas
mov
fisubl
add
inc
orl
js
dec
pop
sub
sahf
cld
and
push
and
adc
lcall
push
fs
and
dec
xchg
cmp
dec
negb
inc
jmp
xor
pop
test
gs
ja
and
ds
lret
adc
in
cmp
cmp
lcall
jl
repnz
jp
call
and
out
push
mov
std
and
inc
das
lahf
sbb
jecxz
pop
les
bound
xor
mov
loopne
dec
dec
rcll
ds
or
cmpb
jp
outsl
shll
ret
es
loopne
fmuls
cmp
sub
outsb
xchg
int
and
je
pushf
push
pop
cld
mov
ljmp
loop
or
add
inc
push
fcmovne
movsb
test
popf
stos
mov
push
lds
lods
xlat
es
rclb
inc
push
pop
sahf
das
xor
xorb
scas
aad
mov
loope
cmp
inc
cmp
fsubl
insl
inc
dec
clc
or
jno
lret
or
movsb
cmp
jo
repnz
jl
mov
push
jno
push
fistl
ret
push
sbb
adcl
add
push
test
je
push
repz
xor
scas
pop
fidivs
loop
cmp
imul
xor
sub
nop
mov
hlt
mov
mov
mov
in
xor
loopne
and
int3
lods
mov
cmpsb
lcall
test
xchg
add
cmp
fldcw
lret
and
xchg
scas
icebp
push
mov
repnz
cmpsl
gs
aam
mov
mov
pop
push
xor
mov
xor
mov
loope
test
add
xchg
movsl
sbb
jae
out
inc
push
adc
and
mov
das
mov
mov
cmp
lds
push
inc
movsl
mov
cmpsb
jne
ss
cmp
test
cmp
leave
stc
xchg
jg
nop
shll
and
test
shlb
les
dec
xor
loop
xchg
add
pop
jae
mov
mov
ja
ljmp
loopne
inc
call
repnz
mov
mov
mov
dec
and
data16
and
test
mov
mov
dec
addr16
or
test
dec
lret
je
enter
jp
xor
inc
mov
adc
jno
xchg
mov
outsb
enter
cs
loop
dec
inc
pop
dec
dec
pushf
jnp
mov
adcb
dec
je
mov
pop
clc
ljmp
push
jmp
push
push
jge
in
flds
lds
lods
sub
mov
fldt
rep
and
das
push
mov
sbb
push
mov
mov
or
cmp
xchg
punpckldq
inc
or
pop
ficompl
stos
push
mov
test
xor
das
js
loope
sub
ds
ja
lcall
repz
sub
xchg
xchg
out
mov
aaa
cmpb
jmp
add
xchg
push
pop
mov
sahf
push
imul
data16
jge
cmp
adc
dec
jl
jecxz
sbb
test
fsubs
out
fmull
jle
push
mov
jns
nop
add
in
aas
sub
scas
mov
push
and
sahf
jp
enter
loopne
mov
mov
out
lret
lods
add
in
sbb
mov
sbb
lods
sti
ret
xchg
dec
xchg
xor
mov
mov
adc
mov
xor
add
fwait
xor
or
roll
jecxz
sub
popa
sti
decb
sahf
js
pop
lds
dec
or
aad
xchg
pop
scas
rcrb
add
adc
mov
test
es
les
add
adc
arpl
push
inc
daa
hlt
xchg
add
sub
out
xor
inc
inc
fistps
dec
and
xchg
xor
add
rolb
xchg
cltd
out
in
jge
mov
das
push
fmull
xchg
pop
cmp
push
hlt
int3
movsl
pop
icebp
adc
vmwrite
in
iret
arpl
xchg
imul
mov
fmuls
aad
leave
mov
pop
nop
aam
push
movsl
sub
sub
xor
iret
jmp
arpl
testb
jl
cmp
int
arpl
std
int
in
scas
addb
leave
mov
subps
and
int
sbb
xchg
inc
fcomp
dec
int3
sub
cld
mov
gs
addr16
rclb
push
push
push
and
xchg
pop
lods
cmp
and
iret
adc
shll
sub
jl
ja
mov
clc
lods
and
out
fucom
inc
cmp
xchg
xchg
shrb
enter
push
fs
aad
clc
je
or
push
mov
push
pop
out
stos
repz
ljmp
mov
rcr
pop
pusha
cmc
call
pop
inc
loope
mov
push
lods
mov
outsb
add
mov
mov
sub
enter
cmp
cld
lahf
push
aad
subl
dec
xor
cs
mov
imul
inc
mull
hlt
mov
push
cmpsb
dec
pop
test
sbb
loopne
mov
inc
fildl
ffree
fwait
adc
xchg
xchg
sbb
nop
scas
sarl
scas
nop
push
cmpsl
add
test
fcoms
in
dec
mov
rcr
push
out
pop
sub
and
cwtl
in
cmp
mov
sbb
lcall
sub
xor
aad
adc
dec
mov
mov
mov
in
popf
cmp
pop
dec
into
lahf
sub
dec
push
mov
cmp
inc
and
mov
cmp
ljmp
inc
mov
mov
scas
fsts
movsb
je
popa
push
call
xchg
out
inc
inc
mov
adc
jae
daa
dec
bound
pop
xor
nop
cmpsb
icebp
add
fsub
pop
adc
adc
imul
adc
or
adc
aas
cwtl
aam
pop
mov
pandn
push
jmp
rcll
popa
push
lahf
push
sarl
stos
stc
dec
push
inc
test
cmp
inc
icebp
xchg
shll
dec
ret
aad
mov
outsl
jecxz
jae
addr16
dec
ljmp
rorb
pop
ret
sub
mov
fs
pusha
loop
inc
test
sahf
xor
in
mov
cmpsb
shlb
jmp
mov
lods
icebp
or
mov
cld
jecxz
add
push
push
and
mov
loopne
add
js
adc
test
std
dec
jb
and
repnz
stos
inc
lret
push
out
xor
cmp
pop
mov
mov
pop
pop
pop
imul
imul
inc
pop
xchg
cmp
xor
loope
scas
lcall
inc
gs
fimull
xchg
jg
std
sub
push
fimull
ss
cmc
lret
xlat
mov
mov
sbb
push
aas
push
dec
pop
jmp
daa
push
shlb
imull
daa
jb
inc
out
and
sub
mov
pop
mov
adc
popa
lahf
cmpsb
cmp
xchg
fcmovu
xchg
out
testb
adc
loop
jnp
inc
cvtdq2ps
mov
mov
xor
int3
loop
sbb
push
sbb
iret
nop
ret
arpl
imul
jnp
in
std
inc
dec
push
mov
mov
ret
dec
and
mov
sub
and
push
into
ja
sbb
loope
out
jo
je
imul
xchg
loope
les
jne
hlt
push
ss
push
pop
ljmp
mov
sub
sub
or
and
and
jnp
int
push
das
xchg
dec
mov
cmp
out
pmulhuw
pop
push
repz
mov
mov
pop
inc
sub
jl
fnstenv
and
pop
dec
lods
scas
int3
testb
ret
sub
ror
or
cmp
and
push
and
mov
sbb
push
fwait
mov
adc
inc
enter
add
push
xor
xchg
jge
sub
andb
cmp
pop
dec
and
mov
pop
testb
or
jl
add
xchg
inc
call
lcall
mov
fbstp
fmull
fsubrs
jo
push
xchg
and
nop
dec
loopne
scas
rclb
pop
xchg
dec
inc
push
lods
mov
mov
ss
aaa
icebp
sbb
sbbb
fdivrs
jb
jno
pop
fwait
pop
sbb
add
popa
mov
ds
pop
dec
add
fwait
cmp
scas
lods
jg
loop
sbbb
sar
sahf
das
adc
cmpsl
dec
les
sub
repnz
shlb
test
push
xchg
test
push
lcall
aad
adc
or
xor
in
sbb
scas
inc
loopne
and
mov
int
test
and
mov
lock
adc
js
mov
mov
mov
arpl
imul
or
pop
lods
nop
cmpsb
mov
fdivrp
sahf
cmpsb
pop
jb
out
mov
dec
bound
xchg
mov
mov
imul
lret
jp
movsl
mov
popf
outsl
lret
hlt
movsb
dec
mov
out
ret
mov
push
in
movsb
jmp
push
call
orl
notl
notb
fs
rcl
in
xor
cltd
or
lret
inc
movsb
aad
sub
xor
arpl
fdivrl
dec
dec
mov
js
popf
cs
aas
imul
mov
adc
inc
or
mov
lods
sbb
adc
out
dec
data16
in
clc
inc
cmc
and
and
cmp
pavgb
scas
add
cwtl
movsb
daa
pushf
push
pop
sub
push
cmp
adc
mov
sahf
aam
jmp
or
mov
jbe
andb
push
mov
in
push
xor
sub
aam
add
fbstp
das
das
ja
mov
fldcw
jae
cmp
mov
repnz
stc
mov
rcrl
pop
shlb
add
ficoms
insb
add
cmpb
mov
sbb
adc
or
push
ds
loopne
loop
dec
push
cmp
std
les
dec
pushf
gs
sbb
pop
adc
fdivrs
lods
mov
ljmp
xor
dec
scas
inc
cmp
xchg
mov
cmpsb
adc
cwtl
mov
jecxz
cld
cwtl
adc
sub
xchg
mov
pop
sbb
inc
flds
aad
aaa
out
xchg
pop
fimull
mov
xor
xor
lret
ss
movsb
aad
or
add
xchg
add
inc
insl
es
lods
out
sahf
adc
stos
es
sub
sbb
inc
xchg
xlat
jmp
negl
sbb
push
push
js
and
in
clc
cs
fwait
push
adc
xchg
pusha
dec
je
inc
dec
dec
es
rcl
repz
cld
negb
lods
cmp
mov
add
jmp
push
add
adc
sub
xlat
mov
fsubs
std
jae
mov
incb
mov
js
fsubs
xor
repnz
test
inc
push
cmp
sarl
xchg
lret
or
negb
xchg
ljmpw
mov
inc
cmp
pop
push
and
and
sbb
andl
pop
lods
fstps
aas
int
ljmp
pop
cwtl
mov
shrl
mov
mov
pop
sub
push
orb
jge
negl
xor
mov
mov
pop
sub
test
shrb
dec
pop
fidivrl
push
pop
aad
jbe
out
ja
mov
or
scas
and
sub
popa
rcll
dec
xor
stos
push
icebp
shrb
mov
pop
xlat
xor
repnz
add
out
sbb
test
mov
out
popa
out
jp
sbb
sub
xacquire
add
add
or
adc
insb
notl
lods
mov
jmp
dec
aaa
int
fwait
inc
out
xor
or
cmp
mov
mov
xchg
pop
mov
sbb
cmp
je
mov
arpl
popf
mov
mov
jle
vrsqrtps
scas
jo
cmp
rcrl
dec
jmp
psubd
popa
mov
les
lret
add
scas
out
push
subb
sbb
add
push
mov
adc
pushf
lds
push
and
out
stos
or
popa
add
negl
dec
or
popf
das
dec
lods
pop
ffreep
inc
loop
xor
fbstp
xor
dec
in
xlat
repnz
insl
lds
leave
xor
and
cmpsl
icebp
mov
pop
or
xchg
jge
dec
mov
push
jge
or
fidivrs
dec
pop
mov
cmp
mov
imul
jno
pop
rorb
jecxz
pop
shll
mov
sub
cmp
test
lock
push
popa
test
negl
xorb
aaa
pop
mov
insl
mov
pcmpgtd
ficompl
xchg
in
das
daa
int3
xchg
sahf
repnz
outsl
xor
push
mov
inc
xorb
pop
popa
ss
mov
sbb
cmp
mov
loopne
in
cltd
aaa
in
mov
mov
sbb
jl
dec
addr16
arpl
test
or
sub
mov
subl
push
xchg
jb
loope
xchg
bnd
clc
xor
aad
ss
jmp
popa
imull
mov
adc
cmp
adc
test
aam
adc
add
add
jp
lds
test
popa
mov
and
sbb
stos
and
mov
divl
push
fists
ret
std
sub
call
cmpl
sub
test
cmp
push
lcall
dec
daa
inc
ret
ljmp
shr
fnstcw
popfw
dec
rcr
scas
shll
xchg
jmp
push
xor
xchg
je,pt
bnd
mull
xor
outsb
aas
add
test
mov
cmp
sbb
inc
mov
iret
pop
mov
shll
cmpsl
or
xchg
dec
nop
sub
imul
inc
and
xchg
cmp
jne
mov
push
inc
cli
mov
data16
scas
sbb
jns
std
or
inc
aad
xchg
cmp
push
das
stos
add
cmpsl
daa
in
xchg
jle
dec
jg
mov
xor
lret
in
xor
cmc
xchg
mov
dec
or
mov
adc
sbb
ret
push
push
fwait
cmp
es
in
sbb
add
jg
inc
add
cmp
movsb
jle
daa
adc
sahf
fnstcw
jl
pusha
sbb
arpl
divl
pop
sti
mov
cmpsb
and
dec
lods
xchg
or
cwtl
cwtl
jb
adc
ret
mov
cmpsb
sub
aad
test
cmp
repz
push
fidivs
pop
loop
ret
dec
out
and
lea
addr16
xchg
ljmp
std
lods
adc
dec
sub
lea
add
mov
xchg
je
adc
insl
out
outsb
icebp
lahf
outsl
sarb
jns
push
popf
out
or
sub
push
adc
popf
ret
jl
clc
sub
mov
mov
arpl
adc
scas
mov
popf
ds
xchg
fsts
jae
sbb
mov
cwtl
idivl
push
add
sbb
fisubs
hlt
shll
popa
mov
sahf
out
and
cmp
pop
push
or
cmpsb
and
sub
fs
loopne
outsl
push
mov
xchg
sub
repz
adc
xor
pop
loope
pop
push
or
gs
push
jno
sub
add
icebp
cwtl
jno
xchg
cmpsl
clc
inc
cmc
jne
sbb
testb
nop
pop
xor
mov
fmulp
rorl
sub
mov
jne
jae
sbb
test
sub
lock
ffreep
rcrb
add
fcompl
xorb
inc
xchg
and
mov
cwtl
repnz
cs
into
arpl
dec
inc
or
cs
mov
push
outsl
fisubrl
in
jae
jle
fsubrl
out
and
sahf
or
nop
shlb
aaa
mov
cmpsb
arpl
je
mov
outsl
push
andb
mov
push
pop
fisubrl
adc
cmpsb
insb
out
repnz
sbb
mov
push
pop
jno
cmp
cs
cmpsb
mov
movsb
loopne
cmpsl
je
arpl
cmp
adc
and
je
xor
add
ret
lcall
dec
sbb
mov
fs
sahf
in
pop
inc
jle
insb
adc
call
push
sbb
add
cs
scas
les
push
lcall
jbe
pop
push
fcomip
adc
mov
xor
cmc
sub
notl
das
jg
sub
enter
jmp
and
fidivrl
add
in
inc
jno
inc
add
mov
mov
jo
dec
js
mov
xchg
fisubrs
xchg
fildll
push
mull
lods
mov
xchg
xchg
or
jne,pn
int
add
inc
lret
lret
xor
push
popa
inc
int
loop
sbb
cmp
fwait
cmp
js
lahf
dec
xor
sub
push
cmp
outsl
rcrl
nop
in
fs
shll
mov
aas
adc
cmp
imul
pop
cmp
mov
ret
mov
popa
push
bound
cmp
mov
mov
sbbl
mov
jo
repnz
js
jp
into
adc
dec
repz
scas
bound
leavew
jbe
pop
fs
shll
mov
cltd
pusha
addr16
subb
aas
pop
or
mov
gs
das
jp
adc
popf
mov
mov
xor
jno
xor
mov
pusha
cmp
ss
mov
cmp
std
add
hlt
lahf
sbb
xor
mov
push
cld
stos
sub
sub
in
mov
and
out
cmp
loope
or
add
leave
sahf
outsb
dec
int
push
sub
xchg
insl
mov
dec
push
sbbl
adc
add
cmp
xor
packssdw
add
or
daa
push
jmp
call
sahf
loope
adc
mov
fisubl
and
mov
adc
xor
test
mov
xchg
dec
out
lret
inc
aaa
inc
inc
xor
pusha
jle
clc
fstl
cmp
xor
jne
popf
mov
addl
push
adcl
sub
jae
ds
add
cli
nop
sub
lods
and
fwait
int
or
les
jbe
xchg
out
sti
inc
sti
lds
sub
mov
add
adc
dec
stos
pop
aas
lods
in
inc
jne
jae
testl
sti
js
lahf
pop
enter
outsb
addb
jge
push
dec
idivl
ret
inc
xchg
out
mov
lea
xor
pop
fisttpll
scas
fstps
pop
leave
adc
and
hlt
sbb
pop
cmp
arpl
cmp
popfw
call
les
in
dec
loope
pop
mov
push
push
pop
cwtl
lds
inc
in
cmp
nop
mov
mov
pop
push
loop
mov
or
push
sub
mov
or
lods
jnp
repz
pop
shlb
dec
sub
push
test
repz
out
popf
imul
inc
cli
insb
jae
shlb
arpl
push
arpl
insb
dec
mov
arpl
mov
ja
inc
clc
ds
push
adc
sbb
jo
out
rcll
js
fwait
movsl
adc
xchg
cmpsl
dec
jb
ss
shrl
jo
pushf
xchg
xor
dec
jmp
fidivs
sbb
inc
shl
pusha
das
nop
xor
ljmp
cwtl
lods
xlat
ss
loope
shll
add
and
mov
xchg
pop
stos
inc
xchg
or
shr
ljmp
mov
jle
pusha
xlat
scas
imul
pop
outsb
stc
xchg
push
sub
jle
cmpb
push
in
mov
xchg
and
lcall
add
cmpsb
xlat
pusha
xchg
aam
fdivs
cmp
insb
fmuls
stos
into
fs
gs
mov
xchg
lods
outsl
loopnew
scas
lret
add
shlb
pop
push
lret
mov
jo
lea
push
cmp
rcll
shl
jge
movsl
cmp
pop
outsl
pop
push
mov
fcmovne
inc
or
popa
cwtl
loop
xchg
insb
push
inc
adc
gs
mov
mov
mov
mov
ret
fmul
mov
out
xor
xlat
jne
cltd
call
leave
add
out
sbb
add
mov
jl
cmpsl
pop
cmp
mov
push
aam
ja
or
mov
jne
out
adc
ds
insl
mov
orb
and
pusha
jl
out
xchg
icebp
cmp
push
inc
sub
aad
mov
in
lret
sub
pop
push
out
fcmovb
xchg
clc
ss
cs
repz
cmp
test
pop
xchg
sbb
cmp
inc
not
or
rorl
inc
loopne
das
dec
imul
outsl
aad
mov
dec
mov
loop
and
sbb
sahf
mov
push
inc
mov
jge,pn
cmp
xchg
mov
ss
adc
mov
rcrb
fiadds
es
xchg
in
mov
stos
ror
nop
cmc
lods
pminub
ret
or
adc
inc
into
mov
or
jne
jp
into
rcr
daa
push
daa
pusha
xlat
pop
stos
mov
orl
dec
jo
in
push
cmp
add
pop
pop
cli
aas
mov
lods
fstps
mov
loop
mov
fdivr
jl
xor
mov
repnz
adc
push
ret
mov
out
sbb
in
aas
sbb
xchg
sbb
sti
pop
jp
or
addb
cld
xchg
pusha
lret
add
nop
adc
jge
sub
loopne
sbb
xlat
mov
outsb
outsl
jb
notb
into
mov
mov
sub
popf
push
inc
jbe
fimuls
xor
addr16
insl
xchg
cld
nop
dec
mov
scas
loop
add
decb
aam
lret
mov
xor
aam
out
stos
mov
dec
outsl
xchg
and
lahf
cmp
adc
xchg
xchg
iret
scas
stos
mov
lock
enter
adc
jbe
out
lea
jmp
sub
inc
jo
mov
mov
movsb
iret
push
jo
outsl
mov
outsl
adc
call
cmp
and
gs
mov
jmp
stc
fdiv
aas
xchg
cltd
js
sahf
lret
and
xlat
or
jmp
stos
cmpsb
orl
xchg
inc
push
lock
cmpsl
daa
arpl
mov
mov
add
fucompp
in
rcr
xor
jns
xchg
imul
adc
lods
int
mov
xchg
mov
adc
dec
fwait
pop
imul
push
movsb
sahf
dec
add
mov
and
mov
mov
call
sub
popa
jb
push
fwait
jg
cs
mov
mov
add
xor
fwait
mov
int
push
or
call
mov
cli
adc
in
iret
xor
and
mov
dec
push
mov
push
cmc
lret
rol
mov
rorl
and
jl
jbe
xor
add
jne
in
daa
rcrl
sub
mov
xchg
mov
inc
push
cmpb
outsb
js
pop
ljmp
mov
in
adc
sti
test
fwait
sbb
cmp
cltd
mov
inc
stos
testb
mov
sub
testl
lret
mov
cmp
xlat
push
jg
jecxz
jo
push
mov
xchg
sahf
jecxz
jmp
bound
int3
inc
notl
and
pop
popf
mov
negl
push
inc
data16
shl
roll
adc
adc
gs
add
out
cmp
pop
pop
inc
pop
mov
xor
in
add
in
xchg
dec
std
leave
in
daa
icebp
fldenv
insl
xor
test
insl
sbb
into
iret
repz
jl
les
int
orl
scas
xor
and
xor
mov
jle
std
in
adc
cmc
fisubl
xor
mov
in
ds
fmul
mov
inc
test
popl
lods
and
sbb
and
push
mov
pop
add
mov
outsl
gs
imul
mov
xchg
xor
mov
shll
loop
std
mov
cli
loope
test
sub
test
outsb
xchg
jno
ret
push
adc
mov
push
daa
cmpl
xchg
ret
jae
pop
out
popa
jo
sbb
out
ds
add
arpl
nop
es
cmp
cld
test
and
outsb
adcb
mov
xlat
mov
fdivp
aas
mov
xchg
mov
dec
popf
ja
popa
aad
xchg
lahf
leave
je
xchg
std
test
aas
jnp
divl
ss
dec
cmp
mov
hlt
xchg
push
sarl
stos
pop
add
icebp
pop
push
jne
icebp
and
outsl
pop
pop
or
pop
rorl
aad
mov
mov
cmp
mov
adc
repz
sub
ret
sbb
test
and
imul
push
sahf
inc
jno
inc
push
sub
fsubrs
mov
out
pop
mov
push
mov
push
lock
or
test
ja
insl
fildl
push
testl
mov
cmpsb
jns
mov
cli
bound
xor
clc
sub
es
add
mov
pop
cmp
or
pusha
inc
sub
jge
lea
leave
jecxz
and
jne
nop
pop
stc
inc
lret
mov
lahf
fisubrs
loopne
jae
repnz
mov
mov
outsb
pop
cmp
sub
imul
cmp
pop
inc
dec
sarb
pop
sbb
push
idivb
pop
aas
fimuls
pop
out
std
pop
or
gs
mov
or
pop
pushf
cmc
stos
cmp
loope
out
push
mov
sub
xchg
test
orl
imul
gs
dec
test
inc
mov
aaa
mov
sbb
in
mov
jle
test
add
out
lahf
lds
adc
cli
pop
push
mov
add
in
repnz
arpl
and
sbbl
sub
push
or
mov
outsl
jmp
divl
in
lahf
xchg
pop
jmp
stc
mov
dec
add
repnz
mov
movsb
shl
call
sub
sub
test
notl
mov
je
mov
cmp
inc
sub
xor
stos
push
lahf
mov
scas
in
push
cld
mov
cmc
jecxz
push
mov
and
nop
inc
xchg
lahf
fstps
in
out
fiadds
mov
ja
sahf
data16
in
ffree
sbb
or
out
popa
lods
cmp
cmc
shl
inc
pop
xor
mov
mov
ljmp
cli
jmp
sbb
test
adc
xchg
mov
push
loope
fsubs
mov
sub
push
mov
xchg
inc
js
xlat
stc
pop
cmp
sub
jecxz
sbb
pop
dec
je
test
ret
jg
adc
out
in
and
sub
sub
cs
jnp
popa
sti
in
dec
mov
jo
in
xor
incl
or
cmpsb
xchg
dec
adc
clc
dec
in
inc
int
jmp
pop
adc
repnz
popl
aaa
jne
outsl
mov
or
xchg
pop
ljmp
pop
mov
lds
cmp
push
outsl
and
arpl
clc
jl
shll
into
dec
dec
popa
sbb
xor
mov
sbb
jmp
mov
jnp
pusha
mov
dec
mov
rcrb
pop
push
xor
gs
outsb
mov
idiv
mov
dec
adc
cmp
arpl
add
cmpsb
nop
jle
add
jle
in
cmp
lcall
cli
jnp
pop
push
pop
dec
push
les
faddl
sub
sbb
or
sub
or
aaa
iret
jp
adc
lea
pop
fidivl
adc
dec
dec
mov
mov
pushf
popf
sub
fcmove
cmp
les
jb
negl
popf
insl
cmp
aam
cltd
sbb
in
hlt
xor
sub
inc
mov
ror
pushf
test
scas
dec
cld
push
mov
fists
cld
repz
mov
pop
lcall
hlt
fwait
inc
cltd
add
adc
flds
inc
inc
or
scas
in
dec
in
mov
xchg
lods
or
je
ret
adc
insb
pop
sbb
jns
fadds
xchg
nop
push
int
jb
addr16
ret
pop
jmp
xchg
adc
mov
mov
xchg
sbb
jbe
jl
mov
in
test
pushf
pop
or
fs
sub
pop
push
mov
jp
push
or
inc
inc
mov
or
xor
ss
mov
repnz
jnp
or
arpl
dec
add
pop
push
and
je
jecxz
and
jle
cmpsl
fsts
inc
imul
in
sbb
jmp
adc
add
into
dec
cs
push
mov
cmp
cmp
cmp
mov
int
mov
xlat
cld
jae
orb
xchg
xor
subl
or
loop
aaa
jbe
imul
sub
aad
lds
push
fnsave
ss
call
xchg
pop
je
push
icebp
popf
loopne
loopne
icebp
jmp
adc
push
jmp
cmp
iret
fstl
addr16
test
ja
and
aad
jge
add
adc
idivl
into
dec
adc
es
ss
es
mov
cmp
push
push
bound
or
dec
jbe
and
insb
sub
push
mov
shl
mov
mov
mull
fsubrl
ret
ss
ret
push
push
pop
sub
xchg
lret
fucomip
xor
stos
sub
inc
pop
xor
scas
mov
mov
flds
add
inc
insb
cmp
sar
dec
cmp
call
ja
xchg
test
ds
lods
adc
inc
leave
mov
cmp
dec
outsl
pusha
push
xor
and
xchg
test
popa
fs
and
push
pop
repnz
fnstenv
cmp
dec
mov
out
clc
cwtl
ret
les
scas
scas
add
add
pop
mov
enter
xlat
xchg
pcmpeqd
xlat
dec
dec
xchg
in
push
cmpsb
mov
pop
jg
dec
mov
nop
mov
fwait
imul
fcomp
jno
or
dec
test
cli
shrb
inc
mov
mov
lcall
insl
insb
stos
lods
and
in
cmpsb
jnp
cmp
fistl
rorb
xlat
int3
adc
outsl
pushf
push
xchg
divl
lcall
ljmp
add
add
imul
fstl
xor
mov
popf
shrb
jg
xor
repz
xchg
xchg
aad
in
push
cmp
hlt
enter
jecxz
adc
dec
push
andl
test
jg
dec
adc
lret
add
dec
js
adc
pop
and
int3
clc
xor
push
aam
add
pop
mov
sub
cmpsl
stos
and
pop
pop
rcl
adc
adc
or
pop
jecxz
stc
mov
scas
xlat
jecxz
aaa
and
pushl
and
mov
mov
mov
mov
sbb
push
les
pop
or
inc
sar
mov
std
in
inc
mov
jg
pop
fstpt
sub
bound
or
cmp
lds
inc
aam
mov
mov
and
push
inc
push
xchg
stos
aad
jbe
loop
push
or
inc
sti
xor
cmpsl
scas
dec
lea
in
and
jecxz
stos
jp
pusha
repz
push
jecxz
sbb
jne
pop
and
ds
xchg
mov
loope
fistl
pop
lea
mov
das
pushf
mov
fs
mov
sub
xor
test
or
sbb
sbb
or
adc
mov
aad
mov
cmp
movl
xlat
fs
lret
adc
sahf
and
xor
xchg
enter
jno
ja
pop
into
loope
in
dec
lret
or
mov
push
pop
pusha
pop
aam
pop
pop
lods
xchg
dec
std
test
mov
xlat
movsb
lret
lahf
xchg
add
jns
jb
fdivrs
sub
loop
push
fs
movsb
adc
inc
jbe,pn
mov
in
push
stos
enter
or
mov
in
inc
sub
cmp
testb
xlat
aam
xor
or
ret
popa
push
shll
test
dec
leave
jl
mov
ret
inc
sbb
adc
fwait
fs
cmpsl
adc
test
dec
push
mov
pop
cmpsb
ds
shrb
pop
dec
xchg
cli
test
loopne
out
sbb
mov
in
push
arpl
lods
loop
adc
add
pop
xchg
sub
jns
ss
add
or
adc
add
iret
repz
scas
xlat
jmp
add
fdivrs
mov
cmp
repnz
pop
test
sbb
jmp
gs
mov
push
js
cmc
mov
jecxz
mov
mov
ss
loop
add
push
ror
pop
xchg
popf
cmc
je
pop
not
sahf
popa
or
dec
ret
loop
rcll
in
xor
jg
and
std
inc
neg
jne
mov
or
sub
arpl
call
adc
std
cmp
test
push
sub
fs
and
cmp
in
jno
push
dec
adc
rcl
fs
aas
xor
mov
popa
sti
lahf
dec
add
enter
loopne
aaa
mov
dec
fidivs
jb
or
mov
xchg
imul
sti
inc
jle
inc
cld
outsb
shlb
adc
int
pushf
dec
pop
mov
imul
mov
mov
hlt
ljmp
rol
mov
xchg
stc
and
mov
cld
sbb
mov
scas
and
cmp
popf
xor
push
jo
mov
mov
pop
push
mov
aaa
loope
mov
adc
mov
add
mov
sub
pop
shlb
dec
and
leave
xchg
push
pop
scas
test
pop
cs
pop
loop
cmp
adc
mov
cmovbe
fisubl
cmpsl
stos
sar
test
mov
std
subl
movlps
adc
sub
sub
adc
and
lcall
cli
inc
std
cmp
jp
loopne
sahf
movsb
inc
mov
inc
xchg
pop
lret
arpl
pusha
adc
push
insb
loopne
clc
jno
push
daa
out
cli
cmp
fimuls
ss
xchg
rcrb
push
fcmovbe
pop
and
jl
fidivl
pop
pushf
test
cmp
jge
add
pop
xchg
addb
jmp
xor
movsb
mov
or
mov
out
sarl
popa
js
pop
nop
movsb
mov
je
adc
test
xchg
mov
push
hlt
out
mov
sar
inc
test
fnstsw
cmp
jae
ret
ret
sbbb
lret
aad
pop
inc
add
aas
cmp
clc
idivb
xor
enter
dec
subb
and
xchg
inc
stos
mov
imul
sahf
scas
push
pop
leave
cmp
mov
out
and
pusha
aam
imul
jg
xchg
loopne
push
lcall
ret
add
jecxz
stos
or
outsl
sub
jnp
pop
xchg
fcomps
xor
fisubrl
jge
inc
push
jp
jno
pop
mov
dec
jo
inc
mov
ret
cmpsb
mov
aas
jl
cmp
js
push
fwait
mov
lret
mov
frstor
jno
or
add
add
pop
sbb
sub
jmp
adc
icebp
inc
or
imul
push
mov
loope
sub
xchg
loopne
cmp
icebp
fiadds
inc
fst
dec
dec
cld
cwtl
dec
leave
test
stc
sub
sub
out
mov
jo
out
mov
mov
movsb
jecxz
pop
dec
lods
xchg
adc
push
repz
jmp
je
lahf
mov
les
cltd
push
dec
pop
sbb
arpl
in
jg
nop
sbb
push
dec
jl
push
and
icebp
mov
xchg
pop
mov
inc
cli
int
mov
into
outsb
sbbl
mov
inc
jns
mov
and
or
out
rcrb
xor
mov
mov
jnp
lcall
sub
adc
div
adc
jg
mov
and
sub
xchg
loop
cmp
ret
mov
mov
jmp
or
js
lahf
adc
jns
cmp
mov
push
in
jp
jle
add
jle
mov
fbstp
clc
or
mov
inc
pop
movsb
call
outsl
mov
fnsave
inc
mov
push
jle
inc
cld
fsubr
cmp
mov
inc
and
das
cmpsl
mov
and
lock
inc
dec
or
out
test
push
mov
loop
mov
stc
inc
sahf
ffreep
dec
sub
pop
lea
test
shll
cs
jno
push
and
and
jne
lcall
aas
xlat
scas
inc
aam
add
mov
mov
in
lods
mov
jle
out
sahf
sbb
cmp
shl
xor
imul
das
xor
incb
adc
cmp
or
pop
cwtl
hlt
or
insb
aas
cmp
inc
inc
sub
xchg
mov
mov
fwait
pop
add
sbb
mov
sub
repz
insb
bndldx
push
push
aaa
shl
add
push
sbb
adc
pushf
or
testb
inc
mov
cmpsb
sub
ds
xchg
arpl
inc
sti
mov
inc
or
aaa
cmpsb
popa
aam
sahf
cli
jle
lods
sub
movsl
dec
mov
jg
xlat
inc
jbe
jae
sbb
leave
sub
stc
lock
push
cmpl
ljmp
or
lret
scas
sub
cltd
sub
pop
cmp
lret
imull
ds
lahf
arpl
jle
enter
or
scas
pop
jp
adc
pop
cmpsb
xchg
dec
xchg
or
in
add
out
cmp
cmp
jnp
cmp
test
cld
adc
and
cmp
xor
push
out
cmp
sub
shll
aas
cli
mov
sbb
mov
out
push
pop
or
sarb
out
add
popa
mov
and
in
mov
addr16
xchg
sub
scas
cmp
adc
cmp
jbe
pop
cmp
xor
fistl
scas
in
jb
mov
in
sahf
xlat
aas
sub
imul
add
xor
arpl
lock
call
mov
cltd
ja
pop
fwait
push
hlt
cmp
jnp
pop
arpl
popa
test
and
nop
xchg
add
lock
adc
fldt
xchg
mov
and
test
jae
push
je
mov
rsm
sarl
jecxz
jge
adc
cmc
and
push
in
hlt
cmp
sub
cmpsb
or
aad
in
popa
ljmp
push
cmp
cltd
xor
dec
xchg
sub
inc
sbb
lcall
or
or
inc
mov
jmp
std
sbb
mov
jb
clc
mov
mov
addr16
into
daa
js
lea
dec
ss
sti
ss
cmp
imul
jecxz
pop
mov
cwtl
dec
adc
mov
subps
pminub
sub
cmp
lahf
sub
std
jae
in
and
push
mov
fsubrs
lret
in
sub
loopne
add
pop
hlt
push
xchg
rorb
and
and
xor
enter
das
jecxz
aas
add
popa
dec
cmpsb
xor
xor
adc
in
cmp
push
loopne
icebp
jb
fbld
test
mov
popa
lret
je
jae
adc
inc
xor
repz
adc
cmp
nop
stos
int3
push
and
rorb
mov
and
cmp
stos
sbb
inc
push
iret
sub
push
dec
into
fstps
push
push
jae
in
fwait
and
pop
jg
popa
push
rorl
nop
clc
addr16
pop
jg
mov
mov
or
sti
mov
jne
inc
test
or
mov
push
or
pop
cmpsl
pop
push
outsb
jo
push
cmp
jnp
ss
add
loopne
inc
xchg
sbb
sbb
pop
and
ljmpw
shlb
mov
loopne
mov
jno
xchg
xor
pop
sbb
repz
pop
dec
mov
cmp
je
adc
cmp
test
aam
shlb
fcomps
push
pop
sbbl
mov
push
or
mov
mov
lds
jne
jbe
ja
es
xor
inc
adc
or
jmp
cmc
pusha
faddl
ret
xor
insb
inc
mov
sti
insb
sub
sbb
ror
adc
fdivl
lret
cmp
roll
push
lock
fninit
imul
and
mov
dec
in
je
mov
xlat
ss
pop
dec
cltd
in
adc
jmp
push
icebp
add
lds
dec
inc
cs
idivb
pop
inc
dec
mov
mov
cmpl
jl
inc
push
rorb
mov
lock
test
sub
fdivrl
push
rcll
and
mov
xor
dec
jl
test
shlb
sub
sub
stos
pop
cltd
js
pushf
ret
mov
xor
and
or
and
insl
xor
mov
or
inc
sti
jb
movsb
jmp
test
xor
mov
adc
or
mov
in
sbb
push
jmp
fwait
push
orb
cmp
sub
inc
pop
aaa
or
sbb
stos
rcrb
int3
add
adc
xchg
xor
sub
adc
test
insl
sbb
loop
xor
xchg
inc
mov
fimuls
mov
and
out
dec
es
in
sbb
aaa
clc
scas
pushf
aam
or
mov
add
ljmp
jno
fsts
xor
call
jnp
and
mov
aad
nop
lods
xchg
sub
inc
lea
cld
jp
push
add
cmc
mov
or
daa
push
xchg
setns
rcl
sahf
pushf
scas
xchg
cs
rorl
pop
add
or
push
cmp
pop
lods
mov
mov
adc
adc
fcmovnu
sahf
fiaddl
xchg
mov
stos
xchg
bound
stos
bswap
pop
push
jnp
int
xchg
sahf
das
dec
in
popa
push
cwtl
out
sarb
push
out
inc
mov
stc
fsts
sub
inc
jnp
shrl
out
fisubrs
xor
or
lea
cmp
into
ret
lcall
xor
pop
daa
jmp
rcrl
xchg
sar
or
jb
dec
sub
js
xor
fmulp
add
stos
add
cmpsb
push
imull
rol
or
aas
and
sub
in
pop
out
inc
adc
dec
xchg
jle,pn
push
mov
je
ljmp
lods
cmp
sbb
cli
fwait
push
mov
jno
mov
jae
cmc
dec
imul
aam
cmpl
jns
xchg
push
inc
adc
je
cld
xor
xchg
push
cmp
jp
sub
int
out
into
je
inc
insb
xor
and
aaa
test
aas
es
in
ret
repnz
jecxz
cmpsb
mov
mov
jo
stos
mov
rcll
sbb
jmp
lds
lea
pusha
ret
outsw
orb
cmp
ret
loope
add
cmp
cmp
lds
cmp
xchg
jo
sub
push
sbb
addr16
dec
jnp
popa
lea
push
int3
lods
adcl
mov
in
shll
out
repnz
add
ja
xor
jno
pop
outsl
lea
outsl
out
leave
pop
mov
out
push
adc
mov
cmp
aam
jle
xor
or
aaa
mov
or
test
push
sarl
mov
outsl
or
pop
fmull
add
hlt
dec
pop
je
xor
or
pop
addr16
push
mov
dec
pop
xchg
and
push
push
jae
push
in
cmp
xor
aaa
push
pop
ret
sub
push
lahf
mov
jecxz
in
lods
imul
cs
push
arpl
outsb
in
clc
sti
jno
addr16
pop
iret
xchg
xchg
mov
les
jge
jo
fstpl
gs
ja
ret
pushf
push
sbb
repnz
fsubs
xchg
divb
into
pushf
cmpsl
fildll
lods
enter
xchg
pop
add
adc
cltd
add
jo
push
jb
mov
mov
pop
adc
push
icebp
scas
movsl
insb
or
sahf
dec
imul
jb
push
mov
adc
sub
idivb
lcall
mov
xchg
insl
movb
mov
push
test
inc
push
add
add
lds
pop
ja
adc
imul
cmp
lahf
scas
pop
frstor
jns
jae
push
bound
rcll
into
sub
rorl
nop
ret
cld
repz
outsb
cmp
outsb
jae
cmc
sti
lods
inc
xor
shr
pop
stos
and
mov
cmp
push
ret
push
cwtl
js
cltd
shlb
and
scas
dec
pop
push
cltd
jb
mov
xchg
pop
sbb
sub
mov
in
cs
push
mov
mov
jle
inc
add
call
cmp
mov
test
jecxz
in
stos
and
repnz
pop
sti
push
insb
mov
shll
mov
int
cmp
cmp
pop
push
lea
cmpsl
enter
push
mov
dec
or
inc
and
mov
aam
rorb
ss
pop
into
push
popa
cmc
icebp
xor
mov
mov
jmp
adc
or
popa
jle
sbb
fdivl
xor
push
jl
fcoml
or
and
xchg
xchg
jnp
mov
and
push
ret
add
or
pop
sbb
cwtl
test
jg
cli
add
scas
xor
loope
or
call
ljmp
repnz
negl
or
insb
inc
out
shl
fstps
xchg
ret
imul
mull
sub
add
push
xchg
lods
xchg
add
dec
lods
lahf
cltd
jo
clc
hlt
pusha
push
imul
das
imul
xor
dec
pop
xchg
pusha
aaa
js
sub
xor
std
sbb
cmpl
sarl
xor
loop
testb
fnstsw
push
pop
mov
ljmp
in
andl
shl
cmpsl
sbb
cld
pop
jnp
outsl
in
pop
fistpl
ret
xor
inc
scas
lods
testb
sub
push
dec
push
mov
es
js
movsl
mov
pop
mov
ret
mov
xchg
shrl
loopne
push
mov
test
mov
iret
xchg
fistpl
out
xor
insb
lret
adc
sbb
jl
pop
orl
jo
or
in
add
shrl
cmp
xchg
mov
add
lods
xchg
ja
mov
lret
and
add
jecxz
in
jecxz
cmp
gs
fs
mov
addr16
lea
rorb
roll
add
outsl
or
inc
mov
mov
pop
fistps
mov
add
add
mov
mov
jg
nop
mov
outsl
pop
adc
stos
mov
pop
cmp
sbb
adc
jge
dec
add
iret
add
rcr
shrb
xlat
in
ljmp
pushf
leave
scas
lcall
xor
rcll
xor
lods
adc
mov
pop
jnp
int3
mov
leave
dec
pop
jo
cmp
mov
sub
mov
repz
cmc
call
lahf
lock
shl
cwtl
add
scas
stc
cli
pop
add
mov
mov
mov
fmull
faddl
in
dec
and
mov
push
out
adc
mov
push
sar
mov
scas
adc
js
fwait
push
add
mov
popl
fsincos
sub
nop
jbe
push
fwait
ljmp
pusha
dec
jae
xchg
xchg
jge
leave
sbb
cwtl
lahf
xchg
lea
dec
mov
dec
stos
cmp
push
data16
iret
js
fnsave
mov
les
inc
pop
push
mov
mov
inc
aam
mov
pusha
xchg
and
outsb
sbb
push
xchg
mov
sbb
addl
cmp
rcr
inc
out
stc
mov
vmread
cwtl
frstor
mov
fsubr
loop
fistpll
xchg
lret
cmp
fs
mov
push
push
push
sbb
cmp
fldcw
push
incl
mov
xor
pop
mov
test
cmpsl
cmp
adc
inc
sub
int3
xchg
and
jg
sti
mov
mov
adc
pop
mov
sarl
xchg
aaa
lahf
les
push
mov
add
fildll
push
xorb
mov
add
not
lret
es
out
mov
adc
imul
jne
pusha
iret
popf
fsubr
and
outsl
in
mov
in
popa
adc
mov
sbb
push
jns
push
adc
push
push
test
inc
mov
or
fadds
add
movsl
push
jne
loope
in
mov
xlat
xchg
pusha
pop
mov
xchg
js
out
xlat
mov
cld
cmp
sbb
dec
xor
ret
add
jae
mov
adc
pop
fucomp
imul
popf
dec
ret
cmp
inc
jae
sub
push
pop
js
add
insl
ficoml
test
ljmp
scas
adc
adc
inc
add
gs
mov
cltd
jg
fcomp
lcall
sub
adc
orl
xchg
inc
fadd
cmp
mov
lcall
loope
jg
push
les
xor
js
dec
push
out
or
ds
inc
push
xchg
inc
scas
sti
shrb
test
fwait
mov
push
ds
inc
dec
mov
cmp
mov
or
dec
mov
lahf
xor
scas
data16
pop
jb
inc
nop
fcos
mov
mull
xchg
jl
idiv
insb
or
stc
lcall
dec
fisubl
jo
mov
mov
iret
and
fnstcw
jmp
aad
cld
add
and
outsb
into
mov
jecxz
loop
dec
adc
push
or
leave
push
data16
jbe
cmp
ret
add
push
loope
push
ja
inc
xchg
mov
sub
ret
sub
out
inc
push
jp
sbb
mov
outsb
repnz
add
add
adc
pop
pop
fcoml
data16
pusha
xchg
lcall
imulb
insl
cmc
cwtl
out
pop
inc
inc
jecxz
pop
xchg
cmp
mov
or
jg
pop
in
inc
cmpsl
xor
push
xchg
jmp
imulb
rorb
pop
and
mov
pop
into
xchg
das
push
mov
inc
imul
dec
jmp
sbb
in
andb
fbld
sbb
stc
cmpsl
xchg
stos
cmp
cmp
sub
pop
jo,pn
mov
cmp
dec
cmp
pop
loope
lret
push
jne
xchg
test
out
and
xchg
mov
adc
testl
sbb
push
sub
fdecstp
lret
loope
mov
cmp
fmuls
push
push
jne
rorl
add
fnstenv
mov
stos
push
mov
in
inc
jp
popf
mov
ljmp
xchg
lods
in
jle
dec
jne
xchg
inc
mov
pop
negb
insl
cld
cld
mov
out
in
jle
xchg
fnstsw
das
dec
dec
das
mov
lcall
push
mov
mov
and
cmp
pop
je
pop
ret
push
je
dec
mov
dec
out
mov
xorl
sub
arpl
fildl
bnd
mov
adc
pop
cmp
ds
xor
or
mov
das
in
es
inc
xor
insl
mov
jne
insb
in
addl
in
hlt
cmp
sub
adc
mov
xchg
sub
fiadds
jnp
pop
ljmp
outsb
mov
sbb
mov
inc
add
data16
stos
fnstcw
sbb
adc
dec
lcall
jecxz
clc
xor
ret
mov
insl
cmp
cwtl
mov
cmp
enter
sahf
add
mov
sbb
cmp
out
int3
add
hlt
lods
mov
cmp
mov
pop
add
and
sbb
jmp
push
in
mov
mov
sbb
pop
xchg
popl
lea
test
fnstsw
rcll
notl
mov
cmp
data16
aaa
adc
mov
xor
mov
adc
pop
dec
adc
sbb
pop
jnp
mov
aaa
and
mov
dec
loope
addl
aam
int
jno
ret
popf
incl
xchg
jl
in
sub
test
rorl
negb
popf
pop
ljmp
add
add
int3
xlat
inc
nop
inc
decb
les
pop
les
add
xchg
fldenv
lahf
and
push
ret
sub
mov
sub
int
adc
mov
jp
dec
loopne
add
mov
sbb
ror
dec
xchg
push
mov
ficoml
lock
stos
mov
outsl
ss
push
sbb
mov
xor
inc
dec
sbb
es
je
mov
in
and
movsl
jg
cltd
aas
mov
cld
xchg
push
mov
mov
inc
push
inc
adc
lahf
jp
aas
enter
mov
shrl
xchg
and
jg
mov
xor
xchg
adc
xor
mov
push
sub
xor
stos
mov
jno
out
lcall
mov
scas
inc
mov
xorb
jne
jmp
push
jmp
into
pop
push
jle
xchg
jnp
push
lds
sbb
mov
jmp
add
scas
cmp
xchg
out
out
call
cltd
xlat
pop
adc
mov
inc
jecxz
pop
test
lea
or
dec
mov
mov
addl
sbb
mov
sub
mov
xorb
jnp
rcr
dec
rorl
movsl
cld
inc
jnp
sbb
jno
rcr
jbe
lcall
add
movsb
arpl
ljmp
daa
jg
mov
fistpl
into
leave
cmpl
mov
test
mov
xchg
jb
in
jl
sub
push
pop
fcoms
gs
add
nop
in
sub
adc
cli
lock
inc
ja
fs
mov
ljmp
push
ret
jg
mov
lahf
xchg
cmp
int
sbb
mov
nop
iret
xlat
pop
xlat
mov
lret
shlb
lret
ja
bound
inc
outsl
int3
test
add
call
shll
das
or
and
mov
adc
ret
cmc
testl
mov
lods
enter
add
inc
inc
adcb
dec
leave
int
push
add
jle
xchg
mov
repnz
daa
mov
jge
inc
mov
ss
xchg
lods
sbb
add
adc
movsl
shrb
std
inc
test
iret
jb
les
mov
js
incl
sarb
push
fistpl
mov
xor
fwait
inc
mov
pop
sahf
rcrb
subl
xchg
mov
pop
pop
dec
sub
jecxz
mov
lret
push
insl
fsubs
mov
jbe
das
cmp
clc
popa
xor
push
xor
add
sub
jno
push
stos
push
adc
mov
pop
nop
jno
rcr
add
pop
jg
sbb
pop
stc
test
cltd
mov
xchg
and
pop
and
sbb
xchg
insb
xchg
xchg
hlt
les
test
outsl
aam
int3
inc
fdivl
pop
aas
fmull
inc
stos
js
ror
jns
sbb
push
rorb
fwait
dec
mov
bound
push
pop
dec
cmp
or
xchg
push
inc
xchg
pop
ss
shll
andb
mov
rorb
xchg
xchg
cmp
test
scas
mov
int3
scas
xor
call
into
and
icebp
gs
sub
cmp
inc
mov
movsb
clc
test
sarl
jecxz
call
clc
dec
xor
std
mov
inc
mov
lret
aam
into
mov
mov
sub
std
xor
and
adc
jge
xor
insb
dec
and
iret
mov
data16
mov
pop
mov
mov
jbe
push
sub
mov
fdiv
mov
xor
sbb
lock
push
addb
fsubs
test
push
rorb
and
add
mov
orl
mov
pop
call
adc
insb
inc
ficoms
mov
cmp
pop
dec
mov
inc
in
lret
sub
in
mov
enter
and
test
mov
sarl
loope
jl
jg
and
gs
sub
cmp
stos
icebp
icebp
xor
inc
xor
fisttpll
xchg
inc
mov
push
aas
popf
in
inc
pop
pop
xlat
jbe
push
cltd
dec
shll
mov
pop
adc
pop
xor
sarb
mov
jne
mov
xchg
xor
adc
bound
test
and
sbb
push
dec
mov
insb
in
ljmp
xchg
les
pop
out
inc
or
or
mov
ds
std
mov
mov
test
xchg
adc
and
cmpsl
fcomps
pop
or
dec
dec
lahf
ds
aaa
mov
jl
pusha
add
pushl
jmp
mov
inc
mov
enter
adc
push
sbbb
nop
push
mov
push
clc
push
inc
jmp
lea
dec
imul
xchg
call
clc
sbb
xchg
je
data16
popa
test
lock
movsb
dec
sbb
sbb
mov
rorl
gs
aam
inc
clc
pop
add
dec
mov
imul
mov
sub
inc
inc
fsubs
or
xor
ffreep
xchg
sub
clc
mov
jge
or
cmp
bound
push
adc
mov
fimuls
push
push
mov
cmpsb
mov
pop
pop
in
jge
scas
mov
pop
xchg
cmpsl
stc
ljmp
add
daa
enter
popf
add
dec
mov
pop
xchg
into
aad
sub
fbld
adc
stc
dec
iret
dec
in
loop
dec
cmc
shll
movsb
push
add
into
loopne
repnz
ja
movsl
push
fldt
cmc
movsl
push
nop
loopne
cmc
sbb
jmp
adc
fst
rcrl
and
cmpsl
adc
jo
mov
inc
inc
mov
or
adc
imul
push
sbb
aam
fcmovbe
sbb
xchg
adc
xchg
dec
pop
push
popf
xor
push
lret
and
mov
outsl
lods
lods
cs
add
xor
popf
xchg
dec
js
in
push
pop
scas
mov
pop
arpl
or
cwtl
je
out
adc
mov
jmp
jb
hlt
sub
outsl
adc
popa
lret
or
xor
fnstcw
cmpsb
dec
jle
stos
inc
inc
movsl
push
sarl
in
jno
pop
inc
xchg
pop
and
push
cmp
fwait
lods
cmp
jae
lods
out
imull
sbb
icebp
cli
stos
mov
xchg
rolb
insb
dec
and
test
imul
imul
xor
add
pop
and
push
adc
pop
out
ror
aad
icebp
mov
movsl
sbb
out
test
mov
shll
cwtl
mov
add
fistps
dec
sbb
pop
repz
mov
mov
pop
jge
out
add
fwait
arpl
and
mov
pop
inc
dec
mov
orl
inc
shll
dec
out
imul
das
adc
mov
mov
xor
mov
pop
cmp
aaa
xor
sbb
dec
add
mov
mov
mov
sbb
dec
adc
cmp
push
pop
ret
cmp
xchg
aaa
loop
rcr
out
dec
repz
sbb
xchg
imul
stc
negb
arpl
xchg
sub
push
lret
add
xchg
sbb
lods
cli
neg
jle
into
nop
mov
push
ds
add
jle
popa
mov
cmp
sbb
mov
mov
cwtd
cmp
dec
mov
leave
xor
push
mov
inc
jmp
push
in
data16
lret
das
popa
mov
mov
sub
xorb
mov
loope
and
fsts
sahf
gs
push
out
and
out
and
idivb
mov
leave
jecxz
test
lret
xchg
sbb
fdiv
xchg
cli
cs
sub
pop
ja
xchg
mov
xchg
popf
add
fisubrs
ret
ljmp
mov
or
jnp
jl
xor
cld
and
stos
fs
lret
jge
and
add
je
repz
imul
or
out
hlt
call
jb
insb
arpl
js
rcrb
sbb
rcrb
int3
out
mov
or
jg
mov
hlt
popa
iret
jno,pn
sub
push
jae
xchg
loope
push
sahf
add
adc
lret
test
and
lock
lcall
loopne
ds
test
scas
lods
fisubrs
movsl
inc
into
nop
stos
repnz
mov
lcall
mov
notl
add
dec
loope
addr16
add
mov
js
inc
test
stos
scas
push
stos
mov
dec
lcall
mov
push
inc
mov
in
cmp
or
fstp
hlt
and
pop
loop
push
lret
adc
and
sbb
ja
sub
pop
movsb
aam
ljmp
dec
call
lret
pop
int
xor
fsubrs
adc
std
jmp
popa
lret
in
aaa
stos
adc
je
inc
pop
daa
pop
insl
les
test
pop
sbb
ss
mov
pushl
cmp
movsb
dec
jg
testb
aam
stos
repnz
movsb
cmp
fdivs
stos
add
fbld
lcall
jno
insb
push
icebp
xchg
sub
test
out
mov
cmpsl
xor
rcll
flds
cmp
mov
xlat
pop
cltd
bound
int
imul
cwtl
sahf
sub
jp
xor
lea
mov
cmpsb
inc
xorl
sbb
cmp
icebp
add
or
sub
clc
sub
clc
test
lret
xor
inc
sbb
adc
jnp
scas
pop
sti
ljmp
add
sub
jmp
pop
out
in
adc
xchg
jno
jae
es
lahf
std
jns
pop
call
and
iret
xlat
mov
jl
ljmp
ja
outsb
dec
mov
fmul
mov
add
push
movlps
mov
inc
movsl
jge
mov
cli
mov
movsb
push
dec
int3
xorl
mov
add
inc
jns
jb
add
push
xchg
mov
xchg
mov
jecxz
pop
fwait
and
jb
testl
cmp
pop
cld
xchg
sbb
add
test
loop
cmpxchg
imull
xchg
jo
bound
dec
aas
jno
rcrl
fdivs
add
mov
xor
aas
sub
inc
adc
addr16
dec
jecxz
or
fsubr
push
ds
loope
popa
xor
int3
push
mov
test
movsl
or
ret
arpl
addb
pop
mov
mov
sbb
es
or
stos
and
add
icebp
push
jmp
mov
sarb
lods
test
hlt
or
jbe
insb
sahf
movsb
inc
mov
ret
adc
push
mov
sbb
mov
lahf
out
sub
gs
shrb
xchg
xchg
push
ficoml
pop
add
repz
aaa
mov
dec
inc
sub
mov
mov
adc
nop
jg
loope
pushf
sbb
imul
es
test
aad
push
fs
dec
cmovae
arpl
inc
mov
je
imul
jb
test
and
jle
ret
dec
das
loopew
int
cmpl
xchg
imul
push
call
pop
push
dec
lods
imul
lcall
addb
sub
or
ret
ja
pop
xchg
jl
adc
jmp
mov
cmp
push
dec
sbb
xchg
ljmp
not
ss
ret
mov
mov
arpl
and
inc
pop
or
inc
imul
arpl
dec
jne
jo
jp
sub
mov
xchg
insl
sahf
gs
push
stc
std
std
pop
xchg
sub
push
ljmp
rclb
inc
addr16
leave
adc
inc
inc
shlb
xor
jbe
idivb
shl
cmp
dec
dec
push
inc
pop
inc
sbb
imul
pusha
mov
push
rcrb
sti
push
test
mov
adc
lods
std
jecxz
cs
jmp
sub
clc
lahf
aad
xor
gs
call
mov
mov
lods
push
xchg
jne
sbb
fadds
sbb
mov
and
aam
mov
cmpsb
jge
pop
jno
aad
sahf
loop
lcall
daa
test
fidivl
imul
mull
jg
ficomps
and
xchg
pop
push
xchg
imul
aad
movb
dec
dec
pop
xor
mov
xor
repz
dec
pusha
cmp
xor
push
push
sbb
mov
ds
dec
xchg
and
popa
push
dec
or
sub
and
bound
or
fidivs
jns
mov
movsl
jp
cmp
or
cmp
add
rcll
arpl
cltd
cmp
mov
lret
scas
outsb
mov
push
pop
push
imul
cmp
add
lcall
xchg
jp
negb
jecxz
int
pusha
pop
mov
in
out
inc
out
pushl
pop
adc
loopne
test
in
push
cmc
jno
and
xor
test
jmp
shlb
leave
lock
push
jge
outsb
insl
test
sub
mov
iret
popf
cmp
outsl
mov
push
fwait
adc
sbb
mov
nop
cmpl
pop
push
dec
scas
arpl
fistps
mov
xorb
test
fwait
or
into
addr16
out
jmp
mov
movsl
aas
jno
je
pop
fisttpll
push
outsb
mov
push
push
insl
mov
jg
repnz
xchg
adc
outsb
lcall
rcl
daa
dec
lods
adc
std
pushf
sbb
icebp
ljmpw
push
dec
movsb
js
in
xchg
mov
dec
out
mov
je
jg
rolb
xchg
add
jg
in
popf
push
add
jmp
mov
ss
fstps
push
add
push
js
adc
add
fmuls
cmp
pushf
outsl
push
xor
rcr
in
call
mov
adc
inc
push
pushf
xchg
mov
pushf
adc
or
pop
test
subb
dec
push
adc
loopne
stos
lods
xchg
outsb
cmp
mov
scas
dec
jae
int3
add
mov
xchg
and
or
stc
or
shll
stc
movsb
mov
push
movsl
lret
lods
and
mov
lock
sarb
ret
int
dec
cltd
push
and
xchg
pop
xchg
mov
bound
xor
cmpsb
push
cwtl
jp
mov
sub
inc
aas
cmc
jno
iret
or
stc
lods
xor
ja
scas
or
cmc
inc
into
cmp
mov
clc
jbe
dec
outsb
daa
cld
xor
icebp
add
jmp
jns
jmp
stc
add
adc
daa
cmpsl
adc
push
repnz
icebp
cmp
into
lock
lods
lahf
push
nop
arpl
sub
repz
ss
cmpsb
inc
xchg
fs
push
adc
or
or
xor
movsb
outsb
xchg
lret
cmpl
sbb
push
ret
in
adc
mov
sbb
fbld
aam
cmp
out
cmp
ljmp
outsb
lods
jge
jl
jo
in
sar
fcmovnu
bound
insb
fabs
daa
cmp
bound
xor
nop
xor
leave
aas
dec
movsl
jo
dec
hlt
repz
mov
scas
and
sbb
testl
es
inc
es
in
stos
fs
push
movsb
out
mov
or
fsubrp
cmpsb
repnz
pop
mov
push
cmpl
or
das
pop
xor
sub
jno
call
call
sarl
mov
push
insb
cmp
sbb
pop
xor
mov
xchg
jmp
mov
adc
adc
sub
cli
jecxz
out
mov
pop
add
mov
xchg
lds
loope
lods
dec
mov
sub
cwtl
dec
inc
push
and
xor
cmp
and
test
inc
jmp
out
lret
mov
scas
ret
daa
enter
cmp
sbb
pushf
fbstp
jp
lret
push
fsubl
or
aad
hlt
in
cld
dec
or
test
aad
adc
xchg
pop
ret
push
stos
bound
pop
test
or
xor
pop
jns
ja
mov
cmpl
mov
leave
mov
pop
dec
mov
aam
pop
int
stos
cwtl
aaa
aaa
push
sbb
add
xor
or
aad
pop
mov
mov
movsb
xchg
and
iret
mov
adc
dec
ja
and
jae
outsb
lods
push
adc
js
inc
nop
lods
push
mov
les
insl
pop
stos
mov
pop
mov
stos
sbb
fidivrl
in
or
cmp
sahf
test
das
sub
mov
or
arpl
pop
in
movsl
lret
movsb
adc
add
lds
test
jl
pop
shlb
push
lret
iret
in
or
pop
cli
mov
shll
mov
ja
xchg
incb
xor
pop
add
mov
dec
push
aam
xchg
push
dec
popf
mov
jg
dec
cmp
popa
dec
jae
icebp
popa
std
cmpsl
mov
xchg
push
jl
jmp
into
xchg
lcall
cmp
and
sub
jo
pop
pop
sbb
cltd
adc
cmpsb
or
mov
mov
push
adc
jle
popf
or
add
jmp
inc
jp
jb
xor
aam
testl
lock
insl
jp
push
add
inc
lods
push
push
data16
xor
mov
roll
ljmp
cvtps2pd
insl
dec
xchg
cmc
sbb
xchg
pop
dec
xchg
xchg
adc
jle
test
and
lock
mov
repz
arpl
lods
pop
out
push
sub
inc
mov
scas
adc
inc
push
shrl
inc
cmp
lods
cmp
and
push
push
daa
mov
stos
xchg
test
pop
adc
push
loopne
movsb
imul
repz
out
push
stos
inc
sbb
add
add
jecxz
push
int3
jne
sahf
repnz
sahf
adc
mov
fidivrs
or
jecxz
xchg
lcall
sub
dec
fsubrp
dec
xor
ret
enter
in
loopne
pop
pop
mov
sbb
icebp
xchg
out
inc
int3
icebp
popa
pop
pop
fdivrl
adc
jecxz
test
loope
fs
sub
fninit
shll
and
adc
icebp
adc
fwait
adc
and
pop
fildl
pop
insl
lods
ds
pop
inc
dec
xchg
jbe
out
popf
cmp
js
shll
popa
scas
les
lods
sub
cmp
mov
mov
xor
jmp
pop
iret
fsubrl
xor
pop
and
movsb
inc
dec
test
idiv
scas
jmp
dec
cwtl
mov
xor
lds
xor
idivl
cmp
dec
inc
ljmp
mov
inc
mov
in
and
mov
sub
mov
push
or
pop
into
notb
mov
pop
and
ljmp
mov
pop
xor
imulb
or
dec
gs
rclb
cmp
mov
js
adc
or
lock
scas
pop
push
fmul
mov
repz
xchg
pushl
aaa
imul
dec
jo
xor
insb
in
out
pop
into
les
inc
xor
cmpsb
aaa
aad
push
xor
mov
add
cmp
cli
fisubrl
mov
sti
imul
jle
popf
iret
xor
gs
test
int3
mov
addr16
xchg
cmpsl
and
push
fmull
push
inc
mov
sub
mov
add
push
in
pop
add
dec
push
push
je
mov
mov
add
rcrl
jnp
fucomi
bound
mov
or
jnp
push
or
enter
jp
fdivr
xor
in
movl
das
adc
cwtl
xchg
or
inc
iret
or
imul
or
and
sbb
aaa
xchg
add
loopne
call
out
call
sbb
and
cmpsb
daa
cmc
fsts
mov
orb
call
jl
cmp
cmp
inc
rcl
sbb
jmp
out
leave
out
push
test
loopne
xor
fsubs
add
loope
mov
mov
loope
cld
push
or
sahf
pusha
das
push
cmp
sub
or
cmpb
in
into
mov
mov
pushf
andb
sbb
hlt
mov
data16
js
ror
jno
mov
mov
out
push
bound
xor
dec
adc
push
repnz
out
mov
sbb
adc
sbb
aam
add
mov
add
jno
lret
sbb
and
scas
or
ret
cmp
aad
or
cmp
adc
xchg
cmp
icebp
lcall
jo
or
mov
fstl
stos
mov
adc
es
pop
insl
into
jae
adc
loop
push
adc
push
pop
jg
lods
mov
sti
aas
mov
mov
sub
fistpll
mov
sbb
push
lret
xchg
mov
adc
or
fildl
mov
cmp
flds
sbb
mov
lret
or
repz
xchg
mov
stos
push
rcll
cs
gs
or
test
dec
mov
pop
movsb
subl
iret
cmp
pop
xlat
pop
adc
mov
jle
lcall
outsl
les
out
cmpsb
mov
mov
lds
mov
call
in
jnp
cmpsb
call
loopne
sbb
rcrb
or
xor
fstps
arpl
daa
fstpl
mov
mov
addr16
push
mov
mov
adc
test
cld
in
xchg
shll
adc
fsub
dec
mov
aam
std
pusha
xor
leave
inc
stc
add
xlat
adc
fidivrl
in
ds
lea
jp
in
mov
add
push
cmp
fs
les
in
arpl
stc
insl
test
push
out
outsb
outsb
mov
or
push
add
mov
hlt
js
pop
flds
ljmp
push
out
push
ret
cmc
mov
lds
xchg
mov
push
dec
xorl
rclb
in
sbb
jp
pop
xor
pop
insb
in
add
mov
loopne
jnp
loope
shl
xor
sbb
enter
dec
loope
in
mov
xchg
aaa
jle
cmpsb
sub
xor
pop
push
lods
bound
pop
lds
sti
adc
add
push
subb
pop
lods
ss
push
imul
sbb
or
mulb
rcl
ss
shl
addl
ja
lods
lahf
into
and
movsl
jb
xor
pop
mov
lea
xchg
outsl
adc
or
int3
dec
dec
addr16
aas
mov
mov
xlat
mov
mov
mov
mov
adc
jle
imul
sub
clc
add
inc
stos
je
mov
arpl
push
push
add
push
pop
in
mov
dec
insl
mov
or
repz
leave
add
dec
pusha
or
jbe
xchg
xchg
aam
sub
push
dec
pop
cmp
cmc
cmp
lea
mov
imul
inc
dec
lcall
mov
lret
jge
push
daa
cwtl
out
loope
mov
cwtl
xor
or
jno
das
aaa
jge
sub
sti
adc
lret
ret
lods
mov
pop
imul
sub
xchg
idivl
push
cmc
add
push
jbe
mov
cmp
loope
jle
fdivs
cltd
cmp
mov
hlt
or
xor
imul
pusha
mov
add
roll
rcll
pop
mov
mov
in
sub
mov
es
push
cmp
decl
xor
mov
jbe
daa
mov
cmp
mov
xchg
sbb
hlt
pop
in
es
adc
xchg
pushf
sub
mov
and
push
pushf
decl
sbb
stos
mov
inc
dec
jge
cltd
add
sbb
outsl
push
xchg
push
push
mov
inc
lock
adc
jns
xchg
stos
mov
jge
or
test
inc
popf
mov
gs
jae
lea
jg
or
cmpsb
mov
inc
xchg
jbe
lods
sbb
mov
push
mov
adc
hlt
cltd
sub
into
imul
cmpb
imul
add
in
mov
and
pop
imul
and
stos
jl
mov
pop
jns
mov
ret
mov
mov
pop
dec
ret
xor
fsubr
xorl
lock
out
inc
shrb
dec
xor
inc
add
add
inc
sbb
decl
add
shl
call
mov
push
or
lahf
repnz
push
adc
pop
sub
sub
es
cmpsl
inc
cs
jmp
mov
mov
adc
test
imul
adc
sbb
addb
sub
repz
shrl
sbbb
pop
mov
lret
adc
pop
fstps
lcall
add
push
xor
mov
stc
ret
jns
push
lret
add
inc
push
fwait
mov
in
aad
sub
in
mov
mov
loopne
je
cmp
in
adc
fwait
arpl
sub
and
negl
sub
ret
es
sbb
mov
test
hlt
aaa
adc
add
and
ret
lods
sbb
cs
insl
sbb
sub
in
cmp
addr16
testl
je
cmp
js
and
mov
mov
cli
or
sub
ds
mov
not
imul
xor
and
mov
and
sub
and
and
ss
jae
and
add
stos
cmp
test
popa
add
cmpsb
cmp
jg
pop
and
add
std
lods
and
add
dec
sub
movsl
out
and
xchg
stc
fcompl
and
movl
pop
int3
jb
inc
cmpsb
inc
sub
sub
push
imul
dec
mov
std
icebp
mov
daa
in
leave
push
adc
sarl
or
icebp
push
repz
rclb
xor
call
outsb
fstpt
push
mov
dec
test
daa
mov
jle
movb
inc
mov
daa
dec
in
lods
lods
test
adc
shll
lret
movsl
mov
inc
sti
xor
and
insl
xor
test
add
in
movsb
jle
dec
lret
loop
ss
in
inc
sbb
int
lea
dec
orps
and
sar
dec
jbe
lods
rcrl
mov
jmp
sbb
pop
xor
outsb
pusha
ds
std
push
in
jge
test
xchg
pushf
push
imul
mov
mov
bound
jne
rclb
jbe
mov
ficoml
daa
orl
aaa
jmp
mov
jmp
and
adc
push
inc
stos
pop
xchg
pop
pop
movsl
mov
lea
addb
push
push
mov
or
lcall
mov
add
shlb
insb
das
or
lahf
jge
dec
mov
and
cld
aad
jge
addr16
sti
popf
xchg
and
sbb
rolb
popa
add
lock
shrl
inc
out
das
mov
jp
stc
clc
push
rcrl
sbb
push
xor
sbb
cmpsl
jge
cmpsl
into
mov
ret
push
xchg
cli
je
sbb
mov
pop
and
dec
andl
in
loope
xor
js
mov
jno
push
out
sbb
jns
xor
repnz
mov
test
bound
adc
push
cmc
addb
lcall
xor
je
sub
test
push
fistpl
mov
daa
jne
iret
inc
repnz
repnz
xchg
dec
data16
adc
lret
mov
fwait
insl
jne
ljmp
xchg
fcmovnb
cmp
xlat
cmp
popa
je
popa
xor
leave
xor
out
push
cwtl
push
push
or
cltd
dec
mov
arpl
inc
lods
jmp
lret
ss
jno
mov
lahf
fstpl
sbb
xor
scas
mov
fimuls
mov
mov
adc
out
icebp
in
pop
jle
js
xor
inc
outsb
jle
lock
xchg
das
lret
idiv
sbb
out
adc
aaa
mov
dec
push
push
cwtl
add
push
lods
jg
adc
xchg
sahf
sub
add
inc
pop
pop
jns
inc
shrb
shl
and
loopne
sbb
sub
cmpl
sbb
lea
enter
sahf
addr16
mov
nop
outsb
lods
bound
clc
loop
fbld
push
sub
xchg
aas
or
xchg
mov
mov
mov
sbb
leave
adc
push
add
jbe
push
mov
push
adc
testb
push
js
cltd
jle
jmp
sub
fldenv
xor
lods
lods
pop
loope
mov
daa
das
push
in
loopne
sbbl
jp
push
mov
and
xor
stc
fwait
data16
push
std
dec
fisubl
punpckldq
mov
xlat
icebp
scas
cmpsl
in
mov
mov
jecxz
xchg
mov
pop
js
push
ljmp
mov
mov
in
test
and
push
cmp
sahf
push
or
mov
std
sarl
lock
dec
push
dec
xchg
lret
dec
jae
mov
xchg
loope
in
addb
cld
push
je
sbb
stc
cmp
xor
hlt
mov
popa
xor
jle
jl
push
bound
cmpsl
pop
mov
scas
mov
ds
xchg
pop
lahf
out
mov
cmp
jae
pop
xor
ret
inc
ja
mov
les
mov
mov
pop
pcmpgtb
hlt
lds
in
xorl
mov
jbe
mov
iret
mov
sbb
insl
fs
ja
jp
cmp
mov
dec
lds
ss
mov
pop
jp
mov
mov
jge
xchg
pop
aas
loope
pop
xchg
or
push
cwtl
aad
stos
inc
pushf
popf
or
arpl
xor
sub
and
and
mov
cmp
or
inc
outsb
divb
scas
mov
jo
dec
movsb
push
mov
into
jecxz
repz
add
mov
loop
push
jne
cld
jp
mov
cwtl
jo
out
adc
fistps
dec
inc
cwtl
mov
xchg
xchg
mov
out
out
repnz
xchg
inc
arpl
sahf
and
out
xchg
cld
lcall
pushf
mov
out
fwait
or
xchg
lods
adc
xor
jne
iret
in
lods
lret
test
cmp
dec
ds
adc
dec
inc
mov
fwait
and
or
lret
lret
das
lock
pop
leave
in
mov
add
jns
cs
ss
and
out
data16
and
mov
fdivp
fs
mov
push
sub
cli
and
and
inc
lretw
add
in
iret
scas
roll
jne
repnz
add
pop
jl
fld1
push
inc
mov
mov
inc
mov
aaa
lret
xchg
or
lret
xor
add
add
sbb
orb
dec
pop
inc
or
jb
mov
inc
cltd
mov
call
lock
fdivl
aas
mov
cmc
push
or
or
pop
addr16
sbb
and
ret
add
lods
xor
dec
sub
dec
gs
jae
pushf
mov
lret
and
aam
adc
int
clc
or
testl
xchg
out
mov
cmp
or
add
sub
adc
pop
lahf
jns
push
xor
pop
in
cmp
daa
out
inc
xchg
sarb
sub
mov
ret
les
lods
clc
fwait
icebp
in
test
adc
push
mov
repz
xlat
fiadds
pushf
and
jns
mov
adc
filds
or
cmc
loope
pop
imul
test
mov
int3
xor
add
stos
mov
dec
and
xor
jb
cwtl
jmp
xchg
fnstcw
dec
cltd
cltd
call
cmpsb
mov
call
lods
push
ljmp
xor
je
xor
fcmovb
fs
inc
mov
xchg
int
mov
xchg
xor
aam
and
dec
ret
rorl
xchg
ljmp
xchg
fsubrl
pop
cmpsb
pop
cwtl
cmpsl
fisubl
fimull
inc
aad
dec
cmp
sbb
jnp
pop
and
pop
mov
imul
scas
jne
jle
aam
outsb
cmp
sbb
into
xchg
loope
add
xchg
out
and
mov
aaa
and
cmp
jmp
gs
scas
mov
stos
fidivrl
popf
mov
in
std
mov
or
jnp
push
mull
xor
pop
push
sub
dec
jbe
xchg
out
push
jg
pop
pop
fwait
sub
mov
mov
jge
lcall
fcompl
cmp
js
dec
pop
xchg
mov
and
mov
loope
mov
test
mov
enter
leave
std
xor
mov
inc
mov
inc
xchg
aas
adcb
mov
fldl
xlat
xchg
enter
clc
and
adc
sbb
inc
js
add
mov
sub
or
ljmp
incb
sub
popf
cmp
adc
xrstors
sbb
repz
fidivs
lods
mov
inc
testb
mov
cli
mov
push
adc
in
outsb
pop
or
pop
xor
dec
xchg
fisttpll
jbe
mov
cld
loop
or
sbb
arpl
mov
enter
mov
or
sub
aas
jae
and
and
ljmp
es
or
jne
push
ja
jmp
pusha
dec
ljmp
lods
idivb
aaa
cli
addr16
enter
in
push
adc
js
mov
addr16
fildll
add
jge
mov
iret
repz
or
xlat
mov
jecxz,pn
into
data16
test
xchg
cwtl
aam
rorb
icebp
pusha
out
mov
int3
xor
fldcw
cmpsb
lret
xor
mov
outsl
sbb
sbb
mov
int
fadds
or
cmp
ds
push
xchg
or
cmpsb
insb
xchg
int
repz
xchg
and
loop
and
inc
repz
fstl
add
negb
pop
inc
add
inc
push
or
mov
add
clc
insl
jne
shlb
mov
push
lcall
mov
push
adc
jp
dec
push
in
add
jle
fmuls
sbb
inc
jl
imul
fsubrl
inc
and
aad
in
imul
pop
xor
lcall
xorl
push
shr
mov
js
dec
push
pop
aam
pop
fisubs
fdivrs
push
jae
daa
or
jne
int3
mov
jmp
jns
add
cmpsl
stos
inc
ja
std
mov
push
pop
mov
pop
adc
fstpl
mov
add
sbb
sti
stc
sahf
movsb
sahf
jns
mov
in
mov
loope
jnp
xchg
push
aad
sub
movb
ss
pop
dec
or
cltd
adcl
add
push
push
mov
stos
lea
mov
adc
std
jl
popf
jp
ljmp
arpl
jl
cmp
push
inc
xchg
test
cli
lcall
xchg
pop
daa
clc
leave
dec
pusha
orl
orb
mov
xor
and
mov
mov
push
mov
push
cld
lds
pop
cmp
hlt
xchg
in
inc
mov
outsb
clc
mov
jmp
hlt
ds
subb
xor
icebp
mov
mov
addl
jnp
lods
adc
adc
addb
ja
fwait
repnz
fisubs
jge
cltd
pusha
addr16
imul
jns
push
xchg
sti
xor
lsl
out
lock
sub
enter
imul
lods
pop
gs
lea
adc
fdivrl
jg
xchg
movsb
iret
in
push
push
aaa
xchg
sub
and
fcmovnbe
rcrb
mov
lahf
imul
sub
xchg
mov
xchg
cwtl
and
scas
inc
jl
xlat
mov
dec
movsb
dec
cmp
fisubl
hlt
pop
ret
ds
insl
movsb
mov
jno
mov
push
icebp
loopne
inc
mov
mov
andl
js
imul
int3
mov
outsl
daa
and
sti
jb
aas
frstor
fcmovnbe
lock
icebp
mov
lea
in
xor
add
mov
mov
mov
xchg
out
xchg
punpckhbw
jecxz
sahf
sbbl
xchg
repnz
inc
sub
testl
push
mov
sub
je
int
pop
sub
lds
inc
and
push
push
popa
and
nop
push
dec
inc
mov
mov
dec
in
mov
adc
sub
ja
outsb
rolb
jp
out
add
shlb
lds
add
scas
hlt
cmp
int
test
lods
inc
lret
xor
xchg
xchg
or
or
sub
dec
xor
cmpb
cmp
ret
sti
std
sbb
sub
int3
and
je
and
stos
xor
jecxz
test
adc
xchg
lea
inc
push
movsl
jp
adcb
cmpb
add
cmp
xor
rclb
repz
fists
mov
push
mov
aas
rorl
mov
lret
cmp
inc
in
enter
xor
arpl
out
adc
cs
jnp
mov
cltd
or
sub
xor
adc
cli
test
push
nop
scas
arpl
outsl
ficoms
in
and
or
data16
jo
or
shll
jl
icebp
mov
out
mov
push
cli
or
in
jno
in
mov
pop
add
lds
ss
xchg
bound
mov
push
inc
stos
pslld
cmp
shll
popa
sub
or
push
mov
adc
or
push
fistpl
lock
xchg
adc
and
or
lods
or
les
fsubrs
out
jp
sub
cmc
ret
dec
int3
arpl
adc
adc
es
push
jne
or
jnp
mov
sbb
mov
jp
mov
sub
inc
fisttpl
inc
aad
fs
arpl
xor
and
jne
test
dec
add
pushf
ja
mov
ja
out
addl
mov
push
xlat
repnz
push
sub
cmpsb
push
push
imul
mov
adc
das
xchg
fbstp
xorl
inc
leave
loope
ja
cmp
add
lahf
lods
sub
or
insb
mov
jmp
in
adc
js
mov
dec
pusha
xchg
jne
repnz
popf
fistps
lock
bndldx
test
lods
mov
mov
fmul
mov
push
xchg
ljmp
xor
xchg
mov
sbb
nop
xor
nop
pusha
or
dec
ss
inc
adc
adc
out
fwait
inc
sti
in
xchg
pop
lret
mov
add
sahf
jg
mov
out
lretw
xor
je
test
cli
mov
inc
sbb
sub
mov
movb
and
mov
mov
mov
out
xor
sub
int
mov
jns
cmp
les
leave
add
or
mov
hlt
outsb
cmpsl
jne
iret
repnz
outsb
ss
call
cmp
lock
cmp
fwait
inc
xchg
pop
xor
adcl
push
out
cmp
sbb
sub
repz
add
sub
imul
dec
xchg
push
pop
sbb
xchg
pop
push
xchg
inc
hlt
or
aas
pop
mov
ja
and
mov
loop
adc
pop
push
push
xchg
lds
inc
shll
add
sahf
xchg
jb
ja
dec
nop
jp
lods
cs
and
hlt
dec
xchg
xor
sbb
addr16
pusha
mov
jbe
aam
ss
mov
repz
or
push
xor
inc
lcall
movsl
loopne
lahf
std
int
add
aas
loopne
filds
cmp
add
lea
push
and
ret
pop
pop
inc
outsb
lea
mov
aad
or
jecxz
popf
mov
aaa
mov
push
mov
loop
dec
pop
jne
fs
movsl
mov
jne
or
insb
repz
mov
ss
gs
sub
popf
je
jecxz
fcmovnu
lds
aam
jae
add
cmpsb
or
inc
inc
fcmovnbe
jns
std
les
xchg
aaa
mov
ss
xchg
xor
fs
cmp
test
or
jnp
ficoml
scas
dec
xor
sbb
mov
push
mov
pop
in
std
inc
xor
mov
movsl
in
inc
add
pop
es
mov
mov
fwait
loope
aad
repz
dec
xor
cwtl
test
ja
pusha
adc
mov
cmpsl
cmp
lea
test
mov
nop
xchg
fwait
push
add
adc
jmp
pop
and
sbb
mov
dec
scas
sub
or
sbb
xlat
ror
aad
enter
pop
push
mov
or
and
or
imul
xchg
rclb
mov
cs
pop
push
fdivp
leave
rorb
jo
sbbb
sub
cmp
push
and
pop
les
fdivrl
repnz
je
cmp
movsb
inc
mov
repz
fistpl
fs
mov
cmp
and
adc
lcall
jmp
xchg
add
test
add
xchg
inc
rcll
mov
xchg
xor
fiadds
cmp
std
cmp
mov
mov
adc
lret
push
jno
jo
push
mov
sub
adc
sub
push
mov
in
shlb
push
dec
in
mov
into
jle,pt
xchg
movsb
inc
mov
lret
lret
out
cmc
jnp
and
xchg
push
jle
inc
mov
cmp
pop
sbb
test
shrl
in
sub
fcomps
xor
test
adc
leave
je
repnz
adc
adc
sub
stos
movsb
ds
dec
cs
stos
loopne
lcall
fiaddl
les
sbb
fnsave
sbb
and
or
dec
pop
idivb
jg
sbb
xor
xchg
scas
mov
mov
cmp
mov
out
or
aaa
mov
mov
dec
aaa
pop
call
mov
ljmp
jecxz
push
mov
mov
rcrl
ljmp
xchg
into
dec
push
mov
pushf
ficoms
out
roll
fcmovbe
jp
xchg
jns
mov
or
fdivrl
adc
lcall
cmp
add
repz
or
outsl
bound
gs
xchg
xchg
lahf
mov
mulb
ret
sbb
int
mov
rcrl
les
scas
push
imul
in
xor
fidivs
outsl
aas
mov
xor
jg
jne
cmpsl
sub
pop
mov
insb
insb
or
add
stos
xchg
mov
dec
cltd
add
jg
xchg
stos
push
xor
mov
lcall
cmp
into
mov
cs
mov
dec
dec
enter
in
jne
lret
out
mov
xor
and
mov
add
mov
pop
sub
xchg
and
movsl
and
jb
cmc
lock
stos
sbb
movsb
clc
cmpb
xchg
popf
les
sub
sub
test
pushf
push
sbb
icebp
inc
sub
dec
stc
in
jo
pop
je
sub
cmpsl
jecxz
dec
cli
xorb
add
add
insl
mov
xchg
mov
add
cmp
dec
push
notl
jp
and
or
mov
outsb
iret
cmpsb
cmp
inc
mov
imul
mov
cmp
arpl
std
push
xchg
icebp
xlat
jmp
imul
jmp
nop
mov
sahf
push
call
ret
jle
lahf
xor
fwait
dec
sbb
popa
lahf
cmc
cmpsb
xor
outsl
cmp
ds
xlat
and
jo
ljmp
sub
push
sbb
popf
dec
lds
cmc
mov
test
push
push
and
jmp
push
dec
cmpsl
or
xor
inc
daa
sbb
fstpt
or
mov
aas
mov
cmpl
fsts
xchg
sbb
add
adc
jae
out
add
xor
adc
jmp
cwtl
jmp
movsl
push
dec
mov
or
push
cmp
adc
shlb
ja
xchg
xchg
mov
cld
push
rcrb
mov
fistps
iret
jecxz
sub
mov
cs
xchg
repz
mov
sahf
push
push
fwait
call
or
addr16
aaa
movsb
cmp
cmp
mov
push
popa
das
test
sub
enter
flds
jmp
or
add
leave
xchg
adc
movsb
rcrl
pop
bound
shl
iret
lock
xchg
mov
jae
sub
das
iret
lret
mov
jo
sbb
xor
in
data16
adc
cmc
sbb
dec
or
js
jmp
jae
add
pop
fsubrl
dec
add
call
int
outsl
in
lret
sbb
test
in
gs
cmp
in
push
fdivrs
addr16
sub
jae
cs
mov
cmpsl
outsl
daa
push
sub
arpl
push
test
sarl
in
sbb
mov
push
add
pushf
insb
mov
call
data16
das
inc
inc
leave
sbb
mov
sbb
pop
mov
sub
mov
out
mov
lods
mov
int3
lods
fwait
int
mov
xor
jecxz
fdivrs
dec
in
lahf
mov
jge
cmp
cmp
pop
or
jl
and
mov
pop
sub
push
mov
jle
lret
sbb
les
adc
sub
fistpl
inc
add
mov
and
ficoml
cld
int
xor
or
cwtl
in
cmpsl
outsl
jae
and
ror
pop
adc
cmp
adc
sahf
mov
ret
xor
aam
xor
mov
xor
arpl
outsb
sbb
ljmp
loope
out
jno
idivb
dec
mov
inc
push
push
cli
into
aad
inc
shrb
mov
adc
test
and
arpl
rcll
popa
cmp
cltd
mov
mov
push
je
cs
aaa
mov
pop
cmpsl
adc
stc
movsb
add
lahf
dec
daa
sbbb
jecxz
mov
ljmp
call
in
imul
lcall
push
jb
mov
or
fldt
push
test
or
fldt
cld
pop
js
adc
adc
mov
and
test
and
ffree
mov
and
loop
sub
add
sbb
push
mov
in
push
xchg
xor
mov
mov
and
mov
inc
mov
iret
loopne
faddl
dec
mov
add
scas
in
lea
fwait
mov
inc
out
cmpsl
mov
mov
in
cli
ret
or
add
xchg
adc
and
pop
mov
ss
cmp
push
roll
mov
int
jb
lahf
mov
add
jbe
jb
inc
fiaddl
pop
in
add
cmp
popf
in
mov
je
andl
mov
or
divb
clc
mov
js
and
repz
fcoml
sub
inc
xchg
jecxz
shrb
pusha
into
mov
jno
or
xchg
jo
xchg
pop
jb
xchg
scas
sub
ficomps
and
jnp
xchg
inc
mov
cmp
mov
push
or
lret
js
mov
stos
pop
lds
xlat
push
adc
sub
sub
sub
xor
mov
iret
mov
mov
push
push
add
into
mov
pushf
mov
cmp
popl
jg
pop
pop
jp
in
rol
cmp
in
fnstsw
jp
mov
std
pop
pop
adc
add
cmp
bound
push
sbb
sbb
add
mov
fcoml
dec
xchg
xor
das
jne,pn
inc
mov
aas
loop
call
test
jno
addl
cltd
adc
and
mov
lcall
es
pop
pop
push
leave
cmpsb
hlt
and
mov
push
xchg
xchg
mov
jecxz
hlt
fnstcw
jae
dec
aaa
rcr
xchg
lahf
xor
xchg
fistl
pop
dec
nopl
xor
rolb
shll
push
ljmp
shll
loop,pt
call
and
xlat
ds
into
dec
movsl
bound
outsl
lret
pushf
movsl
loopne
outsb
xor
nop
flds
adc
adc
sub
arpl
mov
hlt
cmp
or
scas
add
adc
push
int
mov
mov
cmc
lret
int3
push
or
in
add
jg
int
aas
movsl
aaa
repnz
imul
inc
cmpsb
ds
and
adc
push
fdivr
jmp
ljmp
cs
xor
mov
or
pop
add
push
idivl
adc
aam
out
inc
stos
fimuls
cmp
cmp
dec
push
mov
cmp
aad
out
daa
lret
out
push
and
dec
ljmp
loope
test
sbb
in
test
pop
jp
push
xchg
jo
mov
mov
mov
push
push
mov
mov
or
pop
dec
add
adc
and
mov
mov
enter
cmp
fdivrp
sub
cmp
test
push
shlb
ret
xor
xor
or
inc
icebp
aam
int
das
jmp
and
fs
popf
pop
jmp
mov
xor
mov
mov
mov
sub
packsswb
lea
xor
or
popf
loop
pop
fwait
dec
aam
pop
mov
ret
lea
sub
arpl
into
xchg
and
mov
jne
sbb
or
mov
insb
jnp
fdivs
aaa
cmp
pop
pushf
test
mov
mov
daa
call
xor
lea
dec
lea
fimuls
daa
aaa
addr16
es
lret
mov
mov
scas
fcmovnu
in
out
cmc
mov
scas
iret
mov
int
mov
mov
lock
xchg
jbe
mov
out
lcall
aas
mov
scas
jo
sbb
mov
scas
jns
pop
mov
adc
aam
fwait
xchg
xor
icebp
outsb
les
or
cli
pop
jmp
test
xor
adc
sbb
or
sub
sarl
cli
jno
push
xchg
add
pop
aaa
out
xor
outsl
xchg
dec
xchg
es
lahf
shr
cmp
inc
xor
jno
hlt
dec
cwtl
mov
sub
test
inc
mov
mov
negb
dec
cs
cmpsl
mov
jbe
leave
imul
in
add
ja
lods
jg
push
and
mov
xlat
jge
mov
and
cs
addb
and
out
xchg
rorl
repz
sub
fdivrl
sahf
adc
mov
push
dec
mov
imul
repz
popf
ss
hlt
ljmp
pop
mov
sub
pop
or
mov
dec
popa
mov
cmp
pop
cmpsl
std
pop
inc
loop
popf
mov
addl
adc
mov
inc
mov
cmc
pop
mov
mov
push
push
aas
iret
int3
fstl
test
aaa
loop
xchg
dec
clc
in
dec
insb
popf
icebp
sahf
fstps
adc
insl
mov
jo
aam
pop
pop
fildll
mov
inc
mov
mov
mov
pop
push
mov
shrb
ret
push
mov
sahf
jge
mov
sbb
adc
mov
mov
mov
push
ja
mov
or
xor
pop
jns
push
inc
sti
mov
and
xlat
xor
sub
ret
sub
in
mov
and
push
cmpsl
enter
mov
xchg
cmp
sub
imul
push
inc
lods
jae
nop
lret
imulb
cmpl
sbb
test
mov
xchg
sub
cltd
xor
or
dec
leave
or
ljmp
int
and
push
cmp
or
inc
hlt
out
and
add
test
cmp
fnsave
repnz
sub
popf
push
or
lret
inc
lods
and
and
into
xor
add
loopne
jae
mov
mov
lahf
test
xchg
xchg
or
push
cmpsl
push
mov
fmull
mov
lea
stos
imul
xchg
cmp
dec
fldenv
dec
aaa
add
or
inc
int3
push
mov
adc
dec
lcall
dec
xchg
into
lea
dec
add
inc
scas
or
scas
ds
ret
fnstsw
inc
das
fndisi(8087
pop
or
popf
push
and
mov
pop
sbb
xchg
fsubr
insl
and
popa
pushfw
popf
or
cmp
jge
pop
int
pop
lods
sbb
imul
leave
and
cmpsb
xor
sar
call
or
pop
dec
mov
fidivs
or
not
dec
jp
in
push
mov
mov
sahf
loop
pop
popf
ret
xor
and
push
xchg
stos
xor
je
test
mov
out
ds
cmp
xor
lea
push
push
fsubr
sub
jmp
cmpsb
or
fcoml
xchg
and
pop
sbbl
or
into
mov
andb
pop
sarb
jl
jbe
in
ret
shll
and
jl
xchg
push
or
rclb
inc
xor
xor
pop
sbb
adc
mov
xchg
xorb
andb
fldlg2
cs
inc
incl
jge
sub
test
adc
incl
nopl
push
inc
ds
sbb
jbe
mov
mov
scas
gs
add
in
push
jmp
fldln2
adc
in
sub
sahf
pop
mov
or
mov
rclb
push
xor
fbstp
pop
in
stc
mov
and
add
cltd
loopne
imul
push
outsb
cmp
mov
mov
xchg
in
mov
fcomp
das
sub
mov
sub
jbe
mov
pop
sbb
imul
and
and
xchg
popl
stos
cmp
aam
inc
mov
inc
repz
dec
inc
cltd
dec
icebp
lods
lret
or
and
and
xchg
push
xor
mov
push
push
bound
in
add
mov
push
mov
imul
dec
fs
mov
stos
nop
dec
loop,pt
and
or
pop
test
sbb
pushf
mov
inc
push
cmpb
fisubrs
imul
cmp
dec
icebp
jnp
sti
or
adc
sub
push
and
push
lock
pop
cmp
xchg
mov
scas
mov
xor
xchg
inc
xor
mov
jg,pt
pop
mov
jae
mov
mov
stos
mov
sbb
imulb
lret
xchg
pop
jo
cmp
jne
test
adc
and
mov
lcall
mov
shl
pop
cmp
mov
jns
hlt
add
out
sti
arpl
dec
mov
pushf
inc
push
add
inc
pop
push
adc
outsb
push
ret
je
cld
dec
mov
out
mov
dec
mov
jecxz
inc
sahf
loope
fnstcw
scas
aam
lods
jge
add
stc
adc
inc
adcl
addr16
aam
mov
mov
mov
in
test
lea
inc
xlat
sbb
loop
shl
xorb
xor
dec
mov
and
mov
ljmp
aaa
lock
dec
or
adc
popf
loop
mov
in
mov
mov
push
pop
mov
test
test
pop
or
pop
push
push
mov
lahf
mov
and
shrb
loopne
sbb
xchg
lods
pop
das
fstl
ss
and
dec
adc
ret
call
inc
out
in
cmp
or
adc
mov
mov
imulb
mov
aam
sub
push
popf
test
repz
adc
push
adc
insb
or
cltd
add
inc
ret
insl
or
aad
mov
jecxz
addr16
movsl
inc
adc
sbb
int
addr16
cld
imul
imul
scas
mov
jp
xchg
sub
orb
jle
gs
adc
add
mov
pop
mov
mov
test
roll
mov
adc
aad
test
cmp
mov
ret
rcl
sbb
cmp
mulb
sbbb
rcr
iret
mov
cmp
faddl
mov
sub
xchg
leave
pop
xchg
mov
out
stos
ja
add
in
inc
pop
repnz
mov
sarl
cmp
jmp
add
iret
cmpsl
bound
xchg
jl
scas
bnd
push
mov
mov
xor
rcrl
andb
fwait
dec
loope
push
push
xchg
stc
lods
sub
shrl
cmpsb
cmp
add
inc
fsubrs
outsb
pop
mov
faddp
cwtl
enter
fwait
loope
movsl
cwtl
inc
jmp
xchg
jbe
dec
inc
negl
cli
push
xor
test
xor
mov
pop
mov
ja
sub
stos
xchg
cmpsb
xor
and
stos
mov
fdivrl
push
adc
test
add
adc
aam
inc
jl
hlt
push
lods
scas
dec
mov
xchg
out
cld
xchg
jo
xor
icebp
neg
mov
inc
inc
and
push
shrl
push
mov
ja
push
xlat
push
stos
ret
push
lods
iret
adc
sub
xor
sub
cld
cmpsb
cmpsl
movsl
dec
cmp
inc
loop
ret
jle
aam
dec
faddp
orb
pop
scas
adc
or
pop
push
mov
and
mov
inc
mul
adcb
push
mov
dec
dec
ret
sti
ficompl
add
inc
test
fsubl
andb
leave
lock
adc
or
push
lods
xor
dec
sbb
in
repnz
inc
stos
or
lds
fwait
cmp
data16
pop
inc
and
cwtl
adc
jp
sahf
sbb
les
adc
push
lock
push
push
dec
enter
pop
clc
sbb
xchg
into
pop
jae
out
mov
sahf
jo
pop
cmpsb
andl
adc
or
inc
adc
jle
mov
cmp
imul
adc
popf
nop
cmpsb
cltd
mov
cmp
ljmp
idivl
popa
sti
fisubs
pusha
dec
mov
ljmp
and
xchg
xchg
sub
lahf
insb
sub
jmp
jbe
mov
fwait
jb
push
xchg
mov
cmpsl
or
jle
fisttpl
ljmp
mov
insb
inc
mov
or
stos
arpl
sahf
sti
lea
movsl
adc
sbb
xor
shlb
pop
mov
out
faddl
dec
stc
or
or
mov
enter
inc
mov
mov
mov
jmp
push
sti
loopne
push
in
ljmp
inc
cmp
xchg
testb
xchg
jno
sub
in
or
push
jmp
mov
inc
mov
jno
addb
out
movl
push
xchg
test
adc
dec
mov
and
into
mov
test
xchg
aas
sbb
push
push
mov
test
sub
sbb
loopne
pop
fcoms
xchg
push
xchg
inc
out
pop
sti
ret
mov
jl
sub
mov
pop
inc
mov
mov
xchg
iret
lods
cld
int
in
or
xchg
mov
or
add
adc
mov
cs
cmpsb
inc
sub
test
sub
out
sbb
xor
fldt
fincstp
pop
and
ja
js
adc
mov
outsb
popl
aas
and
sbb
in
mov
sbb
stos
jp
push
lods
mov
dec
int
enter
xor
mov
popf
bnd
stos
jge
out
sbbb
jge
les
add
in
add
jo
lret
sbb
les
nop
mov
je
std
fucomip
mov
ret
leave
in
idivb
sahf
cmp
push
arpl
or
adc
or
pop
push
add
lds
or
insb
jecxz
fs
cmpl
and
or
sahf
imul
inc
xor
sub
scas
push
das
call
lcall
mov
adc
sub
les
cmp
xchg
mov
lods
add
inc
imul
fs
fdivs
inc
in
repz
gs
fimuls
cmp
das
mov
mov
pop
pop
scas
adc
mov
xchg
jp
adc
adc
sub
notb
adc
jge
mov
inc
or
rcrb
lret
hlt
inc
xor
lcall
mov
mov
aaa
sub
out
add
xor
out
enter
push
sub
add
lods
stc
adc
push
and
mov
inc
push
pop
out
dec
inc
mov
and
negl
pushf
sub
xchg
dec
scas
inc
jle
jl
xchg
mov
push
movsl
jmp
pop
pop
cmp
pop
mov
aaa
inc
jo
sti
out
loope
mov
js
cwtl
xlat
clc
sub
or
ficompl
xchg
scas
cmpsl
into
jae
add
cmp
push
aad
in
lock
mov
outsb
arpl
btr
ds
test
sub
test
sub
rcrl
cmp
cmp
ffreep
fistl
pop
xlat
jae
jecxz
jl
test
mov
mov
pop
sbb
mov
xor
mov
xor
int3
dec
pop
jns
jae
mov
hlt
dec
cs
cmc
js
pop
xor
shl
xchg
lods
xlat
jo
test
push
cmpsl
jmp
add
in
movsb
mov
icebp
mull
iret
ss
inc
and
sahf
aad
icebp
cli
jns
cmp
pop
and
dec
sbb
sub
addb
scas
add
and
xchg
xchg
inc
addb
iret
mov
outsb
push
xchg
inc
mov
out
jecxz
xchg
daa
jecxz
sti
sbb
adc
insl
and
repnz
adc
iret
dec
test
das
jo
test
sbb
cmp
je
dec
mov
and
repnz
push
fdivrp
aaa
adcl
jns
decb
adc
push
lahf
mov
xor
mov
xchg
test
sub
les
xlat
loopne
enter
bound
in
shll
scas
mov
das
jmp
xor
mov
inc
sub
movsl
pop
push
arpl
fadd
dec
mov
lahf
data16
jg
pop
xor
mov
insb
lcall
les
pop
push
mov
les
jg
and
out
push
sbb
int
fistl
cltd
jno
loope
or
mov
in
shll
imul
rolb
cmp
orl
lea
test
orb
subb
stc
cli
jecxz
and
dec
call
jg
jns
mov
jl
jo
test
fwait
push
fidivs
ret
lcall
and
sub
push
mov
jns
lods
out
jne
adc
lock
shlb
push
notb
jno
lds
leave
xchg
inc
lock
fwait
in
add
repz
xchg
cmc
out
adc
mov
outsb
adc
fmuls
mov
xor
lea
adc
xchg
rorb
ja
out
mov
int3
cmp
push
test
movsl
addr16
xchg
push
dec
test
pushf
int3
jbe
test
mov
adc
movb
es
pop
outsb
inc
les
add
xchg
sub
jmp
mov
xor
xor
sbb
fs
int3
mov
cmp
push
ret
add
mov
sub
dec
pop
imul
ficoms
aad
add
lods
in
xor
scas
incl
loopne
call
fistl
lea
or
aam
aad
adc
addr16
mov
dec
add
int
sub
jne
lds
dec
pop
ljmp
daa
xorl
arpl
sub
push
in
mov
addr16
test
mov
je
push
dec
sar
insb
pop
pop
xlat
add
sbb
inc
push
push
je
mov
and
push
gs
cli
in
mov
sub
sbb
outsb
mul
xor
add
dec
insl
push
das
fidivs
rcl
std
out
push
inc
and
cmp
push
pop
stos
inc
mov
push
subl
loopne
ljmp
adc
filds
sbb
sub
lcall
cmc
js
inc
shl
fcoml
cmc
xchg
movsl
mov
out
push
sbb
or
jmp
lcall
ds
pushf
push
scas
repz
pop
sbb
aaa
add
pop
repz
mov
rorb
dec
leave
insl
add
cmp
or
lret
neg
fisubl
pop
outsl
inc
add
dec
jmp
cmp
and
jne
xchg
cld
lock
test
inc
into
mov
lods
mov
imul
dec
adc
or
jns
das
xchg
stos
or
stos
sbb
dec
movsb
inc
jl
add
lret
adc
in
jecxz
xchg
add
cltd
testl
adc
add
mov
popa
stc
pop
mov
rorb
lahf
cwtl
int
jle
idiv
shrl
sti
lret
popf
dec
mov
sbbb
sub
iret
out
xchg
jns
push
xor
ljmp
or
shlb
sbb
push
jle
in
mov
cmc
shll
mov
cmp
call
enter
sti
mov
lcall
inc
jo
mov
repnz
inc
fcomip
mov
pop
pusha
testl
push
cmp
push
mov
loop
dec
sbb
add
repnz
cs
cs
cld
in
adc
mov
lahf
leave
notl
js
js
sub
stos
in
sub
leave
bound
add
sub
mov
adc
out
dec
sbb
mov
xor
jns
jae
jle
inc
rclb
mov
sub
in
jne
or
add
xor
lods
enter
mov
pusha
mov
adcb
add
push
popa
andl
pop
sbbb
push
mov
jo
jmp
loope
js
mov
inc
mov
hlt
push
mov
in
pop
into
inc
sub
adc
shld
fwait
lret
jge
cmp
jae
adc
xchg
or
xor
mov
clc
movsl
mov
repz
jno
adc
fucomip
in
pusha
adc
and
xchg
cmc
xchg
push
icebp
not
sub
jno
pop
mov
sbbb
or
faddl
loope
ljmp
in
and
cmp
pop
les
test
dec
pushf
orl
cmp
js
data16
cmc
mov
pushf
pusha
cmp
jg
jp
les
in
mov
push
test
outsb
addr16
push
xchg
mov
or
lahf
arpl
lds
addr16
addl
xchg
add
ja
es
add
fmul
sahf
mov
sti
mov
adc
cmp
jnp
or
not
ds
data16
out
imul
mov
aad
or
shrd
stos
js
sti
out
sbb
out
xor
js
lock
test
pop
ja
xor
and
mov
cmp
aam
adc
stc
dec
push
dec
mov
mov
pop
fcoml
push
lock
into
scas
jle
out
sti
es
mov
movsl
and
in
sub
pop
imul
fwait
and
call
adc
sbb
mov
inc
mov
outsb
cmp
shlb
sbb
das
iret
dec
or
in
leave
pop
fmull
leave
ds
inc
cmp
out
inc
dec
adc
push
jle
pop
jmp
notb
fistpll
xor
lret
cmp
adc
test
jge
sbb
mov
dec
dec
jl
rorl
sbb
in
sbb
jp
pop
ror
cmp
mov
xor
outsb
inc
xor
adc
sub
add
es
cmp
out
lahf
fidivrs
arpl
adc
test
xorl
sub
sub
and
test
or
stos
cmp
push
xor
loope
insl
mov
mov
shll
stos
xchg
cli
jl
lahf
inc
clc
lock
idivb
popa
xchg
inc
inc
movsl
fwait
push
dec
hlt
popf
mov
stc
push
mov
sbb
cmp
fs
pop
xor
push
ds
lea
call
les
push
mov
mov
add
outsb
xchg
aad
sbb
lods
mov
xchg
ret
ja
insb
clc
add
neg
dec
jns
in
stos
mov
add
and
repnz
xchg
movsb
mov
rclb
cwtl
loopne
add
scas
and
loop
xchg
pop
div
xor
fwait
xchg
in
mov
lea
inc
cmp
mov
xchg
dec
ds
fcoml
push
mov
pop
addl
xstore-rng
cmpsl
xorl
mov
loope
addr16
sub
jg
pop
scas
ret
push
xor
cmp
dec
sub
push
cmp
icebp
adc
dec
mov
and
mov
jge
pop
sbb
or
mov
xor
in
mov
pop
repnz
inc
sbb
scas
lahf
inc
fs
and
or
mov
inc
cmp
lock
dec
mov
or
push
jae
add
clc
sub
and
cmpsb
ja
jecxz
mov
jge
popf
cli
lods
xchg
pop
fnstenv
jb
sbb
inc
cwtl
xor
inc
xlat
xchg
ret
cli
pop
and
cmp
jecxz
pop
ds
mov
mov
pop
or
cs
jge
call
in
xlat
divl
gs
add
jbe
xor
leave
xlat
lcall
pop
popa
aaa
or
or
dec
loop
dec
push
les
adc
xchg
push
mov
scas
sbb
jns
outsb
xchg
leave
out
mov
imul
fucom
sub
ret
push
adc
std
in
cmpsl
div
push
cmp
jmp
cmp
jns
cmp
les
and
fwait
cmpsb
out
dec
rorl
cli
movsl
mov
and
loope
cltd
mov
push
mov
dec
jns
fstp
and
js
xchg
fwait
fsubrs
insl
dec
fmul
inc
sahf
xchg
lcall
inc
and
sub
xor
add
and
jbe
aaa
nop
mov
insb
add
mov
mov
mov
jae
iret
rcll
lret
jge
stos
pop
jmp
mov
fmuls
hlt
mov
inc
jge
pop
ss
xchg
addr16
rcl
pop
mov
insl
cmp
clc
in
mov
arpl
push
out
dec
adc
in
lcall
sub
les
lahf
lret
call
mov
mov
in
addb
and
mov
fwait
xchg
add
bound
mov
jno
movsb
xlat
mov
inc
or
mov
dec
inc
and
ljmp
lock
dec
pop
cltd
cmp
mov
jno
cmpsb
add
ret
lret
add
sub
iret
pop
lcall
sbb
ret
push
sub
mov
arpl
aas
sbb
mov
repnz
lcall
stos
in
and
test
mov
dec
arpl
xor
xor
int3
push
inc
dec
jnp
addr16
sbb
lods
and
mov
call
jbe,pt
frstpm(287
aas
jl
and
jmp
rcll
push
mov
fucom
push
sbb
pop
or
outsl
cmpl
cmp
dec
insb
xor
sbb
mov
stc
das
bound
push
pop
cltd
pop
in
gs
mov
mov
and
ss
dec
cmpsl
adc
andl
ss
dec
sub
jmp
jnp
bound
xor
sti
scas
mov
jno
pusha
loopne
or
jbe
or
pop
fwait
sbb
ficoml
or
test
pop
or
jns
icebp
xor
push
push
aaa
push
data16
orl
dec
or
xchg
jnp
dec
push
fnstcw
sarl
clc
push
add
sub
add
out
add
and
sbb
in
mov
dec
in
sti
ja
push
mov
in
cld
repnz
lock
mov
xchg
outsb
push
scas
or
pop
pushw
adc
mov
mov
in
mov
adc
sbb
pop
xor
nop
lds
cmc
aaa
inc
loopne
dec
fwait
and
and
shl
sahf
shll
mov
shll
pop
cmp
cltd
fstp
mov
pop
adc
mov
mov
sub
into
stos
xchg
jp
inc
fmull
or
jecxz
xor
xor
mov
jecxz
jb
ja
pop
outsb
out
out
popa
jp
into
insl
out
xchg
jns
cmp
or
xchg
adc
push
mov
test
inc
sub
clc
pop
inc
lea
add
cmc
and
daa
test
mov
sub
xchg
jbe
shll
and
int3
mov
mov
das
es
cmp
pop
mov
sub
cmp
pop
test
dec
pop
jae
lock
mov
inc
xor
les
and
pop
lcall
stos
loop
inc
mov
fidivrl
xchg
mov
push
gs
xor
test
jae
mov
push
xor
aas
adc
sub
mov
adc
cmc
push
outsl
mov
jnp
mulb
mov
add
xchg
or
imul
bnd
xchg
xchg
mov
xor
sub
popf
scas
or
sub
xor
loop
es
shrl
lcall
mov
test
pop
mov
and
xacquire
add
sub
rcrl
xchg
fdivr
test
cli
in
js
es
or
mov
icebp
enter
lret
mov
cmp
cmp
insl
adc
jmp
fdivrl
pop
fucomp
dec
fdivl
or
add
push
rcrb
lret
pop
mov
jle
mov
das
xor
fsubs
cmc
faddl
repz
dec
cmp
js
dec
jae
sub
das
and
cs
mov
push
add
pop
jmp
daa
div
and
lcall
inc
loop
stos
loop
addr16
and
rol
jns
aaa
in
arpl
aad
cmp
pop
popa
mov
inc
pop
and
aam
out
xchg
dec
dec
mov
add
pop
and
xor
cmp
loop
pop
out
shll
adcb
push
stos
xchg
mov
mov
fidivrs
les
and
add
sbb
addr16
or
xchg
jmp
ret
xchg
clc
aam
jno
mov
iret
push
cmp
and
test
and
xchg
pop
shlb
or
sbb
js
jmp
lea
outsl
fisubrl
cwtl
rcrl
mov
mov
mov
shll
std
es
clc
lds
adc
push
push
cmp
sbb
add
ret
jo
jbe
xor
outsl
fs
sbb
das
andb
jle
jae
dec
pushf
xlat
or
mov
mov
push
movb
cmp
mov
xchg
bound
inc
pop
jne
in
push
push
adc
inc
sbb
pop
fwait
pop
daa
mov
xor
jno
jo
dec
adc
xchg
sarl
add
arpl
dec
add
or
scas
and
in
in
pop
out
mov
loop
add
or
mov
mov
addr16
jg
pushaw
push
fdivp
sbb
add
mov
push
jnp
orl
frstor
pop
scas
iret
adc
das
xchg
outsl
shlb
inc
gs
adc
mov
jbe
xchg
mov
dec
movsb
in
jecxz
mov
into
imul
dec
in
imul
cmc
jnp
aas
out
sbb
sub
gs
leave
pusha
sbb
or
inc
in
xchg
pop
decl
icebp
dec
cmpsl
addl
sahf
into
in
clc
and
add
xor
stos
jae
cmp
and
cmp
into
mov
cmp
xor
out
sub
inc
out
lea
in
insl
aam
cwtl
mov
pushf
out
fnstenv
pop
cld
iret
mov
int3
ret
out
mov
negb
cmpsl
sbb
jmp
sub
ja
adc
xor
sub
mov
out
jnp
insl
or
sub
fs
int3
or
cmp
js
jns
imul
xor
inc
daa
mov
mov
lods
or
jb
hlt
mov
cmp
cld
sbb
dec
out
imul
pop
loopne
roll
xlat
and
popf
dec
mov
out
lods
shlb
fstpt
out
js
cwtl
imull
mov
dec
or
cmp
push
pop
fstl
sub
push
mov
cmp
test
hlt
mov
push
push
lea
pop
and
fcoms
inc
xchg
incl
out
pushf
sub
lret
sub
cld
shr
cmp
mov
or
add
lret
xor
sbb
add
inc
std
mov
lock
pop
test
bound
mov
call
std
clts
adc
and
pop
in
decl
addb
jnp
xchg
fbstp
mov
lock
add
and
movhlps
inc
shll
mov
pop
sub
xor
shll
ljmp
loop
lahf
jmp
das
push
sub
cmp
or
inc
sbb
loope
bound
add
inc
pop
sbb
jbe
ljmp
xor
sti
jg
out
gs
adc
sahf
iret
ret
scas
rclb
and
adc
ficompl
sbb
in
int3
pop
jns
xor
adc
xchg
cld
push
mov
pop
sbb
daa
pop
jno
mov
fmuls
mov
lahf
mov
imul
lret
or
fistl
bound
mov
movd
cmpb
ror
shll
lahf
mov
or
dec
insl
fiadds
adc
lahf
aaa
adc
mov
jb
inc
pop
jecxz
outsl
pop
loopne
lahf
cs
push
mov
and
int
inc
jmp
pop
mov
ret
add
enter
sub
ret
sbb
pop
dec
mov
mov
stos
lock
out
stos
call
xchg
mov
cmp
pop
ss
lret
or
mov
fwait
fwait
cmp
shrl
add
inc
aas
dec
adc
scas
imul
mov
out
add
je
sbb
dec
negb
dec
rorl
data16
jnp
out
insl
pop
sar
iret
cmp
sahf
je
pop
lret
cmc
mov
fsts
cmpb
fbld
sbb
mov
int
fdiv
pusha
cmpsl
pushw
imul
mov
pop
sbb
adc
lahf
xadd
jbe
lods
pop
fcompl
repz
push
xor
push
inc
cwtl
das
mov
mov
test
outsb
inc
mov
les
mov
fdivl
mov
push
test
and
xor
std
leave
lret
addl
add
sti
outsl
ja
es
es
mov
mov
xchg
push
jecxz
dec
lahf
or
and
jae
and
inc
mov
and
icebp
push
and
fidivs
cmpsl
adc
dec
mov
or
repnz
pop
push
mov
add
cpuid
mov
cmpsl
pushf
jb
aaa
ja
mov
sbb
repnz
clc
sub
aaa
inc
lret
mov
mov
xchg
test
lahf
loopne
sti
inc
fwait
and
jne
mov
xor
aad
sti
push
mov
or
cld
or
sub
gs
in
fwait
bound
vmovdqu
sbb
ljmp
mov
inc
ljmp
pop
xor
cld
inc
lock
adc
shr
lods
test
bound
xor
cmpsb
dec
inc
and
cmp
clc
mov
in
mov
mov
push
es
or
lods
es
or
inc
fisttpl
lcall
call
daa
movsl
mov
xchg
adc
fdivrl
dec
jbe
insl
jmp
call
inc
out
insl
inc
xchg
fidivrl
push
push
push
mov
out
pop
jbe
xchg
pop
cli
pop
jnp
xchg
pop
adc
xor
cmpsb
decl
dec
dec
mov
and
jbe
loop
lcall
mov
movsb
and
hlt
test
imul
or
int
cmp
and
adc
stos
sbb
in
push
adc
rcll
out
in
inc
or
gs
decb
shlb
sti
rolb
test
loopne
ret
add
insl
mov
jb
in
cmp
rolb
push
and
cmp
jge
cld
dec
mov
out
out
mov
jne
ljmp
lcall
inc
cmp
imul
pop
in
repnz
or
pop
xchg
testl
and
jne
nop
or
xchg
fstl
mov
mov
mov
dec
and
push
or
arpl
popf
mov
nop
pop
test
test
sbb
pop
mov
add
shll
pop
cli
fistps
aad
xor
pushf
add
inc
in
bound
in
mov
mov
jae
xchg
call
lock
mov
push
fmul
sbb
dec
cmpsl
roll
xchg
cmp
iret
out
int3
std
cmp
test
mov
dec
movsl
add
xorb
mov
sub
addb
xchg
iret
mov
pop
in
mov
jb
push
cmp
pop
in
jle
sbb
daa
xlat
int3
jne
dec
test
mov
push
ficomps
addl
push
cs
sub
bound
add
pop
sbb
push
mov
aaa
dec
loope
push
dec
jne
or
incl
dec
inc
mov
push
xchg
jmp
mov
inc
hlt
adcb
jecxz
xor
xchg
fdivl
fists
sbb
and
scas
and
and
fildl
jmp
pop
repz
sub
mov
sbb
inc
xor
push
mov
das
jg
in
outsb
sbb
lahf
xchg
mov
pop
jb
dec
vminps
xchg
dec
stos
mov
pop
mov
jo
and
mov
or
dec
add
std
insl
std
and
and
and
imulb
mov
cmpsb
out
add
pushf
inc
popa
stc
push
mov
sbb
dec
sbb
pop
pop
ljmp
or
fcmovnb
xchg
adc
mov
ret
movsl
push
cmp
mov
pushl
lea
jmp
xorb
mov
jnp
cltd
mov
test
mov
movsb
cwtl
scas
ja
sbb
gs
sub
mov
cld
repz
dec
les
test
pop
mov
movsl
pop
mov
lret
jno
push
pushf
inc
jno
or
xchg
push
das
or
xor
pop
ds
test
xor
sbb
movsb
dec
stc
adcl
repnz
sub
cmp
and
adc
cmpsl
insl
adc
roll
mov
ja
icebp
mov
out
push
bound
jl
movsb
sub
aam
nop
mov
movsb
mov
dec
pop
cld
sbb
into
lcall
faddp
movb
out
scas
mov
lock
xor
jb
jecxz
pushf
jge
cld
cmp
aaa
loope
adc
stc
call
mov
push
or
push
imul
inc
jge
dec
and
push
adc
add
sahf
mov
mov
mov
negb
jne,pn
jbe
jo
and
scas
ljmp
out
lods
aam
sub
ds
jo
lods
lcall
iret
pop
sbb
inc
jb
inc
in
pop
xor
and
push
xchg
inc
ret
jo
divl
les
sti
jle
add
mov
in
hlt
cmpsb
push
iret
fwait
hlt
repnz
les
lret
insl
clc
push
cmc
imul
dec
out
repz
lahf
enter
mov
daa
rorl
stos
incl
jo
dec
orl
mov
sarb
roll
mov
cld
dec
fwait
rol
dec
mov
xor
lcall
imul
roll
hlt
inc
dec
dec
or
inc
push
push
sub
ret
outsb
xchg
jmp
push
inc
rclb
mov
adcb
lods
add
pushf
repnz
fnstenv
pop
fimuls
movsl
aas
push
cmpsb
mov
inc
je
in
mov
clc
sti
mov
push
dec
jne
xor
aad
or
pop
inc
inc
in
adc
xchg
hlt
sub
xchg
mov
fdiv
mov
test
pop
aam
pop
rcll
cmpsb
subl
hlt
das
js
mov
xor
fwait
xor
in
aam
adc
pop
loop
inc
call
mov
out
pop
pop
jne
hlt
xorb
pusha
jo
loopne
repnz
fnstenv
xchg
mov
ret
data16
xlat
xchg
shll
je
in
xchg
jmp
out
push
add
inc
sahf
mov
stc
cmp
push
mov
outsl
adc
mov
js
xchg
cmp
cmp
inc
nop
push
leave
into
xchg
push
sub
push
lahf
xchg
out
cld
jb
mov
sarb
in
cmp
imul
add
jbe
mov
pushf
xchg
stc
inc
lods
insb
out
jmp
sbb
outsl
leave
in
lretw
push
in
or
inc
cmp
mov
mov
pop
inc
lods
mov
jns
shll
stos
pop
sbb
movsb
push
dec
out
pop
int3
mov
out
mov
mov
mov
push
dec
test
jo
mov
clc
sub
and
mov
popf
xchg
jg
pop
and
and
cmpsb
and
fdivrs
gs
or
mov
jnp
cmp
mov
sub
aam
ja
add
sub
xchg
jno
ss
and
adc
in
data16
push
xor
mov
sub
sbb
pushf
fs
cmpsl
sub
push
fdivrs
ljmp
in
out
pop
test
dec
mov
ret
cltd
and
mov
sbb
pushf
mov
push
and
pusha
fsubr
fbld
push
sbb
xchg
ds
mov
loop
pushf
ret
dec
into
ret
sbb
adc
sub
push
out
das
insb
orb
jl
jmp
or
call
cld
xlat
xchg
and
inc
mov
test
scas
xchg
xlat
out
inc
adc
out
pop
jmp
xchg
and
jl
shl
dec
sbb
lret
cmpsl
push
pmuludq
data16
push
call
fmuls
iret
fsubs
dec
stos
jno
std
add
push
push
mov
sub
dec
jbe
bound
sub
push
out
pop
mov
bswap
push
fnstenv
mov
int
enter
adc
outsl
clc
fwait
mov
fwait
pop
pop
sar
sub
into
mov
cmc
orb
lcall
cmp
mull
enter
in
push
and
cmp
lods
stos
das
cltd
enter
jmp
fwait
lods
js
pop
popf
ret
and
adc
inc
shll
pop
jne
repnz
push
push
leave
sbbl
inc
push
pop
adc
icebp
lea
sub
push
jno
pop
cmp
xchg
pop
inc
lret
mov
push
rcr
test
adc
sub
push
test
out
pop
xor
adc
sarb
pop
inc
mov
jecxz
test
test
nop
imul
add
imul
or
jno
lds
addr16
xor
dec
mov
adc
ret
andb
ss
repz
mov
pop
lods
out
mov
cltd
sub
cmc
adc
mov
or
fstl
aad
insb
popf
out
push
mov
pop
mov
ja
xor
fsubr
cmpl
iret
fwait
cmp
mov
push
scas
incb
stc
cmp
data16
xchg
sub
insb
push
xchg
dec
mov
ret
inc
or
add
pusha
jmp
imul
cli
lock
add
cmp
cmp
mov
sbb
push
cld
cvttps2pi
scas
or
or
add
std
jle
xchg
jl
fbstp
xchg
in
jns
inc
loope
into
aas
iret
out
pop
ljmp
les
shrl
mov
cltd
data16
idivb
xchg
or
pusha
fdivrp
fsubrl
ror
aaa
repnz
fists
xchg
sub
out
lahf
cld
stos
xor
aaa
add
insl
lret
push
mov
adc
dec
into
iret
push
xchg
mov
xor
popa
xchg
lods
cmp
push
adc
dec
mov
or
rolb
xchg
mov
nop
mov
je
adc
cwtl
ficomps
js
mov
push
mov
pop
pop
xchg
data16
xor
loop
jle
xchg
int3
pop
push
addr16
jbe
lods
addr16
aas
movsl
movsl
rcrb
dec
gs
pop
movsb
cmc
out
inc
xor
pop
add
lea
inc
cmpsb
popf
push
std
popw
stc
inc
pop
mov
push
jge
stos
mov
clc
pop
daa
fsubl
xchg
xchg
mov
out
dec
inc
scas
xor
mov
les
vpunpckhbw
negl
mov
ficomps
sub
sub
pop
jp
inc
xor
or
call
push
aam
add
scas
adc
pop
push
add
jo
loop
insb
xchg
cmp
stos
and
lahf
mov
jae
or
mov
fsubs
dec
xchg
out
ret
jae
jb
inc
xor
fcmovu
mov
mov
scas
xchg
push
rep
xchg
pop
cmpsb
or
mov
shr
lcall
repnz
xchg
pusha
dec
add
lret
loope
pop
adcb
shlb
sarl
inc
add
bound
or
add
jb
es
pop
xchg
add
xor
stos
adc
mov
and
add
inc
adc
xchg
loop
adc
mov
cwtl
push
stc
jbe
dec
mov
jmp
dec
movsb
popl
sarb
adc
cli
pop
xor
jno
lea
outsl
mov
xchg
lods
jne
sbb
sbb
hlt
addl
imul
cltd
adc
jg
xchg
pop
inc
test
push
jl
adc
loope
xor
frstor
enter
xlat
fwait
lcall
lret
fwait
mov
lods
mov
jle
xchg
xor
int
push
test
mov
imul
push
test
jge
mov
ret
jnp
mov
mov
xor
sarb
inc
xlat
aas
addr16
es
bsf
js
rorl
xchg
sub
sub
enter
in
pop
lods
sub
pop
dec
adc
ret
or
bound
push
lret
cmp
enter
cwtl
inc
push
pop
jl
pop
imul
popa
mov
repz
dec
xchg
icebp
and
mov
cmp
fmuls
imul
xor
pop
sub
mov
fistps
cmpsb
pop
imul
dec
cld
mov
inc
xchg
mov
mov
repz
test
or
jnp
insl
call
push
mov
stos
inc
mov
add
out
push
push
inc
push
pop
push
les
cli
fistps
aam
in
lods
ss
in
shrl
out
arpl
add
loope
xor
mov
or
pop
mov
xlat
ss
fisubl
mov
leave
test
test
rolb
incb
imul
in
cmpsl
pop
sti
cmpsl
push
sub
test
js
popf
loope
adc
mov
sub
adc
in
jecxz
cmp
out
mov
nop
loope
push
cld
push
ja
push
sub
std
rcll
ret
sub
push
nop
lods
pop
shll
pop
scas
dec
jg
imul
pop
subb
test
movsb
nop
xchg
or
push
or
ret
cmp
cmc
jle
jae
jb
inc
sarb
sub
out
xlat
loope
mov
mov
sub
jg
add
inc
jo
mov
mov
ftst
inc
dec
cmp
jg
mov
sub
mov
lods
mov
stos
out
sbb
push
jecxz
mov
cmpsb
xor
lret
sub
lcall
pop
dec
xchg
movsl
aam
add
mov
push
jae
mov
sbb
push
jecxz
cmpsl
aad
mov
lcall
mov
cmp
sub
adc
daa
jmp
fbld
jp
test
pop
ret
sbb
mov
shl
jnp
lock
stos
cmc
mov
dec
mov
je
ret
dec
in
xor
push
stos
adc
sub
pop
inc
mov
push
int
pop
or
neg
out
pop
adc
mov
leave
addl
jecxz
dec
inc
mov
xor
cmpsb
mov
sub
mov
pop
mov
aam
mov
xchg
insl
ss
xor
imul
or
inc
mov
loopne
roll
push
imul
jb
add
lods
xlat
adc
pop
jle
push
push
stos
or
pop
lret
lods
pop
mov
test
stos
adc
mov
push
push
mov
sbb
push
lods
cmp
sti
es
or
add
cld
fbstp
orb
ss
jmp
ret
into
sbb
add
push
and
push
aaa
and
xor
dec
push
mov
pop
adc
push
add
es
cmpsl
sub
cmpsb
clc
lret
adc
in
cmc
popl
pop
inc
les
insb
lods
dec
mov
dec
out
mov
or
mov
add
sub
sahf
imul
push
or
push
stos
jne
ja
sbb
lahf
out
or
sub
pop
mov
jne
in
mov
lods
add
pusha
adc
mov
mov
cltd
sbb
ljmp
rolb
dec
rorl
cmp
fmuls
pop
subb
fnstenv
sub
ja
insl
pop
adc
ret
jmp
inc
sub
cmp
out
pop
arpl
sahf
jl
pop
mov
pop
les
xor
sbb
push
jns
adc
jns
ds
pop
scas
lahf
cmp
xorl
nop
push
pop
rolb
mov
test
and
outsl
cwtl
mov
addr16
fs
pop
or
jnp
fisubl
aaa
jmp
ljmp
fldt
dec
stos
jne
lahf
jle
and
scas
std
aam
or
insb
jecxz
add
cmp
xor
movsb
movsb
mov
incb
dec
outsb
ja
enter
addr16
jae
sbb
mov
sbb
or
idivl
js
jmp
dec
sbb
push
add
data16
or
mov
das
mov
mov
in
sub
fstl
jae
or
je
ret
jo
sti
out
push
push
fnstsw
and
out
adc
inc
gs
lahf
dec
xor
jg
stos
fisttpl
mov
lret
out
push
into
das
int3
das
insl
int
pop
jnp
and
mov
dec
mov
jg
movsl
iret
cld
bound
arpl
inc
data16
push
test
pop
leave
popa
jle
sub
fisttpl
inc
cmpsl
fnsave
mov
mov
add
in
fsubrl
cmp
into
test
xchg
pop
xchg
je
call
pop
xchg
push
insb
cmp
add
inc
mov
xor
jo
loop
js
sub
adc
or
cmp
xchg
insl
aaa
shl
lea
mov
repnz
cmp
loopne
stc
push
jle
pusha
ss
jg
mov
fsts
fidivrs
sub
je
pop
lret
push
imul
and
into
imul
bound
mov
int
sbb
in
jnp
fnstcw
ffreep
loopne
mov
data16
sbb
sub
andb
mov
cmc
cltd
out
add
test
loop
sbb
adcl
cli
rolb
cmpsl
xchg
jg
xor
sub
roll
in
fistpl
and
and
lret
lds
insb
das
add
xchg
dec
fbstp
xor
idivl
dec
cmc
push
rclb
lock
jnp
xlat
dec
jp
sti
iret
or
pop
sbb
sbb
pop
adc
sub
sub
add
test
mov
sbb
and
dec
addb
sub
cmp
mov
push
jl
andb
scas
movsb
rorb
test
push
ret
mov
clc
lds
mov
ficompl
adc
jo
xor
jne
insb
cli
addr16
sahf
cmpsb
fimull
test
or
mov
cli
call
xchg
lods
call
and
mov
mov
out
pop
mov
xor
subl
outsb
or
add
xor
add
jmp
ret
sbb
jns
mov
mov
push
outsl
sub
shll
in
cmpsl
jge
enter
outsl
push
add
inc
in
xchg
xor
jg
push
imul
adc
mov
sbb
stc
mov
mov
sub
xchg
xor
xchg
fdivrs
jno
jnp
outsl
es
pop
in
je
daa
repnz
add
lock
shlb
dec
shll
push
inc
mov
xor
and
push
hlt
xor
push
addl
lcall
xchg
lods
mov
out
fwait
fs
je
dec
rolb
xchg
inc
fldcw
inc
jmp
pop
adc
push
add
inc
icebp
cwtl
outsl
xor
test
scas
push
xchg
lods
xor
add
push
inc
dec
cmp
and
push
push
lret
clc
cmpsb
ret
ret
stos
adc
sahf
sti
mov
mov
or
push
xor
jmp
insb
std
ljmp
mov
mov
mov
outsl
ret
pop
pop
lcall
and
and
jecxz
into
arpl
mov
test
aam
lret
dec
fmul
xor
cmp
outsl
xlat
mov
push
fbstp
cmp
mov
mov
in
cmc
xchg
out
in
sarl
pop
sub
cmp
fs
lods
jge
mov
shlb
cli
cmc
stos
leave
mov
xchg
in
jl
shr
pop
test
add
ret
push
sti
shl
sbb
mov
icebp
mov
cmc
and
inc
js
cmp
jo
jge
cmp
mov
cmc
sti
cmp
push
je
pop
lods
lahf
in
add
jo
or
mov
mov
or
aas
mov
fcmovne
adc
scas
sarb
in
cmp
add
pop
mov
outsl
clc
adc
push
leave
bound
shll
dec
mov
in
filds
sti
fldcw
pop
adcb
sbb
fwait
subb
lods
fcomps
and
xor
rcr
mov
outsl
lods
pop
push
jecxz
pop
xchg
scas
mov
das
je
jg
in
sub
sti
scas
dec
jecxz
iret
es
mov
fiadds
push
xchg
mov
call
push
push
dec
cmc
out
jb
push
or
inc
pop
push
js
mov
adc
mov
xchg
cld
repnz
shrl
jl
inc
hlt
dec
sbb
cwtl
movsb
mov
cld
mov
ret
cmp
or
test
sbb
add
je
mov
adc
cmpsl
data16
stc
dec
push
out
mov
enter
mov
sub
loop
idiv
pop
xchg
stos
dec
pop
push
sub
add
xchg
and
mov
mov
test
push
lods
sbb
aam
es
clc
sbb
adc
dec
mov
bound
cmp
or
call
movsl
lods
adc
dec
xchg
jl
mov
sub
insl
jb
incb
and
jne
in
fdivl
mov
cmpsl
movsl
insl
aaa
mov
xor
add
scas
cwtl
xchg
clc
dec
and
out
pop
std
and
and
das
mov
ficoms
lods
sub
cmpsl
cmp
jbe
sbb
xchg
movsb
pop
in
pop
shrl
xchg
push
mov
sub
in
ss
push
push
adc
xor
pop
mov
and
dec
mov
xor
pop
aam
enter
addr16
and
sahf
shll
gs
push
xor
out
push
mov
add
add
loop
loop
jg
mov
icebp
dec
mov
mov
aam
inc
int3
push
inc
loopne
fisttpl
repz
mov
mov
mov
mov
cs
rcrl
jl
out
cmp
shll
mov
mov
loop
ss
or
das
sub
inc
lahf
aaa
loopne
push
stos
sub
rorb
adc
sbb
adc
xorb
loope
jb
int3
jge
xchg
sub
adc
das
int3
jecxz
xchg
or
imul
inc
rolb
sti
lock
into
rcll
insl
stos
frstor
xchg
xor
negb
and
out
cltd
enter
aas
int3
add
scas
and
xchg
loop
pushf
adc
jno
mov
mov
jo
sbb
sbb
loop
mov
test
in
add
jnp
in
inc
rclb
lret
inc
pushf
cmpsl
insl
faddp
fstpt
cmpsl
bswap
inc
sbb
out
dec
fstpl
sahf
scas
dec
dec
mov
push
pop
cmp
movsb
out
or
shlb
push
arpl
test
pop
lret
cld
ror
mov
je
inc
jge
rolb
sub
out
cli
cld
add
cmp
scas
cmp
xchg
adc
pop
mov
scas
pop
ret
dec
jae
into
jns
popf
adcb
mov
xchg
daa
push
lret
imul
fsubrp
lods
jle
or
push
and
dec
fistl
call
xor
push
outsl
adc
xor
repnz
xor
js
dec
push
xchg
and
sbb
pusha
dec
jecxz
cmp
inc
loop
sub
and
jno
or
stos
cmp
pop
pop
inc
imul
jns
inc
jnp
adc
pop
inc
ss
push
arpl
test
and
lods
fs
or
dec
cmp
dec
cmpsb
fistpll
adc
sar
push
and
dec
je
mov
js
inc
ds
into
jge
lock
out
imul
rcll
cltd
into
aaa
and
mov
jmp
nop
jae
xchg
mov
test
xchg
and
or
inc
jo
or
lock
push
inc
inc
xchg
xlat
jb
mov
data16
pusha
dec
push
or
inc
rcr
push
pop
in
movsl
fcomip
jle
shlb
sub
push
lods
arpl
cmpsl
xchg
es
mov
pand
push
sbb
jl
into
pop
cwtl
idivb
icebp
mov
mov
dec
and
jne
fwait
orb
fnstenv
loopne
out
lcall
ljmp
xor
inc
test
push
mov
jecxz
faddl
iret
iret
pop
inc
add
dec
xchg
shl
ret
in
cld
out
cld
mov
adc
daa
ds
xchg
orl
jae
les
cmp
cmp
dec
stos
mov
and
fiaddl
add
ret
pop
sbb
mov
loopne
pushf
sbb
stc
sar
add
xchg
push
cmc
into
cli
lods
mov
xor
lea
stos
ret
into
lods
push
mov
dec
mov
mov
fwait
push
dec
mov
mov
cld
and
sbb
in
les
shrl
cmp
jp
test
mov
aam
xchg
sub
into
cmp
xchg
cli
fwait
sub
aas
cmpsl
lods
jbe
push
arpl
fs
test
rorb
sub
lret
fmuls
pop
push
pop
cltd
xlat
mov
sub
movsb
mov
cmpsb
xor
add
fsubs
test
sub
lret
popa
jns
pusha
les
xchg
int
adc
subb
shl
rclb
jae
sbb
push
hlt
aad
mov
pop
jnp
or
sub
data16
je
mov
popa
and
stos
cmpsb
pop
je
cld
std
test
pop
movsl
outsb
push
mov
gs
test
jbe
lds
js
push
das
fs
icebp
adc
adc
xor
jp
stc
ret
test
inc
inc
mov
repnz
sti
testl
pop
insb
shrb
sub
out
xor
js,pn
enter
adc
outsb
dec
aad
pop
out
mov
mov
aam
push
cmp
dec
mov
mov
add
sbb
mov
out
cmpl
jae
stc
sbb
pop
sub
cmp
mov
pop
xchg
and
pop
mov
mov
cld
push
idivl
xor
jp
out
mov
stc
repnz
jecxz
movsb
add
and
loop
mov
jne
jbe
insb
cwtl
fistl
in
cltd
sbb
ret
dec
or
sbb
stos
cmp
daa
sbb
filds
jb
popl
xor
dec
fst
aad
mov
jnp
fistps
ja
aas
movsl
inc
imul
push
mov
clc
xchg
mov
cmp
xchg
scas
mov
pop
rcrb
lret
mov
jmp
movsb
sub
into
test
or
mov
mov
jle
mov
sbb
pop
addr16
jmp
dec
cmp
add
sbb
mov
addr16
mov
inc
pop
lret
push
jno
nop
cltd
cli
cmc
mov
mov
scas
push
cmp
hlt
add
cmpsb
icebp
add
inc
divb
push
fimuls
mov
sbb
shll
mov
adc
psrlw
scas
sub
adcb
addr16
imul
pop
adc
sbb
mov
repnz
jae
xchg
cmpsl
add
xchg
mov
adc
bound
mov
jb
pop
lods
sti
hlt
jp
test
lods
push
xlat
hlt
jle
ljmp
lea
inc
movsb
pop
mov
push
adc
or
clc
lret
shll
jo
aaa
dec
xor
add
ret
iret
cmpb
aam
mov
pop
and
mov
cmp
ss
nop
int3
cmp
add
mov
ja
insl
je
pop
rclb
data16
add
inc
or
jns
and
cmp
adc
notb
stos
add
add
call
fiadds
mov
or
xchg
mov
loope
imulb
jg
jb
in
inc
ljmp
vmaxss
jne
mov
lcall
cmpsl
int
and
out
loope
mov
xor
mov
cmpsl
push
in
inc
cwtl
pop
pop
jecxz
fldenv
push
mov
adc
inc
or
popa
aas
dec
sbb
push
sbb
idivl
inc
or
out
popa
loop
push
clc
adc
cmpsb
lock
sti
cmpsb
loop
xor
mov
lahf
mov
push
aas
into
dec
pop
xchg
lret
push
rorl
jo
or
dec
call
paddq
mov
addl
dec
movsb
jle
and
cli
iret
jle
in
test
cmp
sub
xchg
scas
fildl
vpunpckhbw
sbb
xchg
clc
ljmp
stos
pushf
sar
mov
mov
rclb
mov
lret
fxtract
insl
jg
aad
subl
stos
ss
xchg
xchg
dec
shll
inc
xor
out
jbe
mov
stc
pushf
int3
dec
cmp
sahf
js
dec
cli
daa
inc
mov
mov
lahf
ficoms
insl
dec
cmpsl
in
lods
pop
rol
pop
les
xor
data16
inc
mov
pop
enter
pop
and
pop
mov
pusha
or
pop
fiadds
mov
and
in
pop
fdecstp
adc
int3
loope
mov
loop
and
dec
sti
jns
dec
scas
mov
sub
paddq
cli
dec
shrb
jp
mov
dec
adc
add
jo
mov
nop
out
pop
aaa
imul
clc
xchg
add
inc
mov
push
adc
mov
push
es
pop
mov
frstor
xchg
inc
shll
mov
push
rcrl
iret
cld
mov
test
mov
or
adc
gs
roll
pushf
xchg
cs
jge
push
push
mov
mov
mov
sbb
sbb
sbb
rorb
pop
ja
push
or
mov
icebp
int
loop
pop
adc
mov
push
ja
int3
lcall
call
mov
mov
in
cmp
xchg
and
icebp
aaa
inc
aaa
jle
imul
sub
into
sbb
mov
cmp
nop
or
popa
ljmp
cmpsb
popf
scas
ret
mov
decl
mov
and
xchg
add
leave
in
sbb
dec
pop
push
or
andb
sbb
repnz
in
mov
sub
stos
mov
cmp
mov
imul
cld
mov
cmp
daa
mov
add
pop
mov
mov
xchg
dec
faddp
ds
cmpsl
dec
fisubl
aaa
cltd
or
jle
sbb
xlat
xor
pop
dec
test
enter
jge
dec
jns
xchg
jno
andl
mov
mov
movsb
xor
mov
out
mov
xchg
xchg
popf
je
lods
jl
push
mov
les
imul
aam
cld
pop
xor
sbb
pop
out
sahf
mov
mov
nop
xchg
mov
lods
daa
sub
addr16
shll
mov
mov
or
xlat
cs
in
xchg
dec
inc
test
gs
sti
mov
nop
sar
pushf
cmp
push
outsb
imul
jno
fbstp
mov
ljmp
mov
or
mov
or
jp
inc
push
in
jmp
sbb
push
mov
fsubs
mov
ds
fisubrs
mov
xchg
add
inc
daa
fwait
mov
mov
cmc
pop
pop
popf
jns
sti
xor
mov
cld
dec
cmp
int
xchg
popa
adc
mov
dec
mov
or
mov
fs
and
and
pop
or
xchg
jo
in
add
and
mov
dec
pop
jl
data16
pop
stc
sub
std
push
mov
movsb
daa
xor
adc
mov
pop
fdivl
or
fcmovnu
and
and
jle
sahf
mov
aaa
jns
xlat
mov
mov
sub
xor
push
out
arpl
dec
adc
xchg
mov
sub
sarb
out
push
lret
pop
push
outsb
jo
cltd
repnz
repnz
scas
jl
sub
cmpsl
jge
popf
cli
daa
sbb
jnp
gs
aad
int3
jbe
in
inc
jmp
clc
or
in
dec
inc
in
inc
call
ss
aad
jecxz
loope
int3
pop
ss
and
imul
or
mov
inc
jg
and
inc
fimuls
inc
sub
sbb
popa
sub
shl
cmp
ljmp
push
and
push
sbb
loopne
jg
out
or
shr
ds
jmp
mov
stos
push
or
mov
xchg
push
mov
loopne
sti
leave
mov
inc
in
ss
out
lods
mov
test
mov
paddb
stc
adc
cmp
adc
sbb
jge
jb
jns
dec
and
dec
cmp
das
mov
dec
outsl
testl
inc
test
or
cmp
shrb
pop
outsl
lret
and
or
sbb
push
inc
xor
lods
mov
pop
hlt
ds
call
aaa
adc
mov
mov
mov
out
and
push
sbb
lcall
xchg
fcmovnb
call
mov
xchg
mov
mov
mov
outsl
inc
ret
fbstp
loope
cmp
mov
sub
or
cmp
iret
or
popf
fdivrs
jecxz
fucomp
and
mov
or
inc
into
stc
xchg
repz
aam
xchg
loopne
mov
mov
jns
add
ficompl
loope
cmp
add
addr16
pop
mov
sar
jo
movd
ljmp
inc
adc
aaa
cli
add
es
mov
jg
or
cmpsl
pop
pop
jge
bound
shlb
xchg
push
repnz
jg
mov
jno
xchg
pushf
and
push
gs
insb
mov
adc
push
adc
addr16
test
test
lahf
fisttpl
les
pop
adc
mov
jle
in
loop
xor
inc
test
outsl
rcl
pop
xchg
imul
lds
pop
shl
pop
or
push
sbb
ret
int3
or
inc
repz
bound
dec
fildl
push
mov
xchg
js
xor
pop
adc
xor
mov
or
decb
loopne
jne
hlt
addr16
push
or
enter
sub
pop
add
pop
insl
add
jo
sub
lret
hlt
pop
repnz
inc
lods
sub
sbb
push
mov
test
jp
jl
mov
sub
push
jb
inc
add
movntps
push
cmp
cmpsl
push
lcall
dec
pop
icebp
add
mov
repz
popa
rolb
mov
ret
movsb
lea
inc
mov
sarb
push
hlt
test
xchg
idivb
in
mov
es
iret
pop
cs
sahf
imul
mov
mov
cmpsb
loope
scas
scas
packsswb
add
mov
sbb
jl
jb
mov
adc
push
xor
loop
bound
jae
push
pop
adc
movsl
cmp
sub
shl
out
test
and
pop
xor
and
int
cltd
js
pop
cwtl
mov
jns
push
xor
dec
mov
mov
fcmovne
divb
dec
cmpsl
testl
movsl
xchg
adc
sub
aam
cmp
or
cld
sti
push
jg
sbb
xorl
out
cld
test
cld
call
sahf
fcompl
in
adc
xchg
test
xor
dec
mov
mov
clc
jmp
mov
and
push
dec
jge
mov
and
out
ljmp
inc
add
out
test
mov
mov
in
lea
cli
dec
cmpsl
psubusw
jecxz
jmp
fiaddl
sarb
inc
outsb
mov
inc
fiadds
xor
pop
in
dec
imul
insl
aaa
orb
data16
lods
xor
out
add
xor
inc
xchg
iret
inc
inc
cmp
ljmp
lock
in
in
fnstcw
xor
ret
inc
sbb
cli
shlb
xchg
insb
push
xchg
inc
inc
pop
jle
add
jecxz
push
test
aam
jo
xor
xchg
fldt
jbe
mov
cli
out
mov
imul
sbb
arpl
sahf
mov
cmp
adc
jl
in
jge
jmp
pop
icebp
inc
ja
mov
ds
insl
jecxz
mov
pusha
cmp
lock
cld
scas
dec
cmp
xchg
and
lods
stos
aaa
cmpsb
push
push
imul
ds
xor
shlb
cmp
jno
adc
and
cld
cmp
jg
das
incb
nop
xchg
xchg
push
inc
lahf
daa
sub
mov
mov
insb
mov
pop
jmp
lcall
rcl
out
dec
data16
push
xor
icebp
dec
xchg
mov
pop
adc
and
repnz
clc
adcl
adc
pop
scas
dec
mov
out
sbb
adc
lds
sahf
jbe
jecxz
lods
nop
fsub
cmp
xchg
mov
mov
mov
adc
js
in
pop
pusha
add
and
pop
and
sub
add
cld
test
mov
out
call
inc
out
in
push
add
or
lods
daa
adc
push
mov
lds
jecxz
xor
mov
mov
and
cmpl
dec
pop
lcall
inc
xchg
pop
dec
ret
cld
cmpsb
out
aaa
enter
daa
and
sub
sub
cmp
mov
adc
aas
in
dec
xchg
icebp
dec
shll
bound
xor
dec
loopne
or
imulb
mov
mov
scas
out
jo
jns
xor
cmpsb
mov
cli
pop
out
fnstcw
xlat
mulb
jo
sar
push
and
pop
push
hlt
jnp
add
fnsave
orl
out
ljmp
jl
push
inc
jmp
xor
and
inc
or
lods
sub
push
cmp
movsb
cmc
enter
repz
sbb
iret
or
test
cli
fs
movsb
ss
xchg
fldt
push
and
mov
fcmove
dec
xchg
cmp
sub
add
fsubl
adc
fcom
repnz
ja
out
popf
mov
pop
shlb
dec
and
sar
cmp
add
insb
movsb
xchg
call
mov
sti
mov
mov
jnp
inc
enter
adc
xchg
sahf
icebp
das
rorb
or
mov
lret
bound
add
lret
shr
and
lret
mov
int
sti
xchg
push
aam
stos
jp
push
xchg
mov
or
sub
cmpsb
mov
repz
cld
das
iret
push
sbb
cwtl
lahf
push
or
movb
cmp
lcall
jb
adc
dec
jnp
call
xchg
and
sbb
jns
or
mov
jp
sub
loopne
xor
daa
xchg
xor
mov
out
jne
aad
dec
and
std
sub
adcl
jmp
int3
dec
add
fbld
cmp
data16
movsl
dec
xchg
adc
arpl
inc
sbb
lea
push
mov
jnp
outsl
aam
mov
pop
xchg
scas
sti
les
outsb
or
rcll
rcr
xchg
mov
sti
out
in
sub
or
pop
or
mov
in
mov
dec
mov
sub
mov
push
aad
cltd
mov
dec
cmp
pop
mov
or
cs
roll
cmp
or
mov
xor
pop
fsubs
fists
xor
mov
lret
jl
push
dec
test
divl
shlb
in
pop
fsubs
pop
insb
sti
jne
push
dec
jl
lods
testl
xor
pop
inc
bound
inc
pop
into
test
lret
mov
mov
popa
in
push
sbb
sub
hlt
mov
cmp
xor
stos
push
pop
lods
xchg
in
test
mov
movsb
call
push
pop
xor
nop
adc
pop
or
or
sub
js
jo
cltd
mov
in
es
push
loop
inc
and
push
sub
ljmp
das
add
pop
fwait
leave
mov
cli
aam
cmp
inc
incl
inc
movsb
in
sub
sbb
lret
cmpsb
fisubs
jl
dec
out
fs
dec
addr16
mov
push
sbb
and
jecxz
in
bound
xor
adc
testb
ljmp
ss
pop
mov
or
push
dec
or
je
enter
std
fimull
mov
cmp
hlt
iret
push
and
out
outsl
arpl
jno
xchg
cltd
test
test
shll
loop
mov
lea
xchg
ja
push
pop
mov
mov
ds
lahf
pop
imul
fs
pop
inc
xchg
clc
inc
mov
shll
add
xchg
loope
adc
sub
stc
lods
jg
int3
mov
int3
cmp
call
rolb
lds
std
jb
xchg
sub
fwait
cmp
por
push
loope
and
sub
jl
adc
pop
xchg
mov
out
mov
and
mov
mov
xor
xor
mov
sbb
and
or
in
mul
fldcw
daa
xchg
outsb
and
push
ret
popa
out
mov
or
in
rclb
fsubrp
popa
and
or
adc
xor
jecxz
or
jg
fimull
out
xor
and
loope
sub
cmp
push
lcall
jbe
mov
stc
jp
pop
sub
call
std
jno
add
fldenv
push
mov
sbb
pop
subl
lcall
jg
les
xor
iret
and
inc
adc
sbb
inc
lods
cwtl
lods
pop
adc
bound
sbb
rcl
out
sbb
rcr
xchg
and
mov
add
test
inc
lds
push
cmp
xchg
enter
mov
sub
inc
into
or
cmpsl
insb
inc
repz
lds
sub
push
shrl
sub
add
sbb
clc
fmuls
push
push
mov
icebp
sahf
subl
gs
pop
jae
pushf
fstl
in
pop
mov
rolb
and
or
popa
shl
xchg
jge
xchg
dec
and
and
xchg
ror
fldl
insl
mov
insb
push
mov
xor
adc
cmpl
outsl
sbbb
rorb
movsl
fs
imul
mov
inc
cmp
fnstsw
leave
jbe
incl
shrb
test
dec
xchg
mov
jns
mov
dec
jne
mov
psrld
in
cs
test
and
pop
and
sarl
int3
les
xor
jo
arpl
inc
add
stos
out
xor
bound
lock
push
xchg
cwtl
xor
mov
cmpb
call
loop
jle
mov
lcall
repnz
xchg
sbb
fdivs
adc
ret
xchg
out
jnp
jno
cld
push
ja
cltd
fs
mov
push
sbb
imul
xchg
push
mov
fdiv
sub
jle
mov
movsl
sub
pop
mov
cmpsb
xchg
rcr
push
js
in
add
push
adc
mov
ljmp
stc
sbb
dec
xor
xchg
inc
shll
dec
mov
sub
jno
or
xchg
fnstenv
mov
rclb
cmc
int3
andb
mov
inc
call
lea
dec
test
ss
and
movsb
inc
sbb
sub
mov
xchg
incl
and
divb
loope
popf
sub
push
out
out
pusha
mov
sahf
je
add
cmp
nop
test
xor
xchg
xlat
shr
dec
xor
xchg
add
mov
int3
rcrb
jp
sbb
cmp
testb
ret
mov
and
mov
add
cwtl
sub
in
out
jl
push
sub
sbb
dec
xlat
fbld
popa
adc
int3
jae
sbb
andb
movsb
jo
jbe
pop
or
lds
dec
mov
sbb
lods
aad
aaa
cltd
dec
mov
inc
cmp
fldenv
ret
lahf
jns
test
ret
nop
xor
mov
jmp
in
icebp
fldt
push
jnp
outsb
jbe
loope
cmp
pop
cmpsb
pushf
daa
dec
add
cmp
adc
dec
mov
ss
gs
dec
push
lods
mov
gs
inc
push
or
mov
cmp
cmp
daa
or
mov
push
lcall
mov
pop
mov
popw
mov
jp
cmp
adc
imul
in
bound
test
push
and
mov
mov
sbb
stos
repz
stc
xchg
cwtl
movsl
negl
jno
and
push
xchg
test
mov
out
outsb
out
addb
fcmovnu
rorb
xchg
cmpsb
jle
dec
dec
daa
inc
mov
add
mov
es
imul
sub
es
ss
add
pop
jge
pop
or
inc
outsb
scas
out
sub
mov
and
aam
mov
mov
data16
adc
imul
insb
add
in
rorb
sbb
xchg
repz
mov
push
out
into
imul
sub
out
dec
push
cwtl
aam
add
mov
rcl
mov
out
lds
mov
out
lock
fisubrs
shll
jl
mov
fwait
loop
out
push
adc
in
xchg
fdivrl
pop
in
jae
movsb
jne
jb
sti
cmc
movsb
mov
jge
out
mov
clc
hlt
repnz
pop
leave
jne
mov
pop
jns
lock
dec
idivl
pop
cli
push
shlb
in
dec
adc
imul
std
mov
rolb
iret
mov
sub
push
mov
add
nop
scas
jns
xor
hlt
shll
scas
test
scas
mov
rcrb
popf
dec
adc
dec
sbb
fs
data16
adc
imul
mov
pop
jmp
and
inc
adc
lret
insl
xchg
ja
ja
add
adc
es
shl
mov
push
adc
data16
cmp
or
mov
repnz
fldt
lods
aas
or
dec
lods
push
and
fcompl
inc
mov
pop
inc
mov
dec
adcb
sbb
insb
push
jno
outsb
push
fiadds
ficomps
or
shrb
lods
add
aaa
pop
mov
push
xlat
jmp
mov
push
ficoms
push
jle
and
pop
arpl
mov
inc
lods
add
lods
adc
jbe
je
pop
sbb
adc
mov
xchg
scas
dec
pop
mov
jge
cmp
nop
sbb
inc
mov
shll
bound
jge
stos
outsl
jnp
dec
mov
shlb
mov
jae
cmpsb
xchg
and
lcall
fsubr
rorl
sub
pop
or
movsb
or
lahf
mov
out
fwait
sbb
pop
popl
mov
jnp
pop
lret
cmc
mov
xchg
jo
or
pushf
cwtl
xor
lahf
sbb
mov
mov
sahf
mov
inc
mov
mov
icebp
jg
add
into
add
mov
subb
cmp
sahf
mov
jl
fwait
jmp
cmp
add
stos
jbe
das
sbb
fdivr
mov
fmull
dec
push
xchg
sub
push
mov
ret
inc
mov
dec
pop
loopne
test
pushf
cmp
jbe
pop
shrl
jbe
bound
push
cmp
rcrb
fsubrs
pusha
js
cmc
sbb
and
push
mov
sbb
out
inc
int3
sbb
aam
mov
mov
sahf
sbb
xchg
popf
xchg
cmp
cli
xchg
mull
mov
sub
xor
ret
dec
bound
addr16
pop
ja
fwait
pusha
or
jmp
stc
sar
dec
clc
mov
mov
jg
jns
push
add
jl
mov
pop
sbb
xchg
jmp
outsb
testl
dec
jns
scas
test
sbb
sahf
mov
xchg
fwait
cmpsb
fdivl
push
dec
mov
pop
adc
jle
imul
jne
lds
iret
or
ret
js
jo
out
pop
int
mov
insl
sub
shlb
push
bound
popa
adc
adc
push
lods
sub
dec
decl
push
dec
fcmovnu
cmp
sub
mov
mov
push
rcrl
mov
sub
xor
jno
or
xor
jmp
or
je
lock
gs
fisubrs
pushf
js
addr16
dec
pop
cs
outsl
mov
inc
lcall
gs
mov
inc
rol
int
push
aas
ret
cltd
inc
pop
dec
or
xor
pusha
pop
test
rcrl
mov
push
xor
sbb
mov
lcall
test
or
imul
push
mov
in
ret
ds
out
and
adc
pop
rcrb
pop
add
push
dec
cmpsb
and
mov
popf
add
ja
jmp
or
mov
insb
out
jae
test
cmp
test
das
std
mov
imul
xchg
xor
cmpsb
jae
enter
pop
pop
sub
data16
or
cld
dec
or
ret
fistpl
pusha
int3
loopne
movsl
nop
and
inc
sahf
loope
mov
push
dec
and
mov
or
out
in
push
stos
adc
mov
push
cmc
jae
out
jecxz
cmp
lock
test
mov
add
cli
enter
jg
or
repz
sbb
std
iret
scas
xor
push
les
jmp
mov
adc
jnp
push
repz
sub
cld
imul
add
sar
lret
jbe
lret
xor
aaa
iret
stos
mov
xor
inc
inc
nop
ret
popa
bound
inc
mov
pop
scas
pop
mov
stos
pop
ljmp
sub
psadbw
mov
or
mov
rol
adc
mov
add
daa
jecxz
mov
movsl
gs
xor
adc
mov
jae
push
inc
adc
push
stos
cmp
add
and
jno
insb
das
push
mov
and
lock
xor
cmp
in
push
sbb
ss
mov
inc
xchg
repnz
jo
icebp
decb
negb
fwait
ja
clc
xchg
movsl
outsl
xchg
sbb
fs
jno
dec
xchg
je
mov
ds
jle
dec
mov
jp
gs
add
rclb
leave
push
ljmp
repnz
xor
push
push
dec
push
cmp
pop
out
mov
out
xchg
xor
bnd
inc
iret
push
shl
push
dec
push
lahf
cmp
loopne
xchg
jae
popa
repnz
jbe
popf
jge
mov
lods
pop
lea
insb
cmc
test
mov
add
xchg
jbe
jl
hlt
loop
fwait
lahf
aam
ja
mov
gs
arpl
push
dec
xchg
pop
lahf
sahf
and
scas
movsb
leave
enterw
mov
jl
mov
int3
leave
dec
fmuls
push
adc
xor
les
jno
pop
ret
ljmp
sbb
push
mov
inc
movsb
insb
add
es
insb
push
inc
and
push
sahf
sbb
jae
cmpsb
xor
xor
mull
out
xor
mov
emms
and
push
pusha
lds
and
loopne
adc
das
in
dec
or
xor
addl
dec
xor
ja
addr16
cltd
ss
test
dec
xor
mov
jle
cmp
out
mov
cmp
repnz
es
push
xlat
inc
adc
xor
hlt
popf
xlat
ja
cmp
call
lds
test
in
stos
std
imul
aad
cmp
lcall
mov
jno
adc
xchg
and
leave
in
mov
out
lret
shll
adc
bound
xlat
lahf
mov
xlat
xor
lods
and
fsubl
push
xor
xor
jbe
and
lret
dec
lret
and
imul
cmp
sub
or
jne
lahf
sahf
mov
and
push
int3
and
sbb
repz
add
imul
roll
std
test
inc
jb
mov
andl
test
mov
fisubrs
cmpsl
mov
negb
or
pop
scas
out
stos
addr16
lret
adc
outsl
lods
mov
sub
or
adc
push
add
arpl
xchg
inc
aas
jb
or
sub
incl
jnp
push
pop
xchg
xchg
icebp
pushf
sbbl
xchg
xchg
test
repz
inc
lret
lods
jge
pop
push
mov
rorl
aam
inc
dec
nop
arpl
repz
push
and
mov
sub
les
les
out
or
loope
dec
idivl
mov
add
iret
dec
adcl
cmp
add
adc
mov
cmpsb
dec
mov
lods
not
mov
addb
or
pop
test
fsubrs
mov
cmp
mov
pop
scas
aaa
clc
imul
imul
inc
add
jl
mov
add
movsb
inc
dec
bound
pop
cmp
add
jb
fisubs
sub
cmp
fldl
ficoms
inc
sbbl
inc
in
cltd
hlt
cmc
cld
adc
fstpt
add
ret
in
scas
inc
add
rolb
xor
pop
cmc
push
cli
lds
push
aad
sti
xor
jne
mov
loop
cmp
mov
mov
xor
pop
shll
arpl
pop
push
cmp
sub
aam
add
or
or
sub
cmp
mov
and
mov
leave
mov
loope
jae
mov
int
arpl
mov
cltd
notb
push
pop
adc
dec
dec
pop
rcl
ret
mov
fwait
ss
add
cltd
testb
sub
sarl
and
psubsw
inc
test
daa
imul
nop
xor
push
push
push
xchg
push
sbb
push
aam
negl
arpl
int3
je
xchg
out
mov
and
sub
push
fs
in
add
fisubrl
dec
push
addb
ss
into
jae
xchg
hlt
push
xorl
dec
mov
dec
xchg
push
adc
psubsb
outsb
and
push
ljmp
leave
xchg
add
dec
jp
std
cs
je
cmpsl
sti
test
cli
cs
dec
stos
nop
push
push
or
repnz
imull
add
inc
lock
sbb
jg
inc
out
mov
jecxz
cmp
dec
leave
mov
xlat
push
adc
in
inc
mov
and
mov
jle
sbb
mov
mov
pop
out
xor
dec
pop
mov
out
sbb
stos
push
cmp
rorb
subb
inc
in
jle
xor
inc
adc
jae
mov
push
mov
shrb
and
mov
dec
cmp
scas
push
dec
gs
jno
cmp
mov
idivb
jne
pop
fwait
testl
dec
imull
inc
dec
clc
outsb
xchg
cmp
and
sbb
cmc
iret
lods
loopne
mov
leave
stos
cmp
inc
push
rcrb
inc
mov
and
leave
ret
pop
mov
cmp
push
xor
pop
ficoms
ss
xchg
in
out
daa
mov
sub
pusha
xor
pop
out
stos
adc
mov
rolb
or
ds
sbb
lock
xor
and
pop
and
arpl
jl
dec
mov
fistps
pop
sahf
mov
mov
lret
bt
jnp
pop
aaa
and
mov
aad
pop
inc
ret
test
dec
and
mov
fisubs
in
pop
fmuls
insb
push
out
div
push
sets
push
call
fisubs
adc
adc
in
lds
inc
dec
mov
xchg
lcall
add
mov
dec
cmc
xor
ss
stos
push
lods
pop
test
pop
cmp
mov
rcrb
loop
push
fcmovnbe
test
mov
mov
pop
pop
imul
mov
out
fldenv
jae
sbb
dec
adc
push
ss
ds
out
insb
inc
or
xchg
xchg
sub
push
add
ds
sbb
nop
xor
inc
cwtl
jae
jns
int
jp
or
push
in
movsl
mov
ret
ret
sahf
bound
xor
mov
or
lahf
das
cmp
gs
dec
push
inc
repnz
mov
pop
ljmp
imul
xor
mov
popf
mov
test
mov
or
jmp
mov
sbb
push
xor
mov
test
adc
dec
mov
in
mov
fstps
adcl
leave
cld
xor
stos
std
ret
push
es
movsl
repnz
movsb
dec
daa
sub
sbb
mov
iret
nop
xor
dec
and
cwtl
jmp
test
addb
les
push
fistl
imull
iret
in
mov
xlat
out
adc
push
leave
jle
out
xchg
push
push
loope
mov
sub
popf
mov
push
clc
leave
je
cmp
push
jbe
mov
pushf
repnz
aam
js
push
flds
daa
or
ljmp
pushf
stos
pop
jne
daa
psubsb
fucomip
dec
push
add
xlat
fiadds
inc
push
sbb
sbb
mov
fcoml
movsl
sbb
es
cmp
rorb
mul
addr16
sbb
xchg
into
imul
fadd
pop
mov
out
dec
lods
fistpl
cmpb
in
add
stos
out
mov
frstor
std
jno
rcl
stos
mov
leave
push
fs
push
lret
mov
sbb
and
or
push
or
xor
add
inc
xchg
in
cwtl
add
jg
inc
test
scas
testl
push
sbb
call
scas
nop
mov
cmp
sub
dec
xchg
xor
adcb
jmp
cltd
fs
scas
adc
push
xlat
ja
pop
cltd
stos
jge
xchg
sub
dec
stos
lea
negb
sub
idiv
les
push
addr16
push
stc
sbb
cmp
stos
pop
dec
dec
arpl
inc
andb
push
es
inc
and
js
fbstp
add
push
xor
jl
sbb
pop
shlb
mov
sub
inc
jnp
lcall
and
pop
mov
dec
inc
out
and
adc
fnstsw
mov
aaa
xchg
cmp
inc
dec
mov
icebp
lods
les
mov
jae
mov
bound
negb
fwait
sbb
push
mov
nop
pop
clc
shlb
cli
dec
push
mov
loopne
jne
push
and
push
add
jle
add
cs
mov
sti
rcll
push
pop
int
iret
mov
ljmp
imul
dec
push
or
fdivl
cmpsl
mov
inc
cmp
mov
push
xlat
xchg
pop
cwtl
mov
scas
cli
sbb
xchg
or
lret
rolb
cltd
jo
cli
lds
mov
test
je
cld
xchg
push
cmpsl
xor
push
fisubl
sahf
cwtl
test
mov
push
push
dec
test
and
cmp
cmp
fisubrl
xlat
fdivrs
xchg
sub
in
divb
ret
std
cmpsb
xchg
js
in
cltd
sbb
bound
repz
fwait
pop
ja
sbb
sub
sbb
xchg
in
jp
out
daa
cmp
test
out
scas
icebp
lods
dec
arpl
loope
xchg
dec
sub
ljmp
xchg
nop
sbb
or
lret
ss
je
daa
daa
jae
mov
icebp
iret
iret
out
push
mov
clc
out
or
mov
mov
cmpsl
js
jnp
xchg
xchg
cmp
lock
ret
test
lds
mov
pop
cmp
and
add
pop
loopnew
jns
outsb
push
and
aaa
pop
movsb
mov
aam
cmp
js
jmp
push
ret
pand
sub
pop
mov
adc
aam
call
push
jmp
mov
subl
call
xor
and
dec
mov
mov
jb
std
pop
loope
fcompl
scas
push
icebp
jae
insb
mov
adc
cmp
scas
jns
nop
mov
fwait
xlat
jg
pcmpgtw
roll
aad
jp
div
cmpsl
mov
lods
sahf
add
out
rolb
pop
add
aaa
sub
outsb
inc
inc
sti
mov
fldcw
mov
mov
loopne
movsb
add
jecxz,pt
cmpsl
dec
test
inc
push
mov
aas
in
int
divl
pop
push
xchg
fcompl
pop
add
dec
repnz
inc
fucom
xchg
les
inc
cmpsl
lods
mov
pop
cmpsl
xchg
daa
adc
pop
sub
movsl
loope
les
mov
in
fistpll
mov
jae
mov
cwtl
push
mov
cmc
sub
mov
dec
sbb
xchg
lcall
stos
jae
push
stos
sub
daa
pop
negb
ljmp
pop
stos
js
or
pmulhw
and
dec
dec
sahf
add
rcl
adc
aam
xchg
or
ret
xlat
pop
xor
sub
fsubrs
sbb
std
in
stc
and
popf
inc
mov
das
stos
fwait
call
mov
aam
lods
lods
in
push
rcrb
xchg
gs
test
stc
scas
bound
inc
mov
add
xor
ret
lods
mov
xchg
repnz
mov
andb
jae
push
mov
push
cmc
cld
lods
add
cmp
popf
xlat
out
movsb
sarl
sub
shl
adc
sbbl
in
gs
jne
sub
pop
fimull
push
cmp
cld
jno
pop
ss
sub
insb
fists
mov
mov
movups
cmp
sbb
mov
dec
jge
mov
xor
or
gs
stos
shll
push
bound
jns
subl
js
inc
inc
push
mov
sahf
pop
mov
enter
addr16
movsb
sub
into
mov
fisubl
rol
mov
sbb
jmp
add
popa
push
mov
pop
xor
adc
push
mov
ds
push
pop
dec
int
cmp
jbe
dec
test
push
fdiv
int
fmull
or
std
cmp
inc
or
sbb
sahf
add
xchg
leave
jbe
scas
mov
mov
iret
fwait
movsb
jne
jo
mov
xlat
push
mov
fcoms
cmp
mov
sub
cmpsl
andb
mov
popa
inc
es
sub
daa
mov
inc
rorb
cmp
mov
gs
xor
cmp
xchg
rcrb
xchg
lods
jl
mov
mov
cmp
jg
add
enter
dec
or
jne
popf
rol
add
ret
pop
aam
ret
andb
je
mov
imul
push
in
mov
mov
sub
jbe
pop
xor
cltd
or
sbb
aaa
lock
jge
push
out
xchg
outsb
jne
ja
dec
stos
test
std
xor
insb
movsb
cmp
and
sbb
hlt
ret
mov
sub
test
dec
mov
inc
cmp
cli
in
xchg
and
out
rcll
nop
pushf
hlt
fnstcw
fisubrl
ficomps
adc
iret
je
hlt
inc
mov
inc
cli
cmp
fidivrl
pushf
mov
mov
out
aam
sbb
in
push
mov
dec
and
cli
mov
sahf
push
packuswb
cvtps2pi
shll
fisubrl
xchg
jle
fiaddl
cmp
push
cwtl
movsl
loop
shl
and
mov
std
cmp
call
es
xchg
cmc
insl
sub
jmp
stc
pop
aaa
push
jb
rclb
jp
out
xchg
lea
jno
xchg
pop
stos
inc
test
jns
xchg
test
shlb
pop
imul
add
mov
icebp
out
xor
jae
dec
cmp
test
push
int3
pop
orl
pop
pop
enter
pop
pop
and
aas
push
and
stos
daa
test
push
fistl
dec
bound
lock
rcrb
xchg
into
push
lock
push
into
xchg
mov
out
pop
dec
mov
push
and
pop
pop
ja
ret
scas
mov
jmp
lods
push
cmpsl
inc
jb
or
or
xchg
push
mov
jne
mov
and
mov
imul
sti
xor
sbb
mov
mov
or
arpl
cmp
decl
mov
jbe
or
jg
imul
mov
lret
adc
lea
in
ror
mov
fimull
dec
dec
push
cmp
movzwl
cmp
xor
out
mov
sbb
and
jae
pop
and
into
imul
mov
jbe
scas
jno
dec
or
sahf
cmc
mulb
adc
inc
mov
out
les
jns
fsubs
leave
incl
adc
pushf
pop
push
sub
fstl
and
inc
ljmp
lods
and
push
jne
push
jae
popf
fcoms
push
das
lock
and
mov
mov
inc
mov
out
inc
aad
push
or
xchg
and
adc
inc
adc
xchg
add
pushf
sbb
cltd
shrb
je
mov
inc
sub
xor
xor
cli
sub
cli
mov
out
jo
out
add
mov
and
ret
jno
hlt
xor
dec
or
lods
xor
test
rorb
roll
jmp
pop
push
push
sbb
addr16
int
inc
out
clc
pop
cltd
or
mov
xchg
leave
mov
pop
sarb
sub
cs
fwait
adc
cmpsb
xchg
cmpsl
jle
aam
mov
jge
hlt
dec
insl
mov
adc
and
push
pop
pop
js
push
testl
inc
ss
nop
mov
or
xor
mov
inc
out
mov
movsb
jle
pop
sbb
cmp
scas
bound
adc
mov
loopne
outsl
or
mov
jecxz,pn
test
popa
push
lcall
sarl
les
push
dec
inc
pop
inc
ljmp
jo
test
arpl
inc
sub
jnp
jb
fidivrs
mov
test
add
aam
xchg
cmp
sti
add
mov
insl
mov
iret
jns
fs
cli
scas
mov
adc
sub
movsb
aas
add
ljmp
cmp
cmpsl
dec
mov
je
jo
je
enter
cmp
or
push
dec
cltd
aaa
or
pushf
bound
lret
push
outsb
mov
pop
shrl
out
or
add
pop
sti
imul
mov
int3
push
xchg
aas
mov
aas
push
pop
lcall
insl
push
xor
jmp
mov
les
nop
xlat
mov
inc
aas
dec
add
push
mov
xor
mov
clc
shll
lret
repnz
test
mov
pop
mov
mov
inc
dec
out
mov
daa
jns
in
inc
out
jo
int
dec
jne
mov
and
fisubs
dec
lods
jns
gs
scas
add
cmpsb
mov
xchg
dec
add
mov
dec
or
mov
inc
hlt
enter
xor
add
sub
mov
imul
cs
into
mov
fs
lock
push
out
and
push
fsubl
daa
sbb
jae
mov
sbbl
aaa
cli
shlb
bound
rorb
mov
pushf
add
loop
xor
fdivs
int
cmpsb
aas
and
push
mov
mov
stos
fildl
repz
push
xchg
push
gs
inc
test
and
stos
sbb
div
inc
jl
jb
lods
inc
sbb
outsb
dec
stos
mov
push
insl
lods
sbb
addl
jmp
jo
loop
int
push
jae
cmp
push
add
or
ret
mov
add
and
dec
rcrl
movsl
test
int
mov
pop
lds
loop
xchg
jo
push
out
daa
cmp
sbb
inc
jmp
pop
jb
dec
lea
out
add
and
movsl
stos
out
xlat
mov
pop
mov
lods
movsl
decb
adc
es
xchg
push
repnz
dec
inc
call
mov
in
repnz
insl
pusha
xchg
push
jb
pop
lock
xchg
adc
xchg
lods
add
xor
lods
icebp
push
mov
ret
mov
adc
add
imul
adcl
sub
ret
je
js
movsl
movsl
inc
pop
dec
insb
fmuls
mov
inc
loop
xchg
insl
adc
xchg
push
cmp
jns
sti
add
and
outsb
xor
sub
and
enter
ret
pusha
rcrb
sub
loop
inc
sub
aas
push
dec
std
dec
push
sahf
test
mov
in
xchg
sub
fwait
xor
nop
cmp
popa
xorps
mov
push
jo
test
adc
dec
jmp
mov
cmp
int
mov
mov
rcr
pushf
es
lcall
adc
dec
xchg
or
ror
icebp
cmp
mov
imul
mov
sbb
test
cmp
push
pop
fsts
and
stos
xchg
jns,pn
ss
sub
mov
mov
sbb
jne
jg
dec
inc
xor
nop
int3
mov
pushf
inc
ffreep
mov
push
cwtl
sbb
fidivrs
and
or
repnz
dec
lock
mov
popa
push
dec
xchg
inc
dec
fcoml
adc
int
add
pop
in
sub
daa
xor
mov
push
in
xchg
icebp
lcall
mov
mov
call
lds
and
lret
push
out
fisubs
inc
out
test
inc
xchg
lret
nop
push
adc
out
jns
jne
mov
mov
dec
adc
imul
in
in
mov
and
rcr
mov
sub
xor
pop
popa
mov
and
ret
cmc
jge
je
xor
loop
sub
cmpsb
stos
sbb
xchg
and
leave
jne
push
nop
xchg
pop
pop
popf
loopne
negl
mov
ret
sbb
jne
mov
sbb
sub
enter
add
test
xorl
aaa
movsb
mov
popf
adc
xchg
push
cmp
dec
clc
sbb
repnz
stos
xor
and
mov
adc
inc
sub
pop
test
loop
jns
dec
sbb
and
stos
cmpsb
mov
rcrb
mov
adc
xor
rorb
or
sarb
outsl
dec
push
push
fstl
out
sti
call
lret
orb
arpl
and
out
int3
or
je
loopne
mov
add
iret
sub
pop
xlat
jnp
mov
xor
adc
jl
xchg
cmp
loope
dec
push
and
or
popf
icebp
iret
pop
in
insb
movl
pop
push
lea
aas
dec
scas
sub
cmp
pop
in
int3
je
stos
pop
mov
xor
leave
push
mov
pop
adc
sub
bound
lock
mov
xlat
out
call
fcmovu
dec
je
mov
cmp
mov
fidivs
cmp
fwait
jns
and
js
imul
ja
push
inc
or
xor
xchg
ds
xchg
or
pop
pop
pop
scas
pop
loop
icebp
je
add
jg
adc
or
out
mov
std
ret
iret
inc
mov
dec
adc
fildll
lahf
pop
sti
sbb
mov
out
xchg
push
jb
dec
imul
push
or
add
dec
add
inc
jae
dec
popa
stos
daa
cmpsl
cmp
pop
test
dec
and
push
lea
and
xchg
jp
inc
es
push
dec
bound
lret
mov
cmp
dec
or
insl
push
imul
out
icebp
dec
jp
gs
rcrb
ret
mov
xor
jl
jno
ja
adc
jge
mov
fs
cltd
bound
daa
ss
frstor
sti
and
imul
jmp
pop
int3
add
add
jb
push
add
loope
jns
cmp
sub
sub
mov
jmp
cld
inc
repz
or
jno
test
ficompl
out
pop
dec
arpl
test
adc
cltd
fsubrs
das
fiadds
out
fadds
popf
push
imull
xor
push
xchg
ljmp
imul
pop
imulb
rcl
rorl
adc
jg
push
sub
scas
rcrb
das
aad
cmp
call
insb
fwait
jo
sbb
mov
jns
xchg
cwtl
xor
xchg
jmp
jns
push
pop
test
cld
jo
dec
jbe
xchg
fs
pop
dec
in
inc
lods
arpl
push
jecxz
mov
cmp
dec
flds
fists
sub
jae
fcomps
arpl
imul
mov
rsqrtps
dec
sbb
in
arpl
flds
scas
fdivl
outsb
pop
mov
pop
lahf
cwtl
xorl
add
test
aad
xor
mov
mov
push
icebp
aad
add
adc
push
aaa
ljmp
jne
push
or
xor
or
pushf
sub
xlat
jle
stos
js
ja
testb
lods
and
or
in
leave
fidivrl
test
scas
mov
popa
or
add
pusha
jmp
ljmp
jb
stos
loope
outsb
repz
xlat
fdiv
ja
gs
icebp
jnp
outsl
xchg
xchg
pop
scas
cmp
into
jne
push
push
cmp
aad
mov
xchg
sub
mov
mov
movsb
sahf
jb
inc
push
test
loope
cltd
out
jb
xchg
mov
dec
xchg
or
popa
popa
jl
jns
cmpsl
pop
icebp
xor
dec
pop
add
mov
sbb
rclb
repnz
fs
inc
pusha
add
push
dec
aaa
add
out
xor
mov
mov
mov
test
xor
push
sbb
xor
adc
push
mov
xchg
xchg
out
orb
cmpsb
sbb
sbb
mov
sbb
fcomps
sub
fcoms
testl
mov
fs
cmp
lods
push
add
lods
sub
into
xchg
cmc
pop
popf
and
sbb
daa
push
fbstp
push
cmp
call
or
push
add
mov
mov
hlt
sub
dec
xchg
mov
xor
mov
fwait
shll
add
mov
dec
repnz
jbe
adc
dec
scas
jo
lock
stos
ja
or
cs
lods
jo
movb
jns
and
inc
dec
mov
ljmp
test
push
mov
mov
scas
in
addr16
add
stc
testl
cmp
ljmp
xor
push
xchg
gs
xchg
push
rcrb
outsb
mov
cltd
dec
or
ret
inc
in
jno
push
jge
iret
fs
inc
loopne
loop
sbb
xchg
shlb
sbb
icebp
mov
add
gs
jbe
rcrb
fcoms
das
or
clc
jo
push
scas
ret
and
mov
in
stc
aad
ss
sbb
out
int3
xchg
xchg
or
inc
mov
adc
mov
and
shl
cmp
mov
pop
xchg
mov
leave
enter
scas
pop
pop
aas
and
out
std
not
fistl
mov
jge
jmp
pop
ret
repz
pop
pop
dec
push
adc
pop
cmp
je
fimull
scas
push
xlat
sbb
cmp
adc
rorb
jae
xor
mov
or
add
cmp
pop
xchg
mov
sbb
in
int
jb
cmp
lea
cmp
or
nop
cld
cmp
popa
js
int
jb
inc
fisubl
jb
js
cmp
enter
gs
mov
cmc
jmp
sub
xchg
jge
rol
push
add
mov
xchg
sbb
mov
jecxz
les
out
mov
xchg
xor
data16
int3
leave
mov
adc
jge
in
arpl
daa
xchg
sbb
into
movsb
dec
add
and
pop
sarl
inc
xchg
xchg
test
cmp
loopne
dec
sub
xchg
fmul
test
jb
repz
dec
test
sub
pop
imul
sub
jle
jge
xchg
aaa
xchg
dec
jb
adc
orl
lret
shr
arpl
lds
inc
cmp
aam
sbb
xchg
ja
repz
push
mov
cld
shl
xlat
aad
ss
push
jns
icebp
test
movsl
sub
sub
dec
jno
mov
fwait
mov
pop
mov
mov
jb
or
push
mov
mov
dec
imul
ffreep
fldt
ficompl
fcmovb
sub
fcompl
mov
aam
pop
fwait
repz
dec
in
jno
je
xchg
cmp
sbb
adc
pop
roll
out
mov
out
cs
ror
or
jl
or
ljmp
jnp
data16
cmp
inc
mov
mov
cmc
sbb
decb
push
daa
test
into
sub
xchg
ret
inc
pop
jae
push
ss
dec
or
xchg
xor
jmp
xor
mov
mov
mov
call
inc
mov
mov
stos
clc
nop
mov
pusha
mov
scas
flds
cmpsl
xchg
imul
sbb
jp
lea
les
sbb
sub
pop
mov
iret
dec
xchg
mov
adc
notl
into
pop
loopne
push
fildl
push
mov
aad
insl
jl
mov
or
enter
sub
sbb
push
xlat
adc
mov
jmp
dec
sub
in
inc
leave
cmp
pushf
dec
jns
mov
test
into
ret
jo
sub
and
add
scas
jmp
cmp
push
jnp
mov
jge
fdivrl
xor
orl
js
pop
xor
push
jmp
xchg
subb
push
arpl
ljmp
je
dec
sub
imull
hlt
mov
xchg
ja
ja
mov
fldt
js
sub
mov
mov
xor
xlat
fidivs
inc
jns
sbb
push
pop
fs
jg
and
fcoml
cmp
std
and
pop
cmpsb
xor
and
aad
pushf
xchg
stc
inc
and
mulb
ja
add
fbld
roll
stos
and
stos
insl
outsl
mov
mov
xchg
inc
add
cmc
mov
mov
icebp
adc
hlt
subb
int3
jns
inc
or
inc
rclb
cmp
cmp
xchg
or
push
clc
aas
jb
xchg
adc
mov
push
add
jle
pusha
push
cmpsb
inc
cmpsb
in
inc
mov
scas
mov
push
scas
int
jnp
xchg
mov
pushf
adc
inc
xlat
xor
push
pop
xor
dec
xchg
and
fldcw
hlt
push
les
push
pop
xchg
sub
mov
mov
inc
push
mov
jg
push
cmpsl
mov
orb
stos
jno
sbb
mov
add
sarl
push
xor
incl
mov
or
jp
jmp
loope
adc
or
pop
xchg
popf
xchg
pop
or
lds
pop
ret
and
cmpsl
pop
pop
push
leave
cmp
mov
mov
mov
jp
mov
mov
mov
cmc
lods
leave
arpl
hlt
mov
ret
lret
jbe
sbbl
fistl
lock
imull
mov
push
lock
push
out
popa
and
imul
push
pop
sub
bound
out
add
adc
popf
xchg
inc
inc
leave
xor
mov
mov
cmpsb
mov
popa
and
push
dec
pop
and
adc
sub
clc
lods
test
lock
xchg
inc
out
jb
pop
dec
dec
stc
aaa
adc
loope
xchg
int
mov
es
push
push
cli
push
or
in
lret
push
sbb
inc
movsl
cmp
jl
mov
xor
push
mov
or
mov
das
aam
jnp
mov
mov
cmp
shl
in
nop
mov
ret
jb
fdivl
out
je
push
xchg
adc
movsl
mov
test
mov
loope
push
sbb
inc
jg
mov
jmp
ja
addr16
mov
push
mov
pop
movsl
in
xor
sahf
cmpsb
loope
pop
sub
std
xor
sub
call
jo
pusha
aas
sub
sarl
jno
nop
mov
push
add
test
fwait
sar
jnp
imul
call
int
push
xchg
xlat
and
sbb
out
add
outsb
les
mov
mov
hlt
fildll
add
lds
out
mov
test
xchg
add
mov
or
fldt
mov
or
add
xorb
mov
and
out
cld
lahf
xchg
fisubl
inc
ja
je
cmpsl
inc
std
mov
mov
and
and
dec
cmp
push
in
dec
sub
cltd
xchg
sbb
int3
mov
cmp
mov
push
jg
es
mov
pop
xlat
xchg
adc
dec
adc
stos
adc
shrl
repz
clc
rolb
xchg
lahf
fs
push
jmp
loop
fwait
mov
push
aas
rclb
pop
xor
jnp
rcrl
push
inc
adc
mov
fnsave
add
stos
paddw
mov
xchg
je
inc
adc
push
jnp
stos
xchg
aas
cltd
adc
adc
push
in
sub
shr
out
out
imul
hlt
xor
xor
sub
or
loop
icebp
nop
push
jbe
leave
imulb
push
movsl
dec
jbe
push
mov
pop
testb
jecxz
add
pop
cmpb
and
int
jp
xchg
ljmp
adc
icebp
or
scas
ljmp
sbb
sbb
addr16
pop
add
cs
pop
mov
xlat
popf
xchg
ljmp
push
in
dec
outsb
ss
fdivl
fldl
mov
jg
sub
sbb
push
call
push
jecxz
movl
dec
loopne
cltd
lahf
cltd
sbb
fidivs
out
mov
clc
jnp
enter
jmp
std
div
int
cld
repnz
gs
adc
or
daa
popa
repnz
cmp
pop
cli
inc
push
lcall
cmpsl
mov
xchg
div
or
push
mov
pop
push
xor
inc
jge
add
mov
cwtl
pop
sub
fmuls
fldcw
sub
sbb
hlt
mov
mov
outsb
and
jge
jecxz
inc
jmp
ds
repnz
pop
jb
mov
xchg
insb
in
sub
shrb
scas
cwtl
push
and
fwait
jae
mov
adc
pop
adc
ds
cltd
xchg
rcr
fwait
or
aas
addr16
cmp
sarl
dec
adc
jb
adc
mov
popf
dec
ljmp
dec
adc
in
cmp
pop
push
outsb
or
loopne
enter
sarb
adc
xor
jp
xchg
iret
ja
mov
lret
and
in
dec
aaa
insl
sbb
aad
cltd
or
xchg
adc
icebp
mov
jmp
adc
je
mov
mov
inc
cmp
movsb
mov
fsts
lea
into
scas
jae
cmp
ss
and
xor
out
aas
add
cwtl
ret
ljmp
push
push
pop
pop
push
sub
cmovns
jp
cmp
cmpb
mov
shl
jno
mov
mov
add
mov
enter
mov
sbbb
xor
imul
mov
nop
scas
outsl
mov
lock
movsl
fsubrl
sub
test
ret
fistl
jecxz
push
repz
xchg
inc
inc
add
pop
repnz
and
mov
xor
jmp
and
movsl
mov
dec
es
subl
inc
loope
pop
jmp
repnz
inc
or
ftst
pop
imul
xchg
int3
inc
jg
lret
jne
outsl
mov
das
test
scas
xchg
mov
rcrl
imull
pop
xlat
sbb
inc
ja
inc
add
cmp
cmp
jp
add
pusha
sub
das
jp
outsb
orl
mov
sarb
into
sahf
lock
cmp
mov
inc
dec
int3
or
mov
xchg
cmp
sbb
ds
arpl
push
nop
push
sub
pop
imul
adc
lcall
push
push
movsl
xchg
mov
mov
setne
push
xor
pop
lock
sub
mov
enter
addr16
pop
sarb
adc
cmc
lcall
inc
mov
add
mov
pop
rcrb
and
push
jg
shrl
inc
int3
cwtl
xchg
jno
icebp
or
dec
mov
ds
addl
xor
pop
jg
jle
mov
test
das
jl
add
je
push
pop
lea
xchg
pop
hlt
jecxz
add
sub
cli
sub
cmp
or
arpl
or
leave
push
scas
fidivl
and
pop
fcomp
dec
xchg
sbb
loopne
xor
mov
mov
cmp
out
mov
push
cmp
in
push
outsb
stc
fisubs
mov
pop
das
scas
pop
mov
jp
and
jge
inc
fistps
mov
adc
dec
sbb
adc
fisubrs
or
adc
je
cmp
clc
dec
xchg
push
fidivrl
fs
test
mov
shr
and
mov
cltd
stos
movsl
and
mov
insb
mov
mov
add
icebp
lret
or
mov
or
movsb
gs
dec
into
shl
mov
xor
stc
add
orb
nop
lea
xor
jnp
fldt
stos
pop
inc
adc
xor
xchg
adc
out
push
je
cwtl
mov
inc
xor
or
mov
pushf
adc
adc
in
inc
jmp
popl
mov
fwait
jp
mov
jl
aas
mov
das
jo
rcr
aad
outsl
pop
adc
push
inc
out
imull
xchg
int
call
inc
rorb
bound
in
xchg
insl
xor
adcl
or
iret
bound
out
in
dec
fucomi
and
or
imul
ljmp
inc
imul
call
fsubrs
and
bound
xorb
shlb
jbe
pop
cs
loopne
jle
out
jg
call
fbld
or
negl
dec
mov
mov
inc
xchg
sti
fcmovbe
test
out
pop
test
xchg
push
sbb
mov
add
bound
lock
into
pop
xchg
mov
scas
pop
pop
xor
add
inc
call
mov
pushf
dec
sti
pop
sbb
mov
dec
jecxz
mov
outsl
outsl
push
sub
xor
adc
pusha
es
jmp
push
dec
jmp
adc
pop
inc
aam
out
fs
sub
movsl
dec
ret
lods
bound
out
out
push
mov
push
xorl
shll
jp
les
inc
dec
out
mov
push
sarl
xchg
repz
push
in
fildl
sbb
sbb
movsb
xorb
je
xlat
mov
or
mov
stc
js
out
mov
fisubs
js
stc
cmp
mov
inc
mov
xor
and
pop
in
jo
push
inc
testl
nop
cmp
sbb
insl
sbb
js
sbb
lahf
pop
push
cmpsl
push
inc
jl
sbb
testl
aas
xchg
sar
sbb
test
out
pop
mov
cmp
mov
lcall
cmpsl
test
pop
and
lds
ret
jge
addl
pushf
mov
add
loopne
out
das
and
add
sbb
jle
xchg
out
jne
cld
pop
cld
or
fidivrl
sbb
mov
adc
mov
pop
je
out
sarb
jmp
std
pop
and
and
sti
jns
imul
cs
dec
mov
xchg
mov
xchg
push
jnp
adc
enter
clc
out
clc
xor
sub
stc
push
das
fsubl
ja
xor
and
pop
test
or
test
jg
lea
xchg
cmp
pop
testb
mov
outsb
sub
sbb
mov
insb
push
test
inc
fwait
outsl
dec
lret
ds
or
lret
hlt
mov
pop
dec
push
xchg
hlt
jmp
push
dec
data16
fs
cwtl
inc
sub
lcall
into
push
sub
sti
sti
adc
inc
dec
mov
pop
mov
das
test
cwtl
pop
jae
cli
fstpl
mov
pop
sub
xor
cli
aas
mull
or
jnp
mov
in
fisubrs
add
imul
xchg
sahf
ja
loopne
sbb
xchg
pusha
jne
adc
xor
inc
push
adc
mov
add
xor
cmp
dec
adc
push
arpl
pushf
mov
fstpl
or
dec
mov
fstpl
shr
add
cmpsl
mov
add
mov
imul
xor
daa
es
testl
lock
pop
jo
call
mov
jae
fstpl
cmc
shlb
jns
add
test
leave
loope
push
movsl
or
mov
mov
popf
sbb
stos
test
outsb
nop
push
mov
mov
call
sahf
dec
push
adc
inc
daa
in
scas
mov
int3
ds
cmp
rcrb
adc
cmp
push
add
pop
bound
push
and
mov
adc
fs
dec
daa
fisttps
xor
fwait
dec
fsubp
mov
push
negb
das
loopne
fidivs
stos
ds
or
sub
pop
or
outsl
mov
iret
push
fnstenv
outsb
mov
roll
cltd
jge
xor
adc
call
or
mov
xor
jb
lea
test
xor
pop
pop
mov
jle
fstps
add
iret
movsb
test
stos
ss
mov
fisttps
lds
dec
sub
and
out
insb
ret
push
or
pop
arpl
lahf
in
mov
mov
clc
dec
jno
mov
sub
add
mov
aad
sub
es
out
je
xchg
les
jecxz
ljmp
or
inc
adc
rclb
shrl
sub
jmp
inc
mov
loop
rorl
mov
into
push
adc
xchg
mov
in
push
mov
mov
outsl
or
faddp
aad
xchg
insl
ret
ljmp
push
pop
xchg
enter
mov
add
and
and
fwait
cmp
int
inc
outsl
xchg
mov
xchg
xor
inc
cmp
roll
sahf
push
xchg
and
into
loope
mov
imul
aas
add
movb
push
add
xchg
movsb
fsubl
push
sarb
or
movsb
inc
or
pop
imul
jns
orl
lret
add
adc
mov
dec
inc
or
aas
dec
push
adc
pop
mov
mov
mov
stc
sub
add
mov
cld
push
sti
fnstsw
push
mov
and
mov
ret
cmp
cmp
les
push
xchg
fcompl
mulb
cmp
movsb
shl
fstpt
sbb
iret
push
cmpsb
jb
adc
sarb
stos
mov
outsb
jle
dec
and
pop
jo
ja
sbb
repz
fdivrs
icebp
aas
or
loop
out
mov
and
xchg
sub
sbbl
and
add
pop
subl
out
jecxz
gs
inc
jo
aaa
xlat
imul
or
xchg
cli
push
xchg
stos
xor
push
jo
je
stos
pop
aam
adc
xor
xchg
test
cmp
lret
ja
fisubrl
flds
push
push
fmull
lds
out
dec
aas
or
cs
push
push
mov
sub
fld
and
xlat
test
push
xor
bound
lahf
lahf
add
fidivs
add
ja
fimull
imul
loope
mov
mov
enter
fcomps
movsb
mov
jle
sarb
mov
loopne
roll
in
or
inc
inc
in
push
mov
addr16
sbb
shlb
add
daa
add
jle
movsb
push
mov
pop
ficompl
bound
rcrb
shr
mov
push
in
fdivp
sub
pop
jg
aam
stos
dec
out
push
leave
inc
jl
aam
adc
data16
jnp
js
add
aam
mov
add
shll
dec
dec
imul
movsb
jge
lret
mov
xchg
push
je
xor
jne
pop
pop
cmp
add
sub
jno
subl
sbbl
inc
cmp
lcall
xor
push
inc
jo
scas
js
aas
xchg
sti
pop
add
hlt
mov
sub
sub
das
out
mov
sub
xchg
addr16
mov
mov
mov
inc
inc
ret
loope
or
pop
cmp
sbb
push
mov
and
pop
int3
xchg
addr16
shll
loop
jg
fistpl
sub
sub
mov
lock
jbe
jecxz
je
ljmp
xchg
dec
cmp
or
inc
cs
dec
dec
cvtps2pi
adc
xchg
jns
test
and
lret
sub
in
rdmsr
ficompl
pop
and
enter
push
iret
xchg
imul
or
in
lods
mov
fs
xor
dec
shll
mov
dec
rcrl
and
pop
push
stos
mov
adc
gs
sbb
or
scas
ror
cmpsl
addr16
mov
mov
mov
jae
sarl
adc
test
mov
insb
notl
jge
rcr
aaa
inc
ret
std
fs
inc
andb
jnp
lcall
cmpsb
shr
and
enter
cmp
das
jns
rorl
inc
shlb
pop
cmp
xor
dec
sbb
in
int
clc
sub
or
and
jl
xchg
fsubp
movsb
scas
int3
push
rol
mov
loop
inc
addr16
jnp
mov
pop
rcll
xlat
leave
aaa
mov
fildll
adc
or
pop
pusha
bound
jl
and
xlat
add
enter
jns
mov
dec
xchg
push
and
scas
and
add
and
add
xchg
das
fcoml
cmp
jg
xchg
mov
jb
mov
push
test
dec
rcrb
cmc
cmp
inc
mov
rclb
mov
out
insb
out
sti
es
xchg
push
push
jno
sbb
das
dec
lea
push
cmpsl
jb
push
cmp
adc
mov
jecxz
testb
mov
or
inc
and
push
lahf
adc
leave
icebp
mov
cmpb
or
jns
jecxz
bound
ret
jae
xchg
int3
leave
mov
out
adc
lahf
ljmp
cs
or
and
ss
dec
push
push
lea
mov
cld
repz
les
mov
pop
fldl
jge
iret
sbb
cmp
test
outsl
outsb
sbb
inc
pop
and
mov
dec
sbb
ficoml
or
xor
xor
mulb
popa
push
mov
mov
inc
rcl
aas
into
cltd
cmp
sahf
jnp
or
scas
xor
ljmp
inc
mov
pushf
inc
imul
stos
lret
xchg
jno
dec
jns
jbe
dec
test
mov
lret
stos
xor
ja
scas
push
cld
iret
jge
dec
scas
and
filds
cmc
xchg
dec
sub
push
add
insb
push
jno
pusha
rcrb
and
outsl
idivl
cmp
test
mov
xor
idivl
stos
in
push
sbb
out
mov
repz
shll
popf
or
jmp
stc
jne
jns
test
out
adc
add
lds
aaa
fimuls
rorb
push
shll
ret
push
pusha
xor
leave
cmpl
int3
pop
jge
shr
push
xchg
aas
dec
ja
cmp
push
daa
mov
cs
cmc
pop
in
cmp
mov
jo
jo
xchg
inc
mov
cwtl
loopne
add
xor
mov
pop
shll
jnp
fsubrp
sbb
arpl
add
jno
or
out
add
add
dec
ds
push
sub
fnstcw
cltd
adc
push
sahf
popf
lock
bnd
xchg
notb
push
rorl
pusha
int
stc
out
testl
int3
outsl
cmp
xchg
and
and
pop
adc
push
or
xchg
std
pop
lock
pop
mov
jle
sbb
mov
mov
adc
push
jnp
mov
pusha
mov
in
pop
int3
and
inc
xor
mov
xchg
ret
in
pop
push
add
sahf
add
inc
or
sbb
int3
cmp
in
movsl
cmpsl
adc
imul
ds
push
or
sub
sub
sbbl
fnstenv
fwait
or
or
and
fwait
add
aam
outsb
scas
fsubrs
orb
mov
das
mov
pop
in
cmpsb
call
xchg
mov
push
shll
sarb
sarb
lds
mov
xor
mov
hlt
cs
jle
addr16
mov
cmp
xlat
int3
cmpsl
and
sub
pop
sbbl
popf
dec
icebp
mov
xchg
or
mov
cmp
push
fwait
and
ss
mov
repnz
shl
pop
fldenv
adc
inc
xor
roll
je
in
fldenv
jg
jl
sbb
and
push
mov
dec
mov
mov
stos
in
xor
sahf
int3
cmpsl
push
push
shlb
jno
push
push
out
inc
or
xor
int3
push
jne
scas
jbe
arpl
jg
rcl
xchg
loopne
add
iret
xchg
inc
dec
outsb
test
mov
stc
push
mov
inc
jne
sub
into
push
inc
sbb
pop
rorl
mov
inc
leave
addr16
mov
jbe
js
in
cltd
je
pop
cmp
xchg
dec
cmp
push
lods
sbb
sub
sub
iret
jle
popw
fs
mov
inc
iretw
pop
in
pusha
or
xchg
jle
dec
add
aam
les
in
or
ja
pop
clc
fisubrs
dec
pop
push
lods
mov
mov
push
fisttps
enter
dec
cltd
lahf
mov
add
andb
das
push
sub
ret
test
das
push
jmp
cli
cmc
mov
sub
xchg
push
aad
jno
loop
int3
pop
ljmp
into
fisubrs
sub
pop
insb
push
mov
push
adc
icebp
adc
xor
push
xchg
test
out
subl
push
pop
cltd
fisubrl
in
xchg
iret
adc
jl
mov
ja
jo
cwtl
push
xlat
ficompl
pop
js
notl
arpl
sarl
mov
inc
pop
fxch
call
addl
shrl
jnp
mov
clc
gs
adc
inc
mov
loope
cmp
dec
adc
test
out
lcall
jmp
mov
sub
scas
and
push
adc
and
iret
dec
xchg
push
mov
cmp
inc
cs
add
sbb
inc
xor
rcrb
pop
call
lods
mov
std
jae
repz
mov
jns
jmp
nop
enter
push
ljmp
adc
aaa
es
push
imul
push
cwtl
mov
test
jne
inc
xor
mov
and
pop
lods
mov
loop
add
adc
loopne
subl
pop
cmp
sub
flds
mov
push
sbb
nop
cmp
dec
adc
ja
lods
scas
mov
jbe
sub
lock
dec
add
or
mov
hlt
cmp
ja
mov
lret
inc
jns
repnz
mov
das
and
pop
xchg
push
addb
dec
sti
jnp
int
adc
or
shrb
add
pop
in
and
add
sbb
or
cwtl
jg
add
xchg
mov
dec
sbb
mov
les
popf
jge
test
pop
scas
push
sbb
xor
mov
cmpsl
dec
lock
lea
popa
stos
test
pshufw
orl
cmp
xchg
test
cwtl
mov
pop
xchg
shl
mov
push
negl
jg
or
and
dec
fcoml
jne
sbb
mov
and
push
push
add
mov
fdivrl
push
jo
int3
and
or
test
push
cli
mov
mov
xor
sbb
push
mov
xchg
inc
pop
mov
mov
ffreep
cli
and
js
ds
mov
xchg
mov
adc
sub
fsubrp
and
push
xorb
inc
movsb
jbe
jg
jmp
mov
dec
fnsave
fstpl
js
pop
nop
mov
mov
mov
sbb
push
xchg
cmp
lods
decl
or
mov
test
inc
rcll
jmp
push
sub
xor
sub
stos
fisttpll
inc
lods
mov
scas
cmp
incl
jmp
test
sub
lock
stos
nop
imul
add
xor
mov
das
fsubrp
loope
gs
ljmp
sub
xor
pop
out
push
jno
arpl
in
sub
adc
test
aam
cld
sbb
imul
ds
cwtl
adc
aas
and
in
je,pn
lret
jge
or
aam
dec
js
mov
sub
roll
dec
sub
lock
xor
jge
adc
mov
insb
mov
push
xchg
mov
mov
add
in
jg
out
leave
sarb
sub
cltd
mov
out
sahf
daa
pushf
mov
push
inc
test
repnz
mov
pop
sub
sahf
xchg
jle
arpl
cmp
push
lock
mov
or
adc
sub
enter
and
xor
cmpsb
sub
pop
ret
mov
aam
mov
shr
lock
fistl
in
pop
mov
mov
fyl2xp1
mov
xchg
ljmp
nop
xor
daa
sbb
lcall
loope
outsb
lea
mov
jno
rcrb
mov
mov
jb
rep
cwtl
xor
out
mov
imulb
xlat
xchg
push
mov
decl
adc
push
dec
shll
jb
inc
fistps
sbb
sub
jno
mov
push
adc
sbbb
push
fnstsw
push
test
in
rorl
jge
je
mov
push
push
mov
sub
jne
inc
enter
scas
inc
or
jecxz
in
outsl
fstp
and
sub
mov
mov
xchg
cmpsb
sbb
sub
push
pop
aad
mov
dec
iret
in
mov
cmp
mov
inc
cwtl
push
push
leave
movsb
dec
aad
in
out
mov
fiadds
ret
mov
push
addr16
and
mov
mov
pusha
and
aad
push
xor
jle
add
push
inc
loop
dec
stos
cmc
gs
divl
das
sbb
add
push
scas
jge
outsl
mov
cmc
scas
shl
sub
sbb
or
ds
imul
push
aas
stos
add
stos
cmp
ljmp
and
pop
xchg
cmp
fsubrs
cmpsl
scas
push
fcmovnu
rcll
mov
add
in
pop
or
pop
mov
jecxz
xchg
and
lea
cmp
stc
test
addr16
inc
mov
in
push
xor
adc
mov
pop
bound
int3
rclb
out
fnsave
insl
jg
sbb
outsb
pushf
in
in
les
and
sbb
or
jbe
loopne
xor
adc
test
pop
fwait
mov
icebp
mul
ja
add
push
jecxz
add
jbe
out
pop
scas
and
mov
aad
xor
sbb
stc
sbb
xchg
insb
daa
lret
mov
mov
jmp
mov
mov
jge
movsl
xchg
sub
xchg
sub
inc
pusha
int
xor
mov
xchg
les
mov
pushf
sub
fisubl
jp
and
hlt
clc
flds
pop
daa
cmp
or
add
sub
pop
rcr
sbb
push
mov
or
jmp
clc
scas
fs
add
jmp
idivl
test
xchg
xchg
in
mov
das
mov
add
cmp
mov
inc
out
test
cltd
arpl
mov
js
inc
push
fcom
jo
mov
pop
dec
pop
or
imul
mov
outsl
mov
sub
inc
fidivrs
mov
into
sub
add
call
frstpm(287
push
in
int3
sbb
sub
add
sbb
je
push
insb
ds
pop
add
insl
xchg
insl
out
test
or
adc
cmp
cmpsb
std
daa
dec
out
aaa
ss
mov
lret
dec
mov
dec
fcompl
cmpsl
lods
or
sub
push
iret
rcll
add
mov
es
xor
sub
inc
adc
loope
sub
mov
or
shl
add
iret
lea
jp
sub
xor
test
es
adc
add
pop
mov
sub
es
xor
ljmp
call
push
pop
stos
addr16
or
movsw
pop
stc
dec
shr
mov
add
pop
pop
mov
xor
dec
arpl
sub
pushf
mov
sbb
xchg
mov
xor
dec
add
xchg
mov
jmp
jno
cmpsb
xor
sbb
into
mov
sbb
idiv
cmp
movsl
cmpsl
fs
sti
pop
jno
scas
fstps
adc
cmp
sbb
xor
hlt
mov
sub
movsb
sub
call
sbb
fnstenv
popa
and
dec
or
jns
sbb
sub
sub
fcoms
mov
dec
outsl
sub
cmp
leave
out
adc
jno
jge,pt
cld
mov
and
push
mov
dec
push
mov
mov
jl
sub
lea
lret
adc
scas
out
cmp
cmp
inc
jp
loop
and
sub
jbe
pop
in
inc
ja
xorl
dec
into
daa
jae
cmpsb
lcall
xor
jp
mov
inc
or
or
xor
jmp
popa
dec
aaa
inc
loop
mov
cmp
mov
fsub
stc
popa
dec
sbb
pop
arpl
enter
sbb
jne
lret
inc
adc
mov
xor
cmp
add
nop
xchg
std
cltd
cmp
dec
rolb
add
int3
fstp
mov
lret
dec
xchg
sbb
or
pop
jbe
pushl
lcall
loope
sbb
push
sti
sbb
scas
xor
jnp
fsubs
leave
push
xlat
jno
aad
loopne
xchg
pop
rcr
cmp
leave
jno
jmp
pop
stos
ret
or
lods
es
cwtl
xchg
jnp
pop
xchg
insl
jmp
and
ljmp
inc
jo,pt
xchg
bound
frstor
jns
jp
cs
xor
push
mov
out
pusha
dec
xor
jg
sti
add
and
dec
mov
jmp
mov
push
xchg
jecxz
stos
sub
cmc
pop
aad
inc
or
add
adc
push
loop
pop
push
ficompl
push
mov
and
nop
cmp
cmc
lcall
clc
mov
xor
push
fldcw
scas
push
cwtl
fisubrs
and
inc
nop
insb
fs
pop
mov
sub
lcall
insl
mov
outsl
mov
cmpsl
ljmp
push
adc
insl
xor
sub
sbb
test
fwait
xchg
cmp
mov
pop
insb
inc
loopne
push
push
es
lret
daa
int3
in
pushf
ret
out
sub
outsb
add
imul
pop
movsb
insl
sbb
adc
sub
jo
mov
movsl
pushf
lcallw
std
insl
jg
adc
shll
sahf
test
icebp
inc
xor
sbb
push
inc
ja
add
clc
and
jbe
sbb
inc
push
loop
xchg
jg
iret
into
cmpsl
mov
das
stos
mov
xor
hlt
cmp
and
adc
rep
lods
in
outsb
mov
js
or
push
xor
lods
push
jle
cltd
pop
xor
mov
ret
lods
sbbl
mov
inc
sub
clc
stos
cs
sub
insb
pop
movsl
sbb
loope
adc
mov
xor
jns
in
or
cld
push
mov
test
xchg
cmp
imul
cmc
jbe
add
in
mov
std
and
xor
mov
pop
addr16
adc
nop
sub
in
iret
ror
jecxz
push
jae
fistpl
lds
out
inc
push
fadds
subb
adc
jae
jbe,pt
popa
fwait
shlb
in
jns
addr16
lock
cmpsb
jp
lret
mov
ja
push
adc
cmp
loope
fwait
ds
ja
mov
insl
cmc
lret
jbe
add
addb
pop
xchg
or
lods
xor
inc
or
fldlg2
ret
xor
sbb
insl
add
pop
aam
clc
jnp
out
adc
js
add
dec
lret
stos
push
aas
push
mov
enter
dec
in
loopne
popf
lea
xor
aad
mov
mov
push
mov
mov
out
icebp
aaa
addb
mov
mov
stos
xchg
mov
mov
stos
in
cmp
ffree
fistl
movsl
mov
test
adc
inc
insl
pop
xchg
jae
incb
sbb
add
lods
cmc
cli
mov
mov
dec
push
ja
push
jg
shl
mov
or
outsb
inc
aad
iret
cmp
lahf
outsl
loopne
insb
inc
adc
jp
jge
incl
add
push
pop
push
es
xchg
add
adcl
lret
jge
and
out
gs
cwtl
xor
and
mov
hlt
jb
outsb
jnp
xor
mov
adc
push
mov
jl
icebp
fldl
loope
mov
addr16
lcall
xor
fists
and
jl
add
mov
or
xlat
and
insb
sbb
fwait
mov
dec
and
loopne
xchg
jo
setge
push
dec
insb
dec
push
inc
sub
lret
inc
push
add
or
push
jns
les
rcr
pop
decb
fsubs
pop
xchg
inc
out
lds
ljmp
es
sub
lods
into
add
pop
mov
dec
pop
mov
fs
sub
xchg
jg
test
and
stos
inc
rcl
int
xor
int3
push
nop
or
std
aad
scas
mov
xor
orl
das
lret
popa
push
sti
gs
xchg
scas
lds
or
mov
loope
or
idivb
int
in
sarb
clc
push
fstpl
push
leave
fidivs
jecxz
icebp
xchg
cmp
js
jmp
xor
push
push
adc
mov
rorb
cmpl
ss
jno
add
push
stos
mov
ret
jno
ss
leave
mov
mov
incl
nop
in
jo
lds
xchg
jnp
scas
sbb
faddp
xlat
mov
sbb
ret
mov
inc
adc
pop
insb
or
lods
pop
jle
pop
scas
xchg
data16
lods
std
dec
stos
ja
les
mov
sub
push
mov
jl
cld
jae
scas
aam
icebp
stc
push
test
jle
add
scas
push
sbb
fidivrs
or
outsl
pop
cmpsl
arpl
pop
jnp
jnp
dec
add
mov
enter
xor
fs
push
hlt
data16
add
clc
xchg
adc
or
sbb
mov
jo
ds
insl
mov
jnp
pusha
xchg
pushf
dec
and
jne
cmp
insl
clc
or
int
cmc
inc
push
sub
jb
mov
hlt
shrb
xor
lea
clc
jge
push
push
cmp
jb
gs
fadds
js
test
rorb
fldcw
insb
pop
mov
sub
lods
mov
adc
push
cmc
cmp
popa
out
inc
xlat
das
inc
ljmp
scas
or
adc
cmp
inc
jmp
mov
and
mov
sbb
jmp
sub
pop
frstor
mov
xchg
inc
dec
jne
imul
mov
sub
insl
push
adc
jns
daa
stc
lods
cmp
dec
xchg
pop
ja
and
xchg
sub
jmp
pusha
sti
mov
cwtl
fstps
shl
jo
pop
out
xor
dec
cmpsb
mov
xor
and
and
push
cmpsb
add
sub
and
pop
popf
jb
xchg
push
pop
sub
sbb
cs
into
push
out
movb
fucomp
setnp
mov
xchg
rcll
push
fbstp
outsl
inc
aaa
test
and
rolb
cs
or
leave
lds
testb
and
pop
in
dec
xchg
lods
push
jne
scas
xlat
adc
pop
cmp
jbe
pop
xchg
push
inc
xor
lea
adc
pop
test
mov
push
cld
and
xor
mov
add
sar
call
xor
int
adc
add
mul
fidivs
cmp
inc
sahf
mov
mov
jl
inc
sub
sbb
xchg
jae
das
lret
pop
push
xchg
jge
inc
cltd
sbb
push
inc
les
sub
imul
xor
and
in
pop
ret
or
add
jb
bnd
and
mov
in
data16
arpl
sub
ljmp
and
mov
aaa
sub
mov
fsub
nop
loopne
sbb
add
cli
push
xor
cmp
in
int3
aad
mov
pushf
or
sub
int
xor
int3
sbb
lcall
xchg
lock
push
push
loope,pn
xor
adc
xchg
jge
negl
add
mov
push
cmp
cmp
ljmp
mov
cmp
sti
rcll
fldcw
sbb
and
sub
dec
lahf
jo
dec
out
jns
int3
arpl
lds
adc
outsb
loopne
push
lods
or
cltd
or
pop
sbb
outsb
xor
outsl
xchg
pop
push
sub
in
push
cmp
or
cmp
lock
leave
xchg
nop
aad
dec
add
dec
adcl
sbb
lods
addr16
mov
hlt
js
adc
mov
mov
fimuls
mov
jno
out
xorl
iret
bnd
add
ja
and
xor
lods
std
push
addb
decb
in
shl
aad
and
rclb
xchg
mov
sub
mov
fdivrl
lods
stos
push
outsb
push
jg
sbb
sbb
inc
push
decb
xchg
into
aas
push
and
fs
jmp
xor
aaa
jns
test
cld
mov
es
sub
xor
or
aas
jb
pop
enter
pop
fsubr
sti
lea
push
pop
push
dec
pop
pop
aaa
xor
add
cli
jae
stos
push
sarl
test
divl
pop
popa
cs
inc
in
mov
cmp
ss
div
push
sbb
push
push
sbb
mov
and
sub
sahf
lret
je
data16
in
and
icebp
sbb
mov
addr16
dec
orl
and
shrl
jge
jne
or
push
in
fs
and
cli
movl
inc
pop
jo
cmp
push
sub
out
pop
testl
icebp
dec
ds
test
sahf
pop
push
sti
movsl
dec
in
or
fdivrl
aam
arpl
ja
pop
roll
jnp
mov
cwtl
sub
mov
or
sub
ja
dec
stos
inc
pop
cmp
push
mov
es
dec
push
pop
fs
insl
sbb
and
mull
jbe
cmp
xchg
sbb
mov
cmp
pop
jbe
xlat
xchg
out
dec
fadd
daa
mov
add
mov
test
in
aam
xor
sub
jge
adc
ficoml
dec
rol
inc
lods
pop
rcll
adc
xor
aas
cmpsl
mov
loopne
test
inc
jb
or
sub
imul
add
insl
mov
inc
mov
adc
adc
mov
das
out
xor
xor
add
ret
inc
inc
mov
outsl
dec
in
les
rcrl
imul
push
into
pushf
sbb
les
cmp
pop
stc
dec
rorb
cmc
push
adc
pop
mov
test
and
loop
addl
mov
push
add
enter
push
sti
mov
xlat
int3
sbb
cltd
das
lea
inc
cmp
mov
lcall
or
clc
sub
ret
ret
push
xor
movb
loope
push
mov
mov
addb
jl
subl
sub
dec
pop
in
push
stos
mov
aaa
clc
fnstenv
mov
inc
sub
lahf
fadd
xchg
lock
lods
mov
lods
outsl
xor
mov
mov
and
cli
stc
jb
arpl
les
xorb
loop
sbb
sbb
mov
pusha
test
cs
push
aas
test
xor
repnz
popa
pop
arpl
or
mov
aam
or
fistpll
cmp
sbb
push
data16
loope
nop
loop
in
sub
sbb
and
and
push
push
hlt
imul
in
jno
mov
sbb
mov
iret
dec
insl
sbb
in
repnz
call
jp
jae
std
aad
not
jmp
jae
stos
sub
mov
in
lret
cwtl
fdivrs
mov
sbb
imul
sarb
out
loop
sub
xchg
pop
loop
aam
in
testb
xor
or
mov
dec
aad
sub
adc
jecxz
addb
mov
scas
and
pop
jmp
jo
sbb
int
lret
jno
jno
jne
and
pushf
mov
sti
mov
xchg
ret
hlt
jp
push
cld
fistpll
or
out
adc
push
adc
fdivrs
in
mov
xchg
nop
pop
in
imul
pop
lcall
mov
fmulp
into
inc
adc
xchg
lds
push
cld
cwtl
sbb
scas
cmp
outsb
jnp
and
fcmovne
inc
or
in
cmp
adc
jecxz
ficompl
push
test
fwait
lock
mov
and
mov
sub
rclb
inc
xchg
add
xor
or
sbb
gs
aam
ljmp
adcb
aaa
out
idivb
jb
push
mov
bound
out
xchg
inc
daa
xor
pop
fisubl
jns
mov
jb
inc
leave
nop
fnstenv
int3
stc
jbe
shll
and
daa
dec
and
iret
xchg
lret
mov
push
or
inc
mov
lods
leave
data16
jnp
xchg
mul
inc
inc
inc
xchg
jge
add
lds
pop
pop
repnz
cmp
fdivrs
addr16
push
cli
pop
or
mov
cs
mov
psubw
outsl
sbb
mov
push
push
pop
and
cmp
push
mull
xchg
stc
push
xlat
mov
mov
ret
pop
sbb
gs
mov
aas
stos
call
cmp
mov
sti
pop
lcall
xorl
jecxz
pop
mov
or
xchg
rclb
cmp
inc
adcb
xchg
js
jo
ljmp
adc
cltd
cmpsl
pop
xchg
out
addb
mov
int3
leavew
adc
xchg
jb
les
add
stos
test
inc
enter
js
xchg
sbb
lsl
sti
loopne
shll
push
addr16
inc
xor
cmp
data16
xchg
or
pop
mov
pop
movsl
inc
imul
cltd
push
dec
adc
sti
fnsave
sbb
or
mov
mov
adc
mov
push
dec
js
test
sahf
jp
scas
sub
negl
mov
mov
insb
add
mov
push
addr16
fldcw
pop
sub
cmc
aam
inc
cmp
lret
insl
ret
and
out
mov
fwait
sti
jbe
push
mov
ss
jo
lods
loope
int
sahf
mov
in
out
sub
fnstsw
push
rolb
add
cmp
int
and
mov
push
and
xor
add
in
cltd
jo
jg
test
push
xchg
and
popa
pop
xchg
add
push
xchg
imul
or
outsl
test
fisubs
sub
cmp
dec
lahf
inc
pusha
and
das
cmp
push
lret
test
cmp
xchg
cmpsl
insl
out
mov
mov
adc
inc
dec
inc
xchg
and
mov
or
xor
lds
mov
gs
lds
arpl
push
les
jmp
adc
je
add
inc
popa
je
xor
xchg
orb
add
jmp
loope
or
push
xor
mov
pop
insl
xor
xchg
mov
fs
das
addr16
push
ficomps
mov
mov
and
or
or
cmpsl
in
inc
mov
xchg
out
and
inc
jne
and
push
cmc
jnp
fadds
sub
cmpsb
aaa
mov
xchg
inc
imul
jl
lret
pop
outsb
cwtl
lds
test
add
imul
daa
insb
lea
dec
ficoml
mov
jns
xchg
pop
subl
push
push
inc
sbb
in
pop
insl
in
and
add
stc
dec
jmp
xchg
and
daa
div
dec
fprem
dec
mov
pop
mov
mov
and
mov
mov
dec
pop
or
inc
rcrb
loope
test
dec
outsl
mov
or
aaa
in
jle
dec
sub
roll
addr16
das
gs
pop
test
scas
xorb
mov
jno
sub
pop
inc
movsl
mov
mov
decb
cmpl
rolb
decb
and
pop
imul
or
sbb
repz
cmpsl
shlb
stos
mov
shll
movsl
cmp
test
outsl
aam
sub
mov
enter
ror
fidivl
ficomps
pop
xor
test
out
daa
mov
insb
mov
mov
xlat
jne
enter
outsb
dec
test
mov
in
clc
push
xor
sub
aas
sbb
mov
ds
xchg
jecxz
add
mov
int
movl
and
pop
fsts
xor
mov
loopne
inc
cs
aam
mov
pop
mov
es
jg
xchg
subb
test
or
loop
sbb
out
cmp
call
pop
loop
divl
outsb
fidivrs
jecxz
adc
aad
sbb
xlat
clc
js
inc
inc
pop
das
rcl
fidivrs
and
dec
xor
jmp
lahf
fisttpl
loop
mov
popf
jnp
jle
test
testb
into
adc
fs
cmp
bound
shrb
stos
test
orl
sbb
lods
or
ret
fidivl
insb
xchg
pop
sbb
orl
leave
pop
jecxz
sbb
addr16
ret
cwtl
mov
cltd
xchg
pusha
test
mov
sub
in
fcmovu
insb
enter
xor
mov
push
jns
mov
or
mov
inc
enter
loop
stos
not
mov
ds
ret
dec
out
push
test
ret
dec
icebp
xor
fsubl
fadds
mov
out
mov
int
and
fnstsw
lea
jae
lret
mov
insl
bound
add
mov
je
and
cmc
pop
sbb
stos
cmp
sbb
inc
lods
xchg
cwtl
dec
xor
dec
repnz
mov
cld
lea
fnstcw
mov
sub
addl
out
stos
cmpsb
mov
lds
in
pop
xor
dec
adc
and
jo
mov
repnz
imul
clc
cli
pop
jl
inc
std
pushf
clc
in
jo
cmpsb
test
inc
dec
ss
popa
pop
xor
stc
fwait
xor
dec
test
mov
into
lea
or
bound
mov
mov
in
mov
jge
cmp
mov
js
or
movsl
inc
les
pop
add
and
lds
jne
stos
sbb
add
mov
lods
iret
scas
roll
or
push
add
sahf
push
push
jno
je
cld
enter
shlb
pop
sub
cmp
adc
dec
and
aas
in
shl
jmp
js
lds
pop
cmpsb
dec
and
lock
pop
or
mov
jb
mov
insb
repnz
adc
jmp
lea
sbb
popf
into
imul
mov
je
and
sahf
pop
add
push
out
mov
add
cmp
mov
scas
dec
jmp
das
jmp
std
xchg
pop
add
push
push
stos
dec
cltd
repz
xor
rolb
adc
and
dec
adc
pop
mov
cltd
mov
stos
pop
popa
xor
adc
dec
xor
pop
or
mov
push
ds
stos
add
add
stos
test
aam
leave
or
push
push
adc
sbb
push
and
push
pop
arpl
pop
mov
push
gs
lds
cmpsb
sbb
or
xor
push
and
popf
pop
jp
xor
fmuls
inc
leave
add
pop
nop
cmp
lret
xor
inc
mov
sbb
das
test
stc
or
mov
jmp
add
pop
jge
out
mov
pop
fidivl
lods
insb
xor
jg
not
sbb
dec
ljmp
dec
dec
fisubrl
sub
add
mov
outsl
sbb
in
daa
fcompl
or
out
fmuls
inc
mov
in
jns
dec
insb
outsb
xor
lock
loopne
shr
sub
push
mov
cmc
insl
int
jmp
imul
mov
mov
dec
imul
adc
xchg
and
jbe
fstpl
cmp
push
iret
scas
and
fisubrs
xor
xor
out
jnp
ja
mov
dec
pop
lea
mov
lret
scas
adc
jl
cmpb
cwtl
cli
xchg
data16
adc
pop
rcrl
in
pop
jl
imull
mov
decb
mov
adc
ficomps
sbb
pop
cwtl
xor
repz
xchg
xchg
fcomps
repz
leave
sub
imul
mov
dec
xor
jo
subl
sub
jns
jns
xchg
cmp
mov
cwtl
mov
daa
pusha
sti
aad
aas
enter
and
or
int
loopne
addr16
ret
int3
fucomp
lock
xchg
aas
ljmp
push
sbb
fimuls
cmp
lea
test
std
push
icebp
nop
push
pop
jnp
filds
test
mov
insb
ljmp
out
push
mov
mov
and
jle
xlat
xchg
dec
or
dec
dec
mov
std
out
outsb
mov
sbb
pusha
leave
adcb
cmp
outsb
movsb
mov
mov
push
cmp
sti
ret
lock
push
insb
stc
push
cmpb
jne
xchg
pusha
test
cmp
sbb
movsl
add
je
movsl
inc
in
in
mov
adc
xchg
xchg
loop
mov
xchg
inc
sbb
xor
int3
mov
or
in
lods
sbb
pop
or
mov
jl
and
sbb
and
test
repz
cmp
mov
inc
js
lret
xor
mov
push
movsb
pop
pop
ret
loop
dec
cwtl
dec
jo
addb
out
adc
mov
pop
sub
xchg
sub
sar
or
test
add
out
jg
fwait
mov
addr16
js
or
in
mov
rcl
adc
push
pusha
int3
dec
mov
cmpl
cmpsl
or
push
jle
dec
pop
lods
test
iret
dec
mov
xor
rclb
stos
and
mov
lods
pop
push
out
fisubl
out
mov
pop
lret
lds
lea
in
out
fildl
dec
aam
and
sbb
aam
xor
add
int
cmp
rorb
mov
pop
into
outsb
inc
sahf
into
inc
sbb
test
idivb
and
pop
mov
outsl
stc
add
mov
shll
addr16
xchg
les
push
pop
and
enter
mov
popf
test
or
push
push
popf
mov
mov
add
aas
fisttps
in
orl
pop
inc
data16
add
or
js
jp
inc
ja
fxch
mov
or
rcl
jns
sub
cmc
adc
cmp
push
loopne
mov
mov
sub
in
fbld
hlt
dec
loopne
mov
dec
ds
push
xor
cmp
mov
push
push
sbb
cld
jns
inc
cmp
cld
outsb
in
popa
sub
inc
push
cmp
mov
mov
test
inc
push
ja
mov
jecxz
int
sub
mov
jp
stos
rep
jmp
icebp
sbb
mov
push
daa
sub
jp
ljmp
mov
loop
popa
aam
jle
je
pushf
add
shlb
jmp
push
or
ljmp
mov
cmp
dec
mov
or
mov
sbb
rcrl
test
test
mov
xor
jae
sub
sahf
mov
in
inc
test
repnz
sub
test
jp
int3
mov
ds
mov
int3
leave
sub
cmp
dec
inc
mov
xor
lods
jb
mov
mov
lea
popf
mov
mov
cmc
ljmp
je
push
pushl
hlt
jmp
mov
loopne
call
sub
int3
jno
popf
das
push
jg
mov
fidivrs
aaa
outsb
sti
loope
inc
dec
lds
sbb
push
cld
adc
cmp
fcoml
bound
pushf
fmul
mov
pop
stc
or
imul
mov
inc
mov
ret
loop
xlat
stc
mov
data16
cmpsb
bound
into
rcrb
lds
push
ja
stos
jne
jmp
aad
sub
sub
cwtl
push
jns
and
testb
fst
lods
dec
pop
xchg
pop
pop
cwtl
rcll
xchg
push
popa
lret
adc
in
mov
push
inc
shl
xor
call
push
or
inc
sahf
popa
jg
xor
or
jnp
mov
fisubl
push
mov
jp
stc
and
adc
sahf
jmp
mov
fwait
pop
es
add
mov
popf
inc
iret
iret
fadd
inc
pop
sbb
mov
jns
xchg
bound
lahf
das
pop
push
pop
xor
jbe
fisubl
mov
gs
mov
or
gs
adc
mov
or
repz
pop
into
pop
scas
inc
push
cmpsb
insb
into
nop
push
jle
jp
shr
loope
std
test
mov
cmp
xor
pop
mov
pop
pop
xchg
mov
test
hlt
push
pop
pop
loope
bound
bound
push
and
lret
subl
push
subb
jns
sbb
popa
rcl
xchg
roll
sbb
sbb
imul
data16
or
int
adc
loop
loope
push
adc
lcall
sub
in
mov
fnstenv
push
mov
fucomip
pop
and
jne
lods
lret
mov
cmp
adc
push
mov
cmp
pop
mov
test
ds
lea
push
rcrl
add
out
cwtl
dec
xchg
ds
xor
mov
fiadds
lret
fisubrl
arpl
push
cmp
iret
pop
add
movsl
clc
arpl
lcall
add
scas
shr
cltd
sbb
and
das
popa
fisubl
dec
sbb
mov
dec
mov
push
cmpsb
adc
cmc
jecxz
leave
leave
pop
cwtl
shlb
pop
sbb
mov
inc
cmp
dec
inc
popa
fisttpl
insb
dec
jo
in
mov
xlat
fs
outsl
stc
iret
sub
jnp
xor
pushf
push
push
leave
inc
out
cld
push
fisubrs
stos
loop
sbb
pop
pop
leave
push
jns
lea
pop
lea
sub
push
out
cmp
jle
nop
test
jno
out
addr16
rcll
jns
test
sti
mov
sbb
jno
xchg
out
jmp
push
loopne
push
xor
arpl
cmpsb
cmc
jmp
fsubrp
and
push
fs
inc
and
jp
xor
lret
pop
ret
mov
mov
icebp
das
mov
sti
or
jg
fdiv
sti
clc
pop
and
cltd
nop
pop
pop
inc
or
ss
jp
bound
push
cmp
aad
pusha
adc
mov
dec
mov
adc
outsb
jo
nop
cmp
pushf
je
adc
int
sub
jbe
daa
and
movsl
jo
jbe
sysret
jns
mov
xchg
mov
rcll
sbb
mov
jb
mov
mov
push
fistpll
addr16
aaa
adc
in
lock
ja
dec
clc
or
int3
pop
pop
inc
push
jnp
cltd
std
xor
ljmp
cs
xchg
add
xchg
repnz
jp
push
pop
insb
mov
iret
add
cmp
insl
pusha
inc
jns
out
and
mov
sbb
mov
out
maxps
repnz
lcallw
std
aas
jmp
jnp
in
mov
push
loope
lcall
cmc
repz
sbb
jmp
mov
jge
insb
sti
mov
std
cmp
test
leave
ljmp
sub
test
js
sub
insb
ficompl
mov
dec
std
lret
add
mov
ficoms
sub
cmp
sub
mulb
popa
mov
or
add
in
inc
stos
push
inc
and
pop
test
mov
fisubs
push
push
push
mov
or
aaa
jp
mov
lahf
push
pop
aas
imul
dec
popf
in
and
movsl
sti
nop
rcrl
push
testl
pop
inc
sti
xchg
sub
in
mov
mov
shll
cmp
inc
lahf
and
push
pop
sbb
jle
test
out
outsl
roll
cmp
in
mov
test
sbb
push
xchg
outsl
mov
push
cmp
push
popf
and
clc
push
in
aam
fs
xchg
in
inc
inc
fwait
test
out
mov
mov
mov
push
cwtl
mov
xor
pop
xchg
ja
or
mov
push
pop
or
fnsave
sbb
mov
aas
loop
cli
pusha
loope
or
lods
ja
repnz
test
push
mov
je
xlat
notl
mov
test
xor
out
lds
into
insb
shl
jl
addl
adc
shl
fdivs
ja
test
cmp
dec
xor
jge
xchg
push
xor
mov
jle
mov
pop
sbb
push
xor
xor
or
or
icebp
cmpsb
xor
insb
shlb
xchg
dec
sub
sbb
mov
lods
leave
dec
mov
sbb
outsl
xchg
mov
pusha
test
adc
adc
push
shrb
pop
mov
divl
sbb
out
cli
sbb
imul
xchg
dec
test
add
or
push
xlat
pop
ds
xor
aas
add
fisubrs
cmpsb
cmp
mov
int
mov
lods
data16
scas
roll
lods
xor
mov
dec
sub
stos
or
add
pop
or
cmpsl
std
pcmpgtd
movsb
mov
aaa
mov
mov
ret
in
popf
cmpl
push
push
adc
push
cmp
mov
cld
addr16
pop
xor
in
in
jae
xor
addr16
and
xor
in
hlt
jge
push
mov
stc
mov
jb
loopne
iret
cmp
es
fwait
call
leave
pop
outsl
icebp
jns
cmp
or
cwtl
arpl
xchg
jge
xlat
adc
jns
cmpsb
jmp
hlt
jl
xor
std
dec
adc
lret
int3
rolb
jbe
pop
pop
icebp
out
jmp
scas
clc
cmpsb
mov
sbb
aad
dec
pop
mov
sti
mov
sub
popf
loopne
mov
jecxz
mov
or
xchg
push
cmpsl
repz
scas
xchg
sbb
ret
ds
or
jge
int
sub
sub
movsb
subl
iret
aas
sbb
ret
out
pop
jg
cmpsb
shl
adc
outsl
push
cmpl
jo
pusha
shlb
ja
xor
in
inc
mov
daa
popa
sti
movb
push
mov
add
xchg
arpl
mov
jne
fldz
jnp
es
inc
mov
fwait
je
add
rcll
sbb
add
stos
aam
jmp
sub
inc
out
mov
push
stos
cmp
push
mov
pop
int3
inc
bnd
pop
popf
movsl
or
shll
fcmovb
insb
mov
fs
fdivrs
test
xchg
outsl
xor
iret
mov
int
dec
daa
scas
es
xor
aas
insl
aas
outsb
imul
data16
std
xorl
or
cmp
mov
mov
adc
imul
push
insl
rclb
xchg
into
jp
inc
dec
sbb
mov
lcall
and
push
jl
push
push
sub
leave
nop
mov
hlt
xchg
test
push
cwtl
lahf
fwait
movsb
and
or
hlt
fimull
rorb
mov
push
mov
pop
pushl
mov
or
mov
ja
das
xchg
xchg
pop
push
imul
adc
pop
shl
cmc
cmp
in
int
jge
loope
xchg
push
xchg
sbb
std
mov
xchg
push
inc
sbb
fstl
dec
daa
in
in
sbb
ficomps
jle
xor
jmp
cltd
dec
lret
push
movb
push
dec
mov
and
stos
hlt
rorl
repz
or
and
lret
cmpsb
inc
cmp
or
mov
icebp
pop
sub
xchg
and
xlat
or
dec
push
fsubrl
movsl
push
pop
push
lcall
call
xchg
inc
cltd
in
sbb
jecxz
orl
push
xor
cmp
loopne
or
jb
or
fs
pop
jo
push
xor
addb
sub
nop
gs
loop
loopne
xchg
push
pop
insl
into
sbb
sbb
out
lea
xor
test
popa
or
sbb
rorb
or
xor
cmp
je
xchg
and
cmp
inc
loope
ret
mov
addl
jns
xchg
pop
cltd
xor
xor
and
cli
cmp
jecxz
dec
mov
int3
bound
pop
repz
mov
or
call
pop
mov
adc
cld
lds
lret
std
aas
nop/reserved
xor
cli
cmpsb
push
mov
xchg
mov
dec
or
fbld
inc
pop
mov
add
in
pop
fadd
push
cld
repnz
scas
inc
ja
mov
hlt
push
int
lret
jns
cmp
aam
cmp
int3
push
mull
dec
mov
inc
mov
ja
mov
ss
imul
jmp
js
call
push
jno
rcrb
ret
pop
addr16
adc
fcomps
sub
dec
mov
push
fsubr
mov
cmp
bound
add
daa
mov
fisttpll
das
xchg
add
jb
in
sbb
repnz
mov
pop
xchg
loop
xchg
xorl
mov
pop
pop
stc
add
and
pop
ret
adc
rcr
imul
sbb
sbb
sub
xor
push
xor
dec
ret
stos
inc
testl
lret
sbb
xlat
push
cmp
inc
testl
push
repz
xor
mov
ret
sbb
pop
clc
stc
ficoml
sub
push
insl
aam
and
pushf
mov
fwait
mov
fdivrl
rcll
stc
pop
or
leave
insl
shrb
jbe
or
cmpsb
jne
sub
insl
cmc
cmp
push
jge
jg
sbb
adc
js
div
mov
je
xlat
push
dec
loope
sub
push
dec
ret
sbbl
jnp
cmp
stos
push
cmp
xor
scas
inc
adc
jecxz
cmp
sbb
lock
lds
ja
xor
jns
or
imul
cmp
lods
insb
push
iret
push
test
mov
xchg
addr16
lcall
fisubrs
stc
and
inc
and
insl
or
cwtl
lcall
arpl
pop
inc
or
dec
call
out
dec
subb
aad
clc
lock
sbb
jmp
lahf
dec
inc
popf
test
out
push
mov
mov
pop
or
mov
or
std
xlat
pushf
rcrl
dec
pushf
adc
pop
lret
scas
repz
je
test
lahf
sub
insl
adcw
lcall
and
test
mov
mov
mov
pop
lahf
xor
call
jb
aam
push
xchg
or
icebp
or
pop
lret
fiaddl
inc
lods
mov
fwait
xor
dec
adcb
mov
test
lahf
fdivrs
je
jp
sbb
push
xchg
das
dec
inc
loopne
sbb
push
int3
pop
out
outsl
xchg
into
or
mov
cmc
es
jmp
mov
sub
xchg
mov
and
aaa
push
jecxz
in
mov
orb
pop
mov
mov
and
sbb
mov
jl
popa
cmp
stos
in
leave
arpl
aad
or
cmc
mov
sub
iret
je
sti
mov
fldl
inc
inc
jo
push
mov
das
cld
sbb
imul
popa
inc
xchg
pop
lret
lea
in
mov
scas
iret
je
stos
enter
add
push
iret
dec
cmp
insb
xchg
jb
xchg
and
sub
fs
mov
icebp
cmpsl
xor
or
mov
testl
adc
lahf
xor
hlt
cmpsb
mov
repnz
fmull
sub
inc
pushf
loope
xchg
icebp
jecxz
mov
test
leave
lods
inc
inc
arpl
fistl
out
jle
enter
cld
insl
mov
or
jb
cld
xchg
in
mov
or
xchg
sbb
sbb
fwait
lods
inc
pop
das
mov
and
out
mov
pop
sbb
dec
xchg
dec
inc
ret
in
fldcw
mov
or
or
imul
fdivl
push
call
in
rcrl
sbb
lea
enter
rcll
inc
cmpsl
popa
add
mov
mov
sbb
inc
mov
cli
mov
jp
dec
or
push
mov
jo
pop
or
push
jl
aaa
pusha
insb
mov
cmpsl
xchg
repz
xchg
pop
inc
loopne
fildll
pop
in
into
adc
add
mov
lcall
fs
xchg
loop
outsl
pop
lods
out
mov
jecxz
shlb
or
das
fwait
and
int
push
in
repz
call
ficoms
ficomps
jb
inc
mov
push
or
mov
sub
hlt
push
popf
iret
pop
pop
fldl
inc
pop
mov
popf
cmp
sub
pop
sarl
js
add
mov
imul
addb
mov
inc
andl
jp
adc
es
shlb
mov
je
iret
cmc
jmp
cwtl
mov
lock
fsubr
cs
mov
add
mov
pushf
loopne
test
mov
sub
and
mov
aaa
jecxz
jns
iret
sbb
into
sub
mov
xor
fistpl
ret
in
mull
pop
imul
sbb
ljmpw
cld
out
out
lods
fadds
jb
sbb
jbe
and
nop
mov
je
mov
addb
xchg
dec
jmp
rorl
sub
inc
xchg
out
mov
pop
xor
es
shlb
xor
sbb
mov
add
cmp
mov
jne
into
test
push
aam
adcl
bound
xor
ja
cmp
mov
int3
xchg
in
lds
adc
insb
push
or
adc
leave
shlb
xor
mov
cmpsl
test
mov
sbb
jl
mov
add
imul
shr
sub
mov
add
orl
sub
addl
sub
cmp
popa
and
mov
jo
mov
sar
xchg
imul
out
in
xor
xor
pop
mov
insb
xchg
mov
mov
and
lcall
in
aad
leave
mov
dec
sub
arpl
sti
push
adc
stc
aad
pop
cmp
mov
sahf
dec
jns
inc
adc
aas
jo
add
mov
and
xchg
call
mov
dec
jo
inc
cli
icebp
std
and
fcoml
ds
dec
sbb
mov
mulb
in
dec
xor
dec
out
fdivr
xchg
mov
sbb
loopne
jmp
xchg
scas
lods
pop
pop
stc
pop
and
or
fcomps
in
dec
mov
dec
sbb
lret
mov
add
js
cmp
lods
mov
pop
jmp
xchg
xor
hlt
loope
mov
pop
xchg
inc
aam
nop
add
push
cli
ds
mov
gs
test
pop
loop
ss
or
lahf
jne
call
xor
cs
cmp
add
dec
mov
jne
lahf
mov
push
mov
xchg
ss
out
sbb
inc
sub
mov
fisubs
cmp
repz
push
insl
add
cli
stos
mov
imul
jb
push
jne
push
pop
in
xor
cwtl
sbbl
arpl
jno
sbb
mov
fisttpll
dec
imul
cmc
outsl
out
stos
lods
rol
adc
jnp
insl
and
inc
pop
cs
incb
mov
iret
dec
cmc
fstpt
bnd
int3
dec
lea
mov
sti
das
sahf
xor
pushf
pop
enter
and
cmp
rcrl
pop
xorl
aad
jp
dec
sbbb
pop
lret
inc
cmpsl
pop
sub
fisttpll
sub
std
sbb
pop
out
fcomps
shr
xor
out
ret
adc
insl
mov
dec
mov
or
mov
sub
xchg
and
inc
in
nop
fwait
mov
sbbl
cmp
mov
ret
cld
fwait
loope
out
dec
dec
lock
arpl
call
push
mov
sub
fimuls
js
push
subl
jbe
popa
dec
pop
pop
je
cmp
xor
nop
push
xchg
cmpsb
loop
sbb
push
push
stc
pop
jge
in
mov
pop
adc
add
mov
insb
add
push
jmp
push
mov
pop
xor
cmp
add
cmp
xor
lods
lock
jp
pop
xor
cltd
subl
cmp
adc
rorl
jb
mov
jb
sbb
xchg
fisubl
mov
push
lcall
arpl
sti
add
mov
das
fildll
popf
fimuls
dec
into
jecxz
mov
loopne
data16
and
repnz
pop
scas
or
enter
stos
push
addr16
rcll
cmc
add
sbb
daa
mov
cmp
test
jge
test
shr
repz
hlt
adc
into
sbb
aas
jle
sbb
out
insb
cmp
and
sahf
arpl
sbb
mov
inc
in
pushf
jno
pusha
xchg
sub
fdivp
js
fimuls
fidivl
fildll
leave
add
mov
and
fidivl
aad
test
mov
pop
std
dec
fld
movsb
je
mov
std
or
add
or
pop
icebp
out
clc
test
orb
pusha
in
in
nop
movhlps
jg
pop
fdivs
jb
ja
dec
pop
adc
or
xchg
lahf
scas
sbb
xchg
pop
roll
and
xchg
sub
push
sti
int
in
mov
fidivs
into
sub
stos
icebp
in
and
jmp
push
das
cmp
xchg
in
lods
pop
loope
cmp
lcall
pop
cwtl
mov
inc
pop
push
sbb
sbb
cltd
and
imul
imull
ret
and
enter
ss
repnz
pop
inc
shll
das
fcomps
add
sbb
or
dec
addb
mov
inc
push
pop
and
and
aaa
or
inc
cmp
jg
jecxz
mov
inc
insb
shr
xchg
lret
push
push
in
into
les
push
adc
sbb
dec
lahf
cmpsl
repnz
outsb
and
mov
pop
inc
jmp
push
loop
int
xchg
pop
pushf
insl
push
rorl
inc
cmpsb
popf
jno
shl
out
adc
jmp
add
mov
aad
dec
iret
aam
push
pop
aas
stc
fcoml
dec
jno
ret
loop
pop
bswap
mov
mov
mov
xchg
jecxz
in
mov
xor
adc
adc
mov
pop
push
cmp
dec
or
mov
out
cmpsb
and
rorb
rorl
nop
mov
lods
adc
movsb
mov
mov
jle
inc
stos
mov
adc
rcrb
pop
inc
nop
iret
fiaddl
cmpsb
mov
add
jge
cli
pop
sbb
push
hlt
mov
aad
out
mov
fwait
adc
jbe
mov
repz
or
data16
sub
mov
push
loopw
sbb
mov
loop
xchg
sub
loope
popa
pop
in
stos
inc
shll
sbb
cwtl
rcrl
lcall
mov
dec
lahf
or
pusha
dec
mov
adc
lret
mov
pusha
push
xchg
rolb
dec
mov
pop
mov
into
sbb
sub
xor
jmp
inc
xorl
insb
iret
xchg
mov
arpl
adc
scas
push
lock
xlat
jno
in
fcmovnb
imul
das
daa
rolb
cmp
inc
in
pop
call
push
aad
push
lea
dec
mov
mov
or
or
push
cwtl
test
cwtl
inc
jg
mov
push
push
cmp
dec
cli
insb
push
push
sbb
cmp
stos
mov
mov
lret
ss
push
lea
jbe
aam
or
sub
loopne
lahf
dec
dec
frstor
mov
fdivrl
sub
inc
out
fistpll
and
dec
jno
mov
push
xlat
mov
adc
fbstp
in
fwait
pushf
out
in
jl
cmp
clc
js
xacquire
xchg
xchg
xchg
insl
bound
pop
outsl
ss
sub
pushf
push
scas
roll
in
call
out
movsb
lcall
mov
and
shl
cltd
test
aaa
jmp
xchg
test
or
cwtl
adc
inc
out
pop
mov
jmp
or
cmp
mov
xchg
sbb
stos
adc
and
les
xchg
bound
fwait
push
and
gs
pop
cli
loop
inc
add
out
pop
cli
aam
inc
inc
jb
outsb
divl
call
cltd
aad
stc
push
pop
xchg
add
scas
loopne
xchg
pop
xchg
add
jnp
add
sbb
int
cmpxchg
dec
movsl
mov
dec
inc
push
lds
mov
icebp
pop
add
out
js
popa
jne
pop
add
pusha
pushf
or
cmc
pop
std
nop
or
and
push
shll
dec
movsb
repz
dec
push
sub
sarl
dec
icebp
aaa
popf
lea
jle
sub
jbe
or
adc
inc
or
cmp
sbb
mov
or
sub
sbb
dec
shrb
xlat
cwtl
cmp
orb
into
movsb
cmc
xchg
lcall
imul
or
cmp
sbb
shlb
fs
mov
jnp
sbb
inc
xchg
mov
cs
mov
jne
test
test
xchg
js
sbb
pop
sar
imul
sub
mov
adc
cmp
jo
mov
pop
adc
js
mov
lret
mov
adc
pop
aaa
mov
jg
rolb
inc
mov
in
lcall
xor
mov
push
mov
sub
imul
mov
popl
xchg
in
mov
in
out
push
fisttps
loop
fs
cmpsl
aam
ret
push
shlb
ficompl
sahf
inc
outsb
mov
sbb
mov
dec
imul
adc
mov
int
cmpeqps
stos
in
loop
push
mov
and
pushf
add
cmpsb
cwtl
aad
push
notb
in
iret
sbb
imulb
popa
add
cmp
xchg
aas
fists
jmp
ja
pop
mov
pop
aad
sbbb
cmc
insb
mov
pop
stos
mov
inc
setge
stos
mov
sub
pusha
lea
int3
pushf
imul
movl
push
mov
icebp
xor
bound
std
fcoms
or
sub
out
xchg
dec
daa
cmpsb
cmp
addr16
fsub
in
gs
push
dec
dec
jmp
pushf
ss
fwait
lret
and
sbb
add
lahf
decb
ror
and
int
jb
inc
pop
pop
fiaddl
insb
inc
mov
cmp
rcll
out
insb
add
push
sbb
repnz
push
mov
dec
and
and
cltd
ds
xorl
xchg
pop
pop
andl
xchg
arpl
mov
dec
lret
pusha
sbb
mov
rol
inc
jecxz
xchg
sub
mov
mov
divl
xchg
lods
rclb
bound
js
add
mov
inc
mov
inc
lahf
sub
sub
outsb
aas
add
cmpsw
ja
and
dec
mov
lds
mov
or
and
stos
test
and
sub
rclb
test
pop
outsb
sbb
fwait
jg
pushf
add
dec
call
sub
subl
xchg
movsb
ss
cbtw
or
and
pop
icebp
mov
in
or
test
sti
rorl
fisubrl
and
repz
subb
cli
or
xchg
scas
pop
int
dec
aam
fadd
sub
mov
fsubrp
sub
test
cmpsb
cmp
push
cltd
rolb
lods
testb
xchg
push
lahf
sbb
cld
inc
adc
loope
test
mov
sbb
iret
stc
sbb
mov
out
in
call
js
aad
ret
inc
mov
outsl
int3
shll
test
push
outsb
sub
stc
mov
jbe
arpl
inc
lds
int3
or
cmp
pusha
insb
lds
push
inc
inc
sub
sbb
cmc
test
cs
fstps
push
add
dec
push
pop
push
lcall
cs
inc
jnp
sub
aas
rclb
rcrl
scas
cld
sbb
jl
sbb
dec
push
adc
imul
dec
rorb
ret
leave
dec
shll
lods
rorb
lret
mov
pop
arpl
enter
jl
scas
add
jbe
sub
fs
xlat
xchg
call
inc
outsl
js
sbb
push
jo
xor
arpl
sub
jg
lds
push
jmp
push
divb
cld
ja
in
adc
fsts
sbb
fcomp
push
fsubs
inc
loope
pusha
mov
push
mov
dec
xor
inc
mov
adc
cmpsl
into
mov
push
push
sarl
daa
out
jne
add
in
sub
int
fisubs
shrb
mov
mov
xor
cmp
and
inc
mov
jb
push
cmp
pop
cmp
dec
xchg
iret
rolb
pop
mov
sub
insl
pop
xchg
add
outsl
outsl
xor
jg
loope
cld
jbe
leave
lods
loopne
xchg
pushf
mov
lods
and
addr16
js
ficomps
pop
mov
mov
inc
lret
mov
pushl
movsb
aas
mov
jg
ja
xor
mov
adc
ja
test
push
fwait
mov
fildll
and
and
ss
xor
add
xor
in
and
jecxz
xor
pusha
sbb
sbb
mov
cmp
int
les
test
dec
lds
and
xchg
add
and
jne
cli
in
popa
sbb
jg
or
rorl
and
lock
lock
lcall
mov
cmp
and
popf
aaa
rcll
mov
pop
mov
lods
aaa
cmp
repnz
cmp
inc
pushf
cmp
enter
mov
int3
sub
mov
sbbb
fstpt
rcll
push
sbb
nop
imul
arpl
data16
repnz
cli
out
push
outsl
pusha
in
sub
push
mov
jns
push
std
add
fdivl
bound
in
inc
test
je
cmp
or
xchg
sbb
or
and
sbb
insl
inc
rolb
mov
mov
insb
sub
pop
jl
clc
xlat
sub
cmpsb
dec
jae
mov
arpl
xchg
rdmsr
jmp
stos
addr16
mov
xchg
xor
push
lret
repnz
cmp
outsl
ret
and
xor
jp
mov
pop
mov
jno
ret
into
sbb
sar
and
fwait
movsb
jp
and
in
jno
sub
je
inc
mov
out
or
pop
mov
lret
inc
and
mov
fistpll
xchg
in
or
jg
test
mov
adc
mov
cli
adc
jg
sub
ja
push
in
pop
cwtl
fsubs
and
sbb
mov
les
cmp
or
cmpsl
inc
dec
or
pushf
sti
je
fisubl
push
and
lret
xor
sub
es
fdivr
fsubrs
adc
mov
adc
or
jae
dec
dec
lods
adc
icebp
in
cmpsl
stos
dec
ljmp
ds
and
fnstsw
and
idivl
test
push
and
mov
test
jns
mov
adc
lea
sub
mov
jnp
stos
push
fstl
add
ljmp
fdivp
aaa
ss
adc
out
adc
or
aaa
and
jp
je
or
and
jnp
bt
jl
sti
dec
sub
mov
int3
rcr
mov
rcrb
add
sub
fnstenv
pop
in
or
sbb
sbb
and
pushl
and
mov
ja
sub
shlb
pop
push
add
imul
xor
cmpl
mov
xor
pop
movsb
jnp
hlt
and
jp
pop
les
dec
mov
pusha
jmp
sub
je
sbb
outsl
out
scas
mov
fcoms
divb
clc
push
cltd
mov
inc
fisubrl
xchg
insl
pusha
xor
inc
movsl
nop
xchg
push
loop
jbe
dec
hlt
sbb
insl
imul
addr16
lods
fcompl
cmc
pop
ficompl
adc
out
inc
ss
push
inc
cmc
es
mov
cltd
jmp
pop
adc
sbb
cmp
inc
mov
fidivrl
ret
mov
sub
in
ror
mov
imul
adcb
xor
sub
fisttpll
adc
push
test
pop
sarb
cld
jnp
aam
sbb
inc
sub
lods
push
jae
push
les
shrl
arpl
fstpt
or
sbb
inc
mov
push
mov
mov
subb
enter
mov
popa
nop
dec
mov
mov
outsl
add
dec
inc
cwtl
bound
imul
imul
lahf
icebp
xor
out
push
roll
je
sarl
push
fs
add
jmp
fisttpl
jb
mov
jns
hlt
pop
push
popf
mov
daa
or
inc
daa
dec
pop
cmp
adc
xchg
cmp
push
lods
inc
push
outsl
movsl
mov
out
sbb
movsl
lret
xchg
repnz
lret
or
stc
scas
pop
sub
call
js
into
mov
cmp
inc
dec
push
jne
out
adc
outsl
divb
ljmp
shrb
adc
fs
in
push
out
lea
add
mov
or
imul
sub
jnp
popa
adc
cmp
inc
insb
in
pop
cltd
cmpsl
fcoml
movsb
sti
inc
push
cmp
imul
sub
dec
les
inc
or
shlb
push
pop
xchg
sbbb
movsb
call
jbe
repnz
push
dec
jae
dec
and
xchg
xlat
and
rolb
jecxz
pop
mov
fisttpll
es
sahf
push
cmp
add
pop
sbb
mov
pop
rcll
subb
mov
xor
xor
pusha
fcmovnbe
mov
ficompl
mov
mov
ds
xchg
mov
or
xor
push
dec
and
shr
or
cmp
outsb
or
incb
push
stc
push
mov
sub
sti
insl
push
das
xor
rolb
dec
shll
xchg
subl
and
dec
scas
xor
push
or
ljmp
call
insl
lret
xchg
adc
mull
int
cmpsl
sbb
out
mov
add
pop
xchg
push
jl
icebp
jnp
notl
cli
out
mov
aam
xchg
fs
sub
lock
call
fcmovnbe
or
outsl
call
adc
sahf
lods
fs
out
mov
enter
pusha
jns
insl
jg
jg
and
stc
xor
daa
xchg
mov
add
xchg
and
int
inc
imul
je
pop
inc
mov
and
cmp
fnsave
push
pop
lcall
and
repz
mov
sahf
loopne
ljmp
stos
stos
lret
mov
push
bound
xchg
xchg
push
xchg
loope
mov
inc
dec
dec
jbe
lret
sbb
pop
je
or
pop
sub
cmp
inc
cmp
add
lret
push
cld
push
push
mov
and
sbb
int3
aas
adc
into
adc
push
lock
push
mov
sbb
push
inc
lcall
pop
cwtl
sub
adc
cmp
das
push
sbb
mov
cmp
ds
or
adc
pop
push
add
xchg
pop
sti
fprem
sarl
mov
jbe
mov
push
and
sbb
mov
add
enter
jg
dec
push
mov
gs
mov
lock
or
out
mov
ljmp
fwait
inc
lcall
lods
movl
call
add
es
into
out
push
in
mov
sarl
adc
dec
mov
jae
incb
jae
lret
mull
lods
and
test
mov
jmp
adc
aas
adc
mov
inc
movsl
sbb
lcall
fidivrs
out
sbb
pop
out
lret
sbb
outsl
mov
xor
add
std
in
aas
jnp
out
adc
mov
mov
add
ljmp
xchg
jns
cmpsl
cmp
sarb
addr16
shl
addb
dec
shl
xor
xchg
cmc
and
jae
lods
aas
push
aam
xchg
jmp
jae
test
mov
mov
ja
in
cmp
test
lea
xchg
stc
xchg
gs
out
sbb
arpl
fsubl
sub
sbb
repnz
outsb
xchg
push
imul
and
and
and
sub
sub
push
nop
jnp
dec
lods
daa
loop
sbb
mov
mov
push
js
and
scas
pop
fdivrl
clc
outsl
pop
add
xor
adc
frstor
adc
adc
lea
sbb
daa
ss
out
data16
shlb
push
fmull
gs
shll
scas
adc
decl
adc
cmp
jge
aad
movsl
pop
push
jp
fistpll
jg
xor
dec
loop
das
ljmp
adc
dec
sbb
fcmovne
shrl
sahf
cmp
sbb
iret
or
xchg
jns
mov
loop
xchg
xor
push
lahf
inc
mov
push
mov
dec
popa
pop
push
idivl
out
and
add
push
jge
or
inc
cmpsl
stos
push
push
jge
inc
jmp
cltd
pop
or
jo
xchg
mov
loope
scas
popf
inc
call
push
mov
aam
pop
mov
dec
cmp
ss
test
cmp
or
fdiv
sub
lods
mov
lret
shl
ja
enter
xor
iret
or
mov
push
aaa
insl
pop
fidivl
icebp
fdivp
xchg
mov
pusha
aaa
push
sbb
xchg
les
mov
je
sbb
mov
cld
inc
movsb
movsb
push
in
push
push
fs
clc
jno
mov
add
cmpb
rclb
repnz
cpuid
jmp
push
aad
ja
into
xchg
push
mulb
incb
cmp
repnz
sbb
outsl
xchg
xchg
pop
or
adc
pop
mov
stc
stos
fisttpl
fldcw
push
push
rorb
dec
insl
test
inc
imul
xor
jle
lret
loop
jnp
xchg
sbb
push
jecxz
dec
inc
push
sub
sub
xlat
lock
movsl
sbb
fidivs
pusha
aaa
cmp
inc
daa
jnp
aas
cmpsb
stc
cmp
jbe
bound
push
inc
xor
mov
or
pop
jl
add
inc
jp
sbb
femms
out
cmpsl
cmp
pop
pushf
sahf
adc
xor
jno
mov
dec
sbb
sbb
cwtl
and
inc
cs
jp
add
stos
das
jnp
stc
adc
jg
sbb
inc
decb
ret
inc
jnp
sbbb
cmp
xchg
ja
jae
movsb
xorl
lret
in
loope
push
out
imul
mov
lfs
cmp
and
clc
aas
add
ss
jge
mov
sbb
mov
sub
inc
hlt
fld
in
pop
xchg
scas
inc
insl
add
je
adc
dec
rcrb
jg
inc
xchg
cwtl
xchg
push
cmp
out
dec
xlat
or
test
inc
mov
js
and
dec
lods
push
ret
lahf
cmp
xor
ja
scas
push
js
mov
and
jne
push
mov
fldenv
ss
inc
int
ljmp
inc
sub
jg
pop
jp
outsl
or
lret
mov
pop
jnp
mov
cmpsl
push
loop
inc
imul
and
jl
xchg
mov
ficoml
sti
fldt
push
push
xor
mov
xchg
pop
add
mov
int
add
pop
sbb
sub
mov
jo
repnz
in
dec
outsb
loopne
xor
shlb
xchg
push
add
pushf
jns
jl
jmp
scas
imul
rcr
push
cmp
add
dec
add
sub
pop
data16
dec
rorl
cmp
or
or
aaa
incl
mov
fldcw
inc
add
ljmp
sbb
out
fisubrl
scas
mov
es
push
inc
inc
fsubs
in
or
mov
fstpl
js
mov
mov
lock
sbb
jo
and
cmp
sbb
popa
imul
cmp
cmpsl
pop
mov
sbb
fwait
dec
mov
xlat
ljmp
stc
adc
mov
cmp
jbe
dec
mov
jmp
filds
mov
loopne
ja
xor
or
lahf
sub
sub
je
pop
daa
push
inc
popa
hlt
test
ss
lcall
cmp
jo
cmpsb
jmp
adc
fwait
pop
scas
mov
and
lods
andb
fbld
sbb
adc
test
fiadds
push
cmp
incb
mov
dec
dec
repnz
pop
aaa
add
lahf
jmp
push
pop
adc
jg
mov
sbb
sub
jbe
xchg
jecxz
icebp
cld
push
sbb
cld
fwait
cmp
aas
dec
mov
test
fists
cmp
jbe
lods
or
xchg
data16
std
xchg
mov
aam
data16
inc
and
adc
mov
pop
xor
stos
les
jo
jo
shll
pushf
cli
jns
lcall
or
popf
jg
stos
xor
insb
pop
aaa
xor
or
out
pop
stos
pop
call
cmp
jo
arpl
into
jne
pop
xlat
push
imul
adcl
dec
rol
stc
shlb
pop
scas
sub
int3
imul
lock
dec
lods
daa
imul
cmp
mov
xor
lock
push
les
dec
incl
jb
int3
iret
xchg
mov
fistl
loop
push
or
inc
ficoml
std
inc
cmpsw
idivb
or
mov
iret
push
add
in
inc
mov
mov
pop
inc
sub
jecxz
mov
sbb
push
stos
ss
lods
fdivs
jo
jecxz
sub
cld
push
jne
pushf
loop
mov
subb
test
stos
inc
and
xchg
test
xchg
in
into
test
jnp
or
fcmovbe
sti
gs
mov
cmp
inc
rcr
xchg
dec
fisubrs
and
jb
jge
ret
enter
into
jno
inc
pop
stos
push
jo
pop
mov
pop
mov
push
sbb
jg
and
inc
or
dec
xor
lods
int3
enter
in
xchg
jbe
pop
push
cltd
mov
cmpsb
lahf
lret
sbb
mov
jne
cmp
sahf
jno
cli
fistps
addr16
mov
in
dec
sahf
xor
pushf
xchg
cmp
or
jne
cmp
inc
jae
push
iret
lods
outsb
sub
push
dec
cmpsl
adc
pop
mov
mov
lods
xor
lods
jmp
inc
sbb
sub
xchg
cld
int
js
pusha
pop
cli
punpckhdq
das
inc
or
or
mov
rcrb
stc
out
lock
popa
cmp
push
int3
movsb
pop
sub
lahf
popf
jp
fsubl
es
xor
loop
pop
pusha
out
jnp
cmp
shl
loop
fpatan
push
xor
xlat
push
cmp
int
mov
fwait
mov
push
inc
leave
in
hlt
cmc
push
aas
push
add
push
incl
fcmovnu
mov
shlb
push
sub
xchg
lret
decl
mov
sbbl
loop
add
adc
pop
shlb
xchg
lret
loopew
adcl
mov
adc
xor
push
cmpsl
in
push
dec
test
or
cld
sahf
fcoms
js
adc
mov
dec
push
jmp
push
loopne
les
xor
cld
inc
insl
adc
lret
dec
mov
ret
push
and
and
mov
pop
jp
fmull
cmpsl
mov
loope
aad
pop
mov
std
pop
mov
jg
jno
ds
pop
imul
mov
out
add
cli
shlb
adc
cmpsl
sbb
outsl
inc
js
cmp
aam
push
out
jmp
out
cmp
adcl
clc
xor
cmpsl
dec
inc
xor
jns
mov
test
mov
in
js
or
sbb
scas
loop,pn
sub
pusha
inc
cmpsb
lock
js
fcmovnbe
sbb
mov
jp
push
arpl
adc
xchg
xchg
dec
xchg
in
cmp
adc
or
push
xor
fidivl
shrb
mov
pusha
sub
push
repnz
cwtl
push
ds
push
pop
scas
xor
mov
mov
mov
imul
mov
dec
les
adc
adc
pop
pop
xchg
mov
loope
or
movsb
movsl
fistpll
scas
je
xchg
xchg
mov
sub
outsl
cmc
in
inc
aam
sbb
ds
fs
lea
test
mov
pop
shrb
or
setb
imul
jg
adc
xor
xchg
dec
or
xlat
sub
xor
data16
xchg
jl
test
mov
aas
and
repz
icebp
pop
insb
in
jle
and
je
aaa
mov
inc
bound
fsubrl
in
xorl
and
cmpsb
xchg
lea
or
test
icebp
jns
fldl
or
xchg
lahf
mov
mov
iret
insb
mulb
ss
arpl
inc
hlt
jecxz
jbe
pusha
cmpsl
test
lret
push
mov
fists
dec
pop
push
push
jmp
out
loope
ja
xabort
dec
xchg
inc
ds
push
xlat
jmp
mov
scas
jg
dec
inc
push
sub
cmpsl
dec
lahf
inc
dec
cmpsb
and
sub
jg
jle
push
and
inc
inc
movsb
jmp
jecxz
idivl
add
cmp
mov
jle
or
es
add
mov
cmp
inc
enter
and
pusha
pop
out
aas
pop
subl
daa
add
and
lret
mov
int
and
mov
mov
add
dec
cmp
push
outsl
in
jecxz
mov
or
push
pushf
stc
dec
in
adc
pop
das
fdiv
dec
adc
movsb
lods
fisubrl
xchg
ret
lea
hlt
int3
pop
adc
ljmp
jbe
mov
or
enter
clc
fld
xor
testl
call
sub
inc
pusha
shr
lahf
sbb
lahf
dec
pop
sub
or
cmp
jne
add
movsb
mov
mov
or
inc
aaa
pusha
test
mov
fldenv
mov
jo,pn
inc
cmp
in
jmp
sti
adc
jmp
jle
mov
ja
in
or
lods
lds
xchg
fdivl
or
xchg
ja
cmpl
imul
clc
mov
inc
push
jbe
mov
jge
imul
and
push
mov
pop
aam
adc
push
push
add
int3
cli
and
idivb
inc
lods
mov
sbb
push
hlt
push
arpl
sub
loopne
es
mov
cwtl
aas
add
mov
xchg
pop
mov
push
icebp
cli
cmp
repnz
dec
ds
cmpsl
cli
mov
adcl
out
dec
fcomip
xchg
ret
orb
xlat
sbb
inc
jl
mov
jecxz
mov
jnp
fsubs
or
pop
xor
pop
pop
sarb
lea
sbb
pop
test
lds
mov
jnp
mov
and
cwtl
push
ret
sbb
jnp
push
mov
or
mov
push
repz
lock
cmp
cmp
and
dec
mov
inc
xor
sbbb
adc
out
xchg
int3
and
dec
push
sbb
or
mov
mov
test
jne
fldcw
push
imul
and
add
lods
adc
inc
sbb
xor
sbb
fidivrl
das
aas
inc
rcll
lock
or
add
lods
es
adc
dec
scas
fidivrs
xorb
int3
insl
push
fwait
pop
cmp
add
adc
xchg
rep
adc
arpl
sbb
shll
mov
aam
cltd
movsb
pop
bound
add
dec
add
cmpsl
jo
pop
mov
jle
jnp
push
das
push
lods
dec
cwtl
outsb
xchg
arpl
sbb
iret
sti
push
lahf
or
add
inc
les
lds
jmp
mov
loop
dec
leave
sub
or
jo
cmp
push
and
jp
pop
in
cli
clc
push
ja
pop
fptan
adc
js
mov
push
test
loopne
mov
lods
or
sti
sbb
enter
fsubrp
fildl
lds
push
pusha
push
jmp
icebp
int
andb
mov
gs
aam
aas
lret
test
xchg
pop
cmp
adc
cmp
jp
fwait
or
fwait
andb
lods
mov
jae
inc
jmp
notl
jne
inc
out
push
in
xor
les
mov
xchg
push
xor
pop
lock
push
pop
adc
data16
fisttps
out
lock
notl
inc
jae
insl
lods
sbb
inc
int
adc
xor
and
xchg
or
pop
push
dec
test
xchg
mov
mov
mov
xor
mov
lods
push
mov
lock
roll
pushf
fmull
mov
imul
je
ret
pop
out
lret
mov
pop
mov
inc
push
shrb
pop
or
push
pop
popa
cmp
pusha
pop
into
insb
or
mov
xorl
xchg
das
shll
mov
sbb
mov
cld
aad
cltd
xor
push
add
bound
test
cmp
in
dec
stos
fldenv
jg,pt
cmc
jnp
ljmp
insl
enter
in
sub
div
pop
inc
dec
imul
cmp
xor
mov
mov
add
push
push
jnp
pusha
mov
cmp
shlb
jnp
imul
xor
or
dec
mov
push
mov
pushf
and
add
enter
mov
ret
xchg
fisubrl
mov
jp
push
movsb
lea
ss
mov
jno
movsb
stos
scas
cmp
jbe
ret
sub
pop
mov
push
iret
divl
xor
cwtl
popa
movsb
sbb
rcll
push
leave
inc
cs
jmp
mov
sti
mov
fldl
loop
aaa
xchg
add
imull
rorl
sub
dec
aas
push
mov
inc
ret
cmpb
pop
fistpl
fwait
and
pop
xchg
stc
popl
pop
js
add
or
jns
mov
mov
sub
xor
lret
gs
mov
sbb
ret
cmpsl
imul
xlat
dec
sbb
icebp
aas
and
lret
fimull
push
cmp
mov
hlt
outsb
insb
adc
dec
push
cmp
scas
mov
fucomp
lds
pop
stos
stc
es
xor
insl
mov
sti
xor
add
loopne
pushf
lods
push
mov
iret
mov
test
jnp
clc
cmpsb
xor
cmp
stos
jmp
xchg
repnz
hlt
fimuls
mov
xchg
adc
cmp
sub
iret
mov
mov
and
out
jo
std
pop
push
aaa
arpl
jg
jmp
daa
sub
ret
jge
in
or
push
aas
jp
jp
dec
push
insl
in
lock
mov
stos
pop
cwtl
xor
push
in
mov
dec
repnz
dec
add
addb
pop
dec
jns
dec
mov
xchg
pop
mov
data16
sub
or
pop
data16
add
fistpl
xchg
pop
in
fs
sahf
fcoml
xchg
cmp
sbb
or
lret
addr16
and
pop
add
popf
add
dec
or
insb
pop
out
icebp
fcompl
xor
out
cmp
aam
cltd
gs
pop
adc
pop
stos
nop
jbe
outsl
push
rcr
lahf
lret
jmp
pushf
fidivrs
sbb
sar
xchg
lret
lahf
lret
push
cwtl
aaa
sahf
xor
fdivs
syscall
dec
add
inc
jg
dec
aam
lret
pop
stc
rclb
adc
and
test
lret
mov
fnsave
add
cmp
lret
push
dec
inc
arpl
push
ds
add
repnz
mov
insb
jg
pop
adc
or
int
inc
or
sub
js
testl
mov
lret
mov
and
in
inc
and
and
dec
jecxz
jae
pop
jmp
jo
xor
cmpsl
mov
cmpsl
scas
push
mov
inc
imul
das
cmp
clc
in
sbb
and
test
cltd
xor
sarl
xorb
pop
sub
xchg
push
jg
stos
push
fs
jle
jmp
aad
out
xor
lretw
cmpsl
aas
iret
pop
loop
xchg
or
xor
jmp
cld
pushf
cmp
mov
mov
pop
add
lods
pop
add
testl
add
ja
incb
mov
jg
shld
or
add
cmp
repz
push
cmpsb
cwtl
jge
jp
xor
mov
hlt
mov
lcall
out
in
jle
xchg
shl
pop
xchg
jnp
pop
inc
cltd
mov
lock
cmp
mov
push
enter
out
push
push
test
fildll
xor
inc
into
push
test
data16
in
inc
imul
rorb
ficompl
dec
fbstp
cmp
enter
mov
mov
dec
int
cld
xchg
adc
mov
push
scas
pop
repz
ss
mov
test
lret
mov
into
or
sub
adc
cmpl
jns
pushf
jmp
xchg
fwait
jl
xchg
mov
sub
cmpsl
hlt
inc
fisttps
ljmp
stos
in
fisubl
int
pushf
sti
into
mov
outsb
mov
dec
inc
or
adc
mov
and
jb
pushf
add
outsb
xchg
and
pop
fwait
mov
sbb
fists
mov
insb
push
mov
out
int3
cli
jge
scas
or
jg
aad
out
scas
out
sub
mov
push
xchg
sti
and
dec
push
rclb
push
dec
mov
push
inc
stos
jl
mov
ret
int
cli
sub
mov
addb
lcall
int
pop
mov
adc
cmp
or
dec
andl
pusha
popf
or
add
or
jl
scas
out
sbbb
insl
push
outsl
add
pop
adc
adc
lods
in
movsb
fs
jae
roll
adc
addr16
jb
cmp
mov
sbbb
ret
jp
out
or
in
dec
mov
aad
out
pop
shll
inc
repz
cmpsb
ljmp
pusha
movsb
stc
sarl
lret
leave
cmp
cmpsb
ja
ficompl
decl
or
in
or
cmp
fmuls
xor
xor
jle
arpl
pop
dec
mov
or
iret
roll
sbb
fildl
out
int
mov
xor
mov
push
sbb
or
mov
sub
outsl
jbe
imul
in
cmp
ja
fsubrl
pop
cmpsb
call
lock
sub
nop
inc
sub
mov
pushf
sub
ret
xor
pop
xor
sub
insl
adc
mov
cmc
jno
add
jmp
mov
aas
inc
adcl
mov
into
cwtl
pop
inc
test
pop
fnstcw
xor
loope
pop
pop
inc
fisubrs
imul
mov
cmp
lret
xor
mov
dec
cmp
mov
ljmp
inc
stos
arpl
std
or
sbb
fprem1
mov
add
aad
xchg
mov
lret
stc
or
cmp
outsb
fwait
mov
lods
push
in
jecxz
int3
inc
sub
mov
sub
shlb
icebp
mov
push
out
out
inc
outsb
mov
maxps
pop
int3
jmp
mov
mov
out
xor
int
dec
cli
cmp
jo
aaa
imul
je
addb
out
inc
mov
xchg
xor
filds
sbb
movsl
lea
addr16
out
les
fbld
or
pop
int3
xor
jecxz
jo
fildl
sbbb
sti
or
imul
mov
fbstp
jg
xor
add
pop
or
lret
jae
vpand
sbb
loopne
shrb
jg
mov
sub
xchg
push
lods
test
inc
dec
addr16
xchg
pop
inc
lods
ret
fs
inc
loop
jns
pop
pushf
add
scas
xorl
mov
sbb
insl
mov
js
xor
push
inc
scas
mov
icebp
inc
and
pop
dec
mov
repnz
fisttpll
imul
subb
xlat
repz
mov
popa
push
sub
mov
int3
mov
cmp
sub
scas
mov
xchg
lahf
or
mov
pop
outsl
pop
sarb
add
ljmp
jo
inc
mov
repnz
dec
mov
or
roll
inc
and
pop
or
pop
movsb
in
mov
mov
jle
scas
xchg
shlb
mov
shll
inc
add
xor
jbe
sbb
mov
cmp
jge
mov
sbb
xchg
push
sbb
dec
jae
mov
push
test
mov
add
sbb
adc
int3
xor
rclb
xchg
cmp
cmp
test
pop
jp
idivb
cmp
fwait
lret
lea
adc
fsub
mov
or
or
nop
ret
aam
stos
shrl
mov
sbb
imul
daa
dec
push
pop
imul
jl
push
adc
push
pop
add
fidivs
icebp
dec
adc
sbb
xchg
xchg
lret
mov
push
clc
lret
pop
ror
imul
mov
insl
fwait
sti
mov
insb
sub
in
jbe
mov
mov
cmpsb
sub
pop
mov
or
jmp
dec
js
sbb
movl
inc
fdivrs
mov
mov
cmp
pop
inc
jl
int3
xchg
clc
mov
xchg
sub
pop
test
inc
arpl
jl
jns
lahf
cmp
sbb
jl
xorb
pusha
sti
shrb
in
xor
fsubrp
jecxz
push
add
jbe
pop
or
cmpsl
xchg
cmp
and
stc
in
pop
into
ljmp
mov
pop
rolb
je
mov
and
nop
fadds
addr16
pop
push
jl
pop
call
lret
in
cmpxchg
mov
add
pop
mov
loopne
std
push
cmp
ss
jnp
mov
push
xchg
sbb
mov
stos
mov
pop
cli
mov
int3
loop
out
fwait
bound
aaa
dec
add
mov
cs
cmp
fwait
test
add
add
xchg
daa
stos
xchg
mov
xchg
pop
pop
xchg
push
push
fisubs
xchg
add
sbb
dec
cmp
iret
jle
ljmp
nop
andb
imul
cmp
aas
adc
mov
cmp
sub
adc
pop
movsb
mov
push
call
or
pop
movsb
mov
sub
or
push
add
daa
jo
jl
cmp
cmp
sarl
or
subb
in
mov
jbe
sbb
int
imul
data16
mov
and
xor
adc
mov
or
int
dec
jbe
adc
cld
fs
push
fs
popw
mov
jae
and
pop
pop
cmp
add
cld
jge
stos
or
stc
or
jl
xchg
jo
mov
mov
adc
push
repz
ds
dec
jge
push
jbe
jae
mov
daa
fcmove
stos
adcl
mov
sub
roll
mov
out
movsb
xadd
std
aam
sbb
hlt
dec
cli
inc
imul
sub
mov
cmp
sub
sbb
js
dec
xchg
cmp
inc
fwait
jp
aas
adc
addr16
and
push
mov
adc
or
movsl
mov
mov
mov
out
push
nop
cltd
push
aaa
and
pop
and
inc
push
jo
jmp
nop
xchg
cmpsl
jg
inc
mov
cmp
mov
in
fidivrs
jns
jae
call
cmpsb
xchg
lods
cmc
out
arpl
mov
cltd
adc
lret
inc
call
shlb
add
add
add
and
mov
cmc
cmc
pusha
je
loope
jl
xchg
mov
out
cmpsb
aam
jns
or
pusha
lcall
out
adc
cmc
pop
fcmovnu
outsb
add
lods
jmp
sub
adc
outsb
aas
scas
cmpsb
add
ret
test
imul
mov
jp
pusha
cltd
lea
xchg
nop
loop
bound
inc
frstor
inc
and
sbb
dec
xor
xorb
sets
mov
and
test
push
pushf
aam
into
xchg
xor
xchg
xchg
jne
push
jecxz
adc
pop
inc
mov
movsb
xchg
xchg
xchg
clc
je
cmpsb
adc
je
add
and
scas
mulb
arpl
xorb
call
fcompl
icebp
adc
out
enter
jae
hlt
jge
adc
cwtl
cmp
adc
push
xor
or
decb
sub
leave
adc
jbe,pn
pop
addb
xor
xchg
cmp
fstpt
sbb
mov
push
inc
cmp
cmp
inc
dec
sub
push
ficompl
imul
cmp
xchg
cmp
mov
dec
sub
push
sbb
inc
xor
scas
ret
sub
ret
dec
jns
pusha
out
inc
jge
cmp
lods
pop
das
fbld
push
sub
divl
lods
stos
mov
inc
adcb
push
jmp
xchg
add
xor
in
adc
push
emms
cmpsb
jnp
push
call
sbb
out
aas
or
fidivl
aam
daa
daa
xchg
clc
xor
insb
add
pop
jne
sub
adc
shlb
pop
cmc
ja
adc
xchg
or
repnz
stc
andb
cmp
inc
rorl
arpl
mov
sub
pop
jb,pn
insb
loop
inc
nop
xor
fstl
lock
and
mov
xor
and
jne
das
mov
push
sbb
filds
and
push
or
mov
ds
mov
rcrb
mov
pop
xor
xchg
subl
divb
int
popa
mov
sbb
hlt
popf
mov
sub
ret
or
sti
and
fbld
cmp
mov
lcall
mov
scas
ds
xchg
mov
lds
popa
cld
dec
adc
pusha
jmp
mov
push
pop
xor
scas
int
xchg
orl
jne
and
lods
dec
cmp
sbb
mov
mov
daa
push
in
hlt
xor
inc
imul
inc
xor
or
mov
icebp
cld
leave
push
clc
and
insb
addr16
pop
xor
imul
inc
xor
int3
mov
adc
push
ffreep
or
arpl
fwait
adc
adc
repz
repz
lret
cmp
push
dec
inc
inc
xor
je
cmpsl
add
gs
cmp
adc
cmp
jg
outsl
mov
popf
inc
mov
cmpsb
sub
ror
xchg
mov
push
je
rclb
mov
jo
mov
sbbl
xchg
dec
jecxz
out
test
pop
out
and
or
fimuls
out
sub
adc
sbb
pop
jl
or
aaa
adc
testb
cltd
mov
sbb
cmp
aas
xchg
pop
xchg
scas
inc
sub
out
aaa
mov
mov
pop
sub
push
or
cmpsl
sbb
cmpsb
int3
jp
out
popf
pop
xchg
mov
push
xor
cmpl
cmpsb
mov
sbb
jp
nop
mov
stos
lcall
out
push
fldl2t
cmp
jbe
mov
pushf
xchg
repz
les
lret
xor
fimuls
adc
movb
jo
loop
jno
std
push
rcr
hlt
push
bnd
cmp
dec
cmp
cltd
cmpsl
push
jg
inc
mov
xor
mov
stc
out
inc
leave
fdivrl
fists
xchg
and
das
and
xor
and
hlt
cmpsl
cmpl
dec
cmpsb
std
gs
push
in
jp
fs
pop
stc
data16
pop
mov
add
clc
lods
sarb
test
out
mov
pop
sbb
stc
pushf
fwait
cmc
adc
mov
sbb
sub
xchg
jno
mov
or
ret
jo
adc
jo
imul
push
xchg
cltd
inc
jg
aas
mov
jbe
ds
repnz
push
lret
add
mov
mov
aaa
imul
rolb
sub
mov
cmp
lds
out
mov
cmp
pop
cmc
aaa
aas
adcl
fnstenv
addb
lods
cmp
xchg
jle
mov
fcom
mov
dec
in
xchg
mov
or
mov
and
iret
pop
dec
cmp
push
dec
loope
movsl
jle
mov
repnz
outsl
mov
fwait
arpl
aas
loop
shlb
frstor
or
test
adc
lret
mov
cmp
and
dec
mov
dec
push
mov
push
inc
lock
adc
outsb
je
sti
xchg
outsb
insl
xchg
loop
pusha
mov
push
cmc
xchg
lea
cltd
outsl
loop
arpl
add
lret
or
sub
rclb
testb
push
mov
cmpsb
orb
cld
es
cli
jmp
xchg
xchg
adc
cltd
rcrl
clc
stos
pop
hlt
mov
xor
and
sub
pop
outsb
js
movsl
cmpsb
push
pop
sbb
mov
inc
movl
cli
add
nop
adc
fmull
imul
push
rolb
lahf
and
ds
mov
jg
xchg
inc
subb
inc
aad
jmp
mov
inc
movsb
push
insl
rcl
or
test
pop
leave
iret
jecxz
aaa
sti
sahf
xor
jmp
das
neg
push
dec
sbb
aad
sub
xor
test
mov
rorl
int
call
out
mov
out
test
mov
lds
push
in
in
lahf
mov
push
xor
xchg
or
aas
sti
into
mov
push
stos
xchg
bnd
pop
inc
lea
in
xchg
inc
xchg
adc
jmp
dec
xor
fimull
sub
push
ja
xor
test
pop
jge
ds
inc
pop
loop
orb
sub
dec
cmpsl
test
aas
shrl
fnstenv
in
out
mov
jg
fadds
call
adc
push
or
add
lret
fnstcw
out
cmpsl
jns
loopne
mov
dec
sub
jle
mov
mov
inc
stos
pop
out
jp
jge
inc
sbb
stos
mov
pop
iret
jge
mov
cld
and
and
cmpl
movsl
dec
imul
or
imul
mov
xchg
lret
xchg
push
ret
mov
and
pop
jae
adc
ss
aam
mov
mov
sub
popa
and
es
test
sub
mov
in
mov
shll
pop
mov
mov
lret
sbb
cmpsl
xor
popf
bound
sbb
adc
inc
adc
cs
movsb
ja
fsts
or
or
fstps
xor
lret
into
arpl
std
lret
cmc
pop
xchg
and
sub
sbb
rol
and
cmp
std
push
rorl
cltd
sti
pushl
out
popf
dec
adc
hlt
pop
adcl
push
enter
jne
xchg
aam
lods
roll
in
dec
int3
es
fcoms
or
jno
mov
mov
loope
jns
push
cmpsb
shll
and
mov
loop
dec
stc
xor
pushfw
add
dec
fidivs
aaa
xchg
loop
cli
fwait
out
cmpsl
into
or
mov
add
pop
insb
sub
rcrl
cmp
pop
bound
xor
mov
incl
aas
rorb
shll
push
idivl
mov
xchg
lret
mov
xor
ss
mov
sub
outsb
ljmp
or
mov
bnd
mov
es
orl
jbe
push
xchg
leave
inc
sbb
jle
adcl
lds
out
xchg
push
test
mov
or
cmpsl
and
pushf
mov
enter
xor
pop
mov
add
rcll
adc
dec
movsl
pop
lock
sub
dec
xor
das
dec
inc
mov
xchg
xchg
jbe
xchg
repz
ret
push
arpl
push
cmp
movsb
scas
jne
dec
int
jo
sub
and
sbb
or
out
xchg
fsin
inc
push
jne
fldl
mov
sarb
test
ds
mov
scas
inc
rorb
pop
pop
outsb
cmc
repz
xor
hlt
xchg
fdiv
push
mov
cld
add
es
repnz
lcall
test
in
pop
xchg
adc
shrl
add
lods
mov
adc
add
mov
or
outsb
ja
sbb
xchg
out
sbb
jp
adc
aas
pop
or
enter
cwtl
aaa
mov
out
mov
cltd
jb
jge
dec
cmp
les
test
push
pop
rcrl
inc
xchg
mov
js
lea
xchg
adc
bnd
dec
fdivrl
mov
fldt
pop
lcall
jl
out
jge
mov
xor
ret
pop
fisubrl
cs
cmp
pop
lahf
or
push
xchg
mov
cmp
movsb
cwtl
loop
into
addr16
les
xor
daa
push
adc
pop
mov
mov
inc
cmpsl
scas
cmp
sbb
add
addr16
dec
mov
movsb
pushf
cmc
xor
fistps
in
pop
subb
sbb
movsb
jbe
rclb
out
adc
push
jnp
lret
es
packssdw
mov
or
xor
les
fwait
xchg
fisubrl
mov
dec
popf
mov
cmp
adc
mov
out
or
fistl
inc
orb
ret
stos
scas
mov
gs
cmp
push
sti
inc
shll
je
test
outsb
repnz
js
inc
mov
mov
fs
cmp
test
lret
jb
xor
outsl
in
int
sahf
cmp
sbb
movsb
and
fdivl
jg
push
daa
push
ljmp
push
leave
xchg
push
ss
sub
cmpsb
push
mov
idivb
stc
ljmp
xchg
ret
mov
mov
sbb
mov
jo
aam
dec
das
jg
iret
adc
push
or
std
mov
push
inc
gs
adc
inc
mov
movsl
cmpsb
outsb
imul
outsl
mov
shr
lods
inc
and
movsb
push
ret
jno
das
pop
add
adc
push
aad
sub
out
fbld
mov
mov
push
ror
ficoml
or
mov
jl
fadds
push
jge
out
mov
je
jae
js
sahf
test
xlat
add
jns
add
or
mov
pop
gs
fdivrs
in
jge
sub
push
aaa
sarb
cmpsb
clc
inc
push
lods
inc
std
pop
add
xchg
dec
cmp
xor
mov
sbb
sbb
aam
jmp
sbb
sub
in
imul
xchg
push
lret
cmp
in
xor
stc
repz
mov
testb
cmpsl
aaa
jno
aas
dec
nop
lds
loop
jne
dec
push
cmpsl
scas
dec
mov
sub
movsb
mov
cli
ret
inc
jge
dec
and
pop
and
lock
in
ljmp
aaa
push
cmpl
lahf
out
xor
popf
push
push
test
fcompl
add
imul
fs
inc
pop
push
add
sbb
mov
pop
dec
icebp
dec
jp
popa
push
sbb
sub
into
jl
xchg
shll
jne
shl
loopne
sub
xchg
jg
jb
inc
inc
cld
fucomip
xor
lret
xchg
mov
imul
jns
inc
sub
and
push
push
mov
outsl
in
mov
jge
jl
in
xchg
pop
imul
mov
fsub
mull
bound
lods
enter
aam
addb
rorl
je
leave
push
push
icebp
cmp
andl
addr16
daa
jb
lret
shlb
ficompl
rolw
cmp
jmp
xchg
fadd
in
sbb
lds
dec
fcompl
sub
clc
out
adc
data16
push
xlat
pop
shrb
popa
fcoml
ljmp
mov
jmp
lods
jnp
icebp
out
pop
filds
jg
push
and
pop
add
ret
jmp
jmp
testb
in
fildll
cmpsl
in
dec
push
xchg
int3
jo
jecxz
jecxz
cli
inc
aam
dec
loopne
js
or
leave
dec
out
jae
mov
or
jbe
xor
cmp
cwtl
daa
push
xchg
adc
ja
mov
sahf
push
inc
xchg
sbb
pop
and
xchg
shr
jne
es
cmp
ret
subb
cmp
push
jmp
daa
mulps
sub
inc
add
sbb
mov
adc
mov
cmp
pop
or
outsl
aad
cmp
cltd
lahf
cmp
sub
adc
cmp
ja
shr
pop
sbb
scas
out
data16
popa
inc
or
sbb
adc
push
pop
mov
or
roll
fwait
jg
mov
mov
andnps
bound
inc
hlt
xor
xlat
mov
sbb
ja
out
mov
mov
testl
xchg
jg
sub
inc
mov
sub
jnp
test
test
push
arpl
pop
push
icebp
jp
sbb
pop
pop
sbb
and
and
sbb
adc
xlat
imul
or
push
pusha
inc
mov
dec
add
mov
push
leave
fidivs
pop
push
xor
sub
into
loop
pop
lds
mov
xor
inc
add
pop
stos
insb
adc
sbb
xchg
enter
jmp
gs
mov
cmp
adcl
xor
mov
fildll
clc
les
pop
add
xchg
lret
xlat
sbb
add
mov
es
sub
bound
loope
sbb
mov
ret
cmpsl
nop
icebp
adc
mov
xchg
cltd
repnz
test
les
add
scas
clc
out
stos
movsb
addl
inc
sahf
popa
loopne
mov
sub
fwait
mov
inc
mov
sub
loopne
out
jle
jb
or
mov
pop
push
cli
xlat
fnstsw
mov
popa
push
add
in
roll
sub
rorl
and
push
pusha
aaa
lock
in
dec
add
or
cmp
mov
and
adc
push
in
fnsave
imul
pop
shlb
mov
and
int3
fdivp
addr16
dec
inc
addb
ror
shll
mov
movsl
push
filds
jmp
add
mov
push
cmp
add
jmp
fwait
and
or
lock
mov
mov
cmp
int
subl
fdivs
jb
mov
sti
lea
es
enter
call
fstpt
cmpsl
xchg
jle
xchg
imul
sti
xrelease
aaa
cmc
hlt
mov
leave
mov
ja
add
addr16
js
sbb
inc
scas
in
testl
xchg
ja
inc
push
xor
dec
or
in
xorl
imull
mov
lret
movsb
xor
jle
into
sub
daa
mov
stc
add
mov
jae
ficomps
and
cmp
sub
test
xor
mov
sbb
or
inc
pop
xlat
in
mov
dec
sahf
pushf
out
sarl
out
outsb
and
iret
or
cmpsl
fs
jl
rorl
inc
outsb
cs
mov
adc
stos
cmp
ljmp
repnz
data16
xor
lods
mov
add
movsl
jne
inc
mov
xor
stc
popf
push
jle
lock
pop
xor
lea
or
xchg
sarl
mov
xor
jns
lods
sbb
arpl
lret
aas
cld
xchg
rolb
cmp
mov
icebp
pusha
mov
sti
and
xchg
std
cmp
movsl
cmp
scas
fwait
in
mov
push
test
mov
cmp
outsl
adc
outsb
outsb
cmp
sub
xor
fwait
mov
sub
out
add
add
repz
jecxz
xor
xchg
inc
adc
dec
js
loopne
popa
sbb
pushf
or
les
popf
cmpsl
bound
call
or
lods
xchg
hlt
and
shlb
out
dec
mov
les
sbb
cmp
and
scas
push
cs
incl
das
pusha
xor
cltd
lds
push
mov
mov
sahf
enter
mov
push
push
scas
std
imul
jnp
test
mov
orb
pop
pop
cmc
inc
cmp
test
lock
adc
xor
aad
push
mov
sar
push
negb
pop
addr16
mov
dec
cmp
in
ljmp
lret
aam
pop
push
rorl
ss
xor
fstl
inc
daa
ss
ds
pop
insl
inc
push
jl
insl
call
int
repnz
outsb
movsl
xor
ret
repz
cmp
ljmp
arpl
sbb
push
loope
pop
popl
mov
jne
sub
sub
push
push
outsb
ljmp
sbb
add
std
jp
push
jmp
or
xchg
lcall
jns
jae
fsubrs
sbb
into
jecxz
push
and
mov
sub
gs
imul
imul
fs
test
pop
jbe
int3
lock
loope
mov
es
ss
sub
jmp
inc
mov
push
pop
add
xchg
pop
pop
lcall
mov
loope
jae
lods
xlat
pop
add
add
scas
into
sbb
push
stos
fwait
les
jecxz
stos
int3
rorb
pop
outsb
xchg
fwait
xchg
jbe,pt
push
not
adc
cld
in
push
xor
cmpsl
pop
sbb
lahf
int
jmp
ja
inc
stos
push
int
cld
push
imul
js
jne
cmp
fimuls
or
rolb
mov
mov
loop
scas
add
pusha
push
jge
push
fdivr
clc
pop
jae
call
push
iret
lods
xor
push
xchg
xor
pop
shrl
mov
sub
fdivl
jbe
and
out
and
gs
push
jbe
cmp
cmpb
and
mov
add
scas
mov
mov
das
repz
ret
sarl
push
mov
mov
std
ja
test
pusha
or
test
aaa
push
pop
notl
adc
popa
pop
fimuls
ss
dec
jge
adc
pop
jae
mov
out
push
sar
daa
pop
lods
adc
jge
shrb
xor
xchg
mov
pop
jmp
in
insb
pop
lods
xor
inc
pushf
jo
leave
push
ja
adc
jge
icebp
test
movsl
push
mov
aaa
fucomip
and
lock
xorb
xchg
ljmp
mov
movsl
and
repz
mov
aam
setle
stos
mov
loopne
sub
das
insb
dec
pop
push
or
lret
adc
pop
js
push
stos
cmp
lahf
les
into
inc
mov
sub
enter
loope
cmpsl
aas
mov
mov
cmpsl
push
cmpsl
xchg
sub
and
xlat
mov
pusha
sub
mov
push
lahf
adc
in
shrb
adc
icebp
jge
xor
lret
aaa
push
adc
xor
mov
mov
cmp
fs
shll
cwtl
enter
aas
mov
inc
push
fs
sbb
add
xchg
and
ljmp
jp
stos
lahf
mov
jmp
frstor
mov
jl
pop
in
mov
push
leave
sets
movsl
fstpl
sbb
repz
pop
into
cld
mov
xchg
xchg
stc
movsl
into
pop
inc
loopne
iret
test
xor
cwtl
icebp
data16
notl
push
leave
into
or
movsb
es
pop
inc
jg
mov
jno
dec
dec
bound
pop
or
addb
lea
push
in
jns
cltd
sub
fisttpll
aas
mov
mov
xchg
xchg
mov
sub
loopne
stos
xor
mov
or
pop
lea
cli
mov
lock
cmp
fistps
jae
adcl
fmuls
sbbl
arpl
cmp
dec
adc
sbb
mov
dec
clc
jecxz
fistl
pushf
xchg
test
call
mov
lods
pusha
or
mov
mov
lret
cmp
xchg
xor
or
mov
scas
or
sbb
call
sub
or
mov
jnp
cmpsl
movsl
sub
add
xor
data16
pop
arpl
cmp
jbe
mov
les
mov
movsl
fistl
imul
mov
push
mov
dec
das
inc
je
inc
push
and
sub
subl
js
mov
add
shlb
mov
mov
or
jmp
loope
loopne
stos
add
dec
inc
xchg
xchg
mov
pop
or
and
adc
fstpt
cmp
push
aaa
dec
sbb
iret
gs
push
pushf
lods
dec
cmp
pop
sbb
mov
add
mov
push
xchg
jno
push
stc
addl
push
cld
scas
divb
mov
fdiv
rcrb
sub
cmp
mov
bswap
test
push
fsubrs
cmp
or
adc
add
mov
pop
add
dec
mov
or
sub
pop
add
out
adc
cmp
cmp
xchg
xor
fsubrl
sbb
andb
and
mov
shl
out
push
cwtl
xchg
imul
stos
adc
inc
mov
call
addr16
in
cmc
insb
and
fcomip
jae
ret
sub
mov
and
mov
jnp
add
test
cmp
add
push
imul
int
jg
mov
testb
lods
mov
push
xchg
in
in
sub
push
mov
mov
or
adc
and
push
dec
out
iret
rcr
sbb
call
mov
jge
jle
xchg
loopne
ljmp
xchg
lret
sahf
xor
add
mov
jne
jle
mov
hlt
lods
mov
loope
inc
test
jbe
out
mov
ds
ja
mov
or
xchg
divl
fwait
mov
sub
imul
push
dec
pop
push
push
jecxz
inc
mov
push
xchg
loopne
roll
loop
inc
fisubl
ficompl
rcl
in
dec
jp
outsl
pop
std
xor
cmpb
ret
cmp
adc
gs
cmp
dec
mov
push
push
inc
or
outsl
mov
push
jle
xchg
dec
jle
sub
dec
mov
mov
xchg
cmp
fidivs
add
popa
popf
mov
inc
xor
daa
ja
pop
cmp
ret
cmp
roll
push
loopne
add
mov
hlt
dec
bound
mov
cmp
call
dec
mov
and
or
fidivs
lea
ja
mov
sub
dec
js
dec
mov
dec
adc
sbb
jbe
add
and
push
fiadds
mov
mov
lret
jno
lods
shl
xor
sub
cmpsl
inc
fwait
dec
lret
ljmp
and
push
insb
sub
dec
cltd
aam
sub
xor
cltd
add
cmp
or
cmc
and
mov
aad
and
je
sbb
ja,pn
loop
add
or
and
xor
popf
xchg
pop
xor
filds
clc
push
jb
dec
push
and
pop
int3
pop
push
cmp
test
xchg
sub
out
fsubr
dec
add
test
sub
fidivs
push
mov
mov
leave
pop
fnstenv
cmp
imul
test
das
xor
out
shll
mull
mov
or
shlb
sbb
shr
in
lret
movsl
jbe
nop
pop
test
inc
lret
add
pop
jae
cld
icebp
cltd
pusha
push
xor
insb
std
nop
dec
insb
popf
stc
jns
out
loop
cmp
mov
mov
ret
mov
fistps
ja
mov
lods
jo
pop
lret
and
ljmp
js
mov
pop
nop
movl
jge
pop
outsl
shl
es
je
jp
push
dec
push
push
insb
adc
add
sub
ljmp
push
sbb
pop
xor
int3
cmc
xchg
es
repz
dec
or
xlat
pushf
or
iret
mov
jnp
xchg
es
arpl
leave
daa
sbb
jno
jnp
push
loope
nop
mov
cmp
lret
fsubr
sub
adc
or
shll
jg
movsb
cmp
rolb
push
lcall
jmp
jg
scas
lahf
cmp
pop
std
xor
push
test
xchg
loop
push
pushf
fstpl
adc
inc
sub
mov
cs
push
outsl
adc
scas
cmp
aas
ret
xchg
fidivs
movsb
inc
dec
mov
cs
push
fnop
lds
icebp
testb
jecxz
push
out
dec
icebp
or
stos
pop
fldenv
mov
out
pop
ret
adc
pop
shll
loopne
mov
cmp
mov
shrl
cli
xor
mov
mov
pop
fs
sbbl
movsb
and
aam
ds
and
in
ljmp
mov
jge
scas
sbb
icebp
mov
stos
out
push
ret
sti
sbb
or
cmp
incl
adc
sbbl
jecxz
pop
lea
mov
in
pop
lret
inc
push
mov
sub
loope
dec
or
mov
test
jge
mov
jb
push
cmc
add
sub
sbb
stos
or
pop
and
xor
mov
adc
jmp
pop
jmp
xlat
pop
insb
insl
pop
push
push
int3
bound
cmpsl
inc
dec
push
in
mov
mov
popf
cmp
push
jae
xchg
sarb
add
push
lods
mov
stos
shr
insl
rorl
movsl
addl
lock
sub
mov
jp
ss
xchg
jl
mov
or
fwait
pop
jmp
mov
or
sbbl
ds
in
lcall
cs
xorl
ret
iret
sbb
jmp
rolb
nop
popf
xchg
mov
dec
nop
cmp
pop
flds
fidivs
dec
scas
push
xor
jno
int3
jbe
jg
gs
xor
xor
pushf
iret
aas
ficomps
push
adc
enter
push
xorb
ljmp
adc
test
ljmp
and
cmp
repnz
sbb
adc
jg
inc
sbb
ds
scas
cmpsb
sub
icebp
or
mov
xchg
cmp
cmpb
mov
xchg
in
push
pop
jl
stos
lret
cltd
pusha
jmp
ljmp
fistpll
movsl
outsb
push
clc
lea
mov
jl
loopne
add
stos
fsincos
out
pop
mov
cli
pop
lret
sahf
jmp
mov
ret
aam
pop
rcrl
pop
push
sbb
add
cmc
sub
mov
adc
or
push
push
movsb
into
mov
cltd
test
cmp
or
pop
ja
ja
cmpsb
mov
out
pop
test
xor
push
push
lods
mov
cltd
jo
repz
mov
stos
mov
pusha
addr16
int3
ja
loope
out
mov
sti
in
das
inc
sub
mov
inc
loope
es
and
or
pusha
mov
cmc
mov
aaa
sub
inc
mov
mov
pop
movsb
push
cmpsl
pop
pushf
xor
push
or
rcr
sbb
out
mov
out
mov
in
jl
ficomps
filds
bnd
add
jge
inc
nop
cld
xchg
loope
pop
fsts
clc
in
inc
pop
add
push
fsts
add
pop
adc
jb
leave
inc
out
bnd
pushf
cld
rclb
ds
stos
or
es
leave
fisttps
stos
sahf
sub
sub
sub
fmull
out
inc
movsl
add
xor
sti
mov
adc
and
int3
xor
fbld
rcll
pop
nop
or
mov
adc
add
outsb
push
adc
aaa
push
loope
mov
aam
cmp
mov
out
and
jp
adc
inc
or
js
add
ds
sti
adc
jmp
lret
repz
dec
jnp
adc
fidivrs
bound
mov
cmp
mov
sub
push
dec
shrd
mov
movb
mov
add
push
shll
mov
into
insl
mov
loopne
pop
pop
dec
pop
int
xor
or
push
jmp
orb
add
adc
repnz
rcr
dec
les
adc
das
sbb
adcb
cltd
aam
push
dec
lock
movsl
bound
push
fwait
int
cmpsb
mov
movsl
out
push
or
xor
mov
sub
bound
push
cmp
dec
stos
fiaddl
pusha
lds
sbb
mov
dec
fsubrs
xchg
adc
push
in
mov
add
xor
sbbb
scas
fstl
sub
in
or
sub
cwtl
inc
pop
cld
mov
jns
lcall
add
loopne
popf
in
sahf
adc
hlt
dec
pop
ret
add
pop
pop
xchg
adc
mov
mov
sub
rcrl
fcompl
mov
pop
sbb
lahf
movsb
outsb
pop
jecxz
lods
mov
lahf
inc
xor
cmc
push
les
imul
mov
add
outsb
or
pop
mov
cwtl
pop
inc
sbb
pop
xchg
xchg
insl
icebp
lcall
in
int
repz
jns
mov
push
cmp
lret
xchg
mov
push
lcall
add
ret
mov
fwait
jae
dec
out
dec
leave
fisttpll
cmpsb
cmc
aas
sbb
fistl
pop
fsubl
in
fists
mov
xor
in
mov
xchg
inc
dec
inc
mov
out
dec
fists
add
mov
dec
in
leave
popf
fsubrl
into
arpl
lock
cmp
xchg
rcr
adcb
pop
out
repz
in
cmp
popf
scas
or
jge
xor
into
xor
fiadds
outsb
xor
sbb
stc
jmp
stc
jno
xorb
leave
jns
hlt
enter
fcoml
mov
cld
shr
xchg
addr16
std
repnz
mov
xor
xchg
roll
and
ja
mov
cmp
or
shll
into
sahf
or
xchg
in
ds
sti
lea
or
aad
pushf
inc
shlb
data16
mov
jnp
fsubrp
jecxz
sub
mov
ret
in
pop
lock
enter
dec
scas
mov
inc
mov
sbb
mov
rorb
dec
ja
imul
adc
lahf
or
mov
lods
and
sti
adc
lock
pop
ja
mov
js
faddp
scas
inc
outsb
mov
mov
int3
sub
sbb
call
ss
jb
into
es
in
das
add
cmp
cli
inc
dec
push
popf
mov
sub
xchg
aam
mov
subb
sarb
xchg
je
pop
lret
mov
ss
clc
in
jg
mov
hlt
lods
nop
iret
ja
dec
mov
pop
mov
push
mov
sub
imul
sub
loop
mov
pop
jnp
dec
xor
xor
pop
sti
mov
jae
jo
gs
push
pop
push
icebp
add
xchg
ficomps
mov
rorl
mov
fnstsw
mov
mov
pop
cwtl
lods
xchg
test
imul
sub
imul
push
add
dec
ret
jle
cltd
mov
cwtl
fneni(8087
xor
lock
ljmp
dec
mov
stc
push
sub
insb
insl
mov
add
mov
data16
xchg
cld
lock
lahf
dec
out
adc
push
jecxz
js
lock
stos
xor
and
jge
cmp
shlb
mov
xlat
inc
pop
test
dec
adc
fisttps
dec
repz
lods
lds
pop
adc
andb
fiadds
sbb
sub
int3
inc
pop
adc
cmpsb
jge
xchg
add
insb
pop
stos
je
mov
xchg
cwtl
cld
enter
or
mov
hlt
into
lds
movsl
xor
adcb
pop
ja
add
dec
adc
push
or
outsl
lods
popw
je
aaa
mov
scas
imul
loopne
sub
cwtl
jns
clc
mov
mov
xchg
cltd
vmaxpd
xchg
cwtl
push
sbb
jo
comiss
in
pusha
or
pop
out
xchg
xchg
scas
pushf
pop
shlb
mov
cld
ja
bound
fs
sbb
aaa
mov
stc
push
icebp
lds
mov
stc
sar
adc
add
and
js
mov
adcb
mov
pop
add
push
sub
call
cmp
pop
sahf
ret
cmp
mov
sub
sub
enter
mov
jb
stos
jo
jmp
jg
mov
push
arpl
sbb
mov
movsl
pop
aad
mov
orb
sbb
pop
fstpt
in
aad
orl
es
add
leave
xchg
mov
ja
xchg
xchg
xor
sbb
push
mov
xorl
pop
lret
daa
mov
cli
add
cli
inc
pushf
adc
outsl
bound
iret
jbe
mov
mov
int
test
inc
into
js
cmpsb
nop
push
or
rcrb
mov
add
push
fs
sbb
fimull
jecxz
add
test
xchg
imul
sbb
xor
inc
jo
das
mov
mov
sub
pop
mov
xchg
add
in
jge
or
lods
cmp
sub
mov
sbb
jecxz
mov
fimuls
pop
cmp
mov
cmp
in
in
inc
test
sbb
nop
test
inc
or
shrb
jnp
mov
or
xor
lds
test
hlt
std
push
outsl
or
rcr
sbb
or
mov
adc
push
push
clc
push
xchg
scas
aas
sbb
add
aam
xchg
inc
mov
mov
add
mov
sti
aaa
pop
ss
test
or
jg
push
insl
imul
imul
pop
mov
mov
lret
sbb
nop
cmc
push
push
fdivs
stos
mov
cmc
jmp
jo
push
xchg
imul
sbb
fwait
sbb
mov
fimull
aam
fisubs
rorb
mov
pop
adc
or
pop
lcall
mov
and
je
jae
sbb
sub
mov
dec
xchg
test
dec
add
cmp
adc
or
in
add
lds
adcb
nop
inc
lret
adcl
jle
int
or
loopne
shll
idivb
in
adcl
je
jb
dec
add
mov
imul
or
scas
pop
fistl
ret
push
add
inc
dec
outsb
mov
fld
ja
mov
lcall
cmpsl
addr16
xchg
cmpsb
nop
aad
lods
int3
sub
cmp
adc
cltd
add
dec
mov
mov
dec
cmp
sub
in
repnz
inc
iret
mov
sub
popa
shll
aam
pushaw
mov
jne
inc
xchg
idivb
xchg
push
test
je
xor
fisttps
fbld
aas
sub
movsb
cli
dec
add
mov
lcall
popf
and
inc
repz
or
insl
mov
in
lahf
js
dec
shlb
adc
les
add
add
cmp
mull
mov
jmp
and
xor
fisubs
movb
jnp
hlt
jae
jge
cmp
push
dec
ret
jp
outsl
jnp
push
call
bound
dec
hlt
iret
inc
insb
mov
mov
add
push
std
jno
jge
jnp
pop
sbb
imul
and
xchg
lahf
xchg
push
xor
fildll
xchg
dec
fistpl
mov
jp
dec
or
js
cmp
pop
pop
into
xor
icebp
adc
mov
int3
mov
rcll
sub
lds
xor
jne
cwtl
and
movsb
popf
call
into
mulb
stc
mov
cmp
inc
fnstsw
mov
insb
fmull
gs
mov
fbstp
inc
xlat
jge
adc
dec
mov
mov
xchg
test
sub
push
jae
outsb
outsb
inc
xchg
jecxz
std
icebp
push
push
xchg
add
mov
add
fcoms
push
cmp
push
xorl
sbb
jne
mov
mov
cmp
fcomi
dec
push
adc
out
lret
or
imul
shlb
into
data16
jns
lret
hlt
push
xchg
stos
or
mov
inc
push
jle
mov
in
mov
pop
jno
mov
insl
enter
pop
les
je
and
mov
or
add
or
aam
sbb
xor
sti
add
inc
lret
out
lret
js
or
iret
lea
dec
scas
fdiv
jno
ljmp
scas
dec
jl
outsl
jp
mov
sbb
jns
ss
push
push
xchg
inc
pusha
mov
mov
roll
negl
mov
mov
or
shll
fs
dec
push
mov
push
inc
pop
jno
cltd
ljmp
inc
fcoms
add
xor
push
or
xchg
mov
insb
push
xchg
pop
iret
pop
pusha
or
movsl
stos
jno
mov
lods
inc
push
aad
dec
sar
sbb
jo
dec
or
mov
xchg
addr16
test
lea
xchg
cld
jnp
inc
cli
ret
mul
mov
shl
imul
mov
mov
add
nop
adc
pop
xchg
enter
dec
jae
mov
xchg
inc
mov
add
mov
add
push
fwait
pop
cld
mov
dec
insl
dec
out
lret
dec
sub
xchg
lahf
or
into
mov
mov
rorb
mov
in
xor
xor
fldcw
jge
cmpsl
mov
leave
rcll
pop
mov
orb
stos
sbb
cmpsl
push
dec
mov
js
ret
push
sub
fisubs
lret
int
mov
loopne
inc
in
out
pusha
movlps
or
jp
pop
sub
add
lret
fwait
ljmp
loopne
cmc
xchg
xlat
aam
cmp
idiv
add
into
or
clc
jno
push
sub
jge
inc
mull
adc
mov
mov
or
cmp
mov
test
lahf
push
xchg
jmp
lods
or
inc
aad
pusha
xchg
insl
push
into
mov
mov
sarb
mov
mov
dec
xor
xor
out
sahf
xchg
mov
imul
jae
or
fs
ljmp
xlat
mov
mov
and
pop
shll
in
bswap
pop
cs
insb
pop
daa
push
xor
ljmp
sbb
pop
or
mov
pushf
sbb
out
mov
fs
shrb
ret
adc
pop
mov
cmpsb
fwait
cmp
mov
loope
cmp
pop
sbb
mov
rorb
pusha
mov
mov
aam
inc
in
dec
lds
mov
stc
pop
aaa
mov
sahf
sahf
test
js
xchg
mov
jno
in
add
push
jo
xchg
pop
lret
pop
dec
sub
jae
mov
pop
test
mov
jbe
jns
push
dec
mov
mov
push
mov
jge
adc
cs
enter
stos
jg
xchg
in
xchg
pop
and
and
sti
or
lcall
pop
pop
mov
subb
sbb
add
icebp
xlat
cmp
inc
popf
add
adc
push
xor
dec
inc
sub
repnz
mov
cmp
push
cmp
rcrl
leave
ja
inc
addb
mov
mov
scas
mov
mov
cmp
call
clc
mov
clc
inc
lea
jl
push
inc
cld
jo
sahf
mov
movl
loopne
daa
sbb
mov
jmp
lret
jb
cltd
adc
and
dec
pop
dec
fs
insb
cmp
aas
out
clc
sub
rcl
dec
mov
dec
xchg
push
push
pop
sub
lock
dec
jge
jmp
inc
hlt
loop
jge
inc
icebp
in
fists
icebp
mov
mov
popa
xchg
adc
add
xlat
insl
dec
sbb
xor
jns
pusha
mov
jge
les
outsb
mov
into
dec
push
cld
jns
lret
pop
stos
gs
dec
jg
iret
mov
mov
out
push
xchg
std
lret
push
ja
into
insb
std
mov
pop
in
out
insb
push
lcall
xchg
dec
test
mov
xchg
or
inc
scas
mov
popf
and
inc
and
cltd
xchg
or
or
jnp
cmp
inc
out
cmp
das
aam
sub
xchg
shlb
and
int
cmp
test
adc
int3
sbb
out
lret
mov
test
stos
out
cmp
ss
push
mov
mov
popa
mov
adc
cwtl
xchg
arpl
icebp
lcall
inc
insl
mov
mov
cmp
les
xor
sub
lock
fdivrs
push
mov
inc
mov
or
pop
fistps
sbb
inc
pop
jbe
movsb
dec
imul
pop
jo
xor
push
popl
pop
dec
repz
lahf
xchg
pop
cmp
ds
and
adc
add
in
and
ds
jb
mov
adc
sbb
out
test
hlt
imul
loope
cmp
mov
subb
jp
aam
cmpsb
or
push
aaa
jecxz
lock
jecxz
lods
rcpps
push
xor
jge
push
cmp
frstor
dec
xor
ret
push
lret
push
sbb
cmp
outsb
mov
push
lods
ss
adc
inc
cmp
xchg
mov
mov
sbb
gs
call
filds
and
adc
jo
push
decb
xor
out
int3
insb
cmp
mov
icebp
out
adc
repnz
mov
out
pop
pavgb
xchg
loop
mov
rolb
loope
dec
fs
int
or
mov
xchg
adc
add
gs
test
imul
out
sbb
pop
and
ljmp
in
test
fisubl
mov
orl
push
and
xchg
lods
enter
cmc
or
scas
cmpsb
xor
xlat
fcomps
ljmp
mov
test
sub
dec
cmpsl
and
sub
loope
dec
addr16
sbb
cwtl
out
and
decb
mov
mov
pop
fisubs
rcll
add
inc
cmp
out
inc
test
pop
ret
mov
dec
enter
and
cld
cmp
mov
xchg
call
sub
mov
xor
xchg
pop
mov
or
lret
insb
mulps
jae
daa
icebp
mov
pop
jmp
test
mov
push
mov
jbe
rorb
mov
mov
stc
jae
xor
aas
fwait
ja
pop
jnp
push
test
push
test
loopne
outsl
out
inc
push
insb
mov
rclb
push
fndisi(8087
sbb
xor
outsl
push
shrl
adc
push
cld
adc
out
sub
dec
fstl
gs
sbbl
add
dec
jle
iret
xchg
adc
xor
movb
pop
in
and
inc
movsb
cmp
fldt
and
leave
sbb
xchg
fdiv
or
mov
mov
rorb
stos
pop
cmpsb
ffree
inc
mov
cmp
mov
jge
xorl
aas
lock
mov
push
adc
das
test
jmp
add
fwait
mov
jg
xor
test
lcall
inc
sbbb
and
pop
filds
je
aam
popf
mov
push
insl
mov
addr16
notb
inc
int3
mov
test
addr16
mov
mov
cmp
and
mov
and
rorl
das
or
hlt
push
sbb
mov
mov
cmpsl
jbe
cmp
or
test
aam
pop
jnp
adc
mov
rclb
push
sub
adc
jb
add
sub
jae
testb
in
mov
cmp
mov
scas
push
out
jecxz
ret
scas
or
add
push
adc
sbbb
push
incl
xchg
ja
and
fldt
fcompl
andl
or
add
mov
sub
mov
loop
mov
push
movsl
shlb
adc
je
jmp
push
adc
in
mov
rclb
ret
fucom
mov
fwait
aaa
xchg
inc
in
cmp
adc
xchg
push
js
mov
scas
mov
sub
pop
lds
loopne
ljmp
jo
ficomps
dec
arpl
aaa
inc
dec
add
and
push
add
sti
call
je
add
les
imul
test
frstor
test
aam
mov
cmp
push
addr16
pavgw
outsb
add
xchg
pop
test
push
icebp
addb
hlt
js
pop
mov
dec
test
mov
lock
pop
fwait
mov
and
test
rorb
mov
and
sti
sbb
jbe
cmp
mov
hlt
pop
scas
mov
ficomps
push
inc
cmpsb
or
arpl
jecxz
fimuls
sbb
shlb
lods
repz
bound
mov
xor
sbb
shrb
push
sbb
ja
sbb
imul
arpl
mov
dec
pop
addb
dec
push
pop
xor
ficoms
cmp
lea
lahf
lea
sub
sahf
inc
stos
bound
or
jecxz
mov
movsb
icebp
mov
inc
mov
inc
sbb
enter
inc
cmp
out
out
loop
jnp
rorb
fiaddl
xchg
mov
call
in
mov
nop
ret
mov
testl
imul
mov
dec
fdivr
insb
xchg
xchg
and
mov
mov
push
clc
sub
int3
aas
in
pop
mov
in
rolb
mov
fldt
jg
retw
add
xor
xor
push
pop
cltd
inc
lcall
imul
fcmovbe
pop
loop
fwait
aad
daa
in
aam
mov
aaa
loop
ret
mov
jnp
adcb
or
push
outsl
cmp
lea
lea
and
rep
xchg
mov
aas
xchg
into
lods
fidivrl
jmp
xchg
lahf
dec
lods
scas
sub
test
enter
jmp
sbbb
bound
test
in
shrb
jg
push
sbb
jmp
mov
mov
or
sub
push
xchg
bound
inc
push
and
push
add
push
lods
popa
adc
roll
test
xchg
andb
push
jbe
push
enter
mov
dec
ljmp
mov
jecxz
ljmp
push
xor
dec
and
and
xor
jg
xlat
cs
or
mov
inc
xchg
sub
push
stos
popf
lea
dec
jmp
jne
and
aam
jo
dec
pop
xchg
stos
sub
jo
test
fstl
sub
test
test
adc
jns
add
push
in
sub
push
test
pop
roll
mov
inc
lea
mov
mov
int3
clc
cmp
test
or
subl
clc
pop
or
adc
mov
and
rorb
xchg
es
or
dec
add
shrb
fimull
insb
jp
sbb
jo
sbb
jmp
fnstenv
sbb
jo
ret
aaa
jns
add
and
mov
sbb
mov
fcomps
rclb
mov
xor
dec
clc
pusha
mov
push
xor
or
or
fs
mov
pop
adc
insl
add
out
and
jg
out
pop
repnz
xchg
pop
cmc
cmp
das
pop
xor
lret
inc
or
xchg
and
jle
pop
pop
imul
xlat
cmp
adc
mov
imul
jg
jecxz
shr
cmpsb
insl
xor
ds
pop
mov
jnp
bound
adc
jns
sbb
aam
addr16
mov
jne
cmpsl
je
mov
cmp
push
xorl
jae
push
jns
aam
xlat
addl
jle
rolb
mov
mov
pop
roll
add
dec
frstor
out
gs
sbb
sbb
daa
int3
sbb
xlat
cmp
and
cmpsl
push
in
add
pop
aam
sti
outsb
push
sbb
les
push
out
cld
jp
sub
hlt
xchg
mov
inc
mov
jmp
scas
or
mov
xor
mov
cmp
fiaddl
cmp
cmp
movsb
out
fs
inc
jno
ja
inc
out
out
cvtdq2ps
sbb
notl
repz
sub
sbbl
mov
fwait
lods
rol
jns
sbb
push
jp
and
pop
js
lcall
jecxz
inc
or
mov
cli
dec
xor
outsl
je
filds
lahf
push
shll
popf
cmp
leave
adc
mov
pop
add
cmp
mov
lock
shll
pop
pop
jo
clc
push
data16
imul
fiadds
popa
push
sbb
inc
fisttps
add
mov
clc
jecxz
std
mov
mov
nop
stos
cmp
mov
jbe
inc
insb
jns
lahf
xchg
push
stc
ds
jp
cmpsb
loop
pusha
sub
and
popf
imul
inc
nop
inc
jns
sbb
dec
lret
cmpsl
fmull
testl
mov
dec
adc
orb
into
ja
xchg
clc
mov
add
mov
cmp
lods
ss
fsts
out
adc
add
xor
adc
lods
xchg
int3
mov
xor
cmp
sahf
jb
push
leave
dec
or
lds
dec
aad
scas
dec
cli
les
es
mov
fcoml
xchg
pushf
inc
test
cmpb
adc
cmc
aad
cmp
in
xchg
jae
mov
or
sub
xlat
iret
adc
sahf
add
out
sub
movsb
xchg
and
sbb
pop
mov
daa
sub
cmc
pop
int
ljmp
inc
js
rcll
mov
nop
mov
xor
adc
sub
sub
imul
sti
sub
mov
jl
das
add
in
xor
enter
lret
cmp
out
push
test
pop
mov
ret
test
sbb
mov
outsb
fistps
inc
mov
lods
push
outsb
mov
adc
cmc
call
or
jno
or
sub
je
mov
in
int3
cld
push
and
hlt
dec
fs
fwait
stos
into
and
xchg
int
shlb
inc
push
into
icebp
push
rclb
aam
inc
sbb
push
in
pushf
dec
lcall
fldln2
fnstcw
sbb
pop
iret
outsb
lods
test
mov
lea
cli
out
mov
insl
push
dec
nop
xchg
adc
or
jmp
mov
lcall
daa
push
fbld
jecxz
in
adc
inc
cmp
jp
fdivl
push
fwait
mov
cmp
jmp
das
stos
adc
fadds
jmp
cmp
jo
leave
xchg
imull
jg
jae
mov
mov
test
jl
loope
adc
xchg
xor
mov
fsubl
das
out
stos
mov
inc
xchg
dec
dec
nop
cmpsb
inc
mov
enter
mov
mov
xchg
testl
fsts
stc
inc
in
outsl
les
dec
xchg
and
mov
addr16
ret
pop
insl
pusha
sub
test
clc
inc
out
or
ds
test
mov
insb
jnp
or
rcrl
test
cli
adc
push
cli
jb
push
sbb
sahf
mov
mov
and
idivl
pop
jle
sub
arpl
and
iret
lcall
lods
imul
mov
shrb
push
push
cmpsl
data16
sub
inc
cltd
or
lret
sub
lcall
and
or
add
lea
call
push
movsb
sahf
mov
pop
mov
fldl
dec
mov
add
jl
xor
or
push
movb
out
fwait
pop
add
mov
int3
out
adc
movsb
lods
clc
cmp
and
cmp
sub
aad
pop
stc
cs
fisubrl
fimuls
adc
xchg
dec
mov
out
arpl
mov
arpl
leave
push
pop
add
pop
fidivrl
xchg
xor
das
mov
push
fldenv
push
jb
fildll
pop
add
or
in
push
mov
dec
add
pop
rcll
pop
divl
adc
mov
movsl
shrl
add
std
dec
dec
fmull
cld
lret
es
aaa
xchg
mov
bound
insb
mov
test
sbb
hlt
lds
pop
mov
adc
push
mov
nop
mov
fcmovu
shlb
xchg
iret
mov
cmp
daa
popf
push
cmp
and
out
mov
mov
xor
mov
add
cmp
xlat
lea
dec
dec
popa
mov
ds
and
jno
test
shlw
cmpsb
les
mov
rep
mov
push
push
push
fdivp
sub
pusha
lret
mov
lods
and
add
into
int3
sbb
fdivr
xor
lock
dec
inc
inc
lahf
dec
sbb
lds
add
int3
fs
xchg
fsubl
jb
jecxz
mov
movsl
repz
jge
push
xor
sti
and
in
popa
adc
movsb
aas
out
or
pop
jnp
je
mov
std
call
mov
dec
int
into
fldcw
movsb
mov
aaa
mov
adc
and
inc
popf
cs
sub
mov
xor
inc
xchg
add
in
mov
mov
pop
dec
jae
sub
mov
push
push
cmp
or
cwtl
in
push
movsb
repz
imul
mov
cmpsl
test
ja
enter
sub
enter
mov
int
outsl
test
jecxz
or
or
inc
mov
dec
mov
mov
inc
sub
and
jle
ret
sbb
pushf
inc
xchg
sub
xchg
rcrb
aaa
pop
pop
lahf
daa
sub
data16
fwait
xchg
mov
xor
cli
cmp
push
pop
out
cmp
cld
push
push
and
fwait
xchg
mov
jge
es
sbb
and
jmp
xlat
add
sub
mov
sbb
arpl
jp
pop
push
inc
pop
xchg
inc
stc
add
fstpt
dec
push
loope
rorb
inc
mov
movsl
or
mov
mov
lods
push
std
loopne
insl
cmp
in
movsl
cli
xchg
add
cwtl
jae
ret
out
movb
mov
mov
push
jae
cld
mov
negl
mov
addb
fs
adc
adc
outsl
inc
out
fmuls
xchg
shrb
lcall
add
cmpsl
std
mov
mov
dec
sub
decb
xor
stos
lods
add
fsqrt
or
xchg
add
add
call
clc
push
repz
jl
fs
int
push
fcomp
or
nop
xor
sbb
pop
fildll
cmp
orb
or
arpl
into
jl
into
sbb
test
loop
pop
cmpsl
mov
mov
rol
mov
jns
or
dec
push
and
push
scas
jae
mull
stos
cmp
pop
sahf
out
fisubrs
jnp
sub
ficoms
stos
push
je
popf
enter
test
cmpsl
cmp
add
lock
pop
and
sub
test
adc
mov
pmulhw
sbb
or
ljmp
pop
inc
cmp
std
je
lea
pop
pop
cmp
shl
ret
cmc
push
movsl
fs
sub
aad
ret
mov
xchg
je
inc
dec
push
push
dec
lods
sub
xorb
bound
fiaddl
test
dec
out
bound
xchg
scas
leave
jmp
mov
jl
and
jmp
mov
jb
pop
inc
icebp
or
bound
jne
call
push
mov
pop
stc
mov
cmp
les
inc
icebp
scas
push
lret
sbb
inc
fistps
insb
sti
scas
mov
sbb
mov
push
jg
cmc
mov
je
mov
leave
mov
les
adc
push
push
push
sub
sub
sbb
or
in
call
std
sbb
int3
mov
ret
bound
jno
jbe
inc
xor
ret
aaa
xor
shlb
and
mov
inc
xor
cmp
mov
arpl
adc
push
push
out
mov
xlat
clc
pop
icebp
jae
pop
out
insl
sbb
movsb
std
std
or
cmp
cmp
mov
adc
xchg
mov
mov
cmp
movsl
and
into
cwtl
and
insb
mov
mov
loop
pushf
lock
mov
test
je
push
or
das
cli
xchg
sub
sar
out
call
sahf
cltd
push
popa
mov
mov
mov
cltd
mov
mov
movl
inc
pop
sbb
divl
push
mov
inc
mov
cmp
xchg
push
jge
cmpsb
mov
jp
jge
mov
imul
dec
dec
cwtl
mov
js
sub
int
mov
mov
inc
cltd
and
inc
jns
xlat
hlt
inc
push
xchg
inc
repnz
xchg
cld
loop
iret
dec
jnp
xor
mov
pop
xor
orb
mov
subb
push
xor
shl
push
test
sarl
xchg
out
shr
sbb
push
fs
fisubrs
ljmp
addl
icebp
dec
fmull
mov
jge
aas
enter
aaa
syscall
imul
dec
fs
cmpsl
lahf
xor
pop
lea
pop
push
stc
mov
hlt
mov
mov
inc
loope
loope
push
jmp
xlat
mov
ds
pop
mov
sub
scas
insl
out
sub
int3
sub
test
emms
sbb
aam
jle
aaa
shlb
out
shlb
cld
xchg
aaa
bound
std
out
or
push
sbb
das
or
shrb
cmp
jno
mov
adc
loopne
hlt
cmp
sub
out
inc
ret
scas
repnz
outsl
lea
addr16
lods
jb
xchg
cmp
pusha
movsl
fdiv
lahf
cmp
dec
mov
sbb
cmp
lcall
adc
jnp
into
adc
or
cmc
push
pop
mov
pop
mov
mov
and
stos
pop
cld
imul
jg
jl
fstp
stc
mov
jmp
cmp
cmp
bound
or
jmp
sahf
out
jno
ret
xacquire
or
daa
and
das
sbb
adcb
adc
sub
rcrb
in
test
xor
stc
cwtl
inc
lods
test
adc
test
outsb
jo
ss
cmp
mov
ds
test
aad
pushf
pop
imul
incl
outsl
or
sub
rolb
lret
imul
aad
sub
shlb
clc
jnp
mov
add
scas
or
xor
fistpll
xchg
pop
mov
jne
pop
filds
xchg
jbe
push
push
int3
cmp
loope
lods
push
stc
rcrl
dec
fsubs
xchg
cmpb
enter
fcmovb
mov
pusha
jg
push
mov
mov
cli
loopne
mov
push
push
cmp
mov
xchg
adc
push
into
in
mov
cmp
cmp
jnp
and
sbb
xchg
popa
lock
idivb
dec
es
pop
xor
mov
idivl
jo
ljmp
dec
push
jl
pusha
enter
idivl
stos
mov
popa
arpl
inc
stos
fildll
push
repz
xor
mov
decb
out
xlat
adc
pop
test
test
and
mov
and
insl
add
and
rol
jle
cmpb
hlt
fistpl
push
sbb
push
adc
mov
dec
xlat
aad
sub
inc
inc
enter
xor
pop
mov
lcall
je
mov
loope
adcb
add
add
mov
repnz
negb
and
jecxz
push
adc
cltd
nop
fst
add
adc
adc
call
mov
or
sub
ljmp
sar
pop
inc
sbb
cmp
sbb
pop
in
push
mov
les
cmp
rorl
and
mov
mov
int
insl
pop
stos
xchg
mov
movsl
pop
movsl
pop
xchg
adc
cmp
adc
mov
ds
pop
jae
out
push
inc
out
incl
jae
mov
cli
jo
mov
ds
push
pop
mov
add
push
add
iret
inc
xlat
test
add
mov
jg
mov
jp
inc
xchg
or
das
daa
cmp
jmp
ret
xchg
faddl
int3
cmpsb
dec
mov
lds
outsb
ret
jne
push
mov
cld
outsl
pop
pop
addr16
int3
adcb
mov
fwait
movsl
jne
cmpsl
sbb
and
sarl
stc
jne
inc
jno
pop
test
rorb
cwtl
ljmp
mov
scas
and
add
jae
add
pop
push
mov
movsb
pop
in
inc
jne
decb
mov
mov
sti
mov
jp
test
xor
pop
or
xchg
cmpsl
push
jo
repz
xor
sbb
jns
rcrl
popf
popaw
in
or
idivb
cmp
xchg
ja
add
out
pusha
shll
mov
xchg
mov
ljmp
mov
lock
in
sbb
mov
mov
sbb
sub
cmc
fs
mov
call
scas
ds
pop
ffreep
mov
dec
std
outsb
jge
mov
rep
fisubl
repz
sbb
nop
jmp
in
mov
xchg
test
inc
cmpsb
mov
pop
ret
or
out
cmp
sbb
xchg
cld
imul
aam
js
adc
adc
ss
mov
adc
pop
adc
popf
sbb
pop
or
xchg
xchg
je
ret
daa
std
xchg
cltd
repz
jg
mov
adc
jl
insl
dec
mov
mov
jle
sbb
xor
loopne
cmp
loopne
sub
idivl
rorl
repz
push
inc
add
adc
mov
iret
or
lods
cmp
push
test
cwtl
cltd
push
cmp
mov
out
and
xor
xor
xchg
es
outsl
ljmp
testl
or
neg
mov
inc
mov
bnd
cwtl
pop
inc
xor
add
jno
rolb
repz
lret
shlb
popa
std
pop
mov
int
dec
lods
mov
push
sbb
int3
pop
pop
inc
sbb
sti
mov
mov
jnp
xor
xchg
call
dec
mov
movl
loop
inc
xor
insl
pop
jle
mov
pop
imul
push
sbb
jne
outsl
mov
xor
cmp
icebp
mov
test
mov
xor
dec
jo
cmpb
pop
fcoms
ja
mov
dec
loop
dec
inc
repz
inc
ret
lret
insl
ret
idiv
fldenv
mov
add
fwait
jns
std
les
add
call
nop
push
xor
pop
and
inc
imul
dec
jne
daa
pop
scas
mov
mov
dec
push
dec
mov
cmp
lcall
cwtl
hlt
or
fiadds
cmc
xchg
and
jg
orb
mov
xchg
fcoms
mov
push
in
sahf
rcrl
aas
inc
jne
or
mov
fidivrs
jg
xor
push
jb
shrb
test
jmp
lock
pop
cmp
scas
xchg
xchg
fiaddl
int3
lea
popa
adc
loopne
jl
call
sub
add
and
hlt
stc
mov
scas
pop
inc
jbe
cmp
pop
inc
jmp
ja
xchg
and
or
fisttpl
xor
je
xor
andl
iret
pushw
mov
mov
or
mov
imull
adc
jbe
mull
cmp
cli
scas
ret
ljmp
fwait
in
cmp
arpl
js
addl
mov
mov
daa
jp
in
jle
in
pop
jecxz
mov
inc
ficoms
mov
and
les
lahf
arpl
sbb
js
cmp
sub
mov
subb
pusha
pop
jp
movsl
cmp
stos
or
lock
mov
dec
std
jo
xchg
lock
inc
nop
mov
cltd
int3
ret
ror
jo
cmp
rcl
outsl
popa
jecxz
xchg
inc
notl
neg
sub
jo,pn
and
mov
jecxz
mov
cwtl
push
jl
xor
pop
fwait
cmp
xchg
and
inc
mov
mov
call
movsl
and
lea
xchg
mov
stos
sub
mov
xchg
mov
adc
sub
aam
fst
les
cmp
fwait
inc
outsl
aad
imulb
aad
jnp
shr
lcall
imul
pop
jae
sub
stc
sub
dec
dec
pushf
mov
mov
rcl
rcl
xor
jl
movsl
mov
pop
fnstsw
inc
cmp
inc
insb
xchg
cmpsl
cltd
gs
push
xchg
mov
ja
iret
out
inc
push
iret
popf
xchg
in
nop
add
dec
fucomp
mov
hlt
lret
adc
jecxz
push
or
loope
in
mov
xchg
scas
dec
inc
jo
lods
dec
pop
dec
aas
pop
sarl
int3
in
popa
mov
jnp
or
add
test
dec
push
test
or
aaa
push
sahf
xor
adc
mov
mov
loope
jno
sub
out
popa
arpl
data16
in
data16
cltd
stos
pushf
movsb
pop
lods
mov
mov
popf
mov
push
movsb
adc
mov
or
stos
dec
push
test
add
cld
das
mov
aas
xchg
push
pop
enter
add
jne
add
aaa
cmpsb
inc
add
loopne
dec
mov
dec
stc
pop
push
insb
stos
cmpl
xor
xchg
inc
cmp
addr16
cmp
aam
or
push
sbb
mov
outsl
mov
push
lods
cmp
inc
cld
int
xchg
xchg
mov
mov
mov
into
push
add
inc
or
mov
mov
mov
mov
call
and
pop
cmc
shlb
sbbl
or
dec
mov
push
cmovne
lret
shrb
mov
inc
dec
mov
test
push
push
jne
pop
pop
shlb
aam
negb
test
fisubrs
jecxz
push
stos
inc
lahf
mov
dec
das
adc
cmp
std
add
test
push
rcr
data16
outsb
push
test
or
in
sub
and
aaa
test
scas
cmp
stos
ljmp
test
push
int3
cmp
mov
shll
aas
jno
popf
into
adc
fidivs
adc
fwait
xor
lds
pop
outsl
jecxz
xchg
push
ljmp
fs
cmc
shll
inc
js
sbb
testl
ljmp
popl
mov
ljmp
mov
inc
or
mov
cmpsl
cmp
or
sbb
lret
mov
sahf
adc
subb
push
int3
test
mov
mov
add
imul
es
mov
je
pop
jns
pop
mov
cmp
roll
and
gs
mov
xor
rorb
push
fadd
mov
arpl
dec
repz
sbb
stc
leave
mov
add
daa
mov
mov
addr16
mov
or
outsl
jno
ss
cmp
stc
scas
inc
add
dec
and
sub
sbb
or
inc
test
hlt
in
pop
mov
xor
ret
bound
cmp
xor
push
jmp
pop
sbb
inc
jge
addb
xor
jmp
data16
insl
andl
scas
xchg
sbb
data16
and
jge
int
pusha
jmp
cmpsl
shrl
insb
push
cmp
mov
or
mov
jne
dec
insl
js
out
int
movsl
sub
mov
bound
gs
push
xor
inc
push
push
fadd
aam
or
fwait
stc
sub
xor
push
inc
pop
loop
idiv
xchg
cmpsl
dec
fmuls
xchg
cld
and
test
sti
jle
out
ds
lcall
lock
out
mov
xchg
xchg
xchg
repz
lods
add
imul
jge
stos
sbb
negb
pop
dec
mov
testb
push
dec
mov
push
hlt
insl
dec
push
mov
inc
ss
mov
ret
lret
push
imulb
xchg
mov
pop
pushl
mov
xor
push
mov
lods
push
mov
adc
xchg
xor
or
push
jl
int3
dec
jl
movsl
adc
xor
pushf
adc
jp
cmp
push
xor
adc
lods
inc
jae
lods
sub
in
xlat
mov
inc
rcll
out
call
lret
test
out
inc
clzero
or
fwait
jecxz
adc
pop
jecxz
enter
xor
add
sahf
push
mov
push
aas
in
push
imul
jg
inc
mov
cmc
push
pop
push
jle
rcr
test
fwait
push
mov
or
int
in
xlat
das
jp
mulb
pop
push
mov
push
sbbl
adc
mov
clc
std
mov
xor
xor
out
mov
out
lea
push
fwait
cmp
testb
movsl
mov
push
lcall
out
outsl
leave
jb
jmp
jle
add
push
adc
adc
mov
dec
dec
fcmovnb
pop
jp
inc
fld
sbb
xchg
jp
stos
pop
or
mov
jnp
nop
cld
test
inc
push
mov
loopne
sti
pop
cmp
sub
rorl
loopne
test
xor
fidivl
ret
insb
js
xchg
aas
lret
insb
outsb
and
leave
mov
push
fisubs
shr
jne
rcl
xchg
xor
pop
nop
ljmp
ljmp
rorb
sbbl
dec
lcall
lret
test
cmc
fidivrs
decb
fnsave
mov
mov
mov
xchg
sbb
sub
and
sbb
ret
inc
dec
or
cld
mov
hlt
call
popf
test
ret
aas
fwait
lods
shll
jo
hlt
inc
inc
test
xlat
inc
cmp
add
out
test
rorl
add
and
sbb
pop
fmull
push
ss
test
add
cs
js
js
xchg
scas
mov
xchg
inc
gs
cmp
push
flds
aad
sarb
push
push
or
add
push
test
fs
inc
or
imul
hlt
neg
lret
mov
jle
ljmp
or
jmp
dec
inc
loope
adc
sub
lods
popa
cld
or
xor
mov
test
xchg
call
mov
pop
mov
stc
notb
push
sbb
mov
add
je
sbbb
andb
jne
icebp
jmp
daa
add
lret
pop
dec
popf
pop
jno
shr
lea
jb
call
mov
xchg
sarb
push
dec
mov
stc
popa
and
js
xor
mov
fcoms
mov
movsl
ljmp
mov
dec
xchg
repnz
adc
je
jmp
test
mov
xchg
in
pusha
sub
test
out
fdivp
jl
rol
cmp
shlb
mov
ss
push
jecxz
pop
movsb
cmp
in
sbb
sbb
lret
inc
stos
mov
cmpsl
cli
cmpsb
dec
add
push
leave
std
sahf
out
dec
or
mov
cwtl
in
ficomps
popa
mov
sub
sarb
pop
xor
lret
in
mov
mov
push
mov
std
xor
mov
int
jo
andl
icebp
pop
repnz
sub
mov
adc
les
repz
pop
ret
out
dec
fcmovne
xor
mov
scas
add
or
pop
enter
xchg
mov
add
or
push
ret
cld
call
and
push
into
xchg
decl
scas
xchg
bound
pop
ss
mov
jo
aaa
jmp
aaa
pop
add
cmp
aaa
scas
add
fisubs
cmc
outsl
pop
test
sub
push
insl
out
leave
sub
out
divb
adc
or
sub
fdiv
jmp
sbb
pop
outsb
lcall
or
pop
mov
jae
and
lods
test
xchg
push
mov
pusha
test
xchg
push
jg
xacquire
repnz
fdiv
jo
push
das
inc
inc
aaa
shl
inc
repnz
or
or
lcall
add
std
or
data16
js
fdivrs
jmp
xor
inc
or
hlt
rorb
jp
push
adc
jl
pushf
pop
scas
dec
out
int3
jg
hlt
int3
sbb
xlat
inc
roll
dec
decb
adc
aas
cmp
je
cltd
xor
lret
cmpsb
cmp
subl
push
push
repnz
adc
mov
leave
aas
shll
roll
inc
and
dec
fidivl
dec
imul
iret
lock
int3
sarb
fbld
sti
adc
rcll
adc
loope
popa
push
fldl2e
dec
jnp
sub
mov
jg
decb
js
lcall
mov
push
repz
clc
cli
jmp
cmpsb
ret
add
ror
mov
frstor
xchg
fwait
nop
jne
js
enter
fistpl
inc
and
adc
cmp
lods
sbb
sub
in
mov
in
xor
or
and
imul
adc
lea
mov
cmpsl
dec
rolb
daa
cli
jnp
cmpsb
scas
mov
cmp
push
std
mov
insb
ja
mov
inc
not
insb
adc
jmp
loop
push
inc
clc
movsl
fdivl
je
pop
mov
out
lods
push
aaa
pop
inc
dec
imul
movsl
movsb
and
jg
push
repz
les
mov
clc
and
or
lea
je
xor
hlt
aaa
fwait
aad
cmp
pop
jb
or
or
data16
jmp
xlat
cmpsl
aad
mov
pop
subb
inc
push
fdivr
mov
popa
cmpsb
mov
xchg
lret
add
mov
out
adc
sub
jno
mov
mov
loope
inc
sbbb
imul
or
cmp
inc
ficomps
out
insl
or
push
sbb
dec
mov
imull
pop
add
bound
fwait
loope
jae
jge
pop
dec
lret
into
jnp
jnp
ljmp
es
adc
ret
mov
mov
pop
jle
in
xchg
fwait
push
jno
mov
pop
or
dec
lret
xchg
addb
cmpsb
insb
aaa
stos
int
mov
aad
mov
ret
mov
and
pop
ss
test
add
sub
adc
jg
xchg
mov
push
cmp
enter
cmp
scas
into
leave
ret
xchg
loope
cmp
pop
enter
sub
ja
and
fcom
icebp
mov
icebp
std
adc
lcall
dec
cmp
das
jns
sub
ret
icebp
ds
xor
js
inc
sub
mov
sbb
and
sub
js
insl
or
and
addb
ret
add
jg
push
aas
xlat
mov
insl
clc
dec
aaa
loope
xor
sub
jl
mov
jae
mov
push
in
xor
cmp
inc
test
xchg
pop
mov
enter
loopne
pop
push
pop
orb
hlt
test
xor
sbb
cmp
sbb
adc
pop
jbe
jge
jo
jno
in
fists
subb
cmp
mov
ficoms
mov
or
in
dec
push
xor
out
loop
pop
fimuls
sub
out
push
mov
push
dec
bound
xchg
repnz
xchg
or
push
lods
iret
mov
out
add
push
sbb
out
repnz
pop
mov
jne
in
jg
push
jnp
std
push
or
lds
in
push
idivb
adc
pop
cmp
mov
xor
lahf
inc
clc
adc
xchg
cmp
xlat
cmp
inc
jg
pop
and
dec
adc
aad
clc
sub
and
mov
add
cld
sub
aaa
push
sbb
jmp
jb
and
jnp
stos
ss
xchg
mov
call
bound
push
bound
jl
or
inc
test
aad
push
adc
enter
mov
stos
pushf
js
sbb
cmpsl
mov
jmp
mov
jp
dec
adc
pop
inc
std
pop
daa
inc
adc
mov
jns
sahf
mov
push
test
sahf
in
pop
dec
mov
pop
or
mov
lods
stos
sti
sbb
ljmp
xlat
lcall
mov
dec
adc
pusha
test
clc
mov
mov
lock
addb
rorl
repz
adc
insb
lods
fs
mov
dec
sub
aas
int
pusha
and
pop
pop
sbb
imull
jg
mov
pop
out
out
mov
push
pop
test
adc
jp
mov
and
imul
mov
dec
das
dec
lods
jbe
pop
out
dec
daa
xchg
push
xor
out
fwait
sub
iret
pop
dec
mov
xchg
xor
cltd
and
jl
clc
pop
lea
jb
xchg
cmp
loop
xchg
jae
cmp
and
jno
int
push
adc
sbb
aam
bound
mov
jmp
in
jo
mov
inc
sub
das
inc
rolb
aaa
mov
push
nop
hlt
test
inc
jmp
repz
lods
fs
jp
mov
fidivs
ds
cmp
daa
ror
sub
das
jg
inc
push
mov
lahf
mov
add
cmc
adc
ret
mov
mov
dec
sbb
mov
icebp
pop
mov
jbe
les
aam
aam
sub
pop
mov
lods
mov
jbe
jle
mov
cmp
iret
int3
push
incb
jnp
ds
es
jbe
inc
dec
mov
lock
test
jecxz
lock
rorl
out
cld
xor
sub
lcall
int3
jp
dec
sbb
cmp
test
and
cmpsb
add
pusha
inc
cmp
push
push
push
es
adc
sub
mov
ja
inc
pop
hlt
mov
jle
pop
add
and
mov
mov
xor
out
sub
das
lahf
pop
dec
leave
movsl
ret
aad
add
inc
stos
xchg
popf
xchg
shl
inc
rcrl
pop
imul
push
jecxz
jno
shl
fcmove
jno
aam
jg
jmp
jo
imul
xor
pop
sbb
lret
cmpsb
push
in
ljmp
loop
aad
mov
nop
push
push
sahf
fmuls
add
pop
cmpxchg
xlat
sbb
sti
dec
xor
sbb
out
xchg
sbb
lods
and
add
cmp
fs
outsl
lret
mov
or
pop
arpl
dec
sarl
xchg
cmp
pop
and
push
xor
mov
imul
js
or
inc
dec
add
enter
clc
clc
cwtl
aas
or
fwait
mov
in
mov
sbb
inc
fdivrp
cmc
xchg
cltd
popa
or
add
shrl
xlat
les
lret
cwtl
out
dec
push
and
pop
sbb
lcall
sub
pop
leave
push
push
cmp
lea
imul
pop
pop
pop
fldenv
adcb
lea
push
dec
push
pop
mov
mov
sub
or
iret
sub
sub
ret
xchg
rolb
and
repnz
aaa
daa
add
cs
ds
stos
xchg
add
jle
pushf
das
or
aam
fdiv
push
xor
popa
insl
dec
into
mov
les
dec
jle
mov
add
cmpsl
mov
jno
decb
fsubrs
out
jae
add
xchg
cmp
outsb
jle
out
mov
fdivrl
into
ds
mov
or
mov
mov
outsb
pushf
popf
ret
pop
sti
out
dec
leavew
mov
enter
mov
push
lret
nop
fucomip
sub
mov
movsl
adc
adc
movsl
icebp
test
std
dec
pop
ja
sbb
inc
stc
aaa
mov
fldl
mov
inc
mov
cmpsl
or
daa
cmp
repz
push
sbb
xor
sub
cmp
pusha
cmpsb
clc
loopne
jg
aaa
push
rcr
add
test
mov
push
test
mov
pop
data16
jne
and
sub
push
imul
inc
inc
pop
add
inc
and
inc
cmc
jle
dec
stc
inc
mov
popf
negb
inc
sbb
mov
mov
lods
xchg
scas
pop
or
nop
dec
sarl
add
insb
aas
data16
addl
into
and
les
das
mov
dec
or
push
mov
mov
fistps
ret
incl
fst
adc
cmpsb
fnstsw
notb
push
daa
xchg
jge
in
out
clc
int3
divl
jge
test
nop
add
push
xor
push
cmp
jg
fadds
fadd
sub
cli
in
movsb
xchg
fstps
adc
movsl
add
sti
popa
mov
mov
mov
aam
and
xchg
jbe
xchg
sub
push
jne
hlt
stos
lea
mov
cmpsb
xor
call
sahf
lahf
scas
fnstenv
out
into
int
das
not
add
bound
xchg
test
fcmovbe
fistpl
notl
mov
jnp
or
pop
and
cmp
ds
repz
lds
xor
faddp
mov
inc
dec
push
sub
out
xor
lcall
push
data16
fwait
jbe
mov
xor
mov
cmp
icebp
adc
imul
das
es
hlt
mov
adc
rorb
adc
xchg
and
lret
test
mov
mov
sbb
scas
mov
sbb
insl
adc
push
cmp
ret
xchg
lock
ljmp
dec
lds
xchg
mov
call
aaa
scas
fwait
jmp
cmpsl
push
jns
adc
pop
pop
rcll
out
ds
mov
cmpsb
outsb
pop
cmpps
inc
iret
sub
pushf
in
pop
jne
out
jo
sub
adc
jo
push
adc
mov
mov
ds
mov
es
push
in
cmp
fwait
pop
cltd
les
movb
cwtl
movsb
push
lock
aad
pop
int
shrb
lahf
jmp
shll
mov
addr16
lret
jnp
stos
repnz
push
sbb
xchg
push
sub
mov
or
mov
fwait
sti
nop
test
andb
add
sarb
fidivl
add
inc
mov
jge
adc
and
mov
adc
sbb
sahf
or
cmp
mov
out
fs
mov
push
fcoml
jmp
movsl
ud1
mov
shll
cmpsb
and
inc
xchg
add
das
pusha
mov
es
xchg
loop
cmp
push
loop
add
mov
inc
insb
repz
fadd
jbe
jo
mov
xchg
sub
lods
loopne
jg
jae
and
lret
cwtl
mov
xor
out
lret
mov
inc
lret
mov
cmp
dec
dec
pop
cmp
je
inc
mov
arpl
push
call
xchg
cmp
cmp
stc
negl
xor
mov
pushf
js
mov
scas
aas
cmp
xor
test
pop
lret
rorb
mov
xor
dec
cwtl
cmpl
dec
hlt
out
cli
rorl
sbb
sahf
jnp
mov
and
inc
push
pop
loopne
lods
push
popa
js
inc
outsb
mov
fbld
adc
in
outsl
pusha
ret
loop
xor
cli
ljmp
vpmulhw
jae
out
jnp
add
dec
popa
addb
pop
aam
lahf
out
pop
shlb
adc
mov
mov
and
cmp
in
stc
push
test
mov
mov
push
mov
sbb
cmp
mov
push
mov
daa
loope
stc
cwtl
mov
mov
sbb
push
std
jle
pushf
repnz
xchg
pushf
push
mov
mov
sbbb
lods
repz
inc
or
push
mov
in
mov
dec
mov
dec
jo
insb
sub
cmpl
sbb
ja
fwait
and
cvtpi2ps
inc
sub
jecxz
popa
xchg
cmp
into
mov
push
jecxz
sbbb
pop
sub
fidivrl
fisttps
mov
stos
fsubrp
ja
cwtl
xor
cmp
divl
add
mov
mov
test
aaa
gs
xchg
mov
inc
shrb
push
mov
stos
pop
sbb
hlt
je
jo
mov
nop
gs
fidivrs
rclb
out
fcomps
pop
lahf
mov
out
pushf
sub
push
sub
out
repnz
les
in
jns
jle
fdivs
mov
cmpb
sti
inc
sbb
mov
pop
pop
xorb
incb
bound
repnz
xchg
pop
xchg
jle
cmp
or
and
hlt
dec
mov
push
fbstp
pop
aas
lock
out
adc
mov
sbb
adc
and
cmp
or
sub
pop
addl
cld
cmp
adc
call
clc
fisttpll
aas
xchg
mov
aaa
jo
sub
dec
fnstsw
clc
sbb
cmpsb
mov
aam
lret
stos
sti
aam
ret
pusha
ja
cmpsl
hlt
dec
lods
shrb
shrl
mov
enter
sbb
repz
mov
scas
andl
les
loope
pop
or
add
pusha
int
push
mov
xchg
cmc
rorb
adc
fcoml
shll
iret
rcrl
cmp
pushf
xchg
sbb
add
sti
sbb
cmp
mov
fs
insl
sub
cltd
or
xor
test
or
sub
inc
aam
push
adc
mov
mov
push
loop
jbe
xor
sbbl
loope
mov
jecxz
adc
mov
push
sub
les
pop
xchg
je
iret
sar
xchg
fidivrs
loop
mov
dec
inc
xorb
xchg
mov
in
sbb
xor
or
mov
xchg
and
push
dec
pop
push
fbstp
jb
fwait
or
addr16
xchg
inc
push
xor
not
sti
mov
or
stos
test
push
cld
or
adc
push
pop
xchg
inc
in
addr16
sub
aam
jle
cmc
and
filds
jo
mov
punpcklwd
cmp
pushf
rolb
and
mov
jbe
popa
or
mov
repnz
push
jl
mov
pop
adc
mov
mov
in
jle
xchg
enter
fs
inc
mov
shll
pop
sarb
shlb
xchg
add
mov
sub
push
jle
sbb
jle
sub
push
repz
xor
push
outsb
fsub
rolb
and
ds
frndint
icebp
decl
sahf
inc
add
nop
icebp
call
mov
mov
pop
dec
or
push
mov
cmc
cmp
or
pop
sbb
cltd
jl
idiv
outsb
dec
mov
add
xor
sbb
psubw
sahf
into
cwtl
push
stos
xchg
popf
dec
adc
shrl
pop
jae
xchg
cmp
test
bound
jecxz
sahf
add
mov
dec
add
sbb
call
inc
push
add
dec
imul
ret
mov
clc
inc
inc
out
scas
into
xor
inc
jle
mov
and
les
fldl
cld
sbb
xchg
repnz
inc
add
movsb
in
lods
dec
fsubrl
inc
pop
fsubs
pop
mov
repz
pop
dec
aad
mov
push
or
or
xor
fcomps
sub
xor
xor
jbe
in
dec
popa
mov
sti
add
cmp
jl
in
cmp
mov
imul
rclb
xor
dec
stos
sti
fisttpll
cmpsl
sub
sbbl
shll
test
std
imul
or
in
popf
push
sbb
push
ja
add
ljmp
testb
aam
in
decb
sbb
mov
xor
jle
shlb
dec
lock
das
int
fdiv
int3
outsl
cmpsb
sbb
lret
jae
arpl
pop
fwait
xchg
push
adc
shrb
pop
push
dec
test
cmp
push
and
pushf
jne
jle
lds
sub
mov
fsubrs
mov
and
stc
sbb
xchg
jp
popf
rcll
add
fstpt
push
add
ja
aad
ret
ljmp
sub
mov
outsl
repnz
insl
sub
jmp
insl
push
out
lea
jae
add
xchg
sub
push
xor
lds
sub
jge
mov
les
incl
sub
rcr
and
adc
repnz
ds
movsb
cmp
mov
jg
add
add
scas
out
push
xchg
sbb
sub
dec
cmp
and
inc
fwait
jp
fsubrl
repnz
pop
and
sub
sbb
cmpsb
cmp
cltd
jo
ss
xor
rcr
es
loopne
push
or
out
cwtl
lds
adc
jecxz
and
xchg
loopne
mov
xchg
and
cltd
imul
mov
push
push
dec
lds
adc
and
jno
dec
inc
test
mov
in
pop
cmovae
inc
mov
mov
lods
pop
incl
aas
fs
cltd
push
fcoml
cmpsl
and
mov
aaa
mov
lret
xchg
pop
outsb
in
jnp
les
imul
out
jo
adc
mov
test
adc
ljmp
roll
shrl
xchg
mov
sbb
rclb
icebp
mov
mov
xor
dec
sbb
push
push
jecxz
in
jecxz
aas
sti
test
gs
xor
dec
sbb
pusha
jae
mov
jns
xchg
cli
jmp
adc
mov
inc
rcll
insb
sub
lahf
ljmp
aaa
ja
mov
sbb
cmpsb
mov
push
pop
leave
andb
insb
jge
out
pmaxub
aam
nop
int
or
xchg
mov
sbb
into
pshufw
dec
out
out
push
or
test
push
inc
fadd
hlt
enter
mov
aam
dec
jge
std
fisttpl
mov
mov
dec
or
popf
out
lods
cmp
push
xchg
inc
push
test
in
into
inc
test
sub
xor
shlb
xor
mov
inc
nop
movsl
loopne
aad
and
fisubrl
into
dec
mulb
test
rcrb
iret
jp
push
xchg
insb
push
imul
jmp
in
leave
add
pushf
dec
cwtl
xor
inc
jge
mov
add
incl
push
xor
add
adc
aad
inc
pop
js
aam
hlt
sub
xchg
xchg
hlt
insb
andl
inc
ss
lods
dec
int3
mov
jmp
dec
jno
nop
cmp
mov
lret
dec
andl
mov
decl
movsb
adc
int3
add
rol
xor
lcall
mov
lret
dec
lods
fs
pop
adc
js
lock
sahf
adc
jbe
scas
xor
dec
sub
adc
fidivs
mov
pop
jge
cli
aaa
mov
clc
jge
mov
mov
scas
push
and
cmpsl
add
mov
sbb
sbb
mov
jle
sahf
sahf
and
movsb
leave
clc
je
jle
in
mov
gs
stc
rcrl
mov
in
nop
aas
hlt
inc
pop
out
inc
push
out
testl
sti
pop
xor
jb
add
fdiv
mov
lds
push
and
jnp
popf
aam
and
xchg
mov
sub
fsubl
lahf
mov
dec
aam
xlat
push
pop
fidivrs
mov
subb
push
mov
sti
aad
ljmp
cmp
xor
jae
push
call
ret
insb
mov
xchg
mov
dec
test
mov
cmp
data16
sub
aam
popa
sahf
fwait
out
sti
inc
inc
jmp
loope
repnz
movsb
stc
mov
mov
fnstsw
push
pop
rcrb
jle
pop
xchg
test
pop
aas
stos
in
xchg
mov
inc
loop
mov
outsl
dec
xor
mov
adc
push
lcall
sbb
sub
outsl
outsl
jmp
cmp
mov
std
mov
push
mov
xchg
xor
pop
or
fs
in
xchg
xchg
cmc
flds
out
loopne
sub
repz
hlt
mov
pop
xchg
aaa
pushf
mov
call
adc
jns
fisubrl
mov
out
dec
dec
dec
cmp
push
sub
imul
ficomps
fimuls
mov
or
fwait
lahf
stos
cs
xor
jns
adc
outsl
scas
or
lret
ljmp
xchg
popa
jae
xor
xor
sbb
repnz
pop
ret
xor
out
test
sbb
fcoms
or
jl
mov
add
cmp
dec
push
sub
enter
decl
je
imull
mov
adc
add
fidivrs
arpl
sub
imul
neg
ret
loop
iret
popa
iret
push
adc
sub
dec
cltd
fnstsw
cs
push
cmp
mov
repnz
repnz
imul
or
jl
mov
xchg
mov
lds
cmpb
pusha
push
jge
test
inc
inc
xchg
bound
mov
xchg
pushf
push
and
pop
dec
jns
or
scas
inc
and
sahf
sahf
or
rcrl
lcall
fst
enter
xor
fisttps
test
push
aas
sub
jo
lods
jo
aas
sarl
sub
xchg
shl
sub
lods
in
adc
jp
push
inc
insl
cmp
push
in
jmp
fildll
or
mov
add
add
je
dec
add
mov
pop
ret
sub
inc
jmp
mov
int
js
outsb
cltd
test
push
mov
ret
mov
aas
inc
daa
jns
outsb
stos
idiv
push
icebp
xchg
popa
outsb
jae
push
shl
cld
push
jle
and
sbb
jge
pop
gs
push
push
fstl
flds
push
addr16
in
or
aam
jmp
inc
ret
or
es
sub
xor
mov
int3
cmp
xchg
cwtl
xchg
xchg
cmp
cmp
mov
lock
inc
sbb
div
addr16
mov
cwtl
push
call
or
adc
jae
jo
xor
xor
mov
adc
lock
fistps
scas
mov
pop
mov
cmp
push
inc
or
lcall
push
mov
negl
insl
push
cmpsl
jg
xchg
dec
insl
pop
jo
dec
les
xor
push
cld
sar
addl
mov
cmpb
sub
xchg
lods
push
in
add
dec
pop
int3
mov
inc
sbb
lods
cmp
xor
xor
mov
mov
nop
int
mov
pop
mov
jmp
push
sub
sub
ror
mov
bound
cmp
mov
jecxz
cmp
enter
mov
cmp
pop
sub
hlt
mov
or
lock
insl
arpl
mov
push
or
popf
sbb
push
les
cmpsl
aaa
adcb
mov
mov
rclb
and
and
rcrb
pushf
xor
addr16
divl
popa
stc
dec
xlat
rorl
stos
out
rclb
mov
lods
pushf
insb
inc
or
stos
cs
cwtl
loopne
jle
fstl
in
jp
cmc
cmp
push
popa
in
scas
shll
clc
push
and
ret
lock
adc
jmp
fxch
push
xor
lods
xor
mov
cmp
or
add
shl
jns
repz
dec
and
pop
sbbb
pop
inc
movsb
repnz
mov
mov
in
divb
mov
stc
repnz
xchg
and
adc
adc
movsl
sbb
adc
loop
and
popl
jp
mov
roll
sahf
imul
jb
xor
and
and
dec
pop
les
push
les
sbbb
aad
pop
xchg
add
jge
gs
fsubl
xchg
das
add
adc
mov
cmp
jg
negb
xor
in
lods
cmpsb
mov
sbb
fdivrs
jae
push
sbb
xor
es
mov
mov
dec
shll
movsb
inc
pop
xlat
les
ds
cmp
cltd
pop
addb
adc
push
cmp
mov
mov
push
test
cmp
movsl
jne
pop
sar
pusha
lcall
int
fists
jb
mov
xchg
test
std
jo
push
pop
mov
and
dec
frstor
jecxz,pt
stc
pop
fcoml
or
xlat
into
mov
fs
jl
movsl
jle
push
jle
arpl
test
sar
fs
mov
or
bnd
fnstenv
lds
mov
into
in
pop
dec
int3
dec
pushf
mov
ja
insb
sub
sahf
sbb
int
icebp
sbb
and
xor
push
push
mov
jno
repnz
mov
test
push
int3
sbb
inc
or
mov
and
push
dec
shll
or
loop
sub
hlt
mov
pop
pop
flds
jno
jnp
jbe
shrl
divb
jne
push
dec
or
sbb
in
adc
cmp
mov
cs
loope
lea
ja
sub
xor
cmc
mov
push
jmp
cmpsl
sti
jb
mov
fs
jns
xchg
cmpb
xor
xchg
bound
mov
int
jecxz
cmpsb
iret
lret
cmpsb
push
push
push
loopne
test
sub
xor
sub
lret
sub
adcl
pushf
cmpsb
stc
ret
push
stos
test
addr16
sub
push
dec
xorb
arpl
test
push
sub
adc
inc
pop
aaa
push
data16
in
sub
fiaddl
mov
xchg
mov
push
xchg
daa
mov
pop
bound
das
inc
sti
jle
jl
in
dec
push
mov
jmp
pop
popf
xlat
push
sbb
int3
negl
daa
arpl
cvtpi2ps
dec
add
cmp
mov
cmpsl
vmwrite
mov
or
mov
movzbl
mov
in
lods
shll
aaa
cmp
mov
stos
or
lods
xor
insl
outsl
dec
cmp
pushf
loop
fidivs
imul
mov
mov
xor
or
daa
shll
adc
addl
xchg
xchg
rclb
cli
xchg
orb
jns
cmc
jae
dec
sbb
loopne
mov
adc
add
outsl
orb
into
loop
adc
xor
loopne
lods
subl
cli
xor
std
repz
cmp
lods
cmc
out
loop
repnz
cmpsl
lods
and
xchg
aaa
xor
jmp
pop
sub
imul
ret
inc
repnz
jge
sbb
adc
ljmp
in
push
jge
jmp
int3
aam
enter
iret
mov
icebp
sahf
xor
ljmp
dec
std
popf
mov
pop
shrb
sub
mov
cmp
sbb
push
mov
cmp
shl
inc
les
sub
and
adc
or
loopne
push
inc
repz
and
jbe
push
adc
add
js
inc
dec
gs
pusha
pop
mov
inc
testb
mov
enter
hlt
in
mov
xchg
jno
inc
mov
mov
cmp
fsubp
test
mov
movsb
xor
pop
and
ljmp
aaa
in
sbb
dec
aaa
sub
pop
enter
push
and
comiss
movsb
sbb
addb
rolb
jg
leave
or
push
xor
sahf
push
cmp
jp
test
sub
pop
fwait
pop
xchg
adc
popf
mov
daa
jnp
cli
rorl
arpl
jo
jp
movsb
outsb
iret
sti
push
jge
mov
cld
mov
dec
jb
or
mov
and
sub
mov
mov
aad
xor
adc
xor
arpl
push
dec
sbb
nop
pop
dec
xor
xor
mov
pop
repnz
aad
mov
mov
das
mov
push
aaa
lret
cmp
fmulp
sti
mov
stos
arpl
push
fmuls
ret
movsb
push
mov
xlat
insl
test
int3
iret
arpl
int3
add
std
inc
inc
or
xor
out
mov
xchg
sub
fwait
and
lret
shl
es
sbb
add
je
mov
cmpsl
fldenv
pusha
add
jno
arpl
xchg
insb
jno
insb
sub
stos
cltd
hlt
cmp
adc
jmp
and
pushf
cmc
cld
mov
mov
push
sub
adc
or
incb
imul
mov
push
cmp
stos
fcmovbe
repz
lods
push
mov
jnp
hlt
add
lahf
icebp
or
pop
jecxz
xchg
sti
fstpl
pop
push
jns
test
xor
cmp
pop
inc
inc
inc
cmc
nop
dec
inc
dec
or
add
mov
mov
insb
cs
ljmp
push
ljmp
pop
out
leave
lods
xor
or
xchg
xlat
inc
inc
pushf
out
repz
add
les
mov
call
fsubs
dec
adc
xor
push
dec
shlb
cmpsl
add
xlat
pop
ss
add
jbe
sbb
adc
repnz
mov
imul
jnp
or
ffreep
jmp
mov
mov
xlat
mov
loopne
test
and
sub
bnd
mov
js
ret
mov
dec
ss
test
js
fmulp
cmpsb
add
bound
jb
xor
adc
mov
loop
push
lea
xchg
rcrb
icebp
push
cmp
shlb
mov
outsl
mov
add
push
call
in
inc
call
pop
push
or
push
mov
leave
and
jl
lea
mov
jb
sub
sbb
cld
sbb
or
aad
add
aad
adc
mov
dec
test
imul
movsb
adc
jge
ss
add
movsb
fbstp
lahf
addr16
callw
xor
jbe
add
lcall
stos
fwait
divb
sub
pop
xchg
and
mov
xchg
test
xor
inc
js
imul
pushf
mov
jp
push
mov
adc
or
gs
into
in
mov
push
jl
jae
and
test
fwait
jne
addr16
xorb
bound
mov
mov
and
sbb
ljmp
push
out
xlat
ffreep
movsl
or
cmpsl
in
fs
add
and
dec
movsl
stc
xorb
iret
out
outsl
mov
inc
negl
dec
adc
or
or
stc
mov
hlt
int
setle
pop
inc
xchg
or
sub
push
dec
jnp
call
lods
mov
imul
dec
in
ljmp
cmpsl
or
pop
subb
ja
adc
xchg
test
inc
or
in
mov
mov
inc
fisubs
pop
rcll
loope
out
mov
fsts
in
jp
adc
fstp
mov
int
sub
inc
mov
or
inc
stos
outsb
and
pop
iret
loop
mov
adc
pop
aas
push
out
xchg
ret
cmpsl
mov
mov
fwait
or
insb
xor
adc
outsb
and
jecxz
mov
inc
out
mov
std
mov
cltd
cmp
movsl
xor
mov
inc
cld
rolb
mov
dec
testb
mov
inc
fwait
sarb
adc
cmpsb
mov
pop
dec
fldcw
or
fwait
mov
ss
mov
dec
sbb
testl
dec
push
loope
subl
sbb
ja
mov
add
adc
sarb
add
ret
shrb
cmp
push
sub
repnz
lock
sti
mov
jo
cmc
or
mov
mov
and
mov
dec
sub
mov
lahf
push
pop
lods
mov
mov
aaa
mov
sti
ljmp
bound
loope
ror
lahf
mov
jbe
les
das
pop
push
into
incb
and
sub
push
std
sub
cmpsb
xor
paddq
imul
cmp
sub
cmp
mov
out
inc
in
inc
enter
call
xor
and
out
cltd
and
sbb
imul
xorb
mov
adc
aam
dec
adc
jge
repnz
bound
adcb
stos
mov
mull
mov
sbb
mov
inc
cmp
mov
ja
test
pusha
mov
sbb
and
push
in
sbb
sub
test
mov
jmp
arpl
jo
bound
xchg
mov
js
inc
mov
daa
mov
or
int3
push
dec
imul
cmp
stc
xchg
push
popf
mov
mov
clc
add
int3
fwait
outsb
sbb
loop
movsl
cwtl
pop
sahf
ret
lds
rcr
push
xchg
repz
xchg
mov
je
push
add
jecxz
aad
jns
push
jns
je
push
dec
push
rcrb
ret
iret
ret
mov
insl
test
push
xchg
fstpt
ljmp
adc
adcb
mov
imul
push
mov
movsl
and
push
add
mov
aas
fldenv
pop
dec
aaa
adc
stc
push
dec
pop
mov
pop
or
pop
cmp
es
out
push
lock
test
mov
mull
shrl
xorb
pop
sub
jmp
lea
aas
mov
aas
mov
pop
repz
scas
leave
pop
lret
xchg
mov
push
mov
jns
rep
test
mov
sbbl
fidivrl
xchg
insl
lds
push
add
sahf
scas
and
fstpt
ds
add
xchg
fcomip
push
dec
push
dec
add
cmp
sub
ror
jne
mov
icebp
daa
mov
pop
pop
mov
jmp
fisubl
sbb
loope
mov
push
gs
push
add
xor
add
movl
cmpsb
cmp
insb
push
fmull
out
sbb
add
adc
sub
jge
imul
dec
dec
sbb
ret
jnp
jg
jnp
arpl
mov
jge
mov
push
mov
sarl
enter
insb
cwtl
pop
push
push
lods
adc
xor
cmp
mov
xor
ss
cmp
lock
push
jae
jae
xorb
dec
fdivrl
loope
cmp
outsb
jp
sbb
push
popa
gs
jmp
lods
jbe
notb
xor
pop
adc
sarb
mov
outsl
cmp
outsl
stc
fldenv
sub
arpl
inc
push
andb
iret
jb
jle
gs
scas
and
test
cmp
xor
loop
push
and
imul
mov
add
dec
popf
xor
shrb
mov
push
icebp
mov
push
sbb
lods
loope
lods
dec
js
das
dec
xor
in
pushf
in
insb
stos
jle
fwait
mov
addr16
or
scas
out
sbb
mov
cmp
pop
jae
push
into
pusha
arpl
or
stc
xchg
adc
or
sub
xor
icebp
das
jnp
xor
stc
or
cmp
dec
lret
jmp
dec
or
and
and
jns
adc
mov
aam
xchg
das
inc
mov
push
loop
xchg
xchg
push
jns
mov
dec
jns
jne
pop
dec
shll
pop
mov
ficomps
shrl
push
push
int
scas
pop
test
std
xchg
push
and
mov
int3
mov
addr16
movsb
dec
lret
sbb
shlb
mov
out
mov
data16
loop
aam
int
xchg
imul
out
pop
sub
pushw
call
leave
and
push
fsts
imul
imul
mov
daa
xchg
xchg
stos
popa
repz
test
sbb
dec
fdiv
pop
or
ss
shl
add
inc
push
sub
aaa
imul
push
adc
ljmp
jno
and
loope
or
mov
pop
push
sbb
cmp
pushf
rcl
push
add
call
insl
mov
push
cs
repnz
cmp
sbb
adc
scas
repz
push
mov
loope
mov
enter
int
sub
stos
pop
incb
pop
test
aas
mov
lret
pop
sub
and
jmp
andl
and
fsubrs
cmpsl
repnz
insb
push
sub
adc
sbb
ja
test
add
and
arpl
mov
jmp
iret
sbb
jg
cmpsb
sahf
add
inc
pop
and
mov
jnp
xlat
mov
orl
hlt
mov
dec
repz
negb
and
pop
mov
mov
pop
sub
jo
mov
ljmp
je
mov
jae
sbb
sbb
push
int
add
mov
sbb
xchg
fld
repz
dec
imul
out
dec
das
jns
xchg
adc
pushf
add
and
push
cs
push
addl
push
ljmp
int3
hlt
adc
push
cld
sub
fwait
add
mov
inc
lea
mov
enter
je
and
sub
bound
add
xlat
movsb
pop
mov
cmp
inc
mov
enter
pop
sbb
push
pusha
inc
mov
dec
add
ret
push
jnp
es
xor
cltd
and
sbb
add
testb
movsl
adc
adcb
movsl
flds
call
pop
inc
push
jmp
imul
cmpsb
lret
xchg
pop
lcall
xor
mov
sub
out
jne
lahf
pop
pop
sbb
cwtl
subb
rcr
mov
jns
mov
ds
add
pop
les
repnz
fbld
mov
cmp
inc
mov
call
aaa
out
push
js
pusha
lods
mov
mov
call
in
xchg
test
in
xor
mov
push
aam
and
in
das
cmp
je
mov
adc
iret
mov
in
lods
sbb
lcall
pop
out
test
pop
shll
sub
mov
and
jmp
lods
push
repz
pop
arpl
nop
cwtl
jp
fstpl
xchg
lock
jg
sub
repz
movsl
mov
ret
nop
mov
cltd
xchg
xchg
add
lahf
ss
imul
sub
sbbb
push
xor
jmp
stos
das
outsb
dec
push
scas
adc
mov
sub
aas
lds
rcr
and
in
and
stos
sub
out
and
jae
mov
inc
ret
inc
xor
inc
out
bswap
incb
int3
ljmp
addb
sti
dec
lock
or
ja
mov
push
xor
faddp
xchg
out
mov
test
push
aam
out
xchg
jns
cltd
out
pop
insb
aad
in
mov
out
loopne
int
xchg
mov
cmc
pusha
aad
xchg
pusha
mulb
insl
lock
push
mov
gs
jge
inc
cmpsl
insl
jae
cwtl
addr16
mov
shrb
mov
aad
push
jns
push
rolb
ret
pusha
mov
call
sub
fcmovbe
pop
mov
push
sub
mov
pop
dec
icebp
add
fistl
lds
add
out
sarl
cltd
scas
pop
add
jl
cwtl
dec
jmp
xor
aad
aas
iret
and
lea
dec
jg
jge
mov
shlb
shlb
sub
push
xchg
repz
inc
test
inc
aam
lock
xor
adc
sarb
cmp
icebp
xor
in
dec
pusha
xor
mov
jns
jp
mov
movsb
adc
daa
shlb
sbb
icebp
jl
dec
dec
xor
xchg
xchg
and
mov
add
jl
fucomp
add
into
loopne
mov
push
std
xor
rol
sbb
mov
out
lds
sub
out
push
adc
mov
lahf
movl
insl
test
xchg
xchg
and
repnz
push
pop
cmpsl
out
pop
mov
aam
scas
mov
and
pop
lret
and
push
jge
jge
add
add
mov
or
inc
arpl
mov
add
pop
mov
push
out
das
mov
in
and
cmpsl
jne
xchg
sbb
dec
mov
xor
and
mov
push
hlt
ljmp
or
cmp
mov
pusha
mov
cmc
das
push
outsb
repz
inc
fisttpll
adc
ja
mov
or
std
in
lea
adc
stos
call
sub
lcall
lcall
fbld
cmp
sub
adc
sbb
rcrl
push
jg
jmp
sbb
adc
cltd
popf
dec
insl
jbe
out
stos
js
jp
mov
jae
jmp
mov
sahf
push
mov
push
lahf
int
lcall
mov
jbe
data16
lret
mov
test
and
lock
xor
leave
mov
lds
xchg
negl
imul
inc
test
xor
pop
push
pop
inc
jno
or
and
pusha
adc
aas
ja
mov
sbb
pop
scas
cs
shl
xor
sbb
out
inc
inc
mov
push
mov
aas
sub
aaa
jno
int3
jp
movsb
dec
adc
xchg
and
push
sub
mov
enter
std
sub
cmp
leave
inc
pushf
dec
mov
adc
cmpsb
in
push
lods
mov
and
ret
aas
data16
fsubrl
mov
adc
dec
pop
fadd
mov
mov
fcom
stos
loopne
pushf
mov
lcall
subb
lock
mov
xchg
ret
push
shlb
dec
sahf
pop
push
sub
cmp
pop
rcr
jge
stc
dec
test
and
jecxz
or
xlat
pushf
shrb
inc
lea
scas
ja
js
shlb
lret
cmp
mov
fisttpll
fistl
test
test
fisttpll
mov
mov
xor
cs
test
lret
mov
ret
popa
enter
cmp
shl
mov
sbb
fidivs
and
cltd
fldcw
imul
pusha
hlt
jnp
iret
and
xchg
call
loope
je
inc
adc
mov
loopne
xchg
loopne
jno
shl
jbe
and
scas
xor
mov
pop
mov
js
ret
ss
out
lock
mov
push
leave
and
add
pop
repnz
testb
stos
fsubp
xchg
push
mov
push
in
in
lahf
sbb
xor
jmp
mov
js
jns
or
jne
add
and
mov
sahf
lods
mov
clc
push
mov
xchg
mov
jo
inc
fwait
enter
push
inc
test
add
sbb
movsb
sti
cmp
mov
not
pop
stc
sbb
in
test
repz
jo
mov
js
ret
push
push
jl
ljmp
mov
mov
sub
cmp
push
add
or
or
mov
bnd
daa
lock
mov
pop
neg
ret
xor
les
push
int3
mov
loope
ret
imulb
mov
sti
mov
aas
fs
and
mov
addr16
aad
cmp
jo
mov
jns
mov
mov
loopne
cmpb
cmpl
in
fwait
mov
hlt
or
or
jg
dec
inc
or
cltd
dec
dec
xor
mov
adc
xor
cld
pop
cmp
sub
and
int
jmp
shlb
lret
pop
cmc
in
mov
in
or
mov
loop
fisttpll
lods
mov
fmull
divps
popa
adc
test
pop
jle
into
xchg
or
jg
mov
push
jbe
mov
aas
sub
jmp
int
sbb
mov
sti
cltd
sbb
sub
xor
xchg
bound
hlt
add
arpl
bound
call
push
sub
les
mov
pushf
xlat
lret
mov
out
push
inc
or
jne
sub
repz
mov
iret
or
push
sbb
push
cwtl
out
stc
subb
mov
repz
mov
mov
cld
lds
cli
pop
repz
jmp
ret
xchg
scas
push
xchg
pop
fidivrs
adc
outsb
dec
scas
pop
inc
jg
out
sbb
xchg
mov
mov
scas
mov
stos
fldcw
rcrb
cli
icebp
ret
pop
dec
icebp
shrb
mov
jmp
pop
mov
fildll
shlb
push
add
mov
mov
add
cs
cs
rorb
lds
addr16
xchg
xchg
sub
xchg
push
or
jle
dec
aaa
mov
aas
sub
adc
repz
and
add
cmp
iret
sbb
sub
xor
adc
sysexit
pop
mov
fsts
adc
jp
pushf
in
pop
or
repnz
inc
movsl
xor
js
mov
repnz
rorl
scas
ret
test
arpl
sub
xchg
call
mov
in
xchg
push
in
pop
mov
sub
call
aaa
daa
clc
cmc
and
sahf
imul
aas
in
sbb
mov
jl
mov
mov
cwtl
jns
in
pop
dec
js
jnp
loop
push
mov
pushf
push
aad
cmpsl
stos
mov
lea
or
cmpsl
adc
pop
pop
inc
and
aad
add
imul
lods
and
fimuls
movsl
adc
jns
je
pop
add
cmpsl
pop
repnz
add
cmp
idiv
sbb
sbb
mov
mov
and
in
stos
sbbb
cwtl
or
stos
shl
jp
mov
mov
sbb
dec
int
stc
mov
cli
push
mov
xchg
in
mov
fwait
out
dec
and
xchg
cmp
mov
add
fisubs
mov
data16
and
xor
clc
fstpl
pop
cmp
aaa
and
or
pop
jne
mov
test
sbb
push
sub
inc
inc
xchg
loop
andb
jne
inc
popf
icebp
sbb
pop
stos
popa
int
and
popa
sbb
sub
mov
vmovdqa
decl
stos
or
rcl
push
sbb
test
js
push
mov
test
add
jne
fs
push
mov
mov
dec
test
pop
in
dec
fsubrl
aam
fstl
mov
dec
jmp
ss
nop
pushf
out
dec
xor
pushf
mov
inc
popl
iret
push
test
adc
ret
test
mov
cld
adc
fcmovbe
ret
nop
fisubs
pop
arpl
scas
ss
cmpb
int
pop
add
jbe
push
sub
ret
mov
dec
sub
lcall
mov
jae
or
cmpsb
add
cmp
pop
dec
fwait
popf
cmp
loopne
adc
std
call
in
out
mov
loope
ljmp
pop
xchg
outsb
insl
push
mov
jl
mov
mul
jmp
les
imul
xchg
insl
int
inc
adcl
sbbb
xlat
stos
mov
ss
xor
sbb
stc
sbb
mov
imul
pushf
jl
or
stos
outsb
cmpsb
mov
and
jmp
mov
ret
xor
sbbb
bound
or
cltd
inc
insl
popa
call
addps
sub
cltd
ret
mov
in
push
xor
testl
mov
dec
xchg
cltd
popf
fnsave
daa
je
xlat
and
xchg
cmp
jl
or
or
push
sub
adc
and
rorl
test
jle
call
push
xlat
popa
lahf
jnp
pop
mov
and
or
lret
add
sahf
dec
adc
xchg
sub
ljmp
cld
and
stc
jl
push
xchg
push
push
push
test
clc
scas
xchg
xchg
pushf
push
int
jle
mov
mov
adc
fsubrl
add
fisubs
or
ljmp
jecxz
js
xor
lret
clc
popa
pushf
xchg
and
xchg
fstpl
xor
loope
aas
mov
dec
addr16
inc
sub
inc
js
jl
adc
cmpsl
xor
dec
pushl
sub
loop
lcall
pop
rcrb
mov
inc
repnz
pop
ret
xor
jmp
pop
fwait
and
fwait
push
adc
mov
out
lock
mov
mov
push
mov
loope
inc
incl
in
sub
mov
mov
mov
cmp
lret
into
scas
insb
xchg
jmp
bound
push
sbb
jl
leave
push
sub
xor
das
push
loop
or
call
cmpsl
addr16
mov
jmp
ja
leave
fstl
ljmp
mov
push
dec
test
gs
in
sbb
sub
dec
pop
push
lods
push
jae
sbb
fcomps
lods
inc
dec
mov
lret
sub
imul
iret
std
in
repz
push
jp
mov
aaa
and
xor
pop
pop
bound
pop
dec
in
dec
imul
sbb
arpl
out
add
push
mov
lret
out
xchg
mov
push
rorb
mov
loop
fsubl
in
cmp
and
outsl
push
lcall
inc
sahf
mov
xor
lds
fstpt
adcl
push
lea
mov
inc
stos
fists
pusha
ja
sbb
iret
cmpsb
movsl
dec
mov
call
cmp
js
sbb
daa
int3
and
mov
mov
cmp
jg
inc
ljmp
out
lahf
fnstenv
es
pop
cmp
mov
dec
stos
pop
xchg
psadbw
pop
cmp
mov
cmp
add
pop
jnp
sub
sub
push
xchg
lock
icebp
insb
cmpb
lea
adc
xchg
iret
jns
pop
int3
ficompl
xchg
movsl
pop
pop
dec
xorl
mov
movsl
shrb
pop
inc
sub
push
shl
stc
repnz
push
jmp
dec
cmp
negb
add
mov
ret
mov
xor
mov
fidivrl
call
mov
mov
and
xchg
in
loope
push
pop
adc
fwait
cwtl
push
notb
jge
je
mov
jnp
outsl
lret
jb
daa
leave
and
pop
mov
or
lods
mov
stos
sbb
in
clc
repz
cs
fwait
dec
mov
pop
int
pop
mov
test
jecxz
int3
xor
inc
mov
inc
lcall
mov
mov
sbb
leave
and
inc
push
call
mov
mov
test
and
jo
pop
cmc
fs
outsb
and
inc
dec
jmp
std
aas
add
and
push
stos
ret
gs
mov
fcmovb
pop
and
lahf
lret
roll
es
xchg
out
pusha
fidivrl
leave
cmp
fnstsw
push
std
pop
test
cmpb
shlb
add
pop
xor
movsb
and
js
shrb
add
push
pop
cmp
push
fistpll
sub
adcb
mov
pop
negb
pop
jecxz
mov
rclb
pcmpgtb
insb
sub
mov
test
xchg
or
and
sub
mov
push
mov
cmc
mov
rol
js
jecxz
sbb
lea
andb
fiaddl
mov
fdivrp
fcompl
scas
push
lcall
das
jp
xor
repz
out
add
loop
mov
adc
mov
xchg
mov
fs
repnz
enter
call
inc
pop
add
jb
jno
xchg
fwait
pop
daa
adc
dec
stc
adc
ror
pop
pop
and
fldenv
pop
out
dec
outsl
and
fidivs
mov
fisttpll
or
int3
shll
test
lcall
add
jecxz
xor
hlt
out
data16
mov
fmul
sub
and
dec
mov
fists
pop
inc
aam
fs
xchg
jnp
adc
shll
add
lahf
imul
imul
sar
popa
dec
les
pop
dec
mov
cmp
les
out
inc
lock
les
cmp
cmpsl
push
imul
cmp
stos
call
xlat
add
mov
push
mov
ljmp
fisttpll
cmpsl
jno
sahf
add
repnz
xor
sbb
pop
fdiv
outsl
sti
and
inc
pop
pushf
push
cs
or
mov
jl
inc
pop
data16
mov
jno
push
fistpll
ds
dec
mov
cmc
push
movsl
out
or
hlt
imul
mov
dec
fdivrl
fstpt
add
stc
xor
ja
push
loopne
fwait
push
push
or
jo
xchg
push
xor
rorl
repz
cmp
dec
push
popf
xor
mov
out
movsl
into
xor
lea
lahf
lcall
jp
mov
ret
ja
sbb
mov
mov
adc
sbb
ret
and
adc
orl
xor
push
rcl
sbb
das
and
add
add
push
mov
cmc
mov
or
jge
aas
or
or
adc
mov
jecxz
inc
sub
or
lods
mov
mov
frstor
push
mov
jmp
ja
jns
and
or
cmp
movsb
mov
mov
mov
fldenv
repz
add
mov
mov
or
mov
test
mov
mov
xchg
xor
mov
sti
sbbl
pop
shll
pop
pusha
mov
cmpsb
pop
daa
mov
jecxz
xchg
or
sar
aad
pop
xor
out
pop
push
lods
ss
sub
mov
inc
inc
rorl
icebp
pushl
lret
inc
and
call
mov
mov
rcll
jp
push
insl
test
push
in
dec
adc
xchg
add
fildll
xor
movsl
sbb
out
xchg
xchg
xchg
cmpsb
push
push
test
pop
jmp
jmp
orb
jp
or
add
pop
pop
loopne
lea
sbb
rcrl
fs
dec
or
rclb
xchg
add
fisttpll
fadd
inc
mov
ljmp
dec
movsb
and
mov
fdiv
jecxz
jae
fidivrs
lret
jle
mov
sahf
js
adc
fldlg2
ret
mov
xchg
dec
mov
lock
jno
pop
adc
dec
cmp
mov
jle
mov
dec
pop
pop
dec
add
out
sub
aaa
or
or
sub
pop
sbb
push
loope
je
inc
mov
cmp
xor
lret
cmp
cld
aad
test
ret
cmc
sub
push
test
mov
inc
ljmp
repnz
daa
jle
orb
insl
faddl
lea
inc
xorb
stos
dec
pop
pop
fwait
loopne
in
jnp
push
sbb
mov
mov
shll
fimuls
jmp
and
testb
inc
mov
mov
out
in
adc
pop
cmp
inc
sahf
pop
aad
mov
jp
inc
stos
cwtl
stos
je
cmpl
jb
xchg
adc
and
stos
sahf
call
xchg
adc
pop
inc
bound
xchg
clc
int3
jnp
test
mov
fs
pop
cld
xchg
or
push
mov
and
cmpsb
sub
shrl
inc
ret
arpl
fcomp
cmc
and
jnp
inc
sub
in
jne
dec
enter
and
ja
xchg
mov
aam
sbb
loope
pop
sti
mov
pushf
aas
xchg
mov
ljmp
je
shrb
das
and
int3
or
loop
stos
loop
xchg
out
push
adc
jns
xchg
shll
repnz
xor
cmp
push
bound
mov
in
lods
cwtl
sbb
ljmp
pop
out
popa
les
lods
pop
rcll
jnp
mov
xchg
mov
jecxz
inc
sub
push
cmp
add
sub
out
add
xor
lock
sbb
mov
int
mov
pop
addl
push
xor
cmp
pop
imul
fnstsw
or
mov
fstl
popa
push
jbe
rclb
push
and
jbe
inc
pop
mov
call
sbb
jg
aad
test
out
sub
push
pop
out
xor
psadbw
popa
out
or
test
mov
xchg
arpl
or
jo
mov
nop
push
push
fimuls
cmp
push
xor
cmp
cmp
int3
lods
int3
in
mov
mov
and
das
adc
stc
fisubrl
es
gs
xchg
shrb
sbb
sub
loopne
shl
scas
cmp
jg
push
cli
cmp
lret
sub
push
jbe
sub
dec
and
lock
jmp
fists
outsb
mov
xor
loopne
and
ss
cltd
mov
inc
cwtl
xor
dec
or
sub
imul
loope
inc
dec
mov
pop
push
adc
push
and
mov
into
movsl
pop
imul
pushf
lods
imul
dec
dec
mov
inc
arpl
daa
dec
mull
test
xor
sbb
mov
rcrl
popa
gs
in
fwait
sub
push
mov
cwtl
hlt
jmp
jae
sub
cmp
sbb
pop
stos
adc
jle
mov
pop
push
movsl
xchg
adc
data16
idivl
lahf
sub
sub
ret
repnz
sub
fbstp
push
mov
jbe
push
icebp
pop
cmpsl
idivb
xor
scas
pop
in
pop
out
outsl
test
movsl
push
aam
popa
jbe
sbb
sub
xor
outsb
xor
ljmp
or
scas
cmp
out
rorb
nop
and
pop
xchg
jmp
inc
mov
xchg
xchg
mov
pop
cli
pop
cld
mov
hlt
test
adc
femms
adc
mov
insb
mov
sbb
aas
push
xchg
adc
scas
test
sub
imul
sbb
addr16
fisubs
lret
imul
shlb
push
aad
jmp
imul
jns
imul
mulps
push
leave
adc
in
dec
pop
cmpsl
test
in
push
mov
cmp
push
dec
jle
push
out
and
das
in
fcoml
shlb
cmp
dec
jp
jne
sub
xor
xchg
inc
xchg
jbe
cmp
add
xchg
dec
pop
ja
jle
in
imul
jno
xlat
mov
in
sub
loop
and
lock
cwtl
jne
ss
push
xor
mov
aam
test
jecxz
dec
inc
in
andb
push
das
insl
je
fbstp
jbe
pop
adcl
data16
mov
out
mov
or
cwtl
push
in
test
jo
sarb
addr16
jmp
push
xchg
cmp
add
inc
cmc
bound
movl
cmp
imul
shrl
in
loope
mov
mov
lea
sbb
sti
add
loopne
fwait
dec
and
mov
aam
idivb
inc
icebp
subl
adc
jbe
andl
xchg
into
add
xchg
in
cmovae
dec
je
mov
add
bound
lods
dec
cmpsl
pop
fistl
pop
in
imul
mov
jnp
clc
cli
xor
out
lods
lcall
dec
iret
add
arpl
inc
leave
xchg
add
and
mov
sbb
test
sahf
rol
es
ds
repz
xor
movsb
and
add
out
push
cmpsb
mov
mov
and
sahf
ret
mull
in
cmp
frstor
xor
ja
adc
xlat
popa
pop
push
push
cli
inc
test
push
pop
xor
scas
sarl
dec
loope
adc
mov
lock
andb
xchg
xchg
shrd
mov
jo
xchg
xor
sbb
fwait
out
aas
dec
jne
adc
push
or
cmp
jge
xor
pop
jo
mov
jmp
enter
dec
ss
cwtl
ja
arpl
mov
shrb
sbb
lods
icebp
sub
push
jo
jnp
rcrb
xor
mov
dec
in
mov
cmp
and
dec
stos
mov
add
mov
loope
xor
jmp
xchg
mov
adc
loop
inc
ljmp
dec
pusha
jle
repnz
mov
xchg
pop
jo
lcall
push
bound
pop
and
cmp
incl
lcall
lds
imul
outsb
inc
outsb
out
ds
pop
push
xor
clc
pop
lock
aas
push
aad
insl
mov
cmc
adc
jmp
outsl
jbe
add
lcall
fdivl
in
cmpsl
dec
mov
je
pop
popf
adc
mov
imul
and
push
mov
xor
jae
mov
shrb
mov
push
sub
nop
pop
test
int
sub
imul
and
push
scas
ja
ret
dec
fs
jne
inc
popa
into
fcmovu
dec
rorb
mov
imulb
xchg
les
jno
sub
bound
movsb
test
add
je
lock
mov
movl
mov
mov
mov
jns
sub
cmp
lods
sub
lahf
cmc
shlb
inc
or
cwtl
or
ret
int
ret
fmulp
mov
pop
test
add
and
lret
jg
push
ret
pusha
cmpsl
sub
gs
sub
push
push
dec
shl
repz
prefetcht1
sub
rep
fiadds
mov
lea
lock
dec
xchg
cltd
and
sub
cltd
rorb
stc
mov
lahf
ja
jns
jg
int
jmp
rcrb
ror
jmp
jl
ljmp
jmp
inc
out
push
rclb
in
jg
pop
push
test
das
cmp
imul
dec
test
loopne
xchg
lea
jge
xchg
inc
cmp
push
sti
push
jecxz
and
outsl
mov
fildll
test
xchg
fisttpll
xor
push
mov
test
mov
sub
int3
jo
call
test
mov
in
sub
not
notl
into
xchg
lods
cmpsl
pusha
mov
pop
pop
mov
test
lods
and
out
jns
arpl
std
push
pop
fcmovnbe
leave
dec
ljmp
mov
cmp
scas
insl
fdivr
inc
icebp
sub
push
sub
jp
push
test
loope
jnp
mov
int3
sbb
aam
dec
in
in
mov
push
pop
sbb
je
inc
xorl
xchg
adc
fsts
jae
add
jne
pushw
fiadds
inc
adc
jne
pop
adc
sti
aad
daa
jno
xabort
les
adc
ljmp
sub
loope
aad
test
cmpsl
rcrl
lea
loope
xchg
push
lret
sbbl
add
stos
adc
jno
dec
or
xchg
fadd
hlt
push
ret
sub
sub
or
in
inc
sar
aas
gs
jmp
out
cwtl
inc
ret
add
mov
xor
lcall
mov
push
pop
mov
sbb
lock
lret
mov
inc
xorb
gs
stos
pop
jb
cmp
cwtl
pop
push
sti
das
insb
sub
pop
jge
insl
out
cld
cltd
inc
add
sbb
test
popf
cli
dec
inc
dec
dec
jne
aam
gs
adc
int3
gs
fcoml
add
dec
clc
cmp
pusha
push
sahf
cmp
sahf
mov
loope
mov
dec
or
xor
and
rdmsr
fisttps
pop
mov
testb
push
roll
ljmp
imul
stos
mov
jmp
cmp
dec
jmp
test
repnz
in
outsl
in
mov
insl
pop
jmp
or
cli
sti
mov
sahf
xor
loopne
mov
pop
pop
mov
xchg
outsb
dec
hlt
daa
in
lods
pop
or
pop
fimull
stc
sbb
les
dec
outsb
sarl
jb
mov
pop
or
mov
cmp
jge
or
aad
ret
pusha
add
dec
xlat
cmp
cmp
pop
push
mov
filds
es
mov
jmp
hlt
mov
cli
imul
jae
mov
lret
push
stos
and
xchg
add
scas
mov
into
jne
mov
mov
add
in
mov
cld
xor
mov
imul
addr16
sub
pop
push
and
xor
sub
jae
dec
xlat
sub
divb
sbb
and
stos
or
push
lds
push
fs
rorb
jg
adc
sti
xchg
faddl
stos
mov
leave
sbbl
pushw
and
nop
iret
sbbb
iret
fnstcw
sub
movsb
ret
mov
or
mov
fldenv
mov
cmpsb
mov
mov
insb
imul
and
jmp
das
push
pop
mov
mov
stos
in
and
xchg
push
and
jmp
fisubl
aad
push
add
xchg
jg
and
out
jg
push
imul
pop
jae
mov
push
fistl
lcall
jg
bound
cltd
mov
test
loope
leave
jnp
test
add
mov
emms
sti
es
imul
inc
and
scas
lock
mov
mov
dec
cmp
test
or
xor
pop
adc
ds
into
xchg
pop
pop
fwait
call
lock
call
movsb
push
jge
mov
cmp
lret
sub
loop
cmp
or
loopne
sbb
cmpsb
fiadds
xor
sbb
fmuls
xchg
or
pop
in
movsl
mov
popa
mov
push
adc
push
bound
inc
push
outsb
jno
mov
mov
in
and
jmp
cwtl
rol
into
leave
aam
cmpsl
xor
jge
ja
das
push
fsubrl
in
mov
jl
out
jecxz
xor
xchg
aas
xor
xchg
push
adc
ds
fiadds
pop
movsl
push
push
outsl
daa
jmp
mov
mov
lret
dec
inc
or
insb
or
orl
repz
mov
pop
pushf
test
xor
add
jnp
ljmp
and
xor
pop
jl
adc
lock
aad
mov
dec
mov
mov
cmp
out
addr16
mov
and
into
jmp
fmul
cmc
js
inc
arpl
mov
jae
mov
push
jno
xor
insb
mov
mov
pop
mov
pushf
push
fsub
xchg
jle
mov
hlt
in
xor
xchg
setle
pop
mov
iret
dec
cmp
pop
sbb
lea
cmpsb
sbb
inc
cmp
mov
pushf
es
ficompl
mov
aam
repz
insl
mov
inc
js
pop
fs
mov
xchg
aaa
push
and
jae
arpl
mov
or
or
mov
stc
fstpl
and
cld
sub
sub
mov
add
icebp
mov
outsl
in
xchg
push
jnp
mov
shlb
mov
lret
lret
pop
ss
js
cmpl
pusha
and
stc
mov
stos
in
sbb
aas
sarl
mov
testl
mov
jle
ret
jle
ficompl
mov
test
popa
add
inc
add
xchg
aam
push
les
and
lret
push
jns
lahf
call
or
mov
push
dec
pop
xchg
mov
dec
mov
fs
pop
lods
jo
shll
xchg
ficomps
mov
daa
movsb
xor
fstpl
xor
pop
xor
cmc
loopne
fisttps
mov
iret
push
inc
adc
jbe
push
aaa
mov
movsl
mov
xor
mov
das
cmpsl
xorl
pop
les
pop
ret
jmp
sub
push
aaa
mov
pop
cld
or
fidivrl
cmpsb
fsubs
push
divb
push
xor
xchg
in
sub
hlt
out
aam
sub
lret
das
lret
cmp
and
mov
sbb
pop
mov
and
test
push
push
in
fadds
mov
push
out
inc
ret
in
rcrb
push
loopne
mov
jbe
ss
sub
mov
enter
push
lahf
popa
xchg
xchg
lret
mov
aad
xchg
mov
or
mov
pop
mov
sub
in
add
pop
push
leave
add
or
hlt
mov
sbb
mov
pop
xchg
int3
frstor
jmp
pop
repz
cmp
mov
je
cwtl
pop
jno
out
sbb
dec
inc
sahf
pop
jne
mov
and
loop
sbb
add
test
out
sbb
shll
push
adc
inc
mov
outsl
push
push
stc
push
mov
cmpsb
dec
pusha
xchg
test
test
or
in
into
out
lahf
xchg
sub
rcrl
or
jb
mov
imul
inc
movsl
inc
fsubs
cmp
rcrb
call
mov
clc
push
mov
pop
mov
clc
add
scas
lcall
push
cmpsl
sub
push
test
mov
pushf
cmp
pop
add
mov
inc
out
ljmp
jl
push
movsl
mov
xor
xor
popa
fadds
test
mov
cmp
ja
fisubs
cltd
push
xor
mul
mov
add
rclb
and
in
inc
insb
shrb
add
out
add
sahf
pop
jp
cmp
fnsave
jg
adc
pop
xor
pop
fildll
in
lcall
out
jge
std
cltd
jmp
popa
mov
fsubl
jno,pn
repnz
jge
xchg
ja
pop
inc
movl
outsl
js
out
add
sti
out
fistpl
int
or
pop
cmpsb
xor
aam
fbld
ds
out
incb
pop
leave
shr
loopne
cmp
jb
jbe
push
adc
pop
jmp
cmp
fiadds
push
out
ficoms
daa
cmp
cli
mov
push
push
jno
add
fildl
cmc
jno
inc
and
addr16
mov
cs
push
aas
cmc
aas
sub
jae
mov
outsl
cmp
push
push
in
lcall
dec
add
xchg
repnz
mov
mov
sbbb
es
jge
mov
testb
pop
mov
enter
mov
jb
dec
fnstcw
add
and
sub
test
addl
and
popf
push
outsb
xchg
xchg
dec
and
in
arpl
adc
call
mov
dec
and
insb
mov
cli
rol
es
int3
mov
aad
push
ds
sbb
std
pop
jp
jg
lcall
dec
lock
cld
xchg
jg
in
lea
and
je
insb
inc
nop
inc
pop
push
mov
push
int3
fstp
push
sbb
xor
and
js
mov
pop
ret
dec
inc
in
jns
jg
inc
adc
jae
fmull
jg
mov
cmp
add
jp
mov
and
mov
rolb
test
daa
add
dec
cmp
push
xlat
push
xlat
std
push
int3
fcomip
dec
mov
outsb
aas
dec
dec
and
pop
js
imul
xchg
or
sub
jp
push
jae
daa
lods
cltd
pop
pop
pop
inc
fsubr
mov
mov
pop
or
out
mov
mov
loope
inc
fucomp
mov
cmp
leave
mov
and
sbb
stos
roll
push
cli
inc
cltd
mov
popf
cmp
mov
dec
xor
cmp
and
aam
sub
mov
popf
outsl
or
lods
xlat
or
insl
jmp
sbb
imul
dec
clc
mov
mov
test
sahf
daa
mov
addl
ret
mov
dec
int3
cmp
mov
jl
mov
sahf
mov
sti
sub
lods
xor
adc
pop
mov
sbb
cmp
insb
aam
pop
shll
xchg
sub
loope
into
sub
mov
in
adc
push
jmp
outsl
movsl
jo
imul
jbe
ja
mov
push
or
cmp
cltd
jo
in
popf
jbe
mov
imul
test
pop
into
scas
mov
pop
jmp
sub
inc
add
sti
lock
stos
mov
push
and
je
adc
les
push
ljmp
rclb
xchg
xorb
popf
cmp
repnz
shl
stos
dec
push
je
mov
jns
xor
out
xchg
xchg
mov
cmovno
scas
and
pop
bound
lods
sbb
ja
pusha
stos
xchg
xorl
out
lock
add
mov
cmpsl
mov
push
movsb
push
mov
mov
pushf
push
sub
sahf
out
iret
cmp
pop
cld
add
push
iret
mov
sbb
pop
mov
cmpsb
inc
cmp
sbb
pusha
fdivrs
push
push
push
adc
and
in
jnp
add
ja
fisubs
imul
dec
mov
shr
inc
repz
add
xor
sbb
or
xchg
mov
jp
xchg
lcall
sarb
sbb
stc
ljmp
cmp
sub
stos
dec
leave
mov
fstps
movsb
repz
adc
push
lock
cli
xorl
test
lret
xchg
jae
js
push
cltd
rorl
push
ret
jg
add
pop
pop
push
ficoml
mov
out
in
hlt
cmp
xchg
and
fstpt
or
pop
cmp
push
repz
fimull
xchg
jbe
cmp
jne
cmp
sub
xlat
std
mov
je
jl
cs
arpl
cmc
fcoms
jg
mov
or
dec
ror
pop
lods
xor
pop
aam
mov
push
aas
or
mov
sub
xor
dec
jl
xlat
sahf
xor
adc
cmp
pop
push
add
sbbb
mov
cmp
pop
imul
icebp
xlat
dec
fcomps
loop
stos
cmpb
mov
jecxz
in
and
adc
pop
mov
pop
js
daa
jmp
xor
dec
ror
xchg
adc
mov
or
imul
add
or
dec
rcr
movsl
or
mov
repz
mov
xchg
sbb
lock
mov
imul
add
xchg
shl
push
addr16
repz
scas
sub
rcr
orl
out
lcall
sub
stos
lret
xchg
push
ss
inc
lea
inc
sbb
dec
test
or
xor
scas
out
or
sbb
std
ss
lret
mov
setl
ds
test
js
popl
pop
push
out
jge
or
cmpsb
push
push
jmp
jge
mov
call
xchg
add
stos
pushf
test
xor
pop
push
leave
outsl
pop
xchg
ret
es
pop
stos
loope
jl
in
lds
pushf
mov
mov
push
iret
sbb
adc
xchg
lock
cld
mulb
out
add
and
push
pop
aad
dec
std
ret
mov
pop
push
and
cmpsb
fisttps
fldcw
out
pop
test
lret
leave
mov
scas
dec
loopne
and
sbb
or
fistl
mov
cs
adc
gs
dec
loope
test
cmp
xchg
mov
fcomps
jmp
add
and
push
xchg
pop
mov
xchg
enter
sub
in
xor
lret
mov
inc
out
call
std
sub
jo
into
insl
mov
and
mov
cmp
mov
pop
mov
fwait
or
outsl
jnp
mov
cvtps2pd
xor
outsl
ds
test
sub
jo
mov
pop
test
das
jbe
das
inc
icebp
adc
jns
vcvtps2pd
jl
addl
mov
adc
xorb
rorl
mov
mov
push
inc
ja
inc
mov
inc
add
outsl
mov
adc
add
xor
inc
sub
movsb
dec
adc
add
and
adc
insl
test
mov
mov
fwait
movsl
mov
jb
mov
xchg
xchg
lods
lret
sbb
je
xor
or
inc
and
notb
insb
cld
stos
fadd
mov
xor
lds
mov
or
or
subl
xchg
cltd
fisttps
jno
and
push
lea
cmp
jg
punpckhdq
pop
mov
cmpsb
mov
jne
scas
outsl
xchg
inc
pop
fsubs
sub
lock
pop
aam
inc
sbb
insb
sub
xchg
xchg
push
mov
out
inc
ss
imul
mov
mov
dec
xchg
mov
outsl
test
push
lock
pusha
in
lods
outsl
pop
fwait
add
xchg
push
mov
cs
sbb
mov
pop
cmp
sti
sbb
sbb
push
leave
push
xchg
jnp
mov
subl
and
cmpb
pushf
rcrb
fcomi
ss
jno
insb
mov
test
dec
and
jnp
mov
loope
push
aam
fs
add
cltd
mov
adc
imul
pop
xchg
push
sbb
aas
out
into
aad
popf
js
xlat
pop
daa
fistps
sbbb
int
into
es
stos
push
mov
loop
xor
mov
cmp
and
and
icebp
iret
cmpsl
popf
add
aas
and
add
enter
cld
push
sti
scas
and
xlat
xchg
or
ret
push
push
xor
pop
jbe
and
gs
add
sub
adc
aad
fsubrl
pop
outsb
sub
mov
sub
mov
testb
mov
stc
nop
xchg
xor
xlat
test
jo
int3
popf
lods
ret
mov
sarb
add
push
jmp
mov
jae
enter
std
mov
test
fidivrs
out
jo
add
mov
dec
test
dec
jne
ret
jae
cmpsl
jae
nop
jno
out
xchg
loop
leave
fmuls
testl
xlat
fistpl
in
in
iret
push
mov
xchg
sti
pop
ret
and
xchg
bnd
jbe
rolb
and
xchg
gs
add
fmull
mov
push
mov
sarb
jne
cmpsb
and
mov
sub
popa
mov
xchg
gs
loope
std
data16
rorl
push
push
pop
push
shl
or
jno
and
aad
jns
outsb
insb
ljmp
push
dec
push
popa
fcom
push
ljmp
shrl
incl
mov
adc
inc
std
dec
gs
xchg
push
mov
mull
fldl
push
jle
loopne
xchg
jg
mov
add
push
fldl
test
fists
stos
pop
dec
xchg
and
pop
mov
out
outsl
popa
push
lar
cmp
lods
scas
and
ljmp
cmp
stos
scas
test
sbb
into
xor
int3
std
jge
leave
mov
push
out
stos
add
mov
mov
fucomip
pop
sbb
test
sarb
xchg
out
and
sub
ljmp
push
jo
and
pushf
inc
inc
mov
jge
sbb
fisubrl
jae
pop
dec
xchg
pushf
and
lret
sahf
rcr
cwtl
push
ss
ljmp
mov
push
xchg
sbb
lds
stos
dec
pop
or
jecxz
mov
pop
jg
mov
xlat
cli
inc
test
testl
dec
inc
leave
test
adc
es
adc
cmp
adc
push
loop
or
inc
xchg
fldcw
xchg
mov
and
xchg
inc
fsubrs
adc
loopne
lods
inc
mov
mov
out
lcall
and
les
cwtl
jl
xchg
sti
xor
mov
out
jp
mov
shll
cmp
pop
xor
ss
add
add
testb
ja
rolb
push
jmp
add
cli
popf
jge
fisttpl
ljmp
loope
push
or
sub
sub
test
dec
je
cmp
pop
lret
push
loope
mov
mov
push
dec
out
in
and
out
sub
mov
lret
ds
and
sbbl
ds
lods
push
gs
daa
cltd
repz
pusha
out
repnz
int3
jle
in
sbb
mov
es
add
mov
jne
js
push
pop
dec
fisttpl
lret
jmp
and
bound
xor
mov
dec
inc
add
inc
mov
sub
mov
dec
lret
test
pop
pop
sbb
pusha
loopne
add
or
adc
mov
in
jl
icebp
xchg
jb
cmpsb
daa
dec
pop
push
movsb
adc
popf
or
test
mov
cmp
mov
lcall
push
orl
xchg
jno
dec
imul
movsb
dec
dec
pop
in
or
sti
push
ret
ja
jge
scas
mov
mov
jae
cs
clc
mov
lds
fistpl
addr16
mov
into
dec
push
sbb
lret
aas
and
xchg
dec
xchg
mov
jecxz
cmp
call
int
cmp
inc
jb
inc
pop
dec
test
xor
mov
loope
pop
divl
test
jmp
jge
push
fsubp
sub
hlt
sub
or
pop
fistl
and
ljmp
lock
adc
out
roll
into
and
adc
out
sti
and
fs
mov
xorl
jecxz
mov
hlt
popa
mov
push
stos
push
daa
ja
addl
insl
rdtsc
adc
fnstsw
xchg
xchg
lea
sbb
iret
jl
sub
mov
xchg
jp
xchg
mov
adc
arpl
mov
ss
mov
jge
cltd
nop
js
xchg
sbb
loope
std
pusha
jge
pop
repnz
bound
xchg
xor
jae
jno
adc
loope
or
rcl
or
movsb
xlat
push
xchg
rcll
rorb
pop
mov
push
mov
xchg
es
cmp
push
add
ss
push
iret
add
mov
lret
mov
out
mov
jmp
push
add
inc
jle
jg
mov
sub
pop
in
add
cwtl
adc
jge
jbe
push
xchg
push
jo
dec
sbb
outsl
into
cli
mov
rcll
call
in
adc
push
mov
mov
popa
out
jnp
cmp
dec
mov
fbstp
xor
pop
mov
inc
or
inc
push
cs
and
iret
frstor
aam
bound
mov
cld
lea
mov
mov
sub
sarb
aam
iret
icebp
fcom
mov
lock
or
pop
mov
and
push
shlb
jmp
out
push
popa
xchg
ret
bts
jne
movsl
mov
xchg
nop
or
loop
pop
not
mov
imul
sbb
imul
int
jae
jne
push
pusha
push
and
aas
aam
add
push
and
jno
cmp
fsubrs
mov
stos
aas
loope
cltd
push
subl
jecxz
out
fcoml
aaa
dec
popf
fiaddl
leave
test
pop
sub
fwait
insl
scas
mov
xor
mov
mov
jnp
xchg
sub
xchg
mov
int3
pop
mov
pop
add
divb
jns
fwait
inc
imul
movsl
aad
push
rclb
jb
jnp
or
or
test
aaa
jne
push
dec
pushl
jbe
push
loopne
cmp
or
test
ds
movsb
cmc
sub
inc
xor
fs
mov
inc
xor
jne
pop
das
daa
push
in
loope
xor
mov
fnstenv
inc
cmp
stos
push
cwtl
les
or
stos
in
loop
mov
cs
enter
add
insb
mov
inc
aad
cs
cmp
xchg
jmp
xchg
call
mov
sub
inc
or
sti
les
addl
clc
sahf
and
fisubl
flds
jp
add
addr16
dec
xor
shll
cwtl
jbe
jbe
iret
lds
fwait
in
push
sbb
adc
fadd
inc
data16
mov
push
cmp
xor
dec
pop
dec
jns
rorl
xchg
stc
inc
xchg
jp
sbbl
pop
subl
in
mov
lock
ljmp
jecxz
fs
xor
pop
loop
xchg
stc
cmp
push
and
mov
cmp
aaa
test
cmc
mov
mov
les
inc
xor
int
push
divb
inc
jmp
sbb
popa
stc
clc
dec
mov
addl
mov
vcmpneq_osps
adc
sarl
xchg
bound
jbe
loope
xor
or
pushf
hlt
fldcw
lds
xor
subb
idivb
loope
mov
rcrl
cmpsb
mov
test
dec
out
inc
inc
orb
fnstenv
mov
mov
orl
popa
into
scas
in
push
dec
xorl
cwtl
sahf
es
das
in
clc
idiv
out
leave
rorl
pop
xor
xchg
and
enter
xchg
xlat
pop
cli
sahf
fwait
push
incl
mov
or
inc
subps
rorb
and
and
pop
jb
out
pushf
or
mov
mov
in
ret
sti
int
shll
out
lahf
sbb
test
ja
aad
fists
xor
mov
mov
mov
jno
fisubs
dec
jno
stos
bound
rep
push
iret
stos
dec
lret
movb
push
fisttpll
mov
div
shll
jl
mov
mov
mov
or
mov
es
andb
push
push
cmp
cli
pandn
adc
xchg
shrb
and
mov
dec
add
add
hlt
mov
stos
push
inc
sbb
xchg
into
push
bound
jne
sbb
ret
mov
sbb
cmp
cld
out
or
pop
xor
mov
negb
mov
mov
shrb
jge
jmp
lcall
cwtl
and
pop
out
fbstp
inc
sbb
mov
test
push
out
rcl
int
add
aas
inc
das
mov
adc
fwait
shl
out
stos
cmpsb
push
out
xor
dec
test
or
ret
xchg
in
xor
cmp
pop
dec
pop
jae
pushf
lcall
dec
decb
push
cmp
and
ficompl
adc
sbb
out
mov
xor
lds
dec
inc
int3
loopne
lods
jmp
or
daa
aaa
icebp
dec
push
lret
mov
xlat
jnp
xchg
aaa
jb
loopne
cmpsl
mov
inc
sbb
incl
hlt
test
cld
push
cmp
mov
jns
pop
mov
jne
loopne
mov
adc
fwait
sub
cmp
xorb
pop
aas
cmp
mov
aaa
scas
data16
mov
dec
xchg
pop
push
stos
mov
xlat
mov
cs
in
imul
mov
dec
addr16
hlt
call
xchg
loope
jne
movsb
gs
push
cmp
sbb
pushf
pushf
or
mov
adc
dec
fs
jo
mov
cld
loopne
sbb
in
mov
adcw
pushf
rcrb
in
and
insl
jns
into
dec
sub
push
out
sub
cmp
sub
out
addb
cmpl
int3
mov
lods
sahf
push
or
mov
das
aas
pop
inc
jns
filds
rcrb
rcrb
popa
add
mov
sbb
mov
cmp
repnz
mov
std
mov
loope
push
mov
and
jecxz
cmpsl
test
inc
das
les
outsl
jp
inc
js
dec
rcl
in
scas
cli
sahf
xchg
gs
pop
xchg
cmc
fsubrl
cmpsb
cmp
sub
das
cpuid
fwait
enter
mov
mov
pop
loope
lahf
aaa
jne
dec
cltd
roll
outsl
mov
pop
jo
hlt
pop
lret
out
loop
test
int3
mov
icebp
cmp
sbb
out
mov
jbe
adc
mov
sub
lret
scas
ret
pop
outsb
push
mov
mov
je
push
out
fsubl
lea
fsts
mov
and
add
mov
or
repz
jae
jb
std
push
cltd
cmp
dec
stos
mov
loopne
xchg
cmpsl
adc
imul
js
dec
adc
mov
pusha
repnz
xor
mov
shll
mov
or
jo
call
ret
das
test
pop
jbe
repz
push
or
push
imul
out
sbb
xor
push
rcr
cwtl
sub
in
ja
outsb
cmp
inc
mov
stos
outsb
cmp
push
add
insb
push
int3
addr16
test
ret
into
xchg
sbb
jp
ss
xlat
filds
repz
jmp
push
fisubs
push
jno
int3
mov
js
mov
push
fstps
and
iret
rorl
pop
sbb
cmp
dec
aam
pop
in
push
aaa
add
adc
mov
leave
loopne
push
mulb
mov
jne
push
cwtl
xor
dec
jo
lock
fistl
lods
mov
adc
shll
cmp
clc
mov
sarb
pop
lods
arpl
into
or
cli
insl
mov
mov
jge
sbb
mov
mov
push
into
addr16
sbb
fmull
insb
sbb
in
insb
daa
adc
scas
les
fmulp
sub
jno
out
imul
aaa
mov
add
xor
enter
mov
fistpl
shl
inc
cmp
imul
push
mov
leave
bound
fisubl
xor
roll
lods
jg
out
cmc
fwait
inc
cmpsl
mov
js
sub
es
imul
jne
jp
lock
mov
mov
and
jnp
add
fnstsw
push
cmp
lret
je
jge
xchg
xchg
mov
popf
sub
nop
cmp
dec
and
mov
xor
js
adc
rolb
mov
sub
daa
mov
push
jno
pusha
xchg
test
movsb
int
stos
or
sub
jp
mov
xor
mov
ret
pop
stos
out
popa
sub
mov
mov
mov
sbb
mov
jo
push
dec
arpl
pop
fdivs
xor
push
jl
enter
xchg
lcall
push
movsb
fldl
fwait
jle
mov
push
sbb
ret
into
pop
fwait
add
mov
jae
xchg
loopne
fwait
jmp
mov
loopne
jl
push
inc
sbb
mov
shl
inc
in
in
fwait
dec
roll
movb
cmp
inc
xor
inc
mov
fidivs
mov
icebp
bnd
or
testb
ds
into
mov
addr16
lea
outsb
pop
dec
int
inc
arpl
int3
push
push
pop
dec
mov
scas
cmp
lds
pop
lcall
jne
out
out
outsl
stos
xchg
mov
adcb
js
and
dec
int3
pushf
inc
sbb
jmp
sub
xchg
shlb
out
test
mov
adcb
push
iret
cmp
xchg
es
pop
dec
in
jecxz
decl
in
stos
outsl
push
cs
inc
in
jno
test
in
in
fistpl
dec
incb
push
cmp
xchg
fwait
push
movsl
rorl
inc
xchg
je
int
in
sbb
adc
pop
stc
cld
adc
sahf
xor
or
dec
cmpsb
and
jmp
push
jg
decl
out
cltd
invd
rclb
cmc
icebp
outsl
jge
leave
ljmp
data16
insl
into
pushf
sub
jbe
cmc
scas
or
and
adc
xchg
xor
xor
jo
adc
ret
sub
hlt
cmpsl
testb
lea
scas
fdivrs
test
lea
sbb
mov
stc
xchg
inc
jle
xchg
imul
sub
cmp
cmpsl
xor
dec
rolb
aam
loop
scas
fistl
sbb
push
inc
aaa
cltd
fisttpll
leave
das
push
cmp
and
es
xchg
cmp
mov
loop
lods
lods
pop
rcrb
fcomp
repz
add
pop
out
dec
das
pop
shrb
daa
lret
inc
mov
and
sub
xor
pushf
shrl
mov
or
idiv
jecxz
and
lahf
cli
cmpsl
xchg
mov
notb
daa
je
fcomps
sti
sub
daa
pop
sahf
jne,pt
mov
mov
and
cltd
xor
shrl
cmp
stos
aas
stos
in
mov
xor
pushf
in
les
dec
or
lret
xchg
pushf
or
pushf
jbe
cmp
adc
push
pop
stos
int3
in
push
cmp
in
mov
mov
adc
xchg
test
inc
add
data16
mov
shrd
push
jp
enter
mov
aad
idivl
mov
and
mov
add
cltd
jnp
or
push
dec
scas
xchg
sub
lcall
fs
out
ljmp
xor
inc
sbb
sahf
stc
ret
imul
mov
ja
pop
popf
or
mov
ret
ret
mov
adc
and
outsl
enter
repz
inc
cli
mov
xchg
js
ret
outsb
xchg
sahf
cmpsb
add
scas
scas
xchg
clc
push
lea
addr16
inc
push
inc
stos
xchg
or
pop
pop
xchg
sub
and
mov
add
mov
jnp
mulb
xorb
inc
fnstsw
jnp
adc
push
mov
jmp
loop
adc
pop
mov
pop
jmp
pop
dec
jb
xor
inc
cmp
mov
adc
in
add
in
aad
mov
cmp
cmpl
rcrl
ljmp
idivb
js
push
inc
pop
xchg
icebp
imul
jp
arpl
adc
sbb
mov
cmp
cmpsl
lcall
pop
mov
xchg
pop
lods
or
sbb
lods
daa
jae
sub
sbb
push
adc
loope
loope
or
int3
pushf
or
mov
pop
int3
inc
stos
fwait
jns
or
pop
negl
call
in
cmp
pop
mov
dec
loop
xchg
scas
mov
push
lods
ret
aas
and
adc
inc
cmp
adcb
xchg
pop
inc
inc
xchg
js
add
mov
inc
fwait
or
les
push
mov
stc
dec
adc
rol
inc
dec
push
push
out
jp
and
imul
movsl
mov
aaa
xor
add
fildl
lahf
stos
mov
xor
cld
andl
in
mov
cmpsb
mov
push
pop
stos
dec
push
xchg
jno
lea
insl
sti
arpl
cmp
sub
in
mov
pop
movb
push
ret
and
jnp
xchg
sub
sbb
fbstp
inc
mov
pop
adc
ljmp
in
push
sarb
xor
xor
iret
sub
add
jp
sub
mov
mov
jne
jp
repz
cmpsb
call
xchg
mov
xchg
clc
pop
pop
jecxz
arpl
mov
lret
pusha
mov
test
mov
adc
or
in
pop
xor
jecxz
lods
jns
not
mov
sub
leave
cmpsl
and
test
js
faddl
inc
fs
push
test
add
xchg
mov
test
loope
sub
pop
mov
enter
jae
mov
add
mov
push
incl
ja
out
lret
or
push
stos
call
xchg
jne
pop
out
cmp
xchg
xchg
mov
insb
cmp
cmp
xor
loopne
sbb
and
xor
cld
out
push
sub
fwait
test
pop
xchg
ret
ja
out
fcompl
mov
das
and
jb
insb
add
arpl
lock
stos
inc
xor
in
xlat
ret
mov
pop
aad
xor
shlb
popf
lds
mov
add
dec
mov
arpl
out
popf
mov
loope
mov
pop
mov
imul
cmp
inc
loopne
push
aad
adc
push
jl
push
add
in
or
jg
int3
call
fadd
mov
into
jge
dec
or
arpl
divl
mov
push
lcall
daa
scas
pop
cli
lret
dec
fildll
js
sbb
add
mov
bnd
pop
pop
ret
xchg
add
loopne
fsubrs
push
in
cld
inc
ret
fildl
push
push
imul
mov
rclb
xchg
mov
xor
stos
sub
fistps
or
aam
movsl
inc
popf
mov
jno
ja
push
scas
shrb
xor
test
jl
lahf
jbe
roll
lock
cs
inc
dec
popa
jle
sbb
mov
mov
sbb
sti
xchg
hlt
adc
enter
pop
rcll
pop
jmp
sbb
outsl
mov
call
mov
cltd
jmp
int3
ret
mov
in
repnz
insl
shl
outsb
fstps
lret
aaa
sbb
movsl
cltd
rolb
scas
call
shrb
js
jne
leave
stc
jno
pop
jg
sarl
jmp
cmp
jbe
adc
stos
push
inc
fmull
mov
divb
rcrb
std
adc
pusha
out
mov
arpl
repz
sbbb
in
xor
xchg
decl
push
adc
imul
pop
fisttpl
fidivrs
pusha
je
ficoms
pop
rclb
leave
push
dec
ret
pop
or
call
push
mov
cmp
sbb
lret
cli
jge
repz
js
bswap
dec
stos
and
testl
pop
inc
add
repz
jl
jnp
pop
or
sub
jmp
into
cmp
icebp
jmp
inc
adc
xor
xchg
jno
mov
dec
pop
adc
adc
pop
sbb
jmp
jmp
ljmp
shrb
daa
jo
cs
neg
pop
pop
mov
jae
and
loopne
enter
fucomi
mov
ds
arpl
bound
enter
jmp
xchg
ljmp
and
ret
lahf
std
adc
jb
in
fdivrs
jno
push
ffree
ret
inc
std
jmp
pop
mov
sarl
ds
mov
mov
fprem1
test
pop
jle
pop
fwait
jle
mov
mov
mov
enter
outsl
push
mov
xchg
dec
mov
in
mov
int3
ljmp
mov
sti
shll
sbb
or
and
arpl
js
call
add
popf
js
pop
fldl
rcr
inc
or
fwait
js
cmpsb
xchg
jo
movsl
inc
rclb
push
icebp
jnp
popf
inc
sub
pushf
or
std
data16
pop
imul
jae
cs
mov
jbe
pop
lock
outsl
lcall
add
in
and
enter
fistps
int
mov
sahf
sti
xchg
aaa
enter
pop
mov
rol
mov
sahf
mov
lahf
sub
pushf
adc
hlt
aaa
shll
loopne
std
push
test
xor
outsb
fmull
xchg
lret
in
jne
jno
mov
push
inc
pusha
xchg
call
incl
test
test
add
mov
xchg
jae
arpl
gs
inc
loop
inc
mov
loope
mov
stos
add
dec
stos
stos
rcrl
cltd
sbb
lcall
pushf
mov
jnp
jecxz
lcall
hlt
add
ja
mov
sbb
sub
movsb
call
faddl
sarb
mov
ja
cltd
sub
jbe
add
repnz
push
push
add
jecxz
lahf
add
push
push
scas
repz
imul
shll
mov
adc
sbb
xchg
subb
mov
mov
out
ss
aaa
pop
mov
sbb
inc
push
into
or
adc
sti
jbe
push
xchg
jns
adc
mov
sbb
jmp
push
insl
lock
mov
mov
cmp
add
ljmp
shll
cmp
fsubrl
adc
movsb
and
add
dec
nop
mov
sub
cmp
xor
add
inc
mov
stc
fistps
popa
icebp
test
ret
aad
stos
add
cmpsb
add
sbb
mov
sar
push
sub
aaa
cmp
es
fstps
or
inc
loopne
out
jb
popf
or
jae
pushf
jecxz
xor
test
jbe
aam
mov
jnp
pop
pop
mov
js
push
jo
int
push
fdivs
xchg
xchg
test
int
subb
rcll
ljmp
int
aad
sbb
add
mov
sarl
cli
scas
add
loope
daa
imul
aad
fsts
and
mov
dec
les
add
orl
outsb
pshufw
lcall
and
fdivp
cli
loop
insl
mov
adc
test
dec
rorl
mov
push
mov
pop
sub
xchg
mov
xor
pop
xchg
push
jns
jmp
insb
std
fimull
or
out
insb
cltd
pop
adc
push
mov
or
pop
inc
pusha
sub
sbb
mov
xor
in
scas
pop
mov
xchg
or
adc
fwait
inc
cmp
or
fcomps
lock
sbb
xchg
es
xchg
gs
rorb
jns
sbb
ret
out
std
aam
xor
arpl
add
js
xchg
jg
mov
call
inc
push
mov
andl
xor
and
out
pop
adc
jle
sldt
cmpsl
pop
jns
jl
jge
add
push
hlt
daa
dec
mov
sbb
and
add
out
jle
mov
push
jge
subl
dec
xchg
sub
adc
adc
xchg
jne
pop
pop
xor
xchg
mov
fldcw
subps
jp
mov
adc
mov
and
mov
sarb
nop
pushf
std
or
dec
in
xor
add
inc
mov
jo
mov
scas
stos
inc
outsl
pusha
cmc
dec
cmpl
jmp
adc
hlt
in
aas
push
sbb
bound
sar
sub
movsl
jmp
and
test
enter
sahf
or
pop
push
mov
loopne
imul
loope
add
xor
fcmovnb
negl
and
pop
cmp
mov
dec
data16
movsl
and
loopne
mov
por
add
test
pop
lock
or
enter
or
xor
or
add
movsb
sub
shll
add
ret
cmp
pop
or
pop
fldenv
daa
sahf
test
in
outsl
dec
andl
fdiv
int3
in
mov
jae
xor
mulb
sbb
adc
movsl
sub
das
mov
mov
add
jge
je
inc
sbb
inc
dec
lahf
cmp
enter
mov
dec
pop
fnstsw
sar
sbb
shlb
lret
ret
sbb
loopne
mov
sub
test
cmpsl
outsl
push
cld
sbb
sub
cmp
fwait
sub
lret
jno
pop
cmpsb
xchg
push
jge
sub
clc
pop
mov
adc
jnp
dec
ss
ljmp
xor
mov
test
adc
dec
addr16
cwtl
sub
mov
das
icebp
rcl
scas
stos
test
inc
jnp
xor
mov
or
inc
pop
xchg
fildl
gs
repz
mov
cmpsb
adc
fldcw
sbb
shl
jmp
mov
cmp
jb
dec
xor
or
push
sbb
xor
jbe
push
push
pop
pop
lock
jg
xor
add
pop
stos
ljmp
xor
int
test
xor
xorb
or
dec
movsl
xchg
lcall
cmc
lods
lcall
shll
sbb
nop
lods
fildll
cwtl
hlt
sbb
mov
jo
icebp
es
je
xchg
push
jle
pushf
cmp
movsl
cmp
subb
cmc
add
push
dec
jp
inc
pusha
sarl
jb
popf
push
mov
mov
sub
jle
mov
xor
neg
pop
out
mov
insb
iret
mov
push
mov
decl
mov
pushf
pop
inc
pop
fldl
jg
jecxz
clc
ljmp
in
je
jbe
sub
jg
fcoms
fs
fs
out
fstps
repz
jmp
xor
roll
lea
or
sbb
subl
cmp
cmc
imul
pop
popf
out
jg
pop
push
jp
mov
dec
xor
outsl
dec
jle
mov
int
push
or
out
sub
add
cmp
adc
rorb
call
cmp
lods
fildl
dec
stc
mov
mov
int
cmpsb
push
and
sbbb
jnp
stc
xchg
mov
out
lcall
mov
cltd
adc
cli
cmpsb
inc
lcall
mov
cmp
cmp
fwait
test
and
inc
jne
mov
or
pop
movb
ja
cltd
int
pop
pop
mov
mov
cmp
or
fwait
test
push
imul
bound
fdivl
jno
xchg
cmc
or
jle
das
ljmp
sub
sbb
pop
xor
leave
sbbl
fwait
cmp
mov
add
scas
lods
movsb
dec
or
push
or
inc
enter
cmpb
jae
mov
pop
ror
addr16
popf
add
clc
or
iret
hlt
push
xor
cmp
and
fadd
inc
jbe
jnp
xor
fistps
es
mov
inc
lret
btc
pop
dec
xor
mov
stc
dec
xorl
mov
xlat
mov
push
mov
push
rolb
cli
mov
mov
mov
push
jae
inc
add
mov
adc
mov
in
sub
bound
pop
mov
jl
addl
shll
cmc
pop
daa
insl
jl
mov
dec
rcrb
dec
faddl
dec
jle
gs
addb
ja
ljmp
cmp
lret
stos
pop
sub
push
cmc
mov
mov
mov
hlt
cmp
pop
in
outsb
push
jle,pn
lods
mov
pop
enter
ljmp
addb
push
adc
pop
pop
daa
lcall
xor
scas
jne
lea
jp
aam
or
jnp
or
sub
pop
xchg
aad
pop
xor
stos
loop
and
push
jecxz
or
mov
imul
jns
inc
pushf
cmp
inc
inc
jp
sbb
cs
push
fisubl
sub
and
xor
push
pop
in
es
mull
mov
test
push
jge
jns
mov
cmp
inc
xchg
in
ss
jnp
lret
fildl
clc
push
ljmp
scas
cltd
sti
mov
inc
icebp
push
popl
imul
pop
push
in
jne
stos
or
movsl
xchg
pop
xor
movsl
shll
leave
xor
adc
clc
cmc
cmp
push
sub
cmpsl
mov
or
mov
mov
test
int
fistpll
fistl
lahf
jecxz
jae
sti
pop
test
daa
xchg
inc
lahf
loopne
loopne
leave
jp
or
adc
popf
mov
loope
lcall
sub
mov
out
pop
mull
cmp
jb
repnz
movb
xor
cmp
cld
in
test
xchg
test
pop
das
cmc
lahf
pop
mov
xor
push
add
jmp
push
dec
xor
adc
sti
sub
out
lret
cwtl
xchg
xor
xlat
cmp
jp
insb
aas
loop
sub
stc
and
xor
sti
stos
in
lret
ret
ret
rcrb
or
popf
mov
push
mov
sbb
ljmp
scas
pop
sbb
lcall
in
test
out
jp
pushf
pop
xlat
sub
imul
jmp
fidivrl
cmp
push
push
xorl
outsl
jb
fwait
cmpsl
inc
cmc
jp
cmpb
xchg
lock
xor
adc
icebp
out
add
inc
push
mov
test
fcmovnu
ljmp
mov
sbb
nop
mov
mov
mov
xor
aas
aam
push
cs
in
pop
inc
scas
cld
lock
or
jl
in
fisttps
inc
clc
jae
dec
lcall
mov
out
mov
sbb
sbb
push
and
pop
jl
outsb
mov
int
insb
mov
out
fadds
das
or
into
imul
pop
les
mov
iret
inc
aad
push
mov
mov
pop
rcll
aas
push
inc
push
test
ficoml
sbb
xchg
mov
mov
incl
shlb
pop
imulb
mov
push
or
iret
jne
mov
dec
or
lahf
sub
and
pop
vmovd
cltd
aaa
test
dec
jl
jl
inc
loop
cmpsl
pop
jb
xor
mov
sub
insl
out
mov
mov
imul
pop
adc
pop
outsl
push
xchg
push
sub
sbb
and
xchg
fwait
xor
das
fmul
inc
cmc
push
xor
add
cltd
and
add
int
outsb
je
add
sub
pop
xchg
add
xor
clc
dec
cmp
push
loop
cmp
cwtl
xor
mov
add
cmp
xor
fs
adc
pushf
test
sbbb
jmp
jl
add
push
lods
ds
mov
adc
movsl
push
in
xchg
enter
rorl
popa
jmp
call
jo
and
movsl
sbb
xchg
sbb
test
in
fcmove
mov
cmp
add
push
and
push
mov
mov
test
les
cld
push
inc
repz
mul
mov
push
mov
out
or
sub
adc
mov
jmp
ljmp
test
jecxz
dec
nop
ljmp
or
out
fsubs
push
sbb
mov
ret
call
push
xchg
test
jl
pop
jp
lock
mov
lahf
jmp
cld
sahf
adc
pop
pop
repz
mov
mov
repnz
aad
mov
or
jp
or
inc
test
add
sahf
push
das
scas
push
mov
mov
mov
aas
mov
inc
dec
jo
or
sbb
dec
popa
sub
out
adc
das
stos
jmp
xchg
xor
jg
push
mov
jmp
jecxz
fidivrs
or
lods
shrl
lock
push
mov
mov
test
scas
mov
mov
shrb
fs
add
xorb
sbb
ljmp
outsb
cli
push
shll
xchg
push
pop
or
push
test
inc
adc
inc
in
add
mov
sbb
add
sbb
clc
popf
or
mov
pop
int
push
out
in
cmpsl
fadd
rorl
outsb
xor
idiv
add
inc
push
std
push
dec
daa
repnz
mov
xor
add
stc
or
or
aas
cltd
jb
mov
mov
cli
mov
pop
sub
mov
leave
sti
cld
jle
xor
cmp
adc
xchg
push
mov
jno
dec
mov
stos
insb
adc
cld
mov
jb
mov
xor
ja
mov
dec
inc
aam
jecxz
call
imul
adc
mov
adc
and
pop
mov
mov
mov
jmp
pop
xor
out
push
add
push
pop
fmuls
dec
pop
stos
jp
test
decb
pop
push
loope
gs
cltd
pop
popf
hlt
xor
sub
std
test
inc
sbb
pusha
out
xchg
lods
xchg
js
scas
sub
jb
adc
loop
imul
xchg
cltd
xchg
call
jmp
push
fldl
mov
jno
pop
dec
rclb
mov
dec
popf
pop
dec
sub
mov
ret
add
sti
sub
xchg
inc
dec
pop
mov
inc
shl
pop
loop
aaa
in
repz
ja
and
jno
jns
ljmp
inc
pop
and
aaa
imul
jno
popa
xchg
fcmovne
insb
lcall
sbbl
mov
adc
push
enter
push
stos
andl
mov
fisubs
lret
cmp
or
in
nop
or
xor
mov
and
or
pop
sub
dec
sbb
dec
inc
loop
cs
arpl
sbb
mov
mov
and
mov
sub
mov
xor
xor
jns
add
inc
inc
cli
adc
dec
mov
insb
out
push
push
dec
std
dec
dec
insl
lret
psubusb
hlt
mov
sbb
notl
cmp
jb
fsubs
nop
ror
inc
iret
adc
into
pop
pop
cld
or
data16
xchg
dec
jl
adcl
push
xchg
inc
bnd
cmpsl
jl
mov
mov
push
adc
or
push
inc
lods
cwtl
xor
sbb
mov
ficomps
es
sub
jmp
pop
cmp
mov
fnstsw
jmp
bnd
std
or
outsb
cmc
push
mov
or
scas
lods
dec
pushf
mov
jae
push
pop
lods
inc
mov
fsubl
jg
sub
imul
dec
adc
inc
stos
jecxz
mov
ljmp
mov
aaa
in
mov
cmp
enter
xor
add
push
jmp
mov
mov
aad
xchg
mov
dec
and
mov
popf
addr16
shll
jmp
jae
stos
xor
push
jnp
inc
mov
mov
dec
dec
add
inc
rorb
mov
push
xchg
inc
adc
and
and
in
mov
das
push
outsl
fldt
fimuls
fdiv
dec
mov
add
xor
xor
jge
lea
cs
mov
mov
pop
adc
sub
sbb
imul
push
rcll
out
mov
iret
fistl
or
lahf
scas
xor
inc
push
pop
lahf
cmp
xor
in
sti
adc
addl
xor
dec
lcall
xchg
hlt
div
mov
jb
lds
popa
inc
out
call
iret
cmpsl
ret
sub
notb
jo
sbb
rorl
repnz
les
add
pop
cmp
in
dec
add
mov
mov
lock
dec
adc
adc
mov
cmc
fs
push
scas
xchg
bound
mov
outsb
shlb
aas
and
lret
pop
inc
or
cmp
scas
cmp
mov
lds
fbld
inc
cltd
push
and
andl
movsb
aam
fldcw
xchg
movsb
in
daa
loope
sarb
insl
push
call
shr
pusha
sub
inc
push
addb
out
sbb
repz
sbb
add
jge
xor
or
mov
adc
sub
or
cs
dec
mov
jl
push
insl
jge
lcall
jl
sub
inc
jns
sub
rolb
add
add
fwait
ficomps
cltd
ja
and
or
jge
mov
frndint
mov
pop
out
lds
adc
and
fwait
lahf
dec
push
xor
xlat
push
add
mov
clc
dec
das
or
loopne,pt
leave
lods
mov
repnz
sub
in
mov
jne
mov
dec
in
xchg
sub
insl
call
movsl
add
sti
inc
or
and
mov
scas
sbb
call
add
pop
je
push
hlt
clc
xorb
dec
sbb
nop
inc
lahf
sub
sbb
add
xchg
shr
fucomi
add
xor
push
fbstp
imul
mov
je
xlat
add
push
xchg
adc
jne
out
pushf
mov
mov
xor
and
pusha
sbb
jns
sbb
push
xor
inc
and
inc
mov
ljmp
mov
jmp
dec
dec
mov
push
test
add
outsl
lahf
dec
les
mov
lret
mov
addr16
jns
test
imul
mov
and
lds
lahf
nop
xlat
in
daa
cltd
cmp
mov
ja
filds
sbb
xchg
aaa
cld
test
inc
ja
xchg
fcoms
inc
in
orl
in
cmp
mov
mov
adc
xor
sub
mov
dec
bound
jmp
xor
clc
ss
stos
int
jp
popf
jmp
cmpsl
cmpsl
inc
push
dec
xor
and
cs
inc
ret
popl
sbb
dec
adc
lock
inc
cwtl
pop
xor
mov
lea
mov
sub
xchg
and
dec
ds
push
cmp
jge
int3
test
in
int
xchg
push
pop
fsubl
or
mov
int
jno
add
add
fbstp
add
mov
push
cmp
ja
movsb
mov
cli
cld
xchg
xor
fs
mov
push
add
fwait
lcall
jl
jl
add
jb
lea
outsl
les
test
xor
pushf
ret
insb
cmp
ja
lret
push
scas
push
dec
sub
sub
jns
loopne
jo
out
fmul
pop
std
and
shlb
mulb
adc
shl
mov
jle
xchg
xor
sbb
hlt
adc
adc
cs
xchg
adc
in
and
fiaddl
mov
in
cmp
mov
inc
jbe
mov
push
adc
sbb
aas
xchg
out
fcmovnb
das
cmp
js
mov
cld
jb
mov
mov
subb
or
mov
flds
outsl
js
dec
les
sbbb
pop
cs
push
aas
ret
adc
jmp
shrb
sub
or
movsb
inc
jecxz
and
ja
scas
adc
js
rorb
or
xchg
repz
mov
pop
sub
push
lret
jno
pushf
mov
mov
icebp
mov
daa
sbb
rcrl
push
and
jge
sub
add
push
ljmp
pop
mov
inc
in
cmp
xor
inc
cwtl
aas
jp
cltd
mov
push
rdtsc
sbb
xchg
jp
insb
xor
repz
lcall
js
cmp
ljmp
add
sbb
loopne
jp
lahf
sbb
std
cltd
lret
dec
repnz
jno
add
mulb
xchg
fs
jmp
pop
jns
add
ret
mov
mov
sbbb
jl
mov
mov
movsl
xor
es
hlt
lock
add
xor
and
jmp
fsubrs
sub
sahf
stos
leave
jle
insl
and
es
adc
xchg
mov
scas
mov
mov
push
cmp
mov
xchg
dec
mov
dec
xchg
mov
cmc
dec
cs
inc
push
mov
sub
mov
lods
mov
orb
mov
push
in
push
jg
mov
push
pusha
mov
dec
dec
cmp
stc
cwtl
movsb
adc
adc
out
inc
jle
pop
fnstsw
jmp
shll
ljmp
xor
bnd
es
sub
pop
adc
call
inc
loopne
or
and
push
xor
jl
dec
xchg
shll
pop
add
lahf
mov
jbe
jbe
jno
lock
hlt
inc
lea
dec
mov
and
pop
loope
cli
pop
lea
sbb
dec
push
and
adc
mov
dec
add
daa
pop
sub
js
sub
test
adc
lods
outsb
mov
jne
cmp
jl
loopne,pn
xchg
fdivp
stc
mov
mov
popf
sub
adc
cmp
sub
bound
mov
fs
jle
std
add
loop
cmp
aam
ret
outsb
adc
xor
sbb
push
dec
test
inc
lock
dec
mov
cld
xor
or
testb
sbb
ljmp
stc
or
sub
sbb
xchg
stos
test
mov
dec
jno
xchg
jl
mov
roll
mov
pop
negl
jo
scas
aaa
and
mov
pusha
fsubl
test
pop
stos
pop
jge
lods
ljmp
pop
mov
jp
dec
call
fwait
dec
xor
pop
shll
dec
push
mov
and
mov
aad
lret
scas
sub
jecxz
sahf
sbb
sbb
shl
mov
loope
and
repz
push
es
mov
jmp
data16
sbb
inc
cmp
push
bnd
jmp
adc
enter
push
adc
add
push
and
in
sub
loope
lret
sti
adc
push
xlat
and
outsl
xchg
insl
push
pop
dec
xchg
hlt
add
jnp
sbb
lret
fcmovnu
push
cmp
mov
or
insl
stos
push
and
push
imull
rcrb
enter
xchg
jg
xchg
daa
jecxz
pop
adc
add
jecxz
xchg
pushf
fwait
idivb
scas
pop
cmp
movsb
jnp
mov
iret
mov
push
sbb
inc
aam
inc
mov
and
xor
cwtl
mov
mov
push
inc
xchg
bound
inc
stc
and
mov
add
pop
orl
xor
insl
inc
push
fists
sbb
adc
enter
jae
iret
inc
cmp
data16
xor
mov
mov
add
je
cmp
sbb
xor
les
fmull
jecxz
sbb
jmp
mov
aas
ret
xlat
es
ret
mov
arpl
bound
fwait
mov
sub
mov
imul
test
or
xor
sub
inc
popa
outsl
mov
sub
pop
dec
sbb
insl
popa
and
cmp
loopne
shlb
shrl
loop
cmc
dec
popf
jmp
test
xor
mov
or
mov
sub
mov
inc
enter
sub
gs
mov
imul
mov
mov
sub
adc
insl
xor
repz
in
cli
mov
mov
mov
jb
push
xor
add
dec
gs
mov
popa
mov
dec
sbb
jns
je
xchg
je
inc
out
xlat
dec
imul
outsb
cmp
adcl
ljmp
icebp
fwait
jl
das
iret
or
mov
jae
sub
xor
fdivrs
adcl
or
aaa
xchg
incl
push
loope
jo
adc
movsb
jmp
jne
std
js
inc
fs
xchg
and
pop
inc
sub
pop
std
xrelease
jmp
adc
mov
mov
push
xchg
mov
cmpsb
dec
or
mov
aad
mov
ljmp
jmpw
pop
sub
mov
pop
repz
mov
out
sbb
mov
cmp
push
pop
sub
jns
sbb
mov
insb
add
pop
popa
les
jge
in
or
mov
mov
std
out
cmp
jp
jne
pushf
adc
movswl
and
setb
xchg
mov
test
cld
jecxz
mov
mov
js
ret
outsl
call
popa
xor
sbb
fstp
mov
roll
loop
dec
xor
jmp
das
inc
punpcklbw
pop
mov
inc
adc
ret
rclb
shl
sti
das
gs
loope
out
cmp
iret
and
add
xchg
mov
xchg
imul
jecxz
and
jle
repnz
lock
jns
jmp
rol
or
dec
not
imul
and
push
cmp
inc
or
mov
in
ljmp
ja
mov
stos
mov
lret
cmp
fs
sub
sub
loopne
call
jl
cmpb
loop
sbb
scas
lock
push
aaa
ljmp
xchg
fldcw
add
aam
xchg
std
les
jmp
popf
push
pusha
mov
mov
jno
sub
ret
int
shll
and
sub
aam
xor
dec
or
sbb
imul
xchg
cmp
adc
or
inc
mov
sub
push
popf
push
or
cltd
mov
xor
xchg
roll
pop
jb
sahf
push
mov
inc
cmp
inc
mov
imulb
cmpsb
sti
sub
mulb
adcb
and
aaa
push
mov
dec
jns
scas
adc
cmp
shrw
and
int3
inc
lea
sbb
pop
lahf
xor
out
add
imul
push
mov
fcompl
fwait
push
push
jle
call
out
pusha
bound
sbb
shll
dec
or
inc
cmp
push
and
ret
hlt
inc
jmp
subl
add
dec
xchg
addl
fwait
push
add
xorb
pop
push
outsl
mov
xchg
add
roll
pop
notl
ds
inc
cmp
mov
movsb
inc
or
mov
aad
shlb
cli
lea
push
leave
cld
sub
insb
daa
add
ss
clc
jle
add
push
repnz
inc
bound
or
orb
jb
aam
sbb
mov
jecxz
test
ja
xor
push
mov
adc
or
add
gs
jb
daa
in
and
test
pushf
adc
dec
ljmp
lea
add
es
stc
xor
pop
dec
mov
push
push
sub
xor
push
push
ja
fwait
sbb
in
and
pop
fldl
inc
pop
mov
loope
xor
cltd
fiadds
cmpsl
adc
sub
xchg
dec
les
lock
scas
or
out
imul
lock
jle
cmpb
mov
push
loope
push
jmp
dec
bnd
inc
sti
pop
lret
fidivl
push
jge
jmp
fwait
imul
xchg
sub
mov
stos
ucomiss
mov
jnp
fistpll
lods
sub
jns
addr16
mov
fsubr
inc
cwtl
rcrb
popa
test
jo
sbb
lahf
sub
scas
repnz
xchg
inc
xchg
dec
add
lea
xchg
lret
sti
daa
jge,pn
xor
dec
mov
push
mov
adc
cmp
sbb
scas
cmpsb
jae
jmp
dec
mov
or
int
xor
mov
cmp
and
in
push
shlb
nop
mov
xchg
loopne
and
mov
xor
and
push
cld
mov
cli
and
push
inc
mov
out
loopne
aad
lret
aaa
sub
sub
xor
aaa
imul
mov
and
lds
adc
dec
cld
push
mov
xchg
jae
inc
in
maskmovq
jle
sub
bound
xchg
add
lods
sbb
les
inc
in
scas
add
cmp
dec
mov
xchg
mov
pop
loop
lock
insb
rcrb
push
mov
pop
pop
das
cmp
jg
loop
leave
repz
rorl
rcll
cmp
jp
cmpsl
insb
lock
mov
sar
imul
sahf
testl
xchg
mov
scas
test
clc
mov
lods
iret
jns
pop
adc
sbb
scas
sbb
push
xchg
outsl
inc
js
loope
jp
cmpsl
leave
xor
pop
add
divl
aaa
inc
in
aam
cli
push
arpl
pop
jne
jbe
enter
sti
and
ss
sbb
jno
rcll
lock
out
pop
enter
adc
mov
test
movhps
jo
push
cmp
push
cmp
loope
sbb
test
xchg
mov
mov
rol
xchg
xchg
in
xchg
repz
mov
jb
xchg
mov
xor
out
cmp
adc
test
sbb
cmp
rcl
add
insb
add
sarb
jno
scas
push
jnp
adc
inc
jge
hlt
ret
sub
stc
fidivrl
sbbb
mull
push
daa
push
cmp
add
insl
inc
hlt
pop
aaa
mov
int
insl
add
rcll
cmp
cmp
lods
or
fs
in
cmp
xchg
jae
orl
mov
ljmp
xor
dec
mov
xor
test
fs
inc
mov
out
cmp
pushf
push
setle
push
nop
xchg
les
mov
mul
fcmovu
adc
sub
mov
mov
movsl
movsb
add
jns
pop
sub
xchg
sub
mov
add
sub
rolb
loop
dec
xchg
cmp
out
add
inc
cmp
inc
sub
nop
adc
popf
jb
repz
fcmovbe
adc
stos
aaa
and
in
dec
loopne
xchg
test
pop
lret
dec
push
cmpsb
jo
orb
loope
sbb
mov
xchg
loop
mov
ret
adc
dec
cmp
mov
jae
inc
sub
mov
repnz
add
cmpsl
lds
sbb
fidivs
ficoms
cwtl
sbb
mov
mov
inc
sub
mov
out
stos
std
cwtl
in
fistps
adc
mov
cmp
pop
jne
sub
jp
cmp
enter
ret
sub
pop
ljmp
aas
cwtl
cs
stc
lret
ja
sbb
xchg
jb
mov
sbb
loope
mov
insb
dec
sub
or
and
test
adc
sti
ds
push
hlt
roll
mov
hlt
inc
jne
gs
sub
mov
cli
aad
push
out
pop
add
cmp
clc
mov
movsl
lret
mov
andb
adc
sub
xchg
pop
lock
std
pop
dec
push
mov
sub
dec
setno
imul
mov
insl
mov
xchg
xchg
call
jmp
inc
mov
mov
stc
outsb
mov
lcall
loopne
stc
fs
push
test
addl
cli
fmul
sub
push
dec
cmp
loope
call
adc
xchg
lods
jae
cmpsb
inc
jo
lahf
inc
add
sub
scas
cli
and
nop
sub
icebp
add
cltd
inc
jne
icebp
jno
xchg
pop
into
pop
mov
or
pop
push
imul
in
jb,pt
sub
add
movsb
push
das
gs
je
out
adc
jle
sub
add
dec
test
outsl
cmp
pop
xchg
daa
mov
imul
sarl
fwait
call
adc
or
mov
test
in
lahf
das
add
js
jp
and
sbb
ror
es
movsb
sbb
sbb
inc
jne
mov
lea
jmp
inc
into
or
push
js
pop
cwtl
jecxz
inc
mov
xchg
sub
mov
and
in
jmp
stc
push
xorl
addl
je
aad
repnz
lahf
loope
lcall
lock
cmp
push
hlt
incb
sub
and
sbb
enter
outsb
xchg
repz
xchg
aad
add
and
js
mov
cmp
sar
jl,pn
cmp
scas
enter
fwait
movsb
in
sbb
xchg
mov
jg
mov
repz
pop
mov
cli
xchg
outsb
aaa
out
cli
xor
lock
mov
lcall
popf
mov
or
bound
int3
cmp
or
in
xchg
rol
push
sub
aaa
in
add
mov
imul
or
aam
and
rorl
ja
mov
dec
sub
xchg
mov
mov
rolb
lea
pop
fadds
pop
cltd
jnp
or
arpl
loop
cwtl
xchg
jg
gs
aam
out
xchg
add
jl
out
or
imul
andb
std
hlt
stc
jo
loop
insl
les
xor
cmc
movsb
dec
dec
and
in
jne
mov
ret
pop
jg
push
dec
stos
dec
mov
xor
sub
inc
cmp
andb
push
arpl
aad
dec
sub
aas
out
jp
rol
inc
mov
cmp
sub
mov
clc
and
sub
and
fcomps
inc
sub
out
push
inc
pop
xchg
sbb
and
repnz
pushl
div
and
cmp
inc
push
in
or
push
test
jb
pop
subb
and
inc
fwait
nop
mov
repnz
mov
movsl
dec
or
pop
loope
mov
sbb
sub
into
out
adc
or
fucomp
sub
movsb
roll
aas
jb
push
repz
lahf
lahf
sub
xchg
or
dec
and
stc
xchg
adc
cli
jns
lcall
adc
je
imul
frstor
sub
adcl
in
ljmp
aad
jns
lret
pop
out
lret
and
fcom
mov
xchg
loop
repz
mov
adc
loopne
gs
gs
mov
arpl
dec
ret
adc
cmc
mov
lahf
je
inc
cmpsl
dec
or
lahf
sbb
lahf
cltd
xor
adc
gs
data16
in
aad
roll
into
add
pop
frstor
xchg
adc
filds
jae
and
or
inc
fdivrl
int3
ja
push
mov
mov
xor
bound
sub
push
jno
insb
mulps
sbb
lret
xchg
sbb
inc
mov
rcrl
jns
sarl
adc
xor
dec
mov
loopne
mov
lods
add
mov
jae
fucomi
adc
imull
mov
dec
shrb
add
hlt
dec
fstl
or
jge
jl
lods
aad
imul
fmuls
ds
pop
xor
test
sub
scas
inc
fwait
mov
add
ljmp
ret
xchg
int3
subl
flds
test
inc
test
ss
pushf
xor
mov
pop
outsl
into
push
in
mov
lahf
imul
push
jl
faddl
or
xchg
mov
lcall
hlt
and
push
xor
aam
sbb
inc
and
lods
rcrl
inc
jle
sub
mov
cld
xchg
lret
bnd
or
ret
sbbb
cmp
dec
stos
scas
lods
jmp
mov
sbb
inc
jns
dec
mov
mov
mov
mov
sbb
jne
out
or
xor
fs
out
and
loope
push
and
fs
sbb
inc
xchg
sbb
sub
mov
out
pushf
xlat
add
cmp
mov
pop
in
push
hlt
inc
shrb
sbb
or
xchg
test
xchg
sub
inc
sub
repz
and
movsb
aad
jmp
pop
cmp
out
mov
inc
sbb
cs
or
dec
or
mov
pop
adc
insb
lcall
inc
xor
inc
mov
enter
add
push
popf
mov
add
jne
fwait
sub
fistl
jmp
subl
xchg
imul
xchg
js
pop
loop
out
fdivrs
outsl
out
rcrb
jle
cmpl
push
scas
sbb
lods
inc
ljmp
testl
pop
mov
and
movsb
and
jno
stos
add
mov
ja
movsb
mov
mov
cmp
xlat
ret
dec
loopne
int3
xor
cmpsb
fisubs
rorl
sbb
clc
mov
lock
xor
add
sbb
xchg
pop
mov
and
test
cwtl
sti
adc
push
jle
call
test
nop
arpl
test
sub
sbb
dec
outsb
in
icebp
and
mov
icebp
addl
mov
repz
enter
in
lcall
cmpsl
cmp
mov
push
mov
inc
mov
push
pop
mov
insl
cwtl
sbb
xor
mov
add
das
addr16
pop
dec
lods
xor
sarl
cmp
or
out
sbb
adc
sbbl
push
daa
pop
out
adc
gs
cmp
jno
leave
mov
or
shlb
dec
inc
cmp
mov
aas
and
and
daa
pop
push
sub
add
enter
push
mov
mov
ficoms
sbb
or
movsb
push
mov
push
xor
cmp
ljmp
into
mov
pop
mov
icebp
call
or
lods
sbbb
cld
add
pop
jge
pop
leave
cmpsb
push
testl
outsb
cmp
mov
js
pop
aad
mov
ret
or
push
lahf
lds
add
add
xchg
leave
mov
or
out
iret
sbb
xchg
lahf
push
xor
and
test
insb
mov
add
push
lods
in
mov
fnstenv
xchg
hlt
rorb
push
in
lcall
mov
cmpsb
add
pop
sbb
pusha
daa
shll
jmp
in
pop
leave
pop
mov
xor
or
pop
and
inc
adc
out
jne
nop
and
cwtl
jg
or
mov
jl
je
lahf
neg
fimuls
xorl
fadds
mov
lods
test
vmovups
push
gs
addr16
aad
bound
dec
add
ret
adc
xor
lods
mov
jge
add
adc
iret
xchg
cmp
test
jge
arpl
shrb
push
push
shrl
fdivs
jnp
fdivrs
std
shlb
data16
cs
xor
or
inc
inc
inc
xor
cld
dec
in
in
pushf
pushf
dec
insl
dec
push
inc
and
mov
mov
sub
cli
mov
es
sub
jp
pop
rolb
dec
add
mov
mov
fstpl
rcrl
je
aad
jbe
stos
push
dec
sub
push
hlt
push
cmp
mov
stos
loope
adcl
call
popa
les
adc
jmp
inc
lret
or
lods
mov
mov
int
pop
push
pop
gs
adc
dec
dec
mov
popf
sub
pushf
je
cmc
cmp
data16
push
add
jmp
xchg
lods
lea
mov
push
pop
pop
pop
or
sub
mov
and
add
arpl
lret
lea
lock
arpl
mov
jle
or
iret
sti
iret
push
jle
pop
push
add
call
push
add
rolb
lret
or
pop
inc
mov
dec
add
sbb
or
inc
adc
jmp
sahf
xchg
adc
push
icebp
ret
cmp
fmuls
data16
addr16
mov
mov
push
inc
inc
dec
cltd
lcall
push
adc
push
mov
mov
sub
jp
lock
cmp
mov
lods
jp
xchg
lea
dec
sbb
inc
cmpsl
fsubrl
test
stos
cmp
lcall
push
mov
in
loopne
jg
dec
jp
ficomps
sub
cmp
cmc
sub
daa
xchg
pusha
lock
sbb
add
idivl
xor
push
jle
test
xorb
xchg
and
lahf
and
cmc
cwtl
in
jmp
lret
repnz
test
mov
shll
aad
mov
xor
gs
ficompl
adc
add
jae
pop
mov
mov
testb
xor
jmp
ss
aas
jno
sub
out
out
pop
xchg
in
add
je
fs
pop
dec
popa
sub
adc
fcomps
push
out
jne
xor
dec
sub
repz
adc
pusha
mov
push
outsl
or
outsl
js
sbb
sti
xchg
cmpsl
imul
or
ret
mov
xchg
arpl
jmp
fistpl
mov
mov
iret
test
ret
mov
js
sbb
xchg
mov
sub
lds
in
aas
sti
cli
mov
test
mov
rorb
stos
xor
mov
push
repz
cmpsb
xchg
xchg
stos
sub
outsb
pusha
push
call
pop
xor
sub
mov
roll
nop
push
iret
mov
pop
cmp
dec
sub
stc
jne
mov
shll
sub
adc
cmp
add
aaa
add
insb
jns
xor
cmpsb
test
cld
dec
ficomps
fidivl
ds
xchg
cmpsb
inc
jge
and
idivl
jbe
dec
push
test
dec
mov
pop
or
xor
pusha
ja,pn
lods
and
movb
popa
or
sbb
pavgb
out
scas
push
ret
mov
jns
fidivl
repz
cmc
add
adc
cmp
inc
enter
ds
mov
cwtl
dec
mov
pop
and
cmpsl
std
leave
shrl
fs
test
jb
sbb
leave
and
fsubr
or
push
call
mov
std
sub
jmp
mov
xlat
insl
push
push
unpcklps
imul
mov
jne
roll
inc
shlb
push
aam
inc
test
lods
jb
push
mov
inc
jle
js
stos
xchg
and
aad
icebp
add
sbb
dec
push
mov
lret
push
out
inc
xchg
loope
xor
mov
add
idiv
mov
roll
mov
aaa
scas
in
std
push
sub
push
clc
mov
dec
inc
idiv
adc
jnp
or
xchg
mov
nop
loop
push
popf
xor
lds
pop
cmp
sub
mov
xor
and
xchg
mov
xor
gs
aas
pop
inc
sub
or
sbb
jle
xchg
jecxz
shrl
and
out
js
add
jns
sti
rclb
jmp
test
and
adc
pop
shll
mov
out
mov
pop
fistpll
sbb
cs
pop
scas
int
mov
es
out
push
inc
or
movsb
mov
lret
jo
pop
pop
cli
xor
cmpsb
sub
sbb
cmpsb
shrl
xor
lods
rol
lahf
in
cmpsl
xor
dec
fldl2t
call
cmpsb
jge
loope
jl
out
mov
enter
xor
shlb
movsb
stc
icebp
jle
push
adc
adc
loope
mov
shlb
iret
in
pop
push
sbb
cli
lds
pop
lret
mov
cmp
imul
stc
xor
lahf
mov
mov
fcompl
add
lcall
jmp
mov
cmpb
jle
icebp
xor
mov
push
popa
outsb
xchg
or
pop
adc
inc
cmp
pusha
es
or
inc
mov
arpl
rclb
push
push
push
sti
pop
imul
jns
hlt
dec
mov
push
test
clc
sbb
sub
ds
xorb
in
dec
es
inc
dec
shll
cmp
test
push
mov
test
mov
lock
xchg
movsb
aam
push
ds
je
push
mov
mov
je
aam
mov
ljmp
or
popf
and
jbe
gs
push
jnp
loope
arpl
push
add
cmp
adc
mov
popf
mov
and
scas
cs
mov
stc
cs
add
mov
aad
adc
pushf
nop
popa
fsub
sbbl
pop
dec
ficoms
push
enter
pop
push
mov
adc
and
rcl
fistpll
popa
xor
or
jl
out
xor
jl
enter
pop
sub
icebp
test
pop
push
insb
pop
out
sub
pop
pop
mov
dec
mov
sbb
cmp
gs
xchg
out
enter
dec
dec
lock
cli
cmp
mov
push
leave
aaa
mov
into
jecxz
sub
enter
inc
movsb
lock
in
je
add
mov
dec
mov
pop
nop
xchg
pop
loop
xchg
mov
mov
xchg
sub
js
lds
jle
xor
loopne
and
push
jl
hlt
sti
jae
mov
fwait
movsl
lcall
xchg
cmpb
rol
inc
or
bound
mov
mov
xchg
adc
arpl
punpckhdq
pop
dec
fs
cltd
lds
out
jbe
sbb
xlat
ss
sti
inc
idivb
lods
jle
jl
hlt
jge
js
lahf
xchg
cmc
dec
mov
lahf
dec
cmpsb
dec
inc
stos
movsb
jecxz
jmp
and
stc
or
pushf
pop
mov
lods
jne
xchg
jmp
dec
popf
xor
add
int
pop
dec
dec
cmp
mov
push
loop
ja
insb
mov
jge
sarl
orb
sbb
dec
scas
or
jg
rorb
add
xor
cmp
mov
stos
push
das
pop
and
hlt
lds
pop
loopne
out
push
loope
iret
cmp
mov
adc
out
rclb
dec
mov
loope
jns
jne
je
sub
and
xchg
popa
leave
ret
mov
sti
dec
inc
mov
push
jl
in
add
fldl
mov
adc
lret
idiv
mov
aas
aas
ljmp
bound
push
sahf
mov
in
jae
pusha
lods
test
cmp
ret
bound
std
push
in
outsb
test
loope
adc
mov
mov
mov
xor
rcll
aaa
std
cmp
lods
in
sbb
push
ret
orl
and
jns
mov
jno,pn
xor
popa
pop
lret
outsl
lea
dec
cltd
jmp
movsb
aaa
bound
insl
cmp
push
jns
fwait
or
jge
dec
push
leave
das
test
dec
movsb
push
dec
mov
xor
leave
js
sbb
bound
sub
sub
and
jle
out
pusha
test
mov
pop
or
decl
fidivs
popf
cmp
pop
jecxz
movsl
cmpsl
xor
push
push
test
inc
mov
daa
xchg
sar
stos
sti
sub
cmp
xor
outsl
in
loop
jbe
cmpb
das
xchg
js
loope
xor
mov
out
sahf
cmpsl
pop
pusha
mov
out
adc
int
push
dec
mov
popa
push
xor
push
cs
fcmovnb
mov
cmp
jae
pop
add
push
stos
sub
das
imul
mov
push
and
icebp
in
inc
inc
addb
lcall
jns
stos
sub
dec
xorb
sbb
rcl
push
push
jp
inc
in
mov
fsub
jns
nop
mov
inc
mov
aad
negl
jecxz
cs
dec
jno
mov
dec
cmp
push
mov
inc
notb
pop
adc
inc
cmpsb
and
das
imul
mov
lods
movsb
xor
mov
xor
mov
push
lods
ret
stos
push
dec
sti
mov
lds
mov
inc
icebp
cmp
insb
test
mov
dec
aam
sahf
scas
imulb
aas
jno
sub
fcompl
and
xlat
mov
dec
call
or
inc
sub
and
out
push
mov
jecxz
and
stos
inc
mov
cli
or
in
inc
xchg
adcl
in
jl
int3
sbb
dec
push
mov
out
pushf
mov
cmc
jmp
rolb
sbbl
cltd
pop
push
push
pop
cmp
data16
lcall
pop
mov
fwait
pop
test
inc
shll
jg
cltd
rolb
mov
inc
out
stc
adc
jl
pop
cmc
outsl
mov
or
out
subb
lods
sub
fnstenv
mov
or
rclb
sarl
fwait
sbb
and
scas
scas
cmp
or
in
popa
in
mov
add
popf
dec
pop
sub
mov
pop
sub
lcall
add
mov
test
inc
add
enter
inc
and
bound
lea
mov
lods
pand
int3
inc
cli
fs
mov
enter
xchg
dec
dec
inc
adc
ret
lret
lea
imul
add
or
mov
cmp
test
lods
inc
mov
push
in
out
xchg
inc
adc
mov
loopne
hlt
gs
outsb
inc
fdiv
call
adc
add
mov
data16
ds
jecxz
lret
scas
rsm
xor
mov
gs
or
mov
mov
push
dec
jecxz
imul
scas
stos
xchg
mov
jmp
rclb
jge,pn
aam
sub
ja
cld
mov
jl
and
lods
add
bound
inc
test
sbb
fstpt
xor
and
xchg
add
adc
ror
sub
sahf
push
lds
rcl
mov
testl
shr
lods
push
adc
xor
mov
sahf
or
mov
stos
jp
idivb
xor
out
mov
idivl
mov
fiaddl
add
popa
gs
pop
mov
cld
xor
jp
pushf
mov
add
inc
push
push
dec
sahf
pop
clc
nop
and
mov
insb
cmp
push
rclb
lea
jge
or
mov
xor
mov
iret
pusha
lahf
dec
cmp
jmp
shll
mov
push
jne
add
insb
clc
pop
ja
and
aad
dec
mov
dec
cmp
mov
or
rcrl
xchg
jno
aas
test
and
repnz
stos
inc
push
add
push
push
adc
shlb
loope
sbb
cmc
leave
cmp
aaa
icebp
ss
mov
or
mov
dec
not
jecxz
adc
push
subb
add
mov
nop
test
jmp
adc
nop
pop
cmpsl
pop
inc
test
scas
and
adc
sub
mov
xchg
in
mov
lods
xchg
mov
cmp
jo
ljmp
lcall
and
stos
lcall
inc
in
fbld
int
pop
out
dec
xchg
lahf
mov
pop
fbstp
or
jmp
xor
pop
cwtl
jo
adc
jmp
add
jnp
sub
mov
add
sub
push
push
jmp
loop
push
mov
cwtl
inc
enter
lods
inc
mov
adc
ja
mov
fidivrl
into
mov
outsb
cli
cli
ss
fs
aaa
xchg
js
add
imul
cmp
int
lods
popf
push
insb
and
mov
mov
mov
in
sbb
sbb
negl
test
mov
in
shll
jne
push
add
pop
scas
mov
add
inc
lods
sbb
mov
add
shll
je
jl
and
clc
repz
jns
stc
mov
mov
outsb
into
stos
add
add
clc
addr16
dec
adc
jns
dec
pop
adc
jb
add
lahf
out
pop
loopne
ljmp
mov
adc
lods
idiv
xor
ds
loope
in
cmp
daa
mov
xchg
push
loopne
xor
ss
in
ljmp
negl
cmpsb
pop
mov
repz
insl
movsl
rolb
mov
jae
inc
inc
enter
pushf
insb
lret
add
push
adc
cmp
into
icebp
adc
call
jp
into
push
sbb
mov
mov
or
push
adcb
and
jge
hlt
aas
out
sbb
cmp
xchg
pop
and
and
xchg
test
fldl
xchg
cmp
fldcw
movsb
cmpsb
dec
adcb
push
int
or
dec
shr
mov
jns
outsl
fs
or
stos
hlt
ret
bnd
mov
aaa
or
outsl
inc
inc
adc
mov
cmpsl
cmpsb
sahf
and
jb
sbbl
and
repz
xlat
xchg
push
repnz
test
iret
lods
aas
ja
fildll
insb
ljmp
jo
mov
jmp
jo
hlt
sub
and
fs
iret
push
popf
jns
add
pop
mov
aam
inc
xchg
cwtl
imul
mov
and
jb
mov
loop
adc
ljmp
mov
cmpsb
mov
or
jnp
mov
push
add
in
inc
pop
mov
scas
xchg
jmp
stos
mov
adcl
je
fdiv
mov
popa
xchg
call
xor
xchg
mov
pop
js
adc
xchg
es
push
insl
in
stos
push
cli
jl
fcmovnbe
sbb
imul
or
jne
int3
out
int
jmp
xchg
ja
popf
das
fidivl
xchg
pop
inc
and
hlt
push
pop
es
addr16
jg
jl
xchg
stc
mov
or
push
jmp
je
xor
iret
ficompl
dec
add
pop
in
ds
sbb
out
rclb
ja
xor
jb
pop
cmp
sbbl
pusha
js
bound
push
or
mov
add
cmp
inc
mov
dec
mov
and
cwtl
adcl
aam
mov
je
out
fildl
mov
loop
pop
jnp
lcall
divl
adc
aam
pop
xchg
sbb
fstl
scas
outsb
inc
test
push
sbb
cs
inc
mov
mov
shll
out
and
add
jecxz
cmpsl
cmp
mov
cmp
mov
in
add
or
sahf
addb
mov
mov
addr16
cmpsl
xchg
xor
pop
cmpsl
cmpsl
xchg
lock
popf
cwtl
dec
add
or
mov
js
fwait
pop
test
sbb
in
ret
pop
andl
sub
enter
lret
xchg
cmpsb
aaa
xchg
cmpb
add
sub
pop
enter
repnz
add
lea
imul
xchg
push
sub
outsb
sbb
cmc
shrl
lods
fnstsw
out
push
pop
sub
leave
cmp
mov
inc
add
mov
push
dec
lds
in
rcrl
enter
mov
fidivl
fidivrl
dec
lcall
mov
out
clc
sar
inc
dec
adc
mov
pushl
push
and
nop
sub
push
dec
adc
test
and
aas
test
cmp
outsl
push
repnz
cmp
jbe
daa
jb
pusha
pop
mov
jge
inc
cli
cmp
gs
adc
into
clc
xor
mov
cwtl
repnz
lret
pop
insb
jno
in
jge
inc
push
mov
gs
xor
mov
lcall
shld
xchg
jge
std
lea
dec
in
inc
xchg
imul
ja
mov
in
ret
in
mov
rol
push
cmpb
sbb
cs
js
cltd
fsubrl
pop
fs
sbb
mov
fcoml
push
sub
push
test
jne
xchg
pop
cld
xor
pmaxub
push
out
nop
dec
js
sti
fdivr
outsb
subl
push
mov
scas
dec
fsubrs
sahf
ljmp
rcrl
pop
jo
jecxz
push
lods
push
popa
jne
loopne
mov
dec
inc
sub
jnp
mov
outsl
aaa
ficomps
out
lds
jge
mov
mov
imul
addr16
and
loop
sbb
push
cltd
fldl
test
dec
repnz
inc
std
push
into
test
sbb
add
hlt
inc
pop
xchg
dec
incl
popf
pop
dec
push
scas
leave
sti
xchg
jno
popa
push
mov
arpl
cmp
xchg
or
aaa
aas
insb
xchg
push
jecxz
das
jmp
xabort
adc
xchg
addl
push
insl
lods
imul
pop
outsb
rol
movsl
pop
pop
fldl
xchg
daa
add
out
xor
xor
push
push
pop
ljmp
mov
sub
rcrb
push
lods
lds
jbe
mov
les
hlt
arpl
mov
out
sub
mov
in
and
lock
aad
xlat
xor
in
cmc
or
fists
and
fisubrl
sub
mov
fwait
cmp
mov
movsb
idivl
pop
outsb
xchg
ss
xchg
sub
in
jae
out
sbb
and
mov
aam
jmp
outsl
push
cmp
xchg
test
jmp
push
test
push
mov
je
loopne
fwait
pop
ds
jp
xlat
inc
repnz
call
mov
cmp
fsubrl
bound
mov
popa
out
add
flds
pop
sbb
shll
test
add
mov
movsl
or
int3
mov
shrl
dec
cmp
fdiv
out
cmp
fstpl
adc
mov
pop
xchg
test
add
mov
andl
sbb
subb
cmpsb
movsb
enter
das
aad
idivl
mov
pop
loopne
lock
adc
adc
rcr
push
inc
inc
jnp
sbb
add
je
mov
pop
jmp
cmp
shlb
test
xlat
dec
inc
pop
dec
dec
ss
lock
fwait
mov
jnp
xchg
inc
cs
push
and
rcrl
sub
jecxz
cmp
and
mov
xchg
adc
lahf
in
adc
inc
cmp
out
invd
imul
gs
inc
das
out
push
mov
pop
mov
push
mov
and
pop
fsts
scas
jmp
out
mov
mov
cltd
outsb
xchg
mov
jae
loope
adc
jns
das
ds
mov
and
bound
push
push
stc
in
cmp
push
push
das
cltd
adc
imul
movsl
mov
fbstp
lahf
sub
ret
arpl
mov
ja
bound
push
inc
push
les
pop
jo
dec
pop
pop
and
adc
in
jbe
aas
mov
sbb
mov
sbb
in
outsl
lea
iret
or
stos
pop
loopne
int3
adc
fwait
and
xchg
dec
push
cmp
lcall
pop
mov
sbb
aam
xchg
or
cs
mov
insl
xchg
jmp
std
rcrl
loopne
fld
or
adc
leave
and
sbb
icebp
ljmp
add
xor
int
add
push
mov
cmp
pop
xchg
cs
mov
stos
mov
rolb
lods
je
xchg
sub
jb
mov
ss
sub
jnp
cmp
icebp
xor
add
in
sbb
push
or
xor
out
add
sbb
mov
jg
into
push
push
or
push
jecxz
dec
std
or
push
lock
add
dec
mov
add
pop
dec
lahf
jno
xor
icebp
frstor
push
jg
dec
push
inc
add
neg
repz
lods
js
lds
dec
je
int
in
adc
lods
ja
add
inc
inc
xor
cmp
sbb
push
sub
out
sti
test
xchg
and
jp
fcoms
add
mov
notb
loop
push
cld
iret
inc
jae
imul
ja
stos
ror
testl
inc
mov
push
cld
test
lahf
ret
dec
xor
iret
or
sbb
xchg
mov
cmpxchg
cmp
push
fwait
je
jae
cli
popa
sbb
mov
outsb
xchg
cmp
sbb
sub
js
ficoms
and
lock
jbe
xchg
mov
xchg
push
pop
sbbl
iret
out
sub
in
arpl
mov
push
ss
test
mov
xchg
insl
xor
testb
jmp
push
pop
and
cli
push
stos
cltd
pop
inc
testl
enter
mov
aam
popa
adc
add
fldt
lcall
push
fisubrl
xchg
and
nop
stc
add
add
adc
insl
xor
inc
push
jg
cmc
xor
sub
sub
or
dec
cwtl
fstps
movsl
lahf
jg
daa
jns
cmpsb
add
sub
faddl
xlat
adc
sub
popa
mov
xor
fists
and
mov
mov
sub
xchg
fwait
loop
loopne
and
jbe
rcrl
call
add
xchg
aas
cmp
shr
inc
or
add
ljmp
repz
clc
pop
or
sahf
sub
sub
std
rcl
fcom
stos
decb
push
mov
add
js
adc
mov
sub
cli
xor
bound
fwait
cmp
insl
jg
mov
mov
xor
ss
dec
aaa
pop
add
shrb
xchg
orb
push
nop
fildl
xchg
sbb
push
xchg
scas
dec
jle
push
pusha
arpl
sub
add
xchg
pop
sarb
loopne
pusha
dec
mov
in
and
pushw
adc
cmp
int3
cld
rcl
lahf
mov
pop
xchg
test
xchg
data16
or
test
xchg
xor
cltd
bound
adc
jmp
cmpsb
pushf
cwtl
loope
ret
mov
addl
add
push
lea
dec
inc
enter
lock
mov
pushf
aas
cld
insl
mov
pop
test
call
add
mov
leave
inc
mov
xor
aam
les
cmp
fldl
push
int3
sbb
sub
mov
repz
sar
out
add
popa
cmp
cmpsb
dec
mov
rcr
pop
ja
dec
mov
push
inc
push
jl
jle
mov
arpl
push
adc
mov
notb
fidivrl
inc
stos
push
movsb
push
push
jl
frstor
and
loopne
cmp
xchg
pushw
clc
out
and
stos
sub
inc
pop
int
sub
pop
adc
jg
mov
cmc
iret
xor
faddp
jo
inc
mov
dec
adc
xchg
jnp
incl
sbb
push
xor
lods
out
pusha
pop
adc
mov
addl
or
insb
inc
mov
std
mov
lret
fcmove
mov
insl
ja
enter
cltd
or
jecxz
inc
mov
shrb
movsb
xchg
mov
idivl
or
jne
aaa
sub
jl
adc
and
xlat
std
cmp
push
jmp
dec
div
pop
dec
cwtl
inc
das
or
int3
das
stc
pop
fwait
inc
loopne
sbb
mov
test
ja
adc
daa
pop
mov
daa
jo
dec
cwtl
int
lret
xorb
into
aam
nop
jae
or
push
lods
and
mov
outsb
and
xor
ss
pusha
test
mov
mov
imul
dec
dec
or
inc
es
pop
pop
mov
popf
mov
int
mov
pop
inc
or
dec
adcl
dec
mov
repnz
and
xor
lock
fwait
xor
cmpxchg
push
iret
hlt
lea
push
pop
sbb
xchg
sbb
iret
fs
mov
js
adc
jmp
mov
lods
add
fs
and
in
nop
pop
mov
pusha
mov
mov
or
cltd
outsl
mov
xchg
int
pop
mov
jmp
or
out
cmc
jp
pextrw
xor
pop
add
inc
nop
test
mov
in
loope
jno
repnz
in
jge
fidivs
int
cltd
stc
xor
adc
pop
mov
xchg
pop
fsub
jbe
in
sub
mov
pop
adc
dec
add
sub
ja
cmp
fldt
in
sub
cmp
fs
xchg
fistpll
add
in
sbb
sub
notb
xchg
addr16
ss
data16
mov
in
ds
in
jmp
or
pop
pop
in
int3
enter
popf
sbb
shlb
or
aad
mov
sbb
loopne
daa
fistpl
icebp
aam
sahf
xchg
ljmp
divb
es
loop
mov
fcmovu
inc
xchg
mov
push
push
mov
jns
mov
push
fbstp
mov
pushw
icebp
jp
jb
xchg
mov
lcall
test
pop
int
xor
stos
fs
lret
xchg
inc
insl
cwtl
mov
ret
jge
add
mov
outsl
imul
or
jle
leave
xchg
andl
xchg
arpl
xchg
or
or
mov
int3
sub
push
stc
or
jle
jnp
inc
lret
xor
sarl
mov
cld
and
repnz
xor
xchg
cmpsb
popl
xchg
int3
jle
repnz
jns
mov
outsb
adc
mov
cmp
out
out
int3
push
stos
jge
jb
movsb
sbb
push
pop
call
into
push
inc
xor
mov
aaa
add
insb
stos
adc
xorl
sbb
jg
out
xor
dec
or
inc
in
adc
addr16
push
inc
popf
cmpsb
stos
lcall
xorl
mov
push
xor
sbb
xor
test
xor
leave
into
xor
mov
in
cmp
lods
lods
outsb
test
data16
inc
cmpsb
data16
jnp
std
jae
icebp
cmp
xor
es
shll
das
cmp
push
addl
pop
imul
push
mov
cmp
xchg
or
fisttps
fimull
or
push
inc
enter
mov
cmp
addr16
js
push
insl
iret
pop
aas
imul
scas
xor
jle
cmp
in
xor
mov
pushf
add
movsb
popa
sbb
mov
in
add
push
pop
sbb
aad
push
gs
mov
fisubrs
cmp
cmpb
out
inc
mov
cmp
cmp
test
in
push
jns
add
xchg
fucomip
adc
adc
dec
loope
clc
pop
cmp
daa
jle
dec
lcall
pop
iretw
mov
mov
test
mov
jl
test
ljmp
mov
or
push
or
or
out
sbb
pushf
fildl
subl
sbb
lret
cs
mov
cmpsl
addr16
jno
dec
dec
mov
popf
sbb
rclb
mov
hlt
out
add
jg
mov
iret
sub
repz
sub
dec
nop
cmp
sarl
pop
adc
int
sbbl
push
sub
or
xchg
faddp
push
dec
add
mov
and
cld
mov
out
lds
push
inc
shlb
mov
rorl
cs
dec
jp
sarb
jnp
sahf
jb
cmp
mov
in
sub
xor
lcall
dec
pop
adcb
mov
push
push
and
cmp
lods
ss
aam
push
xor
aaa
push
mov
cmp
mov
add
adc
movsb
dec
out
mov
cmp
imull
pop
aad
pop
movsl
in
push
jle
aas
daa
xchg
cld
and
shr
sbb
test
lds
mov
mov
push
lds
js
xchg
dec
loope
inc
loop
jle
cmp
lahf
sub
xchg
aam
stos
repz
sub
ss
mov
call
shlb
jmp
xchg
lret
pop
push
iret
test
xlat
sbb
jnp
inc
pop
jmp
mov
cld
fdivrl
mov
mov
es
loope
fstps
icebp
arpl
cmp
jae
clc
mov
push
dec
xchg
ret
cld
clc
lods
pop
sbb
lea
pushf
and
insb
fsts
nop
popa
aaa
out
mov
inc
shr
loop
jno
cli
pop
test
xor
sbb
pop
sub
push
lods
mov
repz
pop
cmp
repnz
mov
mov
mov
mov
push
jp
cmp
sub
int
add
sub
pop
xchg
enter
push
dec
sbb
xlat
xchg
inc
pop
pop
jle
mov
jg
xchg
jp
cmpsb
out
xchg
aam
lret
xchg
push
mov
aas
mov
dec
xor
lea
ja
ret
hlt
sbb
test
cmp
mov
sub
push
mov
jecxz
mov
pusha
cld
push
jp,pn
sbb
imul
cltd
mov
aam
aad
add
and
jbe
push
jle
sbb
push
pop
call
dec
or
dec
pop
js
jmp
push
add
pop
dec
mov
jge
in
lcall
test
fadds
mov
xor
repz
and
or
lret
js
loop
mov
push
adc
cltd
xchg
push
aad
adc
mov
aad
sub
ret
iret
lcall
add
mov
rcrl
fistpl
sub
repz
cld
cmp
xor
ret
sbb
out
ret
and
cmpsl
shrl
ret
cmp
adc
cltd
loop
arpl
inc
pushf
leave
dec
les
enter
test
jo
mov
rcll
push
cld
clc
out
jecxz
xor
rorb
in
aas
in
lods
aaa
fcoms
in
shll
lret
pop
jns
pop
pusha
jnp
pop
ret
icebp
pop
adc
insl
into
daa
push
rcrl
cli
repz
hlt
orb
clc
jne
xlat
cmpsl
xchg
jp
inc
mov
es
popf
mov
int
iret
add
cmc
xor
jae
xchg
cmp
loope
add
jb
test
xchg
stos
sub
ret
in
in
mov
shrl
popa
lock
mov
rolb
and
mov
pop
jns
repz
mov
lea
insb
pop
sbb
mov
inc
mov
mov
xor
add
in
pop
outsb
addr16
incl
xor
insb
stos
sub
add
jp
adc
icebp
testb
in
cli
cmp
fistl
repz
sub
adc
cmpsl
or
rorb
cltd
movsl
cmp
shlb
lahf
push
movsb
roll
call
mov
adc
outsl
mov
insb
aaa
add
mov
mov
arpl
or
mov
adc
sbb
sbb
fs
mov
fs
icebp
cmp
loopne
mov
test
adc
call
xor
mov
int
mov
jp
inc
xor
mov
andb
int
lock
xchg
bound
xor
adc
dec
jo
popf
sbb
into
pop
jp
lds
rclb
or
sbb
sbb
fucomp
fsub
push
les
lock
sub
les
jnp
push
mov
testl
mov
aas
iret
xor
ds
fistpll
xchg
fcmovbe
mov
mov
or
add
in
cmp
lods
mov
push
and
repnz
cmp
and
fistps
repnz
or
mov
stos
push
aam
dec
fimuls
cmpsl
mov
cmp
mov
out
stc
mov
repnz
xor
addr16
test
add
xor
bswap
arpl
push
fdivl
addr16
sbb
addr16
push
mov
pop
mov
addl
aas
or
or
mov
add
popf
popa
pop
popf
adc
or
or
inc
sbb
mov
push
xlat
pop
jnp
jecxz
out
pop
les
cmp
ret
cmpl
jge
sbb
pop
pop
mov
aaa
cwtl
dec
sub
scas
adc
fdivl
psraw
outsl
or
aas
inc
inc
or
cmp
dec
cmp
inc
inc
cmp
scas
cwtl
cmpsb
ret
int3
sbb
in
incl
je
leave
jge
jo
or
outsl
imul
pop
lods
ja
addr16
in
es
push
push
xor
mov
outsb
xchg
mov
inc
in
frstor
and
cmpsl
and
loope
mov
adc
iret
dec
dec
xchg
fucomi
dec
imul
std
es
push
inc
mov
lock
aas
fmul
scas
cmp
enter
fldt
test
pop
mov
mov
dec
jecxz
out
sub
aam
clc
sub
roll
addr16
dec
dec
jns
add
loop
and
bound
out
push
xchg
stos
jb
sub
sbb
js
or
pop
add
cli
push
jp
mov
andb
pop
or
shr
xor
mov
push
mov
lods
push
mov
iret
lods
lods
enter
mov
test
rolb
ljmp
lods
test
add
mov
pop
push
pop
loopne
mov
mov
out
or
dec
adc
inc
add
cmp
xor
mov
ljmp
mov
inc
lcall
rcl
fwait
or
stos
adc
aad
push
adc
sbb
mov
ja
repz
pop
or
in
inc
lret
lret
stc
rcrl
jno
dec
rorl
mov
mov
xchg
std
xlat
pushf
sbb
stos
clc
cs
and
xor
in
mov
loop
cmp
add
jno
xchg
jmp
rcrl
daa
dec
mov
lret
stos
scas
sbb
xor
int
icebp
test
jo
jbe
fsubrl
xchg
mov
sub
std
pop
ret
or
dec
cmpsb
jge
fistpl
mov
shrl
roll
mov
xlat
jg
mov
fnstsw
shll
adc
jo
data16
jae
stos
loop
add
fwait
add
pop
xchg
aaa
cmp
fcompl
push
sub
cmp
push
ficoml
xor
scas
jb
pop
push
xor
sarl
js
jmp
daa
jae
out
jno
cmp
pop
and
push
jnp
icebp
mov
sbb
cltd
push
dec
jmp
movsb
loope
stos
pop
fmuls
push
in
in
nop
dec
into
inc
out
mov
push
and
mov
shlb
scas
arpl
pop
popf
jbe,pt
and
fdiv
loop
call
dec
dec
out
push
popl
cli
xor
sub
clc
cmp
mov
je
sub
ficoms
fbld
hlt
cld
mov
loop
fsubr
pop
loopne
mov
and
mov
cwtl
mov
sub
ret
mov
int
movsl
lock
cltd
or
lods
int3
mov
sbb
sbb
push
mov
jnp
add
repnz
add
pop
dec
into
inc
mov
in
mulb
cmpsl
fisubl
xlat
inc
jl
repnz
subl
imul
mov
dec
dec
fisttpll
mov
ret
sbb
stc
mov
in
arpl
fisttpl
adcb
mov
add
lcall
mov
xor
clc
call
jbe
lods
lds
cwtl
sbb
xchg
push
xor
sbb
jbe
repnz
in
pop
adc
push
repnz
gs
mov
enter
xchg
popa
adc
add
repnz
mov
sbb
fstpl
mov
and
jns
push
ret
xor
xor
jle
xor
popa
ret
orl
push
xor
jbe
push
cmpsb
stos
in
mov
jno
out
jnp
out
outsb
adc
dec
xchg
push
jnp
push
inc
scas
dec
in
fcoml
int
push
outsb
std
loopne
sbb
aaa
daa
cmp
and
mov
in
xchg
sbb
das
rolb
cmc
jg
aam
insb
pop
or
fs
inc
push
lock
aas
rcrl
test
and
sahf
push
dec
divb
addr16
addb
adc
lods
jne
pop
jecxz
fdivrl
repz
rcr
xchg
and
xor
call
cmp
jnp
loop
popa
xchg
lds
lcall
or
js
adc
ds
iret
mov
test
lds
mov
rcr
xchg
xchg
leave
loope
movsb
mov
sbb
into
xchg
inc
scas
push
ret
movsl
jae
mov
cmp
dec
sub
mov
icebp
loope
dec
add
ret
enter
stos
ja
fs
add
sub
dec
cmpsl
mov
cltd
dec
add
mov
xchg
sbb
sub
sub
out
cmp
or
mov
imul
mov
imulb
or
aaa
xchg
dec
mov
ds
cmc
loopne
std
dec
push
inc
bound
stos
into
ret
push
xchg
or
jae
and
lahf
xchg
mov
push
push
cld
cmp
cltd
dec
push
push
xchg
outsl
lret
repz
std
jl
push
push
popf
mov
pop
mov
imul
push
inc
mov
fnstenv
sbbl
cs
cmp
lods
push
and
xor
push
or
test
adc
adc
jns
or
mov
movsl
lock
mov
pop
mov
lcall
das
sub
outsb
fwait
pop
push
leave
sbb
jne
leave
jnp
enter
out
xor
imulb
jne
xor
pop
push
jmp
jmp
mov
call
divl
cmpsb
lcall
dec
lds
sub
icebp
pop
sub
data16
push
loop
es
push
popf
lret
jnp
movsl
jb
mov
mov
movsl
mov
push
cld
mov
data16
push
or
xchg
cmp
or
adc
icebp
add
pushf
xor
jmp
inc
mov
imul
xor
xchg
adc
mov
les
xchg
outsl
mov
sbb
pop
in
sub
cmp
jno
lea
mov
fisubrs
fs
ljmp
int
ja
scas
sbb
pop
mov
orl
mov
xchg
int3
add
insl
fstpl
clc
xchg
jae
idivb
iret
cli
pushf
out
pusha
inc
sbb
mov
ljmp
adc
stc
arpl
mov
cmp
popl
outsb
mov
xor
jecxz
mov
mov
add
push
jno
insb
push
icebp
cwtl
aaa
icebp
aaa
scas
jle
pop
pushf
push
jns
mov
fidivl
xchg
out
cmp
pop
scas
mov
mov
lds
mov
ret
ret
aam
sub
call
or
lea
pop
ficoml
xchg
fstpt
jge
outsl
add
xor
cltd
xchg
xor
fisubrl
sbb
xor
hlt
movsl
mov
notb
cmp
fmul
adc
push
or
mov
test
add
arpl
arpl
push
lret
cmp
xchg
ds
xlat
cmp
adc
pop
push
xor
and
adc
sub
sahf
mov
in
xlat
adc
shl
xchg
mov
add
mov
loopne
aam
std
jo
jae
arpl
add
in
rclb
popf
clc
arpl
ljmp
push
shlb
mov
add
push
scas
setb
cmp
rorl
xchg
movsl
mov
outsb
lcall
mov
in
cwtl
cmpsb
dec
adc
dec
lds
in
sbb
cmp
mov
out
pop
mov
out
notl
icebp
cmp
icebp
pusha
cwtl
push
sub
sub
mov
fsubl
cmp
push
adc
jb
cmp
lods
loopne
dec
out
scas
cld
stc
jmp
mov
imul
cmp
movsl
bound
pop
jmp
pop
xchg
orl
xor
cmp
int3
jo
xor
jl
xchg
cmc
sbbl
push
push
loope
pop
inc
pushf
pop
lock
mov
mull
fcomps
sti
xor
out
add
in
repnz
fcoml
cmpsb
fwait
cmpsb
mov
fadd
inc
mov
mov
in
jmp
stos
mov
cwtl
sub
xor
inc
pop
sbb
test
mov
dec
xor
icebp
in
mov
xor
sbb
add
add
nop
jge
cmc
sbb
cmp
mov
in
mov
and
xchg
orl
lret
push
push
and
imul
xchg
shll
lret
mov
push
mov
mov
rcrl
mov
sub
ss
fs
rol
lods
stos
icebp
mov
add
les
xlat
lret
roll
enter
daa
push
pusha
dec
shrl
mov
xchg
stc
jecxz
fdivl
inc
repz
ds
sbb
leave
sahf
icebp
pushf
push
cmpsl
cs
dec
nop
pusha
scas
cmp
mov
dec
dec
mov
bound
sbb
lea
lcall
cmp
inc
add
stos
xor
jns
loop
cmp
insb
adc
test
stos
andb
inc
add
lock
add
test
jbe
pop
sbb
imul
dec
mov
lahf
inc
mov
test
dec
push
movsl
negl
fcmove
pop
stos
jecxz
call
inc
sarb
sti
ret
sub
iret
xchg
lret
dec
mov
les
push
sub
fildl
icebp
xchg
fimuls
cs
xchg
push
cs
loop
out
jle
add
mov
out
mov
mov
jmp
xchg
cmpsl
adc
je
xchg
mov
in
and
xchg
mov
dec
cmp
pop
adc
popl
mov
jb
pop
fsubrl
and
xchg
dec
push
leave
scas
dec
mov
js
sub
mov
xor
das
std
rolb
xchg
cmp
sbb
adc
xor
call
popa
jmp
jbe
into
jle
shll
lcall
ret
xchg
rcrl
inc
xor
fcomps
xchg
ficompl
jbe
int3
adcl
pop
das
sbb
jb
pushf
pushf
mov
lret
cmp
scas
sbb
xor
jae
ror
outsl
adc
inc
mov
in
lret
inc
outsb
cmp
xchg
cmp
scas
cmp
jp
push
push
lret
loope
mov
outsb
sub
xor
mov
xchg
out
in
mov
or
enter
sub
mov
sti
cmpsl
in
mov
dec
ja
xorb
push
cmp
addr16
int
jg
lahf
test
mov
xor
mov
inc
imul
push
add
and
aad
in
decl
jns
inc
xchg
adc
dec
js
inc
adc
xchg
aaa
loopne
nop
stos
sbb
jmp
das
mov
adcb
ret
and
fnsave
lods
addr16
jne
mov
aaa
adc
mov
cwtl
fcmovne
or
jne
sub
jmp
notb
pop
shlb
leave
lret
jno
insl
xor
adcl
lea
int
test
adc
pusha
into
inc
idivl
cs
stos
fiadds
cmpsb
push
add
pop
fsubs
inc
inc
shrl
and
outsl
cwtl
jecxz
mov
ret
xor
iret
pop
gs
push
xor
mov
fcmovnu
mov
xchg
cmp
movl
mov
punpckldq
sbb
xlat
add
daa
sti
daa
dec
jno
push
fldl
fsubrl
dec
xchg
nop
cmc
fs
add
pop
mov
inc
shrl
iret
std
add
dec
and
mov
inc
xor
add
adc
movsl
xchg
testl
lahf
pop
add
iret
jp
mov
xchg
mov
repz
sbb
mov
pop
mov
out
lock
mov
push
jno
add
icebp
push
jnp
out
insl
mov
jae
push
jne
sarl
xchg
ficomps
xor
lock
push
fs
test
aam
hlt
gs
and
pop
incl
push
dec
inc
cmc
pop
inc
test
ss
lret
imul
mov
push
mov
inc
dec
fsubrs
fidivs
push
imul
push
jae
lock
push
test
lret
jne
sub
sub
shll
lds
mov
xlat
fstpl
sbb
mov
xor
cli
lret
stos
xor
inc
mov
bound
sub
sub
jo
mov
out
enter
insl
mov
dec
adc
stc
adc
icebp
stc
pop
loope
pop
and
sub
shr
or
dec
sub
into
call
les
daa
lock
enter
cmpl
lds
pop
and
mov
addr16
lahf
aaa
mov
pop
daa
xchg
dec
fdivrl
add
fcompl
sub
iret
push
imul
add
push
add
pop
pop
mov
int
lret
out
push
adc
inc
adc
call
imul
daa
add
cmp
push
test
loop
add
cld
jecxz
leave
and
jns
test
stos
push
lcall
test
jp
jp
loop
jle
sbb
jno
fwait
cs
ret
cmp
nop
adc
aaa
cmp
sbb
negl
add
mov
in
nop
xchg
bound
or
js
out
push
fisttps
nop
xchg
js
push
gs
sbb
scas
sbb
pop
mov
cwtl
push
fs
and
imull
sbb
xchg
fisttpll
adc
fwait
mov
das
fidivrs
or
subl
insl
pop
test
subl
test
jge
mov
pop
pushl
mov
leave
mov
jp
jmp
mov
test
outsl
outsl
imul
mov
orl
or
cmp
pushf
push
dec
sar
cmc
je
hlt
push
jle
add
rol
push
call
cwtl
dec
movsb
mov
les
out
pop
js
fst
xor
lods
push
inc
inc
outsl
push
aaa
lods
ss
jb
push
fimuls
xor
in
add
into
inc
xchg
cmpsb
lahf
mov
pushf
add
fcompl
bound
xchg
cmp
ja
test
loopne
jae
les
push
pusha
mov
jle
cmpsb
xchg
inc
dec
cmp
xchg
sbb
rcll
jmp
es
adc
jnp
rolb
jg
mov
daa
fdivs
aam
push
sbb
add
push
adc
pop
mov
xor
and
mov
cmp
loop
mov
cmp
dec
aam
les
push
pushf
or
fimuls
mov
addr16
mov
sbb
mov
shll
insb
pop
loope
xor
push
jne
push
or
ljmp
mov
jnp
lds
sbb
dec
or
adc
inc
jmp
je
mov
inc
in
mov
lret
movsl
jnp
clc
stos
pusha
push
push
clc
cmp
pop
test
mov
sbb
mov
fwait
in
cmpsl
outsl
or
mov
cltd
in
loopne
jp
mov
jecxz
cs
dec
imul
sub
mov
dec
sbb
cmp
sub
je
insl
fimull
int
cs
push
cltd
mov
push
adc
mov
pushf
cmp
sbb
int
xchg
pop
jne
mov
cmp
xor
sti
in
mov
push
sbb
xchg
rolb
mov
mov
loope
push
mov
int3
pop
push
push
lea
push
sbb
ret
mov
loop
loop
sbb
mov
nop
xchg
mov
jmp
sarb
add
shll
mov
insl
jno
jnp
fiaddl
bswap
push
push
sub
cmpsb
lds
pop
stc
enter
in
xor
jb
movsl
push
shl
dec
call
inc
int
jae
mov
scas
or
jo
jge
lea
scas
and
loopne,pn
scas
lods
xor
popa
inc
adcl
or
jle
xchg
and
aas
ja
cmp
or
or
into
mov
cltd
stos
loope
cmp
pushf
jns
mov
pusha
sbb
and
call
mov
cltd
push
rorl
aad
mov
dec
add
test
es
jl
mov
xor
flds
aad
and
xchg
iret
cmp
and
jecxz
daa
je
pop
xchg
das
ss
push
push
xor
sahf
xor
cli
mov
cmp
out
xchg
mov
loop
inc
shrb
fildl
jae
fidivl
std
sub
lea
mov
arpl
xchg
pop
popa
xor
ljmp
mov
mov
outsb
shrb
lock
sub
das
push
adcb
aam
mov
add
xor
sahf
add
and
bound
xor
mov
icebp
push
lock
jp
lea
sysexit
or
jg
imul
out
mov
mov
inc
mov
scas
and
jne
jmp
lock
mov
mov
fst
sub
push
mov
push
loop
pop
mov
ret
out
add
jl
adc
mov
cmp
repnz
sbb
and
xor
push
push
inc
lret
mov
lcall
mov
push
insl
cwtl
repnz
movl
test
and
je
cmp
cmp
inc
pop
icebp
push
cltd
addl
lock
loope
mov
movsb
and
lcall
aam
rcrb
movsb
mov
das
inc
inc
mov
cs
pop
mov
jmp
sub
imul
sahf
adc
sbb
or
hlt
arpl
test
add
cmp
jbe
add
stos
insl
and
imul
push
inc
out
call
out
xor
int3
dec
lret
dec
lock
sbb
pop
imul
push
mov
and
mov
add
or
and
jp
movsb
fdivl
lret
leave
ja
sbb
xor
pop
xchg
mov
sub
sbbb
rep
xor
sbb
add
xor
les
rcll
or
outsl
shrb
repnz
pop
pop
cmp
jle
and
lahf
loope
ljmp
das
push
push
pushf
imul
add
dec
cmpsb
mov
inc
xchg
bnd
mov
mov
mov
imul
xlat
addr16
inc
xchg
or
jmp
cwtl
or
pop
sub
or
enter
jbe
aad
sahf
inc
xchg
xorl
jne
rolb
dec
adc
lods
pop
outsb
or
inc
cli
lea
jmp
jne
pop
arpl
push
gs
lret
dec
sub
std
cld
dec
dec
es
sti
sbb
inc
xor
push
popa
sub
bound
ss
jge
int3
mov
pusha
loop
loope
mov
mov
nop
clc
push
fsubs
out
out
sti
xor
xor
test
mov
jns
push
test
lds
cli
inc
pop
cs
insl
xor
mov
pusha
push
push
mov
leave
mov
fwait
xor
out
add
sub
in
int3
dec
shlb
inc
divb
das
and
inc
ljmp
cmp
int
xor
stos
pop
into
ljmp
add
daa
mov
fimull
pushf
scas
xor
cltd
lods
dec
test
jne
or
and
mov
arpl
nop
mov
daa
jno
jmp
andb
fidivl
pushf
adc
icebp
fwait
or
clc
mov
fs
jg
clc
xorl
repz
push
movsl
fwait
aad
lock
es
adc
cld
jl
xchg
mov
outsb
mov
test
xor
sarb
repz
jae
adc
mov
outsl
mov
mov
ljmp
add
jns
pusha
mov
push
sub
fisttpll
adc
addb
sub
and
mov
movsl
testl
mov
rcrb
mov
jp
sub
fs
aas
xchg
mov
pop
push
cwtl
mov
cmp
adc
loop
cmp
jns
pop
js
adc
xchg
incl
mov
mov
push
push
rolb
push
cmpsl
scas
outsb
arpl
jl
dec
or
jmp
add
mov
outsl
sbb
mov
idivl
dec
inc
xor
ja
sub
in
enter
sbb
mov
dec
cs
push
or
sub
das
mov
and
and
outsl
mov
mov
pop
dec
jge
xor
lret
and
xchg
insb
add
jmp
leave
cmc
lock
lock
push
jo
repz
xchg
in
stos
repnz
adc
jg
inc
mov
arpl
xor
xor
pushf
lods
cmp
ficoms
xchg
lds
dec
insb
sub
gs
in
cs
adc
adc
rorl
mov
shrb
hlt
lret
int3
lods
addl
sbb
inc
es
sub
cli
stos
and
mov
mov
jne
lock
bound
dec
lds
adc
insb
fcoml
push
dec
inc
jns
push
js
pusha
sub
jo
out
mov
jno
and
push
push
iret
lock
stc
shlb
add
jnp
cmpb
fstpt
pop
jb
push
les
xchg
fs
stc
icebp
ljmp
xchg
stc
push
inc
jno
inc
push
xor
fucomip
lahf
out
push
out
fistpl
repnz
or
pop
xchg
test
sbb
rcll
mov
outsl
pop
test
push
shrl
xchg
fcomip
add
iret
sbb
das
loopne
ds
pop
inc
into
pop
cs
insb
and
inc
dec
push
pop
les
jle
dec
scas
jl
adc
pop
stc
in
xchg
repz
push
and
inc
dec
or
iret
and
mov
mov
inc
jecxz
mov
pop
mov
add
jo
divl
adc
out
loop
nop
mov
adc
daa
xor
fsub
loopne
sbb
mov
xchg
ds
xchg
and
cwtl
enter
and
jo
sahf
call
ret
sbb
or
push
sti
fwait
mov
push
cmp
push
fsub
or
add
outsw
jg
lret
pushf
push
sub
pop
inc
jg
in
mov
adc
icebp
pop
mov
rclb
push
fildll
inc
in
decl
scas
mov
cmpsl
addl
test
outsb
cmpsl
xor
in
daa
add
lods
sahf
mov
test
pop
inc
in
mov
icebp
hlt
xchg
sbb
add
sbb
push
push
pop
fmulp
jle
mov
andl
test
jecxz
fistps
in
cmp
aas
mov
fiadds
add
repz
test
adc
xchg
call
push
add
jbe
jae
and
sub
xlat
cmp
loope
test
mov
imul
sbb
pusha
mov
mov
sbb
xlat
maskmovq
mull
cmp
lods
mov
xchg
inc
lods
cld
iret
push
bound
xchg
jl
call
sbb
subb
addl
sti
push
into
cmpsl
push
cmc
sub
pushf
xlat
jmp
faddl
lods
push
inc
test
stos
jbe
xor
insl
push
inc
scas
mov
dec
popa
cli
into
int3
test
fistpll
jo
pop
mov
aaa
mov
xchg
pop
fdivrs
jl
loopne
es
je
cwtl
inc
cmpsl
xor
jo
push
insl
fcoml
cmpsl
pop
mov
inc
mov
inc
fldt
pusha
test
mov
pop
dec
repz
jge
loopne
jle
mov
add
rcrl
lret
ffree
andb
inc
mov
shl
out
xchg
pop
cmp
fistl
repnz
fists
xor
in
enter
les
lret
jo
dec
adc
pop
test
cmp
sbb
inc
cli
pop
lock
imul
and
ja
lock
je
add
cltd
pushf
jne
cmp
mov
lock
cmp
xor
mov
and
sti
mov
mov
rcrl
jmp
lock
and
mov
push
int3
int3
rcll
jnp
inc
iret
and
sub
dec
daa
xchg
push
dec
imul
out
aam
mov
pop
into
je
cmp
push
cmp
aaa
aas
mov
in
mov
mov
fnsetpm(287
dec
adc
in
xchg
cld
test
sub
loop
cmp
jle,pt
lods
mov
aaa
push
int3
and
xchg
adc
das
adc
cmp
mov
cmpsb
sahf
xor
rcrb
inc
jmp
xchg
dec
cmc
adc
push
push
scas
inc
dec
push
adc
pop
push
jl
cli
sbb
shlb
pop
adc
imul
pop
mov
out
loop
lods
pop
xlat
mov
xchg
jmp
cmc
sbb
add
sti
xor
mov
sub
mov
leave
iret
pop
inc
das
in
mov
xchg
js
pop
lea
xchg
ret
bound
in
jecxz
fldenv
xor
jg
loop
push
ljmp
data16
or
jge
jp
repnz
inc
mov
mov
mov
in
jg
mov
ret
cmpsl
nop
outsl
sahf
mull
sahf
andl
or
jmp
and
or
inc
call
and
lret
into
ds
cmp
inc
out
addr16
int
jb
sbb
pop
or
dec
testb
scas
loope
cmpsb
stos
add
in
mov
push
insl
in
xchg
push
cmc
pop
aas
fwait
sbb
repnz
sbb
out
sbb
cs
mov
stos
out
inc
xchg
rolb
mov
aam
cs
mov
lret
inc
lret
push
cmp
pop
push
aas
cs
frstor
out
fwait
aaa
dec
adc
pop
dec
out
mov
icebp
xchg
xchg
cmp
out
inc
mov
xchg
arpl
or
mov
popfw
add
mov
loope
and
rclb
push
ds
lds
jns
adc
mov
out
addr16
ficompl
stos
in
mov
push
shl
rcrl
out
data16
inc
pop
shll
aad
pop
test
jl
stos
cld
popf
rol
adc
into
jl
push
es
lock
or
inc
push
pop
lds
cltd
fs
jmp
push
dec
mov
mov
shrb
cmpsl
pop
hlt
jnp
lahf
jle
dec
shl
cmp
jecxz
daa
dec
rcrl
mulb
xchg
xor
out
les
mov
imul
xchg
sahf
sarl
ficomps
and
mov
adcl
jmp
jo
jnp
jmp
cmp
mov
xor
enter
pop
pop
jne
jae
imul
add
sub
cmp
cmc
cmp
mov
fs
or
sub
imul
mov
dec
add
and
push
jnp
decl
jge
imul
sbb
push
scas
fldz
pushf
cltd
push
sub
jns
ficoml
inc
sbb
jnp
stos
gs
data16
cmp
out
and
dec
ja
popa
fwait
sub
iret
cs
push
sub
out
fwait
insb
mov
lds
pop
mov
xchg
orb
mov
push
fisubrs
add
pop
cmp
adc
jno
add
outsl
scas
push
in
mov
sub
test
mov
cmp
push
clc
cltd
pop
ret
or
push
and
mov
and
mov
xor
in
cmc
scas
push
in
inc
pop
flds
or
cmp
sti
pop
xchg
iret
and
clc
push
cmp
scas
sub
adc
cmpsl
add
add
push
insb
in
aad
call
xor
loop
stos
fdivrl
fs
push
push
adc
sbb
popa
add
aaa
iret
std
sub
iret
mov
loope
push
cmp
das
scas
les
fistpl
adc
out
daa
dec
movnti
mov
test
or
and
jmp
inc
pop
negl
popf
das
cmp
popf
je
cmpsb
mov
out
xchg
outsl
dec
sbb
std
loope
jp
lret
mov
push
cld
popa
xchg
sub
in
xor
push
sub
xchg
rol
jae
mov
dec
push
inc
push
inc
movnti
push
movsl
pop
test
jmp
mov
shl
and
aad
stc
in
fstl
pop
mov
imul
or
push
insl
fnstsw
ret
test
mov
cmp
call
ds
cmc
sbb
and
mov
movsb
mov
test
jnp
stos
aam
jl
inc
mov
repz
ss
or
cmp
pushf
fnstcw
inc
mov
daa
cmp
pop
fists
hlt
sbb
sub
outsl
mov
cmp
jecxz
inc
dec
adc
mov
push
xor
adc
push
or
sub
loopne
pop
pushf
inc
jae
imul
sub
or
lods
lret
and
xchg
daa
repz
mov
inc
sbb
inc
pop
cmp
or
loope
pop
jp
xor
cmp
cli
les
test
fcomi
inc
or
adc
dec
dec
pop
hlt
icebp
cli
xchg
lret
mov
mov
inc
mov
xor
pop
cwtd
xchg
dec
insl
mov
dec
aas
aas
or
iret
mov
xchg
pop
jae
dec
cmpsb
sub
ds
call
xchg
inc
repnz
xchg
cmp
pop
hlt
mov
fwait
jbe
mov
dec
add
mov
pop
and
cmpsb
call
lcall
imul
xor
mov
dec
push
inc
and
jge
outsl
in
inc
mov
pop
les
mov
int
out
lret
inc
sbb
fnstcw
fs
out
cmpsl
outsb
or
test
sbb
ljmp
dec
orb
adc
mov
sbb
mov
push
ja
stc
inc
in
xchg
pop
add
mov
jnp
xchg
xor
out
imull
je
clc
shrb
scas
mov
inc
cmp
ss
push
gs
adc
gs
fucomip
imul
es
or
pop
sbb
call
shll
rol
jo
sbb
sub
mov
lods
jp
dec
daa
movsb
aas
xchg
jg
jg
push
mov
mov
into
into
dec
jne
xlat
xlat
rorl
dec
cld
xor
das
sahf
sbb
push
sti
sbb
arpl
fistps
and
clc
dec
repnz
mov
adc
inc
inc
pop
mov
loope
or
cmp
loopne
daa
mov
and
aam
jp
jb
mov
or
push
mov
cli
xorl
cs
push
cli
push
loope
or
insl
into
sti
jne
outsb
int3
jl
subl
xchg
xchg
in
push
xorl
xor
adc
add
stos
inc
cmpsb
cmp
mov
mov
movsl
inc
pushl
mov
test
add
jnp
sahf
cld
or
xchg
in
lahf
pop
fmuls
xchg
insl
xor
iret
push
andl
and
and
test
push
aad
inc
pop
outsb
push
andl
insb
jp
aaa
push
add
test
sub
inc
lcall
and
lahf
mov
mov
adc
jle
hlt
cmc
push
call
fsubr
fildll
pop
lods
push
jl
movsl
cmc
loop
iret
out
xchg
ret
lods
push
enter
jle
xlat
or
out
cmp
in
adc
subb
idivb
adc
adc
sbb
mov
pop
cld
sbb
daa
out
fwait
jne
outsl
xor
es
mov
mov
inc
push
out
sub
outsl
mov
pmulhuw
adc
jno
test
or
loope
pop
test
fnsave
js
scas
outsb
aaa
fs
sarb
xor
jne
mov
out
dec
mov
jnp
call
sbb
and
adc
cmp
insb
mov
ja
or
mov
hlt
faddl
xchg
dec
les
cltd
inc
pop
iret
inc
leave
xchg
loop
ret
in
leave
jne
sbb
pop
arpl
xor
pop
je
inc
mov
std
movsl
push
pusha
repnz
pusha
lock
fs
push
sub
shlb
xor
ret
orl
rorb
in
pop
mov
pop
jb
out
popa
sub
imul
pop
dec
aad
pop
bnd
mov
cmp
jb
insb
push
mov
in
in
jnp
xchg
fs
and
push
xor
in
jg
sbb
adc
insl
pop
lahf
dec
mov
lea
test
xlat
mov
nop
cli
sti
cmp
cltd
push
adc
jae
jmp
mov
sub
pusha
fs
xor
testl
scas
shrb
xor
hlt
jbe
push
add
sbb
lock
aad
jmp
loop
pushf
rclb
adc
mov
inc
and
insl
call
mov
adc
sbb
lods
jp
jo
pop
lret
cmc
sahf
mov
mov
mov
popf
loopne
mov
push
cmp
insb
mov
or
jg
loope
lock
xchg
add
mov
and
jp
popf
mov
adc
adc
push
jno
leave
fadds
mov
mov
mov
mov
iret
inc
add
sbb
inc
add
jg
mov
mov
jle
repnz
sti
mov
inc
arpl
ljmp
gs
jg
xchg
push
aaa
push
pop
pop
mov
scas
sbb
xor
leave
pushf
pop
mov
movsl
mov
stos
dec
mov
pop
nop
xor
in
nop
pop
sub
pop
in
loope
dec
mov
jne
inc
dec
mov
clc
incb
test
or
jbe
sbb
test
mov
cmpsl
xchg
cmp
scas
out
ja
insb
dec
mov
adc
fstpl
inc
jg
cltd
js
test
xchg
ret
gs
sub
xchg
jmp
sbb
jmp
or
mov
add
and
push
outsb
and
sub
jecxz
push
mov
rcrl
inc
mov
dec
stos
sub
leave
stc
xor
add
fidivrl
pop
inc
cmc
imul
push
jle
stos
addr16
test
mov
jg
pushf
data16
mov
mov
mov
mov
mov
daa
movsb
rolb
popa
lcall
mov
sbb
add
jmp
popl
mov
xor
lahf
push
or
inc
and
dec
in
add
ja
mov
ret
sbb
jmp
mov
fs
lea
cmp
imulb
daa
jg
cmp
dec
sub
dec
addb
xor
or
jmp
ss
pusha
adc
lods
fisubl
inc
fnsave
int
inc
clc
sub
inc
xchg
sarb
xchg
ss
dec
clc
adc
lret
mov
sub
mov
mov
sbb
popa
and
outsl
pop
negl
xor
lret
mov
mov
movsb
dec
cmpsb
mov
data16
aas
pop
jle
dec
nop
daa
idivb
std
int3
ret
push
add
push
pop
jecxz
mov
bound
lock
xorl
xchg
mov
or
lret
ljmp
ds
inc
jmp
jecxz
adc
xchg
mov
fidivrs
and
dec
push
sub
push
pop
ret
dec
loop
mov
jbe
xor
and
jge
jo
mov
das
std
nop
cmp
mov
fwait
xlat
aas
adc
ret
shll
and
and
jo
sub
dec
pop
insl
sbb
adc
shr
mov
add
sbb
mov
mov
mov
cld
dec
mov
mov
sahf
dec
jno
ror
adc
test
sar
out
int3
notl
sbb
test
xchg
or
mov
pushf
in
and
loopne
cmp
cmp
cmp
xor
cmpsb
das
insb
push
loope
es
sbb
pop
mov
mov
or
push
mov
fnsave
out
stc
out
fistpll
mov
subl
sub
sbb
sbb
and
sbb
mov
inc
mov
mov
daa
movsb
filds
dec
stos
mov
notb
pop
call
adc
not
sti
inc
jmp
stos
jae
pushf
xchg
cmpsb
push
pusha
cld
hlt
outsl
shl
or
jno
adc
xor
dec
int3
and
popa
pop
jnp
sbbl
je
xor
push
jp
xchg
sub
scas
add
in
test
in
and
jbe
xchg
shl
push
ds
sub
push
leave
movsb
es
arpl
je
scas
jo
inc
dec
inc
pop
scas
jecxz
sub
std
dec
jge
push
int
movsb
adc
xchg
pop
xchg
aaa
repnz
jo
popf
lcall
gs
jne
sub
popl
div
dec
or
ret
in
ficompl
bound
push
and
andb
dec
lods
push
rcl
sbb
add
add
add
mov
mov
push
imul
mov
mov
icebp
sub
inc
aaa
aas
dec
ja
sbb
test
out
sub
outsb
enter
pop
dec
cwtl
or
jg
inc
aam
or
xchg
mov
jnp
cld
jge
cmp
out
jecxz
pop
loope
adc
lahf
sub
lahf
jne
sarb
sbb
sbb
mov
popl
jnp
or
cwtl
mov
pop
or
ror
cmp
mov
pushf
sbb
push
fdivrs
sub
cmp
and
sbbb
fisttpll
mov
xchg
cmp
lods
out
pop
repnz
imul
stos
dec
or
stos
dec
or
jno
ljmp
adc
test
push
addb
lds
dec
add
xchg
rcl
cmc
je
sbbl
test
loope
stos
xchg
loopne
fiaddl
push
push
test
inc
push
ror
scas
pusha
jp
in
repnz
sub
dec
out
cltd
popa
xchg
sbb
test
stos
xchg
pushf
int3
clc
sarl
pop
andb
xchg
sub
pop
and
inc
out
sub
stc
mov
mov
mov
and
pop
sti
lds
fsts
out
mov
xchg
inc
push
call
ret
sbb
movsl
sahf
inc
shlb
fisubl
divb
inc
adc
jno
adc
adc
xchg
sarb
mov
mov
fucomip
jno
ror
icebp
push
out
mov
xchg
jg
pop
sub
mov
pop
repnz
xchg
int3
cmp
sbb
mov
nop
shll
and
inc
mov
ror
out
mov
inc
mov
push
gs
test
xchg
dec
popa
out
xorb
add
scas
add
pop
rclb
pop
cmp
sarb
icebp
xor
xchg
cmp
cli
pop
shl
xchg
sbb
sarb
dec
outsl
xchg
ja
adc
xor
mov
cmp
ret
pop
rcr
test
shll
rorl
mov
mov
loope
pop
or
cmp
dec
xor
fimuls
mov
push
icebp
xor
lret
mov
mov
sub
test
cmp
pop
and
ds
sarl
dec
icebp
push
sbb
adc
into
out
ficompl
pop
out
andl
cmp
repz
add
inc
pcmpeqd
mov
lcall
ljmp
imul
mov
push
stos
mov
xor
ret
mov
inc
dec
xchg
push
dec
imull
iret
xor
mov
in
enter
push
jl
gs
in
push
scas
inc
or
lahf
mov
stc
push
lock
lds
leave
int3
lods
cmp
mov
pop
or
inc
sbb
or
out
mov
mov
pushf
jge
mov
mov
shl
arpl
push
subb
and
inc
call
out
adc
stos
sub
pop
push
and
nop
pop
das
push
in
mov
sub
mov
fcomps
mov
clc
outsl
mov
clc
cmp
mov
mov
xchg
mov
pop
mov
sti
repz
sub
jbe
add
call
pop
push
out
lods
inc
loopne
mov
push
inc
mov
add
dec
iret
mov
orl
sti
nop
les
shlb
lahf
ja
imul
add
pop
and
push
dec
xchg
xchg
aas
dec
out
pop
repnz
push
andb
les
js
fisttps
scas
xchg
sub
movsl
mov
lock
jae
jl
sbb
pop
gs
xor
push
dec
push
aaa
ret
xchg
jmp
push
and
push
push
sahf
mov
mov
or
jb
push
dec
mov
rcl
xchg
mov
mov
mov
stos
mov
insb
into
mov
out
pop
cs
in
pop
sub
bound
mov
mov
push
push
jnp
sahf
fs
dec
and
pop
mov
lahf
mov
xor
xchg
jp
repz
aad
sub
outsl
aaa
cmp
scas
popa
add
mov
out
xchg
sub
sbb
cs
out
aad
pop
mov
pop
mov
add
jge
adc
repnz
xchg
xchg
add
lret
inc
lods
mov
pop
repz
pop
cmp
in
xor
fisttps
pop
jl
ret
int
filds
cmp
jg,pt
cmc
rcrl
pop
call
sahf
mov
int3
push
xor
sarl
fbld
movsb
shll
hlt
fidivs
into
pop
syscall
leave
outsl
divb
negb
subb
mov
mov
jnp
hlt
dec
jno
clc
xor
jle
xorl
pop
push
xchg
fsubl
out
out
mov
push
mov
nop
jge
add
xor
popf
ret
imul
xor
lea
test
pop
pop
mov
cmc
sbbl
in
xor
out
rorb
pushf
sti
movsb
aad
xchg
pop
adc
orb
mov
jl
int3
add
je
icebp
push
popa
roll
into
movsb
mov
xor
jbe
arpl
test
mulb
push
adc
mov
int3
addr16
loope
and
push
movsb
sbb
fcoms
sahf
data16
subb
repnz
push
test
out
push
js
adc
popa
out
out
int
or
decb
mov
cld
mov
jp
lret
mov
mov
ret
xor
or
adc
sahf
out
push
lret
jle
test
lock
fistps
loopne
into
mov
aas
dec
jge
adc
ficomps
shll
aas
push
adc
cltd
sbb
jge
mov
test
add
inc
push
sub
adc
test
ss
mov
cwtl
es
in
xchg
mov
xchg
inc
pop
in
pop
loope
subb
pushf
into
mov
fistps
paddq
xor
out
imulb
cmpsb
mov
sub
or
fists
push
out
ja
dec
and
in
leave
in
jne
dec
test
mov
out
bound
xchg
mov
fmul
xor
test
sbb
mov
mov
fwait
mov
nop
adc
loopne
fisubl
gs
pushf
loop
pop
dec
mov
js
sub
or
add
xor
shrb
xor
or
or
jno
push
aad
sbb
add
inc
clc
iret
rcrb
xchg
push
sub
adc
lret
jnp
cmp
jno
dec
je
jmp
add
xor
sbb
jne
dec
xor
adc
leave
aam
std
aas
outsl
cmp
push
mov
or
xchg
movsl
xor
lcall
jb
lret
or
inc
popa
cmp
ret
out
mov
and
jo
dec
xor
xor
and
hlt
xor
addr16
xchg
outsl
lods
dec
lds
ss
ja
cli
test
inc
and
fistpl
pop
es
jb
cld
aas
jl
pop
xor
and
mov
imul
idivl
mov
mull
fists
mov
roll
jge
push
sub
lret
ljmp
add
fidivrs
xorl
sub
in
mov
adc
dec
movsb
insb
fsub
pop
cmp
xlat
dec
jp
xchg
inc
dec
imul
arpl
xor
mov
cmp
sbb
movsl
sbbb
push
xchg
std
popa
mov
pop
mov
roll
shll
mov
shlb
lcall
jmp
icebp
xchg
mov
jb
and
movsl
or
subb
fwait
es
pop
sub
jae
add
sbb
and
test
cld
xchg
ja
loop
shlb
mov
inc
mov
sub
sbb
bound
push
ror
xchg
movsl
sbb
jge
fwait
addr16
std
xor
mov
xor
out
cmp
jl
cmp
jnp
test
mov
xchg
scas
sbb
adc
mov
outsb
jnp
mov
shlb
outsb
xor
and
fidivl
testb
push
inc
sub
insl
das
mov
sbb
sbb
push
std
cmp
arpl
fisttpll
and
nop
push
aaa
push
and
mov
jne
pop
fnsave
and
hlt
mov
add
pop
rsqrtps
jo
mov
bound
xchg
pop
dec
aas
es
sbbb
and
and
mov
cltd
in
mov
xlat
jbe
insl
jle
fnstcw
sub
and
mov
pushf
repz
cmpb
pop
pop
xchg
testb
arpl
xor
in
dec
lds
push
cmp
das
outsl
xchg
call
stos
pop
add
add
inc
dec
aaa
icebp
mov
cmp
push
fimull
jg
movsb
xchg
lahf
mov
fmuls
bound
pusha
mov
cmp
sub
mov
jge
inc
into
and
divb
pop
jmp
jne
jbe
test
popf
adc
enter
cmp
stc
inc
sbb
sub
jmp
adc
shl
aad
mov
mov
mov
xor
mov
xchg
xorl
ljmp
flds
sub
aad
rcl
aas
cmp
or
ja
add
push
dec
mov
ret
shlb
arpl
loopne
aas
jo
dec
xor
shlb
mov
pop
mov
xlat
xchg
jmp
in
sbb
nop
xor
sub
pop
je
cmp
imul
shlb
mov
insl
mov
jae
mov
cmpb
sbb
inc
xlat
mov
sbb
test
ret
jns
out
test
outsb
out
mov
jne
xor
bound
loope
leave
mov
dec
je
std
ss
jne
divb
jns
adc
mov
pop
lods
roll
mov
pop
cltd
inc
or
xchg
cld
or
out
lcall
loope
loope
xlat
popa
mov
mov
jo
push
mov
cwtl
cmpsb
in
insl
and
imul
jecxz
push
jle
out
imul
loope
xchg
push
xchg
xor
add
rolb
sbb
clc
adc
scas
shrb
mov
xor
ds
push
out
and
cmpsl
mov
jbe
sarl
aaa
rclb
jp
jg
shll
adc
add
insb
mov
or
cmpsb
es
icebp
xor
stos
mov
push
push
cmpsb
mov
sbb
xlat
dec
pop
mov
fisttpl
popf
xchg
and
ret
inc
mov
sub
jne
movsb
and
fucomi
pop
leave
mov
ds
dec
les
jl
and
lds
sub
imul
icebp
fs
and
inc
sbb
xchg
popf
xchg
or
ficomps
repz
mulb
repz
pop
cmp
pusha
jecxz
dec
mov
inc
jnp
ja
dec
and
ret
popf
call
lcall
ds
aam
jmp
in
lock
fistpl
jg
ss
cmp
xor
adc
sahf
or
push
xor
iret
cld
sti
repz
or
sbb
push
or
xor
push
cmp
xchg
scas
push
and
jnp
xor
sahf
adc
testb
jns
xchg
xchg
int3
mov
sbb
cld
and
icebp
dec
scas
sub
xor
mov
xchg
mulb
sub
stos
imul
cltd
push
xor
ror
jnp
repz
mov
xchg
loop
outsl
xor
sub
je
jp
mov
int3
mov
shlb
adc
or
pop
push
add
lea
fs
sub
out
dec
into
test
xchg
frstor
outsb
call
pop
mov
adc
jae
fisttpll
xchg
scas
dec
or
jo
test
pop
xor
addl
push
and
in
aad
arpl
jmp
nop
lret
xchg
repz
jmp
dec
lcall
call
popf
in
jno
test
mov
cmp
mov
inc
mov
cli
test
adc
fidivl
add
push
pop
enter
cwtl
push
es
shrb
sub
daa
jo
push
xchg
lods
fst
test
adc
add
adc
ds
ja
outsb
jb
stc
push
cmp
arpl
adc
sbb
sub
cwtl
cmp
inc
dec
pop
xor
dec
mov
mov
jo
js
fcmove
push
cmpsb
inc
lret
dec
sub
repnz
mov
pop
or
jnp
fiadds
adc
mov
mov
cli
sub
or
movsb
fimull
loope
rorl
sar
sbb
push
mov
or
cmp
lds
pushl
jnp
jge
out
dec
or
test
sbb
add
out
pushf
mov
fs
repz
scas
or
mov
jg
pop
gs
sbb
cmp
rcrl
fidivrs
mov
sarb
dec
iret
shlb
cmp
push
cmpsl
bound
mov
push
in
mov
sbb
scas
pushf
rorb
mov
pusha
cmp
add
js
daa
nop
ret
imul
xchg
adc
data16
and
adc
fadd
mov
jl
je
jg
lret
and
movsl
mov
shl
icebp
leave
gs
or
ret
rcl
incb
popf
sahf
xor
mov
push
or
inc
subl
gs
push
pusha
mov
in
pop
rclb
ret
dec
xchg
rcrb
pop
push
sub
repz
dec
sbb
and
sub
cmc
mov
imul
cmp
pop
mov
fwait
inc
xchg
cmp
test
add
or
sub
mov
adc
je
outsb
sub
repz
pop
jle
es
inc
mov
pop
sub
inc
sub
or
sbb
out
je
in
cwtl
add
jae
adc
out
pop
inc
out
loope
fwait
sbb
cmpsb
repnz
mov
jl
mov
shlb
or
adc
fsubrl
aaa
xor
int
inc
hlt
cmp
add
dec
mov
cmp
test
pop
push
sub
cmpb
and
iret
adc
jae
cmp
pop
cwtl
push
outsl
push
sbb
js
lea
es
sbb
pop
test
dec
ror
idivl
xor
lods
mov
sahf
mov
jbe
pusha
dec
cmp
and
stos
adc
mov
lcall
in
xlat
push
and
dec
sahf
jns
sub
adc
fisubrl
insl
jno
inc
in
das
mov
jecxz
in
xor
mov
mov
inc
jns
cmp
popf
std
sub
inc
push
adc
scas
mov
inc
cltd
mov
aad
lea
push
pop
cmp
lret
dec
fdivrp
nop
sub
pop
jo
fnsave
cwtl
dec
test
add
sbb
int3
cltd
push
lods
mov
daa
jmp
push
xor
adc
or
cmpsl
mov
jne
or
popf
sbb
scas
movsb
lret
ds
pop
push
in
sub
sub
pop
inc
sbb
stc
bound
lahf
ljmp
push
pushf
dec
je
push
les
fists
adc
ret
jae
lods
mov
add
mov
or
sub
js
mov
stc
out
inc
jle
mov
lock
pop
int3
dec
lcall
mov
mov
or
mov
xchg
lahf
lret
and
push
sub
xchg
push
shll
subb
xchg
push
sbb
out
icebp
daa
cli
mov
test
or
sbb
sub
or
mov
mov
adc
inc
int3
dec
jne
ret
pop
out
rcr
ja
lock
xchg
mov
rcrl
movsl
addb
sarb
xlat
dec
push
or
test
aad
shl
sbb
sub
mov
enter
int
and
mov
inc
push
jnp
scas
stos
jle
mov
repnz
arpl
sub
dec
pushf
test
push
push
mov
lods
mov
test
out
mov
std
mov
push
cld
add
call
cwtl
out
add
stc
mov
add
cmc
es
push
nop
xchg
pusha
pop
sub
movsl
loope
xchg
cmp
sbb
mov
cltd
inc
xor
stos
xor
xchg
cwtl
cvtps2pi
add
pop
and
cld
lods
mov
lods
mov
cmpsl
mov
xchg
adc
dec
push
stos
popf
subl
shlb
cld
icebp
rcrl
dec
cmc
andl
sub
cli
in
bnd
jb
inc
mov
lods
jg
sub
int3
ja
fistpl
clc
ds
pop
addr16
mov
adc
shlb
mov
mov
sbb
sub
push
rcr
iret
fsubl
inc
and
push
andb
insb
push
repz
adc
dec
nop
add
cmp
jns
and
jle
gs
jae
mov
jl
insb
in
add
pop
mov
in
dec
seto
add
xchg
push
dec
fwait
xor
xchg
mov
es
dec
jg
int
sti
mov
int
xchg
rorl
stos
movb
neg
test
js
and
push
daa
pop
rolb
dec
out
rcrl
lcall
daa
insb
sti
int
imul
pop
mov
cmp
pop
pop
lods
cwtl
or
addr16
lahf
hlt
push
hlt
lods
cmc
outsb
js
stc
in
pop
lret
jmp
or
pusha
mov
push
ret
inc
enter
mov
outsb
ret
or
jne
xor
dec
lret
pop
sub
xor
adc
pop
mov
add
insb
int3
hlt
mov
subl
test
lods
add
imul
lods
xchg
mov
xor
lcall
movsb
cmpsb
xor
aam
push
xchg
shll
dec
outsb
adc
jnp
bound
aam
add
imul
xor
pop
aaa
imul
repz
adc
push
sbb
addr16
das
shlb
int
jmp
frstor
or
push
in
add
popa
xchg
pop
repnz
leave
aas
cs
ss
in
sbb
aad
xchg
insb
cmp
rclb
pop
adc
rclb
lcall
rorb
lahf
stc
adc
push
aad
scas
lods
fsubrl
jp
scas
test
mov
mov
cwtl
push
bswap
mov
loopne
cmp
cwtl
out
mov
dec
mov
push
xor
testb
jae
xchg
pop
jbe
lods
aas
push
std
mov
xlat
mov
rcr
aad
or
stc
jb
mov
mov
mov
addb
nop
jo
xchg
or
mov
movsl
xchg
inc
xor
jle
fcmove
stos
sub
sti
shll
push
jge
sbb
sub
push
pop
shr
jg
rcr
leave
daa
imull
addr16
xor
data16
xor
mov
push
lahf
xchg
movsb
outsl
movsl
pop
xchg
ss
push
jae
sahf
cmp
mov
xchg
hlt
loop
cmp
pop
mov
out
pop
push
aam
lods
xchg
stos
push
mov
in
das
dec
and
jne
stos
ss
push
jecxz
sti
sub
cmp
xor
data16
xchg
repnz
push
mov
fdivp
test
sub
call
jo
addps
mov
dec
or
mov
mov
push
mov
repnz
push
jge
mov
stc
ss
lret
cmpsl
xchg
test
insb
filds
clc
lret
xchg
mov
mov
call
movsl
out
rolb
jne
mov
icebp
sbb
sub
cmpsb
cmp
dec
cs
cld
rorb
inc
xor
cmp
shrl
mov
xor
addr16
stos
int3
lcall
cltd
rol
jge
and
cmc
jo
mov
cmc
mov
cmp
cmp
mov
fistl
push
lahf
mov
out
mov
pop
xor
das
xlat
imul
mov
enter
xchg
inc
mov
orb
pop
sub
or
adc
std
mov
repnz
pop
dec
cmpl
xor
aas
add
pop
outsl
push
lcall
scas
insw
inc
call
lret
std
in
dec
or
mov
sbb
jno
aas
mov
jbe
loopne
out
test
push
shl
or
jo
pop
sarl
adc
xchg
test
roll
dec
imul
cmovs
mov
insb
cld
sahf
daa
mov
xor
push
lea
pusha
aas
push
sub
stos
xchg
repnz
adc
ds
outsb
jbe
mov
cltd
fdivrl
adc
mov
or
scas
jnp
cs
orl
mov
sub
aaa
icebp
shrl
scas
shll
jl
in
inc
ret
add
ljmp
stc
and
lcall
cli
inc
dec
cmpsl
sub
push
dec
sarl
sbb
aam
std
sub
imul
rorb
adc
shll
sti
mov
push
mov
xor
shll
test
nop
pop
ret
popa
sbb
test
int
push
push
clc
and
cli
sbb
mov
inc
mov
lcall
adc
rolb
cld
add
sub
aas
add
mov
lret
pusha
cwtl
inc
cltd
sub
ret
orl
imul
test
cltd
xchg
push
cmp
int3
mov
je
ja
sbb
outsl
cmp
shll
inc
mov
ljmp
test
fisttpl
sub
nop
or
sub
pop
adc
jb
adc
loop
push
mov
xchg
ret
cwtl
push
nop
fnstcw
add
xchg
imull
in
vcvtpd2psx
mov
cwtl
push
cmpb
sbb
insl
sbb
adc
xorb
fs
jg
and
cwtl
scas
icebp
xor
sub
pop
or
insb
into
mov
sbb
outsb
es
std
cltd
ja
sbb
outsb
add
fnsave
outsl
cld
adcl
sar
lock
adc
push
jle
cmc
imul
test
stos
mov
pop
cli
lret
dec
and
stos
mov
adc
test
aad
stos
xchg
mov
fcompl
dec
mov
jecxz
push
sbb
dec
pushf
mov
movsl
add
mov
mov
push
mov
add
add
cmp
push
lods
mov
aas
jnp
out
inc
outsb
iret
push
xchg
mov
sub
mov
lcall
pop
mov
jns
push
mov
mov
arpl
das
es
sub
cld
pop
or
push
lds
cmp
les
jge
sbb
dec
fisttpl
xor
jns
nop
or
jg
leave
xchg
adc
cld
mov
pop
sub
dec
rcrb
push
les
mov
add
movsb
pop
popl
mov
sub
in
les
bound
or
ficomps
mov
in
subl
and
into
out
fxch
jne
xchg
xor
add
cmpsb
mov
mov
out
xchg
pop
mov
lret
pop
cmp
xchg
in
out
pop
add
xchg
fxch
cmp
jl
in
fistps
cmp
add
push
pop
push
mov
pop
xchg
inc
cmpsl
outsl
ds
and
inc
fnstcw
mov
push
mov
push
sahf
clc
jo
inc
aad
adc
and
add
push
jo
jo
jne
out
call
push
loope
call
mov
xor
nop
mov
popa
repnz
dec
call
aas
je
je
mov
sti
or
mov
dec
addb
xor
ret
pop
shl
enter
rolb
adc
aam
test
ret
icebp
lods
cltd
icebp
xchg
or
push
or
ss
cld
push
cld
bound
xchg
xchg
in
mov
popa
inc
scas
scas
mov
ss
adc
fs
mov
mov
mov
mov
sub
rorl
jne
mov
popf
dec
jp
sbb
push
fnstenv
js
push
mov
add
inc
out
ret
cli
push
inc
sub
test
out
pusha
scas
xor
stos
xor
inc
lock
mov
add
push
std
and
enter
pop
jne
dec
adc
insb
mov
scas
stc
and
aaa
gs
push
iret
inc
aaa
mov
mov
xchg
xor
fidivrs
xchg
ret
dec
cltd
aaa
addb
lcall
sub
adc
addb
sahf
aas
jmp
add
jg
fsts
popa
dec
ret
rorl
aas
mov
out
jns
push
sub
test
call
outsl
push
mov
popa
hlt
jg
mov
lcall
lret
icebp
mov
cmp
je
pop
in
lock
jnp
sub
push
js
jg
rolb
ja
pop
sub
inc
sbb
and
dec
lods
pusha
push
stos
lds
or
mov
idivl
sbb
pop
sub
mov
mov
sahf
sbb
xchg
sbb
jns
mov
cwtl
or
mov
jno
imul
jle
jmp
int
cmc
ficoml
pop
scas
sub
jp
mov
mull
js
push
sbb
testl
lods
out
lcall
and
or
icebp
push
xlat
mov
push
cmp
cwtl
fbstp
mov
xor
inc
xorb
pop
sti
xchg
jo
mov
ss
js
sbb
push
lods
sahf
push
cmp
fldl
xchg
out
and
dec
scas
add
jb
sub
lods
repz
ljmp
in
or
sahf
mov
xor
movsl
dec
outsb
loope
jecxz
imul
lods
int3
lret
jns
mov
ficoml
xchg
and
aas
xorb
cmp
jbe
xorl
adc
dec
inc
loopne
pop
cmp
push
and
insl
mov
test
out
xor
push
xlat
mov
mov
pop
int3
or
mov
add
jg
and
jp
cmp
je
out
arpl
pop
fcmovnbe
sbb
push
cld
mov
pop
mov
out
mov
pop
add
repz
jle
and
push
jnp
inc
ret
add
and
ret
jp
pop
ficoml
pop
xor
mov
mov
fs
sub
cmpsl
imulb
int3
pop
js
imul
int
push
icebp
pop
add
sbb
repz
es
int3
lahf
cmp
cmp
int3
xlat
dec
into
xchg
jmp
fistl
fidivs
adc
scas
cmp
pop
cmp
mov
dec
rclb
test
sub
push
fnstenv
adc
add
adc
xchg
pop
roll
mov
or
xchg
test
testb
sub
pop
inc
aaa
jl
ss
jle
mov
mov
xor
inc
push
mov
pushf
data16
push
out
mov
je
iret
sub
out
ret
les
test
or
dec
cmpsl
sahf
push
testb
or
mov
mov
sbb
xchg
jno
push
aad
lods
fnstenv
sarl
pop
mov
setns
mov
mov
cwtl
xchg
call
rolb
stc
sub
inc
in
out
push
je
mov
xlat
out
dec
cmp
adc
inc
fsubrl
fucomp
iret
jl
cmpsb
arpl
inc
scas
add
xor
addl
notb
cli
imul
mov
mov
mov
or
lods
mov
adc
cmp
or
jns
xchg
sti
sub
mov
test
add
repz
push
sbbb
out
xchg
nop
push
or
cmpsb
xor
adc
inc
push
scas
cmp
dec
movsl
aam
je
bnd
dec
xchg
mov
mov
shrb
loope
pop
rolb
shlb
push
sub
insl
aam
jge
fcmovnu
sub
gs
into
cwtd
push
cmp
mov
push
ja
add
ficoml
or
lahf
andb
movsb
dec
lock
mov
lock
movsl
in
shlb
inc
fwait
cli
incb
xor
push
or
fmuls
xlat
mov
pop
popf
or
imul
mov
pop
rcll
xchg
mov
stc
push
jp
mov
mov
les
push
jp
jmp
inc
mov
jbe
sbb
ficoml
repnz
sub
loop
test
pusha
inc
and
stc
gs
aas
push
jecxz
test
inc
jg
icebp
outsb
mov
pop
inc
pop
mov
inc
pop
mov
rcrl
movq
dec
loop
sub
movsl
pusha
add
mov
insb
mov
out
xchg
push
enter
je
sbb
and
cwtl
cvttps2pi
add
sub
mov
push
cwtl
and
adc
stos
in
insl
push
jecxz
aam
mov
lock
clc
mov
adcb
jae
mov
into
mov
popa
and
sub
adc
test
or
xor
fnstenv
xor
lods
xor
or
or
sub
pop
jp
imul
mov
js
cmp
adc
cmp
outsl
or
cmpsb
mov
push
ljmp
int3
sub
cltd
je
sbb
ljmp
push
cmp
stos
outsb
leave
int
mov
pop
loop
aas
adc
lahf
add
push
insl
test
and
jp
decl
cmp
xor
outsl
nop
sbb
inc
pop
push
push
push
xchg
pushf
jp
pushl
adc
cli
xorl
fs
icebp
inc
jecxz
lods
jge
es
jg
inc
push
pop
add
cmp
fmull
sub
lret
repnz
enter
leave
aaa
mov
jg
sbb
fnsave
push
imul
or
sub
lcall
subl
jge
clc
xlat
lahf
sub
repnz
outsl
push
or
or
sbb
push
sbb
ret
inc
inc
insb
sub
mov
ret
pop
pop
cmc
imul
mov
pop
jmp
je
int3
sbb
xchg
fsubrs
and
add
dec
shr
divl
cwtl
add
lret
divl
and
imul
mov
mov
ja
icebp
xchg
push
lock
int
shlb
test
cmp
out
jmp
sahf
scas
pop
out
rcrb
fnstenv
jle
push
popa
xor
adc
sbb
mov
stos
push
xor
or
xor
pusha
js
cltd
xor
and
int
xor
loope
cld
arpl
loope
push
xchg
in
xchg
rolb
and
data16
fisubrl
nop
push
xor
push
cwtl
repnz
mov
imul
jle
nop
divb
or
out
dec
in
xchg
stc
dec
cmc
pop
rcr
cmpsl
gs
sbbl
push
icebp
push
jecxz
cmpsl
jge
ret
cmc
xor
pop
jb
and
sub
int3
inc
cmp
je
pop
out
adc
and
aas
dec
dec
jbe
jb
cmp
cmp
pop
xchg
xlat
and
aaa
not
lods
insb
cwtl
add
mov
lods
dec
inc
or
xchg
fstpt
int3
scas
popf
mov
pop
in
xor
iret
pop
jno
pop
ret
cmp
fstps
in
mov
out
lods
cmp
inc
subl
sbb
mov
les
dec
into
cmp
mov
in
or
dec
xchg
loop
push
sub
sub
jne
adc
int
fs
das
in
xchg
mov
lcall
jmp
adc
imul
and
inc
push
cmp
mov
sarl
mov
cld
mov
repz
add
jbe
wbinvd
pop
cmpsl
ret
push
mov
test
popf
sbb
outsb
and
push
mov
add
rorb
mov
jg
mov
inc
fxch
sub
sub
test
sarl
or
sub
test
mov
xlat
cld
sti
arpl
pushl
cmp
sub
pop
lds
cs
fistpll
push
mov
sub
int
xchg
sub
mov
sbb
fstps
push
lds
push
inc
inc
ljmp
jo
das
xchg
popa
idivb
lock
loop
shr
pop
cli
mov
push
and
jnp
loop
pop
dec
push
fcmovu
push
adcl
pushf
and
inc
test
push
imul
push
pop
pop
pop
loop
xor
pop
dec
push
test
sub
push
mov
sub
clc
mov
cmp
das
pusha
dec
xor
rclb
sub
or
ret
jle
ljmp
jb
mov
loop
test
sbbl
insl
push
jecxz
sarb
leave
repz
or
cmp
cmp
cmpsb
hlt
call
mov
stos
sub
add
das
mov
ja
inc
sub
inc
pop
js
shlb
cli
dec
sub
add
nop
or
cli
hlt
mov
inc
test
mov
sbb
jle
lahf
cld
enter
loopne
ds
je
mov
fbstp
sti
leave
subb
or
mov
mov
adc
cmp
orb
mov
xchg
in
sarl
or
roll
or
cwtl
mov
add
cmp
sti
mov
ficoml
stos
lock
cwtl
test
xchg
int3
push
test
and
lods
cs
inc
daa
xchg
inc
jae
adc
and
and
rcl
xor
xor
cmp
repnz
mov
push
xchg
scas
int3
dec
loop
xor
cmp
lods
xor
lods
inc
mov
in
aad
lahf
mov
rsm
es
sahf
in
and
fsubrl
loop
add
mov
mov
out
jg
test
mov
jne
lods
arpl
lods
cvtps2pd
scas
jmp
imul
cmpsb
inc
fnstenv
or
mov
xor
or
fisttpl
mov
adc
dec
addl
inc
je
fwait
dec
pop
sbb
lea
cmp
cmp
nop
pop
inc
cmp
pop
jnp
sub
mov
xchg
in
bound
mov
or
xchg
pop
lahf
arpl
pop
lods
adc
mov
lods
movsl
sbb
mov
mov
sub
pusha
cmp
xchg
xchg
test
movsl
mov
outsb
pop
xchg
mov
dec
cmovns
ficomps
xchg
sbb
inc
mov
add
testb
pop
add
or
mov
or
jl
sub
mov
add
out
mov
loop
fistpl
cmp
push
in
ret
sbb
shlb
xor
imul
rorb
in
andl
aad
push
cmpsb
mov
xchg
into
shll
mov
adc
out
cmp
jno
cs
cmp
sbb
ficoms
mov
dec
push
nop
mov
push
cmp
movsb
pop
in
movsb
in
add
iret
loopne
xchg
inc
stc
xor
sbb
fbstp
fs
sub
xchg
hlt
add
test
mov
adc
int
jo
xchg
cltd
adc
mov
andb
hlt
lret
pushf
xchg
or
pusha
mov
push
sbb
dec
testb
cs
jmp
hlt
jnp
adc
movsl
jnp
mov
cmp
dec
mov
dec
add
xchg
pop
pop
mov
je
ror
dec
push
inc
icebp
aam
pop
sbb
jl
mov
jnp
dec
push
dec
jb
xor
jmp
and
adc
mov
lret
hlt
outsl
jle
enter
cltd
and
push
gs
push
xor
out
push
sbb
call
mov
mov
rcrl
push
jecxz
popa
pop
in
mov
and
xchg
arpl
add
lcall
mov
and
push
jne
lea
ret
pop
lcall
fiaddl
add
xchg
data16
cmp
mov
and
iret
lock
data16
loop
or
dec
inc
aas
pop
lret
clc
jge
jg
and
dec
jns
cmpb
push
sbb
sub
fcompl
or
andb
adc
cmp
mov
lea
pushf
xchg
adc
nop
inc
insl
and
lret
jmp
enter
pop
jo
push
gs
mov
pop
rolb
inc
sahf
xchg
mov
sbb
test
push
or
out
hlt
mov
outsb
pop
std
sahf
aas
lods
dec
into
cmp
clc
addb
sub
push
in
jbe
aas
sub
inc
lods
imul
adc
fiaddl
cmpsb
mov
dec
sub
lahf
cmp
jbe
inc
inc
inc
inc
pusha
sub
jo
setae
mov
adc
inc
in
push
xchg
jno
mov
repz
shll
add
add
sar
test
adc
adc
pop
xchg
pop
mov
jle
loope
pcmpgtd
std
iret
sub
cld
mov
jmp
and
lods
xor
mov
insb
sbb
cld
ljmp
inc
jecxz
icebp
xchg
sub
mov
in
xchg
pop
inc
push
or
pop
ja
mov
stc
sub
and
test
test
lock
lds
cwtl
outsl
js
cmp
inc
popa
xchg
mov
std
mov
xchg
push
mov
fsubl
push
jp
out
and
sbb
aam
xchg
mov
mov
xchg
lods
dec
bound
cmp
into
mov
dec
push
int3
mov
aas
pusha
xchg
and
jno
dec
lret
mov
jno
adc
dec
xor
adc
jecxz
push
fbstp
in
jb
or
arpl
pop
data16
lods
sti
cmp
sbb
xor
rclb
rolb
pop
std
out
jmp
mov
fwait
mov
insb
fld
pop
adc
dec
rcrb
xchg
or
or
push
mov
lock
fwait
stc
pusha
and
jo
ficoms
sub
jge
sti
fwait
pop
mov
aas
or
hlt
sub
enter
adc
jb
xchg
gs
sbb
adc
push
lcall
bound
aad
icebp
push
sbbl
or
icebp
jno
xchg
movaps
mov
xor
into
rorl
incb
mov
scas
out
or
test
push
lahf
ret
pop
jno
gs
or
xchg
push
adc
enter
inc
loopne
hlt
xchg
sbb
nop
and
arpl
call
dec
mov
mov
jle
aam
es
stc
fdivs
mov
xor
adc
iret
push
adc
mov
mov
mov
xchg
push
js
adc
lock
lods
jl
jo
pop
sub
sub
hlt
out
xor
xchg
pop
shrl
lahf
xchg
lock
cmp
out
and
sub
or
dec
ss
in
inc
or
pop
jns
arpl
xchg
or
movsl
cmp
lcall
mov
mov
add
loopne
jae
or
push
repnz
pop
inc
cltd
mov
sbb
jae
test
dec
sti
int
addr16
mov
or
xchg
mov
mov
sub
sahf
xchg
xchg
or
pop
mov
pusha
xchg
push
dec
ret
es
xchg
repnz
pop
lcall
daa
rorb
mov
fwait
xchg
repnz
cs
push
push
adc
stc
mov
shrl
outsl
movsl
loope
mov
add
cltd
ret
mov
pop
filds
cmp
sub
sub
imul
xchg
fcom
mov
sahf
inc
or
inc
pop
mov
mov
loope
sbb
xor
xor
fnstsw
or
adc
out
sbb
daa
add
sbb
xor
mov
shrl
xchg
inc
aas
loopne
pop
dec
movb
mov
push
sbb
or
in
imul
pop
mulb
adc
pop
rcl
and
fiadds
mov
dec
adc
jb
pop
and
repz
jle
jle
jecxz
push
or
push
lahf
loopne
test
dec
imul
lds
jmp
shl
cmpsb
sub
jb
testl
insb
push
in
stc
in
sbb
jae
add
bound
mov
mov
xchg
xchg
repnz
pop
xchg
scas
in
mov
test
jne
mov
outsb
mov
push
lods
jmp
ljmp
pop
lahf
rorl
or
ror
test
out
leave
fnstenv
gs
cmc
add
dec
inc
sbb
imul
sbb
xchg
cmp
lock
or
jp
cmc
cmp
add
or
adc
pop
les
ja
scas
jne
movsb
imulb
jne
or
xchg
pop
fldt
xor
push
out
je
inc
jmp
mov
repz
imul
cmpsl
into
sub
insl
mov
int
mov
lahf
dec
ret
xlat
or
fisubrs
mov
das
scas
or
jmp
je
in
es
push
fistl
push
daa
xchg
and
loopne
push
adc
or
add
and
ret
rorb
mov
je
xor
aam
push
ljmp
inc
jle
out
push
cltd
imul
push
orb
mov
nop
lods
test
fbstp
test
inc
and
fwait
jl
sarl
loop
xchg
movsb
mov
pop
mov
adc
fisttps
and
stc
subl
pop
and
mov
aas
repz
pop
fsubrs
cmp
lods
ret
xor
insl
test
push
or
pop
pop
push
lret
shrl
xchg
dec
callw
add
sbb
sub
cmpsb
xor
push
dec
test
ret
ret
jge
mov
scas
rcrl
in
xchg
mov
ret
mov
xchg
xchg
and
call
push
ficomps
or
xchg
sbb
das
sub
dec
rcrl
popa
cli
pushf
inc
pushf
popa
add
add
shlb
inc
in
xchg
das
sub
clc
cmp
ljmp
ljmp
sbb
cwtl
lea
and
in
ss
test
mov
jecxz
rorb
inc
pusha
add
scas
xor
mov
pop
dec
ret
int3
mov
bound
dec
cld
push
pop
popf
xor
push
push
outsb
lcall
jecxz
in
add
pop
mov
cli
cld
scas
add
addr16
loopne
or
cli
lret
sbb
sbb
cmp
js
and
push
filds
in
fwait
sbb
negb
mov
xchg
mov
pop
pop
pop
mov
push
or
das
mov
addr16
pusha
cmp
stos
push
repz
add
cmpb
lock
int
mov
addr16
cmp
push
mov
cmp
addr16
push
sub
aad
pop
out
sbb
add
push
push
xlat
add
clc
insb
repnz
mov
fsts
test
and
fsubrl
xchg
jae
sub
xchg
xlat
fidivl
test
out
xor
fdivs
pusha
das
leave
cli
push
and
pop
mov
xchg
inc
outsl
lea
push
ret
xchg
add
xchg
push
jg
imul
loope
xor
fnsave
repnz
in
mov
lahf
shrb
xor
mov
mov
insl
adc
stc
mov
ja
fcoml
add
ret
cmpsb
and
sbbb
xlat
dec
ret
inc
fisubl
inc
sahf
xor
cmp
ret
pop
cmpsl
cmp
jne
sbb
js
in
and
or
inc
repz
inc
jnp
loope
punpckldq
push
test
cld
daa
out
dec
jno
push
cmp
add
mov
cmp
push
popf
push
fistpll
pusha
iret
pop
cmp
push
shl
fdivrp
inc
mov
fists
xor
or
push
repz
and
push
push
out
aaa
pop
jb
mov
jbe
rcr
fsubrp
jnp
xchg
stos
pop
mov
adc
loop
ss
in
add
fmull
in
xchg
divl
push
outsl
push
addl
cltd
orl
rorl
xchg
lret
leave
cmpsl
mov
cmp
sbb
adc
inc
add
fisubrs
sbb
mov
jns
dec
into
call
lds
jnp
out
cmovns
xor
ss
inc
enter
xchg
in
repz
mov
mov
stc
outsl
inc
lcall
and
sub
push
push
testb
out
sub
mov
outsl
push
mov
inc
push
or
stc
jns
cmp
repz
push
push
mov
inc
add
push
mov
aaa
push
bound
mov
lds
inc
xchg
xchg
mov
mov
loope
jge
jb
adc
pop
imul
outsl
pop
in
cmp
pop
dec
popa
pusha
data16
dec
mov
cli
lods
cltd
int
pop
inc
ret
cmp
cmp
cld
jmp
mov
jmp
outsl
ftst
sarb
lret
xchg
cmp
pop
add
mov
dec
fxch
sbbl
mov
inc
mov
andl
stc
mov
sub
push
insl
mov
sub
jne
inc
movl
jo
mov
mov
scas
pop
iret
mov
adcb
dec
in
and
pop
addb
jmp
mov
mov
mov
mov
cmp
not
pcmpgtw
js
xor
mov
in
cwtl
insl
sbb
aas
lock
jns
and
addr16
mov
or
dec
jge
xchg
les
mov
pop
push
neg
mov
out
icebp
inc
popf
outsl
sbb
shrl
dec
pop
jge
jmp
pop
push
mov
rclb
xor
ja
sbb
lds
inc
push
ds
mov
lea
xlat
mov
inc
cmp
in
in
ficomps
test
mov
xchg
out
mov
icebp
dec
push
push
xor
fucom
mov
xor
and
adc
xchg
inc
repz
mov
add
or
inc
divl
andl
or
adc
fisttpll
and
aam
out
pop
mov
sub
fisubl
and
mov
pop
out
adc
std
push
jbe
push
mov
pop
test
mov
std
repnz
cld
or
sub
test
xchg
fwait
ds
sub
mov
xor
jno
fcoml
imul
xor
jge
mov
daa
cld
cmp
push
cmp
cmp
dec
jp
cmp
mov
add
jmp
push
iret
jne
fwait
and
stos
lds
cmpb
adc
ljmp
out
stc
add
adc
les
call
dec
mov
popa
je
pop
xlat
and
cmpb
fdivl
in
je
je
or
add
push
mov
mov
lds
loope
mov
or
cmpsl
and
les
cmp
dec
sbb
std
adc
es
insl
scas
leave
scas
loope
mov
mov
inc
jns
dec
dec
mov
pusha
cld
jb
insl
xor
push
test
mov
pop
loope
mov
jns
cwtl
jnp
mov
aas
xlat
ljmp
out
mov
negb
adc
lahf
dec
and
setb
push
insl
pop
mov
mov
mov
loope
cmp
clc
push
stos
dec
xchg
je
fmull
repnz
cmpsb
xor
mov
pop
clc
popf
mov
sarb
mov
in
in
nop
pop
ds
pop
adc
out
adc
aaa
fldt
and
insl
lcall
inc
insl
xchg
pop
jp
fimull
jae
mov
pop
jl
jl
fdivrl
call
out
lret
cwtl
dec
push
mov
sub
sbb
jmp
jp
test
jg
jl
out
xor
cltd
push
hlt
fisubs
lret
rclb
adc
repz
sub
cltd
sarl
dec
pop
cmp
arpl
std
jno
bound
jns
int3
add
push
and
test
hlt
cmpsb
out
icebp
jno
and
sarl
es
out
mov
fiadds
mov
mov
inc
out
popa
jns
lock
shll
jno
fs
pop
aad
lahf
les
sbb
mov
xchg
mov
loope
shll
add
pop
test
rorb
addr16
cmp
xor
jo
add
adc
inc
push
xor
dec
movsb
push
cmp
mov
dec
jo
or
aas
adc
cwtl
rcrb
vminss
popa
xchg
xlat
sub
iret
cmp
sti
push
rcrl
lahf
leave
test
jnp
sbb
adc
dec
popf
jmp
mov
inc
pop
aaa
mov
sbb
mov
scas
add
fildl
mov
push
fcmove
jae
lods
mov
cli
popf
lock
test
fs
arpl
out
pusha
shrb
inc
les
test
mov
ss
fisttps
mov
or
cs
in
jno
pop
pop
inc
xor
imul
sub
dec
pop
movl
cmp
and
out
pop
lods
push
jle
jge
jecxz
sub
mov
fndisi(8087
test
fnstsw
pushf
daa
gs
jae
femms
repnz
jg
fcmovnu
jo
ret
ret
pushf
repnz
cmpsb
in
pusha
mov
cmp
out
xor
pop
push
xchg
fs
loop
lret
or
and
rcr
test
add
loopne
or
fstl
enter
pushf
mulb
dec
in
cli
dec
js
icebp
imul
mov
aaa
push
and
lret
adc
jnp
fdivl
inc
rcll
shlb
mov
mov
jbe
adc
jae
xchg
imul
imul
pop
repz
xor
xchg
lea
xlat
cld
mov
rcll
mov
adc
mov
iret
xchg
mov
pop
ja
lock
sbb
test
out
add
mov
cs
lahf
mov
fwait
mov
rcll
rorl
dec
roll
repz
jmp
cld
xchg
cmp
add
or
and
test
xor
push
iret
pushf
movsb
jp
mov
sbb
and
sbb
pushf
lret
mov
jle
cmpsl
scas
out
call
shll
add
or
xchg
test
jmp
jmp
push
fdivl
push
pop
test
push
aam
ror
mov
addr16
sbb
mov
mov
clc
bound
or
push
mov
push
add
call
roll
pop
scas
mov
popw
mov
mov
mov
xchg
xchg
sbb
mov
mov
mov
test
jmp
mov
lock
pop
sbb
std
cmc
into
popa
les
add
fdivl
push
dec
pop
push
stos
jnp
divl
push
enter
popf
xchg
mov
jp
pop
lcall
push
in
xor
push
js
pop
pop
adc
mov
ljmp
ss
mov
mov
xor
lods
inc
mov
sub
jns
je
adc
aaa
fstpt
xor
cmp
cmp
mov
shr
repnz
jns
xor
xchg
out
ja
pop
cmc
out
bound
or
notb
mov
jbe
and
icebp
ret
xor
mov
jl
xor
xlat
dec
aas
data16
cmp
jo
fldt
and
xor
and
ret
mov
dec
pop
mov
outsl
stos
xor
sub
cli
mov
fisubrs
dec
inc
orb
imul
and
fistpll
rcll
mov
imul
cmpsb
clc
and
xchg
inc
or
adc
mov
jmp
test
sti
imul
push
adc
sub
cmp
movsb
pusha
lock
mov
stos
fistps
cmc
xchg
call
lret
loop
jle
test
adc
out
mov
push
loop
movsb
ret
or
pop
xchg
jmp
in
jecxz
in
testl
mov
cli
aaa
sbbb
inc
ss
jle
clc
ficoml
out
test
test
ret
mov
pushf
lret
jp
jle
adc
dec
or
pop
dec
xchg
loope
mov
fildl
psraw
mov
lahf
xor
pop
bound
jbe
sti
push
inc
data16
push
mov
mov
movsb
sub
jg
mov
sbb
adc
or
sbb
test
scas
pop
rcll
scas
inc
xor
xchg
ror
cmc
mov
xchg
push
cld
into
rclb
push
shrl
add
inc
jo
orb
mov
fcoml
cld
adc
test
bnd
inc
outsl
jl
pop
pop
mov
ljmp
xor
loop
mov
push
xor
lds
inc
out
scas
loope
imul
dec
pop
mov
pop
loopne
cmpsb
sbb
lret
add
jns
inc
mov
and
mov
lret
jge
mov
add
jbe
imul
xor
cld
adc
push
divb
mov
enter
sbb
inc
stos
mov
mov
mov
jbe
sahf
xor
mov
out
sahf
pop
fcoml
xchg
loop
mov
shrl
test
cmpsl
sub
add
cs
mov
pusha
dec
sub
imull
mov
xor
push
sbb
sti
push
pusha
xor
ret
add
dec
jg
ret
stos
jbe
push
iret
lret
inc
enter
push
pop
pop
fisubs
sbb
scas
insb
push
out
adc
adc
dec
mov
cmpsb
insl
or
incl
pop
ret
jecxz
cmp
inc
add
repnz
popf
mov
lahf
push
sub
add
popf
pop
dec
mov
xor
es
cmpsb
cmpsl
scas
in
shrl
js
idivb
inc
lret
out
loop
popa
repnz
jl
pop
push
inc
jmp
insl
cmp
loope
outsl
mov
mov
cld
fmull
xchg
js
sahf
mov
dec
and
inc
icebp
adc
cmpsl
cmp
test
push
icebp
sbb
cltd
dec
ret
test
cld
mov
sub
inc
inc
scas
dec
imul
push
xlat
mov
jne
jmp
or
rolb
adc
cmp
mov
in
push
pop
sub
cmp
cwtl
xchg
out
mov
cmp
push
inc
fs
push
lock
inc
xlat
fisubl
lock
lcall
sbb
adc
pop
mov
cli
dec
dec
icebp
movsl
and
sub
adc
push
inc
int3
add
or
popa
pop
sub
mov
dec
stos
test
arpl
in
jmp
mov
push
jae
pop
sub
push
mov
subl
xchg
loope
andb
cltd
sarb
test
pushf
lfence
add
inc
lea
jmp
dec
push
pushf
aad
cltd
test
jo
clc
or
ljmp
shlb
xlat
pusha
outsb
bound
mov
sbb
push
sbb
push
gs
pop
test
mov
lcall
daa
outsb
shll
test
add
addr16
dec
ljmp
and
push
bound
dec
sahf
pop
call
ja
dec
lahf
sbb
pop
sub
into
dec
mov
cmp
adc
cld
or
lcall
mov
add
or
fdivs
lock
mov
mov
cmp
frstor
inc
dec
int
int3
cmp
push
dec
cmp
and
sti
test
pop
sub
cmpsl
mov
mull
and
sbb
pushl
push
xorl
enter
lcall
dec
push
jmp
fsub
out
cmpsl
scas
add
sub
lods
in
push
add
mov
ljmp
and
mov
movsb
mov
out
std
cli
aam
mov
pushf
push
imul
mov
xor
fnsave
in
mulb
dec
mov
xchg
insb
xor
test
jb
mov
outsb
mov
mov
sbb
addl
cmpsb
jle
enter
dec
or
jnp
gs
jl
jle
sbb
enter
mov
lods
daa
mov
or
adc
mov
std
fs
xchg
mov
out
popa
outsb
out
sub
pop
cmp
addr16
xchg
jle
dec
fldl
push
and
mov
inc
sbbl
xor
enter
xchg
push
push
aam
and
fcompl
inc
cmp
mov
inc
rorl
mov
push
ret
xlat
sub
cli
dec
imul
xor
push
fwait
cmp
cld
out
mov
outsl
mov
popf
testb
sub
pop
sub
cmp
fxch
lret
cmp
in
lret
add
fsubrs
push
mov
sub
in
cwtl
add
mov
out
push
test
or
les
push
mov
sub
fidivl
faddl
push
leave
push
push
scas
sbb
adc
cmp
sbb
adc
xchg
bound
sbb
movsl
dec
mov
jle
xor
push
mov
xchg
lds
xor
push
mov
lea
sbb
jecxz
jle
les
push
lock
out
pop
lahf
fdivrl
dec
dec
mov
or
std
sbb
fisubs
dec
cmp
aad
dec
xor
inc
inc
pop
repnz
mov
pop
adc
mov
cmc
rclb
fdivl
mov
aaa
add
jae
andl
test
testb
test
lods
add
jnp
aaa
out
mov
xor
es
sub
lods
rcrl
pop
sbb
add
push
cmp
sbb
push
mov
lea
pushf
inc
popf
addr16
or
shlb
cmp
lods
xchg
push
push
mov
ret
pop
dec
mov
out
lahf
gs
shlb
aaa
mov
mov
inc
push
scas
lret
bound
jmp
lahf
out
push
pushf
pop
mov
mov
stos
push
insl
repz
test
push
ror
fists
pop
or
pop
jae,pn
jbe
pop
test
sarb
dec
or
aaa
test
movsl
das
lods
stc
add
lods
sbb
std
fbld
push
loopne
lods
xchg
cmp
push
adc
cmp
xchg
std
inc
push
sarb
xor
push
mov
iret
addb
mov
xchg
int3
dec
push
xor
insl
adcb
push
jno
xor
insl
jb
inc
outsl
cmp
movsb
cmp
cld
and
push
inc
or
push
dec
in
and
push
insl
mov
out
out
jmp
push
sub
insl
inc
or
es
dec
push
test
pop
cmp
lock
fldt
push
aaa
jl
test
ret
out
incl
ss
mov
lret
shlb
cmpsl
outsb
in
or
or
popl
inc
jno
sub
shlb
loope
sub
and
push
adc
push
outsb
fs
xor
sbb
lret
dec
std
xlat
ja
cmp
fucom
inc
dec
mov
dec
loop
push
jo
fistpl
out
addr16
test
fs
repnz
mov
test
nop
adc
incb
imul
stos
shl
dec
bnd
pop
pop
addb
adc
out
push
inc
aad
mov
fisttps
jne
inc
sub
jo
scas
xlat
ret
pop
jb,pn
adc
pop
insl
ljmp
or
or
cmc
cwtl
fldl
pop
cmpsl
lahf
les
xchg
outsb
movsl
fildl
les
xchg
repnz
jecxz
push
fwait
repnz
mov
leave
movsb
mov
subb
inc
add
or
clc
stos
jge
and
lock
in
out
inc
mov
lcall
cwtl
mov
das
mov
xchg
cltd
inc
pop
dec
push
and
xor
inc
inc
outsb
inc
mov
mov
mov
lret
stos
repz
sub
dec
addb
and
xor
adc
cli
mov
hlt
mov
mov
xchg
fisttpll
lds
mulb
add
out
lea
xchg
dec
sub
pushfw
mov
jecxz
pop
inc
popf
out
gs
clc
je
push
jmp
inc
movsb
rolb
mov
test
sbb
insb
fidivrs
push
pop
lcall
loop
faddl
daa
mov
into
ret
lock
xor
jo
shll
mov
movsb
add
cld
arpl
sbb
mov
jle
or
adc
addr16
jbe
mov
mov
sbb
xor
pop
test
adc
gs
outsb
pop
jecxz
pop
int3
xor
test
xchg
pop
push
mov
insb
aam
ljmp
push
ja
mov
add
xchg
jnp
int3
mov
fdivrs
je
pop
cld
dec
cltd
inc
inc
jle
lock
dec
pop
add
lret
pop
mov
and
pop
insl
sahf
jo
dec
mov
push
je
mov
je
and
addr16
mov
test
jnp
sbb
data16
arpl
xchg
mov
cld
push
sbb
mov
xor
or
cmp
in
icebp
fdivrs
pop
movsl
jmp
or
mov
outsl
call
xchg
in
xchg
xor
shrb
inc
mov
mov
in
mov
out
pop
inc
in
scas
xor
leave
mov
stos
sbb
lock
ret
leave
and
mov
or
and
not
mov
movsl
jae
lds
inc
jae
push
in
imul
out
and
in
inc
negb
xchg
mov
repnz
jmp
inc
or
xchg
pop
lret
cmp
cltd
fisubrl
xchg
ds
mov
push
mov
mov
int3
pop
loop
setno
mov
in
out
jle
xor
push
jbe
inc
stc
je
xor
mov
das
push
mov
aam
cmp
add
xchg
xorb
addr16
out
in
push
xlat
sub
push
lods
cmp
xor
sbb
pop
jae
mov
add
push
jne
xor
imull
add
push
or
xchg
cmpsb
mov
cmp
sbb
xchg
fmul
sbb
cld
imul
pop
jno
inc
dec
and
daa
adc
add
xlat
push
cmp
inc
loopne
and
pop
aas
mov
filds
repnz
adc
mov
push
cs
stos
add
lods
lods
xlat
dec
jns
inc
loopne
mov
mov
cmp
push
shll
std
jns
pusha
inc
out
dec
jae
sbbb
sbb
std
xchg
mov
shl
ret
cltd
sti
mov
out
cli
sub
cmp
pop
cld
inc
dec
mov
fs
mov
jl
mov
jne
pop
test
jle
inc
popf
je
pop
cmpsl
jnp
in
adc
dec
mov
mov
adc
xor
cli
aam
ljmp
movsb
fsub
and
insb
cltd
sbbl
jb
push
cmp
shl
pop
mov
rcl
inc
inc
push
mov
and
push
stc
dec
das
popf
cmpsb
dec
adc
outsb
dec
add
jg
and
clc
cli
cmp
out
jnp
fildll
aam
shr
movsl
inc
sbbl
enter
je
addr16
ds
jg
outsl
out
jg
xlat
mov
sbb
push
inc
jl
out
dec
inc
fidivrs
mov
cmpsb
jl
fldcw
imul
icebp
fstpl
sub
mov
icebp
fwait
in
jnp
ss
cmpsl
xchg
push
fnstsw
or
lahf
mov
xor
js
push
dec
cmp
frstor
fistpl
loope
in
repnz
loope
sahf
inc
or
add
and
mov
and
cld
cmpsl
mov
push
adc
hlt
mov
mov
or
pop
test
aaa
cwtl
ljmp
pushf
rcrl
xor
fadds
loopne
out
cmpsl
jno
or
fsubl
mov
cltd
clc
mov
mov
push
fcmovne
jge
outsl
inc
mov
push
fucompp
xorl
dec
enter
jno
jle
push
adc
fldl
cmp
add
jae
dec
mov
jmp
mov
ljmp
add
push
push
push
mov
std
movsl
js
orb
mov
fnstenv
push
adc
shll
push
dec
mov
in
pop
sub
fmulp
lret
fs
and
test
pop
inc
sub
mov
jg
lods
xchg
fiaddl
adc
xlat
cmp
mov
fbld
inc
outsb
sbb
cmp
add
jbe
test
dec
lahf
push
pop
hlt
push
cmp
inc
std
loopne
xlat
in
mov
jmp
or
sahf
push
jg
scas
jl
jns
mov
cmp
push
fwait
fwait
sahf
sub
lods
sar
or
inc
mov
pop
je
repz
std
add
mov
mov
aam
and
sub
lods
sub
and
or
iret
ret
xchg
out
fmull
in
pop
cmp
pop
cmpsl
jnp
mov
or
fwait
dec
xchg
lock
push
addr16
test
cld
out
or
insl
inc
push
mov
or
jle
inc
add
lret
push
and
setg
cmp
in
inc
fsubrp
mov
lds
cli
bound
pop
jmp
push
out
gs
add
and
xor
sub
ja
int3
lea
int3
enter
dec
and
insb
shlb
pop
lock
mov
in
cmp
shll
je
fstps
lods
mov
fcmovnb
mov
jmp
into
push
fdiv
rolb
mov
and
add
add
cmp
and
push
or
divb
insl
xchg
jle
or
sub
in
cmp
dec
and
cmp
rcrb
mov
insb
push
mov
insb
jecxz
sub
adc
movsb
mov
adc
popa
arpl
iret
mov
insl
and
sub
int
rorl
and
add
popl
shl
lds
test
sti
xchg
imul
cmpsb
cmp
push
fsubp
jg
or
cmp
jnp
ss
xor
jbe
mov
sub
and
cmp
mov
dec
repz
loope
cmp
inc
pop
sub
push
pop
loope
mov
fs
cmpsb
into
cld
outsl
mov
sbb
js
mov
sub
insb
mov
sub
fisubl
add
pop
test
aam
push
andnps
stos
gs
push
enter
sahf
or
cwtl
adc
cmpsb
rolb
js
dec
sbb
jg
sub
out
mov
jg
cmc
add
loope
cmp
leave
sahf
icebp
and
dec
scas
mov
frstor
add
leave
ficompl
xchg
shl
sub
jp
mov
sti
xor
dec
leave
fs
mov
and
aam
or
iret
out
test
cmp
nop
mov
outsb
call
stos
lds
shrb
pop
out
mov
ds
mov
aad
outsl
jb
cmp
flds
pop
adc
xchg
xchg
jl
push
fchs
jb
mov
push
jg
sub
iret
mov
in
pop
push
pop
movsl
xchg
roll
pusha
insb
stos
mov
lret
adc
movsl
pop
jo
adc
scas
inc
adc
out
xor
pop
push
xor
scas
fs
out
inc
jne
mov
mov
mov
gs
ljmp
scas
fwait
dec
sub
in
es
push
cmp
sbb
sbb
inc
pushf
out
pop
mov
insl
ja
ret
das
cmp
cmpsl
jge
push
jmp
inc
int
xchg
pop
cld
push
fs
cltd
xchg
notb
mov
lods
xchg
mov
pop
or
sbb
out
mov
addl
test
adc
sbb
cmp
inc
out
shl
in
adc
pop
cmp
jo
int3
mov
out
icebp
loopne
pop
jne
shlb
int3
jo
sub
adcb
hlt
mov
mov
add
or
cmp
nop
jb
lret
test
cmp
out
mov
xlat
cs
hlt
psubd
ja
clc
push
and
sbb
mov
das
xchg
pop
mov
cmpsb
stos
jmp
sbb
push
xor
adc
lret
lahf
add
push
push
mov
push
out
add
lds
aam
cld
jno
pop
fwait
mov
pop
sub
lea
test
popa
dec
and
sub
mov
mov
cmp
movaps
loope
js
inc
or
xchg
mov
jge
in
xchg
push
out
jmp
ret
movsb
imul
movsb
pusha
inc
mov
mov
xchg
repz
jo
mov
cmp
iret
adc
mov
mov
pop
insb
pop
das
mov
mov
notb
cmp
jge
in
stos
jecxz
pop
adc
or
imul
lret
mov
ret
xor
pushf
mov
aam
adc
xchg
pop
repz
outsb
aas
in
mov
call
mov
call
ds
jne
enter
neg
cwtl
mov
jo
push
dec
imul
fwait
dec
popa
inc
pushf
push
lods
scas
adc
iret
mov
pop
cltd
scas
js
push
or
aad
or
or
or
sub
sub
lods
mov
push
leave
sub
adc
jbe
enter
xor
cmp
scas
out
sbb
imul
cltd
jle
adc
das
cs
jge
xchg
ds
mov
push
rcrb
push
push
test
adc
jle
movsl
lock
inc
push
insl
or
mov
inc
mov
into
mov
pusha
jae
pop
mul
outsl
fnstenv
and
test
test
int
xchg
pop
jg
push
cmpsb
push
icebp
in
push
ficoms
jns
push
pop
lahf
test
pop
test
xchg
mov
pop
aad
lcall
xchg
dec
sahf
and
addr16
test
push
mov
mov
mov
dec
inc
dec
int3
or
mov
fstl
adc
inc
xor
or
in
mov
jbe
arpl
rorl
sbb
xchg
xor
gs
test
or
mov
sbb
mov
inc
mov
imul
repz
daa
mov
xchg
pop
cli
lods
pop
test
mov
loop
cld
and
adc
ss
sub
push
add
repnz
jb
fs
clc
or
and
movsl
adc
test
loopne
adc
ficoml
adc
adc
pop
movsl
dec
lcall
aaa
into
jecxz
fisubrs
xchg
or
gs
xchg
jnp
jne
add
lret
cwtl
andl
aad
and
sarb
fildl
push
xchg
das
mov
jae
aam
popf
icebp
movsl
add
sbb
xchg
test
out
mov
adc
rep
test
sbb
test
pop
mov
push
dec
pop
push
mov
mov
push
xor
sbb
xor
popa
add
dec
inc
cmp
jmp
pushf
push
enter
jmp
add
aad
xor
sub
sub
dec
fwait
imul
hlt
push
outsl
lcall
imul
aam
dec
insb
push
test
ret
fldl
arpl
sti
push
mov
addr16
push
cmp
pop
mov
pop
insb
add
imulb
pop
aam
cmp
jp
aaa
add
cltd
and
jb
fisttpll
jnp
mov
in
cmp
clc
xchg
faddl
push
sti
pop
lahf
in
pop
insl
mov
fwait
jp
idivl
scas
lcall
inc
inc
in
dec
inc
sbb
loope
subb
mov
jnp
sti
aas
rorb
lret
div
push
stos
movsb
pop
hlt
xorl
push
cwtl
push
insl
insl
mov
insb
adc
or
pop
clc
lea
cmp
roll
int
mov
and
add
ret
jne
scas
cmp
jmp
push
shlb
xor
xchg
popa
pop
mov
cmp
mov
jecxz
inc
stos
xchg
xchg
scas
negb
sub
mov
add
insb
andl
or
pop
into
dec
sbb
and
jbe
cmpsl
stos
pop
adc
adc
add
subb
dec
aam
dec
inc
aad
sbb
sti
ficoms
bound
xchg
xchg
push
mov
out
xor
xorl
sub
push
inc
cmp
inc
fisubrl
mov
cmpsb
or
add
add
fcomi
xchg
adc
jle
mov
inc
cmpsb
repz
hlt
push
mov
mov
nop
repnz
test
outsb
xchg
mov
pop
and
cmp
movsl
mov
pop
lea
lods
les
pop
mov
pop
xchg
adc
fimuls
lret
pop
notl
lret
mov
jle
push
aad
xchg
ss
sahf
mov
loopne
int
inc
mov
mov
push
rep
mov
push
mov
sahf
movsb
imull
add
dec
mov
cld
ljmp
fsubrs
cwtl
lret
pop
cli
xor
bound
push
sbb
mov
dec
push
sub
lea
dec
jmp
leave
lods
mov
add
dec
add
or
and
mov
imul
mov
xchg
fiadds
or
xchg
cmp
dec
movsb
aaa
jb
cmp
ja
insl
xchg
add
inc
mov
pop
rcrb
lea
or
rcrb
cmp
movsl
pop
jbe
das
lea
sahf
and
mov
es
idivl
adc
pop
imul
jnp
notb
xchg
inc
mov
data16
mov
int3
je
sarl
cmc
mov
push
dec
jle
scas
jbe
cmp
in
sbb
lahf
cmc
rorb
and
das
ret
push
and
mov
cmp
std
sahf
pop
stc
mov
mov
jbe
push
fdivs
pop
sahf
loope
shll
addr16
stc
movsl
push
in
mov
mov
pop
scas
loope
push
bound
xor
mov
adc
push
cmp
mov
ss
add
sbb
mov
dec
daa
popa
xlat
jecxz
popa
xchg
cwtl
lcall
mov
nop
add
testb
outsb
rcl
aam
imul
jns
cmpb
cmp
andl
inc
test
pop
xor
pop
mov
push
jge
sbb
iret
mov
mov
adc
inc
fdivrl
sbb
and
xorb
enter
bound
daa
ja
nop
gs
pop
aam
lea
inc
stc
jg
sub
lods
hlt
pop
mov
mov
and
pop
dec
sbb
pop
sbbb
sbb
dec
jmp
int3
jmp
mov
pop
lea
enter
sub
aad
mov
xor
pop
arpl
lods
int
imul
pusha
repz
inc
and
and
sbb
fucomp
call
clc
fimuls
ss
pop
mov
lret
ds
sbb
stos
add
mov
lods
mov
pop
inc
pop
stc
or
sub
fisubrl
adc
push
ljmp
xchg
inc
adc
sub
jl
xor
dec
add
push
jbe
lock
iret
clc
mov
push
and
or
xchg
sub
lods
or
adc
int3
xchg
popf
iret
fwait
jb
push
mov
mov
dec
std
inc
rol
sbb
cltd
icebp
shl
jge
pop
pop
adc
jo
sbb
cmp
call
lods
pop
sbb
mov
sbb
dec
clc
fsts
add
dec
imul
aad
pop
outsb
outsb
and
sbb
mov
or
icebp
dec
mov
outsl
xor
push
scas
movsb
jle
subb
imul
pop
leave
and
movsb
popf
xchg
in
aam
push
pop
mov
dec
mov
xor
addr16
idiv
push
insl
inc
mov
fucom
xlat
je
adc
pop
cwtl
cmc
movsl
inc
mov
mov
aam
jge
sbb
push
in
pushf
xchg
or
cltd
xor
aas
mov
out
inc
add
or
sarl
in
es
sub
push
es
mov
imul
sbb
fidivrl
mov
aad
ret
fstps
sub
insb
mov
or
or
cmp
clc
lods
dec
and
cmovp
insb
int3
sarb
fcmovnb
das
pop
call
adc
scas
push
arpl
push
mov
pop
sbb
cli
inc
jno
cltd
popf
mov
xchg
lcall
and
or
xor
mov
arpl
enter
test
divl
xchg
and
outsb
pop
cmpl
lock
test
rcl
sbb
adc
lret
mov
lods
jo
into
aam
sbb
dec
xor
sbb
fdivl
int3
xor
sbb
or
sub
and
sub
pop
into
int
shl
and
and
pushf
bound
lret
hlt
xchg
sbb
inc
lock
scas
test
leave
ja
sti
push
mov
mov
push
addr16
mov
into
mov
scas
fbstp
and
jo
inc
std
add
enter
int
movsl
pop
sbb
fs
push
add
ds
int
and
jl
ljmp
jge
push
push
iret
pop
pop
cs
add
cmp
sub
xchg
push
add
and
dec
int3
shl
cmp
pop
inc
jae
loopne
dec
sub
add
pop
adc
or
movsl
scas
mov
push
adc
mov
push
iret
jmp
cltd
out
xchg
jae
mov
in
bswap
mov
mov
jnp
add
xchg
cmp
and
addr16
js
into
insl
fidivrl
fdivrs
push
lret
test
xchg
pop
and
js
iret
fdivl
pop
pop
pop
push
jp
adc
pushf
inc
test
adcb
fs
cmc
mov
sbb
out
into
jb
addr16
sbb
inc
mov
mov
imul
lock
mov
stc
nop
mov
call
aas
imul
gs
dec
iret
xchg
cs
ret
lods
xchg
pop
and
outsl
imul
fmuls
cmpsb
call
movsl
ret
js
xchg
hlt
jno
mov
lahf
xchg
push
and
mull
mov
mov
insb
inc
fwait
adc
iret
inc
sbb
xor
pop
xor
cmp
mov
mov
jecxz
push
divl
out
insb
xlat
jne
test
lahf
icebp
test
outsb
lods
lea
mov
leave
gs
dec
fwait
in
in
icebp
mov
xchg
imul
fsubrl
lods
jne
pop
popa
mov
in
push
jbe
rcr
push
test
popa
pop
daa
fnstsw
push
or
pop
test
cmp
sub
push
cmp
lahf
xchg
inc
adc
sub
mov
jnp
imulb
xchg
imul
andb
clc
mov
adc
in
jecxz
test
push
bound
in
or
xor
adc
sbb
xlat
add
incl
loope
fwait
inc
rolb
mov
pop
inc
xchg
mov
mov
xor
mov
mov
sbb
mov
cwtl
aam
std
mov
cmc
sti
test
aas
dec
inc
fisttpl
lods
cmovns
aad
dec
push
fldln2
ja
jmp
stc
je
inc
push
mov
pop
insb
pushf
add
int
dec
sbb
aas
mov
cmp
mov
jne
movb
movups
mov
icebp
rorl
cli
ss
jmp
insb
fwait
mov
mov
lcall
push
xor
jo
ja
cmp
mov
dec
outsl
or
xor
in
inc
jg
les
pop
lret
mov
add
dec
hlt
rcr
xchg
leave
dec
push
insb
popa
add
incb
imul
or
inc
push
dec
mov
repz
call
insb
pop
scas
push
pop
ret
scas
push
jbe
cli
in
and
sbb
push
std
inc
add
xorb
pusha
les
adc
or
js
lods
and
fists
cltd
xor
pop
xchg
sti
ret
arpl
sbb
pop
dec
movsb
cmp
mov
stos
dec
inc
repz
lock
jmp
push
test
mov
mov
scas
aam
pop
mov
jo
and
push
xchg
fisubl
push
or
movsl
adc
inc
je
mov
bound
aad
test
shrb
pop
enter
cltd
cmpsl
fldl
movl
xor
testb
inc
cmp
pop
inc
jmp
rcll
fwait
lods
sub
outsb
lods
push
mov
push
cltd
mov
or
add
lods
loop
enter
and
mov
mov
jg
les
aaa
and
out
dec
fstpt
push
adc
shll
sbb
jae
in
lcall
jecxz
ljmp
aas
push
test
cwtl
lret
imul
aaa
aam
push
mov
and
outsl
int
int
dec
loop
cwtl
fs
std
cmpb
sarb
pop
xchg
dec
aas
pusha
mov
xchg
ret
inc
jo
push
xchg
adc
scas
xchg
outsl
lock
adc
mov
fists
int3
pop
lahf
cmpsb
testb
push
jae
push
fs
push
sbb
shll
movsl
out
inc
mov
adc
ja
or
mov
outsb
cwtl
pusha
call
ret
jb
divb
ret
outsl
xchg
ret
push
enter
mov
jmp
add
test
mov
or
add
adc
subb
and
or
stos
mov
mov
mov
std
and
dec
inc
in
add
jp
fs
jb
shr
or
stos
mov
sbb
pop
std
sub
push
adcb
xor
cltd
fidivrl
test
inc
or
into
subl
daa
clc
insl
push
xor
jbe
and
icebp
cltd
sbb
add
mov
pop
jp
cmpsb
xchg
add
iret
push
mov
pop
stos
push
cmp
data16
icebp
ficoml
xor
fisubrs
cmp
out
test
pusha
ja
and
std
push
iret
push
add
test
outsl
sbbb
int
repnz
xchg
lock
push
push
pop
and
push
negl
js
xor
push
or
leave
cmp
push
aam
iret
sbb
pusha
in
jns
xor
sub
cli
lods
test
out
mov
sti
jg
fnsaves
das
les
cwtl
push
push
shrl
ret
cs
fcomip
jo
ds
sub
aaa
jle
cs
ret
ja
mov
cmpsl
sub
mov
push
mov
adc
test
mov
bound
cmp
lods
mov
xor
loop
ret
aaa
loopne
int3
sbb
imul
add
adc
cmpsb
xor
cltd
mov
mov
xlat
loope
mov
mov
cmp
mov
mov
movsl
add
mov
les
xchg
xchg
insb
rcll
mov
dec
fidivrl
push
inc
dec
mov
cmpsl
add
dec
ljmp
mov
test
leave
mov
xchg
jae
negl
clc
cs
xchg
pmaddwd
test
mov
fwait
cmp
push
inc
rolb
out
sub
lret
rol
mov
orb
adc
fsubl
lock
icebp
rcll
push
mov
push
or
pop
call
mov
push
nop
addr16
mov
inc
sbb
xchg
out
out
fsubp
inc
stc
cltd
and
push
in
mov
xchg
mov
fidivl
adcl
push
lea
test
sbb
add
dec
aas
sbb
or
cmc
hlt
xchg
jb
ret
or
test
lea
imul
test
mov
aad
es
stc
testl
mov
add
xchg
inc
xor
imul
push
test
sub
mov
or
mov
test
sub
movsl
dec
adc
orl
jo
pop
stos
stos
xor
jnp
aam
ljmp
notl
cld
mov
inc
inc
pop
jno
xchg
insb
inc
xchg
aad
rcl
arpl
out
icebp
jnp
xor
enter
sti
add
outsb
sub
lods
or
subl
mov
pop
xor
aas
test
shlb
stos
and
cld
and
mov
fdivrl
mov
mov
cmp
shll
xchg
movb
std
or
sbb
pop
dec
sbb
ret
xor
outsb
lods
stos
mov
mov
in
push
xlat
jl
jge
dec
outsl
outsb
pop
push
fadds
push
imul
mov
sti
leave
int
lcall
insl
jmp
sahf
in
mov
fs
dec
or
xchg
mov
or
jmp
fisubl
sahf
lea
mov
fldenv
loope
cld
insl
ret
jp
dec
sar
mul
xchg
mov
loopne
loop
mov
mov
xchg
inc
mov
mov
fists
out
fwait
out
lea
sbb
cs
iret
jg
scas
js
xor
mov
inc
sub
inc
aad
out
test
jo
jae
mov
lret
rcrl
jno
push
mov
jns
addr16
sbb
lock
cmp
cmpb
jno
outsl
ds
inc
push
mov
fistps
pop
fimull
jae
jecxz
sub
inc
jnp
gs
lds
popa
inc
sbb
pop
dec
jg,pt
sub
xchg
cltd
sub
mov
nop
insb
add
popa
and
sub
daa
fidivl
subb
sub
outsl
call
inc
pop
dec
xor
push
push
jae
loopne
jp
mov
cli
dec
jmp
loope
ja
mov
cmp
inc
lods
inc
insb
cltd
push
dec
pop
push
mov
js
jae
in
out
jnp
outsb
cvttps2pi
cli
test
lret
add
data16
pop
fwait
jge
pop
inc
nop
jge
loop
daa
lret
je
dec
inc
stc
dec
xlat
jbe
mov
in
and
push
cld
push
xchg
sbbl
sub
cltd
sbb
mov
fmull
daa
cmp
insb
lret
cwtl
stos
xor
insl
inc
jnp
xlat
dec
mov
cwtl
call
out
fwait
sub
mov
int
sti
enter
push
cld
subb
leave
and
cmpsl
ficompl
daa
cli
stos
shrb
pop
jg
adc
imul
jmp
or
mov
sub
push
fcmovne
mov
sub
mov
and
test
add
add
mov
lret
lods
adc
pop
movsl
bound
in
leave
mov
cmpsl
inc
jge
sbb
add
and
jle
iret
fwait
std
fidivs
sub
or
lods
cltd
gs
jmp
mov
sbb
xchg
sub
push
sbb
rcll
repz
jp
xchg
out
xlat
dec
fildl
bnd
cld
jne
add
movb
outsb
xor
and
lahf
cs
xor
mov
add
push
push
pop
sbb
loop
outsl
xchg
les
stos
outsl
or
outsl
lcall
sahf
mov
pop
pop
sbb
cli
jle
pop
jmp
jcxz
xchg
fildl
pop
insb
pop
sbb
push
imul
dec
cmp
push
pop
mov
pop
stc
jp
push
data16
xor
imul
inc
shl
pop
shlb
daa
or
inc
into
test
ja
or
lcall
sub
enter
mov
shrl
out
stos
adc
mov
lds
and
sbb
nop
insl
mov
mov
rorl
out
test
es
push
jmp
sbb
jbe
xorl
pop
into
xchg
cmp
cli
test
adc
aad
add
ja
lea
jg
btr
in
jno
pop
dec
in
or
ss
and
scas
push
shl
mov
mov
ljmp
pop
stc
bound
jg
pop
sbb
jae
push
leave
sarl
xor
ficompl
sbb
out
inc
data16
inc
lret
ljmp
call
xchg
je
and
push
dec
ficomps
jmp
fiaddl
mov
pop
pushl
ja
test
cmp
sarb
js
into
pop
sti
jmp
cmpsl
adc
add
mov
cli
push
push
sub
mov
sarb
xchg
cmp
cmp
stos
fistps
adc
sub
out
jns
rorb
leave
aad
xchg
sbb
shll
sarl
pop
sub
or
mov
int
arpl
dec
mov
xor
hlt
dec
xchg
xchg
sti
hlt
loope
xor
stos
mov
cmc
sbb
leave
cmp
rorl
cmp
mov
mov
push
xchg
dec
sub
add
inc
push
dec
pop
adc
imul
sbb
dec
xor
ret
cmp
jle
push
cmp
das
push
fiadds
fsubrl
mov
pop
xor
out
icebp
adc
lock
cld
popa
lahf
dec
and
ror
jnp
in
push
or
mov
jle,pn
sbb
push
leave
popa
loopne
insl
jbe
push
and
lock
into
idiv
xor
and
sbb
add
gs
ror
fs
lret
mov
cwtl
hlt
mov
xchg
adc
sti
fildl
mov
inc
xchg
push
mov
and
popa
shrl
cmp
jnp
sbb
add
pusha
or
adc
xchg
inc
push
adc
faddl
push
pop
pop
xchg
mov
xchg
sbb
outsl
je
sbb
popa
sub
test
imul
mov
hlt
mov
sub
push
in
pop
jg
or
sub
cmc
push
andb
sub
imul
ret
mov
test
imul
pop
test
imul
divb
lods
xlat
xchg
fs
jno
adc
imul
mov
and
add
lret
in
hlt
dec
add
jecxz
add
fcoml
cmp
adc
mov
dec
cmc
ret
sti
enter
pop
inc
fistpll
xor
shll
or
mov
ljmp
outsl
adc
mov
xchg
mov
daa
mov
sbb
push
in
pushf
mov
icebp
sbb
push
loop
add
dec
mov
push
xor
pop
sbb
mov
sub
or
xlat
and
dec
adc
enter
ret
sub
mov
mov
mov
ljmp
mov
jnp
das
adc
cmc
xchg
mov
xlat
in
sbb
mov
pop
xor
mov
mov
loope
ss
xchg
mov
mov
add
xchg
xchg
xlat
xor
or
outsl
jae
and
aad
icebp
pop
xchg
subb
cmp
adc
lcall
cltd
xchg
rol
jle
incb
sbb
aad
insl
sub
jg
mov
lea
cmp
mov
adc
sbb
add
cmp
inc
inc
fs
call
adc
jnp
sarb
mov
mov
ljmp
inc
and
cmpsb
add
and
xlat
mov
push
outsl
mov
movsb
stos
xchg
sbb
test
or
xchg
aad
fstps
int
out
xchg
scas
into
mov
jmp
dec
jg
icebp
fisubs
inc
sub
mov
call
xchg
pop
cld
sub
fistpl
adc
jle
jbe
pop
adc
testb
mov
add
lock
aad
dec
push
jp
push
jle
mov
mov
jg
dec
or
aaa
lcall
data16
ss
jl
ret
in
cmpl
sbb
loope
outsl
sub
mov
jnp
and
push
or
sub
push
ja
ss
fsubrl
push
xor
xorb
das
ret
shlb
xor
mov
mov
mov
inc
bnd
sahf
add
sbb
mov
dec
arpl
inc
into
jbe
sar
aam
fidivrl
scas
mov
mov
lods
push
jae
mov
sub
add
mov
jg
inc
dec
mov
push
ja
xor
push
sbb
sti
pop
pop
pop
dec
jae
mov
mov
sbb
loopne
add
mov
repnz
fxch
sub
outsb
cs
clc
sub
std
rolb
lock
and
mov
inc
xchg
je
scas
and
xor
add
out
mov
enter
pop
das
sbb
ficompl
sbb
daa
xlat
mov
push
je
adc
mov
xor
inc
push
mov
mov
pop
lds
addb
sti
push
and
hlt
inc
mov
std
add
sub
call
pop
mov
pop
or
stos
rcrb
push
cwtl
shlb
mov
fimull
aaa
fadds
add
lock
jecxz
xchg
or
or
xor
arpl
mov
gs
and
xor
cmp
movsb
out
fsub
ret
lea
int
dec
xchg
mov
loope
mov
sub
int
lods
addr16
js
mov
mov
cld
xorb
popa
mov
sbb
test
rclb
mov
pop
jmp
add
sbb
popa
sbb
sti
in
sub
mov
je
ret
xchg
ret
push
call
pop
push
shlb
js
lock
bound
jbe
inc
push
enter
jp
psubusb
fstpl
scas
dec
jecxz
or
dec
imul
sub
pushf
mov
mov
dec
in
std
mov
ficoms
inc
int3
mov
lahf
jl
ficoms
movl
bound
out
daa
push
xchg
lds
mov
idivl
xor
lahf
stos
mov
fisttpl
mov
pop
mov
mov
dec
mov
pop
js
addr16
jo
inc
xchg
xor
jge
xlat
out
call
push
pop
out
ds
hlt
adc
xchg
sub
cwtl
mov
mov
or
ss
sbb
adc
jnp
pop
test
xchg
stos
jmp
cld
orl
test
sbb
int3
out
into
fmull
mov
sub
daa
negl
nop
pop
mov
in
and
rcr
and
xlat
sbb
daa
inc
sub
xchg
sub
imul
and
cmp
lret
subb
add
jb
in
idivb
out
rorb
in
pop
stc
repnz
sbb
pop
jnp
in
les
into
push
jo
rorb
icebp
jmp
fdivl
push
es
xchg
out
aaa
jp
outsl
aad
cmp
test
je
or
rorl
in
rcll
adc
push
dec
jle
add
mov
shll
rcr
stos
xchg
enter
test
sahf
and
sub
arpl
mov
leave
loopne
jbe
fwait
push
mov
cmp
test
std
push
mov
arpl
inc
out
testb
cmp
push
adcb
test
sub
fndisi(8087
dec
fistpl
insl
push
inc
xor
shlb
mov
cld
filds
and
fst
in
dec
push
popa
insl
mov
and
movsb
push
enter
mov
gs
jae
pop
and
xchg
gs
inc
ret
test
push
or
repnz
mov
xchg
sub
mov
xor
jg
and
data16
test
icebp
add
and
in
stos
insl
mov
add
xchg
fimuls
push
push
xor
mov
mov
jp
mov
icebp
jge
add
in
jmp
push
or
pop
nopl
sbb
lret
sahf
lcall
leave
lret
or
cmp
lret
cwtl
cwtl
out
or
inc
notl
sbb
mov
or
lahf
ret
sbb
adc
or
scas
pop
jno
ja
mov
sbb
lahf
cmp
mov
push
outsb
fildl
push
mov
je
std
pushf
jno
add
lret
fisttpl
push
movsl
lds
lods
cmp
popa
sub
ja
movsl
adc
lahf
add
adc
cmp
sbb
xchg
cltd
bnd
js
shl
insl
rclb
xor
pop
xchg
addr16
pushf
outsl
mov
sysexit
loop,pt
xchg
mov
inc
fwait
add
imul
ljmp
cmpsl
int3
adcb
es
xchg
mov
aaa
ja
mov
scas
add
xchg
jmp
pushf
pop
addb
cs
in
adc
aam
ror
add
xor
repz
cmpsl
jno
loop
or
cmpsb
mov
jno
fcomp
loop
push
lea
inc
das
repz
mov
les
pop
push
sbb
sbbl
sti
es
fs
cmp
popf
in
clc
inc
dec
lahf
sbb
jne
pusha
push
roll
dec
fimuls
daa
mov
mov
in
pop
adc
dec
into
mov
cmpsb
jae
mov
cmpsl
dec
push
pop
stos
cmpsb
dec
xchg
jmp
int
lds
fcmovnbe
push
test
test
ljmp
aad
jp
movl
jge
mov
sub
and
rclb
jmp
and
inc
cmp
pop
xorl
ds
add
imul
push
out
loope
leave
and
xchg
ds
js
or
notl
cli
out
xlat
jbe
push
or
inc
int
ds
pop
or
mov
out
pop
lea
dec
xor
out
xchg
outsb
adc
pushf
jnp
mov
mov
and
sub
sub
popa
adc
or
inc
into
loope
or
das
insb
jecxz
mov
xor
xor
cmp
pop
jns
fs
fists
fildl
fldenv
adc
lahf
scas
sti
loopne
out
add
into
fcomps
jne,pn
cwtl
addr16
push
cmc
js
mov
sub
test
sarl
ds
dec
cmpsl
push
mov
pop
xor
fistps
xchg
orps
push
enter
int
mov
mov
clc
inc
cmp
dec
scas
push
or
xchg
dec
fists
sub
icebp
ret
rorl
loop
lcall
loop
pop
xchg
add
out
xchg
jecxz
fs
dec
pop
push
mov
cltd
hlt
jle
mov
movsl
cld
add
pop
icebp
sub
dec
das
push
mov
outsl
xchg
fidivl
pop
pop
add
adc
push
test
sub
pop
cmpsl
dec
mov
sbb
rcl
jns
dec
inc
cltd
and
arpl
or
std
jns
sub
jle
dec
mov
dec
dec
out
cmc
daa
bswap
jno
and
popf
ss
add
lods
insl
adc
loop
sbb
adc
mov
lret
cmp
or
sub
mov
adc
add
add
sti
mov
outsb
stc
mov
push
sub
and
add
xor
in
mov
cs
pop
imull
fistps
cs
inc
cmp
mov
add
pushf
xchg
adc
mov
in
imul
adc
fbstp
rolb
dec
and
jl
xlat
cmc
das
jb
enter
fstl
push
filds
scas
lods
mov
mov
fldenv
out
jecxz
mov
aam
test
xchg
jmp
scas
pmaddwd
xor
aad
clc
fstpt
fwait
test
out
jp
sbb
jns
add
and
jae
jecxz
cmp
repz
mov
push
insb
mov
scas
rcrl
ret
dec
dec
and
sbb
push
dec
jo
jmp
push
aas
mov
mov
jae
xchg
jmp
lds
push
scas
pop
and
dec
jae
mov
cmpsb
stos
movsl
rcl
loope
mov
into
xlat
mov
int
pop
pop
addr16
push
dec
sahf
rcll
int3
cmp
push
cmc
inc
negl
xchg
ret
cwtl
stos
popa
jge
jp
add
ret
lret
add
data16
mov
and
cmp
push
push
mov
xor
pop
adc
mov
add
xlat
sub
nop
es
cwtl
test
lea
push
pop
xlat
out
imul
popf
xchg
pop
icebp
xchg
pop
stos
mov
cmp
into
mov
mov
sub
sub
mov
mov
out
add
xor
and
out
lock
and
lods
push
imul
push
cmp
les
out
xchg
test
inc
imul
push
sbb
push
bound
xor
ds
clc
adc
jbe
fnsave
push
mov
xchg
jmp
pusha
push
or
fnstsw
pop
dec
sbb
outsb
repz
fwait
int3
fwait
cmp
lds
loope
and
xor
orl
add
es
mov
fs
sbb
int
test
fcmovne
dec
arpl
mov
mov
out
add
pop
or
leave
cmp
jno
sbb
dec
mov
dec
mov
into
lock
lret
inc
adc
dec
pusha
adc
cltd
inc
mov
cwtl
and
lret
sbb
inc
mov
js
pop
mov
xchg
sbb
lock
ja
or
mov
ficompl
insl
out
sti
rorb
aad
adc
or
shrb
sub
dec
imul
pushf
pop
and
push
lret
adc
ja
mov
ljmp
push
cmp
or
push
sbb
sub
mov
xchg
bound
push
jle
fcoms
in
mov
arpl
jae
xchg
inc
xor
cmp
dec
leave
mov
loop
dec
adc
mov
imul
adc
out
out
dec
gs
icebp
dec
data16
mov
inc
nop
cmp
cltd
fildl
sub
pop
cmp
cmp
das
mov
imul
pop
fucomi
loope
fdivrs
ljmp
pop
sbb
outsl
jp
add
mov
fs
roll
or
pop
ljmp
pushf
repz
out
movsl
lds
mov
push
and
stc
std
dec
fists
lea
mov
daa
inc
add
or
mov
mov
inc
jns
add
dec
or
push
pop
fisubrs
push
add
and
rclb
push
test
xchg
add
adc
add
sti
pop
imul
dec
mov
fsubrs
js
sbb
inc
cmp
pop
mov
inc
or
add
movl
das
outsl
stos
repnz
or
push
push
testl
adc
xchg
scas
jecxz
jno
fcmovnbe
push
mov
jo
mov
testb
addr16
cwtl
and
dec
les
hlt
push
xor
pop
cmp
sahf
fimuls
and
or
lods
sub
jmp
aam
out
nop
mov
mov
std
sub
cmp
push
arpl
into
xchg
inc
pop
jnp
das
xchg
xor
bound
addr16
jno
fsub
add
jnp
ds
stc
and
push
fimull
aam
jb
push
push
les
daa
xor
and
arpl
es
push
inc
and
pop
into
ljmp
out
adc
mov
rolb
pop
cmp
lds
movsb
sbb
or
imul
or
decb
std
stos
lret
push
es
or
lahf
lahf
dec
jmp
in
in
push
out
jb
iret
push
xchg
fists
mov
imul
cli
cmp
mov
and
decl
push
xchg
ret
push
push
cmpsl
xchg
jl
fucompp
mov
test
out
or
pop
lods
into
cmp
int
cmc
decl
ret
mov
scas
int3
or
and
push
and
test
addr16
cltd
out
ret
jp
dec
lcall
dec
scas
and
movsl
adc
pop
imul
jb
inc
mov
mov
mov
xchg
movhlps
fcmovnbe
mov
push
xchg
mov
idivl
xor
rcll
sub
push
sbb
xchg
jmp
sti
sbb
sahf
int
add
and
shll
call
jno
mov
sbb
sub
cmc
add
adc
and
sub
mov
hlt
dec
sbb
lock
aaa
lock
xchg
scas
sar
dec
fwait
adc
sub
push
mov
cmp
shlb
test
mov
insb
xchg
pop
jo
mov
or
ja
fiadds
xchg
insl
sbb
cmp
lea
push
push
jle
int
or
movsl
outsb
or
test
cmc
in
or
outsb
insl
mov
nop
cmpsl
jnp
cmp
ret
ja
sub
push
jb
rcrb
push
mov
pop
stos
lods
icebp
pop
add
xchg
xchg
cmp
xor
sub
scas
inc
ret
ret
sbb
and
inc
shl
jmp
pop
sub
push
movsb
inc
dec
fcmovnu
aas
cmp
test
rcrl
cmc
cli
leave
mov
push
pop
pop
dec
adc
sub
adc
scas
xor
push
or
lods
sbb
jl
cltd
std
stos
push
cmp
xchg
divl
xchg
sbb
add
aas
aad
mov
or
mov
out
push
push
call
fistl
cmp
xlat
imul
stos
xchg
shll
rorl
jno
jmp
sahf
sahf
push
cltd
test
and
and
fwait
repnz
shrb
mov
arpl
mov
add
pop
push
mov
jae
add
cld
cwtl
and
xchg
lea
cmp
and
loop
mov
imul
add
ds
pop
adc
and
movsl
dec
scas
mov
push
pop
fimuls
sub
ja
push
pop
iret
jne
inc
subb
cmp
inc
comiss
sbb
dec
push
jno
dec
sarl
cmp
mov
scas
pop
aam
lahf
repz
daa
xchg
test
loopne
ret
inc
imul
in
fisubl
add
lcall
sub
bound
inc
cmp
pop
inc
mov
jae
xchg
adc
push
mov
inc
clc
mov
shll
ffree
mov
and
outsb
int
sub
xchg
push
jle
cmp
je
push
ret
mov
aam
pusha
sarb
out
cmp
push
dec
pushf
add
mov
jecxz
lret
mov
xor
mulb
cmc
jg
pop
jp
adc
cld
and
adc
xchg
mov
ret
lods
lods
mov
cmpl
fcmove
mov
pop
add
mov
clc
repnz
cmp
jb
cli
xor
popa
fistpll
call
int
xchg
jo
lea
imul
cmp
xlat
pop
lret
iret
test
ja
into
jl
jae
hlt
movsl
push
scas
inc
mov
add
enter
mov
lret
push
loope
nop
dec
dec
cld
push
mov
xchg
mov
fwait
mov
int
xchg
inc
mov
int3
dec
or
xchg
jge
pop
sub
movsb
insl
adc
sar
icebp
outsl
pop
cwtl
mov
insl
push
lahf
addr16
clc
movsb
aaa
push
sub
sbb
movsl
subl
jecxz
pushf
cltd
xor
incb
in
xorb
xor
mov
inc
ret
mov
sub
sbb
inc
pop
ds
insl
or
xor
repz
les
adc
mov
hlt
or
sti
mov
call
rcrl
lahf
sbb
pop
push
and
std
xor
enter
mov
pop
sub
mov
fbld
in
xchg
test
das
repnz
sbb
xchg
mov
mov
add
sti
cwtl
test
lahf
enter
and
mov
push
push
clc
push
imul
and
sahf
mov
cs
adcl
jno
inc
jmp
jae
int3
dec
cmp
jnp
ret
add
out
mov
add
lcall
adc
lea
mov
inc
call
mov
imul
and
pop
sub
sub
test
mov
sbb
fwait
mov
fisttpll
and
stos
dec
inc
outsl
push
jmp
std
jp
mov
cmp
push
movsb
xchg
fmuls
imul
sub
xor
scas
fcmovne
sub
xchg
lret
dec
mov
sub
stos
clc
cmp
pop
mov
mov
xor
push
ret
outsl
push
pop
scas
sbb
bound
sbb
sub
pop
push
int
mov
or
fcomip
push
sbb
push
pop
sti
cld
test
clc
pop
rorb
dec
xor
jl
xor
das
cmp
inc
pop
sbb
ljmp
leave
xchg
mov
loope
fiadds
and
pusha
dec
clc
sub
jmp
ljmp
jnp
notb
cwtl
jno
ja
scas
push
xchg
loop
iret
cltd
out
sub
and
ret
popf
lahf
pushf
jecxz
pop
pop
mov
adc
cmp
sbb
mov
cmpsb
push
dec
lret
stos
cmpsl
adc
sbb
inc
mov
mov
and
push
mov
inc
mov
inc
cmp
in
lret
fbld
dec
mov
add
xorb
dec
std
aad
out
or
xor
movsb
ret
stc
xor
pushf
add
sub
sub
lods
and
idiv
inc
cmc
push
rcll
in
scas
cwtl
cmpsl
daa
mov
call
jmp
mov
stos
lahf
mov
jns
call
out
mov
xor
subb
adc
mov
pop
jle
push
cmc
sbb
scas
xchg
sub
push
in
xchg
pop
ret
adc
inc
fsubrs
mov
rcr
in
cmp
cwtl
test
pop
enter
rorl
xchg
stc
xchg
or
push
sbb
fstps
xor
stos
dec
rolb
cmp
pusha
xchg
iret
and
data16
std
mov
out
jmp
imul
jo
popa
mov
cmpsl
stc
inc
icebp
push
xor
out
gs
inc
and
fdivl
aam
add
testl
jg
xchg
fldt
push
mov
jecxz
repnz
negb
in
lcall
mov
adc
shrl
push
cli
or
std
push
and
inc
push
dec
push
push
nop
fcom
push
xor
cmp
or
xchg
lds
stos
add
aad
shr
arpl
leave
sbb
adc
mov
jbe
or
fs
push
mov
mov
adc
sub
sar
mov
daa
adc
mov
mov
cmc
mov
pop
popl
ret
jge
push
nopl
add
pushf
lods
mov
je
jnp
jp
ja
xchg
inc
xchg
mov
js
xor
insb
push
test
sub
std
aas
add
std
and
movsb
cmp
aam
dec
jmp
mov
int3
dec
mov
add
outsl
push
cmpsb
fnsave
rclb
push
mov
imul
push
popf
test
push
adc
dec
dec
popf
xchg
mov
dec
in
js
xchg
and
pop
imul
js
rclb
cmc
jno
or
lcall
xchg
nop
cltd
or
mov
xchg
xchg
popf
sbb
xchg
scas
out
xchg
add
dec
push
sbb
mov
or
pop
clc
xchg
mov
xchg
pop
sub
addb
mov
ss
mov
pop
mov
mov
pop
sahf
add
es
sbb
pushf
jae
repz
xchg
aas
push
push
inc
jecxz
fnstsw
movsl
push
mov
inc
pop
idivb
push
pop
lds
sbb
or
cld
mov
push
shlb
sub
pop
enter
loopne
adc
ds
mov
inc
jle
dec
mov
rcll
test
ret
outsb
lods
je
push
jns
iret
push
jb
or
jns
mov
cmpb
inc
cmpsb
addr16
adc
xor
and
mov
in
outsl
popf
dec
stos
scas
fnstenv
pusha
mov
int
xor
dec
xor
push
mov
mull
int
test
push
cmp
jno
insl
or
pushf
xor
in
rcll
out
push
ja
testl
into
sbb
fcoms
mov
xor
sbb
mov
aas
shrl
in
icebp
ret
stc
xor
mov
lahf
enter
cli
ret
dec
pop
lret
jl
inc
fisttps
jnp
enter
xor
fcmove
mov
mov
jp
repnz
dec
xor
inc
sbb
adc
inc
sbbb
ret
mov
mov
lcall
stos
jg
dec
sub
sub
ss
cmpsb
cmp
pop
fcmovbe
hlt
and
jle
push
xchg
fucom
out
test
insb
lds
test
sub
popf
inc
pop
mov
mov
push
cmp
sub
ja
fucomp
daa
das
and
lods
imul
sub
jno
leave
mov
or
jmp
test
outsl
xchg
cmpsb
and
lods
push
push
sub
sbb
push
fidivs
mov
pop
push
lahf
lret
inc
jmp
sbbb
imul
lcall
xor
sub
pop
mov
test
daa
test
sub
add
fistl
adc
adc
or
stc
aad
lods
lea
cmp
cmp
sub
in
sti
fcmovnbe
fldt
cmp
imul
dec
add
or
fisttps
or
push
rcll
fadds
push
push
adc
ss
fsubrs
inc
mov
sub
mov
scas
daa
xchg
xchg
movsb
enter
xchg
cmp
daa
test
shlb
test
jb
xor
dec
sub
test
sub
pop
data16
mov
addl
fimull
jo
cld
fcoms
mov
inc
test
outsb
dec
xchg
in
out
or
sbb
lahf
ret
fwait
in
fidivl
into
mov
icebp
dec
orl
shlb
dec
jle
lods
jecxz
pop
loope
inc
lods
jae
inc
test
es
mov
lret
mov
into
sbb
les
fsubs
ljmp
arpl
push
xchg
or
sbb
out
lods
test
xchg
ljmp
mov
scas
and
jmp
mov
or
stos
jb
addl
movsb
inc
fwait
das
mov
lock
subb
jecxz
cmp
mov
mov
lods
cmp
dec
jno
cmpsb
adc
push
leave
mov
rorl
fidivrl
pop
nop
ja
push
push
cmpsb
mov
iret
fimull
out
std
mov
cmp
imul
dec
hlt
cmpsb
pop
popf
jle
jnp
clc
addl
popf
adc
adc
inc
pop
cmpsb
jnp
sub
lock
inc
pop
in
jmp
and
lds
push
jecxz
jg
rol
jae
icebp
xor
ljmp
pop
adc
test
popf
add
push
lods
in
or
cmp
js
xchg
sbb
flds
or
hlt
mov
pop
sbb
or
or
roll
repz
xor
lret
test
pop
cwtl
ja
adc
push
lret
shlb
mov
mov
enter
xorb
sbb
xor
pop
dec
inc
pop
push
scas
inc
xlat
sub
mov
inc
xchg
adc
mov
out
fimull
push
push
inc
mov
aas
mov
frstor
int3
or
js
xchg
imul
repnz
jae
std
adc
ja
mov
icebp
jle
pop
loope
xlat
sbb
mov
test
jns
orl
add
pop
jecxz
pop
jns
in
icebp
push
movsb
mov
iret
mov
jecxz
push
xchg
scas
nop
mov
mov
dec
test
inc
mov
and
popa
and
sub
inc
pushaw
lret
add
mov
pop
fstpt
mov
scas
unpckhps
push
dec
sbb
js
out
cmpl
pushf
scas
jge
push
pop
popa
loopne
jl
leave
adc
jecxz
cmpsb
data16
ss
jbe
gs
rcll
jmp
push
ja
lods
lahf
mov
aad
pop
jle
ljmp
lock
cmpsb
jbe
sarb
or
jle
pop
scas
and
mov
out
inc
mov
jl
push
mov
loope
popf
mov
ljmp
cmp
fldenv
addb
sbb
mov
sbb
mov
inc
mov
sbb
mov
test
sub
roll
jne
add
xchg
xlat
jecxz
out
push
fadds
in
fildll
add
fidivs
je
jmp
popa
xorb
movsl
loope
add
aaa
xor
cld
jns
mov
imul
lret
in
xor
jge
fisttpll
fcmove
mov
ss
mov
pop
ret
outsl
mov
cmp
mul
imul
xor
pop
ja
xchg
mov
adc
loope
adc
jle
and
adc
sarb
shr
pop
mov
adc
mov
in
xor
aad
add
inc
ret
fnstcw
stos
in
push
lahf
ja
and
rolb
mov
inc
sbb
aad
outsl
add
add
push
fstl
clc
nop
pop
pop
inc
lahf
cmp
int3
sub
addr16
mov
mov
int
out
push
daa
cmp
inc
push
jecxz
xchg
mov
nop
cmp
cmp
jb
cwtl
add
cmpsl
test
test
nop
test
mov
shrb
sbb
jg
repz
push
mov
add
mov
xor
insb
adc
jl
push
lcall
xor
xchg
cmp
mov
cltd
jnp
sbb
mov
cmp
inc
mov
js
cmp
test
or
addr16
scas
pop
ret
xor
add
ja
in
mov
lcall
pop
and
xchg
leave
xchg
pop
fcomi
or
fst
inc
xorl
loop
inc
pop
popf
ret
and
pushf
outsl
in
mov
add
mov
mov
jae
push
add
xchg
xchg
cld
mov
pop
je
dec
jbe
out
add
call
inc
push
insl
adc
mov
cld
aad
clc
int3
hlt
lods
sub
sti
aam
mov
mov
sub
notl
push
sub
jle
das
test
cmpsb
loop
stos
ja
push
xchg
xchg
add
or
je
mov
clc
mov
ljmp
push
andb
pop
inc
cmc
sub
xchg
inc
add
or
xchg
inc
aam
je
xor
jne
mov
and
movlps
pop
jl
hlt
and
loopne
clc
subb
into
gs
cltd
loopne
or
pop
add
addb
pop
gs
arpl
lahf
mov
stc
lds
loope
cld
xchg
aam
lea
cmpsl
fs
scas
ds
sti
in
or
push
je
pop
sarb
shrb
in
xchg
fldl
ja
mov
pusha
lahf
aaa
push
sub
sub
fcoml
adc
sub
sbb
int3
aam
test
bound
cmp
call
mov
jmp
hlt
mov
or
test
xlat
jecxz
pop
shlb
push
jo
rcrb
cmc
mov
movsl
cmp
loopne
mov
sbb
mov
mov
pop
pop
xchg
adc
pop
pop
mov
xchg
mov
lret
mov
mov
test
addr16
jecxz
loopne
pushf
fildll
mov
sbb
popa
pmaxub
movsl
loop
cmpsb
pop
outsb
jno
int3
mov
call
negl
mov
add
jb
mov
nop
out
inc
adc
lret
ja
test
ja
movsl
jg
push
ret
pop
sbb
nop
inc
cltd
sbb
fdivs
hlt
add
repz
daa
add
daa
and
xor
adc
fnstenv
sub
cmp
mov
xor
nop
out
data16
push
lea
xchg
ds
outsb
mov
aaa
dec
cs
stos
ljmp
leave
fcmovnu
or
jg
xchg
mov
jne
out
adc
xor
jno
cwtl
adc
xchg
test
cltd
in
fistl
dec
test
push
xor
fidivrs
cmp
inc
movq
movsb
scas
cmpsl
inc
jns
add
mov
adc
sbb
loope
mov
inc
gs
dec
rolb
clc
jp
fsubrl
or
cmp
or
mov
cmpsb
repz
je
movsl
mov
das
cwtl
dec
mov
push
test
pusha
outsl
mov
pop
add
xchg
sbb
lea
call
cmpsb
lcall
mov
sbb
in
sub
push
or
xor
sbb
shr
addb
lea
xchg
aaa
cmpsb
push
ja
xchg
fcmovnu
push
hlt
dec
das
dec
fadds
cli
cld
adc
push
out
lods
aam
loop
push
pusha
jecxz
add
pop
montmul
cmpsb
ret
fnstcw
sbb
or
xchg
and
mov
sub
pop
pop
push
cmpsb
mov
daa
pop
repz
sbb
inc
push
lock
lahf
mov
xchg
adc
mov
cmp
faddl
mov
sbbb
movsl
xchg
imul
lret
add
push
cmpsl
lret
pusha
lret
fcomi
int3
cmc
sub
hlt
push
add
hlt
adc
test
pop
lahf
add
add
cmpsb
popf
and
data16
add
pop
fs
rorb
je
mov
adc
out
mov
mov
gs
sbb
push
jg
std
push
gs
sar
clc
mov
xor
xchg
adcb
lods
jns
xchg
lods
pusha
test
pop
dec
jmp
jg
das
sbb
fwait
pop
into
enter
xchg
push
repnz
aaa
divl
mov
jb
into
fsubrp
insl
lea
fsubs
subb
mov
out
push
fsubrs
xchg
xchg
jnp
mov
lods
insb
xchg
iret
mov
sbb
inc
mov
push
std
cld
jge
sbb
pop
or
aam
out
sub
pop
test
sbb
pop
movsl
or
or
lea
sub
push
ljmp
test
pusha
push
bound
xchg
push
cmp
or
mov
inc
rol
cmc
lods
or
iret
cli
inc
push
adc
or
mov
outsl
into
movsl
repz
or
push
icebp
inc
lret
test
push
in
daa
xchg
sahf
xchg
frstor
in
dec
imul
sub
mov
cltd
cmpl
filds
aad
push
sub
lret
mov
inc
add
dec
lcall
pop
pop
popf
adc
imul
adc
gs
neg
xor
inc
hlt
pop
std
imul
aaa
push
cmpsb
mov
ret
fwait
jl
fwait
sub
adc
push
sbb
inc
int3
push
add
mov
test
mov
rolb
pop
and
xchg
clc
int
xor
call
or
mov
ss
mov
fstpl
stos
inc
test
lret
leave
loope
xor
insb
xor
add
jbe
mov
inc
dec
jmp
mov
out
xchg
orb
or
inc
xor
mov
subl
sbb
and
aad
push
inc
enter
rol
mov
dec
jecxz
pop
aam
scas
xchg
xchg
subl
shlb
in
pop
and
daa
inc
xor
xor
pop
sub
xor
dec
gs
cmp
fmuls
xor
xchg
mov
into
mov
ljmp
out
add
xor
xor
push
push
mov
push
inc
and
xor
pop
pop
xchg
out
aaa
ret
sub
push
xor
hlt
out
push
adc
and
lret
pop
xchg
jno
mov
addl
dec
fistpll
mov
mov
dec
movntps
xchg
cmp
aas
mov
jbe
push
cltd
insl
mov
out
mov
add
xchg
jp
popa
test
data16
addr16
push
mov
pop
call
push
mov
dec
pop
icebp
aas
pop
ret
imul
xor
ss
mov
sbb
mov
mov
inc
aaa
inc
dec
jno
stos
cmp
or
push
cmp
sub
dec
testb
out
xchg
dec
bound
lods
push
sbb
jo
lea
jne
test
addr16
stc
jo
jmp
mov
test
test
filds
add
and
ljmp
mov
and
outsl
outsl
mov
lds
mov
xor
fwait
stos
push
xlat
iret
outsl
adc
push
loope
iret
lea
testb
call
jnp
scas
int
xchg
das
push
mov
jns
repz
pop
push
in
fistps
bound
mov
scas
adc
ljmp
push
mov
push
dec
or
jne
dec
pop
bound
lret
popf
loop
push
jne
test
dec
dec
cs
dec
out
test
jno
xchg
xor
inc
call
shrl
sub
insl
out
add
out
lods
fidivl
loop
aaa
mov
ret
mov
xchg
cmp
loopne
call
mov
les
pushf
add
stc
aas
inc
in
sbb
pop
xchg
outsl
adcl
push
int
scas
out
ds
mov
cwtl
cmp
std
sbb
aad
stos
jp
sbb
sub
pop
fadd
xchg
test
sub
or
mov
cltd
imul
out
stc
and
push
testb
cli
lret
and
movsl
inc
cwtl
adc
mov
or
lret
stc
ja
xchg
inc
movsl
pop
aas
inc
jae
xor
in
or
mov
xchg
inc
fs
xor
sub
int
js
mov
sbb
fisubl
push
lcall
incb
pusha
sub
ret
lock
sbb
mov
xchg
je
cmp
push
adc
je
xlat
dec
xor
dec
loop
sbb
jge
cld
xchg
movsb
mov
ds
pop
mov
inc
je
testl
lods
dec
daa
addr16
sbb
in
xchg
xorb
and
and
or
xchg
adc
js
pushf
repz
inc
test
ret
pushl
movsl
outsb
in
pop
dec
push
fldenv
inc
es
jmp
rclb
fdivs
enter
movsl
lahf
test
adc
mov
pushf
mov
jl
jnp
out
xchg
jnp
loopne
add
xchg
sub
jg
cmp
jb
push
std
or
mov
fcmovnb
xlat
jbe
jae
fwait
push
in
adc
popf
jae
mov
scas
xor
icebp
incb
movups
xchg
mov
bound
cmpsl
push
fsubrs
lret
adc
pop
mov
enter
xchg
vunpckhps
not
fdivrl
push
push
dec
adc
cmp
push
push
xchg
push
notb
les
outsl
lock
stc
sub
dec
loope
sub
imul
orl
push
inc
ror
mov
pop
dec
xor
ret
xchg
cmc
insl
pop
test
aas
gs
movb
scas
jle
sub
psubsb
xchg
aaa
adc
outsl
nop
pop
imul
xchg
dec
loope
xchg
and
lock
cmpsb
adc
aad
scas
testl
jne
mov
lods
mov
pusha
sbb
lret
pusha
dec
movsb
les
ja
add
rcll
ret
shll
mull
ret
sub
imulb
cmp
es
ss
imul
in
out
cmp
dec
push
jo
mov
mov
daa
in
adc
xor
sbbb
cltd
call
cld
sub
push
mov
or
pop
jae
pop
mov
subb
jmp
cmp
mov
in
push
or
aas
push
das
dec
sub
push
int
pop
es
fisubrs
pop
movsl
subps
xor
adcl
mov
aas
stc
es
mov
dec
mov
mov
pop
and
pcmpgtw
imul
popf
mov
lods
lcall
fsub
or
dec
lcall
icebp
movsl
mov
inc
mov
push
push
fs
cmp
sub
fdivs
outsb
xlat
int
xchg
xchg
jg
in
pop
fstps
dec
xor
inc
jns
add
inc
inc
add
xchg
or
push
je
aas
test
jb
int3
into
mov
enter
xor
lret
sub
jae
mov
mov
push
fidivl
mov
adc
push
add
mov
enter
pop
iret
movsb
ljmp
or
pop
push
out
in
loope
gs
pop
mov
aad
pop
enter
rorb
push
in
imul
lret
xor
adc
scas
jmp
roll
test
test
push
fs
das
dec
out
fsubrl
fcmovnb
inc
mov
pop
or
das
loopne
adc
pop
xor
lret
leave
arpl
out
fldl
xchg
sub
cmpsl
cmp
adc
or
dec
enter
loope
nop
adc
loopne
aad
punpckldq
repz
pop
shll
addr16
mov
cmp
push
movsl
adc
mov
and
bound
neg
cltd
ffreep
lock
sti
fildll
sub
sbb
sti
std
inc
je
lahf
pop
hlt
stc
pop
add
mul
fwait
negb
imul
js
mov
or
or
mov
fcoms
jl
mov
aas
sbb
inc
jo
arpl
inc
subb
fcomps
fimull
xchg
cmc
bound
jmp
mov
ret
mov
std
fcompl
add
pop
add
mov
imul
out
adc
xchg
test
rol
push
mov
xchg
sub
in
mov
mov
push
adc
cmp
fbld
or
push
cmp
mov
pop
sbb
sub
lods
loopne
mov
mov
add
pop
xor
mov
xor
push
sahf
pop
xchg
mov
jno
and
xchg
imul
pop
out
fnop
or
pop
inc
push
incb
lods
es
push
leave
outsb
outsb
sbb
int
mov
add
clc
add
or
mov
add
je
sti
fimull
into
and
iret
cmpsl
sub
ljmp
dec
sbb
cltd
in
shr
mov
adc
stos
in
mov
sub
into
xchg
xor
mov
in
int3
or
cmpsl
leave
cmp
loope
jmp
or
or
stos
dec
adc
cs
movsb
add
addl
repnz
mov
fcoml
pop
jnp
in
jne
outsb
fwait
jne
enter
sbb
dec
or
xchg
xchg
les
mov
std
xor
ss
imul
lods
pushf
stos
mov
in
push
loopne
scas
dec
push
sbb
sub
push
pop
stc
push
out
jle
jle
scas
dec
push
cld
sti
or
popf
sub
sbb
sbb
in
inc
jno
lahf
jnp
lret
test
nop
push
xor
arpl
mov
aam
insb
mov
pusha
jle
jb
adc
mov
mov
sub
sbb
nop
fwait
adc
cmp
xchg
and
jo
push
inc
pop
sbb
adc
mov
add
fldl
mov
mov
outsb
nop
jmp
leave
leave
xor
frstor
imul
xchg
inc
out
sbb
push
xchg
inc
loopne
add
in
mov
and
xchg
cmp
gs
or
je
leave
clc
out
lahf
inc
repnz
adc
scas
cmpl
cmp
mov
cmpsl
test
xchg
jae
sbb
das
je
imul
or
inc
test
sub
cmp
push
push
fnstsw
mov
push
push
xor
add
adc
insl
dec
imul
xlat
jnp
loop
das
inc
jle
lea
ret
mov
test
adc
mov
mov
inc
xchg
or
mov
imull
insl
inc
movsl
dec
cmpsl
lret
bound
neg
jmp
test
jge
cmpsb
lea
jmp
lds
je
sbb
rcrl
inc
jmp
push
inc
and
push
dec
inc
mov
aam
xchg
mov
das
or
adc
imul
xor
jl
mov
std
mov
int
orb
mov
push
insb
xchg
dec
and
adc
rolb
and
or
adc
xor
lcall
xchg
stos
sub
popa
jmp
push
pushf
mov
mov
leave
sbb
in
mov
test
fildl
in
int
mov
aam
cmc
jmp
or
and
inc
shrl
out
mov
bound
jbe
aaa
insl
sbb
and
sub
sub
pop
and
and
mov
cli
notb
jne
pop
ds
movsb
into
cmp
sbb
mov
sbb
jg
or
jo
ljmp
movsl
inc
push
lock
es
sub
out
in
mov
lret
jle
pop
add
xchg
aad
jle
mov
adcb
scas
divb
mov
pusha
imul
pop
jg
jae
out
rclb
cmpsb
push
push
adc
lret
test
daa
pusha
in
cmc
std
xor
or
in
in
cmc
repz
and
and
mov
inc
fadds
pop
rcr
fcmove
sub
lock
pop
insb
pop
stos
xor
jmp
push
inc
pop
adc
pop
es
mov
ret
std
loopne
pop
xor
rorb
sbb
pop
xlat
shrb
lret
and
pop
mov
ror
out
loop
adc
out
icebp
or
adc
mov
mov
insb
std
lods
in
lock
push
mov
aaa
es
add
sub
ret
leave
xor
fidivs
inc
mov
aaa
ds
inc
ret
jne
js
mov
inc
movsb
pop
cwtl
test
shll
fnstcw
out
mov
xchg
outsl
std
pushf
pop
xchg
ret
dec
data16
lods
dec
xor
jno
daa
or
jb
lods
imul
and
sub
and
jb
xor
fs
nop
je
scas
lcall
or
mov
mov
loope
mov
xchg
out
mov
adc
push
hlt
mov
loopne
enter
add
cmp
icebp
stos
test
incb
hlt
cwtl
call
sub
cmp
jmp
lea
mov
lods
dec
rcrb
movsb
and
sbb
stos
clc
pop
push
jns
xchg
xor
ret
dec
dec
mov
mov
dec
lds
and
in
ss
in
pusha
mov
pop
sbb
addl
lcall
jge
leave
cmpsb
jp
cmp
adc
xor
sbb
pop
inc
pop
dec
aaa
xchg
fildl
mov
and
in
shlb
outsb
add
inc
mov
jns
leave
ds
mov
sarb
inc
aad
pop
jp
adc
repz
aas
jle
ljmp
pop
outsl
cmpsb
xor
fimull
mov
dec
push
add
fmul
mov
lock
mov
jnp
jp
insl
sti
mov
repnz
xchg
aad
shl
xchg
test
or
arpl
or
aam
jmp
jl
xchg
insb
mov
leave
fildll
lret
dec
sti
leave
xchg
inc
in
push
jp
test
and
in
dec
cmp
xor
lcall
xlat
and
mov
ja
lret
xchg
and
stc
clc
imul
loop
in
dec
dec
mov
shrl
ret
fucom
mov
sbb
mov
leave
aaa
aas
cmp
mov
mov
inc
lahf
dec
imul
insl
fsub
sub
adc
push
ds
call
mov
sbb
js
adc
js
pop
orl
push
push
fisubl
push
testb
cltd
dec
movsb
mov
data16
flds
inc
cli
xchg
push
mov
jg
xchg
fildll
int
test
inc
ss
and
xchg
jmp
and
into
lcall
popf
sub
and
mov
fsts
fbstp
xchg
add
push
and
je
dec
jecxz
or
add
fsubs
ja
cs
stos
data16
pop
fwait
icebp
xchg
arpl
aad
shrl
xor
xlat
push
jae
or
pop
lcall
adc
imul
xorl
in
cmp
fnstenv
dec
rorb
in
jno
sbb
jle
lcall
xlat
mov
adc
push
es
insb
imul
push
jns
add
nop
sub
add
mov
ret
mov
aaa
add
out
mov
jno
js
popa
in
sbb
inc
push
cli
scas
xchg
or
arpl
outsb
xor
clc
movsl
mov
ljmp
cli
or
dec
mov
into
sub
mov
or
inc
movsl
push
or
pop
cs
jecxz
out
in
imull
js
and
mov
push
adc
xchg
aaa
loop
xchg
inc
sti
scas
cmc
popf
cmc
or
ss
int3
cmp
leave
push
test
rolb
ljmp
fldl
jle
inc
imul
mov
lret
aad
and
cmp
bound
imull
in
add
push
lahf
loope
fcmove
inc
sarb
call
adc
jnp
repz
fimuls
jmp
push
out
pxor
mov
fildll
pop
out
out
mov
sbb
loope
jge
loope
test
and
pop
popa
inc
dec
cs
stos
mov
fwait
xchg
ret
adc
jmp
rcll
sub
pop
push
out
mov
adc
std
imul
daa
ret
cmpsl
mov
fwait
and
pop
dec
stos
in
fwait
xchg
push
pop
jne
jae
add
insb
inc
pop
pop
pop
out
jecxz
mov
ds
sti
pop
or
push
test
inc
pushf
push
in
add
out
pop
outsb
jp,pn
cmpl
mov
stos
jne
inc
ret
adc
add
rcl
xor
rcl
inc
and
adc
mov
jle
mov
xchg
hlt
out
sub
jmp
inc
xchg
testl
popf
mov
ret
mulb
mov
repnz
mov
iret
std
pop
aas
pop
or
mov
outsl
call
ret
movsl
push
mov
sbb
lahf
add
out
add
and
scas
scas
mov
dec
divl
lock
ret
stos
add
jae
std
jge
xor
shr
mov
lea
mov
xorl
adc
icebp
addr16
mov
jg
stos
leave
ss
test
push
shlb
test
dec
bound
rcrl
mov
cmp
push
inc
xor
sbb
lcall
push
maxps
push
movsb
insb
mov
mov
jg
xor
and
int
xchg
ret
lock
fidivl
pushl
push
dec
nop
imul
inc
ror
inc
mov
push
sbb
arpl
pop
mov
adc
adc
ficomps
xlat
in
in
sti
adc
hlt
insl
push
adc
jo
mov
in
fsubrs
popf
movsl
scas
cmpl
xor
fsubrs
push
or
push
les
sbb
int3
and
pop
jno
clc
dec
mov
daa
xlat
mov
xor
or
jmp
mov
lods
pusha
lret
and
int
filds
sub
data16
js
push
out
push
mov
dec
pop
mov
imul
fistl
loope
or
xor
stos
dec
mov
mov
sbb
add
addr16
sub
repnz
ds
sti
jmp
dec
out
sub
or
xor
andl
xor
mov
lret
mov
inc
lock
lret
and
outsb
popf
mov
xor
xchg
push
push
ja
sub
aaa
nop
or
or
pop
jno
lret
ja
xor
add
push
mov
pop
fwait
inc
pop
sub
cmp
push
std
lret
std
loopne
pop
lahf
scas
ret
pop
sub
sub
not
hlt
outsb
mov
add
out
das
fld
xchg
push
gs
and
sub
ret
jle
stos
sbbl
lahf
sbb
sub
aad
test
mov
and
shll
fcmovnb
sbb
sbbl
fisubrs
xchg
mov
test
and
imul
or
cwtl
bswap
out
jp
fwait
test
adc
lea
repnz
mov
repnz
xchg
ret
sub
aam
in
mov
inc
mov
cmp
jp
icebp
or
sub
or
lret
xlat
add
in
popa
lds
dec
push
inc
mov
stc
inc
cmp
add
scas
loop
aas
cmc
sub
fldt
nop
int3
push
push
fwait
fs
daa
addr16
sbb
sub
jne
loope
mov
sub
int3
sub
xor
add
lods
mov
mov
call
xlat
xor
or
adc
testb
sub
jns
test
jmp
pop
js
shll
fdivrp
jle
sbb
dec
daa
xor
test
fcomip
fildl
push
stc
jge
gs
sahf
dec
cmp
and
cmp
pop
pop
and
ret
sbb
mov
fsubl
xor
aad
pop
dec
jne
stc
loope
jecxz
insl
inc
cltd
inc
push
iret
push
mov
popa
and
push
test
lret
xor
fistpl
push
pop
mov
les
xchg
inc
pop
jno
divb
and
mov
ss
lds
int
xor
ss
fstpl
lock
movsb
cli
sub
jmp
mov
sub
and
jmp
adc
pop
fildl
fcmovnb
mov
data16
xchg
pusha
pop
pop
cwtl
les
jmp
lahf
jno
cltd
enter
movsb
inc
xchg
scas
xor
push
pop
in
lock
mov
mov
cltd
mov
xor
adc
xchg
outsl
ret
dec
or
push
aam
adcb
stos
adc
dec
mov
mov
lds
jp
fsubl
adc
in
mov
pop
mov
ds
mov
or
aaa
rorb
mov
fwait
scas
les
outsb
pop
mov
std
and
and
xchg
push
out
dec
pushf
xor
adc
imul
sub
mov
mov
add
mov
notb
cmpsl
and
push
das
push
into
loop
clc
xchg
mov
bound
lods
pop
sti
jns
aas
lds
xchg
or
xchg
rorl
in
fldt
aad
addr16
adc
or
push
cmpl
sbb
dec
pop
pushl
dec
adc
jbe
pusha
leave
ds
hlt
pop
stos
les
or
aaa
xor
pusha
or
sbb
test
fdiv
test
out
add
in
adc
scas
push
in
push
imul
adc
int3
sbb
mov
test
iret
mov
sub
push
negb
outsb
jmp
push
iret
push
mov
jae
call
xchg
sbb
fimuls
inc
test
inc
sahf
icebp
push
hlt
popa
loope
mov
mov
push
cmpsl
repz
leave
fwait
adc
jne
inc
jp
daa
mov
mov
jp
xor
into
popa
js
jp
je
push
fistps
mov
push
fistpll
sub
jb
mov
mov
mov
push
ret
mov
and
rorl
mov
out
sub
adc
sbb
test
adc
jge
inc
push
sub
mov
xchg
ja
es
lcall
rcl
mov
adc
lock
cmpsb
ficomps
sbb
dec
jmp
pop
mov
push
popa
mov
mov
cmpsl
mov
lock
outsb
push
cltd
dec
pop
mov
in
sub
ss
jmp
fsts
std
and
fs
lret
jp
mov
inc
lods
sbb
and
mov
hlt
mov
js
movsl
movl
fwait
mov
xchg
inc
shr
les
cmp
in
xchg
loope
xor
add
stos
mov
inc
mov
insb
dec
jle
jp
and
mov
xlat
mov
mov
dec
or
testl
sbb
cmp
cmp
std
add
lods
xor
movsb
adc
jecxz
test
push
hlt
scas
add
lods
scas
mov
cs
add
movsl
cmc
leave
sbb
fsubs
sbb
insb
test
jno
pop
or
arpl
xor
je
imul
pop
movsl
adcb
fmuls
cwtl
inc
push
lods
mov
repnz
mov
lret
lcall
mov
ds
sbb
je
jmp
xchg
or
mov
hlt
add
outsl
push
dec
outsl
in
inc
lods
and
jne
or
lds
and
adc
data16
ret
xchg
faddl
incb
out
mov
in
adcl
xchg
pop
and
sub
mov
and
pusha
add
xchg
adc
movsb
idivl
mov
and
sub
mov
ds
jle
mov
faddl
xor
movsb
mov
shl
dec
jp
or
out
scas
mov
jne
push
and
jb
ljmp
xlat
sbb
pop
or
insl
pop
mov
jecxz
sbb
xchg
sbb
mov
push
roll
sub
xchg
fdivrp
pop
out
sub
testb
fcmovne
cmp
xor
test
idivb
xchg
test
mov
add
fnsave
dec
jno
clc
nop
js
loop
ret
push
fnstsw
dec
lret
xlat
lods
test
xlat
mov
dec
dec
xor
jp
cs
sub
popa
and
out
dec
repz
inc
pop
int3
ret
test
clc
mov
cwtl
and
add
aad
div
jbe
cltd
test
jmp
sarb
lock
jo
stos
subb
aaa
aas
out
insl
push
add
xor
sbb
push
jb
pusha
out
popa
mov
inc
mov
scas
push
xor
xchg
fnstenv
pusha
inc
inc
nop
jp
shlb
inc
cmp
mov
mov
sub
jb
dec
pop
movl
and
and
js
or
xchg
out
test
repnz
orb
pop
jmp
jp
outsb
jmp
std
mov
dec
lea
pop
stos
call
push
xor
ss
cmpsb
lds
inc
pushf
xchg
xor
cld
add
xchg
mov
int3
popfw
cmp
sarl
arpl
test
mov
lods
cmpb
mov
add
push
test
cmp
jb
movsb
sbb
hlt
mov
add
cwtl
lea
mov
loope
das
sbb
bound
shlb
and
or
pop
aad
dec
jg
mov
and
icebp
sub
dec
nop
mov
push
or
mov
mov
push
jo
loop
movb
pop
xor
dec
push
pop
adc
in
pop
mov
mov
cld
mov
sub
pop
jb
and
cmp
test
mov
inc
push
jmp
shlb
jae
cmp
jg
and
xchg
jnp
out
lods
loop
cmp
cli
lods
or
sbb
daa
shrl
or
jmp
testl
and
cmp
mov
ss
xchg
sub
mov
or
xchg
inc
popf
pushf
add
cld
adc
add
sbb
cmp
movsl
scas
or
xchg
add
cmpsb
mov
loop
subl
andb
add
fmul
incb
cmpb
mov
es
int3
into
xor
mov
jb
int3
dec
shl
jge
sar
sub
push
andl
cmp
mov
xor
in
notl
arpl
fsts
sub
addb
idiv
mov
andl
popf
adc
pop
dec
or
pop
dec
jp
test
lods
fsts
inc
rolb
shlb
stos
in
push
push
mov
ret
fsubrl
aas
clc
xchg
jmp
mov
sub
mov
pusha
aas
push
sub
orb
mov
xchg
pop
dec
in
and
mov
cmp
fsubrl
daa
adc
jo
ja
jmp
js
es
int
push
xor
adc
lock
negl
mov
xchg
insb
out
cmpsl
pusha
or
rcr
jne
mov
xchg
mov
es
pop
outsb
jns
imul
xchg
roll
stos
and
mov
rclb
mov
imull
mov
sbb
or
rorb
cmpl
in
jp
mov
repz
xchg
mov
adcl
negl
jle
stos
inc
or
dec
and
inc
fstps
subl
mov
push
xchg
mov
adc
xchg
gs
xchg
mov
scas
jge
jne
fwait
xor
push
cld
aam
mov
into
dec
push
mov
rcll
mov
loopne
hlt
sahf
dec
and
nop
pop
pop
cmp
out
ja
cmp
ss
xor
test
jae
mov
mov
into
or
test
out
mov
sbb
fwait
xchg
pop
into
clc
test
pop
mov
iret
hlt
jl
add
mov
sub
and
inc
sub
jecxz
adc
test
in
xor
jp
shlb
cli
adc
out
sbb
push
mov
cmp
int3
rol
and
pop
test
stos
vpackssdw
push
jmp
cs
sbb
push
and
rclb
insb
add
test
jg
sub
inc
fidivs
pop
ret
stos
mov
pop
repnz
pop
xor
rolb
int3
cmpsl
sbb
idiv
cld
inc
outsb
mov
adc
scas
mov
fcompl
cmp
dec
adc
outsl
data16
adc
ljmp
cs
gs
dec
int3
repnz
lods
pop
jbe
adc
mov
and
icebp
or
enter
jge
dec
loope,pn
sbb
pop
cmp
mov
adc
mov
pushf
cwtl
out
add
jg
outsb
jbe
jo
mov
jmp
mov
cmc
pop
push
in
and
mov
shlb
xchg
es
shrb
call
ja
push
inc
pop
jae
ret
jle
mov
ficompl
iret
rcr
sub
jnp
cmp
stos
mov
sbb
shll
fs
dec
repz
clc
push
adc
mov
arpl
mov
jne
mov
test
push
mov
sbb
mov
dec
pushf
inc
fidivs
dec
xlat
cmp
sbb
sub
sar
pusha
mov
mov
das
mov
pop
adc
xchg
std
push
xlat
rcrb
or
mov
jnp
pop
sbb
sub
sbb
sarl
push
dec
or
or
repnz
clc
jp
repz
movsl
bound
adc
push
in
push
cmpsb
inc
idivl
stc
cmpsb
test
shlb
fisubrl
ret
test
cmp
lock
je
pop
int
xchg
jbe
or
adc
jno
dec
sub
cmp
sbb
xchg
sub
sub
fiaddl
sarb
jle
jmp
inc
inc
std
iret
sub
add
mov
sub
mov
outsb
ds
add
push
push
xchg
mov
or
push
data16
lock
inc
push
popf
pop
nop
shll
xor
jae
fldt
loop
sub
scas
inc
pop
jp
mov
mov
mov
stc
outsb
dec
mov
adc
push
push
scas
jecxz
push
int3
subb
cmp
idiv
out
mov
mov
movsl
xchg
bound
shrl
mov
dec
xlat
xor
mov
xchg
sub
pop
jae
out
andl
pop
nop
push
fstl
jmp
insl
cmp
lds
pop
jmp
xor
rcl
enter
sub
jae
dec
push
aad
mov
dec
mov
outsb
decb
mov
mov
int
jns
add
inc
push
daa
jecxz
jp
dec
incl
fistps
sub
jp
pop
or
mov
ss
in
cmp
das
and
imull
inc
pop
lea
or
test
jno
xor
pop
xchg
inc
jno
stos
or
pop
mov
dec
aas
xor
insb
push
rolb
mov
xchg
mov
addr16
xchg
stos
or
std
xlat
fiadds
push
les
shlb
and
inc
add
out
mov
xchg
shr
in
cmc
movsb
test
lret
addr16
mov
mov
cmp
repz
outsb
pushf
push
vmaxps
lret
outsb
push
in
into
xor
sub
sub
int
xchg
insb
test
out
dec
adc
dec
and
mov
sub
gs
popa
test
sar
repz
xchg
dec
lret
push
cmp
fcoml
leave
sbb
rorl
int3
jb
sub
pop
pop
jge
shl
dec
btr
roll
jb
ljmp
pop
push
aaa
and
das
xchg
jle
cmp
xor
push
or
mov
mov
ret
sub
sbb
out
mov
sbb
adc
mov
addl
mov
and
vhaddpd
cwtl
sbb
es
mov
dec
dec
sar
cmp
fldl
mov
out
cli
adc
sbb
push
sub
out
xchg
inc
cli
lods
test
pop
inc
fs
adc
adc
sub
mov
mov
cltd
out
pop
insl
addr16
and
frstor
and
div
cmp
inc
xchg
test
add
test
and
out
xchg
scas
push
sbbl
shll
ljmp
or
pop
inc
or
out
imul
sbb
jb
stos
ljmp
stos
push
mov
in
push
xchg
imul
dec
in
jo
mov
scas
test
sti
je
dec
lock
in
mov
lds
adc
loopne
cmp
pusha
mov
mov
outsl
ret
push
jb
mov
cmp
cmp
dec
shrl
add
add
inc
scas
inc
cld
nop
lods
xchg
int3
stos
jle
pop
fstps
add
push
dec
sub
mov
xchg
hlt
dec
and
xor
mov
call
inc
jo
sub
test
inc
gs
pop
data16
repnz
loopne
mov
mov
adc
cmp
aad
das
xor
stos
pop
pop
jnp
mov
push
adc
outsb
sahf
testl
xchg
sbb
cld
repnz
leave
jno
shrb
pop
repnz
pushf
fcmove
fs
testl
and
mov
lret
lds
cmc
setbe
pop
dec
hlt
daa
mov
cmpsb
push
cmp
push
pop
xor
xchg
stos
inc
cmp
std
xchg
and
cmp
sub
int
ds
movsb
cmc
cmpsb
or
mov
mov
mov
and
add
cs
jne
inc
icebp
adcl
add
outsl
test
pop
and
daa
and
push
xor
imull
imul
dec
xor
fcmovnu
rcrl
pop
imul
and
shl
cmp
lahf
xlat
insb
jne
adcb
xor
mov
xchg
aas
jo
mov
sub
jge
pop
into
mov
add
mov
push
lds
jg
dec
sub
add
outsb
sbb
aam
pop
jle
xlat
popa
sub
sbb
jnp
jns
lcall
push
adc
push
sbbb
sbb
adc
xchg
mov
inc
mov
lahf
sbb
hlt
test
pop
nop
cmp
out
movsb
les
xor
test
dec
cmp
mov
or
jo
jae
jbe
push
addr16
cmc
jo
lock
cmc
mov
xor
cmp
pop
xchg
ret
xlat
push
mov
pushf
insb
shl
xor
fnstenv
adc
mov
jne
dec
mov
xor
popa
lcall
subl
push
out
into
and
stc
lret
cmp
jp
add
in
xchg
cmp
mov
in
or
mov
xchg
inc
notb
cmpsl
dec
test
adc
dec
stos
pop
inc
stos
cmpsb
cli
mov
sbb
ss
shr
int
jbe
lods
lods
cs
mov
inc
inc
js
cwtl
lock
cmp
cmp
pop
xor
pop
push
xchg
push
daa
out
push
push
loope
mov
xlat
jl
out
xchg
ds
fildll
loop
xor
mov
push
cmpsl
push
xorb
addl
sbb
pop
movsb
push
into
cmp
mov
aad
inc
or
es
outsl
jge
scas
cltd
jae
sbb
jl
fwait
inc
jl
sbb
sbb
imul
dec
shlb
sub
ss
aaa
xor
sbb
in
rolb
xor
inc
sbb
sbb
fiaddl
sbb
cs
mov
mov
in
cmp
cmp
jmp
in
testl
scas
adc
cli
inc
dec
add
xchg
push
scas
jge
ret
cmp
mov
testl
sub
dec
push
jg
js
jg
jg
mov
xorb
inc
xchg
pop
or
add
xchg
repnz
dec
or
pop
mov
movsl
ljmp
adc
mull
std
sbb
add
aaa
aad
sbb
mov
push
ds
ja
fisubl
sbb
jp
inc
push
js
cld
test
pop
lods
test
fimull
out
pop
inc
jbe
fadd
add
mov
push
mov
add
gs
rcrb
js
inc
or
test
add
mov
mov
mov
dec
mov
mov
scas
in
mov
sub
adc
cmp
scas
shr
rclb
inc
pushf
cltd
loop
jns
sub
add
sub
imul
scas
rcl
xchg
or
adc
cmpsb
push
stos
enter
inc
out
shll
or
out
scas
inc
sub
sar
mov
mov
imul
mov
mov
pop
ds
mov
in
out
dec
or
xchg
pop
xchg
mov
cmp
fists
cmp
inc
sbbb
fisubs
or
xchg
and
int
test
jp
dec
lret
orl
sarl
add
mov
jg
xor
rclb
xchg
mov
mov
insl
fs
lea
add
pop
push
adc
sub
aad
hlt
pop
pop
jecxz
mov
pop
addb
scas
out
inc
or
out
jl
mov
jmp
sub
xchg
mov
and
lahf
insb
dec
in
cmpsl
out
fsubs
inc
cli
fisubrs
cmp
pop
or
push
mov
xchg
rorl
pop
push
data16
dec
jbe
sub
push
test
xlat
pop
xor
push
enter
shlb
jne
adcl
jbe
mov
lret
add
rcl
mov
mov
jl
adc
push
leave
outsl
insl
mov
leave
addr16
jns
dec
and
pop
mov
xchg
xor
jg
rcrb
adc
jns
cmp
out
je
test
xchg
dec
mov
ljmp
enter
fwait
cmp
shll
ret
fstl
cmp
cmp
adc
fisttps
jne
jb
stc
jnp
fisubl
pop
int3
cmp
jecxz
push
jnp
loop
pop
and
icebp
popf
mov
in
dec
push
lea
inc
lcall
popf
mov
cmp
cmp
mov
push
inc
adc
sbb
sbb
sub
pop
call
aam
cmc
adc
adc
aam
inc
jmp
inc
lret
sub
aad
mov
mov
adc
or
xorb
icebp
cltd
push
std
dec
shl
adc
cmc
jl
dec
repz
push
ds
cmc
cmpsb
sub
adc
js
js
bound
cmp
fsts
mov
inc
mov
pop
dec
ljmp
adc
repz
inc
leave
aas
dec
xchg
in
movsb
scas
lods
testl
addr16
and
aas
out
pop
sbb
push
bound
loop
repz
in
dec
ret
jge
mov
sbb
inc
mov
jmp
and
js
or
xchg
jle
sbb
leave
push
int
sarb
or
cltd
xchg
inc
divb
es
inc
jne
ret
sahf
mov
xchg
jbe
stos
je
ror
fwait
push
xchg
fwait
rcll
mov
cltd
movb
cmpsl
mov
sub
xor
sub
lds
jmp
dec
imul
push
hlt
jmp
push
sbb
jmp
mov
movsb
lahf
or
js
addr16
mov
and
jge
out
in
jns
mov
decb
fnstenv
or
jae
insl
add
mov
push
out
imul
test
adc
sub
sbb
adc
movsb
xchg
outsl
dec
jle
addb
test
add
and
pop
arpl
ljmp
or
cli
arpl
dec
cmp
iret
xchg
add
popf
mov
mov
jno
dec
xor
cmp
adc
xor
dec
sbbb
or
cli
aaa
inc
imul
jecxz
ficoms
gs
cmp
xor
push
cmpsl
mov
adc
mov
push
xor
jnp
sbb
bound
dec
arpl
jne
lahf
mov
in
testb
mov
bound
popf
sbb
pop
in
or
shll
popf
sti
fbld
enter
cmp
lds
add
addr16
test
data16
pop
stc
xlat
mov
dec
jmp
jae
push
or
es
mov
iret
lock
loopne
pop
cmpl
cmp
dec
jecxz
sti
movsl
adc
pop
movsl
movsb
sub
pop
xchg
fwait
push
scas
loope
popl
icebp
adc
mov
pop
mov
push
ljmp
sahf
lds
mov
dec
xor
mov
cmpsl
dec
jb
add
jnp
bound
int
lods
pop
cmp
mov
push
rcr
xlat
into
adcb
shlb
cmp
faddl
scas
mov
pushf
imul
sarb
jg
clc
aam
lock
mov
inc
out
int3
rcrb
inc
push
repnz
adc
push
jge
aas
and
gs
sbb
push
lock
icebp
iret
fidivrs
sub
cs
insb
jae
insl
lret
aam
lret
adc
sub
sbb
or
outsb
into
or
iret
hlt
arpl
inc
js
js
or
and
pop
jmp
push
cmpsl
mov
popf
outsl
dec
xchg
sbb
mov
jne
cmp
js
test
push
dec
push
insb
pop
mov
mov
fwait
push
mov
inc
sbb
aas
jmp
shll
je
adc
in
test
mov
addr16
xchg
stos
out
inc
jne
inc
pop
adc
mov
add
insb
int
into
sbb
jb
xchg
and
cmp
ljmp
cmp
xchg
inc
sbb
xor
cmp
mov
imul
sti
clc
inc
daa
mov
nop
sub
std
rorl
push
jp
rcr
lret
cwtl
xchg
sbb
mov
cmc
int3
or
xor
int
addl
mov
repnz
leave
push
sbb
arpl
gs
shrb
adc
jmp
mov
inc
pop
mov
stos
popf
les
mov
ret
dec
add
jle
pop
push
push
push
jg
stc
pop
imul
and
push
add
jl
cmp
aam
mov
out
inc
in
xchg
orl
mov
and
adc
sti
mov
jo
sub
push
push
test
dec
sub
add
push
movsl
sbb
ljmp
push
lds
in
loope
call
jo
sbb
jp
jl
sbb
xchg
xor
addr16
pop
mov
imul
repnz
daa
push
aad
dec
xor
test
sbb
daa
or
mov
adc
fisubs
push
mov
push
push
pop
shl
aam
arpl
adc
cmpsb
mov
jno
pushf
cmp
xchg
cwtl
mov
aad
repz
pop
cmp
gs
orl
testl
movsb
lea
sbb
xlat
shl
jl
xor
adc
fcmovbe
movsb
dec
sbb
xchg
push
jp
mov
rcll
mov
insl
mov
leave
push
mov
imul
dec
fisttpll
adc
cmp
or
repz
movsb
push
and
insl
and
ret
add
mov
test
xor
inc
lods
dec
mov
pop
movsl
mov
cltd
nop
dec
in
jne
mov
std
je
inc
out
inc
in
movsb
add
xor
mov
sub
test
sub
cmpsb
icebp
clc
dec
ret
pop
aad
pop
xchg
mov
scas
pop
je
and
aad
mull
ja
mov
pusha
sbb
push
push
sbbb
pop
cli
sbb
std
ja
lret
les
jle
xorb
mov
call
mov
adc
sahf
mov
mov
inc
add
push
fisttpl
jecxz
mov
repnz
idivl
push
in
test
and
push
push
and
mov
mov
std
fisubrl
push
mov
lds
ret
popf
push
and
int
popa
in
jns
jns
jbe
add
fdiv
xchg
sbb
out
cmp
imul
into
std
stos
imul
and
jb
dec
imul
test
sub
cmpsb
faddl
nop
mov
subl
test
add
mov
jbe
scas
push
imul
and
lods
adc
xchg
push
in
pop
lret
jg
cmp
and
adc
mov
pop
adc
in
clc
ljmp
cmp
cmp
mov
rcrb
sbb
les
dec
dec
mov
jne
and
pop
ja
cmp
jl
mov
jb
je
addr16
in
pop
dec
in
das
dec
jo
or
stos
mov
dec
cmp
mov
push
out
ljmp
jg
stos
add
in
adc
inc
testb
cmc
push
cld
movsl
push
mov
adc
int
mov
sbb
les
xor
icebp
outsl
outsb
cmp
adc
loop
in
mov
xchg
inc
jb
lret
xchg
xchg
inc
je
into
lcall
int3
jge
xchg
lret
stos
pop
fistl
mov
insl
lds
xor
test
jge
testl
idivl
imull
pop
jg
pop
xchg
js
inc
jne
mov
repnz
cli
jg
int3
and
cmp
jg
insl
mov
lcall
inc
imul
fidivl
add
fst
xor
pop
fcmovnu
ss
sbb
in
mov
push
jnp
fists
in
mov
ljmp
pop
lock
sbb
cltd
xchg
mov
arpl
or
ffreep
cmp
xchg
inc
mov
nop
xor
sub
int3
dec
rolb
negb
push
dec
mov
loope
mov
cmpl
insb
gs
fildll
cmp
dec
lcall
stos
cmp
and
sbb
stc
xchg
shlb
ret
in
push
pusha
dec
outsl
mov
jae
inc
rolb
ret
push
aad
shll
in
scas
pop
arpl
mov
jecxz
pop
pop
ljmp
mov
repnz
addr16
add
lret
repz
sbb
loope
xor
imulb
pop
sub
xor
sub
cld
jnp
ds
ja
imul
ljmp
adc
sub
inc
mov
push
xor
mov
ljmp
add
mov
pop
lahf
sub
in
jge
or
neg
mov
jge
cmp
xlat
mull
imul
xor
arpl
jge
aas
inc
hlt
mov
pushf
daa
push
fdivrl
xor
cwtl
mov
int
test
jle
sub
mov
sub
xlat
sbb
mov
mov
cmp
xchg
dec
push
push
iret
add
push
xor
add
call
int3
push
xor
jno
into
mov
adc
dec
test
sub
sbb
loope
icebp
adc
pushf
pop
int3
dec
iret
fdivl
aad
push
lods
lahf
pushl
push
push
xlat
cld
lahf
cmpsb
inc
mov
pusha
lahf
xor
loop
ss
mov
mov
xchg
mov
push
out
jb
imul
dec
mov
popf
adcl
sbb
jb
xor
or
repnz
int
xor
xchg
fsubl
lea
jmp
fnstenv
movb
dec
subl
loopne
std
adc
mov
icebp
outsl
adc
mov
pop
pop
push
test
xchg
shrl
fnstenv
pusha
in
imul
fsubrl
xchg
cmp
leave
loope
das
pop
jmp
int3
mov
xor
mov
mov
mov
or
out
sub
in
mov
test
stos
and
jl
inc
jp
cmpsb
pop
call
clc
test
adc
lods
and
jno
insl
mov
frstor
cmp
rcrl
adc
fisttpll
rorb
sub
jle
mov
push
push
outsb
add
cmp
cmp
cmp
orb
jae
or
cld
adcb
lock
std
cltd
mov
mov
mov
je
loopne
sub
or
xor
xchg
mov
adc
mov
repz
in
cld
in
mov
jg
push
sbb
orb
cwtl
and
lahf
in
cmc
mov
pop
inc
subb
mov
cmpsl
sbb
outsl
xorl
pop
insl
bnd
daa
and
out
test
add
sahf
jg
ds
and
loop
mov
test
imulb
js
or
cmpb
xchg
lahf
mov
ret
dec
add
pop
jg
enter
loopne
mov
leave
and
aad
pop
mov
xor
sub
out
adc
add
mov
popa
arpl
sbb
into
incl
test
mov
adc
sahf
mov
cmp
add
lods
inc
adc
inc
inc
add
mov
int
push
lret
test
js
and
pop
vpshufd
testb
mov
je
pop
cld
lods
or
sbbb
outsb
xlat
push
jp
jnp
cltd
out
insl
inc
mov
or
jbe
mov
dec
pop
mov
mov
pop
mov
adc
adc
push
test
les
sbb
scas
movsl
dec
dec
push
xchg
rclb
jmp
repz
or
sahf
int3
xor
pop
dec
pop
adc
sub
stos
add
clc
lods
and
pop
adc
adc
mov
in
sti
dec
gs
push
ficompl
xchg
sbb
rol
mov
call
lret
push
sarl
cmp
push
addr16
pop
addb
jno
or
rcll
fmuls
xor
int3
cmpsl
mov
or
je
mov
and
mov
and
dec
cmp
sub
sbb
xchg
popf
movsl
sbb
mov
mov
test
jg
or
lods
xchg
add
push
jnp
enter
lcall
outsl
stc
mov
cmp
sbb
test
loopne
jl
stos
add
movsl
xchg
cmp
loopne
daa
cmc
test
aad
div
das
dec
sub
sahf
subb
push
movsl
push
int3
add
popa
and
sahf
mov
pop
jno
mov
mov
mov
sub
das
outsb
push
inc
dec
xchg
and
bound
adc
rcrl
lret
dec
pop
pcmpeqw
mov
mov
push
pop
pushf
das
jb
test
repnz
xchg
jns
jb
adc
hlt
or
dec
dec
movsb
mov
inc
jns
cmp
icebp
mov
cmp
enter
imul
xchg
daa
xchg
push
stc
pop
aas
insb
aam
mov
inc
and
jo
xor
push
and
sbb
aaa
sub
jno
shr
xor
push
lea
ljmp
imul
in
movsb
adc
mov
dec
imul
mov
jo
insl
and
inc
pop
mov
xorb
sub
or
and
inc
fcomps
cmp
xchg
scas
pop
push
xchg
add
xor
das
jb
loopne
repnz
and
sbb
mov
sbbl
fidivl
cmpl
mov
out
xchg
je
insl
pusha
pushf
fisubrl
mov
xor
out
jmp
rorl
dec
cmp
fs
push
mul
clc
clc
jl
jmp
test
xchg
out
xchg
fcmovne
aam
pop
add
pop
clc
pop
cltd
adc
popa
sub
mov
jne
push
dec
sub
push
dec
sub
mov
lahf
insb
mov
dec
mov
outsb
je
push
jle
sti
out
or
push
outsl
xor
dec
rorl
add
lds
xor
xchg
movsb
movsb
sahf
add
and
jmp
repnz
sti
dec
cmpb
out
js
outsl
out
mov
mov
xor
push
pusha
inc
push
lret
js,pt
cmc
mov
sub
add
ds
imul
jae
hlt
mov
test
or
sbb
aam
jmp
jae
rcrb
sarl
inc
cmpsl
std
mov
cld
daa
div
aad
scas
sbb
bound
push
inc
add
xcrypt-cbc
cmpsl
push
int
add
cmpsl
lcall
shrl
movsb
mov
out
push
pop
adc
pop
lret
popf
push
cwtl
dec
adc
hlt
jg
mov
in
fisubrs
adc
mov
mov
inc
aad
insl
int3
or
mov
add
cmp
jae
scas
xor
sub
outsb
into
int
xor
pop
dec
cwtl
test
and
adc
mov
sbb
cli
push
mulb
cmp
jbe
shll
inc
mov
adc
lods
add
repnz
insb
xchg
leave
xchg
sahf
insl
jl
out
jl
repnz
adc
adc
xor
cmp
cwtl
dec
mov
aas
push
cmpl
dec
mov
mov
xor
dec
hlt
mov
jne
cld
cmp
and
into
insb
push
push
or
mov
pop
fldenv
adc
xchg
mov
cmp
and
inc
and
inc
mull
pop
loope
push
dec
leave
jle
enter
insb
inc
pop
pop
in
and
loope
jbe
push
test
outsb
push
fnstcw
mov
xor
jae
loop
and
pop
popa
fwait
and
outsb
in
jns
mov
cwtl
das
pop
aaa
sahf
jp
jge
inc
sbb
add
das
lcall
cmp
ds
jle
fxch
insl
js
out
leave
aam
and
adc
test
cmp
bound
jae
xlat
add
sbb
gs
scas
cmp
adc
sbb
push
adc
xchg
int
jle
pop
stc
loop
jmp
andw
sbb
mov
jnp
push
pop
pshufw
inc
ljmp
test
push
dec
shlb
mov
adc
fistpll
push
in
je
jbe
scas
push
mov
mov
nop
fcmovb
imul
push
es
ret
push
jno
ret
jbe
pop
mov
sub
xor
int
clc
push
roll
mov
cs
fcomps
add
push
ljmp
mov
jle
aas
adc
dec
adc
mov
xor
cmpsb
rcrl
popa
pop
cmpsb
jb
cs
and
je
loop
lahf
ds
fdivs
jb
jg
imull
mov
mov
jge
inc
sbb
inc
fisubs
rorl
push
in
jo
jp
call
cmc
or
pop
adc
sub
test
inc
ds
xchg
dec
rorl
aaa
mov
cmp
mov
inc
out
les
mov
sti
cmp
lods
popa
jns
mov
bound
cmp
icebp
mov
repnz
and
mov
in
js
std
mov
xchg
ss
xor
lock
dec
and
mov
outsl
fistpl
mov
and
push
xor
in
add
imul
ja
fstl
dec
push
jb
sub
les
scas
xchg
stos
mov
aam
test
call
sbb
out
into
jo
gs
jle
and
test
cltd
mov
push
xor
sti
cmp
adc
imul
movsb
aas
cmp
mov
cmc
sbb
lret
fs
add
cmp
push
in
inc
adc
sbb
pop
int3
sarb
jnp
inc
or
dec
mov
aam
adc
sub
loopne
into
pop
shll
mov
lahf
xchg
clc
and
mov
jns
fimull
cmp
mov
sub
jmp
inc
jmp
push
inc
cmp
xchg
das
xchg
bound
out
lahf
icebp
pop
addr16
shrl
out
adc
and
out
cmp
mov
sub
mov
pop
xchg
clc
and
xchg
push
out
jns
jbe
movsl
loope
xlat
fucomip
rcl
sbb
adc
sub
rorl
push
mov
stos
mov
or
dec
test
xchg
sbb
pop
je
lods
and
mov
mov
pop
addr16
addr16
pop
fistps
cltd
mov
fisubrl
dec
negb
cmpsb
inc
mov
inc
and
sub
push
lds
mov
std
out
sbb
fistps
push
jne
inc
mov
cwtl
mov
push
push
test
push
or
xchg
stos
xchg
pop
es
sub
int
push
push
aam
inc
xchg
sbb
mov
xchg
fisubrl
data16
mov
aas
std
add
fsubrl
adc
fsts
xchg
es
adc
scas
adc
pop
sub
sbb
mov
repz
cld
and
cmp
dec
adc
ss
arpl
xchg
std
dec
test
mov
adc
addb
icebp
jmp
push
incl
repz
fnstenv
or
arpl
leave
jecxz
std
sets
int
sbb
add
lds
shl
arpl
fisubl
cmp
fwait
adc
adc
or
mov
lcall
mov
pop
mull
push
cmp
test
adc
pop
test
leave
jle
mov
mov
or
bnd
mov
adc
add
loopne
xchg
test
shll
xor
jge
or
xchg
enter
inc
push
les
xchg
cmc
mov
adc
mov
mov
gs
adc
subb
popa
or
shl
mov
pop
call
bound
pop
pop
into
dec
test
movsb
xlat
repnz
sub
rclb
aam
pop
test
ret
or
mov
pop
or
add
and
fwait
xor
or
xchg
push
cli
and
adcl
out
jl
xchg
dec
xchg
adc
sti
int3
jno
shlb
sbb
and
lds
stos
pop
push
lds
xlat
xchg
pop
mov
xor
test
mov
mov
sub
lods
popf
fstps
sbb
daa
pop
and
cmp
cwtl
in
jne
fmuls
fwait
pop
imul
scas
sbb
test
mov
push
popf
lret
pop
aaa
fisttps
ss
jae
es
mov
cmp
rcll
clc
jmp
and
sbb
dec
incb
pop
movq
sbb
es
sub
or
mov
pop
adc
das
sbbl
lahf
adc
shrl
cmpb
int
sbb
movsb
lret
iret
jo
arpl
ret
inc
int3
mov
mov
jl
pop
cltd
hlt
push
lcall
mov
xchg
test
xor
lock
aad
enter
cmp
movsl
pop
mov
out
push
cltd
mov
or
jne
lss
movsb
xlat
dec
add
daa
icebp
cwtl
out
fs
call
ret
jmp
add
jne
fwait
mov
fisttps
pop
hlt
mov
out
mov
jg
hlt
dec
pop
shl
into
mov
adc
push
and
jecxz
loop
das
xor
push
mov
ds
faddl
jne
cld
popf
jge
sbbb
ret
push
mov
sbb
push
push
sub
xchg
cli
sbb
adc
ret
mov
rol
test
addr16
dec
adc
pop
cltd
mov
int
mov
cvtpi2ps
leave
aas
fucomip
loope
jmp
mov
es
arpl
ret
fisubrs
push
dec
mov
lret
pop
cmp
and
or
insl
xchg
cwtl
adc
mov
mov
push
xchg
dec
idivl
sbb
test
testb
inc
lcall
das
lods
push
mov
xlat
and
mov
in
ret
ljmp
mov
gs
stc
mov
cmp
outsl
and
repz
out
out
xor
adc
pop
sub
fstpl
dec
cld
cli
jae
cs
and
and
mov
cli
jle
and
stos
inc
into
push
pop
sub
jne
in
mov
repz
call
mov
inc
mov
sub
sub
loop
push
inc
rcl
push
outsb
add
lret
int
shl
aam
add
pusha
movsl
adc
sarb
mov
xor
jo
stos
stc
push
mov
leave
push
sbbb
xchg
xor
movsl
scas
jge
jle
cmp
xchg
inc
addb
ret
inc
sub
cmp
ret
movsl
ret
fsubr
lcall
test
dec
inc
popf
out
fs
loop
iret
adc
push
mov
out
inc
xor
push
js
popa
iret
jl
cmpsb
lods
in
add
call
or
les
rclb
cmp
lret
xchg
ret
es
and
inc
jnp
lret
sbb
js
std
mov
cld
add
out
mov
es
cmpsl
xor
in
out
movsl
adc
pushf
mov
iret
lock
insl
out
dec
jp
in
shlb
push
mov
add
pop
test
inc
lods
xchg
fisttpll
jg
mov
cld
test
in
mov
jge
jo
je
pop
popa
sahf
jmp
cmp
mov
std
jbe
and
inc
mov
or
push
int3
or
xor
jnp
pop
sub
js
imul
ljmp
mov
fisubs
sub
push
push
push
movsl
lea
push
xchg
out
das
rol
call
dec
ja
mov
pushf
outsb
cltd
out
lahf
arpl
pop
jns
stc
inc
loop
inc
decl
jno
hlt
push
mov
cmc
imul
dec
repz
jbe
dec
out
ja
add
aam
inc
popf
ljmp
inc
sub
mov
test
mov
inc
sbb
cmp
add
rcll
rcrl
ljmp
mov
sqrtps
popf
dec
loop
adc
aam
xor
andb
pushf
leave
inc
pop
shr
int3
push
ja
push
mov
ret
test
mov
imul
lret
jae
and
mov
hlt
sbb
lret
sbb
mov
push
inc
push
lods
dec
fisubl
sbbl
outsb
mov
fnstsw
mov
cli
and
xor
das
and
test
sbb
mov
push
jmp
or
icebp
jp
jecxz
cmpsb
xchg
test
xor
mov
inc
cmpsb
jl
inc
into
sbb
repnz
scas
int3
dec
xlat
and
dec
pop
mov
pop
ds
adc
mov
mov
rorl
ret
pop
into
pop
sbb
mov
pop
mov
mov
in
xchg
sub
inc
mov
ds
ret
mov
inc
dec
xor
mov
adc
jae
bnd
sbb
sarl
inc
mov
cs
jno
pushf
faddl
popa
mov
lret
mov
jno
call
push
movsl
fldl
arpl
push
xor
imul
iret
andl
js
sti
cmp
and
into
sub
sahf
enter
lea
call
jb
push
sub
inc
sbb
jns
sbb
stc
imull
es
daa
dec
loop
sub
mulb
sbbl
xchg
or
xor
sti
lds
mov
outsb
aaa
xchg
mov
jge
je
ds
call
addr16
jg
into
call
push
push
mov
sbb
aaa
fstl
push
and
fisubrl
test
pusha
into
ljmp
popa
cmp
ret
inc
adc
lods
inc
nop
cli
iret
cmpsl
sub
jno
xor
std
ret
adc
jo
cmovae
pop
cmp
push
in
sub
faddl
jb
movsl
pop
clc
inc
clc
ret
mov
notb
or
xchg
adc
sbb
xchg
int3
jae
popf
add
insb
decl
and
jb
add
stc
pushw
sar
leave
into
sbb
daa
out
aas
ss
jno
pop
mov
stos
into
push
iret
pusha
and
lahf
iret
jo
or
push
pop
subl
mov
jg
mov
mov
inc
jbe
les
push
sub
pop
sub
mov
stos
or
push
add
in
ficoml
inc
test
ret
imul
popa
lock
in
xor
pop
add
outsb
movsl
pop
lahf
mov
popf
or
mov
lret
popa
xor
frstor
mov
mov
mov
das
loopne
test
adc
inc
std
or
add
lds
inc
sbb
les
sbb
fildl
mov
lds
xor
mov
adc
sbb
inc
or
popa
jg
nop
add
int3
andl
fs
loopne
mov
arpl
and
dec
leave
faddl
ja
jl
add
mov
insl
jo
or
das
cltd
jecxz
cwtl
fcompl
lret
jp
push
repz
out
mov
enter
popa
add
test
or
xchg
push
or
outsl
jnp
ljmp
fcomi
mov
cmp
jnp
sarl
dec
loopne
mov
mov
lahf
std
cmp
mov
inc
aad
ss
fcmovbe
dec
rcll
pop
leave
dec
test
ss
mov
xchg
mov
mov
xchg
fldcw
sar
in
pop
sbb
mov
mov
jbe
call
mov
cld
lock
lods
hlt
leave
xchg
mov
jne
and
jecxz
sub
xchg
cmc
mov
mov
push
icebp
lret
ljmp
or
push
pop
inc
popa
jl
popa
mov
hlt
mov
in
mov
inc
hlt
ja
scas
sbb
shll
xor
and
ss
pop
aad
pop
aad
cld
mov
pop
xor
inc
imul
js
and
sub
push
jg
lock
lock
lret
cmp
mov
push
test
fisubrl
in
cmp
imul
fdivrp
fdivl
jecxz
nop
push
add
sahf
loope
or
sub
ror
fistpl
inc
in
pusha
fistpl
xchg
cmp
fs
aas
jbe
jle
scas
sbb
xchg
stos
push
rcrl
mov
fimuls
cmp
les
cmp
inc
add
imul
sbb
addl
jno
mov
repnz
or
adc
lock
test
cmpsb
pusha
into
sti
out
rolb
daa
cltd
dec
xor
sbb
data16
push
jecxz
adc
call
repz
push
add
and
pop
insb
adc
push
ss
icebp
jl
push
push
fldl
into
sbb
xor
cmpsl
inc
adcb
inc
insl
test
fwait
mov
rolb
rcl
popa
fisubl
test
or
call
dec
jbe
dec
and
sub
pop
or
imul
push
aad
loope
push
dec
mov
jmp
outsb
repnz
cmpsl
adc
dec
mov
add
adc
mov
xor
and
push
ret
cmp
clc
inc
sub
xor
lea
cmpsb
and
repnz
cmpsl
pop
and
jmp
iret
loopne
mov
out
sbb
mov
push
mov
or
sbb
add
test
inc
mov
hlt
and
ja
cmp
pop
pop
test
sub
mov
mov
push
sub
mov
pop
xchg
mov
cli
insb
cmp
cltd
sbb
dec
push
mov
or
jb
sti
xor
cltd
adc
out
or
push
or
inc
cmpsl
push
jb
sbb
dec
xchg
lahf
fimull
jo
xchg
cli
inc
cwtl
insl
daa
mov
ds
or
aad
jl
or
mov
sahf
in
aas
mov
stc
push
scas
pop
inc
cwtl
test
movl
jbe
push
int
popa
push
jle
fstpt
xchg
sbb
dec
in
pushf
add
je
test
add
movsb
jo
and
cmpsb
fs
jbe
xlat
pusha
xchg
lret
call
aas
cmp
adc
xor
shl
sbb
cmp
dec
jle
sub
mov
leave
lea
adc
out
movl
sbb
xor
les
ret
mov
xorl
lods
sbb
out
push
int
and
lcall
scas
lock
push
cmc
loopne
xor
stos
fisubl
sahf
aad
xor
aaa
push
ds
xchg
shrl
push
outsl
out
dec
stc
push
xchg
xchg
jp
inc
jb
mov
inc
mov
xchg
inc
rcll
es
push
fcoml
ficomps
mov
mov
cmpsb
adc
pop
cmp
add
adc
pop
lahf
lods
add
outsl
xchg
and
lods
fcmovb
xor
in
icebp
jb
inc
xchg
mov
add
aaa
gs
sbb
cmc
adc
mov
mov
add
fisubrl
dec
xchg
decb
add
scas
jne
or
cmc
push
pop
mov
xchg
push
nop
xor
imul
mov
iret
dec
and
sub
dec
add
dec
divl
jne
sub
mov
dec
pop
pop
int
cmp
sbb
pop
add
mov
aas
xor
shlb
mov
mov
insl
lcall
push
movsl
pop
inc
or
lret
add
outsb
pop
inc
clc
xor
lret
lahf
mov
repz
insl
sub
xchg
les
pop
test
int
cmp
mov
je
insl
pop
in
repnz
imul
leave
out
jp
imul
sbb
ja
sub
into
push
and
xchg
pop
or
popa
pushf
add
mov
popa
leave
xor
lahf
pop
cmc
jbe
xchg
clc
in
aam
push
aad
lcall
ja
aaa
sbb
nop
sbb
sbb
jecxz
int
and
iret
lods
cmp
fadd
add
adc
stc
jo
repz
adcl
cmp
ljmp
ja
gs
xchg
andb
shll
and
call
dec
mov
mov
das
adc
repnz
sub
add
pop
inc
inc
dec
ja
rorl
cmpsl
add
insl
inc
ljmp
repz
pop
cmp
dec
lock
fs
clc
pop
adc
andb
sahf
sbb
loop
add
adc
sub
movsl
inc
call
adc
mov
rcll
mov
jb
cmp
inc
imul
adc
addr16
lods
mov
repnz
ds
or
or
fdivrl
ret
clc
arpl
mov
fdivp
mov
jg
lret
mov
lock
dec
cltd
fldcw
mov
icebp
and
repnz
mov
and
or
mov
pop
mov
inc
mov
mov
outsb
loope
sbb
sahf
dec
push
lahf
xchg
mov
lret
cltd
sbb
rcll
xor
dec
bound
outsl
dec
aam
xlat
jae
xchg
push
mov
decb
xchg
add
sbbb
add
inc
xchg
adc
or
jge
test
and
or
sub
mov
lret
pusha
sbb
fimuls
bound
test
mov
es
sub
add
sbb
or
hlt
push
adc
push
or
pop
std
mov
jl
push
rcr
push
dec
push
add
xchg
inc
xchg
mov
or
aas
out
xlat
or
dec
mov
mov
xor
push
call
jmp
inc
je
add
push
ljmp
push
repnz
push
ret
sbb
cmp
sub
lds
push
pop
pop
pop
and
int
add
shll
jno
lahf
sbb
sub
fsubs
in
push
lock
jp
addb
mov
dec
lahf
insb
cmpsb
test
stos
das
push
dec
fnsave
in
enter
shlb
inc
cmc
out
xchg
adc
mov
popf
dec
cmpb
aas
add
xchg
insb
fwait
clc
decl
pop
push
mov
mov
cli
loop
test
lock
dec
jns
fs
cs
inc
xor
add
pop
negb
sub
idivl
cli
in
sbb
mov
jne
or
and
mov
pop
mov
fldt
xchg
mov
adc
push
mov
xchg
sbb
cmp
gs
stos
mov
ds
outsb
das
insl
ljmp
xchg
push
push
sbb
sbb
imul
loop
mov
push
or
mov
in
std
pop
dec
mov
cmpsl
leave
jnp
mov
leave
cmc
les
pushl
inc
mov
add
rcrl
mov
dec
and
loop
mov
mov
test
repz
andb
mov
or
negl
lea
out
stc
xchg
mov
mov
sti
mov
and
in
pop
dec
scas
sti
xor
xor
andl
pop
add
sahf
lea
mov
out
les
lods
mov
repz
and
add
lcall
popl
inc
daa
xor
js
xor
out
or
aad
xchg
test
pop
or
adc
repnz
inc
jns
xchg
loope
shll
int3
ljmp
movsb
daa
or
int3
cmp
test
loope
sub
xchg
call
push
sub
lea
jecxz
pop
pop
addb
cwtl
notb
pop
push
roll
andb
aad
stos
and
mov
out
mov
and
rcrl
cltd
or
hlt
fdivs
out
insb
fdivl
sub
pushf
xchg
xchg
sahf
fidivs
sub
fmull
in
call
mov
adc
xor
inc
int3
xchg
shlb
mov
pop
mov
mov
subl
lret
inc
std
dec
jl
push
popf
add
lcall
stc
add
lds
cmp
xchg
imul
lock
xchg
stos
imul
scas
pop
dec
jg
jb
leave
xlat
mov
push
jecxz
scas
xchg
jge
clc
xor
aad
test
inc
pop
scas
inc
divb
idiv
or
ss
test
cs
imul
loopne
cmp
sub
je
shll
in
sbb
sbb
shlb
or
test
loopne
xlat
das
stos
dec
add
and
jae
and
subb
inc
pop
call
cmp
scas
sbb
jg
jnp
fbld
xchg
xchg
cmp
push
lahf
add
popa
pop
adcl
lret
adc
add
iret
and
sti
jp
je
stos
push
or
je
inc
jb
sub
cwtl
fcoml
test
adc
add
cmp
aaa
push
insb
add
pop
fwait
sub
hlt
cli
das
jge
scas
das
test
movhlps
xchg
gs
mov
out
pop
mov
push
movsl
pusha
mov
je
sub
jns
dec
add
lea
mov
fwait
stos
lahf
stos
andl
imul
in
jns
lods
lahf
push
ja
cmp
jge
push
loope
jmp
xchg
out
rclb
rcrb
sub
push
pop
imul
movsb
and
cmp
add
or
shr
jnp
jmp
adc
iret
and
cltd
scas
pop
lods
fwait
cltd
loope
push
arpl
ss
fisttpl
in
fsts
dec
in
arpl
jb
aam
dec
xchg
inc
stc
mov
mov
aad
cs
insl
ficoml
add
adc
cmp
pop
xor
lds
push
out
clc
sbb
in
ror
test
scas
sbb
sbb
sbb
dec
xchg
frstor
in
mov
out
je
mov
push
out
xor
sbb
dec
xor
xchg
enter
mov
jl
adc
push
push
es
iret
pop
mov
fists
push
pop
jge
ret
cld
ret
jae
xchg
loope
ret
pop
in
add
mov
sti
push
cmp
jle
push
fiaddl
or
push
leave
sbb
ss
and
sbb
mov
adc
ret
shll
fnsave
fnsave
xor
jge
mov
adc
jge
sbb
imul
imul
imul
data16
xor
jno
cmpsl
xchg
scas
jno
push
xor
test
ret
cvtpi2ps
cli
inc
fucomip
xor
xchg
ljmp
ss
addr16
cmpsl
jl
fst
and
jns
or
clc
add
ret
insl
push
inc
notl
add
outsl
and
roll
lods
out
xchg
insb
mov
dec
cmpsl
adc
sahf
scas
mov
push
jp
fs
sbb
lret
js
ja
xor
xchg
inc
addr16
ja
add
arpl
mov
test
adc
sub
scas
jne
popf
fwait
push
inc
testl
lret
cmp
and
cltd
je
out
mov
loope
imul
and
jge
into
cltd
aas
or
sti
xor
stc
jmp
xchg
adc
fwait
pop
mov
xchg
adc
jnp
call
xchg
adc
mov
sub
cmp
mov
adc
push
int
mov
push
and
and
pop
mov
fs
xchg
into
mov
pushf
aad
pop
imul
pushf
cli
mov
sub
shlb
insl
ror
hlt
push
pop
ss
icebp
push
sahf
dec
es
loope
addr16
lret
dec
pop
xor
std
lea
xchg
jns
xor
movsl
push
or
pop
pop
mov
cwtl
pop
stc
dec
cmp
dec
loopne
shll
adc
push
xchg
ror
xchg
in
mov
cmp
test
bound
in
pop
jno
in
pop
adcl
int
lods
xchg
es
mov
mov
push
lret
xor
or
loopne
daa
repz
push
nop
rcrb
jno
sbb
sti
rcl
mov
inc
xchg
adc
lahf
and
mov
fiaddl
mov
insl
jnp
xchg
in
daa
outsl
leave
leave
mov
insl
cmp
jo
stos
or
push
clc
jl
ja
pusha
push
xor
jge
mov
popa
cmp
mov
sub
inc
and
das
arpl
mov
loop
inc
jno
pop
dec
xchg
and
sbb
dec
in
lea
cmp
pushf
enter
or
mov
in
mov
loopne
inc
jns
aad
cmc
adc
inc
in
xchg
or
movsl
pop
mov
sbb
xor
pop
into
aaa
clc
sbb
push
push
mov
sub
pop
stc
inc
arpl
pusha
imul
mov
fcmovu
lret
fnstsw
cwtl
mov
mov
adc
jo
dec
icebp
inc
fcmove
jnp
push
lret
mov
add
aas
add
jg
sub
push
shr
test
pop
add
lret
dec
fsubs
dec
jo
sub
adc
push
daa
scas
push
sbb
imul
test
jb
mov
push
divb
mov
jns
jl
adc
fmull
out
fdivs
into
xchg
pop
mov
je
scas
push
je
dec
fwait
mov
mov
rcl
jl
mov
leavew
loopne
xchg
push
inc
jo
pushf
idivl
call
mov
add
jl
sub
test
cwtl
test
rcll
push
xor
push
jg
mov
mov
mov
adc
dec
mov
dec
lods
sbb
enter
dec
push
int3
movl
fdivrs
scas
and
mov
mov
xchg
push
not
or
pop
out
mov
not
loop
mov
jecxz
sub
fsubrl
stc
add
mov
jp
push
and
mov
test
cmp
mov
xchg
fwait
aad
inc
cld
cltd
mov
cli
or
jecxz
aam
jnp
cvtpi2ps
rorl
stc
dec
fcoms
scas
fidivrs
jo
in
dec
cmc
scas
lret
mov
and
mov
in
cs
push
cltd
lods
scas
pop
sub
jle
sub
jp
and
inc
into
call
fwait
jecxz
lock
aaa
inc
addr16
lock
jnp
aas
sub
movsb
cmp
push
cwtl
pop
and
mov
pushf
outsl
inc
iret
nop
insl
mul
add
xor
cmpsb
ja
pop
daa
sub
dec
xchg
dec
aam
push
sbb
add
mov
sbb
cltd
icebp
sarb
pop
mov
arpl
xor
cmp
loope
xor
inc
sbb
fisubs
aad
stos
inc
push
ret
pop
inc
cmp
les
mov
cmpl
xchg
cmp
clc
std
int3
hlt
fstps
fdivrl
aaa
aaa
cmp
in
fsubs
orb
mov
xlat
test
arpl
adc
mov
sbb
xchg
mov
outsl
sub
sbb
mov
and
pop
sbb
pusha
fldl
mov
lcall
fldenv
or
xchg
and
mov
stos
jnp
jo
pop
cmpsb
inc
pusha
setb
daa
aad
lcall
inc
repnz
outsl
out
sub
fildll
fisubrl
sbb
pusha
mov
ss
cmp
and
add
fistl
and
sbb
insl
mov
in
pop
or
mov
cmp
push
adc
dec
push
data16
xor
adc
loope
test
cmp
cmpsl
scas
pop
jle
xchg
push
pop
je
clc
scas
roll
mov
enter
add
cmp
jno
daa
outsl
jl
adc
ret
cs
loope
mov
push
mov
hlt
jae
call
sub
dec
ss
loope
pop
popa
ljmp
or
je
sbb
add
xchg
pop
and
push
cmp
inc
enter
push
sub
push
outsl
lahf
je
xor
mov
testl
sub
xor
clc
sti
pop
mov
mov
xchg
or
adc
nop
fprem
imul
or
sti
sub
add
jl
sub
or
dec
push
dec
fcomps
out
jg
faddl
mov
fimuls
cld
cmp
cmp
leave
add
adc
xor
sti
adcb
and
adc
stos
roll
inc
nop
call
sbb
inc
clc
je
test
xor
popa
push
aam
push
repz
cmp
push
inc
sub
mov
loope
inc
and
sub
insb
pop
pop
lret
pusha
adc
pop
xchg
add
mov
sbb
push
add
push
into
sbb
push
faddl
or
add
inc
movsl
in
out
mov
sub
nop
pop
repnz
mov
fdivrl
inc
cmp
aas
add
negl
shlb
repnz
inc
in
jge
jmp
xor
lcall
hlt
in
dec
add
mov
jb
xchg
fsubrs
loope
push
fs
loopne
fists
xor
cltd
out
sub
cmc
or
inc
jp
ret
xor
mulb
mov
push
shrl
fisubs
jl
push
mov
rep
es
dec
out
loopne
sarb
lret
xlat
sbb
xor
cld
flds
test
pop
mov
out
aaa
mov
sbb
les
lods
jb
push
dec
aam
and
sub
cld
jbe
in
fdivrp
out
pop
pop
pop
jecxz
cmp
cli
in
pop
aaa
clc
sbb
push
pop
insl
jae
jl
dec
jnp
int3
cmp
clc
fimull
inc
jns
fdivrs
push
xchg
mov
std
fists
lods
cmp
or
adcl
push
pop
sbb
int3
repnz
adc
stos
je
hlt
stos
jb
pop
test
jns
pusha
add
and
shrl
add
sub
imul
inc
sahf
jp
out
mov
cmc
mov
cmp
js
das
push
outsl
icebp
js
lds
sub
add
pusha
cmpsl
pop
and
push
popa
aaa
push
mov
fcomps
rcll
dec
cmp
mov
push
iret
mov
jmp
push
xchg
push
imul
xchg
cli
add
lods
jbe
xchg
push
gs
pop
inc
fxam
pop
sbb
and
fisttps
inc
jnp
or
adc
ret
mov
push
cmp
outsb
push
shl
test
jne
push
mov
push
ror
push
mov
inc
jnp
stos
ret
push
mov
popf
cwtl
adcb
xlat
xor
xor
ss
sbbl
in
test
inc
shlb
pop
pop
ja
scas
mov
mov
dec
or
dec
fnstenv
loop
or
fwait
test
je
sub
mov
test
pop
ja
xchg
mov
fcmovnu
push
add
push
jecxz
xchg
fimuls
ja
stos
les
add
adc
jno
loope
xchg
mov
call
and
clc
insl
jmp
pop
in
ret
inc
inc
fisttps
mov
cmp
cltd
ljmp
pop
ror
jnp
jecxz
cmp
xchg
pop
jle
adc
aam
jg
add
push
jmp
add
or
aam
xchg
lods
jb
sbb
gs
xchg
push
xchg
sub
insb
jl
imul
push
sbb
test
cmp
mov
fidivrl
sbb
cli
lret
sub
in
adc
jae
jge
mov
test
xchg
dec
jbe
ja
pop
xor
cmp
add
roll
addr16
jp
mov
xor
roll
pop
xchg
leave
jmp
dec
test
aad
sbb
pop
add
clc
fadds
sub
jmp
add
cmpsb
xor
and
pop
sarb
imul
insb
std
gs
dec
and
test
and
divb
or
jns
cmp
dec
cmp
cmp
out
inc
mov
adc
cli
es
mov
lcall
in
cmc
and
xor
jae
xchg
nop
push
add
push
lret
push
in
idivb
fnstcw
imul
fiaddl
sahf
jnp
divb
sbb
dec
cmpsl
inc
adc
add
adc
jnp
and
lock
lahf
clc
cmp
insl
pop
xor
lds
mov
or
mov
cmp
imul
arpl
insl
xor
add
popf
push
mov
out
add
jne
pop
jl
movsb
cmpb
leave
push
lock
rcrl
lcall
inc
insl
mov
mov
pushf
stos
lahf
cwtl
adc
aas
ror
rolb
jb
mov
mov
std
cmp
sub
aad
addr16
gs
mov
mov
or
fcom
and
mov
xor
lahf
fdivr
or
fstenv
cwtl
addr16
sub
cs
inc
leave
insb
inc
stc
and
cld
lahf
mov
cmp
push
add
lahf
jg
popf
sti
insb
inc
or
test
pop
je
int
incb
jl
call
xchg
sub
insl
in
and
push
ja
sub
sbb
cltd
imul
push
prefetchwt1
sbb
adc
jle
mov
fbstp
daa
ja
pop
test
jb
dec
mov
cwtl
aas
dec
jle
jns
pop
jne
test
mov
cmc
mov
add
cmc
ss
add
cltd
inc
les
mov
xchg
inc
push
lret
and
mov
popf
das
enter
dec
adc
push
cmp
aam
cmp
lret
lock
fdivl
loope
ret
cmp
fadds
add
cmp
xchg
mov
mov
push
sbb
xchg
cltd
or
xchg
sub
iret
sarb
sbb
push
andb
xor
aaa
jle
mov
addb
fcomip
sbb
or
sbb
fisttpll
dec
mov
cwtl
addr16
stos
cmp
cmp
push
xor
out
jg
push
add
ds
jmp
mov
fcmove
sarb
fcomps
ljmp
decb
ss
cmp
lret
sahf
inc
xchg
xor
push
in
scas
sahf
fnstsw
push
hlt
or
fwait
and
sub
movsl
and
push
mov
out
pop
push
mov
cmp
movsb
inc
das
test
pusha
mov
xor
pop
add
add
cli
mov
sub
ljmp
enter
daa
mov
mov
les
sub
negl
test
mov
xor
dec
mov
push
xchg
inc
and
jge
sbb
adc
inc
bound
push
inc
jbe
into
stc
or
jbe
pop
out
lea
pop
fisubs
nop
test
adc
lahf
sarl
out
pop
lea
cld
les
sub
push
inc
fsubr
mov
cmp
lock
or
in
nop
pop
jo
scas
push
adc
rolb
xlat
xor
stc
arpl
and
xor
lret
cltd
sbb
or
fisttpll
jns
jnp
push
shl
sbb
mov
cmp
sub
jp
cltd
push
and
icebp
rorl
add
xchg
movd
sub
mov
lahf
sbb
push
pop
repnz
icebp
aam
pushf
hlt
adc
aad
aaa
mov
aad
sti
imul
movsl
jno
lret
sbb
add
pusha
mov
ret
out
dec
cwtl
imul
cmc
lret
in
mov
cmp
and
cltd
loopne
std
pop
enter
ret
mov
fwait
jecxz
xchg
pop
mov
xchg
xchg
jae
dec
push
inc
in
adc
pop
js
out
xor
js
push
mov
lock
lcall
shll
shlb
sbb
std
pop
pop
push
ljmp
in
xchg
sub
xor
mov
sub
shll
data16
fidivrl
push
lret
mov
je
dec
xorl
addr16
in
cli
sbbl
pushf
jb
iret
dec
push
jae
sub
iret
sbb
pop
push
xchg
xlat
stos
xchg
outsl
cmc
icebp
jl
cmp
inc
cld
and
adc
mov
push
hlt
mov
jmp
add
add
cmpsl
jb
scas
cmp
fildll
cmp
sub
in
sahf
ljmp
jbe
pop
inc
addr16
clc
adc
scas
dec
fstpl
leave
or
xchg
push
sbb
repnz
scas
in
sarl
jnp
loopne
xor
iret
addr16
in
fdivp
cmp
iret
pop
pop
jae
mov
hlt
bound
loopne
sbbl
xchg
xchg
mov
outsb
dec
xor
pop
mov
movsb
xor
jns
add
iret
mov
inc
xor
mov
add
pusha
xchg
mov
mov
sbb
lods
data16
cltd
mov
jnp
and
js
adc
js
xchg
pop
and
das
adc
pop
pop
xor
loope
insb
iret
mov
mov
push
mov
jl
cltd
or
bound
or
stc
cltd
push
jg
loop
out
cmp
out
dec
xor
stos
and
imul
fdivr
cmp
add
push
mov
in
loop
pushf
rol
leave
add
or
mov
lods
imul
pop
push
cld
aam
sbb
jg,pn
xchg
dec
ljmp
xor
popa
mov
rcrb
sarb
mov
fldt
adc
in
ja
mov
mov
sbb
xchg
insl
mov
out
or
mov
ret
insb
add
clc
hlt
mov
or
leave
imul
mov
rcrl
fldl
and
fucomip
pop
dec
sbb
fwait
int3
aas
repnz
ljmp
sbb
dec
insl
sub
and
shrl
mov
pop
mov
mov
sbb
jnp
inc
aad
mov
shlb
sub
jp
fcom
and
pop
xchg
ss
cmpsb
fildll
shlb
xlat
mov
mov
testb
and
arpl
outsb
push
xor
in
adc
sub
xor
aaa
cltd
fistpll
push
fmul
sub
cs
adcl
sbb
test
jg
mov
sub
and
popl
mov
push
pop
and
dec
les
scas
ljmp
call
jne
into
inc
divb
lds
fcmovbe
push
mov
scas
or
addr16
addb
lahf
mov
shlb
pop
ret
push
mov
inc
jmp
in
test
test
insb
jno
addl
stos
stos
cli
pop
mov
sbb
ficoms
xor
xchg
enter
stos
sub
dec
mov
mov
xor
jmp
and
pop
sarl
push
xor
xchg
sub
push
push
addr16
das
and
dec
stc
icebp
sub
push
fistpl
add
pop
adc
popf
add
jp
pop
cmp
add
xorb
repz
mov
call
pusha
jbe
enter
xchg
cmp
imul
dec
and
fwait
pop
mov
rcrl
xor
repz
pop
out
addr16
mov
leave
loope
call
pop
add
movsl
dec
je
in
sarb
jnp
and
sub
sahf
adc
push
pop
rcr
jne
in
jecxz
mov
cwtl
push
fstp
dec
fldt
and
sbb
adc
lds
out
mov
jmp
sahf
push
sbb
scas
stc
ds
adc
cmp
test
add
push
fnstenv
pusha
iret
data16
jmp
add
mov
repnz
inc
pop
mov
add
dec
mov
push
push
mov
loope
push
stos
push
mov
xor
mov
mov
fstl
aam
js
sahf
or
and
insl
mov
pop
dec
xchg
movsl
pusha
mov
test
jmp
js
xor
or
les
jne
aaa
mov
push
xlat
repnz
xor
imul
scas
mov
add
das
gs
mov
xor
jbe
mov
sub
sbb
sbbb
fnstsw
push
mov
push
stos
pop
repz
out
mov
cmp
jno
dec
shlb
leave
add
adc
sbb
repnz
jle
mov
mov
in
cld
ret
pop
fmuls
cli
and
push
cs
in
sub
fwait
mov
hlt
das
stos
add
jae
pop
jbe
xchg
sub
and
mov
insl
jmp
mov
fs
fcompl
leave
fnstsw
or
leave
inc
xchg
movsb
out
hlt
fcompl
jno
mov
addb
pop
sub
xchg
out
sbb
add
testl
fwait
add
mov
adc
pop
cwtl
testb
mov
ss
test
cli
jb
iret
adc
into
inc
cmp
cmp
add
in
cmp
dec
adc
jge
xchg
cmpsb
mov
or
int3
jmp
xchg
aas
or
sbb
out
cmp
imul
adc
mov
mov
and
mov
push
cmp
jmp
and
loopne
stc
inc
mov
mov
sub
cmp
push
call
mov
mov
sub
fcoml
xchg
push
push
mov
popf
in
movsl
ret
push
add
jle
rcrb
jmp
add
mov
jg
loope
enter
movsl
add
fwait
rcrb
xchg
loop
sub
enter
sbb
jecxz
sbb
add
popf
and
lret
mov
mov
sbb
jnp
lret
mov
xchg
fwait
clc
cmc
jecxz
lock
int3
test
add
jecxz
pop
inc
pop
dec
inc
leave
add
sbb
dec
insb
or
pop
aas
push
xor
fisubs
push
aas
jg
fdivrl
sub
sub
lahf
jl
nop
adc
xchg
jne
loop
cmp
cmp
mov
lahf
test
or
imul
dec
inc
ja
sbb
orb
xchg
sub
mov
gs
fwait
inc
shll
mov
imul
inc
testl
mov
mov
iret
jg
in
adc
sbb
clc
xchg
js
fnstenv
sbb
nop
sub
xchg
push
ret
rcr
mov
outsl
arpl
mov
pop
aad
mov
subl
push
ret
pushf
sbb
sahf
aas
cmp
frndint
sbb
sub
adc
scas
jbe
add
faddp
xor
stos
sarl
xor
imul
sub
sub
cmp
inc
mov
imul
xor
sbbb
push
pushf
xor
hlt
push
sti
xchg
inc
and
fwait
int
mov
adc
mov
test
ljmp
add
nop
sbb
and
push
xchg
mov
mov
cwtl
inc
push
pop
pusha
hlt
out
push
iret
call
jnp
pop
ja
je
mov
fsubr
mov
test
aaa
dec
add
or
jecxz
pushf
push
icebp
mov
je
mov
loopne
xchg
lods
aas
mov
inc
pop
jbe,pn
mov
add
aas
cwtl
dec
xchg
loop
cmp
aam
push
mov
movsl
aam
push
pop
mov
push
les
inc
inc
xor
push
mov
mov
pushf
push
sub
in
out
lret
cmpsl
imul
loope
mov
mov
test
enter
mov
dec
sub
mov
push
jno
pop
data16
cmp
jmp
sbb
or
scas
mov
adc
xorb
mov
inc
mov
aad
out
add
rcr
mov
aas
or
dec
inc
pop
lret
sbb
add
test
adc
jb
dec
and
ffreep
and
pop
movnti
sbb
je
pop
sub
jle
faddp
bound
mov
and
push
shl
test
loopne
xchg
in
icebp
sub
pop
mov
fldt
sbb
push
mov
dec
push
rcrl
and
imul
lahf
dec
sub
idivl
inc
push
sbb
push
sub
mov
push
dec
lret
mov
test
lret
xor
rolb
push
pop
mov
adc
or
nop
cmp
cmpsl
lds
shrb
stos
pop
xor
cmp
loop
scas
jge
xchg
int
sub
outsb
xor
in
repz
cmp
xchg
loope
stc
push
xchg
push
sub
enter
shlb
lea
jne
sub
leave
mov
mov
out
adc
lds
loope
les
sub
dec
jo
addr16
and
mov
adc
fdivp
dec
mov
push
fimuls
pop
test
adc
push
sub
das
loop
mov
pushf
call
shll
and
or
sub
imull
cmpsl
lods
or
pop
std
jle
bound
mov
cmp
shll
insb
adcl
std
sub
add
xor
cmpsb
out
xchg
xchg
ret
and
test
mov
movsl
movsl
andl
xor
cmp
into
jns
call
push
push
mov
das
call
ds
insb
pop
sbb
sub
push
jmp
clc
lret
jo
pusha
xchg
mov
adc
mov
inc
inc
fistps
sbb
pop
push
ds
xor
pusha
lods
inc
adc
outsl
leave
jg
jno
popa
sti
imul
lea
daa
xchg
fisubs
ret
pand
jb
mov
ljmp
jge
jl
sub
jle
xor
clc
sbb
jmp
push
lds
sub
push
xchg
pop
xchg
mov
enter
xchg
mov
ljmp
call
cld
mov
cmpsb
or
cmp
sahf
fidivrl
adc
pusha
test
cmp
js
mov
xchg
push
lahf
insb
into
les
sbb
xor
push
into
dec
dec
cmp
pop
loope
sahf
mov
call
jns
push
clc
sub
cmpsb
or
push
mov
pcmpgtb
mov
pop
or
inc
loop
mov
adc
xor
push
or
sub
leave
jne
sbb
adc
adc
or
jecxz
adc
in
fisttpll
xchg
arpl
rcl
gs
or
rcrl
iret
sub
ret
mul
shl
xchg
stos
test
xchg
movzbl
mov
inc
pop
lahf
ret
mov
je
and
sbb
insb
push
ret
lds
lods
testb
sbb
mov
xor
mov
mov
movb
cmpsl
or
jmp
add
xlat
inc
out
inc
mov
enter
shrl
in
aas
xor
mov
mov
testb
sbb
ret
cs
aas
fmuls
xchg
incl
mov
sbb
pop
into
sbb
aad
xchg
and
gs
add
sbb
push
sbb
std
or
xor
popl
adc
jo
jae
xor
add
dec
inc
cmp
xor
stos
mov
mov
cmc
xchg
sbb
and
in
sbb
add
pop
jne
fisttpll
mov
xlat
movsl
mov
aad
cs
inc
js
aas
mov
or
sarl
stos
enter
shll
xchg
pop
or
mov
mov
addr16
frstor
dec
rolb
iret
movsl
jp
punpckhdq
cmpsl
add
fwait
mov
sbb
mov
cmpsb
push
push
mov
loope
aam
xchg
dec
xchg
sub
mov
mov
inc
sub
nop
das
movsb
xor
fdivrp
insl
inc
clc
xchg
rorl
and
lcall
icebp
pop
xor
fbstp
daa
jnp
adc
imul
xchg
loopne
incb
in
mov
fsubrs
pusha
repnz
push
rep
daa
fildll
push
adc
fiaddl
cmpsb
add
mov
cld
and
inc
pop
in
scas
add
or
push
jmp
cmp
mov
push
icebp
fmuls
jle
nop
mov
mov
pop
imul
sub
mov
notb
push
cmpsl
popf
test
shlb
mov
mulb
scas
setl
aad
and
ret
xchg
jmp
mov
pusha
push
or
mov
cmpsl
loope
mov
or
jo
pop
ficompl
daa
pop
xor
pop
and
adc
mov
inc
les
shlb
aas
xchg
push
and
movsb
mull
jp
fildl
sbb
out
pushf
test
jg
cltd
push
xor
faddl
pusha
cmp
imul
fsubrl
xorl
mov
loopne
jecxz
int
mov
les
mov
mov
jbe
mov
or
mov
test
movsb
aas
jg
push
add
jmp
ds
js
jecxz
mov
out
popf
gs
dec
movsb
loop
mov
mov
push
rcrb
rclb
lods
cltd
and
js
fildl
popf
cmp
rorl
stc
inc
adc
pop
mov
sbb
mov
mov
outsl
cmpsl
es
iret
cmc
adc
pop
mov
push
popf
pushl
inc
adc
adc
sbb
xchg
lea
ret
mov
push
pop
fidivl
adcb
inc
xchg
cmp
mov
test
fmuls
sub
je
inc
fisttpll
xchg
push
and
in
rclb
or
lret
shlb
add
pop
cmpl
ss
rcrb
inc
sbb
hlt
repnz
add
or
outsb
push
outsb
push
dec
xlat
mov
out
lds
ret
xchg
out
cmpsb
cmp
mov
test
bound
ret
jns
cli
or
mov
je
inc
jmp
dec
cmp
fwait
xor
jle
int
and
dec
cmp
cwtl
pushf
push
loop
lret
testl
xor
mov
jo
adc
int
xchg
cmc
aad
movsl
lahf
pop
xchg
sti
jne
cmp
add
and
in
ljmp
sub
mov
flds
pop
aad
mov
fwait
scas
and
xchg
push
repz
je
lcall
sub
or
xchg
stc
inc
push
rclb
out
xor
fucomi
xor
lret
push
stos
inc
test
sbb
stos
dec
enter
ljmp
mov
mov
cmp
rclb
pop
and
mov
xadd
mov
decb
mov
lret
lret
sbb
xchg
in
repnz
mov
sub
popf
mov
xor
rorl
or
movsb
test
das
std
sbb
nop
dec
sub
stos
leave
cmp
jmp
dec
cmp
xchg
test
xchg
adc
ja
aaa
les
dec
sub
nop
push
or
pop
xchg
outsb
iret
mov
push
popl
xchg
fs
xchg
inc
call
and
mov
push
data16
inc
cmp
jns
test
stc
sbb
es
dec
mov
gs
scas
aad
push
and
xchg
and
mov
mov
aas
jmp
xor
shll
cmc
fwait
pop
mov
negb
insb
inc
ljmp
lods
pop
cmp
insl
push
out
neg
loope
sub
pop
cmp
insl
push
mov
ds
jmp
lret
push
aam
xor
xor
xchg
dec
mov
jge
subl
pop
cmp
cmp
rcrl
jl
out
movsl
in
jb
push
xchg
xchg
fmuls
xlat
test
fwait
add
js
xchg
das
pushf
popf
xor
loopne
jne
sbb
clc
push
mov
sbb
pop
fisubs
inc
mov
out
dec
aas
pop
xchg
out
inc
pop
cmp
test
inc
pop
imul
pop
mov
or
adc
flds
xor
pop
xor
ss
inc
sbb
addb
jae
jg
out
stos
and
rcrl
in
mov
call
stc
insb
pop
jle
jns
pusha
arpl
sbb
pop
addr16
popf
fwait
das
mov
sub
hlt
popf
hlt
jb
das
sbb
sub
lds
data16
fcmovu
sub
ds
xor
scas
sub
aaa
call
int3
or
xor
and
mov
add
int
pop
roll
decb
test
insl
ljmp
push
add
jg
xlat
repnz
dec
loope
cmp
ret
mov
cmpsl
test
roll
and
jle
outsb
out
xor
repnz
add
inc
mov
es
mov
pop
mov
inc
sbb
jmp
jmp
mov
mov
push
incl
lock
lcall
ror
xor
adc
lret
pxor
shll
stc
aam
popf
xchg
inc
pop
cmp
add
sti
scas
iret
addl
push
or
out
adc
mov
add
gs
sbb
mov
cmp
psubd
shl
pop
xor
dec
dec
outsb
xchg
loopne
xlat
sbb
ljmp
pop
cmp
pop
test
add
ja
lcall
mov
shll
xchg
into
xor
out
pop
mov
pop
add
mov
sti
xchg
cmpsb
and
jae
or
pop
push
loope
nop
mov
imull
imul
inc
sub
xor
xor
pop
add
push
call
cmpb
adc
or
cmp
mov
sub
xchg
imul
mov
ret
xlat
popa
add
outsl
pop
int3
sbb
loopne
pop
aad
pusha
rolb
cmc
xchg
ficomps
xor
scas
aas
or
xchg
add
push
fnstenv
repz
mov
mov
clc
inc
fnsave
sub
add
cmp
pop
int3
ret
movsl
push
jmp
push
dec
or
je
push
loop
pop
lods
cmp
fbld
clc
push
xchg
xlat
lcall
in
push
push
ljmp
jb
es
fwait
mov
cmpsb
ds
mov
mov
repnz
mov
inc
iret
jbe
data16
outsb
adc
aam
fwait
mov
push
pop
mov
mov
and
pop
popa
andb
mov
xor
inc
lret
push
dec
push
sub
jecxz
pushf
sub
dec
cmp
scas
and
sbbl
and
sub
push
rorl
daa
push
and
push
add
jns
jae
loop
gs
xchg
xchg
sub
enter
subb
xchg
mov
mov
icebp
mul
add
cmpl
rdseed
lods
mov
js
fbstp
sbb
mov
pop
loop
aaa
xrelease
cmp
push
shlb
dec
xor
movsl
jle
adc
shl
inc
es
and
lds
ja
push
sub
fildll
push
in
fistl
pop
cmp
push
xor
sti
int3
out
or
movsb
in
outsb
mov
pop
xor
ret
jp
cmp
leave
adc
jnp
addr16
dec
jne
insl
lods
int3
or
pusha
push
addr16
xchg
mov
push
jecxz
mov
push
pop
cwtl
sbb
sub
fcompl
out
cli
pop
rcl
loop
push
xchg
faddl
repnz
incl
adc
inc
xor
lds
shlb
ja
popf
dec
xor
aas
dec
mov
mov
aad
mov
popa
lret
mov
popf
xchg
sub
int
hlt
cmp
jle
push
xor
push
add
xor
jb
neg
push
jo
stos
fistps
mov
imul
les
popa
inc
sub
pop
xor
into
adc
popf
sbb
cmp
sbb
mov
sub
loope
inc
pop
sub
sub
enter
push
cwtl
mov
mov
pop
or
mov
xchg
xor
add
push
fbld
adc
mov
xlat
pushf
loope
or
pop
mov
mov
loopne
dec
fs
inc
mov
lea
add
mov
test
dec
lahf
js
xor
pusha
test
sti
inc
inc
pop
cs
cmpsb
fimull
icebp
xchg
cmc
outsb
frstor
arpl
into
mov
sub
mov
loopne
int
xlat
rorl
add
push
in
lea
inc
mov
clc
stos
xchg
daa
lods
ret
mov
inc
lcall
xchg
popa
int
ds
sbb
rorl
into
lea
jb
or
fsub
scas
xor
inc
mov
cmp
mov
pop
scas
sbb
dec
mov
xchg
mov
jb
xchg
mov
pop
aam
rorb
loopne
xor
ret
jl
ds
test
inc
nop
decl
cmpsb
out
cmp
xor
xor
push
test
mov
test
fld
sbb
add
add
push
xchg
cmp
rcl
sbb
dec
fs
push
push
adc
push
fcoml
jbe
ret
bound
adc
in
push
std
hlt
cmp
or
int
mov
sbb
in
pop
fwait
mov
je
fidivl
cmp
add
enter
ja
in
out
sbb
enter
adc
mov
or
pusha
and
andl
sub
adc
mov
stc
dec
stos
push
insl
test
sub
into
cmp
add
and
mov
push
or
mov
jmp
gs
sbb
or
xchg
stos
inc
fldcw
and
sub
push
jmp
gs
push
ret
rorb
das
xchg
je
cmpsb
lret
imul
push
jmp
and
mov
and
or
test
ret
loope
sbb
and
dec
mov
cmc
sub
or
pop
scas
mov
dec
mov
je
bound
lret
mov
in
adc
inc
test
shlb
sub
xchg
cmc
push
jb
in
xor
lods
xor
push
push
pop
call
loope
popf
cmp
shrl
xor
jne
xor
xlat
addl
sbb
push
cmpsb
xchg
dec
sbbl
sub
icebp
xor
sub
ljmp
adc
add
and
rcrl
dec
mov
sbb
mov
dec
mov
sbb
mov
cmp
xor
push
pusha
fldl
lods
sahf
push
shll
aad
cld
push
das
push
ja
and
mul
cs
push
in
cltd
das
sub
in
pop
push
jb
mov
lret
and
iret
pop
pop
push
stc
leave
hlt
adc
mov
jecxz
mov
or
das
pop
orb
or
mov
daa
inc
hlt
repz
in
stos
push
insl
cmp
mov
cld
mov
test
mov
sub
xor
mov
aad
sarl
push
in
lcall
mov
insb
decb
pop
cli
mov
pop
lods
mov
mov
mov
popl
testl
in
push
or
lods
or
std
popf
dec
dec
fmul
aad
xchg
inc
jp
push
outsb
dec
pusha
cmc
loopne
fstl
cli
lods
sub
xchg
jns
inc
cmpl
sbb
das
shl
adc
iret
sbb
xchg
cmp
pop
dec
clc
icebp
push
dec
enter
out
xchg
fs
push
fadds
sub
xchg
ljmp
popa
arpl
adc
or
in
test
push
mov
int
test
push
add
gs
xchg
sub
adc
aaa
cmp
cld
shrl
xor
xchg
into
sbb
stc
push
jp
in
lock
jg
or
jnp
sub
cwtl
mov
push
clc
mov
pop
mov
jae
ret
test
and
mov
mov
addr16
sub
lds
jp
in
add
iret
fstl
sahf
push
xchg
add
push
and
cwtl
mov
pop
jge
iret
sbb
call
stos
andb
rorb
scas
add
pop
cmp
and
add
les
adc
addr16
ljmp
adc
mov
cmpsl
jnp
inc
ss
cmp
or
psubsb
shrl
gs
gs
clc
adc
xchg
arpl
div
gs
data16
add
pop
lret
outsb
sbb
mov
inc
xchg
int
cwtl
cli
add
movsb
mov
dec
sarl
jg
lods
scas
in
scas
or
push
ret
mov
das
xor
sbb
fcmovnb
push
popa
data16
iret
cbtw
bound
hlt
fiadds
clc
jns
cmp
cmp
mov
adc
add
mov
cmp
repnz
xlat
xchg
je
sbb
mov
sbb
int3
push
pop
xorl
sbb
or
leave
aam
std
pop
or
add
push
dec
pop
push
mov
aas
daa
and
cwtl
int3
mov
addb
arpl
mov
mov
cmc
ja
lods
mov
out
push
lods
mov
insb
jbe
mov
and
fisttps
mov
cli
push
add
adc
rcrb
repz
lcall
aad
or
ja
push
and
push
scas
sbb
xchg
out
mov
aam
xchg
mov
sub
pop
mov
adc
add
out
pop
sbb
loope
mov
ja
cli
cmpsl
test
jle
adc
std
inc
ljmp
inc
pop
adc
popf
insb
loop
push
dec
push
in
sbb
mov
push
popl
dec
f2xm1
dec
shl
fnstenv
dec
inc
jecxz
stos
scas
xor
out
pop
lret
inc
lea
and
rclb
arpl
dec
pop
xchg
push
loope
dec
dec
jecxz
mov
ret
movsl
test
jg
xchg
sub
lret
js
or
lcall
pop
jecxz
cli
ds
dec
mov
ljmp
jl
xchg
popf
out
xor
cmp
rolb
addr16
push
pop
mov
jbe
fwait
aaa
jecxz
xchg
sub
jbe
or
push
adc
pop
pmulhw
cmp
mov
loope
vminss
iret
test
pop
xor
mov
sbb
incl
add
pop
enter
pop
aaa
jnp
mov
xchg
push
push
in
fs
mov
popa
push
xor
imull
dec
pop
dec
pop
sahf
imul
out
scas
mov
sub
out
insb
leave
std
fsubrl
xor
xor
lahf
arpl
xchg
dec
pop
aas
or
je
push
jns
sub
mov
sub
sahf
scas
and
test
imul
mov
pop
push
in
outsb
cmp
dec
push
add
mov
mov
sub
sti
push
mov
movsb
lods
je
popa
mov
ds
mov
cld
fldt
xchg
sbb
cmc
test
push
sahf
adc
mov
aaa
inc
test
or
mov
mov
xchg
cwtl
pop
dec
cmp
pop
cmp
xchg
ret
cmc
or
enter
adc
lret
xor
xor
dec
rcrb
addl
int3
es
jnp
dec
pop
jns
dec
movsb
mov
inc
push
xchg
pusha
jne
pop
xchg
jp
popf
mov
iret
or
pop
call
sub
mov
inc
mov
js
jmp
hlt
push
push
femms
sbb
add
push
movsb
mov
push
pop
mov
repz
fistl
pop
or
push
shrl
cmc
in
mov
push
jmp
fstps
in
rcr
mov
xchg
test
add
xchg
xchg
mov
ret
pop
stc
fst
push
jbe
test
and
cld
das
lahf
mov
shl
xor
xor
sub
adc
mov
and
cmpsb
call
adcl
loopne
xor
push
lock
push
rcll
ret
js
dec
push
enter
mov
shlb
cmp
stos
popa
xor
mov
pop
xchg
out
jbe,pt
test
aad
mov
cmpsb
rorb
push
ds
dec
out
jl
jbe
mov
ds
std
pop
sub
outsl
jmp
loope
das
fneni(8087
push
xchg
inc
cmpsb
dec
sub
icebp
les
xor
and
dec
ret
adc
add
ds
nop
mov
fsubl
aas
mov
ss
lret
lods
test
or
outsb
xchg
mov
hlt
cmpsb
mov
jmp
inc
dec
jmp
test
addb
xor
mov
xlat
test
cmp
fstps
scas
inc
popf
ljmp
jge
mov
ret
lods
mov
je
daa
adc
and
sahf
movsw
jmp
aas
cmp
loope
pop
sti
mov
dec
int
jnp
mov
pusha
ficomps
mov
jae
dec
lcall
mov
or
adc
mov
sahf
out
cld
mov
lock
dec
popf
xchg
lods
imulb
pop
sbbw
dec
mov
lea
outsb
packsswb
imul
cmp
mov
icebp
xchg
inc
std
pop
xchg
adc
sub
pop
shrb
add
mulb
sbb
insl
inc
shll
out
add
insl
dec
outsl
mov
inc
les
push
call
in
xor
imul
nop
mov
xchg
sti
fnsave
cmp
mov
rcrb
xchg
cmpsl
cmpl
jo
mov
icebp
pop
mov
fs
pop
out
inc
mov
fstpl
mov
sbb
negb
imul
sahf
scas
inc
push
dec
pop
xchg
loopne
stos
sbb
lock
lods
inc
dec
inc
clc
ret
mov
aam
jg
push
mov
shrl
or
outsl
lock
mov
xchg
push
es
mov
adc
pop
sahf
mov
mov
mov
imul
in
shlb
mov
sbb
inc
and
push
jmp
shll
inc
jo
push
daa
imul
xor
add
push
adc
lea
jl
xchg
int3
mov
frstor
mov
lret
imul
sti
pop
lea
xor
jmp
cmp
mov
sbb
pop
jl
xor
adc
in
or
mov
psubw
cltd
data16
pushf
loopne
mov
ds
lds
pop
mov
and
xchg
mov
mov
in
push
daa
call
xor
mov
nop
push
cmp
test
xor
mov
dec
mov
call
loop
mov
push
inc
imul
dec
xchg
xchg
or
scas
es
push
cmp
or
out
test
pop
mov
ljmp
outsb
std
cmp
neg
sbb
in
push
subl
pusha
iret
pop
jbe
insb
mov
push
dec
dec
cmp
cmp
jo
xchg
test
push
pop
mov
adc
push
call
add
xchg
mov
mov
std
xor
cwtl
shl
sub
add
sahf
idivl
mov
sti
or
out
shrb
clc
outsb
and
ljmp
xor
fiaddl
jbe
inc
aas
pop
jns
sahf
jle
testl
inc
addr16
mov
call
nop
xor
cwtl
jge
sti
mov
xor
leave
cmpsb
fs
jge
push
loope
push
push
stc
push
lock
mov
fadds
leave
testl
xchg
lods
lea
xlat
icebp
pop
popf
adc
and
cmp
sub
xchg
cmp
push
fidivrl
js
sub
imul
orl
pop
push
lods
outsl
mov
mov
mov
inc
add
mov
fimuls
or
xlat
inc
sub
scas
push
shrb
push
imull
dec
sub
cmpsl
cmpsl
dec
add
aaa
vmaxsd
outsb
pop
std
decb
xor
sahf
add
stos
pop
stos
lods
sub
stos
jge
aas
sbb
aaa
leave
pop
xorb
popf
cs
lahf
mov
rclb
fsubs
movsb
and
les
out
popf
jge
aam
jle
lcall
pop
std
lret
inc
outsb
test
jmp
ds
xchg
xchg
lret
int3
lods
dec
addr16
jl
add
cmp
adc
jb
sahf
adc
mov
mov
jbe
push
xchg
mov
xchg
pop
inc
push
dec
jb
sbb
fsubl
data16
fwait
sahf
push
dec
loope
mov
adc
mov
inc
js
push
jo
inc
cltd
test
xor
jge
inc
call
adc
mov
xor
sub
or
bound
js
xchg
inc
inc
lds
inc
push
mov
call
divb
mov
xlat
lock
xor
sti
mov
enter
or
ret
pop
shll
mov
repnz
setbe
cmp
add
mov
push
shrb
mov
mov
test
stos
or
jecxz
cmp
add
xchg
mov
cmp
adc
add
fcomps
push
in
ss
in
lret
xor
je
hlt
xorb
jecxz
in
xchg
sub
adc
or
jl
cmpsl
fsubrl
stos
sbb
push
xchg
es
cli
mov
sub
adc
repz
mov
xor
cwtl
push
out
push
into
pop
adc
pop
bound
leave
or
lods
sub
mov
shl
xor
mov
inc
jmp
repz
movl
jne
dec
push
mov
cmp
sbb
cmp
cmp
ss
pop
xchg
jecxz
adc
jno
aas
mov
jle
jo
sub
movsl
sub
out
pop
shl
pop
sub
loopne
add
les
or
sbb
sub
xor
add
mov
sub
insl
aaa
punpckhbw
jg
mov
mov
ds
push
inc
adc
hlt
xlat
in
lods
jb
lods
nop
push
sub
inc
in
fwait
jl
mov
mov
adc
jns
cli
flds
push
lcall
int
lea
pop
pushf
adc
sbb
leave
std
and
inc
lahf
leave
and
mov
in
dec
mov
push
sub
push
and
fs
sbb
xchg
push
fcomps
mov
mov
repz
roll
imul
and
rorl
xchg
xchg
push
mov
ljmp
decl
mov
pushf
jo
sub
fbstp
jge
mov
negb
pop
jl
adc
cld
adc
mov
jle
imul
dec
adc
test
inc
dec
scas
push
dec
mov
call
pusha
test
jns
and
or
xor
std
mov
and
in
and
rcr
jo
xor
testl
dec
inc
and
jae
sahf
incb
inc
inc
fdivrs
gs
bound
test
dec
cmp
clc
imul
fimull
loope
nop
dec
jecxz
cmp
pop
mov
or
outsl
mov
or
mov
mov
xchg
or
outsl
les
and
push
inc
cmpsl
cmp
aam
test
ss
rcll
in
call
sub
xor
mov
inc
push
pop
and
mov
out
jecxz
test
lods
lea
and
insb
daa
dec
add
lcall
push
pop
aaa
mov
cmpl
cli
jmp
jne
fwait
mov
cmpsb
pop
or
imul
pusha
cmp
jp
rol
fldl
into
jns
or
push
push
rcrb
ss
cmp
or
orl
jno
mov
inc
mov
js
cld
xchg
ret
jmp
mov
jmp
andl
int3
aaa
xor
push
xor
movsb
push
mov
mov
sbb
loope
roll
jnp
or
sbb
lods
or
mov
addr16
mov
pop
or
es
xor
pop
mov
in
lods
fsts
outsl
test
pop
arpl
add
negl
inc
loopne
and
push
mov
int3
pop
dec
int3
xor
mov
mov
pop
pop
data16
rorb
inc
stos
jge
dec
imul
push
xchg
cmp
xchg
push
ret
mov
outsb
or
and
mov
jnp
mov
es
jp
ds
pop
pop
jnp
pop
push
test
sti
dec
clc
pop
mov
mov
add
xchg
lret
mov
push
test
xor
repnz
jecxz
in
mov
ret
jg
lods
movsb
mov
stos
cwtl
fisubs
xchg
add
sub
jge
sub
xchg
lods
ss
je
mov
jmp
mov
adc
mov
jp
inc
jmp
add
jo
int3
cmpb
cmp
mov
mov
push
xor
inc
and
and
and
fs
leave
jb
addr16
test
jge
xchg
mov
sarl
or
mov
mov
add
lret
lods
sbb
cmpsb
pop
ss
xchg
imul
cld
cmc
rclb
mov
cli
mov
mov
cmp
loope
sahf
jo
int
xorl
insl
loopne
scas
in
adc
sbb
icebp
es
cmp
stos
leave
sbb
sub
push
repnz
cli
call
loopne
xor
js
push
sbb
inc
add
cmp
inc
lret
popf
into
test
nop
mov
inc
idivb
movsl
enter
xor
mov
lahf
jnp
shlb
es
mov
push
fiaddl
mov
xchg
push
adc
xchg
loop
bnd
push
xor
test
call
lods
into
outsb
cmpsb
or
mov
es
jmp
rcl
add
mov
jl
adc
in
sub
ficoms
call
xchg
jnp
dec
out
mov
leave
mov
sub
inc
fdivrs
sub
lahf
inc
and
ljmp
dec
pusha
dec
clc
popf
testb
jns
ret
add
jne
fstpt
jnp
andl
push
sahf
popf
cmp
jno
dec
jl
pop
shll
cs
adc
push
shlb
add
ret
enter
inc
incl
mov
jne
sbb
aaa
mov
mov
in
cld
ljmp
fsubrs
frstor
sbb
lahf
ss
pavgw
les
je
lret
clc
mov
loope
enter
int
out
mov
es
mov
in
in
loopne
mov
stc
mov
movsb
ljmp
iret
imul
adc
add
inc
icebp
lds
stos
enter
lcall
call
xchg
je
leave
test
mov
jmpw
sub
outsb
repz
sub
das
add
pop
push
enter
inc
mov
or
jl
mov
adc
mov
xchg
fwait
pop
pop
or
mov
lret
pop
adc
icebp
dec
cltd
pop
push
call
mov
lock
testb
adc
xor
fiaddl
ds
aad
stc
jne
lret
sbb
mov
pop
rcpps
testl
lock
add
out
addr16
mov
pop
and
mov
inc
pop
int3
fadds
lods
cmp
hlt
ljmp
mov
cmp
xchg
cs
add
dec
xchg
imul
rcll
fwait
cmp
daa
fstl
mov
and
aas
mov
scas
jbe
movsb
jo
lcall
jne
flds
rorl
lock
aaa
push
sub
add
popa
mov
mov
cmpsl
lahf
dec
dec
jmp
and
jnp
xor
sbb
jp
andl
jg
negb
inc
mov
ret
mov
adc
mov
insl
lcall
xchg
mov
push
outsb
jp
dec
lret
xchg
fstps
je
pop
call
loopne
movsb
xchg
loop
add
aaa
jmp
popl
push
jno
or
inc
cmp
push
in
pop
cmp
loopne
adc
mov
fsubr
insb
ja
insb
xchg
mov
add
stc
xchg
outsl
pop
push
xor
adc
ret
xorb
dec
adc
scas
fistl
mov
idivb
iret
dec
mov
and
test
stos
ja
addr16
out
mov
je
add
std
push
sbb
jg
xlat
repnz
lods
shll
jecxz
pop
pop
shll
cmc
mov
push
shll
call
xchg
enter
mov
and
xchg
mov
mov
jbe
ret
pushf
jb
ja
adc
inc
lods
mov
test
mov
sbb
idivb
lcall
xchg
mov
imul
cmp
push
icebp
push
mov
js
enter
cmp
xchg
repz
out
dec
test
sbb
ja
data16
outsl
les
or
lock
cmp
pop
mov
aad
inc
add
push
sub
js
rorb
dec
nop
data16
gs
aam
and
mov
mov
popf
clc
cmpsl
aad
sub
test
push
insb
ss
mov
out
dec
xchg
mov
mov
cmc
sub
mov
push
jae
fwait
xor
pop
sbb
fsubr
sahf
ss
cmp
je
stos
sarb
dec
les
pop
xchg
add
adc
or
pop
mov
sub
sbb
mov
sub
ret
and
mov
xlat
jg
dec
repz
insb
mov
xchg
ja
xor
mov
fs
sarl
mov
add
mov
jge
leave
das
mov
mov
add
xchg
pop
jae
push
loopne
and
dec
icebp
push
ret
pop
mov
cmp
mov
lds
sub
shlb
leave
cmpsl
pop
subb
jmp
orb
cmp
jno
ljmp
mov
dec
mov
lods
rcrb
call
orb
cmp
mov
mov
inc
or
mov
loop
pushl
jae
frndint
sub
cwtl
dec
test
imul
and
inc
cmp
test
icebp
test
shrl
test
mov
shll
push
scas
fwait
ljmp
xchg
mov
or
hlt
jecxz
mov
loopne
jno
push
xchg
loope
in
mov
addr16
icebp
lret
inc
mov
das
add
adc
dec
pop
xchg
dec
inc
lods
mov
jle
sub
fldt
in
jecxz
lods
pusha
push
movsb
decl
inc
push
jmp
mov
stos
in
mov
push
shll
sub
call
push
mov
mov
mov
pop
sub
fstpt
in
mov
mov
icebp
fistps
jae
pop
shll
insb
std
gs
aam
mov
leave
sbb
dec
fwait
push
xchg
pop
aad
and
mov
dec
jbe
sub
jo
mov
push
or
xchg
jl
test
or
aaa
jbe
xor
inc
lahf
dec
or
sbb
fcmovbe
xchg
mov
fdivrs
sbb
push
out
sbb
xor
les
mov
pop
push
test
sub
cmp
pop
out
pusha
xchg
xchg
lret
das
mov
pop
icebp
jge
push
push
dec
xor
jo
xchg
std
xchg
dec
das
aad
fwait
test
jl
insl
sti
mov
sub
cmp
fs
mov
sbb
or
ret
sub
outsl
or
sbbl
out
push
int
lods
push
mov
xchg
or
pop
mov
jbe
stos
pop
jp
cmp
sub
pop
scas
das
jbe
mov
mov
lds
imul
scas
imull
outsb
push
arpl
push
dec
jmp
stos
rol
test
lock
dec
pop
call
outsb
and
pop
std
rorb
fildl
out
mov
xor
jns
push
sarb
jge
mov
aam
xlat
leave
fcom
cmpb
cmpl
lea
jns
jecxz
shll
mov
cmp
scas
cwtl
icebp
or
inc
jg
add
imul
mov
lock
jmp
ljmp
loope
rcll
jl
divb
js
push
adc
add
movsl
mov
cmp
nop
xor
insl
sub
cmp
mov
bound
or
or
decl
mov
xchg
out
fwait
pushf
addr16
xor
pop
or
inc
gs
sub
pop
call
push
ja
in
dec
out
cmp
out
adc
xacquire
out
leave
clc
ss
cmc
jmp
dec
xchg
insb
xor
push
sub
xlat
shll
lret
icebp
xchg
in
test
and
pop
push
inc
sub
jl
lret
int3
xchg
int
ja
ficomps
cmc
xchg
sub
outsl
mov
dec
dec
jle
push
pop
mov
arpl
dec
mov
push
call
cli
lock
ret
lcall
subb
fdivrs
adc
mov
jnp
daa
js
test
cmpsb
push
add
push
xchg
icebp
inc
sbbl
clc
mov
and
add
das
xchg
in
or
ret
mov
jbe
js
gs
adc
ficomps
loope
dec
cmp
xchg
loop
inc
pop
mov
lods
imul
adc
lds
xor
lea
mov
scas
or
icebp
lock
dec
jns
dec
pop
out
leave
loope
add
movsl
pop
sahf
push
jno
inc
adc
push
xchg
jge
push
mov
cmpsb
lret
mov
xor
cmc
cltd
and
hlt
insl
or
xor
mov
lcall
jbe
inc
test
xchg
inc
mov
bound
jp
repz
mov
dec
shrb
mov
or
daa
fcmovb
xor
leave
sbb
or
add
shr
fcoml
jmp
outsl
int3
mov
movsl
aam
movsl
test
fistl
loope
repnz
mov
mov
das
mov
insl
jge
mov
xchg
add
les
imul
sub
push
cli
std
les
sbb
lods
dec
adc
insl
rolb
or
int3
shl
push
xor
or
sbb
js
dec
in
movsl
cmc
jbe
es
pusha
jge
loope
divl
pop
lahf
shrl
cltd
lods
aaa
imul
mov
fdivrs
mov
call
mov
xor
clc
and
push
test
mov
stos
sub
das
mov
mov
dec
cmp
fucomp
fsubp
in
orl
test
jns
rcll
xor
and
xchg
cmpsl
xchg
hlt
scas
mov
mov
stc
rclb
jae
mov
push
xor
dec
ret
pop
jge
jle
sbb
pop
test
mov
loop
lret
mov
inc
add
sub
mov
movsl
shrb
out
inc
ss
mov
sub
fbstp
loopne
movsl
xchg
jno
pusha
pop
mov
sub
mov
push
and
test
jmp
sbb
pop
xlat
int3
mov
pop
lods
inc
cs
in
fs
imul
jnp
je
or
adc
mov
xlat
lods
xchg
add
gs
add
mov
lods
out
xchg
pusha
in
addl
mov
lret
or
xlat
shrl
fwait
jge
pop
fs
out
cmpb
clc
mov
leave
or
sub
mov
xor
push
stos
js
mov
and
push
ljmp
and
fcompl
lcall
sahf
scas
out
in
addb
insb
call
fwait
insb
xor
xchg
xchg
mov
aaa
sub
xchg
sbb
pusha
es
call
push
fldcw
xchg
rcrl
mov
lahf
popf
cltd
loop
sub
rcrl
dec
mov
pop
jl
cmp
imul
sbbb
js
sti
sub
sahf
lahf
mov
imul
daa
jmp
xchg
jo
cmp
and
imul
jns
xchg
pop
mov
testb
in
mov
dec
sahf
rorl
lret
push
nop
nop
rcrb
add
and
mov
outsb
in
add
cltd
ret
insl
inc
jo
outsl
pop
repnz
xchg
sub
ljmp
daa
outsl
pop
jo
in
daa
sbb
and
aas
insl
push
push
cmp
cmpl
xor
cwtl
xor
pop
sbb
les
sarl
push
mov
jae
add
adc
adc
fstl
in
lds
je
mov
mov
call
int3
push
pop
cmp
lea
dec
dec
int
dec
mov
pop
add
mov
xor
add
add
xchg
jbe
aad
pop
in
sbb
sub
or
xchg
aam
cmc
inc
clc
popf
push
hlt
dec
xchg
icebp
ss
jno
mov
xchg
jns
out
cld
push
mov
mov
decl
subb
xchg
sbb
fistpl
sbb
icebp
dec
dec
adc
xor
mov
sub
cld
dec
into
fists
jecxz
and
pop
sahf
out
push
adc
cmpl
mov
push
xor
outsl
and
lds
out
lods
jns
scas
bound
push
ja
mov
xchg
sbb
scas
jns
xchg
pop
push
push
inc
fnsave
mov
movsl
std
outsl
xorl
mov
xlat
clc
stos
adc
mov
sub
or
mov
fldenv
dec
add
push
int
test
cmpsb
loop
pop
lds
jmp
into
sbb
jbe
lret
pop
faddp
cmp
mov
push
leave
add
sub
aam
insb
adcb
sub
mov
xchg
jl
mov
jae
adc
pusha
daa
pop
loopne
sub
test
fbstp
sbb
jmp
lahf
mov
push
loop
enter
mov
pop
add
and
xor
pop
scas
mov
bound
add
inc
add
imul
pop
xchg
add
jecxz
xchg
outsb
cmp
mov
int
mov
jb
or
sbb
fistpl
mov
ss
mov
movsl
stc
fucom
and
fs
jno
xor
cltd
dec
pushf
out
in
imul
js
es
inc
cmp
cltd
lods
mov
enter
in
push
sahf
mov
xchg
orl
test
cmc
stc
push
cmp
jle
add
mov
xor
test
pop
insb
cmc
add
sbb
ficoml
in
pushf
rcll
pusha
aam
lock
lock
popa
jg
mov
pop
enter
imul
inc
mov
sbb
inc
sbb
sub
add
mov
jle
mov
inc
mov
mov
dec
sti
aad
mov
lods
inc
out
pop
xchg
call
cld
mov
fcmove
movsl
pushf
lock
dec
mov
mov
enter
rcr
sahf
fcomip
jno
rorl
inc
pushl
pop
scas
and
push
inc
or
cmpsl
in
cwtl
movsl
stos
mov
dec
lods
and
mov
insb
adc
gs
enter
pop
inc
idivb
jae
sarl
xchg
sub
mov
test
cmpsl
outsb
js
clc
ret
lcall
divl
mov
lahf
mov
mov
adc
aad
mov
gs
sub
inc
or
push
std
cld
or
add
add
mov
ds
loopne
es
fmuls
xchg
sbb
in
mov
sarl
jae
out
or
andb
push
mov
lods
dec
lret
out
enter
call
gs
aad
mov
push
or
and
fmull
js
dec
mov
in
hlt
push
dec
mov
icebp
hlt
push
pop
outsl
xchg
adc
push
and
movsb
mov
sub
push
ja
mov
ljmp
jo
sub
pop
cwtl
jl
into
xchg
stc
sub
xchg
sbb
push
mov
pop
pop
inc
repnz
inc
mov
fsub
push
in
inc
dec
add
mulb
jmp
mov
cmpsl
xor
xlat
lock
sub
popa
pop
ljmp
jp
mov
adc
mov
and
jmp
ljmp
out
notb
dec
sbb
mov
sahf
push
fmuls
mov
xchg
or
pop
add
lods
fists
cs
mov
pusha
out
outsb
fistps
and
es
in
dec
pop
push
jg
jne
dec
sarb
push
aas
lret
packssdw
add
sub
in
mov
inc
cmp
out
andb
das
push
je
fisubl
leave
es
test
sbb
and
mov
pop
push
mov
xchg
xchg
mull
sub
pop
aaa
dec
lret
subl
adc
imul
je
lret
arpl
test
inc
xchg
jbe
ljmp
xchg
jmp
adc
mov
inc
mov
mov
cs
pushf
push
sub
xchg
cmp
mov
pusha
inc
outsl
in
or
xchg
mov
imul
sub
sub
xchg
outsb
inc
sbb
cmpsb
mov
outsb
jne
push
test
pop
int
ja
adc
loope
push
or
dec
andl
incl
clc
xor
es
add
lods
pop
loop
push
imul
shr
lods
rclb
adc
cmp
mov
sar
pop
inc
xchg
mov
cld
or
test
lods
mov
icebp
imul
and
pop
call
push
jmp
mov
aas
into
jo
sub
out
fwait
lahf
pop
aad
jl
dec
push
divl
cmp
sub
xor
fcoms
stos
lret
jg
js
jb
xor
dec
xchg
sub
lods
jp
push
push
jnp
lock
sub
add
sbb
fs
icebp
sbbl
push
fnstsw
mov
dec
int
xor
ret
dec
fxch
and
loope
pop
je
jle
into
pushf
push
fiadds
mov
and
mov
mov
jp
mov
hlt
sub
sar
lods
jp
cmp
jo
dec
test
and
mov
xchg
xchg
push
nop
outsb
mov
je
lods
add
das
in
dec
mov
es
jb
jp
cmc
mov
sbb
and
jp
popa
repz
bound
dec
xor
movsb
sbb
jecxz
jns
in
push
out
sub
dec
jecxz,pn
nop
test
ret
sub
lds
add
jnp
pop
sub
sti
jmp
jns
lcall
pop
mov
jne
jae
dec
cld
add
filds
ljmp
mov
and
xor
cli
js
inc
xorb
icebp
xor
movsb
mov
adc
add
in
xchg
pushw
inc
in
pusha
push
pop
gs
jnp
shlb
lcall
pop
in
sarl
adc
mov
pushf
mov
sbb
lods
ret
cmp
dec
ss
test
jl
xchg
mov
xchg
lock
popf
popf
pop
sub
pop
xor
addb
jne
or
cmc
sbb
aas
mov
inc
mov
roll
insb
shll
sahf
or
clc
movl
out
mov
cmp
sahf
or
mov
insl
inc
pushf
cmpsl
out
push
push
cmp
jl
das
pop
in
dec
jno
cmp
inc
xchg
lea
out
les
or
pop
jne
test
and
jmp
insb
fidivrs
aad
cmp
mov
mov
in
xchg
cs
les
jb
mov
and
and
sti
repz
inc
in
jle
call
shrl
cli
es
test
xchg
or
or
or
cmpsb
push
cmpl
and
sbb
arpl
cwtl
test
adc
test
jge
inc
ret
pop
push
add
pop
inc
xchg
inc
pusha
ds
out
repz
jg
mov
mov
ss
enter
mov
xlat
fs
rcll
mov
in
out
loop
loope
mov
xor
mulb
xor
int
shl
inc
adc
mov
mov
sahf
xchg
jno
lret
pusha
pop
mov
jmp
or
cmp
ds
xor
imul
sbb
ror
jne
out
rorl
push
inc
mov
cmp
mov
sub
jg
inc
dec
mov
das
lods
addl
inc
pop
sbb
ficoms
scas
fidivrl
mov
mov
dec
fwait
mov
xchg
notb
lock
jle
xchg
lock
push
std
lahf
shlb
xchg
movsb
xor
xor
and
scas
dec
xchg
mov
test
inc
out
xor
add
mov
push
mov
pop
in
xor
in
jns
divl
adc
and
fptan
int
pop
and
pop
fcomip
mov
fstpt
es
fsubrl
sub
or
cmp
xchg
sbb
push
cmp
add
mov
movsl
xchg
flds
sub
aam
in
mov
cli
mov
xor
lahf
loope
cmp
les
out
pop
xchg
sahf
dec
sbb
mov
js
shrb
pop
pop
sbb
push
push
and
int
mov
lock
outsl
mov
mov
sbb
dec
jmp
sbb
lea
shll
dec
adc
sub
push
mov
sbb
aad
push
xor
xor
jno
inc
jbe,pn
jbe
xchg
repz
xlat
lahf
or
inc
jo
lahf
mov
sbb
push
dec
bound
pop
dec
cmpsl
fstpt
scas
flds
pop
pop
adc
cmp
push
mov
scas
imul
cwtl
sub
popa
pop
adc
imul
iret
out
rcrb
inc
inc
xor
push
inc
mov
sti
dec
sub
pop
jnp
mov
mov
mov
fcomps
cmp
inc
cwtl
inc
jecxz
xlat
mov
mov
insl
je
imul
fsubl
and
ljmp
and
push
sub
call
sub
popa
lahf
icebp
jbe
in
mul
dec
push
cmp
mov
and
out
add
pushf
fiaddl
cmp
pop
mov
push
jns
pop
inc
in
sub
adc
divl
sbb
out
or
push
scas
mov
xchg
push
ja
push
daa
push
and
clc
shlb
dec
inc
jns
inc
cmp
add
fidivl
test
popa
int
loopne
test
fcmovnb
rolb
insl
push
dec
dec
jecxz
cmc
lea
and
xchg
pop
push
adc
loopne
push
mov
mov
push
pop
xor
and
inc
loop
rcrl
insl
xlat
mov
add
rclb
es
cld
out
mov
jp
push
jecxz
in
fsub
jp
cld
sbb
lea
scas
in
imul
push
sti
mov
sti
icebp
adc
xchg
inc
cmp
push
aad
jae
lods
push
mov
ljmp
je
mov
dec
movb
jg
leave
sbb
xor
jae
dec
lea
mov
jl
push
lcall
repz
mov
ret
shr
fdivrl
test
and
sbb
in
pop
cmp
std
xchg
jmp
sti
jp
xor
push
negl
adc
cmp
sbb
mov
xchg
aad
jmp
dec
cmp
in
sub
push
or
aaa
int
jo
lcall
addr16
add
push
jbe
ror
mov
lds
int
and
nop
aam
xchg
adc
out
push
dec
pop
pop
lock
dec
in
sbb
xor
push
sbb
mov
js
lods
ss
push
jnp
test
cmpl
pop
inc
roll
cltd
sub
adc
cli
loop
xchg
or
aad
movsb
add
or
int
es
xor
lret
inc
jecxz
pop
repnz
cmp
inc
mull
mov
jno
pop
jle
insb
test
dec
fisubl
ret
call
cmp
push
pop
movsb
ds
jnp
fidivrl
cwtl
pushf
xchg
dec
mov
sarb
ret
and
in
bound
cld
pop
pop
jnp
imul
mov
or
mov
push
test
cmp
and
sbb
stos
ds
sbbb
ds
int3
or
adc
int3
xchg
xorl
prefetch
rcl
cmp
fwait
or
gs
xor
fwait
nop
cwtl
lock
xchg
inc
xor
xor
insl
sub
sub
mov
mov
jae
jecxz
lock
adc
fsts
fcompl
mov
lcall
mov
add
sbb
out
sub
xchg
aad
mov
aaa
sub
xor
jp
rorb
inc
stc
sbbb
inc
ja
imul
jnp
loopne
dec
mov
pop
fwait
pop
jge
push
mov
insl
jmp
mov
outsb
call
test
rolb
xchg
add
jle
xor
enter
test
lret
mov
test
test
push
stos
jb
mov
dec
xchg
dec
jnp
mov
enter
pop
pop
ret
dec
imul
jp
ds
push
faddl
push
cmpsb
shlb
aad
or
mov
aad
jge
sarb
xchg
sub
sub
and
sub
mov
aaa
add
sbb
popf
sbb
js
ret
es
lea
sub
js
movsl
push
add
push
mov
add
sbb
stos
gs
mov
mov
inc
js
imul
xor
imul
adcb
xchg
adc
imul
jo
xlat
insb
pop
cmp
cmp
rcr
sahf
push
cmpsb
mov
fwait
jecxz
js
sahf
adc
fsubrl
or
rol
jl
shr
enter
stc
ret
stos
fimuls
jne
or
nop
jl
call
in
push
add
iret
outsb
pop
addr16
jmp
xchg
mov
dec
cli
jl
xor
lods
xchg
les
push
push
ficompl
sub
mov
push
push
es
lcall
movsb
adc
dec
bnd
push
cmc
mov
and
das
cmc
pop
xchg
imul
mov
je
pop
xchg
je
xor
sahf
sbb
fwait
enter
ret
daa
jnp
pop
aas
jge
mov
push
mov
dec
ret
mov
add
movsb
repz
adc
xchg
test
lret
mov
fisttpll
mov
mov
adc
jl
and
xchg
clc
pop
arpl
or
sbb
lahf
fcmovu
xor
stos
cmpl
pop
dec
jp
dec
pop
pop
cmp
mov
ret
lcall
lret
pusha
and
std
mov
mov
ret
push
out
cmp
ret
or
and
fsubrl
xlat
aaa
test
jns
inc
or
mov
push
cmpsl
adc
sbb
dec
xchg
sti
mov
fld
ljmp
and
mov
movl
arpl
in
ljmp
popf
outsl
cmp
sub
and
xchg
mov
pop
and
adc
dec
pop
ss
jg
pusha
pop
jbe
sbb
mov
mov
push
xor
call
jb
aas
lea
mov
mov
pop
jnp
jb
loope
aam
in
mov
jl
inc
inc
push
andl
push
sbb
sti
arpl
insb
fwait
int3
test
mov
add
push
xchg
lcall
subl
and
lret
mov
xchg
push
jnp
dec
cwtl
outsl
push
and
jmp
daa
shlb
xlat
push
jb
roll
incl
pop
int3
push
mov
icebp
pop
clc
lret
in
jge
stos
mov
push
mov
inc
aad
subl
inc
cmp
and
loop
arpl
and
int3
xchg
rcll
pop
adc
mov
cmp
and
lahf
mov
jle
pop
and
cwtl
push
mov
mov
mov
pop
jo
ror
xlat
adc
adc
stc
test
fnsave
aad
jp
insb
mov
shld
je
data16
inc
daa
pop
push
push
add
jle
pop
sahf
rolb
xor
inc
cltd
push
sarb
lcall
lock
push
xor
nop
scas
dec
adcl
xlat
adc
jo
pop
mov
cmpsl
sbb
dec
orl
mov
cs
jg
test
adc
pushf
xlat
popa
loopne
rcrl
jo
mov
js,pn
out
into
jo
mov
jnp
xchg
add
je
repz
xchg
mov
addr16
in
loop
movb
stc
mov
outsb
and
fwait
jns
cmp
xor
and
sub
xchg
andb
cmpsl
dec
push
dec
xchg
xchg
movsl
xchg
stos
push
pop
push
cmp
jo
mov
movsl
cmpsb
adc
xor
aaa
cmp
mov
lahf
xlat
jnp
xchg
es
mov
sbb
xor
ja
xor
sub
add
mov
and
leave
ror
outsl
das
cmp
sub
adc
les
jge
mov
sub
jg
shll
pop
mov
outsb
stc
scas
sub
cs
int
ret
aad
out
lock
xor
and
pop
out
lahf
cmpsb
add
data16
fidivl
pushf
dec
adc
or
and
sub
in
mov
xor
jns
xor
inc
cltd
fldenv
mov
jns
mov
popf
ds
xchg
add
mov
arpl
testl
fs
iret
mov
sbb
and
push
pop
mov
and
imul
insb
cmp
pop
daa
ljmp
jge
out
lret
cli
adcl
or
adc
dec
inc
jmp
push
cmp
repnz
and
or
lret
sub
mov
dec
gs
mov
fdivrl
push
lods
or
push
insl
popf
jecxz
repnz
lock
xchg
stc
cltd
ja
pop
push
pop
std
and
mov
in
push
loope
inc
pop
leave
mov
jnp
xchg
test
stos
xor
mov
cld
stc
cld
sbb
cwtl
cmp
pop
jbe
in
push
ret
in
push
mov
into
adc
dec
out
sub
lea
loopne
in
lcall
int
adcb
push
fimull
and
out
cmc
add
xchg
mov
mov
test
leave
or
das
xlat
mov
stos
sub
and
xor
pop
mov
insb
jge
mov
fwait
int
push
ds
sbb
sub
push
test
gs
adc
pop
push
xor
vxorps
lods
lods
jmp
out
dec
sbb
push
pop
divl
fcompl
in
mov
popa
jecxz
stos
inc
pop
mov
mov
es
lock
inc
lret
dec
sub
cld
dec
int
ror
push
mov
stc
movsb
stc
and
sub
mov
pop
jle
xchg
pusha
bound
or
cmp
or
adc
ss
outsl
arpl
xor
push
lea
enter
dec
gs
and
cmp
hlt
xchg
gs
push
xor
and
sub
cmc
cmp
repz
or
push
cmp
mov
dec
or
addr16
std
or
lret
jbe
xor
cmp
adc
pusha
pop
push
clc
push
xchg
scas
xchg
cmp
cmc
jle
pop
fxch
bound
mov
sbb
cmpb
sahf
jmp
adc
clc
hlt
xchg
xchg
adc
sub
mov
sub
sub
out
in
or
roll
and
inc
shll
in
imul
inc
outsl
into
sub
xchg
sub
jmp
cmp
cmp
js
xchg
and
std
and
dec
mov
mov
ja
inc
lods
mov
adc
xchg
add
out
xchg
shrb
dec
adc
xor
fsts
dec
subl
push
jno
sbb
or
mov
fsubl
xor
add
push
add
cmp
mov
xchg
lahf
and
pop
movsl
xchg
shll
fisubrs
sub
or
stos
xor
adcl
pop
xor
je
xchg
mov
jg
cmpl
push
les
adc
fisttpll
cmc
lret
ja
out
cmpsl
push
or
cmp
add
mov
bswap
shl
inc
jo
or
cmp
inc
int
fcmovnb
cld
sbb
cmpsb
jle
jb
push
add
push
out
cltd
mov
insb
outsl
adc
pop
daa
sub
int
sub
push
xor
push
sbb
fs
ret
pop
jl
fwait
and
mov
addl
jo
and
sbb
sbb
fstpl
pop
sbb
lret
jo
arpl
mov
mov
adc
fnstsw
fdiv
lds
lock
pop
fdivrp
out
xor
push
loope
dec
dec
stos
in
mov
push
addr16
enter
mov
lods
jo
notb
inc
add
in
gs
aad
jbe
pop
mov
pop
or
adc
test
loope
jns
rcrb
sub
test
popa
repz
cmp
scas
scas
mov
pop
test
es
sarl
orl
les
pop
aad
add
lods
fistl
std
inc
mov
out
ja
jle
jge
stos
jbe
aam
xchg
sbb
ret
adc
lock
fs
cmp
mov
aas
lock
loop
and
cmp
adc
fnsave
push
mov
xor
test
lret
mov
xchg
in
xor
lods
or
fnstcw
mov
cmp
pop
cmp
jo
rcrl
inc
push
pop
lcall
inc
cmp
lods
jg
popf
add
cs
flds
mov
mov
mov
add
push
aad
or
adc
dec
decl
stos
pop
movsl
cmp
lock
test
les
gs
in
inc
push
ljmp
out
lsl
cli
fwait
lcall
dec
mov
xlat
and
dec
xor
in
mov
roll
add
or
test
das
mov
dec
data16
xchg
xor
loopne
adc
int3
lods
jmp
rorl
sub
sub
nop
adc
adc
repnz
popa
or
mov
mov
jb
cli
push
js
orb
call
aaa
dec
jg
pop
es
lcall
or
fs
fisubrs
int3
pop
push
cltd
mov
notl
aaa
popa
dec
push
shll
orl
movsb
push
daa
and
pop
jae
leave
popa
pop
cmpb
push
cmpsl
int3
cmp
dec
add
adc
out
xchg
sahf
xor
in
ss
adc
loopne
sbb
mov
les
jae
dec
shrb
jnp
jmp
mov
rcll
cmp
or
out
add
mov
cmc
or
icebp
std
cmp
add
mov
inc
in
xor
das
pusha
xchg
lods
pop
lcall
push
mov
mov
sbb
or
mov
dec
fwait
pop
jmp
pop
fbld
jno
scas
xchg
imul
mov
rcll
or
hlt
test
fnstenv
fsubrs
ja
xchg
or
cmpb
push
and
cmc
and
pop
xor
dec
ss
or
dec
adc
pop
les
add
and
hlt
push
dec
cmp
cmp
std
adc
dec
stos
pushl
cli
out
jbe
mov
aaa
pop
out
pop
jge
imul
sub
dec
adcb
call
dec
add
xchg
pusha
jp
ja
push
aaa
sub
aaa
mov
or
pop
hlt
rcrl
outsb
sbbl
sahf
xchg
popa
in
popf
nop
ds
aas
imul
es
cmpsb
sub
mov
adc
push
popf
inc
mov
loopne
mov
mov
push
inc
fstpt
outsb
sub
add
push
pusha
into
loopne
sub
out
add
lret
cmp
lods
sbb
rcl
cld
adc
jle
push
cli
lods
testb
sub
sbb
das
rorb
pop
mov
fldenv
push
pop
cwtl
mov
call
pop
push
mov
sbb
shrl
fisubs
xchg
ja
pop
jl
rclb
mov
sub
or
xchg
xor
push
mov
stos
jnp
lods
push
push
pop
jnp
int3
sti
imull
or
mov
jle
pop
push
jne
sbb
adc
xor
pop
aas
sbb
jnp
pop
insl
push
pusha
js
call
popa
repnz
pusha
mov
sbb
mov
les
arpl
sbb
js
sub
enter
test
and
and
insb
inc
push
clc
push
insl
hlt
fdivr
xchg
scas
orb
adc
mov
leave
push
test
mov
push
push
fidivrl
cmp
dec
jns
jmp
out
das
and
shll
dec
into
imul
xor
mov
add
cmp
shrl
mov
fdivrl
enter
mov
daa
aad
jg
cli
xchg
adc
xlat
mov
xchg
mov
pushf
mov
out
or
sbb
dec
imul
push
mov
inc
jle
xor
jo
push
adc
pop
or
das
inc
inc
enter
add
cmpsb
adc
xchg
or
loopne
repz
mov
adc
adc
je
into
xabort
jge
inc
lea
test
or
or
stos
cltd
pop
jo
add
ror
xor
jb
inc
aad
nop
out
xor
jecxz
mov
xchg
dec
and
leave
pop
jle
scas
mov
loopne
mov
pop
xchg
and
fsts
sti
xlat
mov
fisubrs
scas
pop
repz
test
insb
fcomp
cltd
inc
iret
mov
iret
outsl
lret
mov
inc
ja
ljmp
xlat
or
mov
rcl
lahf
shll
xor
fwait
add
sub
ret
xchg
sub
shrl
out
xlat
seta
pop
roll
sbb
jo
decl
fsts
sub
cmp
shrb
or
in
je
cwtl
jns
icebp
test
lahf
sub
leave
les
adc
cmp
inc
mov
jmp
lods
mov
adc
cmp
jns
mov
out
test
mov
dec
insb
in
adc
dec
popf
mov
add
stc
mov
mov
xor
inc
sub
adc
dec
push
xchg
loope
mov
lds
sub
shll
sbb
push
ret
leave
lods
dec
inc
aad
mov
repz
in
sti
mov
pop
loopne
add
inc
test
jns
bound
rcll
iret
xchg
dec
pop
stos
test
pop
mov
inc
mov
jne
movb
mov
inc
out
fwait
xor
insb
dec
and
jbe
xchg
adc
xor
inc
mov
mov
xchg
xchg
fpatan
mov
jbe
aad
jl
sub
mov
negb
cmp
cmpl
or
xlat
cmp
mov
hlt
ss
dec
add
movsb
lret
test
mov
scas
xchg
jae
rcrl
lret
push
lahf
inc
ss
cmp
lret
shl
sub
mov
push
push
pushf
je
test
sbbb
or
leave
test
jp
in
fwait
int
outsl
scas
fbld
pop
cmpsb
adc
mov
pop
xor
add
push
loopne
mov
xchg
loop
jnp
lods
fdivrs
xchg
mov
cli
es
rol
sub
stos
jae
add
and
cmc
adc
pusha
nop
leave
push
mov
adc
or
fwait
lea
aaa
push
subb
xchg
sbb
xchg
add
in
lahf
xchg
mov
and
fildll
mov
dec
adc
lods
sbb
sbb
push
in
lcall
nop
daa
cmp
adc
call
inc
ja
push
scas
dec
popa
mov
pop
lahf
loope
sbbl
mov
push
inc
mov
scas
pop
cmc
ret
xor
lret
dec
push
in
jb
push
add
jnp
push
sbb
std
or
mov
test
hlt
hlt
push
push
outsl
in
pushf
outsb
fs
aas
pushf
icebp
add
insb
push
in
es
cmp
mov
call
xor
loop
push
push
in
mov
rorl
mov
jb
adc
sbbb
adc
sbbl
mov
jecxz
add
fnsave
xlat
push
stos
xlat
es
ss
cmpsb
dec
cwtl
orb
pop
mov
andb
push
xor
mov
clc
icebp
xchg
xchg
mov
mov
fistps
xchg
and
and
test
sbb
mov
das
into
xchg
sti
adc
mov
push
xchg
sbb
xchg
push
pcmpgtw
dec
mov
jecxz
and
rolb
rcrl
sbb
rorl
mov
cmp
add
sub
ds
push
inc
loop
pop
sar
out
sub
inc
fcompl
mov
popa
fidivrl
mov
leave
mov
mov
test
stc
jne
xor
mov
cs
adc
daa
jmp
push
mov
inc
jmp
cltd
pop
arpl
adc
sub
xor
or
push
jle
dec
adc
jle
mov
pop
sbb
fldt
stc
aaa
pusha
jbe
in
inc
pop
xor
out
add
or
test
xchg
mov
loope
mov
cmp
jne
mov
push
orl
in
scas
cmp
pop
push
loop
or
in
xchg
imul
js
sarb
jae
cli
dec
rorb
cmp
mov
push
loopne
pop
out
out
insb
ja
dec
aad
ret
xchg
cmp
bnd
rcrb
jmp
jne
pusha
dec
adc
out
push
mov
rol
out
push
xor
cld
sbb
push
inc
jmp
and
xchg
adc
cld
lahf
and
xchg
jne
pop
test
fldl2t
xchg
lret
sub
enter
dec
in
xchg
mov
in
dec
jne
loope
je
in
adc
cmpsl
push
enter
xor
xor
cld
inc
pushl
and
scas
out
cmpsb
sbb
test
imul
add
push
pushf
pop
ret
lods
jb
mov
mov
insl
fcoml
outsl
dec
xchg
push
mov
mov
ja
xchg
add
repz
movsb
inc
mov
clc
inc
push
imul
stos
imul
jnp
jns
mov
sahf
jg
xchg
arpl
sub
loop
xchg
lods
push
xor
adc
movsb
mov
jg
daa
pop
jns
pop
cmp
enter
dec
push
sub
jecxz
mov
jge
shrb
jp
in
push
sbb
inc
stc
dec
insb
cmp
sbb
inc
dec
aam
orb
in
dec
add
iret
xor
lods
ljmp
pop
not
mov
jae
ss
mov
cmp
and
mov
stos
dec
mov
repnz
loope
jae
out
stc
or
mov
add
test
xchg
jmp
adc
push
ljmp
push
jg
pop
fimuls
add
push
inc
outsb
jbe
arpl
cmp
push
shrl
aaa
ljmp
pop
sbbb
inc
xchg
ret
sbb
sbbb
or
mov
in
cmova
dec
std
out
pop
mov
inc
dec
adc
push
xchg
mov
stc
jns
sub
pop
sub
sahf
push
out
movsl
repz
std
pop
adc
mov
pop
cmpsl
jae
test
mov
cmpl
sarb
pop
mov
popa
cmpsl
ja
or
mov
mov
divb
mov
mov
int
ret
push
shrb
lret
shll
jnp
and
xor
mov
cltd
xor
das
push
cmpsl
aaa
mov
push
mov
movsl
les
out
lds
call
sarl
dec
rorb
mov
mov
test
cmp
push
out
sbb
dec
add
or
add
jg
dec
inc
aas
push
pop
push
imul
xchg
dec
lret
dec
pusha
inc
in
adc
fcoml
js
arpl
cmpsl
stos
fsubrl
aad
add
sbb
fistl
pusha
push
andl
push
ljmp
dec
daa
jg
subl
push
cmp
enter
mov
push
loop
jb
cmp
pop
je
clc
or
das
pop
push
popa
sub
mov
lock
dec
sub
out
adc
mov
sub
outsb
adc
insl
mov
ja
imulb
xor
insl
bound
jge
cwtl
mov
cld
stos
xchg
cli
dec
add
fcomp
adc
subb
imul
xor
neg
mov
pusha
subps
mov
mov
out
xor
test
repz
and
dec
loope
sbb
aam
test
xor
or
lret
stos
jae
xchg
and
cmpsl
pop
mov
clc
jge
pop
mov
xchg
aas
data16
nop
inc
lock
mov
jbe
mov
in
and
jae
gs
jae
sbb
mov
or
xlat
sahf
add
and
arpl
ret
ja
xor
add
jnp
pop
lret
std
lahf
xchg
pop
scas
pop
push
fisubrs
data16
int
notl
mov
pop
out
sti
out
jle
mov
cmp
add
or
inc
jb
add
pop
mov
aaa
jle
das
mov
enter
repnz
sub
pop
ret
dec
les
mov
cmpsl
dec
pop
push
orps
jnp
jno
ljmp
insl
mov
iret
xchg
pop
xlat
xor
orl
mov
inc
fs
pop
in
dec
and
push
and
mov
mov
int3
or
jmp
ss
sahf
stos
stc
sbbl
dec
lcall
xor
data16
test
sbb
mov
mov
dec
jge
sub
pop
inc
jg
mov
stos
inc
xchg
push
cwtl
mov
test
shlb
imul
data16
cmc
lret
test
xchg
stos
test
dec
xlat
pop
lods
pop
ret
into
lods
and
lods
fidivrs
mov
add
or
bound
xor
imul
jb
lret
dec
ljmp
push
jmp
enter
bound
push
mov
fwait
inc
dec
add
jae
repnz
cmp
jae
int
rorl
cli
adc
int
push
daa
mov
roll
stc
nop
imul
xchg
push
std
adc
inc
dec
cmpb
outsl
subb
push
addl
mov
sbb
je
sub
mov
push
xchg
std
push
clc
pop
lods
mov
out
pop
pop
mov
dec
repz
cltd
or
les
dec
jecxz
lcall
sub
inc
aas
ds
cld
popf
and
mov
or
push
pop
add
scas
pop
stos
in
dec
push
push
idivb
dec
addr16
sub
out
dec
mov
pop
lods
lahf
addl
adc
mov
out
mov
jle
ljmp
out
out
mov
and
lcall
icebp
aaa
inc
out
xor
mov
call
aad
and
lods
jmp
enter
mov
repnz
nop
aam
jp
sub
mov
cwtl
xchg
test
inc
ljmp
das
jmp
adc
xor
leave
or
test
mov
into
xchg
lret
addr16
fsubrl
mov
xlat
int3
xchg
dec
inc
fisubl
mov
cmp
pop
sub
mov
xchg
xchg
ret
xchg
insl
pop
sub
ljmp
sbb
jge
or
mov
cmp
xchg
pop
pop
call
pop
sub
and
out
test
cld
in
xchg
xchg
data16
pushf
cmp
shrl
mov
das
jmp
lods
mov
push
xlat
mov
outsb
leave
les
out
jg
adc
sbb
jge
je
lods
mov
mov
xchg
pop
mov
pop
push
xchg
pop
mov
inc
pop
mov
push
lods
outsb
sbb
xchg
and
insb
das
enter
rcr
inc
popa
lods
shrl
xor
aas
repz
and
jl
aaa
inc
and
jns
jne
es
pop
rcl
pop
dec
inc
cmp
sarb
inc
pop
mov
pop
cmp
ret
or
iret
mov
add
sahf
cmp
mov
fadds
aas
mov
or
inc
imulb
and
cmp
sbb
pop
dec
xchg
stos
push
test
push
inc
cli
pop
lret
rcrb
sbb
xor
inc
mov
orl
popa
xchg
add
imul
jno
cmp
adc
pop
clc
xor
push
pop
jge
insl
pop
inc
xor
lret
jb
cmpsl
mov
in
push
cmp
fiadds
dec
test
inc
repz
xchg
jl
nop
xor
cwtl
sbb
int3
fimull
cmc
dec
or
mov
imull
fs
push
out
push
xor
push
bound
mov
sub
adc
jecxz
pop
mov
xor
outsl
mov
xor
add
jmp
test
pop
mov
and
push
dec
loope
mov
out
or
mov
inc
fcoml
xchg
aaa
xor
pop
leave
pop
mov
movsl
subl
jmp
jmp
int3
lods
dec
and
call
gs
popf
inc
add
push
xor
and
into
sti
xchg
xchg
push
ficomps
cmp
and
xchg
mov
jl
testb
sub
test
fwait
shl
divb
and
imul
movsb
mov
pop
in
push
and
test
cmp
xchg
outsl
dec
rorb
std
add
ljmp
mov
sub
les
lahf
nop
dec
hlt
arpl
out
push
dec
data16
fiadds
or
out
gs
sti
xchg
imul
lods
fisubs
dec
and
aaa
push
mov
lahf
pop
sub
iret
leave
pop
sub
leave
inc
mov
dec
sar
pop
pop
push
test
and
pop
out
dec
inc
adc
roll
out
pop
fucomp
add
sbb
out
mov
add
mov
mov
popa
repz
pop
pop
xchg
pusha
ficomps
rep
fwait
jl
mov
lods
add
jbe
loopne
lods
and
push
and
jecxz
fucomi
test
fdivp
lcall
inc
notb
and
jle
mov
jne
cmp
sub
js
and
dec
test
and
insb
mov
cmc
or
push
pop
sahf
call
pop
dec
lahf
ret
sbb
or
lret
dec
push
cltd
insl
imul
test
fcomp
mov
movsb
mov
cmp
fiaddl
in
fcomi
add
sbb
fiaddl
pop
out
stc
es
nop
mov
lcall
fadds
sti
repnz
dec
inc
insl
nop
nop
adc
mov
mov
jnp
or
iret
ja
sub
sbb
out
imull
mov
test
xchg
lret
jecxz
lds
imul
pop
push
jae
es
or
dec
cltd
push
inc
mov
stc
loope
adc
and
dec
jns
je
jp
lds
adc
xchg
stos
xlat
out
out
loopne
insl
sub
scas
cltd
adc
cwtl
std
dec
jnp
add
inc
pushf
pop
push
lret
jns
and
jg
adc
push
dec
aaa
test
fsubp
cld
imul
cmp
inc
cmp
addl
sbb
test
dec
idivl
int
mulb
sbb
pop
or
out
andb
stos
inc
fisubs
call
push
adc
stos
andb
inc
push
xchg
inc
xchg
push
jg
jg
out
add
loopne
mov
dec
xor
pushaw
inc
and
mov
lea
int3
in
outsl
inc
scas
mov
xor
movsb
mov
mov
mov
loopne
adc
jecxz
imul
out
sti
cmp
inc
shl
cmp
cmp
xor
bound
divb
push
jb
xchg
cwtl
loope
insb
xchg
icebp
mov
mov
sti
jmp
xchg
cmpsl
cli
repz
or
mov
sbb
mov
jmp
roll
add
movsl
lea
xchg
jne
incb
xchg
push
fsubrl
jns
dec
push
mov
leave
mov
inc
gs
mov
jge
neg
movsb
mov
mov
mov
jnp
xchg
into
jle
jo
fmull
or
push
cmpsl
ret
jecxz
cmp
pusha
add
loope
sub
inc
pushf
inc
or
insb
or
mov
fs
add
addps
jae
and
stc
cmp
adc
in
dec
fsubrs
push
mov
mov
pop
movsl
psubusb
or
mov
mov
cmpb
fisttpll
cmp
in
mov
pop
stc
in
pusha
stc
push
mov
fs
mov
fbld
negb
aad
jbe
pop
jmp
dec
sbb
push
push
out
das
cwtl
fisubl
mov
push
mov
xor
xor
sbb
imul
incb
popf
imulb
mov
fadd
rorl
inc
movsb
xor
out
testl
aas
inc
mov
cmp
cmp
inc
imulb
arpl
cmp
cmpsl
or
stos
out
gs
aaa
jmp
xor
or
and
bnd
mov
xchg
jl
sbb
out
lret
dec
arpl
shlb
sub
aad
mov
fcomps
lcall
shll
shr
addl
push
in
roll
mov
ret
inc
loope
int
aaa
or
or
and
pop
cmp
test
lea
insb
test
sub
dec
nop
inc
gs
sbb
add
jmp
fwait
add
push
rclb
xchg
pop
div
inc
ficoms
sbbb
push
pop
aad
xchg
push
aad
jmp
xchg
testl
sub
inc
inc
push
jecxz
adc
inc
movsl
pop
test
cmp
and
inc
xor
gs
jg
scas
stos
inc
inc
std
sar
in
jl
mov
pop
fidivrs
add
mov
bound
push
inc
jg
das
popa
cmpsl
into
in
push
add
in
xchg
sub
push
sbb
jnp
dec
daa
addr16
cmp
mov
mov
add
outsl
adc
scas
sub
and
push
xor
or
mov
inc
sti
jne
and
jne
sbb
mov
out
xchg
stos
sti
pop
in
sub
inc
inc
mov
insb
xlat
jns
out
mov
outsb
stos
andl
cli
or
mov
pop
inc
and
sub
dec
and
out
je
or
popa
leave
mov
mov
out
mov
pop
roll
mov
cli
or
orb
sub
insl
call
ficoml
add
outsb
adc
aad
xor
in
aas
loop
push
xor
cwtl
test
in
outsb
dec
cvttps2pi
mov
std
fimuls
xor
sub
fidivrl
push
andb
movsl
xchg
aad
xor
xchg
dec
and
cmc
jg
enter
mov
fidivrl
sub
mov
sub
adc
mov
test
inc
dec
inc
dec
jbe
mov
sti
mov
mov
add
inc
daa
out
cmpsb
arpl
push
pop
mov
xchg
or
cpuid
inc
in
mov
sti
inc
adc
jecxz
xor
and
aad
push
dec
pop
pushf
cmpsb
imulb
stos
dec
jle
out
shrb
mov
pusha
push
mov
pusha
rcrl
fnstenv
jbe
and
mov
incb
or
pop
mov
lds
inc
pop
or
shll
lahf
push
leave
jge
sub
fcompl
sub
in
mov
mov
aas
jle
stos
push
stc
in
mov
push
fnstsw
xorb
in
in
add
pop
fldl
enter
subl
stos
sbb
xchg
push
sub
subb
cwtl
bound
inc
pop
and
mov
and
aaa
int
outsb
test
cmova
jecxz
push
imul
in
stos
lcall
mov
mov
rcrl
add
inc
fmulp
es
cmp
fldcw
fbstp
adc
pop
in
sub
or
adc
and
add
cwtl
push
ret
in
scas
inc
mov
mov
ficoms
sbb
xchg
mov
test
ljmp
movl
push
xchg
xor
ja
push
out
cmp
fstpl
loopne
sbb
outsb
mov
push
or
in
xorl
jp
loop
push
and
lahf
or
cmpsl
xchg
fiadds
divb
jle
push
insb
jl
jo
movl
movsl
cmp
sub
mov
inc
jnp
pusha
call
fsubr
cmp
in
pop
jle
les
icebp
fwait
lahf
add
or
xchg
mov
xchg
xor
fisubrs
push
jno
inc
les
adc
or
int
cmp
and
sti
or
clc
inc
cld
jb
repnz
fisubl
and
stc
pop
and
mov
or
mov
mov
sti
stc
sub
gs
jle
sub
cwtl
pop
outsl
xchg
das
jns
mov
sbb
pop
ss
pusha
cld
movsb
outsl
pop
cld
xor
or
xchg
xor
pop
push
aam
inc
mov
adc
mov
mov
jnp
and
adc
xchg
xor
cmpsb
cmp
loopne
fwait
push
fcompl
mov
imul
ret
scas
jnp
mov
lret
popf
aaa
in
out
pop
scas
add
ljmp
movsl
xchg
notb
push
mov
push
cld
jp
popa
xlat
push
icebp
lods
or
jns
stos
pop
int
mov
ljmp
lahf
pop
fidivs
es
mov
pushf
sbb
add
je
mov
idivl
lods
ret
xchg
sbb
jae
ret
test
add
xor
shll
push
mov
scas
mov
push
outsb
out
daa
sbb
sbb
dec
imul
sti
mov
sub
adc
shrl
pop
cmpsl
scas
aaa
icebp
lds
cmpsb
icebp
shlb
add
std
shll
mov
mov
int3
pop
ja
mov
inc
outsb
or
pop
add
lods
int
cli
repz
cltd
mov
js
rol
add
out
and
outsl
jns
sub
ret
sub
mov
sub
clc
mov
mov
sbb
ss
in
ret
sbb
sbb
rorb
xchg
mov
aaa
aam
dec
ret
notl
push
arpl
mov
ds
sar
out
push
xor
fs
mov
out
push
test
inc
fisubs
sbb
test
bound
cmp
dec
add
inc
test
cmp
mov
xor
push
shlb
das
mov
mov
sti
arpl
cmpsb
jnp
lock
cmpsb
std
cwtl
rcrl
jb
pop
or
push
in
mov
jae
test
arpl
add
shlb
orb
mov
jbe
jbe
movsb
mov
mov
gs
stc
imul
mov
sub
pushf
ffreep
orb
cmp
lret
insl
push
addb
mov
faddl
cmpb
aaa
xchg
jg
ret
inc
add
cs
add
fidivrs
daa
xor
aas
insb
cltd
fisubrl
pop
popa
mov
mov
mov
dec
xchg
xchg
sbb
jo
add
loopne
mov
cmp
lret
imul
pop
lods
out
push
jo
jns
push
xchg
ljmp
iret
dec
out
push
addr16
in
push
mov
pop
pop
and
sahf
shl
nop
inc
dec
aad
cmpsb
mov
pop
xchg
pcmpgtd
add
xchg
clc
sbb
je
jae
xchg
mov
jnp
sbb
imul
mov
and
sub
int
push
push
fs
shl
mov
movsb
push
je
lds
popf
cmp
scas
xor
push
inc
push
sub
push
sbb
mov
mov
cmp
push
xlat
or
jecxz
repnz
dec
arpl
or
inc
in
cmp
inc
push
add
shrb
mov
pop
and
dec
and
push
push
je
dec
fisttps
xor
jmp
dec
push
sti
out
xchg
mov
cmp
rorb
popf
cmp
or
mov
adc
inc
fistps
xchg
lock
xchg
add
cmp
xchg
es
xor
push
add
adc
fldl2e
out
mov
adc
dec
arpl
push
fucompp
mov
aaa
add
scas
hlt
rclb
push
xchg
in
fcompl
inc
add
dec
in
sbb
movb
scas
xchg
mov
adc
or
push
jge
push
inc
push
mov
ficompl
jecxz,pt
adc
inc
add
ds
cmp
es
cli
les
mov
leave
outsl
xlat
jg
fsubl
cwtl
xor
and
mov
jge
add
mov
dec
xor
sub
popf
enter
imul
inc
dec
sahf
imull
lock
pop
icebp
xchg
mov
std
icebp
cmp
and
stc
imul
inc
out
add
mov
je
sub
mov
mov
xchg
jmp
fs
push
fidivs
popf
movsb
movsl
loope
jb
in
cmp
mov
out
dec
std
xchg
pop
push
jecxz
dec
sbbl
scas
inc
std
lods
pop
mov
sub
inc
out
stc
lea
sbb
mov
cmp
dec
add
ret
std
and
sbb
xor
sbb
in
in
cs
xor
bound
inc
cld
lods
cld
call
mov
cld
gs
lahf
insb
mov
movsl
dec
fwait
sbb
cltd
mov
mov
insb
and
sbb
push
fldt
inc
popf
stos
push
push
mov
sbb
out
inc
mov
sbb
iret
test
bound
addr16
ret
add
jae
out
cmc
repnz
sub
xchg
pop
dec
inc
pop
pop
inc
inc
out
pop
scas
adc
lods
movsb
popf
repz
das
imul
out
pop
rorl
pop
daa
fdivrp
dec
in
mov
cmc
aam
or
or
mov
and
in
adc
fwait
xchg
filds
clc
adc
push
sti
jl
sbb
or
cmp
arpl
pop
icebp
rcll
jae
ret
inc
push
adc
adc
mov
test
sub
jne
jb
repnz
stos
adc
mov
cmp
mov
xor
lret
dec
movsl
bound
sbb
push
cmp
inc
imul
sbb
xchg
daa
repz
xor
jae
mov
std
hlt
int
mov
subb
dec
mov
dec
push
adc
out
push
mov
push
lahf
popa
iret
jmp
and
push
testb
mov
mov
aaa
test
mov
pop
or
enter
outsb
ss
repz
mov
mov
loopne
ret
jg
and
das
fs
fldenv
pop
aad
call
fimull
sbb
mov
pushf
pop
out
es
mov
shll
mov
jl
pop
jl
add
addl
jb
xlat
cmp
ficomps
cmp
aas
jnp
gs
pop
xor
scas
out
push
sbbl
jae
push
std
insb
cwtl
mov
cmp
dec
add
or
push
or
pop
sbb
clc
push
or
pop
xchg
sub
stos
mov
loop
out
xchg
pop
mov
fldl
icebp
xchg
mov
outsl
or
mov
in
mov
fstpt
loopne
into
lcall
xchg
mov
ret
jg
push
mov
aad
mov
cmp
xor
jp
adc
js
dec
and
test
lods
test
and
aad
cs
mov
and
mov
not
imul
or
ljmp
sub
mov
xchg
aad
push
jmp
sub
in
xchg
ja
fcompl
xlat
fsubrl
jbe
fisubs
in
add
mov
mov
fcoms
mov
jge
adc
jne
push
sti
fstpl
sarb
fwait
sub
shrl
leave
cwtl
push
xchg
adc
sahf
cmp
jo
xor
leave
xchg
mov
jl
loop,pt
call
xor
jg
shll
nop
testb
xchg
fisubl
mov
inc
pusha
imul
pop
push
outsl
dec
push
dec
stos
xchg
push
into
in
pop
pusha
jbe
dec
call
push
cli
lea
cld
jns
push
xor
inc
pop
or
aam
out
mov
jne
push
adc
jecxz
adcl
mov
fs
dec
inc
jnp
jno
jmp
imul
leave
fstpl
orl
cli
mov
inc
add
lret
insb
push
ror
and
icebp
aaa
cwtl
or
shl
mov
or
xchg
sbb
mov
and
ljmp
mov
mov
mov
inc
scas
pop
xor
sbb
rorb
cmc
cld
jp
stos
jle
jg
inc
cmc
dec
mov
data16
mov
and
sbbl
and
cltd
adc
pop
xor
inc
mov
add
xor
add
jge
gs
mov
mov
inc
mov
inc
out
pop
lods
sahf
fdivl
inc
jl
out
jns
imul
mov
pop
pop
mov
add
xorl
pushf
jns
js
jmp
cmpsl
les
fwait
jnp
lcall
or
add
fstpl
fldcw
fldcw
mov
xchg
mov
push
jb
mov
arpl
lock
rcrl
sub
mov
jnp
cmp
cld
cmp
popa
fidivl
xchg
das
cltd
mov
mov
push
mov
aam
jae
out
push
sub
sbb
push
dec
das
adc
mov
sahf
int
add
mov
mov
add
adc
cmp
sub
test
dec
mov
fwait
sub
pop
sub
jecxz
pop
pop
inc
push
xlat
in
mov
icebp
dec
mov
ret
push
mov
jl
jnp
jge
dec
fadds
add
iret
inc
jnp
sub
xchg
repnz
pop
clc
fidivs
jmp
sub
sbb
lret
subb
jb
inc
scas
xchg
mov
loopne
testl
adc
inc
jl
out
insb
mov
inc
gs
es
xchg
sub
es
push
test
daa
js
mov
mov
addb
mov
jmp
subb
mov
rcrl
and
pop
inc
ja
dec
in
cltd
sub
fcmove
inc
test
pop
or
ljmp
push
sub
clc
out
xor
daa
cmp
push
movsb
mov
adc
sub
xchg
mov
outsl
hlt
add
inc
rcll
adc
cltd
sub
cmp
sub
mov
sub
pop
or
and
adc
mov
inc
pusha
in
mov
push
pusha
mov
test
and
popf
out
mov
jmp
inc
pop
das
jne
push
addr16
fs
prefetch
pop
sti
test
adc
fwait
jge
insb
adc
and
cltd
dec
je
or
cmp
cltd
loopne
orl
mov
cmp
stc
incl
or
mov
xchg
in
popl
jb
ret
mov
jl
pop
and
inc
subb
jno
repnz
aas
and
cmp
push
xchg
shll
push
je
fsubl
mov
push
lcall
mov
jmp
pop
outsl
and
outsl
xchg
loop
loop
popf
outsl
jg
mov
cmp
in
mov
and
lds
imul
dec
je
cli
movsl
add
ret
push
mov
jmp
bound
mov
dec
icebp
sbbb
mov
push
sub
xor
pop
loop
or
ret
lahf
push
lock
inc
dec
mov
aas
push
jbe
shlb
pusha
sbb
xchg
mov
pop
clc
jnp
pushf
inc
gs
sahf
cmpsb
sbb
xchg
mov
and
cmpsl
cmpsl
sub
push
push
or
jmp
pop
xchg
in
push
andl
or
jns
or
insl
mov
jmp
leave
das
decl
hlt
scas
repnz
add
fsubl
xchg
jae
cmp
mov
dec
inc
ret
daa
xor
in
adc
push
ficompl
mov
movsb
loop
xchg
pop
mov
pop
push
inc
or
sbb
mov
sbb
out
cmpsb
mov
mov
pop
testb
nop
cmc
dec
in
adc
int3
inc
scas
xor
sub
int
xor
loop
enter
dec
or
ret
sub
adc
les
xor
imul
add
push
jmp
xor
dec
in
xlat
or
adc
lock
arpl
mov
fs
enter
add
lahf
add
jo
loop
sub
addr16
xor
sarl
lcall
push
lock
jg
nop
push
packsswb
insb
mov
ret
mov
addr16
movsb
jp
add
cltd
cmc
test
mov
cmp
push
pop
push
sbb
fucomi
mov
dec
adc
sbb
hlt
mov
test
cmp
jbe
push
nop
ljmp
mov
xchg
stos
ret
xor
pop
cltd
mov
lds
push
cmp
mov
xorl
jg
mov
xchg
sti
cmp
cmpsl
sbb
sti
rorb
inc
jne
xor
cmpb
test
out
add
inc
or
inc
mov
aaa
dec
inc
lahf
jmp
pop
int3
scas
dec
test
lret
stos
cmp
clc
pop
lds
cmp
dec
repz
cmp
test
lcall
movsl
sbb
into
mov
loopne
mov
shl
into
sub
mov
add
xchg
jns
into
stos
add
xchg
adcl
mov
jae
inc
mov
dec
push
lods
cltd
push
inc
mov
sbb
jp
adc
es
fsubrp
movsl
into
adc
stos
push
cmp
in
cwtl
in
out
jno
and
faddp
lock
stc
dec
cmp
mov
in
mov
test
push
addb
cltd
ja
pop
jne
pop
inc
mov
push
sbb
or
icebp
cmp
lds
mov
ljmp
push
jecxz
stc
sarl
pop
fdivrl
insl
ja
push
add
pop
scas
outsl
adcb
push
mov
and
xchg
xchg
cltd
aad
shrl
out
into
outsb
lahf
dec
std
cwtl
or
xchg
xchg
sub
mov
insb
negl
or
mov
dec
adc
ret
adc
stos
xor
fmuls
sbb
arpl
int
mov
ljmp
enter
adcb
pop
xor
jno
loope
cld
nop
mov
inc
loop
push
dec
adc
fstps
adc
scas
popa
mov
and
xchg
cmp
sahf
sub
xchg
ret
fnsave
cmp
rclb
xchg
jns
fldt
mov
sub
stos
test
jae
inc
dec
sbb
adc
push
insl
lea
scas
rorl
imull
fnstenv
lock
fisubrs
orb
or
pop
sub
hlt
jns
rcrl
add
inc
mov
sbb
xchg
test
lret
ja
xlat
fnsave
xchg
popf
inc
and
push
lods
das
add
push
ja
mov
pop
mul
addl
mov
mov
daa
cltd
jns
jmp
push
adc
pop
mov
sahf
hlt
in
mov
xchg
mov
fwait
pushf
dec
cmp
test
or
fsub
push
dec
cld
or
loope,pn
sub
or
stos
mov
lock
dec
jns
inc
outsb
arpl
cmp
push
mov
sbb
xor
mov
bound
xchg
mov
repnz
cmc
dec
mov
jmp
dec
xchg
jns
mov
xor
xchg
addr16
stc
add
aaa
popa
cmpsl
mov
bound
sub
inc
pop
xchg
push
inc
dec
das
mov
mov
or
or
sahf
sub
data16
shll
xchg
int3
loope
cmp
sbb
lods
leave
repnz
xlat
imul
imul
dec
push
xchg
int
inc
dec
xchg
scas
jl
xor
mov
loopne
fidivrl
dec
mov
dec
xchg
cwtl
ret
pop
out
xchg
mov
or
scas
sub
and
mov
ss
mov
sbb
jo
xchg
jo
jnp
scas
pushf
mov
or
add
out
lea
xchg
mov
bnd
jae
mov
inc
and
xlat
jecxz
mov
imull
mov
fadd
daa
sbb
in
dec
pushf
pusha
mov
in
inc
jno
jae,pt
ficoml
dec
jg
jg
lret
cmp
sub
or
shlb
add
ret
mov
aam
xchg
dec
insl
sbb
or
hlt
jmp
adc
sahf
pushf
scas
mov
xor
jne
mov
in
addr16
test
fmull
xlat
fbld
xor
pop
add
sub
mov
imul
aam
lcall
sbb
ss
sbb
ret
mov
insb
shlb
out
fcoml
imulb
inc
adc
add
push
pop
je
pop
adc
or
stc
repnz
dec
arpl
adc
lea
out
dec
inc
pushf
dec
mov
mov
xor
addr16
sbb
int3
std
and
mov
jne
je
test
lea
inc
dec
push
mov
sub
testl
xor
xchg
fdivp
push
aas
pop
fwait
mov
mov
pop
aas
icebp
mov
lock
fists
inc
pop
mov
mov
fadd
enter
jnp
jne
imul
xchg
push
pop
mov
jmp
push
or
adc
lods
bound
div
call
loop
cmc
sbb
inc
ljmp
jns
push
dec
jp
mov
mov
roll
sahf
inc
mov
fcomps
cli
jmp
xlat
and
xchg
xor
mov
fisttpll
push
push
pop
mov
lret
shlb
add
sub
rolb
mov
gs
add
lret
mov
cmpsb
pop
dec
inc
mov
rclb
dec
shll
or
adc
sub
sub
inc
mov
and
cld
add
lcall
fs
mov
xchg
adc
pop
mov
negb
sub
cmp
push
enter
fbstp
inc
sub
and
push
ja
ret
mov
mov
div
in
cmp
dec
in
imul
in
neg
rcr
jo
insb
pop
stc
add
pop
push
cmp
mov
lods
dec
pop
sbb
sbb
loope
mov
push
out
iret
aad
pop
jns
mov
and
lret
data16
jmp
fsts
push
or
xor
sbb
sti
or
imul
roll
dec
mov
pop
xlat
cli
push
lahf
inc
adc
repnz
and
in
jns
mov
sub
rcr
xchg
mov
rol
pop
into
das
stos
jmp
pop
jbe
fs
mov
cmc
xchg
lret
xchg
sbb
sub
out
aas
and
lods
popf
pop
test
push
popa
imul
repz
push
inc
nop
cmp
pop
jnp
xchg
dec
ret
js
nop
repnz
dec
inc
mov
insb
mov
movsb
cmp
jle,pn
inc
push
mov
or
or
mov
xchg
std
mov
aad
dec
mov
roll
lcall
ds
push
test
xor
scas
jp
scas
sbbb
inc
mov
pop
leave
sti
jl
inc
scas
xchg
or
push
dec
pop
inc
call
shr
insl
xorl
out
ja
push
mov
add
iret
dec
insb
mov
icebp
std
jmp
sub
es
rcl
leave
pop
out
mov
cmpl
mov
pop
addb
xlat
push
mov
and
dec
add
mov
out
fldenv
loop
cmpsb
pusha
ret
fistps
and
mov
lret
scas
sahf
inc
mulb
add
cwtl
inc
clc
outsb
popa
jo
mov
movsb
add
pop
enter
push
lret
je
and
ss
aam
cmp
daa
test
or
pop
shlb
cli
and
mov
repz
push
mov
xor
jecxz
pusha
pop
leave
pop
aam
fidivl
jmp
dec
test
loopne
mov
xor
jae
add
pop
sbbl
fstpl
push
lods
cmp
jmp
mov
xor
jle
jecxz
push
ljmp
cmc
push
mov
lds
sub
pop
jnp
out
in
or
sub
mov
xor
pop
sub
inc
dec
sub
sbb
or
xchg
loop
sub
aam
test
sbb
mov
shrb
fcoms
xchg
into
bound
or
nop
out
lcall
jne
lret
lods
jb
in
jge
pusha
sbb
outsl
fadds
mov
cltd
lahf
subb
scas
ss
pop
mov
inc
loope
mov
mov
addr16
xchg
popf
loope
inc
fidivrl
out
outsl
popa
cmp
outsb
loope
mov
in
fs
pop
cmp
pop
ret
cmc
rcrl
test
xchg
adc
ret
sbb
sbb
jns
outsb
ljmp
adc
call
sti
sbb
mov
fcmovnb
jmp
mov
stos
ret
push
lock
or
pop
mov
insb
mov
and
pop
inc
jle
sti
testb
jno
jns
push
push
test
mov
repnz
sub
repnz
je
fs
cmp
cmp
mov
lods
aaa
lahf
ret
jge
xchg
out
and
int
dec
hlt
cmpsl
sbb
js
cmpsl
mov
fbld
adc
cmp
lds
mov
rorb
loopne
test
aaa
and
push
je
pop
or
xchg
fnop
mov
fs
ljmp
pop
lods
test
loope
adc
adcb
pop
push
cmp
fbstp
xor
mov
adc
cmp
xor
mov
lock
xor
pop
mov
adc
push
mov
pop
repnz
cmp
or
ja
mov
and
adc
rcrl
mov
jp
mov
sbb
or
push
sbb
push
jb
adc
sbb
or
es
loop
push
cld
pop
xchg
add
jmp
inc
push
das
pushf
dec
pop
inc
es
or
paddw
inc
and
cmp
sbb
mov
push
jg
xor
mov
cmpsl
xor
arpl
adcb
test
and
cli
ds
xor
int3
push
xchg
pop
rolb
cltd
shlb
mov
data16
xor
fdivrl
test
adc
orb
push
xchg
das
adc
mov
adc
insl
sbbb
mov
xor
enter
es
or
jp
dec
outsb
or
inc
iret
fisubrs
out
in
mov
push
movsl
sub
push
scas
es
jb
loop
pop
addb
sbb
lds
lret
xorl
add
test
sbb
bound
xchg
inc
jl
je
and
sti
inc
scas
testb
shr
inc
sub
nop
fisttpll
pop
add
test
notl
mov
adc
and
push
sub
add
nop
adc
push
daa
pusha
inc
out
outsb
outsb
out
rcr
mov
adc
ret
inc
ss
mov
aaa
imul
cld
xchg
aaa
out
das
pop
or
and
xor
sbb
fisubs
insl
ret
cmp
shl
loop
pop
xlat
xor
adc
mov
ljmp
mov
push
shll
subl
das
repnz
int3
sub
mov
pop
mov
jg
mov
mov
pop
xchg
add
dec
stos
mov
xlat
call
jno
je
es
movsl
clc
inc
hlt
pop
mov
inc
enter
arpl
rol
and
cmpsb
stc
daa
jae
adc
xor
xor
outsb
dec
test
pushf
or
or
inc
and
xchg
out
lods
pop
xchg
mov
lret
adc
push
sub
outsb
sbb
push
outsl
fstps
add
cmpsb
dec
out
cmpsl
pop
outsb
sub
inc
div
lahf
and
mov
adc
mov
in
je
cmpl
mov
push
mov
or
pop
addb
shlb
loope
pop
push
aam
push
and
adc
cmc
and
outsl
call
sub
out
iret
xchg
cld
xchg
fstpl
cmp
repnz
fnstcw
cli
push
cmp
call
pop
cmpsl
lds
mov
cmpl
pop
ss
xchg
insb
scas
lret
jne
mov
movsb
sbb
cwtl
loop
add
pop
jnp
xor
sub
jb
mov
fdivl
sbb
hlt
mov
pop
xchg
push
mov
aad
movsl
mov
arpl
repz
fiaddl
rcrb
sbb
push
clc
test
lret
sbb
or
sbb
jae
roll
lcall
mov
pop
push
xor
mov
out
lods
xchg
jae
xor
outsb
fnstsw
imul
push
sub
rclb
pop
sbb
fadd
outsl
mov
adc
jecxz
mov
mov
cld
sub
fdivr
jg
lea
outsb
push
xor
jle
push
cmp
dec
xchg
ret
inc
inc
push
test
cmovne
jecxz
mov
leave
xor
out
ret
lcall
adc
dec
sbb
test
cmpb
data16
xchg
nop
xchg
arpl
in
xor
adc
lea
jb
icebp
lock
sti
imul
ja
cld
ja
pop
xchg
popf
xor
push
sbb
add
and
aad
mov
rcll
sub
or
in
lret
jbe
dec
xor
clc
cli
shlb
popa
and
jle
gs
mov
push
out
js
sub
into
xchg
mov
cli
sub
push
jo
cli
sbbl
sar
test
lret
mov
popa
stos
push
mov
movsb
out
or
out
dec
sbb
das
mov
pop
scas
pop
xor
xor
add
fidivrs
push
sub
loope
lahf
dec
or
push
mov
outsb
insb
sbb
shlb
lahf
pop
imul
fisttpll
adc
clc
imul
xor
je
push
push
cmpsl
sbb
cld
pop
push
adcb
sbb
dec
adc
push
sub
adc
inc
jne
jns
test
test
ss
mov
adc
mov
pushf
mov
pusha
arpl
std
dec
fbstp
add
pusha
clc
inc
scas
adc
sar
or
xchg
xor
inc
mov
sbb
mov
pusha
xor
adc
xor
push
and
xor
dec
cmp
lret
stc
cmp
push
mov
add
mov
fistl
cmpsl
mov
sbb
mov
js
xor
aad
ds
add
push
mov
or
jo
inc
push
push
pop
icebp
out
jp
inc
jl
pop
mov
mov
sbb
jmp
mov
test
loop
adc
es
aaa
insb
pop
js
roll
xor
shll
cmp
loopne
test
fucomp
and
pop
call
jno
xor
mov
jno
and
nop
cwtl
xchg
mov
clc
push
popf
cltd
sbbl
xchg
push
clc
js
popf
inc
mov
lahf
pop
adc
leave
iret
mov
xor
adc
leave
std
repz
cmp
iret
mov
or
and
mov
dec
es
fidivrl
add
jnp
sbb
xor
cmp
or
pop
pop
ja
mov
jo
mov
aam
idiv
pop
and
rcr
enter
dec
cld
xor
fwait
xchg
pop
or
xor
pop
hlt
mov
mov
movsl
or
dec
daa
inc
int
xchg
push
daa
pop
ljmp
hlt
sti
into
xchg
test
pop
pop
mov
test
daa
out
xchg
mov
lods
xchg
adc
cmpsl
cmp
and
mov
cmp
jmp
xor
xchg
stos
inc
push
or
cmp
repnz
into
bound
adc
xchg
dec
jne
xchg
pop
jo
or
cmp
sbb
xchg
jge
inc
loopne
dec
mov
enter
repnz
jno
push
fwait
pop
add
mov
das
mov
in
subb
jae
sub
sbb
sub
das
notb
adc
and
sbb
sahf
jecxz
inc
lahf
xor
pushf
pop
mov
cltd
aad
addr16
push
mov
xchg
mov
ss
and
pop
shrb
cmpsl
fisubrl
stc
in
mov
dec
dec
sub
les
test
test
mov
add
repz
aam
xchg
les
test
adc
jne
aaa
mov
sub
dec
enter
cmpsb
inc
sbb
pushf
mov
mov
jle
inc
cmp
dec
mov
ds
mov
jne
aad
mov
jp
xchg
stc
mov
xchg
lahf
addb
xchg
aaa
mov
mov
sub
cwtl
sub
pmuludq
add
push
je
addr16
mov
xchg
push
and
fldt
dec
or
cltd
xchg
shl
fsubr
in
cmp
sete
inc
into
addr16
and
daa
mov
adc
push
cmp
sahf
ret
lock
hlt
fisttpl
xorb
and
jl
adc
ret
xchg
icebp
pop
aam
clc
lock
sub
test
dec
jmp
out
dec
adc
sbb
jns
mull
int3
arpl
mov
mov
out
mov
dec
jae
cmp
and
stc
dec
in
inc
inc
xor
push
sbb
pop
xchg
cmp
mov
mov
sbb
sti
cwtl
mov
shrl
sti
jl
add
and
push
mov
andl
push
arpl
mov
shrb
fnstenv
xor
sbb
mov
es
xchg
iret
add
mov
jae
div
test
cmpsb
mov
je
in
lcall
mov
and
sbb
push
mov
pop
push
ja
int3
shlb
or
jae
lock
xor
pop
pusha
jmp
xor
sbb
jmp
inc
and
mov
inc
addb
rol
add
add
xor
push
mov
dec
out
arpl
jge
sbb
add
mov
adc
and
decl
loopne
cmpsb
push
jae
sub
inc
ret
jmp
pop
push
cmp
test
lods
jg
cmp
adc
inc
push
out
push
sbb
sub
hlt
lcall
dec
loope
add
test
nop
jle
cmp
and
in
ja
stos
in
imul
scas
mov
pop
push
add
mov
sbb
inc
test
sar
adc
adc
lcall
pop
or
add
insb
mov
cmpsb
dec
lods
mov
mov
lock
in
mov
xchg
sbb
mov
cwtl
inc
sarb
mov
pusha
pop
mov
fucomi
lea
cmpsb
mov
push
cmp
in
inc
inc
mov
cmp
pop
pop
loope
inc
ficomps
movsl
inc
jne
adc
testb
or
add
enter
jmp
pop
hlt
test
fmuls
mov
ds
adc
inc
in
repz
fst
jbe
and
lea
daa
pop
dec
lock
ljmp
insl
push
bound
or
mov
cmp
or
les
insb
cltd
loopne
and
sbb
out
jnp
push
mov
imul
jg
in
insb
shl
jecxz
jbe
dec
fmuls
aad
adc
scas
out
loope
mov
stos
loope
sbb
add
jbe
imul
outsl
xchg
mov
or
shrb
mov
jl
push
mov
int
fldcw
test
dec
add
mov
lea
xor
shrb
pop
xchg
ja
mov
mov
cmp
es
cmp
clc
out
icebp
xchg
movb
jl
cs
popf
pusha
mov
dec
jmp
in
push
aas
push
shll
loope
inc
lret
jno
inc
push
inc
or
sub
lcall
cmc
cmp
jne
fsubl
inc
lods
and
pop
xor
imul
jmp
xorb
aaa
mov
mov
push
jb
and
rclb
mov
sbb
cmpsb
sysenter
rcll
jle
incb
dec
cmp
and
ss
lret
loopne
and
push
add
cmpsl
inc
sbbl
ret
repnz
inc
xchg
push
mov
ret
mov
aaa
xchg
std
mov
inc
adc
and
std
cltd
pop
ss
sbb
adc
jg
xchg
adc
push
mov
stos
scas
pop
bnd
cltd
pop
faddp
xchg
ja
xchg
push
movsb
xchg
sub
pop
sbb
mov
enter
jp
das
pop
add
xchg
cld
push
jmp
sti
fucomi
cmp
rcrl
test
and
dec
psrad
pop
pop
out
push
rol
pop
int
fbld
sbb
leave
add
and
fidivs
xorb
sahf
push
xchg
int
int3
repnz
lcall
lahf
adc
inc
outsb
daa
ret
es
int3
sub
mov
pop
mov
jge
add
push
sbb
popl
xchg
out
xor
jae
lret
mov
lock
bound
pop
pop
jno
sbb
ror
in
and
push
mov
arpl
cmp
mov
push
mov
push
jae
pop
push
or
pop
daa
testl
dec
dec
and
mov
movsl
xchg
push
pop
push
pop
test
in
mov
repnz
sbb
dec
cmpsl
jg
mov
jmp
lcall
movsl
and
or
xchg
inc
insl
int
into
sahf
push
inc
test
mov
mov
loopne
push
mov
and
clc
or
inc
cld
cmp
push
pop
sbb
cli
jmp
and
lods
lock
xchg
and
pop
push
cmpb
cmp
push
sbb
std
xchg
push
xchg
icebp
jmp
ljmp
cmp
add
inc
pop
mov
popf
lock
das
lahf
cmp
fnstsw
mov
mov
int
and
imul
push
aas
mov
lods
addl
cmp
push
push
loope
addr16
int3
loop
je
and
aaa
test
test
cmp
test
mov
mov
or
mov
std
adc
dec
pop
inc
js
push
inc
andb
fsubr
int
push
std
xchg
rcll
jg
xor
nop
sarl
sub
in
mov
sub
mov
sarl
lods
out
lods
push
dec
adc
loope
les
int
cmp
sub
or
jne
cmc
push
cmp
push
sahf
xorb
sti
push
rclb
imul
addb
in
push
dec
jge
fs
scas
fs
mov
sbb
outsl
jbe
fcomip
push
pop
mov
push
mov
aaa
mov
ret
lock
std
fisubrs
shlb
cld
scas
pop
sub
mov
cld
inc
rcr
data16
loopne
es
repnz
jle
sti
push
dec
loope,pn
dec
cs
out
scas
xchg
rol
mov
sbb
ja
xchg
mov
es
lods
adc
xchg
idivl
lcall
xchg
aas
ret
std
je
fsubrl
mov
cmp
jmp
enter
and
fstpt
or
sbb
add
jb
mov
shr
ret
xchg
scas
push
cmp
outsb
add
pushl
cmp
out
js
jae
and
sub
insl
and
daa
mov
mov
mov
shrl
mov
sub
mov
sbb
sbbl
into
out
pop
nop
push
fmul
test
push
adc
sbb
data16
les
adc
cmc
and
push
sti
pop
scas
dec
arpl
dec
and
dec
push
and
pop
out
and
mov
into
in
sub
imul
push
sub
jl
xchg
decl
inc
xchg
mov
push
or
cmp
imull
mov
sub
jns
ja
pop
mov
out
loope
dec
out
pusha
popa
lods
jp
jle
adc
jb
adc
xor
les
pop
cmp
shl
test
xor
popa
mov
pop
add
pop
push
fnstsw
stos
fs
xchg
mov
inc
inc
les
inc
popa
add
shll
xor
test
mov
repz
inc
cmc
adc
in
enter
mov
xchg
jmp
gs
lods
aad
bound
add
lock
div
push
jo
lods
sbb
or
icebp
wrmsr
imul
sbb
sti
aaa
sti
mov
add
jl
test
cli
mov
add
jns
mov
fisubs
cmp
shl
fmulp
pop
cli
jo
sub
push
mov
xor
js
add
pop
dec
pop
movsb
push
or
in
jns
fidivrl
adc
add
pop
xchg
in
popa
push
pop
insl
xchg
lcall
push
dec
mov
jp
push
dec
sbb
add
stos
mov
pusha
int3
ss
ret
sub
sbb
das
inc
mov
ret
adc
iret
xchg
jl
pop
lret
lock
push
pop
mov
xor
arpl
mov
xor
dec
sub
xchg
jne
adc
jb
jo
push
xchg
imul
cmp
sbb
lea
xor
xor
outsl
mov
ss
inc
test
es
negl
gs
inc
mov
mov
inc
or
cmp
fdivr
das
mov
or
fwait
arpl
scas
movsl
xor
loopne
jg
inc
push
enter
cmc
xchg
inc
xor
adc
xor
divl
fldl
fistpl
pop
mov
sub
sbb
test
cmp
insl
in
pop
fnsave
cs
loopne
xchg
aam
sub
jbe
mov
sbb
push
mov
loop
pop
mov
xchg
lahf
out
hlt
and
sti
gs
filds
rcll
push
aaa
inc
es
in
jle
fistl
sub
inc
inc
imul
sub
sbb
bound
add
push
std
repnz
ljmp
xor
jecxz
arpl
push
sub
lret
aas
jo
xor
dec
hlt
fsts
pop
xor
jge
mov
aad
jb
pop
popa
dec
lcall
lock
out
or
add
inc
mov
aam
add
fimull
in
mov
daa
add
sbbb
popf
sub
sub
ret
sti
push
es
shl
mov
inc
mov
shll
mov
movsl
aad
xchg
lea
jge
sahf
loop
cs
jbe
outsl
iret
cmp
pop
add
int
mov
cld
int3
sbbl
xor
repnz
sbb
mov
push
ret
push
sti
xorl
loope
mov
inc
test
fisttps
push
mov
cld
mov
inc
fwait
lds
aaa
sti
mov
inc
xchg
jg
jbe
sti
jle
in
fcompl
xor
lock
arpl
lcall
testl
adc
mov
lock
stos
xor
popa
mov
ss
ja
outsl
xor
icebp
cwtl
rep
fldl
fnsave
ds
push
fcmovb
in
lods
pusha
cmp
sub
imul
push
fcmovnbe
aam
cld
es
inc
cmp
aas
insb
jo
les
int
arpl
fistps
je
inc
insl
and
pop
outsl
ss
sahf
xchg
pop
out
mov
nop
cmp
cs
cmc
push
push
jo
ret
mov
imul
sbb
mov
mov
xor
dec
out
jb
scas
mov
push
jg
scas
adc
xchg
mov
ret
adc
mov
adc
movsl
test
dec
and
imul
fidivs
out
ret
sbb
xchg
gs
push
outsb
call
call
outsb
xchg
frstor
mov
push
jge
popf
mov
test
push
cmc
mov
sbb
xor
jmp
sbb
icebp
and
outsb
jne
add
ret
pop
cmp
es
sub
cmpsb
mov
inc
xor
enter
and
and
dec
add
mov
add
mov
mov
loop
sub
pop
movl
push
adc
sti
js
and
addr16
int3
das
jae
hlt
orl
pop
sahf
push
out
mov
aam
in
jno
ret
pop
mov
pop
decl
fdivs
push
out
dec
insb
sahf
dec
mov
xor
into
loopne
mov
das
mov
loop
jne
imul
out
popa
push
jle
outsl
or
inc
enter
inc
pop
es
ja
add
push
test
mov
out
clc
enter
out
call
sbb
xchg
xchg
fstps
mov
sahf
xor
mov
jge
inc
je
pop
adc
mov
adc
add
movsl
jmp
pop
add
popf
jo
sub
sbb
and
gs
xor
out
adc
arpl
dec
les
lahf
xor
fstp
add
aas
enter
bound
cwtl
scas
or
pop
stos
lds
xchg
fidivrs
lahf
inc
push
cmp
data16
into
fstl
mov
cmp
jbe
stc
int
push
mov
popa
dec
ja
ja
mov
ret
and
adc
adcb
jle
loop
mov
inc
sbb
cmp
xchg
into
add
jge
cmp
pop
inc
insl
in
daa
sbb
mov
mov
pop
icebp
adc
sbbb
out
test
imul
push
mov
sbb
cltd
and
mov
sbb
subb
inc
add
xchg
ret
xor
sub
in
push
sub
jl
sub
push
imul
dec
push
int3
js
push
jp
int3
out
add
dec
mov
push
movsw
xchg
ljmp
sub
push
fsts
ja
insb
mov
loope
int
lods
stc
xchg
lcall
je
mov
fwait
in
jmp
and
push
mov
mov
adc
dec
cmp
mov
mov
mov
inc
rorb
jnp
mov
push
xchg
mov
sbb
daa
mov
sbbl
popa
ds
push
mov
js
push
mov
frstor
ja
sub
scas
and
and
push
inc
insb
cmp
aam
das
aaa
inc
push
jns
mov
sbb
mov
mov
cmpsb
clc
mov
daa
enter
mov
fiadds
inc
cwtl
in
sbb
in
imul
cmp
in
jg
mov
mov
push
test
sub
mov
roll
loop
inc
add
into
ficomps
add
call
sbb
mov
rcrb
jp
jl
fs
jne
in
pop
out
pop
dec
es
gs
test
push
cmp
fimuls
mov
and
sti
in
add
sub
mov
and
fnsave
imul
sbb
outsl
xchg
xor
pushf
push
imul
add
call
xchg
mov
cmp
add
leave
dec
scas
cmpl
push
add
pop
dec
pop
das
or
xchg
inc
mov
cmp
mov
push
fldl
lods
xor
mov
mov
aas
movsb
pop
xchg
jo
notb
scas
adc
addr16
xlat
bound
sti
sbb
aam
mov
mov
inc
add
pop
mov
shll
out
out
fimuls
mov
cli
and
dec
cmp
cmp
push
movsl
or
and
std
and
mov
mov
aas
cmc
imul
jge
stc
outsl
xor
and
push
lea
into
or
push
sbb
pop
mov
stos
inc
or
or
lock
nop
outsb
data16
jecxz
push
pop
lds
xchg
adc
ret
adc
aas
add
adc
mov
cli
pop
shlb
shrl
xchg
fistpl
push
jns
jno
test
les
lea
bound
lods
mov
xor
scas
pop
mov
into
inc
xlat
popf
lcall
mov
insb
push
pop
cmp
cli
cltd
sub
aam
dec
and
pop
hlt
lods
lcall
shrl
adc
xlat
test
lret
es
add
mov
rolb
data16
cmp
xchg
and
push
sub
push
mov
hlt
in
cmc
xor
mov
std
xor
xor
pop
cmp
cmp
inc
cltd
dec
repz
test
mov
add
and
jmp
cltd
js
aad
addr16
add
push
pop
loop
xchg
aaa
add
xor
inc
sbb
add
mov
lods
push
jp
sbb
adc
add
mov
in
ja
pop
ss
sbb
push
xchg
push
ret
dec
fldl
ftst
or
ljmp
mov
cs
loopne
insb
icebp
js
xor
push
arpl
loop
xor
pop
mov
add
call
orb
cs
sbb
jne
out
dec
insb
fadds
cwtl
in
mov
adc
adc
ljmp
sub
sub
js
adc
ficompl
push
jnp
int
lahf
fwait
int
loopne
dec
insl
push
inc
sub
jns
frstor
mov
sar
mov
aam
daa
adc
sbb
mov
sbb
int
insl
dec
push
push
fadds
out
mov
mov
push
sahf
cwtl
repz
outsl
mov
orps
jecxz
mov
xchg
or
mov
scas
mov
mov
push
cs
jmp
pop
repnz
add
ja
sbb
sub
push
ds
imul
dec
cli
and
mov
or
cli
and
aaa
mov
push
pop
sub
or
nop
popa
push
cmp
test
addr16
test
ljmp
jns
xchg
mov
int
popf
inc
fcomip
clc
stc
xchg
ret
enter
lock
sbb
mov
das
cmp
dec
push
xlat
fstl
xor
bound
insb
sbbl
aam
jno
popf
or
xor
sub
push
jae
lock
add
mov
xchg
jecxz
out
fdivrs
mov
xor
or
loope
out
push
fwait
pop
lds
push
xchg
pushf
jp
out
push
fbld
push
xchg
shrl
stos
test
testl
pop
mov
and
push
insb
pop
je
xchg
adc
xor
and
pushf
push
sahf
push
xor
push
cwtl
mov
jl
dec
cmpb
pop
sbb
mov
in
testl
int3
ja
mov
das
imul
int3
mov
jne
lods
sbb
cmp
pop
mov
aad
mov
int
push
loope
mov
movsb
nop
mov
in
cmc
movsl
sub
js
or
les
fwait
addr16
cmp
lock
adc
push
xchg
sbb
repz
ror
jb
adc
lds
mov
push
jo
fisttps
cmp
das
push
jns
or
xchg
fsts
sarl
call
nop
dec
shll
pusha
jp
int3
push
scas
adc
push
call
push
int
xchg
xor
test
jns
push
push
movl
mov
sub
movsl
nop
lret
insb
push
mov
adc
or
dec
cmp
out
push
lods
jmp
or
mov
test
mov
lods
out
inc
push
ret
repnz
pop
mov
sti
pusha
add
mov
lret
shlb
xchg
push
bound
pop
cmpb
mov
push
inc
add
test
or
xor
scas
ret
icebp
jecxz
data16
sub
dec
sahf
sub
call
cmp
xor
in
pop
jl
cli
insl
adc
sahf
movsb
div
jle
push
std
rcrb
outsb
stc
scas
cmc
sub
pop
lods
add
leave
popa
dec
daa
bound
popa
iret
pusha
into
divl
push
mov
les
out
or
mov
div
mov
test
inc
sbb
pop
fs
aaa
push
movsb
out
push
mov
inc
loopne
shrl
out
fwait
jl
call
rorl
inc
test
mov
mov
enter
sbb
cs
cmp
pop
xor
sbb
sbb
cltd
or
cmp
ljmp
dec
sbb
jmpw
mov
inc
or
jns
mov
adc
data16
ds
mov
mov
inc
call
pop
adcl
pop
out
or
pop
insl
js
jbe
adc
shlb
xor
jecxz
fisttpl
in
pop
xchg
out
or
sbb
sahf
jmp
addr16
cmp
scas
movsl
push
and
daa
loop
adc
mov
sti
cmp
cmc
pop
jge
je
and
dec
into
and
jno
cli
mov
test
ret
negb
xchg
aas
push
mov
dec
nop
movsl
orl
mov
scas
ffreep
es
xchg
pop
rolb
cwtl
mov
jle
test
idivl
dec
push
xor
jae
scas
push
or
mov
iret
das
popf
dec
cld
out
fsubrl
popa
out
pop
jns
adc
loopne
jg
mov
jg
decl
cli
shr
loope
js
fisubs
inc
jbe
jae
xor
mov
call
mov
hlt
movsl
lcall
pop
push
pop
shlb
js
add
sub
xchg
stc
jg
fimull
dec
mov
pop
push
and
imul
stos
jne
xchg
push
fisubrl
dec
stos
or
push
adc
adc
jb
into
pusha
and
repz
pop
imul
jge
shll
in
push
and
xchg
mov
imul
imul
jnp
cwtl
bound
shl
jo
pop
pusha
int3
inc
push
add
xbegin
movsb
lahf
adc
ss
loope
aad
mov
push
cmpsb
scas
xchg
mov
sbb
xor
and
jmp
mov
fxch
cmp
xchg
jns
sbb
lds
int
sbb
test
int
push
lock
jmp
ljmp
faddp
bnd
inc
es
cwtl
cmpsb
add
cmpsl
sub
push
and
leave
ret
pop
popa
push
repz
dec
es
sahf
jnp
xchg
ss
insl
mov
and
mov
rorb
icebp
sahf
sbb
mov
cs
jg
pop
pop
push
dec
pop
sub
int
jg
popf
xchg
or
adc
mov
aam
scas
inc
cmp
les
fs
daa
into
imul
addb
js
testl
mov
push
int3
iret
into
out
dec
gs
jo
xor
mov
cwtl
insl
pop
sbb
out
sub
aad
stos
pop
jnp
test
rol
in
jns
mov
jmp
sbb
push
imul
rcr
add
xor
in
in
fnsave
sbb
cmc
dec
test
out
div
push
popa
loop
xchg
je
jg
adc
mov
dec
add
ds
sub
aad
in
out
sbb
push
fdivr
and
je
lcall
jle
pop
xchg
mov
hlt
xchg
jmp
or
in
inc
pop
dec
mov
add
jo
mov
ljmp
lock
cld
pusha
scas
arpl
test
push
pop
sbb
cmp
daa
mov
sbb
nop
pushf
fists
or
lahf
push
sub
dec
in
xchg
fistpll
cli
and
lds
loope
jg
xor
daa
das
or
dec
cmp
rorl
bound
lcall
sbb
pop
adc
xchg
mov
or
mov
and
lods
add
cwtl
mov
mov
sub
sbb
cmp
adc
lcall
clc
inc
andl
fistpl
inc
stc
inc
cmp
fcomps
xlat
pop
leave
or
jl
mov
xchg
jmp
mov
or
xor
sbb
push
xor
xchg
xchg
jg
mov
aas
stc
cwtl
mov
ficoms
dec
inc
mov
in
aad
emms
pop
cmp
enter
push
insl
ja
xchg
aas
outsb
dec
mov
inc
sarl
ss
gs
push
push
push
adc
outsl
lods
mov
cltd
imull
adc
inc
push
add
mov
jl
push
pop
adc
dec
xchg
test
dec
pushf
dec
xor
stc
dec
mov
xor
mov
jo
int3
xchg
ds
divl
jmp
jnp
fmuls
out
add
imul
mov
negb
mov
jge
imul
pop
lods
in
add
int3
push
mov
add
jns
sbb
mov
lods
mov
or
aam
jmp
dec
sub
or
aad
hlt
mov
pop
inc
inc
sub
add
add
or
xor
pop
fcomp
push
cltd
mov
xchg
test
push
out
ret
fsubl
xor
hlt
call
pusha
cmp
rorl
adc
dec
lret
popa
or
cltd
push
jecxz
mov
xchg
inc
sbb
pop
hlt
sbb
ret
inc
cmp
cmp
sbb
mov
or
pop
das
lret
xor
add
lret
fmuls
add
dec
insb
adc
or
ljmp
popa
push
call
mov
inc
and
pop
adc
loope
xchg
dec
in
addl
mov
and
push
incl
inc
xlat
and
shlb
insl
and
adc
add
push
jge
mov
adc
mov
add
inc
xchg
sbb
in
hlt
mov
je
fildl
cmp
scas
jne
and
push
push
pushf
lcall
movsb
out
or
scas
inc
cmp
add
cs
cwtl
lcall
sub
mov
fwait
push
addr16
popa
inc
leave
and
insl
xchg
mov
xchg
in
dec
insb
mov
fisubrs
adc
lahf
xor
into
pusha
sti
ss
adc
popa
cwtl
and
stc
push
cli
in
lret
xchg
xchg
adc
cmp
out
mov
andb
imul
push
cmp
adc
ficoml
mov
mov
jnp
sbb
or
notb
aad
sahf
cld
xchg
cmp
fcoml
cmp
xchg
mov
cwtl
les
xchg
sub
pop
addr16
rolb
in
into
out
and
iret
mov
data16
mov
jo
cwtl
dec
lret
rcll
pop
cmp
repnz
mov
test
cltd
sub
jl
mov
bound
cmp
push
mov
call
ds
ja,pt
sbb
xchg
mov
mov
cmp
inc
in
andnps
xchg
mov
mov
divl
or
mov
jecxz
arpl
movsb
sub
pop
inc
or
repnz
aaa
add
adc
xchg
mov
mov
mov
lods
add
jo
mov
jecxz
mov
loop
push
push
xchg
pop
int
rorb
xlat
es
test
addl
mov
dec
push
push
cmp
loopne
pusha
negb
rolb
jecxz
ret
push
pushf
sbb
iret
or
push
test
push
xchg
pop
je
nop
fildll
dec
in
rolb
arpl
rcrb
enter
xchg
out
aam
std
pop
shrl
shll
in
adc
adc
mov
mov
out
dec
test
movsl
xor
ds
xchg
popf
pop
popl
lock
jns
scas
mov
jnp
add
lret
lcall
adc
inc
loope
mov
call
leave
sub
add
sbb
push
pusha
pop
dec
jecxz
cmp
xchg
push
lahf
xor
xor
ds
xor
cs
mov
ljmp
mov
jmp
ja
and
stos
gs
adc
fiaddl
call
stc
xchg
cmp
pusha
sarl
cmpsl
sub
sarl
mov
sub
mov
leave
and
ror
xor
pushl
mov
rclb
jge
icebp
clc
and
xor
popl
mov
in
push
mov
int
cld
pop
daa
fdivrl
cmc
inc
and
or
das
or
pushf
mov
in
lea
mov
es
ds
push
aas
pop
xchg
adc
es
adc
cmp
pop
mov
xchg
stos
sbb
add
pop
fidivl
insb
mov
out
xchg
out
test
fbld
and
inc
inc
push
out
nop
cmp
filds
fstps
stc
adc
call
or
sub
data16
das
pop
int3
out
push
add
cmpsb
add
add
insb
push
sub
inc
scas
xor
add
insb
mov
add
fildll
popa
int
bnd
leave
popa
ret
or
add
les
or
loop
ret
enter
push
or
das
lods
xor
adc
mov
dec
xchg
ret
or
add
mov
js
cmp
aas
mov
mov
jmp
out
dec
orl
mov
sar
pop
test
xchg
push
mov
jo
mov
clc
push
insl
or
mov
lcall
or
ds
mov
xor
jmp
jecxz
mov
pop
hlt
mov
cwtl
shl
jp
jge
inc
adc
mov
mov
ret
push
fs
or
jae
mov
cmp
arpl
mov
sbb
mov
popa
shll
sub
mov
popf
sti
out
jmp
cmp
push
movl
lds
dec
add
inc
fwait
sbb
movsb
out
mov
push
cltd
adc
addr16
push
xchg
arpl
fpatan
pushf
fs
idivl
scas
test
and
push
outsl
jne
dec
sbb
es
test
adc
add
shl
pop
xchg
jo
call
das
icebp
iret
ja
push
stc
rcll
mov
xlat
push
inc
adc
xchg
js
add
xor
xlat
int
push
mov
mov
jne
sub
test
jo
xchg
ret
push
and
fistpll
dec
jno
pop
mov
imul
fcomps
mov
lcall
jecxz
test
aad
inc
pop
lret
inc
bound
int
xor
inc
jp
and
and
call
xor
and
cmpsb
outsb
dec
inc
mov
aad
aaa
out
sub
or
adc
in
or
inc
bound
sbb
inc
cmp
xchg
cmp
ds
mov
mov
push
popf
lret
lods
cmp
pop
fsub
fildl
cmc
mov
stc
int3
outsb
out
dec
adc
fadds
or
mov
shlb
mov
xorl
jl
loopne
out
mov
filds
cmp
addr16
outsb
jno
cmpsl
dec
jle
divl
stos
mov
insl
cld
stos
cli
fldcw
jbe
call
test
into
insb
mov
jmp
lret
loopne
mov
imul
cmpsb
adc
jae
shrl
popf
jnp
in
pusha
and
pop
add
xchg
xor
pop
pop
xchg
mov
push
add
mov
mov
psubd
lret
ja
mov
arpl
testb
rcrl
shlb
shlb
das
sbb
push
movsb
xor
cs
pop
or
push
fs
jb
pop
or
and
xchg
ss
mov
sub
repz
movsb
jbe
dec
jnp
data16
inc
imul
pop
jecxz
sub
sub
adc
xchg
push
cmp
add
xor
scas
lret
add
mov
inc
cmp
and
pop
cmp
adc
das
mov
and
mov
inc
xchg
dec
aas
add
fildl
jne
mov
xchg
or
xor
xchg
out
cmp
push
or
test
ljmp
int
dec
pushf
cmpb
sub
sub
xor
popa
out
mov
mov
adc
inc
or
out
lods
inc
dec
or
sar
fsts
aas
xchg
jg
ja
mov
inc
fstpl
popf
mov
imul
adc
push
repz
arpl
outsl
outsb
mov
add
pusha
and
addl
dec
fisubl
std
adc
adc
scas
popa
mov
add
mov
imul
cwtl
xor
adc
jge
jge
filds
mov
mov
mov
xchg
addr16
je
popa
out
mov
add
xchg
into
mov
mov
xor
test
push
or
or
pop
or
push
fucom
lods
inc
fsts
dec
hlt
out
or
daa
jae
mov
inc
mov
out
sti
pusha
leave
andl
mov
fisttpl
dec
inc
pop
call
push
cmc
jmp
lods
stos
sahf
pushf
mov
aad
imul
jecxz
les
sahf
inc
push
jns
adc
push
pop
scas
loopne
sbb
cmp
mov
out
popf
outsb
loopne
mov
out
or
mov
jmp
adc
scas
rolb
movsb
or
scas
and
cs
sub
test
imul
sub
inc
sbb
cmp
or
lds
jne
mov
sub
inc
adc
lahf
fmul
gs
stos
ljmp
xchg
mov
jg
movsl
repz
xchg
xchg
mov
enter
sbb
push
mov
imul
ficoml
out
lock
mov
mov
icebp
andl
adc
int
mov
fnstcw
adc
fadds
stos
jmp
cs
inc
xchg
cwtl
mov
and
pop
xchg
leave
incb
in
and
xor
lods
add
fincstp
inc
adc
or
shlb
xor
dec
xor
adc
loopne
xchg
xchg
push
dec
cmpsl
sub
jnp
fisubl
cmp
data16
fdivrs
mov
cmc
xlat
sahf
ljmp
pushf
fsubrl
daa
ds
pop
jmp
ja
mov
fsubs
in
sbb
lods
cmpsb
out
mov
pop
add
jle
push
mov
stos
call
movsb
add
jp
fbstp
adc
cmp
inc
dec
cmp
fs
ja
aaa
outsl
bound
inc
test
and
pop
lock
push
mov
or
rolb
cmp
sbbb
and
push
gs
pop
push
sub
nop
std
adc
add
int
loopne
shll
dec
adc
jnp
or
in
pop
sbb
clc
cmpsl
fdivrs
out
cmp
shl
lret
mov
xchg
push
jno
or
subb
mov
jecxz
mov
sbb
xchg
mov
enter
push
in
addl
ja
test
xchg
insl
aaa
out
xor
push
pop
sbb
xchg
adc
inc
xor
push
out
adc
outsb
mov
sub
sub
adcb
push
into
mov
mov
in
adc
fsubrl
and
pop
rcl
mov
stc
std
pop
inc
sbb
out
sbb
sbbl
dec
ret
mov
sbb
cmp
int
pusha
cli
mov
into
sub
fstpl
inc
jns
or
jb
cmp
sbb
cld
aas
mov
test
xchg
pop
lcall
push
out
and
adc
fs
aaa
fistps
mov
inc
inc
call
xchg
jbe
comiss
test
ds
xchg
mov
sub
xchg
sub
ja
xor
outsl
pop
adc
adc
fidivrs
pop
pop
ficoml
ss
pushf
sbb
adcb
adc
lea
mov
sbb
cmp
cmp
sbb
into
xchg
leave
jle
outsl
aaa
pop
dec
movsl
lcall
pushf
cmp
aad
cmp
jmp
lret
push
jns
mov
sahf
cli
cmpsl
sbb
pop
cmp
inc
movsb
popa
push
xor
mov
push
lock
pop
ret
scas
fxch
xor
incl
into
pop
lds
cs
xor
mov
jl
inc
or
inc
and
pusha
xchg
ficoml
cltd
into
inc
or
xor
mov
push
inc
mov
pop
outsl
adcb
mov
test
fst
sbb
mov
pop
sti
and
dec
loop
nop
jne
fcomps
jg
or
sbb
js
pop
dec
mov
mov
nopl
or
out
mov
mov
pop
cmpsb
push
jge
jne
jle
les
sarl
shl
enter
cld
dec
xchg
xchg
jl
mov
insb
notl
xor
pop
cmpsl
xor
lds
xchg
push
ss
xor
pop
dec
adc
sub
adc
in
sar
inc
push
in
pop
cmp
int
sbb
dec
dec
in
lret
push
mov
xor
dec
ja
test
cmc
hlt
es
add
sti
enter
pushf
je
outsl
inc
xchg
stos
lock
fbld
pop
dec
and
and
jmp
out
mov
push
out
insb
mov
jl
mov
orb
push
inc
rol
xchg
sbb
jle,pt
pop
out
fstpl
adc
inc
lods
and
pop
adc
mov
cmp
imul
gs
pop
cmp
add
lret
sti
and
and
jne
xchg
and
out
ret
mov
rcrl
add
lods
pop
or
outsb
lds
jmp
add
mov
icebp
fisubs
sub
movsl
dec
loope
xchg
fsubp
pop
cmp
fisttpl
sbb
dec
cmp
jnp
iret
loopne
lret
lock
xor
mov
es
xchg
ja
sti
outsl
sahf
das
mov
jne
gs
aas
and
push
dec
xchg
mov
cltd
lods
or
mov
mov
mov
orb
xor
icebp
or
adc
sbb
jno
add
in
xor
cmp
insl
mov
addr16
rclb
subl
cltd
and
inc
jo
push
sbb
pop
pop
lea
in
inc
pop
dec
add
dec
add
sbb
lods
inc
hlt
es
or
push
cli
xor
jb
lahf
ljmp
fcomps
pop
fcompl
fisttpll
loop
in
jle
xlat
ss
adc
in
scas
sti
xchg
adc
je
fisubl
xor
cmp
xor
shll
cs
fs
dec
pop
or
inc
xor
mov
and
jae
negl
jns
lcall
jl
add
or
sbb
fldenv
or
lea
aas
adc
sub
push
cld
jae
inc
vhsubps
popa
call
rcl
push
test
and
adc
cmp
dec
cmp
cltd
addr16
lock
cwtl
adc
negb
pop
cli
inc
test
sti
mov
xchg
jp
aad
sbb
enter
push
sub
mov
mov
les
in
daa
or
les
lds
das
push
dec
das
inc
fdivrp
lods
xchg
fs
lret
clc
aam
imul
xlat
jb
sbb
call
mov
outsl
andl
jp
aam
mov
scas
fldenv
mov
ds
sbb
lock
scas
call
xchg
cmp
enter
jle
and
push
jmp
cmp
fsts
in
testl
sbb
push
int
jae
push
or
xor
mov
pushf
jae
in
mov
in
mov
pop
xchg
pop
das
stos
mov
bound
mov
sbb
leave
jo
dec
lock
pop
xor
es
sbb
pop
es
sbb
icebp
enter
lret
xor
mov
aas
pop
mov
std
and
rol
jns
xchg
mov
xchg
sub
loope
jae
dec
jmp
fbld
inc
fldcw
les
enter
sbb
testb
or
popf
inc
mov
es
int3
xchg
xor
xor
jbe
xor
adc
rorl
in
outsb
cld
xchg
xlat
and
out
jmp
pop
es
cli
pop
or
fdivrs
mov
inc
sbb
sti
push
lock
int
pushf
inc
push
dec
cmp
out
in
add
lods
cmp
imul
cmpsl
test
cmp
pushl
mov
xchg
push
pushf
ret
xor
cmpsl
lahf
mov
enter
out
pop
xchg
and
stos
xchg
xchg
mov
pop
lahf
sbb
add
xchg
push
iret
loope
dec
call
adc
or
inc
int3
xchg
movsl
icebp
cli
cmp
ret
lock
sub
push
ja
xchg
adc
das
add
dec
scas
push
add
sahf
sub
aas
mov
xchg
mov
enter
sub
jl
and
pop
popl
fnstcw
mov
sub
jmp
inc
sbb
das
fcomps
subl
test
and
jne
fstpl
and
sbb
inc
adc
mov
push
xor
pop
cmp
test
xor
ror
enter
outsb
ror
cmp
sub
jbe
adc
in
mov
decl
and
sub
iret
jmp
inc
imul
xchg
mov
inc
andb
dec
jne
negb
xchg
inc
lea
xchg
add
dec
cmp
or
jle
movsb
mov
fs
stos
or
mov
jp
cwtl
mov
push
ret
mov
mov
jbe
aas
xchg
mov
dec
in
scas
inc
inc
test
out
push
cwtl
push
jmp
sti
jmp
mov
mov
adc
bound
lock
fsubrs
decb
negl
sti
pop
pop
stos
movsb
mov
loopne
pop
outsl
mov
pop
call
mov
inc
ja
lods
inc
cwtl
add
pop
jl
mov
mov
and
jbe
popa
aad
lret
insl
add
jbe
cli
lods
jl
push
mov
xchg
out
jne
adc
or
push
xchg
in
dec
loope
les
jo
insb
out
stos
mov
sti
sbb
mov
push
add
popa
push
call
fcmovb
lock
repz
lret
mov
enter
shll
arpl
xor
sbb
mov
mov
mov
cmc
mov
and
pop
jbe,pn
je
dec
sub
mov
inc
cli
inc
pop
aas
fwait
dec
push
push
rclb
mov
enter
in
push
cmc
vshufps
add
sub
sbb
cmp
sbbb
shlb
push
imul
es
xchg
jmp
jbe
arpl
jno
pop
pop
mov
xchg
sti
hlt
ret
out
ret
outsb
push
mov
ljmp
loop
xchg
dec
xchg
out
int
fistpl
or
xchg
shlb
lea
sbb
addr16
clc
imul
cmp
lods
cld
pop
fucompp
push
jp
xor
stos
xor
popf
push
dec
mov
subb
mov
xchg
inc
ja
rcrb
cs
stc
pushf
nop
inc
fistpl
jae
mov
push
pop
sbb
push
clc
pxor
cwtl
inc
sbb
pop
or
pusha
jp
ret
stc
lds
xchg
mov
or
sub
nop
in
popf
out
mov
jbe
shll
inc
cmc
cmc
loop
mov
add
pop
pushf
pop
daa
add
dec
into
repz
mov
ds
add
or
adc
adc
mov
xchg
mov
les
imul
lods
inc
mov
test
pop
nop
jae
fists
test
ret
in
cli
cli
mov
mov
jno
cmc
sbb
cli
ds
add
into
leave
mov
mov
adc
pop
xlat
pop
icebp
std
xchg
push
leave
pop
sub
ret
inc
insl
mov
ret
fildll
mov
and
test
mov
and
out
insl
add
cmp
xor
popf
insb
add
mov
dec
cmpsb
lret
sbb
in
sub
arpl
jns
enter
or
fisubrl
mov
fwait
pusha
cmovb
mov
jl
and
and
mov
adc
js
bound
cmp
sbb
leave
xchg
sbb
int3
push
pop
pop
sti
push
mov
fsubs
push
sarl
testb
adc
sub
and
inc
in
xchg
imul
add
hlt
adc
inc
dec
stc
lahf
cltd
clc
push
lcall
push
cmpsl
sbb
and
dec
and
jp
cwtl
inc
sbb
call
pop
ret
enter
and
mov
or
adc
inc
loopne
mov
lret
enter
fwait
xchg
out
je
std
pop
test
xor
sti
or
cmc
jp
mov
sahf
jnp
or
in
xor
test
mov
adc
dec
aas
js
icebp
adc
lret
push
sahf
jp
mov
push
cmc
xchg
es
sub
popl
rcll
test
scas
sbb
dec
out
and
push
lods
inc
fsubs
mov
fisubl
popf
pop
xor
fidivs
mov
sarl
sbb
xchg
mov
outsb
push
cld
adc
out
xor
icebp
cli
jns
mov
test
insl
pslld
push
mov
push
in
icebp
mov
sarb
cwtl
pop
xlat
fmull
lret
add
xor
mov
ret
push
rep
xchg
addr16
imul
call
mov
imul
push
shll
add
jnp
jmp
sahf
adc
and
rcr
and
pushf
push
popf
add
bound
push
lret
std
divl
sarl
cmpsb
inc
xchg
scas
popf
stos
and
dec
sahf
movl
daa
xlat
sub
cmc
jno
ret
sti
mov
fldl
fwait
sub
sbb
inc
or
outsl
sarb
scas
cmp
xor
sahf
pop
int
lahf
popa
fs
jns
icebp
jo
xchg
cmpsb
pop
subl
push
jns
sbb
adc
sub
enter
push
outsl
fildll
fs
dec
adcb
lods
jne
aam
and
and
call
mov
dec
ja
mov
or
pop
cmp
mov
pop
fisubl
insl
cs
xchg
adc
sbb
mov
xlat
adc
pop
jge
lods
or
imul
sbb
test
pop
jns
fidivrl
sub
or
mov
stc
ficompl
xor
mov
cmp
xorl
jo
xor
cld
fwait
xor
cmp
sub
stos
test
ret
add
fdivrs
scas
adc
dec
daa
add
xor
dec
push
or
outsb
mov
sbbl
mov
shlb
jb
jp
pushf
mov
and
xchg
cs
jnp
sbb
mov
pop
xor
adc
flds
jb
push
cmc
arpl
mov
mov
daa
repnz
cli
pop
loop
dec
imull
leave
sbb
dec
mov
adc
pop
cli
mov
jle
cmp
lods
adc
dec
pop
dec
sbb
dec
xor
neg
scas
mov
inc
pop
in
adc
mov
gs
add
or
jae
popf
cmp
or
into
adc
insl
and
dec
lods
cmp
or
cmp
pop
push
sbb
or
xor
mov
inc
xchg
dec
mov
mov
mov
cmp
mov
iret
mov
cmpsl
scas
mov
add
sub
mov
xchg
xchg
fsubrl
iret
ret
ret
loop
add
scas
dec
pusha
sbb
ljmp
popa
mov
rclb
jb
cltd
dec
mov
insl
mov
push
leave
shl
mov
test
int3
pop
xor
mov
jb
lock
js
add
cmc
bound
repz
cmpsb
icebp
xchg
sub
repnz
and
push
xor
loop
mov
xchg
test
push
xchg
add
sarb
das
dec
pop
xor
ss
mul
hlt
pop
dec
cmc
xor
aas
orb
stos
rcrl
setb
cs
repnz
and
mov
sahf
jae
stos
scas
ret
add
stc
frstor
mov
or
push
lahf
add
mov
andl
paddq
sub
jb
xchg
fdivl
pop
cmpsl
mov
ret
xchg
mov
sub
das
hlt
cs
or
mov
mov
sbb
cmp
jo
push
std
mov
dec
fnstenv
dec
jmp
pop
or
dec
cltd
inc
mov
push
mov
in
sub
cld
cmpsl
test
sub
popa
fwait
mov
out
pop
in
sahf
push
mov
das
mov
inc
cmp
lcall
and
pop
roll
mov
cmc
jns
out
inc
pop
iret
jnp
cmp
pop
mov
pop
mov
pop
sub
fmull
aas
jae
stc
xor
xlat
ffreep
outsb
dec
cs
subb
adc
cmc
push
mov
stc
mov
in
je
sbb
les
lret
outsb
shll
aas
mov
aaa
iret
sub
call
xor
ficomps
sarl
lahf
or
and
ja
pop
jae
push
out
test
push
out
jl
add
fsubrl
dec
mov
sub
mov
mov
cmpsb
icebp
mov
popa
outsb
mov
ss
add
jmp
cmp
inc
std
xchg
sub
std
ret
jnp
xlat
and
loopne
or
xorl
notl
and
xor
fisubrl
mov
cmp
push
orps
test
dec
testl
hlt
inc
in
aas
add
bound
sub
pop
push
push
iret
stos
and
fnstenv
imul
fwait
imul
data16
loop
cmpsl
notb
mov
mov
in
and
rorb
test
sar
stc
sbb
hlt
int3
mov
add
test
pop
mov
fldt
outsb
clc
fstpl
adc
xchg
mov
jb
clts
fldcw
adc
filds
cmp
into
jno
dec
movsl
xor
fcoms
pop
shlb
jb
push
aad
andl
cmpsb
call
cmp
jae
mov
test
mov
adc
es
pop
pop
insb
loope
xchg
test
pusha
out
mov
mov
in
sbb
sahf
and
data16
in
add
leave
xchg
adc
sbb
popaw
lds
in
sub
in
stos
cld
adc
adc
dec
sbb
cmp
dec
push
test
dec
and
add
cmpsl
iret
jb
mov
sti
into
pop
iret
arpl
incb
sub
push
pop
lds
aam
shll
xchg
jg
andb
add
xchg
addr16
sbb
mov
jno,pt
lahf
test
xchg
fbld
jae
fildl
jmp
ret
rcr
mov
mov
les
dec
add
ds
lock
sbbb
cmp
aaa
std
add
adc
push
je
sahf
jmp
test
imul
sbb
leave
std
push
dec
gs
xchg
sbb
pop
ljmp
jns
out
xchg
xchg
mov
mov
and
mov
sbb
stc
pusha
sub
in
dec
push
fwait
dec
sbb
xor
mov
test
push
dec
sub
jle
sub
jle
nop
ret
or
data16
test
out
inc
imul
fildl
add
outsl
lahf
loop
fcomps
mov
or
idiv
popf
mov
fimull
mov
jge
push
fstl
data16
pop
and
pop
sti
pop
stc
and
fstps
fcmovbe
jp
or
je
xorb
pop
jns
jge
push
mov
imul
leave
add
pop
mov
mov
sti
test
mov
add
lahf
xchg
adc
jmp
or
and
xlat
popa
sahf
xor
xchg
les
arpl
mov
fistl
dec
cmp
adc
adc
pop
js
mov
sub
mov
jp
inc
test
or
pop
xchg
xchg
mov
pop
notb
pop
lods
push
xchg
nop
sti
out
jb
jg
imul
pop
xlat
mov
lea
add
xorb
jbe
pop
jecxz
push
loope
pop
pop
sub
sub
adcl
jl
push
adc
cmpsb
test
cmp
movsl
out
mov
repnz
xor
shll
push
scas
or
mov
mov
test
inc
cmc
sbb
xor
xor
leave
jecxz
in
stc
cmp
out
fcmovnu
cmpsb
lock
enter
sub
lods
cltd
push
aas
cli
push
inc
jae
or
xchg
push
sbb
sbb
iret
test
mov
mov
mov
mov
fwait
push
inc
xchg
pushf
mov
js
clc
sbb
sub
std
xor
pop
jl
xchg
and
lods
mov
into
jle
mov
call
shll
loop
std
movd
into
xor
jbe
movsl
mov
das
mov
pop
outsl
mov
adc
pop
fisubs
lret
lods
out
lret
and
push
push
push
jmp
bound
cmpsl
inc
sub
mov
sti
sub
lcall
adc
or
sarl
sti
dec
popa
dec
mov
ja
add
and
cmc
jmp
mov
xchg
mov
lret
xor
out
xor
xor
mov
push
dec
xchg
inc
sbb
aam
jne
cmc
fbstp
sti
out
mov
call
jmp
fsubl
mov
mov
movsb
mov
cmpsl
inc
into
shl
aas
shlb
popa
jbe
mov
leave
cwtl
loope
les
mov
xor
sbb
cwtl
das
jae
rorl
mov
lock
insb
xlat
aaa
cmp
bnd
xchg
sub
ret
inc
insb
adc
enter
popa
adc
shll
push
in
popa
inc
and
inc
mov
or
fldcw
push
mov
jb
jg
xchg
cmp
mov
les
data16
int
add
mov
mov
jo
sbb
jmp
xchg
je
pop
mov
movsb
jae
es
push
sbb
inc
fucomi
jmp
sub
cld
xor
ja
jle
dec
jnp
cmp
cltd
mov
into
in
cmp
and
mov
and
lds
pop
cmp
bound
mov
push
lods
inc
test
in
ljmp
dec
das
or
inc
bound
mov
and
scas
outsb
xchg
or
cmp
pop
aam
idivl
mov
mov
in
popa
ret
pushf
stos
dec
lret
xchg
flds
cmp
insl
xchg
test
xor
pop
in
pushf
dec
fmull
out
repnz
scas
push
int
cmpsl
mov
adcb
sub
xor
movsb
rorb
xorl
xor
aad
pop
inc
cmp
lea
call
mov
sbb
sub
cmc
xor
push
cmp
jecxz
mov
ljmp
roll
jno
mov
adc
xchg
lds
sbb
fwait
pop
out
pop
stos
das
in
mov
push
inc
addr16
jle
sub
adc
pop
cmp
xor
lea
lods
hlt
rcll
mov
mov
cmp
cmp
stos
jge
leave
cs
xchg
das
cmc
pop
xchg
jb
jl
pop
repz
xor
dec
lds
arpl
mov
sub
shll
add
dec
fists
bswap
clc
sub
aad
push
mov
jmp
dec
sbbl
orb
dec
pop
add
jns
mov
fucomip
call
out
lret
cmpsb
jle
outsl
mov
cmp
fdivrp
mov
test
test
mov
xchg
xchg
xchg
enter
jo
push
jl
scas
hlt
leave
data16
pop
dec
mov
sub
mov
lea
scas
mov
adc
cmp
test
movb
jb
xor
lret
xchg
inc
dec
jb
outsb
cmp
sbb
pop
outsl
sbbl
jbe
cmp
mov
loop
stos
mov
jl
adc
sti
xchg
pop
in
test
xlat
in
cli
adc
mov
push
les
jae
test
pop
xchg
scas
sbbb
adc
lret
dec
je
je
jecxz
xchg
jb
popa
push
jns
je
lods
out
insl
mov
and
clc
js
mov
xchg
in
cmp
or
mov
xchg
adc
mov
xor
lea
lret
fs
movsl
arpl
xchg
icebp
jge
cmp
divl
mov
in
sub
repz
mov
lods
mov
inc
jnp
stc
daa
jg
or
jbe
adc
stos
dec
inc
inc
sbb
fstps
mov
mov
sub
sub
fsubrs
and
xchg
leave
add
push
mov
lds
adc
pop
push
mov
adc
sbb
pop
inc
jge
addr16
loopne
sbb
push
xchg
cli
mov
repnz
adc
pop
push
testb
cld
ljmp
jmp
or
and
add
sbb
sbb
xchg
mov
orb
cmp
mov
jmp
xor
mov
push
test
std
mov
xchg
xchg
xchg
pop
sbb
loop
mov
arpl
add
fildl
rolb
es
push
cmpsb
and
pop
aaa
jo
push
jl
out
xchg
ss
pop
scas
test
mov
mov
mov
imul
gs
mov
stos
cwtl
arpl
orl
test
lock
adc
cmpsl
mov
shlb
sbb
jg
inc
cmc
push
mov
ds
addr16
sbb
ret
and
xchg
daa
out
aaa
leave
mov
sbb
jmp
hlt
jns,pn
xchg
xor
imul
ret
adc
iret
aam
aam
in
and
push
inc
cld
cmc
dec
mov
mov
daa
lock
xchg
sub
pushf
pop
cli
mov
pushf
adc
xlat
mov
mov
mov
xchg
mov
cmp
int
jmp
out
dec
dec
clc
ret
pop
in
adc
adc
inc
cmp
sti
jl
dec
test
dec
mov
js
pop
outsl
imul
mov
fs
lret
pushf
xor
push
loope
cltd
sbb
mov
movsl
adc
xor
cmp
leave
lret
cmpsb
sahf
xchg
leave
pop
fldcw
xor
inc
mov
xchg
lret
xor
leave
xor
arpl
adcl
mov
mov
pop
fildl
cmc
jo
dec
fdivrl
cmp
adc
mov
dec
and
push
or
push
fisttps
mov
jge
push
ret
popa
jne
pushl
mov
ret
xor
in
es
push
fs
cmpsl
daa
in
mov
inc
sub
ret
jge
out
mov
hlt
in
cmpsl
rol
dec
sbb
jb
dec
or
push
sbb
std
dec
inc
jbe
jno
inc
mov
call
mov
jmp
sub
movsb
js
call
add
jbe
andb
mov
dec
pop
stos
pop
cmp
mov
and
cmp
mov
fmull
in
and
sbb
adc
sbb
xor
xlat
aaa
mov
cltd
cmp
fbld
test
mov
push
enter
in
lret
std
jb
xor
sbb
mov
out
rep
hlt
sub
xor
add
call
pop
ljmp
and
test
add
sub
lock
out
pop
inc
ret
xchg
mov
pop
cmpl
adc
mov
mov
shl
pusha
mov
mov
loopne
inc
xchg
outsb
outsl
push
je
ror
les
xchg
scas
lret
xchg
imull
movsb
jne
xlat
and
int3
mov
sub
pop
pop
xor
pop
aaa
iret
das
pop
mov
add
int
sub
sbb
cli
cld
jmp
jo
test
out
insb
mov
ja
out
lods
push
push
dec
or
adc
ljmp
mov
xorb
icebp
or
movsb
push
pop
push
loope
sbb
xchg
pusha
pop
adc
push
xor
movsb
or
icebp
inc
sub
fcoms
cmp
or
adc
nop
outsb
out
das
shrl
push
outsl
inc
out
mov
lods
fs
ret
inc
cmp
enter
adc
mov
or
lds
push
sbb
mov
dec
xor
scas
xchg
ds
aad
pop
insl
rorb
mov
pop
loop
movsb
test
jns
xchg
ds
push
push
mov
inc
hlt
cmc
ss
pop
sbb
int3
jle
filds
testb
jl
inc
xchg
hlt
xchg
fcmovne
gs
cmp
insb
and
lcall
sub
je
outsl
ljmp
mov
or
pop
mov
sbb
jno
jbe
cwtl
repnz
enter
xchg
pusha
aas
aad
push
jge
les
cmp
mov
inc
scas
into
bound
js
or
xor
in
xchg
repnz
and
xchg
jle
xor
mov
jp
jle
mov
sub
push
fs
aaa
aam
shrl
hlt
xchg
jnp
mov
cmpb
rcr
cmpsl
jo
push
sahf
mov
int
stos
in
mov
in
hlt
mov
fstpt
dec
ret
call
int
or
xlat
outsb
xor
sbb
jnp
mov
and
mov
mov
cmp
xchg
nop
in
jmp
stos
insl
jecxz
je
fcmovnu
mov
push
scas
jg
test
fadds
loope
sub
stc
jp
addl
mov
jb
xchg
or
mov
fadds
std
push
sub
sbb
loop
testl
outsl
sbb
icebp
add
aad
iret
cltd
out
nop
mov
mov
and
xor
jb
pop
movsl
mov
nop
cmpsb
aas
call
call
je
xchg
fsubs
or
mov
out
pop
adc
inc
mov
push
es
test
mov
je
sahf
mov
cmp
fldcw
mov
jbe
pushf
test
add
cmpsl
loopne
jo
insl
sbb
std
pop
popa
sbb
das
clc
or
int
mov
cmp
sub
std
sbb
cld
xor
xor
cltd
adc
mov
jp
dec
fbld
outsl
dec
divl
ja
inc
xchg
aaa
clc
pop
adc
dec
aaa
sub
dec
push
fsubr
cmp
call
adc
out
jbe
scas
ljmp
js
in
mov
lret
and
push
sti
repz
adc
cmp
or
or
jo
push
iret
pusha
jp
outsl
dec
in
mov
mov
in
fildl
mov
in
jecxz
xchg
pop
enter
add
stc
push
iret
dec
xlat
cltd
push
ljmp
je
add
cs
mov
loop
stos
mov
or
mov
mov
add
mov
jg
xchg
pop
mov
mov
mov
imul
lahf
inc
pop
out
arpl
push
mov
mov
jp
int3
loop
lcall
cmpsl
in
bound
test
and
mov
dec
push
ds
adc
out
xor
out
aas
in
jecxz
aad
int
sbb
mov
ror
mov
aaa
stos
xlat
pop
xchg
jbe
push
out
xchg
rcll
fcomps
pop
insb
pusha
repnz
mov
dec
addr16
imulb
stos
in
int3
loopne
sbb
out
mov
clc
insl
loope
dec
icebp
lock
test
push
popf
pop
pop
das
push
mov
pop
jge
and
divb
cmp
or
mov
pop
add
loop
and
pop
jp
inc
mov
jl
push
xchg
lea
pop
movsl
mov
out
inc
fidivl
out
inc
in
scas
xor
je
jecxz
inc
mov
pusha
mov
cltd
mov
ja
push
jp
mov
jae
test
xor
mov
pop
out
add
mov
out
adc
outsb
pop
dec
jnp
jns
adc
icebp
ja
in
ror
lcall
pop
fbld
xor
and
pushf
cmp
inc
and
cltd
mov
neg
cmp
jns
jmp
cli
dec
mov
in
sbb
dec
sahf
pusha
lcall
in
adcb
int3
lock
shr
mov
frstor
adc
push
sti
lock
lds
rorb
jns
les
mov
lea
aad
cwtl
pop
xchg
sti
scas
jnp
mov
mov
mov
xbegin
add
pop
push
das
ds
cmp
aaa
data16
sub
mov
orl
pop
repz
lock
pop
lds
or
ror
test
mov
mov
jp
mov
dec
xchg
fwait
cmpsb
adc
subl
mov
fadds
imul
lea
xor
ss
xchg
addb
loop
sbb
xchg
sahf
imul
or
xchg
js
ja
or
pop
ds
in
sti
pop
and
push
jns
aaa
cmp
mov
jmp
das
xchg
cld
mov
lods
out
mov
repz
jno
movsl
fwait
jae
mov
imul
and
jecxz
adc
jnp
aad
out
into
jnp
pop
test
jp
pop
sbb
in
xchg
insb
mov
sahf
pop
icebp
mov
mov
xchg
and
and
inc
sahf
int
sub
lock
push
es
lock
aam
pop
data16
or
xor
xchg
ror
out
pop
bound
inc
movsb
xchg
sub
aam
push
jne
jl
stos
dec
out
push
pop
shl
mov
sbb
push
mov
imul
popa
mov
jns
pushf
js
scas
cmpsl
cmc
jne
and
add
push
mov
aad
push
adc
sbb
and
out
je
xchg
cmpsl
pop
out
mov
xchg
xchg
rcrb
nop
jecxz
movsl
fistps
stos
lds
and
jbe
cmc
dec
jno
inc
imul
ja
cwtl
fwait
lahf
mov
movsl
mov
jbe
inc
fdivl
fdivl
mov
jae
loope
pop
cwtl
mov
mov
clc
push
xor
push
aas
repz
ljmp
in
or
push
lods
sub
shll
popa
insl
mov
push
in
outsl
add
out
add
mov
shrl
jecxz
xor
mov
pop
sub
repz
out
sub
sti
out
fsubr
fdiv
movsl
int3
mov
adc
add
push
and
jns
mov
sub
cmp
mov
adc
or
sbb
push
test
popa
adc
mov
xchg
lret
push
outsl
pop
pop
arpl
lods
sbbl
adc
cmp
fldcw
insb
xor
outsl
mov
sbb
and
je
jle
sbb
imul
push
mov
pop
or
loope
jmp
stc
imul
sub
repnz
fsubl
mov
lods
add
lret
lret
or
cli
mov
dec
mov
fldcw
mov
mov
jl
mov
add
movsb
push
xor
xchg
fadd
push
lcall
andl
popa
icebp
lea
mov
stos
xchg
repnz
iret
aad
inc
inc
or
or
lods
lods
xchg
mov
sub
mov
aaa
mov
and
adc
xchg
popw
sub
in
add
mov
pushf
push
fs
push
pop
inc
mov
aad
pop
sahf
push
ljmp
push
pop
or
scas
cld
cmpsl
ss
pop
and
sbb
sahf
fadd
push
stos
pop
xchg
cwtl
outsb
call
icebp
or
inc
pop
xchg
jb
lock
pop
sbb
sub
jp
hlt
mov
pop
or
cmp
adc
pop
aaa
or
mov
xchg
lret
orl
sbb
insl
mov
xor
push
push
out
das
sub
roll
inc
inc
lret
add
mov
mov
fdivl
push
ds
call
mov
sti
xor
dec
mov
test
fbstp
push
jne
jae
inc
mov
and
and
jno
or
jae
push
pusha
jg
out
in
testl
out
pop
cmp
scas
dec
repz
lcall
or
dec
movsl
push
fsubrp
or
pop
xchg
mov
lcall
popa
add
push
mov
idivl
dec
mov
out
dec
or
popa
xchg
jns
sub
inc
pop
lret
lret
xor
xor
inc
mov
fisttpl
push
insl
adc
mulb
mov
adc
aad
imul
hlt
jne
xchg
mov
popa
cmp
fldcw
xor
adc
xor
sbb
jnp
push
out
test
arpl
and
mov
aad
and
test
in
ficoml
mov
add
add
jle
repz
test
mov
stos
mov
inc
sub
add
ror
sbb
sub
test
cwtl
jle
mov
or
out
icebp
repz
testb
xchg
clc
pusha
mov
repz
lret
or
dec
repz
stc
lock
push
sbb
arpl
fists
inc
cld
icebp
fdivrl
dec
jmp
or
push
jmp
mov
mov
pop
shll
xor
pusha
scas
push
pop
mov
aaa
jg
pop
jbe
addl
cmp
ds
rorl
cmp
aas
loop
xor
out
xlat
sti
enter
inc
push
insb
mov
dec
jbe
adc
or
jp
xlat
mov
movsl
dec
inc
pop
jo
add
andl
lret
mov
inc
in
mov
fmuls
or
sbb
jbe
lea
pop
mov
fxch
repz
aaa
xor
jo
lods
notb
mov
imul
cmc
jnp
jmp
push
xchg
adc
and
pop
and
mov
loop
addl
in
movsl
lcall
mov
xchg
leave
popa
test
cmpsb
outsb
mov
mov
mov
dec
xor
cmp
push
jg
mov
dec
sub
mov
sti
add
movsb
insl
insb
arpl
sub
lea
fildll
xorl
out
lea
js
je
stos
xchg
cld
cld
sub
fs
lea
lcall
pushf
rorl
push
ja
arpl
dec
adc
shr
pop
cli
push
fnstcw
jg
addr16
roll
mov
or
cmp
sahf
xlat
cmp
loop
pop
dec
gs
insb
stos
out
sub
nop
push
testb
sub
cmp
bound
mov
ds
jbe
xchg
inc
xor
imul
inc
ror
adc
bound
pop
dec
lds
cmp
in
scas
add
in
loope
or
jo
jecxz
jb
movsl
jle
fiaddl
mov
ret
xchg
scas
out
shr
insb
push
and
aas
and
fucomip
int
mov
imul
insb
lcall
movsl
les
sub
popf
sbb
and
mov
or
and
lcall
sub
lods
inc
adc
movsb
and
or
into
stc
dec
imulb
imul
sub
lcall
mov
notb
mov
ret
sahf
ds
inc
dec
add
adc
dec
sti
or
mov
loopne
in
call
adc
addr16
mov
imul
add
inc
sahf
adc
movsl
mov
testl
pop
push
dec
add
sbb
insb
out
popf
aad
add
fistpll
push
clc
lods
add
dec
mov
ss
add
push
outsb
lock
mov
adc
and
lods
xor
test
jp
pop
jne
xchg
sub
mov
mov
push
add
aaa
cmp
cmp
sub
pop
add
xor
inc
dec
sbb
mov
adc
pop
cltd
jns
adc
addr16
mov
push
adc
stos
mov
sahf
xchg
lret
cmc
push
sbb
jp
movsb
aaa
fbld
xor
inc
dec
pop
pusha
xor
popf
cmp
adc
mov
and
int
outsb
dec
cmp
mov
push
inc
mov
dec
adc
call
adc
xor
cmp
scas
stos
jnp
stos
xchg
ja
adc
pop
lods
mov
sti
fidivs
adc
lods
lds
pop
mov
call
pop
mov
cmpsb
inc
filds
mov
and
mov
adc
inc
sbb
and
cmc
and
aad
dec
incb
xchg
pusha
add
or
ret
pop
add
cwtl
dec
sub
icebp
adc
out
ficoms
jl
adc
in
aad
in
mov
mov
inc
pop
mov
ss
imul
out
inc
lret
lcall
pop
test
dec
cs
cli
pop
pushf
mov
pusha
mov
sub
mov
adc
add
js
shrb
or
pusha
ljmp
mov
ljmp
fldenv
mov
sub
inc
adc
test
pop
divl
and
push
rcrb
repz
int3
jno
jecxz
icebp
dec
inc
push
stc
movsl
mov
fisubs
and
arpl
shl
lods
repnz
imul
cld
mov
insl
in
cmp
sahf
lcall
or
mov
xchg
mov
or
fmull
repz
lahf
mov
xor
ljmp
test
aas
cmpsl
inc
aas
push
aaa
fdiv
mov
cmpsb
pop
xchg
pop
xlat
sahf
xchg
idivb
ret
mov
call
ja
lods
xlat
sub
js
popa
hlt
imul
les
enter
in
mov
adc
fnsetpm(287
xor
pushf
test
pop
sbb
xlat
dec
outsl
loop
mov
dec
pop
pop
movsb
pop
outsl
xor
dec
mov
shlb
push
jecxz
jle
inc
and
sub
shrb
mov
xchg
inc
jp
push
push
adc
loop
xchg
and
xabort
loope
movsb
popf
pushf
popfw
push
or
lock
inc
push
sti
cmp
and
adc
test
xchg
pop
je
bound
testl
xchg
lret
mov
lock
mov
loop
andl
pop
in
out
push
scas
out
mov
push
sti
xor
push
daa
sbb
test
pop
mov
cs
xchg
lcall
lret
xor
cmp
mov
out
inc
adc
mov
ret
mov
loop
adc
adc
daa
fwait
paddsw
scas
iret
fcoms
cs
jg
add
sub
arpl
adc
inc
inc
pop
sbb
mov
mov
jecxz
sub
xor
and
xchg
into
lret
or
decl
mov
ljmp
pop
fmull
out
inc
xlat
pop
gs
loopne
das
push
cwtl
cs
cwtl
cld
or
es
xor
call
sub
or
sub
testb
popf
adc
test
icebp
or
push
mov
jne
mov
dec
lahf
vmovsd
ljmp
xor
imul
adc
adcb
jmp
sbb
inc
push
dec
nopl
xor
dec
aas
cs
xchg
dec
aam
mov
and
mov
ret
repnz
inc
jle
rclb
out
outsb
adc
sarb
sub
icebp
cmp
push
fistl
movl
pop
je
in
aad
jb
imul
repz
sbb
inc
or
out
insb
mov
and
cmpsl
addr16
add
imul
popl
pop
and
rcr
and
mov
out
or
and
inc
xlat
movb
and
push
orb
mov
sub
xchg
mov
pop
jns
inc
push
jmp
jne
bound
mov
mov
adcl
lock
sub
movsl
stos
mov
mov
dec
xchg
dec
or
mov
shlb
lret
mov
pop
andb
jbe
imul
xchg
xchg
mov
insb
out
arpl
imul
sbb
pop
mov
cs
cmp
lahf
insl
xchg
in
lds
xor
mov
mov
adc
jl
iret
jae
into
popa
mov
in
fdivs
outsl
shrb
in
repz
pop
adc
aas
sti
pop
call
jb
sub
sbb
push
loopne
lds
inc
lahf
or
cmp
lret
ss
in
jp
test
add
mov
inc
aad
scas
ljmp
dec
mov
push
test
lahf
mov
mov
push
enter
jg
adc
bound
ds
cmpsl
mov
test
inc
jne
loope
bound
cmp
scas
pop
mov
inc
push
mov
or
mov
and
mov
mov
jecxz
sbb
xchg
ret
sub
mov
xchg
pop
out
loopne
pop
ret
inc
dec
cwtl
lahf
or
jg
mov
add
cmp
pushfw
dec
ret
dec
and
xchg
iret
or
push
pop
add
xchg
jbe
mov
addr16
flds
movsl
stos
fwait
mov
idiv
addr16
int3
das
in
sar
sub
ss
pop
mov
mov
or
dec
je
lock
popf
lcall
fs
mov
into
inc
xor
pop
adc
shll
lret
int
pop
loop
test
inc
push
inc
dec
ds
test
sub
sub
jge
mov
jmp
inc
sub
cmp
rolb
dec
xor
dec
test
jae
cmp
cwtl
mov
ja
fwait
mov
addr16
iret
adc
cmpsb
cld
jno
xor
xchg
dec
mov
xor
pop
pop
cmc
aad
test
fs
or
and
ret
mov
mov
xor
ss
test
fmull
in
inc
loopne
repnz
repz
das
mov
arpl
aas
call
inc
flds
xchg
inc
inc
mov
mov
add
int
xchg
jmp
mov
lcall
sti
xchg
int3
shlb
mov
lahf
lds
dec
mov
into
mov
int
into
cld
fsubrl
movsl
paddsw
scas
in
pusha
mov
add
pop
outsl
scas
stos
push
in
inc
mov
xor
cmp
shlb
push
cmp
sbb
sub
int
out
jl
mov
push
xlat
pop
sbb
sbb
pop
clc
mov
dec
into
add
in
or
outsb
movsb
call
repnz
dec
das
mov
bound
cwtl
je
scas
pusha
dec
push
movsl
pop
push
dec
sub
movsb
cmc
jo
push
xchg
sbb
xor
lods
mov
mov
mov
or
jp
dec
in
orb
lahf
bnd
fdivrl
mov
and
aad
dec
movsb
fcomps
and
leave
push
pop
lret
inc
xchg
shll
xchg
dec
div
mov
mov
sti
je
idivb
mov
mov
mov
jge
xor
ja
cltd
cmp
sbb
fstpl
push
roll
outsl
pop
pushf
ficoms
sti
inc
cmc
and
inc
mov
jle
lcall
testb
lods
pop
sti
sbb
push
and
pop
loope
inc
scas
pop
gs
clc
sub
jns
jmp
out
add
mov
push
adc
mov
jne
sti
push
inc
sub
push
hlt
jnp
dec
jge
inc
int
push
enter
xor
popa
mov
roll
fmuls
stos
rorb
movl
dec
jne
outsl
sbb
inc
jno
cli
das
push
push
push
dec
mov
inc
add
push
push
cmc
and
les
mov
pop
rcl
fistpll
in
cmc
outsl
dec
mov
movsl
push
mov
mov
mov
inc
pop
pop
out
aaa
int3
rolb
jmp
add
rcll
aaa
repnz
in
hlt
mov
and
mov
inc
loopne
sbb
inc
int
rolb
enter
xchg
pop
into
cmp
fdivl
cwtl
icebp
ss
shrb
cs
int
add
inc
mov
xchg
addr16
rcll
stc
in
test
jg
xor
xchg
stos
in
or
sbb
cmpsb
cmp
cmp
js
fistps
cmp
mov
cmp
mov
mov
mov
les
shll
mov
std
sbb
push
mov
mov
push
push
xor
xchg
repnz
dec
push
jge
mov
add
int3
imul
ds
sub
xlat
ja
mov
ss
sub
push
popf
xor
and
in
subl
mov
hlt
loop
add
dec
sub
sbb
cld
in
out
and
sub
mov
cmc
cli
out
mov
xor
push
dec
lods
inc
xlat
sbb
scas
cwtl
inc
daa
test
fwait
lods
sub
dec
stos
fisubrl
pop
inc
pop
std
and
loop
clc
ja
push
jge
push
imul
mov
jg
in
xchg
mov
repnz
mov
jnp
pop
sbbb
pop
rcrl
mov
rdpmc
push
test
cmpsb
pop
add
xor
dec
sbb
inc
xor
push
fistl
ss
fwait
adc
push
iret
pusha
dec
xor
cwtl
sub
pushf
add
xchg
sub
pop
mov
stos
mov
sti
sub
cmp
sub
jle
inc
pop
popa
mov
xchg
in
pushf
ss
mov
jmp
xor
imul
fst
in
sub
or
mov
fldcw
xchg
mov
mov
lahf
jns
sbb
shr
into
cmpsl
inc
adc
cmp
aaa
push
push
dec
stos
hlt
push
out
or
repz
jge
sahf
adc
data16
repnz
xchg
test
jns
push
push
subl
cmp
mov
enter
inc
repz
or
jge
adcb
sbb
dec
cs
mov
xor
mov
xor
jne
xchg
dec
outsl
hlt
imul
mov
xchg
jo
fildl
stos
fiadds
mov
insb
popf
popa
mov
cmc
mov
lock
or
in
add
dec
push
jg
and
and
pop
mov
rorl
dec
stc
cwtl
pop
pop
sti
subb
sub
lretw
inc
fimull
mov
ficoml
lahf
addr16
jno
or
sub
cmpb
mov
jle
fstps
cwtl
data16
hlt
loopne
xchg
mov
mov
imul
mov
hlt
inc
divb
dec
stos
lods
mov
mov
pop
jnp
mov
ja
inc
add
mov
fstpl
pop
jno
rcll
dec
pop
mov
leave
nop
adc
cmp
mov
mov
xor
lods
push
lock
push
xchg
icebp
fisubrl
sbb
lcall
call
stc
adc
test
mov
mov
xchg
divps
ret
fdivl
jnp
shll
and
add
into
outsb
mov
cmp
push
adcl
int
push
fists
cmp
sub
lods
fisubl
pop
dec
rorb
inc
and
test
mov
lods
jo
ret
jnp
fcomi
add
out
jnp
push
cmp
pusha
pop
jne
leave
cwtl
dec
push
arpl
sub
sbb
cmp
loopne
addr16
adc
xchg
lods
mov
dec
ss
pusha
dec
cmp
push
icebp
rcrl
xor
in
add
lret
push
lods
scas
clc
mov
nop
in
push
outsl
mov
lds
xorl
aas
scas
dec
or
pop
cwtl
dec
outsl
in
mov
int
pop
xchg
cltd
gs
out
insl
sbb
test
pop
adc
inc
std
xchg
jle
fcmovbe
mov
pushf
lods
push
jbe
adc
pushf
scas
lret
adc
and
rcrl
and
xchg
loop
lcall
jge
loopne
popa
rclb
jecxz
jle
dec
out
cmp
adc
mov
lcall
mov
lret
or
add
xor
popa
jge
aad
jecxz
shll
add
cltd
jmp
loop
lcall
ljmp
stos
scas
in
mov
xchg
test
lret
cs
mov
js
mov
out
xchg
pop
shr
enter
mov
cltd
sti
dec
arpl
ljmp
sbb
pop
test
jmp
test
mov
mov
adc
jne
iret
xchg
xchg
cmpsl
popa
xor
fstl
std
je
sub
sarl
jno
out
mov
adc
int3
scas
push
jae
adc
aam
dec
jnp
dec
bound
popf
aaa
jae
int
push
in
xchg
mov
pop
jo
jp
popw
sub
addl
js
xor
aam
xchg
inc
pop
adc
sbb
test
fs
jmp
lods
ror
xchg
mov
pop
rorl
cmp
bound
mov
and
andl
xor
inc
xchg
aad
push
pop
daa
adc
mov
adc
mov
mov
add
adc
or
inc
xor
outsb
jnp
xchg
fnstcw
gs
je
push
jl
push
push
and
shr
jl
push
in
enter
mov
inc
mov
mov
imul
mov
outsl
outsl
mov
lret
fs
and
xchg
ss
and
dec
or
mov
mov
dec
xchg
mov
enter
addr16
dec
mov
and
push
insb
testl
jae
mov
add
aaa
mov
lea
push
dec
ljmp
inc
lahf
and
ret
aad
sbb
rcrb
xchg
inc
lahf
xchg
xor
jg
lret
test
lret
rcrl
lahf
adc
jp
enter
rorb
stc
mov
loope
insb
call
popf
and
mov
xchg
sub
es
jmp
insl
jecxz
add
jle
cmp
lret
adc
mov
sahf
jl
jo
xor
cli
mov
xor
push
fbstp
or
push
out
lcall
jl
in
inc
js
sbb
addr16
scas
pushl
jb
lea
push
pusha
and
mov
fisubl
cs
push
popf
dec
sbb
pop
push
movsl
and
lock
and
inc
pop
pop
xchg
xchg
jg
mov
sbb
cmp
xchg
lods
mulps
jo
js
mov
ja
push
in
xor
jle
xlat
fisttpl
jg
scas
add
shll
lods
fwait
cmpb
pop
leave
ja
mov
js
lock
popf
or
push
pop
and
add
outsb
cmpsb
push
int
mov
mov
ss
pop
dec
std
out
adcl
or
mov
jae
or
push
mov
push
mov
shrl
fadd
pop
imul
lods
xchg
repnz
jno
daa
pop
sbb
mov
mov
sub
sub
mov
outsb
adc
push
cmp
push
dec
and
mov
inc
dec
mov
arpl
pop
add
push
jp
sbb
sub
loope
scas
inc
mov
fwait
outsl
inc
add
dec
pop
xor
jno
int
sti
lret
int3
sbb
cmp
std
xchg
jmp
lret
fiaddl
jne
rcll
icebp
push
jge
inc
push
inc
add
clc
cmp
xchg
sbb
adc
push
test
and
rcr
cmp
nop
shr
sahf
fwait
add
arpl
inc
adc
push
leave
mull
das
pop
loop
mov
jl
shrb
fdiv
mov
scas
dec
jle
cmp
fidivl
nop
sub
cmp
fincstp
out
cmp
mov
xchg
push
scas
inc
add
sbb
fnstsw
mov
dec
xchg
xchg
test
mov
jmp
out
pop
sahf
sbb
into
inc
add
push
inc
sbb
popa
call
mov
lods
mulb
xchg
sub
xor
jp
sahf
dec
push
das
lcall
lcall
xor
mov
sarl
idivb
mov
jecxz
jp
insb
pushf
iret
hlt
insl
xor
sbb
pusha
negb
adc
pushf
mov
mov
fucomip
mov
jecxz
and
sahf
in
jle
xchg
idiv
lea
subb
or
sbb
jg
mov
lods
int3
insb
dec
mov
test
cmp
inc
inc
insl
out
cli
repnz
xchg
je
mov
adc
aas
and
cli
sub
push
push
sub
mov
push
imul
loop
mov
fmul
leave
sbb
mov
pop
fisubl
fwait
in
adc
lock
push
push
sbb
cmp
outsb
lods
mov
and
ds
and
sti
lock
mov
inc
bound
daa
adc
inc
xor
test
add
jge
decl
rcrb
icebp
lret
jno
aad
jp
cmpsb
adc
jg
mov
lods
push
fisubl
daa
adc
mov
leave
repnz
sbb
jb
push
std
jae
jmp
add
outsb
sub
fcoml
addr16
imul
cli
addr16
movsb
ljmp
or
xchg
sub
or
fwait
lods
insb
xchg
rorl
rcr
jo
jmp
mov
subb
daa
in
cltd
mov
dec
jp
cmpsb
insb
jae
inc
adc
movsb
jg
xchg
push
inc
fnstcw
fidivs
add
insb
scas
mov
jbe
ljmp
iret
pop
es
ret
mov
push
add
out
js
das
mov
scas
xchg
shlb
lret
sbb
jmp
ret
mov
or
or
push
lds
in
or
negl
lods
call
mov
pop
mov
lahf
jae
lods
or
mov
pop
adc
jno
push
jae
xchg
or
bound
mov
push
inc
lret
pop
out
gs
enter
xchg
mov
push
and
and
test
in
mov
pop
inc
jb
scas
out
sbb
sub
movsl
sti
jnp
pop
aaa
mov
xor
filds
dec
xlat
mov
jmp
enter
stc
cwtl
popf
mov
jle
jl
add
in
shlb
lret
inc
dec
imul
in
das
sbb
mov
jbe
pop
pusha
aam
mov
les
dec
or
mov
fdivs
popf
leave
in
mov
xorb
cmp
lea
test
jge
xchg
lahf
std
xor
push
fdivrs
idivl
je
dec
mov
jp
call
rclb
movsb
pop
mov
outsl
lret
sbb
cmp
dec
dec
pop
shll
sti
pop
mov
or
rcll
jecxz
adc
xor
imul
aas
popf
mov
inc
lcall
into
repnz
push
ss
xlat
cwtl
mov
nop
shlb
fcompl
fsubrp
ror
mov
imul
pop
mov
xor
add
push
lods
sub
imulb
add
frstor
ret
iret
sbb
or
or
lahf
pop
loope
orl
jmp
add
xchg
cmp
loop
divl
popa
adc
mov
test
or
xlat
inc
dec
xchg
inc
sub
dec
pop
repnz
mov
mov
lock
lds
cmpsl
mov
imul
es
rol
xor
cmp
jmp
push
sar
cmp
push
jae
imul
add
push
pop
decl
ret
cs
xor
stos
popa
mov
xchg
lret
xchg
stos
pop
lods
rcll
outsl
das
inc
push
insb
dec
mov
out
es
ljmp
insb
pusha
mov
addr16
loopne
or
jp
cmp
dec
inc
mov
mov
xlat
mov
cli
push
test
test
idiv
repz
jo
push
fisttps
sbb
push
push
or
sti
bound
jne
mov
mov
fs
lcall
and
or
pop
subb
and
mov
int3
loope
aaa
fimuls
jl
add
jno
test
adc
stos
jg
stos
cwtl
je
sub
push
je
or
negl
movsb
push
or
push
in
inc
cwtl
mov
ret
movsl
xor
cmp
adc
mov
test
faddl
in
and
mov
enter
stc
pop
leave
xchg
xchg
dec
aas
bnd
mov
gs
adc
out
test
aas
add
lret
xchg
xchg
push
repz
xchg
push
cmpsb
aam
test
test
sub
xchg
lods
pop
pop
xchg
mov
or
cwtl
or
mov
add
jne
out
nop
mov
jb
fadds
mov
and
sub
xchg
lret
stos
test
push
clc
cmp
mov
add
je
add
sarl
jno
into
inc
push
stos
xlat
pushf
lcall
testb
out
dec
add
imul
push
or
push
rcrb
xchg
jp
clc
or
dec
popa
add
test
and
mov
das
adcb
jb
jne
es
cmp
jmp
dec
nop
or
arpl
inc
or
push
mov
adc
add
mov
nop
cs
xchg
pop
mov
sub
jb
cli
mov
lock
inc
inc
push
pop
rclb
pop
or
lret
and
sbb
je
jno
jmp
cld
aad
cmp
sbb
sbb
sbb
inc
jb
test
sub
cli
jns
repz
stos
pop
inc
sub
cmp
lcall
mov
dec
outsb
or
mov
or
jae
rclb
jg
adc
xchg
scas
shll
adc
mov
pop
push
push
shlb
mov
sbb
sbb
cmp
mov
jne
addr16
mov
imul
addr16
inc
js
and
lods
xorb
sbb
mov
mov
mov
cltd
and
xchg
pop
mov
icebp
xchg
pop
fldt
pop
fxch
jne
call
cmc
adc
jne
gs
les
andl
mov
pop
sbb
or
insl
shl
cmp
lods
mov
test
adc
addb
or
int3
ss
outsb
inc
jmp
dec
mov
mov
aaa
sbb
adc
xchg
out
xchg
sbb
xor
or
sbb
lret
test
mov
aaa
and
sub
xchg
mov
fcoms
or
pop
mov
jge
stos
jge
cltd
mov
cli
sahf
or
jp
mov
dec
sbb
data16
stos
mov
add
mov
adc
test
add
sub
insb
mov
lcall
jecxz
test
mov
nop
icebp
jmp
fwait
sahf
pop
fstps
out
jns
insb
and
repz
dec
cmp
cmp
lret
inc
jle
pop
sub
nop
lret
dec
jo
adc
pop
aad
jae
jle
insl
cwtl
sbb
sub
dec
push
sti
pop
push
hlt
out
lahf
inc
ljmp
dec
cltd
psadbw
cmc
gs
jmp
repnz
rclb
and
push
int3
ja
decl
jae
pop
mov
xor
push
cwtl
in
mov
push
cld
int
loope
mov
int3
or
lcall
adcl
adc
psadbw
out
or
jo
loop
push
xchg
sub
sub
mov
out
mov
pushl
dec
popf
and
pop
dec
xorb
sbb
int3
pop
mov
insl
cmp
dec
xchg
outsl
add
mov
mov
fwait
inc
pinsrw
aad
pop
mov
xchg
int
stos
mov
jnp
push
cmp
cli
or
ret
insl
sbb
mov
pushf
inc
push
jl
jl
push
shll
imul
fldcw
mov
cli
out
jmp
push
push
inc
xor
imul
int3
shrb
adc
scas
pop
xor
lock
insl
int
adc
cmp
pop
mov
mov
fstpl
imul
and
imul
clc
jae
rcll
cmp
jbe
sahf
mov
testb
xchg
xlat
lahf
cli
inc
jl
sar
cmp
dec
jp
xchg
stos
adc
leave
xchg
inc
popa
adc
push
add
sahf
add
mov
pop
scas
and
les
fxch
inc
lock
cmp
in
mov
cmp
cs
fidivl
cmp
addb
aam
insl
int
jg
mov
int3
xchg
xchg
mov
pop
push
sub
sbb
movsb
outsb
push
mov
jl
fidivrs
push
insb
bnd
repz
adc
jecxz
xor
sbb
pushf
pop
in
jp
jle
push
xchg
xchg
push
insl
ret
paddsw
decl
lahf
mov
shrl
testb
cmpsl
and
lods
rcll
jge
add
mov
adc
imul
sbb
pushw
pop
push
aam
mov
jo
incl
pop
aam
outsb
lcall
cmp
add
aas
xchg
push
xchg
popf
mov
pop
mov
movsl
stos
popf
mov
pmulhuw
aam
pop
mov
adc
pop
cmp
out
mov
mov
movsl
inc
jae
push
sbb
test
loopne
arpl
cmpsb
mov
roll
in
and
mov
aam
jbe
xchg
repnz
xor
incl
jne
mov
push
insb
mov
cmp
arpl
fsub
sub
mov
sub
xor
test
imul
icebp
pmulhuw
ljmp
pop
sbb
lcall
mov
xor
dec
fnstenv
out
popa
movsb
outsl
pushf
lods
pop
inc
rcrb
ja
cwtl
adcl
or
or
sar
and
ret
xor
push
adc
rcl
mov
les
push
mov
in
in
ds
mov
sub
insb
pop
fld
stc
xlat
pop
mov
add
xchg
movsb
jo
mov
sub
fidivrs
fdivp
xchg
mov
pop
mov
xor
or
push
cmpl
clc
scas
pop
inc
lahf
dec
idivb
daa
or
subl
iret
xor
sbb
push
leave
xchg
xor
fidivrs
cmpl
outsb
aad
push
shrl
cmp
mov
mov
mov
sti
pusha
vmwrite
dec
add
sbb
mov
sub
sbb
inc
or
and
jno
and
loope
mov
mov
cs
push
in
fadds
in
xchg
mov
fldt
iret
mov
sbb
stc
sar
ja
cmp
fcoml
jnp
lods
in
enter
and
inc
outsb
xlat
stc
mov
movsl
cmp
adc
jae
adc
ljmp
movsl
cld
in
mov
inc
into
loope
mov
ljmp
jnp
jl
push
inc
jg
sub
aam
adcl
mov
idivl
inc
notb
jbe
push
cmp
adc
xor
sti
leave
or
lds
inc
hlt
sar
and
dec
sbb
xchg
js
inc
aam
pop
mov
cltd
lock
ret
ss
inc
adc
push
scas
mov
sbb
mov
bswap
jnp
cmpsb
adc
inc
int3
adc
dec
out
sbb
test
in
lock
std
pop
xchg
sbb
and
cmp
fdivrl
xor
mov
aad
repnz
jns
xor
xchg
inc
popa
frstor
sbb
rcrl
push
imul
push
nop
loop
add
fwait
lcall
mov
inc
lods
sbb
mov
stos
and
scas
lods
fdivr
sahf
sbb
inc
fidivl
mov
mov
xlat
push
sub
inc
loopne
cmp
jp
cmc
xorb
sbb
xor
mov
dec
inc
and
adc
push
inc
add
adc
sbb
dec
dec
xor
negb
pushf
into
jg
xchg
jp
pop
cmp
push
in
arpl
bound
ss
jae
in
movsb
xorl
ret
pusha
mov
xor
xor
ds
out
mov
loopne
out
pop
arpl
xor
add
cmc
xor
into
xchg
std
sub
cmpsl
xlat
lahf
sti
mov
and
lret
rcll
xor
leave
fbld
in
pop
jg
push
fdivrs
xchg
dec
mov
stc
clc
sbb
sub
xor
je,pt
sub
daa
ss
aaa
mov
mov
aaa
pusha
push
fs
dec
sbb
je
sub
xchg
lret
lods
adc
inc
jnp
mov
outsb
inc
xchg
jp
adc
or
inc
xor
mov
dec
inc
int3
sbb
pop
pop
inc
xchg
jb
xor
cmpsl
ss
out
jns
pop
testb
aam
or
push
push
adc
pop
and
jl
outsl
mov
popf
mov
inc
sti
shrl
add
push
into
sahf
or
jnp
adc
xchg
jb
dec
or
cwtl
jp
int
mov
repz
mov
call
xchg
cltd
stos
push
xchg
sbb
sahf
int
mov
fmulp
pop
fidivrs
hlt
dec
xorb
jns
stos
js
sahf
test
movsl
lcall
sbb
icebp
xorb
adc
xor
mov
jp
fadd
mov
jo
stc
jmp
fs
mov
int
jge
ss
jp
cmp
mov
sbb
cwtl
lods
jle
leave
mov
sub
fstpl
xchg
push
call
pop
and
je
sbb
das
xchg
addr16
push
or
mov
jns
mov
repz
js
inc
add
aam
mov
es
gs
mov
inc
add
add
and
push
fstp
std
in
push
dec
test
jns
lea
xor
les
fbld
cmp
cli
call
outsl
mov
sti
aas
dec
sbb
push
enter
mov
lods
stos
push
adc
xor
jmp
movsl
out
add
push
mov
sti
cmpsl
xchg
sbb
dec
dec
movsb
jo
aaa
in
sub
sbb
xchg
push
sarb
rolb
dec
orb
mov
mov
aaa
inc
fstp
push
sbb
stos
in
push
lret
xchg
push
inc
add
pop
sbb
or
imul
in
cltd
pop
aam
jne
mov
mov
xchg
push
je
aam
adc
ljmp
cmp
loop
add
mov
mov
rcrl
repz
xchg
sti
inc
mov
mov
test
mov
lret
push
adc
xchg
sub
xlat
xor
shrl
xor
subl
add
in
in
jae
xchg
dec
data16
jg
cmpsl
push
das
ret
and
sub
js
mov
pushf
rclb
jl
or
gs
and
sub
dec
aad
and
add
loopne
pop
mov
push
out
sbb
pushf
cwtl
pop
xor
add
push
jae
imul
pop
nop
mov
mull
popa
sbb
xchg
mov
ds
out
sub
lock
lods
jmp
aad
clc
mov
mov
xor
test
imul
adc
add
mov
fldcw
pop
jge
pop
in
adc
push
rcll
clc
popf
testb
sub
dec
pop
dec
push
push
push
unpckhps
rolb
bound
mov
xchg
mov
jne
or
cmp
addr16
mov
inc
or
movsb
dec
xchg
out
aam
int3
xchg
jge
bound
push
xchg
cwtl
xlat
leave
and
cmp
lods
outsb
sbbl
jb
cwtl
jo
mov
int
adc
pop
jle
mov
neg
ljmp
mov
xchg
nop
dec
popf
mov
outsl
lods
add
xor
lret
mov
rclb
daa
sahf
fstpt
jge
inc
pop
push
jle
mov
fdivr
in
add
inc
cmp
jae
call
fildl
jae
inc
ljmp
xor
or
hlt
xchg
divl
sbb
lcall
push
add
xchg
xor
xchg
fcoms
arpl
xchg
push
rcll
jnp
sbb
push
inc
sub
mov
mov
xchg
xchg
mov
mov
sbb
repnz
dec
pop
mov
fsubrl
jae
or
pop
loop
and
loopne
jo
mov
sub
insb
out
cli
arpl
leave
sbb
inc
sub
or
mov
cmpsb
and
jmp
inc
inc
in
fsubs
mov
jp
xchg
into
xchg
mov
add
les
test
xchg
mov
cmp
xchg
pop
les
and
lds
cmp
xchg
xchg
and
jbe
pop
ret
pushf
add
cld
jmp
inc
mov
addr16
sub
dec
psrlq
aad
mov
pop
sbb
push
in
aam
popa
mov
andl
sbb
jbe
sahf
and
repnz
inc
mov
cs
cmp
jmp
add
sti
pop
imul
and
xchg
shlb
jae
repz
sti
std
push
mov
lret
cs
outsb
or
mov
aas
fadds
pop
fmuls
cmp
sbb
scas
cmp
dec
ja
push
pop
xor
rcll
xor
or
fsubs
sarl
pop
mov
rol
pop
icebp
adc
js
adc
ja
jmp
fucomp
js
push
lock
mov
insb
fmul
mov
jl
push
lahf
push
and
insb
push
pushf
pushl
insl
or
cmp
sarl
jns
lahf
repnz
fcompl
xorb
shl
add
imul
mov
cld
adc
push
sahf
dec
lret
and
nop
sub
lds
fwait
in
pop
jle
insb
xchg
test
sbb
add
out
nop
xlat
add
icebp
mov
pushf
dec
int
dec
aaa
push
jns
mov
fsub
sbb
xchg
cs
adc
xor
push
mov
js
pop
rorl
mov
iret
cmpsl
sbb
dec
ret
repnz
js
sahf
sub
mov
rol
inc
nop
jbe
and
sbb
in
xlat
dec
lret
lea
add
add
rcrb
das
aad
dec
sub
pop
nop
or
inc
ror
andb
mov
xor
outsl
and
sti
push
dec
add
ret
nop
popa
mov
or
fdivrl
cld
flds
dec
sahf
hlt
clc
std
negl
lock
pusha
add
lcall
push
test
cltd
push
mov
inc
rolb
in
into
and
push
ss
mov
mov
xchg
out
xor
imul
ret
leave
movsl
arpl
sar
pop
dec
out
cmp
insb
call
ja
cmpl
cltd
or
xor
aas
cltd
in
jb
popa
xor
movsl
xchg
outsb
jmp
sbb
popa
repz
and
test
mov
and
jo
mov
xchg
std
mov
add
and
aad
xchg
push
push
test
dec
in
sbb
dec
popfw
imul
stc
and
or
push
xlat
or
dec
inc
jns
mov
lret
scas
push
cmpsl
push
mov
dec
test
lods
scas
in
cli
loope,pn
cmc
mov
imul
add
mov
aas
lods
stos
dec
mov
dec
ret
xor
dec
inc
jno
aad
icebp
cmp
sar
movsl
sub
inc
out
fs
sbb
jno
adc
stos
stos
addr16
sub
cmp
in
lret
std
mov
mov
xlat
outsb
xlat
das
pop
loope
jmp
arpl
xorl
cmc
inc
repz
iret
lea
and
divps
cltd
jge
jecxz
pop
ds
xchg
mov
leave
cmp
mov
mov
cwtl
sub
jae
xchg
repz
push
sub
cmp
into
mov
test
mov
aam
insl
notb
je
mov
out
dec
jle
push
mov
fstpt
sub
subl
ret
mov
lea
cmp
mov
xchg
out
insl
mov
pusha
stos
arpl
in
dec
cmp
cli
or
leave
movsl
and
imulb
jae
and
popa
mov
shr
push
lcall
insb
insb
icebp
jae
push
stos
lods
clc
insb
sbb
nop
and
xchg
out
inc
pusha
mov
lret
sbb
ss
adc
leave
fisttpl
inc
dec
fs
xchg
jno
dec
push
sub
outsl
das
pop
lock
lds
sub
imul
data16
cli
and
faddl
mov
ret
fs
mov
mov
mov
lcall
xchg
popf
mov
sub
pop
xor
xchg
roll
xor
ljmp
mov
aas
sub
stc
or
jge
lods
jo
sub
in
mov
dec
inc
lods
arpl
and
jne
jg
mov
ja
push
aam
mov
xor
sbb
mov
add
pop
sbb
mov
aam
ja
push
sub
fs
xorl
pop
mov
pop
and
xor
jno
pop
scas
and
lea
push
in
movsb
scas
std
sbb
sarl
ja
and
cmpsb
push
nop
xor
roll
inc
mov
outsb
aam
mov
jo
mov
mov
xchg
pop
push
add
les
inc
int3
fmul
mov
jle
and
lcall
sbb
sbb
test
cmp
sbb
push
fwait
jecxz
pop
in
adc
jg
repz
xchg
xchg
push
lods
nop
push
jb
add
test
jg
ret
or
adc
pop
fcomp
aad
dec
mov
fiaddl
fadds
movsb
or
not
cmpsl
mov
inc
or
inc
js
ret
stos
lea
nop
jo
pop
cltd
scas
cmpsb
adc
ds
xor
dec
shrl
xchg
ficoml
mov
rolb
xor
int3
fsub
xchg
mov
out
sub
mov
xor
lahf
sub
pop
outsl
out
inc
dec
jo
pop
outsb
repz
sub
ja
sarl
in
push
dec
cmpsl
int3
outsl
or
lock
inc
arpl
cmpsl
lret
sar
adc
out
in
lods
dec
inc
sbb
push
dec
test
or
repz
pop
cmp
ret
dec
xchg
push
lret
adc
xchg
dec
lret
aam
xchg
data16
ja
pop
add
cmpsb
repz
or
int3
xchg
pop
xor
fs
inc
sub
dec
jnp
test
cmp
imul
jo
jecxz
add
push
idiv
in
sub
mov
pop
pop
in
xor
cwtl
int
jmp
jg
aad
imul
pop
push
std
and
lahf
mov
xchg
and
hlt
lret
pop
addr16
push
fmull
and
push
inc
push
xor
stc
repz
jae
lods
push
repz
out
xor
stos
cmp
inc
les
nop
xchg
ss
xchg
adc
sub
jnp
cmp
arpl
mov
shlb
or
cmc
push
stc
adc
test
addr16
fs
mov
sbb
xchg
cmc
adc
jle
out
into
je
mov
fistpl
jne
mov
mov
dec
jnp
mov
add
jns
inc
nop
xchg
xor
cmpsb
sti
shlb
push
and
shlb
lret
in
xorl
aas
xchg
cmpl
inc
dec
jle
and
xlat
sub
dec
xchg
pop
in
pop
vpmovzxbw
imul
shl
hlt
lcall
or
xor
dec
mov
add
arpl
out
xchg
scas
clc
jno
xchg
lods
lcall
sub
mov
and
fadd
lahf
mov
sub
lcall
inc
sub
jmp
decl
xchg
cmp
pop
repnz
and
test
xchg
scas
mov
fstl
outsb
cmp
imulb
or
inc
popw
aad
clc
fnstenv
addr16
pop
std
xchg
adc
out
mov
pusha
lret
xchg
xchg
in
test
xchg
dec
pop
push
pop
adc
test
or
jge
inc
sti
sbb
cmpsb
roll
jmp
adc
pop
and
rclb
push
pop
sub
push
jge
cmp
dec
dec
sub
ss
fstps
push
dec
in
dec
mov
sbb
adc
mov
and
fidivs
lret
testb
lahf
push
jg
pop
popa
pop
xor
sar
gs
and
imul
inc
loop
and
frstor
and
out
into
fidivs
ror
fstpt
pushl
lock
cmp
pop
add
rorb
jp
xchg
mov
arpl
sbb
imul
cmp
inc
shll
jl
out
aaa
lret
mov
pop
jge
divb
test
jge
pop
xchg
rorb
adc
into
fnstcw
push
nop
cmp
and
test
fnsave
mov
mov
fiaddl
and
test
cmp
sub
ljmp
popa
outsl
insb
push
xor
add
add
ret
shrb
adc
cmc
cmc
cmp
push
xor
daa
mov
jmp
fcoml
mov
mov
test
hlt
adc
xchg
jecxz
mov
xor
outsb
lcall
adc
mov
enter
ret
std
aad
and
imul
and
fnstcw
scas
push
sub
fsubs
mov
call
inc
bound
cmp
enter
scas
sub
fsqrt
mov
dec
test
lret
fmul
mov
jmp
xchg
pop
pop
xchg
fldcw
aaa
pop
es
mov
ss
sbb
xchg
ror
fnstenv
jne
mov
pop
clc
pop
fcompl
cmc
pop
es
int3
add
imul
lods
repz
ljmp
push
fdivl
inc
xor
mov
mov
fwait
int3
cld
cs
pushf
push
sbb
xchg
ret
mov
add
out
pop
push
mov
push
rclb
sub
cmp
popa
dec
aaa
aad
xlat
jb
mov
es
out
xorl
add
add
mov
push
pop
je
dec
jp
sbb
dec
xor
add
lods
pop
movsb
andb
or
xorl
mov
shll
lret
int
push
icebp
js
insb
aad
sti
sti
loop
cld
popl
inc
testl
call
jmp
xor
push
pop
sbb
and
jge
xor
xor
or
sbb
cs
pop
fistpll
adc
mov
jmp
sub
test
sub
push
repz
lods
sbb
int3
lods
rclb
mov
shrb
mov
adc
pop
inc
pop
or
outsb
scas
and
push
mov
push
adc
stc
xor
enter
xchg
jnp
mov
loopne
cltd
loop
or
push
mov
enter
filds
adc
sbb
jbe
inc
cld
dec
rcll
mov
movsb
push
std
data16
cwtl
add
xchg
jg
int3
mov
sub
pop
sarb
stos
rorb
dec
adc
pushf
xchg
push
ja
stc
push
adc
bound
popf
imul
int3
xchg
lds
movsl
jp
mov
lock
clc
sub
xchg
out
pop
lcall
std
loop
inc
push
mov
insb
sub
push
mov
lret
jnp
lahf
push
repnz
xor
and
arpl
out
xchg
aaa
out
pop
push
mov
out
loope
nopl
test
shll
stos
cmp
sbb
lds
loope
mov
je
or
test
adc
sti
xchg
sbb
cwtl
pop
aaa
mov
fs
mov
adcb
mov
call
shrw
sti
pop
mov
cmp
stos
lahf
dec
sbb
cmc
dec
xchg
push
lock
test
mov
icebp
jecxz
and
mov
ja
adc
lods
push
pop
pushf
dec
dec
mov
mov
int
clc
loopne
and
rcrl
mov
repnz
movsl
or
int
jle
lods
dec
and
imul
cltd
sub
inc
les
data16
call
mov
jo
or
jo
sbb
and
push
int3
cmp
les
sub
inc
movsb
fistpl
ror
fucom
fdivs
mov
dec
and
xor
mov
sti
pop
pop
in
xchg
inc
jmp
push
arpl
dec
sbb
ds
out
lcall
das
or
lcall
cmpsl
cmp
icebp
cmc
pop
sahf
fs
fcompl
cmc
fucomp
xchg
xchg
roll
ret
or
insl
and
pop
cmp
mov
sbbl
addl
mov
insl
xor
and
adc
lods
cld
pop
mov
jge
mov
ljmp
cmpb
rorb
lret
xor
mov
mov
aad
add
xchg
inc
mov
sbb
inc
test
daa
mov
out
mov
xchg
jmp
xchg
mov
imul
push
imul
inc
fidivrl
mov
hlt
inc
repz
aam
jmp
aas
pusha
lcall
aad
mov
xchg
ret
data16
int3
vpshab
sub
cwtl
test
sbb
inc
movsl
aas
cld
in
icebp
push
inc
mov
das
pop
daa
ret
das
das
xchg
mov
aad
add
mov
leave
clc
ret
lahf
dec
daa
in
dec
pop
shll
cmp
sahf
mov
jecxz
adc
pop
mov
mov
xor
mov
sub
push
mov
rolb
xchg
sub
add
out
sbb
out
mov
popa
jle
push
sbb
xchg
hlt
pusha
mov
out
andl
loope
jg
push
adc
scas
xchg
xor
aas
jnp
fimull
aaa
das
sarb
or
cltd
mov
mov
push
sub
xor
in
sub
push
lods
imul
lea
adc
sbb
xchg
or
aas
push
fists
scas
pop
jle
adc
fdivl
inc
mov
xchg
cmp
pop
lret
pop
addr16
cmp
xor
enter
movsb
shll
stc
inc
jae
stc
pop
push
shll
sahf
xchg
or
cmc
and
cmp
pop
sbb
sub
jecxz
mov
lcall
mov
shll
test
jl
sbb
sbbl
xor
mov
fs
mov
je
jne
cmp
repz
je
mov
jmp
loope
gs
dec
lea
scas
mov
or
outsb
sti
imul
xchg
dec
roll
sub
and
sbb
lods
js
adc
insb
imul
mov
negl
inc
das
cltd
cmp
pop
xchg
inc
jns
mov
enter
dec
lret
mov
lret
nop
loope
jns
into
out
mov
xchg
lods
ret
mov
lahf
xor
sti
int
dec
pop
cmpsl
mov
loop
cmpsl
jo
push
ret
inc
cmp
loopne
and
iret
or
enter
mov
lahf
mov
aad
je
add
arpl
xchg
cmp
jl
jno
jg
cld
dec
inc
gs
imul
shrd
sub
pop
jno
std
add
sub
out
ficoms
test
popf
or
test
jo
inc
hlt
or
jns
dec
les
jno
mov
xor
jle
xorl
cmp
push
loop
fldcw
push
add
fildll
insb
sbb
inc
das
push
shll
sub
mov
dec
jle
push
push
shl
push
rorl
imul
jb
repz
xor
mov
push
xchg
test
imul
jns
xchg
xchg
fucomi
mov
and
sub
mov
lret
aam
mov
fld
test
or
adc
shlb
in
mov
pusha
mov
dec
enter
ja
dec
xor
fwait
and
mov
sbb
sahf
dec
jecxz
sar
and
leave
mov
adc
clc
dec
cmpsb
dec
outsl
xor
iret
jecxz
inc
jmp
int3
fstpt
sarb
mov
adc
ret
jp
dec
mov
mull
aaa
inc
aam
sub
rorb
mov
pushf
xlat
mov
cwtl
add
xchg
push
test
xlat
sbbl
cmp
adc
cmp
lods
ds
mov
popa
push
mov
ret
and
pop
cmc
mov
dec
push
xchg
clc
push
cmp
fstl
sub
outsb
mov
das
pop
inc
sub
fs
xchg
test
xchg
ficoms
adc
test
jne
mov
test
sti
xor
insl
add
lret
jecxz
dec
adc
push
or
jg
icebp
pop
stos
add
enter
ja
imul
out
or
roll
je
scas
jle
cmp
ja
push
cmpsb
loopne
leave
and
cmpsb
mulb
mov
les
xor
negl
insb
lcall
and
add
test
jno
cmp
jmp
push
xchg
ljmp
cltd
sahf
lahf
jae
mov
movsb
out
sub
pushf
fistps
idiv
mov
lds
cmp
mov
adc
fdivrp
fcomps
in
add
xchg
adc
data16
addr16
jmp
xchg
push
sahf
sahf
rolb
jmp
out
stc
aaa
xchg
adc
jmp
inc
inc
cmpb
xchg
divb
test
push
mov
inc
stos
test
inc
or
popa
orb
test
out
cmpsl
inc
mov
mov
shl
and
ds
inc
cs
out
cmp
repz
mov
aad
les
aaa
xchg
clc
lock
imul
lret
sti
pusha
fmull
cmpsl
mov
insb
into
xchg
das
inc
in
insl
sbb
or
inc
pop
lds
push
lea
nop
ret
xchg
jbe
sub
das
jecxz
fists
pusha
mulb
insl
dec
lret
sub
fadd
mov
inc
adc
lret
and
mov
add
aam
test
out
popa
dec
add
andl
test
or
gs
jno
test
cmp
ja
int3
movsb
sub
mov
mov
xor
mov
mov
out
jmp
pop
xor
mov
pop
sbb
add
mov
pop
mov
mov
clc
push
jmp
insl
or
movsl
and
sbb
std
nop
stc
fsts
cwtl
icebp
xchg
in
and
movsbl
adc
push
push
xchg
xchg
mov
adc
rorl
repnz
xchg
adc
shrb
xchg
dec
les
xchg
cmpsb
cwtl
in
sbb
adc
mov
cwtl
xor
or
xor
imul
jo
hlt
sub
mov
push
pop
je
xchg
insl
push
push
pop
mov
in
mov
xchg
lahf
fisttpll
cltd
ret
lea
cmpsl
sahf
cmc
mov
sti
adc
pop
movsl
orl
imul
fidivrs
cld
xchg
lret
cmp
ljmp
cmp
xchg
insb
call
pop
mov
xchg
push
mov
in
mov
loop
movsl
pushf
dec
orl
ljmp
int
in
mov
pop
mov
ficoms
arpl
jne
sub
add
aas
mov
loope
mov
addl
daa
mov
add
push
cs
out
das
or
cmc
sub
int3
stc
test
punpckldq
cmpb
jge
inc
add
addr16
add
addr16
mov
fimuls
dec
inc
cmp
push
jae
testb
xor
sahf
stos
das
sarl
clc
mov
clc
or
test
sbb
or
pushf
mov
xchg
int
lret
rorb
jle
sub
pop
in
incl
pop
xor
jg
and
mov
daa
lret
mov
inc
push
and
jo
mov
mov
sbb
cli
cmp
outsl
adc
hlt
jge
jb
ds
sub
inc
stos
mov
bound
cli
stc
loop
jle
fiaddl
pop
scas
jbe
pop
xorb
cmpb
jge
cli
fbld
loopne
inc
push
ja
notl
popa
dec
ror
inc
leave
shrb
fwait
imul
ret
fisttpl
jl
cmp
mov
sub
pop
or
inc
mov
lret
adc
add
cmc
sub
out
dec
hlt
adc
and
jb
fildll
sbb
jg
cmp
mov
cmpsb
cwtl
push
iret
cmpsb
jmp
call
incl
push
cmp
xlat
sbb
adc
je
xor
call
mov
es
mov
dec
jge
lret
cli
cwtl
push
clc
sbb
jecxz
cli
xor
jae
sbb
arpl
arpl
xchg
push
pop
ror
inc
xchg
test
rorl
jmp
push
sub
pop
push
stos
xchg
and
hlt
shlb
cld
inc
lret
out
xor
repz
pop
and
icebp
jns
lods
sbb
sub
andl
icebp
pop
xchg
add
push
xlat
mov
mov
sbb
push
mov
into
insb
pop
cmpsl
lret
sarl
mov
xlat
cltd
push
sub
pop
popa
ljmp
pop
scas
jo
ds
insl
sbb
push
xchg
inc
jo
lods
mov
dec
repnz
push
dec
mov
and
es
adc
inc
lods
push
jo
pop
pushf
lock
inc
jle
xor
sbb
mov
adc
imul
push
daa
jo
sub
out
fsts
sub
dec
jmp
jne
pop
dec
dec
int3
movb
shrb
lock
in
fcompl
pop
stc
dec
lds
mov
add
arpl
inc
inc
pop
fmul
or
mov
stc
je
mov
daa
pop
call
pop
mov
clc
add
imul
ja
jnp
sub
repnz
das
pop
test
adc
pushf
sbb
inc
xor
add
cltd
mov
loopne
xor
mov
xchg
movnti
out
cmp
pop
jns
mov
and
loope
fsts
inc
dec
int3
shll
add
jo
clc
fnstcw
rorl
sbb
js
sahf
in
cmp
mov
int
mov
mov
inc
jb
fcoml
ds
cmp
scas
fwait
xor
mov
mov
mov
fs
jecxz
mov
sub
inc
xchg
aad
shlb
pop
sahf
fdivrs
adc
and
arpl
into
scas
cmp
out
lret
adc
sbb
push
and
inc
call
lods
push
cmp
mov
sbb
xor
mov
inc
or
and
sti
add
sub
inc
lods
dec
and
jle
sub
mov
pop
cld
stc
insl
ja
div
xchg
cltd
xchg
imul
cwtl
sub
cmp
mov
mov
mov
jl
mov
jmp
mov
sti
jle
in
xchg
in
into
aas
ret
adc
nop
push
pop
inc
or
gs
xchg
xor
or
cmp
fstpl
mov
pop
jnp
scas
test
lcall
mov
inc
lea
stos
lods
adc
mov
xchg
test
shlb
sub
lods
ret
lea
cmp
test
mov
pop
sub
stos
sub
out
shll
mov
sbb
pop
imul
push
jns
bound
cmpsl
mov
cmp
addr16
sti
out
cmp
ss
scas
xor
pusha
ss
xchg
dec
mov
ds
sbb
out
adc
add
icebp
xor
push
jbe
ds
ret
sbb
in
sbb
xchg
pop
daa
sbbb
sti
adc
dec
ret
jo
daa
pusha
out
scas
ljmp
xchg
adc
and
cmc
test
dec
lea
or
pop
hlt
mov
mov
sub
in
and
and
add
insl
lea
fldenv
fistpl
insl
jp
pop
out
lahf
int3
jecxz
mulps
xor
or
bound
dec
cmp
lret
add
fdivrl
ljmp
mov
sbb
dec
mov
roll
dec
or
in
xor
popa
cmp
and
pop
add
jg
cmp
xor
mov
xchg
insl
aaa
sub
mov
pop
mov
test
or
clc
mov
fcoml
scas
push
jg
adcl
mov
int3
cli
xchg
jns
or
test
test
inc
sbb
inc
mov
fisubrs
sub
arpl
out
insl
inc
mov
leave
lods
fucomp
call
imul
cmp
dec
mov
int3
shrl
insl
imul
or
jle
xlat
fsubrs
push
pop
sub
jecxz
orb
mov
pop
add
aam
add
scas
scas
dec
aad
ss
mov
jle
xor
jg
add
xor
push
rorb
mov
ret
xor
inc
lods
xorl
sti
sub
sbb
jae
or
testb
pop
and
faddl
push
in
xchg
or
dec
xor
add
in
bound
out
sbb
in
jl
add
mov
mov
jmp
adc
leave
imul
repnz
xchg
dec
lahf
pop
sbb
sbb
or
adc
stos
mov
or
jno
hlt
imul
inc
fwait
adc
xchg
cmp
push
mul
insb
jmp
aad
mov
inc
nop
inc
out
clc
xor
fildll
stc
dec
or
lea
pop
lods
imul
negl
stc
imull
lret
mov
pop
pushf
hlt
mov
mov
sub
stos
call
jp
stos
pop
sub
cld
mov
xlat
xchg
test
not
cmp
sub
xchg
fs
or
mov
enter
xchg
notl
outsl
sahf
adc
pushf
inc
ret
and
sbb
es
and
adc
hlt
push
mov
lods
xchg
movsb
rclb
cmp
sub
xor
or
gs
push
cmp
idivl
into
xchg
into
shll
into
cwtl
mov
sbb
inc
and
in
insl
jmp
inc
inc
xchg
jb
loope
loopne
push
shrl
xor
arpl
fisttpl
rol
comiss
lods
daa
fwait
repz
cmp
or
lret
ds
jmp
cmp
xchg
lret
loop
sbb
imul
repz
or
sub
loopne
xor
mov
enter
ljmp
adc
sbb
fiaddl
gs
or
repnz
mov
mov
add
call
cli
pop
test
sbb
sub
push
and
ror
dec
cmp
mov
ds
and
or
jne
xchg
inc
inc
push
fiaddl
fsubs
mov
stos
jmp
stc
xchg
dec
pop
repnz
push
ljmp
mov
loop
cmp
jp
sahf
in
jae
push
mov
jmp
test
hlt
pop
pop
inc
jp,pt
jne
mov
cli
jno
loopne
sub
cli
jno
pushf
je
sbb
sub
sub
fs
dec
xchg
data16
nop
add
mov
sub
xchg
jp
cld
pop
mov
decl
lcall
mov
sbbb
cltd
stos
xor
and
pop
or
jecxz
dec
sub
lcall
mov
int
pop
push
cmpsl
loop
mov
int3
mov
out
hlt
cmp
sbb
data16
mov
aam
rorl
xchg
jo
fadd
and
adc
mov
pusha
xchg
lret
repz
stc
pop
test
xchg
ret
or
pop
leave
in
jecxz
in
sub
cli
jo
jo
dec
dec
xor
enter
out
hlt
idivl
mov
fs
ret
add
xor
aas
mov
xchg
inc
testb
imul
add
push
cmp
ret
xchg
test
cmc
adc
out
or
in
aas
inc
pop
jmp
jg
mov
jmp
xchg
shr
pop
mov
sbb
loop
and
add
xor
mov
fdivrs
in
xchg
rcl
test
jae
sti
test
aaa
negb
rcrl
pusha
dec
xor
dec
add
push
das
fs
call
int
nop
mov
inc
sbb
in
aas
call
or
and
movsb
cmp
xchg
ss
mov
xor
pop
cwtl
xor
dec
xchg
es
dec
ror
mov
cmp
push
mov
inc
outsb
jge
or
or
test
inc
inc
mov
icebp
and
xchg
cmp
jmp
pop
syscall
cs
lea
test
into
rorl
adc
outsl
pop
enter
pop
inc
inc
pop
mov
add
add
adc
and
fadd
into
mov
or
mov
or
xchg
dec
int
addr16
loope
icebp
mov
xchg
xor
inc
or
daa
test
jo
mov
cmp
and
push
sbb
mov
push
jnp
mov
lahf
and
and
ja
push
insl
fldln2
cmp
gs
push
das
xchg
sti
mov
xchg
cmc
jns
cmp
loope
mov
jp
pop
add
mov
dec
inc
repz
rcr
ret
aad
adc
out
icebp
pop
pop
into
and
jecxz
push
xchg
sti
cmp
cmp
adc
dec
mov
repz
loopne
cmp
rcrl
dec
mov
loope
or
out
dec
es
andl
mov
jl
ds
scas
sbb
mov
in
call
fisubl
and
popf
mov
xchg
inc
mov
mov
orl
insl
inc
pop
pop
ficompl
lea
pusha
mov
push
dec
hlt
sub
out
mov
shrl
jmp
fs
aas
dec
into
sahf
mov
adc
gs
mov
inc
mov
push
mov
cmp
shll
inc
mov
mov
jno
es
mov
aas
ds
jns
jbe
pop
test
ror
jno
bound
xchg
push
in
xchg
dec
sbb
ret
and
sbb
or
mov
xchg
ficoms
adc
mov
fmul
imul
push
jnp
mov
repnz
sahf
adc
xchg
mov
dec
sbb
adc
push
ret
push
in
popf
loope
arpl
scas
adc
fcmovb
adc
in
stos
xor
ret
cld
inc
jge
out
pop
jecxz
fwait
mov
out
mov
xchg
and
stc
outsb
jo
cmp
cmc
adc
and
cwtl
aaa
nop
adc
and
test
lds
hlt
cmpsl
pop
out
popf
and
cltd
ret
jb,pt
test
daa
imul
ljmp
jp
inc
pop
adc
push
into
xchg
dec
mov
aas
in
cld
data16
mov
sbb
outsl
popf
test
ljmp
dec
dec
mov
mov
sbb
clc
cli
jae
or
cmp
stc
stos
adc
inc
popf
hlt
push
aaa
cmpsb
int
push
and
inc
outsb
movsl
dec
and
mov
jno
sub
enter
hlt
push
cwtl
jp
adc
mov
xchg
pop
fidivs
repz
mov
inc
push
mov
or
sub
repnz
inc
mov
nop
mov
insb
push
pop
and
ja
dec
inc
adc
mov
sbb
daa
jp
xchg
adc
push
test
jmp
outsl
out
cmp
inc
adc
mov
mov
push
testb
adcb
out
mov
pusha
out
imul
cmc
mov
dec
movsl
jl
int3
adc
jl
pop
idivb
push
cs
pop
add
mov
sbb
daa
mov
mov
add
or
mov
push
fsts
pop
mov
sub
out
sahf
dec
push
rolb
xchg
imull
dec
mov
fsubr
mov
sbb
adc
sbb
xchg
or
stos
sbb
dec
fsubs
push
mov
add
dec
cmpsb
in
mov
aam
sbb
sub
mov
push
into
mov
mov
into
inc
std
jmp
fs
movlps
push
pop
ret
test
ljmp
xchg
cmp
jo
dec
int3
adc
mov
jmp
ror
inc
cld
lea
add
xor
ds
xor
pop
mov
test
ret
out
popa
dec
shll
cmpsb
inc
pop
pop
xlat
and
mov
loop
push
fwait
insb
test
inc
fisttpll
or
pop
jecxz
mov
mov
repnz
pop
mov
insb
push
and
leave
andb
icebp
out
inc
lahf
push
sub
ret
or
add
in
mov
out
cli
cmp
lock
andl
xchg
in
cmc
pop
lcall
cmc
loop
mov
loope
ljmp
mov
addb
sbb
sar
lea
adc
pop
fidivl
or
nop
mov
inc
jae
fwait
daa
loop
iret
jp
pop
scas
sahf
test
movsb
push
icebp
mov
or
pop
inc
fistpl
xor
int3
jmp
jl
jp
adc
mov
decl
sarl
mov
fsts
aas
das
aad
into
pop
neg
fidivl
sub
mov
mov
imul
ds
aam
pop
mov
dec
into
fs
cld
cmp
dec
xchg
xchg
sbb
mov
fsubl
sub
out
sub
push
xlat
inc
sub
xor
lret
pop
inc
aam
mov
cmp
mov
into
imul
or
test
adc
insl
rolb
sbb
jmp
mov
add
fs
inc
and
pop
pop
mov
push
xchg
call
xchg
nop
repnz
pop
mov
out
mov
js
lock
xor
sbb
ret
mov
jp
ss
ljmp
jns
cltd
test
out
sub
sbb
shlb
mov
jno
cmpsb
cld
push
push
xor
and
push
and
int3
jl
mov
outsl
jb
inc
mov
cmp
negl
add
mov
cmp
pop
loope
jmpw
pop
pushf
outsb
and
cmp
lds
ljmp
xchg
clc
out
icebp
scas
mov
adc
mov
mov
jmp
cmp
addr16
or
pop
cmp
or
call
loop
adc
ja
lea
pusha
leave
cmp
mov
jl
loopne
daa
pop
xor
clc
inc
or
not
inc
sbb
data16
jbe
sub
aam
clc
xor
inc
xor
btr
leave
and
lahf
call
xlat
jmp
ja
insb
lret
inc
pop
hlt
into
sahf
cmc
out
xor
mov
ret
mov
aas
push
repz
mov
ret
pop
fucom
jno
push
imul
adc
sbb
pop
mov
or
cmp
inc
inc
rclb
lret
mov
lret
cmp
pop
jno
push
data16
pop
mov
cwtl
pop
cli
cwtl
insl
inc
stos
and
sti
mov
add
mov
mov
or
adcb
into
jle
std
jbe
jae
popf
lcall
mov
xchg
shlb
jge
jbe
pop
dec
mov
push
push
and
lods
lds
fidivrs
lret
fsubl
icebp
or
and
fstl
pop
pop
in
fcoms
pop
cli
mov
xchg
and
hlt
sbb
push
cwtl
cmp
and
bound
push
test
movb
jno,pn
xchg
roll
outsb
adc
push
xor
push
ss
add
jp
sbb
outsl
sbb
outsl
orl
jno
fidivl
pop
sbb
jecxz
or
mov
iret
adc
cmp
mov
xchg
mov
mov
xor
imul
xchg
ja
and
mov
orb
lret
in
mov
push
fmul
mov
out
cmp
movsb
xorb
sub
in
repnz
int
sahf
cmp
cld
push
sbb
pop
inc
pop
imul
xchg
lods
mov
or
lahf
in
pop
rorl
cmp
sti
push
shll
jle
mov
outsb
pop
jns
push
mov
gs
xor
popf
gs
fmul
jp
imul
xchg
adc
lahf
outsl
pop
inc
int
add
pop
or
addr16
cmp
std
int
push
out
dec
add
adc
iret
test
push
sbb
sbb
ljmp
jecxz
nop
scas
testl
jmp
jns
pop
xchg
popf
pop
push
jl
lret
inc
mov
out
push
jne
shrb
push
aad
sarb
add
loop
sbb
sarl
imul
aaa
mov
mov
pop
sub
inc
shll
nop
cmp
mov
aad
fs
out
hlt
fnstenv
lods
aas
push
jno
insb
sub
or
or
ficompl
iret
jns
jne
out
sarb
cwtl
fnstenv
mov
scas
mov
or
pushw
mov
dec
push
cmp
jl
mov
in
insl
ret
push
cld
mov
ret
sub
out
jle
xor
cmc
or
ja
call
inc
pop
ret
mov
test
outsl
gs
stos
mov
addb
add
cmp
push
sbb
pop
testl
push
mov
or
mov
push
movl
jge
jle
in
js
push
cmp
imul
ds
ljmp
ss
dec
jl
test
xlat
sub
stos
imul
int3
fdivl
or
pop
loopne
shll
xorl
arpl
and
cmp
in
sbbb
mov
inc
cwtl
jnp
sbb
push
addr16
cli
lret
leave
sub
xchg
popf
pop
jbe
shr
mov
jg
inc
lods
jns
shrl
je
pop
and
lds
pop
loop
push
sbb
mov
dec
jmp
xor
cltd
insl
dec
sub
mov
jb
sub
push
push
xor
call
data16
call
aas
popa
adc
std
or
je
mulb
mov
mov
jmp
jne
dec
jge
mov
jne
decl
mov
or
icebp
in
push
cmp
test
out
jl
leave
sbb
inc
in
nop
mov
les
and
iret
and
jp
out
inc
movsb
xor
lea
sbb
sub
jbe
cmc
sub
mov
fnstsw
lcall
ror
and
loopne
pop
mov
push
sub
xor
jae
aaa
pop
ffreep
mov
mov
xorb
push
daa
out
pop
movsl
xor
add
insl
data16
pop
cltd
adc
xchg
int3
mov
test
mov
pop
loop
pushf
xlat
fdivp
adc
ret
das
xor
sbb
test
dec
inc
test
jo
int
sub
mov
in
out
adc
xchg
push
fnstcw
fdivrs
and
and
pop
pop
scas
decb
inc
push
push
aam
pop
les
mov
cli
inc
loope
push
and
sbb
jg
sub
mov
xchg
pop
ficoml
sub
leave
popa
inc
sbbb
popf
fsub
lret
sub
shrb
push
adc
leave
xchg
cmp
cmp
aad
push
and
addr16
scas
jmp
cmc
test
pop
mov
and
sbb
clc
insl
xchg
stos
sub
xchg
in
lock
jns
nop
and
leave
ljmp
inc
lea
aaa
or
cmpb
leave
cltd
cmp
mov
lea
call
or
icebp
cmp
jbe
sub
pop
mov
adc
fnop
cmp
lret
mov
push
xchg
icebp
cld
rorb
loope
shll
test
and
in
jmp
mov
mov
not
ficoml
sub
repz
add
pop
std
js
aaa
inc
lock
cmc
cmp
outsl
mov
das
jg
push
or
lret
cmp
test
std
push
mov
mov
subb
adc
pop
popa
push
mov
add
test
sub
lea
push
xchg
jecxz
or
jo
das
xor
and
popa
stc
adcl
pop
or
stos
cmp
cltd
and
adc
xor
dec
sbb
cmp
ja
fwait
stc
jb
leave
mov
cltd
xor
pop
lods
aaa
repz
add
mov
out
lea
cmp
inc
mov
shll
inc
xchg
dec
daa
stos
mov
sbb
mov
sbb
jae
iret
cmpsl
iret
inc
loope
adc
std
push
push
ds
gs
or
call
icebp
sub
test
dec
cld
pop
cmp
adc
clc
or
popf
out
jns
xchg
pop
or
sahf
ljmp
movsb
adcb
or
mov
test
mov
pop
or
pushf
sbb
clc
cs
stos
in
xchg
lods
aam
pusha
xchg
test
data16
imul
gs
sbb
xor
pop
sbb
inc
adc
test
movsb
pop
push
scas
push
in
js
xlat
aaa
mov
mov
mov
cmpsb
out
int3
inc
shll
or
push
xor
imul
mov
push
add
add
fs
mov
mov
and
dec
lods
mov
add
inc
cmp
test
mov
ficomps
jp
rclb
jnp
add
adc
or
pop
shl
shlb
xor
in
cmp
int3
jno
jl
xchg
inc
push
aam
inc
nop
push
and
gs
pop
jl
mov
cmp
test
dec
into
cwtl
repnz
adc
push
mov
scas
mov
pop
jbe
inc
xchg
cmp
jg
xor
scas
mov
lods
es
pop
jbe
push
jno
out
rcll
mov
mov
data16
jns
out
gs
adc
xchg
lcall
or
xchg
add
and
std
adc
es
or
mov
hlt
pop
addr16
iret
mov
in
xchg
lret
int3
mov
popf
jnp
sub
inc
insb
xor
sahf
xchg
pop
lea
mov
add
ljmp
adc
cmp
cmpb
fs
test
es
lods
movsl
jecxz
test
cmpsl
sti
enter
fbstp
or
int
lret
das
xlat
test
or
dec
lahf
lds
out
sbb
insb
cwtl
sbb
cltd
mov
push
xlat
push
sti
sbb
dec
xchg
insl
fsts
out
out
sub
cltd
or
adc
ja
rol
andl
inc
jb
pmullw
fnstenv
int
les
or
hlt
adc
in
sarl
pop
pop
xor
mov
hlt
pop
cltd
jmp
lret
scas
sub
loope
movsl
xor
push
lcall
pop
adc
scas
mov
mov
cmp
push
push
movsb
popa
sub
nop
fstpt
add
jecxz
cmp
je
pushl
push
mov
and
inc
imul
insb
pop
scas
out
pop
and
dec
push
xchg
popa
inc
pop
and
das
outsb
add
xchg
pop
jnp
movsb
mov
sub
popf
mov
cmp
popf
test
sub
xchg
and
imul
push
pop
dec
stc
in
xchg
xchg
cltd
xlat
and
or
shrb
or
testl
pop
inc
mov
sbb
andb
lds
fcoml
xchg
ljmp
mov
fsubr
jo
jl
push
jbe
dec
xor
xchg
addr16
xchg
pop
ret
mov
out
pop
insb
inc
jecxz
push
shrb
push
push
adc
push
dec
mov
fiaddl
xlat
xor
lret
incb
mov
repnz
mov
imul
rcrl
cmp
lds
xor
in
fildl
std
js
jge
fadds
int
ficoml
mov
mov
mov
xor
dec
bnd
aad
push
xchg
pusha
inc
and
mov
and
shlb
jp
cmp
add
pop
cli
cmp
call
std
or
adc
js
xor
pop
add
cmpsl
ljmp
into
mov
gs
sub
xor
adc
inc
mov
imul
xchg
mov
dec
icebp
xor
sub
pop
cwtl
cmp
mov
test
nop
mov
sbb
flds
mov
loop
jecxz
fsts
dec
pop
popa
lea
stc
inc
push
test
pop
jnp
jo
mov
jns
and
js
adc
xchg
pop
add
sub
dec
lret
sti
addr16
sub
sub
pop
and
xor
push
xchg
push
arpl
xor
cmc
test
xlat
mov
in
mov
scas
xchg
stos
sbb
sti
dec
add
sbb
mov
fcompl
ja
aas
mov
test
or
insb
lcall
mov
sub
cmp
add
adc
push
outsb
je
jne
push
stos
movsb
sub
adc
mov
xlat
sbb
or
into
sbb
int
mov
mov
je
sbb
or
adc
push
aam
ret
and
and
dec
into
cltd
ja
sbb
mov
sti
call
movsl
cld
fidivs
aad
dec
pop
cmpsl
call
ret
iret
add
mov
sbb
mov
push
push
dec
les
inc
fnstcw
jg
push
stc
pop
cmp
scas
sbb
jo
xchg
stos
cmp
add
xor
mov
mov
scas
cmp
add
xor
outsl
lret
xchg
outsl
das
addr16
and
adcl
ret
stc
xor
push
adc
mov
adc
out
add
punpcklwd
add
outsl
pop
mov
xchg
sahf
mov
cs
in
inc
mov
or
xlat
mov
sub
outsl
in
xchg
cwtl
int
loope
ficompl
jae
aas
push
int3
jl
call
dec
lea
lods
popf
rol
mov
enter
leave
pop
xchg
jmp
lods
sbb
in
sbb
adc
js
or
jae
sbb
nop
shll
push
lcall
fnstsw
jb
xlat
aas
in
je
sbb
sbb
dec
out
icebp
stos
xchg
inc
in
pop
push
xor
in
xchg
jg
jmp
int
jmp
inc
add
jecxz
aaa
mov
pop
fmull
mov
push
or
dec
jge
insl
nop
cs
push
xchg
jne
daa
adc
jp
pop
or
into
loope
xchg
and
cmpsb
mov
mov
fnstenv
jnp
mov
jecxz
xchg
add
jge
push
mov
loop
shl
xor
add
pop
push
ret
mov
and
inc
push
dec
adc
test
or
mov
sahf
xor
mov
push
roll
cmpsl
leave
loope
ja
push
xor
mov
mov
inc
push
scas
insl
imul
imul
ljmp
lret
cmc
aad
rolb
mov
in
jae
jl
movsb
sahf
sbb
dec
mov
sbb
pop
xor
cmp
sbb
mov
pop
xchg
addr16
sbb
mov
ljmp
inc
cs
jbe
cmp
sub
popa
inc
popf
lods
adc
movsl
sbb
mov
mov
push
arpl
fwait
jb
xchg
mov
and
jp
xor
popa
inc
and
cltd
inc
or
fisttpll
xlat
inc
out
dec
inc
mov
imul
pop
cmc
outsb
sub
xor
pop
stc
xchg
aaa
mov
nop
and
cltd
clc
inc
sbb
cmpsb
dec
or
jp
sahf
out
cmpsb
stos
sbb
pushf
dec
popf
inc
outsl
dec
cmp
jmp
fldt
insb
bound
mov
test
mov
cmpsb
dec
xlat
fmuls
sbbb
shll
and
repz
xchg
cwtl
push
in
push
cmc
das
sbb
cmpsl
adc
xorps
pop
pop
adc
jb
aad
lret
add
push
adc
dec
mov
cmp
mov
loope
adc
sub
popa
cli
loopne
subl
xchg
in
mov
or
mov
sub
sub
scas
adcb
xchg
push
and
mov
xor
das
pusha
leave
inc
xchg
mov
test
push
js
inc
mov
jl
in
pop
outsb
add
or
cmc
movsb
xchg
cmp
pop
insl
stc
mov
jge
mov
or
mov
mov
insb
mov
ficomps
sarl
jmp
xchg
aam
jo
sbb
data16
mov
rcrb
addr16
pop
sahf
adc
mov
xor
adc
ret
pop
aaa
cmc
pusha
add
and
enter
les
loopne
sub
mov
gs
dec
xor
and
push
cmp
xor
jnp
jge
in
cmp
out
mov
inc
jecxz
sub
mov
mov
adc
dec
adc
mov
sbb
mov
fcmovbe
mov
adcl
adcb
sbb
sbb
in
jo
xor
pop
je
dec
in
ret
ljmp
push
into
xchg
je
stos
mov
push
jmp
in
out
imul
xorl
ret
das
lods
push
test
stc
das
mov
add
imul
xor
cmc
jne
dec
adc
cmp
mov
jbe
jmp
cmp
mov
push
inc
jns
inc
ss
dec
xor
mov
stc
inc
lret
add
xor
mov
fsubrs
fwait
aam
dec
fcompp
add
rclb
mov
in
shl
and
xor
les
lock
cmp
mov
fldcw
stos
sbb
rcl
add
in
ja
gs
push
push
out
xchg
and
cmp
nop
scas
cmp
inc
jmp
dec
daa
inc
add
lods
mov
fdiv
es
cmp
sub
in
pop
ret
adc
push
ret
std
aas
sub
adc
add
cltd
iret
iret
pop
pop
inc
sti
and
rcrb
jb
stc
xchg
xchg
pop
cld
inc
call
push
add
adc
lea
in
movsb
push
lods
mov
pop
loopne
rolb
or
movsl
xchg
enter
xchg
test
popa
or
enter
ss
mov
sbbb
les
sahf
mov
lods
insl
int3
xor
xchg
mov
mulb
popa
in
sub
xchg
or
imul
xor
out
icebp
xchg
sub
jbe
test
inc
jnp
cmpsb
mov
and
mov
aaa
andl
cmp
add
xchg
add
pop
xor
ljmp
pop
jecxz
jecxz
pop
outsb
dec
xchg
popa
push
in
jne
int
dec
add
cli
jge
mov
das
sahf
sahf
mov
push
test
ret
je
pop
xchg
sub
mov
and
inc
mov
repz
inc
testb
cs
enter
add
mov
cmp
sar
mov
cmp
lods
and
fcoms
mov
pop
stos
js
stos
xchg
popa
adc
mov
dec
xchg
adc
pop
add
adc
push
push
push
imul
cltd
fs
iret
jmp
aaa
imul
mov
addr16
cmp
les
jmp
dec
pop
add
int3
lret
adc
in
pop
sbb
fisubl
insl
adc
mov
mov
nop
sbb
outsb
sbb
lods
push
cmp
scas
mov
movsb
inc
pop
daa
int
cmp
stos
xor
sbb
push
push
sbb
imulb
cld
out
ds
pop
lods
pop
data16
adc
mov
mov
mov
rorl
mov
add
in
sarb
lods
adc
rolb
cltd
xor
out
or
xchg
cmpsb
pop
bound
mov
mov
mov
pop
adc
andb
mov
xchg
sub
pop
pop
icebp
js
test
sub
dec
fldenv
sbb
cmp
mov
sar
pop
inc
adc
je
push
cs
xor
inc
or
lds
push
out
mov
rdtsc
mov
adc
mov
xchg
loop
loop
add
sahf
push
mov
pop
movsl
les
mov
pop
shlb
mov
outsl
sbb
mov
inc
sub
add
ljmp
lret
mov
sbb
xchg
mov
sub
pop
loop
add
cmp
pop
fwait
movsb
hlt
movsl
mov
dec
in
arpl
loope
cmpsl
into
imul
es
dec
out
das
lcall
xor
sbb
les
icebp
je
and
or
cmp
iret
cs
mov
ljmp
psraw
notl
push
cli
scas
push
add
sbb
cmpsl
or
jns
pushf
sbb
test
push
pop
fst
inc
movsl
adc
out
pusha
sti
xchg
cmc
fsubl
cmpb
in
out
outsl
mov
xor
bswap
mov
cs
divl
pushf
sub
loope
push
push
sbbl
dec
dec
cmpsb
movsl
in
movntq
mov
add
push
or
add
shlb
sbbl
rorl
mov
jae
rcrl
sbb
mov
adc
sbb
pop
push
aad
mov
mov
xchg
or
pop
cmp
add
leave
repz
push
jp
cmpsb
aad
cmp
pop
test
mov
sub
js
mov
jns
aas
push
out
mov
sbb
pop
psrld
add
ss
sbb
or
jge
jbe
arpl
stos
xchg
push
mov
fisttps
ljmp
sub
push
xchg
jl
push
add
lea
enter
jecxz
xchg
insb
jecxz
fisttpl
dec
addr16
jo
das
xchg
inc
and
loope
mov
adc
out
out
dec
add
xor
in
or
outsb
dec
cld
clc
pop
pop
xor
push
movsb
pop
in
xlat
lcall
push
fldlg2
add
push
pop
cmp
jecxz
sbb
loop
push
mov
xlat
push
mov
or
cld
jbe
lcall
pop
das
outsl
mov
mov
test
and
int3
pop
sbb
mov
push
jno
divb
imul
ss
jbe
gs
js
cmp
sub
dec
dec
mov
fmul
push
sub
mov
jbe
aam
inc
imul
mov
push
xor
stc
inc
lret
adc
xor
shl
pop
and
lds
cmp
push
dec
push
pop
lret
dec
nop
stos
ret
rcr
lock
test
sub
sar
jp
dec
popa
dec
mov
lret
fimuls
jnp
sahf
iret
jns
mov
jg
mov
pop
test
pop
xchg
movsl
test
es
outsl
hlt
inc
scas
cmp
daa
xchg
or
dec
int
out
sbb
loope
xor
jns
bound
fsubrp
add
or
enter
xor
mov
test
fcompl
and
mov
cmpb
vpmovuswb
xchg
pop
hlt
inc
or
cli
insb
movsl
fsubl
xchg
sbb
nop
in
inc
loopne
lret
stc
push
pop
out
sbbb
outsl
in
roll
push
push
dec
decb
in
adc
aas
daa
xor
push
dec
testl
shll
or
shlb
fidivrl
xor
xchg
sub
xchg
inc
sbb
loopne
insb
aam
or
mov
jmp
cltd
cmp
nop
dec
cld
sub
and
push
fists
fimuls
cld
pop
fbld
jne
movb
mov
push
in
sub
call
mov
mov
adc
jmp
stos
dec
shlb
xor
sbb
loopne
xor
mov
inc
pusha
enter
test
adc
cmp
add
addr16
iret
mov
xlat
sub
sbb
jge
ljmp
sti
ret
dec
movsl
cmpsb
jmp
sub
adc
add
lods
iret
mov
pop
mov
push
sti
cli
jnp
push
inc
jns
fbstp
jo
lcall
add
stos
cmpsb
faddl
jmp
mov
imul
add
out
jno
xlat
mov
or
int3
dec
xchg
pop
sub
xacquire
adc
rcr
and
add
and
stc
sub
pop
mov
stos
pop
int3
adc
dec
pop
cs
cmp
pop
imul
dec
iret
push
push
mov
leave
aaa
movsb
out
test
cld
sub
xchg
pop
pop
mov
or
scas
mov
addl
xchg
xor
mov
push
repz
xor
dec
inc
test
sbb
test
mov
mov
mov
pop
pop
mov
xor
or
or
lret
xor
jbe
test
cmp
outsl
pop
push
push
mov
pop
pop
idiv
pop
pusha
xchg
add
add
and
push
int
fdivrs
insl
xchg
xor
push
loop
in
xchg
lds
imul
cltd
push
nop
jmp
pop
aas
push
out
cmc
pop
add
movsl
daa
mov
xchg
fwait
mov
aad
aaa
cld
cmpsl
adc
xchg
shrl
js
lret
jp
shr
mov
scas
fimuls
mov
mov
mov
push
enter
fstpl
popa
and
rcl
jne
arpl
popa
add
aam
testl
sbb
cmp
inc
out
leave
dec
in
cld
popf
jge
dec
mov
out
jg
and
pop
stc
outsb
jno
dec
mov
add
out
rclb
cmp
ss
xor
mov
xor
push
sti
mov
dec
mov
imul
inc
mov
push
aad
in
ret
jp
sbb
fisttpl
insb
push
pop
mov
sub
pop
xchg
out
mov
inc
roll
jno
and
loop,pt
or
push
call
push
dec
inc
pop
mov
push
mov
cmpsb
mov
arpl
jns
fisttpll
sub
addr16
out
mov
add
repnz
or
outsb
je
xorb
repnz
mov
movsl
out
push
jmp
mov
loope
adc
lcall
lret
and
inc
xchg
dec
or
pop
sub
loop
repz
mov
xchg
inc
inc
cld
daa
outsl
lahf
sub
add
inc
test
inc
loop
add
inc
rcrl
xchg
roll
dec
in
ljmp
movsb
sub
scas
mov
lret
dec
push
or
mov
in
push
js
stos
pop
bound
mov
fs
adc
jnp
push
mov
inc
mov
jmp
dec
filds
mov
push
push
dec
fimull
add
mov
mov
jb
xor
cmp
mov
mov
sbb
sub
dec
outsb
mov
je
insl
mov
inc
or
add
sbb
jno
push
in
sbb
mov
ljmp
test
dec
dec
jmp
cmp
adc
mov
jo
into
sub
jmp
and
xor
cmp
icebp
cmp
loope
cmp
add
loope
sub
ljmp
lea
jbe
ret
out
test
sbb
fisubrl
xor
pop
out
insb
and
mov
sbb
hlt
data16
sahf
mov
mov
adc
repnz
cltd
xchg
in
adc
retw
filds
jb
cmp
sbb
subb
mov
mov
hlt
popf
push
out
or
inc
xor
jle
mov
cmpsb
mov
outsb
cmp
aas
std
xchg
sub
jno
jbe
mov
data16
sub
xchg
adc
sub
mov
mov
sti
std
mov
mov
mov
and
in
in
jne
sbb
jmp
sahf
sbb
or
push
xchg
es
ftst
jmp
sub
dec
mov
mov
xor
andl
cmp
jge
adc
mov
add
lret
xchg
xor
dec
sarb
in
cmpl
lret
pop
ss
scas
jmp
sbb
ficoms
in
ret
push
inc
pop
push
mov
int
and
imul
adc
repnz
rorb
add
cltd
add
popf
jle
lods
movsb
mov
sbb
ret
inc
int
cmp
insl
cwtl
and
sbb
inc
push
xchg
adc
dec
inc
mov
addr16
lret
mov
inc
loop
cltd
sbb
sahf
xor
pop
movsl
pop
pop
fimull
cld
cmp
test
jne
pop
sti
sbb
dec
pop
lcall
in
xor
je
lret
stc
leave
cmp
mov
inc
sub
cmp
mov
in
mov
push
les
pushf
movsb
xor
aad
ds
dec
or
mov
shll
leave
aas
dec
repz
jne
outsl
mov
jle
inc
xor
mov
inc
in
pushf
mov
aaa
sbb
push
pop
call
pop
mov
mov
loopne
mov
mov
push
adc
jns
in
fwait
add
in
jl
xchg
daa
icebp
xchg
inc
std
push
fldcw
shll
cmpsl
sbb
mov
dec
jmp
lods
fsubl
add
ljmp
jne
ds
clc
mov
cmpl
xor
jp
cmpl
jg
popa
ja
enter
cli
loopne
push
popa
dec
push
adc
les
mov
adc
sahf
dec
call
es
mov
dec
icebp
dec
push
and
ficoml
cmpsl
ret
repnz
add
adc
gs
test
dec
cmp
xchg
ficoms
inc
dec
loope
jnp
lock
mov
enter
cmp
mov
mov
cltd
mov
adc
in
add
mov
movsl
sbb
jbe
or
lods
lcall
rolb
mov
jnp
pop
icebp
je
xlat
loope
stos
mov
and
jns
negl
xor
aas
sbb
jmp
mov
mov
or
xchg
lea
mov
fcmovnb
dec
daa
filds
out
imul
add
scas
insl
insl
repnz
mov
aaa
fidivrs
ficomps
jl
cmpsl
cld
mov
pop
cli
pop
lea
sbb
stos
cmp
sbb
push
mov
data16
les
or
cli
and
out
jl
nop
mov
mov
adc
and
mov
cmp
mov
inc
out
lods
in
loopne
mov
mov
flds
sti
gs
mov
adc
pop
cmp
fdivs
mov
adc
ret
test
movsb
mov
push
add
push
fsubrl
push
jbe
mov
mov
hlt
gs
sbb
insl
pop
xchg
testb
mov
pusha
mov
add
div
jle
mov
nop
inc
pop
movsb
pushf
movsl
dec
loop
cmp
lea
movl
add
push
into
jno
jae
push
jle
push
or
aaa
neg
mov
data16
fisttps
pop
std
pop
push
out
into
or
stc
add
lods
movsl
sarb
rclb
icebp
cmpsb
ficomps
inc
sub
fistl
loopne
fwait
stos
pop
sahf
ljmp
cli
mov
adc
cmp
int
mov
jo
shll
mov
adc
mov
divl
mov
mov
push
ljmp
fld
push
mov
jge
iret
cwtl
aas
sub
pop
inc
adc
ljmp
inc
push
jb
imul
imul
test
mov
pop
sub
test
movq
sub
icebp
je
mov
or
cmp
mov
jg
lods
test
outsb
jl
mov
mov
jle
jne
xchg
xchg
jle
adc
dec
mov
in
in
dec
mov
xchg
jmp
iret
lret
mov
fdivp
or
add
pop
mov
sub
negb
cmpl
mov
cmp
pop
mov
into
cmp
clc
lds
mov
jmp
out
outsb
dec
xor
insl
inc
xchg
adc
jo
mov
adc
xor
xchg
imul
mov
adc
add
push
sub
push
xchg
pushf
inc
mov
popf
hlt
cmp
lcall
bound
or
jno
shr
cmpsb
aam
mov
push
mov
out
mulb
mov
add
pop
mov
movsb
mov
adc
shrb
repnz
aam
je
cmp
movsb
sub
cmp
testb
pusha
ljmp
aad
out
add
sub
sbb
and
pop
cmc
nop
xor
mov
xchg
bound
ret
inc
or
jle
mov
test
pop
xor
nop
add
push
adc
mov
mov
pop
dec
dec
push
fdivrp
not
loope
and
lcall
cmp
dec
cmpl
dec
mov
jo
mov
dec
pop
and
mov
inc
call
and
mov
adcb
cmp
inc
mov
fwait
mov
or
ror
or
loop
dec
nop
iret
push
jecxz
add
mov
fidivrl
scas
repz
fidivrs
mov
mov
data16
loopne
int3
loope
sbb
push
insb
aas
mov
stos
mov
rolb
sbb
cld
mov
add
popf
inc
shlb
sti
mov
cmp
or
dec
add
into
jne
inc
push
or
mov
std
xor
xchg
cmp
add
inc
push
sbb
inc
sarl
popa
pop
test
cmp
sbb
cmp
add
cwtl
mov
nop
pop
rclb
out
jae
into
int
test
ja
mov
sub
pusha
icebp
cmp
mov
loopne
popa
jno
loope
test
mov
outsl
stos
mov
out
pop
jbe
jnp
out
sti
mov
out
aad
jnp
cmp
mov
flds
sub
mov
push
mov
test
mov
jmp
mov
daa
mov
cltd
push
in
inc
or
jge
xor
lahf
xchg
jmp
lds
test
inc
dec
add
popf
clc
lds
lret
fdivl
adc
jnp
popa
fists
jns
addr16
pop
add
loop
mov
pop
nop
push
out
in
sbb
popa
push
mov
xchg
xor
sbb
sbb
cltd
aam
add
call
mov
push
dec
mov
mov
test
push
cld
pop
insl
mov
cs
sbb
movlps
mov
inc
inc
fistps
sub
icebp
jns
out
jg
jae,pt
negl
popa
shrb
add
subb
inc
push
ret
pushf
push
adc
in
mov
mov
test
int
ljmp
sbb
sbb
mov
pop
lods
lds
cld
mov
jmp
or
push
sbb
cli
pop
hlt
pusha
mov
daa
or
push
fstpl
aad
paddq
ret
jne
scas
xor
stc
pop
sub
xor
jp
xchg
stos
js
mov
arpl
nop
movsl
stos
lahf
cmp
cmp
sub
jp
sub
js
data16
out
sbb
mov
xchg
pop
jmp
cltd
and
repnz
jle
mov
inc
ret
mov
sbb
cmp
dec
and
popf
and
fisttps
jmp
data16
or
dec
dec
adc
loop
repnz
stos
jg
cs
lret
out
mov
call
sahf
fisttpll
xchg
or
mov
nop
xchg
mov
add
in
push
jp
mov
cmp
cmp
sbb
push
sahf
push
cmp
mov
jecxz
jne
jp
add
fimull
xlat
test
mov
daa
add
clc
inc
inc
insl
pop
int
divb
movsl
pop
leave
xor
jne
sub
sub
sub
lods
enter
add
mov
popf
cmp
cmp
data16
xchg
test
jns
cwtl
xor
dec
and
jo
inc
xchg
mov
cs
jge
sbb
imulb
cmp
xor
idivl
sub
jle
push
sahf
xchg
out
ret
jle
mov
mov
fs
idiv
rorl
push
dec
cli
fldt
xchg
cmp
inc
push
jg
add
loopne
testb
aaa
into
jmp
ficoml
mov
orl
dec
pop
xor
movsb
sahf
xchg
mov
shrb
movsb
xor
dec
loopne
aaa
ret
pop
jmp
mov
cmp
sub
pop
fdivr
pop
popf
pusha
test
cmp
jmp
test
cld
xchg
aam
sub
add
mov
sbb
iret
jecxz
xor
jmp
stos
mov
xor
inc
dec
icebp
mov
adc
rcl
aaa
pop
in
les
and
jb,pt
lcall
shll
and
xorb
mov
xchg
cmp
jge
cmp
ljmp
mov
mov
sbb
push
push
push
scas
fsubl
mov
arpl
lds
mov
pop
adc
loopne
movsb
test
ds
outsb
loop
test
cwtl
mov
sub
and
out
pop
pop
or
std
imul
test
iret
push
outsl
jno
call
outsb
jmp
and
aam
popf
lcall
push
testb
fcoms
mov
inc
xor
mov
cmc
jecxz
test
lret
insl
imul
in
push
jne
fstpl
out
fninit
fidivrs
imul
sub
mov
sub
shl
xchg
in
pusha
add
sbb
and
cmpb
jp
ljmp
rorb
pushf
orb
cmp
adc
sub
add
adc
std
lahf
negl
ja
or
mov
pop
dec
rclb
mov
pop
mov
test
ja
or
iret
ja
mov
inc
adc
jae
cmp
mov
and
stc
mov
jg
imul
insl
test
das
push
lock
mov
pop
rcl
fs
stc
ret
test
xchg
mov
inc
cltd
out
inc
outsb
addr16
push
or
and
shll
jae
pop
dec
mov
jb
adc
dec
or
push
lret
push
lods
cmp
mov
jns
popa
pushf
pop
in
test
jnp
jns
ficomps
push
out
lret
jae
mov
mov
imul
nop
pop
xchg
and
addb
or
add
dec
xor
and
xor
xor
ret
std
call
lcall
fcompl
mov
ds
test
out
leave
stc
decb
mov
push
pop
lods
mov
cmpsl
or
fnstenv
ljmp
fdivs
xchg
or
jecxz
cld
out
jb
lcall
mov
add
push
and
pop
jmp
sub
pop
fwait
repnz
xchg
mov
stc
dec
pop
mov
jg
sub
pop
mov
xchg
mov
stos
jle
xchg
loope
mov
loope
sub
mov
scas
in
or
dec
mov
leave
xor
pop
dec
jecxz
mov
dec
or
jg
sbb
push
xchg
dec
mov
sbb
or
loope
and
ficomps
dec
das
hlt
and
fildll
jae
cmp
fsubs
sarb
nop
add
fdivp
movsl
lahf
mov
cld
sahf
leave
mov
mov
jb
mov
ds
jl
sub
mov
jge
mov
inc
dec
jnp
jns
pop
jns
pop
mov
xchg
push
or
in
pop
gs
mov
je
add
into
divb
repnz
imul
ss
xchg
inc
xor
push
test
inc
adc
test
cmp
es
mov
push
jp
dec
fcmovnbe
push
mov
xchg
push
jg
rcrl
daa
mov
sub
imul
pop
fstpl
sbb
out
shrb
sbb
std
or
and
xchg
cltd
mov
int
adc
ror
jnp
jg
xor
cmpsl
xchg
bound
sub
popf
sub
cmp
push
push
dec
sub
push
lret
clc
adc
js
insb
ds
subl
xor
inc
and
int
int
dec
aas
mov
mov
mov
negl
mov
push
jmp
push
cmpsb
or
xorb
das
xchg
xor
push
sbbl
and
repz
mov
fimuls
js
pop
inc
mov
inc
inc
or
aam
fidivs
push
and
aaa
rorb
addr16
inc
fadds
jns
jne
xchg
test
or
push
clc
jns
jmp
shll
repz
pushf
cmpsl
and
sub
adc
cmpsb
and
add
xor
ja
push
push
into
push
mov
incl
inc
push
inc
lods
or
out
mov
adc
nop
aas
aaa
ljmp
inc
dec
imul
cmpb
xchg
xchg
test
ljmp
ficomps
mov
sbb
jle
stc
iret
cmp
mov
out
jle
movntq
out
push
or
adc
sahf
out
xrelease
jle
inc
movsb
xchg
cmp
mov
mov
or
push
dec
or
add
mov
jmp
fs
lcall
push
std
or
push
xlat
aam
mov
shl
insb
in
insl
push
mov
cwtl
icebp
cltd
xor
dec
loope
call
je
scas
lret
addr16
movsb
les
mov
ja
ljmp
rclb
xor
arpl
jmp
in
sbb
xor
les
pop
adc
aaa
test
and
xor
jl
mov
leave
xchg
xchg
outsl
lret
daa
dec
pop
dec
jb
mov
ss
and
in
push
cli
cltd
dec
cmpps
lret
data16
fsubl
and
mov
pop
rcl
loopne
lret
sbb
cmp
inc
test
mov
push
pop
rcrl
repz
sub
xchg
das
inc
xor
sub
cltd
icebp
dec
push
add
dec
enter
jge
push
adc
or
lock
push
or
mov
xchg
xchg
push
cmp
into
notb
loop
lea
sub
lods
out
out
lahf
sbb
adc
out
sub
or
dec
jo
or
mov
andl
add
mov
mov
les
addr16
dec
mov
lret
xchg
cmp
sti
jmp
pop
fistl
lret
cld
int3
sar
enter
pop
mov
rorb
insb
jnp
ja
xor
xchg
adc
xchg
jl
jg
and
sbbb
repz
repz
cmpsl
ret
cmp
xchg
mov
xor
mov
sbb
in
fsubrs
clc
out
and
and
movsb
or
lock
dec
sti
inc
mov
cmp
inc
jmp
dec
cmpsb
xor
xor
and
fcmovnbe
scas
xchg
lds
leave
and
pop
cmovs
fildl
and
push
xchg
push
arpl
ss
jno
jmp
es
xlat
xor
mov
into
jmp
and
xchg
orl
cli
sbb
fildl
dec
shrb
fs
jp
xor
sbb
lret
cmc
sbb
movsl
cmp
fs
mov
loope
jne
loopne
ficompl
outsb
pop
in
jl,pt
pop
xchg
aam
jge
sub
nop
test
mov
inc
push
push
movsl
and
enter
aad
ds
push
cmpsl
fwait
xor
jbe
imul
cmp
arpl
fcmovu
or
lcall
lahf
cmpsl
movsl
sub
jp
add
loope
cmp
inc
or
test
xorb
leave
xchg
sub
xchg
adcl
mov
adc
adc
popf
and
or
sbb
ret
bound
push
call
rcll
je
xorl
jae
stc
xchg
dec
outsb
jbe
inc
sub
jp,pt
icebp
mov
sub
and
add
adc
ss
out
mov
scas
je
inc
test
frstor
jg
inc
sbb
adc
mov
sub
mov
sahf
mov
gs
pop
sub
or
sub
ret
push
sub
sbb
dec
cmp
or
ds
popa
fiaddl
pushf
cmpsl
fldenv
fisttpll
jge
sbb
scas
nop
push
imul
fstl
xchg
cmp
sahf
xor
push
mov
sub
pop
xchg
pop
cmp
cmp
outsb
stc
cmpsb
mov
fcmovb
outsl
in
ja
jl
mov
mov
sahf
rcll
dec
popa
dec
xchg
inc
mov
or
xlat
pop
aaa
sti
sbb
mov
and
or
xchg
jg
xor
sub
fwait
mov
or
movsb
pop
mov
xor
ret
add
out
outsb
cmp
dec
mov
xchg
movsl
imul
iret
fdivp
pop
and
add
pop
fidivrs
arpl
sub
rcrl
push
adc
aas
insl
out
popl
xor
dec
xor
xchg
out
or
shrb
out
ret
fiaddl
lea
lds
mov
cmp
dec
popf
stc
jo
xor
popa
sub
in
fs
popa
mov
fidivs
loopne
mov
bound
movsl
pop
enter
push
sub
ret
sahf
cmp
lods
mov
sub
rcr
into
sti
xchg
sbb
lds
jmp
add
inc
cmp
scas
test
mov
lret
cmc
pop
addl
ror
jne
push
imul
xor
mov
fldt
push
sti
enter
shrl
js
jle
jbe
jp
and
cmp
outsl
arpl
dec
mov
fiadds
cmpsl
and
pop
mov
adc
mov
clc
movsl
push
lock
jmp
mov
nop
cwtl
xchg
lods
shr
mov
push
and
rorb
rcll
mov
mov
mov
adc
stos
mov
out
inc
loope
sub
mov
pop
arpl
push
sub
es
in
insb
daa
cld
out
jg
scas
mov
into
fdivs
or
inc
lret
stos
sub
and
ja
sbb
cmpsb
pop
ss
addr16
mov
fistpl
add
push
mov
out
daa
xor
int
add
xor
push
sbb
insb
xchg
xchg
orb
or
push
test
aas
push
mov
scas
jae
shl
rol
ret
xchg
adc
popf
clc
sarb
inc
add
pop
xchg
pop
ljmp
arpl
push
push
sarb
scas
pop
dec
add
jp
addr16
sahf
xchg
mov
cmpsb
dec
or
cmp
aad
cmp
rcl
ret
or
mov
push
lock
xor
push
icebp
mov
sbb
sub
adc
int3
sbb
outsb
adc
cli
aas
addr16
scas
cmpsl
sbb
mov
iret
pop
add
or
in
in
aaa
test
mov
gs
mov
ja
mov
outsl
movsl
mov
jp
scas
pushl
lods
xor
cmp
xor
sub
data16
fucomp
add
jle
sbb
inc
xchg
xchg
sbb
inc
test
stos
push
lahf
mov
cwtl
mov
jge
loope
jb
in
orb
sub
pop
out
sub
cmp
dec
bound
decb
pop
stc
imul
push
into
pop
and
shll
mov
lcall
adc
lock
and
insl
xchg
xor
cmpsl
lret
pop
sbb
stc
lock
data16
test
mov
cmp
mov
loopne
push
sahf
dec
mov
mov
jl
iret
mov
outsb
push
test
mov
hlt
xor
mov
pop
adc
sbb
imul
dec
xor
cmpsl
jle
jne
adc
cltd
cmc
xor
sub
add
jle
std
xchg
aas
jecxz
pop
add
mov
out
mov
jae
sbb
aam
mov
push
inc
leave
outsl
clc
push
mov
addl
dec
int
aam
pop
sub
out
mov
pop
mov
lea
add
push
es
addr16
cmp
into
push
push
popf
cmp
insl
aas
sub
and
clc
sub
outsl
inc
xchg
mov
mov
push
cmp
inc
out
test
fsubrp
cmpsl
out
js
insb
loop
or
mov
jecxz
xchg
gs
test
imul
faddl
xchg
or
fidivs
in
clc
or
clc
cmc
mov
mov
push
test
mov
mov
int3
scas
icebp
mov
xlat
sarl
pop
jno
faddp
add
icebp
lea
or
pop
out
and
ds
insb
inc
ja
jne
push
sbb
shrl
test
pop
pop
pop
je
shr
pop
mov
mov
ds
iret
and
jge
inc
mov
out
ret
mov
lods
dec
test
subl
adc
adc
jnp
mov
out
mov
or
insb
jnp
push
sub
adcb
popf
clc
xchg
nop
push
add
mov
dec
cmp
std
pop
pusha
stc
jo
jnp,pn
leave
cmp
fisttpll
dec
pushf
clc
dec
jo
cmp
adc
jl
or
ret
mov
stos
sarb
orb
sahf
leave
or
out
adc
mov
jge
xchg
loopne
jno
fldl
jle
mov
or
dec
insl
pop
sub
jecxz
test
in
imul
push
dec
aam
pop
and
rolb
jbe
insl
into
leave
imul
pop
mov
in
decb
jae
xor
push
sub
cltd
loopne
cmp
jecxz
add
cmc
jno
movsl
jmp
mov
clc
and
xchg
imul
in
push
ds
add
xor
mov
mov
pushf
pop
adc
inc
jnp
ret
add
ret
sbb
jmp
mov
or
lret
jecxz
adc
decb
mov
adc
in
mov
repnz
int
js
xor
cmp
mov
outsl
add
lods
cwtl
lret
sub
pop
rorb
decb
pushf
inc
xor
pop
ret
mov
in
lods
mov
mov
das
pop
iret
cmp
add
and
and
fadds
jl
repz
test
ss
pop
sub
pop
pop
sbb
iret
or
loope
sbb
xorl
mov
pop
ljmp
xchg
xchg
fldt
add
cltd
jb
pushf
ljmp
add
aad
les
jl
lret
push
cld
push
loopne
push
lret
call
test
jmp
pop
jne
and
push
mov
mov
xlat
add
xchg
cmp
cmpsb
jmp
pop
stc
pop
ss
jbe
leave
push
xchg
popf
dec
inc
dec
xlat
lret
mov
mov
fidivrl
cs
pop
push
cmpsl
mov
pop
cmp
call
insl
mov
in
fcoml
mov
lret
pop
lds
data16
cmc
fwait
mov
or
cmc
push
cltd
mov
or
dec
mov
inc
sti
or
fs
int
xor
in
popa
xor
lcall
xor
rorl
pop
sti
addl
jl
rcrl
mov
mov
mov
lea
adc
sti
movsl
lahf
xor
xor
or
mov
push
out
adc
pop
cmp
mov
lret
ljmp
dec
popf
jnp
adc
pop
jae
out
jno
mov
addl
mov
jl
cmp
inc
xor
inc
adc
int
jg
rolb
pmulhuw
icebp
jno
pop
xchg
movsb
movsb
sbb
or
jno
xor
mov
fsubrl
mov
adc
mov
inc
cmpsb
xchg
dec
sub
or
repz
xchg
leave
mov
aas
inc
aaa
sub
xor
rcr
sub
jo
fdivr
test
sub
negl
fcoml
jg
xor
popa
ds
iret
pop
nop
imul
mov
adc
lock
mov
sahf
int3
js
add
outsl
lock
insl
ja
inc
fsubl
xor
rcr
loopne
gs
call
out
inc
adc
cmpsb
mov
orl
addr16
fimuls
aas
inc
adc
pop
test
in
add
mov
iret
inc
fs
inc
nop
sub
int
lahf
mov
aas
cmp
xchg
data16
fstps
pop
mov
cmp
cmc
mov
dec
call
adc
push
in
movsl
pop
sbb
inc
dec
addb
fsubrl
sbb
imul
inc
insl
lods
cmp
fcomps
cmpb
loopne
pop
xchg
mov
sbb
pop
pop
dec
cmp
lea
sbb
jb
lcall
stos
outsb
push
mov
subb
cs
test
cmpl
subl
insb
decl
dec
jae
mov
mov
loope
inc
frstor
das
in
aam
push
mov
loop
mov
sti
insl
je
jmp
xchg
jo
aaa
push
push
in
push
scas
xchg
ret
in
or
add
in
sub
leave
sub
lock
cmpsl
mov
data16
jle
fdivr
jne
loopne
enter
xor
cmp
adc
jecxz
jno
mov
sub
pop
adc
outsb
daa
inc
mov
out
stos
jbe
or
out
and
pop
push
sub
cs
sarb
mov
out
icebp
jno
loope
mov
into
mov
mov
adc
loop
imul
xchg
outsb
mov
pop
test
sub
dec
mov
popf
mov
stc
lds
scas
cmpsl
sbb
pop
outsb
xchg
repz
push
add
pusha
xor
and
mov
das
mov
push
mov
sbb
mov
or
insb
sbbl
or
inc
and
sbb
inc
cltd
or
jg
xor
loope
sbbb
mov
adc
xchg
aaa
shl
mov
rcll
mov
test
sbb
pop
jns
push
clc
xchg
leave
shlb
sbb
or
xor
es
pop
out
jmp
sub
sub
gs
push
cmp
sub
push
jae
mov
mov
sbb
and
mov
scas
stc
cld
les
mov
lcall
mov
adc
shrb
push
out
lock
jle
xlat
mov
ret
jns
dec
sub
sub
add
sarb
les
cmp
cmp
add
lea
xchg
clc
outsl
or
out
mov
andb
sub
bound
adcb
jl
cld
js
jns
js
stos
das
jo
push
cmp
test
out
mov
pop
xorl
cmc
mov
adc
mov
popf
ret
popf
jmp
les
xchg
dec
adc
ss
add
mov
ficoml
and
xor
jecxz
adc
adc
jnp
xor
iret
ds
andps
test
or
or
cmp
add
xchg
cli
xchg
test
push
fistpll
sbb
push
dec
outsl
ja
fstp
outsb
int
fwait
das
mov
or
test
stc
adc
push
pop
aam
adcl
xor
lea
adc
jo
inc
or
fnstsw
out
aad
inc
iret
pop
push
push
pop
ja
push
sub
lea
sbb
cmpsb
stos
and
add
imul
or
enter
sbb
add
cltd
int
push
out
push
mov
rcrb
and
add
pop
frstor
xor
inc
jnp
lods
stc
adc
fmulp
dec
push
insl
rcr
inc
pop
xchg
les
and
ja
dec
cmp
es
sbb
jno
mov
lea
stos
sbb
lock
mov
mov
xor
or
cmp
insb
ss
loope
and
mov
call
inc
jecxz
cmp
rcrl
sbb
test
not
mov
add
test
pop
jmp
movsl
sub
cmp
adc
inc
or
push
mov
cmc
std
and
cwtl
jbe
sub
xor
or
xchg
mov
ja
pop
adc
insl
outsl
and
ret
arpl
push
stos
test
aaa
bound
mov
shlb
stc
outsb
in
cmp
sbb
imul
call
lock
stc
adc
mov
xor
icebp
loope
pop
and
push
xchg
out
jg
jb
test
adc
fcompl
pushf
shr
adc
xor
dec
inc
int
bound
cmp
pop
incl
retw
fmull
xchg
xlat
aas
add
mov
mov
movsb
xchg
out
xlat
mov
pop
les
sub
push
add
inc
mov
jg
ret
push
cltd
add
pop
fistpll
mov
jae
std
clc
push
cwtl
sti
daa
out
push
std
mov
out
lcall
inc
pop
ja
mov
or
mov
add
out
testb
pop
and
insl
mov
mov
jb
push
mov
push
ret
push
jb
and
loop
ret
out
sbb
lea
jnp
pop
and
ret
mov
jno
addr16
popa
mov
or
jmp
hlt
out
push
outsb
xor
push
xor
lds
xchg
inc
scas
loopne
mov
inc
adc
loop
call
fucomp
mov
popa
gs
pop
xor
mov
ret
or
out
jnp
xor
test
sub
test
paddq
xor
xor
ss
push
loope
push
sbb
dec
aaa
and
cmpsb
fdivrs
hlt
mov
adc
ss
imul
fisttps
jns
xchg
and
xor
xchg
in
pop
cmpsb
push
dec
sbb
movups
sub
hlt
or
icebp
incl
xlat
pop
and
hlt
lcall
enter
and
inc
mov
fwait
test
xlat
cs
aam
jne
or
popf
int
ljmp
lea
out
adc
loopne
bound
pop
xor
into
shll
or
push
cwtl
in
fwait
stc
cmpsb
repz
faddl
sbb
shlb
or
and
inc
mov
push
inc
and
jp
notb
negb
cltd
leave
scas
popf
test
mov
stos
lahf
insl
pop
nop
icebp
xchg
stos
or
mov
decb
or
out
iret
in
pusha
pop
int3
ja
mov
imul
outsb
mov
out
stos
in
gs
pop
jecxz
fistpll
lret
fsubp
test
sahf
es
dec
cld
inc
lcall
mov
imul
ja
sar
aas
fsubrl
xor
mov
push
pop
or
ds
sbb
xchg
fimuls
call
loopne
add
stos
ret
adc
mov
cmpsb
test
movsl
lret
sbb
aad
insb
lret
mov
cmp
in
rcr
pop
and
gs
jae
ret
push
jns
cmp
clc
mov
dec
imul
cmpsb
sbb
sbb
cmp
xchg
or
aad
cmp
or
imul
cmp
inc
rcrl
fs
push
mov
in
xchg
ljmp
daa
cmp
and
sbb
adc
mov
imull
pop
add
shl
mov
push
and
jge
rorb
inc
aad
jecxz
mov
dec
pushf
js
pop
andb
lods
cwtl
std
mov
cmp
sahf
adc
pop
cmp
mov
cmpsl
lret
add
icebp
mov
gs
cwtl
jno
inc
sahf
mov
fcompl
pop
pop
sbb
or
loopne
add
imull
ret
adc
push
mov
seto
cmp
add
sbb
jge
call
cmpsb
nop
sub
fimull
notb
test
ds
popf
lret
lea
roll
cli
jnp
mov
xor
cmp
ljmp
cmp
adc
pop
jnp
jmp
mov
inc
aaa
xorb
shll
outsl
xor
sbb
mov
jg
imul
pop
dec
mov
inc
ret
daa
lret
jge
jne
and
fadd
and
adc
stos
clc
jmp
movsb
inc
popf
sub
or
es
sub
dec
and
push
mov
popf
adc
adc
jg
cmpl
ror
and
pop
test
mov
test
mov
in
jmp
fidivs
inc
sbb
sbb
mov
loop
enter
sbb
or
xchg
jns
cmpl
int
fucomi
movhps
xchg
ja
jl
adc
lock
lods
std
pop
fld
mov
or
mov
outsl
sbb
in
and
call
shlb
cmp
lahf
aad
and
mov
mov
cmc
sysexit
mov
ret
mov
add
test
jo
das
aaa
outsb
ficoms
fwait
add
subb
shlb
mov
push
inc
popf
aaa
xorl
mov
mov
inc
andl
and
aas
sub
inc
jmp
mov
ss
lcall
fldl
test
into
adc
mov
jmp
pop
push
bound
sub
push
mov
ret
xlat
dec
shrb
cltd
stos
ret
push
out
xlat
adc
movsb
icebp
push
into
pop
xchg
out
popa
arpl
inc
fiadds
or
xchg
sbb
out
gs
or
dec
and
push
jle
jl
inc
xchg
das
or
pop
xlat
cmp
out
test
add
subl
aaa
insl
jne
mov
inc
jnp
jp
or
ja
sbb
jo
jnp
in
out
pop
cld
imul
into
mov
adc
cli
adc
pushf
loop
mov
mov
negb
sub
out
mull
push
out
xor
jecxz
adc
addl
mov
jmp
stos
push
shr
adc
add
sahf
out
insb
push
insl
xchg
js
not
add
cmpsl
call
pop
jg
xor
pop
shrb
mov
adc
fldl
fsubrs
shlb
out
jae
adc
xlat
jne
fsts
mov
lret
adc
cmp
xchg
inc
out
shlb
push
jl
push
pop
nop
sub
cs
mov
and
mov
inc
sbb
jne
ret
loope
sbb
ljmp
add
dec
mov
call
dec
mov
stc
inc
dec
test
movsl
mov
leave
in
test
and
js
cltd
ja
test
sti
popw
faddl
xchg
lret
outsl
push
outsb
test
add
add
xor
jl
shll
jb
ficomps
ss
sub
int3
adc
mov
pop
mov
adc
aaa
pop
xchg
adcl
sbb
xlat
int3
adc
sub
into
xlat
in
mov
sub
mov
or
or
aam
fcmovb
lret
adc
nop
xor
push
or
sbb
add
jle
in
and
push
cld
into
sbb
dec
iret
mov
sub
jae
out
sub
sbb
and
call
add
arpl
jp
and
cmp
fildll
xor
rcrl
outsl
shrl
sub
jb
adc
adcl
addr16
insl
ja
jns
dec
adc
dec
dec
xchg
fnstcw
loopne
sbb
int3
insl
es
cmp
hlt
sti
sub
mov
xchg
pop
xor
iret
lahf
je
ficoms
xchg
push
add
pop
subps
mov
hlt
inc
or
hlt
lahf
mov
pop
popa
jmp
test
inc
dec
push
sbbl
and
adc
dec
xchg
sub
int3
subb
pop
call
pusha
rol
lret
icebp
rcrl
push
push
mov
movsb
dec
mov
xor
sub
in
int3
dec
dec
aad
rorl
xlat
xchg
push
lods
cmpl
or
cs
mov
je
rorl
cmpsb
movsb
adc
lret
in
lahf
clc
cmp
iret
pusha
cmp
xor
fsubl
push
add
sti
jbe
fs
jl
dec
add
jge
xor
mov
cli
ja
cmp
iret
jae
xor
mov
inc
or
pop
jmp
nop
push
pop
ss
ljmp
push
nop
or
xor
aaa
scas
cld
dec
pop
lods
sahf
out
lods
inc
lcall
sub
in
ret
in
mov
inc
xchg
xor
neg
cmp
es
inc
xchg
bound
pop
push
inc
jbe
inc
jne
pop
or
cmp
adc
test
push
jp
inc
sub
shll
inc
add
and
jb
test
jmp
cmp
push
or
cmpl
lds
cmpsb
add
mov
adc
pop
daa
cmp
push
orl
cmp
inc
in
or
fwait
repz
push
inc
and
aam
mov
out
cmp
or
mov
cmp
mov
xor
sub
push
lahf
pop
sub
aam
adc
stc
pop
push
sub
add
lahf
test
xor
and
mov
and
push
lods
aas
sub
xchg
ret
jno
cmpsb
rsm
es
inc
xchg
test
movsb
les
sub
adc
scas
rolb
cmp
sub
or
decb
enter
frstor
mov
je
cltd
add
push
xchg
mov
ret
or
ret
push
push
mov
retw
mov
lret
pop
pop
fnstcw
and
lods
test
loop
inc
mov
inc
insb
leave
or
outsl
cmc
mov
rolb
lcall
mov
jecxz
int3
fistl
fwait
repnz
orb
adc
enter
call
lahf
xchg
or
daa
mov
clc
fstps
sbb
mov
fisttpl
mov
fsubs
push
sbb
push
sbb
lea
adc
cld
je
insb
mov
jecxz
fwait
push
jne
mov
imul
outsb
jns
outsl
adc
push
cltd
cmpsl
scas
add
cmp
stos
popf
cmp
mov
jns
inc
adc
adcb
rcr
jl
inc
movsb
lods
adc
fisubrl
xchg
je
cmp
push
insb
imul
xchg
add
dec
dec
cmc
test
cmovnp
mov
jmp
xchg
add
hlt
test
jmp
fsubr
ds
gs
dec
scas
xor
ds
mov
jecxz
jns
and
and
cmpsl
in
stos
std
dec
cmp
or
nop
pop
fs
rcll
test
adc
xor
push
lret
pop
sbb
xor
mov
jg
push
xchg
add
notl
sti
mov
in
loop
jg
leave
adc
add
insl
push
call
std
icebp
popf
push
push
add
stc
mov
fucomp
fbstp
repz
movsb
addr16
sub
lock
movsl
cltd
test
xor
mov
dec
jae
fwait
inc
lahf
outsl
fidivrs
push
mov
pop
sub
dec
xlat
test
mov
idiv
fisubl
xchg
pop
mov
inc
stos
push
outsb
push
lds
std
xor
mov
out
add
xor
dec
lret
cltd
lods
sbb
fcomp
ds
mov
mov
adc
int
xorl
sbb
and
mov
inc
push
inc
xchg
pop
shll
fistpl
mov
dec
hlt
es
or
mov
sti
jle
leave
stos
adc
push
xor
jmp
mov
test
cs
int
cmp
and
add
test
jno
xor
xchg
test
push
cmp
inc
xor
cmp
add
sti
pushf
js
aas
jae
mov
sti
int
mov
mov
lret
and
in
subb
ds
imul
roll
shrb
xchg
fcmovb
lret
sete
push
adc
nop
or
mov
filds
sub
xchg
shlb
xor
cmp
jl
imul
pop
sub
jge
dec
cmpsb
xchg
imul
mov
addl
sbb
xor
mov
add
add
and
mov
arpl
int3
dec
adc
jmp
pop
xor
and
leave
jmp
xchg
or
push
mov
ror
sbb
movsb
daa
stos
int3
and
mov
dec
xor
clc
lcall
sbb
jg
dec
xchg
mov
jg
movsl
xor
mov
pop
mov
mov
push
mov
call
mov
cld
mov
xchg
add
fwait
arpl
in
add
adc
mov
in
into
cltd
test
out
jmp
jg
test
inc
fnstsw
aaa
inc
xchg
sub
push
scas
lock
aad
into
out
mov
jmp
dec
outsl
mov
movsb
test
movsl
push
cmp
jno
sbb
jbe
mov
lods
dec
dec
mov
ss
dec
cmp
mov
xchg
push
push
lods
lds
dec
inc
out
push
insb
xchg
mov
out
in
inc
add
xor
ljmp
sub
sbb
xchg
clc
insb
xor
imul
cmpb
dec
add
pop
pushf
fnstsw
shlb
shll
or
orb
and
lcall
adc
dec
xlat
out
pushf
hlt
stc
nop
scas
inc
dec
inc
arpl
cmp
movb
cmp
xor
imulb
sahf
jne
loope
cmc
xchg
push
push
cmc
xchg
shr
fs
mov
std
xor
out
arpl
scas
and
stos
icebp
xchg
sbb
cmc
rcl
push
insb
stos
sahf
xorb
dec
adc
ds
cltd
jbe
jb
xor
pop
add
mov
out
xor
test
pusha
insb
test
fcomps
pop
ja
jge
jns
shl
xchg
stos
mov
mov
lods
imul
jge
mov
mov
cmpsb
or
inc
pop
cld
sti
jne
ljmp
adcl
in
test
cmp
cmp
mov
pop
push
scas
mov
mov
dec
inc
cmpsl
ret
push
movb
and
inc
out
jb,pn
jb
sub
or
out
dec
pop
jnp
inc
push
dec
xchg
fstps
sar
fbld
rol
and
shll
add
cwtl
lods
mov
fwait
out
hlt
push
adc
popa
fwait
dec
pushf
lcall
popa
push
mov
icebp
jmp
lods
or
call
mov
jl
sbb
cld
jecxz
shlb
jecxz
mov
flds
into
jg
inc
in
and
fcompp
sub
and
mov
jecxz
lea
mov
sub
mov
les
test
jmp
rcrl
in
mov
jo
mov
enter
cwtl
dec
and
mov
ss
jg
cmp
int
aas
lods
mov
ds
adc
mov
stc
inc
gs
jbe
lahf
push
mov
xchg
jmp
mov
or
add
pop
pop
pop
lret
sub
inc
out
out
rcll
dec
pop
push
lret
in
jmp
adc
or
stos
and
nop
stc
loop
rcrl
lret
cs
mov
js
xchg
aaa
mov
jecxz
or
mov
lret
or
push
xchg
mov
sub
clc
js
jb
loop
js
lods
mov
push
jbe
inc
stos
in
loopne
cmp
mov
arpl
paddw
fisubrl
push
lods
pop
test
daa
test
adc
movsb
je
fistps
xor
add
fsub
xor
outsl
outsb
pop
enter
enter
mov
push
pop
and
jne
jb
loopne
out
and
push
push
mov
mov
cmp
xlat
fdivrp
out
mov
andb
hlt
imul
jne
scas
into
shlb
rolb
stc
fsincos
mov
lea
in
sub
mov
lret
popl
subb
sbb
fmull
or
mov
outsb
in
dec
sahf
outsb
mov
addr16
int3
jb
jge
xlat
les
jge
mov
xchg
sti
and
mov
cmpsl
sti
cmpl
divb
nop
cwtl
add
cmp
enter
int
call
add
jnp
add
and
test
and
mov
mov
sti
jecxz
pop
mov
add
xor
pop
in
mov
pop
add
daa
mov
and
sub
andl
xor
rorl
jno
jo
shll
dec
adc
mov
jl
pop
xchg
pop
xchg
xor
sub
mov
mov
lcall
mov
icebp
inc
and
or
out
sub
dec
sbb
jbe
dec
fcompl
cli
movsb
sbb
sbb
es
out
adc
scas
adc
jle
adcl
xor
test
loopne,pt
outsb
mov
or
sub
and
lcall
orb
or
cs
mov
pop
fdiv
mov
sub
hlt
add
or
push
lock
sub
test
pusha
in
xor
jl
and
push
push
in
orb
sbb
and
inc
pop
and
loop,pt
cmpsl
inc
roll
out
add
dec
inc
je
je
insb
stc
popa
inc
orb
or
xor
insl
daa
test
mov
jmp
jmp
and
bound
mov
sbb
pusha
jnp
mov
xor
lret
push
daa
mov
ret
ret
or
xchg
adc
xor
or
jp
jmp
or
sahf
push
push
xchg
add
push
jl
add
mov
jbe
sbb
rclb
push
sbb
xor
repz
pop
scas
lret
sarb
xchg
inc
insb
dec
rorl
xchg
mov
cmp
test
mov
addr16
cltd
shr
ror
pop
jecxz
je
lret
test
adc
loop
movsl
xchg
mov
into
push
movsl
in
fwait
xlat
flds
mov
mov
cwtl
xor
fdivrl
hlt
xchg
xchg
xor
nop
fwait
fwait
mov
adc
enter
and
lea
pop
push
lahf
sarl
or
inc
xor
jbe
add
fnsave
and
pushf
leave
aad
sbb
mov
pop
bound
xorb
in
cs
xchg
lret
test
push
pop
arpl
sbb
stos
cmp
sub
imul
push
ljmp
cmp
jmp
movsl
stc
jae
inc
call
addl
notl
xor
sti
push
ud1
addr16
mov
dec
mov
add
jns
fucomp
and
push
mov
jmp
adc
push
je
mov
insb
dec
mov
ljmp
xor
jns
lea
mov
jae
ret
cltd
lds
outsl
inc
bound
fwait
add
lahf
sub
mov
test
test
or
mov
mov
sub
jo
movsl
xor
daa
stc
and
xlat
or
fdivl
mov
test
jge
addl
fidivrs
lret
cwtl
xor
out
mov
movsl
pop
test
imul
xchg
sbb
test
out
cltd
sbb
sbb
outsl
loopne
jmp
cmp
xchg
cmp
mov
fisttps
xor
daa
dec
jg
pushf
arpl
hlt
int
pop
ret
lods
test
aaa
inc
xor
sbb
mov
sub
push
dec
aaa
test
mov
or
sub
js
jl
xchg
movsb
jns
push
sub
cwtl
and
movsl
stc
icebp
aad
stos
bound
add
mov
cld
mov
inc
lret
imul
mov
daa
lcall
hlt
testb
sti
cmpsl
inc
mov
imul
loopne
es
dec
rclb
jo
cld
add
xchg
jae
mov
sbb
pop
mov
dec
ret
sub
lret
lock
mov
cmp
insb
or
mov
mov
cmp
mov
add
insb
hlt
pop
int3
push
push
and
sbb
mov
mov
jp
sub
jae
mov
jmp
xchg
and
hlt
add
sbb
lcall
xor
fiaddl
mov
lcall
pop
test
xchg
shl
push
add
add
sub
andb
aaa
mov
stos
sbb
mov
fisubrs
rorb
pop
sub
push
jmp
xchg
xchg
add
test
mov
mov
dec
inc
outsb
movsl
mov
fstps
jmp
in
aaa
inc
sub
nop
cli
cmpsl
in
fsubl
add
push
rcr
inc
and
pop
fwait
adc
xchg
test
add
inc
sub
pop
pusha
ss
xor
jecxz
je
inc
xchg
mov
mov
mov
popf
dec
or
push
aaa
cwtl
arpl
fs
push
fwait
jmp
rol
push
pop
test
fsubrs
out
pushf
push
sbb
push
orb
cmp
mov
mov
jecxz
fs
mov
sbb
cmp
and
sbb
lods
or
pop
inc
sarl
ficoms
mov
pop
cmp
ror
push
adc
push
push
nop
arpl
jmp
cmp
test
or
mov
xor
inc
fsubrp
jb
fsubs
icebp
es
adc
int
int3
push
pop
push
lea
jge
movsb
aas
testl
dec
inc
in
dec
lock
imul
xor
or
jp
fcmovb
fsubs
test
adc
aam
sbb
or
enter
sub
cmp
insl
cmp
lahf
loope
filds
ret
daa
aam
or
fwait
sti
outsl
inc
dec
xchg
in
cmpsb
jne
jb
or
sahf
sub
xor
or
and
out
add
aaa
fs
testb
xchg
lds
test
sub
sti
insl
std
les
rcll
lods
jp
inc
insl
dec
dec
ja
adc
cli
out
jb
cli
cld
xor
leave
inc
loop
in
shll
bound
out
mov
call
push
sti
cmp
mov
xor
fmull
mov
mov
lret
jmp
jo
dec
bound
stos
or
or
mov
lea
pushf
xor
sbb
push
fst
ret
mov
push
mov
test
insl
push
popf
inc
push
xchg
dec
xchg
data16
mov
mov
push
push
pop
jg,pn
push
les
mulb
testb
add
mov
fnstsw
test
shlb
mov
mov
icebp
inc
or
adc
scas
xchg
jno
addr16
icebp
xchg
in
sbb
cmp
out
int3
mov
loop
cmp
jne
sub
nop
orps
loope
adc
push
int3
add
push
imul
fcomi
inc
outsb
pop
ret
pop
push
jg
pop
dec
test
pop
mov
adc
mov
adc
aad
jge
in
outsb
mov
pop
xor
das
jl
jbe
in
mov
jmp
jl
rcl
or
pop
xchg
pushf
xor
lods
push
adcl
test
sbb
stos
sarb
mov
orb
fcmovne
mov
std
cltd
inc
inc
pop
inc
inc
stos
xlat
aam
or
aad
arpl
repz
sbb
mov
int
fisttps
xor
repnz
add
cltd
jl
jo
addr16
jle
out
dec
imul
ss
sbb
jmp
in
pop
adc
jge
std
adc
xchg
lds
lea
dec
iret
sti
fsubrl
adc
je
les
cmpsb
cli
stc
icebp
out
jp
sub
xor
addr16
outsl
popa
xor
das
mov
push
sahf
bound
push
popa
jecxz
push
rolb
dec
adc
pushf
add
fs
in
ret
dec
lds
xchg
pop
adc
xchg
out
pop
test
cvttps2pi
int
clc
jle
test
inc
scas
and
testb
js
add
popf
sbb
repz
dec
scas
cmp
in
add
in
out
dec
ds
adc
pop
sarb
clts
lds
cmp
push
inc
inc
push
setbe
sub
adc
loop
mov
push
push
iret
das
jae
loop
jecxz
in
pushf
cmpsb
addr16
lods
xchg
push
adc
insl
mov
and
scas
cmp
fdivrs
sbb
adc
rcl
mov
in
push
pop
add
test
inc
dec
nop
xchg
mov
adc
sub
ret
cmp
cmp
lock
mov
xchg
loope
pop
aad
cmpl
scas
lock
idivl
mov
mov
in
notl
mov
add
cmpsb
scas
dec
cmp
xorb
add
negl
es
xchg
icebp
xchg
sbb
imul
mov
push
nop
call
and
movsb
sbb
jne
cmpsl
data16
and
sbb
repz
sub
inc
push
adc
push
leave
popa
mov
cld
aad
bound
sbb
neg
mov
push
enter
inc
mov
mov
mov
stos
rolb
shr
dec
add
jmp
mov
push
test
jge
dec
mov
scas
clc
xchg
push
and
mov
subb
dec
mov
adc
into
mov
sub
and
add
adc
inc
les
js
xchg
orb
out
and
xchg
cmp
cwtl
daa
ror
ficoms
sbb
movsb
cmc
jmp
in
gs
fisubl
repz
mov
decb
push
sub
push
stos
bound
daa
dec
rolb
ds
dec
jb
xor
dec
stos
test
mov
int
add
int3
mulb
mov
cs
add
ret
cld
xor
test
xorl
mov
test
popa
pushfw
out
xchg
loope
adc
lock
cld
lret
imul
xchg
ret
stos
mov
dec
pop
xor
in
add
loopne
mov
sbb
ljmp
adc
test
inc
pop
push
fstl
bound
idivl
sarl
xor
pop
outsb
shr
xchg
pop
js
ret
mul
or
in
lcall
cmc
pop
pop
popa
cltd
push
jmp
lea
jno
outsb
cmp
mov
xchg
xorb
loop
mov
mov
mov
push
mov
sbb
pop
incl
dec
sahf
incb
sahf
push
jns
ficomps
jle
pop
bound
test
xor
daa
dec
in
sbb
bound
loopne
add
call
fiadds
xchg
add
rep
mov
fbld
inc
sub
aam
push
js
cmpsl
pop
movsl
cld
roll
pop
adc
mov
jb
roll
inc
push
jbe
out
sbb
pop
into
cs
gs
leave
jge
fwait
xor
mov
and
hlt
mov
xchg
push
popf
jno
mov
sti
fdivrl
pusha
ja
adc
mov
jo
pushf
in
aad
mov
mov
out
push
test
inc
fisubrs
xchg
roll
in
bound
adc
and
in
add
adc
push
cld
ds
push
jp
push
push
lds
or
dec
push
pop
nop
xor
pop
nop
push
call
mov
scas
xchg
inc
sbb
in
dec
pushf
push
and
dec
pop
mov
mov
inc
es
test
push
pop
push
int
cmp
fldl
mov
cli
sarl
insl
mov
jp
jl
push
icebp
push
shlb
push
test
lret
jbe
and
repnz
sub
nop
mov
inc
ficompl
xchg
lahf
xor
loop
stos
jl
pushf
mov
dec
sbb
pop
je
sarb
cmp
sub
sbb
dec
xorl
sbb
sub
mov
sub
imul
in
cmpps
out
nop
sub
dec
dec
mov
pusha
lret
pop
std
dec
xchg
stos
or
mov
dec
scas
pop
fistpl
scas
sub
call
iret
repz
icebp
int
fsubrs
inc
sbb
or
jg
xchg
in
loop
add
sub
sbb
gs
aaa
in
or
arpl
push
rcl
xchg
bound
cltd
jg
les
xchg
xlat
fisttps
mov
sarb
ret
mov
xchg
jne
scas
push
or
cwtl
mov
sbbl
pop
into
jae
push
pop
or
mov
in
in
lret
mov
dec
cwtl
jns
mov
xchg
xchg
mov
push
hlt
mov
cmp
lock
pop
pushf
imul
ds
sbb
mov
sarb
stc
loope
inc
mov
adc
in
enter
mov
lock
jle
or
fnsave
sahf
stos
call
aaa
jp
in
cli
mov
or
or
mov
jne
out
cmc
inc
int
xchg
dec
and
insl
mov
push
xlat
pop
inc
dec
cmp
js
decl
mov
xchg
stos
insl
icebp
xor
xchg
lahf
adc
mov
mov
clc
or
mov
dec
dec
stc
xchg
dec
ss
iret
mov
loop
ljmp
fmull
xchg
repz
add
test
mov
cmp
sti
inc
jbe
jg
dec
xor
jne
xor
pop
int
pop
into
inc
in
jecxz
addr16
add
adc
mov
cmp
pop
and
pop
test
cltd
push
addr16
add
dec
gs
fidivs
pushf
pop
mov
inc
mov
sub
lea
xchg
sub
mov
sbb
jo
fcomps
mov
push
mov
fisubrl
lods
test
add
jno
loopne
adc
fsubs
add
add
jecxz
gs
fstp
xchg
mov
xor
jnp
push
popf
xor
js
ss
inc
pop
or
xchg
enter
jp
fidivrs
jg
sbb
ds
push
lock
dec
jecxz
lods
addb
test
lahf
xchg
ja
push
jno
nop
insl
push
mov
sub
pop
add
shl
lock
xchg
adc
jecxz
fstl
loope
mov
cmp
sbb
add
xchg
dec
sub
subb
sbb
pop
push
dec
inc
fdivl
push
sub
mov
push
cmp
pop
cmp
sbb
test
push
les
sti
stos
sub
xor
cmpb
xchg
aam
insl
cmp
lcall
or
or
mov
mov
and
out
loope
clc
arpl
or
fdiv
xchg
xchg
dec
mov
sub
cmpsl
mov
jl
les
add
add
and
es
movsl
aaa
mov
mov
pop
sub
pop
and
cmpsl
daa
xor
and
sbb
pop
jecxz
cmp
ja
adc
sbb
jae
mov
popw
shrb
push
xor
es
and
js
lret
aam
insl
mov
mov
sbb
jecxz
outsb
out
insl
test
lds
movsb
dec
mov
fisubrs
xor
or
mov
enter
cmpsw
inc
adc
or
fdiv
mov
out
clc
push
stos
rcl
or
add
andl
cli
jp
sub
cmpsb
nop
sub
ss
mov
mov
lret
push
or
sahf
iret
std
jmp
jno
or
sub
pop
int
scas
cvtps2pi
addr16
sahf
xor
sub
push
mov
sbb
je
ret
popw
adc
mov
scas
cmp
or
insl
stc
adc
mull
mov
out
test
je
cmp
insl
test
inc
imul
stos
dec
cs
jno
xorl
or
mov
inc
add
movl
mov
mov
cli
jbe,pn
jle
jp
jg
movsl
xchg
adc
clc
enter
cmp
mov
jp
pop
pusha
cld
cmp
mov
push
push
mov
pop
sub
add
push
daa
xchg
aam
pop
add
mov
aad
dec
and
aas
out
mov
leave
out
lods
shr
jb
popa
ficoms
inc
and
mov
outsl
mov
cmc
pop
add
in
push
dec
mov
arpl
rcl
mov
lcall
cli
stos
jmp
mov
mov
cmp
addr16
add
pop
mov
or
andl
dec
push
sti
pusha
aas
outsl
xor
icebp
int3
in
outsl
xchg
sub
out
aas
fstp
adc
gs
inc
adc
mov
das
inc
cwtl
dec
pop
pop
sbb
inc
fstpl
xor
jmp
sbb
sahf
jne
mov
sbb
mov
nop
inc
or
cli
ret
add
xchg
shr
adc
mov
and
scas
test
xor
rcrl
test
pop
mov
push
pop
in
or
pop
leave
lods
mov
mov
pop
sbb
mov
imul
xchg
mov
shll
adc
dec
xor
jmp
xor
mov
sbb
dec
inc
or
add
les
mov
idiv
xchg
pop
jbe
popa
loope
mov
jbe
xchg
sbbb
cmp
clc
mov
cmp
cwtl
xor
flds
aaa
inc
mov
stos
jmp
out
mov
popa
xor
addr16
outsl
scas
je
sub
fst
inc
outsl
pop
iret
hlt
mov
push
in
xchg
popf
fisttps
sbb
in
xchg
and
gs
les
dec
xlat
adc
imul
mov
mov
out
aad
push
das
mov
loop
and
call
mov
jl
ret
gs
xor
inc
inc
push
sub
loop
imul
and
cli
lahf
inc
add
dec
push
fnstsw
ficomps
js
add
pop
cmp
out
cwtl
scas
cmp
test
dec
rorl
rcrl
push
inc
into
mov
loop
lahf
sarl
jle
xchg
nop
cwtl
ljmp
push
aaa
dec
loope
arpl
push
jmp
xchg
out
xchg
rorb
enter
iret
push
insb
orl
rclb
into
mov
mov
pop
lret
xchg
jo
cwtl
sub
cmp
hlt
cmpsb
xchg
je
test
or
sub
call
into
sub
cmp
enter
test
cltd
sub
fmuls
push
clc
sbb
shr
test
inc
lea
lahf
sbb
dec
adcb
inc
lods
ret
loop
xchg
shl
leave
mov
iret
cld
add
negl
xchg
out
pop
sti
ds
js
jl
mov
mov
jmp
cli
outsl
and
sub
pop
push
mov
js
or
adc
fnsave
int
mov
jl
das
fsubrs
sub
mov
mov
ja
mov
mov
jbe
xor
lds
adc
push
xlat
and
ja
jbe
ret
insl
xlat
je
push
ficompl
mov
xchg
cmpsl
cmpsb
mov
xor
fistpl
push
test
mov
outsb
setp
jno
or
mov
fs
insl
ret
into
mov
mov
sti
daa
rclb
mov
lea
jo
xor
cmp
mov
loope
mov
mov
mov
jns
mov
out
xchg
xchg
sub
or
xchg
rep
imulb
push
mov
jle
insl
and
out
in
stos
cmpsb
rcr
stc
popa
sub
loop
lahf
mov
cmp
repz
repnz
scas
mull
iret
addr16
dec
mov
pop
mov
xor
mov
xlat
sub
xchg
xchg
jg
imul
and
lret
mov
cmpsl
pop
xor
lds
icebp
rclb
push
jb
jns
loop
movsb
dec
cwtl
test
test
stos
and
lea
xchg
or
loope
fwait
test
outsb
das
std
out
sbb
sbb
adc
imul
je
dec
dec
or
xchg
pop
fnstsw
mov
or
pop
sub
pop
fstl
and
repnz
sahf
das
jmp
cmp
psllw
aas
or
or
xchg
push
inc
ret
mov
rorb
add
and
ja,pt
je
cmpl
lods
or
mov
stos
mov
inc
inc
inc
inc
test
sti
pop
mov
and
mov
call
loop
ds
dec
pushf
push
lcall
push
pop
xchg
jnp
dec
dec
sarb
faddl
xchg
adc
xchg
or
add
out
fbstp
lods
pop
jmp
leave
lea
or
dec
lock
neg
repnz
mov
aas
jle
jbe
decl
cld
lea
loope
dec
cmp
loop
ja
ljmp
adc
stos
cwtl
lcall
cmp
into
daa
pop
insb
jecxz
popa
and
hlt
lods
std
gs
int
mov
mov
fs
adc
sub
sub
imul
or
pop
push
int3
and
xchg
enter
aam
les
mov
mov
add
xlat
mov
shlb
push
mov
imull
sbb
or
add
movsl
adc
sahf
aam
mov
jg
push
rcll
sub
nop
jae
das
jg
or
sbb
pop
xor
adc
shl
in
mov
fcmovu
xor
outsb
leave
pop
fdivrp
scas
mov
add
dec
cs
or
mov
nop
xor
aas
mov
sahf
xchg
das
stos
out
out
mov
mov
sbb
adc
outsl
pop
mul
es
cld
psllw
pop
out
adc
test
push
dec
fs
ja
fisubrl
inc
out
rorb
xchg
or
cld
cmp
adc
lds
xor
adc
fnstcw
cmp
jae
into
fildl
lret
fwait
fwait
push
test
cmp
divl
and
add
xchg
cmp
test
xor
sbb
dec
push
add
sbb
dec
paddb
pop
pop
xlat
stos
jbe
dec
cmp
lret
loop
leave
ds
mov
fistl
rcrb
repz
and
xchg
push
lcall
xchg
mov
mov
adc
mov
cwtl
xchg
fs
jecxz
and
add
shl
xchg
mov
lea
inc
dec
pop
add
pop
sbb
aaa
fidivrs
inc
xorb
xchg
pextrw
leave
sub
sub
mov
push
inc
out
cltd
add
lock
pop
repnz
mov
dec
pop
add
shlb
sahf
pop
negl
pop
xchg
es
push
gs
aas
pop
xor
adc
repnz
mov
jp
mov
push
stc
adc
movsb
in
nop
shll
out
adc
sahf
mov
insl
ss
adc
jp
pcmpeqd
push
jno
out
clc
in
ror
inc
or
push
out
sub
in
fwait
dec
dec
stos
xor
daa
scas
in
lods
arpl
inc
jg
sbb
scas
cmpl
stos
das
bswap
lcall
push
add
jmp
cld
mov
inc
lods
push
push
push
jae
dec
scas
arpl
add
jecxz
jl
lods
lret
mov
outsl
adc
fmuls
add
jp
mov
mov
adc
cmc
sbb
rcrb
push
es
repz
xchg
and
icebp
mov
int3
jle
lret
adc
adc
enter
out
adc
inc
pop
mov
push
and
and
mov
cmp
jno
mov
shrl
xchg
pop
std
jnp
sbb
insb
sub
sbb
push
ret
pop
lret
sarl
call
ds
cmp
pop
push
leave
imul
fidivs
mov
sbb
adc
pop
cmp
roll
ljmp
hlt
aaa
movsb
and
ja
pop
cmp
roll
sbb
mov
dec
pop
shl
lret
cmp
lods
in
or
sbb
jo
pop
pop
dec
xor
and
push
add
das
fnsave
dec
push
xchg
fnstsw
popf
sbb
into
cmpsl
ja
popl
mov
cmpsb
repnz
push
sbb
push
sub
push
popa
xor
add
sub
punpckhbw
push
fdivl
fdivrl
jg
xchg
test
fstp
push
mov
xor
test
push
adc
ja
cmp
outsb
and
cmp
push
mov
into
mov
fadds
inc
adc
push
or
int3
repz
cmp
mov
push
orb
adc
in
jg
idivl
fisttpl
push
mov
lds
lods
and
std
xor
jae
ficompl
test
fistpl
bound
jb
mov
ret
xor
jne
nop
or
movsl
sbb
das
and
add
mov
insb
xlat
aad
push
inc
sbb
mulb
add
push
idiv
xor
push
mov
adc
sub
movsb
popf
pop
push
into
push
in
sub
data16
in
call
dec
mov
dec
mov
adc
lock
lret
sub
and
xchg
aaa
sbb
imul
add
inc
std
lds
adc
sahf
testl
enter
push
pushf
adc
das
mov
ja
shlb
icebp
stos
push
pop
pop
add
inc
fisubs
insb
pop
into
jmp
push
rorb
lods
bnd
inc
jmp
push
out
fstps
mov
mov
inc
mov
les
inc
or
fmuls
pushf
mov
adc
jmp
push
sbb
xor
call
aaa
js
insb
mov
jle
xchg
lods
jp
icebp
push
ficompl
sahf
addr16
jge
inc
loopne
ficompl
inc
cwtl
hlt
sbb
sbb
mov
stc
and
mov
lea
mov
rolb
mov
jge
out
jg
sbb
fldcw
clc
xor
adc
sub
dec
mov
jns
sub
cmpsb
jae
xchg
jns
mov
outsb
pop
aam
jns
adc
mov
pop
arpl
cli
push
cmp
xchg
mov
mov
fs
out
dec
cmp
popa
push
dec
cmp
mov
dec
push
push
insl
fstps
or
popf
loopne
inc
mov
andb
sub
mov
add
adcb
ret
leave
and
cmp
popl
shrl
mov
iret
call
outsl
sbb
or
leave
add
das
xor
sbb
push
ficoms
mov
adc
rcll
or
inc
mov
inc
xchg
cmp
push
aad
pusha
ret
icebp
mov
add
shr
dec
mov
and
inc
adc
push
push
xchg
xchg
popa
sub
popa
mov
xor
out
int
cmp
pop
mov
rorb
mov
notl
fdivs
cli
add
mov
xchg
repnz
push
jle
mov
sub
cmpsl
cld
shl
wbinvd
cmpsb
mov
cmc
or
pusha
lahf
loope
stc
aaa
adc
inc
fisubl
ret
out
popa
xlat
out
mov
adc
repnz
xor
jb
ss
and
push
mov
repnz
lods
mov
hlt
fs
aas
dec
ja
in
push
loope
lret
icebp
aad
push
mov
cs
ficoms
test
xor
mov
jmp
shrb
cmc
sbb
mov
fldl
dec
pop
cmp
xor
jmp
ds
dec
cmp
mov
out
test
lret
push
adc
sbb
push
prefetch
clc
add
test
xor
mov
lahf
lahf
pop
leave
sub
lahf
loopne
fs
popa
aaa
dec
lods
rorl
xor
ficoml
inc
sbb
xchg
jge
pop
nop
aam
hlt
adc
adc
mov
and
mov
jae
mov
popa
and
fnstcw
arpl
adc
divb
push
jg
cli
mov
stos
push
push
rcr
sub
lcall
aaa
mov
sbb
fs
jl
adc
pop
cmp
mov
xchg
bound
nop
pop
idivb
ret
test
mov
stos
xchg
or
rclb
outsb
cmc
enter
ret
or
xor
cld
rcll
cld
mov
mov
ffree
ljmp
ds
pop
add
xchg
xchg
icebp
mov
test
cli
shll
add
xchg
push
lret
adc
aaa
ljmp
cmp
jo
js
pop
jnp
mov
push
lock
dec
sarl
mov
xor
ss
js
fstpl
fistpll
push
lcall
bound
in
sbb
mov
ficompl
xchg
ss
aas
mov
xchg
pushf
cld
test
mov
cmp
shll
sbb
mov
and
imul
dec
mov
xchg
in
xchg
cwtl
icebp
or
mov
adc
fdivl
mov
add
push
and
mov
sarb
sub
test
ja
test
mov
mov
sbb
adc
int
push
stos
inc
mov
mov
dec
scas
jne
repnz
inc
push
std
pop
in
jp
in
sbb
sbb
mov
ror
mov
sti
cmp
xchg
and
insb
xchg
scas
add
out
aas
movsl
scas
add
gs
std
adc
cwtl
lods
jae
rorb
hlt
call
mov
js
loop
int3
push
and
adc
and
lret
leave
sub
sub
and
mov
dec
fistps
mov
fstpl
cmc
cmc
mov
jg
sub
and
das
push
jns
js
and
or
sti
push
jl
and
lock
dec
xchg
add
mov
inc
movsb
mov
sbb
pop
sbb
incb
imul
test
sub
mov
sbb
inc
mov
jmp
fbld
out
lods
xor
mov
xchg
jg
jge
icebp
dec
push
imul
push
icebp
imull
subb
add
mov
sub
sbb
test
xor
rcr
test
stos
mov
enter
outsb
movsb
lock
hlt
shll
cmpsl
movsb
loopne
mov
or
pop
hlt
je
inc
mov
fnstcw
adc
xchg
test
dec
dec
pop
sbb
out
jg
fnstcw
out
mov
jp
adcl
push
mov
rcrb
cmp
jl
jnp
sbb
cmp
mov
test
cmp
into
adc
add
fstpt
ljmp
shl
stos
mov
scas
jp
lahf
das
stos
dec
shll
jno
popf
out
divl
and
pop
push
std
push
or
arpl
pop
icebp
push
push
cli
xor
popf
sub
cmc
and
and
xchg
pop
push
lods
call
decb
inc
cmc
sbb
lcall
push
jmp
xor
jmp
or
cmp
cmovg
or
lcall
daa
decb
imul
jmp
ffreep
in
lahf
scas
fidivrl
sbb
add
xchg
stc
enter
pop
addl
jnp
bound
std
jae
fmull
clc
xchg
add
lods
nop
or
sbb
or
dec
int
lret
mov
xchg
jle
jbe
or
mov
lds
dec
xchg
and
xchg
or
ret
mov
out
jns
addl
ret
negb
inc
jb
into
adc
dec
out
pop
xchg
aad
lahf
adcb
fcomps
popf
inc
mov
clc
test
adc
popa
ss
cld
mov
hlt
adc
lcallw
test
push
stc
cmp
mov
lcall
fs
cmpsl
int
xchg
jo
fwait
loop
cmpsl
mov
lahf
cmp
fimuls
jbe
sbbb
sahf
divl
ljmp
dec
inc
pop
imul
out
fisubrl
xor
bound
and
mov
adc
adc
mov
je
call
adc
dec
fsubr
insl
cmpsl
aas
dec
fisttps
and
cs
push
sub
sbb
into
les
pop
jnp
iret
imul
daa
in
mov
shlb
cmp
mov
xchg
push
pusha
js
aas
inc
cmp
std
sbb
fld
subb
repnz
lods
add
out
rorl
xchg
or
fcmovu
popf
lods
je
lds
push
iret
jl
lret
ror
into
shll
pop
in
pop
jg
roll
pusha
pop
fnstcw
or
cmp
pushf
data16
lods
jae
lds
sub
inc
leave
popf
push
ja
mov
mov
mov
inc
flds
out
cmp
add
jno
sub
or
cli
pop
mov
inc
icebp
sub
outsb
jno
loopne
jae
add
icebp
fildl
popa
ljmp
inc
out
or
test
mov
ret
aad
sbb
mov
fs
cmp
jo
dec
or
push
adc
mov
mov
daa
add
into
popf
push
in
or
clc
lahf
mov
xchg
sub
aas
enter
jle
sub
pop
test
in
pop
lret
sbb
lock
addr16
mov
adc
in
testb
mov
out
pop
scas
sbb
jge
movsl
jb
pop
ljmp
mov
out
push
xchg
xor
dec
fisttpll
xor
cmp
mov
mov
mov
je
stc
add
icebp
mov
cmp
sub
xchg
cltd
add
lcall
cmp
adc
push
lret
push
inc
xchg
popf
push
repz
mov
cmc
js
add
add
mov
push
xchg
and
inc
call
movsb
flds
leave
lea
sub
xor
or
pop
cltd
out
ljmp
lret
in
cmp
pop
inc
adc
cltd
or
or
xor
int3
daa
cli
aad
jge
lcall
scas
mov
sub
xchg
mov
add
cmpsl
xchg
faddl
push
mov
cmp
mov
ss
inc
jl
push
movsb
test
hlt
jb
mov
popf
mov
gs
dec
ret
dec
push
popl
sbb
sbb
test
sbbb
jns
mov
jae
out
mov
ss
cmp
cs
ficompl
adc
and
xchg
mov
ja
pop
sbb
pop
add
cs
or
loop
adc
xchg
cld
add
cmp
mov
cmp
mov
clc
icebp
repz
mov
add
scas
subb
push
jg
cld
xor
testb
cs
test
lds
add
lea
xor
jbe
jnp
scas
pusha
jmp
cli
mov
xchg
sbb
in
dec
int
mov
mov
or
aaa
push
das
movsl
add
jle
adc
push
lcall
std
sarl
int
lcall
mov
fwait
cltd
cmpsb
aas
icebp
dec
xchg
mov
jno
loopne
repz
movsb
jnp
adc
pop
xchg
jbe
daa
xlat
in
fisttpll
add
mov
insl
add
mov
insl
ret
xchg
insl
xor
xchg
in
push
dec
les
aaa
loopne
aas
adc
push
jl
jl
push
xor
xchg
repnz
mov
ret
repnz
filds
lock
addr16
mov
faddp
popa
push
mov
sub
lods
lods
fld
cmpsl
push
pop
sbb
push
popa
sub
lds
xchg
loopne
cmp
ds
popa
fldl
sbb
in
jae
pushf
jle
or
iret
cli
xchg
pop
or
cltd
cmpsb
jle
adc
or
or
aas
setno
addr16
cmc
mov
cwtl
je
cmp
fidivrs
jge
or
das
and
push
jmp
push
out
test
sbb
scas
push
call
shlb
aad
popf
loopne
mov
dec
pop
cmp
mov
or
in
nop
scas
movsb
cmp
sbb
loope
cmp
lcall
dec
push
jns
lret
sbb
sbb
xor
sbb
repz
and
lcall
inc
mov
mov
push
add
out
and
inc
ss
scas
je
mov
adc
hlt
inc
test
fincstp
pushf
loopne
fsubrs
push
cmp
ret
inc
or
push
jg
sub
xor
lods
xchg
imul
es
rorb
xchg
mov
mov
dec
and
in
fwait
xchg
popf
jne
addr16
push
fcoms
popf
add
mov
lahf
sub
out
cmp
xchg
dec
loope
push
shlb
rclb
pop
cmp
lcall
mov
mov
mov
or
and
lahf
cmp
cmp
pop
es
mov
xchg
adc
push
xchg
daa
notb
add
or
xchg
mov
lahf
sbb
xlat
sub
jmpw
cmc
inc
adc
jecxz
outsb
test
pop
inc
pop
mov
subl
out
dec
std
adc
movsb
aad
fildl
mov
stos
ljmp
push
fcoms
mov
in
xor
mov
add
push
punpckhwd
mov
and
cmp
lret
in
sbb
dec
mov
mov
ja
xor
repnz
push
add
cltd
insl
ficomps
dec
sub
inc
pop
cmc
mov
test
fildl
neg
xchg
into
je
push
sub
cmpsl
jb
fbstp
test
pop
imul
loope
pop
shll
fs
xchg
iret
popa
mov
sti
cmp
enter
fstcw
and
push
mov
lods
xlat
pop
push
sub
jns
mov
insb
call
jo
insl
addr16
sub
push
iret
mov
loop
aaa
or
lock
cwtl
push
test
loope
jbe
shlb
insl
imul
dec
hlt
jns
sbb
sbb
pop
sbb
sbb
or
cld
mov
in
adc
in
fmul
jg
outsb
xor
and
sub
loopne
and
lret
rcrb
add
mov
xlat
inc
cmp
fldt
xor
adc
jl
and
push
cmp
or
test
test
jae
jmp
outsb
out
pushf
cmp
stos
jecxz
or
out
je
rorl
add
test
jmp
inc
mov
pop
pop
ret
xor
cs
sti
es
stc
mov
inc
cmc
xchg
mov
pop
xor
imul
adc
fnstenv
pop
jp
lods
in
or
shll
lcall
push
add
cmp
push
cmp
mov
sbb
cli
loopne
gs
mov
pusha
jle
inc
mov
repz
add
sub
jbe
pop
inc
pop
add
jne
pop
daa
into
xor
test
mov
out
xchg
outsl
sub
xchg
push
xchg
and
rcll
xchg
mov
int3
inc
inc
mov
sub
sub
and
addr16
sbb
sbb
add
inc
pop
xchg
jmp
add
inc
loope
fdivs
or
sub
adc
mov
outsl
nop
sbb
mov
inc
cld
inc
lahf
inc
and
mov
dec
jae
jb
jge
popf
mov
inc
aas
arpl
fidivl
mov
addr16
xchg
pop
das
push
and
pop
xlat
mov
cmp
sahf
fdivr
mov
mov
sub
xor
les
stc
inc
into
mov
pop
adc
sub
or
dec
popa
mov
es
movsl
stc
jns
shlb
xor
mov
mov
cmpsb
add
and
repnz
xchg
dec
add
jmp
xlat
cmp
xor
out
pop
cmp
ret
sbb
dec
fsubl
pop
adc
sub
push
lods
push
and
ljmp
sub
clc
cmp
xchg
daa
jl
xchg
call
cmp
xchg
xchg
aam
hlt
scas
dec
pop
xchg
adc
fsubrl
ret
cmc
ficoml
add
call
and
test
jmp
pop
cmp
lods
loope
sub
jecxz
xor
leave
arpl
cli
pop
loop
pusha
inc
adc
movsb
movsb
movsb
daa
jns
out
add
xchg
frstor
je
mov
xlat
je
bound
test
popf
mov
mov
lods
stc
fldl
mov
fnsave
xchg
fpatan
xlat
sbb
sahf
out
test
push
enter
test
adc
ret
mov
sbb
and
mov
in
cmp
popf
push
sbb
mov
lea
mov
mov
xlat
sahf
adc
adc
imul
lcall
aaa
shl
ret
dec
mov
cltd
push
xor
pusha
dec
push
jbe
cwtl
leave
fisubs
mov
lret
sti
stos
push
mov
mov
jbe
xchg
mov
xor
dec
inc
in
add
sbb
loop
jb
cmp
ss
jb
pop
int3
lcall
jne
jo
sub
sbb
add
inc
sbb
sbb
push
jae
je
xor
bswap
mov
test
je
mov
mov
fisttpll
mov
jg
mov
repnz
adc
pop
cs
fistps
xor
jnp
mov
ret
dec
mov
dec
out
push
ret
pop
push
dec
ret
lods
test
loope
add
dec
shl
or
xlat
jp
lods
test
or
imul
or
jge
inc
cli
and
push
fsubl
jmp
push
mov
mov
stos
sbb
loop
fcomps
sbb
xchg
push
adc
and
add
lea
sub
clc
push
xorl
cmpsb
or
inc
sbb
sti
orl
xchg
adc
mov
xchg
jb
jae
cltd
or
outsb
mov
fdivrs
xchg
push
sbb
or
push
push
push
xor
test
push
dec
outsb
flds
pop
or
xor
add
jle
idivl
mov
in
test
xor
jns
xchg
je
cs
les
fisubs
rorl
or
stc
or
mov
jg
mov
mov
in
out
enter
pop
test
add
shl
sub
pop
jmp
xor
out
mov
inc
sub
decb
fnstcw
je
xor
mov
bound
add
in
mov
push
mov
mov
add
cmp
das
inc
push
mov
insb
insl
fisubl
cld
jmp
and
cltd
cmp
in
sub
xchg
outsb
stos
and
cli
loopne
sbb
ficoms
pop
iret
sbb
stc
ror
xchg
and
dec
and
mov
or
mov
pop
xchg
push
jg
and
mov
xchg
fiaddl
xchg
push
pop
or
add
xchg
dec
jbe
out
xchg
jbe
addr16
lock
repz
adc
loopne
jmp
or
fdivr
push
pop
stos
cmp
and
xchg
icebp
xor
stos
xor
ds
or
imul
and
imul
jmp
fmull
push
mov
lcall
cmp
mov
scas
xchg
int3
lods
cmc
int3
pop
and
movsl
jns
push
mov
stc
movsb
push
dec
dec
arpl
fcoml
jns
loopne
fcoml
cmp
notl
push
sub
cmp
bound
test
flds
mov
add
daa
int
jle
push
xchg
repz
movb
adc
jb
mov
mov
lock
cs
adc
out
mov
dec
jns
out
ror
mov
movd
pop
lcall
outsb
dec
push
push
ss
nop
movsb
jl
xor
das
xchg
data16
test
in
and
pop
jp
inc
and
xchg
xorb
add
sbb
mov
cmp
in
rcrl
shlb
push
pushf
and
xor
dec
fcompl
jnp
add
aaa
loope
fidivrs
add
out
ljmp
pop
dec
test
jo
pop
addr16
scas
lahf
xchg
cltd
mov
test
push
jecxz
dec
test
loope
mov
popf
leave
out
sbb
sub
cmpsb
out
cmp
and
jnp
daa
or
mov
mov
ret
xorl
clc
out
sbb
test
fists
cmc
xor
imul
xor
xchg
add
mov
jns
sarb
mov
xchg
dec
jae
neg
test
popa
adc
clc
lcall
pop
out
lea
scas
out
outsb
jb
inc
push
outsb
adc
data16
sub
lods
dec
mov
ret
out
jp
in
clc
stos
iret
lahf
stos
sahf
dec
into
mov
mov
test
adc
or
jecxz
cld
mov
gs
xchg
ss
std
adc
or
or
push
pop
xchg
stc
jnp
xchg
inc
dec
inc
frstor
lea
adc
xchg
adc
and
mov
ret
push
cmpsl
sub
ret
mov
cmc
push
xchg
add
jecxz
push
lcall
jb
addb
jl
add
mov
inc
scas
push
jae
and
test
cmp
adc
je
shr
fnstsw
mov
notl
push
adc
in
xorb
mulb
cmp
fcmovnu
sub
fcmovu
mov
add
rclb
aas
icebp
lea
mov
popa
dec
bound
xor
sub
data16
xor
mov
dec
sub
lret
not
pop
add
mov
imul
add
bound
testb
mov
cli
shll
dec
push
sub
popf
lret
ja
sub
inc
xchg
data16
or
cld
push
pmullw
jp
fdivp
outsl
and
jg
outsb
aam
neg
push
sbb
xchg
or
mov
test
idivb
and
push
call
into
and
bound
dec
push
jae
inc
pop
aam
jg
inc
mov
std
call
cli
mov
arpl
btrl
add
mov
adc
xchg
aas
jne
aaa
mov
pop
cmp
sub
sub
outsl
pop
lods
int3
xchg
sbb
or
or
decb
cmp
adc
fistpl
shlb
cmovbe
hlt
jge
ss
cwtl
in
inc
mov
mov
rcr
push
sbb
cmpsb
fsubp
mov
pop
sub
je
fdivs
sbb
cwtl
lret
pusha
popf
test
scas
loope
ret
adc
xchg
mov
xchg
sub
inc
sbb
xchg
iret
mov
int
xor
mov
adc
mov
or
cmpsl
arpl
sub
cli
cmc
neg
pusha
fisttpl
dec
movsb
push
in
jae,pn
ljmp
shlb
lock
xchg
or
sub
je
xchg
into
mov
loop
lahf
popf
sarl
dec
aam
xor
and
shr
sbb
dec
int3
push
mov
data16
negb
fnstenv
popa
cmp
xor
dec
ss
lds
sbb
xchg
mov
cmp
mov
pop
rcr
aam
and
cwtl
sub
mov
popa
test
cmpsb
or
out
xlat
mov
jg
out
shl
popa
xor
mov
push
outsl
scas
pop
movl
call
mov
push
adc
jg
adc
push
int3
inc
fdivrl
movsb
xor
jns
data16
sbb
inc
outsl
imul
fmulp
mov
lahf
jmp
push
sarl
cmpsb
out
jp
cmpl
daa
adc
je
push
in
sar
jno
mov
cmp
fsubr
je
mov
loop
xchg
aaa
scas
mov
hlt
dec
or
sub
push
repnz
aas
jb
stc
mov
inc
aam
mov
stos
in
cwtl
imul
xor
and
xchg
insl
int
rorb
insl
mov
and
les
xor
ds
shrb
lds
imul
dec
pop
data16
inc
mov
cmp
clc
mov
negb
in
sbb
test
aas
fucomip
jb
sub
mov
daa
mov
loopne
cmp
or
ret
stos
js
mov
xchg
adc
lea
xor
test
adc
xor
lret
cmpsl
xor
test
or
jbe
adc
lock
cmpsb
add
mov
lcall
mov
add
push
int3
dec
sbb
xchg
dec
call
popa
mov
movsb
xlat
pop
xor
mov
push
jns
xlat
adc
and
call
int3
inc
pop
mov
pop
cwtl
xor
push
mov
stc
xchg
push
call
jno
cmpsb
dec
sarl
mov
sub
mov
add
ret
pop
and
dec
int3
rcl
mov
clc
pop
js
lds
mov
xchg
push
fnstenvs
cmc
mov
int3
and
mov
fstpl
pop
fsub
dec
rclb
jne
scas
xor
pusha
scas
lods
inc
fldcw
sub
jns
data16
pusha
pop
aad
push
pop
xchg
ja
sahf
push
and
jle
movsw
or
insb
cli
dec
sub
pop
int
imul
dec
sahf
inc
aaa
hlt
pop
pusha
mov
decl
mov
lret
jne
in
mov
mulb
lods
xchg
pop
xchg
shlb
sub
insl
ja
popa
xor
ret
adc
inc
jo
sbb
sbb
faddl
add
int
int
sbb
popa
ds
mov
jg
cmpsl
rcr
adc
or
stos
test
aas
sub
std
cmp
mov
add
or
dec
push
cmp
jmp
sbb
lods
cmp
jg
mov
pop
test
mov
rcrl
jo
subl
js
dec
mov
movsl
addl
mov
daa
jo
pcmpgtd
jmp
xchg
mul
lahf
jmp
mov
and
shl
and
adc
fstpl
data16
pushf
imull
in
mov
stos
xchg
cwtl
add
xchg
repz
xchg
ds
mov
lds
mov
sbb
repz
cmp
lret
ret
mov
int3
popf
sub
or
outsb
adc
jb
mov
inc
jnp
pop
inc
mov
mov
push
mov
stos
jb
ret
hlt
sbb
add
pop
rcrl
or
jl
mov
and
push
daa
push
dec
rcrl
mov
jl
pop
xor
xchg
sbb
enter
pop
aaa
pop
sub
in
lods
outsb
nop
scas
test
and
mov
stos
fisttpl
orl
xchg
cwtl
mov
cmp
js
hlt
cli
xchg
and
lods
enter
imul
adc
xchg
and
ss
lcall
dec
in
inc
xlat
les
pop
inc
adc
push
ret
or
pop
outsb
lahf
addb
lret
shlb
test
into
xchg
sbbb
sub
inc
push
push
nop
pushf
push
movsb
mov
ret
test
insb
mov
xor
scas
cwtl
and
cmc
pop
jecxz
cwtl
out
adc
test
gs
out
lret
or
xchg
inc
adc
fisttpll
pop
in
jl
clc
fnstcw
outsb
outsb
movsl
lods
cmp
add
and
and
xorb
je
mov
pop
mov
jg
lods
popa
dec
push
and
sub
vpmacssdql
jg
ds
push
in
sbb
sbb
cmp
ficomps
push
fcmovb
pop
cmc
fs
movsb
in
int3
fldt
pop
pusha
mov
iretw
push
xchg
adc
or
fimull
mov
add
gs
das
data16
dec
and
movsb
inc
out
mov
jg
and
cwtl
sub
sub
sbbb
xchg
jge
push
test
imul
pop
jo
mov
arpl
in
inc
out
enter
ret
mov
xor
lret
sbb
mov
pop
xchg
cld
adc
adc
iret
pop
imul
sub
push
xchg
fcmovbe
sub
fwait
mov
lea
or
loope
int3
das
inc
mov
mov
mov
lock
nop
les
jnp
loopne
push
pop
adc
hlt
and
insl
push
movsb
fdivr
fists
sbb
push
sbb
adc
mov
push
or
sub
scas
int
lods
lods
clc
lods
add
daa
lret
push
jo
sbb
mov
shll
pop
jns
inc
jbe
mov
mov
push
cltd
cmp
repz
scas
jnp
cld
test
leave
call
xor
push
xchg
aas
je
call
stos
cli
mov
pop
stos
pusha
and
pushf
pop
cmp
sbb
arpl
insl
inc
movb
push
pop
rcll
enter
ret
jnp
pushw
add
sub
mov
int3
cmpsl
adc
dec
cltd
fidivrs
xchg
pop
cmpsb
xchg
xchg
cmpsl
out
aam
mov
stos
fnstenv
xor
push
inc
test
push
ds
add
and
mov
gs
dec
pop
jmp
pop
ds
xlat
test
pop
dec
ljmp
mov
or
imul
cmp
sbb
sub
push
cltd
sbb
jp
xchg
lahf
and
cmp
test
xchg
push
dec
sbb
fisubs
das
sub
outsb
repz
mov
aam
es
pop
pop
and
pop
jne
test
mov
inc
sbb
jg
sub
mov
xchg
cwtl
mov
jb
popa
inc
pop
jae
insl
xor
das
test
sbb
cltd
aad
pop
cmc
loope
pusha
out
push
in
jns
jne
ficomps
orb
cmpsb
les
in
mov
cmp
xchg
mov
pop
notl
xor
cmpsb
dec
sub
shrl
mov
jmp
lock
pop
mov
lock
inc
std
leave
loop
test
xor
mov
push
fbld
sub
lods
mov
or
aas
call
xor
and
or
sub
imul
jge
clc
cwtl
and
fadd
pop
push
mov
imul
sbb
mov
inc
lea
sub
cmp
jno
bound
in
xor
pop
adc
test
lds
loope
and
push
ja
ss
in
inc
mov
imul
cltd
pop
popa
out
inc
mov
mov
clc
dec
popf
xchg
in
pusha
mov
and
lcall
sbb
call
or
mov
jle
pop
pop
aas
xchg
cltd
rolb
test
daa
cmc
lods
in
xor
scas
pop
inc
or
push
mov
jg
mov
cmc
dec
ret
mov
mov
adc
push
inc
sbb
shlb
outsl
pop
jns
stos
std
cmp
movsl
popf
mov
jecxz
mov
sbb
or
daa
cmp
cld
sbb
add
or
into
out
icebp
ret
fwait
shll
pop
mov
imul
cltd
dec
int
pop
loope
data16
mov
pop
mul
mov
adc
and
or
je
jl
or
jb
push
js
mov
mov
mov
sahf
int
out
stos
mov
mov
add
mov
and
ret
inc
fidivs
ds
bound
add
pop
adc
shrl
ljmp
add
xchg
adc
sbb
sti
je
lea
fwait
mov
jecxz
fiadds
sti
pop
mov
ss
out
inc
pop
inc
mov
mov
addr16
xor
fsubs
test
pop
jmp
xlat
mov
xchg
jno
xor
add
lret
push
dec
fnstsw
xchg
jno
sti
inc
fwait
in
pop
lcall
mov
dec
pusha
lods
cmp
mov
sub
lcall
rorb
pusha
mov
int
cltd
add
mov
push
loope
or
cltd
cmpsb
stos
and
xor
sbb
daa
mov
push
fsts
mov
add
cwtl
lret
into
sbb
rol
jnp
cmp
jno
pusha
shl
hlt
cmpsl
scas
sarl
lahf
xchg
ret
mov
stos
dec
mov
and
sub
sti
in
leave
mov
and
or
pop
jns
cmc
ret
dec
and
mov
jno
push
ret
push
fistl
jg
add
cwtl
notb
mov
mov
fistpll
push
mov
cmc
pop
cmp
dec
popf
outsb
jmp
mov
arpl
shl
add
iret
mov
test
addr16
jp
adc
sbb
jnp
ljmp
loop
insl
movsl
inc
stc
push
clc
jne
int
xorl
and
fs
fsubrs
fdivr
sub
es
inc
mov
lret
inc
arpl
test
or
nop
adc
push
fildl
inc
or
ja
pusha
mov
aam
dec
mov
push
xchg
int
pop
xor
xor
adc
bound
xchg
or
movb
lret
out
jbe
cmp
stc
push
push
xor
mov
test
mov
addr16
sti
mov
jb
pusha
sbb
hlt
xlat
daa
in
dec
push
xchg
jnp
rclb
out
xchg
int
mov
jmp
and
cmp
add
subl
cmc
scas
xor
icebp
test
and
sub
push
jbe
sbb
adc
xchg
imul
jb
mov
or
mov
jno
test
mov
pop
jl
daa
dec
sub
outsl
popa
mov
cmp
pop
gs
sbb
lret
imul
cmpsl
xchg
cs
test
jl
jecxz
or
addl
outsl
inc
pusha
xor
mov
jecxz
stos
pop
mov
cmp
cmp
data16
daa
movsb
pop
jno
shll
push
gs
es
fstpt
dec
lock
or
pop
jl
aam
leave
push
push
push
inc
dec
aaa
xchg
cli
xor
fstps
dec
enter
js
aas
pop
and
hlt
jle
mov
movl
imul
repz
and
in
movsb
push
jne
mov
rclb
and
and
sub
push
enter
pop
add
mov
jb
xchg
xor
test
loope
lret
addr16
das
sub
adc
orl
aad
sub
push
and
subb
mov
out
lret
inc
int
or
sarb
cmp
pushf
movsl
sahf
dec
push
out
outsl
sub
ljmp
sbb
push
add
push
fldenv
push
pop
incl
hlt
lcall
pop
shlb
sub
cmpsl
xor
pop
cmp
in
hlt
dec
and
lahf
add
enter
pushf
js
mov
adc
inc
mov
cmpsb
jle
jne
sbb
inc
lret
mov
nop
sbb
push
ljmp
adc
inc
add
mov
sub
lock
das
sub
icebp
mov
loop
fstpt
xchg
jo
loopne
enter
popf
int3
cmpl
jmp
fimuls
inc
push
xchg
mov
aaa
add
popa
sti
adc
std
cmp
out
fbstp
inc
mov
push
out
hlt
dec
xor
push
push
cmp
cmpsl
das
lahf
adc
xchg
repnz
movsb
sbb
push
sbb
jo
pop
cli
lret
mov
and
add
ds
rcrb
inc
sbb
enter
dec
movsl
in
jp
dec
add
and
cmp
outsl
int
lods
xor
loop
push
rolb
pop
jns
mov
pop
aam
xor
cmp
dec
or
jae
out
dec
or
jo
mov
iret
rorb
int3
popf
pop
jne
pop
mov
mulb
lea
pop
cmc
pop
lods
lret
inc
cmp
shl
fmul
cli
jne
out
mov
push
or
lods
stos
inc
test
xor
sub
jg
in
jge
or
lods
jno
and
add
lds
sbb
xchg
xchg
outsb
ss
xor
jmp
jp
pushw
mov
icebp
cltd
movsl
ljmp
dec
popf
cmpsb
adc
lahf
mov
stos
and
pop
jmp
sub
out
leave
push
cmpsl
lds
stc
cmp
sbbl
out
jns
adc
xchg
add
xchg
in
push
or
aas
jmp
push
lea
fiadds
sbb
es
pop
test
test
nop
pop
test
ja
into
mov
shl
in
pusha
jecxz
mov
xor
push
cmpsb
jae
jge
jecxz
test
ror
pop
cmp
add
repz
mov
test
and
dec
add
adc
pop
mov
bound
out
lea
dec
popf
fcmovne
adc
std
cmp
mov
mov
mov
and
inc
dec
sub
leave
popa
mov
cmp
xchg
rcll
scas
sub
pop
int3
dec
testl
push
repz
lea
add
jns
sub
cmp
outsb
test
jle
pop
in
push
mov
pop
jp
xchg
inc
fcmovu
fsubrs
hlt
adc
pop
gs
out
or
rcrl
add
repz
ss
xchg
add
or
dec
sub
mov
repnz
mov
int
mov
fs
adc
xcrypt-ofb
cmpsl
stos
imul
xchg
push
add
inc
push
push
add
xor
aas
jle
and
jp
psubw
pop
repnz
pop
mov
fidivrs
sahf
loop
call
aas
jmp
sub
hlt
rorl
push
xor
mov
xchg
mov
fistps
cmpsb
pop
pop
shll
jge
mov
sub
loopne
xchg
add
inc
cmp
pop
mull
push
push
in
repz
xor
out
cli
imull
lret
roll
inc
push
xchg
mov
xor
or
mov
sar
rcrb
mov
ja
fwait
rolb
das
lock
bound
pushf
pop
sbb
inc
addr16
add
pusha
daa
xchg
pushf
ret
fwait
xor
and
test
mov
iret
adc
and
sbb
jnp
fwait
in
iret
aad
pop
dec
mov
xor
scas
pop
dec
mov
sahf
shll
or
mov
fildll
cmp
andb
and
sub
xchg
or
adc
in
fcoms
lcall
in
jns
xor
sbb
inc
mov
add
sti
and
inc
and
cwtl
std
cmp
sar
mov
dec
enter
push
dec
dec
lods
jae
jmp
jns
add
dec
dec
cmpsb
pop
loope
dec
arpl
lods
adc
xchg
xchg
flds
das
pusha
imul
mov
jle
push
cmp
outsl
xchg
pushf
cli
jecxz
pushl
aam
icebp
fwait
pop
out
push
inc
into
mov
jmp
testl
push
arpl
push
cwtl
dec
fcoml
scas
mov
je
mov
aas
adc
add
push
fidivs
mov
cmp
sub
dec
fwait
sub
pop
outsb
and
stos
xlat
jbe
arpl
mov
nopl
push
pop
sbb
cmp
fidivrs
xchg
adc
mov
ret
sub
pop
push
popf
jnp
push
jge
jae
and
cltd
js
outsb
xchg
pusha
mov
mov
dec
decb
test
pop
pusha
mov
popf
xor
xchg
das
dec
mov
xchg
jle
insb
jbe
clc
jl
inc
scas
adc
iret
sbb
pop
cmpsl
fmul
das
insl
sbb
mov
lods
mov
push
adcl
cltd
push
pop
mov
add
pusha
push
clc
gs
ficomps
cmpb
mov
lock
sub
add
andb
ds
cld
into
ljmp
inc
mov
ret
push
mov
adc
int
jb
sub
popa
mov
mov
repz
test
movsb
mov
pop
repnz
push
das
fwait
sbb
pop
mov
int
pop
pop
dec
cmp
mov
mov
ss
xor
or
jge
rcrl
add
cmp
xor
ljmp
imull
sub
adc
adc
and
mov
sub
dec
out
push
imul
icebp
jecxz
inc
or
in
cli
or
or
jae
push
inc
call
sbb
push
xchg
xchg
or
xor
pushl
pop
jmp
into
adc
fs
adc
in
js
mov
sbb
mov
inc
push
sub
push
push
and
in
xor
iret
popa
movsl
sub
dec
jp
adc
outsl
out
adc
mov
cmp
sub
cwtl
loopne
in
call
icebp
jge
xlat
sbb
mov
mov
dec
aad
adc
mov
cltd
cmc
jae
fsubp
or
scas
push
aaa
jae
sub
add
and
popa
js
sbb
jecxz
loope
outsb
or
jns
adc
pop
jg
xor
dec
dec
pop
push
mov
pop
imul
divl
ror
xor
shlb
push
pop
and
xorl
cmc
mov
mov
cmp
xor
aad
push
lret
add
push
inc
movsb
arpl
mov
xchg
aam
shr
push
aas
lret
inc
out
push
cli
cmp
lret
xchg
mov
xor
ret
mov
xchg
lcall
jcxz
scas
jb
pop
xorl
sub
cmpsl
sub
dec
xor
fwait
dec
ljmp
mov
in
in
in
in
adc
sahf
xor
xchg
push
sub
sub
push
mov
mov
add
into
mov
adc
test
lock
sbb
cmp
xchg
fisubl
push
inc
jge
dec
dec
or
fadds
jae
adc
mov
daa
xchg
sbb
push
ja
popa
pop
fdivrs
es
jbe
hlt
jb
addr16
icebp
mov
es
jmp
lods
sbb
test
or
cli
xlat
or
popa
mov
pop
pop
pop
flds
fs
mov
dec
inc
pop
sbb
decl
ret
and
ffreep
out
dec
mov
mov
outsl
mov
lcall
fimuls
fidivl
roll
imul
dec
mov
jb
rclb
imul
or
adc
out
outsb
outsl
int
rcll
std
inc
cli
sub
fdivrs
ficompl
outsl
xor
xchg
fwait
mov
inc
inc
ljmp
in
test
les
xchg
pushf
cmc
add
jnp
mov
hlt
jb
inc
or
and
jne
xchg
mov
inc
jmp
sbb
popf
cltd
pushl
bound
push
decl
nop
in
add
and
sub
inc
and
xchg
mov
call
in
sbb
insb
mov
dec
mov
rclb
and
mov
loop
pop
mov
aad
mov
loop
aaa
add
negb
les
in
push
out
dec
mov
or
insb
push
xor
sbb
call
mov
out
and
mov
sub
popf
xchg
arpl
mov
data16
imul
push
pop
pop
aam
pushf
pop
mov
ljmp
sub
das
dec
xchg
xchg
repnz
cmp
sub
inc
inc
pop
and
sub
mov
mov
pop
lods
adc
add
test
mov
jns
dec
push
xor
pop
leave
or
pop
adc
pop
stos
mov
aad
or
jge
mov
dec
in
scas
inc
fidivs
mov
push
dec
enter
mov
fwait
pop
fmuls
add
rcl
js
mov
push
push
shl
pop
outsw
mov
mov
cli
push
les
mov
mov
rol
adc
pop
push
test
push
lret
dec
shr
mov
lahf
shrl
sbb
invd
xor
js
cmp
add
dec
dec
xor
inc
push
negb
add
ror
adc
mov
mull
addl
test
xor
xor
xor
jns
mov
jne
inc
push
xchg
or
sarl
fistps
and
stos
push
fcoms
mov
insb
cmp
or
inc
mov
and
in
inc
jbe
xchg
imulb
xor
notl
fldl
and
divl
je
mov
insb
or
pop
lcall
pop
sub
std
addr16
pop
cli
js
stos
add
pop
out
lds
popa
clc
addl
dec
pop
out
dec
xchg
repnz
add
lock
mov
aam
inc
jg
imul
or
stos
sarl
dec
xchg
into
inc
xor
mov
popf
xchg
shll
xchg
mov
loop
dec
pop
negb
jne
dec
and
ljmp
push
or
ret
or
andl
jbe
insl
mov
aam
jae
mov
inc
xchg
pop
lret
icebp
ja
mov
and
adc
lea
cld
imul
xchg
cmp
in
loop
sub
bound
movsl
dec
and
sbb
dec
mov
mov
repz
rolb
cmc
cltd
data16
insl
push
cmc
and
test
or
movsl
into
or
popa
push
mov
lods
jp
pushf
cwtl
ficoml
mov
adc
jne
lds
cs
push
adc
jp
cs
xchg
xor
xor
pop
fcoms
addr16
pop
ja
adc
or
inc
cwtl
mov
dec
mov
imul
iret
mov
shl
lods
xor
xor
int
jae
pop
jae
cmc
fwait
movsl
push
sbb
or
mov
push
xchg
or
sub
lcall
popa
sbb
lods
or
cmpsl
iret
adc
jle
into
js
inc
notb
add
jmp
mov
or
outsb
jns
adc
out
cmp
sarl
mov
sbb
imul
test
mov
in
inc
sub
cmp
pop
pop
xor
or
push
cs
sbb
testb
je
lods
lahf
imul
mov
mov
sbb
sbb
push
or
inc
rcl
imul
ljmp
jmp
sbb
push
cmp
rcl
daa
jnp
out
aaa
in
pop
stc
scas
xchg
movsb
pop
aaa
sub
movl
stos
pop
addl
shrl
inc
test
rcl
inc
test
mov
enter
hlt
push
and
clc
cmp
push
mov
or
jnp
mov
daa
notb
dec
cmpsb
mov
mov
inc
xchg
mov
and
testl
xor
mov
sub
scas
subl
mov
ror
pop
cmp
pop
in
mov
jbe
loope
and
stos
cs
enter
insl
pop
subl
pushl
add
jle
pop
stos
or
cmpsb
mov
pop
xor
ficomps
dec
popa
fadd
dec
sbbl
xlat
xchg
out
cmp
inc
fsubrp
out
add
popa
out
sbb
cmp
pop
xchg
cs
insb
jg
adc
and
push
stos
mov
enter
loope
mov
punpcklbw
pop
fdivrl
pop
dec
dec
lret
insl
xchg
enter
cmp
mov
pop
faddl
js
push
mov
cmp
call
clc
test
xchg
sbb
mov
outsb
fcomps
mov
sbb
add
addl
pop
arpl
jge
daa
dec
jbe
dec
push
out
out
xor
out
daa
shll
push
pusha
fldcw
push
adc
testl
pushf
nop
xchg
push
test
in
pop
fbld
xor
outsl
ret
or
popf
cli
out
pop
pop
lods
cltd
mov
xchg
stos
stos
push
pop
cli
jle
adc
mov
xchg
jg
xchg
jo
inc
cli
inc
out
adcl
mov
lea
inc
xchg
and
fcomip
outsb
sub
pop
jae
push
xor
pop
aad
dec
nop
out
push
sti
sub
add
ljmp
rorl
aas
xchg
inc
and
or
jns
xor
sub
jecxz
cwtl
sbb
enter
sub
js
mov
dec
in
xchg
jns
jge
arpl
aas
mov
test
aad
movl
out
inc
imull
fwait
aas
adc
test
cmp
ss
rorb
fmulp
fcmovbe
xchg
cmp
in
inc
mov
cld
xchg
push
pop
cmp
pop
xor
sub
push
lods
addl
pop
sti
dec
jg
dec
xor
xchg
xor
dec
adc
mov
push
andb
mov
push
fnsave
sbb
mov
stc
cmp
and
popa
push
fldenv
int
xlat
jmp
push
scas
inc
mov
jnp
mov
jno
adc
cmp
adc
insb
loopne
daa
sahf
jno
in
adc
mov
arpl
dec
dec
inc
adc
addl
pop
lret
ja
or
dec
daa
jecxz
fdivs
or
lods
mov
imul
push
loopne
push
sbb
push
push
test
test
ds
in
imul
lock
or
cmp
js
hlt
jnp
xchg
push
sbb
xor
movb
outsb
ss
bound
xorb
mov
es
pop
inc
push
hlt
mov
sub
fistl
inc
xor
outsb
std
in
and
popa
lahf
and
push
and
mov
pop
jge
xchg
push
xor
test
xchg
add
bound
push
pop
sub
shrl
popa
mov
sbb
incb
cmp
xchg
push
jno
xor
xorb
xchg
pop
xchg
ljmp
out
in
loope
pop
sbb
sub
ja
cmp
pop
dec
push
insb
fidivs
pop
dec
cltd
jnp
je
bound
test
jmp
shll
jae
not
xor
sbb
inc
cmp
cmp
jno
xchg
dec
test
lock
movsb
aas
lods
xor
pop
pusha
mov
push
jecxz
iret
push
xor
bound
jnp
lods
mov
push
out
fisttpll
jmp
mov
mov
loop
std
jg
cmpb
addl
lods
int3
ss
adc
loopne,pn
mov
insl
jo
out
sbb
mov
repz
jbe
pshufw
imull
mov
xor
mov
in
std
inc
cmp
dec
outsl
mov
mov
pop
mov
dec
jg
inc
dec
pop
inc
jp
mov
int3
xor
sarb
aaa
aaa
cmp
call
sub
ret
ljmp
add
popl
adc
lret
insl
cli
js
cmp
jnp
pop
cwtl
push
add
loope
andl
xor
push
xchg
mov
and
push
jo
jb
icebp
sub
jo
mov
mov
cltd
mov
imul
sti
xchg
fprem
sub
dec
mull
xor
mov
pop
pushf
nop
imul
xchg
iret
cmp
push
dec
push
dec
inc
ss
dec
cmp
cmp
dec
je
mov
ret
pop
leave
insl
mov
rep
pop
mov
jo
fstpt
hlt
nop
push
add
dec
inc
gs
jo
add
loopne
repnz
lret
pop
inc
sti
xor
cmp
cmc
insl
int
mov
jmp
xchg
dec
adc
cmp
repz
sub
ds
cmp
mov
add
jmp
xor
jg
push
mov
out
into
xlat
mov
push
aas
sub
push
dec
cld
xlat
mov
xchg
dec
pop
aas
sbb
sti
je
and
enter
dec
cmp
test
xchg
sub
mov
sti
or
or
xchg
mov
xchg
xlat
stc
xchg
add
aas
sbb
dec
jge
pop
sahf
xchg
sahf
stos
fisubrl
icebp
mov
ljmp
jmp
fcompl
adc
pop
inc
mov
clc
outsb
pop
cmpsb
rorb
lods
sbb
mov
loop
lret
sub
stc
lahf
xchg
mov
cwtl
inc
jmp
cmp
movsb
mov
sub
lahf
cmc
and
mov
ficompl
fidivs
fstl
test
aas
cmpsl
pop
rorb
mov
add
pop
andl
xchg
lods
xor
cmpsl
in
sbb
xchg
stos
lret
dec
or
outsl
push
dec
ljmp
or
or
sub
sbb
jne
stos
xchg
or
sbb
mov
jg
and
jmp
in
or
xor
xchg
sub
ja
aaa
out
pop
loop
enter
rolb
lcall
int3
jnp
mov
mov
inc
dec
mov
into
jmp
outsl
in
daa
mov
out
divps
and
movb
imul
orb
int3
jecxz
cmc
nop
sbbb
xchg
loopne
push
dec
outsb
call
jg
fists
hlt
sbb
push
cmp
jg
inc
adc
out
and
mov
subb
or
push
jmp
sub
pop
test
xchg
lahf
cmp
jnp
push
adc
xchg
lahf
fwait
mov
and
shll
or
lods
fwait
dec
fildl
pop
xchg
ret
out
and
daa
xor
pop
add
or
fbld
js
push
add
ds
mov
mov
mov
fs
mov
sub
rcl
adc
xchg
push
sbb
sbb
xchg
dec
jbe
test
movsb
lahf
sbb
ds
test
push
pusha
sbb
lds
cltd
in
test
mov
hlt
adc
lcall
es
add
call
in
popf
outsl
inc
hlt
call
xchg
jns
xchg
mov
mov
mov
fucomip
push
xor
jl
hlt
adc
mov
add
lock
cli
jne
cmp
ljmp
sub
lods
sub
fnstcw
cmpsb
add
push
mov
je
jno
mov
cmp
sub
cltd
cli
jae
sub
inc
out
lcall
adc
ret
add
push
pusha
push
loop
lea
add
xor
pop
mov
bound
mov
mov
roll
mov
in
data16
lahf
and
pop
jge
decb
add
sbb
mov
mov
jle
sub
shrb
sub
inc
mov
fwait
icebp
push
or
sbb
jp
xlat
push
adcb
or
loope
and
test
mov
fwait
or
nop
sub
movups
divb
das
pop
je
scas
loopne
fsubl
fcmovb
pop
and
out
mov
aas
call
sub
rcll
lahf
jb
stos
les
pop
cltd
scas
outsb
movsl
dec
dec
rol
les
inc
daa
adc
mov
dec
mov
nop
adc
dec
lcall
push
shl
add
iret
jle
scas
les
push
les
mov
jg
dec
push
out
mov
iret
je
add
and
dec
fcmovnu
movsb
sti
icebp
mov
sbb
dec
xchg
pop
dec
push
dec
and
ficompl
push
cmp
or
inc
xor
mov
cld
cmp
imul
mov
scas
adc
jecxz
mov
add
bound
leave
sbb
add
call
sbb
sub
push
mov
xchg
lret
aas
adc
sub
sbb
lret
mov
dec
aad
dec
mov
dec
pushf
push
add
xchg
ja
fmuls
or
daa
movsb
mov
adc
inc
test
xchg
jno
fs
inc
cli
xor
pop
das
mov
jle
push
cwtl
outsl
out
jno
std
test
adc
add
and
test
scas
pop
jno
push
subb
adc
sbb
mov
jo
add
mov
inc
mov
sti
push
mov
fsts
cmp
or
das
jnp
xchg
rorb
pop
cmp
lods
pop
cmp
mov
push
arpl
inc
clc
popa
adc
cmp
cmp
sub
and
ds
leave
dec
push
outsb
std
iret
rep
dec
pop
xor
jae
or
mulb
push
lahf
notb
sahf
or
sbb
popw
mov
or
sub
jp
push
popa
mov
fbstp
push
in
cli
ja
inc
ja
pop
cmpsb
icebp
dec
cmpsb
mov
lcall
cltd
add
stos
ds
outsb
mov
test
xor
test
outsb
add
sub
clc
xor
cmp
mov
or
xor
cmc
int3
cmp
leave
mov
outsl
insb
add
aas
insl
ret
mov
and
out
jbe
mov
mov
cmp
pop
sub
cmpsb
and
clc
pop
or
dec
xchg
test
and
pushf
or
mov
cwtl
cmpsb
aad
jns
test
fstl
sbb
std
ficompl
mov
fmull
and
push
push
xor
adc
cwtl
inc
dec
test
fdivs
lea
xor
pop
xchg
push
sbb
aas
sbb
fdivrs
shlb
cmp
or
xor
loop
pop
dec
mov
dec
into
jg
rcrl
lock
mov
outsl
and
insb
fmulp
add
iret
sbb
add
jns
arpl
and
add
fstpt
ja
sbb
pop
adc
popa
rorb
data16
aaa
xchg
fwait
andb
js
daa
push
addr16
fdivrs
int
sbb
inc
dec
adc
rcrl
mov
lds
fcmovb
cmp
adc
xor
lock
mov
adc
lods
xor
or
jnp
mov
sbbl
jge
push
das
sbb
inc
or
pop
je
mov
add
lods
and
subl
mov
mov
mov
fwait
shlb
cmp
sub
shl
mov
std
push
pop
lret
xchg
or
pusha
pop
ffree
pop
aad
fwait
mov
mov
lock
pop
rcll
aad
sub
mov
jae
mov
lods
cmp
sbb
lret
gs
popa
insl
xchg
mov
inc
bound
xchg
xchg
pop
jg
jmp
jmp
inc
xlat
jmp
xchg
lds
dec
nop
and
adc
arpl
stos
ret
scas
push
sbb
imulb
enter
sbb
sub
fsubl
fcomps
mov
adc
in
stc
mov
or
xchg
sub
pop
inc
dec
lret
loop
movsl
push
iret
bound
sbb
aaa
jb
in
lahf
push
out
ljmp
jae
adc
fcmovnu
push
inc
test
jge
lret
fcmovbe
mov
and
test
addr16
jmp
jbe
mov
iret
sarb
inc
dec
cli
jno
xor
cmc
pop
dec
gs
jg
push
ficoml
ss
stos
mov
or
insb
popa
fisttpl
negb
and
add
ja
and
rcrb
xor
pushf
ret
lods
shr
cmp
dec
sub
mov
mov
ret
pop
cld
fisttps
lcall
xchg
out
int
adc
imul
add
enter
std
into
ds
push
jl
aad
cmpsb
push
inc
xor
fadd
mov
sub
jle
je
mov
fldt
data16
sub
sub
push
mov
test
or
xor
cmc
scas
inc
push
call
shr
jbe
pop
and
icebp
iret
int3
ret
adc
outsb
push
dec
mov
dec
aaa
shrb
scas
push
jae
sub
mov
icebp
dec
cmpb
mov
and
ret
sub
mov
mov
mov
jnp
out
fcompl
push
and
xchg
jecxz
idivb
movsl
mov
mov
push
sub
push
adc
xor
push
sti
mov
add
add
addr16
cmc
sahf
cwtl
and
pop
xor
push
adc
push
adc
outsb
pop
mov
mov
sub
mov
mov
fbld
das
icebp
pop
mov
jle
ficomps
push
dec
repnz
xchg
ficoms
imul
jecxz
jl
pop
icebp
hlt
sbb
push
imul
es
ficoml
shrl
lds
dec
cltd
xor
mov
xor
test
loopne
lea
sub
sub
subb
lods
xchg
sahf
mov
dec
lret
cmpsl
movsl
mov
mov
cmp
xor
mov
xor
out
sti
popf
mov
mov
mov
mov
push
inc
gs
notb
and
jl
orl
pop
aaa
mov
roll
iret
cvtps2pd
or
add
out
les
loopne
mov
cwtl
push
je
lret
int3
jbe
push
mov
jns
idivb
xchg
inc
out
imul
out
push
daa
inc
pop
mov
pop
leave
stc
repz
out
jbe
out
cmp
pop
jns
imul
jno
sahf
ss
mov
xchg
pop
adc
and
lahf
xchg
stos
inc
cmpsl
dec
and
mov
cs
test
in
mov
int3
or
incl
and
cmc
pop
shll
popa
inc
call
jno
mov
sub
stc
and
xchg
or
arpl
xor
adc
imul
jb
sub
adc
sub
sub
cltd
movsl
pop
pop
inc
enter
cmpsb
xchg
leave
adc
inc
ret
adcl
xchg
add
aas
pop
jo
xor
add
mov
xor
and
mov
lea
ds
dec
in
inc
xchg
adc
and
cmp
out
adc
dec
pop
jae
outsl
dec
push
imul
pop
mov
push
push
mov
aam
movsl
rolb
loop
push
or
sbb
mulb
sbb
xchg
testl
jecxz
adc
sahf
insl
jg
mov
dec
aam
bound
outsl
cmp
adc
lods
outsb
hlt
pop
mov
insb
jl
sbb
and
negb
mov
sahf
test
add
fcoml
push
pop
mov
pop
mov
mov
dec
jo
repnz
sub
std
enter
xchg
callw
add
sbbl
nop
pop
mov
or
inc
lods
xor
jmp
xchg
jb
mov
popa
jae
lods
jmp
dec
mov
cmovge
mov
test
inc
sbb
stos
scas
enter
in
pop
bound
add
sub
pop
pop
xor
adc
fwait
mov
cwtl
dec
lret
adc
rcl
mov
xor
das
int
jno
scas
add
dec
invd
mov
jg
into
mov
hlt
jp
xchg
jae
push
and
insl
popf
pop
jl
sbb
sbb
testl
shll
pop
jnp
and
rcr
adc
in
push
dec
jg
mov
dec
push
sbb
in
mov
mov
xchg
repz
push
jbe
mov
test
test
mov
cmc
sub
in
mov
pop
decb
xor
push
or
sub
aam
getsec
mov
mov
inc
daa
xor
adc
repz
in
sbb
imull
in
mov
xchg
sbb
inc
loop
lods
lea
add
dec
lds
xchg
sti
cmp
cs
mov
repnz
pushf
icebp
negb
pop
sbb
cmp
addr16
ljmp
movsl
mov
xor
or
fsubs
cmpsl
push
mov
or
jmp
cld
inc
popa
pushf
je
loop
and
imul
add
insb
lods
mov
adc
mov
test
int
jmp
push
mov
jb
inc
out
pusha
push
test
ljmp
and
lds
scas
sbbb
rcrb
es
sbb
push
dec
inc
jmp
lods
sahf
add
fs
mov
repnz
jnp
jmp
roll
mov
mov
pop
pop
mov
fsubrs
out
ja
and
xor
push
xchg
pusha
fldcw
stos
loope
out
pusha
dec
adc
inc
pop
xor
jmp
jl
inc
jnp
rcl
add
and
mov
push
ja
fimull
xor
mov
push
jmp
xchg
arpl
leave
inc
xchg
ret
into
and
test
xchg
inc
clc
in
sub
popf
ds
and
iret
dec
dec
pop
dec
in
mov
rclb
sbb
sbb
xchg
stos
in
mov
jge
xchg
push
inc
xor
pop
pop
out
stc
xor
cmp
pop
jae
mov
loopne
pusha
cmp
repnz
pop
fidivs
mov
sbb
sub
out
cmp
in
or
or
xchg
rol
sub
add
ljmp
pop
cltd
inc
push
mov
imul
fisubrl
cmp
clc
popf
out
cwtl
out
pop
jl
jmp
loop
or
inc
fildll
pushf
jno
inc
add
les
jecxz
push
xchg
add
inc
gs
int3
cs
test
imul
or
jne
jne
cld
jmp
cmp
leave
cmc
sahf
lods
dec
stc
push
xchg
jbe
dec
add
or
testb
lret
outsl
aam
mov
ja
outsb
movsl
lea
out
adc
mov
mov
dec
ds
pop
dec
in
dec
sub
mov
in
mov
mov
mov
addr16
jg
cs
xor
add
loop
lcall
sbb
out
dec
dec
add
push
out
adc
cmpb
dec
pop
cmp
cli
jb
jnp
test
pop
cwtl
jo
cltd
lds
mov
pushf
mov
cmp
and
dec
ds
jge
in
imul
xor
jae
shlb
fs
insb
mov
jne
test
add
bsr
jae
pop
test
pop
addl
mov
js
push
jmp
jns
mov
mov
cmp
dec
sub
mov
jne
jno
or
or
cmc
jecxz
adc
ljmp
ret
push
sub
fwait
pop
adc
out
add
arpl
movsl
xchg
andb
jl
sub
or
add
iret
mov
popa
aad
jmp
cmp
das
outsb
or
leave
std
fmull
jecxz
das
pop
xchg
mov
xor
pop
jb
xor
mov
inc
pop
inc
sbb
div
ret
push
and
addl
ljmp
mov
lea
jnp
add
sub
lea
dec
fsts
push
add
mov
mov
xor
or
mov
test
movsb
scas
les
and
cwtl
test
in
pop
mov
lods
ror
sbb
gs
insb
dec
or
ffree
inc
sub
pop
hlt
sub
aam
jbe
aas
inc
lock
and
xchg
push
fnstsw
in
aam
fidivrl
push
push
mov
sub
inc
dec
fnstcw
movb
sub
sub
out
inc
icebp
shll
pop
repnz
inc
shr
loop
xchg
xlat
dec
jp
push
fildl
cmp
cmp
les
idivl
mov
mov
ret
inc
pusha
xchg
jnp
mov
jle
sbb
jecxz
mov
in
lret
sbb
mov
stos
pop
aaa
push
xchg
inc
int
push
mov
clc
pop
out
enter
sub
or
cmp
dec
inc
mov
mov
in
or
fsubrl
adc
xchg
ret
jo
mov
jmp
mov
mov
out
sbb
and
push
mov
jle
dec
mov
fisubs
ja
testb
sbbl
call
aad
push
test
sahf
mov
pop
mov
mov
dec
and
cltd
mov
push
icebp
fcmovnu
sbb
xchg
jp
mov
fs
ror
sub
xchg
ret
jg
or
dec
cwtl
cmp
push
jae
mov
jecxz
fsub
outsb
pushf
jno
mov
mov
mov
and
out
mov
pushl
in
inc
push
sbb
push
rol
aaa
cld
dec
test
push
outsb
dec
mov
xchg
rclb
shrb
mov
daa
xchg
call
pop
insb
subb
mov
shl
fsub
xchg
xchg
lret
sahf
int
push
cmp
cmpsb
push
jle
out
shl
cmp
jae
mov
jnp
lcall
xor
lds
outsl
pop
inc
push
sbb
mov
sahf
lods
mov
inc
mov
fiadds
cld
pushf
pop
push
jmp
fs
mov
xchg
scas
cli
das
sbb
mov
add
cld
mov
pop
mov
ss
je
adc
pop
pop
iret
inc
loopne
and
std
mov
xchg
xor
sub
xor
popf
cmc
cld
ss
jns
push
int3
fadds
add
mov
or
out
push
mov
jecxz
scas
fwait
out
jmp
std
out
fimull
test
xor
rolb
cmp
arpl
sbbl
pavgw
push
jns
call
mov
xorb
js
dec
sbb
mov
xchg
sub
lcall
mov
iret
orb
and
stc
orl
jns
mov
shrb
add
cmc
ss
dec
js
sbbl
jmp
mov
adcl
gs
iret
mov
xlat
sub
cmp
cmp
sti
ljmp
sbb
jns
bnd
out
in
int3
arpl
cmp
jb
or
in
xchg
out
cwtl
and
push
pop
and
xor
push
jb
mov
divl
add
fldl
inc
jle
push
jl
jge
xchg
aaa
repz
in
mov
push
lods
xor
lds
loope
jg
out
das
mov
jo
pop
pop
ret
dec
xchg
jmp
add
pop
dec
into
mov
cs
inc
gs
int3
out
sti
adc
inc
js
push
pop
sbb
sub
ljmp
outsl
cmp
mov
inc
mov
xchg
mov
aas
icebp
cmpsl
pop
ret
ficomps
repz
jno
sub
adc
jbe
and
xor
icebp
pop
mov
repnz
insl
cmp
jl
addr16
stos
mov
inc
sbb
mov
xchg
insl
mov
and
add
out
sub
arpl
aas
push
mul
push
popf
cmp
inc
sub
pop
pop
jp
adc
add
cmp
popa
push
cwtl
icebp
ret
lods
pop
fbld
xchg
adc
sahf
add
rcrb
insl
sbb
jmp
mov
mov
jae
out
sbb
xchg
push
or
or
jecxz
mov
faddl
jo
sbb
sub
mov
fisubrl
add
popf
data16
sub
fstpt
lret
jmp
mov
mov
jle
sub
enter
dec
icebp
je
xchg
lock
ss
or
sub
aas
xchg
add
pop
scas
inc
add
inc
mov
jnp
cmpsb
into
jbe
shll
outsl
stc
lods
cmc
roll
inc
push
or
push
and
jno
push
loope
out
adc
fmuls
xchg
subl
mov
pushf
pusha
mov
gs
fwait
pop
jno
out
push
pop
test
add
xchg
mov
adc
cmc
and
subl
mov
stc
push
test
jb
pop
and
and
mov
xchg
imul
and
jg
cmp
or
jns
xor
je
dec
lret
cltd
popa
sbb
pop
repz
mov
sub
lret
std
sub
mov
in
sti
jb
dec
jne
xorb
call
inc
lock
add
cwtl
xchg
mulb
das
gs
ret
fninit
sbb
xchg
pusha
add
in
mov
mov
push
sbb
add
nop
xchg
daa
das
jecxz
add
or
stc
test
faddl
or
in
fcoms
mov
xchg
adc
lods
inc
outsb
ds
sub
pop
mull
faddl
cmp
sbb
jae
test
jl
mov
and
lods
dec
testb
dec
cmpsl
and
jb
pop
iret
add
sbb
lret
sbb
push
jge
into
push
testl
imul
popa
sub
inc
pop
aam
std
mov
ljmp
popf
push
mov
outsb
jg
mov
push
cmc
sbb
icebp
arpl
popa
std
push
and
insl
mov
out
sbb
sub
lret
sub
add
stc
jg
jl
data16
jge
cmp
sub
leave
fisubrl
mov
rolb
cmp
inc
xchg
scas
out
rcrb
jno
xchg
inc
pop
addr16
dec
sub
inc
sbb
das
in
add
pushf
fists
inc
call
dec
inc
mov
incb
or
mov
xor
pop
inc
add
lret
pusha
push
fstpt
jle
push
insl
jle
xchg
pop
sub
mulb
add
sbb
repnz
cmpsl
and
cmpsb
cmp
mov
mov
cmp
lret
sbb
cwtl
mov
lcall
dec
add
imul
sub
lods
mov
fistpll
leave
mov
push
mov
sbb
dec
shrl
xchg
js
sub
outsb
hlt
mov
rorl
cmpsl
adc
sub
and
cmp
jmp
cmp
or
je
jnp
in
cmp
cld
outsb
pop
test
into
jne
sbb
sub
pop
push
mov
ret
aad
lds
and
xor
mov
data16
xchg
dec
sub
mov
fdivrl
cld
bnd
inc
jo
test
arpl
int
loop
loopew
dec
in
cmp
int
mov
mov
mov
out
fs
iret
push
mov
faddl
insl
add
scas
dec
mov
scas
xchg
mov
leave
push
mov
dec
push
leave
outsb
cmp
adc
sbb
mov
jp
pushf
fmuls
sarb
add
inc
pop
inc
xor
lcall
inc
shrb
jne,pn
lret
rclb
push
and
mov
in
scas
gs
and
nop
scas
cmpsb
test
lret
mov
sub
icebp
hlt
xchg
and
int3
out
mov
mov
mov
fsubr
aad
pop
mov
mov
push
mov
xchg
or
loop
adc
call
jmp
test
icebp
mov
pop
mov
xor
cld
dec
mov
rorl
mov
xchg
mov
cld
xor
test
sbb
cmp
or
lret
or
push
cmp
rep
sub
rorb
pushf
scas
cmp
fcomi
jp
stos
mov
sbb
add
jmp
rcl
push
out
clc
aaa
add
in
in
sbb
gs
sbbl
not
fwait
test
xchg
cmp
imul
push
aas
lahf
mov
and
loope
cmpsb
cmp
pusha
pop
inc
cs
and
ja
in
sbb
movsl
inc
sub
push
cmp
in
in
sub
and
sti
fiadds
iret
cmovg
cmp
fldcw
mov
push
dec
xlat
adc
out
sbb
ja
cmc
popa
dec
xchg
repnz
fdivrs
mov
sbb
inc
xchg
mov
push
sbb
ds
add
fdivrs
cmp
xor
xor
bnd
sbb
mov
and
ret
int
stos
inc
mov
das
sbb
push
mov
loopne
inc
add
mov
pop
pop
dec
andl
pop
jge
cmp
cmp
lods
fisttpll
dec
push
rcr
xor
sbb
sbb
add
push
je
push
leave
xchg
sub
ljmp
lahf
rcrb
pop
jae
mov
mov
dec
pop
pop
sbb
aas
add
dec
mov
leave
mov
movsb
pop
lods
ret
loope
stos
jp
jge
jno
mov
fcmove
inc
aad
cld
fwait
movsb
and
sti
dec
fldt
cmpsb
stos
enter
or
mov
mov
rolb
movsb
scas
ljmp
cmp
outsl
out
jmp
cmp
pop
dec
push
dec
movsl
xor
adc
add
mov
shlb
ret
test
xchg
or
out
cwtl
jo
adcl
dec
mov
pop
push
cmp
sarl
lods
ret
add
pop
pop
sub
pop
push
dec
scas
pop
test
into
ja
add
fiaddl
int
or
add
mov
fadds
or
sub
test
cmpsl
mov
jne
insb
inc
adc
rcrb
rol
scas
in
push
loope
adcl
mov
jl
xor
cmp
sbb
jp
mov
mov
mov
pop
pop
dec
mov
in
les
pop
pop
and
dec
mov
push
sbb
into
adc
xor
in
push
loope
push
inc
dec
mov
dec
movsb
std
cmp
call
lock
jle
and
aam
cmc
xlat
loopne
cmc
leave
jge
xor
push
xchg
rol
pop
repz
xchg
xchg
outsb
xchg
sub
xchg
jnp
xor
scas
popa
fsts
ss
shrl
loop
cmp
sub
hlt
pop
cmp
push
enter
outsb
and
lret
daa
push
out
addr16
je
das
mov
in
inc
into
fabs
popa
bound
mov
imul
pop
mov
or
push
lahf
iret
jnp
add
ret
xor
xchg
mov
xor
pop
ret
cmp
push
ja
mov
je
push
dec
pop
jno
sub
adc
push
xor
aas
dec
test
ficoml
add
jmp
dec
ds
lods
xorb
or
jle
fdivr
repz
negl
lret
lods
fdivl
cs
shlb
cs
inc
adc
insb
or
ljmp
xor
cmp
aaa
and
psubd
dec
imul
pop
out
jp
inc
andb
mov
xor
ret
xlat
xor
add
das
jbe
pop
sub
shll
xchg
mov
popf
aam
ds
aad
mov
stc
push
les
nop
xchg
scas
or
daa
or
cmp
add
cmp
sbb
pop
les
dec
cld
ret
fsubs
jl
xor
loope
jo
xor
jecxz
xchg
popa
stc
rcr
inc
push
test
stos
jl
fldenv
mov
add
into
jae
idivl
pop
mov
jmp
adc
sbb
movsl
add
mov
std
aaa
push
test
push
insb
inc
mov
nop
mov
mov
daa
xchg
mov
clc
pop
rclb
aaa
sbb
push
out
push
and
scas
out
sub
sarl
orb
into
jae
xchg
shl
nop
jnp
cmpsl
outsb
xor
pop
adc
lea
inc
lock
or
push
enter
xor
adc
leave
stos
sahf
or
jmp
pop
xchg
adc
push
push
mov
sahf
push
sbb
dec
mov
adc
repnz
in
sbbb
pop
not
dec
repz
sub
gs
and
xchg
or
icebp
fstl
sub
dec
mov
enter
lahf
icebp
aaa
xor
mov
cmpsb
sbb
jae
xchg
jbe
cmc
movb
cli
lea
push
inc
sub
idivb
pop
bound
cwtl
les
sbb
mov
clc
and
sub
cmpsb
cs
mov
jne
imul
xchg
insb
push
insb
pop
mov
fwait
adc
stos
mov
in
mov
sbb
in
js
mov
push
lea
sub
in
ret
push
lret
and
rcr
sahf
sbb
push
cmp
mov
addb
scas
xchg
call
cmp
push
push
fdivrs
push
mov
stos
icebp
dec
push
and
hlt
mov
xchg
addl
mov
dec
pop
push
aas
scas
mov
mov
sbb
adc
popa
and
stos
sbb
stos
xor
and
push
std
mov
or
add
cmc
loope
and
add
and
orb
insb
pop
add
cs
and
jns
in
imul
js
and
fimuls
pop
mov
sub
mov
xchg
sub
clc
and
fisubrl
loop
or
push
orl
adc
jmp
hlt
jmp
sbb
sub
add
jg
nop
pushl
pusha
cmp
cli
cwtl
movsb
sahf
pop
dec
bound
pop
xchg
cmpsb
push
pop
push
pop
mov
jg
test
jg
pop
movsl
in
out
js
add
xor
pushl
stos
out
cmp
mov
dec
daa
adc
cli
cmp
call
cltd
test
scas
adc
int
cmc
add
jg
out
enter
ret
sbb
sub
jle
shll
shll
jb
fisttpll
movsb
push
dec
movlhps
cwtl
jle
mov
test
jno
lods
push
test
xchg
pop
jns
daa
mov
xchg
xchg
sbb
stos
aam
sbb
adcb
jo
or
mov
aas
adc
std
add
push
daa
xchg
mov
mov
stc
cli
insb
mov
mov
pop
out
loop
xchg
jbe
fisttpl
xor
dec
sub
addb
inc
cmpsb
movb
add
rcrb
loop
repz
iret
inc
cmp
cli
shl
add
cmc
fs
pop
aad
ss
sub
lods
addr16
ret
negb
lret
cmp
cmp
push
int
jge
xor
pop
dec
push
int
lods
addr16
clc
imul
dec
out
movsb
scas
push
ljmp
lcall
insl
vunpcklps
imul
bound
inc
adc
mov
es
in
push
and
xorb
or
pop
iret
push
pop
out
or
xchg
and
sbb
test
pop
out
sub
sub
je
cmpl
sub
cltd
test
xlat
mov
loopne
fmull
stc
mov
jle
movsb
mov
cld
rcrl
xchg
push
add
daa
adc
lcall
aas
pop
sub
out
jmp
pop
lret
mov
out
loop
dec
std
fsubl
ja
insb
gs
pusha
mov
adc
iret
mov
ja
sub
shl
mov
push
dec
cwtl
aas
or
push
es
aaa
mov
stos
mov
or
jno
enter
cmc
pop
subl
inc
sbb
cmp
xchg
stos
pusha
xlat
pop
sub
cmc
popa
or
mov
xor
dec
shrb
lock
xchg
hlt
mov
dec
lock
psubusw
sub
frstor
clc
call
cmp
dec
lods
xor
fstpl
stc
js
ret
mov
mov
mov
scas
mov
inc
mov
or
lods
or
lock
adc
xchg
scas
lock
out
mov
or
imul
popf
pop
adc
mull
xlat
cwtl
push
inc
push
stos
stos
pop
fwait
adc
mov
in
or
outsb
xor
pop
ds
xor
addr16
jno
into
rcrb
lock
cmc
jp
push
sbb
das
js
add
sub
jb
cld
pop
out
outsb
in
and
inc
test
or
mov
cmp
sub
push
cmp
or
mov
pcmpeqw
je
scas
insb
aad
xchg
sub
repnz
cld
les
out
mov
mov
xor
mov
aam
sub
mov
aad
add
ret
mov
or
jo
jg
jge
and
lods
fisubs
je
jg
fidivl
add
loop
popa
in
sub
xor
xchg
pop
dec
pmuludq
mov
mov
fidivs
mov
xchg
stc
repz
mov
sub
or
push
xchg
pop
repz
push
gs
into
dec
ret
fwait
mov
shlb
lahf
enter
loop
rcrl
pushl
jmp
add
js
and
sub
fidivl
pop
clc
rcrl
cmc
ss
jmp
lcall
xor
fsubrl
push
jnp
loop
dec
adc
mov
addr16
leave
lea
lods
cmp
mov
mov
xor
inc
sahf
dec
mov
ret
sbb
das
shr
cmp
ret
repz
lcall
xchg
pop
adc
inc
and
clc
xchg
pop
xor
inc
adc
xchg
in
lock
sbb
out
movsb
pop
sbb
cmc
xchg
push
repnz
rolb
mov
add
cmp
insb
push
repnz
gs
xchg
cmpsl
sbb
add
ljmp
mov
push
int3
mov
xor
push
cmp
leave
inc
data16
lods
ja
pop
pushf
and
pop
inc
push
fstl
insl
cwtl
mov
jle
push
push
mov
out
movsl
loope
jno
or
cmpsl
push
mov
xchg
or
mov
jmp
imul
aad
mov
jecxz
repnz
adc
rolb
hlt
ud2
pop
xor
int
test
fisttpll
jbe
jb
movsl
lahf
lds
testl
sahf
pop
inc
or
mov
xchg
rolb
scas
push
sub
pop
dec
adc
ja
mov
test
aad
sbb
push
jnp
nop
nop
popf
aad
mov
ds
pop
pop
or
xor
int3
out
push
mov
bound
lcall
pop
sub
jp
jno
into
lods
dec
xchg
mov
js
xchg
push
add
xchg
dec
das
add
subb
cmc
xchg
sub
push
arpl
and
addr16
int3
sub
sub
mov
sub
jbe
cmp
cmp
rcrl
and
or
fstps
jne
xorl
mov
add
loop
add
add
gs
pop
jecxz
jnp
out
sub
pop
mov
jne
add
sub
hlt
xchg
pop
fdivrl
sub
adc
push
inc
adc
and
pop
push
inc
sbb
push
pushf
inc
cmp
es
arpl
test
sbb
pushf
clc
xchg
ja
adc
mov
xor
movsb
int3
mov
add
rcr
or
push
and
pop
and
cmc
mov
ja
xor
push
push
mov
divb
into
pop
jp
negl
ds
xlat
cltd
push
daa
mov
arpl
xchg
enter
daa
mov
mov
jmp
push
loop
ss
inc
jle
lcall
xor
or
lods
push
mov
add
daa
mov
mov
into
leave
movsb
arpl
pop
stos
out
xchg
subl
cld
lea
aas
push
inc
add
jns
xlat
shl
push
xor
pop
jl
adc
or
insb
movsl
dec
arpl
jmp
mov
and
shrl
aam
jg
xor
adc
sub
daa
lock
jp
push
cmp
xchg
xchg
les
mov
sbb
sub
mov
inc
and
dec
pop
std
add
lods
add
inc
aad
pop
mov
mov
jae
add
int3
cmp
in
push
push
pop
bound
jb
mov
enter
xor
pushf
dec
mov
mov
push
shl
imul
add
mov
pop
push
cmp
dec
jne
inc
mov
jecxz
mov
push
test
push
hlt
pop
pop
outsl
rorb
roll
cmc
outsl
mov
adc
movsl
rcll
rcrl
push
mov
fcoms
lods
dec
test
ss
repnz
pushf
add
mov
pop
cmp
pop
in
cld
not
nop
call
push
and
out
popa
and
pop
xor
and
rol
hlt
sub
enter
mov
daa
push
jbe
mov
lods
inc
dec
add
lahf
neg
std
cmp
mov
dec
cmp
mov
jb
jg
and
push
imul
pop
mov
pop
repnz
into
mov
pop
loope
fbld
pop
ja
push
push
jmp
lret
and
push
inc
idivl
shl
add
push
inc
add
fcoms
adc
xor
mov
mov
sbb
std
out
aas
adc
sbb
mov
pop
adc
jne
dec
rorl
xlat
push
mov
lods
jmp
jmp
adc
sub
adc
lods
aam
push
xor
xor
or
jp
clc
inc
mov
inc
in
test
popf
in
fidivs
fdivs
pushf
xchg
int3
pop
xor
test
mov
loope
xor
add
fwait
xor
dec
push
and
loop
repnz
loopne
shrb
ret
xor
push
sbb
mov
cld
outsb
adc
sub
sbb
push
mov
sahf
imul
outsb
mov
inc
xchg
adc
loopne
mov
sarb
lods
inc
fwait
leave
and
loop
mov
out
inc
lods
je
push
lret
inc
notb
jns
mov
cld
ret
jns
mov
jle
sub
xchg
cmpsb
mov
pusha
pop
add
or
ret
push
lds
mov
pop
rcll
out
xchg
ds
sbb
cltd
daa
jmp
rcll
push
pop
shlb
jecxz
gs
daa
fidivl
cltd
mov
scas
movsb
leave
adc
mov
mov
xchg
cmp
in
jbe
cmp
push
fimull
cltd
cmpsb
and
mov
cmp
aas
leave
or
into
es
dec
pop
cmpsb
and
addb
mov
lods
mov
stos
inc
mov
and
arpl
aas
js
jmp
or
adc
inc
mov
test
cmpl
pop
pop
add
rcl
call
test
out
xchg
xor
xor
jge
xchg
sub
ljmp
decl
shlb
mov
stc
xchg
xlat
pop
inc
pop
cmp
dec
cmp
lcall
test
fists
lcall
xor
xor
jne
pop
call
mov
repz
or
std
movsl
ret
add
jo
adc
fiadds
insb
pop
adc
jge
cmp
dec
sub
ret
ds
sub
sbb
fmull
movsl
scas
loop
xchg
mov
xchg
lea
dec
pushf
mov
sub
push
xchg
adc
aad
not
repnz
arpl
dec
mov
mov
aad
cmp
xchg
mov
mov
pop
js
inc
xstore-rng
cmpsl
inc
clc
data16
sbb
fs
jns
stos
pop
pushf
mov
xchg
adc
jmp
aad
push
sbb
add
fidivrl
inc
ds
cli
pusha
sub
sbbb
inc
and
xor
pushf
adc
repnz
cmp
push
jb
mov
xchg
sbb
adc
jle
jmp
scas
out
rclb
popf
int3
pop
cmp
cmc
sar
mov
add
dec
loop
pop
jae
inc
push
and
js
testb
test
pop
daa
mov
ss
jg
jno
xchg
data16
sbb
into
pop
xchg
fiadds
xor
enter
mov
test
jg
jae
ss
and
xchg
mov
fucomp
xchg
mov
repnz
xor
jle
pop
mov
sbb
sub
sbb
push
adc
and
dec
mov
or
in
mov
int
cli
into
out
or
sub
divb
outsb
aas
popf
cmpl
sub
jb
push
lret
xlat
pop
ficoml
enter
and
push
mov
popa
xchg
jp
mov
jno
and
mov
push
adc
xlat
in
sbb
push
jb
shr
scas
fcomps
mov
dec
mov
mov
pop
sbb
push
pop
lret
mov
leave
iret
cmp
ret
sub
stos
push
lret
sbbb
andl
mov
fildl
xor
sbb
sbb
imul
cmc
xlat
es
sbb
xor
ljmp
lcall
push
imulb
xchg
inc
leave
jns
adc
leave
leave
je
popa
push
mov
pushf
stc
repz
mov
lea
jns
dec
add
add
enter
cmp
insb
xchg
add
in
mov
pop
jl
test
idivl
nop
and
loope
in
ja
loopne
push
lret
call
in
outsl
cwtl
sbb
divb
movsl
popa
xlat
sbb
xchg
xchg
inc
insb
lock
mov
fidivrl
jb
sahf
jle
int3
sbb
mov
hlt
or
cs
cmp
stc
cwtl
and
popf
ret
or
ret
gs
arpl
and
xchg
sbb
mov
repnz
and
cltd
xor
scas
cmpsb
cmp
pop
insb
push
sub
dec
inc
mov
fldl
mov
mov
fistpll
mov
shll
mov
push
popf
es
stos
enter
push
mov
mov
call
out
das
xor
xchg
into
repz
push
cmc
dec
popa
or
es
adc
xchg
dec
mov
mov
adc
cmp
dec
sub
pop
cmc
or
xorb
sub
mov
push
mov
lahf
mov
xchg
cli
jne
push
sbb
insl
mov
xchg
mov
lock
out
inc
fwait
in
sahf
je
sbbb
lods
adc
dec
xor
mov
mov
pushf
jo
xchg
cmpl
mov
imul
out
sub
xchg
push
xor
pop
add
ficoml
test
scas
push
and
pop
shrl
xchg
xor
lods
mov
push
dec
pop
pop
xchg
sbb
fidivs
mov
adc
inc
sbb
inc
push
sub
mov
iret
sti
mov
cmp
mov
jp
jl
dec
out
popf
xlat
add
arpl
popa
push
add
dec
roll
bound
or
in
dec
loope
and
std
mov
mov
cmpsl
add
jno
mull
mov
or
xchg
jl
mov
xor
add
mov
push
dec
into
mov
adc
add
lret
fwait
repz
mov
add
fsubs
aam
aam
inc
addl
jne
cmc
xchg
and
nop
mov
jae
jne
xchg
cmp
ljmp
int
add
das
ljmp
sbb
pop
bound
test
add
ja
flds
subl
dec
jge
mov
cwtl
mov
push
fdiv
inc
out
les
out
add
scas
nop
lahf
dec
fstpt
mov
sarl
and
roll
or
xor
mov
cmp
repz
cli
arpl
mov
xchg
imul
or
int
out
les
lock
pop
je
ljmp
mov
mov
mov
or
rcrb
cmpsb
push
jmp
fistpl
jle
lods
int3
push
movsl
or
adcb
scas
mov
lahf
jmp
jmp
mov
loope
lret
xchg
lock
cmp
clc
push
cmc
jg
popa
jbe
shlb
jp
out
xor
mov
fisttpl
inc
sub
add
test
imul
adc
mov
rorb
nop
xor
bound
stc
adc
leave
icebp
push
in
icebp
fs
cmp
mov
adc
or
sbb
cmpsb
xor
lods
mov
or
fnstcw
add
ret
jbe
je
pusha
lret
into
dec
jge
je
mov
fsts
sti
iret
aad
call
push
sub
xchg
cmp
dec
aas
add
and
push
fmull
clc
test
cmp
cmc
ljmp
cwtl
mov
scas
ljmp
fildll
mov
push
popa
jecxz
stc
fdivrp
mov
clc
call
iret
push
sbbl
xchg
mov
sub
out
cltd
inc
icebp
xchg
cmp
jge
xor
jae
jnp
aas
sbb
sub
xchg
and
mov
inc
sbb
out
lock
daa
jge
arpl
inc
andl
push
jg
xchg
lods
inc
jo
dec
pop
in
cwtl
je
mov
aam
push
and
iret
mov
xchg
dec
jns
xor
ljmp
fbld
cmp
push
iret
xlat
cmp
dec
daa
repz
cmp
and
in
adc
loopne
mov
or
push
test
mov
fildll
cmpsl
mov
lea
mov
imul
popa
dec
mov
daa
pop
sub
pop
stos
pop
rcrl
dec
pop
das
movsl
out
es
add
imul
xor
and
mov
into
and
jno
push
cld
andb
mov
and
clc
mov
pushf
fistl
xchg
dec
ficomps
sub
mov
fisubl
xchg
hlt
xlat
inc
mov
loopne
imul
sbb
das
mov
dec
sub
push
adcb
mov
dec
sub
scas
ja
lods
jge
popa
and
jno
repnz
inc
cmp
jae
add
insb
imul
adc
and
scas
into
hlt
xchg
fstp
xchg
pop
sbb
and
nop
jno
ret
inc
and
jne
lahf
dec
mov
addl
inc
lds
jbe
adc
dec
jmp
pop
cmpb
rcrb
outsl
jo
dec
sbb
outsl
xor
outsb
cmp
mov
out
in
cltd
imul
jne
jne
mov
mov
mov
les
or
out
jbe
fwait
test
jge
dec
and
fdivr
push
divb
xlat
pop
sbb
out
jmp
sbbb
ljmp
adc
lods
imul
nop
adcl
xor
push
fdivp
fsubr
lahf
gs
jbe
cmp
in
insb
pop
pusha
pop
pop
nop
jmp
jnp
out
dec
iret
pop
adc
mov
mov
pop
jl
mov
cmp
adc
mov
shl
rcrl
push
and
fcmovnbe
inc
imul
sub
ret
les
push
cmp
out
mov
js
mov
mov
ret
scas
daa
mov
fs
loope
popf
pop
pop
scas
mov
packssdw
mov
negb
test
test
notl
mov
dec
arpl
std
outsb
insb
in
push
sbb
addb
scas
mov
and
cmp
cmp
jle
cs
add
mov
fcmovne
scas
mov
lcall
and
lods
jge
pop
notl
mov
loope
add
sbb
add
mov
imul
test
push
cs
das
rolb
aas
cmpsl
fsubl
mov
mov
movsl
lods
rclb
call
cli
fs
jp
mov
in
sarl
popa
lds
clc
faddl
and
push
push
insb
ret
ljmp
jno
test
movsb
aam
insb
xchg
fldl2e
add
jge
leave
inc
or
call
xor
scas
push
lods
jmp
xchg
mov
xchg
lea
ret
sti
out
sbb
pop
dec
in
lods
and
push
hlt
add
into
sub
shrl
in
cs
int
mov
out
cli
test
je
les
jecxz
xchg
aam
cmp
std
inc
test
mov
imul
push
out
leave
mov
xchg
insb
cmp
adc
in
idiv
rcrb
pop
or
es
cmpsb
aas
mov
loopne
dec
pushf
mov
nop
stc
dec
clc
sti
or
jg
jge
in
daa
ss
xor
push
jo
cmp
mov
pushf
daa
clc
or
lea
cmp
dec
orb
sbb
dec
mov
rorb
dec
out
int
mov
inc
adc
push
mov
inc
lret
push
ret
in
jne
scas
inc
dec
repnz
mov
test
ljmp
fwait
mov
mov
pop
adc
jp
and
sahf
sub
pop
test
xchg
push
pushf
ret
and
mov
lock
jp
sbb
clc
sub
inc
inc
stos
adc
sbb
xor
lahf
push
dec
sbb
xor
out
test
mov
mov
fstps
jnp
call
les
sbb
imul
enter
in
popl
cmp
jmp
mov
mov
stos
int
and
xchg
js
pop
sahf
andb
ror
ret
sbb
cmpsl
loopne
sar
lods
nop
jnp
dec
pushf
jo
shll
je
jl
add
mov
xchg
and
fisttpll
psrad
dec
adc
outsl
jecxz
dec
pop
mov
inc
std
test
inc
les
jecxz
sbb
mov
xchg
xchg
pop
sbb
and
xchg
adc
loop
lods
imull
aaa
push
xor
lcall
pop
std
scas
add
outsb
xor
aaa
and
sub
pop
lcall
arpl
add
nop
cmp
cmpsl
out
es
cmp
cld
dec
cmp
out
fldt
aaa
cmpb
dec
adc
pop
in
cmpsb
sbb
fcomps
sub
ret
aas
leave
movsb
imul
pop
sub
test
loopne
loope
fldcw
push
sub
mov
pop
aad
dec
sub
jae
push
cld
adc
jp
cmpsl
cmpsl
inc
jmp
push
sub
push
mov
pop
jbe
rcrb
or
jmp
xlat
pop
adc
cmp
scas
xchg
daa
popa
dec
and
cs
pand
or
cld
ret
push
push
jl
js
arpl
mov
repz
mov
jbe
std
lea
pop
pop
sbb
ja
inc
xor
pop
sbb
sub
jmp
jle
fwait
add
rclb
lcall
out
test
pop
int3
lret
movaps
mov
xor
inc
pop
into
or
int3
mov
nop
ret
dec
cmp
inc
sahf
ss
cwtl
fldenv
adc
test
jb
mov
add
ret
or
inc
pushf
pushf
or
pop
adc
jns
jbe
inc
pop
lods
hlt
mov
insl
data16
fs
add
xlat
sbb
adc
inc
int3
test
dec
icebp
jmp
inc
rcll
inc
or
jl
or
adcl
pop
fs
pop
icebp
sub
cmpb
mov
shl
jg
int3
pop
pop
hlt
fldl
sbb
jne
js
dec
mov
je
js
popf
int
and
sarb
cmpsl
pop
pushf
cwtl
test
pop
dec
test
rcl
push
or
aam
int3
add
lods
inc
std
lea
jb
add
jb
adc
sbb
jl
aas
push
das
or
and
pop
shl
push
das
mov
jp
jne
xor
andb
nop
in
jae
sub
xlat
pop
adc
dec
rclb
xchg
pop
sbb
sub
sbb
mov
imul
mov
xchg
imul
out
icebp
xchg
popa
popf
jno
xchg
sub
fldt
cmpsl
pop
or
jg
icebp
jge
sub
inc
les
mov
and
mov
xchg
sbb
bnd
push
inc
es
xchg
int3
ss
mov
daa
xchg
lret
fistps
adc
jae
dec
jno
push
xor
sbbl
pop
or
mov
xor
xchg
addr16
lds
mov
sub
pushf
add
mov
scas
mov
add
adc
lret
adc
mov
shlb
in
jmp
lcall
outsl
add
subl
scas
mov
repnz
dec
cmp
xor
mov
add
lods
fildll
rcll
cmp
xchg
and
imul
jno
fiaddl
arpl
ljmp
lret
loopne
enter
mov
dec
mov
cmp
mov
xchg
scas
adc
xchg
fldenv
lahf
test
xor
scas
popa
testb
vpcmpud
movsb
stos
inc
in
xor
cli
inc
cli
sahf
imul
pop
stos
pop
mov
in
dec
imul
mov
fcomi
aas
divb
scas
rorl
xor
sbb
jnp
adc
clc
gs
xchg
sub
lea
ret
sbb
stc
pushf
jae
or
ja
jp
inc
out
inc
cs
movsl
cmp
icebp
cli
rolb
xchg
shlb
jae
mov
movsl
pop
xlat
jae
ds
dec
insl
jle
mov
adc
test
in
mov
xor
and
in
mov
lds
inc
push
pop
or
xchg
mov
mov
push
xchg
std
outsl
mov
out
push
sbb
pop
fmuls
push
pop
cwtl
out
cmpsb
or
push
nop
js
and
loop
clc
imul
jno
lret
mov
push
or
mov
adc
adc
add
mov
sbb
jge,pn
shrb
sub
jg
cmp
or
mov
int3
adc
lahf
imul
movsl
ret
mov
inc
jmp
mov
push
shlb
movsl
dec
or
ds
sbb
sbb
mov
jns
js
pop
ja
dec
in
fbld
and
sub
cld
out
test
sbb
ds
xor
aas
push
mov
dec
mov
and
cmovs
int3
addb
lgs
xor
rcl
cmc
aas
inc
rolb
pop
xor
lea
scas
inc
mov
outsl
arpl
gs
cmpsb
mov
into
push
sub
or
push
push
fisttpll
add
and
push
cmp
ficoms
inc
out
outsl
push
je
loope
mov
leave
dec
jg
aas
aaa
imul
ret
inc
jns
pop
cld
scas
jecxz
hlt
sub
ja
xchg
push
stos
fwait
add
mov
mov
je
cmp
jmp
loop
adc
aad
insb
orl
mov
jecxz
mov
sahf
insl
jno
and
jae
adc
mov
mov
in
sbb
mov
fcmovne
fcmovnbe
sub
xchg
xchg
lds
repnz
lods
mov
nop
mov
sbb
xchg
cmp
mov
inc
adc
lret
or
push
js
sbb
fildl
shrb
stos
jo
into
jge
sbb
rol
xchg
call
sarl
or
mov
insb
dec
mov
cmpsl
mov
or
mov
in
or
jo
lods
into
push
je
pusha
mov
shll
mov
push
push
scas
ja
je
cmp
dec
jp
aaa
inc
shlb
or
lcall
hlt
ret
daa
xor
jns
xchg
movsb
repz
lods
xor
scas
bound
push
mov
in
jle
add
lock
adc
xor
xor
into
adc
jl
aaa
xchg
cmp
adc
adc
call
or
std
push
inc
andl
shrl
push
sub
jle
push
or
ja
mov
imul
push
xor
cmpsb
mov
mov
repz
into
push
into
jge
imul
and
cmpsl
sbb
mov
cmp
cli
ja
and
loope
daa
mov
dec
inc
mov
mov
int3
nop
pop
xchg
cmpsl
out
jo
fwait
xchg
or
js
fdivs
and
es
xchg
aas
aas
or
pushf
insl
or
lods
aad
stos
lds
mov
jne
dec
inc
push
push
mov
jne
jmp
push
std
jle
and
push
xchg
pushf
fisubrs
cmp
inc
cmc
rolb
xlat
dec
les
xor
shlb
xchg
sti
dec
gs
pop
push
insb
aam
sbb
aas
aaa
jns
sbb
mov
lahf
mov
cmpsl
add
neg
cmp
das
adc
add
mov
bound
movsb
lods
andl
pop
jge
mov
or
movsb
jmp
adc
push
mov
sub
sub
lret
xchg
sbb
fxtract
outsb
decl
sub
fucom
insl
adcl
mov
dec
mov
stos
aad
inc
je
xor
test
xlat
lods
pop
xlat
fnstsw
mov
push
jp
mov
jl
loope
rcpps
out
pusha
inc
mov
loope
vpsrlq
cmpsl
daa
sbb
pop
adc
adc
jg
jbe
pop
popf
fs
out
out
mov
sbb
push
and
add
xor
or
fidivrs
and
dec
push
cs
sub
xchg
pop
loop
jmp
leave
dec
ja
test
stc
pop
fdivrl
mov
or
jmp
outsl
fwait
addr16
mov
divb
fldt
test
je
xchg
and
fwait
push
adc
mov
adcl
jmp
popa
test
mov
cmp
into
add
cmp
push
push
push
fldpi
outsb
popa
int
pop
xor
in
and
mov
test
sub
add
jmp
inc
leave
dec
andl
lcall
push
xor
dec
iret
int
sbb
adc
jle
mov
pop
loop
aad
adc
shl
inc
fsubrs
adc
fnstsw
jns
xor
hlt
xlat
lea
mov
dec
push
push
xor
ja
out
addr16
mov
xor
mov
sub
gs
push
push
ljmp
mov
mov
int
push
mov
xchg
shlb
sbb
lods
sbb
pop
dec
mov
sub
inc
pop
cmp
fildll
and
scas
sbb
mov
ds
loopne
and
ds
adc
add
cmc
mov
sbb
les
mov
stos
add
sub
aas
dec
ret
mov
lds
lahf
arpl
adc
in
cmp
lds
xchg
cld
push
jp
cld
mov
lret
push
lock
push
adc
sti
shlb
add
aad
roll
add
cli
xlat
mov
push
js
aaa
into
sbb
ljmp
pop
ja
sub
xchg
pop
out
adc
and
outsb
mov
subl
lock
bt
daa
aad
aas
testb
adc
mov
je
inc
in
ljmp
inc
add
sub
fnstsw
add
mov
inc
pop
rorl
iret
cmp
mov
iret
in
jno
adc
call
jbe
xchg
pop
dec
jo
out
inc
mov
in
mov
pop
imul
sub
xor
movsb
int
cmp
negb
into
pusha
mov
cld
add
inc
mov
sti
mov
add
push
fdivr
jo
xchg
int
out
or
add
in
xlat
mov
negl
popf
test
fwait
aam
push
jp
push
cmp
xor
ror
and
movb
jbe
xchg
pop
fistl
call
xchg
outsl
jb
cmpl
dec
aam
repnz
inc
cltd
dec
ret
in
lahf
cmc
stos
sub
push
lock
fdivrs
sahf
andl
test
cmp
and
mov
aad
js
xchg
xor
or
mov
lret
out
lods
jne
jp
mov
dec
cmp
mov
bound
dec
or
in
stos
enter
roll
insl
aas
lds
or
adc
data16
icebp
rcr
push
inc
ss
fiadds
add
push
pop
pushf
inc
out
add
xchg
scas
fs
push
add
cmp
xchg
push
pop
xchg
and
xchg
cli
ja
and
dec
or
cmp
mov
jno
stos
push
bound
test
jne
cmpsb
pop
lods
and
cmp
shld
addr16
outsl
xchg
decb
sbb
xor
scas
add
loopne
inc
mov
jae
mov
sub
sti
loop
imul
into
sub
shlb
test
push
clc
cmp
mov
push
sbb
mov
sbb
insb
in
or
dec
jns
sub
shlb
mov
sbb
fdivs
push
cmc
dec
jp
test
pop
mov
call
push
xor
pop
enter
push
insl
mov
push
cmc
sbb
popa
xor
jecxz
loopne
adc
push
adc
jmp
jnp
mov
sti
addb
popa
mov
int
rcl
mov
xchg
pop
push
mov
fnstenv
out
dec
int3
push
push
mov
inc
lahf
xchg
pushf
pop
push
mov
xchg
aad
or
or
xchg
repz
sbbb
cmpsl
addr16
mov
sbb
mov
mov
jl
out
inc
jecxz
enter
gs
jb
sbb
jns
mov
sarl
je
dec
ret
aad
push
int
addb
cmpsl
gs
popf
cs
push
inc
or
imul
out
in
mov
shl
adc
add
jmp
test
icebp
clc
mov
pushf
push
add
pushf
fwait
push
lods
push
or
sarl
or
inc
enter
pop
movsb
mov
jo
mov
xchg
jne
movsl
pop
aas
adc
rolb
fs
out
int3
adc
pop
idiv
dec
mov
ss
xor
incb
out
inc
push
inc
cmpsl
xor
push
sbb
adc
push
cwtl
adc
xor
enter
or
inc
and
cmpl
dec
call
dec
push
cmp
adc
pop
gs
mov
sub
push
sub
repnz
xor
ja
pop
jae
xor
or
das
mov
mov
jmp
jecxz
sbb
mov
adc
xor
out
into
jno
out
add
mov
push
mov
dec
fstps
inc
out
cli
and
aad
push
cmp
outsb
mov
decb
fiadds
pushf
and
aaa
xor
repz
pushf
dec
push
ja
xchg
imul
push
loop
and
outsb
out
out
mov
ljmp
pop
shlb
mov
lret
orl
dec
jb
jg
les
fcoml
adc
pop
jnp
mov
push
mov
ljmp
js
jge
inc
cmpsl
jmp
cmp
popa
fmull
in
in
fisubl
lods
fnsave
out
lods
or
mov
cld
in
in
xor
addr16
adc
push
mov
aam
es
gs
push
stc
cmp
xchg
int3
rolb
clc
pop
dec
lcall
cmp
pop
xor
pop
push
outsb
inc
mov
aad
adcb
inc
repnz
jne
adc
daa
xor
lret
pop
pop
inc
subl
or
mov
adc
and
xor
push
push
mov
pushw
cmp
pop
sti
jo
sub
or
scas
and
mov
pushf
iret
imul
xchg
sub
subb
dec
mov
fadds
mov
and
push
ljmp
testb
dec
sbb
out
dec
int3
xchg
rclb
in
hlt
cli
jle
call
push
push
lahf
popl
loop
cmpsb
lahf
in
lods
or
out
std
daa
in
sahf
aam
sahf
in
popf
mov
mov
dec
popa
pop
test
in
mov
dec
or
or
das
popa
adc
sbb
cmp
xor
pop
into
int
sbb
inc
hlt
xor
add
jb
xor
nop
cmp
push
push
mov
aam
decb
or
mov
aam
mov
dec
jns
lcall
mov
fs
inc
lcall
out
xchg
dec
into
inc
imul
mov
stos
dec
xor
inc
xchg
fs
rorb
xchg
gs
inc
icebp
fnstenv
mov
adc
movsb
adc
out
jge
mov
dec
ljmp
fcoms
xor
sub
cwtl
in
lds
sbb
cwtl
dec
or
std
outsb
movb
pop
pop
jo
jp
fwait
lret
xchg
mov
mulb
js
mov
pop
cmp
jbe
lods
ja
pushf
push
pop
int3
test
aam
pop
xchg
inc
leave
cwtl
test
jne
sbb
pop
and
sti
ljmp
ret
das
or
mov
xor
pushf
fiadds
repz
popa
sbb
push
adc
mov
cmpsl
cs
nop
jbe
push
rcl
gs
pop
mov
mov
adc
popa
mov
fidivrl
mov
and
sarb
call
pusha
pop
lahf
add
ds
push
nop
lret
popf
xchg
push
or
push
mov
sarl
call
sbb
mov
pop
out
gs
test
push
adc
std
dec
xchg
jae
cld
roll
int
xchg
cmp
sahf
imul
push
pop
mov
cmp
mull
xor
repz
mov
clc
sbb
sub
pop
adc
mov
adc
fst
sbb
repz
add
or
movsl
or
or
loopne
push
jg
rol
inc
push
xor
daa
bound
mov
fcoms
cmpsl
mov
out
cmp
in
xchg
and
jno
xchg
out
and
test
mov
or
or
ja
cld
test
xor
push
ret
sbb
insb
and
ljmp
imul
aas
mov
and
pop
pop
cmc
arpl
pop
test
cltd
popf
sub
bound
inc
mov
imull
in
lcall
out
mov
mov
inc
push
lret
pop
test
movsb
adc
mov
adc
icebp
cwtl
ja
xchg
dec
push
xor
mov
imul
lods
daa
mov
arpl
fs
cmp
repz
pop
mov
lock
mov
sbb
cmp
jmp
sub
sbb
gs
cmpsb
sub
rcr
in
jnp
mov
sub
lret
push
enter
mov
xchg
hlt
xor
shlb
add
cmpsb
mov
push
cwtl
cmp
push
jge
or
mov
je
sub
fstpl
add
lret
xchg
mov
lods
jnp
sub
xchg
enter
dec
ds
stc
xchg
and
push
mov
add
outsb
sub
test
xor
mov
push
jge
or
xor
push
mov
aam
xor
sub
out
out
bound
mov
ss
cmp
xchg
push
daa
mov
inc
ret
fs
pop
add
xchg
leave
adc
mov
daa
cs
out
push
cli
in
mov
mov
pop
jecxz
sbb
mov
lret
xlat
push
repz
das
rcrl
xor
mov
inc
cmpsl
adc
xchg
scas
mov
xchg
outsb
mov
mov
sub
adc
mov
add
cs
or
push
add
addr16
xchg
sbb
pop
test
daa
lea
les
xchg
sub
call
sbb
mov
and
mov
iret
mov
sub
sbb
mov
lret
lock
mov
xchg
movsl
out
gs
push
mov
jge
fwait
dec
leave
bound
pusha
mov
popa
cs
and
roll
in
lock
js
in
jp
cmp
lret
iret
jo
add
sar
mov
add
xchg
pop
push
mov
mov
dec
in
or
arpl
xor
in
mov
stos
cmpsl
xchg
mov
jnp
or
js
jp
push
jp
xor
cmp
mov
push
xchg
cmp
jns
mov
and
mov
or
in
jne
push
add
mov
in
or
mov
sbb
sbb
aas
rorb
aam
mov
adc
sbb
adc
add
mov
imul
into
inc
mov
or
das
lret
pop
adc
cmp
cmpsl
hlt
cmpsl
xor
xor
inc
xchg
mov
xchg
popf
or
dec
mov
mov
push
sbb
in
out
sbb
cmp
insl
ret
mov
aam
xor
inc
mov
pop
aas
adc
mov
enter
sbb
mov
fwait
push
ljmp
dec
clc
adc
xchg
fwait
mov
aaa
xor
mov
cmpsl
ret
inc
add
sub
sbb
negb
jb
jle
sti
out
inc
pushf
or
arpl
mov
es
aas
int
push
adc
inc
sub
mov
andl
jbe
adc
mov
nop
lret
mov
fmuls
or
cmp
pop
fadds
shrl
outsl
ss
xor
daa
inc
cmp
ret
pop
jnp
out
mov
and
xchg
sbb
or
insb
int3
shrb
das
sub
mov
jns
or
xor
cwtl
pusha
xor
adc
stc
into
mov
mov
test
int
pop
add
ffreep
jg
paddq
cmp
in
jge
popa
dec
sub
mov
testb
push
pop
xchg
enter
mov
push
xchg
push
xchg
ja
lea
lods
mov
xlat
mov
add
xchg
pop
xchg
sub
push
mov
mov
xchg
pushf
push
pop
outsb
ja
xor
test
pop
push
call
cmp
sbb
fs
mov
push
push
adc
test
dec
xor
lock
int3
arpl
gs
xchg
xor
cmp
mov
bound
gs
mov
shll
pop
lds
imul
in
jns
and
jno
add
movsb
cmp
sti
pop
aaa
dec
add
pop
testl
jno
and
outsb
ss
or
sbb
pop
int3
shl
jge
dec
dec
lock
mov
pusha
insb
out
lods
cmp
push
add
daa
je
sbb
arpl
sbb
xchg
mov
mov
lods
mov
inc
lret
pop
fnop
andl
xchg
or
add
cmp
xchg
scas
pop
mov
clc
jno
add
push
fs
cmpsl
mov
mov
into
sti
cmp
gs
sbb
out
dec
pop
cmp
pop
and
cmpsl
imul
sub
cmp
add
stos
jl
dec
pop
loopne
pusha
and
lcall
mov
xchg
add
cmp
aad
add
mov
test
adc
mov
imul
mov
dec
mov
sub
pop
xor
add
idivl
rorl
mov
jmp
xor
add
sub
outsb
out
shlb
inc
aad
jmp
jge
sti
addr16
jae
roll
jmp
into
sub
fucomip
jmp
inc
xor
mov
jp
pop
cmc
rol
call
js
pop
faddl
mov
pop
inc
and
jmp
push
test
lret
fdivs
adc
push
jp
dec
and
pop
mov
arpl
mov
outsl
xchg
out
es
repnz
js
pop
mov
add
ret
pop
jle
es
push
xchg
jbe
jne
pop
int3
cmp
gs
ss
cwtl
mov
mov
adc
push
cmp
repnz
leave
sub
int3
pop
adc
push
sbb
lds
and
mov
adc
xor
adc
mov
int
and
inc
cld
dec
movsb
mov
pop
dec
addl
add
sahf
arpl
jmp
inc
xorl
fidivs
sub
cmp
lock
or
cmp
pop
sub
jmp
jp
jae
enter
mov
xchg
xor
mov
rcr
inc
pushf
pop
aaa
dec
pusha
mov
cmp
das
xchg
loop
in
into
jb
or
xor
sbb
inc
xchg
sahf
fs
sbb
rclb
decb
adc
pop
pop
or
inc
push
push
das
int3
dec
inc
push
mov
addr16
push
scas
mov
sbb
mov
out
ret
stos
jmp
adc
mov
bound
jg
mov
mov
stos
jae
cmp
and
in
inc
subl
mov
ret
push
test
callw
push
rcrl
test
cmp
mov
jno
mov
popa
inc
scas
adc
repnz
push
adc
loopne
pusha
cmp
and
je
gs
cli
xchg
mov
mov
or
loop
call
mov
pop
jle
ss
mov
cmpsl
xchg
push
loope
or
cli
mov
push
fdivrs
pop
jge
xor
jmp
fsubs
pusha
lods
and
or
aas
xor
xchg
jmp
adc
lcall
cli
xchg
xchg
sub
test
int3
inc
jge
mov
sub
loopne
inc
out
daa
leave
pop
mov
mov
addb
fisttpll
mov
pop
les
ljmp
jge
add
sub
mov
mov
pop
scas
ja
out
mov
movsb
lds
int
xor
jae
sub
int3
int
mov
aaa
sub
xchg
pop
mov
scas
clc
aam
add
imul
push
mov
mov
push
sbb
adc
pop
lods
ds
inc
xor
stc
xchg
inc
pop
aam
decl
test
clc
shl
rorl
testb
mov
pop
mov
in
outsb
mov
mov
hlt
ficompl
sub
add
mov
jecxz
pop
lcall
pop
push
loopne
mov
rcl
mov
mov
out
iret
mov
stos
xor
pop
sbb
aam
repz
and
jle
ror
mov
adc
jne
loop
lret
mov
cmpsb
jb
dec
test
or
dec
mov
mov
cmc
xchg
and
or
push
cld
insb
fs
inc
xlat
push
cmp
cwtl
mov
sub
xor
sub
mov
cmp
test
jne
lock
fwait
add
lret
xlat
push
push
and
xor
push
fdiv
push
push
xor
pop
das
scas
xor
fstpt
push
mov
fiaddl
jl
mov
add
sarb
xorl
mov
mov
or
outsl
xchg
call
or
clc
dec
pop
ja
leave
cmp
test
in
sub
xchg
out
aam
cmp
ja
inc
mov
subl
push
icebp
test
gs
int3
add
rcl
int3
push
adc
cmp
outsl
or
enter
sbb
clc
fstpl
aaa
rorl
sub
sbb
pop
pop
jns
xor
push
inc
push
in
das
std
adc
stc
outsb
loop
and
sub
rcll
inc
mov
and
jecxz
ret
loopne
rcrb
sub
into
sti
mov
iret
fimull
mov
or
ficompl
test
ret
loope
popf
aas
xchg
cs
fucomip
outsl
in
cwtl
mov
xchg
pusha
jmp
pop
ss
or
sub
in
pop
jle
xlat
inc
pop
xor
pop
fwait
and
hlt
and
cli
hlt
mov
add
loope
xchg
sub
test
mov
insb
xlat
enter
ja
and
loopne
pop
in
adc
icebp
repz
mov
jne
fcompl
pop
mov
add
pop
int
fildl
xor
push
xchg
xor
daa
jmp
or
cmp
in
mov
lods
mov
jns
add
jge
call
les
test
into
inc
enter
cmp
iret
aad
dec
cmpsl
xchg
cmp
fs
ljmp
jns
inc
mov
pop
xchg
or
mov
xlat
test
push
pop
xchg
rcll
mov
scas
dec
movsb
and
pmullw
into
mov
add
outsb
roll
sbb
repz
add
ss
js
sub
xchg
outsb
ljmp
push
imul
lret
mov
outsl
pop
push
dec
jnp
mov
sub
jne
or
dec
call
insb
jnp
loopne
sub
push
loope
test
in
arpl
mov
jno
ret
jl
or
stc
lock
mov
mov
inc
inc
shl
pop
shr
inc
push
sbb
subl
pusha
subl
pop
push
pushf
dec
mov
stos
xchg
neg
push
ljmp
cmpsb
cs
push
xchg
pop
int3
push
or
outsl
fcoml
inc
xchg
add
pusha
push
loope
jnp
cmp
add
xchg
mov
stos
jne
in
daa
adc
and
push
jne
gs
mov
jno
cs
fistpl
mov
imull
or
out
or
aas
add
shl
mov
xor
lock
dec
jl
xchg
les
repz
xchg
push
icebp
and
xor
lcall
lock
mov
aaa
adc
inc
cmp
push
aam
in
pop
pop
sahf
mov
pop
sub
push
mov
xor
push
cmp
push
pusha
push
or
negb
fnstcw
mov
pusha
ss
sbb
sti
lahf
mov
pusha
mov
mov
push
int3
inc
add
or
jle
mov
add
mov
pop
xchg
pop
pop
pushf
inc
loop
jmp
sbb
push
cli
mov
in
ljmp
loopne
cwtl
jne
inc
mov
lcall
add
jg
ja
push
inc
cld
add
mov
stc
mov
lret
out
xchg
mov
dec
stos
test
imul
lahf
pop
fadd
or
rcrb
mov
adc
sarl
cmp
or
sub
fcmovne
xchg
repz
push
jl
jb
call
xorb
dec
cmp
test
inc
jae
mov
xor
hlt
aam
pop
lcall
xchg
scas
cwtl
xor
dec
cli
xchg
pop
loope
pop
movl
mov
cmpsb
ret
adc
mov
sbb
sub
pop
fstl
mov
mov
xchg
mov
sbb
adc
loopne
and
jbe
sub
cmpsl
xchg
fs
jecxz
jmp
loope
and
cmp
and
xor
loope
incl
mov
scas
pusha
xchg
jle
jle
sbb
scas
add
xchg
jnp
jg
sbb
addr16
mov
xor
mov
mov
xchg
mov
mull
mov
dec
xor
xchg
dec
sbb
pop
jb
sub
mov
cmpsb
xor
mov
ja
cmp
jne
pop
push
hlt
mov
cmp
jo
dec
mov
push
jecxz
je
sub
push
aaa
cmc
movsb
inc
test
rclb
inc
inc
push
push
dec
cmp
xchg
jne
lods
test
xchg
xchg
mov
std
lret
xor
inc
add
in
in
inc
dec
fwait
loop
adc
les
push
dec
lds
fcompl
pusha
xor
pop
repnz
adc
xchg
repz
mov
ja
and
dec
stos
dec
pusha
imulb
mov
mov
sbb
jnp
sbb
jg
mov
andl
pop
pop
xchg
or
pop
pushf
shll
out
xor
and
pop
or
es
inc
lahf
insb
in
cmp
mov
push
cmpsl
dec
cld
cwtl
mov
xchg
xchg
lods
mov
in
fstpl
push
add
stos
adc
dec
inc
and
inc
cwtl
fistpll
fcomps
jl
lcall
stc
mov
cmc
addr16
inc
testl
xchg
or
xlat
fisubrl
movsl
test
jns
pop
xor
mov
inc
sbb
test
add
inc
dec
xor
mov
xchg
repz
push
rorl
mov
faddl
je
mov
ss
add
sbb
push
adc
incl
push
js
fsubrp
sbb
dec
outsl
jo
out
rcll
sbb
cmp
lds
sub
bound
test
push
es
sub
bound
repz
mov
push
push
ret
cmp
icebp
int3
aas
cmp
inc
cmp
int
mov
lret
fcompp
adc
fnstenv
cmp
jnp
call
ffreep
fsts
mov
xchg
mov
xlat
fxch
xchg
in
fbstp
xor
mov
add
ja
addr16
test
xor
das
dec
mov
mov
ficoms
mov
aad
inc
add
lods
aas
push
gs
mov
inc
jo
lret
sbb
outsl
lea
je
mov
xchg
xchg
cs
sti
test
adc
sub
jp
cli
outsb
jmp
xchg
cmp
inc
repnz
sub
es
xchg
pusha
das
sbb
mov
sub
cmpsl
sub
add
subl
inc
stos
adc
pop
cmpsb
or
fidivl
nop
test
jmp
jp
dec
enter
or
xchg
push
xor
jbe
cld
clc
cltd
mov
and
adc
cs
jl
or
outsl
lea
fcoml
sahf
movsl
sarl
insl
stos
inc
xorb
adc
inc
or
lcall
push
pop
xlat
js
push
pop
fldenv
xchg
pop
xchg
into
pop
mov
push
mov
inc
add
mov
call
test
testl
out
mov
add
sbb
repz
in
cld
push
stos
lea
icebp
jle
or
sbb
popa
mov
ret
mov
mull
ficomps
test
repz
cmpsb
daa
push
jno
xor
cmp
insl
mov
iret
cmpsl
rol
gs
dec
test
dec
xchg
mov
ret
inc
xor
jo
sti
jno
push
inc
iret
into
fcmovnu
pop
sub
jmp
xchg
pop
inc
mov
xlat
jecxz
push
push
sbb
fiaddl
cmp
push
xchg
mov
xor
mov
ret
mov
out
xor
arpl
ss
pop
test
call
rorl
popa
mov
fisubrl
mov
mov
dec
sub
jmp
rcll
sub
test
test
xchg
jg
push
nop
lods
cmpsl
int3
fwait
inc
mov
loopne
push
stos
xchg
in
icebp
or
insl
xor
stc
ror
enter
and
cmp
sbb
jns
mov
lret
mov
sbb
inc
add
dec
inc
mov
bound
mov
mov
cmp
iret
cmp
outsb
or
xrelease
mov
lahf
sub
inc
ja
inc
int3
shll
xchg
sub
ljmp
or
add
leave
stos
scas
cmpsb
jno
fists
call
repnz
test
push
pop
fs
add
mov
jns
aad
mov
ret
ljmp
sbb
xor
adc
mov
aam
arpl
and
cmp
adc
test
outsb
xor
inc
cmp
rcrb
insb
add
fmul
dec
jno
lret
loopne
cwtl
pop
pop
negl
mov
hlt
out
lcall
pop
add
sub
les
mov
sahf
mov
sbb
mov
imul
cmp
pusha
mov
jge
adc
fs
fwait
xchg
adc
mov
inc
add
cmp
pop
pop
mov
jno
xor
inc
and
push
xor
sbb
stos
das
or
cmp
test
pop
xchg
push
mov
movsb
dec
and
data16
mov
sub
fnstsw
inc
cli
lods
pop
cwtl
cmp
test
loopne
push
aas
dec
add
imul
stc
add
cmp
xor
mov
in
outsl
dec
mov
jmp
in
loope
fwait
mulb
push
jecxz
jmp
mov
lcall
mov
xchg
test
into
cmpsl
jmp
push
daa
push
cmp
dec
push
cmc
adc
adc
aam
jno
aam
movsl
out
sbb
push
mov
imul
mov
pop
icebp
in
inc
mov
adc
push
imul
jb
jmp
test
lret
cmp
out
cmp
movsb
sub
and
xor
xor
int
sub
fwait
sti
ret
push
push
or
fistpll
add
adc
loopne
mov
cs
mov
popf
xor
pop
aam
xor
cld
xchg
js
pop
cmp
mov
cwtl
xchg
adc
jmp
inc
or
jmp
dec
std
push
or
dec
push
cmp
rcll
jno,pt
xchg
sbb
pusha
pop
movsl
ret
ret
shlb
mov
incl
pop
mov
loop
popf
adc
outsb
sbb
xchg
sbb
mov
leave
popa
dec
lea
scas
and
xchg
mov
xacquire
push
aaa
neg
pop
int
fwait
insb
dec
xchg
push
jae
add
mov
aas
mov
adc
movsl
call
dec
push
sbb
mov
mov
repnz
inc
mov
mov
sub
ds
jno
jno
mov
arpl
cmp
add
pop
push
xlat
dec
sahf
push
mov
inc
fnstenv
and
jmp
push
ljmp
add
popa
ficompl
xor
mov
pop
pop
stc
cmp
lods
fwait
lahf
mov
adc
push
cli
cmp
sub
mov
push
dec
lret
mov
jno
rol
fsubs
pop
jae
pusha
cltd
imul
test
pop
push
jo
bound
mov
leave
mov
mov
mov
xor
add
pop
incb
rorb
xor
scas
push
pop
mov
sarb
dec
mov
ljmp
mov
in
pop
cmpsl
cmp
xchg
xor
mov
mov
lock
jo
div
push
inc
inc
fisubrl
jnp
daa
xchg
ds
cmp
pop
lods
ret
insl
inc
in
loope
movsl
mov
cli
pusha
jbe
cld
mov
pop
loop
mov
sbb
or
ret
or
or
adcb
int
dec
sbb
push
fwait
out
loopne
xor
dec
sti
outsb
stc
aam
les
and
je
or
pusha
fwait
lock
aam
ljmp
cmpsl
dec
leave
aad
xor
mov
outsb
cmp
lea
movsb
inc
cs
lock
fldcw
mov
call
out
add
jg
sub
sub
mov
test
popf
das
fstps
push
xchg
outsb
and
or
stos
mov
push
hlt
leave
sbbl
mov
fldt
jle
or
mov
mov
adc
mov
adc
mov
push
int3
out
in
xchg
mov
pop
mov
ss
ficoml
xorb
and
mov
push
pop
inc
aas
push
sbb
xchg
xor
push
mov
push
aad
inc
loop
inc
out
push
lods
pop
sbb
repz
mov
sbb
in
pop
jmp
loopne
ds
xchg
push
inc
xor
mov
inc
or
stos
inc
cmpsb
xor
sub
and
outsb
aad
rcl
adc
adc
mov
out
mov
enter
xor
jo
cld
push
aam
sbb
push
mov
movsl
xorb
push
pop
pusha
mov
dec
adc
std
mov
ds
fimuls
mov
adc
push
cld
xor
jns
push
mov
jecxz
push
les
shll
ljmp
shr
movsb
mov
sar
cmp
pushf
mov
daa
cmpsl
and
push
or
test
ljmp
sbb
imul
pop
push
arpl
and
sub
fidivrs
rcl
shlb
sbb
stos
imul
sti
ja
iret
outsl
insb
ds
or
insl
pusha
xchg
dec
outsb
faddl
jge
lods
jmp
fisubl
push
loopne
xchg
mov
and
adc
and
in
arpl
pusha
int3
stos
add
daa
jne
add
adc
aas
xchg
negb
test
adc
inc
shll
pop
ja
jmp
fs
mov
lahf
xchg
push
aaa
xchg
jne
inc
xchg
nop
xor
xchg
push
mov
ljmp
loope
pusha
pop
mov
movsl
outsb
xchg
mov
xchg
xor
loope
and
in
adc
outsb
stos
fimull
pop
sbb
cld
jp
mul
sub
or
hlt
in
inc
pop
hlt
push
mov
data16
jp
adc
jns
popf
lcall
dec
arpl
das
dec
mov
scas
fdivrs
rcrb
mov
and
subb
loope
inc
xor
das
mov
sbb
pushf
pushf
cmp
mov
xor
adc
jle
push
jg
in
je
and
lret
and
aas
pop
push
shll
loop
inc
lret
pop
inc
mov
mov
mov
xor
xlat
or
and
pop
in
hlt
dec
loop
dec
pop
rorb
xchg
jp
mov
mov
cmp
mov
jp
mov
fcoml
push
mov
mov
mov
jo
pop
stc
jns
jnp
lods
push
les
mov
jl
pop
icebp
sbb
mov
cli
cmpsl
out
xor
mov
jnp
jae
movsl
jle
fidivrs
inc
and
mov
ds
lret
hlt
rol
xchg
imull
mov
push
scas
shrb
and
add
inc
aad
inc
aam
into
test
lods
jnp
pop
sub
negl
out
stos
inc
jne
push
imul
int
lds
mov
mov
cmpsl
daa
inc
outsl
inc
mov
sbb
xor
add
out
stos
sbb
fs
repnz
cld
in
dec
clc
shrb
mov
sub
adc
inc
out
iret
sbb
mov
add
pusha
add
cli
dec
outsb
aas
fldt
inc
loopne
dec
movsb
push
pop
xor
aam
jbe
std
bound
out
scas
and
mov
sbb
enter
jno
push
loop
sub
and
stos
pop
das
mov
gs
sbb
cmpl
inc
xor
and
sub
dec
dec
or
adc
por
cs
sub
pop
test
in
push
call
mov
push
fcomi
inc
inc
in
cmp
inc
inc
push
bound
mov
popa
push
mov
jp
push
jne
int3
test
cmp
pop
lods
clc
fwait
divb
inc
std
loopne
mov
std
mov
in
add
xchg
or
jo
jb
mov
pop
jg
ja
push
insb
mov
ss
in
fistps
iret
adc
push
xchg
repz
int
pop
ja
popf
push
addl
into
sub
addr16
subl
rcr
sub
ljmp
jg
insb
xchg
in
cltd
add
adc
add
cmpb
add
jmp
mov
cmp
sahf
bound
push
lock
fnsave
mov
fdivr
scas
fmuls
lds
pop
cltd
xchg
ret
lods
into
inc
and
add
inc
sahf
xor
xor
pop
sarb
or
aaa
lea
hlt
sub
cmp
and
out
jns
mov
lret
addr16
cmpsb
dec
negb
pop
out
adc
in
movl
fldenv
out
fcmovne
sbb
xchg
jp
pop
in
daa
mov
mov
fs
es
lock
dec
cmpsl
sbb
or
cmpsl
add
push
xor
mov
aas
jo
xlat
mov
int3
mov
subb
push
hlt
mov
not
inc
mov
call
movsl
out
pop
adc
and
gs
inc
in
xor
jmp
daa
or
push
in
aad
je
jg
or
aas
xchg
sbb
mov
arpl
adc
movsl
adc
es
pop
inc
mov
dec
inc
mov
xor
dec
cltd
mov
out
adc
loop
adc
mov
int3
arpl
repz
mov
cmpsl
lods
ret
aas
xchg
jle
jle
xorb
xlat
lock
int3
rcrl
or
fsts
repz
add
xchg
mov
js
inc
cmp
jecxz
out
xor
fwait
push
sahf
dec
cmc
jno
add
shll
movsb
mov
jg
and
xchg
or
inc
sub
push
xchg
dec
pop
sbb
or
jge
add
imul
hlt
xchg
aaa
out
and
fstps
mov
push
das
cwtl
fstpt
outsb
test
mov
loope
mov
add
dec
or
mov
cmp
jae
jbe
sbb
cltd
xchg
xor
jb
or
test
shrl
push
xlat
mov
in
lret
daa
ds
and
dec
push
mov
insb
js
lcall
stc
cmpsl
dec
push
xor
pop
inc
or
ss
and
fwait
mov
xor
mov
pop
jnp
adc
sub
dec
fists
movntps
test
sbb
push
les
mov
sub
mov
cmc
cmc
leave
aaa
shr
adc
push
lods
das
jl
data16
outsb
notb
fidivrl
fsts
out
into
sbb
out
mov
or
sahf
int3
gs
jle
pop
fadd
xchg
adcb
and
imul
push
outsb
mov
vmwrite
nop
mov
pop
xlat
dec
push
shrb
rcpps
mov
arpl
jb
les
dec
xchg
cmpsl
arpl
fisubrl
sti
mov
dec
lea
cmp
jnp
or
xchg
xor
lahf
dec
addl
daa
movsl
mov
push
movlps
push
sarb
cmp
pop
mov
xchg
loopne
icebp
xchg
arpl
and
loope
mov
pop
and
nop
mov
sub
clc
ja
das
sbb
sub
jns
mov
movsb
scas
sbb
addb
inc
aad
adc
push
sbb
lods
stc
inc
sub
xchg
jne,pn
sbb
lcall
mov
cmp
xor
xchg
pop
std
adc
push
mov
xchg
call
pop
scas
movsl
xor
xchg
push
adc
arpl
arpl
leave
jp
jp
xchg
fmull
cmpsl
aaa
lock
xchg
aam
movsb
sub
inc
xchg
fcomp
aaa
sub
hlt
sbb
jl
dec
fdivrl
push
or
dec
insb
push
lods
mov
pop
add
pop
cmc
push
shlb
test
adc
enter
adc
fbstp
jb
xor
lds
mov
fcmovbe
std
xchg
mov
pop
fbld
pop
cmp
sahf
nop
sbb
fisubl
pop
pop
fildl
or
out
jns
xchg
and
ja
mov
je
xor
dec
xchg
orb
dec
or
aam
insl
mov
insb
mov
bound
sub
push
pop
and
enter
sub
pop
inc
xchg
fisubrs
js
cmp
push
jno
in
mov
and
xor
sbb
out
xchg
cs
mov
hlt
rclb
into
cli
daa
jmp
daa
out
inc
pop
xchg
imull
push
scas
icebp
enter
mov
notl
mov
jmp
gs
pop
and
xor
mov
xor
mov
and
testl
cld
enter
loopne
mov
loopne
add
or
in
mov
outsl
pop
add
add
add
test
xchg
dec
ja
dec
adc
test
mov
jl
dec
xchg
call
jae
add
push
scas
fdivr
jp
dec
pop
fs
icebp
mov
or
ja
ret
mov
jbe
test
gs
cmp
pop
adc
pop
jecxz
mov
lret
adc
cli
inc
out
imul
or
mov
xchg
movsb
sub
lcall
movb
pop
pop
ror
shr
sub
hlt
pop
jge
jle
enter
fsubl
mov
daa
sub
and
xchg
pop
jne
das
inc
inc
lods
in
pop
xchg
push
pop
xor
mov
xchg
dec
add
or
mov
jp
orb
push
sub
into
push
inc
aad
call
hlt
jnp
mov
cwtl
dec
sub
mov
out
std
pop
push
in
or
or
sarb
and
movsb
pop
ret
cmp
xchg
outsl
ret
int
arpl
adc
ret
add
or
pop
in
fsubrp
fidivl
jge
pop
mov
mov
mov
gs
enter
jecxz
fadd
int3
adc
push
pop
shrb
sub
imul
sbb
mov
pop
ss
mov
cmpsb
out
or
scas
push
daa
add
movsb
lret
repnz
mov
or
adc
pop
jns
fcomps
or
les
push
sar
adcl
nop
pop
sbb
adc
add
xor
sub
add
mov
sub
add
test
fdivl
dec
loopne
and
cmp
push
mov
call
fildll
idivb
jae
xor
movsb
lret
xchg
adc
mov
filds
sbb
cmp
push
or
outsb
in
sub
xchg
jne
add
jmp
mov
fimull
mov
stos
aam
push
clc
mov
mov
popf
mov
daa
push
scas
outsb
mov
addb
pop
xchg
fidivrl
jbe
lods
roll
xor
jo
test
std
mov
xor
movsb
sub
push
loop
andw
cltd
jmp
xor
stos
sub
pusha
xlat
jns
mov
jl
dec
cld
ret
dec
es
jecxz
jg
pushf
xchg
sarl
repnz
ds
js
push
stos
xchg
cmpsb
mov
push
out
sub
jl
lods
mov
xlat
push
addr16
or
mul
mov
cmovl
hlt
sub
sbb
sub
jle
rclb
out
clc
bound
test
iret
mov
movsl
pop
cmpsl
mov
scas
inc
jmp
pop
cmove
or
inc
push
dec
and
lods
jbe
pop
mov
rcrb
xlat
sbb
jg
pop
mov
les
mov
push
stos
in
mov
pop
neg
mov
cmpps
sbb
int3
enter
cmp
fidivrs
lea
repz
in
or
mov
out
into
pop
pop
xchg
stc
pop
sbb
add
test
mov
xchg
sub
out
inc
popa
mov
test
rcrl
mov
shll
jo
and
sbbb
and
sbb
test
iret
nop
mov
push
mov
sub
xor
dec
in
andl
or
lods
lret
inc
cmp
and
jns
lea
stos
fmuls
pop
xchg
cmpsl
test
jns
xchg
ljmp
cmc
jmp
dec
jne
adc
mov
mov
mov
mov
pop
loope
push
cld
mov
pushf
adc
std
pop
dec
sbb
sti
movb
mov
stos
and
dec
mov
bound
push
ret
aam
mov
decl
sbb
jmp
int3
sti
or
in
jne
push
push
mov
imulb
adc
addb
push
mov
adc
cmovs
cmp
mov
xor
ret
sub
mov
xchg
xchg
jb
jne
cs
adc
loopne
insb
cmp
nop
lods
sub
test
dec
add
in
pop
mov
and
mov
sbb
cmp
xor
adc
stos
sub
and
out
add
inc
rorb
outsb
jecxz
loopne
shl
pop
cmp
insb
pop
jg
mov
shlb
jbe
inc
pop
and
lea
and
xor
mov
pop
shll
mov
out
dec
dec
mov
cmp
test
movsl
inc
cmpsl
loop
or
jns
mov
cwtl
adc
ffreep
cmp
jle
enter
dec
aas
cmc
stc
sbb
aaa
js
jp
iret
mov
sub
dec
xor
test
sub
xchg
fiaddl
repnz
les
test
lret
dec
mov
mov
sub
gs
xchg
sbb
or
daa
adc
and
mov
lcall
cmp
cs
sbb
adc
icebp
daa
cmp
and
add
mov
push
mov
and
xchg
pop
in
push
adc
push
and
and
cs
es
cmpsl
sub
sti
les
mov
mov
mov
and
mov
dec
sahf
mov
imul
xor
mov
push
test
test
mov
aad
xorb
jge
sbb
test
dec
ret
imul
xchg
mov
pop
data16
push
lret
scas
in
xchg
xor
cmp
arpl
loop
adc
jns
jne
out
arpl
dec
dec
iret
cmp
pop
jb
push
and
sbb
movsb
leave
xchg
movsb
mov
or
ja
movsl
test
aad
js
pop
xor
repnz
jns
mov
dec
xchg
inc
mov
jecxz
orl
mov
or
mov
mov
loopne
outsl
jno
or
push
les
int
in
dec
daa
out
sbb
dec
xor
mov
out
in
dec
in
subl
jge
adc
jne
mov
pusha
dec
mov
sbb
cli
cmp
clc
sbb
and
sub
clc
pop
mov
cmp
lret
and
mov
adc
aas
fcmovbe
inc
xchg
jo
cmc
scas
mov
sub
nop
sub
clc
inc
mov
aas
cwtl
cli
in
and
sti
mov
rcrl
and
and
icebp
push
pusha
movsb
add
lcall
cmc
inc
lret
adc
mov
nop
sub
inc
repnz
jmp
push
sub
adc
frstor
rorl
imul
pop
enter
mov
jns
mov
pop
int
mov
popa
mov
xchg
or
push
or
mov
push
out
roll
js
hlt
movsb
pop
scas
sub
punpckhdq
jbe
fistl
lret
ja
lds
cmp
jne
loope
outsb
clc
cmpl
mov
dec
jecxz
pusha
sar
bound
and
addr16
add
lds
jl
adc
repz
xor
sbb
and
je
repz
jl
pop
and
mov
pop
jo
das
push
int3
jnp
outsl
and
mov
popl
and
outsb
xor
jb
pop
jmp
pop
mov
xor
gs
xor
adc
push
inc
out
pop
dec
jbe
popl
sti
cld
mov
outsl
cmp
adc
sarl
cmp
inc
cmpl
push
movsb
add
jbe
dec
sbb
pop
test
jp
and
bnd
pop
mov
mov
and
lds
xor
mov
inc
jae
xor
inc
lods
pop
testl
fidivl
das
imul
int3
push
inc
mov
js
push
stos
inc
cmp
nop
mov
sub
mov
cmp
imul
and
outsb
aas
push
sub
jmp
inc
dec
adc
add
or
sub
lret
lcall
ljmp
push
loope
adc
sar
sbb
rolb
lahf
xor
inc
pop
test
int3
sahf
mov
xchg
pop
xchg
mov
lahf
jnp
cmp
mov
and
dec
or
mov
stos
ret
lcall
pop
mov
out
cmpsl
imul
in
stc
xorl
pop
popa
xchg
push
inc
mov
insb
adc
sbb
fwait
ret
pop
mov
adcb
pusha
inc
rcr
cmc
pop
pushf
stos
ret
jae
dec
jl
mov
ret
addl
and
movsb
mov
dec
xchg
jb
xchg
mov
or
pop
mov
fwait
in
icebp
xor
jno
dec
adc
or
lcall
jmp
dec
imul
push
mov
mov
cs
dec
repz
rorl
test
or
mov
mov
mov
outsb
out
inc
inc
rolb
adc
mov
fcompl
test
pop
jbe
outsb
mov
mov
mov
jne
adc
mov
test
jbe
fdivl
jb
inc
or
cmp
mov
and
enter
clc
in
pop
adc
adc
xor
stc
out
mov
mov
loope
fstps
fucomip
dec
es
shl
mov
out
int3
icebp
xor
stos
inc
xchg
xlat
and
push
pop
adc
xor
out
sub
pop
scas
pop
fcoml
je
jne
mov
popa
xchg
or
xchg
hlt
das
pop
inc
andb
jge
xor
arpl
push
out
outsb
movl
pushf
cmp
aad
out
fwait
loope
mov
cmpsl
test
add
push
mov
movsb
cmp
aaa
shr
jecxz
pop
repz
push
jecxz
jnp
pop
or
or
fdivs
pop
stos
sbb
dec
stc
leave
ds
sbb
inc
mov
push
mov
mov
stos
adc
mov
out
xchg
sbb
scas
mov
test
and
mov
aad
push
push
dec
out
rcrb
popa
cltd
push
xadd
mov
mov
enter
lret
leave
pusha
cmp
push
inc
cmp
cmp
mov
ffreep
enter
mov
pop
or
adc
mov
lds
das
xchg
push
add
jo
fucomip
fidivl
rcrb
jnp
repz
and
or
push
subl
push
imul
in
adc
mov
cs
adc
bnd
gs
aad
inc
fwait
lods
mov
or
pop
movsl
push
add
lods
add
clc
or
inc
mov
sbb
push
push
leave
xor
cltd
cmp
gs
lock
sarb
les
mov
pop
jbe
lret
sbb
pop
xchg
je
mov
enter
shrb
xchg
inc
push
int3
and
pop
lcall
loop
dec
jge
xchg
adcl
sub
cmp
data16
inc
lahf
cmp
push
sbb
cli
out
jnp
inc
sub
call
mov
ja
cwtl
into
dec
sbb
insl
push
out
mov
hlt
add
das
adc
sub
icebp
sbb
jne
sbb
lret
mov
rcrb
push
jecxz
ret
sub
sbb
andb
pop
sub
adc
cld
inc
lea
int3
adc
xor
test
xor
sub
mov
into
ja
inc
cmp
mov
popa
and
jg
dec
push
ret
jle
mov
daa
int3
shlb
sub
add
mov
sbb
mov
add
adc
js
pop
jecxz
pop
sbb
mov
inc
push
aas
inc
pusha
dec
cmpsb
or
fidivrs
lds
mov
cmpsb
pop
aad
aaa
mov
and
cltd
xchg
push
sub
adcl
mov
or
fcomps
xor
ja
addr16
mov
lods
data16
dec
dec
clc
clc
addl
sbb
sbb
mov
add
push
mov
jl
sbb
repnz
test
jbe
ss
movsb
cmpsl
out
add
jns
pop
push
cli
aam
pop
jmp
push
lret
pop
pop
and
fildl
adc
jg
sarl
dec
or
adc
jp
lret
in
test
outsb
inc
sub
dec
fldl
adc
mov
andb
xor
inc
adc
stos
mov
jecxz,pt
lea
cmp
mov
popa
mov
inc
or
xor
push
stos
rcrl
fstps
inc
inc
mov
lret
and
push
lret
xlat
or
pop
mov
sub
shrb
and
icebp
or
xlat
rorb
shl
mov
js
dec
jle
push
xor
into
mov
jne
inc
dec
sbb
mov
mov
xor
or
jle
lcall
add
xchg
sub
push
call
pop
lret
fwait
scas
adc
addr16
xlat
in
ljmp
imul
daa
pop
cs
aad
repnz
sbb
sbbl
fdivp
pusha
pop
fbstp
xchg
sub
fmuls
or
gs
in
aad
testb
and
sbb
cmp
stc
jmp
xor
fstpl
stos
adc
pop
not
and
xor
and
inc
insl
fdivr
insl
insb
or
pop
inc
loopne
sub
nop
adc
testl
xchg
inc
test
lret
add
fwait
xchg
fnstsw
pop
lret
inc
cmp
pop
out
lock
pop
ss
ret
int3
test
push
fstpt
push
es
jb
xchg
shrl
arpl
mov
add
pop
faddl
notb
ss
iret
dec
dec
jle
std
leave
cmp
xchg
sbbl
addb
and
pop
mov
mov
ret
xor
adc
mov
out
push
aad
xor
pop
xchg
bound
dec
push
push
cmp
jno
push
addb
adc
cs
ljmp
push
xchg
scas
jno
hlt
adc
mov
or
mov
movsl
lahf
sub
pop
add
pop
mov
testb
mov
push
cs
push
fnstenv
sub
xchg
sub
clc
ja
test
aas
inc
stos
mov
iret
jbe
mov
xorb
push
fildl
jne
je
fwait
leave
rorb
data16
pop
pop
inc
fisubrs
pop
sahf
fsubl
add
iret
mov
push
call
hlt
add
push
pusha
mov
push
or
xchg
out
mov
mov
jp
push
mov
or
mov
push
aam
int3
pop
lock
pop
jnp
sub
shll
and
fisubl
scas
arpl
cltd
das
add
pusha
and
cmp
jo
inc
lret
mov
lcall
es
push
pop
pop
xchg
imul
mov
imul
aaa
cmp
mov
or
insb
pop
jns
pusha
mov
daa
out
cwtl
xchg
mov
jo
nop
ret
scas
shl
daa
inc
scas
cmc
jno
sbb
and
mov
xchg
rcr
jge
cmpsb
lcall
sbb
inc
lcall
jge
fs
aas
sbb
jecxz
sbb
add
ljmp
or
arpl
sbb
xor
std
faddl
xor
jnp
add
xchg
mov
jnp
and
mov
xor
cltd
sti
jecxz
sbb
push
popa
inc
cmp
in
mov
xor
jl
in
mov
sub
scas
in
in
mov
test
sbb
add
jecxz
in
pop
into
push
sahf
and
push
dec
test
test
in
xor
out
pop
insb
add
gs
int
lods
lods
sub
ficoms
cmpsl
lcall
data16
or
fisttps
movsl
sub
and
testl
fstpt
or
cltd
mov
mov
mov
fimuls
stos
push
mov
mov
pushf
sar
mov
int
mov
stc
mov
fnstcw
test
sbb
test
dec
push
outsb
jge
dec
cmp
fs
enter
add
or
je
jg
mov
xchg
gs
mov
sub
inc
xor
push
pop
push
adc
stos
pop
cmp
into
aad
sub
fiaddl
rcrb
scas
scas
data16
and
xchg
and
clc
icebp
loop
xchg
pop
faddl
pop
sub
mov
sbb
movsl
jne
lock
mov
mov
loop
mov
imul
push
adc
les
int3
cmp
jmp
add
outsl
rcrb
or
mov
push
rol
hlt
ds
cld
mov
sahf
cmp
fcomi
and
shll
das
sbb
dec
jmp
mov
pop
mov
mov
ficoml
outsl
sbb
loopne
sbb
add
push
sti
fisttpll
movsb
sarb
mov
stc
inc
stos
fs
jge
jecxz
sti
sti
insb
pop
addr16
cltd
xor
push
pusha
iret
lret
arpl
pop
pop
jo
dec
lea
xchg
push
mov
dec
out
xor
push
test
sbb
xor
aam
inc
ljmp
aam
pop
pop
aaa
mov
jle
xor
jns
mov
test
in
mov
adc
lret
push
imul
shll
jmp
push
and
repz
out
ds
lahf
push
mov
xor
sub
pmaddwd
inc
sub
mov
cmp
cld
cmc
add
hlt
xchg
seto
dec
test
sbb
jp
lock
sub
push
mov
or
scas
dec
xchg
enter
dec
jp
lret
out
xchg
icebp
mov
aas
test
push
cld
inc
repnz
and
stc
pop
sub
mov
or
pop
inc
mov
into
xlat
mov
jge
mov
mov
cmpsl
cmp
je
in
ja
dec
jbe
fnsave
out
rcrb
into
cmp
lcall
loope
std
xor
movl
ret
xor
pop
xor
pop
add
adc
arpl
out
jns
out
and
fdivs
insb
adc
outsl
lods
jl
flds
or
shlb
in
cmp
ret
jl
adc
jge
out
mov
push
scas
mov
cmp
std
or
cli
sti
xlat
dec
sti
xchg
jne
inc
sbb
arpl
scas
cmc
mov
sub
leave
imulb
fildl
push
pushf
in
roll
mov
sbb
or
push
xchg
in
lret
shlb
jle
xchg
pop
jp
fimuls
sub
sbb
sub
push
jnp
sub
mov
xor
outsl
fisubrs
sub
xchg
mov
or
ret
xchg
cmp
shrl
aas
jb
xor
dec
mov
xor
lds
rorl
subb
jb
pusha
out
aaa
sti
cmp
push
gs
and
sbb
iret
sub
mov
mov
rcrl
out
mov
insl
xor
or
push
hlt
push
xchg
jbe
test
shll
mov
push
imul
ficompl
sub
incl
push
imul
push
lret
pushf
push
test
mov
jmp
push
inc
call
push
push
mov
sub
dec
mov
repz
pop
jns
or
push
nop
dec
je
shrl
mov
lcall
test
jbe
in
fldenv
dec
jmp
jae
xchg
ss
lret
test
fs
aas
mov
lds
jae
lods
cmc
aad
pop
orb
repnz
fnstcw
leave
add
mov
mov
mov
or
popf
call
mov
mov
rolb
movsb
insl
pop
pop
mov
in
xor
fwait
sbb
nop
adc
je
mov
jns
and
fisubs
mov
adc
dec
xchg
jbe
pushf
stos
mov
clc
dec
cli
out
jg
pop
sub
std
and
push
jne
adc
cmp
push
xchg
sbb
jg
add
mov
icebp
sub
fs
pushf
sub
insb
mov
jae
adc
mov
sbb
pop
iret
ffree
push
int3
sbb
mov
shlb
aam
and
mov
push
mov
je
popa
pop
xor
mov
in
popf
push
push
mov
clc
cmp
mov
arpl
shlb
add
add
ret
or
rorl
and
clc
sahf
xchg
cmpsl
cmp
dec
and
stos
fdivl
aaa
into
jns
ljmp
in
lds
cmpb
adc
dec
in
sub
bound
pop
add
pop
sub
rcl
icebp
jg
xor
add
push
pop
psrld
adc
ret
stos
lret
and
aam
roll
xchg
adc
lret
ret
iret
push
jne
lock
out
cwtl
movsl
in
sbb
hlt
clc
insb
xchg
pop
pop
out
or
add
sbb
outsb
pop
cmp
lcall
dec
stc
cmp
imul
mov
jns
mov
dec
jle
imul
scas
test
jnp
out
mov
jge
lret
stc
nop
insl
push
mov
adc
in
in
mov
and
or
pop
pop
ss
xchg
notl
mov
fnstsw
xchg
repz
lret
jne
dec
jg
push
pusha
adc
sub
sub
test
dec
or
inc
ret
cli
xchg
push
sub
outsb
or
adc
push
xchg
dec
das
dec
add
jne
inc
lret
leave
cs
xor
sub
out
pusha
mov
mov
call
sbb
cmp
test
cs
sbb
push
sti
addw
push
adc
and
or
in
sub
jb
stos
imul
dec
adc
xor
scas
fists
bound
push
cmp
adc
add
adc
jge
orb
outsl
lret
loope
dec
push
dec
movsl
aaa
push
jno
xchg
scas
arpl
dec
jns
mov
sub
and
fs
out
sub
aad
inc
inc
mov
mov
sub
loopne
sub
adc
ljmp
add
cvttps2pi
incb
mov
fstpt
pushf
jnp
push
xchg
inc
push
movsb
mov
jbe
sub
sub
iret
mov
pop
push
cmpb
sbb
imul
popa
pop
jg
scas
adcb
mov
xchg
inc
or
fisttps
lock
iret
mov
jne
mov
jl
lret
cmp
mov
lea
jl
sbb
fcomp
xor
dec
int3
xchg
sub
or
cmp
arpl
xorb
je
stos
ficoml
xchg
dec
je
pop
lret
int3
jb
cmp
sti
test
dec
mov
stc
mov
cmp
out
sbb
or
push
je
hlt
push
inc
stos
jge
dec
not
dec
mov
mov
out
ds
sub
test
fwait
jmp
and
push
fildl
outsl
js
pushf
sbb
bound
jp
push
cmpsl
scas
xor
int3
jae
mov
adc
lahf
shl
dec
mov
push
fnstcw
push
dec
and
inc
cmp
add
inc
js
xchg
out
mov
movl
and
push
push
arpl
adc
and
and
mov
or
in
or
inc
sub
jl
stc
or
ljmp
stos
cmp
fsubrl
cmpl
lcall
outsl
insb
xchg
ja
scas
dec
xchg
cmpsl
add
mov
mov
fnstenv
add
inc
push
inc
and
xorl
jle
mov
imul
movsb
rcll
mov
roll
fwait
mov
dec
stos
lea
dec
dec
xlat
and
sbb
adc
xlat
dec
or
inc
outsb
mov
mov
lahf
adcb
rorl
mov
push
adc
push
or
adc
xchg
push
sub
dec
ds
inc
xchg
test
arpl
xchg
inc
int
push
rcrl
insl
sti
js
rcrb
call
cmpsl
lahf
push
icebp
or
jbe
test
lret
xchg
push
pop
mov
mov
mov
xor
ror
adc
repnz
or
xor
ds
cmp
sti
dec
subl
push
stc
clc
fistpl
leave
and
out
fisubrl
and
xor
test
add
int
jge
cmp
pop
test
sahf
ss
xor
mov
xor
test
aaa
stos
arpl
test
push
int
sarl
jbe
test
pop
xor
pop
xchg
xchg
je
cmp
xlat
sub
jle
jae
jae
neg
data16
mov
and
inc
cmp
xchg
mov
sbb
out
into
lea
rcll
add
int3
fwait
pop
push
sbb
fs
xchg
call
gs
imul
sbb
data16
test
lds
jbe
outsl
clc
jl
inc
rcrb
mov
aaa
loope
adc
inc
into
dec
lods
add
andl
adc
jl
jae
sbb
inc
adc
mov
enter
fnstcw
jae
push
jnp
xor
sub
out
sub
mov
pop
mov
mov
clc
cmpsl
loope
adc
daa
popf
imul
fs
pusha
sbb
cli
dec
sub
ds
push
xchg
outsl
mov
mov
scas
enter
mov
out
into
outsb
dec
dec
cltd
stos
std
inc
push
xchg
xlat
inc
je
jne
or
pushf
jo
mov
jo
ret
lods
cmp
push
insl
fists
jg
sub
rolb
jb
fstps
xor
adc
dec
sbb
push
fs
movsb
int3
adc
js
lods
data16
nop
jle
fs
clc
mov
add
push
lock
mov
cmc
jge
inc
sti
icebp
pop
mov
mov
mov
ja
mov
mov
ss
je
mov
inc
push
jnp
adc
cltd
or
xchg
movsl
lcallw
mov
inc
out
lcall
dec
cmp
out
stos
dec
in
in
inc
mov
sbb
inc
mov
inc
inc
mov
xchg
mov
movsb
mov
sub
js
in
mov
fsincos
xchg
add
add
mov
fstp
jle
clc
add
ficoms
ds
subl
sub
dec
aad
aas
inc
icebp
fisttpll
cld
jmp
std
sub
sti
fisttpll
mov
xchg
mov
and
or
sbb
xchg
push
test
aas
xor
mov
pop
fdiv
xchg
outsb
cmpsb
xor
cmpsl
movsl
popf
mov
cmp
sbb
std
jo
out
div
out
insb
cltd
fdiv
pop
adc
inc
test
popa
pop
sti
outsl
jl
mov
fs
or
ss
mov
stc
push
pushf
jnp
mov
insb
and
fwait
jae
jl
popf
jmp
ss
jmp
sbb
mov
clc
jl
xchg
test
test
xor
cmp
jo
imul
inc
jo
enter
push
or
pop
push
inc
sub
subb
lret
mov
cmp
jle
or
loop
or
cwtl
in
in
and
add
lock
adc
gs
xchg
andl
cmp
clc
repnz
add
scas
sub
xchg
mov
cld
cmp
cmp
mov
loop
ror
cs
jle
fmuls
pushf
and
or
les
shl
pop
int
and
fisttpll
pop
mov
mov
pop
and
xchg
je
mov
ffree
sbb
rorl
or
xchg
cmc
xlat
jne
mov
jo
fs
mov
test
mov
jg
addr16
test
bound
stos
and
ss
cmp
ret
in
sbb
jecxz
test
xchg
pop
and
fwait
pop
or
add
lods
add
shlb
movsl
ret
mov
xchg
and
inc
rcll
mov
sub
lcall
and
jno
ret
daa
push
int3
add
pop
sarb
repz
jp
filds
popf
pop
sarb
aas
xchg
pop
cmp
cmp
or
test
and
addr16
sbb
out
insl
mov
jmp
mov
mov
fistps
inc
sahf
rcl
sub
mov
leave
mov
cmp
dec
cmpb
cmp
int
mov
inc
rorl
out
dec
clc
aam
jnp
fstps
mov
sub
jne
popl
jb
cmpsb
cmpsl
shl
xchg
leave
push
ret
popa
push
lods
arpl
jnp
cmp
into
and
sbb
enter
imull
xchg
lcall
cltd
mov
mov
adc
adc
idivb
mov
je
rcr
xchg
mov
add
mov
into
test
adc
into
out
jecxz
push
mov
push
or
arpl
in
mov
popa
ret
dec
or
ss
jb
repnz
sub
outsb
push
sbb
push
add
mov
iret
mov
scas
imul
jl
insb
icebp
les
movsb
aad
xchg
mull
dec
or
loope
cld
nop
inc
pop
cs
mov
inc
fidivl
pop
dec
inc
lahf
les
aam
test
fs
inc
mov
popa
mov
adcb
dec
sbb
mov
xchg
mov
dec
or
pop
mov
movq
fisubl
and
lret
aad
adc
sbb
mov
ret
cmp
arpl
fildll
arpl
negb
std
jne
rcrl
aaa
shlb
lea
add
in
mov
adc
inc
faddl
sahf
sbbl
loop
out
or
rol
rolb
outsl
xchg
test
sbb
xchg
stc
mov
and
jae
jne
insb
imul
mov
cmp
test
fiaddl
add
cs
sbb
inc
cmp
adc
movsb
jl
add
sti
ljmp
mov
mov
and
leave
sbb
cmovl
pop
and
insb
jno
cmp
add
lea
ja
push
orb
frstor
xor
xchg
push
clc
pop
aad
in
sbb
clc
outsb
mov
popa
push
cmpsl
mov
lret
sub
jg
jo
adc
orb
inc
xchg
dec
ja
jp
mov
mul
es
into
mov
mov
dec
popl
adc
lds
repnz
cmp
xor
mov
iret
icebp
lret
xchg
aam
js
data16
mov
test
or
and
movsl
xchg
mov
mov
jge
mov
testl
pop
lcall
arpl
mov
mov
movsb
adc
mov
enter
push
stos
and
jo
ds
icebp
inc
lret
in
lahf
sub
mov
dec
cld
xchg
icebp
out
xchg
dec
sub
sub
jmp
mov
push
fisubl
xchg
jle
cmpb
inc
aas
mull
xchg
mov
in
push
pop
fcom
jb
pop
fisttpll
adc
mov
loop,pt
adc
cmp
aaa
pushf
push
in
lret
mov
arpl
pop
loop
cmpb
ret
or
and
mov
xchg
loop
and
stos
pusha
inc
xor
int
xlat
in
pop
popa
cmp
push
push
jmp
ja
out
gs
add
pop
out
mov
xchg
lret
dec
sub
push
cmp
xor
inc
ret
and
dec
sub
hlt
jae
gs
push
cmpsb
js
ret
aas
adcl
outsb
lret
out
mov
into
and
jbe
lret
ljmp
lds
rorl
lds
mov
negl
out
push
jle
clc
xor
pushf
push
mov
enter
mov
vcvtpd2psx
lods
sbb
scas
les
ds
add
je
and
popf
ljmp
xchg
fisttps
das
jns
mov
and
out
mov
es
jg
mov
mov
ffree
iret
adc
or
cli
and
pop
icebp
jge
mov
xchg
hlt
pop
cmp
push
in
mov
mov
in
mov
ja
lods
negb
subl
jb
mov
sarl
push
xchg
mov
add
sub
xor
cmp
mov
inc
shll
fwait
ss
adc
xchg
jno
mov
icebp
aad
or
fnstsw
jl
call
ficoms
enter
shl
push
add
scas
test
imul
shrl
mov
mov
push
adc
ljmp
loope
int3
and
mov
mov
pop
test
lds
inc
hlt
add
aad
insb
lcall
inc
frstor
mov
add
in
repnz
popf
pop
mov
test
xorl
add
or
lret
lods
insb
cmp
cmp
es
cmp
mov
jbe
dec
jle
mov
adc
lds
insl
cmp
xchg
out
xchg
cmp
in
xor
insb
pop
lret
mov
es
sbb
inc
pop
aam
in
mov
sub
xchg
out
enter
sahf
jg
mov
sub
aaa
lock
dec
xor
sub
out
and
int3
sbb
xor
add
test
dec
out
fistps
xchg
rorb
lcall
lret
mov
hlt
adc
ds
adc
push
aas
fucomip
lcall
sbb
inc
dec
dec
push
xchg
pop
mov
imul
dec
xlat
mov
cltd
shrb
mov
cmp
andl
xor
mov
daa
add
js
xchg
call
sbb
ljmp
sub
pop
xor
push
stos
sbb
pop
je
out
sub
and
cmpb
icebp
loope
push
test
aaa
imul
xchg
pop
pop
fstpl
out
addb
fmul
js
mov
adc
cmp
rorb
inc
js
pop
mov
fdivrs
fmull
add
mov
shrl
pop
sbb
imul
hlt
mov
sbb
adc
fwait
lret
xchg
push
or
xor
ss
xor
gs
fildl
pop
pop
jno
mov
mov
xor
and
jo
insl
mov
push
test
add
add
les
jbe
ret
pusha
inc
lcall
mov
test
cmp
or
cmp
add
and
mov
add
jmp
je
movsb
shrb
clc
push
std
call
and
sub
mov
ja
jg
cmp
stos
jecxz
adc
jne
sbb
inc
sar
into
xor
sbb
push
xchg
pxor
push
mov
pop
sub
test
mov
es
or
push
in
cs
iret
add
cmp
cmp
mov
adc
iret
fmulp
xchg
scas
stos
cmpsb
fcom
inc
mov
adcl
or
mov
ds
xor
push
pop
sub
mov
jg
ret
out
adc
xor
aad
sbb
sbb
push
mov
sar
aaa
cmp
mov
ds
loope
sbb
xor
std
aas
out
out
in
mov
call
out
push
push
add
inc
aas
mov
jae,pn
outsb
fs
insb
mov
rorl
lea
xchg
fistps
inc
sub
jg
sbb
in
xchg
pop
leave
lods
push
enter
in
lret
in
fiadds
inc
add
insb
adc
mov
push
inc
clc
mov
adc
or
test
fwait
lds
daa
push
lods
insb
movsl
popf
cwtl
dec
mov
xchg
push
inc
outsl
outsb
idiv
xor
jne
xor
mov
mov
sub
outsl
inc
aas
cs
clc
sbb
push
imul
int
sub
orl
stos
mov
stc
out
or
test
mov
call
test
in
sbb
xchg
sti
jo
jl
mov
loope
ret
fisubs
lret
ret
sbb
pop
jae
lods
inc
test
and
mov
loope
inc
das
ss
sbb
cmpsl
add
test
mov
xchg
adc
fs
push
jne
std
lret
fcos
mov
or
adc
dec
mov
js
stos
push
mov
in
fs
ds
xor
adc
pop
jno
inc
enter
insl
adc
cmpsl
mov
push
imul
inc
lcall
popa
out
jle
xor
ja
pop
push
jo
rcrb
adc
cltd
fisubrs
pop
daa
outsl
popf
call
xor
shrl
jbe
insb
je
or
pop
adc
mov
add
add
icebp
cmp
mov
iret
mulb
mov
xchg
imul
subb
jg
cld
lahf
sub
addr16
fidivs
fisubrl
repz
mov
lds
in
jne
xor
loope
lret
fbld
or
push
add
call
dec
icebp
cmc
dec
pop
cmp
data16
negl
dec
popa
aas
das
push
sbb
xor
stc
gs
out
adc
cld
std
das
scas
repz
xchg
lods
mov
leave
sub
repnz
sar
fwait
nop
jecxz
notb
xchg
cs
clc
in
xchg
xor
sub
xchg
mov
sbb
outsl
sarb
out
sub
pop
mov
or
rorl
cmp
pop
pop
movsb
dec
or
sub
loopne
rcrb
popf
sbb
ss
jp
cmpsl
test
mov
out
cwtl
outsb
dec
inc
decl
popf
je
dec
or
add
sbb
xchg
cmp
xchg
push
dec
jb
mov
fbld
xchg
mov
out
mov
or
dec
xchg
out
aaa
enter
jg
lods
inc
jl
sbb
sbb
js
lods
les
or
push
push
mov
jbe
add
sbb
es
out
push
adc
rcrw
or
add
fnstenv
dec
call
outsl
insl
mov
sub
adc
jno
aam
jg
add
pop
pop
pop
cmp
mov
sbb
jae
aad
dec
pushf
int3
mov
and
lock
sbb
pop
cld
leave
xlat
scas
inc
iret
mov
dec
pop
pop
jg
lret
fs
ficomps
jnp
mov
das
insl
jb
dec
mov
adc
add
stos
jbe
sahf
sub
out
and
jnp
jge
or
insl
aaa
and
xorl
mov
jl
jle
sbb
push
lcall
dec
adc
sbb
cwtl
notb
loopne
data16
xchg
lds
add
pushl
paddd
addr16
xchg
insb
xor
movsb
xchg
jp
inc
mulb
jno
mov
sbb
jae
lea
je
push
xchg
sahf
sti
notb
adc
mov
je
dec
mov
mov
and
or
xor
xor
pusha
mov
jg
sbb
lds
push
dec
mov
loopne
jne
aam
sbb
and
ret
arpl
mov
stos
jns
scas
sti
enter
pop
ret
into
add
mov
jnp
es
cli
call
inc
mov
xor
loopne
inc
imul
dec
imul
in
es
and
lds
lods
push
aas
sbbb
xchg
xchg
gs
roll
fbld
loop
in
push
mov
outsb
push
test
mov
inc
cwtl
add
pusha
inc
lret
and
popa
popa
mov
jge
fdivr
and
jg
xchg
loop
jmp
add
mov
and
push
mov
mov
out
jns
lock
xchg
lock
outsb
std
out
xchg
mov
cltd
xor
adc
outsb
adc
jo
xchg
lds
push
mov
mov
movsb
adc
xorb
call
outsb
jle
outsl
int
push
add
adc
into
push
bnd
dec
imul
pop
leave
sti
movsb
fsubrp
jmp
mov
in
adc
fwait
jnp
pop
mov
push
sbb
fdivs
adc
stos
int3
and
test
inc
mov
movsb
cmp
jbe
call
push
es
filds
mov
andb
or
sbb
rolb
into
jmp
sbb
xchg
mov
fisttpl
push
inc
std
in
jecxz
inc
std
mov
inc
movsb
mov
repz
inc
cmpsl
int3
mov
loope
pop
mov
adc
hlt
cs
sub
pop
sahf
cmc
outsl
out
add
insl
mov
in
pop
push
jle
pop
mov
add
jg
dec
xchg
mov
bound
imul
xchg
mov
scas
and
sbb
shrb
mull
rcll
fidivrl
mov
jne
push
out
outsb
out
mov
fst
push
lock
dec
xchg
xlat
fwait
into
pushf
mov
inc
cmp
lcall
jmp
dec
imul
cmc
out
out
repnz
xor
ss
pop
aaa
nop
add
fidivs
and
data16
testl
sahf
mov
add
lods
int
jl
sti
addl
imul
lret
sub
shll
mov
addb
or
jg
and
lahf
and
nop
mov
imul
lock
or
dec
mov
mov
push
add
in
cmp
rcrb
negl
dec
repnz
mov
cmp
cmpsl
gs
call
sbb
pop
push
dec
dec
jecxz
adc
cli
test
pop
xchg
fcompl
dec
shrb
cmp
push
popa
dec
ss
sbb
jo
and
jns
jb
sbb
inc
push
pushf
ljmp
bnd
mov
xchg
cmp
mov
push
push
adc
adcl
cmp
sbb
out
pop
mov
xchg
cli
bound
aam
outsb
dec
adc
jp
hlt
popf
push
push
jnp
sbb
push
out
add
icebp
movups
cmp
sub
xchg
je
stos
mov
dec
push
inc
aad
xchg
dec
mov
cmpsl
stc
imul
push
popa
notl
push
lret
mov
fldl
in
or
out
mov
test
call
mov
jne
cmp
pop
shrb
adc
rorl
insb
jle
shll
mov
xchg
lods
xchg
sub
fisubrl
cmp
fstp
shll
xchg
fisubl
cmpl
pop
int
inc
ficompl
or
imul
pop
and
inc
adc
mov
mov
es
jae
cmpsl
out
in
lds
shl
cmpsb
mov
pop
mov
push
adc
xchg
jae
xor
ljmp
mov
sub
cmpxchg
add
movsb
push
jo
xor
sbb
xchg
push
sub
loop
js
xchg
inc
orl
push
out
mov
lods
jp
xchg
shll
jge
pop
pop
xchg
push
xchg
cmp
lods
insl
inc
adcb
scas
sbb
ret
dec
jno
scas
adc
xlat
pop
ljmp
addr16
icebp
xchg
gs
test
adc
std
push
mov
xor
movsl
xchg
leave
lret
test
iret
push
push
mov
jge
aas
shll
popf
std
push
lret
andb
subl
jnp
arpl
add
jnp
in
shrb
jl
sub
cmp
jo
mov
stos
push
imul
testb
mov
dec
xchg
lea
xchg
add
lods
pop
rcrl
push
lcall
sbb
rcr
xchg
fsubr
push
xchg
mov
xchg
ficoms
mov
pushf
xchg
jno
sbb
lahf
popa
enter
or
pusha
mov
test
mov
sub
mov
lcall
clc
call
stc
in
inc
add
insb
push
mov
push
cmc
cmc
fmul
mov
sti
roll
filds
mov
mov
mov
adc
fidivs
sbb
or
push
push
test
shlb
mov
mov
mov
fs
ret
fs
fsts
or
adc
pop
pop
mov
add
pop
pushl
cmpsb
push
sahf
add
stos
daa
stos
sub
decb
sbb
inc
cwtl
insb
daa
cmpsl
cwtl
mov
pushf
push
inc
push
cld
insb
rol
in
cmp
dec
mov
cwtl
aaa
sahf
in
ljmp
push
mov
mov
movsb
hlt
or
add
cmpsl
jle
cmp
jmp
sti
test
mov
aad
popa
negl
sarl
mov
add
imul
push
cmpsb
inc
lods
fidivrl
test
popa
and
xor
or
push
adc
mov
add
xchg
jb
es
in
push
pop
out
sub
sbb
xchg
andl
and
mov
jl
mov
rorl
jns
pop
in
push
push
test
jae
test
xchg
test
cwtl
mov
clc
fucompp
cmp
pop
mov
sub
or
fcomip
sbb
sbb
btc
lcall
xchg
add
sub
ljmp
cli
sbb
neg
pop
push
pop
xor
jp
xchg
lock
push
js
out
fwait
pop
lret
pushf
rclb
and
cmp
movsl
lret
jmp
push
jno
cmc
fcomps
outsl
and
sub
loopne
decl
ljmp
mov
es
xchg
adc
loopne
cmp
movsl
dec
mov
test
outsb
mov
mov
sahf
adc
ja
cmp
pop
cmc
outsl
test
jg
add
add
jle
xor
fimuls
int3
cli
sbb
mov
aas
inc
xchg
push
out
dec
rolb
pusha
pop
pop
inc
std
in
bound
cwtl
das
jns
data16
and
push
out
xor
sub
mov
cmpsb
imul
dec
shlb
insb
mov
lcall
jnp
sarb
sbb
aaa
xor
add
addr16
out
fwait
cmovg
loopne
push
movsb
sub
addb
adc
cmp
mov
dec
fisubrl
cmp
cs
mov
cmp
ror
into
mov
icebp
jno
in
or
adc
xchg
mov
cmp
pusha
dec
xor
lds
mov
mov
cmpsl
subl
add
shll
dec
xor
test
cltd
add
jmp
shl
gs
lods
enter
into
lret
pop
mov
mov
gs
cltd
mov
and
outsl
or
mov
and
shrb
inc
inc
dec
sub
movsb
pop
adc
mov
je
ret
pop
cmpsl
lahf
lock
in
sbb
pop
xor
mov
xchg
inc
push
sbb
fisttps
iret
loope
adc
push
insl
repnz
adc
sahf
fld
in
pop
das
add
je
ljmp
jne
in
loope
sub
jle
and
xchg
pop
les
into
imul
xchg
or
jo
push
adc
cli
les
cmp
inc
or
fwait
in
daa
roll
leave
sub
subb
and
daa
hlt
ret
dec
cs
in
mov
pop
cmp
mov
push
mull
sub
sbb
in
lea
scas
test
push
loop
into
cmp
enter
leave
inc
jae
aam
into
insl
xor
mov
stc
mov
cs
out
push
loopne
mov
xchg
jmp
pop
cmp
lret
and
mov
aad
idiv
int3
mov
dec
push
enter
pop
sahf
shll
jge
leave
insl
test
and
xchg
mov
and
dec
pop
push
jl
or
aam
sub
frstor
xchg
push
clc
mov
divl
sub
call
ss
adc
scas
mov
xchg
fs
insl
insb
rorl
sti
mov
popa
push
push
mov
inc
jne
lret
cmpb
jno
mov
cmpsb
lock
repnz
pop
hlt
push
insb
xor
pop
xchg
sbb
adc
xor
mov
xchg
in
fdivs
cmpsl
mov
add
daa
mov
push
xor
aam
add
ljmp
add
jns
je
movsb
inc
sti
scas
mov
ret
sub
push
jnp
outsl
mov
cmpsl
push
fucomp
cmp
mov
leave
and
mov
scas
push
inc
pop
cmp
sbb
xor
xor
rorb
insb
popl
and
fisttpl
mov
inc
adc
sub
inc
and
and
imul
jle
sub
jo
cmpsl
mull
lds
jle
cmpsl
inc
cltd
adc
inc
in
push
addr16
pusha
cmp
rorb
cmpsl
loope
inc
push
push
push
inc
test
test
sbb
iret
mov
mov
out
mov
dec
mov
sub
mov
jecxz
push
es
je
inc
add
jge
fistps
std
cld
movsl
invd
adc
cli
in
lods
lds
push
mov
add
jge
imul
inc
repz
add
mov
mov
mov
and
fstp
int
and
ljmp
xchg
hlt
jle
pop
loop
mul
or
cmpsl
mov
sub
mov
jle
clc
hlt
adc
mov
and
movsl
cmp
fists
xor
or
insb
pop
std
xor
std
sbb
bound
cld
or
mov
ficompl
sarb
movsb
subb
xchg
mov
movsl
sub
les
jp
or
movsb
lods
sbb
cld
cld
enter
push
ffreep
or
dec
sub
mov
add
jns
test
lods
push
xor
popf
dec
and
ret
push
xchg
leave
inc
sub
es
xchg
jmp
xchg
xchg
sbb
int3
ror
scas
imul
mov
add
fsubrs
outsl
ss
dec
sbb
fistpl
lcall
dec
icebp
mov
mov
sbb
add
dec
sbbb
push
push
loopne
mov
cmp
not
rorl
cmp
loopne
pop
pusha
add
lods
mov
int3
sub
push
adcb
cmp
or
int3
les
in
cld
popf
or
ficompl
push
mov
mov
cmp
cmp
mov
loop
scas
sti
arpl
sub
jae
cmc
in
mov
xchg
std
ret
add
xchg
xchg
jecxz
mov
sbb
cmp
add
in
aaa
and
rorl
pushf
out
adc
sbb
mov
das
inc
test
notl
mov
or
mov
mov
inc
jle
add
faddl
dec
pop
clc
mov
xchg
lods
add
es
jg
pop
jae
nop
sbb
outsb
dec
mov
and
jge
dec
cmp
pop
mov
sub
mov
dec
or
jbe
adcb
dec
sub
mov
insb
xchg
push
push
xor
cmp
adc
jle
push
fsubrl
test
ficoml
push
repz
sub
ds
shrb
js
lahf
aaa
leave
rolb
mov
std
stos
ss
movsl
xchg
xor
add
fwait
or
fwait
inc
xor
leave
stc
loopne
dec
std
cwtl
test
sti
int3
test
and
lahf
sarl
enter
mov
lret
xchg
loope
ret
cmp
jmp
jo
or
dec
pop
xchg
mov
rcl
ja
outsl
repnz
loope
adc
cmp
shll
scas
ror
inc
dec
jl
sub
pop
adc
out
and
mov
div
scas
sub
pop
and
test
lcall
mov
adc
mov
xor
je
push
sbb
adc
pop
cmp
adc
sbb
pop
sub
push
push
push
inc
sti
sub
iret
leave
shr
sub
xlat
or
lahf
fidivrl
mov
inc
fdivrl
sar
and
mov
cmp
clc
add
sub
sub
mov
pop
sbb
cmp
mov
push
cmp
in
jecxz
in
xor
push
in
fstpl
bound
cmp
cs
adc
sbb
lahf
dec
fcmovbe
xor
popa
mov
lea
mov
inc
test
leave
icebp
rcrb
sub
jo
lret
push
stos
mov
les
bound
jp
dec
pop
cli
jne
dec
scas
mov
sbb
push
es
push
xor
outsl
jno
fstpl
push
mov
mov
fcmovnu
and
add
push
or
xor
pop
cmp
es
in
imul
and
cmp
jne
hlt
mov
imul
mov
push
pop
pop
push
inc
ss
je
pop
leave
insb
jne
sbb
fisubl
push
lahf
jl
or
testl
cs
stos
in
divl
mov
dec
sub
cli
sbb
clc
dec
mov
movsl
call
fidivrs
or
cmp
mov
pop
jmp
pop
mov
shl
scas
adc
test
xchg
jge
jecxz
dec
sbb
icebp
jb
dec
pop
out
xor
pop
or
insl
popf
scas
lds
int3
cltd
jg
push
ret
mov
lock
push
repnz
sbb
pop
or
ljmp
in
cmpsb
sub
push
lret
into
cmp
int3
jo
mov
mov
cmp
xchg
pop
add
cmp
fistpl
xor
bound
insl
push
dec
jno
push
jmp
lea
orl
mov
mov
cmp
lods
push
or
es
push
sbb
and
nop
xor
or
loopne
pop
inc
dec
pop
int
test
out
in
fcoml
sub
subb
and
cmp
aad
je
cwtl
dec
jle
jl
pop
and
push
out
lods
in
mov
lock
loope
ljmp
mov
stos
das
pop
movsl
icebp
std
in
sub
jecxz
xorb
dec
jae
jno
dec
jmp
sub
cltd
negb
popa
and
cli
jg
fisttps
mov
testb
xor
push
ja
cmp
sahf
or
add
and
pop
inc
xlat
push
rcrl
mov
cli
test
dec
mov
mov
or
jl
jae
cmp
cmpsl
js
mov
jp
and
jp
inc
insl
mov
int
rol
fwait
ret
pop
xchg
lock
mov
test
addr16
mov
in
xchg
mov
pop
inc
stc
es
lret
sti
es
or
push
inc
popf
or
jno
push
dec
sub
ficompl
cmpsl
or
in
dec
sbb
lcall
pop
loopne
ficompl
inc
lahf
gs
daa
mov
and
mov
mov
jnp
stos
sbb
mov
jmp
fcoml
outsb
mov
adc
in
jae
cmp
imul
pop
scas
fisubs
jle
aam
ss
rorb
lods
mov
fldl
jl
insl
xor
jae
and
cmpsl
jmp
inc
push
outsl
fs
push
dec
jae
inc
mov
inc
aaa
cli
cld
mov
loope
idiv
lahf
aam
mov
jp
xchg
cltd
cmp
lds
jge
lret
and
inc
fldl
inc
cmp
sub
push
xorl
mov
dec
mov
inc
pop
pop
cmp
pop
mov
cmp
sbb
in
xor
cmpsl
clc
sarl
fcoml
lea
aaa
fdivl
dec
pushf
sub
fstp
jle
push
lds
bound
movsl
xor
jecxz
jno
adc
test
sub
mov
mov
or
fidivrl
xchg
je
add
xchg
cs
cld
adc
and
dec
xchg
popf
fs
push
pop
add
insb
inc
ja
cmp
jmp
mov
sub
xchg
pusha
leave
jns
mov
jecxz
jecxz
add
and
popf
jmp
xor
scas
inc
inc
jmp
dec
mov
pop
cmp
repz
xor
stos
push
push
push
sbb
ljmp
sbb
iret
movsb
and
xor
xchg
push
jnp
fisttps
ficomps
cmpsl
test
dec
inc
sti
ret
shrb
cs
pop
fists
dec
popa
pop
push
mov
inc
adc
mov
inc
mov
and
or
es
cmp
aas
push
xor
push
repz
jmp
aas
push
pop
in
ds
mov
test
loope
mov
inc
mov
or
cwtl
adcl
xchg
jno
fnstenv
inc
pop
fs
push
xchg
dec
xor
or
lock
shlb
loop
push
sbb
add
mov
mov
scas
mov
ret
mov
les
dec
xor
bnd
mov
insb
fisubrl
xchg
dec
jmp
sbb
lret
in
xor
sarl
sti
imul
fs
ficompl
dec
scas
jbe
popl
daa
push
negb
cld
sbb
dec
lock
stc
sbb
cmpsl
mov
andb
sub
mov
lea
bound
dec
leave
and
insl
xchg
les
loope
insl
inc
cmp
xchg
push
and
lret
scas
mov
dec
test
out
lret
jb
les
inc
cmpsb
pop
pop
hlt
iret
pop
leave
jmp
mov
pusha
inc
inc
repz
fiaddl
and
and
xchg
cmp
add
filds
inc
ret
mov
je
mov
push
js
or
outsl
push
pop
xor
xchg
add
mov
push
repnz
les
std
mov
scas
pop
out
lods
mov
push
jno
inc
jae
movntq
mov
dec
test
jns
fcmovnbe
orl
mov
aaa
mov
xor
pop
mov
jno
ja
mov
fidivrs
mov
cli
shlb
mov
xchg
in
xchg
jne
jecxz
inc
cmp
jbe
xchg
mov
or
jbe
imul
or
inc
sub
cmp
mov
int3
ja
xchg
inc
aaa
sub
in
lahf
clc
and
insb
fcmovnb
call
std
pop
pop
cmc
cmp
into
ljmp
mov
mov
push
std
fwait
popa
mov
pop
insb
xor
into
scas
and
jns
inc
dec
loopne
adc
lcall
into
xchg
insb
imul
fisubl
shlb
dec
andl
rclb
xchg
cmp
arpl
fs
add
sub
pop
fs
roll
sbb
and
mov
cmpsl
xor
sub
outsb
dec
dec
in
mov
mov
es
fcmovbe
inc
pop
add
mov
push
fimull
mov
insl
ret
mov
adc
jl
stos
scas
sub
and
es
mov
dec
and
or
frstor
dec
mov
ret
pop
stos
push
cmp
mov
addr16
mov
adc
add
mov
icebp
push
jge
dec
fcoml
ds
data16
pop
imulb
and
imul
mov
clc
mov
push
mov
cmpsb
push
add
out
push
insb
test
movsl
pop
xchg
jb
pop
xor
je
add
aas
arpl
sbb
xchg
jno
mov
lret
xchg
and
lret
cwtl
ss
pop
les
mov
add
mov
in
mov
sub
or
bound
popa
adc
xchg
push
mov
cmpsl
push
addr16
jmp
loopne
jo
vshufpd
frstor
dec
dec
and
pop
mov
lock
es
xchg
rolb
fcoms
dec
push
rcr
mov
mov
sahf
imul
loope
sbb
mov
mov
aas
add
jno
adc
bound
ret
rol
or
sbb
lds
push
inc
scas
cmp
mov
push
lcall
gs
xchg
xchg
xor
std
ficompl
mov
pop
inc
in
fsubrl
out
pop
mov
insb
or
mov
xlat
xchg
push
add
stc
aas
jp
cs
mov
or
ljmp
in
repz
scas
leave
into
adc
adc
jns
push
fmull
cltd
leave
mov
out
mov
aaa
or
scas
ss
sbb
and
push
sub
cwtl
mov
popf
out
jnp
out
mov
fcmove
inc
pop
cmpsb
mov
into
jecxz
cwtl
sbb
adc
inc
jne
test
fs
loop
repz
lahf
inc
mov
cs
popa
scas
in
sub
sti
sub
fisttpl
aaa
imul
mov
in
and
test
mov
int
js
lea
or
xchg
hlt
mov
cltd
adc
or
push
aaa
stc
fs
push
outsb
lret
hlt
je
mov
adcl
sub
aam
sub
cmp
mov
arpl
test
ljmp
cltd
mov
rclb
mov
push
in
xchg
mov
mov
jns
aad
mov
dec
mov
fiaddl
pop
in
inc
adc
clc
cmp
lds
insb
pop
add
push
inc
aam
mov
xor
mov
nop
jb
repz
pop
arpl
daa
aaa
jge
inc
xor
mov
test
inc
xor
aad
cmpsl
frstor
xor
mov
shlb
pop
mov
inc
add
aaa
jecxz
inc
les
push
cmpb
xchg
cmp
loopne
jo
fs
inc
stos
mov
aaa
ret
leave
inc
xor
pushf
fdivrl
cmpsl
and
mov
dec
push
insb
xor
jmp
jnp
xlat
lea
mov
shll
push
pop
fbstp
jae
xlat
cmp
cs
fs
mov
subl
add
movsl
fucomip
lea
out
inc
sbbl
jne
pushf
mov
jmp
sbb
clc
je
mov
xchg
mov
int3
or
push
loope
sbb
push
cmp
jle
cmp
dec
cld
lahf
mov
movsb
rclb
mov
cmp
call
push
scas
cmp
jmp
punpcklwd
push
mov
shrb
adc
cmp
ljmp
push
or
mov
and
xor
sbb
cli
adc
xor
pop
jnp
xchg
mov
pop
scas
push
or
popf
mov
lock
pop
aaa
mov
add
add
sub
data16
mov
int
dec
pop
fisubl
rcrb
cld
mov
gs
nop
sbb
aad
out
fidivrl
pop
mov
sub
leave
xor
push
jmp
lea
mov
int
loop
stos
jle
or
pop
jle
inc
inc
sub
push
fisubs
add
adc
cmp
push
push
popf
cmp
pop
dec
test
mov
adc
shll
loop
xchg
rcrl
xor
sti
es
mov
or
xchg
int
repnz
jg
mov
mov
push
xorl
or
xor
mov
int3
push
sti
jae
xchg
repnz
inc
push
loope
sbb
ret
jns
pop
enter
cmpsb
cmc
repnz
lods
ret
jmp
push
xchg
pop
jle
xchg
fistpll
lret
ljmpw
inc
push
aaa
cmp
jo
pop
test
stos
mov
jg
rorb
lcall
jbe
fisttpll
fadd
test
xor
add
jmp
push
add
out
push
and
jo
adc
loopne
fwait
add
pop
aam
mov
stos
fsubs
ljmp
jg
rolb
fdiv
addr16
test
adc
xchg
push
iret
and
dec
pop
pushf
sub
inc
sbb
adc
mov
adcb
rolb
xchg
add
call
jmp
pop
mov
icebp
insb
jae
jb
hlt
cmp
notl
xor
pop
idivl
loopne
adc
cmp
xor
push
inc
jo
popa
loop
inc
mov
cmpsl
mov
addr16
out
push
hlt
mov
pop
stc
sbb
es
sbb
dec
xchg
jo
sbb
dec
leave
adc
and
lods
sbb
ljmp
incb
in
fildl
jl
pop
out
pop
push
clc
push
shrl
fidivs
push
add
lds
inc
call
sbb
call
fnstsw
push
xor
call
inc
clc
lcall
test
scas
js
dec
psrlq
jecxz
jns
into
dec
dec
sbb
sub
jmp
pop
cmpsl
xchg
sub
lock
shlb
jne
ljmp
xor
pop
aad
jmp
and
push
mov
je
icebp
xchg
cli
std
fcoms
dec
in
pop
xor
mov
sub
sbb
cmp
movsl
push
push
dec
xor
out
std
mov
mov
in
xor
cltd
mov
outsb
jb
gs
jno
popf
mov
sub
stc
cmp
fcmove
test
dec
enter
out
loop
or
loopne
bound
and
in
xchg
test
les
outsl
nop
xor
pusha
fs
hlt
dec
and
fidivs
cmp
and
enter
push
clc
xchg
fidivrs
jge
cmpb
jbe
shrb
dec
cmp
xlat
cmp
pop
add
xchg
in
sbb
scas
xchg
das
pushf
sbb
mov
adc
fcmovnbe
imul
add
enter
enter
cmpsl
xchg
aad
mov
inc
sub
addb
or
xchg
cltd
insl
arpl
pop
inc
pop
and
int3
adc
sub
xchg
and
cmp
stos
xchg
sahf
jo
pushf
rorl
and
mov
out
popf
out
or
movsl
popf
insl
and
xchg
test
mov
das
movsl
mov
mov
call
dec
fistps
or
xchg
clc
iret
sbbl
pop
ja
int
sub
and
out
push
and
sarl
scas
sub
scas
dec
cmp
lods
sbb
xlat
mov
cmp
and
and
pop
sbb
fidivl
pusha
jmp
das
and
ret
fisubl
scas
jmp
push
jns
pop
hlt
cs
xor
enter
mov
xlat
xor
jns
cmp
inc
ss
jl
pusha
mov
fcmovnb
jle
fists
jo
popf
stos
icebp
testl
or
hlt
repz
mov
mov
push
leave
mov
ret
sub
pop
ds
dec
fucomp
sahf
dec
daa
idivl
jbe
cmp
xchg
cmpl
add
repnz
daa
xchg
jmp
add
cmp
fisttps
jmp
cmp
loop
pop
sbb
jno
je
pop
movsb
lock
shlb
fsub
dec
or
popa
sbb
or
push
lcall
push
fcoml
sbb
dec
cmpsl
inc
and
xchg
clc
or
mov
jecxz
arpl
mov
fidivs
xchg
outsl
mov
nop
je
jbe
repnz
inc
stc
and
stos
int3
cmp
lret
sbb
inc
lds
mov
push
out
lret
cltd
pop
sbb
outsb
out
test
mov
mov
scas
sahf
cmc
jl
lret
insl
mov
daa
mov
push
inc
adc
sbb
push
push
test
add
imul
mov
add
xchg
add
dec
lret
fcoms
stc
mov
lods
scas
test
push
adc
call
mov
and
or
fldln2
xchg
mov
xchg
ret
add
mov
popa
jge
movsl
lcall
fisubs
js
fcompl
fs
je
sbb
out
push
in
stos
xchg
jnp
cmc
push
popl
xchg
or
mov
pop
out
push
sbb
aas
frstpm(287
orl
scas
sbb
or
pop
mov
ds
fwait
cmp
hlt
inc
jo
adcb
ret
push
sbb
inc
lds
fldl
js
test
mov
hlt
xor
incb
mov
jae
adc
fwait
mov
int
cmp
cmc
dec
in
addr16
add
aad
stos
call
fdivs
cld
mov
mov
xchg
pmulhuw
repnz
xor
scas
icebp
mov
jo
int3
in
pusha
ds
sub
daa
jo
andl
test
jge
dec
shr
or
scas
push
es
cmpsl
test
test
pop
daa
xchg
add
cmp
and
leave
or
jno
enter
enter
add
movsb
arpl
ret
mov
daa
sbb
insl
push
jb
sahf
pop
fcmovnu
movsl
rol
adc
filds
jae
and
xchg
hlt
stc
mov
out
push
or
stc
ljmp
sbb
mov
pop
repz
lods
aas
cli
and
mov
movsl
cmpsb
sub
fs
lods
sbb
jp
bound
mov
jp
push
mov
push
xchg
inc
add
cmpsb
shll
pop
push
jae
ja
mov
stc
in
lcall
stos
hlt
add
mov
stos
mov
in
int3
sbb
cs
and
sti
dec
push
lret
dec
add
pushf
jnp
leave
pop
hlt
push
mov
aad
push
pop
imul
mov
mov
data16
lret
cmp
mov
pop
mov
cmpsl
sbb
and
pop
mov
js
lods
jns
dec
insl
adc
lahf
aam
xchg
or
and
xchg
ret
sahf
insl
pop
repnz
leave
xorl
call
pop
mov
dec
mov
mov
mov
fidivl
mov
lds
inc
aad
cwtl
push
xor
cmp
stos
xor
test
leave
ret
cmp
loopne
sub
add
sub
aad
jmp
rcr
scas
out
xchg
ffreep
dec
cmpl
push
or
popa
xor
and
fwait
mov
xlat
lds
int3
pop
mov
jnp
push
movsb
cmp
inc
xchg
add
sbb
out
lock
push
iret
daa
clc
popa
push
fisubrs
mov
xchg
fsubs
jmp
cmp
jecxz
bound
repz
gs
or
jl
sub
sub
pop
push
jle
mov
or
addr16
out
in
cmp
aas
xchg
pop
mov
stos
ret
in
pop
mov
pop
mov
cmp
pop
xor
sub
pavgb
mov
push
sbb
add
int3
out
or
sbb
aad
cltd
insl
rol
pop
lock
ds
jno
stos
fdiv
and
and
outsl
pop
shl
fwait
inc
test
adc
outsl
aas
jo
sti
push
nop
add
mov
sbb
mov
lret
or
sbb
lods
dec
int3
pop
mov
inc
leave
fstl
push
das
xor
push
push
mov
aaa
popf
repnz
out
in
inc
add
fisttps
mov
loop
and
fsubs
andb
mov
jno
mov
or
sub
mov
outsl
enter
dec
jo
and
fldcw
jecxz
jl,pt
pop
ret
pushf
cmp
outsl
movsl
lcall
insl
js
push
xchg
push
shll
cmpsb
adcl
outsl
sbb
movsb
pop
arpl
adc
xchg
fs
stos
jns
into
mov
or
mov
xlat
stc
mov
pop
push
mov
adc
xlat
sbb
add
push
pop
or
addr16
hlt
lods
sbb
lods
lcall
dec
or
adc
ret
pop
pop
push
push
pop
pop
aam
pop
repz
inc
test
pushf
mov
scas
fisubs
add
sub
cs
mov
adc
adc
ss
sti
adc
rolb
out
ds
fiaddl
xchg
loop
dec
xor
xchg
jmp
lcall
lcall
fisttpl
dec
rol
jle
sub
push
rcl
sbb
clc
in
dec
cld
cwtl
and
popa
cmova
pop
dec
rorb
adc
cltd
stc
jl
push
jns
pop
add
dec
dec
jns
or
mov
popa
sbb
cmp
fcmovnbe
fisubl
pop
dec
cmp
jnp
pop
fsubs
loope
scas
mov
rep
push
mov
push
ds
imul
daa
and
sbb
and
jp
add
pop
cmp
popa
sbb
fmuls
dec
lods
dec
fimuls
sahf
and
xchg
ljmp
sub
ret
xor
mov
js
std
cmpsb
call
outsb
out
sbb
out
jb
insl
js
xchg
xor
xchg
push
imul
je
inc
in
mov
xchg
sbb
insl
cmp
sub
mov
clc
sbb
push
test
mov
cld
scas
std
inc
out
push
iret
stc
aas
jae
sbb
and
lcall
mov
dec
dec
lods
push
dec
aas
out
lds
aam
dec
sbb
jo
rolb
and
cmp
imulb
xorb
push
push
mov
cmp
push
test
xchg
std
mov
dec
mov
sbb
mov
out
daa
jo
test
ss
inc
xchg
xorb
cmpsl
aaa
add
dec
xchg
cmc
ljmp
push
sbb
push
or
dec
subl
pop
fisttpl
xor
jae
cwtl
mov
dec
adc
icebp
leave
xchg
aad
stos
or
sarb
in
aas
sub
ret
and
and
orb
xchg
in
fs
add
into
test
insb
mov
fs
push
lea
je
mov
pushf
stc
cld
imulb
data16
xor
repnz
push
xchg
push
bound
jns
cmp
mov
in
add
loope
sub
cmp
clc
push
pop
push
out
shll
mov
inc
popa
or
pop
sub
xlat
sub
inc
jp
or
adc
xchg
xchg
outsb
arpl
insl
in
into
jne
sbb
es
in
pop
push
pop
gs
push
lcall
mov
adc
shll
sbb
inc
fcmovnu
cmc
jae
jge
call
pop
and
vmptrld
mov
popf
in
cmp
call
mov
or
test
cld
aam
leave
shll
mov
nop
aas
cmp
cmp
jl
scas
mov
imul
es
pop
mov
dec
mov
xor
adc
push
das
dec
bound
inc
insl
outsl
sbb
outsb
je
mov
cmc
inc
cltd
sub
pop
hlt
loop
xchg
imul
sub
jmp
push
imul
in
in
jno
sub
sti
jp
jg
pop
iret
cmp
std
mov
stos
xor
cmp
mov
daa
inc
dec
in
ja
repz
sub
mov
cmp
inc
or
push
jno
mov
imul
imul
imull
and
adc
cmpl
aam
rcll
in
push
jle
mov
sub
outsl
out
scas
sbb
dec
xlat
stos
jns
mov
cmp
adc
and
imul
pop
pop
gs
pusha
popf
movsl
xchg
mov
sub
lcall
loope
ficoms
sarb
or
mov
inc
pop
xchg
or
mov
adc
test
jl
les
idivb
xchg
cmp
mov
insb
sahf
in
scas
popf
mov
jl
or
add
jb
sbb
in
mov
fistpll
sub
sub
push
cmp
adc
xor
cmp
lock
inc
cmp
mov
push
cwtl
fisubrl
sarl
fs
cwtl
lcall
iret
movsb
sti
test
imul
push
jae
pop
mov
mov
and
inc
mov
xor
imulb
or
jmp
cmp
mov
loope
out
cmpsb
jmp
mov
out
cs
dec
loop
dec
pop
lahf
fstpt
in
das
gs
sub
leave
nop
shll
mov
xor
mov
ret
ret
xchg
jl
sbbb
int
cwtl
lahf
outsl
pop
dec
mov
xchg
sbb
xchg
imul
out
clc
push
daa
icebp
jnp
stos
cld
sbb
add
jne
inc
mov
cmp
xchg
inc
loop
ret
mov
cli
mov
movsb
stos
sub
add
inc
fidivrl
push
or
daa
mov
adc
push
jne
add
xchg
lahf
mov
cmp
lods
pushf
std
xchg
or
push
les
mov
xorl
fwait
inc
jo
popa
sbb
adc
fisttpl
mov
dec
cmpl
fsubs
std
add
lds
test
xchg
push
mov
xchg
jp
sbb
add
loop
pop
ljmp
pop
imul
cmp
pop
in
push
xchg
adc
adc
iret
sub
xchg
pusha
and
mov
or
push
pop
repz
push
push
ja
xchg
and
lret
outsl
popf
mov
jg
scas
bnd
push
arpl
in
jmp
lahf
bnd
sub
inc
add
add
aas
les
int3
add
jecxz
imul
ret
out
or
xor
xchg
xchg
push
xchg
cmp
fsubrs
imul
mov
mov
xchg
cwtl
movsb
jae
outsl
sbb
imul
popf
dec
fstpt
pop
dec
iret
push
pop
xor
jge
ljmp
inc
xor
or
jnp
ficoml
in
add
stos
fnstsw
cmc
push
xorl
sarl
aad
inc
sti
jl
inc
cmpsl
sbb
xchg
push
cmp
or
cmp
xor
fnsave
push
ret
sub
fildl
js
ret
fisttpl
inc
movsl
movsl
mov
int
adc
push
fmulp
pop
loopne
mov
and
and
mov
std
dec
daa
push
mov
repz
add
outsb
dec
jns
jecxz
lret
lret
lods
xchg
jnp
xor
mov
xchg
js
adc
test
lods
dec
ss
jbe
cmpl
lods
stos
push
push
in
pop
mov
out
jns
fldcw
inc
sub
push
push
cwtl
jae
out
xor
mov
test
sarb
and
test
ficoms
js
nop
add
mov
mov
in
and
lods
ds
lea
sub
stos
int
es
inc
call
sbb
aas
xchg
jnp
sbb
cmp
mov
cld
and
cmpsl
inc
cmovp
jmp
cs
sarl
fisttpll
cmp
mov
mov
cmc
cmp
inc
xor
cmpb
sub
insb
int3
pop
pop
jle
dec
jae
pop
jno
out
mov
fidivrs
hlt
test
mov
lret
fdivp
push
mov
sub
imul
and
sub
lock
adc
xchg
and
cmp
push
adc
jmp
fists
add
cmpsl
xchg
sbb
adc
jo
lods
and
cs
cmpsb
cmp
inc
mov
adc
or
push
das
xchg
mov
pop
adcl
mov
lock
ds
sub
push
in
cs
pusha
push
sahf
fbld
cltd
pop
nop
or
shrl
jae
jb
xchg
xor
pop
xor
addr16
add
dec
faddl
data16
and
lea
lds
mov
mov
cmp
ds
xchg
ljmp
lahf
sub
insl
or
mov
sbb
inc
in
imul
xor
push
adc
xlat
sbb
lock
andb
xchg
jo
js
mov
das
mov
cmc
ret
fwait
mov
insl
pop
xchg
mov
adc
jmp
cmp
loope
test
jbe
nop
dec
mov
daa
mov
add
cltd
cmp
and
loopne
std
scas
fmul
mov
pop
js
jns
bound
jne
xchg
fisubrs
pop
movsl
and
jbe
cltd
lahf
ret
int3
dec
lea
les
push
fidivl
cld
sub
lret
jo
sub
mov
popf
mov
mov
add
dec
cmp
mov
mov
pop
imul
ret
xor
shlb
inc
xor
xor
out
mov
lahf
pop
lcall
std
jp
pop
aaa
pusha
cmp
mov
jae
lahf
and
stos
adc
push
mov
int
inc
aad
out
movsl
jb
mov
inc
or
jno
inc
push
pop
aaa
outsl
mov
inc
xchg
iret
xchg
cmpsb
popf
hlt
hlt
or
movsb
mov
das
jne
mov
sbb
loope
loope
daa
and
push
bound
mov
xor
fsubrp
and
jecxz
aam
inc
gs
add
cs
ret
lds
repnz
popf
inc
pop
fldcw
insl
and
sub
fidivl
shrl
inc
pop
bswap
mov
call
aaa
sbbl
add
enter
xor
xor
or
test
ret
xchg
in
cwtl
and
sbb
jl
rolb
mov
mov
sub
subb
bound
aam
fistps
inc
es
pop
jno
dec
mov
repz
adc
mov
scas
movsb
nop
adc
les
clc
jno
jge
add
add
sbb
mov
jmp
or
loopne
loopne
push
mov
insb
xor
push
leave
clc
popa
cwtl
ret
adc
mull
pop
pop
jg
mov
push
jl
adc
call
int
pop
xchg
das
mov
fdiv
inc
push
pop
cmpsl
mov
sub
jno
movsb
mov
inc
sbb
lods
push
ds
dec
push
pop
insl
sahf
inc
xor
fsubr
stos
and
and
mov
xchg
fistpl
sarb
push
insl
test
adc
pop
jmp
cmpsb
pop
inc
push
mov
xchg
jg
or
lock
iret
xchg
add
dec
mov
ret
push
or
push
pop
adc
les
cwtl
mov
add
push
inc
sbb
dec
mov
shlb
cmp
adc
shrb
pop
xlat
xor
sbb
popf
jp
rclb
jge,pt
add
or
cmpb
lret
adc
movsb
rcrb
cmpsl
jecxz
mov
push
lahf
inc
push
mov
xchg
push
enter
push
pop
sub
popf
xchg
jno
xchg
mov
lret
mov
sbb
dec
int3
insb
lahf
sbb
stos
loop
js
xor
cmpsl
in
adc
mov
cmpsl
pop
mov
inc
sahf
mov
jg
ja
sub
sbb
mov
lea
cmp
insb
daa
movsb
sub
insb
pop
mov
cmp
xor
adc
les
loop
xchg
leave
sbb
iret
inc
sbb
sub
stc
inc
sub
je
lret
negb
or
sbb
dec
jbe
sbb
xor
shlb
fnstsw
mov
scas
pop
jne
mov
xlat
lods
cvttps2pi
mov
fwait
roll
mov
mov
es
xchg
dec
out
aas
lock
xor
stos
fs
lea
push
int3
push
xchg
imul
adc
pop
out
test
xorl
jle
jnp
push
add
int
adc
fwait
pop
xor
cmpsb
jmp
mov
popa
xchg
sbb
pop
add
iret
in
popa
pop
mov
mov
arpl
cli
hlt
jns
xchg
mov
hlt
into
lret
cmp
gs
adc
stc
mov
pop
stc
jb
pop
gs
xor
inc
out
loop
adc
xor
jp
insl
xchg
inc
loop
arpl
int3
push
in
cmpsb
out
xlat
xchg
xor
xchg
repz
lcall
arpl
add
mov
movsb
cwtl
pop
add
dec
xchg
ret
adc
xchg
enter
cmp
jmp
dec
xchg
testl
dec
mov
mov
rcrl
orl
dec
or
sbb
xchg
cmc
sti
push
insb
or
mov
enter
cmp
xor
insb
dec
xchg
mov
fidivs
fcomps
and
adc
sahf
xor
pop
icebp
xor
adc
push
scas
xor
cmpsb
and
lret
mov
sbb
icebp
xchg
push
rorb
cmp
mov
dec
ret
std
jo
stos
lcall
popa
cmpsl
pop
stos
jle
lcall
adc
pop
test
cmp
outsl
push
cmpsb
test
mov
in
sbb
jno
mov
xchg
out
xor
xor
push
pop
mov
out
andb
in
mov
mov
sub
pop
insb
mov
popa
dec
cmp
pop
add
xchg
popa
xchg
bswap
mov
stos
cmp
or
ret
mov
and
fs
push
push
adc
pop
out
and
fwait
cli
jno
fs
dec
sbb
scas
gs
out
xlat
cwtl
dec
sbb
ds
ds
ja
mov
idivb
fimuls
inc
leave
sbb
andl
xlat
xchg
repnz
and
pop
sub
lret
addb
in
mov
jb
shrl
shll
inc
jmp
in
insb
addr16
cwtl
int3
mov
in
mov
imulb
iret
ret
mov
lcall
mov
in
cmpsl
inc
xor
roll
out
lds
and
jl
ja
shl
flds
sbb
jmp
lcall
xor
xchg
mov
fsubrl
lret
ret
test
lea
jb
sub
repnz
mov
fisttpl
push
jns
adc
shrb
add
mov
cmc
mov
jge
lods
jne
dec
xchg
sahf
movsb
sub
mov
mov
loope
cli
popf
lea
sbb
push
insb
xor
cmp
outsb
inc
jbe
push
fldt
mov
popa
stc
cmc
fnstsw
mov
adcl
mov
xchg
dec
repz
lock
sbb
mov
add
aam
pop
lcall
pop
pop
nop
sbb
daa
jl
add
cmp
sbb
ret
xorl
mov
les
xor
clc
movsl
flds
cmp
push
sti
adc
sub
mov
out
mov
imul
mov
shrb
dec
xchg
rcrb
push
les
push
or
and
shll
mov
dec
lcall
add
mov
out
mov
outsb
lcall
cmpsb
ret
lret
bound
and
fsubrl
inc
or
add
nop
inc
mov
outsb
pop
jo
fistpll
movsb
nop
fldl
jno
push
lods
pop
adc
int3
fcom
divb
shl
nop
pop
mov
inc
lcall
push
dec
or
mov
xor
fistpll
xor
dec
btr
mov
fwait
xor
and
xor
mov
mov
sub
cmp
sub
ss
lds
push
xchg
outsl
jge
push
xchg
mov
mov
loope
loope
jge
pop
or
push
iret
je
add
push
mov
jmp
mov
inc
call
scas
into
lcallw
mov
lahf
jecxz
cli
add
inc
mov
arpl
mov
je
pop
add
cmp
cwtl
pop
adc
mov
fsub
cmp
pop
inc
pushf
test
pushf
and
arpl
cmp
daa
mov
add
lock
les
rol
sarb
mov
test
push
leave
fwait
add
or
ret
imul
jno
fwait
adc
xchg
jo
jno
xor
pop
jae
subb
xchg
push
fistpll
add
or
mov
arpl
js
ja
mov
and
repz
icebp
es
and
mov
lea
adc
xchg
sbb
push
out
into
out
inc
lods
xchg
loop
cmp
cmc
and
mov
in
in
push
xorb
lods
cmp
and
push
adc
adc
fidivs
fnstsw
pop
lcall
mov
mov
xor
mov
mov
mov
or
test
adc
js
les
testb
add
dec
adc
icebp
dec
fcmovnb
sbb
jp
jbe
insb
out
repz
push
pushf
mov
mov
and
inc
xchg
sbb
mov
pop
loop
in
mov
adc
int
mov
gs
lret
mov
inc
cmp
push
fucomi
ret
dec
out
dec
and
and
nop
in
in
imul
jnp
out
lock
jp
test
sbb
cld
dec
or
test
push
cmp
adc
andb
shl
xchg
mov
icebp
xchg
iret
divl
xor
movsl
stc
into
popf
rorl
fistl
xor
xchg
into
out
pop
push
cmp
dec
or
sub
pop
loopne
xchg
ja
aam
pop
loopne
sahf
xchg
ret
add
popf
shrl
jno
sub
cli
jnp
outsl
mov
dec
lahf
mov
out
cmpsl
cmp
jmp
dec
ja
dec
sub
aaa
lds
xor
repz
mov
push
out
mov
sbb
mov
aad
movsl
into
ljmp
arpl
lret
jmp
pop
in
int
lods
fnstenv
fnstenv
and
or
fscale
lret
loope
sbb
js
pop
rorl
clc
xchg
push
dec
cmp
mov
sub
addb
out
push
sub
push
pop
add
jg
xor
imul
mov
xchg
or
jp
addr16
insb
fstpl
rorl
push
cmp
in
lahf
test
test
lea
es
jmp
dec
cld
and
adc
push
sub
push
lahf
and
mov
idiv
add
mov
push
aad
push
pusha
dec
cmp
repz
pop
pop
and
mov
fiadds
lods
out
push
pop
fnstenv
jns
sbb
adc
xor
imul
aad
call
sbbl
int
pop
cwtl
mov
mov
out
cmp
and
or
mov
jge
enter
pop
push
mov
icebp
mov
push
movsl
mov
or
mov
push
or
or
lret
or
in
jae
test
rclb
add
cmp
hlt
cmp
mov
push
cmp
lcall
clc
cwtl
mov
out
dec
cli
xchg
icebp
adc
imul
cmc
cmc
fsubs
mov
enter
pop
lods
xchg
movsl
adc
decl
in
scas
dec
dec
sub
cmc
inc
mov
and
push
mov
bound
pop
mov
sti
movsl
dec
lock
push
and
cli
pushf
sar
es
insb
lock
dec
js
mov
cltd
push
adc
fsts
jl
cmp
cmp
pop
mov
movsb
lcall
in
xchg
jne
xlat
hlt
stos
je
lods
sub
xor
xlat
mov
jp
out
imul
cli
js
lahf
nop
adc
cmpsb
pop
jge
mov
cld
jle
mov
add
in
jns
fwait
sub
inc
cli
push
mov
lcall
ja
push
adc
cmp
or
mov
jle
xor
xchg
cmp
aas
mov
sub
and
mov
or
cmc
jl
and
push
pop
rcll
and
adc
inc
popf
jno
xor
loope
sarb
xchg
mov
lds
stc
adc
push
push
imul
test
xchg
aas
in
ficompl
xlat
mov
lret
or
mov
xchg
push
push
movsb
icebp
testl
popa
sub
fimull
movl
test
andb
jnp
data16
xor
inc
push
aam
cli
push
cmp
int
je
push
fildll
movsb
ja
sar
dec
xlat
and
push
add
dec
jmp
testl
shrb
test
daa
xchg
xchg
inc
mov
popa
dec
mov
test
call
loope
jns
inc
jmp
test
mov
negl
hlt
add
push
add
add
mov
xor
call
mov
cwtl
out
xor
dec
sub
loope
sti
not
loope
mov
orb
mov
xchg
addr16
dec
inc
sub
mov
sbb
int
and
inc
test
xlat
dec
xchg
pop
loop
repz
mov
xchg
xchg
xchg
mov
inc
jo
cwtl
cmp
dec
in
stos
dec
inc
lock
jle
data16
jge
xor
or
mov
movl
lods
xchg
and
sub
xor
cmp
pop
mov
fistps
sbb
icebp
lret
clc
shl
xlat
add
xchg
std
aad
notb
ds
or
pop
mulb
fstps
inc
leave
aas
sub
push
xor
and
div
or
lods
mov
dec
jnp
ret
mov
arpl
xchg
es
push
and
mov
or
cmc
pop
sahf
das
mov
sub
imulb
adc
inc
movsb
cmp
or
mov
sbb
cmp
les
jae
and
leave
jl
xor
xor
sbb
jg
inc
sarl
push
lods
int
cmp
daa
outsl
lods
stos
inc
test
cld
xchg
or
cmpsl
push
mov
mov
not
inc
push
test
adc
popa
sahf
insb
xchg
outsb
popa
dec
punpckhdq
sti
xchg
mov
clc
sub
jmp
in
nop
jmp
leave
dec
xor
dec
add
pop
add
mov
jb
inc
in
lock
dec
mov
mov
in
stos
pushf
add
fs
mov
push
rorl
in
mov
jmp
cmp
sbb
lcall
adc
xlat
add
cmp
and
sub
fnstsw
movsl
sub
xor
jae
sbb
adc
adc
xor
test
ret
ficoml
mov
repz
cmp
loop
jecxz
cmc
mov
rorb
push
lret
mov
add
cld
cmpsb
sarl
loope
inc
movsl
push
in
mov
and
ljmp
es
xchg
outsl
mov
addb
js
add
add
in
or
pop
cmp
sahf
cs
pop
sbb
or
mov
scas
sbb
std
insb
stc
arpl
jb
mov
cmc
dec
loope
lcall
movsb
inc
es
cwtl
push
pop
mov
jns
cmpsb
inc
bound
jp
mov
daa
inc
aam
and
jbe
cmpsl
lods
roll
mov
sub
test
daa
push
movntps
sbb
jae
int
andb
rolb
jnp
cwtl
add
xchg
jnp
add
aaa
fisubrl
cmp
mov
push
std
fidivrl
jmp
push
shrl
and
aaa
xor
mov
stc
cmp
jge
lds
sahf
xchg
dec
aaa
stc
mov
fidivrs
movsb
cmp
mull
xor
add
dec
inc
dec
inc
pop
neg
inc
and
jns
mov
mov
lret
mov
das
or
lret
sti
sbb
add
stos
mov
sub
call
rcr
decl
rorl
shl
dec
cli
jge
lods
cltd
je
mov
dec
call
push
pop
mov
popf
aam
dec
icebp
lock
and
add
add
lods
mov
add
incb
popa
mov
mov
xchg
mov
out
gs
out
pop
mov
ss
call
lock
and
sub
test
push
xchg
lahf
dec
rol
out
add
lea
lods
rcll
xor
in
mov
xchg
movsb
imul
test
test
sub
les
and
mov
in
fcompl
xor
cmc
sbb
cs
lock
out
sbb
imul
cmpsl
jmp
ss
cmp
mov
push
mov
int
jnp
adc
xlat
das
pop
call
mov
push
jle
mov
les
leave
mov
xchg
es
mov
mov
test
jmp
std
out
int3
inc
test
in
in
mov
inc
cltd
in
imul
cmp
cmp
ret
pop
jae
cli
clc
push
stos
mov
cmc
js
ret
mov
clc
push
addr16
addr16
in
ja
jno
sbb
sbb
sbb
mov
nopl
dec
in
sti
adc
into
sarl
dec
call
push
push
pop
addb
pop
pop
scas
adc
test
into
cmp
and
inc
sbb
rorl
and
lret
inc
imul
inc
pusha
ss
xor
rclb
rolb
adc
jo
sub
cwtl
jle
dec
pop
js
into
xchg
inc
loop
int
fmulp
lds
inc
add
ret
add
add
lea
and
stc
test
push
scas
out
nop
add
jle
sub
mov
mov
sahf
mov
in
pushf
cmpsb
adc
xchg
dec
aaa
int
xor
adc
xchg
repnz
or
jae
shll
pushf
out
inc
std
mov
imul
jle
fwait
aad
idivl
push
xchg
aad
add
pushf
fsub
jl
dec
cmp
subb
lcall
rorl
imul
cmp
rcrb
sti
popf
out
jae
pop
scas
popa
movsl
mov
arpl
bound
out
pop
fimull
lds
sbb
sbb
aas
pop
ds
addr16
cmp
insb
fwait
cmpsl
bound
int3
scas
add
testb
in
mov
pop
or
and
fcoml
mov
push
jo
jne
testb
dec
and
pop
dec
inc
repnz
dec
add
mov
dec
cmpsb
xchg
incb
out
inc
call
call
lcall
je
fwait
adc
aad
pop
lahf
imul
sti
stc
or
jo
test
xchg
leave
hlt
inc
inc
sarb
jnp
inc
cmp
adc
cwtl
inc
inc
push
pop
dec
outsl
aad
das
jmp
jb
adc
mov
or
mov
rcll
cmc
push
rcr
lds
dec
lea
cmpb
cmc
testl
push
pop
les
int3
jne
test
lods
jb
mov
inc
push
sbb
sbb
aas
inc
xchg
shll
fmul
cmpsl
rorl
mov
jg
push
jbe
adc
and
jmp
aaa
insl
cmp
mov
pushf
jb
imul
cwtl
adc
sbb
shlb
cmc
pusha
movl
out
dec
cld
add
cmpb
jp
ret
icebp
lods
repnz
cmpsb
add
int3
ds
jo
lret
cmpsl
mov
cmp
gs
cli
inc
push
frstor
out
out
lds
scas
push
push
adc
pop
incl
mov
jno
repnz
mov
pop
pop
push
and
in
dec
adc
jns
lret
cwtl
addb
test
xchg
inc
xor
mov
xor
sbb
cltd
jno
sbb
ds
mov
xchg
ret
and
fisubs
add
mov
addr16
mov
lcall
insb
inc
cmp
repnz
cmp
pop
in
bound
ljmp
cmpsb
push
pop
leave
jl
mov
shr
mov
cmp
mov
sbb
push
push
sub
dec
push
push
adc
adc
pusha
jecxz
rcrb
mov
sub
aad
lock
xorl
test
cwtl
mov
and
dec
std
mov
inc
in
dec
mov
xchg
mov
xchg
xchg
or
mov
or
shlb
lock
dec
sbb
loopne
shlb
inc
std
mov
shl
clc
int3
rcll
cmp
je
enter
jmp
fsubrl
pop
cmp
into
stc
inc
loopne
xor
lds
stc
jge
jmp
push
sbb
cld
aad
data16
push
cmpsl
xchg
test
imul
cmp
scas
out
dec
sub
sbbb
and
sbb
aad
mov
adc
inc
cmp
pushl
inc
lock
push
daa
dec
jbe
out
es
adc
fistps
loope
or
out
outsb
inc
xor
mov
mov
inc
int
cmp
jo
xchg
imul
dec
rcrl
into
jp
sbb
int3
sbb
daa
xor
aad
je
add
cmp
arpl
inc
xchg
je
and
enter
xchg
adc
mov
jle
pop
jno
nop
sbb
stc
mov
mov
add
ss
push
movsl
inc
adc
adc
jp
bound
sbb
aaa
repz
std
mov
fcoms
and
mov
in
in
xlat
lret
aam
inc
pop
xor
mov
push
mov
test
fadds
xchg
mov
mov
sbb
lds
mov
mov
xchg
pushw
jns
data16
scas
repz
shll
and
out
dec
sub
fimull
repnz
gs
cltd
dec
ljmp
mov
mov
popa
das
xor
in
shlb
pop
aam
cmp
ds
add
fwait
aas
pop
inc
mov
adc
mov
sbb
addr16
xor
je
imul
sahf
jecxz
daa
xchg
fs
shll
cmp
data16
fwait
loopew
flds
xor
leave
sar
or
arpl
shrb
loope
enter
jl
out
inc
dec
bound
nop
outsb
jnp
sub
inc
mov
jecxz
dec
int3
and
or
dec
push
xor
sub
data16
pop
mov
test
fmull
jmp
imul
sub
enter
pop
mov
lret
sahf
sahf
pop
add
mov
fdivl
jae
or
stos
xor
mov
xor
adc
mov
divb
jl
dec
aaa
and
insl
mov
int
ja
ret
in
int3
xchg
dec
mov
hlt
xor
jmp
std
jle
pop
loopne
gs
insb
test
jae
leave
mov
cmc
ret
push
mov
dec
lcall
orb
pop
pushf
lods
xchg
push
movsl
jns
jp
in
pop
or
outsb
hlt
and
sub
cld
or
dec
shl
xchg
add
push
or
mov
xchg
adc
fs
in
adc
pop
dec
sar
test
push
daa
cli
and
cmp
aad
ljmp
dec
sbb
lret
sub
push
and
pop
aas
jae
sti
jae
dec
sbb
add
adc
imul
adc
xchg
scas
jno
out
mov
repnz
call
mov
add
add
or
cmp
out
push
call
test
push
mov
add
mov
xor
testb
push
cmp
repnz
insl
out
dec
jle
add
xchg
lret
std
sbb
fwait
pop
sub
out
push
out
jge
mov
or
cmp
lds
pop
xchg
ss
fmull
jmp
je
test
pop
and
data16
fwait
xchg
sbb
outsl
loopne
jecxz
xchg
inc
shr
gs
push
pop
test
sub
loope
in
insl
add
pushf
jge
jmp
insb
cmp
mov
fdivrs
inc
popa
fbstp
fsubrs
jp
into
sub
and
stos
lock
lea
push
in
jge
sbb
ret
jo
or
ds
cmc
jbe
xor
dec
cmpsb
xchg
push
inc
mov
popf
mov
test
mov
fiadds
ja
cmp
adc
sbb
and
popa
loop
pop
ds
mov
mov
jge
aaa
out
inc
jo
ljmp
or
adc
xor
fisubrs
jecxz
push
inc
xchg
jo
add
dec
nop
mov
hlt
dec
call
fisubrl
add
loopne
mov
mov
mov
int3
mov
or
into
faddl
mov
lods
fistps
xchg
sbb
adc
mov
mov
pop
jmp
divl
dec
stos
xlat
clc
pop
iret
inc
inc
in
jbe
mov
cmp
adc
cmp
add
cmpxchg
inc
insb
into
sahf
dec
in
jno
push
aad
int
pop
push
enter
sbb
faddl
test
push
jo
jge
mov
sbb
cmp
adc
in
jbe
ljmp
xchg
adc
test
xchg
lea
subl
dec
leave
lahf
adc
push
das
fisubrs
into
mov
dec
rcr
inc
mov
mov
xchg
xor
dec
mov
pusha
or
test
mov
imul
das
rcll
jge
in
lock
pop
ds
xor
xchg
sbbb
test
sti
dec
insl
int3
xor
pop
fnstsw
dec
mov
popl
mov
mov
int
leave
jbe
out
mov
or
cmc
jns
pop
mov
mulb
xchg
lock
je
adc
mov
push
int
pop
mov
jns
mov
push
mov
in
pop
mov
dec
lds
xor
and
mov
cmp
cmpsl
xchg
adc
lahf
in
jle
test
mov
inc
lods
ret
fsubrp
jg
or
jp
daa
and
mov
andl
add
mov
jecxz
scas
loopne
push
inc
arpl
add
inc
ret
sub
xchg
scas
int3
repnz
pop
push
clc
pop
inc
push
out
mov
int
out
mov
and
sbbl
push
add
out
adc
or
fdivp
das
dec
cltd
addr16
jae
out
or
repnz
pop
mov
mov
das
aam
lock
cmp
xchg
adc
xchg
mov
out
push
push
mov
testl
rorl
les
test
or
test
cmpsl
jp
inc
in
xchg
divps
jno
and
xor
sub
mov
sbb
inc
fists
mov
repz
sarl
mov
ja
daa
jo
add
mov
xor
push
lock
xchg
jmp
sub
call
popf
cwtl
movsb
pop
aas
je
push
xchg
enter
sub
add
jae
inc
in
sbb
adc
pusha
and
dec
mov
inc
jb
mov
cmpsl
dec
cmpsb
push
sti
mov
inc
sub
aaa
lods
inc
out
pop
imul
ljmp
loope
sub
and
out
adc
adc
inc
jo
pop
mov
outsl
sbbb
mov
addr16
pop
insb
sbb
sbb
push
cmc
inc
mov
mov
inc
pop
cmc
ja
in
inc
adc
scas
movsl
ret
adc
or
aas
setge
push
push
mov
stc
mov
shll
scas
fistpl
push
orb
push
push
dec
inc
pop
fsubs
dec
xchg
cmp
dec
lea
js
cltd
out
orl
enter
enter
sarl
xor
insl
sbb
mov
push
adc
inc
mov
in
push
in
cmp
push
int
xchg
jnp
or
int3
insl
lods
pop
out
sbb
lds
ljmp
add
push
pop
pop
sub
es
dec
cmpsl
inc
dec
mov
push
sub
valignd
pop
lods
jge
popa
insl
cmp
dec
xchg
sub
call
cltd
imul
xchg
push
and
call
xor
jp
fwait
xchg
jp
push
inc
pop
adc
push
mov
inc
and
pop
adc
pop
fisubrs
dec
gs
push
fwait
stc
adc
cmc
and
rclb
sti
icebp
push
repz
inc
popf
in
push
sbb
pop
cld
imul
and
popf
imul
sbb
xor
std
in
sub
adc
xchg
lea
adc
div
jle
sbb
mov
into
jbe
and
adc
jb
xchg
xchg
fbstp
loope
cmp
ja
repz
pusha
popa
or
adc
inc
sbb
stos
sahf
pop
cmpsl
lods
and
mov
and
push
repz
and
xchg
push
sub
shl
sub
inc
scas
push
adc
xchg
sti
cwtl
cmp
lahf
sbb
scas
in
sbb
out
sub
jnp
pop
fcoml
push
in
js
push
loopne
or
push
jo
sub
popf
popf
cs
adc
jmp
push
pop
pop
jmp
dec
in
fiadds
cmp
xchg
sub
jb
ss
andb
insb
iret
sbb
add
lret
in
pop
aas
pop
mov
jne
cmpsb
movsl
repnz
or
inc
repz
mov
icebp
mov
jo
pushf
cmp
arpl
xchg
clc
or
mov
jl
add
sbb
pop
mov
xor
loope
sub
clc
mov
xor
fcmovne
sti
mov
call
cmpsl
rorl
fs
jns
mov
inc
push
test
out
pop
dec
fimuls
data16
aam
into
add
enter
stos
or
ret
adc
dec
xor
out
js
in
push
jnp
or
mov
pop
iret
push
imul
int3
inc
adc
sbb
jns
loopne
mov
aad
rcr
mov
sbb
adc
dec
in
jge
nop
and
xchg
mov
repz
ja
testb
inc
adcb
out
pop
arpl
xlat
xchg
es
ret
jge
fimull
imul
rcll
sbb
xchg
movsl
jb
into
into
sub
or
cmp
imul
sub
enter
fnstcw
notb
push
inc
js
sbb
mov
test
into
jge
mov
cmp
in
mov
jge
sub
loopne
in
inc
stc
push
mov
fidivl
repnz
mov
xor
pop
pop
cmp
add
mov
loope
js
cmp
add
adc
xchg
xor
ds
xchg
call
lcall
ja
decb
daa
outsl
inc
mov
inc
call
mov
rcrb
ljmp
sub
and
xor
in
jno,pt
dec
add
imul
pop
jecxz
aad
ljmp
cmp
dec
mov
fadds
xorl
xor
or
out
jo
adc
jb
insl
arpl
xchg
imul
xchg
xchg
mov
les
pop
pop
add
int3
mov
cltd
jne
sbb
mov
dec
fcompl
orl
movb
dec
mov
dec
and
clc
sbb
gs
loop
inc
repnz
xor
mov
sbbb
dec
inc
mov
bnd
arpl
sahf
stc
roll
adc
mov
push
jae
jo
and
clc
out
push
test
es
push
mov
jnp
xor
cli
sub
lret
cwtl
sub
daa
jae
xchg
dec
and
out
mov
in
or
cli
fwait
leave
xchg
lret
jmp
sahf
negl
outsb
test
xchg
inc
push
fmuls
push
enter
mov
aaa
jecxz
adc
icebp
not
icebp
lcall
call
mov
sub
leave
arpl
negb
sub
dec
jnp
pop
sbb
dec
or
inc
inc
mov
shlb
insb
icebp
je
inc
sti
pop
pop
jbe
push
pop
arpl
xor
jne
les
mov
mov
push
test
int
inc
push
or
dec
xlat
push
icebp
out
iret
or
arpl
ja
inc
js
dec
xchg
ljmp
out
mov
xor
ds
cmp
dec
dec
scas
sbb
dec
repnz
or
dec
sarl
lods
sub
lahf
out
inc
mov
lcall
outsl
cmp
stos
out
movsb
add
sbbl
add
or
cmp
pop
mov
in
mov
inc
adc
daa
addr16
xchg
in
stos
dec
dec
xchg
sarl
mov
pop
leave
js
daa
out
mov
stc
aaa
imul
dec
aaa
dec
movsl
fdivr
nop
insb
jne
sti
aam
cmp
cwtl
icebp
pop
or
inc
sbb
or
xor
push
xor
and
mov
loop
lahf
lahf
movsb
mov
sbb
aad
mov
inc
xchg
in
movsb
daa
sti
hlt
xor
and
fsts
movsb
pop
mov
aaa
mov
cli
cmp
idivl
fs
xor
mov
push
pop
mov
xor
in
std
pop
push
loop
sbb
or
push
cmp
mov
lds
stc
jae
inc
mov
push
out
xchg
into
and
xor
sub
imul
add
lods
cmc
adc
call
int
repz
push
shll
jl
cmc
mov
dec
in
rolb
mov
ds
repnz
in
xchg
cmp
iret
in
mov
mov
imul
xor
add
nop
test
ljmp
jl
mov
loop
and
mov
mov
xchg
cmpsb
cmpsl
fistpll
sbb
ss
stos
outsb
jb
out
push
dec
or
sub
jecxz
push
dec
push
ja
test
sbb
mov
repz
lret
cmp
inc
movl
mov
aad
or
mov
mov
int3
call
fcompl
int
sub
js
pop
jmp
dec
mov
fisttpl
jbe
dec
scas
push
or
or
ret
loope
xchg
int
das
xchg
add
mov
imul
mov
mov
loope
dec
add
xor
mov
lock
icebp
sbb
sbb
shl
icebp
les
dec
xlat
jno
sar
jmp
add
jp
ja
lret
add
scas
xchg
mov
das
outsl
stc
inc
xchg
fistl
add
lcall
mov
mov
mov
scas
fistpl
cmp
insb
nop
iret
push
inc
jecxz
addr16
sbb
pop
dec
dec
jns
sbbb
xchg
lods
xchg
loopne
add
xor
cmc
fs
jl
mov
iret
mov
jno
mov
lods
add
inc
mov
into
xchg
jb
xlat
cmc
xor
pushf
ficompl
mov
mov
out
das
fwait
mov
dec
ror
pop
lret
jne
in
jb
cmp
pop
popa
xor
subb
jmp
jbe
out
jno
mov
leave
sbb
jno
in
xchg
frstor
cmovle
dec
push
int
in
add
jnp
cmpsb
hlt
jno
pop
and
adc
push
lret
lods
xor
cli
int
sub
subl
js
lods
aad
xor
add
sub
dec
push
inc
inc
inc
test
mov
nop
incb
jecxz
icebp
in
repz
mov
in
std
xchg
xor
faddl
jle
push
push
add
out
push
sub
lods
push
pushf
mov
pop
shll
dec
pop
sarb
mov
jl
cs
inc
and
loope
push
pusha
jle
insb
xchg
aam
sahf
rcll
das
aad
mov
xor
cmpsl
call
mov
mov
xor
mov
xchg
arpl
into
icebp
mov
mov
fstpl
inc
icebp
add
cmpsb
lret
xor
movb
les
ret
sbb
hlt
int3
aad
push
nop
jge
push
pop
test
or
push
mov
inc
loopne
and
adc
insb
jbe
js
push
cmp
test
jmp
ror
notl
push
es
test
cmp
mov
cmpsb
xchg
subb
cmp
sbbl
xor
arpl
cltd
lfs
inc
inc
pop
pop
mov
and
repnz
test
jg
repz
loop
mov
mov
out
inc
mov
inc
inc
jle
xor
mov
inc
xchg
inc
addr16
mov
lahf
pop
sar
cmp
ret
inc
imul
and
js
add
and
repnz
xchg
jg
daa
frstor
sub
cmpsb
in
mov
popa
push
push
outsb
sub
xor
cmpsb
int3
sub
push
mov
inc
mov
and
dec
add
adc
repnz
fs
sbb
pusha
sub
add
dec
xor
inc
stc
cmpsb
jmp
add
ds
test
scas
fwait
mov
add
fucomp
add
mov
js
sarb
in
and
adc
inc
push
data16
fucomp
xchg
mov
cmp
xor
bound
aam
pop
dec
ret
addr16
adc
testl
pop
inc
inc
push
js
shrb
pop
adc
xchg
xor
mov
mov
mov
es
push
push
or
mov
mov
mov
outsb
mov
ja
push
and
dec
cmp
add
loopne
es
dec
jecxz
imul
insl
data16
adc
xorl
aas
adc
shll
bound
pop
inc
insb
insb
dec
pop
jecxz
add
ficoml
sbb
jb
xchg
fidivl
dec
inc
xchg
push
out
xchg
test
hlt
lods
jg
and
mov
inc
imul
pop
jl
push
inc
and
gs
or
popa
push
punpckhwd
test
adc
rcrb
sarl
jne
aad
fdivrl
test
stc
pop
insb
push
mov
sub
jno
subl
stos
pop
repnz
jecxz
sarl
adc
mov
cld
sahf
push
ret
aaa
sub
add
mov
and
jl
adc
cmpsl
sub
stc
xchg
lahf
adc
push
cs
xor
jecxz
repz
xchg
loopne
data16
cmp
js
sbb
scas
push
and
dec
xor
js,pn
lock
inc
xchg
and
pop
in
pop
leave
leave
mov
popa
mov
ds
mov
xchg
adc
loopne
mov
pop
mov
jno
mov
nop
es
dec
or
inc
lahf
test
lret
cmpl
cmp
xchg
mov
out
mov
add
aad
sub
push
and
inc
and
stc
shlb
sahf
sahf
dec
pop
mov
sub
ja
add
pop
sub
popf
daa
cmp
decb
jmp
adc
pusha
sbb
scas
outsb
out
dec
jp
mov
decl
into
ret
cwtl
mov
or
lret
cmp
lcall
rcrl
mov
mov
or
inc
addr16
push
into
cmp
mov
ja
not
xchg
pop
mov
or
dec
or
cmp
cld
insb
push
insl
fdivs
pop
xchg
dec
pop
sub
rclb
jl
push
sbb
rcrl
or
jae
lret
pop
push
or
mov
dec
popa
sub
out
fcoms
mov
sahf
idivb
loopne
add
lods
xor
in
imul
mov
in
int
sub
adc
fst
popa
add
stos
sub
inc
push
hlt
movsb
cmp
shl
imul
notl
dec
int
lods
pop
pushf
popa
call
cmp
fidivl
gs
adc
popf
repnz
pop
pusha
cmp
and
lret
cmp
pop
mov
and
in
push
sbb
fmul
inc
adc
xor
dec
iret
inc
mov
xchg
out
add
rol
repnz
fldenv
cmpsl
cs
dec
jp
dec
pop
dec
int3
mov
mov
sub
rorb
cmp
pop
mov
dec
test
pusha
sub
cltd
xchg
stc
pushf
dec
jge
scas
lods
out
push
xor
xadd
add
push
out
out
scas
std
cli
pop
fstl
sub
int
test
adc
xor
call
in
xchg
xor
push
aam
xchg
inc
fsts
loope
jbe
push
sbb
mov
fs
or
ficoml
clc
mov
adc
sbb
lock
push
sbb
aam
sahf
add
psubusw
jmp
mov
sbb
clc
je
pop
test
pop
dec
bound
lea
mov
xchg
xor
cld
pop
popa
sbb
loope
mov
sti
jmp
fdivs
xchg
mov
in
jge
hlt
les
inc
pushf
or
mov
xchg
push
jne
adc
pop
jge
xor
push
or
jo
stc
lock
bound
dec
jmp
daa
lret
jb
xlat
insb
aaa
push
xor
mov
test
adc
orb
sbb
popl
sub
jns
mov
imul
ret
fstl
push
xchg
push
adc
aas
pop
rdpmc
insb
icebp
ja
adc
or
dec
add
cmp
mov
lea
inc
out
push
and
enter
cmpsl
sbb
not
sbb
repnz
pushf
and
jno
mov
jmp
idiv
and
jae
adcl
push
adc
fistps
mov
mov
cmpsl
mov
mov
cmp
fs
adc
mov
xlat
loopne
push
mov
add
aad
lods
lods
dec
popa
jp
jmp
or
mov
insl
movb
pop
outsb
jge
aaa
mov
dec
lcall
sbb
fildl
or
rclb
xlat
and
enter
fcompl
and
fsubr
jnp
sub
pop
add
xchg
xor
cmpsl
add
cli
cmp
pop
mov
scas
xchg
dec
in
push
cmp
push
notb
push
sub
loopne
jnp
lock
pop
outsl
ret
pop
in
inc
ret
inc
lds
xchg
push
popa
add
rcrl
xor
shll
sbb
mov
cmp
cmpsb
aad
pop
or
shlb
ds
jne
sbb
enter
jmp
mov
stos
dec
push
loope
xor
outsb
icebp
nop
mov
daa
mov
into
mov
mov
out
sarb
andb
adc
ds
push
cmp
rorl
sahf
fistpl
int
nop
inc
scas
aam
shlb
inc
pop
sbb
add
mov
mov
xchg
and
fcoml
rolb
fcmove
je
out
sub
sahf
insl
mov
jb
mov
push
rcll
cs
jo
mov
enter
mov
int3
cmp
repnz
fistpll
sahf
inc
cmp
int3
push
xchg
jle
mov
daa
int
xor
insb
jbe
rcr
add
push
push
xchg
int
xchg
shl
out
js
shr
jne
pop
mov
pop
dec
arpl
popa
icebp
das
adcb
aam
bound
arpl
ljmp
cmp
outsb
inc
out
or
mov
lods
or
and
hlt
frstor
aaa
and
leave
or
inc
js
jmp
or
jbe
into
or
pop
adc
jle
orb
mov
popa
daa
add
scas
sub
test
imul
xor
negb
push
in
or
xor
out
addr16
push
aas
push
or
mov
lock
adc
jg
and
into
pop
cmc
movsl
mov
and
jb
jle
pop
sarb
psrld
dec
and
and
stc
shr
lcall
popf
gs
loope
push
mov
icebp
push
jmp
sub
mov
movb
xchg
lds
mov
dec
mov
mov
cmpsb
loop
fs
shll
js
cmp
ret
mov
cmp
cmp
mov
push
push
cmp
cmp
popf
cmc
dec
or
das
jg
push
outsb
mov
mov
out
add
outsl
in
add
cmp
pushf
push
enter
imul
out
rorb
enter
xor
int
add
addr16
cmc
mov
or
icebp
xchg
cli
not
xchg
push
sahf
pop
loop
pop
jmp
xlat
xor
test
jp
pushf
jne
pop
adc
lret
pusha
sub
xchg
les
test
dec
sub
shr
cmp
hlt
mov
cmc
sbb
testb
repnz
addb
jb
and
icebp
and
movsb
lret
stc
jp
adc
jo
dec
jl
pop
lock
pop
insb
test
rorl
sbbb
test
adc
inc
mov
and
ss
out
cmc
insl
mov
and
xchg
aas
and
and
or
xor
shll
inc
mov
cmc
in
mov
fisubrl
or
mov
bnd
sbb
leave
aad
pop
data16
adc
sbb
cmp
inc
lods
lret
jne
ss
stos
xchg
sbb
stos
outsb
mov
adc
popf
dec
rcll
mov
add
dec
dec
nop
dec
popf
jns
stos
sbb
inc
dec
adc
popa
daa
mov
xchg
mov
mov
scas
jecxz
addr16
jp
shlb
lock
inc
push
jnp
das
aad
add
into
or
push
jno
pop
gs
hlt
sbb
loope
cmc
movsb
or
in
je
inc
es
mov
push
dec
inc
pop
repz
xchg
out
test
mov
fists
adc
faddp
js
jp
mov
mov
push
addb
pop
popa
dec
push
bound
sub
adc
push
ss
loop
cmpsb
adc
pop
cmp
mov
xchg
mov
push
inc
lahf
mov
clc
push
jno
xor
dec
pop
pop
dec
dec
aad
call
jle
add
and
push
or
js
ficoml
je
push
sub
adc
aam
xor
lahf
push
mov
inc
pop
sbb
mov
xor
nop
xchg
or
sub
outsb
cmp
xor
lret
jmp
add
shll
xor
mov
jmp
popf
test
push
aas
xor
cmpsb
sbb
jg
mov
mov
js
jp
push
and
cmpsb
mov
inc
cmp
scas
dec
negl
push
lahf
mov
sbb
push
push
xchg
imul
mov
iret
mov
sub
push
add
jp
into
andl
imul
xchg
lods
js
das
pusha
mov
jge
aas
and
add
imul
sahf
mov
cmp
dec
jl
cmp
xchg
add
lcall
jmp
sarl
inc
aas
xchg
iret
stos
shlb
xchg
aad
cmp
ret
mov
jle
push
cli
cmp
mov
mov
enter
push
lods
and
ja
scas
cwtl
cld
out
jb
sbb
cwtl
je
and
cmp
xchg
pop
jmp
test
sbb
mov
sub
xchg
test
sub
pop
jmp
pusha
test
data16
push
data16
movsl
fdivrl
mov
popf
lret
pop
nop
ficoml
dec
mov
fwait
jle
mov
lret
or
xor
call
adc
lahf
xchg
lret
sbb
scas
jae
lea
out
and
out
out
nop
lea
push
aam
loop
push
lret
or
loopne
jb
push
push
adc
adc
imul
dec
enter
jmp
sub
and
adc
xchg
pop
std
dec
dec
out
test
adc
jo
mov
out
xor
and
xchg
or
add
push
mov
pushf
mov
lods
inc
sub
cmc
frstor
push
sarl
pushf
pop
fldt
jb
clc
pop
pop
push
test
and
xlat
jl
pop
lret
leave
pushf
sbb
and
sti
or
pop
lods
xchg
add
or
arpl
stos
cmpsl
insb
dec
dec
das
mov
xor
pop
pop
dec
xchg
insb
mov
int
push
es
jne
adc
ret
fistpll
std
cltd
mov
xchg
cli
adc
push
xchg
data16
push
pushf
stc
outsb
out
xlat
sub
cmp
call
repz
movsl
lds
or
xchg
push
test
xchg
nop
sbb
dec
inc
fnop
ficomps
ret
fwait
roll
jmp
hlt
shlb
pop
bound
sbb
insl
mov
in
push
adc
inc
out
sub
scas
push
test
lcall
adcl
xchg
fsts
xchg
ss
inc
add
data16
mov
and
cmp
and
es
outsb
roll
cmpl
in
lret
add
imull
popf
mov
rclb
lret
inc
lods
xchg
xchg
xchg
mov
jns
call
adc
pop
xchg
cmp
ret
nop
test
sbb
pop
inc
pop
decl
aam
pop
in
cmp
repz
popf
push
enter
mov
adc
in
out
in
dec
pop
jg
int3
repz
in
cmpsl
loopne
xchg
nop
and
jae
xchg
mov
loope
sub
mov
and
gs
mov
pop
pop
cmp
push
jle
outsb
popa
pushf
stc
push
daa
fadds
in
in
xor
daa
daa
flds
xor
call
pop
pop
cmp
jle
xor
int3
adc
xchg
inc
test
je
mov
sbb
inc
jl
out
mov
add
push
xchg
or
sub
fisubl
cmc
push
lahf
fstl
popf
outsl
xchg
or
iret
out
cld
sbb
pop
test
cmc
pusha
cmpsl
cmp
cmpsb
mov
jg
frstor
lock
dec
lods
add
sar
cmpsl
outsl
sbbb
rol
fcompl
push
push
xchg
cwtl
sar
sub
xor
shlb
xchg
popa
jp
mov
daa
ror
push
pop
sti
mov
xchg
fwait
les
mov
adc
lods
arpl
mov
push
sub
sub
and
jl
addr16
mov
ds
mov
popa
insl
add
movsl
jmp
out
aad
inc
cmp
mov
std
test
jecxz
fmull
lret
cmc
and
out
mov
cmc
daa
ret
mov
dec
sub
dec
and
push
iret
mov
mov
repnz
dec
xlat
pop
add
push
aas
es
fst
adc
xchg
pop
aaa
jbe
iret
mov
ret
das
dec
inc
lret
aam
adc
int
pop
pop
aaa
lds
sub
or
test
into
ljmp
fstps
xlat
pop
pop
cmpsb
jno
pop
ss
fstpt
xor
xchg
je
xlat
jl
xchg
imul
push
mov
sbb
mov
mov
into
faddl
jo
jno
mov
mov
es
mov
jl
push
in
shrb
sahf
iret
jge
and
in
mov
cmp
xchg
jnp
aas
cli
aaa
xor
scas
push
test
fsubs
fdiv
stos
add
xlat
mov
dec
sti
push
bound
xchg
cmp
cmp
or
adc
adc
dec
mov
std
mov
rol
pushf
ja
adc
and
mov
addr16
xchg
adc
imul
cmp
scas
lods
outsl
mov
mov
cmp
dec
pop
cmp
int3
enter
and
mov
pop
fs
mov
aam
loope
repz
insb
or
cmpsl
mov
leave
inc
sub
pop
stc
aam
push
jbe
inc
lcall
pop
xor
inc
rcll
ljmp
leave
cli
dec
pop
mov
inc
rorl
jmp
fldcw
sub
or
pop
idiv
dec
fists
and
nop
dec
and
insl
push
je
pop
movsb
out
lret
and
push
stos
stc
fcmovnbe
xchg
jg
jmp
xor
adc
ss
imul
add
sbb
mov
cmp
lods
adc
popf
add
jg
push
lahf
xchg
mov
mov
rolb
push
call
das
inc
insl
test
repnz
std
sub
les
jecxz
loope
test
int3
sbbl
pop
adcb
jnp
orb
roll
lahf
pop
adc
mov
mov
jb
jnp
js
xor
cltd
out
lret
cmp
push
cmpsl
arpl
sti
cmp
xchg
shll
jmp
out
imul
inc
jns
mov
sahf
adcl
cmp
outsb
sub
dec
adc
ljmp
mov
orb
pop
les
out
jae
jge
inc
cmp
push
and
shll
inc
mov
cmp
shrb
jge
mov
in
lret
inc
xchg
stos
leave
fmulp
fistps
je
mov
sbb
inc
jno
rcr
rorl
lock
test
scas
mov
and
lods
cmpsl
jecxz
enter
add
add
lea
mov
mov
cltd
cmpsb
stos
btsl
mov
out
mov
clc
int3
push
inc
lods
jp
xor
js
jb
mov
in
xchg
pop
enter
xlat
mov
jnp
inc
sbb
jl
testl
scas
fs
repnz
sbb
scas
in
mov
push
mov
xchg
stc
loope
pop
mov
aas
xchg
push
inc
xchg
mov
fdiv
add
pop
loopne
jl
shlb
sarb
push
sar
jge
add
lods
jo
lcall
insl
outsb
jg
sbb
or
out
insl
out
cmp
lds
sub
int
mov
xlat
inc
jle
jecxz
mov
movb
pop
leave
cltd
icebp
out
shrl
das
sub
mov
pand
cmp
lods
jp
push
adc
pop
mov
dec
mov
loop
xchg
lods
jmp
xchg
push
mov
sub
lods
push
rolb
ja
and
repnz
shlb
lods
leave
cmp
ret
dec
icebp
push
mov
adc
fsubl
xor
sbb
mov
sbb
cmp
js
shl
xchg
dec
nop
das
cmp
push
add
fldt
pop
xchg
movsl
jae
sbb
mov
stc
jno
cli
or
lock
rolw
mov
pop
adc
outsb
popf
adc
pop
mov
mov
daa
mov
and
insb
mov
mov
popa
jmp
scas
je
xchg
lahf
push
mov
lret
popf
loope
ja
cmc
adc
test
cmp
test
mov
enter
inc
adc
pop
test
movsb
fiaddl
pushf
inc
adc
inc
and
cmpb
pop
adc
in
jbe
es
dec
mov
xchg
stos
fistl
aad
mov
or
jae
mov
in
mov
in
int
lcall
lds
cmc
inc
jno
mov
or
testl
mov
js
les
and
xchg
fidivl
adc
pop
pop
xchg
push
xchg
js
cld
xchg
or
out
ja
mov
add
movb
adc
out
adc
add
and
in
or
rorb
adc
pop
movsb
cmp
push
leave
push
out
and
jns
test
outsl
mov
pop
pop
jb
frstor
xlat
pusha
xchg
cmp
cmpsb
push
push
push
push
rorb
jnp
enter
push
std
mov
dec
test
scas
call
push
push
cmc
jg
mov
push
pop
std
sub
jg
aas
cmp
shlb
mov
and
mov
sub
outsb
out
lret
lcall
bound
xchg
push
inc
sbb
repz
cld
mov
pop
pop
rorb
mov
or
jp
jo
xchg
roll
in
js
cltd
push
leave
xchg
jle
stos
dec
fstl
inc
lock
test
lret
cmpsb
pop
divb
mov
mov
and
cmp
jbe
jne
push
loopne
push
call
gs
push
xor
je
shr
bound
fdivs
lods
xchg
xchg
movsb
mov
std
outsl
lea
test
inc
lret
mov
pop
les
mov
and
lret
sbb
imul
pop
sahf
mov
je
repnz
dec
inc
mov
in
mov
addr16
ftst
dec
repz
mov
or
pushf
sub
pop
mov
lret
call
es
leave
xor
ja
inc
shr
pop
lcall
mov
push
loop
mov
pop
cltd
pop
imul
sub
mov
hlt
sahf
rclb
fcompl
pushf
mov
jp,pt
xchg
js
stos
or
inc
add
xchg
mov
sbb
daa
outsb
xor
sti
push
stc
arpl
xchg
lret
call
jmp
add
ss
in
stos
je
insw
sbb
or
adc
jle
jnp
sub
mov
mov
sbb
cmpsb
mov
popf
push
rcrb
lods
pop
xor
movsl
ljmp
pop
ljmp
adc
call
adc
inc
repz
xchg
cmp
sbb
andl
xchg
les
sarb
push
or
mov
inc
sub
scas
scas
push
push
pop
or
mov
xchg
repz
jge
mov
inc
mov
dec
dec
movsb
into
hlt
sbb
inc
xchg
dec
push
push
mov
ljmp
jge
mov
dec
sub
mov
jbe
mov
jns
sbb
mov
out
jo
movsb
std
iret
lcall
cmpl
cmp
clc
mov
sti
nop
xchg
sbb
jmp
cmpsl
lea
fiadds
loop
pop
leave
out
pop
xchg
fldl
sub
fdivl
mov
cs
ficompl
mov
adc
lcall
int3
cmp
sub
test
mov
jp
jge
push
adc
std
test
rorb
test
in
xchg
leave
xor
repz
cld
out
mulb
inc
nop
lret
lcall
pop
xor
pop
subl
xchg
jmp
das
repnz
push
test
je
xchg
and
ja
cs
dec
xor
xor
xchg
pop
xchg
not
mov
test
shlb
ret
or
insl
dec
cmpl
add
fistps
xor
cmp
xchg
lods
cmp
inc
int3
addr16
or
stc
xchg
jp
data16
mov
sbb
outsl
fidivrs
xlat
xor
mov
aas
and
sub
es
lahf
lock
into
xchg
cwtl
mov
and
inc
dec
sbb
and
inc
aam
add
jmp
mov
test
adc
out
sub
mov
sub
pop
scas
mov
lcall
sbb
adc
icebp
clc
jecxz
mov
cmp
jb
dec
xor
inc
mov
imul
sbb
adc
pusha
xchg
inc
pop
iret
inc
loope
add
jne
sarb
mov
lret
pop
popa
lods
jno
pop
stos
mov
add
subb
lret
arpl
mov
add
xchg
fcoml
and
sbb
pop
fists
push
lret
adcl
repz
sti
mov
sarb
cmpb
in
push
imull
or
dec
aaa
sbb
or
or
ficoml
out
sbb
testl
jno
jmp
jp
mov
into
loop
lret
sar
cmp
adc
ljmp
icebp
sub
ficompl
mov
xchg
mov
mov
and
aad
mov
push
xchg
sub
scas
mov
add
gs
call
sbb
in
mov
sbb
subb
adc
add
call
pop
mov
cmpsl
aad
add
add
shrl
icebp
shlb
filds
lock
lods
and
push
vpunpcklbw
sbb
mov
sub
mov
test
js
dec
add
jno
ror
pop
add
push
out
or
test
or
scas
pop
dec
dec
call
lcall
xor
xchg
outsl
or
cmp
mov
in
add
pop
xchg
ret
in
iret
mov
cmp
push
and
das
mov
cmp
fimull
cmc
lods
xchg
sbbl
movsb
jmp
xor
xchg
dec
sahf
popf
fisttpll
add
mov
mov
add
fsts
pop
repnz
in
or
pop
xchg
xchg
repz
mov
popa
mov
add
jle
lods
fisttps
pop
hlt
sbb
pusha
lea
enter
lea
inc
jle
fmull
and
fistps
insb
push
cmpsb
pusha
or
pop
out
aad
sarb
jl
arpl
jnp
cmp
lds
dec
sub
jb
jns
or
incb
add
mov
sub
enter
and
ja
stos
into
push
pop
faddl
sti
mov
subl
iret
and
mov
pop
and
inc
adcl
ss
xchg
mov
xor
push
sbb
ljmp
xor
xchg
in
scas
inc
mov
and
cmp
push
push
or
push
adc
cwtl
rclb
sub
inc
add
test
and
scas
pop
imul
cmpsl
inc
xlat
sub
push
adc
je
or
xor
mov
lret
or
fwait
cmpsl
jmp
xchg
das
xor
inc
xchg
inc
inc
and
aam
sbb
sarl
xor
and
jg
sbb
cmp
mov
xchg
popf
mov
xchg
test
mov
cmpl
cmp
fcoml
loopne
cmp
or
mov
adc
push
dec
outsb
inc
bound
dec
in
in
inc
dec
ds
inc
mov
rol
adc
ret
rol
mov
out
clc
stos
pop
or
dec
scas
mov
std
cmp
sub
cli
adc
inc
inc
pop
ror
rorb
scas
mov
fs
das
gs
gs
aam
addr16
fwait
mov
insb
jb
repz
mov
test
mov
bnd
sti
push
or
in
aaa
shl
lods
sbb
lods
push
aas
int3
mov
test
pop
cmp
jne
or
popa
mov
ds
aam
in
out
mov
out
mov
stos
andl
pusha
pop
stos
std
cmc
xor
mov
mov
stos
movsl
lahf
push
sub
xor
je
rcl
ja
or
stos
nop
call
popa
xor
xchg
mov
mov
pop
xorl
lret
fdivrl
jb
iret
mov
addr16
xchg
add
jmp
ds
int3
mov
lret
jns
in
subl
push
test
insl
cmp
mov
aas
pop
sub
cs
inc
rorb
jbe
dec
cli
jbe
rorl
inc
mov
cwtl
popa
dec
in
scas
sbb
stos
or
inc
orl
stos
popa
lods
hlt
fadds
shll
ss
roll
push
push
out
shrl
mov
jp
loop
int
pop
add
aaa
test
push
push
inc
mov
xor
sarb
sub
shrb
fcompl
inc
push
mov
adcl
add
push
adc
mov
inc
imul
lock
fsubrs
shll
jne
xor
clc
sbbl
aam
inc
test
clc
hlt
jne
ljmp
fldl
mov
sub
fdivr
in
sahf
adc
cmp
fstp
adcl
adcl
outsb
bound
or
xchg
pop
jmp
inc
xlat
into
lret
add
je
lret
popf
add
add
pop
sbb
push
and
movsb
push
mov
adc
push
stos
pop
cmp
xor
sub
inc
in
mov
sbb
je
push
push
mulb
push
leave
mov
adc
and
sub
bound
dec
dec
scas
cmp
aas
cwtl
fucomp
jno
inc
push
icebp
imul
fucomp
and
clc
adc
push
repnz
pop
mov
xor
or
pop
fstpt
xchg
mov
outsb
dec
pusha
mov
xchg
sub
push
imul
rolb
or
adc
inc
dec
cli
cli
daa
and
dec
cmc
cmp
add
outsl
cli
jge
sub
fmuls
xchg
arpl
xchg
nop
dec
inc
and
leave
dec
int3
or
xor
or
imulb
pop
popf
xchg
jmp
sub
call
pop
and
pop
push
mov
mov
cmp
jae
cmc
jmp
scas
dec
movsl
pop
loopne
mov
xor
sahf
shll
ret
gs
ja
js
scas
inc
movsl
xlat
mov
imul
shrl
frstor
and
inc
gs
inc
or
add
mov
and
daa
xchg
outsl
mov
sbb
cmpsb
adc
inc
push
xchg
arpl
cmp
fs
sti
cli
xchg
xchg
or
sub
push
add
mov
dec
daa
aad
jecxz
add
mov
pop
pop
in
mov
xor
or
sbb
ret
cld
mov
sub
mov
lret
add
out
gs
js
imulb
filds
dec
mov
jl
dec
scas
int
dec
sahf
cmpsb
sti
lret
push
fisubl
dec
lock
or
ret
frstor
cmp
fcompl
mov
shr
xchg
ficompl
or
rcrl
inc
insb
xchg
xchg
pusha
popl
jne
popf
lahf
fstpt
aas
and
ds
pop
and
inc
test
test
test
mov
push
es
lret
ret
jmp
sbb
jge
mov
inc
cmpsl
mov
pop
mov
push
mov
xchg
add
adc
dec
jle
icebp
pop
repz
xchg
jl
movsb
mov
push
sbb
scas
mov
jne
aas
packssdw
shlb
loope
cs
pop
roll
and
test
icebp
js
xchg
add
stos
hlt
or
jae
xchg
xchg
loopne
cmp
js
pushf
cmp
bound
adc
push
shll
and
inc
ja
push
scas
bound
jle
push
es
fcomip
notl
push
out
clc
pop
out
scas
inc
sub
cmc
sub
movq
cmp
std
sbb
aaa
lods
cwtl
in
lea
mov
dec
inc
icebp
cmp
je
fs
push
sub
mov
test
mov
shl
dec
stos
sti
mov
and
jno
push
xor
mov
jle
in
xchg
or
dec
add
shr
jbe
neg
out
rcrl
dec
xchg
test
sub
psraw
fwait
test
mov
inc
fstl
ja
and
out
test
mov
and
arpl
cmc
ret
arpl
daa
ja
in
lock
sub
cmp
jns
jns
xchg
cmp
push
inc
pushf
std
and
jbe
and
push
sub
cmpsb
fistpll
dec
inc
rolb
in
and
pusha
and
adc
cs
mov
gs
xor
popl
filds
jg
jns
mov
orb
dec
out
addl
adc
lcall
mov
and
fdivl
xor
pop
nop
lret
lahf
loop
rcl
and
jno
pop
mov
pushf
adc
push
outsl
push
shll
stos
cwtl
lods
es
testb
mov
adc
shrl
jae
gs
sub
or
ja
call
dec
and
lahf
out
je
loop
shlb
jnp
addr16
pop
mov
push
sbb
and
shr
loop
mov
xchg
jp
dec
aas
unpcklps
je
in
add
ljmp
roll
or
test
jno
jbe
inc
jge
inc
cltd
xchg
add
jb
inc
ja
repz
mov
jle
pop
scas
ds
mov
mov
mov
or
dec
ret
add
adc
cmp
and
jp
ss
mov
fstl
imul
xor
push
adc
jb
in
pop
add
je
loope
lock
jb
dec
call
lods
je
xor
adc
jae
data16
shl
mov
add
cmp
sub
insb
sarb
fdivr
cmp
and
mov
js
lret
leave
xor
xor
pop
lds
dec
cs
xchg
xchg
xor
xchg
xchg
cmp
mov
add
cmp
jbe
pop
xor
lods
push
push
sahf
test
sub
insl
pop
mov
and
dec
push
clc
mov
loopne
mov
ret
jbe
xchg
jo
dec
stos
das
stos
ficoml
inc
repnz
adc
aad
push
sub
gs
adc
xor
imul
ljmp
jl
inc
jne
add
test
pop
inc
dec
in
pop
dec
jae
jbe
rorl
or
jle
ror
cmp
jmp
inc
and
cld
mov
xchg
fnstcw
int3
push
mov
jg
sbb
mov
or
xor
push
pop
sahf
sub
pushf
mov
cltd
data16
out
jl
push
popf
sbb
push
mov
push
out
stc
mov
outsl
push
and
int
cld
mov
mov
insb
out
in
std
xlat
test
jno
aam
loopne
mov
sahf
push
inc
jge
pushf
sbb
jge
test
sahf
xchg
inc
jne
pushf
sbb
push
fldenv
sub
add
movsb
mov
jnp
iret
fcompl
fnstcw
in
inc
mov
pop
cmp
add
lock
jmp
mov
sub
cmpsl
lcall
movsl
xchg
stos
stos
fs
das
push
fcomp
test
mov
aas
out
cmp
mov
cmp
lret
fwait
in
andw
pop
icebp
cs
add
mov
cltd
icebp
lods
cs
addb
ss
mov
sbb
push
adc
jecxz
aaa
dec
adc
movsb
ret
push
aam
in
iret
std
loopne
test
addr16
dec
push
loop
and
cmpsl
int
xchg
and
lret
shlb
ds
sbb
or
ljmp
imul
pop
push
push
mov
ficompl
or
xchg
xor
jmp
cltd
fldl
sbb
cli
push
testl
dec
das
mov
in
fscale
xchg
push
mov
add
sbbb
fdivr
fisttpll
xor
scas
pusha
xchg
rcr
pushf
sbbl
xlat
sub
in
push
mov
push
mov
inc
aas
xor
pop
xchg
jae
add
adc
stc
mov
xchg
mov
mov
cmp
push
mov
mov
dec
jecxz
cmp
push
xchg
and
clc
movsl
adc
pushf
fdivl
cmp
call
mov
or
loopne
movsl
and
add
cwtl
sbb
adc
cmpsl
cmp
cld
mov
push
cld
in
sbb
lret
inc
inc
arpl
push
push
aad
mov
push
insl
mov
daa
mov
int
repz
imul
orb
pop
ret
decl
push
pop
sbb
dec
pop
je
cmp
je
cld
lahf
add
inc
mov
sbb
dec
ja
or
push
cli
imul
lods
dec
movb
mov
inc
faddl
cli
cmp
mov
cmp
xor
loopne
xor
mov
movsl
jge
aad
push
shll
sti
rcrb
xor
mov
stos
xor
push
into
orl
sub
push
shrb
or
std
sarb
or
adc
add
shll
push
packsswb
xorb
push
lods
cmp
jge
add
or
dec
adc
sub
mov
xchg
xor
test
add
fstps
sahf
popa
inc
outsb
ret
mov
enter
jle
in
push
sti
mov
xchg
xchg
mov
add
test
and
mov
cmp
dec
ficomps
ja
push
movsb
pop
sbb
cmc
xchg
inc
je
jno
dec
ret
mov
jb
add
sub
add
test
adc
pop
out
jnp
imul
cwtl
mov
push
mov
es
pop
nop
inc
daa
adc
pop
xchg
inc
out
push
lock
mov
inc
cli
mov
push
adc
adc
push
data16
mov
xor
pop
add
loop
push
je
test
jb
jns
cwtl
or
inc
pop
ret
ja
dec
dec
jns
mov
cmpl
mov
fs
call
js
aaa
and
stos
repz
test
popa
and
mov
jo
pop
lahf
sub
js
cmp
sbb
and
call
popa
adc
dec
imull
leave
repz
fisttpll
add
sub
or
add
jnp
out
jle
ja
bound
xor
mov
inc
sbb
cmpsl
or
adc
mov
sbb
test
jecxz
out
test
mov
xlat
xchg
xchg
scas
push
test
push
pop
adc
sbb
ret
pushf
std
les
rcrb
and
add
or
imull
loope
push
inc
mov
cmpsb
loopne
dec
data16
mov
add
jns
jns
add
out
dec
jo
xchg
int3
sbb
rcrl
inc
jns
cs
sbb
es
fdivl
rcrb
adc
pop
jmp
adc
lods
mov
enter
xchg
cmp
and
les
ss
cli
and
mov
call
outsl
inc
in
imul
xchg
sbb
xchg
aas
ret
mull
dec
dec
ret
xor
jg
push
xchg
xchg
outsb
jns
repz
enter
mov
inc
pop
das
adc
mov
xchg
sub
jl
pusha
mov
ficompl
lds
lods
insb
push
popf
xchg
sub
xor
idivb
push
sub
stos
cmovge
divb
adc
sub
adc
mov
lods
xor
cmpb
popa
push
dec
scas
aas
cld
mov
hlt
sub
pop
jnp
aam
sub
pop
dec
out
aas
xchg
or
xor
mov
loope
lods
gs
push
push
push
dec
mov
pop
mov
test
mov
mov
leave
jge
cmp
outsb
jno
adc
addr16
iret
jae
jnp
push
popa
pop
jbe
mov
ficompl
and
mov
mov
cld
iret
das
out
imul
hlt
icebp
pop
out
inc
es
js
or
inc
pop
in
cltd
xor
cmc
dec
outsb
mov
mov
movsb
into
addr16
push
scas
mov
sbb
aaa
pop
ret
pop
dec
dec
jmp
jnp
xchg
fisubl
rcrb
dec
add
stos
mov
out
sti
push
aad
cs
rcll
les
or
fidivl
pop
pop
xchg
dec
or
repnz
mov
pusha
std
ret
test
xchg
inc
pop
pushl
lods
popa
sbb
cwtl
gs
pop
and
rorb
iret
mov
mov
aad
pop
or
cmc
popa
lahf
das
sub
ret
loope
push
ret
adc
mov
orb
pop
push
mov
cmp
xchg
add
popa
fstpt
lock
dec
mov
dec
jae
sahf
fnstenv
and
mov
aad
js
push
jbe
and
loopne
mov
push
cli
pop
int3
adc
mov
xchg
mov
iret
stc
pop
out
pushf
mov
loopne
fldt
cmp
jne
xchg
hlt
sahf
pop
mov
inc
xchg
and
test
cmp
cmc
das
sti
nop
lcall
mov
aaa
jbe
sub
cmp
mov
xchg
or
sbb
xchg
sub
and
idivb
adc
enter
and
pop
xor
and
mov
mov
xchg
dec
xchg
test
mov
out
ljmp
in
int3
jp
and
lret
mov
pushf
cmp
scas
sbb
je
test
int3
or
enter
dec
std
lret
xchg
aas
movsl
outsb
arpl
sub
es
mov
shl
xorb
jge
push
mov
mov
sub
xchg
dec
repnz
lods
bound
ljmp
pop
roll
outsb
add
icebp
repz
jecxz
or
in
adc
pop
cmp
insl
sahf
dec
jbe
gs
loopne
mov
inc
inc
fiaddl
cmp
adc
mov
imul
in
out
push
pop
mov
cwtl
xor
cwtl
push
pusha
mov
sbb
sbb
adc
mov
lock
movsl
cli
es
mov
xchg
data16
testb
xchg
test
icebp
sbb
nop
pop
cld
inc
adc
pop
fcmovnu
mov
popa
jne
into
outsl
sub
cwtl
fdivrp
cmc
ficoms
inc
dec
jno
in
push
pop
stos
mov
aad
pop
pop
add
xchg
lods
jp
push
push
jge
pushf
mov
lods
push
icebp
jo
inc
ss
lret
pop
idivl
int3
inc
ja
pusha
xor
popa
orb
xchg
push
int3
dec
scas
test
psubusb
cmp
ljmp
leave
adc
xor
inc
cmp
xchg
cwtl
push
sysret
xorl
lret
cmp
xor
scas
aam
ljmp
andl
jb
mov
jle
int3
jns
jle
dec
outsl
sub
pop
cmp
xchg
aam
mov
out
sub
rol
jns
popf
inc
xor
mov
aaa
push
cld
outsb
subb
movsl
cmp
adc
std
jns
mov
pushf
test
ds
mov
adc
sub
scas
jle
cmpsl
or
xlat
sub
mov
push
inc
jge
repnz
out
lock
cs
xchg
sti
addps
inc
push
xchg
or
inc
ret
imul
jo
fisttpl
es
in
mov
xchg
repz
adc
mov
fildll
xor
push
pop
xchg
adcb
in
and
mov
add
mov
mov
jns
jne
xchg
lret
popa
fcoms
imul
sub
call
movsb
clc
or
push
fcoml
pop
int3
sub
jbe
movl
push
test
leave
sub
cmc
sahf
fadd
or
sub
inc
int3
jle
in
or
movsl
sbb
stc
shll
arpl
cmp
icebp
mov
xchg
jne
adc
add
movsb
xlat
lret
imul
aam
push
imul
and
adc
jge
add
in
jne
pop
dec
jmp
pop
addr16
out
and
mov
pop
xchg
push
push
out
js
mov
mov
in
push
or
mov
fnstsw
insb
jge
decl
shr
icebp
xchg
dec
xchg
mov
jae
inc
and
das
inc
jnp
loopne
ret
dec
sbb
bound
loopne
mov
rolb
insb
inc
imul
pop
jg
out
mov
sbb
cli
out
jae
pop
mov
int
add
lods
push
ds
cwtl
lock
mov
xchg
push
push
ljmp
jl
mov
xor
and
xlat
lret
js
mov
or
push
pop
pop
aad
jecxz
test
sbb
rsqrtps
inc
imul
ja
lds
xor
and
dec
inc
jne
push
mov
or
roll
xchg
fnstenv
divb
inc
popf
loop
xor
jne
pop
popa
mov
into
daa
add
hlt
pop
xchg
into
ror
fisttpll
sbb
pushf
fisttpl
add
push
pop
popa
in
dec
pop
sub
ja
or
mov
mov
mov
fwait
mov
jns
sbb
inc
push
in
rorl
idivb
jmp
or
add
push
and
repz
shl
test
js
push
jle
and
sbb
subl
bnd
rclb
or
es
fstpl
fmull
stc
push
stc
aas
shl
push
ret
sbb
pop
loopne
add
dec
stos
mov
pop
les
inc
test
jnp
xorb
mov
in
scas
jle
clc
stos
xor
push
sahf
movsb
jg
sti
jl
stos
lret
faddl
pop
ficoml
cli
loope
test
mov
mov
cmp
scas
int3
pushf
insb
or
in
cmp
in
and
inc
ret
nop
dec
inc
fsts
push
mov
xor
orps
sbb
fisubrl
pop
sub
add
outsb
inc
add
pushf
out
imul
mov
add
icebp
insl
call
mov
adc
orl
jecxz
enter
pop
pop
clc
das
sub
xchg
aad
pop
jb
enter
fstpl
inc
inc
mov
jae
push
jg
mov
jmp
jbe
popl
push
inc
sbb
popa
movsl
lea
ljmp
add
lret
mov
inc
fldl
lcall
fchs
cmp
xchg
pop
rcrb
sbb
das
vmread
outsb
int3
or
cmp
or
xchg
fisttps
jl
in
mov
or
mov
clc
scas
cli
mov
loope
out
repnz
mov
je
mov
add
add
sahf
inc
enter
cmp
dec
push
push
cmp
pop
inc
mov
mov
test
aas
push
or
inc
pop
ret
insl
mov
loope
lock
mov
leave
outsb
and
mov
xlat
inc
jle
movb
dec
loope
sub
pushf
cmc
xor
cwtl
cmp
fstps
bound
das
rorl
or
inc
jne
cs
pop
pop
or
adc
and
aam
sbb
gs
shll
stos
pop
jle
push
sub
ficoms
xchg
fsts
ret
mov
out
adc
stos
jle
popa
int
shll
dec
icebp
inc
cld
sbb
lds
dec
xchg
rclb
xlat
andl
arpl
jb
inc
shll
dec
fldenv
leave
pop
push
sbb
popa
call
sarl
inc
out
into
sbb
add
addl
orb
sahf
in
rcrb
cs
or
jb
sub
js
inc
aam
cmp
insl
pop
fildl
mov
pop
inc
jle
inc
cwtl
enter
repz
je
call
lock
addr16
sbb
fsubrl
mov
icebp
scas
inc
and
mov
jnp
insb
and
push
xor
jmp
jae
fadds
xchg
loopne
insl
ret
ljmp
sbb
adc
fcomi
gs
popa
xlat
jne
push
mov
fnstenv
and
wbinvd
fdivp
add
adc
push
rcl
sub
xchg
mov
orl
sub
push
jmp
sub
cwtl
jge
pop
push
jmp
adc
mov
pop
sub
jno
sub
orl
faddl
mov
lock
pusha
hlt
scas
xchg
stc
movsb
movsb
xor
inc
gs
repnz
sub
sti
sbb
jle
cli
jno
es
xchg
mov
dec
iret
and
xor
mov
fists
sub
mov
xorl
daa
mov
sahf
sti
scas
loop
stos
pop
insb
jne
sarl
lods
jae
push
xor
dec
cmp
push
xorb
sub
sub
ds
sbbb
js
xor
int
mov
pushf
dec
adc
fwait
jmp
jge
stos
sub
pop
jle
xchg
fisttpll
cld
jb
cmp
mov
movsb
cmp
and
popf
stos
ret
xchg
xor
sub
push
fwait
pop
int
jbe
pop
adc
push
rclb
out
out
xchg
js
fbld
push
cmc
sbb
adc
inc
scas
enter
mov
sub
lcall
sub
lds
inc
jecxz
xorb
rolb
adc
xorl
test
and
into
inc
daa
pop
jmp
jle
cmp
pop
or
jg
xor
dec
sar
pusha
mov
xchg
adc
nop
mov
xchg
mov
imul
sub
jl
fwait
dec
into
pop
pop
scas
fistl
xor
sub
loop
inc
cmp
add
push
dec
pop
inc
xchg
xor
scas
xor
push
movsb
jb
add
add
dec
push
cmp
stos
shll
sar
and
and
pop
push
pop
ficoml
ds
in
inc
or
pop
xchg
ret
pop
jae
dec
gs
fcmovbe
push
dec
cmp
dec
and
int3
dec
sub
inc
outsb
xorl
push
loop
sub
jno
cli
pop
jp
filds
xor
pop
movsl
aad
leave
sbb
xchg
jmp
dec
push
sbbl
lods
rol
ds
pop
insl
jecxz
mov
es
xor
or
jl
stos
cmpsb
ja
push
sub
lret
mov
sbb
push
popf
je
pop
add
out
and
and
movsb
movsbl
push
out
xchg
inc
ret
lcall
inc
icebp
add
popa
push
rcrl
or
inc
cld
push
ja
test
xchg
popf
clc
push
push
sbbb
xlat
montmul
cmpsb
xchg
dec
lds
xor
sbb
shlb
enter
push
mov
dec
loopne
mov
scas
cld
pop
push
ds
les
fsubrs
push
cs
jns
jp
out
in
and
daa
sbb
dec
popa
push
popa
outsl
xchg
jmp
push
cwtl
mov
sbb
xchg
dec
fisttpll
jecxz
mov
imul
repnz
icebp
cmpsl
inc
in
xchg
jge
push
cli
mov
mov
gs
add
adc
jmp
in
into
dec
aas
cmp
outsb
sar
and
test
ret
hlt
lahf
insl
xchg
jnp
shlb
cmp
sub
inc
cmp
loopne
sar
shr
dec
xchg
mov
lret
das
ret
loope
repz
nop
ja
daa
loopne
mov
test
test
inc
pop
out
sti
orl
les
cmp
push
push
mov
or
jge
xchg
out
cmc
sahf
stos
or
xor
cmpsb
loop
inc
pop
push
pushf
adc
data16
and
in
lock
sbb
imul
pop
scas
mov
push
mov
mov
in
ljmp
pop
pusha
arpl
xchg
lret
icebp
and
imull
ret
pop
and
push
lcall
cmp
scas
popa
shl
gs
sub
subl
xchg
lds
pop
repz
daa
mov
fadd
xchg
das
enter
cmpsb
adc
sub
out
cwtl
fnsave
das
mov
pop
scas
jg
push
cmpsl
fnstcw
mov
adc
shll
sbb
lods
out
dec
and
push
dec
mov
push
subb
mov
mov
fisttps
lock
push
dec
lds
dec
mov
push
add
mov
cmc
aas
cs
jp
mov
scas
lock
and
mov
ds
pop
adc
push
daa
add
mov
inc
push
inc
xorl
and
push
movsb
or
push
loope
jge
cmp
gs
sbb
sbb
push
inc
pushf
push
cmp
sbb
xchg
xchg
mov
aas
aad
pop
jne
int3
shl
or
mov
pop
dec
iret
leave
scas
int3
sub
sub
out
psllw
sbb
imul
in
pop
xor
push
mov
scas
push
inc
test
les
jmp
lret
hlt
push
or
xchg
aad
add
jecxz
outsb
loopne
xor
adc
fs
inc
xchg
push
adc
mov
popa
in
sub
sbb
or
xchg
sbb
out
outsb
rcll
xor
into
mov
mov
pop
adc
daa
std
outsl
stc
out
cmpsl
lock
into
mov
or
mov
and
xor
mov
in
data16
rcrl
xchg
movsl
ret
and
xchg
iret
jge
mov
dec
test
in
in
mov
xchg
push
sbb
add
lds
test
idivl
dec
mov
loop
ret
jg
fisubl
xor
fcmovb
sub
stos
add
xor
push
addr16
stos
sbb
mov
loop
push
mov
or
xchg
jge
inc
adc
sub
and
inc
xchg
pop
xlat
repz
mov
mov
leave
fimull
xchg
add
aad
aas
adc
dec
pop
push
in
jmp
push
adc
and
mov
push
loope
cmp
sub
mov
in
int3
rcr
pop
rorl
popa
test
adc
adc
xchg
push
cs
lods
and
and
lret
insb
xor
js
ds
dec
jno
ss
clc
jg
scas
mov
push
mov
cmc
out
cmpsl
fldenv
pop
ret
mov
cmp
adc
xchg
inc
mov
repnz
push
mov
cmp
adcb
lock
sbb
push
push
popa
in
adc
mov
roll
dec
in
mov
push
ja
dec
xchg
bound
dec
test
xchg
jmp
push
stos
addl
xor
xchg
and
lret
sbb
shll
xor
dec
sub
fcoms
sbb
and
mov
repnz
pushf
sub
outsb
add
popa
xor
aad
ss
dec
jae
icebp
loopne
cmp
xchg
hlt
lahf
push
xchg
cmpsl
pop
addr16
pop
xor
jle
jmp
sbb
int
cmpsl
mov
cwtl
out
loope
jnp
adc
jge
stos
int
test
loop
lods
adc
jmp
mov
rolb
jle
es
jb
and
cmpsl
sbb
pop
lods
scas
lods
ss
outsb
fwait
popf
mov
push
bound
cli
cli
out
das
and
mov
int
mov
sub
lea
lods
xchg
fstps
js
cli
call
jp
push
and
cli
outsl
pop
and
test
and
loopne
out
mov
cmp
jmp
ror
sub
fidivrl
xchg
jo
fwait
addb
sub
or
and
xchg
pop
mov
in
xor
outsl
mov
push
cmp
test
imul
mov
lods
cmpb
pop
jo
popf
mov
loope
sub
fnstsw
outsl
xchg
inc
mov
pop
adc
jg
inc
fdivs
xor
mov
ret
jmp
lock
xor
push
ds
insl
dec
incb
scas
test
cwtl
add
and
xor
dec
popa
aad
sub
scas
and
add
jo
push
emms
xor
ss
xor
mov
popa
cmp
cmp
mov
imul
insb
jmp
in
test
bound
das
imul
xor
pushf
inc
and
in
jns
cwtl
sarb
imul
xlat
xchg
scas
mov
xchg
or
sbbl
cli
les
imul
movsb
out
push
jbe
rcl
jb
jnp
lods
fdivr
and
mov
cmp
cmp
popa
mov
mov
inc
pop
js
xor
mov
pop
pop
int
jo
and
mov
test
sarb
fdivp
ret
sub
jle
or
mov
sbb
insb
pop
repnz
and
imul
mov
sbb
push
xchg
dec
jo
scas
or
cmp
jno
jl
mov
mov
mov
add
shrb
dec
enter
scas
bound
ja
push
push
inc
dec
lret
push
add
xor
inc
cli
sub
pop
sbbb
push
cmp
sub
jge
in
test
inc
fldenv
mov
test
mov
or
adcb
pop
push
fwait
push
in
xchg
scas
in
sub
out
sub
cmp
in
lea
lea
dec
sub
mov
xor
xor
mov
cmp
and
mov
mov
aad
and
sti
mov
mov
cld
icebp
sub
inc
jae
outsl
mov
push
int
push
cli
lock
dec
es
mov
sbb
loop
push
in
repz
add
fnsetpm(287
xor
cmpsl
cmp
pusha
aaa
add
mov
popf
out
rorl
jb
sbb
xchg
mov
jge
jb
divb
lock
ja
call
xor
inc
dec
push
and
out
mov
xchg
subb
add
mov
mov
push
mov
popf
adc
rcll
mov
movsb
les
pop
test
and
cmpsl
push
add
in
pop
sub
push
pop
or
mov
sbb
cmp
lahf
popf
shll
sti
das
mov
fimull
nop
jmp
jo
outsb
inc
mov
mov
cmpb
jecxz
dec
and
sar
imul
jb
xlat
pop
push
lods
dec
xchg
js
enter
cli
movsl
out
into
adc
movsl
push
xor
dec
nop
roll
dec
xor
test
and
push
xchg
aam
push
repz
int
inc
or
adc
sub
fidivs
test
sbb
les
ror
sbb
dec
mov
cmp
test
fildl
lock
mov
pop
lock
sbb
push
xor
dec
push
add
pop
fcomip
fisttps
or
lock
lds
outsb
inc
mov
xor
mov
mov
xchg
lcall
imul
and
stos
aad
xchg
pop
ljmp
aad
nop
in
cmc
outsb
add
adc
bound
enter
xor
stc
dec
jnp
push
mov
repnz
test
pop
lahf
int3
outsl
cmpsl
add
or
ljmp
dec
stos
mov
or
mov
mov
sub
mov
int3
or
movsb
cmc
testb
mov
xor
aam
daa
je,pn
movb
fs
pop
imul
sub
inc
scas
sub
mov
jl
mov
lahf
or
fdivs
cmpsb
cs
mov
push
jno
cmpsl
xor
aad
int
pop
cli
jae
xor
push
lods
sbb
add
cmp
mov
mov
lcall
test
and
scas
pushf
mov
les
xchg
mov
mov
adc
addr16
cwtl
mov
pop
cmp
jl
sbb
sbb
idivl
cld
pusha
jmp
xor
xor
cmpsb
test
cld
mov
sbb
pop
or
adc
pushf
mov
stos
fs
xchg
push
push
sub
push
sub
adc
xchg
jmp
cwtl
cs
mov
cmp
mov
ljmp
add
adc
cmp
xor
cltd
dec
inc
jb
inc
in
mov
pop
sbbb
adc
push
push
out
pop
fistps
inc
and
cmp
xor
fcompl
mov
fisubs
out
mov
testb
lea
mov
dec
adc
outsl
ja
lods
xor
sahf
jnp
fistps
lahf
shr
mov
out
mov
dec
sbb
and
mov
pop
mov
jecxz
arpl
subb
mov
push
movsb
fsubrl
adc
shlb
stos
insl
adc
test
jl
mov
add
push
mov
aaa
aaa
push
mov
lcall
mov
xor
imul
inc
and
loopne
mov
iret
call
fs
mov
shrb
scas
call
xlat
pop
add
add
dec
sub
xchg
mov
lock
mov
sbb
mov
adc
cmc
rcrl
dec
test
and
xor
add
outsb
lods
jmp
outsb
pop
pop
enter
fcoml
adc
lods
sub
push
nop
cmpsl
out
pop
fdivrs
xor
cmp
pop
rclb
sub
repnz
rclb
ja
subb
ljmp
int
lcall
xor
arpl
xor
sbb
sbb
ss
pusha
outsl
cmp
xchg
push
xchg
lret
fcoms
xlat
int
inc
lods
inc
aam
mov
mov
add
lods
int
xchg
jbe
push
je
sub
mov
data16
ss
into
xchg
divl
mov
push
and
pop
arpl
aaa
mov
mov
mov
mov
shrl
in
push
jle
push
pop
test
cmp
adc
sbb
fcoml
nop
and
or
xchg
mov
dec
roll
sub
push
inc
or
movsb
aam
jns
in
mov
ljmp
lds
ljmp
or
cld
les
fisttpl
pop
adc
jmp
mov
add
rcll
fcmovb
hlt
ret
stos
loope
jle
jbe
test
push
stc
and
cli
notb
mov
mov
cli
mov
fadds
test
cmp
add
mov
ljmp
enter
test
jno
dec
xchg
daa
iret
les
clc
pop
in
mov
lds
sbb
mov
nop
dec
scas
push
hlt
xchg
lods
xor
or
out
repnz
out
sub
jae
out
xchg
cmpsl
iret
dec
mov
xor
sarb
scas
cmp
cmpsb
and
int
test
mov
pop
mov
lret
cmp
jecxz
cmp
push
dec
adc
stos
inc
test
rcll
and
mov
inc
mov
sbb
inc
xchg
fistpll
sti
fisubl
cmpsl
aas
mov
sbb
dec
pop
mov
cmp
ret
icebp
lock
pop
adc
paddq
fisttpl
push
jecxz
cmc
xchg
gs
imul
leave
clc
addr16
imul
cwtl
or
loop
sub
push
cmp
or
cmp
je
adc
xchg
negb
mov
push
and
xchg
sub
adc
pushf
or
jnp
aaa
sbb
mov
xchg
jmp
pop
xchg
add
push
pop
or
mov
test
xor
andl
push
jmp
icebp
dec
stos
pop
dec
mov
adc
lea
sbb
add
fisubs
loopne
ljmp
mov
jmp
jb
aad
aad
rclb
test
xchg
test
les
mov
mov
push
mov
and
cmp
insl
ficompl
mov
sti
jmp
cli
xchg
or
inc
lock
lods
imul
mov
frstor
test
sbb
dec
popa
inc
jb
cmp
out
into
pushf
jmp
clc
xchg
mov
xchg
cmp
popf
add
ja
rol
sbb
in
mov
mov
add
imul
popf
loopne
cmp
add
sar
loop
push
pop
xor
pop
xor
push
movsb
lret
sub
stos
arpl
and
sub
jmp
fwait
cmovle
mov
out
xor
insb
test
loop
add
mov
sbb
out
jmp
nop
call
std
cmp
mov
cmp
pop
ja
ja
std
inc
mov
aad
in
insb
test
ss
aad
jl
sahf
das
aaa
pop
in
dec
pushf
dec
div
sti
jg
pop
inc
int
jg
int3
lods
cltd
cld
js
cmp
mov
cmp
jo
xchg
leave
push
add
push
stc
nop
cmpsl
das
pop
ja
push
daa
repnz
cmc
int
xor
lahf
sub
sti
iret
add
aam
mov
orl
jne
dec
movsl
adc
push
hlt
xchg
push
mov
repz
outsl
mov
or
adc
les
xchg
dec
clc
or
das
pop
in
push
jmp
or
notb
lea
dec
outsl
das
nop
lds
inc
ret
mov
mov
or
push
stos
out
xacquire
cmp
xchg
jns
or
es
adc
mov
mov
mov
xchg
std
inc
mov
pop
sti
mul
in
inc
pop
icebp
cmc
adc
int3
shrl
fbstp
aam
push
xchg
push
xchg
testb
or
lods
push
nop
jb
pop
push
popf
push
fiadds
sub
mov
lcall
notl
mov
mov
sub
dec
xchg
add
lods
inc
cld
and
in
cmp
xlat
cmp
lods
fcmovnbe
xor
into
js
insl
movsb
nop
xchg
xlat
xchg
lret
dec
in
mov
insl
testl
dec
xchg
fisttpl
sub
add
mov
cmp
add
lret
and
mov
jae
sbb
sbb
movsl
repz
or
adc
movsb
jae
mov
push
dec
mov
push
xchg
xchg
and
cmp
rol
cld
sub
jmp
fcmovnb
cmc
lods
cmp
jb
out
jle
jg
es
lret
addl
scas
les
xchg
rorb
add
fisttpll
out
xchg
fucom
scas
in
mov
in
leave
frstor
cmpsl
cmp
jge
das
adc
dec
push
das
es
jns
in
lods
lods
push
cmpsb
aas
aam
jle
and
cmp
cmp
xchg
out
ds
scas
sar
cmp
dec
mov
lret
negl
aad
sbb
cmpsb
mov
xchg
xor
mov
iret
sarb
adc
icebp
mov
repz
add
xchg
and
nop
jl
xor
pop
or
pusha
clc
sbbb
lods
cmp
inc
mov
mov
in
pushf
fidivrl
push
cltd
cwtl
push
scas
scas
cmp
ja
arpl
or
cmp
scas
scas
lret
and
sbb
push
fbld
jae
mov
xlat
jmp
js
pop
mov
ret
xchg
add
cmpsb
dec
sbb
cs
out
xor
inc
in
stc
imul
outsl
and
and
in
insb
sahf
or
or
cwtl
xchg
gs
enter
sbb
mov
xchg
mov
mov
push
arpl
sub
pushf
jle
mov
dec
int
xchg
push
sub
in
jbe
mov
mov
out
in
dec
popf
repz
scas
imul
popf
cwtl
push
sub
push
fnstcw
xor
arpl
in
lods
dec
in
mov
ret
push
push
enter
mov
shl
cld
test
popa
pop
and
div
cmp
fs
xchg
inc
ret
xchg
sbb
push
dec
inc
pop
dec
xor
xchg
mov
ret
xor
xchg
pop
dec
andl
and
sub
scas
cwtl
push
sub
and
mov
push
cmp
mov
test
outsl
stos
shr
or
adc
pop
inc
mov
rcll
cmpsb
outsb
in
sahf
or
and
aam
mov
test
fidivl
sarl
in
jle
repz
imul
or
lret
cmc
cs
pop
dec
cld
in
lret
inc
xor
sub
xchg
fimull
sahf
or
mov
rcr
fwait
or
sub
popa
in
xor
stc
push
rorl
xlat
jg
mov
sti
into
arpl
dec
subl
iret
dec
in
add
or
out
mov
out
mov
inc
in
or
jno
fwait
or
movsb
addr16
mov
add
inc
dec
insb
hlt
pushf
jne
jmp
mov
cs
inc
pop
insb
jnp
sbb
repnz
pop
sbb
jg
mov
fwait
js
push
pop
mov
outsl
cli
jo
mov
ret
xor
lock
dec
mov
sbb
movsb
xor
xchg
xor
ret
xchg
pop
je
addl
add
icebp
aam
lahf
inc
add
xor
int3
iret
jo
push
sti
xor
xchg
ret
rorb
shrl
mov
mov
xchg
xchg
lock
aas
xchg
or
les
and
mov
addr16
mov
xchg
sbb
sbb
test
mov
test
adc
cmp
cmpsl
vmovlpd
negl
or
sbb
or
and
inc
mov
subl
ss
xor
jmp
icebp
adc
inc
sub
cmp
add
add
xchg
jnp
clc
pop
iret
aad
fwait
es
add
jle
fcmovnbe
xor
dec
fstl
mov
pop
jne
aaa
inc
loopne
dec
enter
adc
push
fdivl
xor
out
or
lret
jo
dec
popa
scas
jne
dec
mov
in
pop
fisubs
sub
cltd
jno
lahf
xor
pop
jmp
dec
inc
mov
or
xor
insb
leave
aad
inc
pop
test
int3
jo
rcrb
pop
sub
jnp
out
in
jg
out
push
popf
decl
mov
mov
std
leave
or
mov
xchg
pusha
dec
cmpsb
idivb
inc
xor
cltd
adc
and
cld
rol
lods
jge
jle
mov
loopne
pop
frstor
shrb
xor
pop
mov
or
jl
fadds
cmp
or
ret
push
lahf
insl
cmpsb
arpl
cmpl
lret
mov
loopne
push
lret
or
negb
lret
mov
loopne
adc
inc
pop
xorl
popa
scas
pop
xchg
or
mov
lods
xchg
ja
loop
outsb
xchg
loop
xchg
imul
jo
mov
jge
fs
xlat
sahf
push
jnp
lahf
jge
data16
std
cmpsb
push
lret
movsb
push
rcrb
pop
test
mov
test
imull
insl
stos
dec
fwait
dec
sub
inc
fbld
jne
not
into
jge
push
fstp
jbe
ret
push
push
sub
xchg
sub
mov
orl
les
imul
xchg
xacquire
test
mov
daa
jl
out
xchg
jae
inc
dec
push
or
in
iret
sbb
repz
fstl
jl
shlb
fcmovne
cmpsb
testl
sub
xchg
mov
int
ficomps
lahf
int
adc
push
sbb
fsincos
push
dec
mov
je
jl
dec
pop
cmp
cltd
shlb
mov
mov
movsl
jns
adc
add
jl
cmp
sub
sbb
mov
push
cmpsl
mov
mov
mov
cmp
sub
push
enter
xor
outsl
mov
jbe
push
ret
arpl
mov
and
or
sub
icebp
sbb
loop
add
fisttpll
xor
fimuls
int
adc
sbb
adc
faddl
mov
nop
inc
mov
inc
dec
out
mov
mov
imul
mov
mov
sub
and
mov
cmp
insl
push
ficompl
xchg
ret
xor
mov
inc
cmp
sbb
and
repnz
or
mov
lods
xchg
push
out
jae
cmpsb
push
sub
add
pop
push
adc
rorl
pop
stos
scas
out
inc
test
sti
add
xor
sbb
xchg
xchg
shlb
das
idivl
iret
and
out
xor
inc
test
push
xchg
insb
outsb
and
sub
shrb
xlat
lret
lret
pop
sbb
xchg
sub
cmp
imul
mov
scas
sbb
push
mov
sbb
sub
clc
inc
mov
fnstcw
imul
cs
call
dec
and
mov
lods
adc
sbb
stc
mov
inc
inc
add
fnstcw
mov
jg
sbb
push
pop
ffree
lea
pop
sub
mov
jne
mov
jg
jb
les
imul
lds
sub
add
sub
xor
cs
dec
pop
rcl
callw
aaa
push
or
stos
sub
xchg
mov
jnp
or
jne
pop
lods
idivb
repz
andl
in
ss
pop
add
sub
in
pop
aad
js
repnz
xchg
cmp
aam
cmc
mov
ret
sbb
push
pop
pop
jge
pop
fs
mov
push
sbb
inc
das
ja
movsl
mov
push
aas
dec
jl
xor
mov
lds
xor
inc
stos
jns
mov
mov
movsl
mov
mov
push
adc
mov
jle
cmpsb
bound
xor
xor
inc
cld
jmp
cmp
push
test
cmpsl
lret
stc
or
movsl
sbb
aad
jae
mulb
pop
andl
aaa
cmp
iret
inc
pop
pop
fdivp
and
lods
rcr
xor
jmp
ret
adc
adc
sub
fcoms
or
out
inc
adc
sbb
leave
jns
aaa
push
lds
inc
jmp
dec
clc
or
mov
push
in
jmp
rcll
inc
sub
stos
aas
arpl
sbb
mov
jne
lahf
pop
je
push
jb
lock
scas
sub
jb
repz
scas
scas
xor
shll
mov
push
push
ds
push
adcl
xchg
iret
sub
sbb
push
data16
out
stos
clc
xchg
nop
push
push
hlt
test
shl
das
jl
adc
jge
cmp
and
xchg
ret
fs
lcall
mov
outsl
lods
sub
cld
js
mov
lcall
mov
ret
les
shll
addr16
jmp
fistpl
js
popl
cmpsl
mov
or
sbb
ja
or
push
aas
pop
inc
sbb
icebp
pop
pop
fldt
dec
mov
xchg
mov
jnp
add
mov
pop
adc
mov
in
xchg
ret
mov
push
shll
aad
hlt
xchg
and
leave
jl
out
in
int3
les
decb
iret
gs
idivl
bnd
fistl
push
cmpsb
in
and
jo
mov
scas
cmpsl
mov
sub
pop
mov
mov
pop
call
push
popf
hlt
jne
dec
jb
xor
mov
sub
sbbl
cs
stos
mov
and
sub
pop
adc
sub
jne
push
jmp
push
ret
cmc
je
dec
mov
stos
in
xchg
repnz
mov
pushf
movsl
repz
or
mov
cmp
and
lcall
icebp
sub
sbb
out
xor
pop
ja
inc
cmp
sbb
cmpsl
mov
sub
xchg
cmp
in
repnz
leave
cwtl
push
push
out
les
loope
out
hlt
cmp
call
lret
loopne
sub
mov
je
inc
out
data16
dec
fnsave
out
fsts
shll
push
mov
xor
mov
cmpl
leave
cltd
adc
dec
mov
ljmp
mov
sub
les
shr
out
adc
add
hlt
xor
dec
pop
mov
pop
and
stc
out
mov
test
enter
pop
pop
dec
jp,pt
mov
sbb
fcompl
bound
mov
ret
filds
stos
fucomip
push
loopne
pop
fidivs
shl
ret
mov
sarl
push
xchg
sbbb
inc
movsb
xor
xor
add
leave
cmp
dec
cmpsb
loopne
mov
sbb
ss
jl
imul
cmpsb
jmp
mov
cmpsb
inc
mov
cmp
fimuls
mov
in
jp
popa
jmp
in
mov
push
cmp
std
xchg
leave
lret
jae
mov
add
insb
rclb
ja
xchg
xchg
inc
xor
mov
decb
jno
ljmp
sbb
lea
hlt
fmuls
arpl
cmp
ret
dec
sbb
sbb
jne
push
or
clc
pop
test
add
push
test
sub
dec
cmp
dec
push
sub
lret
pusha
mov
inc
pop
push
sbb
insb
add
push
dec
scas
test
jns
xchg
sbb
cmp
sub
dec
sub
movsl
in
fistl
and
aam
pop
sbb
jg
and
scas
out
mov
push
and
pop
out
icebp
jp
dec
sti
stos
adc
test
dec
sti
jecxz
jno
jb
aad
xor
push
iret
add
rolb
sub
pop
cli
lds
inc
sbb
or
mov
hlt
int3
push
sbb
dec
xorb
int3
out
and
movl
dec
jg
aam
sbb
inc
cmc
lret
jmp
in
jecxz
inc
dec
adc
mov
xchg
movsl
scas
mov
xor
dec
repz
pop
in
les
xlat
int
loope
lcall
cmp
shl
es
or
lds
adc
rcl
push
aaa
inc
in
int3
mov
dec
clc
inc
mov
sahf
daa
insb
or
push
movsl
mov
jg
pop
sahf
inc
lret
enter
cld
push
sbb
dec
sub
push
mov
mov
cmp
xchg
and
fistpll
sub
jp
test
sbb
push
mov
mov
pop
faddl
inc
sbb
and
insb
mov
dec
xchg
addr16
fnstcw
jns
aam
out
jp
xor
sarb
mov
pop
and
cmc
loop
les
jns
inc
loope
or
mov
mov
pop
shlb
jp
push
cmp
in
adc
fstl
mov
pop
cli
pushf
pop
mov
pusha
dec
bound
add
out
inc
lea
cwtl
dec
addl
add
ficompl
cmpsl
aam
push
xor
rcrb
mov
lret
rclb
ljmp
into
cmp
lds
or
push
jae
add
sub
int3
mov
test
and
ljmp
and
adc
jns
jp
int3
or
out
nop
lret
lret
sub
pushf
insb
pop
out
xchg
inc
shlb
daa
push
test
out
jo
xor
cmp
lret
scas
cmp
pop
ret
int
jmp
aad
xchg
xchg
or
sti
fcoms
nop
fdivr
sbbb
xor
int
pcmpeqd
ss
das
push
push
repnz
sub
fnstsw
ds
xor
xchg
test
scas
cmp
lock
push
adc
aam
adc
in
ljmp
sbb
xchg
lea
sbb
cmpsl
push
leave
cmp
notl
lcall
jle
incb
fwait
popl
daa
in
push
and
or
cs
jno
outsb
cmpsb
mov
sub
xchg
clc
dec
mov
cmc
mov
shll
push
mov
push
mov
imul
jbe
xchg
bound
push
push
ja
ret
into
jno
aaa
xchg
push
out
push
popa
fistl
jp
mov
dec
cmp
pop
jno
xor
mov
rol
mov
xrelease
sub
push
xchg
push
minps
sub
rcrl
xlat
mov
pop
leave
dec
mov
jle
test
bound
fldt
xchg
cltd
outsl
jbe
outsl
sub
xor
inc
fsubr
ss
outsl
mov
loope
sti
iret
mov
insl
movsb
push
aam
std
jne
shlb
loope
jp
xor
xchg
jge
sub
xchg
adc
stc
or
mov
mov
pop
dec
icebp
push
jge
dec
mov
divl
insb
pop
popf
mov
cmpsl
mov
je
jl
xchg
push
xchg
adc
outsl
mov
cmp
xor
out
xorb
scas
mov
jecxz
lods
add
mov
call
xlat
int3
and
mov
sbb
fstpt
in
jg
push
xchg
out
stos
and
cmpl
cwtl
inc
or
out
lcall
loopne
hlt
out
fcoml
lret
scas
movsb
mov
ja
mov
int3
mov
inc
or
pop
and
insl
inc
clc
cmpsb
into
out
test
repz
xchg
dec
icebp
xlat
cld
or
ficoms
push
mov
mov
xchg
rcl
push
jmp
push
adc
push
cmp
xchg
cmp
sahf
jns
xlat
ja
rorb
xchg
in
mov
and
or
fsubrl
inc
cmc
lds
sbb
insb
sub
mov
lahf
leave
xor
dec
adc
pop
pop
or
je
dec
mov
dec
test
gs
je
mov
sbb
repnz
loope
add
fsubr
jle
mov
jbe
jp
in
lret
xchg
scas
pop
or
mov
leave
scas
push
cmpl
pop
adc
fs
rclb
jb
lock
imul
mov
cwtl
push
orl
pop
insb
mov
pushl
jecxz
cltd
shl
movsb
mov
mov
push
leave
sbb
jae
xlat
push
mov
lock
lret
out
aam
mov
jne
push
and
dec
insb
and
pop
pop
mov
insl
xchg
mov
sub
es
push
imul
xchg
mov
push
mov
cmp
or
cmpsl
imul
xor
adc
js
dec
jecxz
shlb
lods
pop
lds
push
out
lcall
lods
dec
dec
dec
pop
inc
fsubrs
xlat
loopne
mov
stc
inc
sub
jnp
mov
hlt
rcll
push
and
inc
jmp
pop
aad
and
js
and
mov
pusha
xchg
push
and
fstps
or
inc
jp
inc
int
cmp
js
ja
aaa
and
cld
lretw
xor
jbe
push
fadds
aam
loopne
xor
cmp
sbb
dec
mov
loope
pop
pop
jle
cmpsb
sbb
jae
adc
sub
jbe
std
push
and
rcrl
ds
sub
fstpt
lea
sub
cmp
jg
adc
outsb
fisubrs
cmp
and
and
or
mov
mov
call
xchg
ret
je
sbb
ja
mov
imul
mov
lds
adc
inc
ljmp
push
out
jbe
lret
or
cld
das
adc
push
xlat
mov
push
mov
sbb
xchg
pop
and
or
fs
push
mov
aam
out
incl
and
cmp
in
adc
xchg
out
out
adc
push
add
stc
mov
negl
pushf
sbb
das
xchg
lea
add
dec
push
out
aad
sahf
fs
scas
mov
sahf
ss
pushf
dec
movsl
jl
test
mov
loop
popf
jle
inc
test
cmp
shll
cmp
cli
sbb
push
or
out
movsl
push
mov
or
push
xchg
add
fcomps
push
push
jb
inc
pop
lods
imul
hlt
xchg
jns
movsl
jns
mov
jne
fcmovb
in
inc
fdivrl
test
ret
push
dec
push
loopne
out
mov
push
mov
pop
fadds
outsl
push
push
sub
stos
jecxz
popf
loop
iret
sbb
sbbb
in
fnstsw
push
push
inc
mov
inc
fwait
lods
add
aas
nop
sub
or
outsl
leave
rcr
and
or
mov
ja
pop
pop
mov
ret
das
stc
push
lds
lock
ret
cmpsb
in
loop
lret
in
dec
outsl
push
sbb
out
cwtl
aas
mov
inc
xchg
pop
scas
movsb
cmpsl
bsr
xor
mov
dec
lea
and
add
cmp
fadd
test
xchg
mov
or
idivl
push
mov
imull
pop
shll
fldenv
aad
in
les
sbb
mov
jno
ret
imul
sbb
icebp
popa
cmp
mov
imul
add
xchg
mov
or
outsb
pop
lcall
dec
aas
mov
push
mov
jne
fisubrs
out
jp
ljmp
cs
sub
jbe
sub
cmpsl
fcmovbe
test
int
sbb
aad
jns
ss
cmp
stc
aaa
dec
lcall
and
sahf
shlb
adc
clc
and
mov
cmpsl
jmp
cwtl
lods
test
fsubp
stc
dec
dec
idivb
popa
stos
sbb
pop
or
fisttpl
sbb
sbb
sub
add
xchg
cltd
pop
cmc
sbb
mov
dec
cltd
jo
add
test
ja
out
out
jb
cmp
sahf
pop
lret
push
or
jge
jl
adc
int
rcll
mov
aaa
pop
aad
sbb
pusha
shll
repz
mov
js
mov
rcrl
and
shlb
sahf
into
pop
mov
inc
mov
scas
stos
dec
push
lahf
mov
fwait
sbb
push
addr16
scas
int3
testb
add
std
imul
stos
jp
pop
fwait
xor
jno
or
sbb
mov
xchg
enter
out
pop
mov
adc
imul
lcall
jbe
dec
das
sub
cltd
mov
pop
cmpsl
pop
push
push
fmuls
fiaddl
andb
lock
cmc
testl
pop
lcall
sbb
cmc
cmp
pop
inc
nop
mov
mov
pop
rcr
mov
loope
jmp
xor
popa
movsb
inc
jle
mov
cmpsl
pop
add
into
nop
or
mov
sti
movaps
lret
fstpl
fbld
add
sti
nop
lret
mov
int3
sbb
aas
bound
imul
and
pop
mov
add
adc
lcall
mov
sbb
sub
lods
fwait
in
xchg
arpl
std
xchg
jae
mov
add
cmc
ret
pop
or
jecxz
fsubrl
mov
add
mov
push
sti
iret
in
sti
xor
or
dec
decb
daa
push
lods
clc
iret
clc
ja
lods
cmpsl
push
and
push
lret
mov
inc
into
jns
inc
and
jae
sub
cmp
sub
jg
push
sub
or
imul
insb
rcl
or
add
testb
loopne
aaa
push
pop
mov
repz
ret
arpl
test
pop
nop
ret
dec
movsl
xorl
enter
inc
adc
cmp
xor
inc
add
adc
inc
pop
sbb
mov
mov
sbb
js
pop
dec
out
mov
outsb
mov
xchg
and
pop
cmpsb
popa
nop
adc
std
mov
in
push
jns
push
adc
adc
push
sbb
out
lea
jb
adc
mov
pop
sbb
sub
jbe
jl
scas
lret
or
insl
es
test
andl
ja
movb
push
lret
out
xchg
cmp
mov
cmp
mov
jo
add
inc
in
lret
cmpsl
stos
jl
fisttps
inc
adc
xor
sub
pop
icebp
pop
call
and
dec
lret
sbbb
fcmovne
mov
ds
fs
and
lahf
sub
dec
lods
ret
cmp
add
adc
cmpsb
xchg
imul
inc
sub
out
dec
test
mov
lea
stc
mov
jl
fldenv
or
dec
adc
insb
mov
test
idivb
sub
ret
cmc
xchg
xor
mov
shr
daa
cmp
pop
fsts
dec
push
loop
mov
cmp
inc
xchg
testb
stc
cwtl
inc
dec
mov
xchg
lahf
inc
lret
mov
daa
outsb
dec
push
sub
push
add
mov
or
and
push
subb
int
jns
lret
cmp
or
int3
pop
push
mov
sub
lret
in
mov
and
mov
mov
dec
mov
es
fisubl
jg
pop
mov
sub
les
shl
or
fstpl
sarl
cli
into
sub
es
jmp
insb
jge
mov
jle
xchg
idivl
test
pusha
shll
pop
push
add
icebp
insb
xchg
xor
jecxz
xor
inc
push
ljmp
xor
repnz
cmp
xchg
pop
rcrb
clc
mov
or
aaa
in
movsw
pushf
dec
mov
push
repz
mov
jb
push
jnp
xchg
adc
mov
pop
stos
or
mov
jmp
add
inc
test
shrl
das
fnsaves
dec
mov
mov
lret
xor
iret
fadds
mov
xchg
sbb
xchg
sbb
push
and
push
call
jnp
or
sub
push
hlt
andl
xchg
cmc
mov
push
test
push
mov
dec
scas
shlb
cld
je
add
push
pop
pop
add
adc
out
stos
cmp
mov
outsl
mov
push
cmp
cmpl
push
loopne
sbb
inc
lods
xor
icebp
out
adc
xor
sar
mov
mov
xchg
mov
shll
mov
mov
insl
push
out
or
pop
mov
cmp
mov
in
movb
int3
push
jae
loopne
sub
popa
ret
iret
scas
and
loopne
sarl
dec
cmp
and
push
lea
scas
xor
adc
xor
out
rcrb
dec
xor
inc
push
push
sbb
add
out
ja
bound
sti
push
in
das
pusha
cmp
dec
lock
lock
mov
dec
subb
inc
rep
neg
cmp
sub
sub
dec
int3
aam
test
lcall
dec
popa
xchg
cltd
insl
dec
enter
iret
or
pusha
int
lock
stos
popf
repnz
lods
fwait
icebp
xchg
sbb
aad
lea
jo
add
push
adc
cli
or
stc
xor
inc
loop
fwait
test
arpl
and
ja
add
add
mov
dec
ds
loope
dec
cmp
mov
or
xlat
adc
ss
scas
cmp
das
ret
js
xor
test
inc
adc
aam
mov
push
sbb
ljmp
and
jnp
pop
xor
out
sub
add
add
mov
xchg
rorb
negb
mov
imul
add
xor
bound
and
xor
lcall
inc
dec
imul
xlat
aad
xchg
fs
and
sub
lock
repz
xchg
int3
mov
bound
pop
sbb
mov
cmpsb
cli
sbb
cli
nop
xchg
std
mov
shll
subb
sub
jle
fcomip
hlt
stos
pop
cmp
and
add
and
insb
add
pop
jbe
arpl
data16
ror
test
loope
cmpsb
push
stos
ret
cmp
fldenv
xchg
stos
mov
rcr
lock
cs
push
xor
dec
imul
cmp
add
sbb
mov
mov
jp
in
je
cmp
pusha
mov
es
and
pushf
roll
stos
cmpsl
and
fs
into
adc
repz
rcrl
xchg
adc
adc
outsl
in
xor
out
fwait
adc
mov
stc
pop
fistpll
pop
sub
mov
fwait
push
leave
pop
out
or
jl
int3
sti
push
push
or
add
testl
xchg
push
dec
mov
out
push
sbb
or
aad
movsl
add
cs
loope
jne
push
xchg
lods
xchg
or
xchg
inc
or
xchg
lods
mov
and
push
xchg
test
sbbl
sbb
sahf
inc
andl
pop
push
aam
push
lahf
enter
xor
jno
and
mov
imul
lods
sarl
scas
shrb
setb
adc
dec
xlat
int3
orb
mov
dec
nop
call
cmpsb
out
fistpll
or
and
adc
push
mov
test
cmp
cmp
push
imul
out
fadd
xor
adc
lea
clc
jge
mov
in
data16
xor
stos
arpl
add
push
mov
scas
imul
arpl
cli
fcomi
std
inc
in
mov
jne
push
int3
jne
arpl
and
movsl
sub
sbb
xor
inc
clc
clc
mov
loope
cmc
mov
in
pop
sarb
jle
fdivl
subl
lock
rorl
test
das
mov
push
lret
gs
rorl
insb
mov
aad
and
add
mov
push
jge
sbb
scas
mov
inc
xchg
mov
add
xchg
call
les
ljmp
into
inc
or
or
les
movsb
and
dec
mov
clc
das
xchg
fwait
adc
fucomip
es
cld
or
js
int3
test
xor
daa
mov
dec
jb
scas
pop
inc
dec
xor
daa
sub
dec
sar
das
out
xchg
or
mov
adc
sub
ret
mov
enter
aas
int
push
or
xor
cmp
jns
dec
fstp
xor
pop
or
mov
test
bound
add
pop
xor
mov
scas
mov
mov
mov
mov
in
out
xor
push
inc
shll
xchg
cmp
out
dec
inc
pushf
jno
mov
sbb
or
xor
test
mov
sbb
pop
mov
lods
jb
push
mov
mov
pushf
xchg
or
push
shl
int
lods
leave
mov
xor
sahf
shll
mov
pop
push
xor
fcomps
xchg
jo
mov
add
pop
dec
and
adc
daa
out
es
popa
xor
mov
jnp
rorb
sbbl
add
insl
cmpsb
fsts
mov
pop
iret
outsl
sub
rol
es
pushf
pop
and
add
ss
mov
mov
inc
adc
jp
das
dec
sbb
orb
out
dec
outsl
sbb
mov
in
rclb
repz
inc
lahf
pop
pop
popf
push
push
mov
out
and
xchg
mov
pop
adc
xchg
dec
in
dec
cmc
mov
lret
lahf
lcall
mov
push
jno
jmp
pop
cmp
fisubs
cli
or
xchg
sub
nop
xchg
lds
jo
mov
shr
sbb
imul
pusha
sbb
test
push
gs
xor
and
pop
jg
dec
jmp
pop
sarb
lcall
cld
hlt
mov
jbe
lea
test
je
hlt
shrl
push
jae
ret
sub
pop
aaa
cmc
mov
pop
fstpt
push
ss
push
fadds
add
pop
jae
cmpsb
adc
je
outsl
mov
or
mov
enter
ret
pop
pop
out
mov
inc
add
sub
cmp
sub
movsb
in
lret
xchg
fidivrs
jg
out
test
jmp
adc
sahf
cs
jmp
or
rcr
outsl
push
jnp
out
js
insb
push
lcall
jge
sbbl
xchg
pop
or
int3
in
orb
dec
cmp
jl
or
cmp
je
adc
xor
enter
and
ret
sbb
push
imul
inc
inc
pop
mov
jae
dec
iret
pushf
add
scas
aam
cmp
xchg
mov
imul
shll
imul
fsubp
daa
clc
xchg
cmp
shlb
jnp
push
pop
fistpll
adc
lahf
cltd
shlb
xor
int3
pop
pop
inc
nop
loope
cmp
test
scas
loopne
and
shll
cli
cmc
in
lahf
add
and
mov
and
test
movsl
push
mov
out
mov
cmp
stc
lods
test
out
ljmp
stos
dec
push
out
lea
adc
and
xor
ds
imul
rcrl
pop
inc
push
stos
and
lods
mov
push
sbb
les
xor
xchg
leave
mov
lret
popa
stos
xor
jae
adc
out
fs
jae
cmpsl
popf
ficoms
pop
push
mov
sub
mov
loope
inc
lret
stc
movsb
je
lea
loop
rcrl
cmp
int
or
adc
std
inc
xchg
stc
sahf
mov
and
enter
iret
negl
jmp
add
testl
inc
loopne
fmull
loopne
xchg
out
arpl
aas
out
cmp
add
push
pop
call
clc
cmp
push
jae
adc
call
jmp
fimuls
mull
lods
push
mov
adc
stos
inc
out
dec
jmp
pop
add
loop
sub
sahf
adc
cmp
mov
inc
cmp
mov
jno
cmp
les
enter
notb
popf
cmc
and
loop
into
daa
insl
dec
das
movsb
js
push
movsb
push
hlt
xchg
clc
movb
sbb
sbb
stos
std
sarb
mov
and
dec
es
add
cmp
and
icebp
leave
rcl
nop
fildll
sub
jle
or
add
lods
push
jmp
lea
xlat
test
leave
scas
sub
scas
ljmp
pop
push
lds
xchg
mov
negl
adc
movsb
stos
pop
add
insb
xchg
out
cld
fwait
or
in
insb
int
dec
lret
pushl
aam
pop
mov
jns
add
cmp
dec
adc
call
inc
insb
xchg
xor
cmp
push
mov
les
cmp
out
popa
and
fcomi
xchg
adc
pop
lds
mov
int3
pop
jmp
mov
adc
adc
mov
mov
mov
int
stos
dec
stc
jmp
into
or
pop
js
push
sub
jl
and
js
push
fs
clc
rorl
mov
mov
cmc
je
dec
addr16
ss
adc
mov
pop
movl
arpl
rcrl
xorb
mov
push
test
les
cmc
sbbl
dec
adc
movsl
fwait
or
push
mov
ds
shrl
loopne
jne
mov
mov
mov
push
pushl
sub
fdivl
ljmp
add
mov
mov
stos
test
push
fisttpll
in
push
mov
pop
loope
or
mov
add
leave
sbb
cmp
dec
and
or
insl
xor
fmuls
pushf
add
stos
xchg
mov
fsubs
jmp
and
loopne
pusha
ss
hlt
and
sbb
outsl
int3
dec
mov
pop
lret
adc
hlt
lods
cmp
xchg
pop
loope
jb
scas
dec
pop
testb
out
aam
fcomps
loope
rorl
pop
mov
or
mov
dec
aad
aad
ficoml
repz
ss
cmp
decl
inc
lock
push
and
icebp
ret
inc
pop
mov
enter
movsl
or
push
sub
xor
test
pop
push
enter
lods
add
test
nop
jbe
stos
dec
cli
cltd
addr16
sti
test
stc
pop
ret
or
xlat
dec
xor
aaa
jne
lahf
shll
mov
adc
scas
and
push
and
push
dec
addr16
insl
sbb
sub
xor
sub
dec
add
movsb
movsb
lock
xor
sahf
push
sub
mov
adc
pusha
mov
mov
les
lahf
lea
decl
fnstcw
fbstp
cmpb
movsl
cld
scas
bound
xor
pushf
iret
mov
adc
test
stos
mov
je
xor
cmp
les
or
fstpl
aad
push
xchg
jno
sbb
inc
mov
xchg
pusha
inc
clc
push
sub
mov
or
mov
es
mov
xchg
mov
lock
mov
sub
jbe
aam
mov
pop
add
scas
and
je
inc
push
xor
cli
sub
vcvtps2pd
aas
je
jb
fistl
aas
shr
jae
pop
mov
arpl
call
pop
cmp
bound
scas
dec
lret
iret
pop
fldl
dec
jmp
mov
push
insb
in
arpl
sub
pushf
sbb
fisttpl
sbb
cmpsl
mov
fs
or
dec
out
lods
insl
insl
push
stos
xchg
xor
in
imul
add
leave
out
repnz
mov
mov
sub
je
sahf
inc
int
add
lods
jmp
rolb
fcoms
pop
loope
jne
jmp
mov
cmp
push
push
popf
lret
aaa
inc
leave
cltd
ret
jle
fmuls
or
mov
mov
mov
pop
xor
add
lret
xor
jecxz
mov
std
mov
lock
paddw
pop
mov
or
aam
xlat
add
add
jg
mov
mov
cltd
dec
js
shrl
dec
mov
arpl
pop
aam
xor
push
dec
out
xchg
insl
ja
inc
mov
insb
adcb
push
cmpsl
jp
cmp
in
adc
ljmp
xchg
xchg
loopne
or
mov
fnstcw
cld
pop
lea
mov
ficompl
cld
sbb
fiaddl
ljmp
xchg
or
push
add
mov
mov
or
adc
cwtl
inc
aam
jne
jle
inc
jmp
addb
or
in
jnp
or
out
push
jb
mov
xchg
imul
lods
jnp
push
es
bound
std
test
in
leave
xchg
add
inc
daa
push
ret
mov
mov
adc
sbbl
xchg
push
xor
popf
xor
jnp
insl
and
push
cmp
pop
mov
fadds
jmp
jge
lds
getsec
fstps
jl
cld
jmp
sbb
aas
jg
daa
jg
or
cmc
lahf
hlt
mov
xor
and
lods
push
jo
and
xchg
in
sbbl
leave
imul
in
pop
xchg
jmp
cli
mov
push
fsubs
mov
push
xor
jbe
xchg
ja
mov
xor
popa
pop
pop
mov
push
addr16
add
dec
mov
aam
and
ror
fiadds
pop
inc
add
xor
pop
es
mov
jae
mov
lods
add
in
loope
cmpsb
mov
jge
push
mov
cltd
stos
pop
push
pushf
inc
mov
cltd
pop
xor
scas
frstor
mov
and
stos
sbb
and
mov
jbe
xchg
lea
adc
das
and
adc
fs
push
std
stos
ds
inc
int3
dec
push
cmp
insl
and
jo
repnz
push
adc
les
mov
dec
xchg
pop
pop
mov
xchg
jecxz
sbb
sarb
aad
sbb
mov
das
dec
insl
sub
insb
mov
imulb
gs
jge
gs
clc
pop
push
xchg
inc
adc
fstp
mov
push
sbb
flds
int
or
jbe
dec
or
test
pop
js
iret
adc
jns
insl
rcr
popf
fsubs
xchg
int
test
xchg
and
jge
add
push
mov
and
cmp
adc
stc
xchg
mov
lods
inc
inc
xor
cli
dec
add
inc
adc
push
cwtl
or
insb
dec
sarl
stc
or
push
fwait
lods
faddp
scas
jns
std
test
cmp
cld
mov
faddl
pop
loope
bnd
xchg
in
aam
loop
or
outsb
pop
inc
es
test
out
cmp
push
cmp
movsl
pop
adc
cmp
sub
and
popf
je
repz
mov
xchg
or
sbb
adc
mov
jae
dec
adc
das
jnp
bound
shld
pop
sub
add
cmc
pop
xchg
movsl
adc
jb
mov
stc
sub
in
xor
inc
jb
shlb
movsl
and
mov
sub
fistl
or
hlt
in
and
inc
out
movsb
js
inc
or
fdivs
leave
nop
push
cmpl
in
daa
and
scas
jp
xor
test
or
push
mov
sbb
pop
mov
jmp
xchg
call
dec
cmovnp
jne
fs
push
add
mov
aam
je
sub
cmp
and
rclb
aaa
xchg
outsl
mov
or
stc
divl
pusha
ljmp
push
addr16
out
push
pop
daa
xor
mov
stc
push
ljmp
int
sahf
pushf
or
sub
in
vpmuludq
mov
out
cmp
in
and
pushf
fdivr
aad
xlat
aad
addr16
sub
pop
aaa
out
mov
sub
sbb
adc
mov
cmp
mov
add
xchg
data16
inc
ds
mov
in
sub
xor
sbb
lock
mov
jno
or
jg
adc
and
mov
stc
int3
cmpsb
push
aaa
lahf
das
negb
mov
mov
mov
sub
xchg
pop
push
fildl
sbb
sbb
push
and
pop
and
cmpsb
int3
ss
out
sbb
pushf
inc
mov
ljmp
scas
xchg
leave
inc
lret
out
lcall
out
push
icebp
pop
add
pop
xchg
and
jmp
outsl
cld
std
fdivr
sub
mov
or
add
subb
sub
dec
mov
jle
or
mov
dec
dec
pop
pop
sarl
jl
aam
or
jmp
loop
repnz
push
lock
lret
jecxz
sbb
imul
sub
xchg
dec
mov
into
push
adc
and
xlat
adc
sbb
stos
xchg
in
push
sub
sar
sti
sub
push
pop
mov
cmc
fwait
int3
push
sbbl
add
jmp
enter
mov
mov
or
cmp
add
jle
push
mov
call
jmp
imul
scas
inc
dec
jae
add
push
gs
cs
cmpb
push
lcall
cwtl
out
mov
inc
sub
pusha
fidivl
or
fbstp
or
lods
aad
rorl
dec
and
ljmp
mov
test
or
bound
lret
xchg
mov
dec
ret
and
inc
jns
pop
rolb
jp
dec
or
xchg
cmp
xchg
dec
dec
mov
add
in
push
mov
or
adc
inc
sub
hlt
cmp
xlat
inc
movsb
push
adc
or
lods
sahf
add
mov
dec
mov
les
je
arpl
inc
in
mov
or
lds
popa
add
mov
xchg
fwait
ss
setne
daa
insl
cli
dec
cli
xchg
xor
repz
ret
cmc
dec
cmp
aam
sbb
or
les
or
cmp
mov
cmp
mov
jecxz
in
movsb
ljmp
lock
iret
pop
xor
sahf
inc
push
shll
aaa
jno
dec
mov
mov
push
mov
mov
push
jb
pop
or
stos
sahf
movntq
out
pusha
xchg
std
fwait
mov
repz
ss
sbb
fimuls
outsl
mov
pop
pop
mov
fs
js
dec
adc
xorb
sbb
or
mov
dec
mov
cmc
xor
xlat
inc
in
mov
es
and
pop
gs
mov
into
dec
test
test
push
out
pushf
loop
lock
test
lods
xor
or
or
frstor
and
sub
xchg
lret
jb
mov
jo
repnz
cwtl
into
insb
or
push
shr
iret
lea
jl
insb
xchg
jo
in
insl
int3
and
sbb
imul
jb
mov
incl
aad
test
in
and
sbb
mov
jle
scas
xchg
dec
xchg
xor
mov
mov
or
data16
cmp
popf
fstl
mov
and
adc
pop
cmp
pop
dec
enter
out
popa
stos
movsb
loopne,pt
movsb
cld
ret
cmp
mov
inc
pop
jge
cwtl
faddp
movsl
shll
cwtl
loopne
lods
call
xor
int
jmp
mov
mov
jmp
or
sbb
adc
imul
pop
mov
xlat
inc
test
daa
push
inc
stos
daa
scas
clc
inc
mov
push
int
xchg
js
mov
mov
and
js
pushf
mov
lcall
scas
jb
cmp
fisubs
or
xor
xchg
seta
pop
roll
cld
push
push
pop
aam
add
adc
xor
jae
scas
stos
ja
popa
push
fs
push
fldt
jne
scas
lret
mov
gs
xchg
lods
rol
push
test
mov
aaa
jp
adc
pop
les
sub
lret
cmpl
cmp
fimull
cmp
nop
fisttpll
jbe
out
scas
xor
jnp
frstor
dec
scas
and
in
js
sbb
jge
iret
mull
pop
lea
fwait
sbbb
xchg
jbe
push
dec
loope
les
fs
movsb
scas
push
xchg
fs
mov
jnp
pusha
xor
ret
xchg
enter
inc
leave
mov
cmp
test
pop
popa
sub
sbb
aaa
mov
mov
test
mov
cmc
cmp
ss
shlb
sbb
mov
int3
mov
ficoml
out
cltd
fbstp
mov
cld
xchg
xor
push
lahf
scas
in
mov
push
push
mov
divb
fadd
leave
jne
or
push
into
pop
mov
popl
dec
inc
dec
jg
jmp
mov
jae
and
popa
mov
lea
enter
aaa
push
int
in
lock
insb
loope
ljmp
xchg
mov
dec
mov
pop
adc
clc
mov
xchg
adc
popf
mov
in
mov
pushf
popw
xchg
xchg
xlat
rclb
fs
sarl
jo
ret
test
orl
mov
jno
xchg
mov
add
xor
test
and
test
ljmp
cmp
popf
outsb
in
cmp
pop
sbb
mov
pop
sbb
in
pusha
stos
adcl
mov
in
ljmp
out
insl
sbb
pop
jbe
inc
jmp
cli
mov
dec
inc
inc
scas
stos
mov
sbb
pop
dec
or
fbld
push
jmp
adc
xchg
mov
adc
lock
outsb
mov
and
push
test
repz
scas
daa
push
lahf
cmp
pop
mov
mulb
mov
sbb
jae
test
sbb
fwait
insb
outsb
stc
test
xchg
add
adc
push
mov
cwtl
std
scas
dec
pop
enter
or
bound
call
or
dec
pop
gs
idivb
stos
andl
sbb
clc
fisttps
mov
testb
mov
xchg
push
lcall
mov
sarb
into
divb
ljmp
cmp
pop
add
jo
or
push
sti
xchg
outsl
lret
pop
fnsave
inc
cmpsb
mov
jne
pushf
out
pop
inc
addb
stc
imulb
sbb
sub
pop
mov
outsb
popf
les
lret
pop
stos
xor
int3
mov
jne
out
je
pop
xchg
rcrl
adc
in
fwait
adc
pop
out
sbb
data16
pop
imul
mov
xorb
aas
and
dec
icebp
movsb
sub
sub
imul
sbb
mov
mov
inc
sbb
inc
add
cmc
rorl
in
add
mov
push
adc
jbe
jl
xlat
aas
jnp
sub
pop
lahf
pop
out
int
adc
ret
js
bound
pop
cmpxchg
aaa
mov
xchg
sub
jg
pop
jge
push
jle
push
mov
mov
fs
lcall
daa
sub
leave
aaa
fnsave
pop
and
inc
fmull
pop
jmp
cmp
xor
add
xor
and
mov
sbb
push
xchg
sahf
insl
push
movl
xchg
dec
int3
jne
adc
jno
mov
js
jle
enter
jge
hlt
jmp
xchg
je
out
xchg
movsl
fsubrl
aam
dec
notb
into
add
les
sbb
cs
pop
lods
jg
shr
or
out
cltd
xor
dec
or
jmpw
mov
les
clc
and
dec
or
dec
and
icebp
push
or
nop
sub
testl
test
xchg
jl
movsb
sar
or
add
cmp
scas
pusha
fsubl
pop
ljmp
ret
inc
push
xor
mov
push
frstor
ss
push
cmp
add
sub
je
or
test
xchg
xor
or
mov
lret
adc
sti
xor
icebp
lret
jge
and
jno
inc
stc
cmpsl
sub
out
jae
and
push
bswap
or
adc
cmpsb
in
pushf
add
aaa
xor
rcl
mov
scas
aam
jns
mov
in
or
js
mov
mov
push
sbb
dec
dec
sbbb
or
add
xor
les
cld
mov
test
cld
lcall
inc
xor
mov
xchg
push
cmp
gs
pop
push
pushf
repz
or
push
adc
jecxz
mov
and
daa
mov
dec
addb
cmpsl
mov
sub
cmp
xchg
jno
scas
cwtl
pop
jmp
cmpb
jno
dec
aas
xchg
cli
fimull
int3
inc
pop
dec
mov
jl
cmp
ret
daa
mov
mov
mov
pop
add
mov
xchg
test
and
mov
iret
clc
dec
sub
or
cmp
bound
adc
and
pop
lock
mov
mov
clc
lea
adc
mov
inc
jns
das
enter
add
pop
loop
cli
pop
xchg
shl
stos
aam
idivb
cli
fsincos
fldenv
pop
iret
push
fbld
lea
cmp
mov
dec
pushf
xor
mov
pop
scas
lds
push
test
call
sbb
and
int
sbb
inc
iret
jno
in
popa
stos
pop
mov
pushf
pop
sbb
arpl
decl
loop
or
scas
stos
xchg
popf
xor
pusha
in
mov
ficompl
mov
hlt
pop
inc
pop
and
mov
cmp
add
shl
xor
push
and
scas
inc
adc
pop
insb
sub
inc
push
fmull
ds
jae
std
outsl
cmp
movsl
mov
lret
inc
mov
popa
jae
insl
int3
lret
inc
push
xchg
iret
jmp
pop
outsl
and
aas
mov
xor
push
jp
pusha
rcll
imul
dec
in
outsb
mov
iret
inc
pop
ja
addr16
loope
xchg
out
xor
inc
in
mov
and
xchg
cmc
xor
pop
into
cmp
dec
mulb
out
mov
fdivrp
aas
aaa
lahf
sub
xor
mov
shlb
cmc
mov
mov
or
leave
sub
aad
cmp
ja
call
mov
cmp
push
aas
cmp
pop
pushf
popf
iret
xchg
or
cmp
mov
sbb
xlat
jge
inc
out
insl
fwait
xchg
sub
les
ds
or
test
push
popa
add
pop
xchg
push
xor
sbb
int
cmpsb
mov
push
loope
in
dec
xchg
sub
xor
xlat
add
mov
stos
push
xchg
jp
sbbl
gs
or
jmp
dec
packuswb
adc
cli
xor
fists
mov
add
jae
lcall
sahf
push
leave
shlb
lcall
out
jecxz
add
push
mov
jne
jae
dec
mov
stos
lahf
pop
lret
inc
dec
notl
lahf
out
gs
and
cli
jno
enter
or
cmp
mov
jae
sub
shll
ljmp
fwait
jmp
cmpsl
jae
mov
jae
push
pop
jmp
pushf
arpl
xchg
sbb
pop
jb
sbb
popf
fucomi
mov
idivl
int
iret
scas
add
stos
xchg
decb
es
push
mov
adc
pusha
mov
mov
arpl
mov
outsl
fcoms
inc
addr16
mov
in
addr16
xchg
icebp
jl
andb
xchg
insl
pop
push
into
xchg
pop
sbb
and
mov
mov
faddl
push
js
cmpsl
pop
xorb
xor
pop
sbb
arpl
pop
in
rcrb
int
dec
in
je
xor
mov
repnz
dec
add
mov
xor
je
sub
call
aad
aam
in
jo
or
and
dec
xor
mov
mov
imul
call
push
js
repnz
adc
lahf
adc
sti
mov
out
ja
sbb
dec
or
scas
andl
mov
adc
pop
push
hlt
scas
mov
lds
xorl
cmpsb
inc
sub
inc
inc
loope
out
int3
push
cmp
stos
sbb
xchg
xor
add
fidivrl
lock
and
cmpsl
jne
lcall
xor
pop
sbb
fsts
adc
imul
mov
outsl
jg
inc
mov
pop
gs
dec
popa
dec
loope
pop
jge
cmp
sub
mov
adc
pop
push
or
ljmp
and
sub
add
cmp
xor
mov
sbbb
adc
mov
fstpt
mov
cmp
imul
push
mov
sarl
outsb
jo
mov
shrb
fnstenv
sahf
mov
push
add
lcall
push
xor
mov
je
jle
inc
je
jecxz
mov
cmp
pop
xchg
xchg
sbb
push
pusha
xor
pushf
inc
mov
shll
clc
pop
std
mov
push
enter
push
cmp
cli
mov
arpl
fdivl
sub
int3
pop
mov
cmp
dec
inc
add
in
aad
inc
push
out
mov
add
push
fmull
dec
push
movsl
xor
aam
pop
mov
add
cmp
roll
adc
ds
ret
gs
bound
sub
xchg
aas
xor
lahf
int
int
in
mov
shlb
imul
aaa
in
xchg
add
jle
and
push
inc
jecxz
mov
sahf
std
loop
mov
iret
arpl
jle
pop
mov
push
add
sub
sbb
test
adc
push
jns
jns
mov
add
jp
push
and
insb
and
pop
mov
mov
mov
in
jp
jl
decb
out
and
push
bound
icebp
sahf
cld
xor
insb
stc
daa
dec
rcrb
dec
or
jne
jne
or
test
scas
sbb
test
add
shr
arpl
fildl
jne
push
push
lcall
push
test
clc
jo
inc
fwait
sub
mov
sahf
jecxz
add
push
aaa
mov
and
sub
xchg
jmp
sbb
xchg
xor
enter
adc
push
sbb
push
add
xchg
xchg
addr16
inc
mov
mov
lret
ret
gs
mov
bound
in
and
cld
dec
lret
loope
dec
rorl
lock
xchg
inc
in
pop
cs
push
andl
adc
outsb
leave
outsl
sarb
imul
fwait
in
mov
jnp
sbb
or
sahf
push
inc
stos
jno
push
arpl
imul
and
inc
movsl
mov
bound
cmpsl
xorl
push
mov
test
gs
pop
inc
cmp
cmp
mov
adc
xchg
adc
pop
add
rclb
add
jo
sarl
lods
adc
and
nop
mov
jno
addr16
sti
and
and
cld
adc
or
jbe
xchg
sbb
dec
in
je
loope
call
lods
faddl
inc
pop
and
cmpb
aad
sub
pop
subb
mov
mov
dec
xchg
and
je
sbb
test
push
out
sub
in
div
stc
jo
and
jle
fidivs
add
jp
outsb
scas
push
sub
mov
cmp
mov
mov
jl
rcrl
pop
insl
xor
mov
xchg
xor
iret
jmp
pop
hlt
adc
add
and
orb
rorb
lea
cmc
cs
mov
sub
outsb
insb
bound
les
sub
pop
mov
clc
jo
or
imul
cmp
cmpsl
mov
mov
or
mov
sub
mov
sbb
mov
sub
pop
and
pop
push
and
stc
xchg
sbb
pop
imul
stos
repz
pop
xchg
test
lods
mov
xor
cmp
es
pop
sub
insl
in
ljmp
pop
gs
sub
dec
mov
lea
inc
dec
add
arpl
and
cltd
mov
stos
pop
icebp
pop
mov
daa
insl
jne
and
loopne
mov
jnp
fldz
pop
xchg
test
mov
scas
popf
insl
push
mov
test
scas
pop
lds
stc
out
push
sbb
daa
lret
movsb
jmp
icebp
mov
mov
pop
icebp
lret
cmp
das
jne
imul
and
pop
jno
inc
fsubp
mov
adc
cmp
nop
and
xor
adc
sti
sbb
jmp
leave
hlt
mov
rolb
sbb
iret
std
fs
cwtl
and
lret
stos
cmp
sub
jecxz
and
aaa
dec
outsb
mov
pop
imul
xchg
insl
xchg
icebp
mov
imul
sbb
lcall
jns
and
xchg
xor
mov
adc
lcall
xor
pop
sbb
push
aaa
jno
rol
jbe
scas
xor
inc
lahf
push
cmp
or
stos
mov
push
es
shrl
adcb
cmp
mov
adc
pop
sub
addr16
test
mov
pop
into
mov
les
iret
add
add
jmp
addr16
jbe
jle
lret
rep
hlt
test
pop
movsb
movb
and
data16
xchg
dec
push
or
mov
mov
inc
adc
adc
jbe
xchg
hlt
scas
pop
or
lds
loope
mov
push
cmp
mov
and
and
in
rcr
cmpl
mov
in
ljmp
push
xchg
sbb
xor
jbe
aam
xchg
jecxz
dec
cli
xchg
stos
clc
sbb
arpl
mov
add
out
add
ljmp
sbb
inc
inc
xor
jle
or
and
adc
push
jo
jecxz
dec
flds
dec
scas
or
cmpsb
xlat
ja
nop
mov
push
jae
xor
in
cmp
xlat
stos
setbe
notl
fnsave
or
add
xchg
sub
add
sub
mov
adc
sbb
jns
in
lahf
in
jmp
loope
mov
loop
cli
mov
and
pop
sarl
fsubr
int
adc
xor
jmp
and
push
and
inc
lret
testb
pop
insb
repz
cld
lcall
pop
icebp
cmp
push
mov
push
hlt
sbb
sub
pop
ret
cmp
pop
pop
push
loope
std
lret
stos
mov
xor
sbb
fbld
pop
mov
call
out
mov
mov
lret
sub
shlb
addl
mov
sar
pop
or
cmp
or
push
bound
cli
shl
fstps
popf
outsl
dec
fstpl
fsubr
ja
into
loop
cmpsb
push
sbb
pop
cld
cmp
xlat
mov
stos
adc
shll
rcll
mov
and
mov
jns
pop
jecxz
jb
adc
mov
xchg
add
xor
push
jnp
add
ja
mov
dec
sbb
lret
mov
sub
cli
pop
movsb
inc
repnz
std
cmc
xchg
loop
in
pop
not
push
ss
stos
int
push
jnp
out
dec
sbb
repz
jb
pop
pop
cmc
sub
movsb
add
or
movsb
data16
ret
xor
stc
mov
pop
test
loope
pop
xchg
mov
popf
daa
add
fisttps
or
stc
rol
rcll
lods
test
lea
adc
push
mov
mov
or
cs
outsb
push
addb
outsb
call
cltd
adc
inc
sub
and
roll
jecxz
add
sbbl
outsl
ret
lock
out
mov
aas
add
add
faddp
xlat
xadd
cs
cwtl
mov
mov
xchg
xor
push
std
jge
out
fwait
movsb
icebp
sbb
mov
dec
jle
shll
or
pop
inc
arpl
rdmsr
pop
pop
cmp
es
into
cmp
pop
rclb
test
dec
pop
int3
sti
push
out
loopne
push
in
xchg
and
push
mov
icebp
push
cld
mov
shlb
das
xchg
cs
jge
repnz
inc
jno
dec
cmp
fisubs
pushl
frstpm(287
shrl
pop
std
inc
adc
iret
pop
or
fimull
adc
movsl
out
cmp
jbe
xchg
leave
ficoms
test
adc
lahf
scas
cmpb
insl
out
push
sub
jns
jle
jmp
inc
cltd
and
xchg
cs
inc
jbe
stc
leave
cmc
in
adc
jbe
push
xlat
das
repnz
addr16
ret
mov
shlb
decb
stos
sahf
xlat
js
dec
ss
outsl
pushf
mov
icebp
popa
adc
sbb
push
xchg
xchg
aad
mov
cmp
inc
inc
dec
push
xchg
mov
in
ds
xor
xchg
pusha
ficoml
sub
popa
loop
fisubrs
lcall
sbb
int
nop
outsl
ret
pop
mov
mov
sub
push
adc
cmp
negb
inc
ret
test
xchg
pop
cmc
or
push
add
pop
fldenv
pop
jbe
popf
es
mov
mov
xor
lcall
jle
mov
add
mov
inc
ss
pop
rclb
jge
jnp
inc
or
pop
fdivr
cmc
shll
pushf
dec
push
test
mov
adc
fcomps
pop
shll
push
dec
pusha
cmp
pop
sub
or
mov
ja
ficoml
xlat
adc
and
data16
into
mov
mov
push
and
sbb
into
mov
adc
popa
mov
fsts
dec
cli
cltd
leave
stos
scas
push
adc
xorb
pop
push
inc
mov
out
or
ss
adc
bound
dec
pusha
ret
ds
repnz
mov
les
shl
bound
out
roll
mov
iret
dec
in
and
sbb
pushf
notb
aad
mov
ljmp
fists
fsubr
push
pop
jl
cmpsb
insb
shl
outsb
dec
insl
and
push
ljmp
lret
xchg
mov
sub
mov
add
cmpsb
stc
test
push
cltd
cmp
loopne
jae
push
add
jmp
fbld
sbb
adc
sub
cmp
cmp
sti
scas
ss
mov
test
cwtl
inc
xor
mov
mov
stos
lock
jnp
stc
fstps
mov
mov
mov
test
fwait
push
lea
pop
mov
cmp
sbb
bound
fistpl
pop
std
stos
mov
cmc
out
jae
or
xchg
aaa
lds
inc
pop
pusha
cmp
pop
inc
movhps
dec
adc
repnz
xor
adc
dec
xorb
mov
xor
loopne
icebp
fstps
mov
aam
clc
jmp
push
lods
in
je
xor
pop
mov
mov
sbb
sti
mov
mov
fsubl
xchg
cmp
cwtl
loope
sbb
mov
sub
ja
adc
cmpsl
inc
in
inc
and
xor
sti
dec
ss
lret
sbb
aam
pop
sub
stc
popa
mov
ja
aam
dec
mov
addr16
shll
sbb
inc
shll
xor
les
cmp
push
lea
cs
add
ret
out
mov
pop
mov
add
xor
stc
xchg
test
mov
roll
popf
adc
in
loop
int
out
inc
movsl
shlb
mov
and
aas
sbb
jp
cmpsl
out
jl
sbb
orb
cmp
mov
mov
and
cltd
out
add
dec
add
data16
movsb
sti
add
rcrl
and
cli
xor
or
inc
pop
cld
popf
hlt
call
pushl
xchg
std
lods
add
testl
fcmovnbe
or
ljmp
loop
jno
sub
push
aaa
pop
push
aaa
cmp
ja
push
push
sub
push
sbb
loop
inc
dec
xor
xchg
xchg
add
and
cmp
pop
jae
push
int3
lret
and
push
aaa
addl
mov
pop
cmc
leave
stos
int3
std
sbbb
and
aaa
aas
sub
xchg
mull
jle
add
mov
sbb
push
sbb
pop
dec
jecxz
sahf
xchg
jmp
imul
and
ja
adc
sbb
inc
loopne
jb
insb
sub
pop
scas
dec
scas
push
lock
ja
loop
adcl
or
xchg
push
stos
pop
cmpsl
test
mov
xor
jle
das
mov
cmpsb
js
js
jno
stos
fwait
jne
xchg
jns
add
std
mov
call
jge
mov
jle
mov
leave
arpl
fidivs
into
std
push
jg
add
in
dec
gs
repnz
cs
sub
jg
popf
pop
add
push
jns
sub
jl
pop
out
mov
stos
cltd
add
into
lds
test
xchg
lds
inc
push
inc
mov
jp
and
jmp
stc
pop
div
into
push
sbb
adc
jne
inc
mov
xchg
sbb
into
ficoml
imul
push
jo
mov
xor
xlat
scas
fcomp
icebp
popa
ret
mov
dec
outsl
shrb
jne
pop
repnz
out
dec
jb
cmpl
mov
add
lods
test
out
addl
cs
xor
outsb
xchg
sbb
ret
clc
insb
fsubl
push
call
mov
hlt
inc
int
sbb
lods
add
push
or
lea
in
in
mov
sahf
bound
cmpsb
ficomps
mov
mov
testb
pushf
in
dec
lahf
jge
inc
loop
test
push
loope
cltd
orb
xchg
das
addb
in
adc
and
xor
mov
jbe
add
lods
je
pop
ljmp
pop
loope
cmp
and
push
into
cli
xlat
mov
ljmp
mov
loop
sbb
test
or
ficoml
adc
popf
push
mov
insb
out
mov
pushf
adc
xor
sets
xchg
lret
and
and
mov
stos
ror
stos
popa
jecxz
inc
and
fistl
sbb
dec
mov
push
scas
pop
sbb
fisubl
jns
push
inc
mov
mov
or
cltd
xchg
scas
les
xlat
mov
pop
and
lret
aad
xor
inc
push
mov
pop
cmp
jge
aaa
stc
cwtl
mov
lods
push
xchg
push
cmp
out
pop
add
shlb
jl
jl
in
pop
rorl
js
push
add
sub
sbb
sbb
out
mov
aaa
jbe
mov
es
loope
xor
mov
cli
int3
test
mov
outsl
subl
and
mov
xor
into
push
movsl
pop
cmp
xchg
ljmp
push
mov
fs
filds
cltd
mov
idiv
push
hlt
adc
mov
into
ja
inc
movsb
dec
lods
mov
fistps
sahf
bnd
mov
xor
inc
xchg
xor
mov
stos
int
mov
roll
jle
pop
adc
sti
mov
dec
sbb
mov
pop
xchg
call
movsl
movsl
mov
mov
mov
test
popa
mov
mov
jecxz
clc
sub
or
gs
stos
xchg
jp
mov
scas
sub
adc
lock
jo
ret
repnz
ret
push
xor
push
hlt
insb
lret
fstpl
add
adc
dec
cmp
popa
cmpsb
mov
sbb
insb
aad
add
or
inc
mov
andl
jo
pop
dec
mov
pop
cli
pop
imul
inc
pop
test
loop
in
cwtl
lret
cltd
xchg
mov
and
cwtl
xchg
pop
jne
add
inc
xchg
out
lcall
into
pop
push
mov
daa
sub
and
sahf
dec
mov
dec
fxch
inc
xchg
xor
loopne
loopne
lea
test
sub
mov
xor
outsb
and
dec
push
push
ret
aam
insb
and
xor
and
push
imul
lret
xchg
pop
xor
inc
nop
jge
fldl
push
insb
or
xor
pop
xchg
inc
aad
mov
popf
mov
cmp
sarl
and
dec
add
in
add
ficomps
mov
rcr
dec
xchg
add
lret
imul
out
or
int3
les
sahf
rorb
stos
or
lcall
dec
cmp
es
lds
mov
push
and
cmp
rcrl
mov
sbb
xorl
sbb
push
push
push
sahf
daa
fnsave
fwait
inc
sarl
sbb
fldcw
push
jecxz
pop
mov
push
or
inc
fxch
into
ja
je
mov
fiadds
inc
repnz
pop
mov
add
xor
jns
push
rcrl
sub
add
sub
aad
movsb
and
xchg
pop
pop
and
lods
loope
cltd
in
out
push
mov
jl
bound
mov
lret
jecxz
fldt
mov
pop
stos
andl
sub
sub
add
pop
enter
mov
into
add
pop
push
fidivrs
jecxz
stos
mov
lock
mov
es
pusha
inc
push
imul
sbb
adc
adc
rcrb
or
xor
ja
imul
pop
test
add
sub
pop
sbb
pop
iret
pop
or
jnp
cltd
test
in
mulb
cmpsb
xor
out
mov
pop
xchg
arpl
outsl
pop
adc
out
clc
pop
or
push
xchg
add
int
inc
cmp
daa
push
sub
xor
fidivl
mov
pop
push
sub
add
mov
lahf
sub
das
cmp
adcl
xor
jae,pn
movsb
ret
pop
xchg
or
into
pusha
hlt
fcoml
xor
test
xchg
xor
pop
outsl
ljmp
pusha
mov
sbb
push
add
shll
sbb
xlat
xchg
push
movsl
mov
sahf
add
or
jmp
xor
repz
inc
adc
pop
mov
das
out
lahf
mov
and
inc
fiadds
clc
adc
arpl
pop
mov
pop
adc
or
and
loopne
aad
adc
dec
mov
push
push
ror
mov
shll
cmp
inc
out
ljmp
jo
cmp
dec
ror
movsl
bts
aas
outsb
push
in
fmuls
jo
in
je
push
add
cmp
stos
or
in
and
repnz
or
xchg
lahf
fwait
push
mov
or
mov
jno
adc
xchg
repz
mov
ljmp
push
or
jmp
fnsetpm(287
movsl
les
stc
or
mov
in
fdiv
imul
cmpl
mov
push
aaa
test
adcb
out
bound
scas
dec
add
outsl
data16
outsl
mov
mov
insb
arpl
push
sbb
bound
xlat
in
repnz
xor
mov
xor
loop
shlb
into
xchg
fs
mov
mov
mov
fdivl
mov
cli
add
pop
jmp
sbb
xchg
or
sbb
jge
dec
push
pusha
or
cmpsb
jnp
xor
lods
push
sbb
dec
loope
mov
dec
sub
icebp
xor
sub
or
sub
clc
mov
jmp
xor
out
sbb
sbb
dec
dec
cmp
pop
cmp
mov
shl
push
add
push
dec
cmpsl
movsb
movsl
daa
adc
adc
and
push
insb
cltd
shll
cmp
xchg
cmc
adc
jl
in
xor
cmpsl
or
ret
adc
add
lds
ljmp
aam
lock
cmpb
adc
popa
outsb
jnp
cwtl
clc
cmp
es
in
mov
cli
in
or
lcall
or
dec
int
or
lods
adc
push
lret
cmpsl
or
wrmsr
xor
fcomps
sbb
int
cmpsb
mov
jmp
cmp
push
jecxz
jbe
clc
mov
faddl
lods
cmp
push
fildl
sahf
pop
add
outsl
dec
xor
jl
push
dec
fadds
push
add
repz
enter
mov
dec
lahf
pop
gs
lret
in
sbb
jne
jae
pop
mov
in
or
and
test
and
add
inc
mov
mov
pop
shlb
sbb
xlat
fsubrs
popf
repz
dec
in
jmp
call
mov
int
dec
hlt
inc
cmp
lea
jmp
ds
sub
aas
push
loop
push
add
icebp
adc
scas
push
popf
int3
pop
loop
es
add
fs
jbe
cmp
test
dec
jae
stos
inc
xchg
pop
dec
inc
mov
repnz
stos
lea
inc
nop
mov
out
inc
loope
dec
xor
dec
cmp
sub
mov
mov
lcall
std
stc
push
mov
lret
pop
pop
lods
mov
xchg
sti
push
outsb
jbe
jo
jg
dec
repnz
aad
movsl
push
mov
rcrl
mov
shrl
push
jne
nop
insl
sub
iret
mov
adcb
int3
cmpsb
pop
jnp
pop
dec
xchg
test
negb
sbb
cmpsl
jg
add
or
sbb
out
je
popa
adc
adc
xchg
inc
dec
mov
pop
lods
push
or
fisttpll
out
or
out
cmp
into
sub
cmp
inc
jg
scas
push
js
or
out
pusha
add
in
jo
loop
fs
pop
les
in
sub
std
test
stc
lods
mov
pop
bound
xor
scas
sbbl
xor
out
shrl
xchg
jp
in
sbb
outsl
add
inc
lods
sub
pop
fisttpll
and
cmp
test
sbb
stc
scas
xor
jo
mov
dec
cld
mov
jg
mov
testl
mov
jl
je
sar
movsl
sbb
mov
les
mov
aam
lret
jg
mov
lods
dec
mov
rolb
std
inc
sbb
pop
cmpsb
loopne
adc
clc
int3
lods
aam
add
sbb
mov
mov
call
and
cmp
mov
push
mov
test
and
fdivs
push
sbb
pop
add
xor
out
xor
xchg
jb
jp
mov
icebp
mov
test
push
mov
cmp
mov
in
xchg
jg
xchg
jle
cli
fs
inc
sahf
cwtl
inc
in
mov
ss
mov
jnp
mov
test
lods
shrb
push
sub
ret
scas
mov
pop
das
fnstsw
add
push
lea
pop
adc
ds
pop
cmp
mov
mov
dec
or
lret
cmp
gs
repz
add
pop
cmc
mov
clc
and
mov
fs
andl
push
dec
cmp
ds
push
aas
lods
cmp
dec
mov
xor
aad
pushf
xor
ficompl
loope
aad
stc
pop
push
in
pop
pop
sub
mulb
out
je
call
cltd
adc
jmp
cwtl
out
test
adc
enter
adc
int3
xor
inc
rorb
sar
bound
mov
int3
pop
cmp
mov
xchg
daa
sbb
cmp
iret
cmp
bound
repnz
popa
fistl
in
push
iret
ljmp
rdpmc
adc
adc
dec
sub
dec
repz
call
mov
lahf
icebp
xlat
arpl
out
add
jmp
pushf
pop
mov
std
push
repnz
jbe
std
xchg
and
push
enter
push
cmpsb
jg
adc
notl
das
mov
and
add
pop
iret
sub
sbb
lcall
shrb
stos
mov
es
and
and
fs
xchg
adc
pop
lret
repnz
fwait
lahf
mov
sub
dec
sbb
sti
xchg
rcrb
inc
nop
jnp
inc
inc
cld
pop
out
fs
lahf
xor
push
add
insb
xchg
fmuls
jmp
push
mov
or
stos
std
sbb
fcoml
in
jno
orb
lods
inc
or
pop
cmp
sub
and
neg
mov
pop
or
cmp
loopne
push
fwait
and
outsb
pcmpgtb
test
push
sub
mov
and
jne
out
popf
mov
notl
adc
hlt
inc
fwait
mov
hlt
negl
jo
out
jge
xor
mov
xlat
cld
and
add
add
xchg
outsl
jne
mov
pop
or
repnz
pushf
sub
lret
jmp
inc
dec
pop
mov
fildll
sahf
inc
pop
in
xchg
int
sub
jge
ficoml
out
xorw
out
pop
idivl
xchg
mov
into
test
int3
xchg
push
mov
adc
inc
imul
lods
jnp
push
stos
lock
cmp
push
lzcnt
prefetcht2
stc
ret
stos
orl
popl
cli
cmp
add
sbbb
add
mov
arpl
inc
add
enter
cmpl
imulb
push
fdivs
or
push
test
test
pop
mov
ja
sbb
jl
cmp
in
mov
out
ret
sbb
out
add
mov
shrl
sbb
in
and
pop
out
jne
mov
xchg
es
stos
pop
aas
cmp
mov
cwtl
ljmp
jp
into
popf
xor
pop
push
in
cmpsl
xchg
xchg
jns
jne
mov
xlat
mov
mov
sbb
out
loope
and
xor
adc
std
pop
inc
hlt
pop
dec
jns
sub
pushf
jbe
cmp
scas
ret
test
xchg
mov
mov
shr
cmpsb
outsb
shll
loop
jmp
add
frstor
movsb
roll
insb
push
and
mov
dec
xlat
adcl
call
aas
and
imul
enter
repz
xor
cmpsb
lret
cmpsl
pushf
call
pop
out
repnz
add
cmp
push
mov
stos
add
cmp
inc
dec
cmp
xor
mov
mov
pop
inc
iret
add
imul
imul
add
dec
subl
in
xorl
mov
out
cmpl
js
repnz
fs
xchg
movsb
and
lods
stc
adc
xor
cmp
jb
mov
dec
scas
jb
out
in
mov
enter
dec
dec
fistl
push
or
repnz
scas
inc
icebp
jl
dec
dec
and
aam
xchg
lcall
add
push
sub
out
es
cmp
sti
aam
sbb
in
cmp
iret
jp
sarb
adc
mov
cmp
ret
inc
test
cmpsl
jb
jmp
into
lcall
in
jmp
mov
sub
dec
add
sub
mov
pop
int
test
fnstsw
and
cmp
push
aaa
stos
sbb
lahf
scas
lcall
sub
adc
mov
sbb
fiaddl
daa
nop
add
fisttpll
add
dec
pop
push
scas
lods
out
fmul
popa
push
movsb
aaa
das
push
inc
mov
aad
xor
or
push
pop
jmp
mov
add
aaa
sbb
xchg
xor
popl
sahf
adc
jbe
push
xchg
mov
push
xchg
pop
xchg
add
push
stc
int3
in
cld
into
fwait
mov
lock
movsl
leave
clc
and
cmpl
jae
xor
mov
mov
subl
ret
fidivrs
mov
out
adc
push
xor
xchg
push
xchg
loopne
inc
ficompl
fstps
jns
cmpl
and
mov
sub
cmp
shlb
mov
xchg
outsl
lret
or
aaa
insb
sub
mov
in
pop
jg
divb
add
imul
stos
cmp
fbld
cmp
jne
popf
test
call
push
insb
jp
jns
adc
add
xchg
push
pop
leave
sub
jnp
cwtl
add
dec
loop
jb
mov
add
push
sahf
loope
push
xor
add
mov
test
cmp
jne
fdivrs
enter
sbb
sbb
sub
sub
sub
or
out
jno
rcrb
sahf
push
add
or
jecxz
nop
aad
notl
xor
cmpl
mov
xchg
iret
negb
aaa
adc
add
pop
ljmp
xor
je
mov
adc
in
push
jp
pusha
xor
scas
mov
mov
jle
das
mov
xchg
jno
fdiv
mov
js
btc
fidivs
and
mov
in
jns
jns
cmpsb
cmpb
ret
popf
mov
ljmp
xchg
pushf
push
cmp
ret
inc
pop
push
cmp
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
jmp
push
dec
dec
outsl
jl
pop
mov
adc
add
mov
cmpb
jnp
icebp
push
inc
sub
lret
adc
add
enter
je
adc
loopne
pop
aas
or
push
add
call
aaa
movsb
or
push
das
cmp
add
pop
mov
sub
xor
mov
mov
sub
mov
xor
mov
add
sub
push
push
call
sub
mov
int
xchg
mov
pop
pop
popl
push
call
sub
mov
sbb
xlat
les
cs
pop
gs
jmp
hlt
sbb
fidivrs
sub
jmp
push
nop
mov
jne
mov
jmp
std
repnz
sar
lahf
in
mov
or
push
xchg
test
xor
imul
push
ljmp
mov
push
and
fstps
insb
adc
cmpsb
sub
cmp
mov
or
jnp
xor
ja
loopne
xor
pushf
pop
push
xchg
jg
push
lret
inc
bound
lock
and
loope
pop
pop
cmp
lock
adc
jecxz
jp
mov
mov
sbb
lahf
jns
and
jl
outsl
lea
dec
push
sub
mov
daa
leave
jno
int3
fsubrs
adc
cmpsb
sub
adc
cmp
pop
jp
daa
adc
cmpsb
sub
in
int
cmp
aam
js
stos
jl
sub
xlat
mov
cli
xlat
cmpsb
sub
push
cmp
xlat
mov
mov
mov
loopne
sub
xlat
jmp
lods
test
xor
adc
sbb
sbb
jp
dec
jb
fidivrl
hlt
clc
ljmp
faddl
call
inc
push
or
push
inc
mov
pop
ror
shll
aam
or
sahf
add
cltd
push
add
jb
pop
jne
inc
das
xchg
orb
jnp
repnz
mov
add
jl
cmp
cmp
inc
cltd
dec
push
fsubrl
jb
popf
dec
test
orb
add
lret
inc
mov
cmp
or
jle
les
iret
dec
iret
es
jne
imul
fnstcw
xchg
scas
mov
xchg
mov
inc
push
sbbl
xor
xchg
std
cli
mov
pop
shll
jo
stc
sub
psubusb
sbb
pop
data16
add
push
pop
jg
imul
xchg
dec
jmp
mov
jns
and
sub
inc
push
mov
or
adc
out
add
push
daa
and
sarb
push
xchg
dec
movsb
out
xchg
mov
loop
fmuls
inc
imul
das
mov
mov
movsl
out
push
fld1
mov
call
js
or
cmp
jg
imul
add
loope
and
pop
mov
cmp
fisubs
cltd
jo
fstp
add
sti
je
mov
adc
aam
inc
rcrb
jle
sarb
pop
imul
and
mov
mov
aad
hlt
mov
xlat
popf
cld
roll
pop
nop
sbb
out
or
sar
push
or
fiaddl
dec
add
or
inc
jecxz
xor
xchg
das
mov
popf
inc
mov
and
fisubl
lods
jns
popf
inc
inc
or
inc
mov
stos
or
popf
inc
and
xlat
xchg
xor
mov
xor
mov
lods
fcomps
sbb
pop
sahf
mov
and
popf
xchg
addr16
inc
adc
mov
popf
cld
cmp
ds
outsl
and
and
cmpsl
popf
inc
fcmovb
jne
or
and
in
lret
popf
inc
cmpsb
popa
popf
rorb
or
shll
popf
adc
ficomps
pop
sbb
sahf
inc
scas
aad
cmp
mov
rorl
fcomps
inc
and
xlat
popf
lret
pop
and
push
fcomps
lret
sahf
inc
pushf
cwtl
jno
mov
lahf
inc
and
cwtl
jne
mov
lahf
inc
and
mov
addl
pop
or
popf
pop
sub
popf
inc
cmpsb
ret
and
adc
mov
dec
sahf
mov
outsb
sub
and
fwait
dec
lcall
or
inc
icebp
test
fcomps
jne
xlat
popf
cli
cmpsb
into
dec
bound
xlat
in
inc
cmpsb
mov
test
mov
jns
xlat
popf
dec
in
ljmp
xor
or
popf
lret
pop
and
push
fcomps
sbb
je
inc
scas
aad
inc
add
sub
push
popf
inc
scas
aad
cmpsl
mov
fistps
inc
and
xlat
popf
andl
push
notb
andb
xchg
je
andl
jp
in
idivl
lret
enter
push
or
fdivl
mov
jae
and
in
idivl
lret
enter
out
das
sbb
popa
mov
aas
or
push
or
xchg
jecxz
xchg
je
andl
add
lret
adc
sub
xlat
popf
inc
pop
or
xchg
jecxz
xchg
je
andl
lods
or
xlat
popf
inc
pop
or
xchg
jecxz
xchg
je
andl
lret
loopne
leave
xchg
addr16
cmp
fisubrl
lret
or
adc
popf
inc
and
popa
mov
aas
or
or
cld
jecxz
xchg
popf
inc
pop
cmpsl
pop
inc
or
popf
sbb
mov
cmp
das
lret
les
mov
inc
mov
push
xchg
xor
jmp
and
lret
test
in
jecxz
pop
adc
lret
mov
xchg
xor
jmp
sub
test
sub
sarb
inc
and
lret
call
popf
inc
and
push
inc
and
out
mov
pop
jns
dec
cs
inc
and
loop
call
xchg
push
lahf
inc
and
xlat
popf
sbb
lahf
inc
and
ret
dec
inc
and
xlat
les
fmull
mov
and
in
inc
cmpsb
xchg
std
inc
dec
mov
inc
addr16
jnp
and
cmp
push
stc
je
dec
or
mov
lret
std
jmp
call
lahf
jb
enter
cmp
dec
and
aaa
push
loopne
push
and
jmp
pop
sahf
inc
daa
out
int
aaa
movsb
mov
sbb
lea
pop
mov
nop
or
cmc
xchg
xchg
in
leave
into
addb
in
mov
gs
pop
pop
xor
inc
and
xlat
popf
inc
and
xlat
popf
inc
and
xlat
popf
inc
and
or
jmp
cmp
and
xlat
fldl
fadds
cwtl
sub
xchg
inc
and
xlat
popf
inc
and
shll
inc
pop
shlb
test
sbb
push
cld
jne
push
shll
enter
inc
arpl
ret
cmp
sub
loope
test
push
lods
inc
lds
dec
psrad
outsb
xchg
pop
add
xchg
xor
lods
das
mov
rorl
push
xchg
xlat
cltd
push
mov
sbb
repnz
lret
js
in
cmpl
mov
test
or
lret
cmp
jl
mov
fdivrl
in
add
mov
mov
popa
mov
xor
xlat
adc
xchg
aam
push
mov
stc
mov
aad
push
clc
mov
rorb
sti
insb
hlt
aad
loopne
and
mov
pop
pop
mov
mov
xchg
sub
loop
and
stos
push
cmp
jp
sub
dec
loope
rolb
mov
inc
sbb
cmp
iret
push
lods
imul
jb
insb
mov
mov
pop
enter
fidivrs
in
leave
aas
dec
dec
lock
dec
cmp
xchg
fildl
inc
fcmovu
inc
sahf
sti
repz
dec
mov
outsl
xchg
dec
insb
push
shlb
jle
jb
mov
sub
xchg
pop
testl
jbe
jp
pop
mov
pop
and
dec
lea
loop
insb
xchg
and
sbb
in
ret
jmp
push
mov
fsts
xchg
inc
xchg
es
mov
add
lcall
leave
fcompl
ljmp
mov
fiadds
adc
mov
xchg
xlat
adc
and
inc
fstpl
or
sub
and
pop
cmpsb
ds
adc
adc
repz
sbb
aam
and
mov
inc
jge
or
and
popf
inc
and
mov
sub
call
shl
push
lea
push
xorb
aas
outsb
rol
sahf
sub
adc
adc
add
or
xor
and
rcl
cmpsl
mov
cmpsb
mov
test
es
jns
ja
mov
cmp
pop
mov
sbb
adc
xchg
bound
add
ror
xchg
or
mov
xchg
and
mov
add
cli
and
cmp
push
popf
test
adc
pop
mov
in
xchg
insl
add
add
rcl
inc
enter
xchg
and
mov
push
mov
pop
clc
inc
mov
inc
jnp
mov
inc
mov
stos
pop
mov
and
add
add
add
and
adc
dec
add
xor
adc
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
push
add
add
add
push
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
es
push
add
add
add
push
es
push
add
add
add
push
es
push
add
add
add
es
push
add
add
add
es
push
add
add
add
add
push
add
add
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
imul
add
imul
insb
add
gs
xor
fs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
insl
fs
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movsl
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
push
popa
jae
dec
gs
inc
jb
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
inc
gs
jb
outsl
jb
outsb
outsw
add
add
popa
addr16
imul
dec
arpl
push
imul
push
js
arpl
gs
add
add
je
jo
outsb
inc
imul
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
add
add
add
add
add
add
add
add
add
add
and
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
sbb
add
and
add
xor
add
inc
add
add
add
pop
add
add
add
add
add
add
pusha
add
add
add
push
add
add
add
xor
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
adc
add
and
add
cmp
add
push
push
push
xor
sbb
sbb
pop
jno
and
jns
and
jns
and
jno
push
sbb
popa
fcoms
adc
xor
add
add
add
push
add
add
add
add
add
adc
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
adc
sbb
pop
shll
and
and
cmp
sbb
xchg
lcall
sbb
fwait
call
sbb
sbb
fwait
lcall
sbb
lcall
pop
jmp
and
lcall
arpl
adc
aas
mov
add
je
add
popa
add
add
add
and
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
pop
push
push
scas
and
outsb
out
and
jg
push
pop
mov
sbb
lcall
sbb
incl
and
incl
and
incl
sub
incl
sub
incl
sub
incl
sub
incl
and
incl
sbb
decl
pop
mov
adc
mov
jmp
and
clc
push
adc
push
addb
add
add
cmp
add
sbb
add
pop
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
pop
sbb
cmp
pop
nop
call
sbb
incl
pop
fdivr
add
icebp
incl
sub
incl
sub
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
sub
idiv
add
icebp
incl
pop
fdivr
pop
sbb
decl
pop
scas
call
sbb
jmp
pop
jae
stos
add
add
add
dec
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
sbb
pop
shll
jns
pop
and
incl
sbb
incl
push
loope
add
jmp
incl
sub
incl
sub
incl
das
std
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
das
incl
sub
incl
sub
incl
and
ljmp
sbb
decl
push
scas
lcall
sbb
lcall
sbb
add
or
pop
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
or
sub
sbb
loope
and
sbb
mov
add
incl
sbb
incl
pop
in
add
ljmp
and
incl
and
incl
pop
in
add
xlat
incl
pop
fdivr
add
fdivr
add
fdivr
add
in
add
jmp
add
incl
es
incl
and
incl
pop
in
add
incl
sbb
incl
adc
call
sbb
pop
sbb
and
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
adc
cmp
sbb
cmp
pop
adc
incl
adc
add
add
add
incl
bswap
incl
bswap
incl
bswap
incl
bswap
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
bswap
incl
bswap
incl
adc
incl
adc
incl
sbb
incl
sbb
incl
sbb
incl
adc
decl
push
lods
lcall
xchg
jmp
and
or
and
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
add
add
adc
cmp
push
sbb
cmp
add
adc
incl
adc
incl
adc
incl
or
leave
incl
bswap
incl
bswap
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
bswap
incl
bswap
incl
push
leave
incl
adc
incl
adc
incl
adc
incl
shufps
adc
xchg
jmp
and
or
and
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
add
add
or
fisubs
and
pop
sbb
incl
push
leave
incl
sbb
jmp
and
jae
and
push
cmpsl
incl
pop
fdivr
add
sar
add
sar
add
sar
add
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
bswap
incl
push
leave
incl
or
leave
incl
push
leave
incl
push
adc
xchg
jmp
pop
jo
add
or
push
add
add
add
add
incl
incl
incl
incl
incl
add
add
add
add
sbb
pop
ret
and
jp
sbb
mov
incl
or
movsb
pushl
sub
add
dec
sub
decl
add
inc
sub
ljmp
sbb
aad
add
incl
push
xlat
incl
pop
xlat
incl
pop
xlat
incl
pop
xlat
incl
push
incl
push
incl
adc
aam
add
incl
adc
incl
adc
incl
adc
incl
bswap
incl
push
lret
or
enter
enter
push
stos
lcall
and
loop
add
je
add
inc
add
add
add
add
incl
incl
incl
incl
add
add
and
jb
push
pop
mov
push
push
lods
incl
or
enter
enter
jb
xor
xor
call
add
dec
cs
dec
sub
decl
add
dec
sub
incl
call
and
fcos
add
fcos
add
add
add
add
fcos
add
fdivr
add
fdivr
add
xlat
incl
push
aad
add
sar
add
sar
add
into
incl
bswap
incl
bswap
incl
or
enter
enter
sar
sbb
call
adc
add
add
add
sub
add
push
incl
incl
incl
add
add
push
or
repz
cmp
add
sar
or
enter
enter
jb
xor
xor
call
add
push
das
add
dec
cs
dec
sub
add
dec
sub
decl
add
pop
and
add
add
add
add
fdivr
add
fdivr
add
add
add
fdivr
add
xlat
incl
adc
sar
add
sar
add
into
incl
bswap
incl
push
lret
or
enter
enter
mov
jmp
and
add
or
dec
add
add
incl
incl
add
add
and
je
sbb
mov
add
enter
enter
lret
and
xor
xor
call
call
add
push
xor
call
add
dec
cs
dec
sub
decl
add
inc
sub
decl
and
incl
sbb
incl
sbb
loopne
add
incl
sbb
incl
sbb
incl
sbb
incl
sbb
incl
sbb
incl
pop
xlat
incl
adc
sar
add
sar
add
into
incl
bswap
incl
push
leave
incl
or
enter
decl
push
stos
jmp
and
roll
add
push
add
add
incl
femms
xor
push
sbb
cmp
sbb
add
enter
leave
incl
bswap
lcall
and
xor
and
pushl
and
aas
es
dec
sub
add
push
das
add
dec
cs
dec
sub
add
cmp
and
incl
push
jecxz
add
jecxz
add
loop
add
loop
add
add
add
fdivr
add
add
xlat
incl
adc
sar
add
sar
add
int
add
lret
incl
or
enter
enter
mov
jmp
and
add
or
inc
add
add
incl
add
add
sbb
push
andl
push
nop
decl
adc
incl
or
enter
lret
incl
adc
incl
sbb
incl
sbb
call
and
pushl
and
incl
call
add
push
xor
decl
add
dec
cs
dec
sub
jmp
sub
and
incl
and
incl
and
incl
pop
in
add
jecxz
add
loop
add
incl
sbb
incl
sbb
incl
sbb
incl
pop
xlat
incl
adc
sar
add
iret
incl
adc
incl
push
lret
or
enter
call
pop
test
call
add
pop
add
add
add
add
add
add
and
jl
adc
xadd
add
enter
leave
incl
bswap
incl
adc
incl
adc
incl
adc
xlat
incl
sbb
call
and
pushl
sub
call
call
add
push
das
add
dec
cs
dec
sub
sar
add
ljmp
and
incl
and
incl
pop
in
add
loop
add
fdivrp
add
fdivr
add
fcos
add
incl
adc
incl
adc
incl
adc
incl
bswap
incl
or
enter
enter
mov
jmp
push
insl
lock
add
add
xor
add
pop
adc
inc
and
sbb
test
adc
stos
incl
or
enter
enter
lret
adc
incl
adc
incl
adc
incl
push
incl
sbb
incl
sbb
incl
sbb
decl
es
pushl
and
decl
add
push
xor
call
add
push
xor
decl
add
xor
in
incl
and
incl
and
incl
and
incl
and
incl
pop
in
add
loop
add
incl
sbb
incl
sbb
incl
pop
fdivr
add
sar
add
iret
incl
adc
incl
push
leave
incl
or
enter
sar
sbb
decl
or
add
add
add
prefetcht1
push
arpl
push
outsb
lcall
pop
decl
adc
add
enter
lret
incl
adc
incl
adc
incl
adc
xlat
incl
sbb
incl
sbb
incl
sbb
incl
push
loop
pop
and
add
ds
add
push
xor
call
call
add
push
das
add
or
incl
es
incl
and
jmp
add
jmp
incl
pop
in
add
add
fdivr
add
fcos
add
incl
adc
incl
adc
incl
adc
incl
bswap
incl
or
enter
call
pop
cmpsl
jmp
and
add
add
add
pop
sbb
pop
xchg
and
sbb
mov
incl
or
leave
incl
adc
incl
adc
incl
adc
incl
push
aad
add
fdivr
add
fdivr
add
fdivrp
add
in
add
ljmp
and
decl
add
push
xor
add
push
xor
call
add
sub
jg
add
repnz
lock
and
jmp
add
call
incl
push
jecxz
add
incl
sbb
incl
sbb
incl
pop
xlat
incl
adc
sar
add
into
incl
bswap
incl
or
enter
enter
scas
jmp
and
flds
add
pop
add
add
and
jns
sbb
fwait
incl
sar
or
enter
leave
incl
adc
incl
adc
incl
adc
incl
push
incl
sbb
incl
sbb
incl
sbb
incl
push
loop
add
in
add
call
pushl
es
pop
ss
pop
xor
add
push
xor
decl
and
add
idiv
add
repnz
lock
and
ljmp
pop
in
add
fdivrp
add
add
fdivr
add
aad
add
sar
add
iret
incl
bswap
incl
push
leave
incl
or
enter
mov
sbb
sbb
jmp
add
add
sbb
int3
and
jp
adc
mov
incl
or
enter
lret
adc
incl
adc
incl
push
incl
and
incl
sub
incl
das
std
incl
xor
incl
xor
incl
das
incl
sub
incl
sub
ljmp
and
pushl
xor
add
pop
ss
push
xor
add
sub
jg
add
repnz
lock
and
ljmp
pop
in
add
out
add
fdivr
add
fdivr
add
incl
adc
incl
adc
incl
adc
incl
push
leave
incl
or
enter
mov
sbb
xchg
jmp
pop
jb
add
add
add
and
int3
and
jge
adc
movsb
incl
pinsrw
or
enter
lret
adc
incl
sbb
incl
sub
incl
das
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
call
sub
incl
add
pop
cmp
pop
cmp
pop
ss
pop
xor
add
push
xor
call
call
add
push
das
add
dec
cs
dec
sub
add
add
out
add
fdivr
add
fcos
add
incl
adc
incl
adc
incl
adc
incl
push
leave
incl
or
enter
mov
jmp
and
add
imul
sbb
and
jge
adc
movsb
incl
pinsrw
or
enter
lret
sbb
incl
es
incl
sub
incl
das
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
das
out
cmp
or
cmp
add
pusha
cmp
add
lcall
add
pop
ss
push
xor
add
push
xor
call
add
push
xor
decl
add
dec
cs
add
out
add
fdivr
add
fcos
add
incl
adc
incl
adc
incl
adc
incl
push
leave
incl
or
enter
mov
jmp
and
add
imul
sbb
and
jge
adc
movsb
incl
pinsrw
or
enter
fdivr
add
out
add
idiv
add
std
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
pushl
cmp
sub
push
aaa
or
popa
aas
or
pop
cmp
lcall
lcall
add
pop
ss
pop
xor
add
push
xor
call
call
add
push
das
add
add
out
add
fdivr
add
fcos
add
incl
adc
incl
adc
incl
adc
incl
push
leave
incl
or
enter
mov
jmp
and
add
imul
sbb
and
jns
push
sbb
incl
or
iret
incl
sbb
incl
and
incl
and
cmc
incl
cs
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
lcall
xor
call
and
push
cmp
jmp
or
pusha
cmp
add
lcall
add
pop
ss
push
xor
add
push
xor
call
add
add
out
add
fdivr
add
fdivr
add
aad
add
sar
add
iret
incl
bswap
incl
push
leave
incl
or
enter
mov
sbb
xchg
jmp
pop
jb
add
add
add
and
sbb
and
jbe
sbb
fwait
incl
push
leave
incl
push
incl
sbb
incl
pop
in
add
incl
sub
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
decl
call
and
outsb
dec
sbb
jmp
jmp
or
pop
cmp
lcall
lcall
add
dec
das
add
inc
sub
incl
add
inc
sub
incl
and
incl
sbb
incl
pop
fdivr
add
sar
add
into
incl
bswap
incl
push
leave
incl
or
enter
mov
push
pop
mov
pop
push
insl
incl
add
pop
add
add
and
jae
sbb
xchg
decl
adc
incl
adc
fdivr
add
jecxz
add
jmp
add
repnz
sub
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
ljmp
aaa
cmp
cmp
jmp
and
jae
pop
ljmp
push
jmp
adc
arpl
call
lcall
add
pop
cmp
dec
das
add
inc
sub
incl
add
add
jecxz
add
add
xlat
incl
adc
sar
add
into
incl
bswap
incl
or
enter
enter
lods
jmp
and
out
add
push
add
add
sbb
push
sbbl
imul
and
incl
bswap
incl
adc
incl
sbb
incl
sbb
jmp
incl
sub
incl
das
std
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
decl
xor
call
and
push
aas
and
jne
and
je
and
outsb
dec
sbb
addr16
adc
fs
push
decl
and
incl
push
jecxz
add
fdivrp
add
fdivr
add
fdivr
add
incl
adc
incl
adc
incl
adc
incl
bswap
incl
or
enter
call
sbb
sbb
push
aad
add
inc
add
add
sbb
push
pop
sbb
and
incl
bswap
incl
adc
incl
pop
fdivr
add
incl
and
incl
and
incl
sub
incl
sub
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
cmp
cmp
ljmp
pushl
and
jne
and
jno
sbb
incl
pop
incl
and
incl
sbb
add
fdivr
add
add
xlat
incl
adc
sar
add
into
incl
bswap
incl
push
leave
incl
or
enter
mov
jmp
and
adc
inc
scas
add
add
add
add
sbb
push
sbb
pop
jmp
and
sbb
incl
adc
incl
push
aad
add
fdivr
add
loop
add
ljmp
sub
incl
cs
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
lcall
xor
and
pop
inc
and
jne
and
jne
and
jne
and
je
and
outsl
dec
sbb
sub
add
add
add
fdivr
add
incl
adc
incl
adc
incl
adc
incl
bswap
incl
or
enter
enter
mov
push
pop
mov
and
outsl
decl
or
jnp
add
pop
add
add
incl
sbb
pop
rcrb
push
insl
jmp
and
incl
bswap
incl
adc
incl
sbb
incl
sbb
incl
pop
in
add
in
incl
sub
incl
sub
incl
das
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
cmp
ljmp
and
jne
and
jne
and
jne
and
jne
and
jne
and
sub
lahf
incl
sbb
incl
pop
fdivr
add
incl
adc
incl
adc
incl
adc
incl
bswap
incl
push
leave
incl
or
enter
sar
sbb
lcall
popa
out
add
add
add
ud0
incl
incl
sbb
push
jae
sbb
and
pop
sbb
incl
adc
incl
push
aad
add
add
call
incl
sub
incl
sub
incl
das
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
lcall
xor
call
and
push
aas
and
jae
and
jne
and
jne
and
jne
and
jne
and
jne
and
inc
inc
jle
pop
and
incl
adc
sar
add
iret
incl
adc
incl
bswap
incl
or
enter
enter
mov
sbb
xchg
jmp
and
adc
add
add
add
add
incl
push
adc
pop
lock
jo
and
mov
push
adc
lret
incl
adc
incl
pop
xlat
incl
sbb
incl
push
jecxz
add
jmp
incl
sub
incl
sub
incl
das
std
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
cmp
cmp
lcall
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
outsb
push
xor
dec
inc
jb
cmp
test
push
sub
incl
bswap
incl
or
enter
enter
sar
sbb
lcall
add
add
add
add
incl
incl
incl
sbb
push
sbbb
jmp
and
sbb
mov
incl
adc
incl
sbb
incl
sbb
incl
push
jecxz
add
jmp
incl
sub
incl
sub
incl
sub
incl
xor
incl
xor
incl
xor
incl
xor
incl
xor
decl
xor
decl
call
and
push
push
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
pop
dec
pop
incl
push
leave
incl
or
enter
decl
pop
jmp
and
adc
dec
mov
add
daa
add
add
incl
incl
incl
push
adc
pop
lock
push
imul
and
incl
pinsrw
adc
incl
adc
fcos
add
fdivrp
add
jecxz
add
call
incl
daa
icebp
incl
sub
incl
sub
incl
sub
std
incl
xor
incl
xor
incl
xor
incl
xor
decl
xor
call
and
push
cmp
jmp
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
dec
inc
jno
add
enter
enter
mov
sbb
jmp
and
sbb
push
add
add
add
add
incl
incl
incl
incl
incl
pop
push
push
push
sbb
pop
jmp
pop
outsl
jmp
and
incl
rdseed
add
iret
incl
adc
fcos
add
fdivrp
add
loop
add
out
add
jmp
add
repnz
sub
incl
sub
incl
sub
incl
sub
incl
sub
cli
incl
sub
call
cmp
call
and
pop
inc
and
jno
and
jne
and
jne
and
jne
and
jne
and
jne
and
cmp
test
add
iret
incl
bswap
incl
sbb
lcall
push
imul
adc
xchg
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
sbb
push
mov
sbb
and
jb
push
pop
decl
adc
enter
into
incl
adc
incl
pop
fdivr
add
fdivr
add
in
add
call
incl
and
incl
es
incl
daa
icebp
incl
sub
incl
sub
incl
sub
incl
sub
incl
daa
repnz
sub
cmp
cmp
call
and
pop
inc
and
outsb
push
and
jne
and
jne
and
jne
and
sub
lcall
adc
call
sbb
and
jo
pop
push
push
lret
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
push
adc
push
rcrl
and
push
pop
mov
adc
stos
incl
shufps
adc
incl
adc
incl
push
incl
sbb
incl
sbb
incl
sbb
jecxz
add
out
add
call
incl
and
incl
and
incl
and
incl
and
incl
and
incl
and
incl
and
lcall
mov
call
and
push
cmp
call
and
pop
inc
and
popa
inc
and
mov
incl
sbb
and
jno
sbb
pop
loope
push
sbb
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
push
adc
push
lock
and
and
mov
adc
movsb
incl
bswap
incl
adc
incl
adc
incl
pop
xlat
incl
sbb
incl
sbb
incl
sbb
incl
sbb
loope
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
loop
add
loopne
add
add
or
lret
sub
ljmp
cs
sub
call
sbb
and
jno
sbb
pop
cmc
or
es
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
push
adc
push
loope
sbb
and
je
and
test
pop
sbb
incl
rdseed
add
int
add
sar
add
incl
push
aad
add
xlat
incl
sbb
incl
sbb
incl
sbb
incl
sbb
incl
sbb
incl
sbb
incl
sbb
incl
sbb
incl
sbb
incl
pop
incl
adc
sar
add
iret
incl
bswap
incl
adc
decl
push
stos
lcall
sbb
cmp
push
outsb
lcall
sbb
femms
xor
add
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
push
adc
push
rcrl
pusha
lcall
push
insl
jmp
and
push
pop
mov
adc
mov
incl
rdseed
add
int3
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
aam
add
aam
add
sar
add
sar
add
iret
incl
adc
incl
bswap
incl
adc
decl
mov
pop
sbb
and
jp
push
sbb
pop
fisttpll
or
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
sbb
push
xchg
sbb
pop
lcall
and
and
test
sbb
xchg
call
adc
mov
incl
bswap
incl
bswap
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
bswap
incl
bswap
incl
adc
decl
adc
lcall
sbb
jmp
and
and
outsl
lcall
call
adc
and
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
pop
push
dec
inc
sbb
push
loope
sbb
push
sbb
jmp
and
and
jg
pop
and
call
sbb
decl
adc
decl
mov
or
mov
or
mov
or
mov
push
adc
movsb
call
sbb
and
xchg
and
jl
and
jo
sbb
sbb
adc
inc
pop
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
sbb
dec
bound
pop
push
loope
sbb
sbb
lcall
push
imul
and
and
jnp
and
cmp
and
lcall
push
xchg
lcall
pop
mov
and
mov
and
xchg
and
cmp
and
jae
push
sbb
lcall
sbb
push
adc
je
add
push
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
push
adc
push
mov
sbb
pop
lcall
popa
lcall
sbb
insb
lcall
push
insb
lcall
push
insb
lcall
push
insb
lcall
push
imul
sbb
lcall
sbb
sbb
pop
repnz
push
lods
adc
add
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
pop
push
dec
inc
pop
push
dec
je
push
push
xchg
sbb
push
les
push
push
lds
push
push
sbb
push
sbb
push
sbb
push
sbb
push
test
adc
inc
dec
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
xor
cld
add
aas
incl
add
lock
pop
inc
add
add
int3
int3
incl
add
add
cltd
cltd
incb
add
add
data16
add
add
aas
xor
clc
add
add
pop
add
lock
add
ud0
lock
add
bswap
int3
loopne
add
add
cltd
cltd
rolb
add
add
rolb
add
add
xor
add
add
add
incl
add
int3
add
add
add
cltd
cltd
add
add
add
data16
add
add
xor
add
incl
add
add
add
int3
add
add
add
cltd
cltd
add
add
add
data16
add
add
xor
add
incl
add
add
add
int3
add
add
add
cltd
cltd
add
add
add
data16
add
add
xor
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
lock
add
sldt
lock
add
sldt
clc
add
add
pop
add
cld
add
add
aas
add
incb
add
add
add
addb
add
add
inc
add
add
add
push
add
ud0
add
cld
add
aas
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
incb
add
jno
mov
adc
add
add
add
mov
mov
pop
movsb
and
hlt
or
xchg
in
mov
cmp
shrl
cmp
jb
adc
mov
data16
pop
xor
adc
push
call
cs
icebp
loop
cmp
mov
js
push
neg
jnp
inc
orb
pop
push
lahf
xorb
stos
mov
shlb
mov
jge
pop
pop
pop
ds
or
in
fs
xor
arpl
inc
jns
in
out
sbb
xor
pop
adc
mov
imul
sbb
lret
mov
aaa
xchg
xor
pop
xchg
add
and
aam
int3
mov
popa
fwait
sbb
in
adc
data16
cwtl
jg
push
adc
mov
cld
cltd
push
sbb
clc
ret
cmp
sarb
cli
mov
push
mov
xchg
dec
mov
mov
pop
pop
pop
shrb
arpl
movsl
sub
fucom
add
mov
xor
cld
lahf
jo
mov
pop
faddl
push
add
fnstenv
mov
xchg
sub
mov
std
std
jp
sbb
inc
ror
nop
fistl
scas
jmp
push
push
mov
test
inc
and
insl
sub
negl
xor
inc
jb
push
pop
addr16
pop
sbb
insl
inc
xchg
mov
mov
sub
aaa
mov
cmp
push
xor
cmpsb
aam
mov
jge
lret
std
push
ljmp
call
pop
mov
inc
jp
inc
mov
aas
dec
ja
cmp
cmp
adc
sub
inc
mov
lret
bound
test
sub
es
xlat
cmpsb
in
jp
data16
push
pop
mov
add
and
add
pop
int3
aaa
icebp
mov
jne
mov
daa
inc
push
adc
add
cltd
xchg
cmp
mov
mov
xor
fidivrs
sahf
lods
add
or
push
stos
lods
in
int
shlb
push
jae
int
cmp
xor
lret
cwtl
push
stc
jp
or
push
loop
xchg
xchg
mov
lods
sbb
sub
mov
mov
push
adcl
inc
pop
mov
roll
inc
or
adc
inc
push
pop
adc
stos
lock
retw
push
in
add
data16
adc
jns
jg
cmp
sti
cmp
cmp
stc
andb
sub
pop
mov
push
cmp
mov
cmp
jecxz
sbb
add
aad
jo
or
les
or
or
out
mov
testb
pop
pushf
push
add
fbstp
pop
push
les
lock
or
jmp
lods
xor
data16
cld
push
mov
sbb
xor
out
add
mov
outsb
pop
inc
rorl
push
mov
sbb
sahf
insb
pop
sbb
repz
cmpsb
nop
push
pop
xchg
push
fcompl
sbb
sti
pop
dec
mov
dec
loope
cmp
push
insb
lock
loope
lea
mov
scas
stos
mov
mov
test
cmp
cmp
icebp
sub
or
imul
idiv
imulb
adcl
adc
jbe
jo
lcall
mov
or
out
fs
sub
xor
test
sbb
sbb
fisttpll
cltd
lock
pop
adc
jg
cld
dec
and
xor
pop
lret
iret
jecxz
sub
mov
adc
mov
sarb
push
or
shlb
xor
xlat
xor
shrb
addr16
loop
stc
js
push
insb
dec
and
jge
xchg
sbb
pop
add
jg
mov
dec
pop
icebp
sub
movsb
int
in
je
loopne
xor
out
ss
mov
push
pop
fimull
rclb
xchg
rcrl
and
shrb
subl
cmpsb
imul
sub
add
lcall
xchg
cltd
pop
add
inc
and
sbbl
daa
add
je
pop
push
xor
xchg
and
xor
sbb
jo
xor
jne
mov
out
je
test
fildll
add
scas
mov
fwait
jmp
jns
or
mov
in
pop
mov
push
mov
bound
out
loope
dec
xor
mov
sub
lock
pusha
dec
sbb
sarl
imul
sub
cld
dec
add
add
sub
lret
fs
push
pop
aad
pop
mov
push
inc
or
in
subl
mov
adc
push
jnp
cmp
mov
into
popf
in
sub
xorl
xlat
insl
cld
pop
fnstenv
repnz
dec
xor
fstpt
repz
mov
dec
stos
mov
popa
jnp
adc
lcall
lahf
ret
mov
fisubrl
lcall
xor
setl
inc
mov
sub
out
xchg
lock
dec
arpl
mov
rol
sbb
or
pop
mov
repnz
sbbl
mov
jae
xor
fstpl
mov
add
dec
test
mov
sub
push
pop
dec
jae
mov
stos
aaa
xchg
mov
push
jns
add
dec
or
xchg
mov
dec
out
cltd
lock
lcall
push
jne
lock
in
xor
call
mov
aas
adc
adc
push
jecxz
xchg
mov
cmp
jne
ja
jecxz
add
dec
mov
xchg
xor
lock
jnp
dec
and
enter
jo
pop
lcall
leave
outsl
rolb
jb
cltd
movsl
dec
pop
iret
mov
pop
xor
lcall
inc
dec
dec
sub
test
cs
out
rcll
lods
sbb
jbe
cmp
push
lods
es
mov
sub
cmp
movsb
cmp
int
fmull
sarl
and
dec
dec
push
pushl
cmpsl
sahf
popf
into
or
or
add
jo
dec
data16
lods
xchg
add
jbe
push
sbb
jg
adc
cltd
ja
nop
or
out
mov
mov
xor
fimull
push
test
add
or
subl
mov
lret
movl
dec
lods
push
jbe
leave
add
cwtl
mov
lahf
inc
sub
pop
rcrl
es
repnz
test
aad
jb
fwait
sub
out
aam
decl
test
into
fs
xchg
or
push
cmp
insb
jle
flds
cli
lret
sub
int
sub
ret
sbb
ret
aad
jno
mov
sbb
push
jnp
mov
pop
push
daa
in
test
lret
imul
in
mov
fwait
xor
xchg
dec
insl
fisubrs
pop
shr
mov
add
mov
dec
push
cmp
sub
shll
inc
je
stos
adc
aaa
cmp
and
xor
jl
iret
addr16
cmp
aas
mov
xchg
push
xchg
aam
jmp
push
repz
sbb
sbb
and
ss
stc
jge
mov
dec
nop
sbb
ss
push
jle
and
aas
dec
push
sbbl
and
cmp
aas
roll
inc
jno
pop
imul
mov
lea
or
addr16
call
sti
data16
mov
mov
inc
xchg
or
adcb
push
out
stos
or
jno
imul
ds
insb
out
push
mov
add
sbb
fisttps
or
sbb
scas
add
mov
mov
repz
mov
mov
xchg
imul
dec
add
test
popf
decl
mov
loope
test
sbb
cmp
pusha
cmpb
mov
shlb
mov
cmpb
mov
lret
mov
test
cmc
je
mov
into
popa
and
movsb
or
dec
cmc
in
jecxz
ss
aad
jmp
add
iret
mov
adc
dec
inc
mov
mov
rcl
mov
ret
dec
xor
xlat
sbb
mov
out
sbb
in
mov
repnz
dec
lods
aam
js
pop
sub
lret
lahf
ljmp
cmp
dec
in
and
cmp
stos
stc
lcall
fstps
lret
movsl
xor
jnp
jo
stc
aaa
or
mov
sub
adc
mov
out
popa
sub
mov
hlt
dec
dec
or
pop
cmp
xlat
xor
add
lods
ret
mov
pop
sbb
shll
xchg
mov
mov
pop
adc
adc
daa
dec
mov
rorl
ficoms
in
xchg
inc
xchg
push
sbb
data16
add
xchg
clc
mov
outsl
dec
dec
sti
test
xor
mov
int
push
dec
repz
dec
push
mov
or
shll
add
push
sarl
mov
dec
clc
cmp
mov
sub
es
mov
cltd
test
xchg
int
mov
pop
and
hlt
ja
jns
mov
out
and
xchg
test
pop
movb
mov
jno
movsl
sti
je
cmc
xchg
push
dec
pop
insb
mov
xor
or
pusha
lock
in
enter
dec
sub
movsb
jnp
daa
rorl
adc
gs
dec
into
imul
test
sbb
adc
adc
and
xchg
jmp
cltd
xor
gs
in
out
pop
ss
fadds
xlat
ljmp
cmc
inc
arpl
aas
push
mov
mov
stc
pusha
ret
sbb
rorb
push
push
adc
negb
and
add
adc
push
sti
xchg
sti
mov
mov
repz
mov
pop
fisttpl
pop
cld
sarb
ds
imul
xchg
das
fldt
xor
cmc
adc
jmp
mov
arpl
dec
xchg
push
add
sub
inc
fcmovnbe
or
movsb
aaa
mov
mov
adc
and
sti
andb
cmp
das
mov
push
outsl
mov
adc
out
sub
cmp
test
xor
xor
inc
fs
push
mov
jp
fcomip
imul
imul
rolb
sub
mov
cs
add
push
cmp
addl
rolb
ret
bound
add
sbb
mov
xor
add
mov
mov
xchg
movsb
jecxz
subl
mov
lea
xchg
xor
push
dec
mov
jp
sarb
in
insl
daa
xor
cmp
lcall
test
scas
lods
add
shll
pushl
inc
stos
mov
int
mov
jne
aam
or
dec
idiv
stc
jl
lods
or
aaa
adc
mov
int
xchg
pusha
or
data16
push
push
pop
push
inc
mov
repnz
test
xlat
in
sub
popf
adc
ss
mov
mov
push
push
sbb
inc
mov
movsl
popa
lea
jo
xor
pextrw
fwait
xchg
push
push
and
dec
in
inc
xchg
or
cmpsl
imul
leave
loop
pop
sbb
jl
mov
mov
xor
or
inc
jb
cmp
xchg
pop
scas
test
pop
imul
popa
test
lods
mov
icebp
ja
cmpsl
stos
ljmp
scas
out
fadds
pop
sbb
sbb
push
xor
push
arpl
inc
movsb
daa
mov
les
mov
adc
lcall
pop
pop
push
popa
ljmp
mov
pop
xchg
mov
mov
in
loopne
adc
mov
push
out
push
xchg
pusha
clts
jae
push
inc
pop
sbb
inc
mov
test
cmpsl
outsl
aas
xor
dec
inc
std
or
add
sahf
stc
mov
jns
loope
js
xchg
out
cld
or
divl
sub
cmp
lret
push
dec
pushf
mov
ror
jb
pop
iret
cmpsl
sub
js
xor
push
mov
cs
paddusb
lcall
jp
fisttpll
xchg
pushf
fcompl
xor
mov
jb
mov
fcomps
jno
dec
jae
test
jl
mov
inc
dec
das
stos
pushf
aad
mov
sbb
scas
insb
loopne
popa
xchg
ljmp
std
ret
pop
sbb
jl
add
push
sub
add
subb
xchg
ss
es
test
pop
outsb
divl
pavgw
xor
pop
cmpsl
movsl
stos
das
cwtl
inc
xchg
sub
hlt
ds
ljmp
sub
inc
dec
sbb
xchg
jecxz
mov
clc
popa
sahf
in
mov
es
or
or
inc
pop
pop
out
aaa
cwtl
fnstenv
mov
mov
sub
push
push
mov
das
clc
add
xchg
mov
cmp
add
mov
mov
sbb
mov
mov
cmp
inc
sti
mov
and
fld
and
sub
das
mov
jge
or
lret
shll
mov
dec
les
mov
jo
xchg
add
ljmp
out
mov
out
xchg
sbb
xor
lds
mov
sub
jbe
out
jnp
loope
dec
dec
movsl
lds
jo
push
add
adcb
mov
shll
iret
push
comiss
add
aaa
mov
and
push
cli
xor
xor
mov
jle
cltd
repnz
or
xchg
xor
test
fcomp
pushf
addr16
aas
xchg
je
je
aaa
loope
inc
out
jl
and
push
inc
mov
mov
loop
loopne
lret
out
les
lcall
adc
mov
test
enter
push
sub
mov
mov
jl
and
das
pop
add
aas
pop
std
mov
movntq
out
add
std
dec
jb
mov
iret
xlat
add
hlt
cmp
xor
fcompl
das
sbb
test
cwtl
cmovns
scas
xor
clc
pusha
pop
sbb
pop
test
push
mov
insb
rorb
fs
mov
fcmovne
mov
xor
lock
ffreep
int3
out
mov
les
repz
cmc
cli
cmp
jle
mov
jbe
cmpsl
push
sbb
out
popf
xchg
adc
inc
sub
into
inc
sub
add
stos
repnz
inc
dec
out
pusha
popa
adc
adc
jb
iret
jge
test
js
inc
in
pop
call
push
ret
sti
inc
cmpsl
nop
cmpl
orl
inc
arpl
push
into
jo
ret
xor
lcall
add
std
out
mov
sub
into
test
sub
imul
add
hlt
or
testb
jnp
xor
ror
inc
test
loop
pop
or
daa
movsl
cmpsl
in
mov
testb
pop
sti
lret
inc
cs
repz
outsl
cwtl
loopne
repnz
pop
shrl
jge
jle
xchg
sub
jae
xor
xlat
jmp
mov
and
xlat
jno
add
data16
call
sub
fxch
fisubrl
fwait
jecxz
aam
push
adc
inc
lds
or
sbb
fs
leave
inc
icebp
shll
jns
insb
fcmovb
sub
pop
fcomp
fdiv
lods
test
inc
rclb
and
pushf
fwait
pop
add
mov
mov
add
dec
roll
aaa
push
adc
mov
push
pop
or
rorb
adc
xor
andl
enter
mov
inc
sub
mov
cltd
ljmp
mov
jbe
shll
adc
lahf
rorb
xor
xchg
cli
dec
outsb
adc
pop
xor
lods
out
sahf
mov
mov
xor
jnp
sub
scas
push
pushf
mov
or
enter
lret
push
lret
dec
mov
xor
rcrl
cwtl
xor
fsubrl
cmpsb
xchg
leave
xor
add
divl
mov
jge
xchg
jmp
iret
xchg
add
js
jno
shrb
fcoms
icebp
cld
out
xchg
into
sahf
adc
fs
mov
cmpsl
pusha
ret
push
dec
mov
fwait
jne
shrl
bound
cmp
aam
int3
sub
das
bound
lock
outsl
pop
add
fstpt
repz
sbb
pop
or
push
adc
insl
jmp
mov
cmp
jecxz
iret
loop
neg
jbe
cwtl
stc
fs
mov
mov
lret
jne
out
pop
fsubs
out
bound
mov
fs
pushf
and
sbb
aad
jge
popa
mov
cmp
lds
push
xchg
xor
into
mov
cmpsb
add
xchg
cmp
sbb
loopne
push
sub
mov
jo
mov
jnp
movsl
push
jg
pop
jbe
ret
cmc
test
mulb
adc
into
fisttpl
push
sti
iret
dec
mov
xor
jno
sub
popa
jg
stos
ret
or
add
loope
or
cmp
mov
stc
push
hlt
fisttps
and
in
mov
addl
addr16
xlat
mov
sbb
mov
out
push
popf
stos
push
in
or
inc
pusha
mov
mov
lds
sarl
jle
jle
push
ret
ds
sti
shlb
hlt
jmp
ret
mov
or
cld
mov
stos
dec
lock
cmp
int3
mov
popf
dec
push
push
es
lret
into
pop
add
loope
sarb
jne
pop
lods
outsl
mov
inc
hlt
testb
dec
call
push
fisubl
cltd
lods
ljmp
daa
cmpsb
xchg
sub
clc
rcrl
insl
xorb
lods
call
shll
pop
or
addr16
mov
lods
les
lret
xchg
xor
sub
stos
or
imul
mov
jle
sbb
leave
push
jo
add
inc
fwait
add
aaa
xchg
unpckhps
stos
adc
cli
lods
test
xor
iret
fcomi
cld
dec
inc
rcrb
add
lock
xchg
pop
popa
mov
sub
iret
sub
inc
lods
out
mov
out
xchg
jns
mov
add
movsl
mov
jecxz
mov
aad
sub
add
xor
lods
inc
sbb
xchg
inc
stos
sub
xchg
mov
mov
xchg
sub
dec
movsb
mov
test
or
daa
mov
in
jecxz
cld
xor
bound
adc
lock
mov
mov
or
pop
xchg
jae
mov
jae
mov
ss
cmp
mov
cmp
clc
nop
adc
test
mov
cmpsl
leave
mov
int3
inc
push
cmp
jp
pop
sahf
rcrb
dec
xorl
cmp
adc
xlat
lret
mov
jmp
out
xor
and
imul
outsl
dec
mov
mov
cli
mov
js
pushf
outsl
xchg
push
test
fcomps
mov
pop
or
fstpt
ds
sub
popf
out
mov
es
xor
fwait
test
xor
icebp
test
out
add
imul
fs
lods
xor
pop
mov
mov
les
lea
mov
cs
sbb
das
fs
push
mov
sti
xor
xchg
push
jmp
cwtl
mov
push
rclb
aas
testb
and
sbb
adc
push
leave
data16
mov
push
cmp
dec
xchg
lds
in
jae
fdivrl
inc
lret
xchg
enter
mov
data16
outsb
jnp
loop
lds
fs
jmp
adc
or
xlat
mov
push
push
pop
or
dec
pop
xorb
fadds
sbb
or
shll
shlb
sti
es
fsubrs
repz
outsb
scas
mov
inc
mov
jl
mov
push
xorl
push
sub
insb
mov
jne
std
mov
clc
push
push
mov
mov
pop
push
or
push
js
xchg
stos
fstpt
out
out
dec
lahf
aad
sub
pop
rorl
and
ja
sahf
sbbl
shlb
add
fisttpl
jmp
xchg
clc
jmp
push
rolb
mov
out
jg
cwtl
loope
subb
pop
rcll
roll
pushf
dec
repz
dec
fchs
fdivl
adc
xchg
cmpsb
push
movsl
or
xchg
out
and
cmp
lret
dec
in
movsl
sbb
es
in
add
mov
clc
in
and
cmpsb
mov
xor
dec
shrl
ds
add
sahf
jae
xchg
ret
dec
mov
mov
movsb
push
test
int3
or
scas
lret
lahf
xchg
dec
loope
inc
jl
mov
hlt
mov
idivl
std
notb
jle
fsubr
mov
push
jns
xor
mov
imul
add
sub
addr16
sub
lahf
xchg
mull
add
testb
rorl
std
jp
push
imul
fcmovnbe
dec
jg
pop
dec
push
std
and
dec
divb
or
mov
inc
into
and
sbbl
jl
ret
shll
lahf
movsb
xor
jo
mov
js
loopne
out
jb
lods
jg
dec
mov
or
bound
and
pop
dec
out
or
mov
arpl
push
sub
testb
xor
mov
ja
jae
ret
dec
xor
rorl
mov
jbe
mov
xchg
fadd
dec
aam
test
push
mov
pop
imul
bound
inc
dec
mov
nop
add
movsb
and
xchg
dec
adc
pop
movsl
lret
inc
daa
cmpl
xchg
orl
jne
data16
xchg
adc
inc
test
adc
add
andb
movsl
sub
fisttpl
inc
sub
insb
test
pushf
and
inc
stos
xchg
dec
dec
in
dec
and
push
mov
int3
jg
hlt
lcall
inc
pop
pop
insl
sub
je
mov
pop
adc
iret
pop
xchg
stc
insl
iret
popa
sub
mov
push
xlat
sbb
inc
in
repnz
cmpsb
in
ds
xor
out
xlat
or
out
inc
jl
or
xor
rcr
outsl
push
cmpsb
test
add
xchg
sub
sbb
mov
jle
std
in
sbb
xchg
rorl
mov
icebp
jne
xor
xchg
in
test
mov
mov
jae
fisubl
cmc
and
fsubrs
cmp
ds
jns
xor
jo
ss
icebp
enter
fldl
push
fisubs
mov
rcl
fdivrl
mov
lret
out
jnp
insl
int
push
dec
push
int
lret
rorl
cmp
mov
inc
stc
jecxz
push
inc
xchg
fwait
dec
dec
leave
pop
into
gs
adc
das
ret
call
add
ljmp
xchg
sub
movsb
mov
movsb
jne
lret
adc
fucomip
shrb
jmp
push
adc
rcll
and
cmp
sub
xchg
xor
loopne
movsl
cltd
push
fildl
push
aad
test
push
cmp
fsubs
mov
mov
pop
in
mov
xor
out
cmp
clc
addl
pop
mov
out
mov
mov
jmp
inc
dec
sbb
push
jecxz
subl
ja
mov
loop
xchg
push
cmp
pop
ret
add
pop
cmp
sub
pop
bound
pop
jnp
sub
js
add
orb
fisttps
xchg
lock
mov
shl
or
push
add
xchg
pusha
jbe
out
movsb
test
add
mov
cmc
or
fcomi
cwtl
leave
xor
mov
in
movsb
sahf
pop
pop
dec
shrl
sbb
mov
push
jne
lret
loopne
inc
sub
in
xor
pop
int
inc
mov
fcomip
lock
inc
mov
outsb
mov
jb
or
out
cmc
cs
lahf
les
xchg
mov
mov
popf
shl
int3
push
outsb
mov
mov
sub
push
shr
sbb
add
xchg
mov
clc
pop
roll
sbb
scas
or
arpl
inc
int3
data16
std
mov
inc
in
add
call
pop
es
outsl
pop
inc
inc
sti
xor
sbb
xchg
stc
pop
or
dec
xchg
out
add
add
adc
lock
cwtl
test
decl
sbbl
out
je
mov
adc
fwait
imul
scas
lods
jno
pop
dec
or
mul
push
ja
or
fyl2xp1
dec
dec
sbb
lahf
sbb
fstp
in
shrb
jmp
iret
in
cmc
dec
push
push
roll
adc
push
in
sub
sub
lods
and
jmp
xchg
adc
scas
ss
xchg
cltd
out
inc
jbe
or
dec
inc
aam
mov
push
dec
test
add
or
stos
push
push
pop
or
inc
pusha
fldcw
dec
sbbb
and
into
pop
call
push
xchg
cmp
cld
mov
add
sbb
adc
sbb
sub
test
ljmp
jle
rolb
push
into
cs
push
ss
mov
loop
cmc
in
in
push
stos
lret
adc
push
mov
sbb
sbb
shl
jl,pt
ds
sbb
popf
mov
data16
xor
jo
xorps
jns
push
sbbb
lret
mov
dec
mov
mov
mov
xor
xor
jae
push
xchg
dec
fisttpll
inc
sahf
add
mov
inc
scas
arpl
cli
or
jmp
or
sbb
adc
push
xor
sbbl
lods
mov
fidivs
xchg
es
cltd
lcall
pop
daa
inc
xor
dec
mov
fisubs
mov
mov
out
mov
mov
push
pop
push
xor
jb
lea
inc
pop
or
test
test
mov
clc
arpl
es
xor
cmp
fistps
dec
mov
imul
lods
push
xchg
sub
cs
not
ret
outsl
repnz
das
jg
xor
aam
arpl
push
mov
sbb
dec
xor
add
shll
mov
mov
outsl
jno
xor
push
daa
pop
xchg
insb
xchg
add
insl
cmp
inc
loope
inc
push
js
cwtl
out
xlat
mov
lret
pop
xchg
mov
dec
add
jno
iret
rol
sbb
and
imul
out
sub
das
lods
xchg
rclb
test
pop
pop
sbb
cltd
jecxz
or
cs
es
push
push
inc
mov
push
fildl
jp
jl
mov
lds
cmp
pop
mov
ja
and
mov
sbb
into
daa
mov
pop
inc
in
push
mov
mov
push
jb
mov
scas
add
mov
sahf
cltd
js
out
lret
dec
jp
aad
mov
scas
inc
cmp
dec
mov
and
and
imul
ficoml
pop
sbb
insl
repz
mov
dec
in
push
dec
xchg
jo
rcr
lock
and
in
or
pop
out
iret
outsl
aad
test
and
push
cmp
push
jl
adc
mov
loopne
adc
mov
mov
out
mov
cmp
cld
lds
sub
adc
outsb
pop
cs
es
cltd
add
ss
mov
xor
mov
insl
mov
lret
or
test
aam
xchg
adc
insl
repz
jb
clc
push
pop
add
sbb
stos
xchg
out
pusha
push
mov
cli
xchg
movsl
jnp
add
jno
mul
enter
push
xor
call
aad
out
cmp
push
adc
cmp
mov
mov
xor
pop
cmpsl
shlb
mov
inc
xorl
xor
sub
inc
pushf
les
cmpsb
sub
xchg
push
mov
insb
nop
add
and
cmpb
xor
sbb
jne
ret
mov
enter
jae
xchg
xchg
sbb
pop
or
in
mov
push
pop
aaa
andl
xchg
mov
and
dec
in
push
outsl
sbb
out
cmc
xchg
lea
dec
push
pusha
sub
test
inc
or
xor
lcall
in
or
fsub
adc
inc
out
lods
sub
mov
cmp
ficompl
cmc
popa
mov
in
xchg
xchg
dec
jne
test
pop
repnz
sbb
out
cmp
or
jo
add
aam
or
dec
test
mov
cwtl
sub
pop
xor
pop
xchg
ja
xchg
icebp
ljmp
into
addr16
jmp
dec
and
adc
in
test
mov
cmpsl
xor
outsl
test
pop
sub
mov
xor
in
mov
pop
scas
sbb
mov
inc
aas
and
jnp
and
ja
jge
out
mov
add
adc
add
movsl
push
aam
push
dec
and
mov
pushf
sti
cmpsl
mov
lods
adc
adc
xchg
dec
adc
lods
mov
jg
sbb
in
shlb
ljmp
flds
lret
rolb
test
add
cmp
bound
mov
fstl
push
mov
mov
in
xor
adc
ds
test
cli
idivl
mov
cld
cmp
adc
test
push
imul
xchg
adc
sahf
xor
mov
bound
xor
mov
inc
push
lret
imul
adc
mov
xlat
xor
xor
mov
cwtl
mov
int
sti
pop
in
lds
mov
lret
xchg
push
dec
mov
mov
fisubl
and
cmpsb
push
cli
data16
sbb
jnp
jmp
lds
mov
adc
pop
xchg
sahf
int3
xlat
jecxz
out
ret
inc
sbb
mov
cmp
ds
pop
jae
adc
stos
dec
sbb
mov
lds
sbb
mov
pop
movsl
scas
add
push
mov
and
and
sub
mov
pop
mov
daa
ds
pop
mov
mul
out
jg
test
scas
inc
pushf
jno
jo
adc
pop
mov
xchg
ret
jnp
ss
lahf
loop
repz
adcl
flds
jne
lahf
dec
fistpll
push
movsb
movsl
aam
loope
jno
mov
not
rclb
sub
clc
ja
mov
clc
and
pop
int3
push
mov
movsb
sub
ficoml
outsl
adc
leave
addl
jecxz
xchg
imul
lds
add
pop
fisubs
mov
imul
sub
addr16
test
icebp
add
sti
adc
jne
jbe
int
dec
and
scas
sub
xor
test
jp
mov
dec
stos
inc
inc
addr16
ljmp
xchg
testb
inc
adc
stos
xchg
fs
mov
sbb
lahf
into
fcompl
xchg
dec
mov
jns
imul
mov
and
cmc
fildl
std
xorb
jle
out
add
lock
mov
movb
movsl
adc
sbb
mov
lods
call
out
fiaddl
cwtl
pop
xchg
mov
int
cmp
or
ljmp
jne
movsl
movsl
mov
arpl
mov
jns
test
adc
inc
int
stos
imul
jno
ror
adc
xchg
ret
addr16
int
mov
nop
fidivrs
dec
stos
xlat
dec
adc
inc
lahf
xchg
add
fldt
test
sarl
test
mov
push
ljmp
dec
pop
sbbl
into
out
sub
std
push
dec
pandn
addb
push
sahf
inc
bnd
out
dec
outsb
jns
cwtl
xor
xchg
mov
cmpsl
push
loop
movsl
jnp
movsb
sub
add
cmp
ljmp
sub
mov
sub
inc
inc
test
adc
lret
push
pop
outsb
cmp
bound
inc
in
test
rclb
bound
mov
and
mov
sub
out
sub
push
out
loop
jp
add
cmp
xor
fiadds
outsl
in
shlb
pop
or
dec
sbb
ret
mov
mov
imul
aaa
bound
mov
push
and
sub
out
addr16
xchg
and
jno
mov
mov
mov
push
test
mov
dec
idivb
addr16
mov
add
jne
sarl
int
pop
sti
adc
mov
pop
xchg
xchg
jmp
cli
pop
push
pop
loop
int
sahf
shlb
dec
aam
and
inc
mov
sub
pop
sbb
loopne
fs
sbb
dec
pop
inc
sub
rorl
push
ror
mov
sub
lds
xlat
and
lahf
test
mov
enter
repnz
cmpb
gs
cmp
je
add
dec
iret
sub
jne
cmp
add
cmpsb
fsubp
xor
dec
pop
js
xchg
lret
gs
dec
or
cmp
movsb
and
xor
aam
sub
jmp
mov
mov
mov
stos
lret
scas
imulb
loopne
icebp
movsb
jmp
sub
out
imul
add
int
popf
out
pop
sti
or
daa
inc
jle
mov
add
sub
cmp
xchg
cmc
lods
jge
outsb
aam
jnp
stos
fnstsw
adc
dec
sti
fstl
shlb
pusha
movsl
hlt
push
push
lcall
pusha
mov
dec
jecxz
jbe
fldt
repnz
and
adc
pop
jne
dec
jl
out
add
and
xchg
dec
outsl
add
jae
mov
movsl
out
xchg
inc
movsl
adc
into
mov
enter
pop
rorb
into
cmpsb
cmp
pop
inc
sub
mov
icebp
leave
scas
bnd
add
pop
pop
and
mov
mov
push
mov
je
mov
sti
sbb
cli
pop
cmpsl
sbb
lea
xor
out
fbld
xor
repz
iret
xchg
add
movsl
cmc
or
sub
popf
stos
sub
xchg
mov
pop
and
stc
into
xchg
fdivr
inc
sub
test
addr16
pop
scas
and
fs
call
jbe
push
push
ds
stc
jle
repnz
xor
add
popa
lcall
into
cs
and
or
adc
sbb
jecxz
fwait
lock
xor
lods
xchg
leavew
ftst
fiaddl
fsub
adc
and
ret
out
xor
enter
mov
lock
and
test
outsl
sahf
das
mulb
lcall
adcl
ljmp
dec
sbb
adc
sbb
and
dec
in
jl
sub
jmp
cltd
xor
sub
and
mov
pop
fwait
xchg
sbb
in
cmp
sub
roll
and
or
pop
mov
in
stc
or
test
sub
mov
mov
jbe
shll
or
inc
fistpll
adc
repnz
imul
into
pushw
popf
inc
and
xchg
jl
orb
pushf
jns
call
fistps
jmp
out
test
and
out
cmpsb
movsb
je
xchg
inc
cs
jl
push
mov
jbe
arpl
jne
or
add
mov
aas
inc
and
xchg
cld
cmp
mov
popf
mov
lock
mov
push
mov
or
adc
jge
ret
jbe
sbb
sub
cmp
pop
iret
mov
xchg
imul
divb
sbb
cmp
xor
xchg
mov
dec
cmp
bnd
shrl
fwait
ror
dec
or
iret
xchg
mov
enter
repnz
dec
arpl
gs
fnsave
sbb
icebp
add
jg
xchg
or
mov
dec
push
lret
testb
into
sub
ljmp
lret
outsb
jmp
sub
es
inc
hlt
lret
test
or
dec
repz
push
sbb
repz
fstps
or
mov
sbb
or
or
xlat
in
push
sarl
sub
mov
shll
data16
mov
hlt
lock
jg
push
outsb
mov
les
mov
in
inc
or
cmp
addr16
mov
pop
fs
test
aam
pop
sarb
icebp
aam
add
xor
inc
sbb
into
std
fwait
inc
push
pop
dec
mov
dec
icebp
addr16
mov
cmp
ss
and
cmp
ljmp
aas
mov
adc
xchg
dec
stos
scas
clc
stos
pop
iret
push
sub
aaa
lret
fdivs
int
jle
jg
add
popa
mov
xor
popa
daa
cmp
push
test
mov
lods
cmp
out
out
pushf
and
movsb
pop
ret
arpl
sahf
test
test
sub
sbb
dec
mov
fnstcw
mov
out
aad
shll
sahf
dec
cmpsl
push
incb
jae
jbe
lds
idivl
push
xchg
xor
inc
jbe
in
adc
fnstcw
mov
addps
jge
adc
xor
pop
es
push
and
mov
in
fdivrs
mov
adc
xchg
outsb
ret
add
and
add
mov
pop
push
clc
jb
addr16
pop
push
inc
push
lock
ret
stc
push
fwait
and
popf
mov
jl,pt
add
insb
stos
xor
inc
insb
scas
push
cmpsl
bswap
cmc
cmpsl
es
sub
push
mov
lret
cmp
inc
push
jne
fists
repz
and
xchg
or
jae
out
leave
stos
std
sub
inc
sarl
lret
mov
addr16
adc
or
daa
js
or
rcrb
jge
jmp
cmpsl
adc
mov
pop
cltd
aam
cmp
aad
jae
jnp
pushf
or
jno
popf
ret
mov
in
or
push
fsub
inc
mov
adc
stos
leave
and
mov
sub
test
fs
dec
sbb
stos
pusha
hlt
mov
test
les
iret
leave
cmpsb
cld
jae
fcmovb
insb
inc
xchg
dec
data16
xorb
scas
shlb
std
push
xor
mov
dec
leave
mov
test
push
push
mov
mov
cmpsb
or
in
movl
mov
lret
cmp
stc
dec
and
adc
jae
mov
jne
bound
les
addr16
stos
out
aam
rorb
mov
jp
or
sbb
es
dec
imul
scas
add
mov
movsb
jns
test
xorl
jnp
sub
es
push
dec
pop
shrl
jae
fnstcw
bound
out
out
into
mov
test
outsl
or
push
fs
mov
or
inc
dec
xor
ja
sbb
mov
das
loope
lds
fists
jecxz
pop
adc
std
jp
pop
or
jne
inc
push
and
mov
cmp
stos
daa
or
pop
cmp
xor
cmpsb
out
aas
stc
sub
jno
sub
fstps
sub
aad
lds
mov
int
or
and
cmpsl
push
dec
sub
aam
adc
inc
add
fistl
xor
sub
loop
mov
adc
lea
outsb
lret
stos
dec
sub
in
or
and
out
rolb
lds
jbe
es
adc
xor
rcrb
or
loopne
xchg
imull
sbb
aaa
adcb
outsl
add
or
cmc
add
dec
lods
jmp
and
jno
movsb
int3
mov
push
add
iret
add
push
in
add
mov
jno
push
inc
xor
shll
mov
cmp
sbb
adc
hlt
sti
adc
addr16
push
ss
fistpl
popf
jb,pt
sbb
jmp
shll
sub
xor
es
iret
jno
mov
push
sahf
out
mov
jo
sahf
mov
inc
adc
lods
mov
mov
iret
pop
jne
scas
enter
rolb
mov
xor
jnp
ljmp
mov
xchg
fstpl
xor
daa
and
int
jb
hlt
push
lret
ljmp
mov
lcall
je
mov
mov
std
jp
jg
cltd
pop
fnstcw
out
and
ljmp
subb
mov
mov
cmp
push
lret
push
sub
jmp
mov
mov
loop
cmc
sbb
ljmp
ret
xchg
call
mov
push
scas
idiv
scas
push
jb
repnz
xchg
mov
mull
psraw
push
jmp
imul
mov
pop
inc
dec
fildl
push
mov
lock
fisubs
arpl
mov
jecxz
push
adc
inc
and
and
pop
sub
jb
or
mov
dec
dec
mov
and
cmp
jne
xchg
xor
sbb
xorl
push
pusha
xor
inc
jno
sbb
push
std
aam
mov
adc
fs
mov
and
push
cld
push
xchg
test
mov
mov
inc
inc
jmp
push
sbb
lds
cmp
mov
cmc
xchg
or
adc
jne
jbe
addl
lds
jmp
pop
push
movsl
scas
xchg
divb
jne
inc
mov
loope,pt
jno
stos
int3
adc
cltd
inc
lahf
addr16
cmp
and
test
xlat
int
sbb
insl
mov
jmp
shlb
mov
adc
scas
mov
push
jbe
stos
les
or
stc
inc
pop
mov
je
lock
pop
stos
jg
subb
cmp
mov
mov
inc
xor
into
or
mov
pop
pop
inc
mov
xor
push
adc
cmp
mov
cmc
push
xor
cs
push
inc
or
cli
lods
jnp
jno
aad
and
push
arpl
pushf
mov
mov
cwtl
test
xor
repz
orl
pop
stc
or
push
push
pop
loop
xchg
cs
out
push
push
xchg
out
mov
sbb
pop
in
repz
sarb
jmp
cmp
mov
aad
cli
fimuls
add
dec
movsb
mov
pop
or
pop
cmp
mov
push
cltd
test
aad
jle
bound
sbb
pop
cmc
mov
cmp
cmp
and
push
fsub
jae
add
dec
aam
out
dec
jbe
leave
ds
mov
jecxz
jmp
xchg
or
imul
lahf
jbe
mov
addr16
inc
repnz
enter
sub
ret
sti
fcmovbe
sub
inc
scas
cld
mov
in
in
push
out
push
push
add
jl
out
pushf
fcmovb
and
in
lds
mov
lods
inc
rcll
cmp
or
add
jecxz
dec
mov
mov
pop
jle
jbe
std
add
outsl
in
cmpsl
sbb
enter
jl
jne
pop
push
pushf
gs
rclb
jnp
cmc
xchg
add
lods
and
rcrb
jb
scas
ljmp
cmc
stos
mov
test
pop
les
int
std
mov
sbb
lds
jge
xor
xchg
jge
dec
enter
push
repnz
fxch
imul
xchg
push
decb
lea
imul
shll
rolb
fucom
push
add
sub
adc
xchg
int3
jbe
push
sbb
out
loop
mov
xchg
cmp
mov
fwait
or
xchg
outsl
cmpsl
rol
add
add
repz
xor
xchg
mov
push
adc
xchg
xlat
jb
xchg
stos
push
shll
push
or
js
in
jne
jge
xor
in
inc
jge
adcb
jg
es
pop
cs
adc
xor
leave
stos
pop
mov
mov
psubusb
and
or
dec
jle
stos
nop
inc
cmp
clc
sbb
jae
cs
sahf
mov
mov
xor
std
testb
out
push
js
stc
jno
arpl
nop
sarl
xchg
dec
scas
les
test
aas
adc
sbb
in
xchg
addb
mov
fcoml
mov
movsb
inc
bound
cwtl
add
sub
lret
pop
cmc
mov
outsb
jns
ja
sahf
rorb
aad
mov
mov
leave
jbe
xchg
jg
out
mov
adc
xor
sbb
mov
sarl
mov
xor
mov
orl
cmp
shlb
adc
xor
shll
cmpsl
int
leave
test
scas
xchg
pop
xor
dec
ljmp
push
int
mov
jecxz
cwtl
popa
stc
lcall
push
ret
lods
hlt
outsb
andl
mov
adc
jl
rolb
shll
fs
aad
pop
std
push
mov
mov
out
sarl
jge
xchg
les
rolb
jge
sbb
stos
pusha
into
repz
arpl
jmp
cmc
ss
mov
dec
adc
popa
push
stos
ljmp
mov
arpl
mov
jecxz
pop
jmp
xor
jle
shr
dec
push
jg
and
or
loopne
rol
push
push
stos
popf
in
imul
and
sbb
xchg
repnz
inc
or
out
shll
xchg
fsubrp
loope
xor
xchg
dec
inc
inc
idivb
dec
add
sbb
scas
ljmp
push
rorl
test
push
or
adc
fsts
jmp
mov
jl
cmp
mov
cmpsb
sub
in
inc
rcrb
mov
das
ss
aad
add
pop
clc
or
inc
jo
push
lods
xchg
and
mov
push
pop
int
cmpsl
jnp
daa
je
push
mov
inc
jne
faddl
inc
pop
cmp
xchg
or
test
pop
int
popf
into
out
inc
sbb
adc
adcl
test
cmp
jl
ret
outsb
inc
push
sarl
sbb
add
call
sar
xor
dec
movsb
push
push
cmp
cwtl
adc
mov
jp
inc
ljmp
pusha
cmp
pop
cmp
xchg
cld
jbe
mov
js
and
push
cmpsb
and
xorl
push
mov
pop
sahf
inc
jge
hlt
add
lea
in
scas
adc
out
jmp
mov
cltd
adcl
push
inc
rcrb
mov
loopne
push
and
lods
stos
xchg
and
xchg
sbb
jl
cmp
loope
push
xchg
into
std
lock
rcrl
inc
fcomps
rorl
les
dec
mov
loopne
cmp
mov
nop
jmp
in
movsl
xor
je
aaa
push
arpl
mov
mov
mov
popf
rolb
movsl
in
aas
inc
or
add
adc
push
xor
dec
add
call
xlat
xchg
mov
adc
out
ljmp
scas
xchg
mov
stc
add
fisubl
pop
cmp
leave
ret
inc
inc
int
insl
sub
mov
push
xchg
test
and
sbb
enter
cmp
into
mov
pushl
imul
sahf
add
add
repz
loope
fsubrl
test
jae
test
xor
adc
add
cmp
addr16
inc
inc
ror
pop
int3
es
inc
mov
xor
add
inc
mov
popa
cli
insb
or
sar
jb
hlt
jb
dec
cmp
mov
push
fldenv
rorb
push
jecxz
fs
sbbb
cmc
fwait
sbb
jbe
int3
mov
shlb
mov
fdivs
out
subl
ss
or
lods
adc
jmp
mov
lock
pop
mov
jp
and
ret
sbb
pop
push
das
dec
sub
cwtl
test
lds
pop
ficoms
loopne
lock
pop
or
and
push
aas
cld
stos
addr16
fcmove
cli
rcrb
mov
dec
xchg
xor
ret
add
pop
push
ret
sbbb
mov
or
push
movsl
sbb
hlt
out
mov
xor
add
ja
xchg
add
add
or
xchg
sbb
and
gs
mov
rcll
push
icebp
test
cmp
cmp
pop
and
out
mov
dec
dec
adc
mov
or
imul
cmpsb
call
leave
notl
sbb
inc
shll
and
jne
lret
add
insl
push
push
pop
mov
mov
adc
and
add
outsb
movsb
xlat
xor
insb
or
test
add
out
cmp
add
push
test
loope
movsl
arpl
adc
incl
adc
push
push
es
out
and
call
sub
fimuls
fs
cmp
sbb
into
fstps
or
sub
xchg
and
pavgb
cli
push
aas
bound
xlat
in
or
add
sarl
cmp
and
in
ret
sub
imul
sbb
mov
push
add
pop
sbb
in
stos
xor
sbb
fsubl
push
popa
lahf
arpl
jge
ja
sbb
dec
adc
bound
out
out
jae
cmpsb
dec
out
adc
fimull
addr16
fwait
adc
leave
sub
pop
lock
loop
fs
cmp
dec
push
pop
hlt
in
pop
xorl
sarl
push
pusha
addb
jl
clc
out
push
dec
ret
lahf
or
cmp
mov
inc
inc
mov
xor
scas
jle
pushf
fdivrs
sbb
mov
pop
out
movsl
into
dec
enter
call
push
or
test
and
cld
fcmovnbe
outsb
push
ss
sbb
add
imul
and
mov
mov
jb
or
xchg
pop
or
scas
js
int
in
cld
lock
in
cmp
gs
pop
pop
int3
and
xor
imul
fldcw
jmp
addr16
lods
xchg
loop
fistl
dec
addl
rolb
clc
mov
ljmp
xrelease
imull
sub
jp
dec
cmpsb
mov
roll
mov
jbe
or
sub
insb
dec
sub
xor
popa
pop
je
and
and
pop
mov
or
sahf
sti
mov
sub
pop
cli
cmp
adc
and
ljmp
cli
jo
mov
sub
mov
mov
andl
mov
jge
pop
pusha
and
outsb
pop
mov
lods
outsl
mov
inc
dec
out
mov
inc
fstl
jle
out
cs
or
or
and
shr
jb
or
mov
mov
mov
sub
repz
scas
int
jmp
test
sub
cmp
fwait
cmpsb
jbe
jecxz
xorl
jecxz
std
imul
cmc
dec
pop
sti
cmp
fs
jmp
mov
imul
push
xlat
cmp
or
push
mov
addl
pop
push
mov
dec
test
mov
lods
xchg
stos
in
mov
cvttps2pi
push
ss
nop
enter
inc
lret
cmpl
insb
dec
push
sub
sub
xchg
loope
pop
mov
dec
fidivl
push
insb
sub
and
cmp
cltd
ja
in
inc
add
sbb
push
jmp
nop
xor
stc
out
inc
adc
jne
test
xchg
mov
and
and
fdivl
pop
jge,pt
xchg
clc
int3
inc
daa
in
push
mov
adc
xchg
test
sub
mov
pop
sbb
incl
inc
outsb
fwait
mov
scas
gs
std
cltd
jns
mov
inc
xor
and
inc
inc
test
cmpsl
fdivrs
insl
popa
push
fdivrl
insl
lcall
idivl
xor
pop
adc
pop
add
mov
lret
nop
sbb
sbb
cmp
sub
mov
decl
and
dec
loope
ljmp
pop
push
jge
in
or
push
rcrl
loop
mov
xchg
push
ljmp
fnstcw
inc
imul
int
xchg
jecxz
pop
or
add
outsl
pop
ja
add
xor
mov
shlb
cli
push
in
jae
popa
ss
icebp
fsubrs
sbb
add
in
xchg
mov
sti
xchg
push
int3
pop
xchg
push
lret
stos
jle
jb
lahf
test
pop
mov
rclb
pop
or
popl
add
dec
push
cltd
dec
mov
and
mov
icebp
stc
or
andb
push
mov
sub
jno
sbb
insl
pop
fdivr
jns
shl
pop
sbb
cmp
out
cmc
mov
jbe
mov
mov
ret
cmp
lea
mov
rcr
pop
inc
adc
pop
arpl
in
das
push
test
fmull
sbb
jl
iret
cmp
ljmp
mov
mov
push
sar
xchg
mov
cmp
push
aaa
pop
push
add
out
sbb
sti
xchg
insb
pop
push
je
aad
repnz
fwait
adc
jge
push
imulb
stc
push
push
cs
mov
mov
fistpll
clc
push
mull
fimull
lock
mov
fadds
jne
arpl
in
in
testb
mov
daa
inc
sarb
dec
pop
push
dec
mov
out
push
mov
jbe
es
xchg
adc
out
out
mov
pop
inc
mov
mov
mov
mov
mov
loop
imul
fcomps
addr16
das
fcoms
jb
cltd
lcall
js
clc
and
mov
pop
adcb
mov
fs
mov
mov
sbb
bound
and
cmpsb
fisttps
outsb
stos
pop
dec
adc
xor
inc
mov
xchg
jmp
push
mov
or
fidivs
test
mov
cs
pop
je
out
data16
or
lea
mov
mov
pusha
cmp
repnz
loop
scas
pop
adc
or
lods
out
jecxz
adc
pop
mov
jno
das
pop
ljmp
add
inc
mov
sub
adc
scas
mov
movl
mov
repnz
ds
inc
jmp
inc
cwtl
cmpsl
cs
aam
je
fistpl
mov
mov
fisubl
jnp
ljmp
jb
iret
mov
subl
xlat
lea
xorl
cwtl
xchg
or
sbb
sahf
lcall
push
sub
pusha
xlat
sbb
cwtl
or
dec
scas
dec
mov
xorps
push
dec
and
xchg
mov
pop
jnp
sbb
mov
ljmp
arpl
clc
repz
ja
mov
xchg
jns
test
mov
cmp
insl
ja
fwait
ret
jmp
arpl
iret
jo
adc
gs
xor
fwait
mov
lock
int3
mov
jno
jo
xchg
xchg
lock
xor
mov
int
int
push
imulb
sub
xchg
jbe
xor
ds
xchg
cmp
push
in
mov
mov
mov
cmp
sbb
push
pop
mov
popa
scas
mov
inc
cmp
sbb
mov
divl
push
inc
mov
pop
xor
fcmovbe
xchg
mov
dec
imulb
sub
lods
arpl
cs
andl
mov
jb
sbb
xorl
sbbb
mov
or
sub
xor
pop
sub
lcall
jne
pop
inc
push
sti
mov
ja
or
jns
sti
fs
mov
cmp
add
in
jne
mov
or
xchg
pop
mov
mov
ds
mov
fucomp
data16
jns
lahf
pop
ss
cmp
sbb
sbb
and
scas
xchg
aas
jb
stc
std
repz
insl
jl
fstpl
movsl
mov
add
mull
lock
mov
mov
mov
xchg
cltd
inc
sahf
out
mov
jo
sub
cltd
xchg
inc
inc
mov
jp
and
neg
cltd
jl
add
sbbb
cltd
mov
inc
push
pusha
pop
xor
mov
test
cmp
call
cmpsl
mov
jge
push
loop
mov
xor
xchg
add
adc
pop
jns
sbb
push
pop
adc
ds
mov
xor
mov
aam
lret
negl
push
sub
outsb
imul
push
stos
jmp
jnp
and
faddl
rcr
into
addr16
sbb
cmpsb
loope
push
jnp
push
orl
pop
fildll
sub
xor
jnp
data16
mov
gs
inc
push
dec
xor
or
and
jge
push
jnp
ret
jns
cmp
xchg
rcrb
inc
cmp
mov
mov
imul
cwtl
into
in
pop
test
pop
cld
add
adc
int3
inc
cmp
fld1
loopne
and
lcall
addr16
sub
jmp
lahf
jmp
sub
push
stos
jmp
inc
scas
jno
xchg
cwtl
outsl
jmp
xor
adc
rcrl
add
jle
int
aam
ret
insl
stos
out
or
icebp
popf
xchg
leave
repz
div
ja
mov
icebp
test
fiadds
out
jl
roll
ss
cmp
push
dec
sub
aas
lcall
fstpl
stos
sbb
insl
mov
sub
scas
xchg
and
imul
mov
movsb
lea
and
fistpll
mov
cmc
hlt
add
mov
and
outsl
ljmp
ficompl
lahf
fdivr
scas
shr
in
mov
dec
into
subb
cmc
int
inc
jno
aaa
subl
arpl
push
and
imul
mov
pop
test
idivb
test
push
rcrb
sbb
sub
nop
pop
incb
decl
arpl
ljmp
mov
push
cltd
xor
imul
pop
adc
jecxz
hlt
or
mov
mov
cwtl
out
mov
or
lea
pop
cmp
xchg
cli
movl
outsb
inc
aaa
jmp
sub
push
stos
cmp
incl
xchg
xchg
popf
sub
or
test
cmpl
int
repz
ret
add
das
lret
scas
pop
or
addl
jp
and
aad
lods
inc
adc
jno
pop
in
pop
mov
xchg
mov
lret
je
push
pop
subl
mov
lcall
aad
in
clc
aaa
pop
add
xchg
or
cmp
or
mov
loop
jg
pushf
xorl
sbb
jmp
sbb
pop
mov
insl
mov
xchg
nop
ret
cmp
ja
jmp
sbb
mov
pop
mov
pop
xor
pop
sbb
jp
sbb
mov
lock
and
adc
inc
loopne
jl
jae
out
adcl
bound
push
cmc
xchg
in
mov
cmc
xchg
xor
jg
sub
mov
xor
xchg
rolb
push
sbb
jle
adc
or
jp
adc
scas
or
or
fdivp
imul
movsl
imul
arpl
inc
js
pop
sbb
pop
fwait
lcall
fisttpl
dec
pushf
lea
mov
repnz
out
xor
and
jbe
data16
fisubs
jb
push
cmpsb
out
pop
out
bound
dec
ret
pop
cld
push
in
mov
sbb
adc
mov
leave
push
in
aad
cltd
xor
sbb
push
xor
pop
pop
xor
imul
testl
mov
push
das
inc
jb
aaa
shll
xchg
push
or
fcmovnb
int3
add
dec
cmc
int3
cli
or
jns
insl
jecxz
adc
dec
xchg
lds
mov
or
pop
sub
jg
sbb
sub
adc
pop
xchg
aad
leave
inc
adc
adc
jne
pop
std
inc
pushf
sbb
nop
pop
lret
lock
and
scas
mov
sub
adc
pop
pop
add
std
cld
mov
nop
stos
inc
mov
icebp
insb
cmp
test
jbe
mov
sti
sub
scas
xchg
dec
popf
lods
jb
mov
int
fmuls
mov
inc
sarb
pop
es
lret
shrl
jae
push
push
mov
stc
push
daa
jo
enter
subl
jg
pop
sub
roll
inc
mov
jmp
cwtl
sbb
mov
mov
mov
push
mov
int3
out
movsb
ficoms
aam
incb
sbb
pop
jmp
jp
inc
data16
jmp
loope
or
mov
std
xchg
sbb
add
jnp
mov
push
push
pop
insb
xor
iret
cwtl
rolb
cmpsl
fwait
jmp
mov
ss
mov
cs
adc
repnz
inc
sub
sbb
movsb
mov
aaa
int
cmc
or
sub
stc
cmp
sub
push
mov
pusha
inc
sub
ret
mov
loope
ret
out
xor
lods
mov
sub
int
loopne
xchg
lods
test
jecxz
xlat
ret
mov
mov
push
adc
add
and
dec
sti
sub
inc
or
call
inc
fldcw
stos
leave
int3
shl
outsb
jb
adc
out
mov
xchg
adc
shr
add
lret
mov
dec
xchg
dec
inc
adc
enter
aad
movsl
stc
or
pop
lcall
lahf
cmp
pop
inc
ss
or
xchg
cmpsb
clc
cmp
es
mov
test
jl
repnz
and
push
push
inc
ss
inc
mov
int
out
jbe
in
iret
les
into
shlb
icebp
ljmp
aas
sub
xchg
add
dec
int
loope
sub
mov
xor
lea
outsb
sbbb
data16
test
pop
imul
stc
adc
push
jge
xor
fmuls
mov
mov
sub
dec
inc
mov
dec
cmpsl
clc
or
mov
sub
and
repnz
jecxz
cmp
mov
mov
jb
jmp
xor
sub
inc
std
xor
pop
sbb
lretw
stos
gs
hlt
mov
std
xlat
ja
fmuls
jno
mov
std
data16
in
xchg
outsl
sbb
lcall
fnsave
dec
mov
push
mov
pop
mov
xchg
shll
push
mov
sbb
or
fistpll
fmull
push
xchg
push
shrb
inc
dec
bound
mov
adc
scas
push
iret
jecxz
pop
dec
or
mov
and
sti
loopne
mov
push
cli
jmp
lods
mov
dec
cmpsb
lret
inc
add
sub
insb
push
aam
rolb
dec
in
add
xor
add
out
push
pop
mov
int
pop
or
ja
sbb
ret
je
add
pushf
add
sti
andl
icebp
dec
mov
adc
pop
mov
jb
lea
jge
xlat
outsb
cmpsb
adc
test
ljmp
jne
fldcw
and
inc
movsb
out
add
imul
pop
xchg
fwait
jo
sbb
lret
jge
in
cmp
jg
mov
cmpsb
int
leave
and
xchg
lret
cs
jle
jecxz
push
lods
add
loope
mov
push
mov
fs
pushf
add
or
xor
mov
sti
pusha
adc
inc
aas
mov
test
and
sbbl
dec
and
shlb
mov
mov
int3
test
and
or
lret
sub
dec
ss
cmp
sbb
mov
cmp
sub
mov
push
jl
sub
and
pop
pop
xchg
movsl
testb
out
ja
js
pop
data16
adc
int3
stos
or
leave
enter
cmp
ret
int
inc
cmpsb
dec
inc
aas
sbb
scas
lahf
fmull
loop
sti
in
mov
loopne
popf
imul
xor
mov
xor
in
out
xlat
push
mov
or
xchg
or
outsb
std
insl
adc
ret
imul
mov
cmp
jns
mov
jecxz
pop
gs
push
sti
xor
hlt
shl
out
popf
outsl
fwait
repnz
jne
cwtl
test
stc
sti
mov
lcall
cmpsl
flds
fcoms
cmp
mov
stos
sbb
xchg
imul
inc
adc
inc
push
imul
stos
or
lods
daa
adc
cmp
jnp
push
or
jmp
in
js
shll
ficoms
push
fstps
sti
insl
ja
dec
or
mov
sbb
mov
or
popa
xor
outsl
adc
es
les
out
rcll
jp
adc
and
add
pop
sub
cvtps2pd
push
push
fs
mov
jp
cmp
out
stos
mov
rcrb
dec
aam
jecxz
in
mov
sbb
xor
adc
in
rcrb
mov
push
jmp
fcoms
mov
loopne
rclb
add
lds
je
imul
pop
push
mov
pop
pop
sahf
add
std
shl
sub
fsubrl
insb
mov
sub
jge
movsl
pop
mov
sub
cwtl
adc
pushf
cld
imul
aam
cltd
lret
add
mov
jp
dec
repnz
filds
mull
add
cli
cmp
roll
jo
test
cmp
xchg
cmp
inc
aas
jge
js
loop
daa
jbe
andl
imul
jb
add
cmp
in
dec
insb
lods
cmp
cmp
add
jbe
leave
dec
ja
dec
sub
add
cmp
jbe
push
addr16
in
mov
scas
dec
and
cld
xchg
xor
rcrl
cmp
xchg
test
stos
lret
shrb
ja
lods
xchg
xor
mov
data16
push
imul
jp
fbstp
pushf
loope
mov
jle
inc
repnz
stc
inc
pop
insl
addr16
cwtl
and
add
add
cmpsb
mov
sub
pop
js
push
pop
jmp
pop
adc
out
repz
and
push
mov
out
and
das
cld
hlt
in
or
lret
mov
arpl
aad
jae
sub
and
cmp
scas
inc
loopne
or
clc
mov
mov
pop
leave
xor
or
dec
pop
out
inc
mov
and
lods
push
xchg
jns
jnp
add
mov
andb
test
cmpsb
push
push
loope
sub
pop
or
int3
pop
sti
sbb
cmp
in
sub
cmc
mov
pop
rol
repz
popaw
test
add
addr16
and
lock
test
sbb
pop
arpl
iret
adc
cmp
faddl
sahf
insl
jecxz,pn
and
and
mov
popf
push
push
loope
lahf
jl
jl
shll
popa
dec
add
aaa
dec
call
lods
bound
mov
shl
daa
cli
mov
cmp
xchg
mov
push
cmpsl
push
imul
out
lret
dec
les
jl
xchg
hlt
insb
fs
fidivs
or
sbbl
sub
inc
test
cmp
adc
fadd
mov
inc
mov
nop
shr
add
mov
fadds
push
push
mov
mov
xchg
cs
in
mov
and
push
sbb
test
loopne
call
addb
jg
pop
xlat
xchg
mov
mov
mov
xchg
cltd
int3
iret
push
fidivs
fwait
and
sbb
sub
add
pop
lcall
sti
test
popa
hlt
dec
icebp
dec
lret
push
sub
pushf
dec
test
outsb
outsb
mov
ret
and
jne
sbb
sbb
nop
push
pop
pushl
push
pop
mov
push
addr16
push
pop
cltd
add
call
sub
in
mov
ds
stos
jl
or
cmp
jbe
xchg
cmc
cmpsl
adc
arpl
clc
insb
test
in
aaa
jle
rolb
and
in
adc
imul
cld
test
daa
mov
fld
sub
sbb
xchg
insb
es
lods
fstps
xchg
cmp
loopne
inc
jl
lcall
div
fimuls
and
popa
sub
mov
js
xchg
inc
and
test
add
lods
ja
pop
lock
push
xor
fmull
fs
cmp
sahf
push
mov
xchg
lods
lret
outsb
lcall
rcrl
pushf
mov
loope
push
push
mov
cwtl
das
inc
inc
jmp
xor
mov
int
mov
xchg
movsb
iretw
cltd
push
outsl
subl
and
jnp
adc
push
int
push
inc
repnz
or
es
lods
or
xor
pop
cld
test
shl
push
ror
and
jge
cmp
sahf
jg
jae
and
cs
jmp
cmp
or
mov
mov
sarl
inc
movsl
insb
push
shlb
ljmp
xchg
mov
std
test
repz
pop
mov
inc
ss
in
jns
fdivrp
pop
loop
testb
push
clc
ja
mov
dec
dec
xchg
lods
mov
aam
mov
sub
mov
xor
into
jns
mov
lods
mov
rolb
aad
xor
adc
dec
cmpsl
jmp
adc
test
inc
dec
jmp
and
push
ds
je
dec
enter
mov
incl
sti
add
jg
mov
xchg
iret
sbb
mov
fwait
adc
aam
adc
and
inc
add
fdiv
hlt
pop
jne
imul
jge
rol
pop
mov
sub
es
into
dec
push
cmp
jecxz
xchg
add
rorl
test
leave
in
jge
push
dec
nop
es
mov
insl
test
orb
or
inc
sub
sub
daa
fwait
xor
inc
daa
fs
sbb
mov
inc
cmp
stc
jl
inc
sub
adc
loopne
pop
xor
jl
cwtl
int3
lock
dec
dec
inc
inc
lea
sbb
stos
mov
data16
rorl
sarl
imul
cmc
rcrb
sub
mov
or
ds
ja
dec
leave
push
pop
es
imul
fwait
in
jmp
xchg
cmp
aas
in
das
pop
iret
add
push
mov
pop
dec
loopne
negb
cmp
mov
cs
popa
out
mov
cld
icebp
addr16
inc
aam
push
xor
jp
sub
stos
sub
stos
scas
push
xor
mov
movsl
pop
shrb
scas
dec
sbb
mov
daa
xchg
lods
divl
or
into
jne
fmuls
mov
and
or
xchg
or
xor
and
mov
popf
xchg
adcb
not
xor
stc
rolb
out
cmc
sbb
jmp
jns
xchg
packuswb
rorb
fldcw
std
inc
pop
add
xchg
insl
repz
sarl
lahf
push
push
es
xor
pop
popf
add
fdivl
jmp
cld
and
and
out
add
jmp
arpl
lret
dec
dec
add
int
popa
xor
daa
daa
mov
sarl
pop
sub
push
data16
mov
mov
outsl
ljmp
and
mov
pop
fistpl
fidivrl
popa
push
fdivrs
add
aaa
mov
lods
add
xchg
fiadds
inc
loop
pop
cmpb
and
push
push
or
stc
dec
cwtl
mov
jg
mov
pop
jl
pushf
inc
mov
fdivrl
pop
lea
sahf
or
adc
mov
adc
dec
push
push
shl
mov
dec
sbb
sbb
fwait
add
mov
jns
das
fidivrl
js
fldcw
insl
adc
scas
dec
scas
add
dec
sub
and
sbb
inc
push
scas
loop
dec
pop
mov
adc
inc
movsl
pop
jle
push
mov
iret
fld
imul
pop
dec
ds
fnstsw
add
pop
pop
push
stos
mov
inc
xor
orb
fcom
imul
or
sarb
push
fs
jne
rcrl
mov
pop
cwtl
sti
adc
mov
add
jbe
mov
dec
insl
sbb
jmp
sahf
inc
sti
inc
adc
fisttpll
loope
push
xchg
in
addl
mov
pop
push
xchg
cwtl
push
rcrb
pop
notb
push
ds
add
dec
pop
orb
jg
ret
insl
jno
mov
mov
mov
lahf
roll
std
leave
pop
pop
loopne
int
rcrl
push
loop
outsl
int
sti
popa
push
cld
jb
adc
imul
arpl
xlat
test
add
jns
sbb
ret
sub
stos
icebp
pop
mov
lahf
jl
cli
movsl
ljmp
mov
icebp
test
ljmp
mov
in
dec
mov
insl
insl
cvtpi2ps
sbb
or
stos
mov
mov
xor
mov
enter
mov
popa
in
cmp
or
or
mov
sub
jne
stos
push
lahf
lret
clc
dec
sub
ds
dec
mov
add
cmpsb
lret
push
ss
jmp
xor
repz
loope
data16
and
pop
sub
mov
mov
aad
jle
cli
pop
mov
mov
shll
aas
mov
notb
xor
addr16
sub
add
rorl
mov
ja
insb
jnp
je
test
xchg
add
mov
dec
jmp
adc
jl
jnp,pn
cli
push
jo
scas
popl
idivl
pop
fisubl
lcall
negl
lea
in
adc
jbe
xor
loop
xchg
jne
jo
adc
xor
jl
lods
iret
les
push
andb
add
in
fnsetpm(287
dec
sbb
xlat
sub
rcrb
imul
icebp
jbe
rorb
popa
push
jns
sbb
add
inc
out
jp
xchg
icebp
lea
fisttpl
lods
jge
orb
cmp
xchg
mov
cmpsl
rcl
stc
ja
adc
adc
rcrb
loop
push
imul
pinsrw
enter
inc
cmc
dec
cli
mov
jle
mov
or
jl
aas
adc
inc
sbb
clc
andl
daa
dec
cltd
je
mov
mov
iret
mov
mov
mov
inc
add
iret
or
inc
sti
pop
aam
cmpl
addb
jl
add
pop
sub
inc
enter
mov
xchg
inc
sub
pop
insl
add
daa
in
enter
int
in
lods
fwait
mov
movsl
mov
mov
int3
popf
pop
aam
cmp
sub
shll
scas
mov
insb
mov
flds
adc
dec
jl
pop
xorb
ss
mov
or
add
jne
jno
pop
add
adc
and
jmp
mov
outsl
stos
scas
push
xchg
lret
mov
stos
inc
xor
xchg
jns
sbb
jmp
imul
loop
pusha
lock
jl
es
and
or
pop
jle
mov
in
cmp
fildl
pop
loop
sub
imul
mov
or
mov
das
gs
loope
clc
sub
mov
sub
add
jo
aad
mov
mov
dec
xchg
jge
loopne
xchg
sbb
mov
jns
icebp
mov
les
in
adc
fdivp
or
repnz
lcall
pop
sbb
jne
inc
mov
add
cltd
mov
out
xchg
gs
popf
sbb
xlat
adc
pop
push
in
jmp
sub
das
xchg
les
ss
repnz
movsl
out
mov
mov
fnstenv
gs
cli
jae
pop
sbb
sbb
sub
xor
add
mov
and
pop
or
shrl
dec
sub
mov
hlt
sub
pusha
mov
add
sbb
sbb
mov
outsl
add
mov
dec
sbb
mov
loope
scas
aad
mov
add
mov
scas
scas
scas
popaw
aad
imul
push
mov
fstpt
daa
cmp
xor
mov
fisubl
pushf
fsqrt
add
in
and
pop
scas
mov
inc
mov
push
lods
stos
gs
fstpl
or
enter
sbb
xor
imul
mov
or
ss
add
iret
mov
orl
and
gs
push
push
rclb
lret
mov
pop
lds
xchg
faddl
and
sahf
cwtl
cmpsl
andb
hlt
out
mov
popf
or
in
out
dec
xchg
mov
lods
cs
lods
ds
pop
or
nop
push
push
movsb
pushl
mov
pop
ljmp
cmc
stos
mov
sub
sub
mov
mov
test
cmp
sbb
int3
jo
ss
daa
mov
insl
push
sub
mov
call
mov
xchg
jb
jnp
mov
jmp
mov
int3
sub
out
sbb
inc
daa
adc
popa
jne
dec
mov
dec
es
pusha
cmp
xor
ja
aaa
mov
xchg
and
pop
mov
insl
inc
or
out
inc
jmp
lret
fildl
testb
inc
and
cltd
inc
cmp
cmp
adc
fdivr
mov
and
dec
ljmp
mov
mov
mov
mov
sbb
mov
es
push
jne
in
push
mov
xor
test
pop
cmp
adc
push
add
mov
in
mov
dec
cltd
fnstcw
fildl
xchg
stos
pop
xor
jo
mov
add
and
je,pt
push
push
dec
loop
std
mov
xor
xor
jl
lods
push
dec
mov
sti
or
jnp
rcrb
dec
sbb
adc
ret
cmpsl
popa
outsb
push
sub
pusha
jne
orl
mov
inc
mov
inc
pop
dec
in
sbb
out
mull
sub
dec
or
pusha
adc
and
lods
shrb
or
dec
xlat
insl
mul
aas
mov
jno
jg
enter
test
rcrl
mov
das
jl
pop
popf
dec
lock
inc
data16
and
pop
sti
cmc
and
mov
mov
iret
aad
mov
aad
mulb
mov
push
adc
xor
cmpsb
dec
push
jbe
iret
jge
lcall
mov
dec
dec
dec
xchg
inc
mov
aam
push
or
bound
lea
ds
scas
in
push
in
adc
pop
pop
test
jge
mov
loop
and
lret
in
adc
cmp
add
jp
pop
mov
cmp
mov
jge
push
jecxz
lods
inc
jle
xchg
test
scas
xlat
iret
ret
test
mov
sub
into
imul
fimuls
lcall
test
rolb
sahf
push
xchg
lock
repz
clc
pop
cmc
mov
call
add
pop
sub
fldt
pop
testb
arpl
mov
leave
std
mov
sbb
jmp
imul
pop
sub
or
push
and
xchg
and
pushl
jae
std
xlat
cmp
std
call
jmp
dec
mov
scas
rcl
lret
sbb
xor
mov
popf
add
movsl
push
sub
mov
inc
jae
outsl
adc
cmp
sahf
inc
enter
fsubs
in
shl
sbb
xor
and
and
scas
incb
fwait
pop
imul
pusha
mov
fcmovne
lret
pusha
stc
fisttps
push
pop
inc
cli
inc
sub
add
arpl
imul
lret
push
pop
scas
push
clc
mov
adc
and
movsl
stos
pop
mov
nop
repnz
movsl
and
xor
outsl
and
test
lret
cmp
xchg
or
sbb
sub
push
jge
mov
iret
and
cmp
gs
icebp
cmp
jo
cmp
addr16
mov
push
sub
or
push
mov
sbb
jns
lcall
lret
fcomp
xlat
jo
loope
jne
inc
xchg
cld
aam
adc
rolb
xor
dec
add
jae
jb
sub
inc
push
notl
xor
lahf
push
fsubr
insb
jae
jle
jle
push
jg
mov
and
pop
dec
xchg
inc
popa
cmp
jb
pop
cltd
leave
popf
xchg
mov
pop
out
sub
add
lgs
inc
xor
jno
int3
mov
notb
sbb
fldcw
add
xchg
adc
bound
sarl
inc
lret
movb
pop
xchg
sub
fdivl
mov
into
in
add
repnz
clc
push
ja
mov
data16
mov
out
mov
mov
or
xor
push
jbe
or
jl,pn
paddusw
rorl
sbb
adc
fs
ljmp
out
push
xchg
xchg
inc
push
sub
xor
std
lret
lock
fmull
mov
cmp
adc
js
bound
sbb
jb
notl
testb
scas
inc
in
inc
push
mov
and
scas
loop
cs
lods
mov
pop
mov
fcomip
insb
xchg
push
stos
and
mov
sbb
cs
out
aas
push
mov
in
in
push
or
adc
or
cmp
imul
arpl
gs
adcl
sti
cld
fstps
xchg
jb,pt
out
push
mov
pop
mov
iret
pop
xchg
clc
das
outsb
insb
jns
mov
and
adc
dec
sub
xchg
dec
add
cmpsb
inc
ret
imul
xchg
xor
pusha
out
int3
ror
cs
push
cmp
inc
pop
test
adc
mov
mov
inc
and
pop
ja
pusha
cltd
testb
jne
das
or
lods
xchg
sti
or
mov
dec
loopne
clc
dec
mov
sbb
sbb
xchg
xchg
mov
shrl
dec
mov
stc
pop
fdivrl
adc
inc
jl
push
dec
and
dec
xor
mov
xchg
mov
xchg
lock
dec
and
pmaxub
test
cmp
pop
inc
hlt
out
dec
jp
stos
hlt
pop
cs
and
inc
fwait
cmp
and
aas
lods
cmpsb
jo
or
xchg
push
mov
sub
outsb
shrb
mov
aas
ud1
stos
push
sub
test
and
jg
arpl
std
in
enter
leave
into
mov
rorb
and
add
inc
and
cld
mov
rcr
mov
jecxz
push
or
std
sbb
dec
fsubp
roll
lods
idivb
jecxz
lods
cmp
push
sbb
cmpsb
leave
adc
sarb
subl
ljmp
xchg
adc
aam
lds
incl
stos
lret
mov
lahf
rcr
sub
loop
or
in
mov
call
push
add
mov
sbb
lret
out
lcall
mov
ds
repz
push
hlt
test
sbb
loopne
gs
in
ja
add
les
cmpl
repnz
orb
mov
jnp
cmpsb
incl
jbe
or
mov
cmp
mov
mov
js
mov
iret
aad
sbb
jnp
lret
or
test
fs
dec
in
and
arpl
push
loope
call
cwtl
shl
jecxz
in
rorl
test
test
lods
jecxz
cmp
aaa
jne
sub
enter
icebp
lahf
int3
sub
sbb
shl
sub
shll
idivl
shll
cmc
or
lcall
adc
push
xor
hlt
gs
and
lcall
lret
xchg
inc
adc
jnp
outsb
fwait
push
xlat
sub
out
and
mov
andb
cmp
xchg
mov
mov
push
or
xor
and
sub
pushf
or
dec
or
lea
and
cmpsb
jnp
and
and
xor
push
testl
sub
cmp
in
push
adc
add
sbb
push
hlt
fdivrs
scas
mov
cmp
mov
lds
mov
es
jne
adc
adc
in
add
mov
arpl
sub
jae
cmpsl
lcall
bound
aaa
mov
into
fucom
movsl
pop
gs
pop
scas
das
aad
pop
jmp
pushf
loope
aaa
sbb
popa
jg
jae
jmp
jge
cmp
out
dec
ret
lea
daa
pop
insl
rolb
aam
xchg
stos
adc
mov
rorb
lret
cmp
xor
lahf
pop
stc
cmpsl
adc
pushf
mov
push
mov
jl
ss
das
in
dec
jno
push
out
into
sbb
adcl
cmp
out
xlat
xchg
dec
xchg
insb
ror
jne
pop
movsb
inc
cmp
out
call
stos
mov
xchg
push
push
ja
xor
cmpsb
lcall
scas
inc
or
ds
pop
lds
push
ds
xchg
repz
jp
jmp
pop
fistpl
lret
jb
mov
sbb
inc
dec
movsl
pop
rorb
xchg
xorl
push
enter
jmp
iret
lcall
inc
scas
mov
test
mov
shlb
iret
in
adc
jnp
add
mov
inc
stos
jge
sbb
or
mov
fldcw
jmp
in
pop
jmp
sub
enter
cwtl
daa
xchg
out
repnz
mov
stc
inc
fiadds
movsl
test
push
push
inc
mov
gs
mul
pusha
push
scas
cmp
or
sti
mov
jbe
aas
dec
inc
sbb
push
test
lock
mov
insb
fcmovbe
hlt
mov
repnz
push
scas
xchg
lcall
add
push
ljmp
jno
test
add
and
sti
cld
mov
cmp
jl
jge
movsb
fildl
popf
xchg
pop
dec
lock
mov
enter
bound
push
add
push
fs
jge
loopne
cmpl
adc
js
enter
std
scas
mov
mov
cmp
cmp
lods
out
push
inc
mov
clc
andb
dec
mov
mov
xchg
and
cmc
pop
rorb
fisubrl
popf
pop
inc
xchg
ficoml
movsb
push
les
data16
add
mov
in
lahf
out
fucomip
adc
icebp
or
std
xor
cmc
mov
mov
stc
mov
push
push
sti
fcmovb
mov
icebp
mov
sub
jp
in
and
xchg
xchg
insb
pop
xor
lods
outsb
loope
and
jno
repz
insb
mov
pop
dec
mov
in
pop
push
inc
pop
cmc
xor
jno
jg
xor
out
mov
xchg
mov
pusha
pop
pop
in
add
scas
add
test
jb
mov
dec
and
movsb
sbb
clc
pop
sbb
mov
arpl
inc
xchg
xor
lock
arpl
lahf
pushf
sub
repz
mov
inc
mov
push
subb
sub
sarb
sbb
add
pop
adc
mov
and
cmc
adc
mov
out
fsts
sbb
xchg
ret
ss
inc
jb
popa
jl
push
daa
outsl
cs
cltd
fs
inc
sub
lahf
xchg
sti
cld
imul
out
lret
adc
cli
adc
add
cmc
dec
ja
stos
jbe
stos
test
push
filds
test
mov
addr16
loopne
dec
mov
iret
mov
ret
push
aas
sub
addr16
sub
or
mov
jg
idiv
adc
mov
movsb
hlt
cmc
xchg
dec
mov
inc
or
or
cmpsl
cmp
mov
add
ljmp
mov
pop
mov
sbb
loope
test
cmp
push
cmc
js
inc
inc
or
insl
leave
mov
mov
xchg
push
push
ljmp
sbb
cmp
out
xchg
sbb
cmp
and
push
scas
push
pop
sbb
fidivl
sbb
pop
sbb
xchg
push
xor
add
xor
mov
loop
jo
sub
dec
cld
lods
push
and
push
adcl
xchg
inc
or
movsl
ja
arpl
outsl
jecxz
ljmp
stc
js
aas
pop
into
fwait
cld
rcll
mov
outsl
lea
fbstp
adc
xchg
mov
sub
pop
xchg
jmp
mov
iret
mov
adc
shrb
sub
pop
aaa
jmp
push
xor
pop
xor
ficompl
sbb
insl
mov
popa
mov
insb
repz
jbe
int3
out
cmp
jmp
rcll
sbb
mov
xchg
mov
jns
fldcw
mov
orl
mov
xor
ja
pusha
dec
out
lods
dec
lea
mov
sbb
sub
push
hlt
in
xchg
pop
mov
mov
mov
and
xlat
jns
aaa
repz
stos
pushf
jo
and
xchg
mov
outsb
mov
jne
je
inc
push
jmp
mov
mov
inc
inc
push
cltd
mov
pop
push
cmpsl
addr16
fnsave
in
jecxz
call
stc
sbb
mov
push
cmpsl
aam
mov
loopne
scas
paddq
in
insl
jnp
sbb
xchg
mov
inc
test
jnp
mov
mov
ljmp
es
cmp
out
xor
iret
push
mov
mov
gs
sbb
rcrb
test
push
aam
push
mov
call
ret
cltd
add
call
sti
les
cmp
xchg
dec
mov
jnp
sbb
push
mov
mov
in
jnp
cmp
add
mov
pop
mov
push
mov
sbb
testb
push
in
shrb
cmp
cmp
jnp
aaa
je
negl
and
pop
aas
daa
pusha
cmp
hlt
jp
jg
push
stos
pop
inc
addr16
int3
pusha
loop
ds
xchg
popf
add
ret
push
cmp
repz
ja
adc
lret
dec
and
ja
repnz
dec
lret
test
jl
das
jae
cmpsl
or
repz
jb
sbb
cld
xchg
in
shrb
scas
cld
std
repnz
push
push
fcompl
clc
rorl
stos
pop
aad
push
dec
ret
xsha1
cmpsb
int3
loopne
mov
loop
jo
sub
jne
leave
mov
inc
lods
fdivr
push
pusha
icebp
loopne
adc
imul
mov
and
sahf
dec
inc
frstor
pop
or
pop
outsb
xorb
push
sbb
cmp
adc
inc
jae
adc
jbe
mov
mov
pop
or
enter
mov
lock
outsl
jp
mov
push
sti
dec
xchg
in
jo
mov
fcoml
sbbb
push
push
scas
orb
mov
xor
divb
mov
out
mov
jnp
std
push
sbb
jmp
mov
sub
dec
mov
ficomps
jmp
dec
loop
rolb
repz
mov
push
xchg
test
hlt
enter
aaa
cmp
xchg
test
testl
test
inc
and
mov
pushf
xor
test
jnp
mov
and
xor
adc
jmp
add
in
jb
jg
clc
pop
stos
push
fwait
jmp
xchg
push
push
lret
int
mov
push
xlat
adc
mov
mov
scas
imul
add
mov
lcall
outsb
sbb
mov
pushf
into
lcall
jbe
add
pop
adc
mov
cwtl
lds
loop
dec
cltd
inc
and
mov
loop
xchg
xchg
scas
mov
xchg
xchg
mov
les
mov
notl
and
and
andl
dec
cmp
mov
sbb
push
mov
pop
rclb
xor
std
iret
loop
mov
lret
movsl
test
jcxz
and
lds
or
es
fwait
fs
push
inc
push
mov
adc
scas
cmc
ljmp
out
add
xor
jp
push
mull
insl
mov
add
cmp
fidivs
adc
sbb
daa
xchg
aas
pop
add
inc
xor
dec
jmp
sar
ljmp
xchg
jp
mov
rcr
mov
std
scas
sub
jp
jb
cmpsb
loop
cmp
ja
int
stos
mov
xchg
movsb
xlat
adc
inc
out
sub
pop
pop
ret
in
jmp
xor
dec
fdiv
cld
xor
dec
imul
test
loope
push
call
push
mov
mov
outsl
std
lods
fnstenv
jmp
adc
jo
jg
lahf
and
fbld
sub
adc
add
sarl
add
rcl
and
jb
mov
andl
cmp
mov
scas
arpl
andb
jp
mov
xlat
push
sbb
ret
repz
push
mov
fists
je
test
negb
dec
into
roll
in
iret
call
jb
cmp
inc
and
arpl
xor
fwait
adc
cltd
inc
aam
data16
int3
add
cmp
test
std
cli
das
ljmp
dec
test
xchg
lea
jge
repz
fsubl
add
jns
aad
call
pop
ds
sahf
out
dec
or
inc
iret
repnz
in
sbb
fists
mov
jne
dec
cmp
xchg
movsb
jne
cmp
push
pop
fdiv
shl
mov
stc
jle
adc
aad
loopne
and
and
and
and
cltd
cmp
hlt
xchg
jo
inc
mov
jb
inc
dec
xor
sbb
xchg
je
lds
jne
sti
xchg
jo
lods
and
mov
adc
cld
jns
push
fldenv
test
aaa
sbb
jns
inc
sub
sbb
lahf
dec
js
mov
ljmp
sbb
pop
nop
xor
push
adc
push
dec
add
out
fwait
rolb
addl
lahf
aam
pop
push
mov
cmp
adc
pop
jo
cmp
stos
sbb
pop
or
xchg
ret
inc
cwtl
lods
je
and
aad
loop
ror
jns
fstpt
sub
push
push
test
pop
inc
test
jnp
dec
push
out
pop
sti
ja
push
out
mov
popa
adc
jle
add
lret
push
ret
outsl
or
adc
popf
mov
mov
xor
sarb
into
les
mov
movsb
movsl
fcmove
outsb
rorl
add
mov
adc
mov
mov
movsl
int
jns
loopne
in
and
ficoml
out
movd
pop
mov
stos
mov
cli
test
adc
jo
pop
lret
les
out
inc
leave
mov
movsb
pop
mov
aaa
push
xchg
adc
push
mov
sbb
pop
jae
mov
jbe
pop
jp
roll
adc
pushf
jb
pop
sbb
adcl
fwait
pop
ret
inc
daa
and
pop
pop
in
mov
cmp
mov
std
sahf
jne
test
mov
xchg
pop
arpl
cltd
popw
cmpsl
or
jbe
xchg
cmp
lretw
ret
adc
mov
subb
in
xlat
dec
pop
jb
push
sbb
addr16
mov
push
insb
data16
fnstcw
cmp
sub
bnd
xchg
push
sub
in
lret
and
das
or
and
push
or
scas
out
mov
mulb
out
pop
stc
sub
and
dec
shll
sarl
rcrb
mov
jecxz
push
pop
pop
push
push
push
inc
and
fistpll
add
push
sbb
pop
enter
push
mov
sub
fisttpll
adc
jg
mov
in
fidivrs
lahf
pop
dec
inc
xchg
mov
mov
fldcw
out
fimull
sub
push
pop
mov
or
pop
mov
cld
or
int3
adc
stos
mov
jge
clc
and
xor
lret
dec
outsb
cwtl
or
lret
mov
dec
js
clc
repz
mov
test
insb
icebp
xor
sbb
sbb
or
gs
dec
repz
notl
mov
pop
test
inc
pop
push
mov
dec
xor
comiss
sbb
push
sbb
ljmp
dec
xchg
mov
or
fldln2
pushf
sti
sub
xchg
int3
dec
out
dec
cmp
mov
int3
xlat
dec
mov
dec
fidivl
pop
mov
notl
mov
std
inc
loop
orl
mov
add
dec
xchg
shr
push
lds
jecxz
xchg
pop
test
int
pop
dec
mov
jecxz
jns
mov
daa
inc
mov
ljmp
cmp
je
addr16
push
sarb
cwtl
add
jo
mov
pop
mov
cli
cmpsb
and
jb
mov
dec
shll
lds
jno
dec
rcrl
cmp
sub
cs
pop
inc
cs
imul
mov
mov
sub
and
fidivl
add
scas
jns
mov
outsl
enter
adcb
cmp
or
sbb
pop
pop
loopne
fwait
repz
inc
mov
cmpsb
or
inc
in
fidivl
out
fstpt
push
repnz
pop
mov
mov
popf
test
push
ljmp
dec
mov
xlat
loope
pop
mov
fcmovb
pop
lahf
out
sbb
iret
rcrb
aas
cld
cmp
and
mov
pop
adc
jb
jmp
mov
out
fisubrs
sub
dec
sub
addr16
mov
call
mov
seta
mov
or
cmp
out
adc
sub
lret
and
sti
andps
stos
mov
notb
loope
sub
pop
sub
popf
addr16
inc
test
lock
sub
pop
lret
lahf
xchg
adc
ja
in
add
lret
add
test
or
daa
lahf
pop
jbe
mov
repnz
cmp
cmpsl
mov
fs
test
je
mov
xchg
cmp
add
add
push
jnp
cli
mov
xchg
ljmp
or
lods
lds
call
push
ljmp
pop
out
and
movsb
or
hlt
jnp
sub
ret
lret
cmpsl
ret
cmp
inc
jns
ret
cmp
xchg
xchg
in
fcoms
xor
mov
mov
mov
mov
lds
push
cmp
std
dec
xor
pop
lret
scas
cltd
mov
jnp
rorb
mov
push
xchg
movsb
out
or
aam
and
xlat
xchg
push
mov
cmp
lahf
js
inc
test
movsl
ljmp
cmp
stc
cmc
jo
push
inc
xor
es
add
xchg
mov
scas
lret
dec
incl
add
fnstsw
leave
movsl
or
jp
stos
sarb
push
dec
cli
inc
imul
xchg
sahf
movl
mov
hlt
sbb
inc
lea
jg
fistpl
xor
xchg
int
push
xor
cli
cmp
enter
pusha
pop
popa
mov
iret
lods
sub
scas
push
pop
add
mov
lret
notl
xchg
test
push
sub
mov
mov
lret
inc
mov
gs
mov
ret
sub
out
lret
cmp
iret
icebp
sbb
icebp
sbb
loop
sub
lea
cmp
push
imull
mov
repz
rcll
rcr
mov
xchg
xchg
push
into
lods
xor
dec
in
cmp
imulb
out
fs
add
int
pop
std
scas
add
jl
sbb
and
dec
mov
cmp
pop
scas
xor
jb
arpl
repz
cltd
sub
cmp
jge
sub
jmp
sbb
lcall
hlt
hlt
ss
pop
hlt
sub
test
fsubrs
rcrl
lahf
pop
movsl
arpl
gs
enter
lcall
stos
push
loop
psadbw
inc
sbb
scas
fdivs
jns
adc
jbe
lcall
jge
push
sbb
test
xchg
push
daa
stc
xor
imul
mul
nop
push
jns
subl
sub
cwtl
pop
nop
mov
loopne
mov
xor
setp
aaa
xor
mov
cmpsb
stos
cli
stos
push
gs
cmpsb
mov
jge
out
mov
stos
gs
rcl
sbbl
adc
outsl
pop
cmp
jo
mov
mov
sahf
mov
sahf
das
movsb
xor
lds
inc
test
pop
jp
mov
mov
enter
sbb
mov
sbb
pop
stos
lock
xor
cmp
mov
int3
mov
ss
add
sbb
cmp
out
or
sub
adc
add
push
adc
lret
mov
push
inc
scas
fwait
mov
mov
es
add
xor
sahf
mov
xchg
dec
adc
sub
sbb
nop
sub
mov
jno
push
fcoml
inc
es
lcall
pop
pop
ds
popf
call
iret
cmp
xchg
sub
lret
mul
sub
mov
sub
in
inc
xor
imul
repz
out
push
fisttpll
leave
rcr
jnp
icebp
scas
loope
into
add
sbb
repz
sbb
out
sbb
sub
lods
xchg
add
add
pop
lock
dec
add
jb
xchg
sub
sbb
dec
adc
xorl
fdivrl
lahf
mov
mov
jge
stos
mov
xchg
daa
adcl
rcrl
dec
xlat
stos
leave
mov
mov
sub
inc
out
mov
jl
adc
ret
jb
cs
lret
insl
loopne
sbb
or
or
repz
and
inc
iret
xchg
in
lret
out
sub
mov
dec
outsl
mov
ja
cwtl
aaa
filds
jo
pop
pop
shl
cmpsl
inc
and
mov
adc
insl
mov
test
fldenv
mov
lea
add
pusha
xchg
test
sub
in
sub
rolb
jb
pusha
fisubrl
sbb
imul
out
and
push
imul
sub
ja
fsubrs
pop
jmp
push
push
fcompl
shr
and
cld
and
xchg
add
sbb
stos
mov
aaa
lods
pop
cmp
rcrl
mov
sbb
js
imul
add
pop
test
and
dec
mov
xchg
sub
arpl
or
fsub
push
movsl
jns
push
fsubrl
xor
mov
cs
inc
in
lea
sti
xchg
hlt
pop
xor
pop
push
sbb
aam
mov
jbe
lret
leave
mov
out
outsb
pop
outsb
mov
pop
cmp
cli
test
mov
data16
sbb
loope
lock
adc
mov
icebp
test
push
ret
xor
rolb
mov
fdivs
mov
jnp
dec
jg
fidivrs
dec
daa
out
mov
cmc
adc
pop
mov
test
adc
mov
cwtl
icebp
js
scas
adc
cmp
xorl
sub
push
xchg
in
enter
inc
in
cmp
sbb
adc
filds
shll
cs
jmp
je
fidivl
and
mov
push
pop
dec
add
inc
out
fcomp
cmpsb
icebp
cmp
insl
std
lock
inc
in
jmp
xchg
or
or
inc
dec
scas
jecxz
idivb
mov
mov
push
fs
aas
mov
pop
ds
dec
mov
mov
sbb
in
std
mov
push
cmp
popf
kandw
fs
lds
cmp
mov
int
dec
in
xlat
into
sahf
push
loope
jmp
mov
lahf
jnp
outsl
fsub
aad
cli
inc
lods
and
xor
pushf
adc
mov
adc
adc
fildll
fdiv
int3
jno
sbb
push
cltd
push
and
pop
loopne
nop
popa
mov
outsb
mov
jle
ja
lock
jno
data16
sub
and
mov
loop
fidivrl
rolb
leave
cmp
push
sbb
data16
fsubl
push
add
or
cli
pop
test
sbb
inc
xor
aam
ds
sbb
or
jns
or
mov
jae
or
inc
mov
xchg
pop
lret
jge
rcll
mov
icebp
pop
xchg
and
jae
js
ficoml
lods
push
mov
cmc
jmp
and
cwtl
pushf
inc
fisttpl
int3
shl
xorb
push
enter
sbb
sbb
lahf
mov
fwait
xor
mov
sbb
fprem
daa
pop
sub
xchg
shrl
jae
cmp
fnsave
loop
div
dec
out
popf
addl
pop
adc
pusha
push
mov
int3
rorl
dec
aad
repnz
inc
push
inc
cs
cmp
aaa
sar
sub
add
adc
lret
ret
pushf
int
lods
aam
jns
bound
in
and
inc
jg
sarb
pop
jmp
push
mov
dec
call
std
cmc
mov
xlat
push
lds
jns
cmp
hlt
insb
out
inc
orb
stc
ret
adcl
jb
dec
imul
push
xchg
sub
jnp
imul
lret
movsb
inc
sub
xor
push
or
add
stc
push
and
insl
pop
addr16
xchg
xchg
mov
test
in
mov
rcl
subl
jo
inc
xor
daa
or
inc
and
xchg
dec
arpl
push
jb
jle
leave
test
or
inc
enter
pop
pop
mov
cld
or
jno
pop
lahf
mov
stc
sub
in
mov
dec
add
negb
les
and
fsubrs
fs
insb
stc
and
mov
sbb
jle
scas
sbb
sahf
insb
lahf
ret
sbb
jbe
inc
sub
jne
push
aaa
pop
or
sarb
jns
mov
inc
xorl
sahf
jne
rcll
dec
lret
and
jp
push
inc
pop
sub
sbb
cli
fstl
test
icebp
outsb
jecxz
push
sub
lret
pop
test
jmp
push
and
inc
push
aam
dec
mov
push
iret
xchg
call
es
xor
fstps
add
shr
insb
jns
jbe
mov
add
dec
or
xlat
loop
in
loope
repz
js
sbb
in
cltd
enter
out
shl
xchg
mov
fldl
pop
fisttpl
ret
lea
jno
pop
add
push
aaa
xchg
mov
push
int3
cmpsb
int
xchg
test
mov
add
mov
push
lret
paddusw
int3
fisttps
dec
push
mov
insl
andl
sub
and
gs
mov
xchg
xor
dec
lods
scas
loop
mov
cmp
mov
imul
mov
lahf
cmp
fnstcw
fidivrl
fdivs
mov
xchg
pop
pop
jle
dec
jno
bts
repnz
mov
and
xor
adc
push
mov
arpl
pop
pop
imul
fdivrl
out
sub
pop
loopne
mov
test
ret
out
adcb
xchg
js
imul
and
ret
and
add
orl
xchg
or
inc
lock
test
cmc
push
pusha
sub
push
push
pop
sbb
xlat
clc
pop
int3
jbe
in
outsb
mov
mov
incl
push
addr16
mov
in
mov
sarb
loopne
mov
sbb
popf
imul
mov
mov
sub
sbb
adc
inc
popf
ret
mov
cvtps2pd
pop
cmp
jae
xlat
inc
adc
cmp
xor
adc
call
sbb
in
mov
shrb
outsb
xor
and
insb
pushf
xor
and
int3
xor
xchg
inc
pop
sti
clc
mov
sbb
sahf
das
movzwl
jne
sbb
fsubp
jne
loopne
stos
pop
xor
push
repz
pop
icebp
movsl
pop
xchg
adcb
xor
xor
pop
inc
mov
pop
fwait
mov
adc
out
inc
lret
mov
fwait
or
mov
bound
and
inc
pcmpgtb
movsb
div
enter
ret
dec
push
lods
scas
outsl
ja
jo
ja
push
sub
rcrl
ret
add
pop
pop
mov
mov
inc
pop
mov
lret
sbb
jnp
je
bound
outsb
test
adc
fbld
jp
incb
sub
jmp
in
cs
cmp
lea
push
shl
fldpi
dec
xchg
mov
xchg
lods
jae
sbb
ljmp
pop
fwait
jge
imulb
sbb
and
stc
enter
insl
pop
mov
gs
sub
lods
je
lret
cmp
pop
lds
imul
in
inc
out
adc
lods
cmp
mov
sti
jns
std
inc
sbb
sbb
lods
cli
bound
clc
fdivl
nop
aaa
push
bnd
in
push
shll
push
loopne
mov
fcom
lret
jle
push
insl
mov
es
mov
push
insb
lods
in
jo
inc
pushf
mov
outsl
adc
into
cmpsl
rorb
jp
push
je
sub
lret
fisttps
popf
icebp
xor
out
dec
mov
movsb
pop
sub
cmp
cmp
lret
inc
fdivs
cmpsl
and
inc
jecxz
dec
pusha
adc
leave
xor
in
pop
add
hlt
jge
add
ljmp
sub
push
mov
jge
mov
andb
mov
xchg
sbb
mov
pop
dec
movsl
rorl
bound
mov
cmpl
mov
out
push
ret
mov
in
sub
cs
pop
out
xor
shll
and
pop
mov
sbb
or
adc
mov
sub
add
addl
sub
mov
add
lret
or
jp
dec
xchg
je
sub
js
lret
rclb
sub
inc
dec
ja
insb
repz
jmp
pop
push
movsl
repz
mov
pop
ficompl
inc
xchg
push
xchg
lret
negl
sbb
jecxz
ja
mov
add
cld
cmp
ret
xchg
sahf
and
fstl
cmp
dec
adc
mov
inc
mov
rclb
mov
fisttpll
mov
mov
push
pop
sub
ss
jbe
cmp
jle
cmpsl
xchg
loopne
mov
pop
add
jnp
jecxz
iret
adc
mov
data16
jmp
jnp
mov
stc
daa
inc
add
mov
xchg
and
xchg
mov
push
imul
inc
mov
push
and
cltd
outsl
xor
js
jno
mov
adc
mov
add
loopne
sub
test
stos
nop
xor
add
nop
daa
lahf
ljmp
arpl
add
sub
inc
xchg
int
or
push
je
lock
sbbb
pop
mov
add
adc
sbb
mov
repz
mov
inc
pop
cmpsb
jmp
sti
sbb
out
mov
cld
sub
xchg
fsts
js
stc
cmp
push
movsl
cli
arpl
cmpsb
stc
mov
shrb
incb
andl
push
sub
lods
ja
adcb
shll
xorl
shrb
xchg
mov
xchg
stos
or
into
cs
stos
sbb
in
add
and
cld
inc
inc
loope
sbb
xor
fadds
inc
xor
imul
in
fisttpl
pop
fimull
mov
mov
data16
dec
stc
dec
and
adc
clc
nop
test
cld
adc
repz
insl
lahf
fcomps
dec
fsubl
pop
mov
cmpsl
push
or
in
push
sarl
add
mov
in
lods
mov
stos
xor
inc
mov
xchg
cmp
popf
xchg
loop
mov
jge
mov
mov
sbb
jo
sbb
xchg
aas
push
mov
call
mov
push
rolb
scas
stos
dec
push
repz
out
js
jmp
push
xor
ds
cmpsl
or
nop
jno
inc
push
xchg
into
in
int
sub
mov
cld
sub
mov
push
out
repnz
jae
push
andl
push
scas
arpl
sahf
dec
ret
push
mov
inc
jecxz
inc
test
jl
xchg
xor
add
push
outsl
and
cltd
and
ds
sahf
icebp
push
mov
cwtl
pusha
pop
lret
das
push
xor
jmp
add
xlat
leave
and
insl
test
in
popa
xchg
into
jbe
and
les
lret
rolb
roll
push
mov
jns
aad
jne
int3
je
lock
or
test
mov
ja
fwait
adcb
popa
fldenv
xchg
dec
mov
jae
adc
mov
pop
in
dec
fsubl
mov
seta
dec
cltd
stos
filds
or
fwait
push
jl
lock
cltd
push
fimuls
jnp
ja
sahf
into
mov
jmp
push
sub
sub
call
mov
push
iret
xchg
pop
in
dec
push
movsl
and
dec
int
sti
jecxz
in
jno
add
out
jnp
into
fsubl
in
mov
or
cmc
xorl
in
test
jno
ljmp
and
mov
xchg
clc
dec
into
mov
iret
mov
inc
lcall
mov
aad
mov
xchg
xchg
out
enter
lret
mov
xchg
mov
xchg
test
jbe
sbb
push
cmp
jns
mov
mov
pop
or
or
sbb
cmp
and
inc
mov
cmpsb
pushf
cwtl
nop
sbb
pop
adc
lret
or
fpatan
mov
push
jle
mov
icebp
xchg
adc
aas
mov
orb
pop
fstps
adc
xchg
out
scas
movsl
xchg
mov
inc
ds
into
mov
enter
jecxz
xor
sbb
cmp
mov
dec
iret
stc
cmp
rol
xchg
cmp
pop
fcoms
or
es
lea
xchg
add
cmp
xor
jnp
mov
jle
inc
dec
xchg
mov
lods
test
xor
sbb
or
sub
add
movsb
fnstenv
movsb
or
data16
addr16
add
lret
sbb
movsl
cmp
lret
mov
stc
frstor
call
xor
mov
les
adcl
in
test
push
aad
dec
xor
mul
js
inc
mov
jg
imul
andl
cs
inc
aas
divl
ret
mov
sarl
test
add
mov
cld
adc
mov
cmpl
mov
adc
sysexit
das
imul
mov
jb
cmp
bound
rcrb
push
ds
fsts
jnp
mov
das
push
fcomip
daa
cmp
add
sahf
pop
int3
inc
test
stc
pop
xchg
add
or
mov
cmp
adc
addb
push
aad
mov
mov
fwait
sub
or
pop
push
pop
adc
mov
xor
js
rolb
fxch
xchg
fidivrl
clc
mov
adc
sub
mov
repz
lock
loop
sbb
pop
fwait
into
push
cli
stos
and
push
lret
out
push
inc
mov
add
add
enter
out
fimull
jo
and
cmc
arpl
xchg
js
jp
in
scas
bound
jae
pop
pop
jge
fsubs
sahf
test
mov
push
icebp
hlt
mulb
imul
lahf
push
adc
mov
and
fcoms
idivl
popa
sbb
cld
inc
out
or
sub
lahf
ret
xor
outsl
jae
add
pop
in
fwait
addr16
xor
int
scas
sub
cmp
enter
mov
cli
insl
jmp
or
pusha
stos
andb
es
inc
ficomps
jnp
shrl
dec
or
outsl
nop
jl
lock
mov
lods
adc
sti
loope
jmp
in
adc
icebp
mov
push
shrl
jle
daa
lret
in
mov
and
imul
xor
mov
pop
dec
outsl
imul
movsl
and
adc
dec
addr16
cmpsb
in
mov
add
sub
xchg
aas
pop
jecxz
cwtl
pop
das
sarl
fnsave
pop
pop
cltd
ds
or
push
jge
clc
shrb
loop
sbb
and
jg
testl
cwtl
xor
pop
ds
cs
mov
movb
js
push
pop
mov
movsb
mov
cmp
sbb
insl
dec
dec
lret
enter
or
fmuls
mov
push
mov
jmp
stos
and
dec
push
ret
sub
inc
testl
sub
and
xchg
inc
jns
cmpl
das
adc
mov
adc
int3
mov
adc
mov
push
add
cmp
cli
mov
negl
outsb
mov
xor
jecxz
jmp
in
mov
out
mov
inc
sarb
ret
pop
adc
adc
stos
ffreep
sbb
inc
pop
andb
sti
add
push
in
test
filds
mov
add
je
xchg
push
push
sub
pop
fcmovne
mov
dec
sub
inc
xchg
push
pop
and
cwtl
aaa
sbb
xchg
movsb
cmpsb
sbb
mov
sbb
dec
sub
insl
xor
or
cs
sub
and
aas
lcall
ret
cwtl
repnz
adc
xchg
xor
fistpll
shr
cltd
into
pop
and
mov
jp
jp
in
repnz
mov
or
das
out
aaa
pop
addr16
mov
jo
mov
pop
loop
or
scas
ss
adc
imul
mov
mov
rorb
sub
inc
flds
push
out
mov
mov
add
fs
pop
mov
nop
scas
cs
add
xor
les
xchg
stos
dec
cmp
mov
or
lret
lret
pop
daa
clc
sub
mov
jge
sub
mov
mov
jb
es
cmc
pop
push
leave
arpl
ds
leave
inc
add
xchg
dec
pop
ds
aaa
and
xor
aam
nop
jp
mov
push
push
push
cmp
jbe
out
stc
mov
add
out
popf
dec
mov
jb
leave
cs
xor
shll
gs
shrl
ljmp
pop
cmp
xor
ret
add
es
test
mov
jne
addr16
cmp
repz
test
fldz
test
mov
iret
mov
and
xlat
xchg
fcoml
dec
mov
addr16
push
iret
and
aad
aad
roll
aas
add
xchg
jnp
test
icebp
in
pop
mov
dec
or
xchg
cmp
idivb
ret
push
outsb
pop
pop
mov
fs
xchg
or
add
jnp
mov
sub
sub
cmp
fwait
decl
rorb
je
nop
js
add
lret
mov
clc
xchg
cmp
xlat
andl
sar
inc
sub
mov
cmp
adc
mov
mov
xchg
jo
repz
les
and
fimuls
aad
xor
push
jnp
and
xchg
loope
jp
icebp
xor
fs
cmp
pop
push
out
mov
dec
andb
stos
jae
nop
ret
popf
add
fcmovne
lods
out
pop
hlt
sub
lock
adc
pushf
popf
push
pop
mov
mov
push
setae
imul
ret
add
aad
fdiv
cli
enter
mov
sub
pop
xor
adc
mov
dec
out
inc
adc
loopne
ljmpw
pop
push
imul
or
add
pop
ja
cli
pushf
xlat
jb
mov
mov
fisubrl
jbe
dec
das
bound
cmp
pop
jne
mov
negl
imul
int3
lods
mov
imul
pushf
ficomps
popl
jmp
int3
xchg
mov
ret
stc
out
sahf
add
insb
and
mov
or
int
icebp
fsubrs
adc
lock
pop
lds
lret
mov
mov
mov
jns
stos
or
and
leave
testl
inc
jle
orb
jns
in
insl
inc
test
or
fiaddl
xor
rcll
arpl
in
xchg
bound
ret
jp
cmp
cli
shlb
dec
popa
fsub
nop
out
xor
mov
insl
xchg
or
roll
cmp
cwtl
into
cltd
cmpl
cmp
int3
in
fs
fwait
dec
xchg
cli
and
sbb
out
xchg
enter
negb
or
mov
stc
int
loope
fmuls
out
add
xchg
scas
lcall
in
and
scas
push
fdivrp
sbb
adc
mov
movsl
insl
and
inc
or
testl
mov
stos
pop
fcom
insb
pop
mov
cmpsl
cmp
xor
hlt
pop
mov
jns
sbb
xlat
and
xor
bound
push
push
sahf
lret
outsb
adc
fyl2xp1
xor
fsub
xchg
ja
xor
jg
adc
cli
mov
inc
ja
xor
lahf
inc
ja
test
and
mov
mov
pop
js
mov
stos
mov
pop
mov
mov
push
jmp
les
stos
sbbl
mov
mov
or
push
sahf
and
push
mov
gs
xor
push
and
addl
jge
mov
add
lods
ret
xchg
xor
stc
hlt
arpl
push
jl
aam
jbe
jnp
movsl
mov
mov
data16
jg
enter
out
cld
and
jns
add
imul
and
cmovo
fimull
adc
mov
push
outsl
sbb
popf
dec
xlat
xchg
mov
ja
push
lret
imul
fdivr
imul
adc
xchg
pusha
or
jl
xor
add
sbb
cli
das
lea
dec
mov
or
mov
test
jb
bound
popa
mov
pushf
ror
xchg
test
jno
pop
loope
push
cmpl
leave
imul
popf
ss
cmpsb
adc
dec
adc
and
sub
push
adc
movsb
ds
subb
xor
add
call
out
adc
lods
stc
adc
sub
mov
sbb
rclb
xor
aaa
jl
xchg
adc
mov
sahf
mov
push
jmp
cmpsl
and
and
xchg
in
test
jl
adc
aas
ss
mov
jmp
rcrb
es
xor
xor
mov
in
pop
pop
jno
cmp
insl
fdivrl
stc
stos
insl
xchg
frstor
and
scas
xchg
adcb
mov
das
and
jl
repnz
push
loope
mov
test
add
rcrb
sbbl
testl
or
add
jp
ret
ss
pop
sti
adc
add
xchg
push
cs
mov
cmp
sbb
jle
mov
push
int
cli
lods
gs
fildll
xor
shl
divl
sub
cmp
jo
jo
rolb
mov
xchg
enter
pop
add
aaa
xchg
sbb
dec
mov
je
mov
testb
push
mov
and
lret
clc
jae
xchg
ret
negb
and
out
add
mov
sbb
inc
out
fnstcw
sbb
sbb
cld
pusha
xchg
inc
cmpsb
add
jge
lods
cmp
push
xor
ret
rorl
mov
push
insl
pop
sub
xor
lcall
lods
jae
in
dec
cmp
adc
out
mov
push
adc
and
fisubrl
mov
mov
aam
mov
test
test
pop
and
sarl
add
jge
xor
push
jp
negl
xchg
or
pop
mov
nop
sbb
push
fstl
repnz
add
jle
sbb
mov
divl
mov
mov
sub
loope
mov
push
sti
mov
push
out
or
psubd
mov
xor
fistps
test
sbb
xchg
in
je
movsb
lcall
iret
in
fiaddl
and
rol
or
mov
mov
fnstsw
push
roll
sbb
clc
mov
gs
sub
stos
int
imul
cmp
add
ret
scas
inc
aaa
fidivs
stos
and
mov
rol
cli
mov
mov
cmp
fdivl
imulb
adc
and
shll
popa
cwtl
cmp
adc
fwait
test
imul
push
outsb
and
mov
rcrl
addl
jl,pn
mov
fcmovbe
and
push
jo
fidivl
cli
and
adc
pusha
outsb
iret
addr16
xchg
ret
push
mov
adc
xor
xchg
push
inc
dec
cmpl
ljmp
rol
mov
mov
inc
shll
movsl
add
xor
adc
test
popf
int3
mov
mov
and
mov
popf
pop
jge
movsb
icebp
adc
filds
adc
sbb
push
lds
inc
sub
push
inc
and
aad
test
mov
push
xchg
dec
pop
and
mov
js
cmp
fwait
in
add
sub
mov
pop
pop
adc
aas
ja
popa
aas
xchg
add
add
jnp,pt
loop
jae
jb
jbe
adc
mov
pusha
in
xchg
scas
fdivrs
mov
pop
push
dec
push
inc
mov
and
outsl
outsb
ficompl
psraw
inc
or
inc
ss
or
lds
mov
jns
sub
xor
inc
dec
xor
cli
xchg
jle
push
push
daa
add
call
cmp
push
pop
xor
dec
mov
stc
add
mov
mov
or
pop
aas
iret
bswap
fldenv
mov
icebp
int
or
xchg
out
push
das
popa
push
lret
stc
add
cli
mov
xchg
inc
mov
mov
leave
es
sbb
data16
negl
scas
or
es
mov
adc
mov
add
leave
push
ljmp
test
and
sarl
pusha
mov
xchg
dec
in
jp
adc
jns
cmpsl
ljmp
jo
lods
mov
lcall
pushf
sub
mov
jo
jle
jne
lods
fcoms
cwtl
call
mov
popf
repnz
cmp
test
das
xchg
or
lcall
cli
out
loop
cltd
cli
pop
or
or
gs
push
jle
repz
dec
jbe
and
lock
push
pop
cltd
push
rcrl
adc
mov
jg
pusha
cmp
ljmp
xchg
jne
push
lret
push
mov
shrl
dec
or
cltd
cmp
cmpsl
xor
aam
shrb
push
fcomip
out
sbb
jae
fadd
addr16
int
cld
xchg
push
call
jns
pop
sub
pop
push
jno
aad
sbb
adc
add
lea
incl
into
jbe
sbb
sub
neg
add
pop
outsb
xchg
ret
aad
push
clc
inc
adc
push
insl
popa
mov
std
fidivrs
push
push
or
leave
mov
cmp
and
clc
pop
mov
push
push
movsb
stos
fdivrl
das
mov
xor
inc
or
arpl
out
xor
bound
ffreep
mov
addr16
push
fbld
rcrb
xlat
xchg
jmp
ret
adc
mov
xor
dec
sahf
inc
popf
or
imulb
jle
mov
in
jns
xlat
add
aad
cltd
adc
rcl
jne
pop
jnp
push
scas
mov
xor
add
out
xor
mov
dec
cmp
push
jl
jge
push
pop
sub
cmp
loopne
push
scas
xchg
movsl
push
jecxz
daa
xchg
cmp
mov
es
adc
cmp
mov
xchg
ret
or
inc
inc
push
aad
add
ss
pop
dec
mov
push
dec
sbb
dec
xchg
pushf
pop
cli
jns
das
cmp
aam
shl
xchg
aam
outsl
jge
jmp
dec
fs
aas
adc
loope
vgf2p8mulb
js
nop
aam
and
lods
in
lock
arpl
push
je
insb
ds
push
fdivrl
scas
data16
sub
call
ss
gs
inc
xor
cmp
sub
inc
fcompl
xchg
ret
lea
arpl
push
pop
jb
add
into
mov
cmc
insl
dec
aad
mov
call
rcrb
xchg
cli
movsb
xor
mov
jle
es
scas
jecxz
imul
mov
out
jmp
fidivrs
mov
mov
cmp
sub
or
inc
xor
ret
cwtl
jg
adc
mov
hlt
mov
ljmp
jns
jmp
dec
or
dec
gs
loop
sbb
xchg
clc
jl
test
push
pop
push
lahf
insb
xchg
or
xor
enter
pop
rcll
jae
or
fnsave
test
and
les
cmpsl
das
mov
or
sub
xchg
shrl
arpl
cmp
mov
lahf
imul
cwtl
repnz
add
mov
lods
lret
dec
ret
or
xorl
mov
notb
movsl
ret
pop
aas
lahf
sub
test
push
push
mov
xor
mov
mov
mov
ret
xchg
xchg
sub
in
fistl
sbb
pop
xchg
and
aad
data16
stc
xor
pop
test
int
in
lcall
pop
inc
cmp
mov
or
subb
xlat
rorb
push
xlat
or
mov
or
dec
sbbl
sbb
lret
rolb
pop
mov
inc
lock
inc
rol
sbb
in
push
push
cld
or
and
inc
fisttpl
inc
scas
pop
mov
pop
push
cmp
bound
aas
cmpsl
inc
jecxz
pop
inc
aad
dec
add
cmp
sahf
lock
leave
shrb
mov
stos
arpl
lock
mov
adc
pop
iret
sub
mov
imul
push
jnp
pop
scas
mov
fcmovne
ljmp
insl
sub
jmp
arpl
dec
add
mov
pusha
stc
rcl
movsl
into
pop
mul
sbb
cmpsb
cmc
sbb
iret
jle
lret
sbb
aad
sbb
enter
push
adc
out
adc
mov
xor
push
sub
lret
repz
cmc
or
imull
cmp
mov
mov
push
pushf
fsubp
pop
movsl
xchg
movsl
xchg
cmp
mov
lahf
fldcw
push
insl
aam
repz
add
cmp
test
xchg
xchg
leave
pushf
test
sbbb
xchg
push
lcall
scas
ljmp
push
fsubrs
repz
lds
sbb
icebp
dec
lock
fstp
aas
or
mov
lds
cli
or
and
and
sti
inc
cmp
dec
clc
pop
or
hlt
add
cmpb
sub
lcall
xchg
mov
dec
lods
dec
cmp
or
sbb
fisubrs
fcom
inc
xchg
or
inc
je
ljmp
mov
cmp
cmp
adc
stos
inc
sar
je
ficomps
mov
out
and
test
sbb
inc
popf
or
outsb
or
insl
int
bound
insl
sub
xor
xchg
jbe
daa
or
rol
jns
in
cld
push
cmc
das
mov
rolb
inc
dec
sahf
ficoml
test
push
sar
sub
or
cmpsb
gs
jno
add
ljmp
cmp
add
int
mov
les
mov
add
shlb
jp
mov
testb
xchg
mov
xor
and
sbb
insb
adc
aaa
daa
push
js
sub
ret
shrb
or
jle
mov
dec
data16
mov
push
das
aas
add
xchg
test
sbb
cvttps2pi
jnp,pt
pavgb
push
sbb
stos
mov
sahf
pop
stos
bound
sbb
jo
pop
jmp
out
push
inc
cmp
pusha
in
in
pop
pusha
jbe
or
jnp
xorl
mov
pop
sub
cli
push
sbb
and
les
dec
mov
jne
sub
fildl
test
aad
push
xchg
dec
loop
jg
mov
xchg
out
sbb
lods
inc
les
sbb
or
fcoml
pop
orb
cmp
dec
roll
pop
add
jne
movsl
mov
and
sbb
pop
push
les
push
cmp
and
in
sahf
addr16
mov
jle
inc
mov
mov
xlat
mov
mov
cwtl
push
pop
arpl
mov
js
xor
loope
lcall
xlat
jne
xchg
jp
mov
sub
push
imul
jg
call
push
addr16
xor
sbb
add
inc
or
push
lods
sbb
mov
mov
out
dec
or
orl
inc
dec
and
xor
roll
push
iret
push
cld
push
ss
out
sub
mov
out
sub
push
pop
xchg
pop
push
test
or
and
push
fcmovnu
rcrl
mov
xor
push
out
out
mov
push
mov
aaa
mov
addr16
push
dec
adc
mov
sub
mov
out
into
outsb
sbb
mov
dec
cld
push
sbb
sub
mov
or
cmp
adc
adc
sbb
mov
pop
out
rorb
add
adc
and
ret
fstps
pop
sub
leave
mov
mov
outsl
xchg
mov
stos
shlb
mov
gs
xor
mov
repnz
test
dec
pop
repz
ret
rol
jg
cmp
cli
mov
out
in
add
jne,pt
popf
mov
sti
mov
pusha
cwtl
jnp
dec
sbb
test
xor
xor
push
hlt
inc
pop
inc
bound
adc
and
pusha
dec
adc
mov
lret
movsl
mov
xchg
test
jnp
and
stos
cli
sbb
imul
inc
in
add
data16
aad
mov
loop
stos
mov
push
lret
pop
shrb
inc
jmp
sbbl
jne
dec
jecxz
adc
xorb
add
mov
rol
int
popf
outsl
sbb
gs
test
fst
inc
out
int3
add
push
add
mov
pusha
lret
fdivl
mov
add
pop
cmp
scas
jne
xor
mov
xchg
and
dec
aaa
or
jp
lock
lret
rcl
jo
icebp
sbb
stos
sub
sub
jle
xchg
or
stc
and
outsb
sub
mov
lods
mov
mov
jp
mov
jo
push
and
cld
rolb
rcrb
push
jb
fs
xchg
mov
add
cmp
movsl
hlt
mov
jecxz
cwtl
adc
nop
bound
lret
add
sti
into
jb
dec
dec
lea
inc
mov
bound
jne
test
or
xor
imul
dec
ret
pop
scas
mov
xor
sub
fidivs
mov
sbb
rcrb
sbb
xor
es
in
inc
jle
adcb
mov
and
fwait
dec
mov
pop
mov
sub
mov
mov
in
sbb
sub
repz
mov
jae
gs
push
shrb
enter
and
fidivl
mov
cltd
adc
jle
pusha
push
sahf
xor
sbb
fwait
pop
sub
aam
sub
test
adc
hlt
xor
adc
mov
aas
pop
mov
fadd
fmuls
pop
jecxz
int3
mov
movsl
mov
xchg
enter
mov
push
sbb
int3
testl
pop
mov
andb
inc
popf
lret
sub
xor
cmpsb
mov
xchg
lds
xchg
movsb
addl
fwait
pop
popa
mov
mov
pop
stos
out
repnz
scas
and
jecxz
or
fisubrl
gs
push
repnz
cs
test
adc
add
push
jo
mov
loop
mov
sub
xor
sub
push
cmp
ss
pop
xor
lret
add
jl
sub
movsl
test
jbe
fwait
sbb
jnp
fimuls
fneni(8087
nop
sbb
div
lcall
ficoml
push
push
and
adc
out
stc
hlt
shl
mov
cltd
les
dec
in
mov
dec
jle
dec
jnp
push
cwtl
adc
pop
sub
dec
iret
mov
fbld
sti
insl
adc
lcall
shrl
fsubs
xchg
adc
pusha
jmp
mov
jae
dec
rclb
rorl
stc
sahf
loopne
fdivrp
xchg
jmp
bound
aaa
mov
hlt
pushf
sbb
jp
adc
cltd
jmp
cli
and
cmpsl
inc
les
fistpll
mul
stc
test
pop
or
or
lods
test
icebp
js
xorb
in
aad
pop
sbb
sub
mov
enter
jbe
out
or
in
in
sbb
push
shlb
adc
cli
testl
outsl
iret
push
stos
or
push
cmc
fimull
jne
in
dec
cwtl
insb
mov
push
and
out
outsb
cld
sub
inc
loopne
mov
inc
mov
scas
xor
dec
xlat
call
nop
fwait
test
in
insl
adc
andb
jecxz
jbe
outsb
mov
mov
aaa
je
xchg
negb
mov
stc
insl
lods
les
fldl
fmul
lret
and
insl
add
cmp
mov
fisubrl
push
xor
add
dec
mov
sbb
cmpsb
dec
cmpsb
shrb
jge
stos
xchg
clc
stc
data16
fadd
mov
lret
xchg
adc
movsb
cmp
mov
cmpsl
int
popf
jmp
mov
jmp
imul
sbb
mov
inc
cli
arpl
or
jp
adc
into
in
xchg
xor
psrlq
call
js
js
in
push
mov
pop
in
lahf
push
mov
xor
lret
sbbl
xchg
aaa
pop
clc
gs
jne
mov
out
cmp
add
mov
repnz
out
pushf
and
dec
inc
and
inc
jns
jo
out
push
in
sbb
xchg
xchg
xchg
jmp
mov
decl
push
add
in
shl
repz
lock
int
les
jne
iret
incb
movsb
jge
sahf
push
jmp
jae
ret
push
mov
mov
push
fwait
jb
sbb
sarl
jle
jbe
jo
lods
and
xor
or
jbe
std
out
out
sub
das
or
fiaddl
add
cld
mov
shlb
cwtl
jl
jae
arpl
push
or
push
lea
mov
pop
ljmp
push
jo
fsub
add
stos
int3
cmpsl
adc
jle
pop
cltd
mov
fcmovb
xchg
loopne
xchg
cmpsl
jb
ror
ljmp
bound
push
add
test
inc
or
popa
cmpsb
cltd
sub
rcr
pop
add
add
sbb
decl
in
fimull
aaa
jno
ja
enter
mov
mov
mov
lock
mov
shll
lcall
test
inc
out
lret
outsl
or
sbb
pop
clc
in
xor
add
ljmp
popf
xchg
jmp
cmp
loopne
lods
pop
or
mov
es
mov
std
fisubs
sbb
lcall
mov
inc
mov
sub
cs
dec
int
pop
push
mov
mov
sbb
mov
pop
sahf
lcall
adc
xchg
enter
xor
outsl
push
enter
popf
cmpsl
mov
addb
inc
push
mov
int
jl
xchg
das
lods
scas
push
jmp
mov
call
lods
push
jo
xor
and
and
jmp
stc
add
in
call
mov
pop
dec
aam
sti
cltd
push
inc
std
jmp
test
mov
adc
adc
es
add
cld
hlt
lds
xchg
addr16
xor
lea
inc
sbb
inc
or
insb
xchg
adc
lcall
push
sbb
call
push
aaa
cmpsb
addr16
xchg
shr
pop
cmpsb
mov
pop
or
cld
adc
frstor
jg
or
jbe
and
test
fwait
push
jmp
push
add
add
sub
andb
mov
das
out
xor
add
jb
stc
in
cmp
add
xor
ljmp
pop
in
add
xchg
or
js
jp
mov
cmc
pop
xor
fstpl
mov
cmpsl
push
sbb
and
cmp
ret
lock
shr
shll
inc
xchg
rcr
xchg
xor
or
jno
push
sbb
fsubrp
mov
data16
xchg
mov
adcb
bound
adc
inc
mov
mov
xor
mov
xchg
call
stos
pop
movsl
test
arpl
pop
lock
pop
jnp
cmp
xchg
pop
lret
enter
sbb
and
jle
ret
sbbl
rcr
ret
xchg
fxch
lret
push
stos
dec
push
inc
aad
inc
mov
ja
lret
mov
cltd
enter
cmp
les
test
xchg
or
negb
dec
popf
mov
jecxz
loopne
jmp
dec
add
mov
cmp
cmpsb
loopne
jge
inc
xchg
int
and
fwait
aam
and
mov
fidivl
iret
or
jg
mov
pop
mov
popa
mov
cltd
pop
sub
cld
adc
sahf
das
add
dec
inc
lcall
add
dec
mov
lar
in
pushf
in
dec
jb
xor
ljmp
mov
sub
in
pushf
xor
jle
clc
mov
bswap
or
aam
push
je
scas
sbb
sarb
dec
lret
mov
loopne
inc
push
test
and
cli
sbbl
repz
or
jg
sub
pusha
and
xchg
jno
sbb
div
mov
int3
sbb
add
call
test
jmp
mov
pop
rorb
out
sub
sbb
xchg
jmp
leave
xchg
mov
inc
aas
test
ret
jns
jno
cs
or
and
in
sub
fcmovu
and
stos
or
or
scas
push
cmpb
mov
push
mov
jecxz
xchg
push
test
sarb
push
sub
dec
push
movsl
push
loop
push
dec
ret
xchg
cmp
je
repz
inc
push
xor
push
push
mov
enter
pop
dec
cmp
and
outsl
arpl
xchg
lret
push
push
orl
adc
or
mov
ja
jo
movsb
mov
and
lret
in
add
jge
loope
sarl
lea
stos
mov
xchg
mov
sarl
sbb
xchg
call
sub
push
jmp
addl
or
adc
rolb
sub
adc
push
shll
cli
cld
xchg
movsl
lret
lds
movsl
arpl
fimuls
mov
mov
mov
adc
aam
inc
push
shrb
sbb
fisttpl
pop
mov
ret
adc
sub
fnsave
pop
outsl
cmp
cmpl
test
lahf
js
out
pop
lahf
int3
fwait
bound
ret
jg
in
or
shrl
iret
lret
jge
lods
pop
mov
push
pop
and
fdivl
es
mov
insb
dec
adc
xor
push
lret
sbb
adc
push
dec
xor
push
sub
repz
shrb
jne
cs
xlat
push
fiaddl
nop
fistpl
add
gs
jno
cmpsb
and
and
fcomip
and
xor
xor
pop
adc
enter
or
testl
jg
aaa
movsl
std
repnz
dec
mov
push
sbbl
xor
lock
push
adc
lcall
push
ret
je
dec
mov
loope
inc
mov
sbb
cmp
inc
mov
jg
inc
imul
mov
push
xor
aaa
or
pop
xor
bound
test
sub
sbb
push
ficoml
lods
push
dec
lods
test
mov
fcmovbe
and
iret
pusha
and
push
int3
icebp
pop
add
cmp
pusha
inc
mov
imul
jge
pop
popa
mov
or
sbb
xchg
mov
jne
out
mov
push
pop
mov
pushf
inc
cld
jns
sbb
or
lock
sti
mov
cmp
push
push
fiaddl
out
or
mov
jnp
aas
fdivrs
ss
outsl
or
scas
les
mov
cwtl
mov
and
dec
adc
mov
ret
jb
push
sahf
mov
adc
add
cmpsb
cmpsb
dec
in
sarb
lahf
and
pcmpeqb
ret
lods
jbe
add
xchg
loope
lods
imul
fldcw
stos
daa
adc
push
outsl
inc
dec
mov
xchg
jnp
inc
aaa
adc
add
or
cmp
mov
add
and
cmc
push
jmp
ljmp
push
sub
push
or
sbb
jae
scas
daa
daa
adc
pop
xor
int3
push
jae
int
cmpsl
int3
js
cmp
frstor
jp
pop
out
jp
pop
es
mov
lds
jl
sbb
aas
dec
inc
mov
mov
fidivrl
lods
and
aas
or
sbb
mov
pop
mov
xlat
sub
push
in
movsl
ficoms
push
pop
ljmp
push
adc
enter
shufps
dec
mov
fmul
movsb
fmull
or
imul
jmp
adc
fstpl
and
push
cltd
int3
int
mov
out
in
xchg
insl
mov
jecxz
add
jmp
add
call
pop
pop
movsb
lea
xchg
jp
pop
fwait
cmp
jge
and
scas
jbe
dec
cmpb
cmp
bnd
jle
cmp
test
mov
push
je
pop
jge
jge
push
insl
mov
sub
pop
cwtl
cmp
in
out
rcrb
divl
hlt
clc
fs
adc
xchg
pop
push
loop
repz
sub
mov
out
sbb
in
mov
cmpsl
add
add
jo
inc
clc
imul
push
adc
adc
lcall
mov
pop
mov
xor
not
call
dec
rolb
rol
test
ds
mulb
imul
int
sub
mov
xor
pop
outsl
daa
sbb
lcall
push
in
fstpl
adc
mov
push
cwtl
pop
inc
imul
adc
xchg
loop
cmp
xor
xor
xor
sbb
out
jg
dec
add
mov
fimull
jmp
adc
insb
pop
mov
jg
out
adc
mov
jo
cmp
scas
jl
std
add
or
mov
cltd
add
inc
mov
stc
dec
xchg
lcall
dec
jg
and
pop
cmp
sbb
adc
pop
jnp
adc
push
mov
inc
or
out
in
cmpsb
dec
sarl
lock
lods
les
push
lods
pop
iret
or
xor
pop
stos
mov
mov
jge
lret
les
jecxz
xor
hlt
xor
loopne
mov
xor
cmp
cltd
insl
push
ja
pop
and
pop
xchg
mov
andl
in
in
movsl
pop
adc
push
push
mov
shr
inc
push
outsl
rclb
out
push
jae
call
into
mov
cmpsl
cli
mov
loop
gs
mov
testb
mulb
push
les
fs
mov
out
adc
jecxz
ja
xchg
es
loope
int3
push
push
xchg
dec
adc
out
sbb
mov
xor
stos
repnz
testl
es
ret
add
sbb
xor
cwtl
pop
inc
xchg
enter
pop
daa
bound
sbb
nop
cmp
fldenv
inc
cs
andb
or
pop
fnstsw
iret
jnp
inc
dec
jnp
ja
sub
sti
pop
das
cld
scas
xor
jge
enter
int3
mov
insl
adc
pop
cmp
call
shlb
or
push
cmp
and
daa
xchg
fsubl
push
and
pop
or
nop
cmp
dec
jnp
outsb
sbbb
outsb
adc
out
in
fbstp
fwait
mov
out
sub
in
fwait
jne
out
stos
cmp
add
mov
jecxz
call
sar
cmp
aaa
push
cwtl
loope
pop
push
addr16
or
xchg
inc
and
push
loopne
pusha
loope
lods
lock
jbe
cmp
stos
adc
add
das
enter
mov
mov
cmovno
and
xor
and
fildll
inc
cmp
jmp
jle
mov
push
pusha
xchg
inc
dec
sbb
xlat
sub
outsl
cs
and
sbb
xchg
leave
xchg
shlb
ljmp
or
lock
leave
and
sub
push
jle
xchg
jno
add
aam
fimull
cwtl
insb
adcl
pop
clc
mov
xchg
mov
fisubl
test
and
pop
pop
dec
mov
mov
ss
pop
std
push
sbb
pop
enter
and
cmp
aad
or
push
add
sub
adc
mov
add
jg
jecxz
call
in
xchg
jge
adc
fwait
xchg
sub
repz
xor
pop
or
aaa
ljmp
adc
cmp
sub
bnd
adc
pushf
inc
cmp
fbstp
inc
cwtl
stos
cs
enter
or
sbb
imul
pop
inc
mov
push
fnstsw
xchg
loop
dec
add
int
test
int3
pop
repz
pop
or
push
xchg
mov
rcll
les
faddl
subl
hlt
sahf
xor
xlat
dec
jbe
insb
ret
pop
test
out
inc
sarl
and
stos
fidivrs
fdivp
repnz
movsb
and
sbb
lods
push
out
addb
popa
arpl
jecxz
dec
jne
xor
scas
test
xchg
das
fiaddl
std
fiaddl
movb
leave
mov
das
rcll
add
notl
aam
mov
negl
push
test
xor
mov
loopne
inc
and
rcrb
faddl
cmpsb
adc
out
mov
xchg
insl
repz
sahf
xchg
pushf
inc
loopne
push
ret
pop
inc
scas
jl
nop
adcl
add
pop
push
mov
scas
pop
leave
adc
roll
and
shlb
addr16
mov
movsl
sahf
fisttpll
mov
fwait
dec
dec
sub
jbe
scas
cmp
sub
sbb
sar
xchg
lret
shrb
cli
cmpsl
daa
push
push
mov
push
pusha
iret
test
adc
dec
adc
cmpsl
loopne
mov
push
mov
jb
add
jne
mov
or
push
mov
sbb
mov
into
lcall
dec
and
imul
incl
xchg
ljmp
add
pop
jae
mov
test
daa
in
xchg
fidivl
and
stc
jmp
dec
clc
sbb
cld
leave
adc
xor
cmpsb
mulb
cmpsb
pop
loope
mov
int
push
stos
and
mov
adc
or
jb
cmp
or
xor
in
outsb
adc
pop
sbbb
sahf
jne
imull
or
mov
mov
int3
xchg
add
sub
pop
jmp
std
xor
fidivrl
mov
jae
xor
pop
lret
xchg
aam
fisubs
je
loope
in
fistpl
pop
xchg
push
mov
mov
sub
sbb
enter
jle
mov
fwait
jge
sub
inc
decb
pop
mov
imul
fnstcw
xchg
inc
sub
cmp
jge
fldcw
rol
in
mov
in
rcl
sbb
sbb
cmp
test
cmp
xchg
sarb
jnp
jns
aad
lock
jp
inc
loopne
movsl
addl
pop
xchg
call
mov
or
cld
cli
jle
xchg
insb
aam
jmp
or
sbb
jge,pt
and
inc
jl
les
mov
push
cltd
sqrtps
lcall
xlat
sbb
xchg
sbb
mov
cmp
sub
lret
fmul
gs
shr
mov
aas
and
fs
mov
inc
pushf
and
xchg
mov
jae
lods
dec
and
mov
in
loopne
push
or
mov
inc
mov
pop
mov
pop
pop
add
jmp
pop
inc
adc
loop
mov
repz
mov
mov
in
stos
cwtl
xchg
adc
xor
xor
hlt
mov
or
cmp
aas
cmp
data16
subb
dec
outsl
or
das
fisttps
xor
out
xchg
cld
cmp
push
xor
sbb
xlat
mov
loop
push
mov
dec
jne
push
stc
test
jb
inc
pop
mov
cmp
popf
or
lcall
mov
sbb
or
inc
imul
jmp
std
xchg
in
aaa
insl
fbld
ds
xchg
mov
or
je
inc
loopne
pop
mov
int3
xorb
fwait
and
lea
mov
decl
cmp
push
pop
aad
stos
or
popa
xchg
or
sbb
rcrb
pushf
xchg
push
cmp
inc
and
leave
xor
scas
mov
pop
cltd
push
push
insl
pop
pop
sub
pop
push
inc
dec
ja
dec
fs
aad
rcrl
cmp
int
out
mov
out
cld
ss
lcall
add
leave
std
xchg
lea
or
xchg
add
inc
pop
dec
cmp
sahf
dec
jns
sub
dec
stos
inc
jbe
insb
in
test
shl
js
fwait
pop
add
xchg
bts
lock
popa
outsl
dec
ja
xor
pusha
push
inc
jge
adc
fidivl
xchg
adc
dec
pusha
or
out
sbb
mov
or
sarb
stos
int
int
ret
loope
popa
pop
lret
or
out
loope
cli
stos
jle
lea
pop
xchg
sub
addl
pushf
ds
xchg
cmc
repz
and
push
div
cmpsl
mov
cld
js
jp
cwtl
jo
push
push
int3
jne
popa
sarb
shll
adc
mov
movsb
sub
out
test
daa
and
testb
adc
jae
mov
cmp
sub
push
xor
jp
pop
mov
adc
cli
mov
lea
pop
cmpsb
xor
inc
push
inc
add
add
cmpb
push
incl
inc
sub
or
into
mov
cli
ds
aaa
insb
ficomps
sub
or
ss
mov
push
pop
mov
jne
dec
push
xor
push
xchg
int3
mov
pop
xor
xchg
pop
outsl
sub
lods
xor
stc
pop
aas
es
sbb
mov
mov
pop
ljmp
adc
les
std
sub
or
enter
push
push
push
in
jne
ss
or
subb
pop
push
out
sbb
add
jle
inc
xlat
mov
inc
das
add
subl
pop
mov
add
hlt
sbb
dec
mov
adc
sbb
enter
inc
fsubl
imul
arpl
dec
pop
mov
jbe
dec
push
pusha
testl
xor
aam
sbb
mov
sti
fildl
sbb
shrb
dec
mov
int
push
hlt
loopne
push
aad
nop
mov
test
inc
jmp
jmp
pop
andl
or
fwait
or
mov
stc
arpl
jns
jns
lahf
add
jmp
cld
push
pop
push
cmc
xor
cmp
aas
sbb
xor
xchg
scas
addl
aad
dec
cs
mov
ljmp
stc
addr16
ja
mov
xchg
shll
les
daa
sub
mov
mov
push
testl
imul
js
loope
mov
mov
add
ja
test
jp
mov
mov
js
push
fnstsw
push
lret
lea
mov
sub
mov
cmp
mov
nop
pop
inc
mov
push
orb
icebp
rcl
jb
jmp
cli
xchg
cld
push
test
adc
cwtl
mov
xchg
cltd
and
lret
push
inc
in
lret
fisubrs
repz
add
int3
leave
insl
dec
loope
cmpsb
jns
in
mov
ss
out
adc
mov
cmp
dec
out
in
insb
test
mov
aas
loopne
out
xor
cmp
cmpsb
into
sti
xchg
in
out
js
subl
cmp
popa
mov
pusha
sbb
ljmp
jo
loope
push
adcb
fcmovbe
and
and
mov
test
in
push
int
pop
cmp
lea
sbbb
movsb
cmc
xor
les
lahf
jg
pushf
and
inc
scas
mov
fldcw
cs
imul
adc
push
xor
cltd
mov
jno
inc
notb
lods
jecxz
push
frstor
std
roll
xor
push
mov
jne
and
mov
imul
hlt
push
iret
and
mov
pavgw
and
cwtl
lcall
pop
ret
jle
test
push
lret
mov
and
sub
jo
cmp
add
pop
js
mov
jge
xchg
and
pop
aad
std
loopne
sbb
fmulp
repz
sti
jmp
sub
inc
xchg
and
sarb
sub
in
idivl
imulb
jbe
aas
les
test
inc
cmpsb
orb
ss
cli
inc
cmp
dec
mov
jl
mov
mov
leave
testb
xlat
cmpl
push
lret
pop
sti
sbb
fldcw
lahf
imul
fildll
xchg
xchg
sub
adc
loope
and
lret
dec
push
idivb
mov
push
addr16
jbe
push
push
cmp
jp
int3
push
jbe
push
cmp
pop
arpl
mov
mov
mov
or
sarb
jne
push
add
mov
ret
xchg
jmp
outsl
dec
mov
movsl
imulb
fiaddl
lods
xor
hlt
adc
xchg
cwtl
fisttps
sub
into
sbb
lcall
out
sbb
sub
push
add
adc
xor
in
xchg
push
aam
test
lret
sarb
mov
rcpps
pop
push
rcrl
mov
adc
pop
in
push
mov
lods
pop
mov
or
ds
sub
jecxz
mov
ljmp
jg
mov
test
movsl
mov
jg
mov
scas
lods
cltd
xorb
push
cmp
in
dec
xchg
in
andb
jne
xor
pop
data16
imul
in
sbb
fnsave
lahf
push
in
imul
sar
xlat
jno
je
add
and
sbb
or
roll
xchg
pop
jo
ja
or
xchg
loopne
in
mov
inc
fwait
orb
ds
fidivrs
mov
sti
cwtl
mov
int
or
pop
cmp
xor
insb
push
pop
mov
push
jl
mov
cmp
xor
mov
xlat
in
xorb
int3
xor
mov
inc
pop
aas
cmpl
outsb
lret
imulb
lret
mov
mov
popa
add
pop
pop
dec
repnz
mov
hlt
push
cmpb
sbb
xor
enter
push
stos
lods
xor
aaa
sbb
mov
xor
cmc
mov
ret
jecxz
jmp
mov
mov
fs
xor
xchg
fmull
mov
js
xor
jae
mov
js
lods
pop
cmpsb
outsb
orb
lea
xchg
xor
mov
xor
fnstsw
jo
minps
dec
repnz
lods
cmp
iret
ljmp
les
mov
int
repnz
roll
cli
cmp
jp
aas
ds
sub
out
jp
dec
js
je
das
xor
fucom
cmpsb
mov
in
pop
test
movsb
fiaddl
xchg
push
or
push
dec
fldenv
sub
fs
enter
pop
mov
test
or
inc
sbb
fwait
lret
sub
popf
sub
leave
rorl
outsb
rol
and
stc
ficomps
jbe
bnd
sub
mov
adcb
shll
in
addb
int3
daa
in
push
or
cmp
push
testl
dec
sub
pop
jae
das
test
mov
mov
cmc
popf
repz
cs
filds
testl
fisttps
test
inc
iret
std
and
dec
fimuls
sarl
mov
or
mov
mov
mov
sub
inc
sbb
ljmp
pop
leave
repnz
adc
popa
lcall
jne
xchg
and
pop
sub
cmp
out
insl
fwait
jge
xor
aad
pushw
and
mov
sub
adc
fxch
adc
sarb
inc
and
sbb
clc
out
out
mov
scas
mov
sub
fdivrl
mov
mov
imul
out
cmp
int
mov
out
ror
rorb
mov
imul
and
mov
sbb
sarl
ret
js
bnd
andl
xor
push
insl
cmp
dec
adc
jae
std
push
jns
inc
jle
jae
or
mov
push
sub
sahf
add
sar
leave
push
fnstcw
push
ja
movsl
int
jae
inc
mov
pusha
inc
inc
add
pop
sub
popa
mov
jne
imul
mov
cld
xorl
fldcw
add
inc
pop
cltd
pop
into
cmpsb
popa
or
js
rcl
outsb
daa
mov
andl
cmpsb
icebp
inc
ds
sti
or
fimuls
xchg
cltd
pop
jecxz
mov
fadds
dec
inc
and
push
and
add
out
pop
cld
es
popa
mov
push
and
cmpsl
cmp
enter
pop
inc
jmp
cmp
fldl2t
push
movsb
icebp
in
sbb
ja
xchg
aaa
in
jl
lahf
jl
rcl
jo
dec
jb
clc
ffree
dec
out
shlb
into
or
nop
leave
cmp
inc
pop
fwait
and
xchg
or
dec
shll
pop
sub
or
pop
xor
movb
sub
ds
push
arpl
mov
js
pusha
pop
stos
ja
xor
inc
lret
shl
jmp
mov
test
cld
out
nop
stc
xor
jmp
fld
inc
or
add
mov
jge
gs
push
add
pop
movsl
paddq
pop
xchg
sub
sahf
sub
xchg
cmp
lods
jge
fimull
iret
jl
push
sbb
and
in
imul
cmp
cmc
push
add
ret
inc
cs
pop
sbb
popl
jae
pop
dec
mov
nop
mov
mov
xor
insb
aas
into
bound
push
and
out
sbb
mov
sub
movsb
fsubl
daa
jae
pop
dec
sub
and
jg
movb
fiadds
xchg
enter
push
lret
jo
fildl
lahf
mov
jle
xchg
xor
sub
add
addr16
or
mov
cmpsb
call
aam
pop
test
pop
daa
cmp
in
mov
into
data16
repz
flds
mov
add
and
clc
call
pop
test
jnp
int3
xlat
call
stos
sub
cmpsb
negb
jle
dec
adc
xchg
out
gs
rcll
adc
ret
pop
xor
mov
cmc
stos
pop
sti
push
hlt
cltd
push
repnz
mov
and
sub
decb
cs
add
repz
in
test
dec
jle
mov
mov
sti
loope
mov
sub
mov
adc
mov
inc
pop
push
jns
dec
lret
movsb
add
lret
cmp
outsl
mov
add
adcb
add
jmp
sub
jnp
add
mov
xor
pop
loop
or
mov
push
dec
dec
mov
out
mov
and
icebp
push
mov
adc
int
icebp
adc
mov
sub
jne
js
adc
out
loopne
or
pop
jmp
inc
leave
orl
es
lds
xor
pushf
mov
mov
addr16
jbe
push
call
xchg
add
or
mov
mov
lret
xchg
ja
pop
push
push
cmp
lret
movsl
or
xor
and
mov
loop
sbb
adc
test
int
mov
clc
sbb
cltd
dec
mov
lods
mov
jmp
cmpsb
add
ds
jns
push
adc
push
mov
cltd
cmp
pop
mov
xor
xor
adc
fs
mov
ror
mov
dec
fistpll
lcall
frstor
mov
ret
cmp
ficomps
sbb
jmp
inc
cmp
fistpll
ja
icebp
mov
xchg
sub
dec
inc
jbe
int3
imul
lock
shll
cmpl
xchg
ss
lock
cmp
fldenv
aas
roll
fstpt
lods
sbb
jno
int
and
test
mov
and
fildl
cmpsb
and
adc
pop
sbb
mov
icebp
aas
xor
add
pushf
repnz
loope
fdecstp
sti
outsb
std
lahf
push
xchg
sub
sbb
pop
sbb
jae
shl
out
push
cmp
daa
dec
push
fcoms
aad
lods
scas
or
jg
lret
jo
add
ljmp
xchg
add
mov
and
dec
or
shl
fcomi
das
mov
mov
pop
je
les
xor
or
inc
add
xor
xor
sbb
mov
cli
insb
fwait
in
xor
push
in
pop
int3
xor
push
xchg
js
std
outsb
jmp
mov
push
mov
in
sub
add
divl
push
loop
pushf
inc
push
out
pop
dec
sub
push
inc
les
xor
inc
lods
cmovle
jnp
test
inc
pop
lret
pop
hlt
mov
mov
xor
push
out
xchg
jnp
fstpl
mov
mov
jmp
push
xor
cmpsl
scas
jnp
mov
aad
jae
or
sub
sbb
or
push
mov
xor
jle
mov
divl
aaa
push
jp
test
jge
xor
clc
mov
cld
sbb
rcrb
pop
addr16
cli
scas
push
mov
add
xchg
fwait
pusha
or
testb
push
mov
mov
adc
insl
lock
xor
xchg
inc
inc
insb
or
imul
fimuls
test
jns
add
cmp
lock
pop
mulb
inc
popa
cmpsb
out
and
xor
ss
dec
loopne
fldcw
lahf
shlb
mov
clc
jbe
xor
mov
add
arpl
jb
mov
mov
shrb
xchg
fwait
decl
sub
sub
mov
dec
jae
loop
andb
sbb
push
daa
inc
mov
inc
dec
inc
cltd
dec
in
jne
jp
cmpsb
mov
cli
out
xchg
imul
inc
notl
ret
in
out
xchg
out
push
xor
dec
dec
in
mov
test
or
rcr
jecxz
or
ljmp
or
push
pop
xor
or
stos
int
es
add
jns
addb
pop
inc
cmp
repz
push
and
cmpsb
mov
inc
pop
out
jae
dec
dec
test
out
add
ljmp
imul
aad
rcll
lret
mov
cmp
ss
ds
shlb
xor
ja
das
mov
dec
fwait
aaa
jmp
popf
cli
inc
xchg
add
mov
xchg
popf
pop
popf
movsb
lret
xchg
iret
push
dec
mov
sbb
daa
decl
pop
jo
cmp
jne
out
pop
pop
inc
sub
jge
mov
add
iret
or
inc
mov
dec
das
mulb
nop
push
fdivrs
lods
adc
adc
pop
mov
dec
adc
aas
dec
or
jne
insl
or
xor
cmp
pop
dec
inc
das
rcrl
pop
mov
mov
lock
jp
push
cltd
cli
pop
jns
aaa
xchg
sub
loopne
lcall
push
mov
cmp
dec
aam
push
popa
push
sub
xor
ret
inc
dec
hlt
xchg
ret
push
outsb
mov
pop
insl
imul
adc
out
out
or
stc
inc
insl
jp
mov
ret
fwait
shlb
and
adc
jb
xor
scas
mov
in
shll
xor
cmovne
jnp
mov
mov
xor
stos
or
mov
mov
dec
orl
or
inc
pop
ficoml
xor
add
mov
sub
adc
out
push
out
out
mov
xorb
mov
cmp
push
imul
pop
enter
adc
and
subl
pop
pop
fidivl
int
test
fcomps
fsubs
pop
mov
inc
dec
or
insb
dec
pusha
orb
aas
bound
cwtl
xor
int3
fwait
dec
pop
ds
popl
mov
icebp
xchg
push
dec
pushf
mov
xchg
test
mov
pop
inc
je
pop
xor
dec
mov
mov
or
add
push
inc
ljmp
jae
mov
aaa
dec
push
push
ficoml
mov
push
mov
sub
fcmovb
je
imul
cmp
lahf
push
sbb
cmp
loope
cli
in
arpl
push
fidivl
aad
dec
fs
shlb
dec
sbb
pop
pusha
daa
into
xchg
mov
sarl
sub
loope
jle
je
push
out
push
or
jmp
incl
mov
and
xor
jbe
iret
xchg
mov
shl
inc
insl
arpl
addb
mov
mov
leave
cs
std
data16
add
daa
mov
jno
fsubs
push
les
push
adc
xlat
aas
xlat
outsl
xchg
int3
sti
fcmovbe
xchg
xlat
xlat
xlat
loope
push
ret
sbb
insl
pop
ja
lods
mov
sbb
sbb
sbb
sahf
push
push
sbb
ja
sub
lret
lret
push
rcr
addr16
inc
xchg
scas
sub
loopne
adc
jecxz
data16
or
xchg
mov
out
sub
cmp
lock
xlat
cmp
das
dec
aad
push
xorl
and
test
pusha
push
push
jmp
cld
lahf
add
cld
inc
add
sub
jbe
adc
adc
jnp
bound
idiv
and
adc
pop
mov
mov
lods
sub
out
lea
imull
push
inc
add
mov
cs
leave
js
rol
adcb
push
lods
jecxz
lds
dec
cvtpi2ps
in
out
sub
dec
xor
stos
cmp
sub
push
aam
call
pop
test
pusha
jge
stc
mov
test
outsl
fisubl
mov
pop
icebp
aam
sbb
or
xchg
mov
dec
or
fisttpll
fs
push
data16
push
loop
xor
in
das
jbe
push
data16
push
sbb
jle
jmp
mov
pop
inc
dec
andl
lcall
mov
inc
jno
je
int3
ret
aas
scas
rcll
stos
pop
popa
popf
jg
rcll
in
fwait
xchg
dec
scas
cld
cmpxchg
mov
lcall
out
sbb
lods
lock
adc
mov
lods
jns
or
sbb
imul
jle
pop
cmp
xchg
aad
lahf
lods
fildl
fcompl
push
icebp
mov
imul
imul
shl
mov
add
repnz
call
insb
cli
sub
jl
and
das
addr16
jno
or
or
scas
shll
push
sbb
nop
add
sub
pop
sbb
inc
pop
insb
mov
or
xor
dec
sbb
scas
or
dec
push
fsubrs
adc
cmc
popa
stos
push
incb
mov
gs
hlt
inc
test
inc
test
mov
je
popa
sbb
hlt
adc
pusha
and
xchg
xchg
js
loop
and
cmp
inc
lds
mov
mov
bound
push
push
mov
sub
jne
shrb
sbb
loope
and
jge
dec
cmpsb
sub
leave
hlt
cmp
sbb
push
and
outsb
push
ja
xor
adc
jecxz
sbb
dec
xor
xchg
and
cmc
pop
or
xor
aam
and
fidivrl
cmc
xor
imul
xor
scas
sbb
jno
stos
xchg
and
inc
push
iret
aad
loopne
pop
addr16
xor
scas
subl
daa
or
mov
add
mov
call
repnz
loop
pop
and
inc
dec
push
repnz
dec
inc
insl
or
mov
add
clc
nop
hlt
or
jmp
sarl
jb
mov
xor
js
mov
shlb
add
mov
je
dec
cltd
sarb
cmp
clc
lret
sbb
dec
adc
arpl
adc
cwtl
sub
pop
jne
addr16
out
cltd
mov
adc
lret
mov
and
jmp
je
sti
in
nop
cmpsl
mov
imul
pop
or
fisubs
fcomps
aam
adc
imul
push
movsb
lret
outsl
or
add
int3
cmpsl
cs
and
and
stc
lret
adc
decl
addr16
and
and
enter
or
test
sbb
jo
mov
push
sbb
mov
fdivrl
icebp
xchg
pop
sub
mov
xlat
ret
fcompl
or
ja
gs
in
xchg
mov
rcrb
mov
into
addr16
test
das
ja
adc
fldl
das
rorb
mov
cmp
adc
or
inc
orb
pop
ret
xchg
ljmp
rcrl
lcall
movb
imul
in
repz
js
js
push
lods
mov
mov
sbb
shll
or
repz
pop
fmull
call
les
imul
outsb
mov
iret
out
cli
out
cmp
std
inc
cmp
ret
fwait
pop
lret
pop
pop
aam
mov
jo
and
scas
popa
fisttps
adc
shll
repnz
dec
push
sahf
mov
sbb
in
inc
movsb
mov
cltd
sti
cwtl
out
repz
mulb
add
sub
jno
fisttpll
out
or
and
add
inc
cld
xor
sbb
mov
xor
stos
out
dec
pop
mov
jp
inc
or
ret
mov
out
and
push
outsl
jg
and
xor
and
xchg
sub
cmc
dec
xor
or
pop
cmp
enter
gs
xchg
cmp
mov
add
movsb
push
imul
clc
adc
arpl
aad
dec
inc
jnp
clc
rorl
jp
pop
cmp
or
push
fs
dec
or
xchg
dec
aaa
cmc
inc
sbb
inc
fstps
and
loope
push
dec
pusha
out
test
pop
in
or
dec
mov
or
add
ret
mov
xchg
rcr
lods
sahf
mov
xchg
rcrb
out
stc
mov
mov
lret
dec
lret
lret
loopne,pn
aad
jle
insb
lock
and
push
push
mov
or
rorb
jmp
mov
bswap
adcl
dec
sub
cmp
xor
or
ds
out
add
jecxz
int
sbb
xchg
pop
xor
sbb
jnp
rclb
subb
push
arpl
sub
sbb
sub
sahf
int3
fcos
sbbb
sbb
rcll
xor
int
xor
and
sbb
pop
xchg
and
push
out
adc
xor
icebp
sbb
sub
cmpsb
imul
jl
lods
sub
lods
loop
push
in
arpl
push
adc
pop
jns
insl
fisttpll
inc
aaa
loopne
push
into
aad
adc
jne
scas
cmp
ror
cs
xorl
orb
jne
inc
sub
pop
dec
pop
lcall
imul
mov
adc
adc
cwtl
inc
inc
ficompl
pop
lods
lods
mull
inc
mov
lods
into
dec
pop
xchg
mov
mov
lahf
xor
loope
fildl
sbb
adc
mov
divl
push
lea
repnz
adc
cli
cmpsb
pop
lods
sbb
flds
cmp
dec
test
lret
popf
lcall
push
cltd
mov
ljmp
fidivrs
jmp
es
adc
call
iret
pop
arpl
cmpsb
fisubrs
adcl
mov
jl
pop
nop
mov
les
adc
enter
mov
ret
loopne
fldt
jg
scas
inc
es
jns
mov
jo
sub
bound
mov
jae
iret
sbb
cmp
mov
mov
out
lock
loop
std
adc
mov
ficomps
loopne
pop
xchg
notb
jp
in
mov
xchg
lock
mov
subl
mov
aam
fucomip
out
cmc
test
mov
xchg
out
incl
imul
test
addr16
and
xchg
sbb
push
mov
out
and
add
push
mov
lret
dec
fwait
mov
xchg
jne
jmp
insb
xchg
add
repz
leave
jbe
lea
imul
pop
xor
cmpsb
mov
jno
ljmp
lret
sahf
cmp
or
int
pop
fxch
icebp
xchg
movsl
sub
shll
iret
xor
xorb
cwtl
hlt
test
cld
lcall
inc
mov
insl
ds
pop
mov
mov
imul
xchg
imul
into
adcb
je
out
push
mov
add
aas
mov
adc
dec
loope
mov
imul
inc
icebp
ss
mov
call
sub
and
stc
and
jecxz
stos
mov
cmpl
and
pop
push
dec
es
pop
mov
jnp
rorl
rol
push
add
pop
dec
ret
dec
in
jle
inc
test
inc
adc
cmp
jmp
pop
dec
cmp
push
out
cmpsb
mov
test
pop
pop
push
push
mov
lahf
out
add
dec
xchg
out
add
inc
mov
and
imul
or
sbb
add
mov
aas
xor
in
add
push
lcall
xlat
lods
xchg
inc
dec
add
push
push
mov
inc
xchg
mov
sti
mov
jo
pop
dec
pop
dec
or
in
sbb
pop
loopne
cwtl
in
add
sahf
cwtl
lods
int
mov
mov
call
pusha
fcmovbe
mov
int
adc
faddl
nop
lds
fwait
ss
shlb
pop
popa
test
cmp
sub
inc
les
movb
outsb
jecxz
jecxz
test
int
not
loope
adc
cmp
fsubr
cmp
fwait
dec
push
sub
inc
rorb
xchg
cmp
and
scas
lods
mov
test
sub
mov
nop
imul
mov
xchg
inc
mov
sti
loope
pushf
xchg
pop
stos
xor
mov
adc
pop
mov
lds
sbb
adc
mov
or
xor
js
pop
and
mov
inc
pushf
lret
clc
inc
fbld
lret
xchg
or
dec
enter
movsl
sbb
cmpsb
loop
bound
enter
icebp
cmpsl
imul
mov
int3
add
dec
mov
in
lcall
cmp
addb
or
mov
aam
dec
jae
xor
dec
inc
pop
sahf
push
lahf
hlt
mov
mov
iret
rorl
fisttps
sbb
sub
or
or
test
xchg
xor
arpl
pop
sahf
push
data16
push
mov
mov
mov
dec
jnp,pt
aaa
add
es
lods
mov
push
sbb
shrb
imul
mov
cmp
lret
shll
shll
xor
push
mov
pop
lods
mov
fbld
sub
dec
pop
xchg
stos
pop
mov
pop
jnp
dec
xchg
add
push
sub
call
cmpsb
mov
push
daa
add
and
in
mov
add
jle
sahf
iret
push
xor
xchg
mov
fistpll
sub
jne
mov
sub
jecxz
cli
sub
xchg
fstl
adc
pop
cmp
pop
push
hlt
add
fistpll
inc
fsubp
fwait
imul
pop
mov
add
mov
lock
inc
jmp
outsl
test
and
push
cmp
jns
xorb
pop
jle
and
mov
mov
adcl
rorb
aas
arpl
ss
das
push
in
sbb
cmp
loopne
adc
push
sbb
sahf
sbb
push
jg
pop
xchg
pop
js
and
ljmp
icebp
xchg
stos
push
mov
pop
cwtl
and
insb
not
or
cmp
xor
vpsrad
jmp
xor
xor
pop
jnp
mov
test
push
repz
outsb
inc
xchg
in
lret
jne
jmp
push
loopne
mov
movsl
gs
sbb
inc
inc
pop
mov
jbe
sbb
fcomps
inc
loopne
insl
sbb
jmp
dec
lock
xor
and
shll
scas
adc
push
and
mov
push
fwait
or
dec
adc
subl
rorl
inc
cmp
daa
xchg
jbe
pop
add
imul
xchg
outsl
in
adc
aad
and
in
lahf
mov
dec
xchg
xchg
pop
jbe
xor
inc
repz
sbb
sub
mov
lock
notl
dec
push
mov
lret
repz
mov
aaa
mov
inc
dec
or
jne
sbb
imul
inc
bound
lods
dec
in
mov
add
or
xchg
fisubrl
jecxz
xchg
ret
add
sbb
sbb
inc
scas
pop
enter
je
sbb
ror
add
inc
mov
jp
fwait
adc
mov
mov
mov
aaa
add
inc
pop
push
test
mov
sbb
xchg
mov
cwtl
pop
cmp
jle
adc
aaa
jne
addr16
and
aaa
ja
outsl
jmp
icebp
mov
inc
push
jle
jae
push
inc
push
pop
adcl
js
jp
sbb
adc
mov
sub
movsl
fsubrs
adc
xchg
xor
add
jmp
fldenv
push
pop
cwtl
adcl
std
mov
push
mov
int3
dec
push
push
sub
jecxz
jbe
shl
add
nop
sub
insb
xchg
lods
jecxz
pop
out
mov
test
stos
aas
insl
lock
repz
xchg
fisubrl
test
insb
or
fldln2
jg
idivl
imul
adc
push
jecxz
jp
xchg
xlat
in
flds
out
daa
repz
sbb
push
push
sbb
sar
sbb
ret
add
ret
ljmp
hlt
add
sbb
sbbb
repz
mov
pop
loop
push
shlb
or
sbb
push
mov
push
out
mov
addr16
mov
repz
mov
lods
mov
mov
fadds
xor
test
push
into
outsl
xchg
stos
pusha
jecxz
aaa
mov
cmpsl
and
adc
mov
scas
daa
pop
mov
ret
shlb
mov
mov
and
add
pop
mov
push
bound
jp
adc
sbb
mov
addr16
pop
rcrl
inc
sahf
aas
imul
jnp
adc
hlt
xchg
pop
and
leave
imul
decb
xchg
xor
call
cmp
ljmp
in
jnp
add
clc
xor
stc
jb
and
stos
cmc
into
xor
or
push
inc
add
xchg
adc
loopne
fistpll
pop
cmp
mov
mov
sub
jb
or
int3
add
ret
imul
inc
negb
sbb
pop
cmp
mov
lcall
adc
stos
clc
into
int3
cmp
lret
mov
xor
mov
sbb
out
test
mov
lods
aad
inc
fabs
fiaddl
cwtl
fisttpl
insb
lds
mov
push
cld
outsl
or
int
and
mov
add
fnstcw
outsb
aas
mov
popa
push
cmpsl
lock
decl
imul
pop
dec
je
pop
faddp
fadds
out
xor
hlt
std
dec
mov
outsl
xchg
lahf
mov
cmp
std
andb
out
imul
leave
test
out
aam
rep
aad
and
cmpb
cmp
dec
push
add
lcall
scas
ficompl
ds
push
rorb
push
shll
jo
enter
mov
mov
int3
lcall
jl
xchg
and
add
add
mov
inc
shr
sbb
aam
mov
mov
dec
divl
int3
ss
imul
and
mov
mov
fisubs
push
pop
xchg
adc
aam
sbb
lock
push
cltd
push
scas
mov
push
push
jl
pop
pop
push
movsb
dec
dec
pop
mov
xor
adc
jge
mov
jp
mov
sti
adc
insb
dec
es
mov
mov
or
mov
jne
loopne
or
pop
inc
xor
or
lcall
popf
push
xchg
or
add
sbb
pop
cmp
cmp
jmp
int3
int
pop
dec
push
fsubrs
imulb
xor
inc
mov
jl
mov
adc
cli
jge
aas
sub
jecxz
repnz
cmp
adc
push
stos
lods
adc
jmp
cmpsb
ljmp
sbb
test
imul
mov
popa
push
aad
push
clc
loop
popf
aaa
push
popa
ucomiss
inc
ret
or
add
or
cmp
nop
xor
fidivl
je
cmc
data16
mov
outsl
enter
ds
aas
inc
dec
add
dec
cmp
lret
imul
mov
in
dec
mov
das
cmpsl
int3
lcall
mov
or
mov
arpl
nop
cmp
sbb
enter
mov
es
pop
inc
inc
ss
cmp
and
fsubrs
sub
rcrl
les
pop
btsl
dec
or
jae
ds
and
clc
std
neg
mov
fiadds
mov
addl
sub
dec
das
shr
lret
cmpsl
sbb
repz
lods
dec
dec
dec
aaa
enter
lea
mov
pop
mov
cmp
sbb
jns
int3
sbb
cltd
fs
out
push
pop
or
loop
sarb
scas
sub
fistps
mov
dec
and
outsl
test
mov
aas
scas
cli
mov
movsl
stos
enter
cmp
clc
mov
inc
outsl
inc
sbb
sub
add
arpl
orb
or
scas
in
test
xchg
mov
push
and
int3
sub
gs
lock
pop
aam
xchg
lods
jl
mov
or
push
mov
andb
pushf
es
loopne
lret
jbe
int3
sub
sbbl
aam
cmp
xchg
mov
loopne
ss
in
sbb
andl
or
jmp
jmp
mov
scas
inc
aam
pusha
dec
add
mov
mov
rorl
mov
in
pop
inc
test
clc
and
push
mov
repz
insl
jnp
fwait
mov
jmp
xor
or
xor
cmpsl
es
pop
loop
or
aaa
cs
mov
mov
mov
clc
clc
ret
jbe
ja
sbb
lea
mov
fadds
addl
cmp
shll
fdivs
or
fisubrl
stos
fucom
jo
push
adc
mov
jns
adc
xchg
xchg
dec
arpl
xor
nop
lods
imul
push
xchg
addr16
popa
xor
pop
jp,pt
xchg
lret
lods
aas
mov
shrb
stc
out
push
enter
jne
xor
aam
xchg
jnp
int3
xchg
cmc
push
lods
clc
orb
cmp
call
decb
ds
adc
mov
dec
jbe
mov
insb
lods
addl
push
or
sub
shrb
push
mov
mov
push
pop
shll
int3
orb
jle
lret
mov
lret
jne
orb
cmp
icebp
movsl
xchg
loopne
mov
cmp
repz
out
addr16
jae
jge
in
add
addl
add
mov
jne
rclb
insl
outsb
notl
test
rorl
push
xchg
add
mov
icebp
mov
es
push
loopne
sub
push
outsl
jbe
loop
push
dec
inc
rorl
fs
mov
orl
stc
in
jecxz
dec
test
pop
js
aad
out
pop
int
dec
sub
sub
jl
inc
sbb
xchg
fidivl
push
jmp
pop
in
mov
add
dec
dec
add
orb
xor
aas
shrb
sahf
ds
and
pushf
lret
push
in
jle
fiaddl
adc
mov
xchg
lods
mov
out
lret
mov
lea
dec
add
rorl
scas
lcallw
test
out
push
hlt
jno
lock
in
insl
fstpt
cmc
push
mov
stc
xchg
dec
aas
rolb
cmp
add
jl
shlb
ds
daa
sbb
int
mov
testb
pop
mov
lds
jo
lods
jb
aaa
adc
lds
add
xchg
mov
filds
mov
sahf
lds
push
jnp
ja
pop
orb
sub
cltd
movsb
xor
mov
leave
je
addr16
ret
popf
test
clc
or
jle
mov
adc
jl
mov
inc
movsl
add
pop
inc
mov
in
sub
ljmp
shrb
adc
mov
vxorpd
imul
xchg
add
mov
addr16
gs
iret
mov
push
mov
adc
add
in
mov
pop
ret
pushf
fdivr
in
daa
dec
jg
sahf
inc
mov
mov
test
test
cmp
xchg
ja
stos
dec
sbb
or
arpl
jb
push
mov
out
adc
cmp
and
aam
and
xor
sub
xchg
mov
sbb
mov
jne
lds
or
loopne
jne
fwait
fwait
mov
hlt
aad
lds
sub
dec
repz
jbe
arpl
bound
test
mov
adc
mov
adc
inc
mov
enter
xor
fists
je
jne
sbb
mov
fdivp
mov
frstor
inc
lcall
stos
dec
bound
movsb
scas
jecxz
jmp
mov
lock
test
and
pop
xchg
int3
fs
xor
stos
sub
rcrb
or
or
fdivrs
xchg
xchg
test
dec
in
push
mov
jno
mov
subl
in
jmp
ret
inc
or
adc
insl
jp
mov
incb
in
add
loope
insb
add
sbb
je
sub
mov
sbb
repz
push
jmp
mov
pop
or
dec
enter
pushfw
sub
jg
or
adc
inc
cmc
inc
dec
js,pn
int
mov
mov
add
ret
mov
arpl
xchg
aam
cmp
jecxz
call
dec
mov
shlb
sbb
pop
add
scas
lods
adc
and
aas
fsubr
int3
fildll
loopne
shrb
xchg
cmp
test
aam
icebp
dec
mov
sbb
and
mov
push
cmp
jb
mov
mov
mov
inc
push
or
aas
add
push
inc
lods
out
fidivrs
fwait
fldcw
test
sti
dec
push
sub
mov
scas
cmc
ss
loop
int3
test
add
bound
mov
into
adcl
or
mov
cwtl
push
push
jo
js
lcallw
pop
out
aad
xor
pop
push
adc
or
and
push
xchg
test
or
stc
cmp
dec
mov
push
adc
fs
cld
rorl
popf
and
cmpsb
int3
push
inc
and
gs
das
lret
dec
and
pop
js
xor
or
ficomps
leave
ret
shrb
inc
lret
mov
ret
jne
mov
sub
lds
das
leave
test
mov
cmp
mov
mov
rclb
out
push
movlps
mov
add
mov
mov
mov
es
add
xchg
cmpsl
push
popf
out
shll
rcl
sarl
sub
shlb
bound
loop
sub
mov
aad
mov
mov
mov
scas
shrb
mov
lds
es
in
insl
mov
or
andl
lds
sub
jno
mov
inc
inc
adcl
aas
sub
adc
insl
mov
ds
xor
add
cmpsl
pop
cmp
inc
sti
lods
add
xlat
mov
mulps
das
or
cli
imul
adc
jns
dec
push
insl
sti
insb
in
mov
sbb
sbb
adc
adc
cltd
lret
inc
rcrl
xor
mov
xor
jae
cltd
xchg
test
sti
lea
imul
push
enter
mov
lods
sub
push
fwait
dec
pop
fs
fcoms
cmp
das
arpl
dec
dec
inc
mov
in
push
insl
cmp
and
cwtl
sbb
xchg
in
scas
sarb
std
xchg
clc
pop
mov
iret
xor
pop
mov
imul
mov
ret
enter
sarl
adc
pop
in
pop
push
xor
sub
clc
std
nop
lret
fsubr
stc
fwait
jmp
jne
mov
leave
into
hlt
inc
out
adc
cmpsl
jnp
lret
mov
test
mov
adc
test
aam
mov
jns
jbe
mov
mov
rorb
mov
popa
push
popa
jo
loope
xor
out
xor
xchg
xor
dec
fs
mov
pop
adc
shlb
stos
xor
pop
pop
adc
std
dec
sub
jo
in
xor
inc
repnz
mov
leave
mov
inc
filds
cmpsb
sub
mov
cmpsl
roll
outsl
jns
xchg
cli
xchg
dec
aam
int
inc
and
sbb
lea
or
xchg
aaa
sub
clc
pop
enter
xchg
cmp
inc
std
sub
cmp
leave
lret
fstpt
mov
and
adc
test
dec
mov
cltd
push
inc
ja
enter
xchg
fldenv
aam
loope
jb
adc
or
add
loope
rcl
insb
push
out
out
test
int3
mov
and
mov
mov
cmpsl
fcompl
mov
xchg
pushf
sub
dec
add
jecxz
xchg
jg
xchg
cmc
mov
mov
mov
cmc
aam
inc
ret
not
or
push
fwait
push
jmp
adc
xchg
jo
cwtl
inc
fcoms
fucomi
add
dec
in
js
and
mov
rolb
xchg
cmp
loopne
jge
es
cmp
loope
sbb
mov
test
enter
jecxz
loop
or
mov
mov
je
cmp
adc
cld
data16
xorl
call
adc
incb
sahf
sub
repz
out
and
xor
mov
push
jl
loop
push
scas
mov
into
addr16
mov
popf
xor
loopew
mov
out
jge
push
or
cmpsl
sub
cmp
or
cmp
mov
pop
daa
pop
push
cld
daa
xchg
sahf
mov
daa
sub
xor
sub
xchg
pop
cli
inc
mov
mov
cmp
jno
and
add
popf
push
mov
cmpsl
jge
xchg
repnz
ficoml
les
lahf
xchg
repnz
ret
cs
mov
loop
or
mov
roll
lret
imul
push
push
jmp
xor
jecxz
jno
cmp
ljmp
sub
int
call
jg
cmpb
adc
mov
xor
sub
cli
aaa
lahf
outsl
decb
call
cmp
sub
or
add
ljmp
push
lods
push
inc
in
ds
lret
push
stc
nop
add
pop
xor
jmp
or
pop
ds
sbb
dec
inc
je
bound
pop
mov
jne
fdivrp
rcrb
mov
or
pop
test
out
lcall
add
mov
adc
pop
mov
sbb
add
sub
hlt
sbb
sahf
scas
cwtl
and
mov
jbe
sub
insl
fidivrs
cli
or
adc
adc
adc
pop
add
enter
mov
sahf
dec
lret
pop
pushf
mov
sub
test
dec
dec
out
addr16
popa
push
daa
and
dec
xorl
cmp
add
mov
or
adc
lcall
mov
sahf
lret
cmp
insb
pop
sbb
pop
mov
scas
fists
jge
mov
push
dec
mov
outsb
jo
jae
fildll
test
pop
lea
fdivp
popf
xchg
rorl
test
pop
inc
add
out
sub
mov
push
in
add
push
aaa
outsl
inc
lock
pop
sbb
cmp
pop
pop
fbstp
mov
dec
std
dec
nop
imul
and
shrl
icebp
cld
pop
pop
rcrl
inc
in
pop
daa
push
scas
lock
loopne
jl
mov
jne
fcoms
push
adcb
insl
jae
sarb
filds
mov
pop
ror
jne
lret
mov
in
sahf
shlb
cmp
mov
nop
jb
sub
xchg
sbb
mov
add
int3
push
dec
mov
inc
ffree
lahf
pop
sbb
frstor
fadds
in
test
movq
in
pop
push
iret
fwait
repz
repz
push
xor
fwait
movsb
fxch
jge
mov
inc
jns
pop
and
out
cmp
jp
data16
test
pop
test
cmpsb
mov
or
adc
jle
or
dec
add
fs
add
pop
mov
aam
sub
mov
sbb
xchg
int3
push
mov
dec
dec
mov
in
jb
inc
dec
xor
dec
push
in
fisubrs
hlt
inc
mov
mov
sahf
xor
lret
fdivp
cmp
fwait
into
enter
ljmp
stc
lahf
mov
out
call
movb
and
mov
push
lds
in
mov
lahf
into
sbb
mov
les
and
sbb
in
lahf
and
jl
cmp
mov
mov
jge
popa
arpl
xor
push
mov
sbb
jge
movsl
mov
push
jecxz
shrb
sarl
pop
mov
addl
or
test
ret
daa
jne
aad
lds
and
sub
les
xchg
rolb
arpl
push
or
ret
icebp
fwait
loopw
pop
jae
fsubrs
fstps
jno
popf
fsubs
test
inc
cmp
mov
jle
stos
push
cld
dec
inc
lcall
ljmp
idivl
fwait
outsb
cmp
jbe
jbe
jno
cmp
push
xchg
mov
jbe
xchg
dec
mov
dec
lcall
xchg
fmulp
int
je
cltd
push
hlt
dec
push
aad
and
cmpsl
add
hlt
adc
in
int
cmpsl
pop
lahf
mov
push
shrb
sub
jecxz
pop
and
mov
mov
je
or
out
mov
out
clc
pop
and
mov
test
sub
dec
daa
xchg
cs
push
mov
jecxz
xchg
pop
jg
outsl
adcb
lcall
gs
out
aaa
dec
call
out
leave
xchg
test
je
xor
ljmp
in
lds
pop
mov
bound
adc
fimull
loop
movsb
xor
movsl
mov
jle
jae
or
loop
inc
cwtl
adc
hlt
popa
and
jecxz
pop
movsb
jle
sub
pusha
xchg
jl
dec
cmpsl
pop
fldcw
divl
pop
cmpsb
inc
xorl
xchg
dec
mov
in
sub
mov
mov
rorb
je
mov
int
fcoml
notl
in
cltd
sahf
mov
leave
int
adc
push
movsw
cli
xor
cmp
xor
pop
push
or
aam
adc
ljmp
dec
mov
push
ss
jae
xor
sbb
sbb
xchg
lea
jo
push
push
stos
sub
test
dec
inc
lds
push
test
or
or
mov
push
in
jns
movl
hlt
scas
stos
ret
int
dec
test
sti
repz
sub
mov
test
sub
in
fdivs
loop
nop
pop
pushf
add
es
cwtl
sub
fwait
inc
fwait
push
sbb
sar
dec
out
jmp
mov
ret
mov
xor
mov
jp
imul
lret
add
ss
fiaddl
lock
imul
xchg
mov
add
xor
lock
mov
push
mov
sbb
test
imul
mov
aaa
call
pushf
lds
inc
inc
popf
jmp
push
cmpsb
fcomi
dec
xor
dec
outsl
loope
adc
stos
loope
dec
jno
cs
adc
out
sbb
repnz
iret
adc
jp
mov
pop
lret
or
outsl
fisttpll
adcb
xor
cs
mov
sub
and
test
shl
or
in
fcmovbe
push
loope
fsubp
cmp
and
and
idiv
mov
pop
sbb
push
dec
lcall
jbe
call
out
cld
dec
jnp
outsb
pop
fwait
sbb
xchg
or
daa
daa
scas
movsb
mov
adc
xchg
mov
stos
inc
mov
mov
cmp
sub
mov
mov
push
into
and
adc
cmp
mov
js
adc
pop
xchg
inc
sbb
push
scas
fadd
stos
cmp
adc
mov
push
stos
and
jne
int3
aad
pop
or
push
in
ja
cmp
aad
xchg
mov
xor
mov
pop
cld
xchg
jo
fwait
push
inc
cmpsl
or
leave
cld
inc
cwtl
popf
in
xchg
test
leave
gs
and
mov
xor
ljmp
cmp
mov
and
jb
sbb
cmp
leave
sub
out
push
or
push
sahf
push
leave
stc
sbb
bound
stos
xchg
sahf
in
lahf
push
sbb
lods
mov
decl
jmp
adc
adc
mov
or
xchg
stos
repz
test
je
insb
add
sbb
cmp
aad
lahf
mov
xlat
jae
sbb
dec
in
cmp
push
push
add
inc
add
gs
or
sub
js
or
sub
add
in
jne
rcll
ret
cmp
rorl
add
lahf
cmpsl
std
lds
mov
sbb
jb
xchg
xor
pop
imul
pop
mov
insl
sub
adc
sti
pop
pop
mov
mov
pusha
sub
jp
ljmp
mov
add
pop
or
into
pop
stc
inc
pop
pushf
adc
fstpt
loop
sub
fnsave
cld
hlt
dec
sbb
scas
lea
or
and
adc
movsb
sub
xchg
mov
add
insb
arpl
cs
dec
shl
imul
jp
mov
mov
inc
mov
xchg
mov
lds
pushf
int
sub
inc
mov
rorl
xor
mov
jbe
jae
push
mov
repnz
add
pop
dec
fldenv
inc
add
add
fcmovnbe
push
test
xchg
xchg
test
cmp
cmc
ja
cmp
xchg
push
add
mov
out
sbb
fcmovb
ret
sub
or
sbb
popf
xchg
mov
jg
loop
pushf
dec
cmp
mov
nop
addb
fnsave
sbb
out
dec
jmp
aam
pusha
dec
lret
stos
dec
aad
test
mov
sbb
aam
jg,pn
fnstsw
sarl
xchg
or
cmc
xchg
add
in
jae
lea
out
cmp
mov
jb
mov
cmp
aaa
xchg
rcll
dec
test
repz
call
mov
cltd
sbb
loop
mov
rorl
icebp
ret
xchg
cmp
or
mov
es
adc
in
push
std
test
in
sub
decl
aas
inc
sub
inc
push
lcall
push
push
pop
and
testb
mov
pmulhw
add
leave
clc
pop
or
jle
in
aaa
or
sbb
dec
lcall
icebp
les
insb
mov
mov
sahf
dec
icebp
or
mov
clc
cmc
xchg
sub
jbe
jl
inc
popf
and
ret
negb
lret
ljmp
xchg
mov
lea
call
shrl
lea
push
es
mov
mov
sub
mov
adc
xchg
ljmp
popa
adcb
cmp
flds
and
fwait
jecxz
addr16
sub
push
btr
jg
sub
sti
mov
inc
adc
out
fadds
in
push
mov
js
sub
pusha
pop
cltd
adc
push
push
pop
nop
rorl
mov
jmp
dec
ljmp
mov
sub
sbb
mov
pop
dec
dec
fldt
mov
mov
jae
cmc
mov
je
cmpsb
and
add
push
cmp
repnz
mov
fsubr
sbb
push
daa
inc
in
mov
mov
daa
sti
xchg
push
jb
cmp
mov
push
mov
leave
dec
mov
mov
xlat
cmp
lods
jmp
pop
mov
nop
cmp
add
roll
out
lock
fsts
push
inc
idivl
add
out
pop
jecxz
xchg
insb
les
out
faddp
push
lods
aas
pop
adc
adc
adc
clc
hlt
mov
cwtl
push
cmpsb
xor
xor
icebp
pop
js
mov
int3
push
lret
repnz
mov
ss
ljmp
adc
or
adc
pushf
pop
pop
hlt
pop
inc
outsb
mov
mov
cmpsb
jns
lock
pop
pop
pusha
aad
loopne
lret
outsl
in
jnp
stos
mov
mov
popa
icebp
or
das
aad
repz
cltd
pop
mov
push
mov
sbb
stos
xchg
or
cmc
and
bound
popa
inc
jl
cs
or
jl
lahf
sub
mov
mov
leave
mov
fidivs
in
push
lock
or
insl
and
incb
decb
dec
movb
dec
push
add
out
scas
std
add
push
das
mov
xchg
pop
pop
arpl
or
push
test
mov
inc
push
addr16
jne
bound
mov
nop
mov
jne
or
mov
mov
mov
pop
pop
icebp
xchg
fcompl
into
repz
pusha
dec
shll
jb
jp
adc
test
or
mov
push
stc
jl
int3
pop
mov
push
int3
pushf
cmp
pop
lahf
std
mov
gs
insl
xor
and
jbe
add
inc
stos
sbb
ss
data16
or
fs
xchg
sarl
pop
dec
dec
mov
sbb
push
xor
push
push
fmuls
push
test
push
cltd
push
xlat
sbb
push
xchg
push
insl
mov
arpl
lods
fcoms
xor
xchg
push
or
add
lea
aam
mov
das
out
jnp
scas
ret
iret
mov
xchg
push
leave
andl
mov
sbb
jb
andl
je
xchg
insl
dec
pop
shrl
mov
out
dec
and
pop
jo
rclb
pop
push
into
add
push
es
mov
aad
dec
pop
pop
addr16
xchg
sub
lret
inc
sbb
je
cmpsl
shlb
mov
les
xchg
arpl
mov
lret
shlb
mov
mov
mov
mov
andb
mov
data16
aas
movb
leave
ret
and
mov
pop
int
adc
shl
or
sub
sub
xchg
arpl
inc
cli
sub
out
sarb
jl
dec
fisubrs
lds
inc
cmpb
into
dec
inc
ret
repnz
insl
jge
jo
bound
xor
cmpsl
incb
mov
and
stc
leave
mov
stc
cmp
bound
add
xor
psubusb
adc
loope
sti
ja
in
inc
inc
loopne
stos
mov
jbe
imul
popa
test
xchg
sti
inc
lret
test
and
adc
push
imul
dec
inc
jmp
push
out
daa
sbb
inc
pop
push
pop
xchg
sar
jge
fidivl
loope
xorl
ret
pop
rorl
mov
cltd
insb
insb
fcmovu
jmp
xchg
lds
jl
in
mov
mov
xchg
pop
add
ss
fisubs
pushf
sub
mov
dec
mov
cmp
insl
mov
int
nop
and
inc
mov
push
stos
cs
add
fisttpl
inc
sarb
sub
mov
pop
inc
sub
insb
add
xchg
dec
push
cmpsl
insl
gs
movzbl
adc
les
nop
push
leave
mov
sbb
jo
loopne
in
adcl
pushf
adc
sbbl
xchg
mov
xbegin
outsb
adc
mov
nop
mov
out
addr16
lds
int
aas
mov
add
shll
jae
popf
stos
test
js
shr
mov
mov
test
insb
shrl
jo
fcoms
push
sub
fwait
cmpsl
push
pusha
std
lahf
fwait
adc
and
xchg
xchg
adc
mov
lock
add
movsb
mov
lahf
sahf
je
and
daa
loop
ret
daa
adc
iret
mov
fnstcw
js
inc
add
fsub
js
mov
int3
iret
or
stos
shll
pop
xor
scas
xor
lea
out
cmp
lea
jg
pop
mov
push
loopne
mov
jbe
xor
fbld
fdivrs
inc
or
cmpsl
inc
jb
inc
ds
scas
push
mov
test
lret
outsl
add
popa
cmc
shl
into
xchg
mov
aad
lret
dec
into
pop
jnp
test
or
mov
aad
dec
mul
dec
enter
out
pop
out
imul
sub
aaa
mov
ja
mov
ljmp
inc
lds
mull
mov
data16
push
divps
cmovg
call
movsb
out
push
or
push
aad
stos
lret
imul
cmp
jnp
leave
addr16
lcall
and
repz
iret
movsl
ret
addl
sub
adc
sbb
cmp
add
or
fdivrl
jno
mov
push
jle
mov
xchg
mov
ucomiss
xchg
rolb
adc
pop
jbe
xchg
rcll
xor
xor
test
rorb
nop
adc
pop
or
jle
or
movsl
dec
rclb
mov
icebp
mov
clc
and
dec
add
or
pop
stos
ret
mov
ret
mov
clc
inc
adc
add
in
testl
pop
jl
xchg
or
adc
or
sub
push
frstor
xor
fstpl
rcr
sbb
insl
and
push
cmp
dec
adc
cmpsl
xchg
cwtl
push
add
lahf
int
sbb
xor
inc
and
dec
pop
cmp
rcrb
push
mov
dec
test
jg
xchg
xchg
aas
jge
es
jg
jno
sub
hlt
push
push
pop
mov
imul
push
aad
mov
test
pop
lret
leave
rol
addr16
sub
fidivrl
mov
cld
sub
in
into
iret
fstpt
in
ret
pop
mov
ljmp
lret
addr16
jg
mov
jle
xchg
insl
cltd
aad
or
inc
jae
sub
xchg
adc
mov
in
filds
and
lds
cmp
pop
jb
outsl
mov
sub
xchg
cmp
movsb
imul
push
cmpsb
sarl
mov
push
leave
fldl
mov
mov
jo
jl
jb
pop
movb
movsb
mov
movsl
pop
out
js
jae
jne
xchg
sub
frstor
imul
sbb
sbb
push
in
xor
les
aaa
div
imul
mov
pushf
js
sbb
cld
dec
lahf
ret
ficoml
jo
sub
js
and
jg
mov
sub
pop
icebp
pop
push
push
xlat
fs
and
imul
jle
test
int3
dec
and
in
out
xor
push
sbb
add
inc
push
inc
jle
leave
aas
jp
push
mov
test
shlb
or
and
sahf
sahf
iret
aaa
rcll
or
inc
aas
jmp
cmpsl
int
cmpsb
fmuls
and
cmc
pop
cwtl
xchg
sbb
lods
daa
arpl
call
rorl
pop
stc
xor
lea
cmpsb
cs
mov
ret
jbe
stos
stos
jp
ret
pushf
dec
fwait
add
daa
mov
ffreep
loop
pop
xchg
movsb
xchg
jecxz
sub
notb
jg
out
mov
sbb
int3
hlt
jnp
mov
aad
push
xor
mov
adc
or
adc
or
nop
jne
lahf
cli
mov
xor
fimuls
cmp
imul
loope
and
jle
notb
test
xlat
xor
mov
arpl
into
lcall
imul
dec
jns
aas
in
in
insb
icebp
fists
push
loop
add
inc
and
add
push
dec
mov
mov
pop
inc
jnp
inc
jbe
ja
movsl
fcomps
add
out
loop
jmp
cmpsb
in
dec
sub
out
pop
pop
or
jb
cmp
xchg
lods
jg
mov
out
lea
out
sub
les
fcmovbe
push
push
cmp
xlat
pushf
adc
filds
cs
lret
xor
fwait
arpl
xchg
or
add
push
mov
stos
sbb
and
fimuls
je
lea
cmp
sbb
jno
pop
mov
mov
addr16
push
push
xchg
stos
and
xchg
ja
loop
in
jbe
push
and
dec
ficomps
pop
and
les
or
test
push
mov
push
and
dec
loopne
add
mov
mov
sbb
pusha
dec
imul
adc
push
and
and
jne
push
dec
xchg
dec
cmpsb
das
insb
testb
aad
push
pop
xchg
sub
sub
xchg
mov
pop
xor
sub
push
sub
shrb
filds
das
push
xchg
add
insl
sbb
cmp
out
add
or
xor
jmp
mov
cmp
pop
sahf
xchg
loop
lret
mov
pop
test
jge
jl
cmp
jge
js
push
popf
xlat
push
movsb
idivl
pop
jp
dec
fldlg2
cmp
gs
imul
mov
pop
xchg
mov
mov
icebp
mov
aam
int3
bnd
cmp
dec
aam
out
pusha
mov
movb
fidivrs
dec
loope
mov
clc
stos
pop
rcrb
xor
adc
mov
mov
fdivl
xor
fimull
or
std
sub
cld
pop
xlat
sti
pop
mov
push
imul
test
out
fwait
xor
fsubrl
push
je
pop
pop
mov
push
fs
fs
inc
adc
loope
jae
cmc
jmp
insl
imul
push
add
mov
jecxz
sub
xchg
sub
pop
lret
jmp
out
add
xchg
lods
mov
out
mov
test
fadds
jo
es
jl
ret
outsb
call
dec
sarb
push
inc
push
mov
mov
fadds
test
in
adc
in
insb
pop
icebp
aas
iret
mov
das
shl
xlat
push
std
popf
out
cmp
dec
fstpt
arpl
xor
mov
test
pop
mov
xchg
dec
xchg
and
cmc
rcrb
push
popf
and
aad
pusha
fimuls
lret
xor
mov
jg
cmpsl
push
or
pop
sbb
aam
rolb
fwait
mov
std
loopne
sti
fs
and
sar
lahf
sti
mov
add
sub
in
fcoms
adc
dec
clc
ljmp
sub
adc
push
add
fbld
scas
rcrl
loope
xchg
in
cmp
hlt
aam
mov
pop
ret
push
adc
cmp
aaa
xchg
in
dec
pop
mov
dec
sti
popa
cwtl
adc
pop
dec
ss
jmp
fsubl
aad
int
cld
pop
int
push
jnp
push
ret
pushf
movsb
jbe
scas
shlb
mov
xchg
xor
bound
les
push
pop
jl
jl
push
mov
iret
push
sub
add
and
add
sub
mov
mov
and
neg
sub
push
xchg
lcall
sbb
fwait
inc
pop
pop
mov
jle
pop
aas
dec
into
loop
lret
sbb
ss
jl
roll
push
sub
push
pop
mov
jge
mov
adc
lods
int3
mov
adc
rolb
addr16
jge
mov
or
rorb
cmp
mov
mov
scas
out
sbb
sbb
test
leave
or
sbb
lahf
inc
jno
dec
jb
outsl
leave
fs
fcmovu
sub
lds
add
sbb
xor
lret
aas
lds
dec
test
int
mov
push
in
cs
dec
insb
fidivrs
cmp
popa
cld
enter
jle
inc
lcall
stos
xchg
xchg
push
in
pop
mov
pop
pop
cli
sub
rolb
sti
incl
jnp
lcall
and
mov
jno
rcrl
icebp
or
lea
fwait
aas
gs
dec
add
fmul
adc
in
inc
je
lock
bound
xor
ja
insl
xchg
push
dec
pop
pop
xor
arpl
movsl
sub
movsl
add
mov
dec
repz
lcall
cmp
jo
clc
test
shr
xchg
inc
push
je
add
out
in
sbb
lock
jnp
fsubrl
sbb
es
lods
data16
scas
pop
pop
std
sub
sub
dec
pop
andl
mov
sbb
sub
lea
icebp
out
jbe
shlb
jo
lds
nop
lock
jo
outsb
pusha
adc
cmpsb
jnp
xchg
repnz
movsl
cld
scas
in
js
xlat
rcrl
jns
into
jl
xor
std
jmp
cmp
jns
faddl
pop
lods
xchg
scas
lahf
mov
int
cmpsl
shlb
roll
jno
mov
lock
shr
rcrl
scas
mov
imul
daa
paddq
std
out
ss
push
jge
mov
dec
adc
push
adc
dec
push
pop
lcall
sbb
stos
orb
sbb
in
xchg
sbb
adc
iret
fcompl
push
test
scas
dec
adc
sub
clc
test
leave
ficomps
test
jge
push
push
sub
mov
leave
dec
fisttpll
cmpsb
ds
lcall
mov
ret
mov
cwtl
bound
ret
cmpsb
add
rol
jb
push
int3
cmp
xlat
inc
jnp
shlb
jecxz
mov
inc
pop
out
cld
roll
adc
clc
inc
sbb
imul
in
sub
jmp
sbb
mov
es
jnp
adc
pop
out
mov
cmp
cmp
scas
das
shll
sahf
stos
mov
push
sub
inc
jne
sbb
inc
scas
sbb
jnp
lret
hlt
test
out
repnz
outsb
lea
add
sbb
jle
inc
dec
outsl
gs
or
in
sub
lcall
insl
push
das
or
adc
jnp
xor
lret
ds
stos
mov
cwtl
xlat
das
xchg
outsb
nop
adc
cmc
test
in
es
push
pop
sbb
jno
ss
sbb
fwait
mul
jbe
adc
gs
out
push
push
jne
cmp
addl
mov
enter
dec
jle
and
lods
xchg
enter
test
loopne
hlt
rolb
orl
movsl
sub
inc
adc
pop
push
bound
icebp
data16
loopne
push
gs
and
call
call
cmp
out
lcall
and
std
dec
pop
mov
push
jecxz
cmc
sbbb
xor
rcr
dec
jg
daa
rcll
call
inc
stos
xlat
and
mov
into
out
mov
mov
ss
mov
push
mov
inc
fisubl
mov
xchg
movsb
mov
cld
jbe
xor
sub
mov
movl
loopne
jecxz
xchg
dec
insl
loopne
loopne
shll
inc
fcmove
enter
test
stos
movsb
dec
and
jnp
ret
out
cmp
mov
lock
push
popa
push
int
mov
jge
push
arpl
arpl
loop
shlb
fs
adc
aas
dec
fisttpl
iret
aad
ret
call
mov
cmp
sarb
mov
aaa
pushf
pop
mov
cs
push
shlb
jns
es
mov
ja
adc
cmpsl
dec
lahf
leave
cmpsb
orb
xchg
pop
aam
test
clc
lahf
push
dec
adc
sbb
jbe
ljmp
enter
js
cmove
xor
movsl
push
mov
hlt
push
jae
negb
mov
into
ljmp
pop
das
xlat
dec
mov
scas
adc
mov
sub
out
bound
leave
movsl
mov
xchg
push
nop
mov
in
inc
mov
lods
clc
stos
pushf
xchg
js
repnz
aaa
mov
mov
int3
mov
sahf
incl
jg
sbb
jne
xlat
pop
sar
pop
dec
shrl
push
push
cmpsb
enter
mov
aam
out
pop
lcall
mov
mov
or
aam
cmp
movsb
xchg
cmp
rcrl
pop
stos
std
fldcw
sub
cmp
iret
add
add
push
and
scas
movsb
jo
clc
mov
mov
sbb
dec
mov
adcb
in
dec
shl
xchg
push
test
cmpsb
fwait
lock
lods
lods
dec
bound
cmpb
cs
pop
mov
int3
lods
sub
push
sahf
mov
jg
loop
popa
push
mov
fsubs
add
rcr
in
jne
sub
xor
sub
inc
dec
rorl
push
ret
mov
stc
test
fwait
mov
inc
push
popa
sub
cmp
and
jl
mov
pop
sbb
adc
ja
cmp
test
fidivs
mov
fsubs
ret
ret
ss
mov
cmpsl
xor
inc
das
push
insl
cmp
adc
lret
mov
shll
clc
enter
test
je
xchg
test
cs
inc
mov
lods
shll
movsl
inc
sti
dec
mov
mov
mov
shl
ds
mov
subb
or
mov
push
sbb
push
scas
sub
push
jge
insl
pop
add
jb
sub
pop
push
pop
mov
outsl
xchg
mov
lret
gs
mov
or
in
repz
inc
pop
add
push
inc
int3
aad
dec
xor
pushf
out
jl
imul
test
push
jnp
inc
push
js
test
pop
js
not
lret
mov
push
xchg
push
xchg
cmp
dec
stc
pop
cmpsl
fimull
call
gs
jmp
mov
jno
inc
sub
mov
xor
lods
mov
xor
gs
ret
movsbl
sbb
rcrb
fwait
sub
out
jmp
sbb
adc
jmp
cmp
mov
xor
test
cmp
mov
out
fwait
jmp
push
popa
jno
mov
pop
add
lock
inc
ja
in
jns
ret
imul
loop
repnz
insb
mov
sbb
ss
or
xchg
or
xlat
cmp
sub
xor
movsl
dec
xchg
jp
mov
std
in
jmp
add
in
mov
pushf
movsb
dec
xchg
xchg
mov
into
inc
aad
sahf
pop
ljmp
pop
mov
scas
xor
mov
cwtl
iret
inc
pop
lods
in
xorb
sbb
pop
push
decb
shlb
xchg
je
mov
jl
mov
jle
jle
lcall
inc
dec
jmp
into
out
mov
les
ret
jns
sub
mov
shlb
push
dec
pusha
jecxz
out
inc
sub
test
sbb
sarb
jmp
pushf
nop
inc
lods
loopne
lock
mov
cmp
out
pop
int
push
push
cs
into
stos
sub
test
aam
sub
xor
mov
jno
sub
jp
dec
cli
subb
hlt
mov
sahf
imul
scas
cmp
into
aas
and
sbb
pop
push
add
movsl
mov
adc
adc
lcall
add
push
cmpb
insb
mov
stos
dec
stc
mov
jnp
pop
jae
pushf
nop
jne
lods
popa
clc
mov
mov
add
xchg
mov
xor
jo
mov
add
jns
rcll
lea
cmp
adc
inc
lds
xor
dec
add
dec
clc
hlt
stc
inc
cli
mov
out
inc
cmp
add
push
mov
sub
insl
adc
dec
mov
in
mov
xchg
inc
pop
addr16
imul
adc
and
ljmp
fcoms
xchg
push
dec
jmp
jbe
in
or
jg
cmpsb
js
push
int
mov
mov
xchg
ds
aaa
dec
mov
popf
ja
aaa
sbb
or
lea
mov
pushf
loopne
ror
cmpsl
mov
in
std
popa
data16
and
and
pmaxsw
insl
in
sub
sbb
stos
addb
sbb
xor
inc
and
mov
das
push
clc
lea
xchg
and
adc
pop
insb
or
fs
pop
pop
pop
or
cmp
cwtl
in
add
jae
lcall
jno
mov
movsl
push
add
push
sub
cmp
adcb
push
inc
mov
movb
shlb
testb
sahf
loope
and
sahf
jp
cmp
faddl
cmpsb
leave
dec
xchg
pop
sbbb
insb
inc
je
mov
popf
dec
scas
in
test
in
push
pop
jb
lret
leave
jg
shlb
fiadds
and
sub
jns
dec
jle
mov
mov
sarb
sub
cld
adc
test
adc
in
test
inc
or
xchg
push
in
and
ds
add
push
sub
jbe
sbb
adc
filds
int
dec
xor
mov
std
pop
sub
bound
xor
dec
and
and
xor
jne
movsb
inc
pop
lahf
push
mov
lods
adc
inc
fwait
aam
lret
pop
sti
std
mov
mov
xchg
sahf
out
popa
das
xchg
jmp
xor
cmp
push
sub
test
xor
movsb
jns
ja
ret
cld
mov
orl
sub
idivl
and
push
cmpsl
mov
outsb
inc
fs
movsb
aad
fisttpl
or
addr16
in
xor
icebp
sarl
jecxz
fsts
push
data16
fsubrp
shll
or
idivb
rcr
xor
or
add
enter
add
or
mov
mov
popa
sbb
fcmovne
pusha
popf
shlb
dec
je
hlt
and
rcrb
int
inc
xor
rcrl
and
sarl
imul
and
jle
mov
fs
in
das
xchg
xchg
adc
and
leave
in
test
std
hlt
data16
insl
mov
xor
dec
sbb
test
mov
push
in
xchg
jns
movsl
mov
cwtl
or
ja
xor
mov
fldl
andb
mov
add
sub
aas
fmull
lahf
rcll
add
xor
je
cmpsb
cmpsb
or
ss
pop
daa
cmpsl
cmpsl
push
mov
ficompl
push
adc
dec
test
fidivrl
inc
inc
jb
pop
jbe
jecxz
xor
add
es
and
lods
cmpsb
lcall
lock
add
stc
or
push
jne
and
mov
out
add
imul
push
jp
int
jb
jge
bound
test
dec
jmp
xchg
insl
shlb
jae
sub
fisttpll
add
lret
sub
cmp
cmp
roll
dec
pop
jbe
dec
daa
loop
leave
in
popa
testl
lock
aad
ficompl
xchg
mov
jbe
pop
in
outsb
lods
cmp
and
movsl
mov
lcall
sahf
sub
xor
add
inc
arpl
xor
int3
push
imulb
ret
loope
pop
stos
mov
mov
inc
jmp
inc
gs
fwait
push
jbe
jecxz
sub
inc
insb
or
xor
ds
stos
jmp
imul
push
movsb
push
jns,pt
dec
fstpl
jo
sbb
or
sub
sub
jne
lret
mov
bound
sbb
in
push
sub
testl
xor
pop
inc
mov
push
ds
ljmp
dec
pop
popa
add
or
jmp
stos
push
sub
xchg
ss
and
mov
mov
daa
jg
dec
and
shrd
sub
jle
pusha
inc
xchg
repnz
ret
push
xor
js
pop
scas
add
jle
popa
jae
push
roll
sub
cmp
xchg
lcall
xchg
stc
inc
push
xchg
fwait
daa
es
sbb
shr
pop
pop
shlb
js
mov
inc
inc
idivb
repz
xor
lcall
sub
push
in
jl
inc
sub
aam
fwait
and
scas
dec
mov
loopne
cmpsb
stc
arpl
cli
imull
pop
std
adc
mov
outsb
jl
out
sub
insb
adc
and
xor
push
sbb
out
lds
scas
inc
and
xchg
cmp
addb
movsb
xchg
mov
mov
lea
lahf
je
push
inc
imul
mov
repz
xor
ja
adc
dec
mov
imul
insl
jmp
scas
xchg
cltd
jg
xchg
ss
pop
xchg
out
pop
imul
mov
outsb
rolb
mov
jae
addr16
push
repnz
inc
cmpsb
mov
dec
insl
stos
inc
cmp
dec
js
add
out
adc
cmp
lea
lahf
popf
or
lcall
into
arpl
test
cmp
fadd
popa
loopne
adc
mov
hlt
scas
pop
scas
fcoms
add
jle
mov
sbb
mov
mov
int
adc
in
idivl
imul
jno
mov
sbb
icebp
cmp
aad
popa
push
push
or
cmp
in
testb
xchg
fcomp
aam
dec
shrb
mov
addb
cli
cmp
pop
jno
je
sub
pushf
push
in
mov
fwait
push
push
mov
fwait
xchg
sbb
int
mov
adc
sbb
insb
push
sub
lods
int
dec
outsb
push
subb
cmpsl
popf
sub
xor
cmpsl
in
pop
cltd
or
jp
xchg
sub
unpcklps
or
sahf
ja
push
cmpsb
sub
fldenv
pop
mov
cli
push
pop
aad
movsl
pop
adc
and
xor
ja
adc
push
sbb
adc
or
push
repz
sub
mov
in
iret
or
mov
pinsrw
cli
adc
icebp
pop
mov
imul
jne
add
mov
and
xchg
in
jb
sti
shl
out
fnsave
or
fnstsw
cld
or
mov
adc
sahf
popf
add
sub
push
jp
insb
xchg
dec
subb
adc
shl
xor
or
pop
jg
mov
and
repz
mov
test
and
or
inc
lods
cmp
jl
clts
and
es
sub
xchg
or
lds
inc
mov
xchg
cmpsl
inc
shl
fidivs
leave
sahf
test
mov
roll
push
cmp
xor
dec
inc
mov
xchg
sub
pop
inc
ss
mov
inc
clc
jmp
int
fsubrl
das
adc
adc
add
sub
sub
orl
push
sub
cmc
dec
aam
lret
leave
xor
mov
push
push
leave
push
stos
xchg
pop
dec
xchg
cltd
andl
adc
xchg
scas
add
jne
dec
aad
cmp
xor
icebp
xlat
shlb
cli
mov
fucomp
es
ret
scas
pushf
mov
enter
xchg
mov
pop
cs
pushl
cltd
test
mov
aaa
fdivl
fs
push
push
pop
fdivs
lock
mov
orl
stc
jl
jl
jge
add
icebp
clc
dec
push
xchg
push
ja
stos
dec
addr16
shll
mov
push
mov
add
sbb
outsl
mov
adc
and
push
jmp
cld
sbb
add
lock
imul
insl
cwtl
mov
adc
or
and
insb
pusha
mov
shrb
andl
cli
jge
dec
cwtl
sarl
incl
fneni(8087
cmp
subb
dec
inc
stos
mov
lahf
cs
pushf
inc
dec
xor
nop
xchg
mov
pop
enter
add
fisubl
idiv
daa
subl
push
mov
inc
mov
jno
fld
mov
push
sbb
or
ret
dec
icebp
sahf
loopne
mov
stos
hlt
mov
les
or
mov
cmp
dec
movsb
test
dec
pop
mov
pop
sarb
das
cmp
dec
mov
mov
dec
rcl
jnp
cli
fisubs
push
push
add
in
les
inc
xchg
sbb
pop
mov
loop
insl
mov
mov
lods
rcl
cmp
mov
xbegin
jl
in
in
pop
mov
pop
sbb
loope
lret
add
push
xor
xchg
add
scas
xor
pop
lret
out
jge
xor
push
cs
fcmovb
cmp
idivl
jge
and
stos
adcl
cwtl
jmp
jne
lcall
pop
aaa
mov
jl
push
repnz
insl
mov
aaa
xor
pushf
out
pop
jecxz
sub
and
in
fisubl
lcall
mov
or
mov
cltd
jg
mov
jge
mov
ljmp
fwait
orl
xchg
xchg
lods
xor
gs
sbb
jmp
sbb
sub
lahf
lea
pop
test
es
cmpsb
jnp
cmp
ds
or
int
mov
pop
cmp
sbb
roll
rcl
adc
hlt
sbb
hlt
jp
sbb
mov
dec
in
stos
jecxz
negb
and
mov
push
pop
cs
jl
cmp
push
int3
outsl
push
hlt
aaa
xor
jge
add
aam
shrl
sbb
mov
adc
pop
leave
jnp
clc
loop
add
pop
xchg
and
jne
test
mov
rclb
dec
adc
jmp
cmc
cmpsl
leave
out
pop
das
dec
push
xchg
jo
clc
jns
mov
nop
mov
scas
jmp
popf
cmp
cmpsb
out
out
decb
pushf
jp
cmpsb
mov
int
fnstcw
and
sub
imul
cmpsb
add
mov
dec
push
sub
push
lods
arpl
loope
mov
mov
subl
xchg
xchg
ljmp
xchg
mov
jb
mov
fsubrl
or
mov
imul
or
mov
nopl
repz
out
test
gs
pop
shrb
ret
enter
add
dec
ret
add
jne
inc
sbb
sti
ljmp
add
loopne
mov
dec
fisubl
mov
jb
sbbb
in
jle
aaa
adc
lock
ret
je
in
std
push
bound
xor
sub
rorl
shl
jmp
sar
jno
sbb
fs
lods
imul
xabort
sahf
dec
andb
pop
lret
lcall
mov
ret
mov
xchg
push
jnp
mov
pop
stos
loop
popf
cwtl
fcoml
roll
push
or
push
ja
dec
subb
and
and
fiadds
jle
pushf
test
scas
xlat
in
push
sbb
mov
loopne
jl
je
test
sub
or
add
fisttpl
and
into
repz
in
push
jo
imul
jb
jae
mov
cmc
test
pusha
rclb
adc
mov
and
aas
xor
xchg
inc
jae
add
fwait
andl
xor
in
pop
out
in
cmp
or
add
movsl
repnz
out
pop
push
xlat
adc
push
in
push
sahf
mov
test
pop
dec
mov
mov
out
call
lds
ficompl
call
jae
lret
mov
jns
pop
lock
cmc
int3
xchg
xchg
pop
arpl
fisttpl
xchg
mov
mov
xorb
fisubs
bswap
cmp
test
repnz
mov
call
jnp
sbb
repz
call
ljmp
inc
out
sub
push
aaa
insb
sarl
pop
sub
inc
dec
push
jle
repz
clc
mov
lret
pop
xchg
sbb
nop
mov
adc
dec
orl
mov
stos
push
jns
mov
into
jae
lcall
xchg
xchg
mov
adc
gs
lret
nop
inc
push
xchg
push
mov
pop
xor
mov
pushf
call
orw
mov
add
mov
aad
js
fbld
jne
mov
in
rcll
mov
filds
dec
fldcw
sub
cli
arpl
push
push
or
inc
jns
out
int
pop
shll
xor
stos
or
mov
sub
lret
sarl
test
mov
push
scas
cs
movsb
adc
stos
sbb
int
sbb
sub
add
insl
pop
daa
and
adc
je
lahf
insl
and
inc
add
pop
inc
pop
std
xor
fcmovnu
imulb
repz
movl
cmp
cmpsb
xchg
mov
sub
loope
mov
shr
inc
in
jge
pop
push
fiadds
jecxz
adc
mov
jo
shrb
pop
rclb
sub
outsl
mov
mov
icebp
inc
add
jno
sbb
loopne
xlat
xor
jbe
mov
movsl
add
cli
add
fiadds
cmp
test
sbb
dec
xchg
sub
mov
mov
jecxz
out
sbb
aam
fwait
repz
sub
xchg
mov
jne
addr16
in
inc
cmp
leave
and
mov
mov
mov
sub
push
es
cmpsb
add
sbb
push
imull
dec
jns
in
mov
mov
test
stos
cmp
sahf
push
pop
inc
pop
loopne
push
pop
pop
ds
and
xlat
les
adc
cld
cld
in
ficompl
insb
mov
sbb
pop
or
push
mov
mov
out
scas
sub
mov
dec
push
mov
mov
pop
ret
inc
or
mov
sub
mov
inc
mov
or
mov
mov
pop
sbb
fmulp
movsb
enter
and
mov
sub
and
xor
mov
xor
jnp
rclb
leave
fldenv
leave
or
and
pushl
lock
movsl
sub
jae
sti
dec
sbb
sbb
xchg
xchg
js
mov
imul
test
call
scas
movsb
shll
mov
clc
dec
sub
mov
jnp
jae,pt
push
xchg
test
inc
cmpsb
ja
lods
push
fidivrs
clc
repnz
mov
arpl
sahf
mov
mov
push
cmpsl
aad
xchg
cmpb
es
fisubl
mov
lret
inc
add
dec
xchg
data16
mov
je
pop
mov
xchg
xchg
or
scas
fldl
mov
jge
adc
arpl
mov
sub
int
sbb
mov
cmpsb
lret
pop
es
push
push
rcll
jl
and
call
sbb
jb
pop
in
call
or
pop
popa
adc
mov
pop
jns
shr
cmp
push
cli
leave
cmpsb
push
stc
mov
das
add
pop
divl
sbb
clc
lret
pop
xor
shll
insb
jno
mov
sub
mov
xorb
test
stos
mov
gs
in
jnp
cmp
sub
sbb
or
mov
pop
adc
cmc
pop
and
fcomi
mov
das
mov
and
pop
fsubl
int3
sbb
lock
clc
sub
xor
adc
add
inc
and
out
and
add
lods
push
inc
lcall
push
rcr
jmp
push
mov
cmc
sub
sbb
cmp
inc
int3
nop
xor
aad
js
mov
mov
repnz
and
push
lret
push
scas
dec
inc
clc
jnp
nop
int3
sub
mov
cli
adc
mov
jge
test
add
mov
xor
stc
shl
inc
sar
mov
in
push
je
push
shrb
repnz
test
jge
call
cmpsb
add
push
lea
cltd
movsl
jge
loopne
add
ljmp
mov
dec
and
int
xlat
fwait
cld
jo
test
addr16
add
cmp
fwait
cmc
mov
inc
cwtl
cmpsb
rol
jae
mov
ljmp
iret
jg
outsb
movsb
aaa
bound
stc
lret
mov
sbb
cld
dec
jo
out
dec
imul
sub
sahf
cs
xchg
xor
into
cmp
mov
fiaddl
and
and
cld
imul
or
fcoml
ljmp
sub
and
leave
test
cmp
xor
lahf
push
and
fwait
or
xlat
rcrb
arpl
repz
dec
out
jmp
fisttpl
jl
jo
repnz
add
insb
jb
sub
mov
mov
push
sbb
xor
sub
outsl
fsubrs
mov
shlb
cmc
sbb
pop
cli
mov
ret
gs
fchs
out
mov
mov
sbb
jecxz
or
mov
xchg
loopne
cmp
mov
das
inc
mov
popa
mov
popaw
adc
jno
xorl
in
xchg
cmp
xor
and
xchg
xchg
and
pop
mov
ds
mov
adc
sub
dec
inc
ljmp
adc
je
sbb
push
mov
push
sbb
shr
jns
pushf
ja
enter
push
dec
lods
aaa
mov
mov
je
fcoms
sbb
fbld
fnstcw
loope
jae
sbb
jp
cmp
jp
pop
cmpsb
test
insb
fwait
inc
add
adc
ficomps
movsb
mov
push
xlat
das
adc
mov
movsb
loopne
out
xchg
sbbb
aaa
clc
cld
scas
int3
cmc
add
mov
out
loope
pop
int3
push
test
nop
js
cltd
add
mov
cmp
xor
sahf
lods
xchg
mov
in
or
call
jns
add
scas
leave
adc
xchg
movsb
xor
sbb
imull
iret
int
pop
rcrb
lcall
insl
mov
sub
jno
inc
or
test
lods
mov
lock
jl
pop
sub
pop
aam
movb
pop
lahf
repnz
inc
fmuls
sbb
in
add
rclb
es
and
insl
add
xor
push
mov
cli
int3
xchg
jle
mov
cmp
inc
daa
mov
int
xchg
sbb
je
adc
stos
dec
or
mov
scas
xchg
addb
add
jne
mov
hlt
push
cs
push
sub
mov
pop
xor
push
push
push
addr16
push
cmpsl
stc
push
xor
clc
cmc
stos
push
jne
dec
push
jnp
push
jp
xchg
and
jb
jb
mov
mov
lods
jns
dec
or
cmp
dec
xchg
fstps
dec
lock
gs
cmpsb
fisubs
test
or
test
jl
jmp
or
sub
ljmp
lahf
sbb
cli
lcall
or
xlat
mov
outsl
jecxz
jbe
add
jo
xor
adc
out
loopne
sbb
jbe
loope
icebp
add
daa
sbb
pop
fcompl
out
inc
andl
idivl
sbb
jge
fsub
xor
mov
xor
cwtl
rolb
push
mov
adc
cltd
push
aam
enter
enter
dec
xchg
jne
iret
out
push
and
push
adc
pusha
and
xchg
lret
fsubl
and
shrl
out
lock
xchg
adc
push
dec
pop
dec
mov
and
lret
sahf
loope
clc
adc
adc
jns
lret
test
dec
cmp
or
stos
inc
icebp
js
loopne
fldt
shll
mov
sub
dec
mull
std
outsl
pop
mov
fwait
or
mov
fnsave
push
push
sbb
mov
sub
xchg
pop
pop
rolb
ret
mov
dec
insl
jle
pop
xchg
loope
push
cld
mov
jbe
lret
sub
mov
std
stos
push
push
jns
aas
pushf
jmp
daa
xor
lods
cmp
or
dec
insl
ja
addr16
int3
popa
xchg
dec
jae
jne
mov
test
fists
rcll
adc
add
pushf
mov
aaa
pushf
add
movsl
sbb
sti
sbb
or
fiaddl
cmp
mov
xchg
gs
pop
ja
cmp
dec
push
sbb
mov
sub
fs
jl
and
mov
data16
mov
pop
inc
loopne
xchg
mov
add
or
sbb
dec
fcomps
mov
lret
clc
push
lret
mov
mov
and
inc
mov
addr16
pop
mov
fimull
pop
xor
pop
fstpl
dec
in
iret
neg
jnp
ror
adc
pop
sub
or
mov
nop
cmp
in
imul
mov
xchg
adc
call
adc
mov
imul
jbe
cmp
stos
sub
xor
es
xlat
or
scas
xchg
dec
adc
and
rcll
sbb
or
pusha
mov
cmpb
lock
cmp
pop
jo
ficoml
in
repnz
clc
nop
adc
mov
loope
or
cwtl
jnp
inc
xchg
cmp
cmp
dec
sarl
pop
lahf
and
repnz
pop
aad
or
dec
inc
jmp
ss
js
inc
dec
add
fsubs
stos
test
and
push
into
lods
bound
sub
in
pop
inc
mov
push
jl
testb
or
cmp
jns
out
ljmp
addl
or
sbb
sbb
xlat
cmpsb
movsl
call
xchg
fwait
and
mov
xor
jp
test
lcall
pop
sbb
into
mov
mov
ds
mov
sbb
xchg
lret
mov
lret
fcompl
and
xlat
mov
push
lods
subb
cmpsl
aad
sbb
mov
aad
pop
xchg
mov
js
sub
sbb
xor
mov
mov
jmp
movsb
push
scas
fnstcw
pop
jno
sbb
pusha
push
add
insb
mov
adc
shrb
in
adc
inc
adc
push
dec
in
push
aas
lds
xlat
jo
lds
sub
and
lods
mov
lock
cmp
testb
dec
outsb
jo
and
dec
mov
add
xchg
and
sbb
cmpsl
dec
sahf
and
xor
sub
xorb
adc
es
dec
and
mov
into
movsb
hlt
jmp
push
ss
push
frndint
sub
fsubl
cmpsl
inc
xorb
fs
or
xchg
xchg
sbb
lret
sbb
in
pusha
sub
xor
mov
adc
push
push
test
and
add
loopne
fisubrl
sbb
cmp
lds
stos
add
js
xor
adc
mov
push
cmp
and
aas
push
ja
cltd
lods
shlb
test
jns
pop
cmp
out
fidivrs
sub
rcll
xor
lret
jb
adc
stc
adc
jmp
add
imul
xchg
enter
sbb
mov
xchg
loop
shlb
cld
mov
movsb
cld
ss
xor
mov
pushf
test
push
arpl
inc
icebp
ficoms
in
pushf
push
testb
stc
shlb
pop
xchg
jp
and
movsb
sbb
jne
push
push
call
ret
add
mov
movsb
out
xchg
cltd
push
lret
les
sub
outsb
out
js
or
inc
repz
mov
shlb
push
and
adc
ret
ficompl
in
bound
fucomip
mov
mov
mull
test
jmp
mov
adc
test
je
inc
lock
fstps
pop
fnstcw
mov
mov
negb
and
pop
sub
pop
cmp
arpl
call
add
std
or
out
js
movsl
mov
mov
daa
stos
or
push
mov
ret
dec
lret
xor
jb
xor
lock
fsub
mov
pop
mov
adc
and
dec
mov
and
les
xchg
xor
xchg
jb
stc
addr16
ss
cmp
dec
imul
or
scas
jmp
lock
stc
fistpll
repnz
cmpsb
mov
fimull
xchg
xor
call
xchg
mov
inc
cmpsl
cmp
push
cmpsl
push
inc
mov
jge
shrb
jbe
inc
faddl
mov
xchg
push
sbb
fmulp
rol
jl
in
out
in
aad
aaa
jl
push
mov
push
jo
mov
jbe
sti
and
aad
mov
movsb
mov
into
test
outsb
addr16
pop
inc
pop
lds
jl
sub
adc
mov
andb
mov
out
aam
jb
pushf
cmp
mov
sbb
enter
pop
xor
cwtl
lret
outsb
js
inc
nop
xor
stc
in
adc
stos
or
clc
movsb
mov
jp
rcrl
enter
lea
dec
push
jl
inc
fisubrl
pop
pop
dec
xor
xor
cmp
xchg
ret
rolb
add
push
push
sbb
aad
imul
push
sti
xlat
sbb
fimull
sub
cmp
stc
aaa
xchg
xchg
push
cmpb
adc
in
stc
stc
and
xor
rcll
jnp
and
add
inc
jne
jns
sub
mov
lahf
fs
inc
subb
adc
xor
pop
popa
push
and
mov
lcall
out
xchg
xchg
pop
ja
std
repnz
jp
push
das
mov
daa
out
mulb
movsb
mov
sbb
scas
xchg
aam
jno
mov
pop
or
lods
adc
in
test
imul
addr16
mov
sbb
imul
add
push
push
stc
adc
pop
inc
jg
lret
jmp
repnz
lahf
push
sub
ret
dec
add
xchg
inc
stos
aam
fwait
add
xchg
fucomp
inc
idivb
loopne
mov
cmpsb
repz
in
add
jns
xchg
and
mov
or
shrb
in
fs
and
cmpsl
mov
sbb
jecxz
pop
mov
mov
sub
subb
in
aad
data16
icebp
aam
adc
mov
push
std
addr16
push
movsb
jmp
xchg
push
leave
jbe
push
outsb
inc
aas
repnz
or
cmp
shrb
int3
fs
push
add
sbb
shr
test
lret
rcrl
lahf
rol
in
jnp
insl
xor
mov
sbb
and
xchg
cmpsl
nop
lahf
popa
test
stc
ffreep
iret
and
cmpsb
addr16
popf
in
sbb
sbb
sbb
add
pop
sub
sbb
push
into
mov
adc
scas
push
xchg
jb
out
aad
int
int3
data16
mov
imul
mov
jmp
dec
rcrl
popf
es
mov
sbb
rcpps
scas
cwtl
jb
sub
mov
add
fwait
out
and
out
ljmp
adc
roll
jbe
pusha
ljmp
loopne
jg
xchg
cmp
adc
test
in
addr16
test
add
loope
lods
out
cmp
test
jae
out
and
add
mov
sbb
and
sub
insb
lahf
mov
imul
pop
jae
dec
dec
jecxz
insl
pop
or
lahf
mov
test
imul
and
test
lds
lock
sub
pop
jb
mov
cmc
stc
aas
addr16
arpl
es
lcall
dec
sub
ljmp
dec
jno
pop
dec
mov
dec
repnz
xor
cmp
pop
outsl
cmp
lea
cmp
xchg
xor
mov
fldt
mov
inc
cmpsb
lahf
pop
cmp
and
loope
fnsave
cmp
push
test
lcall
test
es
ret
mov
cmc
shrb
iret
fwait
ss
cmc
jle
loop
push
jne
cmp
cmpsb
xchg
nop
cmpl
mov
loope
dec
fiaddl
jbe
jne
jge
stos
insb
fistpll
adc
std
iret
add
sbb
adc
and
arpl
test
nop
xchg
mov
out
out
push
pusha
add
and
mov
cmp
inc
lret
movsl
sbb
xor
push
mov
pop
mov
and
push
pop
std
jae
sub
and
xor
fists
mov
repnz
les
inc
loopne
into
adc
cmpsl
mov
jne
lahf
divb
add
and
test
jnp
and
lods
sbb
mov
stos
imul
push
hlt
push
jl
mov
fisubrs
std
pop
fisubl
mov
pop
test
jbe
or
mov
mov
or
dec
jg
sub
and
cwtl
in
pop
cmp
cmpsl
aad
loopne
cld
or
push
mov
adc
ljmp
test
xor
mov
push
pop
imul
sub
shrl
in
inc
repnz
pop
stos
gs
adc
sbb
orl
aas
push
push
sbb
enter
mov
push
xchg
lahf
xor
test
mov
xor
cli
sbb
enter
shl
jle
adc
sbb
jecxz
cs
orl
iret
pusha
scas
add
inc
add
push
loopew
xchg
fwait
fs
dec
jg
push
fs
pop
push
clc
dec
xchg
mov
jg
lret
aam
push
lock
sahf
fstpl
xchg
adc
mov
add
mov
loop
clc
mov
cmp
mov
into
loopne
inc
int
adc
xchg
es
fucomp
and
out
push
aaa
xor
outsb
lahf
pop
mov
ljmp
test
push
arpl
lods
jge
enter
imul
int
push
repnz
fsubrs
dec
mov
xor
push
stos
pop
jbe
xor
fs
jecxz
and
push
jmp
fstp
cs
mov
adc
push
jecxz
and
addl
cmp
and
ret
sbb
lods
and
rol
xor
adc
stos
adc
sub
test
movsb
les
dec
push
sub
sbb
mov
dec
sub
iret
cmp
sarb
mov
mov
int
cmp
jmp
mov
mov
xor
jle
pop
es
imul
pusha
ror
pop
and
and
sbb
pusha
rcrl
roll
rorb
outsb
test
xchg
jmp
xchg
sub
sub
mov
fcoms
test
test
push
xchg
push
in
fisubrs
outsb
xchg
lcall
fdivr
lods
inc
mov
sub
push
mov
out
leave
mov
xchg
cltd
pop
ds
int
inc
cmc
mov
push
jno
mov
sbb
dec
addl
jl
negb
jns
add
sbb
sub
xchg
int
test
inc
mov
pop
xor
jg
and
out
and
push
shl
dec
dec
sub
cmp
lahf
stos
mov
mov
adc
and
jnp,pn
inc
xor
cmpsl
inc
cli
loopne
repnz
popa
lea
outsb
fistl
hlt
dec
pop
cld
andb
movsl
push
cs
mov
push
data16
cs
loopne
out
int3
xchg
mov
cld
pop
push
enter
sub
sbb
mov
mov
out
sbb
jns
jle
xchg
xor
cmp
and
jnp
lcall
push
int3
dec
jmp
jg
ret
mov
sub
aam
sbb
sub
aaa
or
fisubrl
rorl
cld
dec
mov
repz
mov
add
cwtl
mulb
mov
jmp
pop
int
mov
jg
jns
sbb
pop
push
push
sub
insb
ror
lahf
movd
sarb
setg
test
aas
mov
jecxz
inc
out
add
push
repnz
mov
sbb
mov
xchg
xchg
jno
sbb
pop
aaa
jnp
imul
xchg
push
icebp
pop
lret
mov
dec
mov
xchg
mov
jo
sbbb
in
and
mov
xlat
in
jae
dec
mov
jb
aam
pop
sub
sbb
jae
nop
nop
aas
xorb
mov
iret
fdivs
popf
les
cmc
xchg
push
cld
cmpl
pop
out
inc
mov
scas
int
setno
cwtl
xor
or
jno
movsl
mov
and
ret
add
cwtl
dec
pop
inc
test
pop
xor
sbb
into
adc
loope
rorl
cwtl
sahf
fsubrs
cvtps2pi
jns
cmp
mov
sahf
pop
or
lds
mov
inc
iret
mov
movsb
cmp
pushf
jp
pop
popa
fsubrp
mov
xor
sbb
sbb
push
out
call
out
enter
lea
daa
int3
bound
scas
ja
imul
lds
inc
push
jnp
icebp
enter
mov
xchg
ret
cmp
daa
mov
rol
outsl
rcr
ret
mov
lock
loopne
sub
mov
pushf
ss
sub
out
dec
xlat
testl
push
scas
ret
inc
xlat
dec
sbb
inc
lods
outsb
pusha
daa
xchg
jecxz
mulb
test
mov
and
cmpsl
shll
cld
stos
popa
cmp
sti
pop
adc
roll
bound
add
xor
mov
cmp
cli
sbb
xchg
sti
pop
push
dec
xor
test
push
or
stos
add
cmpsb
mov
fwait
adc
mov
fidivrs
aaa
iret
push
not
ret
fsubl
icebp
mov
jmp
jno
loope
fninit
std
shll
xor
scas
movsl
push
sub
mov
add
bnd
test
loop
dec
adc
sahf
xchg
mov
imul
push
ficoms
aaa
jns
jle
rol
pop
fnsave
push
andl
mov
fnsave
xchg
add
iret
inc
or
cmp
jbe
inc
inc
test
into
mov
jle
subb
inc
loope
divb
xchg
jle
mov
stos
sarl
jmp
xorb
adc
add
test
mov
pop
sbb
jne
mov
test
mov
mov
dec
push
mov
sbb
sbbl
mov
sti
hlt
or
popa
outsl
pop
je
jo
pop
pop
loopne
aaa
or
das
ret
lods
stos
or
push
jle
sub
dec
adc
mov
popf
scas
jbe
cmpsl
pop
dec
movsl
xchg
push
dec
xorl
xchg
mov
cwtl
jmp
cli
mov
in
mov
lds
outsb
cmp
xchg
lret
add
cmp
adc
lret
lret
adc
aaa
sub
lea
repnz
mov
mov
mov
je
or
int3
sahf
push
mov
stos
mov
xchg
pop
mov
dec
mov
dec
stos
jmp
sahf
icebp
loope
js
mov
xor
pop
cltd
cmove
in
push
xchg
inc
enter
cmp
add
jae
mov
gs
push
cmp
sahf
cmpsb
push
inc
mov
sti
add
pop
into
dec
fisubrs
mov
dec
or
and
mov
out
mov
rcrb
imul
mov
hlt
and
ss
aaa
sub
insb
or
cld
loopne
sti
cmpsb
jnp
das
dec
enter
mov
push
mov
sbb
jns
jecxz
addr16
ds
mov
dec
lret
outsb
jns
sbb
addb
push
jo
cmp
insl
test
fs
stos
inc
xor
adc
inc
xor
jnp
adc
adc
les
sub
call
push
push
push
leave
add
sub
cmp
xor
in
and
pop
cld
std
lods
in
jp
mov
mov
add
xor
add
outsb
cmc
addr16
ss
mov
xchg
imulb
jge
pushf
jle
xor
inc
xor
cmpsb
xor
subb
fsts
pop
in
jno
and
fucomip
cmp
lret
mov
sub
push
xchg
hlt
lods
insb
lret
sar
jbe
cld
ret
dec
repnz
and
dec
in
push
push
ret
std
and
mov
xlat
and
or
and
aam
mov
mov
cmp
and
aad
enter
and
add
out
je
mov
test
xor
jae
or
sub
test
popl
push
xchg
mov
loope
cmc
or
sbb
inc
divl
popa
imul
fsubs
and
mov
xlat
jo
lahf
xor
adc
shl
outsl
mov
stos
in
sub
negb
jp
sub
repz
imul
ret
cmc
xor
mov
in
and
lock
push
jmp
jecxz
fwait
mov
mov
lahf
inc
push
add
mov
test
das
insb
movsb
add
addb
call
aaa
lret
add
and
rcrb
push
jp
pop
imul
mov
mov
sub
sub
repz
imul
sbb
adc
negl
test
jp
pop
xor
push
dec
jge
lret
push
hlt
aad
jp
lret
je
pushf
fildl
xchg
cmp
iret
push
ret
jmp
test
cmpsb
adc
sbb
push
ret
rorl
in
adc
arpl
stos
and
mov
cmp
outsb
add
lret
sub
imul
insl
xor
add
adc
loop
aam
insl
lods
and
imull
sbb
stc
scas
xor
push
loop
sub
mov
jne
mov
xor
add
mov
test
std
jmp
call
dec
movsb
cmpsb
cmp
hlt
xchg
imul
jecxz
lds
fwait
adc
push
vorpd
data16
rcrb
mov
and
in
sbb
data16
pop
pop
mov
test
stc
sbb
inc
cld
lea
sub
adc
aaa
cltd
in
dec
subb
sbb
fbld
int
lea
sbb
push
and
lock
mov
pop
xchg
call
mov
insb
cmp
lea
sbb
jne
cmpsb
fidivrl
sub
dec
jbe
jne
mov
enter
sahf
fdivrs
pop
lods
icebp
pop
adc
std
loopne
test
movsb
jmp
test
gs
sbb
mov
jno
adc
dec
out
push
ret
inc
or
in
push
push
rcr
push
or
adcl
jmp
jecxz
pop
inc
rclb
mov
inc
ret
test
lret
outsl
and
rorb
fadds
cmp
out
pop
fisttpl
dec
xchg
movsb
cmp
ret
cltd
mov
cli
lods
sbb
cmp
jecxz
dec
inc
arpl
call
cs
shll
sbb
insl
push
sub
dec
addb
rorl
xchg
inc
imulb
xor
inc
outsl
out
pop
bound
or
pop
je
test
mov
ds
adc
xlat
stos
cmc
sahf
leave
and
push
pop
pop
push
mov
out
mov
push
xchg
pop
cmp
cld
mov
cmc
mov
mov
xor
mov
imul
scas
call
mov
xor
mov
push
pop
dec
pop
iret
std
popa
scas
ret
dec
xor
dec
aam
cmp
insl
jae
cmp
cmp
sub
movsb
inc
mov
or
mov
ds
inc
jno
inc
mov
insl
and
jle
jo
jmp
ljmp
adc
mov
adc
sub
fdiv
mov
lahf
sarb
mov
jg
cwtl
pop
adc
out
ja
test
fdivrl
insb
and
dec
in
mov
cmp
jnp
aam
sub
add
rcrl
sbb
xchg
mov
aas
jmp
dec
repz
dec
cltd
rolb
jae
push
mov
jg
test
adc
sarb
imul
les
push
adc
aad
push
enter
lret
xchg
adc
mov
inc
xchg
add
cs
clc
push
int
cmp
mov
mov
and
rcl
cld
lret
mov
enter
es
jg
leave
jns
cmc
mov
dec
pop
jmp
fsubrl
or
das
stos
imul
dec
call
cmpsb
fs
jne
sbb
or
add
lahf
pop
loope
pop
and
or
aad
int3
arpl
sahf
cmpb
xlat
add
jae
out
iret
pop
enter
mov
mov
mov
and
sub
mov
mov
cmpsb
sbb
pop
inc
leave
inc
dec
sbb
cmc
test
into
jns
mov
out
adc
sub
insl
gs
inc
in
out
mov
xchg
xor
mov
ljmp
mov
push
sahf
sahf
imul
xchg
fdivr
nop
fmul
mov
sub
xchg
push
orb
popf
or
outsb
and
sbb
cltd
test
int3
sub
shr
mov
sub
into
xchg
inc
add
or
add
mov
lds
adc
popf
test
or
mov
inc
push
icebp
or
stos
in
insb
punpckldq
jae
xor
insl
dec
loopne
sbb
mov
jns
cmpsb
lds
and
mulb
in
dec
mov
fs
cld
mov
or
mov
jle
pop
push
mov
testb
xor
movsb
aam
movsb
and
inc
sahf
jbe
test
push
cli
lock
push
sbb
shlb
cmp
jo
fs
xor
fidivrl
fsubl
ds
cltd
sub
push
shll
sub
jbe
in
inc
scas
mov
dec
sahf
adc
mov
jg
xor
mov
mov
std
ret
fdivs
fisubs
call
xchg
loopne
loopne
div
sub
outsl
sub
pop
cmp
mov
lds
std
shll
adc
dec
jno
cmpsl
pusha
mov
imul
push
mov
enter
shl
cmp
cmp
adc
xor
sub
lds
sbbb
enter
pusha
cmp
ja
mov
jns
leave
jmp
ljmp
outsb
cmp
jle
mov
adc
jg
xor
inc
pop
push
cld
pushf
adc
scas
mov
sub
xchg
xor
inc
andl
addr16
in
lcall
aam
mov
adc
mov
ret
addr16
pop
jmp
popa
cltd
dec
fstl
jle
insl
mov
pusha
xchg
jbe
jae
mov
xchg
cmp
rorb
fistps
std
cmp
in
imul
push
ret
push
rcrl
addr16
pop
push
push
xor
ret
lret
mov
and
sbb
int
jmp
inc
into
int
jne
inc
pop
jo
out
xchg
mov
mov
mov
or
lahf
and
sub
inc
iret
jge
nop
fwait
out
and
dec
insb
shll
jmp
cmp
roll
mov
sbb
aas
push
flds
jl
divl
push
repnz
das
stos
or
cmpsl
mov
cmpsl
cmpsl
fiadds
outsb
xchg
sti
test
lock
mov
or
mov
mov
or
scas
outsb
pop
add
test
pop
push
add
sub
lods
jl
mov
fwait
pop
clc
mov
pop
ljmp
mov
pop
pop
jg
fs
xor
inc
lahf
pop
sti
jo
arpl
cld
loop
bound
mov
push
mov
jns
xor
pop
mov
out
ss
and
push
jecxz
shll
or
cmc
pop
xchg
mov
pop
mov
movb
hlt
ss
mov
cmp
nop
xchg
xor
mov
pop
jne
xchg
sbb
pop
daa
and
cmpsl
mov
mov
add
jnp
nop
mov
push
pop
cli
aad
imul
popa
fwait
adc
in
mov
test
jae
loope
out
pop
and
push
fisubs
mov
shlb
xor
mov
push
lods
jp
test
and
add
fwait
nop
das
je
lods
sbb
pop
mov
repz
loopne
out
in
scas
stc
xchg
iret
cmp
jo
sbb
dec
push
inc
shlb
xchg
scas
fs
aam
insb
cwtl
cmp
icebp
cmpsl
stc
loop
je
jmp
sub
dec
out
test
push
xchg
push
mov
pop
lock
push
dec
dec
stc
pop
cmp
push
jmp
xchg
pop
cmc
js
xor
add
loope
xchg
dec
stos
lcall
mov
pop
fadd
and
sti
gs
mov
or
cmc
add
push
mov
mov
aas
xchg
fcompl
test
dec
sbb
out
scas
mov
je
js
or
test
fisttps
out
stc
ja
stos
jl
add
or
jae
xchg
mov
xchg
cmp
stc
mov
out
mov
rorb
push
dec
in
pop
xlat
orb
jmp
imulb
adc
xor
testb
iretw
lret
cs
jle
sbb
aas
pop
divb
add
fcmovnbe
pop
xchg
dec
int3
aas
mov
dec
loope
xchg
mov
cmc
in
lods
sbb
sub
arpl
jp
outsb
outsl
insb
cmp
dec
mov
mov
push
iret
fdivr
xchg
jmp
jmp
push
sti
xlat
call
push
adc
xchg
xor
sbb
push
sub
adc
jb,pt
and
ss
aaa
in
push
or
mov
pop
stc
fcoml
aas
cmp
cwtl
xchg
outsl
lret
and
pop
inc
pop
pushf
ret
mov
stos
gs
mov
js
lea
sbb
popf
fs
mov
clc
cld
fucomip
push
jp
adc
inc
pop
pop
mov
imul
cmpsb
pusha
adc
testl
sahf
insl
sub
mov
test
add
sub
inc
jecxz
sub
xlat
test
out
dec
cltd
pop
dec
xorb
and
icebp
or
mov
or
rorb
mov
xor
lods
movsl
shll
xchg
sub
and
adc
pusha
lret
insb
jle
lds
jle
xor
and
mov
ffree
shrl
xor
xchg
in
push
inc
push
mov
mov
add
shl
leave
pop
testl
fldt
sarb
pop
ficoml
adc
test
popa
jnp
int3
pop
and
jne
jp
je
adc
add
add
dec
fidivs
aad
fcmove
xor
repnz
hlt
xchg
add
test
cmp
sbb
mov
and
imul
jns
pop
sbb
in
shll
div
dec
out
scas
mov
negl
mov
scas
dec
ret
jae
test
mov
xchg
fucomi
sbb
stos
fistpl
adc
aas
sbb
mov
dec
pop
ret
lret
pop
mov
sbb
stc
pop
outsl
jne
push
cmp
or
iret
dec
lret
jns
in
sbb
mov
ret
inc
fldcw
dec
outsb
cmp
xor
mov
sbb
cmp
es
push
stos
mov
sub
pop
stos
sbb
bound
lret
jle
dec
push
or
adc
pop
test
jbe
inc
jp
loop
loop
sub
mov
mov
push
dec
loop
imul
mov
mov
xchg
jmp
fstps
cwtl
cmp
fisubrl
inc
aas
shlb
pop
mov
and
jne
imul
mov
mov
shll
insl
add
mov
jmp
int3
push
sub
inc
arpl
fmull
cli
lea
mov
fst
jbe
xor
cli
and
lret
ffree
pop
repnz
xchg
test
ret
cld
mov
sbb
add
mov
testl
xor
xchg
test
repnz
xchg
adc
adc
cmp
daa
out
cmp
sub
test
divb
xchg
pop
mov
push
inc
jb
cmc
icebp
je
fucom
pop
out
pop
jno
adc
mov
xor
movsb
js
aad
mov
lock
or
aad
jo
mov
dec
mov
and
mov
mov
mov
adc
int
test
in
out
adc
dec
ficoms
jge
pop
cli
lret
push
dec
pop
adc
mov
pusha
mov
jne
sbb
ss
cwtl
inc
insb
pop
fcoms
loope
pop
xchg
sti
and
inc
cs
jle
push
incb
and
pop
push
sub
mov
pavgw
in
push
push
shrb
push
lahf
jge
or
jns
or
rorb
pop
nop
mov
xchg
fiadds
data16
jmp
mov
addr16
repz
arpl
cwtl
gs
cltd
jns
xor
xchg
sbb
addr16
dec
imul
or
repz
or
gs
call
jne
jb
data16
jnp
inc
sbb
mov
xchg
sub
jb
pop
inc
sbb
mov
xchg
pop
sbb
add
push
fucomi
fcomps
jnp
jge
shll
mov
inc
xchg
jle
aaa
int3
mov
dec
adc
cmc
out
pop
ret
mov
aaa
jecxz
sub
ss
shll
dec
or
add
add
xchg
dec
js
xor
cwtl
fnstsw
lahf
inc
aas
popa
jb
arpl
sub
inc
add
pop
ja
imul
inc
stc
push
cmp
jl
xor
movsl
xchg
add
repz
lcall
or
sti
xchg
ss
mov
sub
icebp
popa
pop
sahf
dec
mov
sahf
call
sub
adc
addr16
stos
pop
jbe
nop
pop
jp
dec
orl
dec
insl
jae
push
xor
andb
pusha
sbb
sbb
scas
add
xchg
fcomps
dec
jno
int3
jb
repz
jbe
add
out
sub
mov
jmp
jno
cmc
cs
jmp
dec
jecxz,pt
lret
mov
jl
divb
cmp
loope
testb
call
add
lahf
and
fs
nopl
dec
jne
pop
xchg
clc
mov
jmp
xor
jo
sub
xor
mov
test
lds
jl
sub
add
into
inc
sti
pusha
adc
flds
add
cmp
test
cmpsl
push
mov
sti
and
repz
lcall
mov
bound
push
mov
outsl
clc
push
cli
dec
loop
cli
pop
add
ljmp
aam
into
mov
cmp
and
sbb
dec
xchg
dec
xor
out
aam
lahf
xor
inc
cmpsb
paddusb
dec
adc
in
push
mov
inc
hlt
clc
jo
clc
adc
cmp
jae
mov
dec
dec
or
out
push
ret
sub
add
das
pop
jp
daa
notl
push
iret
or
jmp
into
das
and
pop
clc
into
cmp
fcomps
adc
cli
push
xchg
rep
xchg
mov
test
vpunpckhbw
rclb
pop
pusha
xor
cmp
mov
add
fimuls
lods
out
jb,pn
cld
neg
xor
rorb
nop
mov
pop
adcl
aas
lahf
bound
adc
icebp
jae
inc
sbb
push
in
and
mov
mov
or
std
mov
mov
and
mul
repnz
sbb
es
jmp
push
int3
mov
xchg
lods
test
add
pop
addr16
add
sbb
dec
nop
lods
outsb
pushf
jno
adc
push
mov
mov
sbb
andb
sub
repz
mov
sub
outsb
mov
mov
jmp
dec
sbb
nop
jl
sti
iret
xor
cmp
pop
lock
adc
xchg
sub
or
xor
xor
bound
push
xor
jmp
mov
movsb
sub
sbb
mov
stc
in
push
xchg
inc
aad
call
loop
pop
pop
jl
push
je
ljmp
adc
mov
fsubl
pusha
insb
jno
add
scas
inc
sbb
or
mov
icebp
and
je
jmp
jmp
sahf
mov
int
loop
popf
jg
cmp
test
push
addl
push
jmp
pushf
adcl
fnsave
loop
pop
jne
dec
mov
add
push
int3
push
sbb
lods
fs
aad
jle
out
imul
jg
repz
jns
jmp
fs
sarb
imul
cmp
fwait
ljmp
filds
fs
adc
int
sbb
pop
cli
pop
mov
lock
das
and
push
sbb
cmp
mov
stos
ret
mov
jmp
jo
jmp
add
fsubl
pusha
dec
mov
faddp
jmp
fbld
sti
cmp
into
outsb
sbb
outsl
lahf
inc
xor
fcmovu
bound
lods
outsb
popa
adc
jmp
or
mov
shll
sub
cmpsl
das
idivl
lahf
int
daa
dec
mov
das
into
push
scas
ret
cmp
jmp
shl
cs
arpl
lods
jno
xor
xor
and
js
or
pushf
jae
dec
adc
mov
mov
loop
leave
test
lcall
mov
and
pop
stos
es
je
add
fimuls
adc
cmc
jbe
or
and
xor
mov
add
mov
cwtl
dec
xor
mov
stos
lock
movsb
loop
push
fdivrl
fcoms
inc
mov
dec
leave
aas
add
cmp
jb
adc
dec
lods
leave
nop
std
inc
adc
adc
cmc
shrb
pop
lea
leave
sti
push
testb
fistl
pop
arpl
fsubrp
aaa
repnz
dec
stos
and
shrl
or
lock
outsl
aas
gs
push
xor
mov
sub
stos
pop
dec
dec
rcrl
push
pop
and
adc
xchg
ret
sbb
aas
pop
clc
mov
add
push
jbe
insb
aam
ret
cmc
rcrl
lock
mov
dec
push
enter
jb
inc
inc
mov
inc
and
icebp
jecxz
dec
and
mov
xchg
inc
inc
xchg
in
std
push
push
xor
sub
xchg
mov
jne
or
mov
push
cmp
loopne
lea
xor
mov
mov
sti
sub
mov
aad
aam
sti
fsubl
adc
add
cmp
das
sbb
dec
aaa
mov
rcrl
fsubrp
xchg
mov
repz
jle
out
xor
and
push
and
adc
sub
leave
sbb
imul
xchg
arpl
test
sti
mov
lret
adc
aaa
loope
jecxz
jmp
jl
shlb
hlt
xchg
std
fistpl
push
inc
push
lahf
mov
or
fucomi
stos
inc
out
ss
add
cwtl
pop
pop
test
jae
jecxz
cmp
mov
punpckldq
outsl
popf
pop
add
fcmovnu
add
gs
into
sub
mov
or
jne
xchg
arpl
xchg
jp
pop
sub
and
in
je
push
sbb
bound
enter
jno
push
inc
test
daa
xchg
nop
pop
mov
sbb
dec
mov
adc
mov
mov
pop
insb
or
movsb
pusha
push
gs
mov
les
test
imul
xor
adc
mov
iret
leave
jo
dec
mov
outsl
push
cs
xlat
and
icebp
pop
xor
and
pop
movsb
or
test
mov
mov
sbb
out
push
lahf
roll
push
out
outsl
out
sbb
push
add
jge
idiv
sub
mov
xchg
mov
inc
mov
mov
insb
sub
and
dec
pop
sti
pushf
scas
pop
out
or
push
adc
sub
jmp
dec
ja
subl
cmp
push
and
cli
sub
loopne
sub
cltd
mov
or
push
pop
lret
add
pop
xor
jbe
adc
xor
icebp
inc
sub
pop
xchg
test
mov
and
je
jns
rcl
ret
and
test
mov
inc
stos
xchg
jmp
out
mov
mov
pop
inc
les
sub
lods
mov
gs
push
push
adc
repz
lock
inc
fidivl
scas
fwait
xchg
pop
or
jbe
xorb
inc
shll
jnp
and
lahf
jecxz
shl
pop
fwait
stc
jmp
insl
cld
mov
jns
push
mov
sti
enter
xor
sub
jne
in
pop
and
mov
xor
lahf
cmp
fadds
sar
dec
dec
sub
fucomi
sbb
lea
xor
pop
xchg
loop
mov
cmp
fdivl
or
out
or
subl
adc
out
data16
and
mov
cwtl
mov
lods
mov
addr16
cwtl
iret
xchg
sub
sbb
cltd
cli
icebp
lahf
int
push
test
sub
addb
lds
or
pusha
pusha
cmp
or
fs
test
mov
jecxz
push
dec
arpl
aas
pop
xor
or
xchg
pop
in
mov
push
lods
mov
pop
scas
outsl
sbbl
loopne
rcr
je
sbb
aaa
mov
xchg
in
popa
xlat
inc
or
aam
mov
mov
in
data16
adc
xchg
mov
mov
subb
xor
call
mov
adc
adc
xor
enter
out
repz
popa
mov
add
or
aas
adc
jmp
fiadds
loopne
ss
mov
loop
mov
jae
out
enter
adc
sbb
inc
adc
mov
sub
pop
stc
sub
jae
test
dec
icebp
inc
jnp
popf
popf
cmpsb
in
xor
or
mov
std
and
add
or
jbe
ss
sbb
sahf
sbb
cwtl
xorl
mov
inc
and
in
jp
jmp
cmpsb
adc
outsl
sti
mov
negb
call
loop
fiaddl
shlb
lret
cwtl
mov
enter
and
in
ret
mov
mov
cld
dec
push
in
sbb
notl
rcrw
mov
and
pop
mov
sub
pop
xchg
jno
insl
sub
adc
ljmp
sahf
std
faddl
arpl
outsb
pop
add
ret
sbbb
adc
jl
mov
mov
decl
mov
add
lods
dec
push
jno
push
in
jne
cwtl
xchg
sbb
insb
jns
les
xchg
mov
xor
mov
popf
das
sbb
mov
shrl
idiv
imul
inc
fdivrl
and
ret
push
xor
lds
ret
and
ret
sub
xchg
xchg
fs
xor
std
sub
add
in
es
lods
das
adc
push
in
mov
gs
adc
stc
and
add
add
loope
insl
les
cli
mov
fadds
or
scas
addr16
mov
adc
xor
fwait
adc
stc
pop
mov
fidivl
mov
clc
adc
fimull
mov
cmp
mov
int
imul
push
cmp
call
hlt
dec
jmp
cmp
in
mov
test
lea
aas
enter
pop
pop
js
push
cmp
pop
jno
sbb
stc
inc
incb
inc
xor
adc
ds
pop
push
scas
pop
cmp
pop
shlb
push
aad
sbb
cli
dec
jne
lea
xchg
inc
imul
les
inc
mov
js
push
cmc
scas
hlt
stos
loope
xchg
jge
out
dec
arpl
scas
mov
je
inc
imul
mov
repz
icebp
push
push
int3
ret
jl
in
adcb
and
jb
pushf
fs
and
imul
cmpsb
adc
push
mov
mull
cmp
pushl
cmp
frstor
iret
out
scas
repz
jmp
icebp
popa
lret
mov
push
cmpsb
mov
jae
cli
cmc
enter
out
or
daa
addb
pop
inc
dec
pop
jns
sub
mov
sti
dec
lret
enter
xor
fcomp
or
jnp
xchg
adc
jb
loop
mov
sub
incl
call
repz
adc
mov
fiadds
mov
rcl
inc
das
fcomip
and
rolb
stos
test
outsb
addr16
icebp
adc
pop
add
add
cmp
jecxz
jg
cs
rcrl
scas
xchg
stos
and
jmp
push
popl
fwait
jae
adc
fmull
mov
ds
roll
jae
xchg
or
into
shll
inc
not
pop
mov
in
push
repnz
jb
or
lods
xchg
push
sti
mov
scas
mov
cwtl
pop
fcoml
jge
ret
mov
insb
fstps
jge
dec
xor
pop
jle
add
mov
jmp
lea
lds
sbb
inc
shl
sub
enter
scas
pop
idivb
pop
mov
push
xlat
mov
js
xchg
repz
push
dec
mov
add
je
cmp
insb
test
out
dec
jl
sub
mov
xlat
jns
mov
xchg
dec
mov
xchg
int
addl
arpl
int
inc
sub
dec
stc
insl
repnz
cmp
mov
and
adc
mov
mov
push
out
cmpsl
stc
sub
xor
cmp
xchg
sbbl
cmp
mov
clc
push
push
notb
out
addl
nop
test
cs
outsb
sbbb
xor
stos
dec
mov
sbb
gs
mov
out
and
out
call
pop
mov
add
shrl
inc
movsb
in
push
imul
push
sbb
sub
int3
outsb
mov
cmp
push
push
cmp
cmp
mov
xchg
daa
jnp
cmpsb
repnz
push
jns
fdivrs
cmp
cli
push
cwtl
loopne
pushf
ds
movd
sbb
out
loop
outsl
jbe
xor
lret
and
lcall
add
rol
clc
and
dec
jno
add
mov
lret
int
xchg
mov
jle
add
mov
rolb
popf
nop
in
ret
mov
lock
xchg
add
cmp
loope
cmp
pop
ffreep
dec
fldenv
fidivrl
mov
ret
mov
adc
xchg
filds
mov
jmp
xchg
push
lods
sbb
inc
push
fldt
jmp
fs
pushf
fldl
xorl
jmp
xchg
push
insb
xchg
adc
lret
notl
hlt
das
icebp
clc
mov
sub
lods
sub
push
ret
cmp
xchg
out
jge
mov
lods
mov
stc
pop
lea
push
cmp
dec
cmp
and
mov
sbb
jbe
jns
subb
sub
and
jle
and
mov
es
sarl
pusha
cld
push
shll
push
inc
cmp
hlt
das
dec
push
popf
xchg
xchg
or
test
outsb
sub
fucomip
jl
lret
outsb
xor
testl
adc
fldenv
loop
sub
mov
pop
daa
push
movsb
addr16
idivb
movsl
outsb
add
and
xchg
dec
leave
pop
and
ja
mov
inc
sub
jg
dec
jecxz
pop
xchg
cmc
jae
andl
out
rolb
xchg
inc
push
inc
sbb
mov
pop
outsl
lret
mov
mov
push
loopne
xchg
daa
mov
repz
lods
outsb
insb
jmp
data16
je
inc
imul
ret
rorl
adc
ret
xor
nop
xchg
sbb
sbb
lcall
and
xor
les
pop
jp
inc
stc
add
pop
das
push
jle
std
push
or
and
ret
cmp
mov
xchg
insb
xchg
aam
xchg
push
adc
je
movsb
push
insb
mov
cmpsb
leave
push
pop
shll
push
rcrl
movb
push
jns
sbb
rcrb
pop
leave
add
les
cs
sbb
jo
movsl
ds
addb
daa
fmuls
push
es
or
inc
cmp
mov
cmp
pop
push
mov
cwtl
mov
jmp
jbe
push
push
repz
xchg
mov
mov
xor
adcb
mov
push
push
addb
lds
mov
dec
xchg
push
ja
cmc
idiv
unpcklps
push
mov
xchg
push
call
push
sub
pop
out
mov
cmp
sub
ja
lret
leave
daa
mov
gs
cltd
test
mov
repz
and
cli
xchg
jmp
shlb
out
aad
cltd
mov
out
dec
sbb
mov
xor
popf
jne
sub
jl
shl
stos
dec
inc
jp
mov
mov
push
xor
mov
sub
mov
outsl
sub
mov
push
mov
fistl
int
sbb
daa
mov
rorl
lret
dec
mov
push
and
and
jmp
sub
jecxz
jl
push
push
push
or
rcrl
adc
test
xchg
loope
sti
sbbl
fnstenv
mov
lds
shrb
rcll
lcall
cmpl
mov
sbb
push
adc
scas
add
sbbb
leave
pop
sbb
inc
cli
popf
pop
leave
adc
in
xchg
inc
mov
popf
mov
push
add
mov
mov
sbb
movsb
or
out
push
out
repz
xchg
sbb
and
xor
in
test
cs
stos
cltd
popa
sahf
inc
push
vmovaps
ds
call
and
test
dec
out
icebp
mov
aaa
mov
mov
xor
mov
mov
ret
and
decb
xor
sarb
xchg
push
mov
mov
mov
mov
xchg
ffree
add
popf
xor
or
sub
sbb
gs
incb
cmp
push
xor
notl
data16
ds
es
xor
pop
stos
adc
aad
adc
dec
ret
inc
pop
lret
mov
add
cmpsl
push
nop
push
repz
jae
int
inc
mov
mov
shll
leave
xchg
and
xor
sub
sub
inc
lret
ret
adc
mov
mov
cmpsb
daa
in
mov
adc
mov
xchg
cmc
jle
cltd
int3
cmc
daa
dec
xchg
clc
jge
push
inc
sbb
repz
pop
aas
arpl
jbe
orl
mov
mov
sbb
mov
test
lea
lahf
push
dec
jp
jne
sbb
das
add
lcall
push
repz
xor
push
mov
stos
sti
jnp
andl
ss
cld
lea
in
fbstp
and
fisubrl
or
inc
cmp
and
push
add
imul
lods
inc
sbbl
sbb
movsl
sahf
xchg
js
inc
add
insl
out
div
outsb
shrb
test
mov
fstl
jp,pn
jae
xor
addr16
imul
and
aas
into
repz
inc
popf
mov
jae
loopne
mov
and
pop
mov
jl
mov
fldt
cmp
xlat
in
roll
iret
jno
push
mov
xorl
testl
sti
cmp
pop
and
pushf
movsb
mov
mov
adc
mov
fs
aad
jbe
add
aad
cmc
sbb
movzbl
sbb
xor
out
sbbb
dec
mov
adc
orl
dec
ljmp
mov
pop
incl
movsl
cmp
dec
fsubl
aad
push
xchg
and
stos
bound
iret
inc
add
cmp
fidivs
je
cmpsb
cli
push
push
adc
js
cli
inc
mov
jecxz
jle
std
dec
out
sbb
outsl
test
dec
inc
stos
lret
sti
movsl
lret
and
in
or
jle
fimuls
mov
pop
mov
add
in
jecxz
mov
in
mov
pop
scas
hlt
inc
aam
push
cmp
and
hlt
pop
mov
push
mov
fscale
jno
icebp
sbb
clc
lods
cwtl
mov
add
add
adc
gs
insl
pusha
orl
push
cli
stc
stos
dec
jmp
cmp
mov
insl
xor
inc
lret
daa
fadd
test
push
mov
popf
movsb
stos
shll
lret
mov
outsb
int3
push
int3
xlat
dec
jmp
mov
sbb
mov
ror
add
mov
in
ror
es
or
scas
imul
adc
in
adcb
dec
push
xchg
lahf
imul
dec
xchg
pop
cs
cld
fisubrs
out
mov
cs
or
daa
subb
add
cwtl
sub
jmp
xor
pop
jp
adc
in
mov
mov
mov
xor
push
repnz
pop
xchg
jns
pushf
out
fisttpl
sub
xchg
lock
inc
in
test
fisttpll
xlat
arpl
rolb
fildll
jl
push
and
icebp
loope
pop
hlt
in
mov
dec
sbb
fbstp
jmp
mov
aad
in
clc
and
fwait
mov
dec
pop
mov
cmc
cwtl
dec
fwait
sahf
pop
sbb
hlt
adc
adc
cmp
rorl
mov
pmaddwd
enter
jecxz
sub
xor
lods
push
mov
out
mov
test
push
sbb
inc
outsl
jbe
push
jno
adc
sbb
mov
lock
lret
sub
roll
fsts
add
or
fwait
mov
fildl
pop
xchg
shl
sbb
test
lea
mov
insb
popf
es
cltd
mov
imul
decl
mov
inc
mov
inc
inc
nop
cmpsb
pop
cmp
cs
mov
movsb
xor
lret
dec
lds
and
shlb
sbb
push
je
jb
dec
adc
inc
xor
push
scas
xchg
sub
js
push
mov
mov
jo
xor
push
rcr
push
jns
cmp
dec
sbb
jbe
xor
add
sbb
or
and
lret
mov
mov
pushf
sub
pop
mov
movsb
out
inc
ds
stos
inc
sub
xchg
cmp
mov
mov
pop
xor
cmp
dec
hlt
pop
adc
fdivl
xchg
inc
or
movsb
cmp
xchg
ret
in
xlat
inc
in
push
cmp
repz
outsb
mov
pop
mov
xchg
dec
mov
cmc
mulps
push
rolb
xchg
adc
dec
adc
in
data16
push
cmp
jge
cmp
imul
xor
adc
shr
mov
xchg
leave
push
in
xchg
inc
jno
sahf
test
out
ds
and
sti
data16
dec
ja
jo
inc
lods
xlat
adc
mov
sub
sub
jb
shrl
insb
rolb
xchg
in
jne
xchg
dec
fidivrs
insl
cmp
mov
mov
lcall
add
cmp
jmp
sbb
and
cmp
mov
xor
bound
or
fiaddl
xor
pop
pop
xor
fildll
pop
mov
dec
jge
cs
je
mov
mulb
scas
stos
enter
cltd
cwtl
andl
sbb
mov
out
mov
shll
or
pminub
mov
int3
test
push
push
loopne
repnz
test
adc
js
js
push
cmp
mov
pusha
xor
nop
insl
jns
jge
jecxz
jno
inc
fdivrs
dec
and
out
pushf
decl
inc
addr16
sbb
adc
inc
mov
call
mov
inc
es
mov
fs
imul
push
adc
test
test
lahf
fs
out
add
aam
add
mov
inc
cmpsl
push
mov
int3
or
pop
sbbl
aam
lea
jle
pop
shll
add
inc
push
xchg
adc
sahf
test
cmp
repz
pop
push
cmp
popa
mov
loopne
xchg
push
jl
mov
rclb
jo
and
sbb
cs
pop
dec
gs
idivb
pusha
lock
mov
stc
lret
xor
outsl
dec
test
push
mov
hlt
mov
cmpsl
or
rclb
lea
pusha
and
fistps
enter
jae
dec
adc
addr16
lahf
jnp
xlat
lea
repz
leave
jmp
mov
cmp
mov
pop
sub
cmp
je
ret
pop
dec
xor
and
sbb
push
mov
and
mov
loopne
push
je
sbb
cmp
scas
inc
xchg
testb
fistps
pop
inc
mov
sar
cmp
insb
lds
adc
mov
gs
or
loope
mov
fs
or
xor
cltd
sbb
dec
dec
imul
js
call
and
cmp
addr16
add
lods
pop
lahf
pop
ret
bound
mov
pop
mov
je
push
and
lcall
out
xchg
pop
inc
movups
sarb
sti
addl
dec
das
jnp
rcll
mov
add
and
jb
repnz
mov
fstps
divb
stc
loop
or
mov
pushf
fstl
push
in
stos
push
js
mov
into
xchg
test
xor
cli
or
ds
nop
shlb
inc
pushf
push
add
mov
or
mov
iret
fldenv
das
mov
dec
dec
push
je
jmp
jecxz
push
repnz
dec
push
mov
jmp
int3
xor
daa
inc
fsts
cmpsb
hlt
push
in
lcall
subb
fsubrs
pop
or
inc
int3
call
int3
loope
filds
rolb
flds
add
idiv
popf
pop
mull
cmp
or
xchg
pop
mov
mov
dec
push
xchg
shlb
push
dec
call
outsl
dec
jmp
out
push
mov
cwtl
notl
mov
lods
add
test
adc
jmp
ja
sbb
pop
xlat
imul
sbb
xchg
call
sbb
add
jno
adc
sbb
add
pop
jle
dec
test
inc
call
mov
lds
push
cs
aaa
pop
into
mov
fld
xchg
mov
and
jle
jo
lods
xchg
jae
xor
mov
pop
lods
xlat
shl
cltd
jp
daa
fsubrs
add
lahf
sbb
orb
daa
xor
xchg
jp
fidivrl
sub
or
pop
push
sub
mov
das
sub
int
xchg
stos
push
jl
or
movsl
test
push
pop
push
lds
lahf
dec
out
jo
jle
sahf
sub
cmpl
imull
sub
outsl
aam
int
pextrw
pusha
orb
test
imul
jnp
cmp
call
mov
into
lea
cmpsb
aaa
pop
add
pop
dec
adc
pop
push
add
faddp
paddq
dec
adc
xchg
nop
pop
and
addr16
hlt
fdivp
out
test
or
and
in
adc
pop
cwtl
shrb
lock
mov
dec
arpl
loop
popf
mov
bnd
mov
in
mov
pop
idivb
daa
fwait
mov
lods
cmpsb
pop
push
decb
fisttpll
pop
insl
adc
clc
mov
shr
std
sbb
fistl
pop
mov
pop
int3
jnp
or
mov
push
pop
sub
sbb
call
xchg
fwait
sbb
sub
push
add
jno
and
dec
imul
sbb
inc
jb
aam
push
fstpl
scas
push
mov
and
stos
xchg
or
sbb
pmulhuw
cltd
dec
lret
xor
ret
mov
inc
fst
jl
movsl
mov
xor
and
dec
insb
aad
mov
add
jne
lret
ljmp
mov
test
rcl
adc
shrl
lea
rcrl
inc
or
sub
insl
xor
cmc
addr16
pop
pop
xchg
insb
mov
cmp
or
sub
loope
push
ror
inc
pop
push
dec
daa
sbb
cmp
test
add
inc
fldt
mov
jno
into
in
xor
icebp
xor
in
fnsave
sbb
fs
ds
fcmove
in
pop
pop
std
sub
dec
aaa
and
mov
fildl
sbb
aam
ret
daa
pop
push
mov
mov
outsl
into
sub
adcl
flds
dec
mov
mov
ret
xchg
push
xchg
mov
xchg
sub
addr16
lcall
lcall
test
jne
lock
mov
inc
inc
cmp
or
add
push
and
jmp
jecxz
cmc
andb
js
push
jl
test
gs
rclb
stc
lods
adc
gs
jnp
movsb
and
add
outsb
gs
loop
cmpb
cmp
out
shr
add
repz
jg
inc
cltd
sub
jg
int
insb
daa
mov
mov
jno
mov
jl
adc
xor
ret
ficoml
cmp
xchg
xchg
sbb
lret
pop
rcrl
mov
inc
es
dec
adc
jbe
push
dec
adcb
jnp
lds
das
test
cmp
pushf
ror
pop
cmc
out
mov
mov
pop
or
or
iret
int
inc
ret
cmp
mov
es
lret
jae
dec
flds
adc
cmpsb
push
pop
jle
fs
cltd
xchg
mov
jbe
inc
jge
or
inc
add
xor
flds
movsl
std
data16
inc
orb
dec
sub
cmpsl
nop
adc
add
cld
stos
push
push
xchg
fs
stos
push
xor
insb
jmp
test
aas
iret
pop
fidivl
scas
and
push
mov
mov
pop
xor
mov
lret
sbb
cmp
and
cli
pop
sub
mov
xchg
ret
repz
push
arpl
test
mov
notl
mov
xor
repz
jb
jg
xchg
xor
push
cmpsl
ret
cs
mov
jl
cmp
scas
ja
fcomps
into
xchg
and
dec
shl
mov
pop
fmull
in
mov
sbb
adc
xor
sbb
das
outsl
test
and
push
mov
mov
sti
jp
pop
and
cmp
jge
or
ljmp
out
dec
and
lahf
out
insb
clc
mov
xchg
data16
iret
roll
mov
jecxz
jl
xchg
dec
and
je
lcall
popf
jmp
lret
cmpb
lret
test
cmp
cmp
popa
out
xlat
inc
sbb
shlb
testb
and
in
push
aam
push
es
gs
pop
xor
or
clc
hlt
sbbb
pop
add
subb
lods
in
mov
xchg
sub
inc
cmp
xchg
negl
clc
push
dec
push
movsl
sbb
dec
mov
int3
test
lods
lods
or
rol
das
adc
xchg
leave
and
sub
lret
inc
inc
pop
pop
jbe
icebp
jo
pop
lock
pop
pop
repnz
fimuls
popa
cmp
cmp
inc
push
and
cltd
fs
pop
pop
popf
insb
xor
in
iret
pop
sub
sbb
push
test
sbb
loop
sub
hlt
ja
pop
dec
cwtl
notb
mov
add
push
mov
fs
stos
cwtl
icebp
dec
mov
cli
pop
fwait
mov
int
and
adc
xor
into
and
popa
addr16
jnp
aad
outsb
les
sbb
fildl
xchg
popf
jnp
cmp
add
add
in
jns
mov
jp
int3
lret
shl
int
mov
je
imul
addb
cmc
mov
pop
sti
repnz
jecxz
inc
dec
dec
xchg
sbb
divb
dec
mov
movsl
mov
push
ret
or
je
sub
xchg
popf
imul
xchg
int
xor
fstp
jge
jp
sub
jb
lock
stc
test
fidivs
mov
fsts
sbb
or
inc
push
or
sarb
inc
rolb
add
pop
adc
xchg
cmp
pop
xchg
shrl
jp
cmp
jge
arpl
inc
fdivrs
add
stos
inc
and
aad
pop
pop
mov
pop
adc
sub
pushl
or
cld
call
cmpsl
out
inc
jecxz
addr16
jbe
stos
fcoml
dec
add
ljmp
ffreep
xor
mov
dec
fs
mov
mov
jno
ss
popl
insl
mov
cs
mov
mov
mov
jb
xchg
cli
inc
jne
pop
push
sbb
sub
xor
test
push
fldcw
mov
loopne
adc
stos
test
ja
xchg
leave
rcrb
out
ret
push
or
inc
int3
outsl
inc
adc
and
jns
xchg
xchg
adc
arpl
or
pop
mov
pop
dec
push
mov
cld
das
repz
xor
and
ljmp
lret
mov
shll
sbb
mov
idivb
inc
int
lahf
lds
les
repnz
pop
xor
loope
das
jne
push
mov
push
stos
lret
mov
cmpb
inc
bound
inc
cli
cltd
mov
imul
mov
icebp
bound
or
arpl
dec
scas
pop
shrb
cltd
stos
or
sub
cmp
push
ffreep
jne
ss
mov
loopne
cli
inc
dec
and
mov
dec
cmpsb
mov
pop
sarl
lds
scas
leave
push
jno
jcxz
xchg
rcll
sahf
fistps
fildll
push
mov
aaa
es
mov
mov
push
aaa
or
out
cmpsl
mov
lret
add
js
je
sbb
dec
iret
stos
xor
je
sub
cmp
add
sarl
adc
push
insl
je
lahf
lock
fldt
in
arpl
cmp
pop
sub
push
popf
les
lods
and
dec
into
shlb
ja
push
sbb
cmc
stos
push
out
clc
daa
stos
int3
imul
mov
mov
mov
imull
dec
pusha
pop
push
xchg
int3
nop
adc
pushf
jecxz
sub
into
ljmp
adcb
aam
and
iret
add
jbe
inc
fcmovu
xlat
cltd
and
jmp
mov
test
pop
or
xchg
mov
les
ljmp
ds
pushf
add
xor
push
addr16
cmp
pop
icebp
jno
int
lds
lock
das
pusha
rcrl
test
jo
add
jnp
cmp
inc
imull
lea
add
je
int3
leave
cld
pop
mov
fbld
stos
es
daa
repnz
jle
lock
outsb
stos
sbbl
loope
rorb
pop
divl
cmc
inc
imul
imul
xchg
lret
add
enter
push
std
xchg
sub
cs
into
pop
pushf
jb
and
shll
jp
xor
rcrl
push
inc
scas
fmul
imull
dec
dec
push
sub
mov
fdivrs
jle
subb
xor
mov
fsubl
sub
mov
adc
pop
mov
data16
inc
fwait
pop
or
fisubl
in
fcoms
lods
scas
lock
mov
ret
inc
fcmove
mov
cmp
js
jno
sub
jl
jl
bound
ds
lret
mov
adc
mov
loopne
mov
je
mov
add
push
movsl
sbb
aas
sbb
cli
jl
test
ss
add
lcall
subl
sub
dec
and
ret
jne
pop
incb
cmp
data16
and
mov
sbb
popa
in
adc
loope
mov
jl
pop
or
out
and
and
dec
sub
mov
jecxz
addr16
xor
add
aad
ljmp
mov
add
jp
rcrb
lods
movsb
rcrl
insb
enter
stos
or
ret
dec
aad
push
mov
testb
add
mov
sbb
rclb
jecxz
mov
sarl
jle
cmovno
ficompl
xchg
mov
or
inc
js
scas
sub
dec
inc
sbb
sub
aas
rorl
mov
rcll
mov
fs
sarl
iret
js
xchg
push
frstor
jp
out
arpl
sub
and
lea
ss
ss
sbb
sub
jne
mov
cs
cmp
repz
cli
out
arpl
inc
enter
and
movsl
aad
shl
push
mov
push
mov
mov
lahf
cld
sub
jl
fs
in
stc
fistps
rcrl
sbb
mov
fisttpl
in
daa
sbbb
push
jmp
inc
inc
dec
pop
dec
mov
mov
fwait
idivb
mov
test
rol
fucom
inc
hlt
cmpsb
add
push
jmp
and
movsb
adc
sbb
adc
stos
test
in
and
push
dec
outsl
mov
clc
mov
push
fcoml
push
mov
xlat
push
add
out
mov
sbb
pusha
insb
scas
inc
jns
fwait
adc
jl
lock
mov
fldl
or
lahf
stc
push
test
sbb
jle
lock
test
jmp
mov
in
adc
enter
aas
aas
flds
mov
mov
es
cmp
pop
xor
cmp
mov
in
or
das
out
adc
jne
stc
pop
pusha
jge
pop
out
jmp
dec
test
sbb
repnz
loop
sar
push
repz
sbb
iret
sbb
repz
mov
mov
add
and
cmpsl
imul
or
mov
mov
jno
mov
cmp
mov
test
ja
inc
jo
or
xor
hlt
jl
adc
add
nop
insl
cmpsl
push
lahf
test
add
ffreep
jle
inc
dec
aad
jecxz
or
mov
shrb
add
imul
gs
aas
stos
pop
sbb
xchg
and
orl
dec
jp
gs
or
mov
pop
push
fstpt
cld
in
fisubl
cli
xor
mov
nop
in
mov
xor
cmp
lahf
lahf
or
sub
pop
enter
inc
inc
roll
out
arpl
cmp
test
pop
popf
sub
aad
aam
push
aaa
pop
pop
in
mov
xchg
jg
push
fsubl
cmpsb
loop
jnp
inc
mov
pusha
dec
and
stc
sub
hlt
out
xchg
out
test
mov
iret
icebp
sub
xor
xlat
ret
out
mov
or
fldl
pop
pushl
inc
inc
test
outsl
mov
mov
inc
out
adc
fidivs
xchg
rclb
or
dec
shl
enter
scas
loop
jo
cli
std
mov
out
adc
stos
add
mov
and
or
mov
or
fwait
dec
je
movsl
jecxz
pushf
mov
and
inc
aaa
mov
stos
clc
cmpb
or
pop
jg
lcall
scas
dec
lods
or
cmp
sub
ret
inc
cmp
lock
dec
and
lahf
jle
scas
xchg
push
decl
sti
ds
push
fs
imulb
push
xlat
aam
into
jb
stos
sub
std
test
jmp
xorb
insb
xlat
insl
mov
stos
cmp
mov
or
movsl
pop
scas
cmp
pop
xor
mov
mov
cmp
aaa
ffree
xor
fisttpl
stos
iret
repnz
jbe
rorl
sbb
popf
adc
xor
lock
pusha
hlt
lret
mov
or
arpl
sub
ret
cmp
and
xchg
add
inc
jo
push
test
xchg
stos
push
out
xchg
pushf
or
inc
mov
push
mov
xchg
xchg
outsb
jle
leave
jno
mov
pop
mov
ret
push
leave
adc
adc
bound
jge
das
dec
cli
sub
fiadds
or
xor
sbb
mov
ss
clc
jae
pop
std
leave
ret
and
or
int
cmp
scas
imul
loope
jge
cmp
push
sub
test
jl
test
push
cmpsb
aas
repnz
rcrb
hlt
pop
aaa
andl
int3
cmp
jb
in
mov
xchg
mul
call
mov
mov
popa
imul
pusha
cmp
xor
cmp
push
dec
loope
or
dec
cmp
leave
call
adc
mov
shrl
jmp
loop
mov
sub
and
push
add
xchg
mov
mov
cmp
scas
loop
das
dec
or
int
das
out
les
orb
scas
mov
ljmp
daa
jg
dec
mov
sbb
pop
mov
clc
mov
lock
jno
jo
out
int3
xchg
jno
mov
xor
mov
sbb
and
aam
sahf
and
mov
adc
gs
mov
add
add
out
add
popa
jnp
sbb
stos
pushf
ret
jge
cld
push
sbb
out
into
and
ret
xor
int
sub
je
lahf
xor
orb
mov
scas
push
push
pop
sbb
mov
popf
lock
jl
test
cmp
imul
pushf
in
into
cmp
jbe
pusha
xor
je
pop
push
loopne
into
out
repnz
xlat
push
andl
dec
cmc
fwait
inc
js
les
or
inc
decb
pop
ja
cwtl
xchg
hlt
insl
push
mov
lcall
mov
cs
ss
push
jo
lahf
frstor
fistpll
outsb
mov
push
sbb
loop
aas
jmp
push
ret
shr
mov
js
sbb
int3
xor
jg
xchg
and
pop
cmp
xor
pop
inc
mov
divl
mov
repnz
ss
vandnpd
mov
adc
lock
xor
lahf
cltd
push
inc
mov
push
mov
push
cmp
ja
xchg
jnp
pusha
lahf
jg
cmp
and
mov
jmp
fs
subb
fbld
push
sbb
push
jl
xchg
repz
push
mov
outsb
lds
sahf
xor
call
or
and
imul
xlat
add
xchg
stos
dec
bound
scas
dec
ss
sub
and
fs
jbe
popa
sahf
out
hlt
mov
xor
mov
sbb
jnp
xchg
fidivs
test
inc
outsb
fs
stos
fisttpl
dec
test
sub
xor
push
sbb
xor
xor
test
les
mov
xchg
dec
stos
pusha
dec
and
lods
idivb
or
add
inc
std
mov
fiaddl
lock
lret
das
popa
and
pop
in
fsts
cld
xor
inc
fs
mov
sahf
push
js
lods
jge
mov
mov
ljmp
sbb
addb
lea
cli
fsubp
adc
inc
mov
ds
dec
pop
bnd
push
adc
and
insl
pop
xchg
lcall
jne
fildl
inc
jp
lods
outsb
sbb
jb
ss
mov
int3
maxps
adc
and
add
outsl
cmpsl
neg
mov
push
and
and
add
shll
push
insb
inc
movl
xor
fsts
scas
jge
stos
push
cmpsb
mov
jae
test
dec
mov
addr16
push
std
rsqrtps
push
cmpsb
mov
mov
mov
pop
sbb
popf
add
xchg
test
aas
adc
iret
push
cmc
and
shl
notb
test
adc
jne
fbstp
sub
push
mov
jmp
std
das
xchg
dec
ljmp
stc
cmp
fisubrl
divl
popf
and
push
cs
mov
and
js
arpl
sbb
dec
addr16
sub
shll
mov
and
out
inc
sub
push
adc
xchg
xchg
cmc
jge
adc
fwait
pusha
dec
cmpsl
ror
xchg
outsl
nop
adc
loopne
and
push
xchg
insl
lea
call
cld
jnp
mov
mov
adc
dec
ret
enter
loopne
cli
dec
cmpsl
xchg
pop
jge
mov
mov
cltd
adc
inc
mov
movsl
xchg
dec
xor
pop
test
ljmp
fmull
jno
ljmp
pop
je
lret
stc
dec
pop
jbe
loop
cmpsb
ds
stos
lods
je
movsl
xlat
and
pop
stos
sbb
or
cmp
dec
cmp
hlt
pop
mov
lcall
xor
out
pop
shll
in
pop
sbb
cmp
push
jmp
ss
add
je
mov
test
lods
inc
dec
and
and
xchg
aas
stos
cmpsl
das
push
or
mov
test
daa
xor
sahf
mov
mov
dec
lahf
stos
or
xor
mov
lods
shrl
xchg
xor
cmp
or
cmp
cmp
jb
xorl
mov
xchg
sub
dec
in
jbe
inc
out
inc
pop
pop
int3
scas
out
rcrl
xchg
add
mov
insl
dec
div
loope
rorl
mov
stos
pop
mov
mov
rorb
dec
loopne
loopne
mov
mov
xchg
push
xor
add
mov
or
sub
sub
or
out
hlt
jle
dec
out
data16
lea
pop
mov
push
sti
jmp
in
imul
and
push
ljmp
mov
das
jmp
push
out
lea
and
mov
and
xchg
orb
or
pop
lret
repz
les
or
push
xchg
push
sar
sub
cmpsl
outsb
or
aad
fbstp
jb
inc
mov
aaa
flds
mov
add
add
jno
xor
xchg
or
fmulp
push
sbb
add
push
iret
movsl
daa
shll
fcomip
push
shlb
dec
inc
jae
jge
sti
int
ret
stos
or
adc
sahf
cmpb
and
faddp
push
dec
mov
loopne
stos
sub
je
mov
sub
das
mov
or
mov
push
cltd
mov
and
shl
xchg
cmp
icebp
jg
xchg
lods
enter
hlt
aad
sub
in
xor
or
mov
or
dec
pop
pop
nop
lods
xchg
addr16
icebp
inc
cmpsl
pop
sbb
cmpl
loopne
or
cmpsb
inc
push
popf
cli
add
fildl
inc
mov
mov
in
and
mov
nop
add
add
adc
mov
push
faddl
loope
pusha
mov
jo
add
jo
push
sbb
outsb
mov
das
sbb
pushf
aam
fcmovbe
js
cli
mov
test
faddl
mov
sbb
lods
aas
cmp
jb
cmp
out
repz
jb
add
sbb
insl
or
xor
outsb
mov
pop
cmc
je
cli
sti
loopne
sub
sahf
movsl
mov
arpl
sar
aaa
mov
xor
cmc
pop
push
or
push
mov
std
push
xor
jo
push
movsl
push
outsb
push
mov
sub
lret
mov
mov
cli
mov
hlt
test
mov
mov
lret
data16
subb
idivl
hlt
inc
mov
ljmp
icebp
adc
mov
or
sub
jecxz
xchg
notl
cmpsl
call
outsb
jecxz
clc
push
sbb
imul
icebp
ja
outsl
pop
out
test
adcb
xchg
fistps
mov
test
stos
push
pop
shrl
jmp
push
inc
push
xchg
mov
ret
out
int
aad
outsb
jo
push
cmp
xorb
mov
shrl
adc
push
pop
cmp
sbb
or
mov
out
inc
inc
sub
jae
les
xor
ret
dec
inc
bound
bound
dec
inc
sbb
adc
sbb
scas
in
inc
das
or
mov
imull
lds
bound
mov
stos
dec
gs
add
pushaw
fistpl
sbb
cmp
inc
xor
sti
sbb
adc
mov
outsl
inc
rcrb
std
cmp
je
ret
scas
scas
jmp
mov
lods
mov
sbb
addl
add
ljmp
dec
andb
bound
jne
and
or
inc
rcrb
mov
inc
cmp
push
or
repz
push
adc
lahf
into
adc
pop
es
or
or
outsb
mov
sbb
push
push
push
mov
xchg
jecxz
cs
stos
loopne
push
loope
outsb
mov
insb
xchg
into
sub
icebp
cltd
mov
cmpxchg
adc
shlb
lock
xor
test
jae
and
jg
or
les
stos
cmp
mov
jb
mov
cmp
aam
jmp
mov
test
int
fists
out
cmp
aaa
fbld
loope
pop
pop
cmp
xor
outsb
lock
mov
xor
fmul
add
push
push
push
sti
and
mov
ds
dec
ds
hlt
jg
mov
pusha
cmpsl
pop
lds
and
pusha
jae
inc
pop
sub
rolb
lock
cltd
orb
xor
rcrb
adc
fs
cltd
iret
aad
ret
rcrb
sub
push
cwtl
dec
fidivs
scas
idivl
loop
shrb
loopne
fmul
inc
push
pop
popf
gs
jecxz
fists
testl
inc
add
lods
jb
sub
push
push
lea
das
or
adc
es
jg
outsb
outsl
xchg
popf
sub
aaa
sub
add
jb
inc
xchg
inc
mov
jl
icebp
in
mov
push
sub
mov
jle
outsb
cli
cs
xor
cld
adc
daa
stos
jb
add
mov
in
das
mov
das
fildll
mov
outsb
push
mov
pop
adc
inc
cmp
mov
std
sub
testb
jns
ljmp
or
xchg
dec
fsub
rcl
ds
aaa
movsl
aad
icebp
scas
mov
ret
and
stos
add
hlt
mov
fcomip
pop
mov
or
sub
mov
pushf
push
sbb
cmc
inc
cwtl
dec
and
dec
lcall
mov
outsl
daa
fdivs
cmp
rcrl
cmp
fnstcw
mov
add
loopne
mov
sub
adc
loop
mov
loop
jae
rolb
adc
icebp
dec
test
inc
sub
out
test
addr16
dec
fdecstp
xchg
jecxz
push
mov
mov
sbb
mov
sbb
xchg
mov
push
test
sarl
lret
jle
mov
sub
xchg
add
or
ljmp
xor
and
rcll
dec
dec
sbb
out
mov
cmc
cmp
jmp
pop
fcmovnbe
sub
test
mov
mov
pushf
jb
xor
repz
out
arpl
out
and
mov
shll
out
out
data16
xor
rcrb
and
xchg
xor
adc
add
cmp
mov
scas
mov
mov
mov
shrl
inc
shr
xor
add
inc
push
or
jbe
in
push
pop
in
sub
leave
sub
add
into
ss
icebp
jge
int
cld
dec
data16
mov
insb
mov
test
clc
sahf
sbb
xchg
jns
jae
xchg
int3
mov
xchg
jge
xor
mov
outsl
jle
fld
mov
lret
jb
call
sub
adc
shlb
out
add
xchg
jmp
into
adc
stos
xor
sarl
push
les
mov
sbb
sub
sub
jmp
hlt
pop
xchg
arpl
or
ror
inc
and
cltd
js
push
mov
add
inc
mov
dec
push
mov
hlt
adc
and
js
xlat
sbb
lret
nop
xor
add
sbb
das
adc
jne
fsts
dec
inc
aam
pusha
pop
push
push
xorl
push
inc
movsl
inc
test
fldenv
mov
inc
imulb
loope
sbb
subb
test
push
fadds
sbb
adc
shll
shlb
pusha
ljmp
jne
xchg
cmovb
sub
xor
or
add
mov
xchg
fwait
jl
mov
fcomp
lret
filds
and
and
adc
xor
adc
xor
or
cmpsl
lds
arpl
out
fstps
inc
jo
stos
xor
shll
jp
or
je
and
das
in
add
mov
fstpt
jg
push
mov
dec
icebp
mov
xor
fwait
icebp
aaa
leave
xchg
jp
or
jle
pop
imul
scas
scas
lock
adc
cmp
fcoms
adc
imul
icebp
jae
into
aam
je
ss
xor
cltd
lds
xor
stc
mov
notl
test
loopne
pop
push
cmp
nop
inc
dec
pop
jle
int
add
adc
data16
sbb
push
leave
fildl
das
mov
cmpsb
mov
jnp
in
push
mov
fisttps
dec
rclb
cmp
adc
cmpsl
jb
filds
inc
adc
popf
or
jb
push
fldenv
popf
hlt
shrb
andl
int3
jmp
jg
test
andb
adc
mov
test
stos
jle
push
adc
sti
lcall
neg
movsl
xor
add
push
idiv
je
repnz
les
repnz
mov
pop
cwtl
push
icebp
cmp
fsubrs
xchg
adc
int3
les
cmp
jno
loopne
lea
int
faddl
insb
push
xchg
dec
xchg
popf
in
push
jno
clc
mov
cmpsb
test
mov
pop
mov
inc
mov
xor
fwait
insl
xor
pop
imul
dec
ljmp
lret
or
repz
jg
iret
das
insl
push
adc
mov
pop
pop
mov
addr16
dec
or
cmp
xor
mov
sbb
xor
mov
or
xor
mov
decl
shr
push
and
sti
xchg
jbe
inc
sar
repz
push
sbb
push
popf
dec
int3
pop
mov
push
push
sub
push
push
jbe
add
std
mov
movsb
rcll
push
mov
push
mov
sub
ret
and
lods
mov
ja
mov
xchg
push
fwait
push
repz
mulb
mov
inc
test
sub
add
cmp
fisubrl
out
fdivrs
jge
adc
dec
dec
not
fabs
pop
in
jae
sbb
inc
adc
inc
cli
xor
xchg
rol
pop
mov
push
jno
xorl
cmp
clc
les
mov
sbbb
push
inc
shr
daa
mov
add
pop
fadds
or
or
movsb
stc
ja
xor
out
ljmp
lods
orl
push
popf
jp
sub
xor
sbb
fildl
or
addr16
inc
dec
bound
xlat
shl
aas
pop
or
cmp
fistl
and
sbb
imul
xor
xor
jbe
fxch
and
jo
roll
popa
jecxz
icebp
fcompl
mov
mov
jge
test
lea
out
and
add
xor
jecxz
jl
lods
cmpsl
scas
push
push
cmp
lea
sub
rclb
mov
or
jg
adc
and
xor
fcoms
push
test
adc
pop
sti
xor
mov
xor
or
fldcw
rcrl
pop
mov
call
test
adc
aad
mov
mov
pop
mov
jle
sbbb
xor
fs
lods
outsb
fidivrs
mov
in
dec
cli
cmp
dec
adc
or
les
and
dec
xor
nop
movsb
sar
fcomi
lock
testb
xor
sbb
push
mov
pop
jnp
fs
pop
rcll
test
aam
adc
out
aas
push
les
in
shrb
fists
sub
and
lret
inc
sub
or
cmpsl
mov
into
cmp
xchg
sbb
scas
insl
push
and
imul
fucompp
es
loopne
cld
nop
out
mov
pusha
inc
inc
add
sbb
xor
sbb
mov
pop
sub
dec
sub
mov
dec
xchg
push
mov
dec
mov
testl
xchg
loop
mov
mov
pop
shlb
mov
ds
sti
bound
mov
inc
add
cld
sarb
jecxz
sub
insb
mov
in
mov
sub
cmp
mov
loopne
pop
cmpsl
sub
sbb
cmp
mov
cmpsb
hlt
ret
inc
pop
inc
sahf
pushf
adc
scas
fistps
pop
cmp
add
sahf
pop
push
ljmp
mov
js
repnz
jmp
mov
fmull
adc
cs
movsl
xlat
mov
jb
out
hlt
cmp
call
les
sti
mov
xchg
mov
xchg
dec
gs
test
sub
xor
int3
pop
xchg
xchg
stos
mov
jp
fstpl
cmc
lods
add
lret
inc
daa
fisubs
insb
jle
and
hlt
in
out
dec
adc
add
jmp
mov
loop
add
leave
jl
sahf
jbe
dec
iret
add
frstor
add
jg
jl
cli
inc
popa
ljmp
and
mov
jne
push
inc
sti
cmp
shlb
pop
jecxz
scas
stc
dec
dec
stos
pop
bound
add
cli
xchg
out
jnp
jns
movlhps
mov
and
repnz
or
and
add
pop
pushf
js
sub
repnz
mov
xchg
movsb
movsb
cltd
sti
dec
mov
into
mov
inc
loopne
repz
inc
out
xchg
cmpsb
and
lret
fcmovnu
lds
mov
das
fiaddl
pop
jp
bound
test
sub
sub
inc
scas
shlb
xchg
leave
xchg
push
or
adc
push
xor
or
mov
adc
xchg
lret
adc
lcall
stc
fmull
adc
test
xchg
pushf
pop
adc
std
test
xchg
call
xor
push
lret
addr16
jecxz
iret
jmp
jmp
inc
sub
mov
roll
adc
adc
stos
repz
stc
cmp
mov
jnp
pop
inc
push
and
leave
xchg
fwait
mul
pop
lcall
or
movsb
push
xor
push
stc
enter
sub
lock
call
lcall
pop
test
lahf
push
mov
push
mov
shrl
ret
sbb
sbb
test
sub
push
sub
dec
and
pop
inc
fidivrl
mov
addr16
movsl
stos
jge
call
fildll
pop
cmp
push
es
cmp
xchg
cmp
xchg
out
push
nop
out
lods
mov
and
shlb
or
pusha
fimuls
subb
cmp
and
jo
mov
mov
hlt
and
jmp
mov
scas
mov
mov
popf
push
cltd
jns
xor
mov
cld
push
gs
pop
ss
add
add
insb
fimull
into
clc
ror
pushf
jp
fsts
add
mov
loopne
dec
or
jmp
xchg
and
and
or
mov
mov
jecxz
aas
testb
fsts
fisttps
scas
jp
mov
repz
in
negb
mov
clc
adc
cmp
loopne
adc
add
shrl
mov
mov
sbb
mov
or
cmp
cmp
pop
pop
xor
popl
loop
adc
das
xlat
sub
lods
push
mov
shlb
push
lods
push
lahf
ljmp
andl
cmp
inc
ss
and
add
push
dec
sbb
and
dec
jo
and
je
repz
lock
inc
pushf
fdivr
arpl
fwait
movsb
jae
push
pop
inc
jno
arpl
and
mov
sub
clc
into
mov
mov
call
dec
push
sub
jecxz
push
jmp
pop
mov
fdiv
lock
adc
sbb
aam
dec
fildll
inc
cmp
imulb
dec
xchg
lock
repnz
xlat
cmpsb
push
frstor
pop
cmc
mov
stc
mov
movsb
jg
jbe
out
sbb
adc
adc
hlt
cli
mov
and
imull
jb
ljmp
mov
dec
dec
ror
sub
dec
push
dec
xor
push
jnp
xchg
cmp
pop
mov
scas
sub
pop
idivb
orb
iret
and
add
xor
add
sbbb
pop
mov
push
and
add
mov
mov
das
test
mov
loop
xchg
mov
imul
and
xchg
stc
push
out
adc
and
in
xor
int
pushf
nop
das
mov
shrl
push
arpl
orb
clc
jecxz
mov
mov
pushw
aam
shl
ret
sbb
sahf
pop
call
inc
arpl
stos
cmp
or
call
jge
pop
lods
int
jb
adc
pop
aad
lods
jmp
mov
std
das
daa
cmp
inc
jecxz
pop
sub
inc
pop
test
inc
adc
mov
sbb
in
lret
inc
adc
sub
cmc
mov
fcmovb
xor
stos
mov
and
push
mov
xchg
ret
xchg
ficoms
sbb
pop
pop
sbb
sub
sub
aaa
push
jno
jne
xchg
jns
les
fmuls
stos
fdivl
bound
lea
movsb
mov
mov
in
pop
or
mov
pop
pop
or
and
enter
mov
mov
sub
add
imul
mov
ds
mov
dec
mov
mov
cmp
jnp
mov
in
loopne
xchg
push
shll
jb
cld
rclb
dec
dec
xor
pop
rcrb
mov
cmp
or
ja
mov
xor
repnz
lds
push
out
sbb
enter
jne
fs
xchg
iret
sbb
inc
ss
es
test
mov
pop
notl
sahf
in
rcrl
xchg
jg
jns
sub
punpckhbw
and
sub
subl
cmpl
dec
sub
mov
jl
imull
xor
imul
mov
movsl
mov
shrl
fbld
mov
mov
mov
jae
aaa
aam
mov
in
mov
test
dec
xchg
add
push
mov
repnz
call
int3
sahf
fcomps
shll
pop
mov
in
fidivs
add
jp
pop
dec
ficoms
and
ljmp
xchg
ds
sbb
pop
in
xor
mov
clc
xlat
movsb
mov
cmpsl
adc
push
icebp
test
popa
adc
dec
jmp
sbb
repnz
scas
and
or
ljmp
out
int
loopne
lods
jae
orb
inc
sub
jns
mov
lret
sbb
xor
rcll
push
and
stos
mov
ss
adc
ds
enter
sbb
add
lods
cmp
nop
outsl
push
popa
mov
por
adc
aas
sub
movsl
mov
insb
pop
cmpsl
outsl
aad
sbb
movsb
inc
cmpsl
mov
loopne
test
push
inc
push
loopne
movsb
xchg
mov
push
and
fcmovnu
xor
rcrb
push
jb
aas
add
ret
out
fbstp
or
movsb
rol
sbb
jle
and
js
inc
loope
lret
add
test
rcll
push
pushf
mov
add
frstor
movsl
fisubl
xchg
cmp
or
insl
jb
add
cmp
or
jnp
ljmp
xchg
cmp
jne
add
sbb
movsb
pop
jg
add
pop
jg
jbe
clc
ja
jo
push
push
push
adc
add
in
lods
push
sbb
adc
test
repnz
push
xchg
pop
pop
sbb
int
dec
les
jmp
push
adc
das
add
push
fdivrs
cld
adc
in
aad
and
sub
sub
out
dec
repz
arpl
pop
jnp
jbe
cs
adc
loope
adc
hlt
mov
jo
jecxz
xor
dec
ja
inc
mov
xchg
and
pushf
mov
jns
iret
pop
fstl
inc
push
fs
sub
xor
cmp
mov
pop
and
cmovnp
jbe
inc
das
mov
fbstp
fsubrl
mov
js
mov
adc
add
fidivl
pop
sbbl
cmc
xchg
fmul
rol
leave
mov
movsb
mov
xlat
mov
movsb
std
add
xor
xor
icebp
in
popf
ds
pop
mov
rorl
icebp
xor
cmp
movsb
jne
pop
mov
iret
and
sub
bound
ss
movb
cwtl
enter
mov
jp
test
jmp
add
push
lock
sarl
mov
lock
insb
ficomps
test
pop
shl
repz
inc
adc
fldcw
push
jo
mov
cltd
dec
mov
adc
lret
push
das
stos
scas
adc
xchg
pop
dec
andb
cwtl
xchg
insl
xor
mov
rcrb
testb
sub
dec
cmpsl
push
hlt
fmuls
popa
lcall
jne
mov
sub
outsb
mov
adc
outsl
and
and
out
cmpsb
hlt
out
pop
cmpsl
les
pop
std
pop
mov
inc
and
pop
jp
sahf
data16
and
and
sbb
movsl
jmp
dec
jg
and
das
std
shlb
adcl
insb
lret
and
int
jne
icebp
das
cld
pop
test
daa
dec
xor
pop
add
push
sbb
xchg
xor
outsl
mov
push
adc
sub
loope
dec
mov
push
out
pop
cmpsl
mov
add
clc
xchg
pop
or
sub
xchg
push
fwait
mov
mov
push
jns
xor
sbb
adc
ficompl
inc
lea
pop
mov
out
mov
xchg
ja
mov
dec
movsl
fmulp
sub
mov
pusha
xor
xchg
ret
daa
aas
arpl
xlat
mov
out
lahf
sbb
dec
mov
cmp
jns
iret
jno
lods
fneni(8087
push
outsl
push
mov
lock
das
inc
test
repnz
test
or
pop
popf
pop
sbb
hlt
and
xor
mov
jnp
jno
repz
repz
mov
or
jne
js
dec
and
push
pop
shrb
adcl
pop
xor
mov
movsb
scas
pop
xchg
mov
xor
lret
testl
idivl
into
adc
inc
sub
sub
add
xchg
mov
fwait
mov
loop
mov
inc
sbb
adc
cwtl
iret
add
outsb
push
cmc
sub
popa
pop
arpl
mov
fstp
jl
mov
repnz
sbb
mov
shll
aam
pop
jg
xchg
aaa
pushf
xor
inc
enter
dec
stos
daa
mov
jo
test
dec
outsb
in
repz
iret
js
jle
xchg
cmpsb
hlt
lds
gs
mov
mov
stos
mov
into
sti
into
pop
cmp
jp
sbb
jg
sub
push
inc
push
mov
inc
je
in
push
add
push
or
pushl
in
adc
sub
cmp
pop
add
in
dec
insl
sbb
notb
or
add
mov
in
inc
cs
xchg
cmp
cwtl
push
mov
and
pop
add
rcl
divl
mov
lods
mov
add
sbb
push
mov
insl
outsb
cld
lea
mov
sahf
sarl
xchg
lods
mov
mov
xor
stos
sets
int
or
jge
punpckhwd
ds
inc
mov
or
add
data16
out
imul
xorb
fs
mov
xor
fiaddl
fldln2
leave
xor
pop
xchg
stc
xchg
inc
sbbl
int3
popa
mov
xor
testl
nop
sbb
mov
fs
sar
ja
hlt
mov
xchg
jns
pop
nop
in
jo
or
sub
and
lods
pop
outsl
cmpsb
loope
in
xchg
in
mov
sub
sub
in
adc
test
imul
inc
es
xchg
xchg
out
iret
xchg
adc
xchg
sub
mov
popf
subl
and
xchg
mov
test
stos
sti
lods
xchg
jb
movsb
out
js
imul
inc
dec
aam
call
jp
test
and
dec
sbb
adc
xchg
push
mov
rcl
dec
add
mov
mov
pop
jle
outsl
push
adc
leave
pop
sbb
aas
inc
dec
add
cs
in
dec
mov
push
xchg
cwtl
mov
xor
repz
hlt
out
mov
or
mov
out
xchg
push
xor
int3
ds
dec
rolb
jecxz
inc
jecxz
cmp
iret
lea
add
psubusw
mov
je
mov
fisubl
mov
inc
daa
mov
push
rcr
jmp
push
roll
test
dec
mov
addr16
inc
data16
loop
shr
repz
fadds
sbb
aaa
jae
jle
int
pushf
test
xchg
xor
adc
sub
and
loop
shrb
jne
iret
mov
call
push
or
pop
in
inc
icebp
repz
sub
push
aas
push
lods
and
mov
jp
mov
scas
inc
outsl
pop
jb
data16
inc
pushf
or
inc
lock
in
push
push
nop
jnp
mov
enter
das
rcrl
push
xchg
ret
insb
fistpll
dec
mov
xchg
mov
mov
or
test
into
cwtl
pusha
jle
lahf
mov
inc
lods
imul
and
mov
sbbl
pop
sbb
mov
xor
test
xor
fists
add
les
aaa
cwtl
xor
scas
xor
cmp
mov
rcrl
push
or
in
pop
sub
cmpsl
bnd
sub
imul
inc
add
rcr
mov
inc
mov
sbb
rclb
je
arpl
test
or
sbb
loope
pop
fstl
lcall
xor
mov
in
lods
xchg
std
movsl
ja
sbb
das
sti
ffreep
test
or
inc
imul
inc
pop
jmp
shr
data16
jge
dec
inc
push
mov
add
add
jnp
add
push
mov
xchg
mov
jmp
fimuls
ret
inc
xchg
mov
stos
mov
stos
rclb
iret
outsb
subl
fcmovnbe
int
add
ret
mov
mov
jae
sub
iret
stc
sbb
out
adc
movsb
pop
jne
jo
inc
lret
add
sbb
cmp
jno
lret
mov
cmp
sbb
ljmp
popf
mov
data16
ds
push
sub
adc
mov
cmpsb
jne
and
mov
cmp
addb
shrb
pop
sbb
out
sbb
lcall
inc
cmp
or
adc
ds
pop
lea
scas
push
scas
xor
jge
cmpsb
jnp
lds
adc
ja
xchg
dec
jmp
mov
mov
je
xor
pushf
mov
orb
xor
cmp
lea
imul
imul
adc
inc
arpl
decl
movsl
inc
push
ljmp
incb
fs
mov
movsl
sbbl
ret
add
mov
lcall
sbb
jg
leave
sub
popa
inc
or
aam
ljmp
jecxz
jle
out
int
mov
faddl
pop
stos
lea
push
push
mulb
mov
int
gs
xchg
push
addl
fdivl
cli
cmp
scas
jp
in
iret
lea
stos
push
push
mov
js
and
insl
dec
inc
call
movb
mov
lcall
bound
mov
es
cmp
repnz
push
mov
repnz
nop
xrelease
fmuls
sbb
test
inc
push
dec
sbb
repnz
fs
sbbb
xorb
fneni(8087
xchg
shll
pop
repnz
out
jecxz
and
jb
sahf
iret
xchg
stos
mov
mov
out
mov
or
sarb
rclb
fs
es
iret
movsb
inc
jmp
test
outsb
in
xlat
rcll
xchg
ljmp
mov
push
imul
mov
sbb
mov
js
scas
rcl
in
cmp
mov
pop
loope
shlb
jno
cmpsb
mov
in
sub
mov
rcl
xchg
jge
pushf
push
data16
loopne
sbb
xchg
mov
adc
inc
or
in
dec
out
dec
je
cwtl
ss
lret
add
aas
arpl
loop
push
add
xchg
dec
push
and
daa
add
movzbl
loopne
rcrb
lret
rcrb
pop
loopne
push
adc
insl
xchg
lret
rcl
add
and
sarb
xor
jae
outsl
aad
or
jmp
outsb
sti
add
adc
mov
fnstcw
mov
jge
in
dec
pop
adcl
sbb
pop
dec
clc
pop
push
and
add
pop
mov
mov
xchg
orl
std
jl
lcall
int
mov
adc
dec
imul
pop
pop
mov
xlat
pop
jbe
scas
ja
mov
and
jns
gs
and
cmp
je
sarb
or
push
mov
popf
mov
out
fcmovb
popf
andb
int3
sub
popf
roll
iret
outsb
divb
or
loope
into
iretw
sbb
xlat
adc
lock
mov
sub
outsl
push
mov
xchg
lods
add
xorb
adc
and
subb
inc
sbb
mov
or
pop
ror
aam
mov
aaa
inc
push
push
pop
daa
iret
bound
cmp
jle
lds
mov
and
mov
mov
loop
addb
mov
rcll
mov
pop
mov
inc
and
pop
jl
or
mov
pop
mov
out
lcall
cmpsb
sti
imul
mov
das
or
pusha
mov
mov
mov
repnz
and
leave
repz
xor
mov
mov
imull
xchg
lahf
outsb
xor
outsl
into
add
fcompl
mov
pushf
fstpl
cli
cmp
mov
pop
stos
orb
sub
add
jge,pt
xor
dec
xorb
movsl
mov
outsl
out
adcb
jl
sbb
xchg
cld
clc
mov
mov
repz
int
scas
or
xchg
mov
mov
repnz
push
pop
das
clc
mov
loop
jb
std
pop
leave
sbb
lea
adcb
int3
mov
inc
jae
push
xor
insl
adc
cmp
subb
in
pusha
add
push
inc
and
mov
into
adc
fisubs
loope
inc
dec
mov
sbb
and
mov
je
in
scas
gs
push
stc
leave
jae
mov
mov
mov
adc
scas
in
iret
xor
addr16
scas
test
push
dec
xor
addr16
fisttpl
cs
jmp
scas
xor
mov
int3
ficoml
loope
nop
mov
xor
jmp
dec
sub
in
insb
lds
mov
addr16
or
popf
or
push
sub
xor
cli
pop
imul
adc
mov
cld
fidivs
inc
lret
pusha
repnz
push
mov
ljmp
std
in
in
push
push
stos
out
xlat
shl
fstps
stos
xor
inc
cmp
xor
rorl
iret
cmc
rorl
dec
pop
jne
jb
out
add
dec
xor
pop
imul
lret
ret
mov
mov
sarl
or
jle
aam
push
mov
ljmp
addr16
push
xchg
repnz
jmp
pop
push
cmp
push
not
xchg
jge
pop
sub
lret
push
popa
or
aam
shlb
mov
outsb
movsl
and
cmc
arpl
sbb
rcl
ret
cmpsl
arpl
dec
addr16
xchg
stc
xchg
cmp
or
cs
in
rcl
icebp
jp
adc
jno
jecxz
cmp
ja
and
pop
push
stos
inc
push
fisttps
into
push
arpl
sti
fistl
ret
shl
push
ret
fwait
loopne
stc
lea
add
clc
adc
add
push
ss
and
push
in
shl
andb
mov
cli
pop
dec
fsub
shl
cmpsb
xchg
stos
int
inc
pop
or
ss
mov
add
icebp
sarb
sbb
add
jmp
sti
mov
lods
mov
lret
les
pop
rolb
cld
out
repnz
cmp
jg
sahf
cwtl
cmp
filds
push
dec
pop
int3
inc
pop
inc
add
aam
loop
xchg
adc
mov
fdivrs
fnstsw
push
addr16
xchg
adc
mov
or
mov
sbbl
mov
and
fs
std
ds
sbb
repnz
into
jnp
mov
dec
and
mov
xor
lret
cld
add
fisubrs
cmpsb
xor
lahf
inc
dec
and
punpckhbw
outsl
xorl
mov
adc
pop
xorl
lahf
gs
aas
fst
lea
and
into
mov
out
or
std
lods
pop
inc
loope
sub
adc
pop
mov
xchg
test
inc
jne
insb
aad
and
jb
sarb
cmp
jbe
leave
xchg
sub
lea
adc
movsl
jp
sbb
sbb
fiaddl
arpl
inc
cmp
inc
out
mov
push
mov
sbb
or
cmp
cmpsl
xorb
les
test
dec
movb
nop
pop
das
adc
mov
insb
jne
sub
scas
pop
shll
sbb
lret
stos
xchg
das
add
mov
mov
fsubs
xor
mov
mov
pop
sub
adc
inc
pop
pop
push
in
inc
jbe
pop
cmp
repnz
cmpsb
jg
fcmovne
sbb
push
lret
inc
xchg
add
cmp
push
push
addr16
xlat
jb
or
cmpsl
pop
add
cmpsl
mov
shrb
shlb
and
lcall
push
fs
jmp
dec
or
sbb
mov
inc
pop
insb
je
fisubrs
push
fadds
pop
lea
sub
lret
dec
test
and
dec
and
adc
sbb
jne
sarb
pop
jno
lret
xor
dec
pusha
icebp
pop
pop
fmuls
jmp
jecxz
dec
cmp
jg
cs
incl
fdivrl
fldt
je
ja
femms
daa
xchg
repz
repnz
repz
push
push
xchg
jg
stos
push
dec
ret
pushf
jg
shrl
cli
clc
dec
xchg
xchg
stc
pop
inc
sub
add
sbb
ss
or
xchg
lret
not
repz
popa
xchg
lret
daa
or
clc
imul
xor
jb
lea
int
pop
rorb
shll
mov
mov
repnz
mov
or
dec
cmpsb
jg
mov
les
idivb
xor
movsl
cmp
and
sub
mov
cmp
fidivs
les
ror
scas
xor
outsb
sub
sbb
mov
pop
push
gs
fidivrl
dec
jle
inc
lock
xor
xor
mov
adc
js
or
or
xor
pop
and
incb
xchg
pop
sbb
gs
cmpsb
test
cmc
cmp
mov
sub
ja
mov
sbb
inc
adc
cmp
xor
movsl
insb
dec
mov
and
sub
mov
mov
popf
and
xchg
mov
data16
fidivl
sahf
rcrl
sub
adc
stos
out
mul
sbb
mov
push
pop
lret
fadds
scas
mov
out
andl
inc
fsts
shlb
jo
mov
cltd
mov
dec
jb
xchg
jno
mov
push
mov
sub
mov
mov
jge
xchg
sub
adc
mov
mov
cmc
sbb
xchg
inc
pop
or
mov
jmp
mov
cmp
mov
pop
in
jecxz
int3
fcomip
loop
mov
jb
add
push
les
jno
dec
fidivl
xor
aam
rclb
inc
movsl
movl
cmpsl
shll
mov
pusha
pop
jae
xor
xor
push
pop
lds
cmp
xor
test
shlb
inc
push
and
outsl
lea
loope
mov
jg
cwtl
aad
inc
out
ret
jg
inc
jg
popa
mov
cmp
stos
pusha
outsl
test
add
cwtl
push
mov
repz
sti
mov
inc
imull
cmp
adc
fcompl
daa
inc
pop
call
ds
and
je
mov
jl
jb
dec
add
test
mov
fistpll
push
and
outsb
sbb
jg
mov
loopne
push
addr16
cmc
mov
roll
out
push
sbb
cmp
push
ljmp
add
dec
ds
std
cmp
xchg
pop
ljmp
pop
cmpsb
mov
mov
aam
dec
fildll
outsb
test
in
movsl
inc
add
cmp
adc
push
jo
or
aaa
mov
xor
mov
dec
push
lret
sub
xor
dec
jne
andl
bound
pop
in
mov
jmp
out
js
dec
sub
cmp
push
jns
add
and
ficoms
push
cli
adc
iret
mov
call
jle
inc
push
lock
sbb
add
xchg
mov
loopne
adc
fsts
imul
pop
mov
cmp
and
testl
jo
test
adc
das
inc
cs
add
jg
xor
xor
mov
out
xchg
add
mov
xor
xor
xchg
cmc
fs
outsb
push
stc
jno
pop
inc
sbb
shl
aaa
mov
out
insl
lgs
fwait
push
jns
add
ds
clc
test
mov
mov
inc
xchg
in
inc
fiaddl
jae
and
inc
pop
fst
popa
pop
inc
mov
or
daa
loop
test
outsb
sbb
cmpsb
fisubs
xchg
orb
les
clc
mov
add
adc
mov
test
addr16
test
lds
in
cmp
mov
psrld
sahf
pop
pop
cmp
push
jbe
and
xchg
jge
sti
imul
pop
xchg
xchg
inc
jns
or
lahf
add
add
fs
inc
in
pop
dec
dec
sbb
out
adc
aas
and
rorl
pop
jp
pop
sbb
mov
pop
push
pusha
push
mov
arpl
ja
movsl
mov
clc
jbe
loopne
std
jecxz
cmc
push
pushf
imul
dec
pop
std
loope
or
sub
hlt
push
mov
cmpsb
data16
out
shrl
repz
out
or
jmp
mov
popa
in
add
idivb
push
cwtl
fdivrp
xor
inc
inc
cmp
dec
inc
int
sarb
test
mov
bound
mov
sbb
fisttps
add
lahf
adc
jne
mov
imul
mov
sti
xchg
cmp
popf
xchg
dec
hlt
mov
xlat
and
inc
pusha
mov
mov
xchg
dec
sub
popf
push
lods
mov
cli
stos
addl
xchg
sbb
ds
or
jl
dec
or
in
ja
xchg
pop
popa
or
ss
pusha
cltd
jo
mov
stc
lock
xchg
mov
xchg
pop
ret
and
adc
ret
sbb
adc
pop
cmp
adc
xor
gs
outsl
adc
sbb
or
ret
icebp
mov
push
sbb
std
mov
mov
push
xchg
adc
in
cmp
imul
adc
into
arpl
ss
aaa
repz
jmp
loop
xor
sub
outsb
rcr
adc
into
lcall
cmc
sbb
loop
test
sti
iret
mov
xchg
cmp
jg
repnz
adc
lcall
cwtl
mov
loopne
cmpsl
push
dec
repz
stos
and
jmp
add
or
mov
sahf
daa
push
ss
ljmp
rclb
fadd
idivb
icebp
cwtl
test
test
std
fwait
lcall
push
cmc
jne
mov
cmp
mov
scas
sbb
in
mov
popa
mov
mov
fwait
les
sub
cld
movsl
dec
out
lods
repz
cmp
mov
loope
movsb
mov
cld
and
or
sub
fs
mov
adc
ret
add
or
jno
xorb
or
jmp
cmp
aam
mov
pop
aaa
sub
out
xchg
in
pop
fwait
ja
add
mov
in
sbb
xor
jmp
fdiv
insl
mov
xchg
movsb
popf
push
xor
outsb
adc
lret
mov
pop
lods
push
push
out
test
cmp
and
inc
and
hlt
sub
loop
mov
pop
dec
sub
cli
fcomps
roll
inc
jnp
push
sub
dec
mov
xlat
sub
adc
aaa
movsl
adcl
mov
pop
inc
test
add
enter
xor
sbbl
movsb
arpl
int3
cmp
mov
int
shr
aaa
je
nop
mov
and
daa
iret
jge
ret
jle
sahf
iret
enter
std
pop
pusha
inc
add
mov
push
cltd
flds
stos
fs
out
xchg
sahf
push
in
les
push
pushf
mov
mov
insl
or
mov
sub
pushf
in
imul
push
hlt
sub
pop
insb
pop
popf
aad
out
and
rcll
lds
and
mov
add
cmp
push
jle
popf
ja
inc
mov
orl
inc
jmp
in
xor
or
jecxz
mov
xchg
sub
lret
sarl
push
jnp
fisubs
mov
subl
call
or
gs
lahf
inc
push
fisubrl
mov
dec
fwait
jne
xlat
dec
or
push
mov
dec
dec
mov
mov
shlb
sub
fcoms
push
pop
fcomi
dec
cmp
popa
adc
mov
cmp
or
jae
sub
das
ljmp
mov
mov
lods
dec
arpl
push
add
mov
pop
mov
fnstenv
popf
arpl
js
mov
bound
movsb
pop
icebp
sti
loop
pop
jno
call
and
mov
xor
icebp
xchg
pushf
imul
dec
sub
rcrl
cmpsl
fisubs
lods
iret
inc
and
fnsave
mov
sbb
mov
xchg
xchg
scas
imul
sbb
aad
pop
xchg
in
dec
push
ret
xchg
mov
iret
push
cwtl
inc
loope
setl
or
loop
hlt
cmpsb
xchg
dec
je
ficoms
mov
add
mov
add
xchg
cli
sbb
cwtl
dec
and
mov
pusha
data16
cmpsl
mov
iret
stos
mov
enter
imul
xchg
es
mov
gs
mov
xor
and
jne
dec
into
mov
jmp
ficoml
cmp
xchg
out
test
pop
adcb
pop
outsb
cmp
das
dec
sub
fs
mov
inc
neg
add
jg
cltd
pop
dec
insl
sarb
arpl
out
mov
xchg
mov
mov
ja
mov
sub
inc
jmp
sbb
test
in
repz
fs
jp
dec
xor
scas
pop
mov
jmp
imul
in
jmp
push
jno
jae
mov
mov
and
sub
fstpt
loopne
add
scas
jp
not
or
fwait
jl
fwait
add
loope
push
out
mov
xchg
mov
roll
sar
lds
or
into
sbbl
dec
movsl
push
hlt
cmpsb
add
pop
test
pop
into
std
mov
add
mov
cmc
nop
push
adc
push
or
xchg
aaa
ret
shlb
ljmp
jo
inc
addr16
addl
popf
sub
aam
insl
dec
push
mov
jns
shll
push
push
popa
push
das
adc
dec
mov
popl
rclb
dec
ret
pop
call
daa
and
cmp
ds
ljmp
xor
clc
push
jge
cmp
inc
jb
test
dec
inc
mov
add
shlb
ja
jmp
and
pop
sbb
icebp
pop
mov
pop
shll
mov
sub
iret
inc
xorl
push
aam
sub
push
push
mov
cld
and
nop
jno
jns
jb
and
and
mov
dec
nop
fisubl
test
es
mov
jp
sbb
jns
stos
mov
mov
fnstcw
test
push
mov
xor
sahf
jp
jecxz
fwait
stc
repnz
or
push
lret
xchg
push
lahf
shl
mov
out
xor
and
aas
lahf
loope
and
or
movsl
dec
xor
icebp
push
xchg
push
fdiv
cmpsl
cs
xor
mov
mov
pop
mov
pop
and
sub
dec
cld
sbb
testl
fsts
lods
inc
aam
lock
out
adc
ret
nop
int
stos
add
mov
jl
push
jnp
mov
mov
test
sbb
inc
push
jg
pop
jl
je
ret
adc
mov
cmp
popa
out
ret
movl
and
dec
in
outsl
aad
push
mov
ret
ror
stos
mov
movsb
dec
aaa
ret
push
lea
dec
pop
push
enter
push
inc
push
inc
push
mov
mov
daa
xor
jbe
xchg
lock
test
jns
loopne
ljmp
inc
and
lret
icebp
push
div
inc
ds
aam
jmp
sbb
xor
lcall
aam
xchg
mov
or
stos
xor
arpl
pop
push
jecxz
adc
lock
sbb
popa
rorb
fcompl
or
dec
mov
mov
sub
cmp
fisubs
xchg
sbb
jb
sbb
jae
rcr
dec
fcmovnu
fs
cmc
test
add
shrl
lcall
out
ljmp
pop
mov
xchg
rorl
mov
outsl
mov
gs
jne
cltd
jb
xchg
loop
push
sub
test
cmp
mov
lods
stc
jnp
jbe
test
js
xlat
sub
bound
nop
movsl
fisttpll
clc
dec
leave
cld
in
push
mov
loope
divl
cmp
dec
mov
adc
xchg
xor
jbe
sarb
add
stos
mov
mov
jno
push
xchg
push
sbb
sub
mov
xor
testl
rorb
adc
jo
leave
ficomps
adc
rolb
clc
and
pop
jp
mov
dec
scas
fildll
mov
jbe
xchg
mov
cmp
jns
imul
or
pop
cmp
mov
mov
mov
mov
jno
imul
shr
mov
aam
add
pop
adc
push
sub
xchg
int
pop
fidivl
adc
iret
aas
jno
leave
fxch
cli
insb
stos
jns
jnp
xor
jae
add
test
les
sub
add
adcl
insb
sbb
push
rcll
scas
mov
cmp
push
shrl
je
inc
xor
cmp
xor
jno
xor
push
jns
js
out
outsb
xchg
xor
pop
je
sar
insb
cli
fs
sub
mov
cmpsl
sbb
xchg
jno
push
roll
out
cs
adc
mov
divb
sub
sbb
pusha
xchg
int3
ret
add
and
cld
mov
add
jp
shl
sahf
lret
leave
inc
jb
into
ss
out
sbb
xchg
push
add
cmp
out
mov
sti
xor
push
pop
je
jo
mov
or
fisubs
fwait
lahf
mov
adc
push
aas
cli
push
in
push
push
adc
mov
push
add
inc
pop
mov
das
test
push
and
adc
mov
out
dec
pop
xlat
jbe
mov
and
in
dec
movsl
pop
arpl
xchg
mov
mov
cmp
dec
inc
cmp
jns
mov
arpl
dec
add
addl
xchg
dec
test
dec
adc
cmp
loopne
xor
or
mov
lods
push
imul
dec
enter
mov
test
sbb
or
cmp
aas
add
pop
in
cmc
daa
pop
xchg
mov
sbb
repz
repnz
das
das
xor
out
mov
or
fcmovnu
ficompl
sahf
pop
out
dec
push
in
pusha
dec
jb
sbb
xchg
cltd
fs
mov
popa
push
adc
subb
iret
push
pop
pop
xchg
mov
aaa
in
lods
cld
mov
mov
pop
pop
push
lret
test
mov
mov
fisubl
xorl
shrl
jle
pusha
pop
pop
test
imul
int3
cli
in
fstl
mov
xchg
add
icebp
mov
cmpsb
js
xchg
pop
mov
insb
inc
incl
in
mov
into
fistpll
data16
fisttps
xchg
xor
jne
or
lea
inc
shlb
ret
aam
pusha
add
mov
and
pop
fstps
dec
or
jp
insb
xor
repz
inc
mov
push
add
add
dec
not
es
loop
dec
imul
mov
xchg
mov
mov
cmp
pop
dec
mov
xchg
pushf
jns
call
mov
add
push
es
cmp
mov
loop
push
test
cmpsb
fisubl
popf
dec
push
rclb
in
mov
test
and
xchg
insl
and
add
cmpsl
push
or
and
leave
mov
jl
inc
sbb
adc
push
call
adcl
les
mov
xchg
pop
sbb
loopne
sahf
ret
or
test
jl
loopne
mov
push
cmp
mov
add
xlat
pop
mov
sarb
xchg
loope
int
mov
push
push
loopne
pop
adc
mov
pop
pop
popf
leave
cmc
out
cmp
das
int
dec
cmp
cli
xchg
movsl
daa
xor
les
mov
mov
icebp
cmp
in
inc
jecxz
stc
rcr
mov
mov
subb
nop
test
cmp
mov
inc
repz
scas
incl
ds
cmpsb
xchg
add
faddl
mov
aaa
mov
dec
in
or
sbb
push
test
xchg
data16
fisttps
in
mov
mov
jo
mov
enter
or
cmpb
frstor
sub
ret
add
je
xlat
cmpl
ficoms
out
add
dec
sub
jecxz
arpl
fmuls
pop
nop
nop
in
dec
push
mov
dec
out
fdivl
sub
push
lret
andb
shr
das
mov
or
mov
sar
mov
test
cmpsb
std
pop
jne
push
repnz
ja
in
outsl
shlb
xchg
xchg
pop
nop
lock
aam
adc
arpl
stc
icebp
mov
stos
divb
mov
jle
sbb
push
lret
push
xor
mov
ljmp
xor
mov
lret
mov
rolb
and
js
push
mov
sbb
into
fidivl
les
push
dec
and
jmp
adc
hlt
mov
xor
xor
add
pop
cmp
push
jo
jnp
shlb
rclb
mov
mov
mov
in
outsb
shr
in
inc
pop
aam
rep
pushf
jecxz
fildll
cmp
xchg
sbb
mov
or
outsl
xchg
hlt
sbb
stc
xor
mov
test
or
sbb
fcomps
dec
jns
rol
sub
cmpsb
or
sahf
nop
cli
inc
dec
fisttpll
shr
scas
fsubrl
mov
mul
hlt
jmp
lods
inc
and
loope
pushl
sub
jl
pushf
pop
pop
add
mov
cwtl
outsb
lock
scas
sbb
sahf
adc
sub
icebp
or
sub
pop
ret
mov
lods
mov
loope
pop
movb
shll
outsl
mov
mov
inc
xchg
adc
das
pop
dec
push
icebp
mov
and
imul
cmp
nop
push
push
add
xchg
das
fistl
ror
lahf
lock
bswap
clc
mov
xchg
or
and
dec
lods
sub
stos
imul
xchg
xchg
test
pop
fdiv
sbbl
and
out
xor
pop
mov
gs
pop
inc
push
adc
mov
xchg
cmp
mov
pushf
adc
scas
adc
sbb
pop
cmc
divl
mov
push
cltd
jle
daa
push
div
out
decb
sbb
cmc
jmp
dec
popa
push
sub
in
adc
daa
movsb
add
xor
sarl
sarb
add
and
insb
mov
sbb
pop
dec
sub
push
leave
clc
jmp
jecxz
sti
pop
scas
jp
xor
out
xor
push
pop
adc
mov
push
clc
push
or
add
jno
loope
loope
cmpsl
mov
pop
imul
loope
das
call
pop
or
popa
pop
idiv
sahf
mov
sub
cld
dec
pop
nop
rorb
dec
fnstsw
push
out
jo
orb
aad
loopne
aas
ret
mov
xchg
add
mov
popa
adcl
push
fcomps
divl
mov
stos
shlb
dec
clc
je
sti
lea
addr16
movsb
xor
adc
mov
imul
sub
clc
lds
mov
clc
xor
and
cmpl
fcomps
test
pop
stc
xchg
mov
push
cli
inc
in
push
xor
xor
test
sbb
cmp
mov
or
scas
mov
sar
push
pop
hlt
or
push
fmuls
shll
mov
movsb
mov
loope
outsl
rorb
add
dec
inc
flds
mov
hlt
pop
jnp,pt
mov
push
mov
aas
mov
out
cmpsb
mov
repz
mov
cmpsb
test
mov
mov
sti
bound
sub
xchg
adc
ret
or
movsb
xchg
sub
in
mov
sbb
xchg
push
mov
sub
mov
cs
xchg
dec
out
or
in
das
and
mov
lds
mov
test
xchg
int3
mov
pop
add
jmp
xor
fiaddl
fdivrs
nop
mov
pop
movsl
lea
add
xchg
push
adc
icebp
sbb
bound
adc
nop
call
push
int3
sbb
push
fs
hlt
rcll
fadd
xchg
mov
mov
int3
jb
test
mov
or
xorb
ss
icebp
rcll
pop
push
sub
mov
scas
fcmovbe
pop
mov
pop
sbb
or
mov
cwtl
roll
test
cmp
fs
xor
outsb
xor
inc
das
lea
xchg
xorb
mov
aam
dec
mul
fisubrs
mov
xlat
jnp
jns
int3
dec
iret
gs
repnz
add
sub
data16
and
cltd
data16
fcomp
push
call
notl
xchg
push
jnp
cld
daa
cmpsl
adc
aad
pmaddwd
movsl
push
sbb
or
xor
add
in
es
mov
in
push
adc
cmp
pushf
xchg
sbb
aad
testl
lods
movsb
lods
adc
sbb
and
icebp
loop
sub
fwait
mov
movsb
cmp
inc
nop
enter
mov
scas
pop
aaa
push
das
xor
ret
jl
aas
push
rcl
inc
cmp
pushf
lret
jae
fcoml
rol
mov
popf
push
pop
xchg
test
xchg
shlb
int
mov
mov
cmp
aam
sbb
xlat
pop
ds
cwtl
andb
int
dec
adc
mov
mov
add
inc
icebp
add
xor
inc
lret
adc
mov
push
xor
inc
sub
loopne
inc
fistpl
mov
rcrb
bswap
mov
sbb
scas
inc
and
inc
sahf
jnp
das
subl
cmp
lea
or
inc
push
mov
sahf
dec
push
dec
adc
inc
dec
mov
cmp
cmpsl
repnz
imul
jge
popf
popa
inc
jge
cmp
popa
ss
aam
mov
cwtl
adc
inc
xor
xor
aas
push
into
sbb
and
push
cmpsb
mov
cmc
ret
mov
js
aam
lcall
gs
testl
mov
mov
fimuls
cs
sti
aaa
xchg
jecxz
dec
in
adc
sahf
nop
dec
adc
sub
push
xlat
mov
mov
xchg
mov
fs
or
inc
cmp
xchg
cmp
inc
mov
popa
orl
movsb
lods
testl
sbb
xchg
dec
inc
inc
pop
push
cmp
das
mov
cli
mov
dec
or
jmp
dec
shr
bound
int
jg
cli
xor
mov
add
pop
lret
in
mov
push
call
rcrb
mov
inc
shlb
roll
mov
mov
pop
imul
test
aaa
cli
lods
inc
cmpsl
rcr
nop
ficoml
push
dec
insl
xor
sti
loope
in
xorb
sbb
push
mov
mov
and
push
push
inc
aas
scas
sub
dec
mov
push
ss
sbb
xchg
les
mov
aaa
mov
mov
cli
lock
out
push
mov
mov
xor
clc
pop
cmp
mov
insl
cs
add
das
and
or
stos
out
ret
inc
jne
xorb
cs
stc
jns
xchg
aaa
test
enter
call
les
frstor
mov
pop
mov
sub
popf
sahf
aad
int3
sbb
pop
mov
mov
push
cmp
xor
pop
cmp
dec
lea
cmpl
imul
inc
gs
gs
sub
push
rcrb
int3
mov
inc
push
dec
push
loop
sti
outsb
int3
icebp
jns
mov
add
stos
stos
or
dec
push
push
mov
push
mov
jo
rclb
jno
dec
loopne
data16
xchg
mov
ret
mov
in
inc
xchg
push
imul
cmp
inc
mov
cwtl
xlat
mov
int
mov
test
adc
test
nop
adc
add
push
pop
push
lahf
push
fisubrs
mov
mov
and
in
pop
dec
fwait
mov
sub
mov
mov
movsb
sub
cmp
mov
shll
outsb
stos
das
in
xchg
jg
out
jg
or
lea
or
sbb
mov
add
mov
push
dec
scas
fistpll
inc
mov
cmp
adc
es
insl
enter
mov
cld
xchg
loopne
lsl
rclb
dec
xlat
aam
aam
or
test
scas
pop
sbb
mov
cli
aaa
out
and
lods
shlb
mov
add
mov
pop
inc
cmc
leave
leave
sbbb
nop
xor
or
fs
add
insb
out
in
into
or
cmp
mov
out
xor
int3
sbb
pop
lret
pop
daa
mov
xor
or
ret
push
scas
jae
orw
outsl
insb
pop
mov
in
mov
xor
hlt
or
ds
or
sub
aam
mov
fwait
ret
popl
hlt
mov
cwtl
lret
adc
pop
or
sbb
imul
xchg
ret
fisttps
and
adc
push
fs
shl
cli
inc
or
pop
xor
jnp
and
sbb
fbld
std
and
ds
rorb
mov
xor
into
pop
add
fwait
add
mov
testl
aad
mov
lahf
push
cmp
pop
jecxz
divl
sub
and
mov
xchg
or
dec
sahf
jmp
out
arpl
mov
imul
pop
sub
lahf
hlt
dec
ja
xchg
dec
enter
xchg
push
insb
sub
dec
inc
push
jl
into
jns
xchg
into
dec
xor
imul
sbbl
xchg
pop
in
cmp
cwtl
daa
mov
sub
cmp
sbb
pop
outsl
push
notb
push
xor
pop
lret
movsb
out
ljmp
sub
xor
mov
scas
adc
xchg
subb
mov
xor
add
mov
lods
mov
shl
jne
in
adc
and
test
gs
movsl
jne,pt
xacquire
jge
add
sbb
stc
fmulp
addr16
add
cwtl
dec
in
cwtl
add
or
mov
jecxz
pop
mov
cmp
shlb
inc
int
stos
fisttps
aad
push
mov
std
insl
pop
dec
cli
jg
dec
lods
mov
mov
fcoms
out
sti
insb
push
loope
sbb
mov
pop
jmp
mov
sbb
outsb
jmp
scas
fisubs
aad
xabort
adc
das
cmpsl
adcl
xorb
pop
pop
sbb
out
add
dec
popa
inc
sbb
and
add
jo
lret
sub
pop
movsl
inc
mov
inc
divb
mov
sbb
fsubl
test
gs
std
fscale
ja
sbb
fadds
add
dec
cmp
inc
shlb
jb
out
push
sbb
xchg
mov
pmullw
xchg
cmp
push
jae
dec
sti
sbb
xchg
testb
arpl
jnp
lret
cld
test
adcb
mov
jle
shl
adc
test
add
sub
test
stos
jmp
push
xchg
cmp
sbb
shl
push
mov
cli
push
in
jp
fwait
and
dec
xor
adc
bound
add
jbe
sahf
sub
or
xchg
mov
sub
sbb
sarb
xchg
rcll
and
rcll
in
cmp
xchg
hlt
jne
add
push
imul
cwtl
and
imul
sbb
addps
mov
int3
xorb
or
fldenv
push
sahf
adcb
mov
add
dec
pop
pop
in
imul
out
ret
lahf
fildll
lock
outsb
ret
cld
sbb
flds
jge
shrb
scas
adc
gs
mov
cmpsl
movsl
dec
sub
mov
push
sbb
mov
orl
jae
cli
ljmp
xor
push
leave
jmp
sti
or
adc
ja
je,pt
cmp
std
scas
lods
lret
pusha
repnz
insl
sbb
test
jno
sbb
push
inc
or
add
in
in
idivb
pop
cmpsl
mov
adc
dec
ds
push
mov
sbb
jne
dec
inc
lds
add
dec
lret
or
pop
loop
jmp
pop
xchg
adc
dec
gs
int
pop
xchg
xor
arpl
jbe
cmp
sub
dec
cmp
cli
sub
roll
scas
xchg
jle
and
testl
sbb
lods
mov
sub
stos
sti
mov
push
xchg
cwtl
mov
pop
in
scas
dec
out
xor
mov
data16
or
or
xchg
int3
je
ss
xchg
pop
in
and
xor
shlb
add
pop
lods
clc
test
aas
icebp
add
xor
mov
fstps
ja
sarl
push
es
pop
jnp
jb
subl
scas
mov
out
rol
rcll
mov
call
mov
mov
ss
andb
aad
mov
pop
jmp
cwtl
js
in
mov
test
in
ds
cmp
xor
xchg
popl
xchg
dec
flds
jae
pop
in
and
inc
les
iret
cmp
inc
aas
inc
jb
push
pop
fimull
dec
mov
pop
mov
jo
add
cwtl
test
fdivrs
popf
in
pushf
test
jno
xor
pop
mov
aad
sbbl
arpl
adc
inc
push
repz
adc
sbb
les
int
dec
pushf
mov
sbb
or
inc
push
sbb
xor
pop
add
mov
popf
and
mov
or
in
cmpsb
xchg
push
movsb
cmp
in
lcall
xchg
sbb
xor
jae
mov
add
movsl
mov
sub
sbb
imull
push
dec
sahf
and
sbb
adc
or
mov
sub
and
icebp
add
into
addr16
add
xchg
mov
jnp
push
fbld
fidivl
mov
popa
dec
repnz
mov
decl
jns
jne
mov
and
cmpb
pop
mov
inc
cmp
jmp
rcr
out
ds
fst
xchg
adcb
cli
sti
outsb
cs
cmp
in
pop
adc
xchg
mov
fildll
jl
sub
ds
dec
mov
sbb
int3
dec
adc
mov
int3
xchg
stos
mov
dec
xchg
iret
stos
aas
xor
adc
outsb
cs
adc
cs
or
sub
icebp
addr16
xlat
cmp
fsubr
int3
mov
test
test
xchg
xor
or
mov
mov
iret
into
add
xor
mov
xchg
cld
popf
mov
jge
aas
add
shl
and
xor
loop,pn
stos
adcl
out
sarl
ds
rcr
jae
xor
das
add
add
mov
test
lods
stos
inc
clc
mov
xchg
push
lods
dec
outsb
xor
xchg
js
leave
inc
jnp
adc
adc
lds
push
mov
les
add
stc
dec
mov
and
fs
and
jmp
insl
das
cli
mov
pop
and
mov
jge
ret
adc
aad
cmp
shlb
icebp
hlt
cmp
lea
pop
rcl
loope
bound
mov
int
iret
push
test
gs
pop
shl
sbb
dec
ret
loop
dec
adc
inc
jmp
in
out
mov
gs
int3
gs
pop
lret
pop
leave
in
xor
stc
dec
jae
cmc
add
push
jecxz
push
sub
xchg
push
inc
sti
push
jle
cmpsb
xchg
movsl
mov
in
ljmp
aad
insl
mov
ret
xlat
out
hlt
pop
dec
dec
insb
shrl
mov
gs
leave
adc
ja
iret
cmpsl
movsb
push
data16
mov
sub
sti
mov
xor
daa
sub
xor
mov
sahf
jp
adc
push
push
mov
popa
sbb
dec
or
dec
jne
push
mov
testl
and
xchg
neg
test
xor
or
cmc
jecxz
fidivs
shll
insb
lret
test
mov
imul
inc
mov
jp
rcr
sub
mov
cli
cwtl
jae
mov
and
js
or
lods
ret
mov
cmp
arpl
adc
push
cmc
lock
ljmp
dec
sub
in
incb
cmp
dec
or
sbb
outsb
inc
xchg
jno
xchg
mov
mov
push
xchg
ja
add
call
inc
pusha
out
test
mov
push
dec
out
and
pop
popa
xchg
lcall
xchg
rclb
push
sbb
mov
mov
or
daa
mov
jp
cmp
loopne
cs
hlt
call
stos
pusha
stos
push
mov
push
mov
pushf
pop
rorb
mov
sarb
push
add
mulb
fstpt
and
adc
add
mov
ret
in
lcall
shr
push
icebp
ljmp
into
pop
sbb
stc
inc
mov
jle
jmp
mov
cmpl
pop
scas
xchg
push
movsl
aad
cmpsb
daa
mov
pop
pop
cmp
fst
dec
loopne
xchg
mov
aaa
ljmp
imul
clc
inc
mov
cmp
stos
ljmp
xchg
movl
mov
jns
fdivrl
push
cld
popa
jmp
imul
jnp
outsb
cmpsl
and
pop
repnz
pop
les
cmp
aaa
in
inc
xor
mov
push
out
dec
jg
clc
sbb
push
and
xchg
push
push
push
jmp
data16
cmp
fidivl
bound
mov
push
fimull
inc
xchg
jo
push
pop
insl
aas
cmpsb
adc
in
rcll
enter
xchg
test
jb
add
adc
scas
jb
stos
ret
into
popf
jmp
or
and
jo
lock
inc
mov
std
std
pop
daa
fdivs
lret
or
fstps
sarb
fcmovu
hlt
jnp
das
enter
incl
ja
clc
imul
mov
jmp
push
adcb
mov
pushf
movsl
dec
les
jns
push
dec
or
sahf
mov
add
test
lds
rcll
or
cli
fucomip
mov
mov
mov
inc
jb
xchg
insb
pushf
adc
jle
add
xchg
sub
sub
fimull
xor
push
mov
mov
mov
das
stc
imul
mov
mov
in
pushf
aaa
in
jp
js
cmp
leave
movsl
bound
mov
or
mov
rorb
fcoms
sarl
dec
pop
xor
negb
ret
xchg
inc
out
cmp
out
sub
xor
xchg
push
adcl
push
stc
adc
divb
sub
push
push
lret
repz
movsb
cmp
roll
mov
fs
jb
mov
cld
inc
ficompl
and
popf
mov
dec
aas
jnp
jmp
popa
mov
mov
lret
stos
fiaddl
xchg
pushf
pop
jmp
mov
lds
dec
addr16
sub
sbb
scas
repnz
aam
in
notb
jns
cwtl
repz
shlb
hlt
into
jno
test
pop
cmp
aam
in
cltd
test
aaa
adc
push
in
adc
push
xor
andb
outsb
jno
lahf
push
loop
stc
repnz
imul
cltd
xchg
cmp
pop
xor
jno
shl
sbb
add
pop
in
roll
addr16
xchg
push
sub
jnp
out
add
sub
xor
lds
mov
inc
sub
push
push
sbb
hlt
add
lea
int
jg
pop
push
cmc
mov
xchg
cmp
cmp
rorl
jg
mov
push
inc
jecxz
fistl
mov
ljmp
xchg
sub
sar
iret
jne
or
loopne
rcrl
inc
lea
out
mov
movsb
aad
int3
insb
add
jnp
mov
or
js
mov
ss
int3
out
pop
push
cmpsl
movsl
movsl
movsl
mov
xchg
xchg
pop
sbb
nop
js
popf
mov
aad
push
test
xchg
ret
push
xchg
or
add
mov
popf
cmpsb
into
and
fdivp
ja
sub
inc
scas
mov
aam
sbbl
adc
add
dec
and
push
inc
scas
pop
sbb
imul
clc
out
imul
sbb
fldenv
push
int3
add
ret
pop
insl
jb
add
mov
pop
sahf
clc
cmpsl
out
cwtl
jp
pop
repz
jne
dec
push
xchg
mov
fbld
jno
mov
mov
iret
cwtl
add
xchg
popa
mov
sub
cmp
xchg
scas
add
add
insb
out
xchg
lcall
jae
lret
jp
and
test
jae
add
xchg
loopne
push
shll
sub
mov
pusha
scas
sarl
add
adc
out
out
int3
sarb
mov
cltd
cmp
mov
scas
scas
subb
cmp
cmp
fbld
sub
dec
fisttps
xchg
mov
pop
mov
int
inc
out
fdivp
jnp
xor
pop
or
jg
mov
mov
pop
pop
xor
sub
or
pop
add
in
outsl
lret
imul
hlt
ds
mov
gs
sbb
int3
imul
adc
cltd
outsb
jmp
pop
and
mov
movq
pushf
push
sbb
sahf
stos
jmp
mov
movsl
add
data16
in
fisubl
xor
mov
cld
int3
xor
mov
lret
push
add
adc
in
or
mov
push
pop
adc
sub
cmp
sbbl
dec
aas
sbb
sub
setae
or
int
sub
hlt
jae
and
pop
addr16
arpl
movntq
ret
rcrl
pusha
ja
pusha
mov
mov
lret
push
lock
push
xor
ret
pop
je
shl
mov
dec
jno
imul
shr
test
dec
mov
jecxz
or
ds
lret
imul
inc
xor
cmpsb
xchg
add
rcr
inc
mov
cwtl
imul
and
in
adc
cmp
sub
lcall
jne
stos
push
popa
pop
in
shrb
pop
cmp
and
lcall
jb
add
fs
psubq
ja
outsl
repz
and
test
pushf
out
mov
xorl
fwait
cli
and
addr16
int
mov
loope
sar
xchg
or
push
mov
icebp
or
jmp
insb
arpl
pop
std
or
cli
out
xchg
xor
push
daa
outsl
rolb
in
fidivs
sbb
test
or
in
aas
inc
test
jns
xor
pop
sbb
push
pop
sbb
adc
adc
xchg
add
movsb
xchg
sti
sarb
sub
inc
xor
mov
push
inc
jle
cltd
scas
pop
inc
loope
out
imul
in
loopne
iret
negb
scas
ds
inc
repz
pusha
outsl
js
bound
fistpll
or
mov
frstor
or
or
sub
xchg
ja
subb
mov
xor
hlt
xchg
sbb
dec
mov
push
lcall
inc
push
jge
in
inc
pop
xchg
ljmp
test
in
clc
out
jnp
mov
sbb
leave
aas
pop
and
and
sbb
cmpsb
push
aas
cmp
rcrb
or
int3
mov
mov
jne
data16
xor
mov
sbb
in
es
xchg
stos
dec
or
pop
cmp
inc
mov
icebp
scas
inc
movsl
lret
push
out
test
imul
mov
push
aad
dec
repnz
out
push
out
push
icebp
loope
cwtl
out
repnz
in
icebp
or
ds
pusha
mov
dec
sbb
or
lea
cmp
dec
push
cmc
inc
ljmp
repnz
xchg
arpl
adc
andl
jnp
or
cmp
xchg
push
gs
jmp
inc
out
xchg
iret
stc
mov
push
adc
les
push
loop
add
divb
pop
jge
outsl
inc
sub
mov
add
hlt
mov
adc
xchg
mov
sub
sub
adc
mov
mov
dec
pop
pop
idivb
test
push
dec
stos
cwtl
test
das
js
jnp
insl
jle
stos
push
pop
jbe
mov
jp
je
test
dec
das
int
xor
ficompl
jl
adc
sub
ret
fldcw
push
sub
fistps
in
sbb
cmpb
aad
subb
inc
ret
arpl
lea
cltd
jns
arpl
rorl
sahf
and
inc
sti
xor
pop
nop
pop
loop
es
jg
int3
and
outsl
inc
cmp
cmp
and
pop
mov
testl
mov
adc
sbb
lahf
push
shl
mov
xchg
aaa
rolb
add
test
ss
stos
mov
fmulp
insl
push
mov
in
mov
sbb
fcomps
pop
in
nop
sbb
addr16
push
jp
jg
subl
xor
lret
scas
mov
in
push
cmp
dec
sbb
jp
jne
mov
push
or
pop
js
push
add
jp
rdpmc
divb
scas
das
test
popf
and
aaa
dec
sub
stc
in
add
arpl
mov
jg
adc
mov
fisttpl
lahf
cmpl
fisubrl
shll
repz
add
repnz
pop
cmp
ljmp
je
fs
cli
adc
pop
out
cmp
fsubrp
in
jp
lock
xchg
lea
call
or
fstps
jnp
jmp
pop
cmpsl
xchg
push
call
subl
test
jge
idivl
jp
mov
pop
mov
sahf
mov
sbb
movsl
insb
testl
daa
jae
sub
or
push
ss
insl
mov
xchg
push
adc
fdivs
fadds
or
fisubrl
mov
dec
jo
call
stos
and
pop
test
andnps
inc
iret
repz
arpl
movsl
push
fidivrs
lret
sbbb
xor
pop
lock
mov
bound
lret
pop
sahf
xor
sti
outsl
fcoml
sarl
scas
pushf
pop
xchg
imul
movsl
popa
insl
faddp
std
xor
ret
jbe
and
mov
out
cmp
mov
xchg
cwtl
stos
xchg
inc
sbb
jg
scas
pop
jecxz
or
inc
add
mov
sub
scas
into
xchg
lret
fdivs
or
inc
filds
jo
push
push
xor
test
mov
xchg
insb
ja
fsubr
or
std
iret
cwtl
test
add
fmul
push
movd
out
add
sub
fucomp
aam
adc
dec
or
insl
nop
jne
pop
xchg
hlt
out
push
lret
adc
loopne
addr16
mov
lret
sti
cmp
divl
sti
inc
lock
pop
add
or
in
mov
cs
lea
sub
incl
cmc
mov
pusha
cwtl
pushf
pop
mov
push
push
lods
aaa
in
xchg
mov
push
mov
mov
mov
push
mov
mov
mov
push
inc
sbb
mov
ss
dec
inc
xchg
mov
sub
lret
imul
shrb
data16
scas
insb
out
mov
in
inc
mov
cmp
adc
and
dec
xor
push
les
push
iret
es
jb
and
pushf
dec
sub
mov
add
repz
sub
mov
jg
out
xor
xor
les
fdivrs
sahf
mov
sub
outsb
and
out
lret
mov
mov
clc
bound
ficoms
movsb
shlb
sub
xchg
or
mov
xor
mov
nop
mov
ret
push
out
mov
loop
outsb
dec
inc
pushl
xor
sub
lds
xchg
sub
adc
fwait
test
push
jnp
aad
sub
push
dec
fcoml
push
xor
hlt
push
mov
out
ljmp
out
push
mov
ret
lods
cmp
add
add
dec
test
xor
pop
inc
jg
sub
sbb
jmp
cmp
inc
add
dec
add
jge
fistpll
jg
mov
ds
xchg
in
sti
push
ficoml
arpl
sub
cld
pop
in
jl
aam
sbb
mov
pop
pop
ja
push
dec
adc
jb
cmp
les
loop
cs
cmp
inc
insb
test
xchg
inc
jl
xchg
lcall
in
xchg
jo
adc
mov
mov
jne
scas
aas
xchg
jbe
mov
movsb
mov
and
push
mov
cltd
movsl
xor
aad
sbb
enter
xchg
shl
add
add
and
dec
jmp
sub
or
inc
add
xchg
mov
cmp
mov
adc
xchg
arpl
call
and
xor
add
aas
repnz
push
inc
negl
push
cmp
cmpsb
out
jl
xchg
nop
adcb
imul
xor
xorl
loope
js
sbb
movsl
push
andl
leave
mov
leave
scas
adc
sbb
dec
sti
pop
ja
mov
into
shll
sub
add
test
cld
cmp
sub
mov
adc
lock
sbb
sub
jb
jg
fldenv
lret
pop
mov
mov
add
test
aas
adc
popf
cmpl
out
aad
mov
cmpsl
fdiv
frstor
xchg
bound
sbb
xchg
xorl
mov
hlt
sub
sar
lds
mov
sbb
sub
in
fdecstp
sbb
outsl
jns
xchg
iret
imul
les
aam
mov
add
sti
into
pop
jge
out
dec
adc
jbe
or
cmp
fisubs
add
fcmovb
das
adc
imul
mov
sbb
dec
insb
test
sub
idivb
cmp
jbe
inc
push
subl
sub
xchg
or
mov
mov
mov
cwtl
xchg
ja
sbb
aam
es
mov
adc
push
jg
push
inc
repz
pop
dec
adc
mov
aad
mov
jl
pop
enter
incl
add
add
mov
insl
loop
pusha
cltd
dec
sbb
push
dec
xchg
jp
xor
dec
icebp
sbb
sbb
add
dec
ficomps
push
mov
mov
mov
fwait
hlt
in
sub
mov
dec
scas
sbb
stos
pop
aad
sub
fadds
repnz
rorl
int
js
call
xlat
jns
mov
add
pusha
jmp
dec
add
dec
jecxz
pop
mov
mov
xchg
enter
jle
sbb
popa
add
xor
movsb
fistl
repnz
pop
lods
repz
imul
push
cmp
mov
jns
insb
rcr
jns
mov
test
rclb
les
clc
leave
pop
call
pop
push
out
cmc
mov
cld
call
movsb
ja
xchg
mov
pop
xor
aam
outsb
daa
pop
jne
sbb
cmpsl
inc
inc
jecxz
jb
stc
adc
push
sub
ret
pushf
movsl
mov
mov
testl
mov
add
add
pushw
xchg
neg
mov
out
xchg
and
cmp
adc
stos
pop
ret
ret
loopne
lods
sub
js
ret
arpl
bound
xlat
les
popf
pop
mov
jbe
inc
adc
cmpsl
cmp
pop
xchg
pop
push
mov
dec
in
sarb
test
jle
adc
or
push
push
inc
inc
pop
xor
mov
and
out
fwait
notb
out
mov
loopne
cmp
mov
js
inc
mov
imul
add
je
ja
mov
clc
dec
cltd
mov
jp
xchg
adc
pop
popf
xchg
ss
gs
cmp
pop
inc
xchg
pop
sbb
out
dec
add
jmp
xlat
cld
loop
outsl
xchg
mov
cwtl
cwtl
pop
clc
scas
test
inc
mov
je
jae
jmp
mov
mov
dec
das
sub
add
mov
dec
rorl
adc
imul
add
shll
xchg
pop
xchg
cmp
mov
or
jle
push
add
mov
add
hlt
or
and
mov
mov
mov
out
mov
xchg
ds
push
mov
push
sbb
jp
lret
repz
and
push
lahf
fisubrl
enter
xlat
adc
and
sbb
repnz
imul
inc
push
add
frstor
out
rcrb
rcr
pop
mov
mov
jl
jne
sbb
and
outsl
mov
out
fst
les
mov
add
cmpsb
mov
inc
iret
fcompl
mov
pop
push
or
das
dec
scas
mov
ja
repnz
inc
or
mov
xchg
dec
std
lods
fisubrs
xor
in
or
inc
lock
pop
dec
test
dec
xor
pushf
xlat
sub
lods
and
mov
xchg
dec
jnp
pop
ret
jno
icebp
popfw
ret
cmp
sbb
mov
decl
mov
push
ljmp
inc
mov
adc
aad
pop
mov
ss
pop
inc
pop
in
sahf
mov
out
idiv
sub
cmp
or
dec
mov
iret
adc
test
or
lcall
xchg
pop
nop
add
xor
push
push
xor
fadd
addr16
add
cmc
movsb
sub
lea
xchg
shl
repz
xor
les
adc
and
ficomps
scas
cwtl
cli
xchg
test
pop
or
xchg
xor
jl
jle
in
test
stos
push
push
cli
insb
stos
fiadds
sti
push
aam
imul
inc
iret
lock
movl
push
icebp
ficompl
adc
push
adc
stos
sbb
cmpsl
or
mov
ja
inc
lds
xor
jb
out
jnp
mov
adc
and
sbb
in
fs
mov
mov
sub
dec
imul
cmp
sub
dec
sub
cmpl
push
pop
test
test
push
mov
cltd
adc
pop
jl
lcall
fstpt
mov
scas
or
enter
arpl
mov
dec
pop
pop
mov
mov
shl
xchg
test
xchg
push
movsl
add
call
jp
sbb
les
xlat
idivl
iret
xchg
aas
or
lock
in
xchg
mov
imul
and
add
xchg
sbb
push
xchg
lahf
mov
popa
das
adc
fwait
rcll
sbb
mov
cmp
push
xlat
in
movsl
pop
in
or
add
repnz
in
ret
into
aas
inc
movsl
xor
cltd
pop
xlat
pop
out
mov
ret
push
xchg
jp
pop
stc
mov
xchg
sub
jmp
movsb
push
mov
movsb
dec
call
popa
push
test
in
push
cs
xor
sub
xor
pop
nop
loop
test
fwait
in
and
add
sti
push
add
dec
ljmp
or
mov
sti
sub
movsl
rorb
xchg
lea
push
clc
inc
sbb
inc
lock
cmp
cmp
scas
cmp
mov
push
mov
lcall
ds
adc
xchg
pop
mov
jl
rorb
out
out
mov
xlat
pop
movsb
das
cmp
roll
ret
out
push
sbb
out
or
or
dec
nop
push
cltd
inc
lea
add
and
stos
inc
outsl
out
or
push
fnstenv
out
mov
stos
add
adc
dec
add
mov
sti
ljmp
bnd
xor
adc
int
and
push
js
mov
or
push
test
in
aas
out
loop
cwtl
jge
cld
sahf
cmpsb
or
cwtl
stc
orb
sbb
xor
mov
outsl
mov
cmp
inc
push
fwait
sbb
dec
sbb
roll
test
iret
mov
aad
cmp
push
daa
ret
xor
fld
bound
outsb
mov
stos
jg
xchg
and
xlat
cmp
mov
dec
pop
xchg
push
fildl
pop
fsubl
in
iret
xor
jge
mov
inc
pushf
inc
test
push
adc
xchg
inc
jne
xlat
or
adc
push
inc
adc
or
xchg
inc
into
rorb
push
test
fildll
jno
sbb
fwait
xchg
les
cmc
lods
imul
scas
cmpsb
rcrb
sbb
fcmovu
popf
inc
lcall
cld
xchg
mov
mov
pop
ljmp
es
les
out
jae
ficomps
cmp
xchg
das
and
mov
xchg
fiadds
jae
cltd
mov
and
jne
pop
inc
sahf
fs
inc
sub
jl,pt
and
cmpsb
push
push
inc
jg
xchg
jnp
pop
jnp
sbbb
push
inc
popa
xor
or
out
sub
cld
add
adc
mov
nop
loope
dec
adcl
push
shr
dec
add
aam
gs
mov
loopne
dec
stos
cmpsb
sbb
jne
negl
jecxz
sub
xor
aaa
movl
enter
pop
fst
mov
out
fcomi
xlat
clc
dec
sti
jmp
icebp
xor
mov
mov
lods
inc
inc
xor
movsl
cmp
sub
inc
adc
sbb
in
add
xchg
mov
ds
in
xchg
in
popa
cmpb
xchg
adc
aas
mov
sub
mov
testb
ret
fbstp
cld
adc
xlat
inc
jl
or
jmp
xlat
push
xor
inc
inc
je
popa
pop
xor
out
push
jno
loopne
loopne
out
cld
rcrb
dec
call
pop
cwtl
shrb
repnz
and
data16
cld
adc
pop
lods
lea
mov
sub
scas
sub
push
jo
leave
rcll
sahf
adc
inc
fildll
xchg
xchg
lret
dec
fsub
dec
mov
sti
push
sbb
mov
std
cmpsl
pushaw
loopne
adcl
jecxz
pop
rcrl
lock
lret
cmc
push
test
fs
pop
out
cmpsb
jl
dec
adc
mov
pusha
popa
cltd
in
push
test
es
push
enter
orl
int
stos
ss
mov
cmp
lods
clc
xchg
sahf
aad
cwtl
push
pushf
jmp
push
add
mov
leave
gs
aam
sbb
pop
sub
out
mov
dec
stc
adc
inc
add
xor
aas
push
fisubrs
je
mov
add
imul
out
stc
lcall
dec
jno
push
mov
shrb
sub
andb
cmp
imull
mov
sbb
push
dec
std
adc
lods
das
lea
pop
jl
lock
jne
sahf
out
call
or
in
ja
cltd
mov
and
cld
decl
pop
lret
mov
in
mov
jg
enter
or
rorb
frstor
dec
jb
aam
mov
ljmp
cwtl
jbe
push
cmc
and
test
loope
insl
ficoml
xchg
test
lds
lock
mov
pop
push
mov
repz
and
test
icebp
xor
sbb
jg
xlat
cld
jmp
test
arpl
faddl
mov
mov
gs
lret
hlt
andl
movsl
ds
pushf
mov
cs
pop
push
mov
push
lea
popa
cli
adc
ret
test
push
adc
lods
push
loopne
bound
aas
aam
mov
mov
stc
int
aad
shl
lea
ja
aad
and
std
lret
adc
mov
test
rorl
pop
ror
mov
dec
dec
loopne
out
jle
das
inc
inc
das
lcall
push
cmp
pop
push
scas
cmp
iret
mov
mov
mov
sub
cmpsb
push
push
out
cwtl
push
dec
gs
sti
je
jle
mov
cs
icebp
push
popa
imul
imul
shlb
mov
cmp
pop
cmp
cmpps
xchg
mov
add
jno
cmp
push
and
cmpl
xchg
pop
sbb
add
movsl
pushf
sub
in
cmp
xchg
mov
cmpl
std
sti
xchg
ja
addl
jg
andl
addb
cltd
call
inc
mov
mov
inc
mov
jno
loop
sahf
ljmp
in
mov
movsb
dec
adc
dec
mov
jmp
sbb
jae
repz
mov
das
sbb
mov
pop
jp
cld
mov
sbb
jl
scas
mov
into
les
and
xchg
xchg
jno
ret
dec
fcom
xchg
and
mov
je
mov
cmp
mov
gs
andl
inc
test
test
pop
push
pop
xchg
mov
or
add
push
pop
mov
in
out
jb
dec
mov
insb
inc
push
jo
faddl
mov
daa
cmc
mov
callw
inc
psraw
lock
in
jne
push
pop
js
sbb
out
out
ss
movsl
and
mov
cmp
pop
jecxz
fwait
sbb
lret
or
aad
in
jo
cmp
push
insl
aaa
sub
sbb
cli
jmp
inc
adc
popf
aaa
lock
sbb
test
add
cmp
sub
addr16
push
movsl
push
push
fsubl
mov
ds
negb
ficompl
mov
or
mov
pop
nop
out
adc
inc
cs
mov
xor
sti
cmpsl
push
je
ljmp
div
or
aam
test
cld
sub
sub
bound
das
stos
mov
inc
jl
mov
cmp
lret
gs
lret
rorl
mov
push
xchg
sub
cwtl
jmp
xchg
dec
pusha
push
and
subl
adc
scas
pop
fnstcw
jecxz
inc
inc
sarl
push
cmp
mov
pop
dec
popa
shlb
or
jmp
or
jno
sub
or
pop
xor
inc
insl
rcl
push
mov
sub
ljmp
xchg
inc
jge
gs
or
stc
or
outsl
mov
xchg
mov
call
dec
sub
icebp
dec
int
test
cmp
insl
and
push
repnz
pop
in
push
xorl
scas
ljmp
pop
push
xchg
pop
xlat
sbb
vsubsd
out
les
sahf
sub
imul
mov
sub
sti
icebp
push
or
notl
lods
xor
pushf
pop
dec
sub
and
cmc
call
int
mov
and
inc
call
ss
shrb
dec
push
push
sbb
loopne
sbb
mov
xorl
in
sahf
lea
push
lods
jge
int3
je
divl
dec
out
fs
aam
aad
push
xor
push
mov
pushf
jmp
cmp
aam
out
test
jmp
les
pop
xchg
sub
xor
shl
push
dec
sbb
scas
inc
pop
jp
jle
test
or
sub
adcb
pushf
xchg
mov
addb
mov
les
sub
filds
add
ror
xchg
and
sub
add
inc
movsl
cmp
push
jns
jne
insl
fwait
mov
sub
hlt
incl
in
outsl
push
ret
fsubrs
or
xor
repz
dec
xor
fcomp
xor
ljmp
pop
dec
sub
cmc
adc
nop
push
mov
sbb
mov
mov
push
cmp
ficompl
dec
aaa
in
sti
cmp
cmp
sub
mov
pop
ds
xchg
bnd
jmp
mov
lods
cwtl
jns
dec
rcll
out
ret
xchg
xchg
cmovo
leave
popw
outsb
mov
mov
fcmovnb
stos
iret
cs
aaa
inc
xchg
mov
std
cli
cwtl
and
rcrl
cmc
inc
punpcklbw
push
sub
pop
jmp
push
rol
lods
test
push
pop
subb
repnz
sub
jle
pusha
or
push
stc
and
orl
filds
xchg
cmp
mov
out
mov
mov
sub
movsb
lods
js
jno
je
stos
mov
daa
fs
clc
negb
pop
in
mulb
xchg
xor
add
mov
and
mov
ss
xor
sbb
jo
mov
adcb
pop
daa
ret
vpermd
xchg
inc
mov
lahf
jae
or
pop
ja
push
mov
cmp
mov
sbb
dec
jno
push
add
adc
out
outsl
sub
fsubrl
mov
dec
leave
ficoms
push
mov
sub
sbb
cmp
or
mov
ficoml
push
mov
jecxz
test
inc
pusha
mov
das
dec
ficoml
xchg
inc
movsb
push
xor
add
push
mov
hlt
cmpsl
insb
test
sbbb
xchg
test
xor
sbb
lds
ret
pushf
sbb
pop
cmp
pop
in
mov
jg
mov
loop
mov
xchg
dec
ret
push
call
int
xor
pop
je
inc
mov
mov
es
and
sub
pop
adc
mov
fwait
lahf
cmp
sbbb
ret
popa
rorb
inc
xchg
loopne
std
repnz
clc
insb
sahf
and
cmpsb
in
jb
jmp
pop
bound
sub
pushf
in
push
add
cmp
imul
stos
xchg
sbb
ret
lds
add
rorl
dec
adc
fsts
cmp
mov
mov
xchg
roll
jno
lea
seta
inc
jp
pop
arpl
add
jle
add
aam
jmp
test
ret
jnp
push
negl
mov
and
adc
jp
xchg
mov
push
cmp
mov
icebp
mov
sub
aam
jno
fldt
pop
dec
mov
pop
and
jg
lcall
stos
jmp
sbb
fisubrs
sbb
out
pop
sbb
aam
cmc
lods
push
or
dec
arpl
test
mov
jge
nop
add
push
xor
lret
popa
dec
scas
shl
adc
outsb
repnz
outsb
subl
mov
mov
sbb
pusha
push
pop
sbb
or
sbbl
fwait
or
iret
mov
addr16
sahf
or
sbb
lret
jge
out
jb
cmp
mov
insl
aaa
mov
frstor
in
outsb
dec
pop
add
dec
aas
lret
mov
ljmp
sarl
les
cmc
xor
push
and
jge
movswl
push
dec
leave
fs
fmul
xchg
sub
jecxz
sub
imul
popf
test
cmp
stc
inc
mov
add
mov
mov
or
xchg
dec
xor
mov
xchg
xchg
inc
xchg
pusha
rclb
cltd
out
lock
mov
push
or
pop
lock
aam
xchg
add
subl
pop
xor
cmovno
and
cwtl
test
sub
lea
addr16
aaa
mov
xor
and
shlb
xchg
andb
mov
nop
cmp
xchg
fmull
mov
sbb
out
pop
add
dec
cmp
jge
add
pop
icebp
fmul
test
mov
enter
cmpsb
test
sbb
mov
aad
icebp
orb
xchg
dec
or
iret
fcoms
dec
xor
dec
and
mov
jg
jb
pusha
push
mov
bound
pushf
xchg
mov
jbe
cli
push
or
fwait
sub
pop
fisttpll
add
iret
lock
push
pop
or
mov
lahf
fisubs
into
sbb
icebp
dec
xor
or
cwtl
outsl
cmc
pop
out
push
outsl
or
movsb
imul
mov
movsb
jg
and
into
out
js
out
out
addr16
fwait
push
pop
inc
mov
adc
dec
mov
leave
cs
and
pop
lahf
jne
popa
int
fnstsw
jae
adc
icebp
mov
xchg
mov
jmp
and
and
fcmovne
mov
adc
xchg
bound
xchg
add
popa
cmp
insl
stos
push
jecxz
inc
mov
shrb
les
pop
adc
cmp
xchg
stc
jb
sub
jb
scas
xchg
stos
add
mov
inc
mov
rclb
fstps
mov
pop
cmpsl
fisubs
sub
sub
adc
pop
mov
pusha
aaa
imul
ss
push
enter
dec
int
stos
mov
adc
jp
xor
pop
in
and
jae
push
call
in
mov
ret
lahf
faddl
pop
mov
or
inc
stos
mov
mov
daa
jp
adc
and
xchg
cs
pop
push
fstpl
jno
cmp
sub
call
inc
das
test
jno
mov
push
fmull
fdivrs
mov
pushf
adc
sub
or
imul
int
or
mov
mov
adc
mov
add
pusha
pop
push
pop
inc
xchg
mov
jo
xor
inc
stos
inc
mov
and
test
xchg
les
ret
cwtl
loope
sub
divb
sti
dec
addr16
inc
insl
iret
out
mov
jno
fcoml
lods
daa
lods
out
cmpsl
das
cmpsb
lret
aad
mov
shll
sub
jl
and
pop
fisttps
cmp
dec
ret
not
cs
popf
pop
iret
mov
mov
std
add
cwtl
std
sub
in
outsl
in
scas
mov
out
loop
popa
push
jl
jle
aam
fwait
popf
push
test
leave
cltd
add
pusha
movsl
lds
jnp
jo
sbb
lret
push
cmpsl
pop
sub
cmpsl
push
repz
mov
mov
fcompl
push
ja
add
and
xor
popf
add
mov
icebp
inc
mov
repz
push
and
lock
test
add
lcall
int3
xchg
mov
pop
pop
add
fists
hlt
jmp
dec
rep
out
unpcklps
pop
and
cwtl
and
inc
adc
popa
sub
inc
mov
jo
pop
push
xor
scas
inc
insl
dec
push
stc
clc
dec
shrl
lcall
jns
fldcw
lds
ret
fs
push
cmp
inc
jecxz
adcl
fisttpll
pop
mov
cmp
sahf
es
xchg
aaa
popf
mov
push
dec
adc
jb
mov
push
into
adc
ja
dec
addr16
cld
out
test
add
lods
aaa
xor
ja
cltd
in
pop
sub
pusha
cs
pop
jl
orb
adc
sub
imul
xchg
sbb
sahf
pop
fildl
pop
push
hlt
popa
fwait
inc
cmp
and
dec
push
xchg
cmp
in
xchg
stos
sahf
xor
aad
movsb
outsb
dec
int3
into
mov
fstpt
dec
jno
shll
mov
add
stos
xor
cwtl
adc
xchg
sub
js
fs
cmp
iret
jl
mov
out
dec
shr
gs
or
test
jns
call
fdivp
idivl
or
xorb
je
mov
sbb
ss
loopne
lcall
xorl
movsb
sub
jno
lea
test
test
xchg
shl
ss
jmp
and
jp
call
std
inc
push
pushf
sahf
fimuls
fisubl
stos
cmp
xchg
pusha
ljmp
cmp
mov
xchg
push
pop
test
lock
add
clc
lret
xchg
pop
addr16
dec
outsl
sub
icebp
jg
mov
cltd
mov
xchg
insb
jne
mov
jb
scas
dec
push
mov
ret
xor
cmp
fidivrs
jge
inc
sti
lods
imul
test
adc
aaa
push
sub
cmp
dec
xchg
cmp
inc
sti
cli
popf
daa
sbb
jno
addl
cmp
je
out
push
push
xchg
jp
or
movsl
cmpsl
dec
push
add
push
pop
in
mov
test
repz
sbb
mov
dec
push
sub
in
xchg
mov
les
dec
mov
fwait
les
pop
xor
sub
jp
mov
aaa
ja
test
lret
pop
clc
adc
mov
dec
cmc
dec
mov
mov
sbb
ss
test
je
addr16
add
cmp
mov
test
ret
mov
jae
or
pusha
ss
xor
rcrl
aad
add
cmpsl
lock
add
sub
add
outsl
jbe
dec
dec
xchg
fcmovnbe
inc
dec
add
add
out
mov
and
popf
ret
mov
aam
pop
jb
sub
mov
adc
ja
lods
or
cld
ja
jae
daa
xor
adc
mov
mov
or
mov
icebp
arpl
loope
fstp
add
jge
test
fnstcw
jnp
loopne
imul
and
inc
shrl
jg
mov
fnstcw
xlat
sbb
xchg
push
lea
loope
pop
inc
loope
xchg
ret
xchg
stos
stos
jle
outsl
out
mov
jle
ljmp
data16
outsb
or
out
aad
jno
push
bound
andb
mov
mov
das
adc
jo
insb
adcl
mov
or
imul
cmpsb
or
push
fmulp
pop
dec
inc
les
xor
hlt
push
or
inc
xchg
js
sarl
cmc
test
push
push
dec
xor
ja
jmp
fstps
fsubrs
inc
jbe
inc
sub
sbb
xlat
lret
cmp
insl
test
mov
mov
cmp
bound
mov
pusha
test
jecxz
int
and
jg
loop
es
out
daa
inc
push
sub
in
jg
inc
xor
dec
roll
pop
stos
pop
pop
mov
orl
sarl
imul
iret
push
sbb
outsb
int
mov
dec
sbb
dec
and
inc
test
aam
adc
pop
shrb
push
dec
xor
push
cmp
and
popa
mov
sub
inc
push
mov
insb
push
cltd
fwait
hlt
scas
jne
adc
adc
fcomps
push
mov
cmp
into
inc
mov
sub
adcl
cli
cmpsb
jge
pop
sub
aas
or
push
int3
es
mov
dec
inc
cmc
lds
loop
mov
xorl
subl
fimuls
nop
shrl
push
notb
or
lahf
sub
mov
cmp
and
mov
or
mov
or
xchg
add
loop
sub
add
mov
jo
dec
icebp
rclb
push
inc
repnz
iret
and
fucomi
add
arpl
pop
gs
je
in
data16
push
push
mov
mov
int3
mov
cli
inc
mov
out
test
inc
stos
jecxz
or
fistpl
rclb
inc
push
pop
sahf
movsl
pushf
mov
loopne
shl
pop
sbb
pop
dec
out
xchg
jg
mov
mov
stos
mulb
loope
stos
sbb
lock
xchg
sub
pop
imul
test
jae
jecxz
fdiv
pop
or
jbe
jmp
imul
int
pop
xchg
rcrl
adc
popa
sub
push
cwtl
fstps
xchg
daa
movsb
sti
mov
jmp
lret
les
xor
cmp
mov
mov
bound
dec
xor
ror
adc
repnz
faddl
shll
je
push
pop
stos
xchg
pushf
mov
lods
test
cmp
lret
pop
into
arpl
aaa
push
lds
pop
cwtl
push
jmp
mov
gs
inc
and
or
fcoms
push
enter
jp
jge
mov
dec
sub
les
mov
inc
lret
inc
stc
imul
js
pop
xor
sti
aad
xchg
imul
sbb
inc
push
lret
add
add
pop
push
mov
out
fwait
inc
and
leave
and
push
int3
ja
ss
in
jge
aas
test
or
ds
push
mov
les
cmp
pop
outsl
lcall
lahf
push
orb
mov
int3
rcrb
clc
xchg
int
cmp
mov
enter
mov
popa
mov
fs
mov
clc
es
adc
jb
fmuls
sbb
loope
dec
imul
jl
mov
pop
lret
fwait
jno
pop
cwtl
pusha
xor
fisttpll
gs
loopne
sbb
psubusw
cmpsl
mov
cwtl
shl
lret
xchg
cwtl
pushf
pop
outsl
loopne
in
sbb
sub
mov
std
inc
xchg
cmp
loop
cmpl
mov
sbb
movaps
fs
pop
shll
push
aas
xorb
fcmove
stos
mov
adc
inc
mov
outsl
xor
clc
push
stc
or
int3
fcomip
jge
xor
or
push
fldl
push
mov
rclb
mov
into
dec
sbb
inc
cld
insb
add
mov
push
or
outsb
dec
loopne
insb
jno
push
pop
mov
dec
scas
stos
adc
inc
add
in
pop
dec
sahf
dec
add
cmpsb
mov
les
add
xor
xor
mov
mov
ljmp
and
jp
add
lock
inc
outsl
xchg
frstor
cmp
add
xchg
ds
cmp
lcall
mov
add
or
sbb
fstpt
mov
mov
and
or
mov
mov
pushf
aaa
scas
push
outsb
scas
mov
or
sbb
cltd
test
aam
and
jl
rorl
pop
or
push
movsb
add
lock
popf
rolb
mov
inc
call
or
or
lods
adc
push
insl
mov
push
bnd
addr16
arpl
cltd
clc
cmp
fstps
test
xchg
push
adc
inc
test
orb
mov
imul
gs
fistl
pop
or
scas
sub
inc
inc
mov
js
ljmp
bound
push
stos
mov
add
sbb
in
jecxz
in
std
out
encls
sbb
lret
rcrl
sar
and
adc
dec
inc
call
jnp
add
add
mov
inc
mov
daa
mov
and
shr
test
cli
jl
loop
xor
push
enter
insb
and
lods
mov
into
out
mov
lds
pop
cmp
imul
movb
inc
jmp
add
cmp
cmp
push
dec
adc
outsb
cmp
push
sub
adc
pop
or
imul
aad
out
int3
pop
call
icebp
add
ret
push
out
outsb
push
dec
mov
aam
jp
das
insl
jge
inc
out
in
xchg
lods
pop
pop
and
and
pop
test
pop
mov
jmp
scas
jb
sub
add
ret
jbe
out
jl
movsl
into
loop
ret
rcrb
sub
sub
xchg
jl
push
lds
xor
cmp
cmpsl
loopne
lock
aaa
adc
jns
wbinvd
dec
add
xor
adc
adc
or
sbb
mov
stc
or
mov
call
nop
jbe
dec
and
and
aaa
push
dec
mov
aas
ret
push
insb
lods
dec
and
lret
fsubs
xchg
int
shlb
or
pusha
xchg
ja
mov
lods
cmp
sbb
hlt
jp
ret
or
adc
jne
pusha
repnz
inc
sti
adc
rorb
mov
in
int3
idivl
in
pop
xchg
push
cmpsl
mov
xchg
fcmovnbe
aam
pop
sbb
sti
fwait
mov
aaa
leave
insb
jne
out
fildll
jae
xor
pop
cmpl
pop
andb
testl
mov
and
inc
push
repnz
xor
mov
xchg
js
ljmp
scas
es
pop
adc
scas
inc
cli
inc
cli
push
xchg
dec
pushf
push
cmpsb
mov
insl
scas
jnp
js
lahf
ss
ret
imul
enter
test
and
sbb
inc
or
ja
mov
int3
sub
and
inc
mov
sub
ljmp
dec
test
rcrl
pushf
fs
xchg
xchg
mov
call
test
cmp
leave
pusha
pop
push
dec
sub
xorb
pop
aas
mov
or
lahf
mov
or
std
dec
idiv
ret
push
dec
insb
ss
mov
fstl
ret
out
imul
sub
lahf
sti
xor
nop
push
push
jnp
scas
push
lret
mov
pop
stos
push
loope
scas
lods
sbb
lcall
movzbl
test
cmpl
cmpl
sbb
sar
jns
repz
add
js
xchg
loop
xor
and
and
adc
pop
and
push
pop
mov
addr16
mov
add
shrl
or
in
scas
mov
cwtl
aad
add
pop
lahf
out
ficompl
cmpb
sbb
cmpsl
iret
mov
mov
aad
roll
fdivrl
pushf
pop
and
loopne
adc
jne
mov
mov
jl
xchg
scas
dec
cmp
mov
jmp
pop
sub
push
xor
fisubs
adc
clc
sub
movsl
dec
jge,pt
push
daa
jno
shll
mov
mov
add
mov
mov
icebp
iret
int
xor
cmp
xchg
dec
xchg
mov
outsb
loope
and
imulb
push
mov
dec
out
push
iret
movsb
outsl
nop
imulb
outsl
fidivrl
or
imul
out
inc
adc
popa
or
rcr
addr16
or
push
enter
or
pop
inc
pop
nop
call
in
test
in
ret
cmp
loope
dec
mov
add
adc
insl
sldt
loop
inc
out
fildll
add
leave
insl
rorb
loopne
cmp
jle
ds
test
in
xlat
fwait
lret
test
and
mov
test
jo
or
and
shll
mov
xchg
push
inc
mov
aam
dec
push
iret
sbb
pop
shll
xchg
mov
sbb
adcl
sbb
mov
rcrb
arpl
dec
cmp
xchg
rdtsc
int
lods
imull
mov
int3
test
test
sub
or
sbb
adc
pop
lods
inc
add
dec
enter
dec
pusha
test
mov
in
xchg
out
mov
ljmp
ffreep
cmp
out
in
js
cmc
adc
push
cld
lds
icebp
adc
ret
mov
pusha
add
gs
push
imulb
mov
adc
sub
pop
sbb
and
cmp
jnp
xor
scas
je
fstp
mov
push
aad
loope
fldt
lds
cli
sti
call
and
gs
sub
scas
ret
repz
jg
les
mov
sbb
fstps
dec
mov
xchg
jae
out
or
aam
and
loop
add
mov
cmp
inc
jge
push
jno
outsb
outsl
dec
decb
adc
sbb
cmp
addl
xchg
jle
inc
pop
add
add
daa
jno
jo
dec
scas
outsb
mov
cld
xor
insb
outsl
pop
mov
imul
pop
sub
pop
loop
gs
and
dec
andb
dec
in
fucomp
xlat
xchg
cmp
out
inc
fidivs
out
mov
cmp
sti
inc
scas
iret
pop
sarb
insl
insb
xlat
inc
and
arpl
jge
push
lahf
mov
stc
sub
push
in
jb
cli
push
cmp
add
test
inc
push
pushf
or
es
shlb
xor
xor
pushl
mov
sbb
scas
or
push
jne
cmp
gs
lahf
mov
add
jno
mov
mov
adc
dec
jb
cli
aaa
jge
push
add
leave
cmp
pushf
sbb
pop
xor
outsb
jb
jbe
dec
inc
or
sub
and
lods
jo
pop
sahf
rcl
aas
frstor
jg
jns
push
jae
xor
xchg
mov
mov
inc
sub
jne
mov
mov
jl
sbb
stos
mov
jo
cli
xor
cmp
lea
jle
lret
ljmp
cmpb
push
pavgb
adc
leave
and
sbb
adc
lahf
lods
cmc
aam
jl
adc
repnz
in
pushl
adc
push
adc
xor
loopne
dec
jb
jne
aaa
leave
or
aas
test
add
vaddsubps
push
clc
pop
in
je
adc
and
pop
mov
cld
insb
lods
jle
outsl
push
pushf
sub
mov
in
sti
push
xchg
mov
pop
jp
adc
jge
aaa
outsl
hlt
sub
xor
outsb
mov
dec
fwait
stos
pusha
rcl
push
jns
ljmp
xchg
out
dec
pop
pop
cmp
fidivl
cmpsb
dec
pop
lcall
lods
movsb
and
lret
int3
push
jbe
mov
mov
mov
add
in
or
in
mov
adc
rcrb
js
movsl
sbb
fnstenv
pop
adc
jle
dec
and
loope
divb
dec
pop
inc
inc
add
xor
outsl
xor
das
adc
lods
xchg
sub
mov
in
lods
mov
push
jae
add
sarb
imul
outsl
push
mov
pop
mov
sbb
clc
nop
inc
xor
mov
out
push
in
cmpb
mov
sub
or
push
sbb
fbld
neg
ja
mov
mov
fbld
movsb
fsub
mov
jae
xchg
outsb
cli
pop
push
pop
dec
adcb
jge
jp
std
pop
in
sbb
imul
mov
ds
sbb
scas
lret
mov
jnp
and
into
pusha
push
ljmp
in
inc
jecxz
imul
and
mov
fnstsw
mov
or
cltd
stos
xor
aaa
mov
jp
mov
pop
pushf
shrl
sbb
clc
inc
outsb
xor
mov
shl
mov
add
sbb
cmp
leave
sub
call
and
cli
call
loope
lret
shrl
or
aam
into
mov
mov
cmp
arpl
cld
push
shll
imul
mov
cwtl
lret
jle
ret
mov
push
fstp
and
pop
into
lret
outsb
inc
movl
ret
sub
nop
or
out
cmp
mov
repz
xchg
xor
dec
jbe
sbb
outsl
push
push
scas
mov
pusha
dec
lock
push
mov
test
pop
xor
loop
stos
xor
out
push
sbb
xchg
sub
xchg
xchg
jl
test
sbb
jae
test
adc
mov
imulb
xlat
jnp
fcoml
mov
fldl
lcall
mov
cmpl
in
add
jecxz
pop
xchg
sti
pop
dec
inc
lods
clc
jb
jnp
leave
xchg
out
lock
jb
pop
sub
cli
js
lods
jg
out
or
push
jae
dec
push
inc
cmp
outsl
pop
mov
jb
add
scas
pop
push
repz
test
faddl
sahf
adc
cmp
loopne
outsb
mov
divb
xlat
fwait
test
cmp
test
lret
mov
jg
aas
pushf
or
xchg
out
mov
inc
xor
fmulp
xor
adc
pop
and
js
pusha
roll
jmp
outsb
cmp
push
hlt
inc
dec
lds
movsl
fistpl
pop
cwtl
mov
ficompl
lds
or
push
or
shr
stc
js
push
sub
fs
cmp
mov
pop
data16
lods
hlt
outsl
pop
in
push
nop
popf
aad
sub
pop
push
adc
xchg
or
jae
lcall
pop
sahf
shl
sub
jbe
mov
mov
xchg
and
sbb
xchg
or
cltd
xchg
cmpsl
divl
test
mov
gs
mov
lret
mov
mov
mov
xlat
xchg
pop
xor
stc
lods
and
cmpsb
stos
jl
xchg
test
adc
mov
aaa
out
and
out
addr16
xor
xchg
ja
in
and
jb
push
inc
dec
inc
lock
in
push
or
push
sub
fdivrs
xor
adc
push
sbb
pop
sub
loopne
xchg
test
inc
imul
xor
aas
sub
fcoml
idivb
mov
jmp
cmc
or
and
jmp
xchg
js
push
popf
cmp
adc
mov
repz
test
cmpsl
fimuls
cltd
mov
ret
aas
in
add
jnp
mov
or
repnz
fnstcw
imul
icebp
xchg
fcmove
mov
adc
fnstenv
hlt
adc
adc
fbstp
mov
sbb
add
cmc
sbb
pop
loopne
call
pop
jb
data16
call
ficomps
call
andb
pop
imul
jmp
inc
xlat
das
out
std
pop
stos
xchg
fcmovnb
xor
inc
mov
dec
movsl
test
pushf
sbb
xchg
mov
mov
sbb
lahf
push
scas
cmpl
loope
aad
or
lret
and
inc
pop
nop
pop
pop
mov
xchg
xchg
inc
out
fnstsw
mov
shrl
lds
ljmp
movsl
jne
dec
push
push
mov
jbe
sbb
mov
sbb
push
in
rcl
addr16
rclb
sbb
je
adc
jno
cld
outsb
xlat
enter
leave
in
lea
fwait
inc
stos
pop
sbb
leave
inc
mov
push
insb
test
ljmp
das
mov
xchg
dec
in
add
in
jb
or
inc
pusha
jecxz
jb
jmp
jp
jo
and
mov
aas
push
jge
jecxz
andl
pop
rcll
int
jg
into
dec
mov
dec
cmp
ss
pop
sti
test
mov
and
adc
sbb
mov
repz
inc
adc
pop
dec
std
out
sub
xchg
icebp
xor
lods
cmp
bnd
pushf
mov
xchg
xor
jecxz
les
icebp
sbb
jmp
sbb
in
daa
cmp
or
push
fcomps
cmp
xlat
shlb
pop
idivl
cwtl
outsl
and
orl
fldenv
test
loopne
mov
add
mov
adc
mov
imul
fs
dec
mov
stc
adc
dec
add
push
sub
outsl
jecxz
push
stc
jmp
dec
aas
cmp
scas
xchg
fsub
push
adc
scas
adc
sub
sbb
push
jnp
jp
repz
pop
cmp
jno
cmp
aas
adc
dec
jge
sbb
and
xchg
mov
in
push
xlat
bound
sbb
or
mov
cmp
orb
mov
jl
das
inc
sarb
xor
pop
stos
adc
add
pop
lahf
mov
dec
jns
mov
call
es
fldenv
fistpl
xor
cltd
data16
mov
xchg
and
scas
pop
jl
inc
fyl2xp1
dec
jp
imul
je
inc
mov
jg
lods
mov
jle
ss
repnz
notl
ljmp
jae
es
cmp
out
rcr
cmp
fwait
andl
push
xchg
js
pusha
adc
lds
roll
pop
imul
adc
xor
cli
inc
mov
dec
adc
aas
pop
fistpll
lret
and
cmp
xchg
fcmovnb
mov
sti
std
outsl
mov
cmpsl
push
mov
xor
push
scas
sarb
or
xor
ret
roll
adc
mov
xchg
xchg
imul
mov
sbb
stos
mov
dec
stc
dec
xchg
out
jge
out
xor
pop
rclb
test
sub
test
mov
push
les
sbb
dec
sub
outsl
pop
dec
push
or
cmpsb
push
test
js
xlat
mov
jne
fs
scas
shrb
lret
inc
cmc
jno
vunpckhps
arpl
shlb
mov
pop
cmpl
xlat
ret
adc
mov
pop
ret
test
mov
les
data16
ja
mov
fwait
mov
jmp
sub
aad
push
ljmp
cltd
dec
imul
and
xchg
cmp
mov
inc
mov
pop
fdivr
add
pop
or
mov
pop
inc
xchg
mov
cli
lods
add
mov
loope,pt
adc
int
das
es
push
popf
inc
notb
cld
inc
divb
subb
adc
imul
test
jp
dec
pop
lret
sti
stc
cmp
pop
daa
jge
mov
fnsave
shl
iret
cmc
lret
insl
sub
add
jbe
mov
sahf
xlat
push
adc
push
push
sub
sub
incb
aam
fs
int
add
xchg
mov
xlat
lea
lods
mov
mov
or
fbstp
testb
dec
shlb
xorl
sbb
jecxz
pusha
cmp
ss
pop
dec
enter
lcall
or
xlat
ficompl
loopne
hlt
in
push
fnstcw
cmp
cli
and
push
add
repz
js
fdivr
in
jae
cwtl
lcall
rcrb
pop
add
push
ljmp
xor
push
out
cmpsb
enter
or
mov
xor
mov
add
cwtl
jle
arpl
int
mov
adcl
adc
add
sbb
jp
mov
in
fdivrl
xor
jno
and
or
jb
or
mov
insb
xchg
or
mov
insb
adc
pop
cmp
xor
test
scas
xor
test
push
jb
fcomi
jmp
shrl
pop
xchg
jb
and
les
ds
enter
jmp
push
pop
in
outsb
and
inc
jno
inc
add
push
mov
xchg
je
pop
adc
lea
cmpsl
jle
in
sub
push
ret
and
jmp
daa
pop
cmp
or
fs
dec
push
leave
fdivl
in
ret
mov
cmpsl
aam
icebp
mov
mov
popa
xor
leave
mov
enter
mov
lret
int
sbb
fstp
mov
xchg
insb
test
jno
loopne
pop
mov
dec
shr
inc
pop
jae
ja
orl
rcl
inc
mov
stc
push
and
movb
xchg
cmp
pop
adc
stc
dec
jnp
push
sbb
xor
fidivs
sub
fisubs
in
push
push
adc
sbb
mov
dec
imul
ret
int3
pusha
pop
pop
fs
lahf
inc
pop
loope
sub
xchg
sub
mov
sbb
push
mov
push
or
pop
add
es
xor
lret
cmp
in
das
ret
lahf
or
sbb
jne
icebp
sti
aad
cltd
mov
mov
sub
inc
jae
gs
cmp
call
out
ret
scas
mov
push
cmpsl
jne
iret
test
mov
outsl
sub
sub
push
and
lods
scas
sti
mov
mov
lods
jb
gs
fiadds
lds
das
and
dec
mov
adc
push
mov
dec
test
icebp
inc
je
sbb
sbb
les
in
inc
cmp
inc
ja
jmp
cld
push
sub
sub
cmpsl
lds
or
popf
or
add
mov
insl
stos
pusha
sbb
cmp
dec
xor
xchg
or
inc
sub
mov
in
sbb
sti
sub
jno
adc
mov
cmpsl
imul
xor
lret
push
mulb
inc
pop
and
inc
mov
mov
pusha
mov
je
sub
gs
lock
push
into
xlat
stos
mov
stos
loope
jbe
ljmp
bound
stos
dec
dec
cld
mov
inc
jl
loope
mov
lret
sub
xorb
cmp
and
sbb
xchg
test
int3
dec
dec
adc
pop
pop
inc
adc
dec
call
shlb
adc
mov
mov
js
add
mov
jl
or
adc
iret
dec
stos
and
mov
enter
inc
jmp
sbb
outsl
pop
mov
bound
nop
nop
aam
adc
icebp
sbb
xor
cmp
test
lea
repnz
cmp
mov
or
mov
inc
cmpsb
clc
mov
iret
movsl
data16
testb
mov
lock
mov
das
dec
or
push
addr16
sub
add
adc
jp
and
or
jecxz
pusha
aad
jne
cli
push
test
imul
adc
maskmovq
idivl
push
add
shlb
push
inc
jbe
js
lods
cmpsl
out
subl
pop
mov
dec
int3
arpl
xchg
push
mov
push
fcoms
sub
loop
sbb
stos
in
push
mov
and
sbb
sbb
inc
orl
cwtl
lret
jne
mov
jae
cmp
movsb
mov
outsb
sub
sbb
cmc
sarl
add
lret
cmp
lahf
daa
inc
mov
jns
outsb
jmp
ror
mov
jle
adc
mov
push
shlb
sub
or
cmp
or
pop
xor
jge
adcl
daa
repz
pusha
pushf
inc
pop
imul
jno
imul
xor
add
out
inc
fdiv
adc
jb
adc
pop
test
xchg
mov
aam
lea
xlat
jbe
in
push
lea
hlt
pop
out
mov
push
movsl
xchg
imul
push
jmp
dec
sub
mov
or
mov
inc
pop
ja
dec
addr16
cmp
or
adc
out
ret
mov
push
shlb
push
push
orb
mov
int
std
xchg
adc
lods
popa
ret
inc
aam
insl
xor
and
and
fnstenv
das
mov
out
mov
adc
gs
aam
es
pop
xchg
mov
cmp
push
out
fidivrs
insb
and
push
fldl
xor
inc
dec
lods
addr16
jns
repnz
lea
test
mov
push
clc
xchg
add
fidivrl
adc
loopne
jns
jne
push
jp
repnz
or
outsb
mov
xchg
shrl
cmpsl
xchg
xchg
jae
inc
xlat
jno
cwtl
sbb
push
int
stos
and
push
insl
imul
xor
cmp
push
jne
mov
sub
shl
adc
stos
dec
popf
pop
and
leave
out
mov
cmp
in
pusha
fidivrl
pop
test
mov
inc
inc
sub
ja,pn
iret
pop
fidivl
roll
xchg
cmp
cmp
stos
aas
dec
adcb
push
cwtl
dec
mov
and
cld
hlt
fs
mov
push
or
sbb
add
insl
loopne
cmp
adc
mov
push
sbb
pusha
xchg
cmc
lock
les
repz
add
lods
out
mov
push
lahf
orl
inc
jne
dec
sbb
and
or
mov
cltd
add
xor
pop
and
or
call
or
jnp
mov
mov
cld
outsb
aas
add
mov
stos
adc
scas
addr16
adc
mov
rcrl
lods
sbbb
mov
ror
stos
push
sahf
mov
jbe
push
popf
loope
mov
mov
mov
mov
test
dec
inc
adc
adc
pusha
inc
repnz
jmp
test
mov
stos
mov
rcrl
pop
ret
jge
sub
xchg
inc
imul
aaa
test
ret
pop
adc
fistps
jno
decl
sti
loope
inc
mov
mov
mov
pop
jns,pn
aam
mov
jns
add
sub
int
push
outsl
jp
pop
xlat
test
movsl
outsb
roll
pop
sbb
orb
stc
lret
mov
imul
jge
cmp
jecxz
ret
jbe
push
mov
clc
loope
xchg
scas
imul
into
out
pop
into
mov
adc
loopne
xor
adc
push
jb
xchg
sbb
mov
sub
mov
pop
mov
mov
sti
pop
clc
dec
jne
sahf
mov
adc
cmp
lahf
mov
or
arpl
and
nop
adc
test
pop
xor
jl
adc
cmpsb
loop
add
in
ss
popf
ret
loope
push
bound
cs
sub
inc
jp
js
pop
dec
or
shll
xchg
leave
fdivl
bound
out
aad
out
push
push
pop
adc
cmpsb
cld
ret
or
push
ficompl
xor
cmp
cmp
mov
movsl
lahf
cmc
aas
enter
cmp
jo
into
mov
and
sti
push
pusha
aas
test
jno
out
xchg
inc
mov
dec
mov
jg
mov
loop
inc
push
inc
mov
fisubrl
cmp
cmp
gs
test
push
in
je
sub
add
mov
jmp
xor
pushf
pop
fcomip
iret
pop
jne
xor
aad
scas
dec
ret
and
sbb
sbb
fistl
mov
test
js
inc
mov
addr16
ja
cmc
je
adc
push
inc
sarb
call
xchg
rol
pop
test
std
jle
xor
fsub
cmp
stc
push
in
ret
xchg
imul
push
mov
test
cld
add
jne
mov
sti
dec
std
cmp
call
jl
popa
or
pop
sub
mov
repnz
push
mov
stos
xchg
inc
or
or
sub
pusha
and
jmp
loop
loope
sub
sti
mov
pop
call
or
sub
xchg
in
scas
mov
pop
js
mov
jmp
imul
or
inc
add
shlb
jl
pop
das
mov
sahf
lea
test
dec
pusha
je
mov
fucomip
cmpb
push
inc
fsubrl
aaa
adc
mov
fdiv
shrl
aam
mov
into
insl
jns
cmp
mov
inc
out
inc
and
xor
xchg
pop
aas
call
ficoml
movsl
mov
ret
cmp
push
movsl
ffree
and
test
push
xchg
imul
cmc
js
int
insb
sti
push
popf
mov
test
insb
jmp
icebp
dec
adc
inc
rcrb
insb
mov
pop
or
adc
xor
cmpsl
jecxz
daa
or
fcoml
jo
mov
jno
fbld
pop
andl
int
dec
ja
scas
sti
jns
push
fcompl
das
lea
sbb
sub
lds
sub
inc
xor
fs
data16
and
mov
push
pop
sbb
xor
sub
clc
fdiv
lds
lahf
or
popa
add
add
es
pushf
flds
jecxz
mov
popa
arpl
mov
jmp
sub
jnp
lret
and
mov
add
or
fimull
ret
xlat
push
bound
fs
movsb
jl
mov
sbb
xlat
and
mov
sbb
or
and
lods
inc
out
cmp
xor
mov
mov
das
or
fcoms
cs
mov
adc
or
out
mov
addb
aaa
popf
in
test
imul
cld
xchg
fisttps
jne
mov
gs
in
adc
push
push
ljmp
mov
pop
or
subl
roll
dec
sbb
movsl
mov
mov
movsw
push
xlat
fucomp
xchg
insb
rclb
adcl
xor
out
or
out
and
cmp
pop
loopne
scas
add
dec
adc
lret
aam
mov
sub
mov
push
xchg
sbb
xor
ss
pop
out
sbb
jne
dec
test
shrl
jae
push
out
and
and
or
lock
mov
popf
lea
lea
sbb
or
mov
aaa
cmp
outsl
popf
ds
add
ja
and
das
stos
fwait
cmp
lret
push
lods
shll
in
aas
adc
in
and
jl
shl
test
inc
jg
adc
or
imul
dec
popf
idivl
notb
lcall
jne
or
scas
inc
iret
popf
mov
pop
int3
hlt
lods
sub
sub
fdiv
out
push
mov
lcall
lods
imul
mov
subl
out
pop
into
xchg
xor
inc
sbb
jns
daa
mov
in
or
dec
jmp
pop
cs
aas
nop
sbb
xchg
xchg
sub
dec
lret
cmp
addr16
pop
add
jg
xchg
inc
xchg
sbb
adc
adc
cmpsb
inc
cmp
cld
subl
cmp
xor
sub
addr16
sbb
insl
cltd
sub
repnz
pop
xchg
pusha
push
loope
or
adc
mov
jp
add
ret
xchg
cmp
lock
lret
lcall
das
lods
mov
xchg
testl
sub
cmp
push
pop
push
test
adc
aad
lds
or
sbb
pop
or
xlat
shrl
test
pop
xchg
and
add
cmc
out
pusha
test
aad
dec
cmp
loopne
xchg
mov
mov
dec
push
or
ja
imul
in
clc
add
adc
mov
aam
jnp
add
stos
pop
mov
add
cld
clc
insl
mov
fs
or
pop
les
or
jle
jno
adc
push
shrl
in
cmp
es
xchg
xor
test
push
push
lock
mov
sbb
jbe
or
mov
adc
pop
repz
dec
xor
and
jmp
pop
loop
jle
mov
rorb
es
add
sub
filds
jno
fcomps
hlt
jmp
int3
pop
push
fidivl
pushf
repnz
sbb
mov
sub
test
divl
hlt
xor
ret
jle
hlt
out
into
int
pop
pop
push
cmc
hlt
sar
sbb
adc
add
loope
ljmp
shll
sti
add
movsl
mov
mov
adcb
fsubl
in
xor
inc
xchg
nop
ds
mov
jo
push
sbb
addr16
bound
rorl
insb
mov
sbb
cltd
cmp
xor
inc
and
or
cmp
ja
movsl
adc
xlat
les
xchg
aas
mov
sub
stos
ljmp
push
push
repz
sarl
adc
pop
rorb
mov
ret
sti
push
ficompl
sub
ljmp
sub
push
push
cwtl
xor
imulb
test
adc
cmp
push
push
fcmovbe
fidivs
mov
adc
movsl
push
jecxz
push
fisubrs
insb
adc
js
dec
xor
rol
lret
jle
jg
icebp
sbb
push
sub
subl
in
sub
lods
inc
ja
pop
pop
jge
lcall
push
jle
test
fisubrl
add
mov
push
jno
or
push
pop
pop
push
push
push
jl
in
sti
scas
outsb
jns
repnz
adc
mov
insl
cmp
fwait
out
outsb
mov
sub
stos
movsl
mov
ljmp
pop
fistpl
jno
push
aaa
nop
dec
fcomp
shrl
outsb
mov
xor
stos
ja
mov
jl
mov
fwait
mov
jg
xchg
jb
or
mov
inc
das
jg
sbb
lock
sbb
push
movsb
cli
pop
rclb
test
jne
gs
adc
push
mov
pop
and
pushf
pop
xchg
inc
lahf
ss
inc
mov
mov
cli
int
sbb
ficoms
divb
pop
cwtl
cmp
sbbl
call
inc
rclb
mov
cld
cmc
jne
push
adc
loop
pop
aam
xchg
cmp
mov
add
mov
test
enter
sbb
add
mov
cli
fidivrl
cltd
mov
dec
arpl
daa
repz
mov
mov
and
subl
push
rcrb
ds
or
aas
push
adc
adcb
insb
mov
mov
mul
in
jns
fidivrl
sub
ss
inc
aaa
aad
popa
sub
out
jb
cli
jnp
push
dec
movsb
movsl
sub
repz
dec
add
pop
lea
dec
sub
scas
add
sbb
gs
test
scas
hlt
ss
jecxz
int
sbb
add
xchg
cmp
cli
or
fucomi
dec
sti
mov
int
sub
dec
mov
sbb
repz
mov
mov
xchg
cmp
push
imul
push
ret
push
outsb
xchg
inc
mov
cmp
imul
lods
mov
pop
mov
add
adc
or
push
dec
fcoml
or
into
mov
das
xorb
cmp
in
int
cmp
xchg
push
and
xor
cmc
fwait
mov
data16
ljmp
in
sub
rcl
mov
addb
and
es
and
push
xchg
dec
pop
mov
adc
sbb
scas
rclb
dec
loop
cltd
sti
lock
cld
pop
jecxz
int3
mov
lcall
jo
and
cmp
loope
inc
mov
test
movsl
rolb
add
lcall
push
xchg
pop
out
sbb
dec
mov
clc
dec
and
jns
cmc
push
cmc
xor
sub
outsl
sub
lret
sbb
jns
adc
add
imul
sbb
in
fidivrl
hlt
push
sbb
pop
add
sbb
cmp
stos
loope
xchg
test
inc
xchg
orl
cltd
pop
dec
imul
or
lods
cmp
pop
lods
into
shlb
xchg
mov
gs
xor
shrl
arpl
mov
fld
icebp
xor
mov
ret
push
mov
mov
push
pop
dec
dec
cmpl
js
outsb
lret
popa
imul
cmp
shl
faddp
sbb
out
push
out
rcrl
inc
out
pop
repz
gs
sbb
sub
xor
sahf
mov
ja
lahf
inc
push
sbb
push
fs
mov
outsb
jae
pop
mov
test
scas
insb
mov
dec
in
pop
bound
sub
lcall
cmp
loop
test
cmp
scas
dec
insb
inc
cld
sub
jnp
xchg
mov
fnstsw
jno
add
cmpsb
mov
repnz
push
sbb
sti
test
jge
xor
adc
aaa
outsb
loope
stc
pop
xor
xor
les
adc
mov
mov
and
icebp
adc
fsub
loop
and
xchg
in
data16
clc
aaa
movsb
es
mov
jae
ret
sub
fs
mov
ret
lret
push
jp
pop
push
inc
lcall
sahf
sub
or
int
pusha
ljmp
clc
cmpsb
into
repnz
fiaddl
or
xor
sbb
pop
sub
sbb
sub
and
dec
mov
mov
sti
jb
subl
jmp
into
stc
jl
add
gs
fimuls
lods
or
jb
ret
sub
dec
shl
aaa
adc
rclb
int3
aaa
jb
cmp
pop
sub
jecxz
in
les
sahf
stc
adc
mov
mov
mov
pop
dec
fisttpl
mov
ret
sti
and
popf
orb
sub
push
lcall
push
dec
mov
xor
jp
out
and
pop
dec
xor
pop
xor
inc
popa
adc
lea
mov
popf
push
pop
inc
nop
xchg
pop
xchg
inc
lret
cs
test
push
in
subl
fwait
jb
clc
cmp
sbb
mov
outsb
cmpsl
pop
inc
inc
lds
cli
jnp
mov
addps
leave
xor
movsb
pop
jno
rcrl
mov
rolb
sbb
dec
ret
xchg
mov
inc
push
jp
lods
mov
loop
les
sbb
sbb
push
mov
flds
mov
xchg
push
xchg
push
xchg
pop
mov
sbb
mov
mov
xor
shl
sbb
sbb
mov
jne
jecxz
sub
dec
mov
daa
sbb
cs
or
repnz
mov
dec
fldt
fs
xchg
div
jecxz
cld
es
pop
pop
pop
push
mov
fucomi
adc
sbb
or
cwtl
out
mov
imul
mov
or
inc
inc
loop
mov
popa
and
sbb
out
cmp
cmp
cmp
pop
push
ljmp
inc
lret
aam
nop
or
cwtl
imul
sarb
xchg
inc
xchg
push
inc
cmp
loope
in
add
fbstp
add
xor
and
aad
mov
jl
inc
push
cmp
aad
jl
xlat
xchg
xchg
sub
shlb
aas
or
arpl
sub
jge
arpl
lock
push
mov
loopne
aad
mov
call
repnz
mov
in
or
popa
clc
das
scas
mov
nop
daa
xlat
test
cmc
cmp
rcll
aam
or
jae
jp
inc
mov
ret
inc
inc
lret
sbb
cmpsb
jl
dec
scas
insb
mov
dec
jo
mov
jo
cs
sub
icebp
ret
xchg
out
push
addr16
inc
xchg
outsb
push
arpl
lret
sub
dec
mov
inc
ss
push
mov
cmc
test
sub
mov
xchg
pop
cmc
imulb
cld
sbb
mov
or
add
or
std
xchg
sbb
inc
sub
sbb
add
loope
dec
pop
sub
lcall
cmpsl
aad
out
jo
cs
or
sub
sub
inc
inc
mov
repnz
aam
nop
xor
fidivrs
xchg
dec
push
dec
and
jbe
out
pushl
jle
mov
cmp
add
cmc
sub
mov
mov
test
sub
ret
aad
sbb
cmpsb
rcl
pop
aaa
pop
test
mov
int
mov
inc
mov
adc
lcall
imul
xchg
mov
mov
jbe
push
ror
and
pop
ja
cli
sub
or
jecxz
pcmpeqw
cmpsl
or
mov
push
sub
xor
dec
fmul
mov
push
icebp
jmp
and
jb
test
push
lock
orb
aaa
mov
sbbb
lock
dec
xchg
lret
inc
mov
movsb
lds
cmp
jle
ret
addl
push
sub
mov
sti
jge
sub
fucomip
push
pop
xchg
add
jbe
jp
mov
call
div
test
add
scas
sbb
mov
mov
pusha
bound
jecxz
lock
aam
outsb
dec
in
cld
les
cmp
hlt
xchg
fwait
into
fistpll
cmp
push
push
and
jns
dec
xor
cmc
cmp
les
inc
sub
jae
mov
push
test
js
xchg
out
sbb
adc
cmp
filds
mov
dec
sub
cwtl
inc
rorb
sahf
inc
sub
xchg
ret
mov
adc
out
ret
mov
sbb
imul
nop
jo
fdivrs
push
xchg
mov
inc
out
lods
dec
outsb
jae
adc
lods
in
mov
incl
push
js
mov
fsubs
mov
xchg
inc
loope
sub
gs
xchg
jle
push
mov
pusha
sahf
sbb
sbb
arpl
js
test
jle
mov
xlat
mov
mov
mov
dec
arpl
adc
cmp
repz
pop
and
pushf
lods
cwtl
dec
lock
fistpll
and
add
adc
pushf
sub
adc
xchg
stos
add
lret
aas
subb
jns
sbb
es
ret
out
out
rclb
into
mov
fwait
cmp
sub
cmc
std
xchg
mov
mov
xchg
movsb
mov
scas
mov
sub
xchg
sbb
sub
or
fiadds
ret
adc
sub
jnp
aaa
clc
out
mov
test
or
or
xchg
into
mov
jge
inc
cmp
sub
js
aad
adc
xor
lcall
mov
pop
xlat
mov
insb
gs
add
xchg
push
xchg
inc
jnp
mov
leave
sub
in
ja
orb
mov
add
and
sbb
mov
lahf
pop
jns
mov
stos
push
pop
mov
push
mov
ljmp
xor
ljmp
or
enter
cmpsl
movsb
lahf
or
lods
cmp
cmp
cmp
ret
daa
arpl
or
jg
push
js
lock
mov
jo
or
push
std
adc
sub
xor
pushf
in
pusha
sbb
sbb
clc
sbb
mov
aas
lret
jle
outsl
les
mov
enter
sar
dec
jp
ss
adc
sbbb
js
aaa
jecxz
loopne
jge
pop
lret
jb
mov
xor
test
add
mov
sbb
pop
and
fstpl
and
cmpsb
jp
sar
push
fwait
jmp
adcl
insb
jne
add
push
add
or
and
gs
in
dec
faddp
sub
enter
imul
push
dec
jl
sti
clc
or
in
or
mov
out
mov
jnp
pop
dec
dec
aas
movsb
cmp
bound
stos
jl
int
insl
pushf
dec
pop
pop
jle
or
adc
mov
sarl
mov
push
jle
mov
mov
lahf
mov
repz
inc
cltd
out
or
inc
mov
inc
lock
mov
xor
mov
scas
mov
mov
dec
insb
arpl
and
push
nop
pop
or
stos
test
or
jecxz
subb
mov
insb
cmpsb
icebp
rorl
dec
aas
xlat
ret
cmp
sbb
out
or
dec
call
sub
sub
shll
sub
xor
fs
popf
fstps
repz
xchg
mov
cmp
into
fs
inc
push
lret
and
cwtl
popa
add
inc
xorb
gs
test
sub
adc
addr16
or
sub
cld
push
adc
cmp
rcrb
shlb
mov
das
arpl
ja
repz
xor
iret
data16
aad
fdivl
fstpt
inc
arpl
jg
sbb
and
nop
das
pop
sbb
cmpsl
adc
jnp
in
jp
push
arpl
repnz
push
or
data16
pop
scas
dec
adc
fstpl
popa
scas
nop/reserved
movsb
test
fwait
and
sub
pop
or
loope
dec
int3
pop
jp
adc
cltd
push
and
xor
or
cmpsl
push
scas
icebp
jo
mov
jecxz
out
push
jge
popf
ds
or
imul
sti
pop
aam
sbb
fistps
xchg
fildl
mov
xor
jle
cmp
inc
cmp
shrl
fwait
mov
pushf
orl
in
data16
push
lea
ss
sbb
aad
mov
push
fiadds
jecxz
add
das
in
leave
lods
lock
ds
jbe
push
gs
mov
in
gs
inc
in
xchg
mov
lds
stos
lods
or
inc
cltd
jno
les
or
iret
cmpsb
sub
stc
rcl
push
fsubr
out
addr16
imul
int
stos
cwtl
push
dec
ret
cmc
sbb
inc
mov
les
mov
xor
mov
cli
ss
shll
fs
stc
ja
pusha
push
out
jmp
out
ja
cmpsl
pop
repnz
test
test
jo
mov
jno
addr16
mov
mov
loope
imulb
and
into
lahf
pop
adc
adc
pop
inc
rorl
lock
mov
and
pop
jns
cwtl
popa
popf
cwtl
and
sbb
xchg
pop
dec
aas
das
shlb
frstor
jmp
scas
inc
xchg
dec
xchg
xchg
lds
mov
insb
mov
stos
push
add
rorl
int
dec
mov
pop
inc
gs
adc
mov
mov
into
push
xor
std
cmpsb
mov
leave
mov
lock
sbb
jecxz
push
mov
xchg
stos
mov
sbb
out
push
ljmp
scas
sbb
in
add
sub
aas
add
jae
sbb
xchg
mov
aaa
add
push
out
mov
test
pushf
push
imul
cltd
ror
jmp
jo
inc
pop
js
and
lcall
mov
mov
cmpsb
repnz
lods
xor
xchg
inc
push
in
cmpb
adc
test
es
insl
pop
icebp
mov
je
sbb
fdivrs
mov
xchg
inc
sbbl
das
pop
cmp
loopne
and
xor
lret
out
ret
ja
push
js
xchg
outsb
cmp
and
fidivrl
stos
add
mov
dec
jb
sti
notb
fcmove
add
ret
aad
dec
aaa
sub
imul
or
pop
mov
adc
adcb
in
ss
stos
ret
jno
and
dec
aas
insb
jne
jb
jmp
jo
xor
clc
cld
cmp
mov
test
adc
add
or
jmp
outsb
ret
fbld
mov
repnz
cmpsb
jb
xchg
fnstsw
xchg
mov
loop
or
sub
into
ret
jle
push
out
push
ljmp
aas
adc
jl
out
pop
inc
inc
test
sub
out
arpl
lahf
and
mov
loopne
ret
mov
dec
inc
scas
cmc
fcomp
jp
fistl
mov
sub
andl
ja
cmp
sub
clc
not
fwait
lods
cmpsb
outsl
push
dec
sbb
fsubr
push
sti
mov
mov
dec
cs
jge
in
jns
push
sahf
lret
sub
rcl
into
stc
and
out
nop
mull
shr
or
inc
adc
fbld
fadd
jno
out
mov
js
add
aad
out
ja
mov
cmp
dec
stos
pop
inc
orb
sub
fsubl
jecxz
aas
enter
pusha
dec
mov
fs
shll
mov
int3
pop
outsl
xchg
or
xchg
jmp
cmp
jmp
xchg
shrb
and
xlat
lods
incl
mov
lea
mov
scas
add
mov
jmp
cmpsl
xor
subb
mov
dec
lea
push
pop
cmp
and
fistps
out
fdivs
sbb
xor
sbb
push
add
mov
mov
test
dec
push
adc
inc
and
xor
xchg
insl
xchg
orb
pop
roll
sbb
fidivs
dec
pop
loop
lcall
adc
push
inc
xor
cmp
and
or
sbb
lret
pop
or
shr
sub
jp
bound
out
push
pushl
pop
lds
cmp
jmp
xlat
mov
mov
sti
lea
mov
cmc
pop
or
sub
test
rorl
fcmovnb
adc
mov
js
fldcw
xchg
xor
in
sbb
sti
fwait
test
lcall
mov
push
mov
call
cs
loopne
out
sbb
jle
sub
mov
sar
jns
inc
cwtl
stc
sahf
in
push
and
jbe
aam
xchg
iret
push
inc
mov
fsubs
jle
push
cmp
and
mov
mov
lret
push
xchg
or
pop
mov
mov
in
add
and
lret
push
xorb
call
or
mov
ficoms
sub
mov
or
pop
in
xor
mov
dec
lret
inc
mov
push
lods
out
imul
push
adc
mov
mov
loope
jae
dec
xlat
xchg
movntps
xchg
xor
pop
ja
pushf
sub
and
shl
and
mov
pop
negl
inc
int3
xchg
pop
sbb
xor
dec
negl
aad
xchg
cmp
and
mov
mov
out
daa
add
xor
scas
fidivs
jne
jno
ret
push
mov
mov
fdivrl
fbld
leave
and
movsl
fs
movsb
and
call
aaa
cmp
movsl
push
mov
int
movsb
pop
push
movsl
je
scas
pushf
leave
xorb
lret
call
inc
pushf
cmp
dec
jnp
push
gs
fwait
sub
add
out
mov
cmc
test
mov
es
ds
mov
outsl
jg
int3
int
push
xor
std
push
xor
lods
push
pop
inc
stos
lods
mov
ja
outsb
or
jp
sti
pop
repnz
in
js
inc
fists
push
push
and
aaa
sub
aas
pop
fsubl
mov
inc
xor
shrb
icebp
inc
jle
arpl
jg
cmp
aam
dec
rorl
into
fisttps
dec
sub
cli
imul
xorl
or
stos
loop
mov
mov
add
loopne
xor
pop
out
push
repz
xchg
aaa
and
cmp
lahf
cmp
sbbl
rorb
add
daa
sub
cmpsb
mov
add
pop
aam
stos
int3
mov
loopne
aas
sub
sbb
xor
or
aad
in
inc
jecxz
push
hlt
xchg
ljmp
xor
enter
scas
dec
or
add
fcoml
jge
pop
xor
jbe
lods
cmp
scas
xchg
sbb
pushf
jnp
cli
in
push
loop
enter
int3
addr16
loopne
and
xor
icebp
clc
rorb
or
or
repnz
xor
repz
aad
pop
out
and
loop
not
cmpsl
jle
push
mov
ljmp
adc
jle
xor
lods
ror
pop
fildl
mov
lret
rcr
add
inc
jae
es
xchg
pop
mov
sbb
inc
push
in
cmpsb
dec
lret
pop
and
pop
leave
mov
in
pop
mov
mov
inc
dec
push
push
sbb
out
daa
and
jne
fwait
xor
rcrl
lods
mov
subl
cmc
xlat
jbe
xor
adc
fnsave
jmp
and
xchg
sbb
or
pop
and
pop
adc
testb
push
iret
outsl
push
sbb
push
pop
push
ret
sub
jge
xor
imul
fbld
lret
faddl
fsubrs
mov
lds
inc
shr
jmp
mov
mov
insl
cmp
cmp
lahf
stos
inc
mov
pop
mov
add
adc
add
push
dec
inc
sarb
mov
sbb
aaa
mov
inc
xor
jle
jno
cmpsl
mov
jecxz
adc
jb
jae
sti
and
dec
inc
adc
stos
fs
xor
pop
mov
imul
out
sbb
in
daa
add
push
icebp
cmpsb
stc
push
sub
arpl
mov
mov
push
or
xchg
imul
cmp
push
mov
sbbb
pop
bound
push
test
add
lret
add
loopne
mov
inc
pop
out
lcall
mov
pop
mov
mov
cltd
aad
fwait
sub
scas
out
shll
inc
xchg
ret
pusha
hlt
imul
call
sub
mov
aaa
shlb
fstps
push
and
fldl
mov
repz
xor
and
in
pop
pop
dec
cmp
or
xor
cmp
hlt
add
js
cmp
mov
int
lret
dec
lea
mov
pop
into
pop
ds
sbb
leave
icebp
mov
fbld
add
sub
add
mov
cltd
es
lock
out
push
testl
mov
sbb
scas
jne,pn
pushf
xchg
clc
sahf
stos
fadds
sbb
and
jb
sub
nop
sbb
dec
ljmp
xor
xor
push
cli
xchg
inc
bound
das
pop
in
shrl
jmp
in
mov
addl
xchg
xor
imul
data16
subl
mov
xchg
adc
cli
jle
push
mov
push
push
out
aad
sub
mov
into
dec
ss
fsubr
js
push
shrb
mov
inc
mov
jl
lds
mov
fildll
mov
dec
lcall
movsb
fwait
cmp
out
xchg
in
insl
and
fidivrs
or
xorl
js
mov
ffree
mov
or
xor
outsb
sbb
xchg
mov
cwtl
inc
jb
xchg
test
stc
fs
or
dec
jge
lahf
mov
xor
bound
insb
lahf
adcl
push
push
xchg
stos
icebp
mov
call
imul
movsl
push
xlat
push
iret
or
push
xor
sbb
outsl
leave
inc
adc
loope
mov
cmp
or
aas
and
hlt
notl
in
outsl
pusha
cli
je
xor
ja
and
aam
out
lods
movsb
cli
mov
pop
cmp
mov
and
mov
sub
dec
js
jb
mov
cmp
stc
push
adc
mov
xor
je
jno
movb
xchg
xchg
mov
dec
xchg
pop
ljmp
sbb
popa
push
aad
lret
mov
mov
lds
in
push
jae
jb
enter
sti
out
sub
gs
dec
mov
cmc
aas
pop
icebp
xor
testl
cli
push
divb
push
outsb
add
lret
sti
dec
lcall
js
mov
mov
imul
test
pop
cmpsb
push
mov
out
jle
lods
pop
pop
fbld
dec
loopne
lahf
lret
pop
aad
movsb
mov
push
outsb
xchg
pop
and
push
fwait
out
ret
repz
rcrb
mov
jb
mov
add
push
or
lahf
fsubs
mov
testb
lds
cs
dec
xor
movsb
test
pop
rorl
clc
adc
stos
xor
sub
add
dec
xchg
je
xchg
dec
fmulp
imul
sub
cmp
mov
dec
pop
lahf
xchg
mov
jge
push
addb
dec
jae
jmp
push
test
cld
movsl
mov
icebp
cmp
cmp
aaa
pop
aam
mov
xchg
repnz
pop
mov
negl
or
cli
mov
or
shll
lret
fldenv
and
cmp
push
mov
js,pt
rorb
in
ret
lds
xor
in
fistpll
in
mov
leave
xchg
sub
add
xchg
mov
out
jmp
je
sbb
inc
lods
xor
inc
mov
mov
mov
test
xchg
movsl
das
mov
push
mov
or
inc
pop
dec
dec
sbb
dec
mov
cmp
inc
insl
adc
pusha
outsl
fs
loopne
loope
out
cmp
jl
sub
jmp
xchg
dec
mov
inc
sbb
add
add
popa
inc
push
xlat
ret
ss
push
rcl
sub
filds
mov
es
push
xor
add
fisubl
sub
jns
adc
sbbl
data16
data16
sbb
push
jmp
fistpll
aaa
adc
sub
push
mov
push
cmpl
adc
int3
jg
xor
adc
cmpsl
int3
dec
sub
loope
hlt
ja
or
out
mov
es
xor
xchg
jnp
sahf
add
shrb
sbb
cmp
rclb
int3
pop
bound
push
sub
and
jae
pop
mov
xor
add
xchg
add
xchg
hlt
add
insl
cmp
xchg
dec
out
add
or
out
mov
pop
push
inc
cmc
xor
sub
fldlg2
mov
adc
fistl
add
inc
and
jl
sbbl
cmp
enter
mov
lret
inc
push
inc
int
into
ljmp
sti
mov
fldt
out
repz
nop
ffree
shl
add
mov
lahf
rcr
std
push
jecxz
jmp
testb
mov
lods
iret
lret
or
mov
vpslldq
loopne
push
mov
rep
outsl
jnp
sbbb
pop
adc
adc
call
aam
mov
xchg
stc
sarl
aaa
push
pop
mov
dec
rclb
sub
ficoms
je
push
xchg
leave
lods
fdivr
ja
outsl
mov
popf
jae
mov
mov
xor
cwtl
test
in
call
imul
adc
cmp
ja
ffreep
jno
flds
mov
pop
ss
mov
adc
and
out
xchg
jo
ret
cs
push
dec
cmp
repz
xchg
leave
lods
mov
add
fstps
sarl
scas
jecxz
push
push
jbe
and
adc
test
lea
aam
mov
fisttpll
adc
lods
fcmovnb
fidivs
pop
ficoml
fistpll
dec
mov
and
sub
loop
mov
jb
sbb
pusha
ljmp
add
push
push
outsl
pop
push
push
push
cmp
dec
or
jmp
mov
inc
ficompl
sub
gs
jo
gs
lods
add
outsl
call
fcoms
aam
lret
out
push
insl
xchg
shll
pusha
rcrl
mov
push
xchg
push
mov
xchg
jns
repnz
xchg
push
xor
outsb
addl
mov
scas
mov
lock
ror
inc
sub
pop
mov
js
data16
pop
add
pop
push
or
es
or
dec
outsb
aas
hlt
or
xchg
dec
xor
scas
mov
scas
sub
iret
inc
dec
inc
mov
inc
dec
stos
mov
aad
sub
mov
sub
adc
jae
mov
cmpsb
adc
aas
sub
mov
and
cwtl
ret
pop
and
jp
xor
mov
mov
aaa
inc
scas
rclb
dec
out
fidivs
fucomp
and
mov
add
flds
outsl
les
rcl
pop
sbb
push
adc
cmp
test
add
mov
or
test
mov
call
fstpl
or
shll
jo
dec
incl
arpl
mov
scas
xor
es
jg
hlt
jnp
mov
xorl
mov
shll
lock
jns
adc
cmp
and
jg
in
pop
mov
shll
aam
test
add
mov
test
ljmp
enter
sti
jle
loopne
ret
iret
sbbl
stc
mov
neg
mov
mov
pop
pcmpgtd
sarl
cmp
fs
mov
mov
aaa
imul
mov
sub
dec
cmp
andl
addr16
fistps
or
xchg
push
adc
sbb
push
adc
sbb
cwtl
stc
lcall
xchg
or
rclb
mov
mov
inc
push
cmpsb
or
pop
divl
aad
sub
adc
pop
adc
add
mov
push
and
cltd
imul
inc
sti
inc
stos
pop
sarl
rcr
mov
xor
lret
nop
fidivs
push
push
push
and
fadds
sbb
xchg
sub
in
shl
sub
push
pop
xchg
mov
or
xor
mov
lahf
jo
cmp
mov
sbb
cwtl
mov
add
sti
lds
std
pushf
push
mov
pop
and
aas
and
loope
jnp
mov
out
fwait
or
mov
push
sub
and
inc
int3
stos
cs
sbb
repz
xor
shlb
jbe
loopne
rcrb
sbb
sti
inc
gs
sub
movl
inc
pminsw
xor
mov
sbb
sbb
adc
push
inc
dec
add
stos
xchg
dec
cli
int
lahf
xchg
push
jmp
mov
imulb
cmp
inc
add
mov
sahf
outsl
fnstcw
xchg
cmpsb
test
mov
aaa
outsb
int3
cmpsb
shlb
in
adc
cmp
out
out
dec
add
xchg
into
icebp
and
mov
adc
xchg
icebp
pop
rorl
xchg
mov
call
pop
xchg
in
fidivrl
jp
int3
jne
jge
in
push
jg
dec
scas
push
mov
aam
je
adc
or
out
repz
int
notb
mov
xor
cwtl
loope
dec
jae
mov
xchg
add
rcr
hlt
sbb
mov
push
popa
fnsave
loope
cmp
sub
sub
jnp
xchg
mov
or
pop
je
inc
fidivl
mov
push
sub
subl
mov
lock
mov
add
xor
sbb
sbb
fldt
cmp
mov
cmp
inc
add
jle
arpl
pop
ret
jo
xor
bound
jae
sub
dec
mov
insb
sub
fcmovne
dec
popf
into
fiadds
jmp
rcl
outsl
sbb
ljmp
jmp
jge
rol
int
jg
cmpsl
into
insl
pop
mov
pop
jl
lahf
lret
leave
int3
in
pop
sbb
mov
pusha
xor
mov
xor
push
cmp
mov
and
jno
xchg
xor
xchg
das
pop
daa
xchg
push
shlb
roll
dec
imul
stc
mov
push
enter
xchg
jg
cmpsl
jne
pop
jg
jns
shl
fstpl
jmp
mov
mov
lahf
loopne
sub
pop
lcall
dec
add
mov
xor
mov
iret
push
pop
rol
mov
dec
hlt
dec
cs
pop
test
jmp
lahf
push
xor
sbb
icebp
cmp
or
sahf
pop
xchg
psrlq
fmuls
bound
adc
and
pop
or
in
adc
mov
push
jmp
xor
sub
test
in
xchg
sbb
iret
lahf
test
sbb
sub
mov
adcl
daa
and
out
pusha
int3
in
or
in
imul
nop
mov
ret
mov
dec
jge
push
in
add
sub
xchg
xchg
or
xchg
dec
cltd
fisubrl
lds
mov
nop
xchg
sub
clc
ss
xchg
push
push
add
out
repnz
jnp
mulb
jnp
pop
sbbb
jle
cmpsl
xchg
xorb
jp
imul
and
mov
adc
cld
jnp
test
shlb
xor
int3
imul
sbb
and
mov
bound
inc
rcl
imul
subb
lods
inc
in
ss
push
jecxz
push
popa
push
sti
lret
fs
cmp
xor
mov
fstpt
adc
shll
int3
pop
insb
mov
test
mov
int3
clc
inc
cwtl
in
adc
mov
add
pop
fidivs
lods
les
jnp
iret
loop
sub
push
fcmovnu
inc
and
add
push
xor
addl
dec
stos
sbb
fwait
je
push
in
mov
add
adc
loope
fists
ret
cld
inc
cmp
mov
stos
mov
pushl
xlat
mov
jge
dec
pop
mov
sub
aam
rcl
cmp
xor
fidivrs
dec
push
sbb
pop
test
pop
in
push
mov
jno
or
adc
or
or
add
dec
or
push
fisubrs
pusha
adc
dec
ffree
dec
bound
pop
jnp
cmp
ds
pop
mov
dec
shlb
mov
fs
push
out
addr16
adc
dec
or
popf
cli
push
mov
sub
insl
dec
mov
cli
rorb
or
outsb
jle
test
pop
js
vpmuludq
cwtl
das
or
in
dec
adc
and
jle
hlt
sub
mov
sub
sbb
andl
scas
clc
in
push
lock
pushf
inc
jno
mov
and
lea
or
xor
rolb
shlb
enter
out
sbb
iret
sub
add
push
dec
fwait
or
fsubrl
inc
imul
sbb
add
les
cmpsl
into
pushf
fimull
add
and
gs
jo
mov
lahf
xchg
mov
mov
test
in
mov
dec
jns
clc
lcall
push
jecxz
nop
sub
scas
dec
js
jns
sbb
fstps
inc
mov
inc
ror
and
insl
icebp
mov
inc
xchg
and
add
ret
shll
add
testl
push
mov
cmp
mov
mov
push
inc
call
sub
jmp
sub
adc
jge
push
cmp
ja
in
repnz
xor
pop
pop
xchg
inc
jmp
pushf
mov
mov
add
mov
xchg
dec
cmp
pop
push
push
inc
lock
sbb
test
adc
and
mov
fbstp
stc
mov
fwait
daa
push
inc
push
cmp
ficoms
or
out
imul
js
test
push
adc
bound
push
inc
mov
jo
fcmovnb
out
movsb
push
xchg
enter
icebp
cltd
mov
insb
enter
pop
mov
scas
cmp
pop
adc
iret
mov
cmp
test
inc
in
pop
fdiv
cmp
sbbl
loop
stc
pop
cmp
or
push
js
jno
mov
push
int
mov
iret
popa
and
add
loop
xchg
sub
mov
mov
pushf
dec
or
xor
repz
enter
mov
jne
into
dec
clc
xchg
and
jle
sub
cmp
shlb
push
mov
mov
mov
cmp
test
ret
fistps
cmp
inc
or
pop
pop
mov
xchg
adc
jl
xchg
add
test
mov
in
push
or
xor
pop
in
dec
divl
dec
les
aad
pop
jns
fsubl
std
cmpsl
jge
loopne
inc
mov
loope
push
roll
test
inc
loope
jno
xor
jle
push
aam
popa
mov
add
mov
pop
divb
cmpl
leave
ret
movsl
mov
sub
adc
insb
pop
xchg
jns
mov
test
sub
fldt
pop
ss
lahf
mov
fstl
sub
xorb
adc
or
lods
popf
imul
mov
pop
fidivrl
jge
cli
xchg
popf
cmp
test
jns
or
xor
test
test
test
push
add
xorl
icebp
addr16
dec
adc
outsb
mov
mov
iret
jp
push
jmp
out
out
jae
leave
push
adc
dec
lahf
cmp
icebp
push
das
lds
mov
outsl
stos
mov
insb
mov
pop
sbb
inc
sub
ljmp
int3
dec
cmp
add
mov
pop
fcmovnu
mull
sbb
pop
nop
loop
and
dec
push
repz
arpl
jle
inc
dec
xchg
sarb
imul
lea
mov
xchg
popf
xchg
jle
push
int
fldenv
shlw
lock
and
enter
adc
daa
lds
lahf
cmp
pushf
mov
int3
lcall
inc
dec
cmp
dec
cmpsl
rcr
xchg
and
cmp
lahf
jg
fisttps
adc
out
push
fisttps
insl
jle
std
les
xor
jmp
not
mov
movsb
add
rcl
push
xchg
pop
dec
or
and
lcall
mov
add
rcrb
mov
fdivrl
movsb
lahf
pop
imul
repz
push
and
mov
push
xchg
mov
rorb
call
xchg
inc
or
pop
mov
mov
mov
or
stc
inc
sbb
inc
hlt
loopne
fcoml
and
and
ret
push
arpl
jp
sub
iret
push
push
pop
sbb
lods
loopne
pop
mov
mov
repnz
leave
push
out
mov
subl
jge
adc
dec
ret
dec
xor
roll
std
mov
mov
cmp
cld
out
add
mov
test
mov
pop
mov
out
enterw
scas
inc
mov
rclb
in
cmp
pop
shlb
push
data16
pop
cmp
pop
sbb
das
fiaddl
xor
sub
pop
inc
jno
outsl
mov
lahf
jo
xor
test
push
cmp
push
mov
jp
sbbb
call
mov
popf
add
jmp
mov
outsb
in
sbb
add
mov
imul
nop
pop
jb
out
adc
in
push
push
nop
es
xchg
testl
sub
add
sti
mov
pop
fdivrl
push
jae
push
and
imul
sub
xchg
add
loope
pop
push
pop
les
pop
aaa
push
stos
mov
outsb
pusha
and
int
xor
mov
mov
mov
daa
ja
lret
fs
or
lds
insb
shl
inc
sarl
push
jne
ja
insl
pop
xchg
arpl
lea
mov
xchg
jns
neg
push
adc
xor
stos
mov
aaa
sbb
mov
pop
cwtl
in
shl
hlt
sarl
and
sbb
mov
inc
mov
and
popa
ss
sbb
dec
and
cli
dec
mov
lods
lods
xor
sbb
mov
xor
add
lcall
repnz
cmc
mov
leave
faddl
inc
add
push
add
dec
shl
sti
mov
mov
mov
push
xor
nop
pusha
sbb
scas
bound
dec
mov
mov
mov
inc
adc
cmp
cld
bound
mov
mov
push
sub
push
shll
sbb
out
sub
es
enter
mov
call
push
push
ja
dec
sbb
and
jge
inc
or
mov
stc
cmp
test
push
fcoms
js
inc
ds
shll
inc
stos
dec
faddl
fsubr
fucomi
adc
arpl
aas
sti
icebp
add
cli
mov
adc
xor
call
cmc
iret
shll
mov
add
mov
jmp
and
push
cld
dec
sbb
push
mov
xor
pop
adc
sbb
fs
pop
push
xchg
xlat
out
aad
push
push
push
cmpsl
jb
mov
dec
daa
insl
xorl
es
push
int
mov
leave
push
jo
stc
mov
xchg
int3
int
cmp
jmp
ret
mov
and
xchg
mov
pop
sub
jecxz
push
lods
mov
mov
pop
std
jle
bound
stc
test
mov
jle,pn
sub
add
dec
ret
push
xlat
fisttps
pop
dec
xchg
pop
add
jge
mov
shr
ret
mov
dec
lret
or
cltd
cld
jmp
jl
mov
in
sahf
jae
outsb
lds
das
ds
je
call
aad
pop
loop
inc
pop
sbb
add
insl
sub
ret
stos
sbb
pop
sbb
arpl
jl
or
scas
test
jo
loope
das
out
popa
loop
push
mov
cld
jmp
inc
xchg
or
icebp
push
ss
pop
inc
imull
nop
shll
pop
insb
xor
xor
jns
int3
adcb
out
stos
in
popf
push
fnsave
and
xor
jecxz
gs
lret
lret
js
ljmp
adc
mov
sbb
fnsave
sub
xor
push
add
lds
sbbl
addr16
pop
pusha
shll
stos
push
ds
cmpsl
mov
rcll
std
pusha
dec
xchg
sbb
or
xor
mov
lret
faddl
scas
push
jb
jb
jl
jg
shrb
jge
xchg
pop
enter
frstor
sbb
mov
or
std
inc
mov
and
push
push
dec
jae
stos
orl
mov
add
xchg
and
mov
test
mov
shlb
mov
test
cmp
xchg
fsts
movsl
rcll
in
xchg
and
negl
dec
mov
cmp
sbb
filds
jns
lods
jg
aas
push
sbb
pusha
test
stc
loop
imul
adc
fdiv
loopne
in
xor
sbb
ficompl
call
call
dec
inc
jl
mov
push
fisttpl
int
mov
dec
bound
out
adc
imul
ljmp
insb
inc
add
cwtl
push
ds
jle
pop
xor
outsl
sbb
divl
sub
push
and
pop
sub
inc
mov
adc
or
lock
sbb
xchg
pop
insl
daa
mov
or
xchg
jnp
and
inc
inc
mov
jmp
pushf
inc
repz
test
ret
or
fsubrs
jno
subb
mov
dec
xchg
fimull
popf
mov
fs
xchg
mov
out
gs
cmp
adc
inc
adc
inc
push
push
jecxz
std
sub
sub
fs
mov
adc
cli
rorb
movsl
xorb
mov
int3
xlat
push
ds
out
sbb
shr
arpl
cltd
movl
xchg
pop
dec
adc
xchg
aaa
rcrl
sub
lods
and
jmp
pusha
int
out
mov
shr
xchg
cmpsl
cli
ror
or
mov
cs
cs
aad
jbe,pt
jecxz
and
mov
lcall
lea
mov
xor
jo
lret
jg
iret
popf
leave
sahf
mov
aas
mov
leave
popa
xchg
scas
shlb
mov
dec
add
mov
int3
mov
enter
mov
push
outsb
xor
shlb
pop
inc
cmpsb
outsl
inc
nop
fcmovnu
sbb
xchg
push
ja
push
and
mov
add
or
jmp
xchg
mov
add
mov
inc
sbb
or
lods
jno
dec
mov
adc
into
div
mov
inc
ds
add
test
in
mov
cmp
sahf
add
das
decl
cwtl
pop
sub
stos
popa
lcall
in
jns
mov
ss
stc
jno
rclb
push
int3
xchg
in
cli
ss
jp
scas
fcomip
push
aaa
aad
ss
nop
push
push
iret
in
imul
mov
and
fcoms
mov
mov
dec
cmp
xor
lea
or
movsb
push
ret
mov
dec
mov
inc
lods
xchg
adc
dec
sub
sub
cmp
push
mov
and
sbb
out
dec
push
xor
add
sbb
pop
or
and
repnz
sbb
add
in
lret
push
cmp
ja
mov
push
je
in
inc
and
test
loope
xor
add
dec
out
jl
fmuls
pop
in
cmpsb
or
sarl
lcall
std
cld
sarb
cmp
iret
xor
incl
cltd
pop
mov
inc
push
push
cmc
pop
cmc
or
fldenv
xor
in
push
mov
add
shr
mov
jmp
stc
pushf
jno
inc
ss
cli
les
ljmp
insl
les
pop
jg
lret
push
lock
adc
adc
add
loope
xlat
cli
and
out
and
mov
or
add
lcall
mov
stos
and
sbb
fwait
dec
iret
or
data16
adc
sub
scas
cld
adc
mov
mov
pop
xchg
sti
negb
xchg
jle
and
sti
push
dec
lods
pop
xor
jb
insb
shr
dec
fdivrl
shrl
mov
repz
xchg
push
mov
and
dec
push
inc
ret
xchg
frstor
cmp
adc
stc
jns
mov
aas
sbb
cmp
xchg
pop
lds
sub
hlt
pop
mov
sub
or
adc
cmp
ret
outsb
mov
test
dec
jl
or
mov
aas
jmp
sbbl
test
call
cwtl
das
cmp
negl
sti
popa
sbb
adc
orl
clc
or
mov
movsb
pushf
aam
test
and
pop
mov
test
mov
push
repnz
and
ret
fcompl
add
jb
pop
bound
sub
outsb
cli
ss
dec
in
adc
sbb
adc
scas
adc
imul
add
xor
popa
mov
in
mov
and
mov
in
loop
mov
pop
mov
imul
shrb
mov
shlb
adc
dec
data16
pushf
jns
inc
inc
or
pushf
fcmovne
mov
loop
mov
insb
out
and
and
inc
lret
add
sbb
and
test
stos
pop
cld
jmp
mov
add
hlt
std
outsb
xchg
jo
lods
xchg
repz
add
hlt
dec
cmp
cmp
push
jecxz
ret
jp
and
daa
inc
cli
fdivl
push
cmp
add
bound
jle
sahf
push
hlt
dec
nop
in
ret
fisubl
mov
adc
gs
sub
adc
mov
jg
cmp
in
jge
inc
aam
int
enter
or
xchg
mov
jns
ljmp
insl
fsubl
mov
hlt
cmc
or
cmpsl
mov
mov
mov
cmp
cmp
inc
lea
xchg
outsb
cli
adc
insl
leave
inc
stc
cmp
ja
mov
int
jnp
mov
push
roll
push
mov
add
in
aad
lea
dec
or
xchg
cli
and
dec
cmp
dec
inc
repnz
lret
roll
add
and
fiaddl
sbb
std
cmpsb
xor
ffree
xchg
xor
out
mov
adcl
mov
inc
add
mov
dec
stc
bound
or
hlt
adc
in
lods
xor
sbb
push
repz
xchg
cmp
movsl
jle
push
and
jmp
cs
mov
mov
aam
out
popf
repz
jecxz
pop
je
xchg
stos
scas
sub
or
push
andnps
jbe
fwait
ljmp
mov
lahf
mov
push
out
in
pop
jbe
add
inc
mov
subl
mov
and
adc
loope
jge
and
sarl
mov
jg
sbb
sub
mov
in
movsb
sub
fcompl
inc
popf
cs
hlt
sbb
mov
sub
lock
cmpsl
xor
lret
out
out
stos
sarb
daa
push
cwtl
adc
stc
mov
add
jmp
cmp
jbe
mov
or
xlat
fmul
fwait
mov
pop
xor
mov
pop
push
cmp
pop
ja
in
mov
push
arpl
mov
pop
std
xor
push
rorl
outsb
jecxz
pop
or
into
jmp
pop
icebp
sub
add
mov
adc
lods
out
inc
movsl
rcrl
jg
rcrb
dec
jl
xchg
push
xor
cmp
dec
push
mov
push
loop
sub
xor
pop
ret
mov
push
adc
aas
scas
ret
lret
xchg
sub
adc
hlt
sbb
xchg
add
push
ret
leave
cmp
and
mov
lret
adcl
shll
push
push
jb
imul
cmp
mov
ret
push
jl
sar
arpl
or
xchg
lret
es
add
data16
hlt
push
lock
stos
es
xchg
stc
nop
add
loopne
cmp
dec
idivl
mov
xor
cmp
vcvttsd2si
mov
mov
pop
add
movsb
stos
dec
imul
rcrl
inc
dec
pop
aam
js
inc
clc
fsubr
repnz
es
js
roll
jne
sub
outsb
loope
lock
scas
inc
pusha
sbb
xchg
mov
sbb
sub
std
lea
inc
jne
bound
mov
xchg
jb
push
mov
lods
ss
mov
pop
loope
cwtl
or
cmc
rorl
in
insl
pslld
sub
mov
push
inc
test
popa
imul
mov
push
scas
pop
xorb
clc
lods
xchg
inc
ds
addb
fwait
push
das
lods
jecxz
mov
push
and
push
stos
aam
clc
cmpsl
mov
sbb
popf
aad
popa
fistl
mov
mov
ja
inc
out
das
jns
rcr
dec
lds
add
cmp
and
or
pop
gs
xabort
enter
cmp
mov
inc
loop
xchg
pop
repz
pop
and
mov
setae
cwtl
int3
ljmp
rcr
xchg
push
loopne
scas
iret
in
mov
les
adc
sar
into
clc
filds
and
insl
notl
push
jle
ja
mov
idivb
xlat
neg
ficoms
nop
je
inc
rorl
imulb
push
push
fs
test
mov
mov
xlat
into
lret
gs
pop
xchg
cmpsl
xchg
inc
jmp
and
sahf
das
enter
enter
or
and
into
sbb
test
pop
movsb
mov
add
adc
push
lahf
std
cmpb
or
xchg
imul
aas
cld
xor
cltd
les
ret
movsb
std
and
je
cmpsb
sbb
and
mov
icebp
mov
and
dec
in
repz
lret
dec
mov
xor
repz
push
pop
fists
pop
in
sub
fcomi
sub
xchg
xchg
adc
mov
push
int3
jl
mov
xchg
aaa
dec
push
adc
dec
rcrb
jns
pop
sbb
sub
mov
lds
in
cmp
jo
aas
int
pop
cmc
sarb
jbe
inc
in
cli
cwtl
fstpl
pop
sbbb
xchg
pop
stos
adc
push
js
mov
or
xchg
sub
jae
jb
in
daa
movsb
lods
lods
or
mov
clc
jl
sbb
out
cld
nop
jg
mov
add
mov
test
push
std
and
aad
push
ficoms
xchg
sub
add
add
push
cmp
inc
cs
mov
outsl
stos
jns
push
xchg
mov
pop
inc
cmpsb
cmp
push
cs
mov
outsb
aad
jns
push
push
adc
rcrb
add
dec
sbb
inc
inc
sahf
pop
fimuls
inc
bound
cmp
lahf
pop
sub
push
jl
mov
jle
mov
lods
dec
sbb
xrelease
sub
arpl
jnp
push
aad
push
xchg
xchg
les
aad
je
adc
fstps
pop
or
je
dec
cmp
out
push
mov
ret
addr16
int
pop
add
test
mov
insb
push
xrelease
jg
clc
mov
out
pop
mov
popf
sub
sbb
jecxz
cmpsl
fisubrl
enter
mov
sub
push
mov
out
outsl
jmp
add
mov
mov
scas
adc
icebp
int3
jae
leave
orb
aaa
scas
enter
cmc
mov
adc
fldt
into
and
sbb
fimull
mov
pop
push
shrb
jge
push
repnz
insl
in
rcrl
or
insl
in
ja
mov
out
push
int3
fbld
and
je
int
stos
fstenv
adc
mov
push
jecxz
repnz
inc
add
or
lock
mov
mov
xchg
in
leave
cs
enter
pop
pop
cmpl
adc
jns
fildl
ficompl
mov
push
pop
dec
es
adc
adc
movsl
mov
pop
std
movsl
nop
out
cmc
jae
jne
sbb
push
inc
adc
rolb
xchg
stos
dec
pop
out
out
es
in
out
add
inc
push
mov
mov
push
and
fbstp
jno
sbb
or
cmpsb
or
sub
sbb
mov
xchg
jae
lcall
or
iret
aas
pop
aaa
sub
sbb
insl
fs
cmpl
sarl
push
mov
in
jns
out
xchg
stc
aas
mov
jbe
cmp
shrb
in
dec
mov
push
ret
dec
push
mov
jecxz
shlb
pushf
imull
stos
shl
mov
jbe
sbb
int3
adc
sahf
sub
scas
jecxz
push
push
add
push
iret
push
and
lcall
hlt
into
cmpsb
push
add
lahf
mov
repz
dec
sbb
jmp
dec
aas
rorb
jg
shrb
add
arpl
cmpsl
sub
xchg
testl
fcomp
icebp
push
adc
fmul
js
pushf
sub
jmp
sbb
inc
ret
lahf
adc
inc
movsl
jg
scas
arpl
add
push
sbb
dec
cmpb
lahf
cli
or
pop
test
add
xlat
sub
add
mov
testl
jnp
jg
jae
dec
loopne
lea
push
xchg
mov
into
fnsave
es
lret
lea
test
mov
iret
add
loop
int3
jns
add
scas
adc
repz
push
maxps
out
rorb
pop
mov
or
movsb
out
ja
int
fcom
insb
rorb
xchg
inc
ret
scas
test
test
out
pop
jecxz
fprem
iret
out
in
lahf
fnstcw
adc
xor
add
jl
dec
lahf
fsub
es
mov
jb
hlt
jbe
sbb
pop
out
pop
adc
in
and
add
icebp
in
mov
inc
daa
jns
movsb
insb
das
lock
insb
imul
inc
jb
mov
pop
popl
jnp
or
add
push
ficompl
fdiv
shl
dec
adc
insb
mov
dec
inc
add
push
mov
mov
sub
out
fwait
and
pop
and
enter
fistl
push
call
out
push
cwtl
push
lret
mov
out
mov
lcall
xchg
ljmp
daa
cmovl
jo
inc
int
fiadds
shll
xchg
cltd
addr16
xchg
in
jo
int3
push
mov
ret
enter
adc
test
cs
push
and
add
std
stos
test
cmp
and
push
inc
dec
sbb
add
ss
mov
xchg
cmp
faddl
cmpsb
or
lret
mov
push
repz
cmp
inc
mov
orl
mov
jne
fisubrl
inc
js
sbb
mov
out
ja
mov
lcall
mov
mov
mov
lcall
das
fistpl
iret
mov
int3
pusha
mov
cmp
cmp
jg
mov
cmpsb
xchg
dec
push
or
fidivrs
call
outsb
mov
mov
leave
fnstcw
dec
lock
js
cmp
mov
int3
out
aaa
imul
and
jne
test
dec
adcl
call
repnz
rorl
and
rcl
inc
shll
jg
jmp
dec
in
adc
xchg
adc
cmp
sbb
arpl
mov
pop
sarb
fnstcw
jge
rorb
cmpsb
mov
mov
xor
add
add
lock
nop
dec
fsubrs
lock
push
mov
mov
lods
mov
xor
out
cmp
or
enter
push
mov
jno
fadds
mov
fdivrs
cld
cmpsb
xchg
ja
or
es
jne
mov
popa
jle
insb
cmp
andb
push
jle
sbb
insl
ja
jo
test
push
sub
popa
call
cli
jg
xor
inc
xchg
pusha
mov
push
add
cmpsl
out
test
pop
out
call
xchg
sub
or
jne
push
adc
push
cmp
push
jb
testl
pushf
xchg
inc
mov
int3
loop
xor
shll
xor
dec
push
adc
les
aad
clc
ljmp
popf
dec
ljmp
or
adc
aam
adc
iret
cmpsb
mov
add
and
push
out
fmul
mov
adc
push
ficoms
cmc
jg
or
in
call
ljmp
ja
adc
fs
xchg
jmp
int3
dec
sbb
es
jae
sbb
dec
jno
sub
sbb
jbe
dec
stc
fwait
add
sahf
neg
fwait
adc
test
jecxz
inc
or
iret
out
dec
lea
repz
clc
icebp
mov
addl
cmp
cltd
pop
cmc
lcall
mov
or
xor
mov
addr16
pop
xchg
inc
mov
ss
popf
cmpsl
pushf
and
mov
das
push
dec
add
scas
pop
shr
mov
outsl
xor
fcomi
mov
xchg
xchg
fwait
mov
jle
pop
xor
jno
testl
xchg
lret
repz
dec
data16
std
and
stos
aaa
and
or
and
xor
inc
or
adc
cmp
xor
int
cmpsl
mov
test
mov
test
sbb
dec
jg
cmp
or
shrl
pop
outsb
inc
push
xchg
mov
mov
adcb
popf
xor
fsubs
push
add
adc
sub
lret
pop
mov
push
pop
cmp
test
mov
xchg
inc
sbb
dec
jg
loopne
pop
dec
in
xor
int
test
mov
inc
xchg
jb
cmp
inc
rcr
outsl
cli
aam
mov
in
xchg
xor
hlt
repz
mov
pop
repz
outsb
sbb
cld
in
outsl
mov
cmp
call
xor
jg
cmp
pop
shlb
inc
sahf
push
test
cmp
fcomps
or
mov
lods
imul
mov
loope
xchg
shlb
rcll
push
add
int3
pop
dec
hlt
xchg
mov
and
imul
stos
pop
mov
pop
loop
sbb
sbb
adc
lock
mov
mov
popf
outsl
add
jo
dec
shlb
push
push
xchg
scas
jg
mov
pop
arpl
hlt
mov
ret
mov
sahf
mov
xchg
push
pop
lahf
ljmp
add
clc
repz
sub
xchg
fadds
ljmp
subb
imul
ficomps
jno
push
jbe
and
lds
test
and
loope
shll
jge
pop
jmp
rcll
bound
cld
aas
into
and
call
xchg
or
and
add
ss
leave
gs
xor
packsswb
scas
lahf
fucomp
xchg
roll
imul
or
mov
mov
in
mov
pop
push
dec
xchg
outsb
mov
out
imul
mov
mov
fwait
insl
or
jmp
notb
lret
inc
subb
imul
mov
fwait
cli
repnz
flds
mov
repz
push
scas
int3
cmp
movhps
mov
loopne
pop
jg
sub
ss
xor
mov
mov
lods
jle
rorb
and
movsb
add
add
pusha
int
mov
lcall
sub
mov
pop
loope
cmp
stos
sbb
pop
xchg
aaa
cmp
inc
jno
adc
add
jno
sub
cmpsl
xchg
lcallw
out
xor
pop
xor
movsb
lock
push
dec
imul
arpl
mov
pop
outsb
setl
pop
or
lock
pop
sub
aam
inc
or
sub
xchg
inc
jo
rcr
and
sbb
jae
pushl
pop
gs
fwait
jp
sti
xchg
mov
add
in
sbb
pop
in
rorb
popa
or
scas
xchg
jmp
pop
push
aad
pextrw
cmp
sub
and
push
xchg
aad
in
jge
add
push
movsb
in
jne
icebp
rcrb
sbb
push
xor
adc
outsl
jo
movsl
jecxz
outsl
xchg
pop
xor
aad
lcall
fsts
ds
shll
sti
pop
test
pop
sub
in
adc
xor
divb
hlt
das
mov
mov
cmp
shrl
inc
dec
xor
into
sti
fstpt
xchg
test
sbb
pop
mov
int3
js
test
cmpsb
out
xchg
mov
sub
xor
ss
xchg
dec
mov
sti
mov
add
jo
mov
cmp
pop
imul
test
jp
inc
fs
mov
fucomip
hlt
ja
add
subl
test
roll
xor
pop
or
inc
sarb
cmp
adcb
imul
or
sub
fsub
xchg
push
mov
pop
adc
or
aaa
jl
cmc
cmovp
mov
cwtl
fcoml
sub
xchg
ret
or
rorl
int3
xchg
or
or
pop
sub
push
ret
ds
dec
je
setnp
sub
sub
mov
mov
jae
movsl
insb
in
aas
mov
cltd
add
fs
pop
jle
jno
pop
int
cli
mov
dec
xchg
cmpsb
adc
pop
pop
push
pop
adc
inc
mov
fidivs
sahf
in
cmpsb
mov
loope
ret
fwait
scas
shlb
and
scas
inc
push
push
mov
popa
xorl
sbb
dec
test
dec
push
int3
inc
add
mov
mov
sbb
faddl
inc
cli
out
push
aad
shll
xor
push
daa
popl
sbb
ljmp
lock
mov
mov
sub
inc
retw
jge
lds
fwait
mov
imul
loopne
andb
aaa
mov
sbbl
xchg
lock
sub
inc
int
xor
xlat
fsubrs
gs
loopne
into
nop
mov
fisttps
add
add
xor
insl
add
cmp
fsubrs
stos
push
cmpsb
ja
aas
roll
lds
popa
shl
pop
fildl
xchg
or
cs
sub
in
clc
outsb
std
movsl
jg
pop
stc
and
or
call
add
mov
jecxz
cmpb
aam
in
push
mov
in
jo
int3
stc
mov
push
fiadds
sbb
xchg
outsb
popa
fadds
sub
loop
xor
sahf
pop
sub
loopne
cmp
mov
cmp
mov
and
sub
sbb
movsl
xor
loopne
lret
jno
aas
fistps
mov
xchg
mov
ljmp
scas
repz
pop
jl
and
popa
adc
pop
pop
imul
jmp
lea
xlat
mov
je
mov
pop
in
rclb
scas
add
sub
mov
adc
add
imul
pop
dec
mov
outsb
lods
call
fistps
inc
pop
push
lcall
les
test
mov
inc
aas
cmp
and
lock
inc
cwtl
repnz
insb
lods
pop
adc
fdivp
jo
dec
and
jne
fdivrs
dec
dec
xor
test
or
mov
inc
in
sarb
xchg
jb
lahf
jo
into
xor
test
adc
cmc
inc
icebp
add
xor
lret
mov
push
and
loope
or
jecxz
les
pushf
mov
mov
lods
inc
mov
ret
and
shll
mov
or
xor
jo
das
cmp
pushf
test
dec
cli
or
adc
test
js
cmp
in
sub
mov
inc
cli
call
adc
fimuls
insb
daa
popa
test
mov
xchg
nop
leave
popf
nop
imul
inc
adc
jnp
loopne
push
cmp
mov
jo
sub
mov
pop
negb
jno
std
mov
das
and
mov
xchg
add
xchg
andb
dec
push
cld
pop
gs
pop
push
pop
cmpsb
lret
mov
aad
popa
add
xor
push
push
sub
push
ret
nop
repz
mov
scas
imul
rorb
lods
mov
adc
cltd
into
inc
xlat
push
leave
stos
mov
inc
pop
cmp
in
jo
ret
jmp
mov
rcrl
xlat
rclb
leave
stos
addr16
sbb
inc
cld
dec
das
add
mov
adc
icebp
fmull
cmp
sub
or
mov
push
mov
repnz
rcr
cmp
dec
or
loop
push
bt
xor
jg
pop
sub
aam
mov
cmc
jnp
cwtl
sub
and
fsin
xorb
mov
loope
xor
cwtl
rcl
sub
mov
pop
mov
das
ss
jecxz
fcmovnb
mov
cmp
mov
out
pop
xchg
push
nop
test
and
aas
adc
rorb
fucomi
loop
neg
lret
ficoml
xor
loope
lods
push
fwait
pop
cmpsl
jo
jno
push
mov
popf
or
cmpsb
mov
aaa
mov
scas
lahf
data16
call
gs
sub
mov
and
sbb
xchg
adcl
inc
fmul
mov
sarb
int3
shlb
sbb
mov
dec
mov
ljmp
xor
bound
lods
cltd
xor
cmp
fdiv
enter
xchg
loope
outsb
push
mov
mov
and
add
and
mov
pop
mov
xchg
push
xor
fnstcw
push
repz
jge
sti
sti
bnd
aad
jl
hlt
pushf
and
inc
cmp
fxch
stos
mov
push
cmp
xchg
sti
mov
clc
jle
and
arpl
ret
les
lcall
jp
pop
cs
xchg
mov
sub
pushf
push
push
insl
and
sub
dec
inc
push
out
mov
pop
test
push
cwtl
and
enter
lds
loopne
sbb
xor
dec
add
fucomp
push
pop
fstpl
flds
mov
lahf
aaa
notl
outsl
dec
enter
mov
loope
mov
add
lcall
sbb
stos
in
inc
add
or
js
pop
arpl
addr16
les
and
test
push
mov
mov
mov
xchg
int
mov
xchg
push
mov
mov
test
in
hlt
das
add
out
addr16
dec
inc
aaa
idivb
add
xor
stos
mov
dec
push
and
sahf
mov
mov
xor
int
testb
lret
pop
aas
add
mov
push
xor
add
mov
lock
inc
mov
fadds
movsl
fsub
inc
and
dec
aas
adc
mov
xchg
outsb
lret
lds
test
in
jmp
fistps
lret
mov
dec
arpl
sti
xchg
sub
subl
push
data16
out
cmc
mov
nop
mov
pop
xlat
cld
inc
xchg
pushf
lods
sub
jge
cmpsb
fwait
jne
fidivs
aas
jnp
movsl
lods
dec
scas
lret
push
mov
outsl
cmp
xchg
mov
insb
xor
cmp
cmovle
pop
and
inc
shll
rcll
push
pop
xor
lcall
test
std
leave
and
xchg
sbb
xor
push
orb
mov
adc
push
jg
mov
jb
icebp
push
mov
ror
cmp
add
ret
in
iret
test
inc
cmp
jns
pop
cwtl
int3
dec
clc
and
ficoml
xchg
stos
adc
dec
mov
jbe
lds
jo
add
and
enter
or
xor
es
enter
xorb
pop
xor
imul
sbb
sbb
cmp
xchg
sbb
mov
pop
push
jecxz
or
aas
add
les
cwtl
addr16
cmpsb
cmp
adc
shrl
fisubrl
fstpl
add
fisttpl
bound
scas
lods
sbb
pop
out
pop
add
sub
mov
or
mov
cwtl
pop
add
andb
inc
stc
sub
js
jno
pop
sub
xor
rorb
dec
aaa
jg
or
subl
sbb
fwait
mov
push
stos
mov
aaa
movsl
cmp
fisubs
mov
jo
cli
jecxz
lcall
sbb
jb
in
dec
test
jno
dec
mov
xor
pop
jmp
scas
lods
stc
jne
sub
adc
leave
cmp
push
and
shl
cltd
push
nop
jnp
movsb
and
add
add
jne
jbe
bound
test
jl
add
dec
pusha
sti
xor
jecxz
outsb
sbb
aaa
cmp
xchg
or
testb
lret
sub
mov
push
clc
jns
and
or
into
movsb
fdivp
call
mov
addb
push
bound
fs
pop
push
pushf
xlat
sub
dec
cli
into
jne
sub
pop
mov
mov
inc
xchg
mov
or
hlt
fmuls
les
pop
mov
inc
rcrl
adc
js
je
add
mov
fldl
pop
outsb
inc
outsl
jns
and
daa
bound
mov
mov
xor
xor
inc
xchg
jl
fucomi
mov
fldz
add
cmp
lods
sarb
imul
ret
aam
xchg
mov
cli
scas
mov
pop
xchg
and
mov
pop
dec
inc
imul
sbb
js
xor
fwait
jo
enter
add
icebp
push
movb
adc
jb
in
mov
sub
idiv
leave
bound
les
out
cmp
cld
push
cltd
out
rorb
xor
mov
or
sbb
cmp
fstl
jge
cmp
cmp
and
lds
adc
inc
mov
jge
xorb
jmp
pop
mov
int3
sbb
and
testl
rclb
dec
fiadds
leave
arpl
fldl
and
jmp
mov
bound
xor
mov
js
jecxz
in
lods
jmp
imul
adc
cld
sti
ja
pop
dec
mov
adc
or
lea
outsb
and
cmp
ss
repz
mov
cld
mov
mov
movsb
mov
lret
clc
xchg
pop
int
ss
jmp
rcrb
inc
xchg
push
lcall
jmp
test
pop
fidivs
sbb
popf
lds
je
std
mov
sbb
push
mov
dec
sub
sub
and
push
data16
inc
push
addb
cmpsb
adc
out
cmc
inc
sti
nop
aas
ret
fidivl
out
mov
cmp
mov
add
dec
push
cmp
or
jb
cli
mov
addl
dec
imulb
fildl
mov
idivl
or
aas
inc
fwait
jl
aam
sbb
mov
roll
mov
inc
xor
pop
nop
push
push
jmp
cmp
mov
fld
push
xor
inc
or
stos
jl
dec
cltd
dec
cli
mov
mov
sub
add
jmp
xchg
adc
add
addl
int3
es
je
xor
push
movsl
jno
or
jnp
fwait
adc
mov
cmp
mov
jp
test
cmp
out
test
aad
in
mov
and
stos
push
mov
xor
push
add
adc
outsb
or
insl
mov
cmp
loope
inc
scas
int3
loope,pt
fs
xchg
shr
push
sub
add
js
call
ret
loop
fmul
hlt
test
xlat
sub
push
loope
call
jno
fdivrs
in
sub
test
xchg
mov
out
dec
movsb
bound
mov
xor
xchg
jl
jmp
fadds
and
dec
std
iret
enter
lock
dec
fwait
js
notl
cs
in
aaa
add
cmpsb
jbe
aas
sub
dec
fldln2
add
xchg
jp
outsb
xchg
cmp
clc
insb
insl
iret
imul
repz
xchg
mov
ja
pop
out
cmp
cli
data16
sub
cmpsl
and
imulb
jmp
cli
fwait
cmc
xor
sub
dec
movsb
mov
addr16
pop
push
adc
popf
push
push
dec
cmp
shrl
mov
cmp
cmp
in
jge
mov
push
jne
cld
mov
fsin
aas
mov
ret
out
fists
mov
shl
push
and
popa
popa
std
arpl
cli
rcl
rolb
js
mov
xor
aaa
outsb
push
mov
dec
cmp
inc
in
mov
push
nop
shl
dec
push
std
mov
mov
mov
ljmp
jb
arpl
cmpsb
das
and
mov
das
out
leave
push
xor
je
xor
dec
jmp
mov
int3
cmp
out
push
arpl
aad
mov
or
fcoml
jmp
bound
or
xchg
mov
xor
mov
sbb
aad
cmpsl
xor
push
pop
int
cwtl
leave
movsl
sub
mov
jle
mov
rorb
popf
adc
lahf
movsb
stos
inc
push
aaa
mov
fwait
push
outsl
shll
push
adc
xor
lret
sub
das
lock
mov
push
sbb
icebp
dec
pusha
sub
add
sub
sub
ss
or
mov
mov
fistpl
hlt
sub
loop
ficomps
pop
jl
aaa
or
mov
out
cmp
jmp
jne
mov
jg
and
jbe
add
push
enter
xor
and
lret
in
scas
sbb
clc
int
mov
aas
incb
adc
push
cmp
or
inc
aas
pop
inc
es
cmp
les
and
cld
mov
test
mov
jnp
addr16
pop
jecxz
xchg
push
movd
aad
icebp
ss
shll
cmpsl
lods
or
movsl
sbb
clc
and
fsub
dec
ljmp
mov
popf
push
pop
push
xor
ficoml
div
push
out
add
fdivrl
mov
insl
jne
pop
push
sbb
mov
jmp
xchg
mov
test
or
xor
adcl
in
sbb
and
pop
push
inc
lods
out
fs
xchg
cmpsb
push
imul
out
arpl
pop
mov
push
mov
test
fstl
in
mov
inc
pop
ja
pop
jno
ljmp
ja
call
cmp
sti
push
xorb
push
xchg
pop
sbb
mov
xchg
ror
push
and
or
mov
mov
xor
push
ret
sub
test
out
jle
push
scas
pop
outsl
fcmovb
sub
pusha
xorb
into
rolb
add
adcb
repnz
add
and
loop
loop
add
mov
mov
mov
movsl
insb
out
stc
adc
jae
ret
fbld
test
bound
sbb
mov
cmc
xor
sahf
ds
pop
fstps
xchg
sti
dec
mov
mov
out
cld
or
sub
push
negl
jno
lods
xchg
jmp
xlat
xor
dec
cli
rorb
and
shrb
fcomp
mov
xor
mov
aam
negb
int3
fistpll
mov
mov
cltd
jbe
fsubl
ret
btc
inc
divl
jecxz
push
xchg
fildll
cmp
loop
pop
movsl
xchg
out
lcall
daa
sub
jg
cmp
divl
sbb
push
adc
imul
inc
dec
pop
inc
jge
insl
adc
mov
mov
iret
pop
into
cli
mov
sbb
mov
popa
sub
repnz
and
jo
pop
ret
add
fwait
xor
inc
cmc
popf
sub
cmp
cmp
and
testb
in
sub
ror
add
stos
inc
mov
scas
inc
js
push
or
lcall
sub
into
cmc
es
loopne
movsl
sti
mov
enter
arpl
push
mov
inc
mov
jp
aam
in
shlb
jge
xorl
popf
pusha
aaa
xchg
push
xor
iret
dec
fmull
lods
xchg
lock
inc
cltd
mov
aam
std
mov
out
or
fnstsw
leave
cmpsb
adc
push
icebp
cmp
insl
test
adc
jno
and
std
jns
mov
add
test
loopne
mov
inc
or
cmp
mov
arpl
xchg
lcall
mov
ds
sub
mov
pop
mov
nop
ds
nop
xor
fstl
xor
adc
sbb
lret
pop
adc
sbb
jmp
pusha
sti
sbb
test
mov
fildll
setle
xchg
das
mov
sarl
pop
mov
in
addr16
pop
pop
push
adc
xchg
xchg
push
cmp
adc
movsb
subl
inc
push
in
sti
mov
loopne
adc
daa
ss
enter
mov
cli
cld
xchg
dec
lock
hlt
enter
out
cld
jl
fmul
testb
mov
pop
sbb
or
daa
push
fwait
imul
pop
mov
outsl
popf
push
or
je
mov
fcomps
cs
adc
out
sub
loopne
mov
push
movsl
push
jge
std
dec
sahf
mov
cmp
popa
loopne
sub
sub
cmp
imul
push
cltd
ret
inc
das
bswap
push
inc
sbb
push
insl
scas
jle
in
xchg
inc
cmp
cli
popf
xlat
lret
lds
pushf
test
sbb
outsb
testl
test
ds
inc
and
sti
pop
mov
lret
pop
fildl
sub
sbb
pop
push
imul
inc
fs
jp
sub
loop
out
je
mov
popf
or
lds
fwait
xor
add
shrl
cwtl
int3
sahf
shlb
test
adc
arpl
sub
and
popf
movsb
xchg
sub
or
push
jne
jmp
popf
pusha
xchg
imul
shll
jb
jecxz
xchg
cmpsb
mov
push
or
fwait
adc
dec
shlb
mov
movsb
lcall
and
mov
or
inc
leave
add
push
xor
outsl
mov
ja
push
mov
xor
jbe
push
jg
lds
cmp
daa
ret
rol
sbb
int
dec
test
push
mov
aam
add
enter
roll
pop
mov
mov
stos
pop
pusha
dec
mov
icebp
je
add
push
dec
push
lea
cmp
pusha
fnstsw
shl
int
xor
jns
pusha
cmp
add
jb
cltd
and
mov
cmpsb
pop
std
xchg
ds
xor
nop
sub
popa
mov
mov
test
push
into
mov
push
dec
iret
shr
push
inc
xchg
clc
add
ret
lahf
inc
mov
mov
es
or
pushf
push
das
in
mov
and
repz
mov
insb
and
cmp
add
jbe
js
daa
push
clc
cmpsl
scas
icebp
xor
lret
shrb
inc
daa
push
xchg
pop
fistpl
jg
test
push
enter
jmp
shlb
fidivs
sti
jmp
cmp
inc
xchg
pusha
sub
xchg
add
cmp
loop
push
lea
xor
insb
popf
jo
filds
adc
dec
pushf
jb
pop
xchg
push
add
je
movsl
push
push
bound
push
xchg
add
adc
repnz
xchg
addr16
cmp
inc
arpl
jb
inc
loopne
movsl
bound
and
jo
mov
je
jns
sbb
mov
xor
adc
adc
or
xor
and
sti
stos
dec
xchg
xchg
mov
lea
xor
push
imul
pop
or
pop
repz
mov
out
mov
cmpsl
ret
inc
xor
mov
push
mov
xor
loopne
outsb
loope
jo
cmc
popa
loopne
cmp
scas
shrl
popaw
inc
rcrb
imul
lcall
insb
pop
dec
dec
jnp
and
clc
in
and
inc
fbstp
inc
shrl
mov
outsl
or
addr16
fisttpl
arpl
jno
cli
xchg
fisttpl
aam
cmp
adc
fwait
dec
imul
ret
enter
out
fs
test
fadds
mov
xchg
rcrb
and
sub
or
pop
xchg
pop
sbb
loope
or
js
jnp
out
xchg
repnz
rcrl
loope
lcall
movsl
jecxz
ds
rcl
rcll
cmpsb
jl
xchg
loope
jno
ds
dec
lcall
xor
sub
sbb
sub
repz
loope
and
or
sarl
cmc
xor
push
addr16
pop
cmp
mov
push
xor
inc
fnsave
daa
mov
subb
mov
scas
in
cltd
test
adc
xchg
xor
push
lock
inc
lea
or
push
lahf
pushf
shrl
aaa
push
xlat
jo
scas
xchg
das
push
and
scas
lods
xor
jo
pop
es
mov
iret
jns
and
xchg
mov
pop
shll
cmpsb
imul
mov
pop
xchg
sub
push
xchg
addr16
xchg
data16
rorl
xchg
xchg
lods
pushf
movsl
jge
push
xchg
into
ds
aaa
or
sub
ffreep
les
es
mov
loope
es
loope
into
mov
fwait
jnp
mov
sbb
lock
xor
pusha
push
rcr
mov
cmp
xor
lret
mov
dec
js
mov
nop
fs
ds
dec
icebp
and
pop
dec
pop
mov
xor
lahf
push
mov
xchg
push
movsb
outsl
mov
and
aad
cwtl
push
insl
rolb
fwait
outsl
mov
call
pop
mov
and
cwtl
lds
push
push
and
pushf
or
enter
mov
ljmp
push
movsl
in
ljmp
inc
jbe
fistps
mov
and
push
sbb
ds
aad
xor
sub
cmp
sub
imul
out
ja
lret
jp
xchg
pop
or
rolb
fiadds
pushf
mov
jp
mov
cmc
xor
pop
lods
sub
sub
rorb
inc
dec
test
cwtl
stos
fadd
inc
and
and
pushf
rolb
xor
mov
icebp
out
fildll
das
mov
mov
je
aam
adc
sbbl
adc
enter
pop
out
into
div
mov
add
or
testl
ds
enter
cwtl
jae
out
loopne
xor
push
hlt
addl
or
fsubs
mov
jmp
lahf
and
mov
in
aas
xorl
fs
mov
push
arpl
mov
jmp
mov
pop
push
xchg
cmp
mov
push
loop
jmp
dec
dec
pop
loop
dec
cmpsb
std
aam
mov
push
push
aad
mov
cmp
mov
pushf
lea
pop
push
pop
in
xchg
push
test
fmull
pop
dec
scas
pop
xchg
mov
lret
fcompl
adc
add
loopne
adc
cwtl
jmp
or
jp
pop
mov
pavgb
sti
push
jnp
mov
outsl
xchg
xlat
pushf
cmp
hlt
subb
cmp
pop
cmp
pop
add
mov
mov
mov
and
popf
data16
mov
dec
cld
or
gs
pop
add
push
out
or
dec
pop
sub
xchg
xchg
cmp
popa
out
cmp
xchg
shr
sub
dec
divl
mov
arpl
add
xor
xchg
daa
jmp
in
std
sbb
lds
add
scas
xchg
sub
sbb
inc
sbb
fs
dec
mov
ret
decb
mov
hlt
pop
gs
inc
add
pop
repnz
sub
in
jno
or
cmp
insb
pop
xlat
ss
push
fsub
fistps
aam
outsl
sbb
rolb
ja
push
mov
and
inc
xchg
ss
jge
stos
stc
xlat
xchg
pop
adc
leave
inc
mov
cmp
adc
dec
sbb
pop
jecxz
jne
xchg
nop
sbb
sbb
dec
cmpsb
loop
inc
aas
test
sti
lret
cmp
into
pop
mov
cmpsl
sbb
xchg
mov
repnz
lods
sub
or
int3
inc
pop
imul
and
je
and
jno
outsl
pop
aam
aas
sub
dec
and
cmp
xor
movsb
add
outsl
pop
adc
aaa
mov
jl
dec
shl
dec
call
sarb
mov
jecxz
je
sbb
nop
ja
sbb
inc
cld
pop
push
push
inc
scas
push
inc
into
mov
push
popf
ret
in
mov
mov
xor
cmc
clc
jl
push
sub
mov
jecxz
jge
pop
cltd
xor
mov
mov
or
push
repz
xor
xchg
ds
stos
mov
rcrb
add
das
int
jmp
xchg
les
adc
and
daa
mov
push
aam
pop
ror
scas
leave
xchg
rcr
aas
sub
stc
inc
pop
mov
or
xor
sub
jne
inc
pop
mov
rcrb
cmp
xchg
das
dec
sbb
out
outsb
xchg
cli
movsb
fstl
xchg
jne
adc
cld
mov
fimull
jle
lcall
push
in
xor
mov
jae
mov
pop
imul
pop
popl
pop
incl
movl
je
xchg
xor
test
loop
xor
insb
arpl
dec
stc
and
rclb
into
aad
sbb
jo
sub
fmuls
stos
stc
loopnew
testb
sti
and
loop
xor
popf
insl
gs
nop
gs
cs
cmp
cmp
rolb
inc
not
imul
imul
sub
xchg
in
gs
insb
cmpsb
mov
dec
sub
jecxz
cmp
pushl
in
mov
jo
mov
xor
mov
in
shl
test
and
xor
enter
test
mov
adc
ret
cmp
and
cmc
repnz
jmp
xchg
adc
rorl
icebp
xchg
data16
js
inc
mov
jmp
mov
push
or
mov
repz
sbb
scas
bound
add
insl
es
sub
push
loope
sub
jb
jmp
dec
rclb
pop
je
adc
scas
push
std
das
xchg
ja
mov
sbb
jae
jp
inc
pop
jne
repnz
dec
sub
mov
pop
cmpsb
pop
cmp
push
adc
cmp
test
mov
jb
sub
pop
in
aaa
mov
adc
xor
fs
ficompl
out
dec
decb
mov
outsb
insl
dec
ljmp
push
in
clc
fidivrl
mov
jle
mov
jo
cmc
mov
sbb
xor
cmp
pushf
add
movb
push
pop
enter
dec
inc
push
in
push
or
or
jecxz
neg
add
cld
popa
sub
es
stc
fimull
jne
cmpsl
call
sbb
inc
gs
sub
loope
call
fstpt
mov
aas
out
add
js
dec
xor
addr16
test
fstpt
and
je
movsb
inc
cwtl
out
push
repnz
xchg
jmp
sub
adcl
mov
clc
andl
inc
and
and
sub
imul
lret
loop
sbb
neg
mov
push
test
icebp
inc
fdivp
mov
cli
push
lcall
fdivrl
push
loopne
pop
jle
clc
je
mov
in
test
in
pop
dec
je
sarl
mov
add
faddp
dec
mov
cmpsb
mov
stc
or
and
cmp
adc
inc
movsl
aaa
fdiv
cmp
sbb
les
push
add
scas
mov
outsl
add
or
cmpsb
notl
lods
insb
xchg
loop
cmp
cwtl
lea
je
pop
scas
icebp
hlt
mov
xorl
push
in
push
mov
pop
pop
jbe
or
shlb
mov
loope
mull
jp
mov
inc
sbb
test
adc
out
gs
xor
pop
sti
pop
jecxz
orl
inc
fsubrl
inc
insl
stc
sahf
jbe
lcall
cmp
pop
lods
loop
sahf
fnstenv
mov
fiaddl
dec
inc
cmp
xor
sbb
push
push
sti
add
sbb
pop
sti
lea
bnd
mov
or
adc
push
test
sbb
cmp
mov
dec
cmp
lods
and
fsubrl
xor
pop
loope
pop
jno
sub
xor
imul
lret
mov
sbb
or
sub
mov
xchg
or
xchg
jne
sub
and
aas
mov
out
ljmp
es
push
leave
les
jl
add
int3
insb
adc
das
enter
shrl
outsb
jno
mov
mov
push
inc
jge
jns
es
test
sahf
into
cmp
addr16
adc
xchg
and
jb
fimull
mov
cmp
jp
mov
and
cli
and
mov
or
jmp
hlt
shr
int3
pop
notl
jo
insl
stos
push
pop
lods
add
mov
movsl
in
popa
pop
inc
inc
jle
push
in
mov
and
rep
and
insl
mov
popa
enter
xor
xchg
mov
in
xchg
xchg
fidivl
add
addb
inc
std
das
push
sidtl
or
nop
pop
ret
ljmp
sbbb
scas
adc
in
in
arpl
xchg
push
out
mov
pop
pop
stos
sbb
mov
mov
stos
pop
icebp
js
pop
mov
jmp
clc
fs
bound
add
mov
movsl
add
dec
test
and
mov
inc
jmp
xchg
mov
push
pop
icebp
movl
cld
mov
mov
stc
dec
sub
int
and
out
add
aam
push
in
call
or
xor
inc
mov
sarl
fsubl
and
add
cmp
mov
arpl
rcrb
stc
and
mov
clc
daa
mov
test
xchg
mov
xchg
add
loope
mov
sbb
je
xchg
xor
jecxz
cmpsb
fucomip
stc
inc
or
xchg
jae
cmpsl
addr16
jl
inc
mov
sbb
mov
sbb
stos
mov
lcall
sbb
push
popa
push
sub
loop
rclb
xor
into
xchg
test
jge
lds
testb
loope
jg
xor
push
insl
insl
xchg
pop
mov
ret
nop
sub
push
add
out
test
xor
jle
jb
xchg
sbb
test
repnz
add
mov
aas
imul
stos
sarl
rol
test
arpl
scas
test
ja
loope
cli
jg
in
stc
int3
sub
sbb
inc
ja
cmp
xchg
xchg
push
cmp
and
and
pop
xor
hlt
dec
rcll
sti
mov
rcll
mov
xchg
repz
inc
mov
outsb
inc
lret
fdivl
rclb
pop
aam
mov
into
cwtl
mov
jo
lods
cmpsl
stos
xor
sahf
daa
cltd
sti
ret
insb
scas
cmc
cmp
test
xorl
sub
in
lods
shl
xor
call
mov
flds
iret
lret
adc
pop
push
test
xor
or
xchg
dec
mov
pop
adc
inc
adc
stos
mov
push
xor
xchg
or
lahf
jge
mov
pop
rcl
jo
ds
out
adc
adc
call
push
pop
lahf
outsb
sbb
dec
add
into
movl
js
or
dec
lea
enter
mov
mov
das
push
sub
inc
sbb
scas
rcll
jmp
jnp
xchg
pusha
fidivs
mov
popa
and
jl
jbe
andl
aam
scas
sub
sub
call
add
push
adc
push
sbb
movups
and
pop
sub
dec
lock
mov
sar
push
ss
ljmp
out
clc
leave
xor
cmp
cmp
pop
mov
mov
sbb
or
dec
inc
stos
mov
xchg
jp
push
mov
pop
adc
sti
adcl
and
pusha
jnp
les
rcpps
mov
push
jns
nop
cmp
sarb
push
mov
mov
mov
sbb
pop
jae
ficoml
stos
push
pusha
adc
mov
movsb
shlb
or
lods
call
push
scas
push
push
test
push
pushf
jb
or
jns
xor
ret
pop
stc
adc
cmp
popa
aaa
nop
aam
call
adc
sti
adc
sub
lods
mov
push
sub
imul
add
sbb
aad
add
dec
adc
adc
ja
cmpsb
adc
xchg
popa
daa
test
xor
outsl
in
enter
cmp
int
xor
push
push
push
mov
mov
cltd
nop
aam
in
inc
inc
mov
xchg
add
mov
ljmp
and
xchg
mov
push
aaa
ds
inc
bound
pop
inc
repz
and
outsb
jmp
movsl
insl
fdecstp
push
add
lar
jb
sub
das
sub
add
sub
mov
or
or
xchg
xor
push
sub
add
arpl
sbb
out
xor
and
punpckhwd
fisttps
xlat
push
push
cmp
aam
in
add
sbb
addr16
aam
imul
movsl
icebp
xlat
push
add
fsubrl
pop
cs
push
xchg
pop
dec
int3
rolb
in
pop
sub
aaa
fnstsw
imul
add
jno
xchg
addl
int3
mov
data16
or
pusha
ja
mov
mov
inc
adc
add
adc
push
sbbb
push
loop
scas
push
loopne
cmp
xchg
mov
js
in
sub
enter
push
xchg
add
lea
cs
shrb
jnp
inc
cmp
shl
sarb
or
xor
cmpsb
dec
push
push
hlt
add
xchg
or
add
hlt
inc
out
or
rcrl
sub
jle
jno
scas
addr16
stos
cmp
sub
bound
push
loop
mov
scas
sub
xor
and
adc
enter
out
out
ret
lods
ljmp
rcrb
fdivrs
jbe
ja
lods
gs
rcr
popf
pop
mov
ss
scas
cwtl
or
roll
aad
pushf
mov
xor
xlat
cmc
sub
inc
push
pop
repnz
mov
mov
and
bound
test
sub
cmp
mov
mov
xor
shll
outsb
cmp
pop
outsb
movsl
xor
cld
dec
pushf
jg
mov
push
fs
je
or
mov
fimull
loop
xor
aad
fsubl
jb
push
push
inc
and
mov
pop
lret
insl
lock
or
fdivp
push
add
push
les
mov
mov
out
jge
and
mov
and
fldl
jl
xor
stos
xchg
mov
or
add
and
adc
popa
sbb
scas
pop
gs
mov
or
ss
mov
xchg
jmp
out
lret
ja
scas
or
push
sbbb
je
mov
cltd
pop
es
lock
lds
cld
sbb
push
sbb
pop
ja
sub
lods
jns
mov
mov
lret
cltd
mov
or
mov
sub
or
dec
aaa
cld
hlt
xchg
push
lods
scas
adc
pop
dec
xor
add
xchg
je
pop
rolb
and
leave
mov
add
cmp
mov
scas
xchg
cmp
mov
and
and
aam
xchg
pop
sub
add
jbe
fcoms
xchg
mov
add
xchg
add
iret
xor
xchg
daa
xchg
pop
out
adc
loop
mov
lret
inc
or
mov
sub
add
int
inc
movsb
push
lods
pop
pop
addl
jg
dec
jg
test
and
pop
out
jge
push
pop
aaa
mov
jmp
dec
pop
jle
repz
pop
mov
daa
insb
mov
cwtl
pop
jae
ljmp
xchg
mov
add
jne
xor
mov
pop
fldenv
and
lock
orb
jecxz
sbb
imul
mov
nop
cs
xchg
sub
mov
sar
popa
push
adc
fstpt
cmp
jno
out
in
imul
int3
pushf
adc
sbb
sbb
test
aam
adc
inc
test
sub
adc
sbb
xor
cmc
xchg
ss
std
clc
push
and
outsb
cltd
sarb
clc
insb
std
fsubp
test
bound
test
xor
pop
add
mov
rorl
push
movsl
int
fldenv
mov
fucomip
mov
xor
lock
lcall
jp
add
nop
mov
dec
cmpl
stos
mov
lahf
sahf
sub
mov
xor
mov
sbb
dec
sub
adcb
mov
and
xchg
jecxz
arpl
adcb
sub
adc
dec
loopne
dec
xchg
fcomps
test
pop
sub
xlat
inc
rcl
addl
aam
push
ds
test
repz
mov
sahf
xor
xchg
xchg
sahf
adc
pop
ss
pushl
outsb
pop
fldenv
sub
rorb
dec
in
inc
cmpsl
inc
cltd
icebp
add
shll
sub
xor
adc
mov
mov
push
aam
inc
iret
adc
and
push
test
mov
dec
dec
xor
sti
clc
int
cmpsb
push
daa
in
dec
mov
add
in
add
push
jne
loope
inc
fbld
pop
fdivs
stos
movsb
pop
out
cmp
mov
ss
into
xor
xchg
pop
sarb
mov
jge
jo
xchg
lock
ljmp
lods
notb
out
adc
xchg
adc
sbb
push
lea
pop
push
fildll
imul
outsl
int3
push
mov
add
out
jno
dec
cmpl
subb
das
push
stos
in
inc
add
ss
sub
mov
leave
pop
and
imulb
add
enter
adc
ror
movsb
sbb
test
ds
cs
xor
daa
add
fildl
push
pop
pushf
mov
imul
test
jae
xor
add
mov
mov
scas
in
data16
aad
cmpsb
loopne
add
jle
dec
ja
mov
sub
lock
push
mov
inc
mov
add
rcr
add
out
inc
dec
ja
arpl
pop
ja
imul
mov
fildll
cmp
xchg
xchg
dec
jle
pop
mov
inc
lds
sbb
imul
mov
scas
into
jae
pop
outsb
cmp
gs
mov
std
lahf
dec
xchg
sub
outsl
adc
add
push
cli
mov
cmpsl
sahf
call
nop
mov
lods
nop
push
insb
clc
cmp
les
inc
and
test
je
cmp
popf
cld
pop
jns
aaa
jmp
aam
add
lea
jge
sbb
inc
std
cmc
mov
cmp
addr16
mov
sub
cmovns
jg
push
push
dec
dec
pop
xor
mov
dec
cli
mov
cmpsb
xchg
imul
or
push
push
ja
push
inc
mov
xor
mov
mov
inc
sbb
dec
in
decl
lahf
jnp
cmp
mov
popa
fistps
push
mov
inc
xchg
into
daa
pop
mov
jp
inc
dec
nop
loopne
movsb
mov
popf
pushf
stc
push
sti
push
aad
inc
mov
lods
pusha
xor
push
xor
lret
out
push
jecxz
adc
aas
imul
imul
enter
in
pop
dec
jb
sbb
icebp
add
cmp
and
or
fstl
xchg
scas
sbb
test
xor
sbb
stos
jne
cs
xor
add
sub
push
and
ja
inc
push
insl
mov
xchg
and
add
imulb
mov
bound
daa
rol
outsb
stc
or
lret
jns
jno
aam
inc
loopne
ja
xchg
dec
les
or
and
es
ds
icebp
ds
sbb
sub
and
out
repnz
gs
dec
fwait
fs
push
icebp
pop
lret
sbb
rcll
fnsave
sbb
aaa
mov
sbb
pop
dec
scas
bound
cmc
mov
gs
aas
mov
sub
mov
push
sahf
sub
ljmp
stos
insb
test
or
cmp
sub
stos
xchg
jno
and
loopne
sbb
gs
pop
int3
gs
dec
loop
cmpsb
inc
loop
popa
jbe
jmp
xchg
sub
out
fsubrp
jmp
pop
sub
sti
aam
push
jbe
roll
push
lods
das
jb
pop
pop
pop
insb
les
sub
repnz
mov
mov
fidivs
and
or
pop
mov
scas
jae
pop
sbb
sbb
jl
xchg
insl
sub
mov
dec
adc
aam
push
lods
mov
mov
inc
xor
mov
lds
jae
pop
pop
xor
dec
pop
mov
jae
sti
and
dec
sar
leave
out
fiadds
test
add
cmp
cltd
stos
push
leave
or
orl
push
movl
mov
adc
in
sbb
xor
pusha
ret
in
and
inc
daa
test
sahf
adc
xchg
mov
mov
das
fst
aad
dec
jmp
in
sahf
xor
push
les
cmpsb
cwtl
divb
js
push
call
js
mov
daa
cmp
mov
clc
mov
icebp
mov
stc
adc
sub
jo
gs
test
and
sbbb
dec
sub
push
lods
fs
cmp
lea
les
sub
les
sub
and
or
sahf
imull
scas
dec
out
subb
movsb
cmp
popa
and
xor
sti
adc
lcall
cmp
mov
dec
scas
fcoms
dec
ret
push
mov
and
adc
inc
pusha
mov
cmp
fisttps
mov
push
inc
mull
cmpsl
pop
imulb
adc
or
dec
scas
in
mov
loopne
mov
lds
jp
jb
or
jl
popa
lods
inc
cld
sbb
icebp
shll
fs
gs
scas
xchg
fcomip
hlt
inc
dec
xchg
hlt
xorl
xorl
xchg
push
mov
sub
lds
dec
int3
pop
aas
subl
jno
jl
and
pop
sbb
daa
test
push
fistl
jp
pop
rolb
or
cmpl
jbe
aaa
or
xor
gs
jg
dec
loopne
aad
mov
into
sub
inc
repnz
ljmp
je
sets
xchg
cmp
shlb
push
inc
decb
lods
mov
lea
test
sub
xchg
lock
and
push
xchg
adc
and
insb
dec
fs
ljmp
push
std
mov
stos
add
stos
mov
ss
xchg
fs
aaa
int
jge
adc
mov
adc
dec
loopne
pop
fsts
sub
lods
pop
add
or
mov
fnop
or
shrd
subl
mov
lcall
push
cwtl
out
and
jmp
mov
sub
inc
aam
jmp
jle
pop
xchg
pop
xor
lock
aas
xor
lea
or
ds
fadd
xchg
lahf
pop
loopne
dec
fucompp
in
dec
jp
mov
testb
movsb
pop
loop
xchg
pop
xchg
mov
push
gs
mov
pop
mov
adc
insl
popf
sti
movsl
fldl
stos
or
and
loop
lret
xor
outsl
jp
lret
inc
jge
imul
test
jbe
fdivr
imulb
outsl
sub
dec
inc
hlt
call
rcl
push
clc
mov
and
inc
mov
sub
inc
rorl
scas
xor
idivb
push
add
out
sub
xor
ds
mov
add
cmp
xchg
pop
cli
cld
xlat
bound
dec
push
stc
or
adc
dec
or
inc
std
pop
push
push
ja
push
ss
dec
adc
aad
int3
push
and
jnp
dec
pop
xchg
jl
cld
idivl
adcb
es
sbb
push
imul
xlat
jo
and
xchg
mov
dec
ret
xor
adc
pushl
sbb
push
pop
lret
xchg
cmp
inc
add
aaa
push
jge
jb
sub
std
int
or
mov
sti
and
cmc
pop
cld
fildl
or
ja
movsl
pause
stos
sbb
imul
and
push
push
mov
sub
negb
inc
jb
jne
arpl
adc
mov
sti
ret
clc
sbb
push
mov
adc
sti
inc
pop
shlb
mov
inc
scas
mov
sub
push
cmpl
sub
cmpsl
fwait
popa
or
scas
ds
test
sbb
xor
je
sbb
sbb
or
nop
mul
clc
dec
out
or
inc
sub
sbb
sub
dec
push
jno
insl
sub
mov
adcb
cli
pop
xchg
loopne
push
cs
shrl
jge
cmp
push
xchg
cs
mov
mov
lcall
imul
cld
mov
xchg
xor
and
repz
and
es
aaa
sahf
or
dec
dec
roll
int3
es
sub
call
mov
xchg
lret
adc
sbb
sbb
cmp
pop
movsb
cmp
mov
lret
icebp
jbe
inc
and
inc
xor
push
ret
jnp
icebp
ja
pop
loope
push
jle
push
flds
lods
test
jge
xor
test
ret
in
jbe
arpl
mov
clc
sub
mov
notrack
lock
pusha
data16
pop
or
cmpsb
adc
data16
xchg
mov
mov
fnstcw
fldcw
dec
or
pusha
fstpl
pop
dec
jnp
loop
roll
add
add
push
stc
cs
xor
faddp
mov
outsl
cs
imul
lock
xlat
dec
add
mov
xor
scas
out
dec
pop
inc
test
arpl
aaa
dec
or
push
and
cld
or
jne
mov
lret
cmpsl
add
test
jb
packssdw
mov
xchg
mov
mov
cmp
int
data16
shrb
pop
mov
cltd
add
and
add
jg
aam
test
jl
cmc
stc
pop
popf
xorl
fildll
ljmp
in
sbbl
stos
lret
sbb
js
jge
ror
jne
ffree
mov
push
push
daa
mov
mov
aad
sub
pushf
cmc
les
mov
dec
ret
mov
push
xchg
xor
and
data16
outsl
cld
cld
daa
xchg
mov
ret
scas
xchg
xor
push
pop
mov
test
xchg
test
pop
sub
stc
repz
mov
sbb
dec
mov
mov
fiaddl
test
nop
xor
ljmp
inc
pop
mov
push
rcll
mov
mov
and
mov
and
or
subl
icebp
es
inc
pop
fnsave
rorl
out
hlt
mov
sahf
in
jno
sti
add
js
in
pop
fcompl
jl
cmp
xchg
fisubrl
inc
push
sub
sub
iret
ss
push
sti
jp
xlat
and
add
cmpsl
inc
ret
daa
test
adc
dec
push
dec
popf
testb
mov
cmp
bound
mov
cmp
insb
sub
mov
jle
pusha
cmp
ret
popf
inc
mov
mov
jne
sub
mov
pop
iret
in
leave
mov
push
push
in
dec
adc
sub
and
adc
leave
xchg
jmp
lahf
adc
insl
adc
int
imul
xor
add
inc
test
jno
jns
push
stos
adc
fwait
mov
inc
inc
shll
mov
loopne
les
xchg
mov
inc
pop
repz
out
jl
test
xor
mov
pop
mov
icebp
test
add
pushf
jmp
rclb
sbb
xor
xchg
jcxz
add
mov
sub
cmpb
fcoms
inc
mov
inc
enter
jnp
sahf
jbe
mov
call
aam
xor
add
jge
mov
cmp
push
test
xchg
lahf
jmp
vmread
mov
stc
adc
into
and
xchg
sahf
shll
jo
add
mov
sti
cltd
push
sbb
xor
push
int3
xor
sbb
mov
mov
cmp
es
inc
lock
cmpsl
xor
enter
stc
mov
pop
add
adc
and
mov
test
jecxz
es
rcpps
pushf
lahf
cmp
in
fs
adc
pop
cmpsb
roll
lods
jb
js
negb
js
pop
iret
or
inc
aad
leave
cmp
test
mov
pop
dec
mov
test
push
sbb
call
sbb
icebp
push
imul
and
stos
mov
jmp
popl
das
cs
jmp
jno
jecxz
dec
mov
push
gs
fwait
jnp
mov
ds
sti
jbe
push
ja
push
mov
mov
jns
push
mov
and
imul
and
mov
or
and
hlt
xlat
and
cmp
fdiv
push
dec
test
lahf
in
xor
and
xor
js
mov
jmp
popl
jmp
out
cmp
cltd
arpl
mov
mov
test
or
lods
xor
sbb
dec
xchg
aas
mov
cli
mov
inc
fstpt
xchg
jmp
and
fwait
xlat
clc
mov
jo
cld
mov
les
std
cmp
mov
int3
fld
push
jns
ds
enter
or
scas
xchg
mov
shrl
or
mov
dec
and
dec
mov
ljmp
jbe
lcall
outsl
mov
mov
outsl
fwait
pop
push
sub
adc
add
push
or
mov
mov
cmp
jmp
xor
andb
inc
sbb
adc
cmp
or
xchg
pushw
cmp
in
xor
pop
mov
imulb
aas
cmp
lods
addb
orl
dec
or
jge
test
cmp
movsl
imulb
scas
dec
ljmp
push
hlt
inc
pop
or
mov
sbb
data16
scas
imul
push
into
repnz
fld
push
cmp
popf
scas
jno
push
pop
arpl
fcomp
mov
jmp
adc
andl
dec
test
dec
inc
mov
lret
jecxz
out
in
mov
leave
push
mov
test
jb
dec
rolb
cmpsb
xor
in
xchg
pop
test
cmp
mov
mov
out
xchg
into
sub
in
fstps
adc
outsl
pusha
xchg
ret
ljmp
sbb
lahf
mov
movsb
aam
push
cs
xor
push
push
cmc
push
nop
push
mov
gs
mov
jge
push
cmp
loopne
push
mov
sbb
mov
inc
sbb
rcrl
aad
push
popf
test
cmp
cmp
icebp
jecxz
enter
mov
push
inc
stos
and
adc
idivb
mov
xor
push
aaa
cmpsl
in
minps
pop
aas
pushl
mov
xchg
pop
jl
es
mov
pop
cltd
stos
into
add
sti
in
imul
mov
xchg
lods
mov
mov
fisubrl
pop
dec
fwait
xlat
mov
andb
bnd
push
fldl
shll
ljmp
loope
push
ss
jbe
ss
xchg
loope
rolb
pop
movsb
popa
or
cmp
mov
sbb
aam
cmpsl
xchg
adc
jne
dec
bound
pop
jae
gs
adc
push
mov
ficomps
pop
pop
inc
xor
dec
out
xor
fcoms
or
mov
add
and
outsl
test
pop
bound
inc
cwtl
push
in
or
aam
jmp
fimull
push
lods
jns
aaa
mov
rorb
add
xor
out
dec
inc
jns
hlt
insl
or
pop
popa
ja
rclb
cmp
int3
pop
hlt
ss
push
stc
fcoml
mov
rol
xor
adc
jl
popf
xchg
add
fsubs
sarl
xor
icebp
xlat
dec
sbb
imull
sti
fisubs
ds
sub
xchg
ret
jg
pushf
xchg
mov
dec
fnstsw
lret
mov
jo
dec
mov
cld
add
jl
jb
pop
test
sub
xchg
cmp
push
pop
mov
jae
test
push
subb
or
push
outsl
out
in
mov
mov
sahf
add
mov
fdivr
lds
mov
enter
xchg
mov
pop
lock
in
cld
pop
adc
pop
cs
cwtl
inc
repz
or
fwait
hlt
mov
sti
or
or
icebp
nop
xchg
lds
lret
xchg
inc
notb
mov
cmp
add
cmp
icebp
ja
out
pop
daa
loope
jbe
imul
rcrb
sbb
mov
add
add
in
in
adc
lods
nop
mov
sub
outsb
fcomip
lret
cmpsl
aaa
bound
aas
mov
xchg
lret
fstpt
inc
dec
sbb
xlat
jge
dec
lds
cmp
iret
test
sbb
jne
xchg
dec
es
std
cwtl
sub
into
pop
imul
les
and
sbb
and
fisubrs
fists
das
arpl
sbb
push
ret
lcall
std
inc
sbb
xchg
ficoml
mov
jl
cld
mov
dec
pop
sbbl
mov
fcoml
dec
xor
ficoms
xor
xchg
jmp
mov
int3
pop
out
or
leave
in
cmpsl
ret
dec
jno
dec
xlat
jns
sub
arpl
dec
xchg
inc
inc
xchg
rorl
mov
es
jmp
xchg
cmovo
push
jbe
pop
shrl
sub
or
mov
aad
xchg
jecxz
mov
scas
repz
pop
jnp
adc
loope
inc
std
and
push
lods
mov
pop
int3
inc
popa
cwtl
pop
inc
add
add
pop
jmp
cmp
mov
int3
inc
mov
insl
and
lock
movntps
and
pop
sbb
ret
dec
out
dec
cmp
or
sahf
roll
mov
pop
mov
inc
xor
pop
sub
js
sbb
adc
jl
stc
push
xor
xor
or
or
dec
push
daa
divb
gs
addl
hlt
xchg
test
pusha
push
scas
cmp
xor
mov
test
pop
cli
ds
lock
sbb
sti
fstl
push
add
xchg
xor
mov
fdivp
js
addr16
ret
fwait
cmp
hlt
roll
mov
push
int
fldcw
hlt
shlb
xor
frstor
ds
nop
rorl
and
pushf
fwait
or
mov
sub
loop
movsl
movsl
mov
mov
adc
mov
sbb
pop
cmpsl
mov
ljmp
jno
ret
dec
in
fcomps
and
daa
xchg
inc
leave
cwtl
dec
mov
mov
stos
cwtl
add
pop
xor
mov
jnp
ds
aas
bound
dec
test
adc
xchg
bound
mov
sahf
ret
push
jg
arpl
xor
add
mov
idivb
out
lods
mov
les
adc
fistpl
and
sahf
lods
inc
lret
insb
cs
js
push
inc
push
aad
or
and
imul
shll
xor
mov
jle
insl
inc
add
test
fnstcw
mov
add
mov
repz
dec
jns
or
lock
mov
and
lds
and
jge
mov
imul
cmpsb
push
mov
pop
das
jae
lret
adc
push
mov
decb
cmp
sti
jo
cmp
jo
mov
shr
pop
cmp
lret
in
gs
pop
aad
push
aas
cld
int
orb
push
fsubrs
aaa
js
sbb
mov
adcb
sub
push
aaa
das
das
inc
adc
xchg
out
xor
in
jge
or
adc
jge
add
mov
or
pop
adc
or
add
leave
mov
mov
movsb
fnstcw
cmp
lods
stos
orl
jo
xchg
mov
fcoms
push
jle
cmpsl
in
aaa
mov
dec
sub
fdivs
stc
dec
push
add
ja
dec
aaa
xchg
stos
jbe
push
sub
add
lods
xorl
incl
sbb
or
xchg
mov
pop
pop
mov
pop
and
sub
addr16
push
xor
imul
in
xor
mov
call
loop
push
fcompl
aad
inc
ds
xor
jnp
adc
outsb
test
mov
idiv
adc
cmp
push
mov
rcr
mov
push
int
xor
add
cmpsl
cli
mov
ja
mov
fimull
lahf
fsub
cmpsb
js
mov
cwtl
sub
lock
scas
or
mov
inc
call
je
or
jl
jne
mov
out
xchg
add
sub
push
adc
pop
or
outsb
add
sbb
adc
ficoms
loopne
dec
xlat
hlt
and
fcmovnb
xchg
and
adc
movsl
and
shlb
push
add
lea
or
sub
jp
testl
out
mov
push
push
outsb
xchg
aam
ja
mov
loopne
jge
push
push
popa
cwtl
mov
adc
mov
popa
popf
xchg
sbb
pop
push
or
and
or
daa
push
push
ds
jnp
dec
and
nop
das
jb
and
and
lcall
mov
ud2
call
lock
dec
movsl
push
pop
data16
lret
sbb
pop
xchg
adc
orl
leave
sbb
fiadds
scas
xor
lret
pop
dec
mov
cwtl
das
jmp
and
arpl
js
sbb
scas
dec
cld
mov
and
cmp
cmp
xchg
repnz
arpl
pop
mov
jno
lea
fucomi
cmp
inc
jne
daa
push
sbb
popa
call
ljmp
dec
test
or
push
loop
scas
or
scas
imul
mov
mov
jne
add
dec
movsb
dec
push
sub
jb
dec
dec
pop
xor
lret
fs
or
adc
mov
xchg
sub
aas
push
fists
repnz
aaa
add
xchg
int
leave
or
popf
std
mov
les
mov
dec
push
jmp
enter
jecxz
xchg
fadd
test
loop
mov
cmp
cmp
stos
adc
adc
adc
lahf
pop
imul
jae
sar
mov
mov
add
push
push
scas
repz
push
subb
mov
outsl
push
dec
push
push
jbe
adc
inc
cmp
inc
or
imul
orl
hlt
sti
mov
pop
in
jle
lret
and
inc
xchg
loope
fistpll
adc
gs
out
outsl
fidivrs
into
cmp
and
call
or
mov
adc
pop
stos
mov
mov
xor
movsl
hlt
cmp
adc
insl
clc
inc
sbb
and
jne
inc
sbb
pop
daa
mov
ja
iret
pop
lret
push
shl
fisubs
mov
lods
cmpsb
inc
pusha
in
or
daa
push
push
sarb
jb
mov
mov
rcrl
loop
stos
cwtl
jmp
divl
push
xlat
mov
lock
xchg
push
mov
xor
xor
pop
sub
jae
xor
add
jns
and
adc
loop
cltd
sbb
sub
xor
sub
xor
int
addl
inc
cmp
cltd
xchg
mov
add
or
or
nop
ret
arpl
inc
shlb
jle
xchg
das
lea
movsl
xlat
jno
pop
xchg
cmpsl
int3
jae
push
sbb
pop
fdivs
push
mov
push
mov
das
and
in
sub
ficoml
pop
sub
shlb
mov
into
pop
jno
insb
mov
xor
mov
pushf
sub
mov
pop
sbb
ficoms
mov
cli
in
dec
ficompl
push
push
and
push
cmp
push
xor
repz
in
or
add
push
mov
mov
dec
or
adc
inc
shll
fs
or
imul
fdivr
push
inc
mov
push
sti
pop
and
jne
idivl
and
adc
ja
and
cmp
dec
or
jl
jb
in
sbb
inc
outsb
sahf
add
pop
cmp
fidivl
adc
jmp
das
cs
in
loop
mov
push
testl
ret
popf
lret
inc
mov
outsl
push
loopne
clc
cmp
sbb
sbb
or
jnp
gs
repnz
adc
pop
test
adc
shlb
andb
ljmp
scas
iret
ljmp
aaa
stos
loop
xor
ljmp
scas
adcb
sbb
rcrl
cltd
push
or
and
cs
sub
sti
push
sub
and
push
jo
mul
fldenv
mov
push
das
cmpsb
or
push
push
fscale
push
lret
lahf
je
test
inc
push
inc
cmp
jge
dec
test
movsb
and
push
adc
dec
ret
jne
sbb
shrb
movsb
ljmp
push
out
or
xchg
cwtl
cmpsb
push
outsb
inc
ret
enter
cltd
pop
push
pop
imul
xor
pop
repnz
je
push
movsl
xor
add
int
mov
add
sub
cmp
mov
or
push
inc
jle
cmc
ficoml
pushl
jns
pop
lret
std
sub
int
fs
dec
mov
xor
cltd
pusha
sub
mov
pusha
sbbb
sbb
push
aas
andl
or
xchg
call
int3
jp
scas
inc
lock
in
mov
rcrl
scas
aas
rol
sub
and
roll
stc
sbb
pop
aam
lcall
sub
pusha
repz
mov
mov
sub
popl
js
sbb
pop
mov
or
loopne
inc
das
leave
hlt
mov
add
mov
xchg
xor
mov
in
loopne
jne
mov
push
js
test
jno
cmp
mov
pop
and
lods
cmc
insb
out
das
test
add
xchg
jbe
stos
movsb
dec
out
fsub
lods
cmp
sarl
pop
lret
mov
cmp
mov
repz
out
jbe
inc
int
aas
xor
push
mov
adc
cmpsb
push
fldl
adc
push
inc
ljmp
or
mov
test
dec
dec
dec
mov
sub
fdivs
shlw
imul
leave
jo
xor
mov
icebp
and
adc
push
jmp
out
fisubl
add
repnz
dec
xchg
ds
imul
pop
jp
outsl
mov
lcall
add
das
add
pop
sbb
enter
pop
loop
rorl
push
push
xor
xor
or
aam
lea
ret
mov
add
inc
mov
ja
in
mov
xchg
inc
ficoml
dec
rclb
and
scas
mov
mov
mov
lret
xchg
ja
adc
lcall
or
flds
js
leave
movsb
sub
inc
lret
lods
adc
dec
and
lods
mov
adc
popa
popa
test
mov
data16
jno
enter
std
arpl
pop
ja
dec
mov
and
out
or
sahf
rcrb
mov
pop
sub
fucomp
ret
insb
and
test
addr16
adc
sbbl
add
adc
out
mov
outsl
cmp
int
pop
mov
fiadds
aad
cwtl
push
lcall
shll
xchg
rorb
bound
mov
jl
or
inc
cmp
loopne
xchg
xchg
sub
xchg
ret
sahf
test
lods
jb
dec
xchg
test
icebp
aad
test
test
dec
sti
mov
adc
cs
and
adc
mov
pop
xchg
std
insl
sub
xor
mov
loopne
loop
insb
dec
femms
add
jle
test
and
enter
and
mov
jo
loop
aam
es
test
sar
fmul
cmp
xor
jg
out
scas
mov
push
cmp
fildll
lds
fistps
stos
fistps
xchg
or
cli
adc
cmpsb
cmpsl
and
int3
lock
sti
push
jg
cmp
push
dec
adc
mov
in
pop
xor
out
adc
mov
int
push
cmpsl
push
mov
mov
data16
push
movsb
lretw
das
push
push
adc
pop
pop
sbb
ret
dec
fldenv
sub
std
pop
sbb
dec
xor
sub
jne
sub
pop
iret
or
xchg
pop
mov
rorb
xchg
into
xchg
cli
out
adc
xchg
icebp
or
cld
mov
mov
test
fcoms
outsl
orl
mov
xor
lock
loopne
add
and
cmp
gs
dec
mov
pand
repnz
or
ja
repz
jle
jae
iret
out
and
add
sar
pop
jecxz
test
xchg
into
mov
mov
jecxz
inc
lds
repnz
pop
lds
fwait
mov
repnz
pop
mov
cmp
nop
sti
outsl
push
mov
xor
aam
ljmp
orl
pop
jl
xor
mov
mov
add
mov
std
lds
mov
insl
cmc
and
mov
pop
pop
in
cmp
dec
cs
aas
je
mov
aad
xorl
cmp
in
movsb
mov
jp
push
cwtl
fdivrl
loop
into
cwtl
and
mov
sbb
cmp
cmp
lret
jle
pop
mov
ret
mov
mov
mov
sub
mov
lahf
scas
mov
push
cmp
add
mov
sbb
imulb
fsubs
pusha
jmp
or
test
sub
jg,pt
adc
push
add
fstps
js
loop
push
mov
mov
call
cmpsb
sbb
loop
cli
xor
xlat
cmp
pushf
pushf
fcomi
mov
jp
or
fisttpl
fld
ret
pop
sbb
insl
push
xchg
pop
adc
lcall
lods
psllw
mov
pop
mov
paddsb
xchg
imul
lret
xor
mov
jne
outsb
jbe
xchg
pusha
sbb
and
adc
mov
push
imulb
inc
in
jmp
jg
dec
push
cltd
outsl
hlt
xor
and
ss
pop
xor
ret
fstl
jno
dec
js
add
push
jns
pushf
in
pusha
repz
xchg
jmp
or
jp
push
lods
fdivr
and
es
cmp
clc
scas
loopne
mov
inc
inc
mov
xor
mov
adc
and
push
insb
mov
fidivrs
int3
fs
loopne
mov
insb
lock
cmp
mov
mov
xchg
and
in
jecxz
es
aad
aad
cmp
or
jg
jnp
mov
outsb
adc
adc
aam
flds
or
adcl
cmc
cmpsb
mov
mov
pop
mov
test
andl
test
mov
or
shlb
cld
fadd
pop
dec
push
push
nop
sub
push
stc
push
movsl
xor
cs
inc
popa
sub
pop
add
outsb
add
mov
negb
jle
jle
das
fstl
push
imul
shrl
shl
and
mov
jmp
popf
fisttpl
int3
add
ljmp
repnz
push
dec
ja
xor
scas
pop
flds
add
cmp
int3
roll
shll
push
lock
add
mov
mov
sub
or
lock
pop
mov
rolb
sbb
and
fbstp
adc
jnp
in
or
adc
mov
pop
jmp
or
xchg
imul
xchg
nop
in
sbb
inc
ljmp
les
fsubl
testb
lods
mov
repz
mov
cld
lcall
xchg
xor
out
icebp
mov
xor
cmp
or
ret
adc
cld
std
mov
or
cwtl
cld
xchg
lds
jle
aad
incl
test
mov
fcmovu
push
mov
push
dec
xchg
in
push
repnz
mov
std
add
pop
cld
loope
insl
ljmp
in
pusha
sub
fmulp
les
iret
leave
lahf
outsl
or
or
inc
sub
inc
ds
adc
sbb
js
push
push
push
ss
shlb
pusha
inc
push
adc
out
and
mov
nop
sub
add
add
and
push
jecxz
mov
insb
pop
ss
cmp
aas
inc
jno
sbb
sbb
filds
aas
mov
dec
aad
and
cmp
ret
adc
inc
xchg
or
shlb
adc
fs
das
in
jle
or
mov
add
into
fstpl
mov
lock
scas
mov
divl
je
out
jl
add
fwait
lret
testb
and
fstpl
xchg
gs
pop
cld
sbb
pop
rcll
or
push
fstps
add
lcall
inc
ret
icebp
push
add
push
push
xchg
aas
push
pushf
cs
xchg
or
sbb
sbb
xchg
mov
push
lahf
adcb
insb
xchg
pop
cmp
pop
lret
cli
mov
pusha
out
int
lret
add
xor
or
sbb
push
xorl
cmp
and
xor
pop
cli
inc
push
and
insb
sbb
lods
jns
cmp
mov
push
in
dec
data16
es
lret
rep
xchg
addr16
orl
sbbl
mov
jne
call
and
xor
int
cmp
jbe
scas
jae
lcall
test
or
xchg
dec
sahf
aam
loopne
mov
outsb
xchg
mov
icebp
pop
lahf
data16
xchg
popa
jnp
dec
mov
jo
lods
mov
cmp
or
fidivs
xor
sbb
mov
lret
int
test
push
mov
xor
sub
xchg
repnz
jmp
loopne
stc
inc
daa
xorl
mov
sub
iret
add
mov
arpl
adcb
lea
mov
push
popa
xchg
mov
xchg
add
stc
in
aas
xchg
ja
mov
and
ljmp
gs
loope
inc
dec
inc
in
sbb
hlt
dec
int3
stos
jae
lods
mov
outsb
mov
or
dec
enter
int3
mov
or
adc
rcrl
shll
bound
cmp
jp
inc
enter
lods
pusha
xlat
or
dec
in
or
test
xor
aad
loop
ss
imul
adc
cltd
movsl
out
jno
loope
in
pop
push
cmp
mov
xchg
imul
outsl
imul
into
in
ret
and
outsb
push
mov
repz
insb
sub
mov
cmp
cmp
ja
inc
mov
stc
sub
cld
jp
mov
sbb
mov
icebp
jp
dec
cmpsb
pop
lea
hlt
mov
cli
cmc
in
les
fdiv
dec
pop
test
cli
sahf
add
lods
clc
and
xlat
aad
int
stos
xchg
mov
in
add
int
jecxz
xchg
lret
das
fadd
aam
mov
aas
in
lahf
push
rclb
inc
mov
xadd
das
mov
cmp
mov
sarb
out
decb
out
test
dec
push
insb
push
in
idivb
adc
dec
enter
push
xor
xor
inc
rcrb
push
add
jnp
xchg
pop
push
in
pusha
xchg
push
fisubs
clc
lea
data16
cmp
jae
jno
ja
mov
pushf
jnp
mov
lock
shl
cmpsb
mov
adc
stos
and
sbb
stos
add
lea
xchg
lods
mull
fstps
jge
das
mov
bnd
and
cld
insl
add
bound
add
ja
jnp
mov
and
out
sbb
pop
xchg
dec
cmp
stos
dec
jp
mov
repnz
sbb
scas
mov
sti
push
mov
sub
adc
daa
repz
pop
stos
jl
je
push
popa
leave
out
mov
or
and
adc
and
pop
xor
fbstp
ljmp
cmp
pop
int3
aam
cld
out
mov
mov
es
fcmovne
leave
arpl
pop
push
out
add
scas
add
fmull
insb
or
adc
jo
push
js
fbstp
or
jmp
popf
inc
imul
mov
push
xlat
pop
xchg
mov
dec
pop
jae
lea
call
sub
jne
jg
jbe
cwtl
or
pusha
cs
std
int
xchg
xor
js
ror
into
adc
cs
sub
mov
dec
icebp
dec
sub
daa
fucomi
jbe
lds
push
sbb
mov
jle
test
dec
js
icebp
repnz
lods
sbb
xchg
sub
adcl
xchg
aad
xchg
fsts
shlb
xor
xchg
sbb
fidivrl
mov
cwtl
ja
cmp
mov
or
in
mov
sbb
insl
push
loope
fsubrl
or
cmc
aaa
inc
int
shrl
fwait
sub
push
jo
addl
jge
mov
xor
adc
test
jne
dec
cld
jl
adc
or
inc
push
notb
mov
mov
or
sub
pop
or
sbb
mov
sub
push
in
mov
int3
mov
jnp
cmp
int3
add
and
hlt
and
push
jge
xchg
aam
mov
aam
icebp
daa
inc
jo
xor
or
add
mov
stos
push
negb
cmc
mov
xor
outsl
inc
stc
jae
pextrw
jg
jnp
sbb
test
add
jp
xchg
pop
add
mov
xor
xor
jb
pop
rcll
imul
lods
jae
lea
fistl
nop
shl
imul
test
out
jg
fucomip
and
and
ss
or
notb
jle
push
sahf
cmp
dec
out
sub
mov
popf
movsl
test
cli
aaa
dec
cmpsb
sti
push
les
sub
adc
jg
cmp
jmp
fst
or
popa
popa
scas
cli
lods
test
push
decb
cmc
cmp
loop
cmpsl
cld
jae
xchg
pop
push
xor
mov
ret
inc
dec
mov
push
mov
in
xchg
cmpsb
or
or
lahf
clc
mov
add
pop
xor
aad
test
mov
cmpl
rcll
addr16
shlb
insb
js
mov
cmp
or
jp
in
add
hlt
push
aam
xor
test
dec
cmp
push
pop
inc
ret
cli
in
in
out
ror
jl
cmpsl
cmpsl
daa
imul
iret
push
sub
mov
pop
push
sbb
jo
pop
lret
adc
loope
or
dec
aad
pop
push
mov
movsb
into
push
xor
sar
aas
aaa
mov
int3
aaa
xor
je
out
outsl
dec
push
mov
pop
cmp
dec
lea
outsb
ficompl
and
sub
loop
out
pushf
dec
xor
sub
cmp
popf
cmp
dec
or
lods
push
add
or
xchg
pusha
stos
push
outsb
xchg
mov
int3
jbe
loopne
in
test
dec
mov
push
pop
inc
cs
ja
out
add
mov
shrl
int
cltd
push
jnp
outsb
aas
xchg
add
adc
pusha
mov
mov
scas
jae
and
mov
fildll
aaa
cmp
test
sub
jo
xlat
repnz
mov
sahf
out
lds
dec
into
fs
aaa
call
cli
lret
add
dec
mov
test
jp
jecxz
clc
pop
dec
mov
in
cs
icebp
fs
or
pop
and
insl
or
lret
mov
mov
imul
aas
dec
and
mov
ja
imul
cld
test
adcb
add
jo
jecxz
jge
xchg
push
push
cmpsl
pop
mov
loopne
fdivs
and
call
push
ret
jg
rcll
or
divb
inc
dec
arpl
cmp
movsb
out
popa
xchg
int3
adc
push
adc
in
imul
pop
daa
push
mov
dec
cmp
subl
adc
fsubr
xor
dec
insb
jmp
add
lahf
bound
outsb
lea
add
jle
inc
inc
add
cwtl
mov
and
push
sub
fsubrp
jne
notl
scas
in
jb
inc
int3
cli
xor
subl
push
xchg
xor
out
push
dec
cmc
mov
lods
es
pop
mov
insl
shld
aaa
mov
dec
xor
push
pop
jae
mov
xor
lods
test
outsl
leave
mov
data16
fistpll
sbb
ss
sbb
addr16
mov
jl
aaa
mov
sarb
leave
mov
lret
mov
ja
inc
sbb
xchg
sub
mov
add
fs
test
out
mov
pop
mov
push
out
icebp
out
adc
js
fcoms
mov
xchg
inc
xor
sub
lods
or
push
and
jmp
fwait
jg
gs
sub
pop
jo
jle
test
nop
xchg
inc
das
jnp
dec
mov
dec
testl
xchg
call
cltd
ds
stos
cs
shr
adc
mov
adc
push
aad
rolb
mov
stos
push
iret
dec
xchg
dec
push
dec
inc
add
xchg
dec
js
out
xchg
xor
fnstsw
out
or
pop
call
popf
mov
dec
rcr
and
mov
sbb
xchg
mov
call
lods
shrl
xchg
sub
and
ja
jo
aad
sbb
outsl
icebp
clc
inc
icebp
mov
loopne
ljmp
sub
ds
or
inc
xchg
sub
xchg
std
lock
lods
dec
ja
test
daa
push
dec
pop
cmp
insb
mov
adc
mov
or
mov
jae
clc
mov
mov
pop
cmp
mov
in
rcll
and
mov
out
shll
movsb
andl
shlb
mov
dec
insb
insb
loop
test
idivl
sub
mov
dec
icebp
ljmp
mov
inc
ret
xchg
add
mov
xchg
sbb
aas
shlb
inc
lock
xlat
bound
xor
movsb
mov
lock
pop
jns
cmp
push
cmp
outsl
xor
xchg
movsb
sbbl
mov
push
arpl
daa
repnz
dec
sahf
push
popa
incb
addr16
or
je
movsl
das
mov
and
imul
cmpsb
inc
lock
or
addl
jge
jge
sub
imul
fcomps
sub
or
fucom
or
jno
stos
into
movsb
jg
lods
hlt
shr
adc
cli
faddl
lods
xchg
add
loop
push
dec
loopne
sub
mov
loope
repz
add
icebp
cld
sub
pop
shll
pop
out
sbb
push
lcallw
test
sbbb
fimull
sbb
push
arpl
inc
popf
xchg
out
push
push
pop
xor
inc
mov
inc
outsb
cmp
ret
mov
inc
mov
mov
ljmp
into
dec
dec
jle
or
xchg
jl
lods
dec
es
shrb
mov
int3
push
loopne
cmp
in
jle
ss
mov
lock
ljmp
outsb
or
ja
xchg
sbb
repnz
aaa
iret
jg
and
xor
outsb
lcall
mov
ljmp
sbb
cmpsl
or
jp
jle
jmp
stc
int3
add
jo
pusha
xcrypt-cfb
cmpsl
daa
and
inc
cmp
pop
js
add
add
outsl
out
iret
test
push
adc
or
fbld
inc
xchg
repz
adc
lock
es
dec
jns
fstpl
lret
in
jl
pop
sbb
pop
jae
mov
not
sarl
repnz
test
inc
insl
mov
sub
stos
pop
mov
hlt
testb
pop
sub
aas
fs
or
sub
or
cmp
call
lret
pop
lcall
insl
xlat
push
sbb
adc
insl
mov
push
nop
sub
sbb
sub
and
mov
test
mov
xchg
mov
mov
es
out
adc
pushf
cmpsb
mov
int
cmpsl
or
shlb
sub
pop
mov
cmp
cmc
les
xchg
push
xchg
sbbb
pop
xchg
cmpsl
lea
pop
adc
xchg
sub
sub
daa
push
inc
cs
cwtl
test
aaa
dec
xchg
aas
sbb
and
gs
std
or
adc
cwtl
pop
pop
xchg
shrl
xchg
push
sub
hlt
and
cmp
daa
xor
fdivr
int
mov
sub
nop
in
imul
mov
mov
lahf
nop
add
and
cmpsb
xchg
push
cs
pop
fsubrl
mov
adc
add
cmpsl
lret
lret
dec
cmp
mull
popa
pop
cmpsb
jo
push
loop
or
adc
or
dec
mov
xchg
push
jno
stos
flds
int3
inc
add
add
cltd
roll
or
mov
adc
adc
out
jns
push
stc
lods
rolb
jge
dec
jmp
push
ret
push
in
mov
test
adc
xor
jbe
lcall
sti
cmp
push
cltd
xchg
popa
mov
sub
mov
iret
inc
pusha
shlb
scas
imul
gs
daa
sbb
ja
int3
loop
mov
dec
cmp
stos
subb
xor
sub
iret
dec
mov
orb
jg
adc
decl
cltd
aaa
add
jl
xchg
lods
cmp
cmp
mov
fcmovbe
loop
scas
and
js
jbe
mov
std
loopne
xchg
loop
addr16
popf
outsl
sub
lret
stc
cmc
mov
jns
inc
mov
add
pop
repnz
das
push
popf
sbb
cmp
cld
nop
xor
jbe
push
mov
gs
insb
jg
rcrl
ljmp
addr16
scas
ljmp
in
rclb
shr
dec
cli
xchg
xor
sub
add
fistpl
lret
jnp
sub
and
test
idivl
xchg
test
scas
dec
pop
test
in
add
jbe
inc
mov
stc
lock
lock
fwait
push
xor
js
inc
addb
adc
sub
mov
sbb
shlb
ret
cmp
es
es
xor
incb
xor
hlt
idivl
out
movsb
inc
jns
in
xor
dec
mov
and
daa
loop
and
sub
and
ret
xor
cmp
xor
mov
jecxz
mov
push
inc
push
mov
sbb
call
xor
mov
pop
icebp
out
and
xchg
push
jns
aaa
push
movsl
mov
or
jb
push
dec
or
fstpl
xchg
sbb
shr
test
cmp
jp
push
dec
push
movsl
sub
sbb
inc
dec
inc
fdivrl
out
inc
loop
mov
fwait
lret
jae
sbb
mov
in
into
push
xlat
or
mov
shr
repz
inc
xchg
mov
and
push
lock
dec
or
adc
ret
push
pop
shlb
leave
lret
mov
std
daa
mov
rcrl
shlb
inc
test
nopl
jecxz
std
fnstenv
dec
xchg
xchg
aad
in
scas
ds
push
sbb
testl
push
xchg
shl
jle
mov
dec
in
movsl
lret
cmpsl
mov
xor
pusha
nop
lds
out
cmp
pop
dec
subb
xchg
out
mov
loope
xor
fcmovnu
or
inc
test
loope
sbb
adcb
idivb
dec
push
sub
imul
repz
jp
popf
pop
pop
sbb
iret
mov
in
push
repnz
loope
stos
das
clc
dec
lret
add
push
and
loope
xor
xchg
mov
xchg
mov
and
fdivl
sub
sub
mov
jg
sarb
stc
pop
mov
bnd
xchg
xchg
out
popf
fs
movb
push
xor
push
stos
aas
jle
inc
xchg
jp
adc
add
sub
sbb
pop
das
outsl
mov
popa
jp
cmpsb
lcall
cmpsb
lcall
fwait
pop
mov
lods
push
adc
jae
adcl
push
dec
stos
in
mov
jmp
bound
sub
push
cltd
pop
es
jp
adc
add
push
sub
shlb
test
jecxz
sub
jp
daa
pop
outsl
mov
bound
dec
stc
jb
pushf
lea
ja
adc
mov
mov
jmp
ljmp
dec
xor
shrb
jmp
cld
ret
mov
lret
fs
mov
sbb
in
jo
mov
pop
pop
sub
add
inc
rorl
inc
mov
ja
scas
testb
loop
clc
adc
sti
bound
sub
push
scas
in
cmp
sbb
cld
testb
adc
fisubl
addr16
pop
mov
rcl
adc
dec
mov
cmp
or
add
jne
push
inc
loop
ficoml
ret
out
dec
mov
jmp
pop
jno
sub
sub
outsl
or
out
push
pop
sbb
xor
adc
xchg
xchg
repz
sub
rorb
adc
xchg
jne
push
push
add
mov
cs
daa
jmp
rolb
sbbl
mov
les
lods
sbbl
jns
jmp
push
jecxz
clc
nop
rcrl
cltd
and
lret
leave
out
ja
cli
movsb
jns
push
inc
sbb
int3
push
dec
xor
aas
push
fs
rcrb
dec
out
roll
adc
inc
lcall
lock
jmp
movsb
lret
xchg
dec
adc
sub
test
mov
cs
test
ds
rol
sbb
faddl
addr16
dec
aad
lret
add
fsubrs
add
enter
and
push
leave
add
cmp
xchg
cltd
dec
shrb
mov
or
clc
shl
or
push
jle
dec
mov
lahf
data16
jae
sahf
out
ss
inc
sbb
mov
fcompl
pop
xorl
subl
cwtl
out
add
outsb
in
push
inc
es
lock
clc
and
pop
jne
enter
ds
or
daa
mov
push
mov
push
cltd
dec
popa
repz
inc
xchg
xchg
test
insb
cs
inc
cmp
mov
xchg
stc
jns
cli
jae
scas
dec
movsl
dec
ret
fs
and
imul
inc
adc
pop
and
jmp
notb
add
loopne
jmp
push
outsl
mov
inc
and
push
mov
cmp
shlb
sbb
cli
mov
sti
mov
and
xor
notb
cs
adc
jg
hlt
test
push
test
lods
mov
mov
sahf
sub
stos
dec
insl
pop
adc
and
mov
in
cmp
in
cli
xor
out
rcrb
ret
xor
adc
push
jecxz
mov
sbb
movsb
mov
les
negb
jge
mov
aad
cmpsb
in
cs
cli
mov
aam
nop
mov
cmpsl
cmp
fisttps
hlt
jne
jle
sbb
out
mov
add
jge
fiadds
or
int
into
aaa
scas
rcrb
aam
mov
push
daa
xor
sub
insb
or
mov
push
out
scas
jbe
decl
pop
fildl
xor
cmpsb
out
cmp
jns
adc
mov
rcrb
adc
add
pop
dec
das
ficompl
xchg
xchg
outsl
jne
rcr
mov
add
ret
xlat
mov
cs
jge
push
out
rolb
cwtl
fwait
nop
sbb
lret
lcall
insb
idivl
pop
dec
mov
hlt
inc
cs
inc
push
cwtl
and
sbb
lods
cmp
xchg
xor
ret
out
adc
jno
into
xchg
or
and
xor
dec
inc
xor
movsl
inc
cmp
in
lcall
dec
mov
lcall
push
sub
into
push
popa
ror
ret
dec
mov
push
es
inc
fldl
in
gs
shlb
mov
rcll
imul
popa
or
push
test
jae
cli
pop
movl
movsb
sbb
fsts
jge
xor
call
mov
subb
rcrb
xchg
pop
movsb
data16
push
xchg
fidivl
xchg
xor
or
jle
lods
inc
xor
xchg
xor
dec
xor
iret
mov
jne
inc
jno
outsb
push
pop
dec
insl
leave
sub
push
add
inc
add
sbb
xor
pop
dec
or
ljmp
add
fwait
in
jmp
push
mov
xor
fsts
fucomp
scas
test
adc
notb
jle
cmpsb
aaa
xchg
dec
dec
aaa
pop
cmp
xor
push
sbb
add
jle
ror
inc
popa
mov
dec
pop
mov
shl
clc
mov
mov
add
inc
mov
lods
dec
aad
iret
sub
mov
out
lock
xorb
push
and
mov
dec
xlat
mov
clc
dec
lea
pop
shlb
add
into
dec
mov
imul
push
inc
out
mov
push
adc
adc
in
shll
mov
mov
mov
repz
add
pop
dec
and
arpl
test
or
dec
lahf
inc
shlb
add
out
jl
aas
adc
bound
jb
sbb
popa
sbb
in
push
or
incl
jmp
inc
inc
jg
push
sarl
inc
addr16
ss
stos
loope
int3
jmp
mov
cmp
test
push
and
and
arpl
stos
data16
enter
hlt
sub
sub
in
lods
mov
rorb
mov
std
xchg
xchg
cwtl
aad
jne
cmp
cmp
pop
adc
lcall
or
mov
decl
pushf
push
lahf
movsl
sub
dec
jns
jmp
ds
imul
sbb
enter
add
xor
fnstsw
fldt
adc
jge
popl
dec
push
cld
jbe
pop
xchg
ljmp
adc
sbb
mov
mov
sub
xchg
in
cmp
dec
mov
popf
add
pop
mov
fs
inc
jmp
popa
call
mov
add
mov
mov
sbb
cmpsl
xor
pop
or
sbb
cld
js
es
sti
xchg
mov
cmp
pusha
xor
jp
shll
or
adc
lods
and
frndint
jo
jnp
inc
mov
aaa
ret
ja
mov
or
xor
outsb
xchg
jns
jl
mov
stos
pop
push
mov
pop
jecxz
push
sub
lds
mov
sarl
insb
inc
in
in
orl
cs
xchg
push
adc
mov
sbbl
test
fisubrl
shll
jbe
in
loop
lds
pop
lods
xchg
imul
sub
xchg
daa
push
cli
mov
xchg
inc
mov
jg
cld
xor
push
cmp
xchg
ss
int3
sti
mov
hlt
push
psubsb
vcvttss2si
enter
xchg
ljmp
sub
adc
sti
or
insl
fsubrl
ret
xchg
xchg
sub
hlt
les
sub
sub
jmp
or
les
push
or
lahf
inc
and
inc
mov
mov
mov
jbe
or
xchg
push
xor
adc
push
or
or
pop
jo
cmpsl
xchg
dec
test
pop
dec
pop
mov
inc
js
cmp
mov
sahf
sub
sbb
jae
pop
cmp
jno
rcrb
out
call
dec
out
mov
xchg
jb
stos
push
mov
dec
insb
out
xor
mov
jmp
out
lods
loopne
add
push
in
out
dec
cmp
leave
fiadds
mov
sub
cmp
iret
jnp
enter
rcrl
ljmp
sbb
das
sbb
sarb
aam
dec
test
push
out
jne
hlt
pop
xchg
fcmovu
mov
fsubrs
mull
mov
mov
lahf
push
xchg
cmp
lods
test
outsl
js,pt
enter
out
es
inc
and
cmp
xlat
push
mov
mov
sbb
andl
jae
cwtl
lret
outsl
mov
cmpsb
pop
or
xchg
xor
popf
mov
cmp
mov
fcmovb
sbb
push
xchg
cmpsb
pop
fwait
sub
push
xchg
call
leave
icebp
and
movsb
lret
push
leave
push
aas
xor
outsl
lret
inc
movsb
push
lock
pop
faddl
mov
inc
fcmovnu
ja
add
add
mov
jmp
sub
adc
mov
mull
xlat
lret
out
xchg
call
das
lret
pop
and
inc
pop
sub
rcrl
jb
pop
xor
out
pop
push
jno
fisubs
mov
pop
into
adc
aad
cmp
jmp
and
insb
add
push
dec
adc
lret
or
cmp
mov
and
aam
mov
mov
jg
push
ret
fistl
in
pop
add
aad
mov
lret
mov
pop
aam
aaa
sbb
cmpsl
jb
and
dec
cmp
out
mov
mov
adc
daa
push
insb
js
cmpsb
jecxz
add
push
fucomip
pop
xchg
loop
inc
cmpsb
in
mov
and
or
int3
lock
ret
movsl
nop
dec
push
lods
pop
test
mov
jno
pop
dec
sub
out
lahf
inc
inc
sarb
xor
sahf
iret
das
mov
push
cmpsb
cli
pop
pop
cli
xor
and
xor
aam
push
je
mov
adcb
ss
sbbb
xlat
add
das
std
out
leave
stc
mov
pop
js
pushf
aas
test
cmp
and
pop
adc
scas
scas
xor
out
cmc
in
sub
addb
mov
js
outsb
dec
loope
pop
sub
jle
inc
inc
inc
pop
out
xchg
scas
fisttpl
inc
xor
popf
push
push
pop
add
repz
cmp
inc
js
leave
aas
dec
push
ljmp
pop
les
in
leave
fcmove
xchg
int3
imul
push
fistps
cmc
shrl
jo
xor
sbb
mov
mov
lock
aaa
test
ja
inc
mov
stos
jg
add
inc
dec
sbb
adc
add
sarb
adcb
jge
pushf
outsl
mov
xchg
sub
ds
pop
cmovp
sub
cmp
jne
or
pop
mov
sub
scas
cmp
sti
fstps
jp
or
or
lds
sub
jecxz
outsl
aas
and
inc
aaa
xchg
add
das
mov
stc
mov
call
add
add
popa
push
rorb
cmc
cltd
inc
xor
adc
ss
repnz
lret
mov
cmc
mov
and
fsubrs
jecxz
dec
in
dec
rorb
dec
fdivrs
fnsave
in
pop
movsl
or
jmp
les
and
jmp
xchg
in
jp
into
and
divb
xchg
fs
adc
popa
andb
xor
jg
pop
xor
mov
jae
jo
loop
sbb
jmp
dec
addl
lret
push
cwtl
cmp
push
cld
jl
and
addr16
in
pop
cmpsl
dec
pop
test
add
sub
mov
sbb
xor
ljmp
inc
aas
testl
les
xchg
xor
std
dec
add
mov
pusha
xlat
test
mov
xor
pop
and
push
in
imul
shlb
sbb
in
dec
push
mov
cmpsl
out
sub
fidivrl
insl
idivl
iret
les
xchg
and
into
loopne
popf
jo
imul
xorl
in
mov
sbb
jge
ret
mov
popa
and
or
nop
arpl
icebp
mov
stos
loop
mov
or
sub
inc
mov
or
jl
jb
jbe
inc
push
arpl
shrl
int3
mov
mov
sbb
pop
inc
mov
mov
pop
xchg
sbb
push
fldcw
mov
dec
xchg
cli
mov
pop
cmp
std
aad
pop
sbb
daa
sub
inc
cmpsb
xchg
pop
cmp
loopne
in
xlat
hlt
jne
aad
mov
inc
add
xor
lods
and
jno
shll
sub
and
pop
sahf
sub
out
insb
add
rolb
out
cs
cmp
int
xor
dec
pusha
mov
out
sub
out
cmp
sub
push
jmp
sbb
sar
inc
imul
fcmovnu
adc
mov
imul
pushf
and
bound
jnp
popf
leave
sarl
in
lahf
lcall
pop
imul
das
push
xor
xchg
aas
cs
inc
sub
cmpxchg
push
xchg
js
mov
and
repnz
and
push
fisubs
jle
mov
ljmp
lea
or
movsl
push
js
adc
fiadds
shl
faddl
stos
inc
sbb
aad
scas
jne
cmp
inc
aaa
fs
stos
xchg
jne
xor
sub
add
mov
outsb
out
pop
sbb
shr
push
lcall
pop
cmpsl
scas
sbb
sub
xchg
pop
in
cli
loope
mov
pop
push
out
inc
ret
mov
fisubrl
mov
mov
jg
jno
sbb
loop
pop
push
mov
xlat
rcl
dec
cmp
mov
jae
fsubr
pusha
cwtl
sahf
fs
stc
sub
dec
add
std
in
inc
in
nop
test
mov
mov
push
and
dec
xor
jo
or
pop
adc
dec
sar
decl
xchg
mov
pop
sahf
xchg
ficomps
jbe
andl
pop
cli
adc
push
sbb
mov
dec
adc
pop
pop
stos
mov
xchg
loope
mov
xor
ret
inc
call
rclw
in
and
jnp
mov
xchg
stos
and
rcl
sbb
jp
push
test
addb
arpl
xchg
bound
xchg
jp
pop
jnp
lret
fldt
insl
inc
das
jne
fimuls
cmpsb
rcrl
cld
adc
mov
cltd
rcr
andb
lcall
enter
adc
push
mov
stos
or
idiv
es
mov
nop
hlt
jmp
aaa
out
addr16
movsl
mov
in
stos
mov
adc
xor
and
cmc
in
lock
xlat
cli
aas
insl
inc
stos
stc
dec
jo
pop
jb
mov
ljmp
bnd
jecxz
sub
add
mov
jge
repnz
xor
xor
imul
imul
and
xor
adc
outsl
xor
insl
rcrl
xchg
lcall
loop
cmp
sbb
ret
inc
test
pop
rorl
push
fidivrs
sub
in
add
mov
imul
push
in
lock
xchg
jl
jne
xchg
dec
and
scas
push
mov
ljmp
or
mov
push
and
and
add
push
int3
sub
les
push
loop
jge
xchg
aad
popf
sbb
adc
mov
ljmp
aas
fstpt
sub
add
cmc
mov
jmp
jmp
je
not
pop
in
in
jle
xlat
fmull
adc
fsubp
ds
sub
pop
dec
mov
ret
mov
jbe
cltd
jbe
sub
xor
pop
fcomps
std
jecxz
sbb
cmp
mov
pusha
je
inc
dec
cmp
jecxz
cld
mov
push
push
out
inc
cltd
push
sub
movsl
cmp
lods
pop
lea
rol
rolb
pusha
ret
shl
fsub
jg
int3
cmp
jbe
rclb
in
xor
pop
jb
enter
fsubs
rcrl
jl
fmuls
sbb
mov
jbe
ds
sbb
xor
rolb
fiaddl
fstps
repz
ret
push
mov
mov
push
mov
or
test
popa
sub
push
pop
pop
pusha
pop
stos
cmp
bound
ja
jns
in
or
inc
dec
pop
sbb
ret
inc
cmp
leave
mov
lods
cmc
xor
scas
sub
unpckhps
ret
sahf
jl
setl
mov
push
mov
lcall
inc
mov
push
gs
adc
mov
ja
cltd
adc
js
gs
fincstp
imul
and
repz
test
mov
leave
lahf
push
mov
dec
sarb
jns
xchg
jl
dec
stos
dec
or
jecxz
mov
mov
imul
mov
int
sub
pop
and
filds
call
cmp
call
iret
sub
sbb
sub
or
out
push
sbb
mov
cmp
movsl
xor
push
fdivl
push
lods
fs
inc
adc
in
adc
jne
xchg
insb
lods
pop
pusha
mov
pop
data16
lods
adc
pop
sahf
aad
xchg
sub
sbb
lret
addr16
imul
ds
sbbb
pusha
insl
cmpl
xchg
xchg
mov
mov
mov
xor
sub
adc
fmull
mov
inc
leave
mov
fcoms
negl
pop
xor
jb
add
push
cmpl
xchg
es
or
add
les
fidivs
aaa
hlt
mov
js
mov
clc
lods
add
ds
push
daa
cmc
add
frstor
adc
movb
aas
das
cs
cwtl
aas
imulb
cmpsl
push
cmp
clc
daa
loope
inc
push
int
icebp
test
jp
pop
inc
loope
sahf
inc
loope
movsb
sahf
ljmp
int
sbb
sub
or
ficoms
bound
pop
pop
mov
and
movsl
inc
shl
push
subb
pop
imul
jmp
aad
int
pop
and
xor
jmp
movl
cmp
fwait
and
xor
jbe
leave
nop
pop
fstp
push
mov
cmp
out
dec
sbb
nop
mov
adc
adc
je
xchg
gs
and
dec
sub
dec
inc
dec
fsts
xchg
lds
les
dec
sub
pushfw
stos
jae
sub
pushf
adc
jo
sbb
inc
xor
lods
pusha
sbb
add
push
cmp
add
je
jmp
bound
imul
xor
imul
idivl
cmp
in
mov
loopne
and
jmp
xor
dec
lds
js
push
out
mov
ret
insl
icebp
lods
pop
mov
xlat
dec
shlb
lahf
outsb
repz
shll
sub
push
add
pusha
out
inc
sub
cmp
andb
leave
aas
orb
sub
loopne
sub
jg
inc
and
jmp
fcomip
call
mov
mov
cltd
mov
or
imul
les
mov
mov
ret
int3
negb
mov
add
test
in
dec
or
adc
xor
dec
addr16
pop
jp
mov
sti
ljmp
adc
pop
mov
rcr
sub
arpl
nop
pusha
lcall
inc
xor
add
dec
push
mov
ja
pop
loopne
xor
and
add
xor
pop
mov
aam
lock
inc
and
xchg
fistl
adc
sub
leave
lea
xor
setl
cmp
mov
add
xchg
lcall
push
pop
lds
lods
mov
stos
fs
sub
inc
adcb
subl
pop
icebp
stos
cs
lret
insl
lock
cli
testl
sub
pop
pop
push
rcrl
jne
adc
iret
sub
xchg
inc
sub
mov
push
loopne
call
out
pop
shlb
jle
loop
adc
push
ss
push
std
mov
adcl
nop
mov
mov
push
xor
gs
icebp
imul
test
jns
sbb
je
jg
shlb
push
adc
jle
push
jecxz
push
inc
pop
xor
imul
mov
insb
cltd
icebp
sti
ret
rorb
mov
inc
lods
nop
popf
add
xor
sub
cmp
jg
dec
mov
lahf
jns
mov
jp
hlt
cwtl
cmp
or
adc
iret
mov
mov
outsl
int3
loopne
mov
mov
imul
dec
add
and
hlt
pop
jbe
cs
mov
stc
aaa
les
sub
es
test
cwtl
push
inc
push
jge
inc
and
add
push
loopne
cmp
inc
imul
pop
push
mov
mov
into
xchg
or
clc
inc
xchg
fdivrp
in
dec
mov
and
cs
xorb
xor
stos
jb
adc
ret
pop
push
je
mov
pop
outsl
xchg
jge
mov
addr16
call
dec
pop
pop
daa
std
dec
gs
lret
push
adc
mov
idivb
jnp
fstl
add
fnstcw
cld
gs
inc
lcall
dec
shlb
push
mov
in
mov
lahf
xchg
adc
sub
dec
hlt
jo
push
lcall
jb
pop
jae
pop
inc
sub
ja
fcoms
mov
pop
pushf
inc
dec
jmp
clc
or
sub
fs
or
pop
pop
sbb
out
jmp
rolb
std
mov
sbb
das
mov
add
dec
sub
mov
ret
lods
rcrl
adc
add
sbb
aas
push
popl
lods
in
int
gs
sbbb
mov
lahf
call
inc
scas
mov
or
xchg
add
adc
aam
mov
arpl
ljmp
jge
fildl
or
sub
out
not
jns
cmp
fisttpll
mov
inc
cwtl
mov
cmp
dec
sbb
and
cltd
aam
sbb
dec
cmp
inc
pusha
ljmp
sbb
push
dec
cmp
push
icebp
mov
mov
jne
inc
pop
call
mov
lret
scas
scas
shr
push
jno
push
pop
mov
mov
jle
sbb
cld
in
repz
int3
pop
and
mov
jne,pt
inc
loopne
xlat
cwtl
push
ret
cmp
mov
dec
pop
nop
test
pop
aad
lret
jbe
ja
xchg
ja
pop
jb
in
ljmp
mov
sahf
inc
push
xor
pop
xchg
enter
pop
insl
fwait
cmc
ja
fildl
in
adc
sub
xchg
inc
sahf
mov
das
push
sbb
pop
mov
sbb
je
scas
cmpsl
mov
js
mov
xchg
sbb
pop
xchg
sbb
push
push
jl
loopne
xchg
jno
xor
push
roll
mov
mov
popf
add
jmp
cltd
xor
and
mov
pushf
lret
jno
sub
xchg
lret
cmpsl
ss
xchg
add
adc
cld
int3
sarl
cltd
in
sbb
loope
shlb
test
lods
clc
pushf
loope
push
out
fistpll
cmp
imul
push
rcr
cwtl
outsb
hlt
addr16
push
shrb
push
aad
or
xor
dec
or
nop
lcall
lock
pop
mov
loope
cmp
mov
cmc
lock
mov
in
jl
xor
adc
test
mov
cld
xor
movsl
sub
inc
scas
les
daa
xchg
mov
faddl
dec
movsb
fbstp
movsl
pop
gs
mov
ret
adc
or
pop
insb
arpl
dec
jo
sbb
shll
adc
scas
idivl
push
insb
xchg
das
test
std
outsl
sahf
arpl
in
stos
adc
dec
xchg
push
jg
pushf
or
addr16
push
fwait
js
and
sbb
jmp
jge
adc
loop
sub
and
mov
push
mov
cld
mov
push
inc
loope
mov
mov
xchg
jl
inc
das
popa
sahf
call
notl
cmp
lret
andb
push
xchg
cmpsl
and
push
arpl
cwtl
cltd
add
lret
inc
jnp
lahf
dec
xlat
imul
movsl
push
cmp
loopne
frstor
daa
stos
xor
xor
lret
sub
leave
fmuls
mov
mulb
or
adc
xor
in
ret
lret
mov
adc
cmc
addr16
sbb
filds
mov
out
dec
dec
aam
and
bsr
ret
xchg
adcb
lea
add
mov
lret
inc
aaa
pop
aas
movsl
shl
xchg
iret
inc
shlb
jp
nop
aaa
and
cli
jns
push
aam
adc
add
add
push
es
inc
imul
jae
adc
aam
shlb
xor
stos
push
lods
push
pop
faddl
jg
inc
ljmp
cli
dec
shl
insb
jnp
popf
mull
sbb
int3
test
mov
push
cltd
shrl
add
fstps
sub
dec
ss
push
jge
jmp
lret
cld
stos
iret
insb
jp
push
xchg
sahf
dec
cmp
inc
mov
rcrb
cltd
pop
sbb
cmpsb
jbe
loop
xchg
lahf
and
dec
out
xor
imul
jno
fsts
je
jo
roll
sahf
sub
jbe
out
dec
lds
insb
mull
cmp
mov
sbb
dec
adc
stos
jge
cmp
cmp
mov
repz
sbb
orl
xchg
or
add
bound
mov
mov
or
mov
mov
dec
dec
movsb
testl
fdivr
jmp
jle
mov
pop
mov
lods
call
addl
mov
push
push
add
jns
mov
xchg
cmpsb
addr16
sbb
fstl
scas
jmp
adc
mov
rcl
or
lahf
jae
sbb
bound
bound
add
inc
inc
xchg
add
out
mov
and
clc
fimuls
pop
jp
test
adc
outsb
mov
mov
jbe
imul
dec
dec
mov
test
jnp
jns
jge
insb
mov
push
pop
in
idiv
jns
ss
sub
loop
lret
push
cwtl
xchg
add
cli
lret
lock
sub
mov
xchg
lods
lds
call
movsb
inc
dec
test
pop
movzbl
mov
jbe
sbb
mov
subl
xor
out
mov
push
or
cltd
mov
or
inc
leave
inc
inc
cmp
sub
lods
in
xchg
ljmp
je
push
dec
sbb
rolb
je
scas
inc
and
fisubrl
push
adc
jecxz
push
xchg
test
insl
cmpb
cmpsl
je
outsb
popa
roll
arpl
sbb
pushf
scas
xchg
push
stc
pop
mov
insl
das
sahf
into
push
stos
les
sub
psrld
xor
test
je
repnz
jno
add
xor
jg
leave
or
imul
fld
sub
pop
movsl
movsl
mov
xlat
push
push
jbe
add
cmp
test
inc
shlb
notl
shlb
jne
jle
aaa
or
dec
mov
bound
adc
sub
cmc
dec
fisttpll
pop
xchg
shr
inc
cmp
es
and
mov
jne
push
sahf
cli
fisttps
cmpb
in
dec
cmp
mov
popa
aaa
shlb
cmpsb
pop
loopne
xchg
fbld
cmp
shlb
fnstenv
mov
sbb
and
rcl
adc
outsb
std
mov
subl
not
xchg
fsub
inc
outsb
repnz
jge
inc
dec
subb
into
xor
lret
inc
ljmp
jae
mov
jg
cld
push
aam
sub
cmpsb
pop
mov
leave
jnp
lret
daa
js
inc
dec
cli
cmpsl
jmp
dec
fsin
pop
aad
das
jmp
push
les
add
xchg
inc
rcl
stos
sbb
inc
aaa
mov
fstl
daa
into
imul
push
in
adc
lods
les
pop
iret
imul
sbb
iret
loopne
mov
dec
subl
fnsave
pop
jmp
xor
out
out
xchg
inc
stc
rolb
adc
inc
cmc
pop
dec
pop
insl
ficompl
sahf
add
xor
jl
add
ret
inc
lahf
push
clc
push
xchg
cmp
push
data16
xchg
addl
loop
fisttpl
adc
ret
fsub
pop
pop
jae
syscall
xchg
add
pusha
cmp
mov
pop
in
clc
or
stc
xchg
sub
jl
or
adc
xor
push
nop
fnstcw
sub
lret
aad
fnstcw
icebp
stos
leave
cld
and
jns
mov
lock
push
cmp
loop
xor
jg
ds
dec
jno
repz
lahf
adc
gs
push
sbb
xor
leave
jmp
xchg
mov
movsl
cli
out
das
pause
and
xor
dec
lcall
shll
push
ret
lahf
sub
jg
in
xchg
fsubs
xchg
jnp
les
sahf
repz
mov
pop
push
mov
enter
ja
adc
cmc
push
sub
hlt
xor
scas
push
lea
pop
adc
dec
icebp
mov
inc
aaa
out
int
rcr
inc
xchg
push
dec
loopne
inc
lea
and
mov
mov
xor
out
push
fcmove
mov
outsb
in
sbb
adc
adcl
lea
in
imul
stc
mov
lcall
or
dec
xchg
fdivs
decb
int3
fcompp
cmc
sbb
xor
fsubrl
and
enter
mov
mov
cli
lret
or
push
in
pop
fcompl
jle
out
sub
jp
cmp
sub
jae
pusha
xchg
mov
sub
and
mov
dec
pop
shrl
out
stc
xlat
cmpsl
adcl
inc
insb
inc
add
nop
data16
icebp
lret
jns
and
dec
dec
lods
adc
mov
jle
pop
in
test
frstpm(287
mov
sahf
mov
mov
xlat
int
push
or
rorl
andl
loope
test
sub
outsb
push
negb
xor
sub
push
push
jne
sub
xor
xchg
lods
mov
jmp
or
pop
add
inc
test
rcrl
push
pop
cli
sbb
pop
pop
int3
mov
vrcpps
popf
fwait
repz
lcall
bound
ja
data16
mov
adc
subb
pop
ja
imul
push
repz
xchg
xchg
jbe
mov
inc
mov
push
sbb
adc
mov
jae
or
cld
jne
pop
push
stos
out
mov
push
cwtl
mov
cmp
jne
lret
insb
push
xor
sub
fiadds
sbb
out
insb
hlt
fiadds
mov
pop
and
jle
or
xchg
xchg
sub
push
jo
xchg
jl
jp
xchg
pushf
bound
lock
push
leave
sub
fstps
daa
dec
cmp
insb
xor
pop
lods
dec
adcl
mov
and
or
fisubrs
push
popf
je
jb
aaa
mov
mov
dec
data16
pop
push
aaa
daa
jp
mov
xchg
push
cmc
xor
inc
in
xor
mov
aad
rcrb
sti
dec
cs
loopne
into
or
rclb
push
out
push
mov
mov
jmp
stc
cwtl
sarb
jae
adc
data16
loope
fsubrs
pop
xor
pop
jo
stc
sub
and
lea
or
lea
lea
pop
and
mov
pop
je
loop
add
push
addps
sbb
mov
lds
push
push
roll
adc
lahf
cwtl
stc
or
scas
out
and
add
and
or
flds
repz
dec
lods
loop
ja
stos
pop
popl
mov
inc
adc
mov
test
or
add
inc
in
push
xor
aad
sbb
addr16
pop
jmp
gs
in
add
mov
or
inc
sub
pop
add
pushf
jae
shl
leave
subb
call
mov
mov
lods
mov
daa
iret
xchg
orb
sub
arpl
push
fwait
outsl
sub
xchg
repnz
repz
mov
rolb
testb
test
mov
shlb
mov
cmp
and
mov
inc
push
jle
daa
sub
cltd
enter
bound
sbb
cmp
fs
cmp
jle
sbb
loope
add
mov
orb
fdivrs
cltd
jns
cmp
xchg
mov
mov
add
xchg
xor
aam
icebp
cwtl
sbb
in
mov
mov
push
jp
mov
js
cmpsl
les
rcll
mov
mov
fstpt
jo
nop
testb
lcall
sub
push
inc
in
xor
inc
push
pop
pop
cwtl
lahf
loopne
jecxz
sub
cmc
cmc
test
xor
std
fdiv
mov
jl
dec
shrb
mov
mov
mov
ljmp
sbb
shlb
mov
cmpsl
cli
and
pop
lahf
mov
xor
dec
mov
sbb
adcb
hlt
mov
addb
jg
leave
loop
sub
subl
inc
aas
stc
sbb
cld
fisttps
cmpsb
mov
inc
sub
adc
cwtl
dec
jb
repz
test
sub
and
xor
ror
mov
mov
cld
in
std
sbb
push
mov
mov
popf
ss
stos
cmpb
lea
pop
jno
xchg
std
rcr
xchg
sbb
popa
mov
cmp
adc
push
popf
xchg
xchg
sub
fstpt
popa
fistps
sub
mov
pop
jg
ds
sahf
mov
je
clc
sbb
movsl
mov
inc
test
aas
imul
gs
push
data16
pop
pop
movsb
mov
inc
lock
pop
ss
dec
dec
sahf
inc
adcl
repnz
hlt
fmull
arpl
shl
aam
xlat
cmp
inc
pop
loop
jmp
xchg
xchg
fldl
andb
popf
or
adc
jg
cltd
jmp
sbb
dec
or
popa
stos
hlt
dec
icebp
fldln2
adc
dec
lcall
adc
sbb
lret
jg
pop
test
add
insl
into
jns
lcall
lods
sub
fs
or
inc
mov
jg
sbb
call
andb
pushf
hlt
ficoms
mov
scas
icebp
cs
mov
sub
sub
mov
push
or
dec
insl
or
mov
ds
imul
outsl
xor
mov
mov
add
test
fnstsw
loope
and
subb
push
adc
jno
and
and
xlat
xchg
sub
xchg
sbb
rclb
cmp
cld
out
adc
sub
cmp
jno
fdivr
inc
sub
jge
add
stos
sbb
and
mov
pop
rcrb
outsl
aad
and
inc
int3
cwtl
xlat
push
ret
mov
js
sub
call
xchg
int
add
int
incb
and
in
pop
das
pop
mov
stos
cli
jnp
mov
jl
sti
pop
es
and
mov
or
test
stos
std
and
add
sbb
movsb
loope
dec
idiv
xchg
cmp
jp
out
popa
or
fisttpll
jno
pushl
outsl
dec
dec
aam
movsb
mov
lahf
insl
mov
or
sbb
ret
cmpsl
pop
pusha
fs
test
jp
mov
jmp
xchg
cltd
pop
sbb
cmp
pop
shl
sbb
arpl
pop
cmp
and
aas
mov
ss
fdivs
fsubl
or
fwait
add
sub
mov
ret
and
xchg
leave
loopne
into
sbb
fldenv
push
scas
stos
pop
scas
std
push
repz
xchg
in
je
nop
mov
test
sbb
das
lret
jmp
push
jle
aas
xchg
fldcw
jne
xor
outsb
into
in
iret
inc
mov
jmp
and
adc
insb
lock
insb
daa
sti
daa
cmp
add
mov
mov
mov
jae
dec
lods
scas
cmp
mov
jns
cmp
fcmovnu
xlat
mov
sub
push
sbb
rorl
bound
xor
pop
lock
inc
pop
push
xchg
or
stos
push
hlt
test
xchg
shrb
xchg
inc
sub
loopne
pop
mov
fwait
insl
push
adc
addr16
or
pop
pop
loopne
imul
scas
jecxz
aaa
popf
sub
lahf
clc
jle
push
pop
adc
jbe
dec
lcall
ds
ja
lds
push
mov
xor
sub
adc
fcompl
aaa
push
fs
cmc
aad
arpl
xor
xchg
repz
outsb
push
fwait
js
mov
je
sub
jns
scas
dec
cmp
add
and
and
dec
data16
sbb
mov
cld
icebp
loopne
fistpl
out
dec
mov
xchg
add
fnstcw
sti
sub
lds
outsb
stos
pusha
idivl
jge
push
and
shlb
mov
xor
or
jmp
sub
mov
xchg
mov
fs
lds
cld
cmp
mov
sbb
mov
pop
fiaddl
sahf
inc
ja
gs
loop
hlt
shlb
data16
jge
mov
aas
inc
mov
push
dec
insl
mov
jno
adc
fwait
pop
in
lret
stc
push
dec
imul
fstpl
hlt
jns
int
push
call
popa
sbb
sbb
jl
pusha
dec
pusha
sbb
add
xchg
push
dec
popa
cmp
imul
mov
xlat
push
xchg
jg
popf
aad
jne
xchg
daa
mov
sub
aam
hlt
fwait
mov
xchg
les
push
xchg
sarl
push
popf
scas
pop
push
sbb
nop
fstl
cmc
push
cmp
adc
cli
mov
dec
sbb
cs
jns
ds
push
lods
fistl
dec
adc
rcll
cltd
sbbl
icebp
add
lcall
aas
test
gs
pop
push
imull
out
jle
test
mov
cmpsb
hlt
loope
out
test
mov
xchg
mov
imul
pop
pop
fists
mov
cli
mov
sbbb
sbbl
lcall
fwait
out
mov
mov
adc
lea
push
mov
rol
fiadds
push
stos
xor
and
movb
daa
mov
mov
mov
xor
adc
mov
add
lret
xlat
sub
sbb
push
ficoml
adc
adc
inc
mov
sbb
pop
scas
push
inc
xchg
add
faddl
rol
dec
jl
stos
adc
pop
outsb
test
mov
movsl
movaps
mov
cli
lret
add
push
mov
push
je
mov
fidivl
gs
lret
adc
ficoms
push
jnp
adc
gs
fwait
xorl
aaa
test
aas
cltd
flds
in
jl
xlat
push
push
rcrl
mov
push
daa
jg
les
or
ret
fidivl
mov
and
sbb
loopne
push
push
std
fsts
push
cmc
xor
aaa
push
adc
dec
aas
sbb
jns
or
mov
sahf
movsl
mov
aaa
nop
movsb
adc
add
out
jmp
and
pop
or
jl
sbb
je
dec
dec
pop
in
gs
sbb
push
popa
jmp
mov
arpl
je
mov
cmp
daa
push
test
push
cmp
mov
enter
roll
jge
arpl
pop
es
je
xlat
cmp
subb
push
cltd
popf
jge
cwtl
pop
loop
ret
jo
pop
xchg
gs
pop
fnsave
andb
ret
andb
dec
add
aas
add
jns
cmpsb
dec
icebp
adc
xchg
inc
rcrl
xor
lret
sbb
jp
pop
push
jnp
pop
or
lahf
push
and
inc
loopne
pop
mov
lds
xchg
call
std
jmp
dec
ret
and
pushf
and
cmp
dec
add
fistl
insb
mov
insl
cli
pushf
push
inc
aam
xchg
rcr
mov
cvtpi2ps
add
sub
fdivs
mov
adc
ljmp
gs
push
shlb
test
or
sbb
add
stc
ret
dec
mov
and
mov
movsl
mov
mov
dec
pop
xchg
mov
sub
sub
cmpsb
add
mov
xchg
call
lret
lods
and
inc
sar
xchg
sub
or
sub
ss
adc
cmpsb
sub
adc
jo
outsb
dec
ja
aam
push
jge
arpl
cmp
cli
cwtl
pop
and
jle
pop
adc
addb
sbb
dec
test
and
sub
xchg
jecxz
sti
add
lds
cwtl
test
or
rolb
dec
out
insb
hlt
in
mov
inc
icebp
inc
add
jbe
sub
shlb
push
je
sub
adc
das
sub
rcl
cmp
imul
dec
mov
xchg
jnp
imul
cwtl
ret
xchg
repz
adc
push
sub
rep
iret
in
mov
or
jmp
mov
and
ret
out
sub
push
loop
cmp
cmp
inc
lahf
push
jmp
push
incl
dec
push
push
lods
lds
scas
testb
ljmp
push
scas
push
xor
jne
ss
or
jge
popf
or
das
adc
orb
mov
mov
cwtl
out
mov
push
outsb
mov
pop
push
movsl
stc
lret
mov
jnp
pop
cmp
cmp
mov
repnz
add
mov
jg
cmc
stc
mov
add
push
add
lcall
inc
out
dec
popa
mov
repnz
stos
sarl
and
add
repnz
scas
push
test
mov
std
push
in
push
shrb
sub
dec
push
cltd
lcall
cmpsl
test
insl
push
jo
pusha
test
mov
stc
dec
push
jle
cmp
popf
mov
daa
repnz
jnp
popf
push
out
mov
outsl
in
xorl
ja
in
mov
loopne
xor
shrb
int3
cmp
cmpsb
aam
or
xor
rolb
jo
xchg
cs
jae
ds
pop
into
adc
or
sti
outsb
xor
push
jl
jb
push
sbb
jp
cmp
lds
sarb
jecxz
jne
cmp
jb
push
dec
rol
std
cwtl
test
xlat
dec
and
dec
mov
mov
adcb
xchg
shlb
xor
mov
lds
pop
push
pop
lods
loope
fisttps
jge
cli
clc
mov
popa
or
stos
mov
insb
repnz
push
cmp
xlat
decl
jmp
dec
in
adcb
and
je
sub
imul
dec
ja
shl
add
or
in
push
inc
scas
or
inc
pop
add
test
pusha
popf
arpl
getsec
cli
enter
mov
cmpsb
out
mov
inc
pop
mov
cmp
jmp
pop
outsb
cmpsb
outsb
test
mov
fsts
jbe
add
idivb
adc
rorl
lods
xor
push
add
orb
lfs
je
ret
push
pusha
pushf
in
ljmp
aam
jg
cmpl
mov
outsb
test
mov
sbb
mov
jmp
arpl
xor
shlb
cmpsb
pop
xchg
js
js
rclb
aad
in
add
hlt
test
pop
xor
cmp
dec
jle
mov
adc
and
repz
jmp
xchg
scas
adc
lea
xor
filds
jmp
aas
call
mov
addr16
sarb
push
lret
or
repz
mov
lret
fisttpl
mov
xchg
mov
cmp
in
cmp
int
mov
jmp
shlb
pop
movsb
lahf
jnp
sarb
or
icebp
insl
add
push
aaa
daa
adc
int3
fs
mov
lea
push
fdivl
jbe
aad
or
adcl
fdivp
and
or
mov
adc
test
shll
jnp
mov
mov
cwtl
pop
add
push
add
cmp
push
dec
outsl
push
jge
sbb
daa
pop
movsb
fldcw
sub
jns
mov
dec
cmpsl
lock
arpl
pop
cmc
insb
mov
jbe
roll
sub
and
and
cltd
cld
aaa
arpl
sub
pushl
addr16
xchg
mov
pop
iret
insl
nop
repnz
sub
or
jecxz
cmpsl
adc
or
scas
sahf
outsl
dec
mov
jne
xchg
push
test
lods
dec
mov
fcmovb
mov
loope
push
jns
sub
mov
aam
jp
cs
fs
das
jle
push
aaa
iret
pop
cld
mov
xchg
jns
je
xchg
out
mov
add
cwtl
adc
dec
dec
push
push
inc
loope
rorb
stos
es
cltd
dec
loop
mov
stc
push
lret
outsb
dec
arpl
bound
or
lds
inc
ljmp
adc
and
push
dec
lret
sbb
int3
ss
aaa
mov
push
jmp
fdivrl
fwait
cmp
jl
jle
push
mov
bound
js
in
loop
inc
pop
xchg
cmpb
jp
xchg
rolb
inc
hlt
test
jecxz
or
sub
sarl
sub
call
rclb
nop
outsb
in
imul
pop
test
cmp
ret
enter
sub
fidivs
xchg
jnp
push
frstor
mov
add
mov
or
cmpsb
xchg
pop
dec
inc
jo
adc
push
out
mov
pop
bound
inc
pop
lds
fadd
inc
daa
sub
les
mov
mov
sbb
adc
stc
mov
daa
dec
icebp
jbe
sti
dec
aaa
inc
jp
xchg
loopne
andb
insl
dec
dec
jmp
mov
call
ljmp
push
in
push
pop
dec
pop
fisttpll
cmp
xchg
lods
out
inc
stc
lock
arpl
fnstsw
adc
into
hlt
movsb
insb
xchg
cmc
lds
in
push
mov
hlt
call
mov
shll
add
stos
pop
test
int3
fs
mov
lods
push
fisttps
sbb
lret
lods
mov
mov
sub
sti
sbb
inc
stos
repnz
sub
divl
in
out
fs
adc
xchg
stos
sarb
sub
aaa
push
insl
mov
jnp
fwait
cmp
out
ds
jno
mov
jmp
cmpsl
dec
adc
clc
cmp
lea
lods
lods
add
add
xor
jb
decl
fsubs
xor
out
cld
and
add
cmp
test
sti
mov
adc
cmp
mov
mov
ljmp
dec
and
mov
fs
cmpsb
xchg
adc
and
jmp
jb
rcrl
inc
pop
or
inc
in
sbb
pushf
sbb
or
xchg
arpl
push
mov
outsb
shll
out
xlat
jbe
imul
inc
push
scas
ss
xor
stos
mov
shl
mov
jle
stos
mov
cmp
sub
cmpsl
aas
int
mov
inc
jo
jno
out
fstl
push
push
mov
lock
inc
add
cmp
repz
cmp
add
pop
xchg
popa
inc
inc
adc
inc
aas
dec
xor
test
mov
rcrl
sti
xchg
sahf
mov
fcoml
adc
imul
or
push
push
sbb
sbb
push
sbb
jb
lods
xor
mov
je
mov
sbb
ficompl
sub
mov
das
mov
in
and
push
push
xchg
or
sub
push
xchg
inc
repz
fsubp
mov
dec
sbb
dec
inc
sbb
aam
mov
int3
popa
mov
dec
sub
int
dec
jecxz
cmp
lds
xlat
xor
test
pop
insl
test
and
xchg
shl
dec
push
iret
add
cmp
jge
jne
mov
push
adc
rolb
dec
jp
jo
out
out
xchg
mov
in
lods
scas
mov
dec
jl
or
rolb
inc
adcl
aam
mov
stos
mov
jns
loopne
loopne
push
mov
cli
lret
xor
call
dec
fdivrs
mulb
pusha
iret
jp
jg
out
nop
lods
loop
mov
mov
pop
ss
mov
popfw
push
push
dec
mov
adc
push
inc
stc
xchg
mov
jb
mov
aaa
adc
jnp
incb
inc
rcl
mov
jmp
enter
inc
test
add
cmpsb
hlt
mov
mov
stos
int
popf
cmp
xchg
bound
dec
fdiv
mov
add
loope
in
and
inc
data16
pop
add
pop
jae
push
mov
xchg
mov
xor
into
cltd
add
subl
add
mov
xchg
xchg
pop
inc
mov
push
xchg
jge
xchg
push
jae
mov
insl
cs
jns
and
ja
adc
jge
jg
sub
xor
adc
mov
mov
xor
cmp
out
push
cltd
mov
jno
scas
gs
ret
inc
sbb
xchg
cmpb
fisubl
adc
sbb
out
fcomp
push
push
movsl
lahf
and
into
movsb
mov
fsts
and
lcall
jmp
ds
lods
test
add
jb
push
out
icebp
adc
lods
movsb
es
mov
mov
push
mov
movsb
cmp
outsl
lds
repz
pop
addr16
xchg
clc
addr16
mov
mov
lock
sarl
out
adc
push
dec
adc
push
cmp
adc
insl
pop
rorl
das
ss
mov
adc
pop
aam
in
int3
jbe
or
rcr
int
mov
dec
xchg
mov
test
fstl
mov
fisttpll
xchg
push
in
pop
dec
mov
xchg
push
xor
jl
inc
inc
test
fldl
fisttpll
sar
cmp
jmp
dec
mov
loop
clc
je
sub
lea
iret
adc
orl
frstor
and
lods
jo
cltd
adc
fcmovbe
mov
cmc
out
out
push
mov
test
push
push
dec
clc
sbb
fstpl
in
xor
sub
fcoml
xchg
in
xchg
ja
addb
pop
mov
repnz
mov
xor
and
adc
pushf
inc
es
movsb
push
xor
mov
cld
popf
add
and
sahf
push
push
in
or
icebp
cmpl
mov
fwait
mov
jle
lahf
jle
cmp
lds
in
cmp
inc
lods
outsl
inc
lock
jl
xchg
div
mov
imul
mov
rol
jmp
sbb
repnz
jl
cmp
out
cs
ds
sbb
adc
js
xchg
pusha
stc
xor
test
incb
add
xor
add
fs
movsb
fsubrl
daa
sarb
push
mov
pop
push
jnp
cmp
ror
lea
mul
pop
clc
mov
lock
mov
ja
iret
pop
sbb
fmuls
loope
movsl
xor
pop
popl
lds
inc
outsb
dec
pop
outsb
mov
jnp
mov
inc
mov
mov
popf
mov
inc
jns
fcmove
scas
xchg
cmp
cmp
xchg
jmp
popf
movsb
pop
dec
cmp
or
pop
pop
push
std
int
ja
clc
or
push
pop
repz
neg
inc
imul
aas
insl
mov
sbb
mov
ds
jb
cli
repz
add
ret
dec
bndldx
popf
mov
shll
nop
xchg
jp
dec
jp
sbb
mov
les
mov
ret
shr
xchg
sbb
push
adc
data16
fisubl
mov
mov
jl
outsl
or
lcall
test
jno
push
icebp
test
and
jl
cmp
adc
dec
popf
and
int
mov
jno
iret
pop
mov
push
fwait
pop
cmp
sub
or
inc
imul
pop
out
loopne
pop
inc
mov
in
inc
dec
xor
jg
inc
adc
add
cmp
cwtl
adc
and
cmp
push
jo
pop
lods
dec
je
sbb
shl
std
daa
ret
shl
out
mov
shrd
and
test
sub
fs
in
xor
dec
inc
sub
pop
out
or
sbb
jle
sbb
jl
lock
xchg
mov
out
adc
or
cs
ret
sbb
shrl
xchg
ds
std
lahf
movsl
inc
rclb
xchg
cli
pushf
sbb
lret
push
or
sti
test
push
dec
mov
test
leave
xchg
outsb
inc
push
jg
adc
.byte
cmpsb
.byte
.byte
