or
adcl
in
sub
fwait
loopne
lret
shlb
leave
xor
aad
fmuls
in
movsb
popf
ja
div
lret
iret
xchg
test
pop
push
fidivl
icebp
adc
sbb
adc
out
adc
test
jp
clc
call
mov
jno
enter
js
sbb
sub
pop
in
enter
push
daa
xlat
loop
mov
jle
lock
or
cltd
lods
pop
scas
test
cld
push
sahf
lahf
sbb
inc
fdiv
cmp
insb
das
nop
mov
mov
hlt
push
rorl
sbb
jmp
jnp
int
test
in
jo
jp
mov
rclb
stc
inc
nop
repz
lahf
xchg
mov
iret
sbb
xorb
lcall
mov
js
cmp
daa
loop
pop
je
add
cmp
addb
jg
add
call
lea
pop
pushf
pushf
push
pushl
ret
push
mov
movzbw
push
mov
push
pushl
ret
dec
in
rcr
cmpsb
fmull
mov
adc
call
iret
inc
pop
push
lahf
adc
pop
leave
push
aad
fldenv
shrb
in
movsl
sub
insl
xchg
insl
pop
repnz
cmp
lods
int
test
jl
sub
jmp
fstps
stc
cmpsb
pop
cmp
push
xchg
jmp
push
imul
imul
call
lahf
int
aas
push
cmpsl
xor
xor
gs
sbb
dec
push
loope
nop
cwtl
ljmp
mov
xchg
leave
popf
addr16
inc
ds
cld
mov
and
ret
stos
pushf
pushf
setae
mov
lea
pushf
lea
call
pusha
push
push
call
sbb
ror
inc
sbb
iret
xor
stc
out
mov
dec
int
cmp
cmpb
adc
nop
xchg
nop
aad
clc
cmpsb
mov
fidivrs
testl
jae
dec
jo
iret
and
imul
xchg
aaa
pop
sbb
scas
jp
inc
in
int
add
mov
pusha
sbb
retw
xchg
jnp
push
insb
shlb
mov
fstpl
and
xor
sub
pop
ret
adc
movsb
add
add
mov
mov
loope
ljmp
bound
dec
jae
lods
in
and
push
sub
and
dec
mov
mov
push
add
or
sub
mulb
dec
sarl
sahf
lock
jg
pop
ja
lcall
xchg
shlb
dec
ds
mov
gs
and
cltd
jp
jae
xor
jecxz
lret
aad
mov
in
test
xchg
stos
fwait
arpl
push
fnstenv
in
mov
hlt
mov
clc
leave
sub
push
xor
test
sbb
ja
xchg
mov
into
or
adc
ljmp
sbb
scas
jg
push
lahf
sub
mov
ja
dec
and
notl
pop
test
push
gs
lahf
adc
xorl
test
xor
popa
leave
jo
xchg
movsl
lea
into
test
repnz
push
shl
mov
mov
push
add
mov
mov
movw
test
pushf
lea
je
call
pusha
push
call
pusha
lea
jne
bt
mov
bt
pusha
clc
cmc
add
pushl
cmp
pushl
movzwl
shld
btr
mov
jmp
ror
bsf
adc
sub
call
sub
bsr
mov
clc
shl
push
movw
lea
jp
je
jmp
not
movsbl
movzwl
pusha
bswap
not
not
lea
push
jmp
mov
jmp
cld
insb
addr16
xchg
iret
dec
int
pop
add
shrb
xor
in
rcrl
push
shll
shrb
mov
push
jmp
mov
ret
lods
fwait
adc
cltd
fisubrl
hlt
cltd
jl
outsl
mov
loope
cmp
pop
or
jge
mov
push
enter
les
xchg
adc
inc
ss
loope
xchg
lods
xchg
sbb
movsl
mov
pop
popa
mov
push
add
jae
cld
mov
inc
popf
mov
add
mov
push
pop
inc
mov
push
insb
sub
push
fcomi
xchg
mov
jo
fcomps
shll
inc
insb
ret
mov
add
addl
js
int
psubusb
push
loop
sub
adc
sub
sahf
bound
imul
push
rorb
aaa
sbb
dec
pushf
cld
mov
leave
es
repnz
pushf
lea
jne
or
mov
movsbw
pushf
rol
adc
sub
adc
movzbl
lea
jmp
push
pusha
movl
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
not
lahf
call
movb
movl
add
pusha
cmp
pushf
lea
jb
cmc
cmc
cmp
test
cmp
pushf
pusha
lea
jae
xor
mov
shld
inc
inc
mov
bswap
mov
cmc
xor
bt
repnz
push
push
pushf
lea
jne
shl
rol
xchg
shl
mov
inc
sub
bts
cmc
mov
cmp
jmp
jmp
pushf
call
rep
jmp
jmp
movb
pusha
lea
jo
cwtl
lahf
push
jmp
repnz
jmp
jmp
add
add
add
push
add
jo
add
add
add
add
xor
pop
add
add
add
push
push
mov
pushf
lea
call
jmp
movb
cmp
mov
lea
jne
jae
bsr
or
mov
shr
mov
movzbl
shrd
movsbw
mov
jmp
cmp
adc
out
popa
pop
inc
mov
paddd
dec
dec
lea
sub
dec
mov
sub
xor
jnp
hlt
mov
xor
mov
les
push
xlat
das
pop
jge
movsl
out
in
push
push
cltd
adc
push
cmpsl
pop
repz
sub
xor
imul
inc
movsl
mov
rolb
inc
divb
sarb
mov
movsb
and
mov
jecxz
xor
mov
and
dec
pop
jg
aad
or
push
cmp
mov
mov
inc
mov
clc
mov
test
lahf
jo
jno
xor
test
or
jae
in
xchg
xchg
repz
popa
push
pop
in
imul
jns
call
sbb
pusha
lret
out
mov
pop
lea
sub
insb
push
cmpsl
cs
xchg
and
test
imul
mov
cld
mov
xchg
in
lahf
xchg
shl
add
sbb
test
sub
pushf
btc
adc
rcl
shr
setns
adc
neg
mov
neg
bts
add
and
bswap
sar
shr
add
bsf
pusha
stc
sbb
mov
call
call
bt
ror
bt
clc
bt
xor
std
stc
jmp
xchg
pusha
pushf
pushf
pushf
movl
jmp
add
mov
push
lea
jmp
sbb
adc
js
mov
mov
addr16
loope
repnz
xchg
cmp
push
pop
data16
fiadds
stos
pop
inc
xchg
cmc
pushf
out
xchg
mov
mov
sahf
jb
sub
mov
mov
xchg
mov
cld
jb
insb
mov
dec
dec
fcompl
adc
jmp
ficomps
sbb
std
lds
cmp
mov
insb
insl
cmp
jnp
xor
and
aad
add
scas
jmp
jp
das
cmpsl
push
or
jns
add
mov
in
cld
mov
push
scas
push
sbb
int
and
sahf
out
xchg
pop
or
pop
hlt
das
cmpsl
mov
mov
cli
clc
push
lcall
and
add
ror
fsts
cmp
lods
pop
popl
adc
in
cld
fsubrs
and
add
or
les
mov
cld
mov
out
cli
lea
je
cmc
add
jmp
pusha
pushf
pushf
inc
movb
adc
pushf
pushl
ret
add
pusha
push
lea
jmp
push
inc
xor
mov
add
inc
lods
or
pop
aaa
cwtl
test
cli
cmp
push
mov
insl
mov
std
sub
xlat
xlat
xlat
jns
sti
mov
cltd
lret
lcall
add
inc
xor
cmpsl
adc
inc
and
nop
cmc
aas
dec
pushl
pushf
push
movw
movl
pushf
pushl
pushf
lea
jmp
lea
jp
pushf
lea
jne
pusha
inc
push
pushf
pushf
pushl
inc
push
pushf
pushf
lea
jmp
imul
push
call
push
bt
pushf
test
cmp
call
jmp
seta
lea
pushf
jmp
pushf
mov
movl
pusha
pusha
movl
movw
push
lea
jmp
pushf
xchg
pusha
dec
pushf
push
shl
call
stc
repnz
push
pusha
call
mov
jmp
pushf
cmc
shrd
rcl
mov
cmc
pusha
call
add
cmp
call
mov
call
jmp
xor
mov
stc
pushf
pusha
and
cmp
push
pushf
bt
add
pushf
pushf
push
push
lea
jmp
test
cwtl
sub
sub
aad
and
repnz
shll
pop
bound
test
sbb
dec
add
outsb
popf
jle
subl
loope
inc
and
mov
xor
test
les
jae
ret
xchg
lret
dec
sbb
and
sub
xchg
ljmp
mov
mov
ret
push
and
pop
dec
adc
lret
xchg
sbb
fwait
leave
imul
imul
arpl
lahf
inc
adc
mov
fldenv
hlt
push
fwait
mov
cwtl
push
ja
add
mov
repnz
movsl
push
xorb
xor
int
jmp
or
mov
pop
xorl
sbb
fildl
cli
dec
adc
sub
xor
xor
jmp
ficoml
pop
je
dec
jo
adc
mov
dec
ljmp
dec
cmpsb
out
cmp
jo
aaa
fwait
les
push
cltd
sarb
iret
lds
cmp
sub
adc
push
jo
popa
xchg
sub
cmp
fsubrs
pop
sub
sahf
outsl
les
int3
out
js
xor
dec
and
fpatan
jmp
ret
jecxz
add
sahf
mov
jns
cmp
test
scas
xor
stos
iret
lcall
into
add
push
mov
inc
cmpsb
fstl
cmp
jae
push
int3
mov
pop
enterw
mov
xor
sub
test
pop
sub
pushf
xchg
hlt
add
mov
xor
shld
dec
xor
shrd
mov
stc
bt
test
pusha
cmpb
movb
jmp
jmp
mov
sub
lea
pusha
inc
lea
call
jne
lahf
movsbl
jmp
lea
pushf
call
lods
inc
arpl
cmpsl
and
stos
lldt
inc
lods
add
cmc
cmp
push
roll
pop
out
pushf
loopne
and
aad
xchg
mov
pusha
mov
push
pushf
mov
mov
inc
inc
sub
and
pop
aas
xchg
cld
mov
ret
pushf
mov
mov
lea
je
pusha
pushf
movsbl
mov
lea
lea
jmp
cmp
bt
add
pushf
bt
movzwl
shld
clc
bts
mov
stc
cmp
pushf
call
pushf
mov
shld
or
bt
mov
push
cmp
mov
movw
pusha
lea
jbe
neg
shl
xchg
mov
jmp
cmc
cmp
call
stos
dec
sub
xchg
test
sub
pop
pusha
leave
xor
notb
sub
xor
je
fdivr
xchg
pop
frstor
push
push
sbb
fdivs
pusha
adc
testb
testb
int3
loope
jo
push
pop
shrb
push
sti
gs
mov
aam
test
add
add
sub
bt
cmp
movb
call
push
lock
std
std
xorb
addr16
mov
ret
ja
jno
into
ret
and
rcrl
mov
xor
in
sbb
jge
test
dec
lock
aam
pop
lds
loopne
sub
test
popf
cwtl
inc
inc
pop
xchg
add
mov
xchg
lods
test
inc
xchg
add
xor
jb
enter
aad
xor
sbb
mov
test
pusha
call
push
pusha
mov
jmp
lea
lea
pushf
pusha
call
xor
bt
cmc
cmp
test
shr
jmp
call
bt
push
add
pusha
clc
movzwl
mov
mov
jmp
pushf
mov
dec
jmp
or
fmull
int
fisttpl
or
add
ret
cmp
cmpsl
push
rcl
nop
loop
dec
lea
into
jno
xor
insb
fwait
inc
filds
and
mov
sbb
adc
mov
sarb
sub
pop
xchg
mov
push
fldt
jmp
dec
inc
mov
imul
sub
imul
pop
mov
mov
pushl
push
lea
jne
pushf
pushl
xor
shl
shl
mov
stc
add
pushf
pusha
movb
push
lea
jmp
push
cli
in
mov
pop
xchg
jns
sub
ds
mov
xor
push
or
ficompl
inc
jmp
ss
js
jmp
jns
jb
cwtl
fists
push
push
ljmp
es
push
push
std
xchg
arpl
dec
icebp
xor
adc
mov
inc
lea
xor
dec
fs
in
into
dec
mov
or
xchg
cld
mov
loope
stos
push
dec
and
fmull
test
pop
lds
xchg
mull
cmpsb
add
mov
push
jmp
ja
pop
inc
jge
add
addr16
sub
cwtl
jecxz
gs
mov
and
flds
lds
add
and
push
xor
jb
jnp
shrb
xor
test
ret
cmpsb
into
sti
xchg
leave
adc
mov
dec
int
ds
xor
adc
out
inc
bound
add
pop
and
pop
push
bound
xor
add
dec
push
xchg
mov
pop
loopne
dec
fs
mov
xor
pushf
lea
ja
mov
sub
inc
bts
inc
shr
add
movsbw
adc
and
xor
mov
inc
mov
mov
stc
repnz
pusha
lea
jne
setae
pusha
pushf
setg
movb
setge
mov
call
shld
mov
pushf
cmc
cmpb
pushl
jmp
cmp
js
mov
aam
das
mov
mov
add
push
dec
mov
cmp
pop
jle
test
out
sbb
jo
pop
repz
jecxz
push
mov
sbb
sti
dec
or
imul
sub
mov
ja
cmp
movw
push
mov
lea
jmp
pushf
movb
movl
push
jmp
out
out
push
pop
div
sub
or
dec
inc
stos
add
push
mov
xor
addr16
xchg
les
sbb
test
out
mov
stos
pop
repz
or
jg
lock
ret
cwtl
sbb
jns
or
mov
pop
mov
stc
call
movzbw
mov
jmp
movb
setl
lahf
jmp
add
add
sub
btr
or
mov
cmp
movb
or
call
call
pushl
movl
pusha
pushf
lea
jmp
ret
scas
adc
xchg
test
jl
mov
loop
sbb
rcrl
add
sub
push
push
ficoml
adc
lahf
inc
pop
sbb
mov
fbld
in
cmp
stos
mov
fwait
cmpsb
lcall
ret
sbb
fildll
inc
mov
jle
mov
imul
jnp
jne
mov
lea
movsl
lcall
jb
push
cmp
push
loope
test
mov
lcall
int3
loope
inc
mov
mov
and
mov
xor
div
jle
cmpsb
test
ret
sbb
lea
test
sub
cli
mov
aaa
loopne
shll
repz
jnp
sub
pop
je
or
pop
dec
mov
sub
mov
adc
movsbl
bts
setge
xchg
movsbw
xchg
sub
lea
add
bsr
mov
ror
shld
mov
stc
inc
mov
sar
adc
mov
mov
shl
or
adc
xchg
xchg
shl
mov
adc
test
pushl
mov
sar
mov
call
bt
cmc
add
pusha
movw
mov
lea
jmp
jmp
mov
movsbw
mov
movb
call
or
sahf
and
ja
mov
cld
out
paddd
popa
adc
pop
out
push
cld
push
popf
shrb
jbe
cltd
data16
sbb
pop
and
sub
inc
xor
and
jne
bts
jmp
movsbw
btr
mov
cmc
push
jmp
call
fld
stos
inc
pop
adc
push
cs
cmp
xchg
push
stos
sbb
mov
and
or
jb
adc
adc
sub
add
faddl
mov
or
hlt
imul
adc
ljmp
push
pop
adc
outsb
ljmp
jmp
imul
imul
sub
lea
ret
out
nop
add
jecxz
fstpt
cmpsl
fabs
and
xchg
movsl
cwtl
je
fsubs
jge
pop
int3
mov
mov
movsb
mov
pushw
popfw
push
push
pushf
jmp
mov
mov
jmp
lea
jne
call
pushl
popl
pusha
mov
push
pushl
ret
cmp
pusha
call
lea
jne
bsf
not
mov
stc
add
clc
movzwl
sub
stc
btr
mov
push
call
shl
pushf
inc
shld
mov
mov
test
stc
cmc
cmpb
pusha
pushl
lea
jne
lea
xor
pushf
mov
jmp
mov
pushfw
popw
stc
mov
bt
pushf
pusha
pushf
ror
lea
jb
pushf
push
pushf
dec
call
call
mov
fmull
add
or
push
mov
jae
int3
xor
aas
xor
aad
imul
divl
pop
ss
das
pop
std
mov
repnz
je
or
clc
sbb
jnp
aad
in
icebp
subb
jmp
subl
insb
pop
pop
das
jo
sti
lcall
jg
orl
imul
xchg
add
loopne
ficoml
jbe
loope
xchg
xchg
movsl
cltd
ds
repnz
aaa
cmp
dec
cmp
mov
or
in
mov
jne
lea
movsbw
pop
pushf
mov
pushl
ret
test
mov
jmp
jmp
movb
push
pushl
inc
lea
jo
pushf
pusha
pusha
inc
pushf
pushf
push
mov
lea
jmp
cmp
pusha
push
movb
lea
jae
rcr
and
xchg
mov
cmp
jmp
movb
push
mov
pushl
pushf
pushl
ret
pushf
movl
push
push
pushl
pusha
lea
jmp
lea
call
pusha
pushf
pushf
jmp
lea
call
pushf
mov
adc
pushl
jmp
cmp
call
call
movzbl
mov
jmp
testb
adc
pop
loopne
mov
cwtl
cld
fs
cmp
sub
sub
jp
rcrb
testl
mov
fisubl
orl
cmp
or
aas
xor
repnz
jecxz
inc
cld
mov
aad
into
call
not
mov
movsbw
cwtl
lahf
lea
pushf
pushf
call
lea
jne
lahf
jmp
faddl
xor
push
mov
shrb
or
ret
imul
dec
xchg
pop
inc
scas
mov
outsb
push
bound
pop
or
mov
mov
or
scas
das
cmp
xchg
lahf
fcoms
and
daa
fnstcw
push
pusha
test
dec
movsb
pusha
vpcmpeqb
iret
cltd
pusha
cs
cmp
dec
mov
and
jecxz
push
push
fwait
outsb
mov
pop
mov
jne
and
mulb
sarb
mov
bound
jmp
or
pushl
jmp
add
cmc
mov
test
test
movb
mov
lea
je
jmp
pop
call
mov
movb
call
push
push
lea
jae
rcr
xor
lea
mov
push
mov
shld
movw
mov
test
clc
xor
call
pusha
movl
jmp
pushf
movb
push
lea
jne
and
dec
xor
shr
shrd
mov
ror
add
rcr
test
mov
bt
test
call
lea
ja
pusha
bswap
call
sahf
push
mov
xchg
adc
xchg
mov
rclb
push
cmp
push
mov
xor
clc
shlb
enter
jg
inc
lret
push
sarl
sub
je
cmp
sub
cmp
sub
mov
dec
pop
mov
and
loop
in
xchg
inc
inc
sbb
inc
dec
aaa
shl
ljmp
or
aas
dec
sbb
das
and
and
jmp
hlt
clc
push
mulb
in
adc
jge
pushl
jnp
inc
pop
or
cwtl
cmp
cmp
jnp
xchg
sbb
out
or
cmp
cli
add
cmp
icebp
cltd
ja
cld
pop
clc
sub
pushf
in
sbb
ja
imul
mov
sbb
scas
neg
cmp
push
mov
mov
hlt
pop
cwtl
icebp
mov
mov
xor
aaa
in
pop
lods
xchg
inc
pop
clc
paddusb
cmp
inc
adc
and
sub
inc
xor
hlt
lock
es
cmp
cmp
mov
aaa
aas
in
dec
ss
loopne
jns
cmp
dec
adcb
loopne
call
cli
mov
cmp
sbb
outsl
mov
push
pop
sub
jp
mov
idivb
call
mov
movsb
shll
xor
icebp
aas
cwtl
stos
clc
add
push
imul
jb
pushf
sbb
cmp
sub
pop
sarl
xchg
cld
inc
mov
sahf
mov
push
jno
lea
out
fidivrl
stos
mov
mov
fistl
sub
push
jl
pushf
push
faddl
ficompl
push
negl
cmp
adc
push
jg
insl
push
xchg
dec
aaa
sbb
arpl
cmp
loopne
cltd
loope
inc
adc
sub
and
das
jecxz
aas
out
jb
sub
mov
xor
ja
cmp
jno
adc
push
movsb
mov
sbb
jns
std
and
xor
xor
dec
in
pop
jnp
push
addl
sahf
sub
xchg
movsb
aaa
push
cmpsl
mov
inc
sub
fwait
jno
pop
aam
pop
daa
cli
jb
aam
and
mov
cmp
out
pop
lock
dec
shl
xor
sub
mov
push
jg
cmp
cmp
dec
aaa
mov
ljmp
cwtl
outsl
push
dec
lcall
hlt
sub
mov
and
out
xor
mov
jp
lret
jle
sbb
mov
mov
stos
or
jno
test
andb
cwtl
aas
ds
scas
lock
jge
xchg
mov
lea
mov
enter
mov
jns
pop
jg
dec
out
jb
sahf
pop
xchg
mov
push
push
lea
jle
or
dec
rclb
lea
mov
insl
repnz
dec
movsb
lock
lret
push
cmpl
xor
xor
dec
push
mov
cmp
ret
mov
inc
inc
mov
add
dec
xor
mov
orl
xor
aas
push
jns
and
dec
pop
mov
xor
pop
jge
shll
sbb
addb
scas
xchg
mov
jle
sbb
aas
sbbb
mov
inc
push
mov
sbb
ret
mov
pop
ja
jno
insl
stos
lods
mov
xchg
push
xchg
mov
pop
xchg
clc
add
call
xchg
dec
mov
xchg
fcomps
push
mov
mov
or
jb
pop
cmp
or
in
mov
lcall
into
das
enter
jno
jp
sub
ljmp
xor
out
lahf
je
pop
ror
add
adcb
xchg
cs
in
pop
fs
push
push
decb
xchg
clc
mov
dec
jb
fcomps
sbb
pop
cmp
inc
dec
lods
lock
and
aad
cli
xor
xor
das
sub
sbb
dec
mov
js
faddl
popf
into
xor
mov
xchg
aas
cmp
push
and
lock
add
push
imul
cmpb
lock
idivb
adc
mov
adc
sbb
rol
jg
repz
push
jno
add
movsb
xchg
inc
test
mov
movsb
sbb
cmp
jg
cmpsb
lahf
mov
jl
ficompl
bnd
mov
jb
pop
mov
out
xor
xor
dec
mov
mov
adc
enter
cmp
mov
add
orb
pop
pop
push
rorb
pop
adc
and
mov
das
sbb
pushf
fidivrs
fs
mov
nop
adc
and
mov
xchg
inc
add
movsb
jno
mov
dec
fwait
add
sbb
jnp
imull
mov
outsl
enter
aas
nop
adc
lods
cmp
cmp
mov
cmp
mov
sub
sbb
dec
sahf
pop
sbb
cwtl
adc
mov
mov
sub
leave
mov
jns
add
out
jo
cmp
cmp
jmp
test
cwtl
inc
je
dec
hlt
sbb
sbb
add
xor
push
cmp
mov
pop
cmp
mov
shll
sbb
scas
aas
lret
jae
pop
into
and
mov
cwtl
lock
mov
into
mov
xor
leave
pop
in
push
sbb
sarl
push
and
add
xor
inc
xor
insl
mov
add
dec
push
into
or
cmp
push
xor
mov
mov
dec
js
mov
fisubrs
mov
cld
jnp
mov
cwtl
inc
mov
adc
mov
pop
idiv
xchg
cwtl
cmp
inc
or
sub
cmp
adc
sub
push
cwtl
cmp
icebp
pop
cmp
sarl
flds
es
pop
pop
test
ja
enter
andb
jle
daa
negb
jecxz
ljmp
push
imul
mov
aas
dec
pop
idivl
push
adc
sbb
jl
xor
aas
dec
add
sbb
xorb
pop
fildl
aas
movsl
add
mov
push
sarb
adc
pop
fstpt
mov
pop
cmp
add
mov
ljmp
into
dec
cmp
roll
test
adc
cmp
jle
pop
scas
cmp
xchg
xor
inc
sub
cmp
jo
outsl
cmp
cwtl
cmp
gs
push
stos
xchg
jae
rorl
push
mov
fsubrs
into
subb
sub
mov
cmp
fisttpl
repnz
int
dec
lock
das
add
pop
add
inc
lods
cmp
or
add
adc
pop
aaa
int
cmp
inc
das
mov
insb
ss
js
add
call
aas
addr16
push
cmp
ss
adc
cmp
sub
push
jg
test
or
xor
scas
int3
adc
loopne
push
pop
push
xchg
xchg
adc
fcomps
ljmp
insl
std
ss
neg
lret
sub
cmp
inc
mov
out
faddl
rcll
fiaddl
mov
mov
aam
adc
xchg
mov
jno
lcall
mov
cmpsb
xchg
stos
sahf
add
adc
daa
push
popl
iretw
mov
add
and
leave
scas
lea
adc
das
lods
cmp
mov
pop
and
xchg
and
fistpl
mov
pop
xchg
jae
or
mov
push
or
jp
das
jae
daa
int3
enter
mov
jno
std
push
push
jg
jle
mov
cwtl
add
mov
xchg
mov
mov
cmp
ss
mov
jle
pop
xchg
push
mov
sub
adc
movhps
and
push
lret
inc
mov
ljmp
or
jae
repz
mov
push
dec
cmp
xor
xor
pop
aas
cs
call
cmp
cmp
insb
ds
pop
xor
in
and
fst
pop
mov
cmp
shr
sbb
cli
mov
scas
inc
ds
loop
aas
mov
xor
sub
cmp
loop
es
mov
xchg
loop
cmp
aam
mov
push
stos
and
dec
and
jmp
shrb
xor
dec
in
fisubrl
cmp
mov
dec
inc
and
data16
sarl
cmp
dec
xchg
or
cmp
jp
fiadds
stc
cld
cltd
pop
mov
shr
lock
fst
xchg
testl
pushf
cmp
add
decl
jb
cmp
mov
or
mov
rcrw
mov
jle
and
cli
test
cmc
jb
xchg
mov
sub
cmpsb
xchg
sti
dec
mov
std
aaa
mov
cld
or
lret
lcall
xor
adc
cmp
js
pop
cmp
sbb
xchg
clc
push
jp
lcall
das
push
pop
dec
cmp
scas
pop
ds
jl
jns
inc
pop
mov
arpl
bound
sbb
push
sbb
call
dec
fs
sbb
push
shlb
lcall
xor
shl
ljmp
dec
sub
mov
fimuls
jle
jecxz
jns
adc
sbb
enter
adc
aas
dec
add
dec
ds
lcall
pushf
jae
ret
push
iret
sbb
mov
mov
xor
add
pop
add
int
pop
xor
mov
icebp
sub
sbb
jmp
xchg
or
test
inc
mov
mov
xor
out
jns
loopne
xchg
jp
ss
cmc
or
push
dec
mov
cltd
out
mov
xlat
xchg
mov
cmp
sahf
testb
dec
sub
mov
cld
jp
mov
aaa
xchg
cwtl
push
add
and
adc
mov
or
and
adc
adc
idivl
mov
lods
loopne
inc
jl
inc
jne
cwtl
xchg
inc
adc
ja
add
inc
fists
mov
push
mov
inc
imul
or
push
xor
sub
lcall
lahf
push
jp
movsb
cmpsb
pop
dec
ret
or
inc
cmp
data16
cmp
cli
lock
cmp
in
clc
push
pusha
lret
sbb
push
push
cmp
nop
pop
lahf
inc
push
popa
push
sub
dec
adc
sub
cmp
ss
push
sub
jl
dec
mov
push
sbb
loop
pop
mov
dec
pop
jnp
daa
insb
iret
shlb
sub
rclb
cmp
inc
out
mov
and
js
add
sbb
mov
and
sahf
lods
or
push
xchg
push
sbb
and
into
stc
mov
pusha
or
xchg
xchg
dec
call
push
xor
or
cli
mov
in
xchg
push
dec
mov
cmp
sub
cmp
push
popl
xor
mov
cmpsb
cmpsb
test
mov
adc
lret
adc
repz
push
addr16
xchg
sub
bound
add
dec
mov
clc
nop
dec
add
pop
lcall
jecxz
das
pop
hlt
loopne
xlat
pop
popa
imul
or
rorb
inc
xor
popa
adc
jbe
jecxz
jnp
xchg
cwtl
sub
pop
xor
adc
int
subl
add
lcall
imul
pop
adc
mov
jb
xorb
stos
dec
out
inc
sbb
jmp
sti
mov
arpl
or
xor
sbb
mov
pop
dec
mov
xor
paddsw
dec
cmp
dec
push
ret
repnz
lret
movsb
mov
dec
xchg
mov
repnz
push
mov
mov
jp
adc
inc
hlt
xchg
cwtl
push
stc
push
inc
sub
pop
pop
dec
testb
in
mov
rcrl
sbb
push
pop
mov
mov
push
jae
push
sahf
or
sbb
addl
cmp
incl
jns
scas
pop
cmp
cli
imul
out
push
inc
mov
enter
mov
lock
clc
or
pop
insl
dec
aaa
jle
push
adcb
and
push
xor
sarl
push
mov
pop
dec
adc
repz
sahf
jae
lret
inc
lcall
jp
imul
sahf
sarb
jb
or
xchg
mov
cwtl
xchg
sahf
clc
lock
cwtl
fwait
mov
add
adc
mov
rdtsc
mov
lock
adc
dec
into
push
pop
adc
xor
mov
mov
jne
lret
mov
sbb
sarb
xor
cli
mov
dec
sbb
and
mov
pop
mov
sahf
inc
jg
pop
data16
cmp
mov
xor
repnz
add
out
out
fidivl
mov
lock
mov
sbb
mov
les
xchg
sbb
lahf
adc
adc
nop
fwait
rcll
push
jb
in
sahf
add
mov
stos
imul
into
sbbb
pop
dec
pop
loopne
jmp
rolb
dec
pop
sbb
sub
cmpsl
mov
jno
data16
push
cmp
enter
ficompl
mov
mov
sub
push
shl
dec
push
push
mov
lods
jae
pushf
pop
fidivl
leave
dec
xor
fcoms
cmp
sahf
inc
stos
xlat
adc
sbb
jb
mov
cmp
sbb
sbb
jmp
sbb
add
add
mov
stc
fiaddl
and
fsubrp
pop
or
push
js
inc
xor
and
cs
cwtl
jb
push
and
lea
into
inc
xchg
mov
outsl
int3
cli
dec
sbb
aaa
cmp
mov
lcall
sarb
mov
mov
rcrl
dec
enter
lret
xor
cwtl
mov
ret
arpl
mov
repnz
ret
xor
lret
pop
iret
mov
add
pushf
cmp
repz
push
dec
jb
and
test
inc
sbb
mov
dec
mov
or
aaa
or
xor
fucompp
insl
sbbb
ret
and
jp
mov
fwait
shl
pop
xor
xor
addr16
cltd
sub
xchg
mov
pop
outsb
dec
mov
fwait
xchg
jo
pop
adc
movsl
push
loopne
mov
cmpsb
push
adc
pop
imull
iret
sahf
stos
jns
push
mov
push
mov
notb
je
push
leave
push
sub
aaa
sbb
pusha
repnz
sub
js
movsb
cmpsb
lods
dec
shl
pop
rorl
or
mov
nop
jne
mov
stc
inc
add
xchg
lret
xor
stos
lcall
jbe
sbb
inc
adc
dec
fwait
sbb
lret
jno
mov
sub
lahf
dec
icebp
lret
in
sub
das
sbb
sub
cmp
sub
test
pop
js
dec
aam
iret
pop
ljmp
fmulp
fdivrs
shlb
pop
or
mov
jle
bound
pop
mov
push
pop
loopne
insb
cwtl
or
ljmp
jge
pop
add
ds
add
mov
push
loop
cmp
in
push
push
add
js
cmp
push
ret
mov
pop
lret
push
cmp
mov
cwtl
sbb
loopne
cmp
js
and
push
inc
or
dec
insl
mov
jb
clc
daa
mov
fimull
js
jl
lcall
mov
outsb
mov
je
lret
mov
lahf
add
sbb
ss
xor
inc
dec
mov
jb
inc
xor
inc
rclb
add
cs
sbb
pop
mov
sbb
stc
cwtl
std
mov
mov
mov
xor
cmc
push
sub
sbb
adc
cmp
out
imul
dec
sub
mov
push
xchg
int
sbb
cmp
dec
bnd
or
or
or
je
dec
jnp
mov
pushf
pop
sbb
mov
mov
out
dec
mov
mov
xor
pop
icebp
push
jecxz
jecxz
cmp
jmp
into
jae
jge
jnp
loop
out
push
inc
gs
push
mov
and
xor
xor
add
flds
nop
das
fadd
push
add
fnstcw
sarl
or
inc
dec
jmp
data16
rorb
inc
or
fs
mov
loop
pop
nop
fisttps
push
movlps
add
sbb
ds
enter
cli
js
inc
mov
stos
sub
push
xor
cli
das
inc
nop
mov
and
push
push
sbb
xor
pop
loopne
cmp
cmp
sbb
rolb
scas
leave
sbb
push
js
lcall
pop
pushf
ss
and
and
xor
xchg
push
gs
call
daa
scas
rclb
cltd
dec
out
mov
xor
hlt
shl
dec
sub
pop
dec
in
xor
and
negl
fwait
mov
pop
cmp
aas
cli
mov
aam
minps
add
loopne
adc
ficoms
xchg
mov
dec
dec
pusha
xchg
jl
js
iret
out
mov
dec
fnstenv
daa
dec
scas
rcll
pop
push
add
dec
dec
dec
fisttps
cmp
add
xchg
sbb
pop
shl
ret
xor
dec
lcall
popa
lods
xchg
popa
xor
or
sbb
mov
sarb
or
mov
sarl
js
jb
test
mov
inc
jge
sarb
fnstsw
in
pop
rcl
es
pop
mov
loopne
cmp
aad
dec
push
inc
iret
push
dec
mov
and
xor
mov
sub
orl
dec
pop
xchg
and
scas
push
and
and
mov
xchg
insb
cs
xor
ss
cltd
jmp
xchg
stos
inc
int
cmp
xchg
inc
push
cld
dec
jp
mov
fidivl
or
js
adc
int3
divl
pop
in
sbb
inc
shlb
inc
xor
repz
ds
jg
inc
setb
cmp
cmpsb
stos
pop
mov
sub
pop
jle
scas
dec
add
or
or
ds
cmp
lods
dec
mov
loopne
in
loope
std
mov
addr16
and
mov
ja
mov
push
call
insb
fisttpll
push
lret
orb
jne
sub
cmp
sub
cmp
push
sarb
sbb
out
sbb
sahf
negb
fdivrl
inc
inc
push
jge
arpl
ja
or
dec
sbb
pop
repz
mov
jno
or
arpl
add
cltd
mov
daa
jo
jae
or
jb
shr
insb
jmp
cmp
pop
arpl
out
mov
jb
or
fdivrs
dec
xor
adc
pop
or
pushf
dec
fidivrl
xchg
dec
pushf
lret
cmp
jmp
mov
cmp
std
ljmp
mov
pop
xchg
lahf
xchg
sub
lcall
cmpsl
dec
loop
scas
adc
push
push
cli
cmp
fdivs
int3
rol
int
push
lods
insl
dec
dec
jmp
ljmp
leave
shlb
xor
mov
sbb
xor
pop
mov
jmp
ja
test
mov
adc
cmovns
sub
cli
pop
test
jecxz
mov
aam
pop
jp
cmp
outsb
dec
out
push
dec
fwait
mov
and
ret
ss
inc
adc
jmp
xor
xchg
mov
in
lcall
ret
xor
sti
imul
jb
sar
push
xchg
test
sbb
not
repz
jmp
inc
adc
test
or
add
pop
inc
lret
popf
sbb
sbb
adc
inc
push
mov
outsl
sub
ret
test
and
test
out
or
xor
xor
shlb
pop
ss
or
sti
pusha
aaa
mov
lock
dec
mov
pop
scas
ds
lcall
push
mov
mov
sarl
decl
inc
add
inc
cmp
dec
rcll
mov
mov
dec
rclb
sub
add
mov
and
loop
jbe
pop
xchg
cli
xor
push
sbb
and
mov
dec
pop
mov
pop
mov
inc
dec
mov
jo
mov
cli
pop
fmulp
repz
out
mov
sbb
xor
pop
clc
repnz
xor
iret
inc
xor
rclb
mov
cmp
outsb
ss
adc
repz
push
dec
xorb
inc
push
stos
ds
cmp
loop
shrl
test
lea
inc
xchg
cmp
sarl
push
jbe
or
mov
filds
or
mov
dec
adc
sub
sbb
sbb
mov
testl
mov
sahf
pusha
movsb
adc
decb
or
and
leave
mov
add
pop
push
cmp
inc
idivb
mov
data16
pop
adc
popf
add
push
dec
add
push
imul
test
and
xchg
adc
xchg
dec
sbb
xor
xlat
ds
rolb
sub
sbb
stos
xchg
rclb
stos
fcoms
cmp
daa
pop
sub
out
out
jo
cmp
in
fisubrs
scas
push
xor
mov
sahf
pop
cmp
push
dec
popf
jmp
push
pop
nop
push
shll
jecxz
insb
fcmovnbe
sub
lcall
sbb
fisttpll
or
repnz
mov
cmp
aaa
xchg
loop
jb
push
ja
sub
lahf
das
push
mov
mov
into
xchg
xlat
or
pusha
jle
mov
or
sbb
or
lret
and
enter
ret
pop
les
lock
jp
lods
out
nop
sbb
push
pop
ret
cmp
repnz
or
dec
shlb
test
sub
mov
push
jge
clc
repnz
adc
dec
and
sbb
xor
inc
adc
xor
sbbb
inc
xor
and
cmp
inc
xor
and
xchg
bound
jle
sub
ljmp
sti
mov
xchg
xchg
imul
xchg
and
sub
adc
mov
in
popa
je
mov
dec
mov
sbb
jae
mov
xorl
jle
pusha
inc
js
out
dec
xlat
mov
inc
loopw
pop
addb
mov
mov
pop
dec
mov
adc
ret
or
loope
sub
sbb
pop
pop
arpl
jle
jmp
mov
fistl
stos
jnp
and
dec
popa
ret
mov
adc
xor
inc
add
and
xor
jle
arpl
xor
xchg
inc
int3
and
xchg
mov
sahf
insb
repnz
or
sarl
enter
xrelease
mov
xorl
push
pop
mov
inc
imul
out
xor
orb
iret
mov
lret
mov
pop
outsl
push
clc
jno
dec
or
je
sarb
in
js
dec
pusha
sbb
mov
insb
xor
enter
sbb
cmp
flds
add
sbb
aam
cmovo
inc
dec
push
xor
inc
lret
xor
mov
dec
jbe
or
pop
pop
lahf
ss
cwtl
mov
mov
jbe
sbb
dec
inc
add
sti
jp
fmull
aas
int
test
stos
inc
arpl
loope
addb
jp
scas
enter
cmp
mov
mov
xlat
dec
or
jns
cvtps2pd
or
mov
pop
in
adc
xorb
jp
mov
sub
xor
cs
xor
inc
stos
push
iret
jns
cmp
ds
jmp
sub
jmp
es
sub
out
mov
sbb
xor
je
test
out
cmp
ss
xor
repz
roll
aaa
jne
dec
pop
in
mov
movsb
mov
rolb
or
int
pop
mov
mov
jb
sti
stos
gs
jle
out
ds
mov
push
outsb
mov
cmp
inc
stos
pop
hlt
push
dec
dec
cmp
les
xor
xchg
sbb
adc
push
dec
ret
add
lods
jle
mov
lret
mov
mov
jp
jb
mov
out
insb
mov
sub
cli
inc
in
in
mov
mov
xchg
fs
mov
jmp
sbb
fwait
jno
push
test
fidivrs
or
pushf
pop
lods
mov
inc
lock
mov
cmp
push
cmp
shr
dec
ss
clc
test
cmp
jmp
or
mov
lods
jb
divl
push
int3
xor
ds
mov
cmp
mov
call
dec
jo
xchg
repz
sub
inc
mov
inc
push
cwtl
in
adcl
mov
inc
jg
test
gs
sub
push
dec
cmp
inc
dec
rclb
sub
push
lds
mov
xor
mov
iret
push
test
lcall
mov
mov
cmp
mov
or
sbb
fistpl
sbb
sub
das
lret
cld
mov
push
sub
and
dec
mov
xor
pushf
jp
fs
lcall
inc
mov
sub
jnp
push
dec
ss
repz
popf
cmp
movsl
inc
shlb
sub
rorl
cmp
mov
lcall
sbb
cmp
sub
push
adc
sbb
lods
dec
leave
push
adcb
test
in
xor
cmp
mov
xchg
or
jnp
or
ret
int3
and
mov
pop
dec
pusha
rcr
ja
xor
arpl
xchg
ror
xchg
xor
push
xor
mov
jl
mov
pop
cmp
xor
mov
jg
xor
cmp
adc
subb
sbb
ljmp
or
or
pop
aas
ds
test
cltd
push
and
jg
xor
mov
cld
push
insb
inc
stos
xor
and
inc
xor
or
xor
test
inc
mov
xor
out
fs
cmpsb
mov
sti
insb
ret
testb
or
sahf
pop
push
mov
ror
lret
and
cmp
sbb
dec
jmp
sub
push
in
pop
jns
je
or
ret
inc
xlat
cmp
xchg
pop
mov
sbb
or
mov
or
mov
dec
inc
push
mov
cmp
rcrl
ficompl
ss
int3
int3
cltd
xchg
and
rcrb
ss
mov
cmp
dec
out
push
push
sub
lods
and
in
shll
mov
insb
in
rclb
jbe
hlt
push
add
xor
dec
and
push
sbb
aad
nop
inc
dec
shll
decb
mov
pop
dec
xchg
repnz
rcll
jl
jae
add
dec
inc
dec
mov
fwait
push
pop
jae
pop
dec
bound
dec
lock
jmp
adc
mov
sti
push
fldt
jge
xchg
shlb
movsb
test
cwtl
mov
add
shld
push
mov
mov
dec
push
inc
in
into
sbb
sbb
xor
cmp
pop
inc
cmp
push
push
lahf
cs
lock
jle
movsb
sbb
imulb
scas
add
hlt
fistpll
adcl
push
push
jecxz
in
int
movsb
fwait
cli
jg
cmp
mov
mov
nop
pop
mov
jo
or
jmp
aaa
mov
xchg
stos
mov
loopne
dec
shlb
sbb
cmp
xchg
aas
outsb
or
or
shll
mov
leave
cmp
cmp
fdivl
sti
clc
stos
pusha
mov
jp
dec
fs
es
xor
rolb
fwait
adcb
sub
jnp
inc
pusha
or
mov
pop
rcrb
or
push
pop
adc
mov
into
lret
sbb
inc
cmp
lret
cmpsl
mov
dec
jns
jbe
inc
imul
sbb
xchg
int
mov
xchg
mov
cmp
add
xchg
jb
nop
jecxz
fcomps
jecxz
orb
aaa
pop
mov
imul
inc
mov
fidivl
inc
sbb
fucomip
lds
xor
push
jne
mov
pop
xchg
dec
scas
cmp
xchg
das
mov
mov
mov
xor
mov
mov
shll
jo
lcall
pop
stc
dec
test
add
or
sub
pop
add
sbb
adc
test
mov
dec
imul
mov
mov
fdivr
push
or
das
mov
cmp
nop
call
and
pop
cltd
lods
test
sbb
inc
pop
into
aas
jbe
leave
mov
out
cltd
fwait
inc
jge
sbb
insw
imul
cwtl
fidivl
inc
and
xorb
cmp
aad
lahf
shr
loop
sti
xlat
les
imul
cli
aam
cmpsl
xor
mov
cs
cmp
pushf
xchg
inc
bound
mov
cmp
fnstcw
sarb
or
addb
xor
clc
sub
sub
pusha
stos
sbb
pop
ss
inc
sub
xor
inc
sub
jp
out
mov
dec
sbb
movsb
mov
inc
and
cmp
je
call
lea
add
push
cmp
push
test
mov
sub
xlat
mov
push
mov
cmp
mov
add
inc
dec
or
sbb
ds
inc
sub
leave
scas
cmp
lret
ss
pushf
cwtl
stos
ss
lret
xor
insb
push
pop
mov
sbb
mov
ja
leave
cmp
rclb
cmp
cmp
dec
dec
or
dec
mov
sbb
mov
in
mov
xor
xor
dec
cmp
push
jp
inc
daa
xorb
repnz
cmp
cmp
ss
adc
push
sbb
and
fs
enter
loopne
ret
in
jno
inc
xlat
mov
pushf
movsl
xchg
mov
in
lret
rolb
push
mov
fwait
add
lds
fdivrs
lahf
shll
inc
xchg
iret
repnz
mov
test
xchg
jl
ds
pop
or
cmp
mov
adc
jg
push
sbb
ss
or
fwait
repnz
xor
push
pop
sahf
push
or
push
divb
jb
sbb
cmp
adc
popa
pop
cwtl
pushf
mov
sbb
cli
fucompp
fildll
aas
cmpsb
sub
cmpsb
ds
inc
inc
ds
test
movd
jmp
dec
push
clc
ds
iret
data16
sbb
jg
jmp
je
mov
int3
hlt
sbb
leave
insb
test
adc
dec
inc
mov
and
sti
and
adc
inc
xor
xor
and
dec
mov
cmpb
aam
mov
cmp
push
xor
test
je
xor
jmp
cmp
xor
pusha
add
push
fiaddl
cmp
movsb
sbb
add
xor
ret
adc
sbb
fisttpl
push
add
hlt
into
dec
cmp
push
inc
dec
mov
lret
adc
cmp
xchg
or
xor
int3
faddl
jmp
cmp
clc
lea
and
cmp
dec
mov
cmp
jecxz
out
pop
adc
xchg
dec
sahf
adc
and
or
jo
jl
dec
or
iret
inc
mov
fwait
push
inc
outsb
or
push
sbb
jbe
mov
mov
xchg
pop
cwtl
loop
jg
mov
nop
dec
or
mov
add
sub
aam
sar
dec
adc
cmp
rclb
mov
stos
xchg
sahf
push
addb
mov
pushf
cmp
push
shlb
cmp
in
cmp
adc
insb
vmulsd
xor
bound
pop
sub
call
mov
xchg
dec
sbb
js
sbb
js
sbb
js
sbb
adc
inc
xor
mov
mov
and
or
dec
fdivl
sarb
dec
fwait
mov
stos
dec
or
cmp
cmpl
jle
aas
js
shlb
mov
adc
call
sbb
lret
cmp
mov
stos
lret
dec
dec
mov
jp
xor
jp
pop
push
dec
std
jp
out
mov
mov
and
xor
pop
or
jnp
lret
lret
mov
subl
aad
js
pop
cli
cmpsb
push
ja
mov
and
rorb
jg
testb
jmp
push
repnz
push
sbb
or
loop
lret
jp
xor
lret
call
xor
nop
dec
ss
lret
imul
xchg
scas
adc
call
je
sbb
daa
jns
cld
stos
rcrb
sti
lcall
xor
outsb
jo
cmp
cwtl
or
outsl
iret
mov
push
sbb
cmpsb
dec
lea
push
push
popf
dec
stos
xor
push
andl
rsqrtps
jecxz
inc
xor
xchg
dec
push
sub
and
repz
mov
ss
icebp
adc
jmp
fstpt
test
or
test
fimull
cmp
jno
arpl
hlt
pop
inc
push
jg
inc
or
fmuls
add
insl
push
stos
push
dec
dec
sar
sbb
push
nop
dec
push
adcb
popf
arpl
dec
push
cli
dec
inc
lret
jle
popa
jno
dec
jbe
adc
xor
ja
dec
or
dec
mov
adc
bnd
xchg
pushf
sub
push
xchg
xor
sub
sbb
hlt
mov
pop
movsb
lcall
insl
inc
adc
push
pusha
push
mov
adc
push
sub
fisubl
jbe
push
or
mov
out
cs
pop
pop
fs
xlat
sbb
sub
dec
adc
inc
mov
lds
adc
pop
push
or
jecxz
xorb
push
mov
or
test
dec
dec
popa
stos
int3
ljmp
sarb
push
mov
sub
dec
outsb
inc
cmc
fwait
cmp
lea
add
pop
mov
jo
lret
sbb
pop
insb
cmpb
adc
icebp
mov
or
jle
xchg
outsb
mov
push
ret
jp
jbe
jecxz
add
and
fdivl
dec
shlw
nop
dec
mov
mov
jbe
pop
fwait
sbb
dec
or
sbb
int3
mov
cmp
cmp
ret
push
xor
xor
dec
pusha
sub
leave
push
inc
inc
adc
mov
mov
jbe
loop
cmp
cmp
jne
jbe
repz
push
fisubrl
loopne
hlt
inc
dec
cs
dec
lahf
ljmp
rorb
push
hlt
inc
adc
pop
in
imul
adcb
xlat
or
rorb
xor
push
add
shrl
cmp
xor
inc
push
popa
jnp
fisttpll
stc
in
mov
push
pop
mov
psubd
push
arpl
cmp
push
enterw
ss
addr16
mov
or
xchg
push
mov
pop
fldenv
push
xor
cmp
ret
jp
mov
mov
xor
mov
jb
mov
pop
mov
outsl
dec
ret
orb
mov
inc
inc
mov
sbb
xor
fimuls
push
and
sbb
adc
push
dec
pop
xchg
stos
sbb
in
popf
shl
js
bound
jne
rcll
pusha
mov
sbb
rcrb
xchg
ljmp
mov
stos
fcmovbe
scas
idiv
inc
jmp
pop
push
ficoml
fwait
ja
es
repnz
mov
divb
rorb
ret
jne
ds
fldcw
pop
je
and
push
and
sbb
aas
lcall
ja
mov
xorl
roll
arpl
rcrb
cmp
movsb
push
sahf
cmp
dec
fcomp
xor
dec
call
jb
rcrl
adc
adc
xchg
mov
jns
movsl
pop
mov
mov
dec
ficompl
sbb
push
jo
or
xchg
or
ljmp
and
sarb
mov
cwtl
mov
mov
mov
cmpsl
mov
jge
cmpsl
dec
push
jecxz
loopne
inc
dec
scas
lcall
es
in
xor
dec
ljmp
sti
bnd
push
push
outsb
mov
push
cwtl
mov
ret
cmp
jg
cmp
mov
mov
push
stos
fdivl
icebp
out
fcoml
mov
out
ds
into
inc
push
sti
pop
sbb
and
insb
xchg
jnp
sti
inc
fiadds
inc
idivl
add
ja
mov
jb
mov
outsb
sbb
sahf
adc
sbb
insb
mov
mov
loop
stos
push
arpl
sti
xorb
adc
pop
frstor
int
xchg
mov
cwtl
dec
and
int3
mov
xor
outsl
fs
xchg
mov
ljmp
push
push
sub
movsb
fcoml
or
sbb
xor
bound
inc
lcall
push
leave
sahf
inc
xor
mov
xor
sti
xor
push
xchg
mov
dec
or
fdivl
sub
fidivs
jbe
stos
mov
inc
mov
mov
push
ret
sahf
leave
jno
mov
xchg
and
jo
int3
fucomip
aas
mov
xchg
cmpsb
mov
dec
and
mov
adc
push
pop
or
xor
cmp
cmp
inc
hlt
movsl
adc
flds
pop
lret
jne
sbb
out
jmp
push
mov
jbe
xchg
mov
dec
pop
inc
xor
sahf
fs
subl
ja
cmp
fdivrp
in
or
pop
lahf
int
inc
xor
std
sbb
push
cmp
ret
into
int
into
add
movsl
mov
cmp
aaa
mov
mov
xor
test
mov
cs
jmp
clc
cs
dec
inc
fwait
add
xchg
cltd
in
jno
pusha
adc
sub
stc
fmul
cwtl
xor
push
or
lret
dec
inc
in
cwtl
adcb
lahf
or
scas
aad
pop
jb
xor
jmp
jb
fxrstor
test
inc
stos
push
xor
pop
or
adc
imulb
std
mov
jmp
rcll
sti
loopne
xchg
jmp
test
mov
xchg
or
imul
mov
inc
jbe
push
adc
xchg
pusha
into
aas
fsubp
inc
popa
sbb
dec
and
pop
pop
and
in
sub
cmpsb
cmp
sub
sti
sbb
mov
loope
ret
push
sub
xor
cmp
or
ror
mov
cld
or
or
xor
popa
push
ret
roll
xchg
mov
xor
les
push
jb
enter
inc
outsl
push
xor
out
int3
mov
adc
sbb
icebp
mov
dec
mov
dec
cwtl
sub
call
dec
jbe
jle
test
cltd
daa
negl
inc
push
xchg
ds
scas
xchg
adc
div
repz
sub
je
inc
sbb
mov
decb
mov
jle
idivb
pop
inc
inc
xor
sbb
aad
js
rolb
jno
into
add
es
cltd
cmpsb
int
push
xor
mov
fwait
dec
sbb
or
inc
inc
scas
inc
jle
mov
out
push
dec
and
pop
les
lret
sbb
ret
out
add
daa
cmp
imul
shlb
lds
push
push
push
or
outsl
xor
sbb
sub
ror
pop
xchg
inc
sub
lods
sub
je
shl
mov
inc
loop
mov
ljmp
sub
mov
outsb
or
pop
rorb
xor
jg
out
cmp
jl
addb
dec
and
inc
adc
xor
popa
mov
mov
sbb
incb
cmpb
sub
xchg
test
lcall
lods
lret
xchg
push
hlt
and
add
mov
jmp
adc
faddl
sub
jl
xor
push
in
add
dec
cmp
fs
pop
shrb
cmp
or
ror
cld
sbb
fiadds
xor
or
adc
mov
cli
imul
mov
scas
dec
sahf
cmp
mov
xchg
pop
mov
mov
in
xchg
cltd
sahf
mov
ljmp
jmp
xor
cwtl
sti
or
xor
rorl
sarl
aas
push
test
xor
sbb
xor
shlb
inc
mov
out
mov
nop
js
jp
sbbb
add
or
lret
sbb
in
jg
xlat
jb
in
sbb
xchg
cmp
in
scas
sub
rclb
in
cli
aad
imul
stos
stos
sub
mov
dec
outsb
lret
mov
inc
mov
jle
aad
push
sbb
xorl
les
js
adc
inc
addr16
cmp
dec
xor
push
dec
fdivrs
enter
popf
or
dec
and
xor
or
or
rcr
mov
imul
repnz
xchg
adc
dec
cmp
mov
pop
dec
xchg
mov
inc
cmp
dec
jno
lcall
mov
sub
mov
sub
push
comiss
sbb
mov
dec
cs
mov
call
and
sbb
add
mov
loop
mov
jecxz
sub
inc
adc
cmp
lock
push
pop
and
adc
ljmp
pushf
sahf
add
sbbl
jbe
jl
incl
and
movl
lods
fisttpl
aad
les
pop
fcmovnbe
dec
xchg
js
push
pushf
sub
mov
jns
mov
adcb
dec
and
fs
add
sbb
test
ret
dec
mov
fisttps
andb
push
push
ds
jp
or
sbb
mov
xchg
orb
or
mov
dec
or
cwtl
cli
sbb
mov
push
mov
sbb
rolb
jbe
sbb
cmp
push
xchg
out
dec
sub
dec
push
mov
jg
ljmp
mov
or
mov
xchg
dec
sbb
sub
test
out
std
sbb
fstpl
dec
xlat
xchg
push
xchg
and
addb
popa
cmp
sahf
mov
mov
dec
dec
adc
mov
cwtl
nop
mov
testb
pop
fimuls
inc
inc
aaa
jmp
shrb
push
in
ficoml
mov
cli
pop
add
xor
popf
lret
enter
push
adc
xor
cwtl
dec
and
mov
dec
lock
sbb
dec
inc
xchg
leave
loope
repnz
jl
popf
pop
ds
lds
mov
xchg
jl
dec
inc
mov
or
push
mov
push
call
mov
xchg
pusha
sbb
xor
stos
jl
hlt
ss
lret
inc
jle
test
jno
cs
cwtl
xorl
mov
cmpsb
and
test
rolb
jnp
sahf
and
or
sbb
push
adc
adc
stc
shr
pop
dec
stos
jo
jle
xchg
and
test
mov
dec
mov
daa
imul
icebp
sbb
int3
sbb
and
jmp
inc
shlb
push
leave
mov
mov
adc
rorl
mov
aam
mov
cs
mov
jmp
mov
dec
lds
and
pop
cmp
ljmp
imul
dec
sbb
icebp
cmp
and
mov
sub
clc
add
pushf
imul
frstpm(287
push
xchg
cmp
xor
mov
jns
xchg
dec
pop
or
jbe
je
cwtl
dec
fldl
xchg
jmp
mov
xor
mov
insl
cmp
sub
stos
cmovp
stos
dec
and
add
test
mov
shrb
loope
cmp
lock
inc
in
ss
dec
syscall
push
stos
push
fs
cwtl
fstpl
pop
add
mov
and
sbbl
ljmp
and
jg
sahf
adc
lahf
inc
jl
ds
lcall
mov
mov
lret
sub
inc
inc
xchg
les
stos
mov
jl
or
mov
outsb
mov
jae
filds
stos
adc
sbb
cmp
cmpb
pop
inc
aas
xchg
xchg
jnp
cmp
mov
push
jmp
test
dec
popf
pusha
dec
push
dec
and
jnp
mov
dec
inc
divb
imul
in
jbe
faddp
dec
fimull
sub
enter
sub
mov
xor
ret
inc
aaa
or
mov
jae
mov
dec
sbb
inc
push
into
add
push
dec
jge
repz
sbb
ljmp
enter
jg
pop
shr
andl
lret
repz
lock
mov
fildll
cmp
sbb
push
mov
sbb
push
push
add
shlb
or
out
std
leave
sbb
js
xor
adc
das
fs
or
or
mov
jl
into
dec
mov
pop
dec
shlb
jg
cs
pop
dec
test
or
sbb
clc
mov
jb
test
pop
xchg
es
andb
das
xor
jl
hlt
outsb
lret
mov
sti
shlb
aad
jg
xor
mov
mov
xchg
and
jge
cmp
stos
rcrb
sbb
xor
xor
sbb
mov
leave
notb
out
std
jbe
andb
mov
arpl
movsb
pop
push
sub
jle
dec
test
dec
inc
int3
iret
inc
fnsave
push
pop
xlat
sub
pop
xor
lcall
out
je
ljmp
add
rolb
push
or
sbb
outsb
mov
push
or
xchg
popa
sbb
mov
int3
xor
mov
ret
cmpb
push
pop
or
or
or
mov
add
in
mov
into
mov
shll
sbb
insb
push
jp
xchg
add
mov
xor
or
adc
inc
add
pop
fstpt
cmp
sbb
lret
mov
push
repnz
ret
pop
cs
popf
mov
mov
pop
sbb
pop
jns
pcmpeqb
leave
jo
dec
xor
mov
rclb
cmp
data16
mov
adc
insl
lock
jecxz
stos
mov
pop
mov
inc
fsubs
mov
sbb
cld
dec
push
dec
sbb
stc
push
push
mov
push
jae
insb
push
adc
mov
mov
jns
inc
adc
and
stos
les
call
xchg
sti
push
lods
xlat
adc
jns
push
or
cmp
xor
dec
and
mov
push
jnp
dec
xchg
xchg
or
jmp
cmp
and
sbb
ljmp
mov
shlb
jmp
cmp
rolb
or
mov
test
test
cli
mov
and
mov
pusha
dec
popa
int3
push
ljmp
cld
lock
sbb
loop
dec
sbb
jecxz
fidivrs
sti
mov
mov
xchg
js
xor
leave
mov
xor
sbbl
mov
ljmp
xor
stc
xor
cmp
inc
dec
mov
jno
jbe
xchg
xor
out
das
or
and
or
out
push
fsts
xchg
in
jecxz
sbb
loope
jne
mov
xor
shlb
les
cs
bound
aad
in
test
pop
outsb
adc
or
cmp
cmp
aaa
jmp
mov
push
data16
out
xor
pusha
out
scas
jo
insl
inc
sbb
mov
loope
jno
mov
movsl
aaa
popf
movsb
neg
xor
xchg
cmpsb
mov
sub
dec
jge
addb
mov
loop
outsl
push
xor
dec
and
dec
sbb
or
pop
xchg
and
mov
adc
jp
xchg
call
mov
adc
les
dec
cmp
cmpsb
xlat
aas
xor
xchg
mov
aam
mov
dec
nop
jecxz
pop
push
test
data16
nop
addr16
sbb
into
mov
sub
sub
loopne
adc
push
test
gs
mov
add
mov
pop
repnz
adc
lock
pop
cwtl
push
cld
ret
cwtl
push
sarb
dec
mov
arpl
inc
sbb
dec
cs
adc
xchg
jmp
dec
stos
js
jns
in
jne
adc
and
xchg
cmp
addr16
mov
adc
aas
dec
add
notb
sub
or
push
lcall
add
icebp
sahf
ss
lret
xor
push
mov
ja
mov
mov
cld
add
pop
xorb
mov
lcall
mov
mov
sahf
mov
stos
mov
pop
addr16
jns
sub
cmp
loop
or
mov
and
jle
mov
inc
mov
xor
pop
xor
push
lret
mov
mov
mov
out
jb
jb
rorb
xor
popf
dec
aaa
dec
out
idivl
lods
repz
jecxz
xchg
fidivl
mov
stos
inc
or
mov
or
push
ret
sub
or
cmp
in
pop
or
jnp
adc
push
lds
out
aas
jns
pushf
push
sub
fisttps
aam
rclb
jnp
adc
mov
gs
call
xchg
xchg
mov
popa
mov
imul
sbb
adc
xchg
cmp
mov
xchg
sti
test
clc
test
mov
ss
jmp
xchg
xor
mov
cmp
or
cltd
popf
or
xor
jnp
push
clc
mov
jle
push
sbb
xchg
jmp
mov
xor
adc
pop
pop
push
sub
mov
jl
sbb
clc
out
jmp
lret
add
mov
sbb
jae
stc
dec
out
cmpb
mov
inc
cmp
sbb
dec
scas
xchg
or
into
rcrb
sbb
jg
sub
add
jl
sahf
mov
pusha
pop
ds
adc
mov
fs
jbe
imul
stos
loop
fwait
mov
ds
sbb
inc
sbb
mov
test
dec
repnz
inc
sbb
repnz
sbb
adc
bswap
int
and
inc
mov
mov
lcall
ja
xchg
jle
sbb
rcrl
inc
or
adc
dec
dec
jge
imul
jb
jle
mov
js
sbb
jnp
or
push
pusha
jge
xor
call
mov
jb
jb
cmpsb
mov
xor
lea
cmp
push
adc
test
aam
in
insl
xor
xor
push
fs
scas
jno
xchg
pop
or
sahf
sbb
aaa
mov
rclb
cmp
enter
cmp
lock
cwtl
lds
xor
pop
ret
dec
test
sbb
out
jg
sbb
in
xor
jo
jne
inc
or
pop
cwtl
ret
ljmp
and
and
inc
aaa
mov
insb
jae
push
mov
iret
gs
mov
testl
dec
into
mov
loopne
into
divl
sahf
test
adc
push
mov
ja
mov
sub
cwtl
popa
inc
adc
lahf
clc
leave
cmp
cli
add
aam
loopne
adc
lret
clc
xchg
add
sbb
fucomip
and
jbe
mov
lcall
lds
push
add
fwait
les
pop
inc
sbb
inc
sbb
cmovns
inc
mov
mov
sub
fisttpl
push
ret
ds
dec
cmpsb
mov
subb
inc
repnz
enter
fiadds
jbe
dec
sti
push
mov
or
mov
call
sbb
stos
shr
or
js
pop
add
sub
enter
or
jb
imul
push
mov
jb
jns
cld
push
xchg
loopne
clc
aaa
or
jae
and
loope
push
lea
jae
mov
ret
push
lods
das
push
or
pop
lods
xor
fmull
dec
std
inc
jb
dec
popf
inc
jg
sbb
adc
dec
xchg
and
push
fstpt
jns
sti
je
adc
sub
mov
add
dec
fisttpl
mov
cmp
insb
aad
xchg
pop
or
push
push
sub
test
mov
pop
inc
mov
push
xchg
pop
nop
orb
retw
push
scas
dec
sti
rolb
data16
stos
cltd
push
sarb
ljmp
or
or
or
jns
loop
les
insl
sbb
mov
dec
sar
jmp
dec
adc
jecxz
xor
repnz
test
add
mov
dec
into
mov
ja
ljmp
sbb
repnz
js
xlat
pop
sbb
orb
mov
mov
cmp
js
cmp
ret
or
sarl
lret
repnz
pop
mov
lret
rorl
rorl
jp
cwtl
dec
push
lea
inc
mov
int3
bound
or
rcrb
mov
add
test
add
xor
jmp
xor
mov
lahf
in
push
mov
fimull
mov
jle
imul
mov
mov
or
sbb
rol
xchg
jo
xchg
popf
bound
inc
push
lret
sbb
cmp
cmp
fidivs
imul
fstps
jo
and
je
mov
jo
xchg
sbb
fisubrl
ret
or
lea
imul
pop
repz
insb
cwtl
mov
sbb
lcall
inc
mov
xlat
rorb
mov
dec
push
sbb
and
scas
jle
push
pop
popa
pop
bound
inc
adc
mov
push
bound
ja
fisttpl
addr16
es
sbb
jae
mov
or
xchg
cld
add
lret
pop
pop
add
lahf
push
xchg
cmp
dec
cmp
lods
rcrb
fmuls
mov
in
jp
cmp
dec
pop
and
sub
jle
push
dec
and
pop
pop
bound
xor
ffree
sar
sub
jns
inc
pop
xchg
sarb
cmpsb
sti
xchg
ds
mov
mov
shr
jae
inc
jbe
mov
jbe
inc
inc
mov
cmp
xchg
sbb
cwtl
mov
mov
cltd
mov
enter
mov
rcr
ret
adc
mov
mov
jnp
pusha
inc
lret
lods
jl
mov
jg
movsl
inc
mov
fwait
sbb
jl
cmp
push
arpl
lahf
gs
stos
push
jb
cmp
sbb
inc
lods
mov
fwait
lods
xorb
xor
leave
out
int3
inc
in
mov
mov
sbb
in
mov
jp
dec
jo
and
mov
sbb
scas
pop
cs
push
cmp
adc
xor
sub
cmp
loopne
filds
cmp
jmp
pushf
inc
cli
loopne
or
cwtl
out
mov
add
jns
shrl
xorl
cmc
ds
xor
jbe
hlt
data16
fldt
fs
cmp
xchg
xchg
aas
mov
lret
neg
sbb
mov
arpl
insl
adc
sub
mov
fs
fldl
in
js
jp
jnp
hlt
adc
jl
cmp
dec
stos
jge
sub
xor
in
jmp
or
cmp
not
or
data16
je
mov
imulb
inc
dec
mov
jmp
mov
mov
lcall
rorb
push
mov
and
jecxz
js
jmp
jge
push
dec
rol
icebp
aad
mov
jecxz
adc
jle
mov
and
mov
ds
jl
mov
push
fcomi
pop
ficomps
mov
push
stc
push
mov
xlat
mov
cmp
mov
in
adc
mov
mov
lds
or
jl
stos
push
sub
lret
push
mov
imul
rcrb
add
xor
test
fnstcw
jbe
sub
inc
iret
cmp
dec
and
sahf
sub
or
hlt
pop
adc
mov
xchg
adc
mov
aas
add
adcb
jg
out
enter
js
mov
inc
cmp
jnp
in
jecxz
adcl
add
jge
dec
data16
cmpsb
out
pop
jns
mov
repz
mov
dec
xchg
or
fcomip
or
lcall
jns
xchg
aas
enter
iret
pushf
push
stos
or
mov
int
or
mov
lret
fmull
das
cltd
int3
mov
in
xor
cmpsb
push
sbb
je
xchg
xor
add
mov
or
ret
mov
stc
sbb
cli
test
push
subl
cmp
scas
imul
lcall
cltd
cmp
jmp
or
sbb
push
repnz
and
mov
loop
xchg
out
pusha
mov
cmp
dec
mov
xchg
or
push
cmpsb
pusha
sbb
sbb
sbb
pusha
mov
pushaw
sbb
xchg
mov
xor
es
inc
jg
sbb
mov
dec
mov
fmull
dec
popf
cld
mov
fisttps
xor
inc
cwtl
cs
adc
dec
xchg
jbe
icebp
imul
mov
mov
dec
or
test
mov
jo
xchg
aas
lcall
cmp
insl
std
jne
decb
je
inc
aad
jge
mov
xchg
xchg
dec
into
mov
imul
repz
hlt
stc
push
jb
dec
sub
cmpsl
lcall
stos
jb,pn
aad
insl
les
dec
xor
jne
mov
fldt
cmp
aad
fwait
sbb
push
cmpsb
movsb
sahf
xor
and
loopne
push
dec
dec
inc
ror
xchg
dec
fwait
and
nop
xor
cmp
push
mov
fiadds
pop
mov
out
dec
or
stos
mov
out
xor
pop
aad
imul
sbbb
fmull
pop
sbb
cmp
xor
mov
inc
or
ss
js
pop
mov
xor
popf
imul
pop
aas
movsb
repnz
arpl
dec
cmp
nop
sub
movsl
adc
insb
pusha
and
aad
jns
in
aas
je
ret
jl
repz
cmp
in
loop
adc
mov
mov
out
sbb
iret
das
dec
mov
daa
in
ja
or
dec
in
sbb
mov
repnz
ret
dec
les
jge
in
xchg
xor
or
inc
push
clc
jb
mov
out
jo
lahf
mov
nop
mov
push
repnz
pushf
mov
jp
xchg
addr16
pop
fidivs
cmp
jnp
inc
in
or
jne
cltd
lock
cmp
movsb
jle
dec
cmp
mov
imul
mov
jp
cwtl
mov
mov
aas
pop
stos
sbb
dec
loopne
sbb
jae
lret
sarb
andl
gs
lret
push
mov
sub
es
pop
pop
rsm
jb
add
pop
adc
in
xchg
xor
cmovle
dec
pop
push
cli
rolb
mov
adc
sub
jmp
xchg
movsl
xor
xor
cmc
dec
into
loop
fidivrs
dec
pushl
lods
cmp
lcall
nop/reserved
push
loop
scas
clc
negb
scas
xor
mov
cmp
arpl
mov
out
fwait
pop
cmp
stos
lea
inc
decb
icebp
cmp
in
cli
mov
scas
xlat
lock
jb
sti
push
imul
aas
xor
rcrb
mov
xor
sbb
in
mov
mov
gs
cmp
mov
lret
ss
fsubrl
loop
sub
adc
in
sahf
movsl
xchg
orb
xor
nop
jmp
sub
mov
push
jle
or
push
cmp
pop
rorl
es
mov
mov
and
sarb
bound
sahf
mov
mov
repnz
hlt
test
sbb
dec
inc
adc
es
dec
mov
pop
sti
jl
mov
insb
mov
mov
xchg
add
cmp
xor
pushf
rolb
or
sahf
pusha
outsl
ret
inc
ss
incb
cmp
idivb
adc
imul
jo
cli
xchg
cmp
leave
jo
xor
mov
cmpsb
imul
xor
push
mov
jmp
loopne
mov
jp
dec
push
adc
adc
ja
cmpsl
js
jb
dec
scas
push
out
jno
ret
dec
imul
repnz
sbb
inc
ret
mull
arpl
inc
push
pop
push
add
add
ss
inc
iret
xchg
xchg
push
jp
lret
pop
adc
mov
push
mov
cmp
jmp
test
fwait
call
dec
push
mov
lock
or
dec
cmp
lods
movsb
adc
sub
ss
les
pop
or
push
xor
push
mov
cwtl
push
push
push
repnz
or
fs
jae
mov
push
scas
jge
fs
pop
sub
dec
mov
scas
pop
push
mov
fwait
in
in
sbb
adc
dec
test
xor
jbe
gs
xor
fwait
fs
sbb
jb
and
loope
lock
fldl
and
stc
add
add
pusha
fmuls
ss
cmpsb
out
repnz
lea
and
jle
cmp
mov
jb
push
sbb
lcall
inc
les
loopne
pop
cmovno
sub
popa
pop
pop
sarb
js
mov
or
cmp
pop
andb
imul
shrb
out
sti
jl
shll
dec
aas
orl
dec
cs
pusha
mov
mov
mov
sbb
inc
shlb
sti
sbb
cmp
or
jb
testb
jnp,pt
fs
sub
xlat
push
cmp
jecxz
or
mov
xchg
jmp
pop
push
int
push
cs
aam
out
xor
mov
or
pop
inc
dec
xor
mov
test
in
rolb
jbe
inc
xor
sti
out
inc
aaa
mov
je,pn
add
sbb
shlb
into
cmpsl
shlb
lods
inc
mov
mov
mov
jl
mov
rorb
in
rorb
cmpl
mov
out
push
mov
sbb
push
xor
xor
mov
into
ja
mov
jb
sbb
pop
dec
xor
in
jo
jo
cmpsb
loop
lahf
dec
sub
and
mov
mov
jbe
pop
out
ss
cmp
and
push
icebp
gs
shll
iret
mov
and
insl
xchg
rcrb
lcall
insb
inc
pop
cmp
cmp
push
lods
icebp
test
and
jb
dec
pop
cmp
out
stc
in
mov
jle
sbb
dec
jecxz
or
mov
in
iret
cmp
push
loope
js
cmp
setbe
add
ds
jp
loopne
pushf
fcmovnb
sub
adc
mov
adcl
cmc
repz
xchg
sbb
mov
pop
mov
or
pop
jbe
shll
test
test
int3
sub
mov
mov
adc
mov
or
push
dec
mov
push
movb
mov
sub
or
pop
jp
movsb
dec
push
mov
in
aaa
and
test
inc
aam
mov
adc
push
mov
loope
inc
or
mov
mov
sahf
cmp
repz
jne
outsl
rorl
or
xorl
inc
jle
mov
jb
sti
xchg
sbb
and
dec
or
push
or
pop
jecxz
jae
and
sub
jns
sub
jne
pushf
push
arpl
clc
push
sbb
sub
shlb
sbb
gs
jge
push
push
push
cmpsl
shlb
test
lret
jle
cli
clc
cmp
imul
or
pop
addr16
fwait
cmpsb
ljmp
xchg
push
or
hlt
fprem
cli
mov
jmp
pop
xor
add
inc
testb
and
cmpsl
mov
sub
sub
and
lcall
and
dec
cmp
lret
or
testb
push
nop
cmp
push
outsb
popf
shlb
aas
insb
push
scas
mov
mov
ret
fldt
fdivrp
inc
inc
push
aam
fnstcw
adc
clc
push
sub
ficomps
inc
sub
mov
cs
jb
nop
jmp
inc
inc
xlat
mov
inc
dec
dec
dec
or
mov
dec
rolb
mov
stc
jecxz
lret
in
xor
cmpsb
dec
adc
mov
adc
fbstp
mull
lret
add
sub
push
lret
add
mov
mov
rorb
mov
arpl
arpl
mov
call
xor
lahf
push
cmc
test
mov
push
rcrb
xchg
pop
xchg
xor
or
outsl
adc
push
outsb
jl
sahf
sbb
push
mov
jl
mov
pop
bound
sbb
dec
jmp
push
add
xchg
arpl
hlt
sbb
sub
and
pop
cwtl
lret
ds
mov
es
leave
sbb
jp
loopne
and
shlb
into
push
enter
mov
in
ret
inc
mov
xor
jp
pop
xchg
mov
push
sti
mov
enter
or
mov
and
jb
pop
dec
int
adc
adc
cli
jge
push
dec
mov
pop
out
inc
fsubl
push
orl
cmp
or
adc
test
push
pop
push
mov
mov
adc
int
and
jnp
jo
adc
cmp
in
push
mov
inc
sbb
loope
cmp
je
bound
push
mov
loop
cmc
loop
xor
push
loopne
bound
mov
xor
push
push
mov
leave
pop
jae
ja
mov
data16
jae
lret
cmp
cs
fdivs
or
dec
xor
sub
inc
outsb
mov
and
int3
cmp
std
sub
dec
mov
bound
mov
ljmp
out
int3
add
jns
lods
or
dec
jecxz
test
adc
xchg
int3
add
or
sub
ret
sub
cs
inc
dec
dec
insb
dec
push
mov
or
cmp
movsb
mov
jo
push
or
int
fldt
pushf
mov
jae
pop
scas
mov
jne
lret
loopne
sbb
jbe
lret
mov
or
adc
mov
mov
pop
sahf
dec
jb
or
jg
pop
adc
mov
pause
lcall
sbb
and
rorb
in
shrb
loop
addb
xchg
xor
andb
dec
inc
pop
cwtl
dec
sbb
add
inc
lds
pushf
dec
jle
mov
push
push
jle
adc
dec
repnz
sbb
cmp
xor
add
jb
or
sahf
mov
xor
insl
sbb
dec
ret
jnp
int3
dec
and
addr16
or
and
mov
add
jmp
mov
xchg
cmpsb
or
inc
loope
shlb
push
lea
aam
shlb
adc
addr16
mov
pusha
and
sbb
daa
inc
inc
inc
lret
bsr
imul
xor
movsb
sbb
sbb
int3
xchg
sbb
xlat
inc
data16
xor
jmp
dec
fimull
out
rorl
inc
xor
sbb
or
add
std
sbb
mov
gs
dec
sbb
inc
aaa
sbb
adc
mov
cwtl
cmp
and
xor
pop
jg
movsl
add
stos
xor
mov
push
int
jae
in
lcall
mov
inc
rorl
or
cmpsl
mov
push
stos
jl
mov
mov
mov
inc
jp
ret
ljmp
stos
xchg
mov
shrb
push
loop
mov
arpl
sahf
mov
lods
pushf
pop
lret
and
xchg
and
pop
or
pop
inc
mov
gs
lret
bnd
push
inc
cwtl
mov
add
cmp
xor
sbb
xor
xchg
push
sbb
into
mov
sub
test
adc
xor
jae
in
enter
ret
xor
sbb
mov
dec
adc
xor
inc
xor
cmp
sbb
sub
inc
ja
and
cltd
movsl
mov
out
out
xor
sbb
dec
xchg
data16
xchg
and
dec
test
ret
insl
jmp
jns
adc
mov
shlb
cmp
dec
adc
aam
loop
mov
fsub
dec
mov
inc
mov
jg
or
push
adc
mov
mov
or
xchg
jo
cmp
mov
dec
xchg
xchg
lret
xor
push
inc
dec
pop
leave
mov
std
andl
aas
or
mov
mov
dec
imul
ret
sbb
jge
shlb
lret
mov
lods
xchg
mov
push
mov
push
leave
loop
jp
adc
add
lea
mov
dec
mov
lret
jne
or
pushw
repz
sbb
mov
fistl
mov
cmp
loope
pop
ficoml
repnz
mov
stos
fwait
adc
cmp
cmp
js
sbb
mov
inc
mov
std
lahf
int3
mov
jg
fiaddl
sbb
inc
aaa
push
pop
loopne
jne
cmp
inc
rolb
dec
inc
popf
leave
jle
mov
and
or
mov
xchg
or
repz
cmp
inc
pop
fwait
sbb
dec
mov
sbb
ss
fistpll
arpl
and
and
mov
jmp
add
lock
mov
mov
sbb
fxch
shl
xor
cmp
xchg
sub
movsb
hlt
cmp
dec
fldl
fistpl
aad
mov
scas
testb
mov
dec
adc
cltd
repz
xchg
mov
push
in
pop
ret
xor
sub
or
jnp
mov
stc
fmuls
mov
fnstenv
or
push
lock
pushf
dec
loop
and
pop
pop
push
pop
in
dec
push
push
mov
jbe
xor
stos
pop
cmp
dec
jae
int3
sti
fs
sar
jb
test
xchg
jecxz
mov
movsl
push
loope
push
fwait
rclb
push
or
xlat
or
mov
xor
test
sub
in
frstor
jno
jl
pushf
sbb
test
sti
into
pop
jecxz
sub
or
or
pusha
pop
jb
dec
mov
dec
lods
dec
cmpsb
or
hlt
pusha
dec
push
rcll
sbb
add
stos
xor
and
mov
add
in
sbb
bound
dec
js
daa
inc
sbb
cwtl
dec
outsb
js
xor
add
dec
and
mov
pusha
sub
cmp
inc
dec
ret
fmuls
pop
xchg
sub
pop
mov
imul
or
sbb
iret
mov
and
adc
adcb
mov
add
mov
sbb
or
stos
cltd
add
scas
jno
nopl
xor
ds
or
pop
or
dec
push
or
cmpb
dec
shl
lret
je
push
sbb
xchg
out
cmp
pusha
lcall
cmpb
sub
dec
xchg
pop
sub
fstpl
push
inc
push
or
mov
incl
js
pop
adc
jg
sbb
sbb
jb
leave
jge
dec
out
fwait
pop
jle
jle
cmp
cmc
sbb
ret
dec
js
mov
sub
inc
addr16
and
sbb
sub
pop
shr
xor
ret
push
imul
lcall
cmp
jmp
scas
rcll
mov
aas
jo
mov
adc
cmp
rorb
xchg
cwtl
mov
fistpll
leave
push
dec
pop
jne
sahf
out
xor
rcrb
push
daa
js
inc
movsb
pop
adc
dec
cmp
clc
cmp
mov
sbb
xchg
cwtl
xor
mov
sub
sub
mov
into
or
lods
mov
mov
clc
mov
pop
into
dec
fildll
lcall
push
fnstsw
loope
ljmp
sub
and
dec
clc
xchg
dec
fldt
mov
jle
mov
and
or
fmuls
test
inc
sti
mov
mov
dec
sar
mov
pop
rcr
mov
mov
into
adc
xor
insl
es
mov
test
aas
rclb
sbb
pop
sbbl
dec
lret
pop
pop
ljmp
push
int3
mov
xchg
pop
and
icebp
xor
xor
mov
repz
rcrb
or
mov
adc
mov
out
and
inc
data16
mov
in
shll
add
jle
dec
mov
js
shlb
aaa
inc
lret
mov
enter
dec
out
xchg
lcall
ss
rolb
adc
pop
call
jmp
push
xor
repnz
push
inc
sub
push
lods
pusha
jp
adc
sarl
cwtl
or
push
xchg
cld
stos
shlb
add
out
dec
sahf
push
push
jecxz
push
xchg
outsl
sbb
sbb
jbe
push
sbb
insb
into
jecxz
cmp
stc
inc
push
mov
insb
dec
push
addr16
mov
sti
sbb
add
mov
in
out
into
jge
outsb
lret
cmp
xor
insl
fadd
adc
lods
cmp
sbb
inc
dec
cmp
sbb
rolb
push
dec
imul
jb
stos
dec
cmp
outsl
in
mov
pop
mov
and
mov
mov
inc
repz
imul
mov
ds
roll
jns
mov
adc
push
mov
icebp
divb
int3
dec
into
dec
in
sbb
adc
nop
add
mov
stc
sub
mov
es
and
cmp
in
sub
mov
and
daa
lahf
dec
insl
push
aam
out
sub
mov
cmp
adc
sub
imul
push
mov
rolb
xchg
jecxz
or
stc
dec
push
stc
xlat
jae
aas
sbb
dec
dec
mov
daa
test
add
aam
bswap
adc
xchg
leave
call
clc
cltd
or
dec
sub
addr16
aad
outsb
mov
jo
sbb
mov
pushf
xchg
xchg
xchg
jbe
adc
sbb
xor
xchg
jp
andb
xor
cmp
imul
mov
enter
and
movsb
sbb
fdivrs
cmpsb
adc
loop
out
dec
and
pop
push
sti
adc
dec
lret
gs
adc
mov
and
nop
add
xor
xchg
ret
xchg
xchg
add
sbb
test
pop
stos
adc
sbb
div
pop
lret
mov
push
mov
mov
cmp
cltd
or
stos
dec
leave
inc
rcl
aad
cli
sub
adc
mov
cwtl
aam
fnstcw
cmp
mov
sub
adc
data16
dec
adc
aad
or
shrb
pop
fmulp
rcrb
popa
fidivrs
inc
cmp
mov
sbb
imul
cmp
cmp
insb
out
or
adc
aas
jae
sub
inc
jo
and
outsl
sub
inc
jmp
cmpsb
movsb
jge
dec
dec
mov
adc
mov
jno
jmp
jmp
jno
jb
push
inc
sbb
dec
mov
cmp
cmp
outsl
aad
lret
xor
jmp
sub
roll
sbb
xor
dec
dec
push
dec
mov
jl
cltd
sti
and
imul
mov
cmpsb
ret
andb
adcb
insb
mov
mov
jb
push
and
mov
pusha
shll
lret
dec
mov
sbb
mov
popf
repz
jge
ja
mov
lahf
jb
mov
jb
mov
jb
mov
js
cmp
leave
jmp
add
dec
shl
mov
dec
inc
dec
and
mov
fwait
inc
sahf
sbb
inc
sbb
sbb
cltd
jae
push
xchg
inc
mov
inc
inc
rcrb
loop
push
stc
inc
loope
repz
fnstcw
sbb
aad
sbb
fisttpl
mov
xor
cmp
ret
imul
sti
pop
mov
sti
jae
inc
pushw
aaa
sahf
pop
lods
scas
jns
jb
addl
or
mov
jne
sub
arpl
enter
insb
adc
or
dec
mov
ret
jb
lret
aam
add
dec
ja
mov
lahf
jb
mov
jb
mov
jb
mov
jb
inc
repnz
lret
sbb
imul
inc
jg
test
adc
arpl
jge
das
sub
out
sbb
aam
mov
into
jmp
stos
or
lret
push
sbb
dec
shl
lret
or
out
jae
sbb
xchg
mov
sub
mov
adc
inc
inc
in
mov
push
push
roll
es
or
jo
and
xor
adc
test
jg
push
movsb
cwtl
jb
out
dec
xchg
insl
pusha
and
xor
rcrl
or
pop
adc
sub
cld
out
jle
std
sahf
adcl
xchg
inc
or
js
pcmpeqb
in
in
mov
in
adc
ljmp
mov
icebp
movsb
ret
adc
dec
jmp
aaa
or
iret
int3
dec
jne
mov
dec
push
dec
divb
in
mov
xchg
sbb
call
repz
cwtl
imul
jg
addb
and
mov
push
mov
jmp
loop
jecxz
int3
rcrb
scas
adc
in
rorb
lret
ds
loope
xchg
adc
adc
lret
je
mov
xor
gs
adc
push
cltd
jmp
xor
push
mov
in
pushl
idiv
lahf
aad
jle
adc
gs
jnp
insb
cwtl
stos
imul
or
loop
in
int3
dec
adc
clc
les
cmp
add
mov
cmp
pop
pop
insl
fsub
pop
call
mov
xor
test
sahf
cs
mov
mov
push
lret
fmuls
enter
push
sbb
stos
dec
add
not
int3
rcl
dec
and
mov
jecxz
lods
xor
aad
sub
push
scas
pop
inc
cmp
lret
push
cmc
xor
insb
mov
in
sbb
mov
loop
idivb
rorl
ss
sub
lret
lods
aam
imul
mov
in
mov
fcoml
inc
sub
leave
out
pop
out
sub
inc
subl
adc
xor
testb
lock
subb
add
and
mov
push
push
cmpsb
dec
cld
sbb
imul
mov
or
jecxz
int
mov
repz
rorb
and
mov
ss
pop
or
jb
inc
das
add
xor
ret
jle
popa
test
adc
into
xorb
jecxz
dec
rolb
push
mov
cwtl
dec
xor
popa
andb
int
pop
pop
push
mov
jo,pt
push
xchg
xchg
mov
push
mov
and
sahf
xor
mov
std
mov
sbb
push
cmpsb
inc
loope
stos
lds
cmp
iret
inc
loope
iret
ret
insb
in
dec
cmp
sub
loopne
inc
or
ds
or
and
xor
sti
push
sbb
subb
add
inc
pop
xor
mov
push
dec
inc
js,pt
fnstenv
mov
pop
sbb
xchg
push
mov
jbe
test
int
sub
push
pop
dec
add
icebp
sbb
into
addr16
rclb
int
and
xchg
bound
adc
mov
jp
inc
jnp
mov
push
sbb
subl
xchg
mov
sahf
cmp
rol
ss
stos
push
cmp
sbb
pop
aam
jno
sbbl
push
or
adc
inc
cmpsb
inc
sbb
jp
or
pop
imul
xor
sahf
push
iret
rclb
pop
jno
adc
pop
mov
push
pop
loop
mov
inc
inc
push
jb
pop
lahf
jbe
adc
ret
arpl
sarl
sbb
loop
inc
cmp
loopne
sarb
pop
push
aas
push
sti
jmp
pop
lea
stos
lea
out
cli
mov
test
scas
cmp
push
mov
sbb
or
sahf
jp
jne
repnz
add
ja
push
ds
es
sub
movl
aam
mov
je
loopne
adc
xlat
outsl
sbbl
dec
xchg
enter
inc
xlat
xchg
arpl
mov
es
loopne
inc
xchg
inc
jmp
adc
mov
xchg
mov
inc
aam
or
sbb
inc
fsubrs
loopne
jg
mov
fidivl
adc
fbld
lea
xchg
test
jo
sub
das
lods
mov
shlb
mov
lea
inc
les
push
iret
sbb
xchg
jle
sbb
paddb
loopne
shl
dec
push
or
sbb
add
adc
xchg
cmovs
xchg
dec
or
mov
pop
cmp
jp
cmpsb
cmp
adcl
mov
sub
mov
push
int3
lret
mov
adc
push
sbb
inc
pop
mov
cmp
outsl
adc
mov
dec
lret
aaa
inc
inc
rorb
push
xor
stc
jnp
pushf
xchg
inc
test
cmp
es
inc
popf
lods
push
adc
xchg
jns
dec
push
or
push
testb
mov
fimuls
mov
push
xchg
lahf
out
test
hlt
add
mov
mov
or
xor
push
inc
cmp
pop
inc
enter
mov
inc
mov
inc
and
sbb
nop
cli
jb
mul
inc
jmp
fldl
mov
and
into
cmp
scas
dec
int3
jmp
testl
iret
mov
jp
sub
popf
push
inc
mov
lds
js
mov
sarb
pop
sub
mov
andb
int3
cmpsb
js
ss
test
lods
push
iret
pushf
aaa
jne
push
cmp
cmp
pop
xchg
scas
push
nop
cld
jb
sahf
dec
negl
adc
lret
adc
cmp
mov
cld
inc
sbb
in
xor
mov
test
fs
sbb
push
ret
pop
xchg
jo
aaa
scas
shlb
push
push
in
cmp
aad
js
lcall
jae
ds
push
cs
int3
sti
jno
push
testb
xor
dec
je
sub
jb
push
cmp
cltd
mov
sarl
lock
push
mov
test
jne
cld
lods
call
clc
insb
jb
cli
dec
jb
dec
inc
rolb
sbb
mov
cmp
loopne
cmp
int3
xchg
orps
dec
sub
inc
mov
sub
mov
sbb
lret
js
hlt
add
pop
imul
jns
ss
mov
add
in
mov
out
or
dec
lock
js
inc
mov
pop
lahf
leave
or
jp
mov
lret
mov
xchg
enter
pop
mov
inc
loopne
push
sbb
cmp
stos
ret
and
lret
out
cmp
cltd
mov
cli
mov
out
fucomip
and
push
lock
pop
and
inc
push
lods
sbb
and
xor
cmc
mov
enter
adc
xor
cwtl
add
rclb
imul
mov
in
mov
adc
add
jge
sbb
sub
jae
push
mov
push
jns
adc
pop
in
leave
push
mov
sbbb
jg
jle
mov
sbb
cmp
pop
jge
loopne
xlat
dec
pop
or
dec
pop
push
stos
sbb
and
rorb
xor
sub
adc
push
rcl
jge
or
xchg
xor
dec
repnz
mov
inc
cld
dec
xor
pop
mov
add
cwtl
push
push
mov
mov
lods
cld
repnz
mov
in
bound
xor
xchg
cmp
dec
mov
dec
mov
xor
dec
in
jecxz
xor
jecxz
jb
rolb
xchg
jge
xchg
and
mov
push
push
pop
mov
jbe
mov
mov
mov
mov
push
dec
add
int3
mov
sbb
inc
inc
dec
sbb
push
adc
mov
lcall
inc
xor
or
ror
dec
xchg
inc
and
imul
jne
push
jp
sbb
mov
repnz
movsb
mov
imul
dec
mov
ror
jmp
dec
dec
leave
sarb
ss
add
lahf
js
hlt
std
test
pusha
mov
add
clc
es
mov
mov
cmp
jecxz
neg
push
enter
mov
and
jb
inc
inc
nop
dec
pusha
xlat
mov
cmpb
ljmp
jmp
mov
ss
adc
movsb
xor
sti
jmp
jmp
dec
mov
mov
cli
and
mov
and
repz
dec
dec
lds
in
scas
call
cmp
adc
in
rol
mov
dec
pop
arpl
push
lret
movsb
and
lret
and
sbb
inc
and
cmpsl
faddl
adc
rclb
daa
cli
mov
jle
push
pop
pusha
cmp
jp
mov
adc
push
scas
xchg
lahf
jae
jecxz
pop
mov
or
scas
xchg
xchg
sti
jb
mov
jle
jmp
bound
push
inc
inc
inc
rcl
fcmovb
mov
push
mov
mov
mov
mov
lds
popf
mov
xlat
mov
pop
out
xor
mov
insb
test
mov
jle
jle
ss
push
inc
int
js
pop
ss
add
mov
add
fldl
add
fcomps
mov
inc
inc
fstps
call
inc
cli
cmc
repz
sub
and
push
sbb
pushf
and
gs
jle
mov
mov
das
xor
pop
call
pop
mov
mov
ds
sbb
sub
test
sbb
sub
adc
stc
fistpl
jns
daa
pushf
enter
xchg
loopne
dec
inc
in
or
inc
test
leave
iret
out
push
adcl
imul
les
inc
insb
jl
ret
out
xchg
jmp
push
mov
insb
stos
fimuls
and
test
add
dec
jne
lods
push
mov
subb
pop
and
and
test
jnp
popf
xchg
stos
cmpsb
jo
ljmp
in
in
mov
int3
sbb
mov
shl
shll
ja
mov
cmpb
inc
jle
or
ds
rcrb
mov
sbb
push
push
pop
jmp
xor
aaa
and
sub
call
jl,pt
rcrb
sub
jp
mov
xor
mov
les
mov
das
push
ret
adc
sbb
into
fdivrl
mov
and
push
lds
jecxz
jbe
sarb
xor
jl
dec
mov
dec
out
inc
rcrb
sti
jmp
sbbb
push
popa
sahf
xchg
into
sub
rorb
xchg
sub
cltd
leave
jb
dec
faddl
std
addr16
mov
dec
jae
test
ss
adc
leave
cmpsb
pop
das
dec
xor
pop
dec
and
cwtl
jl
in
aaa
mov
in
ja
xor
dec
insb
lds
jecxz
loop
mov
mov
jns
dec
fstpl
lea
sbb
push
add
xchg
cmpsb
xor
aas
rcrl
sbb
es
fildl
pop
pop
xchg
jns
inc
jmp
stos
cs
and
or
pop
sbb
sbb
xchg
mov
xor
icebp
add
pop
xchg
movsl
xor
or
fcompl
repz
inc
int3
mov
add
fs
push
cld
jle
loop
addr16
shrb
sbb
psrlq
inc
dec
sarl
xor
in
repz
popa
lcall
aam
outsl
push
or
aas
xor
xor
mov
pushf
xor
lods
sbb
add
mov
pop
or
cld
push
jmp
mov
xor
and
cmc
inc
mov
jbe
push
sbb
sahf
aaa
lret
xor
je
mov
or
out
jg
dec
roll
inc
jo
cmp
jp
shlb
or
inc
cmpsl
aam
incb
lcall
dec
imul
adc
aad
aam
mov
mov
cmpsb
clc
push
in
cmp
adc
adc
sbb
xchg
mov
pop
push
in
push
add
fst
cmp
scas
repz
into
jne
jle
push
mov
lods
inc
mov
inc
gs
je
sarl
cltd
fwait
dec
inc
xchg
mov
daa
cwtl
push
cmc
int3
shr
iret
insb
jp
mov
and
mov
loope
fldt
mov
mov
xchg
cmp
stos
mov
sub
ss
jp
mov
xchg
popa
mov
in
cld
outsl
sbb
addr16
sahf
fildl
adc
mov
into
jg
enter
mov
sbb
dec
popf
push
dec
lea
outsl
or
popf
dec
inc
movsl
mov
cmpsb
inc
pushf
jmp
sub
iret
xor
stos
aas
sub
mov
mov
cmpsb
les
mov
ss
xor
xor
inc
repz
mov
mov
cli
xor
imul
shlb
xchg
fwait
fwait
dec
sbb
push
fcoml
call
or
jp
lahf
mov
inc
lds
mov
dec
xor
xchg
or
loope
xchg
icebp
push
cli
xor
mov
mov
mov
into
insb
test
lret
push
icebp
push
insl
sbb
ss
je
shlb
mov
je
jbe
cmp
hlt
mov
js
cmp
addr16
jbe
xchg
gs
inc
push
push
in
ss
stos
jb
lods
fwait
in
mov
and
je
cmp
test
xchg
dec
pop
mov
fisttps
mov
sbb
inc
or
mov
sbb
imul
lret
cmp
xchg
push
lahf
xor
mov
xor
sbb
pop
jle
mov
lret
jnp
mov
mov
mov
jp
and
je
in
xor
cli
clc
mov
push
clc
cwtl
loope
sbb
repnz
inc
xchg
mov
adc
mov
aaa
mov
mov
and
sahf
sti
scas
mov
repz
movsb
dec
dec
dec
xlat
add
div
cmp
cmp
xor
dec
lcall
push
lcall
int3
inc
lcall
mull
outsb
dec
inc
shrb
pop
inc
mov
jno
sub
pushf
xchg
jo
jecxz
or
scas
sbb
mov
sub
pop
js
push
lret
inc
push
adc
lcall
cwtl
into
lods
popa
es
xchg
idivl
js
jne
js
fcom
mov
pop
or
jmp
pop
fs
enter
mov
dec
pusha
xor
mov
bound
test
push
inc
inc
adc
stc
and
xor
mov
sub
sbb
pop
cmp
mov
dec
stos
xchg
pop
push
mov
rorb
inc
push
pop
stos
test
inc
mov
sbb
cmc
js
and
or
push
or
push
jo
pop
or
jle
xchg
mov
rorb
dec
mov
xchg
daa
sbb
dec
adc
push
test
daa
sub
je
dec
inc
mov
jb
dec
xchg
inc
push
and
dec
mov
insl
or
pop
jno
cmp
fsubs
stos
aaa
inc
jg
int3
iret
xor
fisubs
jbe
ss
iret
mov
jno
sti
mov
and
cmp
ja
cmp
dec
push
dec
mov
jnp
mov
inc
mov
sbb
cmp
add
stos
mov
mov
pop
dec
xorb
add
ja
cmp
shrb
lcall
insb
mov
aas
ret
or
mov
push
fnstsw
test
and
bound
sbb
mov
and
rclb
aaa
pop
dec
test
mov
movsb
in
xor
jbe
dec
sti
jp
sahf
out
js
mov
scas
imul
xor
mov
mov
mov
mov
mov
cmp
int
inc
mov
pop
mov
bound
jle
mov
xchg
mov
inc
adc
or
dec
mov
mov
shll
pushf
add
imul
dec
mov
mov
push
pusha
sub
cmp
mov
icebp
arpl
imul
jo
scas
out
cltd
sahf
xor
inc
push
fs
mov
cwtl
bswap
lods
push
jl
mov
arpl
rclb
js
js
jl
enter
js
add
jb
rolb
sub
adc
or
out
dec
pop
pusha
sahf
mov
popf
sti
fsubl
fs
jbe
mov
sbb
mov
aas
cmp
mov
mov
jge
mov
ret
leave
movsb
loopne
lds
or
add
fadd
push
in
pop
sbb
jg
adc
sub
sub
xor
stc
in
inc
pop
adcb
pop
dec
xchg
aam
push
pushw
lea
popa
inc
cmpsb
je
in
mov
andl
cmc
ljmp
insb
mov
mov
mov
rorl
ljmp
sub
mov
jo
js
inc
rcll
jns
cmpsl
loopne
lcall
cmpl
leave
stos
push
mov
push
jl
fsub
lcall
or
into
and
xor
mov
aam
out
movsl
mov
xchg
xlat
and
scas
fcoml
js
sbb
les
sti
cmp
xor
les
pushf
cmp
ljmp
sub
les
mov
repz
add
sbb
xor
xor
add
xchg
mov
jbe
in
sbb
rcll
jecxz
mov
cmp
fucomi
ljmp
xchg
cmp
adc
ja
mov
std
dec
adc
inc
cwtl
sbb
in
lret
scas
aam
and
xor
cmp
lods
push
in
dec
pop
fidivl
sbb
gs
btr
push
rorb
mov
ja
adc
jecxz
shlb
mov
push
js
pop
aas
or
fisubrl
and
mov
jo
mov
loopne
sub
or
push
pop
mov
mov
fs
push
sbb
insl
push
popf
mov
ljmp
movsl
rcrb
sbb
jg
jl
out
cmp
shlb
push
fimull
xor
mov
sbb
shlb
lahf
mov
pop
mov
dec
outsl
sbb
mov
inc
mov
cmpl
mov
in
dec
cmpsb
xchg
loope
or
ret
add
pushf
and
jg
sbb
shl
jecxz
sub
fbld
jo
dec
and
std
fcomps
repnz
icebp
sub
sti
lret
lahf
or
sbb
ror
mov
add
mov
mov
enter
jae
je
mov
fidivrs
fstps
and
inc
jnp
dec
hlt
and
sub
rcl
lcall
xor
xchg
fdivl
lret
mov
push
sti
js
push
rclb
adc
stc
pop
sub
nop
cmpb
stc
sub
sbb
pushf
insl
rclb
xor
jo
lds
cmpb
and
rorb
push
sti
rolb
xchg
lock
das
and
cmp
ss
movsb
mov
sahf
jo
leave
or
push
fdivs
xor
ret
shrb
loope
sub
sarl
pop
pop
sub
inc
and
xor
fcmovnu
xor
loop
test
adcl
lahf
popa
jnp
inc
mov
pop
cmp
fsubl
or
jae
mov
inc
xor
mov
jmp
sub
xor
sbbb
dec
inc
loope
sub
cmp
rclb
insb
cmpsl
fcompl
mov
movsl
xor
jno
mov
and
cmpsl
xchg
jb
mov
mov
mov
cmp
or
aam
cmp
push
and
push
sbb
inc
dec
repnz
inc
and
pop
sub
cmp
jecxz
fwait
mov
sub
or
push
repnz
xlat
sbb
xor
xchg
insl
stos
scas
push
mov
mov
or
lock
push
fcmovu
into
sbb
jbe
popf
rcrb
jp
ds
push
xor
iret
sub
push
push
cld
lahf
push
mov
push
cs
or
mov
sub
add
arpl
mov
stos
les
es
adc
mov
xor
ds
or
lcall
dec
jb
stos
cli
adc
lods
jo
in
and
idiv
or
mov
dec
in
pop
enter
pop
test
rcll
shlb
cmp
push
sti
out
stos
dec
push
loope
sbbb
gs
pushf
call
prefetchw
xchg
rclb
lret
sub
into
adc
and
jge
push
or
or
out
lods
out
jb
pusha
mov
aam
xchg
xchg
loope
daa
sbb
jmp
xchg
loope
xor
or
jg
or
aas
add
mov
lock
inc
push
jns
jo
js
mov
out
inc
cmp
xchg
xor
add
inc
jno
shlb
jbe
outsb
incb
xlat
mov
xchg
fcmovbe
pop
mov
sub
mov
jo
xor
sbb
ja
jbe,pt
push
xor
mov
inc
sbb
cltd
scas
jne
sbb
dec
fstp
push
je
jne
sar
jns
arpl
mov
sub
jbe
xor
cmp
cmp
push
inc
stos
jmp
fadds
adc
dec
fisttpll
pop
push
mov
int3
lret
dec
dec
aam
sbb
fwait
jge
dec
mov
scas
dec
fwait
push
xor
push
xchg
fcmovne
pop
imul
fs
or
add
call
cli
and
sbb
pushf
jmp
sbb
xchg
xor
xor
dec
or
sub
scas
lcall
rclb
mov
scas
jbe
dec
leave
mov
or
hlt
jp
loopne
mov
test
dec
in
arpl
movsb
or
push
dec
jb
cmp
mov
and
push
push
out
sbb
clc
cmp
xor
push
cmp
aam
dec
popf
or
push
jp
sub
push
scas
adc
or
rolb
mov
jmp
add
pop
xor
xchg
and
push
adc
and
jmp
dec
dec
out
or
test
cs
lcall
push
add
mov
dec
repz
out
pop
mov
in
dec
jmp
xor
shrb
dec
les
mov
pop
idivl
out
add
fwait
inc
push
je
cmpsb
mov
push
jle
adc
cmp
cld
push
dec
lea
test
xor
lods
or
jle
mov
lret
xor
adc
adcl
call
lret
sbb
mov
dec
sbb
pop
cwtl
sbb
fwait
jo
xor
pop
xchg
idivb
mov
xor
mov
les
sbb
xor
mov
or
xchg
push
xor
js
aam
cli
out
adc
cld
push
add
lods
rclb
xor
sub
jne
xchg
ret
mov
jb
rcr
push
ficoms
jg
dec
insb
in
flds
jecxz
call
aam
push
jp
xor
dec
nop
adc
cmp
mov
jnp
mov
and
cmpsb
ss
xor
pushf
sahf
das
jecxz
repnz
or
push
pop
das
dec
nop
jb
or
push
addr16
test
push
and
jo
dec
loop
sbb
pop
mov
jle
sbb
dec
fisubl
enter
adc
lock
sub
inc
out
fimuls
jno
bound
jmp
test
inc
insb
iret
mov
pop
fdivl
pop
dec
clc
out
adc
fs
mov
mov
fisttpll
aad
cmp
xchg
adc
and
mov
mov
ret
mov
test
fidivl
imul
push
mov
mov
mov
and
mov
push
sub
mov
lock
shll
cmp
stos
dec
lret
push
sub
fisubl
and
and
fnstcw
inc
jg
mov
out
adc
add
lods
rcl
pop
xchg
addl
inc
or
insl
sbb
xchg
or
je
push
int3
into
call
adc
pop
aam
adc
xchg
arpl
or
ds
cltd
ret
push
insb
mov
inc
enter
add
dec
sbb
push
into
andl
jecxz
out
lret
xor
daa
pop
pushf
sbb
mov
dec
mov
fcomps
loope
lods
dec
xchg
inc
les
dec
ljmp
and
lahf
sti
push
xor
paddw
mov
xchg
or
enter
fyl2xp1
push
or
lret
inc
int
or
or
call
pop
das
iret
mov
lods
scas
cmpsb
int3
imull
fidivrl
mov
cs
mov
mov
jo
dec
ja
inc
aas
or
insl
add
mull
xor
sub
mov
inc
push
data16
arpl
sub
or
aam
mov
mov
pop
ds
nop
jle,pt
jmp
jl
push
push
int3
jg
iret
dec
cli
xchg
mov
ss
inc
dec
mov
lret
pusha
frstor
scas
pushf
sarb
xor
lcall
xor
cmp
adc
dec
mov
adc
mov
dec
faddp
push
or
dec
in
outsb
ja
fnstcw
call
lahf
subb
pop
cmpsb
adc
push
sub
cmp
ss
xor
aam
sbb
lods
loope
mov
xorl
jle
cmp
or
jns
aam
cmp
dec
pusha
scas
imul
popa
imul
in
loop
fmull
and
gs
cmpsb
jno
cmp
push
repz
mov
jo
lret
imul
pushf
rorb
movsb
add
or
stos
dec
mov
out
xlat
push
mov
sti
add
jecxz
or
sbb
mov
push
nop
movntq
rep
fildl
sbb
inc
dec
sbb
xor
repz
mov
in
hlt
sub
clc
aad
ret
dec
or
cltd
clc
mov
aad
xchg
jg
jnp
lret
js
adc
lret
xchg
out
xlat
test
popf
outsl
sub
inc
les
sbb
dec
mov
jmp
mov
out
ljmp
pushl
aad
out
adc
cmp
adcl
cmp
sub
pop
cmp
test
push
push
push
sahf
mov
aad
sarl
pop
xchg
lcall
and
dec
gs
test
mov
dec
enter
or
push
fsub
or
outsb
jae
inc
dec
dec
mov
mov
xchg
sub
xlat
mov
dec
enter
sahf
sbb
add
pop
mov
pop
mov
cmp
xor
mov
xchg
pushl
mov
loopne
cmp
jo
shlb
mov
sub
pop
pushf
mov
push
jbe
addr16
jle
out
std
lret
les
js
pop
in
cmp
push
insb
in
int
inc
ficoml
add
xor
cmp
mulb
xor
xlat
ss
loopne
cmp
push
xchg
aaa
or
cmp
cmp
dec
mov
movsb
inc
xchg
ljmp
mov
in
add
bound
sub
outsl
mov
enter
or
pop
fcmovne
fs
unpcklps
push
pop
xchg
cs
daa
push
repz
arpl
arpl
scas
aam
jns
cmp
fs
push
adc
jne
in
imul
fldl
jo
mov
sub
insb
arpl
lret
sbb
xor
jg
aas
mov
sub
adc
pop
out
lret
rorb
jg
mov
dec
jg
pop
cmp
into
mov
lret
cmp
dec
ljmp
push
or
push
lahf
jmp
pop
in
in
fiadds
mov
imul
xchg
sbb
es
xor
push
inc
imul
inc
or
repnz
jl
out
mov
xor
mov
mov
lret
dec
fimuls
dec
jl
rolb
jbe
mov
sub
scas
in
adcb
push
mov
rcrl
or
xor
aas
insl
shlb
cmp
cmp
pop
add
lods
mov
nop
sbb
clc
xor
cmp
or
pop
leave
mov
pop
jbe
mov
sbb
idivb
mov
pop
push
dec
xchg
jmp
adc
and
stos
dec
dec
fdivrs
les
testl
inc
mov
ds
rolb
mov
out
dec
fstpt
jle
repnz
pushl
jmp
js
sbb
loopne
dec
out
pop
fistpll
dec
jmp
lcall
loop
add
lretw
out
or
cs
loope
mov
lock
cmpsl
sahf
inc
push
sbb
mov
nop
jbe
pop
int3
xchg
or
pop
add
daa
mov
cli
ret
sub
and
cwtl
jl
js
or
mov
cmp
or
lods
cmpsb
decl
sbb
clc
sub
xor
insb
mov
mov
mov
pop
clc
push
adc
pop
jmp
out
sbb
shlb
xchg
mov
mov
mov
push
pop
mov
dec
shl
aas
lods
push
inc
sbb
jmp
mov
dec
mov
pushl
xchg
mov
mov
dec
scas
cli
jne
aaa
push
rclb
leave
mov
shlb
or
cli
outsl
aam
lods
xor
mov
or
dec
inc
adc
inc
pop
dec
mov
xor
call
jecxz
xor
push
lret
bound
mov
xor
sti
movsb
pusha
cmp
enter
loopne
xorl
cmp
iret
imul
push
xchg
je
dec
aas
jb
es
clc
and
js
xor
inc
shlb
dec
cld
xorl
fstpt
jns
mov
test
maxps
roll
outsl
jl
add
rolb
adc
xchg
xchg
jl
xor
fisttpl
mov
push
mov
cmc
cmpsb
push
pop
mov
sub
sbb
int
sbb
mov
jp
lret
mov
or
dec
and
insb
jae
mov
loop
shlb
xchg
idivl
fimull
lea
add
dec
sub
sub
dec
or
push
adc
cld
inc
xor
xor
mov
popa
imul
mov
popa
enter
mov
push
movsb
out
les
ss
xchg
xchg
jae
lret
mov
sbb
jp
or
push
out
mov
filds
out
insb
sub
ficompl
in
jecxz
leave
pop
test
sbb
lahf
rcrb
rol
dec
lcall
push
xor
lret
jecxz
js
dec
sbb
stos
orb
xor
adc
mov
mov
pusha
pop
mov
out
daa
sbb
loope
or
jecxz
daa
adc
sti
inc
adc
mov
scas
inc
add
pop
mov
lea
mov
jbe
xor
cmp
mov
arpl
mov
lret
lock
pusha
mov
push
and
push
iret
jmp
jno
out
xchg
por
and
aas
jl
adc
xor
mov
inc
xor
out
xchg
enter
cli
sub
adc
cmp
sub
rolb
test
pop
popf
cmp
outsl
ljmp
ret
jne
out
pop
pop
jp
gs
out
fistl
inc
subl
test
clc
je
mov
outsb
int
jp
sub
jle
inc
and
mov
std
dec
mov
fs
pusha
lock
push
inc
dec
mov
rol
and
ret
mov
jle
repz
je
mov
stos
mov
jbe
xor
jg
dec
int3
mov
mov
lds
xchg
add
lret
jnp
jae
aas
pop
push
js
mov
mov
adc
cmpl
aad
inc
cmp
sub
cld
pop
jo
rclb
inc
jne
and
sub
je
ficoml
shl
mov
cmp
dec
dec
push
or
mov
sbb
mov
jae
and
inc
push
cs
mov
enter
sbbb
adc
pop
shlb
dec
inc
push
ss
lret
mov
into
or
loopne
in
stos
call
movsl
and
jae
or
sub
les
adc
push
lea
aad
loope
mov
sub
das
fsubrs
lods
test
inc
pop
and
imull
movsl
or
xchg
xchg
jns
add
rclb
jae
lcall
inc
xlat
or
push
loopne
pusha
dec
sti
aam
icebp
mov
adc
jo
fwait
mov
insl
mov
jmp
in
pushf
push
add
movsl
cltd
cvttps2pi
cmpsl
xchg
rcr
dec
xor
jo
and
enter
or
fldt
movsl
or
ljmp
xlat
jl
or
add
lods
add
mov
js
push
cli
adc
cs
mov
adc
das
and
xchg
sub
mov
jnp
mov
lock
and
test
ljmp
inc
push
mov
inc
jb
inc
pop
xor
jecxz
fwait
jp
xchg
cmpsb
fcomps
inc
mov
pop
or
sahf
cmc
outsb
lahf
inc
popa
xor
xor
dec
cmc
sbb
dec
push
aam
sub
stos
mov
mov
fmull
fisubrs
jb
push
mov
arpl
inc
push
xor
lea
bound
jno
jo
push
das
arpl
xchg
imul
xchg
stos
or
lcall
mov
xchg
sub
popa
fxch
clc
sub
xchg
sub
jbe
idivl
sub
inc
popa
mov
shlb
mov
lea
xchg
cmp
xchg
sbb
jle
out
bnd
mov
cmp
push
push
mov
in
push
fnstenv
xchg
stos
dec
pop
xor
in
ds
iret
xor
arpl
sbb
into
jecxz
push
out
and
adc
add
jl
cmp
in
mov
stc
popf
sbb
cs
pop
push
jne
sbb
dec
pop
adc
out
cmp
fnsave
dec
jb
std
inc
mov
lods
aaa
ljmp
int
push
sbb
dec
ljmp
lea
jg
imul
mov
sub
inc
ret
aaa
jns
cmp
stos
stc
fiaddl
fisttpl
aaa
ljmp
aaa
ljmp
lret
sbb
hlt
ljmp
push
cwtl
cmp
push
xor
inc
repnz
jle
sub
jmp
sbb
lret
adc
stos
inc
and
mov
mov
pop
mov
adcl
push
andb
push
xor
insb
xor
dec
mov
outsb
xor
aam
fwait
leave
nop
stos
push
jp
lock
sub
pop
out
inc
xor
fnstsw
sbb
adc
repnz
and
sub
repz
and
add
in
cmp
cmp
and
aaa
sbb
cmp
mov
fsub
and
hlt
ljmp
inc
fwait
push
shlb
cmp
dec
inc
dec
dec
push
xor
int
jp
mov
and
loopne
out
lcall
sti
ret
push
ficoms
mov
xor
fldenv
pop
add
adc
sub
mov
jge
push
or
cmp
dec
adc
push
sub
push
data16
pop
frstor
cltd
mov
inc
jne
jg
dec
insb
lds
es
iret
dec
lock
mov
and
dec
dec
xor
mov
push
sub
cmc
rcrl
in
mov
push
adc
or
stos
adc
lcall
ljmp
pushf
push
aas
cwtl
ret
cmp
ret
mov
pushf
and
outsb
cmp
xchg
bound
clc
push
jo
xchg
mov
fldcw
sbb
jne
and
popa
push
into
fnop
or
mov
cmp
rorb
shrb
sbb
cmc
pop
pop
or
ss
dec
pop
aad
mov
popa
mov
movsb
hlt
cmp
dec
lret
inc
lcall
out
shrb
xor
dec
lret
fadd
popa
mov
cmp
cvtpi2ps
push
sbb
loopne
or
push
sbb
jae
dec
adc
cmp
enter
dec
push
and
ret
mov
push
mov
xchg
push
in
enter
lret
rclb
sahf
je
and
fs
cwtl
rcrb
xchg
negb
cmp
and
loop,pt
sub
jb
lret
dec
xchg
out
jo
imul
dec
jo
fs
jmp
adc
das
pop
xlat
dec
xor
xor
ds
mov
in
adcb
xor
in
mov
cmp
or
mov
fstl
xor
inc
push
pop
sahf
pop
mov
ret
jne
push
dec
xor
ljmp
dec
pop
js
sbb
dec
addl
nop
inc
lret
rcrl
inc
and
dec
lahf
aad
xchg
push
int
sub
ret
lret
loop
xor
add
pop
dec
movsl
cmp
pop
aam
cmp
jp
out
leave
insb
pop
outsl
fcoml
stos
int3
pop
fidivs
iret
add
jo
or
out
les
ret
mov
lods
xchg
or
dec
fwait
push
in
dec
dec
test
push
mov
pusha
mov
cmp
in
mov
cmp
das
testl
jbe
or
and
xchg
pop
sarb
inc
jne
mov
push
cmp
arpl
sbb
push
pop
not
xchg
mov
push
xchg
sub
pop
mov
jae
jno
xorl
repnz
inc
push
sahf
pop
mov
and
insl
xchg
repnz
push
fists
cmpsb
shrl
ss
sub
inc
add
mov
xchg
jp
cmpsb
pop
loope
dec
les
add
rcl
dec
jmp
hlt
mov
in
fiaddl
pop
int3
frstor
jge
jmp
bound
xor
dec
mov
dec
inc
pop
iret
mov
xor
lods
add
cs
aaa
mov
in
stos
xchg
inc
sbb
sbb
icebp
pop
push
xchg
inc
dec
aam
out
dec
cmp
mov
stos
call
shrl
cld
mov
push
pushf
insb
vmovmskps
ret
pop
sbb
repz
bound
push
inc
data16
inc
out
push
cwtl
or
fdivr
push
jle,pn
fwait
pop
lcall
pop
cmp
nop
into
jb
std
rorl
std
pop
dec
sbb
pop
mov
dec
aam
mov
cmp
inc
adc
mov
cmc
or
dec
lock
dec
mov
imul
jmp
test
es
leave
in
cmp
jo
cmp
dec
adc
adc
test
xlat
push
mov
scas
mov
mov
or
cwtl
rcrl
xchg
mov
scas
lods
push
xchg
outsl
or
std
shlb
or
aam
in
repz
pop
mov
adc
dec
jp
dec
and
jl
or
daa
xchg
jg
out
popf
fdivs
lret
xorb
xorl
hlt
mov
pop
inc
mov
adc
adc
insb
xlat
adc
pop
aas
rol
mov
int
mov
push
sbb
jne
sub
add
lret
dec
ss
bound
dec
xor
movb
shl
out
sbb
rclb
lret
adc
inc
mov
outsl
out
adc
dec
inc
movsb
js
adc
lahf
dec
sti
shrb
dec
cmpsb
mov
outsl
lret
movsl
movsb
daa
lods
fsubp
fsubp
aam
lcall
lock
jmp
inc
sbb
sbb
and
jle
sbb
test
into
pushf
movsb
sbb
jo
pusha
xlat
sub
es
sub
test
int3
adc
mov
icebp
xorl
adc
sub
inc
adc
popa
cltd
inc
jnp
in
cmpsl
inc
repz
cmpsl
lock
decb
stc
fildll
outsb
mov
cwtl
js
leave
xlat
fs
adc
pop
je
push
and
push
test
jge
sub
test
sbb
xor
and
mov
inc
dec
aad
test
and
inc
sbb
stc
div
inc
or
cs
sbb
mov
std
jb
ljmp
cs
loope
dec
sbb
sbb
pop
push
xchg
mov
in
pop
push
testl
call
in
inc
aad
jp
loopne
xor
adc
inc
in
dec
mov
dec
xchg
dec
ljmp
decl
jmp
sbb
lret
dec
sti
sbb
mov
iret
jp
sar
dec
dec
shll
lret
dec
mov
movb
mov
std
sbbb
pop
jnp
sbb
push
sub
out
sbb
add
jnp
mov
mov
add
dec
loop
xor
pushf
insl
mov
cld
jb
pop
inc
imul
mov
jae
fistl
jb
sbb
scas
repnz
ds
sti
mov
dec
cmp
inc
jmp
sbb
xchg
add
push
adc
sysenter
pusha
adc
dec
pushf
cwtl
xchg
inc
push
pushl
lods
xlat
mov
loop
dec
inc
cmpsb
mov
dec
nop
fistpl
push
pushf
xchg
rcl
or
mov
xor
pop
dec
cwtl
inc
loope
mov
fwait
jl
dec
mov
mov
int
dec
cmp
xor
add
xor
or
cmp
push
xchg
xor
sti
push
packsswb
lea
fists
sti
pop
pushf
or
js
cmpsb
lcall
dec
dec
fsub
mov
les
pop
iret
test
jo
or
sbb
push
xor
or
mov
mov
cld
pop
push
dec
mov
test
cmp
shlb
idiv
mov
sub
sbb
js
inc
xor
jge
sbb
jmp
fdivrl
orl
push
adc
lret
mov
sub
mov
mov
pop
and
shlb
mov
xchg
fs
mov
inc
mov
movsb
js
sbb
jns
adc
and
jnp
push
aas
inc
inc
or
sub
inc
mov
inc
orl
dec
pusha
jmp
mov
enter
je
xlat
out
jp
push
dec
cmp
lret
xor
and
mov
add
mov
mov
and
and
fistpl
jecxz
sbb
sub
popf
sub
and
push
ds
aad
shl
aas
loop
cli
cmp
dec
std
inc
adc
cld
out
xchg
mov
xchg
inc
inc
sub
or
mov
mov
nop
and
lret
mov
mov
aam
insb
leave
cs
jle
cmpsl
call
xor
iret
xchg
popl
or
cmp
adc
mov
lcall
xchg
test
dec
test
inc
leave
mov
ret
outsb
mov
adc
aaa
stc
mov
xchg
repz
push
xchg
ficoms
mov
ret
or
orb
ret
pop
fists
fildl
xchg
jmp
int3
adc
and
xchg
test
jp
mov
push
inc
xor
aad
lods
add
lods
filds
adc
ret
sbb
xor
or
sbb
ret
aam
mov
or
fdiv
adc
cmp
jecxz
loope
out
adc
mov
push
sbb
js
bswap
dec
nop
jmp
dec
sahf
cwtl
shll
jnp
in
pop
jne
test
push
jb
add
repnz
ret
inc
shlb
movsb
or
js
push
mov
lcall
lret
aam
aam
xchg
pushl
out
daa
sbb
pushf
cmp
rolb
inc
push
mov
jp
shll
repz
shlb
mov
mov
cmc
ss
aam
cmpsb
mull
adc
cmp
repz
cs
push
cmp
imul
aad
dec
mov
inc
inc
movb
ret
or
in
xor
mov
lcall
leave
mov
pop
int3
mov
fmuls
mov
frstor
clc
push
stos
or
arpl
xchg
inc
mov
jecxz
ret
jmp
repnz
ss
adc
xchg
mov
and
cmp
stos
ficompl
int3
jae
mov
inc
mov
fcoml
cmp
or
lods
and
dec
out
cmp
cltd
and
pushf
jl
aas
test
cmp
mov
mov
and
cmpsb
aam
inc
rcrl
test
ret
mov
mov
cmpsb
jecxz
cltd
repz
lea
shrb
fbld
lods
cmpb
notb
add
ficoml
cwtl
pushf
jle
fldl
cli
dec
ja
fistpl
xchg
push
cmp
loopne
jbe
sbb
bound
jno
mov
jno
push
jb
mov
or
inc
push
push
xor
shlb
inc
loop
iret
cmp
les
popa
adc
inc
push
jo
mov
xor
sub
mov
addr16
jl
sbb
adc
or
add
mov
mov
test
adc
mov
arpl
push
mov
jp
das
repnz
jbe
jnp
jns
xchg
movsb
push
iret
cmpsb
sbb
mov
ficomps
dec
nop
repnz
sub
test
cwtl
shrb
fistpl
push
je
int
lds
mov
mov
mov
cmpsl
push
aas
dec
gs
bswap
fstpt
cmp
test
inc
fidivs
cmpb
xchg
mov
lcall
xor
ljmp
sahf
lea
pusha
push
xor
stos
push
pushf
ret
sbb
scas
cmc
xchg
mov
adc
push
pop
cltd
mov
cmp
loope
jecxz
in
mov
aad
and
mov
cmp
aaa
push
inc
adc
outsb
inc
push
dec
faddl
dec
mov
repnz
mov
mov
mov
into
scas
dec
sbb
sbb
add
out
xor
rcr
stos
into
dec
push
jbe
aas
push
xor
cmp
movsl
fs
lods
decl
in
sti
cmp
addr16
lock
inc
mov
sbb
mov
into
movsb
cmpb
inc
test
arpl
mov
sub
mov
rcr
cmpsb
push
xchg
std
mov
fdiv
js
outsl
sbb
xor
adc
shll
or
pop
add
inc
fisubrs
mov
lock
dec
mov
cs
dec
fwait
in
fs
arpl
mov
cmp
sbb
cmp
ds
mov
xlat
subl
mov
push
mov
out
add
std
cwtl
inc
adc
sub
lds
pop
jmp
lea
jae
sbb
or
dec
push
xchg
sub
das
pop
loopne
in
and
lret
cwtl
mov
insb
lret
test
out
xchg
or
loope
mov
mov
jle
int3
and
mov
out
sbb
sbb
les
pushf
mov
pop
adc
aam
lcall
call
inc
mov
pop
jmp
imul
fwait
dec
adc
xor
xchg
cmp
rcrl
outsb
ret
outsl
add
cmp
dec
adcb
lods
mov
orb
and
subb
orb
dec
inc
fdivrl
movsb
mov
mov
js
js
or
je
addr16
dec
sbb
adc
push
pop
sub
sarl
loop
repnz
mov
mov
add
adc
mov
mov
fildll
xchg
push
inc
ds
dec
ss
mov
adc
cmp
lret
aad
sbb
xorb
sub
imul
mov
mov
jns
xlat
cli
loopne
arpl
cmp
fsubs
mov
cwtl
or
and
andl
int3
scas
lea
push
adc
pop
int
shll
jecxz
enter
pop
or
push
inc
xor
mov
sub
test
push
insl
push
adc
loope
dec
mov
int
dec
icebp
imulb
jb
loopne
xchg
scas
inc
mov
or
fnstcw
or
jg
sbb
popa
pop
sub
mov
lret
mov
jns
adc
push
int3
sub
push
xchg
pushf
imul
je
or
adc
push
pop
xchg
das
and
jmp
and
arpl
pop
roll
fisubrs
ss
out
pop
sub
dec
mov
mov
mov
add
push
aam
mov
repz
mov
sbb
jbe
in
mov
and
rolb
or
lahf
aam
sub
loope
pushf
jl
xchg
sbb
inc
xor
in
push
add
in
cmp
dec
mov
out
jb
dec
cmpsb
ds
aad
or
cmp
int
jb
jg,pt
out
add
dec
sub
insb
sbbb
pop
jb
icebp
push
mov
sti
xor
ljmp
hlt
xchg
pop
push
ret
jle
sub
stc
sti
in
xchg
xchg
dec
mov
iret
inc
or
loopne
jb
pop
xor
mov
dec
sahf
ja
or
lods
sub
adc
std
pop
mov
mov
mov
mov
fs
push
inc
pop
and
je
fisttpl
out
sbb
adc
stc
movsl
in
js
push
inc
xor
mov
dec
xor
aam
insb
mov
leave
sbb
xchg
int
ror
adc
sbb
dec
xchg
xor
ljmp
fcmovu
adc
cmp
pop
sbb
cmc
enter
mov
cmp
mov
jecxz
xchg
imul
repnz
jp
gs
mulb
and
jbe
iret
cmpl
sbb
pop
jecxz
stos
xor
jmp
or
jp
pop
lret
or
adc
mov
outsb
adc
mov
lret
mov
mov
jle
cvtps2pd
adc
inc
add
mov
js
pop
push
jle
dec
ficoml
xor
inc
mov
and
jp
jo
pop
xor
cmp
test
push
cltd
ljmp
or
mov
pop
xor
sbb
mov
out
call
or
repnz
sub
loopne
pop
push
cmp
rcrb
loop
in
outsl
xchg
jbe
adc
push
add
mov
jbe
and
dec
fisubrs
xchg
jmp
cmp
popa
daa
outsb
insl
lahf
jnp
loopne
lret
jo
cmp
adc
repz
mov
decl
clc
cld
jge
fdiv
inc
rcll
sub
repz
fcompp
fisubs
mov
outsb
xor
addr16
aad
sbb
aad
mov
cmp
in
push
xor
stc
adc
inc
push
fisttpl
mov
mov
test
or
jbe
mov
nop
xor
loop
sbb
add
cld
push
dec
xchg
jle
push
rcl
dec
scas
add
mov
inc
xchg
clc
repz
fiadds
mov
jnp
cmp
adc
pop
cmpl
adc
sub
or
rclw
fstpl
sbb
inc
xchg
xor
fimuls
fstpl
jno,pn
and
mov
ror
sti
mov
lret
sti
jge
fwait
xor
bound
jmp
sbb
add
push
push
dec
es
stos
push
sbb
inc
and
sub
orb
xor
cmpsl
cmp
jmp
jle
fwait
xchg
aas
repz
lret
or
jg,pn
jo
sub
or
int3
aad
fdivrl
jmp
shlb
test
push
out
nop
jo
pop
vpmaddwd
and
pushf
sub
push
jle
pop
adc
dec
aam
sbb
pop
int3
jmp
jne
stc
insb
iret
push
mov
scas
pop
cmp
out
fidivrl
dec
xor
pop
xlat
mov
push
out
repnz
leave
mov
inc
cltd
xchg
sub
loop
fdivl
test
add
out
add
js
sbb
cld
dec
or
or
and
in
adc
ja
mov
imul
int3
xchg
aad
test
push
loope
and
syscall
mov
inc
test
or
sbb
ljmp
mov
sub
pop
jge
je
xlat
fsubl
add
xchg
subb
movsl
jge
mov
dec
jp
rorb
dec
call
inc
ss
stos
push
test
push
mov
push
mov
inc
jl
lret
es
pop
pop
mov
and
fiaddl
and
xor
add
mov
es
loopne
in
jns
ss
or
xchg
sbb
inc
int3
mov
es
xchg
mov
faddl
outsb
inc
or
test
movsb
divb
cmp
out
dec
inc
int
cmc
lcall
cvtps2pd
outsb
in
stos
fisttpll
loop
push
cmp
inc
push
subb
xor
push
sti
pop
shlb
in
mov
sbb
repz
inc
addr16
rorb
pusha
pusha
clc
ret
xchg
mov
out
sbb
xchg
xchg
xor
lret
sub
cmp
lds
lahf
add
les
repz
shl
fwait
movsl
int3
sbb
rorb
mov
push
mov
addr16
rcrb
mov
mov
out
leave
shrb
ret
cmp
push
sub
dec
iret
lret
adc
sti
dec
dec
test
inc
loope
lret
sbb
cli
lcall
push
insb
dec
popf
dec
leave
cmp
mov
xor
xchg
sar
jge
lds
mulb
jno
and
adc
aas
xor
imul
jecxz
pushf
sbb
xor
imulb
or
sbb
outsl
in
fwait
dec
mov
xchg
insl
cmp
gs
xor
pop
xchg
inc
sbbb
mul
into
jmp
pop
adc
or
bound
jns
push
pop
sbb
nop
pop
in
add
fstl
loopne
mov
sti
dec
aad
stos
outsb
scas
cmp
scas
in
jl
and
insb
repnz
sub
dec
loope
test
sbbb
sbb
cmpsl
js
stos
mov
cmp
test
sbb
lret
and
sub
jle
mov
adc
call
dec
rclb
mov
shr
cmp
mov
push
pop
sbb
dec
xor
stc
and
or
mov
or
les
nop
pop
xor
jecxz
jle
pop
movsl
fstl
pop
push
in
addr16
or
adc
mov
xchg
insb
xchg
adc
dec
sbb
ljmp
dec
ss
xor
test
add
mov
lret
jecxz
jbe
stc
popa
mov
add
inc
sti
cmp
imul
std
je
hlt
push
mulb
dec
sbb
or
in
cmp
movsl
mov
je
mov
sti
or
mov
shll
dec
outsb
inc
and
sti
cmp
js
lock
dec
xchg
aaa
insb
sti
sbbb
ds
push
or
xor
ds
cmp
fbstp
cltd
cmp
xchg
jo
mov
xor
cmp
iret
sti
mov
and
popf
or
pop
cld
cli
mov
in
call
cs
xor
pushf
xor
fnstenv
pop
ss
sub
adc
cmp
stos
cli
jae
cmp
sbb
or
ret
pop
sub
fisttps
into
inc
mov
nop
or
sub
stc
push
mov
mov
cmp
mov
jg
xor
call
xchg
dec
rcrb
adc
cltd
adc
arpl
sti
js
inc
mov
cmovg
fisttpll
cmp
push
mov
out
test
pusha
or
inc
lock
pop
push
jno
and
cltd
mov
es
jb
nop
or
cmc
jae
jp
mov
jg
mov
adc
cltd
cmp
or
or
out
imul
ja
pop
cmp
xchg
shl
adc
add
insb
jb
loop
xor
adc
repnz
xchg
pop
cltd
dec
xor
mov
subl
xchg
aas
xchg
fcomip
pusha
jp
fwait
and
bound
cmp
fidivs
jg
mov
mov
jns
clc
or
cmpl
cmp
call
jge
cmp
fs
popl
sahf
mov
in
fcoms
sub
cmp
insb
and
sub
adcl
rolb
and
pop
xchg
pop
mov
sbb
add
adc
sub
cmp
sti
sbb
stos
into
sbb
sbb
inc
jb
ljmp
loop
orl
mov
jo
dec
flds
jecxz
js
fstpt
loop
cmp
test
dec
sti
aad
jo
leave
add
sbb
fucomi
xor
mov
add
push
nop
aas
shrl
dec
mov
test
sub
dec
cli
loope
jecxz
mov
mov
xor
cli
xchg
jmp
js
cli
xchg
lret
inc
xchg
bound
and
mov
push
mov
lods
push
fsubrp
jmp
mov
inc
mov
leave
xchg
jb
sbb
stos
push
inc
inc
sub
lret
mov
jae
jnp
and
adc
xor
js
idivl
lret
jp
aas
sahf
ss
lcall
bound
inc
cltd
dec
cltd
dec
call
cmp
mov
xchg
mov
mov
xchg
sarl
push
dec
aam
fwait
or
push
mov
dec
psubusb
outsb
cmp
mov
out
cmp
shlb
lret
inc
movsl
mov
pop
mov
mov
inc
xchg
inc
mov
aaa
sub
cmpsl
js
sub
test
mov
cwtl
xor
outsb
sub
stc
int
fstpt
xor
out
mov
sub
sub
push
cmp
mov
or
xchg
sub
sahf
and
xchg
cli
mov
jle
idivb
orl
adc
xor
push
bound
lahf
mov
fmull
insb
xor
jl
adc
inc
cmpsb
mov
dec
repz
sub
or
sub
call
xchg
jbe
aaa
mov
outsb
inc
rcl
inc
sub
aaa
mov
loopne
push
insl
push
jle
adc
cmp
or
out
inc
inc
into
mulb
push
addl
push
xor
jb
pop
insb
cmp
aas
sbb
xor
mov
sub
mov
mov
sbbb
lock
mov
push
out
cwtl
popa
adc
mov
repnz
movsb
sub
sbb
sbb
jbe
jp
cmp
ljmp
mov
loop
out
jb
and
dec
jb
xlat
aaa
mov
push
test
dec
dec
cs
push
add
in
xchg
or
fldt
pop
fwait
cmp
lcall
in
mov
js
and
dec
mov
dec
sub
adc
push
cltd
mov
fs
roll
mov
mov
push
in
mov
sbb
xor
pop
lahf
mov
imul
loopne
aad
cmp
lcall
sub
cwtl
pusha
add
jle
in
jb
push
mov
imul
insb
cwtl
mov
loopne
aaa
cmp
clc
xchg
test
mov
sbbl
mov
push
ja
add
add
cmp
mov
push
adc
mov
mov
xchg
dec
imul
push
fnsave
les
and
aaa
inc
push
int3
dec
jg
dec
pop
inc
xchg
ss
adc
sbb
jb
pop
addr16
js
cmp
outsb
push
xchg
adc
jb
testb
cmp
lds
dec
gs
mov
dec
and
aas
xchg
aam
xor
inc
stos
test
ds
cmpsb
mov
push
dec
mov
dec
ja
dec
or
cmp
sub
js
mov
push
test
xlat
ret
lret
ss
pop
sub
lret
stos
pop
arpl
add
xor
stos
jnp
xor
cmp
sahf
inc
mov
mov
and
aaa
inc
jnp
dec
xor
iret
push
cs
ss
out
enter
inc
les
jecxz
push
cmp
cld
mov
je
aam
sarb
cmp
xor
out
ds
jnp
xchg
push
push
mov
movsl
mov
sbb
fs
mov
xor
loopne
mov
ljmp
xchg
cltd
lock
mov
cmp
bound
or
stos
adc
lods
lock
xor
shlb
es
dec
repz
jp
inc
fstpt
xlat
aas
cmp
mov
sub
and
push
dec
jmp
popf
stc
pop
adc
aam
dec
jecxz
jmp
shlb
imulb
cmpsb
movntps
int
aam
addl
idiv
cmp
push
xor
xor
scas
adc
xor
dec
imul
xor
aam
mov
inc
lock
dec
scas
lret
mov
adc
fidivrs
or
sahf
popl
jae
enter
mov
ror
cmp
push
insb
idiv
dec
decb
daa
sbb
mov
mov
nop
push
es
xor
xlat
shrb
in
xor
inc
push
lret
jb
sbb
bound
rcrb
loop
iret
xchg
adc
xor
jmp
sbb
cmp
jb
adc
dec
mov
add
inc
ss
jb
adc
and
dec
xchg
ss
sbb
loopne
dec
int3
pop
cltd
dec
je
ds
jb
lret
push
sbb
pop
jno
xchg
adc
test
out
fwait
and
dec
xor
fucomi
cld
mov
mov
dec
jl
cmp
mov
mov
fwait
ret
dec
cltd
jb
lret
xchg
jle
mov
xchg
dec
stos
push
test
lods
fs
cmp
sbb
lret
mov
mov
inc
lods
jp
dec
or
dec
mov
bound
test
lret
stos
inc
xor
dec
lcall
push
or
fs
mov
divb
mov
cmp
adc
rolb
mov
mov
push
jo
cmp
sbb
out
mov
or
movsb
pop
and
out
push
inc
lret
xchg
push
icebp
dec
andl
pop
cmpsl
adc
sbb
push
mov
xchg
lea
sbb
sbb
or
xor
or
iret
dec
ss
push
jo
push
mov
xor
mov
fildl
arpl
mov
dec
xchg
gs
jnp
sar
mov
sbb
int3
or
xor
out
lcall
mov
adc
push
xchg
dec
int
ds
fisttpl
add
imul
movsl
mov
dec
scas
aaa
mov
lcall
fstpt
jge
std
add
fistps
and
cmp
addr16
jl
repz
imul
cmp
add
adcl
mov
dec
jge
addr16
out
adc
call
sbb
ss
or
dec
mov
or
repz
and
js
xorl
js
dec
cmp
in
jns
rclb
xchg
mov
jb
pusha
mov
add
pop
roll
ret
imul
sub
mov
roll
lcall
das
jae
jp
dec
jo
mov
jmp
fstpt
sbb
jle
mov
pop
cmp
mov
in
lea
cmp
mov
jp
in
insb
aad
popf
aaa
cmp
or
shll
cltd
lock
cmp
lcall
bound
add
loopne
lods
mov
add
iret
mov
mov
cmp
fistpl
jb
out
pop
pop
hlt
cmp
jae
or
gs
adc
or
xchg
sahf
leave
jb
es
fbld
xor
out
mov
sbb
dec
fisttps
xchg
and
imul
sti
fisttps
mov
xor
leave
push
mov
cmp
outsl
andl
jae
and
push
pop
mov
fstpt
scas
inc
xlat
leave
mov
mov
sub
stos
repnz
xlat
jmp
jle
sub
bound
sbb
add
shl
dec
fxch
leave
aaa
repz
lods
push
fisttps
jae
sti
pop
adc
jmp
negl
xchg
in
push
sub
int
cltd
adc
push
or
in
and
shll
cs
dec
mov
js
and
stos
inc
sbb
dec
jae
xor
jl
into
and
loopne
stos
sbb
int3
dec
imul
gs
fwait
inc
inc
shll
dec
sbb
xor
and
jecxz
ret
jle
mov
mov
add
mov
mov
inc
lds
dec
sub
mov
xlat
repz
jmp
sbb
mov
mov
xlat
adc
daa
call
push
inc
js
mov
jle
sbb
dec
jmp
pop
add
jmp
jae
dec
or
pop
sbb
js
jae
rolb
and
lods
pop
repz
and
or
xchg
lcall
rcrb
cmp
lcall
lock
jo
cmp
jge
dec
pop
jp,pt
pop
dec
dec
pop
or
adc
dec
mov
cmp
aad
add
xchg
mov
sub
mov
cltd
add
lcall
lea
mov
xchg
arpl
outsb
dec
jb
stos
inc
cmp
cmpsl
cmp
in
or
mov
push
adc
push
ljmp
mov
cmp
scas
xor
jp
push
push
outsl
aas
mov
adc
lret
imul
dec
out
sbb
inc
mov
mov
lcall
mov
pop
hlt
push
xchg
lret
rcrb
ds
inc
call
sub
out
mov
xor
jmp
push
mov
xlat
mov
adc
test
pushf
fdivl
jb
rol
add
test
sarl
and
cmp
xlat
cmp
dec
fisttpl
mov
mov
mov
mov
xor
adc
imul
test
mov
insb
cmp
mov
bound
lcall
xor
mov
cmp
stos
ret
into
sbbl
mov
xor
cli
inc
or
jns
xor
aaa
loop
shlb
sub
inc
sarl
lds
out
iret
cmp
inc
loopne
cltd
sbb
jg
inc
aad
push
adc
mov
inc
dec
cmp
lret
xor
mov
sbb
cmp
ljmp
inc
ds
int
cmp
addr16
aad
sbb
jmp
or
imul
push
aam
cld
inc
xor
xor
jle
cld
add
inc
cli
lods
mov
orb
adcl
lret
rcrb
xchg
inc
mov
xchg
movsb
lock
cs
jb
das
xchg
mov
ret
fisttpl
mov
pop
outsb
sbb
aad
sub
dec
iret
addr16
jge
sbb
lds
int
js
cli
dec
mov
xchg
cmp
movsb
jl
cmpsb
lods
cmp
pop
adc
push
orl
rolb
mov
xor
rcll
bound
sub
pop
fcompl
add
push
bndldx
fsubr
pop
into
mov
stc
ds
dec
cmp
sahf
ss
enter
data16
xchg
addr16
adc
mov
shlb
je
aam
out
xchg
les
dec
mov
ds
int
or
mov
dec
cmp
jl
mov
xor
sbb
ds
fcmovbe
into
fwait
mov
bound
lds
orb
fildl
jecxz
add
mov
cmp
in
mov
sub
inc
push
push
mov
jmp
mov
mov
dec
mov
mov
push
dec
fs
cmc
sbb
push
data16
xchg
mov
lss
mov
xor
and
dec
in
imul
mov
fidivl
cmc
xchg
movsb
arpl
inc
jbe
sub
mov
jp
and
int
arpl
cmp
or
inc
mov
inc
cltd
sub
adc
cwtl
xchg
cmp
bound
xor
cli
sbb
or
loope
into
es
test
insl
test
jns
xlat
mov
fwait
adc
xor
push
lahf
push
loopne
push
rcrb
xchg
dec
inc
loop
mov
mov
mov
inc
lds
mov
and
xchg
sub
cmp
cmp
iret
ljmp
into
stc
test
cmp
lea
cmp
daa
scas
mov
daa
jp
push
xchg
mov
or
in
pop
sbb
xor
ss
mov
push
sbb
xor
jnp
xor
mov
fimuls
bound
xor
sub
cltd
xchg
lret
fstpl
rep
mov
outsb
lock
cmpsb
scas
mov
jae
mov
rcl
adc
sbb
or
in
dec
add
loopne
dec
push
mov
dec
clc
test
lods
mov
outsb
push
mov
nop
roll
sbb
sub
mov
xor
inc
dec
mov
cmp
inc
inc
rcll
daa
out
out
mov
or
mov
dec
in
ljmp
addr16
push
sbb
filds
mov
je,pt
les
inc
cmp
dec
mov
xchg
jg
sti
inc
xorb
push
jbe
sub
stc
out
out
pusha
stc
cwtl
jecxz
dec
pop
push
jnp
frstpm(287
dec
mov
sahf
rclb
xor
aaa
arpl
cmp
adc
jmp
sbb
xchg
pop
jae
dec
ret
sub
sbbb
dec
or
cmp
dec
or
outsb
mov
xor
out
rclb
mov
mov
repz
cmpsb
jae
jae
test
pandn
pop
scas
orb
push
out
pop
sbb
int
adc
pop
mov
out
stos
dec
add
aas
jb
lret
mov
mov
dec
mov
adc
push
jb
lret
push
data16
jle
mov
dec
cli
push
ljmp
jle
mov
xchg
dec
lcall
mov
fs
jle
outsb
jle
mov
ljmp
lret
sti
jle
jge
repnz
dec
push
mov
pop
jle
mov
sbb
push
imul
xchg
sbb
jle
mov
inc
mov
push
mov
xchg
lret
ljmp
push
push
lret
jb
lret
jp
mov
cmp
rcrl
dec
mov
idivl
stos
xorl
sbb
imul
sbb
add
mov
adc
ret
jae
jbe
test
sbb
push
cmp
aaa
ret
push
stc
fdivrl
subb
dec
pop
push
ret
jp
enter
mov
mov
mov
mov
mov
aad
adc
ss
adc
xchg
divl
mov
mov
sbb
dec
stos
xor
or
xchg
lds
in
iret
adc
and
or
push
push
in
mov
bound
std
loop
fwait
xor
mov
cld
add
or
shrb
jb
sahf
cld
inc
xchg
and
pop
jb
ficoms
pop
ljmp
fsub
pusha
in
jns
pushf
cmpsl
mov
sahf
inc
mov
lcall
mov
ljmp
fcomp
jp
sub
loopne
stc
sbb
ret
bnd
xor
sub
dec
inc
lret
and
xor
pop
call
inc
inc
js
repz
xor
es
cmp
xor
mov
dec
inc
inc
inc
inc
sbb
push
cmp
adc
adc
sub
cmp
and
and
js
cmp
jbe
mov
addb
pop
push
push
push
push
push
outsb
cmp
fs
lret
cmp
int3
ret
mov
cwtl
sahf
pushf
xchg
cmp
scas
lods
mov
clc
jb
cld
fs
hlt
or
prefetch
add
pop
add
jo
shl
sti
out
in
adc
dec
xor
lahf
cmp
jl
cmp
sbb
adc
mov
rdtsc
sbb
dec
pop
push
jb
je
sub
rorl
aaa
or
enter
movsl
jb
fldt
aam
add
lret
xor
add
jp
pop
and
je
add
xor
xchg
ret
cs
lret
loopne
enter
cmp
sarb
push
pop
inc
fstps
mov
arpl
or
cld
ret
jae
sub
out
fmull
aad
test
data16
or
mov
or
xchg
loop
idiv
push
clc
xchg
call
mov
xchg
lcall
lret
mov
test
imul
push
lcall
dec
push
add
mov
mov
xor
mov
jge
jns
add
or
paddd
fs
repnz
sub
push
lds
adc
jp
sbb
dec
xchg
jge
mov
sar
shl
cmpsl
js
call
data16
notl
inc
or
xor
add
das
add
adc
mov
test
and
fwait
mov
clc
adc
jae
mov
push
loope
and
mov
sar
sub
jmp
testb
or
ficompl
aad
test
cmp
or
push
pop
mov
fwait
jecxz
lock
sahf
xchg
fcmovb
cs
push
leave
mov
pushf
adc
aaa
jnp
clc
adc
jp
pop
push
sbb
sbb
add
and
fst
xchg
ljmp
push
push
jns
repnz
push
push
mov
or
cmp
iret
push
sahf
pop
mov
cli
sub
xlat
test
jb
fdivr
pop
push
add
out
js
xor
sbb
inc
mov
jl
rolb
add
adc
mov
dec
or
js
imul
xchg
mov
fcom
out
lahf
add
test
icebp
cltd
leave
or
or
shr
push
push
sbb
push
outsb
mov
jl
aam
dec
frstor
mov
push
push
xchg
sub
ret
mov
subb
and
mov
mov
test
rcrb
pop
fiaddl
mov
mov
setg
testb
mov
jle
int
pop
shll
mov
pop
xchg
dec
rcrb
lcall
fildl
lret
inc
js
lcall
cmp
mov
fcmove
mov
pop
xor
cmp
out
and
movsb
jge
sbb
mov
insl
jl
xchg
adc
jae,pt
cmp
add
out
ds
sbb
out
cmp
lret
adc
lds
fistpll
and
or
fnstcw
les
push
cmp
fs
dec
cwtl
xchg
mov
xor
dec
inc
inc
inc
inc
sbb
sbb
sbb
sub
sub
sub
jnp
jns
jge
jno
jne
cmp
xchg
pop
push
push
push
push
imul
outsl
insl
arpl
gs
mov
mov
lret
cmp
iret
int
rol
fwait
cmp
xchg
xchg
stos
cmp
cmpsl
movsl
sti
cmp
std
repz
div
or
or
push
add
or
fstpt
fst
rcl
aad
cmp
out
in
jecxz
out
loop
adc
mov
cmp
in
mov
jno
cmp
ljmp
add
xchg
cmpb
addl
sub
lcall
arpl
jo
push
sti
mov
mov
inc
dec
pushf
push
ficoml
cmp
mov
sbb
into
nop
add
mov
mov
shr
jle
or
mov
pushf
shrb
lea
cli
xor
lret
fcomps
sbb
add
daa
repnz
mov
dec
inc
xchg
or
ja
bound
xchg
rcrb
dec
rolb
rorb
dec
bound
aas
pop
dec
mov
jp
mov
test
rclb
pushf
push
mov
fmull
xor
decb
sti
or
scas
test
jnp
and
ret
aad
pop
xor
lcall
sbb
mov
mov
daa
mov
pushf
cmp
mov
mov
adc
cwtl
sbb
adc
nop
out
cmp
push
and
pop
mov
jge
out
lret
nop
xchg
fidivl
imul
xor
add
int3
lret
push
out
outsl
arpl
or
jbe
cs
mov
jo
aam
push
mov
mov
mov
or
and
jo
pop
jnp
stos
lea
sub
pop
jp
bnd
notb
ss
jge
lret
push
repnz
push
sarb
or
ficoml
jnp
loope
cmp
pop
sahf
adc
sbb
mov
shlb
inc
ds
enter
mov
or
mov
xor
ds
lcall
mov
enter
test
dec
mov
cmpsl
and
pop
test
int3
sbb
pop
push
xor
jl
shrl
enter
mov
pushf
sahf
sub
in
sbb
inc
push
dec
cmp
adc
jbe
mov
out
testl
mov
mov
pop
mov
and
daa
cmp
aam
mov
popa
sbb
mull
inc
fwait
or
das
mov
fmull
rcl
adc
jae
and
mov
mov
xchg
fmull
jo
jecxz
scas
mov
xor
jp
fwait
sbb
stc
jb
mov
sarl
ljmp
and
jp
fwait
lods
mov
inc
es
mov
mov
dec
mov
push
imull
sub
xchg
inc
adc
inc
mov
inc
lock
add
stc
fwait
add
stos
adc
hlt
in
push
into
jp
push
lret
push
push
loop
out
cmp
call
xor
out
jp
sub
lret
data16
mov
das
mov
pop
je
stc
rcrb
and
mov
push
cli
fwait
ret
push
inc
mov
mov
push
mov
cmp
push
enter
xchg
mov
and
sbb
icebp
sti
imul
mov
shr
stos
stos
sub
sbb
adc
ret
push
js
hlt
jmp
mov
and
mov
and
mov
aas
idivl
jg
cmp
xor
or
ficoms
inc
mov
shlb
insb
mov
lret
xchg
dec
cmp
push
in
into
push
cmp
pop
loop
or
aaa
shr
ljmp
fcoms
mov
js
cwtl
pushf
xor
xchg
out
hlt
sahf
sbb
pop
pop
xchg
out
lret
enter
scas
cmp
ds
pop
or
lahf
or
mov
mov
aas
out
ds
sbb
aas
mov
lock
or
fiadds
sbb
mov
jecxz
ret
sbb
xorb
aad
cmpsb
dec
fwait
adc
xor
mov
mov
xchg
push
ret
out
jecxz
mov
and
dec
cltd
ds
stos
mov
movl
pusha
jne
push
add
adc
ds
add
jmp
cmp
sahf
loope
mov
cli
sti
or
adc
jb
fidivl
jp
xchg
cmp
fisubl
sahf
push
cmpsb
lcall
sbb
stc
idivl
call
clc
sbb
lret
aaa
cmp
stos
mov
adc
mov
rolb
es
jp
ret
inc
push
repnz
sbb
push
adc
std
xchg
and
mov
xchg
sub
xchg
inc
pop
and
decb
mov
jb
or
mov
push
push
mov
sbb
das
pop
arpl
mov
mov
dec
xor
jmp
ja
inc
jle
jp
mov
cmp
cwtl
and
lcall
dec
sub
sbb
add
sarl
lret
lret
mov
jnp
dec
mov
cmc
stos
add
sahf
sub
xchg
cmp
cwtl
push
cli
push
lcall
repnz
pop
outsb
mov
leave
jb
les
call
repnz
divl
push
fidivrl
cmp
push
js
add
jb
pop
pusha
mov
mov
jbe
sub
dec
sahf
inc
cs
ds
shlb
lods
popf
mov
decb
dec
cs
sbbb
mov
paddw
fbstp
and
js
jbe
int
pop
lret
aas
cmp
je
out
sbbb
shll
in
or
js
jb
fstps
push
dec
pop
lods
inc
sbb
xor
push
mov
testb
bound
and
or
test
mov
mov
pop
jns
and
mov
push
popf
jbe
mov
mov
cmp
out
and
test
and
adc
mov
fidivrl
fists
inc
jbe
pop
lret
leave
pushf
or
xlat
pop
out
cwtl
mov
add
sahf
popa
mov
xor
cli
jle
or
sub
jp
dec
call
or
outsl
push
faddl
push
xchg
out
mov
lret
dec
push
es
pushf
cmp
jle
int3
sub
fidivl
sbb
jle
pushf
dec
dec
jl
adc
lret
dec
call
dec
inc
sub
dec
push
shlb
sub
push
ret
inc
mov
mov
iret
pushf
dec
lock
pop
cli
test
loop
ret
dec
jp
fidivl
into
fiadds
cmp
cmp
dec
aas
ja
mov
mov
lret
jle
pushf
daa
sbb
lret
jne
push
fidivrs
sub
and
pop
adc
inc
push
fistpll
loop
js
popa
lods
pusha
jge
dec
cs
jb
mov
jno
js
mov
mov
stos
dec
in
cmp
dec
jl
mov
cmpsb
insl
and
pop
push
xor
mov
dec
xchg
mov
add
and
xor
jl
aad
jp
sbb
sbb
inc
jns
in
xor
add
or
scas
sbbl
dec
addr16
nop
mov
jp
cmp
cli
aas
call
ja
js
jns
sub
sbb
out
sub
scas
mov
dec
cmp
mov
pop
dec
push
adc
push
js
jg
leave
cs
lods
cs
sbb
xor
cmpsb
int
mov
pop
ficompl
jmp
aas
jecxz
cmp
ret
out
push
sbb
sub
cmpsb
jno
inc
jmp
sub
testb
or
jae
push
xchg
sahf
xor
dec
cs
mov
lahf
repnz
sbb
jle
dec
fidivrl
lret
adc
jp
je
sbb
dec
sub
inc
jb
lret
jle,pn
mov
sarl
push
es
lret
lret
in
push
js
sub
jle
ljmp
dec
stos
push
out
jb
lret
mov
in
push
test
pop
or
sbb
or
out
mov
jb
dec
jp
and
mov
xlat
jb
mov
mov
sti
dec
stos
push
ret
jb
lret
mov
push
dec
pop
push
xorl
jae
jnp
and
push
ljmp
cli
lret
ret
mov
pop
dec
sbbb
jb
mov
xchg
fidivs
ret
dec
add
nop
adc
cmp
call
cmp
cmp
mov
fcmovnu
push
sub
lcall
lcall
mov
adc
cltd
inc
dec
out
cmpsb
bnd
push
insb
int
scas
ret
jp
adc
fnsave
ret
dec
dec
add
push
outsb
jb
lret
pop
jle
mov
fisttps
push
test
lret
shrb
dec
fmull
cmp
jae
sbb
push
jle
mov
jmp
cmp
jp
in
test
inc
mov
xor
mov
inc
stos
lcall
push
adc
pop
sub
lcall
xor
sub
push
xor
ret
cld
mov
cmp
mov
jmp
cmp
inc
les
pushw
cmp
adc
test
cmp
gs
add
cmp
inc
lds
imul
push
and
out
mov
cmp
cmp
mov
sbb
xor
aad
loop
cmp
cmp
push
out
cwtl
mov
std
ret
fisttps
jbe
cmp
adc
jmp
mov
mov
loop
xor
jne
fst
lcall
mov
ret
mov
inc
ja
xchg
std
jge
inc
rcll
and
cmp
mov
stos
mov
push
data16
mov
mov
in
ja
cmp
mov
clc
inc
cltd
loope
scas
mov
jmp
adc
fnsave
jg
cmp
sub
ds
cli
mov
shlb
push
rol
jp
in
fdivs
pusha
dec
xchg
jge
inc
xor
cmp
cmp
adc
sti
mov
sub
stos
adc
cltd
fldpi
fwait
xor
jl
mov
jp
mov
or
mov
add
aaa
push
cmp
mov
adc
cmc
xor
clc
xor
inc
aam
repz
mov
adc
test
insb
shlb
rcll
das
test
cmpsl
hlt
outsl
adc
mov
es
jb
mov
arpl
insb
inc
pop
clc
dec
out
and
nop
test
out
pushf
inc
loop
insl
movsb
cmp
cmp
pop
xor
in
mov
lret
or
je
in
mov
loopne
cmp
arpl
loop
fwait
mov
in
ss
jl
cmp
cmp
sub
outsb
sub
out
cld
jo
pop
mov
dec
cltd
push
mov
imul
cmp
dec
sub
xor
std
aaa
ja
mov
cmp
sub
push
lods
xchg
pop
fsubs
lahf
jl
pop
or
sbb
scas
push
xchg
scas
bound
cmp
pop
decl
pop
sbb
jne
and
cld
jo
cmp
adcb
pushf
xchg
in
or
jae
cmpsl
mov
mov
daa
cmc
dec
scas
cmp
jle
xor
int3
lock
loope
inc
test
adc
sbb
lahf
lret
xor
stc
cmp
mov
sub
jns
cmp
cwtl
xor
pop
jbe
dec
xchg
cmp
dec
sbb
mov
jle
pop
stos
sbb
scas
jecxz
repz
dec
adc
sti
pusha
jle
outsb
push
cld
or
pop
icebp
push
enter
jle
xchg
pop
jle
dec
push
pop
or
ljmp
push
pop
fwait
inc
push
jp
bound
scas
mov
push
shlb
pop
cld
stos
or
call
imul
mov
and
mov
sbb
flds
jp
inc
fistpll
xor
jge
pop
rorb
mov
inc
idiv
add
mull
pusha
fwait
loopne
test
push
push
cmpl
add
and
xor
mov
mov
dec
pusha
sbb
daa
inc
xor
push
mov
out
shlb
pushf
pop
jg
pop
jge
pop
ret
mov
sbb
add
fcmovnu
shr
jmp
jecxz
jecxz
jecxz
jecxz
push
insb
out
inc
aas
push
inc
lea
lds
cmp
push
inc
sbb
inc
repz
add
fstpt
push
jmp
push
insb
aam
aas
pusha
int
cmc
filds
push
loopne
xor
sbb
imul
pop
push
inc
pop
adc
outsb
mov
aaa
or
add
fucomi
shl
jmp
dec
or
add
fistl
shrl
jmp
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
imul
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
push
inc
dec
pusha
cmc
mov
mov
jmp
xchg
fs
repz
add
flds
push
in
repz
add
push
pop
clc
pop
or
cmp
push
insl
repz
fistl
push
insb
punpckldq
pusha
dec
insw
fs
fs
inc
mov
inc
std
lds
and
shlw
ds
sbb
lds
inc
jo
addb
lds
lds
aas
lds
sbb
lds
lds
mov
lods
jge
pop
loope
adc
repz
fstpt
mov
dec
mov
and
xchg
jmp
lds
jnp
pop
fwait
mov
sub
fs
pop
mov
shl
adc
add
out
mov
pop
or
mov
mov
mov
icebp
cmp
popf
fcomip
cmp
jnp
pop
lods
pop
lret
inc
and
pop
in
xor
mov
aas
lret
push
xor
mov
bound
data16
and
push
mov
sub
and
bound
jmp
fstps
jmp
mov
sub
fidivrs
add
adc
xchg
push
and
pop
and
es
add
push
fbld
in
mov
mov
inc
jne
imul
push
sbb
daa
mov
icebp
mov
or
imul
sbb
sub
rcrb
in
enter
sub
sub
vpmaddwd
fucomp
jmp
adc
cs
jl
ljmp
out
out
stos
add
out
dec
out
out
out
out
out
and
ret
and
daa
aas
es
and
xchg
data16
cmp
cmp
leave
jo
pop
test
shlb
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loope
jae
mov
xor
dec
inc
inc
lds
inc
les
jo
push
nop
lds
out
lds
lds
lds
mov
pop
jge
pop
fidivrs
mov
push
leave
es
mov
sbb
jecxz
jecxz
jecxz
in
repz
lcall
jmp
aas
out
out
out
out
out
out
out
and
int3
and
and
daa
xor
dec
and
mov
daa
sbb
das
and
in
sbb
js
push
movsl
repnz
or
jmp
repnz
outsb
cmp
jg
and
jmp
je
mov
hlt
push
xor
sar
fistl
outsb
sub
je
test
ljmp
out
out
out
out
out
out
out
out
test
imulb
insb
lods
insb
mov
xlat
xlat
hlt
out
add
jmp
jecxz
jecxz
jecxz
sbb
jmp
pop
scas
in
jge
pop
test
flds
data16
test
lds
dec
inc
jne
mov
ret
stc
clc
fs
add
mov
sub
sub
adc
rcl
mov
stos
out
psrad
push
xor
ret
hlt
pop
xor
movsb
push
lock
ror
cmp
fiadds
shl
and
pop
out
push
add
adc
push
mov
scas
repz
cmp
inc
repz
ror
test
mov
xchg
hlt
mov
mov
popf
mov
fstpl
pop
mov
add
fistl
push
xchg
insl
and
and
and
es
and
add
xor
xor
aas
cmc
sbb
iret
jno
fcmovne
xor
dec
je
mov
sbb
pop
mov
push
xor
mov
fisubl
push
ljmp
xor
adc
ljmp
xor
dec
pop
dec
out
out
out
out
out
out
mov
loop
cmp
rcrl
jmp
jecxz
loope
lahf
mov
pop
adc
sub
rorl
ds
and
push
hlt
push
cmp
pop
push
lret
inc
pop
fdivp
and
pushf
xor
cmp
leave
sbb
js
inc
lcall
imulb
sahf
repnz
fmulp
rcrb
and
pop
mov
lret
pop
fs
fs
fs
fs
fs
or
in
inc
cmp
push
dec
jbe
jae
and
xchg
out
test
pop
mov
jecxz
sbb
sbb
or
sbbl
push
xor
pop
int3
je
mov
cltd
sub
stc
push
fiadds
ret
out
and
jo
cmp
push
inc
mov
fwait
cmp
xor
or
fidivl
and
outsb
pop
xchg
bound
cmp
fs
int
mov
and
sti
mov
pop
add
repz
or
or
das
push
fiadds
scas
add
arpl
mov
pop
push
and
and
das
repz
cmp
pop
mov
jecxz
hlt
push
add
or
mov
mov
cwtl
add
sub
dec
mov
dec
out
mov
into
push
dec
ja
mov
mov
mov
add
push
pop
lds
enter
dec
insb
sub
pusha
jge
mov
and
dec
and
pop
mov
jge
jl
jg
leave
dec
leave
or
or
jne
aad
and
or
push
pop
repnz
ljmp
ds
mov
pop
push
push
xor
push
jle
or
add
push
gs
jae
push
xor
mov
stc
repz
insb
jo
push
mov
lcall
jne
sar
data16
push
leave
imul
inc
pop
sub
pusha
enter
adc
sub
ret
fimull
out
push
jb
push
scas
mov
cmpsl
mov
add
pop
iret
cmp
jle
jp
jp
cmp
ficompl
and
pusha
and
and
and
jp
jb
shlb
sbb
jnp
jae
mov
add
push
leave
out
cmp
dec
sbb
out
cmp
and
jge
inc
imul
lds
pop
push
sbb
mov
inc
or
das
shlb
jecxz
jecxz
outsl
outsl
and
adc
js
fs
enter
mov
and
pop
mov
push
inc
mov
pop
inc
imul
inc
rol
lds
inc
push
inc
adc
jne
insb
jne
mov
rep
sbb
fistpl
push
sub
es
add
fnclex
sarl
shrb
jne
pushf
mov
sbb
cwtl
push
xor
jns
pusha
lock
fiaddl
fucomi
shl
jmp
das
xlat
out
out
enter
jns
jne
lea
push
and
stos
imul
jns
rcrb
lret
sbb
or
push
push
das
bound
outsb
jae
xchg
shll
fisttpl
fiadds
inc
push
dec
lea
leave
mov
sub
and
push
sub
ret
push
xchg
mov
dec
xor
je
add
call
xor
push
pop
insl
mov
mov
int
fstl
sbb
jmp
and
pop
imul
pop
cmp
insb
mov
and
and
ljmp
cli
inc
repnz
shrb
sbb
sti
push
repz
or
inc
orb
mov
ljmp
xchg
inc
stos
dec
pop
push
out
cli
lds
inc
dec
les
dec
pop
jo
fistpl
jg
or
fimull
sbb
pop
jmp
jecxz
sub
lods
leave
stos
cltd
ljmp
stos
jecxz
pop
and
and
stos
es
sub
jle
or
xchg
fidivrs
push
jmp
jecxz
or
xchg
pop
popf
lret
push
dec
ljmp
ja
mov
fs
mov
pop
xor
imul
cmc
mov
ret
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
je
inc
xor
and
jb
xorb
ret
pop
mov
rolb
loop
xor
push
inc
adc
sub
jnp
jae
mov
cmc
imul
popf
outsl
mov
lret
ffree
fstpl
mov
xor
add
fcomi
shl
jmp
dec
outsb
dec
xchg
jbe
pusha
data16
jp
jb
mov
pop
jo
dec
bound
lcall
cmc
cli
push
xor
or
add
sarb
mov
cmpl
enter
neg
sbb
inc
inc
dec
mov
ss
scas
outsb
movsb
sub
ret
out
sbb
jns
push
addr16
xor
insb
jp
add
call
cmp
movsb
repz
pop
mov
xchg
xchg
push
inc
mov
jle
cmp
push
int
mov
mov
jns
add
pop
imul
arpl
shll
pop
xor
pop
shlb
jp
mov
imul
cmc
imul
push
push
popa
ljmp
sub
iret
mov
push
pop
repz
insl
fistps
arpl
xchg
jne
sarb
lds
sub
and
jne
cmpsl
outsb
fdivrl
add
jb
sbb
inc
ret
push
add
popf
add
ret
ds
sahf
or
pop
xlat
push
je
xchg
fdivrp
jbe
mulb
les
inc
out
fcom
pop
mov
into
and
cmpsl
adc
outsl
dec
sub
push
mov
jmp
add
sarl
inc
inc
punpckldq
out
cli
outsb
pusha
pop
scas
mov
je
into
jns
mov
sbb
xor
push
aam
pop
aam
cwtl
repnz
xor
jns
fcmovb
jp
xchg
in
outsb
loop
fs
sahf
fists
mov
subb
lcall
ljmp
mov
adc
lahf
adc
jno
xor
stos
sahf
sub
xorb
ret
jo
pop
test
mov
xchg
mov
jmp
mov
jge
fst
mov
mov
cs
icebp
fists
loop
pop
cli
xchg
mov
sbb
subb
test
mov
sub
jo
es
jbe
enter
add
mov
push
mov
mov
lods
or
jp
js
xor
outsl
call
mov
in
sbb
jmp
mov
rcll
ret
insb
loopne
add
mov
fsubl
xchg
fs
bound
xor
arpl
in
mov
push
pop
negl
insb
sbb
push
and
add
ljmp
lret
mov
lahf
push
test
push
pop
jnp
push
push
push
cmpsl
xchg
dec
pushf
daa
and
hlt
loope
int3
jle
push
fldl
je
inc
leave
outsb
adc
xchg
cmp
pop
fwait
and
mov
mov
xor
loop
insb
roll
popf
mov
pusha
add
sahf
loopne
fnstcw
pop
mov
int
aas
idiv
add
jo
push
mov
scas
fstl
mov
stos
outsb
xchg
push
ss
scas
fwait
jp
bound
pop
or
cs
xchg
pop
push
dec
cs
adc
inc
lret
sbb
cld
rolb
lahf
jb
test
jb
cmp
pop
call
dec
and
dec
sarl
jp
loop
lret
or
ja
push
push
inc
dec
xor
fimull
adcl
xchg
test
pushf
pop
loopne
std
jo
inc
and
imul
cmpsb
sbb
mov
es
jae
out
enter
daa
cltd
aam
mov
stos
fistpll
adc
repnz
add
in
test
mov
pop
mov
repnz
jg
mov
je
dec
push
xchg
sbb
add
fiaddl
clc
call
out
xchg
jo
dec
pop
cs
or
out
pop
inc
je
addl
mov
lret
pop
out
and
jns
sbb
mov
jnp
mov
dec
or
pop
enter
ljmp
fyl2x
push
mov
in
hlt
pop
cmp
ljmp
jae
and
addl
lcall
rcr
xchg
xor
andb
sbb
add
int3
add
add
cmpb
or
or
pop
pushf
cmpsb
sbb
cmpsb
jno
jp
rcrb
lods
js
dec
mov
pop
mov
or
or
or
dec
dec
insl
fs
jle
pop
fidivl
push
mov
cwtl
repnz
js
or
out
fnstenv
jp
mov
sub
and
outsl
adc
xchg
daa
add
mov
or
mov
mov
pushf
or
int
pop
mov
sbb
sbb
nopl
pusha
mov
dec
sbb
call
daa
jmp
testb
jns
mov
imul
inc
adc
jl
jae
pop
out
scas
lock
or
movsl
push
xchg
push
nop
pop
mov
or
jg
stc
xchg
jp
sbb
sbb
sbb
fdivrl
xlat
mulb
jp
sub
ja
mov
or
dec
ficompl
or
xor
adc
jbe
add
mov
jnp
and
rcll
cmp
testb
dec
in
inc
leave
add
pop
call
fucomp
insb
enter
addb
pop
jp
and
pop
das
pop
sbb
dec
jp
adc
pop
push
inc
adc
repz
subl
hlt
xchg
ja
ljmp
push
fimull
arpl
ret
sub
cmp
dec
jmp
lea
push
bound
xchg
daa
dec
and
test
push
out
push
fidivrs
xor
jae
ja
jno
mov
das
movb
and
xor
js
leave
xor
mov
in
aam
sub
outsb
push
jle
inc
or
pop
cld
notl
inc
xchg
dec
sub
ficompl
lcall
pop
outsb
repz
sete
push
mov
lcall
aam
push
pushf
or
push
in
ret
inc
ds
out
jnp
pop
pop
push
xchg
cld
mov
fsubrp
push
int3
and
pop
xchg
dec
jle
in
cmp
mov
jle
push
pushf
xchg
xor
mov
repnz
mov
scas
movsb
cmpsb
xchg
mov
lret
sub
dec
icebp
loope
push
loopne
test
out
out
jp
mov
insl
fisttpl
int3
nop
jp
fidivs
mov
push
sbb
push
testb
sub
stos
ret
xor
inc
inc
inc
xor
cmp
xchg
fwait
out
and
and
outsl
dec
ja
xor
push
add
imul
push
dec
cs
mov
mov
out
dec
jno
icebp
add
adc
pop
mov
xor
mov
push
push
dec
xor
inc
jle
icebp
xchg
or
les
shl
mov
push
sbb
orb
push
add
push
outsb
push
mov
ficomps
push
mov
sub
mov
imul
gs
pop
pop
gs
inc
dec
inc
dec
roll
dec
lret
pop
shlb
test
add
sbbb
push
shll
dec
adc
in
pop
push
jbe
scas
bnd
push
shlb
scas
pushf
sbb
xorb
subb
mov
mov
or
hlt
push
ds
cmp
push
in
es
pop
mov
mov
clc
lret
clc
rcrb
mov
mov
mov
mov
outsb
out
in
sub
repnz
dec
jp
push
push
cmp
je
adc
adc
adc
cmpl
sbb
movsl
dec
push
adc
addl
or
push
hlt
sarb
jl
inc
and
mov
mov
loopne
mov
jns
adc
call
and
xlat
adcl
sub
jbe
pop
adc
mov
aad
rol
icebp
je
xchg
pop
sub
jp
sbb
xchg
mov
dec
test
les
push
imull
mov
sbb
inc
mov
mov
mov
cltd
bound
loop
leave
mov
out
cmpsb
jae
je
and
imul
xchg
sbb
mov
adc
xor
mov
aam
dec
test
lret
addr16
adc
xchg
sbb
popa
mov
loope
lods
sbb
in
inc
pop
fdivrp
lahf
push
push
pop
add
push
or
push
adcb
mov
xor
jae
pop
les
in
xorb
jle
movsb
ljmp
aad
std
clc
loop
xchg
push
lods
jb
cmp
xorb
jp
add
or
sub
lret
xchg
cmpsb
xchg
or
mov
hlt
add
pop
and
push
lock
pop
mov
iret
repnz
icebp
or
jp
xor
rorl
adc
jae
xchg
test
test
rcl
xchg
inc
js
lock
pop
je
data16
pop
add
rorl
clc
jecxz
out
stc
add
pop
jecxz
jne
negl
aas
adc
mov
pop
push
into
es
out
bound
aaa
xor
mov
mov
push
inc
repnz
xchg
testb
or
js
cmpsb
mov
cld
push
insb
into
xchg
sti
movsb
and
jle
push
repnz
push
ficoms
sbbb
fcoms
scas
jb
jae
hlt
faddp
adc
xchg
pushf
je
jle
dec
shrb
test
repnz
fidivl
sbb
popf
cmpb
pop
movsl
or
pop
fnsave
out
mov
push
aam
in
les
add
jo
jp
push
andl
xor
ficompl
xor
arpl
fdivrp
xchg
lods
mov
pop
sbb
js
je
mov
cmp
jo
clc
xorb
lds
hlt
fdivl
sbb
dec
or
mov
lock
cs
aas
push
shlb
jns
outsl
lret
cmp
dec
shlb
cmp
push
push
or
pop
push
repnz
jbe
out
pop
cwtl
push
fs
mov
ds
xchg
cwtl
jge
sub
repz
inc
outsb
daa
mov
pop
push
push
pop
adc
jge
jo
pop
mov
xchg
fisubrs
jg
adc
mov
cmpsl
lds
jle
jp
mov
pop
inc
lods
mov
outsl
mov
mov
pushf
mov
and
in
sbb
jo
add
rorl
mov
pop
gs
pop
mov
mov
or
in
pop
sub
push
lock
sbb
adcl
pop
push
and
in
divl
fisubrs
add
mov
cmp
sbb
lods
pusha
repnz
pop
cmpsl
mov
nop
or
sub
lret
bound
add
mov
pop
sub
mov
sub
mov
nop
sbb
mov
nop
pop
mov
adc
push
jb
rcrb
adc
and
aaa
cmpsl
mov
xchg
aad
cmpb
cltd
in
lods
cmp
mov
and
pop
icebp
mov
xor
push
lods
mov
arpl
lods
push
les
push
ret
mov
in
cmc
jno
adc
push
ret
push
or
adc
ja
scas
outsl
adc
out
call
addr16
lret
or
fucomi
insl
push
test
int
in
pop
push
pop
and
int
incl
cltd
pop
xchg
push
pop
lock
mov
pop
sub
test
dec
test
jl
push
jmp
mov
add
imul
std
decb
xchg
sbb
push
sub
cwtl
rcl
push
push
lcall
repnz
cmp
push
jo
sub
ficomps
push
int3
xchg
or
add
aaa
inc
jb
daa
push
ret
add
cmc
jl
repnz
enter
xchg
aaa
or
fld
fcom
mov
push
xlat
and
jo
inc
out
xchg
movsl
scas
inc
push
leave
mov
aas
push
pop
xchg
mov
adc
incb
pop
aam
out
popa
xchg
mov
iret
xor
ljmp
cltd
mov
shr
xor
push
std
xlat
sub
out
xchg
sbb
and
mov
push
pusha
sbb
inc
das
pusha
and
fnstenv
out
addb
pop
push
popa
push
push
in
pop
int
popf
inc
imul
insl
je
ds
das
pop
mov
lahf
sahf
sub
pop
push
mov
imulb
mov
jl
jl
sarl
xchg
sub
jp
insb
xchg
jae
arpl
pushf
scas
cwtl
ja
mov
popf
add
jl
or
lret
and
popa
int3
mov
mov
sarb
in
jecxz
push
punpcklwd
cltd
popa
mov
mov
leave
popa
xchg
mov
jno
or
and
inc
push
arpl
lcall
mov
jae
arpl
in
arpl
and
std
or
and
push
movl
sbb
rorb
outsb
leave
int3
jno
scas
inc
adc
or
push
insb
or
xlat
movsl
adc
cmp
je
xchg
add
in
fisubs
inc
arpl
rclb
jno
jl
fdivs
push
or
xor
add
pop
fisttps
mov
pop
shll
or
out
mov
xchg
jmp
lods
push
xchg
adc
psubusw
jo
xlat
mov
inc
mov
ss
jle
jle
push
fildl
enter
sahf
pushf
stos
mov
jo
es
bound
mov
mov
test
out
lea
les
or
pop
mov
jp
fwait
aas
popf
outsl
les
js
cmpsb
sbb
sbb
xor
jecxz
neg
aam
xchg
test
fucomip
fdivl
cmp
popa
test
jo
jns
lods
mov
sbb
les
jecxz
andl
push
enter
in
adc
fcoms
stos
mov
in
push
add
lods
pop
pop
rclb
ja
addl
aas
sub
sahf
out
pop
sbb
lahf
int
shll
scas
popf
xchg
push
lret
loope
add
int
shr
shlb
mov
sub
jl
pop
jmp
cltd
ficoms
cwtl
out
pushf
push
leave
jg
loope
fs
stos
subb
and
jmp
fsts
pop
push
popf
fnstsw
cmpsl
jl
or
rclb
lds
mov
mov
push
cmpsb
sub
cmc
je
push
rorb
pop
jl
orps
ja
xchg
jne
push
int3
pop
cli
push
mov
cmpb
jmp
and
ficoml
adc
xchg
gs
cld
lahf
lahf
imul
not
adc
jae
add
xlat
fs
and
and
shlb
in
push
mov
arpl
repz
fisttps
popa
stc
negl
jns
push
push
lea
inc
and
push
jg
and
jo
pop
in
mov
push
lea
mov
lea
sbb
test
scas
adc
push
mov
jo
fmull
push
cmp
daa
xor
pop
cmc
pop
jge
or
fstl
sub
adc
loop
leave
sub
lret
daa
or
pop
test
jo
into
scas
pop
lods
push
adc
shll
pushf
xor
fildll
ror
jg
sub
push
sarb
nop
cmc
movsb
jl
push
and
push
adc
xchg
rcll
lret
jmp
cmpsl
js
bound
mov
add
aad
int
lahf
jecxz
imul
fimuls
int3
fbld
sbb
popf
add
andl
adc
xor
stc
ljmp
xchg
je
leave
mov
add
sbbl
jae
pop
pushf
pop
mov
push
in
bound
push
lds
mov
and
or
aam
xchg
repnz
cmp
pop
test
lock
push
call
mov
jecxz
ja
popa
into
cmp
dec
mov
inc
insb
jmp
push
out
into
jb
ficoml
lock
cmp
loopne
push
test
mov
pop
int3
mov
add
pushf
nop
or
not
dec
mov
mov
mov
jge
pop
ds
mov
pop
cmp
push
cwtl
es
sti
repnz
sahf
mov
push
shlb
negb
rclb
ret
add
mov
or
enter
rcr
mov
in
test
ret
repnz
aam
cmp
sahf
push
icebp
test
out
mov
and
mov
push
and
and
mov
or
ja
mov
jbe
sahf
push
push
loop
pop
gs
pop
pop
shlb
fisttpll
xchg
nop
and
or
not
or
rcr
cmp
add
or
aam
inc
push
mov
lcall
mov
push
pushf
pop
clc
mov
mov
daa
mov
push
mov
mov
push
lock
int3
push
out
push
stos
mov
nop
stos
aam
prefetch
or
hlt
cmp
cld
enter
cmp
cwtl
mov
xchg
xchg
pop
bound
mov
les
divl
adc
test
ror
add
ljmp
or
negb
test
fcomps
repnz
jp
stos
shlb
add
cwtl
fsubr
push
rorb
add
lret
test
or
sarb
xchg
rorb
fidivs
inc
nop
int3
into
pop
div
and
pop
fiaddl
xchg
cli
or
repnz
stos
scas
cmp
xchg
lret
dec
lock
fsubl
push
push
out
xor
push
rolb
mov
ret
or
loopne
stos
cmp
rolb
repnz
scas
cli
jo
xor
call
push
and
lock
repnz
xchg
enter
fidivl
or
inc
in
mov
cld
xchg
and
out
push
fsubrs
scas
in
sbb
cld
lret
sub
jb
rcl
inc
push
les
dec
repnz
in
add
xor
clc
ljmp
inc
mov
inc
push
pushf
cwtl
add
or
mov
mov
stos
jp
push
testb
add
in
inc
rcrb
mov
xchg
push
pop
and
sahf
xor
xor
clc
xchg
inc
mov
nop
cmp
or
scas
rolb
fidivs
push
and
test
push
lret
cmp
fsubs
push
out
xchg
out
hlt
lcall
popa
pushf
and
fcmove
ljmp
lcall
mov
repnz
or
mov
rclb
mov
call
mov
enter
mov
outsl
push
test
fmul
adc
pop
nop
ret
jbe
rclb
xchg
xchg
inc
or
mov
push
push
shll
pop
mov
jp
mov
call
enter
xchg
xor
xchg
mov
jmp
testb
sahf
or
xchg
cltd
mov
sub
es
cmpsb
enter
rcrb
xchg
bt
mov
call
sahf
ds
scas
add
pop
mov
mov
rclb
mov
mov
add
aam
push
and
int3
sahf
pop
nop
push
cmpsb
pop
xor
jbe
mov
nop
scas
inc
mov
repnz
push
ljmp
sbb
out
xor
xchg
add
cmp
negb
out
and
or
mov
add
stos
sbb
dec
dec
into
mov
xor
hlt
adc
mov
and
add
dec
adc
sar
sahf
clc
mov
or
call
pop
cmp
mov
fucomip
mov
rcrl
lret
fs
aam
xchg
push
rolb
xchg
stos
mov
xchg
ret
fisttpl
ljmp
push
loop
pop
repnz
or
lret
mov
divl
mov
int3
push
aam
mov
inc
pop
mov
and
push
sahf
outsl
scas
xor
inc
push
rcrb
lahf
stos
sbb
inc
xchg
stos
movsl
xchg
aam
push
jecxz
adc
mov
xchg
xor
insb
jg
rolb
mov
dec
scas
cmp
in
push
repnz
imul
out
add
push
xor
xchg
stos
lret
pinsrw
pop
sbb
sub
in
or
test
sub
int3
xchg
cmp
lcall
lret
mov
fisttps
fdivp
call
inc
dec
cmp
and
or
pop
movb
rcr
jo
or
sahf
les
int3
lret
mov
sti
mov
fdivrs
pop
scas
mov
out
movsb
xor
pop
xchg
lret
push
sub
xchg
mov
cld
ficoml
nop
and
and
inc
xor
xchg
lock
sbb
xor
lret
cwtl
mov
in
mov
outsb
pop
cmpsl
shl
or
inc
adc
call
push
xor
cwtl
test
xchg
adc
dec
push
mov
lret
outsb
sub
and
mov
ficomps
clc
xlat
mov
xchg
ss
push
mov
or
ljmp
mov
sahf
mov
mov
out
mov
cld
pushf
mov
push
notb
jl
enter
add
cmp
add
push
cwtl
es
mov
sahf
les
or
mov
jnp
call
in
ds
push
pop
call
adc
dec
xor
or
mov
mov
mov
and
cmp
fdivrs
and
mov
lock
cmp
mov
sbb
xchg
call
sbb
inc
repz
or
ljmp
aam
into
es
and
mov
mov
push
lcall
clc
pop
or
sub
jle
or
xchg
fdivr
ss
fmuls
out
idivb
dec
or
xor
fidivrs
or
xor
mov
sub
xor
int3
mov
xchg
and
pop
push
fadds
pusha
add
mov
push
add
lcall
stos
pop
pushf
lock
pop
dec
mov
push
mov
pop
call
clc
sar
mov
lods
cmp
int
into
inc
or
shrb
imul
push
int3
pop
mov
xlat
scas
jmp
push
add
ret
xor
pop
add
jns
pushf
ja
push
xor
hlt
call
pop
mov
pop
pop
jecxz
lock
fsubrs
jnp
clc
pop
pop
repnz
out
or
cli
pop
push
push
into
clc
and
sahf
mov
pop
lcall
xchg
enter
mov
mov
cmp
out
mov
test
xchg
arpl
and
lret
push
push
mov
setle
test
or
call
shrb
mov
dec
pop
cwtl
call
mov
jp
or
test
or
les
xchg
cmp
ja
push
ds
rorb
cmp
dec
dec
adcb
pop
enter
je
repnz
insl
test
jmp
sub
xor
jmp
add
hlt
aam
xchg
fsubr
dec
pop
xchg
push
lcall
ret
xor
xchg
mov
pop
push
xchg
adc
outsb
shrb
enter
loop
fnop
sti
xchg
lcall
fcomps
cmp
test
cmc
hlt
mov
xchg
push
or
adc
movl
xor
push
push
pop
lock
jno
stos
cld
shl
add
jp
negb
push
repz
push
inc
cmpsl
addl
popf
ficoms
or
test
push
xor
xchg
mov
lods
add
push
cmp
push
pop
or
xchg
lcall
stos
ss
aas
inc
push
mov
cmp
not
pop
cmpb
pslld
or
repz
mov
popf
add
fdivrs
or
mov
pop
add
clc
out
mov
lcall
inc
mov
mov
push
ljmp
pop
push
ljmp
xor
pop
xchg
pop
cmc
ret
push
lcall
sbb
data16
jbe,pt
test
xchg
push
jp
or
push
mov
sahf
scas
push
pop
xor
ret
hlt
push
in
test
scas
and
or
int3
ds
mov
out
shlb
nop
mov
setp
push
xor
fcoml
mov
fsubs
lds
sahf
or
pushf
lcall
mov
pop
in
or
lret
stos
cmp
fsubrs
test
jp
outsb
mov
jle
push
into
push
int
pop
pop
pop
add
cli
sbb
pushw
es
enter
int3
add
out
pushf
rcrb
scas
mov
mov
jmp
mov
ja
nop
divl
hlt
cwtl
enter
lock
cli
movsl
pop
rclb
cmp
ljmp
xchg
mov
cltd
out
push
or
mov
out
incb
mov
add
push
rep
sti
and
repnz
hlt
push
mov
aam
xchg
xlat
shl
scas
dec
ss
ret
outsl
fisttpll
ljmp
shlb
push
cmp
fisubrl
stos
mov
add
clc
cmp
mov
call
pop
pop
add
pop
cmp
mov
mov
out
lret
pop
xor
sahf
and
les
cs
dec
test
je
gs
hlt
mov
clc
aad
or
popf
xor
mov
mov
xor
and
add
stos
xchg
sub
pop
clc
pcmpeqd
push
xor
mov
hlt
les
pop
inc
pop
push
idivb
push
add
xor
mov
push
add
xor
cmp
scas
push
cld
cmc
mov
and
fsubr
out
les
out
mov
sbb
sahf
mov
negb
push
mov
mov
cld
fsubr
imul
pop
push
mov
les
add
inc
sub
mov
scas
ficomps
repnz
pop
jnp
cwtl
movsl
push
cmp
call
jb
mov
rcrl
jge
mov
push
push
faddp
repz
pop
test
neg
stos
pop
jo
out
lock
clc
cmp
test
pop
xchg
push
aam
xor
scas
push
lret
ljmp
fimuls
stos
hlt
pop
ret
add
push
pop
xchg
add
xchg
sbb
jnp
lret
or
out
addb
dec
movsb
dec
int3
xor
xchg
mov
mov
and
imul
mov
xchg
xchg
push
shlb
test
or
clc
or
lret
mov
cwtl
stos
lock
fcomi
repnz
mov
mov
scas
in
test
int3
xor
push
mov
cmp
test
xchg
mov
js
fwait
pop
mulb
mov
mov
lcall
inc
and
repnz
inc
mov
jmp
add
push
dec
mov
xchg
fs
ljmp
mov
jp
add
lock
push
test
rcrl
sbb
call
sbb
test
test
xor
ret
mov
cmp
mov
into
fiadds
mov
pusha
push
inc
push
mov
mov
into
cmp
lret
mov
cld
jmp
mov
pushf
adc
notb
mov
adc
cmp
xchg
data16
sarb
test
mov
jne
hlt
lret
fistps
ficoms
inc
mov
mov
ret
setl
add
mov
iret
xchg
pop
aam
mov
add
into
pop
and
adc
jle
or
mov
nop
mov
sub
ret
mov
stc
push
pop
mov
adc
incb
ret
rolb
jb
shl
dec
mov
cmpsl
ror
pop
stos
lahf
stc
mov
jnp
dec
ret
push
das
pop
xchg
stos
add
sarl
cmp
test
xor
lock
fiaddl
add
and
cmp
pop
rcr
clc
mov
js
cli
iret
mov
lahf
mov
sahf
loop
aam
ficompl
push
pushf
push
fld
mov
out
scas
shr
shrl
fcmovnbe
mov
sub
fisubl
cld
jbe
jb
cmp
add
mov
hlt
shr
cmp
pop
push
lock
fiadds
ffree
cs
push
push
mov
pop
stos
and
repnz
or
enter
leave
mov
cmp
sarb
ds
pop
into
scas
std
mov
pushf
enter
mov
cmp
stos
sahf
pop
pop
repnz
neg
adc
push
shlb
shl
mov
mov
xchg
xor
lret
xor
or
test
push
lret
cmp
enter
mov
mov
cmp
xchg
popa
es
push
cld
adc
pop
mov
into
repnz
or
fadds
mov
mov
mov
inc
nop
mov
fidivrl
cld
shlb
shrb
push
xchg
aas
push
shlb
lret
scas
sbb
gs
test
push
push
mov
cmp
rol
decb
or
repnz
adc
es
aas
adc
push
mov
jnp
cld
push
test
and
mov
test
dec
xchg
sub
ret
or
jb
add
cmp
xor
repz
pop
add
pop
push
push
push
es
je
rorl
cwtl
push
cli
and
enter
jp
rcrb
jb
add
mov
jns
mov
add
pop
push
cmp
cmpsb
xor
clc
decb
mov
cmp
fcompl
ret
repnz
cmp
lret
fcomps
add
ds
sti
pop
mov
out
shrb
out
xchg
or
lock
cmp
mov
mov
out
pop
rcrl
cmp
mov
xchg
sbb
add
mov
pop
cmpsb
jb
xchg
dec
xchg
xchg
ret
lock
mov
mov
cmp
mov
mov
mov
xchg
push
pop
sbb
mov
push
movsb
cmp
add
xchg
shrl
dec
pop
mov
je
push
mov
xchg
jno
nop
mov
sub
fsubrs
xor
aam
mov
xchg
push
repz
add
shl
or
test
xor
sahf
scas
repnz
mov
lret
fsubrs
add
test
ljmp
lds
xor
pop
rolb
out
aam
clc
sub
lcall
fiaddl
inc
sub
data16
push
sub
repnz
and
sub
lret
mov
arpl
hlt
cmp
add
push
outsb
and
cwtl
inc
lods
adc
lret
cmp
or
js
pop
sahf
int
pop
cmp
inc
call
pop
scas
push
testb
dec
fcoml
iret
ds
pop
add
mov
pop
aaa
mov
adc
jge
add
pushf
mov
cmp
mov
xchg
push
pop
or
cmp
mov
nop
rclb
xchg
fdivrs
dec
lcall
add
pop
mov
and
icebp
inc
iret
xchg
out
mov
clc
sahf
inc
in
inc
inc
fdivrl
push
jmp
push
mov
les
dec
dec
pushf
pextrw
xor
or
pusha
sahf
jecxz
lcall
jge
hlt
fimull
push
or
repnz
mov
rclb
stos
push
nop
hlt
adcb
es
lahf
ljmp
arpl
cmc
mov
xor
mov
mov
push
or
stos
aas
arpl
mov
or
mov
jb
aad
scas
jb
push
push
push
pop
or
mov
mov
stos
push
sub
fldt
fsubr
cmp
fiadds
rol
or
rolb
ljmp
cwtl
push
xor
mov
aas
xchg
lcall
rol
into
and
mov
idivb
push
add
dec
filds
lock
xchg
fnstenv
lock
inc
cli
test
sahf
or
xor
xor
mov
cmpsb
mov
clc
clc
aas
shrb
pop
cwtl
and
lret
inc
rorb
ficomps
xor
call
faddl
mov
pop
lock
pop
les
ljmp
sbb
pop
pop
mov
push
dec
mov
repz
pop
xor
adc
call
pop
sbb
pop
outsl
test
rcrl
lret
lcall
test
mov
lret
test
sub
lret
fcomps
xorl
ds
inc
push
pop
call
rcrb
int3
cwtl
or
add
dec
aam
clc
xor
les
ret
cmp
fdivs
pop
call
ljmp
stos
dec
aas
mov
cli
mov
scas
fists
in
call
pop
scas
aas
ror
or
fmul
out
dec
lods
dec
incl
fstl
mov
add
clc
xor
test
mov
xchg
pop
fcomps
inc
or
test
mov
add
cwtl
mov
mov
xchg
inc
ljmp
push
and
lcall
jnp
fdivrs
out
shlb
mov
clc
pop
push
jae
sbb
jnp
fsubrp
std
arpl
mov
cmp
mov
cmpsb
adc
nop
sub
hlt
imul
stc
push
push
js
cli
mov
jns
pushf
js
push
mov
cli
pop
fmulp
in
icebp
xor
push
ljmp
aam
xor
imulb
push
rcr
mov
nop
add
mov
mov
pushf
jne
scas
lods
imul
stos
loopne
into
pop
mov
sub
cli
ficoms
ret
ds
mov
mulb
mov
scas
dec
ret
dec
or
dec
push
outsb
push
cld
push
push
ds
ret
inc
push
dec
aaa
add
outsb
ficoms
and
sbb
xor
mov
push
mov
shrb
jmp
mov
dec
mov
jnp
ret
mov
les
lcall
repnz
mov
icebp
clc
or
inc
xor
sbb
mov
add
enter
sbb
ficompl
fwait
sbb
cmp
lahf
mov
rol
ret
insb
and
mov
test
xchg
int3
jb
jp
pop
xchg
out
hlt
loopne
movl
stos
mov
add
data16
push
inc
bound
jp
pop
movsb
lret
fsubl
faddp
lcall
sar
fstl
xor
pop
mov
lret
call
pop
aas
push
pop
lcall
loop
in
xchg
bound
les
lret
ret
stos
sar
pop
mov
adc
rolb
mov
call
sub
stos
cld
or
add
cmp
fidivrs
rcrl
sub
push
clc
mov
mov
into
enter
shrb
mov
cld
call
jne
sbb
test
dec
hlt
dec
je
insb
outsb
stos
xchg
ja
mov
out
inc
stc
jmp
int3
sahf
aam
mov
cmp
mov
call
sbb
add
pop
pop
and
dec
jae
dec
popa
xor
aam
mov
mov
push
pop
mov
jmp
xchg
push
and
cmp
mov
or
pop
jle
jns
syscall
xor
les
xor
shlb
or
mov
pop
int3
xor
cwtl
repnz
push
cld
ljmp
mov
pop
in
xchg
or
rolb
mov
sbb
mov
push
mov
mov
or
dec
add
cs
cmpsb
pop
and
xchg
fmull
pop
test
push
clc
rolb
out
pop
mov
fcmovnb
into
xchg
mov
inc
pop
xor
fdivp
pminsw
cmp
aas
sbb
add
stos
pop
adc
sbb
mov
test
ret
repnz
mov
xchg
fcomp
jmp
fnstenv
add
out
and
test
into
xchg
dec
push
stos
pop
mov
int
dec
mov
and
inc
pushf
add
stos
mov
xchg
pushf
into
xor
mov
int3
or
xchg
das
dec
dec
or
imull
leave
repnz
movsb
lcall
shl
add
xor
mov
jle
fs
cmpb
push
call
aas
insb
or
dec
xchg
outsl
mov
mov
cmp
mov
lock
lahf
pop
arpl
fcomp
push
push
ja
mov
push
push
sbbb
into
hlt
rorb
lahf
cli
imul
pop
sub
sub
mov
mov
js
jo
js
add
aaa
inc
cmp
das
notb
insl
pop
shufps
into
shlb
les
push
inc
inc
jnp
sbb
or
pop
mov
xlat
mov
cld
and
inc
jecxz
test
lods
call
fmulp
lcall
jae
fdivrs
mov
call
iret
adc
mov
sbb
sub
mov
push
pop
mov
add
mov
cwtl
or
mov
mov
pop
int
ror
mov
aad
jno
sbb
repz
pop
lock
ljmp
xor
pop
sarl
int3
fdiv
stos
mov
test
inc
vmread
out
push
decb
sbb
shrb
sahf
fwait
pop
push
test
push
push
lcall
test
push
inc
and
rcr
lock
pop
call
fidivrl
out
orps
ljmp
mov
push
xchg
aam
push
enter
scas
mov
xchg
dec
push
inc
jnp
add
insb
insl
lock
ljmp
sbb
mov
pop
xor
enter
ficompl
ds
pusha
pop
add
sub
sbb
xlat
mov
adc
push
clc
stos
dec
dec
ret
lcall
into
out
inc
fwait
mov
pop
fisubrl
push
xor
push
aad
dec
ds
rcr
and
cltd
mov
inc
call
out
add
stc
cwtl
clc
or
push
fidivl
aam
ret
mov
lcall
xchg
cmp
into
xchg
xor
xchg
pop
jmp
in
sub
push
jbe
xor
mov
push
aam
cmp
xchg
call
add
idiv
les
rol
enter
mov
sbb
adc
pushf
repnz
idiv
dec
push
mov
inc
mov
lret
xchg
cmp
pushf
push
ljmp
jnp
aad
clc
jne
fsubs
std
stos
jbe
inc
lcall
test
imul
push
cld
lds
mov
mov
leave
ret
sub
aam
pushf
nop
cmp
pop
or
sub
add
stos
mov
mov
clc
mov
push
mov
push
push
pop
or
inc
inc
mov
lret
cld
adc
mov
jbe
push
dec
clc
lock
out
jo
inc
cwtl
mov
test
enter
clc
push
mov
pop
pop
ljmp
aad
lcall
pop
adc
insl
es
negb
dec
fimull
inc
adc
jmp
hlt
mov
enter
and
pop
xor
cld
push
sahf
out
es
nop
rorb
add
pop
cmp
fisttpl
fidivs
cmc
call
nop
sahf
push
push
cmp
ret
out
in
scas
mov
dec
out
jge
mov
or
or
add
jg
call
popa
inc
das
xor
cmp
cwtl
xchg
xor
xor
loope
stos
std
jae
mov
cmp
mov
nop
fistl
dec
out
ficompl
cmp
mov
fisubrl
aam
or
enter
or
sub
call
cmp
xchg
mov
mov
sbb
mov
fs
add
shrb
push
lahf
sahf
aas
mov
clc
xchg
shl
ret
pop
jnp
push
fdivr
or
call
lret
lock
aad
mov
push
fiadds
test
std
fwait
xchg
push
mov
ds
scas
xchg
fiadds
incb
fstpl
pop
fsubl
mov
cld
dec
scas
mov
push
sarb
pop
mov
jbe
je
dec
and
cmp
xor
stos
or
jecxz
sub
dec
fs
fmulp
imul
push
mov
xchg
xor
cmp
or
idivl
icebp
aam
mov
fsubp
test
cmp
mov
mov
std
pop
divl
pop
lock
cli
xchg
add
cmpl
push
test
fadd
sbb
xor
arpl
push
pushf
mov
divb
add
leave
nop
rcll
in
shlb
add
cli
test
mov
xor
add
gs
cmp
pop
pop
ss
ret
and
xchg
ds
shr
rorb
push
or
xchg
push
int3
stos
pushf
testl
rcl
ret
pop
pop
mov
fidivrl
clc
in
call
imul
test
mov
fwait
insl
lret
call
xchg
jmp
mov
inc
and
dec
test
cmp
push
int3
push
imul
dec
adc
or
rorb
dec
dec
dec
mov
xchg
xor
shlb
mov
imul
sahf
stos
jns
lcall
pop
jmp
or
jl
fcoml
pushf
repnz
xchg
or
sbb
mov
adc
mov
aam
cmp
test
push
xchg
and
push
cmp
stos
hlt
push
cltd
pop
scas
test
cli
repnz
cltd
ret
add
dec
in
and
pop
push
add
xchg
ret
pusha
aad
mov
mov
arpl
aas
js
test
adc
scas
fidivs
push
ror
pop
lahf
sub
adc
ficomps
clc
xor
ret
cmp
pop
pop
cld
xor
pop
rorb
or
mov
add
add
mov
or
scas
pop
clc
in
ret
mov
ljmp
jnp
pop
stos
out
cmp
dec
rclb
repz
sub
aam
or
fld
lret
pop
xor
into
scas
inc
out
cmp
rsqrtps
cs
xchg
ficoml
scas
pop
es
and
cld
nop
ljmp
pop
lock
cwtl
mov
sahf
aam
negb
lods
sbb
es
xchg
je
stos
xor
pop
stos
push
jnp
ret
mov
mov
jmp
clc
enter
add
xchg
and
ficoml
cmp
cwtl
mov
push
test
sti
jp
call
sahf
cli
xchg
push
push
fadd
lds
pop
aam
std
xchg
pop
add
ret
mov
push
in
fimull
sti
test
sbb
mov
mov
repz
push
stos
fmulp
sti
out
imul
pop
mov
adc
push
mov
sahf
push
pop
mov
lret
cwtl
mov
iret
stos
mov
fisttps
repnz
pop
push
push
cmpsl
fbld
push
mov
mov
mov
mov
adc
add
stos
call
lret
and
pmaxsw
into
dec
shrb
fdivrs
mov
xchg
sub
or
jmp
push
enter
cwtl
and
mov
ljmp
idivb
int3
mov
push
mov
in
cmp
pushf
ljmp
cmpb
mov
pop
je
or
setbe
rcrb
push
xchg
shl
imul
xchg
mov
push
ret
dec
pop
sidtl
inc
sbb
js
ror
loop
fidivrl
aam
call
hlt
std
lock
fcoml
stos
rcrl
mov
push
ret
pop
jae
mov
std
data16
mov
ds
into
lock
fwait
insl
cmp
pop
fdiv
and
sbb
mov
xor
pop
sbb
push
cmp
ja
into
jb
data16
aam
pushf
sub
sbb
inc
int
push
cwtl
xchg
out
lock
clc
or
cld
movsb
out
movsl
ds
push
sbb
fidivrl
leave
es
add
jae
movsl
fs
test
and
mov
fstpt
mov
xor
ds
int3
pop
clc
sub
ret
mov
xchg
fmul
xor
pop
sar
push
add
cwtl
or
inc
mov
mov
mov
clc
jp
pop
jns
fisubs
out
test
pop
mov
or
mov
jnp
call
out
cmp
aam
dec
pop
dec
insb
dec
xor
push
push
jp
pop
mov
pushf
xchg
rcrl
ss
pop
stos
add
push
aas
mov
add
or
push
xor
unpckhps
xchg
xor
cwtl
scas
mov
jp
xchg
inc
test
push
test
pop
mov
push
inc
sar
sti
jg
pop
arpl
cld
xor
mov
int3
adc
in
sti
push
pop
in
out
les
xor
and
ljmp
mov
shrb
faddl
mov
jle
dec
cli
mov
xchg
adc
out
cwtl
jns
add
scas
jo
pop
in
in
xchg
test
dec
add
stos
sahf
xchg
js
loope
or
push
in
loope
jecxz
es
mov
xor
push
xchg
adc
or
test
adc
pop
pop
outsl
or
cmp
sahf
pop
loope
cmp
hlt
pop
jnp
or
sub
ret
cmp
jb
data16
lret
imul
adc
mov
mov
pushf
mov
cmc
pushl
out
push
cmp
lock
fisubrs
sahf
out
cmp
add
or
ret
ljmp
lahf
and
ret
jg
mov
sarb
not
mov
inc
sub
push
bound
fldl
nop
push
lock
jp
aam
pop
lcall
cmc
add
scas
orb
jbe
inc
fcom
jae
push
arpl
xchg
call
fsubs
rcrb
les
inc
shlb
fadds
repnz
pop
and
sar
clc
mov
mov
ret
int
pushf
push
enter
ficomps
add
adc
lcall
rorl
xlat
dec
repnz
pop
xchg
cld
pushf
pop
push
xor
mov
imul
daa
les
fcomp
push
je
lods
push
hlt
mov
xorb
out
call
or
test
mov
andl
es
ret
shll
jbe
and
cmp
fsubl
pop
lahf
push
mov
pushf
mov
add
aam
rorb
loopne
pushf
cmp
int3
mov
inc
cwtl
mov
dec
jl
dec
lds
cltd
sahf
lret
inc
push
rorb
cwtl
and
mov
mov
xchg
push
mov
enter
repz
in
out
movsl
int3
shrl
and
fdivl
xor
add
mov
mov
mov
xchg
push
je
mov
mov
pop
push
mov
pushf
fdivrl
lret
fisubrs
out
push
cmp
push
out
hlt
mov
out
dec
pop
fdivrp
icebp
xchg
pop
nop
fdivrs
fidivl
xor
mov
shl
repz
cld
ss
pop
nop
dec
out
mov
lret
into
sbb
sbbb
mul
push
mov
out
xchg
mov
sbb
pushf
push
sbb
inc
aad
aam
mov
cmc
ljmp
ja
sbb
out
pop
sub
pushf
mov
ret
inc
nop
and
sbb
aad
hlt
pop
mov
scas
push
mov
enter
xor
mov
out
add
mov
pop
mov
inc
mov
mov
cwtl
out
pop
lods
sahf
ret
call
scas
cmpsl
and
call
jmp
jbe
idivl
ret
mov
or
mov
cmp
pop
ret
lret
es
push
cmp
lret
fcoms
ljmp
cmp
mov
mov
pop
xchg
bnd
negb
cmp
nop
stos
mov
ret
mov
daa
test
mov
repnz
xor
xor
ljmp
pop
xor
sarb
out
dec
add
or
xchg
pop
pop
inc
mov
xor
jnp
lock
pop
mov
jne
pop
pop
dec
into
dec
dec
pushf
mov
dec
pop
ljmp
add
std
pop
int3
xor
pusha
sub
mov
cli
and
xlat
cld
into
clc
mov
and
xchg
les
movl
sub
jge
xchg
cmc
add
push
push
lcall
clc
and
call
lret
sbb
into
test
sahf
dec
dec
push
inc
cwtl
movb
subl
sbb
or
call
lock
mov
shr
mov
mov
lcall
push
pop
repnz
scas
stos
pop
mov
push
dec
aam
fwait
jbe
setb
pop
das
pop
enter
hlt
inc
es
rclb
cmpsl
lock
into
fdivrl
pop
lock
pop
adc
or
faddl
mov
or
pop
nop
fdivs
fwait
sahf
rol
or
inc
into
ret
lcall
stos
mov
pop
out
lsl
xchg
test
add
test
xchg
pop
and
ljmp
test
sti
add
stos
clc
mov
mov
mov
rorb
test
pop
jns
cli
mov
test
hlt
dec
xacquire
imul
notb
fidivs
cwtl
add
mov
add
xchg
stos
and
in
jecxz
pop
pop
mov
repnz
xchg
ss
xchg
mov
pmuludq
addb
or
xchg
add
out
fcoms
arpl
mov
lock
fistpl
lock
cwtl
inc
int
mov
inc
test
push
lret
sub
jp
pushf
je
mov
test
jg
push
std
mov
push
add
xchg
ds
or
jb
outsl
es
pop
xor
add
test
subb
mov
aas
int3
sub
scas
pushf
mov
sarb
imul
loope
fisubrl
cld
mov
push
lcall
pushf
jne
pop
cmp
mov
inc
popa
xchg
test
fimull
cmp
faddp
mov
mov
lret
mov
pop
and
mov
pop
xchg
inc
sbb
mov
push
dec
or
and
jae
xchg
lock
test
scas
xchg
aad
nop
inc
push
push
jmp
xchg
or
mov
cld
xchg
ffree
dec
test
pop
xchg
add
loop
clc
jecxz
pop
sbb
and
and
daa
cmp
repnz
xor
ret
insb
xor
and
jbe
call
xchg
xchg
lahf
mov
stc
cltd
mov
mov
or
enter
cmp
pop
ret
int3
push
fdivl
outsl
xor
lcall
xchg
push
fnstsw
call
cli
into
rcrb
dec
push
or
fisubrl
mul
adc
pop
mov
inc
cmpsl
fstl
js
inc
mov
lock
daa
jmp
add
ret
ret
or
pop
lret
sti
nop
shl
ljmp
in
imul
aam
cmp
mov
stos
decb
mov
pop
xlat
int3
and
mov
inc
pop
mov
or
dec
rcrb
js
inc
out
fadds
add
mov
loop
es
ja
push
repnz
setp
push
nop
and
mov
mov
or
pop
jb
add
mov
shrl
mov
push
test
pop
push
dec
pop
repnz
test
cs
cld
subb
lahf
xor
sarb
das
sahf
mov
xchg
sub
mov
xchg
push
cltd
pop
lcall
nop
rol
sub
out
fidivrl
add
xchg
xchg
aam
rcr
stos
dec
lret
mov
std
dec
or
enter
jae
aam
lret
stos
push
int3
test
or
jne
clc
iret
adc
cli
idivb
jns
stos
ficompl
es
clc
add
or
pop
pusha
dec
nop
pop
rolb
push
repnz
mov
fidivrl
fsubl
pop
and
test
xchg
shrl
and
out
int3
lret
xchg
loopne
lahf
cmp
pop
les
out
or
jns
ljmp
push
clc
je
popa
in
cmpsl
push
inc
mov
mov
rolb
mov
ret
nop
lock
fisttpl
mov
mov
cmpsl
insb
and
rcr
pop
mov
dec
xchg
lret
call
mov
lahf
lret
or
mov
adc
dec
xlat
or
lret
clc
out
mov
xor
xorl
inc
cmp
sub
subps
mov
xchg
js
jne
cli
mov
jnp
hlt
push
ret
jbe
inc
fs
ljmp
out
push
movsl
in
inc
test
into
pop
inc
push
mov
xchg
cmp
cmp
mov
jecxz
rcll
hlt
mov
idivl
enter
inc
bnd
dec
lret
pop
adc
or
ds
leave
mov
lret
sahf
call
mov
pop
ret
add
pop
les
enter
xor
test
das
ret
ljmp
sbbb
lock
push
aaa
cmp
add
push
in
fadd
mov
fcoms
mov
inc
test
lret
repz
les
jo
int3
and
dec
popa
dec
and
add
ljmp
pop
jg
mov
dec
sbb
popa
push
clc
adc
test
mov
fidivrs
pop
mov
lcall
push
push
or
enter
push
xchg
pop
sahf
sti
call
hlt
sahf
into
mov
mov
data16
aaa
lret
loope
imul
mov
scas
mov
ljmp
lret
hlt
js
mov
add
or
stc
fldcw
xlat
mov
and
int3
and
push
xchg
lock
mov
stos
sub
push
hlt
cmp
into
shl
cmp
pop
sar
in
add
fwait
clc
sub
lret
jb
xor
mov
inc
test
ljmp
mov
test
and
pop
xlat
test
roll
cmp
push
aam
or
loope
sahf
or
fsubl
pop
out
cld
addl
lret
call
rcll
arpl
jbe
addb
cmp
xchg
int3
or
rolb
pop
repnz
imul
sub
pop
or
in
or
aad
cmp
mov
jmp
movsb
mov
out
dec
lret
mov
push
lret
xor
ret
add
stos
and
cmp
cmovbe
repnz
jnp
add
fcmove
xor
push
outsb
es
enter
jp
ret
fsubr
das
fadds
mov
xchg
cwtl
sub
fdivrp
ljmp
int3
into
push
out
jmp
hlt
pop
jp
or
xor
mov
mov
mov
push
clc
xorl
or
loop
sbbb
mov
loopne
les
mov
scas
or
adc
cmp
lock
xor
fadd
clc
adc
fwait
in
cmp
negb
lds
scas
cmp
mov
ljmp
fisttpl
cmp
test
js
outsb
mov
mov
lret
in
imul
mov
cmp
repnz
test
xor
aam
mov
data16
inc
pop
dec
rcr
ljmp
xor
sbb
aam
mov
mov
hlt
mov
add
aam
pop
int3
mov
push
sbb
int
dec
push
pop
fadds
test
nop
xor
mov
pop
xchg
inc
jbe
xorb
mov
mov
and
mov
loop
call
test
and
pop
hlt
dec
fcmovb
inc
mull
ffreep
xor
pushf
lcall
inc
jmp
ljmp
pushf
jge
push
cld
xchg
out
mov
js
pop
mov
push
inc
mov
les
shlb
call
dec
push
push
pop
cmp
test
hlt
js
mov
push
scas
push
jl
adcb
sub
and
dec
lock
aam
pop
les
repnz
ret
fistl
mov
inc
fdivs
inc
int3
ret
dec
xor
cmp
add
jb
gs
mov
movsl
xor
push
repnz
out
mov
ja
lods
xor
cld
push
mov
in
insb
mov
mov
fdivrl
push
lcall
imul
dec
push
pop
fcoml
adc
fidivrs
fsubs
mov
pop
je
xchg
pop
adc
pop
fadd
icebp
clc
add
xchg
push
cmpsl
jp
mov
push
pop
enter
pusha
nop
cwtl
sub
push
cmpsl
cmp
bsf
pop
scas
daa
sub
fidivs
lcall
pop
imul
and
jmp
mov
xor
inc
push
and
cld
add
clc
cltd
cli
mov
lret
movsb
mov
dec
pop
or
jp
ficoml
and
sar
repz
into
pop
cmp
mov
sbb
ljmp
test
aad
or
jmp
shll
shll
pminub
leave
cmp
mov
jb
push
lcall
add
adc
mov
out
in
push
lret
mov
dec
push
out
test
cmp
xor
xor
pminub
xchg
pop
dec
mov
out
inc
enter
xor
shrb
lahf
cs
pop
xchg
dec
addb
adc
dec
out
into
xor
outsb
mov
or
stos
mov
dec
test
jns
mov
mov
ljmp
stos
into
loopne
fiaddl
add
ret
scas
or
ds
lock
into
enter
notb
in
pop
fistpl
push
nop
pop
cmp
xor
cmp
push
fst
cmove
idivb
pop
pop
imul
add
push
out
fcomps
mov
popf
or
xor
stos
sbb
cld
shlb
cmp
or
cli
sub
aad
insl
mov
negb
xchg
mov
sub
out
and
repnz
fisubs
stc
xchg
push
fcmovb
lcall
push
jmp
pusha
lock
int
in
rcll
cmp
test
sub
mov
and
fs
incb
dec
rcrb
add
mov
sbb
inc
rclb
and
les
push
ja
out
inc
or
mov
inc
mov
add
xchg
sbbb
je,pt
aam
cmp
repnz
mov
xor
pop
inc
clc
enter
rolb
rcrb
into
jp
mov
sub
mov
test
xor
ret
enter
mov
sbb
imul
clc
lock
cmp
pop
jmp
or
push
ror
mov
sub
pop
faddl
sarb
out
push
sbb
clc
in
ljmp
les
pushf
cld
mov
sub
xchg
xchg
cmp
push
push
sahf
imul
or
les
or
fmul
outsb
out
sbb
add
adc
cmp
xchg
push
lret
shrb
xor
mov
pushf
cwtl
fstps
into
rorb
jmp
mov
cltd
push
fistpll
ss
pop
out
pop
sbb
sbb
sbb
dec
outsl
xchg
add
pop
and
cmpsl
ljmp
pusha
clc
pop
mov
xchg
testl
aam
shlb
stos
cli
jae
ret
ljmp
cli
xchg
lret
and
xlat
push
insb
mov
adc
cld
or
push
push
lock
rorb
notb
fsubrl
xorl
lret
shrl
out
sbb
pop
scas
pop
or
push
pop
call
mov
popf
fwait
pop
enter
hlt
int3
mov
pop
es
adc
xchg
xchg
inc
sbb
mov
sahf
mov
sub
jnp
clc
push
stos
ficompl
push
mov
add
inc
ljmp
jp
nop
inc
xchg
add
cmp
stos
push
pop
out
int
fimull
xor
push
ljmp
les
imul
xchg
xor
test
push
lret
sahf
imul
lret
dec
into
push
cmp
sbb
jecxz
std
mov
test
jmp
and
jbe
outsb
outsl
divb
mov
test
int3
mov
call
shr
into
aam
mov
ficoms
ffreep
xchg
nop
scas
push
xchg
and
fsub
int3
call
cmp
mov
mov
pusha
xchg
lcall
cmp
mov
mov
test
testb
mov
scas
ljmp
mov
lcall
jnp
enter
cmpb
aad
adc
movsb
dec
out
dec
out
xor
cmpsb
jbe
inc
call
jnp
mov
repnz
cld
add
lret
xchg
sarl
push
dec
shl
xchg
fwait
xor
rorb
or
mov
out
add
cli
mov
sub
call
mov
into
push
xor
rolb
jp
push
lock
out
push
lcall
push
je
or
mov
popa
int3
add
pop
xchg
mov
mov
repz
push
sti
in
ficompl
rdmsr
adc
mov
pop
jo
or
aam
cmp
movsl
inc
insb
cwtl
fucomi
int3
leave
and
jg
fldt
cmp
or
push
or
add
mov
jb
outsb
push
inc
dec
dec
pop
xor
out
hlt
fcomps
add
and
push
and
test
sahf
int3
ds
nop
sar
out
call
hlt
cld
push
mov
jne
cli
push
mov
pop
mov
pop
mov
rclb
stos
push
mov
jmp
aam
inc
fbld
cli
cmpsl
scas
enter
cwtl
xchg
pop
add
clc
in
fdivr
rolb
sub
cmp
inc
mov
aas
in
cmp
cmpsb
jbe
sahf
enter
nop
xor
cli
jge
sbb
jbe
test
pop
xchg
fcompl
jmp
fsubrl
cld
lret
cmp
imul
rcrb
xor
call
int
fiaddl
lret
sbb
aam
jle
push
clc
xchg
dec
dec
add
stos
test
hlt
add
xor
mov
mov
loop
cwtl
mov
cmp
cmc
nop
rclb
or
loopne
std
lret
cmp
pop
syscall
aad
fdivs
mov
and
popf
push
adc
push
or
ds
or
mov
inc
add
neg
out
lret
or
pop
mov
data16
push
push
inc
pop
xchg
push
push
sti
push
shl
stos
adc
nop
or
pop
fwait
scas
push
sbb
ss
int3
and
fcom
testl
lret
jbe
pop
xor
into
push
mov
shl
pop
sub
cmp
pop
jb
fdiv
bound
xchg
fbld
pop
pop
fldcw
pop
push
mov
ret
mov
pop
jb
lcall
sub
xor
jae
mov
in
inc
dec
cli
xchg
and
call
pop
adc
pop
enter
rsm
scas
push
dec
adc
sub
and
pop
pop
pop
sbb
into
pop
xchg
mov
dec
mov
neg
stos
push
std
push
into
idiv
mov
dec
mov
frstor
push
ja
add
stos
mov
test
push
aaa
enter
push
mov
call
nop
sub
push
shr
cmp
or
xlat
mov
dec
repnz
add
pop
je
jmp
sarl
ficomps
or
jecxz
pop
aam
jno
mov
and
mov
or
aas
adc
mov
mov
mov
xor
pop
ret
or
ljmp
daa
xchg
mov
arpl
lods
push
cmp
lcall
fdivr
and
push
dec
aam
mov
mov
push
dec
cmc
mov
fldt
int3
push
jae
lcall
scas
nop
mov
sbb
mov
nop
pop
outsl
cmp
shrb
mov
lcall
cmp
ret
test
push
lsl
cli
cmp
clc
mov
add
xor
ljmpw
nop
push
mov
xor
mov
mov
xor
cmp
cmpsl
push
std
icebp
xchg
out
xor
push
lret
pushf
mov
lock
push
aas
or
mov
iret
pop
mov
lcall
les
xchg
push
int3
incl
push
xor
dec
mov
or
fcompl
cwtl
fiaddl
xor
xchg
lret
push
pusha
scas
pop
or
cmp
stc
mov
xchg
or
es
mov
shll
xor
mov
cmpsb
push
cmp
pop
push
and
mov
testb
pusha
test
into
cli
fnstenv
push
inc
push
mov
ds
or
fcompl
fcmovb
stos
cmp
mov
stos
push
or
hlt
pop
pop
fmull
lock
repz
into
movl
xchg
mov
xor
adc
add
test
or
ficomps
cmp
add
movsb
lods
nop
pop
adcl
dec
fisubl
lcall
daa
hlt
push
ljmp
enter
add
mov
subb
and
lret
addw
mov
pop
out
mov
mov
xor
push
rclb
das
ljmp
pop
xchg
rol
movsb
ret
hlt
out
call
dec
push
stos
inc
inc
ds
or
fldenv
insl
sahf
sbb
les
xor
mov
lcall
mov
psubd
xchg
into
or
sub
es
loope
pop
aam
mov
or
cwtl
pop
outsb
out
fsubl
xchg
xor
mov
mov
int3
aam
mov
push
xchg
repnz
xchg
xor
into
mov
add
fimull
xlat
loopne
hlt
shlb
lock
test
push
pusha
add
cld
out
fstpt
ficoml
push
or
mov
dec
push
adc
cmp
test
rorb
cmp
mov
repnz
popa
jb
pop
repz
pop
sti
sub
add
jl
jmp
sahf
lretw
imul
fistl
cmp
or
into
mov
pusha
xchg
dec
fcomps
jmp
fiaddl
mov
out
inc
or
faddl
push
add
ss
mov
dec
hlt
pop
jns
fmul
mov
sti
lfs
cld
jecxz
je
pop
jmp
lret
push
pop
pop
adc
shr
out
sbb
les
cmp
std
adc
cmp
loope
mov
fcoms
call
out
mov
int3
bound
pop
mov
xor
xchg
and
mov
sbbb
shl
or
shrb
sub
mov
xor
lcall
add
mov
mov
cltd
repnz
jb
fisubrs
mov
shrl
mov
cmp
fdivl
sarb
ljmp
mov
mov
pop
incl
sti
icebp
rcr
sbb
ljmp
pop
xor
jns
mov
and
push
jmp
sarb
mov
pop
loop
adc
pop
push
scas
push
test
fldt
jb
les
add
dec
push
cmp
pop
mov
ljmp
int
repnz
out
push
sahf
jmp
cmpsl
mov
cwtl
shlb
mov
call
aam
notb
mov
xchg
dec
rcrb
pushf
push
sub
mov
shrb
ds
enter
icebp
pop
push
lcall
rol
pop
hlt
mov
xchg
xchg
sbb
xchg
jb
mov
or
fsubl
add
fucomi
cwtl
fmull
sub
mov
ud1
xchg
in
in
inc
test
incb
arpl
dec
ljmp
fs
inc
clc
pushf
pop
mov
inc
xor
ud1
mov
imul
pop
clc
fsubr
mov
dec
pop
sbb
add
incb
mov
or
std
push
mov
add
into
test
int
jge
pop
inc
les
push
mov
push
mov
push
rorl
aas
lods
mov
stc
js
pop
daa
pop
leave
ret
mov
xor
shr
add
lret
push
out
lock
pop
cmp
inc
call
dec
xchg
repnz
xor
mov
inc
pop
rclb
lret
pop
int3
mov
xchg
xor
rcl
sub
push
stos
xchg
xorl
mov
les
lcall
jb
xor
xchg
mov
pop
add
sbb
jae
fnstsw
mov
ds
ficoml
mov
lahf
push
mov
pop
subb
cmp
fadds
lock
xor
xchg
xor
int3
mov
lcall
mov
lret
mov
dec
leave
cmp
fdivrl
mov
mov
fisttpl
push
xor
xor
sub
cmp
add
push
cmpb
loop
jb
sub
sbb
mov
push
or
pop
mov
lcall
enter
scas
insb
sbb
cmp
jp
dec
lock
test
xchg
cmp
ud1
fsubrs
or
pop
lods
aam
cmpl
and
inc
dec
sahf
or
and
cmpsl
xchg
xchg
sarb
mov
adc
or
mov
xchg
fs
rcrl
or
lock
add
add
push
rcll
mov
xor
xor
dec
add
push
mov
fimull
call
nop
insl
and
fdivl
and
fcomps
jne
xchg
mov
mov
or
scas
jmp
call
pushf
push
loope
adc
dec
pop
les
mov
testb
push
xor
popf
mov
fiadds
rcrl
push
repnz
fcoms
in
push
xor
lret
jle
aas
mov
push
clc
adc
pop
xchg
mov
push
ret
repnz
sti
les
enter
aam
stos
hlt
out
pop
test
rorl
or
cmpsb
lret
out
or
pop
jb
mov
repz
ror
data16
push
dec
mov
sti
cmp
hlt
adcl
jne
ljmp
pushf
fcom
adc
test
dec
pop
push
std
lahf
jbe
xchg
push
enter
mov
clc
test
xchg
out
push
pop
dec
pop
fwait
push
adc
xorb
daa
mov
fs
mov
cld
jnp
repnz
sarb
cltd
xchg
mov
fsubr
xchg
popa
mov
xor
icebp
push
call
mov
or
adc
or
cmp
ficoml
mov
cmp
sahf
shr
xchg
cli
inc
rcl
int3
mov
mov
aam
js
xchg
scas
mul
clc
icebp
repz
dec
mov
rcrb
or
sbb
into
pop
xor
sub
call
mov
inc
dec
cmp
scas
mov
out
mov
insl
fwait
push
push
data16
push
pop
and
sahf
ret
mov
cmp
inc
mov
sahf
mov
sti
lret
pop
testb
mov
clc
scas
int3
lret
repnz
fsts
out
out
lret
in
xor
xchg
cwtl
fcomp
push
or
mov
mov
clc
fistl
test
scas
mov
cmp
rcrb
sbb
ret
sub
pop
int3
add
into
repz
js
gs
xor
or
hlt
in
mov
mov
aas
sbb
mov
push
jmp
push
je
pop
dec
pop
add
pop
xchg
push
bswap
stc
bound
pop
pushf
push
scas
les
sti
std
int3
mov
mov
xchg
in
rcrb
jbe
clc
sub
hlt
mov
lcall
sub
push
mov
sbb
xchg
pop
andb
pop
call
jecxz
xor
push
pop
mov
mov
stos
lret
ret
cwtl
lret
mov
out
enter
pop
push
cld
xor
mov
xor
call
xor
push
jle
cwtl
fdivrl
xor
lds
scas
add
mov
fiadds
lock
cld
lcall
jb
aam
cmp
mov
enter
jno
mov
icebp
fdivs
cwtl
or
decb
fmulp
or
test
push
or
mov
or
lahf
out
and
clc
in
xor
fstpt
es
dec
stos
sti
push
or
lock
xchg
hlt
test
movsb
xor
cwtl
mov
mov
pop
xlat
sub
test
repnz
mov
fmul
jmp
push
shl
push
inc
cmp
mov
outsb
pop
fidivrl
sets
mov
sub
inc
sub
cli
hlt
xchg
fmull
mov
push
mov
mov
stos
pushf
je
jnp
shrb
mov
jbe
fstpl
in
pop
je
sub
jnp
pop
clc
cmp
dec
pop
mov
in
shufps
fidivl
fldl
push
lods
and
cmp
push
mov
push
ja
shll
testb
and
pop
pop
mov
out
jecxz
push
int3
ficoms
and
lcall
sub
xchg
test
pop
ss
negb
fs
insl
cmp
pop
ret
jecxz
mov
add
insl
add
push
hlt
stos
subb
push
or
jnp
rcrb
insb
xor
mov
pop
xor
and
pop
or
in
data16
cltd
lock
out
ficomps
xor
aam
or
mov
sbb
into
xor
mov
ljmp
add
xor
dec
mov
jno
push
pop
mov
in
and
cwtl
mov
in
add
mov
push
push
rolb
stos
pop
fldz
mov
pop
stos
and
loopne
pop
ljmp
loop
rclb
mov
gs
lock
pop
xor
lahf
jmp
stos
adc
push
pop
mov
lcall
lods
and
aaa
push
rclb
jecxz
xchg
jecxz
lret
or
xor
fdivrl
adc
rorb
push
jge
out
ljmp
sbb
sarb
fdiv
movaps
cli
shr
add
cld
sbb
fdivrp
fistpll
inc
xor
mov
stos
adc
mov
fistpll
shlb
xor
mov
mov
xchg
cbtw
in
mov
push
stos
push
adc
das
insb
mov
rcrl
mov
push
pop
push
cmp
int3
or
dec
push
je
cmp
mov
jp
push
dec
ficoms
mov
insl
stos
jne
ret
mov
sahf
fidivrl
outsb
loop
aam
mov
in
bound
pop
hlt
ffreep
sbb
mov
arpl
int3
in
push
lock
cwtl
enter
in
sub
repnz
call
imul
clc
jg
xchg
in
sbb
inc
cwtl
sbb
mov
sbb
mov
out
mov
adc
mov
cld
ror
hlt
std
mov
out
sar
mov
sbb
push
ret
stos
xchg
imul
jae
nop
dec
or
add
outsb
sbb
push
loope
jns
jb
clc
xor
push
popf
and
popf
fisttpll
pop
scas
and
pop
xlat
test
dec
cmp
psubb
xlat
dec
push
inc
cmp
jns
jp
syscall
mov
mov
add
repnz
mov
int
test
aaa
inc
jle
ror
ljmp
jp
lea
scas
push
jmp
dec
and
lcall
mov
sbb
push
movsl
fildl
ds
mov
ljmp
add
sub
lahf
cld
shlb
mov
fcomps
pop
in
test
mov
adcl
mov
test
test
add
or
push
add
add
clc
mov
sbb
rclb
xchg
hlt
clc
mov
mov
xchg
cmp
pop
stos
xchg
btc
add
out
ljmp
lock
test
dec
pop
rolb
orb
mov
stos
pop
in
add
test
push
push
inc
cmp
or
out
add
and
xor
add
nop
test
aam
out
fstp
push
mov
sub
jg
jecxz
daa
xor
or
test
call
xchg
out
stos
prefetcht2
sarb
mov
ficoml
pause
into
and
cmp
cld
aam
call
insl
stos
push
fsubrl
jns
into
jp
pop
je
pop
and
stos
push
and
jmp
enter
cs
test
insl
outsl
pop
add
xor
gs
or
pushf
cwtl
sahf
xlat
cli
shrb
adc
out
clc
mov
pop
or
mov
call
and
test
jno
fimull
sahf
mov
pop
sub
stos
pushf
push
mov
adcb
push
dec
xor
repnz
or
push
mov
or
add
fsubrs
sahf
pop
and
fisubl
jg
jnp
push
cwtl
mov
pop
pop
jmp
call
push
repnz
mov
mov
aaa
in
push
enter
xorb
scas
jae
pop
jno
or
or
cmp
add
add
push
cwtl
pop
pop
loope
clc
xchg
js
xchg
mov
mov
icebp
stos
mov
mov
add
jb
jp
and
cwtl
push
xchg
dec
mov
les
sahf
push
clc
dec
fsts
aad
in
or
clc
movsb
aad
push
lcall
and
pop
jmp
mov
fnstcw
push
push
lock
cmp
mov
xchg
cld
adcb
repz
outsb
fimuls
mov
dec
cltd
inc
daa
jnp
push
clc
xchg
imul
nop
je
add
ret
dec
mov
adc
les
out
mov
enter
sahf
scas
xchg
pop
fsubrs
xchg
sbb
mov
add
aad
push
pusha
push
xchg
lret
mov
lretw
xlat
jnp
mov
and
je
ficoml
jo
add
mov
inc
xchg
push
stos
jno
cli
push
mov
xor
idivb
addl
cwtl
hlt
cmp
pop
fcmovu
call
aam
ss
cmpl
push
test
cli
loop
repnz
aam
fnsave
stos
xchg
xchg
push
or
mov
mov
pop
out
call
adc
movsl
adc
or
ljmp
out
xchg
xor
push
lods
xor
add
iret
mov
add
cld
xor
cmp
aam
call
testb
push
pop
push
data16
stos
jp
xchg
rcll
sbb
ds
mov
pop
cwtl
cmp
pop
cmp
neg
mov
jno
xchg
push
mov
pop
stos
mov
push
cmp
push
mov
jle
xor
push
and
or
cwtl
imul
call
pushf
dec
mov
clc
ss
ljmp
dec
lret
movb
stos
xor
mov
push
test
dec
sahf
bound
push
movsb
cmpl
aas
into
shl
mov
mov
outsl
mov
inc
fdivp
xchg
lock
push
arpl
repz
imul
fcmovnb
sub
add
push
jns
push
repnz
xchg
or
or
xchg
sbb
push
cwtl
ljmp
movsb
leave
call
testb
rol
movsb
jbe
out
jns
push
out
push
jp
ret
push
test
lret
ror
push
dec
push
xchg
mov
pop
call
roll
xchg
enter
test
push
mov
nop
jb
or
fistpl
push
cmp
ljmp
jbe
mov
jne
das
add
mov
pop
out
cwtl
pop
imul
into
mov
inc
add
cmp
push
clc
std
fcomps
adc
les
idiv
mov
or
enter
inc
add
pop
ljmp
testb
popa
mov
add
sarl
push
lahf
or
pop
mov
cwtl
push
jb
ficompl
clc
scas
std
jg
ljmp
add
jp
mov
add
scas
xchg
jbe
mov
ss
jae
mov
pop
sahf
mov
gs
mov
cwtl
cmp
mov
mov
mov
imul
push
mov
jle
sbb
or
jb
int3
data16
or
outsb
push
imul
ss
test
cwtl
rcrb
decb
mov
test
fsubrp
sahf
push
xchg
pop
pop
adc
sbbb
mov
push
cmp
hlt
stos
pop
into
lcall
fiadds
popa
inc
stos
mov
ds
pop
push
mov
push
stos
mov
push
xchg
or
jle
pushf
pop
dec
or
movsbl
xorl
cmp
mov
leave
mov
out
push
test
cld
lret
jno
testl
clc
sub
push
ficoms
in
dec
loopne
cmp
mov
test
std
or
pop
ficoms
mov
stos
ret
dec
xchg
cmp
fcomps
lock
sub
mov
shll
jne
xor
enter
adc
ret
jns
stos
repnz
jp
xor
nop
bound
inc
add
popf
call
jmp
pop
xchg
scas
xchg
mov
fmul
rcl
push
push
push
incb
xchg
fisubrs
sarb
stos
mov
ret
pop
stos
mov
pop
or
rclb
cmp
cld
cwtl
mov
and
pop
xor
push
xor
test
pop
add
xor
hlt
lock
dec
push
pop
add
xchg
mov
mov
mov
pop
sub
dec
out
fidivs
or
testl
daa
ljmp
lret
repz
push
or
imul
sahf
sbb
cmp
and
or
and
into
push
pushf
add
xchg
js
in
and
pop
push
ljmp
lods
push
push
sbb
out
test
popa
mov
xchg
pushf
and
bound
mov
xlat
mov
pop
or
cmp
mov
jmp
push
or
lock
mov
or
mov
or
xor
push
sti
push
add
pop
push
pop
mov
dec
fdiv
inc
jno
stos
mov
leave
lret
int
cld
ljmp
clc
shlb
mov
mov
sub
cli
and
mov
sahf
fldpi
mov
jge
repz
fsts
test
je
clc
fisttpl
cmp
les
call
jge
adc
hlt
ret
jo
out
jp
das
scas
add
dec
xchg
stos
xchg
sbb
aad
push
push
mov
xor
rcr
or
xchg
lcall
lret
push
sub
loop
lret
cwtl
out
mov
add
out
push
pop
add
dec
test
xor
xchg
pop
repnz
nop
shrb
push
out
stc
inc
shrb
add
hlt
sahf
push
loope
add
cmp
std
pop
pop
ds
xlat
mov
or
shr
adc
pop
mov
lea
movsb
call
sarb
mov
outsb
hlt
loop
pop
push
and
mov
mov
scas
or
and
enter
cwtl
mov
inc
push
mov
cwtl
push
or
mov
addr16
add
lahf
or
lock
stos
add
xchg
aam
aas
xchg
jp
lahf
jg
aaa
pop
lret
rorb
xor
pop
sbb
or
jo
divb
mov
call
sub
lret
pop
ret
mov
ljmp
dec
pop
ret
dec
mov
sahf
mov
cmp
xabort
jp
push
orb
add
jp
fcoms
nop
ljmp
pmaddwd
out
mov
iret
xor
int
dec
push
cmp
pop
add
mov
dec
loop
leave
in
mov
mov
or
push
jo
cld
lret
xchg
adc
mov
pop
call
and
push
out
ss
lock
jb
faddl
add
enter
lahf
xchg
xchg
xor
mov
dec
sub
xchg
lcall
pop
jmp
push
sti
xor
ficomps
pop
icebp
xlat
mov
insb
fildl
or
fcomps
mov
or
jnp
sarb
je
mov
repnz
mov
push
or
or
inc
incb
push
mov
out
xor
scas
test
cld
ret
add
mov
mov
push
aas
cwtl
cli
fimuls
lret
lcall
pop
mov
je
mov
mov
fmuls
pop
fdivrp
and
xor
cld
and
es
nop
stos
fwait
push
fidivs
push
ds
pop
scas
mov
or
scas
push
mov
mov
notb
rorb
sbb
adc
sahf
push
mov
in
mov
stc
movsb
sti
or
pop
hlt
lret
aam
lcall
scas
fadd
push
in
xchg
lret
mov
out
pop
jp
fisubl
stos
lret
neg
pop
and
jb
push
arpl
xchg
and
pop
xor
sub
sti
std
add
ret
in
sub
sahf
pop
into
es
push
cmp
fadds
lock
pop
mov
xor
mov
rcr
orb
out
xor
aaa
loopne
in
into
frstor
mov
push
dec
not
dec
mov
outsb
dec
push
mov
mov
mov
xchg
xchg
mov
push
jmp
jae
add
sub
sahf
pop
cmp
jo
into
cmp
neg
or
das
pop
xchg
and
jae
fcompl
sub
aam
xor
sub
xchg
ret
fdivs
fsubr
cmpb
lret
or
fistl
les
sbb
data16
pop
addr16
cwtl
sldt
add
pop
lret
lret
sub
xorl
push
pop
adc
insb
or
mov
xor
xchg
mov
int
rcrb
xchg
nop
pop
mov
test
lock
ret
dec
ds
enter
pop
into
in
hlt
mov
cmpsb
push
cmp
push
wbinvd
js
xor
sahf
daa
push
cli
add
push
imul
out
adc
cld
aas
pop
or
push
shl
sub
fadds
bound
loope
fcoml
test
bound
jg
dec
jge
mov
pushf
rclb
test
lcall
xor
add
adc
fcmove
sahf
push
lods
inc
and
push
and
setp
test
nop
and
pushf
dec
push
dec
in
cmp
xor
mov
out
mov
arpl
pop
movsb
jnp
enter
aam
push
sub
sbb
shrb
clc
mov
in
xor
cmp
pop
cwtl
push
mov
lcall
jbe
shl
dec
or
stos
std
call
pop
mov
xor
enter
popa
das
sbb
icebp
inc
pop
mov
lock
pop
pop
push
inc
negb
fdivr
into
mov
pop
test
pop
and
jp
add
shlb
mov
or
int3
mov
inc
ret
ljmp
pop
ficoml
out
es
jecxz
xchg
fsubrl
stos
sbb
ret
jo
mov
xor
mov
lret
push
or
aas
xchg
ficomps
daa
push
bnd
shrl
pop
call
into
cmp
push
add
gs
adc
pop
ficomps
dec
aam
add
mov
test
push
bound
clc
and
int3
aam
cld
cmp
mull
xchg
jmp
inc
lds
xchg
in
inc
adc
inc
stos
pushf
sahf
mov
ds
pop
lret
mov
adc
rclb
outsb
xor
arpl
sbb
ljmp
or
ror
out
add
lock
pop
clc
mov
bound
and
movsb
push
sahf
outsb
stos
dec
test
inc
pop
xor
scas
push
out
adc
sbb
inc
arpl
or
into
dec
push
fisubs
sub
push
pop
movsl
inc
push
pop
xchg
and
into
nop
mov
jge
lret
xor
mov
or
push
jmp
fcmovbe
out
add
sbb
rcr
sub
xchg
sub
or
pop
push
mov
inc
out
mov
int
dec
cmp
pop
test
cmpsl
and
sub
pop
aad
jns
mov
mov
jnp
fsubr
out
lock
pop
add
stos
sahf
mov
jns
fadds
add
ficomps
sti
rcrb
scas
lret
scas
inc
int3
fsubrs
mov
psubd
or
imul
pop
push
stc
ja
stos
mov
add
jnp
lret
shrb
push
inc
sti
push
add
aam
clc
test
cld
push
ja
lods
pop
and
mov
push
push
cmp
movsl
sbb
pop
sub
push
imul
inc
pushf
jg
xchg
add
aas
inc
lock
mov
fiadds
sub
ret
and
negb
stc
and
aas
xchg
mov
add
mov
ljmp
ret
in
les
fdivr
or
in
insb
pop
lea
smsw
sbb
xchg
fiadds
ret
xlat
nop
inc
pop
push
int3
repnz
rolb
lods
es
jbe
xor
pop
pop
test
pop
ljmp
js
sbb
fistpl
ja
hlt
test
stos
pop
inc
popa
mov
out
aad
inc
aas
or
mov
mov
clc
stos
out
push
push
and
iret
add
add
mov
push
pop
rcr
sbbb
or
mov
adc
pop
dec
sub
mov
hlt
vandps
mov
notb
pop
mov
cs
mov
mov
sti
cmp
push
or
repnz
mov
mov
push
pop
xlat
shrb
pop
sbb
push
push
push
cmp
repz
mov
aas
inc
or
insl
enter
test
add
repnz
mov
jb
je
pusha
or
imulb
mov
adc
xor
loope
dec
test
repnz
es
dec
mov
rcrb
rcrl
clc
sbb
jmp
rolb
lret
enter
mov
stos
ret
push
lret
xor
xor
int3
xor
and
call
int3
pop
mov
in
cmp
push
lret
pushf
paddq
ret
fidivrs
es
cmp
mov
push
mov
pop
loope
loope
pop
mov
lods
cltd
into
push
testb
jnp
mov
lahf
add
cli
mov
push
jne
in
cmp
xchg
js
mov
aas
cmc
idiv
test
pop
cmp
or
shr
cmc
rcll
cwtl
scas
mov
xor
and
sahf
gs
push
pusha
push
int3
adc
clc
arpl
enter
lock
mov
xor
insl
xor
mov
dec
sahf
or
dec
push
and
xchg
adcl
fucomip
dec
lods
stos
xor
repnz
xchg
aaa
aas
sbb
xor
out
scas
sets
dec
les
addb
pushf
fimull
lcall
push
dec
adc
sti
idivb
xchg
repnz
mov
loope
xchg
shlb
dec
aas
sub
mov
or
xchg
mov
orps
xchg
add
xchg
sbb
ljmp
addr16
mov
dec
lcall
push
or
dec
mov
fs
jo
mov
fnstcw
rclb
add
psllw
pop
inc
and
push
or
fidivrs
outsl
ret
mov
adc
sahf
or
fiadds
xchg
sarl
ret
lahf
repnz
cwtl
ror
cs
inc
stos
push
mov
test
xchg
or
lret
fidivl
nop
ret
add
mov
lret
jmp
lcall
mov
mov
mov
mov
stos
cmp
cld
cltd
stos
mov
push
push
fisubrl
push
jbe
ds
pop
or
push
mov
clc
cmp
add
pop
fistpll
push
mov
mov
mov
int3
scas
aas
loope
int3
jl
pop
movsl
xor
cld
xor
clc
loop
sbb
pop
pop
cmp
stos
or
xchg
push
or
mov
dec
inc
pop
mov
add
out
xchg
fimuls
dec
bound
daa
mov
push
aam
arpl
or
dec
xchg
mov
inc
or
orb
pop
imul
int3
pop
dec
aam
cmp
cmpsb
loopne
and
test
or
jbe
inc
aam
xlat
cmp
stos
test
psubb
mov
pop
push
repz
je
rclb
push
pop
js
mov
ljmp
lock
testb
inc
push
or
pop
add
xchg
cli
cmp
jb
stos
test
ljmp
int3
xor
and
xchg
stos
ds
mov
std
jle
mov
xchg
mov
xchg
call
sub
xor
xchg
neg
pop
xchg
fcmove
ja,pt
mov
inc
sub
mov
or
mov
add
push
sub
fidivrs
xchg
test
ret
xchg
adc
into
rdpmc
cmp
or
cli
adc
add
and
call
rcrb
cli
xchg
mov
push
xchg
test
push
pop
mov
push
rcrb
cld
cmp
push
rcrb
xorl
cwtl
out
nop
lds
add
pop
ljmp
lcall
push
ljmp
fistpl
mov
xor
lock
and
mov
mov
push
test
adc
xchg
jmp
pop
push
nop
mov
xor
mov
faddp
push
sub
jns
rcrb
pop
push
cmp
xchg
mov
mov
mov
insl
out
jbe
mov
ficoms
test
ds
add
sbb
mov
sub
mov
pop
out
fdivrs
pop
repnz
xor
or
add
repz
sub
pop
mov
aam
cmpsb
mov
aas
or
sbb
addb
sbb
and
pushf
ficoml
lds
or
dec
stc
loope
shr
mov
les
pop
fdivl
inc
fidivl
ret
pushf
add
stos
enter
mov
mov
ret
xchg
lcall
mov
ror
scas
lcall
push
mov
dec
jb
es
rcr
xchg
sub
lcall
fcmovnbe
fsubrs
mov
sbb
into
jnp
push
or
fistpl
outsb
dec
sub
push
sahf
mov
mov
arpl
adc
cmp
or
sub
pop
test
dec
pop
lcall
mov
cs
push
dec
ss
or
add
pop
daa
shlb
into
xor
push
xchg
pop
cmp
fiadds
hlt
pop
and
pop
fiaddl
mov
fdivrs
jmp
xchg
aas
push
push
mov
leave
inc
sub
adc
and
mov
ret
or
or
cmp
xor
xorl
cld
xor
mov
adc
push
mov
scas
mov
xchg
xchg
push
mov
or
push
lock
mov
dec
jnp
xchg
fmul
pop
mov
test
pop
push
mov
sti
pushf
hlt
push
call
ljmp
aam
stos
fcom
cwtl
mov
nop
stos
stos
hlt
push
mov
mov
testb
out
stc
adc
test
or
iret
cs
cmp
scas
pop
pop
test
jae
out
or
sub
scas
jb
ret
outsb
mov
mov
cli
push
cvtdq2ps
add
stc
out
add
dec
into
lock
repnz
not
or
aaa
dec
sbb
push
pop
cmp
nop
or
lods
mov
xlat
repz
je
mov
cwtl
and
lds
dec
ret
test
cmp
mov
scas
push
mov
incb
push
repnz
cmp
call
out
out
stos
mov
adcl
jb
cld
sbb
fisubrs
cmp
fidivrl
xor
lret
outsb
fadds
test
mov
loopne
psllw
psubq
sahf
movsl
pop
lahf
xor
stos
xor
repnz
inc
aam
pop
test
outsl
cmp
push
test
enter
add
mov
testb
jo
hlt
enter
jns
stc
aam
pop
daa
loope
pop
inc
add
mov
pop
adc
cmp
into
arpl
jo
cmpsl
pop
dec
clc
mov
imul
mov
push
xor
out
test
idivb
das
fadds
cld
cwtl
imul
and
cmpsl
xor
xor
mov
or
aas
ja
ljmp
mov
pop
sbb
fistpll
hlt
and
push
rorl
shlb
testb
orl
fmull
add
mov
xchg
repnz
arpl
jbe
xor
sahf
xchg
mov
pop
lcall
aas
jmp
shlb
out
in
ds
dec
push
aas
fstl
in
dec
mov
fucomi
push
mov
fisubrs
cltd
mov
gs
xor
pop
xor
lcall
sti
mov
out
sbb
stos
push
ljmp
insb
lock
or
mov
mov
hlt
mov
mov
test
insl
xchg
dec
daa
pop
call
cmp
stos
ficoml
adc
and
jp
push
add
inc
call
mov
mov
pop
sub
mov
lcall
xlat
add
notb
fcoml
loopne
lret
addr16
ss
lods
ljmp
int3
les
jnp
lcall
nop
pusha
shrb
xchg
jb
setb
clc
ds
sbb
movsb
into
xor
imul
addr16
in
sahf
dec
aaa
cmp
scas
and
cwtl
mov
mov
or
xor
cmp
fnstcw
mov
aam
cmp
js
mov
dec
shr
lock
xchg
inc
int3
jns
adc
xchg
mov
test
stos
dec
mov
sbb
sarb
int3
in
jp
call
mov
mov
xor
add
add
push
outsb
rclb
les
in
mov
pop
and
scas
lock
adc
xor
push
pop
mov
xchg
es
fstpt
jns
scas
cmp
push
clc
rcl
mov
push
adc
pop
pop
jbe
fidivrs
je
inc
sub
xchg
mov
push
fdivr
or
push
jnp
push
out
jnp
cld
push
je
jmp
mov
mov
ljmp
sahf
xchg
push
loope
xor
and
fcompl
ss
push
hlt
push
lret
stos
les
add
bnd
ds
pushf
clc
mov
ljmp
push
or
ret
sti
add
stos
lret
in
fadd
push
inc
cmp
pop
rcrl
movsb
rorb
add
mov
insb
fisttpl
je
call
clc
mov
mov
stos
adcb
test
ret
hlt
push
rcrl
fsts
ds
shlb
xchg
mov
dec
lret
dec
notl
pop
sbb
push
pop
inc
inc
pop
lock
lcall
pop
nop
push
aaa
xchg
cld
and
scas
mov
cmp
shrb
push
or
addr16
cmc
outsl
call
mov
mov
ds
cwtl
int3
mov
lock
hlt
xchg
test
jle
out
mov
and
aas
push
push
pushf
loop
bound
fidivl
rcrb
push
cmp
mov
sbb
cmp
rclb
add
dec
pop
or
clc
push
push
and
ss
fiaddl
call
ljmp
jg
hlt
lock
mov
clc
lods
dec
xchg
pop
dec
test
mov
dec
sahf
les
loope
mov
mov
adc
xchg
jle
fsubl
dec
pop
ret
xor
cwtl
into
scas
rol
je
ret
pop
inc
stos
pop
out
mov
sahf
call
mov
insl
hlt
cli
pop
fistpl
nop
lcall
push
cld
xchg
lret
mov
pop
xchg
adc
xlat
pop
sub
clc
movlhps
lcall
xchg
hlt
sahf
repnz
fdiv
rcr
or
add
int3
dec
add
nop
fidivrs
jbe
test
ret
mov
mov
por
or
or
test
call
sbb
cmp
aam
int3
and
jg
jb
fcmovu
sbb
mov
in
jp
xchg
fisubrs
out
ds
mov
fidivrl
xchg
inc
pop
mov
mov
inc
rolb
or
pop
stos
mov
sti
xor
jmp
pop
stc
test
fcmovne
xor
movsbl
mov
js
mov
mov
add
and
xchg
jae
jo
mov
scas
pop
sahf
test
aad
pop
stos
cld
arpl
pop
negb
pushf
adc
out
sub
and
jecxz
sub
enter
out
rclb
rclb
das
push
notb
sub
fcoml
cmpneqps
push
lahf
mov
xchg
pop
cmp
push
lcall
adc
and
rorb
or
mov
or
shlb
and
mov
mov
or
enter
cmp
xchg
push
xchg
movsl
pop
cli
int
xchg
fsubrs
dec
fcmovb
dec
hlt
xor
lcall
cld
lock
add
jbe
xor
test
sub
ret
popa
neg
or
je
test
stc
add
fmul
out
aam
sahf
push
add
fs
loopne
imul
mov
scas
ljmp
inc
sahf
ret
ret
ret
sbb
fiaddl
fdivr
cmp
cld
repnz
sbb
xor
inc
leave
pusha
dec
test
mov
xor
adc
mov
mov
mov
test
jb
ds
lret
stc
pop
pop
orl
les
push
in
sarl
loope
cmp
lret
jb
push
cmp
into
hlt
mov
pop
jmp
scas
lcall
inc
lret
mov
cmp
neg
push
mov
fidivrl
pop
mov
jae
pop
lcall
jns
stc
mov
lret
xchg
cmp
int3
xchg
aam
les
stos
pushf
jmp
ret
xor
mov
push
testl
and
les
lret
push
mov
cltd
pop
repnz
pop
push
mov
mov
clc
push
jg
or
jmp
lods
aas
pusha
sahf
mov
lea
test
idiv
ljmp
repnz
lcall
stos
pop
test
inc
aaa
ds
int3
xor
movsb
test
pushf
dec
pop
call
fwait
stos
push
or
jecxz
ljmp
insl
cwtl
pop
jecxz
mov
pop
lret
xor
mov
loope
push
or
rol
pusha
cmp
sahf
unpcklps
push
mov
mov
pop
jb
pop
into
or
dec
lcall
dec
mov
ret
xchg
mov
inc
outsl
repnz
nop
aas
aaa
push
mov
idivb
lret
pushf
jmp
push
mov
test
sbb
add
insb
and
sahf
out
mov
pop
xor
push
addr16
cmp
mov
sbb
pop
xchg
and
dec
mov
cmp
jbe
mov
sbb
loop
jecxz
stos
push
ss
fwait
cli
xchg
fdiv
loope
repnz
adc
scas
or
bound
cwtl
push
test
mov
sbb
xchg
xor
fidivrl
loope
jns
inc
mov
push
pushf
jae
push
inc
hlt
shr
jmp
add
and
xlat
sub
scas
lock
jp
fnstenv
lcall
std
push
jae
inc
test
mov
pop
or
clc
add
idivb
aam
mov
cli
pop
scas
enter
sarl
cmp
shl
fs
fnsave
xor
ret
ret
xchg
test
lock
sbb
andb
add
incb
fnsave
xor
insl
sbb
rorb
outsb
call
xchg
add
mov
pop
inc
jb
loop
push
test
inc
outsb
xchg
dec
mov
or
aas
xlat
pop
mov
push
and
test
shll
hlt
or
mov
cmpsb
loop
push
es
repnz
das
push
ja
xor
xchg
rcr
mov
pop
into
add
sbb
mov
pop
pushf
mov
movsl
adc
ret
mov
and
icebp
jb
xchg
mov
shr
pop
dec
jno
dec
scas
loop,pt
add
inc
fsubr
lret
aam
ret
fs
fimull
pop
xor
sahf
or
mov
aas
lret
int3
aad
sahf
mov
test
fdecstp
cld
ficompl
mov
lret
scas
mov
loope
out
xor
sarb
sbb
call
sub
das
vmwrite
mov
mov
cmp
hlt
inc
mov
lret
mov
push
push
mov
xor
stc
imul
xchg
add
les
nop
pop
add
mov
fsubl
mov
dec
adc
pop
lcall
out
fcomps
out
pushf
push
push
pop
pop
mov
ja
jns
dec
nop
or
repnz
mov
jecxz
add
push
push
inc
fildll
cs
fcoml
pop
xchg
mov
xor
xlat
mov
mov
shll
les
push
push
inc
push
stos
shl
push
cli
and
mov
in
je
rcrb
ljmp
sbb
inc
pop
cwtl
dec
sarb
push
into
divb
push
mov
scas
and
outsl
sarl
aam
cmp
pop
push
fwait
adc
xchg
or
fidivl
loop
ds
or
cli
xlat
int3
stos
imul
xchg
adcb
enter
std
xchg
fdivrl
iret
into
cmp
out
jb
inc
stos
enter
inc
fildl
jb
scas
test
mov
ror
call
fsubr
add
sub
cmp
push
or
pushf
roll
mov
incb
scas
into
pop
nop
aam
push
loope
arpl
dec
add
data16
call
in
ret
add
fists
add
pop
int3
pop
add
lcall
push
xor
xchg
mov
push
clc
or
cmp
ljmp
inc
mov
pop
add
int3
cmp
fcomps
rolb
and
push
fidivs
nop
pop
mov
pop
outsb
test
es
mov
push
dec
cmp
xor
out
addr16
push
lahf
mov
fcomp
push
rorb
cli
lcall
lcall
push
xor
nop
int3
aas
push
mov
dec
jle
inc
pop
pop
xchg
testb
out
movsb
push
cmp
xchg
inc
push
lahf
lcall
jbe
lret
add
rorb
test
fmull
lds
adc
ljmp
pop
or
mov
test
and
mov
push
pushf
or
into
or
movsl
hlt
test
scas
push
jns
sbb
sti
jp
dec
hlt
add
dec
push
aad
cmc
mov
mov
sar
out
fcoml
out
sarb
sub
call
pop
push
add
push
imull
add
jp
cmp
psubd
in
cli
sub
jg
mov
push
pop
fcmovb
push
into
xchg
mov
xor
push
mov
mov
mov
les
jbe
cmp
aas
imul
lock
xchg
mov
push
out
lds
mov
dec
mov
or
jo
lret
cmp
hlt
sar
std
ljmp
or
les
xor
mov
mov
int3
mov
cmp
scas
cld
hlt
js
mov
cmp
imul
fidivrl
call
push
lcall
lret
or
pop
bound
mov
repz
stos
clc
add
repnz
popf
cmp
jo
ret
pop
fsubrs
push
fcomp
mov
sar
ds
pop
ljmp
out
pop
sbb
packssdw
and
stc
inc
lcall
xor
pop
or
or
lcall
mov
enter
fcmovbe
call
outsl
xchg
xor
mov
cld
pop
or
insb
pop
mov
sbb
xor
ds
or
test
mov
rclb
icebp
or
ret
xor
ljmp
push
pop
sbb
xlat
ret
jbe
and
xor
xor
xchg
xchg
popa
xor
push
hlt
xchg
les
lret
aam
ret
aas
sarl
mov
mov
call
pop
jno
lcall
push
jmp
ror
xor
stos
les
cld
aam
jecxz
fdiv
enter
push
stos
or
pop
add
inc
pop
lcall
sarl
push
xchg
mov
jle
dec
mov
cld
inc
adc
mov
jge
mov
fcmovnu
notb
xor
clc
push
mov
cld
adc
push
lret
xor
xchg
pop
lret
into
aam
xchg
or
scas
nop
xor
mov
sar
mov
jbe
push
add
ficoml
mov
les
call
rcrb
clc
push
cmpsb
test
push
or
lahf
subl
imul
lfs
add
or
in
sbb
into
les
cs
or
mov
mov
arpl
inc
push
shlb
dec
test
fstpl
or
out
mov
add
push
cmp
mov
pop
push
lcall
add
inc
fucompp
lret
test
fwait
cmp
pop
ljmp
pop
icebp
xor
ljmp
xabort
push
xor
lret
push
cmp
notb
inc
mov
dec
or
sbb
push
push
test
lock
mov
adc
ret
mov
mov
xchg
jo
ret
inc
sbb
or
sub
mov
dec
pop
les
mov
fadds
or
mov
mov
jmp
in
addb
push
pushf
sbb
push
idivb
pop
cwtl
add
pop
sbb
mov
add
pop
push
mov
sub
int3
cwtl
and
and
outsl
sbb
je
adc
daa
mov
test
and
xchg
enter
xor
or
xor
add
sahf
scas
adc
push
jb
jae
sbb
and
mov
jae
rorb
mov
test
sti
lds
loope
jbe
data16
lcall
push
sbb
test
hlt
fidivs
dec
push
add
push
pop
ret
cwtl
dec
push
shrb
jmp
idiv
sub
stos
mulb
mov
add
inc
btc
lcall
fcmovne
mov
cmp
or
inc
mov
sub
sub
packsswb
fwait
xor
inc
push
mov
pandn
das
in
mov
mov
outsl
sbb
and
rorb
int3
inc
out
hlt
fdivrl
sti
sbb
mov
push
outsb
out
dec
sahf
pushf
or
stos
push
mov
shrb
inc
out
hlt
idivb
xchg
mov
pop
rolb
cmp
fsubrs
cmpsl
pop
or
data16
out
repz
shlb
push
lock
repnz
or
cwtl
rorb
test
loopne
inc
inc
lock
add
enter
pop
test
pusha
xchg
stc
cmp
xor
push
rolb
add
mov
enter
mov
imul
nop
fidivs
ret
jbe
sbbb
sar
loope
jp
push
je
scas
inc
xchg
dec
mov
mov
xchg
push
scas
and
inc
rclb
xor
push
lock
stos
xchg
mov
mov
pop
pop
loopne
icebp
aas
xchg
xchg
rcrb
sub
nop
pop
out
or
push
js
cmc
ret
push
pop
mov
xchg
mov
push
sbb
pop
call
test
push
mov
rorb
jge
mov
fucomip
mov
sahf
lcall
lods
jnp
shlb
mov
xor
mov
cmp
int3
stos
add
mov
cmp
cli
repnz
cmp
fistpl
jo
in
mov
repz
jb
sarl
lcall
xchg
addl
ds
pmaxub
and
xchg
xor
nop
sarl
jnp
stos
pop
xlat
lcall
xor
lock
cltd
cmp
or
sub
mov
mov
scas
jnp
fsubl
aad
add
adc
mov
push
fsubrs
jg
mov
push
add
jbe
shrb
scas
repz
pop
stos
mov
sbb
test
fsubrs
call
pop
pop
into
les
pop
mov
int3
mov
pop
setb
xchg
mov
push
adc
test
lods
in
fcomps
hlt
xor
stos
cmp
adcl
dec
sub
inc
out
pop
and
add
add
push
lock
push
les
add
xchg
psadbw
outsb
test
in
sahf
pop
xchg
loope
dec
addl
xor
cwtl
cmp
or
mov
stos
push
mov
push
dec
sub
and
mul
pop
dec
call
cmp
call
jecxz
dec
or
sahf
stc
mov
nop
mov
leave
lcall
mov
dec
jmp
sbb
es
testb
pushf
stos
fdivs
lahf
subl
shll
fmuls
insb
mov
fwait
pop
into
pop
dec
xchg
shrb
mov
into
or
test
xchg
in
or
ljmp
rclb
cmp
mov
js
mov
or
mov
mov
ret
pusha
mov
and
enter
shlb
cltd
lock
mov
ds
repnz
call
sub
cwtl
pop
sbb
push
pop
std
js
jmp
call
xor
hlt
scas
sbb
adc
or
push
pop
ss
clc
push
mov
push
and
pop
pushf
inc
push
aas
cltd
mov
pop
or
sub
scas
pop
nop
jb
stos
or
pop
inc
pop
xchg
mov
dec
mov
cwtl
call
dec
pop
mov
or
cli
test
or
andl
mov
or
aas
scas
lock
sbb
cs
cmpsb
int3
mov
lahf
or
sahf
jbe
mov
mov
std
xchg
clc
fcmove
lods
xchg
fnstenv
stos
add
inc
rclb
sbb
or
pushf
mov
xchg
dec
xchg
push
mov
pusha
jp
jb
aam
cmp
add
or
xchg
xchg
jp
leave
fnstcw
push
and
repnz
mov
mov
cwtl
dec
mov
lcall
jge
outsl
scas
mov
lock
and
sbb
jecxz
cwtl
shlb
loopne
mov
xlat
int3
scas
cwtl
pop
cwtl
lret
xchg
aaa
nop
mov
dec
push
int3
pop
or
push
test
es
dec
or
andl
or
int
pushf
xor
sub
lea
jb
cmp
decb
mov
inc
mov
or
stos
repnz
push
inc
int3
sahf
test
push
jb
push
lcall
repnz
jae
lret
jbe
jb
and
out
and
and
xchg
or
inc
xor
addr16
or
jg
nop
clc
xor
pop
lret
xchg
pop
jb
into
pushf
jae
push
mov
roll
fld
int3
out
cmp
fstp
loop
ret
mov
ds
cmpsb
popa
inc
imul
mov
inc
fistpl
mov
repnz
call
popa
push
fcomp
repz
pusha
mov
jo
fwait
es
jo
xlat
add
jo
xlat
out
movb
ljmp
inc
push
leave
into
xor
das
call
dec
cwtl
mov
addr16
scas
xor
aaa
divps
push
fildl
add
jo
js
js
js
cmp
and
test
or
rcrb
xorl
inc
sbb
xchg
or
mov
push
rolb
push
add
enter
fdivl
outsb
mov
and
aam
xchg
stc
jno
clc
imul
mov
enter
es
xchg
xchg
and
or
push
in
shlb
sarl
or
push
icebp
or
xor
mov
cmp
xor
aas
pop
out
ljmp
inc
push
loope
and
lahf
sarb
ljmp
dec
clc
lret
and
push
stos
inc
jbe
jge
les
subl
jns
add
push
mov
pop
fadd
xchg
xchg
xor
add
push
movsl
pop
mov
jns
mov
scas
outsl
push
stos
xlat
push
inc
les
daa
push
out
jo
push
repz
push
jo
aas
mov
aam
aas
sahf
aad
dec
scas
fidivs
inc
cmpsb
mov
mov
rorb
lret
nop
xor
jbe
icebp
cli
adc
lock
xor
fimull
mov
add
adc
enter
push
mov
cs
mov
push
push
nop
dec
or
iret
pushf
sti
dec
cld
push
or
test
ret
cmp
fsubrl
cmc
scas
movsb
mov
pop
push
stos
repnz
stos
add
add
mov
mov
or
sti
scas
hlt
stos
mov
mov
mov
and
sbb
mov
ret
pop
cld
aam
sbb
pop
xchg
pop
out
cmp
nop
imulb
ret
push
push
jmp
out
lret
push
jecxz
cmp
aam
push
std
repz
fisttpl
call
mov
cmp
test
xchg
stos
call
enter
xor
mov
push
pushf
in
and
xchg
dec
ficoms
lock
and
mov
les
into
ljmp
push
fdivrl
dec
aad
fiaddl
mov
xchg
mov
xchg
push
repnz
mov
pop
loop
push
aas
lods
aas
sbb
stos
lods
xor
adcl
fdivrl
mov
dec
mov
loope
mov
mov
pushf
fs
pushl
out
dec
mov
xchg
mov
in
inc
mov
inc
inc
cmpsl
movsb
ljmp
sahf
push
mov
xor
mov
lahf
inc
into
rorl
adcb
jnp
lock
add
call
lret
lret
ljmp
xor
shlb
fidivrl
test
out
in
popf
mov
nop
push
cwtl
clc
jno
mull
cpuid
ljmp
rcrb
loope
pop
mov
fdiv
lock
mov
arpl
mov
test
out
es
lcall
enter
imul
aad
mov
cwtl
roll
jb
lret
xchg
dec
fdivs
or
into
in
cmp
in
fisubs
iret
sti
sti
negb
push
push
pop
push
out
push
or
shlb
mov
into
out
pop
test
bnd
or
cwtl
inc
and
mov
or
lahf
mov
mov
and
jb
enter
test
push
mov
fistpll
shlb
lock
pop
out
arpl
shufps
stos
or
cmp
push
mov
mov
add
pushf
pop
addb
add
xchg
inc
push
mov
mov
lcall
cmp
add
pop
mov
pop
push
ljmp
fisubrl
dec
add
sub
cmp
leave
das
lret
fiadds
mov
stos
inc
jb
mov
mov
push
movsb
xor
pop
mov
xor
xor
and
dec
add
sahf
aam
pop
pop
adc
mov
sbb
or
xor
call
mov
mov
sub
fprem1
adc
xchg
mov
adc
repnz
enter
divb
jmp
xchg
cmpsb
sub
mov
xchg
jge
xorb
jbe
or
jbe
jp
push
in
mov
sbb
in
cld
mov
cld
pop
maxps
push
mov
push
sbb
push
xor
call
cmpsb
test
jecxz
add
pushf
cmp
push
xchg
pop
shlb
lock
pushfw
popa
clc
aad
cmp
call
add
and
pop
xorl
pushf
fmul
test
mov
or
add
jecxz
dec
mov
and
xchg
dec
mov
or
rcl
in
sbb
xor
out
mov
xor
ds
sbb
jecxz
data16
push
ret
sub
push
jp
fimull
pop
lret
xor
add
dec
js
ds
ja
repz
ds
rcr
xchg
aam
pop
add
cld
adc
in
sti
xchg
test
negb
mov
rolb
and
ljmp
aad
ljmp
out
std
ror
add
lret
mov
cmpsl
mov
push
stos
xchg
in
sub
jmp
mov
sbb
mov
scas
mov
mov
lea
stc
push
xchg
enter
mov
aam
xchg
adc
nop
clc
clc
pop
cwtl
mov
or
fstpt
stos
mov
pop
test
call
inc
push
adc
xchg
lcall
xor
stos
div
jo
rcr
xchg
es
stos
pushf
int
dec
push
xor
xchg
fdiv
arpl
lret
rcrb
nop
movsl
inc
push
pop
inc
sbb
mov
pushf
in
scas
push
mov
xor
jmp
lret
out
sahf
cmp
testb
mov
mov
jg
mov
mov
sbb
cmp
pop
sbb
shr
movsb
repz
pop
ljmp
push
push
push
imul
jecxz
into
stc
out
xchg
pop
pop
push
call
lret
mov
mov
lret
in
fiaddl
lret
push
fmulp
jecxz
fwait
and
loopne
pushf
enter
bound
rol
dec
daa
jl
jns
lret
jmp
sarl
mov
div
sbb
sub
jp
mov
mov
adc
stc
test
lea
pushf
fwait
add
mov
shrb
mov
jno
push
les
xchg
dec
adcb
div
add
push
pop
rcrb
flds
mov
pop
mov
inc
int3
push
inc
jmp
or
mov
lcall
or
push
mov
mov
mov
cmp
xchg
int3
push
js
clc
push
fists
xchg
mov
mov
dec
aad
jbe
addb
popa
ret
pop
xchg
pop
imul
mov
xchg
pushf
jg
aam
sbb
call
int3
push
push
and
pop
sub
pop
lret
mov
cmpsb
call
loop
inc
scas
cld
and
push
ret
pop
lock
pushf
mov
fcompl
and
andl
xchg
jp
ret
imulb
fadd
add
fcomps
lahf
addr16
mov
cmp
mul
mov
xor
inc
rorl
test
jp
aam
or
pusha
es
add
sub
mov
ret
pop
pop
pop
mov
ss
fdivp
filds
shl
lcall
pushf
call
add
xchg
aas
sbb
out
and
sahf
out
inc
shrb
pop
push
into
into
mov
addr16
jae
push
dec
out
into
cmp
lock
dec
pop
les
enter
xchg
push
mov
push
into
ficomps
nop
jp
cwtl
aaa
xlat
lcall
loop
subl
rclb
stc
sub
fs
sbb
push
push
inc
divl
push
or
jo
inc
mov
pop
pop
or
pop
insl
sub
pop
inc
sbb
out
scas
leave
jp
pop
cli
push
ret
sub
push
push
push
push
lcall
mov
xchg
aad
add
pop
fadd
decb
cwtl
into
dec
xchg
jmp
inc
ret
or
mov
and
out
idivb
lret
mov
test
push
lds
add
xor
sub
push
sub
push
ficomps
mov
enter
sub
lea
shll
clc
inc
scas
mov
repnz
xor
jns
xor
xchg
out
push
or
or
ljmp
pop
incb
jmp
ljmp
test
jnp
push
rorb
inc
xchg
into
cmc
movsb
ret
mov
sbb
push
dec
mov
cli
inc
pop
and
rcrb
hlt
les
push
ret
push
hlt
mov
pop
jmp
int
inc
test
fsubl
xchg
loop
xchg
pushf
dec
outsb
cmpsb
jecxz
mov
sbb
cmpsb
fistps
xor
mov
cs
xorl
sbb
enter
ret
enter
mov
lret
and
nop
add
push
add
mov
jae
pop
adc
push
test
push
ds
dec
inc
ror
pop
xchg
or
adcb
data16
mov
in
push
or
testb
fnstsw
mov
push
pavgw
hlt
pop
xchg
divb
lock
and
pop
inc
jmp
rclb
push
mov
push
mov
lret
xor
xchg
mov
or
les
fldl
jge
gs
lret
dec
or
in
sahf
mov
pop
aas
mov
out
cmpl
in
les
into
shlb
cmp
add
xchg
in
pop
mov
sbb
rcrb
fists
fs
add
push
pop
cmpsb
xchg
sub
mov
jbe
cld
mov
and
mov
add
inc
test
jo
test
movl
les
mov
xor
into
shrb
outsb
pop
pop
rclb
mov
pop
mov
lret
les
stos
out
ficomps
xchg
not
into
cwtl
mov
cmp
fisubl
mov
or
cwtl
sub
cmp
add
stos
mov
repnz
xchg
scas
fsts
movsl
int3
pop
mov
out
popa
fwait
and
ss
aam
adc
enter
mov
rclb
mov
or
cmp
push
call
jp
xchg
mov
mov
mov
mov
incb
mov
jb
call
push
cmp
ficomps
lcall
repnz
adc
xor
push
and
mov
sbb
int3
call
or
xor
pushf
andps
add
subb
and
repnz
inc
pop
lock
xchg
shrl
aam
inc
stos
pop
xchg
repnz
xchg
sahf
jb
jp
xchg
jae
jp
cmp
or
out
repz
cmpsl
mov
data16
or
call
test
dec
push
out
mov
jg
add
nop
add
add
sub
cli
pop
xorb
and
push
xchg
lahf
fmuls
jmp
push
pop
call
and
repnz
cld
aad
mov
scas
rolb
cmp
lcall
cli
xchg
call
xchg
jne
pushf
add
xchg
push
push
cmp
mov
lret
and
aad
jle
out
rclb
sub
xor
addr16
mov
dec
mov
dec
das
les
mov
push
lret
fisubrl
jp
test
push
and
push
mov
out
pop
cmp
clc
les
aaa
test
mov
cmp
push
or
sub
shlb
aas
and
push
vunpckhps
add
cmp
mov
jp
int3
stos
sahf
nop
mov
in
js
aas
jmp
les
out
add
adc
stos
pop
mov
notl
mov
push
enter
jb,pn
mov
pop
int
ds
add
fcmovb
aad
fmuls
call
repnz
fsubrl
les
fadds
push
cli
jp
out
fstp
stc
dec
push
pop
push
es
adc
test
mov
pop
cs
mov
ljmp
inc
lahf
cld
pop
mov
out
mov
ss
clflush
lcall
pop
cmp
cld
cwtl
movsl
xchg
mov
push
mov
pushw
mov
iret
xlat
xor
stos
push
lcall
ljmp
fwait
ror
out
out
push
push
jns
pop
add
mov
ficompl
ret
jb
sub
lret
mov
or
lock
jp
out
es
cwtl
push
daa
pushf
pop
and
xlat
fstl
mov
outsb
pushf
push
mov
dec
call
sahf
mov
int3
add
call
cs
stos
mov
pop
pop
jnp
pop
mov
filds
dec
push
add
aam
xchg
jecxz
gs
cmp
mov
dec
aam
mov
push
adc
mov
push
loop
imul
repnz
out
pop
sti
push
out
pop
cmp
in
clc
add
mov
addl
cmp
or
mov
pop
pop
mov
int3
push
int3
repnz
xchg
cmp
scas
xchg
cli
jge
or
lods
dec
stos
pushf
decl
sti
push
addb
in
es
add
cmp
out
push
mov
pop
or
cld
enter
add
xchg
pop
neg
aas
jl
stc
mov
mov
mov
into
push
cmp
mov
rcrb
testl
aam
xchg
mov
jns
pop
mov
cld
add
pop
aaa
std
jp
sar
fcoml
daa
into
sub
pop
jo
pushf
mov
outsl
cmp
rclb
shlb
mov
aam
sub
mov
mov
add
dec
insl
aam
mov
out
xor
arpl
pop
xlat
push
cld
or
lock
sahf
push
pop
cmp
dec
je
add
int3
ret
out
and
push
jnp
enter
or
ljmp
or
lds
inc
or
out
fcomps
inc
ds
xchg
mov
outsl
pop
cwtl
mov
adc
push
cmpsl
clc
mov
lds
shl
push
mov
cmp
stc
pop
push
inc
push
pushf
or
repz
cmp
clc
out
mov
or
hlt
mov
and
fsubp
iret
push
and
xchg
mov
xor
lea
jb
mov
dec
cld
cmpsl
adc
sahf
xchg
lret
int3
mov
mov
dec
pop
inc
aam
cmp
add
inc
in
out
mov
stos
cli
mov
or
inc
scas
mov
fcomps
punpckhbw
cmp
rcl
mov
ficompl
jae
test
test
sub
ret
and
push
mov
into
in
int3
dec
negl
fidivrs
pop
lcall
ds
cmc
pop
sahf
call
addl
ds
mov
mov
or
mov
mov
rcrb
xlat
aas
mov
sub
mov
test
and
mov
mov
add
or
push
fidivrl
dec
std
lret
dec
lcall
repnz
enter
xor
pushf
fs
aam
add
pusha
mov
push
pop
mov
mov
add
xor
pop
shlb
xchg
add
fimull
pop
les
or
pop
call
call
push
movsl
mov
fmulp
pop
xor
or
ficompl
in
dec
push
dec
cmp
insb
push
enter
test
movsl
movsb
jnp
out
adc
rcrb
scas
xlat
in
xor
test
push
jecxz
bound
pop
dec
ljmp
cld
lret
or
push
jb
pop
es
or
lock
aam
scas
push
imul
cmp
pop
mov
jo
les
cmc
out
mov
jns
and
shr
ss
shlb
adc
out
or
pop
lds
push
in
jns
gs
fstl
xchg
mov
mov
mov
jg
cbtw
cmp
and
cmpsb
ljmp
xchg
cli
jecxz
lret
or
pop
insb
ds
xchg
mov
in
cmpl
stos
jno
in
jae
shlb
ds
pop
hlt
mov
stc
cmp
xchg
fimuls
ret
call
test
dec
cld
cwtl
or
imul
or
push
leave
arpl
xor
aam
insb
jns
jmp
int3
and
lret
mov
xor
pop
mov
cmp
aam
xchg
les
jnp
fcom
pop
loopne
in
aam
push
mov
clc
outsb
out
ljmp
inc
pushf
fmuls
cli
std
repnz
repz
add
pop
mov
lret
push
les
enter
or
scas
xchg
mov
lret
lcall
fimuls
cmp
repnz
cwtl
out
sbb
and
sbb
imul
jbe
sbb
into
pop
pop
lret
push
sbb
jecxz
jge
aam
out
mov
cli
sbb
xor
lahf
push
out
mov
ljmp
lock
sahf
repnz
outsb
insl
jb
xchg
pusha
stos
sbb
fdivl
cmp
and
xchg
xor
sub
mov
int3
jg
mov
push
sub
mov
enter
mov
idivl
mov
fistpl
iret
cmpsl
ds
lret
inc
sbb
xor
fdivs
sub
push
clc
imul
lcall
xor
mov
mov
mov
stos
cwtl
pop
int
test
xchg
lock
push
sahf
cmp
and
pop
mov
fwait
jle
adc
mov
lock
cmpsl
movsl
jb
xor
clc
or
add
mov
fistps
rclb
lret
mov
xchg
pop
or
and
adc
inc
out
lret
push
sbb
cwtl
mov
cmp
mov
sbb
faddp
lahf
jmp
cmp
push
enter
out
lock
test
xchg
or
rclb
repnz
f2xm1
stos
mov
cmpsb
jle
loope
sti
hlt
sarb
pushf
gs
push
fisubrs
lahf
pop
fidivl
aad
int3
ds
or
cld
dec
roll
nop
hlt
xchg
dec
xor
outsl
xor
movsl
sub
add
add
sahf
xchg
enter
jg
push
xor
xchg
mov
add
imul
imul
or
jg
mov
xchg
jbe
and
mov
fadds
mov
pop
add
testb
xchg
mov
push
mov
adc
into
fcompl
test
lcall
mov
dec
push
jp
ljmp
push
adc
ret
out
and
rorb
test
lock
mov
push
pushf
lods
cmp
incb
fiadds
mov
cmp
test
push
into
push
nop
outsb
mov
mov
dec
cld
mov
pop
dec
xchg
adc
cmpsb
movsb
jmp
loope
push
jb
pushf
adc
dec
pop
push
pop
mov
pop
in
outsl
aas
sbb
or
into
cmp
pop
stos
out
or
nop
popf
cmc
test
mov
enter
hlt
leave
and
cmp
xchg
pushf
push
nop
int3
mov
xchg
fcoms
mov
stos
sbbb
pop
dec
mov
push
mov
dec
cs
mov
repnz
dec
jnp
xor
gs
shlb
or
cmp
out
pop
lret
pop
push
or
fadd
adc
hlt
incb
fdivl
pop
lcall
mov
ds
repnz
jae
sbb
adc
fildll
test
subb
fstps
fsubrs
dec
lcall
mov
mov
and
cmp
sahf
les
aam
push
pushf
lret
fs
int
push
ret
or
mov
pop
shlb
and
cs
mov
sahf
jno
cld
push
xor
cmp
add
push
xchg
orb
testl
mov
arpl
dec
pushf
or
scas
int
mov
mov
popa
adc
pop
sbb
dec
cmc
cld
filds
xor
cld
push
cwtl
jne
pop
rcrb
jo
mov
dec
sub
mulb
xchg
mov
cld
loope
es
and
jb
mov
push
lcall
push
imul
cld
push
cs
and
test
adc
fcmovnb
pop
push
int3
inc
add
jge
mov
dec
mov
mov
insl
jb
jp
insb
mov
popa
idiv
ret
pushf
enter
cmpsl
ljmp
cmpsb
fs
nop
or
jns
les
wrmsr
dec
mov
or
jle
cmp
mov
inc
aam
jo
nop
mov
cld
in
rorl
enter
imul
ja
nop
and
push
push
or
mov
call
repnz
aam
and
pop
into
call
lcall
cwtl
jle
andl
mov
xchg
xchg
pop
add
and
insl
pop
repnz
in
dec
xchg
cmp
pop
or
movsb
dec
mov
dec
mov
fmuls
xor
inc
fldt
pop
mov
orl
pop
lods
pop
jno
pop
add
repnz
movsl
pop
idiv
pop
rolb
pop
dec
push
mov
mov
jne
inc
xor
outsb
xchg
lret
scas
pop
add
cwtl
sub
mov
outsb
dec
data16
lcall
push
pop
jbe
sbb
daa
fs
mov
je
int3
mov
dec
cld
mov
or
pop
orb
push
and
or
roll
sbb
inc
mov
mov
push
mov
add
out
dec
loope
fwait
ror
ret
or
les
pop
outsb
cmp
rcr
push
inc
push
mov
mov
add
and
pop
js
mov
repnz
sbb
lds
sarl
pop
data16
hlt
pop
lock
js
pop
inc
das
clc
xor
enter
fcmovu
int
std
stos
loop
add
mov
data16
rcl
pop
mov
push
in
lcall
loope
int3
movsl
xchg
std
stos
cwtl
fistpll
mov
test
sub
xchg
jp
testb
sahf
jmp
sub
int
test
nop
pop
cmp
push
fiadds
mov
mov
dec
mov
test
bound
pop
out
fiaddl
xchg
mov
pop
jp
not
inc
cs
push
into
dec
inc
dec
repz
cmp
xor
sahf
rdtsc
adc
pop
in
aam
sbb
ljmp
in
and
out
loop
pop
and
ljmp
push
add
jle
les
sub
mov
push
mov
in
int
fucomp
pop
out
stos
cmp
pop
dec
mov
das
jp
scas
xchg
add
les
es
push
stos
repnz
dec
mov
cmp
sar
mov
ret
ret
sarl
mov
imul
test
lea
and
loopne
add
push
fucompp
test
into
stos
add
xchg
push
rorl
sahf
adc
fldcw
lock
loope
loop
jp
rcrb
add
or
in
jne
pop
xchg
loope
imul
lret
lcall
pop
fs
stc
push
mov
test
adc
fldt
call
cs
mov
jns
ljmp
add
aad
enter
mov
int3
pop
imul
mov
xchg
lods
and
test
popf
jbe
aam
add
pop
or
callw
push
cmp
push
pop
jno
addr16
ret
cmpsb
arpl
add
xchg
sbb
add
in
ja
or
out
lahf
sbb
push
enter
lods
xchg
outsl
sub
in
repnz
addr16
lcall
stos
enter
jb
repz
and
sarl
inc
fsubs
into
jae
sub
mov
push
rorb
lret
push
and
pop
ss
push
mov
xchg
das
cmpsl
dec
cld
repz
dec
jl
pop
js
loope
repnz
adc
add
and
and
ja
lret
add
mov
sahf
xchg
mov
or
imul
add
pop
push
or
sub
sahf
xchg
fimuls
ficomps
xchg
ljmp
pop
jp
cmpsl
clc
test
mov
lret
call
jnp
cmpsb
cltd
mov
cwtl
pop
dec
push
ljmp
cltd
sbb
push
leave
bnd
imul
test
lds
adc
push
pop
fs
pop
mov
lods
repnz
repnz
rclb
and
call
jb
push
lods
aad
add
add
push
push
rclb
adc
mov
jae
add
int3
dec
mov
or
decb
or
and
stos
xchg
lcall
pop
divl
call
lret
mov
cwtl
fidivrs
and
enter
jo
push
jbe
mov
sub
aas
push
in
dec
jnp
lods
pop
rcrl
xchg
aas
adc
rcll
call
and
testl
and
into
repz
xor
pushf
lss
aad
fiadds
cwtl
push
fs
sub
xchg
fcomps
int3
add
hlt
lret
icebp
mov
push
cltd
stc
sarb
ret
xchg
testb
inc
fcmovbe
add
jmp
pop
lret
fcoml
into
add
inc
sar
pop
mov
or
cwtl
jb
hlt
arpl
inc
pop
pushf
mov
add
out
setbe
cld
add
lcall
sarb
into
push
xchg
mov
in
mov
mov
test
push
dec
test
mov
lcall
mov
pop
adc
or
mov
cmp
xchg
outsl
push
or
aaa
and
out
dec
mov
xchg
mov
adc
repnz
test
jbe
cmp
ficoml
cld
lock
fildl
sub
adc
lcall
mov
adc
and
push
aaa
cld
and
into
icebp
add
push
nop
faddl
lock
xor
push
scas
enter
test
ret
mov
and
out
mov
pop
mov
dec
ficompl
maskmovq
testl
push
or
dec
nop
ljmp
lock
ss
ficoms
stc
or
psubw
jno
and
cmp
call
in
pop
nop
or
pop
int
data16
pushf
ss
rcr
dec
test
mov
xor
push
jmp
rclb
add
mov
stos
cmp
stos
push
enter
sahf
call
les
xor
call
inc
and
push
pop
test
lock
and
mov
push
dec
adc
testl
pop
push
cmp
out
mov
enter
and
mov
insb
sbb
call
jmp
mov
push
ficoml
push
jle
scas
xor
inc
cmp
sbb
mov
ljmp
add
enter
dec
xchg
fcmovbe
push
in
rcrl
ret
ret
call
adcb
sbb
push
cwtl
clc
leave
xchg
in
jbe
lods
jbe
xor
rcl
addr16
rolb
insl
inc
nop
clc
enter
xor
adc
frndint
scas
out
stos
or
add
test
sbb
rcrb
inc
cmp
test
add
loopne
mov
mov
xchg
cli
pop
fcmovb
inc
psubb
out
ljmp
ja
pop
adc
popa
fcmovnbe
and
lock
mov
cmp
shr
aam
pop
test
add
aam
lret
test
jb
loope
divb
test
mov
ljmp
fsubrs
mov
lret
sahf
hlt
pusha
dec
les
mov
aaa
cmp
rorb
xor
notb
aaa
stos
sbb
xor
push
push
out
fdivrl
loopne
ret
leave
fwait
pop
inc
push
and
daa
pushf
xchg
jae
push
lock
push
fisubrs
xchg
scas
hlt
pop
sub
cmp
mov
mov
push
xchg
cmp
mov
subb
and
sbb
xor
sar
lock
mov
push
divb
out
push
in
mov
pop
push
mov
xchg
push
aas
and
xchg
sahf
inc
xchg
lret
lret
and
repnz
push
pop
or
push
out
enter
hlt
sbbl
or
cmp
stos
push
xlat
incl
mov
pop
shrb
int3
fstpl
or
sbb
dec
out
clc
aas
mov
pushf
loope
and
and
mov
cmp
cwtl
shl
adc
push
stos
or
out
call
fistpll
jecxz
push
cmp
pop
mov
decb
loope
cmp
fidivrs
fidivrs
ljmp
push
mov
leave
fcomps
or
mov
xchg
push
push
jns
pop
jne
fs
mov
jge
mov
mov
enter
ret
rclb
adc
lcall
dec
and
test
fidivrs
pop
xchg
lock
loope
xor
mov
pop
mov
mov
add
rorb
mov
jae
mov
mov
lcall
into
push
xor
invd
mov
sti
dec
fmul
test
repnz
xchg
outsb
call
push
fcompl
ds
ficoml
pop
add
sarb
fcmovb
cld
sbb
push
sbb
rorl
jbe
mov
push
adc
test
mov
fsub
or
movsb
mov
sarb
add
xor
aam
out
cmp
clc
mov
lret
and
nop
test
or
mov
rcl
dec
dec
mov
cltd
lcall
mov
rorb
in
xchg
xchg
inc
mov
xchg
sbb
notb
mov
ljmp
xor
dec
xor
push
arpl
sub
xchg
xchg
test
fmul
stos
out
push
cmp
pop
mov
mov
xchg
hlt
ret
mov
cmp
call
shl
nop
loope
xchg
xlat
movsl
lcall
iret
sti
cld
push
jmp
pop
ret
mov
jmp
jg
inc
cltd
loope
pop
lahf
mov
pop
mov
fisubrs
call
xchg
adc
nop
aas
mov
pop
inc
xorl
cmp
add
or
inc
dec
int
mov
mov
out
jp
lock
pop
lcall
or
dec
dec
dec
inc
xor
cmp
nop
lahf
mov
stos
xchg
ret
insl
mov
cmpsb
std
movsl
jecxz
cwtl
xor
xor
test
push
push
inc
push
inc
xor
lret
jp
mov
nop
pop
lock
jbe
xchg
std
push
pop
mov
dec
lret
pop
pushf
pop
mov
mov
xor
xor
outsl
sub
xchg
stos
ja
push
pop
pop
pop
sti
jb
fidivrs
test
mov
pop
andb
and
mov
xchg
mov
out
inc
int3
sarb
fwait
mov
sbb
cld
cwtl
pop
inc
inc
mov
adcb
hlt
add
pop
adc
push
fcomi
subb
hlt
dec
sahf
and
mov
stos
test
mov
pop
cmp
out
rol
add
mov
lcall
test
or
or
clc
pushf
fnstenv
lret
pop
sbb
push
rorl
shlb
xchg
mov
and
sub
into
mov
or
sub
push
pop
ljmp
ljmp
mov
mov
out
fadd
int3
idivb
aam
fisubrl
mov
mov
in
xor
mov
imul
ljmp
sar
mov
inc
lret
fdivs
pop
or
and
sarb
scas
lcall
dec
decb
jns
fimuls
mov
pop
int
add
and
popf
scas
jns
push
inc
popf
cmpb
and
mov
stc
dec
cld
mov
xor
jo
inc
int3
outsl
push
clc
ja
repnz
out
inc
mov
lock
sub
jp
cld
rcrb
pushf
xor
cli
cmp
mov
or
inc
jnp
add
pop
loopne
dec
push
push
les
dec
sbb
or
sbb
sarb
ret
sbb
adc
dec
out
dec
into
nop
inc
out
scas
or
shrb
pop
dec
fmulp
sahf
cmp
mov
inc
mov
push
stos
and
or
push
das
fadds
ss
mov
cmp
cmp
mov
std
push
jmp
ret
pop
or
call
cld
frstor
inc
push
ret
mov
sub
add
or
inc
nop
dec
clc
xchg
faddl
xchg
jmp
imul
in
dec
cmpl
test
push
mov
in
out
mov
mov
mov
xor
mov
ds
fmull
test
les
mov
jp
mov
fwait
ret
lret
inc
lret
int3
addr16
sahf
hlt
aas
xor
cmpsl
dec
dec
cld
test
jle
cmp
nop
enter
sub
add
test
ret
mov
mov
cli
sub
aam
cld
mov
arpl
push
mov
pop
sbb
and
and
and
push
mov
nop
inc
adc
adc
pusha
out
add
aaa
addr16
notb
rol
into
mov
test
sub
mov
ret
pop
xlat
out
jge
and
cld
stos
mov
fcmovu
enter
mov
dec
ret
aas
push
push
lcall
pop
mov
enter
xor
gs
into
fcompl
cwtl
nop
sbbb
leave
mov
inc
mov
or
test
jo
push
mov
mov
test
sti
nop
aam
mov
ja
cld
and
cwtl
push
cmp
ficoms
rcrb
pop
imul
jp
lcall
out
movl
xor
sahf
and
loop
dec
into
test
ljmp
cmp
mov
hlt
cmpsb
push
xlat
lret
adc
addr16
or
call
mov
xchg
mov
sub
cmp
push
addr16
sarb
mov
lcall
jno
repnz
push
dec
std
enter
xchg
stos
push
inc
pop
or
xor
mov
fdivs
lock
inc
xor
add
out
sahf
testb
and
pop
lea
mov
test
cmp
clc
push
jp
into
adc
or
mov
push
xor
mov
push
pop
sub
pop
adc
hlt
pop
enter
lock
inc
adc
mov
add
clc
xchg
push
add
lcall
insl
inc
enter
dec
mov
xchg
and
insl
xor
idivb
dec
int3
stc
ret
mov
mov
mov
xchg
pop
adc
jmp
jne
movsl
lods
stc
in
mov
outsl
cwtl
jnp
sbb
movb
in
push
test
stos
mov
jnp
or
test
push
les
pop
xor
mov
test
shlb
lret
cmpsb
mov
mov
hlt
movsl
shlb
stc
or
fsubl
pop
jmp
xchg
cwtl
sub
call
fs
fadds
add
push
dec
ret
mov
xor
lret
repnz
dec
mov
out
shlb
fadds
pop
hlt
popa
repz
push
ret
xchg
add
push
repnz
in
inc
mov
clc
or
mov
fsubrs
dec
arpl
mov
mov
repnz
xchg
mov
pop
cmp
fcoms
out
insb
cwtl
push
pop
adc
mov
pushf
add
dec
lret
mov
cmp
shrb
test
xchg
pop
jnp
aaa
adc
ret
insb
push
pop
dec
adc
icebp
xor
adc
xor
push
and
rclb
cwtl
fmuls
lcall
push
mov
cmp
jb
mov
bound
insl
into
pop
add
mov
fsubrs
sub
dec
fs
mov
stos
push
repz
loop
icebp
addr16
add
and
out
pop
mov
push
call
es
push
enter
mov
test
bound
aas
and
jge
popf
mov
pop
add
push
or
cwtl
mov
sti
lock
fsubl
pop
ljmp
fcomp
sub
lret
adc
scas
sbb
pop
xchg
jg
insb
lret
into
scas
inc
insl
jbe
fcoml
jge
mov
xor
fcomps
ret
push
push
popa
inc
ret
push
das
adc
pusha
xchg
xor
or
adc
mov
fstl
xchg
decb
push
push
mov
xchg
icebp
jo
ds
mov
add
xchg
pop
int3
dec
jmp
call
into
fdivl
aas
push
mov
pop
into
push
mov
or
mov
popa
mov
mov
shlb
outsl
mulb
add
jmp
incl
mov
xchg
int3
lcall
pop
pop
stos
mov
mov
push
nop
push
add
pop
dec
ud1
adc
ror
dec
out
hlt
mov
jge
push
pop
repz
xor
movsb
cmp
or
cmp
into
push
cld
movsb
pop
arpl
out
dec
sbb
push
cwtl
xor
pop
lret
fmul
ret
scas
lret
pop
xchg
testb
mov
mull
xchg
xchg
pop
insl
and
mov
mov
aam
clc
ds
int
push
fstl
fildl
inc
dec
sbb
xor
pop
jnp
mov
or
adc
ljmp
jp
fdecstp
or
mov
cs
scas
lcall
inc
movb
xor
inc
push
pop
xchg
cmpxchg
fstps
cmp
rcrb
fcompl
add
fcoms
into
xor
enter
add
push
push
rcll
imul
ljmp
or
ret
mov
imul
mov
sbb
popa
mov
dec
repnz
and
test
inc
xor
xchg
movsb
mov
dec
stmxcsr
pop
and
dec
mov
add
cmp
call
jecxz
adc
mov
out
and
out
xor
clc
movsl
dec
bound
out
xor
shl
fucomip
dec
pop
or
fidivrl
mov
push
int3
xchg
insb
sbb
dec
sbb
add
insb
or
mov
mov
add
pusha
repnz
xchg
lret
jecxz
push
ljmp
fsubr
cli
mov
ficomps
cmpsl
or
and
inc
xor
cmp
int3
or
add
adc
inc
adc
add
push
xchg
fimuls
stos
addr16
mov
fidivrl
into
call
stos
stos
fdivs
rol
mov
cmc
pop
sti
iret
push
xchg
nop
and
cltd
push
push
sub
fcmovu
cmp
pushf
fidivs
add
mov
insl
es
ror
nop
mov
ds
mov
push
xchg
mov
testl
pop
sub
and
ret
xchg
mov
inc
jnp
mov
pmuludq
std
idiv
jge
xchg
shrb
lock
and
push
cmp
mov
xchg
or
notb
mov
lcall
nop
ds
pop
mov
xchg
sbb
cmp
repnz
mov
sbb
test
push
mov
and
hlt
push
xchg
insl
inc
pop
pop
pop
shlb
mov
fdiv
repnz
push
sbb
add
inc
mov
xchg
sbb
lock
sbb
gs
cmp
into
shr
or
add
jb
das
js
repnz
mov
xchg
lock
fmul
fcom
insb
jns
mov
stc
ljmp
sbb
adc
pop
ret
mov
lcall
es
cwtl
and
push
mov
xor
icebp
or
mov
pop
push
and
push
cld
arpl
ljmp
mov
fsubrl
imul
stos
and
ror
cmpsb
pop
fwait
aas
clc
scas
push
repz
test
push
leave
shr
mov
rcrl
push
pop
mov
lret
cli
push
adc
dec
pop
jbe
sahf
add
pop
adc
pop
cmpsl
fsubrl
pop
out
lahf
pop
mov
int3
cvtdq2ps
into
les
cli
push
test
pop
aas
fcoml
mov
fcoms
push
ljmp
mov
lods
push
and
nop
mov
cwtl
scas
dec
jmp
ret
lea
push
out
into
xor
jp
lcall
mov
int3
sbb
sub
or
mov
std
jmp
in
pop
test
xor
fcmovnbe
es
add
clc
hlt
and
mov
hlt
pop
mov
repz
or
mov
shlb
shlb
jmp
xlat
iret
push
cmp
cmpsl
cmp
xchg
mov
jp
test
int3
pop
and
es
div
xchg
inc
stos
les
or
cmovge
mov
inc
xchg
ds
mov
mov
stos
pop
in
mov
out
add
dec
rorl
fists
addb
je
push
into
test
loop
jo
jbe
clc
loope
and
dec
popa
xor
push
xchg
mov
in
mov
add
faddl
outsb
jnp
push
insb
mov
sbb
fdivr
and
or
call
jnp
aam
and
lfs
xchg
or
xor
mov
jg
inc
icebp
nop
push
push
aas
fisttps
fdivr
dec
pop
ds
sar
push
dec
mov
and
push
dec
mov
mov
push
mov
xlat
xchg
jmp
pop
cmpsl
pushf
sub
movsb
mov
cli
rcrb
xlat
into
and
push
sub
lock
shlb
mov
cwtl
mov
mov
jnp
loope
testl
scas
movsl
pop
mov
sbb
jg
mov
ljmp
sbb
std
dec
daa
and
scas
cmp
fcoms
pop
dec
rorb
xorl
gs
mov
scas
faddp
add
and
pop
xor
push
push
or
sub
neg
push
lock
in
dec
cmc
xor
int3
repz
push
lcall
mov
fisttps
or
fcomps
inc
fbld
mov
lock
out
daa
add
decb
lock
push
cmpl
insl
fdivp
mov
mov
inc
mov
loopne
aam
mov
scas
ds
xor
cltd
fiadds
jae
xchg
xchg
dec
out
dec
test
mov
into
das
mov
or
lock
inc
pop
sti
adc
daa
ret
movb
dec
sahf
add
icebp
inc
or
in
cmc
mov
push
std
repnz
add
pusha
sti
je
push
sub
movsb
notb
jo
pop
sahf
and
nop
in
push
sar
sarl
jmp
cmpsl
and
push
sub
icebp
xchg
push
rcll
or
rol
leave
xlat
jns
lret
jmp
and
ficoms
call
push
and
lock
fstpt
imul
push
pop
ret
int
or
xor
cmp
ret
shll
lret
outsl
inc
dec
int3
shr
mov
xlat
nop
pop
lret
xchg
xchg
jbe
sub
cld
pop
mov
push
sbb
repnz
ljmp
pop
les
es
sub
jns
mov
xor
aad
sbb
mov
dec
enter
mov
stos
push
movsb
sbb
xchg
lods
stos
and
les
and
shlb
test
xchg
aam
mov
jg
fcompl
imul
shlb
xchg
sbbl
js
cli
cmpsl
lock
pushf
aam
xor
xchg
or
xchg
rclb
lock
and
ret
nop
mov
cmp
add
int3
push
les
pop
cld
std
push
shlb
cmp
lahf
sti
add
shl
lret
ljmp
add
cmp
mov
xlat
test
sahf
jp
xchg
or
push
or
mov
mov
btc
mov
aad
call
repnz
les
mov
sub
pop
push
jmp
jp
pop
push
ds
repnz
test
jo
aas
mov
imul
cmc
dec
dec
jbe
adc
cs
pop
xor
or
inc
adc
adc
cmp
lcall
jnp
clc
push
mov
pushf
lahf
xchg
jmp
bound
or
cmp
and
push
fs
lret
jnp
fsubr
nop
xlat
pushf
out
pop
addr16
xor
xchg
pop
stos
mov
into
jg
pop
pushf
fimull
push
les
jne
or
or
in
mov
xchg
pop
mov
test
sbb
ret
dec
pop
ljmp
cmp
shrb
or
call
hlt
mov
sti
or
cmpsl
xor
push
test
ficompl
jp
sub
in
test
hlt
popa
scas
mov
mov
dec
scas
psrld
arpl
std
int
and
sar
pop
mov
push
jns
jmp
push
in
pop
call
nop
add
add
push
cld
fisubrl
cmc
repz
xor
xchg
dec
lcall
addr16
pop
sarb
mov
cmp
call
jge
and
repnz
iret
lock
ljmp
cli
sti
xor
clc
pop
pop
cmp
lahf
cli
icebp
ljmp
stc
or
pop
mov
or
xor
lcall
mov
mov
repnz
mov
sbb
loopne
cwtl
add
mov
loop
ljmp
repnz
hlt
mov
fwait
lock
sbb
addr16
add
pushf
imulb
rclb
into
rsqrtps
pop
or
fcoml
mov
arpl
push
ret
mov
cs
cld
ret
xchg
clc
mov
mov
fcomps
lock
into
lret
ret
call
ret
mov
mov
push
mov
sahf
ljmp
je
adc
fisubrl
xchg
into
jnp
int3
ljmp
enter
cmc
mov
shll
xchg
xchg
xor
pop
lcall
gs
ret
or
mov
add
mov
fs
pop
stos
xor
ljmp
les
jno
call
fidivl
cld
pop
fidivrs
mov
mov
add
into
sbbl
into
ljmp
sti
push
sbb
push
mov
cmp
push
or
push
add
pop
in
sbb
into
mov
or
es
ret
stos
add
enter
mov
fmuls
rolb
and
aaa
lahf
cli
inc
pop
pop
jb
cmpsb
push
pop
js
cli
fdivp
outsb
aam
data16
mov
cmp
movsb
shrb
mov
mov
pop
lcall
or
adc
mulb
pop
adc
pop
leave
mov
lcall
dec
pop
addr16
shlb
int3
pop
dec
cwtl
sahf
ds
cwtl
clc
sub
inc
mov
push
xchg
aas
roll
loop
push
mov
test
outsb
and
add
xor
out
xor
and
scas
push
int3
call
mov
out
xor
xor
cwtl
rcr
orps
cld
addr16
cmp
stos
mov
aam
jp
or
mov
lret
outsl
mov
out
out
add
cwtl
pop
pop
fsubrl
cmp
test
stos
dec
xchg
rcl
sarl
clc
jmp
fcomps
push
out
push
scas
mov
fcmovu
jae
xchg
and
int3
pop
add
scas
or
les
mov
dec
mull
es
dec
pop
or
les
mov
xorb
fmull
lock
jp
cld
ror
hlt
add
loop
jb
jb
inc
cld
push
mov
mov
fidivl
xchg
sar
push
stos
aas
testl
aad
pop
mov
mov
sub
or
push
xchg
sub
jb
aam
adc
aas
fistpll
mov
lret
into
mov
pop
dec
int
sub
rorb
int3
nop
dec
jbe
out
or
fsubrl
outsb
lods
add
shlb
jecxz
xchg
add
pusha
cli
dec
push
sarb
fdivl
ljmp
mov
mov
dec
jno
inc
pop
lret
push
xchg
idivb
pop
sbb
ljmp
mov
fidivrl
gs
adc
les
sti
or
push
call
cwtl
aam
lret
pop
fucomi
jnp
rorb
push
sub
out
fisubrs
fistps
add
push
hlt
lret
fwait
cld
add
rolb
stos
pop
push
pushf
lock
push
and
insb
mov
sbb
xor
stos
push
jmp
sbb
hlt
fdivrl
scas
mov
out
call
adc
xchg
out
ljmp
push
ljmp
fcoms
std
repz
cmpsl
lcall
sarb
mov
push
and
and
ret
add
fcoml
sub
jecxz
mov
cmp
mov
dec
add
cld
ss
or
fidivrl
loopne
push
add
mov
pop
jg
mov
mov
pop
aam
sbb
ss
push
sub
rcl
xchg
lret
xor
cwtl
push
outsl
mov
push
adc
sti
shlb
pop
lds
arpl
lcall
push
mov
hlt
sahf
add
lret
bound
shl
lret
lcall
xor
mov
scas
pop
pop
das
pop
repnz
and
or
lret
into
aad
push
jns
cli
pop
push
jbe
lock
or
sub
adc
nop
mov
stos
mov
adc
cmp
xchg
div
jmp
rolb
loopne
stos
enter
cmp
scas
ljmp
push
xor
lret
stos
or
mov
out
xchg
hlt
clc
and
dec
clc
dec
xorb
hlt
aaa
jae
shrl
std
cli
xor
stos
clc
mov
sahf
cld
mov
ret
push
xchg
push
sub
sahf
out
pop
out
push
mov
cwtl
jecxz
jbe
popf
xor
xchg
mov
push
out
mov
push
and
jb
push
lret
in
loopne
inc
push
add
popa
jnp
outsb
and
rcll
lret
and
adcb
sbb
mov
cmp
push
pop
add
add
adc
jno
ss
xchg
jns
pop
jp
rolb
sarl
call
js
mov
je
repnz
jp
jb
test
push
or
xor
sarb
ljmp
stos
int3
test
orps
sbb
and
call
jg
cli
inc
mov
push
add
sbb
into
mov
pop
jp
push
jnp
test
and
sbb
scas
or
jae
idivb
fwait
inc
jmp
push
sbb
mov
sub
and
mov
aam
cmp
mov
push
xor
ret
xor
or
jbe
and
and
mov
fcompl
jbe
les
es
mov
push
shrl
push
lcall
push
pop
fcom
xor
ret
sahf
lcall
xor
pop
xchg
pop
push
rclb
sbb
ficoml
fmul
fildl
sbb
sbb
dec
aaa
sahf
xchg
xchg
lds
pop
call
scas
mov
lds
push
adc
loopne
int3
mov
shr
pop
sbb
or
seto
mov
sbb
test
push
pop
xor
addr16
xor
rcrb
test
mov
pop
negb
xchg
into
mov
stos
mov
jns
ret
ljmp
mov
andl
adc
push
fidivrl
cwtl
test
std
fistpll
iret
imul
mov
test
push
or
mov
sarb
sub
stos
jecxz
mov
lods
add
fmuls
push
cld
sbb
xor
push
daa
pop
sbb
loope
add
jmp
mov
mov
and
out
mov
les
mov
push
call
das
ds
xchg
add
mov
push
mov
rclb
sbbl
fcmovbe
mov
fdivr
test
mov
lret
fiaddl
sbb
andb
xor
gs
into
pushf
fimull
inc
lcall
mov
jecxz,pn
jbe
pop
push
push
ds
shlb
jns
push
test
push
enter
ljmp
jg
lret
xchg
sub
xor
js
faddp
mov
dec
packssdw
scas
lret
sbb
push
add
repz
fmull
ljmp
add
aas
test
mov
sbb
pop
inc
in
jp
push
mov
mov
add
iret
inc
sub
mov
pop
mov
and
clc
sbb
dec
aam
xor
push
nop
mov
sbb
wbinvd
xor
pushf
mov
mov
xchg
sub
pop
test
mov
cwtl
jo
rcl
push
mov
sub
subl
sub
inc
push
rorb
sbb
pop
pop
push
scas
add
inc
xor
pop
cmp
dec
mov
mov
aas
pop
xchg
movsl
mov
or
inc
jns
jnp
cwtl
ret
jns
push
outsb
cmp
mov
and
xor
ror
fs
ljmp
das
mov
add
push
fdivl
enter
lret
add
or
hlt
call
dec
inc
inc
scas
mov
mov
pop
pop
push
mov
aam
rcll
sti
ljmp
sbb
mov
pop
mov
daa
repz
leave
push
pop
cli
push
ror
fcomi
cmp
or
out
mov
pop
pop
mov
cwtl
mov
decb
cmp
les
xchg
jg
shlb
lret
scas
and
push
jo
lret
push
in
pop
outsb
mov
ficoms
stos
push
mov
scas
cmpsb
das
pop
ljmp
push
call
jbe
hlt
pop
xor
lock
mov
push
xchg
mov
mov
clc
stos
mov
mov
pop
hlt
ror
adc
daa
sbb
push
js
jp
xchg
cmp
out
nop
mov
xor
pop
cld
shlb
mov
les
aam
ret
out
jae
push
push
ljmp
lret
aas
out
sahf
cld
test
rcrb
fsubs
mov
cwtl
jb
jbe
bound
cmp
mov
jp
ret
into
shlb
mov
int3
out
jge
cwtl
hlt
mov
outsl
mov
das
mov
push
mov
test
pushf
int3
xchg
repnz
sbb
stos
pop
mov
cmp
into
ret
bound
push
shlb
scas
or
fidivs
leave
lcall
out
cltd
aas
and
pop
or
cld
ret
scas
xor
inc
leave
xchg
stc
gs
lock
mov
inc
lods
popa
insb
pop
rolb
mov
bound
jne
mov
push
pop
push
or
xor
inc
mov
and
pop
mov
pop
push
flds
movsl
lret
daa
clc
pop
jns
les
stc
xchg
nop
into
test
inc
hlt
outsb
or
repnz
add
ljmp
pop
stos
xor
lahf
mov
xchg
call
add
inc
push
mov
mov
lea
pop
sbb
imul
mov
shr
into
sbb
sub
out
add
push
fsubr
lcall
stos
stos
lock
xor
pop
jb
mov
inc
mov
fsub
rclb
or
adc
jnp
stos
sub
xor
int3
into
pop
push
cltd
xor
mov
pop
sarb
rcrb
cmp
xchg
pop
faddl
cmpsl
inc
jb
mov
dec
or
mov
fwait
xor
lock
jp
les
scas
pop
arpl
mov
mov
out
js
mov
add
test
shlb
pop
xor
loope
xorb
jp
jle
push
add
cmp
or
int3
add
and
mov
mov
lret
es
ficoml
ja
ret
adc
addr16
cmp
mov
fcomps
jno
pop
jbe
dec
mov
xchg
aaa
bound
mov
into
xchg
aas
mov
mov
into
inc
dec
add
nop
in
xchg
dec
iret
stc
ljmp
inc
sahf
cwtl
adcl
and
jle
stos
lret
ljmp
lret
test
cwtl
hlt
out
dec
xchg
fdivp
or
icebp
pop
xchg
sub
inc
mov
ss
int3
dec
jl
popa
stos
and
and
lods
xchg
push
cwtl
sete
sbb
call
push
lahf
stos
or
lret
mov
add
mov
push
int3
fisttpll
inc
sbb
loopne
xchg
fdivl
or
inc
cmp
pop
mov
jbe
stos
and
add
clc
xchg
add
push
cmpsb
push
add
pop
aam
sarl
jp
jge
rorl
xor
pop
dec
push
into
out
pop
stos
xchg
lret
push
test
add
ds
fmul
push
into
xor
mov
hlt
pop
or
push
fmulp
stos
nop
outsb
scas
mov
cs
mov
push
xor
lea
sbb
nop
push
cld
sbb
mov
mov
push
in
jb
xchg
mov
jnp
mov
outsb
rcrb
fcomps
bound
hlt
pop
out
sbb
arpl
jbe
or
mov
sti
scas
add
push
pop
ljmp
cld
clc
pop
add
rclb
movsb
xor
mov
sub
popa
fiaddl
clc
enter
shll
mov
and
mov
inc
adc
iret
mov
andb
jns
sbb
ds
out
mov
mov
sbb
cmp
lcall
mov
ds
test
fcmovbe
pushl
xor
fs
mov
and
in
incb
aaa
enter
push
mov
mov
push
insb
xor
aam
mov
dec
xor
xor
xor
sbb
lods
or
mov
negb
fsubrp
pop
jg
lock
mov
int
xorl
addb
test
cmpsb
ljmp
decb
xor
pop
push
pop
addr16
dec
add
arpl
jle
scas
dec
fnstcw
or
pop
js
ror
pop
faddp
inc
mov
mov
push
daa
fcoml
xor
stos
sbb
push
repz
cmp
lret
loopne
cmp
aam
int3
repnz
add
fcomps
mov
je
ja
icebp
mov
aad
enter
mov
cmpsl
shrb
fs
mov
rcl
nop
jb
pop
push
mov
fs
shl
cmp
push
push
push
aas
mov
xchg
inc
sbb
ret
xor
or
xlat
jnp
lret
push
sub
jnp
test
sbb
push
jnp
shlb
pusha
cwtl
sahf
outsb
shrl
mov
mov
mov
clc
psrld
subl
decb
int3
iret
cwtl
inc
dec
out
fadds
aam
cmp
call
rcrb
push
or
or
push
hlt
sar
sarl
lahf
cmp
pop
lock
mov
js
enter
and
call
and
and
fdivrl
ficoml
scas
or
es
into
outsb
cmpsl
add
lock
mov
cld
xchg
pop
mov
mov
rcrb
xchg
xor
lock
xchg
cmp
mov
pop
push
pop
out
pop
push
nop
add
inc
adc
insl
and
pavgw
xchg
test
mov
push
adc
testb
pop
enter
adc
test
call
xchg
push
dec
cltd
inc
xor
inc
sahf
mov
or
daa
and
imul
fmuls
cmp
cld
add
push
adc
jmp
idiv
and
or
inc
ret
hlt
fadds
bswap
dec
test
sbbb
mov
js
push
and
jp
js
stos
push
repnz
xchg
enter
push
int3
and
or
cmc
push
scas
push
lcall
insb
scas
mov
sub
rorb
enter
out
inc
ljmp
lcall
push
sbb
inc
pop
xchg
into
xchg
dec
pop
push
fsubl
adc
int3
enter
xlat
mov
rcll
mov
sarb
cmp
cwtl
xchg
mov
sub
push
scas
loop,pt
or
xor
icebp
dec
pop
or
clc
cmp
lahf
and
aas
repnz
mov
aam
jmp
cmpsl
xchg
xor
pop
mov
mov
mov
mov
xchg
lock
or
push
fs
lcall
pushf
outsb
cmovno
das
aaa
xchg
ja
push
decl
pop
xchg
insb
aas
nop
out
mov
icebp
cmp
stos
sbb
psubb
sti
into
ljmp
pop
mov
hlt
aam
xor
or
sbb
hlt
rorb
gs
fadds
sbb
sub
mov
push
push
das
mov
dec
or
shll
push
sahf
or
lcall
wrmsr
mov
das
fdiv
and
pushf
or
pop
jnp
mov
enter
xchg
mov
mov
sbb
call
imul
add
dec
addb
in
add
fiaddl
push
push
scas
mov
push
pop
hlt
test
xor
mov
or
push
pop
mov
ret
mov
fmull
push
into
stos
jmp
je
decl
adc
mov
lcall
int
aam
and
into
cmp
repnz
aam
out
and
fmulp
ja
bound
fdiv
les
add
push
mov
adc
mov
fwait
mov
cld
push
lret
lcall
mov
mov
call
push
cmp
sahf
pop
mov
repnz
jmp
cld
push
mov
lock
divl
xchg
lods
pop
aas
jmp
std
inc
jmp
fsubr
adc
lock
xor
mov
cmpsb
mov
int3
pop
xor
rcrb
adc
nop
pop
call
and
cwtl
or
pop
lret
jl
xlat
jl
add
mov
ret
pop
iret
out
sbb
lds
jae
lahf
and
xchg
push
pop
inc
xchg
xchg
push
xchg
mov
imul
xchg
adc
nop
xchg
insb
xor
test
jp
xchg
xchg
cmp
or
test
movsl
int3
sub
pop
xchg
cmpsl
jecxz
hlt
push
mov
sub
xchg
stos
pushf
sub
enter
icebp
enter
in
pop
out
shl
pop
sahf
repnz
ljmp
cmpsl
push
push
mov
fistps
in
inc
ljmp
mov
rcrb
outsb
or
repnz
adc
jae
mov
cld
add
mov
pop
hlt
cltd
clc
add
test
mov
ficoml
push
sbb
lcall
ds
and
or
repz
repnz
adc
out
xor
add
and
pop
push
xchg
sarb
mov
lcall
pushf
repnz
pop
cli
repz
inc
and
mov
aam
arpl
mov
xorb
jbe
push
out
data16
movntps
cli
loope
add
fs
xchg
addr16
cmc
and
add
dec
pop
pushf
xchg
incl
inc
jb
jo
jmp
pop
ljmp
fistps
xchg
in
sbb
cld
scas
ret
mov
mov
arpl
shlb
repz
lret
test
add
lock
and
cmp
push
xchg
decb
fsubr
xor
ret
stos
insl
dec
cmp
rolb
mov
in
adc
pop
mov
inc
add
mov
push
push
xchg
mov
mov
mov
mov
push
js
icebp
hlt
out
pop
aas
int3
push
fcompl
add
pushf
scas
ret
add
sbb
pop
data16
inc
push
pop
xchg
pop
jl
xor
rorb
cmp
and
add
push
cwtl
cmp
add
xchg
les
das
fsubrp
stos
mov
mov
sti
push
pop
shlb
stos
fcomps
fisubrl
push
mov
dec
xchg
and
inc
add
xor
or
sbb
push
inc
xor
push
clc
push
shrb
ljmp
push
shlb
scas
dec
xor
aam
mov
mov
cmp
rorl
push
fcomps
mov
sbbl
inc
inc
btr
das
xor
pop
cmc
sbb
sarb
stc
mov
or
ljmp
sbbw
mov
imul
das
add
mov
cmp
dec
cmp
rclb
fdivr
in
stc
cld
pop
lret
loope
or
cld
or
and
subb
pop
shlb
lcall
mov
stc
test
jp
sbb
pop
cld
or
jecxz
mov
popa
xchg
fmul
int3
jge
pop
adc
pop
ds
xchg
mov
mov
pop
ja
xchg
iret
fldenv
push
lcall
ds
mov
in
and
push
and
inc
xor
or
add
mov
stos
mov
ss
xlat
dec
push
pop
or
add
addps
jmp
ljmp
cli
or
out
int3
repnz
or
ret
loope
pop
sti
sbbl
cmp
mov
push
addb
movsl
inc
jae
rcr
ret
inc
xchg
xchg
imul
xorl
cmp
rol
fcoml
out
loop
xchg
xchg
push
testb
mov
cwtl
pop
out
out
add
xor
aad
add
icebp
loop
pop
mov
clc
into
xchg
lock
cmp
fisubrl
pushf
nop
aam
call
enter
or
nop
add
aam
adc
and
repz
fwait
pop
les
lret
sub
pop
stos
push
imul
pop
cld
mov
mov
mov
addb
add
dec
add
mov
shrb
shlb
testb
push
push
inc
xchg
jo
adc
and
add
fmul
arpl
adc
pop
push
push
cmp
ficoml
pop
out
pushf
loopne
push
movsl
mov
pop
cmpsb
push
pop
lret
scas
lret
sahf
add
jnp
pop
nop
mov
shll
fwait
mov
pop
xchg
ret
pop
repnz
imul
lcall
hlt
and
or
cmp
lret
subb
loopne
lsl
aas
pop
mov
fxtract
xchg
lds
add
inc
fcoms
cmpsl
nop
rol
sbb
mov
or
dec
cwtl
hlt
inc
dec
pop
jmp
ret
fcmovu
repnz
adc
ret
lock
push
or
pop
ds
mov
xchg
and
int
lcall
nop
pop
cmpsl
fistps
inc
xor
xchg
cld
test
adc
cmp
push
lock
push
into
or
clc
cwtl
out
or
push
pop
and
daa
jg
shl
stc
mov
ja
insl
in
pavgw
pop
inc
adc
lcall
jnp
pushf
lods
aaa
mov
cld
movb
adc
push
les
stos
shrl
mov
xor
fcom
lcall
push
push
mov
xchg
mov
pop
pop
pop
les
arpl
stos
add
test
mov
into
dec
shrb
mov
imul
dec
dec
xchg
and
lret
xlat
adcb
sahf
dec
ficompl
xor
int3
fdivrp
cwtl
xchg
sarb
in
or
mov
arpl
call
lcall
lret
or
rcr
add
jecxz
lods
or
xchg
xchg
dec
ficoms
insb
outsb
repnz
movsb
sbb
push
mov
rolb
mov
lret
mov
or
push
fs
shlb
mov
mov
scas
mov
shlb
data16
lcall
mov
push
out
push
adc
pop
push
es
pop
sahf
push
pop
jecxz
cld
ret
xor
cmpps
push
pop
shlb
cmp
push
scas
inc
pop
or
push
xor
nop
sarb
cli
aad
lock
div
fbstp
rolb
adc
push
or
clc
pop
mov
xchg
or
push
fcmovu
insb
mov
fdivp
ds
cmp
xchg
ret
hlt
or
aad
mov
insl
push
xchg
fisttpl
and
push
inc
mov
or
movsl
push
aas
lds
push
xchg
in
or
arpl
enter
push
dec
int3
repnz
ss
xchg
shlb
dec
outsl
jecxz
ror
mov
lea
rol
sub
jp
nop
mov
add
push
pop
mov
lods
aas
cli
enter
mov
scas
sbb
and
or
dec
icebp
inc
inc
call
outsb
lock
push
fimull
out
aas
scas
daa
or
clc
jns
popa
incl
lds
pushf
shrl
lret
pop
psllw
scas
xchg
mov
enter
mov
mov
push
popf
and
push
inc
mov
ret
pop
add
enter
push
push
pop
neg
ljmp
mov
mov
add
dec
addr16
jmp
add
add
sahf
xor
mov
lret
repnz
mov
push
and
mov
test
pop
add
xchg
push
xor
ret
cmp
dec
ret
aam
mov
sahf
je
mov
mov
clc
pop
mov
jl
fcmovbe
or
rcl
lcall
call
movsb
imul
xchg
or
rcrb
pop
mov
ficoml
or
mov
lock
rclb
mov
xchg
out
ret
or
rorb
xor
inc
pop
popf
es
sbbb
ljmp
stos
or
lret
push
push
iret
push
clc
out
outsb
adc
push
xchg
in
pushf
mov
mov
sub
into
cmp
jmp
cmp
push
pop
sahf
int
push
push
bound
pop
ljmp
cmpsb
scas
mov
and
dec
ss
pop
fdivrp
mov
and
rcrb
scas
xor
stos
addr16
xor
push
cmp
mov
fldenv
jp
in
mov
sub
push
mov
je
mov
sbb
test
xlat
inc
pop
pop
add
pushl
add
inc
inc
add
mov
or
bound
pop
mov
subps
ljmp
stos
repnz
es
adc
push
test
sbb
adc
mov
fsubl
rclb
repz
xor
push
cmpsl
mov
and
xchg
pushf
call
nop
repz
cs
loopne
lret
enter
or
clc
outsb
mov
es
ficoml
pop
movsb
dec
sbb
loop
push
mov
insl
mov
add
xor
xor
sar
dec
pushf
clc
or
ficoms
fs
into
shr
or
je
add
lcall
bnd
push
push
xchg
leave
mov
andb
fwait
insl
add
push
ja
sbb
pop
inc
fadd
cld
aas
xchg
add
push
xor
mov
adc
out
idiv
sarb
enter
ljmp
dec
ret
orl
dec
sahf
subl
or
xchg
daa
cmp
sar
pop
sub
or
sti
test
lret
test
subb
sub
nop
int3
in
cld
mov
push
lods
imul
stos
pop
cmpsl
ss
ds
stos
push
ljmp
xlat
mov
cli
out
ret
add
pop
cmp
stos
jp
lcall
jl
cmp
push
out
notl
bound
jne
fisubrs
lds
addr16
jl,pn
mov
xchg
xorb
xor
inc
clc
inc
fists
pusha
bnd
push
push
inc
jecxz
mov
push
testl
clc
mov
fsubrs
ss
ljmp
jmp
inc
das
inc
or
xchg
adc
shrb
push
ret
jne
call
sbb
test
or
hlt
lret
cwtl
xchg
js
fistpll
sbb
push
ret
mov
fucomp
lret
push
aam
push
jecxz
lret
mov
outsl
ret
or
aam
mov
aam
popf
out
mov
mov
mov
int
push
mov
cmpsb
add
mov
mov
cmc
mov
add
and
stc
xchg
pop
pop
xchg
cmpb
sbb
mov
sub
sbb
dec
outsl
or
mov
pop
push
shll
jp
repz
fdivs
mov
faddl
xchg
xor
or
hlt
pop
mov
sub
lret
ficoml
dec
cld
mov
xor
mov
arpl
nop
and
out
push
stos
sar
into
ficoms
dec
add
cld
out
adc
aas
inc
hlt
ljmp
fcoms
loopne
shrb
mov
cmp
push
pop
inc
nop
mov
inc
icebp
and
push
mov
push
jne
cmpsl
out
ds
rclb
fsubs
sahf
or
sbb
xchg
xchg
pop
stos
mov
repz
add
out
and
and
xchg
out
dec
cld
hlt
xor
add
xor
fcomps
in
push
int3
jp
int3
fiaddl
mov
ret
aas
inc
add
pushf
mov
adc
push
jns
push
push
add
test
xchg
lret
call
mov
ljmp
inc
hlt
call
sub
test
cwtl
cmp
fucomi
fsubrp
scas
mov
jg
into
mov
jge
fidivl
pushf
neg
pop
out
cmp
mov
ficoms
ds
xchg
or
fwait
xlat
sbb
mov
jno
fmuls
mov
cmpsl
cld
xchg
push
dec
add
loope
out
mov
ljmp
mov
stc
jmp
das
stos
pop
aas
stos
and
ds
mov
push
fisubs
test
mov
dec
clc
aaa
pop
mov
push
adc
aam
lcall
push
add
xchg
xchg
test
push
int3
push
push
imul
aad
mov
cs
fildll
mov
push
dec
ljmp
sbb
rcr
xchg
les
pop
push
jb
in
std
jno
repnz
sahf
mov
js
pop
mov
add
enter
or
not
iret
and
neg
mov
lcall
push
jbe
cmp
dec
lahf
jbe
pop
push
call
sbb
ljmp
dec
enterw
adcl
aam
loope
mov
repnz
into
stos
les
add
sbb
cmp
scas
ficoms
jnp
mov
rcr
hlt
push
inc
xor
test
add
pushf
cmpb
pop
stos
jbe
or
pop
roll
fnop
mov
sahf
or
push
xor
inc
jb
clc
jmp
aad
loope
mov
pop
out
mov
les
stos
jbe
xchg
mov
sub
or
bound
ret
out
push
in
rclb
dec
outsb
dec
push
test
push
lods
fdivs
and
repnz
add
ljmp
or
fucomip
push
push
mov
and
and
ss
mov
mov
or
repz
xor
or
lret
mov
mov
xchg
ds
aaa
sbb
pop
mov
push
scas
out
cmp
ficoms
scas
rclb
adc
jb
xchg
adc
stos
jle
add
inc
ljmp
add
cmc
sbb
scas
loopne
mov
dec
mov
divb
clc
pop
cld
lock
push
cmp
push
rolb
ret
mov
sbb
mov
rclb
enter
imul
pushf
insb
out
add
xor
add
ret
iret
push
dec
and
in
pop
clc
ret
fs
fmul
fcompp
add
movsl
cmp
out
mov
jno
jmp
add
push
jle
rclb
push
and
mov
lret
rcl
or
lcall
jo
add
jmp
mov
add
adc
push
rol
sti
cltd
pop
pop
cld
in
into
cmc
std
stc
push
sbb
push
inc
cld
sarl
imul
dec
lret
xor
rorb
dec
cmpsl
mov
filds
je
mov
repnz
in
test
mov
xor
call
push
ljmp
and
stos
cmpsb
mov
cmp
or
push
xchg
int3
js
mov
mov
mov
and
in
stc
pop
mov
ficompl
add
adc
loope
testb
sha256rnds2
call
xchg
inc
and
rcr
sbb
lock
pop
push
or
cli
jno
push
cmp
inc
jbe
es
int3
mov
add
mov
rcll
sahf
or
lret
sbb
push
cwtl
xlat
and
mov
inc
add
push
push
xor
decb
shr
push
adc
push
test
inc
lock
ljmp
add
mov
cld
imul
clc
sbb
inc
fstpl
pop
or
push
jae
sub
loopne
cmpsl
lock
enter
mov
add
test
scas
jp
cld
pop
add
mov
cmp
inc
sbb
lea
shr
xchg
xchg
or
fcoms
je
xchg
cmp
push
xchg
hlt
clc
jp
enter
mov
sub
lahf
mov
xchg
cmp
out
pop
add
mov
mov
pop
hlt
add
outsl
scas
mov
mov
inc
xchg
nop
ret
test
lock
mov
sbb
mov
scas
adc
pop
shlb
mov
fdivrl
cmc
xor
mov
jmp
adc
mov
sbb
pop
push
stos
mov
call
inc
or
mov
push
push
mov
jae
bnd
and
pop
cld
out
adc
mov
or
incb
xchg
frstor
mov
lods
dec
push
or
jo
rcll
mov
mov
push
mov
and
repz
push
into
and
mov
lret
aaa
stos
ds
clc
sbbb
out
add
sarb
cmpsl
mov
dec
mov
call
je
cld
movsl
xchg
and
mov
mov
mov
push
fcomps
outsb
mov
sbb
lret
sahf
mov
mov
sbb
push
xchg
adc
psubusb
jb
adc
fistpll
lcall
mov
lock
nop
aas
jb
mov
dec
fiadds
int3
mov
mov
cmp
sub
test
mov
rorb
cmp
clc
hlt
cs
or
push
punpcklwd
loope
lock
stos
and
imul
xchg
xor
shlb
in
pop
fwait
pop
out
stos
xor
into
push
pop
sahf
push
aas
sub
xor
sahf
test
dec
inc
daa
and
outsl
pop
addr16
lock
push
inc
stos
push
fmulp
fs
adc
lret
aam
push
rclb
mov
mov
mov
shl
cld
sbbb
jp
lret
and
jb
jo
sub
pop
ds
int3
nop
hlt
mov
xchg
mov
adc
stc
push
mov
call
inc
or
mov
xchg
xchg
or
sub
int3
or
add
scas
mov
stos
jo
shr
add
aaa
ret
add
pop
pop
lock
outsl
rol
push
mov
push
lods
xchg
xor
xor
cmc
ret
sar
xchg
fmulp
xchg
mov
sbbb
repnz
test
cmp
mov
cmp
aam
std
leave
mov
bound
pushf
push
das
dec
push
rcl
xor
xor
bnd
mov
fisubl
out
clc
pop
mov
sbb
rclb
sub
xchg
clc
cli
scas
pop
ret
pop
scas
into
mov
loopne
mov
out
pop
sub
pop
and
fiaddl
mov
mov
ret
popa
pop
pop
adc
mov
cmp
jmp
inc
lcall
adc
add
and
jo
scas
fcmovnbe
xor
mov
xchg
pop
mov
jns
stos
ficomps
jbe
add
cwtl
call
push
enter
sbb
int3
xchg
mov
mov
add
mov
test
out
cmp
in
mov
cwtl
dec
outsl
test
or
add
sbb
adc
dec
aas
outsb
adc
sahf
cmp
lock
jns
cmpsb
rcr
cmc
mov
cmp
mov
xlat
lret
test
xor
push
mov
or
dec
pop
pushf
inc
xor
push
stc
and
xor
cwtl
lret
rorb
mov
pop
int3
leave
test
stc
in
add
movsb
push
mov
aaa
mov
mov
and
mov
push
push
fstps
test
mov
adc
push
lock
es
loopne
gs
stos
outsb
into
out
stc
into
pop
or
or
mov
cltd
push
fnop
pop
fisubl
imul
mov
inc
and
jnp
pop
jecxz
cld
out
mov
cmp
jmp
inc
lret
lock
mov
std
test
lds
pop
jnp
rcr
jb
or
pop
jmp
mov
jns
scas
testl
shrb
xor
mov
push
lret
add
shlb
in
repnz
sbb
daa
scas
es
cmp
pushf
mov
lcall
pop
mov
jp
out
std
pop
jno
push
lcall
pop
or
push
pusha
out
push
outsl
xchg
xor
ret
or
inc
lock
stc
jb
mov
ret
idivb
lock
pushf
int3
hlt
or
cmp
ljmp
dec
pop
dec
pop
push
add
scas
stos
sahf
in
mov
cld
scas
in
pop
jns
psubd
test
cmc
gs
fidivrl
mov
push
pminub
stos
and
into
mov
cwtl
jbe
jnp
out
pop
pop
test
test
stos
mov
aad
scas
ljmp
mov
sbb
mov
add
fnsave
and
sahf
sarb
ss
xchg
xor
mov
ja
push
stos
push
into
repnz
jecxz
and
nop
push
mov
je
inc
imul
fidivl
add
and
and
repnz
pop
xlat
jnp
push
push
out
and
xchg
mov
push
cmp
mov
into
push
push
sbb
push
mov
ljmp
addr16
shlb
pushf
idivb
incl
ja
push
lret
jle
pop
ret
pop
ficoms
call
aam
pop
sub
cwtl
sahf
xor
into
sub
pop
aam
ret
scas
aaa
mov
stos
push
and
add
lock
scas
and
sub
sub
mov
mov
dec
mov
aas
or
cwtl
add
aad
push
push
aas
clc
ljmp
xchg
popa
dec
imul
ljmp
cmp
ret
jbe
outsl
mov
shl
lcall
test
int3
xor
push
pop
cltd
push
mov
xchg
fxtract
push
fcmovu
out
sbb
addb
mov
pop
push
or
pop
xchg
loop
xchg
out
test
test
adc
faddl
xor
clc
call
lcall
xchg
mov
sbb
mov
cld
xchg
fcmovnbe
clc
pop
cwtl
mov
pop
ret
rcrb
mov
sti
add
or
dec
or
fdivr
push
push
sar
fs
add
flds
jp
pop
bound
in
jb
jmp
mov
cmovns
jp
mov
pop
mov
push
rorb
lcall
mov
xor
enter
pushf
mov
lret
inc
cmp
mov
xchg
mov
js
addr16
pop
and
adc
aas
inc
repnz
mov
pop
push
cld
inc
ss
cmp
adc
out
dec
jae
sbb
jnp
mov
dec
enter
cmp
ret
and
lods
jns
add
js
hlt
imul
dec
push
cmp
add
enter
dec
lret
shlb
and
insb
dec
add
push
xor
pushf
or
into
dec
int
xor
fbstp
cmp
add
faddl
or
rcrb
call
fs
testb
std
add
call
fcomp
push
mov
sbb
adc
imul
pop
hlt
por
pop
push
fidivs
cmp
outsb
mov
push
clc
fidivrs
ret
es
add
push
pop
mov
mov
dec
out
daa
imulb
adc
aad
ds
fdivr
mov
sub
adc
enter
push
dec
sub
xor
xchg
pop
inc
das
ret
ret
outsl
je
inc
iret
push
in
or
ret
into
shrl
xor
testb
push
mov
mov
nop
add
pop
pop
dec
or
loop
mov
or
sbb
push
repnz
or
pop
hlt
push
and
in
mov
pushf
pop
mov
and
dec
repnz
jp
jp
mov
cmp
mov
and
pop
leave
loopne
add
nop
cld
mov
fadds
call
xor
add
cmp
out
into
and
clc
lret
xor
sbb
test
rcrb
repnz
sub
ds
jp
fidivrl
nop
aam
pop
sahf
ret
xchg
lret
cmp
out
int3
mov
cld
into
dec
cwtl
push
sahf
add
xor
xor
aas
sbbb
push
cmp
xchg
shrb
int3
adc
aam
ds
rolb
mov
lock
mov
test
fdivrl
add
xchg
sbb
pop
pop
sbb
mov
xor
or
inc
aaa
stos
cmc
or
mov
mov
mov
out
cwtl
add
out
sar
stc
jne
pop
xchg
push
mov
clc
call
cld
lret
jbe
dec
xorl
push
fistpll
or
pop
push
ficoml
and
mov
cld
shrl
mov
int3
jnp
add
das
lcall
fadds
mov
call
cwtl
add
mov
pop
jmp
pop
mov
xchg
mov
mov
mov
xor
jno
cmp
mov
lahf
out
ljmp
sti
push
fsubrp
inc
xchg
xabort
jnp
push
loop
scas
cmp
push
mov
mov
add
pushf
jmp
inc
ljmp
daa
ss
call
mov
rcl
in
xchg
out
in
ret
dec
inc
xchg
cld
call
mov
out
pop
inc
pusha
fadd
inc
nop
test
test
adc
lds
cmpsl
pop
es
dec
mov
adc
lahf
sub
push
ljmp
fs
pop
push
dec
clc
push
or
or
fisubrl
lret
add
stos
and
mov
dec
mov
out
cwtl
jno
shl
push
idivl
cld
movsb
popf
ffreep
inc
cli
lock
pop
push
xor
or
in
lods
push
cmpsl
das
cmp
mov
aam
add
mov
sbb
sbb
fiadds
pop
mov
push
cltd
or
les
fistpl
cmc
add
mov
pushf
cmp
or
cli
or
and
xchg
stos
push
loopne
inc
repnz
mov
scas
add
outsl
pop
push
pushf
sbb
xor
repnz
xchg
jno
out
pop
lret
or
test
push
out
add
push
mov
mov
mov
clc
pushf
xchg
flds
imull
cmp
inc
pop
stos
test
mov
mov
cmpsb
jnp
mov
push
and
jge
nop
jae
xchg
aaa
mov
cmp
rcrb
lcall
call
cwtl
test
sub
mov
adc
and
xchg
adc
add
divb
push
out
pop
arpl
lret
pminsw
mov
xor
pop
pop
lcall
mov
lahf
mov
push
rcrb
cwtl
add
clc
and
mov
inc
or
xchg
call
aam
sahf
xchg
les
ljmp
test
xchg
popa
inc
dec
push
aaa
adc
xchg
movsl
mov
in
cmp
test
ficompl
inc
cltd
xchg
dec
push
or
or
enter
shrb
ja
dec
sbb
and
jno
sub
int3
adc
xor
int
dec
cwtl
out
add
stos
and
mov
lcall
mov
xor
rcrb
or
xor
mov
outsl
xor
or
dec
faddl
clc
out
xor
ss
pop
mov
lret
push
setle
enter
nop
rcrb
mov
test
xorl
push
jb
or
and
push
subb
mov
xchg
add
pushf
out
cwtl
or
push
pop
xor
lret
sbb
or
mov
les
inc
psrlq
sbb
mov
decb
clc
test
repnz
add
or
jns
hlt
fsubr
lret
rol
ljmp
mov
and
jbe
mov
xor
test
mov
ficomps
idiv
movswl
movsl
stc
pop
xchg
push
xor
sahf
call
repnz
sbb
repnz
testb
add
pop
jp
pop
adc
or
insb
xor
scas
repnz
daa
lcall
dec
pop
fcomps
mov
cwtl
xor
scas
xchg
pop
imul
pop
fsubr
pushf
push
das
push
shrb
jle
gs
mov
jg
aam
stos
or
call
out
ret
fsubrl
cmpsl
adc
rcrb
rcrb
xlat
scas
xchg
icebp
popa
outsl
xlat
jns
or
xchg
mov
mov
movsl
sbb
and
icebp
stc
je
fldcw
fwait
push
fsub
pop
fstps
cvtdq2ps
ds
push
pushf
push
add
xchg
pop
cs
or
mov
lods
sub
mov
add
popl
push
shlb
lods
xor
lock
mov
mov
cld
mov
fldt
mov
cmp
into
xchg
repnz
pop
pop
xor
nop
stc
fisubrs
lods
fisubrl
or
pop
mov
pop
sbb
in
test
loop
jne
mov
scas
test
cwtl
pop
subl
ljmp
xchg
fs
lcall
stos
add
test
gs
fs
adc
add
into
or
mov
or
dec
mov
lret
add
mov
leave
addps
push
imul
sahf
loop
xor
shlb
lock
or
mov
or
ficoms
mov
xchg
xchg
push
rol
and
or
pop
testb
mov
lea
mov
pop
jnp
lcall
repnz
mov
hlt
mov
xor
xchg
lcall
xchg
mov
or
adc
push
dec
test
mov
add
or
cld
jp
call
push
push
test
cmp
mov
cmp
into
pop
pop
pop
or
sbb
psubusb
ljmp
pop
push
stos
pop
sbb
push
arpl
xchg
mov
test
pop
ds
int3
test
out
rcl
nop
fistl
ljmp
sahf
jecxz
add
cld
test
clc
jbe
rclb
sub
jp
inc
xchg
and
inc
call
push
xor
addr16
enter
add
repnz
out
call
out
clc
repnz
std
pop
push
gs
inc
stc
pop
fistpll
sub
add
add
cld
fisubl
pushf
cmp
outsb
and
xor
mov
jb
or
push
enter
fcompl
ret
sbb
push
addr16
add
ljmp
xchg
cmp
std
pop
mov
mov
imul
scas
mov
or
push
fcmovb
in
repnz
and
ficoms
push
lcall
fsub
xchg
fwait
and
mov
ljmp
mov
add
scas
mov
mov
aas
jne
rcrb
push
and
and
jecxz
pop
scas
loopne
cwtl
fldl
adc
xor
imul
xor
lahf
inc
rcrl
fsubs
ret
jo
aas
dec
push
push
pop
xchg
mov
adc
dec
fcmovbe
mov
dec
bound
jl
mov
jecxz
push
ficompl
fsubr
aam
or
cmp
lcall
push
imul
js
in
mov
fcoml
pop
inc
mov
repnz
pop
ja
orb
clc
mov
pop
stos
sub
ficomps
jmp
hlt
std
fcmovnb
push
lcall
enter
or
stos
sbb
pop
ret
push
cmpsb
fdivrp
or
pop
pop
fs
orb
pop
pop
xchg
out
test
or
lcall
and
and
jbe
into
ret
sub
clc
push
rcrl
cmc
mov
les
scas
mov
pop
fdivs
aam
mov
leave
pop
dec
mov
push
mov
mov
out
cmp
xchg
push
pop
testb
xor
sarb
test
hlt
fmull
inc
fwait
sub
test
sarb
testl
xchg
pop
das
test
jecxz
ret
mov
mov
mov
out
rclb
cld
mov
lret
pop
lcall
mov
dec
mov
xchg
dec
push
outsl
cmp
xchg
ret
fsubrs
or
push
cmpxchg
movsl
or
sbb
fsubl
add
xchg
out
or
es
rcrb
gs
outsb
sub
adc
stc
test
ljmp
loope
call
or
xchg
les
pop
loopne
jae
movsb
push
mov
adc
dec
ss
iret
int
mov
aad
push
movsb
clc
fs
cli
imulb
fwait
add
jns
mov
iret
mov
pop
arpl
dec
enter
mov
xor
sbb
cld
aam
int
call
cmp
mov
mov
dec
mov
mov
mov
stc
ds
sbb
inc
out
cld
mov
scas
icebp
lahf
xor
shl
push
stc
nop
faddl
push
cmpsl
mov
nop
mov
pinsrw
mov
xor
mov
push
or
fiaddl
mov
add
andb
adc
lods
iret
push
out
xchg
fisubrl
or
mov
jmp
or
pop
or
jmp
aam
push
loop
and
add
and
hlt
fdivp
inc
fstpt
mov
js
scas
dec
cltd
pop
mov
aam
push
out
lret
stos
sub
mov
shrb
je
xor
arpl
mov
xchg
mov
sub
mov
fdiv
decb
pop
push
push
sahf
imul
cmp
ror
cld
out
jbe
mov
mov
push
cmp
cmpsb
lcall
sbb
rolb
mov
pop
dec
mov
xchg
cmp
add
push
pop
mov
mov
aaa
jns
inc
lahf
cmpsb
dec
movsl
aam
ds
add
in
pushf
fmuls
mov
lahf
lds
mov
je
lods
xchg
inc
push
pushf
inc
ds
pop
fsubl
frstor
pop
lcall
add
test
jge
cmc
cmpsl
lods
and
mov
pushf
sahf
lods
inc
add
repnz
or
fwait
rolb
pop
pusha
cwtl
bndcu
sahf
nop
sub
push
idivl
cld
in
imul
fcoml
fadds
adc
test
xchg
mov
call
fs
jo
push
ljmp
jg
dec
sub
sbb
jmp
mov
sti
mov
call
or
pop
js
cli
sahf
mov
xchg
or
shrb
pop
or
inc
lret
imul
ret
out
fisubs
mov
pop
dec
pusha
inc
cltd
les
sahf
mov
mov
popa
xchg
repz
adc
mov
nop
and
adc
and
sub
cmp
pop
clc
xchg
mov
fadds
shl
nop
cld
adc
ds
or
cwtl
sti
adc
push
neg
and
jne
enter
in
xchg
pop
push
es
pusha
movsb
xor
xor
aas
mov
rolb
dec
shrb
call
std
adc
xchg
ljmp
jns
rolb
dec
add
push
sbb
adc
ffree
lock
mov
mov
xor
gs
leave
fdivl
mov
lods
scas
and
lcall
xor
xchg
nop
add
xchg
aaa
mov
push
cs
push
fisttps
push
push
ret
pop
int3
mov
sbb
nop
dec
cmp
dec
mov
in
pop
daa
fadd
sar
sbb
shrb
push
ds
add
int
aad
fsubrl
fcom
or
cmp
mov
sbb
jmp
sbb
and
push
loop
or
pop
sub
sub
enter
push
sbb
decb
cld
in
push
pop
xchg
loop
es
icebp
mov
ja
mov
fmuls
pop
enter
jle
ljmp
filds
mov
mov
dec
mov
aad
push
jnp
xlat
ja
cwtl
sbb
dec
shlb
mov
mov
fwait
dec
scas
ljmp
mov
mov
push
pop
addl
dec
cli
push
rcrb
pop
iret
add
stos
jmp
mov
or
mov
out
push
jo
jns
cmpl
lret
mov
mov
popf
es
dec
pop
test
xlat
or
pushf
mov
lahf
scas
and
xchg
jg
insb
jo
mov
mov
lahf
sahf
inc
pop
and
push
enter
test
or
shlb
mov
ja
and
mov
ja
push
and
mov
nop
mov
xchg
and
mov
mov
and
push
je
ds
rcl
or
xchg
lcall
pushf
mov
sub
frstor
and
xor
push
dec
xchg
adc
shlb
mov
lods
pop
xchg
mov
xchg
int3
aas
fiadds
pop
pop
mov
pop
xchg
mov
jnp
push
pop
les
cs
mov
adc
sub
dec
sbb
shll
rolb
aam
push
mov
fmull
sub
int3
ret
or
aad
xchg
push
sbb
ret
loopne
xlat
call
mov
pop
test
sbb
data16
sahf
push
pop
mov
lcall
nop
scas
enter
mov
sar
xchg
movb
pushf
lret
aad
rorl
nop
test
repnz
and
jo
vcmpss
enter
int3
pop
es
mov
add
fsubl
mov
lret
aam
jge
stos
fimuls
pop
sahf
nop
xchg
ljmp
pop
lcall
jmp
insb
pop
in
cmpsb
xchg
cmp
bsf
pop
ret
add
hlt
and
xchg
lcall
or
mov
xor
pusha
push
or
fldenv
notb
mov
push
les
aad
in
push
pop
lcall
push
stos
fdiv
out
sahf
sub
clc
pop
ret
jmp
cmp
xchg
nop
mov
mov
int
push
or
xchg
or
inc
hlt
pslld
mov
push
ss
mov
xchg
dec
dec
push
xor
mov
scas
test
inc
push
leave
or
scas
nop
sahf
add
push
ficomps
test
push
mov
and
loop
dec
fdivrs
call
add
ljmp
cmpsb
lret
leave
in
dec
fcmovnb
jp
cmp
enter
pop
outsl
out
inc
push
push
sahf
mov
cwtl
mov
push
inc
add
lock
ficoml
or
push
jg
xor
fdivp
les
or
pushf
push
lcall
push
mov
add
mov
xchg
jp
or
mov
mov
out
push
pushf
mov
mov
nop
out
fcompl
sub
push
jns
push
mov
fdivrp
hlt
cmp
out
ret
jo
aad
fimuls
push
clc
mov
pop
xchg
and
push
mov
repnz
pushf
or
lret
lock
mov
cmp
adc
sahf
fdivl
mov
out
out
push
adc
push
hlt
jmp
and
clc
adc
insl
push
lcall
push
nop
dec
push
push
or
btc
sahf
pop
pop
and
ljmp
mov
push
clc
aaa
test
aam
stos
jecxz
dec
mov
cmp
outsb
and
ljmp
icebp
sahf
rcrl
mov
push
aam
cwtl
into
jae
dec
sbb
mov
stos
dec
add
std
data16
jne
faddl
mov
push
negb
inc
out
test
repz
cwtl
cmp
or
pop
pinsrw
jnp
fidivl
xor
fmul
sub
fucomi
ret
dec
push
push
jmp
hlt
xor
add
aad
or
nop
inc
or
out
call
int3
mov
cmpsb
les
or
add
pop
cld
cltd
add
pop
push
jmp
out
cld
negb
sbb
fidivrs
lahf
pop
in
inc
lret
sar
or
mov
out
fnstcw
jp
add
or
faddl
scas
jae
call
lock
add
and
xchg
push
out
mov
rol
push
ficoml
ficompl
push
cld
enter
mov
xchg
cld
adc
lahf
call
shr
jecxz
push
fimull
setnp
jecxz
xchg
adc
pop
cld
cs
add
out
jnp
shl
in
pop
addr16
mov
jns
pop
fcoms
pop
dec
leave
imul
push
push
lret
xchg
pop
and
out
bound
scas
lock
push
push
clc
out
int3
clc
repnz
inc
lcall
mov
xchg
stos
jns
decb
imul
inc
jb
outsb
sub
icebp
test
cmp
or
fmulp
sub
or
clc
mov
or
add
test
ljmp
imul
xchg
insb
jle
jb
mov
push
ficoms
mov
pop
fistpl
int3
mov
aam
lods
mov
ret
inc
negb
cs
push
test
mov
inc
pop
pop
and
mov
dec
xchg
dec
jb
pop
in
stos
scas
rsm
out
mov
xchg
les
mov
mov
lock
push
cwtl
stos
dec
scas
enter
lcall
push
ss
sub
pushf
out
lret
lcall
sbb
les
ret
cmp
push
dec
xchg
test
mov
push
jp
push
mov
ficomps
ljmp
cmp
cld
add
jne
or
lds
insl
sbb
fs
add
cld
mov
test
mov
inc
or
xchg
in
loopne
mov
fdivrs
sbbb
rcrb
push
sbb
pop
inc
push
lods
negb
pushf
clc
push
push
aam
push
dec
and
fwait
call
hlt
jmp
mov
lcall
movsb
cmp
mov
mov
cmp
ljmp
sub
popa
mov
or
lock
push
sub
pop
ret
ss
xchg
lcall
and
inc
xor
mov
add
repnz
or
test
cmp
or
aas
enter
xchg
jae
mov
pop
dec
insb
mov
push
ds
repnz
ljmp
mov
clc
into
push
enter
lcall
shr
push
pop
pushf
add
mov
adc
push
pop
inc
repnz
jl
mov
mov
or
shl
fisubrl
cmp
enter
fsubl
or
mov
push
mov
or
mov
cmp
test
enter
es
dec
xchg
shlb
flds
test
mov
lret
fcom
int
pop
xchg
call
add
stos
stos
int3
push
lret
cmpsl
push
push
or
pop
sti
adc
push
jns
mov
dec
xchg
mov
sbb
rcrb
into
cwtl
push
xchg
subl
test
mov
test
mov
push
fdivs
and
pop
jnp
push
push
stos
pop
sub
je
ret
mov
sahf
adc
repnz
fisubrl
data16
and
jecxz
or
cmp
push
test
push
mov
into
dec
pop
lret
fildl
ret
mov
lcall
pop
stos
pop
or
std
arpl
int3
movsl
daa
clc
fdivr
test
fdivs
mov
out
mov
sbb
push
sbb
clc
adc
cmp
pop
dec
add
pop
test
cmp
stos
cwtl
mov
and
dec
jp
movsb
je
add
dec
stc
scas
xor
mov
adc
add
and
es
lock
pop
pop
xchg
dec
faddl
out
nop
aas
in
push
sahf
jbe
data16
xchg
sbb
push
or
or
lcall
jmp
pop
mov
imul
aam
int3
push
jnp
xchg
sbb
stos
les
stos
call
pop
mov
gs
mov
es
pop
mov
xchg
stos
fisubrs
or
sahf
mov
xchg
in
or
sbb
push
mov
add
outsb
aam
aad
sti
and
scas
push
repnz
imul
push
notb
test
ds
add
repz
push
outsb
fistl
jbe
fisubrs
xor
shlb
cmp
push
pop
pop
in
nop
jns
pop
push
dec
or
push
or
pop
fistpl
push
add
shlb
lds
into
mov
sub
cmp
pop
xchg
pop
mov
mov
fsubrs
pop
adc
test
shrb
mov
stc
test
mov
or
pmaxub
sbb
or
pop
test
inc
and
mov
pop
decb
mov
push
xchg
std
mov
pop
xchg
ret
push
mov
or
out
enter
sub
sbb
es
cmp
xchg
out
cs
fidivrl
lock
test
out
ffree
pop
xchg
aad
mov
dec
push
mov
adc
xchg
jg
movb
or
pop
fdivrs
test
mov
mov
rcr
fcomp
int
mov
ror
stos
mov
in
pop
add
xor
add
pop
xchg
push
adc
push
pop
adc
adc
dec
pop
cwtl
dec
push
dec
jmp
or
xor
loop
inc
rol
cmp
pop
sahf
mulb
xlat
or
xchg
xor
fsubrl
out
fs
faddp
jae
cmp
hlt
add
add
xchg
addr16
stos
stos
das
scas
jb
into
mov
rclb
fucom
aas
cld
mov
aas
fimull
mov
scas
lcall
pushf
push
int3
pop
lahf
mov
lcall
fimuls
sti
idiv
xchg
mov
fimuls
lock
addr16
dec
lock
into
mov
fcmovbe
pop
push
xor
cmp
mov
cli
inc
jge
scas
add
adc
shlb
movsl
and
and
sahf
sbb
push
dec
mov
sbbb
jb
incl
cmp
cmpsl
clc
xchg
add
and
mov
lcall
enter
addb
push
jl
cmpsb
sub
fsubrs
bound
loopne
mov
add
popa
pop
in
dec
ss
pusha
lret
ljmp
xchg
add
dec
mov
and
jae
mov
mov
or
sbb
xorb
into
mov
fmull
xor
mov
inc
and
test
sbb
pop
xor
push
imul
lcall
xchg
mov
enter
or
scas
mov
pop
pop
call
enter
jae
jg
or
push
mov
loope
xchg
stos
and
pop
in
into
inc
pop
cld
add
xor
cmpl
int3
fidivl
xchg
hlt
addb
pop
inc
or
push
dec
clc
aas
mov
es
mov
fisttpl
cld
ficomps
fdivrs
pop
inc
aas
das
or
cli
push
rclb
or
jp
mov
fidivrl
incb
enter
mov
ljmp
pop
ret
cmpl
or
stc
lock
sbb
mov
xchg
pop
movl
mov
pop
cmc
hlt
fmuls
out
ror
push
jnp
enter
pushf
push
test
out
add
fldenv
into
inc
inc
fwait
out
scas
mov
loopne
pop
jae
xor
sarl
xor
fcmovnu
mov
fcmovu
and
ret
nop
pop
icebp
outsl
cmp
pop
dec
lret
mov
add
addr16
fiaddl
add
jbe
nop
sbb
or
and
dec
pop
mov
hlt
sub
clc
xchg
pop
shrb
mov
push
sbb
pop
shlb
inc
inc
inc
rcr
xchg
pop
dec
ror
dec
push
ljmp
mov
pop
jmp
ja
adc
repnz
or
or
pushf
or
les
test
test
mov
cmc
mov
xchg
inc
and
sub
shr
or
ds
shrb
lods
mov
jne
and
push
test
sub
add
std
mov
pop
test
shlb
ja
fcoml
ds
mov
mov
fsubs
aas
test
lret
push
jns
or
jmp
mov
xor
dec
shrl
xchg
and
sbb
es
aam
or
or
outsb
or
cmp
xor
cmp
rol
out
sbb
pop
ljmp
aad
xor
jmp
pop
popa
adc
sub
out
add
addl
add
mov
push
jnp
int3
sbb
sbb
scas
test
int
les
mov
ret
repnz
pushf
pop
inc
insl
test
out
jo
in
ds
incb
push
push
lret
sti
or
int3
adc
pusha
push
mov
rorb
xorl
scas
pop
clc
xchg
fwait
hlt
in
pop
mov
test
add
pop
lret
sbb
cld
and
or
or
cmp
rcrb
xchg
cmp
pop
pop
add
lahf
add
aad
inc
cld
es
xchg
ljmp
std
sbb
nop
repnz
pop
mov
push
iret
ja
inc
mov
sub
push
xchg
xchg
and
out
dec
cwtl
scas
fwait
roll
fsubs
js
js
adc
pop
cmp
or
dec
rolb
pop
ret
fimull
mov
inc
or
cmp
lret
repz
or
sub
or
std
clc
or
hlt
pop
fldcw
sbb
and
cmp
push
stos
pop
lock
inc
and
movsl
xchg
jns
pushw
in
iret
out
mov
mov
mov
mov
xchg
jp
or
rcrb
sub
pop
cwtl
jecxz
les
pop
fsubs
clc
and
push
mov
push
push
mov
push
push
dec
mov
or
xchg
xchg
or
cwtl
pushf
test
inc
jae
push
into
addl
or
jne
lock
fists
pop
mov
mov
mov
xchg
xor
out
inc
ds
or
pop
lahf
mov
sub
int3
and
loope
mov
fsubrl
aam
call
sub
scas
xor
pop
pop
ljmp
stos
ss
aas
stos
add
jb
hlt
les
fsubrs
inc
call
test
fucomi
jge
repz
cld
pushf
or
imul
sub
add
jae
or
les
adc
fistpl
sub
popa
inc
out
cld
jmp
outsl
pop
mov
inc
mov
sbb
dec
sub
pop
test
jns
pop
sub
pop
push
scas
repnz
xor
hlt
rcrb
or
jp
les
arpl
aam
mov
jno
xchg
mov
mov
push
xor
add
das
and
ret
outsl
sbb
stos
jge
pop
dec
outsl
arpl
mov
into
and
adc
loope
in
rorb
pop
bound
push
pop
stos
sub
jnp
lret
call
mov
in
pop
add
inc
aam
cld
clc
js
mov
ljmp
fmul
inc
sub
sahf
cmp
sbb
or
mov
add
into
or
repnz
add
jns
rolb
int3
pop
adc
fidivrl
addr16
pop
mov
or
movb
ljmp
push
jnp
aam
jge
hlt
xchg
insl
dec
mov
out
cli
enter
mov
xchg
pop
lret
dec
out
loope
pop
out
sbb
es
mov
xchg
fisubl
sbb
dec
lret
mov
add
lock
rorb
ficoml
add
aam
jb
push
faddl
mov
rcpps
out
nop
dec
or
xchg
into
subl
fsubrs
lret
pop
push
loope
cld
movsb
imul
loope
xchg
mov
mov
ljmp
mov
pop
or
mov
mov
or
out
test
inc
fwait
shlb
lahf
leave
or
popa
mov
rclb
and
test
dec
in
lret
faddl
jns
pop
sahf
mov
out
insl
pushf
gs
into
or
fdivs
test
pop
lcall
in
ja
mov
rolb
xchg
cli
call
sub
clc
lcall
mov
mov
adc
jmp
jb
or
mov
push
divb
mov
aam
nop
scas
imul
cmpsb
insb
and
jmp
test
pop
fcmove
push
mov
and
xor
xchg
inc
cmpsb
fdivrl
cmpsb
mull
andl
and
and
cmpsb
imul
out
mov
mov
nop
lret
sahf
and
mov
out
sahf
and
sbb
mov
iret
sahf
or
cmpsb
ja
sahf
xchg
lret
and
outsl
mov
or
adc
and
and
mov
cmp
test
mov
inc
cmpsb
and
mov
cmpsb
xchg
mov
mov
cmpb
in
pusha
rcll
into
pop
sar
daa
add
pop
xchg
xor
pop
lea
inc
cwtl
call
scas
xor
rcrb
mov
int3
clc
push
xchg
mov
mov
jle
pushf
popf
pop
dec
pop
mov
jnp
aas
loope
xor
loope
jmp
pop
mov
or
mov
cmp
add
mov
in
pop
cmp
add
popa
mov
and
cmpsl
or
dec
int3
xlat
test
loope
sahf
imul
mov
mov
cld
cmp
fcmovnb
scas
pop
jmp
fs
lcall
pop
mov
cmp
xchg
shrl
out
test
inc
fwait
add
mov
push
jecxz
sub
loop
sarw
pop
cmp
test
or
push
and
xchg
lret
and
test
and
daa
push
out
cmp
mov
push
mov
stos
mov
rcr
mov
rcr
jmp
pop
scas
push
push
add
push
pop
push
icebp
lock
xor
incb
enter
ss
jo
fidivs
ds
lret
xchg
inc
test
int3
repnz
out
jp
ret
es
call
into
ficoml
jmp
xor
hlt
push
nop
push
dec
in
xor
ret
bnd
push
cld
xor
call
and
scas
mov
addr16
sub
xchg
mov
pop
in
mov
mov
fistpll
ljmp
fidivs
lcall
test
xchg
pop
cmp
hlt
add
loope
lock
lods
sarb
mov
shll
pop
out
cld
test
out
mov
out
mov
or
test
mov
in
and
dec
fdivr
xlat
mov
mov
nop
ljmp
stos
and
rcrb
clc
xchg
or
addr16
nop
outsl
lock
inc
cmp
push
mov
fistps
movl
int3
stos
xor
push
pop
mov
inc
mov
into
enter
int3
rol
clc
clc
fidivrl
fsubrs
mov
add
push
int3
inc
inc
xchg
fsubl
gs
sub
push
psrlq
dec
pop
pop
cmp
jnp
add
pop
push
jmp
cmp
pop
push
ljmp
push
pop
xchg
or
shrb
or
mov
mov
pop
nop
inc
scas
push
shlb
or
cmc
sub
hlt
ficompl
stos
mov
dec
pushf
scas
mov
xor
add
push
mov
mov
test
int3
je
or
mov
mov
pushf
and
pop
or
decb
xchg
scas
sti
push
cmpsl
faddl
xchg
push
call
pop
test
inc
or
jge
sub
sahf
ret
fcoms
adc
adc
mov
cli
rcll
or
xor
test
sbb
into
push
sbb
ljmp
mov
into
jle
xor
ss
jnp
mov
lret
int3
xchg
lcall
mov
push
pop
xor
cltd
rclb
ficoml
mov
xor
add
push
pushf
xchg
cmp
int3
mov
mov
add
ljmp
shrb
fildll
out
adc
xchg
shrb
pop
lret
pcmpeqd
enter
xlat
push
xor
aas
mov
ficomps
mov
stc
add
push
repnz
aam
add
stos
push
sbbb
sbb
push
mov
repnz
cmp
mov
ljmp
add
fisttpl
or
ficompl
bndstx
idivb
jbe
push
xor
call
mov
cmp
pop
hlt
ljmp
gs
ss
mov
push
jnp
push
pop
adc
mov
sbb
lock
xor
or
sub
pop
ficoms
sub
xchg
or
clc
outsl
push
movsl
rclb
and
lcall
xchg
shlb
xchg
es
hlt
repnz
lret
and
xchg
scas
cmp
out
insb
sbb
jne
int3
ret
test
push
shlb
lcall
mov
push
mov
jb
femms
pusha
shl
out
mov
mov
mov
or
cmp
repnz
mov
xchg
shl
sub
mov
push
push
cmp
mov
mov
repnz
rcl
mov
jb
mov
outsb
xchg
lods
lock
push
sub
cli
arpl
stos
mov
stos
pop
push
ja
lea
fcmovbe
pop
nop
mov
xchg
push
add
push
jae
lods
xor
cld
mov
xchg
xlat
cmp
lret
movsl
xor
nopl
mov
pop
jns
push
test
rclb
pushf
inc
mov
dec
push
lock
push
add
pusha
ljmp
pop
push
xchg
lods
nop
or
inc
clc
mov
pop
mov
and
mov
xchg
pop
mov
add
sub
clc
hlt
xchg
and
inc
fmul
push
add
mov
cwtl
leave
push
push
cmp
pop
test
cmpsl
loopne
push
xor
pop
push
sub
xchg
pop
aad
js
aam
hlt
out
out
adc
flds
mov
pop
add
sbb
xor
xchg
lretw
scas
ror
repz
fidivrl
bound
push
jmp
push
in
lods
mov
jp
ret
test
mov
add
movsb
jle
xchg
test
mov
or
jmp
int3
mov
or
push
lret
cwtl
jne
adc
or
inc
cld
add
xchg
stos
es
outsb
cmp
mov
cwtl
enter
xchg
rcrb
dec
insb
fsubs
cmpsl
dec
or
jne
call
cwtl
ficoms
xlat
inc
add
cmp
push
push
push
push
imul
aam
or
divb
mov
xor
cld
push
inc
xor
and
mov
xchg
push
inc
ficompl
out
cwtl
pusha
faddp
jbe
push
inc
cld
call
lret
xchg
aam
xor
imul
mov
rorb
inc
aam
xor
mov
add
fcompl
mov
dec
xor
dec
popf
stos
xchg
push
incb
push
iret
xor
xchg
ficoml
bswap
sbb
push
lea
cmp
mov
call
push
push
scas
aam
inc
popf
shl
add
push
stos
mov
push
int3
xchg
testb
sahf
pushf
jns
xchg
in
push
pop
enter
xchg
rorb
fs
and
faddl
mov
mov
mov
pop
fldcw
pushf
ficomps
xor
aas
xchg
pop
clc
fcoms
pop
or
fadds
popa
xor
testb
or
sti
dec
nop
push
inc
sub
dec
sbb
outsb
out
fmul
pop
in
mov
test
imull
jbe
clc
cmp
icebp
cmp
pop
fisubrl
push
rorl
xor
add
or
loope
jp
add
mov
or
or
inc
jne
shrb
pop
les
mov
lret
push
into
mov
stc
jl
cli
mov
ficoms
push
xchg
or
jmp
fsubr
pop
push
sbb
xchg
sbb
and
iret
fadds
jns
xchg
xchg
or
add
test
movsl
cmp
push
nop
scas
clc
ljmp
stos
push
or
xchg
push
and
mov
enter
mov
xchg
jno
jle
sahf
dec
inc
ret
mov
stos
cmp
nop
clc
outsl
add
fisubrs
in
fcmove
mov
sub
pop
mov
lock
add
push
out
imul
add
in
pop
sbb
les
int3
and
push
into
push
add
cmp
jp
pop
jo
push
testb
mov
inc
repz
nop
pusha
loopne
mov
fiadds
fdivp
mul
mov
dec
inc
xchg
pop
rcl
cmp
shr
sub
push
rorb
xchg
push
mov
rolb
mov
movsb
mov
hlt
div
xor
clc
out
pop
mov
lds
scas
push
dec
dec
ret
aam
jg
dec
sti
dec
popa
cmpsb
ret
ja
xor
xchg
pushf
jp
not
add
loope
mov
int3
loope
xbegin
pop
enter
pop
cmp
repnz
rcr
push
add
cld
xchg
sahf
cmp
or
test
scas
fdivrs
push
mov
xchg
mov
xchg
jb
pushf
mov
add
jle
mov
dec
lret
imul
ljmp
shrb
xchg
or
pop
push
pop
mov
jns
and
sahf
mov
or
mov
push
rcl
mov
aad
aas
fidivrl
stos
cmp
push
fsub
aad
and
mov
ret
insb
rcl
sub
ss
mov
mov
lock
push
dec
out
cmove
stc
int3
pop
mulps
mov
and
and
add
sub
xchg
in
inc
mov
hlt
pushf
ss
loope
and
xor
xor
dec
loop
fimull
dec
push
or
sahf
dec
jns
cmp
push
ljmp
or
loop
nop
pop
add
mov
repz
pop
movsb
arpl
add
rorb
jbe
jns
insb
or
xorb
repnz
add
mov
sbb
push
es
adcb
or
push
xor
or
sahf
mov
insb
sti
xor
mov
rol
inc
aam
test
mov
pop
sbb
mov
cmp
ret
test
out
pop
std
movsb
iret
push
push
pop
push
or
sub
xchg
enter
dec
push
xchg
push
ljmp
rol
jb
mov
inc
mov
std
ficoml
jmp
out
lock
loop
je
ficoms
outsl
xlat
idivb
add
psraw
mov
cmp
xchg
int3
mov
or
cli
test
add
arpl
dec
cwtl
push
movsb
mov
clc
mov
cs
or
xor
inc
data16
xchg
push
mov
sub
xchg
scas
or
pusha
xor
push
xor
pop
cli
fcomp
add
test
nop
push
rcl
into
jns
ret
cmp
sbbl
xor
enter
or
ss
int3
cwtl
xchg
mov
test
xchg
out
gs
sub
push
rcll
roll
pop
mov
and
jo
clc
mov
push
into
lcall
cwtl
ret
es
jae
dec
add
or
fidivrl
jnp
test
mov
push
adc
ds
pop
xchg
outsb
cwtl
jmp
lret
fdivs
stos
gs
fisttpll
rol
fsubrl
push
popa
mov
aam
in
ret
rcr
mov
push
repnz
mov
mov
out
xchg
ss
pop
test
or
gs
cmp
enter
push
insb
les
aas
sub
leave
push
push
mov
xchg
in
lret
lret
lcall
jmp
pop
xchg
dec
loopne
cmp
pop
push
out
loopne
pusha
mov
mov
stos
xlat
call
fidivl
inc
pop
mov
aas
std
sub
and
xor
xchg
lea
mov
xchg
scas
nop
imul
int3
or
or
push
mov
mov
and
sub
cltd
in
rorb
lcall
push
nop
into
sbb
dec
cs
dec
cmp
mov
aaa
jbe
add
dec
dec
pop
mov
aas
or
add
mov
mov
push
insb
xor
or
gs
int3
movsb
outsl
and
into
ljmp
ret
out
add
bound
pop
shrl
pop
push
aam
stos
hlt
out
mov
push
aas
loopne
std
hlt
iret
sar
push
lcall
mov
sahf
push
mov
xor
cli
xchg
add
pop
jmp
inc
or
aam
add
push
sub
xchg
cwtl
push
psadbw
mov
sahf
into
sub
sbb
push
ficomps
into
add
stos
push
and
inc
dec
add
jbe
xor
int3
ljmp
pop
outsl
push
push
push
ficomps
inc
fdivrs
ret
clc
mov
cmp
cld
jmp
loopne
mov
xor
adc
xor
add
mov
lret
das
scas
sbb
scas
imul
imul
push
mov
aad
xchg
ret
add
pop
lss
cwtl
mov
scas
xor
enter
lods
fwait
ret
std
add
lret
jecxz
pop
add
loopne
dec
push
cmp
mov
fsubrs
fs
inc
mov
mov
mov
mov
pusha
sub
lret
sbb
sbb
push
xor
into
xchg
cld
repnz
mov
loop
and
aam
fadd
dec
push
mov
aam
call
jle
mov
or
mov
pushf
fiaddl
ret
test
push
dec
shrb
cmp
dec
fidivs
aad
fldcw
fs
sbb
loope
scas
ret
push
cld
repnz
shlb
ja
addl
pushf
mov
sar
or
shl
cwtl
mov
cmpsl
into
je
test
nop
push
test
pop
and
into
out
clc
out
xchg
cmp
push
hlt
add
push
inc
out
mov
addr16
dec
pop
push
sbb
adc
lret
push
mov
cli
mov
pop
sub
subb
cld
mov
jnp
mov
test
pop
mov
xchg
xchg
xor
push
subb
push
or
mov
add
lock
call
jge
cltd
lcall
fcoml
ror
ds
add
mov
mov
aaa
xchg
in
icebp
jns
stc
mov
shl
mov
repnz
leave
cmp
enter
jmp
repz
mov
cltd
hlt
lock
clc
add
or
pop
fmuls
pop
cmp
mov
lcall
loopne
xchg
push
test
aaa
out
ret
push
pushf
add
orb
je
aas
data16
pop
cmpl
pop
mov
or
xor
out
push
or
test
rcrl
testb
or
mov
xchg
das
out
or
sbb
hlt
xchg
push
mov
call
fwait
test
es
mov
repnz
sbb
mov
and
inc
pusha
pop
inc
jnp
mov
lret
pop
push
mov
rcr
stos
xchg
sarl
mov
and
insl
mov
lret
in
sahf
lcall
sub
mov
xchg
nop
mov
icebp
repnz
dec
inc
inc
in
stos
xor
add
mov
cwtl
or
mov
xchg
cmp
mov
pushf
mov
aaa
adc
push
stos
test
ss
aam
pop
adc
in
cmp
incb
lret
out
bnd
out
sub
xchg
pop
pop
push
mov
or
xor
rolb
and
xchg
pop
push
sub
hlt
push
jmp
jp
call
xchg
imull
mov
xchg
xchg
fadds
fsqrt
xchg
enter
loopne
push
stos
lock
in
or
fmuls
hlt
ljmp
mulb
cmp
cmpsb
nop
inc
push
ljmp
stos
mov
push
into
pop
int
nop
xchg
mov
adc
pop
rorb
out
ljmp
or
stos
test
arpl
dec
enter
ret
testb
pushf
mov
aas
rcr
ror
fiaddl
out
mov
aas
pmaxsw
in
repnz
mov
pop
sbbl
mov
ret
movswl
es
pop
mov
sbb
ficoms
push
pushf
int3
test
mov
push
or
jb
je
xlat
xchg
cmp
mov
fisubs
popa
xor
rcrb
aam
push
cmp
mov
lret
push
test
ficomps
xchg
or
fidivrl
leave
push
repnz
sub
stos
call
add
orb
mov
loope
sahf
subl
ljmp
stos
push
hlt
and
cmp
clc
pop
mov
sbb
arpl
ret
sub
sbbb
or
lret
inc
xor
les
xor
mov
in
xchg
pop
ljmp
cmp
and
mov
testb
hlt
mov
cmp
add
fdivr
enter
test
or
call
mov
std
outsb
xor
xchg
scas
or
loope
mov
jp
stos
in
cmpsb
fiaddl
bound
shrb
mov
hlt
test
aam
repz
scas
sub
pop
das
es
out
jae
and
or
lret
or
and
imul
mov
in
inc
or
cmp
addb
popf
push
inc
arpl
enter
jns
ficomps
jnp
push
punpckldq
mov
add
pop
test
fdivr
cli
lds
cmp
jbe
sub
cmp
sahf
fcoml
push
and
mov
mov
movsl
adc
fdivl
ljmp
inc
imul
dec
push
cld
leave
lock
aas
mov
push
pop
mov
ficomps
pop
lcall
scas
xchg
push
dec
mov
stos
jbe
fdivrs
sbb
and
pop
stos
ljmp
sub
mov
mov
jp
rorb
add
jecxz
lret
in
jbe
outsb
lret
adc
adc
into
xchg
inc
adc
push
mov
test
nop
int
mov
jnp
cmp
mov
loopne
cli
out
add
repz
ljmp
jns
imul
sbb
jno
cmp
fs
xor
cmp
push
call
mov
mov
or
lret
cs
or
jg
fmul
mov
or
popa
mov
cmp
push
mov
pop
lcall
pop
aam
sahf
lret
inc
into
enter
hlt
call
int3
ret
lsl
nop
push
mov
lock
js
jp
out
ret
ljmp
ljmp
and
xchg
rcrb
or
cld
int3
and
add
cld
sbb
cmp
push
mov
mov
inc
jns
hlt
pop
lods
ds
mov
testl
fiadds
or
movb
mov
call
fildl
loop
fcomps
rolb
xchg
xchg
adc
add
ds
stc
rorl
xchg
push
push
add
push
sahf
dec
cmp
call
pushf
ret
fs
add
push
pop
jns
pop
movsb
or
push
sub
pop
das
ret
and
or
aas
pop
insb
inc
mov
or
add
or
pop
repz
out
and
ret
and
mov
jle
sbb
aas
xor
clc
fiaddl
sbbb
sbb
pop
into
cmp
xchg
xchg
or
xchg
mov
sti
cld
fdivrl
xchg
push
pop
xchg
nop
rol
pop
aad
iret
xor
lock
push
ljmp
es
xor
test
out
cmp
mov
clc
and
mov
shrl
sar
aaa
mov
clc
add
fidivl
xchg
or
hlt
es
push
ja
push
fsub
hlt
dec
mov
nop
inc
mov
sti
jo
xorb
and
aaa
mov
sub
sbb
outsl
hlt
shr
out
cmp
ficoml
pop
out
lods
pop
inc
mov
push
les
fcoml
sahf
test
push
sub
fcomp
jns
jbe
ljmp
call
push
repnz
cld
in
scas
mov
aas
ljmp
vmwrite
cmp
rol
nop
pop
repz
jp
mov
dec
jb
dec
push
mov
jp
enter
cwtl
cmpsl
push
mov
lret
mov
repnz
or
dec
mov
add
loope
xchg
or
xchg
mov
inc
ret
xchg
pop
and
add
setg
inc
sbb
test
mov
xchg
jge
fiaddl
ds
test
cli
adc
mulb
fcom
mov
mov
les
adc
xlat
dec
test
mov
stos
loopew
arpl
aad
xor
push
pop
mov
ret
pop
fsubs
les
fwait
sub
int3
xchg
ljmp
inc
call
pushf
fldt
ljmp
pop
les
xor
fidivrs
rclb
mov
out
jns
lock
js
cmp
clc
mov
or
dec
clc
add
or
dec
imul
std
sarb
dec
pop
idivb
xchg
les
or
dec
push
cmpsl
sbb
pop
xchg
pop
rorb
aam
fadds
push
ljmp
test
xchg
xor
aam
pop
xchg
insl
inc
pop
mov
jmp
out
repz
aad
push
cli
sbb
into
mov
add
decb
push
ret
and
pop
push
lea
ror
inc
jecxz
push
jmp
addb
cmpsb
ds
pop
pop
mov
test
adc
test
out
lahf
enter
xor
xor
push
pop
cli
addr16
loop
out
mov
testl
rcrb
xchg
pop
mov
cwtl
scas
adc
pop
out
jmp
xchg
pop
mov
or
pop
cmp
test
imul
popf
lret
fisubrs
mov
enter
add
dec
push
mov
pop
outsl
jb
cld
incl
pop
ret
lcall
pop
jge
mov
mov
and
notb
mov
cltd
xlat
test
lcall
xchg
push
cli
in
and
push
fidivl
test
mov
call
hlt
es
enter
test
pushf
sbb
insl
dec
cwtl
pop
test
pop
xchg
xchg
dec
mov
fmull
xor
or
and
fsubr
sub
notb
pop
or
pop
shrb
mov
call
test
add
or
mov
rclb
test
enter
or
loopne
push
dec
ljmp
call
insl
sbb
xor
fimull
and
jbe
jb
jo
push
outsb
outsl
pop
adc
out
cmpsl
mov
test
pop
xlat
and
dec
lcall
mov
adc
mov
pop
inc
jb
scas
and
mov
pop
test
repnz
push
cwtl
fistpl
sbb
pop
sub
push
or
or
mov
aas
mov
stc
pop
stos
js
decb
imul
push
in
loopne
insb
or
ljmp
hlt
lret
xchg
ret
es
ja
bound
lret
pushf
aaa
pusha
push
and
push
sbb
jb
hlt
jmp
push
push
repnz
mov
xchg
or
js
jp
rcrb
call
cmp
sahf
mov
push
xchg
fisubrl
sub
mov
outsb
pushf
dec
or
xchg
inc
adc
pop
shrb
xorb
pop
xor
mov
rolb
add
int3
push
lods
je
mov
cmp
xchg
sarb
out
aam
hlt
scas
mov
or
fsubl
cld
mov
or
jo
out
fwait
add
mov
push
add
sahf
mov
imul
mov
cmp
mov
loopne
leave
dec
jno
test
pop
outsb
dec
sbb
cmp
push
ret
sbb
add
lcall
aam
bound
pop
or
xchg
add
rclb
add
out
xchg
fcomps
inc
aaa
or
xor
data16
stos
sub
pop
jge
push
mov
loopne
loope
fadds
rsm
push
fs
add
rcpps
retw
add
mov
pop
aam
push
xchg
test
and
pushf
call
push
stc
ljmp
push
add
cmp
cld
pop
test
js
mov
mov
jo
sahf
mov
popa
jns
les
pop
dec
cli
repz
sub
or
pop
adc
pop
imul
mov
mov
and
loop
push
cmpsl
jbe
adc
notl
fstpl
or
xor
test
vunpcklps
pop
adc
adc
add
mov
mov
dec
pop
xchg
into
mov
add
clc
cmpsb
pop
jb
test
rcrl
cmpsb
xor
mov
ljmp
add
xor
ret
in
xchg
mov
call
cmpsl
clc
sbbl
nop
test
and
bswap
enter
cmp
or
ja
push
pop
mov
or
cmp
mov
pop
fimull
into
xor
adc
test
rol
rorb
mov
add
pop
ret
pop
lahf
push
cwtl
or
mov
loop
shlb
scas
nop
pop
mov
lahf
les
imul
jp
inc
nop
lcall
or
push
and
sbb
test
sub
aad
mov
mov
js
cli
pop
pcmpgtd
pusha
xchg
lcall
lret
adc
sub
lret
jb
int3
jle
xor
les
pop
in
pop
pop
repnz
cli
cwtl
add
xchg
or
shlb
lret
lcall
push
lret
mov
push
stc
cmpsl
pop
loop
and
testb
mov
out
lcall
sahf
test
bound
test
xlat
test
stos
repz
fdivrs
and
sbb
jmp
adc
sarb
jp
push
test
scas
or
add
sub
stos
push
movsl
xor
out
les
inc
outsl
fidivs
push
mov
pop
pop
inc
pop
xor
or
fiadds
jb
sbb
je
mov
lret
push
incb
pop
pslld
lret
jg
lret
scas
lcall
dec
aam
fidivrl
mov
dec
and
fidivrl
xchg
xchg
pop
fadd
cmpsl
mov
cmpsl
push
and
cwtl
mov
inc
repnz
dec
fxch
xor
xor
movsb
inc
out
loop
in
call
inc
xchg
int3
xchg
mov
or
fwait
in
out
pop
imul
ror
xchg
and
xchg
cwtl
sbb
xor
mov
mov
xchg
decb
xchg
pop
push
std
dec
and
and
cmp
push
repnz
fiaddl
cmp
ret
mov
mov
add
stos
xchg
loopne
jb
ljmp
mov
pop
mov
lret
xor
into
fcompl
or
mov
xor
call
leave
push
push
push
push
test
loopne
mov
call
xchg
stos
pop
xchg
push
fisttpl
pop
aad
scas
push
fsqrt
lds
test
mov
int3
pop
xchg
hlt
out
in
xchg
xor
push
sbb
nop
mov
ret
inc
xchg
inc
jle
push
dec
cli
cld
and
add
jb
in
add
xor
nop
mov
paddd
cmp
pop
pop
psubw
xlat
aas
sub
pop
cli
push
pop
out
xchg
sbb
fcoms
test
into
fadds
gs
insb
jp
push
pusha
xchg
int3
cs
mov
out
push
fiaddl
sti
das
call
or
cmpsb
push
arpl
push
call
sub
xchg
stos
test
ror
stos
mov
repnz
into
mov
out
add
ficoml
adc
inc
aas
pop
aas
sahf
push
pop
xchg
add
pop
and
call
call
and
in
mov
mov
rolb
imull
push
jge
addl
rolb
add
loope
into
cltd
sti
and
into
shrb
push
cmp
add
fadd
jp
neg
ror
out
test
enter
mov
mov
int3
stc
rcrl
test
cmp
add
aaa
cld
and
add
jp
stos
imul
cmpsl
loope
mov
sahf
push
call
ret
ror
mov
rcrb
movsb
mov
lret
enter
cld
push
push
mov
xlat
mov
mov
and
faddp
pushf
cmc
sbb
inc
lcall
adc
fs
sti
lahf
add
std
cmc
xchg
fdivr
les
mov
sbb
fdiv
stos
cmpsb
pushf
xor
xchg
jge
jno
insb
cld
cli
pop
push
mov
pushf
sti
push
mov
mov
aaa
jae
mov
mov
sbb
sti
add
jecxz
fimuls
les
lret
xchg
pop
push
push
fsubs
ljmp
cwtl
nop
cmpsl
aaa
fs
mov
dec
mulb
cli
test
sbb
sti
inc
cld
add
jbe
mov
aas
mov
add
mov
imul
shrb
ljmp
popa
add
push
ficoml
mov
and
hlt
cmp
fisubl
ror
test
jnp
hlt
lret
pop
push
aaa
or
pusha
xor
fimull
xchg
out
mov
mov
or
les
jb,pt
push
rolb
add
sbb
js
push
scas
pushf
adc
mov
cwtl
enter
out
xor
scas
mov
xorb
adc
fadd
sahf
cld
pop
movsl
xchg
or
insb
inc
inc
dec
lcall
or
cwtl
push
pop
push
out
das
pop
add
or
scas
xchg
sbb
sbb
dec
sub
inc
xchg
fdivr
add
into
fucom
lcall
add
mov
or
mov
ret
pop
sbb
fstpt
scas
push
lret
push
into
xor
sti
nop
push
sbb
lret
cmpsb
xor
xor
push
or
dec
adc
or
push
pop
clc
inc
jg
shr
clc
fdivrl
pop
imul
lods
mov
mov
mov
psubw
es
les
mov
xchg
dec
lahf
loope
pop
and
or
and
mov
aad
mov
ja
jnp
mov
mov
or
push
adc
mov
cld
pop
mov
aaa
inc
sbb
ss
mov
inc
cmp
fisubrl
rcl
jns
repnz
add
test
lcall
rolb
mov
les
ljmp
push
xor
push
in
push
hlt
adc
or
sbb
aas
pop
xchg
push
lret
pop
out
pop
push
mov
push
mov
pop
mov
unpckhps
rclw
cmp
nop
dec
movsb
stc
outsb
xor
ret
lcall
lret
push
repnz
lods
add
cwtl
clc
pop
and
rorb
call
mov
push
out
xchg
cmp
xchg
out
fwait
lock
sarb
rolb
imul
xchg
pushw
mov
ficoml
ret
mov
xchg
xchg
je
mov
mov
into
xadd
jb
pop
jb
push
lahf
lahf
xor
int3
enter
pop
out
mov
push
aam
add
rorb
lcall
enter
xor
mov
fadd
xchg
push
pop
fwait
repnz
mov
mov
push
or
push
pushf
inc
outsl
lock
stos
xor
mov
inc
xor
fisubs
mov
lret
scas
xchg
arpl
mov
push
fcmove
pop
mov
or
ficoms
fcmovnbe
dec
add
into
adc
and
dec
nop
pop
xchg
std
push
cltd
pop
lods
insl
push
inc
stos
les
lock
add
mov
jns
mov
scas
cwtl
gs
out
ljmp
pop
ficoml
push
xor
push
pop
clc
jmp
addb
sti
add
cs
mov
gs
cmp
test
add
jnp
icebp
fmul
ss
pop
inc
nop
pop
sub
mov
mov
adc
and
pushf
paddd
pop
nop
in
cmc
push
cld
fwait
or
sahf
push
dec
loopne
jp
ret
shl
push
lret
push
test
sbb
int3
mov
fdivs
dec
fucomip
inc
lret
mov
inc
dec
pop
enter
lock
or
push
arpl
mov
shr
cmc
in
mov
and
cmp
ret
jb
dec
fs
mov
mov
push
mov
lret
add
test
aaa
popa
mov
aas
mov
cmp
cmp
pop
decb
lcall
cli
popf
mov
pop
mov
adc
push
lock
paddsb
fidivrs
rolb
ret
add
hlt
mov
jg
or
ret
cmp
push
and
jp
mov
imulb
and
mov
jnp
ljmp
psadbw
mov
xor
cwtl
mov
inc
cmp
inc
push
xchg
movsb
stos
test
in
int
dec
sysenter
cmp
mov
mov
sub
mov
mov
mov
mov
test
enter
lock
or
dec
and
ret
arpl
pushf
ficoms
or
cmp
xchg
stc
pop
lcall
pop
sbb
shlb
mov
push
sub
xchg
fcmovnu
lcall
cli
aam
out
cmp
test
ret
lcall
and
mov
gs
mov
in
int
aad
pop
xor
into
push
add
mov
or
cmp
pminub
les
mov
lcall
mov
ret
xchg
cmp
cld
out
xchg
test
aad
cmc
hlt
out
xor
pop
pop
push
mov
imul
pop
enter
push
icebp
mov
aas
aam
cli
dec
ror
xchg
sub
fnstcw
rcrb
mov
stos
add
or
stc
push
pop
push
mov
dec
xchg
fsts
test
fwait
sbb
fistl
and
lcall
int3
xor
sbb
xor
pop
add
aam
rol
movsl
adc
mov
idiv
ret
add
or
or
call
rorl
aas
les
mov
mov
popa
std
aad
mov
push
push
out
jmp
and
dec
test
aam
pushl
mov
pop
pop
jb
dec
dec
test
dec
negb
mov
xchg
xchg
out
inc
ljmp
aaa
enter
out
fldenv
call
addr16
gs
xor
in
stos
aam
push
lcall
cwtl
xchg
and
pop
xor
fxch
pop
sahf
pop
shl
cmp
sahf
fsubrp
int3
mov
sahf
fwait
ss
shrb
in
and
jne
cmp
sahf
push
cli
xor
mov
sbb
jmp
movntps
call
push
mov
mov
rcl
scas
xchg
std
adc
arpl
pushf
pop
repnz
movzwl
jo
clc
jmp
bound
xchg
xor
mov
hlt
or
pop
js
mov
lret
pop
mov
or
pop
lock
pusha
sbb
mov
ds
repnz
mov
jno,pt
rolb
test
adc
push
gs
inc
ret
xor
mov
mov
or
add
or
iret
cs
xchg
lcall
out
in
or
cmc
pop
dec
into
adc
inc
mov
and
push
hlt
mov
push
mov
into
cmp
fimuls
cwtl
cli
mov
fidivrs
and
out
ljmp
shl
mov
fsubrl
imul
repnz
lds
mov
dec
cli
hlt
call
add
inc
mov
fiadds
push
cltd
mov
mov
sbb
or
test
mov
dec
mov
inc
iret
jnp
pop
add
push
pop
pushf
fmuls
mov
nop
inc
mov
stos
aas
lahf
sar
sub
pop
movsl
inc
movb
mov
mov
and
push
enter
xor
mov
ljmp
sar
pop
cmp
xor
pop
pop
divb
dec
jp
or
lea
cmpps
pop
mov
push
pop
push
cs
and
repz
lock
test
push
imul
add
and
aam
ud2
adc
cltd
add
jbe
and
jmp
mov
ret
cs
loopne
pop
je
ljmp
cwtl
ficompl
push
push
notb
mov
std
test
xchg
imul
into
push
shrb
xchg
data16
into
cmpsl
mov
cmp
push
ljmp
in
xchg
and
aas
or
fidivrs
cmp
pop
ret
scas
or
mov
push
push
loopne
aam
pop
js
mov
cmp
pop
int3
out
push
jmp
cmp
xchg
repnz
add
mov
pop
fcom
cmp
scas
lcall
sbb
fcoml
dec
fimull
xchg
add
ss
jmp
ret
jbe
mov
xor
push
imul
outsl
fiaddl
lret
add
jp
repnz
test
fdivrl
push
test
pop
push
insl
and
add
rcr
cmpsl
cwtl
ja
dec
push
dec
jo
xchg
mov
or
enter
mov
int3
pop
fcmovbe
pop
sub
lahf
cmp
rcll
orb
xorb
lahf
fs
add
and
pop
es
sar
mov
push
sahf
cmp
add
dec
faddl
scas
push
dec
jge
mov
clc
pop
push
mov
or
scas
jbe
fs
adc
test
clc
test
out
mov
cmpsl
xor
mov
fabs
enter
sbb
dec
cwtl
xchg
push
push
cmc
xor
or
mov
divps
fsubr
out
jp
xchg
pop
repnz
pop
cmp
pop
cmpb
or
stos
cmpsl
jmp
js
cli
mov
and
inc
mov
stos
push
pop
push
cli
insb
bswap
aam
jbe
mov
dec
mov
xchg
push
mov
pop
scas
testb
pop
out
or
push
xor
xchg
clc
pop
test
jecxz
push
mov
rol
div
movsb
clc
stc
test
fs
mov
fdivp
sti
addr16
aam
ret
add
push
push
out
xor
mov
fistpl
or
lcall
les
clc
push
sbb
mov
and
stos
ja
mov
add
cmp
clc
popa
dec
dec
ss
cs
pop
cmpsb
lret
push
add
mov
ficomps
inc
loopne
add
mov
pushf
rorb
shrl
mov
shl
movsb
test
mov
cmp
mov
mov
mov
cmp
mov
mov
outsl
fisubs
add
jg
cli
adc
mov
fimuls
ljmp
push
sahf
out
and
shr
add
jbe
ds
push
pop
pop
out
push
stos
call
nop
pop
mov
mov
mov
xchg
les
mov
mov
pop
mov
out
mov
notl
inc
cwtl
mov
cwtl
test
mov
push
les
add
mov
ljmp
nop
ret
or
les
pop
cmp
cmpb
or
in
push
pop
push
aam
outsb
js
mov
out
shlb
jo
int3
aas
or
mov
stos
lret
jge
out
sbbl
cli
negl
and
int3
ss
ret
mov
pfmin
jmp
or
pop
imul
adc
scas
mov
push
push
into
and
sbb
push
mov
push
mov
push
add
stos
cmc
fists
or
es
sti
pop
push
mov
hlt
mov
pop
notl
test
lret
lock
xlat
nop
fsubr
mov
hlt
mov
mov
mov
sarb
mov
pop
jo
rorl
push
or
cwtl
stos
clc
aam
pop
jp
lret
into
nop
sbb
push
repnz
mov
or
push
xabort
and
jb
pushf
pop
bound
or
cmp
mov
aam
je
ljmp
fisubl
stos
and
int3
arpl
sbb
xchg
mov
out
fcmovb
into
aad
mov
xchg
push
jge
pop
push
test
fwait
cwtl
lret
mov
int3
stos
push
mov
adc
lock
mov
out
pop
mov
push
or
aaa
lock
ljmp
sbb
cmp
mov
lret
pop
ret
adc
mov
inc
pop
mov
and
out
jnp
mov
mov
das
mov
jmp
inc
push
xchg
xchg
cmp
push
rorb
inc
sahf
xchg
cmp
rclb
int3
iret
mov
ljmp
mov
cmp
enter
fisttps
dec
xor
ret
cmpb
lcall
es
cmp
inc
jno
cmp
mov
fdiv
ret
xor
out
mov
xchg
mov
jp
loop
adc
sub
scas
or
out
or
enter
fbld
or
mov
cmp
in
mov
pushf
imul
loop
jge
pop
lcall
ljmp
pop
cld
xor
aaa
mov
bound
insb
mov
sarl
pop
adc
push
fs
scas
and
mov
clc
pop
out
or
mov
xor
int3
fnsave
push
cld
mov
xchg
and
jb
clc
aad
into
int3
push
xchg
pop
sbb
pushf
pop
pop
sti
lcall
mov
push
enter
push
sub
and
sahf
push
or
enter
outsb
sbb
xor
lock
cmp
sarb
fsubrs
jne
mov
loope
test
and
add
subb
dec
hlt
xchg
lret
mov
mov
inc
fildl
pop
or
add
mov
push
cwtl
xor
mov
aad
dec
inc
ret
and
cmpsw
and
leave
xchg
test
es
xlat
lea
sub
push
mov
popf
or
pop
enter
scas
mov
rcrl
testb
cmp
push
stos
into
jp
push
mov
dec
xchg
rorb
inc
push
add
cmp
mov
rcr
sub
pop
mov
sub
packsswb
outsb
cld
scas
mov
pop
add
xchg
es
lret
in
paddb
push
mov
mov
xchg
mov
lea
les
or
sbb
jmp
scas
sbb
lret
test
add
push
pop
dec
fcmovnbe
dec
adc
sub
or
mov
test
aam
sub
clc
mov
nop
push
hlt
mov
mov
pushf
nop
push
mov
push
push
mov
cwtl
xchg
out
jns
and
into
or
rcrb
addr16
fsubrl
stos
dec
mov
clc
sbb
call
ret
ljmp
pop
cmp
jbe
nop
push
xor
test
push
push
push
dec
lods
shrb
es
out
push
xchg
into
push
pop
fmull
daa
push
xchg
pop
push
out
stos
cwtl
jl
movsbl
rcr
cmpsb
jecxz
stos
pop
ret
rol
out
push
scas
mov
cld
mov
out
mov
xchg
push
rorb
fistpl
or
out
shrb
push
adc
mov
insb
movb
sub
xor
add
in
fistpl
pmullw
or
mov
cmpsb
mov
xor
hlt
add
fmul
std
fistpl
jns
xchg
dec
loope
xchg
cmpsb
mov
push
xchg
test
mov
mov
scas
into
jmp
enter
ficompl
nop
xchg
inc
fcomps
adc
outsb
fildll
shrb
sarb
in
mov
xchg
add
es
out
lds
int3
pop
ss
shlb
clc
pop
pop
cmp
fs
popa
test
and
inc
cld
inc
or
push
add
jp
cmp
out
sub
daa
test
imul
sahf
mov
pop
xchg
movsl
fistps
nop
pop
sbb
in
push
cmp
stos
les
lret
rol
or
dec
pushf
hlt
or
into
pop
cld
and
pop
mov
negb
loope
push
test
or
enter
push
decb
out
and
xlat
jb
pop
cmp
mov
mov
add
in
enterw
bound
cmp
and
or
sahf
imulb
push
push
lea
pop
lret
dec
jge
dec
mov
cmp
pushf
add
push
scas
imul
ret
lock
add
fsubs
mov
mov
repz
sbb
shrb
xorb
ret
adc
into
ss
mov
xor
pop
push
adc
lock
cmp
enter
movsb
ds
push
mov
mov
addr16
jmp
and
out
repz
mov
sahf
int3
push
mov
fsubrs
xchg
call
fstps
neg
repnz
stos
std
jecxz
shlb
hlt
and
mov
dec
hlt
sahf
clc
loop
dec
les
ror
ljmp
xor
enter
xchg
fisubl
out
add
call
movsl
sub
js
in
jnp
push
out
in
into
rolb
and
scas
imull
xor
setbe
and
cmpsb
mov
push
pop
adc
nop
inc
shlb
cmp
push
cmpsb
mov
sahf
loop
xor
les
cwtl
loope
ret
mov
xor
repz
mov
jae
xchg
cli
lret
xor
stos
fimuls
or
fwait
inc
repnz
xchg
jb
fmull
test
jmp
add
mov
jbe
sub
push
jb
add
xor
or
ficoml
sarb
mov
mov
xor
xchg
rcr
insl
inc
sti
imul
pop
sbb
jecxz
data16
jae
lock
xor
jnp
xchg
add
or
test
addr16
into
mov
push
fsubr
pop
fsubrl
ret
sahf
xchg
dec
leave
or
int
in
mov
fdivp
leave
fmuls
xchg
mov
jle
fmull
push
cwtl
mov
inc
inc
into
nop
pop
jno
push
mov
aas
cmpsl
ljmp
mov
inc
mov
and
scas
xor
pop
xor
into
lret
shlb
mov
clc
lock
call
inc
dec
pop
and
xchg
ja
jg
int3
xchg
push
mov
cmp
add
fmuls
fisubs
mov
leave
dec
out
fisubrs
pop
xchg
ficoml
out
cmp
mov
pop
ret
cmp
or
pop
dec
push
mov
ljmp
push
lret
pushf
repnz
fsubl
push
add
or
rorl
sbb
pushf
cmp
sbbl
sarb
sub
mov
mov
stos
mov
push
out
loop
cmp
enter
stos
int3
fimuls
or
lock
cs
ret
add
mov
stos
mov
out
in
jnp
or
xchg
xchg
clc
ret
pop
pop
lret
lock
fdivl
into
and
fidivrl
and
mov
sub
push
pop
fmuls
and
jnp
mov
dec
inc
in
cwtl
cmp
call
pop
push
sbb
fadd
sbb
inc
sbb
adc
repnz
scas
pop
or
out
push
push
ljmp
loopne
ret
mov
mov
pop
or
gs
mov
nop
cmp
nop
fadd
std
or
roll
scas
pop
fimull
test
fmuls
mov
mov
cmp
hlt
pop
nop
ret
ret
test
fnstenv
insl
cmp
arpl
xchg
add
ljmp
pop
dec
pushf
ss
mov
sbb
jge
outsb
ror
out
iret
bound
es
aaa
cld
sahf
sbb
xchg
or
cmp
mov
push
jb
sbb
dec
mov
add
mov
xchg
lret
fyl2x
fimull
out
ret
and
add
and
lcall
loop
pop
sbb
mov
cmpsb
push
mov
push
inc
ljmp
das
rolb
mov
xchg
mov
push
mov
inc
xlat
out
aas
lods
or
xlat
imul
aas
pop
into
rorb
incb
add
test
mov
cmp
ret
imulb
mov
and
push
subb
push
scas
push
ljmp
or
data16
and
push
mov
pop
js
ds
push
sti
dec
pop
shlb
xlat
test
pop
test
lcall
push
pop
repnz
ret
push
pop
int3
add
in
adc
mov
inc
lods
cmp
scas
shr
pop
icebp
and
fdivl
push
mov
popa
mov
enter
les
cmp
push
fdivs
arpl
cmp
negb
push
cwtl
aam
cli
push
mov
jmp
mov
les
pop
push
lret
jmp
pop
sbb
cwtl
xchg
sbb
add
cmp
mov
sti
pop
xchg
sub
push
pop
xor
mov
add
sbb
pop
push
aaa
ds
aas
aaa
shlb
enter
lea
repnz
hlt
rorl
mov
scas
scas
xchg
push
add
cli
stos
shrb
push
jb
mov
cmpsl
mov
mov
scas
cmp
jl
push
ret
daa
lret
ficomps
clc
add
into
scas
xchg
int3
jno
dec
jns
bound
in
fidivs
adc
sti
test
mov
sbb
rcrl
lock
ds
int3
or
into
add
shrb
lea
xchg
jmp
fiadds
stos
sbb
add
pop
nop
jb
pushf
call
add
mov
adc
lret
jecxz
dec
movb
imulb
push
out
out
and
xchg
pop
adc
aad
shr
testb
xlat
pop
xchg
sarl
icebp
ret
fmull
pop
jo
push
xor
cmp
call
les
stos
shl
scas
fimuls
mov
jge
or
ret
stos
cld
icebp
pop
int3
mov
xchg
nop
add
ret
in
aas
inc
pop
inc
xlat
mov
xchg
in
scas
push
shrb
mov
dec
lret
fs
out
mov
cmp
call
shl
push
pop
enter
or
div
push
testb
rcrb
mov
fsubrp
and
sti
lret
paddq
sarb
outsb
fiadds
or
lods
push
jns
test
push
enter
cwtl
aaa
jb
fcomi
xchg
lret
or
sahf
and
mov
mov
loopne
leave
mov
cmpsb
pop
popa
jae
xchg
inc
hlt
stos
clc
ficomps
test
dec
rclb
pop
and
es
mov
add
mov
ljmp
mov
lods
fsub
mov
inc
lock
cmp
inc
add
jmp
add
push
push
inc
push
test
mov
pop
aaa
push
stos
shl
arpl
cmpsb
out
ds
mov
mov
xlat
lcall
out
mov
pop
mov
fidivrl
mov
in
notb
into
push
fidivs
cwtl
xchg
imulb
cwtl
mov
repnz
sbb
pop
and
fldz
pop
lret
xchg
sub
push
pop
bound
adc
les
out
or
jle
repnz
add
xchg
push
into
pop
mov
pop
sarb
mov
pop
les
clc
pop
push
xchg
dec
adc
jno
in
decb
xchg
add
stos
push
jbe
hlt
and
cmp
push
out
xchg
cwtl
divl
int3
pop
jbe
jp
jb
mov
enter
call
mov
mov
cli
jo
sti
es
mov
stos
push
cmp
mov
adcb
mov
dec
mov
inc
mov
push
xor
stos
clc
xor
cmp
notb
jmp
or
push
push
cmpsb
out
scas
sub
xchg
into
add
shlb
mov
mov
mov
ljmp
pop
add
xor
push
nop
outsl
inc
jge
mov
incb
adc
push
xor
jg
push
or
cmpsb
sti
stos
ret
jb
pop
push
jb
jo
stos
repz
shlb
mov
call
enter
push
into
push
push
dec
xchg
push
pushf
int
arpl
shrb
ret
cmp
call
add
repnz
push
and
xor
inc
decb
hlt
nop
popf
and
jle
fldt
shlb
xchg
mov
lcall
jbe
push
or
and
mov
rcrl
scas
add
enter
lcall
scas
aam
ljmp
popa
shrb
pop
and
mov
clc
into
into
add
add
add
and
pop
mov
and
push
fimuls
dec
push
ljmp
push
cmpsl
loope
dec
stos
test
mov
cmpsl
jmp
mov
test
mov
es
mov
into
pop
sbb
xor
add
fs
mov
lock
cmp
xor
dec
icebp
push
ljmp
icebp
mov
mov
ja
sub
shr
pop
sbb
ficoml
sub
movsb
add
ds
nop
or
fs
stos
mov
jae
lret
es
es
push
mov
sbb
and
push
hlt
add
mov
and
mov
dec
adc
xor
mov
lcall
pop
aam
pushf
xor
pop
arpl
jb
mov
not
cli
js
ret
and
ret
out
incl
jbe
mov
hlt
clc
dec
and
lock
fmull
add
or
lods
mov
lret
repnz
mov
add
mov
std
xchg
scas
popa
fwait
subb
hlt
notb
stos
test
stos
mov
sbb
push
pop
push
fsubrs
push
and
inc
mov
int3
lcall
enter
mov
pushf
push
mov
mov
jp
enter
sahf
rolb
pop
pop
sub
xchg
push
out
mov
jmp
fiaddl
das
and
push
and
ljmp
int
xor
cmp
lcall
push
into
sub
cmp
rcl
pop
mov
clc
sub
shr
aas
mov
in
sub
out
and
stos
dec
icebp
dec
sub
mov
pminsw
push
int3
inc
insl
jmp
lret
lcall
fbld
or
fmul
mov
sbb
ljmp
ficompl
jp
int3
stos
cmp
lock
mov
pop
cltd
test
lret
pop
shrb
ret
leave
cmp
dec
sahf
cmp
clc
stos
add
jecxz
lret
ds
push
push
add
or
movsl
in
sbb
xor
jb
ljmp
cmpsl
clc
xor
stos
or
aaa
push
test
jnp
pop
xchg
sub
pushf
ror
pop
push
out
cwtl
bound
mov
jnp
or
fisubrl
fsubrl
and
int3
push
mov
repnz
rorb
mov
test
mov
lcall
mov
cmp
clc
std
pop
xor
fcoml
fadds
data16
sahf
mov
insl
stc
cmp
sub
incb
add
test
mov
repnz
and
inc
fadds
fisubrs
pop
push
in
cld
cli
mov
call
stos
pushf
xchg
push
or
or
dec
push
push
sub
out
aam
xchg
rcrb
ror
fistl
dec
ljmp
aas
jge
dec
or
stos
and
adc
jno
shlb
fsubrs
jns
pop
inc
pop
mov
scas
or
popl
cmp
xchg
daa
aam
test
stos
and
cmpsb
add
adc
pop
adc
mov
xor
test
ds
xchg
mov
xchg
cmp
sbb
fistps
pop
push
dec
adc
xchg
add
or
xchg
pop
sbb
sti
cmp
out
mov
fs
dec
pop
rcl
pop
scas
cld
wbinvd
leave
fiaddl
jo
nop
sub
daa
call
jle
mov
mov
sub
loop
xchg
pop
addr16
mov
mov
sar
lret
xchg
mov
mov
push
jb
fidivs
int3
fdivrl
pop
xchg
push
hlt
es
mov
aam
pusha
jp
or
jmp
sub
subb
cmp
add
xchg
push
es
aad
int3
ljmp
imul
jns
mov
into
pop
je
jno
add
repnz
push
push
shlb
dec
into
scas
dec
je
push
mov
mov
clc
sahf
sbb
cmc
frstor
into
dec
repnz
add
push
mov
divb
adc
test
rol
sub
leave
and
in
pop
rorl
ret
fisttpl
leave
mov
sbb
rorl
in
fsub
into
dec
pushf
pusha
jnp
and
mov
pop
xchg
in
ficompl
sub
jmp
ret
xor
add
inc
mov
insb
mov
into
fwait
pop
add
in
out
cmp
test
xchg
pop
call
clc
cld
sahf
in
xchg
mov
ret
pop
mov
mov
mov
enter
push
mov
and
ficompl
sbb
pusha
or
int
mov
das
xlat
or
mov
into
add
or
pushf
fucomi
push
imul
add
imul
call
sbb
dec
hlt
scas
push
cld
xor
test
cwtl
and
xor
call
sti
pusha
paddusb
xchg
or
cmp
pop
int3
enter
mov
xlat
pushf
mov
imulb
out
push
add
xchg
in
jecxz
fsubrs
test
pop
jbe
and
enter
lock
call
loopne
adc
push
int3
jo
mov
add
iret
sarl
xchg
or
push
lock
fwait
mov
repnz
inc
xchg
mov
fidivrl
xchg
int3
jbe
or
lret
fsubrs
paddd
inc
ljmp
je
pushf
xorb
cmpl
out
test
dec
repnz
mov
fdivr
loopne
sahf
pop
push
jge
xor
fidivrs
ret
stos
mov
mov
test
push
fldenv
jno
mov
mov
fnstsw
shlb
push
jge
ljmp
cs
push
mov
nop
shll
lock
mov
pop
or
pop
fisubs
shrl
daa
sahf
out
rorb
les
fisubrl
lahf
mov
stos
pop
enter
mov
push
mov
lcall
cwtl
fidivs
sub
pop
lcall
lret
clc
pop
ss
lods
pop
push
jmp
jne
inc
xor
decb
xchg
adc
scas
dec
mov
dec
jbe
ss
lret
cmp
rcrb
out
rcrb
std
dec
dec
fsubrl
ss
xchg
sahf
pop
sbb
push
push
inc
int
pop
pop
rolb
mov
cwtl
xchg
mov
loop
stc
cld
scas
jb
scas
sbb
cmp
push
clc
out
shrb
or
loope
scas
fwait
mov
inc
mov
push
rcl
push
lret
xchg
and
push
mov
mov
lret
xor
out
xorb
xor
and
xlat
fldenv
rcrb
call
out
cld
xchg
push
lods
push
xor
xor
adc
out
clc
sti
ss
add
xor
imul
xor
pusha
rol
adc
ret
push
inc
or
rcr
mov
aam
pop
xchg
pop
sbb
fsubr
dec
mov
mov
enter
mov
pusha
cmpps
ret
xor
inc
pop
jbe
sub
rcrb
mov
push
sti
incb
call
lret
int3
in
or
push
xlat
movsbl
hlt
inc
in
jp
ljmp
cmp
stos
fdivs
xchg
mov
pop
mov
ret
lcall
subl
rcl
push
pop
add
mov
dec
stos
cld
mov
xchg
jp
int3
es
or
imul
pop
notl
bound
out
in
pop
ror
add
xlat
stos
jge
push
cwtl
les
jp
add
pop
mov
ror
lcall
cwtl
test
jne
cmp
rclb
mov
push
rol
orb
out
sar
testb
bound
psubb
mov
sahf
inc
ds
push
pusha
ja
dec
pminsw
jne
pop
mov
testl
int
xor
pop
mov
ljmp
ret
xchg
mov
fsubl
or
lcall
push
pop
cmp
pop
mov
mov
insb
fdivp
lods
subl
sahf
jp
push
stos
cwtl
in
mov
mov
shrb
xchg
lret
addb
cmp
push
call
cli
ficoms
rcl
add
lock
int3
xor
dec
nop
fidivs
into
mov
into
fdivrs
pmovmskb
push
ficomps
pop
sti
xchg
pop
push
fistl
call
mov
pop
lcall
sbb
sub
popw
mov
mov
out
nop
jp
pushf
lret
jo
jmp
rcrb
pop
enter
call
les
xchg
sti
push
push
scas
stos
andl
mov
pusha
ret
push
xchg
sub
and
xchg
mov
sub
push
enter
jae
mov
rclb
xor
fdivrs
sub
mov
xor
outsb
int3
fsubl
rcrb
nop
push
xchg
aam
pop
push
mov
mov
dec
movb
fimull
pop
add
pop
mov
repnz
push
outsl
xor
rolb
pushf
cld
jnp
fdivr
xchg
ret
inc
pop
mov
cmpsb
cmc
stos
test
jmp
inc
ljmp
ljmp
hlt
lcall
lock
and
push
enter
push
outsb
xor
pop
stos
dec
xor
in
idivl
int3
lret
jb
pop
mov
hlt
pop
ss
loope
dec
mov
insl
mov
aas
call
lret
lock
gs
out
mov
and
int3
into
stos
in
push
xchg
mov
repz
push
or
ljmp
xchg
dec
aam
je
clc
or
jp
scas
ds
repnz
push
or
addl
scas
cmp
adc
pop
add
mov
fsubr
rclb
test
sarb
mov
add
xchg
ret
clc
rorl
sub
xorl
mov
sub
add
stos
call
dec
xchg
repz
or
jg
inc
mov
cwtl
mov
dec
fimuls
divb
mov
mov
addr16
adc
lock
pushf
stos
add
nop
repnz
dec
pop
cwtl
inc
shrl
mov
ret
xor
mov
dec
cmp
add
and
and
outsl
iret
push
mov
push
ss
ret
out
pop
pushf
xchg
sarb
cld
xchg
stos
les
mov
or
out
movb
and
int3
rorb
fidivs
pop
pop
add
cmp
fcompl
mov
rcrb
jae
adc
hlt
or
mov
shlb
mov
cmp
outsl
mov
insb
xchg
dec
fldenv
pop
xorb
push
cmp
test
jmp
sti
ss
shll
add
hlt
ret
sbb
lcall
add
xor
xor
clc
sarb
stos
xor
cmp
push
ror
idivb
sahf
xor
or
aas
rcl
aam
xchg
mov
sub
push
push
les
xlat
add
stos
push
xchg
out
pop
mov
jnp
push
cmp
xchg
sub
shlb
jns
add
fs
cmp
xchg
out
push
paddd
notb
mov
sbb
jg
sahf
push
repz
and
dec
int3
add
cmp
push
mov
mov
loope
rcrb
pop
clc
or
sar
xchg
repnz
mov
test
push
lock
lcall
xchg
divb
mov
push
and
dec
decl
cmp
push
lcall
stos
mov
fsubrp
jp
push
xchg
mov
jb
xchg
or
jmp
pop
mov
mov
push
test
ret
aaa
repnz
jg
jae
push
jp
mov
or
clc
stos
and
out
jb
mov
xor
dec
stos
call
jnp
mov
pop
inc
les
cmc
or
adc
cmp
pop
cmc
insb
fcmovnb
scas
cmp
mov
sahf
pop
mov
jecxz
xor
les
out
aam
popf
pop
aad
lret
call
dec
lret
imul
cmp
fsubrp
loop
xor
lock
mov
mov
mov
push
clc
fiaddl
popa
jmp
imul
popa
xchg
cmp
mov
ljmp
cmp
sarl
mov
add
dec
xor
add
jb
sub
or
icebp
scas
dec
ljmp
mov
nop
mov
into
les
mov
mov
xor
sbb
je
xchg
psllq
or
into
fidivs
adc
or
mov
mov
les
out
test
dec
sub
mov
mov
push
clc
jmp
xchg
xchg
mov
out
pop
push
push
push
es
fsub
mov
mov
cmp
mov
push
pushf
mov
mov
push
pop
popa
lcall
cmp
fcoml
cmpl
test
mov
mov
cli
cld
xor
call
out
push
or
repnz
cmp
ret
mov
ss
xchg
repz
aam
sub
dec
loopne
push
fsubs
xchg
push
pop
or
mov
cmpsl
aad
dec
or
pushf
inc
xor
stos
aas
aas
xchg
sarb
or
fsub
dec
mov
dec
mov
jle
pop
lret
sbb
dec
lcall
mov
push
jbe
sahf
cld
push
enter
ljmp
push
mov
mov
out
jecxz
xor
or
push
mov
jmp
mov
pop
out
mov
jge
jecxz
fdivr
mov
mov
and
notl
pop
cmp
push
mov
mov
pop
cwtl
lock
cltd
mov
mov
xchg
mov
divl
fs
daa
addr16
jp
push
dec
sub
stos
pop
test
xchg
ljmp
imulb
jmp
scas
loopne
pop
test
push
leave
pop
xor
xchg
push
mov
insb
fcompl
lock
mov
xor
or
test
pop
aam
call
xchg
fidivrl
pop
mov
pop
pop
cli
arpl
cmp
test
test
xchg
sarb
sahf
fisubrl
enter
or
add
jle
fisubrs
sbb
stc
clc
lds
faddp
ret
out
dec
xor
mov
popa
push
into
cld
xor
push
repnz
lods
mov
mov
rol
clc
cmpl
scas
add
fnstcw
push
push
lds
aas
or
pop
cli
cmp
mov
test
out
into
mov
lock
dec
jne
and
daa
mov
xor
or
or
xor
mov
mov
and
sar
add
rclb
mov
mov
cwtl
ret
pop
clc
xchg
repnz
fwait
and
iret
ret
inc
sahf
jae
scas
pop
inc
inc
ret
int
lcall
or
push
sahf
add
fidivl
dec
call
clc
fmul
xchg
loopne
clc
xchg
rolb
into
add
xor
dec
fwait
inc
pop
mov
add
arpl
movsl
orb
dec
mov
stc
gs
popa
stos
mov
add
pop
add
dec
cwtl
push
je
sahf
nop
stos
mov
imul
rcrb
enter
jmp
jge
inc
dec
adc
lret
adc
add
pop
pop
scas
sti
ds
mov
insl
jo
subb
mov
adc
pop
nop
xlat
divl
jp
inc
xadd
pushl
jnp
pop
repnz
push
cli
shrb
inc
stos
idiv
xchg
ret
int3
nop
loope
stos
sahf
lock
add
insb
cld
shl
push
fidivs
psubsb
add
xchg
dec
jge
xlat
push
pop
jecxz
cs
lret
push
jge
ret
push
or
push
push
ret
out
xlat
xor
ret
and
sahf
call
aam
fwait
add
in
fsubs
pop
sbbl
decl
xor
xchg
test
in
push
in
add
mov
es
mov
fcoml
pusha
lcall
fdivrs
or
std
lahf
pop
lret
inc
fisubrl
pop
mov
ljmp
lret
dec
adc
rorb
rol
mov
mov
add
xchg
test
gs
or
mov
pushf
enter
sbb
mov
push
je
stos
mov
xchg
jb
es
mov
stos
xchg
push
into
cmp
or
shlb
ret
rcr
push
faddp
hlt
push
mov
test
int3
cld
mov
into
ret
into
cmpb
jne
mov
xchg
mov
pop
mov
xchg
push
lods
rolb
push
add
pop
xor
pop
shlb
mov
or
xor
scas
repnz
cmp
cmc
lret
sbb
scas
out
mov
xor
ret
add
stos
xor
test
add
fs
ret
xor
mov
repnz
cmp
orb
sti
jne
pop
lods
and
loop
repz
fcomps
les
sbb
mov
mov
xlat
call
xchg
push
jmp
imul
out
fldcw
sbb
jbe
jb
data16
and
rcr
test
add
or
mov
sub
jae
lret
mov
sub
nop
xchg
mov
jb
insb
xchg
push
out
pop
jns
pop
pop
movb
mov
pop
and
in
xchg
inc
nop
test
add
xchg
push
push
cmp
xchg
shlb
pop
sbb
inc
cmpsl
or
cwtl
stos
rcrb
mov
and
xchg
mov
clc
scas
scas
or
mov
add
and
push
mov
mov
jecxz
push
ficomps
mov
enter
xlat
into
aam
cmc
lods
ja
jns
pop
out
mov
test
and
jno
inc
lcall
xchg
lods
and
add
pop
jno
mov
xchg
dec
push
dec
je
cmp
mov
or
lahf
sahf
lret
div
shlb
push
fadds
push
lcall
fidivrs
add
out
pop
hlt
xchg
pop
nop
stos
fiaddl
and
xchg
loop
jmp
adc
dec
pop
pop
test
mov
loop
sbb
ss
ret
cmp
les
add
stos
dec
cmp
dec
leave
lods
dec
call
jle
mov
mov
push
or
add
je
fimuls
std
roll
xchg
mov
cmp
xchg
jmp
sub
dec
call
adc
fsubr
mov
shl
aaa
push
fwait
sbb
push
push
fadds
inc
mov
push
iret
xchg
rcl
xchg
int3
adcb
clc
cmp
shlb
daa
into
les
cld
pop
lds
pop
pop
shr
sahf
movsb
mov
mov
and
adc
pop
mulb
aas
push
fsub
out
adc
pushw
inc
add
scas
jp
push
popa
filds
ret
add
sbb
push
lcall
pop
and
mov
lods
mov
out
das
and
loop
out
jecxz
and
pop
enter
xchg
jne
cmpb
fidivl
pop
mov
add
sub
ret
push
scas
fcoms
les
test
pslld
mov
mov
cmc
push
clc
or
pop
imul
int3
in
xor
mov
les
out
mov
loop
shrb
aaa
aam
fidivs
push
fcomp
pop
cmpsb
sbb
out
shrb
mov
and
daa
or
popf
rcl
xchg
mov
fdivrs
jecxz
or
andb
sbb
mov
fs
fld
fstps
xor
test
pop
add
push
fistpll
add
adc
pusha
fimuls
fildl
pop
pop
dec
pop
pop
jg
jge
paddusb
cmp
repnz
mov
cwtl
mov
or
cld
adc
nop
pop
mov
call
push
stos
vrsqrtps
sub
lock
lcall
or
pop
sbb
pop
jo
mov
into
push
nop
out
dec
jl
cmp
int3
xchg
test
xchg
mov
into
fsubl
nop
cwtl
int
fistl
inc
pop
fdivr
and
dec
cwtl
push
mov
mov
pop
mov
pop
jae
out
pushf
out
cmp
fadds
int3
lahf
mov
and
stos
int3
pop
jg
mov
push
push
push
mov
pop
adc
out
idiv
sti
ret
add
loopne
js
scas
mov
jb
fiaddl
jbe
dec
add
mov
movsl
mov
sub
pop
adc
add
into
pop
imul
scas
push
adc
mov
pushf
outsl
or
cmp
cld
pop
pop
test
sbb
popa
jmp
sbb
stc
push
xchg
xchg
call
push
mov
imul
pop
push
mov
neg
mov
or
pop
cmp
add
pop
push
mov
pushf
lock
lret
and
sahf
mov
add
xchg
fdivrl
int3
jmp
sub
dec
je
push
adc
sbb
cltd
and
or
cmpnltps
xchg
lret
jmp
sbb
int3
sarl
in
sahf
in
nop
xchg
jle
adc
cld
push
mov
dec
lock
stos
notl
xchg
lret
lcall
bound
clc
pop
sub
xor
and
rcr
sub
xchg
mov
push
cwtl
xchg
mov
and
push
imul
lock
cwtl
pop
add
dec
push
rorb
dec
dec
repnz
dec
pop
dec
in
xlat
add
and
add
pusha
lret
and
lret
jbe
add
dec
mov
xchg
push
fldenv
out
lcall
int3
inc
loop
push
mov
mov
sahf
and
fcmovb
dec
call
xchg
cmp
mov
shl
lcall
mov
test
fs
mov
negb
sbb
stos
push
into
jge
fldcw
pop
add
mov
shl
in
hlt
push
mov
xchg
int3
and
popa
aas
pop
shl
aam
lock
rorb
jnp
xchg
mov
add
and
jb
repz
pop
sub
xchg
fimuls
testl
adc
dec
stos
ljmp
cmpsb
mov
lods
inc
xor
ret
incb
fmul
push
mov
repnz
sbb
stos
cmp
pop
shrb
test
push
int3
pop
imul
sub
test
add
adc
mov
xor
mov
push
push
or
mov
dec
xchg
iret
loope
or
stos
pop
fcoml
and
xor
fidivl
sub
fisubl
fmuls
clc
in
rolb
xchg
cwtl
sahf
enter
mov
mov
pushf
dec
mov
bswap
dec
lds
push
rolb
cmp
cmc
insl
and
mov
sahf
test
cltd
mov
dec
adc
sarb
push
aam
cwtl
cli
xor
cmp
stos
divb
xchg
push
ret
test
std
dec
xorl
mov
cmp
or
out
ret
and
mov
push
ret
sub
xchg
cmp
pop
stos
xor
adc
mov
cwtl
add
xchg
mull
fisubl
xor
out
pop
into
stos
outsb
ljmp
lret
shlb
out
sahf
call
hlt
test
xchg
cmp
ret
nop
add
pop
mov
jo
xchg
fs
or
xchg
stos
xor
mov
mov
pop
push
icebp
fcomp
pop
inc
mov
ret
jnp
push
xchg
jbe
pop
inc
sbb
xor
mov
and
iret
cmc
inc
negb
xchg
mov
pop
jo
mov
in
es
lret
dec
das
inc
cmp
scas
addr16
push
ljmp
fcompl
mov
cmp
push
inc
les
push
push
stos
cmp
scas
sbbb
bound
imulb
iret
scas
out
clc
push
xor
in
sbb
imul
outsl
cld
inc
xchg
lock
mov
and
fadd
inc
or
lock
push
clc
jb
mov
out
movsb
ljmp
mov
cmp
pop
lahf
dec
inc
mov
in
stos
lret
pop
test
shrb
rorl
mov
push
xchg
movsl
stc
movsl
rcrb
out
mov
push
ficoml
cmp
into
lret
out
mov
jge
arpl
mov
fmulp
mov
imul
xchg
mov
jle
ficomps
push
lock
push
repnz
ds
ss
ficoml
ss
jl
sahf
or
push
enter
enter
aas
xchg
xchg
frstor
stos
pop
and
push
xor
ret
gs
iret
in
pop
mov
cld
cmp
enter
pop
mov
clc
std
fisubs
addl
paddq
repnz
pop
adc
add
pop
fwait
or
stos
test
rcrb
and
outsl
inc
psubsb
push
stos
mov
and
push
or
es
imul
clc
push
mov
cmp
add
dec
fadd
mov
sub
and
mov
fcmovu
xor
fdivr
push
mov
leave
xor
pop
mov
pop
out
stos
mov
call
sbb
mov
int3
sbb
sahf
or
fdivs
add
mov
push
mov
lret
mov
pop
sbb
adc
xor
xor
decl
cmp
movsl
in
mov
add
and
mov
dec
push
stos
rcrl
push
dec
xchg
add
in
enter
sub
stos
ret
out
sbbb
mov
mov
ljmp
mov
fsub
push
testb
jae
xchg
out
xor
sub
adc
push
or
loop
lcall
or
xchg
cwtl
adc
scas
mov
push
xor
lret
movsb
repnz
add
cmp
les
mov
aas
fcoms
scas
lret
orl
push
xor
fidivrl
sub
mov
fsqrt
push
xchg
iret
test
push
rcrb
outsb
popf
add
mov
pop
mov
push
xor
int3
pushf
cmp
rol
vpaddd
call
loopne
and
insb
test
insl
or
lcall
cmp
push
div
sbb
fdivs
pop
call
adc
cs
xor
repz
pop
add
mov
push
push
outsl
inc
push
nop
int
inc
dec
dec
mov
roll
cmp
hlt
rcr
mov
scas
mov
pop
call
pop
stos
rolb
fnsave
repnz
scas
mov
aas
mov
call
dec
cs
insb
push
cwtl
fadds
pop
sbb
inc
addr16
cmpsb
fstpt
ljmp
push
push
sbb
or
adc
mov
mov
push
xor
mov
nop
dec
mov
out
ret
test
scas
add
lcall
rcl
bnd
mov
cmp
xchg
enter
push
xor
mov
rorb
mull
and
test
add
adc
subps
xchg
mov
pusha
pop
xlat
mov
mov
xchg
ds
aam
movsb
or
in
mov
push
stos
rcrb
mov
xor
jbe
pop
lret
mov
or
test
out
mov
loopne
push
negl
xchg
ret
cmp
pop
cld
ret
sti
xchg
scas
call
sbb
add
fdiv
dec
or
push
mov
and
mov
dec
push
push
mov
shl
stos
test
cltd
bound
cs
enter
push
pop
jmp
stos
imul
fcoms
ret
ds
fisubrl
repnz
testb
pop
dec
bound
inc
cmp
fimull
fiadds
repnz
mov
xchg
dec
push
orb
aaa
jg
scas
jge
pop
mov
pop
int3
push
in
lods
push
ficompl
inc
stos
or
sarb
loope
mov
or
mov
mov
inc
jg
mov
into
stos
mov
out
sbb
jbe
pusha
jbe
or
mov
into
lcall
fiaddl
jbe
mov
dec
push
stos
push
call
cmp
test
insb
aas
ljmp
push
jmp
mov
fcmovnu
jbe
shl
xchg
nop
push
enter
comiss
pop
push
fwait
std
xchg
cwtl
mov
js
cli
pop
mov
imul
mov
jmp
mov
mov
mov
rolb
mov
and
pop
push
xchg
fs
nop
pop
inc
cwtl
add
or
out
pop
add
jnp
nop
cld
lods
or
mov
or
lret
lret
enter
ltr
pop
jns
push
pop
cmpsb
in
mov
lock
aam
jb
add
enter
test
pop
data16
ds
ret
pop
mov
or
call
pop
mov
pushf
push
push
push
push
sub
xchg
and
pop
nop
dec
loop
nop
sahf
sub
fsubrp
mov
fidivrl
nop
rolb
pushf
test
mov
xor
pop
ficompl
and
int3
ret
iret
std
es
enter
orb
pop
pop
pop
add
xchg
and
xchg
inc
jb
sub
frstor
ret
push
sbbl
bound
pop
stos
push
imul
inc
in
pop
lea
lock
jp
enter
clc
dec
sbb
mov
icebp
jp
push
test
or
aam
sbb
push
add
adc
mov
pop
movsb
pop
add
pxor
jge
mov
imul
test
les
mov
test
movsb
xchg
sahf
lret
ret
push
sbbb
pop
xchg
push
insb
jecxz
enter
jp
les
sub
stos
mov
lock
int3
pop
push
or
mov
jae
pusha
andb
mov
and
push
mov
jmp
inc
fmul
or
test
fwait
xlat
cmp
clc
mov
adc
mov
ret
ljmp
frstor
insb
xacquire
scas
mov
and
adc
roll
pop
cmp
ja
ds
push
dec
jns
mov
inc
mov
sbb
int3
push
xchg
and
shl
push
das
push
pushf
clc
gs
jmp
pop
or
out
dec
push
xchg
pop
push
mov
idiv
mov
xchg
pop
negb
faddl
inc
mov
out
jp
stos
mov
cmp
out
test
hlt
imul
sbb
mov
pop
inc
pop
sahf
mov
ret
aam
test
mov
push
nop
jae
insl
jns
cli
out
lret
incb
pop
mov
lds
mov
lcall
test
mov
mov
aam
clc
adc
les
pop
sub
and
int3
cmp
or
scas
dec
add
mov
repnz
filds
mov
pop
xchg
dec
cmpsl
ds
mov
add
or
movb
scas
sbb
sti
nop
xchg
push
pop
adcl
ds
mov
leave
push
ret
cld
add
pop
int
xchg
fcmove
cltd
lock
cmp
aas
pop
fcoml
cwtl
mov
adc
cmpsl
xchg
push
ret
cwtl
xor
add
pop
xchg
test
cmc
xchg
dec
faddp
sbb
scas
repnz
xchg
fdivs
push
and
pop
mov
mov
int
dec
insl
gs
mov
xchg
xor
adc
pop
lcall
jo
or
mov
stos
pop
and
stos
adc
cmp
hlt
pop
ret
rcl
push
scas
push
fcoml
push
and
xor
mov
clc
add
or
sub
out
mov
pop
jo
mov
mov
mov
jns
mov
push
jmp
std
icebp
add
sti
push
push
aas
push
int3
mov
out
cwtl
test
xchg
aam
les
rol
int3
push
loopne
pushf
shl
xchg
or
and
lret
lret
fdivp
out
inc
pop
lcall
adc
enter
rcll
mov
das
mov
mov
xor
add
in
es
in
iret
clc
pushf
mov
aam
ret
fistpll
aam
int3
into
fcmovbe
nop
ffree
or
mov
push
leave
clc
push
mov
cmp
ficoml
les
pop
lret
rcrb
mov
lds
adc
sbb
pushf
fimuls
pop
dec
je
dec
mov
dec
jmp
das
pop
imul
cltd
cmp
push
inc
les
in
add
ret
and
aad
xor
adc
jo
ljmp
cmp
pop
into
int3
sarl
fs
loope
popf
rdtsc
mov
rclb
loopne
sub
cmp
add
fiaddl
mov
pop
push
cmp
pushf
or
push
icebp
jo
push
scas
enter
repz
add
mov
pop
add
subb
movsl
jmp
push
mov
stos
inc
fcoml
in
movsb
les
cmp
arpl
adc
pop
pop
pop
jmp
and
inc
jae
enter
mov
ret
inc
sahf
fsubrs
or
cmp
mov
mov
mov
mov
ret
xchg
add
test
hlt
lahf
mov
clc
hlt
sahf
ret
decb
mov
pusha
stos
jb
or
fcmovbe
lock
fwait
out
mov
arpl
cmp
xchg
xchg
stos
fdivrs
test
add
addr16
dec
add
push
testl
call
sbb
ljmp
and
adc
test
and
sub
ficoml
into
and
mov
cwtl
rclb
ficoms
inc
test
pop
notl
rolb
push
cwtl
pop
lcall
inc
stos
or
mov
inc
fstpt
sar
mov
or
loope
ret
stos
or
cwtl
mov
fistl
imul
lcall
and
fsubrl
adc
inc
ljmp
arpl
mov
test
mov
xchg
lds
test
mov
hlt
xchg
cmp
mov
add
pop
sahf
dec
int3
pop
pop
aas
cli
add
aam
mov
pop
stos
mov
pand
xlat
mov
xchg
mov
push
dec
and
push
ret
cld
or
leave
pop
mov
aam
inc
sti
pusha
push
out
out
mov
mov
into
adc
sahf
push
in
push
cmp
gs
mov
push
or
xchg
pop
push
into
add
repnz
mov
cmc
lods
ds
mov
cld
xor
sbb
mov
push
pop
stos
pop
and
xchg
inc
jb
push
push
jb
push
mov
testl
jnp
dec
inc
or
hlt
stos
bswap
test
and
pop
mov
ds
or
or
ljmp
dec
add
xchg
xor
add
mov
shr
lea
std
call
clc
or
push
lret
stos
sub
add
sbb
sarb
sar
xchg
ret
lcall
push
push
std
or
mov
sarl
loope
pop
repz
push
mov
mov
pop
shrl
or
lock
jecxz
es
mov
out
shrl
jb,pn
sub
or
mov
mov
aas
lods
aam
cmp
and
push
mov
nop
psllq
push
enter
nop
lcall
jbe
xor
push
cmp
mov
or
dec
jns
adc
dec
stos
add
nop
imul
adc
sub
mov
mov
cmp
ret
push
mov
cmp
enter
or
cmp
aad
int
mov
pop
pop
sarb
mov
hlt
mov
xchg
lcall
test
stos
js
mov
lds
out
pop
hlt
ss
pop
shlb
mov
xchg
adcb
jp
and
fsubrs
jae
or
xchg
cld
out
mov
cmpsb
call
fsubrl
jae
pop
imul
mov
and
or
add
pop
stos
sub
test
ljmp
push
into
jecxz
dec
int3
mov
pinsrw
push
gs
xchg
sahf
sub
pop
notb
orb
cld
pushf
add
xor
pop
push
scas
push
xlat
add
insb
out
inc
sbb
add
lret
xor
lea
iret
aam
fisubrl
ds
push
rorb
dec
ljmp
sub
push
nopl
cmpsl
xchg
in
mov
push
or
lret
jne
repnz
fcomps
in
mov
lcall
cld
dec
btc
insb
inc
pop
clc
aad
push
gs
push
xchg
mov
imul
pusha
ljmp
lcall
push
lret
push
into
mov
shlb
test
inc
push
popf
nop
decl
pop
int3
repnz
jmp
call
scas
lcall
or
pop
rcll
cmpsl
mov
into
sbb
dec
in
mov
popf
ds
add
cltd
notb
insb
and
idivb
pop
call
fimuls
fdivl
pop
pop
mov
test
lcall
ldmxcsr
cmp
aam
push
and
push
fiaddl
clc
data16
hlt
repz
stc
jp
and
sahf
arpl
inc
mov
add
enter
mov
aas
adc
ds
popf
push
inc
push
push
push
mov
adc
stos
or
fmulp
lods
push
adc
mov
mov
enter
sahf
sub
lcall
xlat
and
enter
add
faddl
xchg
or
flds
ljmp
mov
nop
sti
idivl
push
mov
add
mov
or
lcall
push
xchg
mov
mov
repnz
idivb
rcrb
icebp
aaa
xchg
mov
lock
jbe
out
jo
test
hlt
inc
stos
pop
inc
mov
mov
int3
mov
pop
inc
or
push
jb
sahf
lret
sbbb
mov
sarb
add
pop
push
rcll
divb
pop
and
dec
pop
mov
push
dec
dec
inc
xchg
inc
aaa
mov
nop
mov
cli
jnp
push
xchg
test
add
enter
dec
mov
iret
and
popf
out
push
xor
sti
add
jecxz
cmc
adc
leave
fmull
xchg
gs
out
stos
inc
ret
scas
pop
xchg
cli
scas
call
jp
xor
test
ret
orl
mov
jge
lret
jge
in
xchg
and
pop
ljmp
scas
sar
mov
sub
xchg
ljmp
add
xor
test
outsl
sti
pop
nop
mov
sar
loope
les
fiadds
shrb
push
inc
mov
push
stos
rcll
iret
mov
fimuls
fmuls
jno
mov
mov
inc
sub
push
sbb
test
rcr
scas
cmp
hlt
pop
pop
and
mov
push
and
push
sub
mov
addb
jg
pop
mov
cmp
inc
das
fbld
test
xor
pop
push
xlat
lret
fcomps
js
add
mov
lret
mov
leave
cs
cli
cmp
push
jns
pop
inc
out
add
mov
scas
int3
add
xchg
nop
cmp
ljmp
or
xchg
roll
xchg
push
push
pop
clc
jmp
stos
add
sbb
es
pop
or
adcb
mov
test
push
daa
ds
mov
aaa
push
mov
push
outsb
xchg
push
aam
push
jbe
aad
int3
fcoms
mov
movsb
pop
push
mov
cmp
test
push
nop
push
ljmp
pusha
push
pop
push
insl
xor
mull
push
adc
sub
mov
dec
into
mov
rcrl
pop
out
leave
mov
dec
dec
inc
sub
lods
cwtl
jno
pop
mov
sub
xchg
pusha
mov
idivb
add
sahf
push
or
pop
push
bound
pop
jnp
call
popf
ljmp
popa
stos
leave
or
push
push
lea
mov
test
jecxz
and
shrl
jns
ror
aam
sub
mov
ret
add
push
mov
ds
out
aam
fadds
ret
mov
out
repnz
das
inc
into
pop
jmp
ret
jne
pop
push
dec
aam
dec
fidivrs
mov
cmp
rclb
mov
xor
enter
cld
fnstcw
or
fdivs
jecxz
push
repnz
mov
xchg
or
mov
out
xlat
or
sbbb
call
jmp
adc
mov
les
xor
ljmp
fmull
popa
fwait
sarb
add
hlt
fcoms
sbb
cmp
jmp
idivb
pop
xchg
nop
int
jb
idivb
cld
out
ljmp
inc
jno
sbb
frstor
nop
jecxz
mov
mov
pop
aam
sub
daa
sbb
pop
mov
sbb
out
ljmp
mov
loop
es
lods
add
mov
push
pop
pop
notb
sahf
adc
push
cmp
pop
mov
sbb
push
inc
jp
adc
imul
int3
rclb
cmp
cwtl
frstor
xchg
or
mov
add
or
cmp
mov
mov
stc
loope
fsubr
popa
mov
sub
push
push
adc
pop
dec
imul
xor
pop
or
in
sbb
out
push
inc
push
rolb
mov
pop
dec
sahf
add
aas
cmpsl
into
push
out
rol
fdivl
xor
lahf
xchg
mov
lcall
adc
sub
lock
jmp
xchg
js
outsl
cmp
shll
call
iret
outsl
ror
pop
stos
imul
cmpsb
pop
mov
lods
fsub
sub
lcall
sub
ljmp
mov
or
out
test
repz
and
stc
push
xchg
and
movb
mov
test
mov
fstp
cmpsl
push
lcall
mov
ficomps
mov
imul
mov
add
test
mov
mov
jecxz
mov
mov
pop
xchg
fmuls
int3
call
bound
mov
xchg
out
pop
in
push
ret
or
and
imul
xchg
push
cmp
ficompl
rorb
pop
fisubrs
rorl
dec
dec
add
mov
cmp
mov
xchg
call
lock
sti
bound
pop
sub
repz
mov
scas
fisubl
jnp
idiv
out
pop
adc
rol
stos
rclb
and
pop
test
idiv
jge
cmp
ret
mov
pop
cld
testb
fcmovbe
dec
mov
pushf
repnz
cmp
add
into
jecxz
pop
das
fcmovbe
xchg
clc
rcrb
ljmp
mov
mov
add
aam
inc
mov
fidivrl
cmp
jno
push
inc
filds
ljmp
test
dec
popa
cmp
pop
push
add
repnz
push
aam
iret
aas
cmpsl
mov
ret
push
aas
cmp
mov
scas
add
clc
cmp
rcrl
mov
add
roll
xchg
push
call
push
pushf
jecxz
fwait
mov
mov
xlat
cmp
test
sbb
gs
cmp
cmp
into
push
jge
fwait
mov
test
cld
sub
and
cmp
pop
repnz
mov
xor
jno
repnz
imul
outsl
fisubs
or
mov
push
push
faddl
into
inc
push
and
xchg
out
mov
neg
push
lahf
push
sbb
push
xorb
test
dec
into
fsubrl
and
mov
lock
adc
xchg
pop
mov
pop
jo
mov
xchg
adc
pop
dec
jg
pop
sub
or
xchg
or
mov
cmp
and
pop
jne
in
jo
dec
or
pop
xchg
rcll
lods
or
and
jbe
or
fstpl
dec
adc
or
pusha
test
pusha
pop
in
insb
push
pop
add
cmc
out
test
mov
lret
xor
fisubrl
jmp
ret
xor
add
cmp
pop
in
mov
cmc
xchg
add
insb
int3
rcr
pop
ljmp
mov
jo
das
push
outsl
daa
push
scas
rcr
lret
push
xchg
pop
mov
push
out
mov
jnp
ficompl
pop
hlt
pop
fisubrs
push
gs
rorl
mov
lret
call
js
and
hlt
arpl
mov
rol
push
adc
int3
push
ret
fs
mov
aad
cmp
sbb
test
incb
cmp
dec
lret
roll
sbb
dec
sbb
fistpl
jo
push
sbb
daa
lcall
call
mov
add
ret
rcrb
pop
mov
test
push
push
cmpsb
div
push
mov
pop
repnz
aam
hlt
or
and
push
out
cmp
push
imul
push
fdivs
jb
fists
mov
jmp
sbbl
shl
dec
fimull
xlat
xchg
mov
shll
mov
push
and
adc
sub
and
cmpsb
pushf
mov
bnd
jp
lret
cmc
out
sbb
lcall
jmp
xlat
mov
popa
roll
leave
popa
jecxz
inc
or
inc
call
pop
inc
inc
lods
push
enter
mov
mov
pushf
sahf
pop
push
or
jae
mov
adc
and
bound
add
cwtl
push
push
pop
jmp
xchg
hlt
mov
push
lret
and
mov
dec
mov
jae
cltd
lret
mov
and
mov
fadd
adc
jbe
imul
sbb
ljmp
and
pop
mov
rcll
mov
xchg
je
loop
mov
sahf
into
icebp
and
push
and
out
iret
or
mov
jns,pt
enter
add
loop
outsl
lret
outsl
mov
sbb
push
sbb
loope
adc
add
lods
mov
outsb
jp
pop
inc
into
mov
inc
add
popa
push
jp
push
aam
movsb
adc
cld
loopne
ret
mov
xor
insb
mov
dec
mov
data16
xchg
insl
loopne
rolb
popa
or
mov
ficomps
pusha
mov
jb
and
out
jno
cmp
or
push
mov
or
into
mov
insl
fwait
adcl
and
cmpsb
xchg
sub
lahf
adc
and
xlat
xchg
insl
ja
adc
in
out
into
and
fsubp
mov
ret
fbstp
push
or
inc
std
scas
xchg
pop
les
fcoms
mov
add
adc
les
mov
pop
pushf
push
mov
call
mov
inc
es
in
add
stos
adc
into
scas
aam
out
ds
orps
mov
adc
ja
push
lods
add
jbe
jnp
rolb
mov
pop
jne
mov
int3
jb
mov
lret
and
add
cmp
out
stos
test
xlat
inc
fmul
mov
call
adc
add
es
movsb
mov
mov
or
je
or
push
test
imul
push
xchg
stos
fisubrs
or
xor
or
jmp
data16
or
pop
test
rcl
packsswb
sub
add
call
roll
in
add
imul
or
sub
mov
mov
loop
aad
jnp
xchg
dec
scas
pop
push
inc
inc
out
fcmovbe
lea
pop
stc
push
pop
jb
push
arpl
lock
cld
jg
aad
xchg
push
out
mov
and
loop
and
gs
and
fcomi
int3
nop
les
cld
cmp
cwtl
enter
shrb
jbe
inc
sahf
ljmp
cld
mov
xchg
aam
mov
ljmp
fiadds
and
mov
repnz
cld
aam
lea
xor
fdivrs
or
stos
les
add
and
cltd
and
mov
push
adc
fmuls
test
fisubs
sti
shlb
enter
cmpsb
clc
mov
jl
pop
hlt
shrb
sete
cwtl
sbb
inc
jne
movsl
mov
push
xchg
sti
adc
fiaddl
cwtl
sahf
cmp
or
xchg
fisttpl
inc
mov
xchg
mov
pop
sbb
push
ficoms
add
stos
jb
add
push
data16
pop
push
cmpsb
mov
lcall
lock
enter
mov
or
inc
cmc
out
jns
mov
add
push
je
stos
movsb
loop
sbb
sarb
das
pop
nop
sti
dec
xchg
xor
mov
sbbl
out
mov
sbb
jge
dec
cs
into
xchg
xor
mov
mov
mov
fwait
dec
pop
mov
cmp
xchg
push
ficoml
dec
pop
or
retw
es
les
ds
xchg
pop
pushf
mov
cli
dec
shl
adc
lcall
loop
dec
test
add
pop
repnz
jp
shlb
out
call
loope
movsl
jge
push
and
cmpsb
xor
repnz
xor
fisubrl
ret
xabort
mov
pop
or
ljmp
or
mov
push
or
and
hlt
movsb
aam
into
adc
lods
test
subb
xor
cmp
out
cld
sub
aam
sub
cmp
repnz
or
xchg
inc
dec
push
mov
push
rclb
mov
add
stos
dec
out
lock
inc
mov
add
mov
and
popa
mov
sahf
or
or
jb
cvtps2pi
inc
push
pop
cmp
mov
cld
xchg
sub
push
and
fmull
push
or
cwtl
push
sub
push
clc
pop
sbb
sub
dec
fimuls
adc
jecxz
mov
xchg
push
push
int3
mov
mov
inc
push
lock
mov
enter
hlt
cwtl
enter
cld
add
nop
pop
mov
xchg
lcall
inc
push
mov
and
movsl
mov
test
dec
mov
xchg
cld
leave
lret
lcall
rclb
or
pop
cwtl
mov
mov
inc
shr
enter
push
stos
cwtl
and
out
jg
mov
adcb
ds
cld
pop
int3
xchg
lret
aam
mov
out
dec
pushf
lret
xlat
cmp
mov
shrb
ficoml
mov
lock
jle
movsb
lret
ret
add
mov
jne
and
decb
jecxz
push
clc
adc
mov
xor
cmp
mov
ficomps
or
stos
sbb
jbe
incb
pop
add
pop
sub
pusha
int3
xchg
scas
pop
lea
dec
cwtl
test
dec
into
push
cmpsl
lret
lock
inc
pop
and
xor
lret
clc
aad
mov
xchg
jp
lds
test
mov
xchg
add
xchg
repz
mov
int3
mov
inc
clc
into
into
rolb
push
push
and
jno
xor
rep
xchg
int3
adc
mov
mov
mov
loope
outsl
gs
call
and
push
cwtl
cmp
data16
popf
cli
es
add
pop
mov
fadds
lock
cmp
or
test
fsubrl
sub
idivb
xor
nop
mov
enter
test
pop
or
shr
push
stos
cmpl
pop
or
push
add
ret
outsb
nop
insl
pop
in
into
add
sti
and
mov
inc
pusha
cmp
fdiv
mov
aam
cwtl
or
rclb
iret
dec
rorb
mov
pop
or
fsubl
push
test
incb
mul
mov
mov
or
mov
wbinvd
pop
fdivr
cli
adc
pop
clc
xor
imul
push
mov
lock
sub
stos
lock
xor
filds
movsl
jecxz
and
xchg
in
fldl
mov
out
js
add
jbe
push
lcall
test
mov
mov
dec
shll
mov
dec
fcomps
pushf
xchg
fwait
stc
ret
adc
add
ljmp
push
sub
add
or
stos
or
in
mov
fadds
aam
fadds
jp
add
or
or
ret
cmove
repnz
or
pop
xchg
rorb
cwtl
clc
cli
call
outsb
and
repnz
or
std
xchg
mov
push
mov
push
dec
ds
xor
cmp
rcl
jno
mov
lea
adc
scas
mov
mov
std
lahf
mov
lock
jb
xchg
cmp
faddl
add
scas
mov
int3
lret
loopne
scas
or
in
outsb
subb
cmpsb
and
rcr
daa
enter
push
rorb
dec
stos
dec
sub
test
jmp
stos
and
fcoml
je
add
inc
and
jae
or
rclb
adc
push
xor
les
mov
lret
call
or
mov
push
and
lds
repnz
mov
jg
fdivp
leave
xlat
fsubrl
enter
sar
inc
hlt
sub
mov
lcall
push
int3
ja
call
lcall
mov
mov
pop
xor
clc
cmp
repnz
out
test
scas
lret
hlt
or
dec
mov
mov
sbb
shlb
and
repnz
fsubrs
cwtl
imul
inc
js
js
lahf
cmp
xchg
repnz
ss
addb
xlat
orl
sahf
mov
and
sar
es
sarb
fimuls
pop
movsb
add
push
sti
inc
push
or
ret
stos
sub
mov
mov
lret
faddl
hlt
arpl
mov
inc
or
pushf
push
xchg
mov
cmp
pop
fimull
and
test
mov
repz
xor
jne
dec
clc
xor
rorb
stos
adc
fistl
in
hlt
ret
pushf
out
sbb
call
aad
js
lcall
pusha
mov
clc
int3
ret
mov
add
or
lcall
sahf
mov
outsb
push
mov
subl
fsubr
or
jecxz
pop
mov
mov
pop
lret
enter
nop
ret
ficompl
xchg
dec
fldt
dec
es
dec
fmulp
xor
push
jno
test
ds
mov
enter
addr16
add
bound
mov
pop
lods
inc
jmp
and
dec
lret
mov
shl
jmp
int3
add
mov
jb
and
jns
dec
jo
mov
xchg
repz
shrb
stos
mov
incl
or
inc
add
jmp
xor
les
mov
mov
outsb
ds
or
mov
jnp
adc
aam
mov
cmp
add
enter
int
cmp
push
negb
pusha
test
fdivrl
dec
int
repz
sahf
out
lret
pop
sti
mov
mov
push
popf
lcall
faddl
ror
mov
jb
pop
loop
movsb
adc
dec
int3
jns
add
ret
ret
lcall
add
xorb
or
aaa
insb
mov
lcall
lret
jb
cmp
and
pslld
ret
sbb
cwtl
inc
mov
rolb
adc
clc
push
setp
std
hlt
in
ret
fstpt
mov
mov
insl
invd
aad
add
add
call
imul
data16
sub
cmp
test
into
fdivrs
scas
inc
add
inc
test
mov
decb
fcoms
mov
fstl
aas
into
or
lods
jns
mov
repnz
cwtl
movsb
pop
imul
mov
scas
stos
loopne
dec
repnz
pop
add
jp
mov
or
inc
fcoms
and
cmpsl
push
mov
cmp
sahf
ret
adc
lcall
and
data16
xchg
add
pop
mov
xchg
and
adc
xchg
dec
push
xchg
sbb
pushf
cmp
fcompl
stc
xchg
pop
mov
or
idivb
mov
mov
fwait
ds
ljmp
ret
cmp
negb
xor
stos
rcr
mov
test
mov
push
and
sbb
out
add
fbld
subb
sub
or
pop
mov
jg
pop
mov
sahf
adc
push
pop
les
negb
jmp
ficomps
cwtl
push
ret
clc
xchg
jb
push
or
push
jecxz
rclb
add
adc
clc
cmp
rorb
push
out
xor
mov
add
hlt
mov
sahf
aas
adc
out
pop
rolb
cli
mov
into
push
ljmp
shll
ds
mov
or
dec
xchg
repnz
pop
push
and
cmp
call
fiaddl
xchg
int3
mov
cli
add
or
push
dec
scas
cld
not
mov
outsb
cmp
lret
pop
mov
push
push
cmpsl
scas
cmp
cmp
rcl
and
adc
push
mov
nop
pop
test
idiv
mov
mov
push
dec
mov
push
stc
in
pop
pop
cld
mov
and
mov
arpl
call
enter
nop
xor
sub
mov
xor
insl
dec
dec
xor
mov
rorl
leave
push
xchg
adc
jns
imul
subps
sub
pop
adc
addr16
mov
jnp
mov
ret
fldt
mov
addr16
xor
xchg
jp
mov
in
into
push
psubusb
jbe,pt
push
repz
out
pop
les
push
mov
cmovnp
arpl
mov
push
mull
fcmove
fcmovu
into
sbb
loopne
clc
mov
mov
cmp
cwtl
call
repnz
mov
inc
pushf
push
add
add
pop
fdiv
ret
jp
jg
inc
aad
fdivs
xchg
xchg
fistpl
ret
push
xchg
mov
rcrb
fisubl
call
add
cwtl
lock
push
pop
ljmp
add
cmp
lret
fimull
or
sbb
inc
lock
or
out
adc
stos
clc
sub
pop
jge
jo
push
ror
lds
mov
clc
xor
xchg
stos
or
dec
cltd
cmp
icebp
push
pop
jecxz
std
mov
in
xchg
aaa
adc
mov
lret
stos
js
add
or
and
in
mulb
lcall
lods
xor
lods
hlt
push
cld
mov
test
shlb
and
lret
fcoml
fdivrs
and
lret
xor
ljmp
bnd
std
fcoml
mov
lcall
push
add
clc
push
aaa
aam
testb
ret
lcall
xchg
leave
hlt
jb
push
pop
add
mov
cmp
mov
hlt
clc
pop
dec
cmpsb
out
jecxz
int3
mov
sub
mov
in
shrb
rclb
movsb
jmp
int3
fnstcw
ficomps
rcrb
rcll
popf
ret
mov
pop
mov
cld
push
in
in
sti
xchg
mov
les
mov
push
cld
pop
push
test
cli
sub
lret
sub
hlt
jb
sbb
push
push
es
cwtl
dec
enter
xchg
dec
push
xor
rcl
xor
pop
aad
pusha
shl
scas
jo
clc
jmp
movsb
call
bound
xchg
mov
fldenv
add
mov
cmp
xchg
fidivl
mov
jo
or
add
jne
test
popf
mulb
xor
xchg
les
setb
jp
or
inc
mov
and
mov
mov
ret
pop
fsts
stos
dec
stos
cwtl
cmp
in
cld
cmp
enter
sarb
loope
aas
orl
test
and
call
js
xor
mov
bound
ficoml
mov
bound
out
pop
and
mov
sub
cmc
xchg
push
jne
sar
scas
push
repnz
repz
aas
pop
xchg
xor
mov
push
test
mov
fisubrs
add
out
sbb
add
cs
rclb
mov
ror
and
sub
lock
call
sub
ret
cmp
push
pop
sbb
push
mov
fisubs
leave
fcmovbe
mov
js
imul
mov
clc
rcrb
call
call
cmc
mov
xchg
ljmp
sahf
fidivl
test
mov
hlt
dec
mov
test
in
push
sahf
inc
or
scas
mov
sbb
mov
and
xor
jecxz
add
xchg
adc
stc
push
mov
push
and
out
mov
bound
lret
pop
xor
mov
mov
lret
ds
fidivl
push
mov
mov
imulb
add
ljmp
push
aaa
jp
cmp
mov
scas
repnz
cwtl
lcall
lret
pop
sub
test
sub
pop
push
je
out
bound
mov
or
sub
mov
incb
aaa
mov
and
push
cmp
in
adc
jecxz
nop
cmpsl
mov
cmc
push
stc
ja
clc
ret
stos
cwtl
push
repnz
popa
cmp
xchg
add
sarb
push
mov
lcall
aam
sbb
add
call
mov
or
pop
sub
sub
fimuls
lds
movb
nop
xchg
mov
mov
mov
push
push
jnp
push
clc
xchg
cmp
insb
jge
mov
les
cld
shr
push
loope
repnz
pop
mov
pop
shll
test
into
ret
mov
sub
dec
enter
inc
jne
xchg
imul
mov
clc
aaa
jp
cwtl
out
repnz
cmc
cli
leave
pop
pop
outsl
push
mov
push
mov
and
int
pop
fidivrl
jb
rclb
mov
mov
imulb
clc
mov
inc
mov
ret
cwtl
add
mov
out
dec
lahf
inc
xor
lcall
adc
sti
addr16
nop
stos
push
adc
arpl
adc
sahf
add
mov
into
lock
cmp
imul
loopne
testb
into
inc
leave
mov
adc
out
cli
sub
xchg
in
fadd
ret
ljmp
pusha
mov
xchg
and
call
and
aaa
mov
mov
sbb
adc
cmp
test
pop
xchg
stos
repnz
cmp
push
push
xor
push
cmp
add
lock
push
jmp
loopne
sbb
jb
mov
fucom
mov
into
and
popf
repnz
mov
mov
aad
xor
jbe
mov
cmpb
mov
stc
cmp
xchg
aas
mov
aas
movb
icebp
push
jae
xor
or
xor
cmp
mov
cmp
rcr
test
lock
and
ljmp
push
clc
mov
inc
mov
aam
cltd
cmp
mov
xchg
icebp
psubd
pop
push
fdivp
scas
dec
stc
divb
push
fcoms
dec
mov
mov
int
mov
pop
call
dec
sbb
jb
fs
loope
push
push
push
fisubrl
mov
sbb
dec
dec
xchg
inc
xor
push
lea
push
jp
pop
mov
rorl
push
inc
out
mov
aam
and
lret
scas
push
pushf
or
and
pop
mov
sbb
repnz
stos
cld
jle
mov
add
add
imul
jb
or
sti
out
jnp
pop
xchg
xchg
mov
pop
fcomps
inc
test
hlt
dec
es
ja
and
or
mov
dec
sbb
arpl
dec
pop
les
lsl
and
in
push
xor
pop
fsubr
out
xchg
cwtl
push
dec
in
jbe
push
add
lret
ljmp
add
mov
lcall
mov
imul
jb
pusha
scas
sti
mov
loop
loop
fildl
sub
nop
sub
pop
js
fs
xor
pop
push
mov
lods
lds
xor
rclb
ficomps
add
sbb
int3
es
mov
shlb
in
adc
aam
imul
stos
into
imul
outsl
jbe,pt
mov
or
pop
lret
fsubp
mov
add
add
ret
out
imul
add
jbe
fdivrl
push
or
mov
dec
fidivl
call
mov
outsl
fcompl
or
in
jb
or
enter
in
add
sub
adc
repz
push
mov
and
xorl
jns
int3
cli
push
mov
les
arpl
mov
sbb
and
loope
idivb
aam
fadds
inc
add
ud0
in
push
repnz
movsl
xor
popa
out
mov
clc
ret
xorl
xor
ret
jo
lcall
jns
mov
out
ja
mov
jbe
adc
dec
outsb
fidivrs
push
dec
hlt
mov
arpl
dec
push
lcall
lock
jnp
pop
mov
push
add
repnz
xchg
mov
enter
ljmp
or
sti
fcmovu
repnz
out
xor
sahf
call
or
lcall
fsubs
sti
das
les
push
and
adcb
inc
mov
cld
xchg
ds
fstpl
out
loopne
pop
ss
sub
and
jp
call
xchg
mov
cld
mov
in
pop
fimuls
aas
mov
mov
cwtl
jae
jle
fsubrs
lcall
cmpsl
or
int3
xor
push
xor
mov
mov
xchg
nop
mov
cmpl
hlt
mov
pop
jo
repnz
xchg
data16
xor
sbb
gs
idivl
ficomps
jnp
push
bound
nop
mov
js
pop
push
or
push
mov
out
fdiv
add
test
dec
dec
add
adc
push
xchg
inc
cld
add
push
mov
bswap
sbb
aam
test
xchg
push
sbb
xchg
ficompl
and
addb
pop
inc
lret
stos
jg
xchg
and
repnz
jecxz
jae
sbb
inc
inc
mov
int3
cmp
jg
inc
hlt
mov
cmp
xor
mov
mov
pop
into
clc
sbb
addr16
cmc
mov
hlt
lcall
mov
xor
jg
xchg
std
mov
pushf
dec
mov
dec
ret
xchg
and
inc
xchg
mov
sub
bnd
int
movswl
in
ret
adc
cmp
ret
les
lcall
mov
xor
add
mov
cmp
pop
or
fcomps
jb
test
and
addb
pminsw
setb
pop
sbb
add
enter
pop
in
pusha
ljmp
jmp
add
sub
mov
les
pop
call
mov
add
ss
pop
fcoml
xchg
lret
int
cmp
pop
push
shlb
loop
stos
mov
stos
pop
and
mov
mov
lahf
sti
aad
pop
sub
pop
pushf
iret
ret
push
xchg
cmp
xchg
les
xchg
fcomip
or
mov
mov
loopne
mov
sbb
push
jbe
adc
mov
push
cmp
imulb
mov
adc
mov
fiadds
push
mov
test
sahf
mov
jge
mov
push
mov
add
mov
sahf
lret
lret
pop
xchg
jb
sbb
xor
add
xor
xchg
dec
fcoml
iret
or
push
xchg
pop
and
mov
sahf
jb
scas
je
clc
repnz
cld
leave
sub
cmp
lret
xor
out
sar
mov
inc
incb
xchg
xchg
lods
and
push
cmpsl
icebp
pop
ds
test
stos
cmp
pop
ret
stos
pop
mov
jbe
xor
lock
sahf
dec
push
xchg
icebp
dec
mov
inc
jge
mov
iret
fdivrs
into
ljmp
sbb
sub
cmp
mov
rclb
ret
inc
test
cld
and
push
shrb
dec
shll
pushf
push
pop
and
hlt
ljmp
leave
mov
orb
call
scas
or
pop
cwtl
mov
dec
cmp
pop
lret
jbe
nop
or
dec
pop
inc
mov
mov
add
and
jnp
add
test
clc
dec
push
inc
jnp
fadds
js
xor
ja
and
push
stos
mov
out
clc
xchg
js
jae
jae
lds
aam
add
mov
pop
dec
lods
in
call
mov
mov
into
insl
sbb
sub
mov
cmc
int3
scas
repnz
fcoms
sbb
dec
repz
xchg
fmulp
fimull
pop
lock
adc
and
jno
jle
xorl
cld
call
test
add
nop
clc
repz
push
or
pop
push
daa
cmp
lcall
enter
iret
jnp
pop
add
fistpl
into
pop
mov
sbb
push
push
pop
push
nop
bts
sub
mov
or
loopne
fisubl
outsb
sbb
cmp
repnz
imul
popa
xorb
outsb
adc
pop
and
aam
scas
out
mov
xor
aaa
dec
or
mov
les
mov
push
sub
xor
clc
sahf
pop
cwtl
cmp
iret
push
pop
add
lcall
aaa
nop
xchg
mov
mov
call
dec
push
clc
cmp
cld
punpckhdq
repnz
lret
lock
inc
rolb
mov
sbb
insb
hlt
mov
lret
mov
mov
aad
in
xor
xchg
ljmp
cwtl
jns
push
fidivrl
call
mov
out
and
or
push
pop
ljmp
stos
mov
stos
jp
adcl
idiv
aam
inc
xor
or
mov
mov
mov
pop
pop
mov
mov
push
pop
movb
dec
scas
xor
out
mov
and
ljmp
aaa
fsubr
jecxz
ror
mov
mov
mov
pop
fmull
ficomps
dec
cwtl
dec
mov
cmp
adc
out
sub
enter
popf
cwtl
push
mov
js
xchg
int3
push
fsubrs
mov
es
aam
jmp
cmpsb
cwtl
popf
fisubrs
adc
jmp
push
fcmovbe
push
and
push
xchg
xor
mov
fdiv
aam
pop
pop
sahf
push
add
mov
dec
test
ds
pop
scas
out
out
mov
sahf
popa
fldl
pushf
lock
call
ret
push
mov
xchg
mulb
fimuls
pop
out
dec
stos
dec
dec
shll
or
out
ret
in
pop
les
pusha
xchg
or
xchg
add
jp
out
mov
mov
mov
shlb
shr
js
insl
mov
mov
xor
mov
lcall
xchg
push
push
outsl
jnp
test
cmp
pushf
sar
or
pop
mov
lret
adc
mov
push
jno
lret
xchg
and
xchg
fdivl
sub
push
inc
sysret
mov
mov
lcall
mov
mov
lds
mov
rcl
fcoms
mov
hlt
imul
mov
pop
push
sbb
inc
ficompl
xor
xor
and
pop
sbb
mov
into
sahf
lret
pop
add
lods
test
mov
call
push
jns
pop
data16
push
add
aad
inc
push
sahf
aaa
fnstsw
jge
fidivrs
or
pop
jg
lock
push
negb
mov
sahf
pop
ret
jle
jmp
mov
mov
dec
pop
fidivrl
xchg
mov
add
test
clc
xchg
lahf
sti
mov
hlt
stos
push
inc
or
fiadds
pop
add
lret
js
mov
imul
or
aam
add
stc
mov
movb
xor
enter
test
pop
mov
test
mov
clc
push
daa
xor
add
aam
sbb
jg
cmp
lret
cld
jecxz
mov
testb
scas
ja
mov
clc
loope
jae
xchg
mov
xchg
rol
cwtl
pop
mov
int
pop
pop
and
mov
pop
add
lock
xor
sarb
mov
or
mov
pop
adc
popa
jecxz
dec
imulb
scas
cmp
bnd
sbb
sahf
sub
das
rolb
mov
mov
mov
shlb
hlt
xchg
or
shll
fsub
cmp
shufps
jnp
repnz
xchg
aas
in
mov
repnz
fwait
push
xchg
stos
into
sbb
cld
mov
clc
pop
push
stos
xchg
cld
mov
stos
pop
jnp
mov
pop
xchg
mov
lds
rcrb
xchg
cmp
pop
stos
scas
or
mov
pusha
and
sbb
clc
mov
movsl
repnz
sbb
adc
or
std
push
int
out
push
pop
inc
push
cmpsl
xchg
or
jmp
fmulp
nop
cmpsb
lcall
ds
scas
shll
or
and
gs
fdivl
mov
push
fsubs
addr16
mov
mov
jb
xchg
mov
stc
shlb
push
mov
hlt
xchg
clc
out
cwtl
push
test
fiadds
mulb
ljmp
inc
hlt
mov
adc
mov
ret
mov
mov
pushf
lcall
cmp
test
dec
mov
and
mov
push
xchg
sub
mov
or
mov
mov
mov
int3
lret
lcall
sbb
pop
push
ret
aas
dec
rclb
js
stos
pop
mov
mov
clc
iret
bnd
xor
sahf
stos
pop
cmp
mov
xor
mov
mov
cmp
shl
lcall
pop
lret
scas
jecxz
sbb
ret
sbb
xchg
push
mov
cwtl
fisubs
rolb
pop
mov
mov
stos
or
xchg
mov
or
lock
repz
or
pop
pushf
jns
cltd
or
push
test
movb
into
stos
fistpl
sbb
sbb
decb
les
mov
mov
in
stos
rolb
pop
xchg
test
loop
inc
stos
or
subb
sub
js
aas
push
pop
fwait
push
sub
call
inc
orb
rcr
jns
notb
cwtl
pop
add
int3
mov
push
dec
cmp
mov
ret
cmpsl
mov
xchg
dec
and
cmc
out
jbe
jb
mov
add
stos
push
jg
lret
stos
lcall
inc
ret
fcmovnu
cli
lcall
inc
jp
loop
cmpb
and
add
inc
xorb
shl
add
ficompl
in
jmp
fwait
xchg
push
adc
mov
les
out
add
add
push
xor
in
clc
fldt
cwtl
adc
lock
jecxz
xchg
in
into
sahf
xchg
pusha
xor
xor
xor
fsubrl
enter
pop
push
stos
arpl
cmp
mov
rcr
adc
sbb
mov
push
fsubr
xchg
aas
lret
mov
mov
xchg
mov
clc
sahf
into
call
or
hlt
add
jb
stos
stos
inc
cld
xchg
and
add
and
mov
inc
mov
mov
mov
xlat
add
push
ret
and
fidivs
lret
xor
cmp
nop
cld
call
add
lea
xchg
scas
lret
lret
cmpsb
jbe
fldcw
add
xchg
test
jmp
jg
shl
or
prefetch
or
lcall
ja
mov
push
je
add
ret
mov
fmulp
fsubrl
fdivs
pop
cmp
call
pusha
nop
aam
lret
in
sub
xchg
push
cld
push
push
call
lcall
ljmp
push
es
push
push
rclb
push
xchg
xor
xchg
mov
jle
enter
cmpsb
mov
fcmovne
lret
fmul
mov
data16
adc
pop
pop
push
clc
mov
out
aam
mov
div
nop
or
ljmp
mov
push
add
inc
mov
out
aaa
movsb
or
sub
sbb
stos
lock
fadds
scas
sti
ljmp
fisubrl
call
xor
inc
ret
stos
add
or
paddsb
lahf
jb
shrb
testb
mov
xor
fsubrl
lret
cwtl
pop
into
test
out
xor
ret
xor
aaa
loop
push
xchg
hlt
push
dec
and
addr16
rcrb
pop
jle
rolb
push
ss
cwtl
push
ljmp
lret
xchg
movsb
aas
lea
lcall
clc
fisttpl
sub
sahf
stos
aam
les
rolb
out
pop
fimull
jo
mulb
arpl
pop
pop
lock
xchg
dec
mov
or
xchg
mov
add
mov
mov
add
xchg
enter
mov
idivb
sahf
xchg
ss
pushf
call
test
call
stos
test
add
out
int3
pop
rcrl
fld
mov
mov
insl
pop
das
enter
pop
add
cmpsl
mov
or
sti
dec
add
fsub
nop
and
mov
xchg
in
dec
add
mov
jge
jg
xchg
cli
xor
jmp
push
or
and
add
jb
cmp
mov
xchg
outsl
xchg
out
rcl
cmp
push
cwtl
and
or
repnz
pop
bswap
push
es
das
inc
mov
pop
mov
hlt
pop
or
xchg
or
enter
stos
call
mov
add
pop
xchg
clc
aad
icebp
push
fadd
mov
and
repz
fidivl
mov
les
mov
mov
fwait
jb
xor
call
repnz
cmp
test
rol
pop
xchg
out
jp
stos
stos
out
cmp
repnz
test
pop
inc
mov
mov
mov
fcomp
mov
mov
dec
movsb
pop
dec
push
lock
addr16
add
bound
aam
or
xchg
pop
into
mov
call
mov
xlat
popa
stos
xchg
sub
sbb
and
imul
cmp
nop
cli
ja
cmp
inc
xor
pop
sbb
into
mov
mov
jl
cmc
jno
cmp
pmaxsw
nop
cmp
push
add
lock
mov
les
sub
popa
jecxz
ds
pop
pop
fiaddl
and
notb
mov
pop
int3
push
std
les
add
ljmp
or
call
fdivr
es
je
jo
add
jbe
or
adc
push
pop
jnp
nop
lret
lcall
inc
jmp
mov
pop
enter
test
pop
adc
scas
lret
or
pop
ds
pop
enter
mov
mov
packssdw
movsl
cmp
push
dec
jo
lock
out
and
fiadds
les
or
pusha
stos
js
int3
lods
mov
test
enter
mov
xchg
jmp
dec
fidivl
test
cmpsl
nop
adc
ds
xchg
aam
inc
push
divl
xchg
xchg
cmp
lock
shlb
cld
insl
pusha
ret
or
mov
sbb
and
popf
lcall
cmp
stos
mov
adc
enter
fwait
add
mov
cmp
test
fistpl
pop
jo
pop
mov
cli
add
iret
jle
ret
and
mov
ret
and
adc
ljmp
lea
inc
xor
mov
nop
call
js
out
lret
insl
pop
add
mov
xor
es
pop
pop
push
dec
mov
and
xor
fidivrs
fimull
cmpsb
idiv
push
clc
pop
mov
push
leave
out
mov
loope
fildl
push
mov
gs
add
xor
ret
inc
int3
rorb
vpminsw
mov
stos
push
add
call
dec
stos
fld
xor
jns
jp
mov
jmp
and
lret
bound
hlt
pushf
mov
pop
rcr
pop
fstl
sbb
mov
and
test
mov
nop
push
das
mov
pop
mov
pop
mov
push
and
push
mov
lret
inc
pop
scas
sbb
ror
xchg
cld
and
les
test
push
jmp
fidivrs
test
int3
mov
cld
inc
add
mov
add
fcompl
fmulp
and
scas
clc
xor
daa
push
call
cld
or
sub
mov
lcall
pop
clc
test
call
ret
rcrb
cmp
into
stos
xchg
dec
insb
or
enter
imul
mov
cmp
pop
cmp
fcmovbe
push
xchg
jge
lret
push
xchg
int3
lahf
fisubrl
stos
dec
or
dec
add
dec
subl
mov
inc
or
sahf
fcmovne
imul
mov
mov
ror
data16
fcompl
push
push
xchg
push
stc
dec
or
ficoml
dec
out
push
cmp
push
rclb
jmp
push
lods
push
ret
ljmp
mov
rorb
mov
mov
adc
or
comiss
lcall
ficompl
lret
ret
mov
adc
mov
mov
sbb
outsl
adc
or
xchg
pop
adc
cmp
rsqrtps
push
cmp
mov
mov
fbld
mov
add
mov
or
imul
pop
mov
mov
testb
or
xor
pop
clc
or
add
pop
fisubs
es
pusha
arpl
sub
fcompl
mov
adc
lock
faddp
in
add
or
adc
pop
cmp
sets
fcoms
test
xor
rcrb
lcall
enter
lret
data16
pop
adc
aam
repnz
aam
jb
or
cmp
imul
test
inc
sub
xchg
push
fisubrl
aaa
cwtl
mov
push
pop
lret
mov
sub
or
xchg
rolw
repnz
lock
les
fs
pop
test
fst
adc
dec
adc
mov
aas
dec
ret
sub
cli
xchg
or
int3
pop
push
or
xor
dec
ret
xlat
outsl
cwtl
ret
mov
cmpsl
mov
ljmp
or
mov
or
inc
sti
fldl
push
daa
mov
push
lahf
loope
aaa
cwtl
jg
cli
push
or
push
out
scas
inc
popa
enter
push
xor
dec
xchg
repnz
sbb
in
dec
mov
push
inc
hlt
cld
out
adc
and
dec
add
pushf
pop
clc
pand
sar
into
stos
adc
push
push
test
and
fdiv
mov
into
test
mov
mov
sahf
xchg
out
inc
scas
mov
add
xor
shlb
sahf
mov
fmulp
stos
push
cmp
xchg
fsub
ret
pushf
imul
sbb
and
adc
mov
or
aas
jl
mov
pop
inc
sbb
mov
sbb
int3
test
test
jmpw
adc
add
imul
lret
adcb
mov
mov
les
add
pop
inc
sbb
cld
adc
in
pushf
push
and
insb
cmp
outsl
loop
dec
and
call
xchg
xor
xor
adc
add
ljmp
stos
xcrypt-cbc
cmpsl
xchg
push
push
dec
mov
add
or
pop
push
push
mov
cmp
loopne
add
cmp
hlt
jp
stos
aam
dec
mov
add
push
cld
adc
jg
fidivl
inc
lret
aad
fmuls
push
mov
loopne
lcall
repnz
call
push
push
mov
push
jge
and
mov
pop
mov
pushf
xchg
jge
ja
add
aam
insl
pop
in
out
cmp
stos
aam
movb
hlt
hlt
loop
movsb
push
shr
and
aaa
and
pop
ljmp
ret
shlb
push
inc
nop
and
sar
lock
push
cld
sbb
and
mov
xor
or
cld
or
cltd
push
add
cmp
cwtl
pop
or
push
decl
dec
cmp
ljmp
fcompl
push
push
push
adc
pop
pop
popf
subb
push
les
add
ret
scas
mov
nop
enter
push
push
js
out
xor
aaa
int3
lcall
ficompl
add
xor
call
repnz
xchg
aas
xor
fwait
inc
and
mov
add
or
shl
clc
push
lret
int3
clc
mov
sbb
sbb
lret
scas
jnp
test
clc
sti
pop
push
lret
insl
jo
push
lds
pop
enter
stos
mov
in
add
psrlw
or
mov
sbb
inc
aam
dec
or
clc
cmp
rclb
cli
xchg
cli
es
pop
fwait
data16
aaa
adcb
int
and
shlb
insl
cmp
push
sahf
jbe
enter
xchg
inc
pop
clc
aam
or
std
orl
add
scas
int
jle
inc
mov
loop
testb
lcall
pusha
sbbb
repnz
clc
cmp
pop
call
cwtl
dec
fidivrs
add
loopne
cmp
les
out
jge
sti
mov
push
lret
sub
lret
in
mov
or
ljmp
ja
and
ja
cmp
sub
bound
scas
adc
push
out
mov
scas
mov
add
gs
push
mov
dec
xlat
nop
ljmp
repnz
mov
mov
ficoms
lcall
push
pop
enter
psubw
jp
sahf
jmp
lret
into
xor
aaa
pop
gs
mov
mov
dec
pop
ljmp
loope
mov
mov
rclb
or
jecxz
jb
dec
fcomps
mov
clc
jnp
push
lret
hlt
mov
pop
mov
loop
lcall
jb
hlt
rcr
add
nop
fsubrp
inc
shl
cli
lret
push
cld
sbb
jg
dec
sbb
add
cmp
test
pop
and
aaa
xchg
cwtl
repnz
cli
push
nop
add
popa
add
cli
add
div
sbb
jp
sub
fsubl
push
aaa
fadd
nop
push
stos
push
inc
mov
cmpxchg8b
test
ror
xchg
or
xor
xchg
xor
stc
enter
ret
push
xchg
clc
sahf
and
repz
inc
jb
inc
dec
mov
inc
not
mov
cwtl
dec
fs
jo
xchg
push
sti
adc
fbld
jae
fwait
dec
mov
mov
mov
pop
mov
add
xchg
sahf
add
xor
lcall
xchg
stos
out
int3
push
test
xor
or
hlt
xor
mov
cmp
or
pop
add
enter
ljmp
mov
adc
aas
movsb
rcl
sbb
xlat
lcall
fldcw
xchg
xchg
adc
xchg
cmp
fwait
not
rcl
jp
push
sbbb
sahf
jmp
push
inc
or
inc
arpl
aas
adc
mov
sbb
test
enter
mov
lods
jb
je
xchg
int3
cmp
push
mov
or
xor
xor
inc
fcoms
and
dec
mov
xor
pushf
mov
stos
hlt
mov
ficompl
test
mov
inc
xorl
clc
into
xchg
mov
in
xchg
push
xor
sbb
push
dec
movsl
xchg
cld
popf
scas
add
add
fcompl
inc
cmp
insb
aas
sbb
mov
add
sub
and
ret
mov
cmpsl
sar
fstp
mov
outsb
dec
popf
push
mov
into
rorb
jb
clc
repz
jb
cs
rcrb
cmp
push
enter
movsb
mov
xchg
data16
xor
jb
lret
inc
xchg
push
lcall
decb
scas
aad
mov
scas
loop
out
rcll
pop
xchg
inc
ret
jne
mov
fldl
cmp
test
fdivl
inc
rcrl
test
movsb
dec
or
sub
and
push
push
add
mov
or
fidivrl
fcomps
jg
or
clc
imul
repnz
faddl
mov
or
stc
in
mov
scas
sub
dec
pushf
stos
fidivs
mov
mov
lea
inc
lret
notb
add
cmp
push
inc
dec
fadds
xor
mov
into
cmp
push
fisttps
jbe
jb
jb
inc
hlt
add
push
jp
into
jnp
mov
rcr
mov
jo
cmpsb
push
mov
push
push
scas
int3
or
mov
dec
ret
sub
mov
mov
cld
xchg
insl
stos
mov
sbb
or
push
cmp
mov
mov
dec
cld
push
or
scas
cmp
fcoms
in
pop
and
cmp
lret
sbb
les
cmp
pop
push
movsl
xor
inc
je
stos
or
xchg
or
test
mov
push
fadds
or
in
push
or
aaa
movl
ja
imul
adc
aas
lret
aam
clc
mov
or
pop
or
add
lret
in
pslld
arpl
sahf
or
loope
imulb
pop
fsubrs
mov
cmp
add
mov
outsb
lret
jge
in
sti
jbe
stos
shll
push
xlat
xor
xchg
cmp
mov
xor
fsubrs
mov
mov
add
sub
fdivp
adc
sysenter
stos
testb
mov
mov
jbe
test
out
test
lret
mov
sbb
leave
pop
push
mov
mov
shlb
loop
mov
mov
cld
mov
xchg
inc
xchg
push
pop
in
lret
jbe
pusha
xchg
sub
and
cli
sbb
imul
pop
out
adc
iret
sbb
gs
in
cmp
or
add
xchg
ret
fs
jmp
out
ret
lret
fiadds
xchg
dec
xchg
inc
and
add
cmp
add
repnz
push
or
and
adc
sbb
or
cltd
sub
fimuls
divb
push
mov
sbbb
mov
into
mov
pop
cmp
push
lcall
mov
lods
inc
add
pop
ret
adc
test
pop
decb
adcb
fcompl
arpl
or
test
xchg
ds
cld
cli
cmp
push
cmp
test
cld
jg
and
push
xor
call
push
push
mov
ret
add
aaa
inc
mov
movl
jecxz
pop
or
add
hlt
push
cmp
or
rcll
jg
sti
scas
mov
dec
sub
cwtl
cmp
imul
mov
push
ret
inc
fdivrl
jnp
clc
sahf
and
adc
stos
push
xchg
ret
mov
jbe
mov
call
shlb
jge
shll
xor
or
xor
add
mov
sub
push
aad
and
xchg
aam
insb
cwtl
bnd
pop
cmovo
push
cld
add
sahf
add
enter
mov
push
xor
mov
push
xor
xor
push
flds
sar
jbe
popf
or
jmp
cmc
pop
int3
mov
into
fadd
call
xor
dec
xchg
mov
psadbw
cmc
out
mov
ds
mov
out
fs
jb
pushf
cwtl
movd
lods
push
cld
pop
push
fcomp
dec
or
sub
adc
and
and
lret
mov
dec
scas
int3
dec
fsubrl
lcall
mov
mov
cmp
xchg
pop
dec
les
pushf
xor
ror
int3
mov
add
aam
out
cmp
call
hlt
xchg
xlat
test
movb
rcrb
add
aam
inc
or
mov
fmul
popa
ljmp
xchg
or
clc
dec
sahf
mov
stos
jge
mov
enter
lods
sub
test
push
push
nop
sub
adc
cmp
cmp
push
sarb
data16
push
testb
adc
ret
lret
xor
inc
push
push
loop
loopne
xchg
mov
fs
jb
incl
mov
lea
arpl
pop
movlps
mov
and
pop
mov
push
cld
jg
xor
pop
pop
ljmp
or
adcl
aam
push
pop
ja
das
mov
mov
fdiv
sahf
push
pop
lea
adc
lods
fsubrs
sub
pop
add
stos
mov
loope
add
pop
fsubp
xor
mov
push
cld
cwtl
adc
mov
rcr
es
imul
mov
and
mov
into
add
flds
push
mov
xlat
test
clc
pop
shr
into
scas
idivl
fisubrl
lods
jnp
or
mov
push
inc
mov
add
add
dec
cld
rolb
andl
ficoml
xor
in
popa
daa
xor
aam
fmull
out
pop
sbb
fucomi
cwtl
and
imul
mov
or
cli
cmp
lret
test
xchg
sub
push
stc
fwait
bound
pop
loope
mov
clc
or
rcl
mov
test
in
stos
out
cli
orb
ds
hlt
mov
or
rclb
mov
mov
push
mov
sbb
ror
mov
lcall
mov
enter
pxor
mov
adc
mov
add
test
scas
pop
test
mov
cmp
aam
mov
dec
xchg
xor
sahf
push
pop
mov
pushf
or
test
ror
lcall
out
jns
pop
jge
cli
in
push
out
jo
clc
stos
pushf
sbb
call
ret
call
getsec
cli
repz
pop
fdivrp
decb
jbe
inc
hlt
xchg
dec
pop
cmp
mov
lock
push
push
cmp
ret
les
mov
xlat
in
pop
pop
sub
push
ret
scas
xchg
pop
popf
notl
inc
repz
hlt
push
mulps
pop
xchg
les
push
jp
or
xchg
push
mov
xchg
mov
xor
push
mov
fistl
lcall
mov
pop
xchg
nop
test
fidivl
pop
or
lock
mov
pop
stos
adc
nop
out
inc
add
fisttpll
repnz
fmuls
sbb
jg
pushf
repnz
lcall
mov
add
test
pop
push
js
pop
stos
dec
inc
fcomps
cld
out
cld
adc
pushf
aam
lcall
cld
or
dec
jae
aad
stos
mov
adc
lcall
popa
outsb
adc
sbbb
out
les
xor
push
mov
mov
jge
outsb
lea
xchg
mov
nop
fdivrl
push
fsubrp
lret
pinsrw
repnz
mov
jg
mov
hlt
ret
pop
xchg
push
fprem
xor
fucomi
push
or
mov
lock
push
dec
ja
cwtl
mov
fisubrl
lret
and
push
xor
add
cmp
xchg
mov
mov
xchg
or
jbe
push
je
jae
rcl
addr16
fbld
push
popf
mov
hlt
mov
xchg
fiadds
sbb
ds
fimull
mov
lret
pushf
mov
mov
out
mov
xchg
mov
add
xchg
fmuls
test
push
mov
mov
jecxz
dec
ljmp
push
ljmp
mov
and
lds
cmp
add
add
xchg
rorb
inc
mov
lcall
stos
dec
ja
ds
aam
inc
out
hlt
pop
xlat
popa
lret
cmp
fdivr
xchg
pop
mov
sub
mov
aas
ret
aam
mov
push
mov
mov
jo
mov
lock
call
fdivrs
cld
push
test
in
stos
incb
xor
nop
shlb
lock
mov
call
imul
ret
lock
mov
call
cwtl
mov
inc
insl
test
jmp
cs
mov
dec
xchg
xchg
mov
nop
int3
pop
lcall
imul
divb
mov
or
stc
enter
add
shll
nop
mov
out
mov
mov
jbe
add
mov
out
ljmp
or
xchg
xchg
push
sti
xor
pushf
stc
lock
push
sti
test
push
add
stos
or
ret
dec
push
into
add
clc
xchg
lret
fs
pop
hlt
push
add
cmp
mov
cmp
mov
xor
push
mov
scas
pushf
cld
loopne
cld
push
out
sbb
psadbw
mov
or
fcmovb
fmul
or
les
push
mov
fidivrs
test
dec
ret
insb
pop
mov
jp
sub
shll
xchg
push
adc
pop
pushf
test
or
pop
mov
nop
fiadds
jno
cwtl
cmp
mov
mov
lret
out
fsub
into
out
or
or
sbbb
in
out
pop
jg
mov
and
ficoms
lock
aas
outsl
rorb
mov
mov
loopne
mov
fcomps
dec
push
call
out
push
shrb
jbe
cld
push
je
push
xor
mov
andl
call
loop
dec
into
push
dec
movsb
adc
pop
lret
outsb
fsubr
push
sbb
mov
and
cmp
sub
xlat
push
sbb
add
ror
inc
xchg
lock
clc
test
rcrb
sub
ret
push
stos
shl
jnp
push
sbb
cmp
push
xchg
jecxz
fcompl
xchg
jbe
mov
jbe
xor
pop
hlt
or
push
cmp
insb
inc
stc
push
ret
mov
fdivl
push
dec
stos
scas
out
jnp
push
jnp
mov
and
bsf
push
cmp
sahf
ret
movsl
pop
push
lea
lea
test
dec
js
cmp
add
or
mov
mov
mov
mov
es
test
or
dec
into
push
inc
cmp
lock
push
mov
and
out
lret
push
cmp
inc
nop
ficoml
pop
dec
xor
inc
gs
imul
push
lock
test
add
dec
cld
mov
cmpsl
mov
push
push
cmp
add
clc
rcr
into
into
test
dec
lcall
testl
push
xor
mov
pop
mov
adc
insb
out
sub
data16
popa
ljmp
jmp
scas
and
push
mov
or
repnz
outsb
shr
outsl
pop
jecxz
out
mov
enter
clc
pop
or
mov
call
jmp
mov
ljmp
es
into
std
sahf
mov
mov
stos
imul
sahf
or
ret
faddl
pop
mov
dec
and
fdivrs
mov
test
push
sahf
test
cwtl
iret
sub
int3
sub
or
mov
ljmp
sahf
jecxz
movsb
push
adc
sbb
mov
ret
add
mov
inc
int3
lods
xchg
cmp
into
mov
outsb
aam
jmp
ret
fistpl
aas
popf
loopne
cmpsb
rorl
xlat
inc
dec
lcall
push
dec
pop
mov
jge
xchg
call
ret
push
arpl
ljmp
fiadds
or
dec
cmp
xor
mov
test
cwtl
test
and
push
lock
jae
leave
push
mov
xor
push
xor
xchg
xor
aaa
movsb
lds
out
pop
mov
and
add
ret
adc
into
test
jnp
pop
lcall
lret
stos
xchg
mov
call
out
adc
pop
pop
repnz
adc
fistl
inc
insb
jae
push
adc
insl
xor
mov
leave
xchg
je
loope
sti
cltd
lock
daa
pop
not
mov
pop
fmul
jecxz
mov
cmp
fdivl
hlt
nop
pop
xchg
mov
or
or
mov
or
xor
stc
mov
add
add
pop
les
sbb
sbb
add
enter
clc
cmp
push
push
mov
mov
ljmp
divb
rcl
fdivs
stc
call
xchg
pop
xchg
jp
push
adc
or
xor
cs
rorl
sbb
testb
ss
mov
fstps
ret
dec
pop
xlat
jle
call
xchg
mov
insb
or
add
sbb
in
mov
lret
scas
dec
imul
pop
pcmpgtw
nop
jae
incb
mov
pop
adc
jbe
lcall
push
pop
dec
fiadds
push
xor
cmp
push
rcrb
test
xchg
ret
nop
inc
push
aas
xchg
ljmp
dec
cld
pop
and
jp
jnp
add
ret
jb
test
fwait
loop
jnp
not
pop
in
lcall
nop
inc
push
push
and
jo
mov
cwtl
repnz
dec
ljmp
xchg
fidivl
ror
xor
cmp
push
clc
cli
insl
hlt
mov
rcr
int3
lock
clc
lret
out
or
lock
hlt
pop
stos
lcall
mov
ret
call
lret
jbe
ret
push
dec
imulb
lock
shlb
mov
cmp
cmp
xchg
ret
jo
test
enter
js
insb
xor
sbb
add
cli
rcrl
jb
cmpb
push
dec
xchg
ret
out
shlb
inc
add
repnz
add
pop
std
js
mov
movsb
test
popa
mov
fs
cld
enter
push
mov
mov
adc
fs
dec
push
push
dec
cmpsb
cmp
push
pop
pop
lcall
bound
mov
nop
jp
cli
into
xchg
adc
mov
pop
jmp
jp
push
cs
fdivrl
sbb
jl
sahf
or
mov
xor
aam
mov
push
clc
lret
lock
pushf
insb
adc
pushf
adc
enter
daa
push
push
pop
mov
addr16
jmp
insb
rdmsr
xchg
pop
lcall
dec
stc
dec
xor
enter
push
ja
sbb
push
xchg
mov
mov
dec
enter
fsts
jp
fsubrs
add
or
jp
ljmp
sbb
push
mov
and
lret
out
jbe
adc
mov
insb
push
lcall
pop
mov
mov
aad
stos
repnz
add
and
in
pop
inc
pop
or
pop
cmpsb
jb
call
mov
insb
js
xchg
fcmovnu
sbb
lret
cld
pop
pop
or
out
mov
aam
js
mov
mov
les
mov
jb
sub
nop
cmp
faddl
ret
cmp
or
push
mov
push
pop
mov
std
jmp
mov
out
adc
scas
mov
pop
pop
fisubrl
push
test
xchg
mov
dec
scas
arpl
fsubl
fisubs
mov
fcmove
mov
or
push
enter
and
int3
lds
movsb
inc
lock
test
adc
pop
ds
pushf
rcrb
mov
cmc
stc
push
addps
fwait
int3
cwtl
in
sti
nop
xchg
mov
imul
lcall
shrb
mov
ret
fsubr
or
stos
xor
aaa
scas
lret
nop
xor
pop
enter
mov
inc
cmp
les
inc
or
push
xchg
push
xchg
sub
out
imul
repnz
xor
or
jmp
push
rcr
adc
dec
inc
ljmp
mov
cld
add
jb
push
inc
lock
jp
mov
dec
hlt
xchg
push
mov
out
movlps
pop
sub
test
jbe
mov
subb
adcl
and
or
push
popf
mov
sarb
or
push
test
mov
rcl
mov
mov
push
repnz
fimuls
lcall
push
sub
out
je
add
jp
repnz
aad
addb
dec
cmpsb
mov
mov
clc
fdivrp
add
lret
push
inc
ret
adc
adc
inc
and
xor
push
adc
arpl
cld
mov
mov
jp
adc
push
shlb
es
or
ficompl
ret
or
dec
aam
xchg
idivb
pop
cwtl
clc
push
lret
out
mov
jg
stos
repnz
jb
xor
test
addr16
push
sbb
jmp
or
outsl
ret
je
out
dec
add
loope
mov
xchg
hlt
dec
call
mov
push
ja
dec
testb
leave
stos
lcall
or
push
pushf
xchg
mov
fildll
test
scas
les
test
std
push
imul
fstpt
fidivrl
data16
mov
xchg
pop
and
cmc
mov
push
imul
xchg
push
add
add
test
fdivrl
or
or
mov
add
loopne
and
fcompl
push
push
mov
lcall
push
fisubs
mov
fsubrs
pop
test
pop
mov
pop
imul
mov
aam
in
aaa
or
pop
test
mov
negb
jbe
or
xchg
pop
aas
fimuls
pop
sti
inc
sahf
nop
clc
hlt
ss
xchg
js
clc
xor
add
ror
xchg
fdivs
jno
jbe
lcall
sti
lock
xlat
aam
jmp
fwait
jge
mov
xor
aas
and
mov
pop
lock
scas
into
inc
ljmp
in
loope
mov
scas
push
pop
pop
ljmp
lcall
ljmp
xchg
pop
fwait
xchg
into
mov
lock
and
xor
shl
test
aam
xchg
push
nop
ds
push
cli
pop
sahf
fcoms
in
lods
xor
adc
aas
push
test
into
call
into
lock
xchg
mov
aam
and
add
push
sti
sarl
add
sarb
ljmp
shrl
lret
jne
cmp
pop
add
ficompl
pushf
cmp
stos
push
into
scas
cld
pop
mov
loope
orb
or
popf
mov
pop
ret
jbe
lock
push
les
fldt
hlt
or
scas
hlt
sbb
ret
mov
rcrb
aas
arpl
mov
sub
ret
pop
repnz
repz
ja
fsubr
shlb
or
scas
mov
lcall
dec
in
int3
loope
pop
mov
cmc
outsl
fsub
sti
adc
clc
jnp
xchg
mov
xchg
repnz
decl
mov
repz
call
in
in
adc
lret
ret
sbb
add
dec
mov
xchg
into
xor
and
movsl
mov
adc
or
shlb
rclb
hlt
pop
mov
shr
pop
bound
pop
jne
xor
push
jb
sahf
mov
or
ficoml
lock
stos
mov
push
and
aas
ret
cld
mov
clc
or
jp
js
std
arpl
rol
mov
test
inc
jbe
sub
clc
scas
add
and
mov
jne
repnz
mov
mov
lret
sahf
mov
adc
outsl
dec
sbb
cmp
xchg
rorb
xor
pop
into
push
dec
jge
cmp
nop
mov
mov
sub
sahf
or
lock
or
out
push
call
pushf
add
fadds
add
fmul
mov
xchg
pop
mov
pop
mov
decb
jo,pn
cli
cli
push
fsubl
pop
sbb
pop
idiv
pop
add
mov
xchg
cwtl
outsb
and
dec
dec
dec
jo
xchg
jg
shlb
or
adc
jbe
sbb
inc
add
jnp
int3
mov
jl
shr
ret
inc
enter
xor
mov
mov
out
adc
int3
pop
cld
in
int
fldt
mov
inc
mov
xor
orb
add
pushf
cmp
mov
pop
mov
call
pop
pop
fs
es
mov
clc
xchg
xchg
stc
cltd
les
or
pop
js
js
or
into
mov
lret
call
ljmp
fcomps
aam
xchg
fimuls
cwtl
pushf
clc
mov
xchg
pop
push
hlt
cld
imul
mov
call
sub
fld
jae
mov
or
ret
enter
adc
loop
clc
push
push
divb
add
ret
xchg
add
add
clc
cmp
pop
sbb
setb
pop
mov
mov
stos
jp
addl
inc
push
xchg
mov
cwtl
sahf
enter
inc
adc
push
scas
dec
jmp
xor
pop
pushf
pop
hlt
call
jae
inc
mov
mov
sahf
out
inc
dec
pushf
push
aas
flds
aas
xor
xchg
ficoml
or
inc
data16
lcall
aam
adc
or
pop
add
stos
nop
mov
into
fs
aad
fs
call
ja
mov
insb
mov
or
pop
clc
arpl
push
je
idivb
or
imul
loop
push
cmp
add
jns
sti
pop
negb
sub
mov
ds
xchg
pushf
push
jno
aaa
hlt
fcomps
mov
or
stos
add
call
push
pushf
aas
clc
decb
nop
dec
lcall
lock
lret
push
mov
ds
fimuls
stos
jmp
pop
out
add
mov
mov
mov
fldcw
unpcklps
test
stc
jbe
adc
mul
aad
jmp
xor
push
mov
push
dec
rcr
out
test
dec
push
imul
ljmp
add
mov
jnp
pop
stos
pushf
pop
test
loop
mov
pop
push
ror
sbb
shlb
insb
out
lds
pop
into
test
std
mov
les
enter
fsts
sub
pop
or
or
fmul
stos
push
xor
addr16
lock
int
clc
dec
xor
loope
jbe
fnstenv
inc
iret
testb
fsubs
sti
shrb
out
push
fisubrs
mov
mov
sub
popa
fisubl
pop
mov
add
dec
mov
cmpsb
bound
in
cli
lds
stc
or
pop
shlb
push
or
pop
test
inc
cld
movsb
pop
push
test
fisttpll
pop
clc
sbb
sbb
lock
jns
in
push
inc
adc
xchg
lahf
fsub
mov
push
call
fists
dec
sahf
mov
add
ds
push
adc
out
mov
data16
push
loope
lret
rcrl
int3
add
cmp
sarb
jecxz
lcall
push
or
rolb
negb
push
outsl
les
push
ljmp
push
cld
fdivrs
mov
ffreep
imul
mov
mov
mov
mov
nop
imul
lds
insb
mov
test
xor
xor
mov
arpl
pop
push
rolb
cwtl
push
mov
inc
js
xchg
xchg
pop
xor
divb
xchg
or
faddl
add
add
aad
sahf
ficoms
xchg
int3
stos
dec
leave
cld
xchg
push
call
mov
fisubs
dec
pop
lret
fcoml
xchg
mov
xchg
or
pushf
movsl
cmp
test
pop
mov
and
cmp
sahf
int3
cwtl
or
sbb
sbb
lcall
movsb
mov
jno
xlat
mov
fidivrs
rcr
or
xchg
std
xchg
adc
test
dec
sarb
popf
sti
movsb
cli
inc
push
or
mov
mov
fisubs
add
sub
psadbw
or
stos
add
call
add
aad
stc
pop
scas
cli
push
xchg
fdivl
xorb
lret
cwtl
ficoms
push
mov
mov
jmp
adc
mov
fdivrp
data16
lock
push
cwtl
xchg
inc
jp
stos
call
mov
mov
lahf
or
mov
jp
fmul
and
pand
out
sbb
sbb
ret
mov
and
ret
or
add
lret
bound
out
daa
xor
sar
seto
in
js
mov
xchg
mov
fstpt
ljmp
test
cmp
test
add
aaa
nop
mov
mov
and
xor
int3
pop
aad
mov
movsb
mul
jp
pop
inc
inc
push
push
lock
aas
xchg
push
mov
fxch
mov
aas
mov
enter
sbb
and
aas
aas
arpl
enter
mov
mov
pop
xchg
jnp
clc
mov
setbe
ret
mov
call
fstps
mov
pminub
fistpl
jb
mov
xor
ret
lock
pop
push
inc
mov
xor
and
hlt
pop
pushf
cmp
lcall
mov
pop
and
in
popa
scas
jmp
fdivrl
cmp
xchg
mov
mov
rolb
inc
lock
pop
or
sbb
mov
aam
pop
ficompl
pop
data16
xchg
add
mov
insb
and
imul
nop
push
cmp
lods
adc
pushf
mov
out
sub
push
stos
push
sbb
repnz
cmp
push
out
clc
push
pop
fsubrs
arpl
rolb
fiadds
inc
jnp
test
xor
pop
call
xchg
xor
fcmovb
lret
xor
scas
xchg
mov
enter
cmp
ffree
rolb
sbb
lret
and
les
fisubrs
leave
push
push
fistpl
or
adc
fs
or
sbb
add
jge
mov
cld
pop
mov
fcompl
or
mov
mov
pop
mov
push
dec
cmp
out
les
xchg
xor
mov
pop
dec
sub
sbb
lret
rcl
aam
sbb
sub
jnp
test
sbb
adc
fimuls
sahf
rcrl
add
call
test
xchg
shlb
mov
mov
nop
test
out
cmp
fldcw
pop
lcall
or
out
push
dec
lahf
dec
scas
mov
adcb
push
xor
test
mov
and
push
push
adc
lahf
jbe
add
xchg
mov
popf
dec
cmp
pop
or
test
xor
and
or
pop
xchg
cld
or
mov
cmpsb
cwtl
mov
mov
in
sbb
out
daa
add
inc
fcomps
in
adc
mov
mov
pop
mov
leave
or
hlt
pop
pushf
pushl
jb
lcall
mov
sub
sahf
mov
clc
pop
and
pop
icebp
ds
and
mov
rcr
mov
mov
fdivp
mov
add
test
lret
ljmp
adc
dec
cs
jns
dec
inc
dec
cmc
outsb
or
out
rcl
rclb
pop
lret
cmpsb
cld
imul
sbb
jo
mov
jmp
mov
je
lret
xor
jnp
les
rorb
push
fistpll
daa
bswap
inc
pop
jge
fsubr
sti
cwtl
or
xchg
test
add
push
xor
shlb
dec
push
mov
mov
xchg
adc
sbb
das
xlat
xor
add
push
clc
and
pop
xor
je
negb
loop
push
sbb
push
mov
cltd
or
push
psubsw
stos
imul
cmp
mov
mov
xor
mov
pop
mov
jbe
jbe
arpl
push
or
aad
enter
fadd
fstp
or
cwtl
jg
loope
mov
mov
inc
test
inc
sbb
dec
add
lock
jmp
push
xor
outsl
aas
lret
out
cli
in
aam
add
xor
mov
leave
fcmovu
add
sahf
call
aam
mov
mov
gs
mov
add
mov
cld
push
scas
fiaddl
lret
adc
mov
jbe
adc
mov
xor
fsubrs
rcrb
leave
gs
lock
jle
pusha
clc
enter
push
or
add
pop
pop
push
shrb
cli
aam
sub
push
xchg
ror
lret
cmp
push
xchg
bound
sub
pop
push
in
mov
out
scas
aas
fidivs
inc
xor
nop
mov
push
dec
push
hlt
xor
mov
push
xchg
aam
add
out
push
jp
enter
adc
scas
push
push
mov
ds
fsubrs
in
cld
push
or
stos
les
cmp
es
pusha
ret
cld
push
roll
add
add
xchg
sub
aas
cmp
cli
lock
bound
xor
es
jecxz
push
add
push
rcrb
mov
xchg
clc
xor
shlb
xchg
xor
add
testb
mov
jbe
mov
mov
sub
add
and
jae
jge
xchg
call
fcompl
push
push
mov
int3
add
nop
jae
test
mov
mov
ficompl
or
push
cwtl
cmp
add
cwtl
hlt
aam
popa
dec
add
pop
pop
fbstp
clc
xchg
mov
hlt
pop
inc
pop
or
and
lock
sahf
int3
pop
xlat
aam
ret
nop
or
mov
xor
cld
int3
mov
daa
pop
adc
push
xchg
and
lcall
push
clc
out
stos
and
or
sbb
sbb
test
push
clc
xchg
jp
call
pop
test
pop
out
ljmp
ss
mov
bound
sub
lret
lcall
rcr
or
dec
dec
xor
pop
cmp
mov
pop
sub
es
stos
jbe
jo
jo
ja
int
push
sub
enter
je
add
sbb
inc
xchg
add
pop
leave
cwtl
or
adc
mov
jae
mov
stos
jne
push
mov
lret
push
hlt
pop
test
out
loope
ljmpw
xchg
cmpl
fimull
or
jb
push
test
dec
xchg
add
or
mov
clc
mov
dec
add
dec
cltd
cwtl
mov
mov
stos
add
xor
add
cli
mov
add
cmp
or
es
pop
dec
push
dec
call
xor
xchg
ljmp
outsb
mov
jmp
enter
fs
ret
data16
into
adc
lock
test
push
push
jg
mov
out
cmp
pminsw
test
jg
cmp
sarb
mov
cmp
aam
sar
adc
fsubr
outsb
lcall
mov
insl
pop
cmp
fisubrs
pop
inc
fdivr
pop
ds
ret
add
scas
jb
les
into
mov
pop
push
stos
add
fcomps
loop
js
cmp
mov
fdiv
fadds
xor
cmp
pop
stc
into
add
pop
es
stos
adc
inc
mov
imul
inc
mov
test
mov
scas
xchg
mov
lcall
sbbb
insl
add
and
mov
daa
jbe
clc
movb
pop
out
lea
and
jae
xor
movsb
cmp
fmull
push
nop
or
imul
arpl
je
jmp
cmp
fldenv
sbb
mov
ret
pop
mov
and
push
mov
xor
pop
xor
xor
rclb
or
push
push
cmc
in
fldcw
shrl
scas
outsl
sub
xor
aam
stos
ljmp
push
or
ds
paddb
fcmovnb
movsb
ljmp
pop
stos
imul
sahf
test
add
adc
adc
nop
mov
sub
test
nop
push
xchg
out
xor
xchg
mov
add
xlat
mov
xchg
add
clc
lcall
mov
mov
stos
push
out
testb
cwtl
ror
mov
xor
clc
sbb
mov
pop
add
cmp
fildl
sahf
les
pop
jge
xchg
fnstsw
scas
pop
mov
aam
sbb
ret
jnp
pcmpgtd
test
push
test
xor
xor
and
mov
lock
stos
adc
push
rcr
clc
lock
dec
pop
hlt
dec
mov
movsl
sub
ss
call
lret
int3
dec
lcall
xor
cmp
sub
xor
fcoms
cmp
xchg
pop
sahf
add
mov
hlt
hlt
mov
mov
fidivl
test
jmp
and
mov
push
push
in
adc
fmuls
and
mov
sti
add
inc
fdiv
pop
sub
mov
sub
in
cli
outsl
enter
pop
jbe
dec
repnz
inc
mov
cmp
push
pop
incb
out
inc
int3
xchg
xor
or
cmp
stos
add
fimuls
jb
test
inc
fiaddl
mov
fidivrs
loopne
push
sbb
testl
push
or
or
arpl
mov
ret
pop
push
xchg
xchg
sub
jecxz
pop
sbb
push
int3
jnp
push
mov
xchg
call
ljmp
push
inc
mov
lahf
out
xchg
fiadds
clc
jne
push
sbb
js
add
imul
fmul
int
xchg
inc
xor
jp
lcall
sbb
clc
pop
notb
pop
test
lcall
orl
fcomip
sbb
mov
into
sub
pushf
push
dec
mov
mov
jmp
stos
pop
inc
cwtl
push
stc
ss
adc
bound
pop
rcrl
aad
faddp
int3
push
jmp
loop
pop
fdiv
enter
push
nop
mov
ret
pop
xchg
xor
rcr
sar
scas
out
std
lods
arpl
aam
shlb
adc
fadds
daa
out
outsb
mov
xchg
lcall
inc
cwtl
mov
pop
ljmp
ds
pop
pop
lcall
fsub
pushf
jbe
es
adc
adc
mov
stos
fiaddl
cwtl
ficomps
lcall
clc
pop
push
fcmovnu
nop
ret
and
lcall
push
push
pop
pop
push
cmp
into
lock
aad
inc
mov
mov
out
push
pop
int3
xchg
fidivs
mov
pop
stos
in
into
shr
sbb
lods
ret
fldt
popf
addl
cmp
fcom
out
into
test
scas
mov
ds
shl
std
lds
push
mov
jecxz
sahf
ret
loop
mov
outsb
push
ret
repz
subl
roll
cmp
push
in
fbstp
pop
and
push
cli
jle
mov
mov
push
movsl
nop
stos
xchg
jnp
aam
pop
dec
pop
cmp
clc
mov
popf
mov
mov
mov
mov
pop
xor
test
cmpsb
add
ret
jo
rcrb
out
jg
decb
jmp
sub
sbb
xchg
push
xchg
hlt
pop
adc
and
add
pushf
les
xchg
mov
push
xor
cld
pop
fcoms
push
mov
addr16
ljmp
clc
add
or
and
xor
in
push
fstpt
jmp
pop
in
negl
push
jnp
int3
call
cmpsl
push
subw
out
xchg
fwait
add
push
mov
out
xchg
cmp
test
pop
nop
cmpsb
fdivs
cld
cmp
mov
clc
xchg
in
push
test
sar
or
dec
dec
cmp
pushf
fmul
fcoms
inc
lahf
mov
ljmp
pop
mov
insb
je
jno
xor
dec
stc
rorb
dec
inc
xor
push
xor
scas
push
or
xor
xor
test
or
mov
out
mov
cmp
mov
fiaddl
jg
fildl
lcall
jge
or
rcrb
ds
mov
sbb
repz
fwait
xchg
or
fmull
mov
add
lret
cmp
xchg
nop
out
movsl
lock
popf
stos
dec
into
js
aam
hlt
addr16
faddl
add
clc
ja
sti
pop
pushf
clc
and
rol
or
cmp
mov
enter
fimuls
pushf
dec
bound
daa
mov
cwtl
hlt
sbb
mov
es
sahf
lret
aam
mov
rcrl
lcall
push
or
sti
add
into
sbb
lret
lock
mov
mov
repnz
xchg
dec
cmp
cmp
add
loopne
enter
adc
sub
pop
push
sbb
les
scas
rcrb
out
jns
mov
sbb
mov
mov
mov
hlt
cmp
lods
push
push
xchg
dec
out
repnz
push
dec
ret
dec
mov
lfs
jp
rcrl
cli
mov
cltd
pop
mov
lcall
and
xor
xor
sub
inc
push
mov
pop
or
nop
push
mov
mov
add
cmp
sahf
pop
iret
sarb
daa
into
or
dec
sbb
stos
push
imul
mov
mov
adc
mov
ficompl
aas
mov
mov
daa
inc
mov
std
dec
pop
rorb
aas
ret
mov
fisubrl
pushf
adcb
outsb
cmc
aaa
repnz
testb
pop
test
xor
sahf
pushf
fcmovnbe
push
push
cli
mov
scas
rclb
mov
mov
inc
xor
add
xor
stos
sarb
fnsave
sbb
ret
dec
push
pop
arpl
mov
out
jno
or
repz
call
and
imul
push
push
cmpsl
cmp
std
adc
jb
add
pop
and
fdivl
in
stos
and
aas
sti
decb
rcrb
scas
jb
cwtl
aaa
mov
shl
shll
and
mov
ret
or
sahf
cmp
mov
pop
or
push
push
rclb
mov
cmp
out
into
data16
inc
ljmp
fidivs
inc
fmulp
ret
call
add
add
pop
fsubrs
addr16
int3
pop
repnz
loope
adc
les
mov
jecxz
push
imul
inc
lret
adc
int3
out
adc
or
or
lcall
loop
lret
sbb
xor
int3
push
aas
inc
scas
mov
push
jno
lcall
mov
clc
lret
mov
call
inc
repnz
out
pop
adc
hlt
imul
or
fwait
rcrb
test
dec
scas
xchg
xor
fdivs
add
stos
mov
loope
sub
add
mov
adc
std
clc
fcmovu
outsb
pop
push
fcomi
mov
or
pop
sar
rcll
dec
arpl
jle
and
dec
clc
data16
xor
push
jl
stos
dec
mov
scas
mov
lcall
jae
inc
mulb
jb
sbb
or
outsl
xor
cmp
clc
push
sahf
xchg
xchg
ljmp
or
out
je
ret
mov
mov
ja
pop
xor
fwait
adc
outsb
int3
mov
lahf
mov
mov
hlt
psrlw
fiaddl
xchg
mov
cmp
sbb
or
sahf
push
cmpsb
add
dec
xor
add
sub
sbb
mov
negb
inc
aam
or
jnp
fucompp
cli
ficoms
dec
ret
pop
push
call
mov
adc
inc
movsb
add
movd
xchg
and
push
scas
aaa
mov
push
mov
mov
data16
or
jecxz
insl
jbe
test
call
mov
cwtl
aad
pop
or
aas
sar
add
mov
mov
add
scas
pop
mov
cli
cld
ret
push
stos
hlt
xchg
adc
jnp
xchg
push
call
inc
mov
cmp
ljmp
loopne
pushf
and
mov
cli
mov
pop
add
enter
repnz
test
ret
or
fdivr
aam
in
adc
add
insb
mov
cmp
hlt
mov
xchg
test
pop
setl
ljmp
push
jecxz,pn
test
sbb
ds
mov
sbb
js
mov
dec
in
xor
push
rcr
pop
jmp
out
movsl
cmp
enter
jno
add
into
lock
push
lock
mov
adc
jnp
sarb
into
xchg
sub
loope
daa
int
test
jecxz
mov
fs
sub
into
pop
sti
cmp
sub
test
mov
in
dec
cmp
into
jmp
bnd
xor
xchg
enter
aas
inc
jg
push
les
add
not
adc
psadbw
sub
ds
mov
push
mov
add
xchg
xor
pop
cmp
xchg
aam
push
xchg
fdivrl
sti
mov
push
sbb
xchg
or
ljmp
ljmp
mov
cli
into
cmp
rorb
les
aas
stos
jns
xchg
ret
or
push
div
out
or
pop
adc
and
shlb
jae
pushf
ds
mov
test
xor
sahf
mov
test
arpl
mov
ljmp
dec
nop
mov
jb
inc
enter
pop
pop
in
imul
idiv
sbb
clc
cmc
or
loopne
hlt
mov
lret
rclb
ret
shlb
fcomps
call
push
dec
test
mov
loope
mov
out
pop
cwtl
mov
jg
add
pushf
test
jmp
je
fisubrs
fisubs
rolb
mov
xor
stos
pop
jmp
stos
repnz
lret
xchg
mov
mov
sbb
mov
out
in
enter
clc
fistpll
sbb
test
mov
push
out
cs
cli
cli
lea
out
adc
repnz
fisubs
inc
dec
add
mov
jmp
enter
push
and
push
je
cmp
mov
mov
mov
or
lock
scas
fcomps
and
or
xchg
mov
aas
stos
aam
xor
mov
pop
call
xchg
hlt
jmp
lods
pop
push
jns
mov
movsb
dec
inc
dec
mov
mov
push
or
add
xchg
xchg
push
inc
cmp
mov
inc
lret
loop
addr16
cmp
sar
mov
xchg
into
cmc
clc
ljmp
imul
mov
xor
pop
pop
imul
divb
mov
cmc
std
xchg
cmp
push
clc
pop
sub
sbb
mov
dec
jecxz
rclb
shrb
mov
pop
mov
repnz
out
rolb
mov
fwait
add
shrb
stos
sti
sbb
loop
pop
ret
stos
les
xor
inc
insl
and
hlt
mov
push
lret
scas
pop
cmp
pop
enter
push
mov
dec
dec
ds
test
lret
imul
stos
out
lret
push
push
pop
sbb
push
clc
cmp
cld
xchg
fiadds
ret
mov
sbbb
sub
arpl
lcall
ljmp
cmpsb
sbb
in
push
int3
ljmp
lcall
pusha
shl
mov
mov
sub
ss
and
push
sub
inc
mov
mov
fldcw
xchg
jnp
ret
and
dec
or
adc
imul
out
jb
test
xlat
mov
fildll
add
repnz
fldl
ljmp
add
outsl
push
inc
pop
lock
dec
xchg
into
push
shrb
shlb
push
les
mov
ret
mov
xchg
decb
inc
jge
lea
stc
push
xchg
push
dec
add
xor
sahf
fimuls
pop
pop
cmpsb
or
push
fcmovnb
mov
xor
mov
in
nop
sti
inc
hlt
add
ror
push
mov
clc
mov
scas
cwtl
or
jg
jp
sahf
mov
add
outsl
xchg
xor
in
dec
or
or
ss
jecxz
jmp
mov
push
mov
jb,pt
or
mov
int3
cld
cltd
aas
jo
andl
dec
clc
push
dec
xchg
stos
sub
scas
mov
adc
dec
hlt
mov
shll
out
pop
or
mov
lcall
mov
test
fadd
repz
cli
jecxz
push
and
pop
mov
add
lret
scas
shll
pop
dec
imul
test
into
dec
sbb
push
or
xor
les
ljmpw
fsubrs
idiv
push
call
out
cmp
fmul
ret
lret
adc
fsubrs
mov
fiaddl
pop
push
lcall
in
rcrb
pop
add
xchg
inc
cmp
xchg
hlt
mov
shl
sti
push
push
mov
push
fdivrl
imul
xor
lods
inc
lret
dec
test
mov
imul
push
pushf
add
add
inc
pop
push
push
pop
pop
or
fisubrl
push
notb
jp
cwtl
enter
pop
push
add
pop
xchg
nop
push
fldenv
test
inc
or
sbb
leave
ret
inc
dec
lcall
stc
mov
pushf
nop
mov
pop
mov
cli
clc
push
test
jmp
lock
clc
add
std
test
push
xchg
clc
test
add
out
or
pop
jns
into
lods
rcrl
jnp
lcall
test
stos
pop
cmp
mov
mov
fsubrl
sbb
sub
mov
stos
je
nop
stos
cli
fnstsw
aas
mov
xor
sbb
mov
dec
mulb
stc
cli
mov
pop
imul
repnz
pushf
lcall
pop
lret
mov
mov
lock
and
mov
movsl
rcrb
ljmp
or
mov
mov
das
push
test
add
shlb
fsubrl
pushf
or
hlt
lret
lcall
pop
ljmp
add
shlb
pop
dec
or
ret
pop
cs
push
mov
xchg
sahf
fcomps
push
popa
jmp
push
aam
xchg
rcrb
andl
push
addr16
xor
cld
mov
int3
mov
std
push
stos
xchg
lcall
dec
jnp
and
pushf
sahf
sbb
outsl
xor
lret
dec
jns
fcoml
jecxz
stos
ret
jb
xlat
inc
and
mov
or
mov
roll
cwtl
cmpsb
inc
imul
xchg
add
fimull
mov
call
ljmp
dec
divl
leave
xor
out
xor
ds
xchg
hlt
pop
mov
mov
or
xchg
cld
mov
jl
stc
shlb
pop
inc
xchg
scas
fwait
idivb
ret
shr
cmc
mov
call
pop
out
sbb
adc
mov
lock
enter
mov
addr16
pushf
fadds
mov
icebp
in
fcmove
pop
cmpsb
jo
clc
fcmovbe
je
ficompl
ret
xchg
aaa
push
xchg
pop
push
subb
mov
sub
inc
stc
xchg
sti
or
call
add
out
xor
xor
mov
dec
xor
rol
shl
fisubrs
loop
out
jecxz
mov
repnz
aam
into
sbb
add
add
pop
or
lock
push
decb
nop
jle
cs
pop
enter
sbb
mov
nop
add
lcall
fstpt
ret
data16
stos
lahf
inc
xadd
std
xchg
mov
aad
dec
cltd
xor
clc
pop
mov
mov
mov
mov
cld
hlt
add
repnz
mov
cli
jg
stos
mov
or
cmp
add
je
mov
sarb
push
out
bswap
repnz
ret
dec
mov
fcompl
hlt
stc
pop
pop
fstl
push
sub
push
jle
xchg
mov
lahf
mov
add
jg
mov
push
mov
dec
or
aas
fiaddl
scas
mov
outsl
ja
cld
jmp
xor
loop
pop
stos
test
add
idiv
lods
cmp
jle
add
xor
push
nop
hlt
rclb
or
and
pop
aas
test
jnp
clc
jnp
fdivr
fcomps
sbb
inc
jno
dec
mov
dec
push
cmp
jnp
mov
rcl
dec
int3
add
gs
jl
mov
mov
mov
or
and
pop
paddusb
pop
sbb
sub
int3
pushf
xor
pop
clc
jg
add
enter
add
ljmp
add
lret
jo
add
push
pop
dec
mov
cmp
rclb
cvtdq2ps
push
dec
sub
mov
gs
int3
imul
stos
shufps
push
inc
inc
dec
clc
xor
mov
mov
push
sub
in
xor
jecxz
loop
je
push
iret
sbb
and
jns
scas
inc
pop
or
repz
pop
loope
rol
stc
or
call
sub
not
mov
sbb
popf
scas
push
and
stc
imul
push
icebp
mov
pop
shlb
or
movsb
pop
mov
jp
lcall
in
jp
mov
loope
pop
sti
push
out
mov
sti
ficomps
add
test
jo
stos
dec
push
push
add
sarl
sbb
pshufw
scas
push
mov
cli
xor
cs
mov
stos
xor
insl
into
ja
push
mov
mov
movsl
jb
pop
sbb
pop
push
sbb
mov
andb
mov
out
andl
jg
cmc
inc
fadd
mov
inc
adc
adc
add
outsl
cmp
test
or
or
inc
cwtl
scas
or
imull
lcall
loop
jb
scas
add
cld
clc
add
inc
inc
mov
xchg
cli
test
out
sti
mov
jp
out
sub
push
pop
xor
push
sahf
push
rol
pop
add
out
jb
and
pushf
aam
dec
sub
inc
leave
loopne
enter
repnz
add
mov
mov
mov
movsb
jo
rcrl
or
nop
ret
dec
sbb
sbb
int3
lcall
ja
jp
rcrb
ficomps
dec
pop
cwtl
xor
mov
or
hlt
jbe
jbe
es
repnz
jge
push
mov
push
add
pop
lds
cmp
sahf
sub
and
or
add
xchg
dec
inc
rorb
or
fists
fs
loopne
push
inc
test
mov
imul
sti
xor
xchg
xor
aam
or
sub
pusha
pop
push
stos
xor
xchg
push
lcall
pop
cmp
mov
xor
push
adc
cmp
push
sub
mov
push
lcall
sbb
cmp
out
and
shlb
inc
or
xchg
mov
pop
les
add
jmp
ljmp
hlt
dec
and
and
push
cld
mov
dec
xchg
setnp
push
jmp
dec
repz
cmp
cld
rolb
movsl
cltd
aam
arpl
sbb
shll
jp
jecxz
xor
call
push
add
cli
loop
pop
push
fistpl
es
push
jno
stos
in
int3
pop
push
push
sti
lock
sub
ds
adc
jnp
push
push
icebp
push
jle
aam
imul
shl
ss
mov
push
cwtl
xchg
gs
inc
sete
subl
jae
les
mov
movsl
xor
cmp
xchg
cli
decb
mov
rcrb
daa
rolb
cmp
clc
clc
insl
jmp
dec
fcoms
inc
adc
in
clc
mov
mov
imul
or
inc
test
mov
mov
add
fcomps
dec
mov
cld
out
adc
push
jg
push
clc
in
test
mov
les
lds
pop
rcll
push
push
test
mov
push
mov
lret
rorb
lret
cs
mov
loopne
pushfw
rclb
xor
add
gs
xchg
imul
pop
mov
popf
aam
into
or
pop
xchg
and
pop
fcomp
ss
pop
popa
mov
fs
jg
or
cmpsb
cmpsb
xor
or
das
pop
mov
or
cli
nop
xchg
push
sub
mov
hlt
icebp
cmc
or
shrb
mov
jecxz
push
jge
test
es
frstor
and
add
pop
movsb
inc
lea
add
inc
jne
adcl
aam
out
and
hlt
mov
call
push
outsb
test
push
int3
cmpl
mov
pop
lahf
sbb
enter
hlt
int3
jb
dec
repnz
lock
add
call
pop
fnstenv
aad
or
or
pop
aas
aad
push
push
mov
mov
fs
push
ljmp
mov
pop
mov
ds
test
jmp
ret
fdivrs
or
hlt
out
xchg
mov
daa
es
cmp
jbe
sahf
xor
fdivs
push
pop
out
adc
fnsave
pop
out
enter
add
mov
mov
add
cwtl
push
das
push
or
enter
push
mov
movsb
inc
xchg
adc
xchg
out
ret
pop
les
jnp
lea
xchg
or
call
lret
out
mov
add
inc
mov
jbe
mov
push
ss
pushf
jnp
sub
mov
push
nop
movb
pop
stos
int
or
sbb
cmp
mov
clc
cmp
insl
jg
mov
sti
push
ficoms
sbb
lcall
data16
out
lcall
jns
rolb
dec
sahf
stos
dec
scas
mov
mov
pop
int
mov
push
mov
test
or
lret
push
scas
inc
inc
push
and
cmc
xchg
incb
fdiv
or
int3
nopl
xchg
mov
or
scas
mov
and
push
clc
mov
mov
or
and
mov
pop
fisubs
divb
into
mov
add
insb
mov
in
negb
xchg
int3
mov
mov
gs
push
sar
push
pop
inc
idivb
rcrb
fsubr
scas
ficoms
inc
jmp
inc
mov
pop
or
in
outsl
test
notl
nop
sub
mov
mov
aas
mov
mov
test
or
mov
stos
fsubl
mov
mov
out
mov
fdivrl
iret
mov
mov
lret
xor
clc
ljmp
call
add
stc
cmp
sahf
int3
pop
rcl
push
stc
sub
cli
aam
outsl
mov
mov
insb
sbb
int3
repnz
rolb
call
outsb
push
in
mov
pop
repnz
je
push
inc
pop
jae
pop
fldl2e
mov
fdivr
stos
fiadds
jb
sbb
xchg
or
je
sqrtps
js
mov
or
and
movb
popf
xchg
xor
cli
jno
mov
xor
enter
add
jge
fcompl
pusha
js
outsb
xor
and
in
lret
jle
push
push
int
pop
push
rolb
mov
mov
sti
lcall
xchg
adc
sbbl
repnz
add
test
pop
or
or
pushf
scas
fmull
xlat
dec
in
jle
lock
inc
xchg
or
or
pop
dec
sbb
mov
js
rcrb
mov
jno
dec
out
push
xor
rorb
dec
cs
xchg
mov
aas
data16
xchg
aam
mov
sete
add
adc
mov
mov
scas
jmp
mov
xor
pop
jno
sub
xchg
into
push
subl
into
add
lcall
jecxz
pushf
sbb
stos
pop
and
xchg
pop
mov
pop
push
sbbl
ljmp
xor
mov
xchg
loop
mov
fildl
pop
lcall
cmp
ret
stos
je
shl
dec
or
out
ret
cli
shl
scas
cmpsb
mov
data16
aam
test
scas
mov
mov
cwtl
dec
mov
mov
nop
add
or
mov
lcall
xchg
jp
ret
mov
test
push
aam
scas
nop
add
aam
xlat
mov
push
and
xor
xor
add
cmpsb
or
test
call
loopne
add
and
push
push
push
or
sub
enter
fcmovnbe
xchg
gs
sar
into
mov
mov
mov
syscall
and
pop
push
cmp
add
pop
lcall
add
or
bswap
xchg
pop
mov
clc
or
xor
scas
ljmp
mov
push
int3
mov
scas
fimull
adc
mov
inc
mov
rcrb
pop
pop
mov
mov
out
mov
fdivrs
lret
enter
repnz
xchg
fiadds
adc
int3
xor
fsubrl
mov
or
or
mov
lret
xchg
lock
test
movsl
cld
xchg
push
pop
and
jae
cmp
adc
xchg
push
cmc
lcall
xor
ror
mov
push
cmp
push
push
into
sub
sbb
cwtl
inc
push
or
xor
mov
aam
push
sbb
ljmp
pop
cwtl
outsb
fsubrp
mov
mov
or
mov
mov
into
mov
or
in
push
xchg
cmc
mov
popf
and
rcrb
pop
out
ds
xchg
pop
cli
fstl
xor
mov
add
dec
insb
das
and
cmp
pushf
sarb
sbb
cwtl
daa
dec
data16
push
pusha
xchg
pop
xor
cs
dec
dec
movsb
inc
dec
mov
dec
add
mov
xor
mov
mov
rcl
je
jbe
pop
add
ljmp
ljmp
imul
movb
cwtl
mulb
pop
fidivl
data16
nop
clc
scas
add
pop
pop
inc
and
or
arpl
sahf
cwtl
test
pop
dec
js
cli
sbb
sub
mov
sahf
ficoms
mov
add
push
xor
add
xchg
or
and
push
roll
rcr
data16
lret
ret
inc
pop
int3
add
negl
stc
cwtl
in
imul
pop
mov
test
pop
scas
inc
mov
aad
out
cmp
rcl
or
jne
stos
call
clc
jnp
stc
std
icebp
lock
xor
aam
out
mov
out
or
or
adc
mov
push
add
clc
or
or
aad
fldl2e
stos
fdivrs
xor
pop
push
xchg
mov
out
lcall
xor
mov
test
clc
push
pop
jnp
push
rcr
push
xchg
ds
ret
hlt
add
clc
or
lret
fisubrs
pop
aam
sbb
ret
xchg
ficompl
shll
add
nop
mov
mov
jg
lret
pop
stos
jg
call
push
call
cwtl
idiv
or
fsubr
imul
cli
jo
xor
or
ficomps
dec
lret
out
loopne
in
lcall
sti
push
xor
xchg
repnz
cwtl
mov
les
inc
or
js
inc
sahf
or
push
enter
lcall
stos
mov
xchg
fsubrl
or
push
push
push
pop
xchg
and
mov
cmpsl
rcrb
sbb
or
mov
mov
cmp
cld
test
call
fsubl
mov
sub
fdiv
pushf
lahf
sarl
icebp
mov
out
mov
mov
fcmovnb
call
xor
test
pushf
pop
cld
mov
xchg
cmp
fsubs
cs
mov
push
pushf
cld
lahf
mov
mov
cs
xchg
daa
mov
add
leave
or
fmul
sahf
bound
add
sub
cmpsb
cmp
clc
lock
les
int3
cmp
mov
mov
out
jp
mov
xchg
pop
jecxz
xchg
jp
pop
mov
fwait
call
jmp
push
or
xor
ficoml
inc
sahf
add
or
hlt
stos
pushf
scas
xchg
ja
out
jecxz
hlt
cwtl
pop
movsb
mov
in
mov
and
shlb
dec
push
push
stos
rcrb
adc
dec
aad
clc
jmp
mov
mov
in
mov
xor
adc
adc
ljmp
jmp
out
or
ret
adc
jecxz
cmp
inc
jae
out
adc
daa
pop
cmp
test
das
movsl
pop
add
mov
or
jbe
je
or
mov
cltd
add
rorl
pop
mov
nop
mov
and
lret
cld
jecxz
pusha
pop
fsubrl
loop
into
or
xchg
movsb
dec
movsl
adc
mov
imul
pop
ficoms
mov
imul
fstpl
jns
nop
fmuls
out
fsubrs
int3
repnz
mov
ficoml
mov
fs
hlt
xor
lea
xchg
push
not
sarb
xchg
test
inc
out
cmp
xchg
repnz
scas
pop
aam
lret
mov
pop
bswap
fsubrl
cld
adc
les
ret
sarb
xchg
or
loop
dec
ljmp
add
outsb
movsb
popa
inc
sbb
lock
cmc
sti
scas
mov
sbb
ret
cltd
hlt
cli
or
pop
add
cwtl
adc
rorb
mov
or
nop
fwait
outsb
pop
dec
mov
ljmp
addr16
xchg
cmp
test
or
adc
icebp
jb
cli
sub
ret
mov
mov
and
mov
pop
add
add
jmp
sub
xor
push
mov
cmp
cwtl
repnz
push
lret
test
scas
cld
int
cmpsl
or
hlt
test
pop
mov
loop
and
xor
xchg
les
dec
pusha
movsl
xor
psrlw
insb
fistl
pop
scas
jg
cmp
and
mov
jb
outsl
push
inc
adc
stc
shrb
fcompl
sahf
lret
xor
movsl
jb
xor
xchg
add
add
pusha
bnd
push
pusha
sbb
mov
test
mov
sbb
sbb
cwtl
fsubp
vmovntps
cwtl
rolb
test
pop
enter
iret
mov
adc
xchg
pop
scas
cld
sub
jbe
xchg
jb
inc
xor
aam
gs
mov
mov
addr16
sarl
mov
faddl
or
mov
dec
cmp
ret
jbe
pusha
and
pop
xchg
mov
mov
mov
inc
lcall
sbb
or
xchg
pop
pushf
clc
call
adc
fsubl
loope
stos
xchg
dec
fiaddl
movsl
stos
data16
clc
lea
loope
push
push
nop
lret
mov
ret
sbb
shlb
pop
sti
addr16
enter
pop
fs
mov
add
test
or
lock
mov
test
xchg
and
mov
icebp
in
jo
mov
daa
stos
xchg
enter
lret
hlt
int
xor
sub
mov
or
fstps
push
shrb
add
jp
pop
or
mov
cmp
call
jno
sahf
ljmp
xlat
sti
in
enter
add
cmp
or
outsb
xchg
mov
test
mov
lahf
bnd
xchg
mov
pushl
fimull
jp
mov
jns
cmp
mov
enter
repz
ret
aas
pop
jb
fcoml
sar
lea
scas
xchg
push
or
es
push
pusha
out
sbb
into
and
cmp
or
stos
lcall
clc
inc
test
push
loop
and
scas
scas
stos
faddp
sbb
mov
scas
xlat
and
in
scas
icebp
mov
fistl
sub
pop
call
test
mov
mov
sbb
mov
pushf
push
mov
mov
ret
push
pop
rcll
xchg
enter
jmp
push
mov
adc
in
setns
mov
push
xor
jecxz
mov
adc
push
dec
stos
push
addb
jnp
rorb
daa
mov
fcmovbe
clc
dec
mov
inc
xchg
cmp
pushf
jb
mov
jp
sbb
sbb
inc
push
pushf
mov
cli
shlb
or
int3
rorb
xchg
mov
push
jne
xor
pop
mov
sbb
inc
pushf
divps
xchg
pop
into
pop
or
pop
scas
add
nop
pop
dec
nop
dec
outsl
addr16
arpl
push
mov
cwtl
fdivrs
mov
stos
xchg
cld
xorl
test
mov
mov
and
or
test
mov
mov
add
or
out
or
add
cwtl
jge
sub
or
pop
je
inc
mov
pop
and
mov
aam
and
xor
mov
mov
xor
icebp
xchg
ljmp
pop
rorb
or
mov
sahf
fwait
les
mov
and
fcompl
mov
gs
repz
daa
or
sbb
inc
sub
add
fmul
in
notl
out
arpl
jo
loope
imul
sbb
clc
push
jo
pushl
cmp
les
jo
and
and
idiv
je
jmp
pop
pop
cmp
push
movsl
ljmp
mov
stc
fidivrs
mov
jecxz
stos
lret
es
push
xor
mov
xchg
pop
leave
in
inc
dec
mov
mov
push
and
jo
push
mov
pusha
sarb
out
pop
lods
push
adc
sub
test
ret
ss
scas
dec
add
xchg
call
pop
or
or
pop
int3
mov
imulb
addr16
mov
or
jp
lcall
pop
mov
adc
mov
and
mov
xchg
pop
pop
sub
mov
mov
andl
shlb
pop
rorb
insb
inc
jl
push
dec
fyl2x
xorb
pushf
and
pushf
mov
rcrb
mov
mov
pop
pop
add
call
test
clc
mov
push
mov
or
pop
lahf
sahf
dec
les
stos
lock
adc
pop
xchg
ljmp
lahf
and
fdivrs
add
cmp
and
insb
sbb
xchg
and
cmp
push
pop
push
sub
add
cmpsl
jae
mov
xchg
jbe
push
in
push
xorb
lock
xchg
sti
aaa
out
pop
outsb
repnz
xchg
xor
std
stc
mov
dec
push
mov
push
lret
push
test
and
jns
in
div
push
scas
pop
lgs
lock
mov
pushf
rcrb
push
add
pop
xchg
fwait
dec
mov
push
aam
pop
clc
pop
jae,pt
sti
push
add
dec
push
push
jae
lret
mov
push
xor
aas
and
mov
data16
out
cmpb
aam
ficompl
mov
out
xor
cld
fdivrp
hlt
imul
cld
and
fisttpl
or
nop
movsb
ret
loop
xor
pop
cmp
int3
repnz
sub
nop
js
adc
fsubr
dec
add
inc
mov
jnp
inc
jecxz
imulb
jmp
aaa
lret
fisubs
sub
cld
pop
and
in
push
sbb
pop
dec
push
xchg
push
pushf
outsl
inc
inc
pop
xchg
ds
ficoms
dec
inc
add
pop
jae
mov
ljmp
mov
lcall
xchg
cmp
cwtl
notb
jg
mov
mov
rclb
aas
push
mov
mov
cmc
mov
and
sub
hlt
adc
inc
xor
mov
push
popf
or
pop
fisttpl
clc
pop
imul
pushf
rclb
stc
ljmp
sub
addr16
fdivrs
dec
lret
inc
fwait
in
loop
or
mov
sbbb
mov
or
inc
cmp
into
xchg
enter
pusha
mov
pop
stos
inc
ret
mov
dec
lock
enter
sub
inc
mov
mov
adc
jmp
icebp
adc
mov
jmp
inc
aad
jmp
dec
push
fdivl
lcall
imul
and
mov
mov
xchg
cld
mov
fbstp
jae
loope
mov
out
pop
or
imul
lret
jbe
out
flds
pop
clc
call
notb
notl
push
imul
ret
push
pop
cld
xchg
pop
iret
mov
es
push
out
xchg
or
ljmp
call
jge
mov
lods
dec
jmp
fxch
xchg
gs
cwtl
push
xchg
pop
test
and
mov
scas
lock
jns
fildl
stos
mov
or
adc
push
xchg
or
clc
out
or
cld
lods
xchg
popf
pop
lret
xor
aas
mov
stos
test
clc
rcrb
push
dec
sbb
or
addr16
hlt
mov
sahf
stos
or
test
or
xchg
hlt
pop
push
test
fwait
out
enter
aam
rcrb
rorl
pusha
iret
imul
lret
cld
pop
mov
aam
add
cmp
inc
int3
push
test
add
out
mov
test
pop
out
std
push
mov
xchg
pop
cwtl
push
cld
cli
ret
into
and
ret
mov
aad
dec
and
inc
repz
xor
xchg
xchg
xchg
add
mov
push
in
aam
jnp
idivl
clc
sti
les
xchg
in
or
xchg
test
fimull
sbb
cmpsl
clc
and
pop
lods
int3
arpl
dec
sahf
lcall
push
pop
aam
nop
mov
inc
int3
testl
int3
paddusb
aaa
ljmp
data16
add
mov
cmp
cld
mov
insb
hlt
xchg
and
lock
xor
aam
mov
cli
insb
add
dec
fsubrl
in
push
push
inc
ror
push
and
dec
mov
jp
add
into
lcall
push
ljmp
jmp
aas
pop
lret
mov
scas
je
xchg
pop
in
lock
or
les
dec
pusha
into
fisubrs
cs
mov
or
mov
pop
mov
xor
sarb
test
xchg
mov
or
stos
adc
ljmp
shlb
xor
nop
out
jnp
test
mov
inc
call
sbbb
popf
fildl
mov
or
xchg
jmp
test
lock
mov
out
rcl
xor
ljmp
test
cld
ja
and
xchg
mov
jbe
pop
jg
test
mov
je
push
lods
lahf
fucomip
xchg
sti
std
mov
imul
sti
mov
clc
les
test
mov
push
stos
and
sbb
lcall
push
inc
fcmovu
pop
mov
sti
ret
pop
bound
rolb
dec
rolb
aas
fnstenv
fldcw
or
insb
mov
pop
clc
das
lock
jecxz
and
xchg
cmp
mov
int
add
or
mov
push
add
xlat
pop
jnp
xor
jmp
push
dec
sub
cmp
xchg
mov
xchg
lcall
into
out
pop
ret
sbb
sahf
mov
jp
lock
aam
adc
mov
mov
xor
enter
test
mov
add
push
les
ret
mov
rcll
stos
mov
lock
clc
out
les
push
inc
mov
rol
xor
xchg
inc
addb
push
repnz
mov
xor
cmp
push
mov
add
aam
movd
ljmp
add
jmp
mov
dec
lret
cmp
and
in
lock
adc
xor
add
test
push
ljmp
out
les
ficoml
and
sarl
push
mov
repnz
add
aam
push
scas
dec
jb
sub
xchg
cmc
jns
out
pop
mov
fildl
repz
in
push
jae
call
or
lock
or
add
loop
movsl
cmp
or
cwtl
cli
lods
pop
sub
push
lock
je
repnz
cld
cmp
test
ret
cld
push
xchg
add
push
ljmp
dec
adc
clc
cmpsl
js
push
movsl
pop
lret
iret
mov
rorb
arpl
rcrb
mov
push
or
add
arpl
scas
mov
xlat
pop
popa
push
mov
loop
sub
or
dec
adc
cmp
scas
dec
pop
test
cmpsb
cmp
dec
xor
xor
gs
or
dec
faddl
or
clc
les
add
dec
stos
mov
pop
out
inc
call
mov
pop
pushf
xor
sti
mov
insb
repnz
cmp
pop
ret
mov
test
push
subl
xchg
pop
and
and
or
add
inc
sbb
sahf
jo
popf
and
cwtl
mov
push
cmpsb
pushf
xor
push
push
cmp
mov
xchg
jge
mov
fadds
lcall
pop
into
push
and
mov
dec
adc
call
shll
enter
test
lret
test
icebp
outsb
dec
shl
xchg
test
les
cwtl
scas
scas
cmp
push
ret
outsl
dec
pop
mov
mov
in
aas
sbb
mov
in
cld
xor
aas
out
clc
dec
fistps
enter
mov
aaa
shr
in
adc
lods
mov
sbb
mov
mov
cmp
call
push
or
xor
scas
fadds
pop
jmp
call
mov
or
cmp
mov
lock
jb
outsb
cmp
push
xchg
in
outsb
push
clc
movb
lret
mov
pop
mov
int3
cmp
cmp
mov
fdiv
int3
or
cmpsb
imul
outsb
rcl
gs
or
jl
cmp
add
mov
inc
test
lcall
add
call
lcall
or
adc
mov
lock
shrb
cmp
push
push
mov
out
pusha
mov
movsl
push
ret
ds
cmpsl
test
call
xchg
nop
xor
fmull
mov
out
pop
and
hlt
loope
scas
mov
adc
ds
lods
movsl
jae
cmp
add
mov
loop
fidivrl
fcom
pop
jecxz
and
int3
fimuls
cmp
mov
xchg
push
sar
in
dec
mov
or
mov
pop
addr16
add
fbstp
shll
rcll
call
nop
ljmp
jecxz
and
sub
and
add
test
inc
push
push
add
mov
cmpsb
or
ret
push
test
cmp
push
add
idiv
dec
push
jnp
shl
setl
fadds
pop
add
dec
xchg
xchg
cmpsb
add
mov
inc
testb
shufps
push
dec
jg
test
sar
jb
pop
lret
and
sub
xor
ret
adc
add
shlb
pop
dec
push
push
add
fs
push
jae
shrl
cmpsb
clc
xchg
mov
or
push
add
gs
nop
scas
push
test
xchg
mov
mov
add
sbb
xchg
mov
es
or
mov
add
xchg
pop
cs
call
lock
adc
int
cli
pop
nop
test
sti
jbe
push
stos
push
mov
dec
cmovne
mov
out
nop
popa
sub
ret
dec
out
dec
ret
mov
pop
insl
push
xlat
hlt
mov
add
lock
xchg
call
or
pop
nop
xchg
mov
or
stos
lret
sub
negb
jmp
or
aad
mov
fs
nop
cmp
or
push
mov
outsl
mulb
and
pop
lock
adcl
lcall
mov
fdivs
imul
pop
rorl
xor
into
test
out
stos
enter
addb
mov
adc
jg
mov
ret
test
pop
sahf
push
mov
xor
jp
mov
adc
sbb
pop
ss
or
cli
pop
fadd
mov
jne
cmp
pop
rcrb
jmp
movd
out
mov
add
inc
and
mov
cs
adc
nop
add
add
cmp
call
and
pop
lahf
cli
into
fcomp
stos
or
imul
aam
icebp
pop
fistps
dec
rcll
dec
in
xor
call
sarl
cmp
mov
vmwrite
mov
jg
out
loope
or
add
mov
push
mov
divb
addr16
stos
push
mov
sub
push
out
push
sub
out
mov
test
leave
mov
xlat
mov
xor
add
lcall
clc
outsb
mov
imul
out
sub
bnd
mov
scas
insb
cld
stos
jne
xchg
add
dec
rcrb
fcmovbe
scas
test
faddp
push
pop
in
cwtl
jnp
add
or
pushf
cmp
add
fistpll
arpl
cmpsb
mov
test
pop
movsl
xchg
push
and
cmp
or
xchg
push
pop
stos
inc
imul
ljmp
sub
lret
in
xchg
les
sbb
loop
ficompl
out
ds
lock
repnz
addr16
movzbl
xchg
ret
adc
xor
push
pop
push
sbb
mov
mov
insb
stos
or
jnp
pop
fcompl
add
add
mov
lret
hlt
xchg
inc
leave
xor
es
out
mov
data16
sar
sbb
inc
in
push
dec
cmp
push
dec
into
xchg
dec
hlt
dec
call
adc
bound
fdivl
sarb
or
mov
jecxz
fsts
ret
lret
adcb
shrl
dec
aam
ljmp
pushf
out
in
mov
mov
xchg
bound
insb
cmpsl
cmp
cld
movntps
sub
mov
sbb
jns
les
mov
fistpl
das
cmp
push
mov
shl
enter
mov
sbb
into
test
push
sarb
mov
cmp
out
es
push
nop
divb
mov
xlat
sti
or
xchg
lcall
sahf
call
sub
or
adc
cmpb
lahf
cmpb
pop
rorb
mov
mov
ret
mov
xor
push
lret
inc
mov
js,pn
mov
pop
test
push
jno
mov
xchg
lea
fstpt
xchg
movsb
mov
imul
lret
pop
js
les
ljmp
sarb
sbb
lock
cmpl
pop
cmp
push
add
cli
repnz
mov
faddp
scas
into
call
jb
lods
cmpb
cmc
xchg
mov
adc
pop
mov
hlt
xor
push
mov
adc
lahf
in
or
outsb
stc
push
mov
add
jp
xchg
mov
pop
shlb
inc
add
mov
and
push
movsbl
aam
push
fs
out
imull
mov
in
ficompl
push
cwtl
cld
lcall
movsb
add
mov
xor
idivb
xor
fbstp
cmp
call
xor
xchg
les
lahf
push
int3
rorl
dec
mov
jo
pop
mov
ljmp
aad
jmp
fistpl
lcall
and
push
push
inc
xchg
sbb
xchg
lret
js
rcrb
jne
jle
push
nop
repnz
and
lcall
mov
push
les
inc
aam
push
push
add
sub
mov
in
dec
test
scas
push
mov
cld
ljmp
push
fisubrs
pop
ds
add
fidivl
cmp
mov
inc
fisubrl
pop
mov
add
mov
stc
arpl
mov
or
int3
dec
fstpl
cltd
icebp
rcr
sahf
cld
push
loope
fisttpl
test
push
cmc
pop
push
inc
jle
mov
dec
or
push
and
mov
mov
cmp
mov
lock
test
imul
add
push
test
push
into
iret
cmp
scas
sti
cmpsl
mov
fsubrl
stos
add
mov
mov
or
adc
and
ss
fimuls
xchg
mov
xor
pop
push
nop
cmp
lsl
inc
or
ljmp
push
aam
out
pop
outsb
jp
pushf
in
lret
mov
sub
dec
dec
daa
aas
sbb
hlt
mov
faddp
jb
lcall
xchg
test
and
mov
adc
addr16
stos
mov
pop
dec
sahf
mov
pop
loope
mov
or
push
nop
or
pop
cmp
scas
enter
in
pop
xchg
js
js
xchg
stos
push
cmpsb
xchg
mov
cmp
into
push
jae
cmp
repnz
stc
ljmp
sbb
out
mov
incb
cwtl
dec
test
mov
add
xor
enter
push
rolb
add
xor
call
sbb
sub
sahf
shr
cli
add
push
cmp
or
rol
fs
into
jecxz
mov
cld
in
lcall
jle
movsl
sets
jne
pop
imul
mov
cmp
or
gs
int3
xor
xor
xor
push
fadd
insb
add
icebp
test
push
and
cwtl
fdivrl
test
sub
enter
cwtl
add
insb
fbld
sbb
stos
scas
shll
xor
mov
enter
hlt
push
mov
cmpsl
dec
mov
push
pop
mov
xor
mov
cli
ret
push
pop
mov
lock
fucomi
push
mov
inc
ljmp
xor
or
push
xor
cwtl
push
les
push
paddd
aaa
les
sub
cmpsb
clc
xor
cmp
mov
xchg
xorl
dec
fistpl
test
stos
js
pop
and
inc
jne
mov
aas
stos
add
ficomps
lret
mov
cmp
stos
push
pop
int3
and
pop
or
es
push
call
pop
inc
negb
and
cltd
iret
cmp
scas
mov
inc
adc
inc
push
mov
lret
out
roll
mov
cmp
and
sahf
xchg
aaa
inc
mov
notb
lahf
pop
jecxz
dec
pop
mov
fstpl
sbb
cmp
xchg
sahf
rorb
icebp
push
aaa
imul
or
mov
mov
jp
or
roll
add
mul
pop
add
fisubl
test
cld
popf
xor
fidivrs
ret
jb
jle
shlb
ret
pusha
xchg
add
jo
cmp
test
out
stos
mov
inc
shr
cld
fsubp
test
stos
sbbb
sbb
sub
addr16
int3
test
push
xchg
sbb
sbb
insb
mov
bound
test
jmp
shl
mov
add
push
push
and
in
dec
inc
inc
and
xchg
shrl
stos
ljmp
stos
out
aam
or
imul
pop
cmpsb
lock
stos
ljmp
pop
cwtl
push
clc
imul
cmove
pop
shrb
rcl
dec
cwtl
fcoms
jg
add
stc
pop
jp
les
lcall
push
and
repnz
int3
mov
shl
xchg
fdivrp
jns
int3
stos
mov
lret
out
mov
sbb
and
sarb
mov
xor
out
jmp
push
push
or
mov
jmp
pop
andl
xchg
cld
movsb
or
call
mov
mov
scas
aas
and
pushf
adc
push
stos
push
xor
out
sahf
xchg
in
ds
add
xchg
dec
push
into
int3
hlt
aad
fildll
sbb
sbb
mov
mov
cs
pop
jae
sbb
push
jg
jmp
clc
inc
leave
pop
fsubrp
jb
shlb
xchg
pop
inc
push
xchg
or
and
xchg
mov
je
fsubr
cwtl
dec
add
popf
data16
inc
push
repnz
dec
lds
je
test
push
cmp
cmp
sahf
sub
int3
enter
adc
lret
mov
xchg
jo
dec
mov
decb
push
scas
sub
out
mov
es
push
fs
call
stos
ljmp
testb
jb
push
mov
orb
xor
mov
int
mov
push
add
incl
push
push
mov
fmuls
in
fbstp
nop
xchg
mov
or
test
outsl
or
sarb
lock
sbb
mov
js
ljmp
int3
jle
inc
or
cli
mov
into
sub
and
or
call
cmp
shll
add
sbb
mov
push
adc
xor
hlt
mov
gs
xchg
cmpsl
xor
push
mov
call
mov
data16
testb
clc
shlb
lahf
mov
pop
push
pop
negl
push
bound
mov
test
mov
sbb
cmp
rol
xchg
out
out
dec
inc
scas
dec
push
testl
push
stos
lret
push
xchg
inc
lds
xchg
pop
inc
out
fsubp
scas
pop
out
sub
out
push
pop
or
mov
pop
fmul
push
in
add
or
popa
pusha
push
or
stos
test
jge
shll
and
cmp
pop
push
add
fdivr
mov
xchg
dec
pop
xchg
int3
sti
add
scas
and
mov
call
xchg
pop
adc
and
push
inc
or
or
cmp
ret
int
xchg
pop
xchg
pushw
rclb
cmp
lcall
lret
fmulp
push
adc
cmp
repnz
or
cld
scas
mov
fadd
xchg
inc
pop
xchg
and
xor
push
aam
fs
sbb
or
push
and
scas
lock
mov
inc
push
in
data16
aam
aaa
testb
ret
enter
int
jno
ljmp
cld
xchg
inc
fcompl
or
pop
arpl
push
xchg
test
aad
mov
xor
push
lcall
pop
xchg
aam
sti
icebp
rcrb
lock
pop
icebp
cwtl
out
and
sbbl
in
xor
add
movsl
push
and
push
outsl
and
mov
hlt
push
into
xchg
es
leave
or
pop
test
adc
into
rcrb
je
xchg
mov
movntps
mov
lock
insb
pop
mov
ljmp
mov
or
jnp
inc
mov
xchg
jp
test
ret
mov
clc
ret
stos
adcb
dec
lea
arpl
push
arpl
cmpsb
sti
add
mov
stos
lahf
loope
fcompl
iret
xchg
sub
cmp
add
pop
mov
shrb
rcrb
cmp
neg
add
ljmp
push
hlt
lret
jb
jno
clc
in
inc
xchg
ret
cmpsl
ficomps
mov
mov
cmp
xchg
rcr
mov
rcrb
insb
push
faddp
mov
mov
fcoms
ds
mov
cmp
mov
scas
repz
sub
xlat
push
adc
xor
rolb
cmp
sbbb
xchg
pop
push
cmp
popa
xor
stos
lret
test
in
push
out
cld
dec
cmp
mov
mov
and
pop
pop
mov
jle
scas
mov
xchg
inc
xchg
sub
les
lret
hlt
mov
into
xchg
push
cli
fsubrs
negb
pop
add
or
and
mov
rolb
fmuls
adc
divb
stos
dec
pop
ficoms
push
add
jbe
or
inc
add
xchg
mov
push
stos
mov
hlt
clc
or
out
sub
subb
in
mov
ljmp
ret
lret
and
rcrb
mov
out
repnz
cmp
pop
roll
in
repz
lock
fdivrs
and
or
cld
out
push
shrl
mov
pop
icebp
dec
dec
mov
dec
fwait
dec
out
xor
cmp
data16
push
leave
dec
mov
xor
mov
aam
sub
testl
aad
es
dec
bound
clc
mov
je
inc
call
and
sub
push
shlb
scas
shlb
pop
mov
add
fistl
or
aad
add
shlb
int
call
ret
repnz
into
or
sarl
aam
pop
shlb
lds
insl
aas
repnz
stos
and
jmp
xor
pop
xchg
push
or
mov
push
dec
out
je
aad
add
data16
inc
call
xor
repnz
pop
fcmovnb
dec
push
push
mov
add
mov
mov
mov
sub
adc
lcall
loop
xor
rorb
cmp
test
xchg
mov
dec
aam
xor
stos
test
dec
mov
pop
xchg
pushf
repnz
pop
mov
ficoms
shll
xor
sar
mov
xor
idivb
cmp
in
scas
lret
mov
mov
icebp
lahf
pop
mov
clc
gs
scas
lret
lret
pushf
mov
pop
push
push
cwtl
sbb
push
xor
idivb
pop
pop
fmul
add
stos
cmp
xlat
xchg
dec
jbe
cwtl
mov
mov
push
or
dec
mov
out
and
aam
repnz
cmp
scas
loop
sbb
or
ljmp
mov
mov
shll
or
rol
push
xor
call
xor
jg
xor
push
sub
mov
add
sbb
aam
jb
mov
dec
inc
push
dec
cs
adc
fidivs
xor
scas
cmp
push
fcomps
sub
mov
ljmp
jb
test
push
leave
pop
cmp
pushf
or
push
imul
aam
pop
sbb
fisubrl
mov
push
shr
fistl
nop
fidivrl
fwait
add
jecxz
sub
lcall
lock
mov
fidivl
xchg
push
cmp
jg
mov
rorb
inc
testb
cli
sbb
test
or
pushf
add
jbe
call
dec
icebp
xchg
lods
adc
out
mov
negb
and
sub
ret
push
mov
fucomi
mov
add
push
pop
xchg
stos
or
call
push
hlt
cld
aam
or
xor
adc
xor
cmp
push
lock
cwtl
enter
jb
xchg
mov
mov
nop
lock
mov
push
stos
hlt
divl
xor
or
nop
ljmp
shll
mov
add
mov
lret
les
ret
add
sub
mov
les
jecxz
cmpsb
sar
nop
cltd
pop
mov
outsl
fldl2e
mov
dec
mov
pop
add
sub
push
sub
negb
jno
mov
loopne
imul
cld
das
jo
cmpsl
arpl
push
jp
push
jo
pop
xor
or
or
or
and
les
pop
sarl
shr
mov
js
jp
pop
jbe
lock
int3
inc
pop
nop
mov
cld
fcomps
fsubrl
scas
lcall
int
mov
xchg
add
mov
jge
add
mov
xchg
in
inc
mov
pusha
ret
adc
cwtl
jnp
in
insb
scas
into
and
faddl
data16
ljmp
les
pop
xor
cmpsb
push
cmp
pop
test
and
sar
xor
xor
mov
push
adc
push
sarb
push
xorl
mov
sbb
add
outsl
outsb
loope
and
lcall
xchg
add
popf
and
lds
or
out
inc
stc
lock
add
dec
sbb
shl
insb
ret
lock
or
mov
mov
es
add
adc
mov
in
int3
and
pop
scas
enter
mov
push
dec
push
push
setbe
push
add
xchg
jne
aas
mov
add
jns
jp
stos
pop
lock
mov
dec
cwtl
mov
mov
out
push
dec
cmp
aam
hlt
cwtl
mov
lcall
fisubrs
test
mov
fsts
clc
in
leave
pop
test
fcmovbe
xchg
outsb
stos
enter
ljmp
mov
fwait
add
pop
pop
xor
decb
addr16
sub
mov
mov
fsubr
add
pushf
int3
xor
xor
and
imul
xchg
test
rcr
adc
lret
mov
cwtl
and
inc
jecxz
ror
cmp
xlat
xchg
les
adc
sub
cmpsl
mov
ror
push
mov
dec
xchg
cmp
ds
call
mov
mov
push
dec
mov
imul
fidivrl
cwtl
xor
jnp
add
xchg
das
mov
enter
fcmove
add
push
pop
xor
int3
call
add
pusha
ret
push
pop
mov
js
cli
cmp
dec
pop
mov
repnz
sti
and
add
dec
inc
push
pushf
insw
or
lret
jbe
into
or
add
add
mov
adc
mov
loop
idiv
dec
scas
jb
mov
fwait
loope
pop
xchg
push
fwait
mov
sarl
push
mov
mov
aas
hlt
lock
inc
mov
push
addb
test
or
int
mov
ds
mov
clc
ret
xor
push
cmp
mov
mov
pop
hlt
jnp
pop
xchg
push
test
dec
mov
xchg
enter
adc
loopne
stc
mov
ljmp
xchg
pop
cmpsb
mov
push
pop
aaa
fmull
data16
add
shlb
and
out
xlat
mov
mov
clc
xor
or
or
and
rcrb
mov
add
fwait
mov
cld
mov
aam
into
inc
or
push
push
sti
insb
in
push
and
push
xchg
push
xchg
negb
shrb
fsubp
jle
clc
fmuls
dec
mov
shrb
cwtl
mov
hlt
insb
dec
outsl
add
nop
xor
inc
arpl
stos
pop
sub
clc
push
jns
sub
sti
or
mov
pop
sti
in
test
xchg
ss
jl
add
repz
lea
mov
cld
pushf
shrb
imul
pop
cwtl
xor
xchg
xor
clc
mov
xorb
lret
call
pop
cmp
test
push
ret
call
fcomps
sbb
mov
pop
lret
ds
or
jbe
mov
ret
jo
xchg
gs
into
or
jo
call
sub
out
adc
push
jb
lret
or
push
or
xchg
cmp
mov
xor
mov
stos
std
pop
aam
and
arpl
das
clc
ljmp
int3
rep
bound
call
enter
jo
clc
xchg
repnz
jb
lock
inc
test
loope
les
aam
sbb
clc
jns
int3
sub
pop
mov
idivb
and
xchg
pop
mov
and
add
out
push
ud2
jle
into
faddl
shrb
ret
movb
lcall
ficoms
mov
mov
fisubrs
push
repnz
cmp
xchg
add
shrb
fyl2x
int3
popf
stc
pop
stc
pop
pop
sbb
mov
lret
hlt
aaa
mov
pop
pop
fmull
adc
push
ret
out
cmp
mov
adc
sti
or
fs
out
mov
stos
adc
pop
jns
or
xchg
stc
push
movsl
inc
and
gs
adc
xor
rcrb
push
jmp
jmp
dec
fdivrs
nop
ret
sbb
pushf
out
mov
add
repnz
cld
stos
cwtl
aam
loope
imul
jae
mov
adc
adc
push
insb
sarb
or
xor
addr16
mov
out
push
ljmp
testb
sti
xchg
pop
xchg
imul
or
pop
dec
scas
mov
mov
xor
lret
mov
or
sub
enter
rcr
xchg
insb
fiadds
push
push
xlat
push
cltd
in
xor
lret
test
clc
and
ds
inc
repnz
rorb
lret
push
insb
aaa
pop
mov
aas
ljmp
hlt
enter
jle
mov
ljmp
sbb
stos
xor
push
pop
fstpt
sbb
lods
arpl
push
push
outsl
call
mov
shr
push
clc
int3
fmul
mov
into
dec
or
jmp
mov
mov
mov
xchg
test
pop
cmp
mov
or
stos
fsubs
mov
ljmp
test
ss
test
push
push
jno
mov
ja
imul
movsb
pop
mov
mov
push
popf
lea
stos
add
push
jecxz
dec
fisubrl
rorb
popa
mov
mov
inc
fs
shl
out
push
shll
cmp
test
add
lahf
cld
cwtl
adc
mov
mov
xlat
xor
aaa
shlb
aam
enterw
pop
cmp
or
push
fistpll
int
fisubl
add
fadds
pop
enter
xchg
test
cmp
rolb
mov
xchg
nop
lock
dec
sbb
ficomps
xchg
jp
mov
ret
pop
fmuls
js
lret
push
lock
test
cmp
xor
hlt
mov
ret
es
pop
cmp
mov
push
sub
sbb
or
cmpsl
rclb
sub
out
ret
lods
aas
pop
cwtl
ljmp
and
add
shlb
daa
xchg
push
jbe
inc
stos
fimuls
int3
cmp
add
xchg
and
mov
mov
into
test
push
mov
mov
mov
or
mov
xchg
pop
xor
rcrb
je
aam
je
add
outsb
ret
mov
fstps
out
popf
call
xlat
loop
test
dec
clc
cmp
mov
test
fidivl
xchg
insb
scas
iret
mov
jo
stos
sbbb
ficoml
xchg
bound
push
test
rclb
rcll
push
rclb
adc
cmp
sahf
mov
push
sbb
or
push
shlb
jb
xor
hlt
xor
cmp
ljmp
pop
repz
push
add
xchg
pusha
and
push
pop
xor
jp
stos
mov
fadds
xchg
testb
dec
stc
scas
push
repnz
hlt
int3
and
mov
cmp
rol
lcall
push
fistpll
fcoml
pop
nop
les
pop
inc
int3
add
test
push
mov
hlt
out
cwtl
mov
xor
fcoms
mov
in
lcall
cld
xchg
loope
fdivl
lock
mov
out
xor
and
pop
js
icebp
aas
mov
mov
es
clc
in
cltd
mov
sub
mov
scas
femms
xor
ret
call
cmp
pop
jno
orl
lret
cli
push
xor
insb
or
sbb
lret
mov
or
repnz
add
ljmp
out
fcom
nop
xchg
inc
pop
ljmp
insb
push
dec
push
fdivrp
std
mov
jae
fiadds
sahf
div
mov
add
or
imul
jp
adc
jnp
inc
xlat
pop
sbb
aas
cmp
and
adc
sub
push
scas
stos
in
add
sahf
push
stos
scas
push
daa
daa
adc
nop
inc
push
enter
cli
imul
push
adc
notb
data16
mov
bound
jbe
cwtl
jo
mov
loope
and
test
xor
add
test
cmp
repnz
inc
mov
out
outsb
sbb
pushf
jbe
into
cmp
clc
push
and
adc
add
push
or
mov
hlt
aad
in
imul
mov
or
fadds
jge
call
lcall
dec
daa
xor
xor
sahf
cmc
pushf
dec
dec
pop
mov
dec
dec
jle
test
fcoms
mov
push
scas
lret
ret
jecxz
je
out
dec
cwtl
add
pop
cmp
nop
mov
fcoml
js
in
in
and
mov
mov
push
stos
lret
and
push
loop
enter
or
cld
add
in
xchg
sahf
add
ret
outsb
mov
push
mov
dec
sbb
mov
xchg
out
jbe
es
clc
jge
out
inc
setl
cwtl
lret
pop
std
loope
and
push
cmp
or
scas
int3
cmp
add
lahf
adc
push
jns
sbb
lods
enter
and
loope
iret
jb
pop
push
jbe
mov
int3
lcall
outsl
xor
ficoml
xchg
fimuls
pop
int
pop
sbb
out
dec
push
aam
pushf
inc
jbe
ret
std
cwtl
sbb
push
pusha
push
mov
decb
cmpsb
add
int
ret
fcoms
cwtl
stc
cwtl
pop
js
idivl
add
or
mov
cmp
fisubrl
outsb
xchg
pop
push
push
sub
xchg
movsl
cli
rcl
mov
pop
dec
stc
cld
dec
sub
test
or
scas
push
jmp
test
pop
push
iret
je
xchg
cwtl
mov
pop
mov
add
xchg
mov
add
stos
hlt
ror
sub
les
rcl
mov
ss
push
adcl
xchg
xor
push
mov
es
mov
xchg
mov
aam
pop
lcall
jb
hlt
in
xchg
sar
insb
pop
enter
pop
push
mov
cld
gs
stos
into
or
mov
fisubrs
clc
jecxz
mov
in
jns
cmpsl
cmp
or
nop
lret
dec
cld
loopne
ficomps
or
pusha
out
enter
dec
call
mov
mov
pop
out
pop
clc
into
ljmp
lret
ret
scas
mov
push
sbb
call
mov
lock
xchg
mov
mov
mov
or
fbstp
in
add
push
and
cmc
mov
mov
add
inc
test
ljmp
fdivs
insb
pop
push
add
xchg
sub
mov
insb
cwtl
pop
cmpsl
inc
pop
mov
ljmp
xor
out
xchg
test
xor
jnp
push
jnp
pop
test
ficomps
ds
fdivr
push
mov
mov
push
xchg
mov
or
cmp
lcall
mov
lock
movsl
addl
scas
std
in
pop
fists
dec
sahf
push
mov
xchg
scas
pop
movsl
les
mov
xchg
push
mov
jg
mov
mov
pushf
cmpsb
das
or
xor
sbb
push
cld
out
xlat
cmp
fdiv
fsubp
pop
adc
neg
sbb
mov
mov
cwtl
lahf
into
push
aad
repz
nop
mov
push
nop
mov
cwtl
incl
clc
lret
cmc
or
sahf
test
sub
movsb
stos
fmulp
data16
je
insl
cmp
or
mov
test
or
add
loope
cmp
gs
sub
pop
pop
push
hlt
rcrb
call
and
jbe
push
adc
xchg
jbe
ror
push
nop
xor
cmp
icebp
lock
enter
pop
mov
shrb
into
arpl
popf
sbb
push
aam
lea
inc
xchg
mov
out
mov
aad
adc
repnz
aaa
movsb
xchg
sub
push
xor
pop
xchg
push
in
mov
mov
iret
imul
add
enter
lcall
mov
add
mov
gs
lret
test
dec
dec
mov
xchg
into
jbe
dec
clc
xchg
stos
into
push
pop
cwtl
pop
ss
enter
scas
ljmp
imul
test
ljmp
mov
out
push
sahf
sub
sar
gs
mov
fidivrl
jb
lret
mov
dec
dec
hlt
lcall
cmp
push
rol
cpuid
aam
jb
push
jb
inc
mov
movsb
cmp
push
pop
bswap
stos
mov
imul
pop
pop
jl
mov
js
out
mov
hlt
or
fsubl
sbb
rcr
fsubrs
pop
pop
nop
pushw
gs
lock
stos
xor
mov
jge
mov
xor
hlt
push
pushf
data16
insl
add
into
inc
fcomps
lcall
sar
inc
ret
fcomp
xchg
mov
xchg
xor
and
cltd
mov
stc
mov
or
push
fcom
ucomiss
rolb
bound
mov
pop
push
push
fimull
js
cmp
sbb
fisubl
mov
push
ret
push
subl
lcall
rcrl
mov
cmp
into
test
ret
icebp
shlb
or
mov
test
stc
dec
pop
enter
mov
inc
xor
pop
fiaddl
in
mul
lahf
jo
setae
push
repnz
sti
outsb
xor
mov
push
cmp
cmpsb
mov
cli
ret
mov
adc
push
clc
jae
leave
es
ds
add
scas
loopne
xor
mov
mov
pop
mov
nop
or
imul
jp
pop
into
mov
push
mov
out
subb
test
es
add
insl
sbbl
lea
je
pop
or
push
repz
jnp
out
push
stos
negb
push
mov
mov
pop
out
cwtl
push
xor
dec
test
mov
lock
ficoms
mov
mov
das
jbe
cmp
stos
scas
lret
inc
lcall
ret
jb
fsubr
sbb
dec
popa
fiaddl
mov
cmp
cmp
pop
push
jo
lret
xor
lods
ljmp
ret
pushf
mov
push
sbb
cmp
hlt
jp
rolb
push
pop
sub
mov
push
adcb
loope
pop
arpl
cltd
and
jo
push
stos
and
xchg
push
rcrb
push
push
es
nop
enter
dec
jmp
or
xchg
imul
faddl
mov
sub
gs
or
push
ljmp
and
add
adc
out
and
mov
loopne
enter
adc
ficoml
mov
jmp
shr
push
mov
lcall
inc
jmp
popa
xchg
aad
sbb
les
enter
push
pop
call
xor
xor
mov
xor
rolb
push
dec
icebp
stos
sub
lock
dec
and
or
adc
cwtl
or
fisubrl
xchg
cld
cmp
push
pop
cwtl
cli
inc
test
add
addr16
fists
loope
into
stos
vcvtss2sd
xor
stos
mov
or
in
rcrb
jmp
mov
and
clc
push
ret
inc
pop
repnz
add
mov
inc
cs
add
cmp
lock
repnz
clc
mov
test
fnstcw
pop
pop
xchg
in
sbb
and
dec
jmp
add
xor
push
idiv
mov
cmp
pop
sarb
mov
mov
xor
ret
inc
lea
mov
xor
stc
inc
pushf
fimull
mov
push
pop
mov
test
stos
imul
pop
add
hlt
xlat
not
lcall
out
and
push
sahf
cmc
xlat
xor
cld
push
sub
sub
pop
inc
push
xchg
add
rcr
test
mov
adc
leave
mov
das
jle
out
into
call
fcmovbe
clc
add
test
push
enter
xor
mov
ret
insb
add
sahf
shrb
and
xchg
or
repnz
xchg
inc
or
aam
cs
insl
pop
rcrb
outsb
stos
cmp
addl
stc
imul
in
inc
enter
rcr
jbe
or
notb
addr16
xchg
mov
scas
int3
call
pusha
push
mov
xchg
push
les
pop
jo
int3
xor
aas
lret
lcall
inc
test
stos
aam
xor
hlt
cmp
bound
ret
push
ret
cwtl
stos
and
mov
stos
out
loopne
call
ficompl
push
notb
cs
fidivs
push
fidivs
mov
jg
or
push
xchg
hlt
pop
sahf
std
int
mov
cld
lret
push
pop
rclb
je
mov
push
int3
fcompl
xchg
pushf
xchg
sti
ret
movsb
into
adcl
cltd
fdivrs
mov
push
mov
or
lock
pop
nop
shl
out
sahf
adc
mov
pop
orb
mov
push
ss
xchg
push
mov
pushf
lcall
enterw
xchg
test
sub
pop
add
sbb
setl
dec
jge
xchg
dec
sbb
cmc
inc
rcr
mov
mov
js
ret
push
hlt
fadd
or
or
lret
fsubrs
sarb
fdivrs
mov
test
loope
orb
mov
sarb
mov
js
dec
lret
stc
fs
sub
inc
sbb
adc
jns
std
fcmovnb
add
dec
or
cld
xchg
cmp
push
lock
aam
lods
or
pop
dec
sub
xchg
pusha
push
notb
shll
rorl
aaa
and
ds
fcoms
enter
hlt
data16
cmp
rcl
scas
push
push
mov
pop
pop
add
dec
repnz
push
cwtl
push
mov
mov
jbe
lahf
push
mov
in
cmp
lock
ret
or
jmp
mov
repnz
ficoml
xchg
adc
mov
mov
leave
and
fdivs
mov
lock
pause
xor
es
out
out
push
sub
sbb
and
setle
test
push
and
enter
loop
pop
jae
cld
mov
jns
out
fdiv
js
lds
adc
jmp
mov
shll
aas
cmp
xor
mov
faddp
push
in
fstl
inc
cld
mov
cmp
rorb
mov
inc
sahf
xchg
cwtl
daa
jne
xor
sar
call
nop
fdivl
sahf
or
pop
incb
cld
dec
push
sbb
int3
adc
xor
mov
hlt
clc
mov
clc
ljmp
mov
lods
stos
xchg
sti
sahf
or
push
lcall
ret
shl
cmp
lret
or
repnz
test
nop
push
movsl
xor
xchg
clc
dec
cmp
or
fdivrp
in
mov
cwtl
fcomp
push
ljmp
cltd
mov
test
cli
adc
call
push
xlat
push
int
pop
testb
pushf
les
mov
mov
xchg
std
mov
jnp
scas
int3
sbb
mov
add
xchg
add
fwait
inc
push
lock
pop
into
out
pop
sub
cmp
push
pop
push
inc
pop
lock
out
data16
push
dec
lods
mov
out
rcl
or
mov
push
mov
nop
fdivs
and
pop
mov
add
push
popa
jl,pt
xchg
mov
push
mov
divb
cmp
push
pop
inc
mov
fdivrl
mov
inc
mov
add
mov
js
pop
jecxz
imul
cmpsl
jmp
push
ds
fdivrp
pop
cld
imul
mov
mov
pusha
mov
test
push
or
lret
add
mov
pop
rcrb
scas
cmc
lock
cli
inc
mov
sbb
orb
cmp
adcb
lret
adcl
push
mov
mov
xchg
dec
fadd
mov
movhps
scas
push
mov
lock
pop
scas
rsqrtps
pop
mov
push
and
pop
into
in
jnp
push
ljmp
or
rolb
andps
jp
test
stc
ljmp
fmul
xlat
add
xchg
mov
mov
lcall
orb
cmp
pop
xchg
push
lcall
pop
ljmp
fisubl
mov
lret
and
push
test
aam
or
jge
pop
push
nop
and
ljmp
lcall
test
icebp
dec
pop
xor
cmp
fstpt
les
sar
add
rorb
cmp
rorb
iret
mov
in
pop
jle
stos
cld
incl
mov
xchg
add
sub
or
idivl
xchg
sbb
mov
pop
xor
push
fwait
fs
out
stos
push
into
imul
out
adc
setbe
test
fs
cli
pop
int3
into
imul
or
push
out
rcrb
jns
pop
in
inc
leave
hlt
dec
adc
pop
insl
loopne
sbb
scas
ljmp
and
mov
pop
sub
and
sbb
dec
fldt
push
out
nop
push
fidivs
sub
pop
sahf
roll
cmp
lock
jne
jp
out
jmp
rcrb
test
push
addl
test
repnz
sub
cld
mov
imul
jg
xchg
popf
sub
fildll
push
mov
dec
jo
mov
aad
pop
add
pushf
xchg
les
call
test
cwtl
lcall
pop
pop
add
int3
into
cmp
sahf
fistpl
xor
repnz
in
jae
iret
pop
inc
out
sbb
rcrb
inc
xchg
xchg
popf
add
xchg
shlb
jb
push
cmp
push
cmpsl
jecxz
push
add
hlt
shll
sti
xor
outsl
cmp
outsb
pop
mov
in
inc
mov
fisubrs
clc
test
mov
mov
xchg
fs
inc
inc
fistpll
xchg
neg
aam
adc
mov
pop
lcall
cmp
or
or
add
fsubp
lea
shr
inc
sahf
mov
popa
out
push
nop
lock
clc
and
push
rcll
movl
fcomps
out
es
or
test
repnz
pop
fisubl
jecxz
cwtl
inc
jae
jge
hlt
fisubrs
daa
push
pop
ja
and
jge
add
mov
testb
mov
xchg
shlb
mov
ja
stc
in
pop
in
icebp
movsb
fistps
pop
call
orb
ja
sbbb
out
xchg
and
ret
outsb
into
pop
lret
outsl
outsl
mov
lcall
jge
jns
xchg
rcrl
sbb
xchg
mov
das
ret
pop
stos
test
push
rcrb
mov
dec
nop
push
push
ja
adc
push
push
or
sahf
adc
adc
and
in
pop
scas
and
sub
cmpsl
jns
pop
leave
sbb
jb
out
mov
push
or
xchg
mov
out
pop
ljmp
data16
and
add
fstl
fstl
ja
scas
add
adc
pop
call
icebp
pop
test
jg
dec
jmp
mov
mov
jg
dec
cmp
ljmp
dec
jae
inc
fiadds
push
inc
out
cwtl
lods
sahf
pop
sub
sub
fldl
and
push
add
subl
leave
int3
rclb
sti
mov
push
pop
je
cmpsb
xchg
ja
and
pusha
mov
jnp
sub
ja
into
lods
sarb
shlb
xchg
mov
aas
sbb
das
and
add
add
jle
xchg
and
add
pusha
loop
add
sub
jmp
pop
jg
notb
aas
dec
add
mov
sub
testb
pushf
enter
lret
mov
fsub
sub
js,pn
ficomps
xchg
and
and
out
mov
ret
insl
sahf
mov
jno
cmpsb
mov
cmpsb
xchg
mov
add
jne
cmpsb
pushf
mov
jae
dec
push
nop
or
push
int3
sbb
out
test
imul
xchg
mov
aad
add
sahf
call
testb
mov
xchg
mov
ret
mov
mov
call
xor
enter
rol
and
pop
pop
ljmp
fcmovu
cltd
fsubr
jmp
or
hlt
push
rsm
enter
push
cmp
fcoml
sahf
aam
push
outsb
mov
cltd
pop
addps
or
dec
push
push
mov
sbb
pop
xchg
scas
push
or
repnz
jg
cwtl
mov
imul
fistps
cmp
mov
adc
testb
sub
mov
rolb
imul
pop
or
lcall
test
sbb
cld
mov
jp
or
repnz
jae
out
je
ljmp
push
stc
jp
ret
lret
repnz
mov
cmp
rclb
movzbl
loopne
cs
jmp
fdivs
cwtl
cmp
fisubrs
sahf
or
arpl
jbe
mov
add
push
les
push
xchg
jecxz
shrb
add
pop
push
ss
add
cld
cs
sahf
sbb
daa
clc
test
ret
mov
pop
pop
sbb
pop
ds
and
pushf
cwtl
out
loopne
push
pop
orb
cmpsl
push
and
das
lock
cld
imulb
insb
push
stos
out
pop
lcall
js
shlb
push
fwait
inc
rolb
fisubrs
push
bound
cmp
pop
clc
repnz
adc
iret
inc
add
jl
js
js
mov
mov
mov
xor
mov
xorl
pushf
popa
ror
int
cmp
insl
lcall
cmp
mov
mov
rorb
and
pushf
mov
aam
enter
loope
xchg
movb
daa
das
and
cmpl
and
lds
fsubr
daa
scas
and
pop
bnd
push
lcall
sti
sysret
stos
adc
call
aad
mov
popa
lret
dec
icebp
aaa
ds
scas
mov
imul
lret
testb
jne
mov
sub
scas
push
popf
dec
xchg
mov
jmp
adc
inc
mov
lcall
sbb
xchg
and
int3
jb
imul
dec
repnz
and
negb
xor
stos
je
in
pop
sub
and
xor
inc
sbb
mov
popf
mulb
pop
fadd
int3
sbbb
lcall
pop
add
mov
out
lret
pop
nop
xchg
and
shufps
arpl
jmp
shr
outsb
xchg
clc
stos
fstps
inc
and
clc
movsl
mov
push
inc
aam
ljmp
dec
mov
mov
pop
jmp
out
lock
test
push
ss
repnz
pop
fimuls
out
xchg
stos
aas
mov
pushf
mov
mov
pushf
pop
lea
scas
xchg
fsubr
pop
fs
mov
or
pop
mov
add
jno
out
mov
std
add
lock
sahf
fistpll
scas
fimuls
add
mov
nop
mov
lcall
ficomps
mov
mov
push
aaa
add
mov
lahf
ret
aaa
test
lock
lret
orb
out
jg
push
les
mov
add
sub
dec
xchg
stos
clc
mov
ret
and
mov
mov
cmc
mov
int3
adc
lcall
push
mov
scas
sub
and
dec
jnp
or
nop
push
cltd
or
aas
mov
clc
push
gs
sub
clc
ret
mov
dec
sub
cld
dec
mov
push
ret
cmp
pop
or
mov
test
pop
imul
add
push
sbb
out
loopne
mov
int3
pusha
jne
popa
sbbb
rclb
push
shlb
sbb
or
ret
add
adc
rep
or
dec
rcr
clc
ljmp
loop
sbb
aam
rcrb
lcall
pop
mov
mov
and
and
pop
hlt
mov
roll
repnz
sbb
mov
mov
push
add
out
ljmpw
mov
ret
cmp
aam
lock
repnz
xchg
test
out
test
push
pop
gs
adc
punpckhdq
clc
or
mov
pop
adc
pop
xor
push
ret
push
pop
fsubr
mov
enter
cmp
pushf
adc
mov
push
push
inc
and
cmp
lret
jb
inc
dec
clc
outsl
push
and
and
cmpb
inc
add
jo
fsubl
test
hlt
push
shrb
pop
xor
push
into
pop
mov
ret
mov
faddl
push
jp
push
lock
jnp
addr16
pushf
out
mov
push
pop
add
enter
mov
pop
pop
add
mov
scas
pushf
outsb
inc
xchg
pop
fsubl
jg
add
push
inc
dec
mov
pushf
inc
sub
pushf
add
pop
subb
cwtl
cld
sarl
xchg
xchg
push
pop
call
lods
fcompl
xchg
ja
pusha
les
mov
jno
xchg
rclb
adc
push
mov
int3
scas
into
push
add
orb
mov
cmp
mov
stos
dec
das
scas
cmp
or
mov
stos
add
aad
movsb
mov
bsr
or
out
clc
xlat
fcoms
mov
xchg
mov
pop
pop
mov
mov
mov
gs
fidivrl
mov
lock
cs
and
mov
dec
xor
inc
mov
mov
push
fwait
xor
hlt
mov
test
jle
push
and
xchg
inc
xor
jmp
pushl
fdivrs
and
or
jge
je
adc
cwtl
sti
pop
or
ficompl
inc
clc
add
ss
xchg
pop
sbb
mov
in
mov
push
les
xor
lcall
push
push
xor
dec
fmull
ljmp
icebp
fistpl
pop
imul
or
out
out
fisttpl
pop
aad
push
call
pop
or
dec
imul
push
mov
or
fsubs
mov
lods
mov
nop
mov
push
adc
fnstenv
cld
mov
test
push
in
mov
add
inc
pop
sub
or
stos
stos
mov
jnp
xchg
push
enter
xchg
ljmp
pop
test
push
popl
flds
add
and
pop
sbb
imul
push
fcoms
mov
xor
mov
pop
out
cmpsb
test
pop
nop
push
push
or
pop
ljmp
fstps
fldenv
jg
mov
enter
nop
flds
mov
scas
hlt
sahf
mov
mov
jmp
sbbb
loop
cwtl
mov
inc
shll
pop
and
stos
mov
lock
cmp
scas
pop
or
cli
aaa
pushf
jbe
mov
sbb
inc
outsl
push
mov
pop
rcl
loopne
pop
dec
jecxz
sub
sub
mov
es
mov
and
mov
or
cmp
xchg
scas
pushf
mov
xchg
hlt
rdmsr
scas
mov
mov
ficompl
lock
pop
push
lret
cwtl
test
stos
xor
cld
frstor
cmp
push
cmp
fidivl
mov
xchg
dec
push
lret
xor
lcall
pop
mov
adc
or
popa
fwait
mov
xor
mov
out
pop
adc
mov
xchg
or
xor
aam
pop
pop
push
or
xor
mov
dec
push
hlt
fdivr
xor
adc
cmp
pop
mov
popf
je
lret
ds
fidivl
mov
ds
add
push
mov
fimull
push
arpl
out
popa
add
pop
push
jnp
shlb
push
jns
mov
and
ljmp
shlb
push
mov
ret
xor
or
rcr
ficoms
mov
push
loop
mov
push
pop
mov
xchg
dec
add
in
lock
out
add
mov
aas
mov
mov
adc
stos
and
sbb
mov
add
pusha
into
test
rolb
mov
inc
cli
pusha
mov
mov
mov
shrl
ret
xchg
outsl
xor
cwtl
mov
mov
dec
push
dec
sub
adc
test
push
sarb
mov
push
push
add
mov
mov
add
adc
adc
decb
mov
ficompl
inc
jge
fxch
push
rcrl
sbb
ret
push
ljmp
and
jp
ret
ret
dec
cwtl
ficoms
mov
aam
xchg
inc
add
add
lahf
jb
cmp
mov
int3
cmp
add
shlb
and
sub
xchg
shl
sahf
loop
or
stos
stos
out
shr
bound
pop
rcr
mov
iret
and
and
arpl
or
xchg
cmp
fsts
ret
mov
rcrb
leave
shlb
sub
push
push
xor
sub
jge
sbb
cld
or
mov
push
call
lcall
and
jbe
xor
xchg
fwait
jnp
int3
mov
jae
jp
push
cmpsb
push
sbbb
xchg
test
jb
mov
in
jecxz
mov
pushf
hlt
in
sub
sub
negb
push
mov
ss
add
sarl
or
in
repnz
adc
fsub
lret
push
call
push
scas
xor
mov
mov
sti
into
scas
jns
mov
mov
dec
dec
cli
xchg
mov
mov
adc
es
outsb
dec
out
xchg
or
jno
int3
pushf
dec
xor
xor
mov
mov
push
mov
dec
xchg
inc
les
fisttpl
repz
pop
enter
lcall
adc
decb
xchg
adc
out
or
fstp
outsb
ljmp
push
scas
repnz
cmp
pop
sbb
fstps
arpl
push
rclb
lock
in
js
xchg
test
pop
repnz
pushf
ds
pop
xchg
cmp
mov
cmp
mov
push
test
pop
mov
push
lcall
add
fdivr
imul
and
ljmp
push
test
mov
sub
sahf
ds
or
mov
clc
push
pop
lahf
push
mov
sbb
inc
stos
lret
ja
sahf
mov
insb
fadd
dec
inc
push
lock
jno
push
cwtl
scas
fisttpl
or
fimuls
fdivs
inc
fs
dec
fisttps
nop
dec
scas
shlb
outsb
lret
scas
or
push
jp
jg
clc
aad
js
leave
fcoms
pop
shlb
out
adc
sub
ficoml
loope
dec
or
data16
xchg
fisubs
push
out
ret
push
insl
cmp
test
jbe
push
fiadds
pop
lds
das
mul
xor
or
push
std
cmp
mov
popf
mov
or
and
cmp
cmp
nop
imulb
test
xor
mov
push
enter
in
push
shlb
dec
mov
aas
add
sarb
repnz
pop
adc
fcmovb
inc
int
clc
pmuludq
pop
xchg
mov
dec
cmp
xchg
push
pop
and
into
cmp
cwtl
enter
mov
or
out
call
shll
mov
pop
loope
sarl
pop
inc
ljmp
fidivs
test
stos
xchg
push
and
jne
pop
push
cli
ljmp
gs
std
sahf
repnz
mov
pop
out
push
mov
shlb
mov
xchg
std
fwait
pop
into
movsb
mov
or
cmp
pop
shll
dec
test
cmp
fiaddl
cltd
hlt
or
cwtl
mull
ret
push
pop
push
fstps
sub
add
push
or
and
jae
adc
pop
sub
stos
in
and
inc
lret
shl
sub
add
dec
pop
pop
inc
and
cmpsb
sbb
mov
mov
mov
mov
test
xor
push
mov
mov
jnp
fcompl
ret
xchg
pop
pop
jecxz
lock
lret
mov
int
enter
nop
lea
je
lcall
lret
out
dec
stos
cmp
idivb
out
jo
sahf
xchg
scas
insb
inc
lock
mov
ret
int3
loopne
push
mov
popa
mov
ficompl
ss
pop
and
add
hlt
clc
mov
jp
cld
jb
rorb
xor
pop
lock
xchg
lret
lahf
jnp
sub
xor
push
lcall
insl
and
mov
sti
push
push
push
pop
repnz
test
aam
cmp
aam
and
adc
lea
loop
lcall
sub
sar
push
sub
cli
mov
fcmovnbe
mov
mov
test
pop
cli
push
nop
sub
pop
call
sahf
mov
aad
xchg
push
fisttpll
mov
fadds
loop
add
push
or
jecxz
add
add
lret
cli
sbb
sub
cwtl
xchg
sar
xchg
or
xchg
cmp
rol
call
xchg
ret
sti
lret
push
fsubr
out
in
add
aaa
push
xor
mov
ljmp
stos
xchg
les
rclb
adc
outsb
cld
mov
or
loope
imull
mov
mov
aam
push
data16
ljmp
mov
or
ret
mov
or
cld
out
test
frstor
popa
jae
mov
lret
cmp
or
nop
pop
push
lock
sbb
mov
or
ljmp
add
mov
mov
lods
rorb
sub
jbe
jp
adcb
mov
jb
add
xchg
inc
push
jp
les
rcr
dec
inc
mov
jbe
roll
sbb
xor
mov
mov
rol
repz
mov
pop
fsubr
or
pop
or
ror
and
fisubl
sti
daa
xchg
fstps
shrb
inc
fcompl
mov
aam
or
aam
repz
jmp
ds
fdivl
mov
test
mulb
pop
xor
mov
pop
sbb
pushf
ret
xor
or
lcall
pop
or
lcall
push
repnz
xor
add
int3
mov
push
jns
sete
ret
lcall
mul
fldt
jnp
or
fs
cvtps2pd
jge
fidivrs
bswap
push
pop
mov
xchg
mov
adc
shl
mov
ljmp
mov
inc
pushf
std
insl
and
push
push
cmp
out
adc
and
push
push
lcall
mov
in
xchg
pop
sub
clc
scas
mov
ret
dec
stos
cwtl
movsl
dec
addr16
aas
aad
add
cld
data16
push
or
pop
jb
mov
es
movsb
push
andl
pop
pop
pusha
pop
push
sub
push
push
and
imul
push
add
mov
out
dec
pop
mov
stos
pop
pop
fdivl
mov
jmp
and
push
mov
aas
push
hlt
or
into
mov
aas
dec
add
xlat
push
neg
xchg
cmp
add
hlt
imul
inc
inc
out
add
adc
cli
jno
imulb
sar
xchg
mov
sahf
fimuls
jnp
sbb
adc
or
or
cmc
ror
fcomps
sbb
push
xchg
jecxz
push
xorb
xchg
sarb
lods
xor
int3
insb
dec
inc
dec
out
aas
inc
or
fcmovnbe
sbb
stos
dec
xor
cld
or
lea
xor
enter
xor
pop
stos
pop
inc
xchg
lcall
lcall
in
fildll
xchg
cmp
lcall
push
popa
loop
xchg
or
addb
xchg
stos
stc
mov
mov
mov
pop
lods
arpl
lods
push
xchg
inc
pop
or
frstor
call
adc
pmulhw
cld
cmp
enter
push
pop
fdiv
sbb
icebp
aam
into
sahf
mov
lcall
fdivrs
mov
rcl
push
into
lods
leave
push
xchg
loope
fldcw
inc
mov
inc
fdivrl
stos
mov
int3
stos
and
mull
cmp
call
insl
aam
jne
push
ret
xor
pop
dec
jnp
es
dec
pop
aas
scas
mov
sarl
xchg
or
testb
xor
mov
icebp
pop
cld
nop
dec
mov
ror
xor
cld
out
sub
add
dec
cmp
add
insb
mov
enter
movb
cmp
lret
sbb
dec
mov
call
scas
lock
cmpsb
or
push
imul
lcall
fcmovnbe
lss
mov
out
jb
out
shlb
fldcw
mov
mov
cmp
mov
add
and
mov
fs
jmp
inc
shufps
jp
add
push
push
mov
mov
sbb
cs
sti
xor
cmp
fdiv
pop
sbb
stos
incb
mov
int3
pop
mov
xor
xchg
enter
cwtl
stos
mov
pop
sbb
cld
pop
push
repnz
jnp
repnz
es
stos
call
push
push
xor
enter
xor
add
flds
ficoml
clc
xor
aam
test
fiadds
xchg
mov
ds
pop
mov
enter
xor
in
adc
cmp
pop
or
repnz
sbbl
mov
or
mov
mov
push
fdiv
fsubrs
sti
gs
rclb
fldt
or
cmpsl
add
repz
push
push
mov
les
nop
call
into
jmp
push
imul
push
fdivrs
pop
push
or
pop
jg
les
faddl
lock
fst
mov
pop
mov
and
gs
push
add
repnz
adc
inc
test
pop
push
hlt
add
mov
lcall
testb
clc
rcl
jmp
pop
loop,pn
out
js
test
pop
sbb
hlt
add
mov
fsubr
jns
add
rcrb
inc
push
lcall
arpl
cmp
aam
clc
xchg
sbb
sbb
out
add
or
clc
sti
mov
pop
pop
shl
les
sar
popa
adc
fcoml
cmp
iret
pushf
in
sbb
imul
shl
mov
ljmp
inc
mov
test
lcall
fs
cmp
fisttpl
add
rcl
cvtpi2ps
pop
sub
bound
push
fiadds
call
in
cmp
push
push
pop
in
fstpt
mov
pop
rcll
fimuls
mov
dec
clc
aas
push
stos
fidivrs
test
pop
cld
mov
fmul
movlhps
scas
ret
cmp
pop
call
int3
or
adc
pop
pop
mov
jp
hlt
jns
lock
xchg
pop
cli
pop
into
xchg
into
repnz
sbb
adc
add
cmp
mov
fs
xor
sbb
sbb
xchg
bound
dec
pop
repnz
push
imulb
stos
ss
sahf
pushf
sbb
push
xchg
jp
push
rcr
rclb
xor
cld
sahf
sti
fcmovb
or
out
dec
repnz
mov
lret
pop
add
clc
iret
popa
dec
push
sub
cmp
pop
and
and
lds
and
clc
pop
popa
push
lcall
test
test
clc
pop
cs
xchg
xlat
enter
repnz
mov
xlat
xor
movsl
psubusb
mov
gs
sahf
shrb
ret
sbb
adc
sbbl
jae
stos
clc
push
or
lock
dec
enter
sarl
lret
dec
jb
jbe
subb
das
pop
sahf
xchg
mov
or
loop
jp
push
cmp
mov
stos
aas
and
ljmp
push
xchg
add
push
push
mov
aam
xchg
rcrb
fsubrs
xchg
fisttps
jge
out
push
ret
add
mov
pop
or
int
pop
ljmp
test
mov
in
cmp
rsm
mov
mov
mov
mov
mov
xchg
sub
xchg
cvtps2pd
push
loope
jg
fdivp
mov
rcrl
mov
mov
adcb
sub
xchg
or
pop
scas
addps
push
cltd
dec
xchg
cs
cmp
mov
xchg
cld
test
lret
pop
dec
scas
jmp
loope
bnd
mov
cmp
mov
jp
shrb
lret
and
mov
mov
faddl
ficompl
pop
inc
cmp
test
push
les
xchg
push
jg
nop
gs
xchg
lcall
push
xchg
rcrb
addb
lock
testb
popf
or
pop
scas
sbb
lret
adc
fcomps
repz
mov
test
loope
dec
ret
and
add
pop
popf
cmp
lock
mov
loop
mov
mov
pop
xor
pushf
lret
push
into
testl
jo
mov
push
mov
mov
add
mov
mov
loope
notl
aad
pushf
ret
pop
aad
aas
das
xchg
dec
and
jno
mov
fisttpll
enter
testb
lcall
inc
push
call
pop
inc
mov
nop
hlt
jnp
pop
push
mov
mov
mov
jbe
scas
in
lretw
insl
lods
xor
cmp
idivb
push
mov
loopne
add
mulb
inc
jb
sbbl
inc
stos
pop
mov
int
mov
je
push
addl
les
ljmp
aaa
xor
push
fsub
add
ret
stos
test
pop
fcomps
outsl
clc
pop
sbb
mov
pop
pop
in
xor
sarb
adc
ljmp
mov
aaa
rclb
dec
xor
into
shlb
mov
or
mov
pop
mov
stc
je
mov
cmp
out
cmp
call
xchg
imul
or
loope
pop
push
aam
jmp
jo
add
sbb
test
fdivr
pop
fimuls
xchg
cmpsl
sbbb
fsubs
imul
test
notl
fwait
or
cltd
mov
xchg
add
mov
push
mov
aaa
insl
ss
ficomps
xor
repnz
ret
cmpsb
inc
shl
add
add
push
add
pop
pop
aam
fldcw
lods
sahf
pop
setbe
les
dec
ljmp
nop
add
push
and
or
sahf
fistpl
mov
pop
xor
nop
imul
mov
cmpsb
pop
aas
aad
mov
shlb
gs
in
ret
dec
ljmp
pop
jmp
push
jp
pushf
pop
xchg
pusha
mov
add
xchg
mov
push
add
shl
ret
lret
mov
or
jge,pn
shlb
or
mov
data16
inc
in
mov
movsl
int
cwtl
pushf
inc
js
aad
xchg
xchg
dec
dec
pop
dec
sti
arpl
or
dec
mov
pusha
lods
arpl
es
fmuls
lahf
es
pop
fisubrl
and
nop
test
push
xor
mov
sbb
add
or
or
scas
loope
and
out
mov
std
mov
rclb
ds
push
cld
cwtl
inc
jle
add
adc
pusha
es
je
ret
push
dec
jge
xor
call
popa
push
mov
test
filds
cmp
inc
xchg
push
rol
mov
push
jbe
cmp
fwait
and
cs
out
call
mov
xor
or
xorl
dec
fistpl
fiadds
xchg
dec
mov
mull
inc
iret
iret
or
inc
jp
cmp
stos
pop
xchg
inc
daa
push
adc
ljmp
adc
test
fcmovbe
push
dec
push
mov
outsl
push
mov
sbb
pop
push
ficompl
adc
aas
idiv
inc
pushf
call
xor
addr16
mov
dec
fs
bound
test
push
xchg
pushf
and
pop
mov
push
js
inc
sub
push
pop
adc
in
mov
mov
mov
sti
pcmpeqb
test
ret
inc
push
push
jg
lret
push
in
dec
test
nop
adc
inc
adc
je
push
notb
mov
mov
sbb
pop
push
lcall
push
and
repz
rolb
dec
and
adc
hlt
mov
inc
cld
add
mov
ds
into
push
lcall
enter
shr
mov
jb
adc
pushf
mov
xchg
ret
pop
mov
fistl
and
pop
xchg
lahf
mov
or
pusha
mov
in
leave
push
adc
pop
sbb
lock
xchg
push
mov
repnz
data16
mov
lret
mov
xchg
filds
call
push
and
xchg
jp
ffreep
imul
lods
mov
leave
subb
mov
ficompl
push
ret
push
inc
xor
or
mov
les
xchg
mov
and
add
push
jns
decb
pop
enter
push
scas
std
xbegin
push
sahf
gs
imul
mov
xchg
or
xchg
pop
das
int3
rcr
pop
inc
jo
scas
leave
sub
mov
and
mov
out
cwtl
push
xlat
dec
adc
rcrl
and
xor
push
mov
pop
xchg
push
push
jg
pop
cmp
mov
cmc
repnz
clc
int
xchg
loopne
lock
leave
enter
ljmp
or
xchg
es
repnz
lock
in
dec
addl
cmc
sub
jmp
add
rcll
add
sbb
mov
in
push
shufps
xor
jae
inc
inc
mov
add
or
xchg
mulb
lock
sarl
mov
emms
and
ficoms
push
and
sbb
or
xor
sbb
jge
push
ljmp
in
mov
xchg
mov
lret
ficoms
out
pop
xchg
or
dec
or
xor
add
or
sub
push
cld
into
push
xor
mov
jnp
setbe
and
andl
outsl
imul
es
aam
jl
push
sub
les
adc
shrl
scas
and
xchg
mov
jae
push
and
or
out
xchg
sbb
jae
push
nop
lret
push
xchg
int
xchg
push
out
int3
cld
lret
mov
call
leave
hlt
hlt
popf
enter
loopne
push
test
jno
xchg
mov
fld
mov
sub
fnstenv
shll
cltd
cmpsl
test
arpl
insb
fmul
out
add
gs
movsb
cwtl
in
pop
push
in
fscale
ret
test
jns
nop
mov
sub
stos
mov
fstpl
enter
cmpsb
cwtl
outsl
and
rcll
jno
fisubrl
xor
pop
dec
push
xor
mov
stos
js
push
in
lcall
push
mov
xlat
mov
ljmp
lret
rolb
cmp
pop
pop
cmp
hlt
xchg
call
arpl
enter
add
or
in
mov
aam
js
or
inc
and
out
in
jb
clc
mov
pop
stos
sub
int3
adc
mov
jg
xor
int3
fsubrl
xchg
fs
rol
and
fisubl
sub
mov
jnp
push
pop
sarb
clc
aam
xchg
sahf
mov
jbe
xchg
pop
int3
pop
bound
pushf
stos
aas
mov
push
pop
out
pop
mov
into
cli
and
sarl
stos
push
call
cld
jbe
jg
lcall
lret
mov
xchg
cld
mov
pop
mov
addr16
lock
pop
ljmpw
and
pop
xchg
xor
push
push
mov
cmp
or
dec
xchg
fmulp
or
addl
ret
out
shlb
push
fisubl
or
adc
fwait
and
outsb
inc
scas
shrb
imul
mov
aam
fcomps
mov
int3
rolb
lcall
push
repnz
sti
fcmovnu
or
and
fstpt
xchg
lock
rclb
pop
dec
sbb
sarb
xlat
push
pusha
lret
or
out
adc
add
fiadds
fdivrl
test
cld
stos
negb
adc
or
jp
xor
shl
mov
add
inc
or
test
mov
fadd
mov
mov
xchg
ljmp
sti
rcl
pop
push
mov
les
ss
int3
ja
dec
or
scas
sarb
sbb
mov
out
mov
lret
enter
or
out
ret
mov
pop
jno
ficoml
cmp
movsl
hlt
rcrb
xchg
lcall
lret
std
lods
sti
pop
or
hlt
ljmp
mov
stos
rcl
in
xchg
cmp
or
in
jbe
and
fs
lcall
fcmovu
fmulp
lret
stos
xor
or
enter
xor
dec
sarb
xor
pop
or
sub
dec
push
fcomps
pop
xor
arpl
push
into
fidivs
dec
ds
test
incb
rorb
arpl
arpl
and
mov
ds
fadd
add
inc
cli
pop
pop
cmp
ror
pop
faddl
or
sarb
mov
cvtdq2ps
fidivs
push
into
or
test
and
loopne,pt
enter
push
inc
xor
push
scas
cmp
enter
cmp
les
mov
mov
mov
clc
mov
out
in
shlb
stos
das
pushf
cmc
imul
or
push
pop
aas
xchg
add
push
test
ret
dec
mov
sti
inc
mov
enter
ret
sar
fstpt
enter
pop
add
imul
lcall
fcompl
js
mov
cmp
notb
daa
mov
lods
arpl
pop
in
lret
ljmp
push
xchg
mov
ficomps
enter
inc
dec
cmp
inc
fcoms
and
push
iret
pop
fadds
rolb
mov
stos
and
ret
push
lcall
ret
cmp
xchg
add
sub
loope
hlt
push
mov
or
pushf
inc
rorb
imul
scas
mov
fcompl
pop
int3
into
popa
xor
shll
mov
push
xchg
ljmp
xor
or
xchg
cmp
push
xchg
xchg
iret
add
xor
faddl
call
inc
and
add
cmp
mov
cwtl
outsb
clc
call
pop
fiadds
and
push
mov
mov
inc
es
push
add
xchg
mov
ficoml
test
mov
mov
jb
mov
xchg
sbb
clc
jg
fimuls
inc
pushf
mov
hlt
out
xchg
test
add
pushf
push
mov
call
in
sub
mov
mov
stos
mov
sar
push
push
cmp
lock
push
scas
fidivs
rclb
xlat
xor
test
rcr
mov
xor
mov
mov
mov
push
out
inc
ret
inc
fcom
into
sar
jecxz
pushf
imul
mov
jmp
cmpsl
mov
mov
push
call
ret
mov
test
or
or
lret
ret
mov
or
ds
mov
dec
imul
mov
cmp
jbe
or
dec
push
push
cmp
popf
push
popa
lcall
jp
lret
add
dec
push
dec
leave
mov
xchg
incl
mov
jmp
jb
lock
cmp
test
pushf
js
cltd
into
cmpsl
rolb
or
aas
or
stc
lret
ret
ror
fiadds
xor
xchg
push
mov
push
mov
es
clc
pop
scas
inc
mov
ljmp
inc
pop
push
out
repnz
add
cwtl
mov
fcom
in
mov
call
cmp
test
cmp
pushf
int3
mov
pop
adc
cwtl
ret
mov
into
push
scas
add
pop
sahf
fmulp
ficompl
loope
mov
mov
push
add
lret
pop
xchg
int3
adc
cmpsl
mov
bnd
jno
test
pushf
push
or
pop
pop
ret
mov
bsr
sub
sbb
adc
aas
or
lret
rcrb
ljmp
add
sbb
push
push
xor
xchg
repnz
fdiv
arpl
pop
sar
inc
and
pop
frstor
mov
outsl
js
out
sub
add
and
cmp
pop
push
test
and
ss
fdivp
mov
mov
push
stos
out
pop
sbb
jbe
jbe
and
call
pop
jl
stos
mov
sub
mov
lahf
fs
mov
dec
dec
pop
pop
and
js
icebp
fidivrs
xor
jmp
add
imul
cld
popa
push
xchg
mov
sti
push
hlt
inc
push
cmp
test
ret
imul
aam
rorl
xor
mov
mov
ljmp
lcall
mov
or
insb
enter
or
mov
and
xchg
scas
xchg
popa
stos
adc
ud2
cmp
mov
scas
out
push
push
jg
cld
fadd
push
pop
aaa
sbb
mov
dec
sbbb
addr16
fwait
sti
icebp
fdiv
lret
mov
sbb
nop
mov
mov
jns
mov
rcrb
and
add
mov
adc
divl
stos
push
incb
and
lret
lods
or
pop
mov
xlat
mov
jg
pushf
test
add
fdivs
adc
sbb
subb
mov
lret
jbe
ret
inc
into
mov
aam
fcoms
mov
cmp
mov
lock
lret
imul
pop
sub
mov
insb
test
dec
xor
fisubrs
sub
scas
in
test
xlat
pop
push
jmp
lcall
mov
sbb
sahf
push
xchg
fidivl
jmp
mov
shrl
clc
jg
and
fdivl
call
mov
das
setl
loopne
push
icebp
notb
sub
loopne
sbb
rcl
gs
adcb
ss
ret
or
pop
nop
or
or
xchg
out
dec
in
out
dec
jl
mov
mov
pusha
mov
rclb
imul
sahf
sub
or
cmpsb
stos
dec
lock
rol
outsb
sti
lret
cmp
push
int3
push
add
pop
idiv
mov
mulb
inc
call
or
or
mov
push
mov
push
add
test
movsl
mov
cmp
push
and
pcmpeqw
mov
jo
push
lock
sti
mov
inc
sub
mov
xchg
shrb
add
shl
mov
dec
mov
test
xchg
fdivrs
int
pop
js
loope
mov
nop
or
pop
divb
jo
fdivl
pusha
pop
add
mov
pushf
push
pop
cmp
aam
push
mov
and
sbb
sub
mov
mov
pop
ds
rcrb
add
pop
inc
inc
aam
test
xchg
lret
cwtl
out
clc
push
inc
xchg
les
mov
lret
add
mov
stos
push
xchg
sahf
pushf
push
xor
push
xchg
cmp
stos
into
out
aam
jno
or
xchg
adc
xorl
push
xchg
dec
lret
pop
jmp
sar
push
mov
jbe
mov
into
sarb
cltd
adc
inc
fsubr
xchg
add
ss
nop
pop
setb
lock
into
clc
jae
rol
imul
mov
cmp
hlt
ret
jbe
sub
fdivl
rclb
psrld
jnp
jne
fsubrs
enter
xor
rcrb
hlt
pop
dec
push
mov
mov
pop
xor
mov
repz
pop
xchg
clc
and
das
lcall
addb
mov
lcall
scas
pop
les
or
fcompl
mov
mov
and
or
call
stos
xchg
leave
cwtl
lea
push
cmp
push
pop
lcall
fdivp
mov
jnp
rclb
adc
xor
mov
sbb
or
fiadds
sbb
sbb
hlt
push
and
ret
ljmp
xor
aaa
mov
xchg
xchg
cmpsl
and
sarb
push
int
aam
push
xor
ljmp
xchg
rcl
adc
or
and
aam
sbb
enter
cwtl
pop
mov
xchg
sahf
test
xchg
insl
pop
lcall
shrb
mov
addb
lock
xchg
stc
add
mov
sub
rcl
test
xor
add
mov
push
fdivrl
loop
push
xchg
sbb
mov
push
and
hlt
dec
aaa
xor
push
xchg
sbb
and
mov
scas
or
stc
xor
xlat
rolb
aas
lahf
mov
and
lds
mov
cmp
sar
insb
shlb
push
dec
jg
xchg
repz
rcl
pushf
sahf
inc
sarl
cli
jb
mov
mov
stos
leave
movsl
cli
jnp
pop
pop
in
or
les
adc
xor
cld
mov
jge
xorb
xchg
xchg
adc
stos
clc
ret
sbb
push
jmp
mov
xchg
sbb
daa
das
das
clc
cmp
outsb
adc
andl
cmpsb
inc
mov
enter
push
lock
jge
mov
mov
cld
les
ds
setle
out
lret
jo
outsb
jbe
shrb
mov
jp
ljmp
jecxz
out
mov
pop
mov
aaa
mov
mov
test
orb
mov
dec
imul
cmp
push
lock
jl
cmp
arpl
xchg
cld
adc
or
les
or
out
sbb
loop
lret
adc
dec
dec
out
jle
pop
lcall
insb
and
xchg
jb
test
adc
call
push
psubusw
adc
mov
inc
sub
mov
pushl
orb
or
mov
or
or
pop
push
pop
enter
push
scas
xor
add
decb
imul
cmp
push
mov
pop
ljmp
dec
cwtl
mov
push
movsb
jbe
mov
and
push
push
mov
dec
not
ss
test
inc
mov
or
cvtdq2ps
mov
push
add
add
push
cwtl
adc
out
in
push
and
dec
add
ss
pop
add
inc
mov
push
mov
mov
movsb
sti
mov
adc
push
or
call
out
sbb
call
mov
xchg
sahf
mov
in
notb
clc
pushf
sar
test
lcall
adc
and
icebp
and
addr16
rolb
cmp
ret
push
les
or
shrb
outsb
imul
adc
into
call
jo
dec
mov
dec
call
ljmp
or
sbb
mov
gs
mov
cwtl
out
jg
or
mov
imul
ror
or
sub
pop
rcl
adc
stos
fs
push
xchg
sahf
or
push
mov
mov
and
test
or
hlt
clc
xchg
mov
xchg
sbb
icebp
jle
ret
push
lret
ljmp
data16
cwtl
out
jno
scas
cmp
add
pushf
xchg
int3
add
mov
in
iret
jp
lock
aam
pop
sarb
jge
push
stc
pop
int3
sti
stos
test
into
movsb
mov
push
cmp
xchg
or
rolb
mov
cld
scas
out
gs
sahf
imul
scas
xchg
adcl
stos
push
rcrb
cltd
xor
enter
inc
ret
push
mov
inc
out
pop
push
test
jno
sahf
ficomps
pop
or
add
shrb
jns
mov
daa
lret
or
cld
mov
add
xor
mov
xchg
sar
mov
pushf
mov
mov
pop
push
aad
sarl
pop
mov
push
jns
lcall
pop
fxch
mov
or
lcall
mov
add
cli
sahf
or
mov
icebp
jmp
sbb
les
mov
out
xlat
fcmovne
push
push
mov
pop
out
inc
sahf
sarb
push
ds
cwtl
fmull
pop
stos
scas
and
sbb
fisubrs
jmp
pop
lcall
shrb
nop
stos
es
cwtl
sbb
rcrb
add
xor
xchg
lret
xchg
repnz
das
mov
hlt
cli
aad
mov
std
stos
imul
sahf
fmull
stos
xchg
arpl
or
push
into
xchg
xor
test
or
int
xor
or
pop
pop
lock
outsl
out
jnp
decb
or
mov
fcompl
fdivl
out
or
js
xchg
push
insb
repnz
out
aas
jb
mov
push
cmpsb
mov
out
in
fbstp
cmpsb
in
sti
scas
lcall
lock
ret
push
jb
cld
xchg
push
fdivrs
cmp
call
push
out
loop
mov
fdivrs
rol
popa
mov
pop
pushl
out
pop
fbstp
sahf
xor
ja
sahf
pop
mov
mov
and
out
xchg
mov
cmp
cmp
rcrb
and
scas
ret
dec
xchg
enter
cwtl
call
mov
fdivrs
rorl
lods
pop
mov
and
scas
adc
xchg
fcoms
movsl
sbb
cmp
fcompl
int
lcall
fwait
xchg
xchg
jecxz
sub
faddl
push
and
jo
scas
lret
popf
add
aad
clc
pop
enter
and
lret
aaa
lds
ret
scas
pop
setb
pop
jp
stos
xor
sahf
mov
cmp
enter
xchg
add
add
fwait
rorb
fs
jb
push
dec
jb
cmp
incb
out
popl
and
test
jp
scas
jge
push
pop
mov
push
inc
cwtl
ss
or
and
xchg
xchg
insl
inc
jae
fnsave
lcall
mov
lret
mov
fidivs
pushf
imul
loopne
mov
adc
test
sbb
add
mov
pop
xchg
xor
inc
cwtl
cs
add
pop
jmp
push
jg
loope
xchg
lock
cwtl
add
mov
addr16
int3
add
inc
mov
clc
or
or
pop
aaa
inc
lcall
mov
add
push
ss
lcall
pop
test
fcomps
imul
fcompl
xchg
dec
cwtl
mov
ds
test
mov
cmp
pop
push
cmp
stos
push
rclb
pop
and
and
ljmp
mov
mov
rcll
xchg
mov
clc
pop
jo
sub
push
xchg
sbbb
shll
xor
mov
sti
leave
or
fimull
push
lea
je
into
push
hlt
mov
sbb
mov
xor
rclb
pop
jnp
mov
lods
imul
data16
xchg
sahf
pop
sbb
imul
clc
and
movl
push
xchg
add
stos
push
rorl
inc
outsb
test
mov
ret
cwtl
int3
push
and
out
mov
push
fsubl
push
xchg
in
mov
jns
pop
mov
pop
xchg
mov
clc
cld
lret
pop
aam
xchg
pusha
nop
ljmp
scas
push
clc
nop
dec
pop
stos
dec
in
pop
adc
mov
sarl
clc
push
les
add
push
in
mov
pop
or
push
push
lfs
aam
add
xor
mov
daa
mov
pop
and
push
pmaxub
int3
mov
mov
sti
pop
add
clc
cwtl
clc
iret
xchg
clc
cmp
add
push
fildll
xchg
add
clc
lds
mov
lret
or
mov
pop
jge
mov
and
push
and
lock
iret
fcompl
jbe
jne
adc
fmull
lcall
push
cmp
enter
rcrb
scas
hlt
cld
mov
mov
fidivrs
mov
repnz
pop
stos
add
sahf
repnz
fisubl
rclb
pushf
mov
lret
xchg
lcall
mov
cmp
ret
lret
ret
into
push
test
shr
test
dec
adc
push
push
inc
jnp
pop
cmpsb
sahf
pop
and
lahf
mov
mov
lret
pop
aaa
dec
into
fimuls
pop
stos
push
fidivl
pop
push
test
push
subl
fwait
dec
pop
stos
dec
jbe
test
adc
into
call
xchg
mov
push
mov
movsl
pop
imul
mov
hlt
test
sbb
ljmp
int3
and
sahf
push
mov
call
pop
lock
mov
pop
rcrb
add
cmp
pop
cmp
xchg
add
lock
mov
out
lcall
outsl
scas
mov
or
push
push
push
xor
xor
fdivrp
cmpsl
mov
mov
mov
lret
lcall
movl
push
clc
mov
movsl
mov
xchg
divb
insb
ret
cmp
pop
scas
lret
fcomps
or
mov
repz
rol
lret
mov
mov
enter
cmp
add
xchg
cli
rolb
xchg
cmp
rcrb
out
pop
cmc
add
sahf
pop
lock
scas
cmp
clc
jmp
add
lret
push
sti
cmp
fcoms
pop
jb
push
lods
or
imul
lcall
mov
rolb
stos
outsb
out
fcomps
push
fidivs
movsb
pop
stos
test
cmp
sahf
enter
xchg
jp
add
aam
push
add
sarl
cld
pop
pop
test
stos
push
mov
jmp
test
roll
add
cmp
out
clc
into
jp
test
lcall
push
pop
push
les
push
mov
ljmp
add
sub
test
divl
mov
dec
ljmp
clc
aam
out
jo
fmulp
dec
cwtl
xor
movswl
pop
mov
push
daa
push
imul
push
inc
test
inc
pop
jge
push
int3
xchg
scas
pop
jae
push
test
jbe
dec
jbe
jp
popa
ljmp
or
push
mov
insl
dec
or
inc
test
jmp
scas
pop
or
rorb
pop
mov
jb
fdivr
inc
ffree
test
jmp
out
add
dec
cwtl
xor
cs
cwtl
xlat
jecxz
cmp
add
nop
add
lea
scas
jecxz
lret
or
call
out
outsb
or
push
test
jp
inc
sbb
fcomi
insb
lret
xor
mov
aas
mov
xor
add
cmp
mov
xchg
sarb
stos
fimuls
mov
xor
js
aam
fistpll
push
sti
xor
test
mov
aas
stc
ljmp
or
xor
mov
pop
mulb
push
pop
lahf
pop
inc
popa
stos
xchg
ljmp
lock
or
jmp
fisttpl
sbb
or
notb
les
or
stos
push
stos
mov
fdiv
pusha
test
movsl
push
xchg
cs
and
xor
call
dec
mov
divb
and
mov
jecxz
cwtl
inc
cli
out
lods
ljmp
push
mov
not
jb
mov
mov
inc
push
clc
rolb
pop
ss
out
mov
movb
and
idivb
push
or
mov
push
mov
push
lret
adc
emms
mov
jbe
jbe
jp
lahf
ret
push
lret
adc
lea
jmp
stos
xchg
push
xor
jmp
adc
sahf
imul
fs
cmp
repnz
rorl
rolb
push
aam
xchg
pop
jns
enter
repnz
inc
mov
jne
xchg
adc
ja
mov
xor
and
enter
or
cld
push
int3
call
xchg
fadd
mov
push
lods
push
jmp
or
pop
mov
rcrb
push
imul
ljmp
scas
fcmovne
lret
pause
xchg
xchg
pop
popl
dec
add
pop
or
test
out
rcrl
dec
jg
sbb
sub
mov
lcall
pop
int3
out
adc
xor
and
ja
mov
stos
push
stos
inc
mov
stos
and
loop
xchg
and
divb
jecxz
aam
cmp
mov
hlt
pop
sub
jecxz
je
xlat
in
inc
sahf
or
sub
stos
pushf
syscall
xchg
mov
ja
and
repz
ror
fidivs
jns
rcl
aad
into
pop
out
lret
dec
or
or
insl
pop
and
adc
sbb
pop
adc
xor
stos
push
dec
inc
sbb
xchg
inc
lret
push
addr16
aam
xor
shrb
or
push
push
imul
mov
push
fdivl
aam
jb
fcomp
cmp
mov
ror
std
js
mov
rorb
ret
cmpb
mov
jb
jmp
les
int
push
dec
xorb
clc
sbb
mov
decb
cmp
rcr
xlat
xchg
and
push
mov
out
movsl
cmpsb
mov
lret
inc
hlt
fcoml
mov
mov
xchg
fdivs
inc
and
mov
icebp
bound
int3
adc
dec
push
scas
sti
ss
lcall
fdivl
mov
test
push
pop
mov
stos
sbb
in
shrb
cmpps
repnz
push
rcrb
add
ds
or
int3
mov
cmp
xchg
mulb
daa
push
mov
std
mov
dec
stos
nop
adc
xchg
lret
lret
inc
xor
iret
xchg
xor
push
mov
adc
out
clc
xlat
lret
pop
fsubrl
out
std
pop
inc
sarb
divb
in
gs
out
es
repz
inc
pop
lock
xor
or
icebp
mov
call
int3
stos
add
xchg
mov
mov
pushf
out
loop
mov
aam
and
push
xchg
jg
or
add
imul
enter
nop
jo
mov
jb
cwtl
xchg
push
pop
add
lret
xchg
pop
ror
mov
fiadds
les
cmp
loopne
pusha
negb
cmp
mov
loopne
adc
stos
out
fidivs
ljmp
push
or
cmp
fdiv
mov
pop
jp
ret
repz
roll
pushf
and
enter
out
or
mov
xchg
sbb
xchg
adc
xchg
clc
les
push
cwtl
cmp
cld
rclb
push
ljmp
mov
sub
mov
xchg
mov
rcrb
and
dec
pop
les
add
inc
pop
aas
mov
nop
ficompl
push
stos
or
shl
std
out
xchg
jp
mov
xor
cwtl
xor
dec
test
mov
in
sbbb
adc
stos
faddl
scas
aad
sti
dec
ljmp
mov
rcrb
cwtl
jnp
cld
sub
out
mov
test
pop
sbbb
sub
or
fxch
push
mov
xor
xchg
push
or
stos
xchg
dec
call
stos
mov
imul
cmpl
ds
xchg
push
mov
les
fcomps
fisubrl
sub
sbb
nop
sbb
push
mov
jb
cwtl
movsb
dec
or
xlat
and
xchg
or
stc
push
out
xchg
add
out
pop
aam
fbstp
ljmp
sarb
mov
cmp
rorb
push
rclb
and
iret
mov
clc
xchg
aam
hlt
ficomps
out
les
aam
or
xchg
sub
xchg
ficoml
adc
fsubrs
sahf
push
pop
mov
push
xor
xchg
mov
pop
xchg
mov
mov
outsb
xor
lea
ljmp
clc
adc
cmp
pushf
repnz
mov
insb
pusha
pop
mov
dec
mov
and
xchg
test
add
inc
mov
pop
fcmovu
push
fbstp
mov
pushf
xchg
shlb
push
nop
xchg
push
call
push
dec
push
xchg
sbb
and
pusha
jmp
rorl
ficomps
les
dec
push
fwait
dec
popa
repz
pop
cmpl
js
test
sub
mov
or
jmp
lret
mov
ret
push
nop
xlat
dec
jmp
lcall
outsb
push
fnsave
jecxz
adc
push
push
sbb
pop
cmp
ficompl
jb
or
bound
pop
and
sbb
jge
pop
les
sub
mov
lcall
jl
fidivrl
repnz
stos
inc
mov
add
sbb
mov
push
jmp
mov
pop
lock
movb
testb
add
push
mov
push
pop
sbb
cmp
or
aas
and
out
jo
add
out
mov
cmp
dec
aaa
inc
jbe
jp
jnp
mov
push
lock
sub
pop
xchg
out
xchg
pushl
cmp
test
xor
loope
cmp
loope
in
push
push
faddl
or
mov
inc
test
ds
add
mov
ret
int3
mov
lock
call
aam
test
jmp
out
in
mov
inc
ds
imul
mov
mov
dec
stos
add
pop
cmp
pop
xchg
pop
pop
add
insb
sbb
scas
xor
add
add
cltd
xchg
pop
push
pop
lods
ret
jge
add
fadd
pop
add
jns
push
mov
cmp
xchg
clflush
sahf
lcall
cwtl
call
punpckhdq
pop
test
gs
and
dec
xor
add
enter
sahf
push
stos
jmp
cmpsb
stos
jnp
lock
daa
jb
mov
into
pop
push
pop
jns
aad
inc
jnp
lahf
xor
ficomps
lahf
xchg
repz
lret
enter
fcoml
lock
cmpsl
inc
popf
divb
lds
sar
lods
mov
test
or
push
pop
aas
jge
adc
jmp
xor
pop
test
dec
popf
and
in
cwtl
sub
add
cmp
mov
adc
pushf
cmp
aam
lea
das
pop
ja
ficompl
test
lcall
pusha
dec
hlt
or
inc
mov
ljmp
mov
lock
and
adc
sbb
pop
out
imull
cmp
or
outsl
ror
or
daa
push
pop
dec
fadd
stos
mov
addr16
fwait
insb
push
mov
movaps
enter
call
mov
mov
ds
pop
mov
sbb
notb
fs
xor
mov
in
mov
xchg
lock
sahf
push
ljmp
aaa
mov
or
dec
add
cmp
push
lds
mov
xchg
jno
out
mov
ret
in
or
add
out
je
push
mov
clc
jae
mov
pushf
jge
paddusb
jns
jne
lcall
je
adc
and
jns
mov
mov
out
cltd
pushf
sbb
xchg
fcmovne
push
test
enter
mov
or
rol
int3
xor
cld
incb
add
pop
and
ljmp
mov
test
sub
add
mov
lcall
dec
sub
aam
lcall
fisubrl
xor
test
xchg
mov
ljmp
stos
sarl
stc
cld
mov
out
cmp
or
ret
inc
push
je
shl
rcrb
fwait
add
lahf
fidivs
sub
mov
inc
mov
sbb
cmp
push
setle
lcall
lret
sbb
loopne
ljmp
xchg
lret
inc
xchg
mov
hlt
sahf
push
push
rcrb
sbb
xor
les
aad
call
add
mov
std
lock
pop
jnp
cld
sbb
sar
and
jbe
cmp
ficomps
or
lock
pop
imul
and
mov
lret
ret
push
scas
xchg
xchg
cmp
adc
stc
stc
mov
call
add
cmp
ret
push
ds
cwtl
rclb
push
cmp
push
xchg
fidivl
ror
xchg
lcall
and
xchg
lock
mov
or
stos
ds
and
imul
cmp
mov
enter
cld
jp
rcrb
jae
test
push
mov
sbb
inc
iret
fmul
pop
jo
leave
and
cmp
pop
mov
push
inc
ret
shl
pop
inc
stos
cwtl
xchg
pusha
shrb
push
adc
adc
lret
nop
imul
and
stos
clc
mov
gs
xchg
call
xchg
add
cld
in
fidivrl
sbb
push
pop
or
dec
push
paddb
pop
into
add
sbbl
imul
cmp
xchg
pop
pop
pop
ret
mul
nop
fmulp
jbe
or
lret
mov
jne
ljmp
outsb
mov
or
fcompl
sahf
pop
xor
cmp
mov
xchg
test
test
out
shlb
jns
cmp
lcall
stos
mov
xor
enter
adc
pop
mov
mov
pop
add
pushf
rcrb
fadd
into
pop
icebp
mov
lret
loope
or
bswap
dec
ficompl
rolb
lahf
daa
dec
jl
dec
jp
mov
mov
sbbb
mov
shlb
sti
cmp
sub
stos
lahf
and
fdiv
into
sub
fwait
dec
xor
mov
add
adc
addr16
mov
xchg
pop
js
fcomps
push
cli
cmpsb
fcoms
adc
popf
ds
cs
xchg
cmp
push
aam
mov
not
adc
lea
pushf
pop
mov
pop
test
pushf
or
fmull
ds
push
pop
pushf
mov
cmpl
rcrb
add
ret
push
or
inc
jb
fisttpll
push
jle
enter
int3
ljmp
adc
push
jmp
test
call
mov
push
mov
mov
xor
test
in
pop
add
or
nop
pop
or
mov
fs
push
fmul
gs
int
aad
mov
hlt
add
push
test
scas
pop
add
mov
and
ret
ljmp
insb
jnp
std
fcmovbe
push
fidivrs
ret
cld
add
mov
mov
stos
pop
push
pop
mov
pop
mov
clc
ljmp
mov
sbb
adc
daa
das
cmp
push
jge
mov
pop
jbe
enter
push
aam
dec
adc
or
push
add
cmpsb
fiadds
test
pop
or
mov
mov
xchg
xor
or
out
inc
jnp
in
xor
cli
sahf
call
cmpl
or
lcall
pusha
fmul
aas
fxch
add
push
hlt
clc
jmp
dec
ficoms
jbe
pop
mov
pop
sbb
clc
stos
clc
add
mov
jg
cld
bound
fmulp
aaa
or
mov
push
mov
fdivr
pop
lahf
lcall
push
pushf
push
mov
ljmp
dec
incl
sub
data16
xor
pop
or
mov
rcll
sahf
xlat
inc
push
hlt
ds
ret
push
lock
adc
mov
mov
mov
es
xchg
es
mov
or
inc
sahf
mov
cmpsl
int3
pop
fidivrs
ror
add
xchg
lret
loop
push
les
mov
test
test
add
ss
sahf
lock
xor
rorb
mov
lret
pop
xor
add
addr16
imul
test
gs
lret
lcall
out
push
adc
ljmp
xor
jbe
add
repnz
mov
test
pop
outsb
sarb
cmpsl
lcall
je
xchg
dec
dec
inc
jge
scas
ficompl
ret
pop
int
clc
cmpps
stos
gs
xchg
sub
cmpl
sub
jp
pop
int
dec
cmp
and
fucomip
pushf
ret
pop
cwtl
scas
push
nop
pop
add
jge
xor
loopne
mov
mov
pop
divb
rorb
lock
cwtl
push
adc
icebp
push
cli
xchg
push
mov
stc
push
iret
cld
aas
xor
push
movsb
xchg
xor
mov
rcrb
fcmovb
xlat
adc
dec
into
mov
cwtl
test
mov
pop
es
hlt
xor
dec
les
or
ljmp
mov
push
xor
cld
lock
mov
repnz
mov
xor
xor
pop
setbe
cltd
idiv
push
pop
dec
pop
movsl
pop
insb
loop
or
dec
push
rol
dec
mov
pushf
fdivr
mov
add
nop
jp
call
pop
imul
stos
pushf
dec
cmpsb
push
inc
dec
popa
dec
or
xor
pop
jnp
lock
adc
inc
call
push
xchg
cwtl
mov
fistps
int3
lret
cmc
jbe
rclb
incb
rorb
neg
nop
pop
push
repnz
mov
add
mov
inc
int3
mov
mov
ds
mov
shll
repz
rcrb
stos
mov
sub
mov
add
test
cmpsl
pusha
scas
xor
addr16
sbb
sar
enter
out
mov
daa
outsl
ret
lcall
or
leave
dec
out
xchg
or
jno
add
cmp
push
xchg
jecxz
test
or
xchg
xchg
or
into
cld
stos
cmp
imulb
aaa
outsb
xchg
lret
cmp
int3
repnz
mov
out
or
les
scas
shl
cmc
ds
cmp
push
sbb
push
jb
push
or
jae
jbe
pop
out
out
pop
cmp
sti
sti
sahf
push
jp
mov
ljmp
add
add
imul
mov
pop
xchg
push
idivl
xchg
sar
fld1
mov
hlt
div
test
push
cwtl
sbb
pop
arpl
into
fcoml
mov
repnz
mov
test
dec
mov
enter
scas
sarb
call
mov
fcmove
mov
sbb
xlat
negb
push
int3
stc
data16
aas
clc
fidivrs
cli
jnp
jmp
push
mov
and
shr
lahf
clc
xor
fxch
data16
mov
sbb
mov
jno
fwait
and
rorb
xor
into
arpl
ljmp
lea
pusha
enter
shlb
mov
fcomp
stc
enter
cmp
push
stos
lret
scas
ret
mov
push
mov
or
incb
mov
clc
daa
or
pop
test
aas
jmp
clc
les
jp
lock
push
imul
pop
pop
dec
xchg
fidivs
pop
push
test
or
stos
aaa
mov
xor
inc
jb
pusha
jbe
xor
add
out
sub
mov
gs
and
dec
push
xchg
jnp
rorb
fsubrp
mov
add
jecxz
xchg
addr16
xor
je
lret
inc
int3
and
mov
filds
xor
les
adc
test
pop
cmpsl
aas
ret
lret
mov
cld
mov
xchg
or
cwtl
jg
xor
and
iret
push
movsb
pop
cmp
clc
fdivl
add
lock
mov
test
pop
xchg
mov
push
ret
mov
lret
xchg
arpl
mov
mov
cmp
push
out
jg
push
adc
cmp
int3
and
push
sti
xchg
mov
or
call
sbb
mov
xor
mov
xchg
enter
movsl
pusha
ret
mulb
cmp
mov
jbe
rcrb
pop
and
mov
int3
enter
mov
push
adc
push
push
or
mov
mov
enter
pushf
or
adc
pop
push
pop
scas
incl
clc
stos
lret
push
and
mov
jb
mov
cmp
fsubrs
adc
test
ret
nop
push
lcall
cli
mov
ret
loop
pushf
fisttpl
and
popf
fdivrs
fdivrl
mov
movsb
in
dec
fs
mov
sub
in
fmulp
aam
cmp
pop
je
lret
or
rcrb
call
shlb
mov
movsb
xor
mov
out
cwtl
clc
mov
out
cmp
jb
sbb
cli
and
pushf
or
dec
fidivs
ss
jo
subb
fcomip
andl
push
push
sahf
mov
inc
sbb
xchg
fcoms
into
pop
mov
repnz
inc
mov
xlat
cmp
xchg
ret
mov
or
nop
stos
cld
push
cmp
rolb
out
sub
mov
mov
sbb
mov
psubq
mov
cld
and
je
es
int3
test
jne
pop
fsubr
push
cmpsl
and
mov
mov
inc
mov
push
mov
dec
push
cmp
clc
xchg
mov
inc
stos
imul
cld
insl
repnz
lcall
xchg
loopne
test
dec
andb
stos
and
sbb
push
or
hlt
rcr
add
mov
mov
test
aaa
inc
push
clc
push
sbb
dec
xchg
pop
mov
pop
rcr
mov
and
cmpps
push
sbb
or
or
mov
push
mov
jb
hlt
pop
xchg
mov
call
mov
jp
lock
lret
mov
or
sbb
jne
nop
ljmp
scas
mov
mov
and
xchg
cli
imul
pushf
sub
idivb
dec
push
mov
icebp
repnz
ficoml
adc
dec
stos
or
ljmp
int3
cmpsl
daa
fiadds
fdivr
sar
or
cwtl
pop
mov
lcall
push
cmpsb
adc
ret
add
dec
xor
dec
test
stos
into
subl
imul
cwtl
cmp
ficoms
and
ret
mov
sti
pop
into
push
les
repz
pushf
out
loop
and
loop
mov
in
mov
push
lock
dec
cwtl
jecxz
pop
mul
shlb
les
xchg
pushf
aad
pop
nop
and
mov
jecxz
mov
inc
clc
mov
cli
imul
stc
add
test
xor
xchg
and
cwtl
pop
add
jp
mov
int3
jbe
mov
rdpmc
mov
lock
in
jp
ljmp
jmp
repnz
js
sti
fcomps
rcr
pusha
mov
bswap
xchg
jns
test
xor
negl
adc
scas
test
mov
add
jge
fwait
paddusb
les
int3
pop
mov
shr
xchg
in
mov
cmpsl
ret
lret
jmp
xor
insl
pushf
add
add
sahf
faddl
xlat
jbe
mov
test
xlat
test
loope
ss
test
sbb
ljmp
shrl
rcl
pop
pop
adc
js
xchg
xchg
lcall
popf
ljmp
mov
insl
and
mov
jp
fsubp
lret
nop
sbb
add
or
sub
lret
loopne
sahf
mov
loopne
pop
mov
clc
inc
into
clc
xchg
mov
lea
inc
cmc
pop
loope
dec
cld
mov
mov
ret
es
and
sbb
ss
mov
pop
ss
add
test
nop
cvtps2pd
mov
add
fmul
adc
ds
nop
xchg
leave
xlat
pop
pop
jnp
repnz
xor
cmp
pop
push
call
orb
in
dec
repz
xchg
jmp
sbb
ljmp
imulb
hlt
lcall
push
fwait
leave
scas
sub
ret
fsubrp
clc
fadd
adc
hlt
aam
ret
jg
mov
sub
add
xchg
fidivrl
arpl
mov
pop
fwait
negb
xchg
add
ja
push
xchg
push
inc
es
add
inc
test
cmpsl
pop
mov
jno
sbb
xchg
and
test
inc
loope
add
lods
lret
out
testb
ret
xor
push
push
push
mov
rclb
and
mov
mov
xor
shl
push
inc
push
and
incb
cld
or
in
inc
mov
clc
cmp
fcoms
push
xor
sbb
push
push
push
sahf
daa
cmp
clc
aam
stos
fstpl
fcmovu
test
stos
std
jbe
fmuls
lret
and
sbb
jecxz
cmp
test
cmpsl
fsubp
pmulhw
pop
inc
nop
lcall
mov
imul
sar
cs
mov
call
lret
ficomps
jecxz
fdivrl
pop
lock
mov
mov
stos
insb
les
add
popf
lret
push
loopne
jno
pop
test
xchg
ljmp
xchg
or
fcmove
rolb
ret
ds
push
int3
mov
mov
js
pop
mov
mov
fiaddl
fcomi
or
lret
mov
mov
cmp
xchg
jecxz
imul
push
lods
cwtl
shld
into
jb
rorb
ret
xor
jnp
inc
popa
pop
xor
fmul
cmp
inc
or
dec
cmp
and
pop
xchg
pop
stos
hlt
pop
in
xor
test
fdiv
clc
sarb
ret
push
mov
cli
adc
add
xorl
cli
mov
rorb
fs
stos
scas
xor
push
dec
sbb
pushw
lea
xchg
fdivrl
ret
sarb
sub
push
mov
pop
aam
cmp
cltd
adcl
fs
sub
mov
scas
dec
inc
pop
push
xchg
mov
jmp
clc
push
pop
call
pop
push
insb
test
jbe
aaa
mov
jle
pop
pop
stos
inc
cmp
idiv
shr
push
push
lcall
add
fcmovu
mov
cmp
or
push
repnz
enter
xchg
lds
sbb
mov
jmp
sbb
mov
hlt
ljmp
xchg
xor
or
xor
sbb
mull
sub
adc
cli
pop
into
stos
stos
or
sbb
cmp
lock
pop
adc
xor
mov
fwait
rcrb
add
or
push
add
into
mov
std
lret
clc
add
adc
adc
in
cmpsb
aaa
ret
mov
pop
fdivp
push
push
adc
lea
outsb
dec
mov
xchg
lcall
es
rol
loop
jb
jb
xor
nop
scas
xor
mov
imul
lahf
ljmp
sbb
push
pop
rcll
inc
stos
enter
pop
out
add
mov
por
sarb
cmp
sub
xchg
pop
and
mov
nop
pop
xchg
pop
ret
xchg
mov
pop
aad
ljmp
insb
sbb
mov
push
fidivs
xchg
mov
mov
mov
call
cs
aas
mov
loope
ret
arpl
fcmove
scas
ret
mov
xchg
addb
add
xchg
jo
mov
inc
dec
fdivrp
ljmp
out
fwait
dec
mov
lock
xor
stos
push
cmp
push
pop
cli
mov
lcall
mov
clc
pop
mov
mov
enter
pop
mov
aaa
add
enter
fimull
sbb
aam
notb
jg
test
mov
add
lock
in
pop
dec
lcall
mov
mov
imul
scas
das
scas
mov
adc
push
ret
pop
jg
dec
jbe
inc
add
add
mov
lahf
scas
push
pop
aaa
push
rol
mov
push
cmpl
sahf
pop
push
icebp
ljmp
add
and
stos
scas
sub
lcall
push
lock
lock
mov
movsb
pop
xor
mov
jbe
pop
rolb
mov
jae
fnstenv
cmp
or
pop
js
dec
int3
or
mov
cmp
int
xchg
mov
add
in
push
test
push
mov
orb
into
add
xor
dec
test
lock
pop
push
xchg
out
out
mov
xchg
cs
mov
mov
mov
push
mov
sbb
stos
int3
xchg
cld
shrb
cwtl
outsb
pop
pop
jb
and
and
mov
and
push
lcall
mov
pop
mov
shl
gs
ds
in
pop
jae
sbb
fldenv
cmp
mov
add
mov
cli
or
jp
pop
cwtl
rorb
push
and
cmp
ficoms
mov
mov
pop
ret
mov
call
push
sahf
pop
aas
mov
ret
mov
push
pop
ljmp
mov
mov
sbb
pop
add
enter
xchg
mov
mov
insl
leave
stos
loopne
sbb
push
adc
testb
cmp
test
aam
and
add
cld
fcmovbe
jo
push
sti
push
or
sub
movsl
sbb
lock
inc
js
outsl
enter
push
dec
aad
jmp
stos
pop
lret
sahf
mov
mov
out
adc
fidivrs
mov
test
ss
or
xor
xchg
lock
push
call
xchg
ret
xchg
outsb
test
in
xor
rcrb
sarl
jae
shll
jbe
mov
xor
sbb
clc
les
or
into
push
rorb
jo
xchg
mov
lahf
cmc
mov
nopl
dec
test
dec
icebp
mov
cltd
aam
adc
add
imul
mov
hlt
mov
les
pop
xor
imul
enter
cmp
fcoms
add
test
jg
jmp
mov
test
decl
pop
ljmp
nop
jnp
shrb
fadds
arpl
pop
int3
clc
repz
cmpl
mov
mov
dec
decl
rorl
hlt
xor
idiv
mov
ret
push
loop
decb
daa
pop
fdivrs
cmp
rclb
pop
call
call
std
xlat
sti
xchg
test
cmp
rorb
inc
std
mov
fdivrs
push
pop
clc
mov
mov
jb
add
ss
inc
xchg
or
lret
pop
xchg
rcrl
scas
aam
sbb
mov
sub
and
pop
push
jmp
aas
and
mov
push
sbb
or
outsb
stos
nop
les
pusha
push
cld
push
fidivrl
pop
cmp
ret
ljmp
hlt
push
fisubrl
repz
pop
mov
and
je
andl
int
lock
int3
jns
dec
ljmp
sbb
sbb
add
lret
xlat
adc
les
xchg
mov
cli
and
test
mov
lock
or
lods
xor
stos
push
cmpsb
arpl
push
lcall
lcall
adc
test
fcmovb
clc
daa
add
mov
shr
ret
xchg
scas
mov
adcb
fcmovbe
fdivl
pop
sub
ret
push
sub
repnz
cmp
rcrb
movsb
insl
cmp
lret
fmull
push
mov
jl
mov
ds
out
bound
sbb
ret
fiaddl
scas
lcall
cmp
xchg
ficoml
push
sarb
into
ljmp
rol
mov
or
int3
loop
xchg
sti
pushf
lock
push
scas
dec
add
in
rcrb
push
xorl
jo,pn
into
mov
xor
mov
cmp
lock
sub
and
push
push
int3
test
ja
mov
mov
dec
aam
cmp
fadd
lock
mov
ljmp
mov
mov
pop
jnp
daa
repz
repnz
mov
das
mov
mov
sub
ret
and
jnp
clc
add
lcall
and
ficoml
mov
insl
dec
push
push
xchg
je
pop
pop
nop
fdivs
and
jno
mov
repnz
mov
shll
mov
mov
jmp
es
ljmp
push
jbe
outsb
mov
xor
xchg
push
popl
decb
pop
xor
and
sbb
shlb
pop
rolb
fsubr
popa
dec
mov
cmp
xchg
ret
push
lock
or
cmpl
repnz
scas
add
sahf
sub
nop
inc
jb
cmp
int3
out
xchg
push
mov
shrb
sub
into
cld
mov
cli
fcoms
mov
inc
xor
popf
pop
add
fs
movsb
clc
and
push
jb
pop
or
int3
xchg
lret
adc
add
jl
xchg
cwtl
pop
mov
inc
sar
fwait
and
gs
ja
push
dec
lret
sbb
aas
cmpsb
ljmp
xor
inc
nop
xchg
ss
out
rorb
hlt
rolb
test
sahf
cmp
stos
or
subb
pop
push
loopne
test
cmpsb
ja
scas
inc
mov
push
cmpl
sbb
xorb
sbb
pop
jmp
mov
xlat
add
cmpsl
in
cli
scas
jge
cmc
pop
mov
xlat
inc
ds
rclb
int
test
rolb
mov
testl
xchg
mov
lock
inc
push
pop
xchg
lahf
mov
pop
hlt
xchg
in
dec
mov
pushf
adc
sbb
adc
fldt
mov
repnz
xor
mov
out
jbe
insl
push
pushf
incb
fiadds
cwtl
or
cmp
add
lcall
syscall
jnp
push
les
sbb
xor
mov
pusha
rol
pop
leave
cmp
pop
out
mov
ljmp
cmp
xchg
pop
push
mov
out
les
test
xchg
addr16
jle
inc
lods
cmp
add
out
pop
pop
pop
sub
in
push
mov
movsb
js
pushw
rorl
fs
jae
imul
fmuls
jae
push
cmp
stos
xchg
pop
jns
clc
jmp
pop
jge
xchg
popa
push
push
cwtl
out
fxch
jo
insl
xor
ret
cwtl
aaa
add
ret
sarb
or
not
clc
outsb
or
ss
lcall
dec
mov
inc
lcall
xchg
stos
enter
movb
popf
ficoms
or
out
mov
xchg
nop
fsubr
fwait
repnz
in
pop
in
push
push
pop
enter
mov
repnz
out
int3
inc
xchg
cmp
ljmp
ljmp
pop
cmp
fmulp
fmuls
or
loopne
mov
inc
xor
xor
fisubrl
adc
hlt
inc
add
sub
mov
sbb
push
mov
aam
rorb
lcall
push
or
lret
jb
cmc
je
adc
enter
lahf
pop
and
pusha
add
lahf
jb
call
sub
push
xor
mov
popf
fisubs
out
push
data16
dec
mov
setb
jp
lret
jb
movsb
inc
imul
pop
cld
lret
adc
scas
sub
push
mov
adc
pop
arpl
xor
pop
mov
int
mov
or
xor
negb
das
jle
mov
pop
gs
testb
test
add
push
add
cmp
xchg
fndisi(8087
hlt
jb
fcomps
pop
mov
dec
jbe
out
mov
scas
divb
xchg
and
lret
pop
add
ljmp
dec
test
push
sar
and
xor
fdivp
test
ds
mov
mov
or
or
dec
pop
add
push
mov
mov
push
push
pusha
mov
add
int3
mov
stos
insb
aam
test
aaa
cmp
fadd
enter
jp
fisubs
repz
pusha
scas
into
sub
ds
lcall
or
imul
mov
outsb
xor
test
sbbl
cmc
ret
mov
and
sub
mov
inc
pop
ficomps
pop
dec
in
inc
and
fidivrl
into
out
lret
idiv
test
ljmp
pop
xor
cmp
out
loop
add
push
je
repz
jb
inc
adc
and
into
enter
add
ja
mov
or
xchg
xor
outsl
xlat
clc
stos
push
fdivs
or
push
pop
xorl
pop
xor
sete
push
adc
les
xchg
lock
fdivrs
jmp
out
pop
xchg
loope
mov
inc
cli
xor
jmp
add
xor
jg
xlat
inc
rclw
in
jg
loop
cmp
test
pop
fdivr
add
inc
lods
sbb
aaa
rclb
xchg
mov
fidivrl
xchg
int3
fcomp
mov
call
push
test
mov
cmp
inc
jnp
stos
lret
sahf
divb
or
ljmp
pop
xor
sti
insl
or
das
pop
lods
adc
std
xor
fdivr
dec
lcall
add
add
jecxz
imul
xchg
add
push
sbb
mov
inc
neg
add
jno
bts
fs
mov
icebp
push
dec
mov
jb
orb
and
add
xchg
fwait
pop
dec
or
ret
lret
jg
lret
ret
out
test
add
ret
xchg
push
les
loope
mov
fdivl
mov
stos
sarb
faddl
setle
lcall
mov
lret
pop
nop
in
cmc
scas
push
pop
add
pop
es
or
outsb
lret
lret
dec
mov
lock
outsb
fcompl
jle
add
or
cmp
jnp
pop
jl
hlt
fstps
mov
mov
sbb
jecxz
cmpsb
mov
outsl
cmp
shrb
icebp
js
or
adc
mov
adc
ljmp
mov
popa
adc
outsl
sbb
jno
push
push
repnz
out
sbb
ljmp
nop
adc
inc
xchg
push
sahf
loop
push
add
fs
xchg
test
mov
stos
or
int3
imul
lret
pusha
mov
add
or
fisttpll
adc
fcmovnb
mov
dec
test
imul
cld
es
push
mov
mov
sbb
xchg
ret
fdivrl
lods
push
push
lock
rcl
jg
mov
cli
fisubs
push
test
fsub
call
jg
push
sti
pusha
lcall
fiaddl
add
mov
fimull
pop
jnp
into
fmull
adc
call
scas
std
jecxz
fstl
stc
jge
pop
xorb
aas
test
add
mov
lcall
das
add
adc
add
dec
jns
cmp
les
push
outsb
mov
call
mov
push
aas
cs
repnz
clc
rorb
jns
js
mov
sub
pop
mov
notl
into
and
mov
push
mov
jmp
jo
hlt
incl
outsb
lret
in
int
xchg
jno
clc
or
fsubl
js
inc
outsl
pushf
mov
scas
andps
pop
faddl
inc
sahf
fisubs
mov
push
ret
rcrb
or
mov
push
out
out
sbb
ds
insb
lcall
or
mov
adc
cmp
stos
xchg
ds
daa
sbb
jnp
rcl
sbb
and
insb
scas
inc
xchg
cmp
int3
push
pop
in
in
mov
fdivr
sub
mov
js
cli
in
rcr
pushf
orb
imul
push
ds
ror
or
adc
int3
pop
xchg
in
mov
sbb
cmp
out
in
mov
mov
inc
mov
sahf
and
repnz
sub
sahf
aam
adc
pop
xor
or
xor
in
inc
into
addr16
das
lcall
stos
fidivrs
nop
and
mov
push
gs
cmp
es
push
dec
mov
pop
fidivl
fistpl
test
into
mov
inc
push
ficoml
jecxz
packsswb
notb
jo
lret
pop
pop
inc
test
enter
mov
push
and
cwtl
pop
rclb
or
or
cld
stos
or
sbb
clc
sti
add
jns
or
scas
mov
in
leave
pop
or
clc
pushf
push
cld
and
sahf
push
adc
dec
cmp
jecxz
je
popf
je
aaa
dec
jecxz
iret
rcrb
mov
inc
ret
out
fcmovne
loopne
push
and
out
shrb
lret
pop
xchg
sbb
and
in
fcompl
enter
lock
mov
xchg
out
push
rcll
push
stos
adc
sbbl
pop
jecxz
and
fsubl
and
ret
bound
mov
cli
add
sbb
mov
sbb
and
arpl
mov
or
mov
sti
cmp
int3
call
or
rcrl
push
test
out
push
movl
ret
pop
inc
pop
push
das
mov
stos
into
add
push
dec
push
xor
sahf
gs
ffree
out
adcl
fistpl
sahf
pop
dec
mov
fcompp
aad
stos
ficompl
out
testb
and
rcrb
lcall
cmp
or
iret
sbb
xor
push
lahf
pop
or
mov
out
sbb
rcrb
pop
nop
mov
lock
imull
test
cli
mov
pop
xlat
cwtl
rolb
xor
enter
shrb
out
hlt
into
xor
lock
cld
testb
ret
nop
xchg
mov
loope
in
sbb
sub
mov
rorb
xchg
mov
and
mov
mov
mov
rcl
dec
add
mov
dec
pop
mov
mov
add
int3
inc
div
and
and
mov
mov
fcmovbe
pop
mov
mov
test
jmp
loop
aas
xlat
ds
rclb
pop
fs
shrb
aaa
ficompl
add
outsl
cli
orb
fs
xchg
into
daa
push
int3
cwtl
les
and
pop
cmp
into
lahf
xor
xchg
mov
mov
push
and
mov
fcoml
pop
std
sbb
mov
push
int3
cld
int3
dec
jbe
cwtl
push
jbe
dec
rolb
lds
mov
fsubrp
cld
imul
mov
loopne
xor
rclb
push
icebp
stos
xlat
call
arpl
hlt
imul
mov
js
movsl
sub
inc
test
or
xchg
movnti
pop
sbb
ror
aaa
sub
mov
fs
sarb
mov
int3
inc
es
movsl
adc
pop
ret
dec
imul
cwtl
mov
mov
and
and
push
mov
imul
jns
gs
scas
and
outsl
sbb
push
and
ljmp
mov
add
movsb
inc
or
orps
test
outsb
and
insb
lock
lret
cli
or
lahf
ljmp
mov
mov
push
test
sub
pop
mov
popa
pop
mov
repnz
fsubp
test
sahf
push
es
sahf
ljmp
mov
push
sahf
add
xchg
or
sti
ficoms
scas
push
mov
cmp
add
cwtl
push
add
out
out
push
rsm
jmp
cmp
rclb
or
repnz
cwtl
out
orb
stos
xor
xor
pop
test
push
stc
jle
xlat
cmp
pop
pop
mov
pop
ljmp
jecxz
sbb
ja
inc
push
jno
flds
mov
imul
sbb
call
xor
clc
scas
enter
push
nop
outsb
mov
mov
mov
push
pop
sub
int3
mov
test
and
jnp
add
int3
dec
push
out
hlt
xor
lret
jmp
in
adc
adc
jae
mov
jp
dec
push
xchg
in
xor
decb
mov
cmp
loopne
movsb
mov
sbb
cld
dec
pop
add
mov
les
fildl
ficoml
fistps
add
inc
or
pop
sub
lock
mov
loop
in
es
add
mov
lcall
sub
sbb
les
jl
jns
mov
les
adc
ljmp
add
gs
daa
sub
and
mov
inc
and
sahf
stos
push
dec
cli
int3
mov
testl
mov
les
jae
jle
ss
lcall
push
adc
pop
sti
outsl
rcrb
int3
out
rcr
clc
push
arpl
cwtl
not
push
jo
enter
ret
sub
sbb
jl
and
call
add
jns
jns
mov
xchg
pop
test
push
xor
jmp
loop
decl
repnz
push
and
xchg
ficomps
push
ror
push
mov
push
arpl
into
or
add
ficoml
or
mov
enter
leave
adc
ljmp
sbb
push
pushf
imul
lret
fcmovnu
add
dec
add
ret
es
cli
pop
repnz
xchg
sbb
scas
pop
mov
mov
adc
enter
cld
inc
je
arpl
jp
pusha
xor
nop
popf
mov
out
mov
fs
jecxz
popa
inc
negl
rol
jp
test
pop
xchg
xchg
dec
add
lock
or
scas
mov
insl
dec
mov
and
hlt
les
cwtl
ret
es
ljmp
cmp
add
ss
mov
xchg
pop
cmp
clc
cld
push
sahf
fidivrl
mov
hlt
sar
mov
xorl
push
push
jbe
xchg
outsl
scas
mov
push
test
inc
mov
out
repnz
shll
pop
pop
lock
inc
mov
inc
nop
push
xor
cmp
push
stc
lock
pop
mov
mov
adc
rorb
mov
jo
jecxz
clc
add
scas
sar
lret
or
out
lret
cwtl
pop
jp
lret
fs
push
aam
sbb
mov
xor
mov
in
push
xor
sub
or
ljmp
mov
and
sti
test
test
adc
clc
adc
mov
fiadds
jmp
cwtl
stos
jb
or
add
xor
xor
xchg
pop
mov
jecxz
or
call
jns
int3
in
addl
pop
sahf
outsl
push
ljmp
mov
int
pop
or
call
mov
clc
add
mov
cli
jmp
in
sarb
lock
add
popa
mov
add
out
movsb
icebp
mov
mov
jmp
xchg
aam
rcrb
jg
mov
pushf
cwtl
ret
rorl
enter
xchg
mov
hlt
lret
loope
sub
not
in
out
pop
je
lcall
fucomi
jge
sti
mov
xchg
rcl
int3
or
lods
sti
lods
or
ret
push
pushf
lock
pop
cmp
out
nop
push
pop
or
out
pop
pushf
arpl
push
out
rorb
aaa
jb
inc
mov
out
add
push
clc
cld
clc
mov
and
mov
scas
xchg
fsubrp
gs
ss
scas
push
enter
or
les
xchg
into
cli
call
rolb
pop
cmp
pop
or
mov
lcall
jbe
xor
xor
nop
add
dec
cmp
lock
or
lsl
and
mov
clc
lret
enter
sub
lock
bound
jnp
out
negb
subl
or
pusha
adc
pop
in
push
cmpb
insb
inc
pop
push
and
sbb
lret
add
jp
mov
pop
rcrb
push
jge
sti
test
lock
inc
ror
pop
inc
adc
mov
ret
cmpsl
into
lcall
xchg
fcoms
stos
or
xlat
int3
cmp
mov
fcompl
roll
sbb
and
outsb
data16
lret
mov
fmul
jg
dec
fcom
xor
mov
cmp
ficoml
jmp
pop
test
cld
xchg
xor
ljmp
dec
add
xor
pop
or
mov
sub
jmp
inc
or
dec
test
sahf
jbe
xor
add
or
test
sub
clc
stos
lcall
push
jbe
xchg
inc
or
fs
pop
dec
aad
movsb
std
add
mov
stos
or
insb
lret
xlat
stos
cmp
sar
lret
scas
pop
lcall
pushf
add
pop
fdiv
ds
ret
enter
cwtl
or
ds
cld
fadds
call
adc
and
loop
mov
xor
push
mov
ljmp
pop
sarb
in
aas
ljmp
stos
aam
loopne
mov
jle
mov
mov
xchg
push
jg
xchg
mov
or
mov
test
push
push
mov
jnp
pop
sub
pop
adc
icebp
xor
pop
or
sbb
add
movsl
add
shll
icebp
xchg
sbb
out
push
ds
mov
mov
hlt
fstl
pop
fcoms
push
xchg
cwtl
call
mov
adc
push
jl
sub
xor
les
cwtl
ficomps
repnz
push
jecxz
mov
je
push
stos
mov
ljmp
pop
pusha
cwtl
jecxz
repnz
adc
mov
ljmp
test
mov
in
xor
and
movsl
dec
sbb
aaa
rclb
mov
ret
ret
push
gs
cwtl
push
adc
int3
jno
adc
ss
call
dec
pop
xchg
dec
in
stos
xor
fdivs
mov
lcall
sub
cmp
xchg
mov
dec
insb
loopne
jmp
adc
fstps
pop
jge
push
enter
pop
jge
adc
mov
gs
or
or
into
rcrb
mov
insb
cmp
mov
scas
pop
js
mov
bound
jmp
in
jle
repnz
adc
xor
data16
xchg
pop
and
shll
and
dec
jmp
nop
sarb
insb
mov
ret
ret
push
cmp
daa
push
rcrb
pop
lcall
scas
mov
mov
and
mov
test
hlt
stos
sbb
push
xchg
inc
test
add
fdivrs
sarl
and
loope
fcoms
inc
jg
lock
jecxz
into
jbe
jno
add
push
popa
in
pop
add
mov
into
pop
cld
and
rcrl
jno
pop
ret
call
xchg
cld
mov
cmp
pop
clc
inc
nop
int3
ror
in
stc
jecxz
outsl
mov
scas
pop
and
pop
pop
mov
cmp
insl
aas
xchg
fcmovnu
int3
test
int
stos
movb
in
add
out
push
cmp
mov
insb
push
push
loope
xor
pop
cmp
ret
sti
dec
mov
rcl
pop
lcall
fcomps
mov
push
xchg
out
mov
cmp
fsubrl
push
mov
mov
mov
ja
mov
xorl
cs
mov
movsl
ret
mov
pop
movb
lret
add
neg
fcoml
jae
mov
cld
or
ret
and
adcl
push
xchg
fmuls
es
test
test
cmp
pop
repnz
mov
xchg
mov
push
cmp
push
sub
sub
adc
push
popa
lcall
push
push
int3
mov
and
into
stos
pop
pop
pop
enter
sahf
js
rcrl
push
push
mov
push
cmp
popa
fisubrs
repnz
ret
push
aaa
out
or
pop
mov
decb
hlt
les
or
in
dec
shrb
mov
aad
fdiv
in
mov
push
mov
xchg
sti
fcoml
pop
lret
stos
clc
and
or
ret
sar
das
popf
lcall
pop
pop
or
mulb
outsb
xor
int3
dec
jmp
xor
pop
adc
mov
or
jo
and
idiv
shufps
jo
adc
das
loop
out
les
fadd
push
fidivl
mov
outsl
sub
or
scas
les
xchg
and
imul
fs
pop
add
out
pop
aaa
je
fidivrs
add
negb
lcall
xchg
sub
mov
adc
xchg
jle
sbb
scas
xchg
loopne
mov
test
xchg
outsb
nop
pop
dec
and
test
xchg
out
inc
fimuls
repnz
lods
ret
or
mov
and
lahf
lcall
cmp
fidivs
xchg
std
rolb
lret
push
dec
jl
add
push
and
adcb
adc
jnp
popf
les
inc
fisubrl
mov
mov
int
cmp
mov
pop
add
clc
sub
addr16
ss
push
add
cwtl
cmp
lret
pop
fdivl
ljmp
dec
stos
push
movsb
add
mov
mov
ret
inc
cmp
test
pop
pop
imul
mov
iret
and
add
mov
addr16
inc
dec
pushf
jno
push
mov
pop
xor
or
cmp
inc
adc
cwtl
hlt
xchg
jge
or
call
mov
roll
pushf
ja
outsb
dec
and
es
movsb
in
jp
push
mov
scas
or
leave
mov
cli
pop
sahf
movb
lcall
out
push
and
jecxz
push
fadd
outsb
push
ljmp
stos
outsl
repz
add
js
xor
adc
enter
inc
adc
pusha
sbb
je
xor
enter
pushf
or
fdivr
pop
shrb
jmp
daa
rorb
push
and
sahf
dec
mov
lcall
or
sbb
and
jb
test
adc
out
bound
push
es
lret
call
dec
pop
add
mov
lea
aam
push
test
or
cmp
cld
fcomps
jb
add
pushf
pushf
and
out
lock
cmpsb
lcall
outsb
lcall
clc
popa
cmp
sub
lock
mov
dec
cli
fists
sub
shlb
sub
test
stos
lock
sarl
div
mul
mov
mov
pop
pop
cwtl
in
cmp
testb
shrb
icebp
loope
test
pop
xlat
mov
mov
out
testb
xor
jmp
adc
imul
enter
cmpsb
mov
fisubl
pop
mov
adc
pop
push
ret
push
jo
add
push
aaa
push
ljmp
into
fidivrs
ja
das
pop
pop
adc
rol
xor
push
leave
push
push
cmp
pop
push
js
stos
push
mov
std
clc
ljmp
mov
stos
rol
mov
push
fwait
stc
rcrb
bound
or
mov
call
push
int
sahf
mov
out
adc
push
ja
mov
or
idiv
xchg
leave
fadd
leave
add
inc
cmp
lahf
subb
jns
out
lret
push
int3
ljmp
jecxz
dec
call
push
push
lods
and
lret
mov
xchg
repnz
and
push
nop
and
mov
fisubl
or
aam
pushf
and
out
xchg
mov
pop
imul
add
mov
push
sbb
lea
sbb
pop
pushf
sarb
cmp
pop
in
dec
les
or
bnd
pop
out
outsb
sub
test
ret
push
cld
xchg
int3
sbb
mov
push
push
add
adc
dec
push
clc
inc
das
cli
xchg
pop
faddl
lret
aas
mov
mov
sahf
shll
xor
lcall
cmp
pop
cs
push
fiaddl
rep
bound
or
mov
pop
int3
mov
add
pushf
nop
or
hlt
pop
dec
mov
mov
add
stos
negb
mov
pop
mov
nop
inc
push
cld
push
cwtl
or
fcoml
mov
mov
sbb
ljmp
mov
cld
pop
fsubrl
ss
dec
or
mov
stos
inc
adc
mov
int
fmull
repnz
les
jae
push
and
cmp
mov
and
in
sbb
enter
repnz
cmp
mov
mov
out
mov
push
jno
mov
xchg
imul
lret
mov
leave
inc
pushf
jl
pop
cmc
push
fdivs
fimull
sarb
pop
mov
mov
ljmp
push
call
into
nop
mov
push
xchg
gs
cmpsb
mov
xor
or
inc
mov
mov
pop
in
jg
inc
fprem1
fcompl
mov
fxch
sub
mov
lret
ljmp
add
pop
jns
pushf
lcall
pop
test
or
mov
enter
jo
pop
mov
fnstsw
leave
mov
mov
xchg
mov
ret
fdivrs
scas
sub
mov
xchg
push
push
adc
xor
cmp
into
clc
incb
mov
test
cmp
pop
or
test
int
mov
lret
jae
push
fs
stos
loop
xchg
out
int3
mov
mov
inc
adc
dec
mov
mov
add
les
push
mov
data16
enter
les
lea
jno
mov
out
rcl
jb
ret
stc
and
in
cmp
or
sub
clc
push
push
xchg
cwtl
add
push
dec
cmp
nop
add
lret
les
imul
test
xor
xlat
inc
cmpsl
push
mov
negb
and
arpl
sti
pusha
in
dec
add
and
cld
gs
jge
adc
and
fsubrs
sti
test
mov
icebp
pop
pand
hlt
inc
into
scas
cmp
mov
repz
pop
pop
shll
or
push
sbb
inc
aas
pop
int
xor
test
or
dec
divl
mov
fadds
xchg
and
iret
xchg
and
pop
mov
sarl
sub
aam
xchg
and
cwtl
dec
mov
push
or
xchg
and
add
int3
test
jns
into
jmp
sahf
or
fdivp
ret
dec
stos
pop
test
ret
cmpsl
insb
je
jmp
mov
int3
inc
out
lret
lahf
sbb
stos
sbbb
jmp
or
vmwrite
jge
test
pop
ret
fidivrl
test
jecxz
aaa
enter
clc
push
ret
pop
mov
stos
lcall
mov
push
inc
mov
lcall
or
cmpsb
sbbl
xor
push
lcall
or
int3
mov
mov
mov
mov
xchg
dec
cmp
xor
sahf
xor
sarb
loope
ljmp
jnp
ret
pop
adc
add
jne
loopne
cwtl
push
adc
or
pop
cmp
cmp
mov
add
out
and
lahf
cmp
ljmp
xlat
lds
sarb
or
fidivs
les
push
inc
xchg
adc
push
fsubr
ds
push
pop
int3
add
add
sahf
pop
push
add
inc
daa
jg
fwait
inc
jns
push
adc
xchg
mov
xor
dec
or
lret
lahf
inc
sti
sub
sub
push
pop
js
xchg
into
push
push
add
push
loopne
mov
xchg
xor
pop
clc
dec
mov
inc
icebp
mov
or
cmp
repnz
adc
push
fstpt
push
pop
ror
subl
fdivr
cmp
subps
test
sar
push
jle
testb
ds
stos
les
inc
pop
cwtl
cld
js
repnz
lcall
repnz
sbb
inc
mov
add
push
clc
rcl
mov
pushf
push
lret
fcoml
cmp
xchg
and
insl
cmp
loop
in
mov
lret
stc
je
cli
pusha
or
iret
mov
pop
add
mov
js
roll
jp
sahf
jbe
les
es
call
add
stc
arpl
mov
ret
xor
ljmp
mov
lcall
push
jae
dec
push
ret
mov
pop
mov
pop
int3
sbb
inc
ret
add
xchg
int3
jecxz
hlt
js
pop
aam
mov
imul
pop
bound
enter
test
push
movb
aas
xor
shrb
xor
ficompl
push
dec
cmp
aam
pop
lret
into
pop
pop
pop
mov
nop
xor
ret
push
add
lcall
outsl
aas
aas
dec
mov
lock
iret
ret
push
pop
enter
or
jnp
cmp
test
rolb
fidivrl
fimull
inc
push
faddp
std
in
daa
push
cld
dec
nop
mov
sub
xchg
pop
loopne
lret
lcall
shr
cld
cli
jb
fisubl
ljmp
lahf
jnp
fld
shl
les
or
enter
outsb
push
push
pop
mov
xchg
mov
mov
stos
stc
decb
add
scas
xchg
clc
adc
dec
scas
push
test
pushf
sahf
xor
mov
test
flds
mov
sub
stos
das
int3
shlb
push
xlat
aam
push
mov
lret
cli
ror
test
pushf
jge
pop
hlt
mov
pop
jb
lret
stos
and
in
dec
cld
mov
rorb
mov
push
repnz
into
sbbb
push
clc
inc
fidivs
sub
imul
pop
outsb
stos
mov
orb
xchg
test
add
mov
sbb
or
hlt
repnz
das
mov
addr16
cmp
fsubrl
test
aaa
mov
pusha
pusha
shl
and
scas
mov
mov
xchg
mov
mov
jns
repnz
sub
sarl
repnz
imul
mov
mov
int3
add
add
pop
aam
mov
add
cld
mov
cmp
pop
mov
add
push
or
fnstsw
aad
test
mov
xchg
pop
jp
repnz
outsb
mov
fadd
loop
ds
fmulp
negb
add
into
dec
jo
stc
pop
mov
scas
mov
dec
or
test
mov
cltd
push
add
push
mov
push
outsb
xor
jmp
mov
mov
ljmp
cli
xor
mov
jbe
jl
stos
add
push
cli
pushf
pop
fcmovb
add
popf
xchg
out
inc
or
outsl
inc
int
push
add
insb
int3
and
xchg
in
pop
cmp
leave
sahf
pop
repnz
fdivrl
ds
mov
divb
out
les
mov
cmp
or
sahf
clc
aad
cld
test
mov
sbb
int3
xchg
pop
into
out
jp
xchg
mov
push
lcall
mov
inc
adc
das
mov
and
xchg
push
out
pushf
daa
xchg
scas
imul
rcrb
popa
inc
mov
bound
nop
ds
negb
mov
mov
jo
mov
pusha
cmp
call
dec
push
test
out
jmp
xchg
sti
cld
bound
or
aaa
enter
popa
or
push
xchg
mov
and
scas
xchg
push
inc
adcl
into
sahf
scas
add
test
adc
mov
and
les
or
mov
insl
aam
sbb
repnz
xchg
icebp
and
stos
jecxz
push
sub
ror
repz
push
add
int
push
ret
mov
inc
nop
mov
shrl
call
and
into
pop
add
jg
aam
cmp
pop
fidivs
mov
pop
push
jbe
push
and
cmp
ret
xchg
jp
fiadds
stc
pop
mov
fdivs
sub
xchg
fisttps
push
jae
scas
mov
cmp
add
stos
add
enter
lret
lcall
fs
cmp
rcrb
mov
dec
or
inc
hlt
aam
repz
shlb
mov
xchg
mov
scas
ret
loop
and
ljmp
pop
repnz
mov
push
jl
push
cltd
cld
fdivrs
clc
xchg
data16
sahf
sbb
rcr
stos
cwtl
or
xchg
out
dec
pop
dec
je
sub
stos
cmc
clc
sub
loopne
cmp
outsl
ret
lcall
push
int3
pop
cli
jae
cmp
push
repnz
xchg
fdivl
stos
xchg
cmc
lcall
shrb
fdivl
pop
imul
cld
xchg
fsubrs
cmpsb
outsl
psubb
add
mov
mov
or
xchg
aad
fidivrl
adc
test
sub
mov
sbb
pop
in
push
inc
or
pop
sub
and
mov
pop
lret
psubq
scas
pushf
hlt
or
cmc
dec
jmp
sub
push
and
lcall
push
push
push
clc
out
neg
jmp
mov
aam
and
fcmovb
cmp
cld
cld
adc
pop
mov
pop
adc
pop
xchg
push
xchg
sti
jle
mov
jmp
int3
call
mov
mov
xchg
dec
in
imulb
shl
xchg
call
call
xchg
add
or
aam
and
lahf
push
cmp
hlt
mov
shrl
mov
pop
xchg
push
dec
push
mov
test
pop
pop
shrb
dec
ret
cmp
pop
sahf
push
pop
lret
pop
and
loop
adc
sbb
outsl
inc
dec
outsl
xor
and
or
stos
push
push
mov
lret
cmp
xchg
call
xchg
and
hlt
mov
dec
push
mov
add
xor
repnz
lcall
popl
stos
jp
repnz
adc
or
jmp
imul
push
cld
clc
sbb
mov
xor
inc
xor
or
lret
push
insl
fs
enter
gs
adc
pop
sbb
dec
xor
dec
int
pop
cmp
pop
add
add
hlt
dec
fs
xor
xchg
xchg
insb
xor
sbb
hlt
fsubrs
mov
cmp
ljmp
and
hlt
shlb
mov
add
or
push
mov
gs
data16
or
dec
lcall
hlt
imul
jns
sahf
incb
or
or
mov
jp
fildll
stos
and
test
ljmp
dec
xchg
ret
xor
sahf
xor
dec
fsubr
mov
push
lcall
in
sbb
ds
fisubrl
pushf
xchg
mov
dec
sub
pop
push
jmp
out
cli
sub
push
gs
jo
loop
push
dec
or
out
pushf
or
ss
pop
fsub
pop
pop
into
lcall
mov
ljmp
mov
and
cmpsb
hlt
push
pop
inc
push
xchg
push
aam
push
or
dec
sub
lahf
sti
push
clc
shrb
mov
jbe
into
add
adc
cwtl
pushf
dec
xor
mov
pop
push
fcomp
and
pop
lret
scas
or
subb
pop
int3
lock
add
sub
sahf
inc
ror
scas
pop
mov
sbb
pop
mov
pushw
popf
test
sahf
sbb
cmp
arpl
mov
nop
enter
loop
mov
mov
out
fldl
fcoms
mov
pop
out
je
push
mov
and
mov
out
xchg
xor
adc
mov
mov
mov
movsb
faddl
shl
or
sahf
cli
imul
out
push
xchg
lret
insb
pop
out
lds
mov
xor
and
pop
stos
addl
sbb
cmovle
pop
sbb
xor
push
push
xor
ds
mov
mov
push
fsubr
xchg
mov
aas
xchg
pop
stos
add
adc
stos
mov
and
mov
cld
icebp
jp
add
mov
add
aam
ret
cs
cmp
ficompl
push
repnz
mov
xchg
pop
mov
mov
mov
stc
sub
loopne
cmpsb
push
xor
dec
mov
jb
mov
pusha
cmp
ljmp
jmp
xchg
xchg
lock
mov
clc
add
stos
int3
repnz
fcoml
insb
pop
xchg
scas
jns
or
inc
sbb
add
push
push
loopne
mov
hlt
div
shrb
mov
and
xor
mov
fsubs
or
rcl
fstp
cmpsl
movsl
test
jecxz
leave
jne
adc
stos
xchg
inc
pop
pop
fstl
lcall
out
xor
mov
xchg
push
lret
mov
out
mov
jne
jp
scas
dec
xchg
sahf
or
addb
cmp
call
test
mov
cwtl
xor
fadd
pop
cld
push
add
pop
aad
lock
fdivrl
imul
scas
nop
inc
in
inc
add
stc
lods
or
shlb
stos
ds
or
push
push
mov
ss
mov
or
out
ffreep
sub
jbe
push
sub
mov
into
call
cld
jmp
sahf
push
cmp
xor
in
and
test
out
adc
call
push
fisubrl
pop
fsub
stos
mov
insb
int3
mov
fdivrs
cltd
cmp
mov
jo
mov
add
lret
sbb
mov
inc
xor
fisubrs
ret
add
int3
clc
xor
hlt
cmpsb
xchg
push
push
ss
push
add
lret
push
fdivrl
in
movb
jecxz
push
push
push
fcoms
cmc
jp
pop
into
pop
sbb
push
iret
aas
adcb
push
into
mov
repnz
push
cmp
push
add
lret
mov
in
jns
out
mov
and
mov
je
shlb
and
mov
mov
scas
and
adc
fisttpl
ljmp
sarb
or
imul
sub
xchg
movb
mov
xor
xchg
lret
push
sti
push
out
outsb
xchg
or
imul
mov
idiv
xor
leave
or
stos
mov
add
xlat
or
shl
ds
push
lock
insb
shll
hlt
mov
insl
mov
pop
ja
ds
or
fistpl
lret
lret
paddq
sub
adc
stos
jp
or
into
ljmp
loopne
outsb
cld
mov
xchg
or
jp
call
pushf
nop
lock
rorb
mov
cmp
sub
mov
mov
lock
fdiv
pop
aam
and
lret
push
jbe
mov
into
lcall
lret
mov
aas
iret
xchg
in
out
sub
and
cwtl
into
xchg
hlt
and
in
cld
dec
les
push
sbb
aaa
cmp
pushf
fadd
push
test
and
cmp
test
or
cmp
les
repnz
negb
mov
adc
cwtl
out
lret
and
or
rclb
ret
push
cli
push
pop
push
aam
push
mov
lock
cli
aam
add
mov
movsl
and
gs
bound
out
pop
xlat
clc
jg
sti
rcrb
fmull
push
ficoms
pop
pop
add
ja
call
clc
ret
hlt
mov
push
push
rolb
jns
ss
and
cmpsb
mov
dec
xchg
ficompl
lahf
push
add
test
bound
or
aam
push
add
ror
pop
lret
jl
mov
ret
cwtl
inc
fs
dec
dec
and
int3
std
stos
fdivl
shl
or
mov
addr16
ljmp
pop
or
ss
ret
jp
lock
jne
jp
hlt
mov
pcmpeqd
cld
repnz
xchg
dec
mov
pop
aas
or
dec
push
fidivrs
out
nop
shlb
add
pop
test
in
fdivrs
pop
mov
jo
pop
push
pop
mov
xor
mov
not
call
adc
jb
pop
ret
mov
pop
fidivs
clc
aaa
clc
mov
mov
pusha
cli
in
repnz
lock
cmpsb
mov
mov
xor
into
in
dec
sbb
je
hlt
das
fbstp
sbb
push
addl
clc
fcomi
xchg
xchg
push
lahf
fsubr
add
mov
push
sahf
pop
clc
js
ss
xchg
mov
lahf
xchg
lret
inc
les
fimuls
push
outsl
cmp
fsubrp
add
push
dec
xor
add
mov
je
fs
xchg
clc
aas
or
std
inc
pop
fidivrl
fmuls
out
stos
iret
roll
lret
mov
inc
xchg
subb
ljmp
pop
push
pushf
pop
lcall
out
subb
jnp
pop
sbb
push
test
add
loop
int3
ret
mov
push
lahf
or
pop
rcr
mov
ret
cltd
pop
call
test
aam
sahf
pop
cmp
push
mov
xchg
push
sbb
aam
cwtl
push
lret
or
sbb
and
add
dec
push
ljmp
lahf
and
pusha
loopne
call
mov
xor
popa
insl
adc
cmp
lfs
mov
mov
out
or
sahf
jbe
out
adc
sti
cld
into
sub
xor
mov
ds
add
call
xchg
rolb
push
xchg
inc
insl
clc
jle
into
enter
stos
mov
pop
das
jp
push
imul
push
pop
es
idiv
push
and
add
dec
add
cmp
lret
hlt
jmp
pushf
push
outsb
out
aas
push
pop
or
add
call
add
mov
xchg
lret
pop
and
lret
fcompl
or
sarb
cwtl
push
mov
lret
inc
test
imul
add
fstpt
les
call
out
ret
push
sub
xor
add
jp
mov
sbb
nop
push
push
xchg
mov
mov
lcall
mov
hlt
je
xchg
mov
dec
mov
or
adc
enter
jmp
std
jns
pop
loope
jp
bnd
pop
insb
jnp
xchg
je
cmp
enter
pavgb
out
pop
js
les
mov
cli
cli
cld
sbb
mov
lret
in
daa
mov
push
lods
push
fiaddl
mov
lcall
lret
out
fsubrs
ljmp
pop
dec
cwtl
push
xchg
idivl
pop
stos
lcall
dec
out
push
xor
sahf
popf
outsl
xorb
cmp
pop
mov
or
ret
inc
mov
data16
inc
enter
xor
lock
inc
xchg
mov
pop
movsl
leave
cs
sti
and
or
and
clc
sub
les
ficoml
and
cmpsl
outsb
ljmp
cld
aas
push
test
xor
mov
or
mov
and
imul
or
orb
lret
rorl
cs
mov
mov
outsb
mov
and
push
push
jnp
fdivr
pop
int
jl
dec
lcall
push
enter
lcall
mov
pop
add
mov
push
or
add
out
pop
pop
cmp
scas
jmp
test
lret
fcomps
cmp
add
push
pop
gs
xlat
xor
xchg
xchg
and
ficoms
mov
mov
dec
popa
sahf
mov
jo
sti
sub
shrl
mov
aas
sub
xchg
ret
sbb
inc
sbb
mov
ret
push
ljmp
mov
aad
mov
inc
xchg
push
notb
outsl
call
push
lcall
xchg
and
mov
lods
add
nop
fsubrl
xor
cwtl
xor
mov
push
bound
rcr
pop
test
outsb
xor
or
cmp
add
mov
or
in
rcl
fsubrl
xor
divl
not
mov
add
push
lahf
lcall
cwtl
xchg
dec
dec
shlb
lret
ret
mov
mov
mov
pop
jno
stos
push
or
mov
scas
rclb
sbb
lock
mov
lcall
pop
xchg
pmuludq
sbb
aas
or
clc
mov
in
pop
xor
roll
mov
fdivs
jmp
lret
pop
push
test
jg
enter
ret
mov
lahf
clc
and
pusha
jbe
shll
and
stos
fmull
cld
clc
add
push
stos
sahf
scas
push
xor
mov
pushf
pop
pop
sbb
popf
mov
popf
push
mov
ljmp
mov
dec
cmp
fimull
ret
lret
fdivr
dec
rcl
sub
mov
jnp
add
bound
jbe
push
sbb
xor
scas
lock
fdivr
mov
sahf
cmp
in
movsl
test
inc
test
fcompl
in
sbb
lock
fcom
cld
stc
ror
test
mov
ret
insl
cmp
or
call
pop
dec
add
fs
fcomps
enter
push
mov
pop
sub
jns
clc
xlat
nop
mov
shll
pop
or
sti
or
sahf
push
dec
lock
sbb
dec
push
fidivrs
xchg
fistl
xchg
sbb
fld
jp
decb
nop
ss
je
sbb
scas
into
or
sbb
divb
hlt
int3
push
stc
ds
ds
repnz
xchg
jecxz
in
into
or
mov
push
cwtl
fwait
lds
mov
aad
xor
mov
and
jnp
ret
pushf
push
add
xchg
lret
xchg
scas
out
out
push
cmpsl
mov
lret
ljmp
out
mov
and
adc
nop
int3
mov
push
push
mov
xchg
adc
test
out
or
push
addr16
scas
push
out
orb
cmc
clc
pop
js
jno
jecxz
je
fisubrs
push
push
jae
cmp
xchg
or
rclb
cld
ljmp
inc
outsb
pop
ret
inc
out
mov
or
sahf
xchg
imulb
ss
imul
call
xchg
lret
mov
imul
lss
daa
jns
xor
adc
sbb
mov
mov
xchg
push
outsl
inc
cmp
dec
test
xor
ds
or
std
stc
xchg
or
push
push
push
jb
repnz
xor
mov
mov
sbb
arpl
stos
scas
lret
xor
jl
pop
fsubrs
out
pop
mov
xchg
fmuls
neg
outsb
into
push
pop
test
cmp
pop
pop
add
xchg
shrb
scas
xor
mov
in
xor
xchg
mov
rcrb
or
lcall
sahf
push
int3
mov
subl
xor
mov
add
test
push
or
fsubrs
test
push
lock
aas
popa
lcall
popf
xchg
push
int3
ss
push
add
adc
test
xor
or
push
hlt
mov
aad
lock
push
mov
lret
push
dec
and
sub
mov
ds
cmp
fnstenv
xchg
adc
das
jp
mov
pop
or
pop
leave
add
xor
cmpsb
pop
xchg
fwait
mov
pushf
int3
cmp
mov
mov
lods
outsl
aam
les
pop
sub
dec
xchg
rol
mov
jb
cld
jp
pop
pop
or
js
clc
pop
pop
insb
pop
add
mov
jnp
mov
repz
neg
ret
aad
jp
pop
jg
inc
push
jae
outsb
push
je
cmp
or
popa
mov
ljmp
lods
rcll
test
ds
push
out
mov
xor
aas
fdivs
mov
js
pop
push
mov
mov
and
xor
ficoms
nop
lret
ret
out
lcall
pop
in
push
fdivs
push
hlt
lcall
les
call
test
push
push
sbb
and
add
lcall
ret
sbbb
push
xor
imul
xchg
push
add
sar
jp
call
fldl2e
add
mov
mov
sbb
xchg
xchg
ret
callw
xor
lcall
add
rcrb
arpl
push
movsb
cld
add
ss
in
pop
adc
push
pusha
fadds
hlt
stos
fcomps
mov
ljmp
enter
mov
nop
lds
push
xlat
inc
out
out
and
sub
pop
xchg
adcb
jbe
inc
clc
fs
or
xor
lret
into
out
inc
shrb
andb
push
fnstenv
call
fnstsw
xchg
or
lock
fiadds
out
lret
out
pushf
xor
shr
xor
mov
mov
rorb
mov
loope
add
cmp
nop
stos
xchg
enter
sbb
add
pop
jo
lahf
loopne
cld
dec
ret
cli
fistps
ljmp
test
and
adc
and
pop
scas
xchg
mov
adc
push
cmpsb
pop
stos
idivl
test
lcall
or
ret
or
pop
call
or
push
jb
cmp
pop
cwtl
rcrb
or
lock
stos
cvtpi2ps
push
mov
pop
cmpsl
mov
shll
xchg
pusha
xor
stos
add
xchg
mov
adc
arpl
scas
ja
aam
sti
push
hlt
dec
scas
mov
outsb
incb
stos
inc
lock
jbe
call
xchg
xchg
mov
inc
dec
cmp
pop
call
gs
jge
pushf
mov
rolb
pop
add
aas
xlat
xchg
mov
test
push
les
or
lea
push
fmul
ja
pop
in
mov
mov
or
pop
ds
pop
mov
mov
movb
add
hlt
fstpt
or
push
inc
mov
inc
push
xor
divb
clc
xor
push
fsubrl
ljmp
popa
dec
fwait
notl
orb
add
or
and
inc
mov
cmp
cwtl
out
jnp
aam
out
add
test
push
mov
loop
mov
stos
pop
push
or
test
mov
xchg
mov
sbb
les
pop
mov
xchg
fldcw
mov
pop
pushf
lcall
add
add
test
jo
dec
mov
ja
xor
lock
clc
mov
mov
add
shl
mov
cmp
fidivrl
pop
aaa
xor
xor
fwait
out
xor
addr16
hlt
pop
lock
lret
neg
push
pop
fidivs
pop
scas
aam
mov
push
xchg
pop
adc
rclb
lcall
cld
cwtl
call
rolb
mov
ror
lcall
or
push
cmpsl
or
mov
push
clc
ficomps
push
or
call
mov
int3
fcompl
mov
lsl
lret
xchg
push
out
lea
cmp
ret
cwtl
test
imul
insb
sbb
push
mov
xor
xchg
std
test
mov
push
xchg
dec
in
dec
inc
aam
enter
stos
sub
and
rclb
cld
lret
inc
pop
mov
mov
or
fmul
adcb
dec
fldcw
repz
adc
or
xchg
add
jo
pop
inc
inc
addr16
mov
nop
xor
push
inc
cwtl
pushf
ret
aas
jecxz
mov
xchg
les
das
cwtl
jae
jnp
pusha
mov
push
pop
repnz
mov
xchg
cmc
test
add
mov
xchg
mov
in
or
mov
cwtl
mov
movsb
mov
ret
jo
mov
jecxz
mov
pop
test
shr
jae
ds
pushf
pop
pop
add
repnz
push
push
enter
clc
xchg
mov
xchg
pushf
pop
cwtl
add
aaa
inc
dec
pop
dec
dec
shlb
ljmp
add
idivb
nop
sti
mov
add
call
sahf
or
scas
ljmp
mov
push
jmp
adc
fadd
sbb
xor
xchg
call
int3
sarb
or
les
or
clc
mov
fcmovne
push
movsl
xchg
xor
xchg
hlt
sbb
ret
pop
negb
out
mov
pop
mov
lea
scas
mov
pop
cld
lock
mov
and
repnz
std
and
pop
lock
jbe
and
mov
fimuls
ljmp
mov
jae
fdiv
pushf
jge
stos
fisubl
divl
mov
les
push
out
idiv
addr16
std
xchg
call
fst
mov
insl
mov
popa
into
cmpsb
or
in
cmpps
pushf
pop
dec
data16
adc
lcall
and
mov
add
sti
xor
xor
inc
leave
mov
xchg
fcmovu
xchg
icebp
unpcklps
stc
and
jp
stos
imul
cli
sbb
add
repz
imulb
push
jno
ret
sahf
add
in
adc
mov
jns
push
daa
pop
mov
pop
xor
push
add
jnp
fimull
into
incb
ds
mov
and
adc
pop
fcoms
cmp
cwtl
psubb
add
imul
xchg
hlt
mov
xor
xor
ficomps
loope
push
mov
jo
test
sbb
mov
add
mov
xchg
es
dec
add
dec
and
pop
andl
mov
js
cmc
jne
cmp
xor
lcall
xor
mov
shrb
xchg
nop
pop
fdivrs
mov
xchg
ljmp
je
inc
push
xchg
cmp
pop
push
rclb
cli
lret
mov
pop
enter
lock
fdivrs
mov
out
inc
out
xchg
mov
mov
cld
rcll
ljmp
push
cmp
add
aam
xchg
mov
cmp
or
adc
and
mov
std
fcompl
enter
push
xor
mov
les
stos
in
push
fstps
add
add
lea
lcall
outsb
cli
inc
push
or
sbbb
xor
xor
xor
mov
aas
inc
aam
aad
in
imul
test
or
lds
pop
sub
fldt
and
mov
pop
nop
enter
push
push
or
icebp
out
dec
pop
stos
xchg
xor
into
sahf
cld
sub
rol
js
fidivl
mov
je
popa
cmpsl
outsb
xor
cmp
pop
cld
pop
inc
pop
pop
pop
shlb
pop
push
mov
push
pop
clc
in
lods
cltd
push
jp
repnz
xchg
es
adc
shlb
inc
push
stos
pop
add
or
pop
ljmp
jbe,pt
xchg
fs
pushf
mov
mov
lock
pop
lahf
push
loope
cli
aaa
fcomps
es
or
jbe
xor
fmull
mov
fisttpl
addps
stos
pop
lods
aam
test
mov
push
mov
mov
cmpsb
fisubrl
shr
mov
push
adc
cwtl
xor
test
fdivl
iret
lret
shr
or
lods
pop
push
adc
or
rclb
fmulp
xor
add
mov
scas
add
and
jb
sarb
aad
push
or
pop
pop
aas
or
lock
ljmp
into
shll
int3
xor
or
mov
out
mov
in
xor
sahf
add
scas
into
stos
push
pop
mov
dec
in
mov
sub
jne
sahf
mov
push
les
mov
icebp
divb
push
test
sub
sub
sub
and
bound
ljmp
pop
enter
mov
push
mov
xchg
lret
pop
ljmp
clc
scas
xor
in
bound
test
add
push
rcrb
dec
cmpsb
mov
push
into
repz
fisubl
xchg
or
cld
cmpsb
pusha
jp
inc
add
or
dec
shll
jg
movsb
stc
mov
jb
or
pop
jb
pop
out
les
paddusw
ret
push
into
fisubrl
idivb
test
pusha
ficoms
hlt
rorb
mov
lahf
mov
cs
in
jnp
mov
scas
cmc
out
sbb
fstps
pushf
mov
sahf
call
int3
stc
nop
outsb
pop
les
jb
sar
add
and
ret
lret
mov
stos
rolb
inc
les
mov
xor
call
in
test
mov
movsbl
nop
into
ret
mov
xor
dec
dec
clc
dec
rorb
mov
rcll
or
cmp
cwtl
mov
outsl
andl
scas
movsl
das
out
inc
push
ljmp
or
imul
pop
cwtl
lret
out
push
ret
jecxz
in
adcb
sbbb
insb
shl
dec
rcrb
pop
and
add
mov
mov
out
push
nop
xchg
pushf
pop
bswap
rclb
and
out
inc
scas
mov
test
ljmp
pop
inc
xchg
clc
ret
pushf
add
mov
mov
xor
xor
mov
scas
or
pop
mov
fidivrs
call
iret
lret
stos
test
xchg
push
pop
sbb
stc
stos
js
cmovle
push
fs
int3
testb
addr16
sub
fsubrl
push
int3
enter
xchg
jl
or
ljmp
sub
outsb
stos
rsm
out
in
add
mov
push
xchg
shlb
clc
mov
pop
push
add
pop
mov
mov
or
lds
mov
imul
lds
adc
mov
pushf
xchg
pop
test
pop
stos
ds
lock
in
dec
hlt
ljmp
ret
xchg
lret
dec
mov
mov
les
repnz
fs
out
icebp
cmp
out
push
shr
imul
out
mov
fdivs
push
push
shl
push
fstpl
inc
inc
pop
mov
inc
inc
pushf
push
call
fsubrs
sub
stos
rcr
ret
push
scas
push
mov
fsubl
and
and
ds
rol
aam
loope
addr16
jp
fdivs
push
hlt
ljmp
mov
xchg
imul
out
pop
pop
call
or
lods
movb
fiadds
push
push
inc
mov
out
and
mov
stos
or
scas
mov
aas
mov
repz
cs
sub
sbb
mov
push
data16
jbe
loope
cli
ljmp
int3
aam
mov
and
push
std
clc
sarb
lcall
sbb
cmp
add
out
je
push
dec
add
or
mov
push
fdivrl
xor
jns
lods
mov
ja
and
dec
xchg
ljmp
push
inc
cmp
mov
pop
les
jno
mov
sbb
add
mov
xor
lock
fdivrl
mov
pop
icebp
mov
mov
hlt
push
or
cmp
push
lret
rcr
faddl
inc
int
pop
push
in
das
mov
loop
ds
loop
divl
mov
test
lcall
mov
out
jmp
les
adc
ret
cwtl
push
mov
loope
fidivs
or
arpl
jp
test
xor
push
test
dec
ror
imul
mov
scas
push
sub
ljmp
arpl
jb
es
push
mov
lret
pop
sub
ficomps
xchg
fsubrl
aas
mov
out
test
cmp
inc
fs
push
jbe
faddl
sub
mov
lcall
addl
aaa
das
rol
and
xchg
in
es
aam
xchg
dec
repnz
add
fs
int3
inc
sar
jo
xor
xchg
adcl
cmpl
add
push
popf
cmp
ret
mov
mov
ror
xchg
pop
cwtl
insb
clc
ret
fdivrl
sub
pop
out
xchg
push
stos
mov
sahf
or
jnp
dec
cmp
imul
gs
xor
push
nop
sbb
push
and
enter
xor
fdivp
rorb
mov
pop
lret
xor
push
xchg
cmp
fisubrl
cwtl
and
cmpsl
pop
adc
inc
rol
jno
aam
pop
imulb
pop
mov
jp
stos
sub
in
fimull
push
divl
fldenv
lods
add
and
mov
fcmovne
imul
xor
ret
push
add
fsubp
push
pop
jg
jecxz
ss
stos
xchg
jge
and
sbb
push
cmp
clc
cld
push
sub
jl
or
out
aas
lods
stos
mov
rorb
clc
mov
movsb
dec
mov
inc
sbb
sbb
into
nop
and
sbb
idivb
fists
test
mulb
sbb
pop
and
jecxz
xor
out
repnz
push
xor
int3
add
fsubr
shl
ja
or
mov
mov
js
outsb
fnstcw
push
jge
not
test
je
dec
adc
ljmp
and
clc
sub
cltd
ret
cwtl
lcall
pop
pop
data16
xchg
movsb
sti
mov
push
neg
js
mov
in
les
mov
cmpsb
fldenv
or
fiaddl
cli
push
push
pop
hlt
pop
jle
cwtl
shl
ds
or
mov
sbb
mov
xchg
loop
lcall
xchg
push
xor
dec
enter
xor
lret
hlt
or
enter
leave
or
mov
rolb
ss
repnz
or
mov
stos
into
pop
scas
xchg
fiaddl
mov
cli
inc
pop
xchg
neg
cltd
mov
xchg
jae
cli
sub
push
lret
xchg
test
imul
pop
xor
lock
mov
mov
cmp
mov
cmp
fisubrs
or
sub
sbb
inc
pop
out
xchg
pop
adc
cmp
fimuls
mov
sbbb
shrb
cli
and
dec
test
push
scas
cwtl
sbb
push
in
mov
lock
sub
nop
shlb
nop
clc
test
dec
push
ficoms
enter
cmpsl
rolb
mov
dec
mov
or
xor
xchg
sub
or
fisubs
xchg
sti
ds
cwtl
sahf
push
xor
mov
fprem
cwtl
lock
arpl
outsb
adc
adc
adcl
fwait
sbb
sbb
gs
outsl
aad
cli
xor
mov
push
add
push
sarb
dec
pop
cwtl
mov
dec
and
or
sub
fdivrs
mov
lock
pop
jnp
lret
in
int3
or
ljmp
push
mov
les
cld
jno
mov
sarl
jno
in
and
ljmp
es
or
pusha
inc
hlt
lret
fsubrl
mov
ror
add
int3
test
push
xchg
ficompl
pop
inc
lcall
lahf
xchg
mov
jae
std
je
loopne
add
xor
and
shr
dec
mov
popa
ss
int3
lock
call
lods
mov
fistps
adc
int3
add
dec
push
xor
mov
push
mov
mov
aad
maxps
shl
and
push
sahf
inc
ret
xlat
mov
mov
out
popf
lock
mov
fidivl
add
mov
mov
mov
cmpl
and
or
aaa
inc
or
mov
push
test
in
sbb
jmp
pop
mov
mov
ja
ds
fbstp
ret
push
ljmp
stc
out
aam
stc
fdivr
sub
cwtl
js
mov
and
mov
test
jmp
in
xor
cld
pop
push
decb
jp
adc
test
rcrb
movl
or
test
sub
mov
push
pop
cmp
test
scas
nop
out
add
dec
in
sub
sbbb
lret
stos
and
push
dec
invlpg
nop
lret
jbe
pop
inc
sahf
push
aas
rclb
scas
mov
test
dec
pushf
fidivl
sbb
xchg
lock
fistl
hlt
into
sub
push
lcall
or
adc
stos
mov
sub
ficoml
add
dec
inc
xchg
daa
aas
ret
idiv
push
test
dec
fdivs
shlb
adc
jnp
pop
pop
cmp
test
and
test
push
pop
imul
push
repz
mov
sete
mov
push
sub
sti
push
push
or
xchg
ds
push
mov
lret
out
sub
jns
ficompl
out
pop
and
xor
or
mov
and
cmp
pop
push
fdivs
add
shlb
add
int3
dec
mov
loop
ret
rcll
add
mov
in
ficompl
xlat
mov
divl
xchg
enter
mov
sbb
ljmp
fdivs
cmp
and
xor
dec
mov
scas
mov
pop
icebp
pmulhw
fisttpll
ljmp
jbe
lretw
push
push
adc
pop
cld
mov
stos
dec
lods
dec
push
in
dec
mov
or
and
outsb
movsb
lea
lahf
inc
adc
push
mov
bound
test
fsubs
insb
xor
int3
in
cwtl
dec
sbb
xchg
dec
ja
ss
jb
or
movsb
add
in
dec
nop
test
ret
adc
jo
inc
scas
fsubrs
int3
xor
test
sub
jmp
or
xchg
xchg
or
out
mov
inc
popa
add
and
inc
enter
test
out
or
mov
xchg
mov
fcomps
sahf
repnz
mov
inc
push
xor
rcl
add
add
divb
outsl
fwait
aam
rcl
pop
mov
pop
dec
cld
push
jmp
sbb
sub
jecxz
cmpb
or
enter
paddusb
js
pop
mov
or
pop
lods
add
imul
test
push
aas
stos
xchg
pop
pusha
shl
lock
mov
and
mulb
and
enter
xchg
mov
push
fldlg2
xor
lahf
pop
push
cmp
test
out
inc
adc
inc
mov
pushf
push
mov
es
mov
hlt
inc
out
shlb
xor
mov
aas
jmp
mov
push
incb
push
scas
cli
and
pop
jmp
sub
mov
aad
dec
inc
pop
dec
mov
mov
pop
shll
hlt
nop
test
cmp
xchg
les
cli
stos
mov
cmp
mov
into
mov
mov
rorb
pop
adc
nop
dec
ljmp
add
lret
cld
rorb
adc
mov
adc
into
test
push
xchg
cmp
mov
nop
jo
push
fiaddl
sbb
in
lret
mov
mov
pushf
cmp
pop
or
shlb
mov
lret
and
jp
add
push
adc
push
clc
dec
or
add
sub
repnz
out
rcrb
test
mov
mov
add
es
cwtl
xor
js
mov
adc
insl
out
imul
mov
popf
inc
aam
into
repz
mov
push
testl
fimuls
pusha
pop
jae
xchg
inc
out
push
pop
jge
ficompl
lods
mov
inc
mov
rorb
fdivrl
jp
pop
repnz
push
clc
sarb
fdivl
ljmp
mov
lods
dec
xlat
inc
in
aam
push
pusha
push
inc
shrb
movsl
testb
lret
rorl
call
xchg
sarb
pcmpgtd
pop
fucom
push
push
aam
fmull
jecxz
push
sahf
sbb
push
test
aam
shlb
adc
out
aas
push
push
mov
int3
outsl
pop
pop
lahf
ss
mov
out
add
adc
hlt
xor
push
fidivrl
pop
sbb
jmp
cmpsb
mov
stos
sub
jl
icebp
or
mov
push
lods
imul
lock
adc
jbe
call
in
pop
jns
pop
adc
out
jnp
push
adcb
iret
mov
fcmovu
pop
mov
xor
push
stos
test
scas
pop
sub
mov
dec
sar
add
lcall
out
xlat
push
int3
cwtl
stc
iret
ss
outsl
aam
ds
fcoml
or
loopne
pop
mov
daa
movsb
test
jno
int3
cld
xor
enter
cmpsl
pop
pushf
sti
setb
stos
out
sar
pusha
lcall
xchg
es
adc
jae
ds
fdiv
mov
sbb
repnz
loopne
ret
xor
ficomps
jns
pushf
pop
push
and
add
pusha
cld
outsb
int3
fidivrs
shufps
add
xchg
or
pop
dec
inc
fsubrl
or
and
aam
rolb
rsqrtps
clc
cli
xchg
pop
pop
jp
ret
fscale
sar
nop
mov
ljmp
rclb
add
or
mov
push
pop
ficomps
push
out
push
fdivs
sbb
cld
sbbl
inc
mov
ret
ficompl
test
shlb
sbb
hlt
mov
cmp
test
sub
cli
mov
or
cmp
leave
xchg
in
mov
inc
mov
lret
or
icebp
dec
pop
push
test
cmp
sahf
pop
push
stos
cld
into
or
mov
fidivrl
mov
movb
aad
jg
icebp
cmp
ret
pop
aas
js
out
jb
test
pop
hlt
stos
sub
les
nop
out
or
addr16
hlt
stos
mov
lcall
mov
aas
out
pushf
call
pop
mov
ficomps
cmp
dec
test
add
insb
xor
hlt
dec
xor
add
pop
mov
mov
ficompl
insb
jb
addr16
and
dec
gs
inc
sub
fistl
push
pop
mov
lcall
fisubs
ds
iret
mov
cmc
outsl
hlt
mov
test
jmp
lahf
roll
mov
rclb
sti
xor
xchg
cli
lods
xchg
int3
std
mov
adc
outsl
clc
mov
xor
mov
jl
inc
out
mov
negb
xchg
data16
dec
cwtl
or
out
sahf
cmp
dec
mov
lcall
dec
pop
cmpsb
cmp
push
insl
xor
ror
stos
push
push
out
rcrl
test
cld
and
jb
ret
out
int3
rolb
pop
mov
or
dec
je
popf
test
xchg
and
sbb
push
rolb
or
enter
mov
rcl
stos
xchg
push
add
enter
movsb
arpl
adcb
xchg
sub
push
aam
jne
dec
aaa
data16
ficoms
pop
cmp
push
xchg
rcrb
dec
and
xor
nop
xchg
adc
cmp
ss
stos
or
mov
data16
dec
add
xorl
jns
pop
mov
cmpsb
or
out
sahf
push
push
xor
test
pop
push
test
insb
enter
dec
fdiv
inc
mov
or
xchg
mov
cld
and
pop
and
pop
pop
clc
mov
xchg
lcall
stos
fiadds
sub
push
sti
sbb
mov
mov
add
push
mov
or
ret
sar
outsb
xor
sbb
dec
test
shrb
pop
pop
add
pop
hlt
ljmp
lcall
xchg
rclb
mov
inc
or
in
push
fiaddl
test
ficomps
sub
jp
or
repnz
xorb
xchg
ficomps
mov
clc
mov
and
lahf
int3
cmp
neg
cld
pop
add
xor
mov
iret
movsb
test
jnp
push
fsubrl
lock
cmp
negb
nop
shl
in
jns
pop
xchg
repnz
xchg
mov
adc
bswap
fstps
lea
bound
push
out
scas
data16
call
push
mov
flds
stos
stos
int
repnz
pushf
clc
pushl
fisubl
mov
add
sahf
fcompl
ret
mov
cwtl
inc
push
rcrb
ror
add
or
push
mov
jmp
out
test
pop
out
add
fstl
mov
pushf
pop
cmp
push
lock
sti
cwtl
xchg
stos
movb
lods
pop
fildll
ds
daa
adcb
into
xor
aam
jbe
mov
xor
int3
pop
mov
fsubrp
rcr
es
out
rep
mov
add
aam
jg
ret
iret
sub
lds
push
mov
inc
pmaxsw
add
repnz
sarb
mov
pop
das
dec
add
lahf
mov
fwait
push
sarl
lds
mov
jb
rolb
and
scas
repnz
cli
jbe
cld
out
cmp
add
in
out
mov
fcmovu
pop
push
pop
inc
add
add
sti
mov
fisubl
push
test
cmp
lock
out
mov
rorl
pushf
sbb
or
sub
jbe
sub
repnz
inc
rorb
fmull
jb
cmp
push
mov
pop
enter
movsl
rcrb
cld
pop
in
push
rcrb
pop
and
adc
mov
mov
and
into
lret
xor
mov
fstpt
dec
mov
or
or
lcall
push
incb
mov
arpl
cmpsb
lcall
call
into
pop
xchg
rorb
sarb
icebp
push
in
xor
hlt
clc
mov
xor
xchg
test
pop
push
mov
xchg
sar
mov
push
jge
mov
mov
fisubrs
call
shlb
lahf
or
stc
xchg
in
add
dec
sarl
jbe
gs
divl
mov
adc
rcrb
out
push
imul
stos
aam
jle
adc
add
inc
xchg
ds
pop
dec
in
and
jae
jbe
and
jae
push
mov
jg
arpl
pop
push
lods
int3
movsl
std
cmp
xchg
xor
xchg
hlt
push
pop
xchg
xchg
aaa
mov
je
cwtl
mov
add
rclb
shlb
ficompl
jb
push
fisubrs
xor
mov
adc
bound
fadds
movsb
dec
lea
dec
mov
inc
leave
dec
push
mov
subb
fs
or
lret
pop
clc
fsqrt
pop
mov
push
mov
pop
and
insb
cbtw
sbb
pushf
stc
push
jp
lret
ret
xchg
push
hlt
negb
fsubs
lods
add
lret
sub
mov
cld
xor
xchg
mov
nop
sbb
fldt
cwtl
hlt
push
lcall
repz
stos
push
mov
clc
ja
cli
je
test
or
xor
add
xchg
mov
cs
inc
cld
jle
test
test
inc
dec
int3
in
in
incb
cwtl
xchg
call
xchg
mov
mov
aam
mov
pop
xchg
mov
cmp
lret
jmp
movsb
out
jmp
pop
pop
mov
and
pop
imull
test
pusha
add
dec
not
dec
jno
inc
push
aam
int3
push
cli
or
into
push
imul
lock
sub
and
push
insb
jbe
jbe
dec
rcr
lcall
xor
das
lock
mov
test
pushf
xchg
add
add
lret
fdivrs
xorl
push
stos
cmp
loope
sahf
addr16
ss
or
push
mov
je
pop
neg
out
inc
movb
test
jbe
ret
xchg
fxsave
or
scas
jae
in
mov
jmp
sbb
pushf
cmp
loope
or
add
sub
sti
xor
fcmovbe
mov
leave
xchg
std
imul
jge,pt
or
or
or
dec
shl
pop
push
es
fcoml
in
inc
test
sub
mov
addr16
jbe
fidivs
xchg
nop
pop
out
push
mov
jecxz
imul
inc
shlb
int3
add
and
jnp
into
repnz
pop
push
pop
loop
mov
xor
lock
or
into
fmul
push
loopne
mov
aad
add
dec
xchg
mov
add
mov
and
fidivl
loop
add
adc
fidivrs
jp
repnz
jle
xchg
ret
mov
xor
or
int3
mov
lret
mov
stos
dec
hlt
pop
sahf
dec
xchg
sbbb
movntps
mov
imul
mov
cli
popa
sahf
cmpsl
sbb
dec
pop
pop
xor
mov
mov
dec
pop
cmp
mov
or
into
mov
push
sub
and
jmp
pop
stos
sarb
out
je
repz
jmp
pusha
aam
lock
or
mov
and
call
into
fistps
cmc
push
pusha
int3
lret
jmp
push
fcomps
pop
pop
xor
sbb
std
mov
movsl
mov
cwtl
rcl
sbb
out
sti
lock
aaa
rol
fidivrl
xor
ret
or
push
clc
push
mov
popa
xor
jns
cld
adc
bound
orb
dec
or
movsl
dec
and
cmp
repnz
inc
fdivp
or
push
popa
fisubl
in
cmpb
push
jecxz
mov
push
hlt
nop
in
scas
movb
sbb
pop
jns
repz
sbb
push
xor
in
pop
sbb
addr16
cmpsl
xchg
mov
fdivr
mov
es
add
insb
or
pop
inc
into
mov
add
xchg
push
aam
inc
jns
or
aas
lret
stos
mov
insb
push
or
nop
or
or
mov
shlb
xor
repnz
ljmp
lret
js
clc
sub
jecxz
ret
stos
ret
push
call
sahf
lcall
into
inc
add
hlt
fwait
inc
and
popf
sahf
cld
cmp
mov
js
test
mov
sbb
jne
test
and
sti
mov
sahf
mov
mov
fdivrs
test
loope
mov
xor
clc
push
push
js
mov
iret
xchg
adcb
iret
push
in
sbb
xor
cwtl
arpl
pcmpgtw
push
mov
and
movsl
mov
cmp
pop
enter
arpl
stos
mov
repnz
sti
pop
mov
pop
cld
xor
mov
add
ret
cmp
mov
clc
mov
mov
insl
clc
cs
xchg
xor
ja
xchg
aas
mov
or
repnz
and
cmpsl
stc
out
pop
add
mov
jns
lcall
dec
pop
mov
mov
sti
sub
or
or
pop
pop
inc
and
mov
jb
add
scas
or
je
push
or
subl
fsubs
push
add
mov
mov
ljmp
dec
dec
test
pop
outsb
push
xchg
mov
adc
lock
lock
xor
jb
sub
lret
mov
clc
sub
sbb
les
std
xchg
std
aam
or
ret
or
pop
push
xchg
mov
mov
lret
ljmp
xor
mov
aam
int
mov
xor
cmp
test
sbb
imull
pop
pop
in
or
jmp
xor
hlt
or
sahf
mov
pop
adc
push
cmp
aam
mov
xchg
in
outsl
inc
mov
jbe
repnz
cwtl
or
push
int3
shr
fst
jg
cli
adc
jmp
sbb
inc
or
mov
mov
push
fisttpll
push
add
xchg
cmpsb
sti
push
and
enter
hlt
test
repnz
les
cli
push
mov
scas
sub
jns
pop
lock
xchg
lods
push
add
add
inc
loopne
push
rcrb
jmp
ret
and
push
or
in
cmc
ljmp
inc
out
push
mov
call
adc
hlt
add
or
sbb
std
movsl
sti
lcall
xor
cmp
sahf
ret
nop
fxch
xchg
out
pop
in
lret
pushf
arpl
test
inc
loop
mov
mov
xchg
dec
and
cltd
test
stc
fisttps
mov
mov
jmp
insb
pop
fbstp
stos
pop
fs
or
call
pusha
daa
shrb
movsl
in
mov
shll
enter
inc
inc
repz
sbbl
push
push
push
bound
mov
cwtl
les
add
mov
shr
fdivs
mov
out
inc
inc
push
add
ret
xchg
sub
mov
test
mov
or
sbb
aam
dec
mov
lret
mov
mov
pop
push
cli
pop
push
xchg
dec
movsl
cmp
lret
xor
cld
fisubl
repnz
mov
pusha
adc
cmp
ljmp
fwait
add
xchg
sub
fidivrl
pop
or
xor
clc
lock
sbb
into
sti
mov
jmp
push
fsubl
push
scas
xchg
mov
lret
xor
add
rol
fiaddl
cmp
sahf
lret
xchg
push
add
aam
ret
sahf
loope
mov
pop
add
lcall
cld
inc
imul
xchg
fcomps
shr
fdivrl
push
jge
push
mov
xor
int3
arpl
sub
lcall
shr
push
call
mov
test
aam
aam
or
sbb
sarb
pop
ljmp
mov
add
xchg
stos
scas
push
ret
push
mov
add
mov
inc
ss
sar
sarb
dec
jo
cmpb
xchg
mov
shlb
or
xor
mov
clc
ret
bound
cmp
stc
aad
push
stos
or
cli
jno
out
adc
fstpt
jbe
push
out
inc
or
scas
dec
sahf
enter
inc
pop
repnz
getsec
jns
pop
test
sbb
nop
enter
mov
call
inc
mov
pop
pop
pop
mov
push
adc
mov
repnz
mov
cmp
xchg
lss
sar
into
loop
aam
inc
out
push
ljmp
aas
mov
xlat
ret
xchg
call
add
clc
or
push
ret
les
into
or
push
jmp
and
cwtl
int3
mov
mov
or
add
push
xor
cmpl
lods
add
push
decl
pop
lea
mov
xchg
or
faddp
push
loopne
inc
adc
shrb
pop
adcl
fisubl
mov
sahf
imul
sbb
lock
xor
shrb
cmp
mov
fsubr
mov
fiaddl
gs
shrb
sub
ja
inc
add
das
cld
shr
push
mov
out
test
cli
push
add
xchg
xor
fadd
out
mov
ljmp
fisubl
pop
xchg
push
dec
inc
cld
xor
and
fisubs
stos
fistl
pop
rclb
pop
ret
add
call
bound
ret
pop
inc
jb
xor
sahf
pop
inc
leave
mov
clc
pop
out
mov
dec
inc
or
mov
and
aam
clc
gs
add
cmp
sub
js
push
adc
xchg
mov
outsb
rolb
add
rsqrtps
fcoml
repnz
movsb
ss
fsubrl
aas
pop
xchg
jg
les
or
mov
mov
testb
pop
pop
inc
push
push
rorb
lea
ret
push
jb
fnsave
mov
mov
dec
jmp
cmpsb
fsub
mov
add
pop
rol
cld
aam
xchg
mov
js
xor
repnz
cld
mov
fiaddl
data16
jg
add
hlt
addb
lret
sbb
fimuls
and
in
shll
ret
lea
push
in
mov
xor
daa
cmp
stos
cwtl
push
mov
mov
out
fcompl
nop
std
push
leave
inc
jno
inc
in
xchg
jmp
call
pop
or
js
mov
test
movsb
mov
mulb
mov
jg
mov
fsubrs
pop
cmp
push
xor
push
rorb
push
aad
xchg
int3
mov
dec
rcr
imul
cmp
ljmp
cmp
jl
push
jge
push
mov
jae
pop
xor
imul
pop
stos
shl
cwtl
cld
add
jb
aaa
out
xchg
out
outsl
sahf
sbb
std
je
sbb
pusha
jmp
push
out
or
arpl
pop
aaa
xchg
or
cmp
aad
jge
inc
pop
test
scas
ja
dec
sbb
push
sbb
inc
lcall
clc
into
xor
and
gs
add
xor
add
ret
pusha
es
pushf
dec
hlt
clc
cmp
lret
in
pop
repnz
lock
fcmovne
pop
lret
inc
mov
mov
ret
cmp
fadd
pushf
rolb
push
scas
mov
inc
xor
mov
mov
dec
incl
sub
jp
push
jge
lret
rcrb
pop
sub
mov
ret
pop
out
addr16
mov
xor
stos
xchg
pop
enter
clc
ds
fcompl
pop
or
test
jns
mov
rclb
out
fisubs
or
jo
jp
pop
fdivs
xchg
cwtl
inc
gs
sbb
dec
clc
nop
mov
cli
pop
xor
out
dec
or
xchg
repnz
or
adc
stc
jge
out
lock
repz
or
cmp
mov
call
test
fldt
adc
sbbb
inc
mov
xor
push
push
add
or
push
push
scas
addr16
add
add
aaa
sbb
stos
cmpsb
dec
or
adc
pop
clc
mov
mov
pop
cld
cmp
fcom
xor
sub
pushf
xchg
arpl
out
imul
push
cmp
mov
lcall
cmp
lahf
das
cld
into
mov
sub
lret
shl
xor
test
stos
vmwrite
sbb
fsub
dec
ljmp
mov
fimuls
sub
xchg
fcoms
pop
imull
or
test
aaa
cmp
cmp
mov
jbe
mov
clc
mov
pushf
mov
bswap
pop
outsb
fwait
xchg
mov
rol
pop
pop
jns
add
sbb
fidivrl
call
jg
inc
movl
cmpsl
ret
sbb
stos
push
xchg
fisubl
jo
cli
jl
nop
lcall
enter
ljmp
pop
jmp
lret
jb
mov
int3
adc
push
push
or
bound
outsb
sub
lcall
int3
xchg
push
clc
aam
xchg
push
pop
enter
shr
nop
sub
into
dec
pop
mov
push
or
jg
clc
mov
mov
stos
adc
cwtl
scas
outsl
dec
sub
fwait
cmp
push
test
hlt
push
fdivrs
bswap
sbb
scas
or
call
pop
enter
sub
dec
aam
pusha
sub
xchg
and
in
adc
jp
push
sub
insb
ljmp
mov
in
into
xchg
adc
cld
stos
in
jnp
nop
repnz
push
or
jg
scas
test
enter
cltd
or
xor
mov
cmp
punpckhdq
dec
jbe
ficoms
fstps
pop
sub
ret
pop
add
mov
ret
add
ds
pushf
mov
push
lret
xor
call
lock
pop
mov
lcall
fsubrl
lret
cmp
repnz
mov
mov
sbb
dec
lahf
lret
mov
pushf
xor
ljmp
mov
gs
cmpsl
sub
out
and
dec
pop
mov
mov
push
cld
cmp
rclb
cld
lcall
stos
scas
jmp
push
jb
pop
jo
clc
xchg
cvtps2pd
je
add
repz
sbb
push
ret
outsb
pop
or
icebp
dec
hlt
push
aaa
lret
shrb
sysenter
into
mov
lds
cwtl
enter
stos
addb
and
xchg
repz
mov
adc
test
xchg
sbb
push
mov
and
ret
xchg
stos
in
aas
adc
xor
out
xor
call
or
in
fimull
and
pop
fs
adc
mov
xchg
pop
outsb
je
punpckhdq
pop
xchg
out
out
mov
pushf
push
jmp
mov
arpl
lods
sbb
push
push
adc
jecxz
dec
fdiv
into
inc
icebp
mov
push
mov
inc
push
rcrb
clc
in
mov
pop
lret
sub
push
xchg
das
ljmp
xchg
push
shl
or
adc
dec
inc
cmp
pop
sbb
add
and
int3
fdivrl
xor
fcmovu
aam
fidivs
aas
pop
fadd
xchg
pushf
shlb
jbe
and
ret
notb
ss
xchg
add
fidivrl
push
sarb
and
out
test
jp
into
icebp
cli
cmp
jnp
or
inc
lcall
cmp
pop
pop
fisubs
hlt
xchg
mov
sbb
push
ret
mov
and
jns
mov
xchg
lds
shlb
out
sub
cli
outsb
test
xchg
imul
mov
push
mov
addr16
mov
pop
hlt
xchg
mov
pop
ret
mov
cs
pop
out
mov
pop
pop
jb
cwtl
dec
cs
xlat
mov
adc
add
mov
clc
fisubl
shl
add
pop
push
cmp
imul
int3
rcrb
stc
lock
add
push
cmp
add
cwtl
mov
add
push
fisubs
cmp
out
test
jnp
lock
mov
mov
imul
push
lahf
mov
sahf
jmp
loop
or
jmp
out
bound
jecxz
fdivrl
clc
enter
pop
sbb
xchg
inc
xor
repz
mov
stos
out
hlt
aam
sarb
fs
out
fdivs
iret
cld
dec
arpl
or
scas
sub
aam
inc
xchg
test
xchg
lahf
mov
mov
mov
dec
lret
jmp
pop
push
pop
push
lret
and
loop
scas
lcall
hlt
nop
pop
or
sbb
mov
push
or
sarb
mov
lret
out
and
scas
fisubl
fimull
not
ror
xlat
ret
call
idivl
push
ljmp
loope
enter
inc
test
ljmp
mov
pop
sub
stc
adc
add
pushf
aam
sbb
sbb
dec
push
lahf
clc
mov
test
dec
inc
inc
divb
add
add
shld
repnz
ljmp
test
nop
call
cmp
ret
scas
add
mov
mov
mov
ret
mov
dec
cs
je
xchg
rcrb
cmp
ret
add
cmpsb
xor
aaa
jnp
jp
mov
pop
push
jp
pushf
jbe
push
andl
fdivs
mov
movsl
xchg
cmp
nop
ljmp
loop
inc
call
pop
repnz
mov
jmp
push
push
inc
outsb
std
sub
inc
pop
outsb
mov
sbb
movsl
cwtl
and
pop
sub
bound
popf
jnp
ret
jb
lock
ficoms
push
leave
int3
pushf
shlb
out
or
fcomps
adc
mov
sbb
pop
jnp
fmuls
jae
and
jo
or
or
jbe
ficoms
cmp
rcrb
dec
inc
loope
call
pop
scas
sti
push
test
mov
xor
mov
fcoms
xchg
dec
shl
fcoml
xor
push
repnz
arpl
shr
xor
or
add
faddl
dec
add
push
negb
inc
push
and
bound
inc
xor
mov
jns
fnsave
lock
mov
rclb
pop
xor
std
mov
ljmp
xlat
cwtl
in
js
in
push
xchg
aam
mov
scas
cmp
scas
stos
test
mov
xor
mov
jmp
cmp
mov
inc
mov
jnp
ljmp
insb
jns
clc
dec
mov
sahf
mov
xchg
stc
ud2
sbb
cwtl
aas
wrmsr
mov
push
shrb
pop
scas
stos
sti
inc
rcl
or
xchg
test
pop
stc
xchg
or
repz
movsb
in
lret
add
loopne
cwtl
lcall
lock
pop
push
push
mov
rorb
inc
pop
pop
sbb
xor
rclb
scas
out
in
mov
insb
or
push
push
iret
jmp
test
std
mov
lcall
fs
pop
mov
and
xor
cwtl
push
es
out
shlb
rcrb
iret
cmp
lcall
sbb
iret
and
fsub
dec
testb
stos
pop
xchg
lret
cwtl
fsubs
cmpsb
sti
push
lock
lods
sbbl
pop
pop
jnp
xchg
ret
sbb
ds
adc
out
aaa
fsubr
insl
inc
add
out
cmp
mov
das
les
stos
cmpsb
fmuls
xchg
cld
dec
out
dec
dec
xchg
fsubrs
aam
out
and
xor
scas
xchg
movb
dec
sbb
mov
pop
push
pop
cmovb
add
jne
mov
cld
pop
test
sbb
add
push
mov
repz
jae
scas
and
push
call
inc
pop
inc
or
xchg
push
mov
fstpt
mov
ljmp
xchg
mov
rclb
jb
ljmp
or
and
cmp
shrb
clc
pop
mov
adc
push
shll
rclb
mov
packssdw
sbb
mov
ret
cld
push
shrb
pop
call
nop
ds
fdivr
xchg
push
push
inc
faddp
or
fisubrs
out
mov
cmp
rolb
push
pushf
into
scas
mov
shr
enter
and
clc
sub
cwtl
cmpb
incb
mov
jmp
mov
add
movsb
mov
add
adc
dec
fadds
ret
fwait
cmp
mov
cwtl
mov
pop
xor
pop
jmp
jo
mov
stos
xchg
enter
pushf
hlt
mov
mov
dec
fdivrp
stos
js
in
pop
out
or
pushf
scas
mov
mov
sbb
cmp
out
cs
add
stos
clc
out
mov
and
sbb
lahf
out
xchg
jo
push
sbb
add
scas
dec
sahf
xchg
int3
inc
sub
scas
pop
lahf
xchg
loopne
sub
add
popw
movsl
push
push
and
dec
mov
repnz
aam
mov
cld
roll
stos
movsl
xchg
jo
test
mov
cwtl
add
jbe
pop
mov
mov
push
adc
adc
lock
inc
mov
rcrb
xchg
add
xchg
gs
stos
xchg
bound
lret
movb
xorl
les
bnd
push
mov
hlt
push
push
push
mulb
pop
lret
mov
or
into
enter
shrb
ljmp
cmp
out
clc
cld
repnz
lcall
or
push
xchg
pop
jns
push
sbb
xchg
pop
push
xlat
cmp
pop
sahf
testb
mov
pop
fiadds
cmp
xchg
push
call
fcompl
fiaddl
xchg
into
mov
mov
cld
lcall
or
pop
stos
sbb
ror
sbb
adc
jl
jb
aaa
push
xchg
movsb
imul
pop
repnz
shlb
negb
fdivs
ret
xor
pop
lret
gs
xorb
sub
fbld
pop
inc
sbb
mov
mov
mov
xchg
add
test
ret
test
scas
mov
mov
les
pop
fcompl
mov
or
stos
loop
jbe
out
mov
ret
or
dec
mov
outsl
aas
aaa
ljmp
dec
movsl
negl
fdivrs
push
fdivs
add
movsb
dec
clc
ret
idiv
push
lcall
mov
push
fiaddl
mov
pop
xchg
sbb
inc
jno
ljmp
xor
xor
xchg
xor
stc
pop
sti
sub
jnp
cmp
jbe
aaa
dec
or
xor
mov
xchg
pop
xchg
jecxz
pop
mov
push
and
arpl
mov
mov
in
mov
push
dec
xchg
inc
out
dec
nop
clc
test
xchg
jb
or
xor
cwtl
fldenv
insb
jnp
pop
imul
stc
lock
enter
cmp
pushf
fs
mov
inc
sub
movzbl
stos
adc
mov
out
inc
out
or
popf
dec
js
loop
push
aaa
mov
mov
cmp
int3
les
mov
mov
je
fcompl
adc
push
lcall
lret
xchg
mov
loopne
or
les
xchg
out
mov
arpl
push
sahf
stos
leave
xlat
mov
pop
pop
and
push
repnz
cmp
fimull
test
repnz
leave
lret
xor
push
mov
sbb
cmp
mov
sbb
test
fsubrs
cs
sbbl
imul
lret
inc
push
pop
test
xchg
ret
mov
xor
adc
incb
xor
mov
cmpsl
jmp
push
mov
or
rcl
bnd
cmp
nop
xchg
or
ja
xor
mov
ret
push
lock
dec
xchg
xchg
mov
ss
ret
lcall
mov
mov
pop
mov
cmp
testb
mov
pop
stos
aaa
add
add
mov
les
pop
add
mov
push
scas
push
into
adc
inc
mov
sahf
sbb
iret
into
add
repnz
in
loope
adc
jmp
push
into
or
and
out
mov
hlt
aam
cwtl
sub
repnz
pop
push
lcall
mov
lret
lret
je
je
add
add
data16
lds
pop
mov
mov
ljmp
xchg
lcall
sub
paddusw
sbb
lcall
mov
andb
and
or
pop
mov
fbstp
ljmp
fcmovu
add
and
sbb
pushf
fbld
cmp
into
aam
movsl
fcomi
mov
xchg
clc
in
mov
xor
xor
sbb
xchg
cmpb
cli
cwtl
or
xchg
mov
movsl
inc
lock
sbb
push
pop
scas
mov
jns
lret
and
rcll
push
mov
gs
out
jp
push
adc
int
mov
rclb
pop
ljmp
cmovs
ds
push
jg
mov
mov
pop
sub
mov
jbe
jno
xor
pop
and
test
mov
or
clc
cmpxchg
lcall
mov
pop
mov
cwtl
fidivl
add
mov
stos
dec
fs
cmp
xchg
arpl
inc
push
es
outsb
mov
hlt
pop
jne
mov
xchg
pop
jnp
jbe
mov
adc
xchg
je
fwait
fwait
jg
mov
xchg
lcall
ds
lcall
stos
jno
stos
dec
cwtl
ror
nop
xchg
inc
mov
mov
rcrl
pop
inc
clc
inc
fdivs
mov
scas
call
scas
outsl
mov
in
mov
push
mov
push
and
mov
and
fidivrs
fcompl
cli
lret
mov
pushf
xchg
cmp
test
aaa
stos
sbb
aas
jnp
mov
push
jmp
lret
repz
adc
pop
pop
inc
out
mov
cwtl
aas
mov
imul
fiaddl
test
test
ret
mov
cmpsb
cmp
cmc
pop
dec
cwtl
push
fsubs
cmpl
lcall
push
adc
mov
dec
or
fidivs
push
xchg
or
jno
hlt
faddl
repnz
adc
dec
adc
aam
ret
fcmove
data16
mov
pop
inc
rcrb
setle
cmp
fimull
fcompl
dec
mov
cmp
lcall
ret
fstpt
mov
inc
aam
mov
pop
test
sub
push
lcall
dec
mov
dec
push
int
orb
inc
ds
xchg
fidivrs
adc
push
rolb
andb
push
mov
mov
and
scas
jb
imul
nop
jns
popa
and
int3
mov
pop
test
adc
pushf
or
xchg
scas
ljmp
pop
sbb
add
mov
push
push
sub
leave
add
mov
lsl
inc
mov
push
jmp
inc
test
mov
and
outsb
mov
rorb
and
movb
xchg
xchg
cs
imul
std
nop
jp
shl
mov
mov
sti
mov
push
aam
loop
popa
adc
rclb
test
sbb
push
pop
sub
ljmp
or
mov
repnz
ljmp
ror
mov
adc
xchg
push
or
popl
jmp
call
aam
scas
enter
push
imul
and
rsm
mov
imul
pop
pop
add
ficoml
mov
icebp
cltd
stos
pop
movl
fcomp
adc
inc
mov
cmpsb
pop
add
xor
stos
mov
stos
fsubs
aaa
cmp
das
xchg
and
cwtl
enter
fsubrs
xchg
dec
pop
fstpt
pop
rcrb
pop
jle
iret
push
pop
push
mov
jp
pusha
pop
repnz
ret
add
repnz
scas
jg
sti
hlt
cwtl
fimull
sbb
push
pop
mov
mov
mov
cmp
cli
inc
pop
arpl
sub
push
bound
int3
mov
ret
adc
pop
xor
testb
fists
lock
pop
dec
es
outsb
or
push
push
cmp
enter
jecxz
lahf
shr
fs
add
repz
out
mov
mov
inc
enter
test
or
aas
fisttpl
mov
mov
cld
dec
fcompl
aas
out
push
xchg
sar
fists
jbe
shrb
adc
sbb
and
xchg
call
ret
fdivp
cwtl
push
and
ficoms
int3
fstps
mov
xor
or
xchg
imul
mov
mov
mov
push
not
addr16
and
xchg
pop
outsb
js
mov
or
push
cmpsb
mov
push
repnz
mov
push
xor
or
mov
test
cmp
sarb
fadd
mov
into
mov
repnz
jno
fistpl
ret
dec
push
sar
jnp
xchg
mov
data16
or
push
pop
cmp
stc
into
mov
enter
or
cmpsl
movd
mov
pop
pop
jbe
pop
or
ss
movsb
or
cwtl
loop
mov
pop
lcall
pop
sbb
bnd
lret
cli
daa
add
or
stos
stc
and
pop
in
out
sbb
outsl
call
ss
pushf
cmp
cmp
xchg
xchg
and
pushf
xor
jnp
push
rorb
mov
inc
call
sar
xchg
ljmp
lcall
orb
mov
lret
and
clc
lcall
cld
xchg
inc
test
into
clc
xor
cld
lock
jmp
ljmp
lret
pop
das
mov
sub
je
adc
cwtl
stos
ret
loopne
aam
inc
add
lret
jb
pop
mov
adc
lock
pop
adcb
push
ljmp
add
mov
and
adc
inc
dec
les
cmp
mov
insl
pop
inc
rcrb
ljmp
sahf
pop
cmp
mov
push
mov
pop
mov
push
push
ret
cmp
packssdw
push
stos
add
out
push
sbb
je
sarb
add
dec
push
xchg
cmp
fcompl
mov
push
jmp
out
pop
mov
lods
aad
shl
fs
imul
iret
int3
sbb
ljmp
dec
xchg
dec
rorb
cmp
mov
mov
pop
or
push
or
cmp
out
xchg
push
in
cmp
sar
inc
repnz
scas
jp
jns
addr16
test
pop
and
fucomp
leave
pop
mov
aam
jg
mov
mov
imul
jb
ret
pushf
pop
les
add
mov
mov
loope
pop
mov
clc
or
pop
mov
xchg
int3
test
scas
jb
ss
and
push
iret
es
insl
push
aad
dec
lods
push
and
or
pop
ficoml
add
stos
lods
arpl
xor
ficompl
out
mov
mov
cmpb
ret
add
pop
cli
mov
lods
lcall
pop
ss
jbe
enter
mov
lcall
or
arpl
xchg
fiaddl
shlb
cld
add
incb
or
aas
sub
xchg
aas
fcoms
fsubrp
jb
repnz
add
cwtl
stos
cmp
ljmp
pop
test
mov
int3
or
mov
add
outsl
scas
sbb
nop
push
lret
int
aas
clc
punpckhbw
pop
xchg
add
shlb
jmp
or
cld
into
mov
out
mov
ret
mov
pop
rorl
mov
or
mov
push
cmp
mov
shrb
clc
stos
leave
test
clc
or
mov
inc
out
pop
mov
pop
pop
test
pop
gs
jg
ret
psubd
divl
lret
stos
movsb
adc
fdivrs
into
mov
test
fidivs
nop
stc
loop
cmc
movsl
test
add
es
cmp
lock
mov
cmp
addr16
or
sbb
xchg
mov
pop
leave
mov
lds
cs
sbb
lcall
sub
pop
dec
xchg
add
dec
sahf
fsubrl
lcall
loopne
adc
pop
and
add
test
out
xor
daa
or
test
push
mov
call
adc
mov
mov
push
ja
inc
add
xor
jmp
sarb
xchg
mov
icebp
cmp
xchg
cli
js
cmpb
xor
pop
or
lods
aas
out
pop
and
sahf
mov
sub
loop
or
call
sbb
push
in
xor
dec
push
sbb
xchg
sahf
pushf
mov
repnz
movsb
mov
add
cmp
scas
push
jbe
repnz
mov
lds
push
add
or
in
pop
and
pop
push
hlt
shlb
ret
mov
scas
mov
add
cmp
out
push
into
and
inc
lods
orl
push
sbb
decb
enter
sub
push
fidivrs
sbb
es
je
inc
je
loop
pop
add
mov
mov
mov
lret
xor
cltd
add
push
fstp
addb
xchg
shr
mov
mov
test
sbb
lret
push
add
dec
add
inc
fimull
in
loope
pop
cwtl
fcomip
test
add
lret
fdivrs
je
fbstp
push
into
cwtl
ret
cmp
pop
fists
jbe
mov
lret
aaa
repnz
cld
xchg
add
int3
sahf
xor
xor
ficompl
repnz
es
adc
mov
and
dec
push
pop
add
jo
cmp
push
or
icebp
ds
rcl
clc
cli
in
mov
imul
into
mov
hlt
push
pop
xchg
mov
sti
lock
rclb
dec
repnz
fdivrl
fcoml
nop
and
mov
push
sti
cltd
xchg
and
sahf
nop
lea
pop
nop
es
loopne
loope
cmp
cwtl
data16
out
xorb
dec
cmp
ds
push
push
xchg
mov
or
clc
sbbb
dec
lcall
out
sbb
pushf
mov
xor
repnz
ljmp
mov
xchg
movsb
xor
imul
clc
xchg
push
clc
rol
xchg
add
fnstcw
paddw
mov
xchg
fldt
in
rolb
and
ret
push
mov
nop
pop
add
cli
and
mov
mov
jno
cmpsl
lea
addr16
inc
push
pushf
push
lret
test
repnz
push
push
stc
dec
test
and
pop
cmp
fadd
aaa
stos
ret
mov
into
mov
stos
jb
pop
mov
inc
aam
rolb
mov
int3
and
mov
xor
div
cmp
pop
or
xchg
pop
jae
data16
repz
and
xchg
pop
push
mov
in
add
stos
test
fiaddl
in
pop
jg
dec
repz
sbb
test
add
pop
ffreep
stos
mov
clc
pop
pop
xchg
push
out
push
xorb
push
cmp
push
xchg
push
mov
mov
inc
shlb
fidivrl
dec
push
scas
mov
js
ret
rcrb
pushf
push
add
cmp
call
push
mov
aam
in
pop
jne
xor
mov
clc
les
sbb
cmp
pop
add
sti
repnz
pop
aam
pop
loopne
stos
mov
sub
inc
repnz
fidivrl
fwait
mov
jmp
movntq
push
pop
xor
add
clc
out
mov
ret
fisubrs
pushf
lret
test
ljmp
ret
sbb
push
pop
psubusb
into
in
jb
ret
jmp
add
testb
pop
fidivs
push
rol
pop
push
jne
cmp
lret
scas
ficomps
test
push
mov
test
insl
add
sahf
jmp
xor
shl
rclb
ds
cwtl
cld
fdivs
mov
mov
inc
push
mov
faddl
roll
inc
pop
call
mov
pop
cmp
fcomps
mov
push
out
pop
sbb
mov
sbb
or
mov
add
pop
push
fsubs
pop
mov
mov
cmp
xchg
clc
arpl
adc
mov
cwtl
call
rolb
mov
xchg
push
aaa
mov
dec
stos
pop
mov
mov
pop
repnz
push
mov
aas
dec
push
or
lret
mov
add
mov
pop
add
clc
dec
pop
dec
insb
dec
push
mov
xor
cld
mov
push
pop
fcoms
ficoms
push
jge
test
loopne
xlat
mov
enter
out
sbb
sti
mov
gs
test
and
clc
jl
mov
sahf
or
clc
nop
push
push
lock
test
add
sbb
push
pop
int3
xor
pop
fsubr
push
sbb
cmp
je
push
mov
mov
cmp
add
jb
mov
mov
add
inc
sub
pop
xchg
cwtl
sub
shlb
pop
and
lret
cmp
pop
nop
lcall
fdiv
push
in
cmp
shlb
mov
aas
pop
or
imul
js
or
or
gs
fmull
push
mov
pop
or
cwtl
pop
sub
xchg
mov
xor
add
add
mov
or
xchg
cmp
rorb
cld
mov
dec
rcl
dec
or
inc
dec
mov
in
mov
mov
sub
ss
push
inc
and
cmpsb
les
inc
cwtl
scas
in
jnp
aam
xchg
in
mov
repz
clc
xorb
cwtl
sub
lock
cmpsb
pop
repnz
loope
or
stc
jecxz
pop
jno
aad
push
mov
lea
aas
arpl
mov
mov
and
js
clc
pop
or
scas
mov
test
push
or
hlt
repz
sbb
enter
xor
xchg
lcall
lret
into
faddl
fcmovbe
stos
test
fs
push
xor
xchg
push
mov
pusha
and
pop
into
or
add
scas
sub
mov
pop
sahf
cmp
xchg
xchg
ficoml
clc
movsb
mov
xchg
dec
lret
or
stos
rcrb
cwtl
fdivs
lret
pop
insb
pop
into
ret
pop
lret
or
aam
sbb
push
negb
lcall
call
cli
mov
sbb
test
xchg
cwtl
out
mov
inc
sub
cmp
inc
pop
test
or
nop
movsl
call
fmuls
shll
push
enter
lret
nop
ret
test
movsl
sbb
dec
fmuls
inc
mov
sahf
scas
rolb
or
xor
add
out
mov
jg
pop
cmp
fimuls
into
jbe
ret
jecxz
push
inc
mov
add
sti
ds
jmp
mov
les
pop
pop
lret
or
aam
xchg
mov
lock
ds
xchg
scas
repnz
mov
js
mov
js
add
and
test
mov
stos
adc
cmpsl
mov
fcoms
into
xchg
js
push
lea
imul
inc
in
mov
hlt
xlat
mov
mov
inc
dec
bswap
mov
mov
mov
add
clc
xchg
ljmp
cwtl
decb
inc
loope
jmp
pop
xchg
jnp
mov
add
arpl
xchg
pop
imul
pop
mov
hlt
mov
cli
fdivrl
shrb
out
stos
or
fcoml
add
stos
mov
scas
and
cmp
push
push
test
lret
pushf
ljmp
fwait
dec
pop
jnp
lcall
sti
or
fldl
cltd
test
ficoml
bound
lock
clc
out
dec
pop
push
dec
aam
inc
scas
push
fdivrs
shlb
lret
pushf
jno
xor
push
xor
les
jns
enter
aas
sub
rol
mov
dec
inc
sub
int3
mov
sbb
pop
popa
mov
mov
mov
idiv
push
cli
push
pop
push
jae
and
xor
push
stos
add
sbb
xor
push
push
xor
int3
or
inc
and
paddw
push
jmp
jb
or
push
jmp
push
pop
jge
js
mov
jnp
add
mov
nop
fiaddl
mov
or
decl
jecxz
and
or
inc
push
fsubrl
shrb
sbb
in
inc
pop
enter
mov
mov
jne
mov
push
hlt
pop
add
cld
fiadds
add
adc
pushf
add
jbe
and
lock
xorl
cmpsb
add
stos
cld
adc
mov
cmpsb
fcmove
fsubs
into
fsts
and
push
xchg
and
ljmp
xlat
xchg
sti
and
negb
lods
hlt
and
mov
test
push
ret
cmp
jns
int3
fisubrs
pop
fisubrs
cmpxchg
cwtl
push
inc
enter
and
push
pop
fldl
pop
and
xchg
mov
jno
push
dec
sub
cvtdq2ps
cwtl
cmp
add
push
cld
gs
fmull
inc
mov
gs
mov
stos
xabort
daa
mov
scas
lret
xor
adcb
notb
orl
lea
pop
mov
jp
push
out
xchg
cli
sub
fs
les
mov
cmp
testb
push
aam
cmp
xchg
scas
shll
dec
sahf
sar
call
shl
pop
pause
fidivrl
or
jecxz
jne
scas
adc
xor
xor
xchg
aas
mov
scas
lret
push
ret
cltd
xchg
lods
adc
and
bound
stos
mov
jb
or
and
divl
addr16
rclb
pop
out
ret
push
stos
pop
xor
outsl
mov
repnz
or
push
mov
jbe
call
inc
imul
test
adc
add
data16
pop
stos
inc
add
test
or
cmp
repnz
cwtl
fsin
mov
mov
gs
hlt
or
xor
sub
sahf
cmp
mov
lcall
sbb
jnp
call
or
or
inc
mov
lock
sbb
nop
xchg
adc
and
or
pop
mov
inc
shl
push
sbb
out
cmp
aas
mov
mov
or
cmp
call
fbld
hlt
decb
insb
inc
pop
daa
ja
es
jmp
test
jp
add
test
jb
ret
or
mov
dec
xor
or
retw
dec
mov
and
jns
jne
push
push
lea
test
scas
mov
in
push
mov
pop
push
clc
mov
cmp
test
cld
cli
mov
enter
stos
cmpsl
es
clc
push
fcomi
fdiv
pop
push
or
pand
out
xchg
divl
push
shl
add
push
ljmp
and
push
add
outsb
add
dec
pop
ret
mov
push
cmp
int3
enter
jb
cmpsl
pop
push
pop
out
int3
arpl
jne
clc
popf
pop
dec
mov
stos
pusha
aam
sub
test
fdivs
cwtl
xchg
pop
xor
insl
insb
lret
rcrb
cmp
mov
pop
divb
lock
xor
mov
dec
syscall
pop
int3
mov
adc
inc
mov
inc
or
aam
adc
enter
xchg
dec
xor
sbb
push
pop
out
and
sub
or
fisubrs
fs
cmpsb
mov
out
mov
std
stos
pop
lcall
test
jns
push
test
cld
or
push
int3
cli
add
mov
mov
lret
jns
shl
sahf
imul
add
cltd
fsubrs
xlat
pop
push
dec
cmp
pop
es
in
shrb
inc
shrb
mov
into
lret
gs
ret
shl
xchg
xchg
gs
mov
jnp
cld
or
out
scas
decb
repz
scas
or
push
xchg
pop
push
cmp
dec
inc
or
cli
cli
push
xchg
jo
add
cmp
pop
lcall
add
pop
mov
mov
lock
add
ds
ret
mov
mov
pop
aaa
jp
cld
adc
mov
repnz
out
xor
xor
ficoml
jne
mov
rclb
inc
add
mov
pushf
shll
lret
adc
sahf
ret
test
lock
in
daa
or
pop
cmp
jl
test
xchg
iret
fiaddl
cmp
aam
fdivs
pushf
sub
mov
xchg
daa
cmp
mov
pop
movsb
psubw
dec
fcoms
dec
scas
ret
lret
mov
jbe
mov
int3
pushf
add
imul
pusha
enter
adc
push
push
inc
xchg
test
mov
scas
cld
in
ret
or
mov
mov
aas
jns
fisubrs
fstps
pop
mov
cmp
xchg
xchg
mov
add
fsubrs
gs
orb
adc
mov
aad
mov
dec
leave
sarb
xor
mov
jb
ljmp
shl
add
xchg
aaa
mov
sti
cmp
xchg
or
jns
ficompl
jno
mov
adc
scas
cmp
pop
cld
or
pop
mov
cli
jl
lcall
ljmp
push
rorb
add
jbe
insb
sahf
je
enter
sub
xlat
cmp
int
jecxz
shll
cs
pop
pop
xchg
mov
push
fcoms
scas
cld
add
add
fxrstor
decb
push
xor
lock
clc
adc
mov
mov
mov
mov
test
jae
ljmp
pop
sbb
stc
and
daa
repnz
sti
or
insb
shlb
pop
and
cld
xor
test
cmp
push
mov
pop
xor
add
nop
mov
cmp
mov
jmp
das
jle
dec
jo
aam
and
movsb
stc
clc
add
adc
mov
pushf
loop
sub
jp
icebp
fstpl
aam
jmp
mov
xchg
adc
test
je
in
cli
out
adc
mov
and
clc
rol
xchg
into
push
and
call
inc
fwait
sti
push
mov
fs
enter
movsb
stos
popa
push
push
adc
dec
ror
xchg
test
add
scas
mov
mov
dec
les
shlb
sahf
adcl
dec
inc
clc
dec
adc
dec
or
cmp
lret
add
push
xchg
xlat
ss
les
ds
pop
repnz
je
push
xchg
cmp
or
push
nop
adcb
ljmp
sahf
inc
rolb
mov
jbe
adc
int3
notl
mov
sahf
pop
mov
mov
and
scas
pop
aam
xor
xchg
push
or
mov
xlat
nop
fcomps
repz
js
arpl
add
sub
in
mov
and
mov
cmpsb
sti
pushf
into
push
mov
test
ds
aam
pop
std
mov
cli
mov
push
aam
pushf
ljmp
cld
ret
add
push
lahf
push
dec
inc
sarb
xchg
pop
idivb
pushf
sahf
xor
ljmp
cmp
int3
sub
int
and
mov
aad
pop
ljmp
iret
shrb
add
mov
mov
inc
sahf
push
pushf
hlt
pop
cmp
ss
faddl
mov
dec
pop
ret
ds
adc
pop
ret
sbb
mov
adc
cld
pop
mov
push
or
dec
adc
ljmp
incl
lock
xor
mov
out
push
ljmp
rcll
imul
inc
xor
xor
or
lret
jp
lret
int3
cld
push
add
cwtl
push
lret
push
adc
push
scas
cmp
scas
ficomps
mov
nop
jecxz
int3
mov
cmp
add
aam
fs
insb
xchg
mov
mov
push
ret
push
repnz
frstor
nop
mov
xchg
push
add
rcrl
and
fcomp
inc
js
mov
nop
stc
lcall
jmp
in
jns
mov
sbb
sarl
out
in
mov
pop
push
push
lret
int
mov
push
mov
pop
xor
and
nop
xchg
loopne
idiv
mov
lds
jne
xchg
movsb
mov
les
add
out
insb
mov
lret
addb
int3
mov
pop
inc
and
sbbl
repnz
mov
push
xor
fadd
cmp
mov
pusha
scas
aam
rcrb
mov
lock
push
les
jecxz
push
imul
or
lret
fdivs
dec
cs
lahf
sub
cmc
fists
sub
cmp
fadds
push
xor
xchg
push
lcall
jbe
pusha
mov
push
push
push
fldt
xor
sbb
cld
imulb
lds
into
data16
fxam
cmp
clc
and
out
int3
pop
stos
jmp
xor
icebp
or
enter
push
add
mov
pushf
mov
lds
mov
mov
xchg
add
push
arpl
shrb
jnp
into
adc
repnz
sbb
sbb
and
push
jecxz
cld
fmuls
ret
enter
jae
xchg
rolb
dec
adc
pop
xor
xor
jmp
xor
xor
test
or
or
divb
dec
ficomps
push
dec
stos
jl
int3
les
repnz
icebp
push
stos
rolb
in
xchg
xchg
negb
out
outsl
push
adc
mov
into
addr16
pop
bound
lcall
aam
js
aaa
cli
rolb
int3
jnp
fcomp
fwait
jp
jge
add
sub
mov
lock
repz
in
inc
test
cmp
or
pop
cwtl
ja
push
pop
enter
or
mov
inc
jp
cld
adc
nop
les
xor
hlt
pop
lcall
mov
push
sahf
repnz
jg
mov
fildll
mov
and
sub
faddl
pop
lcall
call
mov
ljmp
insl
sbb
in
mov
clc
adc
scas
inc
imul
test
or
aad
shlb
fmuls
jecxz
nop
xchg
add
cmp
add
fwait
sbb
dec
mov
mov
insl
pop
or
hlt
andb
cmpsb
mov
push
repnz
pop
cmpsb
hlt
or
mov
lcall
int3
int3
sbbl
xor
pop
dec
push
push
dec
cmp
fisubrs
cmp
test
arpl
jp
bnd
sti
push
shlb
mov
in
xchg
inc
imul
dec
test
push
cli
adc
inc
shlb
add
fmul
and
sbbb
push
cwtl
fistps
cwtl
pushf
test
shr
fwait
rorb
pop
mov
pop
lret
dec
pop
or
dec
cmp
xchg
mov
add
add
sti
hlt
hlt
shlb
sbb
xchg
cli
push
lcall
mov
mov
inc
fistpl
jmp
fisttps
mov
pushf
adc
idivb
mov
fdivl
test
push
lret
xchg
sub
sub
lock
mov
jmp
jo
xlat
data16
clc
mov
mov
movb
push
xchg
jecxz
jb
xor
enter
faddl
test
mov
pushf
fsts
xor
or
jne
aad
mov
xchg
fisubl
or
mov
jns
jecxz
fsubrs
add
cmpsl
inc
ficomps
add
xchg
mov
pop
dec
mov
mov
clc
lea
push
ljmp
push
cmc
pop
inc
mov
outsb
and
add
and
cmp
scas
shl
lods
les
or
fiaddl
ljmp
cmp
pop
fcompl
push
stos
adc
scas
pop
stos
mov
xor
sahf
into
or
aaa
push
cwtl
jbe
or
call
push
push
test
aaa
cmp
repnz
gs
xor
xchg
out
push
cmp
xchg
bndstx
int3
mov
repnz
xchg
xchg
enter
cs
pop
jae
push
mov
ret
fcoms
sarb
xchg
dec
es
sbb
nop
in
outsb
add
aam
sbb
sbb
xor
pop
mov
mov
subb
xor
sahf
cld
push
mov
les
fisubl
xchg
out
jecxz
daa
xor
xor
pop
sti
adc
test
jmp
sahf
mov
mov
push
clc
lret
add
jmp
out
cmc
loope
mov
inc
push
xchg
xchg
out
lcall
push
test
push
pop
jecxz
insb
scas
push
data16
lcall
out
inc
sahf
negb
adc
xchg
cltd
jb
in
push
lret
lcall
push
push
insl
pop
sarb
mov
adc
cmp
add
mov
int
aas
mov
xor
repnz
push
loopne
sub
mov
movsb
flds
push
out
cli
cmp
aam
lcall
ret
and
cmp
ficoms
mov
pop
das
jbe
repnz
and
into
xor
push
cmovne
push
pop
lret
stos
push
rorb
pop
fidivl
dec
sbb
cmp
add
add
call
cmp
pop
pop
mov
cmp
mov
add
or
xchg
xchg
adc
gs
push
ret
mulb
sub
xchg
das
dec
xchg
inc
orl
int3
xchg
jbe
push
fbld
pop
cld
jecxz
push
aam
xchg
or
pop
lods
aad
xor
or
lret
popa
ss
clc
jmp
test
in
jecxz
dec
xor
push
into
cmpsb
pop
or
jb
jl
arpl
mov
add
scas
out
push
push
inc
cmpsl
call
push
loopne
push
fcmovnb
or
jnp
mov
lahf
add
in
pop
popf
cwtl
lock
inc
push
mov
add
lods
repnz
dec
push
pop
rolb
cmp
fidivrl
xor
xlat
adc
fidivl
imul
shlb
lcall
mov
leave
scas
lret
repz
mov
data16
push
fiaddl
mov
mov
cwtl
lret
aam
ret
ret
xlat
xchg
sbb
xor
mov
mov
sahf
stos
add
stc
lret
mov
xor
mov
mov
lock
mov
ret
add
dec
sub
unpcklps
add
scas
jbe
push
hlt
dec
addr16
dec
or
pusha
les
push
xchg
rorb
dec
fidivrs
pushf
ficompl
xchg
nop
xor
sahf
int3
mov
jnp
adc
inc
sbb
jb
add
add
repnz
aas
mov
cwtl
sarl
lock
add
fdivl
and
sar
popa
mov
cmp
addb
xor
mov
cmp
push
out
scas
pop
test
push
add
in
and
mov
aam
testb
dec
insb
mov
mov
xlat
testb
xchg
imul
pop
in
cmp
mov
or
cmp
int3
jnp
enter
fbstp
ficomps
jo
xor
pushf
push
nop
mov
aam
repnz
jnp
push
cld
fisubrl
and
orps
ret
add
pop
jns
or
xor
repnz
push
dec
jo
ds
push
push
jp
hlt
out
shll
test
call
mov
adc
cmp
clc
xchg
or
repnz
les
xchg
push
push
fimuls
sbb
add
sub
inc
push
pop
fstpl
and
push
sti
pop
push
into
mov
pop
mov
pop
or
inc
cmp
test
xchg
dec
es
cmp
shl
inc
cmpsb
mov
arpl
xor
or
xor
mov
aam
jo
imul
je
pusha
test
daa
add
push
jp
pushf
mov
dec
into
enter
inc
out
int3
mov
mov
in
outsb
lcall
lret
in
ror
jb
mov
out
inc
scas
xchg
xchg
push
movsl
cmp
out
xchg
cld
xchg
dec
jo
cmp
sub
mov
out
mov
sub
pop
xchg
adc
notl
sub
mov
mov
pop
push
std
cld
xchg
lcall
push
xor
add
push
mov
inc
nop
lcall
stos
mov
pop
es
into
outsl
inc
into
or
xchg
adc
dec
rcr
pop
or
div
xchg
rcl
fdivrl
jp
cmp
stos
test
push
dec
and
add
xor
inc
push
scas
cld
hlt
popa
mov
adc
js
xchg
sub
push
pop
rorl
lret
lds
sahf
add
mov
idivl
scas
mov
mov
cld
sbb
and
pushf
mov
pop
frstor
ds
rolb
lcall
clc
movsl
scas
mov
bound
jmp
push
dec
cld
mov
and
mov
out
lcall
mov
inc
out
mov
jp
sarb
lock
mov
insl
jae
mov
cmp
ljmp
mov
xchg
imul
out
std
jo
clc
cmpsb
sbb
out
int3
xchg
adc
push
ret
push
ficomps
inc
cld
in
stos
pop
dec
fcompl
adc
xchg
mov
test
icebp
in
addb
enter
ficompl
adcb
stos
jmp
mov
ja
shrb
mov
push
sbb
in
sub
test
push
and
xor
add
test
xor
mov
mov
xorb
cmp
into
mov
xor
jmp
mov
fsub
divb
push
xchg
or
lret
and
jae
mov
pushf
loope
cltd
xchg
insl
adcb
cmp
push
nop
call
data16
pop
outsl
xor
enter
add
mov
ja
cwtl
xor
imul
cld
ror
sbb
pop
cld
xchg
sbb
pop
add
or
lahf
pusha
or
dec
out
in
int3
jnp
jns
jg
jnp
pop
mov
push
pushf
add
and
sbb
imul
les
stos
and
call
imul
push
fsub
in
pop
mov
add
jecxz
pop
outsb
hlt
es
xchg
lock
jae
push
sbb
frstor
insb
mov
or
pop
and
faddl
add
movsb
xor
hlt
leave
and
pop
repnz
mov
and
data16
pop
outsb
mov
jmp
cmpsb
arpl
shl
mov
out
loopne
push
mov
add
adc
or
pop
bound
push
and
mov
shr
xor
lods
push
push
movd
mov
lcall
lock
shl
in
rcr
ds
mov
daa
fldl
rcrb
xor
movb
pop
clc
add
and
testb
rclb
lret
dec
fcomps
cmp
cmp
ss
mov
les
and
sub
mov
dec
out
xchg
lds
push
mov
test
push
xchg
sar
lds
push
stc
fadd
inc
mov
fcomps
mov
aam
ficoml
pop
mov
pop
ret
cld
movsl
imul
jecxz
sahf
mov
mov
mov
push
pop
fadds
call
push
cld
mov
push
mov
adc
fimuls
jmp
mov
clc
adc
fwait
push
frstor
shl
outsl
lcall
ljmp
pusha
xchg
cwtl
jmp
pop
not
clc
test
ror
lret
cmp
mov
fdivr
xor
cwtl
imul
test
movl
pop
sbb
lret
fimull
add
lock
inc
imul
mov
icebp
xchg
loope
xlat
cmp
add
xorb
jnp
ret
add
mov
in
or
cld
ror
pop
cwtl
and
fnclex
fst
mov
mov
inc
shl
mov
sbb
mov
negb
addr16
inc
push
jnp
pop
inc
mov
fimuls
mov
adc
ret
sub
pushf
rcr
enter
push
and
stos
add
mov
push
pop
test
ret
fwait
add
dec
lahf
ficoms
ss
int
xchg
fidivl
rcrl
pop
shrb
insb
enter
fadd
or
sub
or
jns
sahf
in
sub
push
pushf
shl
nop
stos
xlat
mov
mov
push
push
mov
pushf
or
push
pop
int
add
dec
fidivrl
mov
in
and
dec
add
cltd
out
xor
xchg
jecxz
pop
xchg
add
lea
mov
mov
imul
inc
scas
arpl
mov
clc
stos
idivb
mov
into
push
or
push
shrd
adc
iret
cmp
shrb
je
shr
nop
mov
mov
mov
xor
pop
xor
push
mov
xor
pop
subb
loope
stc
add
cwtl
into
ja
test
arpl
hlt
dec
repnz
test
mov
or
je
pop
loop
dec
hlt
mov
jno
jno,pt
jmp
mov
push
push
clc
xchg
push
sbb
incb
in
inc
cmp
push
or
hlt
push
jbe
sbb
outsb
lock
jno
stos
lods
out
lret
cmp
mov
lret
xchg
rclb
iret
and
pop
mov
loop
mov
out
sbb
push
loop
lcall
aas
enter
xor
stos
push
dec
loope
mov
gs
iret
jmp
lret
fisttpll
xlat
stos
stos
cwtl
mov
mov
ljmp
or
mov
cmp
pop
pop
gs
cmp
mov
push
aas
ljmp
mov
adcl
adc
aas
sbb
hlt
xchg
mov
lret
xchg
mov
jbe
and
mov
ret
sti
xor
inc
sbb
jns
stos
xor
mov
cmp
mov
jno
mov
xchg
movsl
test
cmp
add
repnz
or
fildl
mov
hlt
pop
mov
push
inc
out
mov
fwait
les
cwtl
into
leave
in
add
cmp
jmp
cmp
in
add
push
cld
rcr
jecxz
dec
lcall
mov
pop
xor
int3
ficomps
sti
mov
repnz
pop
add
dec
test
push
dec
stos
out
jbe
test
pop
fsubr
rcrl
adc
std
icebp
in
mov
add
pop
push
mov
sub
pop
rorb
mov
dec
lds
mov
idivb
mov
lock
mov
cmp
pushf
test
clc
movsb
imulb
ds
xchg
ret
aad
stos
or
add
cld
lock
sahf
stos
ror
roll
in
mov
fcoms
pop
fmul
lcall
ljmp
test
xchg
cmp
and
xor
push
aaa
xor
sub
cmp
mov
nop
ret
fisubrs
push
cmp
cmp
int3
aam
mov
lds
or
or
xchg
inc
push
pop
push
ljmp
xchg
xor
fdiv
add
test
test
lahf
add
enter
enter
cmp
cmp
mov
cwtl
xchg
pop
ds
int3
mov
push
push
mov
test
sbb
pop
and
xchg
mov
push
in
and
add
enter
ljmp
nop
mov
lock
jp
mov
pushf
ret
outsb
in
mov
adc
scas
push
dec
cmc
lret
je
xchg
mov
push
pop
lods
cmp
fsubrl
push
bound
or
test
pop
bound
stc
or
mov
in
mov
sub
mov
addl
or
push
shl
lahf
scas
xchg
mov
out
out
rorb
pop
add
mov
aas
fdiv
les
roll
into
mov
cltd
test
hlt
fcom
in
xchg
lcall
lretw
pushf
or
daa
into
mov
push
pop
mov
pushf
or
leave
ljmp
cmpl
inc
shrb
push
sbb
mov
aam
rorl
lret
je
je
mov
pop
call
test
adc
cltd
ds
fsub
cmpsl
xor
fisubrs
aad
cmp
push
imul
dec
mov
cs
fsubl
jb
adc
push
lcall
xchg
cld
dec
js
iret
add
mov
adcl
inc
pushf
xor
mov
or
negb
or
cs
aaa
rclb
lcall
add
mov
sarb
pop
lcall
insl
xor
pop
mov
gs
dec
in
mov
push
adc
push
rol
fsubs
lret
mov
push
cwtl
mov
scas
adc
mov
insb
push
mov
das
add
mov
and
int3
pop
into
faddl
aad
push
movsl
xor
xor
test
dec
fs
pop
cmc
nop
push
push
pop
fadds
stos
dec
repz
ljmp
int3
cmp
mov
push
fxch
mov
clc
ror
mov
inc
jbe
mov
stos
out
mov
xor
push
mov
addr16
inc
push
adc
stos
neg
clc
and
out
aam
daa
ficompl
jno
mov
push
out
popa
ljmp
cmp
lret
cwtl
sub
or
inc
add
popf
xor
push
mov
loop
loop
push
jp
or
rcr
inc
lret
clc
mov
xor
ret
pop
lahf
or
xor
push
mov
les
push
pop
imul
mov
lods
mov
ret
rorb
je
push
jmp
jg
mov
int3
out
or
ds
stos
mov
push
bsf
xchg
adc
pop
push
jecxz
xchg
lcall
ljmp
dec
pop
scas
repnz
in
out
call
test
mov
lds
sahf
jns
mov
shlb
fdivs
sbb
enter
cld
cmp
lcall
lock
mov
out
inc
shrb
xchg
push
pop
add
xchg
nop
push
les
sub
aaa
and
xchg
push
add
fcmove
int
dec
push
cli
cmp
call
jns
std
jnp
mov
cld
xor
xor
xchg
jbe
mov
repnz
ret
ret
cwtl
inc
movsl
stos
pop
sahf
push
lret
data16
jnp
sub
sub
jecxz
jns
fisubrl
and
test
mul
fwait
jb
fildll
adc
call
mov
pop
loopne
xlat
mov
mov
xchg
inc
add
lcall
movsb
pop
mov
or
pop
push
mov
adc
fimull
mov
cmp
negb
insl
ss
and
aaa
push
aam
mov
mov
pop
repz
ja
lock
push
mov
add
mov
xchg
xor
or
sub
in
setp
fdivr
and
fsts
ss
cs
xor
push
int3
pop
test
mov
test
scas
popf
in
ficompl
xchg
or
push
add
fdivrl
int
nop
enter
mov
ret
data16
fsubs
aam
in
push
jnp
clc
fadds
lea
lods
nop
add
inc
jmp
mov
scas
cwtl
imul
or
lcall
ret
fdivrl
clc
mov
nop
pop
push
gs
dec
cmpsb
mov
push
inc
pushf
fsubrs
ficomps
rorl
daa
gs
stos
jnp
pop
mov
repnz
xchg
push
lahf
and
pop
fmuls
pop
fildl
pop
mov
push
lret
jbe
push
inc
hlt
mov
sahf
cmp
add
pmulhw
rclb
ss
aas
idiv
and
rcrb
fidivrs
add
bound
clc
ja
bound
xchg
adc
mov
mov
sbb
out
repz
sub
popa
clc
mov
pop
cltd
lret
mov
xor
cld
mov
mov
aas
add
fcoml
xor
scas
inc
aaa
pop
pop
push
ds
mov
ror
bound
into
into
mov
push
add
lods
das
mov
mov
dec
add
dec
int3
ret
pop
std
popa
mov
ret
scas
cmp
cld
clc
add
add
std
jge
mov
or
lret
iret
imul
aam
push
dec
int3
push
ret
aam
into
pushf
mov
cmp
js
jp
mov
cwtl
adc
cmp
or
mov
add
adc
scas
add
fdivs
aas
pushf
addr16
cmp
fiadds
or
mov
aaa
add
sub
gs
jmp
xchg
xchg
stos
add
xor
push
xchg
clc
sbb
add
mov
jmp
ret
xor
cld
mov
pop
jg
xor
push
into
add
cmp
lret
xchg
push
push
cwtl
ficomps
or
and
cmp
xchg
jno
std
into
cmp
shlb
push
clc
sbbb
scas
enter
or
xlat
push
cwtl
mov
mov
insb
mov
imul
push
cmp
cwtl
repnz
and
nop
cwtl
cld
sub
loop
test
incb
cli
pop
enter
add
sbb
push
mov
push
int3
xchg
call
sahf
shr
mov
push
lret
push
int
add
movsl
xor
lock
jo
pop
fidivrs
aas
stos
mov
in
into
xchg
int3
out
and
jbe
pop
push
aam
movsb
pop
and
in
xor
ret
fimull
dec
mov
nop
movb
std
push
xor
rorb
test
mov
daa
inc
jb
es
xchg
sub
adc
jns
in
jns
ja
push
inc
iret
mov
in
sub
mov
push
cltd
hlt
fsubrs
and
ret
in
rcrb
sub
push
clc
scas
cmp
repnz
aad
mov
dec
test
mov
into
mov
sahf
outsl
xchg
stos
and
rolb
iret
incb
push
or
sbb
mov
in
push
inc
push
pop
rorb
pushf
mov
xchg
mov
mov
dec
out
jmp
xchg
xor
mov
stos
push
call
into
xchg
out
xor
push
jmp
and
pop
aam
push
gs
int
adc
loope
xchg
cli
xor
ret
pop
or
ljmp
lcall
and
mov
push
pushf
inc
bound
pop
push
and
mov
scas
sar
and
push
sahf
push
in
fwait
xor
add
idivb
pop
scas
xchg
shr
mov
int3
stos
cmp
or
pop
lret
test
lret
mov
clc
push
sbbb
imul
or
andps
lock
test
dec
out
aad
mov
jbe
mov
or
jmp
dec
fwait
sarb
fists
xor
jmp
xchg
ljmp
hlt
xchg
adcb
push
inc
adc
js
test
js
cmp
add
shlb
enter
into
or
stos
pop
push
mov
xchg
clc
and
inc
pop
push
ret
xchg
cmc
push
nop
testb
push
rcr
pop
mov
and
cmp
mov
sarb
or
decl
push
mov
sub
rolb
loope
and
lea
idivb
div
rclb
mov
push
mov
test
add
sbb
roll
fs
bnd
push
push
insb
dec
push
dec
sbb
pop
daa
pop
in
lcall
enter
add
inc
and
les
icebp
ss
pop
negb
xor
nop
lcall
mov
pop
imul
or
inc
lea
test
inc
pop
nop
pop
cld
negb
je
dec
loope
out
je
xchg
xor
pop
sub
or
scas
imul
test
xor
or
pop
add
inc
lret
mov
xchg
test
push
push
test
ds
pop
cld
fstps
test
cld
rcl
pop
ljmp
sti
clc
inc
mov
cli
sahf
repz
fisttpll
cmp
push
mov
mov
clc
or
sub
xchg
shrb
cli
out
sub
je
pop
loop
dec
aam
xor
mov
push
repnz
jl
add
adc
jbe
rcr
xor
mov
cmp
pop
push
in
fwait
sbb
ret
or
sysenter
pop
xchg
lock
jle
int3
into
lcall
and
cmp
fnstcw
pop
stos
pop
push
adc
or
or
sbb
rcl
adc
cmp
fdivr
push
sarb
cld
hlt
out
fdivrl
and
push
in
ret
cmp
cld
pushf
test
cmc
add
prefetchw
or
int3
aas
xchg
sahf
pop
add
icebp
filds
or
mov
mov
fisubl
lcall
jb
xor
sar
or
xchg
call
scas
and
mov
enter
mov
cmc
pop
push
mov
into
lds
dec
pop
mov
ficoms
mov
xchg
les
and
into
clc
cwtl
roll
testb
mov
dec
mov
cmpb
addr16
divb
cwtl
das
test
fcmove
add
mov
addr16
adc
sub
test
in
sarl
or
pop
add
ds
stos
sysret
inc
jb
push
ljmp
pushf
pop
fistps
mov
pop
cwtl
sahf
sti
cmp
test
stos
int3
scas
push
push
push
or
pop
pop
out
je
std
and
lods
jnp
pop
pop
pop
jne
ret
xchg
and
rclb
pop
fisubrl
pop
mov
cmp
xchg
pop
cmp
in
mov
daa
push
xchg
lock
hlt
int3
and
jnp
rclb
mov
add
jbe
dec
cmp
xchg
fcoms
add
repz
sarb
rcr
jnp
mov
fists
xchg
out
jecxz
dec
test
push
cmp
dec
loop
inc
xchg
jnp
ljmp
clc
sahf
mov
push
outsb
add
jecxz
imul
jno
ffreep
jo
mov
out
lret
dec
sahf
shlb
push
test
adc
les
mov
ljmp
xchg
arpl
clc
out
push
jmp
pop
sub
push
int3
mov
out
push
lcall
push
push
mov
mov
xchg
push
mov
dec
popa
mov
les
loope
test
je
mov
mov
lahf
test
lret
test
mov
cmpsb
push
xor
mov
dec
out
xchg
mov
and
add
pop
pop
cwtl
xor
add
sub
ficomps
or
cmp
int3
sahf
idivb
pop
pop
pop
rorb
mov
lcall
lret
dec
aam
ljmp
push
and
pop
ret
sub
cmpsb
xchg
pusha
aad
lock
nop
scas
xor
push
out
or
mov
aas
idivb
pop
add
push
and
int3
in
ret
lcall
fidivrs
and
sbbb
cmp
fmuls
or
mov
mov
xor
push
mov
ret
movl
mov
mov
mov
xchg
or
mov
outsb
ret
orb
into
jge
imul
add
xchg
fwait
bound
mov
and
lret
pushf
inc
es
pop
push
cmp
stos
push
std
test
xchg
pop
shrb
adc
mov
sub
push
mov
mov
call
lock
pop
es
les
jo
pop
or
push
in
jns
adc
or
not
and
bswap
push
mov
lea
pushf
adc
imul
mov
fcmovnb
outsb
add
adc
daa
or
adc
inc
sbb
leave
aam
xchg
adc
pop
aas
ret
dec
daa
pushf
hlt
xchg
lcall
lret
inc
or
fwait
sahf
movsb
mov
cs
ljmp
repz
fidivs
fmuls
les
ljmp
fsubp
or
pop
or
int3
mov
xor
mov
xor
push
pop
cmp
xchg
cmp
std
cmp
repnz
fcmovb
sahf
xchg
mov
jbe
dec
lcall
fisubrs
pop
sahf
outsb
mov
sbb
push
sub
push
aas
ljmp
jbe
jbe
bound
xor
push
lcall
movsbl
inc
aam
notb
mov
pop
push
mov
xchg
add
insl
xchg
sub
int3
ret
clc
push
fiadds
pop
paddq
ret
inc
cmp
pop
ljmp
leave
mov
pop
cmp
add
add
and
inc
push
sbb
dec
dec
push
xor
pop
mov
shr
popa
dec
inc
inc
fisubrs
push
ljmp
movsb
xchg
push
sahf
cltd
dec
subl
int3
fisubs
xchg
pop
loope
shlb
add
mov
andb
lock
mov
push
stos
xchg
ficoml
or
ljmp
jp
in
xchg
fwait
mov
test
jb
add
leave
push
add
sub
adc
test
cmp
mov
mov
or
adc
popa
stos
dec
cmp
mov
nop
ljmp
dec
push
enter
cmpsl
mov
jnp
add
and
sahf
xchg
add
xor
pop
push
shr
xor
aam
btc
push
scas
cmp
mov
and
hlt
fdiv
lds
cs
cmp
testl
fiaddl
fcoms
fs
jbe
lock
mov
inc
fisubrs
test
insb
mov
lcall
and
pusha
adc
mov
cmp
ljmp
mov
ds
or
sti
repnz
negb
stos
aas
xchg
fcomps
lock
in
cmpb
mov
les
nop
sbb
add
test
xor
mov
mov
dec
std
jp
push
popf
lahf
push
cmp
fistpll
aad
inc
and
lcall
shl
mov
stos
xchg
xor
ret
inc
and
icebp
or
out
xlat
mov
nop
jg
nop
clc
ficomps
lcall
jp
clc
aad
cmp
shlb
stos
int3
mov
or
and
push
les
add
sbb
testb
push
dec
sbb
push
xor
mov
in
dec
bound
mov
xor
test
and
pushf
mov
xchg
mov
xor
add
pushf
mov
scas
loop
sbb
or
mov
pusha
xor
xchg
mov
ljmp
or
into
out
add
cs
sahf
adc
repz
cwtl
clc
les
lock
subl
adc
or
mov
test
adc
add
add
cmp
paddd
pop
fdiv
pop
aam
enter
clc
shrb
add
ljmp
scas
jo
int3
or
push
xlat
lcall
push
xor
dec
sub
movsl
mov
pop
xchg
add
xchg
stos
rcl
mov
into
pop
xor
aam
out
push
iret
mov
push
repnz
incb
hlt
jo
mov
xor
call
out
jb
push
xchg
aas
repnz
cwtl
pop
mov
jae
mov
negb
xor
xchg
lcall
fisubs
mov
or
adcl
push
dec
dec
push
repnz
data16
jmp
in
stos
lock
sbb
cld
add
and
mov
pop
mov
mov
les
pushf
add
stc
test
pop
rcrl
dec
add
push
push
or
fcmovu
hlt
push
lret
sbb
xchg
jecxz
std
out
nop
mov
scas
pop
stc
dec
dec
and
push
mov
mov
jnp
cwtl
push
jmp
inc
int3
shrb
jmp
inc
idiv
loope
and
adc
loopne
inc
in
jb
sbb
push
call
iret
mov
mov
fidivrl
sahf
sti
jecxz
test
push
pop
lods
adc
lock
call
mov
mov
or
jae
push
push
adc
divb
add
rcll
and
test
cltd
test
jnp
call
test
pushf
ss
int3
ret
xchg
pop
mov
nop
dec
aam
sarb
test
xchg
mov
jns
ljmp
ljmp
ljmp
repnz
aam
sarl
sub
les
sub
pop
dec
mov
sbb
dec
pop
or
dec
fs
dec
int
mov
sahf
movsl
cmp
fiadds
add
out
lcall
push
jecxz
bound
xchg
dec
pushf
mov
add
scas
pop
and
xchg
in
push
ret
push
push
les
xor
rcrb
pop
or
mov
aam
fmuls
mov
je
cld
fisubrs
hlt
xchg
mov
dec
sbb
test
mov
aam
std
inc
gs
cmc
mov
into
fsubs
xchg
rcrb
xor
ficomps
add
sahf
negb
jl
adc
sti
sbb
cwtl
scas
xor
aas
push
add
mov
fadds
scas
mov
mov
push
push
hlt
adcl
repnz
test
mov
pop
push
mov
lock
mov
push
arpl
testb
rol
pop
push
stc
push
mov
mov
push
imul
ljmp
xor
sarb
xchg
inc
fdivr
push
loop
loopne
scas
and
push
or
into
mov
pushf
addl
xchg
psubsb
add
cmp
xchg
cmp
dec
mov
call
xor
les
hlt
clc
imul
enter
xchg
fidivrl
out
std
js
cmp
ret
fidivrl
add
jp
push
pop
ficomps
or
jo
stos
lret
jns
push
idiv
pop
dec
push
inc
decb
enter
addr16
pushf
divb
push
xchg
lock
in
fdivrs
cmpsl
or
push
or
add
bound
fidivl
lock
lret
and
clc
repnz
xchg
aaa
or
push
or
xor
int3
jae
jb
adc
mov
stos
mov
repnz
jae
cwtl
lea
sub
push
movsb
arpl
sbb
fnstenvs
lret
enter
dec
cld
out
cltd
lret
cmp
push
inc
into
mov
push
xchg
dec
in
clc
ljmp
push
test
iret
test
frstor
test
fwait
lcall
out
incb
loop
lret
or
call
pop
xor
js
add
mov
into
arpl
jnp
or
aad
sarb
cmpxchg
into
add
ret
dec
push
push
mov
adc
xchg
mov
clc
les
ret
mov
push
pop
pop
arpl
mov
aam
fs
cmp
jb
add
mov
test
sub
adcb
add
lcall
push
nop
pop
ds
mov
mov
or
cmpsb
ds
pop
lret
rorb
mov
push
lcall
pop
cld
rorb
push
cli
in
mov
inc
jecxz
xor
enter
jb
in
pop
jbe
mov
imul
call
out
inc
or
or
ficomps
xor
and
pop
das
test
jp
adc
xor
add
push
movb
ljmp
mov
xor
fwait
sbb
push
and
into
mov
pop
test
int3
pop
fdivrs
mov
xchg
repz
lock
arpl
pop
rcrb
das
mov
repnz
or
cmp
dec
cmp
sbb
mov
add
aas
cmp
lcall
call
lret
or
fistpll
bound
pop
iret
mov
push
dec
pop
cwtl
ljmp
roll
pop
push
movsb
sub
arpl
mov
mov
mov
ret
mov
lret
or
pop
ret
xor
mov
in
cmp
ljmp
mov
mov
ja
jmp
ret
xchg
pop
movsb
pushf
xor
xor
cld
xchg
push
outsl
xchg
cwtl
xchg
adc
test
jmp
jecxz
shlb
dec
fcmovb
fcompl
shll
xchg
sahf
cmp
mov
add
ret
mov
and
xorl
aam
lahf
mov
mov
xlat
push
cwtl
xchg
ret
pusha
and
es
es
popa
lret
xlat
out
js
cmp
ljmp
into
mov
xchg
dec
pop
add
jmp
pop
push
cld
or
sub
add
mov
push
negb
dec
push
out
xor
ds
nop
sti
es
into
orb
push
xchg
xchg
les
push
and
xchg
jbe
push
adc
lret
mov
xor
push
add
cmp
pop
fimuls
push
lock
xor
xchg
adc
sbb
icebp
jb
cmp
mov
test
push
mov
andb
pushf
add
inc
pop
out
mov
ljmp
pop
mov
xor
fdivrl
ds
adc
xchg
jg
mov
add
lods
addr16
cmp
lock
cld
push
into
outsb
sbb
std
lret
add
mov
mov
mov
and
rcrb
fistpl
xchg
scas
rcl
ljmp
add
scas
adc
xor
fdivs
mov
jo
gs
add
sub
add
stos
stos
insb
lcall
jo
mov
sbb
mov
fidivs
lock
push
enter
jmp
mov
sarb
pop
dec
ss
xor
test
or
inc
add
lahf
sub
jg
pushf
std
cmp
ret
fwait
inc
cmp
push
xor
push
or
xchg
sahf
mov
rcl
sub
ficompl
mov
ret
xchg
add
sub
mov
lret
jp
fmul
and
addr16
stos
cmp
xchg
pop
lock
sub
imul
pop
push
jmp
add
cmp
xchg
lock
pop
jae
call
std
xchg
fisttpl
call
cwtl
mov
fisttpll
sar
dec
pop
or
fdivrs
scas
bnd
lcall
out
pop
push
fildll
mov
sahf
pop
or
push
sub
ficomps
inc
add
push
nop
into
push
mov
bnd
inc
les
pop
movsl
dec
movsbl
hlt
sarb
int3
add
adc
pop
test
mov
pop
xor
ljmp
jb
nop
xchg
mov
push
add
xor
lock
sbbb
mov
pop
gs
stos
jo
pop
rcll
xor
nop
test
mov
pop
ficoml
push
out
mov
push
clc
mov
or
sbb
mov
cld
and
pop
in
cmp
pop
mov
lock
cmp
pop
mov
and
and
fmul
push
jg
xor
in
fistps
in
mov
cld
jb
jbe
xor
push
adc
cmp
cwtl
sbb
mov
outsl
mov
es
sbb
mov
or
push
mov
lock
shrl
sub
push
out
pop
movsb
xchg
jns
cmp
mov
push
fwait
enter
dec
or
sti
sahf
aas
and
ds
call
test
push
jno
imul
stos
lcall
repz
xchg
cwtl
mov
out
jno
mov
pavgw
mov
ds
clc
mov
mov
xor
push
repnz
ljmp
sbb
out
pop
aad
out
pause
jb
lret
sbb
sbb
rcl
push
mov
pop
push
insl
inc
sti
push
sub
mov
xchg
imul
cli
insl
mov
pop
hlt
lret
mov
into
push
stos
not
pop
sbb
xchg
xlat
push
pop
mov
push
pop
out
adc
jmp
ret
lcall
xchg
cmp
call
or
mov
inc
lcall
nop
fdecstp
sub
loop
add
shl
call
pop
mov
sar
mov
fdivr
mov
xchg
mov
add
dec
neg
out
mov
lcall
repnz
shl
add
pop
pushf
push
pop
clc
sbb
add
pop
shrb
test
loop
aas
pop
and
bound
faddl
or
es
hlt
movb
fcom
inc
xor
push
add
pop
jmp
ficoms
stos
fsubp
call
nop
in
js
out
xor
fsubrp
add
out
scas
aam
fisubrl
in
pushl
lcall
lock
mov
mov
into
push
stc
push
insl
stos
and
or
enter
pop
ficoml
push
les
push
push
bound
into
pop
mov
xor
mov
sbb
or
rclb
subb
mov
es
or
xchg
scas
hlt
mov
jecxz
mov
mov
lock
pop
pop
sti
mov
test
decb
aas
mov
pop
mov
test
or
rcrb
adc
cs
push
ret
in
xor
and
pushf
ds
xor
pop
xor
aam
stc
rcll
mov
enter
xchg
test
dec
imul
jle
lock
jae
shll
mov
cwtl
push
or
inc
or
mov
clc
arpl
xchg
inc
inc
mov
mov
jne
add
fs
aad
mov
mov
push
sahf
pop
test
xchg
add
enter
inc
test
cmpps
dec
sub
mov
sete
and
clc
ljmp
pop
idiv
out
xlat
clc
movsb
call
mov
frstor
out
out
loopne
xlat
pop
xor
test
repnz
cmp
push
pop
cld
xchg
cmp
stos
enter
fadds
nop
into
push
push
mov
or
cmp
aam
mov
push
ja
jb
insb
movsb
fistl
push
out
and
shll
mov
ret
cmp
setl
rcl
push
fwait
sahf
nop
sbb
ljmp
punpckhwd
push
ljmp
xor
mov
cmpb
add
xor
stos
xchg
out
pop
pop
dec
inc
call
rolb
out
add
dec
pushf
clc
stc
xchg
bound
call
shll
movsl
lahf
fbstp
xchg
pop
push
add
dec
gs
inc
cli
xchg
xchg
call
cmp
fadd
mov
scas
pop
or
dec
adc
mov
pop
xchg
out
or
fs
sbb
mov
pop
lret
ds
xchg
rol
pushf
lcall
add
sahf
ljmp
cmp
sahf
push
inc
mov
addr16
rolb
jmp
mov
dec
sbb
ds
cld
enter
les
fiadds
idiv
and
mov
pop
mov
dec
dec
pop
test
mov
lret
inc
fstpt
ficompl
jp
sti
xchg
pushf
dec
push
mov
mov
add
shlb
jb
mov
test
pop
mov
pop
ret
in
fistpl
cwtl
mov
push
xor
pushf
push
add
imul
xchg
test
scas
sarb
dec
xchg
hlt
fidivrl
pop
inc
daa
mov
sub
aam
xor
mov
or
dec
fdivs
sbb
sbbl
lock
inc
pop
xchg
mov
sbb
fs
mov
repnz
push
adc
cmp
pop
xchg
and
sahf
push
outsl
mov
fstps
bound
jae
cmp
les
stos
fsubrs
dec
mov
mov
fimull
add
dec
mov
xchg
call
adc
push
rcrb
xchg
pop
sub
push
cli
pop
jle
cld
shr
jbe
mov
xor
add
in
add
xor
sarb
cmpsb
sbb
cwtl
push
call
xor
pop
add
pop
ror
or
push
mov
push
pop
push
xchg
test
outsb
mov
or
sub
mov
mov
shlb
mov
xor
mov
or
adc
add
lret
sub
cmp
aad
xchg
sub
shr
clc
hlt
xor
push
lds
cmp
pop
dec
pushf
lock
push
adc
pop
pop
jmp
dec
jg
dec
mov
insb
fwait
cmp
shr
aam
add
in
push
pop
push
mov
enter
lock
pushf
cld
clc
pop
push
rcrb
ds
adc
lret
sub
xchg
test
rcr
shlb
push
ds
xchg
fmulp
imul
aam
add
inc
and
mov
aam
jmp
pop
rolb
enter
dec
hlt
lret
dec
popa
or
call
push
and
repnz
xor
fimuls
ljmp
cli
lods
fiadds
jp
scas
call
jns
mov
call
pop
xchg
mov
xor
mov
pop
xor
dec
pop
cld
call
pop
les
jp
jnp
lcall
xchg
sub
push
je
push
cmp
pop
loop
cwtl
pushf
fmul
stos
mov
dec
push
push
stos
xchg
fimull
lret
xor
clc
out
ljmp
or
adc
mov
push
stos
pop
adc
in
push
out
or
sbb
sahf
lock
or
inc
fs
ja
dec
test
mov
fcoml
cmp
sahf
or
jge
aam
cld
lea
xor
pop
ljmp
ficoml
xchg
into
jg,pt
cwtl
sar
shrb
into
cmp
aam
paddd
bound
fsubr
mov
sub
mov
gs
ja
jle
pop
sahf
scas
add
push
pop
fdivrl
into
mov
mov
scas
movsb
xor
adc
in
lret
sub
lret
cld
jne
xor
push
or
and
out
or
sahf
mov
movsl
mov
mov
loop
lahf
sti
icebp
pop
xor
xchg
outsb
test
callw
lret
rclb
inc
and
inc
xor
xchg
outsl
sbb
jnp
enter
scas
into
mov
xchg
lret
stos
sbb
sbb
add
cld
pop
xchg
hlt
or
and
ds
mov
loopne
push
xchg
xor
nop
sahf
or
jmp
adc
sub
xlat
repnz
sbb
cmp
push
pop
dec
mov
jbe
or
or
inc
ljmp
sahf
popf
scas
add
dec
mov
push
repnz
les
notb
jnp
ljmp
pop
push
or
leave
cmp
mov
push
push
ficoml
xchg
fcoms
fdivr
rol
inc
push
push
add
outsb
ret
pusha
push
lret
xor
repnz
add
data16
push
cmpsb
test
push
call
cld
les
movsl
into
popa
jmp
push
push
dec
push
push
adc
enter
or
ds
mov
and
mov
add
sarb
push
pop
and
sub
inc
or
mov
push
mov
lahf
pmaxsw
push
cmp
les
scas
std
push
aas
int
mov
aam
fdivrs
push
mov
clc
pop
enter
cld
mov
fdivrl
mov
xor
mov
xor
inc
arpl
jae
jno
lds
mov
lret
repnz
mov
inc
scas
mov
sbb
clc
stos
mov
push
add
xchg
add
xor
xchg
shrd
push
mov
xor
dec
fdivrp
mov
pop
mov
clc
testl
dec
inc
orl
pop
cmp
push
clc
lods
mov
push
inc
notl
sbb
js
shr
mov
or
cmc
dec
out
jg
mov
int3
xor
fisubrl
add
push
les
aam
and
lock
decb
rcr
aad
push
pop
fdiv
jmp
xorb
in
cmp
rcr
rcrb
xchg
fdivl
push
sahf
mov
push
clc
inc
add
aaa
mov
stos
orl
jo
cmp
xchg
mov
and
pop
or
iret
ret
pop
xor
dec
push
nop
xor
aas
cli
xchg
cli
mov
mov
mov
cs
and
push
cwtl
pop
das
add
inc
testl
les
nop
xor
repnz
ret
clc
push
fcoms
lcall
inc
or
pop
hlt
dec
mov
or
jecxz
xchg
xchg
or
lcall
dec
lds
mov
insl
and
mov
aas
sbb
cmp
rolb
and
lss
jmp
hlt
and
xchg
cmp
inc
ret
mov
ret
pop
cmp
test
lcall
lea
push
jmp
shlb
lds
fcomps
mov
adc
imul
pushf
std
mov
ja
nop
or
xchg
pop
cmpb
lcall
cmp
addr16
or
aas
jmp
mov
lret
in
push
not
xchg
gs
repnz
xor
add
scas
test
or
loopne
push
sahf
call
xchg
sub
add
enter
and
fisubrl
mov
pop
hlt
testb
cli
xchg
pop
es
add
pushf
pop
fidivl
push
inc
hlt
ficoms
and
inc
jp
add
xchg
lods
push
clc
sbb
xor
ret
mov
pslld
inc
aas
fimull
cmp
rolb
mov
std
jne
mov
repnz
out
or
push
inc
push
pop
cmp
cmc
jae
aad
jmp
fsts
std
enter
add
les
pop
fwait
pusha
sarb
mov
xor
pslld
mov
stos
sahf
pop
and
gs
jbe
and
repnz
push
cli
lea
mov
xchg
enter
inc
into
sbb
push
pop
pop
mov
sbb
call
or
mov
add
dec
inc
inc
and
lret
inc
aam
push
add
out
mov
notb
xchg
mov
pop
stos
lcall
aam
jl
pop
clc
push
add
ds
sahf
pop
push
xor
mov
mov
or
mov
aam
pop
mov
or
jg
fisubs
jmp
out
fucomip
and
or
sbb
xor
ljmp
lahf
out
inc
add
xchg
push
neg
dec
shrb
jmp
testb
dec
dec
clc
mov
js
xor
mov
inc
add
int3
mov
mov
into
pop
sahf
xor
out
into
rorb
setne
clc
push
push
ficoms
into
movsl
icebp
cld
mov
pop
int3
mov
ficompl
inc
push
push
xchg
sahf
inc
fists
add
cmpsb
mov
mov
cmp
or
mov
mov
imul
pop
les
jb
stos
xor
test
imul
adc
push
inc
movsb
sti
pop
dec
mov
mov
stos
pop
mov
mov
or
or
mov
call
test
cld
ret
xor
ficomps
cmp
lods
sub
popa
sti
faddp
mov
cmp
pop
push
mov
push
push
push
mov
ljmp
sbb
scas
xchg
mov
cmp
sub
in
xchg
cmpsl
and
ss
pop
cwtl
cmp
jmp
clc
lcall
fidivl
mov
push
add
dec
push
in
ja
inc
push
cwtl
iret
push
mov
enter
fsubrp
iret
xor
mov
mov
jecxz
subb
xor
aam
pushf
xchg
ret
data16
rcl
fidivrl
sbb
or
clc
test
enter
pop
cmpsb
int3
pop
sub
mov
fcmovb
lret
push
aam
push
sbb
pop
repnz
addr16
mov
push
cld
clc
inc
add
lock
push
arpl
lret
sub
or
aam
push
mov
adc
adc
add
or
xchg
mov
push
scas
pop
push
rorb
lcall
fwait
add
aas
test
xchg
dec
or
and
inc
or
stos
imul
xchg
add
inc
pop
repnz
out
jnp
or
in
dec
test
push
aam
loope
iret
loop
cmp
nop
pop
push
xchg
mov
fisttps
jmp
xchg
cwtl
sub
sub
mov
sub
pushf
or
fcmovb
pop
popf
stc
test
ljmp
mov
repnz
fdivl
stos
stos
int3
pop
jbe
movb
les
ficomps
mov
movb
es
fstpl
fmulp
and
xchg
xor
pop
test
imulb
sub
shlb
inc
pop
push
push
mov
lret
outsb
pop
dec
pushf
mov
mov
mov
cld
out
dec
pushf
fmuls
jne
fwait
outsb
mov
shlb
cltd
into
clc
insl
dec
jbe
xchg
mov
adc
shrb
sub
call
add
jb
mov
test
push
notl
cmp
add
sahf
xchg
or
fsubr
lcall
mov
ja
and
in
xorb
pop
and
push
add
cmp
mov
fwait
ljmp
push
lds
enter
in
push
sahf
cmp
mov
push
push
fimull
dec
push
les
add
and
mov
cld
inc
in
push
pop
clc
out
cwtl
insl
loopne
pop
xchg
sub
add
push
not
mov
sti
mov
fcomps
into
push
scas
xchg
sahf
cld
inc
mov
pop
mov
lret
dec
pop
loope
popf
mov
clc
mov
rolb
in
sbb
es
pop
xor
aam
fidivl
ljmp
fwait
pop
xchg
out
ret
fistl
mov
xor
xchg
add
add
imul
ret
cwtl
pop
rcl
jnp
incb
cmc
mov
cwtl
inc
aam
enter
jae
hlt
xor
test
and
push
lock
cmpsl
mov
mov
divb
mov
stos
aam
out
push
ljmp
gs
fisubrs
shl
test
pop
stos
leave
mov
fdivrs
or
sarl
inc
push
mov
adc
cltd
push
shlb
or
mov
xlat
mov
int3
pushf
ficomps
and
push
enter
test
sbb
and
int3
mov
or
cld
add
push
add
push
mov
aam
pop
mov
xor
and
ds
xchg
pop
xchg
jmp
clc
gs
mov
push
pop
mov
sbb
fdivrp
cmp
pushf
mov
pop
mov
pop
sbb
jnp
xchg
clc
mov
pop
lcall
push
ljmp
mov
xor
loope
or
mov
mov
repnz
mov
inc
xchg
xorl
mov
test
fimull
cmp
imul
nop
pop
in
test
cmp
loope
ret
xchg
fmuls
pop
xchg
test
int3
enter
xchg
mov
or
rcrb
or
stos
push
fdivp
cmp
fidivl
or
sub
and
pop
scas
pop
xchg
shrb
icebp
hlt
in
rcll
pop
xchg
sti
in
out
incb
das
fisubrs
lcall
idiv
in
fcmovbe
xchg
movsb
cmc
clc
xchg
fdivrs
or
fsubr
movzbl
lcall
sti
rcll
test
xchg
mov
pusha
mov
adc
enter
mov
or
in
mov
in
and
cwtl
ret
ret
push
scas
fdivrs
pop
mov
pop
incb
enter
out
push
cmp
ret
ljmp
btc
or
sbb
mov
js
pop
shlb
pop
cmp
fcoml
fcomps
dec
dec
repnz
and
add
inc
cmp
jo
push
cmc
stc
mov
add
enter
mov
mov
pop
dec
mov
nop
clc
mov
adc
jmp
mov
pop
stos
lock
aas
rcl
scas
bound
ret
fwait
je
add
stos
push
es
xor
mov
notb
cmpsb
call
jno
xchg
pop
push
stos
jge
aad
or
aam
dec
into
into
mov
adc
or
mov
out
gs
ret
ds
stc
or
push
jmp
jb
pop
lahf
fstpl
test
pop
inc
pushf
push
test
je
add
aam
cld
in
pop
xchg
push
ljmp
xchg
dec
jb
outsb
xorl
sub
rcrb
xor
call
xchg
pop
fcomps
imul
pop
into
clc
or
lock
xchg
push
mov
add
rcl
ljmp
mov
lret
arpl
sahf
xchg
out
lcall
xor
jle
push
push
mov
movsb
out
lret
mov
pop
ror
fdivrl
pushf
into
clc
mov
mov
inc
add
bound
pop
add
push
into
mov
add
movsb
sti
or
scas
cmc
sub
rcll
das
xchg
cld
mov
cli
loopne
in
push
popa
stos
pop
jnp
pop
rcrb
filds
fidivs
jbe
je
inc
push
out
sbb
push
bound
cld
test
ret
pop
mov
mov
pop
cmp
lret
pop
lock
ficoms
add
or
add
fs
xchg
fcomps
lcall
inc
cmc
hlt
aaa
ficomps
lods
enter
cs
jecxz
fisubrl
or
adc
push
fisubs
and
incb
inc
mov
scas
in
xchg
or
bound
lcall
xchg
pop
mov
pop
push
push
jnp
adc
mov
nop
lret
hlt
mov
enter
or
lret
dec
roll
lret
sub
sar
add
jne
pop
push
rcrb
sbb
jmp
cmc
or
push
rcrb
std
sarb
xchg
ret
pop
push
cmp
scas
or
push
sti
add
pop
into
pop
mov
sbb
pop
call
cmp
push
lcall
jbe,pn
xor
shll
cmp
leave
mov
mov
mov
mov
inc
cmpsl
xchg
fistpll
push
mov
push
sbb
sahf
lret
loope
mov
push
out
fidivs
hlt
mov
iret
pop
xor
xchg
or
aas
aad
stc
ljmp
sahf
pop
fildll
add
xchg
pop
clc
mov
shr
dec
hlt
mov
sbb
mov
int3
add
data16
pop
lock
pop
std
pushl
xchg
xor
pop
shlb
scas
mov
mov
shr
outsb
mov
test
negb
cmpsb
or
push
add
out
inc
mov
fmuls
ret
inc
fimull
call
push
dec
scas
int3
mov
lret
cwtl
out
push
cs
jp
pop
dec
scas
lcall
push
jp
push
and
test
push
sub
add
push
rolb
fstpt
imul
fsubs
mov
jns
fs
adc
cmp
lcall
mov
ljmp
jae
arpl
jne
and
push
or
add
daa
push
hlt
dec
xor
and
xor
push
pop
les
aad
add
int3
inc
mov
cmp
push
ljmp
mov
enter
fiadds
inc
lock
xor
xchg
insl
xor
mov
fcmovbe
mov
lcall
fistps
stos
mov
cmp
daa
pop
pop
rolb
repz
je
push
inc
aam
int
inc
push
push
push
out
push
test
or
dec
out
aam
dec
cmc
xor
into
adc
push
or
and
out
xlat
hlt
or
mov
pop
test
xchg
out
mov
mov
nop
or
aas
js
mov
push
mov
adc
mov
jbe
test
idiv
add
sarb
aam
pop
js
clc
lret
jno
frstor
mov
lret
and
jb
xchg
clc
sub
pop
rorb
jns
cmp
pushf
int
lret
add
pop
data16
les
xor
pop
pop
push
xchg
ret
fdivs
mov
cmp
push
cwtl
cwtl
lret
movsl
pop
push
cmp
push
nop
sahf
loope
imul
xchg
mov
mov
pop
dec
mov
ljmp
inc
les
xor
testb
pop
out
or
stos
mov
inc
mov
xchg
sets
mov
or
addr16
cmpsb
repz
les
mov
int3
push
rcrb
in
sub
stc
sbb
mov
cltd
push
sub
pushf
out
or
mov
pop
clc
pop
lcall
sbb
leave
ret
fimull
aam
ss
add
mov
mov
mov
outsb
test
lret
jo
xchg
jae
push
sahf
jmp
dec
pop
out
mov
push
xchg
xchg
inc
out
or
pop
sub
lret
sbb
cld
xor
aam
mov
mov
push
mov
jnp
xchg
mov
les
cmp
push
push
test
nop
test
into
add
mov
jg
ds
cld
pop
mov
jp
lcall
pop
cmp
pop
subl
pop
jp
clc
out
add
cmp
xchg
int
ret
xchg
negl
mov
enter
fmuls
fiadds
sahf
and
es
shlb
adc
ss
mov
sahf
jb
fiaddl
test
mov
and
and
sti
pop
mov
outsb
nop
in
sbb
daa
xchg
outsb
mov
lods
lcall
pop
push
cmp
dec
ljmp
pop
dec
jmp
testb
mov
out
and
cwtl
mov
mov
shlb
clc
out
cmpsb
les
jg
lcall
or
push
pop
cmp
scas
push
notl
sbb
add
add
or
mov
or
add
ds
xchg
mov
loop
adc
and
lret
inc
scas
aaa
ss
test
add
ret
lret
cmp
mov
xchg
out
mov
mov
push
repnz
outsb
in
nop
mov
cwtl
lock
add
inc
inc
repnz
clc
lret
ljmp
pop
test
sub
fdivs
sarb
jbe
or
bswap
cltd
clc
add
lcall
mov
shr
pop
mov
test
lret
cmp
shrb
fmul
add
or
enter
push
push
adcb
adc
loop
sahf
mov
or
rclw
mov
popa
lcall
and
xor
or
faddl
pop
push
stc
inc
js
pop
mov
mov
leave
mov
in
stos
lcall
fcoml
push
aam
test
nop
jecxz
or
test
outsl
xorb
mov
pusha
je
mov
int3
test
dec
test
inc
mov
jno
xchg
sbb
push
ds
push
lsl
in
pusha
and
ficoms
stos
mov
push
ja
fsubrs
call
push
sarb
push
push
xchg
mov
mov
push
or
test
fidivrs
dec
mov
lods
mov
and
call
cld
xor
fdivrs
mov
or
lock
push
ljmp
push
mov
cld
mov
ficomps
jmp
lock
xor
push
mov
int
inc
xchg
sbb
inc
xchg
xchg
push
xchg
push
int3
pop
sahf
xchg
clc
mov
xchg
clc
es
pop
enter
fcoms
out
cli
mov
lret
cwtl
cli
fistpll
cs
aad
dec
sarb
aam
scas
gs
fisubl
rcrb
mov
stos
xchg
outsb
pop
fisubl
clc
xchg
mov
push
enter
jge
ljmp
inc
push
jb
and
lock
mov
pop
fcmovu
int3
rorb
fcompl
inc
fistpll
and
clc
or
pop
pop
jg
mov
out
push
aam
add
mov
ljmp
lret
ss
incl
out
push
or
ljmp
dec
insb
xchg
mov
ljmp
mov
into
and
stos
xchg
push
xor
sub
sub
pop
loop
cmpsb
stos
adc
repz
lret
cmp
xchg
repnz
data16
dec
out
call
cwtl
aam
aad
ficoms
adc
rcrb
add
pop
repnz
cmp
mov
mov
or
push
xor
cmp
push
or
hlt
lret
push
jp
and
fstpt
ret
adc
mov
and
rorb
mov
unpckhps
fisubs
gs
inc
arpl
rcl
in
mov
pop
cli
call
scas
jbe
enter
fcomp
addr16
hlt
dec
sahf
push
dec
mov
test
pop
sbb
and
cmp
out
lcall
in
mov
pop
shlb
fmul
push
cwtl
xchg
add
mov
xor
sub
fisttpll
fs
in
rolb
nop
xlat
jno
jl
push
mov
sahf
dec
into
sbb
xchg
mov
pop
mov
test
lock
and
xor
or
mov
push
inc
xor
push
ljmp
stos
push
or
push
ret
flds
pop
je
repnz
mov
clc
and
push
lcall
sub
das
imul
stos
pop
ds
jbe
xchg
sbb
mov
addr16
xor
call
jnp
je
lret
mov
xchg
add
mov
punpckldq
dec
call
push
fisubl
inc
mov
in
and
movsb
jb
nop
iret
push
cltd
add
inc
sbb
stc
mov
dec
rcrb
cmc
imul
enter
shl
outsb
push
add
sti
les
cld
pop
out
or
sub
push
push
pusha
ljmp
test
mov
sahf
or
out
jmp
sbb
mov
push
mov
arpl
push
xchg
aad
mov
insb
push
pxor
fsubp
inc
and
clc
out
dec
enter
push
dec
mov
stos
dec
ss
ficompl
hlt
lock
mov
add
les
mov
jg
dec
jp
mov
mov
inc
lret
pop
cmpsb
and
mov
ret
and
or
aad
ficomps
imul
fdivrs
sti
fsubrp
dec
or
scas
push
add
stos
push
test
add
fsub
and
cmp
sar
inc
pop
adc
cwtl
push
movsl
jmp
mov
rorl
test
js
mov
ljmp
pop
pop
push
xchg
fdivrs
sub
mov
fdivrl
test
fdivrs
lcall
mov
mov
notl
push
jg
xchg
mov
cmp
push
repnz
bnd
lcall
mov
sub
inc
xlat
add
clc
sar
ret
xchg
rclb
divb
clc
mov
mov
pushf
repnz
xchg
cmp
aam
pushf
es
fcmove
add
jnp
push
or
sahf
pop
negb
push
mov
ret
mov
jo
push
test
arpl
sahf
mov
stos
das
rcrl
scas
pop
lcall
sahf
scas
xchg
mov
cmp
fmulp
fdivr
int3
fisubrl
mov
lock
out
mov
out
psrld
cmp
pop
es
push
bnd
outsb
int3
add
movsb
mov
sbb
les
addr16
fistpl
xchg
nop
fcmovb
aam
xor
idivl
int3
push
shll
fiaddl
pop
xchg
push
and
clc
arpl
shrb
fisubrs
xchg
xchg
int3
inc
xchg
push
push
cmp
mov
call
enter
arpl
mov
fidivrs
push
pop
outsl
dec
xchg
xchg
xor
lret
push
add
inc
add
stos
in
xchg
iret
xor
rcrb
jecxz
xchg
sbb
shl
ret
outsb
sahf
adc
mov
push
clc
lock
jb
scas
test
cmp
cmc
xchg
mov
loopne
lahf
enter
inc
sbb
mov
es
out
adc
mov
repnz
jmp
shl
lock
push
repnz
call
mov
or
faddp
pop
mov
lock
into
or
fs
wrmsr
push
fiadds
faddl
aas
or
cmp
lock
or
data16
aaa
and
clc
jmp
xchg
nop
lret
dec
hlt
nop
dec
adc
push
push
cmc
add
sbb
cwtl
loope
mov
mov
mov
jns
scas
pop
data16
fwait
mov
xlat
idivb
nop
stos
lret
jne
xchg
jle
mov
adc
push
add
call
add
add
repnz
outsb
mov
pop
pop
repnz
cmp
js
jne
xchg
push
dec
test
jmp
call
mov
fmull
cltd
fildll
push
sar
nop
in
cmc
pop
cltd
xchg
cs
xor
hlt
cmpsl
cli
lret
push
jmp
cwtl
pop
repnz
cs
rorl
xchg
jp
sahf
insb
push
scas
cltd
icebp
fucomp
and
pop
cmp
call
jno
in
or
sbb
cmp
ret
decb
push
xchg
movsl
into
mov
enter
sbb
mov
lods
mov
pop
dec
or
fs
pop
xor
mov
xor
or
enter
sarl
es
aam
loopne
push
js
jmp
sbb
popa
lcall
sbb
repz
sbb
adc
add
xchg
adc
jb
addr16
push
sub
loop
out
aam
pop
dec
push
pop
xor
neg
ret
lock
into
jecxz
subb
cli
sub
cs
or
pop
cld
lret
and
nop
jne
mov
clc
in
cmp
mov
mov
add
sub
xor
stos
in
jb
mov
shrb
adc
add
nop
stc
push
sarb
xchg
sub
ret
pop
cmovs
cmp
int3
cwtl
and
scas
pop
mov
xor
push
stos
mov
mov
bnd
and
push
dec
test
and
adc
addps
lods
xchg
pop
sarb
ffree
lods
cmp
sti
loope
fdivl
push
call
int3
les
ds
push
test
mov
out
pushf
cli
ret
into
mov
es
sahf
rcrb
dec
mov
mov
insb
mov
mov
jno
lret
pop
lret
fdivrp
adc
dec
hlt
add
stos
fiadds
cmc
lods
out
je
push
and
repnz
movsl
push
arpl
lret
bound
call
lret
inc
int3
push
inc
pop
aam
cmp
ret
scas
clc
addl
rclb
and
inc
enter
pop
cld
sbb
ficoml
xchg
lret
mov
fmuls
mov
aam
push
push
xchg
jnp
into
adc
fistl
notb
push
cld
test
sbb
insb
rorl
popa
cmp
xchg
rcrb
adc
xor
notb
fdivl
clc
cmp
ret
mov
scas
aas
out
clc
sub
xor
mov
or
fcmovb
shl
shld
setl
mov
pop
pop
or
dec
inc
push
or
push
int3
pop
sbb
add
pop
fdivrs
add
push
dec
rol
pop
xchg
dec
icebp
xor
stos
push
and
or
xorl
mov
sti
xor
mov
test
or
mov
aam
jnp
sbb
or
je
add
pop
lock
ficoml
lret
cmp
push
test
inc
inc
xchg
into
enter
xchg
mov
ret
ljmp
into
rolb
jb
fidivrs
inc
xor
xchg
movswl
cld
stos
imul
xor
xchg
push
xadd
mov
xchg
out
daa
cwtl
push
fcomp
cld
pushf
push
enter
sub
xor
push
incb
pop
scas
or
push
fimull
or
std
stc
call
xor
aaa
lds
cld
add
jb
jbe
cmp
pop
pop
pop
out
mov
mov
insl
and
cmp
xchg
or
fs
out
dec
lret
dec
popa
or
pop
xor
nop
mov
push
repnz
clc
lods
lcall
fcmovu
int3
add
mov
fwait
pop
jp
test
or
sbb
outsb
dec
filds
add
aam
imul
lock
mov
pop
ljmp
fidivrs
pop
insb
stos
pop
push
aam
jmp
and
imul
xchg
ficoml
dec
pushf
rcr
inc
xchg
mov
nop
mov
gs
pop
aam
scas
ret
ret
lods
dec
pop
xchg
dec
or
inc
push
int3
mov
js
pop
add
cli
shlb
sarb
data16
sub
push
subb
cmp
mov
or
in
test
in
push
imul
xchg
pushf
ret
fsubr
or
and
mov
sub
subb
xchg
xchg
pop
ljmp
into
mov
sarb
dec
aam
dec
mov
jbe
and
aam
into
scas
ret
scas
jge
xchg
cmp
xchg
sti
pop
clc
push
push
clc
into
or
pop
mov
pop
cwtl
dec
jp
call
hlt
fisttpl
bound
out
jnp
push
stos
lcall
dec
or
aam
daa
push
pop
add
subb
pop
mov
xchg
sti
mov
test
enter
pop
mov
push
adc
gs
hlt
mov
aam
and
push
jmp
repz
xchg
push
pop
dec
call
or
out
and
lock
xchg
dec
fidivrl
pusha
sbb
shlb
mov
xchg
or
cli
jecxz
outsb
push
ficomps
xchg
test
jo
stos
test
sub
and
aas
imul
in
cmp
cwtl
mov
xchg
cmp
stos
xor
int3
pushf
mov
mov
shll
pop
mul
pop
mov
mov
pop
sub
ret
add
add
loope
mov
lock
push
add
inc
sahf
nop
ret
mov
stos
out
mov
sub
and
fsubrl
sub
nop
ljmp
mov
stc
cmpsb
rclb
jnp
or
mov
xchg
lcall
dec
cmp
push
lea
add
ret
imul
fidivl
push
xchg
lock
stos
and
stos
or
shrb
push
or
sub
xchg
fsts
jmp
enter
push
push
mov
mov
aaa
adc
push
sub
push
and
incb
mov
pop
js
lret
mov
and
aas
xor
ja
mov
adc
stos
sahf
outsb
mov
push
enter
out
and
cltd
and
addl
stos
sarb
cmp
fwait
enter
pop
jb
mov
pmuludq
push
lods
and
les
jnp
inc
pop
js
or
xchg
fdivrs
mov
shl
mov
or
pop
lret
xorb
scas
daa
or
sbb
mov
enter
or
jbe
icebp
pusha
scas
hlt
mov
lods
or
or
sarb
call
mov
bound
xchg
clc
xchg
mov
mov
xor
imull
dec
and
sub
stc
ret
fdivrp
mov
es
add
and
shr
xchg
rolb
ljmp
imul
mov
cmp
pushf
data16
cmpsb
stc
cmp
push
fisubl
xchg
dec
jo
icebp
stc
fcoms
into
inc
sub
mov
movsl
jnp
or
or
cltd
push
adcb
aam
push
jecxz
lock
fsubrl
and
in
rcrl
fidivrl
lcall
dec
hlt
adc
add
pop
xlat
cmp
push
mov
push
dec
dec
ret
mov
dec
inc
lret
mov
hlt
into
enter
cmp
mov
ja
jo
xchg
pop
push
enter
shlb
leave
and
push
add
cwtl
pusha
mov
or
mov
mov
add
scas
pop
xchg
clc
test
xchg
mov
lock
test
push
lock
mov
sahf
fmulp
ret
clc
mov
fcoms
clc
jnp
fidivrl
repnz
hlt
add
test
in
sti
out
popf
and
xchg
ljmp
rorb
mov
push
push
mov
pushf
and
pop
rcrb
test
mov
add
into
hlt
imul
jmp
pop
add
cmpsl
mov
cmp
in
pop
inc
cwtl
xchg
out
test
into
fmull
jmp
pop
aaa
rorb
ficomps
ret
lret
int3
mov
mov
hlt
push
push
lret
mov
out
faddl
cmp
ret
in
jnp
ror
pop
add
lcall
js
mov
in
lock
lcall
notl
dec
sbb
add
rclb
xorl
ljmp
shlb
ficomps
call
sarl
cmc
aam
push
add
pushf
xchg
enter
mov
scas
enter
cmp
push
push
std
pop
push
xchg
or
pusha
dec
mov
xchg
push
add
sub
int3
mov
cwtl
mov
mov
or
mov
cli
push
push
shr
sub
lcall
and
data16
movntq
push
mov
inc
inc
rorb
sahf
fwait
aaa
lret
jbe
cwtl
je
stc
ss
sbb
or
enter
hlt
cmp
mov
rorb
add
pcmpgtw
sbb
sub
into
sbb
push
and
xor
pushf
mov
dec
cmc
xchg
cmp
std
add
data16
ljmp
or
push
in
les
cmp
out
cwtl
sbb
lret
add
xchg
dec
test
cld
and
pop
and
addr16
inc
push
pop
test
cs
mov
out
mov
pop
pop
or
xor
lcall
pop
push
scas
hlt
std
mov
mov
or
push
fisubrl
xchg
mov
pop
cld
xchg
shlb
adc
cmp
pop
mov
insl
dec
sub
rolb
jno
or
xor
mov
dec
ds
pusha
in
ds
test
or
sub
scas
les
int3
sarb
stc
cli
mov
add
bound
xor
mov
cmp
movsl
dec
add
add
xor
xchg
clc
divb
lcall
xlat
xor
push
or
mov
ret
fxch
cltd
enter
fcoms
hlt
ja
mov
ficoms
xor
or
pop
insl
ss
pop
fsubr
mov
pop
je
mov
push
cld
sbb
jae
lods
cwtl
xor
mov
aas
jno
dec
adc
mov
or
scas
xchg
testb
inc
sub
jns
int3
mov
fcomps
inc
xchg
mov
cmp
nop
aam
cmpsb
inc
movsl
xchg
iret
push
xchg
cld
push
mov
stos
rcrb
adc
aam
gs
xchg
xchg
rclb
les
xchg
mov
mov
pop
and
scas
outsl
jns
push
mov
fidivrs
clc
cmp
add
fdivl
dec
dec
push
sarb
sarb
out
adc
jge
fisubs
movsl
lcall
mov
add
jne
push
dec
add
cmp
rcl
sbb
mov
fmulp
lret
mov
or
mov
cmp
sbb
lret
pusha
bnd
int3
pop
xchg
jg
out
lret
mov
fcmovnb
lock
push
lcall
nop
sub
enter
es
xor
add
test
into
or
rcrb
fimuls
mov
sbb
mov
dec
lock
xchg
je
mov
xor
xchg
mov
mov
push
sbb
and
push
dec
mov
push
or
cwtl
stos
ret
into
fldt
or
repnz
call
cmp
push
ret
cld
iret
mov
or
mov
push
mov
xchg
xor
mov
sub
mov
or
adc
mov
jbe
cmp
int3
ljmp
dec
nop
ljmp
out
push
cs
and
mov
mov
mov
cmp
sahf
pushf
fadd
mov
lock
push
call
rorb
enter
add
rolb
push
call
cld
fdiv
or
lret
hlt
pop
imul
xchg
mov
lcall
sbb
mov
inc
mov
mov
pusha
push
das
sbb
sbb
in
pop
ret
push
in
dec
mov
insl
push
cwtl
xchg
pop
mov
mov
aas
in
pop
stos
sbb
adc
mov
xor
xlat
sbb
loope
arpl
nop
mov
clc
or
sahf
mov
retw
dec
push
or
dec
sbb
je
mov
xchg
decb
cmpsl
cmc
jp
dec
ds
rorb
jne
nop
sbb
pop
xor
and
mov
scas
addr16
cltd
push
addr16
xor
cld
and
mov
jp
ljmp
bswap
pop
push
lcall
hlt
mov
int
test
xchg
out
int3
xlat
mov
ljmp
xchg
lahf
sti
shl
flds
stos
fsubl
loop
push
lcall
ret
loop
fmull
pop
add
mov
dec
push
xor
lcall
or
xlat
push
xchg
cld
or
mov
loop
sbb
add
jb
lock
adc
xlat
ret
fs
lcall
dec
or
mov
xchg
stos
popf
sbb
add
pop
lret
mov
popa
ficompl
mov
in
pop
pop
mov
iret
into
sub
pop
and
xchg
fadd
data16
jbe
ror
mov
push
sbb
out
imulb
pop
test
and
stos
les
xchg
dec
in
rorb
xor
mov
outsl
mov
cwtl
pop
xor
mov
aam
or
pop
in
mov
call
add
or
mov
xor
xorl
out
and
mov
push
or
jbe
icebp
push
push
sbb
movsb
sahf
jns
xor
xor
xor
add
xchg
ficompl
rcrl
xchg
and
adc
loopne
push
std
adc
adc
cwtl
mov
push
cld
int3
sarb
mov
pop
cmp
jg
mov
lods
testb
pop
pusha
add
lcall
xchg
rcrb
cmp
push
das
mov
pushf
rol
mov
sub
rcr
and
or
mov
cltd
ret
stc
mov
stos
test
or
into
ljmp
int3
out
out
aam
ljmp
push
mov
aad
shl
out
imul
int3
ret
aam
arpl
and
jg
or
das
cmp
push
mov
xchg
push
stos
xchg
je
fiadds
fdivr
push
xor
lcall
enter
cmpsb
imul
push
fs
add
add
int3
ds
into
loop
push
cmovb
notl
jmp
or
cmp
pushf
mov
testb
lcall
push
cltd
loopne
int
fsubr
xchg
or
mov
fsubs
jb
xchg
out
notb
fisubrs
pop
cld
ljmp
idivb
mov
push
out
ljmp
gs
push
rcl
mov
in
xor
add
xor
mov
xchg
lahf
jmp
fisttpl
push
imul
mov
ficoml
or
lcall
repnz
cmp
pop
or
mov
stc
mov
push
push
ss
fwait
jmp
dec
cwtl
decb
xor
push
hlt
and
xchg
imul
rcrb
fcmovnbe
jbe
push
lcall
pop
xor
pop
pop
scas
enter
mov
stos
dec
mov
mov
cwtl
cmp
mov
in
sar
add
cli
andps
jmp
mov
sahf
rorl
mov
cmp
out
into
fcomps
pop
mov
repz
les
insb
mov
lret
sbb
les
enter
mov
popf
shlb
iret
enter
sub
jecxz
hlt
jbe
pop
xchg
cwtl
repnz
sbb
adc
add
test
ret
sti
sub
repnz
fsubl
dec
arpl
jge
adc
push
sub
sbb
inc
loope
pushf
xor
hlt
repnz
cmp
rcrb
or
xchg
jbe
incb
stos
pop
stc
fcom
stc
ret
test
push
mov
adc
adc
push
adcl
pop
cld
fucomp
mov
clc
pop
scas
icebp
test
pop
jp
int3
and
cmc
in
aas
cmp
call
lahf
ficompl
xor
fmuls
cwtl
lock
push
lea
call
pop
jp
jns
xchg
xchg
jb
ret
nop
cmp
out
rcrb
and
add
mov
hlt
rcrb
enter
cwtl
ret
mov
mulb
xor
cmp
mov
popa
lret
jbe
mov
sbb
ss
mov
and
call
sub
push
mov
fistpll
pop
call
shll
cmp
int3
cwtl
out
push
and
push
cld
mov
in
fcmovbe
clc
and
enter
leave
rclb
sahf
hlt
int
add
shl
cmp
test
into
or
mov
aam
dec
pop
or
pop
scas
mov
les
pop
lcall
data16
push
push
pusha
pop
repnz
sbb
mov
pop
arpl
ret
test
shlb
lcall
xor
cli
notb
in
fcmovne
enter
push
cmpsb
jnp
fisubrl
int3
add
inc
std
mov
add
bound
xchg
int3
mov
in
repnz
mov
pop
mov
cmp
or
call
xor
add
dec
int3
pop
repnz
shlb
mov
jns
test
cmpb
ficoms
repz
pusha
test
enter
mov
mov
clc
jg
xchg
fistpl
enter
xor
mov
xchg
xlat
sahf
mov
add
ljmp
into
inc
out
cs
or
jmp
push
cmp
mov
mov
xor
jns
jmp
xchg
rcrb
or
rcr
or
pushf
pop
or
les
cmp
js
movsb
int3
cmp
cld
pop
mov
mov
fnstenv
inc
push
out
movsb
sub
dec
ljmp
xchg
mov
xchg
hlt
stos
pop
jl
xchg
push
shrl
sarb
adc
into
push
and
rorl
clc
call
icebp
fimuls
xchg
mov
stc
shr
icebp
lods
pop
dec
mov
push
sahf
bswap
xchg
xor
mov
addr16
out
mov
ret
ds
or
lock
incb
pop
jecxz
fwait
lret
mov
xlat
mov
leave
negb
gs
rclb
nop
sbb
add
jecxz
push
scas
inc
test
pushf
dec
icebp
dec
adc
imul
xlat
stos
cmp
pop
add
dec
inc
into
xor
mov
xor
les
out
or
imul
pushf
ds
ds
stos
or
enter
dec
aam
fimuls
mov
out
sub
and
sub
stos
or
arpl
push
cltd
ror
fdivr
iret
mov
push
xchg
repnz
mov
mov
out
and
enter
lret
loop
jns
rclb
push
dec
mov
xor
pushf
mov
xor
add
mov
push
pop
es
negb
mov
fldlg2
test
jp
adc
in
lcall
jns
mov
pop
cmp
into
inc
dec
call
inc
je
daa
nop
mov
lea
dec
rol
loop
sar
repz
sbbb
les
sub
imul
or
nop
test
repnz
or
out
mov
fimuls
lret
add
mov
hlt
push
inc
jnp
xor
mov
clc
cld
xor
jno
mov
cltd
xor
xchg
pop
popl
xchg
imul
imul
or
fadds
rolb
dec
stc
cmp
or
mov
daa
mov
movsb
push
cld
fidivrs
or
push
mov
xchg
mov
push
repz
scas
into
xchg
xor
xor
fdivr
leave
mov
imul
adcl
push
addb
pusha
test
push
mov
xchg
rorb
repnz
fstpt
nop
shl
inc
mov
into
push
cmc
mov
mov
pop
lcall
xchg
cli
aaa
add
xor
out
jbe
jb
dec
stos
hlt
or
in
inc
and
xchg
scas
sti
js
push
push
in
in
pop
jbe
scas
sbb
inc
fdivrl
jno
cli
and
mov
dec
lret
sub
out
scas
nop
or
adc
push
pop
test
jp
cld
mov
test
mov
add
push
mov
push
js
in
pop
cmc
fmulp
xchg
xchg
push
adc
inc
mov
scas
scas
aaa
dec
and
vrsqrtss
push
movsl
repz
xor
add
fwait
push
or
nop
fmul
fmuls
stos
fisttpll
lret
out
arpl
mov
scas
roll
mov
nop
xchg
mov
dec
xchg
out
jno
mov
insl
adc
out
xchg
fiadds
mov
pop
repnz
and
scas
in
xor
xchg
call
push
cwtl
pop
and
pop
mov
ret
cltd
testb
pusha
jno
mov
scas
push
mov
pop
pusha
or
fwait
lahf
push
mov
xor
fdivr
xchg
mov
scas
jmp
lock
push
pop
mov
and
fdivl
pop
mov
aaa
sub
gs
lcall
call
and
mov
lret
out
cmpsl
xor
push
fwait
ror
mov
mov
push
maxps
push
fldt
div
push
fmuls
and
test
hlt
bnd
sbbl
mov
jle
mov
call
or
test
pusha
pop
cmpsl
push
call
mov
mov
adc
dec
lods
sub
mov
les
test
inc
mov
leave
mov
pop
mov
sti
sbb
xchg
xor
fcoms
mov
or
push
es
pop
mov
hlt
inc
dec
or
xor
mov
rcrb
push
add
mov
dec
sbb
lcall
scas
les
push
aaa
mov
jnp
xlat
cmp
test
mov
sbb
stos
nop
fwait
jbe
mov
lock
out
and
inc
push
pop
movsb
xchg
push
es
xchg
add
out
outsl
sti
jmp
xor
xchg
mov
call
sahf
and
add
fsub
jmp
add
pushf
stos
adc
andb
aam
lret
shrb
fdivs
push
pop
or
dec
ljmp
add
mov
push
jbe
xchg
decl
ficompl
out
jmp
jp
aam
xlat
test
push
mov
cld
push
ret
les
sahf
sbb
aam
and
xor
call
add
ret
jbe
or
decb
jmp
push
push
outsl
pop
mov
ljmp
mov
lret
adc
push
scas
insl
xor
push
mov
in
loopne
mov
rol
pushf
ret
sub
js
fs
fildl
pop
inc
leave
rcl
dec
in
xchg
dec
stos
lock
mov
sbb
inc
push
sbb
dec
or
rcrb
mov
mov
test
pop
jnp
or
xchg
pop
popa
ret
xchg
jmp
lcall
repz
lcall
xchg
push
addb
and
repnz
dec
lock
jne
ret
jmp
inc
fisubrl
int3
cmp
fdivr
into
mov
xchg
dec
push
in
call
jp
mov
sahf
cmp
add
push
push
pop
fistpll
insl
rolb
repnz
or
pop
into
int3
mov
cld
add
andb
insb
repz
stos
pop
lret
inc
jp
clc
rorb
call
xchg
cmp
mov
adc
push
lcall
fstps
cmp
mov
outsb
out
bound
lcall
test
repnz
inc
pop
push
lret
scas
pop
xor
out
in
or
nop
pushl
mov
lret
shrb
xor
ljmp
mov
pop
daa
popa
out
xorb
ficoml
dec
lods
inc
mov
pusha
pop
int
je
xor
add
stos
lret
pop
rclb
mov
mov
pop
sbb
xchg
push
imul
mov
movsl
jecxz
cmc
lret
mov
add
inc
mulb
insb
add
jbe
xchg
xor
ret
aad
or
stos
lods
pop
pop
mov
pop
mov
and
add
push
jns
add
fidivrs
out
push
pop
out
call
mov
in
jnp
sbb
loop
xor
cwtl
leave
inc
or
shrb
pop
les
push
mov
js
cmp
scas
neg
dec
push
or
aad
inc
lret
add
or
aaa
dec
dec
lcall
push
mov
outsl
cmpsl
jnp
mov
pushf
les
pop
call
rcrb
sbb
add
mov
xor
add
fcoms
or
pop
and
ret
push
pop
add
add
and
sub
clc
pop
pushf
cmpsb
push
test
ficoml
enter
hlt
push
cld
xchg
mov
xlat
inc
adc
psubsb
and
push
enter
fbstp
mov
ljmp
pop
sub
stos
push
fcom
or
add
mov
clc
clc
xlat
mov
mov
and
or
pop
int3
add
data16
push
stos
jmp
in
add
lret
scas
stos
xchg
popa
stos
push
lcall
mov
mov
pop
or
mov
rorb
adc
or
add
and
fdivs
ret
mov
popa
ljmp
xchg
sahf
in
int3
push
mov
or
loopne
mov
mov
jo
loop
dec
push
cwtl
out
sahf
adc
cltd
push
pop
je
ljmp
mov
pop
ret
mov
xor
inc
pusha
lcall
dec
or
mov
cmp
mov
sub
scas
and
fisttpl
push
cwtl
ret
or
mov
mov
xchg
pop
icebp
xor
aas
jno
mov
push
push
in
loop
jo
stos
push
icebp
movsw
or
add
cwtl
mov
or
mov
sub
xchg
into
jp
stos
and
shlb
xchg
int3
dec
jae
dec
mov
and
pop
repnz
out
jg
dec
call
mov
stos
mov
movsb
mov
or
push
scas
into
fmul
in
pop
neg
int
sarb
movsl
mov
cmp
hlt
push
bound
sbb
jns
xchg
ret
mov
leave
cmovs
cmp
fcompl
nop
mov
add
sub
out
jno
ljmp
xchg
faddl
scas
fsubrl
xchg
push
add
pop
ret
dec
hlt
jp
aam
cwtl
fidivl
or
add
fisttpll
mov
fiaddl
add
addl
shrb
lock
pop
push
mov
aas
mov
lahf
pushf
stos
mov
xchg
mov
push
enter
stos
das
imul
jb
mov
stc
push
mov
mov
fistl
mov
jp
mov
or
fstpt
mov
or
rclb
mov
fcompl
cmp
xchg
pop
add
xchg
sar
ret
pusha
fadds
imulb
sahf
cld
scas
xor
aas
mov
lock
fadds
mov
ljmp
adc
mov
adc
mov
pop
pop
fwait
into
movsb
inc
fistpll
pop
jecxz
roll
push
and
mov
scas
xchg
mov
aam
xor
xchg
add
dec
xchg
fmuls
aaa
pop
cld
mov
lcall
xor
pop
je
and
xchg
test
sti
mov
sbb
push
mov
or
addr16
into
test
lods
mov
push
xor
repnz
jecxz
hlt
mov
add
lcall
push
pusha
inc
or
xor
jmp
jecxz
push
xlat
cmp
es
loopne
mov
ret
enter
int3
fsubl
mov
mov
xor
jp
xchg
and
aas
stc
jbe
ja
out
lcall
inc
cmp
mov
push
push
mov
ficoms
mov
push
pop
push
lcall
jb
pushf
mov
rolb
xlat
xor
mov
lds
or
movsl
add
call
test
pop
push
jg
mov
into
pop
lcall
jmp
or
dec
push
xor
ljmp
lret
pop
push
mov
sahf
popa
stos
movsl
mov
lret
xor
fcompl
out
xor
ljmp
pop
fiadds
dec
push
pop
mov
or
call
add
and
push
jecxz
jo
or
mov
movsb
testb
aaa
shrl
pop
lock
mov
push
pop
xor
in
add
jl
pop
imull
mov
clc
xor
cmpsb
aas
xchg
push
cld
push
gs
mov
out
fdivrs
inc
lret
cmpl
xchg
mov
fstpl
dec
or
cmp
mov
fiadds
pop
dec
mov
ret
repnz
dec
push
test
adc
add
push
push
cmp
daa
ret
es
movsb
mov
daa
int3
jb
mov
adc
dec
hlt
test
mov
add
cwtl
add
test
sub
int3
pop
popf
xor
cwtl
mov
dec
fstps
and
mov
call
push
test
push
push
xchg
ret
mov
mov
cwtl
int
aam
cmp
clc
ljmp
mov
lcall
xor
mov
cmp
ret
adc
push
push
in
xchg
int3
push
xchg
adc
or
mov
mov
inc
nop
xor
or
mov
lcall
cmp
out
adc
fmulp
dec
jae
xchg
dec
ss
inc
iret
sahf
add
je
xchg
movsb
test
int3
ret
mov
orb
inc
addr16
in
dec
rclb
or
or
out
mov
xchg
pop
or
fsubr
test
pushf
push
clc
das
push
inc
mov
cli
fistps
cwtl
add
ret
ret
add
imul
lock
cltd
pop
push
push
loopne
add
mov
cli
or
das
or
and
mov
mov
cld
inc
arpl
mov
aam
pop
adc
mov
xchg
lcall
mov
clc
pop
mov
mov
fists
cwtl
xchg
cmp
outsl
xor
mov
rorb
pop
xchg
mov
iret
or
adc
xchg
nop
push
clc
pop
or
loope
cli
xor
adc
inc
sete
dec
call
push
lcall
sarl
rcrb
int3
or
test
adc
lret
mov
cmp
mov
or
cld
ds
enter
mov
ja
inc
sbb
push
call
push
push
daa
arpl
fcoms
inc
sbb
test
xor
pop
fucomip
mov
jmp
jmp
pop
nop
movsb
dec
fcoms
xchg
and
je
js
call
or
loope
aaa
dec
pop
xchg
std
mov
xor
push
jae
dec
and
ja
pop
mov
popf
ljmp
pmaxsw
xchg
ret
popa
push
add
push
sbb
in
stos
mov
jno
fistl
pop
add
int3
push
xchg
or
out
push
mov
sub
dec
test
ficoml
mov
int
ljmp
cmp
or
inc
mov
repz
negb
das
add
movl
das
int3
mov
xor
mov
ret
stos
mov
mov
btc
test
cld
scas
push
ret
mov
mov
mov
nop
enter
inc
mov
clc
das
popf
filds
loop
jo
mov
int
shll
incb
test
inc
out
call
incb
pop
cmp
scas
mov
hlt
pop
mov
cmp
add
and
call
imul
hlt
mov
xchg
lret
and
scas
and
add
cld
xchg
sarb
push
lock
fwait
into
dec
add
xlat
mov
test
push
xchg
cmp
xchg
lock
or
jg
dec
pop
loop
jae
jb
pop
sub
out
imul
ljmp
mov
shufps
andl
pop
xor
inc
pop
incb
cwtl
cmpsl
loope
and
pop
ja
mov
shrl
lock
enter
aam
xchg
in
fmuls
cmp
shlb
fsubrl
and
dec
mov
sbb
push
nop
pop
movsl
popf
scas
call
clc
and
pop
inc
popf
pop
clc
add
jl
mov
in
cs
mov
loope
out
test
xchg
aam
insb
dec
xor
adc
lock
mov
and
pushf
xchg
jbe
mov
outsb
aad
pop
clc
in
pop
jbe
mov
xchg
xor
or
pushf
notb
enter
mov
or
sbb
lds
enter
clc
mov
sub
or
movsl
dec
or
inc
cmp
mov
xchg
ljmp
mov
mov
fiaddl
les
xchg
dec
dec
jbe
sbb
fdivr
lock
bound
add
dec
ret
xor
pop
pop
je
sti
scas
enter
into
movsl
cmp
pop
sahf
add
xchg
jecxz
mov
scas
dec
fcomp
shl
cld
ljmp
inc
sub
fisttpl
rcll
add
in
ds
les
xor
push
cmp
rcr
std
out
stc
dec
repnz
push
clc
loop
loope
pop
dec
pop
add
data16
cwtl
pop
jns
add
or
inc
out
in
ret
jbe
bound
mov
jmp
sbb
ret
test
negb
adc
lock
gs
shl
rolb
aas
xor
dec
add
int3
sahf
mov
test
push
test
stc
out
mov
push
xor
mov
and
imul
xor
jae
mov
pop
test
inc
aas
mov
push
leave
and
adc
mov
aam
js
lds
fwait
ljmp
xor
pushf
or
pop
icebp
loope
fs
mov
xor
jns
add
or
sar
pushf
and
ficoms
imul
pop
push
lret
addr16
push
mov
mov
sahf
jp
rol
testb
ficoms
xlat
xchg
dec
out
pop
loopne
mov
push
xchg
hlt
cmpxchg
data16
push
nop
mov
fcompl
cld
mov
dec
pop
roll
pop
imul
stos
cmp
scas
push
mov
fmull
nop
inc
mov
enter
push
mov
pushf
adc
pushf
inc
xor
mov
or
xchg
into
mov
mov
mov
push
fisttpl
ret
xor
mov
enter
jns
hlt
fmul
lds
cmp
stos
ficomps
push
pop
or
leave
out
pop
repnz
xchg
into
sub
pop
xchg
fisubrl
outsb
fildl
push
pop
sbbb
jbe
cmp
pop
ficompl
cmp
fdivrs
xor
dec
test
or
xlat
adc
pop
cld
xor
fstpt
mov
xor
and
xor
out
mov
rclb
sahf
rolb
or
ret
ds
lock
add
int
xchg
xor
call
arpl
mov
aam
push
inc
mov
inc
add
push
mov
lock
scas
out
mov
dec
stos
add
dec
mov
adc
cmp
push
add
xchg
pop
mov
cmp
ficompl
inc
pop
rclb
mov
or
lcall
nop
xor
mov
ljmp
imul
lret
mov
push
into
push
pop
or
mov
cmc
mov
in
pushf
shlb
lods
or
push
aas
sub
mov
or
adc
fdivrs
aas
mov
incl
fistpl
cmp
enter
out
mov
sub
dec
adc
inc
call
or
cmp
cld
push
nop
xchg
shll
shl
outsl
les
mov
enter
push
and
out
ror
shlb
jg
fcmovb
fwait
ljmp
cmp
lods
or
sahf
mov
nop
pushf
outsb
pop
aas
ficoms
enter
rcr
push
sbb
jb
repnz
xor
jmp
stos
mov
test
cli
inc
xchg
or
popf
bound
jl
pop
jae
cli
push
add
js
mov
mov
xchg
ljmp
js
pop
jge
dec
pop
out
fidivrs
jae
pop
stos
arpl
mov
mov
pop
ficoms
or
call
pop
pop
pop
stos
dec
mov
stos
add
jp
ret
xacquire
pop
or
sahf
cs
xchg
xor
ud1
push
out
xchg
mov
popf
je
psrad
push
pop
mov
add
stos
test
loop
xchg
pop
ret
mov
mov
stos
lods
inc
fdivp
les
xchg
mov
push
push
jns
mov
aaa
out
jb
ficompl
jae
je
xchg
lods
dec
popf
push
inc
adc
in
popa
aas
mov
outsl
fs
scas
rorl
cmp
jecxz
stos
lret
inc
pop
add
mov
pop
fldenv
jge
dec
push
aad
push
dec
ret
push
cmp
sahf
stc
pop
adc
xor
pop
mov
cmp
lcall
lods
mov
fisttpl
fmulp
fcompl
push
pop
js
or
out
aas
sbb
mov
outsl
int
xchg
ljmp
repz
mov
gs
xchg
orb
pop
loop
and
add
aam
dec
jge
prefetchwt1
xor
sub
rol
rorb
lret
adc
ja
cmp
lret
imul
fdivrl
or
mov
xchg
repnz
inc
fsubrl
rcl
in
insb
mov
pushf
test
stos
sahf
aas
shrb
jne
fdivs
push
ret
mov
call
xchg
ret
mov
xchg
mov
outsl
adc
test
inc
adc
ficoms
iret
out
inc
push
fmull
xor
xor
cwtl
dec
repnz
pop
sbb
jbe
fmull
mov
pop
sbb
jge
jne
ret
in
addr16
lcall
stos
insb
in
es
add
push
shl
jg
mov
ljmp
les
mov
and
mov
xchg
ficompl
pop
push
pop
fwait
std
rol
push
pop
stos
repz
xor
out
lret
mov
out
fdiv
fcom
cmp
int3
dec
and
ret
cmpb
shl
cmp
pop
fsubrl
lret
mov
cmp
call
cwtl
into
xor
adc
xchg
add
ret
mov
lock
mov
dec
and
xor
add
add
idiv
mov
stc
les
aaa
mov
jns
imul
push
mov
repz
loope
jmp
rcr
repnz
lret
xor
add
cld
mov
xor
les
hlt
sub
mov
push
add
clc
data16
fisubl
rcrb
pop
into
xor
call
mov
xor
or
loope
out
shrb
push
les
call
jns
mov
xchg
dec
enter
xchg
pop
fidivrl
call
stos
ffreep
sarb
rclb
sub
loop
xor
dec
pop
pop
mov
xchg
insl
push
stos
call
push
lock
scas
jnp
and
call
cmpnltps
sahf
cmpsb
int3
push
cwtl
stos
scas
sub
push
aad
jle
cld
lock
and
mov
arpl
jp
jb
and
cmp
mov
ficoml
sysret
push
andl
xchg
or
sti
enter
jmp
movsl
ds
hlt
xor
mov
add
mov
mov
fdivrs
xor
push
xchg
pop
pop
stos
push
pop
mov
mov
adcb
mulb
ljmp
mov
mov
testb
lret
xor
cld
sub
xor
xor
nop
mov
push
mov
sbb
mov
rol
inc
pop
and
ja
push
mov
dec
test
ljmp
icebp
xchg
insb
fwait
push
cpuid
lcall
bound
fdivr
pop
decb
xchg
dec
popf
scas
add
fcoml
mov
fcmovnu
punpckhbw
stc
pop
shrb
lcall
lcall
test
sub
rclb
mov
aam
popf
push
sbb
loopne,pt
fcoml
scas
lcall
lods
fistpl
adc
lret
jbe
push
inc
push
shlb
sub
nop
push
or
shrl
or
and
xor
test
push
fcoml
ss
sub
inc
xor
and
rorb
stos
dec
cwtl
push
jp
add
xor
push
dec
dec
ljmp
mov
jbe
fsubrs
je
test
lcall
sub
nop
cld
pop
push
mov
cmp
pop
in
es
push
mov
sahf
inc
jo
push
cld
jp
mov
faddl
in
movsb
inc
daa
out
popf
call
in
inc
pop
jnp
mov
adc
jge
pop
or
popf
out
adc
rcl
pop
into
mov
push
push
inc
movb
add
xchg
or
xchg
mov
cli
ljmp
xchg
push
pop
fldenv
sub
pop
clc
or
subl
shll
xor
psubb
push
push
mov
clc
mov
sahf
dec
xchg
inc
mov
in
repnz
lods
dec
jg
push
sub
lret
mov
fcoms
inc
pop
fdiv
push
cli
ss
fsubl
aam
xchg
and
leave
shlb
inc
mov
aam
pop
push
out
pop
add
push
aas
push
jns
jmp
push
ret
rolb
push
xor
xor
sahf
push
cmp
pop
inc
xchg
pop
cmp
clc
pop
pop
ljmp
mov
and
popf
xor
inc
pop
and
stc
lds
enter
scas
push
sbb
mov
pop
xorl
mov
hlt
test
ljmp
mov
ret
pop
or
stos
rclb
xchg
inc
inc
sbb
bsf
loop
in
in
adcb
and
push
pop
ret
test
into
xchg
cmp
popf
idivb
mov
xor
xchg
lcall
push
or
xchg
push
dec
aas
sub
out
xchg
cmpsb
rorb
adc
ljmp
ret
mov
nop
sub
rcrl
pop
mov
inc
lcall
or
jb
pop
jo
ljmp
xlat
loopne
sbb
clc
div
xor
out
cld
or
add
stc
add
loope
icebp
lcall
ret
fisubrs
sbb
pop
les
push
pop
int3
mov
mov
adc
enter
test
or
lret
hlt
or
or
pop
jge
scas
mov
lcall
stos
wrmsr
aam
lcall
push
or
jmp
cwtl
js
mov
dec
jg
loope
gs
arpl
test
pop
call
out
push
jle
popa
aas
cmp
aaa
mov
mov
sti
cwtl
adc
pop
int3
stc
and
es
dec
mov
dec
ljmp
rsm
or
int3
pop
shll
add
ds
test
hlt
ljmp
scas
mov
push
jle
sub
and
xchg
fiadds
dec
fadd
mov
or
xor
fidivs
pop
cmp
or
scas
xchg
into
or
test
xchg
divb
or
sbbl
pop
repz
repnz
repz
fmul
push
jb
sahf
mov
sub
and
test
sbb
push
adc
mov
mov
sbb
fmuls
xor
rolb
call
ficompl
or
aam
ljmp
push
add
mov
xchg
xor
imul
mov
ret
call
and
mov
and
pushf
popa
cli
xchg
xchg
repnz
imul
lock
or
hlt
xchg
sbb
popl
rcr
sub
test
mov
hlt
je
add
aad
xchg
fcomps
sub
or
inc
cmp
int3
lcall
hlt
repnz
fmull
pop
xchg
bound
cmp
hlt
lret
mov
pop
xor
or
jecxz
repnz
lcall
push
test
stos
and
repz
jns
cwtl
leave
test
xchg
add
pop
add
lret
jbe
movsb
repnz
sbb
movsl
cmp
xchg
negb
ss
repz
adc
mov
pop
rcrb
lock
adc
in
fbstp
iret
xor
sub
push
call
enter
test
loope
xor
xor
cmp
add
xchg
push
xor
lcall
or
xlat
pop
stos
shlb
push
pushf
int3
xchg
stos
mov
test
fmull
cwtl
fdivrs
shlb
mov
lcall
jo
sahf
aaa
cmpsl
mov
jg
xchg
clc
stos
pop
sub
jg
xchg
test
lret
pop
lret
mov
outsl
and
pop
insb
xchg
pop
shlb
bswap
fimuls
shl
cmp
xchg
int
sarl
pop
xchg
and
fildl
sbb
sub
mov
mov
sti
or
lock
nop
cmp
pop
int3
mov
out
dec
pop
push
mov
xor
pop
inc
fsubl
stos
loopne
lock
mov
pusha
or
and
adc
out
or
adc
sahf
por
test
cmp
enter
or
cmc
das
xor
scas
add
push
sahf
popa
cmp
xchg
hlt
adc
stos
repnz
dec
scas
divb
and
out
mov
push
call
nop
push
xlat
bound
enter
out
stos
add
nop
or
jp
mov
push
jb
ss
pushf
out
cmp
pop
repnz
xchg
rcrl
jle
add
mov
lret
cwtl
mov
or
mov
enter
insl
xor
mov
push
ljmp
xchg
dec
gs
xchg
dec
cmp
es
push
bound
nop
hlt
pop
inc
stos
ror
loope
outsl
lcall
xchg
pop
fdivs
hlt
dec
adc
addr16
loopne
leave
scas
mov
nop
and
push
dec
mov
jns
push
clc
and
push
push
sbb
imul
mov
sbb
aam
push
clc
jg
xchg
stos
pop
lcall
mov
daa
adc
pop
ffree
xchg
xor
mov
popf
mov
mov
push
out
xchg
ret
test
push
adc
js
add
pop
or
cwtl
push
lods
dec
out
inc
jo
cmp
sti
lret
clc
repnz
pop
jnp
lret
mov
mov
dec
jb
adc
stos
rclb
cli
movsb
xchg
push
clc
or
add
mov
push
pop
jnp
lret
lret
adc
aam
jge
stos
shl
xor
ret
negl
cmp
les
add
jno
test
iret
mov
mov
cli
or
cmp
fcompl
mov
aam
sbb
jg
mov
pop
cli
xorl
fidivrl
rorb
mov
clc
jb
cld
and
dec
add
mov
and
mov
xchg
call
mov
scas
inc
push
lret
mov
xor
enter
xor
push
pop
sbbb
nop
cmp
or
add
in
pop
test
rcrb
mov
pop
stos
xor
xor
enter
das
mov
mov
ret
fwait
aam
nop
jnp
xchg
or
clc
std
push
xchg
dec
inc
movq
fcomps
dec
sub
out
pop
into
scas
in
ljmp
aad
and
pop
pop
js
mov
scas
test
add
popa
lcall
jmp
cwtl
xchg
mov
push
arpl
jmp
sbb
test
mov
jp
or
outsl
cmp
stos
clc
mov
les
mov
lahf
sahf
mov
or
jmp
xchg
enter
sub
nop
stos
out
scas
pop
push
js
jp
xchg
int3
incb
xchg
ficomps
pop
xor
test
cmp
stos
add
rcll
lock
je
int3
fs
insl
cmp
out
mov
rcrb
mov
push
ljmp
aam
push
hlt
aad
call
fildll
sbb
cld
or
cmp
xor
mov
out
push
mov
test
mov
lahf
sbb
sub
sub
push
mov
fsubr
aas
pop
mov
jae
pop
pop
sub
imul
pop
inc
test
outsb
lahf
nop
loop
mov
movb
scas
xchg
mov
mov
mov
dec
adc
ds
pop
repnz
xchg
mov
rcl
cmp
std
les
sahf
idiv
enter
lahf
call
pusha
xchg
cwtl
scas
jecxz
push
clc
pop
in
push
adcb
test
or
ret
jnp
push
test
bound
jno
cld
dec
mov
insb
mov
stos
dec
rolb
cmp
test
mov
sub
ficoml
ja
or
and
xor
lret
sub
dec
adc
pop
orb
mov
outsb
lret
lock
inc
lds
call
sbb
ljmp
pushf
push
and
inc
mov
outsl
xor
call
orb
rcr
mov
or
xor
add
xchg
inc
stos
lock
xchg
sti
and
pop
clc
or
mov
scas
loope
fsubs
push
iret
mov
int
aaa
sahf
jnp
sarb
and
add
push
movb
out
into
scas
mov
aas
xchg
test
pop
rcrb
mov
fisubs
fidivrl
sbb
inc
add
fistl
pop
add
ds
cld
out
or
push
fidivl
adc
pusha
hlt
outsb
push
hlt
gs
dec
pop
nop
cmp
lret
out
push
hlt
push
dec
cmp
xchg
sahf
mov
int3
push
sbb
pop
stc
mov
mov
lret
add
ficoml
int
in
ficomps
ret
mov
xor
jecxz
push
jo
mov
pop
mov
ja
lcall
outsb
fwait
dec
push
sub
or
pop
in
mov
push
xchg
fmulp
popa
shr
cmc
jae
and
jae
outsb
scas
mov
lock
push
push
ljmp
pop
xor
xor
sarb
ljmp
xchg
test
mov
jg
push
ja
adc
loope
sarl
ljmp
jb
ds
int3
rclb
aam
mov
lcall
pop
imul
fldt
lds
push
out
cmpsl
push
xchg
je
mulb
push
clc
pop
sahf
mov
cmpsl
std
jne
xchg
out
add
adc
cmp
pushf
xchg
stos
pop
imulb
add
push
add
pop
les
mov
test
ljmp
xchg
fdiv
int3
cmp
cld
push
ficomps
or
sbb
testb
cli
xor
clc
ljmp
ja
mov
pop
or
fcoml
int3
mov
lock
push
rorb
or
and
subb
repnz
pop
sti
and
pop
rcrb
lock
mov
push
sahf
xor
icebp
out
xor
scas
adc
or
out
stos
test
rolb
imul
imul
cwtl
and
lcall
cmp
add
push
mov
gs
push
push
lock
lret
xchg
dec
pop
pop
sbb
sbb
in
stos
bound
inc
fs
sub
dec
cwtl
aam
push
push
mov
pop
xchg
push
mov
out
pop
push
rdmsr
repnz
daa
push
out
stos
lock
adc
rorb
aas
add
adc
nop
push
enter
fsubl
xor
ror
push
xchg
das
testl
pop
pop
stc
sbb
arpl
dec
xchg
repnz
pop
lcall
scas
lret
fcoml
mov
sbb
fimuls
xor
repnz
xor
pop
sub
enter
and
out
inc
stos
ds
daa
or
jae
adc
testb
mov
fildl
lcall
fdivl
pop
gs
mov
sahf
es
mov
xchg
mov
jb
sbb
mov
fcompl
in
push
nop
cmp
or
mov
les
push
inc
pop
scas
mov
rclb
jo
sahf
xor
push
mov
mov
add
fbstp
ds
stos
jge
aam
pop
mov
pop
lock
decl
ret
scas
or
in
mov
movsb
fiadds
jmp
es
nop
mov
cld
into
dec
test
push
fdivl
out
jb
ss
pop
cmpsl
pop
shrl
jb
outsl
pop
and
movsl
ds
mov
test
xor
cmp
push
mov
inc
mov
ljmp
xchg
ret
xor
fcompl
mov
push
enter
inc
pop
jl
aam
sarb
insl
pop
stos
or
pushf
stos
xchg
mov
xchg
xchg
xor
mov
cmp
enter
jns
pop
pop
cli
std
add
ficomps
lret
lods
pop
stc
mov
repz
dec
add
jmp
fs
repz
es
incb
fldenv
arpl
daa
fsubrs
pusha
ret
fisttps
add
aas
push
mov
mov
ret
dec
mov
add
imul
xor
cmp
pop
pop
xchg
lcall
xchg
aaa
repnz
or
mov
arpl
movsl
jb
jo
xlat
in
jmp
stos
hlt
arpl
pop
inc
fnstcw
aam
call
daa
push
pop
ret
dec
inc
xlat
xor
push
mov
gs
xchg
ret
ret
sub
xchg
add
ret
push
clc
xor
into
sub
les
add
adc
mov
dec
xor
jb
jbe
adc
dec
fdivrs
mov
or
inc
lret
ljmp
pop
mov
mov
stos
aad
mov
jb
or
nop
push
pop
addps
xchg
pop
test
iret
scas
enter
jb
nop
cmp
clc
sahf
add
ret
into
xor
pushf
push
mov
ficoms
xchg
add
push
and
adc
mov
lret
out
pop
cli
mov
js
fbstp
test
mov
pop
xor
or
xchg
push
push
pop
out
push
mov
popa
ret
cwtl
or
nop
push
fs
or
ljmp
push
jbe
push
fidivrl
or
mov
arpl
inc
shr
ret
rclb
imul
mov
enter
adc
dec
push
shll
jmp
daa
std
pusha
int
sub
stos
mov
cli
loop
mov
or
cmp
scas
cld
xchg
clc
inc
rclb
cmp
pop
aam
mov
ljmp
inc
lock
mov
push
incb
pop
sub
sub
jnp
lock
movsb
bound
xchg
and
pop
and
stc
sbb
cmp
fadd
add
sarb
int3
fidivl
push
dec
push
lock
daa
or
jnp
mov
or
aam
xchg
lret
call
sbb
lcall
clc
lock
int
mov
or
mov
scas
pop
movb
xchg
mov
hlt
sub
cmp
mov
ficoms
mov
adc
mov
mov
stos
fimuls
cmpsb
call
pushf
dec
and
repz
repz
out
into
outsl
push
fwait
dec
pop
cld
aam
fwait
cmp
clc
add
sarb
lret
lock
push
sahf
xchg
pop
imul
jmp
stos
int3
mov
add
hlt
lcall
and
mov
mov
mov
mov
inc
push
stos
xor
stc
xchg
int
xchg
clc
push
rcrb
sbbb
and
rcrb
add
push
sarl
fcmovne
mov
push
fistpl
stos
pop
lods
cwtl
in
js
xchg
xchg
dec
lcall
mov
jge
les
lret
je
mov
pop
scas
add
pop
xchg
lret
out
fucomp
aam
push
xchg
cld
mov
or
push
xchg
xchg
stos
mov
pop
enter
xchg
sub
xchg
mov
roll
ds
mov
out
push
jb
fidivs
xorl
xchg
mov
push
adc
xchg
ds
sar
or
xchg
add
lret
xchg
push
inc
inc
ljmp
jmp
mov
aam
mov
add
xchg
stos
ss
mov
pop
xchg
outsb
fmulp
lret
ljmp
mov
stos
call
xchg
add
lods
repnz
add
out
or
cli
mov
cmp
out
int3
pushf
pop
inc
ret
in
pop
jb
bound
mov
jge
jmp
daa
ret
in
and
faddp
outsb
ret
cld
cmpsl
mov
icebp
mov
xchg
cmp
lahf
mov
hlt
clc
and
mov
sbb
xchg
scas
imul
sbb
mov
daa
xor
mov
cwtl
mov
pop
pop
sarb
scas
lds
cmp
mov
push
mov
cwtl
push
adc
jo
lock
int3
and
int
adcl
push
divb
push
or
push
hlt
gs
in
into
jo
fsubrp
or
pushf
and
jae
add
data16
and
xchg
cld
cld
sbb
dec
jmp
pop
fmulp
stc
call
push
dec
inc
movsb
pop
cmp
xchg
fadds
into
sahf
fsubl
and
mov
decb
shr
add
mov
outsl
mov
aas
mov
pop
xchg
or
jno
out
cwtl
or
add
icebp
faddl
and
and
cs
add
xor
jae
loop
and
jns
out
pusha
out
shll
out
out
add
and
xchg
js
xchg
xchg
and
mov
xlat
xchg
xor
xlat
mov
and
adc
cli
into
lcall
sbb
pop
in
ficoml
and
xchg
ret
aam
mov
push
ficomps
scas
push
movsl
pop
pop
test
shll
mov
xchg
or
push
xorl
test
repnz
mov
xchg
lret
jmp
mov
push
and
add
call
cmp
mov
fwait
shrb
int3
xchg
outsl
ds
clc
mov
lock
in
insb
add
stc
fildll
jnp
rclb
out
fnstsw
inc
or
mov
int
cmp
testb
in
fildl
jb
pop
and
jecxz
stos
pop
dec
cwtl
sahf
mov
stos
mov
and
ja
ret
and
pmaxsw
shrl
les
gs
pop
pop
push
or
xchg
mov
lret
fistpl
cwtl
out
cwtl
pop
xchg
mov
pop
inc
ljmp
gs
jb
insb
int
sbb
pop
sahf
into
mov
gs
mov
mov
sahf
test
add
gs
jnp
push
mov
insl
jb
inc
cmp
call
out
cmp
lcall
lret
push
lock
dec
repnz
pop
add
scas
sahf
aam
add
add
push
into
push
popf
call
jno
fiadds
xchg
jo
addr16
shr
fldcw
pop
or
jge
xchg
mov
ds
mov
clc
aam
rolb
cmpsl
test
pop
fnstcw
mov
mov
aam
cmp
out
mov
out
out
cwtl
fsubrp
mov
sbb
mov
jnp
les
int3
cwtl
hlt
mov
insl
dec
pop
andl
or
push
xchg
jo
jbe
and
jae
lds
jl
jno
cmp
mov
lret
int3
mov
jbe
mov
imulb
xchg
add
rol
es
enter
push
jle
jge
dec
mov
jns
xlat
mov
jp
fiadds
inc
sahf
enter
xor
mov
sub
xchg
shrb
mov
sub
pop
fcomps
or
push
mov
out
jns
mov
xchg
jne
and
push
clc
cwtl
lret
add
shrb
mov
data16
shll
out
addr16
and
mov
popf
push
xor
add
jmp
ljmp
cld
push
push
cmp
lret
jo
ljmp
xor
clc
xor
xchg
stos
cld
lret
pop
ljmp
xchg
inc
fidivs
adc
call
je
sbb
cwtl
add
clc
and
lock
mov
push
rcrl
stc
dec
imulb
inc
xchg
and
sarb
or
les
paddusb
int
pop
call
movsl
cli
sub
enter
mov
dec
ss
pop
and
cmp
outsl
movsb
xor
stos
aas
movsl
mov
mov
sbb
jnp
fmul
dec
ljmp
mov
inc
mov
xor
lret
cmp
pop
ret
subb
pop
cmp
lcall
shrb
stc
jno
xchg
push
push
stos
xor
hlt
jne
dec
ja
push
mov
dec
inc
add
scas
mov
out
imulb
or
pusha
push
push
and
push
insl
adc
imul
les
mov
add
xchg
aam
inc
add
dec
mov
dec
adc
push
dec
imul
xor
or
iret
and
les
aam
stos
js
pop
cmc
leave
pop
cli
aam
hlt
enter
pop
push
and
mov
stos
fstpl
pop
fcmove
negb
sarb
cmp
fisubl
nop
add
faddl
push
aaa
fwait
les
je
push
dec
xchg
fidivrl
xor
test
mov
pop
mov
int
push
inc
pop
call
xchg
nop
lret
inc
rclb
pop
add
cmp
rcr
mov
or
and
shl
xchg
pop
cmp
nop
ret
pop
adc
jge
adc
arpl
cmp
enter
fdivrs
in
hlt
test
jp
or
clc
out
fsubr
aam
pop
out
aam
scas
jecxz
mov
cmp
mov
or
int3
gs
add
inc
mov
adc
out
into
mov
and
imul
clc
fwait
stos
add
cli
int3
sete
mov
push
sub
mov
out
push
pop
mov
xchg
clc
ficomps
clc
xor
jns
pop
dec
pop
add
ljmp
incb
inc
sti
out
push
fists
rclb
in
push
es
xchg
or
test
jnp
outsl
data16
mov
in
jmp
and
xorb
jnp
call
rorb
push
dec
mov
adc
hlt
mov
ljmp
cwtl
cmp
pushf
int3
sahf
test
or
clc
cmp
xchg
or
lods
mov
push
sub
mov
fsubr
nop
rcr
mov
lods
adc
ror
xchg
sub
movsb
cwtl
jns
adc
mov
xchg
test
ficomps
xor
iret
inc
loope
std
pop
or
shl
imul
jmp
and
push
fiaddl
sub
dec
xchg
pop
out
stos
cmp
fcoms
rorb
sbb
pushf
push
push
cmpb
fadd
ret
stos
int3
xor
jnp
ljmp
pop
ds
pop
pushf
lcall
out
mov
out
add
cwtl
aaa
fld
rcll
mov
mov
and
ss
fcom
fneni(8087
hlt
idiv
imul
out
nop
xchg
pop
lahf
xor
xor
sbb
or
push
sbb
movb
xor
pushf
pop
mov
cwtl
mov
jbe
jg
dec
adc
add
or
ficoml
push
out
or
out
rcll
dec
imulb
sub
and
mov
jmp
scas
repnz
aam
add
sarb
dec
mov
ret
in
push
test
subl
xlat
jb
je
jbe
lcall
mov
std
lods
stos
fistpll
mov
ljmp
mov
push
pop
jge
mov
lret
shlb
test
jo
mov
clc
dec
or
inc
push
cld
sahf
or
test
cmp
mov
xchg
stos
out
sub
ljmp
into
fiadds
clc
push
nop
push
fsub
loope
loope
data16
scas
stos
cmp
add
aam
push
sti
and
pop
fbstp
mov
clc
fisttpl
int3
int3
dec
add
pop
clc
mov
clc
in
jp
fdiv
int3
daa
mov
loopne
jns
sar
cmp
sbbl
push
xchg
pop
int3
mov
lods
mov
add
stos
add
rcr
pop
cmpsb
push
in
push
pop
jecxz
adc
call
cld
push
mov
out
lock
fdivrs
addl
scas
push
sub
rcr
mov
test
rcll
push
push
stc
mov
cli
lods
clc
fstps
sbb
or
dec
ret
fidivrl
loope
int3
cmp
or
and
outsb
mov
pop
pop
psubsb
mov
stos
stos
xchg
mov
aas
mov
mov
ljmp
dec
cld
mov
add
mov
xlat
push
gs
xadd
shll
and
leave
aam
cmp
inc
add
bound
push
add
fimull
pop
add
cmp
mov
xchg
mov
mov
mulb
push
sbb
mov
in
inc
push
sahf
test
pushf
fsubrl
int3
lcall
fwait
mov
ret
leave
sbb
repnz
shlb
cmp
jbe
aam
mov
in
into
in
push
out
imul
pop
test
jbe
push
aam
adc
popf
and
inc
mov
xor
lcall
pop
ror
andl
add
insl
ljmp
lcall
push
aam
dec
and
xchg
jg
cmpsb
movl
call
xabort
cmp
cwtl
pop
bound
and
cmp
or
push
mov
push
fsubrs
pop
aam
orb
gs
fidivl
jo
das
xchg
sbb
inc
add
lcall
dec
aam
pop
repnz
push
jp
dec
stc
fsubs
jae,pt
inc
cmp
mov
scas
das
popf
mov
fmul
mov
mov
ror
into
push
call
sub
add
into
or
push
out
mov
out
test
add
push
xor
enter
rcll
cmp
sbb
data16
aam
lret
fdivrl
into
sahf
aad
push
xor
ds
cltd
sub
out
pop
dec
push
inc
shlb
into
lcall
stc
or
ret
mov
and
ljmp
push
enter
cwtl
jle
sbb
mov
xor
cmp
or
js
pop
mov
or
loop
nop
mov
jmp
out
pop
movb
mov
imul
xchg
out
mov
shl
jo
lret
inc
mov
add
or
mov
cli
xor
rclb
or
or
lret
loopne
fcoml
es
rcr
in
insb
jmp
repnz
push
addr16
rcl
mov
xchg
mov
pop
and
into
testl
mov
mov
xor
xor
and
xchg
pop
mov
pusha
pop
adc
lcall
clc
adc
mov
lcall
out
fidivrs
pop
sahf
pop
rorb
xor
sarb
mov
mov
push
ljmp
rcrb
mov
add
cld
stos
push
ljmp
fmull
pop
stos
jne
sbb
inc
mov
lea
out
pusha
pop
repnz
dec
and
mov
pop
pop
jns
mov
add
clc
repnz
dec
cmc
or
and
loope
sub
int3
mov
mov
jp
fsubrl
bound
clc
in
add
mov
out
lods
lcall
in
lret
hlt
dec
mov
mov
add
mov
ds
js
cli
not
shr
sub
ds
pop
pop
ror
notb
sbb
hlt
lods
inc
pop
xor
push
pop
inc
fdivr
rcr
rcr
lock
xchg
rorb
fisttpll
jmp
out
in
gs
clc
int3
fimull
rcrb
jbe
mov
mov
shr
pop
fcomps
cmpsb
repnz
adcb
mov
lock
jae
es
push
cwtl
bnd
xchg
mov
lcall
push
mov
dec
rcll
outsb
scas
pop
iret
int3
aam
jb
xor
stos
add
adc
push
repnz
pop
rorb
imul
xor
in
cwtl
repz
in
xchg
jle
pop
orb
lret
pushf
pop
or
mov
cltd
jbe
scas
fsubrl
aam
inc
popl
test
mov
mov
inc
mov
push
imul
push
pop
jae
shl
jns
in
iret
fsubs
sbbb
sub
sub
stc
xor
lock
or
sti
ret
push
outsl
dec
int3
enter
xor
xchg
jae
pop
imul
cltd
or
les
xchg
les
jae
test
loopne
scas
dec
mov
mov
jmp
jnp
call
mov
xor
add
dec
les
ljmp
mov
punpckhdq
mov
stos
add
push
sbb
enter
dec
stc
sbb
or
pop
mov
fwait
ret
test
cmp
jp
mov
ret
jecxz
xor
sahf
ljmp
cwtl
ret
xchg
movsl
xor
dec
push
lcall
dec
mov
push
fwait
enter
mov
inc
lret
dec
mov
inc
in
mov
lret
mov
bound
push
call
push
push
fdivr
movsl
hlt
stos
mov
xchg
xchg
mov
pop
lock
xchg
orb
cmp
add
test
fsubrp
push
call
pop
stos
mov
cmp
mov
fstps
mov
mov
xchg
dec
and
fisubrs
push
mov
cmp
clc
pop
mov
sbb
xchg
test
cmp
outsb
sbb
and
and
push
jnp
adc
push
mov
loop
push
add
pop
xchg
mov
dec
dec
fdivrl
pushf
rclb
mov
xlat
mov
pop
hlt
pop
xchg
ret
pop
or
or
int3
imul
imul
scas
push
pop
lahf
sahf
pminub
xchg
dec
add
push
call
pop
dec
ljmp
dec
shrb
xchg
call
stos
enter
jae
out
mov
insl
jae
and
add
push
cwtl
out
loop
cld
xchg
lock
pop
push
dec
cmc
fsub
mov
mov
xor
cltd
adc
mov
or
push
and
xchg
cmc
push
test
or
inc
fisubs
mov
sbbb
stos
xchg
cmp
fsqrt
jae
xor
xor
xor
lret
fcmovnu
ljmp
out
rcr
mov
movsb
cld
xor
sbb
rclb
cmp
mov
mov
mov
divl
xchg
test
pushf
ljmp
insl
mov
cmp
mov
pop
fcomps
mov
push
jbe
cmp
inc
cwtl
mov
cld
setne
sarb
mov
push
ljmp
pushf
dec
das
inc
lock
in
arpl
sub
fdivs
mov
xor
push
nop
sarb
push
icebp
xchg
add
jb
dec
repz
jp
hlt
add
pop
and
in
rcr
mov
push
xchg
loop
shrb
add
aam
mov
cmp
jo
jnp
jno
scas
cmc
call
rorb
ret
out
or
mov
sbb
push
movsb
stos
imul
pop
clc
mov
push
stc
dec
pop
insb
pushf
or
shll
jnp
xor
jnp
mov
and
xor
mov
int3
out
add
jnp
rcrb
icebp
mov
imul
push
test
jle
add
test
pop
mov
loope
xchg
pop
cpuid
mov
sbb
cwtl
sbb
xor
test
lcall
sbb
xor
mov
xor
pop
repz
mov
push
into
or
addr16
dec
pushf
loope
push
xor
fcoml
mov
mov
adc
and
mov
xor
out
pop
push
mov
push
aaa
push
out
aam
pop
push
inc
outsb
mov
outsb
sub
cmp
enter
cld
fcompl
fcoms
and
repz
jb
adc
pop
push
push
ficoms
movsb
inc
imul
add
dec
push
clc
cmp
mov
lock
rolb
add
sbb
fimuls
out
into
jp
shrb
dec
pop
mov
stos
psubd
hlt
inc
fs
dec
inc
and
cld
aad
or
dec
mov
jg
add
inc
mov
hlt
paddsb
scas
cld
mov
cmp
mov
mov
jae
lahf
in
cmp
push
xchg
add
cmpsb
out
pop
orb
xor
sbbl
rcl
xor
pop
mov
shrb
icebp
int3
shll
out
and
arpl
es
aaa
divps
ficoml
pop
or
fimull
pop
call
decb
iret
scas
dec
dec
jmp
xchg
mov
adc
loop
lret
popa
cmp
adc
pop
rcrb
or
xchg
xchg
mov
cmpsl
inc
xchg
cwtl
cmp
mov
enter
mov
mov
add
pop
push
and
cmpsl
call
out
mov
pop
sarb
jmp
mov
lret
jnp
or
mov
pop
ds
pop
jmp
into
cwtl
nop
dec
test
push
test
cli
jge
cld
hlt
jbe
cwtl
out
loop
fdiv
and
sbb
jg
cmp
mov
out
movsl
cmp
idiv
repnz
add
sahf
stc
nop
lcall
lock
ljmp
shlb
pop
nop
hlt
add
or
mov
stos
fimuls
fsubrs
movb
add
adc
or
sub
mov
mov
fsubrs
mov
lret
jae
ficomps
negb
rcr
clc
inc
clc
sub
sub
int3
or
cpuid
fisubrl
fsubp
or
lcall
mov
imul
pop
cmp
ret
ret
pop
shrb
test
enter
mov
rolb
or
jmp
mov
fimull
addr16
lret
shlb
sbb
into
mov
mov
rcll
stos
sub
rorb
iret
cmp
add
or
inc
push
nop
scas
pop
xor
adc
cld
ljmp
or
fidivl
inc
or
shlb
bound
sub
or
rolb
mov
fs
add
es
repnz
mov
bnd
mov
or
inc
mov
xor
out
and
and
mov
lcall
dec
test
enter
add
cmpsb
shlb
mov
fsubr
xor
out
inc
push
mov
enter
dec
cmp
stc
stos
cwtl
jp
mov
test
add
pop
rcrl
lock
and
stos
xchg
xchg
add
or
ret
push
dec
push
rclb
int3
ficompl
clc
pushf
adc
push
push
ret
and
push
movb
sbb
xor
sti
jg
rolb
push
out
call
fdivl
add
mov
cmp
test
xlat
xorb
dec
hlt
in
repnz
pop
xor
mov
push
cli
cmp
clc
ror
pop
test
cmc
fistps
mov
test
pop
in
pushf
lret
jbe
lret
cmp
pop
int3
mov
lcall
mov
xor
jmp
les
decb
mov
sti
mov
push
adcl
fisubrl
or
es
or
cmp
call
xor
jo
mov
dec
cmc
mov
dec
jbe
push
out
fistpll
xlat
aam
movsl
sub
inc
sbb
add
mov
mov
push
xor
nop
es
push
les
pop
stos
mov
mov
imul
iret
out
xchg
fmuls
adc
mov
imul
mov
fimuls
shr
jb
jbe
sbbb
nop
loop
fdivs
rcr
pop
add
or
int3
fwait
jp
adc
lret
xchg
xchg
iret
je
dec
clc
add
div
ds
aam
mov
test
ret
cwtl
mov
pop
out
pushf
sub
and
fisubrs
cmc
xlat
inc
in
jp
fcoml
and
mov
push
dec
lcall
pushf
stos
mov
ret
clc
fmuls
out
mov
dec
mov
add
ret
stos
loope
scas
or
or
pop
sbb
xchg
ficoml
test
enter
mov
or
mov
mov
jg
xor
test
xchg
lret
clc
cmpb
popa
or
lods
sbbl
shlb
repnz
xchg
pop
pop
xchg
repnz
out
lock
pop
pop
into
mov
xchg
testb
sbb
push
int3
adc
add
and
xchg
dec
addb
imul
into
movswl
lcall
rcl
mov
or
xchg
jnp
cld
mov
fnsave
cwtl
ja
lods
inc
pop
clc
frstor
aad
out
xchg
mov
lcall
cmp
cld
mov
and
inc
xchg
test
lret
fdivs
adc
pop
push
das
fildll
mov
or
mov
aam
sbb
icebp
sahf
out
sti
fists
push
addl
rorb
pop
add
xchg
ljmp
int3
dec
je
enter
adcb
push
sub
sub
mov
mov
mov
stc
mov
mov
xor
inc
roll
push
sub
add
movsb
or
shlb
push
shlb
and
repz
push
cmovle
test
xchg
icebp
add
iret
rorb
xchg
iret
and
mov
xchg
inc
mov
mov
push
aam
jne
jl
jb
push
push
push
jp
inc
bswap
jp
insb
dec
andb
jb
fimull
xor
faddp
fstl
xchg
push
imul
jb
mov
and
jecxz
jnp
call
mov
mov
jae
into
jp
fmulp
add
fsubrp
lock
rolb
sahf
shlb
jbe
xor
shlb
sbb
std
mov
and
xchg
mov
int3
stos
clc
lcall
lret
aam
in
imulb
mov
fwait
jmp
mov
fdivrp
push
xchg
xor
repnz
shrb
shlb
push
lcall
add
ljmp
pop
xor
mov
push
bswap
dec
ret
cmpsl
cmpsl
inc
push
pop
mov
outsb
cld
mov
jne
push
and
mov
mov
adc
xor
test
or
test
enter
mov
adc
aas
bound
loopne
aam
push
loop
test
movsl
stos
adc
inc
xor
push
push
cmp
push
clc
les
xchg
jmp
sti
pushf
cwtl
sub
sahf
into
pop
xchg
cli
out
dec
pop
lcall
les
pop
sbb
cmp
lret
dec
push
les
test
pop
hlt
jge
into
frstor
mov
lret
xor
std
push
in
push
jae
add
je
push
pushf
fdivrs
mov
scas
mov
stos
inc
pop
scas
adcb
pop
lcall
pop
scas
xchg
push
push
cwtl
daa
dec
shrb
dec
push
loopne
stos
mov
push
out
push
inc
rcrl
lcall
jne
scas
mov
add
clc
cmpsb
xchg
or
shrb
inc
ret
dec
mov
sahf
mov
or
adc
jns
cmpsl
and
aas
shrb
addr16
xor
push
mov
fstpl
int
or
fs
clc
pop
mov
sbb
or
and
hlt
xor
dec
idivb
es
cmpsl
jecxz
or
sbb
pop
xor
int3
aas
pushf
mov
xor
pop
mov
jbe
cltd
mov
and
fisubrs
test
cmpsl
repnz
mov
int3
adc
cmp
les
das
xchg
cmp
setb
lcall
ljmp
add
jno
sbbl
shlb
push
popa
or
and
andl
or
pop
cwtl
push
sbb
fmul
inc
pop
stos
loope
fcmovu
push
or
outsl
push
fimull
jb
pop
add
mov
ds
xchg
and
data16
ret
out
or
xchg
gs
and
xor
xchg
xchg
ljmp
mov
jg
out
ret
mov
in
pop
pop
mov
loopne
add
add
jae
xor
fwait
leave
xor
push
adcb
push
jb
add
loope
shll
les
fadd
mov
inc
das
and
pushf
sbb
mov
push
jmp
fsubrs
pop
mov
mov
sbb
push
psubsb
lret
dec
mov
rcr
movsb
dec
ds
jbe
dec
fcoms
add
movsl
ds
cwtl
fidivs
fdivrl
stos
fcmovb
stos
xor
enter
cltd
adc
push
jae
loope
jmp
cmp
call
adc
add
arpl
xchg
and
enter
scas
pop
fcomp
fwait
or
pushf
adc
xchg
cmp
clc
arpl
sub
addb
je
sbb
lds
movsl
out
add
sbb
and
bound
pop
fcompl
mov
stos
hlt
xchg
out
lea
lea
xchg
cmp
push
push
clc
test
lcall
jnp
repz
lock
idiv
into
mov
mov
mov
jl
cld
ret
fcoms
les
hlt
pushf
fisubrs
mov
lret
mov
sti
jb
out
and
mov
xchg
nop
sar
mov
xchg
sbb
test
scas
fsubr
mov
pop
sbb
rorb
ret
addr16
sbb
pop
movb
add
xchg
add
add
iret
je
jb
faddl
out
cwtl
in
int3
repz
add
xchg
mov
fmuls
rolb
lcall
add
mov
pop
ds
add
ss
data16
clc
aad
rclb
fsubr
ljmp
or
test
push
stos
ss
cld
pop
dec
hlt
push
mov
pop
inc
push
ror
jo
test
out
cltd
mov
and
paddd
in
xor
xchg
or
xor
pop
adc
gs
mov
out
dec
push
stos
pop
es
pop
int3
and
loop
mov
rcr
ljmp
ds
call
sbb
lods
push
and
stos
cmp
rcr
push
out
int3
mov
push
fsubrs
insb
ds
push
and
lcall
push
les
mov
movsl
daa
pop
int3
mov
into
pop
aas
cmp
imul
mov
jge
and
rclb
ret
out
push
clc
push
shlb
sub
idiv
mov
loopne
cmpsl
cli
outsb
jbe
imul
nop
mov
push
mov
cmp
mov
push
repnz
mov
xchg
call
mov
lret
mov
enter
icebp
xchg
lea
mov
nop
xor
aam
dec
mov
testb
xor
and
test
xchg
pusha
mov
sbb
mov
sti
pop
cmp
sahf
dec
test
fiadds
inc
mov
mov
pcmpgtd
push
test
enter
cld
enter
mov
mov
push
inc
xchg
call
shr
mov
pushf
push
test
mov
push
loop
pop
movsl
cmp
lcall
scas
sahf
jb
pushf
cwtl
pop
and
incb
xor
dec
push
pop
stc
stos
add
call
xor
aam
lock
cmp
sarl
add
out
fdivr
xchg
mov
loop
mov
out
mov
add
pop
rcrb
add
mov
sub
fisttpl
subb
xchg
out
xchg
ficompl
les
xchg
in
mov
and
fsubrs
xor
pop
int3
cmp
test
roll
ret
ret
lret
inc
shlb
clc
scas
xchg
movsl
je
mov
aam
mov
cld
mov
movsb
inc
push
xchg
es
or
rolb
les
ss
or
fdivs
lcall
aam
push
jo
jb
add
or
in
test
mov
lcall
jne
and
cs
stos
fsubl
cmp
dec
mov
ds
cmp
and
pop
hlt
aam
insb
xchg
ret
fcomps
int
mov
add
imul
push
jb
push
pop
repnz
mov
sahf
push
xchg
out
xor
fmull
xor
xchg
mov
imul
pop
fisubl
mov
xor
movsb
cmpsl
or
lahf
idivb
les
jle
ljmp
xchg
inc
fwait
shlb
or
add
pop
fists
mov
std
sbb
or
bound
mov
loop
dec
push
push
dec
int3
cmp
ljmp
lock
rcl
popa
inc
outsl
jg
xchg
ljmp
outsb
mov
mov
fcompl
ret
mov
jle
stos
dec
ljmp
rcrl
enter
test
push
and
les
les
fldz
xchg
xor
ficomps
repz
mov
mov
add
xchg
mov
insb
jnp
pop
sbb
popa
jmp
out
push
or
sub
data16
divb
cmp
nop
aam
pop
mov
add
mov
fmull
popf
out
and
sub
add
push
sahf
pminub
and
test
jg
xchg
inc
daa
jno
add
sti
int3
mov
cltd
stos
sarb
call
loopne
sarl
rolb
mov
ljmp
mov
add
xchg
mov
out
das
inc
mov
fdiv
mov
sbb
push
pop
and
int3
mov
xchg
notb
fisubrs
add
scas
mov
imul
fistpl
push
out
pop
sbb
shrb
in
test
pop
ds
fdiv
mov
cld
mov
addl
sbb
sbb
ret
push
add
push
pop
seto
push
push
jg
repz
jecxz
lock
jns
adc
fwait
repnz
fsubr
mov
rcrb
xchg
pop
out
loope
mov
rcr
sub
nop
clc
push
mov
sub
popf
imul
imul
mov
cmp
mov
into
push
sarb
rclb
xor
cld
push
fsub
mov
mov
and
sahf
rclb
pop
mov
out
xchg
fidivrl
pop
xchg
add
fidivrs
test
mov
xchg
enter
mov
aas
shrb
add
loopne
ljmp
mov
xor
mov
or
ljmp
pop
iret
clc
test
cld
aas
adc
sbb
cld
mov
lahf
and
mov
push
sahf
sbbl
sbb
jg
roll
xchg
je
lret
sahf
rclb
mov
mov
repz
aam
push
clc
call
ret
cld
clc
enter
mov
scas
push
shr
ficomps
push
pop
sbb
adc
pop
getsec
pop
and
jbe
sub
push
cmpsl
lock
ret
cwtl
pop
scas
and
inc
cmpsl
lret
or
adc
ret
mov
inc
push
dec
lds
add
mov
movsb
xor
aam
clc
call
xlat
fisubrs
rcrb
pop
push
sbb
push
xor
mov
xor
xor
jp
test
and
cli
xor
mov
in
ds
rcr
pop
mov
sti
movsb
fidivrs
scas
adcl
ja
loop
lret
syscall
lcall
mov
pop
sahf
test
sub
imul
movb
lea
mov
mov
cmp
into
clc
fsubrs
sub
shl
mov
mov
lcall
int
stos
int3
cld
push
cmp
scas
add
sub
into
pop
or
sub
sbb
pop
gs
lcall
aaa
cld
fisubl
out
push
test
add
hlt
repnz
mov
mov
push
sbbb
lock
or
pop
xchg
mov
mov
call
pop
mov
stos
xchg
mov
mov
repnz
icebp
clc
iret
xchg
fs
xchg
outsl
incb
mov
pop
push
leave
jmp
ret
arpl
lret
imul
int
in
add
movb
push
cwtl
daa
repnz
ds
mov
pop
sbb
bound
push
pop
ret
addr16
test
imulb
mov
call
lret
mov
cmp
test
jb
roll
es
cmp
test
das
ja
sti
je
inc
push
js
add
jo
mov
cmp
sub
out
xor
mov
stos
ds
les
loope
pop
sarb
push
bound
pminsw
test
lret
sahf
push
inc
clc
xchg
push
and
sahf
fiadds
mov
mov
in
xor
inc
push
aam
xchg
xchg
add
xchg
or
jecxz
and
jl
inc
sbb
out
ficoms
mov
inc
bnd
lods
icebp
mov
cmp
pushf
pop
xchg
mov
pop
sbb
repz
fisubrs
aam
sbb
and
xor
ficoml
aas
clc
les
push
fcompl
push
fldcw
gs
sahf
lret
lock
xchg
out
repnz
push
in
cmp
push
add
mov
push
sub
lret
rcl
fdivs
mov
adc
inc
ret
wbinvd
inc
mov
out
and
push
add
adc
xor
mov
stc
fsubs
sbb
and
add
out
cmc
xor
pop
pop
mov
xchg
add
lret
cmp
push
rclb
push
out
stos
fdivl
xor
mov
xor
ret
lods
jecxz
sbbb
push
clc
xchg
mov
pop
call
imul
rolb
mov
cmp
mov
jns
fisubrs
repz
fcomps
mov
in
enter
xchg
mov
jge
sahf
rclb
mov
sbb
rclb
jge
pop
int3
int3
dec
mov
xchg
cmp
les
push
idiv
mov
push
rcrb
sub
mov
xchg
daa
sub
fs
fidivl
stos
ljmp
dec
push
pushf
outsl
push
aam
xchg
xchg
test
imul
sbb
pop
mov
loope
pop
hlt
orl
shlb
mov
notb
out
scas
push
push
call
enter
roll
jbe
push
mov
dec
repnz
dec
pop
test
sahf
inc
jmp
and
aam
xor
pop
hlt
shlb
popf
lret
sbb
xor
pop
hlt
push
mov
adc
add
mov
adc
push
push
pop
sbb
mov
mov
mov
mov
repz
ficompl
es
mov
adcb
and
mov
jl,pt
aad
sahf
xor
addb
fwait
je
pop
lcall
jg
movsl
decb
and
jae
add
push
xchg
mov
int3
scas
add
xchg
mov
out
xor
mov
mov
addr16
jnp
setle
mov
ja
push
push
scas
rcrb
into
out
leave
and
and
dec
in
mov
or
enter
into
lahf
add
fsubs
add
push
pop
rorb
lret
and
add
add
mov
push
ficompl
out
and
inc
clc
cwtl
aam
pop
mov
inc
dec
cmp
addr16
lahf
mov
stos
aaa
dec
nop
push
xor
xor
xor
lcall
clc
xchg
cmc
ja
xor
sub
cmp
fmul
stos
int3
cwtl
sub
enter
fists
lret
mov
pushf
xchg
sbb
fisubs
sbb
in
mov
fdecstp
add
jl
mov
call
fidivs
divb
push
out
movsb
add
pop
sub
sahf
cmp
add
mov
pop
mov
adc
ret
xchg
adc
test
push
sub
pop
ficoml
and
push
xchg
sub
cld
mov
sbb
cmp
or
call
dec
mov
movsl
xchg
mov
stos
enter
push
xchg
pop
sahf
out
sub
pushf
sahf
lret
enter
mov
push
ja
call
jns
add
or
lea
or
add
sbb
rcrb
mov
mov
rol
push
or
xchg
aas
mov
mov
push
cmp
clc
and
test
repnz
fidivrl
or
test
fidivrl
inc
jmp
jbe
mov
push
xchg
push
clc
push
mov
ficoml
pop
int
push
int3
cmp
rolb
pop
mov
sub
jns
mov
les
imul
aaa
add
rorb
inc
sbbb
je
lods
mov
insb
push
push
cmp
pop
pop
nop
ret
fcmovbe
push
call
mov
pusha
cld
mov
aaa
ljmp
pop
inc
mov
out
clc
jns
data16
mov
jnp
xchg
pop
mov
mov
sub
lock
fidivl
fstl
cli
push
cmp
call
loopne
adc
xor
enter
repnz
push
aaa
jb
repz
pop
ljmp
imul
cld
adc
mov
or
insb
lret
outsl
pusha
into
mov
cmp
bound
sub
push
mov
push
push
or
insl
sbb
jmp
sbb
fcoml
jge
mov
xchg
xchg
jae
fadds
mov
add
hlt
paddb
mov
mov
jl
rolb
inc
push
rcl
les
shr
jg
xor
mov
jmp
push
repnz
add
cmpsb
xchg
adc
stos
xchg
ror
inc
add
pop
sbb
and
xchg
xchg
add
xor
loope
enterw
clc
movsl
jp
push
test
pop
movsb
out
stc
iret
sarb
clc
loope
rorb
icebp
cmp
push
mov
rorl
or
and
mov
and
push
cmc
jbe
and
and
push
lock
dec
fwait
mov
xchg
aam
sub
fmull
mov
adc
jns
mov
xchg
enter
push
dec
subl
pop
jbe
push
test
dec
xor
push
loope
add
fildl
cvtdq2ps
cmp
into
movb
push
out
inc
addr16
repnz
pop
test
mov
dec
cwtl
incb
sub
leave
or
dec
mov
in
add
sti
bound
dec
test
cmp
pop
int3
fcoms
test
jge
xor
sarb
adc
pop
lods
xchg
inc
dec
mov
mov
or
or
ljmp
cld
fcomip
jns
out
pop
sahf
add
mov
nop
ret
or
fiaddl
pop
cs
mov
les
lock
dec
sub
in
loop
mov
xchg
int3
imul
repnz
push
cwtl
imul
push
cwtl
or
faddl
int3
xchg
rolb
pop
pop
inc
or
or
cmp
addr16
stos
test
sub
mov
dec
jbe
xor
aam
xor
mov
xchg
shlb
rol
movsl
fs
int3
push
fiaddl
mov
push
mov
shl
push
inc
nop
or
subl
mov
push
pand
lret
push
xchg
xor
add
addr16
xor
push
cmp
into
add
cwtl
mov
add
ljmp
es
or
call
bnd
aas
mov
les
push
insb
cltd
adc
pop
mov
adcb
mov
mov
repnz
sbb
mov
mov
fidivs
dec
mov
xchg
int3
inc
xor
ficompl
nop
cmpsb
mov
cwtl
lret
xlat
ljmp
rcr
pop
std
xchg
das
mov
nop
add
sub
loop
scas
int
sahf
inc
sar
mov
fcomp
repz
or
clc
push
mov
mov
data16
fadds
push
adc
scas
push
test
sarb
jle
sets
adc
cmc
inc
into
ret
int3
add
pop
xchg
push
scas
aam
or
xlat
cmp
xchg
rol
and
cmp
repnz
int3
jecxz
sahf
dec
mov
mov
out
inc
mov
hlt
mov
fwait
mov
mov
fisttpl
xor
mov
int
loopne
mov
or
repnz
repnz
aas
loopne
cli
mov
pop
cli
fcoms
cmp
or
arpl
rcrl
mov
ret
lcall
and
dec
pop
stos
and
int3
sahf
ficompl
inc
pop
mov
push
xlat
or
fwait
mov
mov
out
add
rclb
cli
fwait
lret
add
outsl
out
inc
sarl
pushf
stos
push
and
bswap
or
mov
mov
pushf
mov
push
mov
dec
sbb
imul
cmpb
cmpsl
lret
cmp
int3
or
jae
fcmovbe
xor
pushf
jge
int3
lret
mov
cmpsl
cmp
rcr
rol
out
pop
adc
int
pop
lds
les
ja
jnp
and
mov
fwait
mov
imul
mov
popa
mov
sbb
inc
and
xchg
push
ljmp
mov
imul
cmc
mov
mov
repz
mov
aad
dec
add
jnp
push
xchg
rcr
jg
mov
cli
nop
ljmp
icebp
xlat
mov
stos
fisubrl
ret
or
rorb
rclb
dec
pop
pop
sub
xor
push
test
pushf
shlb
inc
fstpt
fsubrp
cs
pop
and
stos
inc
fwait
addr16
xor
repnz
add
add
and
mov
sarb
clc
fmul
add
push
les
mov
pushf
repnz
pop
lret
call
add
sahf
std
sbb
cmc
sahf
lret
cmp
inc
add
mov
loopne
sahf
mov
cwtl
pop
jno
insb
fisttpl
inc
mov
movsb
ret
fcoml
add
mov
jne
les
imul
xor
inc
add
and
test
mov
pop
clc
mov
adc
push
mov
lds
std
xchg
mov
pop
push
call
and
fcmovu
outsb
and
pop
cmpsl
mov
jae
mov
xor
int3
aam
or
jecxz
pusha
fsubrl
fwait
or
dec
ret
lret
push
pop
stos
push
jg
fidivrl
cld
movsl
movsl
push
insl
mov
movsl
sub
pop
add
push
hlt
aam
arpl
popf
and
cwtl
rcrb
push
out
push
mov
push
les
jecxz
test
xchg
pop
pop
out
dec
or
pop
sub
mov
ljmp
dec
jmp
scas
std
js
ret
fsubl
jb
repnz
cmp
xchg
mov
rcrl
sbb
inc
in
test
ljmp
or
jp
push
and
into
add
stos
adc
ljmp
outsl
and
loopne
sub
pop
xor
je
stos
add
push
fisubs
cs
cmp
ljmp
ljmp
clc
dec
call
pop
and
repz
jbe
mov
fistl
ljmp
jmp
mov
cmp
psrld
or
push
insl
and
xchg
add
jo
out
clc
movsl
pop
lahf
xchg
sti
lds
js
pop
cld
push
jle
jns
push
int
jl
test
in
mov
pop
icebp
push
int
adc
mov
mov
clc
out
dec
inc
dec
mov
xchg
jmp
jns
push
mov
jge
icebp
xchg
and
into
add
jae
add
cld
pop
dec
push
mov
sub
nop
cwtl
inc
pop
mov
mov
cld
lcall
add
sahf
xchg
sbb
and
pop
push
rol
pmaxub
repnz
pusha
shrl
call
cmpsl
imul
fdivrs
into
mov
stos
add
mov
and
add
clc
hlt
rorb
rcrb
add
clc
jb
mov
adc
push
jo
cmpsb
mov
jp
repnz
enter
mulb
jns
ret
mov
pop
aam
mov
popa
lret
jbe
fidivrl
mov
pop
xchg
mov
repnz
stos
repnz
push
pop
mov
divb
ja
push
jle
out
or
ficompl
loop
int3
add
xchg
call
dec
gs
fidivrl
cmpsl
enter
xlat
xchg
pop
dec
and
mov
add
stos
sti
push
enter
push
or
xacquire
movsb
push
mov
dec
hlt
xor
int3
test
rorl
xor
fmuls
into
outsb
inc
push
xchg
push
or
pusha
pop
push
jle
stos
mov
mov
or
shrb
sub
mov
stos
into
int3
or
or
mov
imulb
les
push
fisubrl
mov
out
jecxz
jbe
mov
jo
pusha
shl
and
iret
outsb
addr16
xor
sarb
aam
shll
mov
mov
cmpsl
inc
shl
mov
push
clc
inc
pop
les
sbb
cld
enter
sbb
add
mov
pop
fdivr
mov
xchg
pop
cmp
notb
push
cld
insb
iret
mov
xchg
hlt
mov
into
out
out
clc
das
jle
or
mov
inc
mov
mov
or
fdiv
add
xor
test
add
fsubl
push
loope
aam
fiadds
lcall
sub
pushf
call
mov
xchg
aad
out
jecxz
out
xor
cmp
lock
cwtl
in
dec
mov
repnz
clc
xchg
sub
in
pop
add
sub
sub
ficomps
lcall
mov
orl
add
mov
and
fadd
rcl
mov
cmpsl
hlt
add
mov
and
mov
and
and
sbb
les
stos
and
pop
mov
push
repz
jb
shlb
jne
add
sbb
pop
inc
test
pop
jp
push
ljmp
add
js
popf
mov
xchg
ljmp
repnz
pop
pushf
cmp
jp
aam
in
inc
repnz
int3
mov
xchg
jp
test
les
ret
fisubrs
xchg
lahf
mov
push
pop
cmpl
cwtl
pop
cmp
or
pop
sub
iret
inc
sub
jbe
decb
push
xchg
cmp
xchg
add
pop
ret
fimuls
sub
aad
xor
mov
mov
or
lcall
fcompl
mov
insl
xor
mov
dec
xorl
aaa
sbb
add
scas
xor
xchg
call
or
lock
aam
daa
mov
mov
aaa
shl
shrb
push
pop
nop
cld
fsubrp
jns
repz
dec
or
les
rolb
and
ret
stos
mov
jo
rcr
jnp
sbb
aam
xor
xchg
int3
add
aad
jno
test
popa
mov
ljmp
idiv
fadds
out
cld
pop
movsl
div
fistps
adc
ljmp
cwtl
testb
ret
or
sub
jecxz
test
ljmp
cld
push
lods
inc
mov
mov
gs
into
push
enter
sar
fsubl
xchg
mov
test
xchg
call
cmpsb
push
pop
mov
xchg
lcall
mov
add
btc
mov
push
das
test
jg
clc
loopne
push
mov
idivb
insb
lret
xchg
push
rcrb
add
repnz
xor
enter
lcall
test
add
cmp
xchg
hlt
scas
pop
arpl
and
push
scas
in
jno
ror
fidivs
mov
nop
pop
pop
mov
aaa
sub
mov
xchg
les
jmp
ljmp
test
lock
in
test
xor
in
xor
test
jnp
mov
and
fidivl
sub
ljmp
sti
movsl
pop
pop
arpl
mov
xor
hlt
pop
mov
cmp
or
pop
fidivs
mov
pop
aad
and
sbb
repnz
pop
pushf
push
dec
test
mov
add
fsts
mov
or
add
sbb
mov
dec
add
test
xor
jns
adc
lock
cmp
dec
mov
test
nop
or
js
add
aam
or
pop
mov
lret
ficoml
lret
ds
inc
push
mul
mov
mov
mov
jae
ret
sbb
or
fcomp
mov
push
insb
jle
ljmp
push
fdivl
mov
mov
inc
pop
sbb
sbb
stc
mov
enter
ljmp
lret
mov
loop
mov
bswap
out
xor
ret
mov
or
enter
fsubrs
mov
pop
addr16
dec
setl
pop
xchg
mov
repnz
out
jp
and
add
mov
aam
sbb
cld
xor
xchg
fdivs
xor
les
int
lock
cmp
clc
out
add
pop
stos
data16
rol
ret
aam
lret
cwtl
out
pop
push
push
push
push
addr16
fadd
or
rcr
cli
ficomps
out
ret
jbe
xchg
adc
push
sarb
sahf
push
ss
aas
ficomps
inc
movsl
cmp
xor
jge
pop
xchg
mov
cmp
repnz
cmp
js
or
mov
es
outsb
jmp
rolb
ljmp
clc
aam
cmp
mov
xor
in
jns
pop
push
sahf
stos
push
push
ss
ljmp
imul
mov
jecxz
xor
sarb
call
mov
mov
jecxz
adc
test
fcom
push
movsl
das
scas
mov
mov
shlb
fisubrl
inc
pop
add
push
rclb
mov
cwtl
out
aas
leave
xchg
mov
mov
mov
shrb
ret
cwtl
lret
lcall
mov
push
mov
test
into
mov
shrb
sub
aad
mov
repnz
gs
sahf
xor
or
es
ja
adc
and
pop
int3
push
cwtl
out
or
pop
cmp
xchg
mov
fidivrs
push
jp
out
lret
shlb
lock
pop
out
adc
scas
clc
cmpb
push
mov
enter
test
les
pop
mov
mov
fidivs
mov
inc
inc
testb
or
fcoms
mov
add
xchg
pop
mov
nop
aas
or
fadd
mov
dec
or
ss
add
jecxz
and
push
add
add
push
or
xchg
pop
add
shll
mov
imul
mov
repnz
cli
cmpsl
aam
pushf
adc
lods
add
push
mov
ret
dec
pop
scas
jne
mov
and
out
xorb
or
sar
hlt
ss
test
push
icebp
hlt
and
xor
shl
orl
sub
in
mov
das
dec
or
cmp
ss
mov
lock
add
aam
mov
push
xor
add
sub
mov
lods
xchg
movsl
outsb
rorb
call
jo
mov
pop
dec
mov
xlat
hlt
mov
sub
lock
and
cmp
mov
mov
cli
cld
push
cmp
sahf
ljmp
idiv
jmp
mov
stc
mov
fidivl
cmpsb
push
inc
rclb
pop
push
jns
test
mov
ljmp
jbe
xchg
sbb
or
int3
ljmp
push
dec
rcrb
push
enter
and
adc
mov
inc
popa
sahf
or
push
lret
jbe
push
or
ljmp
faddl
mov
fsubrs
scas
test
clc
fistpl
jg
dec
arpl
cld
hlt
fdivrl
push
mov
or
ret
jecxz
xorb
sbb
stos
jmp
jbe
pop
into
dec
or
inc
cld
push
xchg
mov
or
and
pop
pop
test
xor
iret
decb
dec
sub
cld
sbb
mov
xor
add
ficoml
das
fsubl
mov
pop
mov
dec
dec
mov
push
cmp
add
lock
out
mov
hlt
dec
lahf
test
or
jno
cmp
out
int3
in
pop
and
jecxz
jecxz
lock
lea
pop
add
add
pop
xchg
es
inc
inc
out
imul
pop
cmpsb
cmpb
lds
pop
fdivp
call
adc
testb
xor
or
cmp
repnz
lret
xchg
mov
mov
mov
or
imul
jae
enter
sahf
jae
mov
inc
adc
sbb
mov
clc
faddp
test
lock
cmp
xor
push
pop
xchg
or
xchg
xchg
push
lock
mov
cwtl
cmp
clc
push
push
das
addr16
dec
fsubrs
pop
xchg
push
xor
fdivrp
or
int3
mov
sbb
mov
xchg
les
hlt
div
mov
lods
test
mov
lret
jecxz
repnz
sbb
jbe
aam
xor
adc
add
mov
fsubs
call
cmp
mov
mov
jns
fsubr
loope
xchg
jbe
push
and
mov
mov
mov
or
sub
inc
xor
mov
adc
mov
xchg
cmpsl
loop
enter
loopne
gs
and
pop
loope
fcmovnb
mov
jp
or
pop
mov
push
sahf
loopne
jmp
push
fcomps
and
repnz
cmp
pop
mov
in
mov
or
inc
imul
loopne
xchg
push
sti
movsl
push
and
sahf
into
cmp
push
push
xchg
les
ficoml
inc
movsb
inc
push
popf
pop
sbb
dec
push
cld
inc
ss
sub
push
pushf
or
push
or
or
test
xchg
pop
pop
scas
pop
pop
jmp
bnd
rorb
dec
daa
or
dec
push
test
out
enter
add
out
lcall
test
clc
push
scas
lcall
stc
adc
push
aam
pop
std
jb
push
or
out
stos
aaa
cmp
pop
add
xchg
mov
jb
pop
lret
push
xchg
cmpsl
arpl
dec
jecxz
jb
push
pushf
cmp
push
clc
push
mov
mov
mov
inc
fmuls
xchg
fdivrp
call
ds
loope
pop
inc
cld
mov
subb
lret
clc
or
mov
aas
incb
enter
ror
xchg
int3
or
mov
cmpl
clc
and
pop
mov
repnz
add
mov
std
mov
push
pop
dec
xchg
add
mov
mov
dec
icebp
fcmovb
mov
push
pop
xor
outsl
es
out
mov
or
cmp
jne
and
out
stos
dec
rcl
scas
inc
cld
aam
dec
mov
sub
out
into
sbb
rolb
fcoml
call
fcom
stc
repz
pop
pop
add
mov
ljmp
fcmovnu
cli
push
and
into
rolb
scas
mov
pop
stos
dec
cwtl
xor
push
mov
enter
mov
inc
pop
xor
stos
into
sarb
lret
daa
outsb
mov
fmull
pop
xchg
lret
xchg
cmp
clc
jno
fistpl
or
and
mov
js
mov
cld
pop
mov
dec
mov
push
hlt
push
dec
mov
add
cmc
data16
lcall
es
clc
ret
nop
xchg
ficompl
push
pop
sub
je
negl
and
sub
and
shrb
lds
add
into
mov
mov
in
and
out
push
push
fistpll
pop
into
fwait
repz
out
mov
nop
mov
sub
xchg
fsubl
inc
pushf
test
mov
jae
adc
ds
mov
lcall
ljmp
cmpsb
int
xchg
mov
mov
add
test
xor
mov
test
out
nop
lock
pop
add
js
or
sahf
shrb
test
dec
stos
shrb
and
or
jmp
jecxz
aaa
cmp
ret
add
pushf
scas
out
pop
lds
dec
cmc
inc
rorl
dec
pop
dec
pop
xor
push
stos
cld
jae
mov
fcmovnu
ret
adc
repnz
clc
mov
shr
and
lret
fimuls
enter
pop
pop
into
int3
mov
cmp
sahf
rolb
fisttps
and
mov
push
mov
sub
cmp
mov
cwtl
stos
xchg
push
dec
mov
add
push
jb
jb
dec
enter
fdiv
std
lock
mov
cli
adc
std
stc
lcall
test
nop
cli
xchg
call
loope
adc
gs
or
xor
dec
aas
ret
dec
push
test
push
adcb
push
test
cld
out
rol
jecxz
cmpb
mov
enter
sbb
xchg
push
or
test
clc
dec
pop
or
inc
pop
inc
fcmovnbe
jo
lock
sub
fimull
mov
push
mov
std
xchg
pop
push
add
xchg
shlb
mov
mov
mov
sar
negl
xchg
sub
mov
cmp
mov
add
mov
xorl
lcall
jo
push
xchg
in
mov
and
inc
aaa
fcoml
xchg
in
scas
lcall
push
mov
cmp
rcrl
ja
pop
cmp
mov
push
in
bnd
jmp
insb
xchg
add
icebp
in
jnp
psllw
xchg
call
pop
test
test
cld
sbb
aam
nop
xchg
push
mov
fisubrl
rolb
shlb
or
pop
in
or
mov
or
sbb
test
or
adc
xor
mov
add
mov
ljmp
movntps
jns
push
fsubrl
xor
rclb
bound
fcmovbe
mov
cmp
ljmp
mov
or
sub
xchg
jnp
inc
pop
fsubrl
xchg
aam
call
test
sub
ret
loopne
add
sbb
mov
add
es
rorb
mov
sbb
ret
sbb
xor
enter
loopne
jecxz
lcall
push
ret
jno
dec
mov
punpckhbw
lcall
sub
sbb
add
je
std
test
xor
stc
push
imul
mov
faddl
rclb
leave
clc
mov
mov
mov
xor
mov
xchg
push
ljmp
ss
or
mov
into
inc
push
testb
inc
mov
fistl
imul
xor
mov
ficoms
dec
hlt
jle
pop
pusha
cld
loopne
pop
les
stc
pushf
push
scas
imul
cmpsb
cmp
nop
and
xchg
sahf
call
pop
rep
dec
lcall
enter
jmp
mov
fcomps
into
aaa
and
mov
test
or
hlt
and
shl
aas
dec
stos
mov
mov
jmp
lods
mov
inc
pushf
int3
adc
cmp
negb
imul
mov
rorb
movsl
sub
mov
cmp
add
mov
enter
lock
into
push
dec
dec
ret
je
into
cli
lret
and
pop
dec
mov
inc
inc
push
sbb
mov
adc
mov
cld
lret
scas
pusha
hlt
adc
and
and
mov
scas
stc
cltd
mov
sbb
lret
int3
test
test
xor
aas
stos
jbe
xchg
std
push
pxor
or
cmp
mov
sar
clc
clc
xor
sbbb
movsb
ss
push
or
out
mov
and
add
clc
and
mov
dec
out
cmp
cld
call
or
xor
fimuls
enter
pop
mov
cld
out
jge
repz
xchg
call
push
xor
jmp
add
cwtl
mov
xor
mov
mov
xchg
or
mov
divb
adc
xor
shr
pop
sarb
lcall
push
fisubrl
xor
sti
mov
out
scas
loopne
cmp
pop
ret
pushf
pop
out
pushf
xchg
adc
add
mov
push
push
jmp
scas
rcll
repnz
cwtl
push
or
pop
je
lcall
push
enter
jmp
sbb
daa
mov
mov
inc
pop
daa
sub
pop
xchg
aam
adc
dec
push
dec
es
push
aas
pop
into
add
inc
mov
pop
cmp
pop
xchg
out
adc
sub
ficomps
fiaddl
js
jp
mov
or
mov
int3
into
les
pop
ljmp
into
stos
or
push
addr16
fimuls
pop
mov
jbe
jecxz
or
lods
and
pop
into
mov
mov
or
nop
xchg
cli
cmp
mov
les
ljmp
push
or
adc
lea
mov
mov
dec
in
add
adc
andb
bound
sbb
push
adc
jbe
cmpl
fiadds
push
pushf
imul
rcr
adc
jnp,pt
out
aas
add
repnz
push
mov
out
xor
nop
sub
cmp
ret
dec
pop
or
aas
mov
sahf
test
orb
push
pop
jae
scas
pop
ss
pushf
out
faddp
test
pop
rolb
ss
xchg
xchg
ja
mov
fdivl
sbb
dec
push
fcoms
xchg
addr16
test
mov
push
hlt
adc
xchg
and
lea
jmp
mov
ret
bound
shll
mov
sbb
mov
push
movsb
cmp
mov
or
jp
nop
dec
push
add
adc
or
mov
fwait
jle
pop
aad
rorl
ja
sub
inc
pop
add
outsb
sbb
test
imul
aad
popf
mov
xchg
inc
rcr
inc
addb
cmp
idivl
mov
cmpsb
or
aaa
ss
dec
and
stos
sahf
aaa
pop
add
sbb
and
mov
add
rclb
sahf
imul
jecxz
and
or
fisubs
and
out
jmp
xor
shll
fidivs
out
mov
sarl
fmul
and
xchg
out
das
and
lahf
and
xor
push
jno
lods
repz
and
sahf
push
xlat
loope
out
das
and
loop
out
jecxz
and
or
fisubs
and
ficomps
out
imul
fidivs
out
or
adc
lahf
pop
out
lret
xchg
out
das
and
cltd
and
jecxz
and
cmpsb
dec
fs
mov
push
push
xor
mov
cld
add
sub
mov
hlt
xchg
mov
pop
mov
mov
idivb
mov
mov
out
test
mov
fdiv
cmp
or
mov
ficompl
lret
mov
xor
xchg
in
lock
scas
cltd
inc
xchg
pop
sti
repnz
mov
cmpsl
outsl
and
inc
sub
pop
pop
mov
std
sub
or
pop
sahf
out
clc
or
adc
mov
push
in
mov
cwtl
xor
cmp
mov
adc
or
xor
ficoml
scas
dec
mov
rcr
movsb
or
mov
cwtl
enter
pop
ffreep
in
mov
ds
dec
pop
fwait
icebp
adc
pop
or
push
lahf
add
or
sbbl
and
pop
flds
mov
ds
repnz
add
stos
add
adc
xor
or
jp
cwtl
mov
sub
mov
lcall
pop
movsl
ss
sarb
repz
nop
mov
jge
jbe
jmp
mov
ja
repz
adc
or
cwtl
and
mov
dec
mov
gs
rol
push
xchg
pop
mov
out
addr16
aas
ds
repnz
stos
mov
mov
mov
shrb
outsl
rorb
or
push
pop
daa
enter
jae
inc
or
inc
add
lcall
sub
jl
jae
add
subl
or
jp
dec
outsl
mov
jno
lret
inc
lret
mov
adc
inc
pop
cwtl
arpl
mov
jb
cwtl
push
push
push
jns
inc
sarb
shrb
hlt
aas
or
inc
fwait
push
scas
and
repz
dec
rorb
repz
cmpsb
sbb
sub
or
sti
pop
inc
jno
or
lahf
and
pop
xor
inc
test
add
push
std
int
fwait
add
lcall
mov
vhaddpd
mov
jae
add
mov
mov
rcrb
jbe
mulps
xlat
mov
push
and
neg
jle
dec
test
jae
punpcklbw
adc
xchg
and
mov
popa
mov
and
mov
fnsave
and
cmp
int3
ror
cvtps2pd
data16
stc
ljmp
lahf
cwtl
push
enterw
fwait
push
data16
jmp
add
ljmp
fucomip
fstpt
push
push
stos
cmp
or
fwait
sbb
hlt
stc
outsb
pop
mov
shrb
cmp
pushf
mov
repnz
jecxz
push
pop
push
adc
pop
aam
test
shr
sar
pop
pushf
pop
adc
gs
jae
ss
ljmp
rcll
push
push
cld
sbb
mov
movntq
sti
in
mov
test
dec
insb
dec
cld
or
fsubl
pusha
jle
cmp
jl
bound
jp
outsb
add
cwtl
fisubs
push
sbbb
es
add
negb
xchg
fucomp
data16
mov
data16
jp
lds
xchg
mov
xor
fimull
shlb
pushf
mov
pop
mov
sti
pop
xchg
fiaddl
nop
mov
push
xor
adc
push
in
mov
jmp
inc
push
jle
mov
fstps
or
ret
fildl
fisubrl
lret
xor
xor
ss
adc
mov
mov
clc
inc
rorb
sti
pusha
dec
and
mov
sbb
xor
push
mov
test
dec
lret
push
sahf
push
fidivs
repnz
mov
js
call
push
adc
adc
push
adc
call
imul
adc
push
arpl
lock
adc
inc
cmpsb
sahf
pop
adc
adc
pop
popa
iret
adc
push
arpl
repz
test
call
adc
sbbl
pop
test
in
adc
lret
push
cmpsb
mov
out
icebp
pop
mov
js
call
cmpsb
mov
mov
adc
pop
adc
cmpsb
mov
imul
pop
adc
cmpsb
mov
sbb
push
xor
lcall
cli
mov
mov
mov
jo
xor
test
adc
push
pop
lock
mov
pop
cmc
enter
pop
pop
mov
fcoms
leave
push
lock
pop
pop
mov
jg
push
jg
push
jg
xlat
ljmp
jg
ljmp
ds
or
mov
lcall
mov
push
sahf
das
inc
testb
or
fwait
mov
xor
push
hlt
add
jg
push
jg
push
jg
push
jg
push
jg
push
jg
push
jg
push
jg
push
lcall
pop
and
into
mov
js
out
cwtl
into
scas
cwtl
lret
fisubrs
fnstsw
pop
fidivs
addb
dec
sahf
mov
int3
adc
jbe
xchg
sub
sahf
lock
adc
leave
adc
sub
adc
sub
adc
sub
lock
leave
adc
sarb
fimull
movsb
cld
in
imul
pop
test
lea
enter
push
test
mov
repz
dec
ja
pop
mov
pushf
rolb
sub
jb
outsl
sbb
xor
test
iret
fistps
ret
pop
sbb
imul
nop
mov
mov
xor
stos
insl
adc
icebp
scas
es
push
mov
sbb
fisubs
push
mov
ret
popa
lahf
lock
in
push
test
push
int3
push
mov
push
lret
push
push
iret
pop
mov
jge
ja
arpl
test
and
jne
jg
jne
fcmovnbe
mov
sbb
fistps
sbb
pop
xor
pop
test
call
pop
in
jae
push
daa
xchg
scas
andb
xchg
or
jne
pop
push
push
xor
pop
fbstp
icebp
aas
push
cmpsl
xor
inc
maxps
push
dec
push
adc
push
arpl
or
arpl
repz
pushl
repz
cmpl
push
out
mov
int3
lock
orb
aam
fwait
popa
scas
rorb
ja
xor
test
cmpsb
ret
arpl
call
lret
push
arpl
repnz
movl
sbbl
or
sbb
incb
int3
iret
and
mov
loope
aaa
enter
out
jae
pop
sbb
or
das
fmull
es
jno
aas
fcomps
repnz
xchg
mov
daa
cltd
pop
fidivs
mov
pop
mov
jg
or
adc
imul
jo
adc
mov
leave
jp
jo
rclb
cmc
inc
mov
inc
adc
jns
add
outsl
ret
int3
inc
pop
pop
adc
popf
mov
or
add
lods
data16
decl
mov
xchg
icebp
jg
fwait
repnz
imul
fcmovbe
xor
cmp
cmp
sti
lock
cmpb
daa
sub
cwtl
hlt
loop
subb
push
sahf
ret
sub
mov
jp
ret
pop
xor
pushf
sti
movsb
bound
adc
push
push
push
js
pop
pop
push
pop
jo
stos
mov
in
movb
mov
inc
mov
xchg
xor
arpl
je
xorb
lcall
cmp
mov
mov
and
xchg
ljmp
push
sbb
je
push
mov
push
lahf
scas
pop
sub
pop
rorb
and
ret
xrelease
or
jns
adc
je
mov
jmp
pop
cmp
insl
sbb
inc
adc
mov
push
enter
cs
xor
ljmp
loop
push
bound
jo
mov
mov
sbb
pop
shlb
sub
test
sbb
or
jmp
xchg
fsts
jb
adc
loopne
xor
ja
bound
cmp
ja
push
sahf
incb
into
addr16
lret
cmp
lods
shl
mov
jb
xchg
sahf
pop
ficoml
pop
xchg
leave
into
mov
adc
pop
dec
lods
mov
mov
pop
fidivl
out
rcl
cmpsb
mov
push
cltd
cmpsb
mov
stos
clc
cmpsl
xchg
jo
lock
mov
outsb
push
mov
pop
pop
mov
nop
pop
push
and
adc
push
jae
pop
bound
les
pop
xchg
mov
adc
mov
lds
inc
or
lods
xchg
imul
sub
outsl
ret
add
mov
popf
xor
or
mov
mov
and
data16
add
xor
xor
lea
push
lea
xchg
adc
aas
mov
outsb
addr16
sub
pusha
xor
jl
sahf
jle
push
mov
dec
test
sub
scas
mov
mov
pop
out
pop
push
repnz
out
les
pop
cs
pop
sahf
mov
xor
sub
rol
fwait
lret
push
mov
ret
hlt
in
stos
lret
bound
mov
pop
push
sub
stos
arpl
push
pop
sbb
add
sti
loop
out
pop
aam
fimuls
add
lcall
adc
jbe
or
push
cmpsl
scas
mov
pop
cmpsl
push
sarl
mov
pop
mov
jne
mov
ficoms
pop
adcl
loopne
jecxz
mov
pop
movl
cmp
sub
mov
ret
pop
sub
jbe
test
mov
fmul
iret
push
jnp
push
ss
cld
data16
xor
lret
imul
push
add
notl
add
push
xchg
jmp
hlt
pop
push
push
repz
jno
or
mov
repz
sbb
cmp
stos
adc
imul
sbb
jnp
mov
lret
push
icebp
lock
sbb
enter
stos
mov
aam
cmpsl
sub
hlt
xor
lret
pop
push
add
leave
push
push
inc
xchg
xchg
enter
fwait
mov
xor
xchg
fcomps
cmp
call
push
push
ja
outsb
jg
inc
add
fidivrs
scas
test
stos
jb
dec
sbb
push
cmc
mov
leave
and
xchg
and
fdivl
push
call
imul
lret
push
push
mov
push
insb
ficompl
dec
push
cwtl
ss
push
pop
insl
pop
sbb
jle
cmp
stos
cmp
xor
fsubs
je
mov
sbb
push
pop
dec
divl
scas
cli
fsubrl
inc
sbb
push
mov
inc
incl
mov
mov
ja
mov
xchg
xor
sbb
jo
aam
mov
sub
lea
push
cwtl
shlb
sti
cmp
inc
out
sub
adc
push
adc
repnz
out
out
test
push
or
pop
mov
jg
inc
pop
sti
iret
push
arpl
push
fisubrl
adc
xor
sti
lock
lahf
shrl
enter
andb
push
sbb
ja
xor
inc
in
lahf
ds
loop
notl
pop
shlb
inc
out
outsb
sbb
xchg
sub
mov
add
stos
rcrb
fiaddl
jle
popf
ljmp
push
je
iret
push
pop
shl
jbe
jmp
bound
sahf
adc
test
rcr
gs
call
ret
cli
roll
mov
and
push
or
push
outsb
icebp
push
push
rolb
adc
push
inc
test
sbb
iret
ljmp
sbbl
add
outsb
int3
push
fisttps
icebp
pop
ror
push
push
jo
lods
jle
dec
bound
outsl
jg
sub
mov
sahf
movsb
or
arpl
repz
sbb
pop
imull
cmpsb
pop
cli
jmp
xor
mov
mov
add
mov
fcomp
xchg
push
fwait
pop
cmp
cmc
negl
pop
pushl
push
xor
mov
push
hlt
repz
sbb
in
imull
arpl
loopne
outsb
jbe
ds
movsb
pop
sahf
fincstp
out
push
dec
cmp
cltd
sbb
add
xchg
repnz
pop
add
or
rcll
cwtl
and
add
pop
mov
pop
pop
add
clc
xchg
push
ret
cwtl
adc
sbb
sub
sub
iret
xor
push
aas
flds
xor
pop
mov
xlat
xor
rorl
ja
adcb
icebp
leavew
add
addr16
lcall
sahf
adc
or
mov
xchg
xor
push
aaa
mov
scas
sbb
or
adcb
jmp
out
pop
sub
inc
repnz
pop
or
pop
or
cmp
cmpsb
or
fwait
cmpsl
jne
xchg
dec
push
mov
or
push
pushf
sbb
outsb
repnz
ja
cmpsb
pop
push
push
lcall
or
mov
shlb
stos
out
pop
test
aaa
sbbl
mov
dec
push
out
enter
jnp
adc
pop
test
nop
push
shll
out
mov
mov
inc
push
and
fidivs
dec
leave
push
jmp
inc
push
sbb
mov
add
adc
pop
inc
pop
xor
add
pop
dec
out
adc
dec
adc
rorl
in
addr16
push
aas
push
push
std
mov
hlt
sbb
push
out
dec
out
arpl
scas
push
lock
mov
popa
in
or
push
jecxz
in
adc
push
dec
fdivl
sub
pop
push
add
and
xchg
aaa
sub
pop
pop
jp
repnz
jne
mov
mov
je
addb
pop
aas
lahf
sbb
pop
stos
or
and
nop
out
add
addr16
lods
outsl
pop
push
pop
mov
dec
jb
mov
scas
lock
mov
sbb
fldcw
inc
ja
xchg
or
dec
iret
mov
pop
push
add
sub
outsl
cmp
sbb
ljmp
inc
sti
adc
imul
adc
ss
xor
clc
testb
mov
pop
fcomip
sbb
mov
inc
add
push
test
leave
or
enter
or
pop
xchg
fiaddl
push
mov
jg
inc
orb
inc
push
pop
add
add
push
push
adc
push
or
icebp
xchg
mov
cwtl
ds
cli
lock
lds
subl
adc
bound
mov
ret
rclb
movsb
and
cmpsl
decl
push
pop
pop
dec
push
pop
or
les
mov
inc
std
cmp
iret
add
xor
pushf
push
push
mov
or
mov
xor
inc
mull
xchg
std
mov
or
pop
adc
mov
shrb
rorl
sbb
out
jp
bound
outsl
stos
add
das
and
or
lcall
pushf
mov
out
adc
les
mov
push
mov
add
out
inc
out
dec
movsb
dec
adc
jmp
push
fisubrs
push
out
cwtl
pop
inc
scas
outsb
adc
outsb
inc
test
jp
xor
push
xchg
sub
add
dec
outsb
out
cmpsb
xchg
bound
adc
push
pop
inc
or
shlb
pop
mov
movsb
data16
data16
mov
mov
push
mov
inc
les
pushf
add
lods
mov
ret
jge
pop
dec
jb
arpl
adc
add
xchg
subb
ds
sbb
sti
lock
mov
stos
or
jp
test
and
sti
push
out
cmpsb
out
xchg
sbbb
push
rcrl
sahf
inc
call
fisttps
cmpsb
push
cmpsb
add
shrl
test
stos
and
or
cwtl
lahf
mov
pop
idiv
cmp
mov
outsb
jnp
fsubr
lods
cmp
stos
subb
push
jecxz
mov
cmova
or
push
aam
dec
outsb
addr16
or
push
adc
aad
rcll
jnp
sbb
bound
adcb
subb
imul
dec
fcoml
test
xchg
push
adcb
push
ret
insl
scas
repnz
bound
push
or
lods
sbbb
stos
lock
fimuls
adc
pop
add
loopne
push
mov
loop
dec
fbld
loop
xor
ret
lods
dec
movsb
add
scas
xchg
push
push
xlat
mov
repz
stos
lods
es
movsb
int
xchg
icebp
pop
inc
cmpsb
ljmp
lahf
mov
ret
aam
bound
jle
lcall
jg
add
cmpsb
ljmp
cwtl
aaa
movsb
pop
loopne
lock
jg
rcrb
pop
aas
stos
out
jb
sahf
and
push
mov
pop
or
dec
sti
lock
movsb
cmc
repz
enter
cmc
repz
inc
mov
out
in
outsb
loopne
xlat
jmp
or
ja
xlat
add
sbb
pop
add
icebp
imul
aaa
pop
nop
mov
movsb
adc
pop
and
push
fiadds
call
int
cltd
das
lret
call
push
pop
out
pushf
push
mov
sti
int3
hlt
mov
cmp
dec
scas
lods
or
push
inc
out
sbb
xor
xlat
cmp
push
out
jno
push
sar
out
cmc
out
adc
lcall
mov
ret
jbe
dec
call
push
cmpsb
fidivrs
rcll
in
jle
popl
xor
test
push
jmp
jns
int3
sbb
outsb
push
xchg
pop
lret
and
jnp
fmulp
push
popf
add
pop
mov
not
leave
push
push
mov
jns
out
adc
or
lods
out
xor
sbb
push
pop
sbb
dec
test
xor
loopne
enter
jno
outsl
nop
out
pop
mov
and
pushf
xor
in
or
cmp
jb
dec
or
out
pushf
orl
xor
or
stos
insl
cmpsb
dec
xchg
je
lock
mov
jno
inc
push
xor
lods
mov
sbb
and
jnp
push
adc
ud2
cli
mov
mov
push
cmp
push
mov
push
je
cmp
insl
pushf
loopne
cmp
cwtl
hlt
sbb
repz
dec
jbe
xor
fstpt
push
lods
outsb
and
mov
lret
dec
push
push
insb
adc
xor
fmuls
test
pop
lcall
cmp
and
int3
push
mov
push
inc
sbb
mov
jb
mov
jno
ja
lahf
movl
hlt
adc
mov
push
into
mov
loopne
adc
fwait
repnz
mov
lret
inc
inc
rcrb
or
das
xchg
mov
add
cs
stos
inc
test
jne
ficoms
cmp
xor
push
cmp
dec
popa
push
add
hlt
cmc
mov
sbb
add
cmp
aaa
add
clc
cmc
ror
call
lea
ja
jmp
pushf
movl
push
mov
mov
push
pushl
ret
inc
mov
push
cmp
repnz
mov
xor
mov
out
adc
dec
hlt
test
ret
aad
ljmp
mov
ror
adc
aad
aam
push
cmp
sahf
mov
cmp
push
cld
mov
pusha
movl
jmp
mov
xor
loope
faddl
adc
or
sub
out
push
mov
clc
cmp
imul
inc
aad
pop
push
out
adc
jg
lret
jl
and
mov
push
lcall
out
je
nop
bound
add
lahf
inc
insl
fmulp
repz
nop
sahf
xor
dec
xchg
out
aas
rcrb
jae
adc
je
dec
push
cmp
mov
std
leave
cli
fdiv
in
mov
push
or
or
sbb
sub
mov
ss
arpl
mov
rcl
xor
mov
xor
mulb
mov
data16
ret
and
xor
sub
stos
sbb
xor
xchg
jbe
mov
stc
ret
adc
pusha
repz
jns
pusha
int
add
ljmp
xor
and
out
fildl
mov
add
mov
pushf
movl
call
loopne
test
pop
test
sub
sub
or
xor
push
testl
dec
hlt
mov
add
aad
sbb
cmpsl
int3
lret
push
mov
into
or
xorb
sti
cmpsb
dec
add
call
mov
mov
cld
mov
dec
mov
aas
adc
aad
mov
cli
pusha
mov
mov
mov
loop
in
ret
out
xchg
xor
dec
in
loop
loope
pop
mov
int
xor
add
mov
stos
jle
addr16
sarl
mov
aam
sub
inc
fcmovnb
addr16
stos
test
inc
lret
dec
pop
mov
mov
cltd
cmp
inc
sbb
lock
sub
in
or
and
adc
jbe
and
lods
mov
mov
jbe
call
mov
sbbl
push
imul
stc
lods
xchg
in
cwtl
xchg
jecxz
mov
popf
cld
nop
andb
xchg
sbb
sbb
pop
shll
daa
add
pushf
xchg
jle
jae
ror
mov
out
xor
sub
push
xchg
scas
test
insl
adc
and
outsb
cld
mov
push
push
call
dec
bt
ror
pushf
clc
bt
stc
xor
push
lea
call
stc
pushf
cmp
pushf
pusha
pushf
call
sub
pusha
mov
cmc
cmc
cmp
call
pushl
bt
pusha
cmp
push
push
lea
ja
sbb
sar
sub
shrd
add
add
shl
rcr
xor
mov
sar
setnp
mov
clc
cmc
repnz
call
divb
subl
cmpsb
add
dec
test
lock
cmp
push
dec
xchg
out
lods
pusha
cmpsl
dec
xchg
or
test
cmpsb
pop
jns
cltd
sbb
bound
push
jge
and
loope
add
shll
pushf
xchg
sti
hlt
xor
sar
inc
mov
push
xlat
inc
inc
and
lret
or
pop
cltd
adc
push
xchg
pop
mov
lods
fsubp
es
ds
lds
test
mov
pop
out
or
mov
pop
mov
jnp
mov
xor
movsl
jg
cltd
fcompl
mov
mov
movb
aas
inc
cmpsb
nop
stc
shlb
rcll
jns
or
push
lea
pop
dec
xchg
jp
jg
cltd
ds
pop
mov
arpl
lods
pushf
pop
xchg
add
cld
mov
mov
clc
repnz
pushl
pushf
jmp
lea
jne
pushf
sub
aam
pushf
test
mov
pushf
adc
add
adc
mov
call
popf
xchg
hlt
and
push
cmp
fadds
test
leave
mov
subl
lds
call
dec
xchg
mov
mov
fadds
dec
insb
call
fidivs
fisubl
push
aad
inc
sbb
pop
mov
out
mov
shrb
sbb
jns
fdiv
dec
sbb
aaa
nop
movsl
push
and
arpl
es
or
mov
ds
out
sub
xchg
scas
cmpb
and
dec
in
int3
inc
lods
xor
mov
outsl
faddl
icebp
and
dec
mov
call
int
popf
repz
sbb
iret
addr16
sti
out
and
add
test
dec
test
mov
cltd
mov
out
sbb
insb
icebp
call
xchg
mov
outsl
adc
add
or
fcomps
out
mov
xchg
mov
popa
into
mov
and
movsb
cmp
mov
popf
push
ss
jmp
xor
loopne
je
ret
rorl
mov
pusha
mov
or
cld
mov
push
push
call
cmp
test
call
hlt
fs
outsb
push
loop
adc
into
mov
xor
rolb
mov
adc
cwtl
sub
fsub
movsb
lahf
in
pop
mov
loop
fwait
inc
scas
mov
das
inc
mov
adc
ljmp
dec
stc
ret
dec
ja
cmp
int
lahf
loopne
add
arpl
mov
iret
cltd
sbb
add
add
add
add
add
add
test
sbb
scas
lea
add
add
add
mov
sbb
call
jae
inc
mov
sbb
scas
jecxz
mov
in
scas
mov
ja
xor
gs
ljmp
inc
dec
lcall
sbb
xchg
pop
loop
rcrb
push
pop
dec
pop
mov
sti
in
ja
lcall
jbe
shr
imul
and
mov
mov
sbb
dec
push
inc
ja
adc
push
aaa
xlat
filds
add
sarl
jg
inc
mov
stos
push
push
sub
mov
fs
or
fcoml
sbb
scas
push
mov
xor
xchg
adc
adc
fcompl
jp
adc
jmp
in
jl
sbb
orl
mov
inc
jge
xchg
icebp
adc
jbe
jae
pop
jmp
dec
nop
mov
fnstenv
push
and
imul
scas
inc
add
icebp
pop
push
andb
ret
xchg
popf
inc
inc
loopne
in
pop
imul
xor
insb
pop
add
lret
addb
leave
pop
popa
adc
xlat
jmp
mov
ljmp
cmp
outsl
xchg
xchg
or
adc
repz
cmc
rcl
cmp
xor
fimull
pop
xchg
xchg
cmp
in
jns
std
pop
in
ret
popa
int3
adc
int
popa
mov
loope
clc
test
pop
sub
mov
dec
xor
jle
sub
push
pop
inc
mov
dec
fcomps
mov
cmpsl
mov
push
pop
or
pop
xorl
xor
fwait
aaa
jo
in
repz
dec
adc
lcall
sub
dec
or
mov
loope
nop
decb
pop
jae
sub
jo
mov
sub
pop
mov
rcrl
rcrb
scas
mov
jnp
jge
sarl
jle
or
sbb
add
mov
mov
and
mov
test
dec
mov
test
bound
in
icebp
cmp
orb
lret
stos
mov
sub
mov
in
popf
fwait
scas
std
mov
jmp
testb
inc
push
sbb
xchg
sbb
mov
popf
rol
loop
adc
testb
mov
inc
shrb
pop
jge
jae
dec
rorl
sbb
iret
arpl
sub
push
inc
pop
dec
adc
out
push
jns
test
mov
sub
cmp
sub
scas
jae
out
inc
push
bound
push
aam
out
in
adcl
xor
xchg
imul
inc
cwtl
xlat
dec
and
jge
cmp
pop
pop
das
mov
in
fcom
imul
mov
iret
das
test
lods
fs
cmpsb
add
pop
in
aaa
scas
iret
push
mov
mov
push
repz
lods
pop
mov
repz
fs
mov
cmpsl
fucomp
jl
sbb
or
jbe
dec
pop
lods
jl
cmp
rol
push
push
test
inc
lahf
push
jno
lahf
sub
or
pop
push
inc
adcl
mov
es
cltd
jno
arpl
cmpsl
mov
test
mov
jnp
mov
push
loope
aaa
mov
and
mov
cmp
sbb
xor
dec
xorl
cmp
xor
imul
fidivrs
xchg
stos
dec
jbe
and
mov
fcmovnbe
cmp
in
pusha
insl
das
xor
xchg
inc
sbb
mov
xor
cmpsl
test
gs
dec
pop
rolb
out
aad
jl
fldl
movsl
leave
push
sub
mov
adc
dec
pop
sub
cltd
movsb
decb
pop
adc
loope
imull
pop
bnd
fsts
adc
lds
inc
insb
fs
mov
gs
cmc
fs
adc
add
inc
mov
cmp
push
out
sahf
sbb
pop
int3
xchg
cltd
add
outsb
dec
dec
pop
mov
push
and
pop
das
in
and
data16
sbb
mov
xlat
and
rorl
mov
shll
xor
sub
in
ret
xor
fmuls
pop
ss
push
pop
cmp
ss
inc
aam
and
cld
aam
sub
aaa
shr
cmp
mov
inc
or
inc
sbb
out
cmpsl
fildl
push
lea
and
sub
lret
lahf
leave
das
cld
jle
clc
cs
jmp
fcomip
clc
stc
lods
and
out
pop
mov
dec
cs
add
and
xchg
ret
inc
dec
mov
addr16
rcll
mov
cli
or
and
repz
cmp
mov
negl
lds
shll
aaa
mov
test
push
push
into
add
out
jg
push
das
xor
jae
push
adc
loopne
xchg
insb
in
cmp
clc
mov
sub
out
test
je
xchg
mov
jl
into
add
jg
sti
xchg
xor
stos
loope
dec
pusha
mov
in
nop
pop
inc
nop
scas
push
fidivl
js
inc
pop
adc
ret
sbbl
inc
sahf
xor
subb
pop
jno
loopne
leave
mov
fisttpl
push
scas
sbb
in
adc
loop
fildl
inc
jne
repnz
push
in
cwtl
ds
stos
leave
xlat
cld
jno
movsl
jle
cmpsb
mov
bnd
mov
leave
sub
gs
outsl
into
sub
lods
mov
inc
xor
lds
xchg
movsl
jns
nop
lods
hlt
or
sbbl
std
dec
pop
pop
icebp
xchg
cld
mov
jl
inc
jecxz
pushf
add
aad
push
xchg
xor
js
pushf
stos
aaa
dec
outsl
jb
mov
sbb
test
jno
negl
mov
stc
mov
mov
test
xor
push
mov
les
test
sbb
pop
stc
jmp
hlt
ljmp
js
insb
and
stos
int3
mov
jmp
lock
popa
dec
cwtl
mov
or
add
pop
hlt
or
xor
cmc
pop
mov
out
mov
dec
test
cmc
mov
icebp
push
pusha
arpl
stc
jle
fcomps
mov
cmpsl
cmp
adc
dec
bound
repz
movsl
aaa
add
xor
mov
dec
popf
push
test
popf
or
xchg
add
out
dec
aas
jle
xchg
cmp
mov
add
aas
sub
mov
aas
insb
aaa
jmp
test
into
dec
xchg
arpl
stos
loopne
rcrl
sti
xor
int
fs
xchg
pop
test
loop
negb
pop
adc
fadds
rcl
outsb
nop
cmp
clc
imul
dec
or
and
loope
or
xor
loopne
bound
int3
das
or
jae
jmp
rol
repz
test
add
enter
mov
pop
les
orb
push
inc
ja
lea
pop
mull
cmpsb
pop
gs
ror
adc
jl
mov
xchg
jo
test
push
pop
add
fisubrs
ret
loope
jnp
stc
arpl
jns
cwtl
inc
add
in
cmp
ret
pop
std
popf
jp
sti
lea
cmp
push
xor
mov
test
call
imul
int
xchg
sbb
and
dec
cmp
gs
adc
repz
jns
xor
mov
fsub
fstpt
xchg
add
sub
test
fs
cltd
cwtl
les
pop
mov
shl
jp
iret
scas
std
mov
add
aas
sbbb
mov
push
mov
sbb
outsb
cmpsl
clc
adc
sarl
dec
lret
clc
iret
roll
out
jo
or
icebp
fisttpl
pop
rolb
inc
insl
add
mov
push
movsl
mov
outsb
jae
movsl
inc
lods
jne
add
jp
lcall
sbb
out
js
inc
mov
ds
fidivrl
fisubrl
xor
stos
int
sarl
adcb
sub
sbb
sbb
orl
xchg
stos
movsb
cltd
pop
cmp
push
sbb
inc
imul
test
loopne
sbb
pop
js
mov
les
fisubrs
sar
jmp
ss
subl
bnd
aam
and
popa
push
mov
pop
jge
mov
in
sub
mov
push
and
loope
sbb
mov
cmp
mov
cmp
xor
jecxz
sbb
lea
dec
push
push
or
adc
inc
pop
mov
inc
xor
ja
cmp
sub
outsb
divps
aam
decb
push
jne
pop
arpl
jns
inc
int3
mov
mov
add
cmp
hlt
xor
ja
mov
jns
pop
arpl
sub
mov
xchg
repz
jp
in
mov
popa
sbb
das
jecxz
sbb
out
mov
mov
xor
lock
xor
dec
shl
mov
rorb
scas
cwtl
and
nop
sbb
test
jb
jg
mov
std
add
mov
lock
mov
or
cmp
push
je
add
cmp
xchg
mov
aad
push
lahf
cmpb
jl
cwtl
stos
push
scas
cwtl
in
dec
xchg
cmpsb
stos
jle
xchg
movsb
daa
into
mov
push
jg
addr16
aad
sbb
jbe
pop
jmp
rorl
jo,pt
mov
or
jecxz
arpl
pushf
hlt
pop
and
mov
outsl
ljmp
pop
lea
inc
ljmp
jg
inc
mov
clc
sub
jle
into
insl
out
dec
outsl
xchg
push
mov
mov
clc
cmp
dec
ret
mov
js
xchg
jbe,pn
pop
or
clc
leave
rcl
pop
mov
out
xchg
xchg
outsb
cmp
jge
repnz
adc
cli
jg
test
out
dec
addb
mov
mov
or
xchg
mov
xchg
jbe
xchg
ss
cli
jns
xor
lea
lea
sub
sbb
or
shlb
out
movsb
mov
insb
ds
imul
sbbl
scas
push
lcall
mov
dec
pop
leave
cmpsb
adc
dec
mov
adc
pop
popa
pop
cmp
pop
xchg
inc
mov
sbb
mov
adc
push
ret
dec
and
in
cmp
arpl
push
and
jmp
jnp
mov
decb
movsl
sub
mov
push
jmp
jno
sbb
cmpl
lret
push
jg
cmp
mov
jnp
jnp
das
dec
sbb
dec
inc
push
push
cmp
insl
fcmovu
mov
push
loopne
push
popa
in
and
insb
xchg
mov
push
dec
cmp
std
push
add
out
lret
aaa
sahf
jmp
sub
adc
ret
push
enter
pop
mov
lock
sbb
ljmp
loopne
add
add
lea
pusha
mov
movb
lea
pushf
push
call
rol
mov
inc
mov
sub
test
pushf
call
push
jge
stc
dec
push
test
and
aas
cmp
mull
cmp
daa
jb
and
lock
cmpsb
push
cwtl
ret
rorl
xorb
hlt
mov
lret
pop
fcom
stos
add
sbb
inc
ret
movsl
mov
addr16
mov
lea
jne
call
stc
stc
sub
pusha
pushf
bt
pushf
repnz
jmp
lea
jne
add
cwtl
movsbw
jmp
leave
inc
and
inc
push
push
pop
mov
aas
fdivrs
aad
fldcw
adc
adc
push
das
out
push
in
out
cmp
push
jae
jbe
sub
push
cmp
enter
pop
inc
outsl
fs
jmp
out
jg
mov
mov
cmp
mov
outsl
rcrb
std
xchg
or
fcmove
dec
mov
ljmp
test
stc
hlt
call
jb
into
scas
sbbl
cmp
mov
cmpsl
push
leave
cmpsl
adc
dec
cmp
mov
popa
popf
aad
jo
cmp
adc
push
cmp
push
xchg
sub
psubd
mov
enter
fwait
daa
sti
sbb
pop
mov
fcomip
mov
pop
fxch
mov
sahf
nop
fimull
bound
shll
call
adc
and
sti
push
cld
mov
gs
jp
stc
fidivl
inc
mov
shrl
call
sbb
pinsrw
test
loope
or
lock
inc
xor
sub
int3
push
aad
push
pop
mov
movsl
sbb
cmp
inc
lods
inc
mov
pushf
lea
sti
inc
cld
mov
mov
call
ljmp
ret
cs
push
bound
dec
add
or
jmp
add
inc
insb
push
sbb
imul
or
fs
in
or
icebp
vpsubsw
mov
push
stc
and
loope
fisttps
les
xor
insl
sub
push
add
dec
sbb
fwait
sti
in
push
and
mov
scas
sarl
cld
or
add
aas
jg
js
fwait
pushf
xchg
std
icebp
cmp
xor
xchg
cmp
add
out
add
enter
cld
mov
xor
clc
cmc
call
jmp
call
pusha
lea
call
push
adc
pushf
push
jmp
xchg
or
add
faddl
jp
mov
adc
addr16
daa
mov
jg
lods
out
lahf
push
fsubrs
add
je
pop
ja
dec
int
mov
or
pop
cmpb
mov
push
sub
jle
mov
ret
dec
outsb
loop
push
push
mov
jno
call
jmp
mov
out
xchg
pop
dec
jmp
dec
cmp
jl
push
xchg
out
hlt
mov
sbb
cld
mov
mov
mov
movb
pushl
ret
pusha
movl
mov
mov
call
push
xchg
in
popf
inc
dec
add
iret
dec
mov
or
test
mov
mov
dec
push
pop
repz
lods
cmp
insl
aam
icebp
cmpsl
jb
jle
popa
dec
sarb
pop
stc
cmc
paddb
mov
inc
clc
add
cmp
sub
neg
push
and
rcl
lea
test
cmp
bt
test
sub
push
pusha
pushf
test
pushl
popl
push
mov
cmp
pushf
mov
call
mov
jmp
movsbl
jmp
call
pushf
jmp
pusha
mov
mov
lea
je
test
sub
pusha
pushl
stc
cmp
pushf
pushf
lea
ja
cmc
imul
jmp
rcl
bt
mov
pusha
bt
push
cmpb
push
lea
jne
cmc
sub
dec
cmp
mov
mov
stc
mov
xor
add
pusha
call
sub
jbe
jmp
lahf
lds
bound
xchg
insb
rol
pushf
add
sarb
jle
pop
lahf
jo
sub
mov
xlat
inc
sbb
mov
adc
addr16
fwait
in
jno
add
dec
mov
mov
and
xchg
out
aas
inc
xlat
test
icebp
int3
adc
mov
test
mov
jl
fmull
repnz
xchg
icebp
inc
fistpl
rcrb
mov
pop
outsb
iret
xlat
pop
dec
and
inc
xor
pop
jno
xchg
and
pop
scas
cmp
push
mov
fxch
or
pop
cmpsl
daa
or
xor
loop
cs
mov
and
gs
cld
mov
fxch
mov
pop
faddl
sub
cmp
fwait
add
lods
sbb
push
fimuls
movsl
imul
int
adc
pop
adc
in
inc
lret
movsb
mov
push
mov
aam
xor
mov
sbb
push
das
jne
pandn
jge
push
jno
pop
cmp
mov
dec
cmp
cmp
sub
pop
ljmp
inc
iret
mov
sbb
cld
outsb
imul
mov
stos
fisubl
incl
pop
adc
mov
xor
std
sbb
fsts
add
pop
dec
xor
test
in
and
jb,pn
in
lret
or
xor
cmp
icebp
gs
pop
inc
inc
test
xor
aas
decb
pop
insb
mov
mov
add
dec
cld
xlat
out
cld
mov
and
mov
insb
mov
adc
movsb
cmp
or
test
dec
cmp
adc
adc
shrl
std
ss
scas
push
adc
dec
aas
mov
and
inc
push
push
mov
dec
mov
rorb
loop
jae
in
std
adc
pop
jb
mov
inc
push
mov
push
movw
inc
push
lea
jmp
pusha
lea
je
call
lea
ja
jo
imul
cmc
jmp
or
sti
sahf
call
dec
cmc
pop
xor
mov
std
pop
jb
fcmovnb
leave
sbb
jle
lock
jle
adcb
pop
popf
pop
pop
dec
sub
fnsave
mov
push
imul
stc
clc
stc
add
push
lea
jmp
jmp
pusha
movzbw
mov
bswap
pushf
mov
pushf
mov
pushf
movzbw
mov
pop
mov
push
pushf
call
push
lea
jmp
lea
ja
call
mov
fmull
stc
push
sub
je
ret
jl
mov
or
je
ret
fsubrs
xor
fxch
pop
shlb
adcb
jns
fidivs
pop
mov
idivb
pop
xchg
jne
push
mov
mov
xchg
stos
popa
pusha
pop
bound
lcall
pop
push
fisubs
das
and
mov
das
jl
orl
int3
out
dec
dec
inc
test
xor
xor
rcrl
cmp
mov
add
mov
test
loop
jbe
mov
mov
lahf
movzbw
bswap
pushl
popl
cwtl
mov
movzbl
pushl
push
movl
pop
cwtl
lea
movl
movl
lea
jae
pushf
movb
pushl
popl
pusha
movb
pushf
pusha
pushl
ret
mov
repnz
and
jno,pt
aad
cmpsb
add
xor
add
jae
addr16
rcll
cmp
test
push
adc
les
inc
clc
rclb
in
push
fadd
dec
and
pop
pop
push
leave
aam
orb
sub
sbb
movsb
mov
mov
adc
addr16
lods
or
jl
rolb
mov
pop
popa
cld
mov
push
sub
jae
cmc
or
xor
out
jle
mov
in
jb
arpl
orl
div
pop
aad
ds
stos
and
cld
mov
loopne
imul
adc
int
ss
fcmovb
xor
or
shl
xlat
and
mov
cmpsl
fcomip
and
scas
or
fcomip
ret
outsl
xor
cmpsb
cmp
arpl
push
inc
fwait
ss
add
cmp
outsb
lods
or
dec
xchg
icebp
and
fcmovb
adc
mov
jno
mov
mov
test
enter
mov
mov
xor
lea
push
sub
mov
xor
test
imul
inc
cld
mov
pushl
popl
pushf
pushl
ret
je
push
push
lea
je
push
mov
test
cmp
jmp
jmp
mov
setp
movzbw
mov
pushf
bswap
lea
mov
jmp
jae
jmp
movzbl
mov
jmp
bsf
mov
test
pusha
bt
mov
cmpb
jmp
sbb
xchg
fisubrl
inc
mov
mull
sahf
adcb
shll
insl
and
jl,pt
sub
jmp
out
cmp
pop
out
mov
sbb
fstl
loope
nop
addl
dec
add
outsl
dec
mov
inc
fbstp
inc
pop
push
mov
mov
jno
cltd
cmp
push
sbb
cld
mov
fsubs
stc
push
call
pusha
inc
xor
and
mov
cld
mov
lea
je
pushf
cmc
movw
bt
cmp
pushl
pushf
push
lea
je
pusha
cmp
mov
push
lea
je
pushf
push
pusha
lea
jmp
shr
rcr
add
jne
in
daa
sbb
pop
inc
cmpsl
sbb
les
ds
loope
xor
push
pusha
mov
dec
ret
or
sbb
xor
and
cld
xor
xchg
or
add
in
cmp
cld
mov
sbb
faddl
popa
repz
mov
sub
push
mov
push
faddp
jmp
pop
fxam
and
xor
std
out
fmulp
ret
daa
push
cltd
xlat
test
stc
loop
add
xchg
out
ds
aas
mov
shll
cmp
inc
dec
cmpsl
sub
add
sbb
movl
enter
adc
add
cmpsl
jns
add
arpl
hlt
call
cmp
mov
add
pusha
pushf
pushf
lea
jmp
jae
push
insb
mov
mov
xchg
and
out
dec
aaa
xchg
aaa
scas
in
iret
sbb
mov
xor
out
cwtl
bound
cmp
pop
xor
mov
pop
movsl
and
jnp
cwtl
jmp
cltd
dec
ss
xchg
ret
xchg
adc
into
push
jo
stos
dec
xor
push
pop
adc
add
sub
jno
popf
mov
or
lds
cld
mov
outsb
cmc
push
push
push
fmull
loop
clc
lret
mov
push
out
mov
bound
mov
loope
mov
sub
add
sub
xchg
shrb
call
fisubrl
insb
xchg
sbb
jge
inc
adc
lahf
xchg
loopne
jecxz
popf
popf
jae
testb
fsubl
jge
push
out
mov
insb
lods
or
std
add
xchg
fcomi
adcb
stos
pushf
test
sub
inc
repnz
fmull
cmp
and
iret
push
cld
mov
mov
push
movl
pushf
mov
pushl
pusha
pushl
ret
call
pushf
call
mov
xchg
push
cwtl
pushl
pop
movl
pushf
lea
jmp
fiaddl
inc
pop
fcoml
mov
xor
mov
xchg
addl
out
pop
and
arpl
call
inc
xchg
xchg
xchg
or
std
lods
icebp
sbb
sub
outsl
add
mov
cmp
xor
lock
jl
pop
jo
inc
push
insl
sbb
jnp
outsl
repnz
pop
iret
adc
cmp
xor
cmp
jnp
cs
xlat
or
dec
mov
cmp
jnp
shl
cld
mov
cli
sub
mov
fsubrs
mov
dec
inc
mov
cmp
mov
push
sub
nop
rolb
sarl
mulb
xchg
and
or
lcall
test
int
xor
out
shl
imul
inc
pushf
xor
clc
and
push
push
inc
mov
cmp
cmp
and
fs
jbe
in
push
inc
out
dec
dec
bound
inc
jb
das
add
mov
xchg
push
push
sbb
stos
subb
pop
or
bound
inc
xchg
fwait
pop
test
rcr
imul
pop
aaa
loope
std
inc
data16
xor
mov
aam
rcrl
pop
push
jae
mov
lods
dec
xor
jnp
push
push
inc
mov
mov
xlat
sbb
lods
in
dec
cltd
pop
aas
dec
arpl
and
mov
jns
shll
mov
sbb
mov
loopne
pop
mov
mov
sub
jle
aaa
cmp
mov
sub
and
inc
jno
adc
inc
or
nop
pop
jns
add
push
cld
outsb
mov
and
xor
or
mov
lds
imul
ret
pop
sbb
pop
mov
add
jge
pop
jo
sbb
cli
faddl
xor
push
adc
fnstenv
sti
push
in
in
aas
aaa
xor
aaa
jp
xlat
push
sub
sbb
xchg
jns
ss
popf
cmp
mov
push
into
pop
adc
mov
xchg
xor
mov
xchg
test
push
add
push
xor
and
mov
xchg
mov
ret
aad
xchg
pop
adc
jae
stos
scas
mov
ret
push
lods
pop
nop
lods
in
stos
inc
cltd
pop
jne
pop
adc
out
pop
dec
dec
inc
xor
xchg
bt
xor
movw
push
movb
lea
ja
inc
cmc
pushf
neg
clc
lea
je
pushf
pusha
xor
stc
push
ror
cmc
cmp
lahf
pop
movzbl
call
call
add
pop
add
addb
add
dec
fstps
add
add
add
out
add
test
add
in
add
int3
sbb
mov
add
add
test
cmp
add
push
clc
mov
test
stc
stc
call
pop
mov
jo
mov
mov
andb
or
pushl
fwait
out
leave
hlt
mov
push
and
test
dec
shlb
xor
popf
pop
xorb
into
cld
mov
mov
bt
call
call
inc
push
jmp
pushf
pusha
cmp
movw
mov
pushl
pushf
lea
jbe
movzbw
or
neg
sub
pushf
mov
add
or
mov
shl
add
neg
cmc
shr
shl
clc
sar
mov
test
shl
add
not
mov
pusha
push
pushl
call
shrb
mov
lcall
fdivs
xchg
stos
sahf
in
adc
dec
hlt
stc
sbb
jns
cmc
enter
les
das
sub
test
xchg
arpl
stos
sub
pop
shll
and
push
je
inc
lcall
adc
push
adc
and
mov
pusha
clc
pushf
add
call
int
sub
xor
jns
pop
inc
sub
push
test
outsb
mov
loopne
hlt
cmpsl
clc
out
testb
ror
adc
or
andb
fmul
test
push
fldl
add
negl
push
ret
mov
jg
cld
mov
movl
pushf
call
cmc
bt
add
pusha
lea
jmp
pusha
push
movl
lea
jne
pushf
sar
clc
xor
mov
pushf
jmp
push
movw
mov
movb
call
push
das
lea
loope
addr16
cmp
mov
push
lahf
xchg
rol
stc
or
dec
push
jg
outsl
sti
cmp
gs
mov
call
mov
add
mov
push
testl
mov
inc
dec
cmovle
ret
add
jle
adc
ds
pop
arpl
dec
scas
out
adc
fnstenv
xor
pop
mov
jmp
mov
jle
jmp
mov
lods
cmp
lods
adc
mov
cmc
mov
fwait
cmp
and
mov
repz
cmpsl
call
pop
or
dec
jmp
inc
fildll
lods
repnz
bound
lret
repnz
rorl
push
xor
or
xchg
mov
or
iret
stos
mov
sbb
sti
pop
cld
mov
push
or
mov
jmp
jno
pushf
xor
cmp
int
pop
xor
nop
sub
cmp
add
call
call
add
add
fs
dec
xchg
add
sub
movsb
xchg
scas
mov
call
pop
lret
xor
sbbl
xor
test
cli
jmp
mov
stc
movsbl
movsbl
add
sub
adc
rcl
cmp
rcl
mov
jmp
push
movb
movb
movl
push
lea
jmp
in
call
pushf
or
test
insl
pop
inc
sub
adc
aaa
dec
inc
mov
insb
mov
inc
ja
cmp
out
inc
mov
pop
cmp
std
sub
fists
loope
es
sti
xorl
cld
adc
movsb
das
iret
mov
inc
das
mov
cltd
add
js
fmulp
adc
stos
mov
lea
pop
int
adc
repz
cld
mov
pusha
ror
pusha
bt
pushl
jmp
movb
push
lea
call
push
push
pushf
call
cmc
imul
test
cmp
cmp
add
pusha
pushl
mov
lea
jmp
clc
ror
bt
pushf
pushf
cmp
movsbw
movzbw
lahf
lea
call
pusha
cmc
clc
mov
repnz
pusha
lea
jne
mov
lea
sets
movb
cwtl
movzbl
seta
push
mov
bswap
lahf
lea
push
call
lea
jb
jne
pusha
bsf
cmc
mov
call
movl
call
mov
pushl
mov
push
pusha
pushl
popl
push
bswap
lahf
mov
lahf
pushf
movl
push
pushf
pop
lea
call
pushf
lea
jne
adc
sub
bt
mov
pushf
push
mov
xor
add
dec
add
xor
xor
mov
cmc
cmc
test
push
lea
je
pushf
sub
pusha
stc
cmp
push
pushf
pushf
jmp
mov
out
paddusb
dec
pop
mov
sbb
pop
sarl
out
cs
fistps
cmpsb
sub
shll
repnz
je
rol
mov
sbb
xlat
fsubs
dec
iret
outsb
mov
cmc
decb
mov
dec
stc
arpl
mov
mov
cmp
cmc
cmp
movsb
std
cltd
mov
and
xchg
sbb
sub
xchg
mov
ror
mov
jns
mov
popa
loope
mov
ds
scas
mov
mov
stc
out
cld
mov
push
pusha
lea
jne
xor
clc
call
call
lea
jae
bswap
setle
movb
call
call
cmp
lock
pop
test
fidivrs
cmp
fwait
and
sub
cmp
dec
hlt
movsl
inc
mov
lods
ret
aad
int
cmp
nop
and
shr
cmp
xor
pop
gs
das
loope
iret
rol
mov
sub
dec
loop
mov
pushf
lea
jo
pusha
movl
pusha
movb
movl
pushf
lea
jmp
mov
mov
push
movw
mov
mov
pushl
ret
int3
pop
int
imul
pop
inc
scas
nop
repz
movsb
xchg
notb
inc
ret
push
push
lods
das
daa
mov
nop
mov
cmp
scas
jne
in
push
test
dec
icebp
push
push
enter
adc
sbb
push
push
lods
cmp
mov
icebp
dec
jl
daa
pop
adc
cld
mov
jmp
push
pushf
jmp
out
push
push
out
push
push
ret
jo
mov
stc
fstpt
fstps
pusha
es
lcall
aam
or
ja
xchg
inc
inc
call
push
push
mov
jmp
sti
or
leave
add
xchg
xorl
mov
fimuls
test
sbb
clc
inc
lahf
lock
leave
cwtl
in
or
scas
push
ss
lods
mov
loop
out
add
aam
push
jnp,pn
out
push
cld
es
mov
mov
pop
xchg
jge
push
int3
lahf
xchg
call
inc
and
mov
push
pop
push
ror
je
jecxz
push
sbb
dec
fcoms
test
cmc
sarb
push
push
mov
inc
add
ljmp
mov
dec
push
mov
xorb
sub
lahf
repz
push
jmp
cltd
sub
cmp
enter
jl
lahf
ds
inc
outsl
les
cmp
dec
mov
cs
movsb
clc
aaa
jnp
data16
cmp
test
or
push
add
lret
popf
jmp
xchg
fnstsw
mov
cmpb
outsb
call
mov
sub
cld
insl
pop
rolb
mov
sub
adc
inc
inc
mov
adc
jecxz
popf
adc
out
outsl
mov
aad
push
jmp
cmp
add
and
std
loopne
and
inc
xor
lds
pop
daa
imul
scas
and
or
add
dec
add
pusha
outsb
inc
nop
gs
jns
mov
hlt
push
sti
sbb
xor
lret
cmp
insb
add
mov
dec
jecxz
jns
jo
jmp
lods
push
daa
sbb
lds
jns
scas
and
cmp
ds
fbld
std
inc
mov
sbb
mov
and
jnp
mov
mov
inc
repnz
pop
mov
push
popf
or
cmp
test
std
inc
fmulp
jnp
loop
mov
repnz
ret
les
mov
pop
xor
scas
and
or
dec
scas
divb
cmp
mov
std
inc
sub
or
push
mov
cld
mov
pushf
movb
mov
mov
pushf
lea
jmp
call
mov
mov
pushf
pushf
lea
jmp
mov
pushl
push
mov
movb
pushl
ret
push
lea
jne
pusha
movb
setbe
pusha
pop
mov
mov
movzbw
lea
movb
jmp
sbb
setge
rcr
movsbw
mov
clc
test
cmpb
call
pop
movzbw
cwtl
mov
pusha
lea
jb
movsbl
lea
call
pusha
pusha
push
pushl
movl
pushl
movl
pushf
pushl
lea
jmp
cltd
adc
test
jb
inc
inc
sbb
fwait
add
mov
inc
test
in
hlt
loope
jp
mov
cmpsl
leave
adc
lahf
outsb
pop
test
jne
pop
push
or
cs
loopne
cmp
jecxz
jmp
push
push
inc
mov
and
cld
mov
xor
neg
bsr
dec
mov
pushf
pusha
cmpb
call
mov
pushf
push
test
pushf
lea
je
call
pusha
cmp
pushf
pushf
jmp
bt
mov
xor
movw
movb
push
call
jmp
pusha
mov
jmp
clc
sbb
test
neg
mov
pusha
call
cwtl
or
clc
sbb
aaa
cs
ret
adc
inc
push
subl
lock
out
nop
int
mov
push
mov
push
ss
in
int
das
sub
sbb
sysret
iret
mov
imul
or
jnp
add
mov
mov
pushf
pushl
push
pushl
ret
lea
jb
push
cmc
cmp
pushf
push
lea
jae
shld
mov
push
add
mov
movzbw
adc
xadd
btc
mov
bswap
stc
clc
inc
mov
bt
stc
mov
xor
stc
pusha
repnz
movl
push
call
pushf
lea
jne
pushf
pushf
jmp
and
push
adc
push
cs
in
mov
xor
lcall
rorb
mov
jecxz
push
xor
adc
xchg
daa
mov
rorb
sub
pop
dec
sbb
mov
sarb
into
xor
imul
adc
mov
mov
in
mov
or
and
and
mov
icebp
jg
and
push
adc
js
mov
pusha
mov
mov
icebp
xor
mov
sub
dec
mov
xor
mov
pop
daa
cmpsl
pop
insl
xor
adc
jbe
and
pop
pusha
and
mov
mov
push
ja
sub
push
adc
mov
mov
lahf
int
sub
push
adc
mov
mov
fsubs
xlat
mov
adc
lods
sub
sti
cmp
jg
sub
mov
fmull
sti
mov
adc
xlat
sub
or
mov
adc
std
sub
fwait
in
mov
mov
pop
lods
stos
push
adc
dec
daa
mov
adc
in
mov
cmpb
into
sub
fwait
stc
mov
adc
sub
and
outsl
test
nop
subl
push
adc
arpl
mov
lods
mov
mov
xchg
and
or
mov
adc
insb
sub
adc
xor
and
mov
adc
mov
and
imul
and
in
and
es
and
sbb
insl
inc
das
and
mov
mov
mov
and
mov
adc
push
and
or
rorb
sti
adc
faddl
inc
shrl
adc
out
cmpsl
pop
pushf
adc
test
pop
jle
imul
cmc
and
lock
stc
adc
pusha
inc
mov
notb
loop
xor
push
sub
sub
fwait
testl
pop
test
rclb
sarb
frstor
pop
dec
into
push
shlb
cmp
shlb
pop
pop
dec
dec
xor
lds
aas
int
cwtl
stos
int
xchg
mov
jp
arpl
scas
adc
lds
rcrl
test
push
ss
cmp
fstl
jb
jae
xor
dec
test
fsubrl
jmp
lea
xchg
mov
mov
test
gs
subl
cmp
pop
adc
in
mov
popa
cmpsb
std
das
mov
movl
lea
hlt
jae
lods
dec
xor
mov
cmpsb
rcll
scas
cmc
and
sbb
lods
cmp
and
repz
mov
lods
leave
cmp
or
stc
pop
lcall
stos
cs
std
mov
dec
in
dec
xor
testb
loope
stos
lds
test
xchg
scas
mov
aas
mov
mov
sar
mov
stos
push
lea
jmp
cmc
clc
cmp
pushf
jmp
pusha
mov
push
mov
jmp
xchg
or
pushf
lret
adc
xchg
or
fnstsw
aaa
sbb
pop
or
xor
add
cmp
mov
push
mov
hlt
push
jno
push
cmp
or
and
adc
rcrb
lcall
adc
xor
jne,pn
mov
test
stc
xchg
shll
dec
and
xlat
repz
cmp
out
jp
or
sub
jmp
je
loope
mov
xchg
call
mov
jnp
test
in
dec
mov
push
addr16
and
jb
mov
dec
dec
adc
out
or
xchg
in
jg
xchg
cmp
and
mov
fmull
jg
lods
imul
sbb
adc
outsl
clc
mov
rcll
cmp
mov
mov
and
in
xor
mov
js
and
mov
cmpsb
mov
jg
and
inc
ret
mov
mov
cld
mov
fisubl
aam
xchg
xchg
jle
add
fldl
and
cs
std
xchg
lods
mov
add
xlat
pop
test
pop
mov
mov
call
inc
jae
or
xor
push
mov
scas
xor
gs
mov
mov
sbb
pop
or
jmp
sub
dec
dec
shrb
cld
mov
lahf
mov
into
sbb
pusha
loopne
and
dec
lods
sbb
cmp
and
arpl
and
pop
test
out
insb
mov
sar
mov
lcall
mov
mov
fwait
out
nop
idivl
push
adc
sti
punpcklbw
pop
fists
mov
stos
out
adc
push
les
lds
xor
mov
out
pop
fxch
dec
sar
mov
aad
stos
aas
pop
and
pop
xchg
jg
lods
adc
into
mov
dec
ret
imul
and
fstps
jmp
dec
cmp
scas
sbb
in
and
imul
cli
xlat
or
imul
sub
xchg
mov
mov
push
sbb
fadd
mov
jp
and
pushf
inc
sub
sti
data16
lret
dec
push
mov
add
in
idivl
repnz
cmpsl
jmp
or
xor
fcmovnb
movl
int3
pop
xchg
daa
pop
cltd
mulb
sbb
mov
cli
jns
pop
and
cs
mov
es
arpl
inc
xor
adc
out
sbb
aad
pop
or
lea
and
ds
mov
push
dec
push
mov
push
mov
imul
rcll
adc
mov
dec
push
nop
ret
rcr
test
push
xchg
push
jmp
pop
mov
sahf
push
insb
or
pushf
stos
xor
add
xor
test
xchg
or
pusha
fcmovnbe
mov
xchg
mov
repnz
jne
jmp
lea
ja
cmc
stc
jmp
lea
je
pushf
mov
adc
push
pusha
pushl
lea
jmp
bswap
mov
lahf
mov
jle
lea
push
pushl
pushf
pushf
movl
jmp
call
mov
pushl
movl
movb
mov
movl
push
pushf
lea
jmp
pushl
pushl
popl
movb
push
push
pusha
pushl
ret
js
shl
add
lret
daa
adc
mov
add
daa
adc
hlt
hlt
mov
shlb
ret
aad
ret
in
adc
stc
mov
lret
fs
leave
out
pushf
mov
add
cmp
fpatan
pop
xlat
dec
aaa
daa
popf
or
lods
cld
mov
pushf
call
call
mov
push
pushl
pushl
pushl
ret
pushf
lea
je
jmp
jne
gs
xor
fs
insb
add
test
adc
add
lds
xor
xadd
rol
mov
rol
mov
push
shr
lea
cmc
rcr
rcr
mov
bt
or
pusha
lea
jg
je
xchg
movsbl
add
test
rol
clc
shr
sub
bswap
bsf
neg
add
shr
rcr
bsf
bts
btr
mov
rcl
add
adc
stc
movzbw
add
inc
btr
mov
bt
push
shr
cmp
mov
cmp
push
pushl
pusha
jmp
lea
jne
bsr
neg
xor
mov
shl
shr
sub
cmp
xor
bsr
mov
test
cmc
stc
sub
cmc
cmc
cmp
pushf
pushl
popl
bt
clc
push
movb
cmp
pushl
pusha
pushf
call
bt
cmc
pusha
imul
cmc
cmc
bt
call
lods
bt
pushf
pushf
ror
pushf
jmp
push
rol
shrd
mov
pusha
clc
cmpb
pusha
jmp
je
vpsubq
mov
mov
add
sbb
or
pop
in
popf
je
jge
inc
mov
jbe
sbbb
add
add
insb
sbb
add
fs
pop
popa
popf
movsl
lcall
sbb
popa
movsb
leave
jmp
repnz
jbe
inc
leave
loope
add
xchg
in
sub
mov
mov
xor
fucomi
xchg
sub
aad
iret
mov
jo
sbb
sub
insb
push
out
inc
xchg
scas
int3
xor
mov
push
stc
ja
pop
jns
mov
lea
sub
bswap
call
add
call
clc
sub
bt
push
push
stc
pushl
popl
bt
cmp
push
lea
ja
bt
sub
bswap
sbb
bsr
bts
add
or
neg
pushf
sub
mov
shl
sar
sar
sbb
mov
jmp
cmp
adcl
gs
dec
cmc
dec
xchg
pop
jno
loop
inc
xor
arpl
pop
sarl
pusha
stos
inc
pushf
push
sbb
lret
sti
loopne
sbb
inc
sub
cmp
mov
iret
repz
mov
push
ret
jb
and
inc
pushf
push
jl
loope
lret
sti
loopne
sbb
push
mov
adc
fistpll
or
push
repnz
cmp
rclb
insb
fcomp
inc
cmp
xor
xchg
push
test
fisubs
rclb
lods
sub
pop
xchg
fsubs
sub
mov
mov
xchg
fdivrp
mov
fimuls
negl
and
cmovo
add
out
fstl
pop
mov
push
jno
or
xchg
sub
adc
mov
inc
inc
setne
lea
push
in
dec
pop
test
fisttps
inc
es
movsb
cli
lea
sub
or
mov
sarl
sub
mov
inc
mov
es
mov
call
sbb
sti
mov
and
mov
ljmp
mov
hlt
sarl
sbb
or
rclb
jnp
loope
rorb
xchg
scas
int
mov
cmpsb
add
testb
add
cld
mov
lea
jae
call
mov
lea
je
pushf
movw
push
movb
lea
jmp
jmp
mov
setge
mov
lea
push
push
pushf
call
pushf
call
mov
push
pushf
pushf
lea
jmp
popa
inc
xor
lahf
inc
adc
xchg
roll
sub
mov
mov
out
movsl
jae
cli
repnz
test
shll
mov
mov
jp
cmp
fs
xor
or
out
fldcw
adc
cmpsb
nop
and
inc
int
pop
push
lcall
inc
cltd
jp
adc
sub
cs
and
ficomps
fmulp
insl
idivl
das
in
scas
cli
sub
sbb
xchg
rorl
repnz
gs
jns
aam
sbb
jecxz
jno
push
loop
leave
adc
and
je
mov
inc
jno
xchg
test
leave
mov
sub
jp
mov
bound
sbb
aas
fidivrs
sub
pop
cwtl
hlt
and
int3
cmp
mov
and
add
cld
mov
movl
call
fcompp
rolb
test
and
push
ds
pop
dec
mov
popa
sahf
dec
pushl
sbb
fimuls
enter
pop
jns
mov
filds
int
jg
sahf
jns
inc
xchg
loopne
push
cmp
pop
out
popa
pop
inc
mov
xchg
mov
ja
push
jp
mov
push
cmpb
pushl
lea
jne
shl
cmc
sub
rcl
mov
call
pushf
mov
pushf
pushf
pushf
pushf
lea
jmp
cmp
call
jmp
pushl
push
lea
call
pushf
lea
jne
pushf
call
mov
fmull
lcall
xor
mov
fwait
jnp
dec
xor
mov
fs
fwait
and
or
and
jle
movlps
sbb
imul
outsl
dec
push
push
pop
int3
adc
sub
ficompl
xchg
dec
into
mov
add
adc
sub
mov
mov
xchg
scas
enter
packssdw
stc
stc
pop
fs
mov
lea
ret
mov
stc
or
test
gs
jmp
xor
or
pop
cmp
cmp
not
sbb
add
rorl
data16
shrb
pop
sbbl
lcall
dec
ljmp
jns
adc
mov
xchg
xchg
ja
icebp
imul
lods
mov
mov
movb
lea
jne
jbe
pushfw
setnp
mov
pushf
ror
pusha
dec
pushf
cmc
cmc
ror
push
test
call
xor
mov
leave
dec
ret
jno
mov
xor
mov
out
fisttpl
mov
imul
cmp
stos
pop
das
rcrl
addb
ljmp
cli
add
pushf
pushf
lea
jmp
call
cmc
bt
repnz
pushl
pusha
lea
jne
pushf
stc
sar
not
mov
sbb
sub
xor
rol
movsbw
lea
cmc
stc
sub
stc
stc
pushl
popl
clc
cmp
jmp
xor
pusha
pushf
repnz
pushf
jmp
test
pushl
jmp
lea
jae
stc
bt
cmp
jmp
lret
xor
dec
stos
mov
rol
sub
mov
cmp
clc
out
lahf
mov
inc
cld
inc
pop
outsb
add
cs
sub
fdivrl
sub
aas
arpl
leave
inc
insl
add
inc
dec
mov
cmp
or
pusha
popf
fcmovnb
ficompl
xor
mov
sbb
in
cmp
mov
adc
xchg
cli
movsl
popf
or
dec
inc
ret
mov
mov
jno
ljmp
adc
fadd
mov
mov
and
and
xchg
xchg
movb
push
push
lea
jmp
inc
movb
setno
lea
add
shr
clc
rcl
mov
neg
jmp
push
movb
movl
push
pushf
push
mov
mov
pushl
ret
pusha
movl
lea
jbe
pusha
push
movl
push
mov
lea
jmp
shrb
repnz
push
adc
cmp
mov
push
movsb
xchg
cmp
add
ds
pop
mov
les
sub
mov
jg
jae
and
xchg
data16
add
int
fst
repnz
in
adc
sbb
mov
mov
aad
loop
insl
xchg
push
or
and
insb
lods
add
bound
out
sub
inc
nop
in
cmp
inc
mov
add
inc
sub
mov
stc
jae
mov
loopne
xlat
or
xchg
iret
sub
cltd
adc
ror
jb
rorb
mov
add
mov
out
push
dec
frndint
mov
sarb
xchg
lods
mov
xor
fisttpll
inc
xchg
js
push
out
add
push
or
mov
dec
xchg
mov
sbb
mov
int
or
mov
pop
jno
pop
leave
mov
add
cmp
idivl
dec
cmc
jl
fmull
or
inc
cltd
inc
bound
dec
push
add
xchg
adc
mov
stos
xor
add
mov
mov
lea
ret
out
push
subb
push
repz
mov
ss
fldenv
lods
and
mov
int3
sbb
stos
lods
jae
ja
out
xor
inc
loop
xchg
lock
hlt
jnp,pt
sbb
sub
int
fmulp
leave
mov
test
adc
jo
xor
lahf
mov
pusha
out
adc
js
std
outsl
add
mov
push
lea
jne
lea
movb
lahf
call
inc
fstpt
mov
addr16
ret
loope
stos
inc
lods
clc
ljmp
shlb
xchg
xor
adc
pop
inc
fst
cmp
pushf
mov
mov
xor
mov
leave
push
dec
shlb
jb
mov
push
rcrl
dec
xchg
clc
aaa
jnp
stc
cmp
mov
push
out
inc
and
mov
and
and
call
scas
sbb
inc
pushf
adc
mov
out
xor
mov
in
bound
out
call
cld
mov
pusha
lea
je
movzbw
mov
push
mov
cwtl
lea
lea
jmp
pushf
call
lea
ja
jmp
pushf
add
pusha
pushf
pushf
lea
jmp
lea
jne
jmp
mov
icebp
add
jl
dec
and
negl
xor
xchg
cmp
mov
jecxz
xchg
fnstsw
inc
and
fisubl
jmp
jbe
aas
xor
ret
or
mov
or
ljmp
or
jnp
mov
movzbw
pushf
mov
pushf
mov
mov
lea
jmp
pushf
jmp
push
clc
mov
stc
or
movw
pusha
movw
lea
je
push
cmp
lea
pushf
jmp
pushf
jmp
adc
data16
iret
sub
movsb
mov
push
mov
rorb
add
repnz
fmul
pop
movsb
ret
shrl
clc
nop
outsl
shlb
mov
xorb
repz
jae
add
test
loop
inc
inc
das
lods
xchg
cltd
and
mov
lea
jae
cmc
pusha
pusha
test
sub
jmp
push
lea
je
clc
bt
cmc
bt
add
pusha
cmp
pushf
jmp
pushl
call
jmp
pop
insl
xchg
ss
push
jno
mov
inc
push
inc
mov
cmp
dec
xchg
cmp
roll
xchg
pop
arpl
mov
into
stos
inc
and
es
push
imul
popa
int
stos
test
sbb
add
out
jge
mov
lea
jb
bt
stc
push
stc
cmp
pushf
mov
pushf
pushf
lea
ja
dec
shl
shl
sub
add
pushf
mov
stc
stc
cmp
pushf
lea
jb
call
xchg
pushf
push
lods
rcr
rcr
pusha
setno
ror
push
setns
pushf
dec
pushf
rol
rol
mov
ror
and
bt
cmc
xor
call
cmp
test
cmp
enter
push
lds
push
ret
or
cmp
dec
ljmp
ret
ficoms
sbb
push
outsl
add
fbld
es
adc
push
dec
inc
mov
mov
imul
and
inc
mov
movb
mov
mov
pushl
pushf
pushf
pushl
ret
jmp
lea
jne
rcl
bswap
test
xor
and
bswap
cmp
stc
mov
cmc
add
pushf
pushf
pusha
lea
jmp
xchg
cmc
test
das
daa
xor
lock
cmp
xchg
je
movsb
in
dec
mov
ret
fiadds
subl
sbb
mov
faddp
out
jmp
clc
aas
and
fcmovnb
dec
ret
mov
ljmp
iret
inc
xchg
cld
mov
jmp
pushf
pusha
push
movl
push
call
jl
dec
imul
pushf
xchg
cld
pop
dec
pop
mov
or
mov
dec
mov
xlat
push
cmp
clc
cwtl
fstps
cld
lods
cmp
es
add
ficoms
jecxz
seto
scas
inc
inc
push
push
dec
cmc
stos
popf
fists
inc
fdiv
xchg
aad
mov
xchg
mov
aaa
push
add
sub
jg
insl
cmovg
icebp
jo
popf
fbstp
lret
dec
aas
mov
push
sbb
loope
arpl
mov
fildll
adc
or
imul
loop
movsb
addr16
mov
mov
outsb
mov
ret
xor
jb
or
std
dec
gs
loopne
int
stos
cli
or
testb
imul
test
in
inc
inc
into
adc
dec
push
mov
pushl
sub
cli
adc
jns
andl
sub
pop
in
jbe
mov
cmp
popf
test
sbb
sbb
popa
xor
scas
mov
cli
loope
pop
jge
sbb
stos
or
mov
stos
cmp
adc
fcmovnb
and
lea
inc
mov
scas
pusha
fldl
scas
hlt
push
pop
ja
mov
sub
fldpi
cmpl
add
lds
test
sbb
dec
scas
nop
push
lret
cld
and
out
jg
and
push
movsl
jnp
sbb
mov
lcall
movb
mov
push
inc
jg
mov
push
in
mov
je
or
add
fiadds
cmp
mov
je
xchg
xor
mov
pop
mov
push
or
cmpsl
cld
mov
call
pop
push
xor
jns
pop
adc
aas
sbb
insb
leave
es
repz
cmp
imul
add
mov
and
or
les
jnp
pop
inc
sub
outsl
out
lahf
push
sbb
push
stos
sub
xchg
add
or
notb
test
inc
push
pop
sub
gs
sbb
xchg
test
xlat
mov
mov
mov
xchg
mov
push
push
repz
mov
scas
lret
dec
enter
inc
sbbb
pop
jge
outsb
faddp
out
add
lods
cmp
mov
out
pop
fdivrs
sbb
rclb
sbb
filds
inc
ficoml
push
jo
mov
and
jle
leave
adc
ret
std
cmp
mov
cli
adc
push
jne
jnp
jmp
sar
inc
sbb
jns
test
xlat
in
in
lret
aas
test
xchg
push
inc
pop
les
out
cmp
inc
pop
inc
sbb
jbe
sarl
stos
scas
cmc
movsb
js
cwtl
dec
adc
fcomps
mov
add
aas
gs
cs
ret
mov
mull
and
mov
pushf
lea
jne
rol
cmp
lea
bswap
xor
sar
cmc
mov
adc
add
mov
mov
push
mov
pushf
pushf
lea
jmp
movl
pusha
jmp
cmpb
push
movw
lea
jne
cmp
sub
or
aad
adc
aas
mov
pusha
add
pusha
pushl
pushl
lea
jmp
jmp
shrl
fldcw
cmp
dec
ss
call
pop
inc
mov
clc
pop
repnz
adc
push
in
ret
push
int3
adc
sarl
sti
push
push
lret
mov
or
jl
pop
mov
adc
push
shrb
jbe
imull
sub
insb
lahf
outsl
out
pop
loopne
lahf
add
pop
dec
cmpsb
movsl
sbb
pop
sbb
cmp
and
arpl
sub
mov
push
cld
mov
pushl
push
mov
bswap
bswap
pop
push
pusha
pusha
push
pushl
ret
mov
call
lea
mov
pusha
pushf
jmp
stc
jmp
pusha
adc
lea
pushf
jmp
call
mov
and
rcrb
add
dec
scas
cltd
repnz
mov
inc
daa
jno
sbb
adc
es
and
dec
fidivl
inc
aas
mov
sbb
jmp
sub
xorb
xchg
add
stc
jae
out
scas
int3
into
xchg
faddl
and
jle
mov
lcall
test
jo
add
mov
fwait
pop
repnz
mov
add
cld
mov
sub
inc
lea
sub
add
bt
rol
mov
bt
mov
ja
test
cmc
repnz
jmp
push
mov
or
fwait
enter
or
ljmp
sub
inc
stos
repnz
mov
ja
jmp
les
cmp
xchg
inc
push
mov
lods
jp
call
loopne
sub
add
push
arpl
in
fldt
aas
and
in
inc
inc
add
mov
filds
insb
mov
mov
add
fstpt
cmpb
pusha
aam
mov
adc
mov
jmp
movl
lea
jne
pusha
movb
pusha
not
pushf
mov
movzbw
lea
pushl
pushf
jmp
sub
jp
cmp
jmp
adc
pushf
pushl
ret
call
lea
je
pusha
not
mov
jmp
pushf
pushf
pushl
popl
movb
mov
pushf
mov
pushl
ret
jl
in
jmp
loop
inc
in
inc
jecxz
in
push
insb
inc
arpl
inc
push
in
inc
out
inc
insb
data16
fs
imul
push
push
imul
jmp
mov
in
lock
movsb
sbb
inc
daa
xchg
jle
mov
pop
popf
mov
mov
es
aad
icebp
push
lret
cmp
insb
cli
sbb
or
xchg
scas
icebp
das
adc
xor
sub
bound
jge
and
sbb
lea
or
sbb
in
mov
std
or
sahf
sub
mov
and
in
pmulhuw
dec
jb
push
cwtl
mov
dec
imul
js
fst
push
test
loope
mov
cld
adc
scas
fsubs
lcall
mov
xor
call
movzwl
sub
mov
cmp
push
stc
pusha
add
bt
stc
bt
mov
stc
bt
test
test
test
pushf
lea
je
cmp
cmp
add
cmp
push
push
cmc
cmp
jmp
cmp
xchg
sbb
xchg
xchg
in
ds
repz
das
arpl
mov
jnp
jmp
pop
das
arpl
outsb
fistl
jbe
jmp
test
cld
ds
pop
cmp
out
pop
cld
add
out
ror
push
lcall
and
pop
daa
rcll
push
in
push
adc
jae
pop
push
inc
sub
mov
dec
mov
subl
ret
ret
outsb
arpl
dec
mov
cld
mov
add
jecxz
jb
das
mov
dec
xchg
mov
dec
sub
cmp
pop
subl
movsb
sbb
mov
dec
pop
stos
out
aaa
and
test
adc
mov
inc
xchg
aad
clc
and
enter
addr16
inc
pushf
in
lahf
icebp
mov
and
arpl
push
scas
mov
mov
pop
mov
pop
loopne
les
fwait
mov
das
jmp
in
sarl
mov
sub
cmpsb
cld
mov
testb
and
enter
pusha
inc
pop
popf
adc
pop
loopne
cmp
push
mov
ds
les
dec
inc
icebp
xor
out
clc
fcompl
xchg
cmp
push
fldenv
jg
mov
cs
leave
clc
popf
jle
add
adc
adc
jmp
xor
cli
lea
mov
popa
xchg
mov
ret
in
rcrb
test
inc
cmp
cwtl
cld
mov
popa
outsl
push
and
mov
lods
mov
int3
sub
push
push
das
mov
and
fsubr
sub
jge
mov
jb
outsl
add
push
add
push
lods
hlt
sbb
xor
inc
iret
pushf
loopne
and
pop
pop
xchg
jmp
aas
je
jg
loope
xchg
mov
add
sub
shll
mov
dec
jne,pn
xor
call
das
mov
or
pop
inc
mov
adc
mov
clc
test
jmp
add
dec
gs
popa
addr16
outsl
js
add
lret
sbb
sub
xchg
cmc
fadd
mov
test
int
fcoms
jb
mov
mov
int3
pushf
lret
cmp
dec
mov
pop
out
mov
jg
out
ds
inc
mov
lea
sub
push
cwtl
and
and
cli
jmp
rorl
out
and
pop
aaa
mov
iret
xor
call
cld
mov
int3
mov
pop
aad
cmc
xor
jge
dec
sub
shll
lret
je
js
mov
arpl
mov
sbb
into
lcall
cmp
inc
dec
imul
ret
mov
cmp
pusha
scas
loopne
insl
adc
stc
add
push
pop
ds
ds
out
movsb
mov
and
fstl
popa
mov
xchg
jp
jl
rorb
cs
insb
push
fdivrs
mull
cmp
pushf
add
movb
dec
jmp
xor
iret
dec
sbb
int3
lods
sbb
loopne
cmpsl
xchg
mov
repnz
outsl
pop
decb
shrl
push
movsl
xor
cwtl
pop
nop
lahf
fcmovu
adc
cmp
sub
sbb
loopne
mov
xchg
mov
sti
push
xor
aam
jmp
pusha
mov
fidivs
sbb
je
cmp
ljmp
or
dec
lret
mov
mov
mov
movsb
data16
cmpsl
andb
pop
push
shlb
in
fstps
sbb
sub
test
sub
nop
mov
in
out
push
iret
lods
int3
cld
mov
cmp
setge
lea
pop
lea
jmp
jmp
add
add
btr
setb
push
bts
clc
rcr
mov
sub
sub
stc
rcl
bswap
cwtl
push
lahf
shr
adc
cmp
push
shr
bsf
bswap
ror
push
aaa
cmc
sub
mov
pusha
pushf
lea
pushf
call
inc
pushf
push
lea
jmp
btr
sbb
mov
call
movw
push
lea
call
pusha
pusha
lea
jmp
adc
outsl
ja
sbb
mov
hlt
in
sub
inc
mov
data16
es
jo
mov
mov
sbb
je
xor
jns
enter
ljmp
add
sub
xchg
in
mov
je
adc
ss
mov
aas
mov
scas
sub
pop
push
or
push
je
ja
repnz
sbb
or
popa
adc
div
into
lahf
push
aaa
adc
dec
and
mov
test
sbb
and
das
imul
inc
lahf
mov
dec
test
clc
mov
xlat
in
or
mov
pop
loopne
push
mov
dec
jle
orl
inc
and
pop
repnz
sbb
inc
inc
aam
int
xchg
and
cmp
or
sbb
and
sbb
sub
lahf
jns
orl
testb
cmp
cmp
shll
cmpsb
lods
adc
jg
inc
pop
dec
insb
push
les
sbb
test
inc
in
mov
xchg
jmp
sub
push
arpl
inc
lea
pop
add
dec
mov
int3
mov
addl
movsb
lods
movsl
sahf
leave
cmp
sub
test
jb
fcom
ss
lock
jmp
cmpb
push
movb
jmp
mov
not
bswap
clc
mov
btr
dec
shr
mov
call
pushf
call
inc
scas
push
push
mov
inc
cmpsl
aaa
and
ret
out
push
xor
lods
repz
jmp
xchg
dec
imul
out
cmp
mov
xchg
mov
outsw
mov
inc
lret
rcrb
repz
fwait
mov
add
push
inc
xchg
fmul
data16
imul
mov
mov
call
cmpsb
sbb
ljmp
gs
xchg
mov
stos
mov
pop
insb
mov
jl
into
pop
or
and
jmp
cltd
sbb
hlt
hlt
in
js
mov
call
movzbw
sub
jo
mov
cmc
test
pusha
cmpb
jmp
test
jmp
out
out
loop
fmull
inc
shll
adc
inc
mov
aas
xor
aad
ja
imul
ror
addr16
mov
repnz
ja
ljmp
mov
or
push
rorb
xor
iret
xor
mulb
push
mov
sub
add
icebp
mov
data16
std
push
sub
out
adc
ror
jmp
xchg
scas
rclb
popf
mov
lea
in
jmp
repz
mov
not
movzbw
pushf
mov
bswap
mov
call
ds
sub
pop
movsl
xchg
popf
js
dec
pop
test
jg
sub
ret
mov
inc
stos
int3
pop
sarl
int
stos
sbb
ret
adc
addr16
push
mov
sub
cwtl
insb
mov
jnp
aad
jle
in
std
pop
pushf
or
cmp
dec
add
incl
mov
jecxz
xorl
adc
iret
fsubrl
sbb
movsl
xor
into
or
push
jae
in
lret
jbe
insl
ds
ljmp
pop
fstp
imul
cs
sbbb
cmc
ret
je
loop
fcomip
push
adc
roll
rcrl
ljmp
xchg
dec
cmp
sti
push
test
or
push
mov
push
cmp
xchg
aad
clc
push
lods
hlt
jp
and
pop
out
or
fistpl
out
cmp
pop
xchg
iret
loopne
inc
cmc
ret
daa
xchg
imul
div
out
int
das
and
fcomps
push
cs
cmp
test
loopne
ss
sbb
add
gs
lcall
stc
adc
aam
push
pop
inc
and
out
jle
stos
repz
stos
sub
in
mov
pusha
repz
or
mov
cli
js
inc
sarb
mov
cmp
daa
sbb
pop
sbb
push
lahf
in
mov
cmc
in
dec
xchg
cld
mov
test
xlat
mov
faddl
mov
test
sarb
xchg
call
fstps
xor
imul
push
inc
mov
mov
xchg
lods
adcl
clc
inc
andl
fdivrs
orb
and
push
push
adc
mov
adc
mov
lock
jge
sahf
mov
mov
pusha
mov
lock
xchg
scas
out
pushf
lret
lock
jge
jecxz
ret
mov
cmpsl
mov
pop
inc
ss
jg
mov
sbb
inc
lea
out
cmp
inc
adcl
mov
jg
ljmp
in
pop
icebp
mov
rcrl
popf
movsb
loope
stc
or
add
push
fdivrs
mov
movsb
rorb
mov
mov
push
mov
xor
arpl
mov
addr16
popf
and
sbb
ljmp
std
pop
inc
shl
clc
push
das
fdiv
jl
inc
add
mov
xchg
mov
icebp
mov
lcall
out
ret
add
cmc
dec
xor
cmpsb
sahf
xchg
or
jb
cld
mov
add
pushl
lea
jmp
pusha
pusha
inc
pushf
neg
cmp
xor
bt
call
sub
clc
pushf
stc
cmc
pushl
popl
cmc
cmp
call
mov
fcompl
and
out
mov
subb
adc
es
out
xchg
dec
insl
enter
adc
dec
mov
bound
in
lret
lods
repnz
pop
adc
sbb
divb
push
ss
push
addr16
sbb
fistpl
test
mov
out
in
addr16
pop
outsb
fs
fdivp
neg
xlat
rorl
icebp
aaa
sbb
enter
rcll
insb
scas
or
fdivp
imul
xchg
out
cld
mov
jge
int
mov
lcall
test
js
mov
or
sbb
andb
adc
and
lock
jbe
xchg
inc
jnp
dec
addr16
and
sbb
aad
imul
sarl
sub
jo
or
notl
jmp
inc
jno
btr
mov
sub
gs
add
call
mov
in
pop
cld
mov
inc
mov
dec
in
push
add
int3
mov
je
mov
gs
sahf
add
sub
sbb
pop
loopne
adc
push
bound
lret
sbb
pop
xchg
and
scas
xor
xchg
loop
pushf
inc
divl
mov
mov
stos
jo
stos
sbb
imul
ja
add
mov
push
xor
sub
pop
inc
inc
cmp
je
lods
cmp
shrl
fcomps
inc
sbb
cld
mov
fldl
and
in
cmp
data16
lods
adc
lahf
stos
test
roll
inc
sub
jb
xor
mov
xor
mov
pop
sbb
xchg
fmuls
orl
xchg
js
insb
pop
faddp
inc
mov
cld
mov
call
add
dec
outsl
arpl
inc
jb
gs
inc
ljmp
in
ror
call
pushf
jmp
movl
pushl
lea
jmp
lea
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
mov
sbb
cmc
mov
setbe
test
add
ror
movl
cmp
mov
jmp
sub
adc
and
outsb
int
adc
repz
and
mov
push
loop
fadds
stc
inc
icebp
xor
sbb
jno
adc
loope
cmp
fwait
mov
or
jge
lods
mov
in
loopne
cmp
out
adc
loop
nop
mov
loop
ret
fwait
xchg
or
inc
mov
sub
xchg
loope
sbb
out
outsb
jnp
call
fidivrl
cld
mov
pushf
movl
movb
pusha
pusha
lea
jmp
lret
cmpsl
lret
inc
cltd
ja
mov
sub
daa
movd
sub
daa
mov
aaa
add
out
xchg
pusha
adc
cmp
mov
cmp
cmpsw
sub
inc
jae
sbbb
fbstp
xchg
dec
xlat
je
gs
push
aam
cmp
movsb
adc
outsb
and
orb
and
stos
mov
rclb
cmp
dec
cld
mov
lea
call
pushf
pushf
push
sub
lea
jle
pushf
pusha
mov
lea
jne
call
repnz
pusha
call
pushf
pushl
movw
movl
mov
movl
pusha
pushf
pusha
push
lea
jmp
sub
pusha
jmp
or
pusha
call
and
push
mov
xor
repz
inc
mov
xchg
out
pop
je
movsl
lcall
mov
add
or
je
pop
clc
imulb
add
imul
mov
sti
jns
xlat
clc
cld
mov
outsb
in
loope
pop
std
orb
mov
xor
outsb
fisttpl
xor
outsb
push
mov
jl
loop
cmp
rcl
push
xchg
fdivrs
mov
cmp
mov
fwait
or
dec
into
mov
and
pop
cld
mov
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lret
cmc
mov
push
clc
stc
cmpb
pusha
pusha
lea
jne
test
sub
btr
mov
clc
call
test
fdivrs
fidivl
iret
fs
adc
push
cmp
xorb
xchg
hlt
cmp
outsb
lods
cmp
in
cmp
sbb
stc
ret
fcomps
popa
dec
jnp
das
mov
xchg
and
mov
xor
or
lods
or
add
in
arpl
xchg
push
sub
sbb
push
sub
cltd
xchg
into
dec
jmp
jb
shr
adc
testl
outsb
outsl
jae
xlat
push
xchg
jge
neg
out
xchg
filds
mov
mov
push
or
into
rolb
and
mov
jae
push
cmpsb
cmpsl
in
mov
jbe
cmp
cmp
jg
push
mov
sbb
leave
in
adc
xchg
lret
push
mov
adc
imul
lret
out
lea
jae
pusha
call
clc
cmp
add
jmp
fildll
test
push
fistpll
dec
mov
icebp
loop
mov
inc
xchg
dec
lock
mov
sub
sarl
lea
loop
insl
dec
sub
lret
lret
push
cmpsl
jae
jo
pop
pop
aas
fstpt
mov
mov
pop
cld
mov
or
fs
add
push
inc
cmpsl
mov
inc
and
daa
xchg
xlat
push
dec
hlt
xchg
rcrb
es
aad
xchg
sbb
mov
leave
ret
lahf
xlat
nop
mov
leave
adc
sbb
adc
jg
jne
fcmovnbe
rol
sbb
cld
mov
lea
jns
pushf
push
lea
ja
jmp
movl
pusha
lea
jmp
movl
call
call
leave
mov
sbb
mov
push
imul
mov
aas
popf
sub
addl
icebp
or
outsb
pop
pop
cmp
test
push
out
in
push
cmp
cli
inc
outsl
hlt
pop
in
scas
ljmp
push
adc
popa
adc
scas
out
adc
xor
push
ja
dec
push
add
xchg
mul
xchg
cmpsb
inc
imul
inc
and
or
repnz
dec
inc
cmp
sub
loope
clc
lods
sbb
and
push
out
jecxz
ret
mov
mov
cmc
imul
clc
clc
add
mov
pushf
lea
jmp
jl
in
push
jmp
imul
in
insb
imul
push
out
insb
inc
jmp
imul
inc
push
in
inc
out
inc
insb
data16
fs
imul
push
push
imul
jmp
jle
shlb
test
daa
rorl
jb
mov
scas
cmp
mov
mov
icebp
xor
gs
movsb
leave
jmp
mov
lcall
aaa
jnp
xchg
push
mov
cld
mov
movl
mov
movb
pushl
mov
push
movb
pushf
movw
pushl
ret
pusha
pushf
lea
call
jmp
pusha
mov
push
lea
jmp
ljmp
push
cmp
sub
andl
dec
hlt
test
int
xor
aad
xchg
movsb
and
xchg
test
faddp
movsl
loop
add
pushf
loopne
leave
push
hlt
fnsave
fimuls
sub
xchg
cmc
jb
add
mov
test
pop
lret
lock
into
in
push
fcomps
repz
xor
cmc
push
data16
xchg
sbb
insb
ja
icebp
gs
jb
addr16
popa
nop
jno
jns
movsb
loop
push
mov
sbb
in
daa
cmp
cmp
mov
sub
and
push
repz
in
mov
mov
lock
push
call
dec
jne
leave
sub
push
sbb
or
cmc
or
sbb
icebp
mov
lock
je
lret
shl
push
dec
xchg
pop
jns
push
xor
or
jbe
fs
cld
mov
fnstsw
and
and
pusha
shlb
lret
shlb
jo
pop
jns
or
xor
cli
inc
xor
jo
scas
fnstenv
xor
pop
sub
add
lret
popa
stos
push
pop
mov
nop
adc
jle
test
scas
push
lret
xlat
test
or
pop
jns
mov
lock
loop
enter
sub
mov
shl
into
in
and
jne
ret
jle
lds
mov
and
fisubl
cmpsb
mov
sbb
xor
fwait
lods
cmp
scas
pop
lods
cmp
and
sub
or
inc
dec
pop
pop
inc
ds
cmp
inc
mov
test
pop
jmp
ret
xchg
push
mov
mov
dec
outsl
sbb
mov
fucom
ljmp
sub
imul
rcl
sub
test
xor
inc
mov
in
jecxz
and
and
pop
lret
hlt
mov
out
ret
aad
or
sub
addr16
aam
sahf
stos
jecxz
fsubl
and
fcmovnb
outsb
pusha
negb
cmp
js
pop
jnp
mov
jae
mov
adc
addr16
insl
mov
or
ja
sub
idivl
or
out
lock
js
imul
xor
mov
sub
mov
sbb
mov
addr16
aaa
xlat
sbb
mov
cs
insb
dec
mov
test
sbb
pop
mov
ja
xchg
mov
add
pop
pushf
lahf
jp
js
sarl
mov
and
data16
stos
es
ds
repnz
aaa
jo
adc
jns
loope
dec
insl
leave
or
xchg
mov
mov
cmp
sahf
lods
mov
jno
mov
sub
add
fcompl
scas
jecxz
lcall
in
pop
xchg
mov
rcrb
pop
call
not
mov
lods
push
ror
jmp
test
lret
outsl
stc
jns
sti
pop
pusha
cmp
subb
xchg
fists
cmp
xlat
outsb
pop
gs
push
fstps
push
mov
fcompl
jp
shrb
aas
mov
mov
in
sbb
mov
mov
adc
int
ret
xor
mov
push
xor
sbb
jnp
push
adc
and
adc
mov
mov
xchg
lock
or
test
and
loop
mov
mov
adc
cld
inc
mov
test
shll
outsl
xchg
mov
and
or
loope
outsb
jns
pop
mov
test
inc
pop
divb
inc
inc
cmp
xchg
mov
jae
adc
mov
sub
inc
gs
add
pop
jcxz
aam
mov
mov
mov
fmull
fwait
jns
push
shrl
stc
insl
inc
pop
popf
or
fucomi
stc
inc
push
lcall
sbb
inc
xchg
stos
xchg
adc
jnp
add
dec
jbe
jmp
inc
outsb
out
scas
mov
adc
loopne
sbb
mov
sub
mov
cmp
out
scas
jb
mov
leave
xchg
mov
pop
enter
psubd
call
ret
imul
cmc
mov
xchg
mov
cs
bound
stc
push
fs
mov
in
dec
jo
ja
and
iret
adcb
add
stos
pop
xor
or
mov
jns
sub
cltd
and
mov
and
scas
xorb
lds
test
sub
cmp
hlt
cli
rorl
dec
loop
punpckhdq
adc
loop
add
ret
jmp
or
add
es
push
xchg
outsl
sbb
int3
pop
pop
cli
cmp
and
mov
fcoms
inc
mov
idiv
cld
mov
xchg
sbb
sbb
xor
xchg
jmp
pushf
nop
testb
sti
outsl
sbb
rorb
jns
enter
mov
jmp
cmpsb
fistpl
sbb
xchg
and
ret
fwait
mov
push
inc
lods
adc
outsl
lods
and
hlt
mov
test
cmpsl
in
pop
loopne
pop
inc
pop
leave
dec
mov
jns
cld
mov
int3
popf
pusha
jmp
pop
add
addb
add
dec
fstps
add
add
add
out
add
test
add
in
add
int3
sbb
mov
add
add
fbstp
jge
inc
repz
xor
mov
inc
push
lret
test
in
mov
jb
add
mov
orl
imul
jb
fildll
mov
fninit
xchg
add
or
mov
xor
sub
leave
push
and
mov
fldt
jnp
or
mov
das
or
sbb
addr16
mov
xor
xchg
into
dec
inc
aad
push
in
inc
lock
inc
mov
movsb
sar
in
ljmp
mov
mov
mov
out
jo
cmp
aad
out
push
dec
fimull
rclb
test
jge
cmpb
dec
xchg
sti
enter
fists
sub
js
mov
mov
push
pop
lds
sti
push
xor
fwait
mov
sub
push
dec
lods
cmpsl
sub
aas
and
lret
ficoms
call
ds
in
xlat
lea
mov
and
scas
cli
pop
movsl
jmp
aam
adc
lods
idivb
push
sti
stc
push
dec
lods
inc
push
fisubrl
js
or
ret
cs
push
aad
loopne
fsubrl
aaa
pop
arpl
mov
jno
pusha
push
cli
loope
lods
mov
dec
lahf
mov
insl
mov
pop
loopne
les
push
cli
imul
mov
aad
xor
or
out
sbb
or
mov
mov
push
dec
inc
sub
loope
jecxz
sbb
scas
cld
inc
subb
mov
sub
fistpll
dec
call
jmp
ret
stos
leave
imul
std
clc
movsb
in
mov
xor
lock
in
cmpsl
xchg
push
pop
or
imul
js
adc
push
out
into
mov
jge
nop
sbb
out
je
nop
cmp
mov
inc
sbb
testb
mov
inc
stos
lret
mov
stos
ds
push
addr16
mov
ss
push
test
adc
and
lods
xchg
jg
fcompl
iret
sbb
jg
test
pop
xor
mov
and
xchg
incb
shrb
jg
addr16
jmp
or
add
ja
push
int3
cmp
cmpsl
xchg
cwtl
nop
into
mov
fdivl
fistpl
jmp
inc
lock
mov
das
xor
mov
sub
adc
mov
mov
data16
fdivl
add
sub
mov
fsubs
movsl
jecxz
xor
fdivrp
in
mov
and
leave
repnz
testl
cld
call
cmp
fdivl
insb
int3
and
xlat
or
jle
mov
hlt
test
mov
stc
push
xor
pushl
mov
pushf
lea
call
jmp
pop
shrl
jp
cwtl
jl
push
cmp
or
andb
adc
push
aad
mov
or
lahf
add
pop
and
jo
imul
lahf
insb
xor
jmp
stc
cmp
outsb
nop
aam
inc
nop
mov
jae
icebp
pop
jmp
add
dec
push
cld
mov
sub
adc
mov
pushf
stc
sub
cmc
cmp
test
jmp
xchg
rcl
pop
shl
adc
mov
clc
sub
jmp
cld
insb
pop
stos
fsubrl
fdivrs
add
dec
mov
sub
andps
pop
xor
sub
das
lds
mov
cmp
movsl
xchg
rorb
incb
in
jmp
push
jbe
imul
jle
ja
sbb
mov
jmp
add
test
push
dec
push
cld
out
int
mov
xchg
aad
outsl
sub
add
std
mov
dec
nop
lds
pushf
imul
push
jb
mov
std
or
mov
sbb
or
mov
xor
orl
pop
add
shll
or
mov
in
dec
inc
arpl
mov
call
movl
pushl
pushf
pushf
lea
jmp
call
call
pushf
pushl
movl
pusha
pusha
mov
lea
jmp
lahf
mov
sub
gs
sub
popf
add
lods
mov
addl
movsb
jo
push
lahf
and
js
std
in
insl
adc
insb
xchg
mov
daa
xchg
pushf
cli
in
sbb
mov
mov
mov
push
test
add
adc
jae
xor
fistpl
arpl
or
in
add
data16
lea
loope
test
iret
les
add
lret
ljmp
movsl
and
aam
inc
aas
stos
ds
mov
cmp
xor
cmc
pushf
jmp
clc
add
jmp
pushf
call
movb
lea
jne
bswap
bt
mov
test
mov
add
shl
sub
bt
mov
pushf
cmp
cmc
jmp
pushl
pushl
movl
mov
pushl
popl
movb
pusha
pushl
ret
lea
call
push
lea
jne
cwtl
setg
mov
pusha
movw
lea
jmp
movl
movw
pushf
pop
lahf
lea
lea
je
push
movl
push
pushf
call
mov
bts
pusha
test
lea
clc
aam
jmp
call
cmp
pusha
call
adc
dec
loope
xor
sahf
js
ret
js
rcrl
xorb
les
inc
mov
mov
dec
mov
pop
inc
inc
sub
ss
shr
jp
aaa
inc
bound
ja
subl
loope
aad
hlt
aas
imul
in
and
scas
rcrb
shll
jmp
push
push
enter
push
pop
cld
mov
mov
pushf
lea
call
push
pushf
lea
jmp
mov
movb
push
pushl
ret
or
out
add
sbbl
push
sbb
lahf
or
clc
mov
test
mov
sub
xchg
push
jbe
sub
outsb
push
cmp
iret
scas
imull
inc
mov
push
and
and
sahf
add
or
enter
aam
pop
outsl
mov
dec
test
lahf
sbb
push
add
jne
pop
dec
mov
sub
push
sti
jg
cld
mov
cld
xchg
adcb
outsb
ss
push
mov
jno
xor
xrelease
das
outsl
push
pop
xchg
pop
stos
out
out
xchg
jmp
mov
pop
ja
loope
and
repnz
test
in
jmp
mov
xchg
adc
and
repz
or
sbb
andps
ss
add
mov
pop
fsts
xchg
out
sbbb
andb
vcvtdq2ps
or
and
and
jno
jge
pop
jne
mov
pop
inc
mov
jne
cmp
scas
push
sahf
test
inc
adcl
jbe
call
and
xor
jmp
aam
scas
mov
fsubrs
or
add
call
call
test
pushf
add
stc
test
mov
pusha
cmp
stc
call
sub
aam
mov
rol
add
pushf
pusha
not
pusha
mov
push
pushf
lea
jmp
sub
iret
mov
mov
fucomi
xor
xor
cmpsl
ss
mov
test
cs
dec
bound
inc
xor
sbbl
stos
jge
cmp
lcall
dec
mov
and
add
xor
or
push
or
cmp
push
dec
pushf
shlb
cmp
sbb
xchg
push
mov
mov
push
addb
mov
dec
sahf
pushf
rcrl
jp
nop
or
cmp
adc
pop
pop
addr16
out
xlat
dec
fwait
in
jb
or
sub
and
mov
sub
xor
mov
cmp
js
and
mov
jl
dec
push
stos
addb
jo
adc
push
jle
data16
pushf
sub
jo
jp
pusha
add
and
sbb
cmpl
ret
dec
sub
sub
cld
je
clc
jo
call
mov
cmp
mov
cmp
xor
enter
inc
inc
fldenv
aam
dec
and
jae
nop
xor
and
xchg
push
inc
push
xchg
inc
sahf
aaa
inc
cmp
loop
hlt
pop
test
lcall
jo
fidivrs
sub
stos
xor
pushf
mov
push
pop
mov
inc
push
push
add
mov
mov
adc
iret
sbb
jg
xlat
dec
jp
or
fistps
outsb
jl
fstps
pop
jb
sti
xor
fisttpl
mov
mov
jecxz
mov
mov
dec
fidivrl
imul
mov
mov
js
and
push
cld
xor
faddl
push
mov
dec
dec
sti
xor
js
pop
mov
jmp
dec
push
xchg
mov
mov
sbb
push
mov
inc
ljmp
aas
mov
cwtl
cwtl
mov
repnz
ret
imul
mov
cmp
clc
outsl
mov
push
into
mov
sub
dec
jp
cmp
push
lea
sub
inc
sbb
xchg
rcrl
lret
mov
arpl
cwtl
xor
mov
cmp
cmp
pop
xchg
xor
mov
dec
xchg
sub
sub
and
xchg
xor
inc
imul
rorl
mov
push
popf
adc
fnstenv
xor
pop
push
cmp
mov
inc
push
push
or
sbb
adc
fstpt
mov
and
mov
mov
ljmp
inc
fbstp
jae
dec
lret
xchg
sub
pop
or
mov
dec
out
sbb
mov
push
pop
ret
pop
sub
xor
push
lret
enter
mov
push
mov
sbb
adc
sbb
fistpl
dec
ljmp
dec
dec
sub
cs
dec
sahf
faddl
outsb
push
jl
pop
ret
push
cmp
sbb
xor
and
lcall
cmp
adc
ret
push
fcmove
and
cli
std
inc
xor
dec
mov
sbb
lret
repz
xchg
push
mov
inc
dec
out
jb
lret
sarb
mov
cmp
push
jnp
sti
lret
inc
icebp
sub
sbb
sbb
jle
xchg
mov
fimull
push
pop
xchg
test
lret
jb
cltd
mov
sub
jle
cli
mov
ljmp
and
dec
mov
fwait
dec
mov
sbb
xchg
dec
pop
call
dec
mov
sbb
sbb
jl
cmp
stc
cmp
adc
inc
subb
jbe
pop
fwait
sub
repnz
push
lret
jle
dec
adc
xor
mov
xor
outsl
ret
pop
xchg
lcall
mov
xor
inc
xchg
cli
inc
bound
fcmovnb
sub
repnz
leave
and
cli
push
test
xchg
aaa
mov
test
outsl
lock
xor
pop
bound
inc
ror
sub
fistl
jae
cmp
jb
or
jp
ss
outsl
push
jno
addr16
push
fadds
mov
dec
xor
sti
adc
push
mov
inc
enter
pop
mov
mov
fwait
mov
lret
sbb
dec
or
dec
in
jecxz
jecxz
adc
sub
ret
dec
es
mov
imul
ret
mov
and
ss
add
stos
repnz
pop
add
fnstsw
sub
stos
xchg
imul
jl
or
ret
sbb
dec
and
mov
mov
add
sbb
ret
xor
sub
js
dec
inc
cmp
or
imul
repnz
jae
cmpsb
lret
xorl
push
xorl
mov
sub
inc
sub
leave
js
jg
xor
repz
mov
sub
ret
cmp
push
jnp
enter
dec
push
jae
push
clc
sti
pop
and
mov
xor
ss
dec
dec
inc
xchg
sub
mov
fwait
lcall
add
jnp
test
fisttpl
dec
lea
mov
sbb
pop
sub
jge
sub
int
jns
inc
mov
jmp
dec
cmp
push
xor
sbb
inc
jae
jns
fists
and
outsl
dec
xchg
push
xor
mov
jb
scas
jle
pop
cmp
jnp
and
jbe
mov
and
xor
sbb
pop
adc
rsqrtps
repnz
jmp
mov
bnd
jbe
ret
mov
or
ja
jecxz
ja
jbe
mov
jbe
repnz
add
test
mov
adc
sti
mov
jecxz
mov
sti
dec
cwtl
ret
jmp
xchg
sbb
ds
sbb
jmp
cmp
mov
shrl
lret
mov
lret
jmp
int3
jmp
pop
jmp
sahf
mov
cmp
stos
push
push
xchg
jp
mov
xor
cmp
sub
adc
ret
jle
sbb
adc
adcb
bnd
or
sbb
sbb
repz
pop
xor
push
or
jae
cmp
mov
in
xchg
mov
out
ljmp
jecxz
inc
and
dec
fnstsw
dec
jns
fstpt
pop
ret
stc
fimull
dec
loop
mov
inc
dec
repnz
fimull
xchg
xor
ljmp
and
jle
inc
inc
js
adc
pop
jge
jnp
inc
sub
sti
ss
mov
lret
js
mov
stos
ficomps
push
mov
jp
xchg
lods
mov
fmulp
push
scas
jl
sbb
mov
test
mov
cltd
js
add
lret
inc
fadd
inc
mov
jl
xorl
jmp
pop
imul
inc
mov
sbb
leave
dec
inc
repz
jecxz
sub
mov
jl
dec
ret
mov
cmp
push
push
mov
mov
jl
sbb
mov
mov
lret
mov
mov
jl
dec
add
mov
pushf
dec
push
stos
mov
arpl
loop
sbb
mov
fs
sub
mov
jae
ljmp
arpl
mov
sti
dec
cmp
mov
clc
ret
add
ret
sub
ljmp
mov
fimull
movsl
cmp
add
add
dec
sub
ret
mov
pushf
xor
mov
xor
repz
lret
push
je
sbb
or
or
cmp
lret
sbb
mov
ljmp
dec
adc
fisubrs
jecxz
adc
stos
dec
cmpsl
adc
cmp
mov
outsl
jae
pop
or
push
mov
data16
data16
test
adc
cmp
jp
pop
mov
pop
mov
arpl
repz
js
in
popf
mov
mov
mov
arpl
jge
jbe
pop
sub
stos
push
and
xor
lret
sub
and
mov
mov
dec
mov
or
fistpl
jecxz
inc
std
ret
fwait
enter
dec
mov
sub
js
mov
adc
jp
xorb
inc
lcall
out
cltd
mov
mov
fcmovnbe
inc
cmp
lret
dec
repnz
push
jnp
pop
into
sbb
in
pusha
mov
fnstsw
jp
inc
jp
mov
cmp
aas
and
and
pop
xor
jno
imull
xor
and
pop
mov
xlat
leave
sbb
cld
sub
dec
jmp
cmp
outsb
push
and
scas
sub
or
inc
sbb
stc
jmp
dec
mov
mov
adc
dec
shlb
or
mov
mov
outsb
sbb
add
div
and
inc
fcmovbe
add
fiaddl
sub
sti
call
dec
out
pop
and
pop
pusha
cmp
sbb
mov
mov
sub
push
dec
push
mov
dec
lock
loop
and
cmp
jb
jecxz
bound
adc
insb
repz
sub
pop
out
mov
sub
push
test
mov
or
call
adc
stos
xchg
mov
ljmp
adc
xchg
mov
adcb
push
adc
adc
mov
mov
repz
push
and
xchg
mov
and
icebp
mov
addr16
push
sbb
pop
sbb
dec
ljmp
call
fstpt
stos
cltd
pop
arpl
arpl
or
or
sbb
test
mov
dec
push
jle
mov
or
sbb
jmp
jle
adc
pop
push
stos
repnz
jb
mov
mov
ror
sbb
xchg
adc
sbb
ljmp
xor
jp
pop
add
sub
mov
dec
push
sub
popf
dec
rcll
dec
jp
lods
outsb
xchg
jnp
dec
ficompl
adcl
cmp
adc
mov
xor
sub
add
fisubrl
and
mov
mov
sbb
inc
adc
mov
mov
push
mov
push
cwtl
leave
inc
fwait
cltd
lods
push
cs
ret
cs
mov
imul
dec
add
je
arpl
sub
sub
or
mov
lahf
inc
fistpl
mov
sbb
stos
fs
inc
int3
pop
rcll
mov
cmpsb
mov
push
jp
daa
cli
hlt
or
jp
push
push
adc
jbe
dec
sbb
lret
pop
stos
mov
js
rcr
push
inc
jp
fistpl
pop
js
cmp
test
js
sub
push
jo
loop
sbb
sub
adc
test
push
sub
push
dec
mov
lds
pop
stos
stos
ja
sarl
test
leave
andb
test
mov
push
into
fwait
mov
data16
jns
sub
jle
and
sub
sbb
sbb
fidivrs
cmp
or
aas
jecxz
xchg
mov
fisttpl
loop
lea
xchg
pushf
sbb
mull
cmp
jae
stos
mov
sub
xchg
mov
and
mov
push
mov
and
sar
ljmp
lret
sbb
xchg
sbb
test
lret
and
cmp
and
adc
pop
inc
mov
sub
and
xor
mov
inc
sbb
stc
lcall
cwtl
sub
jns
add
xor
dec
mov
sbb
sbb
jl
cmp
mov
rorl
lcall
dec
sbb
xor
stos
sbb
or
mov
sbb
jae
mov
xor
andb
xchg
sahf
mov
repnz
sub
sub
pop
dec
or
xchg
mov
mov
mulb
lcall
dec
and
sbb
push
pop
jle
xchg
xchg
sti
negb
sbb
sbb
hlt
sub
dec
divb
dec
push
lcall
adc
pop
dec
mov
or
or
xor
inc
lret
dec
mov
or
dec
mov
fsubrl
pop
sub
jb
fists
stos
push
sbb
jle
mov
mov
pop
dec
sbb
jle
pop
adc
sbb
mov
xchg
orb
pop
sub
arpl
clc
sbb
adc
jb
lret
push
sub
sti
ljmp
std
dec
jp
jle
jb
inc
inc
jnp
sbb
mov
adc
or
mov
cmp
mov
fwait
arpl
sub
inc
lcall
inc
stos
std
inc
sbb
inc
dec
xor
mov
or
jge
jg
inc
inc
dec
jno
inc
mov
inc
jnp
xor
leave
lcall
cmp
enter
ja
stos
and
pop
dec
inc
adc
mov
fwait
sbb
fists
daa
cmp
sub
cwtl
movsb
mov
sbb
shrb
fistpll
imul
cmp
sbb
mov
xor
clc
xchg
mov
pop
dec
inc
addb
fwait
sub
pop
inc
les
mov
or
stos
cmc
rcll
inc
xor
mov
lcall
fcoms
mov
inc
jnp
dec
outsb
xchg
mov
fwait
xchg
jbe
orb
xor
lcall
mov
je
dec
mov
mov
dec
push
jp
dec
mov
cmp
sbb
outsb
mov
xor
xor
cmp
sbbl
mov
cmp
std
cmp
imul
pop
pushf
shlb
icebp
dec
dec
sub
cmpsl
jl
daa
dec
inc
adc
mov
stos
hlt
xchg
mov
cmp
mov
push
pop
imul
xchg
push
std
sub
xor
cmp
sbb
xor
jo
mov
inc
inc
dec
add
mov
xor
mov
xor
xor
lock
and
addl
sarb
imul
mov
cmp
leave
repz
pop
outsl
xor
movl
cmp
sar
or
dec
mov
xor
sbb
cmpxchg
pop
std
iret
push
push
cltd
or
ret
stos
or
fsts
int
jl
dec
mov
sbb
loop
mov
adc
push
fadd
sub
xor
lret
sbbb
sbb
jle
mov
ret
push
fimull
push
bnd
gs
xor
mov
cmp
adc
mulb
cwtl
push
ret
stos
pop
sbb
dec
jp
pop
test
lret
mov
dec
mov
xchg
lret
sub
shr
cmp
sub
xor
push
jae
push
lret
xchg
jle
mov
xor
mov
pop
dec
bound
lret
lret
add
mov
sbb
push
mov
lret
ret
jle
mov
xor
adc
mov
sbb
int3
movsb
ret
pop
push
mov
mov
cmp
dec
jecxz
pop
mov
aas
sub
pop
ljmp
dec
loop
sub
mov
push
adc
hlt
dec
repz
lcall
outsl
into
jo
mov
xor
and
movl
test
or
mov
and
js
xor
lret
ljmp
stos
mov
and
mov
dec
jae
and
mov
ljmp
push
push
pop
sbb
imul
xor
push
cmp
pop
ja
stos
push
jmp
sbb
gs
xor
push
enter
xchg
into
cmc
fcmove
cmc
add
cmpsb
stc
mov
dec
jae
push
dec
sahf
xchg
adc
repnz
jmp
dec
mov
jp
sub
inc
sbb
mov
into
sbb
jno,pt
sbb
sub
jecxz
sahf
cmp
or
or
fbld
lret
jb
rcrb
sub
inc
push
pop
sbb
xchg
mov
lahf
xchg
and
xor
mov
pop
push
int3
repnz
sahf
push
mov
mov
xchg
xchg
and
addb
imul
mov
sbb
pop
inc
aaa
adc
cmp
dec
outsb
rcrb
cmp
daa
sub
jp
push
test
mov
mov
xor
or
sub
mov
loop
dec
shrb
jae
sbb
sarl
dec
jb
lret
imul
repz
adc
dec
dec
mov
mov
xlat
pop
dec
ror
lcall
inc
dec
sahf
mov
dec
jp
icebp
mulb
add
push
adc
test
mov
cmp
or
stos
jmp
or
mov
xchg
sbb
ss
arpl
int
leave
sbb
pop
shrb
adc
or
dec
lahf
ds
pop
sbb
enter
divl
lret
mov
mov
jecxz
decb
inc
mov
xchg
mov
sub
test
inc
dec
sbb
fistpl
cmp
ljmp
cmp
sbb
sti
repz
sub
cmc
cmp
adc
mov
xor
xor
leave
push
mov
push
mov
cmc
xchg
shrl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
mov
stos
sbb
repz
xchg
jmp
stos
sbb
cmc
pop
cmp
inc
mov
loop
dec
xor
into
decl
sbb
sbb
clc
add
push
fwait
xchg
int3
aad
sub
adc
je
or
or
or
xchg
jecxz
jp
and
scas
sbb
mov
xchg
mov
dec
and
pop
enter
push
ret
mov
fnstsw
les
or
les
xor
xchg
shl
fcomps
lret
xchg
subps
mov
testl
dec
lcall
test
xchg
cli
lods
push
stos
jne
sbb
xchg
mov
mov
push
clc
adc
push
ret
and
mov
mov
ljmp
push
lret
sub
ret
lret
cmp
sub
sub
dec
mov
push
pop
cmpb
mov
sbb
int3
stos
sar
into
push
lret
and
dec
jnp
enter
mov
push
inc
sub
xor
push
inc
pop
mov
sbb
ret
mov
rol
cltd
ljmp
ret
xchg
fwait
pop
std
mov
int3
mov
sbb
sbb
idiv
mov
jo
sbbb
ret
pop
cli
or
inc
sbb
mov
addb
adc
cmp
sub
inc
xchg
ss
adc
jae
dec
loop
loope
cld
inc
pop
and
adcl
xchg
push
push
das
aas
mov
xor
adc
mov
pop
push
std
jb
inc
jb
cmp
inc
js
loope
sbb
dec
and
lcall
xor
jp
fiaddl
mov
lret
pusha
or
je
add
jbe
sbb
scas
dec
out
lcall
fcmovb
notl
jbe
shrb
scas
ljmp
mov
testb
dec
add
jmp
sub
mov
pop
stos
sub
loop
xbegin
xchg
or
ret
sub
js
scas
jmp
aad
pop
jge
ret
push
in
jle
lret
or
cmp
sti
scas
nop
imul
lret
repz
pop
lock
sbb
lcall
dec
dec
sbb
sbb
sub
pop
xchg
adc
mov
fisubl
jne
jecxz
stos
push
insl
inc
dec
fistl
add
out
mov
pop
dec
data16
cmp
jnp
mov
cltd
push
daa
shlb
mov
sbb
sub
sub
xor
xchg
ret
and
movsl
jbe
pop
dec
jb
cmp
cli
cmp
sbb
push
sub
stos
or
mov
sub
dec
inc
push
cmp
test
mov
sti
dec
dec
movsl
aam
sub
dec
dec
jp
jo
jp
pop
and
lret
sub
pop
js
fcmovb
inc
jp
sbb
mov
cmp
jecxz
xor
dec
sbb
and
shll
fidivl
xor
pop
fs
stos
sub
decl
lock
mov
inc
jb
dec
adc
sbb
mov
inc
inc
js
movsl
iret
pop
jge
dec
adc
fwait
jo
dec
jp
fimuls
jge
dec
and
mov
inc
pushl
and
in
or
mov
mov
outsl
fldt
xor
dec
or
push
jbe
adc
sbb
cmp
mov
cmpsl
jmp
sbb
mov
push
sub
je
cmp
cmp
or
sbbb
mov
fs
sub
dec
push
push
dec
sbbl
mov
outsb
repnz
mov
or
push
lcall
adc
add
cwtl
not
sub
xor
subb
mov
mov
cli
push
int
sbb
sbb
and
jo
lret
js
decl
push
jle
repnz
sarb
lret
out
jp
mov
push
pop
sahf
sti
lahf
mov
sub
lret
cwtl
sbb
movsl
lods
sub
and
mov
inc
call
push
pop
stos
stc
push
sub
stos
cwtl
add
xor
push
ljmp
ret
mov
push
aaa
les
dec
rcrb
adc
fwait
xor
sahf
fstpt
sub
xor
cmp
dec
push
mov
lock
mov
call
out
xor
ljmp
push
dec
jnp
pop
out
cmp
lret
cmp
data16
sti
in
sbb
xor
adc
repz
mov
xor
push
cmp
push
jl,pt
cmp
xor
xlat
and
inc
scas
icebp
cmp
xchg
sbb
test
repnz
imull
mov
sbb
or
dec
add
sti
cmc
cmp
sbb
jle
push
add
sbbb
jp
lret
ret
mov
mov
add
inc
dec
loop
sbb
jae
inc
adc
sbb
test
xlat
push
lret
mul
push
and
fsubrs
std
sbbl
dec
mov
fwait
pushf
leave
fwait
push
sbb
sti
sub
dec
jmp
xor
sbb
lret
push
out
pop
stc
gs
sbb
pop
gs
mov
stos
dec
repnz
ficompl
loop
dec
lret
jnp
stos
leave
sbbl
dec
mov
fwait
lret
add
jecxz
inc
or
push
mov
stos
lret
cmp
mov
mov
push
lret
jb
lret
jecxz
dec
add
mov
pop
dec
ror
lcall
inc
dec
sub
jae
push
lret
fwait
jle
mov
jmp
dec
push
cmp
push
mov
lret
stos
jle
mov
cmp
or
mov
jo
cmp
jecxz
in
sub
subl
sub
mov
add
sub
rcrl
adc
and
dec
bound
loopne
push
mov
jp
int3
add
repnz
jle
mov
jae
imul
jb
lret
fstpt
jp
add
push
push
lret
sbb
jle
mov
sub
push
push
jle
sbb
jb
jmp
std
ficoml
jb
xlat
mov
mov
dec
jb
cmp
sbb
ss
pop
cld
fildll
mov
and
pop
push
mov
lret
jb
ret
clc
loope
stos
lret
repnz
mov
sbb
dec
jp
fstps
movsb
pop
imul
sti
dec
dec
cmpl
push
lcall
sub
shrb
cmp
jp
stc
cmp
sbb
jecxz
iret
lcall
mov
mov
xor
lock
sub
sti
jbe
xor
or
jno
jp
xor
icebp
inc
inc
js
push
mov
ret
xor
popl
inc
adc
sbb
xor
mov
and
dec
mov
rclb
into
inc
lds
mov
cwtl
add
sbb
sar
andl
sbb
jp
cwtl
inc
inc
xchg
adc
jb
xor
jmp
xor
adc
pop
hlt
inc
mov
cmp
int3
std
sti
sbbb
repz
adc
push
pop
push
enter
dec
xchg
aad
jp
bound
movsl
pop
repz
xor
push
rcrb
xor
jae
xchg
mov
adc
dec
std
pop
sub
lcall
mov
jmp
or
rcrl
out
inc
push
ret
sub
pop
bound
mov
int3
js
mov
inc
pop
jb
dec
fldt
inc
lock
dec
fwait
ret
sbb
pop
dec
shrl
or
dec
bound
ret
mov
and
sarb
orl
dec
gs
imul
inc
enter
mov
pop
xchg
gs
aaa
js
jnp
mov
jae
push
mov
sub
ljmp
mov
testb
repnz
imul
adc
lret
lret
mov
cmp
push
mov
lret
repz
jp
dec
mov
push
dec
lret
jb
lret
sub
mov
xchg
dec
or
xor
clc
dec
xorb
xchg
sbb
jle
mov
adc
push
arpl
lret
jp
mov
push
mov
xchg
sbb
sbb
jle
mov
mov
jl
inc
repnz
dec
lret
sbb
jle
mov
arpl
push
xrelease
cwtl
sbb
jle
mov
xor
push
xorl
repz
jb
lcall
jecxz
sbb
jb
sahf
repz
lret
sbb
dec
sub
jae
push
mov
ret
dec
stos
push
add
jmp
xor
dec
sub
cmpb
lcall
adc
mov
push
jle
mov
or
jmp
dec
push
and
lret
xchg
jle
mov
dec
dec
and
xorl
ret
sbb
sbb
adc
inc
mov
sbb
lret
push
bnd
lret
inc
jle
mov
mov
fwait
push
mov
dec
sbb
sbb
jle
mov
lret
push
or
lret
adc
mov
mov
fwait
push
mov
dec
sbb
sbb
push
ret
movsb
daa
or
cli
sbb
mov
dec
xchg
mov
pushf
dec
jnp
mov
xchg
dec
dec
fldt
sbb
jnp
jp
mov
sbb
inc
sbb
xlat
sub
mov
mov
sub
ljmp
fs
in
jp
pusha
sub
arpl
outsl
outsl
mov
shrb
or
inc
jmp
push
sbb
js
movswl
outsb
inc
mov
call
outsb
inc
mov
inc
cmc
fimull
fimuls
jge
jg
inc
inc
dec
shrl
mov
inc
add
jge
mov
xchg
mov
orb
insl
dec
push
push
sbb
sahf
jl
cmp
cwtl
inc
jl
sti
dec
jnp
mov
dec
mov
sbb
cmpl
jl
nop
dec
stos
add
popf
dec
xor
push
pop
sbb
dec
ljmp
adc
xor
sbb
les
or
mov
pop
jae
jmp
fucom
pop
jae
mov
arpl
adc
mov
jp
add
push
sub
mov
ds
ret
ds
or
rclb
xor
mov
jae
or
mov
hlt
cmp
lret
and
pop
jae
dec
sub
jnp
fidivs
es
xchg
sbb
xor
sti
ja
ret
lret
cwtl
mov
or
jge
aas
xchg
cmpsb
fwait
mov
loop
and
cmp
nop
inc
sti
pop
aad
repnz
and
pop
cmp
lea
push
in
jle
xchg
xor
sbb
fisubrl
adc
inc
pop
xchg
sbb
pushf
dec
mov
ret
xchg
xor
js
pushf
fisubrl
adc
pushf
jne
lret
cmp
and
mov
iret
ficoml
cmpsb
sahf
loop
push
js
jmp
push
imul
pop
adc
orb
pushl
or
mov
mov
adc
xchg
jno
loopne
rcrl
repnz
inc
bound
pop
arpl
push
mov
mov
mov
ds
or
push
pop
movsb
push
jge
sbb
cmp
xor
adc
xchg
mov
jl
lds
stos
sbb
dec
repz
ja
sbb
xor
push
fldcw
test
adcb
dec
dec
pop
imul
lcall
cmp
add
or
repnz
push
xchg
inc
or
repnz
mov
adc
mov
lret
push
bound
repnz
call
mov
into
mov
adcb
test
sti
mov
pop
subb
push
cld
ss
stos
xchg
outsb
sub
dec
mov
sub
jp
push
pop
dec
jb
movsb
bound
dec
cwtl
mov
fcmovbe
ds
mov
sub
mov
ds
mov
out
dec
inc
lods
mov
sbb
mov
mov
lds
jae
mov
js
repz
outsb
sub
add
lcall
loop
mov
adc
mov
xor
loop
dec
ja
push
outsl
and
mov
sub
repnz
jns
push
fmul
outsb
int
js
ljmp
mov
repnz
sub
xor
test
jb
mov
mov
ficompl
imul
test
xchg
pushf
inc
push
mov
stos
repz
push
sub
dec
iret
jp
repnz
arpl
ja
js
scas
fsubr
and
or
mov
or
mov
jne
test
cmp
bound
rclb
maskmovq
mull
das
xlat
imul
jmp
pop
push
push
adc
xorl
mov
fisttpl
xchg
xchg
sti
mov
fstpt
mov
jmp
jp
mov
stos
xor
leave
sbb
push
rorl
and
xor
cltd
popa
dec
xor
push
and
pop
enter
xchg
out
mov
pop
ret
es
hlt
dec
ljmp
adcl
aas
xor
daa
clc
jo
or
jnp
in
mov
cmpsb
lods
ret
xchg
aaa
push
ret
stos
cmp
les
stc
jo
push
sbb
mov
xchg
notl
div
test
xor
inc
lret
cmp
adc
mov
or
jl
xor
stc
adc
xor
jae
dec
jno
jge
dec
jns
mov
mov
ss
dec
sbb
sbb
push
jle
divb
call
ficompl
out
pop
pop
inc
push
xor
sbb
repnz
dec
adc
pop
mov
pop
sub
push
cmp
rcrb
xchg
stos
cmp
add
rolb
jecxz
pop
incb
mov
dec
push
outsl
push
jb
fisttpl
push
xchg
int
stos
jecxz
jl
dec
mov
pop
jl
xor
cmp
lds
push
xchg
jb
lahf
inc
dec
dec
rcrl
pop
sbb
jae
cmp
inc
loop
adc
or
add
mov
aad
sub
and
pop
jmp
mov
lds
sbb
ljmp
sti
imul
sti
pop
jp
sub
sbb
lret
hlt
mov
mov
jp
sahf
push
mov
sub
adc
push
cmpsl
mov
sub
mov
mov
push
push
adc
jle
push
stos
fidivrl
jae
push
enter
sbb
rcr
inc
nop
fdivl
mov
adc
pusha
sub
sub
mov
jbe
dec
mov
jle
inc
jmp
xor
test
adc
cmp
xor
rcrl
add
mov
inc
cmp
les
cli
inc
ret
jnp
inc
jbe
jmp
mov
int3
outsl
push
js
fistl
bound
orl
int3
lret
ds
sarl
cmp
jb
cmp
dec
scas
test
sub
data16
ret
dec
add
push
xor
xchg
pop
mov
jg
idivb
xchg
xor
pop
inc
xorb
jae
sbbb
dec
ljmp
lods
cmp
sub
mov
push
jp
dec
mov
adc
jb
aaa
sub
lock
inc
clc
fcmovbe
or
pop
je
push
ss
dec
ficoml
mov
cmp
leave
and
mov
and
pop
pusha
stos
loop
xchg
jg
push
ja
xchg
mov
pop
sub
cmp
hlt
lods
pushf
inc
sbb
lret
pop
or
push
loop
lret
sub
popf
mov
fbstp
xlat
sbb
cmp
test
in
xor
push
cltd
sbb
out
cmp
sarb
lahf
cmp
inc
add
rolb
in
icebp
cmp
cwtl
cmp
mov
clc
push
ret
sbb
jne
pop
imul
mov
lea
mov
cmpb
js
mov
dec
cmp
ficoml
fcoml
pop
push
subb
ficompl
mov
add
out
mov
stos
push
push
pop
jl
pop
mov
push
xchg
cld
pop
adc
inc
mov
sbb
clc
cmc
and
gs
int
js
mov
push
xor
push
es
cmp
repz
repnz
jl
sti
dec
mov
mov
sbb
sbb
sub
repnz
sbb
add
addr16
push
add
insb
sub
mov
jecxz
lret
je
dec
repz
xor
jo
cwtl
ljmp
mov
ret
cwtl
shrl
sbb
leave
inc
sbb
scas
xchg
insl
ljmp
gs
stos
pop
ret
outsb
enter
mov
ficompl
inc
xchg
jb
arpl
int
lcall
sbbl
out
cltd
mov
arpl
xor
jbe
mov
popf
xor
sbb
xchg
xchg
pop
arpl
mov
or
stos
fdivrl
ret
popf
dec
scas
fldl
lret
cwtl
mov
xor
mov
push
sub
cwtl
imul
xchg
or
adc
jp
mov
sbb
or
jnp
cli
mov
test
repnz
xor
dec
pushw
sti
mov
xor
repz
lahf
aad
push
jle
jp
mov
cwtl
ljmp
lcall
repz
pandn
and
stos
and
mov
or
sub
aas
mov
cli
int3
or
movsl
jg
iret
cli
lcall
mov
mov
sbb
arpl
add
repnz
sbb
in
sbb
and
lcall
fwait
add
xchg
mov
test
repz
add
mov
add
imul
fwait
arpl
sbb
dec
xor
and
xchg
repnz
xorl
ret
cli
xchg
test
fwait
iret
shll
xchg
ret
test
jl
dec
mov
shll
pop
arpl
jb
mov
repnz
sbb
stc
push
fcoms
mov
dec
js
mov
mov
sahf
stos
inc
adc
stos
jo
daa
test
lcall
arpl
cwtl
cmp
or
jp
insl
mov
sbb
pop
jl
dec
and
xor
add
ret
sbb
pop
adc
inc
das
sbb
push
lret
fimull
mov
rclb
test
into
inc
pop
popf
mov
xlat
push
dec
ret
or
loop
or
arpl
push
subb
fsts
pop
mov
xchg
or
add
cmpl
ret
xor
pop
mov
repnz
dec
mov
dec
pop
jmp
inc
mov
jp
sahf
stc
or
xchg
push
cmpsb
jl
fcmove
cmc
push
sbb
cmp
inc
js
sbb
lret
jp
dec
fpatan
fsubs
pop
dec
popf
push
ficompl
pop
and
fcmovne
fisubs
mov
xor
push
decl
jb
mov
bound
scas
mov
faddl
mov
fsubl
pop
sub
mov
inc
ljmp
inc
push
ret
sbb
flds
inc
test
cmc
sbb
add
dec
stos
shlb
or
jo
jne
xor
dec
dec
dec
loop
cwtl
adc
repnz
dec
inc
ljmp
lret
or
fldcw
sub
stc
sub
les
cld
mov
dec
dec
and
lret
test
lahf
adc
movhlps
mov
mov
iret
mov
cmp
mov
test
sbb
jno
xlat
sahf
push
pop
push
adc
stos
cli
add
cmp
dec
repnz
jno
repnz
and
cmp
outsl
mov
dec
aam
mov
xchg
in
lcall
xchg
ljmp
shrb
ljmp
sub
cltd
inc
stos
inc
ret
popa
adc
sbb
or
push
dec
fisubs
jnp
jg
pop
jmp
out
mov
lret
js
lds
xor
repnz
jmp
mov
or
cli
aam
imul
mov
push
lcall
push
inc
outsb
movsb
imul
in
cmp
mov
push
subl
loop
mov
fisubrs
mov
jge
sub
adc
adc
mov
xchg
jge
fmull
pop
mov
fwait
jl
sub
dec
pop
cli
sbb
sbb
mov
dec
mov
mov
lea
fcmove
push
adc
call
inc
loopne
lret
stc
adc
repnz
jb
popl
jae
mov
mov
jp
imul
sub
ss
mov
test
dec
push
shrl
ret
fidivrl
mov
lcall
xchg
out
xchg
mov
js
ljmp
and
lods
and
fldenv
in
sub
scas
movsl
rol
cmp
xchg
xor
inc
pusha
pop
mov
popf
adcb
sub
cmp
dec
mov
loop
andb
mov
aam
mov
sbb
dec
ljmp
dec
leave
sub
adc
push
incl
add
adc
imul
loopne
jge
aas
adc
xor
push
ljmp
lcall
imul
mov
xor
jnp
repz
lcall
outsl
sbbb
ljmp
dec
sub
mov
cmp
sub
cmp
sbb
pop
push
sub
jb
lret
xor
adc
xchg
mov
xor
and
pop
mov
into
xchg
jg
adc
iret
xchg
and
mov
push
or
adc
adc
ljmp
and
les
sahf
mov
pop
sarl
fists
test
adc
xlat
mov
arpl
cmp
dec
repz
sahf
and
in
push
imul
inc
or
out
xchg
and
sbb
adc
sahf
fimull
adc
and
je
adc
lret
sbb
jae
iret
dec
lret
aas
dec
int
adc
add
adc
or
fidivl
push
sbb
cmpsl
sbb
imul
cmp
aas
xor
gs
or
add
sbb
or
repnz
dec
lret
lret
sbb
aas
pop
fwait
loopne
adc
bound
rorl
inc
pop
rolb
ret
ret
into
shl
ret
repz
adc
lcall
pop
cli
sub
and
aas
sub
mov
add
test
sub
dec
gs
xor
sbb
ss
dec
mov
in
xor
mov
shll
jae
jmp
stos
cli
jg
fisttpl
lret
jecxz
loope
and
adcb
not
sbb
dec
sti
lahf
test
clc
rcll
notb
xor
std
stc
mov
pop
lret
lahf
ret
sub
xor
sbb
pop
xchg
mov
arpl
jp
gs
les
ja
mov
aaa
push
inc
or
xchg
cwtl
adc
jl
dec
mov
mov
mov
push
and
push
lret
xor
adc
dec
dec
jmp
sbb
cwtl
sub
push
sub
lcall
xor
loopne
xor
leave
dec
mov
inc
pop
cmp
test
dec
push
inc
mov
mov
mov
pop
repz
mov
jmp
sub
lret
jo
incl
jecxz
dec
ljmp
add
dec
jecxz
mov
or
or
mov
add
jp
mov
cmpl
inc
sbb
cmp
bound
in
lock
ljmp
dec
dec
cli
mov
jo
lods
xchg
mov
cwtl
decb
xchg
and
cmp
sti
dec
es
inc
dec
xor
repz
mov
jmp
dec
inc
mov
adc
mov
insb
dec
les
lret
dec
jle
mov
lods
dec
push
adc
outsl
loop
jecxz
sbb
fwait
cmp
mov
add
mov
adc
push
ret
or
cli
test
xor
fidivs
cmp
ljmp
inc
add
decl
mov
iret
lcall
jb
and
dec
lret
ljmp
dec
lret
xor
fistps
fcmovne
cmp
xchg
aaa
ret
sbb
inc
movsb
dec
imul
inc
scas
sub
rorb
mov
cld
adc
xor
xor
xchg
test
in
fmuls
out
scas
fwait
pop
push
adc
mov
mov
jp
imul
add
ds
add
inc
pop
jmp
ljmp
pop
sbb
in
mov
ljmp
sbb
xchg
int
lods
xor
xchg
rorl
mov
rcll
stc
out
mov
pop
xor
clc
mov
mov
cmpsb
dec
jmp
adc
lret
ja
stos
sub
lret
mov
dec
test
pop
fimull
push
addb
fimull
or
push
repnz
mov
aad
ficoml
stos
ljmp
inc
mov
ret
jmp
jo
adc
cmp
cli
sub
ret
test
xor
xchg
sti
add
in
add
rcrb
lret
sbb
dec
xchg
in
arpl
dec
fwait
pop
sub
xchg
mov
adcl
inc
imul
inc
dec
stos
sbb
sbb
xor
cmpsb
dec
lret
jne
mov
adc
enter
mov
fisubrs
es
adc
movsl
sub
lahf
mov
divl
js
call
adc
sbb
xor
xor
subb
mov
imul
imul
push
pop
icebp
adc
push
sbb
loop
xor
xchg
jecxz
fucom
test
cs
adc
int3
mov
sbb
fstps
movsl
and
mov
es
jle
les
push
ljmp
mov
xor
jae
sub
pop
lahf
arpl
dec
sub
movsl
lods
rcrb
add
inc
adc
sub
leave
sub
sbb
and
xor
rcll
ss
shl
xor
inc
into
xor
repnz
das
mov
adc
lret
lret
loop
flds
das
mov
flds
mov
cmpsb
inc
daa
mov
mov
inc
sti
pop
inc
mov
adc
mov
sti
addl
push
mov
adc
cmp
ljmp
das
test
lock
or
icebp
push
sub
mov
sub
imul
imul
jae
pop
push
rcrb
ja
mov
add
dec
and
mov
lods
lds
and
mov
pop
fsts
sbb
and
adc
js
jp
xchg
adc
mov
pop
dec
mov
lods
push
push
jl
daa
repnz
dec
mov
sbb
dec
jge
push
jb
lret
fstp
pop
cmp
loopne
xor
shlb
mov
mov
daa
lret
mov
sub
insl
dec
jae
jp
ret
into
ret
adcl
cli
mov
dec
mov
mov
pop
pop
mov
jb
adc
mov
arpl
icebp
repz
mov
dec
inc
pop
push
lcall
jno
xchg
mov
call
xchg
and
ret
sbb
ret
inc
mov
jmp
adc
ret
lds
call
adc
adc
mov
movsb
mov
mov
or
jne
repnz
stos
lds
mov
shll
lods
popa
clc
adc
or
dec
mov
dec
push
xchg
in
mov
adc
inc
pop
sub
adc
fsubs
js
mov
dec
dec
push
ficoml
xor
push
idiv
lret
jns
mov
jo
ss
xchg
jo
sbb
mov
push
fisubs
cwtl
loop
mov
mov
push
adc
jns
fcom
xor
jl
and
sbb
sub
pop
adc
sbb
adc
dec
fstpt
mov
sti
cltd
xor
outsl
mov
sbb
xchg
enter
push
movsb
test
lret
adc
cmp
enter
inc
inc
jle
arpl
pop
adc
in
lret
popa
mov
adc
test
mov
push
sub
gs
fistpl
loope
mov
xor
lahf
mov
jnp
loopne
cli
jp
xchg
fdivrl
shlb
repnz
dec
sub
ret
sub
dec
ret
movb
lods
lahf
pop
xchg
sub
adc
fs
mov
pop
sub
rcrb
fsubrl
ret
adc
push
or
and
sti
into
dec
push
pop
jecxz
pop
cwtl
jecxz
pop
jo
xchg
in
jmp
mov
adc
dec
ljmp
fidivrs
loope
mov
push
cmp
lcall
dec
and
add
push
xor
scas
or
mov
mov
ss
mov
pop
lret
iret
sbb
mov
loop
add
lds
stos
push
jecxz
sub
inc
dec
jle
sbb
repz
pop
jmp
push
inc
dec
sub
pop
ja
imul
ficompl
aaa
xor
cwtl
sti
mov
bound
sbb
jmp
cs
jae
sbb
xor
andl
dec
imul
or
idivl
sub
mov
aad
dec
inc
ljmp
inc
mov
lret
sbb
fldcw
mov
jo
cmpsl
jae
xchg
bnd
mov
popf
xor
jnp
adc
dec
adc
ljmp
mov
gs
jp
adc
loop
xchg
and
lahf
fcoml
and
mov
decl
loopne
inc
xchg
jl
jb
sub
and
mov
mov
sub
mov
xor
add
mov
repz
dec
sbb
mov
arpl
sbb
orl
popf
arpl
orl
and
jnp
jb
xor
mov
and
jnp
loop
jae
adc
sbb
adc
arpl
xchg
popf
fcomip
leave
xor
es
sbb
es
jns
jp
pop
or
and
xor
inc
lret
jo
inc
test
jo
add
mov
js
call
pop
and
mov
pop
push
and
arpl
dec
jmp
out
test
ret
inc
mov
decb
arpl
iret
mov
xchg
pop
add
pop
sub
jae
dec
js
ljmp
loop
test
and
int3
jg
jns
pop
data16
js
repz
and
ss
ss
leave
push
imul
add
mov
lcall
arpl
and
imul
cli
dec
jb
jnp
fidivrs
es
push
adc
imul
jecxz
mov
stos
jns
js
jp
outsl
pop
jp
xchg
sahf
add
js
cli
push
pop
loop
cwtl
jb
lret
ret
sub
js
jbe
sub
adc
sub
sub
test
push
xchg
jb
lret
sbb
lds
push
aad
dec
push
xor
pop
sbb
dec
adc
je
arpl
mov
cli
test
ret
jno
lock
dec
bound
adc
push
int
cmp
jg
jmp
jno
lock
mov
stos
into
ret
adc
pushf
jge
out
cmp
add
rcrb
push
xchg
call
lret
subl
adc
jae
add
and
lcall
add
mov
test
xorb
sbb
xchg
pushf
or
repz
sub
jno
jb
loop
adc
adc
stos
ljmp
cmp
call
lret
adc
ljmp
mov
ret
lret
fisubl
arpl
or
iret
mov
cmp
sbb
xchg
mov
or
jo
jne
mov
imul
pop
adc
shll
nop
lock
fstpt
and
inc
adc
or
xchg
mov
dec
mov
adc
push
cmpb
loop
out
mov
andl
jecxz
mov
push
cmpsb
sub
mov
adc
jmp
jg
imul
sbb
js
pop
pop
adc
xor
inc
jne
cs
sbb
icebp
lcall
mov
jnp
jnp
and
gs
mov
or
cmp
mov
out
arpl
and
inc
push
add
imul
and
jae
ds
and
andl
stos
lahf
pop
jns
addr16
sbb
loop
aas
sbb
dec
and
dec
jae
fwait
es
xchg
dec
ret
fsqrt
ret
dec
in
and
dec
jnp
pop
mov
or
shlb
jmp
ficoml
lret
mov
sbb
pop
dec
ficompl
cmp
mov
sbb
sub
add
jae
ret
dec
ljmp
fimull
inc
mov
cli
dec
cli
push
mov
lret
jl
mov
mov
mov
sbb
sub
sbb
sbb
cli
dec
mov
pop
fwait
jp
inc
mov
jb
fstpt
out
mov
stos
dec
jnp
jp
dec
repz
fwait
test
ret
ljmp
clc
push
sbb
fstps
xchg
mov
mov
pop
lret
jp
inc
mov
sbb
mov
repnz
lret
jl
inc
dec
mov
arpl
jp
ljmp
ss
ret
push
xor
dec
stos
mov
cli
mov
xor
and
mov
mov
jle
mov
sub
out
pop
nop
adc
pop
mov
sahf
adc
sbb
cli
sbb
push
add
jl
cld
jge
repz
dec
sbb
sub
jl
mov
jecxz
pop
sbb
and
jnp
inc
sti
mov
imul
fstp
jns
xor
clc
mov
mov
es
mov
dec
dec
add
cmp
cmp
dec
fwait
jbe
mov
xchg
enter
xor
outsl
dec
es
pop
inc
jp
push
sbb
mov
mov
addr16
mov
stc
or
sub
mov
and
fists
push
and
xor
xchg
push
in
or
push
stos
dec
ret
hlt
or
neg
add
push
mov
enter
xor
fimull
rorb
xchg
dec
pushf
aaa
out
mov
push
dec
mov
pop
clc
mov
and
sahf
lock
xor
mov
jp
pop
lret
cmpl
jge
clc
sbb
int3
lock
adc
rcr
or
sarb
xchg
jecxz
mov
or
add
lcall
rorb
mov
es
mov
lcall
fwait
inc
add
rcl
push
sar
sbb
xor
shl
rclb
sbb
notl
mov
scas
orl
jp
mov
cmp
dec
fmul
fst
stos
sti
jne
out
daa
pushf
adc
or
out
cmp
xor
or
jo
imul
dec
mov
ficoml
inc
into
test
pusha
cmp
cli
push
in
fsub
inc
jmp
pusha
and
cmp
js
filds
cmp
sbb
sti
sti
cli
mov
add
pop
pop
xchg
pusha
in
jecxz
jnp
sbb
push
cmp
mov
mov
jp
cmp
jmp
jp
inc
not
jp
movsb
pop
shlb
pop
cmpsl
pushf
insl
pusha
repnz
mov
dec
inc
push
xchg
ret
in
dec
adc
dec
dec
sub
mov
into
inc
sub
sub
or
pop
push
cmp
xchg
xor
cmp
lods
inc
jmp
je
mov
jecxz
rol
ljmp
lock
iret
mov
add
in
inc
mov
jnp
sbb
ret
js
dec
dec
and
dec
push
out
add
cmp
loop
jge
sub
mov
dec
hlt
insl
mov
cmp
maskmovq
mov
pmaddwd
pop
dec
sarl
pop
pop
js
dec
inc
xor
dec
fisttpl
or
dec
adc
je
popf
ds
xchg
ljmp
sahf
aam
add
mov
dec
ljmp
sub
xchg
scas
ret
cmp
lock
or
adc
ret
fucomp
pop
pop
inc
ret
rol
xchg
outsb
or
ret
iret
lahf
imul
fdivp
pop
or
repnz
sub
sbbl
push
mov
or
movl
adc
repnz
lock
ficoml
fisubrs
mov
push
leave
dec
jp
pop
sub
xor
outsb
pop
test
aam
xchg
push
jge
inc
lock
jo
jns
jne
sbbl
sub
dec
ss
call
inc
lods
aaa
pop
inc
xor
scas
pandn
push
sub
idivl
cmc
dec
jae
dec
fwait
and
and
test
sub
stc
jb
es
jae
dec
pop
push
daa
repz
xor
mov
pop
hlt
mov
rcrl
dec
arpl
sbb
jns
sub
mov
sti
or
imul
mov
and
lret
pop
jae
ror
dec
mov
xor
jb
cmp
movsb
repnz
sti
mov
jge
mov
pushf
jp
mov
xorl
mov
mov
jle
mov
pop
xor
jmp
ret
dec
repnz
mov
pop
lret
mov
dec
sbb
push
add
insl
push
adc
jbe
lcall
mov
mov
jl
mov
push
inc
sbb
js
mov
adc
cmpsb
daa
enter
xorb
mov
dec
or
lea
push
mov
clc
sbb
stos
push
mov
ds
add
clc
std
push
xor
dec
jle
lods
mov
or
add
xor
arpl
sahf
inc
sub
in
bound
out
imul
mov
rcrb
dec
jmp
repnz
sbb
xchg
fimuls
sbb
and
ret
in
mov
pop
jmp
inc
dec
fisubrl
or
mov
sbb
inc
dec
mov
rolb
pop
loope
jl
sbb
fsubs
inc
sbb
lcall
mov
cmp
scas
call
add
mov
dec
mov
cmp
inc
inc
cltd
ret
hlt
sbb
sub
cmpb
sahf
ret
ret
cmp
xor
inc
mov
dec
mov
repnz
bnd
xchg
arpl
stos
sahf
fsubl
hlt
inc
dec
mov
mov
stos
stos
lret
mov
ret
add
push
sub
ja
mov
dec
stos
fcoms
jbe
and
xor
clc
xor
jns
mov
mov
mov
jecxz
jg
enter
inc
loope
ja
lret
sub
inc
sbb
stc
mov
es
mov
pop
jle
stos
loop
lret
sbb
incl
enter
ret
inc
inc
add
les
xor
jle
mov
cmp
js
xchg
and
or
dec
mov
sub
adc
ror
arpl
mov
sub
and
sti
and
ficoms
mov
bnd
xorl
mov
fldt
js,pn
mov
loopne
xor
ds
or
clc
imull
cmpsb
testb
mov
lea
mov
cli
pop
int
arpl
mov
stos
int
ret
icebp
and
dec
lahf
dec
sbb
lret
inc
sbb
inc
sahf
movsb
shlb
cmc
lock
sbb
jl
sbb
ror
dec
das
mov
ret
ret
mov
mov
or
push
ret
sbb
mov
mov
xchg
add
add
shll
mov
lret
sbb
dec
fiadds
dec
push
clc
iret
jp
rorb
ret
or
repz
pushf
xor
mov
ljmp
pop
rclb
jl
shll
icebp
inc
mov
repz
stos
mov
pop
dec
lret
mov
dec
sub
add
mov
cmpl
sbb
enter
pop
push
mov
jp
dec
into
xchg
je
in
push
fiaddl
dec
pop
mov
inc
jno
cld
cwtl
in
out
test
push
xchg
and
pop
clc
mov
inc
out
inc
cmpsb
js
idivb
jle
xor
test
adc
sbb
les
dec
stos
lods
mov
loop
in
es
daa
fwait
into
xchg
aas
mov
sti
or
inc
add
jae
repnz
jnp
cmpsb
sub
and
jp
aaa
add
pop
sbb
ja
push
icebp
dec
bound
and
iret
sub
fidivrs
or
js
insl
mov
sbbl
dec
insl
mov
cmp
xor
dec
cmp
fldt
repnz
sti
adc
push
mov
cmp
pinsrw
mov
cli
js
jno
loop
sub
xor
dec
dec
jb
cmp
fsubrl
data16
scas
subb
dec
stos
je
jle
mov
loop
adc
jp
cmp
out
in
inc
jp
add
or
and
clc
lret
inc
cmp
sub
mov
cli
jp
movsl
push
or
insb
jmp
sbbl
inc
lcall
ja
pop
stos
inc
lcall
xor
sub
ret
push
mov
lcall
stos
cmp
test
jnp
arpl
adc
cmp
pop
imul
pop
mov
mov
ljmp
sub
adc
add
lcall
lret
pop
and
arpl
mov
xor
cli
enter
cmp
les
inc
frstor
sub
ret
ja
dec
sub
mov
stc
scas
jmp
cmp
fldcw
mov
sbbl
jo
fmull
inc
out
sub
lcall
shrb
aaa
mov
pop
or
xor
sbbl
xor
lock
clc
pushf
inc
mov
lods
mov
sub
fwait
push
cld
outsb
call
dec
sbb
fidivl
adc
cwtl
bound
cmpsb
add
xchg
and
hlt
js
scas
xchg
mov
out
aad
mov
stc
push
mov
ss
cmp
sarl
xor
and
or
and
jg
into
mov
pop
je
push
shlb
cmp
in
mov
int3
cmp
insb
fidivrs
adc
xchg
sub
filds
ljmp
pop
sbb
lods
mov
sahf
add
lret
push
and
push
divl
xchg
sbb
rcrb
flds
jmp
int3
shrl
push
pushf
mov
mov
push
sbb
movsl
or
sub
outsb
lock
inc
cmp
mov
pop
sarb
sbb
jp
push
mov
mov
pushf
jo
rcrb
push
mov
out
sbb
ret
bound
jo
cmp
aad
std
sahf
pop
ret
and
int
divl
decb
push
push
icebp
mov
or
jno
or
lret
sbb
jmp
lock
sub
or
cmpb
add
cmp
push
mov
pushf
cmp
mov
xor
leave
fldenv
push
sbb
xor
scas
pushfw
cmp
sahf
outsl
or
jns
add
cmpsl
sub
dec
or
xchg
loop
lock
cli
sub
or
xchg
pushf
iret
js
inc
cmpsl
mov
in
pop
das
shll
jb
mov
push
lods
add
cmp
or
inc
clc
jno
sbb
int
mov
dec
add
or
sarb
add
test
loop
shl
inc
movsb
jecxz
cmp
sbb
fsubrp
sbb
mov
cs
stos
pop
ljmp
test
addb
jle
mov
cmp
jp
mulb
or
cwtl
dec
xor
icebp
xchg
sub
inc
pop
xchg
orb
out
into
push
pop
mov
cli
int3
rcll
jmp
add
repnz
mov
ret
mov
ret
cmp
cld
and
jnp
mov
inc
jbe
repz
sti
mov
hlt
in
cld
aam
jae
pushf
fs
out
jne
dec
mov
mov
push
xchg
bound
ret
push
sub
aas
xor
dec
mov
mov
pusha
mov
pop
or
aas
rol
mov
or
mov
pop
sbb
mov
les
clc
pushf
stc
dec
add
sub
xchg
dec
sub
push
dec
fdivp
fwait
daa
cmp
jg
jecxz
add
mov
cmp
loope
jns
fidivrs
sub
or
ret
jns
dec
addr16
jecxz
mov
and
cli
cmp
test
xlat
mov
lods
sbb
push
pushl
mov
repnz
pop
jecxz
ret
inc
push
dec
repnz
add
neg
jb
jmp
shlb
push
dec
xor
xchg
cmpsb
call
mov
test
in
mov
fcoml
iret
and
and
xchg
outsb
push
jp
stos
lahf
lret
jno
push
dec
jp
dec
nop
mov
rcll
xor
pop
push
mov
dec
and
sbb
and
xchg
loop
inc
xchg
lods
stos
sub
mov
dec
out
mov
adc
mov
dec
rclb
repnz
fdivs
leave
dec
sub
int3
sub
push
mov
add
inc
mov
push
sar
ljmp
dec
jb
call
loop
mov
jl
mov
pop
push
fsubl
dec
cmpsb
lods
fnstsw
mov
jl
mov
push
xor
mov
fidivl
mov
adc
scas
dec
jb
add
push
sbb
ror
ret
or
dec
js
fdivr
rorl
cwtl
adc
xlat
sbb
xchg
out
imul
call
xchg
mov
push
inc
pop
adc
mov
inc
cld
int
push
mov
lcall
lods
rcll
or
add
xor
xchg
fcmovne
adc
cmp
ljmp
inc
and
stos
dec
mov
ret
pushf
mov
jl
mov
push
inc
sbb
dec
xchg
clc
or
inc
pushf
test
pop
jg
mov
mov
xor
xor
mov
jae
xchg
mov
and
fdiv
and
dec
add
aas
mov
mov
mov
jnp
scas
sub
dec
cwtl
jecxz
adc
dec
dec
cwtl
jecxz
push
or
pushl
inc
incb
lods
mov
push
out
lods
jno
call
fsubp
add
mov
out
sub
and
jno
push
pop
js
rclb
insb
stos
ljmp
cmp
add
jge
xor
leave
dec
push
aas
pop
and
les
pop
dec
adc
pop
in
mov
sahf
nop
lret
sbb
into
mov
js
jg
popf
sub
inc
pop
jne
cmp
movsl
cmp
adc
fwait
repnz
ficomps
or
mov
or
cmpsb
dec
jno
test
lret
lret
mov
ret
inc
jl
push
cwtl
adc
xor
jg
cmp
aas
cmc
incl
popa
sbb
and
leave
bound
mov
ja
mov
dec
stos
fcoml
inc
dec
cmpsb
add
jns
sbb
lret
mov
xor
lcall
repnz
aam
dec
cmc
lret
mov
cmp
adc
icebp
cmp
mov
lods
aas
les
jecxz
xor
jne
cmp
cmp
shlb
out
movsb
or
cmpsb
insb
jle
pop
fnsave
push
push
sub
pop
addr16
xchg
jo
mov
repnz
cmp
adc
add
jae
lock
sar
adc
xor
mov
enter
sbb
inc
mov
xor
dec
shlb
clc
inc
push
push
subb
arpl
outsb
add
notb
je
bound
mov
imul
loop
sbb
adc
lock
std
and
xor
push
in
jne
cmp
cmp
les
dec
lea
sbb
pop
mov
imul
mov
bound
sbb
jp
pop
jl
cmp
xor
dec
jne
push
leave
cmp
inc
mov
jecxz
and
in
push
mov
cmc
push
aas
jbe
inc
xlat
jecxz
and
rcr
andb
inc
xchg
fdivs
iret
jmp
cmp
mov
inc
fdivrs
in
mov
inc
out
mov
lret
fistl
cmp
xor
jecxz
dec
enter
mov
fsubl
cli
or
adcb
out
addr16
and
orb
mov
cmp
mov
mov
sbb
insl
fistpll
mov
stc
xor
jo
fcompl
mov
fcmovu
xor
xor
int3
arpl
fs
loop
cmp
out
sbb
xor
sbb
push
sarl
mov
cmp
push
les
pop
jo
jge
in
mov
int
movd
xchg
xchg
jno
xor
mov
jns
mov
mov
sbb
sbb
imul
cmp
inc
mov
pop
cmpl
sar
outsl
jp
cli
pop
prefetch
add
scas
adc
push
push
sub
ljmp
pop
inc
xchg
lret
pop
repnz
adc
aas
sbb
pushf
sbb
dec
hlt
xchg
cmp
jl
add
pop
hlt
push
xor
loop
test
push
jno
ret
dec
mov
lock
loopne
jo
add
mov
jle
xor
xchg
mov
daa
dec
mov
negl
fcmovne
call
sub
cltd
mov
mov
jb
mov
inc
adc
test
sbb
scas
cmpsl
jae
out
adc
enter
or
jp
iret
xor
jp
adc
jp
arpl
mov
subb
adc
add
push
mov
jp
ret
adc
inc
jp
pushf
loop
sbb
sbb
pushf
ljmp
scas
into
repz
mov
mov
mov
orb
js
mov
addb
xchg
push
iret
add
mov
repnz
or
fisubrl
lret
test
pop
shrb
pop
and
pushf
mov
inc
scas
push
xor
ret
fisubl
out
jae
mov
lret
mov
and
stos
xor
lcall
mov
jno
xor
cmpsb
mov
jp
adc
les
sahf
in
sub
jg
mov
xchg
xchg
sbb
push
cld
xchg
pushf
cmp
ror
xchg
fmull
jo
hlt
aaa
jp
dec
lods
in
stos
das
ja
xor
push
xlat
lock
idivl
cmp
out
inc
das
mov
xor
inc
mov
adc
xor
in
or
adc
imul
xchg
cmp
sbb
rol
sub
pop
adc
xchg
sbb
test
jb
pop
xor
mov
int3
add
adc
stc
shlb
imulb
sbb
jp
pop
sub
adc
xchg
dec
sub
out
jl
test
daa
push
inc
push
or
push
mov
inc
lcall
jg
adc
in
aas
fcmovbe
fidivl
dec
cwtl
sahf
mov
into
or
inc
lret
inc
rol
jb
mov
lret
dec
inc
lret
inc
rolb
inc
cmp
int3
in
js
sub
mov
and
sbb
adc
jnp
lods
pop
xor
cli
sbb
cmp
ficompl
dec
mov
loope
ret
jns
daa
mov
loopne
inc
jle
xor
test
int3
jp
sub
cli
push
adc
cmp
mov
lcall
cmp
loopne
loope
mov
ljmp
pushf
jb
cmp
cmp
adc
fsubs
fcompl
push
or
jbe,pt
call
cmpb
mov
pushf
sub
push
cli
fstpt
or
mov
xor
fsubp
mov
jb
iret
mov
inc
or
push
mov
rorb
dec
push
lret
inc
imulb
flds
pop
loop
outsb
jle
xchg
out
or
dec
adc
mov
ret
sahf
aam
cmp
in
pop
stos
das
sub
sbb
xchg
sub
in
push
mov
sbb
mov
jecxz
stos
mov
mov
pop
and
stos
xchg
ficompl
mov
mov
stos
lcall
xor
stos
sbb
lret
mov
sub
sarb
inc
sbb
pusha
xor
aas
jb
in
out
jne
lcall
stos
jg
sbb
sbb
xlat
lahf
sub
cmp
or
mov
mov
inc
mov
testb
ljmp
jns
cmp
mov
push
fidivrl
shlb
pop
cmp
or
cmp
in
inc
fiaddl
ret
jle
mov
jmp
aam
adcb
fistpl
pop
les
cld
in
mov
push
aad
xchg
push
mov
xchg
lret
cmp
inc
enter
call
fsubrl
cmc
jecxz
cld
mov
aas
pop
sub
adc
pop
xchg
bound
and
addr16
sub
pop
mov
push
push
pop
pop
cmpsl
and
ljmp
inc
push
stc
call
jp
inc
fildll
mov
adc
pop
push
es
pop
mov
push
sbb
pop
jns
movsb
outsb
stos
fidivs
push
adc
lock
cwtl
jp
incb
aas
dec
inc
cmp
lret
sub
pop
jp
loop
aaa
pop
out
cmpsl
imul
ss
lret
dec
sbb
dec
mov
jb
lret
jo
insb
mov
jle
adc
pop
aas
in
mov
xchg
lcall
xchg
nop
lcall
repz
or
mov
aas
pop
mov
add
fmuls
imul
jae
enter
insl
ljmp
je
xor
sti
rorb
scas
scas
cld
test
or
add
add
fisubrs
dec
sar
sub
mov
out
ss
mov
adc
enter
sbb
test
pop
and
jb
adc
fstpt
push
negl
push
loop
or
push
and
xorb
pushf
xor
stos
inc
repnz
mov
pop
mov
jb
orl
cmpsl
test
or
lret
and
mov
pop
push
mov
push
inc
jno
or
lret
pop
pop
das
adc
cld
shll
adc
mov
repnz
lret
xorb
dec
inc
mov
xor
arpl
hlt
and
adc
psrlw
inc
and
mov
dec
and
stc
fildll
mov
divl
mov
xchg
adcl
mov
jp
adc
and
sbb
push
jae
inc
mov
adc
addl
push
jp,pt
jno
or
jae
mov
lahf
pop
inc
sbb
lock
jg
pop
sub
adcb
dec
cmpsl
imul
pop
fwait
mov
push
pop
mov
jns
lret
jno
jl
mov
adc
repnz
push
adc
bound
into
sbb
pop
insb
imulb
pop
or
pop
dec
push
shl
das
or
call
mov
or
leave
mov
jp
inc
sbb
mov
adc
mov
push
pop
jo
lock
mov
pop
xor
scas
xor
push
xchg
add
pop
lcall
scas
cmp
push
and
inc
ds
adc
sbb
pop
data16
jo
push
shrl
scas
lahf
adc
add
orl
pop
cs
inc
mov
ds
pop
movsb
ljmp
jle
mov
sub
xor
push
call
mov
pop
sbb
dec
jecxz
mov
pop
add
sbb
and
pop
rorl
data16
inc
jl
lock
arpl
mov
adc
or
push
xor
loopne
cmp
test
sbb
aas
push
adc
lock
fcoms
cltd
loop
xor
sub
lock
add
iret
or
sub
mov
dec
mov
mov
sbb
mov
cmpsl
xchg
xor
sbb
pusha
cmpl
pop
fcompl
xchg
sbb
pop
arpl
jp
dec
xor
push
mov
ds
cwtl
adcb
lods
arpl
xor
sahf
adc
dec
jg
fidivrs
sbb
lcall
in
xor
sub
dec
lods
inc
in
fdivrl
sahf
dec
adc
or
repz
pop
cli
cmp
stos
jne
mov
mov
jo
scas
shll
lret
inc
mov
fcoml
enter
jp
sbb
inc
leave
add
xor
dec
jmp
sahf
mov
mov
punpckhbw
inc
sub
cmpb
mov
sbbl
je
sbb
ficoms
mov
dec
push
pop
and
out
jp
aaa
sbb
jge
inc
adc
dec
fidivs
repnz
ljmp
in
push
adc
adc
adc
mov
ljmp
xor
test
faddp
sbb
dec
mov
cwtl
sbb
adc
mov
repnz
rcll
inc
fadd
or
dec
shr
cs
jo
pop
fmul
testb
fistps
mov
xor
push
mov
or
stc
les
ljmp
sahf
pushf
bound
insl
add
iret
cmpb
call
notl
repnz
ret
jae
jae
dec
sub
add
mov
sbb
cli
insb
push
movl
rcll
popf
pop
daa
mov
popa
push
fwait
cmp
dec
mov
xchg
cmp
mov
inc
jno
inc
je
jb
jecxz
js
pop
sub
sbb
dec
pushf
dec
inc
sub
dec
mov
sbb
mov
jp
sahf
int
add
jecxz
xchg
into
jp
rcrb
ds
mov
push
push
jp
xor
in
sahf
pop
cwtl
cmp
mov
lret
mov
push
sbb
or
call
push
loope
iret
dec
adc
out
inc
adc
mov
fsubrl
lods
lcall
mov
xor
out
push
sahf
sbb
and
mov
pop
xchg
push
adc
jae
bound
pop
jnp
cld
cmp
mov
xlat
cli
inc
jb
imul
xchg
int
fwait
jp
jb
mov
xor
sbb
mov
enter
dec
out
or
ss
cmp
mov
jmp
pop
jnp
inc
cmp
loop
sbb
cs
jno
add
jle
and
loop
jbe
lret
inc
pop
lret
mov
jl
sbb
popa
test
or
arpl
mov
mov
es
jae
sbb
mov
pop
sbb
jae
pop
insb
add
sbb
stc
je
es
adc
push
pop
jae
sbb
pop
jb
push
sbb
lcall
add
mov
jecxz
test
dec
out
mov
xor
repz
data16
jns
mov
sbb
sbb
mov
pop
lcall
lret
inc
inc
push
or
cli
je
ljmp
addl
cltd
mov
xor
mov
mov
adc
repnz
pop
outsl
sbb
mov
xchg
adc
repnz
mov
mov
xchg
clc
push
inc
sti
je
mov
xchg
sahf
in
sbb
push
inc
andl
outsb
cmp
pop
cmp
pushf
pop
inc
or
sbb
dec
scas
aaa
jp
leave
adc
xlat
iret
inc
push
inc
sbb
jecxz
hlt
pushf
inc
push
inc
in
sbb
test
stos
sub
loop
mov
adc
or
xchg
mov
cmpsb
sahf
cmp
test
neg
or
movb
dec
sarl
les
iret
cmpsb
sub
add
iret
cmp
jne
ljmp
mov
add
cmpl
daa
inc
lcall
dec
jo
sbb
fwait
and
sbb
jb
pop
daa
or
adc
mov
cli
fidivs
sub
mov
and
adc
popa
in
jp
sbb
mov
inc
pop
pop
ret
inc
inc
inc
sbb
mov
dec
sub
cmp
dec
sti
lock
jae
mov
sbb
ds
pop
jb
rol
ja
popw
adc
xchg
sub
pop
jle
fdivs
stos
movsb
mov
leave
sbb
lods
add
adc
sub
inc
fildll
dec
repz
sahf
cmp
pop
pop
push
mov
push
ss
cmpsb
sub
cwtl
mov
loopne
pop
in
sbb
jp
add
mov
dec
sbb
pop
xor
jb
es
adc
sub
or
dec
jl
mov
lea
pop
imul
lods
and
jb
ss
add
adc
jb
push
inc
xor
out
xchg
sub
push
pop
bound
mov
inc
dec
xchg
rorb
loop
mov
xchg
pop
sbb
mov
fsubrs
js
je
repz
mov
enter
mov
cmpsb
fwait
inc
sbb
lret
in
jae
adc
or
rorb
dec
ljmp
add
and
filds
popa
lcall
addr16
cmp
aaa
sahf
movb
and
cmpsb
sbb
iret
arpl
pop
loop
ljmp
pop
fidivl
jb
xor
jecxz
jo
lock
jle
adc
sub
xchg
inc
pushl
inc
mov
inc
hlt
mov
rcrb
cmp
xor
pop
call
xor
nop
pop
fmulp
push
jle
add
shrl
js
dec
ss
dec
add
repz
cli
and
jge
lcall
sbb
rorb
mov
xchg
or
dec
pop
mov
xchg
mov
mov
mov
or
pushf
cmpsl
push
divb
rclb
mov
mov
sub
push
xchg
inc
jb
push
or
mov
lock
xchg
imul
cmp
push
jle
dec
outsb
mov
imul
in
dec
xchg
sub
xchg
mov
repnz
pushf
ret
sti
test
sbb
jb
inc
push
lret
jns
pop
stos
xchg
stos
dec
inc
and
cmpsb
mov
pusha
or
into
cli
pop
loop
push
pop
add
jge
jo
dec
jnp
fwait
pushf
outsb
mov
dec
jp
test
xchg
ret
fcmovnb
ficoms
ljmp
les
mov
mov
xchg
lret
xor
xor
lea
sahf
xchg
inc
sbb
pop
adc
dec
lods
xchg
int3
cmp
daa
xchg
push
ficompl
push
test
andb
cmp
dec
cmpsb
pop
ret
aaa
sub
xchg
pushf
xchg
test
inc
adc
movsb
out
adc
sub
jg
ret
mov
sahf
iret
jp
add
test
mov
aam
test
orb
sbb
mov
lsl
fcmovne
in
arpl
test
outsl
movb
jae
dec
lds
or
xor
repz
stos
mov
mov
add
mov
add
fildll
jno
mov
jp
xchg
pushf
ljmp
rorb
push
outsl
pushf
xor
jo
cltd
and
sub
xchg
aaa
mov
inc
and
pop
mov
inc
sti
fwait
pop
push
mov
or
and
cmp
pop
adc
and
mov
cmc
mov
hlt
fsubl
pop
repnz
cwtl
xchg
scas
dec
fimull
adc
stos
mov
sti
imul
or
mov
push
xlat
in
mov
mov
inc
mov
xchg
cmp
scas
xor
pop
inc
mov
js
call
pop
jno
repnz
test
sbb
inc
imul
inc
stc
cltd
daa
dec
xor
daa
imul
mov
adc
rol
pop
xchg
xor
shlb
imul
and
sub
jl
xchg
jbe
mov
mov
sub
dec
and
jb
adc
cmpsl
pop
repnz
into
mov
hlt
outsb
imul
call
int
cmpsb
xor
cmpsb
out
push
sbb
cmp
mov
cli
mov
ficompl
mov
shlb
lcall
imul
mov
nop
push
inc
or
sbb
cwtl
jl
xchg
sbb
push
cli
pop
mov
xor
pusha
sahf
hlt
mov
or
inc
and
cli
jno
and
jb
lret
into
sub
fcmovne
sbb
or
sahf
scas
mov
or
pusha
xor
xchg
jno
dec
ret
sbbb
mov
mov
xor
mov
mov
pop
divb
dec
push
and
aas
icebp
lock
ljmp
sbb
mov
mov
inc
sub
cmpsb
jno
data16
cmp
push
into
mov
xchg
lcall
call
inc
mov
dec
out
dec
bound
mov
add
jo
lcall
andb
cmp
jnp
push
ljmp
mov
rclb
cmc
lcall
lret
js
ja
dec
xchg
sub
inc
lahf
xchg
pop
cld
mov
je
add
and
les
cli
stos
cld
xor
stos
lahf
mov
mov
stos
mov
dec
xorb
dec
push
jge
mov
lahf
cld
out
scas
lret
sbb
adc
xor
lret
repnz
dec
hlt
ja
loopne
push
sbb
dec
mov
pop
sahf
adc
test
bound
fincstp
push
test
dec
push
scas
mov
and
sti
lock
icebp
add
movsb
or
outsl
jge
out
ret
sbb
stos
daa
imul
lcall
cmp
stos
das
jge
cmpb
pop
adcl
fcompl
test
loopne
inc
notb
adcb
adc
adc
daa
sbb
lock
jle
inc
fcoms
or
push
sbb
mov
dec
fdivrs
sbb
mov
lea
fnstcw
push
rcrb
rolb
fisubl
fiaddl
add
mov
subb
and
dec
out
lock
lret
push
pop
rol
sub
dec
cmp
mov
ljmp
sti
lret
cwtl
xorl
and
cli
xor
adc
sub
cmp
mov
jae
ret
inc
fmul
incb
jl
push
fdivs
ds
mov
insb
xchg
in
hlt
or
xor
ds
out
dec
inc
jb
inc
aas
or
sbb
inc
loop
mov
dec
fwait
std
in
mov
dec
xchg
outsb
rorb
sbb
pop
cmc
movsb
xor
pushf
sbb
dec
sbb
mov
mov
cmp
ret
rclb
mov
out
outsb
pop
adc
lret
cld
ret
push
out
and
lahf
add
setae
sbb
jnp
testb
add
jp
add
sub
sbb
test
jae
pop
adc
mov
xor
dec
adc
sub
jns
repnz
xor
xor
mov
pop
add
cmc
sub
xchg
fwait
mov
fsub
scas
addb
ret
ljmp
inc
mov
jnp
sbb
mov
es
jb
xchg
scas
dec
incl
dec
xchg
jbe
or
rcr
mov
imul
lcall
push
mov
and
jb
jg
outsl
sahf
cmp
cmp
pop
sbb
jnp
hlt
adc
xchg
rorl
jb
adc
jb
sbb
ljmp
xor
jno
mov
sbb
xchg
and
lock
jmp
mov
xlat
sub
jg
shlb
mov
pop
loop
cwtl
or
dec
xor
pop
sub
jp
xchg
adc
add
pop
sbb
or
repz
loope
outsb
das
push
pop
sub
push
push
xorl
cmp
addb
add
imul
bound
stos
push
xor
popa
lods
daa
fwait
mov
jl
jnp
cmp
jb
stos
jo
cwtl
mov
mov
jo
inc
scas
fsub
jns
push
hlt
pop
ds
pushl
dec
xchg
test
iret
cs
xchg
scas
sahf
pop
mov
test
cli
jecxz
movsb
jne
adc
dec
lock
mov
push
mov
mov
sahf
out
js
jne
shlb
and
cmpsl
pop
mov
fidivl
jae
sbb
xchg
lcall
and
push
imul
arpl
dec
lods
xchg
cmp
push
inc
incb
push
ret
adc
das
mov
or
mov
adc
push
mov
jbe
jp
shrb
jecxz
push
pushf
mov
push
ss
push
mov
xchg
inc
jle
or
adc
das
add
cld
jne
sbb
roll
sbb
mov
sahf
or
lret
push
psubd
imul
jge
mov
aad
mov
dec
ret
enter
jmp
fwait
dec
xchg
sbb
cmp
pop
loop
icebp
push
xchg
les
mov
and
testb
mov
jo
push
xchg
clc
idivb
ficoml
mov
into
iret
pop
or
cs
xchg
pop
or
mov
sub
xchg
adcb
mov
adc
and
subl
in
add
jo
aam
mov
ret
mov
adc
mov
dec
xor
data16
into
adc
cs
fadds
popf
adc
cmp
ror
pop
rorl
les
lock
mov
pop
mov
enter
adc
xchg
fs
js
mov
pushf
into
and
or
loop
sahf
ret
xor
dec
sbb
subl
add
push
push
loop
repnz
subb
idivb
pop
jb
jmp
shlb
sbb
lahf
out
cmp
outsl
scas
xor
sbb
sub
and
mov
dec
add
sub
xor
pminub
mov
and
sbb
mov
jno
pushf
js
lahf
loop
xor
fnstcw
repz
push
or
pop
dec
pop
in
push
mov
pop
cmp
sub
xor
xor
mov
sbb
pop
fmul
sub
xor
mov
xchg
inc
sbb
jle
les
mov
dec
adc
nop
xchg
and
stos
xor
jns
cmp
enter
sti
pop
pop
or
mov
add
mov
xor
cmp
ficompl
lret
inc
push
mov
jae
push
aas
inc
jnp
jns
outsb
push
pop
popf
jb
cli
mov
es
jle
ds
dec
jmp
insb
cs
dec
subb
mov
loope
test
sbb
and
add
dec
dec
mov
insb
xchg
and
out
cmp
adc
pop
inc
sbb
movsl
or
fs
cmp
mov
or
mov
xor
mov
xchg
aam
lcall
clc
xor
dec
sbb
push
ret
push
sub
xor
das
cmp
sar
inc
dec
cmp
lods
pushf
pop
je
jb
dec
dec
pushf
sub
push
pop
dec
mov
fsubrs
jb
jp
adc
rclb
jb
ja
dec
pop
or
sbb
sarl
adc
mov
enter
je
mov
lret
push
mov
ss
in
mov
stos
clc
sbbb
push
sbb
push
loopne
inc
and
mov
lods
pop
bound
mov
mov
dec
cmpb
rclb
dec
aas
lret
fdivrs
and
lock
inc
jbe
mov
inc
ret
adc
pop
iret
or
xor
sbb
pop
pop
sub
dec
xchg
sub
ljmp
add
pop
and
jnp
jp
mov
pop
imul
add
or
xor
jno
adc
add
mov
push
sbb
mov
into
leave
push
mov
ds
pushf
and
fisubl
inc
inc
sti
pop
mov
in
and
dec
cmpb
or
push
push
pop
dec
dec
inc
inc
aaa
push
rcll
mov
jnp
es
fildl
fisubl
int3
sub
jl
jnp
cmp
fimull
mov
repnz
cmp
inc
mov
mov
out
stc
dec
mov
imul
cmp
cs
popf
jp
repnz
jg
sub
xor
mov
mov
mov
add
dec
fiaddl
cmp
outsb
mov
xor
sub
pop
inc
bound
cld
mov
sbb
lcall
or
xor
push
inc
xchg
xor
dec
ret
outsb
jg
sbb
sbb
jp
out
addb
pop
cmp
dec
inc
jp
aas
lcall
sbb
xor
insb
repnz
rcrb
stos
cmp
push
das
add
cmpl
dec
pop
mov
cmp
pop
pop
adc
cmp
ret
inc
fwait
pop
mov
or
xor
out
mov
lret
repz
sbb
mov
adc
ljmp
jp
pop
lret
inc
mov
rcrl
mov
into
sub
sbb
cmp
sbb
adc
pop
push
cs
mov
int3
cmpsb
xor
xchg
mov
push
sub
lcall
pop
dec
cmp
lret
xchg
or
push
inc
sbb
fwait
dec
jnp
jl
jnp
callw
cli
pop
addl
js
fwait
pushf
fidivrs
mov
mov
in
add
repnz
sub
lds
test
pop
and
xor
adc
mov
popa
and
sbb
xchg
pop
std
push
sub
inc
cli
push
call
mov
mov
pop
das
pop
mov
ds
fildl
and
out
push
sbb
cmp
adcb
jp
and
pop
movsb
cmp
arpl
xchg
jne
add
mov
and
cmp
inc
fwait
mov
or
and
push
sub
sarb
sub
mov
mov
mov
and
mov
repz
test
add
sti
cmp
xchg
in
xor
lcall
mov
mov
push
fdivrs
paddsw
mov
cmp
dec
or
cmp
dec
shrb
roll
inc
push
or
imul
out
xchg
xchg
stos
mov
cmp
roll
cmp
mov
mov
out
or
repz
cmp
jp
loop
in
cmp
movsl
mov
inc
xchg
mov
shlb
scas
sub
sahf
mov
popa
add
jge
jns
lret
mov
idiv
jnp
mov
mov
push
addr16
loop
cmp
cmp
sbb
sarb
aad
mov
jp
inc
push
fdivrs
rcll
sub
orw
sti
sbbl
aas
and
les
add
sarl
inc
mov
cmp
push
fdivrs
test
jbe
hlt
and
lods
sbb
mov
and
es
out
sar
push
jbe
sbb
sbb
xor
add
dec
add
jg
cmp
stc
cmpsb
mov
cmp
jge
push
scas
mov
and
jp
cmp
out
fidivl
mov
movsb
sbbb
ljmp
and
iret
out
lds
cmp
sbbl
lret
cmpl
and
cmpsb
xchg
cld
pusha
or
call
lcall
lret
mov
pop
popa
xor
cmp
xchg
push
lret
mov
inc
xor
sti
data16
jp
xchg
pushf
push
hlt
cmp
jp
push
cmp
mov
pop
jp
dec
pop
mov
inc
subl
or
inc
call
aaa
add
jge
cmp
ds
xor
dec
bound
aam
xor
push
in
mov
inc
add
cmp
movsb
pop
dec
mov
enter
aaa
stc
xchg
stc
push
stos
pop
dec
jnp
bound
ds
xor
call
movsb
sub
rcll
ret
jmp
pop
push
push
cmp
cmp
cmp
xor
pop
je
xor
mov
jp
loop
sub
cld
sbb
dec
xor
iret
subl
cmp
xchg
aad
pop
int
jno
xor
ds
outsl
or
adc
leave
mov
mov
mov
arpl
aas
aam
stc
push
fnstsw
mov
xor
in
pop
push
ss
rcll
ds
push
add
xor
mov
xchg
lret
pop
addr16
and
xor
mov
pusha
repnz
insb
adc
dec
xlat
lea
sbb
or
sbb
mov
pop
mov
push
fisubrl
inc
push
ficoml
ds
ss
mov
push
subb
pop
cmp
inc
cmp
cmp
push
add
xchg
fisubrs
sbb
push
cld
push
cmp
ds
dec
shl
imul
push
in
ss
scas
sbb
cmp
inc
jo
push
or
add
or
push
push
jl
lods
loope
lret
cmp
cmp
jns
or
sbb
dec
dec
xor
int3
mov
leave
rorb
sub
cmp
pop
mov
and
xlat
dec
ds
mov
push
stos
les
push
dec
adc
int
push
out
outsb
ret
stos
bound
push
sarl
arpl
xor
fimull
mov
scas
bound
fwait
adcl
fidivrs
dec
ds
dec
inc
dec
minps
xchg
pop
inc
aaa
cmp
cmp
mov
insl
dec
cmp
push
mov
cmp
sub
mov
repnz
adc
arpl
jecxz
xchg
push
fwait
cmp
mov
ja
mov
ljmp
mov
arpl
imul
loope
sbbb
js
ds
in
outsl
scas
lds
iret
das
ds
mov
mov
mov
mov
push
push
mov
inc
data16
ds
sbb
aad
jbe
jp
sub
mov
sbb
dec
ds
push
jns
arpl
mov
or
movsl
xor
ds
sbb
inc
cwtl
dec
inc
push
dec
push
sbb
jl
test
dec
das
jle
mov
xor
lods
or
sbb
jae
mov
outsb
xchg
rorl
cmp
in
out
push
mov
xor
jmp
fs
jae
sub
dec
mov
lret
sub
or
mov
out
inc
cmp
daa
or
aaa
xchg
inc
das
push
fwait
jp
mov
es
cmp
xor
xor
inc
dec
and
out
cmp
cmp
test
pop
dec
fisubrl
pop
test
out
pop
xchg
mov
mov
pop
dec
stos
shll
dec
xchg
sbb
xor
je
push
pop
fdivs
mov
xchg
test
pop
jbe
in
cmp
push
mov
mov
sub
xchg
fprem1
jmp
lret
lds
adc
movsl
fdivrs
add
xor
sub
and
sbb
cmpsl
xor
inc
jb
dec
data16
sbb
and
sbb
jl
les
inc
mov
and
mov
jl
outsl
mov
jbe
dec
jle
xchg
dec
push
jb
popf
xor
mov
sub
mov
les
xor
insl
push
fistpll
push
pop
mov
inc
ljmp
jl
and
bound
leave
imul
inc
leave
fstl
jle
incl
cmp
mov
pop
mov
inc
es
ds
js
xor
dec
jae
repz
xor
lret
bound
and
sbb
lahf
out
xor
and
lret
es
inc
fs
push
cmp
inc
mov
jle
xor
pushf
mov
push
adc
sti
jb
xor
pop
adc
jl
sbb
stc
fiaddl
lret
lea
ret
push
leave
fwait
pop
jo
addb
aaa
pop
mov
int
ds
sahf
mov
pop
cmpsb
adc
lahf
in
push
or
fucomip
js
mov
xor
and
inc
arpl
jg
adc
das
jl
adc
jl
jb
enter
fstpt
imul
mov
dec
xor
mov
sbb
push
inc
adc
push
mov
cmp
and
xor
add
push
cwtl
sbb
xor
enter
dec
sbb
cmc
jmp
pop
inc
aaa
mov
xorb
cmc
adc
dec
pop
xor
dec
jae
out
sub
lret
loop
xor
jae
jno
sbb
arpl
mov
xchg
push
sbb
dec
and
lret
cmp
test
mov
mov
mov
js
and
dec
dec
js
xor
xchg
sbb
jno
inc
dec
xor
repz
jno
dec
repnz
jle
push
xchg
dec
pop
popa
rcrb
repnz
xor
mov
push
mov
adc
ds
in
mov
pop
dec
ficoml
mov
in
and
out
icebp
xor
push
gs
iret
arpl
jno
fs
mov
data16
cmpsb
xchg
enter
jmp
addb
ds
ret
inc
orl
ja
arpl
xchg
adc
test
rcr
and
dec
xchg
test
and
adc
seto
cmp
cli
sub
cmp
mov
or
mov
lret
xor
lret
or
jno
out
dec
nop
mov
push
jle
mov
jle
mov
pop
inc
jp
out
dec
imul
incb
movb
jno
push
dec
sbbb
inc
jle
mov
pop
in
add
sbb
inc
test
inc
inc
orb
movsb
js
push
push
push
pop
inc
add
dec
loop
jb
push
dec
sbbb
icebp
cmp
xor
xchg
xchg
pop
inc
jbe
mov
test
mov
pop
cmp
xor
inc
sbb
popa
pop
cmp
jl
jp
cmp
push
imul
mov
xor
push
pop
xor
inc
scas
or
mov
inc
adc
cwtl
adc
dec
xor
mov
ret
mov
push
repnz
and
inc
cmp
mov
dec
in
scas
mov
repz
test
popa
lahf
and
outsb
fstps
push
push
xchg
sarb
mov
jnp
pop
out
lret
push
shlb
inc
dec
dec
push
sahf
ja
insl
call
cli
dec
in
insb
inc
bound
jle
fldenv
stos
adc
mov
shl
ds
into
xor
cmp
jp
ret
cmp
xor
fimuls
std
and
xor
and
fsubr
dec
icebp
ret
inc
inc
pop
push
sbb
push
adc
push
push
adc
adc
inc
inc
adc
jmp
sub
cmp
or
dec
imul
jno
cmp
dec
enter
pop
test
aad
jnp
cmp
nop
cmp
jae
xor
dec
jge
sub
push
sbb
outsl
jbe
pusha
pop
loopne
and
sbb
push
js
mov
clc
xor
fcoms
pop
cmp
sbb
jl
pop
mov
fidivrs
iret
out
push
cmp
jo,pn
je
cmp
push
push
cmp
mov
mov
lret
into
sarl
xchg
xchg
stos
test
cld
cmp
lock
or
pminub
cmp
aam
call
cmp
xor
sbb
adc
jge
jae
ja
mov
push
push
push
push
imul
mov
mov
leave
cmp
lahf
popf
xchg
xchg
xchg
xchg
stos
cmp
repz
idivl
cmc
or
add
sarl
rcl
aad
jmp
lds
or
aas
xchg
inc
xchg
sysenter
stos
ret
jns
sbb
xchg
cmp
push
mov
sbb
jle
mov
mov
jl
pop
sahf
fistl
adc
stc
jo
pop
lods
cs
adc
mov
pop
scas
fwait
test
pop
mov
mov
fs
data16
mov
clc
jg
cmp
imul
cmp
pusha
jne
mov
scas
cmp
les
jle
lret
addr16
cmp
mov
test
cmp
cmp
xchg
inc
sbb
arpl
add
cmp
shrl
add
cmp
mov
add
imul
aas
cmp
sbb
cmp
ss
mov
mov
aaa
push
sub
hlt
outsl
fcmovnbe
dec
inc
inc
sbb
jp
or
clc
pusha
insl
daa
cmp
hlt
stos
pop
jbe
cmp
popf
jg
xchg
insl
out
cmp
lahf
lret
js
inc
mov
and
cmpsb
sbb
push
jbe
cmp
jns
cld
lahf
rorb
cltd
cmp
in
leave
inc
jno
aaa
xchg
cmp
test
cmp
adc
mov
cmp
jl
int3
je
imul
hlt
mov
popf
jae
je
jmp
insb
xorb
mov
push
sti
jnp
outsb
sti
cmp
adc
imul
scas
addl
int
test
sub
rcrl
dec
dec
cmp
roll
loopne
or
mov
popf
jno
jg
lods
in
mov
push
cmp
and
aaa
sbb
cmp
fcmovnb
xor
inc
fwait
ljmp
scas
repz
cmp
mov
cmp
cwtl
fldenv
cmpsl
out
cmp
addl
stc
pop
or
data16
aam
cmp
test
arpl
jge
cmp
lea
outsl
subl
xlat
popa
cmpsb
in
or
jge
push
mov
cmp
test
inc
jle
and
cmp
jl
mov
cmp
xchg
out
movsb
mov
xor
cmp
fnstenv
xor
add
loopne
push
cltd
cwtl
mov
cmc
or
xor
pop
pusha
jno
push
pop
repnz
and
bound
lret
sbb
mov
lahf
in
add
jecxz
cmp
in
ljmp
cmp
adc
cmp
fildll
arpl
sbb
push
cmp
ret
inc
sbb
in
ds
add
mov
cmp
push
std
aaa
adc
inc
sbb
icebp
push
aam
cmp
and
fnstcw
cmp
add
in
and
jp
mov
scas
sahf
mov
lcall
iret
cmp
out
fs
cmp
sti
mov
push
addl
addb
mov
call
imul
lock
pop
cmp
or
jns
dec
bound
and
xchg
cmp
mov
fwait
sbb
push
cmp
sub
add
addl
cmp
inc
ljmp
xchg
cmp
outsl
pop
aaa
or
insl
xorl
mov
xor
sti
inc
lret
xchg
jno
idivb
mov
adc
sub
xchg
xchg
mov
mov
push
js
sub
pop
jecxz
dec
mov
repnz
in
mov
mov
xor
das
inc
es
cmp
stc
lret
pop
bound
cmp
stos
dec
and
sbb
jecxz
cmp
movsb
add
mov
mov
and
and
loopne
dec
int3
xor
stc
dec
cmpl
or
das
sarl
stos
pop
sbb
mov
inc
scas
sub
sti
pop
mov
xchg
push
stc
in
mov
mov
jno
jmp
jnp
rolb
cmpb
mov
out
ret
xchg
cltd
movsb
mov
xor
xchg
pop
dec
mov
jmp
pop
jmp
loope
stos
cmp
insw
cmp
movsb
cmp
push
roll
pusha
adc
ljmp
sti
lret
cwtl
jbe
mov
mov
jl
cmp
fnstenv
mov
adc
sub
sub
stc
insb
in
in
dec
or
add
add
int
xchg
mov
jns
lods
lock
adc
nop
inc
and
xchg
cmp
push
std
movsb
sub
stos
out
push
lret
cmp
pop
xchg
lret
shlb
add
shll
mov
xor
in
cmp
jg
and
sub
lret
stos
fcomps
cmp
ja
mov
cmp
cmp
dec
test
jmp
mov
push
jne
popa
mov
jp
cmp
decl
mov
cmc
stos
dec
pop
cmp
mov
testl
mov
fs
cmpsb
cmp
movsb
int3
fistl
sbb
or
les
in
push
xchg
push
lahf
mov
pop
mov
mov
lret
jnp
and
or
adc
xor
cmp
inc
je
ds
stc
popa
insb
xchg
mov
dec
xor
test
pop
jmp
mov
mov
addb
das
and
mov
gs
jmp
sti
inc
push
jge
jnp
lods
int3
jecxz
andb
cmp
insl
test
push
push
push
movsl
sbb
push
repz
cmp
mov
imul
mov
ret
mov
jmp
cld
xor
and
jne
stc
repz
cmp
xchg
xor
cmp
mov
xchg
cmp
xchg
orl
cmp
movsb
push
test
fisttpl
xchg
cmp
xor
pop
cmpb
inc
testl
xlat
imul
call
ja
cmp
jbe,pt
or
cmp
mov
cmp
adc
inc
cmp
cld
jo
stc
loop
jmp
std
cli
loopne
mov
daa
inc
fcmovnb
aaa
push
or
and
mov
push
cmp
daa
push
push
fs
adc
sbb
cmp
into
icebp
imul
xchg
xlat
loop
movsb
fnstenv
stc
mov
mov
cmp
add
test
and
insb
cmp
mov
mov
negb
cmp
or
icebp
mov
inc
mov
enter
pop
xchg
imul
adc
sub
jnp
sbb
and
inc
ljmp
fwait
cmp
push
xchg
pushf
mov
add
test
adc
mov
leavew
inc
and
cmp
cmpsb
pop
les
mov
jmp
outsl
mov
push
pop
add
and
push
cmp
mov
cwtl
cmp
mov
xchg
cmp
xor
dec
push
and
inc
ss
out
stos
inc
cmp
push
test
inc
and
jne
mov
mov
cmp
dec
or
out
les
into
scas
jb
mov
pop
sub
mov
test
inc
fisttpl
push
mov
jae
cld
add
fisubs
mov
cltd
cmp
imul
inc
push
pop
mov
jno
out
dec
imul
cwtl
test
mov
xor
inc
jp
jp
push
cmp
test
sub
sahf
xor
adc
xchg
and
inc
cmp
cmp
dec
inc
dec
add
and
mov
jae
inc
jg
push
cmp
pusha
mov
pop
push
rorl
push
sub
sbb
in
jb
repz
adcb
and
add
lret
cmp
jo
cmp
inc
jecxz
stc
mov
lods
xchg
icebp
hlt
imul
out
jmp
gs
outsb
dec
fs
in
imul
movsb
popf
incl
cmp
xor
cmp
dec
hlt
ja
push
loope
push
data16
jo
jmp
dec
pop
in
sarl
dec
inc
jl
repz
add
sbb
xor
push
loope
addr16
xor
out
rclb
sub
bound
or
jge
pop
repnz
dec
xor
inc
adc
loope
lret
jae
push
pushf
mov
aaa
add
adc
ds
or
sbb
pop
mov
sub
xor
cmp
data16
push
loope
inc
mov
inc
add
sbb
xor
mov
sarl
xor
xor
inc
push
or
out
dec
repnz
mov
inc
gs
push
sbb
xor
mov
fwait
inc
mov
lret
push
cwtl
inc
sub
xor
dec
sbb
jmp
jecxz
adcl
adc
pop
dec
repnz
mov
gs
pop
sbb
push
xchg
mov
lret
nop
mov
loopne
in
sub
popa
xor
jo
xchg
xor
push
jp
imul
and
inc
push
test
adc
adc
addr16
data16
push
mov
push
es
sbb
xor
pop
into
and
mov
mov
scas
test
xor
xor
mov
dec
dec
lret
cs
inc
js
fldcw
jg
test
mov
and
dec
lret
mov
and
shlb
fbld
sbb
dec
and
mov
pop
mov
xor
cmp
int
push
pop
jge
mov
xor
xchg
ds
js
aad
sahf
shll
in
dec
sbb
cmp
cld
ss
jae
dec
rcr
or
jnp
fwait
lret
jns
jae
push
push
inc
mov
xor
popa
fistl
lahf
mov
loopne
xor
lea
dec
roll
mov
or
jl
push
ljmp
cltd
pop
adc
jno
movsl
jns
sub
repnz
leave
rcr
sbb
rorl
xor
push
dec
jno
inc
inc
jno
dec
mov
inc
add
sub
jno
test
xor
pop
fs
bound
mov
insb
mov
mov
movsl
xor
lods
rcll
inc
cli
jl
repz
out
dec
pop
cli
call
dec
push
loope
pop
xor
jl
jecxz
or
inc
adc
jne
jl
push
mov
push
or
outsb
lret
sub
stos
and
iret
mov
inc
mov
sbb
jl
lret
sbb
into
xchg
dec
inc
mov
inc
js
fadds
inc
mov
inc
enter
push
clc
cltd
bound
loope
into
cmp
mov
cwtl
dec
sbb
lret
dec
rclb
mov
push
dec
dec
inc
jp
dec
pop
jecxz
out
rcrb
lahf
sub
and
into
pushf
adc
imul
test
push
or
repnz
or
jno
dec
aam
mov
dec
clc
add
jp
dec
scas
fs
sub
imul
ss
sbb
scas
je
dec
add
test
jl
dec
fistps
cmp
in
dec
cmpsl
jmp
xlat
jl
xchg
call
outsl
les
xor
adc
push
xor
inc
ljmp
andb
test
cmp
std
mov
pusha
cmp
jbe
int3
sub
cmp
ja
adc
repz
les
inc
mov
push
pop
mov
xlat
cmp
movsl
adc
jmp
cmp
in
flds
adc
push
inc
push
insl
pusha
push
shll
testl
dec
mov
insl
fldl
ret
mov
add
lock
cmp
pop
lds
out
cmp
mov
xchg
lock
push
sti
xchg
jmp
es
cmp
fdivl
in
mov
movl
mov
in
mov
in
jnp
xor
or
and
or
mov
cmp
sub
dec
jae
cmp
aas
add
or
pop
push
movsl
sbb
pop
in
sub
and
cmp
shlb
cmp
or
or
jb
jb
cmp
xchg
dec
push
popa
cmp
enter
jge
mov
mov
adc
dec
inc
scas
mov
add
std
pusha
cmp
nop
fwait
add
test
icebp
shlb
sarb
jbe
in
scas
xlat
add
mov
cmp
and
arpl
xor
stos
sub
jne
push
loop
fld
push
mov
cmp
inc
lods
sahf
lahf
sti
cltd
push
fisubrs
xor
mov
imul
cmp
add
xor
mov
cmp
xchg
clc
inc
mov
push
mov
or
xor
arpl
push
out
loopne
sahf
daa
push
cmp
dec
call
add
inc
and
iret
adc
int
loop
mov
jb
mov
xchg
bound
jge
adc
imul
stc
mov
fwait
pop
add
xor
addr16
loope
aas
add
cwtl
les
mov
sbb
jp
xchg
into
insl
lret
xor
dec
decl
cmp
mov
lret
jle
push
sub
in
or
add
pop
xor
fdivr
les
test
sbb
dec
cmp
jecxz
nop
sbb
xorl
in
dec
movsl
sbb
test
mov
scas
mov
jl
int3
or
push
dec
call
dec
dec
hlt
inc
push
int
add
test
push
inc
ds
fbld
push
or
dec
jno
fwait
pop
jo
push
pop
std
dec
das
mov
stos
pusha
dec
pop
movsb
adc
orb
rorl
dec
mov
or
jo
pusha
sbb
cs
sahf
xor
xor
arpl
cmp
xchg
addb
icebp
mov
adc
filds
or
outsb
and
iret
cs
ss
ja
and
jg
lcall
xor
push
adc
inc
dec
pop
movsb
mov
push
inc
gs
and
xchg
movsb
movsb
lret
xor
mov
lahf
mov
push
dec
jb
push
in
jge
iret
movsb
test
dec
xchg
movsb
js
jg
add
and
dec
ds
int
outsb
cltd
test
lds
loope
dec
cmpsb
add
dec
pop
jb
xor
jno
cmpsb
insb
or
repnz
mov
je
pop
stos
mov
sbb
inc
scas
lock
cmp
jle
cmp
iret
pop
jge
sbb
jbe
fimull
cmp
adc
repnz
into
sbb
lret
pop
jo
mov
inc
mov
mov
dec
cs
out
sbb
loope
scas
cmc
sbb
push
jp
xlat
insl
movsb
and
std
xor
push
adc
jb
inc
cmpsb
out
iret
mov
mov
cmp
lds
xchg
test
sbb
lret
dec
movsb
int3
xchg
in
dec
mov
push
jne
xlat
mov
inc
mov
cltd
jo
mov
insl
into
or
orl
adc
pop
in
jl
jp
std
mov
cli
gs
dec
cmp
adc
add
lcall
pop
push
cmp
ret
ljmp
mov
adc
dec
xchg
xchg
sub
insb
imul
imul
test
scas
lcall
test
pop
inc
xor
lds
and
call
xor
imul
imul
ljmp
fnstenv
cmp
test
sub
push
sub
xor
sbb
inc
push
lods
jae
sub
pushl
das
xor
ficoml
pop
out
imul
inc
xchg
lahf
xor
fidivrs
test
insb
negb
scas
cwtl
fbld
or
daa
jae
sbb
sbb
ret
pop
pusha
jo
cmc
jne
scas
movsl
jge
hlt
sbb
mov
xor
repnz
push
cmpsb
lods
mov
xor
lods
rcrl
lret
adcl
add
out
imul
jnp
xor
lahf
mov
dec
lret
xchg
push
fdivs
test
inc
lahf
sbb
pop
int3
leave
xchg
insl
xchg
cmp
test
push
packuswb
mov
popf
bound
cmc
mov
lcall
jae
xor
mov
popf
pop
div
adc
xor
lods
sarl
pop
jno
mov
dec
push
mov
jno
jns
xor
lock
test
cltd
pop
arpl
xor
push
stc
jp
push
mov
mov
imul
inc
mov
fsubp
cwtl
fwait
dec
cmp
test
sbb
cwtl
cmpl
dec
scas
xor
fdivs
jg
xor
pop
sbbb
int3
pop
xchg
sbb
pushl
loop
fwait
cmpsl
mov
push
mov
jle
rcl
pop
lcall
pop
imul
test
sbb
dec
or
mov
int3
je
push
pop
je
fstpt
dec
jbe
mov
loop
aaa
mov
xchg
jne
xchg
jo
outsb
sbb
xor
pop
jge
push
xchg
xchg
popf
adc
pop
cld
mov
and
pop
dec
push
jl
xor
mov
jb
xchg
loop
or
and
adc
jle
xor
jle
push
rol
mov
outsl
mov
mov
cmp
push
jae
cmp
movsb
leave
cmpsl
mov
fimull
cli
dec
je
pop
mov
xchg
sbb
dec
dec
push
int3
mov
or
xor
dec
sbb
mov
mov
stc
xor
dec
push
xchg
mov
imul
xor
insb
ficompl
ss
jmp
jmp
bound
mov
lret
pop
mov
xchg
push
int3
ffreep
ja
js
xor
popf
or
imul
xor
jne
mov
mov
ja
lds
mov
popf
add
imul
fldenv
fiaddl
dec
hlt
testb
sbb
jmp
imul
inc
addb
fistps
pop
fcmovbe
adc
push
or
push
mov
sahf
cmpsl
in
adc
fidivrl
mov
dec
and
mov
arpl
dec
ja
ja
and
or
arpl
mov
ret
xchg
mov
js
repnz
in
add
js
repnz
in
hlt
xchg
inc
lret
test
out
add
js
repnz
out
pop
or
in
add
lret
push
test
fs
ljmp
xchg
inc
lahf
jo
mov
adc
lret
pop
test
fs
adc
xchg
jb
test
sub
mov
push
rclb
call
stos
add
mov
sbb
dec
jle
jp
xor
cmp
insb
pop
mov
loope
lods
adc
test
push
xor
sbb
ret
or
add
js
xor
sbb
and
cmc
lods
cmp
jbe
mov
cmpsb
jmp
cmp
cs
cmp
push
ret
andl
mov
leave
sbb
mov
push
pop
mov
dec
shlb
scas
or
dec
lret
and
arpl
cmp
popl
push
mov
pop
aaa
sub
dec
pop
push
pop
jb
lret
push
jle
imulb
pop
ss
ds
xor
push
pop
pop
push
cmp
cltd
cmc
jmp
fstps
push
pop
out
scas
adc
test
xchg
mov
repz
mov
sbb
xchg
js
repz
inc
inc
ds
rorl
scas
or
aas
mov
xchg
scas
fucomp
push
push
pop
dec
dec
cwtl
ds
jmp
popa
imul
test
push
movsb
xchg
mov
xor
into
adc
cli
scas
ret
ss
jecxz
mov
call
lret
icebp
lcall
into
lret
rcrb
push
dec
dec
fs
pop
push
repz
push
leave
popl
enter
xchg
jle
xor
insl
mov
mov
repnz
xor
lcall
push
mov
pop
les
sbb
adc
out
std
popf
into
les
jg
sbb
in
push
sbb
aad
mov
or
xor
sub
xlat
jle
dec
into
dec
rol
test
sbb
popf
add
sahf
xor
adc
pop
mov
test
jb
insb
into
mov
inc
cmp
mull
sub
sbb
lcall
mulb
call
pop
jo
adc
jns
sbb
adc
fdivl
loopne
push
mov
mov
lds
sbb
arpl
arpl
mov
add
inc
xor
inc
push
pop
pop
fsubs
fstpl
xor
or
insb
jle
add
ss
mov
aam
mov
ds
jmp
sarb
in
adc
cmp
pop
adc
jge
add
xchg
pop
mov
mov
push
lahf
cmp
pop
outsl
sub
repnz
imul
adc
and
ss
loop
fldenv
outsl
xor
adc
cmp
movsb
push
mov
mov
leave
aam
les
je
cmpb
incl
loop
jmp
cmp
fldenv
mov
into
sub
outsl
pop
adcl
cmp
arpl
adc
mov
cmpb
and
lret
fs
imul
test
repnz
add
mov
fwait
scas
jo
cmp
lea
xchg
out
jnp
pop
movsb
jae
cmp
mov
lret
xor
cmp
mov
pop
jmp
repz
loop
fnsetpm(287
mov
popa
aam
gs
or
sar
sub
ret
sub
cmp
xchg
repnz
mov
mov
punpckhbw
mov
adc
test
lret
cmp
pop
in
xor
jecxz
fnstenv
cs
stc
add
daa
pop
pop
imul
pop
test
arpl
cmp
bound
jmp
ret
jnp
inc
loopne
mov
dec
arpl
inc
incl
cmpsb
sti
mov
and
mov
out
popf
dec
sub
push
dec
mov
sub
repz
lahf
jnp
orb
cmp
in
fstpt
aam
xor
mov
xor
mov
cmp
cmpsl
jo
and
adc
cmp
testb
ja
xchg
mov
scas
cmp
repz
and
fwait
cmpsb
aad
notl
xchg
rol
push
incl
mov
lds
pop
lea
xchg
shlb
mov
fs
jp
xorb
jb,pt
sbb
and
mov
lods
fwait
arpl
std
insb
sarb
mov
lcall
or
pop
push
je
aaa
aad
int
or
cmp
push
imul
and
xchg
mov
insb
jmp
fldenv
iret
push
mov
gs
stos
or
negl
fdivrl
mov
lret
int3
xor
cmp
ret
ret
test
xor
xchg
dec
neg
lds
pop
cmc
inc
push
inc
xor
loop
xchg
fidivrl
pop
test
mov
mov
xor
or
mov
jb
cmp
xchg
test
out
lock
xchg
or
xor
mov
test
add
jge
pop
cmp
mov
test
dec
cmp
cmp
jl
int3
insb
imulb
and
push
fdivrs
js
cmp
push
xor
mov
mov
mov
pavgb
mov
addr16
stc
movl
ficompl
movsl
insb
cmp
mov
loopne
cmp
imulb
cmp
push
and
push
mov
inc
jecxz
stc
in
or
cmp
push
adc
xchg
xor
mov
inc
mov
pop
mov
lahf
mov
push
sub
sub
xchg
mov
xlat
aam
lret
jno
cwtl
xchg
rolb
int3
insl
in
arpl
ret
dec
xchg
cmp
pop
push
hlt
cmp
inc
pop
cld
cmp
nop
ljmp
pusha
lret
inc
xchg
mov
xor
inc
mov
mov
and
lods
push
scas
cmp
inc
aad
inc
into
outsb
pop
or
jle
inc
and
cmp
lods
cmpsl
popa
mov
cli
mov
sbb
push
xor
mov
jmp
jp
inc
std
mov
mov
cmc
imul
jp
es
jo
sub
cmp
imul
lret
jo
mov
mov
xchg
into
or
push
jo
push
loope
lret
dec
and
xor
and
jb
lods
cmpsb
cmc
ficomps
adc
dec
cmpsb
mov
or
pop
addr16
out
and
mov
jb
pop
mov
mov
dec
inc
shr
and
mov
stos
sbb
test
mov
in
in
inc
pop
or
mov
inc
xchg
frstor
xor
or
inc
jae
js
mov
adc
scas
mov
push
int3
andl
xor
jb
out
push
in
ret
dec
dec
mov
sbb
xor
xor
ja
ja
test
in
mov
xor
sbb
xchg
mov
fsubl
inc
add
cmp
pop
cmpsb
testl
and
popa
roll
pop
mov
mov
sub
in
cmpsl
inc
test
inc
popa
xchg
pusha
push
inc
ljmp
xor
jle
nop
mov
rcr
xor
aas
inc
or
in
jp
mov
mov
xchg
sbb
cmp
ss
in
pop
or
xor
mov
and
dec
movsl
sbb
cmpsl
sbb
aaa
xor
jmp
cmp
push
in
jnp
and
dec
outsb
xchg
fisubs
adc
lock
or
rclb
pusha
push
mov
outsb
xchg
or
data16
out
js
mov
push
pop
or
add
hlt
pop
push
cmc
cld
not
jnp
cltd
inc
jb
ficoml
pusha
jl
cltd
xor
xchg
or
sub
mov
or
adc
addr16
mov
inc
pop
dec
push
sbb
fiadds
fs
cltd
push
jl
xchg
ficompl
push
fld
cmpsl
mov
inc
dec
or
xor
or
add
hlt
mov
adc
sarb
pop
sub
les
mov
stc
mov
movsb
sbb
push
dec
xchg
mov
xor
sub
push
sbb
adc
dec
push
push
movsl
sti
mov
in
jl
stos
lods
cwtl
xor
enter
adc
sbb
clc
rcr
insb
outsl
cmp
fdivl
aad
mov
adc
test
rclb
xor
addr16
sbb
test
add
cmp
pop
mov
cmc
mov
idiv
cmp
aad
lds
jecxz
xchg
cmp
push
mov
out
inc
mov
movl
leave
lock
dec
clc
rcrl
rorl
or
mov
ljmp
or
in
gs
push
les
cmp
outsb
add
loop,pn
mov
cmp
scas
xor
bound
mov
pusha
into
sbb
test
mov
inc
pop
cmp
and
fdivrs
gs
lock
bound
adc
xchg
cs
mov
push
mov
xchg
mov
mov
push
xor
lret
cmp
cmp
cmp
pushf
xchg
fdivl
jl
inc
in
jne
cmp
lods
sahf
popf
cmp
loopne
into
outsl
push
xchg
and
mov
dec
das
mov
push
sbb
add
xchg
sub
lods
xor
pop
pop
cmp
xchg
out
pop
jns
sub
push
mov
out
jecxz
jmp
inc
or
cmp
es
push
les
cmp
into
insl
mov
divl
mov
lret
cmp
push
or
sbb
inc
pop
mov
popa
cmp
sub
sar
mov
fcomi
cmp
enter
lret
cltd
cmpsb
stos
cmp
loopne
add
cmp
pop
shrb
sbb
mov
mov
sub
aas
jo
flds
movsb
mov
xor
ds
fs
sbbb
addr16
xor
xor
mov
xor
adc
inc
cmp
push
xchg
mov
and
sbb
scas
inc
cmp
fistl
std
in
sbb
out
sub
jno
cmp
adc
insb
xlat
push
and
cmpsl
jbe
or
inc
lret
cmp
xchg
mov
jbe
xlat
mov
mov
push
xchg
cltd
add
mov
imul
das
dec
cmp
gs
add
and
leave
mov
sbb
loop
ret
ds
scas
int3
and
xchg
sarb
lds
jmp
mov
mov
cmp
test
xorl
cmp
notl
xchg
ror
test
push
push
cmp
mov
mov
xor
pop
or
dec
jecxz
mov
push
add
inc
pop
das
push
jl
adc
cmp
scas
lock
push
ret
dec
fdivl
mov
leave
push
mov
pop
mov
mov
push
inc
sub
cmp
in
repnz
cmp
out
addr16
or
insb
mov
pushf
pop
insb
pop
imul
mov
out
rclb
ret
jecxz
and
stos
pop
cmp
hlt
mov
mov
movsl
call
xchg
mov
dec
rclb
inc
ficomps
mov
sahf
pop
and
xor
jg
mov
test
insl
inc
fucom
js
std
and
lret
js
xchg
cmc
sbb
push
add
cmp
mov
shlb
xchg
cmp
pop
pusha
jl
add
aam
cmp
cld
adc
lret
fs
jnp
clc
xchg
and
shl
mov
fildl
hlt
mov
jmp
cmp
test
push
and
or
cmp
cmpsl
xlat
lret
lods
mov
push
add
cmp
movsb
push
and
rolb
pop
out
daa
adc
sub
cmp
shr
sub
sbb
insl
rcr
stc
int
jle
or
add
xor
aam
mov
nop
cmp
cmp
mov
sti
in
out
ljmp
popa
mov
mov
mov
or
pop
lahf
cmp
push
les
decb
lock
add
movsb
outsb
in
cmp
push
hlt
test
aam
jno
inc
mov
ljmp
pop
cmp
push
sub
call
arpl
test
jle
xorl
andb
pop
cmp
or
out
mov
cmp
out
in
stos
bound
push
push
cmp
shl
or
cmp
push
mov
incl
add
mov
sbb
xchg
aas
mov
movsl
sti
dec
push
cmp
mov
cmp
dec
cmp
cld
stc
stos
xchg
out
cmp
lahf
sbb
out
in
cmp
dec
fbstp
std
aam
mov
inc
jmp
incl
xlat
fsub
jnp
scas
movsl
inc
push
cmp
out
push
cmp
popa
jae
lods
enter
out
dec
xorb
cmp
ficoms
sbb
inc
mov
dec
lahf
fnsetpm(287
add
movsb
mov
dec
cmp
pop
add
cmp
out
std
xchg
insl
popf
cld
cmp
movsb
int3
inc
popa
push
pop
sarl
sbb
dec
out
cmp
test
je
add
stc
and
rol
repz
and
adc
jle
incl
hlt
sbb
ret
mov
pop
lods
int
and
iret
cmp
std
fistpll
das
jmp
addr16
adc
sub
cmp
scas
mov
lret
xor
mov
push
lods
and
mov
inc
fwait
insl
pop
ret
sbb
inc
sub
add
dec
imul
lea
loope
cmp
lods
or
movsl
inc
jmp
or
lahf
mov
in
pop
fwait
mov
insl
and
push
cwtl
je
add
dec
inc
nop
std
inc
sahf
lds
dec
sbb
sub
cmp
das
fnstsw
mov
rol
push
test
repz
ja
ret
cmp
cltd
jb
pop
mov
sbb
dec
mov
sub
jno,pt
cmp
pop
add
out
fnstenv
xor
cmp
scas
pop
xor
or
fs
test
fstps
sbb
mov
into
inc
cmp
clc
cwtl
daa
mov
mov
sahf
pop
adc
mov
push
jp
dec
dec
xor
pop
je
daa
test
stos
lret
sub
cmp
mov
or
adc
dec
or
ret
mov
cmpsb
xchg
push
xor
inc
shll
sahf
sbb
outsb
mov
and
pop
data16
cmpsb
push
cmpsb
pop
push
sbb
sub
dec
push
andb
lahf
push
xchg
and
mov
sti
sbb
imul
outsb
jecxz
sti
movb
je
xchg
dec
cmp
ss
scas
add
stos
xchg
insb
icebp
popa
sbb
cmp
mov
sbb
mov
jb
cmpsb
lock
fiadds
dec
outsb
mov
cmp
loope
and
mov
mov
xchg
jae
mov
icebp
iret
cmp
cmpsl
mov
xor
pop
or
mov
addr16
jl
mov
ds
sar
jns
cmp
or
mov
cmp
popf
addr16
in
inc
enter
adc
inc
push
mov
mov
mov
or
cmc
xchg
cmp
mov
xlat
inc
seta
push
mov
lea
clc
fs
push
cmp
mov
neg
test
push
cmp
bound
lds
jns
xor
inc
push
cmp
mov
out
and
ljmp
fwait
test
push
cmp
fsts
cmp
inc
add
es
insl
mov
cmp
lock
cmp
xchg
push
sarb
dec
icebp
aaa
cmc
mov
out
cmp
or
ja
pop
cmp
jl
clc
aam
adc
imul
fwait
arpl
sbb
cmp
jb
sub
xor
fsubrl
cmp
loop
or
xchg
out
pop
push
loopne
frstor
pushf
push
sbb
or
adc
addb
pop
or
add
sub
inc
pusha
mov
les
jge
mov
bound
enter
sbbb
sub
lods
jnp
cmp
jns
jne
fstl
outsb
lret
cmp
ss
and
insl
jmp
in
jns
and
daa
xor
or
stc
xchg
imul
addb
idivl
dec
or
push
aaa
insb
imul
dec
std
outsl
fistpl
xor
cmp
arpl
xlat
adc
std
lds
repnz
push
addl
jne
xor
jle,pn
addb
lods
int3
ljmp
mov
and
fdivs
mov
mov
xor
insb
dec
dec
cmp
push
mov
push
adc
cmp
xchg
sbb
cmp
mov
inc
sub
mov
mov
mov
inc
ljmp
pusha
sti
loope
cmp
mov
add
cs
sbb
das
xchg
enter
xchg
test
cmp
imul
and
jb
mov
mov
sub
popa
cmp
rolb
scas
test
and
lods
cmp
cmpsl
and
jp
popa
shll
scas
lcall
aam
popf
cmp
cmp
add
stos
adc
movsl
xor
insl
std
test
jbe
shlb
dec
add
scas
cmp
scas
xor
pop
movsl
lods
mov
jmp
leave
fmuls
pop
adc
jno
jmp
fstpt
adc
add
sub
mov
push
push
xor
push
mov
sahf
or
or
cmpb
test
and
xorb
adc
jb
cmp
xor
in
and
xorb
push
cmp
or
jb
mov
and
call
enter
push
xor
leave
call
and
jmp
mov
pop
cmp
stc
ja
xchg
xor
bound
pop
lods
push
jl,pt
cmc
rcrb
cmp
push
push
push
or
cmp
adc
cld
fistl
mov
lock
sar
fmull
mov
aas
lret
into
enter
cmp
nop
xor
add
add
inc
fnop
fs
test
jp
mov
mov
dec
inc
cmp
inc
scas
int3
cmp
cmc
leave
add
cmp
sbbl
push
sbb
movl
push
out
jecxz
push
lret
cmp
jno
das
aaa
jne
loop
xor
adc
mov
mov
std
cmp
sbb
scas
inc
adc
repnz
lds
mov
lods
and
jp
push
repz
cmp
out
mov
fisubrs
out
sbb
xlat
cmp
mov
popf
cmp
data16
in
push
xchg
cmp
or
stos
test
dec
jg
xchg
addb
mov
data16
sub
mov
sbb
rolb
dec
cmp
int3
mov
or
cmp
push
cmp
sub
pop
leave
sbb
insb
imul
sbb
lcall
scas
pushf
stc
push
push
jno
adc
add
in
cmp
push
out
aaa
cmp
out
xor
xor
pop
add
mov
fidivl
dec
cmp
mov
dec
fnstcw
in
stc
inc
push
dec
lods
cmpsb
cli
andl
dec
xor
fbstp
test
cmpsb
mov
fdiv
push
inc
dec
adc
pop
push
lea
sbb
mov
cmp
mov
push
pusha
in
mov
sti
inc
jmp
cmp
sarb
les
cmp
pushf
int3
fsubl
movsl
lcall
scas
mov
outsb
call
cmp
iret
mov
loope
jne
cmp
xor
xor
xchg
lods
add
shl
out
cmp
or
push
push
and
inc
imul
sbb
gs
out
jb
fldt
cmp
inc
dec
sarl
cltd
push
dec
cmp
or
xlat
pop
jge
mov
setle
xchg
leave
or
dec
clc
and
orl
push
cmp
loopne
stc
xchg
dec
in
or
cmp
mov
movsl
or
sbb
lcall
xlat
idivl
push
add
jl
aas
cmp
or
push
pop
ret
dec
loop
fwait
sbb
insl
dec
dec
inc
fs
inc
lret
stos
sbb
lret
dec
shr
push
mov
mov
xlat
addl
cmp
pop
ljmp
dec
cmp
out
scas
mov
cmp
movsl
aad
cmp
mov
mov
pop
lret
pop
pop
ret
loop
mov
add
cmp
cmpsb
js
add
lret
jle
fnstenv
mov
pop
aam
cmp
xlat
push
jns
inc
xchg
inc
popf
lods
int3
sbb
stos
mov
in
mov
sbb
ret
cmp
add
jecxz
popf
fadds
sub
fldt
inc
dec
inc
mov
mov
sbb
into
mov
xor
cmp
sbb
andb
mov
adc
inc
cmp
jl
sahf
aaa
or
cmp
inc
mov
cmp
fsubl
inc
ds
dec
cmp
js
push
xlat
cltd
mov
cmp
or
jmp
sbb
loope
jecxz
jge
cmp
stc
movsb
pop
cmp
xlat
out
hlt
inc
dec
add
lcall
mov
and
mov
movsb
pop
dec
dec
testl
cmp
xor
add
add
push
insl
popa
mov
popf
jns
cmp
test
lahf
cltd
cmp
sub
or
aaa
incl
xchg
test
jge
adc
dec
data16
sbb
xor
cmp
jmp
adc
loope
cmp
mov
popf
je
hlt
mov
stc
loope
mov
xor
das
and
mov
inc
add
xor
sub
into
mov
inc
xchg
mov
or
out
ljmp
fcmovnb
imul
es
push
jno
xchg
mov
fiadds
pop
pop
fstpt
jnp
mov
add
in
shr
xor
ljmp
xchg
xor
push
dec
inc
sbb
addr16
pop
xchg
jbe
add
stc
adcl
sub
push
sub
scas
push
inc
pop
in
xor
cld
adc
arpl
outsl
mov
xlat
les
test
jl
add
dec
test
leave
int3
aam
int3
in
repz
adc
xlat
bnd
jmp
movsb
xchg
cmp
push
cmp
test
push
push
cmp
xchg
cs
cmp
icebp
imul
sti
inc
add
dec
jbe
lcall
stos
inc
or
mov
in
or
adc
fisttpll
fistpll
ljmp
out
cmp
push
xchg
xchg
fisubrs
adc
or
jl
inc
repnz
imul
and
ds
aam
gs
test
cmp
or
and
lods
mov
add
icebp
inc
cli
sbb
mov
xchg
js
adc
cmp
inc
cltd
enter
icebp
mov
hlt
mov
nop
fsts
sbb
ds
ja
loope
in
xlat
jae
push
lds
inc
in
add
aaa
jns
int
adc
add
mov
pop
enter
aaa
les
and
sti
cmp
popa
rcll
es
mov
imul
jns
sub
je
aas
cli
subb
push
popa
push
adc
das
adc
insb
add
add
xor
stos
pop
pop
sbb
fildl
cmp
cld
or
dec
mov
inc
fmull
sub
pusha
or
adc
pop
insb
or
stos
icebp
sbb
cmp
jl
out
mov
sti
mov
xor
cmp
cmp
in
stos
cmp
hlt
fldcw
add
lahf
mov
test
xchg
or
mov
rcrb
pop
orl
imul
sbb
add
addb
jl
mov
dec
insl
flds
in
sub
cmp
xchg
lods
clc
cmp
pop
lret
fdivrl
neg
mov
xchg
shlb
lods
inc
imul
fnstcw
ds
ss
cmp
add
es
add
cmp
sub
cmc
pop
enter
loopne
adc
mov
xor
daa
daa
inc
movsl
nop
xor
incl
scas
cmp
add
mov
add
fidivrl
cmp
rcll
inc
mov
mov
clc
ficoms
insb
jbe
hlt
cmp
jnp
mov
aam
stc
push
cmp
cmp
mov
adc
loope
xchg
fs
push
out
fcomps
fnstsw
loop
jbe
xor
data16
es
fisubs
loope
loop
inc
jl
in
bound
pop
aaa
or
jo
pop
lods
dec
jns
push
mov
js
outsl
add
xor
mul
pusha
inc
inc
int3
test
xor
add
push
jbe
xor
aad
cmp
cmp
sbb
testl
cmp
jg
ja
jb
adc
stc
mov
mov
lea
mov
lock
mov
outsl
popf
inc
sbb
add
jecxz
add
sbb
push
adc
push
push
dec
xchg
imul
addr16
imul
xor
pop
dec
push
test
shll
data16
jl
and
push
cmp
scas
fnstsw
arpl
lret
adc
fucomip
cwtl
cmpb
rorl
loope
mov
push
dec
je,pt
inc
xchg
lock
aam
jl
cmp
dec
scas
aad
cld
adc
outsl
mov
inc
dec
jmp
jnp
push
mov
popa
scas
idivl
jmp
mov
inc
lcall
dec
sbb
mov
and
scas
jo
xor
pop
fcmovne
xor
iret
stos
sbb
xor
lret
cmp
mov
lea
mov
push
xchg
pop
std
cltd
inc
ficomps
lds
mov
out
dec
cmp
jne
adc
cwtl
xor
pop
fnstcw
cld
mov
jo
mov
xor
mov
mov
xor
mov
pop
jae
sbb
repnz
push
loopne
mov
inc
push
inc
lea
in
dec
int
jmp
mov
mov
cmc
or
cmp
jp
test
rorb
imul
sub
sub
sub
and
mov
mov
out
dec
insl
mov
call
outsb
dec
test
dec
je
aad
sar
pop
jo
jbe
dec
dec
mov
enter
fprem1
jmp
mov
imul
xor
insl
push
mov
mov
inc
imul
xorl
pop
inc
xchg
sbb
add
stc
cmp
inc
pop
push
scas
stos
jae
push
cmpsb
dec
imul
inc
jno
cmpsb
das
sbb
mov
pusha
fistps
movb
js
in
addr16
mov
jl
stc
mov
cmp
fildl
cli
mov
dec
out
cmpsl
pop
push
inc
adc
push
sub
mov
jne
mov
sbb
jb
bnd
inc
add
sbb
xor
data16
xlat
stc
mov
pop
pop
dec
sub
xchg
pop
outsl
fnsave
arpl
fwait
push
jmp
scas
adc
es
rclb
sub
push
cmp
imul
sub
mov
jnp
xchg
jns
lcall
cld
mov
mov
stos
outsb
cli
pop
cmp
push
mov
push
fsts
shrd
xchg
fsts
insb
or
arpl
arpl
xor
sbb
jg
mov
adc
fidivs
scas
push
pop
xor
jne
push
movb
add
stc
mov
in
xchg
or
add
lds
outsb
jecxz
imul
mov
mov
or
orl
jle
dec
cltd
lds
mov
mov
fs
dec
mov
in
mov
stos
push
aam
lea
pop
pop
pop
jmp
out
inc
lcall
mov
addr16
dec
add
daa
add
dec
inc
loop
js
ss
dec
xor
dec
fistps
mov
js
push
xor
inc
and
xor
sbb
lds
dec
inc
sbb
aad
enter
test
inc
jle
fdivs
push
aaa
in
sarl
dec
sbb
mov
adc
aam
sarl
scas
pop
push
in
mov
pushf
xor
and
imul
es
push
sub
xor
loopne
mov
mov
pop
inc
sbb
inc
fdivs
loopne,pn
js
cmp
dec
jg
push
in
dec
idivl
jne
mov
ljmp
in
dec
inc
add
push
xlat
scas
xchg
mov
cmp
mov
inc
jg
dec
push
pop
fwait
outsl
add
stc
mov
dec
test
add
mov
mov
lret
sahf
cwtl
xor
mov
ljmp
mov
mov
ljmp
shll
mov
mov
push
les
lcall
adc
adc
xchg
and
inc
test
xchg
data16
movsb
pop
cmp
inc
xchg
stc
flds
jmp
pop
dec
adc
push
mov
fmuls
lods
mov
mov
mov
ror
mov
popa
lcall
mov
mov
mov
addr16
aad
out
fucomip
fcomps
jns
jge
int3
push
jo
jmp
and
ds
inc
push
mov
cwtl
sbb
jge
cmp
jge
xchg
in
cmpsb
cmp
xlat
imul
mov
push
fstl
mov
jle,pt
xor
sub
mov
stos
dec
js
and
push
imul
jmp
insl
cmp
mov
lea
movb
popf
adc
sbb
js
mov
inc
push
mov
dec
and
lret
inc
xchg
mov
insl
stc
sub
popa
push
std
fildll
mov
sbb
mov
pop
dec
lret
clc
repnz
jle
fdivr
cli
popa
mov
leave
cmp
scas
and
pop
lds
and
lea
or
lret
cmc
jge
iret
stos
insl
fidivl
ds
mov
fildl
nopl
es
repnz
jp
xchg
lahf
pushf
mov
mov
js
sbb
movsb
pop
nop
sbb
cs
jbe
ds
mov
pop
xchg
mov
sbb
fisubrs
xchg
and
pushf
inc
xchg
js
insl
mov
jge
cmpsl
mov
mov
mov
insl
imul
cld
aam
jbe
repz
jge
xor
js
mov
imul
add
pop
sbb
pop
ds
lds
fldt
pushf
pop
js
sbb
into
scas
cmpsb
scas
aam
mov
and
call
or
mov
or
scas
jecxz
test
fcos
inc
cmp
push
inc
cmp
and
subb
test
jge
fidivrs
pop
fwait
cmp
pop
in
inc
dec
xor
add
pop
cwtl
pop
imul
dec
sbb
sub
ficoml
enterw
xchg
sbb
bound
sbb
cld
lods
outsb
cmp
cmp
or
in
mov
sub
mov
mov
mov
cmp
fistl
mov
pop
jno
es
ja
jae
cmp
add
cmp
push
pop
xchg
sahf
arpl
mov
in
cmp
lods
fcomps
adc
sub
xchg
add
in
sarl
pop
sub
test
ss
mov
shrb
push
xchg
andb
enter
add
jmp
pxor
bound
dec
jbe
push
xchg
xlat
int
cmp
test
cmpl
test
fsts
cmp
jg
cmp
xchg
scas
pop
cmpsl
mov
sbb
stos
jb
xor
imul
fstpt
adc
inc
pop
xchg
lods
mov
or
add
push
adc
stos
jg
mov
js
cmpsb
dec
enter
xor
xor
and
cmp
cli
adc
mov
incl
cld
mov
sub
xchg
fcmovnbe
gs
sarl
ljmp
das
mull
xchg
add
mov
xor
jecxz
out
loop
je
mov
sub
cmp
fidivl
test
sbb
xchg
adc
add
sbb
jne
lret
sbb
xor
xor
lock
inc
dec
cmpsl
cmp
xchg
mov
mov
dec
fnstsw
movsb
flds
or
cmp
stc
xchg
lock
or
mov
enter
cltd
pop
mov
pop
sbb
lcall
mov
dec
mov
cmpsb
and
lods
cwtl
jl
sbb
ljmp
dec
push
cmpsl
xchg
jae
xor
mov
inc
sbb
filds
in
jo
xor
mov
sbbl
xor
test
lods
popf
addb
add
test
repz
in
pop
sub
mov
xchg
dec
push
mov
popf
mov
jno
xchg
lea
sbb
movsl
dec
ds
decb
xor
mov
es
inc
repz
or
xor
js
icebp
mov
ffreep
jecxz
rcrb
mov
mov
fwait
push
xchg
outsl
add
lea
into
mov
pusha
push
push
fdivr
insl
addb
cmp
push
xor
push
sbb
jae
and
dec
dec
loopne
imul
jbe
inc
fldl
pop
mov
and
jle
in
and
jo
mov
mov
inc
les
jmp
dec
jle
or
scas
mov
js
repz
ret
or
stos
ret
xorb
dec
and
jbe
ljmp
push
flds
ret
pop
jl
sahf
popa
loop
or
sti
int3
cmp
lret
fstp
xor
push
lret
test
test
negb
mov
int3
cmc
mov
mov
sub
sbb
cs
movsb
cltd
fisubrs
scas
nop
fsub
mov
into
out
cwtl
and
pusha
mov
gs
mov
loopne
aad
jae
jg
cmp
ret
into
pop
js
ficoms
mov
pop
jne
mov
arpl
aaa
pop
ror
inc
cmp
in
jg
and
cmp
sbb
sbb
test
and
test
cmp
fildll
jecxz
jecxz
mov
pushf
test
xchg
shlb
pop
push
test
outsl
cld
push
xor
lret
mov
adc
cli
aad
push
and
push
aam
mov
dec
cvtps2pd
cli
notb
add
xchg
test
mov
cmp
xor
lock
lds
subb
inc
les
cmp
xlat
in
loopne
and
ljmp
mov
lods
mov
xchg
sub
pop
inc
in
sub
mov
bound
adc
decb
mov
xchg
push
dec
add
insb
lods
int3
or
cmp
pop
xor
cmp
frstor
in
sahf
add
xlat
push
push
adc
cmpsb
cmp
fdivrs
lds
testl
repz
stos
lods
sarb
push
cld
shr
and
cmp
imul
xchg
lret
or
in
or
adcb
int
cmp
add
movsb
cmp
das
inc
cmp
xchg
mov
leave
cmp
mov
nop
add
cmc
mov
cmp
inc
inc
xchg
jmp
orl
push
daa
sbb
cmp
jg
jo
out
cltd
popf
add
pop
jle
sbbb
test
pop
xor
dec
es
xchg
mov
jne
insb
mov
ljmp
cld
ja
or
rclb
test
sbb
push
adcl
mov
push
mov
cmp
or
fdivrl
data16
fwait
shr
dec
test
pusha
shrl
xchg
pusha
shl
sub
adc
in
sbb
inc
bnd
cmp
mov
lock
jmp
cld
sub
mov
inc
xor
pop
mov
in
loopne
lea
imul
inc
clc
ret
cmp
mov
push
pop
loope
push
pop
add
in
test
cmp
out
data16
or
pop
cli
pusha
jmp
mov
jmp
stos
fs
push
xlat
cmpl
sub
cmp
imul
add
inc
sbb
cli
mov
ds
fptan
push
addr16
xchg
es
xor
lret
cmp
sbb
dec
fildll
pop
sub
stos
stc
inc
xor
cmpsl
jb
jmp
test
cmp
sahf
inc
ret
test
int3
or
das
cmp
or
push
testb
cmp
js
mov
fstps
iret
sbbl
ja
stc
pop
cmp
scas
xor
mov
pop
fisubl
daa
push
sbb
jo
xchg
imul
lret
dec
aas
out
cmp
cld
mov
mov
in
jbe
ljmp
mov
incb
xchg
xchg
imul
mov
int3
mov
pop
push
xchg
jb
sbbl
icebp
xor
jg
cmp
push
idivb
test
lds
outsl
jmp
stc
dec
sub
cmpsb
jno
cli
test
mov
pop
aas
add
cmp
loop
cmp
cmp
or
cmc
cmpsb
push
in
cmp
mov
push
das
cmp
add
cmp
lret
test
test
xor
push
sub
cmpsl
addr16
cmp
inc
inc
lret
add
les
movsl
inc
jecxz
inc
out
xchg
lea
outsb
mov
mov
cmp
sub
popf
xor
mov
cmc
loop
lcall
sbb
xor
or
daa
mov
inc
jns
cmp
lea
loope
popa
cmp
or
pusha
jecxz
xor
insl
sub
gs
leave
pop
xor
mov
cmp
repz
ss
mov
sub
dec
jle
stc
ds
ss
mov
and
in
add
dec
data16
sub
negl
pop
outsl
and
adcb
inc
int
daa
inc
pushf
jle
xlat
test
cmp
call
jb
std
iret
fdivrs
xchg
mov
int
mov
clc
hlt
in
mov
pop
lahf
js
xchg
pop
cmp
mov
cmpsl
int
fildll
fmuls
or
cs
cmp
ds
iret
inc
cmp
mov
pusha
test
push
rcrb
sbb
jno
mov
fwait
lcall
lods
ja
cmpl
mov
ficompl
xlat
aam
xchg
gs
adc
cmp
jns
push
xchg
popa
popa
inc
mov
test
inc
cmp
mov
lret
fwait
xchg
cmp
pop
pop
imul
xor
stos
xchg
clc
dec
mov
inc
nop
mov
jnp
xchg
testl
and
repz
bound
xchg
ficoms
dec
test
inc
add
cmp
fimull
enter
cmp
scas
mov
mov
add
cmp
outsb
aas
jb
mov
scas
cmpsb
xor
add
mov
and
xchg
out
inc
scas
mov
and
ror
add
sub
xchg
repnz
sbb
in
adc
cli
mov
arpl
add
test
ljmp
cmp
out
shl
insl
cmp
in
mov
jmp
aad
pop
es
and
adc
mov
popa
adcl
gs
movsl
inc
jecxz
fnstcw
fdivrl
fildl
jno
mov
xchg
mov
jns
dec
mov
push
adc
cmp
dec
pop
cltd
into
xor
inc
xchg
inc
push
mov
mov
shl
cmp
andl
loop
push
xor
nop
add
cmpsb
push
call
dec
add
lods
mov
std
int3
cmp
push
cwtl
in
jne
loop
insl
mov
xchg
loope
mov
flds
jecxz
fnstsw
pop
insl
arpl
sub
in
cld
lods
push
push
das
mov
movsb
adc
fisttpl
xchg
data16
insl
cmp
stos
dec
popf
addr16
jecxz
cmp
xchg
push
aam
push
pop
sub
xor
test
arpl
pop
cmp
lods
jne
rol
lahf
cmp
lret
dec
jbe
push
movsl
xor
jmp
int
cmp
mov
mov
out
test
or
fcmovnu
mov
notb
pop
rorb
lods
cmp
pusha
fistpll
cmp
jo
cld
dec
jge
xor
insl
push
lahf
fwait
xchg
sub
mov
int3
mov
dec
cmp
or
ja
call
cs
dec
xchg
leave
insb
loopne
cmp
dec
iret
lea
es
loop
add
les
and
cmp
scas
xchg
das
arpl
addb
js
push
outsl
cmp
sbb
cmp
push
call
sub
sti
loop
addr16
sub
loope
cmp
jl
push
mov
movsb
fisubrl
adc
jmp
add
frstor
cmp
pop
rcl
jp
pop
nop
stos
loop
mov
je
push
fildl
out
jnp
dec
addr16
cmp
push
mov
xchg
cmpl
scas
and
jo
lahf
cmp
sarb
cmpsl
mull
pop
fisttps
cmp
fcmovbe
push
pusha
lods
lret
push
arpl
or
sbb
call
cmp
push
inc
sub
arpl
rolb
frstor
push
pop
push
aas
lods
xchg
inc
pop
fdiv
addr16
clc
fidivs
dec
jbe
ret
cmp
fucomi
mov
gs
rorl
mov
or
jle
jecxz
cmp
sbbb
fmull
or
aas
fsubrs
test
and
sarl
cmp
pushf
xor
popf
cmp
fildl
dec
loop
lahf
test
icebp
or
jae
cmp
clc
cmp
bound
jb
lock
cs
cmp
push
and
pop
into
or
cmpsb
and
adc
outsb
xchg
and
fidivrl
movsb
neg
adc
push
aaa
push
mov
cmp
fidivrs
sub
jg,pt
mov
cwtl
mov
out
sub
dec
mov
int3
cmp
or
ficomps
bound
lcall
jmp
mov
push
add
in
mov
push
add
jmp
out
ficoml
mov
push
dec
dec
and
cmp
cmp
cltd
mov
arpl
dec
mov
stos
jl
mov
int3
scas
lea
push
push
cmp
cwtl
jmp
outsb
pushf
jecxz
lret
sbb
mov
ss
arpl
adc
insl
std
iret
movsl
jnp
movb
aam
lds
test
xor
cld
ss
mov
insb
xchg
roll
jmp
fiaddl
mov
mov
fsts
mov
cmp
pop
subl
or
mov
push
daa
or
lret
insb
lods
rorl
ss
stc
adc
dec
push
inc
jl
stc
and
mov
fists
movsl
jns
inc
dec
xchg
cwtl
je
out
mov
sbb
add
mov
push
and
jl
jb
add
jl
sbb
jl
loope
or
jnp
push
sub
jg
sub
or
xorb
lret
mov
mov
pop
xlat
andb
icebp
into
bound
movb
xchg
gs
dec
sub
sbb
xchg
iret
ja
pusha
dec
out
xchg
lea
mov
hlt
inc
ds
insl
mov
int
mov
or
jl
cli
cwtl
test
cltd
loope
cmpsl
sub
sahf
mov
stos
popf
xchg
mov
mov
mov
loop
mov
pop
mov
xchg
cmpb
lea
pop
dec
jae
mov
push
mov
mov
cmp
mov
rolb
repz
mov
dec
dec
or
aas
xchg
lret
aas
nop
xor
and
fdivrs
pop
mov
xchg
pop
movsb
inc
and
inc
leave
mov
mov
jbe
dec
testl
mov
dec
bound
ss
outsb
sbb
stc
inc
sahf
out
je
nop
insl
jae
dec
adc
gs
mov
push
xacquire
sbb
pop
or
push
pop
pop
mov
jg
jl
sub
aas
add
and
push
dec
bound
nop
pop
roll
iret
inc
jl
add
jle
fcmovbe
cmp
filds
sub
xor
shll
ds
clc
out
xor
addr16
add
add
addb
xor
stc
outsb
adc
inc
cmp
decb
sbb
call
nop
mov
jnp
dec
jmp
fst
adc
mov
inc
jecxz
pop
jo
test
pop
nop
inc
cmp
sarb
sub
lcall
add
test
mov
cmp
lock
insl
in
and
loop
stc
inc
aaa
cmpsl
bound
call
pop
dec
xor
cs
cmc
xor
or
aaa
es
jo
mov
sbb
mov
cmp
mov
notl
push
cmp
icebp
mov
sub
pop
cvttps2pi
in
cmp
in
fcomi
mov
jmp
cmp
xchg
aaa
sub
dec
ret
pop
or
js
data16
push
pop
test
lods
mov
rcr
cmp
sub
adc
fildl
push
cli
std
aad
data16
cmp
fnstenv
inc
aam
ljmp
or
hlt
gs
shrl
dec
int3
sbb
test
and
xorl
push
mov
jge
cld
testb
push
in
xor
push
add
cmp
scas
pop
sub
lea
mov
outsl
adc
out
cmp
adc
cmp
or
pop
jae
mov
out
stos
sub
mov
fnstenv
jl
cmp
popa
int3
or
inc
iret
cmp
das
add
shll
pop
cmpsl
push
push
lahf
cmp
negb
add
or
call
dec
fistps
addl
pushf
cmp
dec
nop
lea
das
inc
cmp
ljmp
push
popa
divb
loop
or
mov
cmp
push
pop
sub
xchg
idivb
cmp
pop
enter
xchg
loope
xchg
inc
xchg
sbb
jmp
cmp
mov
add
cmc
dec
pushl
cmp
loope
dec
cmp
dec
rorl
jb
rclb
nop
cmpsl
cmp
bound
in
jg
mov
xchg
xchg
xchg
push
addr16
mov
cmp
in
mov
pop
mov
imul
in
xor
incl
add
adc
out
fldt
or
dec
pop
push
cmp
add
mov
arpl
jmp
xchg
xor
xlat
cmp
cmp
insb
sbb
cmp
mov
cmp
inc
fs
cmp
add
in
or
fdivrs
loope
lea
cmp
cmpsb
repnz
cmp
lret
inc
mov
xorb
or
xchg
gs
pusha
or
mov
ja
outsl
cmp
repnz
add
jo
out
jae
movb
andl
pop
clc
lock
mov
loope
sti
sub
cmpsb
xor
fld
inc
loop
loopne
add
mov
cmp
aaa
lods
or
rorb
icebp
mov
fdivl
cmp
or
in
std
dec
lods
push
sub
lea
or
push
mov
sub
mov
insl
in
cltd
mov
jge
adc
mov
mov
jne
sbb
inc
push
and
lods
dec
mov
xchg
out
cmp
inc
adc
cmp
jmp
sti
fs
pop
ja
stc
cmp
test
pop
daa
cmpsl
lahf
ss
insl
cmp
inc
shrl
sbb
mov
sti
ja
cli
jns
cmp
xlat
loope
loop
fldenv
jne
cs
push
cmpsb
cmp
xchg
call
add
or
sar
cli
negl
add
ret
adc
loope
adc
and
fstpt
jo
cmp
mov
out
cmp
mov
pop
mov
and
ds
cmp
mov
pop
negl
fbstp
lds
xor
stc
lcall
daa
pop
fnstenv
xor
mov
push
test
dec
sarl
in
int
pop
ret
mov
add
inc
sbb
jg
dec
js
xchg
adc
cmp
jecxz
in
push
call
or
mov
add
adc
lret
push
xchg
inc
test
jae
add
loope
pop
and
cmpsl
or
out
jle
cs
sub
adc
add
push
enter
std
dec
jg
mov
stos
push
add
xchg
cmp
sahf
cmp
clc
outsb
adc
xchg
cmp
testl
push
sub
mov
push
std
fnstenv
add
scas
xor
pop
mov
or
int3
out
xor
imull
rcrb
xchg
scas
or
shlb
cmp
pop
add
pusha
push
dec
cmpsl
flds
out
fistl
push
mov
sub
mov
cmp
arpl
xchg
insb
cmp
pop
adc
out
mov
xchg
lods
ds
jns
or
mulb
sbb
mov
jecxz
xchg
out
cmp
test
ljmp
xchg
cmp
dec
cmp
icebp
adc
ror
cmp
and
sbb
adc
ja
repz
stos
cmp
stc
inc
mov
xor
xchg
cmp
mov
imull
cmpl
cs
push
std
jp
mov
jo
sub
insb
or
repnz
fsubrs
pop
mov
cld
sahf
push
xchg
fwait
or
ret
jnp
mov
xchg
roll
loope
sub
push
pop
ljmp
xor
les
outsl
pop
push
adc
add
dec
movsb
mov
mov
pop
push
sbb
pop
in
enter
or
out
fstps
insb
xchg
je
push
mov
popf
ficompl
pop
push
sbb
cmp
gs
lds
lret
imul
mov
dec
xor
cmp
add
cmp
sub
mov
dec
mov
fsubs
adc
fiadds
cmp
push
imul
mov
push
iret
or
mov
fwait
and
jae
imul
push
cmp
or
dec
mov
dec
mov
test
mov
mov
xchg
mov
notl
mov
imul
lods
sbb
xor
das
dec
sbb
fucomi
fsubs
dec
mov
fdiv
cmp
mov
xchg
or
jp
sub
mov
mov
int
or
adc
lret
flds
mov
sub
arpl
sub
jle
cmp
mov
push
popa
vcvtsd2ss
pop
cmp
or
sbb
pop
push
push
shl
add
mov
dec
pop
jl
add
cmp
push
cwtl
test
xor
stos
aaa
mov
shll
call
adcb
and
jl
addb
cwtl
mov
jg
push
mov
js
mov
add
loopne
fiaddl
add
mov
mov
ss
inc
or
cmp
mov
popa
popf
iret
mov
or
out
xchg
dec
jl
or
sbb
bound
mov
popa
xchg
in
rcrb
bnd
adc
arpl
jge
mov
aaa
test
pop
test
dec
mov
cmp
mov
iret
push
xor
cmp
mov
dec
push
lods
sub
outsb
sti
sbb
mov
cli
arpl
sbb
cmpsl
vpsubd
lock
cmpsb
push
push
cmpsb
push
fstl
mov
ret
jmp
addr16
push
cmpsb
js
sbb
push
push
dec
mov
xchg
mov
call
xchg
out
js
mov
add
mov
mov
dec
dec
lods
shrl
dec
adc
in
rcll
aad
push
inc
movsl
push
cmp
mov
mov
lret
js
shll
sub
pop
mov
outsl
loopne
sar
or
xchg
push
jne
mov
jmp
repz
outsl
mov
loopne
sbb
mov
pop
add
pop
or
pop
sub
pop
adc
adc
sub
and
inc
jne
fucom
jle
pop
mov
inc
gs
sbb
push
cmpsb
setp
adc
push
movsl
bound
push
mov
aad
jle
mov
lret
mov
sub
mov
add
pop
adc
popf
cli
insb
mov
jns
xchg
push
and
adc
inc
adc
imul
dec
into
push
aad
jl
add
mov
push
mov
call
gs
gs
mov
or
pop
jge
jmp
dec
sub
cmc
dec
cmp
iret
cmpsl
cltd
nop
fcompl
push
repnz
mov
les
pop
fidivs
or
mov
jmp
popf
test
jecxz
cmp
fnstenv
inc
gs
rolb
jg
ja
push
xlat
in
xor
out
dec
dec
in
in
aaa
cmpsl
ja
and
mov
rcrb
push
or
cs
push
dec
and
or
es
test
mov
add
mov
pop
in
inc
push
sub
or
mov
push
lret
movsb
bound
jle
outsl
sbb
jl
dec
cmp
adc
cmp
scas
stos
cmpsb
adc
ret
stos
cmp
xor
add
mov
inc
rol
mov
sub
dec
cmc
jmp
imul
jmp
jecxz
leave
cmp
sbb
cwtl
push
or
jae
stc
push
divl
push
cmpb
dec
stos
push
inc
call
sbb
push
or
jb
ljmp
mov
cs
loope
mov
dec
push
sub
shlb
sbb
push
or
xchg
fucom
lds
out
xor
adc
or
xor
pop
xor
shll
dec
ss
mov
mov
ret
fistps
inc
push
mov
mov
fnstsw
adc
mov
adc
inc
pop
inc
sbb
ljmp
inc
mov
lret
outsl
arpl
roll
mov
sbb
les
les
dec
or
or
ficompl
sbb
cli
inc
popa
lcall
fldt
jnp
xor
stos
add
loope
jo
push
cmp
dec
sarl
aaa
lret
jg
push
loope
xchg
cltd
jl
dec
xchg
and
fidivl
xor
cli
dec
aaa
mov
fwait
imul
outsl
lahf
jne
repnz
pop
pop
dec
fcos
mov
add
adc
xor
ss
xor
mov
mov
inc
gs
sub
dec
dec
call
add
daa
clc
push
pushl
sti
mov
in
in
jbe
pushl
into
jmp
push
test
push
jbe
sbb
xchg
insl
push
aam
jle
je
and
xchg
pushf
cs
rcr
sahf
leave
inc
mov
xchg
add
pop
inc
or
flds
push
inc
mov
adc
xchg
xor
pushf
ds
or
xchg
pop
cmpsl
adc
orl
and
aam
push
bound
mov
adc
push
pop
and
push
les
add
sahf
fistps
push
loope
jne
inc
js
sbb
incl
dec
fs
jae
inc
movsl
mov
mov
loope
jmp
mov
inc
push
or
xor
sub
inc
jle
andb
int3
fucom
rcrl
into
out
inc
test
jb
fucom
js
inc
inc
mov
jmp
dec
add
mov
or
jecxz
cli
dec
inc
lret
mov
stc
jbe
jle
cmpsb
int3
insl
fs
hlt
mov
lret
fstl
cmp
xchg
jne
scas
je
stos
ljmp
dec
lahf
stc
inc
scas
inc
ficoml
adc
test
inc
stc
sub
xor
stc
aaa
cmpsb
stos
in
or
cmpsl
dec
out
xchg
pop
cwtl
xchg
dec
jl
add
mov
push
push
movsl
mov
sbb
hlt
mov
repnz
sbb
ss
icebp
push
in
pop
mov
xchg
inc
shlb
dec
push
or
and
movsb
xchg
into
jl
shll
sub
xchg
js
dec
adc
lret
inc
pop
mov
out
jo
inc
loopne
sahf
lods
mov
js
dec
inc
or
mov
mov
pop
xchg
jne
xlat
pop
lahf
mov
inc
inc
into
add
mov
jno
pop
inc
adc
lret
add
push
insb
cmpb
fmuls
cli
mov
xor
mov
xor
mov
test
ss
ss
repnz
or
push
fadd
mov
mov
cs
ret
mov
sub
cmpsb
out
xor
test
and
xor
dec
sbb
jmp
and
cld
test
and
xor
dec
pop
and
dec
clc
test
jp
dec
jp
xor
inc
js
test
test
movsb
dec
jle
xchg
cmp
jle
add
scas
cmpsb
pop
pop
lret
jl
sbb
sub
dec
mov
pop
insl
fistl
mov
xchg
inc
adc
sbb
xchg
nop
out
fadds
add
fs
and
jo
mov
movsl
jnp
loope
cmp
sbb
or
jmp
jl
cltd
xchg
push
int
pop
sub
inc
rolb
inc
out
xlat
movsl
push
ja
test
xchg
push
pop
xchg
mov
jne
jl
add
pop
mov
dec
mov
add
inc
pop
push
call
mov
adc
arpl
pop
fidivl
sub
daa
jae
subb
out
iret
mov
test
scas
xor
in
jl
call
add
mov
pop
inc
sub
mov
push
and
sub
mov
cmpsb
es
out
push
pop
test
loope
aas
enter
js
leave
jl
add
mov
loope
push
lods
cmp
jle
push
gs
lret
stos
aaa
mov
ret
inc
fs
and
sbb
aad
push
mov
xor
push
arpl
mov
sbb
mov
pop
mov
jge
pop
xchg
fisubrs
mov
mov
loopne
push
adc
pop
push
aad
fdivrl
fisttpll
rcrb
test
and
sub
mov
lods
rorl
inc
stc
inc
and
in
loop
pop
dec
xchg
in
addl
pop
mov
fldcw
mov
sub
in
scas
addl
jno
xor
cmc
mov
xchg
push
iret
das
mov
cmp
push
fldpi
xor
jl
adc
mov
mov
test
aad
pushf
fwait
inc
jl
sbb
ret
sub
fstpt
add
cwtl
imul
xor
fists
pop
rolb
fwait
mov
or
push
sti
push
test
cmpsl
xchg
mov
inc
fs
add
std
sub
xchg
push
in
jp
arpl
imul
dec
xchg
xor
ss
int
mov
dec
xor
push
mov
mov
leave
outsb
movsb
fnstcw
leave
lock
inc
fstl
or
or
js
mov
insb
js
dec
testl
int3
test
push
stos
pop
adc
adc
or
stos
rcrb
xor
sbb
insl
sbb
push
rcrl
sbb
mov
pop
outsl
pop
pushl
cmp
pop
xchg
xchg
lods
pushf
rep
sbb
lret
ficoml
jns
ds
popa
mov
sbb
adc
sbb
popa
sbb
imul
test
repnz
push
inc
aas
xchg
popf
out
jp
aad
cmp
mov
aaa
mov
or
sbb
pop
leave
fsts
cmc
cltd
sbb
mov
repnz
pop
mov
test
mov
int3
imul
pop
pushf
shlb
sbb
mov
sbb
add
outsl
sub
popf
sbb
scas
enter
mov
sahf
fildl
add
cmp
in
jge
aas
es
xor
arpl
ret
inc
sbb
mov
push
sub
repnz
aas
inc
sub
js
sub
in
repnz
cmp
and
mov
jno
ror
jae,pn
cltd
cwtl
jb
and
inc
adc
aam
mov
inc
adc
ret
push
jns
adc
adc
pusha
sub
pusha
and
adc
ret
cmp
pop
inc
fidivl
cld
push
enter
mov
dec
sub
pop
test
sbb
andb
or
andb
les
out
push
test
adc
sbb
enter
dec
pop
cmpb
lock
jl
mov
nop
mov
js
push
jnp
jbe
ja
jno
movsb
mov
adc
add
orb
in
jp
lret
pop
sbbl
jbe
xchg
xorb
and
or
nop
mov
mov
xchg
call
inc
sub
push
sbb
mov
in
es
nop
jl
xor
push
push
inc
cs
lods
or
cmp
scas
pop
xor
nop
and
inc
and
dec
adc
xchg
jmp
ret
mov
stos
subb
out
inc
nop
data16
test
aas
fs
xorl
mov
lea
adc
sbb
mov
in
adc
ss
sbb
and
cli
inc
pusha
pop
jo
pop
ljmp
cmp
lea
push
inc
nop
sbb
and
bound
sbb
stos
adc
mov
mov
adc
dec
nop
fdivs
js
ss
dec
daa
xor
mov
mov
mov
jp
clc
pop
pop
fmull
fimuls
pop
divb
hlt
pop
outsb
cmp
xchg
mov
bound
mov
icebp
mov
sar
scas
mov
dec
cmp
lods
repz
inc
push
std
jge
sbbb
aad
fsts
js
push
sbb
not
pop
inc
and
lret
push
xor
push
into
cmp
ss
scas
sbb
lret
cmp
ds
loop
cmpb
ds
sub
add
scas
stc
inc
cmp
lret
stos
xor
fidivl
inc
dec
and
call
cwtl
pop
std
push
push
mov
dec
pop
jb
jge
xor
mulb
xor
fs
outsb
xor
addb
push
fistpll
mov
cmp
mov
aas
ficompl
push
shlb
insb
jle
push
mov
pop
in
or
sub
adc
bound
cmpsb
push
cwtl
xor
lret
bound
adc
ljmp
pop
movsl
dec
bound
or
xor
shl
ret
bound
sbb
inc
repz
andb
push
scas
ret
push
jmp
cmpsl
jmp
faddl
push
mov
sub
xor
mov
or
enter
push
or
test
dec
and
mov
pop
outsl
leave
repnz
push
fisubl
loope
push
or
push
lret
dec
push
sarb
fimull
fldcw
and
jge
lret
shr
mov
sbb
inc
or
insl
xchg
out
dec
cmp
sti
fists
daa
cmp
sub
cwtl
movsb
fcoml
ss
int3
inc
cmp
mov
mov
aaa
xchg
dec
push
cmp
push
adc
jo
add
mov
in
inc
stc
es
les
roll
dec
mov
rcl
add
pop
mov
dec
cmp
pushf
in
lods
cmp
cli
add
fs
push
jb
dec
dec
es
decb
icebp
cld
push
outsl
xchg
outsb
mov
xor
sbb
icebp
lret
and
inc
lcall
dec
adc
sub
jle
push
fs
dec
push
inc
xor
ljmp
pop
aas
cmp
xor
popf
jns
cmp
or
add
and
sbb
jg
pop
pop
inc
or
and
cmp
nop
idivb
mov
sahf
lock
dec
test
dec
iret
push
cmp
cmp
rol
imul
xor
les
mov
jb
cmp
cmpsl
push
mov
add
pop
ret
mov
pop
mov
lea
jo
in
subl
or
js
mov
mov
in
test
dec
dec
ss
push
push
inc
sbb
xor
andb
push
dec
out
xor
jnp
cmp
lret
pop
cs
cmp
dec
out
mov
inc
in
aaa
xor
bound
roll
rol
mov
push
sahf
cmp
pop
dec
sub
idivb
sub
mov
fnstsw
dec
push
shrb
cmp
int3
fstpt
int
cmp
dec
in
xor
fnstenv
das
inc
test
bound
xchg
add
sbb
fnstsw
lds
rolb
scas
nop
xchg
and
lea
jne
mov
cmp
stos
xchg
iret
fldt
dec
out
add
repz
repnz
mov
ret
mov
xchg
cmp
pop
cmp
mov
and
ljmp
cmp
xlat
jbe
test
notl
xlat
mov
inc
push
mov
lds
cmp
cmp
sub
cmove
gs
jnp
cmc
mov
jle
divl
test
das
push
jge
xor
popa
rorl
test
into
add
xorl
cmp
movsb
sbb
ds
xlat
popa
xor
pop
mov
cmpsb
mov
bound
scas
or
pushf
les
out
adc
cli
push
imul
adc
lea
sbb
gs
and
popf
nop
mov
xor
ss
in
out
cmp
lds
int
xor
test
mov
insb
cmp
sub
cmpb
in
and
mov
mov
inc
jnp
adc
in
arpl
cmp
ss
pmulhw
sbb
sub
insb
adcl
pop
mov
mov
test
cmp
pop
pop
jmp
push
dec
jp
or
arpl
in
pop
repnz
cmc
ret
and
push
mov
daa
js
insb
mov
fisubrs
xor
sbb
dec
imul
data16
fsubrs
mov
popf
cli
mov
dec
jecxz
xorl
cmp
lock
test
lods
cmp
or
dec
push
rcll
mov
je
inc
addr16
ja
jne
push
and
jg
mov
xchg
and
rcl
xlat
adc
shr
pushf
adc
xchg
xor
ret
sbb
mov
cmp
pop
sbb
daa
test
cmp
jmp
fcmovnu
lret
gs
push
movd
xor
dec
mov
jbe
add
lods
ljmp
cmp
add
mov
and
sti
sbbb
cmp
jns
push
xor
jmp
loopne
pop
add
out
sti
and
call
cmp
sbb
cmp
dec
ja
lods
mov
lret
xor
leave
cmc
mov
push
mov
pop
notb
fwait
push
dec
and
jns
rorl
imul
inc
xor
jecxz
gs
cli
mov
mov
scas
push
mov
mov
cmp
mov
sub
xchg
stc
repz
cmp
pop
test
jae
dec
xchg
mov
mov
ds
inc
xchg
repnz
ja
imul
mov
push
push
daa
imul
cmp
xchg
add
sbb
insb
mov
test
pop
pop
cmp
dec
add
xchg
mov
pop
sub
scas
push
cmp
cli
add
data16
fldcw
cmp
cmpb
cmp
cmp
push
popa
roll
repz
into
arpl
add
pop
pop
lret
ja
jmp
jns
cmp
dec
xchg
loop
std
cmp
inc
pushf
pop
lahf
test
lods
cmp
inc
add
inc
insb
cmp
imul
mov
jbe
bound
dec
xor
cmp
mov
sub
loop
mov
pop
inc
int
xchg
xchg
mov
dec
or
cmp
outsl
in
cmp
dec
mov
xor
fsubs
popf
mov
cmp
add
arpl
scas
adc
pop
mov
sbb
fsts
nop
inc
out
cltd
add
xchg
rorb
cmpl
std
in
cmp
cmp
movsl
mov
push
fbstp
cmovnp
push
cmp
popa
js
in
movsb
inc
pop
cmp
les
out
cmp
and
es
mov
aam
imul
rcll
cmp
mov
mov
addr16
xor
stc
movsl
inc
inc
cmp
aam
shlb
sbb
inc
cmp
xchg
int
movsb
in
sbb
fbld
das
hlt
push
sbb
and
xchg
pop
sti
push
ret
cmp
mov
loop
jmp
cmp
inc
cmp
jno
ljmp
bound
mov
and
lods
mov
ret
inc
adc
adc
sub
enter
and
pop
sti
and
outsb
dec
cmpsl
pop
data16
jecxz
fnstenv
push
cltd
mov
mov
lcall
mov
jne
or
mov
scas
cmpsb
mov
xchg
cmp
inc
jb
test
idivb
push
cmc
ds
out
inc
fdivl
aaa
fwait
mov
notl
and
nop
xor
inc
pop
cmp
mov
repnz
fstl
stc
adc
lret
cmp
cmc
fcomi
sti
jae
xor
push
mov
out
leave
or
mov
aam
lods
add
push
je
adc
vshufps
mov
push
or
flds
inc
inc
out
xor
test
pop
sbbb
cmp
pop
adc
xchg
flds
ss
rcr
or
cmp
ljmp
add
cmp
leave
push
jbe
jl
loopne
xor
add
es
cmp
jne
push
xchg
dec
cmpl
pop
jmp
or
cmp
push
cmp
sub
aam
inc
xor
mov
ljmp
add
mov
jmp
add
lods
push
mov
cmp
ss
xor
movsl
xor
mov
and
xor
mov
jnp
adc
mov
jl
or
xchg
cltd
imul
adc
xor
test
daa
mov
xchg
imul
lods
imul
push
imul
hlt
pop
xor
lcall
outsb
lea
test
ret
push
insb
mov
sub
pop
aas
push
and
xor
sub
push
aas
pop
and
mov
or
add
lret
mov
push
mov
out
pop
add
aas
cmpsl
xchg
xchg
push
mov
insb
mov
sub
push
and
xchg
in
sub
lcall
imul
movsl
out
dec
mov
dec
inc
call
in
nop
mov
push
lock
outsb
nop
xchg
inc
scas
xchg
test
xchg
push
push
adc
push
scas
imul
cmpsb
xchg
test
mov
push
mov
jbe
daa
fsubp
xor
dec
cli
imul
jo
mov
mov
cmp
and
jecxz
or
cmp
lret
push
inc
mov
movsl
jnp
push
jns
aam
add
int
movsl
test
push
rol
lods
movsl
es
cmp
fsts
ret
mov
cmp
jnp
push
add
xlat
dec
adc
ljmp
push
xor
iret
outsl
mov
bound
es
cmp
mov
mov
sbb
dec
fwait
sbb
mov
jb
imul
rcrb
pop
xor
add
cmp
dec
in
add
gs
popa
insl
sti
push
or
xor
xchg
addr16
dec
rcr
sbb
cld
outsl
xor
adc
mov
sbb
test
pop
in
fstpt
xor
shrl
movsb
fnstcw
scas
cmpsb
test
arpl
in
mov
call
jnp
sub
cmp
mov
leave
and
mov
cmp
add
loopne
sub
cmp
popa
jb
sbb
add
or
and
cmp
cmpsl
int3
sub
sub
add
cmp
ja
fidivrs
call
sti
hlt
cltd
testl
sbb
mov
fnstcw
ss
rorb
add
cmp
and
insl
pop
imul
mov
dec
mov
fdivs
cmp
insb
adc
stc
jae
xchg
fucomp
imul
cmp
jl
fistpl
in
pop
mov
ja
cmp
test
push
xor
pop
and
cmp
mov
cwtl
fs
cmp
aaa
bound
hlt
sti
cmpl
daa
mov
cmpsl
mov
sahf
test
dec
sbbl
sub
xor
mov
repnz
xor
mov
inc
jmp
int3
cmp
stc
push
dec
shlb
loop
fidivs
inc
adc
xchg
das
cmpl
lea
adcb
dec
dec
add
ret
mov
outsb
and
or
inc
mov
fnstcw
dec
es
cwtl
loopne
cmp
mov
mov
fiadds
or
push
out
addw
dec
mov
cmp
test
stos
lods
jp
sarb
push
dec
andl
cmp
fildl
adc
push
cmp
pop
mov
mov
and
pop
lret
mov
cmp
fildl
cmp
mov
jbe
jmp
outsb
fldenv
fildl
xor
adc
outsb
lods
mov
mov
add
pop
sbb
mov
dec
out
xor
push
sti
movsl
mov
cmpsb
cmp
cmp
xor
cmp
cmp
outsb
scas
add
in
xor
data16
rcl
inc
les
ds
outsb
push
xchg
sbb
dec
cmp
sbb
into
sbb
jg
cmpsl
cmp
mov
in
sub
cmp
mov
aam
fsubl
repz
bound
mov
inc
push
sbb
dec
jno
or
insb
aas
into
mov
add
jns
fwait
daa
aad
mov
mov
mov
testb
insl
inc
outsb
decb
ljmp
cmp
loopne
push
add
aam
cmc
inc
mov
cmp
inc
jne
cmp
and
movsb
inc
ljmp
mov
nop
cmp
inc
xchg
add
inc
mov
mov
mov
pop
cmp
test
shll
mov
xor
int3
add
pop
jmp
mov
push
mov
lea
mov
out
mov
out
jp
mov
jp
clc
cmp
mov
das
inc
popf
jle
scas
mov
test
or
or
mov
inc
cli
rorl
fldenv
cmp
jle
xchg
fs
mov
cmp
xchg
xlat
sub
xor
mov
lret
test
pop
mov
pop
add
ljmp
cmp
jae
push
fucomp
insl
mov
mov
scas
sub
fwait
jb
cmp
cmp
xchg
or
cmp
sti
int
mov
std
movsl
xor
xlat
stc
xor
push
test
jns
mov
sti
xchg
lahf
push
int3
and
cmp
imull
push
iret
outsl
call
xchg
cmp
loopne
cmp
and
xchg
mov
push
cmp
or
push
or
jno
sarl
inc
xchg
inc
cmp
mov
xor
cmp
faddp
cs
bound
mov
cmp
mov
das
dec
and
fwait
add
inc
inc
mov
or
mov
xchg
cmp
popf
xchg
cmp
inc
inc
mov
pop
mov
cmp
adc
lea
push
fistpll
jns
dec
test
mov
cmp
hlt
mov
adc
adc
roll
xor
lret
xor
adcb
xchg
outsl
pop
push
cmp
push
movsb
push
pop
pop
mov
std
or
jne
shlb
stc
mov
dec
popa
inc
mov
inc
and
mov
mov
xlat
sub
jbe
iret
mov
cmp
pop
cltd
xchg
mov
cmp
test
xor
xor
and
insb
loopne
inc
jecxz
cmp
jl
cltd
cmp
popf
jne
loope
cmp
idivb
lods
add
cmp
lea
sub
and
ficompl
inc
jg
bound
pushf
or
dec
mov
fs
int3
jbe
xor
movsl
jnp
xchg
sarl
xor
cmc
jecxz
sub
sub
mov
sbb
push
fisttps
mov
iret
mov
fwait
inc
insb
shlb
jne
or
repz
or
xchg
mov
fidivs
push
es
inc
mov
lret
fdiv
outsl
arpl
pop
pop
ss
inc
cmp
push
repz
lods
gs
mov
fimull
pop
push
xchg
out
fwait
mov
jg
and
mov
inc
addr16
mov
pop
jl
mov
ds
xchg
aaa
cmp
mov
imul
popa
hlt
outsl
stos
push
xorb
cmp
push
mov
popf
mov
push
mov
pusha
push
into
push
add
mov
adc
cmpsl
js
sbb
jge
cmp
cwtl
cmpsl
or
leave
lahf
xchg
pop
cmpsl
pop
loop
pop
divl
dec
sbb
jge
cmp
and
fwait
cltd
cmp
mov
out
push
xchg
xchg
int
mov
mov
cwtl
cli
repz
mov
pop
push
outsl
lahf
iret
jmp
loope
add
orb
out
push
mov
imul
jns
into
cmc
in
pop
pop
filds
mov
mov
addr16
pop
jb
pusha
js
test
add
pop
inc
jl
adc
out
int
mov
push
inc
sbb
push
sbb
jo
dec
cmp
dec
sbb
les
in
pop
outsb
stos
push
lea
mov
push
repnz
push
mov
call
shr
dec
jne
dec
and
mov
push
movsl
mov
cmp
cli
hlt
jp
adc
mov
inc
fwait
sbb
pop
dec
sbb
stos
fimull
rcrl
pop
dec
mov
dec
xor
cmp
dec
clc
inc
jnp
dec
adc
cmp
mov
ss
mov
loopne
loop
arpl
jo
rcr
xor
cmc
inc
fucomi
gs
cmp
shlb
cmp
scas
idivl
cmp
les
jmp
cmp
int3
imul
xchg
lret
aaa
jecxz
cmp
jne
in
sti
add
dec
loop
clc
mov
sub
cmp
sbb
or
pusha
addr16
inc
mov
pop
std
cmc
stos
xor
cmp
not
fidivrl
cmp
dec
push
gs
jecxz
rcl
test
fmull
adc
sbb
sub
fadds
or
cmp
adc
jmp
std
je
inc
mov
mov
bound
sti
and
cmp
pop
cmp
and
cmp
xor
mov
lods
cmp
sub
mov
sti
cmc
pushf
cwtl
cmp
sub
mov
dec
mov
pop
mov
xchg
test
sti
xlat
xchg
out
cmp
dec
ja
test
mov
ret
cmp
pop
ret
add
clc
mov
std
jnp
cmpsl
or
add
cmp
test
inc
and
das
inc
cmp
pusha
je
xor
rcr
cld
andl
mov
cmp
jnp
clts
inc
mov
fnstsw
or
test
std
fstpt
mov
incl
pop
movsl
mov
data16
mov
enter
int
push
das
shl
sbb
test
arpl
jle
cltd
pop
inc
mov
dec
xchg
loop
xor
inc
cmp
les
in
mov
cmp
mov
mov
jecxz
dec
xchg
mov
jnp
push
mov
push
and
cwtl
mov
and
repnz
test
mull
dec
jp
sbb
adc
fdivs
sbb
test
push
inc
sbb
bound
pop
insl
leave
popf
arpl
inc
dec
std
out
xor
ss
and
push
loopne
adc
adc
out
cmp
inc
mov
mov
push
jl
push
cmp
fcomps
dec
aas
roll
jb
push
ds
jl
dec
idivb
mov
push
cmpsb
mov
mov
jmp
bound
loopne
loope
push
loope
lcall
insb
add
adc
and
outsb
fs
mov
push
jmp
jmp
push
dec
in
push
push
xor
push
lods
imul
push
pop
xrelease
cli
jbe
adc
jecxz
xlat
sub
aas
gs
cmp
mov
or
cmp
pop
shr
jae
cmp
push
repz
xlat
adc
dec
sbbb
cmp
nop
mov
pop
jae
out
pop
cmp
cld
ljmp
movsl
adc
push
aad
mov
inc
ja
sub
and
xchg
push
fwait
cmp
pop
pop
jle
and
in
mov
subl
lahf
mov
sbb
or
cmp
daa
pop
std
les
scas
jle
stos
push
xchg
cs
and
cmp
inc
xlat
push
mov
lods
or
addb
call
sbb
xlat
mov
into
jg
inc
cmp
loopne
rcll
cmp
mov
stos
std
imull
pop
cltd
push
mov
bound
popa
out
and
repnz
xor
in
cmp
ja
divl
push
xor
add
insl
dec
cmp
xchg
rolb
divb
jns
popf
enter
mov
addl
add
pop
jo
negb
shrl
cmp
sub
in
les
jecxz
fcmovnb
xchg
into
aad
out
sbb
lds
cmp
lods
push
jp
sbb
mov
cmp
bound
call
dec
or
daa
cmp
ljmp
lea
flds
mov
jnp
inc
push
sahf
in
int
int3
mov
cmp
adc
repnz
cmp
dec
cs
int3
cmc
mov
cmp
shll
jmp
jnp
mov
in
incl
mov
xchg
or
or
cwtl
aas
xor
dec
add
jle
sub
push
cmp
mov
js
mov
xchg
lds
jg
mov
inc
adc
adc
fucom
js
inc
inc
push
aas
aad
xchg
xchg
mov
sbb
lahf
insl
out
rcl
and
and
ret
repnz
xorl
stos
cmpl
dec
inc
inc
iret
mov
mov
xorl
cmp
push
mov
jecxz
jp
scas
mov
jge
push
or
xorl
jb
js
sbb
jge
cli
decb
cmpsb
cmp
into
iret
data16
add
sbb
pusha
int3
aad
int3
jl
sub
xchg
out
xor
sahf
adc
sbb
inc
mov
push
and
mov
nop
shl
data16
push
and
ds
pop
sub
sub
sti
pushf
jo
call
mov
sbb
lcall
push
mov
jg
or
lret
js
xchg
imul
mov
xchg
daa
pop
jg
jle
insb
movsl
sub
push
sbb
ds
sub
add
in
pop
cmp
xor
movsb
scas
jo
mov
insl
sbb
rorb
pop
test
cmp
mov
and
mov
clc
sub
jge
pop
test
jns
outsl
pop
insl
lret
jp
fcoms
mov
push
sub
xor
sbb
xor
mov
xor
insb
xor
int
jo
aaa
sbb
bound
mov
flds
cmp
mov
rorl
inc
cs
aas
scas
push
inc
call
lahf
pop
jne
inc
mov
cltd
lahf
fidivs
push
loope
cli
mov
mov
out
jmp
cmp
test
cs
inc
mov
sbb
lret
jb
je
rolb
or
aaa
mov
ror
mov
fdivs
js
imul
loope
sbb
stc
dec
mov
ret
sbb
inc
fs
dec
mov
mov
jmp
pop
xchg
std
gs
jg
mov
add
jecxz
xor
test
xor
xor
jmp
xchg
jb
pop
js
bound
xlat
lds
lret
int
pop
imul
aam
nop
jnp
jb
fstl
jge
fwait
sbb
inc
xor
inc
cmp
nop
pusha
mov
dec
sarb
into
or
push
inc
jb
mov
inc
mov
call
sti
js
stc
and
pop
gs
push
or
lret
mov
inc
ds
jmp
ja
test
pop
jb
js
je
xchg
arpl
pop
sbb
xchg
sub
test
mov
adc
pushf
adc
add
gs
adcb
pop
sbb
dec
xor
dec
push
and
inc
int3
jbe
movsl
orl
or
or
in
push
xor
and
add
and
out
pushf
or
fisttpl
and
test
sub
jns
xchg
ljmp
daa
cmp
out
adc
push
mov
enter
mov
sbbb
pop
int
lods
cs
pop
mov
xchg
adc
enter
in
rorl
iret
rorb
ja
add
outsb
add
or
mov
ja
mov
inc
jp
iret
loope
pop
subl
or
out
xor
popa
xor
cmpsl
or
dec
sbb
scas
cld
ret
jp
dec
cmp
xor
mov
cld
sbb
sub
xchg
dec
leave
pop
mov
sbb
adc
jg
bound
mov
mov
ret
stc
iret
addr16
inc
jg
or
je
out
test
mov
mov
in
dec
lret
into
addr16
xchg
idivl
in
std
xor
cli
loope
push
stc
xor
push
pop
mov
aaa
sbb
imul
lret
loope
fwait
xor
lea
insl
fstpt
leave
pop
push
test
dec
mov
xlat
pop
movb
fucomi
stos
dec
xchg
sbb
roll
fs
dec
jle
dec
adc
lods
sarl
cmp
sbb
aaa
pop
dec
xor
fwait
jns
gs
fnstcw
sub
inc
mov
inc
fwait
add
cmp
mov
sub
ljmp
inc
jno
inc
add
sbb
cmp
lahf
mov
sub
fldl
jno
inc
mov
jno
in
xchg
pop
shlb
inc
ljmp
mov
and
dec
es
ss
clc
repnz
je
or
and
mov
and
sub
fwait
inc
cli
fcmovnu
inc
data16
movsl
jnp
fwait
sbbl
push
loope
pop
add
cmpsl
data16
movsl
mov
sbb
dec
jle
inc
mov
adc
mov
lret
stos
dec
insl
sti
dec
inc
fs
sarl
cmp
dec
xor
push
or
lret
xor
fdivrs
mov
leave
or
push
pop
outsl
xchg
test
fadds
and
inc
data16
filds
mov
lock
inc
xor
adc
sbb
ss
and
dec
sbb
ds
lcall
mov
pop
lcall
sbb
fisttps
lcall
sub
dec
adc
pop
stos
iret
loope
mov
repnz
rcl
jle
pop
mov
inc
dec
adc
jmp
mov
mov
mov
mov
jno
sbb
adc
xlat
adc
sub
xlat
adc
adc
mov
mov
adc
push
mov
push
inc
idiv
and
mov
jle
cmp
push
or
orl
cmp
jmp
shrl
push
xor
gs
xchg
imul
lret
fidivs
jp
loope
sub
xor
daa
dec
sahf
jb
and
out
cmp
push
adc
pop
pop
es
loope
dec
xor
flds
mov
mov
pushf
es
jl
mov
ss
dec
jl
add
jl
adc
sbb
ds
pop
iret
mov
stos
out
dec
push
std
mov
sbb
cmp
push
jp
cmp
sahf
jl
mov
inc
minps
mov
mov
cmp
outsb
jns
mov
xchg
add
mov
lret
rcr
insl
adc
adc
mov
popa
xchg
xchg
push
call
inc
movsb
dec
mov
mov
mov
dec
jae
iret
dec
notb
inc
pop
nop
ret
dec
shll
int
das
sbb
sub
jb
jle
in
xchg
mov
jo
loope
jmp
repnz
bnd
aaa
in
and
pop
mov
arpl
test
js
and
cmpsb
cmp
pop
and
daa
mov
sbb
sbb
jno
sbb
repz
lret
push
jp
mov
negb
cmp
push
and
pop
pop
imul
lcall
cmp
jb
jle
push
into
adc
outsl
mov
lret
sub
in
sub
jnp
fidivs
jle
xor
in
pop
jns
xorl
jecxz
out
icebp
jb
rol
repnz
bnd
daa
xor
sub
jl
mov
xor
test
cmp
idivb
jbe
and
testl
rcl
pop
jp
dec
lods
inc
cs
ud1
mov
adc
pusha
lods
jne
lret
dec
cmpb
leave
dec
dec
sbb
mov
mov
add
dec
scas
pushf
fisttpl
xor
mov
out
push
mov
pop
jle
inc
mov
cmpsb
gs
or
inc
aas
bound
lock
adc
push
shrl
pop
jge
rcrl
cmp
sbb
mov
mov
mov
stos
xchg
push
cmp
pop
xchg
scas
hlt
fisttpll
mov
call
in
or
hlt
sbb
sti
dec
sbb
imul
xchg
es
push
cli
dec
jle
cmp
out
adc
fcomip
loopne
movsb
adc
pop
sbb
cmp
jnp
jg
pop
fwait
popa
lret
sbb
or
cmp
mov
js
inc
lods
lret
andb
repz
push
filds
jo
xor
jne
sbb
test
insl
test
push
push
push
ds
jp
into
adc
adc
sbb
push
push
stc
xrelease
push
loope
cmp
pop
xor
and
and
stc
dec
add
mov
movsl
jns
mov
lock
jl
push
loope
loop
dec
jle
mov
inc
and
xor
xor
add
mov
add
cmpl
pushf
mov
jmp
mov
sahf
adc
mov
dec
or
xor
stos
dec
rorl
or
jle
and
dec
cmpl
and
int3
fs
into
lea
pop
sbb
pop
daa
lods
int3
cs
hlt
mov
lret
mov
inc
or
imul
int
pop
mov
or
jp
inc
leave
aaa
or
fnstenv
adc
push
fidivrl
mov
dec
cltd
test
ret
push
jg
pop
dec
dec
cmpsl
xor
lret
fimuls
das
dec
sub
jl
out
xchg
jo
dec
xor
inc
pop
test
push
dec
aaa
inc
mov
push
adc
addr16
xor
xchg
mov
sbb
arpl
dec
xor
jge
or
out
mov
dec
mov
dec
cmp
jl
push
xor
cmp
inc
inc
fwait
adcl
jge
sbbl
sahf
cmp
sbb
aaa
into
add
pop
jl
add
mov
mov
enter
rorl
xchg
xor
jo
cmp
int3
xchg
jns
inc
fs
push
dec
icebp
into
xor
outsl
mov
jg
jle
adc
cmp
negb
or
push
add
xchg
popa
push
daa
fisubrl
cmp
pop
jp
rcrb
dec
or
xchg
stos
xchg
stc
lock
sti
subb
xor
inc
xchg
dec
inc
ljmp
scas
or
lock
dec
das
adc
sbb
mov
push
cmp
and
cmp
cmp
and
mov
xor
out
sbb
call
inc
cmpsl
add
cmp
mov
loopne
xchg
or
popf
ret
mov
je
or
mov
fldenv
sub
out
out
sbb
fmull
rcrl
pop
fidivrs
adcl
mov
les
mov
xor
xor
lea
or
xchg
fwait
lret
cmp
xchg
addr16
outsl
ss
sbb
lea
fwait
add
xor
and
pop
pop
dec
push
adc
cltd
cwtl
inc
sub
cmp
xor
imul
dec
push
loope
jo
dec
inc
les
fadds
loop
cmp
stos
sbb
sub
test
filds
pop
lahf
inc
stc
xor
inc
jno
xchg
jne
jl
add
gs
xchg
push
xchg
cwtl
jp
adc
mov
gs
inc
xchg
xchg
lods
xor
cmp
daa
pop
nop
jo
lods
xchg
mov
sbb
mov
popf
xor
mov
xor
in
mov
mov
in
jg
jle
lock
dec
jp
fabs
cmp
xchg
mov
cli
repnz
mov
pop
lret
cltd
dec
or
push
jns
imul
add
ss
sbb
dec
mov
repz
jle
or
mov
imul
repz
xchg
xchg
inc
jl
mov
mov
mov
out
scas
mov
mov
mov
inc
push
loope
mov
lret
sbb
fidivl
jecxz
mov
mov
and
fs
jbe
push
add
movb
jne
clc
into
add
and
jo
ret
out
dec
xorl
test
or
ss
push
aaa
push
into
hlt
adc
cmp
loop
mov
pshufw
pop
lock
sbb
je
and
xor
lret
dec
repnz
loop
xor
and
sahf
cld
je
jl
push
repnz
je
or
xor
jo
xor
xor
div
js
mov
loopne
mov
aaa
into
sahf
movsb
fmuls
jmp
ret
jo
and
inc
popa
xor
dec
test
mov
mov
js
imul
sbbb
push
nop
int
sbb
lret
xor
es
dec
aam
inc
jl
int
out
xchg
mov
sti
cmc
or
sub
jg
bound
jbe
arpl
mov
xchg
cltd
cmp
mov
bound
ja
test
mov
mov
push
fmulp
mov
xchg
mov
xor
rorb
fsubl
xor
inc
stc
iret
push
std
repnz
inc
movsl
pop
je
in
add
jb
ss
dec
lcall
jne
mov
cwtl
addr16
mov
pop
out
cmp
mov
xor
mov
xor
pop
xchg
pop
dec
rclb
repz
mov
cmp
mov
sbbl
fs
xchg
mov
insb
xor
lret
adc
jp
xorb
fstl
mov
mov
sbb
add
sbb
pop
mov
fidivl
fwait
testl
add
dec
lret
in
sbb
loop
sbb
xlat
loope
mov
outsb
popa
movsl
dec
mov
jb
cmp
jo
dec
push
or
xor
sub
data16
inc
gs
test
in
push
sbb
or
mov
bound
sbb
inc
cmc
jmp
mov
xchg
sbb
in
jl
scas
bound
mov
movsb
out
adc
xchg
ss
push
js
lcall
inc
ss
testb
xchg
xorb
sbb
sti
pop
jecxz
icebp
data16
pop
xor
adc
push
or
mov
shr
xchg
sbb
jl
push
mov
jb
jg
cmp
sbb
inc
xchg
mov
jl
addr16
push
loope
insl
inc
jl
xor
adcb
dec
mov
mov
mov
mov
add
dec
or
mov
sti
in
les
aam
adc
dec
xor
jp
sbb
dec
mov
mov
sbb
xchg
lods
xor
fidivs
push
mov
cmp
inc
mov
mov
sbb
cmp
mov
cmp
rcll
imul
pop
mov
lahf
mov
jnp
popf
pop
int
cli
xchg
pop
sbb
pop
mov
sbb
push
push
int3
fildll
mov
fwait
push
imul
test
lret
mov
add
movsb
and
mov
shll
xor
call
ds
dec
pop
out
repz
add
es
mov
test
repz
movb
and
pop
mov
ds
in
js
mov
stc
xrelease
dec
push
fistps
pushf
fists
mov
pop
out
fcoms
jo
jmp
jno
inc
xchg
xchg
daa
mov
xor
add
repnz
mov
xchg
jle
xchg
and
dec
cltd
jnp
addb
jo
mov
jmp
sbb
test
insb
sbb
insl
dec
mov
test
stos
sbb
jmp
movl
dec
xor
sub
sbb
sbb
push
ficoms
push
or
xor
roll
test
and
pop
add
dec
push
mov
mov
add
xor
mov
dec
pushf
test
test
xchg
cltd
pop
jl
add
pop
mov
mov
fwait
inc
or
jns
inc
les
cmpsb
out
daa
in
jl
add
cmpsb
adc
movsb
cmc
dec
fstps
out
xchg
push
pop
mov
xorb
inc
outsl
lods
jmp
jns
dec
xchg
inc
push
mov
sub
jne
jae
lret
outsl
loopne
dec
mov
mov
gs
pop
jae
mov
scas
popf
cmp
leave
stc
fninit
rcr
cmpsb
aad
cmp
mov
xchg
mov
jl
into
mov
mov
dec
lret
rclb
arpl
mov
popf
scas
jp
aaa
fwait
jns
lret
aaa
cmpsb
sbb
push
ss
out
xor
sbb
jg
fsts
jle
aas
sbb
jae
lret
insl
lret
mov
ds
sbb
xor
inc
movb
loope
lret
adc
pop
inc
sub
inc
jge
add
jbe
cmp
inc
das
mul
cmp
sub
sbb
sarb
test
in
stos
outsb
mov
test
imul
cmp
cmp
cwtl
inc
add
repz
out
inc
and
jae
repz
call
cmp
cmc
or
lea
mov
mov
movsl
mov
cs
xchg
dec
jl
js
fwait
xor
xor
dec
adc
sub
xor
dec
sbb
jl
loope
test
sbb
or
xlat
dec
repz
jo
gs
mov
inc
inc
xor
jbe
or
jl
fwait
jg
push
loope
mov
sbb
imul
call
sbb
pop
mov
pop
popa
mov
loope
pop
fldl
ljmp
shll
ja
add
mov
js
inc
cmc
in
fstps
out
xor
mov
or
sbb
cmp
add
mull
add
jecxz
sbb
inc
aam
out
inc
dec
inc
sbb
loop
sbbb
pop
push
in
enter
imull
aam
inc
out
add
xor
pusha
scas
out
mov
fiadds
sti
scas
jmp
pushf
les
int3
jmp
inc
sub
sub
jmp
jnp
push
mov
and
mov
out
mov
xlat
adcb
and
jecxz
mov
mov
adc
xor
dec
rorb
sbb
mov
int
je,pn
movsb
iret
pop
pop
push
jmp
outsb
stos
sbb
and
test
ja
cwtl
lret
push
jp
repnz
cwtl
cmp
dec
es
test
rcrl
lcall
aaa
test
mov
jp
aaa
mov
mov
test
rclb
into
repz
cwtl
push
test
popf
ds
aas
mov
mov
dec
pop
dec
xor
jb
jle
fidivrl
adc
mov
fcomp
sbb
cwtl
fidivrl
adc
dec
int3
mov
int3
test
push
jne
push
sbb
into
bound
dec
cltd
loope
lea
push
xchg
test
jae
mov
sti
and
adc
sbb
test
lret
mov
sbb
insb
out
mov
loope
mov
inc
xchg
lahf
lret
lds
push
jns
cmp
adc
sbb
js
sbb
in
mov
dec
iret
fisubrl
les
loope
cmc
mov
jns
repnz
cmp
inc
pop
repnz
mov
scas
hlt
daa
sbb
jo
mov
js
and
stc
adc
sub
add
sbb
sbb
inc
and
divl
push
fisttps
sbb
sub
fwait
int3
insl
xor
dec
sti
notl
adc
movsl
jnp
mov
je
xchg
inc
repz
aas
jl
inc
sub
mov
xor
dec
sbb
dec
out
dec
js
mov
add
sbb
xor
mov
push
loope
jl
mov
sub
push
fmuls
inc
sub
jo
xor
cmp
adc
test
inc
pop
cs
mov
inc
dec
cmp
push
add
lret
test
sbb
push
sub
cli
pop
inc
pop
ds
cli
push
int3
fisubrs
mov
fcmovnb
lcall
sahf
mov
mov
jae
dec
sbb
stos
adc
xchg
mov
call
mov
cmp
jg
mov
adcb
inc
jnp
lret
jns
mov
mov
out
ds
daa
xor
mov
xor
dec
and
bound
push
cmpsl
adc
xchg
cmc
lock
push
xor
loopne
mov
es
push
rcrl
arpl
inc
jnp
and
xor
inc
gs
dec
movsl
jnp
stos
sti
test
inc
push
stos
dec
mov
adc
mov
cmp
mov
jl
push
loope
je
mov
mov
cmpsl
dec
cmp
xchg
arpl
imul
xchg
ret
pop
xor
gs
imul
gs
sbb
pusha
or
cmp
dec
sbb
dec
hlt
dec
sbb
sbb
adcb
cltd
jns
xchg
push
std
push
pop
adc
lahf
decl
mov
leave
in
ret
fbld
jb
xchg
mov
out
popf
jae
cmp
cmp
xor
dec
push
push
inc
cmpsl
mov
roll
out
dec
sbb
jg
push
loope
cli
dec
and
xor
push
push
or
sbb
sub
fwait
xor
pop
aas
pop
jl
sub
xor
fwait
aaa
mov
sarl
pop
cmp
and
xor
sbb
les
mov
out
mov
dec
mov
sti
pop
jmp
sbb
xchg
jp
lods
jg
call
pop
pushf
arpl
arpl
sbb
xor
mov
dec
push
ret
shll
xchg
leave
aaa
movsl
lods
and
rcll
inc
push
dec
imul
add
xor
fcomip
xor
cmp
imul
push
loope
jge
stos
ss
jmp
xchg
cmp
fildll
int
push
ret
loopne
sbb
ja
lret
cmp
gs
jle
pop
add
xor
lahf
inc
int
and
jb
inc
gs
jl
test
je
lods
jp
ss
or
sub
push
dec
sbb
dec
mov
inc
inc
sbb
adc
es
mov
sbb
and
cwtl
add
dec
cmpsb
jo
cltd
lods
adc
push
inc
mov
aas
and
movsb
fwait
pop
les
mov
dec
sbb
repz
repz
xchg
add
lea
leave
addr16
mov
add
mov
or
icebp
add
lods
popa
xor
fiaddl
sarl
and
movsl
and
mov
movsl
jns
cmp
inc
fcomps
inc
fisttpl
fs
out
mov
sarb
mov
sbb
nop
cltd
es
push
xor
loope
ljmp
outsb
adc
pop
ds
xchg
in
out
sbb
loopne
stos
cmpb
loope
jg
ret
xchg
xchg
dec
xchg
addr16
mov
bound
scas
gs
dec
mov
insb
mov
scas
adc
jae
sub
into
fildll
xchg
fyl2xp1
or
mov
into
test
jg
and
jbe
pop
pop
fiadds
xchg
lret
cmp
repz
sbb
push
aas
shl
lods
or
mov
inc
adc
leave
mov
repnz
int
lock
sbbl
out
ljmp
xor
push
adc
push
and
dec
test
cmpsl
ret
mul
lret
sub
jb
popa
addb
loope
sti
insb
in
inc
sbb
jl
es
in
jno
adc
jo
out
scas
inc
ds
fsts
movsb
leave
lret
scas
loopne
mov
xor
in
pop
fmulp
xchg
out
jns
mov
sub
or
outsl
mov
ljmp
jp
xor
lcall
mov
das
std
sbb
mov
rep
outsl
push
es
gs
rol
jecxz
dec
movsl
jnp
or
repnz
int3
out
and
jl
ret
enter
dec
stc
inc
fidivl
jl
leave
sub
or
shll
sbb
jmp
pushf
jge
xor
je
jecxz
or
inc
pop
je
dec
addb
lret
sti
iret
xchg
imul
sub
sbb
mov
xchg
aad
dec
loop
fiadds
das
jp
lret
mov
dec
int
cwtl
jne
ss
cmp
inc
pop
mov
dec
push
cld
sbb
adc
ss
aaa
cmpsb
popaw
daa
lret
pop
lods
sarl
dec
pop
mov
and
sub
xchg
push
or
in
push
and
jge
nop
push
or
or
push
dec
bnd
jb
loope
push
std
xor
iret
fbstp
fucom
sbb
xchg
int
in
cmp
mov
scas
xchg
adcb
xor
jo
and
sbb
stc
sub
jl
jns
xchg
adc
inc
lods
or
insl
mov
test
lret
repnz
sub
sub
leave
dec
mov
lods
repnz
bound
mov
pop
or
jp
ljmp
push
mov
aam
jg
mov
mov
stos
cwtl
nop
mov
dec
repz
pop
mov
and
mov
mov
add
lret
sbb
fisttpl
les
mov
push
ret
sbb
mov
mov
dec
dec
ss
adc
lret
stos
fstpt
sbb
sbb
inc
sub
out
cwtl
xchg
es
adc
jmp
cli
jmp
dec
jg
bound
cmpsl
cli
in
sbb
or
pop
add
lret
loope
movsl
sub
cmpb
pop
outsl
std
mov
sbb
test
push
popa
jge
inc
lahf
xchg
cmpb
xor
sub
add
das
pop
xchg
add
xchg
adc
les
or
fldcw
mov
pop
dec
fsubs
loope
lret
jno
sbb
push
mov
push
lock
adc
pop
jae
fwait
out
leave
add
movsl
cli
fimuls
inc
pop
or
push
mov
add
jl
bound
mov
and
pop
and
roll
mov
cmp
or
repnz
out
cmp
pop
test
inc
cld
scas
dec
sub
cmp
push
loope
xor
or
xor
in
sahf
dec
jg
cmp
jp
mov
bound
mov
mov
sub
gs
cmp
inc
aaa
cmp
dec
out
mov
cmp
jmp
adc
pop
scas
dec
stc
sub
fildll
lret
inc
mov
lret
loop
fstps
cmpsb
inc
gs
test
in
lcall
inc
ret
out
and
push
push
push
lds
lret
pop
cmp
nop
mov
arpl
mov
data16
mov
inc
inc
inc
mov
add
add
add
sahf
out
shrb
xorb
cmp
add
mov
lret
cmp
loope
xorl
lods
orb
fs
push
cmp
mov
inc
cmpl
sbb
inc
scas
cmp
imul
cmp
and
icebp
call
add
adc
das
cmc
fcomp
cmp
mov
mov
cmp
jp
pop
stos
stos
sti
ljmp
pop
sub
mov
mov
cmp
ret
cmp
sub
adc
iret
cmp
or
fwait
aas
add
cmp
loope
popf
fwait
test
and
dec
les
or
int
cmp
add
jb
call
xchg
cmp
ja
jecxz
lds
loop
fstps
int
cs
negl
es
hlt
push
xor
mov
icebp
imul
or
pop
push
ret
int3
cmp
cmp
jo
jecxz
in
mov
jmp
jmp
xor
mov
push
das
stos
cmp
lock
adcl
cmp
jnp
mov
push
pop
inc
push
jmp
movsl
mov
lahf
outsl
cmp
aas
out
xlat
lds
data16
pop
popa
call
jg
cmp
push
lods
add
jne
cmp
lcall
dec
dec
rcrb
cmp
push
lret
push
cmp
jbe
inc
out
inc
dec
add
cmp
push
and
cmp
push
sbb
mov
or
xchg
xchg
inc
sub
dec
cmp
pop
push
xchg
cmp
ja
aas
pop
xor
imul
aad
mov
je
cmpsl
cmp
ljmp
pop
jno
cmpb
sarl
mov
add
lds
mov
pop
mov
movsl
ficoml
xchg
cmp
jb
cmp
sbbb
push
cmp
jl
xchg
jno
rol
cmp
pusha
push
std
pop
lahf
stos
xchg
dec
inc
fistpll
adc
mov
fwait
cwtl
imul
stos
sbb
jnp
lcall
sahf
mov
pop
adc
popf
roll
xor
jo
dec
pop
mov
inc
mov
xor
aaa
aaa
int3
jg
lret
push
cltd
ds
push
dec
stos
dec
sbb
clc
fsubrs
sbb
mov
cmp
mov
inc
sbb
xor
push
push
loopne
mov
push
pop
dec
dec
xor
pusha
mov
push
mov
cli
xchg
jmp
add
push
mov
addr16
shlb
jno
pop
pop
mov
push
xchg
mov
add
sub
inc
es
adc
adc
inc
and
pop
dec
fildl
inc
jne
popa
mov
test
fucom
dec
mov
lahf
fiadds
in
cmpsl
outsb
mov
out
movsl
cltd
aam
jp
inc
mov
mov
sub
fwait
daa
or
pop
sbb
pop
or
adc
jmp
mov
jl
lds
ret
inc
sbb
cmc
jmp
add
push
inc
fs
leave
mov
call
call
dec
inc
fs
mov
mov
fildl
sbb
mov
sub
js
cmp
mov
fidivs
sbb
cli
adc
or
xchg
and
test
das
adc
mov
test
xor
jae
bound
jae
inc
push
inc
int
sbb
push
xor
jo
call
xor
out
dec
mov
and
fdiv
jmp
lahf
dec
repnz
lret
ss
sub
sbb
pop
lret
dec
pop
sbb
mov
push
dec
push
push
push
inc
and
pop
cmp
xor
push
sbb
push
shl
int3
in
push
jp
ss
jmp
mov
outsb
jns
sbb
pop
mov
xor
fs
test
push
dec
push
fld1
xchg
dec
xor
adcl
dec
idivb
orl
sbb
cmp
lea
dec
and
lock
iret
pop
jl
pop
xor
bound
js
mov
pushf
adc
scas
mov
rcrb
dec
add
repnz
outsb
sbb
mov
pop
pop
ds
arpl
test
pop
fistpl
int
mov
mov
gs
movsb
pop
xor
lahf
and
push
andl
cmpsl
sub
pop
push
inc
repz
js
cmp
push
imul
xchg
sub
adc
push
popfw
sub
push
add
mov
inc
add
inc
jns
rorb
scas
jo
add
jl
loope
or
dec
inc
js
lret
loop
rclb
outsl
adc
dec
push
lods
sarl
pop
dec
bound
sub
ret
mov
adc
sarl
cmp
aaa
inc
pusha
mov
jns
push
push
mov
inc
gs
into
xor
loope
jmp
inc
enter
cwtl
ds
gs
mov
add
push
mov
dec
lods
test
js
ss
mov
fnstcw
sub
xor
mov
fiaddl
mov
mov
cmpsl
cmp
inc
gs
mov
jl
push
loope
xchg
add
cltd
push
sbb
sbb
lret
in
jb
mov
xor
mov
mov
jbe
mov
xchg
insl
ljmp
dec
aaa
call
popf
stc
jo
mov
and
jnp
stos
jge
jbe
daa
lcall
lahf
mov
dec
repnz
adcl
mov
nop
inc
xor
fwait
arpl
mov
mov
adc
dec
dec
loop
dec
sbb
pushf
sbb
dec
loop
dec
sbb
ss
sahf
cwtl
dec
inc
dec
dec
mov
ljmp
xor
sbb
jb
test
lret
xor
les
xor
adc
xor
jb
rorb
into
mov
stc
xor
jg
ficoml
add
adc
push
sub
adc
leave
cmp
jp
push
pop
imul
mov
mov
es
xor
shl
sbb
xchg
xchg
xor
jne
pop
sbbb
es
sti
or
je
sub
aad
mov
scas
in
flds
xor
stc
and
or
jecxz
mov
in
es
js
cmp
je
ds
in
sbb
jbe
in
ds
jo
pop
cmp
mov
jb
in
cmp
inc
push
mov
cmp
mov
cmpl
imul
js
fiaddl
pop
call
inc
push
fwait
add
stos
sbb
pop
mov
adc
or
mov
pop
jmp
xor
adc
nop
mov
sub
inc
flds
jg
nop
mov
mov
or
xor
jo
lcall
stos
nop
push
pusha
mov
nop
rcl
sub
sbb
sbb
stos
nop
mov
mov
push
nop
mov
data16
and
inc
call
inc
pop
xor
sbb
sbb
or
pop
mov
lret
nop
mov
sub
faddl
add
fildl
jne
rorb
arpl
cmpsl
sub
mov
mov
jecxz
test
stc
adc
cmp
xor
sub
jp
xor
adc
loop
push
loope
lahf
stc
inc
adc
xor
rclb
loop
sbb
jmp
sub
adc
sbb
in
mov
cmp
and
jg
shl
imul
mov
jecxz
ljmp
out
dec
lret
jle
pop
jle
mov
mov
sub
test
sub
xor
sbb
ss
jle
dec
add
stos
mov
dec
sub
xor
adc
mov
movsl
jnp
lcall
mov
movsl
jns
daa
lret
cwtl
ss
cmp
cmp
sbb
cmpb
ljmp
push
pop
xor
push
sbb
ljmp
and
xchg
pop
icebp
mov
cli
mov
push
leave
cmp
push
ss
xchg
inc
cmpsb
inc
push
in
jl
int
mov
popf
mov
mov
mov
call
cltd
popf
imul
stos
and
adc
xor
sbb
inc
sbb
cmp
jno
ja
push
sub
dec
xchg
xchg
mov
fadds
mov
dec
imul
push
xor
das
xor
xchg
js
adc
fdiv
mov
xchg
push
int
sti
mov
push
mov
pop
xor
inc
sarl
mov
scas
clc
stos
jnp
pop
je
push
ret
insl
inc
test
cmp
sbb
mov
fstpl
xor
data16
sbb
pop
push
repz
push
out
dec
lret
repnz
jbe
jns
cmpb
push
jp
and
sbb
or
repnz
xor
sub
and
dec
jg
and
jo
xor
mov
pop
mov
ss
jle
xchg
std
cmp
stc
rcrl
test
sub
rcrl
cmp
lret
cmp
ret
sarb
push
test
mov
sbb
sahf
ret
sbb
jo
mov
xchg
mov
notl
pushf
xor
mov
out
fwait
pushf
gs
or
dec
dec
lcall
xor
cmp
xor
clc
dec
cmp
jae
cmp
xor
jne
xor
imul
sbb
dec
xchg
sub
popa
cmpsl
cmp
out
sub
adc
push
cmp
gs
dec
js,pn
fwait
popa
ds
or
lock
test
and
sub
pop
inc
rcr
dec
sub
add
or
rcl
sub
lock
jge
aad
mov
mov
mov
gs
or
inc
mov
or
notb
shlb
mov
pop
cmp
insl
insl
rep
xor
decb
adc
mov
dec
fimuls
inc
sbb
inc
inc
xor
divb
mov
cli
ja
dec
dec
mov
lock
or
mov
and
pushf
mov
or
mov
aam
pop
push
pop
outsl
outsb
cld
xor
jp
push
inc
ss
add
ret
cmp
jnp
ljmp
cli
in
cmpsb
cmp
add
je
lea
popa
xchg
lret
and
jbe
vpaddusb
sub
cli
dec
dec
addr16
and
pop
repz
xchg
sub
mov
aas
inc
xchg
nop
cmp
lods
xchg
xor
dec
jne
loopne
sbbl
in
inc
jmp
mov
ss
icebp
mov
cmp
adc
and
xor
je
xchg
je
mov
mov
mov
mov
mov
fs
mov
xchg
shll
shrl
sub
ljmp
sbb
push
pop
sarl
jle
cmp
adc
cmp
sahf
mov
cmp
cltd
mov
fstpt
stc
frndint
fcoml
jg
cmp
repnz
cmp
push
adc
nop
push
cmp
pop
xor
dec
mov
adc
or
mov
repz
jno
mov
icebp
rcll
pop
ja
mov
cmp
xlat
push
mov
hlt
aam
cmp
cmc
aad
popf
repz
sbb
mov
cmp
xor
xor
jle
xor
mov
lea
mov
jb
stc
mov
adc
jecxz
fnstenv
sbb
xor
adc
lahf
xor
jge
xor
lock
cmp
push
and
test
outsb
and
or
cmp
rol
sub
cmp
dec
fwait
sti
repz
cmp
pop
xchg
shr
mov
and
fs
push
aaa
push
cmp
imul
push
cmp
mov
hlt
cmp
sahf
push
les
or
xchg
pusha
lods
aaa
enter
icebp
out
and
inc
lahf
cmp
fstpt
cmp
pop
pop
mov
mov
out
lea
je
cmp
adc
imul
shll
xchg
or
call
and
aad
mov
imulb
xlat
loopne
push
dec
stc
fucomp
cmp
xor
cmp
xlat
push
xchg
aad
je
pop
ret
shl
push
insb
cmp
mov
adc
mov
mov
and
cmp
in
cmp
in
shl
xor
cmp
sub
int
inc
sbb
xchg
cs
pop
rol
in
or
add
sbb
xor
and
fs
aad
add
out
xlat
cmp
add
inc
shl
mov
add
cmp
mov
idiv
inc
mov
mov
adc
mov
and
sti
dec
dec
cmp
push
outsl
pop
cmp
inc
pop
cmp
mov
enter
mov
lahf
cmp
repz
inc
pop
xor
dec
and
sbbl
leave
cmp
cs
push
adc
jmp
add
repz
cmp
cmp
cmp
jmp
ljmp
adcb
xchg
push
mov
xor
sub
fsubl
xchg
rolb
outsl
dec
cltd
cmp
lea
cmp
outsl
in
add
dec
maxps
cmp
hlt
pop
lods
inc
cmp
aam
out
or
cltd
jne
add
cmp
sub
mov
popa
shrl
cmp
dec
add
lods
or
cmp
rclb
adc
and
xor
cmp
xchg
xchg
popa
shrl
loop
stos
cmp
cwtl
stc
jcxz
cmp
push
stos
sarb
lods
sub
pushf
pusha
out
int
scas
mov
or
ja
sbb
les
pusha
mov
loop
jae
out
xchg
shll
add
sahf
mov
sbb
inc
mov
and
je
cmpsl
jne
stos
push
mov
idivb
pop
push
pop
sbb
xor
roll
adc
test
pusha
imul
cmp
sbb
or
xchg
pop
xorl
out
in
and
int3
sarl
cmp
xchg
lods
pop
cmp
jae
mov
clc
lds
and
and
add
jecxz
push
lock
cmp
xchg
add
jns
cmp
mov
popf
cmp
mov
mov
sbb
mov
pop
cmp
in
movsl
lock
xchg
cmp
movzbl
inc
cmp
jb
jge
shlb
es
dec
add
sub
shll
into
int
pop
sti
fucomi
movsl
fwait
sub
pop
insl
movl
and
mov
jg
rolb
push
jnp
lea
shll
pop
in
dec
mov
cmp
mov
gs
pop
movsl
pop
sar
mov
adc
push
push
andl
cld
jno
cmpb
stos
adc
cmp
add
movsl
out
cmp
push
pop
std
cld
sub
pop
mov
push
pusha
push
push
in
cmp
mov
mov
or
jb
lahf
ret
adc
jge
sbb
fidivs
out
xor
push
push
xchg
adc
mov
mov
inc
test
sbb
popa
cmp
push
out
push
inc
insl
inc
pop
cmp
add
jbe
loope
cmp
hlt
mov
test
or
repnz
cmp
xchg
sub
pop
icebp
aaa
stos
cld
add
mov
mov
cmp
cmpsb
lds
xchg
call
bound
out
inc
xor
cmp
push
out
scas
orl
and
push
fadds
cmp
out
pop
jecxz
mov
mov
pop
test
mov
inc
jno
fldenv
cmp
push
push
rcll
or
cmp
fs
cmp
adc
mov
call
fdivrl
dec
xchg
or
or
push
lahf
mov
mov
push
inc
push
fs
pop
xor
sarb
add
movsb
cmp
frstor
xor
adc
jmp
or
pop
fdivrs
jp
jb
aas
dec
cmp
testl
aad
xchg
jle
sub
fcoms
fwait
and
xor
mov
xor
cmp
adcb
xchg
pop
imul
push
insl
xor
inc
lods
jmp
cmp
outsb
xor
rclb
inc
cmp
cmpsl
cltd
test
ret
cmp
inc
loope
cmc
in
pop
cmp
call
mov
and
shll
movsl
or
iret
stos
cmp
scas
lahf
inc
push
and
out
cmp
loop
jb
inc
imul
mov
test
or
xlat
ret
sbb
mov
cmp
stos
xchg
cmp
xor
cmp
adc
add
clc
insl
popa
clc
fsubr
dec
loope
aad
or
ss
inc
jg
popf
fs
and
mov
into
cmp
out
sub
jp
adc
dec
pop
mov
pop
cvttps2pi
addr16
xchg
int3
cmp
pop
clc
cmp
test
fstpl
push
cmc
jmp
cltd
inc
cmp
xor
cmpsb
and
movsl
enter
xchg
mov
mov
cmp
imul
cs
lock
iret
cmp
adc
cmp
inc
cli
std
popa
jmp
xlat
and
repnz
push
shlb
das
cmc
add
cmp
in
loope
movsl
sarl
dec
jns
and
es
inc
loope
add
add
sbb
mov
jg
add
in
and
shlb
mov
cli
inc
enter
in
andl
xor
ret
jnp
test
adc
push
ret
mov
scas
loopne
shrl
and
mov
cmp
and
loopne
and
push
jle
popa
fs
repz
sbb
ja
cmp
jbe
or
adc
lock
pop
jae
mov
popf
pusha
pop
dec
cmp
pop
stos
nop
fs
cmp
mov
mov
imul
mov
mov
pop
jae
inc
mov
pusha
push
lods
shlb
cmp
gs
sbb
pop
fistpll
pop
mov
xchg
cmp
push
aaa
loope
cld
in
cmp
rcll
pop
dec
mov
lret
gs
test
test
jmp
jne
xor
sbb
cmp
xor
jecxz
movsl
cmp
loopne
cmp
rorl
lahf
out
int3
xchg
loopne
test
outsb
out
pusha
xor
ja
jns
stc
fiadds
cmp
pop
push
add
loope
out
loopne
cltd
nop
add
cmp
test
lock
cmp
stos
roll
fstpl
insl
rcrl
je
loope
jmp
mov
stos
out
das
mov
cmp
pop
jp
loopne
add
fistpll
pusha
fs
gs
in
push
jl
lock
cmp
cmpsb
xorb
arpl
or
shr
and
loope
nop
sub
imul
jmp
lahf
lcall
insl
cmp
testl
xor
cmp
dec
sub
sti
xlat
test
hlt
jecxz
jle
out
dec
add
and
jmp
filds
repz
ds
pop
xlat
pop
pop
clc
loop
mov
xor
sbb
and
cmp
rcll
sub
data16
sbb
stos
imul
cmp
add
xchg
fcompp
mov
cmp
fs
movsb
sti
pop
and
ret
xor
fwait
mov
sti
jno
idivl
lods
pop
push
sahf
pop
pop
rolb
cmc
fistpll
lods
add
and
push
outsl
fdivrl
push
push
mov
imul
icebp
cmp
loopne
inc
xchg
pop
mov
stos
sti
cmp
rcll
cmp
mov
push
add
adc
int3
xor
xchg
mov
push
in
cmp
iret
xchg
add
cmp
jnp
je
xchg
sbb
movsl
cmp
stc
mulb
lock
gs
sub
iret
mov
pop
fildl
jecxz
jnp
push
out
mov
and
mov
cmp
int
fdivl
jbe
inc
pop
imul
out
or
rorb
addb
sub
lods
movsb
dec
cwtl
gs
jmp
cmp
repnz
movsl
and
cmp
xor
out
inc
es
ja
cmp
jge
push
xchg
divl
scas
lret
pop
and
sbbl
sub
inc
aam
mov
scas
or
xchg
inc
fistl
lock
push
outsl
cli
imulb
cmp
sub
ret
in
sbb
sbb
in
and
gs
cmp
mov
mov
push
dec
fistpll
dec
mov
aad
insb
xchg
addl
jne
gs
fs
dec
imul
pop
mov
inc
push
lea
sahf
cli
inc
jl
lds
ljmp
mov
fstp
je
cmp
push
mov
cmp
jb
ds
popl
data16
pop
notb
push
jp
hlt
popf
push
jbe
add
xchg
or
test
cwtl
add
imul
xchg
cmp
ficoms
in
fwait
and
outsb
add
mov
out
out
and
rcrb
mov
inc
je
cmp
or
out
shlb
sub
das
pop
pop
cmp
lock
mov
fidivs
lea
sub
adc
jp,pn
and
int
clc
mov
scas
test
cmp
imul
and
shll
into
aam
imul
push
loope
cmp
cmpsl
jmp
pop
sub
add
sti
int
add
mov
mov
ja
data16
cmpsb
cmp
mov
lahf
lds
outsb
cmp
nop
outsl
push
scas
pop
add
mov
adcl
out
cmp
ds
aad
xchg
xchg
mov
or
les
fcomps
sti
repz
pusha
mov
add
mov
in
popa
push
cmp
loop
jg
sbb
cmp
aad
mov
add
pop
mov
cltd
cmp
adc
mov
fsubrl
push
adc
cli
cmpsb
mov
sub
cmp
dec
pusha
outsb
cmp
loope
aam
xchg
test
sub
add
mov
nop
add
out
cmc
inc
push
repz
jp
sbb
xchg
aas
mov
iret
aad
daa
xchg
add
sbb
jg
adc
scas
fs
cmp
jge
add
add
pop
shlb
cmp
push
lods
cmp
xchg
mov
lahf
pop
and
inc
cmpsb
mov
lahf
pop
cld
add
imul
and
stos
fnstsw
insl
and
std
data16
out
mov
fisubrl
repz
cmp
inc
mov
and
mov
fsubl
push
pop
pusha
lret
mov
cmp
movsb
les
cmp
push
mov
push
xchg
add
xor
pop
dec
stos
fcmovnu
push
or
cld
sbbl
negl
scas
mov
mov
jp
fmull
or
push
and
mov
rclb
cmp
test
pop
pusha
out
push
out
mov
mov
add
inc
clc
xor
sub
pop
cmp
push
in
fsubl
sbb
add
sar
xor
shlb
mov
cmp
jl
lcall
scas
cmp
and
out
mov
cli
dec
and
adc
cmp
dec
movsb
xchg
mov
lret
cmp
imul
add
rclb
inc
hlt
or
out
and
fs
lahf
loope
or
cmc
pop
lods
dec
int3
cmp
fwait
scas
sub
aad
and
scas
xor
cmp
shl
movsl
lds
pop
push
data16
sub
xor
mov
and
addr16
add
sub
and
xor
pop
aam
mov
iret
loopne
cmp
xlat
cmp
xchg
fisubl
pop
inc
std
cli
push
and
xorb
out
sub
lds
and
mov
dec
jb
mov
out
or
inc
push
jnp
mov
push
pusha
add
test
arpl
xchg
mov
adc
dec
lds
cmp
fsubl
or
cmp
les
fwait
insl
adc
data16
cmp
mov
loopne
lds
sbb
iret
sub
adc
int
mov
in
xor
aam
lret
ret
mov
cmp
lods
stos
pop
sbb
cmp
add
add
xchg
insl
test
sti
gs
mov
add
stos
test
ret
pop
push
clc
arpl
out
push
outsl
cmp
test
mov
pushf
jle
jb
pusha
jo
fstp
pop
sbb
cs
xchg
mov
lahf
sarl
sarb
xchg
filds
sub
out
sti
push
cmp
cmp
cmp
popl
fwait
stos
mov
nop
and
mov
loope
cmpb
cmp
mov
or
cmc
jmp
push
bound
repnz
sbb
cmp
das
fxch
and
fnstsw
xor
add
pop
adc
int
cmpsl
jno
shrl
push
add
ret
sti
popf
xchg
gs
push
pop
cmp
daa
jbe
mov
hlt
leave
push
jnp
addl
mov
sti
inc
hlt
ja
mov
stos
lods
pop
out
push
inc
push
nop
subb
push
popa
fcomip
push
add
lock
push
cld
cmp
hlt
nop
andl
cmp
pop
faddl
out
cmpsb
cmp
cltd
cld
and
push
loope
mov
dec
sub
sbb
dec
std
push
cmp
and
icebp
sbb
loope
jo
fstp
fsubs
subb
xor
inc
fstpt
jo
mov
inc
adc
loopne
adc
cli
ja
xchg
mov
popf
hlt
scas
sub
movsb
lods
cmp
dec
cmpb
lahf
mov
cmp
sub
lret
or
adc
jecxz
mov
inc
push
cmp
outsl
mov
cmp
gs
out
inc
loopne
shl
sti
adc
lods
out
cmp
add
sarb
lock
mull
push
pusha
daa
cmp
ja
pushf
pop
es
sub
out
ss
fcompl
loop
outsl
movsb
lock
nop
jno
dec
shrb
add
movsl
sbb
xlat
fdivrp
inc
cmp
dec
int
data16
imul
add
cmp
jl
es
and
lahf
int
int
lret
out
cmp
xchg
pop
cmpb
or
pop
push
loopne
pop
inc
das
mov
into
mov
cmp
push
pusha
cld
mov
fisttpl
cmp
pop
jae
fs
cmp
xchg
mov
pop
jecxz
lea
or
inc
gs
inc
rclb
lods
cmpb
pop
pop
cli
fisttpll
xchg
out
mov
sub
inc
cltd
dec
inc
mov
inc
or
cmp
mov
pop
mov
pop
cmp
push
leave
cmp
ret
mov
daa
sbb
andb
cmpsl
fs
cmp
jmp
aaa
inc
push
pop
sub
jb
aas
mov
imul
pop
pusha
cmp
mov
or
addr16
mov
in
cmpsb
cmp
push
cmp
loop
mov
cmpsb
repnz
sbb
dec
mov
mov
popf
xor
cmp
jmp
jmp
in
cmp
in
imul
fcmovne
cmp
andb
push
test
cmp
mov
jmp
add
pop
dec
aas
andl
xchg
jecxz
sbb
inc
test
jle
cmp
cmp
andl
xchg
ss
xchg
cmp
pop
add
xor
cmp
cmpl
loopne
arpl
jns
cmp
ds
push
data16
andb
and
mov
inc
pop
sarl
adc
add
lds
inc
xchg
jecxz
sub
mov
or
dec
out
lcall
pop
imul
pop
imul
pushf
xchg
dec
mov
dec
loop
xchg
movsl
jge
add
std
push
sbb
lea
push
lcall
cmp
xchg
test
jo
fsub
pop
stc
out
mov
test
stc
mov
pusha
inc
adc
add
fildl
and
inc
cmpl
push
pop
cmpsl
pop
xor
jg
pop
mov
jp
pusha
cmp
xchg
in
pop
aaa
int
mov
mov
cmp
in
push
cmp
adc
sbb
cwtl
ss
movsb
cmp
test
std
push
fisubl
xchg
stos
lahf
cmp
sub
cmp
insl
xchg
fcomps
cmp
push
dec
mov
and
idivb
shll
pop
xlat
sub
sbb
xchg
and
sti
cmp
jecxz
cmp
ret
mov
pop
jle
jmp
pop
xchg
xchg
jbe
xor
lock
loopne
pop
add
scas
add
xlat
repnz
out
pop
out
jo
lahf
pop
mov
push
es
pop
adc
out
cmp
cmp
push
test
shrl
jno
out
adc
xchg
xor
xor
jp
mov
cmp
jecxz
add
inc
lods
or
xchg
icebp
cmc
rep
or
sub
mov
js
loopne
fidivrs
push
xor
mov
inc
cmp
or
sub
outsl
pop
enter
rorb
and
test
mov
lods
fs
loope
scas
cmpsb
sti
mov
jbe
cmpsl
mov
pop
lret
xor
xchg
mov
fadds
test
jg
mov
adc
inc
into
push
adc
es
inc
mov
cmp
mov
inc
cmp
int3
or
les
stos
pusha
shrb
cld
mov
or
dec
aam
movsl
cmp
dec
and
stos
roll
popa
inc
jl
push
push
clc
adc
clc
out
mov
fsubrl
and
jmp
insl
cmpsl
push
fdivrl
shll
loopne
sbb
je
xor
mov
sub
cmp
pop
fadds
ds
lock
popa
test
imul
mov
cmp
cmp
sarb
jae
les
sub
outsb
or
xchg
push
cmp
into
mov
xlat
pop
leave
shl
jp
loope
mov
popa
loopne
inc
out
outsb
push
mov
xor
or
push
cmpsl
cli
inc
jae
mov
or
stc
add
aad
or
in
andb
jp
jne
pop
aaa
xor
imul
inc
gs
popf
sbb
mov
mov
jmp
cwtl
loop
sarb
movsl
sub
data16
xor
inc
cmpsb
xor
in
push
mov
inc
dec
mov
cs
out
sub
cld
inc
loope
adc
cmpsl
pop
cmp
mov
out
xor
cli
shlb
inc
jp
iret
scas
lds
popf
in
iret
stc
xchg
xor
cmpl
sarl
es
and
movsb
mov
fstpt
xchg
cmpsl
push
into
xlat
loopne
pop
fcomps
jp
jne
xor
out
xchg
push
rorl
push
insl
popf
mov
in
hlt
mov
and
push
stc
xor
cs
cmp
and
pop
push
cmp
lock
cmp
jmp
dec
mul
movsb
cmp
pop
and
in
mov
mov
xchg
and
sbb
sbb
shrl
sub
and
imul
inc
movsl
cmp
xchg
arpl
sarb
cmp
repz
stc
jmp
or
dec
loope
ss
or
and
repnz
add
frstor
hlt
loope
outsl
mov
mov
push
and
cmp
sarl
add
jne
cwtl
pop
xor
or
int
jnp
shll
in
adc
notl
xor
inc
and
mov
sbb
sbb
sub
pop
xor
aam
sbb
notl
mov
cmpsb
cmp
sarb
mov
hlt
sbb
push
xor
cmc
lahf
xchg
xor
movsb
and
pop
sub
insb
jge
cmp
mov
add
in
lods
sub
mov
mov
cmpsl
lods
jl
mov
movsl
in
lods
add
mov
popf
push
jecxz
cmp
dec
movsl
rolb
mov
lret
das
or
xchg
add
icebp
roll
loope
adc
aaa
mov
in
repz
sub
cmp
sbb
cmp
xchg
jb
punpcklwd
cmp
rcl
push
cmp
push
add
mov
cmp
daa
mov
lret
mov
loope
jecxz
dec
cmp
loope
hlt
mov
cmp
adc
cmp
pop
fsubl
push
fsubl
outsl
test
jne
sub
movsb
sti
inc
adc
cli
movsl
push
mov
jne
jecxz
mov
shrl
stos
aam
push
es
jg
mov
push
enter
jo
cmp
sbb
and
pop
cli
xlat
leave
mov
aaa
mov
js
xor
iret
testl
dec
pop
push
lret
ja
dec
inc
je
sbb
sarb
aaa
fcmove
push
div
push
add
ss
mov
das
test
sahf
ss
mov
mov
pop
andb
xchg
jmp
fisubl
lock
outsb
and
pop
rorl
loop
or
ds
adcb
xor
cmp
sbb
cwtl
xor
mov
loopne
adc
out
jg
roll
cltd
js
fisubrs
sbb
sub
rolb
pop
jle
and
incb
fcomps
xor
pop
mov
das
lock
mov
hlt
mov
ret
shlb
sbb
mov
xor
jp
sub
or
lock
xchg
hlt
ret
cmp
fbstp
andl
push
jae
dec
inc
enter
daa
xor
fisubs
mov
sbb
ss
inc
outsb
and
lock
mov
mov
js
mov
rolb
mov
fisubs
mov
addr16
call
dec
lret
push
jp
dec
enter
push
cmp
cmp
out
and
fists
dec
rcr
lock
ss
fs
rcrb
push
fdivrs
aam
mov
ret
out
sub
adc
orb
adc
out
mov
cwtl
inc
sub
adcl
xor
adc
pop
les
push
dec
es
mov
stos
dec
push
hlt
mov
sbb
xor
xor
dec
dec
cmp
jp
fsubr
jbe
inc
dec
pop
cwtl
enter
inc
stos
fistps
enter
test
lcall
mov
sbb
mov
push
aaa
mov
sub
push
mov
sti
cmp
cli
das
pop
test
out
xchg
aam
push
sub
js
pushf
xor
and
mov
and
and
and
lcall
fmull
fidivl
mov
ss
dec
fwait
mov
push
rolb
outsb
test
faddl
and
movsb
add
ljmp
push
and
rcr
cld
or
push
xlat
cmp
push
insl
gs
cmc
pop
repnz
inc
xchg
push
rcrb
mov
out
pushf
es
xchg
cld
and
fs
and
outsb
inc
add
stos
add
jp
sbb
push
push
and
cmpsb
mov
test
jl
or
lcall
iret
cli
pop
or
pop
push
fcomi
push
scas
sub
pusha
or
je
mov
mov
mov
add
fisubl
imul
xchg
pop
pop
push
inc
mov
fsubr
pop
lds
je
push
or
pop
inc
or
jp
push
mov
faddl
jno
mov
jp
sbb
in
sbb
ljmp
push
pop
pop
pop
push
push
iret
push
scas
lock
add
push
xchg
jecxz
push
or
lock
sbb
or
cs
aam
dec
inc
adc
decl
ss
pop
push
mov
and
rcrb
movsb
mov
movsl
jg
addl
push
pop
mov
jg
and
pop
push
pop
jg
push
xchg
pop
inc
shrl
bnd
xlat
pop
mov
inc
cs
add
and
push
rcr
adc
or
xor
fsubrp
data16
jmp
loope
push
or
addb
es
adc
mov
cltd
mov
dec
call
push
inc
stos
inc
adc
sbbb
jmp
xor
int
shlb
xor
test
or
push
xor
xchg
mov
data16
xorb
xchg
mov
inc
add
adc
add
add
pusha
adc
repz
cmpsl
jle
cmpsb
xor
xchg
aaa
xchg
mov
push
xor
lds
stos
jmp
cld
rcl
shr
enter
mov
and
jae
push
rcl
repnz
int3
add
adc
push
mov
dec
imul
fs
or
lock
fcmovbe
jg
adc
xor
cld
pop
notl
inc
pushf
mov
cmp
int
fcomps
mov
aam
test
insl
pushf
cmp
push
pusha
jp
xor
cmp
scas
std
pop
dec
sub
cmpsb
bound
fimull
fidivl
cmp
xor
dec
cmp
ficoml
test
fdivl
push
push
cmp
ds
add
in
ss
xlat
ss
rorb
mov
xor
mov
cmp
cwtl
mov
pop
adc
fdivrs
sub
sbb
jns
push
fimuls
mov
stc
pushf
push
aas
fstps
jg
cmp
mov
mov
cmpsb
cmp
pop
mov
cmp
lock
mov
push
fst
mov
outsb
jmp
movsb
add
movsb
add
movsb
add
adc
test
movsb
add
adc
test
movsb
add
dec
sbb
mov
ds
js
js
loope
aad
jle
in
adc
cmp
adc
dec
mov
adc
dec
pop
lcall
adc
aas
push
mov
mov
cmp
jbe
sub
je
fdivrl
pop
cmp
xor
ret
xor
test
add
cmpsb
push
cli
mov
or
arpl
pop
lret
cmp
dec
sub
cmp
push
dec
sub
mov
test
cmp
scas
pmaxsw
outsl
adc
scas
add
ljmp
pusha
gs
sbb
cmp
dec
push
xchg
cmp
fcoms
in
mov
cmp
mov
out
adc
lret
es
notl
cmp
jg
push
add
aas
cmp
dec
stos
pop
outsl
in
jno
orl
idivb
in
sarl
lods
cmp
sub
jp
adc
outsb
push
cmp
pop
cmc
icebp
data16
out
cmp
add
lcall
push
cmp
push
xchg
pop
cmp
dec
negl
daa
nop
cmp
push
pop
xorl
jl
sbb
ror
in
push
loop
cmp
rcll
xchg
das
insb
int3
cmp
dec
dec
or
in
jnp
push
cli
inc
add
xchg
xchg
fistpll
lock
mov
push
mov
and
adc
mov
mov
cmp
sahf
or
mov
adc
pop
cwtl
hlt
mov
fwait
orl
jbe
mov
xchg
loop
inc
pop
mov
jnp
sbbb
lods
sbb
jle
xchg
mov
mov
sub
add
jge
dec
cmpsb
dec
aaa
jae
sbb
or
inc
jge
mov
std
mov
sub
scas
dec
mov
jnp
xorb
leave
cmp
and
sbb
xlat
aaa
xlat
pushf
cmp
xchg
rcll
fwait
cmp
mov
nop
cwtl
cmp
push
push
js
jp
cmp
mov
mov
dec
add
push
xor
cmp
xchg
shrb
pop
dec
push
ja
inc
and
jp
cmp
mov
cmp
jge
popf
mov
pushf
ja
fidivl
ds
inc
subb
push
imul
fidivrs
cmc
jl
outsl
add
lods
jle
adc
les
and
lods
addr16
inc
or
pop
cmp
cmp
cmp
dec
test
cmp
insb
lcall
cmp
cmp
push
gs
add
insl
push
inc
in
jg
dec
lock
ja
lds
jle
popa
lods
push
pop
cmp
dec
jno
xchg
adc
dec
nop
push
leave
add
fsubrl
sub
mov
mov
dec
orb
sub
cmc
cmp
and
subb
ja
jmp
notb
cwtl
cmp
outsb
rorb
mov
cmp
int3
incb
sti
loopne
cmp
sbbl
icebp
pop
repz
out
pop
std
inc
pop
mov
test
fldcw
int3
push
mov
fildl
inc
mov
test
xlat
nop
imul
jae
inc
add
idivb
dec
js
jnp
stc
ffree
and
cltd
jp
mov
mov
jle
inc
pop
xor
mov
adc
les
xchg
cmp
push
rorb
cmp
xchg
dec
cmp
dec
mov
lods
lret
mov
dec
jl
sub
and
rclb
cmp
ficoms
iret
dec
pop
popf
cmpsb
mov
jle
pop
cmp
cmp
in
mov
clc
pusha
div
mov
dec
addr16
or
lcall
push
cmp
repz
int3
int
cmp
pop
cmpsb
js
jns
and
xor
aas
aaa
add
gs
and
lret
aam
fdivs
adc
adc
cmp
jmp
fimull
push
imul
pop
push
push
mull
dec
out
fdivrl
cmp
or
xchg
sbb
ret
data16
imul
mov
cli
xor
nop
and
bnd
add
or
or
mov
int3
cmp
pop
sti
cmp
into
cmpsb
nop
daa
idivl
pop
pop
sbb
sbb
jl
jmp
cmp
mov
loope
in
ret
push
sub
mov
ret
cmp
xlat
mov
add
aaa
mov
sub
roll
dec
aad
sbb
push
mov
fbld
and
lods
stos
add
popa
sarl
out
das
xchg
ds
xor
xchg
je
cmp
sub
add
pop
out
cmp
jl
xor
lcall
or
imul
out
shlb
jmp
cmp
fisubl
outsl
push
mov
cmp
inc
mov
adcl
xor
sti
test
cmpl
mov
pop
jae
leave
cwtl
cmp
loopne
out
fcmovnu
aaa
subl
imul
push
rcr
dec
cmp
and
dec
sbb
mov
sub
inc
fdivrp
loopne
jmp
and
mov
jmp
jns
mov
inc
or
popa
and
pop
adc
movsl
adc
das
push
cli
jne
mov
mov
xor
call
loopne
jecxz
out
cmp
push
lock
dec
xor
loop
cmp
iret
lods
ljmp
fsubs
mov
mov
leave
xor
pushf
mov
mov
cmp
movsl
aam
xchg
iret
or
add
cmp
mov
push
ffreep
mov
aaa
push
imul
and
inc
js
cli
adc
jecxz
cmp
and
cmpsl
test
jl,pt
js
testl
jmp
xlat
ss
cmp
clc
push
ljmp
loop
or
cmp
mov
cmp
xchg
cmp
and
jl
imul
stos
cld
inc
xor
push
pop
xor
cmp
lods
inc
cmp
insl
shlb
pop
ja
cmp
popf
lcall
xchg
and
addb
dec
cmp
dec
mov
xor
repz
xchg
aaa
pop
cmp
pop
push
and
arpl
inc
aam
lahf
cwtl
out
cmp
in
adc
xlat
cmp
sbb
push
cmp
add
out
xor
mov
sbb
int3
xchg
push
mov
jb
cmp
jg
inc
pop
add
aad
ficomps
jbe
xchg
add
test
test
fcmovbe
cmp
out
inc
lcall
push
test
addb
push
mov
call
xchg
inc
in
push
cmp
jp
fwait
in
scas
cmp
push
jg
lock
inc
fiaddl
lea
ss
int3
hlt
bound
cmp
lods
icebp
ja
lret
lods
inc
jnp
shl
inc
xor
xchg
mov
or
outsl
jg
fldl2e
nop
cmp
mov
cmp
and
pop
xor
clc
mov
mov
aaa
jns
mov
jmp
pop
addr16
std
adc
cmp
shlb
sub
adc
xchg
clc
jecxz
xchg
popf
cmp
mov
mov
pop
pusha
pushf
loop
push
add
aad
lret
lret
int3
jo
xchg
jno
mov
add
popf
xlat
xchg
mov
cmp
je
nop
mov
jno
push
cmpsl
ret
orb
dec
pop
cmp
int
xor
cld
idivl
inc
mov
ret
push
add
lcall
push
jnp
cmp
sbb
sub
mov
gs
cmc
or
mov
sub
outsl
and
adc
ja
mov
jge
fs
jle
mov
mov
mov
lods
jb
fisubrl
push
push
push
cmp
cmp
lock
xorl
and
popa
push
fistl
in
add
stos
jge
sbb
mov
aas
out
xor
pop
cmp
inc
pusha
dec
icebp
cmp
insl
flds
pop
push
cmp
test
mov
mov
ficomps
sbbb
mov
xlat
and
sub
cmp
lds
les
adc
mov
pop
dec
cmp
pop
imulb
jmp
cmp
pushf
testl
mov
add
sub
cwtl
cmpsb
mov
mov
pop
mov
dec
cld
cli
fsts
add
inc
jp
sarb
lahf
adc
movsb
inc
cmp
and
out
pop
inc
add
mov
arpl
jns
subl
mov
cmp
inc
pop
imul
das
sarl
mov
xor
cmp
inc
test
inc
pop
stos
cmp
daa
repz
outsb
stos
cmp
sbb
sbbb
xchg
sbb
cs
xor
rep
cmp
aad
xlat
jl
repz
rolb
jmp
add
sbb
roll
pop
xor
sub
cmp
int
and
in
dec
pop
mov
inc
mov
mov
adc
outsl
cmp
push
push
mov
jo
std
test
shr
xor
negb
fdivl
iret
int
sbb
cmp
ret
lea
push
sub
shrl
inc
cmp
fildl
inc
cmp
ss
fcomps
les
inc
add
inc
cltd
imul
jo
and
nop
cmp
es
dec
xorb
sub
pop
or
sbb
cmp
xchg
jecxz
cmp
test
push
xchg
mov
pushf
dec
stc
int
cli
lods
test
cmp
jns
fnop
fildl
arpl
dec
es
cld
cmp
xchg
into
lds
fiadds
xchg
sub
data16
std
xor
xchg
out
cmp
push
sbb
out
fisttps
sarl
faddl
rolb
test
mov
jae
mov
mov
cld
fcmovnbe
repnz
adc
cmp
int3
js
pop
lods
mov
lea
push
mov
clc
sub
test
rorb
push
jbe
sbb
xlat
fildll
lret
pushf
les
lea
popf
or
aaa
jle
daa
outsl
xchg
sti
mov
mov
cmp
in
dec
push
jb,pt
movsb
cmpsl
stos
push
cmp
cmp
mov
mov
dec
push
mov
cmp
pop
fidivrs
cmp
cmp
cmpb
cltd
stos
scas
ret
cmp
sub
pop
xor
xchg
movsl
mov
inc
cmp
fstpl
push
and
mov
mov
add
cmc
cmp
lahf
add
and
out
into
mov
mov
popf
add
aad
cmp
int3
shrl
cmp
fisubrl
mov
cmp
ror
sbb
fisubrs
pop
cltd
or
mov
add
mov
inc
push
lret
int3
push
cmp
xchg
icebp
je
mov
lret
leave
xchg
nop
sarb
addr16
adc
movsb
ficoms
pop
lods
mov
stc
insl
mov
out
inc
ret
pop
cmp
shl
mov
push
sbb
je
and
xchg
or
cmp
adc
pop
in
movsb
push
aad
fwait
mov
aam
cwtl
int3
enter
repz
adc
jmp
jbe
push
cmp
les
jmp
scas
adc
mov
add
cs
popa
js
sarb
mov
pop
repnz
dec
cltd
xchg
push
nop
xchg
loope
push
mov
push
jmp
movsb
pop
xor
int
loop
pop
and
insl
idivb
vpsllq
icebp
stos
xchg
pushf
cmp
push
hlt
cmp
inc
sbb
scas
cs
jb
mov
mov
dec
test
out
outsl
lods
stc
cmp
jbe
clc
and
xor
inc
cmp
fs
rcl
push
hlt
sbb
sbb
cmp
xchg
cmp
pushf
xchg
fwait
call
daa
xor
out
insl
in
fistpl
shl
test
xor
push
cmp
jg
push
loope
sbb
aas
mov
inc
outsb
mov
out
mov
lcall
xchg
movsb
xchg
cmp
das
xchg
push
inc
xchg
pusha
stos
cmpsl
cmp
mov
in
pusha
cmp
insb
stos
shlb
add
aam
xchg
mov
cmp
push
sbb
jo
loopne
inc
dec
cmp
add
and
cmp
or
idivl
or
cmp
sbb
rol
mov
lret
cmp
pop
inc
or
mov
pop
pcmpeqw
pop
lods
scas
rcrb
xor
cmpb
mov
jns
out
jmp
dec
mov
cmp
push
leave
adc
insb
out
cmp
cmp
jge
enter
jmp
aas
cmp
adc
xor
inc
xchg
mov
cmp
cmp
stc
cmp
fwait
aaa
loopne
aad
inc
jbe
scas
sbb
cmp
fs
lahf
inc
mov
cmp
sti
jmp
mov
sub
cmp
leave
cli
push
imulb
bound
push
popa
cmp
repz
and
xchg
cmp
fsts
das
cmp
jne
mov
lock
inc
mov
cmp
pop
add
repz
cmp
cltd
daa
and
hlt
gs
arpl
push
sub
add
xlat
pop
mov
dec
mov
jl
cwtl
xor
jg
repz
cmp
bswap
sbb
adc
sti
inc
fs
sub
mov
lds
ret
out
sub
or
aam
jns
sbb
cmp
pavgb
xor
xlat
mov
cli
xchg
lods
into
pushf
cmp
lds
aaa
cmp
shll
cmp
mov
mov
dec
dec
jbe
xor
popa
stc
xchg
add
int
lahf
mov
add
gs
mov
xchg
lcall
pushf
cmp
call
test
mov
inc
mov
adc
dec
cmp
into
int
lcall
scas
iret
inc
xlat
sbb
adc
les
pop
mov
fsubl
jl
in
inc
pop
shll
mov
cs
mov
xlat
in
xor
fcompl
adc
cmc
aas
cmp
dec
daa
das
rep
push
cmp
adc
push
jle
cmp
dec
add
mov
sbb
into
lea
cwtl
imul
cmp
xor
mov
cmp
sbb
mov
popa
mov
cmp
add
sub
push
jb
clc
mov
cmp
sub
cmp
rcrl
cmp
push
lret
xchg
mov
push
popf
cmp
sbb
out
jg
lcall
test
shll
addl
scas
inc
cmp
cli
mov
fs
mov
push
je
cmpsb
and
mov
lcall
scas
in
mov
movsl
cmp
arpl
shl
outsl
and
mov
inc
data16
roll
rcrb
scas
scas
inc
mov
out
test
or
fbstp
cmp
call
jo
jecxz
and
jae
cmp
jmp
lods
pop
fwait
jecxz
repz
jl
outsb
push
mov
add
imul
int
xor
jae
mov
in
inc
test
pop
ss
into
cmp
cwtl
dec
ret
xor
fnstcw
hlt
jmp
fwait
cmp
pop
adc
hlt
and
fs
mov
add
push
icebp
cmp
ss
dec
cmp
fnstsw
xor
cmp
outsb
pop
cmp
push
mov
ds
cmp
rcrw
mov
mov
cmpsl
mov
sub
adc
push
es
fs
pop
mov
inc
loop
cmp
pcmpgtb
lcall
cli
add
jl
ss
adc
outsl
lcall
sub
cmp
ret
jmp
jmp
add
xchg
mov
outsb
or
or
jmp
movsb
inc
lds
mov
and
pop
cmpb
cmp
pop
mov
inc
les
lea
xchg
jne
rorb
adc
fildll
jp
push
mov
lretw
and
inc
push
nop
jecxz
add
add
cmp
cmpsb
jg
sbb
out
cmp
xchg
cmp
ret
loop
mov
js
mov
pop
aad
outsb
and
in
and
es
insb
call
mov
xor
ja
inc
adc
lock
ret
or
add
mov
adc
adc
cmp
or
lods
movsb
cmp
out
pop
test
sub
cmp
sbb
mov
movsl
mov
cwtl
cmp
xor
cmp
daa
call
pop
push
in
cmp
iret
addr16
in
pop
repnz
push
pusha
adc
in
fidivl
hlt
pop
jo
adc
cmp
xor
xchg
mov
mov
and
orb
call
xlat
cmp
jns
push
bound
outsl
pop
cmp
sub
es
call
mov
decb
jb
gs
scas
xor
cmp
adc
fs
scas
orb
push
or
cmp
in
push
int3
xor
jb
fimull
sbb
dec
cmp
mov
inc
xor
cs
cmp
xchg
cmp
repnz
inc
mov
and
cli
fcoms
sbb
ret
ficomps
movsb
mov
insb
add
cmp
cmp
bound
inc
repz
cmp
add
mov
stc
cmp
ficompl
and
xchg
pop
cmp
add
cmp
fistpll
mov
outsl
mov
dec
lods
mov
lret
inc
sbb
push
sbb
stos
cmp
aaa
fsubp
or
pop
fmuls
sub
mov
dec
mov
test
cmp
push
add
jmp
shrl
lret
mov
mov
rclb
jne
and
mov
xchg
or
and
or
data16
ret
cmp
stos
shll
push
push
movsl
cmp
push
arpl
cmp
adc
inc
push
outsb
in
and
push
roll
js
jmp
stos
cmp
push
in
mov
sbb
mov
sub
pop
push
pop
clc
cmp
popf
loope
or
hlt
cmp
inc
lods
mov
cmp
add
enter
push
lds
mov
test
js
mov
pop
loopne
cmp
cmc
inc
cmp
lret
mov
dec
cmp
dec
lock
in
adcb
xchg
add
movsl
test
inc
das
sbb
dec
mov
inc
enter
hlt
push
scas
jle
sbb
cmp
out
pop
insb
movsl
xchg
outsl
insl
gs
bound
in
loopw
leave
cltd
sbb
and
and
push
imul
xor
insb
or
xchg
xor
sahf
iret
mov
cs
cmp
scas
or
cmp
addr16
xor
mov
movsl
and
mov
sub
xchg
sub
pop
jne
js
xor
rorb
stos
inc
je
gs
cmp
cmp
out
inc
inc
xor
mov
sbb
inc
cli
sub
mov
or
cmp
xlat
sub
adc
cmp
sbbl
cmp
pop
jne
fcmovu
fisubrl
sbb
andb
btc
jo
ret
pushf
jl
stc
adc
fldt
rcrl
mov
jns
cmp
mulb
shlb
or
ja
pop
insb
dec
shrl
fadds
je
push
pusha
rcrl
jl
xorl
add
cmp
cmc
std
jmp
gs
push
push
mov
test
idivl
mov
sbb
mov
insb
adc
push
or
addr16
inc
adc
or
shl
scas
mov
daa
cmp
je
pop
adc
int3
cmp
push
insl
inc
cmp
dec
xlat
in
loope
mov
test
jb
daa
in
cmp
cltd
mov
ds
addr16
sub
mov
inc
lret
shrb
xor
jp
push
pop
fwait
inc
lds
cmp
test
dec
xor
sarb
fmul
fs
mov
push
xchg
jle
xchg
cmpsl
xor
cmp
inc
lea
xor
xor
mov
cmp
mov
aad
lds
adc
andb
mov
cmp
leave
cmp
fists
cmp
adc
int
mov
loope
push
xchg
inc
mov
cli
daa
cmp
sbbl
mov
fwait
dec
sub
data16
jae
mov
mov
fldl
cmp
push
pop
dec
jae
dec
push
daa
adc
jnp
cltd
sbb
sgdtl
cmp
push
orl
jp
adc
ljmp
lods
lret
cwtl
cmp
fwait
in
sub
test
xchg
or
out
rcr
cmpsl
mov
je
mov
cmp
cmp
add
out
cltd
xchg
std
in
fndisi(8087
cmpsl
insb
lea
outsl
push
pop
and
add
fdivrl
shlb
repnz
cmp
pop
xchg
jo
cltd
cmpsb
push
cmp
cmpsl
repnz
ja
test
inc
shl
mov
es
movlps
cmp
lods
ret
int
mov
mov
push
ja
stos
ds
inc
out
cmp
lods
add
or
inc
fldenv
sti
pop
shld
fcompl
lods
sahf
add
and
fwait
sbb
sub
divl
es
add
sbb
jl
int3
popa
rclb
leave
sti
xor
inc
aam
jb
iret
sub
cli
sbb
cld
and
popf
cmpb
pop
and
popa
imul
sbbb
cmp
pop
and
imul
loope
out
pop
in
or
hlt
pop
stos
mov
cmp
jp
inc
xor
clc
mov
push
mov
and
mov
cmp
in
ja
inc
cmp
mov
pop
sub
cmp
mov
gs
mov
cmp
pop
in
sbb
aaa
lods
insb
out
cmp
sbb
jo
pop
cmp
les
adc
jg
cmp
leave
pop
or
sub
mov
bound
enter
or
jns
dec
jnp
idivl
cmp
imul
sub
xchg
call
add
pop
fsubrp
or
adc
lcall
dec
sub
jnp
sub
dec
pop
cmp
dec
popl
jno
lods
in
jmp
cmp
inc
or
mov
rcl
lcall
or
sarb
pop
pusha
movsb
aaa
adc
mov
js
imul
in
rcrb
out
cmpsl
xlat
jmp
xchg
cmp
or
pop
lcall
and
aas
push
push
pop
add
cli
pop
xlat
cmpsl
int3
sub
mov
add
xor
js
adc
gs
test
cmp
sub
jbe
cmpsl
xchg
nop
rorb
inc
add
jle
cmp
sbbb
cmp
ja
int
mov
adc
pop
jo
lret
cmp
jle
xor
call
mov
push
fimuls
fcompl
imul
push
adc
mov
sbb
push
dec
fidivl
enter
ds
adc
lcall
and
lea
fld
xlat
inc
stos
fimuls
cmp
cmp
pop
pop
xor
or
daa
cmp
test
mov
mov
fxrstor
lcall
shrb
jno
cmp
cmp
push
xlat
cmp
xchg
call
push
fwait
inc
mov
cmp
lods
into
sbb
aas
jae
pop
les
and
xor
jge
lahf
push
mov
sarl
dec
xchg
jmp
bound
push
sti
mov
add
iret
outsb
insl
das
jmp
dec
adc
mov
and
cmp
sbb
cmc
sbb
cmp
cmp
jnp
cmp
fcmovne
decl
imul
mov
repnz
cmp
adcb
bound
cmp
mov
mov
les
enter
pop
push
xchg
out
add
popa
lds
insb
fidivrl
mov
shrb
loopne
inc
jno
dec
sahf
cmp
xchg
sub
cmp
sbb
or
mov
repz
jge
jecxz
loope
rorb
jl
fisubrl
cmp
cmpsw
sbb
dec
adc
out
cmp
dec
cmp
popf
int3
xor
test
mov
ja
lret
adc
rol
push
mov
fldpi
xor
cmp
mov
nop
adc
scas
dec
push
adc
xlat
iret
out
mov
loopne
popa
outsb
add
add
inc
adc
mov
xchg
cmp
js
lock
xchg
xor
push
push
jle
mov
ss
les
imul
addr16
cmp
loopne
cmp
xchg
mov
stos
cmp
inc
jb
in
inc
push
mov
push
data16
xor
adc
cmp
lock
jne
adc
adc
jns
and
inc
mov
cmp
leave
lock
cmp
enter
in
pop
cmp
sbb
fwait
lahf
cltd
orl
xchg
cmp
inc
jne
imulb
dec
push
pushf
inc
xlat
rcrb
rclb
mov
aas
mov
ljmp
out
dec
push
xor
mov
xchg
lret
jo
cmp
add
pop
inc
cmp
xor
jl
mov
dec
mov
cmp
lret
out
and
repz
cmp
and
cmp
fcmovne
cmp
fstps
cmp
aam
loopne
mov
add
jbe
fidivl
pop
jge
adc
cmp
push
add
cld
pop
xchg
fstpl
out
xchg
inc
cmp
das
dec
mov
imul
in
mov
daa
mov
aad
mov
push
test
scas
les
stc
pop
xchg
cmp
pop
and
cmp
fwait
xchg
push
and
int3
inc
inc
xchg
lret
ljmp
mov
stos
cmp
in
dec
xor
ja
nop
cmp
pop
call
pop
aam
ficoms
stos
jecxz
mov
push
jae
es
xchg
fdivr
mov
lds
pop
mov
jne
ror
push
lods
das
popf
xchg
mov
in
mov
aad
pusha
aaa
cmp
adc
imul
cmp
dec
decl
enter
sarl
mov
movsb
emms
xor
sbb
push
cmp
push
js
cmp
push
mov
cmp
cld
jne
dec
pop
pusha
mov
aam
rcrl
and
out
out
cmp
pop
pop
and
aam
add
cmp
daa
bound
cmp
mov
int
cmp
test
stos
adc
sub
adcl
inc
inc
jge
cmp
pop
pushf
lahf
xchg
jno
adc
lret
pop
mov
sbb
sub
sub
cmp
mov
lods
xchg
push
xchg
stc
add
ret
popf
test
xchg
cmp
pop
scas
loopne
push
rorl
cmp
lods
imul
inc
add
cmp
inc
pop
loop
and
and
ljmp
pushf
cld
and
mov
mov
and
inc
cmp
stos
lods
mov
cmp
and
cmp
ljmp
aad
adc
test
cltd
enter
les
or
cmp
cltd
mov
xlat
sarl
out
jecxz
mov
bound
ja
pop
outsl
cmc
adc
xchg
xchg
xor
ficoml
and
sbb
or
cmp
cmp
add
pop
popf
mov
das
aaa
es
aad
jecxz
cmp
insl
lods
jge
jae
cmp
xchg
fwait
leave
loopne
cmp
xchg
imul
inc
movsl
adcb
mov
xchg
xor
scas
adc
dec
out
jae
jge
sarl
mov
sbb
cwtl
ss
xor
adc
cmp
and
fdivs
pop
sbb
cld
jle
cmp
test
dec
cmp
and
das
cmp
popa
fadds
xlat
xorb
push
clc
out
mov
out
add
cmp
aad
mov
movb
sub
and
stc
xchg
in
or
cmp
mov
cs
pop
lcall
push
xor
in
nop
out
sbb
cmp
cmp
out
mov
push
insl
sbb
sbb
rclb
je
or
lret
sub
push
outsl
sub
nop
loopne
mov
adc
mov
xchg
xchg
js
push
out
pop
es
lods
cld
xor
sti
out
test
pushl
lcall
mov
inc
shlb
xchg
mov
jns
cmp
adc
xor
pushf
js
mov
dec
aas
inc
push
cmp
mov
cmp
rclb
daa
xor
scas
jno
dec
mov
jecxz
clc
inc
stc
cmp
xchg
repz
fcmovnb
inc
cmp
and
cmp
dec
xor
ljmp
subb
lods
sub
arpl
ja
addl
cld
or
xchg
inc
cmp
mov
sbb
aas
lret
cmp
jecxz
cmp
push
std
pop
fimull
dec
jno
mov
out
cmp
loope
xchg
fsubl
mov
jl
cld
scas
lds
pop
pmaxub
cmp
push
je
cmp
iret
leave
push
sbb
cmp
cld
xchg
push
mov
fnsave
cmp
jbe
clc
fdivl
rcll
sbb
fbstp
cmc
or
xchg
insl
pop
add
mov
xor
test
icebp
fwait
and
movsl
and
aas
lret
subb
push
imull
mov
lods
sbb
and
popf
cmp
int3
aad
push
fisubrl
dec
mov
test
mov
mov
pop
fcmovu
sti
cmp
inc
into
ljmp
inc
dec
test
and
cmp
pop
push
out
addr16
cmp
mov
inc
xor
jmp
push
es
insl
xor
inc
mov
add
xor
push
rcpps
adc
repnz
mov
jmp
xor
mov
lods
movsl
cmp
pop
loopne
cmp
in
adcl
xor
or
push
mov
cmp
sahf
mov
out
cmp
fs
xchg
pop
push
inc
in
lods
or
popf
adc
test
orb
cmp
rorb
xchg
cmp
jno
inc
inc
lods
mov
pusha
leave
xchg
sub
mov
adc
mov
test
jno
pusha
fcmovnb
and
test
lods
and
loopne
pop
leave
call
fisubs
push
add
pushf
adc
data16
adc
xchg
jp
mov
xchg
movsb
mov
lods
and
iret
sbb
cmp
out
dec
and
cmp
jge
or
sbb
push
mov
jo
out
sub
js
pop
mov
iret
mov
pusha
testl
cmp
push
xchg
paddusb
js
xlat
daa
and
xor
jo
aad
xor
cwtl
cmpsl
sbb
fbld
test
mov
inc
cmp
xorb
icebp
adc
call
cmpl
dec
ds
or
movsl
sbb
out
cmpsl
repz
imul
jb
xchg
sahf
out
mov
mov
int
sti
stos
push
lret
call
xor
or
repnz
sbb
mov
push
cmp
cmp
adc
pop
sub
xor
fisubl
out
add
lahf
or
cld
fsubrs
cmp
movsb
pop
repnz
xchg
cltd
sti
cmp
popa
lfs
imul
xchg
cmc
push
in
cmp
or
cwtl
imul
pop
cmp
adc
sub
adc
cmp
in
fidivrs
inc
cmp
lcall
pop
sarb
fucom
or
cmp
xchg
inc
out
mov
fidivrs
cmp
mov
out
add
inc
rorb
xor
rorb
or
cmp
lods
xor
adc
pop
and
sub
jmp
sbb
stos
idivb
pop
jbe
pop
add
xlat
xchg
xchg
fucomi
jae
out
cmp
pop
shl
cmp
andl
mov
rol
insb
mov
mov
xchg
dec
loop
push
mov
cmpl
out
shrb
loopne
push
test
mov
popa
cmp
add
add
nop
cmp
pop
cmp
and
faddp
mov
xchg
out
ds
push
lods
jae
mov
icebp
cmp
in
pop
push
fcmovb
cmp
xchg
out
loop
test
push
iret
inc
fs
stos
in
lret
cmp
insl
loop
dec
dec
rcrl
sti
fwait
ljmp
push
jno
pop
movsb
fistpll
out
gs
push
mov
shl
adc
test
sbb
rcll
jecxz
test
flds
inc
mov
rcrl
gs
cmp
add
dec
mov
cmp
xchg
sub
cs
imul
or
cmp
dec
xlat
add
dec
lret
cmp
or
xor
fcoml
lahf
jns,pt
cltd
cmp
push
out
sbb
inc
into
cmp
cmp
adc
jne
pop
lret
ss
pop
jecxz
cmp
scas
jp
jp
out
je
jmp
cmp
pop
pop
outsb
lret
fisttps
movsl
sub
out
cmp
jmp
int
push
aam
sbb
inc
popf
mov
in
ret
xchg
fistpll
push
add
mov
cmp
lcall
cmp
and
xor
mov
int
push
cmp
pusha
or
sbb
add
push
and
xor
sub
sarl
xchg
jmp
add
movsb
push
pushf
gs
test
add
lods
cmp
or
and
popa
jae
and
cmp
add
incb
pop
shrb
xchg
imul
add
xchg
js
loope
outsb
sti
fwait
adc
movsl
xor
mov
cmp
xchg
subb
dec
pop
cmp
fwait
or
xchg
push
cmc
xor
in
iret
cmp
ret
aam
sub
cmp
dec
lret
sti
jge
mov
loop
cmpsb
fildl
bnd
mov
push
mov
push
xor
pop
push
xchg
cmp
out
mov
fstpt
sub
data16
aam
jge
cmp
push
test
ja
inc
into
jb
add
les
push
cltd
fsubs
cmp
pop
add
mov
lods
inc
cmp
orl
daa
popf
inc
roll
imul
arpl
iret
sub
push
push
out
xor
es
push
pusha
xor
inc
cmpsl
pop
test
add
scas
rorl
xor
pop
out
lds
imul
fcmovnb
cltd
cmp
aaa
inc
sbb
aas
cmp
add
mov
pop
xchg
pop
push
and
mov
xlat
fcoms
inc
aam
cmp
nop
arpl
jns
push
es
pop
mov
add
lea
xchg
outsb
outsl
ss
mov
xor
dec
jbe
movsbl
cmp
adc
repz
cmp
jle
and
and
movsl
jnp
xchg
jnp
gs
outsl
fwait
cmp
mov
loop
scas
ljmp
loopne
and
fimull
in
sbb
outsl
inc
gs
jne
jmp
ret
adc
mov
jg
xor
sbb
ljmp
cmp
jg
xchg
cmp
inc
or
shll
clc
xchg
cmp
jge
cwtl
rep
cmp
fisubs
dec
add
mov
inc
mov
xor
dec
dec
or
adc
inc
mov
sub
test
cmpsl
mov
lock
mov
in
adc
or
cmp
sbb
jmp
mov
iret
cltd
push
outsb
cld
cmp
test
pop
add
mul
xor
enter
cmp
inc
movsb
adc
jecxz
cmp
addr16
fists
cmp
mov
call
inc
in
out
mov
mov
inc
inc
andl
fsubl
loopne
cmp
in
inc
pop
fldt
shrl
xor
dec
mov
sub
nop
cmp
mov
mov
mov
cmc
xor
cmp
addr16
xor
xor
xchg
xchg
jne
dec
pop
std
sarb
or
cmp
sub
lea
mov
lods
inc
cmp
andl
sbb
ret
mov
adc
cmp
adc
xchg
add
fimuls
rol
mov
mov
clc
pusha
out
dec
or
inc
shll
cmp
int3
mov
sti
jns
loopne
sbb
shll
xor
or
xor
xchg
fbstp
sahf
shlb
out
pop
insb
cmp
or
clc
fsubrl
cmp
addb
test
mov
mov
sub
ljmp
xlat
rorl
mulb
mov
adc
cmp
ja
in
cmp
push
and
add
xor
xchg
ss
jne
lcall
jo
pop
pushf
jg
daa
incl
call
jecxz
jmp
mov
inc
inc
movsb
and
test
xchg
lods
test
pusha
and
add
enter
sub
and
mov
fucomi
inc
sarb
adc
pop
in
cmp
cmpb
xor
stc
push
cmp
sbb
sbb
daa
inc
push
movsb
push
pop
cmp
mov
push
or
xchg
std
sarl
jae
cmpsl
cmp
cmp
nop
insb
cmp
adc
add
jmp
int
xlat
adcb
cmp
out
pop
xchg
adc
mov
xchg
sti
cmp
inc
test
sbb
clc
cmp
out
dec
rolb
cmp
or
stos
or
inc
cmpsb
pop
int
jge
dec
cli
lret
push
cmp
mov
jns
push
mov
cs
daa
jo
cmp
xchg
pusha
lahf
mov
pop
and
pop
imul
xchg
test
cld
data16
push
stos
cmpb
sbb
xchg
les
and
xchg
mov
cmp
rclb
loop
lret
aaa
ds
lods
pop
cmp
mov
inc
test
cmp
addr16
out
ret
push
xor
mov
arpl
and
lret
cmp
mov
and
lea
pusha
insl
aaa
jnp
cmp
jmp
iret
mov
repz
divl
jnp
fldcw
sarl
xlat
inc
test
dec
sahf
sbb
mov
cmc
fst
inc
add
fdivs
lds
fidivrs
jg
movsl
pusha
jmp
cmp
fstl
fdivr
fmull
pop
pop
jge
fnstcw
inc
dec
mov
cld
call
cmc
fisubl
push
dec
in
cmp
push
fnstsw
popa
mov
cmpsb
dec
mov
mov
xchg
xor
ret
mov
frstor
jne
mov
cmp
jno
sub
xlat
cmp
or
cmpsl
movsb
push
cmp
int
push
out
and
pop
xchg
nop
pop
add
cmp
mov
push
push
pop
scas
sub
fwait
inc
nop
xorb
cli
das
cmp
imulb
popa
add
xor
mov
jecxz
push
cmp
jle
or
or
out
ds
inc
mulb
jmp
in
test
sbb
jp
lcall
jge
push
push
push
lahf
jne
cmp
popa
mov
adc
pop
add
pandn
je
xchg
xchg
xor
cmp
ret
xchg
cmp
outsb
mov
fstps
dec
nop
xor
add
test
cmp
xor
sub
insb
dec
xchg
cmp
lods
add
xor
sub
sbb
sahf
cmp
pop
jae
cmp
ja
lret
inc
hlt
jo
or
cs
xor
jle
clc
jge
jo
lret
bound
fisttpl
mov
mov
xchg
add
andb
add
cmp
rolb
iret
out
fidivrs
mov
pop
pop
cmp
jl
pushf
into
popf
lret
xchg
cmp
push
out
cmp
cmp
sbb
jae
push
lea
mov
dec
jns
arpl
std
jle
cmc
cmp
push
push
ja
adcl
jl
stos
inc
sahf
add
mov
test
cmp
aad
bt
lods
cmp
xchg
mov
pop
or
add
cmc
cmp
push
push
push
in
jne
arpl
fisubrs
xchg
or
inc
lahf
aaa
or
imul
jp
and
fwait
pop
pop
test
outsl
sub
add
cmp
push
cmpsl
sub
outsb
cmp
mov
cmpl
or
enter
xor
cmp
sbb
repz
idivb
lods
enter
das
scas
xchg
fs
mov
scas
adc
cs
mov
pop
push
mov
cmp
loope
iret
sarl
dec
out
divb
sti
fstps
sub
push
pop
pop
roll
out
add
data16
lods
push
mov
outsb
lahf
lret
jns
out
outsb
cmc
fwait
call
mov
adc
js
jp
xor
dec
jo
lea
jmp
inc
fbstp
cmc
jp
mov
push
imul
aad
jl
cmp
rcrb
mov
inc
sbb
adc
push
jnp
cmpsb
arpl
cmp
sbb
dec
into
inc
adc
in
stos
xchg
push
mov
push
and
inc
clc
jns
jo
sub
cmp
adc
cld
sub
push
pusha
rol
cmp
in
arpl
rolb
fs
in
pop
leave
cmp
cltd
mov
nop
dec
mov
inc
jle
or
cmp
add
inc
rclb
stos
into
pushf
int
cmp
push
xor
test
aad
je
jbe
icebp
pop
iret
ds
pop
imul
lcall
stos
push
xchg
cmp
das
les
cmp
outsb
sub
in
mov
test
movsl
push
adc
add
frstor
dec
repnz
lea
cmp
movsb
inc
outsb
push
pop
mov
stc
xor
inc
jge
xlat
cmp
push
gs
mov
hlt
xor
jp
and
and
loopne
int
repnz
jmp
into
push
pop
cmp
inc
cmp
inc
stos
test
hlt
ficoms
mov
mov
loope
mov
and
push
add
sbb
pop
mov
pop
lahf
cmp
fs
push
jo
popf
loopne
daa
cmp
mov
jae
and
mov
add
dec
cmp
divb
addr16
repnz
inc
lods
cmp
js
ret
popf
inc
xor
sbbl
pop
cmp
cmpsl
add
hlt
cli
pop
mov
jg
mov
popf
xchg
cmp
push
loopne
addr16
jp
outsl
insb
xor
cmp
mov
inc
lahf
out
cwtl
mov
cmp
sub
push
hlt
pop
les
cmp
gs
inc
pop
push
out
imul
call
pop
inc
and
pop
xchg
mov
xchg
fdivr
cmp
dec
push
aam
xchg
cmp
cli
or
mul
cmp
pop
sub
fcomps
fcmovne
xchg
jmp
mov
pop
cmp
loope
push
cmp
inc
lds
into
mov
jns
jne
rorl
mov
sbbl
lret
dec
xchg
and
cmpsl
icebp
xor
pusha
cmp
mov
or
add
cwtl
cs
mov
adc
cmp
in
sub
cmp
hlt
mul
ja
cmpsl
cmp
jno
or
sahf
push
sub
je
sbb
mov
xchg
imul
inc
fdivl
out
in
rcl
cmp
repnz
jne
fs
out
cmp
test
je
fwait
hlt
mov
push
xor
jae
adc
mov
cmp
out
pinsrw
cmp
lods
cmc
mov
cwtl
imul
daa
or
dec
test
pop
cmp
lahf
imul
mov
push
insl
movsbl
mov
push
sbb
mov
jp
xchg
sbb
lret
xor
xchg
les
mov
addl
lahf
loop
cmp
cmpsb
out
inc
shr
mov
dec
pop
push
push
xchg
movsb
or
addr16
mov
sets
xchg
fistpll
cmp
push
inc
lods
in
loopne
push
dec
cmp
xchg
mov
push
cmp
mov
or
adc
in
repz
push
sarl
xor
idivb
mov
js
and
shrb
out
mov
xor
test
divl
popa
cmp
and
xchg
inc
lret
dec
cmp
adc
jmp
lods
fcoml
rcr
cmp
adc
jp
sti
popf
xor
cmp
out
loop
stos
cmp
aad
icebp
pop
cmp
das
inc
dec
add
pmaxsw
pop
jns
mov
jno
cmp
movsl
mov
outsl
fbld
sub
imul
cmp
lret
cmp
fildl
call
push
insb
aam
add
mov
cmp
leave
std
into
cld
xor
es
dec
mov
fs
lret
nop
cmp
xorl
or
jb
push
xchg
loopne
pop
add
jge
fcomi
lahf
cmp
testl
push
cmp
loopne
inc
sbb
fldenv
push
xor
es
inc
cmp
movsb
cmp
jecxz
ret
dec
jge
lret
jp
dec
adc
dec
sub
cmp
mov
cmp
rorl
cmp
out
clc
shll
sub
xor
or
mov
cmpb
pusha
push
leave
popa
cmp
jge
loop
fwait
cmp
xchg
aas
daa
popa
pusha
popf
leave
ss
xchg
addr16
lret
and
jnp
scas
sti
cmp
xchg
scas
mov
shl
in
push
push
xlat
mov
cmp
or
sbb
jbe
mov
cmp
in
leave
xlat
nop
outsb
repnz
xor
jae
push
lea
cmpsb
inc
std
es
xchg
cmc
aas
lock
ljmp
dec
sbb
shrl
mov
mov
cmc
fwait
scas
test
cmp
lods
dec
sub
fidivl
push
popf
cmp
ljmp
push
cmp
mov
in
adc
add
jo
outsl
cmp
fwait
ss
lea
daa
sbbl
and
or
dec
and
sbb
jbe
mov
cmp
scas
add
inc
rorb
xor
int
cmp
xchg
stc
inc
xchg
repz
jmp
lods
enter
out
cmp
push
fs
cmp
out
cmp
popa
inc
xchg
sbb
into
cmp
aam
cmp
mov
insb
jecxz
sub
mov
dec
insl
cmc
cmp
push
xchg
jb
mov
push
jl
adc
push
xor
cs
out
adc
lock
cmp
inc
shl
and
jg
imul
cmpsl
int
lods
mov
call
jno
iret
daa
cmp
clc
inc
cmpsl
mov
or
or
mov
push
sti
ss
scas
jbe
xor
jb
dec
cmp
push
roll
and
pop
inc
mov
fucomi
test
xor
inc
push
mov
inc
int
test
decl
and
push
cmp
jbe
hlt
fidivrl
lods
mov
int3
into
pop
push
daa
cmp
lds
hlt
cmp
xchg
fsubrl
jmp
pop
cmp
pop
mov
pop
lahf
jecxz
cmc
sbb
xor
add
loopne
mov
clc
cmp
mov
xor
mov
lock
mov
jmp
test
loop
test
sbb
sub
out
shrl
shlb
imul
push
je
cmp
jns
cmp
sub
cmp
bound
aam
adc
loop
lods
jbe
push
lods
cmp
cmp
jo
jg
leave
rcrl
cmp
and
xor
inc
mov
mov
into
dec
aam
sarb
push
shlb
fistpll
sub
lods
sbb
fisubrl
cmp
xchg
add
sub
ja
dec
mov
sarb
loope
sub
jo
loopne
in
mov
or
dec
inc
pop
dec
mov
hlt
cmp
or
loopne
pop
ss
adc
adc
cmp
daa
int3
mov
add
cmp
mov
sub
or
lods
cmp
pop
add
add
sbb
xchg
jmp
push
ds
cmp
mov
movsl
xor
and
andl
add
les
pop
mov
push
xor
cmp
lret
leave
dec
int
xlat
loopne
mov
push
je
cmp
sub
addr16
cmp
or
std
fdiv
cmp
add
fildll
cmp
cltd
xchg
xchg
cmp
sbb
fnsave
cmpsl
data16
push
stos
mov
sub
fnstcw
inc
inc
test
jno
and
imul
repz
inc
inc
cmp
popa
cld
fistpll
jne
data16
test
xlat
fs
cmp
xor
add
imul
mov
and
fbstp
inc
mov
repnz
jbe
and
dec
ret
mull
mov
push
push
stos
xchg
push
xor
mov
mov
cmp
mov
cmp
pop
mov
dec
dec
jns
out
es
inc
fs
and
mov
cmp
insl
and
cmp
pop
xor
arpl
jae
xchg
sub
in
mov
movsl
cmp
outsl
aam
fldenv
nop
push
cmp
sbbl
mov
sbb
push
fldcw
ret
add
daa
loop
in
cmp
jge
lret
icebp
add
jb
push
mov
mov
add
cmp
inc
imul
in
push
fwait
lahf
mov
and
xchg
xor
sbb
cmp
push
sbb
adc
and
xlat
mov
cmpl
xchg
sbb
or
inc
mov
test
pop
push
push
lods
outsb
mov
pop
sub
mov
jl
pop
xchg
cmp
add
adc
dec
cmp
push
push
dec
cmp
int
mov
imul
int3
jmp
pop
and
loopne
cmp
out
rcll
insb
das
cmp
push
outsl
imul
xchg
nop
cmp
into
sbb
cwtl
push
inc
lea
je
cmp
inc
shlb
dec
stos
popa
movsl
cmp
es
mov
aad
adc
hlt
pop
cmp
imul
cld
clc
fildll
cmp
roll
mov
stos
inc
idivb
xor
movsl
hlt
sub
sub
mov
shr
js
cmp
fdiv
test
mov
or
cmp
inc
and
outsb
jne
cmp
pop
aad
nop
cwtl
cmp
inc
mov
mov
pop
jecxz
cmp
scas
xchg
cld
in
xorb
jecxz
pop
fldenv
fisttpl
inc
dec
mov
pop
stos
cmp
sbb
mov
pop
mov
ja
insb
daa
sti
popf
aad
fidivrs
jmp
push
mov
lods
pop
cmp
test
cmp
test
mov
cmp
or
and
push
ja
cmp
pop
xchg
xchg
outsb
cmp
test
jmp
cmpsl
cs
or
test
std
cmp
jmp
out
bswap
fdivrs
mov
and
jbe
lock
lret
hlt
movsb
cmp
xchg
scas
cmp
push
popa
add
shrb
cmp
int
dec
or
cmp
clc
pop
adc
sbb
cmp
push
inc
insl
into
add
mov
adc
in
pop
notl
cmp
stos
add
imul
cmp
cmp
xor
dec
and
fstpt
loopne
dec
jp
cmp
cld
ret
sahf
adc
ljmp
xor
sub
inc
cmp
mov
xchg
repz
push
and
adc
mov
lahf
adc
sub
mov
andl
shrb
sarb
add
out
pushf
mov
out
cmp
xchg
mov
jnp
sub
cmp
lock
lcall
cmc
pop
and
popa
outsb
cmp
aam
adc
push
push
jnp
add
cmp
std
jnp
popf
mov
sub
repnz
jg
inc
sysenter
dec
mov
cmp
cmc
shr
das
data16
cmp
pop
cli
jbe
cmp
adc
mov
jp
dec
jmp
push
in
es
scas
push
cmp
jge
test
mov
cs
jnp
sbbb
cmp
jbe
aaa
add
ja
ret
repz
or
pop
sub
out
out
jmp
mov
inc
sbbb
cmp
or
ljmp
cmp
push
ret
adc
push
stc
push
shl
ret
mov
add
jo
cmpsb
push
enter
cs
cmp
add
sti
jb
cld
cmp
jnp
out
cmp
dec
or
sub
fsubrp
and
cltd
sub
gs
out
cmp
pushf
jg
cmp
jae
or
int3
shr
and
cmpl
xor
or
mov
sti
xchg
in
addb
sbb
and
mov
std
int
and
pop
mov
pop
into
cmp
and
mov
stos
out
sbb
inc
cmp
mov
aaa
pusha
mov
cmp
pop
lods
fmuls
daa
pusha
dec
push
cld
mov
cmp
lahf
xchg
ficoms
xchg
popf
mov
mov
xor
sbb
cmp
lcall
fstpt
imul
and
and
pusha
int3
xchg
testb
inc
cmp
fistl
cmp
mov
sub
shrb
jno
cli
adc
cmp
sbb
push
fists
or
jo
popa
push
adc
cmp
fadd
cmp
xchg
sbb
aad
sub
divl
cmp
lcall
and
popf
cmp
fistps
mov
xchg
call
call
add
cmp
fsubr
clc
movsl
mov
test
lock
mov
dec
push
outsb
popa
data16
cmc
sti
movsb
and
cmp
aas
cltd
inc
cmp
mov
and
cmpsl
or
lods
sub
and
js
cmp
stc
dec
push
pop
ja
add
cwtl
and
mov
ljmp
lea
sarb
pop
sbb
sub
std
pushf
jbe
adc
clc
cmp
in
andl
imul
jge,pt
ljmp
popf
xchg
xor
cli
cmp
dec
addr16
jge
jbe
dec
add
inc
push
lahf
push
or
push
xor
push
loope
mov
movsl
xchg
pop
imul
pop
in
lea
outsl
pusha
leave
dec
adc
xchg
cmp
push
es
sbb
cmp
mov
pop
insb
xchg
call
push
add
jbe
inc
es
pop
dec
jp
adc
xor
jo
das
sbb
int3
bound
xor
jl
ljmp
in
out
add
aas
insb
mov
mov
cmp
data16
imulb
inc
jmp
dec
cwtl
xchg
fiaddl
and
mov
iret
fcomps
lock
xor
cmp
repz
add
dec
imul
fbstp
cmp
ficomps
icebp
cmpsb
cmp
or
sar
mov
pop
mov
sub
cmp
sbb
adc
addr16
aad
in
xchg
std
mov
jo
je
orl
mov
sub
cmp
repz
fwait
rcrb
mov
pusha
mov
or
mov
popf
lret
gs
cmp
cld
or
pop
lods
xlat
and
jbe
das
cmp
push
and
fs
xorb
dec
addl
inc
int
cmp
push
pop
push
fwait
xchg
ret
xchg
test
and
adc
jge
cmp
cli
xchg
jbe
aad
xchg
xchg
pop
mov
data16
lds
cmp
dec
outsl
push
inc
mov
push
jns
ja
fnstcw
repnz
repz
xchg
jle
or
mov
sbb
lret
or
sub
cmp
mov
pop
cmp
fisubs
out
add
mov
xor
stc
push
movsb
cmp
add
xor
mov
xorb
pop
inc
movsb
shlb
jmp
xchg
sub
pop
nop
flds
mov
or
mov
cmp
iret
pop
adc
sub
xor
adc
cmpsl
jp
add
ret
cmp
adc
jecxz
cmp
xchg
mov
rolb
hlt
cld
icebp
cmp
add
xchg
cmp
insb
and
cmp
mov
out
mov
popf
imul
mov
mov
movsb
pop
in
sar
or
cmp
cmp
cmp
cmc
sahf
stos
cmp
scas
iret
xor
lret
dec
ljmp
jb
inc
add
in
fsubrl
gs
sub
or
and
lahf
cmp
cld
xor
das
jbe
pop
sub
cmp
cli
jne
fidivs
cmp
pop
ret
cmp
sub
mov
mov
push
cmp
xchg
push
imul
nop
sub
mov
push
daa
mov
cmp
aam
arpl
and
cld
leave
and
out
cmpsl
nop
lret
pop
fwait
scas
fwait
dec
mov
and
clc
add
push
inc
fidivrl
mov
cmp
out
cmp
enter
mov
pushf
xor
sub
sbb
les
jae
push
mov
push
aas
xchg
xlat
sbb
jg
adc
aam
lret
gs
push
cmp
lods
sbb
lods
xor
adc
repnz
or
cmp
mov
std
lret
cmp
sbb
jmp
push
cmpsb
stos
push
jecxz
cmp
daa
and
and
sbb
xlat
mov
sub
out
fimull
cmp
xor
adc
fistpll
jne
stc
xchg
imul
jge
stos
mov
jl
cmp
out
inc
jmp
jp
ds
cs
cmp
mov
dec
or
test
orb
data16
mov
fsubl
in
out
mov
sbb
inc
aaa
in
out
ds
cmp
fucomp
loopne
out
cmp
in
je
fwait
mov
adc
sarb
sbb
push
jmp
aad
pop
add
push
mov
fstpl
cmp
add
cmp
cltd
cmp
adc
testb
outsl
cmp
dec
cmpsl
cmp
mov
jecxz
and
cmp
popa
xchg
test
cld
adc
cmp
jmp
xchg
cmpsb
testl
out
addb
loopne
mov
push
mov
cmp
jb
sbb
jno
iret
mov
out
lahf
cmp
mov
mov
cmp
sahf
outsb
dec
movsb
mov
sbb
fs
jbe
gs
ja
jmp
sub
xchg
neg
push
mov
cmp
test
jns
jne
cli
pop
mov
adc
repz
sahf
dec
aad
inc
loopne
mov
icebp
xorb
lahf
lret
in
inc
outsb
jmp
adc
arpl
iret
jecxz
outsl
mov
cmp
je
adc
lret
add
shlb
lods
sbb
push
fs
mov
push
jecxz
cmp
dec
sbb
dec
leave
hlt
fsts
jecxz
add
ret
xchg
cld
push
insb
and
cmp
mov
mov
leave
aad
add
cmp
push
fsub
mov
lret
pushl
call
cmp
sub
loop
push
lahf
scas
cmp
cs
repz
cmp
into
inc
popf
jne
mov
cmp
hlt
leave
rol
xchg
push
cmp
mov
cmpsl
test
cmp
call
test
jo
mov
or
sahf
jne
push
mov
inc
pop
and
cmp
icebp
mov
pop
dec
sahf
lahf
das
mov
mov
jnp
add
dec
pop
dec
adc
sub
int
mov
push
sub
repnz
jl
adc
dec
adc
andb
push
cmp
or
cmp
out
xor
repnz
or
push
xchg
ret
cmp
shl
insl
cmp
adc
mov
jle
sahf
int
les
cmp
push
mov
xchg
pop
movsl
in
mov
fwait
inc
sbb
and
cmp
addr16
gs
lret
cmp
inc
rcll
sub
jno
movsl
and
pop
enterw
pop
push
cmp
test
daa
jae
inc
rep
out
xor
test
inc
xchg
cmpsl
insb
or
stos
sub
push
xchg
cmp
inc
ss
jmp
rclb
cmpsb
lods
test
push
push
je
loope
jg
add
pop
out
out
shl
cmp
and
mov
sarb
mov
pop
or
jp
jns
cmc
out
cs
pusha
pop
inc
adc
fs
mov
cmp
mov
cmpsl
mov
rolb
cmp
or
xor
push
cmpb
inc
and
push
out
xor
mov
cmpsl
adc
dec
mov
fidivrl
ret
stos
lahf
cmp
adc
pop
mov
push
das
cmp
out
orb
and
xor
push
and
int
insl
pop
subl
cmp
cld
mov
out
pop
inc
fcmovnu
inc
icebp
xchg
movsb
aam
xor
add
push
or
sub
daa
sti
add
cmp
xchg
jmp
xchg
sbb
mov
ret
mov
cs
stos
jne
mov
cwtl
cmp
sbb
dec
data16
add
mov
add
mov
cmp
and
repz
cmp
xchg
mov
push
or
shl
je
jo
mov
pop
movsl
out
sub
cmp
mov
testl
or
out
rcl
cmp
icebp
fisubrs
lods
fwait
shll
add
das
mov
cltd
push
xor
cmp
arpl
out
sarb
xchg
pop
fcoml
sub
pop
sbb
out
cmp
mov
les
jge
test
dec
mov
inc
pop
fdivrl
adc
inc
mov
cmp
outsb
loop
cmp
xlat
push
stos
loop
mov
mov
and
lret
cmp
ja
inc
xchg
cmp
scas
test
faddl
iret
rcrb
orl
flds
cli
dec
mov
in
enter
call
push
outsl
mov
or
jl
pop
into
inc
and
mov
popf
pushf
sbb
sbb
cmp
mov
mov
push
and
xor
popl
out
sub
add
mov
cmp
cli
pop
adc
mov
inc
jge
mov
jmp
xor
mov
and
flds
dec
cmp
cmpsl
or
popf
cmp
imul
mov
dec
jbe
cmp
jne
add
stos
jmp
imul
and
xchg
cli
pop
cmpsb
daa
int3
fmul
out
cmp
mov
cmp
fsubr
movntps
repnz
dec
cmp
mov
stc
cld
dec
cmp
and
mov
cmp
test
inc
pop
add
roll
outsb
data16
cmp
test
add
push
pop
das
pop
push
jne
cmp
cmpsb
and
mov
daa
cmp
mov
xor
pushf
mov
cmpsl
cli
cltd
adc
and
unpcklps
mov
bound
daa
cmp
scas
add
call
inc
jno
jecxz
mov
cmp
out
sbb
push
cmp
jae
cmp
cmpb
test
andb
sbb
lcall
cmp
add
cmp
out
push
push
in
popa
add
cld
mov
sub
cmpsb
mov
mov
push
cmp
out
pop
and
cmp
cld
aaa
pop
push
mov
cmp
pop
push
cmp
add
test
and
jbe
mov
scas
adc
mov
mov
cmp
faddl
cmp
pusha
mov
xlat
jge
mul
cli
test
ret
cmc
daa
adc
out
mov
shlb
jp
inc
int3
xor
push
movsl
mov
push
sarb
jo
sahf
xchg
push
lds
out
or
pop
iret
ss
shll
cmp
mov
stc
ret
cmp
mov
sub
aam
loope
cli
movb
mov
xchg
jmp
or
sarb
pop
mov
push
cmp
ret
cmp
icebp
mov
repnz
mov
inc
cmc
mov
cwtl
mov
stc
dec
cmp
ds
push
shll
lahf
ds
inc
mov
ja
and
pop
mov
fcompl
or
xchg
in
test
xor
xor
inc
mov
pop
sbb
arpl
cmp
mov
xchg
sbb
sti
pop
xor
jmp
fidivrs
lcall
xor
jge
loope
push
aad
stc
repnz
add
mov
jp
call
jmp
cmp
imul
faddl
fcoms
jl
xchg
repz
push
mov
inc
sbb
pusha
mov
dec
jp
jmp
inc
nop
cmp
jnp
sbb
dec
dec
cmp
mov
push
jle
dec
add
loopne
imull
mov
outsl
cmp
pop
mov
cmp
mov
test
cmp
push
push
fnstsw
pop
int
ret
push
or
push
dec
rcr
mov
cmp
nop
in
xor
testb
cmp
cmp
ds
mov
mov
cmp
shl
roll
cmp
loope
imul
pop
cmp
jne
inc
fbstp
mov
dec
pop
stc
inc
xlat
fidivl
call
fwait
push
xor
test
pop
insl
sarb
orb
bound
aas
cmp
enter
xchg
orb
sub
outsl
in
jns
push
mov
jb
mov
or
pop
test
xchg
lahf
lcall
nop
mov
sbb
int
cld
fidivrs
and
je
mov
mov
jp
movsb
cmp
lahf
popa
sbb
into
xchg
inc
xor
sahf
xlat
int3
sarb
xchg
pop
cmp
mov
mov
and
fnstsw
adc
test
aas
or
adc
jecxz
mov
pop
into
mov
inc
mov
xchg
aas
jnp
cmp
test
les
cmp
mov
fucomip
xor
orl
sub
lret
jp
jge
nop
cmp
pop
in
push
stc
lret
inc
shll
lods
inc
pushf
cwtl
inc
stos
pop
sarl
sbb
mov
subb
ret
fidivrs
shlb
jb
cmp
cmp
jge
cmp
jg
dec
test
mov
cmp
cmp
cltd
mov
nop
cmp
out
test
inc
xchg
mov
mov
cmp
dec
std
ds
lcall
or
ljmp
shrb
scas
cmp
scas
popa
jbe
xor
movsl
cmp
jnp
out
cmp
test
cmp
inc
icebp
fbstp
out
pushf
lds
mul
scas
push
cmp
push
test
dec
xchg
inc
fimull
pop
xor
mov
fwait
shlb
mov
ds
xor
pop
and
testb
data16
and
inc
fs
mov
cmp
adc
xor
xchg
fs
push
xchg
lods
faddp
cmp
pop
inc
pop
lret
push
or
inc
sbb
shl
xor
add
test
mov
push
call
je
cwtl
xchg
fimull
adc
sub
cmp
fisubs
aas
scas
sub
xchg
mov
push
out
cmp
and
sub
rorl
xorl
cmp
pop
jns
lock
popa
cmp
repz
jbe
imul
push
bound
outsb
xchg
mov
sbb
cmp
and
stos
popa
inc
mov
sahf
mov
mov
lret
rcll
mov
push
std
icebp
xchg
imul
aam
add
fwait
sahf
rcl
pop
and
icebp
mov
daa
or
and
mov
pop
loopne
push
jle
add
imulb
and
cmp
sbb
xchg
jbe
addr16
xor
adc
push
fwait
mov
je
fdivs
and
scas
arpl
cmp
cmp
into
cmp
cmc
stos
insb
fsubr
jle
cmpsl
xchg
xchg
push
push
outsb
rcrb
lods
and
dec
jns
aad
pop
jnp
inc
ja
inc
lret
jnp
filds
jecxz
pop
xor
or
add
cmp
scas
jecxz
cld
mov
cmp
add
xor
hlt
xlat
shrb
fwait
mov
pop
ja
repnz
popa
dec
cmpsl
xor
cmp
cmp
insl
addr16
inc
cmp
push
add
cmp
pusha
dec
push
in
mov
stos
mov
cltd
ret
sub
popa
int3
xor
cmp
mov
lds
mov
aas
cmp
out
pop
and
mov
xchg
xlat
repz
sarb
xor
movsl
sub
inc
adcl
or
pop
in
inc
or
jnp
imul
cmp
sahf
fbstp
popf
fnstcw
lods
loope
fs
repnz
cmp
jne
lret
fnstenv
es
dec
fildl
mov
cmpb
out
lcall
push
mov
insb
jmp
xor
iret
dec
mov
xor
ficoml
xchg
pop
sbbl
cmp
fildll
mov
fadds
pop
bound
mov
leave
cmp
xor
rcl
or
out
cmpl
dec
sti
es
mov
dec
sub
mov
mov
add
scas
and
jg
std
or
ret
cmp
mov
sub
or
push
xchg
inc
adc
push
inc
adc
xchg
lret
cmp
inc
xchg
leave
mov
mov
pop
cmpsb
mov
add
adc
push
pop
sti
mov
cmp
stos
dec
xchg
jno
inc
mov
and
mov
jmp
push
out
push
pop
xor
sub
add
clc
push
fsub
jecxz
mov
fwait
pop
shll
add
mov
jp
inc
cmp
pop
cmp
into
sbbl
cwtl
and
jo
daa
int3
cmp
or
insl
cmp
stos
lcall
jne
cmp
imul
out
fnstcw
gs
cmp
dec
mov
cmp
in
repz
inc
push
adc
push
sbb
mov
shll
xor
jecxz
idiv
cmp
outsl
iret
loop
in
in
cltd
cwtl
jae
lds
pop
mov
fs
xchg
fdivrs
sahf
pop
mov
dec
mov
cli
lods
mov
or
pop
xor
loop
movsb
daa
cmp
jnp
mov
fwait
push
cmp
add
pop
mov
mov
mov
cmp
movsl
mov
and
fs
pop
jmp
push
outsb
imul
bound
mov
popa
add
lock
xor
cmp
lods
and
pop
imul
or
cmp
mov
sbb
js
fdiv
outsw
dec
cmp
cmc
ret
stos
cmp
addl
int3
xor
cmp
pushf
cmpsb
push
jp
pop
ds
add
mov
movsb
leave
addr16
lret
icebp
bound
sbb
xchg
mov
cmp
push
ljmp
xchg
cmp
popf
mov
out
mov
mov
test
fisttps
test
inc
or
jle
push
aad
adc
inc
cmpsl
pop
les
jge
cmp
mov
movsl
cmp
cli
lock
xor
cmp
in
cmp
lock
scas
pop
xchg
or
out
movsb
stos
popa
jge
sbb
xchg
js
imul
pop
invlpg
jno
lahf
cmp
leave
push
mov
cmp
insl
cmovp
mov
sbb
xor
mov
pop
dec
and
add
cmp
testb
add
jne
int
adc
and
push
mov
hlt
cmp
or
xchg
and
adc
int
cmp
nopl
sub
adc
and
sub
mov
sbb
mov
pop
push
xor
sub
mov
mov
dec
push
cmp
push
push
inc
cmp
stc
inc
pushf
jecxz
movsb
notb
or
cmp
cmp
cmp
es
and
or
cmpsl
jp
cli
push
adc
add
les
das
mov
xlat
inc
or
stc
pop
mov
clc
data16
push
xchg
popf
pushf
sbb
cltd
dec
insl
int
fistl
cmp
jmp
stos
test
andps
cmp
adc
xlat
pop
cmp
inc
push
sbb
iret
or
cwtl
add
cmp
sub
xchg
pop
mov
xchg
cmpsb
push
cmp
sahf
and
mov
and
xchg
lcall
xor
js
pop
inc
pop
push
test
jl
bound
cli
xor
mov
int
aas
les
xor
inc
cltd
stc
mov
scas
mov
mov
inc
pop
ret
sub
out
cmp
roll
xor
lock
adc
mov
scas
les
cwtl
mov
bound
shll
add
out
mov
push
push
pushl
mov
clc
or
pop
in
in
and
movsb
cmp
loope
adc
popa
lea
adc
and
add
sarl
jmp
xchg
sub
andl
das
loope
xchg
adc
loopne
cmp
fistps
sahf
daa
xchg
sub
push
mov
faddl
adc
cmp
push
lea
cld
aaa
bound
test
sbb
dec
filds
xor
fisttps
cmp
mov
fistl
jecxz
cwtl
mov
in
cmp
daa
subb
jmp
xchg
and
add
fadds
sub
imul
cmp
mov
ret
pusha
loop
popf
sar
fmulp
adc
bound
insb
or
mov
mov
cmp
int
insl
add
mov
pop
mov
push
mov
cmp
jg
loop
dec
jge
mov
cmp
mov
es
lods
stos
cmp
pop
mov
push
je
into
rorb
mov
mov
insl
faddl
outsb
xchg
inc
out
call
xchg
imull
jns
pop
test
lods
fldcw
inc
jl
jge
sti
cwtl
mov
dec
pop
inc
lret
mov
mov
xchg
fisubs
call
stos
mov
adc
adc
adc
call
push
sbb
out
inc
pop
mov
cmp
sub
mov
cmp
fisubrl
inc
adc
fmull
rol
cmp
mov
and
sub
xchg
and
inc
mov
mov
movsb
inc
xchg
dec
sti
push
fsts
pop
cmp
decb
lea
int
adc
push
jp
in
repz
aas
mov
mov
ljmp
lret
mov
mov
push
fs
push
imul
mov
mov
add
ljmp
cmp
jp
cmp
sahf
std
addr16
mov
push
ja
xor
ror
cmp
pop
leave
outsb
xlat
jb
dec
adc
xorb
test
fcmovu
add
cmp
dec
add
push
imul
dec
cmp
jns
jne
bound
stos
imull
int3
xor
ljmp
cmp
pop
jnp
inc
adc
cmp
add
push
and
js
leave
mov
cmp
mov
cmp
test
or
mov
incb
sub
std
jl
daa
lret
or
and
addl
xchg
stos
sbb
cmp
jmp
and
xor
adc
and
cmp
cmp
cmp
or
ret
lods
xchg
cmpsl
imul
pop
add
cltd
hlt
cmp
daa
ss
and
cmp
and
mov
in
push
out
adc
dec
pop
sbb
mov
xor
and
push
fnstcw
lret
movsl
fcomi
lret
mov
mov
loopne
stos
roll
pushf
adc
jle
mov
insb
xchg
push
sahf
addb
idivb
in
decb
cwtl
sub
push
popf
lret
jnp
jnp
cmp
jne
movsl
insl
xchg
jge
cmp
aad
push
cmp
stos
add
dec
sub
jmp
shlb
push
cmp
mov
lods
xlat
cmp
pop
jp
fwait
rcrl
cmp
rcrb
cmp
movsb
bound
cmpsl
mov
pop
cmp
jl
pop
cmp
insb
sbb
cmp
cmp
sti
jbe
cmp
jg
arpl
sti
ja
push
div
into
sti
pop
pop
cmp
mov
mov
xchg
push
outsb
mov
icebp
ljmp
sti
push
jb
push
cmp
loope
pop
stos
push
out
xor
imul
fwait
insb
cmp
xchg
add
js
cmp
pop
pusha
popa
cmpsl
push
inc
cmp
sub
imul
ljmp
jecxz
aam
and
imul
js
jnp
add
out
add
pop
lds
dec
mov
xchg
pop
aaa
xchg
cmp
fmulp
cmp
mov
arpl
push
cmp
sbb
ds
xchg
cmp
and
dec
in
cmp
xchg
adc
mov
das
lcall
cmp
jbe
adc
mov
arpl
mov
add
ds
cli
mov
mov
cmp
dec
mov
cmp
mov
pushf
dec
or
ljmp
mov
or
pushf
cmp
mov
pop
xor
jae
cmp
push
and
imul
inc
jg
pop
mov
cmp
xor
cmp
ds
mov
cmp
mov
ror
jle
mov
sbb
fistl
mov
and
add
jbe
sti
mov
sub
mov
cmp
dec
push
daa
jb
stos
repnz
dec
cli
mov
scas
cmp
cmpsb
mov
inc
pop
adc
pop
scas
mov
mov
outsb
test
sbb
test
rol
les
bound
jmp
ds
in
sbb
fsubs
pop
imul
lods
pop
jbe
stos
xor
lds
fistl
adcb
fwait
or
mov
inc
jge
add
inc
push
cmp
cmpsb
test
mov
pop
lods
push
es
dec
sbb
neg
stos
in
cmp
pslld
xor
sub
xor
fcmovne
sub
cmp
in
das
cmp
dec
sbb
loopne
sub
insb
lock
cld
jp
icebp
in
jmp
xlat
dec
cmp
lret
in
cmp
mov
ss
out
xchg
push
or
mov
push
inc
ficoml
shll
xor
add
xchg
insb
js
les
inc
mov
leave
sbbb
mov
xchg
roll
pushf
cmp
jnp
mov
fcom
or
or
jo
push
dec
cmc
xor
flds
and
mov
cmp
adc
data16
jle
push
cmpl
cmp
jne
xchg
adc
mov
mov
add
aas
imulb
dec
push
jg
jne
xor
mov
insl
out
fucomi
cmp
pop
and
jb
lea
sub
fbstp
outsl
push
int3
cmp
fisttpll
testb
jl
clc
mov
outsb
push
cmp
and
sub
mov
jmp
sbb
loopne
jb
lret
jp
dec
fiadds
aaa
mov
jecxz
cli
mov
xchg
mov
mov
daa
out
out
cmp
and
mov
clc
das
jp
ljmp
cmp
add
jne
push
xor
xorl
stos
js
pop
dec
adc
lahf
ss
cmp
addb
div
cmp
mov
data16
push
fisubs
cmp
fmull
loopne
in
inc
pushf
cli
adc
xor
jecxz
out
test
inc
repnz
adc
sbb
mov
jo
cmp
add
sbb
mov
pusha
movsb
test
lods
cmp
stos
or
add
pop
adc
inc
roll
sub
dec
stos
xor
ficoms
lods
mov
cmp
adc
push
testb
test
es
cmpsl
mov
aam
cli
dec
cli
pop
xlat
outsl
mov
aaa
test
cmp
inc
add
ror
cmp
sub
test
mov
sbb
inc
cmp
stos
xchg
rclb
test
out
inc
out
int
es
mov
cs
pushf
cmp
xlat
sub
cmp
cmp
mov
dec
push
mov
ss
mov
or
push
inc
jne
adc
test
test
jnp
cltd
push
into
xor
pusha
out
adc
aaa
adc
js
enter
pushl
and
stos
xchg
pop
cmp
mov
and
jne
popf
loope
aad
cmp
outsb
push
add
xchg
jge
cmp
pop
sbb
mov
fcoml
cmc
add
popa
pop
jge
out
stos
test
fldlg2
cmp
mov
sbb
es
pop
mov
lcall
xor
and
cmp
les
lods
mov
dec
xchg
dec
cmp
mov
cmp
pop
adc
cmp
popa
push
push
and
jae
cmp
xor
xchg
mov
and
data16
cli
dec
ss
mov
enter
imul
fcomp
repz
out
lods
cmc
xchg
ret
mov
sbb
push
fiadds
cmp
dec
gs
outsb
test
inc
hlt
or
cli
inc
mov
dec
xor
xor
loopne
sti
sub
cmp
fcomps
pop
test
cmp
int3
xchg
jbe
cmp
lahf
xlat
add
push
lods
xor
inc
aad
ficoml
mov
mov
mov
cmp
jl
inc
jb
mov
lods
mov
fnsave
andb
mov
push
xchg
cmp
stos
lods
inc
push
adc
cmp
adc
mov
out
sbb
out
push
jno
pusha
cmp
cmpsl
int3
pop
insl
test
aas
cmp
and
sahf
int3
inc
mov
fcoml
push
mov
mov
clc
sbb
mov
pop
mov
dec
mov
xor
das
xlat
cmp
push
dec
gs
jmp
es
push
shr
and
int
mov
aaa
daa
jae
aas
or
out
fimuls
inc
imul
paddq
push
mov
xor
in
ror
add
and
inc
mov
daa
cmp
adc
addr16
stc
scas
inc
and
cmpsb
sbb
test
jno
cmp
adc
mov
xor
or
jnp
push
in
and
repnz
xchg
cmp
cmp
stc
jno
xlat
nop
pop
test
pop
sbb
dec
loop
cmp
cmp
shlb
dec
pop
dec
stos
lods
cmp
in
mov
cmpsb
iret
lods
fwait
add
sbb
data16
mov
loopne
popf
in
add
cli
pop
cli
addl
loop
insb
dec
enter
cmp
lea
jg
idivb
test
imul
cmp
out
lds
jbe
adc
adc
dec
pop
add
push
inc
mov
lods
push
gs
xlat
xor
cmp
stc
mov
or
dec
push
and
gs
cmp
scas
sub
add
jns
or
cli
outsl
arpl
leave
call
call
rol
and
loop
mov
daa
add
std
cmp
popa
lods
mov
cmp
add
mov
cmp
mov
push
mov
jp
cs
jge
cwtl
in
cmp
cmpsl
repz
inc
gs
pop
jge
cmp
call
inc
or
repnz
mov
aas
mov
jbe,pn
jae
sbb
in
mov
push
faddl
inc
mov
lods
xchg
mov
fcoms
dec
jno
out
shl
movsb
cmp
rcr
insb
fs
inc
cld
mov
fucom
mov
xchg
mov
cmp
add
inc
xor
loopne
dec
iret
mov
cmp
and
negb
adc
mov
inc
nop
mov
lcall
shrl
aas
cmpsl
sub
bound
dec
cmp
dec
mov
add
jnp
cmp
xchg
inc
jp
adc
shrl
inc
mov
cld
fsubrl
call
cmpb
lahf
add
adc
or
mov
cmp
rorb
xchg
push
fldt
add
test
je
pop
jnp
cmp
lcall
and
scas
mov
stos
into
dec
outsb
cmp
icebp
lret
rorl
mov
mov
xchg
cli
cmp
jo
jns
xor
pop
cmp
sub
xchg
hlt
jnp
cmp
outsl
xchg
aam
lret
ret
cmp
out
dec
xchg
sar
fdivrs
ljmp
cmpl
xlat
mov
and
stc
fcoml
cmp
add
push
insb
and
push
test
mov
push
jnp
sbb
mov
sub
pop
mov
mov
sub
mov
cli
mov
pushf
pop
add
scas
mov
xor
inc
xchg
and
mov
pop
cmp
les
fstpt
xor
ret
sti
sahf
fcmovnb
movsb
cmp
or
lret
shrb
outsl
inc
or
mov
stc
or
mov
hlt
shl
dec
nop
or
mov
clc
push
addr16
jecxz
jne
mov
cmp
sub
cmp
idivl
pop
mov
jb
call
sub
push
int3
xchg
imul
orl
add
sbbl
push
addl
cmp
js
add
jnp
repnz
sbb
pop
leave
lret
fwait
cli
inc
repz
inc
and
mov
into
jno
je
insl
mov
insb
fistpl
adc
xor
nop
push
mov
je
dec
xchg
xchg
leave
jns
pop
lock
xlat
push
adc
cmp
mov
cmp
pusha
mov
aad
dec
jbe
push
push
push
xor
ret
test
and
xor
mov
popw
push
mov
mov
es
fdivrs
rclb
inc
stos
and
sbb
push
push
and
sub
cmp
mov
out
pop
pop
adc
fst
inc
mov
xchg
int
adc
in
lods
pusha
cmc
aaa
cmp
push
mov
or
jae
jb
add
in
or
sub
inc
and
lds
push
xchg
dec
movsb
cmp
scas
cmpl
xchg
inc
sub
cmpsb
xor
and
fldt
push
or
cmpsb
xchg
aam
cmp
jecxz
gs
stos
pushf
cmpl
popa
xor
cmp
or
dec
int3
mov
fucom
mov
push
add
sti
jae,pt
bound
or
or
xor
jmp
in
gs
xchg
lods
loope
sbb
and
adc
lret
leave
adc
repnz
sub
lcall
cmp
push
daa
cmp
outsb
ret
imul
lahf
cmp
mov
jno
inc
cmp
xor
or
dec
out
xchg
loopne
loope
imull
jecxz
add
mov
mov
and
cmpsb
cmp
xor
cmp
mov
dec
push
pop
iret
cmp
movsb
cmp
xchg
cmp
addb
stc
in
fldl
cmp
outsl
mov
xchg
jmp
in
inc
cmp
push
aad
insb
jge
cmp
das
or
dec
inc
sub
insb
mov
push
leave
popa
sarb
mov
std
aas
sbb
add
dec
push
and
lret
adc
mov
out
cmp
xchg
inc
shl
arpl
inc
iret
scas
lahf
in
bound
pop
xor
sub
les
mov
sub
cmp
or
sub
out
xor
shll
aam
sahf
add
cmp
add
cmp
lock
xor
rorb
mov
out
ficoms
pop
mov
xchg
stos
ret
and
shr
cmp
sar
push
add
jle
pop
fnstcw
mov
and
cmp
test
sbb
inc
cmp
sti
cmp
mov
xchg
es
out
mov
cmp
push
push
int
cmp
in
lds
sub
pusha
push
mov
scas
cmp
or
push
push
test
mov
mov
adc
xor
dec
cmp
sbb
outsb
dec
fdivrl
dec
ret
addr16
xchg
adc
dec
je
test
cmp
jbe
and
cmp
fstpt
aaa
jge
sarl
dec
jecxz
insb
loopne
imul
push
scas
lahf
xchg
adc
push
cmp
test
out
fdivrs
call
sahf
sarb
repz
sub
daa
cmp
jb
jg
cmp
push
shll
cmp
mov
cltd
outsl
leave
lea
and
pop
call
mov
or
pop
mov
ss
mov
jp
cmp
clc
lea
sub
insb
pop
int
imul
jmp
push
movsl
incl
cmp
add
mov
sbb
lret
fs
sbbl
add
xor
fisttpl
mov
mov
push
out
enter
js
add
adc
clc
negl
push
cli
push
negb
ds
cmp
or
lock
cmp
sub
jp
mov
stos
je
inc
dec
ss
xchg
cmp
in
cltd
addr16
jg
pop
or
lock
xor
sbb
sub
pop
jge
sarb
fs
loopne
iret
dec
push
push
fisttpll
adc
pop
cli
mov
inc
inc
cmpsb
ds
pop
cmp
pusha
xchg
mov
xor
xor
xor
cmpsl
push
sub
inc
xor
daa
cwtl
cmp
stos
pusha
lods
cmp
lret
inc
push
test
sahf
and
mov
shlb
push
jge
mov
cmp
jae
push
push
mov
inc
and
inc
sahf
cmp
fdivp
jp
ds
add
and
and
adc
insb
cmp
vhaddpd
dec
cmp
mov
sbb
movsb
and
sub
data16
arpl
mov
jae
shll
pop
and
cld
mov
aad
fucomip
cmp
inc
lret
xor
dec
inc
cmp
repz
push
js
mov
insb
rcrb
jo
jno
push
sbb
pop
pop
out
mov
loopne
rolb
and
mov
push
cmc
xchg
cmp
xor
insl
icebp
mov
enter
sti
mov
addb
adc
imul
mov
jl
cmp
push
mov
pop
cmpsl
mov
cmp
sub
stos
aaa
xchg
out
inc
jnp
xlat
roll
mov
lods
mov
cmp
cmp
dec
push
popf
cmp
dec
xor
fwait
and
inc
cmp
loopne
or
enter
sub
add
mov
jo
mov
enter
data16
cmc
bound
sarl
inc
fchs
adc
add
lea
and
inc
cmp
push
sub
cmp
pop
icebp
adc
inc
arpl
cmpsl
call
ret
pop
scas
into
xor
pop
dec
adc
and
inc
ds
test
cmp
push
shl
xor
push
loope
addr16
lcall
fdivr
cmp
rol
cmpl
mov
outsb
add
xchg
xor
mov
leave
xchg
pop
jecxz
mov
sbb
insl
jg
lods
jb
mov
sti
popf
jmp
out
pop
stos
mov
scas
orb
jle
cwtl
repnz
push
pop
mov
ficoms
xchg
mov
xchg
lahf
dec
aam
mov
xorb
js
cmpsb
cmpsl
test
cli
push
and
pusha
lahf
cmp
cmc
or
dec
and
adc
test
pop
inc
outsb
mov
xorb
nop
les
dec
mov
cmp
sbb
cmp
xchg
nop
cli
xor
std
enter
sbb
cmp
insl
adc
adcb
jge
xchg
bound
out
lock
pop
repnz
lcall
xor
xor
ficoms
cld
mov
data16
xor
add
mov
mov
cmp
push
sub
scas
addr16
mov
test
jl
jno
ljmp
inc
cmp
mov
sti
xor
dec
pop
xchg
mov
inc
inc
xor
mov
and
mov
sub
aad
clc
test
and
or
fiaddl
aad
add
cmp
cmp
outsb
cmp
xlat
adc
bound
icebp
rcll
mov
jne
out
add
mov
cltd
icebp
jnp
mov
push
add
mov
cmp
rorl
cmp
xchg
xchg
je
xchg
xlat
sub
add
lods
jecxz
adc
ret
imul
and
faddl
jp
mov
es
rorb
lock
add
in
cmp
dec
pop
xchg
xchg
pop
jle
mov
das
xor
cld
push
inc
nop
lcall
test
push
cmp
ja
stos
lea
cmp
in
dec
or
xchg
cmp
cmp
xchg
or
xor
ja
xor
fadd
add
pop
dec
cmp
mov
mov
out
cmc
aam
push
nop
xchg
sub
inc
sub
cmp
lds
mov
pushf
cmp
int3
sbb
orb
inc
or
dec
fsub
aad
adc
ret
fsubrl
je
loope
pop
insb
cmp
push
mov
cmp
xchg
inc
mov
shll
loopne
cmc
mov
faddl
ror
push
mov
bound
cmp
xor
sahf
cmp
xchg
cmpsl
and
icebp
jmp
xor
pop
xchg
cmp
out
jl
push
add
adc
cld
filds
push
stc
aam
cmp
repz
les
rcrb
push
icebp
or
jg
cld
jo
mov
dec
mov
fiadds
cmp
or
icebp
cmp
push
mov
mov
mov
out
add
fsubl
cmp
cmp
push
cwtl
sbb
xor
movsl
and
js
cltd
cmpsb
les
cmp
inc
mov
mov
fisttpll
or
cmp
adcl
out
cmp
sahf
push
movsb
aad
das
imul
cmp
pop
sbb
pushf
cs
jns
mov
mov
sbb
and
data16
add
mov
scas
repz
ret
lds
mov
push
mov
loop
fdivl
mov
pop
add
mov
or
cmp
mov
sub
adcb
clc
xor
add
push
xor
dec
int
sbb
fstpt
lret
mov
add
cmp
push
mov
xchg
ds
adc
sbb
sti
nop
pushf
mov
xor
sti
mov
out
fcoml
pusha
aam
and
inc
or
shl
fldt
cmc
data16
lret
insb
jne
push
enter
negl
rclb
inc
add
ja
push
pop
mov
cmp
loopne
push
and
shll
lcall
mov
jle
push
sub
pop
dec
iret
and
push
cmp
je
ret
jnp
rolb
fisubs
adc
sarl
fisubl
jmp
or
dec
das
iret
inc
and
dec
jns
cli
xor
ljmp
data16
and
sbb
jno
sbb
and
sbb
xor
adcb
cmp
and
gs
cmp
test
inc
cmp
push
in
sbb
lret
cmp
add
cmp
mov
mov
jno
shrb
lcall
daa
out
sub
mov
sbb
lahf
ja
cmp
mov
popa
add
or
add
sti
pop
imul
scas
clc
shlb
cmp
pop
cltd
outsb
adc
out
in
fcoms
mov
nop
imul
icebp
jne
cmp
or
iret
dec
mov
cs
push
xchg
roll
lock
shrb
addw
inc
testb
fnsave
cmp
icebp
push
shr
fidivrs
leave
add
dec
ds
mov
mov
sub
inc
fucomi
adc
cmp
inc
pop
cld
mov
cmp
push
lret
scas
dec
ljmp
add
jle
mov
das
mov
enter
sbb
cwtl
jle
xchg
jp
mov
mov
push
lahf
adc
and
popf
cmp
pop
nop
cmp
ja
cmp
xor
sub
xor
in
dec
cmp
movsl
or
or
into
inc
movsl
sub
jns
cmp
inc
jnp
cmp
sbb
or
cmp
test
inc
adc
shll
cmc
xor
cmp
pop
fsubrs
fwait
sarb
icebp
xor
sbb
fstps
pop
scas
xor
ds
xlat
mov
pusha
or
push
cmp
inc
repnz
jno
inc
daa
mov
xchg
test
inc
gs
iret
cmp
sbb
mov
cmp
mov
adc
fstl
mov
pop
out
dec
stos
into
das
jns
cmp
xchg
mov
popf
lea
adc
cmp
dec
push
pop
sub
jns
in
gs
add
int3
inc
pop
out
sub
fimull
ret
inc
xchg
and
mov
push
or
jp
mov
dec
pop
xchg
cmp
repz
test
jbe
popf
xor
icebp
pop
inc
rcrb
sbb
fwait
cmp
jecxz
loopne
mov
sub
sbb
mov
test
fsub
push
and
dec
jne
ja
std
cmpsb
adc
gs
pop
testl
mov
cmp
xor
daa
cmp
les
bound
inc
sti
xchg
push
cmp
pop
sub
add
out
out
cmp
hlt
ret
xchg
lods
adc
and
add
mov
mov
jne
cmp
pushf
je
js
in
subb
cmp
add
mov
jecxz
and
int
test
fbld
je
stc
cmp
mov
pushf
dec
mov
mov
stc
cmp
sbb
mov
imul
inc
lret
xchg
mov
cmp
push
sub
cmc
adc
out
push
push
cld
or
js
mov
dec
xor
sbb
scas
xor
cmpl
lcall
loopne
test
mov
ja
ss
out
and
push
fsubs
popa
dec
and
ds
xlat
push
mov
inc
jnp
dec
pop
jp
mov
rcll
pop
sahf
pushf
jae
inc
sub
repnz
sti
movsl
in
inc
imul
sub
fsubl
movsl
adc
xchg
xor
xor
mov
cmp
inc
or
cmp
hlt
pop
aaa
mov
fisttps
mov
nop
mov
outsb
add
popa
test
xchg
fcom
cmp
sub
fisubl
jecxz
fildl
lcall
js
jge
dec
jb
mov
mov
cmp
lods
xchg
ret
or
xlat
fsubs
lods
cmp
dec
push
movsb
icebp
in
sarl
push
xor
mov
lret
fisttps
test
lcall
mov
mov
cmp
inc
sar
xlat
mull
stos
sub
xor
mov
inc
test
es
sub
movd
mov
or
xchg
inc
enter
hlt
fdivs
pusha
inc
pop
sub
fildll
rcr
xor
aaa
push
xchg
cmpsb
lahf
cmp
inc
into
mov
dec
adcb
or
mov
pop
push
pop
and
aaa
jge
pusha
cmp
or
add
and
icebp
cli
scas
test
test
jnp
decb
mov
int3
dec
mov
jp
test
or
inc
push
es
data16
pop
pusha
sarl
fsubr
ret
fcmove
sbb
xor
mov
stos
cmp
testl
jnp
jns
lret
cmp
movsb
mov
push
dec
push
insb
popa
mov
data16
sub
inc
jbe
jmp
cmp
negl
lret
pop
icebp
jnp
lret
lahf
ljmp
lret
mov
out
cmpl
inc
dec
popa
aaa
jmp
es
xor
inc
mov
adc
and
scas
jp
lds
xlat
lea
std
fdivr
jmp
cmp
mov
mov
fs
cmp
or
fmulp
adc
pop
into
xor
ds
xor
jnp
xchg
cli
dec
rcll
sub
adc
in
push
ds
leave
iret
lea
scas
lret
loope
or
dec
jo
mov
nop
dec
cwtl
andb
dec
ds
jnp
ret
cmpsb
inc
and
adc
cli
adcl
mov
mov
mov
bound
mov
mov
cmp
xchg
push
or
sti
cmp
xchg
cltd
pop
and
loope
cmp
daa
out
repz
out
xchg
fdivrl
inc
push
adc
je
inc
lods
cmp
and
jns
cmp
out
push
cmpsl
loopne
xchg
sbb
dec
out
pop
jne
adc
mov
sbb
pop
fs
movsl
and
push
lea
pop
cmp
sahf
cmp
outsl
sub
inc
inc
or
loope
add
and
outsb
xchg
sbb
sahf
push
cmp
leave
test
shl
sbb
int3
pop
mov
imul
push
lods
inc
mov
xchg
orl
hlt
jae
cmp
xchg
in
mov
inc
cwtl
push
cmp
adc
ss
xchg
fnstcw
or
lods
imul
sbb
jnp
in
sub
enter
cwtl
fsubr
and
fstl
lret
call
jae
imul
xor
inc
pop
jmp
sub
int3
test
dec
out
mov
inc
lahf
mov
scas
dec
cli
and
mov
mov
jle
faddl
xchg
gs
fsub
jno
and
shl
testl
mov
imul
and
sub
xchg
push
or
cmp
sub
jmp
xchg
sar
lret
cmp
push
mov
inc
inc
inc
sbb
add
in
push
cmp
add
out
jecxz
lahf
cmp
inc
pop
lods
popa
movsb
mov
adc
mov
pop
mov
cmpb
loope
xlat
sbb
adc
mov
xchg
sub
cmp
and
xlat
xchg
lds
aam
xor
je
xor
test
out
jb
pop
cmp
xor
jp
std
cmp
lds
or
mov
cmp
xchg
dec
into
dec
test
pushf
mov
sub
dec
cmp
pop
pop
inc
xor
pop
adc
adc
std
arpl
sub
dec
jmp
fisttpl
fs
popa
dec
pushf
or
push
sub
dec
mov
inc
cmp
stc
lahf
fsubrs
sbb
push
mov
xor
pop
addb
cmp
or
outsb
push
cmp
popf
inc
mov
push
cmp
aas
mov
and
fcoms
lds
jne
cmp
mov
movsl
cmp
out
push
es
push
jne
adc
pop
out
mov
dec
push
cld
loope
adc
inc
inc
sti
inc
das
jnp
flds
push
cmp
dec
movsb
fnsave
cmp
lahf
sub
and
and
push
outsb
sbb
mov
fnstcw
out
xchg
cld
lahf
xlat
cmp
mov
popf
out
out
dec
cmp
inc
lock
das
xchg
sti
jns
test
sarl
or
xor
inc
pop
push
mulb
dec
in
push
or
cmp
icebp
lahf
cmp
filds
iret
out
movsb
jge
xchg
cmp
add
cmpsb
movl
mov
inc
pop
cli
push
fildl
cmp
mov
ljmp
jg
mov
cmp
mov
dec
jb
lahf
cmp
cmpsl
iret
jae
push
dec
dec
and
outsl
cmp
mov
aam
cmp
aad
lods
rcl
stos
push
push
cmp
inc
add
mov
xchg
cmp
xor
lds
cmp
shl
cmp
ja
lahf
cltd
repnz
push
xrelease
subb
mov
cmpsb
lods
dec
mov
sbb
mov
pop
mov
ss
jne
fwait
push
lock
or
loope
ret
xchg
daa
pop
and
cltd
sub
push
es
push
cmc
cmp
or
gs
sub
iret
bound
ja
cmpsl
pop
popf
clc
pop
lods
push
xor
nop
mov
idiv
int
xchg
mov
jns
cmp
or
iret
rcrl
mov
sbb
mov
das
out
cmp
pop
and
cld
enter
stos
imul
out
and
leave
and
jp
aad
mov
xchg
dec
loopne
sbb
xor
push
outsb
fdivrl
hlt
xor
lcall
sarl
aad
inc
mov
lret
out
xchg
cmp
mov
xor
test
pushf
jle
jp
adc
xchg
inc
cwtd
out
call
daa
push
into
cmp
mov
in
cmp
push
or
dec
jmp
mov
imul
jnp
and
push
mov
sarl
fbstp
rclb
enter
hlt
pmaxsw
push
cmp
sbb
cmp
cmp
cmpl
add
in
and
push
cmp
push
into
sahf
cmp
sbb
inc
cmc
mov
pop
cmpsl
push
lcall
jbe
adc
daa
data16
movsl
pop
int3
sbb
movsb
pop
pop
ljmp
insb
add
sub
in
sbb
xor
mov
cmp
jno
jae
jg
cmp
mov
stos
lds
imul
idivl
push
enter
adc
xchg
adc
out
int
cmpsl
test
mov
jmp
jg
clc
jecxz
cli
push
add
cmp
ljmp
cmp
test
inc
std
sub
insl
push
xlat
insb
sbb
adc
es
ja
loopne
push
sub
sbb
loop
cmp
sarb
popa
cmp
xor
add
fwait
subl
cmp
scas
lret
add
mov
mov
mov
cmp
aas
out
inc
int
pop
cmpsb
cmp
mov
imul
lret
aaa
and
xor
in
add
mov
mov
inc
out
add
pop
cmp
jmp
xchg
int3
cmp
hlt
fcompl
test
lds
cmp
mov
and
jl
cmp
push
inc
bnd
sbb
xchg
jecxz
cmp
rorl
dec
xor
dec
add
pusha
fildll
mov
cmp
add
ret
fidivrs
jno
into
call
xchg
and
adc
ds
dec
mov
pop
cld
mov
mov
xor
jl
mov
aam
pushw
pushl
add
push
cmp
ret
outsl
push
das
cmp
test
out
and
cmp
repz
cmp
push
push
cmp
test
int
dec
push
pop
adc
adc
push
xor
push
cmp
cltd
leave
movsb
push
cli
xchg
dec
lret
jo
mov
cli
cmpb
add
xchg
mov
cmp
fwait
mov
xlat
cmp
rcr
and
out
cmc
ret
cmp
jge
test
addr16
lock
mov
mov
jg
add
adc
adc
lcall
les
mov
out
mov
xchg
and
jae
mov
mov
pop
mov
test
pmaddwd
popa
fsubrs
lret
cmp
inc
addb
adc
adc
xor
push
mov
pop
jmp
sbb
lahf
movsb
push
imul
xchg
lds
jns
fnsave
ret
mov
inc
mov
cmp
xor
aad
jecxz
or
cmp
insl
xchg
xor
jns
bound
jb
cmpsl
ret
adc
rclb
das
scas
jns
ret
fsubp
popa
add
xchg
mov
popa
xor
mov
test
mov
cmp
cltd
xchg
sbb
fsts
lcall
aas
mov
and
and
bound
push
test
outsb
cmp
jle
dec
xorb
test
cmp
jae
and
xchg
mov
push
inc
jnp
mov
jne,pt
mov
sarb
push
xlat
push
xchg
cmp
lcall
add
fs
insl
cmp
adc
outsl
stos
xor
dec
mov
cmc
rcr
loop
cmp
inc
push
pop
insb
clc
pop
inc
cmp
mov
mov
lds
xorl
in
cmp
pop
push
out
mov
lret
xor
inc
mov
fstps
mov
mov
cwtl
jno
sbb
out
xchg
cmp
shrl
imul
cmp
mov
jp
leave
push
loope
cmp
xchg
iret
cmp
mov
cmpsb
lret
pushf
cmp
fisubl
cmp
pop
mov
cmp
test
out
pop
mov
mov
lods
jbe
mov
add
push
dec
and
repnz
xchg
stos
lea
sub
mov
into
iret
lods
xchg
cmp
jle
xchg
sbb
add
mov
in
pop
es
adc
cmp
aas
push
pop
mov
push
cmp
add
sub
push
dec
and
and
rcll
sti
ret
fsubs
mov
jmp
je
fwait
stos
jge
bound
cmp
lcall
pop
adc
inc
mov
mov
sub
lcall
lret
xchg
pop
inc
pop
push
mov
out
ror
mov
cwtl
js
cmp
cmp
icebp
test
mov
ja
imul
jno
lahf
scas
shlb
int
or
jecxz,pt
outsb
in
add
cmp
and
jecxz
outsl
fildll
mov
inc
inc
jne
mov
cmpsb
icebp
jae
push
inc
shlb
daa
mulb
stos
xor
lret
ret
dec
cmp
or
mov
adc
add
repz
dec
or
cmp
add
and
mov
mov
or
outsl
test
testb
lea
mov
lahf
cwtl
popf
cld
fucomip
mov
jle
rorl
pushf
incl
outsb
pusha
xor
xchg
mov
das
fwait
adc
daa
fstl
push
inc
add
sti
mov
push
arpl
mov
pushl
cmp
cmp
ret
int3
mov
js
cmp
jmp
lds
mulb
and
loop
cmp
lods
cmp
fsubs
pop
out
xor
jne
push
sti
sub
and
adc
fidivs
or
cmova
cmp
push
cmp
or
adc
out
das
push
inc
fcoml
cmp
sub
out
cmp
mov
cmp
lret
cmp
icebp
int
mov
cmp
push
stos
popa
inc
subb
out
leave
int3
enter
xchg
iret
push
mov
cmp
jecxz
cmp
ja
addr16
pop
add
pop
inc
or
cmp
ret
cmp
daa
sub
mov
rorb
xchg
lret
mov
add
bound
push
sbb
cmp
jg
lds
jae
mov
shlb
idiv
lahf
popa
jge,pt
in
cltd
or
in
aad
shlb
je
xchg
fstp
add
xchg
cmp
loope
push
cli
pop
mov
xchg
bound
cmp
and
push
leave
cmp
cld
or
cmp
cmp
daa
jno
roll
fadds
xchg
cmp
push
lahf
adc
in
fwait
jle
jb
into
out
pusha
mov
movsl
test
rolb
movsb
or
cli
inc
or
or
mov
jnp
adc
inc
xorl
inc
push
pop
mov
add
dec
jp
mov
cmp
pop
lahf
testl
cmp
loopne
xor
cmp
outsb
dec
in
jne
pop
sbb
cmp
sub
cmpl
shll
cmp
cmpsl
inc
mov
lahf
and
in
jne
cmpl
mov
popa
bound
test
add
xchg
adc
fadds
cmp
sub
dec
cmp
mov
clc
push
stos
lods
into
dec
out
mov
adc
imul
dec
pop
push
enter
cmp
sti
pop
cmp
cmp
push
mov
test
js
fistpl
lret
cmp
jl
test
cmp
out
into
or
inc
mov
in
dec
insb
imul
lret
movsb
fadds
mov
xchg
add
pusha
dec
jnp
cmp
cwtl
mov
push
outsb
dec
or
and
lahf
pop
or
leave
or
mov
mov
lret
dec
xor
jns
push
pusha
dec
es
out
ja
ss
in
cmp
push
mov
mov
xchg
cmp
mov
push
inc
pusha
loopne
cmp
adc
add
into
xor
push
imul
and
scas
push
lods
stos
inc
aaa
dec
std
xchg
jp
in
stc
add
sbb
or
adc
pushf
xlat
mov
out
out
in
mov
xor
addr16
and
lods
xchg
aaa
jp
cmpsl
cmp
stos
dec
in
out
xchg
dec
cli
add
roll
test
mov
inc
jae
mov
and
rcl
mov
push
ret
cmp
pop
fwait
pop
push
scas
push
je
rcrl
jbe
mov
fmulp
je
xchg
fwait
cmpsl
push
or
mov
mov
xor
cmp
aaa
cmpsl
adc
cs
loop
sahf
nop
cmp
ds
xchg
loopne
xchg
shl
cmp
imul
clc
jg
cmp
and
xor
mov
push
cmpsl
sbb
rorl
sbb
and
cmp
fmuls
lea
mov
adcb
popa
cmp
xlat
es
and
mov
sbb
push
adc
mov
cmp
push
xchg
rcrb
cmp
shll
and
fdivp
pop
shrb
pushf
cmp
out
inc
nop
shlb
sbb
loopne
call
xchg
movq
movb
out
push
or
inc
cmp
sbb
adc
jbe
pop
nop
lea
cmp
cmp
push
mov
push
mov
mov
cmp
pop
mov
push
add
ljmp
mov
pop
ss
jp
mov
lahf
out
xchg
mov
cmp
sub
cmp
bound
cmp
cli
jg
and
stos
and
push
rcrl
cmp
sub
mov
fwait
sub
cmpsb
fisttpll
pop
lcall
mov
daa
cmp
push
adc
cmp
icebp
lods
cmp
push
fsts
scas
xor
cmp
rclb
jno
clc
xor
inc
stos
clc
rcll
pop
lahf
push
lret
lock
imul
hlt
mov
leave
cmp
and
or
push
sti
sub
inc
mov
add
fwait
cmp
js
cld
dec
inc
cmp
and
insb
cmp
push
add
loopne
ret
mov
inc
adc
cmpb
rorl
outsb
les
jae
sub
insb
adc
cmp
movsl
push
cmpsb
sbb
lods
pop
cmp
sbb
ja
cmp
jne
pushf
and
mov
test
jbe
das
sarl
pop
nopl
adc
enter
fstpt
lret
popf
ds
cmp
test
inc
mov
rcrb
mov
inc
pushf
inc
fnstcw
push
and
dec
ss
cmpsl
cmp
in
cmpb
test
leave
cmp
add
mov
or
xchg
outsl
pop
cmpb
divb
lret
das
dec
scas
add
xchg
push
fistps
and
cmp
sbbb
jbe
popa
outsb
mov
adc
add
enter
pop
dec
mov
imul
rcl
adc
mov
es
add
in
sbb
cmp
mov
les
cmp
xor
jg
mov
sub
test
clc
add
cmp
je
mov
cmpsl
adc
mov
iret
jmp
cmp
push
pop
adc
cmp
pushf
xchg
sub
pop
mov
shlb
xchg
cmp
cmp
addr16
xor
xor
int
xor
and
rclb
aam
mov
std
mov
xlat
cmp
sti
test
repz
repnz
mov
leave
addb
popa
cmp
cmpl
mov
and
push
fnstcw
sub
and
mov
cmp
jb
mov
or
lea
loopne
inc
jbe
test
cmp
fldenv
cmp
scas
cmp
gs
inc
call
pop
aam
jecxz
sahf
inc
mulb
icebp
mov
insl
cmp
add
sarl
aaa
xchg
clc
sub
mov
rcpps
adc
rclb
pop
cmp
into
imul
stos
addb
data16
cmp
pop
fisubs
jl
gs
jg
cmp
pop
xchg
mov
dec
mov
sbb
push
push
mov
lods
fstps
idivl
mov
mov
ja
xchg
push
sub
movl
mov
cmp
mov
jmp
xchg
or
cmp
pop
pop
pop
mov
jecxz
jbe
das
add
xor
scas
lock
xchg
mov
cmp
mov
dec
aam
cs
adc
jb
lret
cmp
pop
cmp
push
iret
adc
shlb
xor
mov
sbb
mov
sti
mov
xor
lods
in
movsl
cmp
mov
cmpsl
push
cli
lds
sub
xchg
cmp
mov
cmp
push
dec
pushf
xchg
shll
jl
pusha
dec
push
and
inc
in
pushw
cmp
stc
inc
insl
cmp
cmc
xor
mov
adc
fldcw
jnp
inc
mov
scas
scas
lea
cmp
test
stc
icebp
cmp
shl
and
push
shl
mov
jnp
fs
cmp
stos
add
add
hlt
cmp
push
jbe
pop
cmp
add
into
cmp
push
adc
ret
iret
cmp
cmc
push
aas
sbbb
mov
fldcw
add
int
dec
xor
and
mov
pushf
negb
add
hlt
cli
cwtl
mov
inc
push
std
add
push
sbb
pop
xor
mov
pop
std
repnz
out
push
ss
push
cmpsb
jmp
inc
mov
adc
mov
sti
cmpsb
push
ud0
cmp
loopne
xor
xor
mov
int3
inc
ds
sub
push
push
clc
inc
mov
insb
aad
fxch
outsb
mov
jbe
fmull
sti
adc
push
int
mov
xor
push
cmp
daa
inc
jbe
pop
push
inc
movsl
push
xchg
cmp
out
cmp
not
pop
ja
and
aaa
mov
mov
dec
lret
or
xchg
cmp
dec
or
stos
int3
sub
pop
and
lods
fisttpll
std
cmp
adc
mov
push
or
adc
add
das
lret
cmp
cli
cmpsl
jp
push
std
cmc
xchg
das
arpl
cmp
ss
xchg
icebp
fdivl
cltd
cpuid
adc
cmc
ficoml
cmp
inc
test
stos
lds
fs
mov
push
leave
ss
xor
push
imul
popa
xchg
cmp
push
push
jnp
adc
scas
into
mov
fdivr
cmp
aad
mov
mov
jnp
pop
push
cmp
mulb
inc
pop
pusha
scas
push
cmp
xchg
stos
popa
imul
sbb
inc
or
jg
push
subb
add
lret
pshufw
dec
imul
pushf
neg
pusha
fsubrs
pop
push
cmp
mov
jns
push
jmp
cmp
inc
dec
mov
mov
inc
push
cld
and
int
ret
clc
jmp
cmp
mov
enter
xorl
mov
mov
sub
mov
sti
into
cmp
add
or
mov
push
inc
mov
dec
fists
cmc
inc
rcrb
jnp
js
inc
cltd
sahf
push
mov
inc
arpl
out
jmp
mov
xchg
add
test
mov
outsl
cmp
ud2
test
sub
cmp
std
push
inc
mov
xor
cld
dec
add
dec
rorb
fmuls
test
and
push
rclb
in
xor
cmpsb
ljmp
test
mov
and
jae
xor
or
or
cmp
mov
and
flds
cmp
mov
add
imul
stc
sub
or
adc
adc
xchg
mov
loopne
or
in
cmp
ret
repz
into
cmp
cmc
lea
pop
cmpsb
out
push
jmp
xor
outsl
lods
insb
mov
call
arpl
enter
sahf
cmp
pop
push
inc
sbb
dec
cltd
cmp
pop
faddl
leave
adc
xor
je
cmpsb
daa
jp
push
stos
test
int3
enter
xor
and
dec
cmp
inc
in
jp
fcmovb
out
int
mov
dec
jge
xchg
xchg
pop
pop
mov
cmp
add
fwait
and
add
mov
hlt
inc
mov
mov
dec
aad
fisttps
dec
ss
outsl
pusha
jle
inc
gs
jno
mov
movsb
mov
cmp
nop
ret
in
imul
cld
mov
adc
aaa
mov
rcrl
mov
push
int3
pushf
cmp
adc
mov
adc
idivb
arpl
fistpl
and
jne
fmuls
xchg
cmp
in
sub
shll
push
push
out
test
sbb
ret
add
aad
data16
jns
orl
xor
xchg
lods
xchg
dec
mov
mov
dec
sti
xchg
pop
mov
push
sbb
test
cmp
data16
loopne
lods
pop
pop
cli
pop
xchg
cmp
fildl
sbb
gs
xlat
push
fdivl
ret
daa
push
in
xor
mov
movsl
insl
pop
or
push
cmp
or
mov
xchg
pop
cld
cmp
xor
adc
ds
fstpt
mov
pop
mov
mov
mov
push
sbb
icebp
ficomps
cmp
xor
sbb
cltd
addl
add
jnp
pop
and
jae
jecxz
cmp
fdivr
push
sub
cmp
xchg
insl
pop
xor
lret
stos
pop
or
popa
stc
cmp
negb
inc
add
lea
push
pop
sub
cmp
sub
cmp
and
cmp
cmpsb
imull
fwait
loopne
jae
das
jl
jb
ds
xor
mov
or
cltd
sbb
out
cmp
push
jmp
popf
lds
in
and
lahf
or
mov
xor
xchg
ljmp
decl
mov
jle
cmp
push
insb
inc
cmp
int3
ljmp
nop
ss
sahf
inc
cltd
or
int
xchg
cmp
jp
bound
adc
ret
inc
push
mov
cld
inc
xchg
mov
cmp
es
addb
fdivrs
sbb
call
ss
fisubl
loope
dec
and
mov
cmpl
mov
sub
rol
inc
mov
mov
cmp
sti
and
das
shlb
ficompl
jg
lcall
and
rclb
mov
pop
cmp
add
mov
fildll
cmp
roll
test
adc
lret
mov
jge
adc
pop
inc
js
and
cmp
adc
imul
shrl
add
dec
mov
cmp
sbb
fcompl
mov
cmp
int3
lea
rorl
cmp
movsl
push
push
aaa
cmc
movl
cwtl
stos
sub
movsl
mov
mov
push
hlt
and
push
pushf
mov
popl
or
std
cmp
pop
int3
cmp
test
inc
add
lods
xlat
insl
push
stos
aam
add
mov
sbb
insb
cmp
mov
sti
dec
inc
mov
cmp
jg
add
jecxz
hlt
xchg
loope
test
cmp
and
leave
addb
xchg
xor
cmp
and
add
sarl
xlat
cmp
mov
testl
jae,pn
sbb
or
pop
xor
pop
push
addr16
mov
lea
or
mov
cmp
and
push
scas
dec
cmp
repnz
mov
mov
lods
loop
push
clc
rcrb
pop
sbb
cmp
cmpsb
push
or
fwait
sti
cld
fsubrl
cmp
pop
and
push
je
sbb
aam
pop
sub
pop
lods
xchg
jnp
mov
sahf
lcall
dec
cmp
loope
mov
repz
mov
cmpsl
dec
das
adc
outsl
ss
xchg
cmp
pushf
mov
push
fisttpl
dec
out
add
xor
jg
fisttps
dec
adc
cmpsl
fs
mov
cmp
dec
orb
mov
xchg
out
pop
in
lret
fistps
sub
popf
xor
mov
pushf
mov
inc
add
dec
cmp
sarl
push
jnp
cmp
jl
in
push
pop
loopne
popa
dec
add
xchg
mov
cmp
cmpsb
pop
loopne
sbb
insb
or
cmp
xchg
lret
push
mov
dec
gs
cmp
fld
push
push
cmp
xchg
jns
aas
pop
repnz
xor
es
xor
call
lds
mov
out
dec
adc
push
mov
clc
rcrb
sbbb
cmp
repnz
jnp
cld
cmp
mov
aas
test
push
lods
or
mov
cmp
pop
jecxz
or
mov
mov
xor
imul
dec
in
pusha
cmp
subl
lahf
mov
ja
out
cmp
jbe
sub
idivb
mov
sbbb
cmp
mov
sbbb
cmp
inc
das
or
scas
lret
cmp
daa
gs
in
mov
jecxz
or
adc
and
and
jae
mov
enter
push
mov
and
sub
mov
jne
data16
jno
cmp
in
movsl
fs
scas
cmp
and
and
xchg
add
sbb
mov
push
dec
sub
sarb
cmp
pop
cmp
push
mov
cmp
nop
test
cmp
fdivrs
adc
ja
incb
out
dec
inc
popf
aaa
lea
pop
jmp
enter
inc
cmp
stos
bound
repz
jb
lret
cmp
mov
push
lods
xchg
cmpb
sbb
imul
push
cmp
fwait
cmpxchg
stc
mov
cmp
int
mov
jecxz
mov
lock
fadds
sbb
popf
mov
hlt
adcl
mov
or
xchg
shlb
pop
xor
repnz
sbb
cmp
pop
push
jecxz
xchg
cmp
mov
xchg
xchg
es
imul
nop
out
inc
sub
push
bound
cmp
mov
jnp
fsubrp
cmp
mov
mov
cwtl
idivb
pop
ljmp
call
pusha
pop
lea
cmp
mov
pop
scas
psubusw
cmp
aas
jb
mov
cmpsl
mov
mov
cmp
icebp
mov
pop
inc
cmp
nop
les
xchg
rclb
fidivrs
xchg
ljmp
out
idiv
and
push
cmp
outsl
inc
jge
cmp
adcl
daa
ja
lret
hlt
cmp
sub
adc
int
add
mov
cmp
cmp
dec
cmp
mov
popa
xchg
fucomip
dec
ret
bound
add
lret
es
insb
or
inc
sti
push
push
std
into
es
fadds
mov
inc
loopne
outsl
xor
out
mov
inc
add
stos
scas
fcomps
cli
iret
lret
sbb
sarb
mov
mov
nop
fs
out
sbb
test
sub
movl
fadds
add
movsb
cmp
cmp
mov
mov
mov
or
aam
loopne
mov
sub
jbe
fdiv
lock
std
sti
mov
ret
sub
sbb
test
stos
lock
mov
loopne
jge
cmp
pop
out
xchg
dec
loopne
loopne
and
movsl
es
cmp
aad
or
imul
xchg
xor
insb
fs
outsb
jb
push
sub
sti
jae
cmp
fnstcw
imulb
xor
cmp
mov
repnz
daa
or
mov
inc
scas
cmp
shrb
rcrl
pop
in
or
stos
cwtl
int
add
stc
test
pop
push
jns
jne
inc
stos
xchg
enter
mov
inc
fistpl
pop
or
pop
xor
push
or
mov
and
icebp
rcrl
inc
inc
push
jp
add
cmpsl
xchg
adc
sub
loopne
mov
hlt
jae
cmp
push
sub
add
pop
xchg
ja
mov
std
cmp
daa
lods
mov
clc
or
jno
nop
pop
pop
and
inc
fsubr
or
or
andb
mov
adc
jmp
cmp
or
xor
push
or
push
loop
test
adcb
aaa
push
int
mov
insb
jecxz
pop
repz
std
movsl
cmp
add
cltd
mov
mov
repz
cmp
sbbl
sarb
adc
sbb
cmp
and
int3
pop
cwtl
sub
into
sti
jnp
dec
es
pop
jns
fists
cmp
jmp
scas
movsb
mov
lret
cmp
inc
adc
cs
cmp
mov
test
add
insl
filds
outsl
roll
lods
mov
lahf
repz
mov
cmp
jae
lea
xchg
cmp
pop
lods
dec
cmp
or
mov
roll
pusha
pop
lret
xchg
sti
adc
shll
cmp
out
xor
dec
add
and
aad
shll
test
sub
jmp
fcoml
jo
xor
xchg
clc
pop
sub
in
push
xor
add
mov
or
inc
add
cmc
pop
cmp
pop
sbb
fmuls
jbe
aas
mov
cmp
out
lea
icebp
xchg
mov
sub
mov
cmp
fnstenv
popf
jo
jge
mov
bound
int3
or
xor
and
data16
lock
cmc
or
cmp
add
je
loopne
cmp
int
mov
pop
ljmp
ljmp
test
mov
pop
fidivrl
xchg
dec
xor
enter
cmp
cmp
cmpsl
cmp
divl
scas
enter
xor
fidivrs
movsb
pop
or
cmp
bound
ret
insb
cmp
addr16
sub
jns
xor
mov
jle
push
adc
push
cmp
fs
flds
push
cmp
les
xor
mov
sub
ljmp
imul
cmpl
ret
mov
mov
ficomps
into
push
imul
test
pop
pop
cs
shrb
sub
xchg
cmp
scas
out
xor
dec
ja
decb
daa
mov
fs
mov
stos
lods
sub
jb
fsubrl
xchg
cmpsb
cmp
xchg
scas
cmp
rcll
sbb
sbb
dec
mov
mov
cli
add
in
dec
fmuls
pop
mov
cmp
sub
outsb
aas
cmp
cmp
mov
scas
outsl
in
movsl
and
mov
ret
cmp
inc
mov
mov
inc
and
and
dec
dec
mov
aaa
cmp
lods
adc
movsb
insl
mov
pop
push
adcl
clc
push
push
les
jg
lock
cmp
pop
iret
ss
dec
fcomp
imul
jg
sbb
je
lahf
cmp
and
cmp
and
push
xchg
movsl
cld
sub
mov
xchg
cmpsb
cmp
xlat
arpl
xlat
imul
cmp
lods
and
jo
push
mov
jg
inc
cmp
mov
jmp
jnp
fdiv
fisttps
xor
cmp
and
xchg
push
loope
ret
sbb
cmp
jne
repz
push
xlat
cmpsl
and
inc
testl
push
mov
push
inc
mov
jmp
cmc
xchg
sbb
bound
cmp
xor
fst
pop
cmp
cmpsb
sbb
xor
in
out
dec
mov
fs
pop
push
aas
mov
add
dec
mov
xor
cmp
sbb
sub
pop
pop
lea
ja
cmp
cltd
xchg
cld
jmp
in
jnp
and
dec
xor
mov
movsl
mov
jmp
mov
scas
cmp
add
lret
mov
aam
pushf
dec
scas
loope
xor
and
jmp
negl
xor
out
mov
hlt
adc
cmp
lods
dec
dec
lret
cwtl
xchg
mov
and
xorl
pop
adc
sahf
inc
jbe
pop
daa
cmp
jge
and
cmp
dec
call
cmp
jno
cwtl
xorb
inc
push
cmp
ror
pop
cmp
jl
pand
cmp
mov
jecxz
fidivrs
aaa
loopne
nop
inc
stos
sahf
jl
ss
push
out
stos
cmp
popa
imul
add
cmp
and
cmp
cmpsl
inc
jp
mov
dec
les
cmp
adc
cmovb
std
cmc
xchg
mov
nop
cmp
pop
cmpsl
insl
jne
cmp
xchg
mov
in
lret
add
pop
pop
test
and
stos
jecxz
or
int3
repnz
idivl
xchg
lea
repz
cmp
clc
mov
adc
adc
ljmp
bound
pop
mov
movsl
scas
sub
jge
fprem
inc
into
dec
repnz
xchg
mov
fcoms
xchg
or
add
mov
xor
dec
fsubrl
out
fwait
aaa
imul
xchg
mov
rclb
cmp
dec
mov
jge
xchg
mov
cmp
push
jg
mov
enter
sub
cmp
mov
repnz
mov
cmp
nop
jl
cmp
cmpl
aaa
lahf
mov
pop
cmp
aam
iret
cmp
movsl
repz
fdivr
mov
loopne
out
in
xlat
inc
in
cmp
aad
shl
cmp
xor
in
cmp
or
inc
std
lret
ljmp
scas
into
aaa
test
ffreep
cmc
adc
daa
sub
jbe
in
cmp
push
pop
mov
inc
mov
and
in
enter
imul
mov
mov
or
add
mov
mov
lcall
pop
cmp
fidivl
sub
mov
imul
test
cwtl
aas
and
insl
test
adc
mov
repz
cmp
aam
fildl
in
dec
xchg
out
clc
pop
fbstp
push
adc
out
push
sub
cmp
sub
cmpb
add
dec
pop
cmp
jb
push
movsl
cmp
add
and
pop
out
mov
daa
or
inc
and
idivl
lahf
mov
and
mov
cmp
cmp
adc
mov
pop
push
rcl
cmp
lret
or
fwait
cmp
jae
orb
jp
shlb
int3
lea
add
cmp
je
pop
cmp
test
test
add
xchg
nop
shll
in
fisubs
ret
adc
decl
jb
sub
mov
push
jmp
cmp
and
in
cmp
fcoml
push
aad
les
cmp
in
sbb
clc
cmp
insb
loope
xlat
jmp
cmp
outsl
das
or
lods
jns
imul
add
sbb
jae
inc
je
dec
jns
test
sbb
xchg
icebp
test
lock
mov
mov
sub
pop
jg
xor
insl
rcr
mov
mov
sbb
and
hlt
jae
mov
mov
add
inc
mov
or
vmovhps
xchg
mov
fnstsw
adc
rclb
or
xchg
jnp
je
cmp
int3
pushf
shlb
bound
push
sbb
cmp
imul
sbb
xor
mov
mov
cmp
push
push
sub
scas
pop
movsb
push
lods
cmp
lcall
pop
cmp
adc
in
in
add
imul
arpl
or
jecxz
xchg
pusha
and
jo
or
xchg
sbb
fdivl
pop
mov
pop
cmp
sbb
sbb
jmp
flds
add
add
inc
aam
outsb
mov
jbe
or
ja
mov
cmp
pop
jp
push
push
push
cmp
imul
js
mov
xor
pop
lds
pop
ret
jb
cmp
movsl
mov
mov
int
inc
push
mov
cmp
xchg
testl
cmp
gs
adc
lret
arpl
sub
mov
js
cmp
pop
push
pop
dec
sub
cmp
jbe
xchg
xlat
aad
subb
jno
sarb
mov
sbb
movsb
unpckhps
jbe
lahf
loop
fidivrl
dec
fistl
nop
push
cmp
mov
push
out
add
jecxz
mov
mov
aaa
sarl
jecxz
cmp
pop
adc
jno
insb
cmp
push
jns
inc
mov
cmp
mov
jg
add
in
out
shrb
lds
push
jb
fsubp
insl
mov
cmp
push
mov
jbe
adc
outsl
mov
pop
enter
cmp
dec
xorb
out
mov
xor
xor
mov
or
test
faddl
cmp
fcoms
nop
cmp
xchg
sub
dec
jg
cmp
push
dec
ds
mov
insl
cmp
or
add
inc
fstpt
xchg
hlt
shl
add
enter
jmp
fnstenv
out
cmp
out
hlt
cmp
fisubrs
push
ret
cmp
push
cmpb
jge
mov
adcl
fcomps
cmp
loope
rolb
imul
mov
xorb
xchg
cmp
pop
out
cmp
repnz
faddl
test
pop
push
jbe
inc
mov
daa
repz
fstl
cmp
ret
xlat
mov
jl
jns
cmp
mov
mov
in
cltd
rclb
mulb
xor
push
mov
fistpll
bnd
arpl
pop
popa
add
xor
or
movsl
jmp
cmp
stc
mov
pop
sub
adc
mov
das
jg
add
icebp
les
cmp
data16
dec
in
stos
aas
out
icebp
add
arpl
imul
ret
cmp
in
or
mov
jbe
cmp
pop
mov
xchg
inc
jnp
shlb
ficoml
cmp
insl
adc
xchg
cmp
jno
mov
mov
push
mov
pop
int
pop
pop
stos
and
ds
sub
push
jge
sti
dec
adc
arpl
sahf
pushf
repz
cmp
push
lcall
cmp
inc
std
lods
mov
add
ret
cmp
xchg
aad
clc
sbb
leave
movsb
cmp
adc
mov
cmp
dec
rcrb
cld
mov
lods
flds
add
push
cmp
test
cmp
bound
pushf
xchg
rol
xchg
repz
leave
or
sub
fidivrl
and
in
mov
mov
xchg
cmpl
and
cmp
jno
out
sbb
cmp
sbb
add
push
push
fnstenv
adc
inc
xchg
mov
xor
loopne
sti
adc
cmp
scas
aad
inc
sarb
pop
lods
shll
cmp
sti
dec
push
divl
enter
cmp
rorl
clc
xorb
xor
add
xchg
xchg
inc
repz
sub
mov
rorl
lods
push
jmp
xor
or
xlat
cmpsb
mov
cmp
inc
xchg
icebp
out
fst
cmp
sub
stos
lods
popa
cmp
popf
cs
sbb
mov
or
movsb
inc
mov
inc
add
loop
push
roll
out
das
stos
push
mov
adc
gs
lea
mov
or
and
rol
jp
clc
add
sub
mov
sbb
adc
idivl
loop
mov
cmp
xchg
ret
mov
repz
cmp
xchg
insl
jle
int
mov
adc
inc
daa
imul
fnstsw
lret
and
in
cmpl
sbb
shll
add
or
dec
dec
jge
add
arpl
add
mov
pop
push
je
loopne
outsb
imul
in
jecxz
test
stos
dec
inc
scas
repnz
test
aad
jecxz
cmp
mov
shl
cmp
sbb
rcr
insb
pop
aam
adc
fcmovnb
repz
mov
lock
jle
sub
adc
or
jmp
in
cmp
xchg
aam
inc
lahf
mov
roll
pusha
inc
lods
sarb
ret
ljmp
sub
jecxz
shl
loopne
add
bound
xchg
jbe
aaa
pop
cmp
jg
mov
ss
cs
sbb
pop
mov
sub
dec
lcall
repz
dec
cmp
mov
fwait
mov
aas
fisubs
cmpsl
sub
pop
push
in
scas
cmp
sti
call
jnp
lea
adc
cmpsb
leave
inc
repnz
sub
into
cmc
fdivr
rcrb
add
mov
popa
es
fdiv
add
jecxz
aam
jbe
cmpsb
aas
loopne
mov
cld
dec
loop
or
dec
lret
jae
xor
daa
sbb
xor
add
push
movsl
or
iret
mov
cmp
and
add
mov
and
addr16
xor
mov
and
and
add
pminsw
mov
ja
xor
push
ds
sbb
scas
stos
jecxz
pop
or
mov
push
test
scas
add
or
mov
push
daa
leave
cmp
jns
inc
cmp
mov
subl
cmp
testl
test
xchg
es
jge
cmpsl
xchg
sarb
mov
les
add
cmp
adc
out
dec
pop
dec
es
xchg
sub
loopne
insb
push
rcrb
inc
mov
xor
mov
sub
jae
jp
push
in
unpcklps
cmp
push
loope
test
clc
xor
shl
insl
mov
add
sti
pop
aam
cmp
or
xchg
cmp
scas
add
mov
mov
mov
fsubl
das
cmp
movsb
jo
bound
cmp
pop
pop
add
lahf
je
iret
sbb
inc
test
cmp
mov
xor
dec
or
mov
imul
cmp
ret
scas
add
jge
in
fsubrs
pop
pop
jnp
sti
addl
jo
stos
sarl
cwtl
dec
fsubrs
xchg
cmp
add
xchg
sbbl
leave
ret
cmpb
inc
xchg
cwtl
fistpll
mov
and
dec
inc
xor
out
mov
movsl
in
data16
cmp
xchg
or
cmc
imul
xchg
loopne
aaa
scas
add
cmp
sbb
xchg
cwtl
xchg
fcmovnu
mov
into
jecxz
out
stc
cmp
mov
roll
mov
cmp
clc
cmp
cmp
scas
rcrl
pop
or
aas
cmp
iret
testl
cmp
lahf
or
stos
cmp
mov
shll
sub
jnp
mov
mov
mov
dec
and
subl
inc
stos
cmp
or
sub
sbbb
mov
xchg
cmp
add
cmp
sahf
shll
add
pop
jge
popa
cmp
test
jb
adc
adc
xor
repz
sub
mov
leave
cmp
loopne
movsb
xchg
and
mov
mov
inc
lret
loope
ja
je
jb
xchg
mov
adc
inc
mov
ret
repnz
and
imul
pusha
push
in
xchg
or
or
pusha
push
fidivs
movsl
xchg
ficoml
inc
sarl
cli
mov
cmp
es
cs
imulb
cwtl
and
jg
xor
js
or
sbb
jbe
mov
out
lea
mov
jns
fs
stc
mov
sub
rclb
jmp
cmp
outsb
loop
jmp
repz
mov
mov
cmp
outsl
imul
in
iret
inc
jne
shll
ss
push
mov
das
out
es
popa
inc
pop
push
arpl
mov
ds
imul
fsubr
pop
cmp
ds
ja
mov
in
push
jae
out
mov
scas
dec
cmp
jg
cmc
and
cmp
pop
push
aad
mov
and
inc
cmp
push
cli
fcomp
sub
test
lods
cmp
mov
repnz
cmp
mov
mov
inc
mov
sbbl
xor
or
fldcw
cmp
and
test
movsl
lahf
pushf
cmp
cmpsl
mov
sub
ficoms
cmp
jo
in
pop
sahf
idivl
fldenv
mov
fdivrs
mov
fucomi
xchg
mov
dec
cmp
insb
ljmp
adc
jnp
jne
nop
cmp
in
outsb
aaa
jno
int
mov
sahf
xchg
cmp
mov
outsb
xor
mov
outsl
popl
or
xchg
bound
shrb
scas
inc
jb
packuswb
mov
rolb
cmp
xchg
cmp
dec
add
imul
xchg
stos
bound
int3
scas
ljmp
daa
cmp
or
xchg
cld
in
cmp
shrl
push
and
adc
push
sbb
inc
aaa
or
sahf
pop
gs
and
jecxz
mov
icebp
dec
test
lock
dec
sub
clc
std
ds
mov
and
jo
mov
inc
xor
lods
test
insl
and
pop
sbb
test
xchg
aas
test
enter
cmp
mov
add
roll
repnz
jne
or
cltd
mov
cmp
or
mov
pushf
and
pop
fcompl
lret
js
adc
xchg
out
jne
inc
sarl
mov
insl
xchg
fimuls
cs
lods
jp
pop
adc
sbb
les
inc
adc
inc
ffreep
aam
pop
inc
cmp
hlt
ja
cmp
ret
es
out
xlat
roll
xor
mov
cmp
jns
sahf
cmp
push
arpl
fcomp
add
cmp
sbb
cmp
fisttps
or
add
sbb
fstpt
sbb
lods
inc
outsb
add
ret
mov
push
cmpb
push
adcl
and
stos
pminub
pusha
sahf
mov
push
ljmp
sti
cld
sub
cmp
es
out
mov
fldcw
pop
imul
cbtw
jp
xorl
ret
push
pop
pusha
mov
sub
iret
cmp
cld
pop
lret
stos
jle
inc
pop
repz
cmp
insl
jne
std
cmp
mov
lea
or
xchg
lret
leave
fstpt
push
or
pop
sub
add
popa
dec
sbb
add
popf
aas
xor
mov
cmp
sub
add
int
cmp
mov
in
cmp
int3
add
jl
push
fucomip
adc
cmp
inc
lcall
sbb
dec
ljmp
cmp
cmc
aam
stc
pop
or
cmp
add
pusha
cs
cmp
push
dec
mov
jmp
arpl
ja
cmp
scas
out
dec
cmp
xchg
lods
mov
inc
xchg
ficoml
into
popa
rorl
mov
push
rorb
pop
lret
xor
subb
cmp
ffree
jae
mov
stc
fwait
or
leave
in
es
mov
mov
mov
enter
push
cmp
sub
and
lods
fldl
lods
out
jne
push
cmp
insb
push
jnp
test
cwtl
hlt
or
xor
fildll
sbb
iret
popf
cmp
pop
lcall
xor
nop
pop
and
push
daa
mov
lods
xor
loopne
cld
shrl
addb
sbb
dec
jle
cltd
pop
mov
cmp
xor
loope
cld
testb
cmp
mov
cmpsb
inc
subl
sub
call
inc
movsb
in
cltd
sbb
icebp
es
stc
cmp
add
jb
aad
cmp
add
jl
sarb
rolb
and
xchg
rcl
xchg
cmp
or
lock
inc
push
movsb
icebp
popf
pusha
and
mov
in
insl
cmp
leave
ret
mov
cmp
mov
fabs
in
and
shlb
jmp
popl
push
data16
inc
or
and
fsubrl
jecxz
mov
and
dec
mov
push
push
inc
mov
adc
jo
sbb
cmp
and
fs
sub
repnz
lea
xor
hlt
mov
cmp
adc
int
mov
sub
in
cmp
cli
push
test
gs
fidivrs
insl
adc
mov
call
cmp
aaa
adc
xor
repnz
movsl
outsl
das
xlat
sbb
mov
lret
mov
push
loopne
shrb
into
fdivrs
push
cmp
lods
mov
cmpsb
fxch
sbb
imul
jle
lcall
dec
int
repz
xlat
cmp
rclb
inc
mov
mov
or
pop
push
cmp
pop
mov
xor
pop
lea
pop
addr16
push
mov
jne
mov
shlb
pop
xor
xor
in
out
popa
cmp
mov
cld
or
add
imul
aam
dec
iret
jb
push
cmp
push
call
cmp
fistpll
idiv
xacquire
loopne
jne
lods
std
sub
pop
cmp
mov
leave
push
push
lahf
jo
dec
inc
in
repnz
mov
mov
sbb
pop
inc
sub
imul
aad
test
xor
outsl
cmp
test
movsl
pusha
dec
outsl
aad
add
mov
insb
imul
int3
inc
lret
xor
addb
pop
dec
or
ja
lret
cmp
repz
and
loop
xor
test
push
and
pop
dec
int3
cmp
imulb
cmp
movsl
cwtl
fidivl
in
cmp
and
and
sbb
and
mov
sti
adc
pushf
sbb
jge
fisubs
sub
pop
cmp
stc
push
dec
add
cmp
jg
pop
dec
pop
pop
cmp
aam
popa
cmp
gs
jo
out
data16
cmpsl
lods
test
add
les
stos
adc
add
mov
sbb
loopne
movsl
in
cmp
lock
fstl
int3
sbb
xor
daa
ja
jne
sahf
ljmp
arpl
adc
add
push
outsl
popa
jecxz
xchg
popf
out
bound
inc
in
cltd
jns
insb
rolb
xor
sarl
ret
popf
lret
hlt
sbb
arpl
mov
daa
cmp
inc
push
pop
dec
insb
mov
dec
je
stos
mov
dec
mov
mov
cmp
jns
loope
pushf
cmp
mov
xchg
cmp
xchg
jg
fadds
push
wbinvd
cmc
cmp
sub
outsl
dec
mov
test
pop
xchg
inc
xchg
inc
mov
add
fwait
stos
mov
outsb
dec
add
push
or
cmpl
push
xchg
push
mov
jno
fnstsw
xor
mov
inc
xchg
lret
cmp
outsb
mov
loop
pop
test
repz
add
cmp
sbb
imul
mov
or
sahf
lret
mov
pop
mov
cmp
lret
xchg
addb
movsl
cmp
lret
xor
mov
loope
xchg
and
movsb
aaa
sbb
push
cmp
scas
sbb
cmp
aaa
push
mov
dec
jb
divb
ficoms
xor
cmp
mov
in
daa
loopne
out
pop
test
mov
ljmp
inc
xchg
mov
jecxz
sbb
insb
stos
scas
and
mov
rclb
cmc
movsl
cmp
in
inc
ja
push
xchg
mov
pop
sub
push
jge
or
xor
ds
clc
cmpsl
cmp
out
shlb
xor
pop
cmp
cmp
add
push
out
cmp
jge
stos
mov
inc
and
ret
sar
cli
pop
pop
test
mov
mov
sub
mov
outsb
shrl
out
sbb
cmp
jmp
ret
add
stos
outsb
or
insb
pop
inc
test
arpl
jns
push
in
cmp
inc
add
lret
filds
cmp
jns
push
mov
sbb
jp
mov
push
mov
popa
inc
add
sub
pop
jo
scas
pop
ljmp
rorl
cmp
aas
sub
int3
fs
mov
stc
cmpsb
jmp
fwait
xor
xchg
lods
sub
lea
xlat
cmpsb
cmp
insl
mov
negb
inc
insb
pop
scas
sub
cmp
sub
jl
push
or
or
mov
sahf
xchg
xchg
pusha
out
cmp
pop
mov
mov
lods
aam
push
out
pop
cmp
in
lret
cmc
pop
push
imul
loopne
ret
insb
mov
int3
xchg
enter
mov
xor
dec
mov
jg
mov
sub
pop
or
addb
cmp
pop
mov
cmp
into
or
insb
pop
and
mov
push
subb
cmpsl
sti
push
fimuls
add
mov
shl
pop
insl
dec
jbe
xchg
xchg
cmp
jae
je
bound
add
lret
nop
shrb
cmp
call
lods
inc
ret
in
or
mov
fnstenv
mov
xchg
ja
aas
push
and
cmc
mov
aam
aad
movsl
mov
push
loop
dec
cmp
push
inc
adc
xor
push
ljmp
mov
xor
outsb
cmp
lea
out
sbb
jecxz
in
pop
xor
ljmp
cmp
add
lahf
aas
cmpsb
add
sarl
lds
mov
icebp
jno
shlb
mov
sub
aaa
cmp
dec
cwtl
jle
out
jae
push
cmp
or
sti
aam
scas
rcr
cmp
jae
cmp
out
jnp,pt
jnp
call
xchg
cmp
xchg
movsb
popa
xlat
insb
cmp
fcomps
lret
cmp
push
and
cmp
dec
popa
cltd
cmp
adc
loop
cmp
xor
cmp
imul
cmp
pop
cmpsl
dec
cmp
pop
xor
jp
push
imul
mov
sbb
xorb
sbb
xor
in
in
push
mov
ja
lock
jb
gs
cmp
int
inc
adc
nop
pushf
cwtl
cmp
sbb
xor
jl
jp
std
cmc
cld
cmp
lods
xchg
cmp
insb
stc
pop
mov
cmp
dec
loop
lcall
sbb
xor
sarb
push
lds
xor
pop
add
outsl
mov
jb
xchg
and
mov
xor
sub
pusha
repnz
test
enter
in
jmp
add
mov
cmp
inc
pop
mov
fldenv
rdmsr
push
cmp
push
es
adc
out
pop
add
movsb
jl
in
in
and
pop
dec
dec
jo
xor
addr16
cli
mov
ja
mov
mov
mov
stos
cmp
push
push
xlat
cmp
fwait
pop
or
mov
fs
push
gs
movsl
adc
lret
jp
mov
or
aad
icebp
fisubrl
mov
aam
notl
ficoms
out
stos
dec
jmp
aas
cmpsl
or
xor
dec
nop
test
xchg
je
push
out
cmp
and
popa
xchg
cmp
mov
mov
cmp
add
inc
jb
fimull
inc
loopne
mov
jmp
mov
inc
cmp
je
enter
lret
pop
cmp
mov
lahf
imul
mov
aam
fs
fldl
cmc
fwait
pushf
jmp
loop
test
scas
jmp
movbe
push
sbb
mov
roll
cmc
outsb
mov
or
loop
ret
cmp
or
inc
arpl
fnclex
jp
repz
jmp
call
pop
mov
js
xlat
cmp
fidivl
and
dec
add
mov
repz
cld
xchg
xor
cmp
inc
test
jecxz
push
cmp
popf
pop
inc
hlt
mov
pop
inc
mov
cmp
mov
push
and
lods
pop
pop
and
sub
lret
adcb
mov
jae
ret
jle
ds
jnp
loopne
scas
movsl
cmp
adc
pop
jns
and
aas
or
jbe
mov
out
mov
cmc
sbb
jb
push
dec
data16
inc
dec
js
cmp
and
pop
shl
mov
je
cmc
aam
cmp
repnz
sarl
push
hlt
mov
and
in
cmp
aam
push
adc
push
sbb
dec
sub
out
cmp
xchg
cmc
fwait
lods
jecxz
pop
pusha
imul
imul
jmp
cmp
pop
int
mov
cli
test
ficoml
sti
mov
iret
es
mov
adc
sarb
or
cmp
lods
ret
xchg
sbb
xor
and
cmp
test
cmp
cmpsl
clc
pop
icebp
inc
mov
dec
or
dec
adc
fbld
arpl
dec
into
inc
sar
jp
jp
or
cmovbe
dec
je
cmp
and
mov
mov
xor
jne
fldl
outsb
mov
test
dec
cmpsl
test
jmp
out
pop
loope
jecxz
mov
add
and
imul
lahf
movsb
or
push
or
hlt
mov
and
cmp
clc
out
inc
and
xor
mov
arpl
cmp
push
push
loope
sbb
in
cmp
adc
cmp
das
js
inc
sbb
add
push
jg
orl
push
and
inc
testl
push
movsb
xor
pop
sub
sbb
push
outsb
dec
cmp
dec
cmpsl
and
mov
adc
adc
ljmp
lea
push
aad
arpl
or
mov
leave
shl
xchg
cmp
test
add
jo
pop
push
lahf
scas
and
dec
je
out
xor
add
push
cmpsb
jbe
xchg
iret
ljmp
sarb
adc
jne
imul
cmp
push
xchg
cmp
mov
push
stos
outsb
adc
push
cmpsb
hlt
sub
test
outsl
pop
adc
jle
add
jge
cmp
lahf
subb
scas
leave
or
hlt
push
pop
lret
hlt
cmp
fwait
push
cmp
add
cmp
adc
sub
jb
inc
cmp
fwait
and
push
inc
xchg
mov
lods
sarl
fnstsw
xchg
or
jp
cmp
inc
dec
mov
lods
or
outsl
popa
out
mov
dec
mov
inc
das
or
cmp
and
mov
ljmp
sub
in
cmp
and
cmp
std
in
aam
or
and
pop
daa
mov
push
jbe
cmp
jg
cltd
cld
push
cmpsb
stos
push
xorl
push
cmp
cmp
iret
decb
cmp
inc
mov
mov
inc
aaa
test
jno
and
add
sub
lds
push
mov
jb
insb
mov
fwait
std
cmpsl
sub
and
outsb
mov
repnz
sub
mov
push
daa
cmp
test
mov
pop
adc
sarl
decl
dec
jp
and
repnz
cmp
in
int3
scas
cli
jo
add
xlat
repz
fs
sub
xchg
mov
lret
out
cmp
pop
lods
adc
popf
mov
ja
cmp
aaa
cmp
fidivrl
cld
sub
lock
cmp
cmp
jg
or
subb
fdivs
mov
cmp
push
or
call
mov
pop
add
add
push
dec
fisubrs
insl
lods
lods
cmp
jns
xchg
jl
loop
cmp
lcall
xor
xchg
xor
add
cmc
push
das
std
adc
cmp
outsl
mov
cltd
and
cmp
dec
mov
add
lods
mov
mov
xchg
insl
jle
loope
movsl
dec
cmp
pusha
mov
addr16
mov
aaa
lock
imul
cmp
shr
loop
sbb
into
push
or
jmp
push
sarb
sbb
cmp
lret
cmp
in
sub
jb
cmp
dec
mov
shrb
mov
test
sub
das
jmp
cmp
sarl
jl
aad
xchg
mov
iret
or
fwait
lods
sbb
in
out
cmp
add
push
insl
stos
addps
sub
mov
jae
xor
pushf
ds
std
xor
sbb
jo
push
or
hlt
mov
insl
and
mov
pushf
mov
adc
fnstcw
repz
cmp
jae
insl
cmp
mov
pop
adc
xor
push
adc
cmp
add
and
add
test
cld
fdivs
aam
push
jg
dec
lret
mov
xlat
test
arpl
sbb
and
dec
imul
lcall
js
dec
inc
dec
add
push
jnp
push
ljmp
mov
and
imul
mov
add
xchg
popa
das
pop
dec
cmp
and
loop
sub
leave
mov
cmp
jae
mov
imul
sub
inc
es
lcall
outsl
addr16
sarw
sub
fstps
mov
loop
inc
jle
incl
mov
inc
xchg
xorl
faddl
mov
inc
stos
add
insl
addr16
and
sahf
xor
cmp
cmp
or
clc
and
xlat
out
cmp
rclb
push
pop
or
xor
push
dec
scas
sub
std
cli
ss
mov
mov
cli
or
jp
repnz
sub
cwtl
add
pusha
int
xor
jge
push
pop
cmp
mov
fcoml
push
loopne
loop
adc
out
mov
cmp
dec
popf
int3
push
lock
mov
ljmp
cmp
mov
not
call
int
cmpsw
xchg
adc
out
jp
cmp
gs
aad
cmp
mov
xor
jo
test
inc
cmp
nop
cmp
inc
xor
out
mov
cmp
mov
mov
getsec
pushf
push
jae
mov
repz
es
mov
lock
push
int
mov
sub
iret
out
cmp
and
add
gs
xlat
test
fwait
jge
cmp
mov
mov
and
cmpsb
cmp
push
rcll
jno
cmp
mov
cld
cmp
xchg
jbe
mov
pop
clc
aam
add
mov
cmpsb
and
cmp
adc
cli
idivl
lods
stos
mov
sub
ss
lahf
pop
mov
idivl
inc
sbbb
adc
lods
cmp
jmp
inc
mov
imulb
sbb
mov
dec
lret
xor
bound
lcall
cmp
loope
mov
fwait
or
mov
sub
dec
cmp
cltd
cmpsb
aas
pop
into
xchg
push
enter
cmp
xchg
adc
movsl
std
out
cmp
lret
mov
popa
pop
test
xorb
cmp
fnstcw
pop
mov
mov
xchg
add
mov
cmp
std
dec
and
addr16
mov
add
rcrl
inc
and
in
out
xchg
cmp
push
std
or
gs
testb
cmc
and
add
in
mov
mov
push
jns
out
add
in
addr16
fs
mov
mov
sti
pop
pop
xchg
push
cs
rcrb
mov
pusha
adc
cli
fmulp
bound
adc
rcrl
push
scas
jo
nop
int3
pminub
mov
xchg
add
aam
or
shll
adc
fnsave
jno
les
cmp
cmpl
ret
in
loope
lods
imul
cwtl
jnp
subb
dec
cmpb
cmp
push
sti
es
ljmp
add
fldl
add
loop
scas
nop
push
sub
lret
push
xor
cmp
loop
jb
xchg
icebp
cmp
pushf
xlat
push
adc
cmp
cmc
xor
fiadds
push
aad
lods
outsb
push
sti
addr16
test
ds
cmp
push
cltd
outsb
cmp
shll
addl
push
jnp
popa
lahf
xchg
sub
cmp
sbb
push
and
cmp
pop
push
cmp
sbb
mov
inc
addb
ja
out
fs
mov
cmp
imul
push
stos
test
stc
test
movsl
mov
lods
mov
int
sub
call
int3
add
je
xchg
mov
repnz
popf
mov
adc
sub
cmp
cmc
imul
cmp
stos
lods
xchg
lods
mov
dec
xchg
cmp
pop
cmp
clc
and
cmp
xchg
mov
cmp
push
push
fidivrs
testl
lock
mov
and
cmp
sub
shll
sub
dec
pop
adcl
or
int
adc
out
data16
or
and
cmp
xchg
insb
sub
add
pop
and
xchg
cmp
pop
std
lea
repnz
jbe
dec
mov
aaa
xor
or
cs
cli
nop
in
sbb
push
sarl
stc
pop
lds
aam
dec
add
xchg
cmp
sbb
cmp
imul
dec
jb
sub
mov
ret
hlt
lret
mov
arpl
not
popa
add
aam
adc
stc
adc
sbbl
sar
leave
jle
cmp
and
cmp
repz
push
sbb
lret
cmp
or
mov
subl
es
inc
int3
insb
inc
cmp
repz
icebp
cmp
add
out
and
mov
cmp
pop
arpl
push
cmp
mov
push
or
imul
pop
cmp
arpl
fildl
mov
test
mov
mov
jb
push
add
or
arpl
fwait
jmp
adc
ret
test
stos
add
lea
sub
je
push
cmp
daa
lret
cmp
or
cwtl
js
lea
sub
and
adc
jae
add
inc
push
in
mov
mov
js
iret
add
mov
jbe
xchg
xchg
sub
fdivs
es
and
cmp
jnp
jo
sub
les
and
or
cmp
fld1
frstor
jne
cmp
scas
das
push
dec
aaa
stos
scas
dec
cmp
cmp
jbe
mov
fildll
out
or
add
jg
arpl
insb
inc
iret
cmp
cmpsb
leave
jb
xor
push
adc
ja
jl
xor
xor
add
xchg
adc
test
xlat
movsl
xchg
cld
fiadds
cmp
fisubl
in
nop
push
insl
adc
adc
cmp
in
push
sub
shll
jmp
xor
stc
pop
pop
lds
mov
js
adc
jge
cmp
movsb
in
fsubr
aad
xor
shl
imul
cmp
jbe
pop
or
neg
or
inc
sti
push
xor
adc
test
or
fbld
fnsave
sbb
xor
xchg
mov
bound
mov
mov
addl
jmp
mov
mov
ds
sarb
sbb
jne
fidivl
jo
fldcw
jnp
or
lods
cmp
je
adc
pop
xchg
cld
cmp
sahf
inc
push
push
out
cmp
rcrb
daa
push
pop
aad
shlb
jns
inc
xchg
imul
push
mov
paddq
dec
ficoml
push
ret
addr16
push
add
mov
mov
xor
pop
mov
mov
rorl
inc
sub
imul
out
xor
arpl
mov
cmp
xchg
xchg
repz
sbbb
mov
lock
lret
pop
cmp
mov
pop
sbb
xchg
sarl
stos
ja
out
stos
jo
insl
mov
jp
push
pop
leave
cs
cmp
xchg
lcall
lret
xchg
sub
cmp
push
add
shlb
push
inc
nop
jb
mov
inc
mov
out
bound
and
and
fdiv
ja
cmpsl
ss
xor
std
lret
cmp
nop
imulb
dec
jl
mov
xchg
jge
movsb
xchg
cmp
adc
std
mov
test
pushf
test
jmp
aad
sbb
push
ret
add
cmp
popf
aam
adc
cwtl
cmp
rcrb
cmp
das
pop
mov
insb
mov
mov
mov
insl
xchg
mov
fstps
scas
add
cmpl
test
ds
cmp
mov
test
add
and
cmp
mov
lods
rol
hlt
mov
sarb
neg
shrl
sub
out
jecxz
push
sub
mov
in
pop
xchg
jg
lock
in
jne
out
jmp
fdivl
fldcw
mov
fdivrs
xchg
sbb
sbb
push
and
inc
cltd
aad
out
in
nop
pop
ficoms
push
pop
cmp
imul
xchg
adc
pop
das
cmp
mov
sysenter
mov
fmul
int
es
cmp
shl
jbe
popa
lods
sarb
cmp
mov
mov
jae
mov
push
insl
cmp
loop
inc
push
adc
invd
repz
xchg
cmp
int
mov
lcall
add
ret
jo
stos
lea
aad
cmp
pop
add
and
pop
xchg
fsubl
cmp
dec
lods
mov
pop
adc
cmp
mov
jns
xor
cmp
imul
sub
call
jae
mov
outsl
cmp
jb
or
xchg
inc
fisttpl
ja
repz
xchg
scas
xchg
pop
clc
mov
mov
cmp
mov
fucom
mov
jns
sub
jge
sbb
sbb
hlt
cmp
push
mov
clc
pop
or
cltd
mov
push
bsf
das
or
adc
lret
xlat
aad
int3
data16
cmpsl
add
cli
xor
xor
push
aas
push
int3
mov
lock
mov
push
inc
loop
add
sub
pop
jbe
add
popa
mov
movsb
cli
pop
jae
or
insl
jb
cmp
cmp
lret
sub
nop
cmp
adc
jmp
aam
pop
loope
sub
outsb
xchg
rorl
jno
cmp
cmp
mov
das
cmp
xchg
ljmp
fdivr
stc
or
int
mov
shl
fnsave
imul
xchg
and
xchg
repnz
mov
sbb
cmp
and
in
andb
test
sbb
lcall
enter
push
mov
jnp
cmp
add
mov
imul
inc
stc
cmp
out
enter
cmpb
lds
idivb
mov
cltd
enter
stos
ret
bound
cs
adc
jecxz
lret
xor
mov
and
pop
xchg
cmp
jae
add
fisubl
pop
leave
pop
sahf
sub
ljmp
xor
idivl
lahf
into
lods
xor
ljmp
push
jmp
mov
inc
mov
addl
cmp
jae
shr
shlb
cltd
loop
mov
xor
lods
push
aam
fwait
pop
test
cmp
nop
push
push
icebp
rol
cmpsb
cmp
mov
xchg
cmp
mov
pop
add
fcompl
and
pop
add
fsubl
add
pop
scas
cmp
push
rcll
outsb
fs
and
push
mulb
sbbb
out
sti
and
daa
adc
mov
in
loope
adc
cmp
sahf
nop
sbb
cltd
cli
aad
xor
fcmovne
and
mov
pop
test
sbb
inc
adc
roll
lods
mov
sbb
sbb
ss
adc
shlb
cmp
xchg
adc
and
inc
aad
nop
mov
push
xchg
into
cmp
movsb
inc
mov
bound
adc
int
mov
cmp
mov
fiaddl
mov
fucomip
and
pop
inc
ret
pushf
mov
jmp
icebp
movsb
cmp
sub
fistpll
mov
inc
outsl
cld
popf
xchg
and
loop
cmp
lock
aad
or
pusha
cltd
adc
dec
dec
test
pushf
roll
pop
add
mov
daa
push
cmp
mov
lahf
mov
in
adc
mov
insb
es
mov
jb
push
cmp
int
jg
jge
xchg
aas
or
fildll
shl
test
dec
mov
sahf
mov
adc
inc
out
popf
cmc
mov
pushf
ret
dec
iret
daa
aas
out
add
and
movl
pop
fwait
xor
mov
lock
cmp
sub
jl
fnstenv
enter
cli
adc
movl
push
cmp
adc
out
inc
cmp
aas
andl
jmp
xor
es
pop
fsubrl
das
outsb
cmc
ret
int
dec
sbb
lock
cmp
xor
cmp
insb
std
mov
lods
imul
cmp
outsb
gs
inc
mov
pop
push
aaa
add
mov
pop
jle
dec
fsts
cmp
in
jae
ja
xchg
cmp
push
stos
lea
push
xor
inc
add
mov
int
cmp
and
dec
repnz
pushf
cmp
leave
and
sub
push
pop
ss
fdivr
mov
movsl
rolb
dec
push
data16
inc
idivl
dec
rorl
mov
icebp
cmp
fcmovnbe
cmp
inc
repnz
shrb
sub
mov
lahf
sbb
lea
loopne
cmp
dec
pop
cmp
mov
outsb
cmp
xchg
int3
sahf
xor
js
jecxz
cmp
gs
jecxz
adc
jmp
fstl
or
fs
mov
cmp
xorl
cwtl
jb
cmp
addr16
push
push
mov
mov
jge
cmp
arpl
sarl
mov
dec
jp
sahf
lcall
rorb
inc
mov
dec
mov
cld
arpl
jle
std
and
call
mov
cmp
imul
dec
in
jb
lcall
cmp
inc
popa
test
cmp
insb
fdivr
or
jbe
add
lods
or
push
jp
mov
xor
sbb
pop
dec
lock
cmp
lcall
ljmp
push
mov
lret
push
ffree
cmp
pop
mov
dec
stos
hlt
repz
cmp
cmp
jge
mov
imul
ljmp
cmp
pop
popf
leave
adc
jb
mov
mov
int
repnz
ja
mov
es
xchg
sahf
dec
gs
cmp
pop
out
stos
daa
push
pop
xor
dec
insb
xor
sbb
xlat
inc
adc
sub
cli
and
iret
mov
add
adc
insl
es
xchg
mov
icebp
mov
mov
bts
aas
cmp
jnp
mov
cmp
mov
sub
out
cld
cmp
test
mov
cmp
push
adc
cmp
shl
and
inc
cmp
test
and
pop
adc
xchg
xchg
dec
sahf
mov
jnp
imul
mov
into
insb
std
push
push
aad
push
test
ss
push
in
outsb
cmp
mov
les
push
push
cmp
fisttpl
or
test
xchg
int3
sbb
adc
mov
cmp
mov
clc
xor
movsl
and
dec
cmp
xchg
pop
lds
inc
adc
xor
push
stc
cltd
call
cmp
inc
out
es
daa
xor
out
scas
bound
and
icebp
mov
cwtl
xlat
push
sub
ja
cmp
std
fimull
jp
cmp
mov
mov
or
cmp
inc
mov
cmp
jnp
push
jecxz
mov
hlt
mov
ds
cmp
xchg
repnz
shl
cmp
add
mull
and
mov
pop
mov
xor
xchg
inc
cmp
imul
js
sti
mov
cmp
adc
out
mov
pop
sbb
orl
scas
sub
imul
mov
push
jmp
inc
call
mov
jo
xchg
outsb
sti
sbb
push
shlb
ljmp
pushf
inc
nop
jne
stc
adc
adc
daa
mov
in
cmp
adc
push
cmp
psubw
rorl
cmp
mov
sahf
mov
push
fmuls
and
add
or
push
mov
mov
dec
pop
push
mov
push
and
pop
cmp
push
incb
sti
jg
xchg
cmp
inc
push
cmp
jle
jno
repnz
xchg
stos
popa
mov
sti
dec
mov
mov
test
into
scas
sub
mov
clc
out
out
add
mov
cmp
mov
in
lret
daa
dec
sbb
in
loopne
mov
sarb
inc
ja
outsb
adc
push
insb
divb
dec
jno
adc
jnp
insl
ret
sub
and
stos
sub
jns
pop
rolb
push
push
cmp
fsubs
cmp
test
xlat
les
or
sub
gs
jns
pushf
bound
mov
std
jno
cmp
pop
aas
jne
lcall
loop
push
f2xm1
mov
mov
cmp
ret
cmp
mov
aaa
add
pop
cli
sti
xor
std
cmp
push
dec
fisubrs
add
cmp
das
insb
mov
sbb
cmp
jbe
mov
inc
mov
call
jmp
fxtract
std
xchg
mov
loopne
test
outsb
cmp
xchg
popa
cmc
xchg
loope
lods
sub
adc
pop
out
pushf
mov
cmp
pop
cmp
scas
mov
mov
cwtl
xchg
cmc
or
daa
aaa
cmp
in
xchg
insl
addr16
leave
repz
sbb
sti
enter
xor
inc
nop
mov
rolb
pop
inc
sub
test
pop
movsl
call
fidivrs
je
jge
or
mov
int
mov
lret
and
outsl
cmp
fldt
or
cmp
ljmp
sub
inc
aam
mov
inc
add
sbbl
fwait
pop
iret
bound
push
inc
fisttpll
pop
add
xchg
xchg
xchg
cmp
aas
loopne
cli
mull
xor
or
pop
in
shl
add
imul
test
outsl
les
dec
push
ds
xchg
inc
and
cmp
es
add
mov
sti
push
cmp
loopne
outsl
sbb
popf
fcoml
inc
xor
fwait
scas
dec
je,pt
push
pusha
sub
cmp
and
inc
cmp
adc
cmp
adc
aad
lahf
cmp
lock
mov
add
ds
mov
lods
push
stc
pop
imul
popl
repz
rol
fwait
xor
andb
push
idivl
and
adcb
adc
bound
push
cs
loopne
add
in
movsl
pusha
jo
mov
cmp
mov
stos
lret
inc
and
mov
popa
sbb
cmpsb
dec
cmp
in
inc
mov
rolb
add
pop
cmpsl
hlt
cmp
pushf
push
fs
insl
xor
movsl
sub
and
push
push
mov
aad
jb
lret
xchg
cmp
aaa
loop
icebp
xor
lock
mov
popf
push
push
stos
fldl
xchg
pop
cmp
out
or
test
cmp
shlb
cmp
mov
pop
fisttpl
into
adc
leave
pop
shrl
mov
push
sbb
sahf
mov
ds
mov
cli
xor
cmp
daa
push
cmp
dec
push
inc
jb
xor
dec
jne
mov
inc
mov
mov
cmp
imul
ds
cmp
mov
cmp
mov
xchg
scas
inc
data16
xchg
jnp
enter
loope
fidivl
cmp
dec
pushf
xor
cmp
lock
add
mov
jl
mov
xchg
and
bound
lcall
push
xchg
insl
mov
idivl
or
fdivp
add
pop
push
ljmp
xchg
sbb
popf
push
mov
cmp
jns
mov
mov
xchg
or
bound
mov
and
gs
xchg
cltd
icebp
push
mov
xor
addl
cli
dec
push
and
sbb
inc
fldenv
fs
out
mov
cmp
mov
mov
mov
inc
xor
adc
jl
jmp
rcl
cmp
cs
and
mov
cmp
mov
orl
dec
cmpsb
mov
leave
cli
aaa
or
lods
sbb
mov
stos
jae
imul
sub
jle
pop
cmpsb
xlat
pop
cmp
clc
jg
sbb
cmp
imul
push
and
fildll
iret
pop
cmp
jmp
push
cs
pusha
mul
imul
shll
push
sub
push
hlt
lods
jp
imul
mov
cmpsl
cmp
jecxz
cmp
clc
fsts
addr16
lods
call
mov
sarb
cmp
shlb
mov
xor
out
ror
pop
mov
das
mov
addr16
gs
test
aad
add
lret
imul
leave
jae
cmpsl
mov
fdivrp
cmp
icebp
cmp
dec
aam
cmpsl
inc
jp
pop
cmp
xchg
mov
mov
out
cmp
rclb
xor
test
fucomip
cmp
cld
pop
fbld
fmulp
sbb
roll
and
mov
sub
add
loope
mov
xor
mov
test
pop
add
or
cmp
les
stc
dec
mov
xor
lds
fwait
inc
aad
xlat
fs
cmp
in
in
inc
pop
inc
push
sbb
out
lea
sub
mov
mov
push
cmp
jae
stc
and
cmp
add
cmp
out
in
inc
je
jne
xlat
xchg
push
dec
ret
sub
mov
inc
sbb
xchg
and
mov
test
cmp
ds
cmp
aad
hlt
xor
arpl
xchg
cmp
push
cmp
add
loopne
cmp
lcall
xchg
mov
aas
pop
cmp
sub
jl
xor
ss
dec
mov
daa
repnz
cmp
pop
sub
adc
call
or
cmp
enter
sbb
hlt
xchg
adc
inc
pop
movsl
mov
jge
insl
and
arpl
out
dec
out
jecxz
data16
ljmp
jo
sub
cmp
sub
mov
mov
imul
gs
cmp
adc
movsb
and
sbb
pop
inc
cmpsb
mov
adc
push
pop
fdecstp
repnz
xor
inc
adc
xor
pop
sbb
cmp
arpl
dec
lods
fcmovbe
cmp
data16
push
sbb
divb
jg
mov
ret
fwait
sbb
mov
loope
adc
add
inc
push
pop
addr16
cmp
gs
mov
cmp
adcl
ret
dec
cmp
inc
xchg
mov
dec
jmp
jmp
sti
arpl
add
add
xchg
lods
lods
gs
mov
adc
push
enter
lahf
repz
lcall
adc
lret
sarb
adc
mov
movsl
loope
and
das
test
pusha
inc
in
mov
push
xor
cmp
pop
mov
cmp
pop
adc
cmp
roll
popf
push
jp
pop
or
add
sarl
cmp
sub
lahf
lods
jg
inc
cwtl
adc
sahf
push
jbe
js
fistpll
ss
sub
mov
sbb
xor
insl
pop
push
gs
add
in
cmp
cs
sahf
icebp
pop
xchg
cmp
adc
sbb
push
adcb
cmp
or
scas
leave
cmp
pop
cs
mov
jnp
ljmp
mov
fdiv
loopne
or
pop
pop
or
fldt
xor
fstpt
or
xor
sbb
and
add
sub
cmp
xchg
es
rclb
and
mov
mov
sti
inc
mov
inc
outsb
xchg
in
cmp
rorb
insb
in
dec
std
adc
cmp
cmp
xorb
out
mov
scas
pop
sti
mov
xor
test
cmp
das
fsubl
cmp
cli
into
xchg
adc
dec
mov
in
hlt
cmp
shll
movsl
lcall
arpl
adc
or
cmp
sub
mov
cmp
stos
rcrl
dec
dec
pop
push
int
cmp
int3
loopne
imul
mov
pop
adc
popf
sbb
mov
shrb
scas
ss
clc
cmp
pavgw
mov
mov
cmp
sbb
xlat
hlt
aad
mov
icebp
cmp
add
int
testb
ret
cmp
dec
fcoml
into
aaa
inc
sub
cmc
dec
ret
fidivs
shlb
cmp
sub
mov
xorb
pop
mov
cmp
insb
pusha
lcall
mov
xchg
cmp
lods
repnz
lcall
and
inc
cmp
push
fnstcw
into
mov
push
adc
movsl
cmp
outsl
movsb
inc
fs
in
cmp
imul
cli
neg
call
cmp
or
add
pop
mov
in
das
adc
divl
popa
imul
fs
cmp
push
outsl
loope
aam
imul
negb
lods
lahf
and
push
cmpsl
sub
pop
pop
and
mov
mov
icebp
daa
or
call
add
xchg
jp
pop
aad
aas
xchg
xor
insl
mov
repnz
xorb
daa
cmp
jp
pop
pusha
or
lea
mov
xrelease
adc
lods
fs
push
test
jl
push
xchg
lods
mov
les
ss
fstl
or
test
pop
lcall
jne
dec
loop
cmp
mov
dec
cmp
dec
cs
mov
insl
mov
mov
in
add
cmp
xor
mov
xor
mov
bound
adc
aad
mov
cmp
mov
incl
addr16
ds
push
cmp
pop
mov
inc
xor
addl
pop
push
mov
pop
fistl
pop
dec
and
imul
sub
insb
pop
jns
sbb
mov
push
adc
xor
scas
sub
mov
cmp
push
test
test
lahf
lret
sub
sub
sti
xchg
cmp
out
test
xor
cmp
sbb
iret
insb
dec
mov
jl
jnp
jb
cmp
pop
push
fidivl
scas
xchg
roll
out
and
and
inc
xchg
push
out
cmp
repz
lods
outsb
mov
int3
and
pop
mov
xchg
sarl
sub
nop
in
gs
adc
sbb
push
jecxz
cmp
cltd
dec
movsl
xchg
aas
xor
cmp
pop
es
mov
out
mov
mov
jmp
clc
sub
ret
cwtl
xchg
test
sub
repnz
jnp
adc
mov
in
cmpl
lods
inc
aam
cmp
aaa
fnstenv
pushf
push
inc
cltd
stos
mov
jnp
dec
adc
cmp
sbb
cmp
hlt
out
insb
inc
imul
aam
mov
shll
icebp
mov
adc
push
out
mov
movsb
dec
int3
jb
cmp
mov
jno
cmp
inc
or
ljmp
mov
cmp
mov
addr16
sub
fidivrl
xchg
cmp
je
int3
adc
or
push
mov
sbb
outsb
jle
pop
mov
movsl
sti
sahf
aam
cmp
cmp
outsl
les
in
pop
cmp
mov
iret
shrl
push
ljmp
adc
jg
aaa
pop
popf
push
xchg
negl
sbb
jle
movsb
sub
mov
je
push
cmp
sbb
bound
sbb
dec
repz
fisubrl
cmp
imul
nop
adc
lret
cmp
cmp
loop
inc
dec
shll
dec
in
push
push
add
push
lds
cmpsl
mov
in
loop
mov
es
test
cwtl
popl
pop
xor
sbb
shrl
fucom
fs
into
mov
in
imulb
arpl
lds
test
ret
xor
push
ficoms
add
mov
repnz
mov
mov
cmp
sub
fadds
cmp
andb
or
std
mov
sahf
mov
pop
ljmp
xor
fwait
cmp
data16
mov
out
adc
cmp
mov
sahf
inc
xchg
notl
mov
dec
fbld
cmp
xor
pop
jo
adc
mov
stos
xchg
loope
stos
mov
andb
mov
lods
cmp
xchg
pushf
inc
lret
cmp
mov
push
sbb
cmp
mov
test
push
cmp
loop
xchg
nop
xchg
cmp
scas
rorl
inc
pop
mov
cmpsb
fdivrl
fsubrs
js
sub
clc
popf
mov
sti
pop
movsb
cmp
and
rolb
jmp
lds
or
icebp
in
dec
cld
sti
les
cmp
dec
and
shrl
cmp
fsubrl
fiadds
fwait
test
imul
or
pop
add
mov
cmp
jecxz
scas
cmp
jae
sbb
xchg
int
cmp
mov
cmp
cmpsl
mov
leave
pusha
and
imul
add
cmp
sti
inc
adc
sarb
loop
jne
outsl
stos
pop
in
in
xor
push
repz
mov
lahf
scas
outsb
sub
out
jns
or
cmp
or
fists
aaa
sbb
mov
mov
out
int3
pushf
add
jb
adc
push
repnz
adc
into
add
dec
mov
mov
inc
and
ljmp
dec
mov
cwtl
jne
imul
ss
cmp
arpl
pop
sbb
inc
pop
cmp
push
jnp,pt
out
out
fbld
mov
mul
dec
inc
or
cli
nop
xchg
sub
stc
cmp
xchg
cmp
loopne
adc
ss
popa
jns
adc
pusha
xchg
ret
adc
repz
clc
add
cmp
addr16
cmp
cwtl
adc
xchg
lret
pop
in
cmpsb
aas
cmp
lahf
mov
xor
cmp
insb
insl
stos
sub
fisubl
mov
mov
or
cmp
pop
mov
push
and
ljmp
mov
xchg
jmp
leave
lcall
push
or
dec
xor
fcmovne
sbb
xchg
xchg
pop
pushf
scas
cmp
push
adc
xchg
mov
and
pop
inc
pop
pop
mov
or
inc
mov
xchg
fwait
jp
test
jae
dec
lea
mov
cmp
xchg
or
mov
pop
ja
stos
cmp
and
push
inc
lods
loop
inc
and
mov
out
cs
cmp
inc
ret
pop
and
aad
es
in
or
cmc
xchg
cmp
mov
or
pop
xchg
add
jae
dec
outsb
stos
cmp
cld
pushf
lods
mov
jbe
std
idivl
outsb
pop
movsl
add
shrl
fwait
lods
lds
inc
jge
or
push
rcrl
jecxz
fbstp
addr16
cmp
lods
daa
sbb
ret
in
mov
mov
adcb
ficoms
and
clc
flds
xchg
mov
fisttpl
add
mov
dec
enter
pop
or
mov
or
push
ljmp
mov
imul
mov
into
adc
lret
cmp
setg
mov
jo
sub
xchg
add
xchg
fdivr
push
rolb
in
out
gs
pop
shll
pop
fmuls
pop
push
lods
cmp
nop
pop
enter
and
pop
lcall
mov
stos
sbb
pop
pop
in
pop
add
sbb
nop
mov
adc
fcmovu
std
xor
cmp
cli
or
test
fldt
mov
pop
jge
xor
iret
ja
mov
into
ds
sahf
shll
sti
cmp
orps
jle
mov
cmp
and
cmp
hlt
movsb
popf
stos
mov
mov
mov
push
cmp
popf
cmp
outsb
jle
leave
imul
lods
and
xchg
pop
rclb
mov
inc
cmp
std
pop
in
dec
pop
imul
dec
sbb
ror
mov
dec
mov
xchg
cmp
out
dec
sub
addl
lret
push
jl
cmp
mov
popa
push
cmp
cli
ficoml
daa
inc
pop
xchg
les
mov
rep
stos
cmp
ret
xchg
aad
add
scas
mov
sar
sub
mov
cmp
or
add
out
cmp
pop
cmpsb
mov
inc
jnp
sub
push
imul
stos
or
or
call
and
jns
cmp
cmpsl
sbb
ja
cmp
sbb
daa
jo
mov
push
xchg
sub
leave
pop
cmp
mov
fisubrs
inc
cmp
mov
cmp
jl
jge
xor
lcall
out
cmp
jb
sub
jp
aam
cmp
fld
addr16
inc
std
insb
hlt
leave
cmp
enter
sbb
pop
or
hlt
ret
adc
daa
inc
xchg
mov
addr16
insl
adc
adc
mov
mov
push
ret
cmp
push
pop
iret
stc
adc
push
ret
xor
dec
aas
pusha
ljmp
stos
lret
loop
cmc
push
std
or
xchg
out
cld
gs
mov
cmp
xchg
mov
push
pop
pop
cmp
xchg
stos
imul
lcall
jne
pop
repnz
mov
nop
cmp
ss
cmp
mov
mov
xchg
jae
jb
adc
pop
mov
and
cmp
bound
dec
sbb
inc
mov
sti
out
adc
aam
icebp
pop
std
jmp
xchg
in
in
adc
inc
sub
lea
es
mov
repnz
adc
ss
pop
inc
lds
cmp
into
leave
repz
inc
cmp
dec
xor
fadds
jle
cmp
rcrb
cmp
test
inc
ds
gs
sub
jmp
mov
jl
cmp
adc
lds
loopne
shlb
jbe
subl
lods
icebp
pop
fwait
mov
xchg
cmp
or
and
in
scas
fdivs
pusha
push
adc
pop
ss
cmp
mov
test
cmp
je
ss
das
push
scas
pop
jg
jbe
bound
cli
or
out
mov
fcompl
movsb
jo
cmpb
mov
jns
mov
and
sbb
sub
cmp
push
fisttpll
sarl
gs
imul
nop
xchg
jle
in
call
mov
sub
mov
cmp
lds
pop
insb
out
cmp
mov
mov
xorl
adc
data16
dec
and
or
dec
mov
dec
cld
xlat
mov
inc
sub
add
cmp
adcl
iret
lcall
jecxz
fnsave
cmp
pop
data16
mov
cli
cmp
dec
mov
xchg
push
add
xor
xchg
jmp
jo
cmpsl
imul
lods
movsl
adc
xchg
sub
cmp
inc
iret
pop
ret
sbb
ret
cmp
inc
mov
push
int
dec
in
data16
xchg
cli
mov
fs
out
add
push
jmp
fstpt
sbb
mov
cmp
shlb
cmp
sub
sbb
sahf
cmp
std
shlb
sub
mov
popf
movsb
jb
push
stos
pop
cmp
out
notl
inc
daa
lods
jp
push
inc
mov
adc
enter
fadds
push
push
cltd
sub
jae
test
pusha
cmp
add
scas
push
or
pop
xchg
pop
sarb
or
enter
and
jl
dec
cmp
push
and
sbb
mov
cwtl
mov
fnstsw
inc
or
je
cmp
sbb
lahf
sbb
fiaddl
adc
jae
das
xlat
sahf
cmp
mov
cmp
out
cmp
xor
pop
pop
sbb
cmp
roll
pop
imul
and
inc
push
and
sti
int
cs
xor
test
ficoms
lahf
lcall
daa
push
cmp
adc
xor
jge
fwait
loope
es
icebp
mov
scas
jo
pop
cmp
notl
fstpt
fdivs
sub
jb
sbb
std
sub
scas
lahf
cmp
sbb
xor
or
inc
mov
dec
add
sub
iret
cmp
mov
pop
fnstsw
mov
add
sub
dec
je
aam
leave
iret
xor
mov
test
adc
stc
inc
outsl
cmpsb
ret
sub
shlb
jb
popf
ds
and
sbb
aaa
and
insb
mov
sahf
fimull
cmp
nop
fbstp
jbe
pop
cmpsl
cmp
inc
xchg
je
xor
mov
std
cmp
mov
ret
add
xorl
fxch
rep
jl
jecxz
daa
jno
adc
lahf
xchg
and
xor
fisubs
mov
add
adc
xchg
pop
mov
cmp
cmc
lea
mov
divb
jbe
cmp
scas
dec
sbb
xor
cmc
test
cmpb
push
push
fsubr
push
pop
cmp
or
sarl
pop
lea
fdivp
pop
lret
je
xchg
idivl
push
jle
in
shll
in
aas
xor
xor
add
mov
loope
clc
mov
cmp
mov
xchg
bound
cmp
inc
pop
xor
stc
popf
popf
imul
push
hlt
int
mov
cmp
fsubr
xchg
sbb
cmp
ss
movsb
rolb
dec
repz
stos
or
xchg
xor
into
push
mov
and
movsb
cmp
xor
jno
pop
in
lods
pmaddwd
xor
repnz
push
xor
mov
sar
stc
or
add
mov
inc
push
push
sub
sub
hlt
das
pop
cmp
lret
in
cmp
mov
push
push
or
mov
es
ja
cmp
dec
push
adc
ljmp
sahf
cmp
out
cmp
and
sbb
cmp
mov
cli
pop
cmp
scas
stos
adc
dec
test
lret
add
inc
cmp
in
dec
out
popf
jmp
lods
gs
adc
out
cmp
dec
pushf
popf
les
insb
and
sbb
cmp
repz
enter
cmc
in
and
sbb
push
xchg
stos
addb
cmp
lods
int3
call
xor
cmp
loopne
cmp
shlb
and
fcoms
jno
cmp
mov
pop
outsl
inc
cmp
daa
jbe
fistl
fistpll
jmp
pop
fsubl
clc
outsl
pop
aam
cmp
test
data16
mov
or
cmp
out
and
cmovg
mov
andl
push
push
xor
xchg
dec
add
cli
call
jne
sub
mov
popa
sbb
sub
mov
adc
das
inc
insb
leave
push
mov
lret
sti
push
dec
cmp
jmp
mov
cmp
aad
stos
or
mov
cmp
or
mov
sbb
adc
lret
cmp
jle
ret
fldt
loopne
aad
mov
dec
lret
ja
divl
hlt
cli
cmp
cmc
mov
jne
lret
rcl
clc
pop
sub
test
icebp
fildll
lea
cmp
and
sti
cmp
lahf
mov
pushf
nop
aad
lcall
jno
jns
imul
out
lods
mov
pop
lods
cmp
in
inc
dec
sbb
inc
lods
mov
xor
sbb
rcr
lahf
fwait
pop
xchg
lea
push
jge
xchg
dec
push
add
je
sub
fisubs
fiaddl
adc
mov
push
fs
daa
fistps
inc
cmp
inc
mov
inc
pop
cltd
jecxz
je
test
lock
cmp
cmp
mov
fistl
sbb
and
cmp
mov
inc
xor
inc
adc
push
pop
jns
jne
mov
push
sbb
inc
mov
cmp
push
dec
lock
cwtl
xor
pop
cmp
fwait
clc
scas
xchg
lret
cmp
cs
roll
adc
frstor
icebp
addr16
iret
xchg
jp
mov
pop
negb
dec
add
and
imul
scas
xor
nop
cmp
xchg
jecxz
cmp
int3
fldt
scas
lea
aas
add
sbb
lahf
nop
dec
and
inc
push
mov
cmp
jno
dec
adc
hlt
or
and
lcall
icebp
fwait
fisubl
in
repz
test
push
push
cmp
jno
lods
dec
ds
sub
cmc
out
xor
mov
sub
cld
inc
and
add
test
cmp
add
cmp
push
sahf
out
jb
leave
inc
cmp
pop
sub
cmpsl
popl
in
outsb
fmulp
popa
sti
cmp
iret
scas
dec
inc
bound
and
fdivrp
aas
cmp
cmp
xorl
sbb
sbb
cmp
int
stc
cmp
mov
sbb
xlat
or
sub
popa
mov
cmp
test
int3
int
sbbl
cmp
xchg
sti
jecxz
in
cmp
shlb
cmp
push
rorl
out
out
push
cmp
jno
xchg
in
sbb
movsl
les
out
rcr
cld
rol
dec
pop
fdivs
dec
add
mov
mov
arpl
add
imul
popa
movsl
cmp
in
and
imul
jl
fninit
lret
adc
mov
leave
mov
cmp
add
out
inc
imul
ljmp
popa
cmp
int3
rorb
mov
dec
or
cmp
rcrb
cmp
mov
cmp
cmp
std
jns
jne
mov
push
mov
sub
mov
insl
fistps
pop
lods
rol
cmp
ror
jo
nop
cli
cmp
call
jnp
popa
cmp
push
shll
lds
xchg
stos
dec
enter
xchg
sbb
mov
jns
pop
ficoml
push
cmp
dec
xchg
scas
xor
clc
shlb
outsb
or
push
cmp
insb
mov
stos
and
and
stc
insl
in
cmp
adc
fcmovne
cmp
push
jne
pushf
mov
lods
insl
mov
push
or
cmp
xchg
jmp
test
cmpsb
pop
pop
test
cmp
add
cmp
sbb
mov
arpl
mov
outsl
fidivs
mov
aaa
and
push
sti
pop
mov
cmp
dec
pop
adc
lea
cmpsb
jmp
pop
jb
mov
push
cmp
call
sbb
jb
repnz
mov
outsl
inc
leave
cmp
rcrl
xchg
adc
popl
lahf
and
jp
out
push
pusha
outsl
pop
jb
je
mov
mov
or
sub
inc
fnsave
mov
cmp
das
outsb
and
fcomps
std
mov
fadds
arpl
and
cwtl
push
push
lss
cmp
std
jp
js
xor
out
aaa
jge
xor
mov
out
loope
call
push
je
sub
aam
xchg
inc
cmp
pop
mov
cmp
or
xchg
cmp
or
out
pop
dec
sub
pop
aad
jbe
rol
lods
les
xchg
add
pushf
sbb
cmp
and
mov
push
loop
cmp
cmpsl
bswap
add
xor
call
insl
cld
xchg
mov
int3
data16
cmp
push
jp
aad
mov
movsl
add
pop
push
mov
cs
mov
adc
cmp
push
aas
jae
mull
mov
sub
sub
lcall
aad
or
jg
ret
mov
mov
outsb
cmovb
cmp
in
pop
mov
jne
push
movsl
arpl
aas
dec
add
fwait
outsl
shll
aam
stos
rolb
notb
mov
nopl
popf
cs
mov
mov
mov
ficoml
cmpsb
or
jb
mov
pop
mov
insl
ret
lods
pop
bound
cmp
sbb
outsb
cmpsl
mov
loope
inc
cwtl
inc
xchg
cmp
test
loop
push
int
cmp
mov
movsl
inc
shlb
cmp
div
mov
mov
cs
sub
scas
push
scas
jnp
cmp
subb
jge
xchg
mov
orl
add
xchg
xchg
popa
in
inc
push
cmp
mov
cmp
stc
mov
insb
cld
ficomps
out
cltd
in
jae
cmp
push
jne
and
add
cmp
pusha
xchg
jge
stos
std
gs
xchg
mov
adcb
jns
and
mov
cwtl
xchg
sub
nop
inc
icebp
in
push
jmp
cld
lock
xchg
cmp
jno
and
dec
cmp
jg
nop
cmp
pop
mov
stos
cmp
insb
jno
lods
out
andb
push
movsl
loop
pop
push
fisttpll
cmp
aas
and
aad
mull
sub
pop
cmp
imul
dec
cmp
push
mov
ss
xchg
sarl
xchg
jae
mov
mov
fidivl
mov
out
fdivl
addl
fst
loop
add
and
cwtl
outsb
push
dec
and
cmp
bound
in
cmp
out
fisubl
repz
out
roll
pushf
ds
mov
xor
cmp
subl
imul
xor
mov
outsb
push
sbb
call
int
dec
adc
sub
sbb
cmp
cmp
xchg
mov
adc
push
dec
cmp
jl
loope
cmp
rcl
out
dec
arpl
in
jg
int3
cmp
mov
imul
daa
mov
add
iret
cltd
aaa
cmp
mov
and
lea
lods
push
cmp
ficoms
lret
mov
sbb
mov
jge
adc
jmp
iret
loop
cmpsl
in
out
in
xchg
hlt
cmp
imul
cmp
insb
aas
add
push
imul
adc
push
cmp
sbb
cmp
pushf
cmp
pop
inc
push
add
sbb
mov
daa
stc
pop
mov
mov
inc
xchg
push
or
cmp
mov
test
int
cmp
leave
mov
xor
xchg
popa
imul
loope
pop
aad
shll
pop
outsb
and
add
rcr
add
or
push
push
stc
pop
stos
psubusb
cmp
sub
dec
and
inc
sti
push
inc
rcrb
fs
add
imul
inc
mull
sbb
jmp
shll
mov
mov
sub
ret
in
cmpsl
inc
add
in
xor
ret
or
out
adc
cmpl
xor
lret
xor
cmp
mov
in
popa
cmp
push
inc
filds
push
mov
mov
div
jge
xor
lcall
sub
scas
mov
add
fnstcw
push
lods
les
clc
sub
mov
jno
cmp
push
adc
cmp
sbb
push
mov
pop
pop
subl
fstpt
iret
pop
je
shrb
xor
cmp
sarl
cmp
or
push
dec
inc
pop
lret
ja
cmp
jl
adc
ds
jb
and
pop
jecxz
mov
inc
sarl
mov
mov
andb
cmp
add
outsb
scas
out
xor
stc
mov
shll
cmp
mov
sub
adc
mov
stos
aam
enter
popf
mov
aam
cmp
jne
or
pop
add
in
cmp
sub
lds
fistpll
cmpsl
mov
sbb
ret
adc
or
jle
sbb
subl
loopne
adc
aam
cmp
xlat
adcl
mov
pop
sbb
out
push
sbb
scas
sub
pop
cmp
xchg
xchg
movsb
insl
nop
enter
mov
xor
mov
fwait
jge
adc
outsl
xchg
cli
jl
cmp
push
mov
imul
out
cltd
xchg
dec
sub
aas
cmp
mov
sbb
andnps
fbstp
inc
jp
adc
or
or
lret
cmp
push
popa
rcrb
xchg
pop
push
cld
xor
addl
fs
int3
cmp
lock
mov
arpl
outsb
xchg
push
not
mov
cmp
push
cmpsl
lods
movsl
adc
push
xor
outsl
aam
xchg
add
decb
dec
mov
adc
push
div
mov
fistpl
je
push
or
xchg
inc
dec
cli
xchg
test
or
xchg
sub
mov
sub
cmc
cmp
in
push
mov
sub
pop
xchg
or
dec
sbb
or
imul
push
xacquire
push
enter
mov
cmp
cmp
push
cmp
popa
enter
inc
decl
inc
add
cmp
nop
mov
out
add
arpl
idivb
mov
cmp
push
insb
mov
cmp
imul
inc
push
cmp
orb
loopne
xlat
addr16
push
mov
or
push
xor
jb
push
sbb
cmpsb
nop
lds
inc
mov
lods
lret
push
cmp
and
jmp
xchg
cmp
cli
and
in
int3
cmp
push
sbb
adc
jb
jne
and
outsl
sub
inc
data16
sub
push
push
das
mov
cmc
inc
inc
nop
ds
daa
xor
pop
rclb
int
cmp
hlt
or
push
add
decb
jae
fcmovbe
cmp
mov
jo
cmp
ja
mov
inc
adc
push
mov
loop
lods
cwtl
jecxz
jmp
adc
add
pop
sub
and
lods
jge
cmp
push
xchg
in
lret
aaa
mov
xchg
fcompl
mov
sbb
fmuls
jp
jns
sub
cltd
bound
dec
add
mov
lock
sbb
push
iret
xor
cmpb
cmc
xchg
xchg
sarl
adc
add
xchg
insl
imul
or
cwtl
add
cmp
lods
hlt
push
cmp
ja
lret
leave
sahf
cmp
add
xchg
pushf
lds
daa
xchg
cmp
jle
dec
sbb
fdiv
fisubrl
cltd
cmp
xchg
int
jne
cmp
jmp
adc
xor
les
fistpll
test
cld
cmp
xchg
sub
fdivrs
rclb
scas
sub
neg
loopne
cmp
sbb
ja
xor
push
into
dec
jmp
inc
mov
shlb
pop
mov
cmp
das
dec
inc
test
scas
sbb
cmp
jecxz
call
mov
push
and
cmp
inc
shrl
enter
push
fwait
sahf
pop
sub
sbb
cmp
movl
dec
cmp
pop
push
nop
cmp
and
xchg
sbb
jl
or
in
pop
mov
lock
cmp
ljmp
sbb
imul
jmp
cmp
jo
repz
imul
push
cmp
cmp
xchg
sbb
jae
push
shrb
dec
mov
cmp
ja
push
cmp
jl
inc
cmp
ret
lods
mov
out
xchg
xor
xchg
pop
cmp
imul
xchg
dec
xchg
adc
jbe
mov
rcrb
dec
imul
fs
sub
or
in
pop
cmp
adc
mov
xchg
cmc
mov
fisubs
into
xchg
out
or
cmp
pop
cltd
aam
push
test
fstpl
jo
xlat
pop
cmp
movsb
sbb
roll
popa
sbb
xchg
push
add
jmp
xor
mov
or
jge
pop
inc
ja
out
mov
stos
cmp
jne
lahf
xchg
xchg
xor
push
or
xlat
je
stc
cmp
ss
xchg
xlat
inc
shll
inc
ljmp
cmpl
jne
jmp
pop
cmp
jb
in
xchg
outsl
lret
sbb
cmp
mov
popf
push
stos
int3
call
loopne
pushaw
js
stos
xor
mov
aaa
fs
mov
into
imul
push
cmp
nop
inc
xchg
dec
adc
mov
xchg
add
scas
iret
cmp
xor
dec
cmp
xchg
pusha
ss
sahf
push
and
mov
mov
aam
add
rcrl
je
cwtl
fs
inc
jnp
push
test
mov
cs
jne
add
lock
or
int
stc
or
xor
lods
mov
clc
cmp
jmp
cmp
push
out
cmp
dec
xor
daa
mov
cwtl
in
and
cmp
or
in
add
pop
call
lds
leave
test
mov
add
pop
icebp
cmp
das
push
stos
aad
sarl
iret
lahf
enter
cmpsl
and
aad
mov
mov
jge
imul
dec
in
cmp
testl
push
pop
test
push
dec
cmp
divl
ficoml
or
jnp
call
ds
mov
jo
std
cmp
xor
mov
xor
push
rolb
testb
inc
daa
scas
lret
sahf
pop
fidivrl
in
sbb
sub
jne
pushf
inc
mov
inc
push
pop
lret
bnd
mov
jmp
or
cltd
adc
arpl
cmp
pop
mov
cmp
dec
push
lret
sub
sbb
ds
pusha
sbb
and
clc
hlt
or
fsubr
adc
int3
dec
dec
mov
inc
repnz
lret
shlb
mov
jmp
scas
outsl
decb
dec
inc
inc
sbb
mov
cltd
jo
push
xchg
ljmp
ret
aaa
mov
cli
stos
and
xor
movsl
fisubs
jp
rcr
lret
cmp
and
xchg
cld
std
push
adc
jecxz
inc
fs
mov
jl
fdivr
stos
or
and
push
adc
aad
push
repz
shr
push
sti
loopne
out
mov
inc
adc
mov
dec
cmc
sbb
and
call
mov
outsb
cmp
push
scas
pop
out
pop
push
push
stos
dec
cmp
sbb
jae
inc
dec
dec
cmp
cmp
inc
jns
popa
jmp
cmp
mov
pop
mov
ret
jecxz
and
xchg
cwtl
stos
fsubp
icebp
sub
bndldx
das
adc
jecxz
cmp
mov
adc
flds
adcl
and
ret
je
jmp
cmp
repz
cmp
outsb
enter
inc
es
lahf
pop
mov
mov
cmp
push
cmp
mov
stos
cmp
insl
xchg
lock
or
out
repz
cmp
push
in
cmpsb
cmp
imul
sahf
cmp
cmp
mov
cmp
sub
js
cs
outsb
mov
cmp
sbb
and
pushf
adc
cmp
out
bound
test
cmp
jmp
je
pop
pushf
push
and
dec
jo
cmp
push
fwait
cmp
sti
inc
push
out
and
mov
je
push
or
jne
mov
jns
jle
mov
pop
cwtl
dec
cmp
repz
bound
dec
or
mov
fisubrl
sub
sub
icebp
popa
insb
sub
mov
adc
push
or
xor
push
jb
push
ficompl
icebp
stos
mov
cmp
imul
shlb
mov
push
pop
aas
pop
xchg
xchg
repz
dec
push
cmp
inc
insb
ret
mov
imul
sti
movsb
ret
fcom
cmp
sub
cmp
sbb
cmp
fisubrs
cmp
push
lods
aam
xchg
in
push
sbb
bound
cmp
ret
cmp
ss
in
dec
and
and
xor
sub
mov
popf
dec
add
pop
in
lods
inc
dec
push
rcrb
sbb
aas
call
aad
rorb
pop
mov
int3
xor
sbb
test
aam
xchg
cmp
add
dec
pop
lock
jle
out
pop
lods
jns
xchg
fcomps
xor
testl
cmp
call
aad
inc
lahf
pop
xchg
xor
lods
jge
aas
into
cmp
loope
rcrl
js
cmp
out
mov
mov
movsl
jbe
add
cmp
insl
imul
cmp
xor
mov
cmp
stos
hlt
scas
mov
sbb
xor
shlb
xchg
cmp
cmp
xchg
repz
int
das
cmp
cltd
push
xchg
sub
lret
rol
dec
xor
push
mov
movsb
sarb
or
test
xor
jno
mov
xchg
pop
mov
cmp
mov
pop
lahf
cmp
out
push
shrl
in
shl
push
cmp
pop
sbb
movsb
cmp
test
pushf
shrb
lds
xchg
jns
cli
lcall
mov
mov
loopne
mov
add
inc
sub
xor
cmp
fnstcw
inc
pop
cmp
ja
shll
mov
mov
lods
dec
push
mov
cmp
lret
jp
or
jmp
jge
out
push
les
repz
das
jge
mov
fsubrl
or
stc
lds
cmp
sahf
pop
mov
nop
insb
adc
sbb
bnd
add
mov
mov
imul
leave
push
pusha
adc
scas
adc
xor
call
cmp
loope
movsl
jmp
fstps
aas
mov
xchg
xor
sub
mov
mov
es
movsl
fnstsw
jne
xchg
fsubl
cmp
aam
pop
idiv
jp
aaa
cmp
sub
cmp
jmp
mov
lods
xchg
call
mov
dec
mov
cmp
std
adc
mov
cmp
repz
push
loopne
popa
fadd
cmp
mov
fcoml
scas
ljmp
cli
cmp
mov
inc
das
xor
lahf
sub
cli
sbb
sub
xor
icebp
loope
sub
movb
add
outsb
jae
stc
sub
push
push
sbb
sub
jecxz
out
ja
inc
dec
mov
andb
cmp
jmp
int
cmp
mov
mov
push
fsubrs
inc
mov
inc
imul
shrl
inc
fcomps
mov
fnstcw
addb
mov
sbb
popa
cmp
xlat
mov
cmp
daa
mov
mov
aaa
loopne
stos
test
mov
fisubs
jno
cmp
add
sbbb
mov
out
leave
cmp
fbstp
jb
mov
pop
test
push
push
adc
mov
ficompl
pop
push
cmp
cs
nop
aam
adc
adc
out
cmp
arpl
fneni(8087
sbb
pop
movsl
and
fcmovb
pop
mov
cmp
in
cmp
adc
pop
shr
lsl
ja
rcrl
mov
jb
aas
jp
sti
aaa
fwait
es
xor
mov
sub
pushf
dec
or
add
jo
mov
mov
insb
cmp
mov
mov
cs
or
cmp
insb
mov
mov
or
mov
ljmp
dec
mov
xchg
cmp
adc
fbstp
pop
clc
rol
pop
xor
xchg
fwait
rcrl
test
lods
sub
fcompl
addb
xchg
mov
pop
jae
cmp
push
cmpsl
sub
push
das
cmp
iret
jno
mov
xchg
cmp
cltd
orb
adc
inc
faddp
cmp
stc
adc
dec
repz
cmp
sub
bound
pop
or
and
inc
xlat
mov
cmp
sahf
push
push
jl
mov
adc
cmp
stc
mov
mov
out
cmp
cltd
sub
xchg
mov
bound
xor
cmc
lea
xchg
fucomi
mov
push
cmp
subl
sahf
mov
and
adc
adc
ja
aas
jb
lret
cmp
test
mov
push
dec
popf
xor
es
or
sarb
ret
stc
lcall
xor
popa
jge
cli
mov
cmp
cld
daa
jmp
dec
cmp
fwait
adc
pop
cwtl
pop
adc
lahf
dec
scas
test
fbstp
pushf
roll
add
decl
add
pop
fst
and
cltd
lcall
dec
jno
enter
cmp
ret
inc
jbe
into
decl
cmp
sti
mov
dec
sub
xchg
fwait
cmp
addb
push
inc
repz
inc
pop
sbb
mov
cmp
arpl
pop
lods
out
imul
test
stos
mov
inc
cmp
sbb
ds
cmp
bound
inc
adc
pusha
or
cmp
cld
pop
sub
ss
sahf
int3
push
fwait
test
push
sti
out
popa
mov
movsb
mov
rclb
add
ds
and
jae
jns
out
fists
and
in
jne
and
push
imul
xor
mov
xchg
adc
cmp
testl
mov
mov
mov
push
icebp
pop
sti
xchg
cwtl
dec
cmp
fdivrs
xchg
xor
lods
addr16
bnd
into
push
aam
insl
out
or
xchg
in
mov
aam
scas
mov
es
jbe
mov
xchg
aam
cmp
out
sarb
testb
repnz
daa
cmp
or
cmp
sub
loope
cmp
and
or
fbld
mov
xor
fsubrl
aaa
cmp
or
add
mov
jno
push
jns
sub
lcall
jmp
cmp
sbb
or
add
dec
popf
mov
inc
in
cmp
fs
dec
fildl
fmul
out
loopne
dec
cmpsb
pop
stos
out
ret
push
fstps
test
mov
ret
jne
and
mov
lret
leave
mov
cmc
xor
sub
mov
aam
dec
cmp
mov
cs
lret
cmp
fstpt
cmp
mov
cmpsb
adc
pop
cmp
mov
sti
xchg
cmp
jo
pop
adc
sub
jecxz
inc
and
jbe
cmp
fwait
mov
test
aam
stc
adc
jle
cmp
test
ror
loopne
popf
movsb
scas
pop
cmp
out
out
and
dec
push
sbb
adc
xor
sarb
jp
lock
es
inc
cmp
iret
jnp
fwait
repz
mov
push
add
cmp
cwtl
adc
xchg
jne
and
mov
push
dec
out
sahf
xor
pop
lds
mov
pusha
or
dec
aam
shll
cmp
test
pop
jl
push
cmp
cs
mov
lods
pop
inc
cmp
xchg
lahf
sub
test
mov
lods
call
jp
mov
sub
push
inc
pop
or
cmp
orb
or
sbb
js
mov
and
rol
xchg
mulb
sbb
sub
and
mov
sti
or
fsts
les
inc
mov
inc
cmp
and
dec
cwtl
lock
dec
lods
iret
aad
in
jge
cmp
aam
add
cld
int3
cmp
stos
cmc
je
mov
xor
push
cmp
pop
cmp
sbb
out
dec
inc
stc
sahf
daa
ljmp
mov
rolb
popa
cmpsl
sub
and
push
pop
cmp
mov
bswap
jns
cli
pop
and
xor
mov
idiv
or
mov
fsts
lods
mov
das
cmp
dec
adc
adc
pusha
cmp
and
icebp
pop
nop
scas
push
inc
jae
int
jnp
jnp
imul
mov
fcmovnbe
sbb
insb
rolb
frstor
fnstcw
mov
xchg
cli
mov
dec
jl,pt
add
mov
mov
xchg
inc
jmp
mov
mov
sub
icebp
nop
fwait
pop
popa
cmp
pop
stos
out
jo
and
icebp
jg
repz
test
adc
sub
in
cmpsb
fsts
lret
dec
cmp
sti
cs
cmp
je
push
cmp
aam
inc
push
insb
fxch
jmp
dec
cmp
ljmp
fs
into
xor
fdiv
xchg
cmp
xchg
rol
mov
cmc
out
or
and
xchg
sbb
xor
lea
negl
testb
int
cwtl
aaa
add
dec
push
inc
jmp
cmp
out
lcall
cmp
mov
leave
cmp
imull
cmp
das
xlat
cmp
xchg
mov
mov
pop
cmp
lret
ja
mul
mov
ficoml
mov
jbe
dec
mov
imul
ja
jnp
sbb
test
jmp
adc
fistpll
mov
mov
dec
ret
inc
cmp
sbb
repnz
lods
out
dec
leave
cmp
sub
mov
mov
fstl
pop
es
cmp
mov
pop
stos
xlat
xchg
cmp
push
outsl
inc
xor
sbb
mov
jmp
cmp
xor
dec
out
ftst
sarb
jbe
jge
pusha
cmpsb
xchg
cmp
jmp
xchg
inc
adc
pop
jl
xor
mov
popa
add
inc
jnp
lods
cmp
jae
dec
inc
loopne
xchg
mov
lock
fsubr
xlat
pop
jnp
aas
add
fwait
cmp
push
cmpsb
or
int3
inc
cwtl
inc
xchg
xchg
pop
mov
push
cmp
pop
pop
pop
mov
pusha
fmulp
sbb
adc
ret
xor
fnstcw
fstpt
or
and
scas
cmp
pop
sahf
cmp
pusha
les
mov
jmp
jmp
push
push
cli
mov
jno
pop
cmp
mov
fldcw
cs
in
dec
stos
cmp
add
pop
mov
pop
add
jge
repz
js
sub
pop
cmpl
cltd
std
sarl
cwtl
inc
jmp
dec
cmp
add
push
gs
cmp
scas
cmp
pop
cs
xchg
adc
fwait
into
lret
mov
cmp
push
or
cmp
test
ficoms
sbb
jb
cmp
jge
or
jbe
xchg
aad
arpl
push
push
mov
cmp
push
xor
or
adc
loope
xchg
inc
ja
push
jl
ret
adc
sbb
or
cmp
push
push
cmp
xchg
int3
mov
rcrb
mov
int
adc
sub
sub
pusha
testl
xor
jne
lcall
push
mov
cmp
sub
cmp
shlb
dec
std
mov
test
popf
pop
push
fwait
sti
stos
sub
rorb
mov
pop
cmp
pop
imul
push
sbb
int
enter
push
cmp
rcll
push
mov
cmp
dec
lahf
adc
dec
sahf
cmp
push
imul
aaa
xor
push
push
jp
scas
xor
and
xor
or
mov
sahf
jns
out
sub
fwait
loop
cmp
jmp
les
push
pop
mov
lods
jmp
fisttps
popa
or
cmp
xor
lahf
cltd
aam
cmp
pop
push
mov
and
imul
cs
fists
push
cmc
adc
bound
dec
add
aaa
iret
in
cmp
out
dec
cmp
xchg
cs
cmp
mov
push
inc
xor
xchg
aad
push
inc
xchg
inc
cmp
xchg
pop
in
sbbl
jno
flds
cli
xchg
mov
ss
sub
jbe
cmpsl
rclb
out
lods
fidivrs
push
or
imul
jo
into
dec
int
sahf
push
xlat
in
add
mov
sub
cmp
jo
xchg
cmp
cmp
shll
xor
add
outsb
aam
cmp
cld
mov
shlb
mov
cmp
lcall
dec
mov
lret
rcrl
and
jp
outsl
scas
cmp
cli
xchg
fnstcw
push
cmc
jbe
jp
cmp
imul
iret
rclb
push
jns
out
and
test
sbb
cmp
int
jg
mov
mov
movsb
inc
push
cmp
imul
fmulp
cltd
push
xor
cmp
test
popa
cwtl
cli
xor
jno
sahf
add
and
mov
cmpsb
xor
daa
cmp
mov
aad
ret
cmp
cld
push
addr16
sbbb
jmp
fs
loop
scas
mov
sbb
bound
add
sub
sarl
sti
movsb
mov
sti
cmp
shl
mov
insl
add
jp
rclb
lods
xor
call
cmp
lahf
mov
cmp
mov
jp
movsb
mov
int
cmp
stos
dec
inc
sub
cmp
xchg
divl
aaa
or
or
jecxz
les
cmp
mov
arpl
sub
inc
vpshaq
adc
sahf
mov
sarb
int3
cs
pop
cmp
andb
and
je
out
sbb
cld
testb
pop
roll
aam
imul
in
xor
jg
xlat
cmp
xor
jne
mov
adc
xchg
jns
shlb
ret
cmp
outsl
push
ss
aas
inc
jbe
cwtl
cmpsl
cmp
ret
xchg
ds
inc
insb
lret
jle
xor
imul
xor
push
cmp
and
test
push
lcall
xor
ja
dec
pop
sbb
xchg
xchg
sbb
cmp
fimuls
fnstenv
mov
fmul
aam
and
pop
cmp
push
stos
jmp
or
cmp
fbld
mov
rcrb
icebp
pop
xor
mov
into
cmp
and
cmp
dec
lahf
outsb
push
cmp
xchg
fdivrl
adc
sbb
add
dec
mov
std
mov
xor
scas
mov
fiadds
cmp
cmp
xor
std
fisttpll
repz
loopne
es
inc
pushl
cmp
or
fsubl
lret
inc
inc
cwtl
adc
cli
xchg
outsl
xchg
nop
push
cmp
movsb
sar
cmp
in
sti
loope
mov
xor
sub
lds
je
sti
cmp
loopne
imul
outsb
in
cwtl
stc
dec
xor
fs
or
adc
push
sbb
mov
outsb
sub
xchg
test
sti
cmp
pusha
scas
push
jo
jbe
fsubrs
repnz
push
imull
nop
dec
in
hlt
sub
cmp
push
push
inc
add
push
cli
lret
stc
adc
lods
cmp
sub
pop
mov
test
aad
in
test
push
push
mov
inc
lea
enter
pusha
add
cmp
xadd
xor
pop
cli
test
insl
cmc
mov
xor
mov
mov
cmp
adc
and
lods
cmp
insl
test
icebp
mov
cmp
sub
std
outsl
jg
cmp
push
imul
xor
mov
cmp
mull
adc
xchg
idivb
out
es
icebp
insl
cmp
and
int
dec
or
cmp
enter
cmp
loop
outsl
pop
xlat
int3
stos
pusha
mov
icebp
inc
push
iret
popa
in
in
jle
dec
test
jno
xchg
cmp
aas
or
insl
mov
cli
es
cmp
stc
out
cmp
and
les
xchg
sbb
cmc
out
cmp
loopne
nop
aas
push
and
cmp
popf
inc
lahf
mov
adc
gs
callw
pop
ret
push
lahf
dec
jge
mov
xchg
mov
pop
cmpl
rclb
sub
xchg
cmp
xchg
movsl
cmp
xlat
and
mov
lods
imul
mov
arpl
lret
mov
xchg
inc
bound
repnz
fwait
inc
jg
mov
dec
mov
mov
xor
fildll
std
js
test
cmpsl
cmp
rcl
or
arpl
movsl
adc
cmp
enter
nop
mov
fiadds
xor
mov
lahf
lcall
in
clc
cmp
mov
jp
stc
dec
mov
sarl
push
pop
mov
cmp
cmpsl
cmp
or
test
add
inc
cmp
xor
cmp
sbbb
sbb
sub
js
adc
add
decb
and
mov
cmp
mov
mov
xor
dec
in
mov
iret
hlt
pop
push
fistps
and
pop
push
sbb
xor
push
mov
imul
in
int3
add
adc
cmp
adc
iret
data16
in
cmp
pop
insb
in
xlat
mov
push
inc
popa
fldl
xchg
jmp
sbb
inc
push
inc
lock
jnp
cmp
call
nop
push
sahf
jne
xlat
rorl
pop
in
mov
xchg
cmp
aaa
pop
dec
add
push
mov
ret
adc
mov
pop
and
das
mov
mov
cmp
sbb
xchg
out
sbb
cmpsl
push
sbbl
popa
in
pusha
into
mov
cmp
dec
adc
aam
adc
mov
hlt
lcall
xchg
mov
gs
in
je
dec
cmpl
xchg
inc
cmp
mov
fwait
mov
cmp
call
mov
andb
add
jecxz
adc
sti
cmp
and
mov
mov
sub
shrb
test
push
imul
jp
jp
mov
pop
sub
sub
adc
shlb
jno
pop
pop
jle
and
fcmovnb
in
inc
popa
lods
testl
adc
jle
jmp
mov
mov
nop
or
xor
ljmp
push
test
or
cmp
push
jge
dec
les
xchg
fimull
adc
add
push
inc
cmp
push
rcrb
mov
test
push
fdivrs
mov
test
cmpsl
add
movsl
es
mov
mov
cmp
jle
dec
fwait
push
lret
cmp
pusha
cmp
aam
cmp
jecxz
leave
cwtl
shrb
int
push
xchg
xor
repnz
lcall
inc
rorb
mov
cltd
cmp
arpl
jne
leave
and
loope
pop
push
insb
cmp
unpckhps
add
ret
cmpsb
leave
mov
mov
sub
or
jnp
addb
inc
pop
mov
dec
mov
in
push
xchg
lahf
jle
sbb
mov
test
cmp
push
int3
test
adc
lods
lods
stos
mov
aas
shlb
jbe
pop
mov
inc
setl
popf
mov
cmp
bound
in
loop
cmp
fcomip
xchg
aam
jb
aad
mov
mov
cmp
andl
xchg
nop
adc
push
or
out
fs
cmc
loop
sarb
push
cmp
xchg
stos
cmp
std
mov
mov
lods
pop
cmp
bound
hlt
xchg
sbb
cmc
fimuls
jb
jb
cmp
pop
cmp
stos
jg
aaa
sti
pop
mov
xchg
setae
cmp
cmp
mov
loope
pop
lods
push
daa
ljmp
shl
push
ret
sarb
outsb
xchg
mov
idivl
cmp
imul
lea
sub
sbb
rorl
inc
test
inc
jg
jmp
mov
xchg
cmp
xchg
les
gs
cmp
in
aas
adcb
jno
insb
xor
and
rcr
inc
mov
inc
out
dec
mov
lret
add
inc
cmp
aam
stos
out
xchg
cmp
inc
jb
pop
sbb
loope
das
xchg
out
outsb
cmp
adc
pushf
sbb
mov
into
insb
mov
lds
andb
fistpll
push
imul
aad
mov
pushf
cwtl
xor
sub
or
test
mov
jo
scas
out
xor
lods
test
jecxz
and
mov
sub
test
or
dec
inc
cmp
xchg
add
cmp
sub
push
fs
or
cmp
inc
cmp
mov
adcb
nop
cmp
or
mov
lea
pop
cmp
cmc
dec
sbb
aam
cmp
lahf
xchg
pop
jmp
pop
adc
xchg
stos
out
mov
icebp
lock
and
cs
cmp
inc
adc
arpl
sti
ficoml
inc
test
push
mov
fidivs
cmp
aaa
xor
cmp
cmpsb
cmp
mov
mov
iret
jecxz
xor
sbb
lret
xchg
jns
out
cmp
mov
push
clc
inc
out
inc
cmp
mov
mov
aad
mov
and
xchg
cmp
insb
loopne
pop
jg
cmp
shll
dec
sub
enter
jmp
cmpl
fiadds
aam
stos
jl
jne
arpl
cmp
mov
aad
popa
repz
cmp
daa
shl
mov
fdivrs
mov
fbld
aaa
dec
ds
mov
push
cmp
out
pop
pusha
or
cmp
outsl
icebp
inc
and
xlat
pop
cmp
pop
pop
mov
or
iret
int3
cmp
ret
mov
xchg
add
inc
and
test
mov
xchg
jecxz
adc
aaa
cmp
mov
imul
and
cmp
leave
fildll
stc
mov
aam
cmp
sbb
lahf
out
repz
inc
fstpt
jno
mov
in
loopne
fisubrs
popf
in
jmp
out
xor
cmp
jb
sbb
cmp
pop
jne
das
out
cmpsl
roll
xor
fstpt
jl
aam
cs
repz
mov
sti
bound
cmp
push
pop
cmp
jg
cmp
mov
push
fdivrl
loopne
in
outsb
pusha
daa
push
test
dec
jge
sti
cmp
stos
push
xchg
pop
pusha
xchg
inc
test
dec
sbb
cmp
jb
inc
xor
loope
cltd
in
sti
call
cmp
cmp
aaa
repz
das
xchg
mov
and
sbb
jg
in
iret
cmp
out
daa
aam
fistps
jge
xor
and
in
mov
jbe
test
push
lock
inc
add
jecxz
cmp
insl
call
mov
lea
lds
lret
out
dec
lods
jbe
popa
sub
fcom
gs
sarb
cli
cmpsl
inc
pop
add
sub
cmp
and
pop
mov
mov
fdivrl
sbb
add
popf
xor
repnz
mov
mov
xor
xchg
sbb
or
and
jbe
and
mov
adc
iret
cmp
mov
and
fisubl
test
xchg
or
xor
daa
cmp
mov
mov
js
inc
int
cmp
sub
pop
xchg
aas
xchg
cmp
std
mov
movsb
cmp
inc
call
repz
out
or
aad
cmp
sbb
push
adc
divl
push
cmp
sti
cmp
cmc
cmp
cwtl
mov
les
enter
inc
mov
or
out
aas
out
cmp
mov
add
xchg
cmp
add
mov
adc
cmp
and
stos
sub
jno
dec
in
mov
cmp
movsb
pop
out
add
add
mov
jle
sub
push
push
jp
inc
and
mov
cmp
push
push
movsl
imul
ffreep
fisttpll
out
pop
inc
mov
mov
dec
push
cmp
ljmp
or
imul
sub
mov
and
push
cmp
mov
cmp
mov
cmpsl
je
inc
adcb
push
mov
cmp
daa
mov
mov
sarb
jmp
cmpsb
push
cwtl
push
fbstp
fldt
cmp
xchg
xor
movsl
in
push
insb
arpl
inc
mov
mov
cmpsb
jo
mov
lret
out
xorl
cmpb
or
cmp
sub
cmc
imul
testl
dec
pop
push
pusha
sub
stos
mov
xlat
cmp
mull
pop
scas
js
xorl
fsts
push
iret
mov
inc
enter
mov
mov
mov
push
mov
cmp
in
movsb
mov
cmp
push
dec
icebp
mov
and
pop
subb
stc
and
pop
adc
jge
js
lahf
fistpll
insl
aaa
lock
jb
lds
or
mov
and
push
push
add
mov
add
dec
xchg
xor
cs
test
and
pop
das
cmp
loopne
jle
and
or
cmc
mov
cli
pop
jg
sbb
sub
je
inc
loope
call
add
mov
fs
pusha
mov
cmp
and
mov
stc
push
xlat
mov
cmp
xchg
fnstsw
hlt
push
add
xchg
int
lods
dec
mov
push
xchg
cmp
sub
mov
cmp
mov
and
jp
aam
inc
int3
insl
clc
cmp
cmp
sbb
aad
add
jmp
and
and
lods
cmc
xlat
outsl
stos
mov
cmp
inc
shlb
lret
repnz
jno
jl
lods
cwtl
cmp
cmp
xchg
pop
inc
xorb
pusha
or
sbb
ror
inc
cmpl
sbb
push
and
xor
hlt
fwait
shlb
cmp
aam
in
dec
inc
imul
cmp
orb
out
loop
mov
std
and
jns
mov
mov
and
lret
repnz
rcrl
imul
jae
xlat
js
or
mov
sbb
cmp
dec
cmp
jg
rorb
jp
clc
cmp
movsl
pop
lods
pop
cmp
fcmovbe
mov
nop
fildl
inc
add
stos
out
or
push
ret
movsl
sarl
lods
mov
into
fwait
imull
sbb
sbb
sarb
scas
push
enter
mov
ret
int
jle
and
fldenv
aad
ja
cmpsl
mov
and
or
pop
push
mov
and
or
mov
mov
xchg
int3
aas
sbb
sub
rcl
inc
addr16
pop
jo
cmp
inc
sbb
pushf
outsl
cmp
cmp
hlt
and
cmp
dec
pop
mov
arpl
loope
cwtl
je
ret
xor
test
movsl
xchg
add
call
les
dec
or
lahf
enter
push
mov
aad
cmp
cmp
cmp
fmulp
mov
or
outsb
cmp
add
mov
in
pop
fsubl
and
test
or
mov
adc
dec
fs
cmp
mov
out
aaa
sub
adc
inc
jnp
sub
out
push
movsl
add
bound
subb
mov
lods
jne
mov
xchg
cmp
dec
int
stc
or
push
cmp
xchg
rcrl
mov
mov
lea
jge
cmp
fiadds
cmp
sbb
push
enter
cmp
shl
and
push
adc
jb
lods
sub
enter
add
ljmp
dec
orl
cmp
push
aaa
sahf
outsl
ja
mov
or
sbb
cmp
pop
mov
cmpsb
outsb
or
mov
cmp
jp
sbb
jle
jg
mov
pinsrw
push
inc
aas
in
pop
cmp
daa
loop
imul
fcoms
insb
in
add
dec
dec
in
icebp
sbb
outsb
xor
repz
ret
or
adcb
std
and
and
or
repz
scas
add
cmpsl
push
enter
mov
jb
sarb
ljmp
or
push
cmp
pop
or
test
jns
inc
pusha
mov
xchg
xchg
lods
mov
inc
xor
xchg
and
hlt
loopne
jecxz
xor
mov
push
repnz
inc
push
lahf
xchg
outsb
mov
int3
cmp
jnp
je
stos
inc
fbld
inc
or
mov
stc
test
loop
jbe
call
jae
cmp
aaa
in
adc
fists
sbb
xor
loop
add
sbb
es
jb
cmp
or
or
jae
jnp
stos
sub
inc
adc
inc
mov
pop
mov
sbb
inc
bound
adc
sub
push
or
inc
cmp
icebp
inc
lds
repnz
sbb
cmp
mov
mov
or
cmp
outsl
scas
lods
push
pop
stos
mov
mov
push
add
data16
mov
cmovb
pusha
imul
cmp
pushf
enter
inc
cmp
fwait
cltd
repnz
hlt
lret
cmp
adc
cmp
in
int
cld
aam
or
subl
jno
jp
orb
mov
adc
repz
cmp
lods
pop
lcall
icebp
mov
std
xor
add
jb
xchg
mov
lods
sub
mov
aas
mov
adc
pop
sub
ss
test
cmp
xchg
push
lret
cmp
xchg
sbb
pop
pop
dec
dec
jecxz
jne
cmp
inc
inc
xor
cltd
inc
mov
cmp
xchg
test
and
mov
sub
xor
jne
sbb
lea
cmp
add
pop
cmp
mov
xor
cmp
outsl
sarl
sub
cmp
mov
rcrb
cmp
popf
stos
mov
add
std
xlat
xor
xchg
pop
ds
mov
dec
lret
mov
out
sbb
mov
ja
lods
push
mov
push
cmpb
push
add
dec
cmp
dec
call
daa
cmp
jo
pusha
push
and
mov
mov
cwtl
inc
movsl
iret
cmp
xchg
pop
sub
das
cmp
ret
jno
or
adc
test
push
jmp
into
cmp
vmovups
xorb
push
mov
add
cmp
add
in
pop
cmp
aaa
xor
leave
mov
dec
push
cmp
add
dec
ret
xchg
xor
les
sub
xor
cmp
test
sbb
fidivrs
cmc
out
mov
or
xchg
xor
dec
fs
cmp
or
adc
mov
xchg
sarb
ret
ljmp
dec
or
loop
mov
xor
mov
cmp
aas
out
cmp
lea
mov
cmp
popa
fcompl
out
repz
pusha
mov
add
ds
icebp
dec
pop
in
jnp
stos
jmp
cmp
pop
cmpsl
pop
lret
xchg
out
mov
add
pop
lds
pop
sbb
cmp
mov
dec
cmp
roll
cmp
loopne
lods
cmp
fimuls
mov
mov
scas
sbb
mov
aaa
mov
add
cmp
movsb
insb
pop
cli
or
mov
jae
fldenv
push
arpl
popf
cmp
stc
dec
ret
dec
int3
js
pop
addr16
loopne
std
push
imul
aad
and
cltd
shlb
out
sbb
cmp
xlat
push
cmp
shll
aaa
ljmp
sbb
sahf
int
out
lcall
imul
add
cmp
jmp
jo
aas
outsb
outsl
or
and
sarl
out
dec
jmp
je
fs
jecxz,pt
mov
add
imul
testl
jbe
les
call
aad
cmp
pop
fcoml
xchg
stc
and
mov
jle
adc
xchg
imul
mov
int
mov
ss
in
repnz
mov
call
in
cmc
dec
and
cmp
enter
xchg
cmp
mov
adc
sbb
cwtl
es
sub
mov
cmp
mov
std
or
cmp
fsubrs
mov
cmp
aas
into
das
fdivrl
push
dec
icebp
dec
cmp
adc
push
movsl
lods
mov
cmp
jno
stc
cwtl
jbe
cli
idivl
pop
cltd
mov
push
add
push
add
dec
jl
xlat
dec
cmp
push
es
call
enter
pop
adc
arpl
pop
xchg
clc
xchg
cmp
sbb
outsb
jb
mov
sub
push
insl
jbe
adc
enter
imul
sbb
xchg
mov
mov
int3
cmp
sti
fwait
inc
adc
xchg
xor
pop
lods
mov
xor
dec
xchg
mov
arpl
or
sub
xor
pop
jmp
mov
adc
xchg
out
mov
mov
repnz
jmp
sar
pop
xor
cmp
insb
jne
inc
mov
mov
cmp
sub
xor
cmp
maskmovq
imull
cmp
cmp
xchg
les
subb
and
shll
sahf
or
cmp
jle
aam
lahf
mov
ds
stos
push
inc
cmp
sahf
adc
mov
adc
xchg
fldcw
cmp
insl
mov
lret
loop
xchg
add
cmpb
or
stos
and
cmp
cmp
sub
cmp
xor
mov
inc
xchg
ds
cmpsl
cs
lahf
sbbl
stos
xor
repz
fwait
cmp
pop
and
and
cmc
data16
and
mov
inc
inc
xor
xchg
mov
xchg
mov
stc
leave
xor
in
rcll
mov
cmp
imul
add
jge
insb
mov
cmp
dec
xchg
push
pusha
jmp
or
and
sarb
lods
lods
cmp
push
call
adc
aam
add
imul
neg
shrb
cmp
mov
lret
cmp
test
daa
scas
dec
push
xor
cmp
or
sub
adc
repz
adc
jb
cld
mov
cmp
lret
ljmp
repnz
cli
cmp
dec
or
cmp
ret
in
mov
push
ja
mov
pop
insb
call
xor
inc
and
ret
fisubrs
pop
outsb
pop
inc
cmp
adc
cmp
jle
cmp
pop
and
test
popf
ss
mov
stos
jle
mov
sub
dec
mov
mov
xor
imul
adc
insl
in
xchg
add
shr
and
cmp
loop,pn
lret
ja
dec
lcall
adc
dec
pusha
mov
cmp
pop
push
mov
cmp
jnp
lods
idivb
jae
jp
pop
sar
adc
fwait
dec
dec
cmp
data16
ds
adc
cmp
add
cwtl
test
inc
cmp
in
lds
lods
std
mov
cmp
pop
push
pop
push
sub
cmp
xrelease
ja
or
fcmovbe
adc
and
stos
in
lea
xlat
cmp
cmpsb
ljmp
mov
and
out
nop
jb
jns
dec
fwait
xchg
imul
in
add
call
mov
jp
and
xchg
std
mov
cmp
pop
inc
fistpll
sbb
xchg
pusha
lea
lods
fisttpll
loop
adc
in
dec
cli
sti
test
shll
test
js
test
inc
aaa
mov
cmp
add
cmp
adc
sbb
sub
iret
pop
xlat
insl
xchg
mov
pusha
xor
cmp
pop
cmpl
call
cwtl
sbb
mov
addl
loope
stc
div
cmp
scas
icebp
xchg
xor
cltd
and
xchg
mov
xchg
mov
inc
fsts
andb
sub
push
xor
call
ret
fisubl
cwtl
es
sub
jae
sti
cmp
ret
cmp
cwtl
mov
and
pop
jmp
xor
fistpl
cmp
or
bnd
inc
bound
xchg
xchg
fnsave
jmp
cmp
notl
cli
fwait
pushf
cmp
sbb
test
cmp
movsl
insb
popf
xor
outsl
dec
cmp
push
lock
insl
gs
aam
movsl
jmp
popf
aaa
in
cmp
repnz
xchg
inc
cmpsb
sub
mov
sar
mov
sub
sbb
outsl
lods
cmp
xchg
pop
mov
mov
or
jecxz
fsubr
mov
movsb
pop
call
pushf
shrb
push
lods
cmpb
jg
std
push
dec
mov
cmp
adc
sub
cmp
gs
adc
aad
dec
jb
call
cmp
stos
and
xor
cmp
aaa
lds
mov
gs
mov
mov
xchg
outsb
fbld
or
test
push
and
mull
mov
lret
xchg
daa
pushf
stc
mov
jnp
sub
cmp
pop
cmp
inc
mov
cmp
arpl
int3
fs
mov
cmp
push
dec
adc
cmp
mov
xchg
jb
mov
mov
xor
dec
mov
insl
pop
cmpsl
sbb
rclb
cmp
gs
push
bound
insl
cmp
mov
cmp
add
int
xor
xchg
stos
adc
jnp
lds
test
sub
mov
cmp
or
insb
mov
push
pop
pop
mov
xchg
jne
jge
cmp
sub
and
arpl
cmp
icebp
add
add
mov
cld
cmpsl
cmc
pop
das
ljmp
in
mov
test
pop
cmp
fnstcw
inc
orb
jns
adc
repz
repz
push
fwait
lods
pusha
inc
cmp
pop
stos
and
arpl
aad
add
cltd
mov
push
inc
xchg
push
cmp
call
adc
cmpsl
jmp
int3
cmp
sbb
push
mov
cmp
aad
pop
in
jno
scas
or
aam
ret
icebp
push
mov
adcl
pop
cmp
or
jns
xchg
cmp
xor
mov
jecxz
push
cmp
arpl
xor
lock
cmp
daa
push
sbb
jno
cmp
sbb
xor
jne
lret
jae
aad
cmp
shlb
lds
inc
cmp
sbb
sarb
ret
cmpsl
popf
test
and
cmp
inc
sub
sti
aaa
pop
jmp
and
push
push
in
pusha
dec
sbb
arpl
call
in
jb
push
enter
cmpsl
cmpl
jecxz
cwtl
popa
cmp
enter
lods
xor
and
or
adc
lds
ljmp
jmp
lret
mov
sub
es
sarb
sbb
lret
cmp
stc
je
bound
lahf
mov
cmp
and
inc
mov
sahf
cmp
ja
jl
pop
inc
add
cmpsl
sub
mov
aaa
sbb
adc
std
mov
sbb
outsb
sbb
xchg
xchg
pusha
pop
scas
testb
enter
jmp
loopne
sarl
dec
and
add
push
rcr
lods
add
jb
dec
js
ret
xor
iret
nop
sbb
lcall
subb
cmp
mov
sbb
addr16
inc
fimuls
cmp
data16
xor
pushl
push
ss
inc
push
pop
call
mov
cld
mov
pushf
lahf
sahf
mov
les
pop
sub
es
nop
lock
sbb
and
lods
mov
negb
int
jl
jnp
sbb
push
das
mov
call
cmp
scas
add
sbb
in
lea
xchg
push
and
pop
std
sub
mov
xor
gs
into
xor
jnp
cmp
rep
cmpsl
rolb
inc
inc
lret
cmp
adc
fwait
push
inc
xor
jl
cmpsb
adc
fnstcw
out
inc
sbb
stos
std
mov
pop
insl
je
jne
push
pavgw
and
cmp
ret
pop
sub
sub
sbb
mov
cmp
sbb
xor
inc
das
adc
cmp
ja
cmp
jne
xchg
imul
hlt
cmp
movsl
ffree
pop
add
push
testl
ficoms
mov
mov
cmp
adc
sub
or
add
cmp
mov
les
cltd
lahf
lds
jae
pop
data16
sbb
inc
jo
ret
mov
inc
push
inc
inc
out
jge
mov
loopne
in
out
xchg
movsl
repnz
aaa
cmpsl
mov
adc
jo
and
jp
push
cmp
je
push
pop
aad
mov
adc
bound
cmpb
mov
lea
loop
pop
and
cmp
add
and
dec
pop
and
pop
pop
nop
in
inc
aam
push
push
sti
rclb
sti
adc
jl
dec
mov
and
decl
mov
fbstp
loope
outsl
movsl
movsb
sbb
aad
push
cli
pop
mov
cmp
mov
data16
cmp
out
push
andb
sub
jbe
gs
and
shl
mov
sub
dec
push
xor
std
mov
sbb
cmp
sbb
nop
idivb
data16
rcr
jmp
aam
repz
data16
push
jnp
jae
lods
and
mov
cmp
mov
mov
jge
scas
push
sub
loop
loopne
fwait
call
stos
js
cmp
sbb
jmp
sub
je
imul
mov
in
fcoms
cmp
jecxz
dec
rcrw
add
fadd
cmp
fdivr
add
pop
lods
and
xchg
enter
subl
mov
mov
in
fildl
push
cmp
pop
or
cmp
test
shld
inc
scas
sarb
dec
leave
add
cmp
mov
je
pop
cmp
xchg
dec
ret
mov
adc
dec
mov
mov
inc
jo
pop
lret
bound
cmp
adc
sub
push
jne
mov
loope
sarb
cmp
andb
popa
cmp
sub
nop
pop
enter
cmp
push
lret
xchg
ljmp
lcall
inc
scas
dec
cmpsl
push
pop
mov
sbb
or
or
stos
cwtl
hlt
cmp
movsl
in
std
sub
aam
mov
cmp
mov
jle
cmp
adc
fldcw
mov
pushf
push
out
sbb
sbbl
cmp
mov
lock
xor
cs
stc
adc
or
fcomps
and
sbb
lcall
lds
or
call
imul
ret
mov
cmp
sti
inc
xor
cmp
std
push
roll
sahf
mov
sbb
cmp
cmp
xchg
insb
lret
insl
xor
ss
ljmp
sub
test
mov
andl
pop
ficoms
push
jmp
sarl
das
scas
ljmp
add
mov
addb
stc
sbb
out
inc
jecxz
lds
aas
rorb
pop
xchg
fisubrl
adc
and
in
test
jo
aas
mov
xchg
lods
test
ds
adc
jg
mov
pop
int3
sbb
imul
shrl
inc
cmc
adc
in
fsubrs
fsubrl
cmp
inc
aaa
repz
push
mov
xchg
leave
xchg
cmp
cmp
ror
cs
loope
retw
push
xor
inc
icebp
push
hlt
lret
sbb
inc
fcomi
mov
stos
in
fbstp
hlt
loop
scas
jo
lods
push
xor
mov
inc
mov
mov
inc
popf
sbb
jne
cmp
cmpsl
test
data16
aaa
jnp
cld
pop
cmp
mov
mov
add
cmp
push
or
sub
aas
mov
inc
adc
fnstcw
adc
ret
sub
xchg
clc
or
pop
adc
jne
add
lea
inc
inc
xchg
push
sub
mov
into
and
push
pop
push
pop
cmp
xchg
inc
cmp
jnp
cmp
stc
repnz
ret
bound
sub
mov
pop
jg
dec
pusha
js
cmp
lods
xchg
insl
test
divb
fiadds
cmp
mov
cmp
les
or
nop
add
loop
fdivrs
icebp
gs
mov
xchg
into
stos
cmp
arpl
out
pushf
cmp
mov
mov
pop
test
sarb
add
push
mov
mov
dec
mov
out
push
es
jmp
xchg
push
pop
mov
js
fcomps
incl
push
cli
nop
xchg
cmp
cmc
or
sti
das
mov
jo
in
cmp
bnd
sub
and
sbb
pop
lods
mov
or
xchg
mov
jmp
jbe
cmp
sub
mov
int
out
sbb
lods
nop
cltd
adc
ficoml
cmp
outsb
addr16
and
cmp
or
int
cmp
adc
shlb
shrb
mov
jnp
pop
adc
daa
mov
mov
or
and
mov
jns
lret
cmp
cmp
lahf
push
shlb
sub
xchg
adc
cmp
jmp
dec
cmp
push
bound
insl
jae
or
or
pop
ret
repz
cmp
in
push
inc
mov
adc
dec
stos
test
out
cmp
xchg
insl
xchg
rclb
mov
jle
and
cmp
xchg
in
or
into
xor
cmp
pop
or
fldl
jmp
sbbl
push
mov
jns
inc
cmp
cltd
test
or
adc
negb
mov
mov
cmp
mov
or
into
cmp
add
es
or
xchg
dec
cmp
sbb
cmp
mov
cmp
out
add
cmp
jle
cltd
cmp
or
and
cmp
aaa
divl
cmp
loopne
aad
inc
fs
push
cmpsl
lret
bound
pop
cmp
lea
cmc
cmp
outsl
insb
pop
cmp
push
aaa
sub
push
or
cmp
cmp
arpl
lea
mov
jno
cmp
ss
cmp
insl
in
adc
xchg
mov
es
push
mov
cmp
add
lret
adc
or
fdiv
lahf
mov
cmp
xchg
mov
adc
cmp
sub
jmp
popf
in
push
out
inc
shlb
inc
js,pt
int
repz
int3
fs
lea
movsl
inc
pop
mov
xchg
pusha
in
aas
cmp
push
lahf
mov
sti
stos
clc
cmp
js
fcompl
push
sbb
lahf
mov
mov
cmp
enter
repz
add
pop
lods
shrl
cmp
pushf
mov
sti
out
insb
xchg
fnstsw
adcl
popf
push
inc
outsb
xlat
lea
jge
stos
insb
fdivrl
jg
pop
sahf
mov
jle
cmp
test
loopne
lods
sub
dec
out
cmp
dec
mov
fistl
xchg
fwait
xchg
ljmp
adc
cmp
mov
loope
and
insl
insb
dec
sbb
cmp
jb
dec
fisubrl
fildll
dec
std
ret
dec
cmp
add
mov
pusha
cmp
inc
cs
push
xchg
call
outsb
xchg
in
pushf
mov
adc
cwtl
imul
pop
aam
std
cmp
mov
fwait
call
into
pop
cmp
cld
cmp
jo
mov
cmpsb
decl
cmp
loope
fcomps
mov
daa
shll
xlat
inc
out
jne
pop
cmp
addr16
popf
sub
cmp
xchg
inc
cmp
xchg
lret
sub
scas
push
shlb
enter
mov
pop
fdivp
xchg
aas
or
shl
mov
xlat
push
mov
mov
cmp
lret
shl
cld
lcall
stc
mov
pop
insb
mov
mov
repz
sub
jne
xchg
cmp
movsb
inc
push
inc
gs
sbbl
and
das
adc
mov
shr
jecxz
shlb
dec
add
pusha
add
mov
cmp
pop
cmpsb
pop
mov
jb
sub
cmp
loopne
aaa
xorl
ljmp
in
cmp
mov
cld
imul
fdivs
jp
jp
loopne
push
xor
cmp
pop
fidivrl
inc
aas
jae
xchg
gs
xor
or
dec
cld
push
ds
sti
jl
in
inc
push
mov
xchg
not
dec
data16
xchg
sbb
jp
sbb
jbe
call
cmp
cmp
mov
adc
pop
mov
mov
test
fxch
xor
ds
mov
xor
lods
cmp
mov
xor
ds
dec
cwtl
loop
inc
push
sbb
cs
inc
xchg
fwait
jle
aad
sbb
outsb
lahf
fsubrs
mov
call
aam
cmp
jecxz
in
xor
aas
fs
inc
and
sti
dec
mov
lret
sub
or
mov
out
inc
cmp
daa
or
and
pop
xlat
out
xor
cmp
cmp
xchg
xor
lret
dec
and
out
cmp
cmp
mov
loope
jle
and
ss
clc
lock
mov
xor
mov
xor
xor
mov
sti
jo
cmp
rcrb
jle
xchg
cmp
mov
sub
xor
add
dec
xor
hlt
hlt
sbb
ss
dec
jmp
pop
sbb
mov
lock
adc
dec
mov
insl
shll
add
dec
sti
outsb
mov
push
dec
mov
add
xor
pop
icebp
bswap
imul
push
mov
dec
rcrb
inc
mov
mov
push
shrl
sbb
sbb
sbb
cmp
add
call
loop
cmp
cmp
sbb
xor
xor
dec
ds
push
pop
dec
inc
mov
mov
in
cmp
movsb
cmp
sahf
cmp
dec
sbb
sbb
movsl
cmp
cwtl
pop
mov
inc
pop
mov
fiadds
inc
add
adc
xor
stos
dec
mov
or
dec
arpl
jecxz
and
pop
xchg
jp
cwtl
js
lcall
hlt
mov
out
clc
xchg
push
push
xor
mov
arpl
add
cmp
pop
or
scas
stos
pop
cmp
cmp
out
or
cmp
sbb
xchg
push
sub
sarb
add
dec
jmp
ret
hlt
or
mov
bound
jns
loop
ds
loope
inc
mov
xor
cmp
js
lods
int3
out
mov
lret
ds
enter
jp
jle
js
subb
mov
push
fimuls
mov
inc
sub
xor
xor
jecxz
inc
dec
xor
mov
popa
dec
or
mov
sbb
aam
daa
std
sbb
adc
inc
inc
adc
lds
push
sub
ss
cmp
shll
ljmp
cmp
adc
mov
jle
mov
mov
insb
test
sbb
outsl
sbb
push
pusha
loopne
inc
xchg
cmp
push
js
mov
clc
xor
fcoms
pop
cmp
sbb
jl
pop
mov
fdivp
aas
out
push
cmp
jo,pn
je
stos
jle
push
push
push
push
push
outsb
mov
mov
enter
nop
cmp
cld
repnz
testb
mov
xor
cltd
dec
dec
pop
sbb
jg
rcrb
rcrb
rcrb
rcrb
std
outsl
or
mov
shrb
or
mov
js
test
and
aam
js
mov
xchg
ss
cmp
sbb
cmp
mov
dec
jl
sahf
jp
adc
push
stc
jo
lods
lret
test
insl
mov
outsl
arpl
shl
lods
cmp
pushl
cmc
cmp
dec
xor
gs
test
jmp
enter
or
addl
cmp
jmp
add
int
call
cmc
cmp
rcll
notl
cmpsb
mov
fstps
out
stc
cmp
notl
push
inc
cmp
add
jmp
push
add
repnz
and
cmp
inc
js
in
or
xchg
test
mov
fs
xchg
pop
rorl
out
out
cmp
adc
cmpsl
cmp
xchg
pop
xchg
add
jp
ss
mov
adc
xchg
test
xor
imul
adc
outsl
inc
lea
mov
ljmp
cwtl
cmp
std
adc
cmp
repz
jbe
push
sbb
pop
mov
stc
les
lock
cs
cmp
add
or
cmpb
jmp
mov
cmp
repnz
add
scas
js
xchg
lods
mov
hlt
lret
enter
pinsrw
test
sub
movsl
cmp
outsl
xchg
sub
adc
sarb
or
xchg
add
inc
loope
data16
cs
cmc
es
mov
or
mull
into
mov
adc
xor
insl
xchg
lds
in
jb
cmp
fsts
sar
mov
mov
cmp
mov
inc
out
cmp
test
js
add
test
out
bound
jo
pushf
out
gs
push
xor
imul
dec
stc
test
xchg
jnp
push
das
xchg
lods
and
test
sarl
insl
push
hlt
pop
pop
cmp
push
push
and
in
mov
fistl
popa
pop
ret
clc
call
mov
jle
sub
pop
xor
orb
jl
ret
xor
jle
jle
sahf
cs
mov
ret
std
and
fwait
jmp
cltd
cmp
xchg
push
test
int
push
ret
add
imul
xchg
sbb
cmp
xor
lret
dec
push
dec
push
je
ror
daa
push
pop
xlat
sub
pop
push
jns
mov
adc
inc
xor
cmpsl
fdivs
push
jp
mov
mov
xor
pop
in
push
mov
pop
repz
add
repz
mov
xor
lods
sarb
jo
xor
mov
sub
aam
mov
mov
ss
push
loopne
xor
sti
jnp
inc
xor
xlat
push
fisubrl
je
adc
dec
popf
xor
pop
sub
mov
dec
add
fwait
lcall
je
adc
bound
adc
inc
repz
add
mov
rol
aaa
mov
dec
xor
mov
outsl
mov
mov
pop
es
int3
ss
js
repnz
and
xor
push
jg
jb
and
jle
mov
jle
mov
xchg
jg
call
and
adc
inc
add
dec
ds
push
jb
pop
push
arpl
nop
movsl
push
sbb
and
xor
sbb
push
arpl
jmp
cmp
pop
jecxz
jae
cmpsb
sbb
ja
jb
ficomps
sub
ljmp
xor
push
adc
dec
add
in
test
inc
cmp
or
xorb
xlat
mov
ror
pop
xlat
icebp
mov
sub
xor
mov
mov
mov
aaa
jb
xor
jl
sbb
pop
push
out
mov
mov
lds
jl
gs
and
xor
cmp
syscall
in
je
cmp
test
bound
lods
cmp
icebp
shlb
jmp
cmp
dec
lock
montmul
cmpsb
add
rolb
push
ficoms
sbb
int3
cwtl
pop
filds
mov
mov
push
sub
es
stc
add
cmp
insb
mov
scas
scas
fs
pop
sub
aas
push
sub
les
mov
leave
icebp
jmp
add
cmpsb
jb
sahf
data16
imul
imul
lock
inc
mov
dec
fcmovnb
daa
jo
cmp
out
movsb
jmp
cmp
je
fstpt
sbb
inc
frstor
rcl
add
daa
add
pop
mov
pop
icebp
cmp
aad
movsl
ror
fisttpll
hlt
mov
or
pop
setbe
scas
jnp
dec
push
jb
push
jp,pn
cmp
mov
jnp
repz
dec
nop
or
dec
inc
bound
das
and
decb
mov
cmp
push
xchg
pop
imul
inc
cmp
jp
idivl
add
jecxz
cmpl
fisubrl
xlat
jb
push
jl
xchg
pop
test
sti
dec
lretw
cmp
cmp
inc
cmp
test
cmp
push
ljmp
xchg
fndisi(8087
cmp
jne
mov
pushf
addr16
insb
aam
cmp
fstpl
pop
call
lods
cmp
mov
es
inc
mov
push
mov
mov
xlat
push
cmp
mov
daa
mov
mov
sub
or
lret
mov
lods
das
dec
cmpsb
mov
xchg
aam
jns
fwait
mov
pop
sbbl
mov
sub
jb
pop
jp
inc
dec
fwait
dec
jmp
pop
gs
call
xor
pop
xor
andl
cmp
int3
push
insb
aas
scas
and
inc
pop
fildl
pop
std
sbb
xlat
shlb
cmp
scas
lock
adc
push
cmp
inc
fdivl
addl
bound
sbb
dec
mov
cmp
jp
nop
fdivrl
jno
int3
shlb
or
mov
test
sti
sahf
adc
das
inc
out
pop
sbb
mov
add
jle
mov
mov
popa
mov
lea
mov
fwait
cs
mov
adc
push
js
add
push
adc
sub
cwtl
and
mov
pop
shlb
fwait
scas
xor
push
dec
adc
cli
and
adc
gs
cmp
lea
adc
inc
sti
sub
pop
sarb
jge
ss
cmp
insl
out
sbb
ret
push
movsl
xchg
xchg
xor
lea
ds
shlb
cmp
ret
mov
mov
xchg
clc
lahf
imul
jmp
test
xchg
push
cmp
jge
and
incb
in
fwait
aas
test
push
dec
inc
das
in
push
sbb
xchg
pop
out
sbb
aad
inc
stos
sbb
lods
je
mov
shlb
aam
mov
mov
mov
cltd
cmp
sti
cmp
xor
inc
sbb
fidivl
stc
loope
and
xor
sti
mov
push
inc
dec
in
stc
jecxz
fnsave
adc
sbb
repz
mov
add
jae
dec
pop
mov
add
pop
sbb
dec
inc
and
pop
test
gs
icebp
xchg
ss
lret
sbb
jbe
enter
xor
sub
cmp
stos
mov
jge
dec
jl
mov
sbb
lret
repnz
fcomps
mov
jl
jmp
mov
inc
mov
inc
cmp
xor
xchg
sti
sti
sub
and
mov
jb
mov
js
mov
or
push
jbe
jl
jp
push
dec
shl
and
pusha
adc
mov
jmp
les
lcall
bound
cmp
or
adc
lret
sahf
jb
dec
or
adc
insb
lret
cmp
in
mov
jle
xor
mov
inc
cmp
sbb
bound
cwtl
adcl
je
iret
mov
fnstcw
push
lret
push
sbb
dec
cmp
push
sbb
mov
jb
cmp
stos
mov
mov
out
mov
mov
mov
or
cmp
push
cmp
jp
adc
sarb
xor
mov
or
mov
outsb
mov
jb
push
dec
inc
arpl
sbb
lds
cmp
fwait
mov
push
inc
fmuls
dec
fisubrl
rol
sbb
sbb
pop
lcall
sub
inc
mov
dec
push
std
aas
adc
push
inc
mov
push
sbb
sub
dec
inc
popa
mov
shll
or
jb
sub
arpl
ret
and
dec
adc
lret
inc
test
push
stc
sub
jmp
mov
xchg
adc
xchg
push
ss
push
sub
fwait
iret
add
mov
add
sahf
adc
fildll
inc
sub
decl
movsb
in
cmp
ss
enter
sub
sbb
jge
data16
ret
push
push
out
add
sarb
dec
lret
mov
fiaddl
ds
jecxz
sbb
js
movsb
dec
shlb
dec
inc
in
jo
lret
enter
ds
push
jbe
xchg
aam
dec
mov
cmp
or
push
loope
lcall
negl
pop
int3
lret
ret
rcrb
pop
pop
xor
mov
stos
pushf
dec
sub
pushf
sbb
lret
push
sbb
clc
dec
stos
mov
ds
xor
sbb
sub
jbe
mov
add
shll
mov
lods
sahf
dec
in
loope
xchg
xor
jo
out
shlb
pop
js
jle
jl
ret
mov
xlat
mov
lahf
sarl
sbb
sbb
cwtl
in
push
sbb
dec
dec
addb
ljmp
arpl
jp
push
or
sub
pop
pop
mov
clc
out
push
fs
jp
xor
xor
push
bound
and
mov
and
adc
call
ficomps
push
out
and
jb
adc
lock
pop
add
and
cmp
movsl
or
fidivl
cwtl
jo
sub
lret
test
int3
sbb
dec
test
jb
inc
dec
enter
bound
adc
jbe
adc
mov
cli
mov
lret
mov
push
rcrl
inc
hlt
test
outsb
stos
iret
in
cmp
pop
fwait
and
cwtl
dec
dec
int
adc
loopne
mov
cli
sbb
inc
into
ret
adcb
sbb
mov
scas
into
mov
rolb
sub
bound
adc
push
stos
into
mov
mov
mov
pop
xchg
cmp
sbb
dec
and
sbb
adc
adc
dec
imul
xor
push
jb
mov
and
mov
cmp
in
xchg
or
push
fiadds
pushf
dec
xor
add
fimull
fisubrl
mov
inc
ret
mov
sarb
sub
mov
and
dec
lahf
test
ficompl
mov
mov
jle
dec
mov
push
jecxz
xor
loope
jb
loop
and
adc
adc
and
jecxz
add
lcall
dec
cli
pop
jl
pushf
xchg
sbb
ja
bound
and
and
jno
fdivrs
lcall
mov
or
pop
sub
add
fcomps
les
sub
and
sub
xchg
out
in
adc
mov
popf
loop
jbe
pop
jnp
sbb
sbb
cli
out
jb
mov
adc
sbb
dec
mov
adc
push
xor
imul
pop
sub
jp
xor
xchg
xor
inc
imul
cmp
je
lods
xor
arpl
xchg
fwait
sbbb
sbb
add
leave
mov
test
mov
cmpsb
push
xchg
das
pop
and
stc
xor
push
icebp
leave
mov
jg
lahf
cmpsb
add
pop
lret
into
lahf
pop
push
fwait
repz
mov
add
arpl
fwait
adc
inc
fwait
lahf
xor
push
dec
push
mov
add
arpl
or
sbb
fidivs
ss
jecxz
mov
and
xor
hlt
fidivl
mov
js
sbb
ret
add
outsb
sbb
scas
sbb
arpl
repnz
mov
sub
jae
and
in
ss
sbbb
jne
sub
jb
and
ss
fwait
pop
xor
pop
push
xor
mov
sub
add
mov
push
mov
lcall
mov
sbbb
sahf
or
sbb
sbb
xchg
jo
cmp
adc
jb
jnp
sbb
in
xor
dec
and
inc
sarb
ds
xor
mov
and
add
shll
jno
fstps
sbb
arpl
push
dec
adc
movsb
cmp
iret
adc
out
sub
lds
and
mov
gs
xorb
sbb
les
orb
mov
push
ss
ss
bound
or
in
adc
push
pop
mov
rcr
jecxz
xor
xor
pop
add
mov
and
mov
dec
inc
imul
add
repnz
cmp
mov
inc
sbb
xchg
dec
jb
mov
sub
xor
ret
sahf
mov
out
and
enter
xchg
hlt
sbb
pop
in
and
adc
dec
cmpsb
and
mov
je
rorb
shlb
mov
jo
lcall
dec
sbb
mov
pop
and
es
xchg
iret
arpl
pop
mov
push
mov
push
repz
or
outsl
lcall
add
or
or
mov
mov
mov
mov
cmp
mov
fdivs
sbb
jo
push
jb
sub
dec
mov
xorb
int3
jb
xchg
push
xor
sbb
mov
jl
es
fstps
fsubrp
lcall
or
outsl
mov
cmp
mov
inc
add
push
fdiv
stos
sti
dec
loope
les
add
mov
fimull
xchg
shlb
and
aas
add
test
inc
cltd
pop
mov
cmpl
fistl
test
lahf
mov
ljmp
adc
leave
pop
mov
mov
das
sub
lahf
lods
pop
pop
push
and
scas
push
or
adc
into
mov
test
bound
jae
push
jb
cwtl
ret
jae
xchg
adc
sbb
pop
jae
dec
sbb
gs
add
movhps
mov
inc
xor
mov
mov
adc
sub
stc
das
iret
push
jle
iret
or
nop
sbb
inc
mov
or
int
hlt
stos
lahf
inc
lret
dec
mov
pop
cmpsb
dec
mov
inc
xor
sub
cli
dec
lcall
add
inc
out
cmp
jae
add
bound
dec
fidivl
lret
xchg
inc
sub
aas
dec
inc
ss
sti
push
or
mov
and
push
icebp
js
xor
es
sbb
adc
pop
push
mov
jnp
sub
sub
fisttps
adc
add
cmc
repnz
in
mov
xchg
or
cmp
shl
loop
sarl
jle
repnz
adc
scas
jecxz
ds
mov
xor
adc
mov
testl
lcall
sar
add
jle
cmpsl
dec
pop
and
cmp
and
xchg
rorl
add
bound
or
push
dec
sbb
push
ljmp
out
mov
repz
cmp
sar
inc
pop
sub
into
xor
pop
ffree
mov
xor
jae
lods
xchg
cmp
outsb
bound
pop
mov
sbbb
sbb
pop
mov
std
add
mov
data16
mov
fcmove
cmp
adc
adc
jne
outsb
and
xchg
xor
aam
mov
sub
xor
mov
sub
dec
addr16
or
jnp
stos
icebp
repz
pop
add
sbb
pop
sub
xchg
xor
or
movsl
lock
lret
ds
lret
call
cli
dec
sub
ja
sub
daa
jns
mov
jb
lock
movsl
inc
pop
sub
inc
add
in
fimull
and
jb
sbb
pop
xor
mov
jbe
cmp
mov
imul
stc
popf
outsb
add
cmpb
mov
popa
dec
cmpsl
cld
sbb
test
pop
movsb
mov
sub
fsubrs
mov
push
pushf
jo
pushf
jo
mov
mov
leave
add
adc
inc
xor
xchg
cltd
sbb
cmpsb
mov
mov
rolb
mov
push
or
fstpt
dec
mov
mov
xchg
dec
add
or
cwtl
test
ds
in
lds
sub
lea
stc
sub
lcall
ss
push
pop
jbe
pop
jns
repnz
xor
adc
ss
inc
orb
sub
stos
orb
stos
mov
xchg
cmp
jecxz
sbb
xchg
cmp
ret
add
mov
sbb
hlt
repz
cs
sbb
cli
adc
aas
cld
mov
repz
fcmovne
sub
inc
loop
adc
sub
cltd
xor
pop
out
fsubp
mov
jle
cwtl
pop
sub
adc
and
in
push
ljmp
xchg
into
mov
adc
ljmp
sub
sub
dec
and
pusha
clc
cli
dec
ret
push
enter
cli
ret
xor
pop
insl
cmp
jecxz
repz
lahf
shr
inc
test
mov
loope
enter
pop
push
fdivrs
imul
aaa
mov
ljmp
rol
incl
hlt
dec
and
rsm
std
mov
push
ret
sbb
dec
shll
lea
jbe
jge
jge
sub
push
add
sbb
sbb
in
pop
push
fidivl
mov
xor
pop
mov
dec
repnz
pushf
jg
dec
aaa
lcall
arpl
mov
mov
faddp
jns
dec
cli
mov
gs
inc
in
fisttpll
es
and
adc
dec
mov
sub
add
imull
iret
addr16
jp
outsb
in
bound
in
and
push
cmp
mov
sarb
into
cs
push
imulb
cmp
ret
jmp
aaa
mov
push
inc
sub
insb
dec
fidivrl
shl
shll
out
cmpl
shr
mulb
push
dec
mull
shl
aas
bnd
push
mov
xchg
pop
and
hlt
mov
jle
sbb
sub
dec
xchg
lret
dec
pop
lcall
sbbb
fiaddl
or
sahf
sbb
clts
out
push
cmp
es
xchg
jg
inc
js
bound
repnz
jle
gs
jo
push
fcomps
in
pop
and
sbb
jns
xchg
iret
or
xchg
push
inc
mov
std
and
int
les
pop
dec
stc
jbe
jle
notb
jno
daa
clc
sub
cmp
mov
movsb
adc
cwtl
sbb
add
leave
aam
and
dec
cmp
or
push
outsb
sub
fidivrs
cltd
into
adc
and
push
ja
test
mov
inc
bound
xchg
test
jno
loop
and
ja
lahf
sahf
stos
mov
fmul
mov
xchg
add
popa
jecxz
dec
cmp
lahf
icebp
push
rcrb
repz
jp
jecxz
cmpsb
popa
dec
sbb
stos
sbb
ret
jle
mov
idiv
sahf
push
pop
xchg
sbb
sub
lods
shlb
sahf
xor
jb
stc
out
hlt
pop
les
jno
adc
push
mov
mov
outsb
fisttps
bound
call
bound
sbb
dec
sub
push
test
xor
sbb
adc
and
fbld
cmpsb
add
dec
lret
adc
cmp
int3
stc
icebp
xor
aaa
das
shrb
adc
popa
or
ljmp
push
mov
cli
sbb
int
pop
clc
dec
push
fdivr
xchg
leave
fwait
or
repnz
daa
sbb
fwait
call
je
dec
cs
dec
lea
in
jle
inc
xchg
jp
mov
lret
dec
sbb
dec
prefetcht0
jl
jb
test
insb
dec
std
mov
sti
dec
mov
xchg
sbb
and
add
mov
or
js
mov
divb
dec
ljmp
mov
pop
shll
ret
adc
sub
and
mov
mov
outsb
mov
xor
mov
adc
push
ret
in
shl
dec
cmp
dec
xchg
insb
cwtl
dec
push
xor
sub
jae
pop
sti
je
lret
stos
out
xor
jb
cmp
fidivl
or
in
outsb
push
dec
push
nop
out
mov
lcall
xchg
mov
rorb
push
inc
mov
push
xchg
xor
mov
fmuls
or
inc
sub
adc
lret
pop
jb
jbe
inc
fcmove
fdivs
repz
jbe
push
jb
sub
inc
adc
es
xchg
int3
adc
in
dec
push
adc
repnz
ljmp
ss
adc
inc
jp
pop
gs
xchg
repz
mull
shrb
ljmp
mov
sbb
push
test
sbb
adc
or
sbb
push
jl
sbb
flds
sub
insb
cmpsl
jnp
cmp
enter
jb
ret
inc
or
mov
mov
pop
sbb
sub
push
ss
add
mov
jb
add
adc
xor
adc
cli
pop
scas
dec
rclb
pop
mov
mov
bound
push
or
xor
repz
outsb
jmp
adc
jne
mov
sub
pusha
sub
lcall
dec
inc
mov
ja
mov
sbb
or
dec
es
jmp
into
mov
sbb
mov
inc
js
repz
xor
sar
scas
into
cltd
cmp
repnz
in
dec
subb
rolb
sbb
push
add
adc
rcrl
jb
dec
pop
stc
xor
mov
dec
clc
fstpt
xor
and
jl
out
inc
sbb
lcall
push
pop
jmp
mov
inc
mov
dec
cld
mov
dec
and
mov
insb
mov
jp
ljmp
mov
sub
and
jp
inc
jp
ljmp
jmp
xchg
jl
cmpsb
add
cmp
test
cmp
mov
inc
and
rorb
jle
orb
sarb
or
dec
stos
xchg
ficoml
cli
cmp
lahf
mov
iret
test
adc
es
int3
sub
xor
add
dec
xchg
push
jmp
in
jl
xchg
rcrl
fidivrl
je
adc
jnp
inc
jo
loope
xor
rcrb
xchg
cmp
jae
jl
pop
cmpsb
add
aad
adc
jmp
test
pop
sbb
fimull
mov
subb
les
adc
jl
jno
dec
paddusb
pop
les
adc
std
lret
int
add
mov
cmpsb
mov
jl
and
dec
out
inc
cmpsb
xchg
ffreep
sbb
nop
das
push
push
mov
sub
aaa
stc
test
jp
aas
inc
mov
jmp
jge
les
pushf
movsb
xchg
sbb
push
in
lahf
mov
mov
pop
adc
jns
xorl
pop
xchg
cmp
jp
and
xor
cmpsb
sahf
mov
rcrl
dec
ret
sti
int
cmp
cmpb
dec
arpl
mov
int3
ret
lock
lock
aaa
outsb
mov
scas
aaa
in
ss
dec
ds
push
lret
inc
push
stos
jo
in
push
roll
daa
ret
shlb
loopne
push
cmove
pop
add
test
cwtl
xchg
je
mov
pop
push
test
xlat
adc
pop
lcall
loop
mov
call
mov
inc
in
mov
into
incl
mov
test
mov
jae
adc
lret
dec
jge
stos
in
and
out
ljmp
or
sbbb
mov
repnz
es
xchg
add
outsb
sbb
bound
sub
xor
loope
xor
divb
mov
mov
addl
iret
cs
jb
inc
lcall
push
sub
and
mov
int
stos
fildll
jnp
movsb
jle
mov
addl
push
adc
xchg
ja
lods
xchg
inc
aam
lcall
ret
je
test
xor
xchg
adc
movsl
xor
fistps
ret
jg
xor
xchg
xchg
into
dec
popa
cmp
dec
movsb
push
adc
sub
sbb
mov
pop
sbb
js
into
jmp
mov
mov
adcl
lock
sbb
push
repz
adc
roll
xchg
mov
int
mov
outsb
fistl
add
lret
pushf
xchg
es
dec
sbb
es
test
and
add
mov
in
pusha
push
add
sbb
into
dec
sbb
add
jo
pop
movl
push
jae
nop
sbb
mov
hlt
inc
in
jl
call
xor
jp
cmpsb
jnp
shrb
inc
mov
inc
pushw
mov
loope
xchg
jl
push
sbb
mov
stos
repnz
pop
and
insl
ss
mov
or
cmp
inc
into
add
cs
mov
xor
push
aas
lods
sarb
xor
repnz
subl
jae
dec
lods
ret
test
lcall
jecxz
jp
cmc
and
xchg
xchg
loope
fs
xchg
pushf
into
push
sub
mov
lock
repnz
scas
or
xchg
or
lods
movsb
jb
das
ljmp
dec
pusha
icebp
cmp
ret
sti
adc
xchg
fcoms
jb
jmp
sub
push
into
scas
sub
neg
fisttpl
rep
cli
dec
adc
mov
mov
or
stos
push
jb
sahf
xchg
sti
jae
sbb
decl
jbe
divps
push
jnp
sub
bound
cs
jmp
and
mov
and
xor
popl
nop
ret
push
push
lcall
jnp
xchg
fstpl
push
and
xor
mov
sub
pop
xor
outsb
mov
adc
in
les
pop
fimull
lock
pushf
shll
ror
lahf
sahf
imul
stos
adc
hlt
sbb
mov
lret
push
scas
lods
sbb
pop
test
mov
sbbb
adc
dec
ja
push
dec
rep
iret
push
rcrb
mov
mov
or
dec
shll
jl
out
sbb
jae
mov
and
js
aas
mulb
adc
addl
fistpl
aaa
sub
inc
xor
xchg
fwait
ljmp
es
sub
cmp
loope
fwait
sub
mov
mov
mov
pop
push
xchg
bound
lret
jle
jb
ss
adc
or
js,pt
test
cmp
fldcw
lcall
flds
xor
jecxz,pn
bound
sarb
push
mov
adc
xchg
mov
cld
adc
sbb
or
sbbb
int3
adc
popf
lods
dec
leave
jbe
inc
leave
sbb
fcomps
mov
cmp
mov
cli
dec
fs
imul
int3
lret
fcmovb
cwtl
adc
push
dec
push
jp
bound
ljmp
push
inc
sub
les
jbe
jo
xchg
ror
rclb
cs
andb
aaa
rcrb
inc
mov
test
shll
sbb
lret
data16
push
or
lret
repnz
scas
adc
lret
ss
fidivrl
lahf
adc
fcomp
je
add
cltd
std
cmpsb
push
mov
jl
repnz
mov
xchg
mov
and
push
pop
mov
mov
mov
mov
lock
sub
adc
push
mov
out
sbb
xor
into
adc
and
mov
sbb
jp
pop
lock
xchg
daa
loop
adc
mov
cmp
pop
mov
fadds
ja
and
cltd
jle
or
fimull
or
inc
pop
aam
xchg
sbb
pop
pusha
je
lods
mov
jge
test
ret
mov
cmc
inc
mov
pop
sbb
cmpb
test
sub
fimull
dec
adc
ljmp
sbb
push
les
or
mov
jns
mov
cli
push
mov
xorl
shrb
add
mov
xor
rcrb
les
and
pop
dec
cwtl
mov
stos
ljmp
mov
test
mov
sbb
jl
fsubrs
add
cmpsb
cmp
pop
lahf
or
push
dec
sub
sbb
daa
lahf
inc
in
and
rcll
jecxz
jnp
loope
pop
ds
mov
data16
mov
inc
mov
xor
je
or
jp
pop
repz
push
sub
cltd
push
mov
xchg
dec
or
out
repnz
shll
pop
jno
add
mov
or
sub
pop
jo
jmp
adc
shrb
jb
xor
mov
fcoml
sbb
jecxz
sbb
ds
push
shll
mov
jne
ret
test
pop
je
enter
pop
sub
je
int3
mov
xchg
push
shrl
into
cmp
pop
inc
outsb
and
inc
pop
mov
push
jnp
mov
inc
repnz
mov
dec
insb
ljmp
pop
mov
inc
ret
mov
and
hlt
push
orb
inc
add
add
mov
arpl
repz
fimull
xlat
jl,pn
arpl
enter
mov
and
fdivrl
pop
inc
xor
icebp
mov
sub
pop
push
cmp
addl
les
push
or
mov
lret
sbb
adc
sbb
jp
push
dec
jg
lods
shlb
rorb
xorb
ja
jo,pn
mov
push
outsl
jnp
push
shrl
ljmp
jb
sbb
nop
outsl
cmp
sbb
dec
push
xchg
je
pop
mov
dec
cli
sbb
cmp
in
or
cli
push
mov
sub
xchg
jo
mov
jno
incb
cld
pop
enter
lahf
fmull
and
inc
push
ds
rol
jl
repz
jo
jmp
adc
adc
lods
or
push
cmpb
or
int3
or
lock
mov
or
push
inc
jo
mov
mov
push
sub
out
aam
nop
adc
mov
push
jp
sub
aas
xor
xor
lods
sbb
pop
dec
mov
jnp
sahf
es
mov
push
cs
out
xor
sub
and
leave
sub
add
dec
fs
inc
leave
mov
dec
mov
repz
jne
sub
inc
adc
lret
add
dec
jo
jmp
test
sti
dec
mov
jnp
inc
loope
bound
add
mov
pop
push
add
push
or
jbe
dec
lret
dec
sub
dec
xor
shlb
test
jb
jne
clc
stc
pusha
js
ja
xor
mov
mov
push
test
mov
test
lret
pop
in
mov
add
lret
mov
dec
adc
sti
dec
testb
pop
adc
inc
push
add
adc
push
repnz
sub
push
fcoms
sbb
and
or
sub
bound
xchg
ffree
push
insb
dec
js
inc
xchg
outsb
dec
mov
sbb
push
push
pop
dec
mov
rcrb
lds
pshufw
in
push
xchg
rcrb
mov
push
mov
mov
sbb
testl
xchg
cmp
push
fstpl
lahf
inc
xchg
sub
sbb
mov
pop
js
push
repz
mov
imul
mov
xor
add
sub
ds
es
arpl
dec
xacquire
call
addr16
and
push
je
call
inc
sbb
das
pop
shr
mov
push
mov
inc
into
mov
stos
jle
ss
inc
xchg
sbb
lret
ljmp
je
and
mov
or
das
push
mov
clc
fisubs
push
push
add
inc
es
sub
mov
pop
es
sti
stos
or
jl
psubq
sub
jb
and
or
ret
lret
jne
or
sub
xor
xor
add
mov
and
mov
cmpsl
in
das
or
xor
pop
inc
xchg
add
movsb
pop
add
jo
test
or
js
imul
jecxz
mov
dec
mov
imul
jne
sbb
push
lret
dec
push
jbe
test
dec
shll
adc
jl
out
adc
sbbl
xor
or
xchg
and
negb
or
mov
xor
es
mov
dec
sub
daa
cmpsb
ds
mov
cmpsl
jmp
imul
jecxz
sub
sub
adc
nop
xchg
mov
mov
jl
mov
xchg
mov
dec
cli
shll
add
jp
and
ljmp
mov
xor
mov
sub
call
sub
or
out
inc
bound
dec
daa
nop
jae
test
lret
sbb
mov
xor
mov
in
loop
adc
mov
shl
push
sbbb
rorb
movsb
lret
arpl
inc
sbb
pop
mov
mov
fiaddl
and
and
sbb
and
enter
sub
icebp
push
push
test
push
mov
scas
loopne
inc
aas
fwait
xor
sbb
cmc
into
mov
loope
jge
sub
push
adc
sbb
adc
push
jbe
jmp
imul
jecxz
mov
inc
push
adc
pop
dec
jno
mov
sbb
addr16
or
ror
sbb
rcrb
push
adc
mov
and
sbb
pop
dec
sub
cmp
aas
xchg
mov
and
pop
int
movsl
and
bound
sub
rcll
push
push
push
push
dec
sbb
jp
cmp
int3
adc
pop
and
mov
mov
enter
sub
pop
xor
xchg
cmp
outsl
jno
lret
and
push
lahf
popa
pop
sbb
xchg
fdivs
inc
or
outsb
aaa
aas
shrl
scas
lods
push
xlat
xchg
mov
jmp
add
add
jbe
push
jb
pop
or
dec
es
dec
mov
push
fisubl
sub
mov
imul
xchg
mov
lret
and
mov
data16
daa
dec
icebp
adcb
daa
dec
icebp
mov
dec
icebp
mov
dec
icebp
mov
dec
icebp
mov
dec
icebp
mov
adc
mov
dec
movsl
jp
mov
adc
and
mov
add
bound
add
mov
inc
or
push
jmp
lret
shl
or
push
jg
and
add
out
xchg
xor
imul
mov
maxps
mov
xor
add
cmc
out
xchg
mov
fbld
sbb
adc
adc
fbld
fiadds
pop
jo
icebp
sbbl
jmp
rorl
dec
jl
xor
imul
push
sub
jbe
mov
push
dec
sub
sub
sub
dec
testb
mov
fcmovbe
inc
into
inc
xlat
icebp
sbb
es
dec
movsb
dec
xchg
out
dec
daa
addb
sahf
fmuls
push
adc
stos
push
rclb
jmp
mov
loop
and
scas
adc
div
and
jle
sub
push
sbb
mov
dec
or
lret
movsb
jecxz,pn
fbld
xor
push
rolb
fists
repnz
into
sub
cli
cmp
inc
inc
clc
and
push
jecxz
fs
bnd
push
jg
vmread
jae
sub
push
es
es
lcall
call
clc
aas
lds
mov
or
push
stc
mov
xchg
sbb
mov
and
dec
sahf
dec
and
inc
and
push
jp
adc
mov
rorb
repz
pop
sbb
lret
and
or
mov
call
hlt
jb
jle
lahf
xor
dec
xor
xchg
enter
mulb
push
jp
int3
imul
nop
jae
cmp
stc
jb
pop
mov
sub
imul
xor
loope
std
mov
xchg
sub
pop
dec
mov
mov
dec
js
jb
mov
add
pop
ja
inc
and
or
lret
inc
inc
mov
dec
lret
sbb
sbb
sub
test
outsb
jge
inc
jecxz
push
dec
lret
mov
sbb
or
sub
cmp
mov
xor
adc
push
jp
fwait
mov
test
fcoml
push
les
or
cltd
sbb
jo
bound
and
pop
stc
ret
cmp
stos
push
xchg
ret
mov
cmc
and
jle
shll
or
mov
ret
cmpsb
mov
mov
or
sub
jp
sti
incb
iret
jo
mov
add
out
push
out
jg
push
out
lods
aad
jns
fcomp
mov
push
add
popf
mov
xor
or
sub
inc
fidivrl
push
sbb
xor
mov
xor
cmp
mov
pop
fcoml
mov
push
test
pmaxsw
xlat
into
negl
jo
xor
jg
mov
daa
shlb
inc
adc
ret
jo
xor
sub
sbb
cltd
outsb
sbb
sub
xor
cmp
stc
dec
mov
push
jle
mov
lret
ljmp
fcmovnu
sti
addl
and
and
inc
xor
and
mov
adc
cmpsb
sub
outsl
fs
dec
sub
out
stos
push
dec
mov
jl
mov
ds
sbb
sub
mov
mov
jp
jne
cmp
mov
xor
dec
js
and
add
and
or
mov
inc
dec
or
add
les
jb
mov
clc
jns
repz
fsubs
ljmp
ja
loop
stos
and
adc
sub
xor
stc
stc
push
sbb
mov
dec
ret
push
push
add
lcall
pop
lock
mov
stc
pushl
inc
ficoms
movsl
loope
mov
pusha
mov
imul
bound
mov
stos
jb
push
dec
inc
xor
jp
push
pop
dec
rcll
inc
cmp
sub
dec
loope
nop
or
xor
stos
jo
jmp
insb
cmpsb
inc
mov
fsubs
or
lahf
jae
xchg
inc
sbb
cmp
arpl
ret
sub
xor
mov
xor
test
shlb
out
mov
ljmp
test
pop
in
jg
ja
mov
mov
loope
dec
inc
push
and
loop
cmpsb
ljmp
sahf
loope
add
bound
mov
push
dec
inc
dec
les
jl
cwtl
stos
adc
movsl
adc
dec
dec
pop
jl
jo
inc
out
mov
sub
push
repz
iret
stos
dec
mov
cmpsb
push
push
mov
xor
xchg
sbb
ljmp
xchg
add
push
in
movsl
mov
icebp
pop
mov
scas
movsl
push
int3
xor
push
lcall
push
fidivrl
pop
repnz
insb
mov
lahf
lods
bound
scas
test
bound
dec
rep
lea
mov
mov
leave
mov
or
push
sub
repnz
ljmp
jle
push
adc
pop
das
cli
push
pop
mov
jg
popf
enter
jbe
inc
xchg
lahf
cmpl
je
push
rclb
ret
xor
adc
je
xchg
sbb
roll
pop
hlt
inc
outsl
adc
lahf
xor
cs
sbb
lock
dec
repnz
xor
mov
and
aas
dec
fwait
test
fcmovbe
dec
sub
and
dec
scas
jecxz
clc
xor
and
xor
lods
iret
xor
js
jecxz,pt
push
adc
pop
in
out
and
mov
inc
push
and
push
ss
divl
loopne
and
les
mov
push
insb
mov
cli
adc
cmc
fcomps
push
test
jg
shll
ja
nop
dec
mov
inc
push
mov
mov
sbb
lods
push
lret
les
mov
sbb
jecxz
xchg
mov
in
jb
outsl
pop
pushf
and
and
cwtl
lcall
xor
data16
lods
and
fcomps
sbb
jecxz
dec
sub
dec
mov
in
dec
or
out
inc
jns
jle
cs
scas
clc
jp
lods
sbb
test
loope
mov
ret
push
and
push
stos
mov
pop
lret
pusha
fldt
mov
flds
dec
rcrl
repz
inc
xchg
movsb
pop
or
imul
repz
mov
adc
jbe
sahf
pop
dec
push
stc
out
mov
aaa
mov
add
dec
sbb
mov
imul
jns
adc
mov
sbb
or
jb
add
inc
mov
adc
sbb
or
cltd
cld
insb
les
mov
daa
pushf
inc
sbb
lds
dec
lods
and
or
jle
jo
push
jp
imul
push
xor
mov
pop
ja
jp
movsb
sub
pop
cmovg
adc
inc
out
movsb
sbbl
es
lds
add
cli
push
andb
cs
test
dec
fdivl
cli
into
sahf
push
adc
or
xor
push
xchg
test
sbbl
and
mov
push
push
les
push
push
into
pop
ja
into
fs
dec
cmp
out
bswap
aad
sbb
push
aad
outsl
fsts
sbb
sbb
mov
cmp
xchg
dec
ja
push
cmc
sbb
insl
popf
xorl
push
lods
add
mov
add
push
or
dec
cltd
mov
jecxz
enter
and
enter
jb
pop
fisubrs
repnz
inc
mov
je
xchg
popf
ljmp
or
movsb
int
inc
je
push
jecxz
lds
pop
jmp
lahf
mov
ja
dec
inc
jle
scas
add
mov
or
push
repnz
dec
aas
adc
push
negl
adc
jg
xchg
stos
jno
or
sub
or
mov
movsb
aam
mov
gs
pushl
xor
punpcklwd
out
cmp
out
mov
adc
repz
leave
lock
cmp
sbb
sbb
sub
sub
je
dec
sbb
mov
dec
orb
lock
lahf
cmpsb
gs
out
out
sbb
inc
jle
ss
mov
test
mov
out
arpl
or
add
jb
inc
lds
lret
loop
mov
adc
adc
mov
fmuls
dec
ret
dec
repnz
sbb
xchg
mov
mov
imul
pop
dec
xchg
je
pushf
dec
mov
inc
add
out
and
xlat
loope
mov
xor
lret
outsl
or
call
cmpsb
xchg
divb
ret
inc
repz
push
sbb
cmpsl
std
or
leave
pop
loop
arpl
cmp
imul
push
jo
bound
mov
sub
xchg
mov
jl
cwtl
fs
mov
popl
fistl
in
pop
dec
lret
dec
adc
mov
cmp
mov
and
pop
out
js
lock
jb,pt
mov
mov
stc
xlat
push
cltd
out
lret
cmp
push
mov
test
inc
pop
shl
das
cli
es
or
adc
nopl
and
imul
int3
clc
mov
mov
loope
or
or
and
adc
xchg
jnp
idivl
mov
jp
outsb
push
cld
jp
scas
dec
mov
ljmp
inc
rorl
stos
ret
mov
outsl
jmp
sub
xchg
mov
mov
xchg
xor
or
movsb
cli
test
loopne
jae
adc
xor
xor
sbbl
push
jb
dec
lcall
or
xchg
and
cltd
and
xchg
fnstsw
fnstcw
jno
add
jo
xchg
loop
push
dec
das
push
fwait
cmp
sub
ljmp
test
add
jg
sbb
sbbb
mov
lods
call
sbb
stos
mov
dec
mov
je
ficomps
dec
mov
sbb
or
or
mov
jb
xchg
or
cmp
add
push
xor
mov
sbb
and
adc
cli
cltd
jp
sbb
and
subb
lret
sub
shr
ret
inc
repz
push
push
add
iret
inc
xchg
ss
sti
inc
daa
movsb
repnz
lcall
xchg
adc
hlt
mov
fldt
adc
push
sbb
mov
stos
jnp
xor
pushf
cmpl
ljmp
or
fbstp
add
sbb
arpl
xor
jp
add
xor
jns
mov
push
jmp
mov
je
cmpsb
imul
mov
popa
mov
js
xchg
mov
xchg
lahf
jb
pop
es
push
dec
sub
addr16
cs
insb
addr16
inc
pop
cmp
sbb
adc
adc
rorl
mov
adc
fmuls
jge
into
jmp
mov
shlb
sarb
cmc
inc
out
mov
imul
mov
xor
mov
out
mov
sub
es
outsl
push
add
je
xor
mov
cmp
imulb
push
xlat
scas
sub
xor
addb
subl
out
pushf
inc
fnsave
out
add
dec
xor
adc
and
xchg
stos
nop
jno
jnp
cmp
lret
ret
in
add
aas
loopne
nop
or
sahf
dec
mov
cmp
mov
push
cwtl
add
stc
sbb
jnp
test
fs
pop
mov
add
ret
pop
sub
xor
xor
xor
stos
push
pop
sub
data16
cwtl
leave
fisubrs
repz
or
enter
add
bound
loop
pop
mov
xor
mov
xor
js
xchg
jle
pusha
pop
adc
mov
cwtl
bound
cltd
sbb
jnp
pusha
ficoml
loope
lret
push
mov
in
mov
pop
cmp
into
pop
mov
sbb
cltd
xor
stos
sbb
arpl
jmp
addr16
mov
push
ret
lret
or
aaa
lahf
pop
aaa
push
jb
jecxz
push
push
enter
pop
xor
insb
shlb
js
sbb
mov
mov
repnz
inc
movntps
xchg
sub
mov
sub
int3
jg
mov
xchg
adc
and
xchg
testl
out
dec
scas
bound
pop
fbstp
scas
mov
jno
push
aad
jmp
jno
outsb
pop
sbb
in
repnz
xor
sbb
inc
dec
fdivs
and
int3
idivb
mov
scas
mov
xor
outsl
repnz
lret
jbe
cmp
movb
sbb
fbld
icebp
pop
jp
loop
cmc
stos
dec
fidivl
fisttps
icebp
sbb
sub
push
flds
push
mov
addb
xor
or
inc
test
pushl
xchg
push
outsl
lret
arpl
mov
cmpsl
mov
lcall
out
testl
and
sti
jle
sbb
std
stc
jle
sahf
add
ret
stos
leave
jb
mov
rcrb
cs
jbe
xchg
sub
movsb
inc
idivl
cmp
dec
paddb
sbb
sbb
jo
decb
cmp
fmul
stos
repz
jo
sbb
scas
sbb
push
xchg
add
push
xchg
push
sub
xchg
xchg
mov
lahf
shll
inc
pop
ds
rol
loop
adc
popa
insb
jge
leave
shrb
mov
adcb
lret
into
enter
jle
sarb
sbb
imul
fists
outsb
sar
addb
lds
adc
dec
adc
mov
adc
sub
jbe
cs
push
push
inc
hlt
sub
das
jbe
sbb
mov
xor
out
push
push
shlb
in
push
repnz
rorb
xchg
arpl
repz
and
push
fisttpll
or
mov
dec
xchg
lods
jnp
jp
push
js
sbb
dec
scas
cmp
clc
jne
fcmovnu
mov
and
cmp
lods
jb
stos
mov
rorl
or
sbb
jg
inc
fmul
and
pop
popa
mov
xor
into
inc
mov
in
cwtl
test
sub
popf
bound
xchg
pop
stc
dec
dec
cmpsb
jle
cs
mov
sbb
mov
int
mov
add
sbb
fiadds
sahf
bound
xchg
pop
push
popf
popf
sbb
dec
jp
and
dec
adc
out
cld
jp
jo
dec
call
call
inc
inc
psllw
filds
jb
xchg
nop
test
movsb
xor
xor
ffree
aas
fwait
inc
add
jnp
negb
add
ds
jle
es
fcoms
out
fs
xchg
loope
ficoml
sbb
andb
ljmp
hlt
pop
and
sahf
loope
insb
js
ficomps
lcall
int
mov
and
adc
jp
int3
imul
cmp
rorb
lret
mov
or
sbb
imul
xchg
xchg
sub
jae
and
adc
out
fnstsw
mov
mov
test
movsb
test
mov
cli
cmpsb
aad
push
add
mov
dec
jp
nop
mov
addr16
mov
adc
dec
push
fstpl
add
lods
or
cmpsb
in
adc
fstps
sbb
mov
xor
cs
sbb
adc
ja
and
cli
mov
pop
mov
in
sub
sbb
adc
pop
jl
test
popf
scas
sub
jb
je
lret
add
test
mov
rorb
push
push
add
mov
mov
pop
jb
mov
hlt
out
cmp
xor
dec
cmpsb
xchg
out
sarb
sbb
and
jp
mov
mov
int3
ja
dec
jl
dec
ds
pop
mov
mov
xor
ds
mov
cmp
mov
jp
mov
xor
push
sbb
ds
and
dec
jp
mov
dec
lret
loop
dec
mov
xchg
inc
dec
inc
bound
add
and
mov
nop
cwtl
sub
jae
or
sub
ret
insb
jp
ja
adc
mov
mov
cmp
xor
xor
cmp
xor
jp
inc
les
neg
lods
xor
adc
mov
xor
pushl
out
test
inc
mov
insb
ret
insb
das
sahf
ds
pop
push
or
push
adc
add
in
movsb
jmp
mov
mov
and
in
add
idivb
mov
jle
mov
out
sbb
jecxz
je
mov
and
sbbl
jl
and
popa
lods
dec
es
je
push
cmpsb
cmpl
sub
dec
sbb
inc
mov
push
sbb
repnz
inc
and
xchg
xor
in
push
xor
xchg
jle
xchg
sbb
nop
jmp
cmpb
jle
mov
cmpb
in
and
mov
sub
adc
into
cmp
cmpl
dec
cmp
dec
add
and
lcall
jnp
popa
mov
lret
fidivs
fmull
xor
sbb
mov
sarb
mov
lret
mov
dec
push
test
push
sub
xor
call
pop
out
sbb
mov
in
dec
jb
insl
pop
loop
outsb
arpl
loopne
cmp
fs
sub
lcall
jae
cli
pop
out
xor
test
adc
and
cmp
jp
xchg
iret
fs
and
jb
mov
dec
aam
sbb
push
ds
sub
inc
mov
lret
inc
flds
sbb
jmp
cmp
inc
dec
adc
pop
jmp
cmp
inc
xor
jecxz
dec
lret
pop
pop
add
fisubs
add
adc
jp
adc
clc
jno
jle
push
add
mov
push
mov
test
outsl
lods
push
dec
rcrl
mov
sbb
addl
insb
loop
ljmp
fisubl
dec
push
test
jp
mov
add
adc
jecxz
jl
pop
sub
pop
aaa
rolb
test
inc
es
test
xor
push
je
push
jo
inc
imul
inc
xchg
cmpsl
into
test
dec
mov
mov
icebp
repnz
bound
xchg
imul
out
lahf
xchg
dec
inc
nop
mov
adc
lret
sbb
pop
mov
loop
cltd
xchg
bnd
jle
mov
or
xlat
ds
leave
shrb
shl
cmp
incl
inc
xchg
xor
push
mov
test
mov
inc
jb,pt
movsb
das
or
fwait
imul
clc
lret
lcall
incb
dec
dec
xchg
mov
push
shrb
arpl
push
xchg
data16
and
and
pop
add
push
repz
insb
js
sbb
mov
xor
sahf
mov
sub
jp
xor
scas
cld
add
scas
enter
rolb
xor
push
add
push
xor
xlat
jl
pusha
pop
cmpsb
mov
stos
iret
add
dec
lods
push
lahf
cld
or
push
lret
inc
addb
movsb
es
dec
dec
inc
xor
and
sti
mov
adc
out
mov
fwait
mov
dec
inc
int3
xor
sbb
call
sbb
mov
pop
adc
adc
xchg
xchg
mov
push
inc
cmp
and
push
sbb
mov
pop
jg
sub
dec
dec
push
inc
arpl
lret
mov
inc
xchg
add
and
mov
sbb
pop
or
lretw
jne
push
mov
jb
dec
inc
ret
in
jb
ss
and
paddw
mov
mov
mov
rcll
dec
mov
xchg
add
jp
and
dec
cmp
fdivrs
ret
sbb
mov
sbb
jmp
jb
leave
jmp
push
loop
add
pop
adc
cmp
out
hlt
add
jno
popa
push
sbb
mov
leave
push
xchg
pop
and
mov
popa
insl
lods
push
jg
push
orb
mov
jl
lret
push
lock
adc
push
mov
add
push
arpl
jns
andl
or
xor
jle
out
mov
push
or
pop
mov
sbb
sub
xor
inc
or
add
arpl
xchg
mov
xchg
xchg
arpl
pop
bound
push
pop
mov
fiaddl
scas
leave
xchg
test
mov
inc
jl
sbb
mov
dec
sbb
push
mov
dec
mov
push
mov
adc
testl
test
xor
rcr
mov
out
cmpsl
xchg
and
jne
xchg
fucomip
in
adc
imul
arpl
and
add
mov
ficompl
sbb
jp
lret
inc
cmpsb
sahf
stos
adc
icebp
jae
cmp
test
mov
dec
scas
movb
je
add
jbe
pop
lcall
jno
daa
mov
lods
adcl
mov
push
stos
cs
rorl
adcb
mov
sbb
sbbb
shl
addr16
scas
jp
dec
jl
jb
jge
jp
jl
into
jne
adc
inc
mov
frstor
pushf
mov
cmpsb
add
mov
adc
adc
mov
mov
add
jmp
and
inc
sub
mov
or
mov
cltd
adc
sub
rclb
outsb
push
jb
mov
sbbb
dec
or
sub
cltd
stos
cmp
cmp
sbb
cmp
ss
adc
jecxz
jp
adc
int
test
sbb
sbb
mov
push
int3
bnd
sbb
lret
fidivrl
repz
add
sbb
mov
xor
push
pushf
dec
subl
adc
ffreep
fimull
cmp
xchg
lea
jnp
ret
jmp
inc
add
xchg
loope
shlb
lret
pop
ss
jb
sbbb
ds
mov
mov
dec
and
roll
ss
or
lcall
dec
xorb
call
jl
repnz
loopne
ret
ret
cmp
xor
popf
frstor
dec
mov
xchg
dec
xor
jbe
mov
sub
jae
jge
or
pusha
jnp
int3
cmpsl
add
push
popf
adcl
xor
mull
dec
fcoml
int
mov
or
xor
pop
arpl
leave
mov
pop
sbb
fcoms
addr16
cmp
nop
pop
lret
test
pop
imul
adc
sarb
arpl
jb
repnz
jecxz
movsb
outsb
test
lcall
push
mov
popf
stc
pop
insb
ja
scas
mov
cmp
dec
lret
call
repnz
lret
fsubl
fisubs
ret
les
fs
sbb
xchg
daa
pop
js
xchg
out
jo
sbb
push
and
xor
fsubr
pop
jg
push
adcl
adc
dec
or
xchg
sub
mov
test
adc
mov
jmp
imul
mov
testl
gs
cmp
into
cmp
dec
xor
ds
test
sbb
lret
sbb
sbb
adc
repnz
lret
sti
lret
jecxz
jp
adc
xorb
jb
jl
sbbb
jle
cmp
out
sahf
lock
fiadds
rcrb
mov
pop
inc
in
ds
aam
adc
lret
leave
lds
push
sub
into
inc
repnz
jp
jge
add
bound
and
lret
pop
sbb
fistpl
lcall
sbb
xor
stos
dec
arpl
mov
lcall
enter
jno
aad
test
mov
add
sub
sti
inc
sbb
inc
rolb
jp
cmp
clc
call
movsb
push
jb
fisubl
mov
lods
push
mov
jle
mulb
or
mov
sbb
push
data16
mov
mov
addb
xor
xlat
inc
push
inc
sbb
jl
mov
test
out
lods
js
test
int
orb
xchg
pusha
jb
imul
test
repnz
mull
inc
lcall
sub
sub
xchg
pop
jno
inc
add
call
lods
lods
fnsave
add
sbb
div
je
pop
scas
mov
mov
ficoms
mov
and
mov
stc
xchg
mov
inc
mov
sub
sbb
or
pop
add
inc
sub
stc
jecxz
lods
lahf
fsts
ret
aad
cmpsb
std
jg
sbb
sub
idiv
adc
xor
into
pop
mov
jl
data16
mov
mov
pop
add
inc
ret
fistpl
repnz
std
inc
leave
bound
repz
lock
add
sub
xlat
xchg
push
and
cld
test
xchg
push
sbb
lock
inc
cli
inc
inc
mov
and
iret
cmp
jno
jmp
inc
push
pop
es
cmp
cwtl
xor
sub
dec
int3
cmpsb
xchg
stc
adc
jecxz
jecxz
mov
lock
or
data16
dec
push
mov
or
pop
xchg
xor
cmp
das
es
fs
push
pop
stos
xor
pushf
lods
jb
mov
cmp
loope
xchg
mov
xchg
mov
mov
movsb
push
aas
pop
movsb
movhlps
jbe
cmc
fcom
mov
mov
ret
xchg
xchg
sbb
movsb
mov
sbb
cmpsb
in
insb
mov
hlt
sbb
jne
lahf
add
adc
test
rcrb
pop
fistps
aad
insb
push
inc
mov
ds
cmp
add
xor
lods
cmp
rcrl
dec
mov
add
or
mov
sub
int
lods
ret
jno
dec
pop
pop
xor
mov
inc
scas
mov
imul
mov
inc
pushf
stos
jl
and
sbbl
test
shll
dec
push
es
and
mov
orl
xor
addr16
cltd
lret
leave
jecxz
in
mov
jecxz
cli
adc
xchg
pop
lods
aad
shlb
testb
cmp
lret
inc
cwtl
mov
mov
aas
js
outsl
push
xchg
insl
xchg
xor
mov
and
inc
subl
mov
cltd
roll
jle
push
or
sbb
xor
rcrb
pop
mov
hlt
test
iret
pop
lods
mov
mov
cmp
pop
add
or
les
jmp
andl
in
add
mov
jmp
loopne
stos
clc
xor
and
je
test
or
and
jle
jl
data16
inc
push
inc
leave
out
sbb
into
jae
loop
lods
jo
and
mov
fs
mov
jmp
mov
mov
lea
inc
out
adc
lret
sbb
add
sbb
iret
jne
push
dec
inc
into
push
jg
or
and
xchg
loop
cmp
lcall
nop
push
dec
pop
sub
lahf
xor
add
push
lods
lret
xchg
int3
aas
sub
mov
sbb
int3
out
mov
add
dec
lcall
sbbl
dec
mov
ds
sbb
add
daa
jmp
sub
add
loope
xor
mov
xchg
cmpsb
rorl
or
sbb
fisttpll
lret
adc
add
jbe
cwtl
adc
mov
push
scas
and
mov
xor
lcall
mov
sub
push
push
jae
mov
sbb
outsb
push
add
cwtl
sarl
push
push
mov
cmpsb
rolb
out
inc
notl
popf
loope
das
adc
das
dec
mov
pop
lods
scas
sub
jne
mov
push
ret
xlat
and
cwtl
jns
adc
rcrb
dec
jl
xor
adc
arpl
jae
stos
dec
jae
lret
xor
dec
mov
cli
movsb
inc
add
push
cmp
cmpsb
sub
add
iret
dec
push
inc
jl
test
repnz
ds
ficoms
dec
sbb
rol
or
mov
sbb
xchg
xor
in
lock
aaa
push
xchg
orb
xchg
dec
cltd
lcall
jno
sbb
jp
cmc
and
addr16
mov
push
mov
mov
jns
mov
out
shll
ljmp
or
add
addb
inc
mov
push
adc
xor
test
jnp
mov
lret
jo
sbb
iret
int3
fnstenv
mov
gs
xchg
je
lret
sub
rcll
xchg
movsb
and
and
jmp
ret
dec
ret
cmp
lcall
push
pop
pop
jmp
or
xor
add
dec
std
pop
ja
mov
lahf
or
jle
push
sbb
test
jle
mov
mov
jb
mov
sub
adc
bnd
sbb
fdivl
cmp
jbe
mov
adc
cltd
or
inc
clc
inc
ret
cmp
pop
jle
push
repnz
rcl
inc
fimull
mov
fistpll
jmp
ljmp
mov
jl
inc
aas
adc
cmp
movsl
pop
cli
loope
sbb
dec
mov
inc
sbb
lret
push
mov
sbb
lcall
inc
or
jb
mov
pop
mov
push
cmp
sarb
mov
push
fidivl
mov
add
add
test
aas
add
jne
or
insl
popf
xor
push
or
test
loopne
addr16
movsb
int
sub
ficomps
mov
arpl
imul
arpl
pop
imul
adc
adc
xor
andl
mov
into
andw
cmc
sahf
jb
repnz
loopne
xchg
cs
inc
bound
cmpsl
xor
icebp
cmpl
into
add
inc
rcr
cmp
pop
dec
xchg
stos
jl
xlat
in
xchg
push
or
cli
push
adc
mov
xchg
adc
sbb
rorb
out
push
cmp
xor
push
cmp
fistpl
or
dec
test
int
stos
fidivs
fndisi(8087
jle
jno
jge
sbb
or
sahf
loop
or
nop
int3
in
stos
aas
push
imul
fcomps
dec
popa
mov
and
repz
mov
aad
into
pop
adc
leave
fmuls
lock
fdivs
scas
mov
dec
ja
push
jno
jp,pt
lahf
imul
sahf
bound
stos
ss
jle
int3
stos
mov
jp
adc
mov
cld
test
mov
sub
movsb
mov
lret
sub
mov
test
sub
push
stos
test
mov
adc
les
push
and
push
mov
xchg
mov
adc
add
adc
pop
xchg
and
lock
mov
mov
jecxz
jns
cmp
notl
dec
stos
call
xchg
sub
sbb
sub
movsl
jae
push
push
dec
push
popl
imul
jp
bound
push
sahf
in
stos
sbb
or
pushf
and
and
cmc
test
fstps
pop
cmc
jo
pop
mov
shrl
sbb
xor
add
decl
xchg
pop
in
pop
arpl
cmp
jg
jb
adc
fucom
ljmp
sub
push
dec
pop
in
mov
sti
imul
mov
in
inc
rcrl
je
ds
rcrl
popf
movsb
lcall
jp
test
fisubs
xchg
sub
or
nop
push
push
adc
rolb
jle
jnp
jb
popf
mov
xorb
pop
jno
scas
mov
dec
addr16
enter
mov
pop
das
jp
pop
xor
ds
adc
fidivl
xor
in
jno
pusha
outsl
add
pop
pop
roll
js
test
fimull
mov
sahf
lcall
fiaddl
adc
xchg
data16
jbe
js
inc
ret
jecxz
test
jb
sbb
insl
pop
popa
xchg
jmp
stos
repnz
lea
test
sbb
mov
scas
sub
jl
outsl
jg
adc
add
and
mov
ljmp
push
mov
jno
mov
xchg
mov
pushf
addr16
mov
jne
sti
es
mov
cmpsb
or
sub
test
mov
push
mov
jl
cltd
into
fxch
inc
push
stos
mov
jle
movsb
in
push
sbb
ret
jne
inc
dec
cmp
in
pop
jle
xchg
and
jb
jmp
rcll
movl
bound
dec
mov
sbb
lock
sub
jo
jle
sbb
scas
mov
jb
repnz
stos
pop
xor
xchg
std
push
or
js
dec
lock
push
mov
test
push
stos
pop
dec
jmp
xor
and
outsl
stos
pop
mov
fbld
pop
fisttpl
add
jae
jle
les
out
mov
lcall
push
and
jae
mov
and
mov
pop
cmp
pop
cmc
popa
scas
sbb
sbb
push
mov
xchg
repnz
cmc
sbb
mov
xlat
movb
add
sti
ret
adc
sbb
mov
xor
and
clc
cld
lret
add
xchg
outsl
pop
imul
scas
and
or
data16
dec
test
lods
jo
into
and
xor
jo
xorl
push
xchg
int3
movsl
and
mov
subl
mov
mov
xlat
mov
out
sbb
jle
in
shll
lcall
scas
fmuls
es
sub
add
mov
test
inc
pop
rorb
inc
fistpll
ret
and
mov
test
jb
hlt
int3
dec
cmpsb
and
stos
add
dec
fidivl
sahf
popf
and
adc
dec
or
dec
add
movsl
adc
push
test
mov
je
jae
pop
dec
or
leave
jge
xchg
cmc
pop
and
cmpsl
sbb
into
jg
sub
pop
ss
mov
cmpsb
loopne
sbbl
xchg
les
fstpt
mov
sbb
add
push
lret
and
sbb
sub
mov
dec
push
movsb
mov
mov
sbb
faddl
bound
pop
ss
sub
adc
std
popf
aad
add
xchg
and
repnz
lahf
sbb
jno
lea
cmpb
sbb
mov
rcrb
inc
add
add
lcall
jae
repnz
mov
add
mov
xchg
jnp
mov
dec
repz
inc
fldcw
dec
push
push
and
push
adc
movsl
jp
mov
aad
sti
and
mov
into
sbb
xor
push
pop
xor
popa
lds
push
rorl
cmpsb
ds
test
push
mov
and
mov
fisubl
mov
push
rcrl
or
mov
add
pushf
jl
scas
test
dec
xor
and
int3
cmp
cmp
aas
aad
inc
adc
or
aad
push
push
hlt
add
adc
ljmp
rorb
push
push
test
outsb
out
mov
addr16
sub
in
sub
ret
cmp
clc
sbb
mov
js
hlt
test
repnz
bound
add
sbb
aas
testb
mov
scas
stc
ret
rorb
mov
and
icebp
push
test
mov
cmpsb
fs
addb
push
ljmp
mov
and
lods
add
imul
sarb
mov
ret
cmp
in
add
xchg
ret
cli
add
mov
or
cmpl
push
popa
subl
fsts
adc
cmp
cmp
or
xor
jl
mov
dec
xchg
sbb
adc
cli
out
lods
sub
push
dec
push
sarl
aaa
sbb
push
sub
stos
outsb
inc
push
lock
jp
cmp
ss
sub
jb
sti
inc
les
dec
fistl
iret
cs
or
imul
cmp
pop
enter
aaa
jge
outsb
sti
or
fwait
mov
jl
xchg
xor
xor
test
push
mov
sbb
add
push
inc
into
adc
cli
sahf
in
pop
mov
and
repz
out
mov
shrb
and
cmp
adc
aaa
adc
sbb
or
sbb
in
out
test
icebp
xor
nop
lahf
jb
xchg
dec
popl
imul
adc
outsb
mov
lret
jo
cltd
ss
sub
sub
stos
xchg
jnp
aas
lret
in
jnp
cmp
inc
call
xor
cli
into
lcall
dec
fwait
adc
cmp
jmp
push
lret
leave
int3
mov
xchg
push
in
adc
or
xchg
repz
jb
mov
pop
push
sub
mov
sub
and
xorb
loopne
lea
cs
cmp
shlb
cmovs
in
scas
mov
sub
lds
xor
sbb
cmp
push
sbb
data16
xor
add
fisttpl
sbb
fmulp
clc
cmpsl
or
out
xor
jnp
adc
in
and
jno
sbb
dec
leave
adc
inc
cld
mov
es
jne
lods
pop
push
mov
in
test
sbb
push
pop
dec
cmp
mov
into
sub
cmpsb
cmpb
cmp
cmp
ret
adc
jnp
inc
jp
loope
cmpsb
or
movsb
mov
stos
cmp
popa
add
mov
lret
leave
nop
not
addr16
xor
xchg
pop
imul
xor
shlb
daa
sbb
rorl
jb
cld
in
and
inc
cs
lock
test
push
aas
or
cmp
jno
push
sbb
cmpsb
imulb
xchg
inc
out
xchg
sub
cmp
xor
xchg
xlat
fdivs
dec
mov
mov
imul
add
adc
cmp
out
mov
lahf
sbb
call
aam
stos
addb
in
inc
cli
je
jb
push
lcall
xor
cld
aas
lea
or
jo
push
das
dec
adc
sbb
sub
ds
pop
push
xacquire
cmpb
xchg
nop
mov
sub
adc
in
pop
nop
fwait
lret
mov
mov
push
mov
test
stos
mov
stos
inc
mov
stos
fdivrl
ret
cmp
add
movsb
mov
shlb
xor
loope
sbb
push
pop
and
cmc
xchg
jne
fchs
cmp
int3
loope
leave
fucom
xchg
cltd
inc
add
enter
mov
lods
add
xor
adc
jle
dec
loopne
fsubp
repnz
sub
push
jns
or
dec
and
inc
int
mov
mov
js
scas
nop
cmc
out
xlat
mov
imul
xchg
pop
ret
dec
jle
jp
jbe
pushf
in
dec
lods
nop
pop
out
jecxz
repz
or
lods
dec
or
or
mov
push
nop
repz
out
xor
pop
cmpl
into
jmp
sti
inc
fisubrl
fisubl
inc
int3
hlt
add
lret
je
cltd
arpl
jnp,pt
sbb
jp
es
arpl
push
or
les
jg
loop
je
arpl
ret
or
ret
jne
inc
add
lret
dec
push
lcall
pop
fdivr
cmp
mov
mov
js
test
and
dec
arpl
adc
jmp
push
ljmp
inc
dec
xor
push
push
jmp
xchg
je
cmp
add
or
sbb
mov
cmp
loopne
adc
mov
sarl
xchg
leave
arpl
mov
dec
jo
stos
or
mov
jg
jo
mov
push
data16
push
mov
push
fdivr
mov
xor
test
mov
mov
pop
or
mov
and
je
in
xlat
pop
mov
je
push
jge
jmp
mov
cmp
sbbb
push
ljmp
xor
shlb
xor
or
xchg
xor
lcall
test
or
push
and
repnz
stos
mov
push
adc
add
repz
push
faddl
pop
xor
es
sbbl
fdivrl
mov
push
addr16
ret
xchg
jp
xor
sti
out
ss
inc
mov
inc
aas
dec
mov
or
mov
cmp
js
sub
ja
cli
lret
inc
push
shrb
daa
adc
jg
rcrl
gs
or
mov
cli
in
or
xor
xchg
stos
jle
pushf
xchg
dec
int3
push
scas
lods
mov
movsb
and
xchg
jg
ss
or
int3
rcl
push
fisubrs
dec
mov
jle
add
or
ds
pop
cmp
and
clc
imul
fildll
adc
ljmp
ljmp
push
xchg
pop
jge
inc
jnp
adc
test
xchg
xchg
test
outsb
dec
mov
test
xchg
mov
push
and
push
dec
scas
cmpsl
pusha
js
andb
call
push
cwtl
and
pop
pusha
sub
sbb
add
sbb
mov
dec
aad
push
sub
rorb
cli
and
jp
inc
inc
leave
or
push
xor
xchg
in
or
jg
rcrl
sub
out
xor
pop
fldl
mov
mov
inc
or
arpl
push
inc
add
adc
dec
adc
int3
xchg
repz
mov
sbb
jecxz
into
pushf
or
fmuls
jg
inc
mov
repnz
pushf
test
adc
push
shll
ss
pop
es
adc
jo
sahf
jbe
mov
add
jmp
mov
je
jp
lock
sbb
push
push
subb
stos
sub
lods
jne
andb
dec
lret
cmpb
xor
adc
xor
cmp
or
xchg
cmp
js
sbb
jl
mov
jle
xor
pop
xor
cli
movsb
leave
xchg
into
stc
and
stc
mov
push
push
mov
xchg
or
mov
sub
mov
repz
data16
stc
je
fwait
mov
sbb
mov
push
insb
imul
bound
addr16
imul
in
or
push
dec
into
mov
jnp
xor
dec
ret
mov
addr16
xor
sub
cltd
xchg
cli
mov
stc
outsl
push
jno
aam
add
add
lock
or
scas
xchg
sbb
lret
dec
cmpsl
imul
and
pop
mov
cli
sub
ss
popa
call
sbb
das
mov
sahf
test
mov
pop
xor
cmp
adc
in
mov
mov
es
imul
cmpb
dec
push
or
pop
fstpt
sub
sbb
cmp
fwait
ss
jl
bound
lods
addr16
ret
push
outsb
daa
jp
imul
outsl
dec
ficoml
cmp
sbb
push
outsb
loope
pop
sub
mov
mov
jmp
mov
sub
sbb
aam
sbb
test
std
imul
mov
push
es
lcall
sbb
mov
mov
aas
sub
inc
sbb
inc
mov
popf
mov
sahf
popf
jae
js
mov
dec
pushf
repz
push
and
inc
sahf
dec
inc
out
adc
push
sbb
add
sahf
or
and
push
jg
xor
fisubrs
sub
sbb
repnz
js
jmp
fwait
push
sahf
dec
add
dec
outsb
sub
enter
jb
pushf
jge
aas
jae
sub
imul
pusha
mov
dec
stos
jp
cwtl
and
dec
js
popl
sub
xchg
out
push
dec
mov
sahf
sub
mov
mov
orb
mov
mov
sbb
push
adc
bound
int3
lret
lods
push
imull
aam
adc
roll
std
ret
jg
push
pushf
xlat
mov
sub
xor
hlt
mov
dec
sti
in
xor
shrl
sub
jle
aaa
andb
mov
mov
jg
faddp
cmp
push
mov
jge
gs
sub
hlt
jmp
push
int
andb
push
stos
and
popf
insl
sub
mov
dec
jle
lcall
insb
pop
cmp
int3
js,pn
out
insl
jl
mov
test
xlat
repnz
xor
pop
or
js,pn
out
inc
les
pop
gs
sbb
lcall
push
mov
jl,pt
mov
test
stos
repnz
gs
push
lahf
incb
xchg
mov
dec
or
aad
dec
inc
shll
sub
add
adc
or
fbld
dec
and
and
lcall
xor
add
xor
js
adc
pop
inc
es
adc
repz
jbe
sbb
aas
inc
ret
xor
ss
sbb
fwait
or
xor
push
xchg
data16
xchg
dec
or
inc
repnz
cmp
pop
xchg
xchg
arpl
inc
or
and
sbb
into
ja
pop
lret
imul
push
inc
and
bnd
fldt
jo
test
insb
xchg
arpl
dec
inc
cmp
mov
push
xor
xor
in
xchg
lret
outsl
dec
xor
sbb
and
imul
gs
loop
push
adc
mov
mov
lods
push
cmp
cmp
mov
loop
xlat
ja
sbb
lcall
adc
and
inc
lcall
cmp
imul
jg
sub
dec
ss
or
add
push
es
daa
and
rcll
dec
repnz
cmp
xchg
sub
lods
addr16
mov
stos
stos
and
cld
aam
aas
mov
push
mov
sub
and
sub
push
jns
or
call
hlt
xacquire
dec
jnp
call
mov
pusha
push
clc
sbb
mov
lcall
bound
jns
sbb
data16
jb
sub
jae
cmp
jp
fwait
push
sub
je
jno
ljmp
aad
jmp
adc
dec
inc
push
daa
orb
xor
mov
fdivl
and
xor
loop
jb
and
pop
inc
xor
mov
inc
dec
aaa
fildll
arpl
jp
xchg
scas
push
xchg
mov
fsts
scas
pop
lods
add
jmp
js
mov
ficoms
adc
inc
loop
mov
push
into
push
xor
dec
push
inc
call
test
popf
mov
lcall
rolb
repnz
adc
mov
cmpb
push
mov
xchg
call
mov
sbb
ss
cwtl
cli
mov
adc
shl
stos
rcr
leave
xchg
shl
out
scas
push
aad
ret
sti
les
push
leave
in
lea
xchg
lret
adc
das
ljmp
test
data16
sbb
xchg
jbe
cmp
xor
cwtl
ds
aas
lret
sub
or
or
xchg
lods
in
dec
sub
das
ds
mov
or
mov
outsl
lsl
cmp
outsb
xchg
in
js
dec
jp
jmp
push
or
jbe
push
and
repnz
pop
sbb
and
fistps
or
data16
stos
mov
insl
popf
xor
fcmovbe
mov
mov
jecxz
push
and
pusha
dec
and
jns
xor
jle
add
scas
in
into
sbb
dec
mov
jo
adc
cs
notb
adc
jbe
adc
and
mov
les
lods
lret
sub
or
loopne
cmpl
cmpl
xchg
lock
aas
jae
stc
dec
dec
and
mov
mov
inc
inc
sbb
fwait
dec
sub
mov
imul
mov
cltd
dec
or
inc
dec
fnstcw
push
mov
push
push
fs
test
loop
add
fisubs
or
into
mov
mov
addr16
push
push
js
xchg
jbe
or
jnp
dec
mov
inc
and
mov
mov
shl
mov
push
test
cmp
dec
ds
cmp
lahf
popl
mov
mov
xchg
mov
cwtl
bound
mov
jo
sbb
loope
pmullw
jle
lock
mov
je
xchg
add
sbb
jne
loop
cmp
clc
push
mov
jp
inc
cmp
mov
add
xchg
ret
push
push
mov
mov
adc
into
repz
jge
das
mov
sbb
ja
and
pop
jb
xchg
imul
in
add
jecxz
rorl
lahf
push
mov
mov
lret
nop
leave
mov
jecxz
inc
mov
dec
ret
es
inc
ret
push
cmp
lea
icebp
push
leave
pop
mov
out
aas
icebp
dec
repnz
sbb
lea
repnz
icebp
sub
daa
jae
out
adc
jo
add
shl
andb
and
dec
adc
jecxz
add
lahf
movsb
add
fsubl
jnp
push
test
sbb
or
adc
std
js,pt
ficompl
int3
xor
sbb
call
sbb
mov
pop
adc
inc
lret
xchg
xchg
mov
sbb
mov
lret
sbb
mov
sbb
sbb
mov
movsb
dec
dec
adc
mov
sbb
adc
mov
insl
dec
dec
sub
lahf
mov
sbb
mov
stc
fbld
push
js
cwtl
push
inc
xchg
mov
pop
mov
sbb
mov
fcompl
mov
pop
jns
sbb
lret
imul
lcall
repnz
pop
jmp
cmpsb
push
add
addr16
pop
icebp
xchg
xchg
adc
pop
xor
and
mov
jo
call
add
xorl
cmpsl
fnsave
outsl
clc
loopne
repnz
mov
sbb
icebp
aas
push
sub
loope
pop
mov
jns
add
iret
je
add
popa
push
lret
mov
mov
js
rcrb
pop
movl
push
xor
loopne
xchg
inc
loope
mov
in
mov
jbe
hlt
add
lahf
lea
dec
js,pt
out
sahf
ss
in
cmp
icebp
outsl
sbb
add
inc
ds
jp
mov
adcb
xchg
nop
push
xor
mov
data16
jle
or
rolb
outsb
scas
sbb
or
ljmp
fimull
mov
loope
cmpsb
jo
push
adc
adc
mov
cmp
mov
fidivs
inc
pop
ror
lahf
mov
xlat
xchg
dec
outsl
inc
clc
das
xor
add
cmp
cmpsb
and
subl
jae
out
mov
xor
inc
leave
pushf
add
inc
call
or
ljmp
xchg
outsl
leave
nop
mov
adc
bound
addl
mov
mov
push
mov
insl
outsl
repz
push
mov
dec
push
repnz
call
pop
push
inc
lret
dec
mov
push
insb
js
mov
jmp
dec
xorb
outsl
dec
adc
xor
sbb
and
loop
push
sub
iret
xchg
js
add
jg
adc
mov
jecxz,pt
aaa
mov
dec
dec
movsb
sbb
lret
lea
mov
dec
jecxz
push
cwtl
xchg
insb
repnz
cmpsl
adc
or
test
dec
jecxz
mov
ss
cmpsb
repnz
or
jmp
sbb
js
pop
pop
out
sbb
repz
pop
cwtl
and
mov
jle
xchg
repnz
push
fadd
cwtl
jbe
sub
cmpsb
sahf
into
out
mov
or
js
mov
add
cmp
xchg
cmpsb
shrb
pop
das
jp
mov
add
lcall
or
mov
shlb
push
ds
pop
mov
jg
ljmp
and
jl
rorl
arpl
and
sbb
mov
push
icebp
cmp
fistpll
pop
bound
mov
mov
sub
ds
and
xorb
push
lahf
xchg
push
mov
pop
jb
sbb
dec
repz
or
jo
fmuls
es
mov
mov
adc
ds
add
push
dec
jae
rclb
scas
mov
lcall
mov
cwtl
add
inc
adc
xor
dec
invd
and
mov
out
mov
popf
lock
ret
out
add
mov
ds
gs
out
or
stc
mov
loope
call
fwait
sbb
outsl
cwtl
clc
push
mov
sarl
repz
cmp
mov
xor
cmp
inc
repnz
inc
repnz
pusha
sbb
xchg
pop
add
cmp
ljmp
or
xlat
inc
inc
jae
dec
sbb
stos
ret
jbe
and
inc
in
aaa
mov
icebp
xchg
loopne
add
dec
repz
mov
icebp
jo
repz
icebp
fimull
pop
dec
mov
sub
mov
mov
mov
js
mov
test
inc
jno
sar
push
mov
fnsave
scas
shlb
push
mov
jge
dec
mov
push
and
cmpsb
jo
daa
jg
popf
je
cli
test
repnz
lods
dec
cwtl
je
fildll
adc
cmpsb
xchg
scas
jns
xor
in
and
ss
dec
outsb
jmp
xor
ss
push
leave
mov
jg
rcrl
inc
cmp
loope
push
jp
movsl
arpl
sbb
push
push
or
outsb
pop
and
outsb
lds
pop
outsb
dec
push
xor
shrb
adc
pop
xor
cmc
enter
pop
or
stos
sbb
jg
sbb
and
rorb
add
out
dec
shll
test
loopne
cmp
jp
scas
jmp
sbb
inc
lods
outsl
repnz
cli
push
or
jb
ret
enter
jp
mov
adc
cs
jp
xchg
addl
sbb
mov
in
dec
pop
mov
popa
into
mov
mov
jns
ds
les
cmpb
sbb
clc
repz
shl
sub
mov
repz
push
dec
mov
inc
or
sbb
mov
push
add
mov
mov
mov
sbb
dec
cmpsb
mov
inc
rclb
xor
loope
orb
lods
ja
fiaddl
xor
dec
clc
jae
popf
scas
rolb
mov
push
dec
and
add
push
sbbb
js
sbb
lods
testl
and
jo
sbb
jle
or
adc
pop
cwtl
popf
dec
insl
test
push
adc
repnz
fstpl
inc
jle
mov
loop
stos
in
ds
push
push
sbb
dec
dec
sub
push
cmc
push
in
loope,pt
jno
ljmp
sub
pop
pop
cwtl
cmc
dec
mov
pop
loope
test
adc
sbbb
sbb
xor
sbb
clc
xchg
push
inc
or
adc
out
mov
inc
loopne
fisubl
icebp
or
mov
mov
sub
add
push
test
sub
and
sub
fucomp
pop
scas
sbb
adc
add
add
pop
sahf
movsl
sbb
xor
inc
sbb
dec
filds
or
ja
fiaddl
incb
lods
std
repz
sbb
push
sub
dec
rcr
fisttps
add
clc
out
bound
inc
xor
fstpt
and
dec
xchg
sbb
cmp
push
jo,pt
push
rorl
sub
bnd
call
push
pop
or
fninit
mov
dec
push
xchg
push
inc
push
in
sbb
fisubl
adcb
add
icebp
push
fnop
cmp
cmp
pop
or
dec
cmpsb
lock
or
or
ss
ds
pop
xchg
mov
inc
sub
sbb
out
xchg
pop
sti
xor
mov
in
push
ret
add
inc
mov
dec
out
sub
mov
sub
jbe
push
mov
repnz
push
fistps
add
add
repnz
push
xchg
lcall
mov
imul
mov
jmp
lret
mov
testl
aad
mov
jl
mov
gs
fdivrl
jmp
xchg
fbstp
repnz
mov
pop
ret
loope
lret
loopne
lcall
into
repz
inc
mov
push
dec
jae
adc
mov
jo
adc
push
cmp
lahf
js
add
sbbb
iret
adc
cli
cltd
in
arpl
xchg
mov
sub
ret
xchg
mov
jae
test
outsb
popf
mov
jae
lahf
jae
test
outsb
cltd
or
stos
out
int3
jp
fwait
mov
push
sbb
cmpsb
cmpsl
fs
insl
mov
push
add
outsl
test
lcall
jno
xchg
inc
inc
mov
and
call
push
pop
idiv
mov
pop
fdivr
stc
cmc
xchg
inc
jg
nop
xchg
pop
idivl
dec
int3
cmp
sti
fmull
dec
sbb
int3
sub
adc
pop
adcb
xor
fs
cld
sbb
out
mov
outsb
pop
stc
cmp
dec
rorl
push
sbb
ret
sbb
jle
fs
and
scas
shr
jb
sbb
xor
inc
inc
mov
pop
push
fdivs
cmp
xchg
dec
and
sub
lods
jge
aam
sub
nop
call
insb
mov
push
mov
dec
mov
lods
leave
mov
xchg
outsb
xor
sbb
xor
jecxz
or
lret
mov
push
cwtl
xor
ja
cmp
out
fwait
iret
inc
dec
lcall
mov
outsl
jg
or
jb
and
nop
outsl
rclb
cmp
cmp
mov
test
outsl
mov
xchg
inc
mov
outsb
mov
mov
jle
std
and
lret
sub
lret
aam
jmp
mov
jg
je
loope
push
add
xchg
jle
imul
loop
imul
or
jne
lret
lock
inc
cmpl
xor
and
lret
and
testl
out
push
into
pop
xlat
mov
or
and
xor
sbb
es
movsl
and
insb
mov
and
mov
int3
popa
xchg
mov
lcall
repz
mov
mov
mov
dec
inc
ficompl
push
gs
dec
lcall
imul
sub
push
fistps
push
inc
add
sbb
pop
stos
jmp
enter
int3
xchg
push
xor
adc
incl
adc
xchg
out
sahf
sbb
mov
push
test
test
sub
lods
cmp
xchg
jge
pusha
cmp
or
ljmp
sub
es
xchg
jae
pusha
mov
aaa
ds
adc
mov
sbb
outsb
lods
xor
and
sub
jnp
xlat
mov
inc
rol
scas
xchg
ss
dec
clc
in
outsb
das
mov
pop
sub
mov
xor
rcll
mov
mov
jae
mov
aas
in
mov
or
js
lock
mov
pop
push
adc
cmp
pushf
adc
cmpb
and
cmp
xor
cwtl
popa
inc
aaa
aad
fsts
xor
pop
iret
xor
push
mov
dec
xor
aad
or
js
pop
subb
ffreep
scas
js
and
or
adc
sbb
pusha
es
xor
pop
out
or
adc
mov
aaa
pop
cmpb
ds
xorl
sbbb
lret
stos
sbb
scas
fnstsw
or
push
sub
pop
movsb
fisubl
jns
jb
cmpb
xor
push
imul
int3
push
bound
pop
jmp
cli
dec
xchg
mov
pop
push
pop
pushl
lods
lcall
xor
mov
jle
xchg
xchg
add
inc
push
cmp
and
in
call
xor
je
in
cld
dec
je
dec
mov
mov
dec
test
push
mov
test
outsl
dec
push
loop
mov
das
loop
mov
mov
cmpsb
shl
imulb
sub
dec
sbb
nop
push
mov
repnz
adc
ds
add
clc
fbstp
jp
mov
jb
push
test
xchg
mov
mov
cmp
aad
lret
xor
xchg
push
pop
repnz
push
js
insl
mov
push
enter
loope
cmp
in
imul
push
jne
pop
fwait
pop
jae
pop
dec
pop
leavew
mov
pop
jae
lock
push
outsb
lret
dec
mov
pop
xor
push
xor
jb
mov
out
ret
bound
sahf
push
and
cwtl
push
jecxz
mov
in
xchg
cli
sti
push
cmp
jmp
fimull
loopne
push
and
stos
sub
xchg
adc
pop
push
dec
cmpsb
lret
adc
xor
jle
mov
mov
mov
push
out
adc
pop
add
js
in
shrl
add
xor
mov
dec
cmc
cmc
mov
ja
xchg
sbb
sub
in
sbb
or
mov
fidivl
repnz
push
sbb
jle
mov
gs
mov
add
mov
adc
js
cmp
and
mov
pop
sbb
cmp
cmp
outsb
jge
xchg
hlt
int3
mov
negl
xlat
adc
fisubl
adc
sub
push
adc
mov
jo
sti
xor
das
bound
sbb
sahf
adc
jecxz
inc
mov
xor
push
xor
bound
iret
in
mov
push
mov
ret
pop
test
aad
lahf
das
inc
lods
mov
aam
mov
push
ss
lret
data16
shlb
lods
out
incl
addr16
push
and
rorl
mov
xor
rol
or
and
aaa
ds
sub
sbb
jl
orb
lret
push
ficoms
xor
sub
sbb
inc
daa
adc
aad
inc
jnp
jmp
fwait
push
push
out
jl
sbb
mov
mov
or
push
repz
jbe
jle
xor
sub
cltd
jae
daa
stc
dec
push
sbb
mov
cmp
jl
leave
dec
and
lods
daa
add
or
sub
mov
pop
cmp
les
shrb
mov
mov
and
dec
add
mov
orb
push
xchg
pop
mov
loopne
add
dec
ficompl
dec
daa
js
aam
repz
cmp
divb
jmp
filds
xor
push
cmp
sub
aas
cmpl
dec
repnz
cwtl
add
dec
fcompp
xchg
insb
sbb
pcmpeqw
pop
pushf
xchg
mov
call
mov
sub
insb
sbb
jp
arpl
ja
mov
shrb
add
rorb
sub
mov
add
or
insl
dec
shll
in
pop
je
and
stos
aad
cmp
push
sbb
jb
push
adc
int
cld
es
and
sbb
js
jbe
ds
jp
xor
out
je
daa
imul
dec
pop
iret
ds
loope
jne
sbb
sub
testl
pop
mov
fs
sub
fs
es
jb
sbb
dec
sbb
sub
and
jo
mov
mov
mov
cmp
xchg
sbb
jns
out
stos
mov
mov
cwtl
dec
mov
rorl
push
sub
pop
pop
cs
dec
xchg
mov
bound
in
nop
ljmp
xchg
add
sbb
out
mov
dec
jp
sbb
sar
mov
sbb
fidivl
sub
cs
jp
xchg
cmp
dec
sub
mov
sub
mov
push
popf
lcall
jecxz
cmp
sbb
jne
rcrb
fisubl
xor
js
mov
int3
imul
pop
in
xchg
sbb
xchg
mov
ret
int
jo
adc
adc
out
ss
mov
pop
sbb
pusha
js
bound
mov
sahf
jo
int3
es
jp
push
shll
pop
and
xchg
mov
je
lahf
fs
lock
lret
sbb
aad
mov
inc
sahf
jge
push
cs
xchg
inc
add
test
je
mov
cmp
cmp
or
loope
lret
inc
ficoml
repz
loope
sub
cmp
pushf
lret
addr16
and
or
scas
scas
lret
xor
and
enter
mov
js
fdivrs
xor
outsl
test
adc
sbb
imul
hlt
dec
push
mov
adc
inc
dec
ss
xchg
xchg
sbb
mov
xchg
je
jmp
jne
faddl
xor
js
xchg
mov
xor
xor
mov
adc
fstpt
mov
mov
or
adc
pop
mov
mov
arpl
sub
repnz
jbe
xchg
sbb
lcall
in
mov
mov
in
push
hlt
bound
aad
inc
push
outsb
dec
push
sub
jl
xor
dec
xor
jbe
add
lretw
jo
jmp
fs
movd
push
push
jmp
xchg
mov
xchg
icebp
push
push
add
fidivrl
inc
rcrb
sub
subb
pushf
jb
cmpsl
cmp
and
aad
mov
shlb
scas
mov
sarb
jmp
jo
cmpsl
pushl
sti
dec
or
mov
lods
xor
jbe
adc
push
mov
es
cmp
popf
hlt
adc
fimull
loopne
mov
cmp
test
cmp
adc
dec
push
repnz
push
fiadds
repnz
pop
lret
xor
sahf
fisttpll
push
movsb
push
addr16
xchg
xor
sbb
lret
sbb
sbb
or
cmp
fdivrl
dec
call
add
jp
call
mov
lods
outsb
dec
jecxz
adc
jmp
pop
outsl
jo
mov
and
cmp
stos
sbb
and
dec
inc
cmp
cwtl
ret
ror
or
and
jle
std
mov
sbbl
inc
jae
mov
or
inc
jp
jnp
out
mov
fidivrs
pop
push
lock
or
jb
jo
pop
outsl
ret
push
cs
push
jmp
popa
popf
lret
jp
dec
test
cli
push
sub
data16
lds
push
dec
jle
mov
sbb
push
jnp
test
repz
movsl
xor
sbb
mov
mov
mov
into
adc
pusha
add
out
mov
cwtl
popf
add
arpl
pop
mov
and
mov
mov
cmp
fildll
data16
int
xor
add
mull
adc
out
or
jb
imul
push
add
aam
inc
xor
mov
push
rcl
push
and
mov
jb
bsf
mov
call
sbb
imul
jmp
xor
ds
jb,pn
ficomps
test
xor
dec
and
mov
mov
add
add
aam
imull
and
sbb
push
sbb
scas
inc
sub
push
pop
jno
aam
adc
out
or
mov
mov
xor
xchg
mov
add
jmp
pop
aas
inc
data16
sub
push
xchg
cmpsl
sub
or
sbb
lods
dec
jno
ficoms
jo
gs
ret
aam
jbe
dec
lcall
adc
js
sbb
outsb
cmp
mov
dec
mov
subl
lcall
adc
dec
dec
or
and
jo
stc
fnsave
jmp
mov
sub
mov
ret
fiaddl
or
push
dec
icebp
cwtl
xchg
sbb
sub
xchg
int3
dec
and
cmp
xor
adc
mov
cmpsl
enter
pushf
and
sbb
test
enter
nop
call
add
xchg
test
adcb
out
jnp
xchg
xchg
cmp
xor
fcmovne
dec
iret
cmp
xorl
or
das
mov
addr16
xchg
and
movb
cmpsb
sbb
pusha
push
push
jg
mov
shll
cmp
in
shll
cs
push
call
jno
dec
xor
adc
mov
fcompl
xchg
pop
gs
loopne
sbb
add
pushf
pop
outsl
pop
sbb
push
jnp
out
in
lcall
dec
cs
pop
int3
repnz
cmp
imul
sub
xchg
into
sbb
ds
out
mov
mov
rcrb
adc
xor
sbb
cmp
push
jle
mov
repz
lret
loope
mov
mov
outsb
mov
add
aad
mov
cltd
imul
sbb
fcompl
mov
sbb
mov
mov
cmpsb
cs
mov
arpl
mov
adc
imul
jmp
push
test
push
test
pop
int3
shl
cli
fwait
ret
test
xor
xor
xor
in
sbb
sub
insl
je
dec
mov
jp
push
mov
outsb
xchg
push
das
insl
inc
pop
mov
ljmp
sub
and
adc
sarb
incb
mov
repnz
fs
lods
bound
xor
ficompl
push
push
sub
test
jo
movsb
cmp
mov
movsl
sbb
mov
insb
and
cmp
mov
je
out
xor
daa
orl
rol
adc
cltd
fdivp
lods
in
dec
push
fimull
jmp
jae
clc
repnz
mov
and
jns
outsl
test
mov
arpl
push
shl
mov
sahf
mov
out
test
inc
adc
mov
out
pop
test
ss
fs
push
mov
push
and
or
int3
xor
pop
es
les
in
mov
jecxz
ja
mov
adc
enter
out
cld
lahf
add
or
push
ret
fwait
jp
addb
sub
pop
fdiv
adc
fs
mov
adc
jae
lret
cmc
xlat
sub
mov
fdivl
sub
mov
sbb
cmp
dec
repnz
add
inc
scas
cmp
or
inc
adc
stos
sbb
xorl
push
push
ret
jo
xchg
push
mov
imul
rorl
fstpt
out
adc
adc
sub
rolb
pop
lods
decl
xchg
sub
jo
adc
inc
cwtl
fimull
mov
sahf
mov
jle
pop
loop
or
lahf
mov
mov
dec
repz
js
adc
jle
ret
fisttps
lock
fistps
dec
mov
adc
jo
push
shl
sub
and
jp
adc
mov
shll
js
stos
cld
and
test
push
push
jne
loope
ds
ret
divb
sbb
sbb
in
in
mov
sbb
lret
jp
mov
cmpl
dec
mov
fistps
pop
dec
into
ret
jl
lret
pop
push
sub
jnp
adc
aaa
lods
out
pop
outsb
add
movsb
and
fidivl
aas
cmp
push
inc
dec
mov
xor
xor
push
jle
mov
int3
adc
sub
mov
rorb
jp
fistps
push
in
loop
call
and
repnz
lret
sbb
adc
xor
inc
adc
and
xor
dec
fwait
and
xor
jp
pop
push
lds
sub
dec
inc
jbe
cli
xor
mov
add
add
dec
pop
cmp
sbb
mov
into
xchg
push
jb
sbb
pop
stos
pop
xchg
jle
mov
push
push
pop
jb
lret
jae
jnp
mov
cmp
add
pop
out
iret
and
gs
fldcw
dec
dec
push
inc
push
loopne
divl
fs
es
js
dec
pop
push
dec
jle
dec
jl
dec
fcmovu
enter
int
shl
clc
fwait
push
mov
fs
lcall
xor
pop
dec
adc
xor
inc
bound
jmp
and
je
xchg
cmp
aaa
fidivrl
and
jns
dec
bound
fwait
and
out
inc
mov
push
push
arpl
jmp
test
dec
adc
gs
ret
and
sbbb
gs
push
adc
cmpsl
cmc
das
mov
sub
dec
mov
insb
inc
mov
mov
andl
mov
jmp
cmp
pop
mov
stos
mov
xor
sbb
mov
jb
mov
in
mov
enter
jae
xor
jae
jbe
pop
sar
push
test
clc
cwtl
pop
repnz
xor
cmc
call
cmpsb
rorb
fiaddl
out
aad
xchg
cwtl
jle
lods
test
dec
lcall
add
push
lret
mov
mov
push
rcrl
loop
leave
in
ret
ret
fs
js
sbb
loope
pop
adc
sbb
lret
dec
adcl
adc
int3
imul
xor
mov
repz
mov
jo
mov
psubusw
add
in
xchg
sbb
flds
ds
inc
movsl
mov
mov
push
filds
dec
les
loope
scas
ret
jp
mov
mov
fidivs
mov
ficoms
jmp
lret
mov
jnp
rcrb
data16
mov
cmpsb
xor
xlat
mov
lds
xor
into
aam
xchg
push
add
and
adc
mov
cmp
lret
enter
repnz
enter
push
test
inc
and
dec
daa
sbbb
and
mov
popa
out
outsl
orl
fmul
add
dec
sbb
jmp
sarl
pop
decb
push
fsubr
mov
adc
pop
and
in
sub
mov
push
mov
inc
adc
lods
adc
cmc
push
jmp
fists
outsb
hlt
adc
lret
inc
inc
and
xchg
lds
sahf
hlt
dec
push
outsl
ss
fwait
inc
fs
into
in
dec
icebp
jl
ds
mov
sbb
lret
cltd
adc
fidivl
push
ret
cmp
loope
or
sti
ret
mov
shll
lods
lret
sub
aas
xor
imul
into
xor
dec
js
mov
mov
cmp
insb
cmpsb
out
dec
lock
push
std
dec
or
jl
xor
jle
shlb
filds
rorl
xchg
insb
popf
adc
lret
mov
shl
sbb
outsl
adc
es
lahf
shrl
mov
jno
mov
jno
jp
cmp
jb
jmp
jl
cmp
out
and
nop
adc
mov
push
xor
jmp
out
es
mov
aaa
pop
aad
scas
xor
cmp
adc
mov
iret
add
dec
inc
dec
ds
xchg
addr16
pop
push
adc
mov
add
outsb
cmp
sub
cmp
jl
repnz
and
cmp
xor
xchg
fdivrs
push
push
jmp
repnz
inc
mov
lret
inc
sbb
cmp
outsl
enter
adc
add
mov
inc
xor
sub
mov
xor
jle
and
dec
cmpsl
js
sbb
test
in
jecxz
lret
push
into
in
iret
dec
sbb
stc
push
jmp
push
lret
dec
mov
scas
xchg
xchg
outsl
jg
push
mov
repnz
sbbb
mov
mov
xchg
jb
pop
dec
push
jno
xor
cmpsb
and
scas
push
cs
mov
or
inc
fdivs
lret
int
push
and
test
fdivl
inc
jo
pusha
loope
mov
or
fisttpll
mov
rorb
sub
mov
mov
lret
inc
push
arpl
es
pop
je
pop
in
mov
adc
mov
mov
jge
sbb
ret
pop
xor
dec
mov
add
movsb
jl
mov
mov
add
pop
push
mov
and
addr16
or
sub
add
cli
push
add
adc
sahf
test
scas
inc
adc
lret
xchg
lock
popa
icebp
fs
xchg
mov
and
xchg
fsts
pop
ffreep
shlb
add
mov
pop
repnz
ret
push
cmp
dec
int
test
movsl
shl
lret
mov
xor
hlt
ds
mov
sub
and
shll
xchg
js
xchg
jl
cmp
es
int
ret
test
ret
jns
mov
loopne
es
lret
mov
arpl
lcall
fisubl
loop
mov
inc
sbb
and
rep
mov
pop
push
clc
in
je
mov
dec
mov
adc
sub
mov
inc
sbb
xchg
mov
and
jno
lahf
jge
cmp
and
movsl
push
and
xor
lcall
adc
jo
cltd
adcl
lods
scas
in
mov
gs
lods
jp
inc
push
push
ret
or
stc
or
mov
inc
mov
inc
mov
sbb
dec
test
cmp
xor
xor
sub
cmp
jae
cmpsb
adcl
arpl
pmulhuw
push
sub
pop
repz
pop
sbb
fsub
mov
ds
shlb
pop
out
push
aad
pop
or
fstl
cltd
and
lock
adc
das
mov
pop
dec
sub
daa
repnz
jmp
adc
xchg
js
sbb
mov
cmp
cmp
mov
xor
arpl
xorb
lahf
mov
outsl
repnz
push
mov
sbb
mov
fsubr
mov
inc
lret
mov
xor
shll
dec
ret
imul
int
cmpb
adc
xchg
lea
jno
test
dec
xchg
jns
test
mov
mov
cmp
sti
orl
or
les
fisubs
std
pop
xchg
sbb
popa
fisubrl
in
into
outsb
or
jae
adc
pop
inc
xchg
fcomps
or
rorl
lcall
insb
cmpl
mov
xchg
into
and
push
push
gs
cld
mov
pushf
sbb
ror
mov
mov
fisttpll
lahf
mov
jl
pop
jb
mov
cmp
andb
mov
roll
add
mov
clc
enter
xchg
outsl
xchg
es
mov
into
sub
gs
mov
into
fidivrs
xchg
push
and
sarb
jb
rclb
pop
jle
mov
ja
cwtl
mov
iret
movsl
xor
cmp
ror
bound
cs
xor
ds
subl
cmp
or
xor
lcall
lret
fcmove
xlat
out
dec
dec
fwait
xchg
sbb
daa
lahf
pusha
in
push
sub
dec
pop
mov
push
sub
fcmovnb
sub
rorl
pusha
pop
hlt
or
popa
lock
add
adc
fs
pop
int
mov
push
in
mov
lock
cmc
rcrb
shll
xchg
dec
loopne
scas
cmpsb
xchg
je
lea
mov
jge
daa
cmpsb
inc
pop
mov
xor
xor
pop
dec
pop
xor
mov
xchg
mov
push
pop
rcrl
mov
shll
xchg
push
incb
mov
lods
cmp
jo
ret
out
gs
mov
dec
mov
ret
mov
jmp
add
repnz
test
xchg
gs
es
iret
sub
outsb
lods
xchg
ret
lods
loop
cltd
sub
gs
mov
xchg
jecxz
adc
int3
pop
xchg
push
testl
mov
lods
stos
out
xchg
mov
out
imul
test
fidivrl
pop
scas
sbb
mov
lret
lods
mov
sarl
subl
jo
xor
ret
inc
sbb
xor
jae
mov
shll
lret
jno
movsb
dec
xlat
cmp
ja
sbb
cmp
cmp
dec
and
pop
sbb
lret
test
cmp
dec
lret
leave
test
dec
and
inc
sbb
dec
inc
sbb
int
lock
cmp
mov
lret
sbb
mov
cmp
inc
imul
or
xor
sub
dec
mov
or
dec
ljmp
mov
popf
sahf
js,pn
test
xor
lret
es
xor
pop
xor
inc
lret
add
icebp
sub
pop
negl
sarl
int
out
sub
xor
cmp
ret
decl
pushf
push
mov
rcrl
dec
lret
bound
xor
ds
push
shrb
dec
bound
sbb
dec
mov
xchg
lret
or
lret
mov
dec
ljmp
bound
call
ror
sbb
ds
push
pusha
mov
into
call
outsb
add
add
sbb
jge
jg
adc
push
xchg
xchg
insb
repz
scas
push
out
add
pusha
inc
loope
sub
adc
mov
ret
sti
dec
inc
jo
lret
mov
in
and
jae
xor
pusha
jecxz
test
mov
mov
fucomp
jecxz
data16
int3
sbb
push
mov
mov
pushl
cmp
pop
test
xor
mov
and
enter
pop
adc
leave
sbb
inc
leave
int
lods
xchg
insl
lcall
mov
ret
outsb
lret
mov
cmpsb
mov
xor
cmp
xor
jmp
sbb
roll
lahf
mov
lret
stos
orl
stos
add
jne
dec
and
jnp
rcll
pusha
je
faddl
pop
imul
cmpb
jo
rcrb
xchg
sbb
rcrb
inc
ds
inc
ret
lcall
add
test
je
xor
in
adc
add
and
icebp
sbb
mov
mov
jle
rcr
mov
cmp
and
repnz
xchg
pop
xchg
mov
lahf
into
stc
mov
rcrl
add
fsubs
or
sbbb
mov
daa
into
test
ds
or
loope
xchg
dec
cmc
sti
call
sbb
jg
push
ss
loop
into
iret
iret
mov
sahf
shlb
add
xchg
movsl
mov
enter
xor
xor
xor
cli
mov
and
rcll
shl
add
jl
call
sbbb
and
pop
xchg
movsl
lock
stos
add
jo
in
movsb
sahf
test
mov
rcr
inc
jae
call
pushf
dec
or
pushf
divb
out
fcomps
es
pop
inc
pop
popl
test
sarb
adc
cmp
sbb
fwait
out
push
add
xchg
jl
in
aas
rcrb
test
push
je
cmp
pop
dec
test
jno
dec
mov
je
cmpsb
inc
xor
repnz
les
xor
inc
dec
inc
sbb
or
arpl
inc
nop
cltd
jecxz
sbb
inc
add
stos
cmp
pop
mov
cmpsb
sbb
aaa
fadd
out
stos
dec
and
mov
shrb
adc
ja
adc
xor
sbb
jp
mov
pop
or
xchg
frstor
adc
add
icebp
mov
je
mov
lret
dec
sbb
mov
das
cli
iret
pop
push
je
pop
hlt
mov
or
fwait
sub
in
stos
or
dec
mov
call
mov
pop
inc
xor
pop
push
loope
mov
nop
or
mov
test
xor
jle
xor
xchg
xor
ds
cwtl
push
mov
sahf
int3
jge
inc
cmp
jbe
fcmove
adc
push
repnz
push
xor
lods
dec
outsl
sbb
jmp
fcomps
cmp
cmc
mov
and
push
mov
dec
out
fnsave
aaa
pop
fmul
into
repnz
push
xlat
fstpl
mov
dec
and
clc
dec
outsb
cmp
inc
js
sbb
js
repz
jle
xor
sbb
dec
jae
mov
adc
pushf
xchg
stos
xchg
sub
jo
lea
xchg
leave
ret
push
rcrl
dec
and
int3
inc
and
ja
push
popf
into
lret
pop
mov
js
mov
xor
js
fs
je
adc
popa
inc
stos
cmp
mov
fstl
push
stos
pushf
jns
test
sub
sbb
js
repz
pusha
add
adc
das
es
jno
repnz
ficoml
dec
cmp
xchg
in
push
jno
jle
xor
pop
xchg
pushf
dec
sub
jbe
inc
js
pop
push
shll
sbb
lcall
into
xor
adc
mov
and
bound
clc
sbb
dec
or
mov
sub
xor
loop
and
loopne
jg
cs
dec
sub
sbb
xor
sbb
cmp
cmp
jl
jp
lret
mov
mov
dec
call
addl
push
fisttpll
into
lret
dec
add
cmc
ds
sbb
mov
pop
lret
xor
xor
xor
adc
or
push
shrl
push
pushf
add
mov
int
mov
test
inc
in
sbbl
inc
data16
fisubrs
mov
in
inc
adc
add
jae
jmp
mov
pop
stos
rcll
pop
xor
inc
mov
in
rcl
sbb
cs
repnz
jg
in
repnz
sbb
stc
cmp
xor
sbb
jmp
pop
ss
lahf
pop
cmc
xchg
mov
es
stos
push
mov
mov
mov
dec
sub
repnz
mov
push
cmpsb
inc
lds
sbb
js
negb
mov
out
sahf
add
adc
js
inc
mov
mov
xchg
pop
xlat
mov
push
cmpsb
mov
and
adc
orl
push
adc
imul
stc
icebp
sub
mov
imul
in
xor
mov
popl
adc
imul
mov
je
mov
dec
clc
mov
fisttpl
outsl
out
inc
mov
cmp
pop
enter
mov
sti
jnp
adc
and
mov
mov
ja
scas
les
mov
dec
mov
jp
repnz
inc
jl
js
and
cltd
mov
seto
jnp
jle
jb
push
lret
or
mov
loop
bnd
push
mov
xor
xchg
sbb
ret
lret
addr16
repnz
and
sbb
pop
push
inc
jl
add
aam
and
dec
shll
lods
repnz
mov
push
dec
adc
xor
jbe
and
pop
xor
enter
xor
mov
int
and
sub
xchg
xchg
push
mov
inc
mov
inc
mov
pop
cmp
cld
or
cmp
jl
add
cmpsb
pop
jecxz
xchg
imul
and
fadd
pushw
rclb
dec
add
ljmp
repz
jle
mov
ret
dec
repnz
mov
icebp
roll
shl
mov
xchg
jecxz
repnz
mov
outsb
xor
inc
mov
fcoml
repnz
dec
adc
xchg
add
in
lret
pop
and
adc
orb
es
jmp
cmp
mov
dec
lret
daa
cmp
int
pop
cmp
out
ret
add
leave
mov
dec
out
and
shrb
mov
push
xor
ss
sub
adc
cmp
mov
mov
ds
imul
mov
in
inc
and
and
push
add
out
mov
jno
mov
cmp
push
rcll
and
loop
jb
int3
xchg
mov
inc
add
inc
je
lods
mov
shrb
or
outsl
jo
add
lret
test
fcmove
cmpsb
lock
fdivrs
mov
and
fsubrp
mov
inc
jbe
sub
ret
rorb
addr16
out
xor
popl
adc
rolb
mov
aaa
aad
dec
mov
dec
dec
lret
in
andb
jae
adc
dec
push
mov
cmp
imul
cltd
or
stos
adc
jp
mov
es
push
repnz
jno
push
lret
pop
jbe
mov
xor
and
incl
fdivl
pop
dec
fwait
shll
in
loopne
negl
sbb
xchg
ljmp
push
and
test
cmp
sub
data16
xor
lods
mov
pushf
mov
rep
sbb
and
sbb
sub
mov
push
adc
jl
sahf
dec
pushf
and
jae
mov
inc
jno
fcoms
push
jnp
scas
cmp
jle
mov
inc
es
adc
jp
fnstsw
cmp
jno
loope
mov
pop
mov
ss
lret
mov
dec
xor
icebp
xlat
or
jp
stos
push
and
pop
push
mov
and
pop
mov
js
mov
xor
dec
push
push
xchg
mov
jo
out
out
xor
dec
int3
mov
dec
in
inc
xor
inc
lock
mov
pop
adc
pop
out
dec
or
cmove
je
sub
pop
mov
ds
xchg
xchg
jp
dec
ljmp
adc
gs
movsl
scas
cmp
inc
mov
mov
ds
outsl
xor
loop
out
out
call
cs
jl
push
sar
sbb
stos
pop
pslld
sub
mov
add
jmp
leave
cmp
outsb
add
je
out
push
jge
mov
push
push
repz
xor
add
pusha
int3
push
jg
xchg
dec
adc
xchg
scas
arpl
leave
adc
jns
lret
daa
mov
push
rolb
sub
xor
dec
cmp
xchg
mov
xor
int3
add
pushf
pop
pop
jl
jbe
adc
or
lret
movsb
repnz
jl
sbb
pop
jne
mov
loop
sbb
enter
mov
add
into
jns
pop
pop
test
adc
lret
jae
push
aas
push
sub
jmp
aas
adc
push
scas
adc
xorl
mov
insb
mov
mov
jecxz
cmp
and
and
and
stc
outsb
mov
rcll
inc
out
pop
sub
mov
mov
dec
js
xor
jecxz
xchg
fnsave
es
lret
daa
push
mov
jge
loopne
push
lods
roll
or
mov
fwait
xor
sbb
add
rcrb
repnz
ljmp
lds
aad
push
add
adc
ret
push
repz
pop
push
adc
mov
mov
ljmp
imul
ds
push
loop
mov
test
je
inc
popa
xlat
jge
in
negl
pop
jecxz
shrl
jnp
dec
es
cmp
sub
mov
adc
adc
or
sbb
push
mov
loop
xchg
cmpb
fiaddl
iret
xor
sbb
sbb
loop
pop
sti
in
jb
push
js
dec
fistpl
cs
out
mov
ds
leave
mov
and
push
mov
cmp
movl
dec
and
out
mov
inc
and
iret
xchg
mov
adc
inc
int
dec
jb
push
lods
ret
pop
outsb
jnp
cltd
aas
imul
and
cmp
scas
mov
scas
add
dec
jae
xor
jns
es
inc
cmc
fcmovb
repz
xor
sar
fisubrs
or
ror
inc
nop
mov
lea
out
mov
xor
es
mov
jo
out
push
adc
rcrb
bound
mov
loope
inc
insl
lahf
popa
lods
inc
out
xorl
xor
clc
jg
inc
mov
add
jp
xchg
push
xchg
cvtdq2ps
xchg
data16
outsb
push
lret
push
mov
insl
fadds
rclb
pop
fwait
inc
aas
inc
cs
insl
xor
pop
jl
mov
mov
pop
sbb
add
add
sbb
jecxz
push
out
dec
mov
out
jp
mov
fwait
jmp
loop
sub
repnz
addr16
cmpps
mov
inc
xorl
adc
adc
ja
aam
pop
jnp
xorl
cli
lret
lret
xor
xlat
jae
inc
mov
icebp
decl
outsl
loop
mov
in
cmp
loope
leave
sti
nop
and
repnz
dec
jnp
inc
pop
loop
push
mov
xchg
cmp
inc
push
cmpl
sarl
aad
stos
rclb
bound
popa
xor
jg
push
cmpl
insl
jo
loopne
int3
dec
push
xor
cltd
out
leave
es
adc
cmpsl
stos
mov
xor
push
fdivl
mov
sbb
sbb
adc
fldcw
pop
sbb
mov
mov
push
mov
jae
dec
jne
mov
mov
aad
jne
inc
adc
pop
sub
sahf
pop
push
dec
sbb
jns
mov
xchg
push
jg
xor
fwait
pop
hlt
mov
push
imul
orl
push
jo
xor
push
aad
or
dec
in
mov
pushf
jg
notl
popl
loope
jne
inc
les
filds
test
call
push
sbb
jmp
lcall
inc
sbb
inc
sbb
bound
or
pop
pop
sbb
cmc
int3
push
je
scas
data16
jae
adc
insb
push
aam
dec
dec
or
std
in
sbb
cmp
xchg
ret
sbb
aas
jne
inc
push
into
xchg
repz
inc
and
dec
aaa
cmpsb
test
sti
sar
outsl
pop
and
push
in
pop
jb
or
sbb
push
cmp
jbe
or
push
dec
lods
adc
mov
stos
sub
adc
popa
loope
insl
mov
sub
jbe
inc
ljmp
arpl
xchg
cvttps2pi
push
fisttpl
lcall
dec
xchg
outsl
dec
loopne
mov
jbe
or
jae
mov
push
mov
xor
mov
inc
es
inc
mov
cli
cmp
inc
sub
xor
jge
push
js
pop
inc
into
pop
xor
xchg
mov
push
sbb
push
pop
imul
lcall
sbb
and
xchg
mov
repnz
mov
inc
bound
push
sub
inc
sbb
mov
sbb
ds
xor
mov
mov
dec
fmuls
sub
mov
subl
jp
mov
int
mov
in
int
mov
xchg
leave
mov
int
clc
and
sub
dec
mov
movsl
test
repnz
lret
mov
push
fldl
cmp
xchg
pop
shll
scas
pop
js
scas
movsl
cwtl
outsb
mov
xor
in
inc
sbb
mov
sarl
and
add
shrb
mov
ret
jmp
xchg
daa
jno
mov
repnz
bound
sub
lods
ja
push
lods
jge
lock
outsl
push
jno
xor
shlb
lahf
pop
jae
sbb
into
gs
daa
or
xor
out
add
jb
mov
repnz
call
xchg
lds
out
fisubrs
mov
lods
pop
jg
js
js
adc
mov
xchg
jle
pop
outsb
mov
mov
scas
sub
sbb
push
mov
jns
sbbl
push
cmp
add
jge
int3
sarb
mov
mov
and
push
fs
int
mov
enter
neg
jge
cmp
sarl
and
sub
rclb
ds
mov
cli
cmp
fstpt
aaa
inc
ret
mov
mov
xor
movsl
adc
xchg
lods
imul
jle
mov
dec
push
inc
int
fistpl
pshufw
mov
dec
jo
sbb
movsb
add
pop
and
mov
push
lock
inc
cmp
lret
or
orl
out
cltd
in
or
negb
xor
test
lahf
push
jo
dec
jl
flds
adc
sbb
sbb
lret
jae
mov
add
aaa
jl
dec
test
mov
pop
mov
sbb
inc
sub
es
gs
test
mov
sbb
push
xchg
insb
mov
ficoml
loop
sub
xlat
cmpl
sub
mov
jl
adc
pop
push
aad
push
enter
pop
imul
fisubrs
scas
mov
addr16
adc
test
movsl
jge
sbbb
dec
push
add
stc
mov
stos
sub
adc
dec
push
mov
pop
and
jo
sub
xor
outsb
je
push
dec
pop
inc
dec
dec
mov
pusha
sbb
sub
mov
nop
out
sti
mov
dec
xor
ret
mov
cs
nop
ja
mov
insl
adc
inc
add
dec
fwait
mov
lahf
pop
test
lret
jo
movsb
pop
adc
xchg
xchg
pop
pop
mov
mov
mov
push
push
outsl
cmpb
sarl
cmp
lret
mov
mov
bound
lea
ds
clc
clc
and
rorl
fsts
mov
out
mov
dec
cmp
lret
add
adc
add
lods
imul
outsl
jne
pop
cmp
push
pop
or
sbbl
rorl
in
fsubs
lahf
sti
mov
call
sti
inc
mov
loope
mov
sub
push
repnz
push
outsl
xorl
jp
cmc
out
cmp
push
lret
mov
mov
cmovne
sub
adc
out
imul
jns
ret
sti
sbb
push
cmpsb
dec
sti
jp
sub
jae
ret
push
hlt
shrl
scas
sbb
repz
ds
pop
cmc
cld
adc
sbb
dec
xchg
lds
push
rolb
pop
and
xchg
jecxz
test
mov
push
sub
push
xchg
iret
push
xchg
xchg
sbb
cmp
mov
fdivl
frstor
push
fidivl
adc
fs
fbstp
xchg
jns
mov
push
and
fwait
lret
decb
sub
cmp
jnp
mov
inc
jp
cmc
and
mov
adc
popa
test
mov
jnp
pop
jbe
sbb
pop
insl
add
cmpsl
push
rorb
or
ret
cs
nop
xchg
sbb
call
push
out
inc
sub
pop
fists
push
adc
int3
pop
out
mov
lahf
push
repz
sahf
cmp
lods
adc
arpl
gs
xchg
leave
pop
in
cmp
shrl
mov
cmc
dec
sbb
iret
cmpsl
or
ret
cmp
jnp
push
mov
ds
js
aad
aam
sub
fildl
outsl
cltd
adc
sub
sub
cmp
xor
es
je
cmp
xchg
xor
and
mov
mov
jae
cmpsl
notl
ja
or
dec
adc
pop
and
imul
jmp
aas
test
or
fisttpl
movsl
push
mov
jmp
sbb
xor
jg
loop
mov
bnd
dec
lret
lret
sub
push
dec
jle
out
xchg
dec
mov
jnp
fnstsw
adc
je
jl
into
repz
cmpsb
inc
add
fstp
cmp
int
add
mov
lods
dec
into
shll
stos
mov
in
fists
mov
lahf
xchg
push
popf
rorl
repz
daa
lcall
in
inc
push
dec
inc
adc
es
push
jb
adc
jmp
popf
mul
cld
shl
mov
nop
dec
test
sbb
jp
mov
ljmp
into
jb
fcoml
jle
adc
mov
outsb
adc
ret
into
jb
push
icebp
dec
jae
push
pop
jecxz
adc
mov
xor
or
fwait
popl
inc
scas
mov
bound
mov
sarl
push
push
sbb
jo
mov
nop
hlt
adc
or
and
add
push
pop
in
cltd
stos
lret
xchg
mov
aam
dec
sbb
sbb
movsl
lret
std
jecxz
popa
inc
dec
xchg
inc
mov
fisttpll
test
int
jge
stc
jbe
push
out
pop
inc
cmp
andl
add
mov
pushf
mov
mov
push
stc
mov
daa
adc
ljmp
bound
inc
mov
je
push
mov
outsl
mov
dec
xor
pop
mov
sbb
xchg
cs
dec
in
hlt
mov
mov
in
add
imul
cs
jle
xor
xchg
mov
clc
int3
adc
cmp
insb
cmc
jb
push
push
jl
and
mov
push
in
fcoml
cmp
xor
dec
fcoms
out
sahf
in
pop
inc
cmp
inc
jle
xor
mov
mov
lock
xchg
jb
add
daa
loop
mov
repz
mov
leave
dec
cmc
ljmp
lds
adc
gs
dec
pop
mov
and
test
add
xor
rcll
loop
mov
inc
mov
pop
adc
cmp
mov
adc
cwtl
adc
sbb
push
cld
xchg
fadd
inc
insb
mov
adcl
sahf
dec
inc
loope
jle
pushf
sub
adc
jae
mov
jnp
cmp
in
fisubrl
cmp
xchg
add
movsb
mov
stos
xchg
insl
adc
sub
push
sti
in
pop
std
or
jmp
add
push
bound
aad
nop
mov
es
jb
or
test
mov
jo
lcall
xor
ds
sbb
jo
stos
xchg
mov
je
mov
add
ret
xor
mov
rorb
inc
mov
je
and
push
pop
mov
leave
sbb
and
push
fildll
jp
xchg
inc
cmp
push
cvtps2pd
iret
push
repnz
and
out
stos
mov
cmp
insl
out
xchg
js
cmp
es
jnp
enter
cld
bnd
xor
stos
lock
cmpsb
loope
test
pop
sbb
sbb
pop
inc
jl
or
insb
pop
jl
push
fnsave
mov
xchg
lds
add
subb
popf
dec
xchg
in
push
adc
je,pt
cmpsb
orl
dec
jne
xchg
cmpsl
loop
xchg
dec
inc
fs
loop
mov
dec
push
cmpsb
leave
repz
and
lea
mov
loope
jnp
mov
cmp
sbb
fdivrl
sbb
dec
xor
xchg
sbb
or
inc
inc
xor
test
fsubl
bound
dec
test
repz
push
mov
scas
push
icebp
dec
sub
and
sar
pop
aaa
and
inc
pop
inc
and
or
jl
jns
mov
sbb
cld
loopne
add
mov
in
push
scas
movsl
daa
fwait
jns
ss
out
fwait
adcb
shrl
mov
sub
mov
sbb
shrb
notb
cmp
lcall
mov
lcall
push
loop
jne
repz
data16
je
push
cmpsb
clc
repnz
mov
adc
je
xchg
int3
pop
shrl
dec
mov
out
js
inc
sbbb
push
jne
cmp
in
xor
lea
imul
or
test
negl
clc
mov
xor
rcrl
ds
xor
or
mov
xor
mov
fdiv
dec
mov
es
xor
xor
repz
hlt
cmp
jmp
sahf
cmp
ds
ss
pop
das
mov
ss
sti
rcll
inc
mov
mov
mov
imul
int
push
stc
mov
xchg
out
stos
push
jmp
fwait
mov
add
mov
lods
test
push
inc
dec
dec
mov
cmp
into
sub
nop
std
mov
gs
cmp
in
pop
in
adc
out
jecxz
test
xor
xchg
lcall
xchg
repz
xchg
or
and
test
stc
mov
das
sbb
dec
sub
xchg
mov
inc
dec
mov
leave
ja
aaa
xchg
or
or
ljmp
outsl
dec
inc
mov
or
jae
add
je
mov
pop
outsl
inc
ficompl
dec
outsl
sub
jmp
lahf
xor
xchg
test
xchg
imulb
test
outsb
jg
jns
in
test
repnz
sbbl
pop
cmpsb
and
jo
sbb
out
popf
arpl
fsub
adc
cs
enter
imul
push
sbb
out
dec
add
mov
adc
jns
add
orl
mov
addr16
cs
out
loop
xchg
xor
or
jle
and
popa
pop
jnp
xchg
inc
data16
in
in
inc
mov
pop
lret
ljmp
jle
mov
adc
and
mov
sbb
sbb
repnz
dec
push
stos
sbb
popa
orb
inc
and
stc
jb
cwtl
inc
mov
inc
pop
into
mov
ljmp
ret
mov
decb
push
xor
repz
shl
sub
or
adc
sub
mov
fisttpll
pop
cmp
cmpsb
or
and
add
js
push
mov
je
cltd
fisubrl
jb
es
and
dec
pop
push
into
push
repnz
jo
jae
pushf
lock
andb
push
rolb
jecxz
repz
iret
sub
jp
cli
aam
sbb
adc
push
inc
xchg
filds
cmp
pop
or
mov
push
mov
mov
dec
cmp
imul
sbb
cmp
ljmp
xor
movsb
xchg
inc
lcall
into
pop
push
xchg
out
inc
ffreep
cmp
stos
add
outsb
sbbl
out
jb
sbb
xor
cmp
xor
xor
mov
les
insl
sbb
and
jno
lcall
cmp
xor
dec
pop
push
mov
stos
mov
cmp
jp
or
xor
cltd
fldenv
ds
inc
pop
jmp
sub
lock
dec
pop
andb
xor
mov
jmp
mov
cli
scas
mov
or
pop
xor
arpl
push
add
movsb
stos
out
rorb
pop
jo
lahf
out
lock
aas
xor
inc
nop
ret
ss
jo
lret
mov
fcoms
cmpsb
pusha
jp
jmp
lods
sub
lock
push
sahf
lret
push
xchg
mov
xor
mov
cs
leavew
and
sub
xor
pusha
and
and
loope
xchg
mov
or
add
xchg
in
or
in
shr
pusha
jns
sub
leave
mov
out
sub
push
add
jbe
adc
aaa
xlat
lods
scas
fmuls
xor
test
ret
les
ja
ss
dec
push
cmpsb
mov
add
dec
push
pusha
inc
ds
xchg
cmc
pop
sbb
loope
cli
push
jge
loopne
and
sub
ret
and
ds
es
inc
mov
aaa
loop
xorl
stos
sahf
loope
mov
ljmp
testl
es
sbb
fwait
lods
dec
mov
jnp
xlat
test
lods
sti
mov
fisubs
sbb
mov
inc
mov
mov
or
pop
jb
cmp
loope
adc
and
dec
adc
mov
xor
scas
jbe
sbb
xchg
and
mov
push
lds
dec
push
or
enter
pop
add
lods
mov
xor
hlt
ljmp
and
scas
call
cmpsb
lcall
mov
cli
cmc
bound
push
ret
std
leave
enter
mov
cmp
es
repz
mov
divl
xor
xor
xchg
aam
sbb
xchg
scas
push
mov
inc
xor
adc
inc
adc
mov
fbstp
shrl
repnz
hlt
cmp
xlat
cmp
ret
pop
ret
les
sub
or
sbb
out
mov
push
push
mov
xlat
fnstcw
out
jmp
push
sub
add
adc
and
sti
test
push
mov
or
dec
jl
push
mov
faddp
dec
rorb
outsb
cmpsb
mov
std
lods
lret
push
xor
xchg
xchg
and
scas
test
andl
jg
xor
mov
inc
dec
in
sub
cmp
jl
mov
jns
jno
jecxz
insl
in
push
pavgw
rcrl
sub
cmc
lods
into
popl
mov
js
sub
cmp
adc
push
sbb
or
push
adc
fsts
aas
mov
xor
dec
mov
mov
push
pop
cmp
inc
stc
ljmp
lods
jp
push
cs
sarl
mov
xchg
movsl
mov
or
rcrl
sahf
or
nop
adc
lods
jb
or
jnp
or
mov
push
ficoml
push
sbb
xor
aas
inc
ficoml
pop
push
dec
inc
sbbb
or
add
orb
lods
sbb
in
imulb
inc
or
addr16
cltd
jle
xchg
repnz
pop
scas
lcall
pusha
sub
mov
ret
or
lahf
jno
repnz
push
pop
mov
mov
jl
stos
sahf
in
or
push
sub
push
out
test
jle
push
xchg
sub
sbb
sbb
js
sbb
mov
sub
sbb
aam
xor
ds
pop
adc
cmc
cmp
fistps
sub
stos
das
mov
cmp
imul
sahf
dec
jp
andb
stos
mov
xor
cld
sub
pop
lcall
jge
sub
cmp
enter
mov
scas
inc
rcrl
jl
andl
cmp
cmp
jp
test
mov
sbb
lcall
jne
in
shl
mov
ljmp
dec
jnp
mov
jg
sub
or
es
loope
repnz
jae
dec
add
and
and
push
xor
cld
xchg
xor
jae
call
addr16
ret
outsb
lods
mov
mov
ret
mov
xchg
lods
and
ss
mov
jno
push
and
test
cmpsb
out
jbe
and
sbb
out
push
aad
jne
or
jnp
je
push
mov
jo
adc
bound
push
lahf
jbe
pop
sbb
outsl
mov
mov
mov
inc
xlat
sub
gs
imul
jmp
dec
fincstp
movsb
inc
mov
dec
cmp
sub
and
ljmp
xor
ds
xlat
and
sbb
cmp
sbb
lcall
push
cmp
sbb
push
mov
outsb
jge
not
adc
les
adc
loope
adc
loope
and
mov
jl
jge
push
mov
add
scas
push
push
imul
adc
shl
scas
fidivrl
or
jno
jle
stos
push
xor
sbb
les
xchg
pop
scas
ret
subl
cwtl
mov
mov
rorb
mov
pusha
fstpl
shl
pusha
sbb
mov
sub
imul
les
xchg
or
add
push
push
jb
dec
nop
lods
push
push
push
ficoms
mov
push
pop
mov
or
sub
or
ret
xchg
jo
inc
xchg
push
dec
and
cmp
out
out
sarb
je
add
in
jmp
xchg
paddusw
movl
mov
roll
popa
mov
push
lock
pop
je
push
cmc
sub
jb
xorl
and
fadds
shr
and
aad
cmp
dec
mov
in
daa
callw
hlt
rcrb
stc
icebp
cs
fidivl
inc
scas
pop
inc
mov
pop
jno
jns
bound
lret
push
add
mov
dec
jp,pn
mov
jmp
out
inc
stos
cmp
push
imul
aas
dec
dec
adc
and
jb
jb
int
xchg
shlb
mov
xor
out
mov
ret
push
adc
mov
scas
push
dec
js
push
dec
rcrb
and
movsl
jo
inc
js
mov
hlt
test
fisubl
pop
mov
es
push
add
ret
xor
push
xor
inc
aas
fsts
aam
xchg
dec
lret
jmp
push
sbb
and
push
inc
push
jle
decb
sub
or
sub
out
mov
vunpckhps
xchg
ja
pop
mov
xor
jle
es
sahf
jg
cmp
and
nop
or
bound
shlb
pop
adc
adc
sbb
dec
inc
rclb
dec
js
imul
mov
dec
ljmp
ds
push
mov
in
mov
fstpt
mov
xor
mov
dec
mov
inc
mov
cmp
enter
mov
pop
out
pop
xor
push
or
fcoml
push
mov
movsl
sbb
scas
jecxz
std
fdivrs
insl
cmpl
and
pop
add
pop
out
repnz
ret
lcall
leave
dec
aam
push
sub
sbb
rorl
mov
inc
pop
jmp
jecxz
lret
mov
mov
mov
addb
mul
mov
inc
data16
or
sarb
cs
push
ss
movsl
pop
popf
adc
push
mov
cmp
dec
adc
out
fldl
mov
out
push
lea
les
insb
mov
mov
arpl
dec
xor
cmp
jb
inc
lret
fimull
aaa
sti
push
mov
sub
sbb
mov
xchg
mov
sbb
ret
sbb
mov
xchg
mov
lret
jno
daa
xlat
les
mov
and
shrl
sub
ficomps
cltd
jl,pn
js
xchg
cltd
jle
mov
gs
imul
push
dec
es
cmpsb
aaa
adc
cmc
lea
sub
pop
adc
xor
inc
ss
xchg
rclb
insb
std
movsb
cmpsb
cli
inc
loope
notb
adc
mov
ss
push
mov
sbb
mov
inc
mov
mov
jle
inc
mov
mov
dec
jbe
inc
sbb
pop
out
add
sbb
dec
bnd
jb
test
das
test
push
jb
out
push
mov
js
ljmp
sub
push
xor
bound
aam
cmp
xchg
mov
jno
mov
inc
pop
push
xchg
jle
adc
sbb
and
mov
cmovge
rcrb
stos
ret
sbb
lret
sbb
sub
or
xor
test
ds
xchg
xchg
adc
pop
and
and
insb
push
cmpsb
or
jno
xor
lahf
cwtl
outsb
sub
inc
push
ss
loope
fstpt
dec
pop
adc
shlb
add
sub
dec
test
and
data16
inc
mov
pop
and
pushl
sahf
cs
in
jno
push
cmpsb
or
enter
adc
fidivs
cs
sbb
testb
scas
pushf
mov
cmp
addl
adc
pop
xchg
mov
cld
add
ffreep
pop
and
xor
movsl
pop
or
ret
data16
cmp
cld
mov
inc
xchg
mov
mov
cmp
jle
stc
push
jl,pt
sub
sub
dec
add
cmp
popf
addr16
ret
hlt
jb
loopne
mov
adc
jae
add
daa
lret
dec
xor
pop
rorl
loope
repnz
call
xchg
cmp
jmp
fbld
shlb
mov
or
mov
ficomps
or
mov
into
out
sub
movsb
xor
scas
jmp
outsb
ss
pop
or
cmp
mov
push
add
add
in
xor
jge
push
jp
jae
ret
adc
lock
fistpll
adc
fcoml
pop
xchg
in
dec
add
dec
or
outsl
adc
inc
rorl
sbb
popa
loopne
inc
ffreep
loopne
push
xchg
inc
jle
lcall
jb
stos
inc
jp
repz
push
ret
push
jl
or
mov
mov
mov
mov
xor
inc
adc
jmp
xor
mov
mov
es
mov
int3
and
push
adc
lret
adc
adc
test
jae
lods
mov
idivl
ds
jecxz
push
push
adc
cli
pop
ret
and
xchg
mov
fxch
mov
pop
shll
push
mov
es
dec
shrb
sbb
lret
lret
adc
mov
test
push
ret
ss
jnp
shr
fs
dec
and
mov
push
rcrl
daa
add
push
enter
mov
imul
scas
push
cmpsl
lea
fiaddl
jmp
adc
js
sbb
sbbb
imul
fistpll
sbb
sbb
pop
test
push
xlat
repnz
push
xor
es
or
daa
int3
and
mov
xor
jb
adc
dec
in
mov
leave
xor
mov
fistpl
adc
icebp
cld
test
push
mov
lret
mov
jb
idivb
mov
test
lret
or
fdivrl
or
mov
adc
mov
shlb
in
cmp
mov
xor
mov
outsb
push
xchg
jp
xor
cmp
in
loop
in
cmp
pop
jle
xchg
fistl
add
dec
stos
sbb
mov
pushw
adc
mov
xor
jl
movsl
sbb
mov
mov
ss
int
shll
ds
pusha
xor
cmp
sub
cmp
orl
jl
mov
add
test
es
hlt
push
pusha
mov
es
mov
lahf
jg
xlat
repz
cmpsb
je,pn
sub
lods
push
into
out
in
mov
addl
ja
jl
stc
es
mov
jp
js
outsb
inc
mov
imul
shlb
xchg
push
ss
push
jle
jb
push
inc
lods
xor
jecxz
jmp
arpl
adcl
into
sub
pop
add
adc
mov
mov
mov
and
pop
mov
data16
inc
adc
loop
clc
dec
cmp
xchg
das
mov
push
xlat
jg
call
imul
mov
jbe
enter
enter
mov
and
imul
ficoml
movsl
push
mov
arpl
call
mov
pop
cmp
dec
stos
or
jl
fldenv
push
jb
dec
rcr
addr16
jno
jp
adc
mov
inc
lret
jae
jnp
fnstsw
test
pop
js
shr
mov
cmpb
dec
lods
cs
shrb
out
or
and
lahf
repnz
mov
jle
mov
add
les
adcb
ret
es
and
fs
or
xchg
bnd
sbb
popa
xchg
pop
inc
inc
add
pop
jecxz
pop
lret
test
dec
ret
ja
mov
inc
in
leave
jl
test
inc
ja
adc
int
lds
repnz
dec
xchg
sbb
xor
mov
jbe
cltd
push
cltd
ret
push
cwtl
mov
ds
lods
xlat
mov
rolb
icebp
aad
dec
es
xor
fbstp
add
lret
sbb
lret
out
push
dec
sub
lods
repnz
dec
insb
fdivr
push
sti
or
xchg
jle
jg
aad
movsl
test
xor
lcall
nop
ret
or
cmp
mov
sbb
and
dec
adc
sbb
jecxz
lahf
push
mov
sub
lods
stos
adc
daa
imul
stos
cmp
repz
out
adc
or
outsl
xorl
cmp
pop
sbb
jo
js
sub
outsl
shlb
ret
ret
test
in
ficompl
dec
imul
imul
stc
add
sub
shll
andl
cmp
arpl
jae
sbb
and
or
je
in
inc
stos
rorl
mov
adc
lea
jne
rorb
jge
fadds
or
lret
clc
aas
dec
jp
lret
insb
enter
lock
xor
test
xchg
jae
xchg
push
jb
sbbl
xor
xchg
pop
and
je
mov
daa
mov
ds
sarl
loop
jnp
leave
add
enter
icebp
xchg
push
and
jo
cmp
mov
add
adc
outsb
and
jp
cmc
xchg
les
popf
mov
lcall
sbb
jp
cmc
dec
or
adc
out
adc
or
mov
push
ret
inc
fsubs
roll
jmp
and
mov
test
dec
jecxz
fdiv
pop
repnz
lods
cmp
push
mov
xor
shlb
shlb
sbb
in
fnstsw
cmp
pop
push
pusha
sbb
insl
cmpsl
cld
xchg
js
xchg
or
lret
test
sbb
insb
or
test
out
pop
mov
sbb
je
pop
scas
jl
xor
adc
mov
dec
sub
mov
cltd
shrb
sub
unpcklps
sti
rorb
lcall
out
bound
cltd
sbb
sbb
adcb
cwtl
xor
dec
mov
mov
orb
or
js
aam
in
cmpsl
add
sbb
shll
cmpsb
jae
fdivs
adc
pop
cmp
lea
subl
jne
adc
push
xor
movsb
test
adc
mov
pop
or
fists
push
pop
lahf
shlb
mov
jg
push
adc
movsb
add
or
mov
imul
xchg
stos
loopne
mov
xchg
scas
aam
push
mov
jge
in
repnz
dec
sbb
outsl
orb
sbb
dec
push
inc
lcall
or
jno
fsts
add
cmp
stc
or
push
rcl
pop
xor
cld
or
mov
es
inc
jl
shlb
sbb
jl
pop
cli
pop
jecxz
and
adc
clc
pop
adc
lods
jbe
mov
mov
push
cs
jns
movsl
pop
outsl
pop
cmp
xor
jecxz
add
adcb
fnsave
int
stos
mov
sub
dec
xor
mov
mov
mov
mov
aam
scas
adc
dec
push
ljmp
bound
sbb
lods
cmpb
cmp
lcall
orl
sbb
xchg
push
xchg
ja
js
sahf
pop
xchg
cmpb
xor
jg
das
pop
dec
inc
mov
push
std
fcmovnb
inc
popa
mov
xchg
hlt
pop
lret
pop
inc
or
sbb
add
pushw
inc
and
rcll
jmp
mov
lcall
xchg
dec
xor
lcall
jl
dec
xor
adc
je
and
dec
sbb
xor
cmpsb
sbb
loopne
fisttpll
int
scas
mov
in
repnz
xor
dec
push
cmpsb
fstsw
add
xchg
ss
mov
pop
aas
inc
stos
divb
sub
repnz
jp
call
ss
jae
push
test
je
push
decl
xchg
mov
add
pusha
roll
dec
subb
andb
xor
lahf
push
inc
xlat
mov
or
sub
fdivrl
or
xor
rcr
sub
or
sbb
xor
pop
arpl
lret
je
lock
sbb
cmpsb
gs
dec
into
xor
xchg
fincstp
jp
loope
popf
ret
jp
push
clc
ret
sub
jns
mov
out
loope
repz
rcll
adc
into
cmp
jmp
mov
lcall
xlat
adc
cmp
push
repnz
jo
shlb
add
adc
hlt
idivl
adc
pop
and
add
call
push
mov
adc
rcr
cli
mov
mov
leave
mov
fldenv
and
movsb
or
stos
into
add
outsl
dec
icebp
adc
inc
add
add
cmp
pop
test
into
test
sbb
sbb
fiaddl
mov
adc
out
je
pop
jl
push
cmpsl
mov
mov
push
rcrb
ds
sbb
sbb
mov
out
leave
ds
mov
sub
push
adc
xlat
cltd
add
scas
mov
shlb
jb
dec
push
pop
lock
mov
jb
pushf
jecxz
push
mov
mov
mov
push
mov
push
xor
cmpb
mov
lret
sti
push
sbb
mov
and
pop
ss
aam
in
adc
lahf
jp
call
gs
xor
push
fadds
loopne
push
cmp
or
mov
mov
dec
push
jg
dec
loope
lcall
test
mov
fucomi
or
out
stc
jns
pop
repnz
xchg
lods
xchg
stos
mov
push
dec
rorb
out
push
mov
push
mov
lcall
nop
dec
insl
mov
dec
xor
negb
mov
ja
ffree
popf
div
adc
cs
jns
xor
inc
xor
enter
and
dec
sbb
add
rcrb
stos
push
lds
loope
or
mov
dec
ret
dec
jb
jo
repz
in
sub
dec
dec
aad
fisubl
shll
xor
xchg
jne
xor
xchg
pop
cwtl
ljmp
pop
loopne
shl
or
loop
xchg
cld
test
lcall
roll
cmp
test
xorb
loopne
push
je
sbb
es
sbb
ds
or
movsb
cmp
mov
mov
dec
lods
aam
test
int3
loop
sbb
xchg
lcall
sbb
or
repz
inc
in
jg
push
add
lods
in
mov
and
cmp
mov
in
add
int3
in
in
ds
out
dec
xor
aas
clc
xorb
dec
pop
push
or
jmp
test
int3
sbb
pop
adcb
sti
lods
adc
mov
add
test
aas
and
das
repnz
popf
shlb
loopne
shll
fcmove
sbb
stos
aas
jbe
aas
scas
adc
insb
xchg
test
repnz
cltd
jl
sbb
loop
int3
mov
sbb
pop
fmuls
mov
pop
rorb
scas
out
mov
ss
push
and
sarb
xchg
pop
testl
es
xchg
ss
or
mull
mov
cmp
xor
pop
jne
mov
xor
jl
xor
sahf
movsl
cmp
pop
mov
pop
adc
fbstp
aad
into
bound
xor
jb
js
xor
stc
cld
push
lret
cmp
es
mov
lock
mov
pushf
inc
es
push
loopne
rcll
push
cltd
push
push
xchg
xchg
dec
pop
adc
in
cld
dec
lret
xor
dec
repnz
mov
push
xlat
pop
fsubp
pushf
xchg
adcb
adc
cmpsb
xor
dec
xor
jb
lcall
shll
ljmp
dec
clc
ret
test
cli
push
mov
jns
je
ljmp
cmp
jo
add
cmpsl
mov
ds
fcom
aad
mov
into
lock
out
mov
jns
xorb
test
pop
dec
xchg
mov
mov
stc
sub
xchg
push
sub
test
nop
andb
out
pop
ret
idivb
dec
add
mov
mov
xchg
xor
rcr
pop
push
pop
ljmp
dec
mov
cmp
dec
mov
loope
cmpsl
mov
cwtl
jl,pt
scas
fst
add
and
sti
or
jae
test
out
jecxz
jno
popf
stos
dec
aas
ds
ficoms
inc
pop
ds
dec
lock
sahf
push
dec
dec
in
out
pop
repnz
and
lock
xor
sbb
cmp
into
push
in
and
xor
mov
lock
dec
lea
inc
repnz
dec
xchg
cmp
lcall
into
cmp
fisubrl
pop
dec
xchg
add
daa
out
inc
out
loop
out
sahf
sub
js
js
sbb
in
mov
into
leave
loope
mov
xor
hlt
out
repz
xor
add
das
dec
jne
sbb
faddl
jbe
xchg
xchg
iret
ss
mov
aam
outsb
stos
jg
mov
add
lcall
leave
and
and
lcall
jg
jge
into
mov
test
inc
es
fbstp
xor
or
enter
call
test
sub
sbb
iret
lea
mov
lea
pop
mov
imul
arpl
dec
mov
dec
rcr
les
rcr
add
adc
test
ss
je
daa
pop
mov
in
and
movsl
sahf
into
loopne
je
xchg
in
cmp
and
enter
xor
insb
out
pop
int3
inc
and
icebp
dec
or
inc
push
sbb
pop
ljmp
or
negb
ret
xor
imul
pop
xor
std
jg
push
push
cs
push
fucomi
sub
or
push
subl
push
loopne
xchg
mov
repnz
repz
movsb
aad
lret
pop
cwtl
std
into
pop
sub
mov
cmp
lret
add
arpl
or
bound
mov
mov
inc
inc
repnz
jecxz
mov
mov
sbb
sub
les
lods
xor
sbb
test
jp
int
dec
les
xor
sub
jmp
jne
jo
or
dec
xor
ds
xchg
dec
cwtl
sbb
pop
mov
push
xchg
ss
rcrl
sub
rolb
jp
aas
sub
mov
sbb
ljmp
push
subb
pop
cmp
add
subb
adc
pop
pop
push
loopne
and
jbe
es
cmp
push
arpl
mov
andb
cmp
loop
lret
pop
scas
lahf
cwtl
inc
loope
scas
xchg
rorb
mov
or
xor
cmpsb
sbb
inc
ds
pop
out
icebp
fidivrl
mov
mov
xlat
and
jp
sbb
and
and
mov
mov
sub
mov
push
and
jecxz
cmp
cmpsb
cmp
pop
cmp
in
jl
bound
movsl
and
ljmp
fldl
mov
sbb
push
stc
pop
or
pop
and
sub
fiaddl
sbb
lret
faddp
bound
lret
scas
in
testb
push
jae
clc
pop
add
add
cs
jns
sbb
jg
push
sbb
rorl
xor
push
pop
mov
mov
imul
xorl
sbb
pop
cmp
test
fnstenv
push
leave
iret
das
fs
out
imul
jbe
ss
jbe
pop
das
ss
data16
pusha
in
rorl
lret
pop
test
push
mov
pop
dec
es
popa
sbb
or
adc
xlat
jb
and
je
xor
std
mov
add
ret
gs
sbb
dec
xor
lret
rcll
xor
movsb
mov
dec
into
push
and
insb
mov
addr16
int3
call
push
adc
dec
fisttpl
push
xchg
push
sbb
lret
leave
js
fsts
jne
out
mov
cmp
inc
mov
xchg
inc
mov
cmp
data16
mov
pop
mov
mov
mov
fdivrs
lahf
xchg
les
xchg
xchg
cs
out
mov
shr
lahf
push
push
jae
inc
mov
and
push
push
inc
lret
mov
xchg
cwtl
mov
imul
sbb
ja
mov
mov
cmpsb
enter
aad
mov
mov
dec
push
ljmp
mov
out
into
and
xchg
dec
rcrl
movsb
xor
sarl
jl,pn
mov
lret
add
shll
in
int
popf
ret
dec
jbe
int3
or
adc
jle
mov
jno
repnz
adc
scas
dec
inc
dec
mov
gs
je
add
jle
adc
shl
adc
push
adc
pop
dec
mov
fcmovnbe
lods
jl
andb
and
es
pop
rclb
test
pop
ror
xchg
xor
cld
and
jbe
jbe
dec
xchg
adc
test
fidivs
sbb
int3
inc
xchg
push
dec
fcmovne
and
sbb
xlat
jge
jecxz
repnz
dec
xchg
cmp
adc
dec
fisttps
mov
shll
sub
mov
xor
les
sbb
pop
sub
mov
sub
out
inc
fwait
sub
mov
and
dec
repnz
in
sbb
add
lret
adc
dec
es
mov
shl
pop
dec
sbb
mov
lcall
sbb
push
push
sub
jnp
and
xchg
dec
push
xor
sub
dec
sahf
adc
pop
fidivs
sub
pop
cmpsb
int3
pushf
lahf
cmp
xchg
push
sbb
add
movsb
fildll
push
sub
aad
in
imul
adc
push
aaa
loope
sub
and
inc
js
push
mov
sbb
add
bound
xor
xchg
mov
cmp
movl
jb
xor
pusha
cs
mov
adc
fwait
or
fisubl
push
add
repnz
les
jmp
fistps
pop
or
mov
lods
xor
cmp
xchg
push
jp
pusha
fists
mov
mov
inc
imul
mov
cmpsb
or
mov
mov
dec
aas
js
ret
movsb
cmpb
cmp
andb
xchg
sbb
dec
sbb
clc
push
adc
or
popf
mov
adc
hlt
js
sbb
das
push
loopne
pop
jl
cmpsb
pushf
repz
pop
or
push
sbb
adc
push
push
shlb
pop
mov
mov
das
or
imul
and
repz
sub
rcrl
push
push
sbb
iret
dec
dec
repnz
lret
push
outsb
mov
inc
in
std
lret
ds
mov
or
pusha
adc
mov
add
adc
popa
cmpsb
js
dec
adc
shl
jno
jne
sbb
in
dec
cmp
inc
sbbl
orl
das
jo
jae
and
cmp
rcr
add
pop
aam
mov
test
shrb
cmp
and
inc
cmp
jp
in
cmp
nop
xchg
outsl
jbe
enter
jne
lea
inc
mov
rclb
cmpsb
add
xor
repz
pop
mov
lds
add
in
mov
adc
mov
dec
mov
loope
into
jno
dec
ss
ret
push
insb
dec
push
outsl
mov
add
imul
lahf
imul
or
sbb
sbb
push
arpl
xor
jae
adc
hlt
fwait
pop
push
xor
xchg
jle
xor
pop
outsl
adc
xor
xchg
cmp
and
xchg
popa
andb
mov
lea
aam
dec
imul
lcall
test
cmp
scas
andb
add
cmpsb
cwtl
in
fisubs
imul
stc
dec
push
std
lahf
int3
jecxz
faddp
out
subb
push
mov
xchg
shrb
test
rclb
add
push
out
mov
repz
mov
jae,pt
mov
push
loope
xchg
in
in
and
jge
push
daa
and
xchg
inc
sbb
adc
adc
sub
jno
mov
js
dec
xchg
repnz
cmp
mov
xchg
ret
imul
dec
xor
mov
mov
js
cmp
ret
add
jne
lret
xor
sbb
test
jp
js
cmp
xor
js
in
adc
pop
add
and
and
xchg
cmp
sarb
xor
or
lods
sahf
lock
sbb
ds
fcoml
aam
outsb
adc
loopne,pt
adc
xor
sbb
xchg
mov
and
aad
inc
insb
push
and
cltd
sub
push
mov
loope
xchg
jg
mov
mov
jl
inc
mov
add
test
pop
insb
push
xor
test
js
outsl
dec
dec
mov
jg
mov
jp
wbinvd
xchg
fldenv
xor
cltd
sahf
insl
mov
ror
imul
adc
scas
repz
sahf
pop
insb
mov
mov
sbb
pop
ja
jle
lahf
sbb
or
or
arpl
or
xchg
leave
sbb
imull
xchg
ss
leave
jne
out
mov
repnz
mov
arpl
xor
cwtl
inc
imul
mov
sub
add
inc
push
into
out
icebp
sbb
xchg
inc
and
sbb
les
jmp
cmp
fstpl
inc
cwtl
inc
ds
inc
mov
add
and
dec
cmp
movsb
mov
outsb
fwait
xorl
pop
jb
xor
add
sub
fcompl
sbb
push
pop
aas
shll
adc
lcall
or
jmp
dec
or
push
int
pop
adc
lahf
in
bound
shll
dec
data16
mov
mov
popa
fwait
sti
cmp
in
mov
jbe
or
xchg
or
sbb
sarl
jne
xor
outsb
xchg
cmp
outsb
pop
arpl
in
ret
mov
adc
xchg
fadds
sub
sti
inc
imul
fnsave
xor
xchg
mov
stos
mov
in
jge
test
aad
rorb
in
jle
cmp
sub
and
dec
js
pop
out
rcll
dec
shrl
inc
pop
mov
fstl
out
lcall
sbb
fidivrl
xlat
fsts
ret
cld
cwtl
sub
negb
test
lret
and
jmp
ds
mov
cmp
mov
lret
xchg
nop
das
and
cmp
adc
lods
jg
rclb
std
imul
int3
push
push
jp
in
aad
push
mov
popa
sbb
idivl
xorl
in
js
outsl
mov
pop
sub
pusha
sbb
mov
inc
xor
xchg
xor
xchg
imul
sbb
sbb
mov
fwait
jo
mov
sbb
inc
mov
pop
cmp
out
andb
or
pop
dec
push
rcrl
outsw
fadds
in
dec
jl
pop
in
pop
mov
sub
cmpsb
bound
jmp
stc
jl
test
and
jge
mov
xchg
jne
scas
out
nop
stos
ljmp
and
fstps
outsb
sbb
repnz
or
dec
inc
inc
and
mov
ror
xchg
testb
test
pop
ds
and
aad
jle
dec
mov
fwait
or
jb
arpl
push
xlat
pop
jl
adc
cmpsl
or
pop
adc
jl
lret
dec
mov
repz
cs
jns
dec
ss
jle
sbb
imul
pop
imul
and
xor
add
xor
ret
and
inc
adc
out
sub
sahf
jns
adc
inc
rcll
jb
mov
orl
cs
add
pop
add
xchg
insb
js
enter
xchg
add
jbe
sub
dec
scas
and
shrl
adc
xor
and
or
test
mov
int
es
xor
and
dec
repz
movb
iret
inc
push
sbb
pusha
push
out
insb
in
cmpb
or
pop
sbb
sar
out
dec
test
test
ds
in
into
add
sub
test
test
cs
mov
or
xchg
popa
shlb
mov
dec
mov
rcrb
xchg
cmp
rcrl
loopne
pusha
lcall
xlat
ds
inc
mov
push
dec
mov
fldenv
loope
jecxz
ds
cmp
adc
jno
fcoms
jo
pop
mov
sbb
lret
mov
inc
cmp
mov
aam
and
sbb
jl
dec
jbe
ret
push
adc
mov
lcall
mov
test
dec
lret
xchg
pop
mov
out
push
mov
adc
subl
js
dec
cltd
movsb
dec
mov
sbb
cli
lods
dec
pop
xchg
in
call
sbb
jl
sbb
dec
loope
repnz
inc
or
shl
sbb
cmpsl
js
mov
mov
fdiv
dec
lcall
xor
int
push
push
sbb
jo
movsl
dec
mov
sbb
in
lea
mov
adc
sbb
adc
lea
jle
cmpl
jecxz
add
arpl
cmp
mov
ljmp
dec
mov
fidivrl
dec
xchg
xor
jecxz
loope
pop
dec
sbbb
mov
js
fiaddl
pop
out
mov
sbb
sbb
pushl
mov
adc
and
jb
mov
les
js
add
dec
popf
jp
jno
lret
into
lcall
or
push
sbb
inc
test
ss
js
dec
jne
inc
or
jle
push
imul
fstps
test
ds
dec
sahf
sarl
or
mov
fsubr
pop
pop
and
popf
ficoml
push
imul
push
fisubs
xor
sbb
sbb
add
mov
int
pop
jns
or
popf
mov
jne
xchg
xor
mov
push
mov
ds
hlt
sbb
xchg
sbb
enter
push
arpl
inc
dec
pop
in
xchg
mov
cmp
xor
shl
cmp
lock
sbb
sub
push
cwtl
repnz
xor
xor
mov
lret
mov
pop
jae
outsl
inc
push
es
mov
dec
xchg
dec
mov
jle
sub
xor
mov
aam
fstl
push
pop
outsl
lds
enter
cmpsb
es
and
js
hlt
pusha
imul
and
jnp
xchg
mov
popa
mov
out
popl
cmp
adc
stos
sub
xor
pop
pusha
mov
mov
imul
jno
or
adc
xchg
fsubs
adcb
scas
loopne
lahf
add
int3
enter
adc
and
scas
repz
mov
test
lock
lret
lds
mov
int3
notb
add
dec
je
fisubrl
cmp
lret
insb
sbb
rol
test
inc
adc
mov
cmpb
faddl
xchg
or
js
andl
aas
je
add
dec
pop
dec
push
aam
pusha
push
out
add
pop
cmpsb
push
add
cmpsl
adc
mov
sub
leave
mov
jnp
jno
push
xchg
mov
dec
cltd
aam
pop
jl
sbb
or
inc
xchg
sbb
rolb
jle
mov
xor
into
or
sbb
out
lret
pop
out
iret
btr
repnz
movsb
add
lds
dec
lret
jbe
xchg
fcomps
fwait
push
xor
fistpll
pop
adc
and
iret
jp
out
pop
fnsave
mov
adc
cwtl
lret
jo
ret
xor
cmpsl
mov
or
ss
mov
xor
xor
icebp
mov
jb
jb
ja
sbb
lds
in
jo
repnz
cs
xchg
fimuls
mov
pushf
mov
sub
imul
lret
outsb
jmp
ss
jae
dec
insb
loopne
adc
fcomps
and
bound
fbld
data16
stc
mov
mov
insl
add
inc
mov
lea
int3
int3
movsb
inc
dec
mov
out
ja
mov
mov
cmpsb
mov
iret
jo
push
sub
dec
jno
push
dec
or
jb
popa
lahf
es
repz
in
push
cs
cmp
xchg
and
enter
repnz
int3
movl
bt
test
add
andl
xchg
dec
mov
cmp
add
push
in
test
dec
mov
adc
mov
test
xchg
cmp
mov
add
imul
jns
mov
je
out
andb
xlat
mov
jp
cmc
movsb
sbb
jp
popf
mul
adc
sub
jns
ljmp
add
push
mov
in
xor
popl
movsb
pop
and
adc
jmp
sbb
pop
test
jp
mov
sbb
vpcomd
adcl
sbb
adc
inc
aam
aad
in
inc
mov
push
adc
ljmp
xchg
and
dec
xchg
xor
push
cmp
mov
adc
mulb
popf
xchg
leave
add
lds
jae
sub
sbb
fiaddl
es
pop
sbb
push
jnp
cmp
mov
xor
loopne
mov
jge
aam
in
push
data16
cltd
pop
outsb
lea
jb
out
or
mov
inc
adc
mov
xchg
fwait
pop
jnp
mov
mov
shr
pop
and
inc
lahf
pop
fistps
inc
mov
into
jo
mov
inc
daa
movsb
dec
ret
test
sbb
sbb
mov
sub
mov
test
pop
adc
dec
push
pop
lea
dec
mov
cld
dec
nop
pop
mov
cmpsb
mov
pop
test
or
fwait
mov
pusha
jp
xor
pop
popa
or
xlat
jp
call
dec
fdivrs
ret
push
mov
xor
pop
xor
push
dec
sbb
dec
mov
mov
jnp
insl
inc
jo
mov
ret
mov
jns
and
fisubrs
push
push
jne
pop
sarb
fwait
dec
jno
insl
dec
dec
loope
nop
push
mov
leave
bound
or
xor
add
fisubrl
jae
pop
pushl
mov
addl
pop
or
or
xchg
outsl
bound
adc
adc
fsubp
mov
in
jmp
add
aam
pushf
lods
ljmp
dec
push
adc
call
dec
xchg
shll
daa
pop
mov
jg
sub
repnz
jo
sbb
push
sub
and
shr
lcall
push
xchg
push
rol
inc
adc
add
mov
int3
outsb
adcl
cmpsl
push
fdivr
lret
sbb
or
xchg
push
mov
sub
xlat
and
dec
mov
popa
jmp
mov
jecxz
lret
inc
jno
push
rolb
dec
mov
xor
xchg
sub
xchg
cltd
imul
cmp
dec
scas
shl
mov
xor
dec
xor
jle
inc
xchg
pop
aad
sub
pop
int
sbb
cmpsl
jbe
push
popa
and
jb
inc
cmp
dec
in
scas
add
test
not
aaa
rorb
sbb
in
cmp
call
dec
jbe
xor
mov
cltd
push
mov
mov
je
or
or
adc
stos
test
xchg
dec
mov
mov
je
sub
jmp
jle
dec
cmp
xor
es
cmp
js
into
adc
inc
fnstenv
sbb
xor
test
dec
out
roll
dec
clc
aad
sbb
bound
push
inc
adc
sarb
stos
mov
cmp
dec
addb
xchg
gs
fsubs
dec
test
jmp
and
inc
je
xor
daa
add
xchg
cmp
jo
pop
add
les
cmpsl
add
sbb
sbb
inc
push
fwait
inc
loope
jp
dec
xchg
or
sbb
push
mov
or
cwtl
adc
inc
repnz
cmp
xchg
into
inc
fucomip
lods
in
mov
push
jle
movsb
sti
test
sub
test
sbb
lret
mov
xchg
and
es
mov
rcrb
or
pop
push
add
xchg
jnp
lcall
jp
cmp
sarl
filds
xor
mov
loop
sahf
xor
fwait
sbb
fstpt
mov
or
push
mov
popf
jb
test
push
xor
push
dec
mov
adc
push
imul
pop
adc
in
into
mov
lock
negb
sbb
pop
dec
push
push
outsb
pop
andb
push
insb
fnstcw
ret
mov
xchg
cmpsb
mov
dec
std
mov
popa
dec
ffree
sbb
jecxz
jmp
jbe
mov
int3
stc
mov
adc
and
push
clc
mov
lock
enter
mov
xchg
cmpsl
ja
fs
xchg
sarl
and
dec
mov
adc
xchg
add
test
loopne
roll
mov
imul
mov
mov
inc
pop
or
hlt
leave
adc
add
xchg
dec
cld
mov
pop
jp
iret
jbe
add
xor
test
jl
shll
add
dec
or
std
test
cmp
mov
rol
outsb
pop
push
xchg
pop
sbb
ss
aas
sub
sbb
loopne
fdivs
cltd
jle
dec
jl
add
pop
jle
dec
data16
mov
repz
movsl
inc
pusha
fcmovne
fs
lahf
mov
push
push
sbb
int3
insl
pop
adc
dec
sub
in
test
outsl
sbbb
xchg
dec
and
xchg
push
dec
into
mov
add
xlat
xor
dec
jle
daa
lret
and
into
add
jle
and
ret
sbb
loop
and
das
push
xchg
mov
mov
and
loop
aam
lock
xchg
cmp
add
imul
xor
mov
dec
pop
fdivrs
out
lcall
ds
loop
lcall
dec
cmp
and
cmp
push
je
aam
fisttpl
in
jmp
pop
outsb
mov
lret
xor
cmpl
out
outsb
test
sub
xor
out
mov
loop
out
lcall
pop
dec
sbb
loope,pt
js
xor
add
sbb
or
jns
mov
out
jmp
sti
xorb
inc
push
jl,pn
repnz
jle
xor
sbb
push
mov
xor
jge
inc
sbb
fstpt
or
xor
sbb
sbb
lcall
xor
inc
sbb
dec
xor
addr16
dec
iret
outsb
lret
bound
fwait
ja
sbb
inc
rclb
xor
out
inc
pop
ds
or
pop
dec
xor
sbb
cli
xchg
shlb
add
mov
pop
inc
and
test
cmp
popf
push
iret
fwait
sbb
stos
dec
int3
outsb
jl
repnz
ret
and
imul
out
sarb
aaa
mov
sub
ror
jae
mov
sarb
pop
inc
test
lea
das
sub
rol
inc
ret
fsubr
dec
cwtl
adc
outsb
pop
adcl
es
or
idivb
in
or
jae
bound
pop
rolb
mov
dec
inc
loopne
lcall
and
lock
xor
push
aam
test
jns
lret
shlb
cmp
dec
mov
outsb
lcall
mov
adc
pushw
inc
int
enter
int3
test
push
xchg
sahf
mov
add
repnz
add
mov
xlat
mov
popa
popf
outsb
dec
pop
test
or
ds
push
adc
shr
jno
sbb
and
pop
fstps
mov
dec
popa
loopne
push
sub
jno
add
xlat
inc
pop
jnp
cmp
and
adc
jne
jg
push
mov
sbb
iret
idivb
dec
shlb
movsl
call
outsb
push
inc
sbb
cmpsb
push
addr16
push
sbb
xor
cmp
pop
push
push
mov
popa
mov
push
push
jne
sbb
sbb
jnp
push
testb
adc
fildll
mov
and
pop
dec
pop
fcomps
js
mov
push
dec
and
ljmp
push
sub
push
inc
and
stos
mov
adc
shll
sbb
cltd
and
xor
mov
or
sbb
mov
cmp
scas
bound
and
pop
dec
cmpl
sbb
jle
xor
inc
mov
push
shrl
test
ds
mov
inc
dec
sbb
xor
sti
js
sarl
add
push
cmpb
cmpb
xorb
xorb
sarl
push
push
mov
or
lret
push
out
sub
ds
daa
push
aaa
dec
mov
jns
daa
cmp
ror
push
out
sub
sbb
shll
and
je
push
dec
orb
xor
out
lahf
scas
sub
rcll
dec
mov
xor
mov
or
mov
push
pusha
arpl
idivb
adc
stc
xor
out
ss
push
jnp
leave
sbb
out
cltd
sbb
xor
in
shlb
rcrb
jmp
sbb
push
pop
push
inc
xor
lods
sbb
fisttpll
mov
repnz
pop
in
pop
gs
jnp
int3
cltd
mov
jp
cmpsb
add
xor
jge
orb
loopne
fdiv
push
out
popa
jo
mov
pop
jb
and
test
loope
nop
mov
mov
dec
inc
xchg
sub
ss
in
aaa
mov
cmp
sub
lods
adc
adc
mov
mov
sbb
xor
js
or
sub
arpl
cmp
mov
cmpsb
and
sub
cld
sbb
mov
arpl
into
push
cmc
sub
aas
lret
dec
xor
fistpl
lret
outsl
sub
cmp
or
mov
ss
mov
jp
popa
add
jb
fwait
xchg
out
call
out
sub
or
dec
lcall
jbe
jle
mov
ret
mov
pop
mov
ja
mov
xchg
shrb
pop
stc
insb
and
insl
inc
fstl
bound
mov
pop
sbb
int
pop
lea
cld
insb
shll
lea
fiaddl
out
mov
dec
xor
xor
mov
stos
cmpsl
enter
add
sbbl
mov
xchg
cmp
and
jo
mov
pushf
das
push
sbb
sbb
cmp
in
or
cld
xchg
je
mov
jne
jmp
cmp
or
mov
subb
ret
dec
sbb
in
jb
fs
xchg
mov
jae
adc
xor
xchg
dec
inc
in
and
dec
mov
jo
add
xchg
test
test
inc
xlat
cltd
push
xchg
mov
add
or
repnz
int
cwtl
and
xlat
shll
fsubrl
es
leave
add
cmpb
out
inc
push
cmp
xorb
mov
xchg
xor
mov
lret
mov
dec
add
loope
ds
ret
mov
sbb
xor
lcall
dec
dec
add
es
prefetch
repnz
ljmp
cld
xor
sub
fwait
adc
dec
dec
cwtl
dec
dec
js
mov
cmp
dec
sbbb
sub
in
cmpsb
test
fcmovb
popa
add
movsb
pushl
lret
mov
ficoml
out
xor
ret
sub
lret
andl
into
jae
mov
dec
fwait
sub
loop
dec
adc
call
cwtl
add
mov
fsubl
jb
jle
dec
jl
orl
add
aam
pop
das
fcmovbe
pop
push
mov
test
adc
sahf
imull
cmp
xor
dec
loope
xorl
and
cs
xor
fnstsw
pop
fbstp
fxch
sub
push
in
xchg
cli
cmc
and
je
push
xchg
mov
inc
lret
das
movzbl
sbb
cmp
movsl
and
push
dec
es
jmp
into
push
sub
test
cli
inc
repnz
mov
cwtl
jnp
xorl
ror
dec
jb
out
xchg
arpl
cmpsb
test
loopne
rorl
cli
jg
xchg
into
push
movsb
out
js
lret
add
in
xor
dec
jmp
sbb
dec
iret
mov
jmp
inc
fwait
test
cmp
dec
xchg
mov
sbb
jp
push
mov
jle
cli
dec
and
mov
cli
enter
inc
or
or
mov
xor
inc
sti
or
pop
push
adc
mov
decb
sahf
cmp
jle
cmp
xor
push
inc
flds
xchg
mov
jp
or
xchg
bound
out
sub
movsb
add
mov
fs
jmp
mov
imul
stc
xchg
add
les
int3
ja
mov
dec
imul
push
insl
fcmovbe
ds
aam
adc
pop
and
cmp
jns
fwait
test
jne
xchg
adc
and
xor
dec
xlat
inc
xchg
sbb
mov
jb
jg
dec
jp
mov
xor
cmpsb
testb
and
sarl
pushf
repz
sbb
inc
imul
mov
test
lahf
inc
add
cmp
mov
lock
add
jl
lea
orl
push
or
pop
mov
pop
in
mov
int3
rcrl
dec
cmc
xor
call
and
adc
ja
ljmp
mov
mov
movsb
in
movb
sbb
pop
mov
sub
jp
xchg
sbb
inc
xor
mov
incl
lcall
push
adc
jbe
lahf
js
sarb
sbb
es
stc
fisttps
push
sbb
jbe
or
es
pop
cmp
mov
fidivrs
jb
jb
arpl
stos
inc
icebp
or
in
or
repz
xor
out
push
mov
stc
mov
daa
das
sub
mov
mov
roll
mov
js
out
push
add
std
lahf
jb
stc
ja
mov
loop
adc
xchg
stc
inc
testl
sbb
mov
and
push
dec
fidivrl
mov
mov
and
pop
adc
aad
iret
mov
pop
jmp
cmp
repnz
sub
insb
rcrl
das
push
xorb
imul
aaa
jne
pop
orl
sbb
jae
test
xor
push
es
call
imul
cmpsb
push
pop
jecxz
ret
lret
inc
push
iret
add
pop
mov
pop
xchg
sbb
xchg
xor
mov
ret
and
leave
movsb
pushf
outsl
push
pop
fidivrs
pop
pcmpeqd
mov
cmc
divb
add
adc
js
add
xor
jbe
sub
lahf
imul
jb
enter
dec
dec
dec
cmpsl
pop
mov
inc
cmp
movsl
dec
adc
fsubrl
in
dec
lds
and
sub
ret
jne
add
dec
outsl
jecxz
sbb
xchg
mov
addl
add
mov
lods
jo
xchg
sbb
fstl
push
push
fsubrs
les
lcall
jb
mov
and
movsb
push
jl
popa
cmpsb
jns
jno
xchg
cmpsl
pop
test
cltd
dec
shll
pop
jge
adc
and
mov
push
fistpl
in
lods
jne
push
inc
clc
mov
test
sbb
and
add
sbb
mov
jp
or
rcr
and
aam
cmpsb
js
fdivrs
add
push
mov
test
push
lcall
arpl
add
mov
pop
js
out
nop
lods
jmp
jp
cld
bound
mov
stos
leave
mov
mov
and
xchg
sahf
mov
sub
shrl
pop
mov
leave
dec
pop
jae
dec
sti
jo
in
dec
repnz
dec
mov
sbb
sub
and
adc
es
push
xor
aad
lret
popa
jne
cmp
pop
aad
popa
insb
shlb
dec
mov
jp
xor
shll
mov
xlat
xor
jp
es
movsb
scas
mov
push
shlb
mov
or
sub
xor
mov
xor
jne
mov
cmp
rorl
repnz
icebp
ficompl
dec
aad
mov
test
sbb
es
hlt
sbb
in
cmp
dec
in
fs
rcll
sbb
enter
pop
mov
in
test
push
jo
jns
mov
xor
xchg
xor
mov
xbegin
subb
xor
mov
pop
nop
mov
out
xchg
cli
or
inc
dec
mov
fisttpll
mov
icebp
in
xchg
out
dec
clc
sbb
outsb
jae
push
aad
jp
xchg
mov
cmpsb
push
mov
or
or
ret
cltd
fwait
pop
dec
inc
mov
scas
jo
fidivl
adc
data16
cmpsb
add
ret
adc
xchg
sbb
repz
or
sub
ds
jmp
xor
js
mov
xchg
rorb
and
push
outsl
push
push
repnz
and
sub
mov
and
sahf
push
push
je
lret
fadd
mov
cmpsl
jle
pop
mov
out
xchg
ljmp
int
fisubl
push
inc
sbb
push
lcall
mov
push
xchg
jbe
xor
fs
mov
mov
push
loope
add
cltd
xor
pop
push
cmpsl
lds
mov
jbe
pop
incb
sti
dec
outsb
lret
cli
sub
mov
int
inc
test
jae
jae
sub
dec
sbbl
std
and
mov
outsb
loope
cmp
test
pop
repnz
push
movsb
mov
ds
pop
int
fistpll
pop
sub
addr16
mov
lret
or
add
cs
inc
or
and
jp
pop
dec
mov
mov
rorb
jb
and
mov
cwtl
mov
orb
rcll
cmp
sahf
push
ljmp
mov
push
mov
lahf
sbb
cmp
lods
pop
mov
bound
jmp
dec
inc
dec
lahf
dec
pop
xor
inc
dec
fwait
test
xor
int
shll
xor
lcall
push
push
fistps
testb
mov
push
imul
and
lret
sub
pop
imul
inc
jae
inc
xor
addb
xchg
dec
loope
jns
cld
xor
and
sahf
mov
or
sbb
and
cld
daa
adc
aas
lret
repnz
into
dec
adc
xchg
ds
fisubrs
dec
jecxz
dec
cmp
xchg
cmpsb
insb
jb
stc
xor
mov
jecxz
sbb
xor
andl
shrb
ret
movsb
jecxz
mov
xchg
push
inc
ljmp
nop
cmpsb
mov
xor
jle
ret
out
dec
xchg
inc
dec
xor
rcrb
rcll
xchg
lods
cwtl
sbb
insb
jg
or
out
adc
pop
rcl
fildl
adc
fdivl
push
xor
mov
adc
jmp
jmp
xor
mov
cltd
adc
pop
jg
inc
idivb
fs
jecxz
sbbl
or
xchg
push
pop
jno
jno
test
lahf
mov
pushf
sbb
lret
push
scas
rcrb
ss
dec
pop
cwtl
lret
pushf
xor
imul
pop
sbb
xchg
push
notb
adc
push
fs
mov
bound
mov
push
jbe
inc
push
mov
dec
sub
inc
sub
cwtl
inc
pop
sub
pop
in
jge
push
sub
jo
or
loop
sub
jl
cmp
push
xor
push
cmp
cld
adc
je
jle,pn
and
loope,pn
jp
data16
data16
push
or
movsb
lcall
fbstp
or
out
xor
test
out
insl
mov
cltd
pop
jne
pusha
xchg
je
cmp
stos
lcall
aam
sbb
stos
out
iret
cmp
sub
sbb
mov
pop
mov
and
sbb
call
mov
mov
inc
jle
jb
vpshaw
test
adc
repz
mov
call
pop
mov
andl
loopne
or
sahf
jbe
inc
stos
mov
jp
cmc
and
mov
add
lcall
mov
mov
dec
mov
add
jnp
sub
adc
ss
lret
ds
mov
ljmp
inc
cmp
insb
xor
adc
cmc
xor
arpl
pcmpgtb
jg
nop
lods
jb
jp
xor
sub
hlt
mov
jle
adc
in
sahf
ss
or
pop
mov
fisttpl
es
jno
fstps
xchg
jb
mov
pusha
sahf
jg
out
sub
arpl
out
sub
lret
xchg
scas
into
jno,pn
loopne
notl
push
loope
jns
dec
in
mull
xlat
addb
pop
push
push
sub
mov
aaa
fidivl
or
xchg
daa
inc
mov
sbb
jo
loope
loop
lock
addl
dec
sbb
push
cmpsb
aas
mov
inc
ljmp
lahf
and
push
imul
shl
aaa
sbb
fsubl
xchg
out
cmp
push
loope
and
add
dec
dec
push
icebp
xchg
std
jecxz
dec
sti
dec
sbb
xchg
mov
insl
stos
shlb
scas
mov
test
rclb
nop
dec
mov
repnz
cmp
pop
add
shll
enter
in
dec
pop
or
lret
js
sub
aaa
mov
mov
repz
sub
push
loop
add
es
aam
cmp
add
push
sbb
and
dec
push
mov
pop
in
cmp
aad
repnz
sti
loope
mov
test
loope
shrl
add
or
ds
jb
dec
repz
lret
mov
pop
pop
mov
lods
xor
mov
lods
cli
xchg
or
mov
fildll
xor
sub
nop
sub
cmp
dec
adc
push
loop
cmp
out
dec
nop
shll
in
jne
rcl
mov
nop
add
ss
or
jle
aas
xchg
xchg
sub
repnz
jle
mov
xchg
stos
adc
inc
mov
dec
or
rorl
shrl
push
mov
or
sbb
in
push
jb
les
mov
ret
sbb
jp
mov
mov
cmp
dec
loop
fstps
add
push
mov
sbb
bound
sbb
mov
mov
cmp
dec
jecxz
loope
sbb
sbb
pop
movsl
jl
mov
mov
dec
arpl
sbb
mov
mov
cmp
dec
loop
fstps
add
lock
insb
mov
ret
dec
bound
sbb
mov
mov
cmp
dec
jecxz
sub
jnp
sarl
mov
mov
cmp
push
inc
xor
add
mov
jp
mov
mov
cmp
and
push
inc
xor
inc
jnp
adc
rol
sub
aam
pop
mov
sbb
pushl
dec
add
inc
js
sbb
cmpsl
jle
add
xor
lcall
dec
xchg
mov
aam
sbb
ljmp
jnp
shll
mov
sbb
pushl
dec
fdivl
inc
js
sbb
cmpsl
jle
add
xor
mov
jb
dec
int3
mov
aam
sbb
sahf
dec
jecxz
rcrl
jnp
rcll
mov
jb
dec
pop
mov
aam
sbb
into
sbb
cmpsl
jle
add
xor
out
sbb
pushl
dec
ret
aam
sbb
fmuls
jmp
sbb
mov
aam
pop
mov
jb
dec
lret
aam
sbb
add
mov
mov
test
bound
pushl
dec
pop
mov
aam
sbb
testb
rcrl
jnp
sar
sub
aam
pop
mov
sbb
pushl
dec
mov
aam
sbb
cwtl
sbb
cmpsl
jle
add
mov
ljmp
and
je
mov
push
out
dec
pop
push
shufps
xchg
rcl
lods
xchg
dec
dec
cwtl
les
pop
test
sbb
aas
in
flds
jp
aas
movsl
dec
cltd
lds
aas
gs
pop
test
aas
and
dec
test
dec
mov
imul
dec
sub
dec
dec
dec
xor
dec
or
dec
test
xchg
dec
enter
push
dec
je
sub
dec
dec
ss
sti
mov
stos
pop
stos
test
sbb
in
fld
push
ret
movsl
ret
xchg
ja
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
sub
out
je
xor
arpl
cmpl
and
inc
and
loope
and
addl
xor
test
push
xchg
adc
gs
shlb
xchg
add
mov
sub
jecxz
rclb
les
inc
cmp
fsubs
je
pusha
add
ret
xorl
adc
xchg
insl
push
xor
filds
pop
icebp
mov
jnp
push
sbb
mov
daa
in
inc
or
xchg
sbb
les
adc
mov
imul
icebp
adc
je
adc
push
mov
mov
mov
adc
repnz
ds
jl
cmpsb
mov
push
pop
sbb
mov
push
push
addr16
lock
adc
inc
jle
dec
sbb
call
addr16
or
adc
arpl
cs
ficomps
push
test
nop
mov
mov
repnz
cli
xor
loopne
mov
jbe
imul
notb
scas
jnp
xor
hlt
cmp
jbe
test
add
imul
cli
lahf
ror
jo
mov
sbb
movsb
mov
js
ds
xor
xchg
cltd
arpl
cli
xor
dec
xor
mov
pop
lret
cmp
aas
dec
nop
lds
sbb
add
int
loopne
mov
xchg
cmp
adc
push
mov
arpl
or
and
pushf
sub
cmp
jle
adc
addr16
test
loop
rep
jle
adc
addr16
test
fmuls
cmpsb
in
adc
addr16
test
loop
rep
jle
adc
addr16
test
jle
or
addr16
test
loop
rep
jle
adc
addr16
test
loop
repz
mov
test
loop
rep
jle
adc
addr16
test
loop
rep
jle
push
jmp
rep
jle
adc
addr16
test
loop
rep
jle
adc
addr16
dec
jae
jle
adc
addr16
test
loop
rep
jle
adc
addr16
test
jle
or
addr16
test
loop
rep
jle
adc
addr16
orb
pop
and
jmp
cmp
into
pop
mov
sbb
imul
mov
lea
or
jle
mov
mov
push
sbb
dec
jae
sbb
mov
mov
jmp
mov
in
push
xchg
fstl
mov
jb
dec
adc
roll
divl
notl
xchg
arpl
aam
sbb
mov
jae
cmpsl
jle
adc
dec
sarb
repnz
jb
dec
nop
mov
aam
adc
inc
fstps
adc
les
pop
xor
jecxz
xchg
jl
mov
sbb
js
cwtl
sbb
lock
call
jb
dec
out
mov
aam
sbb
cmpsl
jle
push
add
mov
ljmp
aam
adc
inc
fstps
xchg
frstor
mov
cmpsl
jle
push
xor
scas
sbb
and
jb
dec
sahf
mov
aam
sbb
cmpsl
jle
push
into
xor
sbb
aam
dec
shr
mov
ljmp
mov
jle
insb
mov
push
sbb
dec
jae
sbb
mov
mov
cmp
push
xchg
xor
jp
mov
mov
cmp
dec
xlat
insb
ret
mov
jmp
sbb
sbb
mov
ljmp
push
sbb
pushl
dec
fidivs
xchg
js
sbb
fdivl
mov
ljmp
aam
dec
shr
test
daa
repz
sbb
mov
fstps
push
xor
insb
mov
adc
rorb
sbb
mov
mov
cmp
push
push
fstl
mov
rclb
jle
aad
in
repz
sbb
mov
fstps
push
xor
jae
mov
adc
lret
push
sbb
add
cs
adc
test
js
cwtl
sbb
mov
stc
movsl
mov
mov
test
jns
mov
cmp
add
cmpsl
mov
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
mov
adc
or
xchg
xor
loope
sbb
pop
cmp
in
fldcw
push
sub
sub
sub
sub
sub
sub
cmp
in
fsubrs
add
sub
sub
adc
sar
adc
push
jmp
jmp
mov
xchg
mov
imul
pop
addl
aad
xor
inc
jecxz
dec
xor
cli
sbb
lock
push
scas
pop
lods
dec
aad
ss
into
add
jo
or
push
rclb
or
dec
aad
sub
jecxz
repnz
mov
xchg
push
stos
rorb
adc
test
dec
push
cmpsl
or
rol
adc
cltd
in
mov
push
fistpl
jb
mov
inc
icebp
adc
or
xchg
push
ss
ret
jae
jmp
pop
aad
dec
cltd
inc
fwait
add
cmp
test
sub
fisttpll
mov
cmc
fcoms
jnp
enter
movsb
push
mov
inc
push
movsb
sub
lcall
lahf
cltd
orb
sahf
xchg
in
push
aad
push
outsb
ljmp
mov
std
scas
int3
push
adc
pop
lahf
jbe
stos
push
in
cmp
dec
xor
jo
jbe
sbb
les
adc
mov
jbe
jnp
xor
add
sti
mulb
fwait
data16
jb
mov
or
fs
jle
jae
pop
sbb
sub
ljmp
and
dec
push
jns
mov
orb
add
fidivl
movsl
icebp
add
stos
or
popa
mov
and
mov
call
cli
shll
jns
mov
xor
push
ds
lock
sbb
jle
mov
jb
adc
xor
sbb
dec
rep
jle
adc
addr16
test
loop
rep
jle
adc
sbb
rorb
movsb
jle
adc
addr16
test
loop
rep
jle
adc
addr16
jb
mov
addr16
test
loop
rep
jle
adc
addr16
test
loop
out
adc
arpl
dec
rep
jle
adc
addr16
test
loop
rep
jle
jmp
dec
rep
jle
adc
addr16
test
loop
rep
jle
adc
sbb
rorb
movsb
jle
adc
addr16
test
loop
rep
jle
adc
addr16
jb
mov
addr16
test
loop
repz
and
pusha
xor
test
add
sbb
mov
gs
push
adc
pop
inc
movsl
inc
imul
pmulhw
or
pop
test
sbb
stc
rorb
js
adc
mov
jo
xchg
push
dec
pop
sbb
inc
add
jge
inc
xor
data16
in
out
sub
dec
mov
cmp
pop
push
or
lods
stos
stos
adc
sub
test
mov
xchg
jns
inc
dec
adc
xchg
mov
cmp
iret
sbb
push
mov
iret
scas
dec
pop
cmc
aaa
fnstsw
and
mov
ds
sbb
cmp
mov
notb
xor
stos
dec
sub
dec
mov
iret
mov
arpl
inc
push
sbb
jecxz
push
xchg
jg
pop
ss
out
movsl
sahf
push
xor
add
out
adc
sbb
pop
gs
adc
pop
mov
js
mov
icebp
dec
and
dec
outsb
mov
jno
mov
pop
and
fidivl
push
xor
pop
adc
cmpsb
test
shr
dec
sub
repnz
adcb
aam
imul
dec
inc
js
out
subl
fnsave
cs
movsl
fistps
ljmp
fwait
cli
ljmp
ljmp
insb
clc
jae
ljmp
inc
repz
xchg
ds
sbb
xor
ss
xor
push
jge
jp
rcll
add
lret
dec
loope
mov
xchg
inc
and
test
cmpsl
mov
add
add
addr16
push
sbb
rolb
pop
ret
push
loope
nop
or
inc
and
dec
jb
dec
dec
cmp
adc
pushl
jo
rcrl
adc
push
pop
push
test
xor
mov
dec
push
popf
repnz
imul
mov
dec
stos
lcall
scas
sbb
jb
add
lahf
pop
adc
xor
mov
or
out
xchg
adcb
xor
sbb
and
jnp
enter
fwait
data16
fwait
pusha
cli
mov
mov
dec
inc
mov
pop
push
sbb
lret
scas
repnz
je
mov
stos
push
ss
mov
or
and
js
push
outsl
mov
jg
hlt
sub
insb
sub
and
mov
mov
lods
sub
adc
sub
sahf
pop
lret
int3
xor
sub
ror
dec
sub
jmp
and
orb
mov
filds
scas
je
pop
test
xchg
push
in
les
data16
nop
mov
scas
mov
cmc
clc
jne
insb
roll
scas
loope
xchg
sub
shll
lret
outsb
adc
test
lret
arpl
dec
cmp
sbb
enter
mov
mov
sbb
cwtl
cwtl
pop
add
inc
sbb
dec
cmpsb
pop
jecxz
sbb
jp
pushf
adc
sahf
cwtl
jae
add
sub
jmp
repz
int3
loope
shll
sbb
cmp
jge
mov
dec
iret
dec
sub
dec
jb
xor
outsb
mov
es
inc
iret
dec
dec
pop
pop
fldl
movsb
xorb
mov
xor
cmp
cmp
xchg
add
adc
test
push
out
hlt
repnz
pop
lea
jae
dec
shl
cmp
out
or
out
lcall
push
sub
push
sti
adc
adc
fcmovu
int3
rcrb
stos
and
jae
dec
jns
andb
pop
lret
movb
out
lcall
inc
repnz
cwtl
mov
sub
repnz
and
jle
and
shll
pusha
fistpll
sbb
dec
push
inc
rcrl
aas
sbb
scas
bound
dec
xor
adc
sarl
data16
cmp
xor
movsb
adc
cmp
aaa
sbb
cmp
xor
add
shll
mov
ss
xor
std
sarb
xlat
les
in
xor
loop,pt
dec
xor
dec
mov
mov
test
addl
jbe
dec
dec
in
dec
out
dec
xchg
mov
dec
adc
cmp
lret
arpl
push
sbb
mov
mov
aad
cld
js
dec
pop
cmp
xchg
add
cmp
inc
dec
jns
cmp
pusha
add
dec
inc
and
jbe
jne
mov
push
xor
andb
lahf
cwtl
pop
lcall
dec
sbb
pop
cmp
rorl
inc
jle
xchg
dec
cmp
inc
aaa
dec
mov
or
sbb
sbb
xor
xor
pop
js
xor
and
gs
loop,pt
lahf
cmp
js
sbb
pop
dec
sbb
lea
lcall
sbb
push
aad
ret
lret
adc
adc
fwait
je
jmp
xchg
xor
lret
adc
lea
mov
push
mov
and
ss
adc
pop
push
mov
mov
and
sbb
dec
and
adc
jno
adc
sbb
test
mov
dec
fwait
xor
or
dec
dec
xor
jl
xor
das
jle
and
mov
test
adc
xor
xchg
jl
xor
sub
push
pop
jno
jbe
arpl
imul
sahf
xchg
test
sbb
dec
xchg
mov
push
jp
and
adc
dec
xchg
push
sub
push
mov
std
mov
repnz
dec
dec
sbb
dec
sbbl
adc
jae
mov
add
and
jno
mov
cmpb
daa
sbb
lods
mov
out
dec
and
dec
in
xorb
mov
pushf
jbe
dec
and
divb
sbb
dec
addl
sbb
and
jl
pop
dec
mov
mov
xchg
dec
cld
js
fidivrl
dec
xor
adc
and
repz
xor
jb
sahf
add
mov
fistpll
adc
jge
mov
arpl
mov
jle
and
movsl
and
js
dec
clc
dec
push
xor
or
jge
jae
test
pop
int3
push
addr16
jmp
cld
sbb
imul
adc
sarb
mov
js
cwtl
ja
mov
inc
cld
js
fimull
xor
inc
cmp
in
push
mov
jl
inc
repz
ljmp
xor
inc
arpl
mov
js
pop
xchg
mov
mov
je
jmp
iret
jbe
decl
punpckhdq
movsb
cld
enter
xor
js
jo
inc
outsl
xorb
cmpl
adc
push
bound
and
push
jecxz
call
inc
pushf
or
fisubl
add
mov
loopne
mov
idivl
lods
bound
repz
pop
data16
negb
push
adc
andb
dec
cmp
mov
xor
gs
or
and
call
mov
push
sbb
xor
push
int
lea
mov
xchg
lcall
mov
push
inc
pop
push
ss
and
xchg
cld
arpl
jne
test
ds
shlb
or
cmp
subl
pop
in
shrb
or
adc
addr16
gs
dec
push
jb
push
pushf
or
int3
jecxz
mov
sub
push
ret
in
ljmp
cmp
push
push
cmpsb
cmp
lds
sub
mov
sbb
push
test
ds
cmp
dec
mov
gs
dec
push
dec
xchg
xor
pushl
dec
and
popa
sbb
in
sbb
jg
mov
bound
jb
xor
sbb
lahf
mov
mov
and
or
sbb
scas
mov
cmp
leave
lret
mov
int3
jmp
adc
aaa
ds
shrb
xchg
daa
add
mov
add
xchg
inc
inc
cmp
fstl
repnz
xchg
test
ret
mov
dec
out
or
xor
rolb
adc
aad
mov
mov
out
fstpt
dec
jno
repnz
es
jae
or
pop
jbe
sbb
test
fwait
popa
cmp
lock
repnz
cmpsb
int
dec
gs
inc
movsb
outsl
add
je
stos
ret
pop
ficoml
lcall
mov
stos
and
jge
leave
mov
int3
pop
mov
adc
mov
into
sbb
ss
jo
cli
shll
adc
call
sbb
add
xor
adc
pop
sbb
and
lret
adc
test
es
lret
sbb
dec
pop
dec
xchg
js
xor
outsb
ja
adc
mov
cmc
outsl
mov
mov
shrb
clc
iret
jge
out
adc
test
add
or
in
out
daa
inc
pop
mov
push
flds
cmp
sbb
add
dec
fcoml
faddl
jge
and
jmp
xchg
dec
mov
lds
mov
jbe
push
or
aam
int3
rorb
mov
dec
inc
inc
or
pop
rorb
push
fwait
out
cmp
sahf
loopne
arpl
je
inc
test
daa
or
lahf
fwait
lods
or
sub
out
test
push
xchg
push
int3
mov
mov
sbb
jl
jp
jae
push
inc
insl
ja
jg
out
ret
popa
lock
add
mov
push
dec
movsb
lods
fstpt
sub
out
arpl
inc
pop
push
xor
mov
insb
jmp
inc
sub
mov
pop
pop
xchg
test
or
jne
out
leave
movsb
mov
jne
add
jae
inc
stos
pop
jb
mov
push
and
fwait
jns
sbb
mov
sbb
dec
push
push
loope
daa
xchg
dec
mov
test
xor
sbb
dec
sub
testb
in
push
rolb
ds
push
inc
jge
cmc
xchg
inc
mov
cmc
sbb
mov
mov
ds
add
sub
xor
cmc
sub
mov
sbb
jg,pt
es
push
inc
out
push
lret
inc
jbe
adc
imul
mov
xor
scas
mov
imul
imul
rcll
mov
cmc
pop
push
mov
jo
sub
sbb
or
into
out
fidivrl
push
les
and
adcb
jmp
inc
dec
xchg
add
or
xor
loope
push
push
jns
cmpsl
mov
mov
jge
xchg
or
loopne
xor
mov
sbb
jp
xor
push
idivl
mov
ss
push
mov
mov
ret
inc
jns
xor
xor
jbe
ss
dec
out
xor
push
adc
dec
iret
aad
fsubs
out
adc
add
and
into
jns
dec
fs
pop
lret
stc
sub
sbb
mov
je
les
dec
xchg
ss
in
and
je
xchg
adc
rcrb
and
mov
ljmp
repz
push
xor
add
jnp
fwait
xchg
es
xor
sub
ljmp
xchg
inc
sbb
xor
jl,pt
sahf
mov
xor
cwtl
or
lret
dec
mov
xor
jae
xor
xor
xchg
xorb
sbb
in
add
cltd
sbb
sbb
jnp
cs
dec
jbe
movsb
lods
xchg
add
cmp
mov
dec
sbb
dec
rcll
xchg
mov
or
aaa
jno
pop
adc
and
es
xor
pushf
mov
jo
and
inc
mov
jno
shll
push
mov
dec
lods
fnstenv
adc
xchg
mov
inc
loop
sbb
scas
mov
xor
jo
mov
push
mov
push
mov
je
aad
add
or
je
dec
fsin
addr16
loop
je
pop
in
inc
dec
dec
xchg
stos
and
xchg
mov
dec
push
jp
and
and
rcll
dec
imul
dec
adc
imul
in
xlat
jns
rol
add
gs
lcall
cs
sub
jle
repnz
jns
sbb
dec
push
sub
push
mov
xchg
xchg
rol
adc
mov
pop
jp
adc
dec
inc
pushf
mov
sub
sub
out
or
and
inc
test
jae
es
inc
cld
jnp
and
popa
sbb
mov
cmpsb
dec
cmp
ljmp
mov
popl
fwait
mov
push
je
scas
xchg
add
fcoml
add
rcrl
jl
repnz
and
sbb
outsl
popa
or
je
sbb
pop
lods
outsl
xchg
add
and
or
pop
scas
lret
sbb
sbb
sahf
mov
inc
in
and
mov
popa
xchg
fstps
lods
pop
cmp
inc
xchg
xchg
or
and
jae
add
lock
or
stos
in
iret
out
adc
and
or
fildll
loope
xchg
and
and
loopne
repnz
jmp
fsub
or
sbb
fsubr
push
cmpsb
add
push
js
sbb
pop
cmp
repz
mov
stos
addr16
ja
push
sbb
into
popa
mov
dec
int3
decl
pusha
xor
sti
dec
icebp
sarl
ret
out
stos
jp
sub
dec
or
and
push
pop
call
adc
or
cwtl
adc
cmp
push
dec
and
fidivrl
js
stos
es
lret
cmp
dec
mov
sbb
repz
imul
es
lcall
mov
orl
int
xchg
pop
mov
pmullw
and
bound
push
aaa
fimull
xchg
adc
mov
out
std
dec
and
xor
pop
cmp
std
dec
aas
adc
lret
xor
lods
ds
adc
mov
inc
xor
test
insb
mov
xchg
pop
fwait
pop
inc
cmp
sbb
insl
dec
je
dec
shl
dec
lock
push
mov
xchg
sahf
cmpsb
mov
cmp
add
out
pop
or
int
cmp
xor
cmp
pop
sbb
lds
xchg
xor
inc
xchg
aad
std
xchg
mov
shlb
mov
push
xor
jg
iret
repz
lcall
cmp
and
and
call
xor
jbe
mov
mov
js
daa
pop
std
jecxz
pop
ss
fimuls
sub
adc
mov
cmc
xchg
fsubl
push
jp
xchg
push
aam
mov
xor
sub
cmpsb
adc
repnz
inc
idivl
adc
ficoml
pop
mov
xor
fwait
iret
lods
aas
push
and
xchg
imul
inc
jmp
outsl
mov
xorb
or
or
or
xor
mov
mov
xor
mov
xchg
rorb
dec
inc
ror
push
and
pusha
xor
jmp
nop
fnstsw
dec
lcall
adc
dec
dec
imul
movsl
imul
jne
jp
and
mov
pop
mov
jnp
push
test
addr16
push
inc
xchg
push
sbbb
fyl2xp1
mov
cld
xchg
xchg
dec
inc
mov
lods
mov
sub
bound
fidivs
outsb
push
xor
dec
jp
enter
cmp
jb
loopne
jno
xchg
xor
ja
movsb
popf
push
gs
dec
dec
test
jle
adc
nop
int
add
jbe
and
mov
add
add
add
aam
ds
clc
push
mov
xchg
add
pop
pop
jb
outsl
xchg
adc
outsl
inc
jo
sub
mov
imul
jle
jb
pop
bnd
xchg
adc
nop
dec
lods
or
ja
mov
inc
stc
fbld
dec
sub
pop
and
mov
and
nop
and
movsb
xchg
notl
push
pop
test
aad
and
xor
in
push
sub
lahf
mov
loop
sbb
mov
sbb
fdivl
in
or
call
jg
stos
pop
jb
imul
incb
and
push
jecxz
pop
mulb
fcompl
dec
push
je
pop
jo
cs
jp
jecxz
std
mov
sti
inc
ds
imull
clc
nop
mov
ret
loopne
stos
stos
scas
pop
and
cmp
inc
scas
stos
in
push
mov
andb
aaa
mov
xor
ds
js
sbb
or
xchg
fsts
push
jo
push
jne
lret
sub
sahf
repnz
sbb
hlt
iret
js
int3
dec
cmp
sub
fs
jo
cmp
mulb
orb
dec
jp
pusha
pop
add
sub
sub
xor
push
push
jmp
adc
rcrb
mov
jb
dec
sub
das
test
fildll
pushf
jns
add
cs
mov
js
dec
jns
ljmp
mov
adc
push
pop
ds
outsl
mov
push
xchg
js
repz
cmp
aas
into
lcall
xlat
fdivl
sub
cli
push
bound
fisubs
sti
loope
mov
pushf
ret
xchg
and
pushf
mov
les
and
push
rcr
pop
sub
jp
inc
sbb
repz
adc
pop
aaa
pusha
inc
xor
in
lret
sbb
inc
movb
or
xchg
mov
jnp
jb
cmp
in
arpl
mov
xor
cmc
adc
shl
inc
pop
int3
js
enter
lds
pop
xchg
push
inc
ficoml
loope
repnz
cld
mov
ss
test
or
or
adc
xor
in
add
test
mov
mov
push
and
bound
jo
push
fiadds
xor
cmp
xor
je
outsl
or
sub
cwtl
adc
xchg
imul
out
push
sti
push
repnz
push
xchg
stos
or
adc
jg
mov
sbb
dec
jge
daa
jp
sub
arpl
mov
dec
adc
mov
pop
aas
dec
bound
bnd
adc
cmp
dec
sub
andb
jb
jbe
mov
addps
les
sub
sbb
lea
outsb
pushl
das
iret
xchg
decl
inc
stos
repnz
sub
ret
ret
das
inc
ret
fildll
ds
inc
test
xchg
add
xor
inc
push
push
mov
shll
lods
bnd
push
pop
jle
dec
push
fiaddl
outsb
gs
imul
subl
ljmp
in
in
jo
sub
jb
pop
mov
push
daa
push
inc
dec
mov
pop
sub
and
inc
xor
jg
xchg
pop
or
inc
jge
xor
outsb
xchg
dec
scas
lods
js
inc
into
xor
xchg
xchg
into
jnp
jb
push
call
push
rcrl
enter
inc
hlt
movsl
sbb
jg
pop
stos
and
ret
lret
and
sbb
sub
in
repnz
jmp
inc
out
mov
xchg
sbb
inc
les
ror
jo
mov
sbb
out
push
int3
pop
icebp
in
fists
push
add
mov
xor
int3
xor
xor
adc
jg
dec
and
jb
push
mov
mov
inc
jae
outsb
or
xchg
fcomps
arpl
shl
dec
adc
sbb
or
mov
dec
ljmp
clc
repnz
iret
jge
cmp
test
push
lcall
test
pop
sahf
stc
cmp
insl
bound
je
inc
jl
dec
push
xor
push
inc
pop
gs
arpl
sbb
mov
push
inc
adc
cmp
mov
dec
push
repz
in
cmp
ljmp
fldt
push
mov
mov
and
inc
xchg
inc
mov
int3
stos
icebp
lods
ljmp
test
cmc
lods
loope
add
sbb
dec
sbb
test
loope
sahf
loopne
xor
cmpsb
mov
cmp
pop
sub
pusha
ror
add
cli
out
and
xchg
lock
pop
cli
mov
dec
sti
cmp
call
sbb
ss
enter
lods
inc
mov
xor
sbb
push
outsb
mov
roll
pop
out
or
aaa
mov
mov
out
xchg
mov
mov
or
ret
ret
mov
mov
mov
push
inc
sarb
sahf
jno
xchg
mov
xor
into
lret
cmc
and
cmp
pop
adc
jae
sub
jnp
ljmp
adc
cmp
inc
jp
cmc
and
cmp
push
mov
sub
xchg
roll
popf
jg
les
push
mov
and
sbb
stc
into
in
push
scas
dec
dec
aaa
mov
jb
out
sbb
push
rorl
lahf
sbb
popa
mov
aad
outsb
jbe
sbb
rep
add
cmp
imul
xor
xchg
rclb
xor
jp
iret
xor
lret
xor
repz
adc
sub
repz
fwait
loope
adc
mov
sbb
jecxz
push
add
jns
adc
repnz
mov
pop
in
adc
fisttpll
subb
mov
pop
mov
pop
pop
jle
xor
mov
cmp
test
lock
or
xor
lret
sub
sbb
xor
orl
xlat
jne
data16
push
and
push
ds
les
pop
xor
cwtl
into
lods
and
dec
dec
mov
add
ljmp
dec
or
mov
sti
push
push
int
inc
ljmp
adc
xor
jo
insb
lret
mov
movsl
and
xor
out
xchg
mov
adc
add
cs
je
push
jo
mov
daa
xchg
mov
movsl
fildll
jb
movsl
pop
sarb
inc
push
sbb
jg
sub
mov
cmp
mov
test
push
cli
mov
cwtl
or
or
and
jns
cld
sub
inc
push
dec
dec
jns
mov
xchg
andnps
and
and
sahf
or
jns
xor
add
sbb
mov
stos
jns
dec
ja
fldcw
lahf
mov
scas
mov
push
insb
dec
out
and
sbb
in
or
push
dec
fs
jecxz
and
inc
push
adc
xorl
loopne
dec
push
inc
xchg
xorb
mov
adc
setns
sbb
jbe,pn
pop
in
sbb
and
and
stos
lea
cmp
xor
test
push
mov
mov
dec
pop
mov
loop
cmp
dec
mov
mov
mov
repnz
gs
enter
lds
adc
test
jno
push
add
sbb
sub
call
rcll
es
sbb
inc
dec
in
fistps
gs
cmc
das
and
fwait
push
sbb
and
lcall
cmc
add
outsb
test
mov
jae
push
sbb
lret
or
mov
je
mov
mov
pop
pop
push
mov
bound
pop
mov
arpl
dec
and
or
ljmp
sbb
jle
jge
or
sbb
jp
dec
mov
and
adc
add
adc
adc
cmp
mov
jo
lock
stc
jg
push
jno
addb
cli
dec
es
sbb
dec
push
push
lock
mov
pop
push
mov
test
ja
jo
andb
inc
xor
sub
dec
loope
lods
xchg
rcrl
ret
mov
negb
fs
pop
mov
into
fsub
int3
mov
sti
sbb
data16
lods
int
test
lret
dec
xchg
js
popf
mov
adc
jp
dec
pop
stos
and
les
xor
aas
shl
pop
mov
out
dec
movsb
mov
push
sbb
test
dec
mov
je
mov
stos
dec
das
ret
pop
fiaddl
push
jbe
outsb
sub
je
push
pop
je
movsb
fdivrl
fisubrs
in
ss
mov
movsb
call
pop
pop
test
push
stos
inc
data16
dec
mov
pushf
bound
sub
js
mov
ja
inc
pushf
mov
push
test
cmpb
dec
mov
push
je
cmp
push
inc
jmp
dec
out
xor
mov
cmp
lret
in
xor
sub
fbstp
jbe
pop
jp
add
and
push
sub
dec
xor
mov
inc
inc
repz
ljmp
sub
dec
xchg
dec
stos
xor
or
cwtl
nop
adc
jo
jmp
dec
int
test
lods
xchg
mov
sbb
sahf
ss
push
and
js
mov
test
sub
out
mov
xlat
repnz
lcall
lock
pop
inc
add
jb
xor
test
pop
and
mov
js
out
sbb
js
out
dec
sub
hlt
mov
repz
pop
push
and
pushl
fdivrp
and
mov
scas
icebp
loopne
fldt
mov
sbb
jmp
sub
es
push
sub
sbb
or
mov
shll
adc
xor
xor
add
mov
sbb
or
int3
dec
decl
mov
pop
mov
push
in
dec
pop
cs
outsl
dec
je
stos
ret
cmpsl
nop
aas
dec
hlt
ja
adc
cs
mov
test
cmp
enter
adc
push
pop
sbb
gs
call
ss
pop
pusha
dec
dec
jl
fnstenv
inc
pop
sub
sub
pop
add
cwtl
push
sub
cs
mov
inc
jp
pop
loop
cs
and
mov
or
lret
sub
sahf
ss
push
and
insb
inc
lret
and
inc
insl
fcomps
out
mov
and
cli
inc
fimull
sbb
cli
inc
jo
js
pop
jle
inc
mov
xchg
enter
sbb
jae
pop
jbe
ficomps
pop
lret
dec
out
ret
movsb
je
xor
or
std
sbb
cmpsl
jo
data16
mov
add
clc
push
push
push
push
lods
add
adc
jl
push
jmp
into
shlb
and
imul
idivb
cmc
insb
sub
lcall
lcall
test
fiaddl
data16
cmp
xchg
outsl
pop
xor
mov
add
jae
cli
mov
fbld
sti
rcrb
lret
adc
into
icebp
inc
sahf
pop
call
xchg
pop
jae
pushf
lret
pop
arpl
pusha
scas
sbb
and
adc
sub
pop
pop
mov
bound
sub
add
xor
inc
sub
ss
add
xor
leave
mov
jmp
dec
adc
mov
sti
xor
repnz
add
imul
mov
cmpb
sub
sarl
daa
mov
xor
dec
cmp
pop
dec
jno
in
cmp
stc
add
jns
and
in
xor
adc
mov
fwait
adc
stos
sbb
test
cmp
and
movsb
jmp
jb
lods
cmp
lcall
lods
push
sub
push
fildl
mov
mov
rcrb
and
and
add
push
sbb
imul
fists
es
xchg
aad
cwtl
sub
shll
repnz
jo
or
lea
pop
cmp
insl
jno
jecxz
out
rcl
loopne
dec
mov
dec
jl
xchg
lret
loopne
xor
mov
sti
lret
sbb
cmp
call
xchg
mov
mov
dec
dec
mov
pop
dec
jg
adc
ret
insb
jmp
lock
sbb
gs
dec
xchg
insl
jae
rorb
or
or
push
sbb
sti
loop
add
scas
sti
mov
incl
adc
sbb
or
mov
out
outsb
xor
and
orl
icebp
xor
inc
sbbb
sbb
mov
add
lahf
jns
inc
dec
xor
cmpsb
adc
or
mov
add
xorl
xchg
imul
and
pop
shlb
xchg
mov
xlat
push
js
inc
aam
adc
dec
sbb
loopne
inc
dec
add
lret
jnp
sbb
add
pop
sub
mov
mov
sbb
xchg
lea
xchg
jae
xchg
hlt
jmp
add
test
dec
or
ss
and
test
mov
pop
xorl
call
fisttpll
ds
jns
pop
test
test
and
std
test
test
int3
stc
inc
movsb
test
push
ret
and
dec
addr16
jl
bound
pop
sbb
push
xorb
and
dec
inc
ficompl
jecxz
inc
and
inc
lock
dec
adc
mov
mov
inc
mov
ljmp
and
jb
fisubs
repz
aam
sbb
cmpsl
jle
inc
add
cmp
addb
mov
clc
fidivl
mov
js
ds
xor
add
inc
xchg
mov
mov
mov
aas
sub
mov
shr
inc
and
push
js
or
and
sub
mov
ja
loop
inc
and
inc
rdmsr
hlt
mov
inc
dec
lcall
hlt
mov
aam
sbb
or
mov
out
test
mov
ficompl
inc
ds
ljmp
sub
inc
lahf
pop
mov
repz
fldl
jae
bound
lret
push
sbb
mov
sbb
inc
xchg
sti
and
shl
aaa
jmp
pop
xor
xchg
mov
pop
lcall
aam
lret
push
sbb
pop
jp
jmp
mov
push
mov
lret
loop
inc
and
inc
or
hlt
and
leave
xchg
testl
shr
inc
jns
and
das
inc
loop
jne
xor
bound
sub
inc
push
fidivl
mov
mov
inc
jbe
dec
repnz
inc
mov
loope
pop
ds
loop
inc
and
inc
or
repz
addr16
inc
fsts
pop
mov
aad
outsb
jecxz
fisubs
js
rcrl
repz
fldl
lret
and
pop
xor
push
mov
xor
pop
push
xor
imul
mov
outsb
jmp
ss
testl
test
inc
outsb
loope
xchg
in
loopne
repz
ss
jo
sub
adc
or
nop
fisttpl
dec
fisttpll
call
xor
je
adc
and
icebp
vmwrite
in
xchg
cltd
cmp
out
ds
adc
ficoml
adc
scas
mov
push
inc
cld
movsb
repnz
jae
jo
out
cs
hlt
scas
push
mov
sarl
aad
test
adc
dec
loope
sub
sub
iret
movsw
scas
dec
stos
jp
push
dec
stc
in
or
adc
repnz
ret
push
cli
stos
push
cli
aad
cmp
inc
push
sub
mov
jg
push
mov
or
dec
cs
jle
mov
scas
neg
mov
test
call
shll
mov
aad
mov
xchg
jmp
inc
xor
aad
jb
sahf
cmp
or
out
mov
push
pusha
es
stc
inc
push
sub
iret
inc
dec
cmp
mov
ret
inc
dec
gs
repz
and
pop
lods
bound
or
inc
dec
mov
cmp
inc
fs
xor
fsub
inc
xchg
insb
dec
sub
aaa
push
push
dec
out
lret
and
and
imul
arpl
jae
add
push
sbb
aaa
popa
jmp
popa
jmp
ficompl
repnz
push
loope
cli
inc
jb
js,pt
push
repz
pop
dec
adc
sbb
add
addb
sti
out
cmp
cmp
out
ja
js
mov
out
xchg
gs
pop
jecxz
sub
or
lods
cli
js
sbb
pop
and
sbb
and
popa
mov
mov
mov
or
xor
cmp
bnd
push
fdivl
fisubrl
mov
xor
pop
dec
mov
addr16
push
sbb
mov
push
shrl
pop
scas
xor
and
sbb
in
sub
mov
pop
out
repnz
cmpb
mov
jp
pushf
mov
fwait
jnp
loope
mov
rcll
push
mov
mov
pop
faddl
test
cmpb
sub
dec
pop
lods
or
aaa
dec
in
or
pop
dec
xor
dec
add
test
or
fdivl
test
sub
adc
cmpsb
test
fisttpll
xor
push
cmp
dec
imul
mov
mov
stc
imul
aad
add
outsb
js
sbb
jl
add
sub
test
mov
sub
or
jb
xchg
lret
pop
lds
adc
dec
sbb
inc
dec
dec
and
sahf
xor
inc
es
push
xchg
pusha
lods
sbb
pop
leave
jae
inc
jle
dec
roll
jle
inc
sbb
mov
cli
lock
jno
outsb
sub
imul
test
leave
mov
mul
fdivl
test
push
cmp
xor
xor
lahf
sar
loop
sub
in
jns
xchg
sbb
jg
dec
push
sub
dec
sbb
mov
in
pushl
mov
xchg
out
into
das
jo
pop
fwait
xor
loopne
mov
loope
adc
sub
mov
mov
cmpsl
repz
xchg
push
sbb
addb
pusha
orb
push
xchg
leave
movnti
add
out
sahf
cmp
test
fistpll
pop
dec
ljmp
fs
push
sub
leave
cmpsb
mov
dec
dec
fcom
mov
adc
push
jae
bound
ss
lds
adc
cltd
cmp
or
dec
mov
nop
ret
sbbl
dec
sub
adc
xor
pcmpgtw
pop
roll
js
mov
adc
setae
cmp
xor
inc
pusha
lret
adc
dec
mov
daa
jl
cli
ss
sub
popl
pusha
fiaddl
pop
xor
fcoms
dec
in
aaa
mov
insl
in
xchg
jl
imul
cmpsb
mov
aam
sub
lahf
xor
mov
adc
mov
mov
xor
dec
sbb
inc
push
out
cmpsl
xor
adc
pop
cmpsb
lods
dec
sbb
in
sbb
jecxz
xor
mov
or
inc
sub
mov
cmp
cmp
mov
dec
loope
loope
popf
int
sbb
call
jo
dec
adc
in
xchg
inc
repz
add
into
dec
in
cmpsl
mov
jmp
ret
out
jecxz
inc
mov
cwtl
xlat
sbb
sti
mov
and
xchg
push
fistpll
ljmp
sbb
out
stc
mov
and
mov
out
and
or
orb
xor
dec
adc
dec
jg
and
sbb
mov
and
gs
shll
call
es
sub
push
inc
movsb
in
or
outsl
lret
lretw
cpuid
enter
jnp
push
das
repnz
out
pop
pop
and
pop
cmpsb
push
jg
cmpsl
push
dec
js
dec
out
dec
lock
cmp
bound
das
inc
sbb
jmp
sbb
adc
pop
mov
adc
xor
jo
add
aam
mov
stos
shrb
mov
push
sbb
repnz
cli
aam
add
mov
movsl
dec
jg
push
dec
dec
inc
sub
cli
dec
xor
cmp
xchg
mov
orb
jle
jae
and
xchg
mov
lods
dec
jl
sub
pandn
andl
inc
pop
mov
jb
loopne
out
push
add
inc
dec
mov
and
inc
jle
sbb
ds
fisttps
aas
and
les
gs
icebp
cmp
and
loope
push
repnz
dec
outsb
ja
mov
or
inc
pop
shrb
lcall
xor
cmp
sbb
xchg
out
js
repz
les
cmove
dec
and
loopne
xor
push
xchg
sbb
in
outsl
stc
and
cld
xor
arpl
jge
decl
dec
jecxz
and
test
in
aam
sub
mov
sub
add
jg
mov
xchg
cltd
js
fidivrs
dec
push
loope
loope
adc
add
mov
loope
loope
adc
dec
shrb
test
ljmp
out
stos
pop
aam
or
push
bound
fidivrl
cli
sbb
sbbb
mov
test
ret
orl
sbb
and
ret
and
sub
xor
ds
icebp
fs
hlt
sbb
or
test
ljmp
inc
add
xor
ds
and
pop
fucom
xor
outsl
cltd
movsb
pop
mov
adc
clc
sbb
cwtl
sub
sub
push
cmp
xor
push
movsl
inc
data16
xor
push
cmpsb
pop
dec
inc
test
mov
cmp
adc
push
jp
cwtl
xchg
scas
in
dec
adc
mov
leave
add
in
push
cmp
outsb
mov
push
aaa
dec
mov
jle
jp
or
jmp
pushf
inc
inc
adc
in
and
dec
xchg
rcrb
leave
and
mov
cmpsb
shrl
outsb
jbe
mov
stc
mov
ss
dec
idiv
aas
aad
lock
cmp
adc
sbb
push
cs
add
int
jbe
mov
jl
jp
aad
mov
pop
mov
or
out
ret
mov
sbb
mov
cs
addr16
sub
xor
out
pusha
insb
adc
sub
lret
outsl
std
clc
inc
incb
jecxz
ja
push
sub
push
sahf
cmp
inc
jo
dec
xchg
fisttpll
sub
xchg
and
sbb
jo
or
jp
incl
mov
sub
dec
xchg
iret
jmp
lahf
insb
stc
sbb
mov
test
fisttpll
xchg
popa
dec
pop
sbb
xor
add
mov
sub
xchg
jae
js
repnz
cwtl
inc
jp,pn
mov
mulb
jp
sahf
dec
cld
mov
pop
xor
addr16
lahf
xchg
add
mov
adc
mov
dec
popf
leave
mov
jb
jl
xchg
jno
or
push
xchg
sbb
adc
incl
mov
jno
mov
lret
inc
addb
pop
sbb
ret
cld
nop
ficompl
xchg
or
mov
repnz
pusha
les
xor
jb
call
pop
stos
sbb
dec
jp
ljmp
int
and
clc
jle
dec
mov
out
or
adc
nop
sbb
iret
cmp
mov
cmc
mov
sbb
mov
cmp
movsb
bound
adc
lcall
nop
adc
sub
push
adc
js
push
sbb
inc
dec
into
mov
cmp
and
dec
pop
insb
mov
sbb
and
nop
push
add
cmp
sbb
jecxz
pop
cmc
xor
sarb
pop
cmp
push
loope
mov
stc
sbb
inc
in
add
iret
adc
lds
mov
sbb
fisubrl
xchg
insb
insb
or
scas
xlat
push
inc
push
add
lods
cli
mov
jp
dec
movl
push
mov
addr16
fimull
adc
ficoml
mov
into
jge,pn
ret
fidivs
shrb
andps
sbb
mov
dec
xchg
push
mov
pushf
dec
ficompl
adc
xor
repnz
push
xor
add
loopne
movsl
jle
xor
in
sbb
loopne
xor
lock
xor
dec
pop
push
dec
jle
repz
sub
js
push
scas
in
subb
pop
das
nop
mov
jecxz
mov
call
jbe
decb
push
cli
or
cmp
ret
pop
out
and
dec
and
cld
pop
sbb
lret
inc
dec
push
cltd
or
push
das
inc
repnz
mov
orl
fsubp
sub
xchg
push
cmpsb
sub
lahf
xchg
mov
ret
jns,pn
push
aas
loop
push
push
stos
jp
push
dec
sub
movsb
xchg
cmp
ds
fwait
mov
dec
es
xchg
jo
cwtl
push
mov
cmp
fsubrs
mov
aas
dec
cwtl
jg
cmp
pop
pop
dec
push
js
xor
mulb
shll
adc
mov
je
mov
push
and
xchg
pushf
ss
jg
lahf
mov
sbbl
dec
ret
in
mov
mov
mov
jmp
xchg
jbe
stos
dec
pop
mov
ret
mov
ret
ja
push
push
repz
mov
fs
dec
push
loope
in
arpl
pop
in
fs
ror
xor
mov
in
sub
pusha
xor
lret
adc
dec
inc
and
ret
push
shlb
rcll
fidivs
mov
jns
dec
js,pn
loop
cmp
add
inc
stos
adc
jnp
push
js
mov
pop
in
push
in
xor
outsb
sub
daa
mov
fcoml
dec
mov
mov
mov
shrb
imul
sbb
aas
dec
popa
dec
call
jae
mov
pop
adc
into
in
icebp
sub
flds
jmp
push
cmp
sbb
pop
bound
in
mov
bound
popa
into
pop
shll
pushl
or
aad
or
ja
mov
ljmp
fwait
lods
lret
je
loope
xchg
push
cltd
cs
push
scas
notl
imul
imul
inc
xor
fs
xor
aas
roll
clc
rorl
bound
push
das
inc
lret
ds
loope
or
inc
pop
pop
je
or
mov
push
mov
iret
jp
jnp
ror
sar
inc
push
cmp
xor
jo
add
mov
sbb
aad
daa
sbb
jne
movsb
sbb
test
std
push
ja
testb
repnz
xchg
andl
addr16
jmp
pop
jns
push
inc
jg
push
cmpsb
or
sub
lret
bound
ficoms
jp
xchg
jae
mov
dec
je
nop
imul
xchg
push
adc
inc
adc
ds
lret
sbb
subb
loopne
cmpsl
pop
rorb
sbbb
push
dec
xchg
jo
cmpsb
mov
roll
andl
and
in
or
ret
mov
gs
ljmp
add
mov
add
and
loope
sub
rcrl
int3
jno
xchg
xor
dec
or
cmp
aad
lret
lds
sbb
cmp
mov
shlb
mov
test
xchg
sbb
xor
xchg
aas
std
inc
dec
movsb
fdiv
push
aas
push
outsl
sub
add
lcall
aad
lret
in
push
mov
and
inc
sub
dec
push
fsubrp
mov
mov
jp
lcall
ret
stc
or
bnd
jno
icebp
xor
bnd
mov
scas
xchg
inc
roll
stc
lret
xor
inc
inc
xor
shrl
outsb
js
mov
aad
sti
xchg
mov
jb
push
std
ljmp
or
bswap
ror
pusha
mov
and
lret
icebp
pop
inc
add
dec
xor
clc
inc
sbb
pop
xor
dec
imul
insb
or
push
ss
stos
loope
ljmp
cli
ljmp
ljmp
clc
and
mov
xor
bound
imul
pop
sbb
loop
ss
ljmp
sahf
pop
push
rcr
ret
mov
mov
jle
ss
mov
cmc
push
je
ss
sub
mov
inc
test
and
repnz
sbb
jnp
test
stos
adc
adc
sarl
lret
sub
lcall
jno
inc
clc
cli
into
ljmp
fnstenv
loopne
sbb
js
mov
and
mov
mov
sbb
cs
jge
or
fidivs
loop
dec
sub
jb
xlat
lods
bound
addr16
pop
push
push
add
xor
xor
outsl
ret
jle
pop
aas
adc
mov
mov
sti
mov
test
rolb
in
stos
mov
sbb
sbb
mov
outsl
mov
jns
and
xor
ds
nop
cli
outsl
loope,pn
jp
mov
test
les
es
jns
mov
fstpt
inc
cmp
rolb
inc
xor
jb
dec
movsl
push
je
addr16
es
push
xor
adcb
xor
or
mov
or
mov
pop
out
lahf
push
rorb
scas
cwtl
mov
and
icebp
xor
ss
mov
mov
push
pop
outsb
lcall
mov
jle
mov
fisubrl
pop
sbb
fldt
fcmovne
mov
out
pop
jge
xor
cld
inc
aam
pop
call
xchg
mov
push
out
cld
test
adc
mov
popf
cmp
test
cld
xchg
pushf
scas
shl
fnsave
int3
scas
push
sbbl
jne
sub
push
sub
fnstcw
add
xor
lahf
mov
stos
sbb
mov
rcl
in
lea
sbbb
and
call
aad
lods
adc
repz
clc
adc
iret
inc
lret
sarl
shll
jp
mov
add
jg
push
xor
cli
aas
loope
in
vphaddbd
dec
repz
jbe
es
outsb
jecxz
pop
rcr
jb,pt
dec
or
addb
test
mov
lahf
and
jecxz
sbb
lock
xor
dec
mov
mov
jle
mov
sarb
jo
psrlq
addr16
into
mov
and
fildl
push
or
aam
lcall
xor
pop
adc
ret
sbb
outsl
lret
ljmp
movsb
inc
fadds
sbb
inc
sub
rcl
and
je
push
fwait
push
cwtl
gs
sbb
dec
add
jl
les
jo
mov
or
cmp
pop
mov
xchg
dec
dec
es
in
jbe
adc
push
shrb
push
jb
test
add
scas
inc
out
xchg
lods
cwtl
dec
mov
xchg
jg
push
es
sbb
xor
dec
imul
mov
stos
sbb
mov
mov
mov
lcall
test
mov
cmpsb
adc
or
jp
mov
xchg
dec
cwtl
hlt
fsubrs
cwtl
aam
fs
sbb
mov
inc
dec
push
dec
lock
xchg
mov
dec
rcrl
je
test
pop
adc
je
push
in
inc
jecxz
cmp
es
sbb
idivl
cmpsb
cli
jb
dec
test
dec
mov
mov
push
enter
xchg
leave
dec
dec
jae
xor
jmp
jb
mov
repz
call
mov
mov
and
scas
div
lahf
dec
mov
mov
mov
sbb
push
jnp
jb
sbb
movsl
leave
mulb
push
push
rclb
cmpsl
stc
ja
loopne
add
sub
loopne
jbe
sub
mov
hlt
lret
push
cmpsb
adc
jne
movsb
jno
xchg
scas
adc
push
lcall
pop
or
mov
sbb
xor
dec
add
sub
sbbb
xchg
insl
inc
cwtl
adc
and
rcll
pop
sti
subb
mov
mov
add
adc
jno
push
js
push
jo
pop
repnz
loop
xchg
ficompl
or
enter
lcall
inc
loop
stos
pushf
xchg
or
js
push
mov
out
scas
bound
xor
lea
push
dec
pop
push
adc
xor
dec
mov
ljmp
xor
lcall
jmp
and
scas
mov
iret
mov
gs
jno
mov
repz
dec
insl
mov
jmp
sub
mov
sti
mov
adc
xchg
testl
ljmp
shrl
aam
js
sbb
cmpsl
jle
xchg
mov
sbb
lret
push
sbb
js
lock
dec
stc
sar
inc
fildll
dec
shl
add
sarl
mov
aam
addr16
arpl
mov
ljmp
insb
mov
dec
sar
add
sarl
mov
aam
addr16
adc
xor
adc
sbb
cmpsl
jle
xchg
mov
sbb
sbb
or
roll
aaa
jmp
rcrl
lret
push
sbb
sbb
dec
rep
pop
stos
ja
fstps
lret
jle
insb
mov
mov
fimuls
push
sbb
aas
ret
out
ljmp
insb
mov
dec
sar
add
sarl
pop
adc
insb
mov
or
lock
stos
push
sbb
enter
adc
sub
sub
jmp
das
sbb
push
sbb
xchg
and
test
rcr
push
lret
push
sbb
sbb
cmpsl
jle
or
sub
push
sbb
push
jle
mov
mov
push
sbb
ret
stos
adc
dec
lret
ds
sbb
pushl
lods
add
arpl
ljmp
stos
and
jb
sub
push
fstps
mov
and
xchg
cmpsl
cltd
aad
sbb
sub
sbb
dec
imul
mov
jle
dec
jl
arpl
mov
jmp
adc
sbb
icebp
dec
sub
shrl
mov
sbb
sarl
and
test
xchg
mov
push
inc
cmp
adc
add
lods
iret
xchg
popl
push
pop
shufps
lds
mov
test
jns
cwtl
sbb
cwtl
fdivs
cwtl
cwtl
mov
adc
test
dec
data16
inc
jg
dec
in
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sub
sti
loope
jns
and
clc
cmp
in
fdivr
add
clc
cwtl
clc
clc
mov
clc
test
js
and
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
push
enter
mov
imul
jo
cltd
pusha
and
sbb
or
stos
inc
lret
lds
mov
sub
or
stos
lahf
iret
clc
add
call
mov
xchg
mov
ss
dec
mov
imul
xor
mov
xlat
push
outsb
push
loop
jle
out
jb
fisubl
mov
out
popf
adc
fwait
adc
into
or
orl
shrl
pop
push
aaa
adc
ror
jns
lods
or
cltd
sbb
gs
test
xorb
shr
stos
jns
mov
out
fmuls
push
aas
adc
in
lcall
pop
jmp
aaa
jno
push
mov
xor
je
adcl
aam
inc
sbb
push
mov
mov
push
stos
fidivl
int
mov
jnp
mov
push
push
and
data16
xchg
xchg
mov
jb
std
push
mov
and
jp
lcall
shlb
push
hlt
mov
cmpsb
lcallw
adc
adc
inc
mov
jle
loop
add
pop
mov
mov
mov
or
mov
dec
in
push
mov
jg
or
cmpsb
cmp
sbb
jl
push
sbb
push
mov
stos
jmp
sbb
or
adc
cmc
in
scas
sbb
push
adc
xor
arpl
call
and
fmul
je
int
mov
testb
fdivp
adc
repz
or
add
ja
outsb
and
jae
dec
dec
movsb
into
add
cmp
adcl
into
scas
out
xor
cli
jb
into
enter
insb
rcrl
or
bound
imull
daa
dec
fiaddl
or
mov
das
in
push
je
jne
mov
imul
sub
lcall
or
sbb
cmp
inc
add
sbb
rcrb
mov
ds
shlb
rcrb
jb
push
mov
iret
mov
push
dec
sarl
icebp
test
inc
stos
fisubl
pop
xchg
sbb
cs
aad
gs
xlat
jae
cmc
inc
jg
cltd
je
sbb
sbb
lret
pushw
jl
fcmovbe
or
ss
mov
jmp
pop
mov
xor
cmp
cli
mov
adc
mov
sub
mov
and
sub
sbb
dec
cmp
xchg
fucomp
push
pop
add
and
add
dec
in
cmpsb
mov
bound
jp
test
push
cwtl
je
dec
jmp
icebp
aad
sbbl
sbb
inc
or
jg
mov
inc
out
call
jae
enter
pop
js
dec
push
adc
dec
imull
nop
cwtl
lcall
lods
fists
lret
sub
repnz
add
pop
inc
shrb
out
and
sub
ds
mov
adc
dec
mov
xchg
and
js
sbb
lcall
or
andb
fisttps
dec
bound
xorl
out
jmp
pop
jmp
or
stos
movsl
pop
inc
imul
stos
cmpsl
xor
lret
imul
sub
ljmp
sbb
mov
jecxz
cmp
adc
addr16
test
loop
rep
jle
adc
addr16
test
loop
in
adc
arpl
dec
rep
jle
adc
addr16
test
loop
rep
jle
out
lahf
test
loop
rep
jle
adc
addr16
test
loop
rep
jle
adc
sbb
rorb
movsb
jle
adc
addr16
test
loop
rep
jle
adc
addr16
xchg
dec
ret
movsb
jmp
filds
jle
adc
addr16
jb
mov
addr16
test
loop
rep
jle
adc
addr16
test
loop
xlat
adc
arpl
enter
jb
inc
sbb
andb
out
jl,pn
clc
lods
cli
sub
aas
sbb
mov
cli
sub
inc
xor
mov
jo
cwtl
sbbb
lcall
mov
or
xchg
xor
xor
outsb
push
cmpsb
or
push
ss
xchg
je
xchg
dec
bound
xchg
fld
lods
stos
fiadds
sbb
jae
stos
sbb
dec
test
and
mov
test
and
js
lds
insl
dec
sbb
push
fisttps
sbb
lret
js
sbb
cld
jp
inc
inc
mov
in
push
jle
cmp
dec
and
rolb
pop
and
dec
negl
and
aam
sbb
xchg
fcoms
dec
loope
dec
push
xor
dec
sub
sub
pop
mulps
and
mov
in
lahf
jbe
or
sub
ret
gs
mov
mov
mov
dec
fildll
jnp
shll
pop
cltd
cwtl
adc
sbb
gs
mov
adc
call
js
sbb
dec
jl
jb
or
xor
jp
xor
je
pop
rcr
inc
jl
cmpsl
sbb
xchg
mov
sbb
sbb
pop
outsw
jo
gs
or
outsl
lret
stos
in
and
daa
outsl
loop
pop
incb
sub
xor
mov
dec
fsub
fdivrs
out
inc
stc
cmpsb
cmp
andb
inc
lret
inc
aad
xor
fadds
xor
dec
dec
inc
fsubl
mov
popa
jle
jp
mov
ds
inc
fsubr
dec
xor
dec
inc
decl
jmp
xor
js
movsl
sbb
or
call
push
cmc
dec
xor
out
inc
adc
out
sbb
mov
pop
test
xor
stos
in
push
mov
in
lahf
jle
xor
cmp
dec
cmp
cltd
jmp
xor
cmp
and
cmp
cmp
push
jl
cmpsl
sbb
fidivl
xor
lods
lret
js
sbb
out
cmpb
dec
in
lcall
fwait
pop
test
lret
fdivl
push
out
add
or
jb
popf
lods
shrl
and
xor
mov
mov
cltd
and
les
xlat
push
cmpsl
jge
repnz
push
mov
outsb
ret
mov
push
dec
repnz
xor
imul
sbb
jbe
dec
lock
jle
test
dec
pushf
sbb
dec
gs
adc
scas
inc
pop
dec
imulb
outsb
xchg
dec
cmp
test
jne
movsb
mov
mov
hlt
mov
push
inc
ret
and
mov
or
ss
or
xor
cmpb
ds
lods
fdivs
into
and
aaa
sahf
loopne
pop
cli
and
loopne
ss
adc
dec
and
ss
in
pop
cmc
mov
test
xor
mov
jb
jecxz
rclb
insb
jl
jb
pop
outsl
loopne
push
out
leave
loopne
pop
and
ds
xor
jge
fldt
add
xchg
call
or
enter
adc
pop
dec
or
mov
inc
jbe
add
hlt
jge
inc
test
mov
js
lret
mov
dec
dec
push
dec
and
data16
xchg
add
outsb
popa
fbstp
xor
xor
mov
dec
jl
sti
cmpsb
pushf
push
out
lcall
mov
lret
push
mov
ret
mov
mov
enter
lods
test
push
mov
outsb
sahf
mov
dec
movsl
dec
fwait
rcrb
mov
out
pop
add
cmp
add
xor
stc
dec
or
hlt
xchg
and
pop
faddl
mov
add
mov
mov
push
in
inc
mov
lods
fdiv
mov
sbb
jne
jbe
pushf
pop
push
divb
test
das
je
mov
lcall
dec
repz
sbb
cwtl
pop
out
xor
dec
pop
xor
stos
push
cmp
xor
cwtl
sbb
xor
jmp
js
add
fildl
xchg
fmul
insb
js
out
and
leave
cltd
ret
stos
dec
jbe
dec
scas
pop
mov
stos
mov
es
push
mov
mov
in
lds
orl
mov
push
xor
mov
pop
fadds
jmp
loope
xchg
inc
xchg
sbb
mov
mov
sbb
or
mov
xor
icebp
mov
dec
rclb
loope
adc
lcall
and
xchg
fcoml
xor
mov
shlb
into
xor
and
lock
mov
std
out
add
dec
clc
aam
es
jl
iret
lods
inc
push
pop
lea
dec
sub
mov
cs
popf
and
js
push
stos
cltd
and
jle
dec
inc
aaa
movsb
sbb
jbe
adc
push
ret
and
xor
fisubrs
cs
out
mov
cld
jb
dec
inc
popf
sahf
and
clc
fimull
rclb
dec
sub
and
mov
dec
aas
or
mov
scas
mov
repnz
test
shlb
lcall
pushf
push
mov
fadds
test
lock
push
push
add
cmp
push
inc
int
js
out
dec
xchg
xchg
jg
je
push
in
xchg
pop
fdivs
and
popa
mov
xor
jo
stc
and
sbb
adc
sbb
lret
xchg
and
test
xor
push
sub
cmc
mov
stos
push
xchg
lcall
sbb
jl
gs
push
arpl
cmp
movsb
jae
inc
jae
gs
jnp
inc
gs
sti
inc
mov
or
sbb
push
inc
outsb
or
stc
mov
scas
jp
push
rcrb
xchg
inc
in
push
jb
shlb
mov
imul
mov
iret
push
push
mov
out
int3
addr16
test
aaa
repz
sarb
hlt
ret
or
loopne
dec
inc
dec
jo
scas
jmp
sbb
loopne
lret
flds
mov
shlb
xlat
sub
add
divb
movsb
ljmp
lret
jns
inc
mov
sbb
lret
sbb
mov
cltd
cmp
fcompl
dec
in
xor
nop
repnz
sub
lock
data16
or
fidivs
sub
mov
pop
cmp
mov
cmp
popa
push
test
adc
xchg
and
mov
jno
arpl
aas
arpl
out
add
movsb
loop
shlb
jecxz
mov
push
mov
inc
popf
stos
insl
mov
sub
xor
add
sarb
ret
xchg
xor
jno
cmpsb
je
push
js
lret
add
dec
xor
add
adc
movsl
pop
movsl
add
subb
xor
sbb
je
adc
scas
dec
and
sub
bound
inc
ret
orl
push
mov
push
or
mov
push
dec
repnz
pop
lods
lcall
adc
fdivrs
mov
pop
sbb
dec
inc
mov
add
inc
mov
stc
xchg
movsb
mov
test
cmpsb
mov
out
jmp
inc
mov
mov
lods
sbb
gs
add
inc
mov
xchg
inc
xchg
js
out
test
into
and
loope
xor
das
shrb
ljmp
jecxz
sbb
mov
xor
and
adc
lods
insl
mov
push
dec
aam
cmp
push
xchg
xor
subl
dec
int
dec
cmp
sub
jmp
xor
ret
cmpb
daa
dec
xor
mov
dec
sbb
fisttpll
xor
push
pushf
test
adc
pop
nop
cmp
mov
adc
cmp
cld
pop
xor
lret
push
sbb
sub
jne
andb
mov
mov
push
cli
xor
es
jns
or
jo
xor
cmc
cmpsb
xchg
popa
in
fists
movsl
fmuls
pop
inc
push
mov
push
orb
hlt
arpl
lea
mov
push
mov
imul
popa
jnp
dec
arpl
adc
jecxz
repnz
xchg
je
jl
ret
fwait
mov
push
push
jbe
je
pop
rolb
xorb
jle
in
jae
jo
jp
lock
dec
push
jb
push
sbb
movsb
push
cmp
inc
push
outsb
push
inc
pop
inc
inc
and
leave
xchg
or
scas
mov
push
movsl
testl
mov
pop
push
jecxz
pop
lret
or
clc
inc
jle
dec
or
into
shll
mov
jl
sbb
cwtl
jns
pop
mov
and
sub
js
mov
mov
es
leave
jecxz
std
inc
mov
or
and
push
pop
xchg
jb
sarb
xchg
push
push
fwait
xchg
and
push
repz
sbb
sbbb
mov
das
dec
jbe
and
xor
mov
mov
jg
in
pusha
inc
inc
scas
mov
inc
rcll
jne
mov
or
mov
jne
out
sbb
in
mov
leave
loop
sub
xor
sbb
shlb
mov
and
inc
lcall
mov
xchg
repz
loope
dec
sub
stos
push
shrl
adc
jae
lods
sbb
inc
xchg
pop
lahf
pop
test
mov
jg
data16
ret
nop
out
push
jo
inc
push
jno
jnp
inc
sbb
xchg
inc
xchg
dec
push
sbb
les
icebp
fiaddl
test
outsb
add
repz
mov
xor
fldcw
ljmp
inc
dec
or
mov
pop
repnz
jmp
fwait
xchg
rolb
scas
imul
jb
mov
lock
movsl
push
push
inc
sahf
iret
sarl
mov
jg
mov
out
bound
mov
mov
mov
xor
add
jbe
ljmp
das
rolb
sbb
or
aas
and
mov
sarl
cld
jmp
inc
repz
mov
inc
shlb
xor
loop
mov
add
inc
aas
pop
sbb
dec
test
and
sbb
gs
xor
rolb
enter
fldcw
push
jl
movsb
jns
adc
aas
or
cmp
jl,pt
loopne
sbb
jne
mov
out
lret
jle
adc
or
in
js
cltd
lcall
lret
xchg
les
pcmpgtw
mov
mov
out
adc
sbb
dec
test
outsb
dec
add
icebp
adcb
ret
sub
inc
mov
ret
or
pushf
iret
sti
mov
cltd
xchg
jle
push
in
sbb
cmp
sub
scas
iret
push
repnz
sbb
ds
push
test
mov
push
scas
inc
test
loope
mov
loopne
xor
xchg
add
mov
popl
jl
arpl
repnz
mov
xor
stos
pop
jo
push
mov
sub
push
mov
push
xor
or
push
out
repz
cwtl
mov
fiaddl
pop
dec
xchg
cltd
repnz
mov
adc
jg
adc
sti
repnz
out
call
inc
rol
negl
lret
jp
rclb
mov
jmp
sub
xlat
xor
lret
idiv
adc
mov
cltd
insl
pop
lods
push
fs
stos
pop
mov
pop
jbe
xchg
push
jno
adc
xchg
mov
ficompl
orb
fdivrs
mov
pop
mov
push
lret
insb
stos
fildll
aas
adcb
in
lods
fwait
cmp
dec
orb
cmpl
mov
scas
mov
out
imul
push
push
mov
push
or
mov
rclb
jbe
cmp
push
mov
movsl
push
das
fsts
cmp
js
fldenv
mov
fsqrt
cs
and
add
sub
in
add
inc
sub
fsubrl
and
xchg
pop
lock
lahf
sbb
jl
fwait
in
cli
repnz
rolb
mov
jmp
ret
je
xchg
or
pop
pusha
cmpsb
mov
in
and
dec
cli
je
aad
sbb
xchg
xor
int3
mov
inc
dec
inc
mov
inc
pop
sbb
mov
adc
repnz
data16
cmpsb
jl
adc
shlb
stos
aam
mov
xor
lret
cmp
ret
bound
xor
lret
xor
push
repz
andl
and
lret
fists
loop
arpl
mov
dec
andb
jnp
sbb
gs
fnstenv
pop
and
xor
xchg
loop
sahf
xchg
mov
int3
cli
push
fimuls
add
pusha
jb
jmp
and
sub
adc
out
pushl
dec
or
in
push
xchg
mov
sbb
xchg
inc
insl
enter
fldenv
sbb
sbb
dec
data16
xchg
leave
xchg
inc
push
sbb
outsb
mov
repz
mov
add
out
cs
adc
and
dec
jecxz
ret
sbb
add
outsb
mov
mov
enter
push
mov
push
lods
iret
imul
ret
xor
sbb
clc
stos
aam
lcall
xor
jge
push
pop
add
arpl
pop
je
shlb
mov
enter
and
clc
lret
movsb
xchg
push
mov
sbb
inc
sarl
mov
int3
sub
mov
inc
ret
ja
scas
lahf
mov
mov
into
xchg
test
add
jp
iret
xor
xchg
sahf
push
cmpb
aam
fcmovb
scas
xor
in
fucomp
jl
cs
dec
movsb
sub
test
ja
js
jge
sbb
sbb
sbb
jl
movsb
sbb
jl
nop
inc
sub
sbb
pop
jle
mov
iret
mov
dec
inc
mov
mov
daa
enter
in
adc
stos
or
jge
xor
aam
lret
cmp
gs
mov
xor
mov
leave
cmp
ss
lods
jecxz
cmpsl
sahf
add
fstl
test
into
addr16
sbb
aaa
int3
mov
inc
movl
xor
cmp
fdivs
pop
stos
gs
push
stc
jle
jge
aas
sub
je
and
out
fidivrs
js
jb
and
push
lods
repnz
push
movsb
mul
movsb
xor
fcompl
mov
ljmp
xchg
xor
and
sbb
js
es
rorb
jle
xor
pop
sbb
iret
push
xor
dec
dec
and
pop
dec
and
aam
mov
and
xchg
jb
sub
xor
sti
movsl
or
push
adc
cmpsl
aaa
shll
mov
mov
fwait
push
aad
xchg
stos
xchg
daa
into
jb
pop
insl
ss
mov
sahf
mov
pusha
mov
into
stos
mov
sbb
mov
call
inc
repz
out
cmp
sub
cmp
mov
aad
jns
dec
cli
loopne
push
ret
lret
xorl
dec
sbb
push
cmpsb
or
jp
sub
test
mov
mov
out
sbb
out
cmpsb
mov
inc
outsb
outsl
mov
js
xlat
mov
push
stos
mov
mov
sbb
mov
gs
cmpsl
inc
push
adc
mov
leave
pusha
scas
fdivl
sub
movsb
dec
and
sbb
xor
mov
dec
inc
mov
adc
mov
inc
lret
xor
push
add
mov
dec
xor
gs
mov
adc
icebp
sbb
popa
mov
out
repnz
fsubrp
orb
sbb
push
popa
movsb
xor
mov
test
adc
aam
inc
pop
pop
imul
xchg
js
in
sub
dec
js
mov
test
sub
pop
dec
xchg
stos
dec
stc
push
xchg
adc
sbb
xchg
and
sbb
and
sbb
inc
jg
cmpsb
pop
in
inc
loope
inc
test
andb
adc
fldpi
dec
cmp
fcomp
out
mov
pop
gs
pushf
int
or
inc
cmp
ret
mov
jl
cmpsb
js
push
ficompl
push
inc
mov
mov
dec
adc
inc
mov
loop
inc
jne
adc
inc
dec
jnp
or
int3
mov
adc
add
ljmp
clc
sti
ljmp
xchg
mov
sub
lods
lret
push
out
testl
ficoml
das
sahf
dec
sbb
loop
or
pushf
xchg
jle
push
mov
and
lret
test
sbb
dec
lods
inc
je
fnstcw
adc
fnstcw
dec
aad
dec
bound
and
inc
mov
lret
in
inc
mov
sub
jl
repz
dec
sbb
and
adc
adc
in
push
or
js
lcall
shrl
xor
jae
mov
shrl
sbb
and
lcall
sarb
ds
sbb
xor
shlb
fstpl
sbb
sbb
shlb
push
pop
rcrb
aaa
sbb
cmp
rcll
daa
rolb
ds
sbb
hlt
sarb
shl
sbb
hlt
sarb
shl
sbb
hlt
sarb
push
hlt
sarb
sbb
inc
sbb
sub
rolb
push
xor
add
pop
sarb
js
sub
mov
sbb
sub
sub
mov
sbb
shrl
xchg
sbb
shrl
mov
shrl
mov
daa
dec
shll
xchg
sbb
sbb
and
inc
push
xchg
dec
xor
xlat
ret
movsb
jl
mov
sub
jp
sarl
outsl
sub
ret
inc
sbb
and
inc
add
pop
push
enter
loope
and
subb
xlat
adc
push
loope
cmpb
ret
inc
cmp
jecxz
fsubrs
gs
stos
adc
inc
fdivs
mov
ljmp
icebp
rcrb
inc
jns
mov
sahf
aaa
sub
test
into
cmp
xchg
push
mov
dec
inc
inc
sub
cs
lret
mov
ja
into
dec
cmp
and
popa
jg
push
mov
lret
into
out
cmp
mov
inc
mov
xor
sbb
pop
mov
push
bound
mov
loopne
dec
mov
in
jl
lcall
mov
jnp
lods
in
inc
pop
dec
push
inc
addr16
or
loopne
inc
mov
sbb
or
sbb
test
mov
inc
push
js,pt
push
enter
rdmsr
jo
xlat
lret
test
xchg
mov
rcrb
xor
inc
adc
rdmsr
mov
or
adc
mov
mov
mov
inc
mov
xor
cmp
jns
inc
push
or
cmc
loopne
dec
mov
sbb
stc
js
jl
lcall
mov
jnp
inc
xchg
mov
mov
xor
xor
std
mov
push
ds
push
jecxz
repnz
xor
lret
inc
xchg
dec
dec
ret
adc
fstpt
mov
arpl
dec
dec
jle
pop
push
add
jle
jle
add
repz
adc
sbbl
lret
in
mov
addr16
mov
lds
xchg
dec
cli
int3
insl
xlat
loopne
dec
mov
sbb
addr16
jl
lcall
xor
xor
je
add
cmp
dec
xor
xchg
loopne
mov
sbb
dec
xor
jl
lcall
mov
jnp
sub
inc
mov
xor
lock
xorl
mov
mov
sbb
sbbl
mov
sbb
xchg
jne,pt
adc
leave
sbb
out
push
lret
sbbl
lods
lock
repnz
xor
ret
inc
inc
lretw
dec
xchg
dec
loopne
push
in
sbb
mov
in
jl
lcall
mov
jnp
testl
or
sbb
jns
sbb
in
inc
mov
xor
push
rep
popa
lretw
ds
dec
insl
lahf
xchg
mov
sbb
sbb
popf
aaa
push
add
and
or
inc
jmp
scas
and
ja
mov
xchg
xchg
jl
shlb
mov
and
sti
aaa
add
loope
ret
and
mov
in
push
out
cmp
inc
fnstenv
ljmp
adc
and
inc
or
mov
push
sub
sbb
cmp
scas
and
push
pop
push
mov
jae
sub
sub
sbb
mov
jp
fidivrl
movsb
mov
loopne
or
dec
outsl
mov
mov
lahf
rol
aad
jno
test
sbb
test
and
mov
nop
pop
pop
xchg
jl
aas
xor
push
mov
pusha
add
add
sbb
adc
mov
inc
pop
pop
mov
push
pop
jo
xor
clc
sbb
inc
mov
fbstp
or
pop
and
xchg
xor
jb
lret
in
stc
push
push
out
jne
mov
mov
xor
jns
pop
or
scas
stos
mov
fwait
pop
fisttpll
fistps
dec
push
pop
xor
call
jnp
push
pop
data16
add
mov
dec
mov
and
xchg
mov
push
and
sub
in
adc
add
test
sbbl
jbe
push
cli
mov
jl
sbb
scas
lcall
mov
ds
xor
mov
mov
cmpb
mov
pop
es
push
mov
xchg
out
arpl
xor
ljmp
add
sbb
insb
xchg
cltd
cmc
cmpsb
shlb
clc
aam
or
lret
enter
lret
pusha
out
clc
inc
jne,pt
xchg
andb
add
mov
int3
cmpl
xor
mov
mov
mov
push
pop
add
scas
mov
push
dec
bound
mov
das
mov
inc
ljmp
inc
jge
or
lret
imul
adc
outsl
dec
int
out
jg
dec
loope
push
mov
loope
mov
cltd
in
sbb
dec
push
xor
lahf
push
mov
push
mov
adc
ret
aam
or
adc
out
mov
jl
paddusb
insl
sbb
mov
cltd
sub
jmp
sbb
jb
out
mov
add
rcrb
mov
xchg
jno
lods
lret
lcall
jb
push
sbb
mov
shrl
dec
sahf
out
repz
push
mov
dec
rcrb
ret
out
int3
inc
ljmp
pushf
out
js
in
subl
sbb
mov
xor
jb
and
mov
outsb
dec
or
mov
sbb
sbb
jne
and
mov
jnp
mov
repnz
mov
xor
test
and
or
jl
fisubs
out
push
inc
jl
lret
test
mov
push
inc
sub
or
mov
and
rorl
adc
pusha
xchg
cs
js
xchg
lret
or
adc
loop
jp
mov
xchg
cwtl
movsl
fnstenv
push
movsb
sbb
test
sbb
xchg
mov
fwait
pusha
add
push
jg
and
or
les
mov
mov
add
cmp
in
in
ljmp
cmp
lret
or
inc
pop
sub
insb
add
es
outsl
jbe
nop
std
movsl
add
nop
imul
fmul
mov
sahf
das
imul
sbb
push
dec
inc
dec
jp
nop
dec
mov
adc
test
mov
mov
jb
xor
inc
fdivr
ret
in
lret
pop
jle
cmpsl
imul
add
rorb
adc
enter
rclb
cwtl
mov
rcr
pusha
jo
adc
mov
popf
inc
addr16
and
push
push
je
aam
mov
mov
add
out
mov
out
repnz
shr
mov
push
cmpsb
stc
lock
dec
aad
out
and
sar
add
ss
jb
outsb
ljmp
fisubl
inc
fwait
out
sbb
and
cli
int
insb
mov
ret
mov
test
lods
mov
scas
and
ss
sbb
sti
or
mov
fwait
or
lcall
ret
shll
adc
pushf
repz
xchg
xchg
jae
pusha
int3
test
push
jle
icebp
mov
mov
lret
lret
push
int
ret
push
aad
push
pusha
or
xchg
add
push
mov
push
cmp
pop
xor
mov
bound
mov
fsubrs
push
push
loope
shlb
shl
xor
sub
cmp
xor
jl
cli
inc
ror
inc
mov
inc
inc
aam
mov
or
incb
mov
aas
inc
add
add
sub
es
push
xor
add
lods
and
add
dec
push
out
scas
mov
mov
and
ficoml
add
aas
arpl
push
push
inc
notb
inc
inc
cwtl
and
adc
popa
cmp
sbb
popa
pop
xchg
sub
xchg
loope
cmp
les
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
sub
or
xor
mov
mov
aam
or
mov
cmp
ficoml
cmp
xor
mov
fisubl
push
mov
lret
mov
orb
arpl
dec
and
sub
or
mov
pop
dec
sbbb
mov
pop
dec
shll
lret
bound
sbb
notl
stos
insl
push
mov
adc
fidivl
neg
mov
push
dec
jb
dec
mov
aad
dec
ret
sbb
xor
xor
xchg
imul
xor
out
int
inc
fcoml
sub
inc
mov
mov
cmp
sahf
or
sub
dec
rcr
ficompl
stos
lock
xchg
arpl
mov
stos
pop
jb
fadd
fwait
cmpps
js
aad
out
mov
sbb
mov
xor
ja
scas
mov
pushf
and
decb
mov
negb
pusha
and
mov
mov
push
pop
jns
add
test
sbbl
and
push
dec
loope
mov
lock
push
push
add
leave
shrl
pop
fs
xor
mov
mov
cltd
mov
push
mov
jmp
sub
push
popa
fcos
mov
sub
fwait
aad
cmp
adc
fisubrl
loope
out
push
sahf
jmp
ds
push
dec
jbe
inc
jns
add
mov
mov
xor
dec
pop
xor
out
addl
insl
mov
or
cli
adc
cmp
push
push
xchg
cmp
jmp
and
push
popa
dec
insl
adc
call
pop
push
push
ret
lahf
or
mov
mov
adc
das
xor
mov
stos
sub
sub
sub
xor
fs
xchg
andl
dec
movsb
dec
divl
test
inc
jg
push
repz
daa
push
ret
testb
cmpsl
jle
jno
scas
push
ret
lods
mov
adc
ljmp
repnz
mov
dec
outsb
in
sbb
imul
pop
stos
repz
call
repnz
sbb
push
jle
dec
and
inc
lret
repnz
dec
scas
arpl
jecxz
std
es
shrb
sbbl
jl
xlat
mov
gs
push
hlt
aas
cmp
aaa
and
dec
inc
sti
loope
mov
orl
dec
cmp
inc
rol
push
fldcw
ret
jbe
fcoms
pop
xchg
mov
orl
pop
icebp
adc
sub
adc
stc
in
mov
pop
sub
xchg
out
pop
push
in
cmpsb
adc
lret
fisubs
dec
mov
stos
or
pop
sahf
mov
divl
push
sbb
sbb
loop
mov
outsb
push
dec
mov
inc
aaa
inc
ja
dec
pop
dec
push
negb
pop
mov
das
xchg
js
adc
mov
lahf
mov
sahf
pop
fiaddl
lar
sbb
into
aas
inc
mov
sbb
jl
sbbl
pop
xchg
mov
push
pushf
push
js
jo
je
sbb
daa
ljmp
stc
mov
sbb
std
mov
mov
xor
xor
sbb
sbb
loopne
jmp
push
decl
lock
add
xchg
cmp
lret
and
mov
jg
rclb
xchg
inc
enter
inc
mov
adc
rcrb
mov
mov
bound
dec
popa
lods
in
jb,pn
insw
mov
popf
mov
xchg
sbb
call
mov
push
xchg
jp
push
arpl
inc
dec
and
andb
cmp
sub
jno
mov
es
cmpsb
test
push
test
ret
les
addr16
int3
inc
out
decb
xor
and
add
jns
sbb
add
mov
inc
sub
dec
jl
xchg
out
jns
inc
jl
lock
dec
push
mov
push
inc
rcrb
in
dec
mov
lret
js
sbb
xor
sysexit
mov
arpl
inc
xor
arpl
dec
bound
cmpsl
jb
inc
cmpsb
test
mov
jbe
orl
xor
loop
sbb
mov
mov
ret
pop
nop
sbb
cltd
jno
adc
xchg
sub
lahf
mov
inc
adc
sub
or
cmpsb
and
out
inc
mov
push
jo
xchg
and
je
mov
mov
out
aas
fsub
pop
outsb
mov
ficoms
testl
popf
std
or
adc
sub
and
lret
inc
negl
xchg
cld
mov
dec
jecxz
and
mov
or
add
dec
fs
jp
mov
dec
movsb
insb
push
lds
gs
sbb
std
push
or
in
sub
xchg
jb
dec
movsb
or
and
icebp
jb
dec
fidivrl
pop
lock
adcb
sub
pop
or
aad
sbb
sbb
cltd
lret
stc
and
popf
mov
es
lahf
mov
mov
lahf
and
les
int3
pusha
rorl
iret
dec
mov
shll
scas
push
fistl
xor
and
add
es
inc
adc
fidivl
iret
adc
cwtl
jo
repz
pop
dec
jle
cmc
in
mov
int3
hlt
lret
repnz
cmp
xor
and
lahf
loop
jae
sub
stos
dec
aaa
js
adc
adc
leave
inc
add
flds
cmpsb
inc
sub
sbb
dec
mov
xor
pop
xlat
mov
xchg
jl
push
sarb
push
mov
into
jo
test
popf
in
fldenv
addb
mov
ficoms
mov
dec
sbb
inc
xor
push
popf
xor
sub
dec
test
push
test
popa
add
jmp
mov
outsl
push
mov
cs
push
cs
sbb
insl
sbb
ds
fcoml
or
mov
dec
es
ja
mov
mov
out
rclb
cli
inc
rorl
into
mov
ja
and
adc
push
sub
popa
rclb
jle
lods
add
movsb
and
ret
push
je
xchg
loopne
dec
test
cmp
ret
dec
or
mov
adc
xlat
cmpb
shl
jb
bnd
pop
or
pop
int3
out
outsl
dec
dec
inc
mov
push
adc
push
cwtl
jb
lret
xchg
jle
mov
inc
dec
ljmp
sbb
dec
pop
sbb
jle
daa
repnz
stos
lret
ljmp
iret
push
movsb
jb
lret
rcrl
adc
xor
xor
pusha
jle
test
dec
idivb
mov
or
jp
imul
out
inc
shlb
dec
mov
mov
das
fists
pushf
fucom
sbb
cmpsl
push
mov
mov
jp
jmp
or
push
xor
pop
in
cwtl
pop
jge
shll
cmp
cli
jns
xorb
shrl
jmp
push
pop
je
pop
cmc
repz
xchg
ret
mov
cmp
stos
dec
add
shlb
add
push
ret
std
loop
push
add
pop
cmpsb
xorb
loop
sub
es
mov
cmp
lahf
shrl
addb
in
cmp
add
daa
scas
add
jmp
call
push
movl
call
sbb
rcl
mov
pop
mov
and
call
xchg
test
xor
ljmp
ljmp
insb
push
xor
cmc
and
mov
and
xchg
mov
push
inc
outsl
test
mov
sub
insb
jg
or
inc
mov
mov
ja
leave
jbe
call
xor
je
pop
in
cld
mov
cmc
cwtl
jg
sub
cmpsb
sbb
jge
lds
popf
xor
mov
cmp
pop
stos
dec
mov
push
adc
pop
mov
inc
add
push
and
add
and
and
xchg
les
scas
cmc
push
sbbb
cmp
push
leave
outsl
sub
lock
stos
sbb
test
cmpsb
cmpsb
mov
jl
xchg
stos
mov
push
pushf
adc
je
cld
mov
cmp
push
call
call
pushf
mov
pushf
mov
call
loopne
sub
popf
adc
aad
xchg
add
push
mov
pop
loopne
pop
leave
adc
inc
pop
push
jle
xchg
push
mov
pop
jle
and
inc
push
out
push
pop
xchg
lea
mov
jb
fmul
inc
xor
jno
test
outsl
pop
push
sbb
jl
sub
and
and
mov
call
jmp
push
lea
jb
pusha
jmp
or
fsubl
faddl
flds
out
test
mov
lods
repnz
popf
push
ficompl
scas
imul
sbb
dec
pop
dec
inc
idivl
add
scas
pushf
and
sbb
imul
js
cli
and
in
jbe
sub
push
mov
jno
int
xor
jmp
mov
cltd
in
adc
dec
int3
push
push
sbb
data16
inc
push
nop
ret
movsl
sub
adc
std
push
xchg
jmp
aad
scas
ret
mov
xor
adc
int3
xor
xor
sub
loope
mov
popl
jmp
or
jb
xlat
mov
repnz
add
in
or
mov
fst
enter
imul
and
out
pop
push
lret
dec
cld
mov
clc
bts
mov
pushf
bt
test
mov
cmpb
pushf
pusha
lea
jne
bts
cmc
sub
bts
or
cwtl
pushf
mov
rcl
rcl
sar
add
sbb
inc
shr
mov
call
or
ret
pop
sarb
cmp
jp
int
adc
shll
cwtl
mov
les
mov
sbb
lret
enter
and
lret
adc
popf
std
aam
shll
enter
xor
clc
inc
insb
dec
xchg
and
rclb
stos
xchg
add
mov
or
pop
shl
hlt
cmp
sti
fcoml
shlb
adc
lcall
mov
lcall
xor
dec
loopne
xchg
xchg
mulb
xchg
dec
js
cltd
fcmove
or
dec
shll
adc
lret
das
push
out
fsub
and
or
push
shll
mov
out
xchg
or
outsl
stos
cmc
test
lock
test
mov
mov
xchg
popf
cwtl
outsl
push
lret
lock
out
push
shr
jns
sbb
push
rolb
lea
jle
addr16
std
pushf
jb
dec
gs
dec
dec
sub
ret
add
mov
cmpsb
hlt
in
int3
lret
sbb
ret
mov
test
push
cli
sbb
mov
pop
pushf
pushf
mov
movl
pushf
movl
push
lea
jmp
movl
movw
mov
pushf
movw
pushf
pushl
ret
lea
je
test
add
pushf
mov
pusha
lea
jmp
pushf
pushf
lea
jae
sbb
pushf
mov
bsf
mov
or
pusha
btc
mov
stc
sub
cmp
repnz
push
pushf
call
jmp
movb
setbe
mov
pushf
bswap
mov
pushf
push
lea
call
adc
adc
pusha
mov
cmp
bt
pushf
cmpb
pushl
jmp
clc
cmp
push
lea
ja
jmp
cwtl
pushl
setp
mov
pushf
lea
ja
push
call
iret
aas
mov
sbbl
sub
mov
mov
les
out
xchg
jp
call
mov
adc
xor
bound
mov
pop
int
xchg
dec
mov
xor
lea
out
jmp
out
xor
ljmp
outsl
sti
das
outsb
xchg
xchg
mov
ds
xchg
mov
mov
bt
pushf
call
bt
cmc
sub
cmp
jmp
call
mov
add
mov
aam
mov
into
sub
cld
out
and
mov
sub
and
xchg
inc
insl
mov
les
mov
mov
sub
xor
push
fsubl
fs
pop
inc
in
or
imul
popa
or
mov
adcl
fs
pop
pop
inc
loope
test
push
std
into
repnz
xchg
add
jo
shl
mov
fadds
popf
sbb
or
hlt
push
cld
mov
inc
cmp
lods
add
jmp
xor
mov
add
and
pop
loope
jle
test
rolb
jne
ret
ja
push
mov
adc
or
cwtl
push
sbb
adc
js
mov
pop
mov
lds
pop
icebp
icebp
pop
push
into
mov
stos
adc
dec
inc
mov
or
push
cmp
sti
jne
mov
test
iret
xor
xchg
cmc
xor
gs
add
sbb
testb
mov
sub
cli
insb
insb
pop
insb
adcl
jl
sub
mov
jecxz
or
lea
add
inc
xchg
shrb
pop
jp
mov
les
loope
flds
cli
dec
jo
and
outsl
gs
mull
mov
lret
inc
ds
jne
fwait
loop
loope
lods
xor
je
xchg
stos
mov
mov
cld
mov
xchg
pusha
stos
cld
mov
movl
pushf
push
push
movb
lea
jmp
jge
rcrb
movsl
fcoml
mov
sbb
xor
xchg
lahf
adc
or
dec
mov
dec
pop
xchg
push
mov
outsb
test
pop
push
cmp
sub
call
adc
clc
push
insb
movsb
xor
jb
popf
xchg
fdivs
cmp
mov
jg
add
sub
addr16
test
xor
xchg
dec
xor
aas
daa
es
cmp
push
dec
xchg
add
and
xchg
and
je
ljmp
adc
mov
pusha
pushf
movl
movb
pushf
movl
pushf
movw
pushf
lea
jmp
pushl
call
test
jmp
test
bt
or
pusha
pushf
pushf
lea
jne
jmp
pushf
mov
pusha
pushf
dec
bt
jmp
dec
inc
push
lea
jle
not
mov
pusha
pushf
jmp
lahf
movb
cwtl
mov
push
pusha
lea
pusha
jmp
add
pusha
pushf
push
pushf
lea
jmp
jmp
movl
jmp
pusha
movl
pushf
mov
push
pusha
pushf
pushf
lea
jmp
movl
push
pusha
pushf
lea
jmp
push
lock
std
std
out
fs
mov
ret
jg
mov
lea
popa
popa
pushf
mov
pop
push
ss
scas
das
mov
in
cwtl
dec
inc
mov
add
out
and
mov
imul
loope
dec
dec
add
jl
inc
xchg
stos
shr
xchg
push
data16
les
xchg
sbb
enter
fadds
mov
movsbw
movsbw
movzbl
pop
push
pushl
ret
bt
pushl
popl
stc
cmc
cmp
call
mov
adc
mov
lea
jae
call
movw
stc
cmp
jmp
push
pushf
movl
pusha
movl
pushl
push
mov
lea
jmp
mov
xor
jo
mov
mov
add
mov
and
mov
imul
cmp
cmp
mov
push
scas
fldl
cld
mov
test
or
push
pushf
pushf
lea
je
pushf
mov
or
jmp
loopne
stos
into
adc
inc
pop
inc
aam
inc
sbb
inc
sub
cld
popa
dec
cmpsb
ss
repz
dec
jae
sbb
mov
icebp
cli
mov
mov
mov
pop
mov
jecxz
jns
jmp
mov
lods
push
or
fmulp
add
sbb
out
lods
out
cmp
jmp
lds
sub
dec
xchg
imul
loope
mov
push
cmp
ljmp
test
cmp
pop
imul
call
loopne
inc
mov
out
pop
dec
aad
inc
lcall
fimuls
fs
jl
or
mov
js
jbe
and
mov
pop
dec
push
cmp
jmp
fistl
sub
jmp
jae
test
in
adc
int3
outsb
cs
fstpt
push
popf
push
daa
scas
out
inc
nop
cmp
shr
cld
jge
imulb
arpl
adc
idivl
lcall
push
out
enter
test
or
cld
mov
int
cltd
xor
pop
std
sbb
push
mov
mov
or
arpl
sbb
dec
sbbl
xchg
sbb
and
rclb
mov
and
lret
inc
and
je
add
jge
cmp
les
sbb
in
xor
shl
mov
mov
push
push
arpl
mov
mov
dec
sbb
xchg
out
add
adc
lret
jae
sahf
push
inc
mov
shrl
cmp
pop
in
arpl
ljmp
movzbw
shl
neg
mov
bt
and
stc
cmc
clc
add
jmp
lret
test
mov
dec
movsb
or
mov
cmp
fcompl
aad
mov
xchg
enter
jg
pop
xchg
shl
shll
sbb
push
ljmp
pop
nop
mov
aas
popf
sub
xor
xor
jo
fcomi
pop
sbbl
pop
fcomi
pop
shlb
mov
test
cmpsl
xchg
push
fidivl
stos
mov
xchg
or
int
xor
cld
mov
lea
jae
stc
call
movl
movl
push
mov
pusha
movl
pusha
lea
jmp
push
push
shr
pushf
test
clc
cmc
cmp
push
push
movb
lea
je
cmc
stc
call
cmp
or
daa
sbb
negl
scas
xchg
push
out
cmp
sub
mov
in
push
dec
ret
fimull
push
rolb
pop
test
xchg
mov
push
je
sub
fstl
pushf
cmp
ss
fld
shll
sub
mov
gs
cld
mov
lea
ja
setnp
inc
mov
inc
cmc
sub
xchg
cmc
call
pusha
stc
call
sti
jb
jo
cmpsl
dec
shl
jae
xor
xchg
imull
cmpsb
or
fimuls
shll
insl
mov
sbb
ja
mov
xchg
xor
scas
icebp
sbb
fdivp
xchg
inc
pop
jmp
mov
inc
imul
das
mov
out
jne
test
inc
dec
loopne
imul
pop
outsl
mov
lahf
cmp
stos
scas
xor
cmp
sub
aad
xor
arpl
imull
jmp
arpl
pusha
inc
xchg
fstps
xchg
stos
or
cs
push
out
jns
testl
arpl
or
gs
pop
sbb
or
sub
cld
dec
sub
adc
xchg
cmc
pop
dec
dec
je
xchg
adc
fimull
or
jno
xorb
cmpsb
loop
lret
fstpl
call
loopne
mov
sbb
std
es
cmp
pop
dec
data16
stos
clc
mov
leave
push
gs
cltd
mov
ja
gs
inc
clc
pop
jmp
ret
pop
push
xchg
fwait
loop
and
jae
push
sub
inc
arpl
test
ret
dec
dec
cli
lds
out
jl
add
int
jle
push
xchg
cwtl
loopne
hlt
sbb
imul
sub
ret
hlt
mov
jecxz
pop
bound
jmp
ja
add
inc
mov
jmp
movb
add
neg
push
rol
push
gs
xchg
dec
xor
test
and
pop
repz
out
ja
mov
pusha
or
pusha
pushf
call
pusha
pushl
popl
pusha
pushl
ret
jmp
mov
lea
je
pusha
clc
call
pushl
popl
pushf
pushf
movb
pushl
ret
lods
lock
mov
jle
inc
out
inc
xor
push
lret
and
and
divb
add
jb
bswap
mov
sbbl
popaw
cmpsl
jl
mov
insb
or
lods
jp
xchg
mov
jecxz
add
or
adc
and
cmc
repnz
pop
ret
cmp
sub
pop
xor
cmpsb
lcall
subb
into
mov
cmovnp
push
jg
dec
test
dec
in
imul
dec
aad
sbb
inc
ror
xlat
clc
fimuls
stc
in
repnz
in
pop
push
sbb
push
lods
xor
xor
test
pop
and
loop
dec
push
stos
xchg
mov
lods
inc
loopne
push
xor
jb
sti
push
dec
adc
lock
popl
nop
pop
dec
enter
in
jne
mov
push
add
out
and
into
jae
dec
or
jnp
push
sbb
sub
pop
sub
push
arpl
ficoms
js
cmp
test
je
loop
and
jmp
dec
xor
scas
pop
xchg
cmp
jl
ds
mov
out
in
adc
jecxz
loop
pop
movsb
inc
popf
mov
xchg
aad
int3
jno
adc
pop
cld
inc
in
xchg
pop
cmp
ret
push
test
push
aad
test
and
jo
jg
ja
loop
xchg
jae
js
fistl
xor
sub
jg
outsb
js
mov
lea
jl
pushf
mov
mov
call
push
mov
call
repnz
pusha
lea
jne
setns
movb
cwtl
setbe
bswap
push
movzbw
movzbw
lea
pusha
movl
mov
push
pushf
mov
pushf
pushf
pushl
ret
jmp
bswap
pop
movsbl
pusha
mov
pushf
seta
bswap
mov
push
push
push
mov
bswap
pushf
bswap
bswap
mov
mov
push
push
mov
pushl
ret
lea
movw
pushf
movl
movw
mov
push
pushl
ret
popf
rdtsc
nop
call
push
pusha
jmp
cmp
pusha
pusha
jmp
mov
movb
movb
push
mov
pushl
ret
pushf
mov
pushl
lea
jb
cmp
cmp
pushf
lea
jae
xchg
movzbw
mov
ror
movzbw
and
mov
xor
add
cmp
mov
clc
pusha
test
bt
sub
jmp
cmp
mov
lea
jb
bt
call
movl
movb
movl
push
push
push
lea
jmp
imul
gs
xor
cs
insb
add
inc
mov
ret
in
lea
aas
push
mov
dec
mov
and
pop
mov
loop
into
aad
adc
ret
xchg
pop
push
mov
es
popf
adc
je
jmp
push
faddl
aas
bound
or
loop
inc
sahf
mov
es
mov
pop
xlat
pop
dec
inc
test
jbe
mov
jae
jo
xchg
lods
aas
insl
fsts
adc
or
push
pusha
mov
rcrl
shrl
fxch
xor
sub
pop
fmul
scas
clc
loope
flds
jb
out
cmp
jmp
jle
cmp
mov
in
add
add
ret
movsb
dec
out
xor
jmp
shl
dec
jl
add
pushf
call
pushl
movl
jmp
sarl
fwait
mov
mov
sub
out
pop
lds
arpl
push
mov
xlat
fsubs
sbb
or
xchg
sbb
push
adc
in
outsl
jle
push
mov
xchg
push
mov
out
sbb
cmpsl
cmp
pop
lea
nop
xchg
lret
lods
insb
mov
idivl
adc
gs
mov
cmp
lret
decl
jb
sub
add
xchg
shrl
pop
jnp
popf
les
jno
dec
pusha
mov
iret
out
xchg
push
in
add
or
pop
mov
cmc
repz
out
push
sub
in
fidivl
push
stos
adc
xchg
cmp
cli
adc
loop
dec
mov
and
jnp
test
cmc
cmp
dec
movsl
idiv
xchg
adc
jae
loope
jg
lahf
incb
xchg
and
popl
jno
insb
pop
dec
int3
cmp
into
inc
xorb
or
cs
jle
lahf
loop
loop
push
sarl
cmp
out
stos
popf
xlat
mov
pushf
in
test
dec
popf
jg
pop
test
mov
outsb
rcrl
iret
dec
lock
es
decl
shll
popa
or
jbe
jne
mov
fisttps
cmpl
loop
aas
ds
frstor
push
inc
insl
jl
out
fcmovnb
cmp
jg
cld
mov
movl
pushf
mov
pushl
popl
pushf
pushl
ret
add
inc
js
je
jb
arpl
jae
pushl
cmp
bt
sub
call
pushf
lea
jae
cmc
jmp
pushf
pushf
movb
movl
push
call
movl
push
lea
jmp
mov
movzbl
pushf
movsbl
xchg
mov
movzbl
mov
pusha
pop
push
jmp
pop
adc
nop
divl
push
test
cwtl
mull
mov
jo
sbb
lcall
nop
sti
ret
sti
xchg
lret
or
or
inc
add
cmp
les
fadds
inc
jmp
cmp
jp
xchg
imul
aaa
gs
dec
iret
sysenter
xor
pop
aad
mov
sub
mov
push
dec
lea
jne
setge
xor
cmp
shl
bsr
sub
mov
not
neg
neg
cmc
add
ror
sbb
sbb
mov
test
cmp
clc
bt
test
je
pusha
lea
je
bt
sub
stc
cmp
call
add
inc
gs
outsl
fs
gs
imul
add
enter
push
lea
jne
bsr
btc
btc
sub
stc
daa
pushf
or
mov
clc
pushl
pushf
call
pusha
pusha
push
call
mov
test
insb
mov
push
mov
add
inc
aaa
xchg
xor
dec
lock
popf
and
jne
roll
xchg
pop
movsl
out
in
lcall
and
adc
cmp
aad
shrl
pop
xor
fadds
fdivr
mov
aam
sub
inc
push
lods
lods
stc
pop
cmp
pop
mov
pop
push
xchg
or
leave
mov
xchg
xchg
sbb
mov
iret
loope
dec
ret
mov
jge
je
and
mov
neg
lods
or
loop
dec
pushf
loop
fsubs
push
adcb
jb,pn
lds
shrl
and
out
ljmp
popf
mov
repz
in
lcall
sti
sbb
in
xchg
stos
pop
sahf
ret
shr
in
jmp
bound
pusha
lea
jb
push
pusha
bt
pushl
cmp
push
lea
jae
bsr
shrd
clc
mov
ror
test
mov
or
pushf
shr
mov
clc
pushf
pushf
jmp
pushf
mov
lea
jne
pushf
pusha
movb
jmp
push
pushl
lea
jb
push
pusha
push
push
pushl
ret
mov
fs
test
gs
dec
sbb
pop
inc
and
adcb
sarb
testb
ret
rorl
das
pop
sbb
mov
in
mov
mov
pop
inc
roll
sti
xlat
push
xor
fprem
cld
mov
lea
ja
push
movl
push
movb
lea
jmp
jmp
mov
pop
push
mov
insl
shlb
mov
cmp
imul
mov
loope
pop
movsl
in
push
jp
aam
pop
jae
push
push
clc
jle
icebp
jecxz
dec
mov
mov
adc
mov
call
sub
xchg
fldenv
pusha
lock
mov
mov
lret
mov
push
mov
sbb
ja
jo
mov
xor
movsl
cld
nop
pusha
data16
pop
inc
int
lods
sbbl
xchg
imul
add
pop
mov
adc
outsb
mov
cld
lcall
mov
mov
inc
dec
pop
ljmp
jmp
xchg
mov
push
xchg
les
push
sub
mov
push
test
cmp
rcrb
mov
pop
push
xchg
sbb
sbbl
jnp
push
jns
add
cmpsl
pop
and
xchg
jbe
cs
fidivs
jo
rcrb
inc
cmpl
mov
loopne
jbe
push
les
cld
mov
cmp
push
and
cs
mov
imul
and
jp
es
rcrl
jecxz
aaa
mulb
pop
sbb
cmpsl
xorb
cmp
mov
mov
js
cmpsb
xchg
aad
mov
fs
mov
mov
or
imul
and
dec
add
jae
stc
pusha
cmp
add
pushl
mov
pushf
push
lea
jmp
jmp
pusha
repnz
jmp
call
pop
mov
mov
xchg
xor
jl
cmp
xchg
call
jg
mov
es
mov
jb
std
pop
cmp
cmpsb
xchg
jg
mov
adc
test
sub
ret
lods
out
pop
mov
cmp
mov
aad
outsl
sub
push
adc
pushf
shrl
mov
xchg
call
mov
mov
mov
movsb
int3
cmp
jp
add
xchg
loop
mov
data16
pop
mov
adc
mov
popf
mov
mov
mov
adc
push
faddp
mov
jecxz
pushf
adc
hlt
dec
pushf
mov
mov
sti
stos
cmpsl
rclb
push
aaa
dec
dec
ss
lea
cld
mov
mov
mov
push
mov
xor
sbb
adc
test
mov
adc
or
fnstcw
sub
jl
repz
push
rorb
js
cld
dec
test
insb
jmp
ljmp
mov
bound
jecxz
mov
popl
mov
sbb
add
dec
xchg
iret
mov
sub
mulb
js
mov
lds
cmpsb
aas
aad
ds
or
rcr
jns
mov
or
mov
cs
repnz
cs
insb
and
pop
pop
pop
xchg
lods
sub
in
push
sti
loope
ret
pushf
out
cmc
xor
shl
repz
mov
ljmp
pop
jecxz
cmp
dec
out
and
sti
insl
push
stos
adc
aaa
xchg
mov
andb
pop
mov
mov
lahf
aaa
mov
pop
or
frstor
mov
test
fidivs
mov
movsl
jmp
xchg
movsl
insb
mov
loopne
xor
aad
in
jns
and
lods
cmp
mov
mov
dec
and
sbb
mov
and
dec
fbld
popa
dec
dec
push
leave
xor
lahf
mov
adc
sbb
jge
dec
push
popf
outsl
lock
mov
inc
stos
mov
incb
add
and
out
lcall
and
loopne
movsl
in
adc
fcoml
xlat
dec
popf
or
lret
push
and
pusha
movsb
mov
pop
pop
sahf
std
dec
push
lret
rcr
rorl
jge,pt
jae
xchg
repnz
insl
in
aad
inc
pop
cld
mov
lret
push
je
and
xchg
repnz
inc
int3
adc
jno
rcr
pop
xchg
sahf
fisubs
jae
loopne
push
lcall
adc
sub
pop
cmp
cltd
push
or
das
sbb
scas
sbb
jns
outsb
mov
push
and
shll
adc
xchg
jecxz
fst
jmp
mov
rcl
call
pusha
lea
ja
call
jl
pop
bound
mov
scas
pop
ja
mov
pop
ret
or
out
lock
push
xchg
ret
aad
mov
in
xchg
sahf
out
das
fdivr
aas
in
cli
xchg
lcall
sbb
jge
in
loope
cmp
mov
add
inc
bt
mov
rol
clc
jmp
call
add
dec
outsl
popa
fs
imul
add
mov
bt
cmp
cmpb
pusha
movb
lea
jne
bt
aaa
btr
pusha
xor
sar
btc
mov
cmp
jmp
push
cmp
push
pushf
lea
ja
setae
setg
mov
pop
bswap
xchg
mov
jmp
adc
sbb
push
mov
and
js
cmpsl
vaddsubps
sub
addb
xchg
ss
loope
out
push
pop
popf
xchg
stos
fucomi
sbb
or
mov
xchg
adc
cld
mov
pushf
cmp
push
pushl
push
lea
jb
jae
push
jmp
jmp
jmp
setge
call
bts
add
mov
mov
pushf
sar
call
movl
pushf
pusha
lea
jmp
popf
cpuid
nop
jmp
movl
lea
je
push
mov
pusha
xchg
not
movsbw
movl
cwtl
cwtl
pop
mov
lea
pushf
call
je
pusha
bt
stc
pushf
add
cmp
call
cmp
pusha
sub
mov
call
mov
test
je
das
clc
pop
dec
xor
jg
pop
hlt
insb
test
lock
dec
cmpb
pop
retw
dec
jns
lcall
dec
insb
and
mov
insl
xchg
jmp
and
paddb
lea
jb
cmc
cmc
pusha
push
cmpb
pushl
lea
jne
shld
pusha
pushf
cmc
mov
sub
jle
push
add
test
cmp
movw
cmp
movzwl
add
stc
bswap
adc
inc
mov
jmp
call
jmp
call
cmp
cmp
push
jmp
dec
pushf
call
jne
lret
scas
test
jp
lahf
jge
cmp
lcall
pop
dec
hlt
jmp
aas
ret
aad
pop
and
push
in
xchg
mov
sahf
loopne
dec
cs
out
xchg
nop
aam
loopne
jo
push
mov
into
pop
inc
mov
mov
imul
cli
cmp
lea
jne
call
pushf
lea
je
pusha
call
jmp
add
movb
lea
jmp
mov
pushf
mov
rol
aaa
aas
cmc
push
dec
push
pushf
btc
mov
bt
test
pushf
movw
lea
je
bsr
bswap
rol
mov
shr
inc
shrd
bswap
add
shl
bsf
inc
mov
pushf
pusha
test
pushf
mov
pushl
lea
je
jmp
lea
jne
jmp
lea
jmp
xchg
call
call
push
pusha
lea
call
call
setbe
call
mov
movl
jmp
push
pusha
movl
jmp
xor
mov
cld
pushw
popfw
pushf
lea
jl
push
pushl
inc
jmp
add
add
add
add
add
add
sbb
and
sbb
and
sbb
sub
sbb
or
stos
sbb
not
sub
shl
rcl
shr
mov
pushf
sub
pusha
pushl
popl
pushf
pusha
cmp
mov
lea
ja
pusha
sub
lea
js
sbb
add
pushf
movzbl
shrd
btr
mov
clc
mov
clc
mov
test
bt
cmc
cmp
repnz
push
lea
jne
call
push
test
xchg
mov
pop
repz
cmp
insl
shrl
mov
push
sarb
or
jle
mov
ja
int
inc
push
ds
pop
xor
push
in
mov
aad
lods
adc
imul
xor
data16
test
fnstcw
sbb
mov
int
xchg
popa
and
adc
jmp
stos
push
xchg
cmp
jo
lods
pushf
fstpl
ret
or
cmp
fmul
sbb
cmp
imulb
les
xor
cld
mov
sub
pop
add
mov
outsb
aam
enter
jo
outsl
mov
imul
dec
add
jp
mov
fdiv
test
jp
aam
into
xor
pop
push
cld
mov
movl
movl
jmp
js
adc
scas
mov
cwtl
cmpsb
adc
out
push
repnz
leave
sub
arpl
scas
add
out
outsl
test
mov
xor
inc
sbb
xlat
xchg
repnz
mov
stos
ss
jnp
or
mov
xor
in
mov
cld
mov
str
call
jecxz
ret
rcrl
iret
inc
sub
stc
pusha
shrb
push
xchg
cmp
stos
and
mov
jp
xchg
shlb
int3
icebp
adc
aas
mov
push
fcomps
ss
mov
mov
sbb
push
call
sbb
testb
pushf
lea
je
pusha
push
bswap
mov
bswap
lea
call
lea
pushf
mov
movzwl
bswap
lea
lea
mov
call
cmp
testb
mov
inc
movsl
or
mov
mov
mov
inc
jae
xor
nop
xor
leave
cmp
mov
xchg
jmp
xor
or
ret
cmp
cmp
push
shrl
out
loop
pop
or
fdivl
cltd
mov
inc
inc
jmp
or
fimuls
or
std
fildl
add
push
sti
adc
push
or
dec
mov
pop
cmp
or
and
mov
jb
dec
mov
dec
adc
cwtl
mov
inc
cmp
sar
inc
jge
pop
inc
sub
dec
adc
push
cli
cmp
pop
and
dec
rcll
xchg
lcall
and
add
xchg
xlat
push
sbb
mov
or
insl
jmp
ljmp
cli
jmp
cli
and
mov
pop
aaa
xor
push
mov
and
scas
mov
mov
or
pop
out
mov
mov
fs
sub
es
in
xor
inc
or
mov
jmp
pop
pop
xchg
sbb
cmp
push
iret
mov
inc
pop
mov
sti
fdivrl
jecxz
testb
xlat
mov
rorl
popa
push
lret
in
mov
xor
jns
inc
jmp
sbb
xchg
lahf
xchg
sub
inc
xor
xchg
sub
xor
fnstenv
push
or
sbb
xchg
xacquire
push
addr16
sbb
mov
jb
or
pop
repz
sub
fcomps
jb
pop
jp
iret
dec
sti
sub
pop
shr
adc
dec
pop
stc
inc
xchg
jle
inc
or
mov
sub
xor
push
cld
or
or
in
daa
in
fistpl
mov
mov
cmp
jecxz
mov
lret
push
xorb
push
fistps
mov
fldt
xchg
dec
jo
ss
cmc
jl
mov
sbb
dec
inc
mov
mov
cmp
decb
or
mov
or
dec
inc
dec
inc
jbe
mov
rcrl
xchg
xor
clc
push
xor
pop
xor
cli
cmp
repz
stos
jae
std
add
pop
clc
mov
out
push
xchg
ret
aam
enter
fwait
jmp
popf
cmp
ret
jecxz
sub
xchg
mov
mov
adcl
popf
push
mov
gs
pushf
and
loope
jbe
dec
dec
aad
dec
inc
xor
and
shlb
mov
xor
push
test
xchg
cmp
mov
add
in
mov
pop
mov
leave
sbb
repnz
in
adc
hlt
addl
mov
jmp
sub
inc
add
push
imul
mov
jbe
push
or
sbb
xor
jo
pop
and
pop
mov
sub
add
lret
inc
cmp
adcb
popf
lcall
jo
lcall
xor
mov
inc
push
ret
or
cmpsl
mov
jp
push
xchg
sbb
data16
push
mov
stos
or
stc
xchg
outsb
xor
push
push
xchg
stos
fisubl
cmp
fimuls
int3
xchg
lret
xor
sub
sbb
outsl
inc
std
dec
dec
mov
aaa
and
addr16
lret
fdivrs
inc
xor
outsb
jecxz
xchg
dec
stos
dec
dec
out
inc
cmp
or
pop
int3
orb
bound
addr16
and
sub
movsb
out
mov
or
data16
mov
dec
xchg
test
ja
jmp
cltd
pop
cmp
cwtl
aaa
inc
sbb
dec
pop
push
or
jbe
jp
jb
ja
jge
ja
es
lret
cmc
cmpsl
inc
fwait
adc
sub
and
fidivl
mov
mov
cli
lcall
mov
fnstenv
dec
popa
enter
push
into
sbbb
xchg
cli
fs
jo
mov
push
adc
pop
pop
test
stos
loop
aas
sub
adc
dec
dec
adc
out
das
cld
jecxz
sbb
xchg
lret
int
push
cmpsb
xorl
and
pop
aaa
push
or
cltd
mov
mov
cs
ljmp
push
dec
and
aad
popf
rcrl
js
or
scas
sbb
dec
push
sub
into
dec
push
ds
push
mov
xchg
pop
mov
sahf
pop
cmpsl
push
mov
adc
pop
pop
jp
xor
sti
pushf
out
and
xor
js
fcmovu
push
mov
outsb
aas
jo
xchg
inc
ficoml
mov
das
pop
cmovge
dec
xchg
cmp
push
lcall
inc
and
jbe
jle
mov
cmpsl
pop
stos
lret
or
mov
scas
lret
push
xchg
mov
xor
nop
sbb
pop
cmp
add
int3
test
dec
jno
push
jmp
mov
orb
insb
imul
mov
stos
je
dec
lret
jb
pop
xchg
and
lcall
inc
jge
inc
and
scas
idivl
mov
jle
loopne
loopne
das
and
dec
sub
jbe
sahf
hlt
pop
xor
push
dec
ret
ror
enter
in
dec
mov
addb
enter
insb
adc
push
lahf
test
sub
mov
es
xchg
sbb
xchg
idiv
lcall
call
adc
mov
push
adc
outsl
xor
or
lock
aad
in
push
mov
dec
int3
pop
xor
dec
rorl
add
out
sbb
cmp
repz
cmp
mov
sub
leave
jmp
pop
xchg
or
movnti
movsb
in
cmpsl
sbb
sub
imul
or
cld
mov
adc
inc
cmp
sbb
scas
fisttps
fdivrl
fnstcw
scas
shrb
adc
push
in
and
loopne
xchg
add
aam
nop
sub
pushl
inc
or
dec
mov
lret
jg,pn
ds
imul
push
movsl
inc
push
pusha
and
or
jbe
mov
inc
shl
dec
pop
insb
sub
inc
inc
add
js
imul
push
ss
inc
mov
xchg
into
mov
or
inc
lahf
fisttpl
xchg
cmc
pushf
sarb
or
stos
addl
call
lcall
scas
add
into
mov
mov
push
cmp
or
add
stos
or
sti
rcrl
and
jns
loope
imul
fisttpl
out
popf
sub
lret
test
dec
mov
jp
mov
rcr
sbb
adc
or
ljmp
cli
and
cmp
sarb
cmp
xor
or
pop
movsl
inc
push
or
js
lea
dec
scas
enter
movsl
mov
cmpsb
sbb
mov
shll
loope
push
cmc
cmp
and
cmp
push
aad
jmp
div
pop
dec
dec
xchg
sti
lret
xchg
and
dec
jb
in
mov
cmp
movsb
xchg
mov
nopl
mov
xchg
push
pop
lcall
lret
scas
out
cmp
fwait
aad
push
iret
push
jg
jnp
call
or
loop
jne
loopne
mov
out
xorb
aad
or
xchg
push
test
mov
sub
pop
dec
mov
inc
je
nop
inc
lock
popf
and
test
inc
dec
or
xor
pop
push
cs
scas
xchg
cs
shl
xor
icebp
stos
je
adc
xchg
xor
mov
ret
sub
jb
fwait
lret
sbb
mov
out
icebp
mov
sbb
inc
push
xor
dec
xchg
shlb
std
xor
repz
insl
bound
fcmove
push
lcall
je
sbb
lret
or
gs
sbb
add
insb
lcall
js
les
flds
mov
aaa
push
push
call
test
cs
push
mov
int3
sbb
xlat
testl
dec
mov
adc
mov
outsl
fs
pop
pusha
dec
int
adc
pop
and
sub
mov
out
inc
pop
and
shll
dec
pop
dec
xchg
dec
insb
sub
mov
leave
ret
xorl
inc
cli
xor
cmp
cmp
push
into
jns
push
push
jbe,pt
das
call
ja
sbb
inc
gs
cmpsl
add
inc
dec
or
rcrl
push
cmp
push
mov
ss
add
psrlw
mov
push
mov
xor
xor
std
aaa
adc
cmp
xchg
ds
lret
lcall
inc
sbb
jmp
cmp
mov
ror
push
cmpsb
cmp
mov
dec
mov
lret
cmp
xchg
loopne
pop
mov
push
addb
inc
enter
sbb
dec
ret
repnz
or
mov
xor
pop
add
jo
sub
sbb
cmpsb
jnp
pop
popa
adc
cmp
sbb
lea
mov
cs
add
sbb
ret
sbb
pop
js
push
pop
jns
jp
lret
or
ret
push
fisttpll
and
lret
lds
dec
cli
xchg
sub
in
adc
jo
sbb
or
jo
jmp
mov
dec
adc
push
repnz
mov
mov
out
jb
add
push
mov
lock
sub
jae
dec
subl
and
cmp
or
dec
pusha
repz
cmp
xor
jb
mov
sarb
or
test
jl
dec
icebp
lret
cmp
negb
and
gs
pop
fstpl
jmp
mov
test
dec
adc
mov
ss
jnp
cs
lret
faddl
sub
repz
cmp
rcr
nop
movsl
jmp
push
xor
repnz
popf
sbb
dec
shll
inc
int3
cmp
mov
or
ja
orb
lret
cli
push
rclb
shlb
mov
and
sub
shrb
jmp
mov
xchg
push
fwait
push
or
sbb
sbb
or
and
jae
adc
xchg
mov
ljmp
repnz
mov
call
stc
jmp
or
pop
add
or
cmp
cmp
fldenv
daa
lahf
out
adc
and
add
add
push
xorl
push
lret
or
sbb
dec
leave
lret
or
mov
jge
adc
call
adc
cmp
movsl
push
dec
les
add
popf
mov
mulb
xor
xor
dec
or
ficoml
cmpsb
cmp
pop
mov
adc
je
sti
dec
mov
les
or
and
mov
and
je
sbb
into
jb
in
sahf
testb
mov
push
inc
cmp
or
roll
cmp
jp
in
and
xchg
and
adc
out
js
sub
push
mov
jb
cltd
ss
dec
stc
ss
cmp
jnp
sbb
inc
aas
push
dec
test
mov
mov
ret
fsubl
ds
xlat
test
faddl
push
dec
iret
cmp
mov
xchg
gs
sub
stos
pop
in
dec
rcr
cmp
mov
sar
and
popf
mov
cli
subb
out
inc
das
pop
negb
cmc
cmc
cld
movsl
mov
mov
pop
es
ret
add
int3
dec
jo
cmp
lcall
test
cmp
jne
mull
adc
sbb
mov
cmp
mov
mov
cmp
jp
or
adcb
sahf
enter
dec
lret
or
mov
jnp
fisttpl
xor
scas
sub
mov
xchg
push
insb
jp
enter
sbb
xchg
into
mov
sbb
or
pop
mov
dec
fwait
pop
inc
or
pop
fiadds
xor
xor
mov
sbb
jmp
negl
or
into
and
out
or
jp
or
popf
mov
mov
jg
stos
idivb
out
into
add
mov
adc
cmp
mov
cmp
or
pop
or
loop
fidivrl
mov
sub
push
inc
xchg
pop
cmp
test
push
cwtl
mov
cmp
pop
and
or
stos
fisttpll
sti
inc
inc
loopne
xchg
shr
push
adc
lret
or
xor
shr
xchg
mov
dec
div
jno
add
cli
adc
mov
add
hlt
push
or
fnsave
shll
jp
xor
hlt
cmp
fsubs
jg
cmpsb
jge
and
sahf
inc
mov
pop
imul
push
stc
sbb
loop
sbb
test
mov
test
in
ljmp
mov
mov
inc
lock
inc
xor
cmp
movsl
mov
int3
orb
cmp
iret
push
addr16
sub
cmp
out
adc
lret
orb
aaa
ret
into
imul
push
mov
or
aam
and
test
mov
cmp
pop
xor
into
mov
sbb
dec
jne
sahf
clc
push
sub
jbe
and
mov
in
mov
cs
lret
or
rorl
push
cmp
push
add
pop
push
or
iret
push
xor
lret
sahf
mov
cmp
pop
xchg
sub
leave
dec
pop
jne
cltd
mov
cmp
ljmp
xor
repnz
mov
lea
xchg
inc
fwait
mov
mov
or
les
mov
xor
aas
jo
jmp
jge
xor
cmp
es
cwtl
adc
cli
pushf
iret
mov
inc
sar
inc
xor
push
mov
jnp
lds
xorb
inc
mov
das
fisttps
cwtl
adc
sub
dec
std
lods
or
mov
cmpsl
fs
imul
js
cmpsb
or
jnp
pushf
mov
aad
jmp
dec
mov
out
inc
into
sti
dec
or
mov
sbb
adc
jmp
scas
mov
pop
movsl
ljmp
aas
mov
add
dec
inc
xor
adc
add
repnz
jae
sti
mov
xor
xor
iret
mov
mov
cmp
push
fisttpl
repz
jl
testb
or
or
cmp
push
cmp
inc
popf
cmpsl
xchg
mov
jecxz
out
mov
mov
adc
je
dec
mov
cwtl
icebp
dec
int3
jo
or
jns
js
test
xlat
mov
jmp
enter
shll
repz
adc
mov
jg
mov
push
inc
sub
jmp
es
xchg
xor
daa
dec
push
mov
push
xor
outsb
mov
cmp
jmp
dec
leave
or
mov
loopne
subb
push
push
repnz
xchg
pop
sbb
xchg
mov
addl
pop
dec
aas
clc
gs
fwait
dec
sbb
sarb
mov
jecxz
xlat
xchg
jmp
cwtl
push
lods
out
dec
xor
ss
push
dec
sti
pop
aaa
or
icebp
lcall
pop
dec
jo
or
xchg
dec
push
dec
pop
dec
scas
popa
adc
mov
sbb
xchg
mov
and
xor
leave
xor
add
int3
lahf
leave
pop
xor
lea
mov
in
leave
mov
je
dec
adc
fdivs
aaa
daa
shl
lods
cwtl
xchg
lods
sbb
fbstp
fcmovnbe
ret
jo
mov
je
cli
andl
and
pop
push
mov
jmp
jbe
mov
sub
cli
cmp
push
out
pop
movsl
xor
jo
sti
mov
jg,pt
cwtl
xchg
xchg
sub
mov
and
mov
pop
dec
dec
test
sub
outsb
pop
cmp
push
in
jle
inc
and
repnz
sbb
cmc
dec
nop
xchg
push
mov
push
addr16
dec
inc
cmpsb
add
dec
mov
stos
dec
mov
sbb
insl
jmp
pusha
in
jl
dec
sbb
ds
mov
pusha
scas
jno
je
cmp
loopne
movsl
repz
test
dec
pop
lahf
mov
loope
aad
pop
cmp
cwtl
pop
enter
jg
les
mov
orl
nop
push
dec
in
rorl
xchg
ds
inc
jle
mov
or
bound
cmpb
mov
jp
outsl
bound
popf
or
jge
adc
jnp
mov
jne
xchg
dec
aad
sbb
shlb
int
inc
not
pop
push
ret
cmp
xor
ss
jmp
std
dec
cmp
lret
xor
lcall
outsl
stc
dec
rcl
or
jo
cmp
adc
fdivr
xor
mov
cmp
rorb
xchg
hlt
jns
add
lcall
daa
cli
jmp
or
mov
dec
or
cltd
enter
adc
lcall
lret
dec
ss
cmp
pop
lods
or
lret
or
aam
push
shrl
push
sub
mov
lods
ret
aaa
inc
in
call
jp
jbe
xor
jp
jle
add
mov
mov
mov
xor
sbb
sbb
cwtl
cmp
cmpl
fbstp
add
or
add
hlt
mov
sub
pop
out
jns
aad
push
mov
sub
pop
jmp
xchg
pop
sbb
jge
dec
inc
jg
aas
mov
or
and
and
push
sub
addb
xor
add
mov
mov
lret
sub
xor
adc
jecxz
mov
je
call
or
adc
icebp
mov
cmp
outsb
sbb
inc
xlat
lahf
loope
adcb
pusha
fstpl
jmp
test
cltd
daa
pushl
pop
xor
dec
sub
dec
das
rcr
dec
out
xchg
mov
or
movsl
cmp
bound
xor
in
inc
enter
xchg
jns
xchg
and
cs
ss
out
push
fistpll
leave
pushf
out
cmp
adc
cmp
inc
stos
xor
add
xchg
push
adc
lods
xchg
mov
xchg
mov
adc
aas
leave
jmp
into
dec
aas
xor
sub
or
push
mov
jle
into
xchg
pop
mov
mov
cmp
xlat
mov
dec
mov
jp
mov
push
in
clc
shl
out
jp
pop
inc
push
dec
sbb
inc
dec
mov
mov
mov
jp
rcll
mov
or
sub
std
mov
fcmove
cmc
adc
cwtl
or
mov
fistpll
mov
mov
push
mov
aas
fstp
test
pop
mov
mov
xchg
xchg
mov
dec
mov
or
lods
inc
dec
mov
call
mov
inc
sbb
push
nop
into
daa
mov
xor
cmpsb
inc
push
mov
popf
leave
ljmp
addr16
sbbb
xchg
inc
mov
nop
pop
push
mov
mov
add
fcmovbe
ja
jg
roll
sbb
movsb
xchg
out
js
xor
stc
xchg
pop
js
and
fcompl
subb
roll
int3
cld
sbbb
ja
pop
inc
aaa
inc
negb
lret
loop
push
cmpsb
mov
lss
je
push
xchg
pop
js
xchg
jne
imul
sbb
lcall
mov
test
push
repz
cmpsl
jns
sbbb
pop
sbb
or
lcall
sbb
xchg
jne
jne
stc
xchg
push
jg
pop
lcall
jbe
fstpt
pop
mov
pop
into
or
std
or
testl
mov
cmp
adc
fbstp
pop
mov
fwait
stos
jp
push
xchg
test
xchg
push
inc
pop
cli
and
jp
cmp
and
mov
adc
enter
dec
push
cmp
cld
stc
popf
pop
rcrl
cli
push
push
es
pop
mov
cmp
pop
sub
xor
stc
pop
out
popa
mov
in
adc
icebp
mov
sub
add
hlt
inc
dec
negb
mov
and
cmp
inc
xor
adc
sbb
andl
or
adc
push
mov
xchg
dec
bound
adc
push
ror
nop
out
sbb
in
inc
jae
jmp
dec
arpl
mov
or
xchg
dec
pop
lret
jp
or
or
mov
or
adc
pop
imul
subl
xorb
push
pushf
repnz
jmp
mov
and
mov
sbb
sahf
pop
sar
dec
enter
mov
xchg
or
sub
xor
jmp
sahf
fwait
sub
push
cs
push
inc
cmc
adc
repnz
pushf
mov
dec
or
inc
mov
and
pop
cmp
sbb
lea
gs
icebp
mov
cmp
inc
mov
xor
or
xchg
push
xor
mov
shll
fwait
lcall
jmp
aaa
pop
mov
xor
jle
jmp
cmp
jb
pop
sbb
in
pop
imul
hlt
test
dec
repnz
repz
cmpsb
lcall
sbb
add
pop
pop
adc
loop
and
and
aad
dec
xlat
push
xchg
jmp
cmp
rcrl
out
mov
in
fidivs
cmc
lret
lds
icebp
dec
ljmp
call
or
popf
xor
cmpb
pop
jl
fstpl
cltd
addr16
sti
adc
jnp
dec
ss
lahf
xchg
pop
stos
je
mov
inc
push
or
je
mov
xchg
roll
popf
in
or
cmp
test
divl
rcrl
in
das
fistpll
xchg
add
sub
xchg
xor
std
xchg
out
inc
xor
mov
xchg
sub
jmp
test
test
push
push
adc
shll
sub
or
stc
mov
lock
imul
lret
mov
xor
and
lret
rcl
in
add
xor
xchg
jl
int3
dec
or
out
jmp
push
rcl
loopne
cmp
mov
cmp
enter
xchg
push
aas
setp
inc
sub
in
mov
out
mov
mov
dec
or
jp
inc
dec
inc
cmp
pusha
adcl
jbe
or
std
iret
mov
iret
shrb
mov
inc
lret
repnz
or
jmp
jecxz
popf
mov
dec
inc
aaa
lret
dec
or
shlb
add
or
in
xor
dec
or
dec
push
cli
xchg
cmp
dec
cltd
xor
dec
out
xchg
cmp
ss
dec
cmp
rcr
imulb
test
jae
mov
jns
cmp
sbb
out
xlat
stos
popa
sbb
push
pushf
mov
dec
cli
int
inc
xor
rcrb
and
push
pusha
mov
push
pop
jge
xchg
or
jmp
loop
xchg
test
stos
push
sbb
rolb
icebp
mov
mov
stos
mov
sub
scas
mov
in
xchg
addr16
or
dec
xor
push
les
xchg
hlt
inc
sbb
cli
into
loopne
dec
mov
and
inc
cmp
lock
lret
out
xor
test
or
pop
cmpsb
cmpsb
dec
hlt
or
cmp
rorl
jns
xor
push
pusha
decb
sub
xchg
pop
test
jmp
add
daa
mov
data16
dec
xor
cwtl
and
test
mov
sbb
das
lds
fdivrs
push
pop
lret
daa
or
jno
adc
sahf
jmp
inc
call
pop
lcall
jmp
enter
and
adc
sub
jb
cmp
sbb
insb
jmp
or
push
lcall
popf
lea
out
mov
cmp
mov
insb
test
pop
lods
sbb
mov
push
adc
outsl
inc
movsl
xor
hlt
lds
aad
cli
sti
dec
in
inc
cmp
cmp
out
dec
push
pop
mov
dec
xchg
or
or
cltd
xlat
pop
jb
xor
fcoms
popf
sti
or
es
and
sbb
insb
mov
imul
pusha
xchg
lods
roll
or
mov
popf
sti
sub
sub
and
nop
xchg
jmp
dec
test
mov
mov
cmp
inc
cwtl
stc
int
xchg
cmpsb
pop
mov
adc
sti
decb
jo
xor
dec
ficomps
jae
mov
pop
cwtl
int3
xor
sbb
pop
mov
push
aaa
mov
inc
xchg
add
pop
push
imul
imul
aas
cmp
fwait
or
movsb
sbb
lret
ljmp
stos
cmp
cmpb
icebp
jmp
cld
mov
xor
dec
sbb
or
rcl
sub
xlat
cmpsl
lods
sbb
or
pushf
rcrb
popa
cltd
je
adc
out
scas
jmp
push
xor
xor
cmp
ds
mov
rcrl
push
lret
outsb
xor
popa
mov
ret
jp
ds
adc
imul
outsl
xor
lret
push
mov
pop
dec
dec
add
push
dec
in
and
cmc
inc
je
lret
ss
pop
sti
cwtl
iret
jmp
mov
outsl
pushw
sbbl
das
pop
dec
jno
movsb
stos
jp
mov
int
sbb
pop
movsl
out
push
cltd
cmp
pop
xchg
into
push
xchg
out
scas
xchg
stc
jbe
idivb
iret
xchg
out
mov
adc
jo
repnz
push
enter
and
jb
pop
or
push
xchg
pop
pop
push
sub
lret
pop
cli
lods
xchg
mov
or
pop
cltd
mov
pop
jmp
dec
or
push
push
cwtl
imul
xor
pop
dec
xchg
pop
cmpl
xchg
sub
fs
fwait
adc
dec
jmp
pop
sub
cmp
fnstcw
out
jmp
sbb
test
decl
sahf
je
cmp
add
das
jbe
shrl
pop
scas
pushf
iret
stos
dec
inc
xlat
in
jge
pushf
or
jbe
jle
daa
sub
lods
add
mov
imul
cmp
dec
or
jo
jb
leave
adc
jmp
test
cmpsl
cmpsb
push
fs
xor
mov
jecxz
jns
adc
fstpt
cmc
jmp
sbb
dec
cmp
rorl
mov
aas
out
jb
decb
arpl
mov
int3
stos
jmp
roll
or
xor
jns
mov
mov
xchg
in
sub
aas
dec
fwait
mov
shr
pop
adc
fcomip
pusha
add
xor
aad
mov
enter
mov
mov
or
jbe
xlat
cs
jmp
push
rorl
or
inc
iret
lods
mov
add
sbb
iret
data16
dec
add
cmp
mov
repnz
push
or
jns
lcall
push
push
push
sbb
sbb
dec
or
add
xchg
enter
or
pop
pop
xor
inc
dec
or
sbb
shl
adc
sbb
dec
int
addr16
mov
int3
xchg
inc
jbe
leave
test
sahf
sub
xor
cmp
in
pop
imull
xlat
stc
xor
cltd
in
mov
or
inc
mov
push
js
xor
mov
pushl
cmp
ja
les
mov
je
jmp
sub
lds
sub
cmp
movsl
or
decb
xor
jb
or
jmp
push
adc
enter
fcomps
push
cmp
push
ret
xchg
mov
ret
or
incb
hlt
inc
mov
repz
mov
lahf
repz
lret
push
sbb
insl
dec
or
icebp
outsb
adc
in
mov
jne
xchg
scas
pop
ss
jmp
push
stos
cli
push
cmp
inc
sahf
mov
out
ficoml
sbb
insb
rcrb
jnp
lods
xor
ljmp
imul
dec
or
movhps
lahf
jecxz
loopne
dec
fwait
xchg
aam
mov
stc
sbb
fdivp
test
jp
push
or
repnz
int
sbb
outsl
xchg
mov
xor
inc
and
fistl
inc
pop
out
sub
sub
xchg
pop
popf
dec
out
addr16
mov
adcl
jb
jp
in
clc
sbb
mov
or
inc
lcall
shl
and
jmp
scas
lcall
jle
or
adc
out
cltd
mov
out
repnz
andl
inc
dec
lcall
cmp
sub
inc
outsb
mov
sub
pop
fwait
dec
into
pop
fstpl
movsl
icebp
mov
mov
cwtl
or
dec
sbb
fildll
into
bound
cmp
lock
or
cmp
imul
jne
mov
mov
sub
stos
xchg
mov
dec
aaa
pushl
push
lahf
loop
cmp
dec
es
cmp
or
or
mov
stc
data16
mov
jne
data16
pop
loope
add
or
and
gs
jmp
cmpsb
sbb
sbb
mov
lret
aas
subl
in
cmp
mov
ds
or
arpl
and
pop
xor
pushf
dec
xchg
cmp
push
rep
inc
push
pop
dec
or
inc
jae
jmp
xor
ret
fidivrl
cmp
in
pop
mov
push
jmp
test
aaa
mov
add
leave
mov
clc
dec
in
and
sahf
push
dec
jl
push
je
dec
cmp
out
inc
pop
pop
jbe
or
test
rcrl
lahf
or
bound
or
cmp
in
rol
xor
sub
dec
pop
or
sbb
mov
xchg
outsb
adc
or
xor
outsb
fldenv
arpl
cmp
cmp
inc
jns
pushf
leave
mov
scas
mov
xchg
mov
int3
fistps
inc
or
mov
mov
dec
test
in
sbb
mov
mov
and
js
dec
in
leave
outsl
icebp
and
jae
cmp
jp
jmp
icebp
leave
jne
jnp
aad
or
stos
cmp
int
dec
je
adc
cmc
rcl
and
cmp
xchg
or
leave
rorb
sbb
aas
enter
cmp
fisttpll
mov
and
mov
std
sahf
sti
enter
or
mov
hlt
adc
stc
sbb
dec
ret
jp
jp
jb
hlt
pop
mov
inc
loop
xchg
and
fcomps
pop
cmc
test
xor
in
cmp
bound
rcr
dec
mov
lahf
mov
jbe
xorb
xor
xor
je
lds
shlb
adc
lret
popa
cmp
movsl
dec
push
ret
inc
sbb
call
out
or
push
imulb
sbb
and
cmp
mov
sbb
ds
xor
dec
cwtl
xor
rcrl
pop
in
iret
sti
inc
or
cmp
dec
mov
gs
cmp
add
xor
popa
js
or
lahf
aas
xchg
mov
pop
data16
test
or
shl
dec
xor
jp
push
xor
repnz
pushf
inc
xchg
mov
xor
cmp
inc
fwait
out
mov
int
fstp
sub
jmp
sub
icebp
pop
in
dec
dec
push
ret
jno
imul
jge
mov
adc
test
mov
or
cmc
xchg
movsb
stos
inc
push
or
js
into
xor
insl
add
aam
icebp
mov
mov
xchg
push
aam
rorl
sub
adc
call
cmp
out
andl
mov
sbb
adc
inc
test
lds
sarl
jo
push
int3
dec
lods
pop
lret
xorb
push
and
fucomp
push
jecxz
enter
mov
loopne
lods
jp
or
sbb
push
sahf
adc
sbb
mov
mov
cmp
cmpsb
jmp
jmp
fisttpll
pop
add
or
pop
repz
fmuls
test
add
xchg
pop
in
dec
dec
lahf
dec
jne
mov
push
jmp
in
push
mov
inc
push
cmp
mov
pop
cs
sahf
mov
dec
sbb
aad
cli
js
imul
mov
or
sbb
fcomps
or
arpl
insb
xchg
fstpl
ds
enter
dec
jecxz
enter
push
mov
icebp
xor
or
stos
jb
or
and
nop
fisubs
dec
fisttps
mov
test
add
jmp
repnz
pop
xchg
cld
or
cmp
subl
mov
cltd
inc
mov
fwait
dec
or
adc
negl
int3
jns
xor
cltd
push
rol
xlat
dec
adcb
pop
daa
mov
inc
inc
and
and
cmp
adc
xchg
mov
jb
js
fwait
add
rorl
clc
adc
pushl
dec
mov
inc
aaa
mov
sub
int3
jb
mov
enter
decl
mov
mov
cmp
adc
shlb
or
dec
pop
pop
or
dec
mov
jmp
xchg
jl
xor
pop
rcr
jae
cli
pop
push
mov
aas
gs
les
mov
xlat
mov
iret
dec
lock
mov
aad
stc
mov
jl
dec
mov
adc
pop
sub
jb
out
cli
cwtl
lcall
insb
sbb
sub
push
cmp
pop
xchg
push
sub
loop
dec
inc
lds
sub
aaa
aam
aas
push
jecxz
mov
xchg
hlt
aad
mov
mov
filds
orl
mov
and
mov
out
push
mov
pusha
stos
adc
fidivrl
dec
or
je
xor
loope
xor
inc
sbbb
mov
ljmp
add
popa
or
push
mov
ljmp
sub
sub
mov
aad
repnz
dec
fucomip
das
push
test
iret
pop
dec
ss
addr16
int
jo
incl
movsl
or
sahf
mov
popf
mov
rolb
push
enter
rorl
cmp
rorb
xchg
sub
aas
xor
js
xchg
ss
int
inc
xchg
test
je
enter
fcmovu
add
mov
ja
mov
arpl
jge
sbb
xor
dec
sub
inc
loop
mov
adc
jp
insl
enter
adc
sub
ds
sahf
or
or
or
clc
in
cld
sub
pop
shll
or
je
push
cltd
adc
dec
cli
or
cmp
pop
fldt
and
mov
out
xor
xlat
fcomi
popf
rcl
inc
xchg
scas
sub
pop
cli
xor
hlt
cmpsb
jb
fisubs
dec
leave
sti
xchg
xchg
cmpsl
fistpl
add
bound
push
inc
push
and
dec
in
fldt
dec
or
xor
push
mov
mov
jp
and
inc
ret
push
mov
xorb
jp
inc
sub
inc
arpl
cmp
fisttpll
and
mov
add
jns
iret
lahf
add
sbb
dec
jl
xor
cmp
cwtl
insl
fucomi
jnp
sub
fldcw
or
adc
fwait
es
cmp
aad
cmp
mov
fs
mov
sub
testl
add
sti
xor
mov
cmp
data16
jmp
rorl
test
loop
pop
es
jecxz
pop
cmpsl
push
sub
jmp
jo
aas
push
in
adc
mov
xorb
setg
jmp
push
or
pusha
popf
jo
jl
add
dec
nop
popf
xorb
repz
rcrl
cmp
out
pop
cmp
xlat
mov
jno
ret
mov
fwait
arpl
aad
stc
testl
lret
stos
fcmove
cmpsb
dec
test
int
pop
data16
cmc
inc
and
jp
adc
out
pop
fldt
int3
mov
or
mov
fiaddl
or
inc
call
mov
and
mov
jg
insb
pop
xchg
push
xchg
movsl
pop
popa
lock
cmp
and
lds
and
mov
sahf
and
mov
cmp
lds
repnz
ds
or
movsb
pop
ret
push
pop
push
sbb
cmp
push
ja
pop
cmpsl
jo
fstp
imul
out
or
push
xchg
nop
xchg
and
sar
out
addr16
lret
pop
sub
pop
or
and
or
inc
jae
ret
jbe
stos
adc
mov
and
cmp
push
gs
dec
adc
cmp
cmpsl
xchg
std
leave
ja
jb
es
movsl
clc
leave
dec
or
add
pop
pushf
xor
adc
adcb
dec
sub
sahf
pop
sahf
pcmpeqd
cmp
int
shrl
cmp
lods
xorb
or
test
ljmp
jp
adcl
add
mov
mov
fucomp
adc
scas
dec
push
pop
adc
xchg
mov
int3
xor
std
jmp
mov
cmp
xor
jo
outsl
mov
mov
sub
popa
xlat
cmp
jle
adc
mov
and
dec
mov
pop
pop
mov
push
dec
xchg
arpl
aas
ret
mov
jae
mov
into
push
ss
add
inc
les
imul
popa
and
inc
ljmp
mov
pop
dec
xlat
fiaddl
shl
bound
cltd
pop
movsl
jp
out
test
repz
sub
stos
call
adc
sbb
rcrl
inc
shlb
cli
test
mov
repz
mov
sbb
sbbb
push
cli
fidivs
add
imul
iret
cwtl
xchg
movsl
arpl
inc
push
mov
push
aas
jbe
scas
or
cmpsb
pop
mov
inc
scas
or
push
push
clc
jl
xchg
inc
ret
arpl
insb
push
push
push
nop
sub
fsubl
test
test
sbb
pop
inc
out
cmp
xor
xor
jmp
push
incb
mov
aad
in
mov
xchg
pusha
and
nop
jns
mov
inc
cmp
out
out
jmp
mov
cmp
cli
idivl
enter
jle
cmp
mov
fldl
into
js
decl
sbb
xor
std
mov
shlb
sbb
adc
adc
or
adcb
inc
fistl
rcrl
rcll
iret
xchg
or
dec
push
push
push
es
cmp
test
cmp
add
shll
push
jp
mov
adc
jb
fcmovb
loope
movsl
adc
test
cmp
rcr
stc
xlat
add
nopl
arpl
ret
add
jae
rcrl
in
jo
ficoms
aas
xor
in
std
xchg
cli
pop
jecxz
popa
sbb
cmc
or
jnp
ss
or
pusha
cmp
lret
xchg
cmp
leave
xchg
test
mov
sub
sahf
jmp
je
cmp
xchg
or
mov
fstl
xor
int3
fcomip
adc
test
dec
mul
scas
or
je
sub
adc
push
sar
aad
jmp
jne
sbb
mov
or
pop
push
xchg
cmpsl
fwait
pop
mov
rclb
xor
jp
or
xorb
in
jnp
mov
and
adc
sbb
lds
sar
pop
push
aaa
jmp
mov
cwtl
cmc
dec
fstpt
daa
jle
out
clc
push
pop
mov
pop
inc
loope
loopne
sahf
pop
pusha
les
or
add
in
scas
push
mov
dec
cmp
pop
int3
out
call
loopne
inc
dec
aam
and
mov
lret
mov
hlt
int
or
adc
out
clc
inc
and
mov
imul
push
jmp
ljmp
adcb
pop
push
shr
fists
jmp
out
dec
and
out
sbb
xor
scas
mull
or
loop
adc
arpl
ljmp
popa
mov
mov
inc
sbb
push
or
mov
fucomip
and
or
nopl
pop
xor
pop
stos
sbb
cmpsb
lcall
mov
adc
sbbb
or
jecxz
cmp
mov
sub
mov
stos
arpl
cmp
or
popf
in
sub
test
pop
bound
iret
rolb
fwait
or
push
xor
jb
and
arpl
and
loop
aam
loopne
sahf
loop
test
adc
xchg
adc
add
je
pop
sub
mov
sbb
mov
rcll
fwait
lcall
mov
loopne
mov
or
imul
int3
movsb
inc
das
int3
repnz
stos
fdivs
mov
out
je
push
test
cs
insl
sbb
jle
inc
sbb
sub
or
fisubl
mov
lcall
lcall
jo
mov
es
lahf
xor
xor
imul
adc
mov
xorl
sbb
es
repz
pop
cmp
in
or
mov
and
adc
pop
push
cli
cmp
push
jo
fsubp
mov
pop
pushf
pop
push
push
cmp
xchg
movsb
movsb
ja
lahf
repnz
mov
cmp
lcall
leave
mov
leave
loop
cmpsb
jae
testb
or
in
push
sbb
or
dec
push
out
enter
insl
mov
pop
std
or
jmp
and
jmp
add
or
dec
jae
jo
mov
xchg
lret
xchg
fists
popf
dec
inc
lahf
insb
push
pop
pop
int3
push
int3
dec
mov
sub
in
and
push
je
lds
and
lret
ret
repz
mov
mov
cmpsl
dec
jge
jmp
sbb
push
roll
mov
into
pop
rcrb
and
aas
xor
jo
or
mov
sub
mov
or
inc
cmp
cmp
cltd
and
fcmovb
mov
xchg
jmp
enter
lcall
rcrl
mov
cmp
jno
push
cmp
jne
mov
xor
adc
test
mov
loop
andl
cmp
aaa
sti
aam
sub
mov
rcll
out
or
mov
or
push
mov
mov
stos
xlat
test
xchg
cmp
push
add
sub
fs
sbb
fsubp
sub
repz
in
outsl
lahf
gs
or
fistpl
mov
sti
inc
rcrb
adc
jb
ljmp
rcr
cltd
xor
pop
scas
jge
fcoms
iret
dec
xlat
fwait
aad
dec
or
into
dec
cmp
push
sbb
data16
or
xor
xor
adc
loope
aas
xor
add
cmp
fwait
jle
jle
push
pusha
xor
cltd
ds
xor
xchg
and
cmpl
jbe
xchg
mov
sbb
insl
adc
lahf
test
test
lea
jmp
roll
aas
imul
dec
sahf
sbb
iret
mov
test
inc
sub
stos
mov
or
test
pop
cmp
sub
and
adc
popf
xor
jg
or
rcrl
jp
imul
lahf
adc
cmp
loopne
lods
rcll
lahf
cmp
lcall
add
inc
mov
enter
jmp
sbb
xor
inc
push
aad
push
sbb
jmp
jb
arpl
cmpsl
lret
inc
cwtl
imul
clc
adc
sahf
xchg
mov
fwait
and
jmp
stos
push
in
adc
push
aaa
sbbb
mov
fdivl
rolb
mov
xlat
sub
dec
arpl
and
pop
hlt
int3
or
aaa
callw
xlat
sti
je
mov
movsb
xchg
pop
add
jae,pn
mov
cs
dec
adc
sbb
fwait
and
popf
mov
mov
sub
outsl
lds
mov
insl
add
or
leave
or
test
outsl
push
repnz
mov
bound
imul
out
rcll
aas
popa
scas
mov
scas
jmp
push
sbbl
sbbl
ss
ret
popf
movl
lods
popf
mov
clc
stos
add
xor
xchg
cmp
ret
pop
jmp
stc
xchg
inc
rcll
repz
inc
mov
mov
mov
lret
ja,pn
dec
xor
lcall
sbbb
cmc
inc
ficoms
inc
xchg
mov
fnstsw
mov
fidivrs
into
dec
or
mov
jno
test
leave
andl
ficoms
adc
dec
ret
dec
mov
xchg
mov
mov
dec
jl
std
or
fcmove
cmp
or
in
cmp
mov
int3
pop
push
nop
nop
push
pop
push
mov
mov
call
and
jmp
inc
or
and
inc
adc
xchg
orl
inc
and
push
shlb
loop
je
push
fdivrs
in
mov
xor
scas
mov
pop
cmp
jns
xor
mov
and
mov
fbstp
or
test
jle
movsl
fisubl
shll
pop
fwait
jae
or
inc
ljmp
out
xchg
leave
aas
xchg
loop
out
mov
sub
js
xchg
ds
xor
jmp
jl
fadds
addr16
mov
mov
or
sub
loop
int3
lea
xor
fdivrl
pop
sbb
int3
xchg
rcrl
mov
fisttpl
mov
fnstenv
and
adc
and
push
adc
rcrl
flds
inc
pop
mov
ret
or
sahf
mov
mov
std
je
out
push
int3
je
dec
bnd
jmp
xchg
cmp
shlb
mov
inc
cmp
push
or
aaa
je
test
cli
daa
ljmp
es
test
hlt
dec
sbbb
xchg
jle
aas
adc
cwtl
push
xor
mov
push
aaa
bound
xorb
mov
add
and
mov
loope
cmp
cmpsl
int
ret
test
and
cmp
mov
dec
cmp
test
xchg
push
xchg
mov
or
push
dec
lret
imulb
shr
mov
test
lahf
push
insb
int3
xor
mov
mov
fcomps
or
mov
push
jl
and
jo
and
dec
or
in
xchg
hlt
cwtl
adc
dec
cli
pushf
mov
dec
inc
lret
in
repnz
hlt
cmpsb
jne
sub
stos
xchg
jle,pt
push
mov
inc
or
leave
xor
pop
or
push
repnz
add
push
jecxz
ss
fwait
xor
inc
shr
subb
fs
pop
mov
mov
sbb
mov
dec
mov
in
jle
rclb
xor
stc
lcall
mov
pop
pop
jge
inc
jg
popf
mov
aas
cmp
jl
scas
das
ja
pop
jb
push
repnz
addr16
adc
gs
ja
sub
or
lahf
push
and
sti
cmp
dec
mov
hlt
sbb
cmp
push
inc
mov
push
push
lock
popa
mov
pop
dec
repz
jb
movsb
dec
cltd
dec
xor
scas
mov
sbb
add
mov
mov
rcll
and
cld
lcall
les
xor
jb
mov
int3
or
mov
push
ficomps
rorl
mov
adc
add
mov
cli
inc
mov
pusha
xchg
pushf
iret
or
lahf
dec
xchg
push
loope
or
push
pop
mov
mov
cltd
xchg
js
out
or
xor
cltd
lods
dec
lret
mov
imul
repz
jp
push
in
xor
clc
mov
sbb
insb
xchg
rorb
das
addr16
lcall
je
xor
bound
jecxz
or
shl
or
push
fbld
cli
dec
mov
setbe
fsub
and
call
sub
cmp
std
adc
sbb
ds
movsl
sbb
jnp
xchg
xchg
dec
cltd
sbb
dec
loop
ds
fwait
stc
bound
test
dec
loopne
dec
push
dec
lods
divb
xlat
add
inc
inc
lods
scas
bound
mov
adc
dec
bound
xor
xor
mov
mov
jle
cmp
push
aad
push
mov
les
inc
pop
mov
cmpl
pop
mov
mov
jae
pop
mov
cli
jb
push
dec
adc
cmp
push
mov
jnp
dec
adc
jo
shlb
push
repnz
dec
add
xor
and
out
iret
pop
outsb
jo
or
mov
imull
mov
push
inc
push
fbstp
mov
lea
retw
push
xchg
in
mov
sbb
mov
in
aam
lret
movsb
mov
cmp
pop
pop
add
sarl
js
mov
fisubrl
test
pop
or
cmp
and
push
push
lea
or
cmp
pusha
jne
add
mov
out
cmp
lahf
sahf
iret
push
jbe
sbb
jae
pop
stos
xor
in
xchg
ja
dec
test
push
popa
mov
push
xor
or
sbb
loope
cmp
shrl
or
jmp
xchg
or
xchg
cltd
mov
jp
mov
mov
pop
call
movsl
jnp
or
pop
and
mov
shl
jg
xchg
xor
imul
push
pop
idiv
xchg
inc
fwait
lahf
mov
jns
push
or
out
sarl
or
pop
repnz
fiaddl
out
andb
enter
inc
ss
repnz
dec
pop
mov
out
arpl
xchg
and
cli
lret
pop
out
pushl
test
dec
xchg
inc
or
imul
mov
lret
jmp
inc
add
cwtl
xchg
xchg
ds
das
push
xchg
adc
lret
mov
sub
popa
jp
stos
jbe
sti
mov
cmp
nop
icebp
aaa
out
or
sub
mov
jp
mov
stc
pop
loope
sub
insl
cmp
mov
pop
sarb
roll
push
negl
xchg
xor
cmc
inc
inc
mov
outsl
aad
mov
roll
mov
test
pop
pusha
mov
cmp
xor
or
mov
cmp
out
imulb
jg
bswap
and
movsb
popf
mov
push
push
loop
test
test
call
leave
jmp
je
fcmovnb
push
or
shll
imull
lahf
dec
stc
fs
mov
sti
fldcw
jmp
add
outsb
pop
testl
mov
rclb
pop
xor
aad
out
mov
test
dec
xor
add
mov
test
or
xor
pop
adc
inc
insl
roll
test
out
push
mov
movsl
jp
inc
test
cmp
xchg
popf
xchg
cltd
shr
movsl
lods
adc
push
sbb
iret
jecxz
test
imul
dec
push
out
mov
insl
ja
daa
std
mov
mov
pop
fstpl
xor
jb
and
xor
or
insb
xchg
jecxz
fstpt
xor
testb
aad
jg
cli
mov
xchg
mov
adc
push
subb
or
repnz
rclb
popa
insb
mov
int3
out
decl
bnd
xchg
jecxz
lcall
jo
push
jmp
js
mov
inc
shl
cltd
fildll
xchg
xchg
inc
push
ja
pop
jb
pushf
or
loop
test
pop
mov
out
ja
cltd
mov
jmp
lahf
or
push
or
mov
lcall
mov
pop
xor
lds
cmp
imul
pop
lret
idivl
cmp
or
fbld
pop
cmpl
lcall
insl
or
mov
icebp
push
or
in
mov
cmpb
xor
mov
pop
das
push
neg
and
add
rorl
jp
repnz
iret
ja
mov
mov
dec
xlat
xchg
sbb
xor
lods
jmp
or
movsl
push
and
sbb
mov
jle
and
sub
dec
jb
or
outsb
cld
cmp
das
or
repz
fisttpl
xchg
and
sbb
ja
xchg
pop
mov
add
xor
inc
ja
adc
cltd
add
mov
inc
pop
shr
rorb
and
imulb
and
or
add
add
aaa
int
cltd
xorb
push
push
inc
jmp
jmp
out
sbb
movsb
test
lea
dec
push
xor
sbb
movsb
int
popf
sti
cmp
adc
outsb
pop
cwtl
pop
lahf
pop
cmp
or
add
mov
xlat
xchg
mov
lcall
jnp
inc
les
push
jmp
sti
xchg
stc
gs
test
pop
fists
lahf
aad
xorb
cmp
in
pop
mov
or
shlb
mov
mov
test
popf
pop
fs
int
inc
into
pop
xorb
mov
pop
xchg
ss
jb
mov
jecxz
into
or
ret
push
dec
dec
pop
mov
and
mov
cmp
adc
js
mull
mov
cmp
or
test
scas
xchg
inc
push
imul
fcomp
mov
add
dec
leave
mov
adc
into
lret
inc
sbb
inc
lods
aad
popf
notb
enter
in
cld
jno
insl
lret
lods
in
int3
into
push
xor
push
mov
adc
ja
lcall
cltd
dec
cmp
subb
push
jae
xorl
out
mov
ja
adc
sbbl
inc
and
lret
jmp
xchg
jle
push
movsl
out
mov
mov
stos
jmp
scas
mov
out
sbb
xchg
mov
push
push
sub
nop
sti
in
jnp
mov
dec
into
xchg
ljmp
icebp
movsl
test
repnz
sahf
outsb
jge
lret
les
orl
mov
jo
sets
xorb
push
out
mov
or
mov
incl
xchg
or
pop
iret
out
mov
cmp
orl
jb
arpl
lods
clc
pop
dec
in
xchg
xchg
pop
push
xor
push
adc
push
add
mov
out
jp
icebp
cmp
bound
push
incl
out
test
mov
xor
ljmp
push
dec
std
or
mov
add
pop
jns
mov
xchg
repnz
pushf
adc
dec
div
adc
jp
movsb
fwait
jl
sbb
adc
bsr
andb
sbb
imul
or
rolb
add
stos
adc
adc
mov
jns
mov
adc
push
jo
shll
fcom
xor
out
stos
mov
mov
jp
stos
shll
dec
dec
add
dec
mov
test
sub
xchg
dec
and
mov
adc
or
in
mov
sarl
jmp
cmpsl
mov
mov
cmpsb
pop
ret
push
pusha
ret
dec
inc
cmp
fstps
enter
iret
enter
inc
shll
or
out
jp
or
es
loop
mov
cltd
std
pop
fsts
xchg
add
pop
or
dec
and
push
jmp
jnp
out
adc
mov
dec
pop
or
scas
fstp
push
sbb
imul
pop
push
jge
aas
xor
adc
sbb
movsb
mov
in
cmpsl
pop
add
fldcw
and
dec
subl
je
adc
mov
pop
data16
test
add
inc
and
mov
imul
jo
iret
popa
lea
sti
bound
and
add
mov
xchg
xchg
cltd
cmpsb
jno
jb
jo
xchg
int3
xchg
outsb
mov
imul
jbe
adc
sub
push
loope
xor
rorl
pop
mov
mov
xorb
inc
sub
jg
je
sbb
int
mov
je
mov
mov
popf
sti
jnp
xchg
push
xor
push
sbb
out
push
inc
pop
xor
jg
test
mov
mov
sbb
add
data16
mov
addb
lahf
mov
cmp
xor
fistpll
cli
fldt
adc
xor
mov
loopne
fildll
jo
leave
cmpsb
testb
adc
mov
enter
or
enter
jns
mull
and
nop
push
aam
data16
pop
sub
hlt
int
addb
repnz
je
inc
mov
popl
mov
push
inc
pop
mov
and
rcr
popf
aaa
or
lds
insl
or
sbb
and
ds
xor
jmp
add
mov
pop
addr16
sub
push
mov
or
pop
mov
jo
cmc
push
push
stc
or
xor
cs
jle
or
insb
pop
loop
mov
xchg
cmp
jg
xchg
test
jg
adc
xchg
mov
std
xchg
lret
shll
mov
mov
fldcw
cltd
dec
jmp
ret
mov
jmp
icebp
sub
jp
and
jp
push
sbb
out
sub
cmc
int3
fistpll
clc
ds
mov
mov
cmc
cmp
insl
ds
cmp
int
push
mov
xchg
dec
jno
push
dec
pop
sub
mov
mov
stc
pop
aad
pop
cmc
mov
movsb
cli
aam
ds
mov
enter
lret
out
pushf
sub
dec
aaa
xorl
aad
cli
pop
fisubl
dec
bound
adcl
repnz
cld
out
inc
or
das
pop
movsb
repz
xor
sbb
mull
adc
out
push
repnz
sub
hlt
test
jae
rol
mov
mov
stos
rcll
push
pushf
xor
dec
or
cwtl
cmp
jp
movsl
mov
cli
sub
xchg
ss
or
and
mov
add
lcall
mov
jg
and
in
mov
mov
mov
shlb
stos
ss
popa
xlat
fs
xlat
mov
imul
sbb
inc
dec
pop
roll
jb
fbld
dec
cmc
cmp
add
popf
leave
dec
fmuls
xchg
mov
fcompl
push
sbb
push
notl
xchg
jmp
addr16
mov
xchg
cmp
jecxz
je
ror
insb
xchg
aas
or
hlt
lret
cmp
scas
adc
lcall
xchg
sub
sub
das
xchg
mov
cmpsb
loop
int
aas
enter
ret
mov
std
inc
insb
sti
bound
inc
dec
mov
sub
sbb
pop
sbb
cld
adc
sbb
loop
and
xor
mov
fldt
testb
pop
pop
stos
push
jp
mov
pop
cli
shlb
sub
sbb
inc
mov
xorb
fdivrs
cmp
jp
or
or
sbb
adc
ss
or
adc
lock
pop
or
adc
lcall
mov
shrb
decb
mov
sub
fidivl
lret
mov
jmp
inc
sbb
push
ljmp
mov
jns
or
jg
pop
cmp
ljmp
pop
shlb
mov
mov
sbb
mov
jb
sahf
cmp
int3
add
cmp
xor
cmpps
inc
fisttpl
das
repz
test
adc
mov
sbb
lret
pop
pop
sub
jnp
or
xchg
sub
scas
js
pop
mov
adc
adc
sahf
arpl
mov
push
jnp
dec
lcall
mov
jae
sbb
dec
imul
das
imul
mov
cltd
sbb
cwtl
and
mov
inc
and
aas
fwait
xchg
inc
negb
test
and
lcall
dec
xchg
pop
fimull
pop
lret
sub
adcb
nop
jnp
sbb
pop
cmp
mov
adc
jb
lret
or
mov
or
jae
jae
lret
pop
jbe
jg
pop
orb
mov
adc
mov
jo
lcall
cli
mov
dec
inc
mov
xor
lret
sub
cmp
sahf
push
test
adc
dec
jbe
pop
jmp
lret
jae
sbb
orl
cltd
xchg
jl
xchg
fcoms
in
ret
mov
cmpsb
ds
imul
in
jo
sahf
test
rorb
add
cmp
inc
jo
or
adc
aas
mov
ret
stos
mov
sbb
ljmp
inc
or
mov
xchg
sub
cmp
into
je
pop
pop
leave
scas
or
xor
leave
fbstp
mov
push
nop
dec
lret
stos
cmp
and
jecxz
lock
sbb
rorl
push
jb
fbld
out
xchg
jg
pop
pop
sub
test
adcb
mov
fs
mov
push
int3
xchg
or
fcoml
stos
mov
dec
nop
mov
les
mov
fildll
out
dec
or
jmp
cmp
aad
add
jno
mov
mov
pop
jb
pop
js
sahf
jg
fs
adc
add
dec
ljmp
inc
pop
inc
aas
lds
mov
pop
nop
pushf
lahf
pop
mov
iret
or
insb
xchg
out
aad
mov
or
mov
push
gs
xor
sbb
loopne
lahf
dec
mov
sbb
rcr
sbb
dec
dec
es
jp
xchg
jp
adc
cmp
sbb
pop
mov
mov
sbb
in
cld
xchg
dec
imul
mov
in
sub
sbb
mov
ret
fisubrs
mov
pop
mov
pop
aad
dec
out
sub
mov
xchg
aam
dec
pushf
dec
jp
cmp
push
movl
sbb
mov
fldt
mov
add
sub
imul
mov
cmpsb
lret
push
js
mov
sbb
xorl
test
sub
sbb
rcrb
imul
dec
rcr
mov
cld
inc
jl
sbb
sti
mov
or
jp
jecxz
push
lcall
popf
jp
int3
mov
jecxz
sbb
add
xor
repnz
mov
div
mov
xchg
xchg
loop
dec
mov
xor
cmp
push
adc
sbb
fimull
dec
add
xor
cmp
rcrb
adc
xor
pop
lcall
add
sbb
inc
or
into
jecxz
ret
mov
cmc
bnd
jb
leave
dec
and
mov
sbb
dec
inc
pop
repnz
xchg
lret
jae
stos
cwtl
inc
test
xor
repnz
cmp
jg
pop
orl
and
sub
dec
sahf
mov
test
push
sti
clc
mov
add
bound
push
add
cmpl
bnd
sub
fidivl
enter
mov
int
sub
sbb
ljmp
stos
jg
add
stos
lods
sbb
dec
dec
ljmp
and
pop
sbb
shll
inc
inc
arpl
xorb
mov
imul
jne
sarb
xor
fstpt
out
cmpsb
idivb
dec
movsb
mov
and
outsb
jae
add
stos
xlat
xchg
subb
aam
pusha
and
dec
cmp
jne
cld
mov
leave
in
mov
and
hlt
leave
mov
je
or
fs
jae
aad
mov
dec
mov
xchg
cmp
jmp
xchg
and
aas
xchg
call
inc
dec
mov
cwtl
cmp
cli
pop
gs
lds
outsl
inc
andl
push
sub
xor
dec
dec
test
jo
mov
sub
loope
sbb
jnp
lods
in
nop
mov
push
xlat
mov
jo
cwtl
mov
nop
jo
dec
jmp
mov
fmull
stos
push
jno
and
negb
ds
out
xor
or
mov
cltd
jecxz
fildl
jo
fdivrs
filds
and
int3
mov
pop
cmp
mov
mov
or
cmp
push
pop
and
jge
xlat
test
and
cs
lcall
test
fistps
add
inc
pusha
pop
dec
pop
and
push
cmp
outsl
or
lock
push
dec
into
int3
mov
cmpsb
out
repnz
jp
push
xor
cli
mov
clc
add
mov
dec
aad
inc
mov
lret
aas
jge
or
or
push
popf
sti
cmp
or
icebp
lcall
mov
add
ret
mov
aam
ss
mov
inc
cs
mov
inc
adc
adc
in
fisubrl
sub
pushf
pushf
gs
sbb
outsl
sti
jo
jmp
xchg
hlt
and
mov
or
sbb
scas
cmp
mov
sub
lods
add
pop
dec
xchg
dec
dec
nop
stc
mov
cmpl
fildl
lcall
or
rcr
jp
cmp
ss
lahf
push
aas
inc
pop
testl
xchg
out
dec
cmpsl
les
outsb
neg
inc
mov
adc
outsl
popf
fwait
dec
in
scas
jmp
jmp
add
sbb
lret
loop
outsb
dec
jb
sahf
ret
mov
adc
mov
leave
inc
xchg
lcall
or
xor
adc
cmpsb
sbb
push
insl
xor
in
test
or
adc
pop
mov
mov
pushf
bound
fisubl
sbbl
or
int3
stos
std
ss
loopne
fistl
jns
adc
test
fistpll
or
pop
sbb
mov
and
add
cmp
in
or
sti
sti
ret
pop
push
stos
xchg
and
jecxz
xchg
dec
inc
or
test
sub
shll
sbb
xchg
jns
lds
adc
cmp
xor
xchg
and
xor
add
out
inc
aam
xlat
andl
insb
std
sub
aad
ror
cmp
push
push
call
lahf
out
jmp
loop
jge
mov
fldt
mov
xchg
and
xchg
add
mov
lret
push
hlt
pop
dec
mov
mov
in
std
mov
pop
inc
sub
loope
mov
dec
jae
jp
sbb
xchg
pop
cmp
push
inc
jp
rorb
push
add
xorb
jecxz
dec
jp
cmp
cli
mov
inc
xchg
pop
lock
enter
iret
sub
test
aam
cmp
les
cmp
mov
sub
les
inc
cmpl
mov
push
sub
or
pop
mov
js
dec
xchg
dec
pushf
push
fwait
iret
inc
mov
dec
scas
cwtl
mov
inc
loop
dec
popf
sahf
fiadds
mov
sti
sahf
bound
and
xor
sbb
xor
xor
mov
imul
xor
lret
cmp
jnp,pt
dec
sub
adc
push
cs
repz
jmp
jmp
xchg
nop
bound
punpckhdq
js
inc
xor
dec
addr16
cmp
jp
repnz
and
fdivrl
test
xor
sbb
negl
sbbl
mov
sub
mov
jb
sbb
aas
mov
gs
inc
ret
sbb
or
lret
add
adc
lret
inc
mov
jbe
jecxz
mov
fdivl
test
mov
jo
jbe
lret
inc
dec
jg
sbb
enter
adc
push
sbb
mov
arpl
shll
sub
cmp
je
mov
lret
sbb
fcomps
xorb
jbe
mov
sub
jae
stos
ret
jp
pop
js
getsec
jl
adc
xor
loop
jmp
add
fimull
btc
bound
mov
ret
push
sbb
mov
sbb
sbb
mov
test
cmpsb
dec
lahf
jmp
cmp
fcmovbe
add
xchg
adc
xchg
int
icebp
aas
loope
test
je
iret
adc
dec
out
pop
push
mov
stc
mov
shll
mov
addl
lret
pop
add
mov
fprem
es
in
gs
dec
or
xchg
lret
test
mov
out
test
jge
fcmovu
rorb
xchg
pop
aaa
or
and
movsl
cmp
je
add
adc
add
jge
mov
gs
pop
cmp
lahf
lods
sbb
mov
or
shll
mov
pop
out
and
sti
scas
or
mov
call
mov
insb
push
add
jl
subps
cltd
stos
xchg
pop
dec
dec
jmp
sub
xor
loope
shll
jo
inc
mov
jl
inc
mov
notl
aas
add
push
cmc
mov
sti
sbb
mov
jns
mov
xchg
sbb
mov
push
add
or
xor
lcall
out
push
fcoms
and
add
cli
sbb
ds
xlat
mov
or
lcall
dec
inc
jo
ret
adc
or
lahf
stc
fistpl
test
or
daa
repnz
xor
or
xchg
jp
sti
or
outsl
sub
imulb
mov
fisttps
sbb
cltd
scas
inc
lock
mov
cmpsb
fdivrs
mov
adc
sbb
mov
fbld
xchg
sbb
in
lock
xchg
inc
imul
dec
mov
gs
pop
xchg
iret
push
test
dec
cmpsl
xor
cmp
repz
xor
or
mov
out
cmpl
shll
or
adc
dec
popf
cmpsl
mov
sbbb
shrb
pusha
or
mov
xchg
outsl
mov
xchg
or
xor
sti
cmp
mov
bswap
stc
mov
lcall
cmp
decl
iret
push
sbb
sti
xchg
popf
or
sbb
adc
sbb
frstor
into
cmpsb
dec
imul
int
out
jmp
mov
roll
inc
dec
mov
dec
xchg
sbb
fstpl
test
cld
aad
fwait
popa
lock
stos
lahf
push
inc
jae,pt
cmp
mov
and
cmp
lods
imulb
outsl
mull
mov
mov
insl
cmp
fwait
cmpsl
or
les
loop
xchg
fmuls
lret
cmp
jmp
insl
pop
in
icebp
ss
mov
ds
test
sarl
jbe
sti
mov
xor
test
sbb
call
testl
jo
add
mov
popf
test
icebp
mov
pop
and
flds
repz
inc
loop
stc
ds
sbb
mov
scas
lods
ret
pop
mov
mov
xor
cwtl
sbb
mov
xor
jle
ret
and
xlat
insb
sub
outsl
xchg
pop
gs
cmp
popa
mov
out
dec
cmp
dec
sub
or
dec
rorl
mov
andb
dec
jno
push
sub
sahf
cmp
mov
scas
pop
push
mov
inc
icebp
xchg
mov
xor
fcomp
and
xor
bound
aad
pusha
or
cmpsb
sti
jbe
adc
dec
mov
lahf
stos
and
outsl
leave
pop
cmp
jmp
jecxz
orb
hlt
inc
mov
insl
push
daa
aad
mov
pop
cmp
popf
or
add
pushf
sahf
adc
jmp
jnp
mov
cmp
insl
cmp
scas
arpl
ds
fldl
cwtl
cmp
dec
cmp
ret
cs
subl
push
add
cmpsb
repz
xor
jnp
dec
push
aas
pop
mov
add
inc
pop
aad
and
mov
push
lods
stos
push
cmp
ss
xchg
sub
or
lods
clc
push
adc
xor
inc
sub
adcl
enter
sub
and
inc
leave
int3
sub
mov
dec
bound
pusha
push
adc
inc
add
loopne
adc
fnstsw
cmpsl
enter
sarl
xlat
pop
aaa
lock
push
adcb
dec
mov
std
cmp
test
inc
push
hlt
aas
xchg
popa
in
mov
leave
xchg
mov
jg
dec
add
insl
out
in
xor
cmp
or
sbb
stos
or
test
fiaddl
repnz
cltd
mov
mov
add
loopne
lock
sub
cs
sahf
addr16
jnp
jns
cli
int
mov
xlat
mov
movsl
loopne
xchg
out
test
gs
push
add
dec
out
int3
jb
stos
ret
in
jbe
jge
sub
scas
sub
adc
dec
jmp
daa
adc
aaa
int3
lret
lret
jmp
and
dec
mov
adc
aas
cltd
pushf
xchg
cld
mov
or
mov
mov
jg
ljmp
aas
cmpsb
pushf
jnp
adc
mov
pop
jge
ret
mov
rcr
icebp
mov
movsl
xchg
in
dec
in
or
sub
cmp
pop
scas
mov
push
jno
in
push
mov
in
hlt
inc
movsb
push
jo
outsl
sub
outsb
stc
test
xchg
dec
pop
insl
js
dec
bound
sub
cmp
insl
jo
push
mull
xchg
mov
stos
out
idivl
sub
ficoml
xor
imul
mov
call
fimull
xor
mov
movsl
jb
je
jmp
jge
lea
cmp
jae
xchg
lods
xchg
fistpll
test
xor
or
int
xchg
push
mov
int3
add
mov
mov
jecxz
ja
fsubl
jbe
aam
xor
mov
in
mov
vmwrite
test
xchg
testb
mov
loopne
push
inc
and
mov
out
cli
sub
push
fwait
xlat
icebp
lods
std
push
adc
addb
cmp
xchg
mov
cmp
mov
std
test
jmp
inc
aad
mov
out
enter
sar
adc
push
xchg
lods
adcb
dec
daa
call
xor
jb
or
js
fs
inc
add
sar
xor
sbb
mov
add
clc
shlb
fisttpll
add
or
hlt
enter
cli
add
push
or
clc
je
and
sarl
out
cmp
pop
repnz
push
inc
test
inc
rol
pop
jbe
cmpsl
mov
cli
cmp
adc
sub
mov
or
not
cmpsl
xor
mov
mov
daa
inc
inc
adcb
sub
pop
cmp
lahf
or
adc
mov
push
xor
mov
mov
jae
sbbl
push
push
dec
inc
fcoms
xchg
sbb
mov
out
lahf
inc
adc
add
push
sub
mov
push
xlat
sub
dec
pop
add
orb
push
push
jo
aam
inc
pop
int
lea
or
cmpsb
dec
jle
int3
mov
mov
out
fldl2t
xor
xchg
push
or
pop
or
out
xchg
xchg
andl
jmp
push
inc
into
aas
clc
jmp
dec
and
mov
fucomp
pop
sbb
jmp
xor
fadds
or
test
push
pop
push
dec
push
dec
loope
dec
pop
ds
or
jo
or
inc
mov
inc
mov
sub
sarb
gs
jo
sahf
xchg
stos
lcall
or
and
lret
xor
pop
outsl
jae
sti
pop
or
mov
xor
loope
mov
sbb
addb
dec
jno
movsl
cmp
sub
or
and
test
into
mov
xor
cli
enter
mov
ja
xchg
pop
les
mov
or
in
and
push
lret
sub
pushf
popl
jne
adc
outsl
shll
cwtl
stos
push
sbb
sbb
or
cmp
push
cmpsl
addr16
and
popa
lret
ret
or
in
and
int3
add
fimull
testb
mul
stos
pop
xor
mov
aam
aad
js
cld
fldenv
cmc
adc
lcall
cmp
sahf
or
dec
xchg
pop
lcall
jl
scas
les
cmpsl
mov
and
cmp
repz
rcl
mov
jb
mov
lds
lahf
xchg
je
jae
test
cli
add
sbb
lret
xchg
mov
movsb
mov
cmpsl
test
imull
cs
cli
dec
xor
sbb
lcall
mov
sub
sahf
push
les
sbb
enter
push
stos
icebp
scas
adc
arpl
sub
or
dec
ret
push
nop
xchg
xor
inc
xchg
mov
stos
jbe
int3
push
jge
cli
hlt
pop
out
ret
pop
sbb
dec
cmpsl
xchg
jmp
mov
mov
iret
testl
imul
ret
pop
xchg
jae
mov
mov
lcall
adc
push
or
sbb
out
jns
jmp
xchg
adc
and
jne
adc
or
fcmovb
movsb
jmp
mov
mov
jp
ja
add
xor
jle
int3
jg
sbb
inc
lods
or
xor
rcl
ret
xchg
mov
mov
sahf
dec
sbb
jp
adc
and
xchg
xor
pop
out
cmp
and
lahf
or
in
adc
inc
mov
stos
adc
subb
add
cli
cwtl
inc
aad
aas
push
xor
mov
sub
in
mov
add
mov
xchg
mov
addr16
cmpsl
push
cmp
jg
xchg
ret
add
hlt
fbld
iret
or
jmp
mov
pop
mov
mov
inc
imul
test
movsb
addb
xchg
out
push
mov
sbb
enter
shrl
add
je
fs
mov
cmp
in
or
mov
mov
inc
imull
mov
or
aaa
dec
mov
stos
stos
lea
rep
add
je
je
mov
gs
and
push
jle
popf
xchg
sbb
jg
stos
adcl
test
dec
xor
ret
adc
adc
mov
mov
push
push
xchg
adc
repnz
or
out
sbb
les
xlat
push
push
sarb
ds
movsl
jnp
clc
dec
push
lahf
scas
and
mov
ds
sbb
mov
jecxz
dec
cmp
cwtl
cmpsl
jl
ja
xor
scas
nop
lret
les
aas
sbb
and
push
push
or
ja
dec
inc
out
out
mov
cmp
adc
mov
pop
shll
xor
jb
ss
sbb
xor
xor
jae
movsb
pop
pop
xchg
mov
cmpsb
lret
dec
sbb
cwtl
stos
xor
xor
mov
out
in
cmp
shll
adc
movsb
std
js
jp
gs
sbb
sub
adc
sbb
dec
addl
fwait
rorb
in
das
or
push
rorl
push
nop
lea
pop
mov
lds
adcb
adc
jbe
jb
imul
lcall
loop
sbb
outsb
mov
imul
gs
jg
popf
fistpll
into
dec
out
xchg
sbb
cmpl
fiaddl
test
fadds
orl
add
or
push
inc
lret
rorb
adc
pop
xchg
out
add
call
cmpb
cmp
loopne
mov
xor
roll
aas
popa
dec
xchg
cwtl
loopne
adc
jns
js
dec
jmp
pop
jge
es
cmc
enter
aas
dec
int3
mov
or
fidivl
movl
js
cmc
pop
movsb
pop
cmp
sti
sub
shl
arpl
jmp
repz
xchg
inc
xor
scas
mov
sbb
pop
lret
sbb
jmp
sbb
andl
xchg
sahf
fsubp
cmp
dec
push
xor
mov
or
arpl
inc
dec
out
cmpsb
mov
dec
stc
cltd
mov
or
mov
arpl
cltd
mov
cmpsb
mov
xchg
jnp
or
xor
fildl
xor
cmp
adcb
mov
xchg
je
xchg
in
inc
and
fsubl
cltd
push
cli
nop
jp
add
fildl
frstor
jmp
cmp
sarl
push
ret
fildl
adc
fwait
divl
leave
mov
stc
je
mov
imul
cmpsl
pop
jnp
jno
xor
das
sub
adc
dec
or
and
inc
cmp
jg
mov
inc
or
enter
ret
neg
sbb
or
movsb
stc
jg
aas
push
xchg
or
push
shlb
xor
sahf
cwtl
ljmp
test
or
into
and
lret
or
jae
cmpsl
pop
jmp
rcrl
adc
in
shr
mov
cmp
call
sub
xchg
adc
jb
and
in
mov
push
orl
fcompl
pop
pop
lret
shlb
mov
dec
insl
cmp
in
and
loop
dec
fs
aam
cmp
inc
xor
jp
cli
lahf
cmp
dec
ss
scas
xchg
and
sub
xor
inc
and
je
mov
adc
push
movsl
xor
mov
mov
xor
loop
scas
sbb
sti
insb
push
cli
popa
pop
mov
cld
cmp
out
dec
mov
dec
mov
cli
adc
adc
dec
mov
mov
push
mov
xchg
or
adc
dec
jns
subb
cmp
sahf
push
inc
and
and
je
negl
cmc
xor
pop
imul
iret
in
popa
push
adcl
jno
or
enter
push
cmpsb
mov
xor
xchg
pop
dec
ds
or
scas
popf
mov
lret
repnz
jbe
ja
dec
push
cli
dec
pop
or
mov
jb
xchg
inc
int3
cli
imulb
cmpsl
inc
mov
sub
lahf
ja
ds
aad
mov
pop
mov
inc
insl
fwait
pop
sub
fmull
inc
decl
inc
add
dec
add
cmpsl
enter
out
insl
call
cld
dec
ss
repz
ficompl
scas
movsl
test
fwait
sti
idivl
pusha
cmc
fwait
jle
test
lea
test
lret
or
ret
andb
lcall
js
push
dec
outsb
xlat
push
je
xchg
sub
mov
ss
dec
xchg
popa
sbb
mov
jmp
das
das
les
repnz
dec
mov
cld
imul
or
stos
jbe
insb
push
repnz
mov
shrb
or
dec
pop
cmp
xchg
adc
loopne
push
jmp
inc
dec
iret
aad
out
sub
lods
outsl
test
out
jle
push
mov
cmp
cmpsb
xor
jmp
xor
and
xchg
pop
jmp
aas
cmc
push
and
adc
aaa
mov
je
lods
mov
scas
ret
lret
and
adc
test
out
dec
rorl
idivb
mov
pop
stos
sahf
inc
jmp
notb
je
dec
sti
int3
xchg
mov
xchg
and
jmp
or
jno
adc
xchg
or
mov
sub
ja
xlat
shl
mov
and
insl
lea
clc
sbb
xchg
dec
pushl
mov
cmp
ret
outsl
xor
dec
jae
push
outsl
inc
pop
ja
dec
mov
ret
mov
mov
mov
xchg
inc
int3
cmp
jno
adc
cltd
xor
loop
sub
inc
or
dec
mov
scas
dec
pop
or
mov
mov
fwait
cmp
xchg
cli
mov
daa
clc
sbb
mov
andb
mov
aad
sbb
or
mov
mov
cli
cmpsb
sahf
pop
nop
clc
pop
mov
enter
notl
aas
pop
or
sub
add
das
pusha
movsb
ret
dec
or
jmp
popf
xchg
inc
xchg
imul
into
xchg
js
mov
mov
mov
shlb
scas
xor
xchg
bound
enter
adc
pushf
push
pop
cli
xchg
pushl
cmpsb
dec
mov
sbb
adc
aas
mov
or
lret
aam
and
inc
cmp
sahf
fcoml
xor
mov
sbb
cwtl
push
paddw
jb
xlat
cli
pop
add
or
imul
ror
fstps
call
or
dec
arpl
dec
pop
mov
mov
fwait
or
movsb
add
dec
xchg
push
cli
pushf
push
fmuls
in
fcompp
sbb
pop
jmp
or
and
pop
sahf
loop
dec
jge
mov
andb
add
or
mov
scas
sbb
pop
cmp
cmpsl
sub
lea
mov
rcrl
xlat
mov
cmp
xor
sbb
in
ja
inc
mov
mov
cmpsl
popa
aaa
mov
jge
test
ds
das
das
fbstp
hlt
sub
sbb
loop
adc
test
mov
lcall
repnz
pop
aad
dec
jge
jae
scas
xlat
imulb
cmpsl
inc
scas
mov
sbb
add
pop
adc
sub
sub
jnp
mov
orl
sub
pop
mov
dec
je
dec
sub
movsb
push
mov
jl
insb
cmp
sbb
dec
leave
pop
in
dec
fxch
stc
jne
xchg
and
ds
aas
lret
push
popf
fwait
mov
lods
aas
cltd
dec
nop
movb
cmpsl
cmp
jmp
pop
je
je
shrl
mov
popf
in
cmp
and
pop
mov
imulb
gs
adc
mov
push
imul
fidivs
arpl
jae
pop
mov
jle
fcmovnu
sahf
cmp
notb
pusha
push
sub
ret
cmc
xor
lods
mov
nop
jne
outsb
sub
or
imul
insl
ds
dec
mov
jmp
fistl
scas
icebp
test
xor
jno
loopne
inc
fstpl
out
xchg
dec
inc
movsb
lcall
or
pop
fdivs
dec
test
dec
sahf
cmp
fmuls
dec
enter
adc
xor
sub
jp
cmp
stos
rorl
pop
push
lret
cmp
mov
push
xor
or
push
inc
mov
sub
and
arpl
inc
jmp
scas
nop
jecxz
mov
and
sbb
pop
testb
cmpsl
dec
lret
aad
flds
cmp
mov
jl
js
pop
roll
dec
dec
stc
xchg
dec
gs
push
cmp
ja
or
xor
mov
sbbl
mov
pushf
out
lahf
sbb
insb
mov
insl
or
jnp
divl
mov
fs
mov
lret
imul
mov
aad
cli
sub
xchg
pop
add
int
insl
sub
pop
mov
mov
sahf
divl
aad
aas
aas
mov
mov
sub
popf
xchg
jmp
bound
mov
push
or
jb
cmp
inc
push
sub
add
enter
pop
inc
xchg
movsb
jae
loopne
adc
xor
xchg
and
dec
xor
pop
push
shl
fsts
imul
add
icebp
mov
fwait
or
mov
sub
popa
lods
cmpsb
dec
sbbl
out
jae
jne
or
jmp
push
leave
dec
outsl
xchg
clc
outsb
sub
pop
and
or
sub
cmp
cmp
adc
push
sub
push
or
cwtl
rcl
cmc
add
dec
push
pop
xchg
fisttps
fucomi
sub
adc
sub
xchg
mov
push
jne
iret
or
daa
test
sub
rol
out
inc
pop
jns
mov
dec
and
fnstsw
jb
and
jns
cwtl
dec
out
push
fistl
mov
popa
or
inc
ficoml
or
inc
adc
mov
push
xor
mulb
mov
cmp
cli
pop
lods
aad
imul
sarl
jp
jmp
outsb
pop
or
xlat
xchg
xchg
mov
mov
sbb
or
movb
adc
cs
jp
mov
add
stos
ret
insl
xor
stc
stos
loope
aas
push
std
or
sarl
add
push
dec
sub
mov
mov
dec
data16
imul
xchg
pop
ffreep
xchg
lret
sbb
jb
push
jnp
add
inc
popf
mov
and
push
dec
or
push
aad
dec
mov
lcall
fmul
das
sahf
fdivs
or
leave
or
stc
mov
sub
scas
aaa
jnp
aas
add
add
mov
fisttpl
sub
pop
scas
ds
cwtl
or
rcl
pop
mov
scas
stos
js
and
incl
xorb
fisttps
lahf
jmp
adc
in
je
push
mov
xchg
xor
ret
pop
mov
or
push
in
pop
fsubl
test
xor
add
sbb
adc
sbb
fcmove
cli
loop
and
test
or
movsb
aas
pop
pushf
xchg
nop
mulb
mov
or
cmp
pop
call
fcom
popa
aad
sbb
push
loop
jg
shl
jg
cli
jne
movsl
mov
loopne
sub
cmc
mov
or
push
pop
dec
dec
jb
xor
xlat
mov
lods
lods
sub
decl
pop
arpl
test
pop
xchg
xor
fwait
pop
mov
or
je
and
xor
dec
repz
xor
orb
adc
xlat
jle
xchg
sub
xlat
stos
cmp
lahf
xchg
cmp
sbb
push
mov
mov
mov
cmpsb
cli
cltd
mov
cld
loope
or
loop
fcom
dec
inc
mov
out
ret
jae
insl
xlat
pop
lds
adc
inc
mov
sub
movq
push
sahf
sti
lret
or
mov
cmpsl
loop
mov
out
dec
gs
stc
sahf
mov
in
adc
hlt
sbb
jecxz
leave
jae
repz
int3
and
xchg
add
sub
cmp
loopne
dec
loope
std
das
mov
fiaddl
repnz
and
stos
cmp
dec
shlb
or
jl
or
aaa
lret
sub
xor
outsl
pop
push
mov
lds
mov
fwait
ret
mov
mov
in
andb
sbb
cmpsb
xor
rcrl
lds
sar
dec
jl
cmp
add
sbb
add
cmp
jl
lcall
cld
and
cld
xchg
pop
in
adc
in
cmpb
mov
leave
or
test
mov
lds
fstpt
loop
lret
cmp
outsb
sub
orb
mov
hlt
jno
or
adc
mov
mov
and
mov
dec
mov
xchg
push
fwait
dec
sarl
inc
inc
push
lea
addr16
mov
sub
out
popa
jp
xor
jecxz
popf
stos
aas
inc
xchg
inc
mov
mov
xchg
out
inc
hlt
or
adc
rcr
mov
shrl
sub
lret
cmpsl
popf
int
push
mov
shrl
test
push
lret
sub
jmp
movsl
dec
and
adc
or
dec
shll
je
sbb
adc
pop
pop
push
das
xchg
push
sbb
add
sbb
or
xlat
pop
pshufw
out
sahf
nop
stos
mov
xlat
mov
rolw
test
cmp
pushf
xor
push
mov
addr16
cmp
dec
inc
andl
pop
ret
or
loope
dec
ds
imul
inc
ret
sub
jno
test
inc
fwait
in
dec
jl
addb
cmp
sti
icebp
mov
popa
je
lods
inc
aas
orb
out
jae
in
jmp
popf
xor
xorl
cli
cwtl
orb
test
xor
inc
push
or
aaa
xchg
adc
push
lds
sti
insb
sbb
jmp
jnp
dec
push
stos
out
adc
mov
in
test
sar
or
inc
loop
clc
or
xor
mov
bnd
inc
jle
sbb
cmpsl
fstpl
sti
dec
sub
ds
insl
jno
bound
add
push
lcall
cmpb
lods
rol
loope
pop
loop
cmp
pop
jns
cmc
xor
jg
and
in
xor
xchg
mov
xor
popa
adc
sbb
and
lock
xor
mov
or
lahf
lahf
mov
ds
leave
pop
iret
or
outsb
mov
or
outsl
jne
jae
adc
mov
mov
jns
ret
repz
cmpsb
imulb
decl
add
jmp
xor
jb
or
or
sbb
aam
sbb
dec
or
jno
subb
pop
aad
cmp
arpl
mov
cs
inc
repz
or
rorl
sub
mov
or
ja
out
dec
jp
sbb
adc
aas
fwait
and
mov
scas
cmp
out
sahf
out
jg
sar
icebp
jmp
pop
cld
dec
sbbb
xor
mov
loop
mov
mov
aad
cs
popf
sbb
shlb
xchg
add
jbe
sti
mov
jnp
ss
shll
push
pop
test
push
ror
mov
jmp
mov
imull
push
inc
xchg
arpl
jno
lret
mov
aas
dec
daa
out
lock
movsl
or
push
sub
fs
cli
or
xchg
sbb
xor
cmp
add
enter
and
ret
sahf
pop
sbb
pop
mov
js
pop
lahf
sbb
sbb
call
sbb
inc
in
js
add
pop
fisttpl
mov
pop
inc
lret
sarb
out
aas
xchg
repnz
push
or
jg
push
arpl
push
push
and
push
xchg
add
rcrl
sbb
repz
or
xchg
or
jbe
dec
cwtl
or
mov
mov
shrl
loope
outsl
or
cs
gs
js
push
inc
test
dec
cltd
into
pop
ret
popf
repnz
in
jno
aad
mov
and
lret
inc
sbb
out
leave
cmp
cwtl
push
push
sbb
les
loopne
xor
ret
mov
dec
loopne
pop
dec
outsl
cs
stos
sub
jo
xor
lret
in
outsl
lcall
push
cmp
popa
pop
rol
outsl
test
jno
lahf
clc
cmp
clc
or
je
xchg
add
or
jbe
es
jle
cli
push
xchg
icebp
bound
aam
push
aam
jmp
jmp
inc
xchg
lret
or
pop
sbbl
dec
push
mov
inc
xchg
imul
push
bound
push
jmp
int
and
in
xor
push
ja
xor
je
dec
ljmp
iret
or
fcomps
shlb
jge
xchg
loop
xor
fwait
adc
in
cmp
xor
adc
mov
and
rorl
mov
cmpsb
push
jl
ffreep
rcr
xchg
sbb
sahf
std
lods
push
iret
leave
mov
test
cmp
mov
inc
mov
faddl
lahf
xor
arpl
sbb
xchg
dec
inc
inc
pop
push
mov
enter
stos
pusha
push
mov
jl
or
cmp
jae
jge
cmc
pop
mov
dec
and
mov
je
fildll
add
cmp
ret
or
addr16
lock
or
shlb
jge
push
mov
or
or
or
jp
or
cmpsl
mov
dec
push
mov
dec
lock
aad
clc
jmp
fwait
mov
push
es
cmp
dec
xor
lret
fisttpl
push
in
dec
aas
dec
push
xor
std
jo
jbe
lret
fwait
xchg
outsl
dec
or
mov
add
cmpsb
filds
outsb
stc
cmp
nop
or
pop
maskmovq
pop
xchg
pop
loop
jo
jb
sbb
or
outsl
mov
adc
jae
insl
fwait
data16
addr16
test
aad
jle
or
sub
std
ds
fucomip
popf
fisttpl
mov
xchg
jb
sub
push
pop
negl
jae
icebp
dec
sahf
lods
jmp
mov
cmp
adcl
xor
and
pushf
addb
imul
sbb
cmp
and
push
jmp
mov
inc
mov
andl
in
fdivl
mov
addr16
pop
test
dec
cmp
je
sbb
mov
sub
jmp
mov
aad
rol
subl
push
mov
sub
xchg
rcll
inc
jnp
inc
jle
cmp
push
pushf
inc
jmp
mov
add
insl
cli
inc
sbb
addps
mov
fsub
setne
orl
pusha
xor
or
xchg
js
sbb
dec
scas
imul
aad
adc
xchg
and
sub
repnz
pop
mov
jp
hlt
fsubr
lret
in
lcall
cs
rol
clc
je
push
repz
stos
inc
jb
sub
testl
add
adc
fdivs
inc
pusha
push
xor
sbb
pop
lahf
out
hlt
adc
xchg
jmp
stos
addr16
in
rolb
sbb
push
in
xchg
popa
dec
adcb
addb
sahf
pop
mov
jo
dec
mov
pop
xlat
cmpsb
loop
adc
cmc
aam
fcoms
cli
or
fldenv
lcall
in
sbb
jecxz
and
repnz
lahf
cltd
cmp
xlat
sbb
pop
sahf
xor
mov
in
stc
or
test
call
scas
or
jbe
or
cmp
jp
push
enter
mov
and
imul
fimull
sbb
psubsb
loope
stos
lods
je,pt
adc
ret
lret
or
jge
push
sbb
pushf
push
pop
lret
ja
into
mov
xor
outsb
ss
cmp
xchg
sub
clc
mov
je
pop
stos
rclb
xor
pop
test
je
adc
xchg
lret
dec
std
cmp
and
xor
sub
xor
nop
int3
sti
push
jg
in
test
rcrl
popf
xchg
and
fmull
nop
or
xor
pusha
push
adc
cmp
cmc
add
and
cmp
or
dec
inc
mov
int3
lcall
dec
xor
cs
je
push
cmp
push
jle
mov
fildl
xor
lcall
idivl
mov
xchg
js
ficompl
mov
leave
das
fwait
stc
sarl
cltd
xor
lahf
cmp
into
pop
cmp
fxch
data16
ret
int
jno
loope
cmp
std
jge
movsb
jmp
cmpsl
or
insb
mull
test
xor
sbb
mov
icebp
jecxz
mov
out
mov
negl
sbb
lahf
sbb
repz
add
test
cmp
shrl
test
cltd
jno
cmp
cwtl
mov
dec
cld
cli
fimuls
iret
xor
adc
filds
out
ds
xor
int3
xchg
lret
sti
cmpsl
lret
out
incb
dec
ret
or
inc
and
and
pop
push
stc
sahf
cmpsb
mov
in
in
inc
andb
ret
arpl
stos
xchg
lahf
sbb
hlt
cmp
or
movsl
dec
movsb
ds
lret
rcrl
sbb
jecxz
mov
mov
and
mov
shl
lods
andb
call
enter
cmp
push
or
outsb
pop
jmp
int
inc
enter
movsb
arpl
mov
pusha
dec
and
iret
shl
leave
clc
sbb
sub
stos
mov
pop
leave
sub
std
test
lret
in
mov
enter
cmpsl
divl
mov
inc
sahf
pop
out
adc
jae
imul
jno
cwtl
mov
gs
pop
sbb
jecxz
ret
sub
jl
push
and
add
and
mov
inc
dec
dec
shrl
sub
mov
xchg
pop
pop
sbb
repnz
mov
scas
push
dec
sub
shlb
iret
dec
or
jno
dec
jmp
orb
test
cmp
adc
cmp
xor
lret
add
and
adc
adc
xor
mov
rorl
fldenv
rcl
cwtl
pop
mov
rorb
mov
jmp
pushfw
into
ss
repnz
dec
push
into
jecxz
int
aad
sbb
repz
sub
pop
push
cmp
in
push
mov
jl
or
adc
add
sub
mov
and
adc
sbb
bswap
movsl
or
dec
jle
add
scas
ss
jne
cmp
clc
push
addl
mov
mov
jb
xor
rcl
mov
push
inc
and
test
adc
imul
rorb
sub
shll
cmp
out
rcrb
dec
lahf
xlat
jmp
or
inc
mov
push
lahf
fwait
pop
xor
or
pop
lods
or
push
dec
xor
sbb
shrb
mov
sbbb
lea
jecxz
test
sahf
sti
jo
cli
jae
xchg
int
xor
ljmp
mov
cmp
and
in
or
roll
or
mov
or
lret
xchg
arpl
mov
nop
push
test
xor
cmp
test
out
jo,pt
dec
call
dec
xchg
test
dec
testb
fsts
mov
jae
es
jb
inc
in
mov
outsl
aad
cmp
es
cmp
inc
ds
adc
mov
leave
lock
or
mov
call
inc
dec
cld
in
dec
or
lcall
rolb
fldenv
decb
inc
sahf
les
scas
into
xor
pop
mov
fbld
mov
adc
andb
sahf
and
xor
popa
xor
sub
outsl
mov
imul
shrl
sbb
mov
xor
adc
xchg
pushf
lds
cmp
popf
movsl
inc
add
xor
mov
popa
cmp
dec
cmc
jmp
mov
cmp
adc
and
xor
dec
ss
mull
mov
incl
fxch
jmp
cmp
test
mov
sahf
or
inc
mov
lret
xchg
inc
int3
gs
sbb
out
dec
pop
ds
adc
xchg
loope
lock
sbb
xchg
imul
push
mov
xor
clc
rcrl
enter
nop
dec
testl
mov
cs
fidivl
aad
shll
mov
jmp
push
push
cli
or
cmp
push
call
xorb
ret
mov
lret
mov
adc
popf
jmp
sub
stc
orb
jae
xor
mov
pop
xchg
icebp
mov
lcall
xor
adc
push
cmc
xchg
into
mov
and
testb
push
dec
aas
dec
ljmp
xchg
shll
inc
pushl
cmp
or
out
or
mov
lahf
ds
loopne
cmp
iret
mov
xor
pop
sbb
xor
dec
and
or
cmp
aad
dec
push
and
push
or
mov
mov
mov
les
cltd
jb
or
add
cmp
testb
push
sbb
adc
pop
push
out
push
mov
aas
fldpi
xchg
mov
std
or
pop
in
pop
jo
inc
or
imulb
push
mov
mov
bound
or
stos
jge
pop
ja
cmp
ss
or
lahf
mov
jp
sbb
insb
cmp
and
es
dec
int
xchg
pop
inc
push
pop
dec
push
fwait
jge
out
ret
xchg
in
xchg
mov
je
cli
fldenv
out
lds
cltd
xchg
gs
xlat
les
xchg
dec
and
mov
dec
lods
cli
sbb
fstl
in
mov
push
jbe
mov
orl
inc
lahf
movsb
lods
or
leave
xchg
xor
xlat
test
sub
and
jecxz
fwait
shr
dec
stos
and
dec
cwtl
add
jb
cmp
out
add
lahf
jmp
jnp
bound
and
scas
jno
or
jnp
xlat
inc
mov
das
dec
pop
adc
cmp
push
ljmp
cli
cmp
fdivp
push
or
and
dec
pusha
push
pop
pop
mov
xchg
jp
nop
push
or
pop
adc
movsl
cmp
or
adc
and
mov
or
and
jnp
outsl
cmpl
jbe
rcll
subb
pushf
inc
add
outsl
sbb
fwait
imul
cmp
and
xor
adc
outsb
xchg
dec
mul
mov
inc
or
or
and
lods
subl
mov
mov
xor
cmp
mov
pushf
outsl
dec
sbb
mov
daa
sub
mov
or
or
lahf
cmp
sbb
lret
mov
push
ret
lcall
test
cli
out
enter
dec
js
adc
jp
add
add
nop
inc
lds
dec
outsl
xor
sbb
std
jo
stc
jmp
xor
jns
or
cmp
cli
lahf
out
lret
rolb
cmp
jge
mov
ljmp
dec
push
movsl
jae
jo
lahf
jle
and
or
cmp
lcall
lret
pushf
xor
flds
cli
jl
or
int
mov
loope
xor
arpl
jb
or
push
jo
loop
test
aam
popa
dec
or
out
pushf
adc
stos
xor
xor
addr16
adc
ret
xrelease
sti
into
jae
mov
push
xor
pop
xor
add
loop
mov
lret
mov
lcall
or
or
or
pop
pop
jno
loopne
dec
mov
loop
or
sub
dec
mov
sub
and
fdiv
push
mov
or
vmread
imul
enter
pop
add
outsb
test
shrb
mov
fisttps
mov
pop
mov
jo
jae
jmp
dec
addb
mov
push
lods
ja
test
mov
xchg
or
mov
push
lret
aas
inc
dec
or
mov
or
pop
or
dec
jge
psubusb
push
cli
add
inc
ret
push
mov
bound
and
leave
jmp
pop
or
adc
dec
jne
cli
jge
xor
into
scas
or
push
push
out
arpl
pop
mov
je
imul
mov
loop
add
xor
xor
mov
ror
inc
insl
in
stc
dec
or
mov
push
mov
add
and
xchg
pop
add
stc
or
mov
js
adc
push
pop
movl
or
pushf
jmp
les
xchg
adc
fldenv
aas
nop
mov
fstps
cmp
cmp
fwait
sbb
add
out
decb
out
adc
jle
mov
push
and
jl
dec
scas
mov
jmp
lods
lahf
sbbl
mov
and
stos
repz
and
lock
mov
outsb
lcall
jo
jnp
xlat
inc
in
cwtl
call
ds
push
mov
leave
leave
jle
je
rcrl
dec
sub
xchg
call
and
mov
aaa
add
pushf
cli
push
call
or
dec
cmp
or
mov
inc
pop
stc
cld
sbb
shl
jp
cmp
mov
and
sbb
or
notl
and
sti
xor
or
loop
int3
stos
arpl
jne,pn
stc
jae
lea
xchg
fldcw
test
jp
addr16
cmp
fsubrl
in
xchg
dec
xor
mov
test
repnz
mov
or
pop
mov
or
pusha
fisttps
rcll
mov
imul
inc
icebp
push
out
in
add
dec
loopne
ds
cmp
xchg
mov
xor
orl
leave
imul
add
ficoml
rcrl
popa
sbb
dec
push
pop
mov
mov
jle
xchg
addr16
fs
or
xchg
jmp
lret
insb
popa
fwait
ss
or
pop
jle
mov
jecxz
jne
lcall
cld
outsl
shl
pop
sbb
int
and
cmp
dec
popa
or
xor
or
or
out
and
sarl
pushf
or
pop
and
fwait
clc
inc
or
nop
ficomps
inc
std
dec
cli
cmp
inc
sub
pop
aaa
xlat
and
pop
hlt
xor
xor
enter
pop
xor
sbb
xchg
and
and
ret
ljmp
xchg
pop
push
add
dec
lcall
sub
call
jecxz
dec
pop
cli
mov
xor
lds
inc
sbb
stos
les
pop
call
mov
lret
movsb
popa
out
loopne
inc
xchg
in
and
xor
cmp
or
dec
into
clc
mov
in
adc
ljmp
mov
jl
jnp
std
mov
push
shrb
add
mov
cmpsl
popf
xlat
sbbb
dec
mov
outsb
mov
cmp
cmp
out
dec
popf
jmp
xor
mov
roll
divb
mov
push
dec
or
arpl
mov
lret
shlb
dec
orb
jns
mov
pop
xchg
xor
and
out
jo
sbb
pop
inc
add
adc
mov
pop
aam
and
mov
and
stc
mov
sub
cs
inc
daa
pop
je
xor
repnz
sarl
pop
loope
mov
cmp
mov
pop
pop
xlat
mov
mov
sub
pop
xor
out
cltd
pop
int3
sub
lods
sub
cmpb
push
jmp
mov
jns
jae
xchg
int3
sbb
popa
xchg
xchg
and
xchg
js
out
rorl
cli
sar
or
lods
cmpsl
lret
jl
aas
mov
sub
dec
jmp
cmp
aad
push
xor
shl
mov
or
and
mov
dec
sbb
pop
mov
dec
lret
xchg
push
nop
clc
mov
xor
sub
mov
outsl
sahf
repnz
mov
rorl
ljmp
mov
sbb
es
cld
inc
sbb
or
xlat
xchg
fisubrs
dec
les
cmpl
push
fldenv
jnp
xor
aas
subb
xor
dec
rorb
and
mov
xchg
sbb
arpl
fwait
popf
lret
xchg
sbb
cmp
cmc
and
or
adc
test
sbb
dec
xchg
hlt
dec
xchg
cli
mov
test
dec
xchg
pop
cmp
mov
cmp
inc
insl
repnz
nop
push
in
push
out
sub
xor
leave
stc
cmp
jecxz
jecxz
dec
push
xlat
popf
adc
mov
inc
data16
sbb
pushf
mov
je
and
decb
jle
mov
inc
sar
mov
pop
push
or
js
pop
add
fnstcw
repz
std
mov
and
or
dec
adc
outsb
in
aam
insb
cmp
call
xlat
mov
dec
sti
add
jo
mov
aaa
int3
int
fmull
jle
shll
xchg
rcll
in
loopne
les
flds
insb
scas
cmp
mov
test
imul
mov
ss
pop
and
out
cli
push
fisttpll
sahf
push
jb
sub
ljmp
jbe
pop
ljmp
or
xchg
pop
out
fisubs
mov
add
jmp
aas
lcall
adc
push
xor
push
test
ja
adc
adc
pop
mov
outsl
or
xchg
sub
mov
sti
dec
and
stc
jae
gs
std
and
jno
sti
pop
jmp
out
cmc
dec
or
adc
shlb
bound
fcmovnu
sbb
xchg
sbb
cli
push
inc
inc
pop
and
push
ss
ret
testb
cmc
inc
in
cmp
cmpsl
das
inc
mov
jmp
mov
popa
iret
mov
js
dec
cmp
pusha
inc
ds
mov
fistpll
or
mov
or
jb
cs
stc
mov
mov
lods
mov
pop
stos
adc
add
dec
leave
out
pop
mov
data16
fnstcw
shll
idiv
les
lods
pushf
push
cltd
dec
push
movsb
das
sbb
test
jbe
mov
xor
dec
dec
bound
pop
cmp
sub
jmp
push
sub
cli
adc
repz
mov
mov
push
jnp
or
popa
ss
sahf
mov
fcoms
andb
cmp
rol
mov
lcall
bound
lret
push
loop
test
mov
push
push
or
loope
push
or
aas
andl
or
mov
bound
lret
inc
stc
dec
cli
dec
mov
roll
ret
mov
sub
iret
xchg
mov
xlat
cmpsl
stos
or
xchg
or
jno
jg
or
cli
xchg
in
shl
test
adc
pop
or
pop
push
cmp
xchg
sub
or
lods
loope
pop
leave
inc
jp
or
stos
leave
mov
imulb
lahf
mov
xor
xor
out
loop
loop
int3
sarl
jmp
lds
lock
xchg
xchg
jecxz
out
push
leave
sbb
outsl
dec
xchg
jmp
stos
movsb
and
scas
ja
notb
push
fstpt
cmp
into
ss
lret
xor
sbb
pop
out
iret
iret
add
or
or
ret
mov
gs
jmp
mov
dec
xor
inc
xor
adc
and
dec
loop
dec
mov
or
pop
fwait
arpl
out
or
push
and
outsl
cmpsw
sbb
rol
xor
insl
jae
fmul
mov
cs
xchg
test
mov
aaa
lret
jl
adc
sub
cmpsb
sub
test
pop
push
or
cltd
jp
mov
into
cli
pop
sub
mov
lcall
out
xor
mov
dec
mov
sbb
mov
cmp
mov
sahf
or
sbb
or
add
mov
sbb
lock
and
mov
adc
mov
push
xor
clc
adc
pop
mov
and
fadd
lret
leave
dec
add
lcall
inc
stos
cmpsl
mull
adc
mov
xor
ret
adc
in
inc
in
sub
bound
add
fidivrs
sahf
or
mov
repz
and
mov
or
loop
push
push
xchg
inc
lock
jne
in
das
stos
out
clc
inc
in
cld
pop
bnd
jne
fcoml
dec
movsb
add
mov
lods
jo
mov
fnsave
enter
pop
or
mov
stos
xchg
and
jecxz
adc
cmpsb
xor
lret
inc
jne
stos
inc
out
lods
movsb
or
pop
int3
adc
cmp
and
fdivr
xchg
test
test
xchg
test
dec
cmpsl
jmp
insl
mov
pop
push
xchg
es
sahf
or
fsubr
addr16
xchg
lret
inc
ret
jno
sbb
loopne
je
pushfw
fst
cli
jae
or
lds
inc
adc
jo
fwait
scas
and
pop
mov
cmp
mov
add
and
jge
aad
add
dec
pop
adc
mov
xchg
dec
pop
iret
xor
testl
push
subl
dec
loopne
sahf
arpl
cmc
pop
dec
push
pop
pop
ret
icebp
adcb
bound
inc
aaa
cmpl
in
or
inc
clc
adc
testl
in
cmp
popa
cmc
pop
cwtl
jg
sbb
insb
leave
mov
sbb
sbb
xor
adc
pusha
mov
inc
cmp
shlb
pop
aas
push
mov
in
jae
pop
stos
sub
fdivr
and
mov
jnp
mov
icebp
xor
roll
pop
xchg
scas
xlat
lds
mov
sub
dec
sub
push
push
or
xchg
movhps
add
push
sbb
cld
sbb
movsl
add
mov
mov
adc
imul
or
dec
je
mov
xor
sbb
xchg
aaa
notl
popa
lahf
loop
inc
and
stc
std
ret
out
and
xor
aas
jmp
insb
and
insl
push
inc
jmp
movsb
das
ret
mov
ss
mov
loop
mov
cmp
dec
add
sub
cmp
or
sub
test
lods
lret
ret
or
mov
and
in
mov
xor
jnp
or
mov
add
and
int
dec
jo
shrl
sub
sub
sub
insl
mov
cwtl
lods
mov
cmp
mov
cmp
xlat
dec
jmp
xchg
ret
push
lret
mov
lcall
ss
fucomp
lret
and
jb
mov
aaa
xchg
xchg
sti
ss
nop
push
out
test
push
leave
bound
gs
mov
push
or
addr16
loop
fs
cmp
mov
adc
jg
lret
dec
aad
mov
cmp
ja
stc
dec
cmpsb
cmp
dec
inc
sub
addr16
and
je
mov
cmp
cmp
lea
push
nop
jb
inc
xchg
test
cmp
leave
or
adc
setbe
pop
push
outsb
sbb
dec
xchg
jle
movsb
jmp
loope
lret
loop
out
insb
or
test
lds
pop
jecxz
popf
jae
or
dec
adc
fnstsw
add
cs
cmp
lcall
movsb
sub
js
or
xchg
popa
cmpb
mov
in
leave
pop
xchg
repnz
fstl
out
sbb
add
iret
add
aam
cmp
cmp
xor
das
sbbb
cmp
or
or
es
dec
sub
sbb
jbe
inc
incl
lcall
pop
xchg
and
or
into
jecxz
jae
jo
into
pop
pop
shl
jg
mov
sbb
mov
dec
pushf
lahf
sub
imul
mov
fs
jmp
fcomp
sbb
cmp
jne
adcb
repnz
jle
mov
out
sbb
push
xor
nop
add
int
nop
aad
ret
les
clc
pop
jb
test
inc
or
sbb
test
in
jmp
mov
cltd
mov
push
or
into
mov
jo
jecxz
std
mov
push
add
sbb
les
rcrb
and
int
imul
lahf
pop
mov
scas
push
ret
xor
jnp
xchg
mov
mov
or
bound
gs
imul
ret
lcall
pop
into
cmpsb
std
add
rorl
or
std
cmpsb
lcall
dec
add
xchg
or
cmp
mov
je
sbbb
xlat
imul
and
cmpl
xor
adc
and
out
sbb
or
pop
push
and
aas
nop
lret
jmp
leave
sbb
or
jo
jns
mov
lret
ja
ficoml
sahf
xor
in
or
rclb
jle
icebp
jmp
jae
mov
pop
repz
xchg
cmc
or
sbb
xchg
lea
mov
shlb
rcll
pop
popa
into
adc
pop
ds
mov
dec
sub
fmuls
add
jecxz
aas
lret
jle
fnstcw
xchg
cli
or
out
push
std
mov
mov
test
dec
cli
pusha
or
jns
inc
pop
mov
sahf
dec
fstpl
out
xchg
int3
sbb
mov
addr16
xor
fwait
cmp
jnp
or
jp
lds
xchg
xor
pop
fildl
cmp
cld
bound
mov
les
cmp
mov
js
xor
negb
je
push
sbb
aaa
pop
cmp
orl
loop
xchg
pcmpgtw
cmp
cltd
sti
cli
add
push
sbb
and
es
cmp
test
sbb
aad
addr16
and
push
daa
lahf
mov
add
inc
sbb
xor
xchg
mov
adc
popf
sub
jo
mov
es
inc
jge
xchg
fstl
dec
insl
aad
pop
out
clc
pop
je
aam
adc
push
inc
dec
adc
lret
es
in
lret
pop
sbb
call
cmp
or
sahf
and
addr16
adc
ficompl
out
mov
cltd
inc
and
lret
mov
sub
lock
add
mov
mov
mov
xchg
dec
outsb
jmp
cmp
movb
test
fwait
aad
or
sbb
shrb
aam
dec
jne
push
add
mov
sub
aas
inc
push
in
jmp
mov
cmp
lods
cmp
and
ljmp
into
pushf
mov
inc
out
out
in
pop
test
gs
rorl
outsb
jbe
enter
mulb
pop
addb
aad
dec
in
jmp
dec
outsb
test
jle
cmc
aas
mov
inc
xchg
jmp
or
xchg
cmpsl
cmp
or
cli
mov
or
lret
data16
into
lahf
jae
clc
out
jbe
out
cltd
bound
xor
leave
popa
sub
sub
xchg
add
cmp
js
add
sub
pop
or
sbb
data16
mov
fsub
mov
mov
mov
or
cmp
cmpsl
mov
push
fdecstp
xor
cmp
not
inc
dec
test
xor
dec
add
lcall
in
je
mov
cltd
andl
fs
mov
test
adc
sbb
mov
push
xchg
or
es
bswap
xor
into
ja
push
xchg
cmp
xlat
push
push
and
sbb
test
mov
or
lea
lahf
into
rcr
mov
jg
sbb
enter
outsl
fcomip
pushf
sti
sub
inc
dec
jmp
into
and
xchg
sub
inc
mov
ret
add
int3
bound
addr16
xchg
bnd
into
or
inc
shrb
cli
jl
cmpsl
fsubrl
test
push
pushf
int
inc
cld
gs
push
mov
push
shrl
add
ret
or
mov
pusha
pushf
clc
insb
ret
or
sub
lcall
cmp
clc
jno
cld
rcrb
stc
xchg
adc
inc
insb
in
cmp
pop
dec
add
fimull
mov
lea
and
xchg
mov
inc
out
jecxz
enter
xor
mov
sbb
loope
sub
int
fmuls
xchg
jbe
loope
js
xchg
out
sarl
push
inc
jmp
and
and
push
or
pop
sbb
shrb
movsl
dec
cmpb
test
pushl
add
call
or
mulb
sbb
sahf
xlat
mov
xchg
adc
mov
out
mov
mov
and
add
or
insl
insl
cmp
mov
lea
lret
jle
pop
int3
adc
mov
gs
stos
mov
jnp
bound
pop
xor
push
cltd
in
fdivrl
xchg
inc
test
test
or
lcall
xchg
fdivrp
lea
aad
lcall
xor
fxch
mov
or
lret
mov
sbb
xchg
dec
lcall
inc
mov
lret
int3
jmp
dec
pop
push
std
or
inc
pop
lock
add
fs
ret
out
les
jno
loope
idivl
repnz
addb
test
or
xchg
jo
inc
pop
mov
ja
out
mov
rorl
and
add
imul
dec
pop
mov
rcll
pop
dec
dec
loop
je
push
pop
push
cmpsl
rorl
je
movsb
movsb
mov
dec
ret
jo
push
test
pop
dec
leave
ficomps
or
into
fcmovb
das
xor
imul
dec
inc
cmp
fsubl
cmpb
in
clc
sbb
daa
addb
lret
ss
iret
daa
in
mov
outsl
xor
mov
int
mov
movsl
add
mov
mov
dec
xchg
inc
shl
mov
sub
mov
dec
xchg
jb
dec
rol
sub
test
scas
jl
mov
jo
and
sub
divl
or
sahf
ret
add
test
adc
scas
lods
jmp
insb
test
lods
jnp
icebp
push
test
loopne
rclb
jne
fnstcw
lret
mov
fists
repz
mov
iret
pop
push
jmp
sahf
adc
cmp
iret
fisttps
and
add
sub
lahf
enter
outsb
cmp
pop
arpl
lahf
mov
scas
jmp
xchg
push
je
or
in
pop
sbb
mov
adc
adc
or
test
add
repnz
push
pushf
pushf
push
pop
in
and
adc
cli
pop
or
jmp
mov
mov
lods
mov
jnp
test
fwait
mov
mov
sbb
cmp
pushf
lea
dec
adc
sub
push
add
cltd
sub
lcall
jmp
nop
or
xorb
ds
adcb
adc
xchg
and
mov
xchg
fwait
cmp
xchg
mov
clc
jle
jne
push
push
mov
inc
idivl
or
xchg
mov
mov
aas
mov
ljmp
hlt
mov
cli
scas
shlb
pop
fcomp
push
lahf
dec
rolb
ss
jae
js
dec
sti
cmpsb
jne
roll
xlat
fwait
xor
sahf
stos
int3
in
dec
jmp
adc
pop
fildl
sub
or
jno
stos
lcall
push
sub
sub
or
add
sahf
ds
jp
add
fwait
jae
pushf
cli
xchg
out
std
mov
mov
iret
cmp
or
repnz
xor
push
jmp
fwait
adc
mov
or
lcall
pop
cmc
mov
leave
mov
aas
jmp
sub
sahf
jo
sbb
inc
or
inc
push
jge
enter
bound
into
and
loope
shll
popf
and
or
pop
sahf
push
push
xor
xchg
jmp
cmp
cli
arpl
int3
add
outsb
fisttps
jmpw
adc
add
rol
mov
sbb
cmp
or
cmpsb
icebp
pop
mov
mov
in
cmp
sub
jmp
xchg
aad
lahf
jmp
pop
push
dec
imul
insb
or
inc
cmc
or
jl
addr16
sbb
xchg
cld
aaa
divb
dec
and
inc
jae
cmpsb
sarb
jecxz
push
lcall
lret
ljmp
ret
adc
loope
mov
jg
stos
je
jbe
and
adc
sbb
and
cmpsb
shrl
movb
adc
fmull
rorb
dec
cli
and
je
xor
sti
scas
ud0
adc
mov
mov
push
loop
shrb
inc
stos
xchg
das
out
sub
ret
or
rcrb
jmp
jo
loopne
adc
roll
jge
je
rorl
or
and
imul
push
bt
and
out
clc
pop
inc
scas
mov
call
jp
mov
xchg
push
or
orl
sbb
mov
and
sarl
pop
hlt
lods
sbb
or
xchg
dec
mov
fsts
leave
push
mov
lods
adc
je
sub
and
adc
add
std
jne
sbb
adc
pop
mov
adc
xchg
or
sub
sub
nop
sub
dec
xor
or
pop
outsb
jmp
inc
push
dec
inc
add
and
cmpsl
push
mov
incb
gs
and
xchg
rorb
adc
mov
push
out
and
cs
cmp
jmp
push
aam
mov
xchg
idiv
ds
xor
daa
sahf
jo
cmp
cmp
lcall
mov
mov
push
jne
das
xchg
sbb
add
test
pusha
leave
mov
jle
jecxz
fsubs
das
mov
test
sbb
cmp
push
inc
add
inc
and
cld
cmp
test
xchg
dec
mov
mov
test
push
dec
or
mov
dec
and
mov
and
cmp
add
sub
test
mov
cmp
mov
repz
add
jle
cmp
pushl
sahf
pop
mov
out
dec
lahf
or
mov
push
inc
jmp
mov
arpl
push
repnz
xor
pushf
xlat
js
push
cli
xchg
and
lahf
xor
mov
dec
cwtl
adc
cs
in
lcall
stos
and
xor
out
sti
subl
fistpll
xchg
and
sti
mov
ljmp
testl
insb
xor
icebp
shr
adc
std
lret
sbb
jecxz
ds
nop
test
mov
scas
shll
lret
add
adc
sub
xor
stc
pop
jbe
mov
cmc
xchg
pop
jecxz
aaa
mov
xor
jae
aad
or
jmp
or
shrb
jp
fldt
xor
push
cmp
or
loope,pn
lahf
inc
mov
or
dec
sahf
cli
mov
mov
lock
out
jmp
subb
popf
push
mov
or
mov
mov
dec
ret
es
int3
cmp
cmpsl
adc
xchg
ret
dec
loop
out
dec
icebp
xchg
iret
jg
movsb
push
push
lret
popa
out
push
hlt
popf
cwtl
sbb
stc
mov
not
std
popa
add
rcrb
loope
stos
es
std
xchg
xor
push
sbb
jg
iret
arpl
adc
insl
jg
subb
lret
in
xor
xor
into
or
or
test
es
jne
xor
icebp
popa
xchg
and
out
jmp
mov
imul
mov
loop
xor
add
lahf
das
jmp
jmp
push
and
cmp
or
inc
adc
mov
push
dec
aam
push
sahf
sti
loope
push
push
leave
insb
fidivrl
jnp
iret
sub
cmp
pop
stos
fwait
or
sbb
pushl
sbb
add
xchg
sbb
adc
push
xchg
adc
outsb
push
aam
mov
and
push
sub
mov
out
iret
adc
dec
rcl
fisubrs
or
in
lahf
jp
sub
jno
dec
lock
add
mov
xchg
or
mov
xchg
inc
push
mov
cltd
aaa
pop
cmp
outsb
pop
int3
adcb
in
or
popa
or
orl
std
add
les
pop
adc
cmp
pop
ljmp
xor
cmpl
enter
enter
mov
fildll
cmp
ja
or
mov
out
xchg
stos
pop
cltd
and
sbb
mov
or
test
xor
sbb
mov
shl
mov
pop
xor
push
add
pop
add
push
aas
jp
sub
in
cld
loop
notl
cmp
mov
adcb
stos
adc
push
dec
andb
pop
cmp
add
out
adc
jmp
cmc
dec
stc
out
fisttpl
or
sbb
cli
dec
cmp
cmpl
xorb
push
dec
cmp
fwait
cmp
iret
and
scas
adc
scas
outsl
lods
lahf
xor
int
daa
or
sub
sarl
sub
push
inc
pop
cwtl
movsb
shrl
pop
or
outsl
xor
sbbl
sahf
jns
mov
fisttpll
jg
mov
or
fdivrs
push
stos
xlat
and
mov
test
dec
inc
fisubl
ds
cltd
stc
testl
or
sti
and
push
in
mov
cld
cmp
mov
bswap
or
icebp
inc
jp
mov
or
sub
leave
pop
mov
fldcw
sahf
loopne
in
in
cld
and
cli
add
rcrl
lret
sbb
lods
adc
adc
cmp
rorl
pop
add
test
dec
into
repnz
mov
jne
sarl
out
sahf
lret
scas
aas
shll
ret
add
ja
mov
jbe
push
mov
jp
mov
or
mov
jne
test
sbb
xchg
push
stos
pushf
xor
add
push
outsl
cmp
inc
inc
lds
movsl
ljmp
sub
test
dec
and
cltd
movzwl
lods
dec
and
cmp
movsb
mov
arpl
dec
fnstsw
dec
mov
and
out
xchg
jo
shl
cs
dec
divps
xchg
imul
les
setno
adc
fisttpll
orb
cmp
cli
test
shll
mov
or
mov
mov
nop
cmp
adc
dec
fnstcw
dec
or
cmp
adc
and
je
int3
pop
dec
insl
or
lret
subb
dec
sbb
pusha
sbb
xor
data16
roll
push
jns
or
int
mov
movsb
dec
sub
mov
sbb
mov
adc
inc
mov
pop
dec
mov
xlat
ret
jbe
add
dec
dec
cmp
push
jne
xchg
xor
idivl
loopne
stos
inc
cmp
inc
leave
xchg
mov
sub
ss
and
inc
or
fcmovb
or
cmp
cmp
fwait
jmp
nop
jp
testb
insl
daa
loopne
cmp
mov
and
loope
addr16
icebp
aad
mov
push
inc
insl
cmp
cli
mov
fadds
inc
adc
lahf
xor
lahf
sub
mov
pop
inc
aas
xchg
ljmp
xor
cmp
or
aam
adc
or
lahf
inc
push
xor
xchg
cmp
stc
repz
or
push
mov
push
nop
mov
and
mov
je
test
mov
xor
sbb
pop
add
push
das
subl
pop
out
pop
pop
fnstsw
rclb
jae
enter
push
loopne
outsl
xlat
gs
dec
inc
sub
mul
pop
add
inc
xorb
pushf
bound
or
and
push
xor
mov
sbb
mov
addr16
mov
dec
xor
or
add
xchg
jmp
mov
decl
movsb
add
jecxz
call
sbb
inc
fucom
push
mov
xor
xchg
loope
mov
das
inc
cmp
iret
mov
imul
out
mov
dec
out
dec
push
scas
ss
jp
aas
int3
cmc
movsb
rclb
add
inc
jns
fmulp
arpl
xchg
sub
popf
out
gs
push
pop
add
xor
loop
or
pop
xchg
scas
sbb
add
test
adc
inc
cmp
mov
or
icebp
mov
xlat
fnstsw
or
mov
jno
cld
fists
pop
and
cli
add
xchg
cmp
ret
cmp
js
lahf
cmp
xor
cld
insl
es
pushf
and
cmpsl
xor
enter
mov
aad
lcall
add
cmc
in
xor
popf
icebp
sahf
pop
mov
cmpl
mov
js
shrl
cmp
cmc
aad
pop
push
push
xor
hlt
rcrb
ja
mov
pop
arpl
push
rolb
shll
aad
pop
cmp
out
dec
jp
mov
dec
stos
aas
push
lea
popa
je
sub
cmp
ja
ficomps
movsl
dec
jmp
cmp
call
inc
cltd
add
leave
lret
xchg
pop
cmp
mov
jns
aaa
add
sahf
mov
pop
sbb
xor
fisubrs
inc
mov
and
cmp
dec
dec
mov
rcr
rorb
rorl
mov
push
mov
es
jns
nop
xor
les
push
mov
testb
test
xchg
cmp
rcr
insb
dec
das
imul
fsubr
jecxz
adc
stc
or
xor
mov
mov
out
lcall
int3
cmpsb
jno
push
jg
dec
xchg
movsb
out
cmp
and
inc
push
stc
jecxz
fistl
inc
mov
push
sbb
cmc
fimull
mov
mov
dec
jb
push
xor
inc
sub
xchg
aad
pop
add
rcrb
mov
pushf
xchg
fcmovb
inc
or
xchg
inc
cltd
xchg
inc
ret
fs
xchg
ret
aam
lahf
aad
mov
js
nop
mov
rorb
push
cltd
jl
add
clc
jmp
enter
dec
mov
jecxz
fwait
out
pop
xchg
xlat
mov
lret
pop
dec
jne
sbb
in
jb
daa
sbb
cmp
nop
mov
pop
adc
sbb
imul
xchg
xor
mov
xor
cmpsb
xlat
xchg
inc
jo
or
cmp
dec
fs
pusha
pushf
push
sbb
clc
cwtl
mov
jg
mov
mov
cli
push
and
mov
call
or
in
inc
popf
outsl
sub
mov
outsb
xor
repnz
mov
mov
push
xchg
push
loope
test
xchg
xchg
idivl
cbtw
or
dec
jmp
call
inc
rep
sahf
sub
jp
jle
add
nop
ret
xor
mov
or
add
push
and
inc
xor
lcall
dec
dec
cmp
sub
in
bound
mov
sub
mov
lahf
cmp
cmp
pop
bound
and
xchg
push
fisttpll
dec
int
rcrl
rcl
fiadds
cmp
cmp
cli
lret
cmovnp
xchg
adc
scas
roll
mov
or
lahf
enter
repz
jmp
lods
test
notb
outsb
stos
loopne
in
jbe
mov
cmp
out
pop
inc
call
in
adc
icebp
lods
jae
mov
inc
sub
mov
inc
jns
fistps
inc
fcompl
mov
push
js
or
pop
jae
inc
and
cmp
cli
jmp
stos
dec
or
fwait
or
xchg
out
insb
nop
aas
aad
and
mov
sar
mov
push
xchg
push
lret
fstpt
sarl
aam
cli
out
jbe
hlt
cmp
scas
jg
or
xchg
andb
bound
and
bound
jae
dec
add
jmp
mov
cmpsl
jmp
jo,pt
dec
mov
test
loop
lds
flds
cltd
clc
ret
and
adc
xor
repnz
dec
test
jl
mov
xor
popa
test
mov
cmp
sbb
cmp
pushf
mov
rcrb
or
mov
test
push
or
pop
sub
pop
pop
mov
xchg
leave
jae
pop
jbe
testl
stos
lods
outsl
test
inc
sti
pop
xor
pop
cmp
or
push
dec
fisubrl
cmc
in
stos
jnp
and
fistl
ret
int
adcl
xlat
mov
aam
and
into
xchg
cmp
mov
xchg
sbb
bswap
adc
add
push
push
push
push
addr16
frndint
add
jae
test
dec
or
jns
mov
and
push
jae
sbb
and
inc
jns
sub
sbb
fwait
or
mov
mov
es
int3
icebp
rolb
sbb
fmul
xlat
icebp
sbb
es
adc
mov
push
xor
out
outsb
arpl
inc
leave
cwtl
pushf
sub
push
js
jecxz
ret
in
jbe
loope
dec
fnsave
cmp
sbb
sbb
push
jne
fisubrs
jmp
and
out
insl
fsubrp
cmpsl
loop
je
push
int3
and
mov
fcoml
dec
lock
in
pushf
aam
jae
or
cltd
insl
or
push
inc
or
jno
jo
adc
dec
dec
mov
cmp
and
push
jecxz
adc
jge
mov
mov
iret
sub
sarl
lea
lods
dec
xor
cmp
lahf
add
fwait
cmp
in
ss
and
loop
inc
xor
lods
dec
add
xor
out
addr16
cwtl
sub
scas
fstpl
or
jp
xor
xchg
push
sbb
add
mov
push
cmc
bound
add
int3
pop
test
xchg
pop
ds
sbb
mov
or
add
pop
inc
xchg
push
into
push
jno
cs
aas
lds
hlt
stos
jmp
pop
popf
xor
dec
pop
and
adc
xor
loopne
mov
imul
pop
inc
mov
sbb
mov
pop
pop
js
into
mov
shll
je
clc
ja,pn
cli
insl
mov
fistps
sub
adc
mov
call
cwtl
movsl
mov
cltd
subl
inc
xchg
pop
lcall
mov
mov
push
pop
dec
ds
inc
decl
cld
xor
jbe
dec
dec
addr16
test
jp
mov
fbstp
cmp
outsb
fcom
pushf
sti
mov
xor
mov
sbb
sti
xor
js
pushf
sub
sub
cmp
outsb
pop
cmp
mov
pop
add
pop
adc
mov
dec
enter
cmp
adc
mov
pop
push
mov
pop
cmovb
leave
jp
aas
jg
pop
push
xchg
cmp
cwtl
mov
push
mov
fidivrl
sbb
adc
cmpsl
mov
or
push
cmp
pushf
xchg
pop
imul
add
inc
mov
mov
lret
inc
jp
xor
cmp
stos
out
ret
jecxz
push
into
negl
dec
jb
mov
shrb
lcall
dec
repnz
cld
fwait
js
mov
je
cld
pop
gs
pop
sahf
xchg
mov
xor
push
jno
lcall
lock
mov
stos
sbb
sbb
mov
cli
adc
pop
cwtl
cli
jbe
pushf
shll
mov
jecxz
cmp
sbb
mov
push
cmp
jmp
sbb
sbb
push
pop
jae
mov
dec
adc
cmp
xor
pop
adc
jnp
mov
cmp
sarl
inc
xor
push
das
jp
lret
adc
jae
jl
xor
cmp
sbb
adc
push
shl
ficompl
fs
jmp
inc
dec
or
xchg
cltd
addl
and
loopne
push
or
and
mov
push
inc
pop
inc
mov
mov
mov
sbb
leave
mov
cli
jnp
xchg
daa
sarl
shl
xchg
rcr
loopne
fwait
mov
cmp
out
mov
xchg
movsb
test
rcll
fcomps
xor
ds
cmp
push
mov
lods
adc
adc
imul
cltd
cmpsl
inc
adc
andb
push
push
or
cmp
lahf
sti
lahf
push
f2xm1
add
jg
adc
xchg
and
lods
mov
jns
imul
mov
or
push
adc
xor
or
out
in
aad
lock
mov
les
outsl
pop
or
stos
clc
dec
dec
mov
cmp
movsb
adc
push
es
fnstcw
enter
mov
dec
sub
inc
cli
or
std
jae
or
cli
outsl
jmp
neg
push
mov
xor
pusha
mov
jle
inc
out
clc
xor
aas
jo
or
mov
xor
cmpsb
repnz
sti
or
mov
call
in
inc
daa
mov
inc
aaa
lahf
jmp
pushf
lods
push
xchg
pop
bound
jle
and
sbb
repnz
dec
or
xor
loop
xchg
cmp
data16
aam
cmp
adc
imul
loopne
sbb
nop
popf
push
loop
pop
test
jecxz
dec
arpl
cli
cmp
stc
aaa
cld
stos
jle
xchg
lret
lds
repnz
subl
and
xor
mov
jle
enter
arpl
mov
xlat
push
lahf
dec
xchg
xor
stos
jp
mov
es
mov
mov
mov
mov
iret
leave
xchg
dec
push
xchg
pop
ror
out
pop
inc
jno
sti
and
mov
sub
dec
or
lret
pop
jle
popa
fmull
jb
jne
cmp
aad
movsb
mov
sbb
loope
mov
dec
lock
mov
out
or
pushf
cmc
imull
out
enter
ret
ja
dec
and
int
scas
jecxz
sbbl
lahf
xlat
gs
pop
divb
les
or
pop
or
add
jp,pt
mov
es
int3
stc
jmp
iret
mov
cmp
sarb
popf
je
push
test
add
mov
pop
sbb
int3
int
into
rclb
push
pop
jecxz
pushf
sbb
sbb
pushf
mov
ds
push
cli
xor
pushf
orb
out
loope
out
inc
mov
lds
pushf
mov
cli
into
lahf
pop
push
xchg
jbe
test
inc
pop
jle
clc
cmc
nop
jle
xor
adc
cli
xor
jp
rcll
cwtl
and
or
push
jp
or
cmp
or
ret
in
adc
in
add
fmull
jb
or
and
stos
nop
aad
adc
xor
push
inc
mov
popf
xor
or
insb
lds
dec
jp
add
cmp
mov
pushf
jnp
jmp
sbb
jbe
in
les
xor
jle
inc
cmp
pop
out
xchg
sub
lock
xor
ljmp
and
outsb
mov
cs
outsl
ret
cmp
test
les
or
jns
mov
add
movsb
rorb
lret
into
out
lret
lahf
fwait
xor
sub
aaa
and
rorl
popf
cwtl
add
sarb
push
stos
mov
sub
jns
add
in
out
mov
testl
orl
mov
adc
shll
mov
mov
loope
movsb
cmpb
jmp
mov
lock
loopne
imul
xor
cmpsb
sbb
dec
adc
lahf
or
jge
sub
ds
mov
xchg
les
sub
mov
mov
and
std
cmp
sbb
loopne
sbb
dec
scas
mov
movl
shll
lret
mov
loope,pt
lcall
scas
xchg
adc
sti
ret
lahf
dec
jae
mov
mov
xchg
sahf
iret
pop
lahf
cmpb
mov
mov
shll
push
popf
or
outsb
and
and
mov
push
push
rolb
xor
cmc
xlat
mov
lods
jae
or
sub
sbb
adc
jne
jb
cmp
aad
inc
pusha
fiadds
lret
notb
inc
int
pop
and
xlat
or
push
das
mov
xchg
dec
sbb
lret
fildl
in
or
dec
call
sti
mov
push
stos
jbe
adc
sub
mov
mov
xlat
stos
dec
cmp
mov
add
inc
cmp
test
or
pop
in
sbb
andl
jp
push
cmp
xor
or
test
das
inc
test
test
dec
js
mov
push
dec
pop
cmp
mov
add
mov
std
jle
adc
ss
push
xchg
xchg
hlt
dec
dec
and
ds
cwtl
out
or
lcall
mov
arpl
add
lods
sti
out
fistpl
add
scas
cmp
in
xor
loope
rcrl
ds
call
or
pop
fsqrt
lret
sub
or
mov
and
mov
and
mov
or
cwtl
pop
sbb
cmp
adc
adc
fstpt
or
cmp
pop
stos
push
out
add
lahf
orb
imul
or
adc
sub
inc
dec
or
popa
mov
jmp
push
mov
pop
push
dec
dec
xchg
xchg
pop
fldl
push
sbb
scas
cld
pushf
xchg
sbb
aad
mov
loop
popa
xchg
pop
repnz
push
inc
inc
add
add
into
adc
xor
stos
shll
sub
aam
sbb
sbb
repnz
out
push
jo
inc
push
and
jb
cmp
mov
shlb
notb
sbb
int
ss
dec
xchg
xchg
pop
dec
jb
jae
ja
cwtl
xor
lcall
mov
or
mov
sbb
inc
xlat
cs
loop
jb
xor
sub
inc
icebp
push
jno
outsb
dec
loopne
push
fs
sbb
lcall
push
mov
or
or
lahf
jne
lods
jmp
sbb
jge
sub
add
imull
dec
in
test
sbb
and
outsb
mov
or
dec
mov
jle
mov
mov
dec
jge
cmp
cltd
cmp
pushl
mov
repnz
icebp
cmp
cmp
xchg
orl
mov
jnp
movsb
fwait
or
jg
mov
fisubrl
lahf
jbe
inc
outsb
cmpsl
mov
lahf
cmp
inc
outsl
add
jmp
test
insl
adc
out
or
mov
push
push
pop
mov
sub
out
or
jmp
mov
sbb
in
divl
mov
cmp
or
pop
int3
and
stos
pop
jae
sahf
adc
ss
or
jnp
xor
nop
cmpsl
in
ss
negb
sahf
test
mov
jo
cltd
inc
push
mov
or
xchg
pop
lret
jo
js
mov
outsb
sub
inc
push
pop
adc
jno
push
ja
outsl
stos
in
sti
ret
insl
adc
push
fcomp
pushf
xchg
pop
cmc
pop
adc
or
xorb
dec
in
xor
inc
sti
clc
ja
xchg
push
flds
or
push
xchg
push
bound
or
test
ds
shrb
arpl
or
cmp
jle
shlb
mov
xchg
pushf
dec
stc
push
jns
and
loope
sbb
mov
xchg
cmpsb
in
mov
inc
ja
push
cmp
subl
jns
jno
xchg
push
lcall
orl
sbb
fcoml
cmp
mov
jmp
xor
sbb
push
test
xor
cmp
loopne
xlat
or
pop
pop
sbbb
out
clc
subl
dec
jmp
flds
mov
pop
push
jecxz
icebp
ficompl
popa
movsb
and
dec
lret
jmp
or
pusha
into
mov
mull
ret
mov
or
or
js
adc
xchg
jb
loope
or
pop
out
and
js,pn
xchg
xor
cmp
out
loop
adc
push
fcomip
dec
or
fisubl
testl
mov
or
mov
inc
cmp
jmp
dec
jb
sbb
or
lret
mov
mov
push
sub
jbe
push
popf
mov
ret
add
cmp
adc
stc
inc
dec
push
sbb
sbb
inc
sub
dec
mov
sub
jp
xor
push
mov
into
sbb
mov
shll
jg
adc
pop
inc
inc
inc
dec
lods
mov
mov
inc
or
sub
fwait
pop
or
sub
lret
push
sbb
jnp
ds
ret
inc
sbb
cmp
xor
mov
adc
push
arpl
jmp
sbb
or
mov
ret
cmp
sbb
jle
aaa
subl
pushf
pop
mov
repz
mov
jp
or
jl
mov
mov
inc
dec
pop
sbb
pop
jle
addl
push
mov
scas
jmp
mov
addr16
pop
sahf
cli
adc
fidivl
push
mov
pop
js
test
adc
mov
mov
inc
adc
jge
lret
mov
jp
sbb
jp
jae
push
outsl
jbe
or
sbb
setg
ret
push
dec
inc
inc
cmp
mov
fnstenv
push
pop
loop
inc
push
mov
stos
mov
inc
lret
jp
push
jg
ret
or
jp
sbb
icebp
ss
xchg
rcrl
xchg
shrl
lret
pop
adcl
sarl
cwtl
mov
mov
sbb
dec
stos
pop
add
jmp
pop
mov
inc
jl
iret
sub
dec
imul
or
dec
xor
and
lret
cmp
xorb
jp
mov
lret
jp
xor
jg
pop
sbb
or
mov
jp
xor
mov
sub
mov
mov
mov
dec
jp
fldt
sbb
dec
mov
into
add
push
sub
loop
lcall
push
mov
fs
inc
cmp
fstpl
xchg
pop
xchg
cmpsb
or
xchg
addr16
cmpsb
mov
sbb
jp
faddl
lahf
addr16
cmp
cmc
xchg
sub
mov
pop
pop
frstor
add
mov
push
inc
and
movsl
cmp
fdivrs
xor
or
mov
fmuls
in
xor
cmc
jmp
jno
lret
incb
pop
dec
cli
mov
orb
jns
mov
cs
xor
mov
movsb
xor
lcall
testl
add
or
pop
mov
dec
scas
sahf
repz
inc
nop
or
js
or
fcompl
push
lods
xor
test
pop
fucomip
and
addr16
ds
xchg
mov
sub
fidivs
mov
int3
pop
mov
jge
ret
subl
add
add
outsb
sbb
xor
mov
cmpl
rcll
lcall
dec
xor
xchg
fisubl
rcl
xor
dec
out
ret
add
sbb
push
test
lea
lcall
xchg
adc
addr16
shlb
push
lcall
cmp
arpl
std
loope
test
mov
aaa
sti
push
stos
mov
cmpsb
pop
loop
shrl
xchg
inc
or
fistl
jb
or
dec
xor
mov
fisttpl
and
sahf
aad
lods
pushf
subl
jmp
repnz
aaa
inc
frstor
outsl
into
adc
xchg
xor
scas
scas
out
mov
pushf
cmp
sub
or
cli
add
push
sbb
test
loopne
daa
hlt
push
jecxz
dec
fistpl
inc
test
dec
jmp
ljmp
or
push
pop
enter
cmpsb
movsb
dec
hlt
ror
mov
test
xchg
pop
lcall
lret
mov
nop
loope
jno
cld
dec
xorb
stos
test
xchg
jno
inc
sbb
insb
sub
bound
in
ret
adc
adc
sbb
movsl
or
push
mov
mov
jb
dec
test
or
sti
xchg
or
mov
mov
push
je
pusha
lea
mov
sub
mov
sbb
dec
or
repnz
or
push
data16
pop
xchg
clc
inc
out
mov
adc
addr16
mov
add
jecxz
push
or
or
fldl
jbe
or
push
je
and
imul
shll
xor
pop
push
js
mov
xor
test
jg
xor
adc
popf
dec
outsl
cmp
sahf
xor
hlt
roll
pop
imul
rcrb
push
sti
add
fistpl
mov
out
es
popf
aad
lods
mov
mov
fwait
or
pop
cmp
inc
mov
stos
or
push
mov
or
inc
push
dec
or
xor
ds
adc
push
outsb
movb
cld
popf
loopne
dec
xchg
fs
mov
fs
push
rcll
mov
or
arpl
adc
sbb
int
jecxz
mov
xor
push
push
mov
pop
or
jo
mov
fs
adc
and
jmp
addb
shll
or
inc
push
jne
adc
mov
out
daa
jb
or
loopne
mov
add
mov
and
fdivrl
or
add
test
icebp
dec
xorb
outsl
and
mov
xchg
xchg
jmp
mov
int3
les
lcall
or
mov
sbb
xor
cli
lret
sbb
mov
dec
adc
shlb
xchg
jmp
das
outsb
xor
test
sbb
iret
sub
mov
add
or
adc
adc
sub
jge
jecxz
push
rclb
add
or
mov
std
loope
cmpl
dec
fs
sbb
fstpl
dec
addr16
cmpsb
pushf
idivl
jle
xor
or
sti
push
mov
dec
mov
mov
shlb
dec
jns
rcrl
jg
cmp
sub
cmp
ljmp
gs
cmp
push
out
or
into
jae
xor
cli
addr16
fwait
lret
gs
jae
mov
mov
dec
sar
loope
adc
in
decl
sub
outsl
jo
out
lock
test
out
in
adc
loopne
sbb
out
mov
in
xlat
and
mov
out
pop
pusha
sbb
dec
mov
sti
xor
sar
mov
out
inc
in
xor
les
shll
int3
cs
aaa
insb
lods
ja
sbb
iret
xor
dec
and
sbb
or
insl
nop
pop
mov
pop
pop
pop
leave
inc
xchg
sbb
jns
fsubl
mov
lods
jg
lods
mov
cli
lret
pop
push
jmp
outsl
mov
mov
imul
or
cmp
adc
out
shrb
lret
inc
xor
dec
gs
icebp
push
dec
adc
ds
fiadds
xor
and
inc
dec
int
push
stos
lods
cli
ljmp
ds
das
jnp
sub
mov
jge
dec
add
sub
or
xor
out
cmp
jne
aas
ret
dec
cwtl
mov
jmp
sbb
pop
xor
xchg
gs
sbb
cmpsl
and
pushf
inc
xor
out
les
push
lret
pop
loope
or
mov
jecxz
adcb
push
arpl
test
jmp
test
pop
scas
mov
pop
test
repnz
in
rol
jo
icebp
out
pop
gs
daa
popa
ds
add
rorl
dec
in
inc
or
int
ret
dec
clc
add
dec
mov
xchg
scas
fadd
and
loope
xchg
lret
jmp
icebp
mov
je
lcall
sbb
lock
cmp
mov
rcl
xor
xor
pop
push
dec
fildl
pop
cmp
loope
cli
xlat
mov
xor
das
cli
shl
pop
jae
js
inc
sahf
ljmp
push
into
leave
stos
xchg
jl
jmp
aaa
or
in
ds
out
push
pop
xchg
sbb
fsubp
adc
je
in
or
loope
std
lret
push
or
lret
xorl
arpl
sti
js
cmp
pop
push
rcr
and
cmp
mov
sub
ja
xor
cmp
dec
pop
jle
shll
mov
xchg
add
mov
push
cmp
xchg
sub
cmp
lods
xchg
inc
cs
pop
ficomps
or
dec
jmp
xchg
xor
push
cmp
xchg
pop
mov
int3
into
adc
js
lds
pop
pop
rcll
and
icebp
sub
nop
out
js
mov
sbb
mov
loopne
xchg
int3
je
popf
fidivl
or
in
dec
ds
jmp
adc
bound
in
mov
fs
xchg
xchg
loop
jo
sahf
rep
les
mov
or
cmpsb
fimull
push
xor
cmp
sub
lcall
sbb
cmc
and
pop
je
inc
movsl
sbb
movb
dec
mov
pop
fstpl
jb
inc
inc
sbb
sbb
add
mov
mov
inc
inc
pop
mov
cmp
push
mov
xor
leave
imul
xor
sbb
xchg
xchg
jae
or
lods
in
or
pop
cs
and
movsb
mov
xor
shll
adc
iret
dec
test
jecxz
decb
movsb
aam
in
scas
cwtl
sbb
lret
and
add
in
adc
psubsw
jl
stc
sarl
out
push
push
push
sbb
insb
fwait
ja
mov
jle
pop
enter
or
setb
add
cmp
or
mov
or
arpl
jo
in
ret
sti
xlat
mov
dec
sbb
or
movsb
adc
mov
dec
inc
addl
cmp
iret
clc
call
shl
push
inc
in
pop
std
int
dec
sbb
sub
xchg
ficomps
or
dec
enter
xor
jle
cs
iret
jg
ret
aas
orb
loopne
mov
jp
sbb
jecxz
lahf
incl
mov
jb
mov
mov
je
lods
les
mov
xchg
pop
dec
test
testl
mov
pop
insl
cmp
push
ret
xchg
push
pop
mov
lahf
push
dec
mov
jne
in
and
shrl
dec
push
inc
or
gs
adc
jb
fs
test
cmp
adc
push
mov
testb
sbb
cmp
scas
pop
or
test
inc
mov
fisubs
bound
dec
xorb
aas
pusha
out
inc
mov
mov
adcb
adc
lods
mov
mov
icebp
add
loopne
outsl
orb
jle
sub
cmp
dec
stos
xor
cli
mov
push
jmp
xor
in
pop
cmp
cltd
mov
xor
jae
dec
xlat
outsl
push
cmp
sub
dec
out
icebp
sahf
jecxz
or
add
imul
sbb
and
clc
test
push
ret
cmp
jge
inc
xor
mov
pop
mov
fstps
jmp
lods
xchg
or
jbe
jns
and
ficomps
pop
push
dec
pop
sahf
cmp
test
sbb
insl
dec
decl
pop
call
push
sbb
xor
adc
shrb
in
negb
fimull
int
mov
cmp
icebp
add
and
push
xchg
sbb
jo
cli
jecxz
and
jae
push
lret
or
xor
inc
aas
xchg
mov
adc
xor
pop
mov
cmp
adc
push
push
mov
sbb
lret
xchg
mov
dec
lret
cmp
pop
rcll
cltd
pushf
jp
push
mov
imul
popf
lcall
popa
mov
scas
aad
or
in
repz
mov
push
xor
xchg
cli
push
scas
cli
mov
and
mov
mov
popa
xor
in
xchg
ljmp
push
inc
pop
adc
sub
or
adc
mov
and
jmp
inc
ds
inc
jo
aad
lret
and
subb
fwait
or
lret
dec
push
mov
rolb
mov
adc
or
out
or
icebp
bound
dec
insb
dec
sbb
mov
cmpsb
jmp
and
cmpsb
push
adc
test
jo
xor
daa
shll
or
jno
xchg
test
mov
decl
adc
lahf
cs
add
xor
iret
lea
jp
or
lret
std
in
aaa
ja
shl
push
enter
xor
test
and
adc
rcrl
jbe
or
lret
mov
loope
push
jmp
dec
or
and
jge
or
into
jge,pt
adc
std
stos
mov
push
dec
xorb
mov
add
cld
xchg
repz
mov
inc
lret
daa
lock
hlt
pusha
outsb
dec
scas
lods
repnz
push
movsl
jo
loope
mov
jp
cwtl
or
cmpsl
mov
in
and
jne
sti
or
xchg
pushl
or
iret
add
cmp
out
add
test
aam
sub
adc
or
dec
inc
imul
cmp
fiadds
popf
cmpsl
sub
dec
dec
sbb
pop
cmp
push
xchg
scas
pop
inc
test
cmp
mov
jnp,pt
jo
mov
jmp
mov
rcrl
xchg
ja
push
inc
dec
nop
or
lea
cli
xchg
add
add
nop
mov
push
jmp
or
leave
rclb
sub
or
pop
and
lds
cwtl
cli
sbb
lahf
lock
out
jo
and
jle
nop
sbb
mov
pop
sub
jno
js
in
or
push
jge
push
mov
stos
pop
repnz
jp
inc
adc
inc
mov
lods
lahf
inc
scas
cmp
xor
or
movsb
adc
mov
stos
imul
cmp
dec
leave
lea
push
scas
xor
lahf
sahf
cmc
mov
fs
dec
mov
push
mov
mov
lret
jp
rorb
jbe
adc
jmp
shr
xor
xor
or
imul
dec
xchg
add
lret
inc
pop
and
sahf
xchg
outsl
je
ret
xchg
shl
ss
xor
cltd
outsl
sub
shl
push
push
and
or
loopne
push
in
xchg
inc
jge
mov
adc
lret
enter
popf
sub
imul
push
mov
fucom
jbe
and
cli
mov
adc
icebp
lahf
jg
adc
mov
adc
mov
aam
xchg
fldt
stc
out
mov
mov
sbb
in
sbb
dec
inc
or
pusha
dec
pop
les
xchg
dec
or
or
xchg
arpl
std
nop
xchg
push
xchg
stos
inc
or
jno
dec
cli
add
xchg
jns
or
mov
ret
insl
in
lret
push
cmp
jno
inc
sbb
sub
mov
pop
mov
jge
xchg
cmc
and
jp
roll
aam
scas
ja
insl
sub
rcrl
or
lods
xor
dec
dec
lea
in
jmp
repz
mov
dec
add
test
scas
xor
ficompl
mov
and
jmp
test
add
cmp
mov
sbb
mov
rcrl
pop
ds
cwtl
jp
xchg
sti
das
and
xchg
or
inc
aas
pop
lcall
push
dec
fcompl
push
pop
shrb
mov
lea
push
xchg
push
int
js
clc
xchg
lea
test
jl
sbb
ds
dec
mov
movsl
mov
sbb
push
pushf
int
ja
xor
add
clc
dec
inc
pop
lahf
outsl
jo
cmp
jb
lret
jmp
mov
add
int3
sub
mov
ret
cli
lcall
in
pop
pop
or
jp
out
stc
call
push
xorb
shrd
mov
sbb
push
xchg
jb
inc
in
lds
fs
jns
ret
adc
inc
andl
xchg
repnz
sbb
and
dec
lahf
add
cli
cmp
mov
jp
lods
cmp
inc
mov
and
xor
mov
out
ror
ss
or
or
xchg
and
enter
jg
sarb
and
pop
adc
ss
or
mov
dec
dec
push
out
loope
sub
scas
push
and
into
rorl
movsb
mov
xor
ss
xor
dec
xorb
es
sub
mov
rorl
xor
popf
cwtl
and
dec
push
jae
ret
jno
xchg
dec
out
ss
cmp
mov
lahf
fdivr
aam
push
xlat
mov
push
mov
or
aaa
test
push
adc
xchg
sahf
mov
test
fistpll
jb
or
int
mov
cmp
pop
jbe
mov
pop
and
pop
pop
bound
xor
xchg
popf
sbb
fnstcw
orb
xchg
rcrl
jmp
adc
pop
cmp
test
jge
xor
sub
mov
into
cwtl
stos
jl
adc
jle
adc
mov
sahf
mov
xor
adc
mov
push
scas
dec
add
push
push
xchg
jle
daa
xor
hlt
mov
sbb
cmp
or
and
xchg
je
xor
pop
jne
shl
pop
adc
cld
pop
and
add
xor
push
mov
pop
cmp
inc
ret
and
sub
jo
xchg
xchg
jl
fstpt
dec
xchg
push
xor
pop
pusha
and
les
insl
mov
in
adc
and
enter
repz
insl
dec
hlt
pop
push
popa
clc
scas
push
test
xlat
cmp
out
jno
add
shll
or
dec
xchg
jg
sahf
push
and
xchg
in
jne
pop
dec
rcll
push
sub
adc
add
aas
push
sbb
or
sub
outsb
ror
mov
dec
sqrtps
insb
in
cmp
sbbb
int
lds
fs
mov
cmpsb
jmp
div
sahf
pop
je
xor
out
xlat
cli
fisttpl
cli
ret
cmp
repz
dec
iret
rcll
frstor
mov
stos
mov
sub
scas
scas
cmpsl
ss
icebp
lret
or
mov
or
or
jns
clc
and
lahf
aad
add
mov
rorl
test
arpl
mov
mov
xchg
push
and
push
adc
and
bound
testl
xor
in
sub
xor
ss
mov
lret
add
pop
push
or
push
je
sub
ds
dec
mov
add
or
jecxz
dec
aas
mov
jp
ror
pop
push
cli
xchg
jnp
adc
fmuls
clc
lock
sahf
test
xchg
pop
jne
js
add
cltd
repnz
and
ss
mov
lock
dec
enter
ret
pop
push
fcomi
test
fnstsw
cmp
add
adc
inc
cmp
dec
mov
addr16
test
bswap
xlat
fwait
ss
jnp
add
rorl
mov
cmp
lahf
add
push
mov
test
imul
test
pop
dec
or
sbb
aad
push
and
imul
jns
or
cwtl
add
into
xchg
les
sub
test
int
mov
decb
insb
or
into
xor
sbb
xor
rcl
stos
mov
nop
jns
fisttpl
and
or
xchg
dec
test
push
xchg
inc
or
sbb
mov
ret
dec
mov
gs
lahf
dec
ret
icebp
cli
inc
inc
inc
cmp
and
inc
insb
cmp
leave
adc
test
xor
xchg
mov
rcll
andl
sahf
dec
in
fadds
jns
pop
test
push
xor
cltd
cmp
jmp
xlat
mov
cmp
xchg
dec
iret
xlat
dec
dec
imul
adc
mov
lret
jmp
xchg
xor
push
scas
std
stos
js
push
aad
test
jns
mov
xchg
inc
cmpsb
and
jnp
daa
or
or
and
in
sbb
dec
mov
mov
cmc
popa
xor
fwait
scas
adcl
inc
loop
mov
mov
stc
cld
and
loope
lods
test
ret
scas
mov
mov
insl
fbld
xchg
xor
sbb
test
xchg
scas
jecxz
fnsave
out
sub
les
pop
cmp
push
lret
jnp
lahf
test
xor
stos
leave
arpl
mov
mov
dec
popf
sti
sub
or
add
aad
scas
mov
bound
push
jae
xchg
sub
jle
adc
ficoms
popa
out
add
mov
fmulp
cmpb
pop
ja
mov
push
mov
fwait
into
xor
or
or
adc
repz
push
pop
popa
leave
arpl
mov
adc
inc
mov
cli
jl
scas
imul
pusha
cmp
and
loope
xlat
dec
xlat
jmp
dec
inc
sub
push
or
rorb
cmp
sti
xchg
lock
xchg
std
clc
fdivl
mov
fld
pop
jmp
sbb
aam
adcb
dec
or
sbb
les
and
dec
jecxz
andb
fnstsw
incl
cltd
nop
push
movsb
pop
aaa
lods
dec
add
mov
lret
push
dec
out
ficoml
sahf
push
stos
and
dec
xchg
outsb
sub
adc
test
mov
cltd
adc
xchg
repz
pop
test
cmp
cli
inc
loopne
inc
push
imul
popa
insb
mov
repnz
movsb
mov
xor
xchg
jne
dec
and
enter
in
test
mov
cmp
xor
stc
insl
sbb
jmp
negb
les
mov
jmp
xor
or
rcl
mov
lock
cmp
stos
fs
mov
sbb
stos
push
xchg
stc
dec
mov
add
in
mov
movsb
mov
fnstsw
subb
push
aad
or
imul
sbb
push
sub
jle
inc
loop
pusha
movl
add
pop
cmp
push
call
push
push
xor
pop
xorb
fsubl
push
mov
or
pop
gs
or
add
mov
lea
shlb
subb
les
and
int
lret
xor
dec
pop
or
jmp
pop
or
adc
jmp
ds
popa
lret
rcl
test
negb
xchg
popa
jbe
push
mov
ret
push
test
push
popa
fcomi
iret
test
mov
dec
enter
lahf
jo
cmp
jg
jge
loop
dec
sub
cmp
shll
cli
int3
pop
leave
and
pop
cmp
jmp
mov
inc
cmp
mov
xchg
mov
pop
lcall
lret
lods
pushf
jno
ret
dec
xor
aas
xchg
into
pop
stos
mov
jp
outsb
mov
loop
and
mov
cmp
aaa
sti
cmp
dec
mov
dec
pop
fcompl
dec
or
push
pop
bound
orl
push
push
dec
xchg
mov
mov
stos
dec
sbb
or
shlb
xchg
pop
test
ljmp
mov
sbb
and
and
insl
mov
fs
and
imul
bound
ljmp
aad
cmp
push
xor
popl
sub
dec
in
xchg
mov
popa
sbb
clc
movsb
pushf
int3
enter
mov
pop
loope
push
push
push
clc
fisubl
push
sbb
inc
loopne
addb
or
jns
das
aam
xor
loope
mov
jmp
pop
in
sahf
xchg
or
mov
mov
mov
jmp
orb
lock
leave
xchg
jae
add
or
or
mov
or
imul
cwtl
pushf
pop
and
and
subb
adc
mov
cld
in
out
push
cs
ss
bound
pop
mov
xchg
sub
es
sarl
or
cmpsl
sub
inc
adcb
jo
push
nop
sbb
pop
pop
and
movsb
dec
pusha
fistl
cs
out
push
sbb
fisttps
push
aaa
dec
pop
hlt
rcll
mov
notb
mov
jb
jno
pop
sub
xlat
fwait
xor
ret
pop
jb
rcrl
shlb
xchg
jl
mov
test
int3
mov
mov
or
mov
stc
shr
and
cmpsl
mov
or
lea
loope
or
mov
dec
addr16
stos
sub
jecxz
outsb
cld
cmp
xlat
imul
adc
lcall
sbb
or
ja
mov
dec
das
push
cmp
xchg
adc
cltd
fcompl
inc
mov
xor
xor
orps
or
mov
adc
dec
xchg
jle
jno
test
movsb
mov
mov
dec
or
ds
sbb
aam
and
les
ror
xor
xchg
shrb
xor
inc
inc
cmp
push
or
cmpsb
lea
cmpsb
dec
test
jnp
lahf
repnz
or
and
jl
jmp
jg
push
xor
cmpsb
mov
repz
dec
call
push
or
lahf
dec
cmpsb
xchg
andb
and
in
andl
cmpsb
jmp
mov
add
cmpsb
rcrl
enter
xchg
outsb
dec
and
add
and
shrl
add
leave
jmp
in
cmp
add
jo
lahf
mov
aas
mov
xchg
mov
xor
or
dec
aam
lret
orb
mov
mov
addb
in
jp
or
sub
cmc
cld
cmp
mov
rcrl
fs
ret
pushf
leave
mov
jae
filds
mov
es
pop
call
data16
dec
push
jne
ss
pop
xchg
insl
ffree
jo
lret
movb
mov
dec
das
roll
pop
or
lcall
xor
or
dec
je
stos
xchg
insb
int
es
ret
cli
pushf
cmp
psubd
or
addr16
add
pop
add
lea
mov
dec
or
subl
adc
cmp
dec
jp
cmpsb
outsb
pop
popf
dec
cmp
enter
mov
dec
int
ss
je
mov
cmc
adcb
pop
xlat
daa
dec
mov
std
sarb
xor
fstps
xor
mov
dec
sub
enter
jno
dec
jp
push
inc
mov
sbb
mov
enter
enter
and
jp
mov
mov
dec
enter
js
or
sbb
jnp
leave
aas
sbb
ljmp
aas
cmp
mull
dec
mov
inc
mov
dec
jecxz
xor
ljmp
stos
lret
ds
ss
inc
fwait
ljmp
and
push
xchg
xchg
ret
and
insb
mov
xor
sti
iret
fimull
arpl
out
xor
std
ljmp
xor
rol
js
adc
cmp
add
xor
mov
xchg
sbb
repz
sub
adc
cmp
xchg
sbb
xchg
jb
lret
mov
sbb
jg
adc
ds
xorb
mov
dec
and
dec
inc
ret
and
lret
push
inc
adcl
xor
dec
dec
ret
test
jns
repnz
or
lret
ficompl
jbe
mov
mov
jae
xchg
adc
push
lret
js
sbb
enter
jae
inc
fsubr
cmpsb
add
dec
mov
loop
stos
adc
jg
and
jmp
dec
or
and
sbb
rorb
sub
lret
fwait
enter
iret
lcall
lret
jecxz
dec
pop
adc
leave
dec
stos
and
xor
mov
jnp
cmp
enter
push
xor
pop
test
lret
add
sbb
fwait
insl
mov
xor
cmp
dec
mov
sbb
punpckldq
dec
cmp
inc
adc
mov
inc
xchg
pop
and
data16
jmp
les
xor
call
mov
fucomi
aaa
mov
mov
mov
cmp
push
ljmp
xchg
push
int
cmp
out
mov
je
sahf
std
add
jp
mov
movsb
sub
cmp
sub
and
sbb
leave
sti
xor
mov
xchg
xor
xlat
and
xchg
les
in
xchg
imul
stc
mov
bnd
ja
in
leave
sti
mov
or
daa
scas
sub
jb
jns
sub
pop
ss
xor
popa
cwtl
cmp
jmp
dec
shll
xor
rcl
outsl
xor
sbb
inc
cltd
ss
clc
dec
insb
mov
scas
cld
cmp
mov
xor
sub
sub
dec
mov
dec
in
inc
mov
or
sbb
bound
lahf
stos
pop
mov
push
add
sbb
sub
enter
mov
dec
lret
dec
jb
pop
sub
jp
fwait
cmp
daa
xchg
test
xor
push
add
cs
sbb
mov
adc
xor
xor
fdivrl
sbb
hlt
mov
fists
jae
inc
xchg
nop
sbb
bound
test
jg
inc
jae
mov
jp
jae
mov
sbb
lret
xchg
mov
sub
mov
sub
mov
jae
xor
jp
repz
imul
sbb
add
aas
dec
mov
repnz
fwait
jno
fimuls
mov
jnp
push
js
into
sub
data16
sti
mov
adc
pop
jl
dec
icebp
adc
add
stos
sbb
data16
jae
lret
mulb
mov
jnp
lret
mov
jbe
cwtl
stos
dec
mov
adc
xchg
sub
sti
lret
mov
and
push
mov
push
das
jmp
stos
mov
fwait
lret
push
lret
repz
bound
dec
or
lcall
popf
xor
or
stos
pop
lret
dec
adc
fidivrl
push
sti
jb
sbb
xchg
das
mov
sbb
dec
rcrl
pop
mov
jbe
dec
xor
sub
cli
sbb
ret
mov
jnp
mov
sbb
dec
arpl
sarb
ja
sub
sbb
mov
jb
js
push
push
fwait
xor
mov
jo
push
loop
sbb
pop
jecxz
sbb
or
jnp
sub
iret
sbb
mov
adc
sti
arpl
push
pop
pop
outsl
jmp
movsb
repnz
or
and
dec
cli
adc
outsl
int3
out
adc
pop
loope
lret
adc
cli
sbb
fwait
test
jp
mov
pop
stos
or
mov
jmp
aad
daa
jnp
daa
jae
jecxz
addr16
and
inc
push
popa
decl
sub
ret
imulb
or
xchg
add
push
roll
lods
fwait
xorl
je
cmc
jmp
and
dec
or
out
pop
or
dec
xchg
and
xor
mov
jecxz
adc
sub
mov
jge
xor
fs
sbb
lods
fiaddl
xor
mov
rolb
mov
xorl
jp
mov
xor
cmp
call
dec
clc
jmp
pop
pop
enter
and
popf
sti
aad
test
pop
loopne
ss
jmp
and
leave
jb
sbb
loope
cli
shrl
or
push
jbe
std
int3
movsb
addr16
ds
jp
or
or
les
and
sbb
shrb
push
jmp
mov
push
test
dec
dec
sbb
push
gs
adc
cmp
test
lcall
pushf
xor
es
inc
adc
outsl
push
push
fildl
pop
dec
or
popa
repz
icebp
dec
addr16
cmp
dec
or
cli
jecxz
inc
or
adc
inc
or
pushl
sbb
addl
ds
inc
sbb
in
or
and
cmpsb
test
mov
orl
xchg
push
adc
jge
test
and
loopne
cmpsl
push
adc
pop
jo
stos
xchg
jnp
or
jmp
rorl
arpl
lea
jmp
jmp
mov
in
pop
out
mov
cmp
push
mov
cmp
inc
xchg
push
and
pop
cmp
xchg
push
or
fldcw
jp
or
adc
sbb
lods
pop
sbb
mov
repz
dec
push
inc
inc
test
shll
cld
xor
xchg
outsb
addr16
xchg
sub
push
pop
addr16
rol
adc
and
add
pop
in
das
mov
xchg
mov
jle
mov
fisttps
or
in
dec
stc
xchg
add
adc
lret
into
jmp
jle
inc
rcl
lahf
aam
lds
mov
sbb
add
jne
pop
imul
imull
out
icebp
xor
xchg
mov
jmp
shr
out
ror
std
jne
cmp
push
cmc
jnp
or
lods
xchg
or
fistps
jno
jecxz
and
push
and
jb
cmp
or
or
arpl
jb
bound
and
inc
arpl
cmc
xor
lret
jae
jb
cmp
push
and
std
nop
popa
sbb
shlb
ret
dec
or
jecxz
pop
adc
and
scas
dec
jp
mov
and
roll
int3
inc
aas
mov
push
mov
xchg
lds
push
xlat
popf
bound
sub
test
dec
push
pop
std
mov
push
inc
inc
or
xchg
sbb
or
icebp
mov
cmp
imul
or
out
jge
lods
inc
clc
xor
ljmp
fs
shll
in
shrl
or
ficoms
mov
out
popf
mov
pop
mov
or
insl
and
pop
pop
mov
or
pop
in
scas
and
jno
cmp
cmp
fcoms
in
mov
mov
or
mov
pop
inc
or
mov
pop
lret
inc
add
xorl
cmp
in
push
dec
stc
mov
sti
sarl
sub
jmp
lret
mov
pop
xor
push
test
push
cmp
xchg
jnp
push
jecxz
push
mov
aaa
enter
jo
lds
pop
icebp
sbb
or
repnz
jmp
jb
or
imul
push
mov
pop
popa
xchg
aaa
xor
mov
xor
adc
imul
or
jg
rcll
xchg
lahf
std
test
or
insb
into
xor
push
lret
dec
movsb
sbb
mov
pop
pop
les
inc
movsl
jecxz
cmp
testb
data16
repnz
mov
int
stos
inc
stos
push
and
sbb
mov
lret
mov
incb
sahf
test
xchg
insl
ret
repz
ja
mov
popa
sti
sub
into
adcb
sub
mov
xchg
mov
or
inc
push
ror
int3
mov
add
push
inc
cmp
jp
insb
pop
and
inc
sbb
scas
rclb
or
jo
lods
ror
stos
iret
outsl
cmp
mov
cmp
push
xorb
cmp
dec
push
cs
aam
ret
sub
movsb
into
out
in
mov
repz
push
movsb
jnp
or
gs
mov
sub
xchg
shll
mov
pop
nop
and
mov
cli
loop
orb
sbb
mov
jbe
or
pop
fldt
pop
outsl
idivb
mov
popf
out
dec
xlat
cld
adc
add
mov
pop
out
fsubrl
inc
mov
pop
mov
fildll
enter
xor
hlt
int
inc
fistl
je
bnd
rcrb
ret
bound
out
adc
lcall
jmp
mov
sbbl
mov
jmp
mov
jo
cwtl
aas
adc
mov
dec
jae
inc
jne
xor
jmp
repz
or
fiadds
and
adc
into
mov
js
jmp
sti
pop
nop
xor
cmp
popa
into
mov
xchg
int3
shrb
into
out
lret
inc
jmp
xchg
out
ret
dec
xlat
cmp
mov
and
xor
add
je
insl
ljmp
sarb
sbb
cld
jle
jg
fld
xor
mov
xor
mov
lahf
std
push
dec
movsl
push
mov
or
shll
aad
test
popf
sbb
mov
in
stos
mov
int
cli
nop
jno
xchg
movsb
jge
push
adc
push
sub
scas
push
jmp
and
or
stos
loop
frstor
push
aam
sub
pop
and
push
or
mov
orb
sub
into
xor
push
lcall
sub
xchg
cs
cltd
sub
jp
movsb
and
repz
mov
xchg
sbb
sarb
out
jmp
shrb
jbe
mov
cli
adc
int3
mov
stos
mov
jecxz
gs
dec
sahf
jge
mov
daa
inc
jmp
xor
aaa
lock
lcall
and
fbstp
test
and
ficomps
jo
pop
jno
mov
movsb
sbb
sarb
jp
ja
out
or
xor
adc
cmp
jge
mov
push
xchg
leave
jg
adcb
popf
add
push
cld
fmulp
inc
or
pop
ret
xchg
not
adc
and
repz
mov
cmp
push
mov
dec
popa
pop
xchg
mov
push
or
int3
jmp
push
push
orb
dec
or
and
fisttps
loopne
jbe
xchg
out
jno
popa
movsb
sub
pop
mov
cltd
imul
shr
mov
clc
pop
mov
jo
mov
sub
xchg
adc
scas
dec
xchg
xchg
repnz
mov
add
movsb
xchg
mov
clc
push
stos
or
xlat
imul
mov
stos
lods
dec
jo
ds
pop
adcb
pop
adc
xor
gs
loopne
sbb
push
jbe,pt
mov
cwtl
push
repnz
push
mov
test
fisttpl
xlat
lea
xchg
jbe
xchg
dec
adcl
pop
fnstsw
fwait
mov
mov
jmp
xor
push
enter
push
das
and
jae
decb
lods
push
orb
mov
fcmovnbe
dec
dec
bound
dec
lcall
and
and
xchg
add
loopne
loope
fbld
and
sbb
and
jmp
xlat
inc
stos
mov
sarl
out
xchg
mov
cmpsb
xor
hlt
or
mov
jae
inc
push
mov
push
popa
aas
inc
loope
nop
out
enter
inc
xchg
loope
mov
dec
jns
sbb
stc
sarl
cmc
push
mov
fisubs
fisubs
mov
inc
pop
mov
sub
or
xchg
adc
push
movsl
sub
rclb
add
mov
push
enter
adc
dec
dec
inc
sahf
jnp
dec
cmp
les
and
faddl
jmp
xor
cmpl
add
pop
ds
mov
mov
cld
jge
add
sub
inc
cmp
xchg
loope
push
push
cmp
dec
xor
push
push
stos
sbb
enter
xchg
iret
jge
pop
add
cmp
iret
nop
divb
or
insl
lret
movsb
xor
add
xor
cmp
dec
or
imulb
adcb
sub
and
scas
int3
add
pop
aad
pop
jo
xchg
out
or
pop
dec
jmp
js
mov
or
mov
inc
or
or
sbb
and
dec
xchg
jo
iret
aas
sbb
push
mov
test
sbb
gs
aas
lods
dec
cmp
rorl
pop
jno
mov
mov
mov
pop
lret
std
popa
cmpsb
ljmp
aam
fadds
das
or
push
xchg
cmp
pop
adc
dec
pop
push
mov
cmp
leave
inc
int3
addr16
mov
lea
imull
xlat
out
adc
leave
cmp
dec
cmp
mov
add
jns
sub
into
inc
or
adc
stos
xor
adc
sbb
stos
mov
jmp
cld
mov
gs
lcall
jl
lret
clc
jp
out
inc
fldlg2
lcall
push
push
test
rorb
jno
inc
mov
add
adc
mov
dec
dec
in
clc
and
dec
bound
pop
or
popf
xchg
lcall
ficomps
xor
jmp
push
ja
insb
shll
lret
popf
into
mov
and
push
dec
jno
jmp
mov
sub
sahf
inc
pop
pop
push
cli
push
push
aad
clc
mov
add
mov
sbb
xor
insl
push
rcr
pop
inc
cmpsb
insl
je
inc
mov
inc
das
bound
cli
loop
or
cltd
movsb
fs
jl
nop
mov
or
std
sahf
dec
mov
fnstenv
sub
sarl
cmpsb
xor
fsubl
adc
xchg
jmp
pop
insl
jo
xor
push
push
mov
xchg
icebp
mov
mov
sbbb
in
jmp
jle
cmp
xor
mov
nop
jns
inc
push
mov
ret
and
dec
or
cltd
ret
xor
ss
or
sub
cs
out
and
aas
jo
sub
dec
pop
aas
push
mov
pop
jg
jecxz
lret
xor
in
sbb
insb
nop
mov
or
out
cmp
unpcklps
sub
cltd
enter
dec
and
inc
aam
loop
cwtl
and
cmpsl
pop
jnp
shr
and
dec
lret
or
into
in
leave
add
lret
in
lcall
add
pop
or
pop
dec
pop
mov
xor
adc
push
pop
mov
inc
adc
out
es
pop
cmc
pop
sub
out
jge
jmp
aam
cli
fwait
je
or
cli
mov
ss
xchg
cltd
and
movsb
push
cmp
aam
cmp
jmp
lods
xchg
or
lods
stos
shr
loop
lret
push
jp
jecxz
shll
pop
or
and
or
dec
push
xor
inc
sbb
fsubr
popa
into
or
test
repz
add
outsb
cmc
jne
sbb
call
mov
adc
xchg
xlat
stos
jns
xchg
sbb
out
cli
mov
or
xor
inc
inc
push
dec
lret
mov
repnz
pushf
shll
inc
cmp
xchg
pop
xchg
cwtl
fldcw
jb
lahf
push
test
push
or
lcall
lcall
jns
pop
jae
into
daa
push
clc
aad
lcall
inc
leave
lods
std
bound
and
or
cmpsl
push
leave
inc
push
push
mov
pop
cmp
ss
enter
xchg
pop
cmp
shr
gs
dec
jae
fndisi(8087
andb
sub
int
xchg
test
notb
testl
cmp
xor
jb
ficompl
jns
outsl
adcl
jne
jae
xor
or
cmp
jmp
dec
jp
lret
xchg
cmp
and
dec
fdivr
sbb
out
mov
or
into
fdivs
cmpsb
mov
xchg
fstpl
pop
or
dec
and
frstor
push
push
movb
idivl
or
stc
mov
push
into
cmp
xchg
insb
mov
cmp
les
pop
mov
adc
popa
mov
rclb
out
test
jne
into
andb
cmp
addl
nop
inc
std
mov
out
or
into
into
imul
imul
scas
lcall
inc
sbb
mov
pop
lahf
jae
mov
and
cmp
mov
in
out
into
int3
ljmp
xchg
or
mov
arpl
cld
push
cwtl
jmp
xchg
fdivr
push
xchg
xchg
mov
cmp
dec
or
mov
pop
mov
xor
lret
nop
or
test
mov
jae
jge
std
push
jecxz
jmp
mov
push
and
xor
sub
or
stos
xchg
xchg
fwait
stos
lods
sbb
pop
push
sub
int
dec
dec
push
scas
movsl
sbb
loope
dec
movsb
xchg
mov
push
popf
scas
dec
push
mov
dec
add
lea
fstpl
popf
pop
cmpsl
call
jecxz
outsb
ret
jge
cmpsb
jge
adc
mov
xor
str
sub
pop
ljmp
mov
in
add
test
sub
pop
sub
cmp
xor
jmp
ss
cmp
or
loope
mov
repz
fsubrp
mov
cwtl
push
and
jae
decb
xor
leave
out
cmpsb
jo
jl
mov
and
cmp
je
adc
sbb
jmp
jg
mov
xchg
fimull
fwait
xchg
jg
aaa
sti
mov
outsl
xor
dec
mov
sub
call
aas
xchg
mov
hlt
adc
push
dec
sbb
cmc
and
cld
out
pop
pop
or
stos
and
sbb
imull
cmp
mov
das
fs
mov
mov
sub
cmp
cli
push
xlat
lea
cmp
mov
call
leave
dec
xlat
adc
or
sbb
fldenv
inc
sbb
mov
lds
sbb
push
jp
in
scas
mov
add
pop
cmc
xchg
jmp
xor
orl
stos
in
add
pop
xor
outsl
popa
out
aad
aas
orb
dec
dec
mov
and
xchg
mov
or
mov
mov
es
adc
cmpsl
dec
xchg
clc
addb
pop
xchg
mov
push
xchg
repz
cmp
pop
test
jmp
cmp
push
or
es
cwtl
leave
mov
xchg
xchg
or
jo
xchg
mov
adc
or
mov
and
xor
enter
imul
cmp
or
dec
les
insb
ds
mov
cmp
mov
jne
jle
and
mov
ficomps
pop
xor
cmp
jo,pn
sub
pop
cmp
jo
in
addl
pop
pop
fmull
push
dec
adc
lcall
cmp
dec
cmc
cli
aaa
inc
xchg
leave
or
pushf
jnp
shr
inc
lods
sub
xchg
sbb
mov
into
adc
xchg
rcll
jo
nop
addl
adc
outsb
lret
dec
idivw
cmp
inc
or
into
mov
leave
or
cmpsl
xchg
scas
mov
cwtl
insb
cmpsb
les
xchg
jmp
mov
cmpl
jle
cmp
in
cli
out
mov
bound
push
mov
fwait
adc
add
dec
lahf
or
mov
jo
fcmovnbe
jns
lahf
dec
roll
fistps
ds
xchg
xchg
stos
test
inc
lret
jp
loop
andl
sub
dec
rcll
test
dec
push
popf
mov
cmp
jle
sub
jbe,pt
out
inc
fstpt
jp
sub
hlt
out
in
sub
push
cmpsl
xlat
mov
testb
dec
pop
xor
outsl
pop
jle
movsb
jnp
and
or
adc
data16
repnz
sbb
in
loop,pt
repnz
movsb
sbb
xlat
mov
pushf
sbb
mov
lds
setp
sbb
jno
out
mov
aas
mov
fld1
jbe
and
mov
loop
movsl
dec
or
das
inc
loopne
push
push
clc
mov
call
or
in
push
aam
enter
arpl
mov
repnz
subl
adc
inc
push
dec
imul
xchg
push
mov
lea
stos
jnp
into
jne
xor
dec
adc
ret
add
loop
lcall
xchg
fisttps
xor
leave
cmc
and
cmp
cmp
adc
pop
push
fnstsw
rcl
mov
movsl
inc
pop
jae
and
shlb
out
sbb
bound
push
xchg
xor
xor
mov
or
dec
les
pop
push
xchg
fsubrp
in
mov
adc
add
rorb
lret
popa
dec
lods
cmc
mov
mov
dec
pop
out
out
push
sbb
push
call
dec
loopne
dec
sub
cmp
mov
xchg
aaa
mov
mov
xor
mov
mov
mov
cmp
dec
cmp
jae
pop
in
arpl
fcmovne
cmpb
push
je
or
das
jp
mov
pop
aam
rcrl
sub
dec
pop
pop
sub
sub
sbb
aaa
iret
orl
arpl
xor
cmpsl
xor
and
xor
shrb
jp
iret
mov
adcb
mov
cli
filds
ds
cmp
test
jmp
sbb
dec
dec
das
cwtl
mov
jg
jl
iret
mov
dec
dec
mov
dec
cli
sahf
sbbl
lret
loopne
dec
nop
sbb
dec
cmp
pop
inc
jb
addr16
sub
inc
outsl
sti
dec
jmp
sbb
xor
popf
lock
and
pop
enter
dec
lret
mov
mov
in
mov
sub
ret
xchg
push
bound
hlt
fbstp
cwtl
pop
test
xchg
cli
inc
adc
cmp
adc
rclb
sub
and
pop
dec
push
orb
and
or
sbb
or
jae
xor
dec
pushf
pop
ljmp
xchg
fistl
in
dec
aas
mov
push
mov
cmp
jb
or
pushf
pop
sub
sbb
and
lret
dec
das
ljmp
dec
arpl
dec
sbb
mov
xor
dec
pop
js
sub
sahf
jnp
jecxz
ret
lock
jo
sbb
negb
dec
add
cli
enter
xchg
loop
mov
enter
or
rorl
cmp
stos
push
push
jmp
sbbb
repnz
stos
lret
xor
cmp
add
mov
lcall
or
cmp
xor
out
lahf
shll
cmp
test
and
cmp
dec
rorl
mov
je
sar
mov
lods
pop
jp
xchg
arpl
imulb
xor
lret
shll
mov
mov
inc
cli
push
push
push
std
fdiv
dec
jg
push
pop
cli
dec
and
xor
push
pop
test
pop
dec
adc
loope
cmp
or
xchg
out
xor
adc
test
cmpsb
jg
int3
dec
imul
pop
out
push
insb
popf
aaa
not
cmc
ret
dec
cmp
lds
fcmovnu
ds
aaa
mov
bnd
cli
xorb
ret
outsb
iret
adc
dec
cwtl
test
mov
cmp
add
add
mov
cmp
cmp
repz
inc
lea
push
cltd
mov
jp
stos
fucom
mov
xlat
mov
adc
dec
jecxz
lahf
xchg
insl
inc
push
lahf
pop
mov
xchg
cltd
xor
or
xorl
cli
call
nop
lret
and
sbb
xchg
dec
push
divb
jl
mov
movsb
push
inc
ja
xor
mov
add
into
insl
ret
push
into
sbb
aad
push
xor
xchg
dec
xchg
jne
into
xor
dec
push
jle
xor
lcall
gs
call
inc
xchg
aam
xchg
inc
cltd
or
js
das
ret
sti
mov
lret
out
leave
stos
pusha
aaa
or
insb
pop
ds
mov
and
loope
mov
pop
movsl
aad
repz
pop
and
lods
mov
or
and
stos
adc
cmp
stc
xor
mov
sbb
nop
xor
imulb
add
test
lock
in
xor
mov
bound
jp
fbstp
push
aam
cmpsl
popa
add
fwait
out
jmp
dec
shll
pop
jae
and
xor
das
pop
mov
call
outsl
rorl
or
pushf
cmp
jge
mov
inc
pop
jmp
pop
push
leave
daa
jmp
mov
pop
jmp
inc
adc
hlt
pop
aas
outsl
xchg
sub
and
adc
cmp
sub
mov
or
push
xchg
sahf
fcmovb
insl
fdivs
mov
mov
lea
sub
int3
dec
mov
daa
insb
aam
jge
jg
imul
mov
mov
sbb
lret
je
lret
ljmp
enter
sub
xchg
repnz
fcmovnb
sahf
lcall
mov
adc
cli
inc
mov
pop
sarb
rorb
mov
jmp
mov
insl
ss
sti
xor
adc
cs
daa
loope
jns
test
outsb
push
dec
lret
inc
xor
fdivrs
inc
pusha
bound
dec
lcall
das
cli
stc
jmp
jmp
cmp
fdivl
inc
or
aad
dec
inc
add
push
push
jo
inc
xchg
daa
mov
xchg
dec
stc
inc
or
lret
pop
jae
fdivrs
xchg
mov
jae
in
inc
jnp
sbb
push
xchg
rclb
sahf
std
inc
and
mov
or
inc
call
pop
dec
xor
loop
lahf
pusha
int3
lea
cltd
cmpsb
rol
out
or
mov
sbb
add
scas
mov
xor
or
xchg
fnsave
test
dec
aam
fnstcw
mov
das
decl
fstps
mov
jge
push
cwtl
and
push
sub
push
or
xor
jg
mov
fbld
in
mov
cli
sub
adcl
mov
inc
pop
cmpl
test
xchg
adc
or
stc
xchg
imul
mov
xchg
lret
mov
outsb
or
xor
movsb
xor
mov
stc
adc
fidivrl
dec
iret
push
iret
enter
out
sbb
push
ds
push
aaa
jo
cs
sbb
add
xchg
push
dec
cwtl
orb
ror
out
jns
xchg
xchg
fwait
or
out
push
cld
push
inc
mov
dec
mov
xchg
cmp
and
repz
cli
mov
jl
mov
icebp
mov
lahf
dec
in
dec
adc
xor
clc
out
cmp
movsl
pop
int
ud2
mov
stos
xlat
push
dec
popa
inc
in
std
push
dec
and
jo
xor
or
mov
mov
stos
bound
shr
aaa
or
imul
adc
push
jmp
stc
pop
ficoml
or
xor
popa
imul
xchg
and
adc
xor
jnp
popa
pushl
jge
dec
shrl
mov
mov
xchg
insb
mov
jp
push
mov
xor
popa
aas
mov
mov
mov
das
xor
out
jp
ret
mov
add
dec
jp
insl
lahf
xlat
xchg
and
or
and
adc
and
sbb
dec
push
adc
test
sahf
dec
push
xor
or
arpl
les
cmp
dec
cmp
int
fwait
scas
imul
outsb
les
xor
pop
aam
mov
cmp
pop
sti
js
jecxz
push
out
add
xor
push
shrl
mov
or
cmpsb
push
andl
pop
dec
mov
dec
jle
leave
cmp
xor
out
not
jle
or
call
or
das
out
add
lret
ffree
xor
sbb
jne
fsubp
test
jae
inc
insl
jmp
loopne
fstpl
int3
movsb
dec
push
xor
xchg
pop
test
and
cmp
mov
cmp
or
pushf
test
xor
inc
mov
push
dec
notl
mov
mov
jge
mov
push
or
mov
pop
call
cmp
mov
dec
sbb
loope
cmp
cmpsb
das
cli
and
and
test
cmc
in
inc
je
push
mov
jle
pop
lahf
xchg
mov
cmp
mov
mov
imul
add
lods
jmp
dec
adc
in
mov
mov
int
xchg
lea
adc
arpl
cmpsb
inc
jno
jbe
stos
pop
mov
xor
adc
pop
jnp
pushf
sarb
int
pop
rorb
pop
or
icebp
int3
in
inc
jo
and
js
fimull
xchg
and
cmp
sahf
xchg
xchg
cmpsl
lods
mov
out
shr
push
pop
adcl
xor
imul
lret
adc
dec
js
call
inc
icebp
mov
jle
stc
inc
mov
mov
push
adc
aad
arpl
sbb
sbb
mov
or
dec
out
cmp
inc
sbb
and
stos
mov
mov
in
pop
aad
push
enter
rorl
aaa
subb
out
sar
in
das
sub
ja
cld
out
adc
bound
add
sbb
cmp
test
mov
inc
out
leave
pop
int3
in
dec
jnp
adc
or
fildl
jp
lods
push
and
pop
jb
bound
mov
dec
pop
aad
sbb
xchg
clc
xchg
nop
dec
xchg
mov
push
ja
lret
sbb
jp
push
int3
pushf
leave
xchg
mov
cmp
sbbb
test
dec
push
insb
clc
mov
cmpsb
cmpsb
or
repz
push
pop
inc
or
scas
data16
sbbl
mov
pop
in
std
pop
xor
cmpl
scas
mov
out
and
xor
cmp
fimull
sub
test
sbb
in
or
hlt
cmp
cmp
jb
pop
or
pop
ficomps
cmp
mull
ret
push
gs
pop
scas
fwait
push
lret
xlat
and
pop
cmp
cs
rcll
jae
addr16
in
ret
mov
jmp
dec
jg
sub
outsl
push
dec
mov
inc
mov
and
cld
std
adc
pop
or
mov
or
icebp
and
mov
cmp
sub
cmp
popf
push
call
mov
xor
fwait
mov
jnp
jmp
imul
dec
shl
sbb
ss
mov
clc
mov
imul
xchg
fisttpll
or
test
add
inc
sbb
mov
aas
out
mov
push
imul
fidivrs
loopne
in
cmp
mov
js
adcb
lret
cmp
std
push
lods
mov
mov
aam
rcl
out
test
ret
nop
dec
loop
jg
int
ljmp
dec
mov
xor
daa
inc
dec
push
out
add
mov
push
pop
cltd
jmp
subl
lahf
push
dec
call
or
outsb
lods
and
and
sbb
pop
jge
in
cwtl
and
jae,pt
aam
lea
in
xor
insb
shll
ret
in
lret
and
sarb
popa
xchg
icebp
cmpsb
adc
adc
orl
jmp
sti
or
imul
mov
dec
dec
jb
mov
mov
lds
push
and
jmp
mov
push
subl
xor
adc
nop
test
or
nop
test
les
or
sbb
cli
je
rcrb
inc
repz
in
ret
add
or
xlat
leave
add
mov
adc
sub
out
loope
or
dec
push
rorl
push
sub
scas
and
ret
les
movsb
push
movsb
mov
sbb
outsb
das
or
xor
or
inc
add
lods
pop
insl
inc
lock
ret
push
or
mov
or
mov
xor
mov
cli
xchg
or
ja
jge
and
pop
mov
cmp
popf
outsl
orl
test
mov
in
lret
push
xorb
lock
out
mov
loop
fmull
clc
inc
inc
aaa
lea
and
xchg
nopl
cmp
jnp
pop
jp
stos
repz
in
pop
add
mov
add
push
and
lret
push
push
pop
jecxz
cltd
test
mov
xchg
mov
mov
icebp
enter
stos
lret
mov
xchg
stos
pop
out
and
sbb
dec
mov
aad
cmp
mov
mov
push
and
ss
mov
mov
or
adc
dec
or
mov
pop
dec
jns
std
mov
mov
push
scas
ja
outsb
sbb
jo
arpl
and
scas
xchg
or
cmp
fcmovu
imul
lock
pop
cmpb
inc
sbbl
pop
loope
fbld
ss
mov
xchg
or
mov
mov
mov
xchg
lret
pop
mov
gs
and
mov
dec
or
addr16
xchg
add
popa
lock
leave
sbb
mov
iret
ljmp
dec
jecxz
mov
arpl
dec
or
push
loopne
sub
adc
jp
or
push
push
add
das
pop
dec
pop
mov
mov
dec
adc
enter
sub
and
loope
xchg
jle
cmp
adc
loopne
sub
in
loope
test
adc
dec
mov
add
jbe
jmp
in
fwait
cmpsb
lret
repnz
dec
and
push
arpl
mov
jnp
lcall
cli
ffree
and
mov
push
xchg
add
aas
les
scas
repz
dec
stc
inc
or
or
sub
bound
jmp
xchg
in
ljmp
mov
add
ds
loope
movsb
pop
xchg
sbb
shrl
push
test
add
enter
lds
pushf
jmp
add
dec
or
fwait
push
and
jno,pn
jo
sahf
dec
and
dec
pushf
sahf
in
test
shrl
adcb
sub
mov
sub
jecxz
pop
adc
stc
ss
push
aam
jmp
cmp
mov
xorl
mov
jo
pop
xchg
xchg
jp
and
jmp
nop
push
sub
adc
out
lods
mov
jo
and
sahf
cmc
in
adc
xchg
ret
jecxz
jns
push
xor
pop
int
cwtl
fstl
add
decb
shlb
pushl
inc
lcall
movsb
jae
mov
out
out
xchg
int3
cltd
or
in
loope
sub
rclb
xchg
mov
pop
es
aad
mov
sbb
and
pop
scas
aas
mov
lcall
cmp
ljmp
adc
jbe
sub
ret
jnp
pop
cli
in
std
push
mov
adc
or
iret
sbb
int3
outsb
aam
decl
fsub
mov
fmull
xchg
pop
pop
xlat
inc
popf
cmp
les
add
int3
out
repnz
mov
incb
fsubr
sbb
xchg
aaa
xor
test
xchg
mov
icebp
fistpll
mov
or
cmp
sub
out
dec
cmp
inc
pop
or
and
inc
sub
lret
outsl
jp
subl
les
pop
sub
sbb
or
pop
fnstenv
mov
mov
leave
xorb
and
dec
jae
xor
imull
sub
mov
sbb
lahf
push
imul
jp
xchg
outsl
data16
out
mov
movsb
orb
inc
adc
aam
pop
jno
loopne
addr16
inc
or
mov
xchg
je
mov
iret
leave
out
cmp
das
loopne
shl
dec
sahf
or
mov
xchg
inc
pop
jae
mov
cmpl
mov
pop
cli
cs
bound
xchg
adc
fs
pusha
add
in
mov
int3
inc
adc
jmp
imul
dec
dec
add
add
jecxz
out
jne
cmpsb
adc
mov
mov
sbb
push
dec
pushf
add
fwait
aad
test
mov
into
lds
lahf
roll
mov
pop
stos
and
mov
sbb
xor
jmp
cltd
sub
mov
scas
lret
jmp
cmp
mov
dec
movsb
and
xor
push
xchg
cli
pushf
repz
cmpsl
out
testb
pop
and
xor
daa
and
push
lcall
push
in
jne
mov
jp
sub
sub
xor
or
mov
inc
int3
in
sub
stos
xor
rcrb
pop
popa
movsb
data16
loop
xchg
add
xchg
popa
lret
aas
cmpb
out
int3
data16
lea
test
jne
adc
loop
call
mov
or
mov
and
pop
lret
outsl
addr16
imul
adc
add
push
es
mov
jnp
and
mov
cltd
adc
xor
push
and
or
push
lea
pushl
jg
ljmp
dec
std
mov
aam
iret
inc
jmp
lret
test
sahf
cmp
int3
dec
jmp
push
dec
pushf
fwait
aad
jnp
xchg
aas
loope
andl
je
test
cmp
mov
or
jb
popa
leave
ret
lods
or
jne
stos
lret
je
vmovaps
or
xor
dec
ds
repz
xlat
xchg
xchg
repz
xchg
push
sbb
xor
aad
mov
into
popa
sub
cmp
inc
cmp
out
call
outsb
xchg
aaa
dec
fistps
add
lret
lods
pop
jns
push
xchg
cmc
add
and
lret
push
mov
and
xchg
xchg
jmp
pop
inc
aas
mov
cmpsb
mov
shll
outsb
icebp
lods
xchg
lret
cmpsb
adc
and
jnp
jmp
mov
pop
xchg
adc
add
or
rolb
stos
jbe
mov
push
pop
and
call
pop
insl
pop
and
pop
lcall
pop
ljmp
ret
add
xor
mov
aas
fnsave
ret
mov
mov
leave
outsb
fimuls
ret
mov
add
clc
sbb
xchg
xchg
xchg
xor
aas
xor
jp
pop
ret
into
add
inc
and
cmpsb
xchg
cltd
mov
dec
jne
popa
adc
xchg
add
or
std
fnsave
jnp
mov
insl
fldcw
pop
test
mov
push
sub
cmc
pop
repz
jb
lea
nop
adc
dec
inc
cmc
add
or
or
inc
and
or
js
mov
xchg
mov
repnz
repnz
sbb
mov
lret
enter
popa
clc
cltd
insl
xchg
sbb
nop
dec
mov
cltd
xor
in
in
xchg
jnp
and
mov
sbb
cltd
xor
xchg
push
dec
ljmp
sbbb
lcall
enter
repz
or
mov
scas
aas
clc
insl
mov
or
std
ja
sbbb
dec
lret
jmp
jge
inc
or
jg
pop
sub
cmp
in
mov
pusha
ja
mov
cmp
jne
push
pop
in
jge
orb
scas
roll
imul
sub
push
lods
test
or
jge
imulb
aas
ret
xchg
add
roll
pusha
mov
cmpl
hlt
push
sbb
cltd
mov
out
jp
ss
test
push
or
inc
adc
pop
dec
sbb
pop
or
lods
sub
inc
cmp
mov
push
adc
xchg
loopne
out
adc
xchg
sar
fs
lock
js
int
out
sbb
pop
dec
mov
cmpsb
push
push
jne
or
sahf
daa
inc
mov
in
mov
aas
mov
dec
sti
int3
jne
jmp
lcall
jge
xchg
loope
popf
or
sub
xor
or
and
and
mov
mov
and
dec
cmp
call
hlt
or
jo
adc
or
addr16
cmp
repz
or
ret
push
nopl
test
repnz
rcrl
add
andl
test
or
add
push
cmp
mov
jp
mov
inc
jmp
jnp
or
bound
cld
push
xor
dec
lds
imul
and
cwtl
jg
test
mov
outsb
adc
aad
movsb
inc
orb
or
adc
xor
stos
dec
jle
outsl
mov
mov
in
mov
insl
pop
xchg
jg
mov
xor
push
and
imul
add
movsb
sbb
xchg
out
lcall
xchg
loope
dec
call
sub
std
add
ret
mov
cwtl
push
test
push
jmp
leave
lcall
dec
or
cmp
xchg
js
xchg
pop
jo
dec
les
sub
sarl
std
shll
je
rolb
xchg
or
mov
push
xor
pushf
and
jmp
sahf
dec
es
jecxz
shll
jmp
xor
inc
pop
repz
test
xor
loopne
xabort
xchg
out
jecxz
les
psrld
push
sub
xor
dec
sbb
test
sar
lea
orb
add
out
mov
out
and
lock
lock
jmp
cmp
xor
out
xchg
rolb
pop
lds
jge
or
sbb
js
fwait
insb
sbb
dec
lods
xlat
loop
ret
notl
test
ret
out
int3
test
dec
add
lahf
rcr
cmpsb
mov
sbb
movsb
push
notl
xor
pop
jle
or
negl
lcall
iret
pushf
xlat
lret
aas
or
cmp
dec
add
mov
les
mov
pop
call
inc
andl
pop
jmp
jmp
les
xchg
fnstsw
add
jns
std
je
sahf
fistpll
cmp
pop
push
ljmp
jnp
lods
xor
xor
in
or
mov
xor
movsb
aaa
pop
push
shrl
or
aad
mov
mov
inc
test
lea
or
subl
push
sbbb
movlps
sbb
pop
inc
add
sub
add
or
int3
adc
gs
jg
movsb
or
or
inc
pop
dec
repz
testb
inc
jmp
hlt
mov
loop
test
popa
xchg
outsl
fidivrs
out
icebp
jo
lock
mov
sub
rcrl
ret
stos
sbb
loope
mov
xchg
dec
or
jbe
scas
adc
xchg
stos
testl
jne
and
ret
sub
lods
movsb
mov
enter
lds
pop
adc
adc
aaa
shrb
pop
push
movsb
dec
xchg
stos
adcb
imul
and
fdivs
mov
mov
or
test
lds
lret
lahf
jle
inc
out
jbe
push
or
int
ja
movsb
shrl
sarl
outsl
add
pushf
sahf
xchg
ret
xchg
jmp
pop
test
jo
sahf
into
sti
mov
aad
xor
pop
daa
mov
ss
cwtl
fmuls
and
out
and
icebp
nop
mulb
push
adcb
push
xorl
inc
mov
out
mov
scas
or
push
enter
cltd
push
pop
out
inc
adc
sbb
pop
mov
js
sahf
adc
dec
into
and
or
mov
pop
push
data16
mov
fidivrs
push
jo
and
mov
unpckhps
popf
cli
dec
jg
loop
mov
adc
popa
mov
test
cld
mov
cmpl
and
ret
inc
push
pop
std
add
aam
dec
mov
jae
or
inc
ljmp
in
pop
insl
sbb
mov
cmp
jmp
add
mov
fisubl
pop
stos
aad
cmp
rolb
push
mov
push
cmovs
call
popf
ret
pop
arpl
pushf
dec
add
sub
xor
in
ret
lahf
dec
inc
or
cmpsb
xor
mov
mov
movsb
popa
mov
mov
and
push
push
imul
sub
jp
jbe
fs
scas
lea
mov
mov
pop
xchg
leave
fcmovbe
jne
stos
add
cwtl
jge
push
orl
or
pop
shrl
jp
adc
gs
mov
icebp
xor
and
ljmp
fistps
in
icebp
xchg
adc
or
decl
sub
clc
fldt
ja
stos
adcl
add
orl
push
cmp
sahf
dec
inc
movsl
mov
cmp
ds
jl
out
lcall
jmp
into
add
fwait
mov
xchg
cli
test
and
and
lods
or
bound
movsb
or
mov
leave
add
lret
mov
cli
mov
jle
pop
pop
out
ss
add
or
sub
xchg
xor
xchg
aad
xchg
sarl
mov
outsb
adc
add
push
xchg
lcall
jb
scas
jo
xchg
adc
add
pop
or
dec
inc
jb
or
aaa
jns
dec
pop
test
ret
out
rclb
pop
aad
mov
and
orl
or
lea
dec
test
sub
or
stos
dec
or
sbb
cmp
dec
mov
xor
dec
out
inc
fstpl
dec
test
mov
cwtl
addr16
xchg
mov
push
jns
mov
dec
dec
or
popf
jb
sahf
add
xor
or
adc
in
clc
test
xchg
repnz
in
sub
mov
in
push
jecxz
out
in
scas
jno
xor
push
sub
je
add
cmp
add
outsl
std
les
lahf
inc
cwtl
shlb
push
imul
push
test
mov
sbb
lcall
xor
push
adc
mov
or
inc
sub
jmp
sbbl
inc
push
movsb
jp
xor
js
sti
sbb
sub
ljmp
stos
outsb
mov
lock
sbb
sbb
mov
sbb
push
sub
arpl
inc
inc
lret
inc
sub
aam
and
pop
mov
lret
mov
push
lret
sbb
ficoml
jp
cmp
jp
ret
fistpl
rorl
mov
add
bound
xchg
add
cmp
dec
lret
dec
mov
mov
sbb
repnz
inc
mov
dec
inc
jae
jecxz
push
xor
pop
mov
adc
inc
adc
cmpb
mov
inc
dec
sbb
dec
or
test
jp
cmp
adc
jp
cwtl
arpl
ds
xor
adc
dec
adc
mov
sbb
sbb
pushf
mov
adc
sbb
mov
cmp
lock
mov
imul
push
or
dec
ret
lret
stos
mov
cmp
stos
pop
ret
aas
lret
cmpb
cmpb
cmpl
jo
jb
adc
lcall
lea
stos
jp
sbb
jle
mov
jle
jp
cwtl
sbb
mov
iret
dec
rolb
jecxz
mov
jp
aas
sub
jmp
xchg
jge
bound
inc
push
sbb
sbb
mov
lret
add
ljmp
push
repz
ljmp
mov
nop
sahf
dec
xor
dec
cltd
mov
sbb
mov
adc
repnz
shrb
sbb
xor
sbb
jp
imul
jp
cmp
mov
in
xchg
or
fisttpll
dec
in
mov
inc
insl
inc
pushw
insl
push
insl
fsubrs
icebp
xchg
fnsave
sbb
add
xchg
sahf
loope
test
outsl
push
repz
cwtl
jg
sar
xchg
or
ja
loop
or
cli
mov
es
mov
jmp
xchg
sub
mov
aad
fists
cli
xchg
add
pusha
jge
je
xlat
sbb
lret
je
repnz
jo
sub
in
push
leave
add
jae
lret
test
ret
or
xor
jg
or
push
sbb
dec
or
xchg
repz
out
xor
jne
je
cmp
test
leave
pop
cmp
sub
lods
test
int
pop
arpl
jmp
lods
push
mov
dec
mov
and
push
jmp
pop
cli
clc
add
call
ds
xchg
dec
xchg
adc
mov
mov
jnp
aad
jecxz
xor
or
icebp
in
stos
xchg
loopne
xchg
and
jne
jo
mov
dec
mov
outsb
adcb
popa
das
push
jle
adc
mov
ds
xor
cli
or
lods
mov
push
int3
xor
fsts
push
mov
and
sti
leave
add
xchg
xor
jmp
add
xchg
lods
ljmp
ds
outsb
mov
dec
cli
sub
dec
and
repnz
jne
stos
data16
inc
dec
in
cmp
cmp
push
pop
mov
xor
ss
fcmovnb
loop
pop
imul
sbb
cltd
mov
sbb
dec
sbb
jns
dec
cwtl
mov
ficompl
inc
xor
push
mov
stos
dec
mov
lahf
dec
dec
ljmp
and
dec
dec
ret
fwait
mov
mov
lret
fsubrl
dec
mov
clc
mov
mov
adc
out
bound
loop
jne
jnp
adc
xor
xchg
sub
mov
jmp
cwtl
ret
xchg
pop
xchg
lcall
jp
fwait
sbb
ret
pushf
sbb
fwait
jns
mov
addr16
mov
push
mov
adc
lret
loop
bound
cmp
adc
push
mov
inc
and
jnp
adc
insl
adc
mov
imul
add
cwtl
adc
sbb
lret
push
iret
cmp
repz
sub
sahf
jmp
adc
mov
add
inc
cwtl
or
fs
jns
push
lret
fiadds
cmp
stos
adc
mov
test
inc
or
ret
repnz
xor
xchg
inc
arpl
push
adc
adc
lock
movsb
inc
dec
dec
inc
cs
dec
pop
mov
cmp
pop
rcrb
imull
dec
aas
or
inc
das
or
mov
lret
sbb
mov
add
mov
inc
ret
fisubrl
and
stos
jmp
dec
dec
lret
arpl
push
sub
clc
sub
cmp
jg
das
adc
xchg
xor
push
mov
xchg
ret
adc
fwait
sbb
nop
xor
ljmp
mov
mov
sahf
mov
sbb
mov
dec
dec
xchg
outsb
push
les
and
push
or
std
jecxz
mov
mov
lret
or
xor
movsb
lods
sahf
mov
insb
aas
adc
imul
icebp
inc
or
dec
cltd
rcr
shrl
xlat
stos
fwait
dec
lahf
and
xor
cmc
cmp
addr16
cmc
cmp
icebp
push
cmp
shl
or
loop
add
sub
cmp
loopne
adcb
inc
sub
fiaddl
jno
sti
enter
fidivl
xchg
fldenv
stos
ret
jle
rcrl
sarb
sub
leave
xorb
mov
pop
push
mov
and
add
out
sub
pop
push
sbbl
and
push
imul
or
xchg
adc
je
lahf
movsl
xor
ss
mov
sti
jbe
outsb
mov
repz
pushf
fs
pop
or
jo
ret
and
jo
pushf
jmp
mov
popa
test
mov
xor
jecxz
flds
lahf
push
jns
mov
outsb
cwtl
mov
testb
push
sbb
mov
cmp
adc
dec
movsb
lret
pop
jp
pop
shlb
push
jb
test
xor
test
mov
push
pusha
push
popa
mov
loope
jmp
dec
decl
scas
mov
imul
adc
filds
jle
xlat
xchg
je
out
jbe
movsb
xlat
mov
shl
xor
mov
addr16
cli
dec
push
out
add
mov
and
ds
scas
inc
aad
sbb
pusha
lcall
dec
jmp
aas
or
pop
lret
fs
pop
xchg
jo
push
out
xor
mov
sti
xorl
add
xchg
mov
and
adc
in
cmc
mov
and
cmpsb
push
mov
sub
fcmovne
movsl
roll
test
je
push
in
jmp
pop
stos
inc
sub
loop
mov
or
stc
xor
jbe
cltd
xchg
cmp
clc
ss
stos
out
sub
mov
mov
in
inc
push
nop
das
add
push
inc
sbb
adc
sahf
or
int3
push
in
pushf
cli
movsb
xlat
in
loop
lds
fisubrs
test
dec
pop
scas
mov
shll
fists
dec
jp
ss
out
sub
adc
sbb
mov
ss
sbb
pusha
push
shr
or
inc
pop
pop
addr16
or
ja
adcb
sti
test
out
dec
in
outsb
push
jmp
xor
cmpsb
cltd
or
cmpsb
push
lock
push
xchg
jle
enter
dec
xchg
adc
lret
jae
jge
fisttps
shlb
mov
or
or
xchg
mov
inc
cltd
pop
dec
mov
jge
sub
add
aam
cs
loopne
fucomp
and
loopne
mov
pop
jno
inc
dec
pop
sbb
ret
mov
cli
hlt
scas
mov
pop
or
mov
cmp
adcb
jmp
mov
pop
cltd
cs
sbb
dec
and
ret
dec
in
sbb
mov
adc
cmpsb
push
xchg
outsl
enter
lahf
xchg
pop
loopne
sub
adc
xor
push
frstor
dec
mov
cltd
cld
push
enter
pop
sarb
lahf
es
dec
roll
cmpb
test
pop
sbb
aas
push
insl
jae
jmp
les
lret
lcall
addr16
jg
push
or
lea
jns
mov
inc
cmp
cli
imul
cmp
popa
or
and
dec
idivb
das
sub
jmp
mov
and
add
mov
scas
adc
xchg
imul
inc
push
lcall
rorl
or
sbb
jle
mov
xor
inc
mov
test
mov
notl
xor
loop
push
xor
out
adc
fs
stc
dec
jae
dec
cli
sub
dec
iret
sbb
or
sarb
cmc
arpl
les
shll
push
ret
and
punpckhbw
shl
movsb
int
dec
lcall
dec
jmp
mov
inc
push
out
out
jmp
jo
xchg
jp
jg
test
inc
ja
adc
mov
fwait
test
in
mov
xor
mov
or
adcl
jns
mov
jg
mov
inc
test
orl
and
lret
fwait
push
push
scas
jns
sbb
popf
xchg
jl
cmp
inc
test
mov
add
push
loope
fadds
movsb
and
scas
je
in
xchg
imul
je
pushl
jg
test
dec
fiaddl
stos
in
aas
test
repz
fwait
mov
fs
cmpsl
daa
pop
xchg
inc
in
dec
cltd
in
xchg
imul
and
rcrb
mov
notb
flds
xchg
sbb
and
push
jecxz
xchg
fdivr
loope
adc
xor
jmp
and
popf
cmpsb
adc
dec
roll
xor
arpl
mov
and
loope
xlat
pop
mov
sub
andl
lods
ds
lret
push
adc
lea
cmpsb
jo
dec
jae
ret
imul
fnstcw
or
pop
imul
ret
addr16
push
mov
inc
or
aad
fisttpl
or
inc
sbb
addl
mov
lcall
scas
inc
popf
inc
int
lret
pop
push
ret
or
in
lcall
repnz
pushf
and
lcall
aam
sbb
dec
inc
sub
popa
stos
lcall
adc
add
out
and
mov
push
mov
mov
sti
and
cmp
add
movups
scas
lret
outsl
iret
std
pusha
loop
icebp
sbb
repnz
add
push
xor
insb
inc
push
cmp
pop
int3
and
je
cwtl
pop
arpl
mov
fldenv
mov
roll
or
pop
xchg
adc
inc
mov
jmp
mov
inc
and
lret
lods
mov
fsubs
mov
cmp
push
es
pop
xchg
in
inc
mov
in
fidivl
mov
ds
lcall
inc
pop
nop
shlb
int
fwait
lret
hlt
jae
pushf
std
sub
cli
pop
pop
mov
or
int3
adc
imul
mov
fwait
sbb
ret
div
cmpsb
cmp
sti
dec
adc
or
cmpl
mov
xchg
pop
lods
ret
jnp
out
enter
ret
push
movsb
add
xor
inc
xchg
lods
les
jp
add
faddl
inc
xor
or
jnp
cli
and
in
sar
gs
sbb
jp
lret
pop
test
sub
add
sbbl
jmp
sbb
adc
mov
and
dec
lds
sub
lret
data16
addr16
mov
mov
pop
das
std
or
out
les
mov
xlat
dec
mov
nop
jp
and
sbb
dec
mov
pop
cltd
hlt
xchg
fstpt
fcmovne
pop
xor
mov
decl
xchg
scas
push
mov
push
fwait
push
jl
or
pop
enter
fldenv
dec
or
loope
xlat
cwtl
movsb
dec
cmp
sbb
gs
sub
shrb
andb
mov
push
in
jnp
cmp
mov
fidivrs
mov
pop
dec
aad
mov
ss
add
aaa
dec
or
es
cmp
mov
inc
or
cmpsl
inc
fwait
adc
mov
sub
mov
add
sbb
outsl
xchg
or
mov
mov
lods
jge
int
and
lahf
leave
xlat
gs
lds
inc
jp
les
lret
adcb
fwait
clc
or
pop
push
repnz
xchg
adc
icebp
sbb
roll
rcrl
outsb
xchg
inc
sbb
mov
cmpsb
icebp
xor
inc
arpl
jnp
sti
xor
inc
jo
cmpsb
mov
xor
sbb
movsl
mov
jecxz
lahf
and
mov
out
push
in
cltd
dec
jmp
push
rcl
mov
data16
adc
mov
and
test
sahf
inc
pop
push
pushf
dec
mov
stc
cltd
xchg
xorl
xchg
stos
mov
popf
mov
shlb
push
jae
in
test
ret
xchg
imul
jne
dec
xor
test
mov
or
imul
lods
cli
insb
jecxz
jns
sbb
cmp
icebp
jp
rcrb
das
dec
aam
rorl
das
jmp
stos
cmp
fwait
pop
xor
xlat
xorb
and
mov
or
sub
out
je
dec
movsl
pop
jbe
mov
inc
push
test
daa
aaa
outsb
pop
adc
lahf
fimull
out
push
lahf
adc
mov
lcall
into
and
jo
pop
mov
pop
mov
xor
gs
and
stc
ret
dec
dec
and
mov
lret
push
push
dec
out
dec
cmp
nop
dec
ss
enter
lcall
xchg
xchg
sbb
rcll
test
lret
mov
or
test
mov
pop
sbb
jne
cmp
loop
out
mov
jg
cli
pop
cltd
or
ret
pop
xchg
in
popa
sar
add
mov
cmc
jle
fbstp
loope
adc
int3
push
pop
jmp
lret
pop
mov
sub
cld
push
adc
insl
cmpsb
out
or
adc
mov
jo
xlat
ss
jmp
push
or
mov
in
cmp
call
xchg
mov
adc
jae
push
into
insl
enter
inc
jne
mov
dec
or
sbb
addl
pop
lahf
arpl
pop
ds
roll
xchg
fldcw
inc
xor
sti
outsb
and
movsl
jmp
fwait
test
ljmp
nop
in
or
inc
jae
test
addr16
in
jns
pop
std
ret
xor
mov
or
sbb
in
cwtl
and
mov
inc
dec
loope
shll
les
fbld
add
inc
jno
cmp
xor
sub
xor
adc
cmp
xchg
fildll
and
out
push
out
and
in
std
sub
adc
xlat
push
fwait
std
jno
xor
incl
in
cwtl
add
cwtl
test
test
sbb
or
outsb
xlat
lods
outsl
js
push
or
orb
jl
in
loope
mov
dec
pop
ds
mov
xchg
pusha
xor
sbb
xchg
jle
xor
idivl
mov
je
cmp
mul
stos
pop
sub
imul
xchg
lcall
lock
addr16
call
lods
leave
push
pushf
pop
pop
in
das
cmp
xor
cmp
js
aad
adc
adc
aam
sti
pop
cmp
adc
and
mov
repnz
call
dec
testl
out
xor
adc
adc
es
or
dec
pop
or
decl
sub
jmp
mov
stos
shl
cmp
mov
xchg
push
out
out
into
mov
lods
call
or
or
mov
clc
cli
pop
sub
pop
or
or
add
fbld
xor
imul
sub
flds
into
lahf
addl
or
out
aas
sub
jns
ljmp
inc
ret
dec
xchg
sar
xor
es
int
mov
cmp
dec
lret
mov
in
out
jmp
popa
xlat
insl
and
mov
orl
test
xor
lock
jl
push
mov
sbb
aam
jl
fs
sbb
addr16
cltd
xchg
sbb
mov
push
lods
xor
lds
nop
je
mov
sbb
push
and
fwait
xor
sub
loope
mov
data16
loop
and
adc
sub
and
cmpsl
jge
mov
inc
test
mov
das
stc
ds
jnp
and
dec
and
jae
jp
lahf
mov
pop
jmp
jnp
jl
pop
repnz
add
cli
lret
call
xchg
gs
iret
icebp
int3
push
mov
insl
mov
or
pop
gs
pop
lret
jae
or
cmc
add
add
cmp
aad
cli
andb
dec
push
loope
push
adc
test
or
mov
fidivrs
into
enter
jb
pushf
mov
leave
sub
mov
mov
adc
push
or
push
cwtl
adc
pop
sahf
out
dec
lods
insb
jno
dec
in
cmpsl
loopne
sub
aaa
dec
mov
aas
cli
mov
mov
dec
mov
or
sti
jge
scas
pop
outsl
fcmovne
mov
sub
sub
movl
jae
and
je
fwait
inc
jmp
mov
push
nop
adc
mov
fcomp
loopne
cmp
movb
nop
xchg
fwait
pop
lods
mov
adc
mov
cmpsb
inc
mov
loope
pop
mov
inc
jae
xchg
push
stos
jne
arpl
mov
lods
int3
cmp
cld
mov
cmp
mov
cmc
or
fcoms
test
lock
xchg
out
xlat
aad
jmp
or
test
lods
int3
xor
mov
mov
xchg
inc
dec
add
sub
into
add
or
xor
or
out
xor
mov
cmp
jmp
dec
cmp
mulb
mov
or
cld
adc
adc
addr16
clc
or
ret
pop
sub
test
sbb
pop
imul
aad
lahf
imulb
inc
insb
shll
sbb
dec
popf
mov
xchg
dec
xor
push
xchg
or
or
xlat
cmp
inc
adc
lods
dec
xor
sti
cmpb
imul
cmp
out
cmp
add
lds
push
sbb
or
lahf
rorb
rol
jns
push
shlb
jmp
mov
iret
fdivs
test
call
imul
and
pop
popa
cwtl
ljmp
push
dec
add
mov
adc
xchg
mov
lcall
enter
xchg
out
inc
lret
xor
mov
jnp
mov
or
rol
jb
dec
inc
repz
sub
aaa
cmp
aaa
lcall
les
dec
rcll
mov
inc
cli
jmp
call
rcrb
mov
jae
mov
stc
fs
aad
sbb
jmp
xchg
sti
rcrl
les
movsl
mov
or
sbb
lcall
enter
sahf
jp
mov
pop
add
bndldx
test
cmp
ficoms
movsb
xchg
stc
inc
cli
sub
adc
or
adc
push
negb
cld
sub
daa
push
cmp
cmp
xor
pusha
jb
push
push
lock
cli
repnz
cli
subl
cmp
pop
jmp
push
push
pop
in
push
out
test
mov
inc
les
or
sbb
mov
push
stos
add
inc
leave
negl
popf
cmp
or
movsl
mov
jl
sub
insl
xlat
or
ret
adc
es
mov
popf
mov
xor
ljmp
and
mov
add
je
jmp
repnz
shll
rcr
fisubrl
out
dec
jmp
fxch
xchg
mov
xor
mov
xchg
pop
inc
xchg
or
add
xor
ljmp
push
add
pop
or
inc
dec
lods
xor
push
mov
mov
cld
cmc
xor
or
push
ret
xor
fisttps
xor
xlat
mov
imul
out
negl
into
xchg
loopne
orb
fbstp
add
adc
sub
dec
addr16
gs
and
cmp
fcom
xor
mov
inc
mov
cltd
jmp
dec
mov
adc
jae
ss
push
std
pop
xor
mov
or
adc
lcall
fwait
scas
cmp
xchg
arpl
add
push
mov
adc
or
xchg
dec
mov
jmp
in
mov
imul
scas
mov
and
or
fsubrs
imul
xchg
inc
std
xor
inc
xchg
or
inc
pop
lcall
mov
cmpsb
inc
xor
leave
cmp
lds
jnp
jmp
inc
or
add
push
cmc
jp
loope
jmp
jle
mov
out
jno
sbb
mov
decl
shr
pop
and
into
out
jb
add
jbe
or
dec
mov
mov
bound
sbb
imul
arpl
xchg
and
and
or
hlt
sbb
cs
sbb
push
cmp
fdivp
or
pop
inc
dec
dec
sub
inc
mov
sub
pop
cli
mov
icebp
fwait
adc
and
scas
sbb
inc
inc
adc
mov
in
dec
movsb
adc
cmpsb
mov
fldl
lret
pop
push
sbb
push
popa
es
cmp
inc
sbb
sbb
stos
daa
gs
or
sti
push
mov
dec
jmp
push
je
adc
mov
imul
fnop
cltd
lcall
mov
sub
adc
xor
jo
por
jp
outsl
xor
xchg
inc
lcall
movsb
out
mov
xor
out
test
mov
jecxz
push
fisubl
cmpsb
inc
popa
fistl
inc
into
jmp
mov
js
cmc
repnz
in
dec
cmp
and
jne
xor
mov
sbb
or
mov
lret
pop
mov
into
inc
xchg
call
sbb
lret
mov
or
cs
aam
insl
jg
pop
dec
aaa
sti
das
push
cmpsb
jge
mov
or
mov
cmp
and
mov
aam
cltd
adc
mov
cmpsl
popa
or
inc
adc
dec
mov
mov
push
mov
jg
jecxz
cmp
out
stc
dec
leave
or
push
inc
inc
sbb
sarb
test
jmp
pop
mov
cmp
scas
les
or
pop
imul
sti
pop
mov
or
xor
and
dec
fwait
and
subl
xchg
adc
sbb
jns
mov
inc
data16
cmp
in
pop
dec
xor
rcrl
push
andb
out
lock
cmpsl
cltd
fwait
adc
or
enterw
dec
push
dec
xor
mov
dec
lods
xchg
repnz
adc
xorb
aad
out
inc
or
gs
mov
cmp
dec
adc
inc
or
push
out
mov
mov
or
adc
or
jmp
xchg
stc
xchg
cmpl
xchg
or
movsl
fmull
cwtl
and
std
fdivl
inc
cmpl
or
push
jmp
mov
andl
sub
xlat
mov
lret
ds
sahf
cli
pushf
sub
cmp
xor
mov
out
and
aaa
or
mov
dec
rcrl
inc
mov
jno
out
mov
out
jae
lea
pop
orb
mov
push
pop
sbb
mov
aad
cmp
inc
push
popa
pop
mov
xchg
hlt
aad
or
xchg
rorl
cmp
inc
decb
in
mov
cmpsb
lock
dec
mov
ja
ljmp
jae
leave
mov
shrl
xchg
cld
lds
adc
mov
and
in
arpl
test
inc
mov
push
pop
stc
jbe
aam
and
enter
adc
jg
pop
inc
popa
cltd
xlat
jmp
imul
adc
sbbb
test
into
mov
mov
icebp
in
mov
mov
or
fldenv
leave
mov
push
into
inc
cs
dec
or
mov
adc
sbb
xlat
or
andl
adcb
inc
dec
and
jne
or
pop
mov
jmp
ljmp
mov
test
push
lret
aas
mov
or
stc
shrl
push
jno
test
mov
add
icebp
xchg
push
add
add
mov
sub
or
jmp
movsb
lea
jbe
pop
lock
xchg
cmp
cli
or
addr16
mov
mov
repz
fwait
cmp
cltd
or
and
lods
pop
cltd
pop
mov
in
pop
insb
out
inc
into
cs
ret
mov
cs
jbe
xchg
lcall
adc
mov
sbb
xchg
ds
sub
adc
cli
sahf
pop
movsl
jecxz
push
pop
fs
mov
loope
shll
xor
jb
aas
push
insb
mov
ret
mov
cmp
and
mov
fwait
mov
xchg
or
out
pop
arpl
inc
fcomps
out
cli
and
pop
mov
or
inc
xor
adcb
or
negl
dec
cmp
jne
jbe
inc
mov
mov
or
in
cli
jg
out
jmp
scas
mov
mov
inc
pop
and
sbb
in
iret
xlat
lods
or
int
repnz
jo
sbb
rclb
nop
pop
xchg
cli
xchg
lods
push
pop
dec
or
mov
mov
jle
ja
or
dec
or
inc
fsubrl
push
push
into
sbb
add
mov
cmp
mov
out
dec
outsl
inc
cs
push
xor
or
les
outsb
adc
inc
or
notb
clc
iret
daa
out
lods
shlb
mov
mov
nop
lcall
scas
push
mov
iret
and
imul
xor
test
xchg
imul
sbb
sbb
fildll
jb
mov
rcr
les
sub
cmc
mov
fwait
or
stc
mov
and
cmc
test
and
repz
stos
movsb
push
fs
test
sarb
out
ret
lods
sub
adc
clc
push
push
icebp
mov
fnsave
push
mov
xlat
pop
and
mov
pop
insl
cmp
mov
int
arpl
into
xor
test
lcall
or
cmp
xchg
xchg
inc
push
insl
xor
pusha
xor
cmp
push
jl
pop
mov
clc
xchg
lahf
jo
inc
and
or
jbe
inc
push
jb
decb
or
nop
out
mov
pop
inc
pop
insb
jl
scas
out
cli
mov
push
xor
in
fists
pop
cli
pop
push
mov
into
adc
or
fimull
push
and
inc
push
pushf
insb
test
sbb
mov
in
test
pop
jmp
test
mov
fsubrs
xor
imull
jg
jo
lcall
xchg
mov
sub
fistps
pop
outsb
inc
cltd
dec
pop
dec
bound
adc
rcr
or
mov
dec
dec
test
js
loopne
cld
xlat
sub
test
pop
sub
jmp
push
xchg
mov
mov
adc
in
or
inc
fwait
adc
out
cmpsb
sub
dec
cmp
test
mov
sbb
bswap
adc
or
xchg
mov
lret
jl
cmp
lret
ret
inc
sbbl
ds
push
stos
out
mov
cmp
pusha
sbb
test
dec
jg
push
push
pushf
stc
pusha
in
mov
sub
mov
inc
leave
xor
xor
icebp
mov
cwtl
push
in
mov
xor
inc
inc
jno
cmp
jmp
testl
cmp
sub
arpl
sbb
or
lcall
mov
adc
jns
incl
push
out
js
pusha
out
mov
ds
xchg
popf
loope
call
fistpll
inc
or
cltd
add
mov
xorl
lcall
std
lahf
aad
jbe
and
pop
loope
xchg
cmc
and
daa
mov
mov
lds
push
and
jae
les
cmp
test
pop
loope
lahf
js
cmp
mov
arpl
xor
jmp
push
cmp
xchg
mov
sbb
inc
xchg
cld
gs
push
je
mov
push
mov
popa
stos
lods
icebp
jp
jmp
or
xor
aas
mov
add
sbb
xchg
push
sub
dec
cmp
loopne
movsb
or
mov
clc
mov
stc
mov
jbe
cmp
jle
into
sahf
ds
or
in
xchg
mov
daa
sahf
adc
sub
jno
mov
jg
scas
pop
rorb
dec
scas
push
into
mov
das
dec
or
jo
sub
jecxz
ffreep
cmpsb
jle
xchg
add
mov
popa
je
sbb
or
cmp
sbb
mov
mov
cmp
sti
imul
out
data16
cmp
mov
pushf
pusha
mov
push
adcb
add
stc
aad
or
push
dec
push
add
lahf
cli
popl
xchg
dec
pop
dec
bound
mov
aam
mov
cltd
xchg
movsl
dec
fbstp
or
inc
xlat
cmpsl
jmp
mov
pop
inc
out
xchg
adc
cmp
sub
jmp
pop
push
xchg
pushf
gs
mov
xchg
mov
and
pop
pop
xchg
push
shl
pop
ret
hlt
mov
push
bound
lcall
in
test
mov
and
xorl
bound
mov
scas
mov
outsb
fwait
cli
fldl
mov
mov
les
xchg
and
inc
sti
arpl
xorb
xor
sub
fwait
pop
les
cmp
mov
xor
popf
or
mov
mov
push
push
or
pop
mov
es
leave
ljmp
dec
je
pop
mov
outsb
pop
int
loope
sbb
adc
lods
sub
cmc
cmp
icebp
fisttpll
cwtl
mov
cmp
xor
mov
mov
call
or
and
fisubl
cmc
push
cmpsb
popf
fwait
push
and
dec
pop
std
shll
cli
or
xor
stos
cmp
mov
add
jmp
or
dec
or
pop
dec
and
mov
sub
sbb
js
mov
inc
dec
enter
fcomip
mov
into
dec
aad
mov
or
fwait
jo
or
pop
dec
mov
add
ja
cmp
mov
sbb
or
sbb
push
aas
jle
inc
stos
pop
jbe
cwtl
inc
ret
push
out
test
les
jno
arpl
dec
xorl
aad
jmp
push
lahf
cmp
or
dec
aas
jmp
es
jae
or
popf
xor
dec
fnsave
insl
pop
adc
mov
ds
incl
jno
rorl
loopne
adc
pushf
outsl
lret
mov
enter
rcr
lret
sbb
cli
bswap
cmp
xchg
dec
repz
pop
mov
jl
movsl
movb
cmp
loopne
test
sub
pop
inc
pop
xchg
outsl
cwtl
jmp
cmp
les
mov
movsb
out
bound
sbb
mov
cmp
or
sbb
dec
add
fisttps
das
adc
mov
jg
les
lcall
mov
adc
in
xchg
pop
lock
mov
divl
rcll
loop
stc
jg
push
fwait
jmp
call
in
xchg
in
mov
or
mov
imul
inc
lods
or
out
or
sbb
dec
push
cltd
stos
xor
call
jmp
jne
out
sub
push
dec
push
jo
stos
xchg
xchg
and
rclb
or
mov
lahf
dec
jg
adc
dec
sbb
xor
xorl
dec
pop
test
fidivrs
je
xlat
mov
fs
mov
mov
xchg
call
adc
call
rcrl
mov
mov
fnsave
inc
or
and
popa
dec
mov
les
cmpl
and
add
fstl
jecxz
xlat
or
jp
mov
fimull
arpl
cwtl
cmpsb
aaa
test
jo
xchg
leave
cmpsl
repz
push
fst
mov
push
mov
flds
in
ss
or
pop
jae
and
sbb
inc
pop
js
xchg
adc
mov
push
xor
add
add
push
xor
sbb
add
fildl
ret
orb
xchg
jmp
mov
or
and
inc
outsl
sbb
pop
mov
jo
enter
add
jb
mov
or
pop
clc
cmc
clc
cmp
icebp
mov
inc
aaa
and
out
loopne
sub
stos
ret
or
jmp
dec
rol
pop
negl
mulb
das
aas
shlb
or
jbe
add
dec
jle
rcrl
dec
xchg
mov
lea
sub
push
icebp
sbb
or
mov
mov
cmpb
fwait
dec
jno
fidivl
cmp
aas
and
sti
or
mov
data16
or
paddusw
data16
dec
cmpsb
dec
adc
icebp
outsb
imul
cmpsl
push
mov
jp
or
movsl
nop
lds
loopne
test
into
or
lret
mov
cmpsb
dec
cld
xchg
cmp
loop
hlt
pop
jne
sbb
outsb
sbb
int
test
dec
sahf
ja
or
and
adc
negl
jae
rorl
adc
jg
add
ds
xor
add
jp
pop
cmp
repz
jp
or
pop
adc
add
sub
pop
push
stos
ds
xchg
insb
cmpsl
cmp
in
stos
fnstcw
rcrl
cmpxchg
inc
dec
mov
data16
inc
cmp
mov
lds
dec
das
loop
or
scas
sbb
xor
sarb
add
xor
push
lcall
inc
sbb
sbb
pop
sub
jge
add
jae
xor
push
inc
pop
or
dec
cmp
lds
pusha
pop
fwait
mov
es
das
sbb
fists
clc
repnz
jle
jns
mov
xchg
sarb
leave
push
mov
jnp
scas
inc
lea
mov
repnz
sbb
inc
clc
mov
or
clc
cwtl
push
push
inc
sbb
xchg
mov
mov
int
ds
cmp
lret
or
movntps
jo
ljmp
and
pop
sahf
pop
mov
test
iret
sbb
sarb
pop
mov
sub
mov
sbb
adc
test
cmp
sub
and
cmp
xor
and
jle
push
jne,pt
and
push
mov
sbb
mov
sbb
mov
stos
dec
sbbl
rcrl
nop
cltd
jbe
cmp
sbb
dec
pushf
add
mov
xor
ficoml
or
mov
sub
fldl
aam
mov
pusha
or
dec
shll
push
dec
push
adc
pop
cmp
cmovl
aam
mov
xchg
add
insl
jmp
sbb
or
cmp
xor
pop
out
xor
dec
xchg
or
push
btr
cmp
cmp
nop
dec
push
icebp
push
mov
fsubrl
pop
imulb
inc
sub
or
vmovddup
cmp
stos
mov
cmp
inc
adc
or
or
sahf
push
inc
bound
das
lcall
sbb
js
jl
sbb
rolb
out
ficompl
inc
sbb
sbb
xor
add
loopne
xchg
fwait
sub
sbb
repz
sbb
cmp
and
dec
cli
sbb
ret
jg
add
sti
inc
sbb
mov
ja
sbb
subb
lds
xor
mov
and
jo
mov
ret
xor
add
xchg
cmp
jp
adc
dec
adc
mov
sub
push
mov
jnp
cmp
popa
add
add
inc
scas
cmp
xor
ss
sub
jge
push
cmp
xchg
into
insl
test
pop
or
add
dec
dec
sbb
aaa
mov
repnz
in
pushf
cmp
inc
push
sbb
lcall
sub
outsl
lds
pop
push
sbb
mov
cmp
iret
cmp
cmp
sarb
jno
cmp
sbb
cmpsl
jo
sbb
outsl
ss
adc
jne
inc
dec
orb
mov
jns
xchg
fwait
mov
cmp
mov
pop
lret
lea
and
adc
sarl
adc
out
adc
xor
adc
imul
jne
ret
cmp
stc
orb
sub
pop
sti
xor
std
aad
xor
cmp
cmp
jecxz
mov
sbb
pop
lcall
push
jno
mov
sbb
cmp
fidivrl
cli
dec
inc
jecxz
dec
jne
push
fistpl
cmp
cmp
and
iret
adc
dec
sti
dec
dec
js
mov
ds
lds
push
jnp
sbb
xor
jo
mov
push
xor
hlt
aad
cmp
or
adc
arpl
and
xchg
mov
aaa
je
xor
fldz
mov
mov
dec
sub
negb
pop
sub
lret
cmp
in
cmp
movsb
add
cltd
and
xor
stos
sub
cwtl
lods
dec
jp
push
pusha
shll
hlt
and
cmp
icebp
mov
shl
mov
mov
jae
mov
hlt
jge
dec
mov
pop
mov
mov
jge
imul
lea
sbb
sub
xchg
popf
mov
dec
adc
xor
mov
cmp
mov
cmp
jg,pn
cmp
jno
inc
sbb
jl
insb
popf
xchg
adc
jne
ret
ds
in
sti
pop
xor
lret
scas
ja
fsubp
mov
cli
xor
mov
pop
js
sbb
ds
jmp
mov
add
pusha
adc
je
outsb
xlat
cmp
jo
push
mov
aaa
jmp
cmp
sbb
cmpsl
ficomps
pop
lock
int
or
xor
sarb
std
cmp
cltd
mov
cwtl
pop
cmpsl
jp
filds
lea
xor
dec
jns
jl
sbb
cmc
divl
sub
jo
xor
sub
dec
test
inc
into
adc
dec
int3
pop
jle
ds
add
adc
jmp
and
lods
xchg
xor
and
cli
comiss
sarl
es
push
add
call
dec
aaa
jb
push
cmp
imul
adc
arpl
es
inc
sti
sub
fsubrs
ss
xor
mov
cmp
stc
lods
js
mov
stos
xchg
fldz
mov
out
jp
pop
and
push
xor
cmp
out
cmp
mov
es
mov
fwait
sbb
dec
fistpl
adc
mov
repnz
and
dec
test
cmp
pop
pusha
ds
mov
push
fnstsw
mov
mov
cmp
push
sbb
stos
ret
cli
cmp
cmpsb
js
lea
jmp
nop
cs
rcll
cmp
shl
mov
divl
sub
insl
inc
add
jae
push
out
test
sub
loope
inc
lock
icebp
cltd
sbb
rcrb
les
lods
stc
test
sub
cmp
imul
xor
loope
in
outsb
cmp
pop
xor
mov
sub
clc
stos
iret
cmp
fcoml
ret
pop
mov
mov
lds
xlat
mov
pop
cli
test
sub
jp
test
push
in
xchg
cmp
pop
cmp
cmpsl
je
push
test
ffree
lahf
cmp
lret
pop
lods
jle
cmp
jae
in
mov
lock
xor
mov
mov
ret
jecxz
aas
and
les
mov
adc
and
push
jp
sahf
and
cmpsb
dec
cmp
xor
cmp
push
cmp
fwait
test
push
jp,pn
cmp
xor
cmp
int
cmp
mov
in
aam
add
dec
dec
or
add
iret
xor
cmp
mov
mov
cmp
mov
push
cmp
pop
add
loope
js
mov
in
xor
dec
enter
aad
cmp
pop
cmp
mov
aaa
mov
or
daa
sti
divl
or
repz
push
and
mov
sbb
cmp
popf
enter
ljmp
loopne
xlat
mov
sbb
out
add
cmp
loop
out
sbb
xor
in
push
cmpl
cld
aad
jg
stos
lret
xor
and
cmp
lret
mov
lahf
dec
cmp
mov
outsb
dec
shlb
mov
nop
loope
xor
ds
out
and
movsb
cmp
add
xlat
popa
stos
loop
repz
jb
imul
clc
js
fdivs
jecxz
dec
mov
pop
aas
sub
xor
js
jmp
push
xchg
test
ja
cmp
push
xor
dec
or
cmp
dec
aad
jp
bound
xor
ss
push
sti
movsl
or
cmp
mov
in
push
dec
aaa
aad
sbb
rcr
es
and
cmp
push
insb
hlt
shlb
mov
outsb
inc
aas
out
daa
stos
aam
cmp
push
in
xor
cltd
xlat
push
pop
sub
cmp
aad
sbb
mov
sbb
dec
push
lahf
sub
sbb
xor
adc
push
push
aad
sub
add
inc
dec
fisttps
dec
inc
xor
dec
adc
mov
lea
jge
sbb
sub
in
pop
mov
cs
xor
loop
mov
cmp
shr
sub
sahf
lret
jb
in
lds
and
jmp
mov
mov
and
dec
xchg
or
jmp
or
out
dec
ss
cmp
aad
push
daa
mov
out
mov
push
and
mov
mov
sub
test
pop
cmpsb
lods
cmp
xchg
push
add
mov
jmp
sarl
mov
or
in
lds
aad
dec
std
jo
addb
out
xor
out
clts
jp
jge
pop
in
xlat
pop
sbb
repnz
push
xor
jmp
decb
out
rorl
xor
jmp
or
jg
push
les
jg
call
pop
fs
pop
aad
mov
xlat
pop
mov
lret
data16
pop
or
push
aad
inc
mov
xlat
scas
sbb
push
cmp
pop
out
adc
iret
imul
pop
es
cmp
push
lds
mov
xlat
fidivl
sub
mov
in
sbb
in
aad
imul
out
or
out
and
dec
jbe
mov
add
push
out
and
inc
inc
sbb
cmp
adc
ds
jne
cmp
iret
xor
loopne
sbb
lret
fistpll
inc
cmp
mov
insl
cmp
xor
xor
inc
aad
push
subl
and
out
cltd
sub
xor
fwait
ds
sarb
popf
and
sbb
inc
cmpsb
inc
scas
xchg
jmp
fcmovne
int
xchg
add
mov
push
lods
mov
jp
cmp
test
aad
das
jp
arpl
jmp
icebp
out
dec
mov
stos
std
in
iret
js
xor
in
sub
aad
inc
js
dec
fidivrl
xlat
pushf
jmp
sbb
fstpt
lods
mov
outsb
xor
mov
ffreep
loope
mov
add
subb
out
cmp
jecxz
mov
push
cmp
cmp
adc
xor
cmp
sbb
in
mov
ss
adc
push
cmc
es
adc
push
xor
stc
in
mov
mov
icebp
jecxz
jmp
repz
xor
lods
fs
aas
cmp
shr
add
jp
xchg
cmp
inc
in
mov
fucomp
dec
or
pop
fstpt
sti
leave
loope
add
mov
dec
adc
les
in
lret
xor
mov
in
lcall
in
sbb
cmp
negl
xchg
std
lret
movsb
jecxz
push
fdivrl
in
fistl
cmp
jp
js
aas
pushf
loope
jl
push
xor
mov
iret
mov
jbe
push
outsb
icebp
popf
mov
sub
sbb
or
xlat
push
or
les
push
lret
dec
jge
mov
dec
outsl
jmp
ds
jp
jg
sub
jbe
sub
adc
scas
rcrb
xor
and
in
cmpl
jmp
cmp
or
dec
sbbl
xor
push
in
scas
mov
out
dec
jns
inc
insl
cmp
popf
loope
test
mov
dec
dec
inc
jp
sub
cmpsb
mov
loope
repz
cmp
sbb
jmp
rorl
cmp
push
mov
push
pop
cmp
loope
mov
test
xlat
jecxz
and
loopne
jae
cmp
xor
pop
sbb
scas
add
mov
call
jecxz
fldt
insl
pop
dec
stos
cmp
sbb
out
dec
ljmp
arpl
and
test
add
pop
imul
popf
leave
scas
cmp
jmp
adc
cwtl
inc
pop
fidivl
fcoms
gs
in
int
inc
cmp
jmp
sbb
mov
in
sub
in
repz
dec
insl
inc
mov
lret
aam
and
aad
push
ja
cmp
repz
popa
jp
jno
push
xor
push
idivl
dec
fisubrl
add
sbb
and
and
xor
inc
ret
mov
int3
cmp
lods
jecxz
cmp
hlt
dec
push
lret
mov
loope
add
into
add
ja
mov
jae
jp
test
ret
mov
les
jmp
xchg
cld
pop
cli
outsb
push
arpl
lcall
cmp
jge
cmp
mov
pop
cmp
add
out
cmpsb
arpl
fnstsw
lahf
cmp
popa
aad
mov
xchg
cmp
jp
in
lods
push
jmp
cmp
into
pop
mov
dec
lcall
aad
daa
xchg
jmp
cmp
in
sbb
pop
mov
pop
mov
cmp
push
xor
and
fistl
call
cld
pop
out
or
std
cmp
inc
out
aam
pop
enter
out
and
mov
push
mov
add
cmp
or
push
cmp
test
sti
or
xor
push
fcoms
sbb
push
xor
das
loopne
mov
aaa
int
hlt
cmp
fidivs
in
sbb
adc
push
mov
add
mov
cmp
lock
inc
cmp
sbb
or
mov
cmp
sub
in
call
mov
cmp
pop
jecxz
mov
in
pop
jmp
lcall
xchg
mull
inc
ret
cli
push
shl
xlat
dec
sbb
ja
rcl
jecxz
jmp
push
xor
repnz
jle
sub
jg
test
lea
push
jecxz
fisubs
inc
xchg
ss
dec
jns
pop
pop
data16
out
push
imul
clc
sbb
jmp
sbb
and
inc
cmp
jecxz
pop
inc
mov
popa
sbb
das
jmp
cmp
adc
dec
sarl
in
das
mov
xor
xor
inc
loope
jp
xchg
cmp
in
es
repz
sub
fsts
jp
cltd
inc
sbb
loope
repnz
cmp
sbb
jecxz
jne
pop
aas
cmpsb
sub
add
dec
fstl
insb
cmp
inc
aad
lahf
adc
out
scas
insb
sub
es
aad
pop
push
stc
cmp
cmp
mov
cli
mov
add
loope
insl
jp
mov
int
out
imul
or
je
jmp
jp
mov
jmp
cmp
jecxz
repnz
mov
in
rcll
mov
dec
and
test
sub
cmp
jge
mov
pop
imul
insb
adc
in
jns
fstpt
push
cli
out
aas
mov
cmp
out
jg
cmp
out
pusha
cld
jle
pop
in
out
xchg
pusha
xchg
add
pusha
cli
sbb
int
sbb
xorb
cmp
mov
xlat
mov
shrl
lods
sbb
pop
cmp
fdivs
lret
outsb
sub
in
lcall
sub
adc
cmp
jo
das
ljmp
insb
pop
lds
mov
jp
cmp
jge
or
mov
jp
pop
ret
xor
sbb
out
jp,pt
cmp
sbb
es
fistpll
xchg
mov
cmp
ror
cmpsl
push
mov
mov
jmp
xchg
subb
in
jbe
or
sub
dec
lods
sbb
jmp
in
push
lods
dec
out
je
inc
push
push
scas
jmp
fs
mov
xlat
ret
sbb
enter
jmp
cmp
jo,pt
iret
xchg
fisubl
test
je
orl
shlb
cmp
lret
xchg
aas
inc
pushf
jb
push
add
xor
in
outsl
cmp
js
test
jp
mov
repz
mov
fldl
fmulp
dec
test
ucomiss
aaa
add
movsl
lret
cmp
repnz
in
dec
stos
clc
jmp
jg
sub
sub
xor
cmp
aaa
jae
sub
xor
cmp
jns
sti
cmp
std
ret
xchg
xor
lcall
and
cmp
adc
nop
cli
cmp
cmp
cmp
push
test
fnstenv
cmpl
jl
cmp
insb
dec
sbb
push
daa
cmp
and
xor
xorl
sub
dec
jmp
lods
sbb
jecxz
movsl
mov
fstl
cmp
mov
push
mov
jge
sbb
cmp
pop
dec
jns
adc
pop
icebp
xor
scas
mov
and
clc
push
mov
out
adc
icebp
loope
mov
jbe
ja
and
add
sub
mov
mov
insl
iret
icebp
cmc
sub
push
push
loope
pop
xchg
mov
stos
test
sbb
rep
cmp
pop
fidivs
xchg
loop
xchg
xchg
loope
mov
jbe
in
scas
mov
push
cmp
mov
cmp
or
decl
fidivrl
mov
push
cmp
sbb
push
hlt
push
pop
cmp
pop
jl,pn
mov
stc
cmp
ficompl
push
cmp
pop
xor
cli
out
cmp
and
rclb
jns
ret
cmp
stos
cmp
movsb
push
es
aad
mov
cli
lock
loopne
cmp
and
shl
cmc
cmp
jne
cwtl
fiadds
cmp
sub
mov
cmp
mov
mov
push
out
cmc
subb
and
je
movsb
out
xchg
adc
mov
mov
das
cmovo
fidivs
pop
lcall
ds
ss
sti
cmp
scas
add
outsb
adc
aaa
and
cmpsb
loop
mov
add
mov
mov
loopne
popa
cmp
mov
je
clc
sbb
cmp
xlat
mov
sub
lea
outsb
out
mov
mov
dec
mov
call
sub
push
dec
imul
pop
ja
in
pop
pop
sbb
sbb
cmp
mov
in
pusha
jle
lds
mov
inc
fisubs
in
sahf
js
dec
stc
imul
sbb
pop
loope
mov
out
dec
sbb
jp
mov
jge
cmp
xor
jae
test
in
mov
xor
adc
stos
inc
mov
cmp
imul
fimuls
fcmovne
mov
pushl
adc
push
int3
addr16
bound
andl
addb
lret
clc
push
jbe
and
lods
adc
fbld
cmp
popf
scas
inc
into
and
sti
in
xchg
cmp
and
sahf
fstpt
sbb
cmp
test
out
push
jo
cmp
jno
push
std
pop
cmp
call
insb
out
stos
cmp
jb
cmp
sbb
mov
jns
lods
mov
lcall
sahf
cmp
inc
jmp
cmp
mov
sub
mov
das
js
jge
cmp
addl
mov
cmp
push
icebp
loop
incb
cmp
cwtl
rorb
call
dec
hlt
sub
aaa
xchg
ds
inc
cli
loopne
mov
adc
not
jne
aad
lds
sub
call
mov
decb
pop
mov
ds
cmp
adc
ret
dec
mov
cmp
mov
in
dec
sbb
push
inc
dec
bound
dec
clc
add
movsb
loopne,pn
cmp
jmp
sbb
in
inc
lds
mov
inc
iret
cmp
lahf
add
sub
imul
cmp
rolb
cmp
xchg
cmp
das
in
and
push
mov
jnp
mov
cmp
icebp
lds
out
clc
sub
dec
loope
cmp
xlat
pop
call
inc
loop
xchg
cmp
jbe
adc
das
popa
cmp
roll
xor
pusha
mov
push
jecxz
cmp
das
mul
es
cs
mov
pop
stos
cmpsb
es
mov
inc
push
pusha
push
sub
dec
cmp
mov
hlt
mov
test
movsl
adc
popf
xchg
mov
cmpb
imul
cmp
add
mov
cmc
push
push
and
dec
pop
sbb
mov
pop
sbb
dec
lret
in
out
jle
push
dec
cmp
push
or
rorb
test
mov
xor
mov
dec
out
das
push
and
je
mov
xor
mov
loop
xchg
out
aad
lret
dec
xor
and
adc
mov
nop
cmpsl
aam
out
jne
iret
pushf
cmp
dec
gs
out
sbb
and
lods
aad
or
mov
jns
dec
nop
cmp
test
mov
jb
imul
pop
xchg
and
jno
mov
ss
fcompl
stc
pop
push
mov
inc
mov
cmp
stos
xchg
pop
cmp
jl
jmp
lahf
add
repnz
cli
and
cmp
mov
jne
cmc
sbb
in
jmp
int3
cmp
aad
inc
pop
insb
xor
scas
dec
popf
sub
jl
js
icebp
arpl
das
ljmp
repnz
push
cmp
sarb
jle
pushf
cmp
inc
xor
sbb
sub
cmp
and
jle
les
adc
xlat
cmpb
mov
jnp
push
aam
popf
ds
fistpl
mov
pop
test
cmp
sbb
adc
mov
enter
push
mov
lock
jns
in
fdivs
mov
out
push
or
push
inc
aaa
cmpsl
mov
cmp
sbb
cmp
dec
mov
inc
loop
mov
ret
add
sbb
or
adc
jg
cmp
inc
fsubrp
subb
cmp
scas
in
movl
cmova
leave
lret
sbb
out
int3
cmp
outsl
jmp
jb
sahf
stos
cmp
dec
fsub
jnp
cmp
inc
js
bound
dec
inc
cmp
mov
mov
lret
in
shrl
mov
lcall
or
inc
outsl
movsl
inc
mov
cmc
fadds
sub
jno
pushf
cmp
fldenv
push
dec
cltd
jbe
cmp
cli
out
xchg
stc
fwait
dec
fidivs
xchg
xchg
call
inc
mov
mov
out
adc
movq
mov
mov
xor
testl
cmp
mov
mov
mov
xlat
xor
cwtl
add
pop
popa
xor
and
sar
jp
jb
cmp
scas
sub
lret
lea
int3
cmp
jg
push
into
jne
cmp
xchg
add
jb
test
sbb
adc
int3
pop
add
outsl
cmp
nop
shll
shrl
pmaddwd
clc
lahf
fwait
cmp
fwait
push
lods
inc
jl
fisttps
cmp
shrb
cmp
xor
mov
bound
cmp
sub
adc
testb
stos
inc
mov
cli
and
sub
fimuls
pushf
push
iret
add
incl
pop
xor
inc
pop
mov
jge
xchg
mov
rclb
imul
dec
lea
add
cltd
xchg
fimuls
cld
xor
cmc
mov
addr16
pop
cmp
jl
jb
cltd
pshufw
scas
pop
cmp
out
mov
ja
outsb
inc
fnsave
cmp
scas
mov
pop
movsl
xchg
cmp
dec
test
pop
and
mov
mov
imul
and
insb
shrb
cmp
cli
pop
enter
pop
int3
imul
test
lcall
push
out
mov
adc
movsb
mov
inc
jo
mov
xchg
dec
jns
jno
mov
imul
scas
lods
cmp
cmpsb
adc
dec
mov
loop
scas
pop
loopne
xor
push
dec
push
ds
std
sarb
mov
push
icebp
sbb
push
fidivs
clc
ret
add
sbb
pop
mov
xchg
stc
push
adc
rorb
sbb
sbb
int3
lods
mov
sbb
mov
mull
aad
outsl
mov
add
mov
stc
bound
cmp
cmp
ret
xor
cmp
daa
imul
xor
push
add
jp
mov
std
cmp
popa
cmc
inc
cmp
pop
xor
outsb
cmp
into
addr16
mov
lods
popl
xor
adc
imul
popa
xor
add
or
ret
in
pop
push
push
mov
xor
outsb
mulb
dec
shll
mov
int3
out
jle
cmp
sbb
inc
push
sti
cmp
jns
push
jge
jle
cmp
mov
mov
out
and
cwtl
jb
or
xlat
jb
push
cmp
ret
cmc
mov
cmp
jbe
rclb
pop
iret
sub
jb
xchg
cmp
xor
in
dec
sti
pop
sub
sarl
jb
ljmp
sbb
and
dec
pop
sarb
jmp
add
xlat
push
daa
cmp
sub
cmp
fs
jo
enter
mov
aam
push
addr16
push
inc
dec
cmp
imull
repnz
jnp
and
jg
js
cmp
jl
push
cmpsb
std
cmp
cmp
mov
jb
mov
adc
cmp
mov
jns
stos
daa
push
cmp
adc
mov
test
cmp
loope
xchg
cmp
sti
fsubs
mov
cmp
test
call
sub
cmp
pop
fcoms
sbb
cmp
roll
mov
addr16
cmp
clc
fadds
mov
std
pop
add
xchg
cmp
adc
rorl
xchg
mov
and
pop
adc
push
adcb
aam
repz
jb
dec
cmp
lret
fldcw
cmpl
inc
test
mov
xor
daa
inc
xchg
mov
sarb
aas
jmp
dec
nop
cmp
cld
rorl
mov
xor
jo
mov
clc
fs
shl
movsb
adc
aaa
in
push
mov
stos
pop
aad
push
sub
mov
enter
xchg
jo
cmp
cld
insl
inc
sub
cmp
mov
clc
fildll
cmp
ljmp
jne
and
xchg
cmp
mov
sti
stc
popf
movsb
cmp
inc
arpl
lock
jecxz
xchg
xor
xchg
push
mov
addr16
fs
repnz
iret
jb
and
cmp
mov
add
leave
scas
negb
or
cmp
cmp
rorb
std
lea
mov
xchg
cmp
push
aas
test
and
je
in
cmp
adc
addb
push
xor
xor
shlb
cmp
daa
and
mov
in
mov
in
cmp
js
cmp
ret
movsl
cmp
adc
sub
les
imul
pushf
add
mul
inc
jp
xor
xor
pop
sub
sahf
cmp
daa
cltd
es
mov
pop
push
test
cmp
lret
stc
lcall
mov
ficomps
mov
mov
cmp
bound
pop
adc
inc
leave
cmp
or
xor
loopne
jge
cld
inc
jno
imul
js
inc
repz
popf
push
mov
mov
int
ljmp
dec
in
loope
mov
rcrl
test
into
lods
pop
sub
movsb
or
cmp
outsb
sub
jg
lahf
adc
stos
out
dec
xor
cmp
arpl
call
pop
sbb
mov
not
fdivrs
xor
fcomi
scas
cmc
cmp
dec
mov
push
ljmp
movsl
mov
pop
inc
and
fs
fistl
push
mov
pop
ds
mov
adc
aad
lret
jbe
cmp
stc
push
ret
movaps
leave
cwtl
insl
jb
lahf
loopne
cmp
lret
in
adc
loop
cmp
mov
pop
xchg
push
sti
and
rorb
mov
aas
inc
jl
adc
mov
testl
adc
lock
inc
push
pop
aad
cmp
scas
je
cmp
adc
xor
cmp
adc
or
jl
pop
mov
mov
cmp
mov
fwait
jb
mov
jp
bnd
cmp
push
aaa
lret
and
out
push
cltd
cld
shll
add
xchg
stos
jle
test
ret
add
cmp
and
cmp
mov
jne
bound
rcll
push
cmp
xor
jno
es
out
cmp
jne
xchg
push
adc
arpl
mov
inc
cmp
adc
les
ret
out
insb
int3
inc
cwtl
jns
sub
cmp
enter
std
in
jae
inc
insb
out
mov
jo
fsubrp
push
loop
cmp
scas
xchg
pop
vmovups
cmp
fsts
pop
movsb
into
xor
xor
pop
cmp
inc
sbb
data16
push
lahf
xchg
jno
sarb
sahf
and
js
add
fs
ss
add
xchg
jb
mov
xor
cmp
cmp
mov
movsb
aam
mov
cmp
add
push
add
lahf
aad
push
push
sub
fstps
mov
adc
push
inc
inc
out
lock
cmp
mov
cmpsb
sbb
push
pusha
pop
jg
aam
mov
rep
cmp
test
not
inc
xchg
aad
sbbb
cmp
mov
mov
jno
adc
jp
or
cmp
cmpsb
mov
xor
cmp
push
sbbl
xor
mov
xchg
fstp
icebp
cmp
cmp
jno
and
mov
cmc
and
daa
push
and
jecxz
pop
add
addr16
aam
out
or
aaa
ds
cli
pop
inc
or
xor
jnp
enter
sub
push
and
sbb
insl
xor
addr16
xchg
sti
push
cmp
dec
popa
int3
mov
jp
xorl
mov
cmp
dec
push
pop
ds
jne
pushf
test
das
stos
mov
or
xor
xchg
iret
pusha
jecxz
popa
push
cli
cwtl
cmp
imul
sbb
jne
inc
dec
dec
adc
pop
repz
inc
pop
or
cmp
push
stc
dec
xchg
adc
dec
cs
hlt
iret
dec
sbb
or
adc
insl
lds
xchg
adc
dec
rclb
xchg
adc
mov
lcall
fidivrs
dec
jmp
mov
sub
clc
and
or
adc
xchg
dec
cltd
jno
pop
add
cli
popa
and
mov
add
xchg
dec
sub
xor
xchg
inc
cmp
popf
and
pop
ret
dec
sub
jnp
xor
shl
data16
leave
pop
imul
cwtl
int
or
xor
gs
xor
in
mov
out
jbe
dec
pop
xchg
aas
dec
gs
mov
sub
ret
adc
mov
cmp
or
sub
leave
mov
mov
jge
push
or
jmp
cmpsb
push
jb
mov
call
ret
cmpsb
insl
xor
inc
call
sbb
mov
push
dec
xor
in
or
mov
in
pop
mov
in
fisttpll
fwait
push
or
dec
pop
sbb
or
adc
xchg
xor
pop
push
data16
mov
add
loop
jb
fnstsw
xor
mov
jp
popf
iret
adc
arpl
cmp
sahf
push
mov
xchg
cmovnp
and
xor
or
repnz
daa
popl
divb
and
dec
dec
cmc
fldt
test
dec
fidivrl
xchg
inc
cmp
sub
xlat
or
dec
add
inc
jp
je
and
insl
cmp
mov
jns
or
adc
mov
repnz
dec
cmp
push
sbb
inc
inc
addr16
mov
sbb
stos
push
or
mov
into
adc
dec
lcall
cmpsb
lock
decb
cmpb
sbb
mov
arpl
pop
jb
cmp
jns
adc
ret
fistl
out
out
sbb
lods
jne
or
lcall
int3
push
fstpt
inc
inc
or
sbb
enter
sbb
ss
loop
dec
lods
push
fnstenv
pop
dec
mov
xor
pop
adc
mov
test
inc
lret
cmp
sbbl
xchg
pop
daa
pop
and
jecxz
rcr
jl
in
pop
test
xlat
jge
lods
rol
dec
or
repz
movsb
cmp
fistpll
js
or
jo
in
shrl
int3
fistpll
mov
mov
xor
movsl
fimull
hlt
xchg
xor
adc
mov
or
adc
fstps
inc
ss
mov
mov
addr16
mov
jnp
or
cmp
xor
stos
xor
push
push
xor
mov
xor
lret
cmp
ds
imul
outsb
in
inc
pop
popf
movsl
fadds
cmpsb
in
cmp
xchg
dec
aam
dec
inc
dec
leave
push
dec
xchg
sbb
cld
sahf
mov
nop
shlb
xchg
ret
ja
dec
inc
xor
jne
and
arpl
xchg
fldenv
xchg
mov
mov
loopne
add
or
or
ljmp
pop
mov
mov
daa
mov
cwtl
mov
pop
stos
mov
xchg
aad
lods
shl
dec
aam
and
mov
lret
arpl
mov
or
dec
adc
lcall
mov
mov
mov
outsl
mov
cmpl
mov
xor
sti
ficoml
xlat
aad
and
movb
and
cli
sbb
dec
cmp
jo
pushf
in
aas
jge
fnsave
lret
jbe
cmp
mov
adc
sbb
aad
movl
cmp
xorb
adc
push
inc
scas
push
dec
outsb
fdivrs
es
imul
ss
xor
sub
sbb
sbb
ret
mov
pop
adc
shrl
pop
mov
sbb
sbb
cmpsb
inc
add
lcall
fildl
xchg
xor
inc
pop
popf
jmp
or
inc
cmpl
out
leave
dec
sti
mov
mov
insb
dec
shrb
sti
rcr
sbb
test
cmp
addr16
mov
jg
movmskps
jnp
sbb
cmc
or
movsb
repnz
jp
int
das
push
cmp
and
push
dec
push
pop
xchg
gs
sti
movsl
enter
or
out
repz
test
sub
or
lret
lcall
and
push
add
cli
sub
aad
inc
and
daa
jns
add
insb
push
push
or
leave
insb
and
imul
cmp
testl
cmp
or
ds
cmp
push
shl
daa
dec
test
lods
jo
nop
pop
sbb
xchg
adc
or
jmp
fwait
and
imul
int3
mov
fwait
inc
daa
mov
pop
jle
into
imul
mov
sub
mov
or
popa
xchg
clc
push
cmp
lea
xor
jecxz
in
dec
cli
ss
inc
or
lea
nop
jns
iret
outsl
jg
mov
push
xchg
test
cmp
in
mov
pop
mov
inc
push
xlat
ret
sbb
in
pop
mov
loope
mov
and
imul
pop
cmp
jle
xor
imul
push
inc
dec
push
orb
stc
daa
jmp
jbe
add
jno
movsl
scas
jns
xchg
add
mov
sub
mov
add
lods
mov
cmp
andl
mov
outsb
jb
icebp
jno
test
mulb
sbb
jae
lea
mov
or
xor
rolb
push
cmp
jnp
push
adc
lcall
test
les
dec
cmp
inc
ds
xchg
shll
je
ficompl
cld
and
or
bound
mov
idivb
cmp
push
cmp
or
les
shrb
ss
test
dec
jne
imul
xor
xchg
sahf
test
cmp
loop
setnp
sub
or
or
sbb
fdivs
sub
dec
aas
or
mov
add
sub
xchg
xchg
or
outsb
scas
cmp
push
jp
stos
cli
imul
sbb
sbb
clc
call
rcll
cmp
cli
sahf
mov
fwait
jl
fdivl
in
xlat
mov
or
int3
lcall
lea
loop
lcall
outsl
pop
jo
lret
shrb
push
mov
popf
cmp
stc
fldenv
stos
adc
lds
repnz
lret
pop
dec
pop
sbb
data16
jmp
and
jle
lock
xor
std
loope
mov
mov
jns
and
push
or
xor
cli
push
ret
cmp
or
jle
xchg
das
mov
stc
sub
adcl
insl
add
sahf
sbb
mov
inc
stos
or
in
data16
ret
cmpsl
daa
or
cmp
cmp
or
fiaddl
add
inc
cmpsl
and
mov
imull
popf
cli
or
fdiv
or
inc
xor
dec
pop
fdecstp
push
dec
rcrb
push
addr16
adc
cmp
orl
jb
or
jbe
mov
pop
cmp
push
mov
cmp
scas
ds
push
repnz
mov
jo
or
push
cmp
and
daa
out
jecxz
or
and
pop
xor
je
dec
cmp
sahf
or
das
xchg
pop
dec
test
dec
pop
out
jbe
bswap
inc
mov
clc
inc
repz
test
push
xlat
jmp
bound
dec
mov
xchg
popa
sub
cmp
stos
xlat
stos
in
scas
cs
dec
dec
loope
in
xor
dec
pop
jo
mov
or
xor
and
xor
jmp
lahf
jo
cmp
insb
stos
mov
cmp
ss
or
jmp
imul
das
mov
shlb
shll
int3
adc
or
adc
inc
test
inc
cli
fcomps
lahf
adc
mov
data16
or
dec
mov
dec
pop
mov
repnz
adc
adc
dec
jg
and
cwtl
dec
dec
inc
sbb
lods
fimuls
and
push
and
loop
sahf
and
shlb
dec
lahf
pop
and
in
mov
cmpsl
repz
hlt
xor
sbbb
jo
sub
adc
out
scas
push
sub
lret
adc
dec
into
mov
jmp
mov
outsl
cmp
and
or
shll
shll
sub
hlt
or
fsubrl
enter
xor
or
sbb
or
mov
or
pop
jno
sub
pushf
enter
cltd
or
xchg
std
sbb
mov
aas
or
jb
inc
rorl
inc
xchg
cmp
mov
pop
mov
xchg
sbb
popa
dec
sub
mov
mov
arpl
or
jmp
jmp
jb
cmp
xchg
fistps
xchg
sub
loopne,pt
jecxz
and
jb
sub
andl
push
or
mov
xor
push
add
stos
repnz
gs
adc
add
decb
xor
rolb
stos
or
test
xchg
stos
mov
ss
and
add
mov
pop
in
xlat
adc
popf
adc
aad
sbb
inc
or
xor
imul
or
sbb
cmpsb
or
sub
jae
into
out
test
mov
cmpsl
cmp
or
sub
imul
in
or
sahf
xor
mov
je
enter
fwait
cmp
xchg
aad
ljmp
sti
inc
adc
mov
inc
mov
jge
outsb
dec
mov
test
loope
leave
sub
xchg
pop
inc
cmp
fdivrl
and
icebp
cmp
std
fstps
add
lcall
scas
shlb
fsts
scas
sti
test
xor
push
clc
xlat
inc
lds
es
dec
sbb
sbb
jae
pop
cmp
mov
fdivl
sbb
pop
xlat
clc
ret
mov
pop
pushf
pop
test
test
jo
cmp
sbb
jg
mov
sbb
sub
mov
add
sub
sti
aad
call
dec
lea
push
mov
jge
cwtl
jmp
sub
push
clc
jne
push
cmp
pop
pop
fnstcw
incl
das
divl
enter
scas
cmp
xor
in
lret
inc
lret
pusha
mov
leave
inc
pop
test
fidivs
gs
ds
sti
xor
sbb
adc
jnp
cmp
mov
cli
lods
pop
dec
xchg
cmc
push
mov
jp
add
les
into
xor
or
sbb
cmp
ret
mov
jb
push
icebp
sub
cmc
mov
inc
icebp
mov
xor
fsts
mov
pop
cmp
mov
cwtl
sub
fidivs
jle
ds
pop
leave
jnp
xorl
lock
sub
fsts
fcompl
lods
enter
inc
cmp
jp
popa
cli
pop
sub
lret
nop
mov
mov
xor
mov
lcall
cli
inc
dec
and
add
dec
sti
cmp
cmp
or
add
and
mov
push
dec
dec
stc
cmp
into
push
icebp
sbb
dec
sbb
ss
sub
mov
jecxz
repz
adc
and
jns
cmp
enter
add
enter
sub
inc
clc
dec
mov
ffree
ret
mov
pop
dec
xor
cld
inc
out
pop
sub
xor
fistpll
dec
dec
repz
push
into
scas
rcrb
push
adc
xchg
pop
iret
dec
or
mov
jo
cmp
dec
pop
pop
mov
xchg
pusha
mov
stos
xchg
dec
mov
mov
xchg
in
pop
je
inc
push
xchg
sub
aam
and
imul
mov
xchg
adc
loop
inc
loopne
sbb
call
pop
mov
mov
inc
mov
je
cmp
cltd
xor
fsts
inc
and
sar
aad
out
test
and
mov
dec
jae
pushf
pusha
outsl
pop
jl
push
ficompl
mov
or
add
int
and
enter
sbb
dec
scas
sahf
adc
jp
dec
aad
into
nop
mov
movsb
jge
mov
sti
dec
pushf
mov
imul
movsl
fdivrs
cmp
ret
pop
test
sarl
pushl
pop
mov
shrl
or
or
imul
fs
aaa
sahf
jns
dec
cli
test
jle
cwtl
dec
cmp
call
inc
adc
pop
in
or
mov
xor
inc
aaa
lret
fnstcw
pushf
dec
lods
shll
fisubl
rcr
cmp
dec
iret
cmp
mov
in
dec
push
or
jl
lods
xor
out
adc
test
jo
xchg
mov
inc
inc
scas
cmpl
cld
cltd
fdiv
ds
sti
adcb
cmpsb
xor
add
arpl
and
addb
sbb
movsb
pop
dec
push
xchg
js
inc
xor
addr16
sbb
pop
outsl
mov
or
sti
push
inc
les
sub
mov
xor
movb
mov
xchg
push
add
push
xchg
out
or
shl
ja
cli
cltd
and
ja
push
dec
inc
dec
sahf
or
lock
xorb
loop
adc
loop
testb
pop
lock
out
jp
or
fdivs
std
imul
sbb
add
pop
call
or
mov
cwtl
scas
aas
hlt
fstpt
jo
dec
cmp
xor
nop
outsl
cmp
loop
cmc
out
lods
ret
aam
cmp
xor
sub
stc
loopne
out
leave
lahf
fistps
adc
jno
cmp
or
test
movsl
mov
dec
test
cmp
jg
or
test
jae
dec
pop
neg
adc
adc
mov
cwtl
push
popa
push
fmuls
sub
shll
adc
test
ret
lcall
daa
mov
lock
sub
or
add
loope
data16
stos
push
test
jne
movsb
aam
mov
sbb
or
add
lret
pop
pop
cli
not
dec
or
in
dec
leave
das
out
mov
test
mov
mov
xor
lret
xchg
ds
mov
punpckhwd
inc
adc
push
dec
or
mov
loope
push
lods
dec
xchg
pop
sti
fcoms
push
cli
mov
sbb
cmp
nop
xor
fidivrs
or
jmp
in
or
es
pop
add
xchg
adc
jnp
lret
mov
scas
cwtl
or
sub
inc
dec
adc
lret
sbb
xor
bound
jae
out
cli
xchg
pop
scas
or
dec
lea
jg
sbb
inc
imul
cmp
push
sub
dec
dec
pop
lcall
rcrb
adc
or
mov
rcll
movsl
lds
popf
dec
inc
sbb
cmp
mov
mov
jmp
xor
rolb
xor
sub
or
push
outsl
aaa
xchg
insl
push
jge
and
cmp
jle
lods
cmpsb
xchg
xchg
push
sub
dec
shl
adc
dec
imull
xchg
test
push
sbb
inc
cli
imul
andb
mov
dec
xor
outsb
test
adc
mov
ds
mov
sbb
jmp
clc
orb
daa
xchg
cs
lahf
stc
mov
lcall
stos
in
lods
add
test
mov
or
rcrl
or
pop
sub
pop
sub
neg
loope
or
lret
aas
cmp
push
mov
aam
dec
aad
inc
je
iret
mov
test
loop
or
aas
inc
lods
rolb
icebp
in
pop
jae
je
inc
movsb
sub
sub
insl
lret
dec
and
ror
aas
dec
nop
mov
mov
inc
gs
fdivrl
rcrb
ss
or
fcmovnb
cmp
jmp
fs
fisttpll
loop
push
push
xor
loopne
fwait
mov
test
sbb
into
int3
outsb
sub
imul
jmp
aaa
dec
out
int
xlat
mov
jle
out
xchg
xchg
jae
repz
subb
pushf
jp
and
sub
dec
inc
cmp
or
mov
xor
sbb
inc
or
xchg
arpl
test
add
mov
inc
xchg
dec
nop
mov
dec
inc
sbb
xchg
xchg
mov
mov
mov
outsl
fwait
jg
rcrb
icebp
daa
mov
mov
les
pop
out
or
fisttpl
xchg
repnz
leave
push
xchg
inc
mov
mov
lea
ret
inc
popa
jo
pop
mov
outsb
push
xchg
push
mov
sub
out
xchg
push
xor
addr16
cmp
or
cli
mov
shlb
and
add
ret
stos
pop
jp
addl
push
lcall
das
pop
mov
lea
lock
and
dec
cmpps
or
sub
js,pt
mov
out
pop
mov
sbb
into
pushf
jp
xor
cmp
and
or
lcall
mov
jp
mov
xor
clc
add
dec
div
push
lods
shrl
or
lds
inc
push
loope
stos
cwtl
sahf
mov
pop
and
cwtl
sub
inc
cmp
sti
add
push
cmp
jne
push
lcall
pop
xchg
clc
in
icebp
cltd
mov
out
xchg
out
fildll
test
inc
xor
jg
ret
sbb
xor
ds
ret
pop
add
or
int3
dec
mov
test
popf
and
xchg
mov
or
cld
hlt
mov
push
jge
xor
push
push
xchg
jne
xor
inc
xor
aas
mov
adc
or
dec
data16
test
sti
rsm
cs
pop
rol
cmp
inc
ds
and
or
pop
lcall
adc
cs
nop
fwait
inc
jnp
cld
lods
cmp
sub
aas
dec
aaa
push
jb
mov
pop
dec
shlb
dec
or
sbb
jge
cmp
cmp
loop
icebp
sub
in
test
mov
cmp
data16
mov
pop
scas
and
adc
jno
sbb
ret
cmp
mov
xor
out
aad
jmp
movsl
cmpsb
cmp
dec
and
addr16
out
cmp
and
lahf
and
sub
into
stc
andl
out
out
loopne
dec
adc
je
sbb
mov
jb
fisttpl
sahf
cmp
cmp
add
aas
sbb
inc
mov
jmp
inc
dec
imul
vpandn
lock
cli
mov
das
xchg
inc
push
loop
mov
mov
pop
xor
adc
dec
mov
mov
cmp
js
adc
mov
cmp
mov
fsubrl
out
pusha
ret
dec
stos
pop
cmp
stos
std
test
cmp
pop
push
and
ret
adc
sbb
xchg
xor
out
jo
cmp
jecxz
mov
stc
and
aas
pop
push
addb
cmp
cmp
pop
inc
cmp
das
jne
and
je
mov
add
int3
sahf
repz
jp
out
or
lods
aaa
cmp
test
pop
and
lea
mov
fadd
into
xor
sub
push
bound
add
pop
inc
cmpsl
repz
jns
loop
cwtl
les
mov
cmp
in
imul
cmp
or
push
cmp
mov
jae
fwait
cmp
pop
mov
test
movsl
mov
sbb
add
aas
mov
and
dec
xchg
pop
push
idivl
pushf
and
mov
and
gs
lods
cmp
adc
mov
cmp
mov
mov
cmpsb
dec
sub
cmp
jno
and
fcoms
loopne
pop
cld
fstps
sub
fstps
leave
in
adc
and
sbb
cmc
pop
fs
cmpb
out
mov
xlat
push
cld
clc
sub
xor
cmp
inc
push
stc
add
hlt
cmp
xchg
add
cmp
lahf
cmp
pop
xchg
lret
sbb
mov
bound
insl
mull
imul
pop
inc
mov
cwtl
cmp
arpl
fisttpl
inc
cmp
add
adc
outsb
push
in
cmp
mov
and
int3
repnz
dec
inc
jne
sarl
movsl
movsl
sub
dec
mov
mov
data16
sarb
mov
ds
inc
cmp
fldenv
mov
sti
xor
lcall
punpckhwd
cmp
sbb
fsubl
mov
std
aas
nop
cwtl
mov
lret
cmp
addr16
shr
add
ret
cmp
stos
in
imul
xchg
pushf
xchg
lods
aad
cli
xlat
push
mov
cmp
ret
test
stos
rcl
cmpsb
daa
out
inc
mov
test
clc
sub
adc
fwait
mov
dec
sbb
mov
jg
fbstp
lret
in
imul
addr16
push
lods
push
rclb
lods
orb
jl
test
loopne
mov
xor
mov
cmp
pop
pop
outsb
out
adc
stc
add
pop
and
sub
sbb
push
mov
jge
mov
rcrb
cmp
mov
rcll
cmp
clc
test
out
mov
repnz
sahf
insb
add
mov
lods
cmp
in
loope
push
ret
insl
inc
cmp
jmp
out
call
lods
xor
cmp
test
jecxz
sbb
mov
mov
ja
and
xchg
sti
cmp
out
xchg
fwait
mov
mov
jns
cmp
loope
mov
cmp
sub
std
push
or
mov
inc
jl
lods
or
lods
cmp
aad
movsl
pop
dec
mov
cmp
in
jnp
dec
cmp
outsl
cltd
mov
adc
scas
mov
jo
or
cmp
cld
jecxz
sub
ficoms
clc
mov
cmp
pop
cmp
inc
adc
test
cmp
in
in
mov
adc
xor
cmp
test
sahf
pushf
cmp
test
sbb
mov
aas
imul
arpl
das
sub
loope
inc
lods
push
aad
lahf
cmpsl
add
cmp
addl
lret
dec
sub
decl
or
adc
jae
data16
push
xchg
aaa
sub
cmp
stos
fwait
lea
sub
out
pop
insl
push
ja
mov
enter
dec
or
and
cltd
cmp
pop
lret
shlb
cmp
or
add
cmp
sahf
clc
jne
pusha
imul
fsub
sbb
imul
push
std
jo
xchg
mov
mov
cmp
cmpsl
mov
push
jmp
sti
cmp
mov
nop
sub
out
jg
hlt
add
sbb
jg
pop
rolb
sbb
cmp
adc
out
cmp
enter
dec
shrb
out
push
mov
test
push
subb
gs
push
shlb
test
sbb
and
xor
or
cmp
mov
loop
jno
cmp
mov
xchg
mov
push
adc
cmp
add
fwait
scas
jge
cmp
ret
nop
and
inc
test
mov
xchg
sbbl
rclb
and
xor
xor
adc
imul
cmp
repz
cltd
cmp
loopne
mov
test
xor
cmp
pop
enter
sahf
mov
push
cmp
inc
dec
test
ds
into
add
sub
lods
push
idivb
dec
add
and
sbb
imul
and
push
imul
iret
sub
mov
xlat
out
inc
sti
cmp
lea
cmp
ja
scas
cmc
in
push
and
cmp
test
add
xchg
jg
jns
push
cmp
cwtl
pop
add
adc
jne
mov
mov
addr16
push
inc
test
xchg
cmp
add
or
daa
push
and
push
cmp
jl
lret
movsl
or
mov
lahf
mov
popf
fisubs
xchg
jo
dec
sarb
and
adc
mov
cmp
dec
popa
cli
sbb
or
xlat
xchg
push
mov
jmp
stc
cmp
jbe
int3
inc
push
sbb
adc
jl
les
or
and
xchg
inc
sbb
or
cmp
xchg
fistpll
sar
sti
mov
cmp
lahf
icebp
lock
je
cmp
jnp
sti
push
sub
call
xchg
xchg
imul
cmp
pop
popf
xor
mov
jno
jnp
mov
add
ljmp
pop
cmp
sti
mov
fdiv
mov
add
jle
add
outsb
repz
sahf
adc
cmp
xlat
fisubrl
cmp
adc
and
loope
mov
cli
jae
xlat
pop
addr16
cmp
hlt
in
sti
imul
jmp
js
push
xor
popl
sub
bound
xor
push
mov
push
sbb
mov
hlt
cmp
aad
sahf
jg
inc
leave
shr
xor
popf
xchg
pusha
adc
mov
ds
out
mov
pop
cmp
cmpsl
sub
sbb
sub
cmp
mov
icebp
cmp
or
dec
cmp
push
ds
js
outsb
cmp
push
leave
pop
out
icebp
xchg
xchg
iret
rcr
mov
test
and
pushl
cmp
fimuls
ret
cmp
hlt
dec
sbb
mov
test
mov
mov
mov
pushw
in
aam
push
adcb
dec
cmp
loope
jns
mov
mov
inc
pop
cmp
lds
cmp
sbb
sub
cmp
into
insl
iret
push
jg
xor
fidivs
mov
loop
cmp
add
cli
ror
data16
xor
cli
or
cmpsb
cmp
ja
das
fidivrs
jl
movsl
cli
sub
ljmp
inc
fisttpl
mov
inc
or
addb
push
orb
sarl
enter
std
xor
fdivr
mov
rcrl
rolb
push
insb
pop
cmp
orl
ds
fwait
jno
pop
mov
inc
cmp
pop
xor
ljmp
xchg
call
fsts
add
adc
loope
mov
xor
or
jmp
jnp
xor
mov
insl
ffreep
popa
inc
shr
jae
stos
xor
cmpsb
fnstsw
xchg
pusha
popf
sbb
ret
cmp
in
icebp
cmpsl
jmp
cmp
inc
imul
cmp
cmpsl
xchg
adc
xor
xlat
jmp
cmp
sub
push
cwtl
cmp
adc
movsb
add
jle
fs
sbb
mov
adc
mov
sub
push
mov
sbb
push
popf
fldenv
or
js
imul
lahf
jge
push
cmp
lret
fwait
out
sub
inc
cli
adc
pushf
in
test
jle
aaa
push
cmp
cmc
jg
or
jmp
cmp
mov
sbb
jle
cmp
fiadds
or
fistl
mov
jp
jmp
mov
scas
pop
push
sbb
cli
dec
add
mov
ss
das
or
mull
scas
addb
js
fistps
repnz
xchg
movsl
add
mov
jns
push
push
cwtl
mov
inc
and
sbb
or
mov
gs
and
pushf
mov
dec
aas
mov
and
addr16
cmp
cwtl
lret
jecxz
cmp
cmp
and
sub
push
cmc
adc
push
push
iret
dec
cmp
loope
fidivrl
icebp
pop
lret
mov
cli
stos
and
xor
test
cmp
scas
popa
sbbb
pop
cmp
nop
cmp
cmp
mov
cmp
mov
test
cmp
push
and
fwait
mov
ds
sbb
mov
cli
sti
push
cmp
enter
lret
mov
cltd
ds
mov
je
jnp
in
loopne
out
icebp
sbb
or
lret
in
xchg
pushl
test
dec
pop
jp
xor
rorl
cmp
daa
call
mov
cmp
cmp
xor
mov
sbb
mov
xor
je
add
push
pop
int
leave
lds
jp
cmp
mov
mov
cmp
loopne
test
mov
jb
xchg
sahf
jp
sarl
movsl
xchg
push
notb
loopne
pop
mov
nop
cs
mov
aad
jge
cmp
push
mov
mov
cmp
sbbb
andl
cs
sarb
cmc
xchg
ds
stos
jbe
cmp
sbb
mov
mov
inc
les
ja
mov
ds
jne
inc
loopne
or
or
pusha
cmp
xor
jge
mov
push
xchg
std
pop
jae
mov
jmp
cmp
push
mov
xchg
cmp
pop
sub
mov
mov
push
in
mov
adc
sahf
cmp
aad
adcl
push
add
mov
mov
arpl
and
add
fwait
jmp
add
mov
cmp
jle
cwtl
pop
cli
push
cmp
movsb
pop
aaa
outsb
mov
pop
cmc
mov
mov
xor
imul
ss
std
imul
pop
sub
mov
sub
inc
cmp
mov
cmpb
sbb
mov
std
lret
or
xor
cmp
adc
push
nop
sbb
into
loopne
cmp
or
xchg
fsubr
add
dec
push
pop
imulb
jo
mov
movsl
adc
mov
hlt
jns
inc
es
stc
cmp
pop
test
shrb
xor
mov
cmp
mov
mov
divb
mov
jo
in
mov
xchg
xchg
mov
adc
cli
xor
push
mov
pop
or
cmp
mov
cmp
xor
iret
test
cld
mov
push
jle
cli
in
test
ret
xor
cmp
into
jb
xchg
scas
jp
sarl
test
jbe
xor
loope
rcrb
loop
push
mov
and
mov
lock
cmp
mov
cli
cmp
sbb
ret
dec
aas
cmp
cmp
int3
push
push
cmp
movl
inc
dec
aam
dec
mov
loope
mov
cmp
push
clc
jb
xchg
jle
lcall
adc
adc
xor
and
sbb
sbb
in
cmp
xchg
xor
aaa
sti
jge
push
jg
push
cmpb
pop
lcall
inc
mov
mov
pop
pop
push
cmpl
mov
and
cmp
push
push
adc
sbb
mov
icebp
cmp
ljmp
into
jle
sub
mov
cmp
xor
sub
pop
cmp
mov
cmp
and
pop
mov
cmpb
push
jg
add
inc
and
test
cmp
inc
cmp
push
mov
pop
cmp
popf
es
mov
mov
cltd
mov
insb
sbb
fistpll
subl
test
loopne
mov
mov
mov
dec
jnp
lcall
cmp
sti
call
bound
ret
mov
enter
popa
adcl
dec
lret
sbbb
push
outsl
add
cmc
sbb
je
fsubr
lret
cmp
ret
cmp
xchg
pushf
xchg
lock
dec
xchg
mov
cmpsl
dec
xor
jo
jmp
jecxz
mov
stos
dec
es
repz
pop
jp
inc
ficoml
cmp
cmc
mov
aas
sub
xchg
nop
cmp
push
test
sahf
pusha
aaa
push
cmp
sarb
enter
sub
je
add
xor
pop
daa
sbb
jecxz
or
xchg
leave
sbb
repz
jp
movsl
xor
sub
into
cmp
hlt
cmp
jl,pt
nop
cld
in
cmp
dec
jle
jbe
fdivrl
sbb
repnz
repz
mov
jb
push
ljmp
pop
sarb
sbb
mov
sti
call
jnp
loopne,pn
or
xchg
inc
pop
cmp
xchg
sbb
mov
popa
mov
stc
ds
jge
insb
icebp
cmpb
mov
cmp
lods
and
mov
push
das
xor
loop
int3
lea
xchg
outsb
or
xchg
mov
stos
mov
and
cmpsl
aas
cmp
push
xor
popl
popa
cmp
cld
add
xor
xor
adc
fisttpll
cmp
push
loope
sti
lahf
cmp
pop
int
mov
popa
lcall
inc
ficoms
vminpd
cmp
sbb
or
es
popa
xchg
dec
imul
push
repz
xor
popf
cmc
push
ss
mov
sbb
cmp
fsubs
cld
es
dec
jge
mov
mov
shlb
bound
sahf
stos
xchg
or
jl
int
vpunpckhbw
jmp
dec
mov
jb
cmp
or
fmul
add
sbb
cmp
pop
mov
loop
cli
adc
dec
stc
inc
fdivrs
and
push
cmp
arpl
std
mov
mov
xchg
stos
rolb
lods
jp
lcall
push
les
push
adc
into
mov
add
xchg
clc
adc
cmp
pop
mov
imul
sub
or
outsl
xchg
jmp
stos
aas
jnp
xchg
lret
push
xor
iret
fcoms
jne
xor
je
popf
mov
aas
or
negb
cmp
xor
inc
jg
insb
pop
fistpll
xlat
les
aad
sbb
stos
adc
jge
sbb
or
or
pop
push
cmp
sbb
cmp
popa
adc
pop
jb
sbb
cmp
dec
loopne
icebp
mov
cmp
loop
jno
push
xchg
cmp
jle
mov
jbe
cmp
push
data16
pop
sbb
js
pop
mov
push
xor
jns
ljmp
add
aam
cmp
lret
fnstsw
pop
test
ds
ficoml
imul
adc
in
add
cmp
push
mov
and
test
jb
dec
test
mov
sub
mov
cmp
pusha
notb
ret
mov
push
dec
sahf
and
or
push
xor
test
aad
inc
jns
movsb
cmp
pop
stc
mov
sub
cmc
enter
xor
pop
arpl
jl
cmpsl
jg
jb
cmp
loopne
ja
mov
cmp
std
jns
pop
xor
in
addl
cmp
jp
ret
mov
rclb
addr16
sbb
movsb
roll
mov
lods
inc
xchg
sbb
imul
into
adcl
inc
leave
cmp
in
push
xor
test
xchg
cwtl
mov
out
ficoms
cmp
or
js
cmp
adc
in
notl
or
aas
sarb
and
imul
out
mov
push
adc
lret
sarb
inc
mov
int3
test
jecxz
xchg
int
push
mov
sbb
mov
push
or
xor
int3
orl
push
inc
divl
or
mov
fdiv
movsl
jmp
cmp
das
cmp
jnp
push
jne
sbb
adc
push
xchg
xor
enter
fistl
movsb
sar
xlat
mov
pusha
mov
dec
cmp
inc
inc
push
outsb
int
rcrb
aad
inc
cmp
and
mov
daa
pushf
adc
jb
cmp
xor
cmp
int3
xor
lcall
cmp
jle
xlat
xchg
lret
xor
jmp
jp
mov
cmp
shl
scas
jge
fcom
xor
or
sub
leave
cmp
adc
aam
repz
sahf
dec
mov
pushf
or
add
stc
push
test
popa
xchg
aam
mov
fidivl
gs
arpl
add
push
and
inc
push
ret
fnsave
mov
pusha
jns
sbb
xchg
movsb
cmp
insl
dec
mov
mov
daa
jb
fidivrl
mov
mov
sti
lret
cmp
mov
into
xchg
pushf
rol
idivb
mov
imull
loope
dec
sbb
mov
mov
lahf
inc
xor
jb
sbb
lret
cmc
mov
push
out
loope
cmp
lds
outsb
inc
xchg
and
inc
and
pop
lods
mov
mov
aam
cmp
imul
pop
cmp
or
std
stos
insb
ss
rcr
sub
aad
and
js
sbb
and
sbb
mov
lret
push
cmp
push
cmp
adc
ds
push
cmp
sbb
cmp
imul
idivb
scas
jp
fidivrs
dec
movl
cld
stc
cmc
cmp
fdivr
push
shlb
sti
adc
xor
daa
rcr
add
push
andb
cmp
shlb
daa
ljmp
jmp
dec
mov
and
adc
cmp
addr16
fs
and
shlb
mov
sarb
dec
aaa
pop
sahf
popf
jmp
aas
loopne
cmp
mov
aas
testb
dec
cmp
mov
cld
aas
pop
test
out
icebp
jp
outsb
dec
xor
lea
sbb
aas
ljmp
and
pop
daa
ds
pop
dec
xor
jp
pop
cmp
dec
xchg
cmp
std
cmp
pusha
je
add
xor
int
out
sub
inc
jnp
cli
aaa
push
cmp
mov
lahf
sub
mov
mov
scas
sbb
pop
mov
ret
cmp
cmp
popf
xchg
mov
or
je
lret
sub
pop
xor
sarl
sbb
daa
and
scas
mov
mov
inc
mov
sbb
add
push
mov
cmp
ss
inc
push
outsb
cld
push
cli
sbb
pop
insl
push
mov
stos
fs
icebp
mov
mov
test
mov
aas
repz
test
cmp
cmp
mov
loopne
push
push
rcrb
insb
icebp
adc
cmp
test
pop
repz
jnp
jb
int
rcrb
inc
cmp
adcl
jnp
push
push
mov
mov
xchg
sahf
pop
push
std
pop
jecxz
add
pop
mov
push
mov
sbb
dec
and
sahf
fwait
sbb
push
mov
scas
push
enter
stos
inc
pop
inc
pop
cwtl
push
in
cmp
adc
out
data16
fs
mov
xor
sbb
xlat
jnp
push
and
test
outsb
jle
mov
jmp
mov
push
mov
push
push
insb
sub
sbb
xchg
push
sbb
cmp
pop
push
sbb
cmp
sbb
test
push
ret
inc
pop
mov
lret
cmp
cs
test
shlb
stc
cmp
insb
mov
jnp
popf
xlat
cmp
pop
xor
cs
jo
push
scas
mov
mov
mov
leave
dec
xchg
cmp
test
fmuls
lcall
iret
dec
mov
fmulp
add
fisubs
and
mov
xchg
and
cld
jnp
fidivl
push
xor
adc
sub
cmp
add
sbb
adc
mov
std
pop
push
js
lret
mov
inc
push
cmp
xchg
sbbb
xor
pop
mov
movsl
jp
push
arpl
ja
ret
pop
addr16
sub
push
inc
inc
outsb
inc
leave
fwait
inc
xor
pop
xor
adc
xor
adc
insb
fdivp
sti
sti
sbb
add
test
pop
sbb
outsl
push
bound
xor
or
pop
push
xchg
outsb
fstps
sbb
inc
test
movsb
outsl
inc
lcall
jle
stos
and
xor
pop
leave
je
mov
and
enter
sbb
mov
mov
clc
lds
cmp
xchg
lds
xor
push
cmp
jo
mov
mov
sahf
repz
or
add
push
bound
enter
ss
pop
mov
test
outsb
sbb
pop
rol
sub
sbb
push
insl
push
push
mov
jg
push
cmp
xlat
mov
jp
ror
inc
inc
mov
clc
push
movzbw
push
dec
sub
push
setne
bsr
rcl
shr
mov
bts
mov
sub
mov
ror
cmc
sub
jmp
lea
js
jne
xor
movsbl
shrd
rcl
mov
call
jnp
mov
and
lock
mov
add
xchg
push
inc
jg
xor
lahf
pusha
push
rcl
pusha
xlat
fisubrl
ror
in
and
sbb
mov
aas
cmp
mov
in
pop
outsl
cld
mov
stc
cmp
add
pushf
push
lea
jmp
in
mov
adc
add
sub
sub
mov
add
repnz
xchg
fistps
test
out
push
ss
sbb
adc
out
aaa
popa
out
inc
add
ret
std
mov
lea
cld
cmp
jns
or
push
scas
test
and
fistps
xchg
xor
xchg
xor
pop
xchg
jnp
cmc
pusha
dec
cwtl
lret
sub
sbb
xlat
adc
mov
ret
mov
cld
mov
repz
negl
int
pop
stc
dec
into
aad
mov
mov
bound
int
mov
imul
adc
dec
sbb
pop
fnstsw
and
into
jns
xchg
mov
nop
jnp
mov
stos
aam
sti
cmp
or
int3
js
std
filds
jns
in
push
es
fs
pop
dec
xchg
lock
jp
outsb
mov
inc
push
ret
inc
scas
out
cwtl
test
in
js
add
lods
pop
dec
leave
cmp
push
sbb
add
repz
sub
mov
test
and
outsb
lods
xchg
test
mov
add
cmp
jno
pop
orb
lret
daa
cmc
jmp
xor
pusha
lea
jmp
pushf
call
jle
push
pop
lods
fcoml
xlat
fnstsw
or
push
insb
push
inc
cmpsb
xorb
mov
popa
sbb
fcoms
jb
cmp
pop
in
cmp
cmp
daa
out
pop
loope
inc
jnp
out
sub
sarl
inc
cmc
daa
subl
addr16
adc
xchg
icebp
and
imul
adc
jecxz
push
dec
dec
ret
sub
adc
xchg
lods
xchg
fimull
adc
popf
enter
clc
jmp
scas
loopne
aam
mov
push
mov
rcl
shl
mov
push
jmp
add
pusha
pushf
push
lea
jmp
push
lret
push
fcoml
fs
ret
mov
pop
cmp
nop
out
sub
jae
out
pop
movsl
xchg
sbb
mov
mov
out
cwtl
xchg
mov
dec
mov
and
fistps
mov
mov
mov
xor
cli
je
fdivrp
aaa
jle
sahf
mov
fldcw
icebp
pusha
aas
roll
mov
jp
xor
ret
cmc
hlt
cwtl
loop
xor
push
lock
ret
sbb
ja
push
cld
mov
pusha
sub
lea
push
stc
pushl
jmp
push
dec
test
fdivr
faddl
push
push
sbb
inc
sbb
addr16
xor
stos
repz
fmuls
and
mov
imul
pop
pop
andl
cmp
push
scas
les
jl
out
and
jg
fwait
dec
stc
in
gs
lock
mov
dec
sub
dec
push
out
sti
cmp
cmp
jge
pop
cltd
mov
cs
push
jmp
push
inc
cmp
push
mov
imul
inc
enter
jne
and
rcr
jmp
jae
cld
jg
shll
jmp
sub
test
negl
lahf
sub
lods
pop
stos
sbb
dec
adc
sahf
loope
mov
push
pop
lods
and
sti
jne
jne
jle
bnd
aad
ss
push
and
cltd
xchg
in
movsl
adc
imul
fstl
sahf
cmpsl
pop
cmp
jnp
test
aaa
ljmp
testb
stc
arpl
in
push
add
in
inc
shll
push
ficomps
xchg
mov
clc
sbb
jo
ffreep
inc
test
mov
cmp
xchg
mov
jp
cmp
pop
mov
aam
mov
xchg
cld
mov
pusha
lea
jb
pusha
cmc
jmp
mov
test
pushl
inc
mov
sbb
mov
jecxz
dec
repnz
cmp
rcll
loop
and
mov
shrl
mov
sub
stos
int3
clc
lock
shll
sub
loope
ror
push
cld
mov
movb
cwtl
call
call
pushf
clc
neg
sub
sub
shrd
sub
add
bts
sub
inc
shl
mov
ror
rol
clc
mov
pusha
movb
stc
clc
repnz
push
lea
jne
lea
movzbl
cwtl
movb
pushf
mov
lahf
bswap
push
call
lea
ja
xor
neg
clc
call
test
pusha
pushf
lea
je
cmc
sub
pushf
pushf
cmp
mov
pusha
jmp
bt
test
call
cmp
call
mov
push
data16
xor
mov
pop
jecxz
push
mov
mov
mov
cmp
dec
xchg
xor
push
sbb
loope
fs
mov
test
push
mov
out
inc
cltd
aas
sbb
in
fs
adc
adc
out
add
xchg
pop
and
and
sbbl
inc
mov
mov
imul
loope
aas
sub
cmp
movsl
mov
add
adc
add
icebp
data16
inc
lcall
setb
mov
pushf
pusha
mov
bswap
push
bswap
mov
pusha
mov
pushl
ret
pushf
pushf
call
data16
mov
xor
lods
lods
aas
sbb
ss
je
inc
test
xor
mov
mov
daa
in
xor
and
mov
add
pop
inc
adc
nop
mov
xchg
xor
xlat
insb
repz
pop
xchg
ret
pop
pop
xchg
inc
stos
push
fidivs
stos
ret
fwait
out
jecxz
shr
icebp
push
call
and
ja
popa
lock
push
cmp
repz
jnp
mov
lea
ja
pushf
pushf
add
sub
stc
or
jmp
call
pusha
mov
pusha
lea
ja
bt
add
rol
xor
sub
dec
mov
or
and
add
test
ror
mov
mov
setno
mov
test
push
push
pushf
repnz
jmp
jae
fdivl
add
push
xlat
adc
xchg
dec
lods
sbb
lea
add
repnz
jb
gs
sarl
add
cwtl
dec
pushf
dec
add
cld
addl
add
dec
hlt
mov
repnz
mov
mov
popf
xorb
mov
bswap
mov
mov
lea
pushf
pushf
movl
push
jmp
pusha
bt
and
movb
cmc
pushf
call
mov
movl
pushl
push
lea
jmp
enter
and
loopne
and
jp
mov
scas
stos
call
outsl
xchg
jo
xchg
lock
cmc
add
cmpb
es
mul
rcrl
jecxz
mov
lea
jge
jae
cmp
stc
pusha
pusha
add
jmp
test
test
bt
add
call
lea
je
clc
push
sub
pusha
cmp
cmp
pusha
jmp
jmp
xor
fabs
test
fisubrl
jmp
stos
pmaxsw
ds
ljmp
dec
testb
scas
in
ret
xlat
mov
icebp
je
std
in
mov
iret
push
imul
les
mov
iret
push
ljmp
sub
xchg
push
jne
ljmp
insb
repnz
movb
call
jmp
sbb
cld
add
jb
imul
and
cld
jecxz
addr16
sahf
test
push
fdivrs
orb
imul
icebp
cmp
cmp
lods
jno
subb
or
inc
call
push
popa
push
out
inc
mov
adc
ja
xor
jns
push
imul
sbb
pop
sahf
xchg
pop
dec
pop
jmp
jb
cmp
and
outsl
and
push
call
dec
fdivs
jmp
movsb
xlat
add
xor
adc
shl
mov
bt
pushl
jmp
call
mov
cmc
pushl
pusha
mov
clc
stc
rol
push
push
xor
clc
cmp
neg
movb
mov
pushf
pushf
dec
call
es
mov
clc
aam
movsb
lea
mov
fdivrs
xor
scas
sbb
fistpl
sub
cwtl
sahf
push
gs
test
or
mov
mov
stos
cld
mov
jo
pusha
movl
pusha
pushf
jmp
mov
or
push
jo
mov
test
int
jae
xchg
sub
out
in
mov
pop
cmc
jmp
shl
sahf
call
and
add
invd
lock
inc
cli
mov
sti
cmpsb
mov
mov
jb
cmp
repnz
lock
mov
lea
ja
jno
pushf
push
lea
jb
cmc
bt
push
cmpb
pushf
lea
jne
pusha
lea
jne
cmc
bswap
shl
mov
jmp
lea
jne
bsf
dec
pushf
rol
mov
rcr
movl
stc
shrd
sub
add
sbb
cmc
lea
clc
cmc
sub
pushf
pusha
pushl
popl
jmp
bt
cmc
test
mov
lea
jnp
test
pusha
pushf
pushf
pushf
lea
je
call
pushl
popl
cmp
cmp
pusha
push
pushf
lea
ja
inc
dec
rcl
shr
sub
bts
add
add
bts
sub
test
xor
mov
test
pushf
mov
test
call
mov
cmc
pushf
bt
stc
add
call
lea
jne
xor
bswap
add
mov
jmp
sub
add
lcall
xchg
dec
mov
scas
nop
jbe
add
cmc
cmpsl
cli
addl
xchg
sub
xlat
cld
xchg
negl
ss
jg
clc
lret
and
je
push
dec
push
sbb
jns
icebp
push
sarb
sub
fcmovu
divl
xchg
pop
call
pop
fnstsw
fcmovnu
and
inc
xchg
in
jb
mov
clc
mov
pop
cld
jns
inc
ret
scas
hlt
aam
loope
ja
rcl
jmp
sbb
jl
jg
rclb
cld
mov
mov
js
lret
loopne
mov
mov
mov
mov
fstl
adc
icebp
decb
sub
xor
fisubl
inc
out
add
aas
xor
mov
cmp
mov
scas
idivb
cmp
movsb
fldl2t
cltd
fisttpl
movsl
lock
jae
push
inc
mov
mov
and
js
push
lea
jb
bt
call
and
out
daa
repnz
mov
sub
jl
sub
add
xchg
adc
cs
mov
cmp
xor
fimull
enter
and
xchg
ja
cld
mov
cmc
cmp
mov
pusha
lea
ja
sbb
shl
setnp
sub
call
movb
pushl
lea
ja
push
lea
jb
stc
cmpb
jmp
call
mov
ror
cmc
push
stc
xor
stc
test
pushw
popfw
pushf
pusha
movb
pushl
inc
pushf
adc
pushf
push
push
pushl
pushl
ret
not
xchg
setg
movzbw
mov
lea
pushf
pop
pop
pushf
pushf
mov
mov
lea
mov
mov
jmp
dec
mov
adc
stos
scas
or
das
push
cld
out
xor
movsb
push
arpl
dec
hlt
notb
xchg
cmp
int
outsb
popf
pop
mov
fcmovu
shll
pop
push
pop
bound
imul
fwait
adc
lock
addr16
rol
stos
mov
mov
sub
inc
pop
out
in
push
sub
test
lods
sbb
sbb
xchg
adc
ret
mov
or
int
lock
sub
or
pop
fdivr
dec
fistpll
test
cmp
data16
sbb
sbb
adc
mov
sbb
cmp
int
addr16
xchg
mov
shrl
push
add
xor
hlt
or
jns
or
add
mov
out
mov
dec
scas
mov
cltd
cmp
orl
int
inc
pop
ret
aaa
xor
cltd
push
test
ss
inc
pop
dec
mov
movsl
sub
sti
and
adcb
pop
mov
das
arpl
or
les
nop
lahf
shr
stos
cmp
jne
adc
pop
mov
out
xchg
test
mov
or
sbb
dec
outsb
insb
lret
sti
jp
das
sbb
or
jp
fldenv
push
dec
xchg
cli
mov
cmpsb
mov
popa
aas
mov
cmp
mov
mov
lret
xchg
sub
xor
mov
xor
std
xchg
jle
sub
hlt
xchg
adc
push
retw
aad
subb
scas
pop
pop
mov
leave
sbb
mov
repz
xchg
jp
out
pop
aad
cld
mov
not
mov
xor
and
mov
add
pushf
sbb
mov
movb
pusha
sub
movw
pushf
repnz
push
pushf
lea
jne
rcl
rcl
rol
rol
mov
mov
not
jmp
lea
ja
setge
rcl
sub
shl
rcr
cmc
adc
add
movsbw
bsf
or
shl
mov
rcr
pusha
push
pushf
mov
test
cmp
jmp
imulb
insb
out
push
out
imul
inc
in
dec
push
sarb
lret
lcall
out
dec
cmp
add
ficomps
push
dec
negl
add
out
inc
idivl
adc
out
push
xor
sub
cmp
cmp
leave
call
popf
mov
jae
sti
sti
nop
adc
cmpsl
les
stc
les
xchg
shrb
and
pop
cmp
lock
lahf
xor
mov
icebp
popa
ret
lcall
cwtl
mul
mov
sub
sub
dec
xchg
push
jo
outsl
or
or
iret
les
das
lds
lahf
add
test
adc
mov
cmpsb
push
or
mov
out
adc
roll
mov
les
insl
dec
idivl
or
pop
leave
das
arpl
mov
pop
jns
jns
push
in
pop
inc
cli
mov
movsl
in
stc
popf
xchg
shrl
adc
xchg
repnz
push
leave
dec
int3
in
cmp
icebp
push
loop
into
hlt
xor
fstp
insb
in
je
pop
lea
outsl
xor
dec
addr16
out
je
or
ficoml
mov
cmpsl
and
mov
inc
sub
push
imul
test
pop
aad
pop
inc
inc
pusha
or
cmc
add
lods
shrb
mov
sbb
jmp
mov
dec
dec
mov
mov
lret
out
push
inc
cmpsb
pop
incb
cmp
int
movl
or
js
push
in
xor
push
movsb
repz
dec
test
dec
faddl
mov
jmp
adcb
movsb
testl
xor
insl
xor
cltd
and
mov
loope
adc
fs
test
sbb
sub
push
add
add
jg
push
push
addr16
jge
xchg
aas
pop
push
loope
scas
ss
or
into
or
xchg
add
faddl
mov
adc
cmp
daa
mov
dec
std
jns
xchg
in
hlt
cmp
fsubl
fildl
jl
xchg
in
out
jmp
sub
xchg
xchg
dec
sub
je
sbb
out
rcrb
pop
enter
mov
push
jmp
aad
sub
sbbb
int3
test
add
mov
inc
sub
cmp
push
nop
xor
pop
into
jmp
jge
mov
push
lret
jg
or
dec
outsl
xchg
inc
push
roll
lock
push
xchg
pop
xor
and
jecxz
dec
call
jnp
xchg
stc
jne
sbb
testb
popf
shrb
and
cmp
push
imul
das
add
lds
test
push
aad
fadds
popa
dec
push
sub
lock
mov
jmp
idivl
jae
mov
jb
out
sar
sbb
rclb
data16
mov
in
cmpb
fs
das
scas
iret
jmp
xchg
sub
xor
subl
jp
mov
clc
int
jecxz
push
repnz
rclb
mov
outsb
loopne
lock
inc
lret
dec
jnp
sbb
push
pop
stos
mov
cld
push
cmp
cld
in
movsb
and
stc
and
sub
ret
adc
cmp
fcomps
and
sub
adc
jmp
xor
ret
clc
leave
mov
out
sub
mov
rcl
pop
jecxz
stos
jp,pt
pop
adc
cmp
mov
sbb
rcr
pop
popf
sub
dec
ss
jecxz
push
push
call
lcall
or
test
mov
dec
mov
mov
xor
xlat
out
or
adc
addr16
into
push
sub
inc
mov
adc
lock
push
inc
dec
jecxz
shl
dec
xor
into
mov
adc
inc
pop
vrsqrtss
addr16
aaa
iret
scas
aaa
aaa
inc
xchg
es
xor
mov
lcall
cmpsl
pop
dec
jns
jne
arpl
cmp
mov
mov
leave
dec
loop
or
xor
push
bound
pop
push
out
sub
mov
dec
std
icebp
mov
stos
sub
stc
gs
and
sbb
pop
jb
imul
push
popf
mov
sub
dec
cwtl
lods
cltd
loop
mov
cli
xlat
and
pop
jae
mov
fisubs
loopne
jnp
mov
add
iret
aad
xchg
lret
ret
aaa
lea
mov
mov
repnz
ljmp
cmp
cmp
pop
cwtl
incl
adc
push
int3
jmp
cltd
mov
or
cmc
pop
xor
shl
cli
inc
dec
xchg
and
ja
inc
dec
xor
dec
nop
add
xchg
mov
or
mov
fs
inc
ret
sahf
lret
lahf
adc
out
das
inc
fbld
inc
aad
pop
fcomip
fsub
imulb
in
lahf
fdivs
jle
push
dec
loopne
mov
push
lret
lret
mov
mov
inc
jge
in
cmp
xchg
pop
inc
ss
divb
dec
daa
outsb
xorl
mov
xchg
add
adc
push
imul
dec
cwtl
sub
rcrb
or
scas
jge
imul
sub
sahf
cmc
jle
cmp
out
pop
mov
fs
pop
test
popf
outsb
repnz
ss
jge
movsl
mov
fists
popa
jne
jge
jbe
xchg
sub
int
test
loopne
inc
in
je
loopne
int3
inc
mov
jb
xor
mov
call
sbb
subl
and
pop
in
jo
mov
call
into
or
imul
cmc
ficomps
into
pop
roll
mov
adc
dec
aam
testb
pop
lret
sub
outsb
repnz
pop
mov
add
add
sub
inc
sbb
jo
in
push
out
pop
and
repz
pop
inc
mov
cwtl
in
adc
sub
jp
fwait
mov
pop
roll
mov
mov
inc
sub
mov
repz
call
clc
pusha
or
movb
call
pop
xchg
jp
ficompl
push
hlt
jmp
aaa
lahf
add
test
call
inc
mov
stos
cmc
imul
ret
rcrl
jle
push
addr16
outsl
sbb
dec
lcall
sbb
js
cmc
lea
xor
mov
push
pusha
push
jmp
pushl
call
bt
mov
and
shl
mov
stc
jmp
mov
jmp
movb
lea
jne
clc
cmc
call
pushf
mov
mov
pushf
mov
pushf
mov
mov
pushf
lea
jmp
push
mov
pusha
lea
jmp
call
mov
jmp
push
movb
jmp
pushf
bts
bswap
test
lea
pushl
cmp
jmp
jmp
pusha
mov
push
mov
pushf
pushf
mov
mov
pushl
lea
je
push
mov
pusha
pushf
mov
lea
jmp
bt
xor
pushf
stc
add
pushf
test
bt
cbtw
cmp
push
stc
cwtl
test
cmc
sub
pushf
push
add
call
mov
lea
jne
push
movl
push
lea
pusha
mov
pushf
lea
jmp
clc
pushl
stc
rol
call
clc
and
bswap
jmp
call
dec
btr
rol
shld
not
clc
bsf
lea
rcr
movzbw
sub
xchg
mov
call
mov
pushf
pushf
popl
pusha
pushf
call
sete
pusha
adc
rol
mov
test
cmp
pushf
xor
push
dec
jmp
xchg
cmp
bt
xor
lea
jns
rol
test
test
push
call
jmp
pushf
mov
pusha
call
pushf
ror
pushf
sub
jmp
mov
stc
mov
or
add
sbb
mov
pushl
cmp
add
bt
pusha
pushf
shld
pushl
mov
jmp
mov
pusha
lea
jl
pushf
mov
movb
jmp
pushf
push
mov
pushf
popl
call
lea
jne
pusha
pusha
movb
mov
push
push
pushl
lea
jmp
sub
jmp
jmp
pushl
not
bt
xor
test
jmp
call
bswap
mov
pop
setns
movzbw
call
lea
pusha
call
mov
mov
call
lea
cmc
pusha
add
clc
pusha
push
stc
ror
cmp
clc
cmp
sub
bt
stc
stc
xor
call
pusha
mov
call
push
lea
mov
mov
cld
pushl
pusha
pushf
rep
shl
bsf
mov
btc
call
pushf
pushl
lea
jne
bsr
sar
shr
cmp
xorb
pushf
mov
mov
mov
mov
lea
jmp
pushf
popl
jmp
div
push
call
dec
daa
mov
pushf
push
pushf
jmp
jmp
pusha
cmc
jmp
movl
mov
movb
pushl
push
lea
jmp
movsbw
lea
jae
mov
push
pushf
mov
lea
pusha
mov
mov
mov
movb
pushf
lea
jmp
jmp
pusha
push
pushf
mov
movb
mov
call
bt
sub
cmp
test
movb
jmp
mov
movb
pusha
pushf
lea
jmp
mov
mov
movl
jmp
mov
jmp
mov
pushf
pushf
pusha
pushf
popl
mov
call
stc
add
test
sub
mov
movw
mov
mov
movw
lea
jmp
sub
call
rcl
mov
pusha
push
test
add
movb
pushf
lea
jmp
cmc
jmp
lea
jne
jmp
bt
bt
shr
pushf
call
mov
push
call
divl
call
pusha
cmp
call
pusha
lea
jne
shrd
xorb
mov
mov
movsbw
pusha
mov
pushf
lea
jmp
push
call
mov
sub
mov
clc
pusha
clc
add
pushf
call
pushf
mov
push
mov
jmp
mov
movl
pusha
lea
jmp
add
add
neg
call
rol
bsr
bsr
add
adc
add
setae
bt
movzbl
bt
btr
jb
shrd
mov
clc
cmp
cmp
test
neg
test
call
cld
popf
pusha
lea
jmp
call
add
pushl
jmp
test
cwtl
pusha
stc
push
call
push
mov
cmp
sub
mov
pusha
jmp
call
pushl
popl
pusha
push
pushf
lea
jmp
cbtw
rcr
mov
cmc
push
call
jmp
stc
call
mov
pushl
pusha
push
push
lea
jmp
call
pushf
mov
push
pushf
jmp
rcr
cwtl
mov
clc
sar
test
sub
mov
bt
add
call
pushf
mov
mov
movl
pushf
lea
jmp
mov
pushf
mov
pushl
ret
movw
movb
lea
cpuid
jmp
clc
test
sub
pushf
cmp
test
and
pushf
jmp
mov
pushf
pushf
pushf
lea
jmp
call
bt
sub
jmp
push
mov
mov
pushf
pushf
lea
jmp
bt
mov
call
lea
jne
bsr
cmc
bsf
shld
mov
cmp
and
bt
cmp
call
pushf
mov
push
movw
mov
push
lea
jmp
lea
jne
pusha
movw
lea
je
test
test
cmc
push
xor
push
push
call
jmp
push
push
pushf
popl
call
mov
push
repz
popl
push
push
mov
movw
mov
mov
push
pushf
pushf
mov
pushf
pushf
pushf
pushf
lea
jmp
mov
shld
mov
mov
cmp
pusha
pusha
not
jmp
or
jmp
mov
pushf
jmp
jmp
mov
push
push
pushf
pusha
lea
jmp
shl
mov
cmp
pusha
sub
jmp
mov
pushf
pusha
lea
jmp
mov
mov
movb
pushf
popl
pushf
pushl
popl
mov
lea
jmp
mov
pushf
pushf
popl
movb
pushf
mov
movl
pushl
popl
pushf
pushf
pushf
lea
jmp
mov
pusha
movw
pushf
lea
jmp
jmp
jmp
movzbl
cltd
not
mov
pusha
mov
push
jmp
sub
movl
shl
pusha
pushf
mov
mov
jmp
pushl
popl
mov
lea
jmp
call
mov
movb
pushf
repz
popl
movb
mov
push
push
push
mov
call
bt
mov
clc
pushf
sub
call
bt
sub
movb
jmp
call
pushf
pushf
mov
pushf
movb
call
movb
mov
mov
lea
jmp
neg
mov
neg
adc
aas
cmc
mov
clc
stc
sub
push
mul
pusha
pushf
mov
mov
call
cmc
cmc
xor
cmc
xchg
stc
cmp
push
call
pushf
call
jmp
add
pushf
pushf
mov
pushf
mov
push
push
lea
jmp
pushf
call
jmp
movb
mov
push
pushf
mov
jmp
call
pushf
mov
push
mov
pushf
lea
jmp
rcr
mov
call
pushf
push
pushf
mov
push
movl
mov
pushl
ret
rol
mov
rol
and
push
mov
call
pop
mov
call
push
call
rol
xadd
shr
cmp
mov
or
rcr
add
mov
call
pusha
push
mov
mov
pushf
lea
jmp
call
call
not
bswap
mov
push
pusha
mov
call
pushf
pushl
pushf
lea
je
stc
jmp
mov
pushf
lea
jmp
pusha
movb
pusha
mov
pushf
mov
mov
mov
mov
jmp
lea
je
mov
pusha
push
push
mov
lea
jmp
movb
pushl
popl
pushf
lea
jmp
sub
jmp
call
sub
cmc
add
bt
clc
not
stc
neg
stc
sub
movb
mov
test
bt
sub
movw
pushf
lea
jnp
pusha
mov
pushl
pusha
movb
lea
jmp
pushl
bt
stc
xor
call
pusha
mov
lea
jno
pusha
mov
pusha
mov
jmp
call
ror
rol
btc
ror
sar
pusha
test
and
bswap
mov
jmp
jge
push
mov
pusha
pushf
mov
pusha
push
mov
mov
jmp
btc
movzbl
bts
movsbw
btc
dec
sub
dec
inc
inc
not
dec
rcr
push
add
add
pushf
rcr
neg
inc
not
shl
or
neg
dec
cmc
sub
bt
bts
mov
mov
cmc
add
call
push
call
bswap
pusha
push
push
pushf
dec
pushf
cmc
pushf
xor
test
clc
call
lea
jle
pushf
jmp
call
pushf
popl
pushl
pushf
pushl
popl
mov
pushf
pushl
lea
jmp
sub
call
xchg
lea
call
cmp
sub
cmp
shld
notl
sbb
shl
dec
setbe
mov
call
seta
push
dec
daa
mov
shld
movsbw
sar
inc
mov
lea
je
cmc
test
add
push
push
pushf
jmp
pushf
mov
pusha
lea
jmp
sub
push
shr
jmp
call
call
call
pushf
mov
pushf
push
mov
lea
jmp
movl
pushf
jmp
mov
pusha
mov
pushf
lea
jmp
mov
pushl
call
pushl
mov
call
add
jg
shrd
pusha
mov
lea
jp
pushf
movb
pusha
pushf
popl
jmp
bswap
push
pusha
lahf
mov
pusha
call
mov
pushf
pushf
popl
movb
mov
call
sub
jb
clc
bt
sub
pusha
cmp
add
jmp
cmp
rcl
adc
mov
bsr
sub
add
mov
jmp
jmp
mov
mov
pushf
movb
mov
jmp
mov
push
pushf
push
lea
jmp
pushf
mov
pusha
pushf
pushf
pushl
lea
jmp
call
inc
push
push
decl
call
clc
add
push
pusha
movw
pushf
lea
jmp
pusha
mov
pushf
mov
movw
push
mov
push
lea
jmp
pushf
stc
movb
xor
movw
jmp
call
clc
add
call
sub
pusha
movw
pushf
mov
mov
mov
movb
push
lea
jmp
mov
pushf
mov
jmp
jmp
pusha
mov
clc
mov
pushf
movb
sub
pusha
pushl
pushf
mov
mov
movw
pushf
movw
lea
jmp
pushl
mov
repz
popl
call
mov
push
pusha
repz
popl
pusha
mov
call
test
not
pusha
call
mov
push
mov
push
pushl
pushf
lea
jmp
push
pushf
popl
push
call
movl
call
xchg
shld
dec
movsbw
mov
xchg
mov
not
rcl
sar
mov
bt
pushf
cmp
clc
add
pusha
pusha
call
rol
xadd
xor
movzbl
shrd
push
add
bswap
ror
or
xor
shrd
sub
shl
inc
shrd
xor
shl
bsr
add
shr
bswap
cmc
pushf
movzbl
clc
sub
jmp
mov
cmpl
mov
movl
mov
pusha
pushf
mov
mov
call
movw
mov
call
and
pushf
push
jmp
mov
jmp
bsf
mov
mov
rcl
mov
bt
test
sub
stc
call
btc
clc
bswap
and
mov
pusha
stc
pushf
add
pushf
lea
jmp
clc
ror
call
pushf
mov
jmp
call
push
add
add
mov
shrd
bsf
mov
clc
shld
add
lea
push
dec
movzbw
lea
sub
pop
jmp
rcr
bt
mov
test
pushf
add
pushl
lea
jmp
call
pushf
movb
xchg
call
and
lahf
bsr
mov
or
btc
not
mov
cmc
cmc
add
call
jmp
call
push
push
mov
push
mov
mov
mov
lea
jmp
pusha
pusha
call
rol
cmp
mov
pushf
ror
xor
shl
sub
btr
not
stc
xor
cmc
add
cmp
add
shrd
add
test
xor
pushl
mov
call
pushf
mov
pushf
push
call
pushf
repz
popl
jmp
jmp
mov
push
lea
jmp
lea
jns
push
mov
mov
pushf
pushl
pusha
lea
jmp
push
pusha
mov
movb
mov
pusha
mov
call
pushf
pushl
popl
mov
pushl
lea
jmp
xchg
movw
mov
not
movzbw
lea
pushl
xchg
pop
jmp
lea
jmp
cmp
call
xor
mov
pushl
push
add
cmp
pushf
bt
cwtl
stc
cmc
bt
cmp
sub
push
mov
movb
movw
push
push
lea
jmp
bsr
sbb
mov
cmp
pushf
pushf
add
pusha
lea
jmp
mov
movb
pushf
pusha
pushl
ret
mov
call
pushf
mov
movl
call
jmp
subb
cmpsl
mov
jg
mov
call
mov
decl
mov
jmp
jle
mov
je
ljmp
mov
call
mov
ljmp
jge
decl
test
cli
je
dec
jo
ljmp
mov
clc
jno
cmp
call
mov
jmp
mov
mov
outsl
mov
lcall
mov
incl
mov
mov
mov
jmp
mov
push
andb
mov
jmp
mov
pushl
andl
mov
mov
dec
outsb
mov
incl
mov
dec
andb
sbb
mov
ljmp
jge
pushl
outsb
mov
call
jge
dec
mov
jmp
mov
jmp
jg
inc
lea
cmp
decl
jg
pushl
outsb
mov
jmp
andl
sbb
or
lcall
mov
call
outsb
mov
incl
jno
incl
jnp
jg
mov
decl
decl
decl
decl
decl
decl
decl
decl
cmp
pushl
insb
mov
cmp
jnp
mov
decl
mov
ljmp
jo
ljmp
jo
ljmp
jo
ljmp
jo
ljmp
jo
ljmp
jo
ljmp
jo
lcall
mov
lcall
mov
push
jb
mov
lea
jnp
mov
decl
mov
push
andb
call
jge
decl
mov
incl
mov
lcall
mov
pushl
jge
dec
mov
push
mov
inc
lea
cli
je
inc
outsl
mov
dec
andb
outsb
mov
incl
jnp
pushl
andl
iret
andb
mov
jbe
decl
mov
inc
lea
jmp
andl
cmp
mov
andb
les
push
andb
cmp
pushl
mov
mov
mov
pushl
jno
lcall
mov
call
mov
ljmp
mov
call
jge
jmp
jl
jmp
push
lcall
jmp
mov
incl
jnp
jmp
outsb
mov
dec
mov
ljmp
jl
decl
mov
pushl
mov
dec
andb
mov
mov
cmp
pushl
addr16
xchg
decl
test
decl
decl
decl
decl
decl
decl
decl
pushl
jge
dec
jo
lcall
outsl
mov
ljmp
jge
call
jo
ljmp
jo
ljmp
jo
ljmp
jo
ljmp
jo
ljmp
jo
ljmp
jo
ljmp
jo
lcall
je
lcall
je
inc
jge
lcall
xor
add
jmp
shl
push
call
pusha
push
mov
mov
pusha
pushf
push
mov
push
movb
pushf
lea
jmp
sets
bsr
mov
clc
add
jmp
mov
mov
push
pushl
jmp
movb
call
pushf
popl
jmp
call
jmp
aad
rcr
shld
mov
shld
inc
bts
shl
mov
call
pushl
pusha
push
mov
call
repz
popl
jmp
mov
push
lea
jmp
movl
pushf
jmp
jmp
pusha
movb
not
test
stc
pushf
and
push
mov
pushf
pushf
popl
jmp
mov
pusha
lea
jmp
mov
push
movb
pushf
mov
mov
push
mov
pushf
pushf
movw
lea
jmp
jmp
inc
dec
xchg
pushl
mov
movzbw
mov
mov
lea
movsbw
mov
mov
xchg
push
inc
pushl
xchg
push
lea
call
xchg
mov
stc
test
sub
rol
mov
call
cmc
bt
clc
not
stc
pushf
test
bt
sub
push
stc
jmp
not
push
mov
jmp
call
mov
pusha
mov
lea
jmp
pushf
popl
push
push
push
pushl
popl
pushf
push
lea
jmp
call
pushl
mov
pushl
popl
pushl
mov
lea
jmp
jmp
push
pushl
mov
mov
push
pushf
lea
jmp
mov
push
mov
call
jmp
clc
add
call
call
pushf
pushl
mov
push
pushf
lea
jmp
lea
mov
movzbw
pop
pusha
pushl
pushf
lea
jmp
bts
sub
ror
shl
mov
or
or
cmc
add
mov
not
not
mov
mov
push
call
mov
pushf
jmp
pushl
popl
mov
lea
jmp
pushl
mov
movsbw
not
mov
xchg
mov
mov
pusha
bswap
repz
popl
pushl
jmp
clc
shrd
call
pusha
mov
call
movb
xchg
call
jmp
pushf
lea
jg
mov
call
repz
popl
call
mov
mov
pushf
pushl
pushl
ret
pushl
pushf
mov
call
or
call
movb
mov
pushl
push
lea
pushf
push
lea
jmp
jmp
cmp
neg
test
sub
add
jl
clc
test
test
mov
pushf
sub
jmp
or
or
aaa
bsr
mov
cmp
clc
call
pusha
rol
cmp
sub
clc
call
bt
sub
call
lea
jne
dec
xor
mov
push
call
mov
call
pusha
lea
ja
rcl
mov
rol
daa
lea
add
and
rcr
cmc
sub
pushf
clc
ror
rcl
lea
pusha
or
sar
bsf
and
pop
pushf
call
mov
movw
movb
lea
jmp
pushl
popl
mov
lea
jmp
repz
popl
jmp
sub
call
pushl
popl
pushf
pushf
movb
pushf
lea
jmp
mov
cmp
jmp
and
cwtl
push
cwtl
rdtsc
call
push
push
jmp
sub
movb
shr
pusha
movb
movl
jmp
jmp
jmp
lea
jne
pusha
push
call
mov
pusha
pushf
popl
push
movw
pushl
popl
pushl
lea
jmp
repz
popl
push
movb
mov
movb
pushf
mov
mov
push
mov
push
pushf
pushf
pushl
lea
jmp
or
neg
lahf
jmp
pushf
mov
push
lea
jmp
mov
cmp
test
neg
clc
push
cmp
jmp
jmp
mov
clc
pushl
popf
movb
lea
jmp
call
pushf
call
movzbw
movzbw
movsbl
mov
push
push
jmp
shld
neg
rcl
not
mov
add
sbb
or
test
mov
jmp
rcl
sbb
mov
cmp
mov
btr
pusha
aad
mov
movzbw
cmp
mov
call
xchg
stc
cmc
mov
pusha
mov
sub
push
jmp
mov
pusha
pushf
lea
jmp
and
bsf
xor
bsf
xor
mov
call
clc
pusha
call
call
jmp
dec
pusha
sub
bswap
rcr
ror
xor
not
pushl
movzbw
ror
sub
jns
and
movsbw
pusha
mov
pushf
push
test
pushf
add
jmp
cmc
sub
cmp
push
cmpl
pushf
pushf
pushf
mov
jmp
test
bt
stc
add
jmp
push
not
call
dec
not
movsbw
btc
mov
bt
bswap
test
bt
jne
test
xor
jmp
jmp
mov
push
call
test
inc
mov
pushf
stc
add
push
pushf
pusha
lea
jmp
jmp
pushf
jmp
push
pushf
mov
push
pushf
pushf
push
lea
jmp
jmp
push
mov
pushl
pusha
lea
jmp
and
and
add
movzbl
pusha
jmp
pushl
popl
pushl
lea
jmp
add
pushf
call
mov
jmp
pushf
popl
call
mov
pushf
cmc
jmp
xor
mov
clc
call
mov
rcr
mov
push
inc
shr
or
mov
movw
add
call
xor
or
cmp
jnp
mov
bt
cmc
call
jmp
btc
aad
sbb
stc
mov
cwtl
pop
btc
shr
call
mov
movb
push
lea
jmp
mov
mov
repz
popl
call
call
or
jmp
pusha
mov
push
push
push
jmp
add
movb
pusha
pushf
mov
pushf
pushf
pushf
lea
jmp
lea
not
pop
pusha
pushf
lea
jmp
mov
pushf
push
mov
jmp
add
pushl
lea
jmp
bt
sub
pushl
pusha
call
mov
pushf
push
pushl
pushf
lea
jmp
push
pushf
lea
jne
shr
shr
not
cmc
mov
pushf
and
test
bt
cmp
clc
cmp
mov
lea
jne
bsr
xorb
jmp
bt
and
mov
pushf
test
bt
jmp
pushf
popl
call
mov
pushl
popl
mov
push
pushf
lea
jmp
pushf
pushf
jmp
mov
call
pushf
bt
mov
rcr
jmp
inc
jmp
cmp
stc
add
call
repz
popl
jmp
movb
cmp
or
call
xor
bswap
bt
dec
mov
clc
bt
cmp
clc
add
pusha
pusha
lea
jmp
jmp
call
mov
push
pushl
jmp
sbb
bswap
shr
mov
bt
clc
cmp
add
pushf
pusha
mov
call
call
push
mov
push
pusha
jmp
sub
call
pusha
stc
mov
sub
test
mov
shr
pushl
mov
push
movb
mov
call
mov
pushl
lea
jmp
mov
mov
pushf
mov
pushf
mov
call
jmp
jmp
add
pushf
mov
lea
jmp
jmp
lea
jne
call
pushf
pusha
mov
movb
mov
movb
pusha
mov
mov
jmp
setle
mov
push
jmp
jmp
lea
bsf
btr
btr
mov
stc
test
test
add
pusha
pushf
pusha
lea
jmp
call
call
movb
pusha
mov
movb
mov
pushf
popl
pusha
mov
pushf
pushl
popl
mov
pushf
push
mov
lea
jmp
clc
test
cmp
pushf
pushl
popl
test
push
add
mov
lea
je
popf
pusha
mov
lea
jmp
pushl
popl
push
pushf
mov
push
lea
jmp
mov
sub
jmp
pushf
mov
mov
mov
lea
jmp
add
cmc
xadd
shl
mov
sub
sub
ror
mov
test
stc
sub
cmp
pushf
shl
call
jmp
movl
push
push
mov
pusha
push
mov
call
call
movzbw
bswap
mov
cmc
add
pushf
pushl
pusha
mov
lea
jmp
call
jmp
mov
call
mov
movw
pushl
lea
jmp
add
stc
cmc
call
lea
pusha
pushf
movb
push
lea
jmp
not
bt
test
jmp
lahf
mov
clc
jmp
jmp
stc
pushl
cmc
and
cmc
clc
stc
cmp
lea
jl
pusha
pusha
pushf
lea
jne
and
test
xorb
jo
push
mov
mov
lea
jmp
pusha
pushl
mov
call
jbe
bt
mov
pusha
mov
pushl
clc
mov
cmp
sub
push
shl
jmp
pushf
pushl
popl
pushl
lea
jmp
mov
call
cmp
xor
test
add
pushf
bt
test
xor
mov
movw
mov
pushl
stc
cmp
cmp
sub
pushf
mov
pushf
push
push
pushf
lea
jmp
push
pusha
decl
push
lea
jnp
pushf
push
lea
jne
jmp
cmp
rol
mov
test
pusha
add
pushl
pushl
pushl
lea
jmp
push
add
jmp
pusha
mov
jmp
stc
and
cmc
pushf
cmp
pushf
lea
jne
clc
xorb
jmp
rcl
cmp
clc
add
and
rol
neg
sub
sub
rcr
movzbl
shrd
shrd
mov
push
test
pushl
cmc
shl
cmc
lea
jl
cmp
clc
shr
push
call
pushl
pushf
mov
jmp
not
pushl
test
pushl
xor
jmp
mov
pop
xchg
pop
setnp
mov
push
mov
pop
movsbw
mov
pushf
movb
movw
mov
pushl
ret
sar
rcl
jmp
movb
pushf
popl
jmp
jge
push
sub
jmp
push
jmp
cmp
cmp
sub
movb
jmp
movsbw
bswap
jmp
jmp
call
pushl
popl
pusha
movb
mov
pushf
lea
jmp
call
mov
call
jmp
movb
mov
jmp
pushf
pusha
mov
pushf
popl
pushf
call
call
jmp
xor
bt
mov
mov
clc
ror
movw
movb
bswap
pushf
dec
test
xor
pushl
sub
movw
jmp
bt
call
pushf
jmp
call
clc
dec
add
jmp
pushl
popl
pushl
push
lea
jmp
dec
sub
dec
movzww
pusha
xchg
pusha
movb
cmc
lea
clc
stc
xor
jmp
clc
mov
test
mov
rol
mov
push
clc
pusha
add
call
call
push
pushl
popl
pushf
pushf
pushl
mov
lea
jmp
repz
popl
push
mov
push
mov
mov
call
adc
shl
sub
sbb
sub
not
btc
xor
jmp
pushf
mov
push
movb
jmp
test
stc
call
pusha
call
lea
setno
pop
pushf
lea
jmp
pushf
xchg
pushf
call
add
xor
mov
clc
pusha
test
add
call
setb
jmp
mov
sub
mov
mov
mov
test
jmp
pushf
popl
pushf
call
sete
mov
clc
cmc
clc
pushf
add
call
shrd
mov
rol
cwtl
lea
cmc
mov
sbb
das
sar
das
mov
daa
mov
btc
pushf
pushf
mov
rcl
pushl
popf
xchg
bswap
call
