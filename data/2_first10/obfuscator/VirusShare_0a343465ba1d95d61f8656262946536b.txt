push
call
ret
ret
push
add
mov
xor
or
fsub
sub
out
fcoms
call
xchg
cmp
sbb
insb
or
or
inc
pop
inc
xor
iret
or
fldl
scas
addr16
dec
mov
bound
loope
hlt
daa
jmp
push
movsb
jb
add
adc
jmp
dec
clc
mov
mov
or
sbb
mov
xor
mov
pop
sbb
xchg
scas
add
adc
sbb
cmpb
rclb
enter
in
push
xchg
aas
mov
sbb
add
push
push
xor
xchg
cs
jmp
js
cltd
push
js
and
dec
pop
mov
aam
mov
push
stos
bt
push
or
cmpsb
cli
push
jecxz
outsb
loop
jge
add
cmc
test
push
in
pop
cmpl
jo
mov
in
dec
xchg
cmp
cwtl
xor
cmp
scas
out
jae
popa
xchg
shll
pop
push
push
jo
inc
jbe
mov
and
das
pop
mov
or
test
mul
leave
popa
fimuls
popf
loopne
shlb
rolb
movsb
out
add
xchg
mull
aaa
mov
imul
xlat
imul
mov
sbb
push
repnz
rcrb
sbb
ror
or
push
sbb
sub
add
stos
sub
call
or
out
xor
loopne
addr16
ret
jecxz
dec
mov
xchg
sub
mov
jb
inc
mov
mov
cmp
push
lret
push
mov
out
fsubr
push
cld
xchg
xor
in
pop
xchg
ret
shl
lds
out
in
and
test
jno
or
xchg
insl
aam
mov
dec
push
cld
jge
mov
push
sbb
inc
xchg
js
sub
dec
mov
ds
sub
movsb
cmp
imul
dec
inc
mov
inc
sub
ficompl
push
jecxz
jb
dec
adc
inc
nop
mov
push
shll
rcll
push
repz
and
inc
out
out
adc
dec
xlat
call
hlt
cmp
mov
sti
ficompl
push
mov
jb
sub
mov
add
push
das
or
jecxz
mov
adc
jb
cli
add
xchg
xchg
rep
loop
fldl
mov
adc
push
je
cmp
stos
pop
pop
jbe
push
iret
fs
enter
loope
mov
cmp
adc
out
pop
in
mov
int3
or
dec
sub
dec
dec
pop
nop
adc
outsl
mov
mov
inc
push
xchg
enter
cmp
lahf
add
sub
fcoml
push
or
dec
mov
sub
in
add
hlt
gs
push
clc
stos
das
inc
popa
mov
jge
loop
loopne
or
subb
cld
dec
pusha
popl
add
xor
adc
mov
notb
std
test
sti
ret
inc
push
mov
and
out
mov
vsqrtsd
je
cltd
out
out
enter
jmp
cmc
xor
add
mov
pop
cli
enter
in
add
xor
mov
cmovle
repnz
mov
dec
jns
inc
cwtl
pop
aaa
pop
fcmovu
push
jl
push
ss
popf
add
jbe
jnp
jae
out
dec
mov
and
push
cmpsl
dec
lds
mov
rcrl
xchg
out
lret
sbb
icebp
ja
add
push
xchg
mov
jg
icebp
push
mov
xchg
cs
jo
setns
mov
mov
pusha
ficompl
jnp
add
mov
push
adc
subl
stc
xchg
std
pushf
mov
xor
mov
mov
or
and
mov
xor
xchg
cli
mov
in
mov
add
lods
xchg
push
fmull
pop
jb
test
cs
push
mov
mov
push
adc
insl
insl
dec
jno
pop
mov
mov
mov
mov
rclb
xlat
push
mov
xchg
mov
adc
into
add
pop
popa
jg
repnz
dec
lahf
dec
mov
pop
rcr
adc
lods
in
ror
dec
mov
xchg
aaa
cltd
cltd
bound
in
inc
rclb
inc
ja
scas
fstl
xor
out
icebp
mov
mov
mov
shlb
cs
push
or
push
xchg
or
lahf
xchg
xor
jno
outsl
sbb
mull
and
lahf
cs
xchg
inc
scas
popa
sahf
ret
sbb
aaa
pop
cmp
loop
fbld
dec
jmp
pop
xor
sub
lods
push
lods
scas
jno
lahf
pop
aaa
add
adc
sbb
push
mov
and
fsubl
push
jmp
lds
arpl
jge
sbb
sahf
adc
sti
insl
or
jae
sub
out
mov
mov
push
xor
stc
arpl
and
inc
xor
daa
jle
fs
or
stc
fucom
hlt
add
and
sbb
lds
popf
mov
sbb
fcmovne
mov
or
pop
add
sti
cmpsl
out
pop
cmpsl
lahf
mov
movsb
mov
aad
xchg
notl
in
mov
int3
clc
or
fimull
pop
rclb
iret
mov
cwtl
es
loopne
pop
xchg
lea
adc
xlat
sahf
push
scas
push
sarb
popf
push
cld
add
dec
lcall
push
mov
or
out
lcall
mov
jecxz
hlt
xor
popf
jo
xlat
sbb
iret
or
lds
ret
mov
outsb
sub
jmp
inc
pop
daa
cmp
sbb
adc
add
mov
daa
mov
shl
push
nop
flds
dec
popf
sbb
out
sub
jl
les
aad
mov
sub
push
and
outsl
adc
nop
pop
packssdw
inc
sub
and
pusha
cmp
shr
cmc
and
fwait
ror
push
xchg
comiss
filds
jge
insl
ljmp
lcall
sbb
arpl
sbb
pusha
and
pop
or
jl
cli
les
pusha
dec
push
mov
insb
ret
xchg
fbstp
out
mov
jp
js
push
aas
mov
adc
sahf
dec
js
xorb
in
shlb
pop
adc
movsl
cli
pop
jae
mov
int3
sbb
shl
int
lea
stos
mov
xor
mov
cmp
jmp
sbb
xchg
add
lods
sbb
pop
and
or
lods
lock
mov
xchg
xchg
mov
push
jns
xchg
mov
adc
lcall
cmp
mov
adc
arpl
scas
fs
repz
xor
test
ljmp
mov
mov
dec
jbe
cs
ret
xchg
dec
sbb
mov
pop
scas
lods
pusha
inc
fsubrs
inc
push
test
test
or
divl
cltd
leave
and
or
sub
inc
mov
xor
dec
nop
jp
adc
inc
jge
call
pusha
std
cmpsb
dec
dec
add
movlps
jmp
jg
push
in
jp
add
in
xor
xor
push
mov
xchg
xlat
popf
rorl
and
jl
mov
mov
cmpb
sbb
and
sbb
push
jp
fmulp
inc
icebp
scas
test
xlat
out
inc
jbe
sbb
xchg
mov
test
xor
xor
das
lock
jg
push
inc
iret
sarl
jae
push
mov
push
lahf
aas
rolb
dec
dec
mov
mov
pop
cmp
jecxz
xchg
dec
in
mov
push
push
cmpsb
mov
jl
dec
test
cmp
dec
adc
std
jo
mov
test
sub
jecxz
cmc
inc
sub
rorb
fwait
ss
int
mov
add
ljmp
fsubrl
popf
pop
sub
cli
cmp
push
xchg
les
dec
jge
fs
cltd
jl
aas
stos
dec
lea
aad
test
mov
mov
sub
jb
xchg
sbb
jns
iret
jo
movsl
aad
sub
std
sahf
roll
push
xchg
mov
call
jb
add
js
les
cmc
mov
fistps
outsl
xor
sub
into
jl
cs
inc
or
xchg
push
ds
repz
push
lahf
ljmp
aad
stos
inc
adc
mov
xor
sbb
fldcw
ljmp
push
add
rclb
cltd
and
jne
sbb
sub
into
sbb
sub
pop
xlat
dec
pop
mov
inc
ss
out
inc
mov
andl
and
popa
out
sbb
mov
aaa
inc
lret
mov
test
insb
add
out
fsub
pop
add
add
nop
es
or
cmp
sub
xor
dec
adc
push
jg
mov
cwtl
mov
lahf
sub
mov
das
mov
jo
lcall
sahf
mov
fs
pop
movsb
jmp
flds
mov
fsubrl
fs
and
push
insb
sbbl
es
lds
fwait
scas
sub
xchg
out
push
insl
sbbb
icebp
xor
sbb
imul
fs
jb
push
in
cmp
int3
cmp
xor
pop
dec
cmc
sub
mov
xorl
out
out
loop
js
push
push
adc
cmp
jb
pop
cld
aad
pop
mov
icebp
mov
pop
and
stos
lcall
xlat
or
mov
pop
std
cld
inc
mov
gs
push
out
xchg
insb
or
stos
xchg
psrlw
or
mov
xchg
test
shrl
lock
mov
aam
jns
mov
mov
lods
or
cmpsb
mov
js
jo
cmp
insl
sbb
leave
adc
sti
xchg
imulb
xor
repnz
inc
inc
stos
and
lds
jo
stc
xor
clc
jle
adc
std
add
movsb
jg
mov
sub
adc
js
clc
stos
mov
aaa
test
gs
xor
jno
int3
xchg
jecxz
call
pop
gs
inc
adc
cmp
and
lahf
sub
out
dec
scas
sbbb
mov
cmpsl
ret
mov
and
aam
popa
ja
repnz
jne
lods
in
shr
psllq
add
push
sbb
mov
fsubp
xchg
lret
jmp
xor
imul
int
ja
in
ss
imulb
and
fnstenv
sbb
mov
mov
sbb
imul
lea
xchg
xor
or
pop
push
pop
jo
pop
popa
sub
imul
cmpsl
cli
cwtl
jl
and
loopne
xchg
insl
loope
rcrl
call
push
mov
and
pop
cmpsl
fs
addr16
pop
enter
dec
pop
shll
mov
or
cltd
cmpl
dec
lret
mov
nop
cmp
jecxz
cwtl
mov
push
push
pop
push
std
sbb
xchg
ja
lahf
xor
xchg
mov
scas
out
inc
imul
pop
add
mov
out
or
sub
adc
xchg
insb
loop
xchg
or
dec
xchg
inc
dec
ja
mov
xchg
push
inc
cmpsl
in
popa
ret
pushw
in
test
dec
push
outsb
pop
add
inc
loope
filds
xor
pop
jmp
out
sub
dec
sbb
lcall
mov
stos
fistl
inc
cmp
mov
add
dec
sbb
fsubs
aam
inc
fsub
mov
lahf
jg
dec
sti
out
or
rcll
mov
pusha
out
ficoml
sub
pop
mov
mov
fsubrl
fdivs
jge
hlt
cmp
mov
fidivrs
xchg
orb
jae
out
adc
jmp
or
lahf
arpl
stos
popf
xchg
push
nop
push
repz
xchg
push
gs
fdiv
ret
ljmp
cltd
or
ret
mov
sbb
push
and
and
mov
mov
repz
add
dec
mov
cwtl
nop
fsubs
sti
cmp
outsb
fiadds
jne
in
sub
in
pop
sub
ljmp
roll
out
rcrb
ret
outsb
pop
push
lds
aam
lds
cmp
data16
inc
notb
outsb
push
pop
lahf
pop
mov
in
fildl
ret
mov
mov
or
xchg
push
ljmp
popf
and
adc
sbb
rcrl
call
ret
testb
sbb
das
sbb
mov
outsb
xor
decb
xchg
and
jge
ds
or
pop
shll
adc
lock
add
popa
cmp
scas
add
sub
fstps
imul
jl
dec
mov
sub
cs
lret
pusha
or
jo
cmp
stos
arpl
stos
xchg
std
jb
mov
fbstp
sbb
add
lahf
mov
imulb
lds
pop
lds
stos
push
jmp
push
cld
std
sub
inc
xchg
testl
negl
popl
dec
loopne
iret
push
ja
dec
push
or
mov
stc
add
or
push
mov
mov
and
mov
andb
shlb
ret
adc
add
push
les
das
cmp
mov
dec
jg
dec
add
pop
dec
cmc
jp
adc
pop
inc
xchg
fcmove
int3
ss
adc
insb
adc
mov
test
in
cmp
push
mov
in
add
lretw
xor
xor
jle
inc
fisttpll
sub
insl
jbe
int3
test
scas
mov
les
push
jl
jb
add
stos
push
xor
adc
push
aas
cmpsb
add
or
pop
sbb
ret
jae
mov
shufps
sbb
in
or
and
adc
arpl
jo
xchg
and
mov
adc
scas
cltd
jnp
stos
rcrb
bnd
xor
js
repnz
das
out
xchg
xchg
pop
mov
sar
jo
add
nop
cmp
cli
dec
dec
clc
adc
nop
dec
xchg
xchg
mov
bound
push
lds
mov
pop
inc
or
jecxz
aas
imul
push
pusha
xchg
cmp
or
pop
mov
push
outsl
mov
ljmp
add
push
dec
push
or
xchg
les
leave
xchg
sub
push
insl
mov
cs
inc
rclb
imul
lods
cmp
cmp
mov
mov
outsl
popa
sbb
mov
dec
mov
push
mov
mov
psraw
pop
ret
pushf
testl
fcom
sarb
stc
xchg
adc
test
xor
cmp
mov
jle
shr
sub
stos
and
sub
aaa
cmp
lret
loopne
mov
in
adc
in
in
mov
and
std
in
loopne
into
mov
pop
push
imul
mov
cltd
mov
push
dec
jae
cmpsb
imul
sti
xor
cmpsl
dec
cmc
pop
pop
out
or
or
dec
push
push
les
xchg
insl
lds
std
inc
add
inc
cmp
jb
adc
loop
test
cmp
mov
idivb
test
out
in
sub
push
into
dec
xchg
in
pop
cmpsb
push
add
loope
mov
adc
out
inc
pop
cmp
xchg
xor
mov
les
std
adc
mov
cmpsb
fdiv
inc
add
leave
inc
sahf
push
dec
add
movsb
push
fs
popf
mov
sbb
out
dec
dec
mov
sbbb
or
mov
ret
cmp
or
movsb
dec
std
ds
cmp
idivl
stos
cltd
and
xchg
push
cli
aam
je
test
idivl
call
mov
xchg
dec
mul
sbb
fwait
xlat
out
sti
aas
xlat
lcall
std
loop
sbb
xchg
xlat
or
fdivs
aas
pop
cmp
in
inc
adc
arpl
scas
lds
cwtl
movsl
mov
stos
mov
shl
aas
mov
push
lods
xor
in
lahf
adc
push
mov
mov
leave
popf
inc
pop
outsb
sub
sbb
test
push
movsl
dec
xchg
ret
aaa
adc
jns
movl
dec
fdivrs
cmp
dec
xchg
push
les
adc
jecxz
call
loop
sbb
pop
es
in
push
fimuls
bound
adc
xchg
mov
pop
inc
idiv
ds
and
test
cmp
ja
aam
pusha
scas
inc
adc
test
mov
pop
push
mov
stos
mov
xchg
insb
mov
or
dec
aas
push
stos
imul
in
add
pop
fsubs
mov
jecxz
mov
jl
loop
cmp
pop
xchg
aad
pop
pop
gs
xor
pushl
xchg
and
ror
cltd
jg
and
jmpw
sub
pand
clc
pop
cwtl
add
lods
das
sub
jb
outsl
sub
pop
repz
and
mov
sbb
sbb
jg
sub
push
xor
enter
ret
sub
test
loop
les
xor
mov
mov
shll
popa
jp
cwtl
sbb
xchg
xor
or
insl
jne
std
push
aam
aas
jle
sahf
inc
mov
xor
adc
mov
fsubrl
idivl
stos
rclb
jbe
cmp
mov
add
ficoms
mov
cmp
rcrb
dec
shrl
mov
jle
pop
xor
mov
pop
adc
xchg
fnstenv
xchg
fwait
shll
or
jo
mov
mov
cmp
push
in
stos
pop
and
sub
and
lods
adc
mov
cmpsl
dec
aam
inc
jmp
pop
aad
inc
in
fidivs
rorl
sbb
sbb
bound
outsl
jns
and
mov
pusha
dec
aad
inc
into
xchg
jne
ja
inc
pop
aas
xor
dec
inc
jp
adc
jge
fsin
dec
inc
xchg
mov
jae
mov
dec
ret
and
inc
and
mov
scas
push
call
sbb
jnp
mov
mov
xchg
pop
push
mov
adcb
shlb
mov
andl
stos
mov
mov
je
arpl
add
ret
jno
aaa
out
xor
xlat
inc
imul
enter
bound
movsl
and
add
xchg
ss
outsb
xor
jae
xchg
fs
clc
fs
mov
push
adc
pop
rcll
mov
xchg
adc
int3
in
mov
jle
ret
jg
push
cmc
inc
push
dec
andl
jb
xor
mov
out
pop
mov
add
xor
jns
push
xchg
push
movl
incl
pusha
cmpsb
aaa
mov
jns
xchg
mov
jge
and
dec
sbb
adc
lds
mov
jno
pop
xor
repnz
das
xor
stos
nop
mov
add
scas
clc
inc
scas
in
mov
push
sti
fisttpl
or
jae
idivb
int
dec
pop
mov
adc
popf
adc
xor
lcall
sbb
pop
in
and
and
aaa
or
dec
add
xchg
push
jo
adc
mov
mov
movsl
or
test
or
mov
pop
and
adc
push
jnp
push
out
sbb
sarl
shlb
or
movsb
clc
pop
fsubrl
das
inc
test
popf
shr
arpl
mov
push
inc
jg
xchg
adc
subb
enter
xchg
add
inc
fsubr
out
jo
test
or
fsubrl
xchg
inc
int3
cmp
cmp
lret
ret
pop
mov
in
mov
fwait
sti
sub
mov
fstpt
ret
aas
push
adc
scas
fcmovnu
push
mov
testb
inc
ret
into
jge
inc
push
out
lret
push
pop
xchg
xor
es
or
dec
pop
mov
lds
inc
jnp
shl
shlb
sbb
xchg
xor
sbb
aas
and
pusha
add
outsl
push
sbbb
aas
add
xchg
pop
xchg
lds
movsb
mov
jne
xchg
sub
test
arpl
popa
xchg
test
mov
inc
dec
ret
mov
out
jno
mov
sbb
test
lret
shrb
sahf
cmpsl
repz
scas
cmp
inc
aas
lock
mov
sbb
inc
xchg
pop
mov
push
dec
mov
xchg
outsb
insb
std
movsl
or
sub
pop
dec
cmpsb
mov
or
repnz
les
cmp
notb
mov
pop
adc
dec
xchg
in
inc
dec
iret
sub
pop
mov
cli
and
ss
fsubp
mov
sti
sub
sub
in
fnop
or
pusha
leave
inc
cmp
loope
pop
add
pop
fs
int
mov
pop
into
push
fsubrl
ljmp
cmpsb
add
pop
and
push
pop
push
pop
xor
mov
scas
shll
push
loopne
leave
sub
xchg
fisttpl
movsl
add
and
mov
notb
mov
cmc
lret
xor
test
das
shrb
add
pop
iret
dec
lcall
std
adcl
les
xchg
dec
or
lcall
pop
jno
push
call
mov
mov
movsb
fidivs
repnz
xchg
daa
lods
stos
aam
rorl
sbb
test
add
in
mov
xchg
ja
movsb
fnstsw
xor
int
xchg
mov
and
mov
jge
xchg
adc
adc
add
and
mov
xor
ror
sbb
pop
rclb
rclb
mov
push
mov
jb
cmpsb
push
inc
stos
pop
test
scas
mov
sbb
add
aad
fs
mov
mov
sub
notb
pop
add
push
ss
push
scas
imul
subb
xchg
icebp
sub
jae
mov
cli
or
sub
add
xchg
das
test
test
pop
and
jne
pop
pusha
ret
mov
call
jns
push
mov
push
ret
cmp
mov
sub
scas
add
fldl
xchg
xor
push
lahf
push
loope
xchg
or
rorb
mov
lods
pop
xor
or
daa
out
push
push
and
lea
fmulp
call
lds
pop
insl
mov
pop
pop
xor
arpl
lock
test
mov
dec
sbb
pop
jnp
fmulp
fwait
cs
aas
test
adc
lods
loop
movsl
lahf
scas
inc
pop
adc
pop
sarl
jbe
jne
and
insl
movsb
or
loope
data16
cwtl
or
testl
jae
rorb
lea
jae
je
repz
fadds
and
xor
repz
mov
cmp
mov
cmc
outsl
mov
push
sar
jmp
test
int3
in
push
cltd
scas
inc
test
jecxz
pop
ds
sub
popf
inc
push
push
rcrl
and
mov
and
jbe
xor
pop
and
jmp
ret
cmpsb
call
push
aam
in
ftst
insl
cmp
sahf
mov
loop
sbb
orb
clc
mov
loope
iret
lds
das
push
push
mov
xchg
jno
mov
and
dec
data16
add
add
je
rol
dec
mov
xor
add
jecxz
xchg
cmp
das
pop
mov
std
cmp
jb
fcomps
movsb
aas
sub
mov
inc
repz
add
pop
stos
dec
jp
iret
add
mov
push
or
hlt
aas
lods
jae
lea
fimuls
cmp
aas
mov
movsb
lds
mov
sub
loope
insb
and
cwtl
jp
inc
andb
inc
dec
nop
addr16
sub
cmp
or
push
mov
cmp
jo
arpl
in
mov
mov
vmovupd
or
add
test
shlb
pushw
mov
shlb
aad
popf
arpl
mov
pop
mov
pop
mov
mov
inc
jae
test
movsb
inc
ja
aad
pop
and
ljmp
xor
inc
mov
cmc
aad
cmp
push
daa
adc
pop
mov
xchg
push
pop
aad
dec
xchg
sub
js
push
push
mov
push
insl
cmp
dec
and
mov
dec
test
xchg
std
clc
lret
push
cmp
dec
jbe
pop
filds
pop
icebp
or
cld
ljmp
or
mov
rcll
sub
mov
loope
push
dec
int
insl
sub
jnp
mov
out
cltd
aad
sbb
cmp
je
pushl
outsl
sbb
push
xchg
xchg
and
mov
push
jmp
jnp
pop
xchg
xchg
dec
pop
cmc
loopne
mov
aas
ljmp
incb
in
mov
fsub
ds
shl
mov
pushf
flds
cmp
pop
push
in
push
or
negb
push
inc
and
mov
mov
add
int
shll
xchg
adc
test
and
sbbl
push
std
in
push
mov
xchg
mov
adc
imul
fwait
mov
lret
xchg
xchg
xor
loop
pusha
inc
in
or
mov
in
mov
int
and
enter
cmc
dec
fsts
js
pop
sub
enter
or
imul
mov
ss
push
out
cs
lock
roll
dec
pop
xchg
pusha
test
lcall
mov
fsubl
mov
push
jge
jns
jecxz
xchg
mov
iret
nop
stc
fnstsw
in
loop
cmp
outsl
jb
adcb
loope
and
xlat
xor
popf
cld
rcl
mov
mov
lret
sub
incb
aad
addr16
cmp
sub
cld
loopne
adc
dec
jg
pop
adc
sub
mov
cmp
cmpsb
icebp
dec
inc
dec
or
push
mov
or
mov
sub
sub
dec
test
adc
gs
xor
mov
lds
mov
es
sub
and
es
xchg
mov
movsb
jp
icebp
movsb
aad
je
add
pop
cmp
fiadds
sbb
adc
stc
pop
scas
dec
lcall
jg
out
stos
cmpl
and
pop
icebp
aad
xchg
ljmp
loopne
fs
rorb
and
cmpsb
mov
mov
mov
rclb
rcr
rorb
add
pushf
idivb
andb
mov
xchg
adc
lcall
jae
lods
cmp
mov
push
xchg
fisubrs
mov
push
imul
jbe
out
aas
daa
add
lret
mov
inc
mov
push
cltd
enter
xchg
lahf
orl
popf
dec
nop
pop
xor
insb
xchg
jbe
jl
cmc
cli
js
add
add
rorb
pop
jno
data16
iret
sbb
arpl
jl
loop
inc
lret
xlat
inc
popf
lret
outsb
popa
adc
in
push
imul
insl
cmpsb
cmp
jge
pop
outsb
mov
adc
pop
fs
leave
outsl
cmp
insl
ljmp
into
loopne
mov
scas
test
ficompl
and
test
lret
mov
adc
out
dec
mov
pop
sbb
aaa
push
push
jb
leave
movsl
rcrl
loopne
ljmp
aam
dec
in
pop
and
lds
cmp
faddp
dec
cmp
inc
scas
cli
out
fstp
cmp
mov
adc
lock
cwtl
bound
gs
xor
rclb
or
loope
aam
in
out
pop
mov
gs
push
imul
and
data16
pop
xchg
push
clc
push
sahf
jmp
scas
pop
push
sub
sbb
inc
cmpsb
mov
pop
dec
in
cld
js
pop
push
rol
xchg
dec
push
mov
iret
jmp
dec
in
lds
push
push
xchg
and
xchg
sbb
dec
ret
ficoms
xor
xchg
pop
aad
decb
inc
add
lahf
jmp
cmp
insb
nop
or
out
rcrb
and
pushf
js
ret
mov
or
dec
jno
add
idivb
das
outsl
mull
sbb
lock
pop
inc
std
mov
jmp
aad
jbe
adc
or
imul
ja
repz
adc
loope
sub
sbb
pop
fsts
jg
dec
addr16
push
loope
inc
ja
repz
or
mov
lret
lock
lret
dec
push
cmp
je
sub
insb
mov
std
cmp
fs
cmpsb
rcl
sub
lods
aas
cwtl
cmp
test
mov
push
mov
bound
jg
or
and
inc
cli
xor
imul
mov
or
and
lcall
dec
lcall
inc
mov
icebp
adc
add
cmpsl
testl
push
loope
in
push
lods
iret
pop
jo
mov
jb
movsb
mov
mov
adc
add
and
sbb
pop
mov
push
inc
sbb
loopne
xor
adc
adc
pop
mov
jecxz
ss
into
pushf
jno
dec
popa
pop
call
mov
negb
mov
ds
xor
popf
push
nop
lcall
sahf
test
adc
xchg
mov
mov
mov
stc
adc
cs
push
lods
dec
sub
dec
cwtl
scas
adc
dec
add
fimull
push
in
je
pop
pop
test
subl
cli
xchg
mov
jge
mov
pop
xor
les
lds
cld
xchg
xlat
movsl
or
sbb
sti
fiadds
cwtl
clc
in
scas
int3
stos
mov
cmp
ja
inc
lds
dec
mov
push
out
cltd
ret
mov
test
ds
out
scas
push
das
sti
ds
jecxz
aam
stc
xchg
lcall
jp
in
stos
cmp
insb
lods
sbb
fisubl
lock
and
mov
test
xchg
in
add
xlat
xor
ret
cmc
out
pusha
add
xchg
subb
movsb
sbb
pop
loopne
fcoms
icebp
pop
ficompl
pop
xlat
hlt
xchg
mov
mov
fcoml
and
cmpsl
cmp
adc
insb
repz
cld
adc
test
mov
jmp
jbe
enter
pusha
mov
sarb
fists
or
add
shll
sti
or
lahf
gs
mov
jbe
in
frstor
mov
lods
push
add
fildll
and
hlt
rcll
loope
pop
cmc
push
stos
xchg
fsubl
push
cltd
lahf
ja
andb
pop
stos
mov
mov
mov
in
sbb
push
adc
pop
inc
cmp
out
stos
jo
adc
jg
mov
xor
test
sub
or
sub
pop
cwtl
or
insb
dec
stc
adc
sub
jp
test
imul
jp
xchg
xchg
xchg
inc
sbb
bound
addr16
xor
pop
jge
test
sbb
movsl
xchg
push
sub
xor
lods
mov
dec
xchg
rcr
lret
shll
pop
out
mov
sbb
pinsrw
sbb
mov
pop
lahf
sub
inc
push
out
inc
jle
test
bound
ret
xchg
mov
int
rcll
in
out
cmp
cs
inc
add
inc
lea
jns
sub
and
push
lcall
int
sub
shl
insl
adc
popf
mov
push
pop
add
cmp
xlat
xchg
js
add
ret
jns
pop
xor
into
out
push
daa
repz
pop
inc
fldcw
fstl
jae
cmc
xlat
lods
mov
les
jns
push
negb
fsubl
and
push
stc
repz
loope
cmp
fmull
loope
push
xor
pop
inc
iret
inc
cmp
sbb
out
das
jnp
sahf
sub
sbb
fsubr
mov
mov
sub
imul
jmp
push
into
je
rep
push
ret
mov
jmp
mov
movb
adc
mov
jl
cmp
inc
sahf
cmc
sub
movsl
sub
movsb
call
adc
xchg
or
xorl
into
mov
and
lcall
xor
adc
mov
dec
out
mov
invd
or
fmuls
lds
cmp
idivl
sub
push
addr16
mov
mov
dec
jge
out
frstor
inc
dec
stc
movsb
xorb
sbb
adc
mov
fiaddl
ficomps
in
xchg
jns
xlat
repnz
cmp
xor
mov
arpl
test
test
lret
enter
insl
popa
adc
pop
fmull
repnz
outsl
nop
xchg
cmpsb
mov
adc
add
push
mov
leave
lret
pop
mov
mov
push
test
xchg
cwtl
jp
fldz
dec
fs
mov
fimuls
loope,pt
xor
pop
scas
mov
mov
aam
stc
jp
mov
fisubrs
daa
xor
sub
into
lret
rcrl
add
push
in
or
into
es
and
cld
sub
in
orl
sub
jno
cs
xchg
mov
push
imul
iret
shl
jno
cmc
in
fisttpll
lcall
cmp
pop
mov
imul
fsubrl
or
mov
xor
lahf
push
in
sub
mov
jecxz
js
push
inc
xchg
add
sbb
in
neg
arpl
add
aaa
popf
cmpl
add
adc
ret
lds
and
mov
aas
mov
sbb
push
xor
out
pop
sub
mov
cmp
push
cmp
pop
negl
pop
inc
shll
jne,pt
cli
sbb
cwtl
mov
push
ret
adc
mov
aas
adc
and
add
fcmove
aaa
rorb
and
cmc
pop
xor
cmp
jnp
sahf
push
fwait
dec
lock
xor
mov
xor
xor
xchg
sbb
and
das
dec
mov
push
pop
jl
add
jns
mov
mov
jne
cwtl
testb
fcos
in
xchg
rcll
mov
jae
enter
push
pop
mov
jnp
mov
hlt
and
and
pop
dec
push
push
push
lds
mov
inc
cwtd
xor
inc
push
pusha
inc
sbb
cld
leave
pop
dec
in
jle
sub
icebp
bound
out
pop
and
jno
icebp
mov
pushf
imul
inc
xchg
insl
int3
ja
cmpsb
insb
jnp
mov
loopne
add
sarl
enter
stos
imull
add
mov
xlat
push
xchg
sbb
movsb
adc
inc
dec
stc
add
jnp
lahf
xor
imul
jge
push
aam
pop
and
shll
or
mov
or
shl
and
dec
dec
xor
ds
js
mov
loope
sbb
add
outsb
stc
xlat
lret
gs
sti
in
ret
out
mov
pop
inc
mov
ss
cld
ror
xchg
test
or
jg
in
pop
gs
adc
stc
fwait
popa
out
xor
xchg
jo
js
std
out
mov
or
mul
mov
pop
pop
insb
icebp
rcr
push
mov
mov
push
loop
repnz
sarb
repnz
cmp
push
je
and
jl
dec
jge
mov
mov
mov
out
fadd
popa
add
sub
and
cld
or
mov
pop
daa
jecxz
mov
jno
xchg
adc
adc
jmp
mov
je
mov
mov
fs
dec
pop
mov
stos
arpl
push
inc
xchg
sub
dec
mov
pop
push
loopne
into
push
and
inc
nop
sub
mov
mov
jecxz
mov
jb
push
lcall
jge
add
jle
incl
jecxz
out
or
mov
mov
fdiv
test
mov
or
mov
or
add
loope
sub
lds
in
pop
xor
into
int
jg
xchg
fwait
pusha
mov
dec
std
stos
rcll
js
lret
lods
mov
xor
sub
imulb
xchg
xchg
push
popf
adcl
xor
je
fs
jnp
mov
push
mov
jp
xchg
or
aas
xor
icebp
push
push
or
mov
sbb
jl
loop
or
or
andl
movsl
fs
popa
push
cmp
dec
test
mov
xchg
xchg
call
push
aam
ret
mov
xor
fs
aam
inc
mov
adc
adc
push
jecxz
scas
jne
mov
cwtl
push
mov
aas
cltd
stos
in
mov
add
cmp
cmpsl
mov
sbb
xchg
dec
out
sub
out
aad
outsl
dec
adc
loopne
divb
insl
push
push
adc
stc
push
inc
aas
pop
and
gs
cs
jns
sub
mov
cs
mov
lock
mov
call
sub
mov
sub
movl
xchg
adc
and
dec
repz
mov
inc
insb
inc
pop
xor
mov
cmpb
shlb
in
sbbl
cmp
add
lods
mov
xor
jp
jns
push
inc
mov
adc
leave
or
sahf
inc
dec
jp
and
xchg
and
nop
imul
mov
cmpsb
jbe
mov
sbb
aaa
pop
out
mov
inc
sub
mov
out
jnp
or
lods
cmpsb
inc
popa
test
andb
inc
rep
mov
ror
stos
sbb
je
pop
push
mov
inc
inc
xchg
xchg
aaa
dec
jbe
adcb
sbb
adc
addr16
sub
lea
mov
pop
cmp
aas
fdivl
mov
inc
out
filds
push
sbb
mov
imul
insl
pushf
jnp
push
sbb
out
dec
stos
out
loopne
cltd
sub
dec
sub
pop
cmpsb
add
out
incb
xorl
jae
mov
fmuls
fsubrp
jae
jno
lret
cmp
xor
or
jnp
push
scas
lock
jge
sbb
sub
push
jle
stos
mul
les
mov
dec
push
popa
js
sbb
cmp
fcoml
dec
push
cltd
out
iret
int
int
pop
test
inc
xchg
push
pushf
jecxz
lods
mov
adc
stos
insb
sbb
pop
push
mov
je
lea
pop
sub
fildll
mov
and
test
or
mov
push
add
imul
cmpl
rcrl
into
add
icebp
xchg
bound
lcall
xchg
shll
inc
push
popa
loop
xchg
lcall
repnz
fwait
adc
and
cmp
cmpsb
iret
lea
imull
lahf
push
inc
push
enter
pop
jmp
adc
stos
cmpsb
clc
and
sti
mull
insb
ss
mov
mov
stos
repz
cmp
sbb
adc
sbb
push
mov
test
xor
movsl
mov
cmc
or
insl
xor
lcall
pop
or
cmp
mov
test
shlb
jae
lods
mov
pop
dec
outsl
cmp
repz
int
mov
jmp
scas
jp
push
loope
pop
jbe
es
mov
cmp
mov
pop
repz
out
shll
xorb
jnp
xchg
mov
mov
insb
gs
out
inc
mov
iret
jp
nop
sti
or
lods
add
sahf
fisubl
ds
loop
push
cwtl
mov
sbb
jnp
xor
adc
imul
add
fistps
sbb
pop
ror
fisubrs
ja
inc
dec
inc
sahf
repz
mov
mov
inc
mov
adc
imul
sub
xchg
rolb
or
loope
xor
outsb
aad
and
shrb
test
inc
adc
jge
scas
cmc
cmp
push
ret
add
push
add
cmp
sarb
xorb
das
sub
adc
jmp
add
stos
lahf
jno
in
add
nop
xlat
push
push
add
loopne
sbb
imul
pop
cmp
ljmp
pop
negb
mov
pop
scas
cwtl
mov
add
and
test
mov
cmc
jo
cmpsl
push
inc
xor
testl
xchg
cli
ret
mov
push
mov
xor
mov
inc
xchg
adc
iret
dec
movsb
xorb
repnz
adc
cmp
mov
shll
lcall
loope
pop
clc
jbe
mov
loop
in
xor
cltd
fildll
xchg
aaa
stos
push
ficoml
and
xor
arpl
mov
adc
cmp
sub
outsb
or
push
or
mov
mov
dec
xchg
lock
mov
mov
pop
mov
sbb
nop
add
enter
pop
mov
into
dec
cmp
insl
fucomip
lods
rcrb
leave
arpl
push
sbb
or
xchg
mov
mov
stos
movb
mov
add
ja
into
jns
sub
incb
and
sub
pushf
or
lock
pop
rep
ret
xor
fs
inc
sbb
cmpsl
dec
xchg
mov
or
dec
shld
push
pop
loope
das
repz
test
movsb
andl
cli
loop
sbb
xor
insb
cmc
jle
xor
push
sub
das
stc
xor
enter
leave
xor
cmp
fists
imul
or
sub
mov
xor
fsub
or
cltd
roll
xchg
or
xor
sub
enter
jo
dec
add
mov
jne
inc
cmp
xlat
repnz
jmp
clc
addr16
sarl
cmp
rcr
outsl
sbb
xchg
add
sub
cmp
in
testl
sbb
mov
add
xor
adc
xor
sub
mov
sbb
adc
mov
xchg
testl
or
pop
fcom
loope
pushf
cmovle
ja
jecxz
jmp
out
or
cmpsl
jae
cmp
shlb
daa
insl
lds
dec
add
sub
mov
lods
cltd
mov
mov
out
adc
adc
adc
adc
nop
dec
test
or
xchg
sti
lcall
outsl
sub
mov
fwait
pop
push
and
dec
xor
shll
pop
rolb
mov
sub
iret
jnp
add
ret
lods
mov
das
sub
dec
test
in
and
sub
lret
bnd
xchg
cmc
and
push
int
imul
outsb
mov
cmp
mov
adc
test
jae
cmpsl
add
fidivrl
jp
sbbb
inc
cmp
in
adc
cmp
jmp
add
sbb
dec
int3
push
add
lret
pop
in
xabort
sahf
jge
lea
shlb
jg
xor
ss
mov
jl
lret
inc
es
cld
test
fstpl
add
mul
jmp
cmp
pop
stc
fimull
and
inc
out
outsl
or
cwtl
and
push
xor
pop
mov
dec
mov
scas
mov
insl
and
jns
add
mov
pop
xchg
adc
or
ja
cs
cmp
fisttpll
orl
test
aaa
or
add
or
cwtl
xor
jmp
xor
test
sbb
mov
dec
cli
jle
das
lahf
sbb
out
out
cli
lea
jmp
inc
sar
jmp
sbb
xor
out
or
fistl
jns
dec
rcrl
lcall
inc
mov
sub
add
jecxz
dec
push
popa
xor
cltd
jmp
fisubrl
roll
xchg
outsb
dec
pop
mov
loopne
decb
ret
fisubs
xor
pop
mov
add
pop
sbb
add
bound
dec
mov
cltd
mov
mov
cld
mov
sbb
dec
repnz
pop
jne
fs
mov
ljmp
setbe
or
sub
push
mov
lea
dec
pushf
add
ljmp
xor
fnstsw
rorb
cs
mul
pop
aas
ja
stos
popf
adc
mov
or
inc
sarl
fs
shr
jecxz
sar
and
sbb
hlt
adc
fistps
push
sbb
test
push
mov
test
call
dec
jnp
push
xchg
or
mov
pop
lods
js
dec
mov
sahf
gs
rol
xor
mov
jmp
rorl
testb
inc
out
lods
pop
aad
fcompl
and
loopne
call
lock
jb
lock
pop
add
dec
xchg
adc
pop
stc
cli
arpl
jmp
jg
lret
push
adc
lret
negl
mov
daa
fbld
frstor
mov
and
repz
mov
and
outsl
daa
jae
push
hlt
mov
cs
rorb
negl
lret
dec
sub
xchg
push
and
mov
in
out
inc
dec
in
adc
push
xor
add
scas
cmp
testb
mov
jg
out
sbb
xchg
rcll
aad
lods
in
and
adc
aaa
mov
mov
adc
ds
call
je
mov
xlat
or
inc
notb
loop
sub
cmp
enter
outsb
sbb
cmp
rcrl
out
hlt
lret
pmuludq
sbb
nop
cli
xchg
add
addr16
pop
sub
leave
xchg
fiadds
ret
fcom
cli
and
pop
jno
xor
imul
push
enter
mov
pop
cmp
cld
mov
enter
cmpsl
push
push
xor
or
aad
ja
fistpl
add
add
and
data16
mov
adc
sbb
icebp
push
pop
and
dec
arpl
lea
jbe
lock
insb
sub
jge
fidivrs
fiadds
fsubs
rorb
or
aas
cmc
outsb
orb
out
ret
sahf
sbb
pop
sub
or
adc
daa
pop
shrb
js
ja
push
outsl
mov
bound
push
gs
pop
hlt
fsts
adcb
jae
xchg
dec
push
xor
dec
outsl
loopne
and
rcl
push
pushf
push
sbb
jl
fs
adc
cmc
and
push
cmp
rcrl
jnp
mov
outsb
fwait
sbb
andl
xor
gs
sbb
ja
insb
es
sbb
adc
pushf
xchg
gs
sbb
fsubrs
les
sub
idivb
mov
imul
adc
iret
mov
aad
add
push
aaa
fdivrl
mov
xlat
xchg
sub
enter
cmpsb
sub
xchg
push
adc
in
insl
push
sub
pop
add
jno
mov
xor
add
movsl
ret
xor
les
aam
jno
adc
xchg
sub
mov
addb
mov
fisubl
loopne
int3
enter
inc
aas
push
loop
in
call
adc
and
pop
outsb
dec
ja
call
int3
mov
fstl
pop
mov
in
add
stos
adc
jmp
test
fst
int
pop
ret
pop
jo
push
xchg
js
push
push
test
bound
sbb
xchg
mov
mov
and
adc
sarl
sarl
repnz
pop
pop
xchg
cwtl
and
adc
xor
push
inc
movsb
mov
dec
loopne
nopl
or
xchg
lret
adc
jbe
mov
stc
xor
or
fstpt
movb
jns
jle
cmpsl
icebp
or
cmp
mov
ja
insl
jmp
add
pop
lret
int
jp
xchg
movsl
fs
pop
sub
insb
lahf
fldenv
mov
and
sti
lcall
xchg
out
jge
inc
loope
mov
dec
cmp
in
adc
push
inc
subb
insb
mov
cltd
pushf
adc
or
mov
sub
xchg
iret
sarb
or
lret
addr16
daa
mov
loop
lahf
push
iret
jg
addb
out
mov
xchg
push
push
ret
or
jmp
pop
aas
enter
dec
movsl
mov
cmpsl
and
and
movsb
out
sahf
mov
repz
in
mov
aad
mov
loopne
sub
adc
test
adc
mov
out
js
data16
stos
int3
push
jp
dec
mov
je
fldenv
mov
add
adc
cmp
mov
pop
jp
add
jo
mov
pop
mov
mov
js
sbb
pop
add
cmp
xchg
add
add
cmp
mov
jl
push
push
or
test
sbb
shl
pushf
pop
in
ret
sbb
and
mov
ja
fsubs
jae
mov
or
adc
and
mov
mov
cmp
aaa
push
mov
pop
dec
sbb
adc
shlb
fsubl
test
fildll
ljmp
pop
pop
mov
xchg
add
jb
loope
cmc
jne
imul
in
push
out
dec
repnz
or
push
adc
xchg
jne
cmc
adc
pop
push
push
pusha
fdivrs
adc
fsubp
mov
mov
push
xor
sbb
rclb
inc
movsl
nop
into
and
mov
dec
mov
mov
cld
pop
rcrl
push
jo
jl
lcall
xchg
mov
imul
cmpsl
cmp
mov
push
cmp
sbb
xchg
repz
xor
in
ja
dec
or
dec
mov
add
outsb
mov
int
addb
push
xor
insb
mov
fisubl
lret
sbb
sbb
xchg
sbb
mov
mov
inc
cmp
pushf
jg
push
pop
push
jmp
shrb
or
cmp
mov
sbb
movsl
stos
inc
xchg
and
xchg
shll
loop
lahf
cltd
or
pop
pop
cmp
stc
or
xor
in
push
fstl
es
push
test
shlb
jae
add
leave
jno
push
push
cld
jg
loopne
loopne
inc
and
mov
sub
aad
test
cld
dec
pop
insl
sbb
iret
arpl
insl
pushf
inc
lds
loopne
inc
dec
fmuls
xchg
in
in
inc
in
pusha
popa
sub
jl
loop
lds
cs
xor
mov
mov
fsub
loopne
out
mov
dec
jno
xor
mov
mov
out
jle
xor
loop
je
shrb
xchg
xlat
pop
sbb
sub
push
lret
or
pop
icebp
xor
out
sub
repnz
cmp
push
mov
ret
lcall
and
insb
out
and
and
dec
hlt
cmc
shl
sbb
cmc
daa
shll
shlb
cmc
adc
out
lea
dec
sbb
fnstcw
into
lahf
adc
imul
mov
leave
dec
xlat
subl
cmp
inc
mov
jnp
xor
lret
mov
pop
hlt
popa
lods
stos
sbb
mov
mov
sti
add
mov
mov
inc
push
cmc
lahf
ret
jae
or
jo
and
inc
mov
rclb
dec
inc
mov
pop
cs
pop
pop
inc
mov
dec
mov
ljmp
add
xorl
bnd
cmp
repz
push
outsb
lahf
loop
xchg
jno
mov
xchg
in
shlb
popl
adc
cmp
sub
ljmp
movsl
jno
adc
and
sub
out
enter
popf
hlt
mov
repnz
clc
sbb
pop
adc
ljmp
pop
jbe
inc
sub
mov
and
xor
pop
cmp
jno
dec
ret
xor
gs
mov
jge
jno
xchg
cmc
mov
lods
ficomps
ja
inc
dec
out
in
fldt
adc
test
rcl
addl
lcall
xor
js
xor
lret
jo
rcll
out
leave
jnp
fcmovne
jle
sahf
test
cli
lahf
sbb
and
fisttpl
movsl
push
call
test
sub
dec
sbb
sub
ret
fnclex
or
xor
jl
dec
mov
adc
mov
dec
push
xor
mov
mov
lret
out
std
scas
push
mov
fs
xchg
pop
mov
pop
mov
xor
je
sbb
adcb
jle
daa
adc
inc
dec
mov
sbb
push
jo
dec
aam
mov
cmp
mov
push
lods
jo
cmpb
rcr
loop
xchg
xchg
cmp
setno
mov
push
pop
adc
mov
nop
mov
sbb
inc
sbb
jg
je
dec
add
scas
adc
or
imul
sahf
cltd
or
pop
addr16
aam
mov
aaa
xchg
das
movb
xchg
pop
icebp
cli
mov
push
in
dec
out
inc
stos
mov
cmp
mov
sbb
xor
das
pop
inc
mov
stc
mov
mov
pushf
mov
in
push
aam
mov
jg
xchg
iret
inc
popf
mov
nop
mov
mov
jno
adc
das
insb
data16
scas
ret
nop
mov
sub
cmpl
stos
xor
inc
je
std
mov
sbb
outsl
fs
mov
sbb
fdivrl
daa
sub
aas
pop
cli
cmp
movsb
rcll
jne
in
icebp
mov
xor
and
xchg
xchg
fs
pop
mov
push
mov
bound
imull
pop
inc
inc
mov
lea
stos
sub
mov
mov
xchg
jmp
xchg
dec
jge
mov
jle
ds
inc
xlat
movsl
fcomps
xor
dec
cmp
repz
movsl
rolb
js
daa
shl
sbb
es
lret
call
shlb
sahf
lahf
cmc
pop
sub
into
add
popf
add
xchg
xlat
les
push
ror
xor
jg
or
push
test
and
sti
add
mov
jne
gs
pop
rcl
jns
repnz
xchg
xor
sbbb
lea
push
cmp
mov
push
imul
clc
pop
push
nop
mov
sarb
add
sub
jnp
xchg
hlt
cmp
ret
cmpb
in
mov
and
cltd
fisubs
out
push
cli
cmp
adc
leave
ds
imul
pop
frstor
aad
add
fsubrl
std
addr16
mov
inc
push
stos
and
insb
cmpsl
mov
lds
rcrl
icebp
xchg
int
sub
dec
jne
cmc
mov
cmp
mov
sub
pop
sti
icebp
arpl
scas
aam
js
int3
jbe
xchg
popf
jmp
gs
daa
in
daa
test
les
mov
push
and
call
sbb
cltd
fcoms
aam
push
sub
and
or
cmp
cmp
sbb
pusha
or
das
jmp
aaa
sub
int
mov
cltd
fmulp
sbb
or
xchg
lcall
pop
pop
sub
sbb
inc
inc
jle
pop
add
js
or
and
and
test
into
adc
sub
lea
push
xlat
jle
sbb
enter
mov
insl
mov
or
ss
shlb
push
dec
pop
test
lock
mov
jo
int3
fdivs
adc
imul
stos
nop
inc
pop
jg
hlt
cld
fnstsw
mov
lods
out
add
in
cmp
arpl
in
xchg
fldl
cli
cmpsb
lock
insl
dec
push
add
push
push
sbb
and
jmp
pop
dec
ret
push
les
mov
mov
pop
jb
pop
in
fcoml
mov
std
sub
sti
dec
inc
mov
imulb
clc
adc
inc
inc
mov
add
rolb
sub
gs
in
out
movsb
pop
jmp
dec
fs
mov
and
inc
and
pop
mov
andb
xchg
das
pop
fnsave
mov
adc
add
les
mov
xchg
in
lods
jno
sbb
xchg
lea
jecxz
mov
xor
xor
sub
dec
pop
mull
hlt
call
stc
xchg
icebp
and
push
ja
sbb
inc
aad
push
adc
pushf
cmp
es
mov
inc
stos
cmp
cmp
adc
outsl
imul
xor
sbb
mov
in
dec
in
push
push
inc
fwait
cltd
dec
data16
call
rcrb
loopne
int
pop
popa
push
mov
or
mov
xchg
jb
xor
dec
xor
scas
jp
sar
add
movsl
adc
push
fisttpl
stos
mov
repnz
scas
ljmp
div
rorb
fistps
addr16
push
cmp
orb
xchg
das
je
xor
xchg
std
sbb
or
and
arpl
sbb
pop
repnz
sub
xchg
pop
ret
adc
sub
cmp
inc
jae
fs
mov
push
xchg
xor
lods
mov
sub
mov
or
inc
mov
lret
mov
mov
pop
adc
orl
insb
cmp
mov
adc
test
repz
mov
or
das
repnz
adc
sub
push
sti
dec
xor
pop
arpl
pop
data16
pop
insl
das
fisubrl
aas
sbb
pop
aaa
out
xchg
stos
lods
negb
pop
cs
xor
push
sbb
dec
clc
pop
inc
dec
movsb
inc
in
xor
fnstsw
lods
mov
mov
jnp
bswap
hlt
adc
sbb
in
mov
stc
cmp
ds
call
or
inc
sbb
xchg
sbb
mov
xor
in
pop
jnp
push
out
push
cmc
inc
push
out
push
or
loope
xor
sarl
into
sbb
das
xorl
fisubrl
scas
ljmp
pop
iret
popl
stc
and
insl
lahf
sbbb
dec
sub
mov
fists
sbb
xchg
sub
out
test
outsl
push
fcoml
dec
inc
mov
gs
call
mov
add
cmp
orb
pop
test
sahf
sub
xchg
insb
sub
sbb
cmp
and
push
adc
sti
jno
push
movb
out
je
subb
gs
inc
ds
pop
sub
cwtl
jns
mov
jmp
hlt
jae
xchg
jp
jb
inc
aad
lret
popf
je
cmc
add
or
push
pop
pop
xchg
or
inc
insl
mov
push
fbstp
loope
adc
insb
mov
imul
xor
fidivl
pop
xor
fstpl
loop
cmc
xor
cmp
cmp
pop
cmp
xchg
sbb
adcb
das
lods
repz
lea
xchg
nop
pop
sbb
stc
sbb
jne
stos
outsl
and
cld
mov
and
push
or
sahf
jecxz
pop
or
das
dec
push
stc
sbb
sub
sub
loope,pt
fwait
jmp
and
imull
push
adc
mov
jecxz
gs
jae
mov
outsb
scas
xor
push
into
pop
inc
or
cs
shrb
movsl
int3
rclb
push
repnz
cltd
ffreep
test
sub
or
fldenv
inc
dec
xor
mov
nop
sahf
ret
loopne,pn
fsubrs
cltd
add
rcl
pop
sub
movsb
stc
sub
pop
inc
movsb
enter
repnz
adc
adc
xor
loopne
ja
fdivr
pop
aam
mov
les
loop
fwait
sub
scas
pop
mov
ja
mov
loopne
cmpsl
sub
lea
xor
jp
xor
cld
icebp
nop
popa
and
xor
and
mov
out
es
mov
jle
cmp
sub
lds
cmp
cwtl
and
ret
bound
jl
insl
pusha
cltd
pop
mov
dec
mov
inc
iret
popa
out
cmpl
add
mov
inc
lret
push
xor
fdivrs
adc
push
dec
mov
loop
and
fdivr
mov
dec
jl
xchg
cli
loop
cmc
pop
mov
std
in
les
jge
sub
addl
cs
mov
jae
stos
cmpsl
lret
idivb
std
fidivs
stos
pop
pop
ljmp
jne
frstor
scas
fs
pop
jne
and
out
loop
into
icebp
clc
cwtl
imul
push
lds
add
fcoml
xchg
cwtl
sbb
mov
addr16
cld
jge
push
std
imulb
fxtract
jle
in
ds
mov
pop
jmp
mov
add
icebp
test
out
inc
rcrb
orb
in
dec
test
dec
xor
cmp
outsl
pushf
sbb
popa
adc
shll
in
xchg
movsl
push
dec
call
loop
push
pop
adc
cmpsb
or
and
les
daa
jb
mov
pop
mov
mov
push
insb
data16
and
jmp
lds
add
adc
mov
push
sahf
push
jmp
cmp
add
mov
pop
xchg
in
inc
pop
mov
pop
pop
js
cmp
fwait
fwait
clc
out
jp
dec
cs
xorl
cld
popf
into
xchg
inc
fcomps
fadd
rorl
fldcw
insb
shll
mul
fnsave
lahf
cs
cld
in
mov
stos
adc
dec
push
fnsave
pop
outsl
les
sbb
cmp
mov
mov
gs
dec
cmp
mov
sarb
dec
popa
mov
lret
loopne
outsl
xchg
rolb
inc
subb
push
movsl
sub
popa
cmp
rolb
ljmp
test
and
movl
jns
mov
call
pop
inc
fwait
js
mov
push
mov
sbb
pop
xchg
leave
fs
mov
mov
xchg
sbb
insl
or
cwtl
rorl
ret
int3
imul
lock
lds
cmp
push
enter
mov
or
xchg
mov
jno
xor
add
pushf
pop
xchg
jl
xchg
mov
dec
insb
adc
inc
adc
mov
mov
adc
dec
sub
rorl
sub
ret
bound
rcrl
sti
inc
popf
scas
inc
jle
jecxz
mov
push
cmpsl
jo
sti
scas
xchg
lcall
outsb
or
leave
sti
out
dec
setae
push
std
sarl
hlt
mov
test
call
pusha
or
arpl
pusha
cmpsb
mov
mov
inc
and
push
dec
js
iret
mov
xchg
dec
cmp
and
cmp
xor
mov
sbb
jl
push
dec
push
xchg
dec
inc
adc
lea
pusha
dec
adc
sub
in
xchg
pop
add
stos
fs
adc
andb
xchg
test
lods
push
clc
dec
mov
push
fmul
sub
shr
nop
imul
jbe
stos
enter
add
fisubrs
flds
rclb
enter
jle
shrl
shlb
or
mov
not
inc
xchg
mov
xchg
cli
outsb
sub
outsl
jb
sub
test
stos
mov
std
mov
jb
loope
out
pop
sub
xchg
ficoml
dec
outsw
push
roll
ret
pushf
mov
pop
pop
adc
dec
xchg
sahf
lock
jae
pop
lods
mov
icebp
or
mov
cmp
sub
shll
aas
or
cmp
mull
call
psraw
test
mov
pop
sbb
shrb
jns
pop
mov
popf
mov
pop
mov
push
push
or
jo
push
lods
jns
enter
jp
lock
int3
ds
jnp
jno
pop
mov
add
in
cli
cs
and
enter
movsl
inc
les
inc
add
sub
add
add
mov
inc
fmul
in
cmpsl
xchg
inc
mov
aam
and
cmovp
loop
xor
jne,pn
nop
mov
adc
in
cltd
push
sub
xor
and
pushl
push
sahf
dec
mov
test
pop
int3
xor
push
pusha
or
push
xor
sub
popa
mov
mov
aaa
aaa
or
push
movsl
rorb
add
int3
in
mov
sub
sbb
mov
lods
jecxz,pn
lcall
pop
xor
mov
ja
int
xchg
jnp
lods
pusha
mov
fs
cmpsb
cmpsb
jmp
sarb
frstor
jg
ss
call
push
inc
movsl
js
repz
adc
mov
in
loopne
pop
ficoms
cmp
sub
sbb
int3
push
mov
mov
andl
loopne
pop
sub
je
mov
mov
and
outsb
iret
sub
mov
pop
mov
pop
push
mov
sbb
imul
push
lahf
jp
sub
xor
outsb
test
or
outsb
ds
and
inc
cmc
jnp
popf
and
cmc
dec
loope
adcb
jg
push
lock
mov
xchg
test
jnp
lsl
mov
jmp
in
jnp
lret
shlb
jmp
push
imul
cmp
arpl
push
or
mov
int3
push
and
push
jmp
push
fimull
gs
lods
lea
es
aam
loopne
mov
pop
es
push
cmp
into
and
sbb
sbb
fs
pop
pop
mov
out
sub
sbb
test
inc
or
mov
hlt
mov
stos
xor
cld
lods
jp
fldt
sub
call
mov
cmp
out
or
jno
into
jge
cltd
lcall
andb
jg
add
dec
clc
jnp
mov
aam
dec
push
jo
loopne
mov
sbb
inc
icebp
movsl
mov
cmpsl
pushf
sarl
outsl
sbb
bnd
adc
repnz
hlt
cmp
xor
and
call
int3
shlb
add
jno
xchg
stc
and
xchg
mov
int3
dec
nop
inc
mov
xor
mov
jbe
pop
rcll
jnp
sti
mov
and
mov
mov
and
lea
es
dec
sti
iret
mov
lods
add
and
jno
or
popf
leave
repnz
xchg
or
repnz
mov
and
popa
shlb
daa
out
ss
inc
jle
push
cmc
jge
and
inc
addr16
jmp
push
pop
in
push
xor
int
movsl
icebp
sub
frstor
pop
mov
imul
jecxz,pt
mov
pushf
sub
xchg
rclb
leave
adc
mov
sub
lcall
shll
mov
mov
mov
add
lock
int
xor
xchg
adc
mov
cmp
fdivrl
push
jp
mov
or
jb
pushf
sub
call
mov
jp
sbb
xchg
xor
mov
cmp
shl
je
enter
xor
mov
inc
dec
cs
xor
dec
rclb
xchg
cmc
lock
divb
leave
sbb
in
adc
lods
cld
add
mov
loop
sti
out
cs
rcll
fcmovu
ljmp
loopne
xor
or
mov
pshufw
xchg
inc
and
enter
pushw
inc
cmpsb
in
movsb
push
pop
cli
inc
xor
andl
push
lret
jns
je
adc
or
jg
icebp
push
dec
lods
ret
mov
xor
out
leave
test
out
xlat
rcl
push
sbb
xchg
outsl
mov
test
or
or
neg
jge
rcrb
repz
int
loope
pop
mov
sti
dec
mov
adc
push
pop
test
pop
in
das
mov
mov
addb
add
adc
stos
scas
push
push
jmp
imull
outsb
add
inc
push
lcall
sbb
repz
enter
in
xor
idivb
add
loop
les
mov
mov
mov
ljmp
inc
nop
loope
mov
lret
movsb
jl
cmp
lcall
or
pop
mov
xchg
mov
cmp
xor
subb
mov
xor
adc
imul
mov
mov
fsubs
xchg
adc
pop
push
jge
and
imul
push
test
test
dec
jmp
shrb
dec
call
mov
int3
jl
imul
fnstcw
out
or
mov
mov
and
sarb
out
lret
mov
push
fs
or
das
cld
cltd
push
push
xchg
call
push
popf
call
ficoml
ljmp
outsb
aad
cli
push
subl
adc
addr16
pop
inc
ljmp
fiaddl
mov
ja
jne
ror
add
nop
jl
std
add
push
cs
into
movb
lds
xchg
aas
add
and
aad
lock
rcl
fildl
mov
les
loopne
out
sbb
sbb
subl
out
movb
dec
mov
leave
and
adc
aaa
aam
dec
dec
mov
mov
inc
push
cmp
shll
repnz
loope
adc
clc
adc
pop
add
mov
rorl
jbe
xor
dec
pop
fimuls
mov
fcoml
shl
pop
test
aas
mov
and
and
inc
sub
dec
xchg
push
call
ret
mov
mov
insb
in
mov
nop
rclb
push
cmp
dec
test
push
rorl
in
cmpsb
pusha
inc
popa
push
ficoms
mov
fisubs
dec
dec
das
jp
pop
mov
out
mov
jo
xor
or
repz
leave
mov
shll
or
sbbb
adc
xor
lods
pusha
out
dec
mov
inc
add
mov
rcrb
push
fnstsw
push
daa
jl
pop
imul
push
into
mov
mov
or
push
push
pop
jne
inc
repnz
dec
jno
arpl
ret
push
jg
cmp
mov
shlb
jno
ror
movb
jecxz
leave
and
xchg
pop
lret
pmaddwd
repz
stos
out
xchg
push
jae
into
push
jp
mov
iret
in
inc
scas
sub
addr16
mov
pop
cltd
mov
arpl
mov
imul
lahf
insb
ficoms
xor
mov
sbb
cmp
adcb
adc
push
mov
xor
pop
lret
adc
mov
cmp
movb
lret
jne
sub
mov
push
mov
je
sbb
cwtl
inc
fsts
iret
inc
mov
mov
cmp
jbe
push
mov
lds
jnp
cmp
inc
cmpl
lea
pop
pop
fldcw
inc
inc
jg
repnz
inc
ljmp
mov
in
dec
fdivl
mov
and
and
loop
rdmsr
push
out
xor
mov
jb
mov
mov
clc
ret
testb
lret
jnp
dec
sahf
stos
ret
lret
test
fwait
xchg
jge,pn
out
fcom
inc
pop
xor
cs
mov
fwait
cmpsb
jbe
popf
push
lods
adc
movsl
sti
sahf
or
mov
or
addl
adc
jmp
js
push
lea
fistpl
lahf
fisubrs
mov
sbb
xchg
mov
gs
outsb
es
pushf
mov
jp
test
pushl
mov
or
pop
loopne
mov
fs
es
insb
test
iret
lcall
ja
loopne
push
subl
out
test
lds
jge
mov
nop
push
addr16
push
mov
lds
push
sub
fcoml
push
mov
mov
mov
aad
jns
daa
dec
ror
and
outsl
sub
mov
cmp
inc
lea
mov
sbb
insb
data16
xchg
add
lret
dec
or
inc
or
popa
cwtl
add
mov
sub
int3
cld
xor
jne
jbe
in
lods
jl
pop
and
scas
in
inc
into
and
enter
les
mov
cwtl
dec
inc
or
cmp
enter
pusha
gs
fistpl
mov
mov
lds
into
cmp
leave
hlt
inc
dec
xchg
repz
ljmp
mov
in
jo
add
pushf
xchg
jo
push
mov
sti
push
xchg
rcrb
mov
sbb
push
pop
push
in
mov
mov
arpl
fistpll
ret
xor
call
jo
adc
loope
cmpsl
lock
ss
sarb
pop
lods
mov
movsb
adc
jecxz
sub
fisubs
shl
add
mov
ret
inc
push
and
mov
loop
xchg
jnp
int
sbb
mov
repz
testb
or
sub
cmp
stos
xchg
mov
xchg
mov
in
dec
pop
aaa
clc
push
and
insl
sub
adc
mov
outsl
std
repz
push
loopne
test
aaa
push
data16
mov
out
lahf
dec
sub
jno
xor
fsubrs
mov
cmp
dec
or
dec
xor
stos
ret
xor
sub
divb
js
cmpsb
cmp
std
or
out
cs
add
mov
xchg
sub
je
fidivl
xor
lret
arpl
dec
leave
add
dec
cmc
jne
and
test
jge
dec
test
in
jle
int
xchg
int3
sahf
dec
adc
mov
nop
add
add
popa
adc
adc
inc
lds
in
jge
dec
adcl
arpl
lods
int
mov
sbb
mov
push
insb
jns
cltd
scas
adc
sub
cmp
cmp
and
dec
insb
mov
xchg
clc
pop
cmc
jns
push
into
cmp
fmull
stos
add
push
arpl
popa
jne
imul
add
fwait
mov
std
lods
adc
gs
cld
cmp
mov
ret
push
xchg
fldcw
xor
dec
add
pop
and
or
and
stos
aam
xor
pop
inc
and
adc
adc
imul
mov
push
mov
mov
mov
pop
out
or
daa
cmp
outsl
mov
xchg
in
inc
jne
mov
inc
in
mov
mov
pop
push
xchg
xchg
loope
rcrb
push
sub
or
xor
cmpsl
imul
adc
mov
fnstsw
mov
mov
pop
xchg
pusha
mov
pop
fs
aas
mov
adcl
inc
mov
xlat
addb
out
cmp
or
xchg
push
sbb
mov
mov
mov
pusha
mov
and
in
cmp
cmp
inc
fsubrl
adc
movsb
lods
cmp
insl
pop
push
adc
addr16
bnd
add
jmp
sbb
adc
add
sub
cwtl
push
lret
sub
cmp
mov
clc
xor
and
lret
in
insb
int
push
hlt
insb
shrb
js
add
das
repz
and
xor
daa
fnstcw
cwtl
test
pop
mov
add
enter
dec
lret
.byte
mov
test
add
add
mov
add
add
add
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
mov
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
addb
add
loopne
add
mov
add
add
add
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
mov
add
add
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
mov
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
test
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
mov
add
add
add
add
add
fadds
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
sbb
add
mov
add
add
add
add
add
sub
add
mov
add
add
add
add
add
cmp
add
mov
add
add
add
add
add
dec
add
add
mov
add
add
add
add
add
pop
add
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
xor
xor
sub
pop
inc
scas
fdivr
outsb
notl
lock
add
lds
in
push
imul
mov
stos
lahf
sarb
andl
repz
push
ficoms
lods
mov
push
sub
mov
and
js
test
lock
push
push
xchg
dec
scas
std
mov
xor
test
sarb
loop
sub
pop
jmp
pop
ret
fiaddl
lds
fstpt
push
cmp
mov
cmp
inc
xorl
stc
xchg
out
push
sar
jp
movb
outsb
imul
push
push
sub
push
in
cmp
push
lods
fiaddl
cmp
popf
pop
lcall
cmp
lret
cltd
test
mov
xor
fsts
jbe
into
inc
ret
dec
pop
fnsave
insb
cmp
push
ljmp
mov
dec
jns
out
jecxz
lods
push
out
pop
mov
inc
imul
sbbb
inc
popa
mov
push
daa
mov
into
dec
cmpsb
mov
outsb
ds
push
aad
jmp
stos
dec
push
push
cli
mov
int3
pop
dec
testl
xchg
cli
xor
push
dec
cs
test
test
mov
enter
fcoml
fst
dec
and
cmp
push
imul
mov
xchg
test
stos
dec
sti
jmp
dec
add
pop
rcr
sbb
jne
sub
leave
stc
push
das
insl
dec
sbb
jns
lahf
dec
cmp
je
push
mov
sub
xor
mov
xorl
and
push
jmp
sbb
test
dec
cmc
push
dec
movsl
in
call
cmp
mov
rcrl
xor
into
in
sub
icebp
int3
pop
dec
lock
cmp
mov
sbb
pushf
cltd
stos
sti
imul
xor
pop
notl
lret
pop
lds
mov
rorb
test
movsb
mov
test
ret
fcmovbe
cmp
stos
cmpb
stos
or
cmp
aad
xor
cmp
xchg
imul
das
jp
loopne
addr16
jb
push
lahf
dec
stos
lahf
sbb
xchg
clc
into
sti
popa
dec
mov
loop
lods
ret
call
sarl
push
xchg
pop
repz
mov
hlt
xor
inc
push
aad
out
add
lock
cmp
stos
lds
sub
push
js
jno
lret
add
mov
div
dec
xchg
or
nop
mov
and
or
add
adc
or
mov
mov
mov
cmp
mov
jb
insl
dec
imulb
jge
xchg
stc
mov
movsb
adc
out
add
aaa
gs
outsb
xor
sahf
sahf
dec
push
cmp
jl
sub
cmp
into
cld
lret
lock
xor
cmc
outsb
pop
jge
in
xor
add
inc
fldcw
or
imul
jo
arpl
or
mov
pop
sub
fistpl
repz
cmp
fwait
js
dec
xchg
vandps
mov
jecxz
cli
dec
jbe
imul
lds
fnstcw
push
fcompl
cmpsl
xchg
clc
stos
inc
scas
mov
adc
lahf
sbb
and
fsubs
lret
push
std
hlt
mov
sub
lahf
or
mov
cmp
add
mov
outsb
lods
inc
push
mov
nop
sub
dec
and
xor
lahf
cld
faddp
jmp
daa
push
notb
insb
fstpt
push
inc
mov
gs
faddl
ret
pop
mulb
add
push
push
cmp
lock
jnp
xor
sub
mov
lcall
icebp
adc
or
push
stos
aaa
push
lcall
lret
xor
cmp
xchg
push
adc
fs
lock
xchg
xchg
std
call
leave
insl
push
mov
mov
inc
mov
lret
jge
outsb
aaa
sbb
sbb
push
mov
rorl
mov
pop
cmp
xor
fildll
adc
adc
mov
repnz
jnp
dec
xor
test
call
xchg
pushw
pop
adc
out
xor
jle
pop
or
sbb
imul
imul
xchg
lcall
cld
jmp
idivl
divl
sub
or
sub
jae
sbb
xor
jnp
sti
pop
and
scas
and
dec
fsub
cli
jge
mov
mov
dec
fnsetpm(287
pop
pop
inc
xor
lcall
popf
pop
aas
xor
sarl
cld
mov
mov
sub
jb
xchg
pop
daa
mov
pop
xor
mov
fpatan
mov
or
in
inc
enter
fidivl
or
xchg
push
adc
pop
ret
dec
jecxz
lock
fwait
dec
in
xor
cmpsl
inc
pop
mov
sahf
dec
insb
pop
call
push
sbb
mov
pop
pop
push
or
icebp
push
repz
es
dec
insb
notl
movsb
adc
sbb
lahf
cmpsb
dec
les
push
popa
inc
xchg
inc
push
into
lock
mov
push
int
mov
pop
mov
inc
int3
cmp
movsl
mov
lock
gs
movsb
xchg
pop
mov
lea
leave
pop
and
je
push
cmpsl
js
pop
bound
pop
stos
arpl
push
pop
fldl
sub
add
mov
cli
fimuls
ljmp
jne
out
mov
mov
ficoml
imul
jg
mov
lock
inc
mov
das
cltd
pushf
leave
movsb
adc
xor
movsb
sub
jae
mov
fbld
add
shrb
mov
and
mov
inc
cmpl
pop
mov
inc
out
loop
lret
inc
lcall
sbb
add
rorb
pusha
xchg
push
mov
in
pop
cltd
fisttpl
inc
dec
sbb
dec
mov
xor
push
sub
aas
in
mov
loop
jne
adc
lahf
or
aas
push
push
dec
loope
pop
push
jl
pop
inc
movsb
mov
cmp
lods
inc
cwtl
jne
jl
lahf
js
adc
fmuls
shll
cmp
xchg
jno
mov
mov
stos
pop
and
aad
pop
dec
mov
repz
ss
jmp
pop
lock
or
inc
aad
lds
popa
sar
and
ss
or
or
jnp
mov
pop
sub
lcall
add
mov
loopne
cs
push
push
cmp
js
jle
push
lods
sbb
pop
fsubrs
imul
xor
xor
mov
sub
cmp
mov
ja
cli
cmp
aam
cmp
jl
insb
xor
xlat
mov
dec
xlat
xor
hlt
dec
filds
in
ds
cmp
pusha
push
sub
rcrl
fisttpll
ljmp
arpl
inc
inc
rclb
pop
loop
rcrb
mov
fisttpl
js
popf
std
cmp
jmp
push
ret
das
addr16
lahf
dec
mov
insl
jmp
push
push
mov
sarb
xchg
test
cld
aam
push
and
lret
test
repz
jb
xor
decl
lret
enter
jp
pop
mov
rcr
ffreep
cmp
xchg
cmp
rcrl
push
mov
xor
outsl
jae
mov
jge
rol
lret
dec
shrb
mov
out
dec
mov
pop
mov
fisubrl
aam
adc
clc
inc
les
or
cmp
add
sub
nop
lahf
mov
in
push
lods
inc
shl
lds
sbb
lcall
negb
mul
lods
sbb
aas
test
ja
xchg
shrb
cmpsb
mov
lret
add
mov
movsl
imul
aaa
rcll
pusha
fiaddl
mov
pop
cmpl
fwait
push
xor
movzwl
cmpsl
loop
pop
out
in
pop
loope
scas
addr16
add
dec
in
sub
inc
pop
add
mov
out
xor
test
addl
test
push
mov
xor
cs
loope
pushf
cli
add
jb
push
mov
pop
mov
push
in
push
mov
xchg
fistpll
jp
out
rcll
in
xor
push
xchg
cmp
or
cmp
adc
outsb
mov
mov
inc
add
add
adc
cmp
ret
xchg
add
leave
adc
pop
sub
and
lock
mov
jg
pop
int
inc
jg
add
push
test
popf
movsl
outsb
mov
pop
int
or
sbb
adc
and
stos
xchg
inc
lcall
dec
aas
cmp
xor
and
cli
add
xor
xor
lods
dec
divl
push
ja
inc
aam
xchg
mov
mov
add
dec
cmc
pop
inc
ds
mov
not
fidivs
cmp
inc
mov
aaa
into
mov
mov
and
movsl
or
lods
adc
jbe
mov
outsb
cmpsb
dec
and
adc
sbb
sbb
inc
fsubs
xchg
adcl
mov
cwtl
lret
adc
jle,pn
jmp
mov
imul
lret
shll
jno
sbb
and
mov
sbb
sub
jg
push
push
jb
sti
sbb
cmp
adc
push
aas
or
outsl
int3
fmull
pop
mov
push
fdivrs
adc
xor
shrl
loopne
mov
mov
enter
adc
adc
movsl
aad
mov
mov
mov
adc
negb
in
inc
and
idiv
aam
stc
sub
hlt
dec
iret
pop
cmp
lock
cmp
mov
in
push
sti
in
lods
sbb
shlb
jg
mov
push
jecxz
mov
popf
xor
pop
inc
mov
shll
rcrl
adc
cmpl
dec
test
stos
add
xchg
fists
vpmaddwd
test
xchg
inc
xchg
xlat
dec
dec
inc
xor
je
dec
xchg
mov
push
add
inc
mov
loopne
cmp
repz
shrd
pop
pop
insb
or
inc
rorb
jbe
sub
inc
xor
and
sub
push
jbe
push
bound
fwait
inc
push
jbe
jmp
add
and
mov
in
mov
shrl
add
pop
push
mov
sbb
mov
enter
loopne
add
adc
clc
int
pop
call
jb
repnz
and
inc
sahf
xor
sub
lods
add
xor
jnp
nopl
mov
int
mov
imul
pop
jmp
dec
mov
sbb
pushf
mov
scas
or
test
adc
outsl
insb
mov
cmp
mov
and
mov
push
jle
mov
or
je
lahf
repnz
push
in
jge
jb
es
cmp
fcoml
in
sbb
xor
lret
sbb
sbb
pop
sub
xchg
add
bound
scas
sub
xchg
pop
mull
pop
or
sahf
dec
insl
stos
mov
mov
push
sub
mov
mov
inc
fldenv
xchg
sub
lret
xchg
imul
clc
push
fistl
lret
dec
mov
negl
adc
jns
lret
ljmp
arpl
sbb
mov
inc
pop
mov
cli
sbb
das
bound
loopne
dec
insl
dec
icebp
hlt
call
movsb
or
aas
lret
ljmp
decl
pop
call
scas
jnp
jo
xor
mov
and
stos
mov
cwtl
lods
je
adc
jg
jmp
fistpl
leave
jle
adc
into
addb
mov
mov
mov
mov
adc
xchg
add
and
mov
mov
sub
mov
and
xor
xor
out
in
cmp
outsb
outsb
sbb
xlat
xor
cmp
addb
jge
jmp
mov
adc
adc
jae
pop
out
sub
pop
arpl
jecxz
ds
imull
mov
hlt
test
lahf
sbb
leave
jl
stc
mov
mov
sbb
adc
or
loope
jno
fcmovne
and
ja
sbb
xor
in
sub
jne
shll
imul
xchg
out
fdivs
jno
mov
inc
js
sti
dec
push
idiv
cmpsl
cmp
xlat
and
mov
pop
sub
cmp
lds
pop
mov
pusha
loopw
jle
popf
pop
fwait
or
jg
loop
repz
pop
orl
pop
into
sub
repz
ja
pop
push
jle
cmp
inc
jbe
jo
push
out
in
add
jg
ret
cmp
lahf
bound
clc
push
cltd
xchg
and
xlat
add
fs
stos
iret
pop
pop
jae
xchg
jne
mov
div
dec
dec
sbb
loopne
dec
lret
jmp
mov
jo
call
jae
push
mov
xchg
call
fisttpl
out
inc
adc
jo
pop
cmpb
cmpb
loopne
mov
insl
push
sub
sbb
lock
icebp
jo
cmpsb
push
rolb
push
jbe
push
mov
fldt
loop
and
jmp
fidivrl
xor
jp
sarl
sbb
xor
rcr
sbb
stos
adc
fldt
push
xchg
pop
ret
orl
pand
jmp
cmp
push
aaa
loop
sub
xlat
addb
iret
pusha
mov
sub
stos
mov
in
pop
test
or
out
cs
and
push
rol
in
mov
negb
jne
dec
sub
data16
mov
fistps
ds
mov
std
test
lods
cs
dec
xor
test
cltd
fwait
jns
mov
loope
add
aam
pushl
inc
pusha
lcall
or
aam
enter
cltd
cmc
inc
jb
xor
lahf
jb
scas
imul
jae
fsubrl
test
mov
leave
cmp
das
and
mov
dec
out
jl
mov
je
xlat
xchg
fists
xor
mov
mov
push
and
jb
pop
jnp
rcll
out
jge
cmp
loop
push
insl
ja
aam
add
push
and
in
fs
nop
sub
stos
pop
fsubs
fdivr
mull
movsl
int
dec
ror
jecxz
test
cmp
ret
xchg
lock
adc
xchg
sbb
and
out
sub
xchg
fsts
leave
out
mov
xchg
xchg
mov
pop
or
and
gs
mov
push
push
jne
lds
cwtl
insb
add
jmp
or
loopne
shlb
push
loopne
ss
dec
cs
jo
pop
dec
add
popa
adc
add
dec
subb
push
scas
jl
sub
and
or
lods
mov
scas
mov
cmp
xchg
xchg
push
push
aam
out
ss
ljmp
lcall
repz
cltd
arpl
add
int3
sti
je
repnz
in
fildll
pusha
fnsave
rcrb
jbe
xchg
addr16
push
jecxz
xor
xor
cmp
pusha
xchg
or
add
iret
cwtl
dec
add
mov
or
cs
push
in
leave
insb
ret
std
outsw
mov
leave
push
fimull
push
cld
jb
icebp
add
testb
test
sub
adc
repz
push
inc
pop
jae
jg
mov
aaa
icebp
pop
cmp
testl
xor
repz
or
xor
sub
sub
xchg
ret
jbe
xor
pop
add
aad
adc
inc
add
outsl
dec
push
add
mov
mov
mov
into
or
das
rorl
and
sub
inc
or
push
movsb
xor
mov
push
insl
int
cld
jnp
sbb
jp
xor
movsb
lock
cli
nop
in
in
fcmovbe
pushl
test
mov
dec
push
xorb
int
push
push
mov
push
std
mov
hlt
inc
push
xchg
xchg
daa
jmp
stc
outsl
test
sbb
xchg
cltd
dec
mov
addb
lock
jnp
rol
inc
aaa
push
shll
scas
mov
pop
fsubl
mov
cmp
mov
ljmp
repz
push
cwtl
addl
dec
out
mov
lahf
insb
out
adc
insl
cmp
xchg
fs
rol
insb
jno
jg
ret
push
iret
mov
jge
in
pause
adc
mov
es
fidivrl
jle
xchg
es
xor
cmpsl
pop
dec
test
mov
das
faddl
mov
out
repz
std
jne
add
addr16
ja
adc
adc
dec
rcrb
fildl
sub
stos
inc
fucomi
nop
xchg
inc
in
mov
push
icebp
cld
icebp
jns
jno
lcall
pop
out
mov
stos
pop
shll
popa
stc
jle
aam
jmp
sbb
shl
pusha
mov
sbb
fwait
cmp
add
xchg
lock
jnp
push
ss
push
mov
cmp
pop
call
mov
pop
inc
into
sub
jbe
xor
pusha
pusha
arpl
inc
fildl
int
pop
xchg
sbb
divl
jecxz
inc
jne
in
movsb
les
call
mov
mov
outsl
imull
pushf
jmp
or
push
dec
mov
pop
dec
inc
cmp
pop
push
mov
insb
or
push
cmp
into
cmp
dec
pusha
aam
xlat
lahf
loopne
sahf
xchg
push
and
fs
xchg
enter
mov
adc
out
scas
das
dec
jbe
jge
push
in
in
cs
jmp
dec
or
dec
xchg
loopne
sahf
xchg
pop
sbb
filds
push
jne
test
mov
inc
hlt
or
xor
scas
xchg
push
pop
xchg
sahf
mov
cmc
jp
and
sti
pop
jne
lea
leave
mov
adc
cli
sbb
popf
dec
hlt
or
stos
inc
pop
aad
mov
sub
movsl
fnstenv
scas
out
push
pop
and
movsl
push
dec
push
cli
push
pop
js
mov
or
les
and
gs
test
addw
daa
scas
adc
je
addr16
test
into
inc
push
arpl
push
fcmovnb
push
and
out
mov
or
cmc
sub
outsb
and
add
pushf
mov
adc
mov
fwait
pop
je
lea
prefetcht2
imul
fbstp
push
stc
cmp
clc
adc
add
pop
sbb
pushf
jmp
movsb
push
les
sarb
in
sub
clc
cmpsl
xchg
aam
subl
lods
push
dec
lret
mov
cmc
add
lods
push
sbb
call
cmp
into
mov
cwtl
iret
pop
mov
insb
outsl
fsub
cwtl
shlb
loop
int3
push
add
jne
bound
mov
sub
sub
lret
dec
cwtl
pushf
xchg
pusha
mov
xchg
pop
fnsave
add
cmp
cmc
mov
jmp
bound
inc
jge
and
imul
shlb
mov
add
fmull
mov
mov
inc
lret
out
sub
popw
adc
out
scas
xor
dec
jge
outsl
sbb
dec
cmp
xor
sbb
jnp
inc
xchg
xor
or
adc
mov
stc
cmpsb
fistl
mov
pop
inc
dec
mov
out
sti
and
xchg
mov
xchg
enter
loopne,pn
or
ss
fcomi
in
cmpsb
pop
andb
mov
sbb
subl
mov
cmpsb
cmc
rcl
push
fists
dec
aaa
into
in
xlat
inc
mov
dec
xchg
or
arpl
in
inc
lret
ret
sub
jmp
adc
fsts
jp
xchg
ljmp
xchg
popf
rol
mov
ljmp
mov
xchg
stos
std
fsin
rcll
mov
mov
mov
inc
fsts
ret
cmp
mov
jp
cwtl
ds
xchg
jne
inc
ss
or
bound
cwtl
lods
ds
inc
mov
xchg
xchg
xchg
mov
aaa
test
rcrb
mov
sub
sarb
jp
pop
inc
adc
hlt
fnstcw
sub
cmp
and
outsb
mov
and
js
mov
cld
or
or
fdivr
sub
jmp
sub
push
iret
notl
push
dec
nop
les
scas
xchg
mov
imul
pop
adc
jns
cmp
jge
stc
add
adc
test
adc
mov
sysexit
and
add
ds
inc
insb
dec
jbe
sbb
scas
ss
push
iret
xor
dec
notb
stc
mov
pop
inc
push
and
xchg
cmp
stc
xorb
cmp
les
movsb
mov
jbe
mov
dec
enter
lret
js
test
add
shlb
popa
lods
and
and
cmc
mov
add
out
lds
or
das
out
add
mov
ss
stos
jnp
xlat
mov
lods
lret
mov
and
in
lret
mov
cmp
fcompl
sbb
mov
repz
mov
test
push
sub
scas
test
adc
xlat
pushf
jns
loope
enter
push
das
pop
add
es
cmp
faddp
jnp
sti
gs
adc
rorl
je
popf
cld
sub
push
stc
pop
jne
lods
nop
gs
cmp
xchg
inc
xor
addr16
popf
or
movsl
mov
jno
add
aad
loopne
stos
scas
push
push
add
cmp
std
sbb
negl
push
mov
repnz
sub
clc
lret
movsl
cwtl
sbb
stos
push
inc
fdivl
aaa
xchg
push
jnp
loopne
pushl
popa
int
fimull
call
ljmp
jl
pushf
mov
sbb
mov
sub
cmp
test
imul
or
and
jbe
xor
fcoml
mov
aad
cmp
int3
fsubl
push
int3
loopne
mov
dec
sub
imull
adc
mov
fdivrl
in
andl
das
nop
mov
ja
pop
outsl
call
cmp
and
inc
inc
mov
into
or
dec
xlat
ljmp
mov
int3
mov
push
into
sti
cmc
cltd
add
je
addb
gs
mov
sbb
imull
and
and
in
faddl
push
jmp
mov
stos
lret
or
or
outsl
mov
mov
push
lcall
and
into
mov
adc
mov
loop
sbb
ss
mov
pop
xor
js
mov
xor
cltd
mov
imul
and
adc
cs
daa
sub
jecxz
pop
mov
jne
sbbb
fs
xchg
and
jno
adc
test
hlt
vmovq
std
lods
or
fwait
jmp
jnp
xchg
scas
mov
adcl
xchg
pop
add
sbb
sbb
mov
repz
inc
xchg
xchg
adc
sub
in
dec
and
mov
cld
inc
enter
sbb
dec
ss
push
in
jne
and
sub
hlt
push
inc
xchg
imul
insb
mov
popa
mov
jp
adc
or
repnz
test
push
jo
lahf
rcl
cmpsl
xor
xchg
dec
cmp
in
xchg
lods
sub
aaa
sahf
rclb
cli
xor
lock
push
jns
fwait
insl
mov
xlat
out
add
and
jp
fdivrs
sub
mov
xchg
cli
mov
in
push
je
xchg
lret
outsb
loop
mov
gs
adc
scas
cmp
jae
rcr
mov
imul
xchg
cmp
rcrb
sbb
bound
inc
mov
stos
lahf
xor
mov
loope
vmovlpd
add
lahf
cltd
jo
aad
stc
push
out
push
dec
adc
lret
ljmp
cmp
pop
bound
test
lret
daa
fldt
add
mov
mov
sbb
mov
ret
aas
push
stos
adc
loopne
sub
or
sbb
imul
repnz
fwait
nop
pop
imul
add
pop
pop
rolb
mov
cmc
loopne
pop
xlat
sub
cltd
push
in
add
mov
push
jbe
jge
jp
mov
int
mov
push
cld
mov
add
mov
or
mov
xchg
push
aad
je
mov
mov
int3
dec
insl
inc
cmc
inc
cwtl
or
add
add
mov
lods
xchg
inc
add
mov
sub
pop
cmpsb
adc
in
repz
arpl
push
mov
xor
popa
mov
loope
sbb
icebp
mov
les
data16
jmp
add
jmp
in
mov
sbb
xlat
cmp
js
test
adc
add
cmpsb
insb
stc
fidivrs
fdivl
xor
lods
movsl
jle
sbb
fisubrs
xor
or
cs
mov
jl
pop
inc
mov
dec
testb
xchg
and
xchg
loop
and
iret
dec
ret
ret
pushf
test
adc
add
and
scas
je
mov
out
repnz
ljmp
mov
icebp
xchg
dec
mov
adc
and
pop
sub
pop
mov
lods
xor
nop
jg
lock
imul
aaa
lret
mov
insl
in
sub
arpl
loopne
sbbb
sbb
test
in
lock
insb
and
dec
mov
sbb
cmp
cmp
scas
inc
les
cmp
stos
in
lcall
lds
xorl
pop
repnz
pop
idivb
aaa
cwtl
sbb
push
outsb
jg
add
or
mov
repz
test
icebp
add
sub
lret
jae
push
pop
cmp
stos
icebp
or
cld
push
lret
mov
dec
mov
jae
out
mov
std
xchg
aam
cmp
sbb
out
xchg
in
add
dec
push
push
neg
daa
enter
sarl
call
jns
std
sub
xchg
dec
jmp
xchg
xor
mov
mov
jno
xchg
inc
sbb
in
imul
test
sbb
and
ss
mov
adc
popa
call
leave
cmpsb
in
scas
mov
loope
dec
cmp
mov
gs
mov
or
cmc
pop
jae
sub
bound
xchg
jmp
mov
ret
jg
push
adc
mov
pushf
int
cmp
jg
out
inc
shlb
cli
aad
sbb
ja
xchg
lcall
and
js
xor
clc
cmp
or
or
dec
flds
adc
sbb
inc
mov
mov
jge
adc
add
out
push
jle
les
in
push
hlt
enter
shll
jno
push
arpl
sbb
and
mov
cltd
push
cmc
test
cmpsl
out
xor
adc
stos
outsb
test
clc
fdivrp
out
lock
out
icebp
and
pop
jge
fs
xor
mov
std
xor
aas
leave
rcr
jg
enter
cli
push
push
pop
cmp
shrl
shlb
shll
add
sub
inc
mov
movsl
mov
jmp
mov
or
jb
addr16
ds
jns
test
sar
push
ss
ss
mov
pop
aas
fiaddl
lret
test
sbb
lods
jbe
add
iret
xor
clc
push
xchg
cmp
pusha
mov
loope
and
ja
les
daa
and
inc
or
mov
scas
outsl
push
rol
adc
aaa
int
mov
sbb
fists
push
mov
jbe
push
pushf
adcl
loop
pop
xor
or
fistps
mov
daa
lret
es
cltd
lahf
dec
fsubr
rorl
sub
cmpsl
add
aad
push
adcl
add
mov
push
sbb
or
call
dec
repnz
lods
add
jne
setle
scas
jne
stos
les
jl
popf
xor
mov
mov
xchg
and
dec
push
data16
icebp
jmp
lods
mov
ret
les
pushf
movsl
lds
pop
aaa
adc
pop
ljmp
dec
mov
pushf
cltd
mov
pop
xor
addr16
mov
arpl
xchg
sti
push
sbb
jno
mov
test
mov
sbb
pop
outsb
jge
fcmovb
add
insb
scas
cmpsl
das
cmp
add
pop
jmp
sub
xor
xor
pop
or
out
fsubrl
imul
jnp
ffree
xor
mov
loopne
stc
fidivrs
xor
imul
xchg
pop
push
jle
lds
xchg
and
outsb
sbb
enter
js
stos
and
push
ret
rorl
imul
out
scas
inc
xchg
cmp
add
push
cmp
xchg
loop
push
mov
aad
and
rcrl
jo
fdivrl
sub
aad
xlat
out
jb
int
pop
cmp
popf
cmc
dec
xchg
sbb
add
mov
aad
imul
add
out
xchg
sbb
loop
mov
dec
test
orb
mov
in
jp
lahf
push
push
jp
cld
fisttps
mov
insl
add
je,pt
mov
bound
jns
mov
inc
and
add
jp
dec
int3
insb
movsl
xchg
rorb
sti
pusha
rcr
ret
or
int3
ja
mov
jle
fidivrl
into
test
jg
and
dec
mov
xor
cmpsb
push
jo
shl
mov
leave
jbe
cmp
aas
out
outsl
sbb
jb
fwait
cmp
inc
mov
lds
movsl
test
ror
jae
std
sti
clc
lahf
mov
aas
dec
test
push
dec
push
pop
sub
add
sub
cmp
cmp
aam
loop
pop
and
lret
pushf
mov
or
jb
in
mov
mov
lds
xchg
fiaddl
outsb
xor
push
inc
into
test
test
sbb
test
and
fwait
xchg
fldenv
test
pusha
dec
mov
addl
adc
adc
fld
mov
jle
pop
jmp
add
xchg
paddb
shlb
sub
xor
aam
ss
rcrl
jbe
out
pop
pop
cli
xchg
test
pop
sub
out
jb
cltd
or
loop
and
loope
mov
scas
pop
adc
cs
dec
and
sahf
inc
adc
cs
in
fistpll
gs
push
xchg
inc
in
ja
stos
add
and
sahf
pop
add
cmpsb
mov
fwait
mov
cmp
sti
push
xor
mov
test
int3
adc
cmp
rolb
ficomps
sar
push
fists
out
rclb
data16
test
clc
test
cmp
loope
filds
inc
cmp
xchg
roll
sub
sub
or
mov
push
mov
shrb
ss
adcl
sub
imul
rorb
pop
call
adc
insl
mov
movsl
and
leave
aad
in
out
pushf
loop
sub
les
push
testb
out
adc
lahf
jmp
int3
scas
cltd
xor
das
int3
std
push
adc
add
movl
sahf
mov
jbe
sbb
xchg
es
jae
int3
out
add
in
mov
arpl
insw
jne
rcrl
out
jnp
hlt
dec
divb
leave
dec
push
cmp
lcall
cmpsb
cmp
jp
cli
nop
and
jbe
out
pop
rol
pop
or
jb
jecxz
scas
pusha
inc
leave
scas
jmp
cmp
and
jo
mov
aam
pop
icebp
fnsave
add
pop
xchg
cwtl
cmp
push
inc
dec
arpl
push
aam
lods
mov
pop
push
ret
scas
xlat
cltd
adc
test
xchg
popa
shrl
cmpsl
mov
sti
lret
mov
xchg
sub
sbb
cmp
clc
rcrb
mov
inc
fsubrs
call
sub
into
rcrl
out
imul
xchg
mov
pop
sub
scas
ficomps
pop
stos
xor
mov
out
or
jmp
lret
mov
pop
lret
call
xchg
push
shll
leave
lcall
xor
aaa
call
sbb
out
outsl
mov
loopne
push
and
jmp
out
imul
aam
dec
mov
dec
xor
or
fists
in
add
sub
in
adc
cmp
sub
cmc
aaa
stc
movsl
adc
addl
cmp
pop
dec
out
outsl
adc
dec
mov
lret
mov
aad
sbb
ds
xchg
imul
mov
hlt
or
popa
lahf
insb
pop
cltd
fdivl
xor
scas
jp
inc
adc
in
dec
fwait
int
lret
cmp
push
ss
pop
daa
pop
shl
shrb
loop
inc
dec
and
leave
movsb
pop
and
ret
xchg
pop
fmuls
sti
xor
ljmp
movb
inc
lds
push
dec
pop
add
xor
mov
sbb
sarb
addr16
insb
xor
data16
cmp
ret
fs
adc
mov
adc
orb
jge
repz
lcall
mov
sti
cmp
fs
call
cmp
lds
pop
mov
mov
and
mov
lock
outsb
dec
aad
imul
fists
cld
sub
inc
cmp
add
divl
aad
sub
bnd
sub
mov
fisttpll
orl
cs
not
movsb
push
imul
dec
fwait
inc
cmpsb
mov
mov
cltd
mov
jns
or
mov
sbbl
mov
cmp
jae
xlat
test
ret
mov
cld
js
mov
imul
ss
pusha
xor
dec
fsubr
push
cli
es
jb
mov
mov
incb
inc
in
pop
dec
pop
push
dec
adc
stc
and
mov
inc
add
lahf
sub
jl
inc
ljmp
das
stos
mov
sub
lods
adc
sbb
int3
mov
scas
loop
xchg
test
pop
sbb
xchg
cmpsb
dec
hlt
inc
sbb
pop
mov
pop
xchg
jae
enter
mov
fadds
hlt
dec
test
jge
mov
inc
fsubrs
stc
inc
sar
hlt
sbb
cmp
mov
push
movsl
and
dec
xor
jp
pop
jnp
orb
mov
jnp
and
cltd
jno
cmp
xor
and
jecxz
push
rolb
aaa
mov
xor
mov
lds
aam
lock
sbb
xchg
rcll
int3
jl
fs
and
push
push
mov
rorl
addr16
andl
int3
jne
add
adc
leave
aas
and
adc
negl
pop
ljmp
lahf
inc
or
add
std
leave
test
rcrl
movsl
iret
jno
or
imulb
or
sbb
nop
push
jmp
mov
cld
adc
fisubrs
jl
sub
arpl
mov
les
dec
and
pop
clc
mov
jg
outsl
call
push
or
jg
aam
push
mov
je
fs
lret
pusha
xchg
les
jmp
enter
fstpt
rorl
sahf
pop
inc
inc
clc
xor
loopne
inc
bound
popf
or
aas
loop
jb
jmp
adc
cmp
jo
int
lahf
dec
fs
addr16
repz
sub
rol
mov
mov
aam
lods
adc
outsl
ljmp
js
popa
es
mov
les
and
ror
and
out
hlt
cld
cmp
adc
jecxz
and
sbb
dec
outsl
cmp
adc
dec
or
cmpsl
stos
pop
and
ret
ficoml
xor
in
fwait
and
add
icebp
or
or
jo
pusha
jle
mov
popf
cmp
mov
jg
int
stc
push
mov
popa
mov
cmpsl
push
sbb
nop
adc
clc
add
dec
imul
pop
sbb
out
lea
mov
lcall
dec
int3
fcmovnbe
cmp
ja
xchg
or
mov
in
mov
xchg
daa
arpl
mov
xor
sub
insb
shll
scas
les
cwtl
sub
xorl
xchg
mov
pop
cmpsb
xor
and
test
mov
or
cmpsb
std
fldcw
mov
fld
push
out
shr
jmp
inc
or
addr16
and
out
daa
pop
sub
lods
cmp
js
pop
cs
js
mov
xchg
add
jg
push
test
iret
popf
adc
out
pop
xchg
jbe
sbbb
sub
jb
push
xor
cmp
mov
cli
pop
lret
push
jae
sub
out
add
enter
xor
in
ja
mov
inc
mov
into
inc
inc
test
adc
test
xor
jne,pt
mov
xor
bound
dec
add
dec
sbb
das
imul
pop
imull
loop
fwait
adc
push
pushf
mov
sub
xchg
push
sbb
dec
inc
xor
jnp
int3
in
aas
push
insb
mov
jns
scas
gs
je
orl
lea
push
jecxz
loopne
stos
sub
sbb
iret
cmp
jecxz
sub
sbb
jge
xchg
add
xchg
insb
out
mov
imul
xor
add
scas
call
dec
and
jg
cmpsb
leave
int3
sbb
xor
lods
ss
xor
mov
orb
fnstsw
xchg
mov
mov
ljmp
push
test
jnp
mov
pop
or
xchg
cmp
pop
paddsw
add
lods
repz
mov
jns
repnz
or
in
das
lock
adc
imul
pop
sub
adc
lcall
dec
lock
cmp
or
out
mov
add
add
imul
orl
sub
fildl
add
insb
imul
test
xor
adc
ja
adc
lret
std
loope
mov
add
mov
sti
push
aaa
cmp
sbb
dec
lcall
in
jmp
insb
je
jno
sahf
lahf
cmpsb
inc
cmp
cs
std
or
fs
loope
add
sahf
fwait
sbb
shlb
jecxz
mov
out
aas
ret
and
ds
xchg
addr16
dec
dec
mov
andb
cmpsb
jge
jp
mov
mov
mov
pushf
iret
sti
xchg
je
fiadds
mov
inc
xchg
mov
in
test
fdivrp
jmp
cmp
test
jle
add
push
mov
sub
and
inc
sub
rcrl
xor
xor
and
cmpsl
adcb
repnz
aad
push
hlt
jp
fmul
arpl
xor
xchg
mov
cs
jge
ret
mov
inc
dec
movsb
mov
mov
sub
call
push
cmp
inc
mov
xor
mov
aam
ficoml
mov
mov
cld
ja
jbe
dec
insl
shll
add
inc
inc
scas
lcall
jbe
adc
scas
repnz
andb
xchg
push
or
add
movsl
adc
dec
out
mov
stos
sti
jbe
out
jo
mov
imul
stc
cmp
icebp
adc
addr16
das
fwait
mov
arpl
add
adc
sub
adc
and
sti
pop
sbb
fs
pop
dec
movswl
test
push
mov
ja
push
and
pop
les
pop
push
cwtl
inc
mov
push
je
adc
cmpsl
pushf
and
arpl
and
pop
ja
hlt
in
add
cltd
cmp
in
bnd
jp,pt
xlat
push
les
jl
adc
cs
and
sti
ja
mov
imull
sub
jnp
mov
jg
lret
insb
xor
jae
outsl
sti
imull
dec
iret
inc
lea
std
andb
mov
inc
sbb
addr16
loope
pop
call
xlat
xchg
pop
lods
arpl
inc
jp
or
stos
adc
imul
mov
hlt
jmp
ja
lret
iret
sub
sbb
rorb
jle
popf
inc
jbe
cmp
popf
sti
push
mov
pop
cmp
mov
xchg
jecxz
xchg
subb
pop
fisubl
aas
xchg
sahf
push
dec
call
popf
jmp
pop
adc
mov
mov
arpl
lock
xchg
call
addb
cmc
dec
sub
sub
js
lock
xlat
aad
js
xchg
sub
scas
je
inc
out
pop
mov
testb
leave
jae
mov
push
insl
scas
mov
push
xor
push
sbb
mov
das
adc
movsb
cmp
or
pop
movsl
cltd
mov
sub
mov
inc
pop
xlat
jle
pop
lods
cmp
cmpsl
movsb
and
ret
jge
loope
mov
mov
faddl
add
pusha
and
aad
mov
cmp
mov
and
inc
addr16
fbstp
xorl
leave
es
xchg
sbb
push
cmp
mov
mov
cli
xchg
sub
out
push
test
or
shrl
fmul
add
mov
cwtl
add
out
lahf
cmpsl
push
loop
icebp
mov
adc
daa
ss
lret
mov
int
inc
push
mov
inc
inc
loopne
pushf
xor
inc
test
addr16
jge
movsb
mov
test
adc
cmpsl
sbb
push
movsb
mov
into
mov
pop
cs
or
jae
inc
pop
movsb
js
mov
jmp
xor
sbb
nop
mov
xor
mov
sbb
cld
leave
pop
incl
mov
push
mov
inc
pop
push
jl
and
jbe
fstps
mov
pop
dec
jge
lock
and
lahf
jb
ss
cli
pop
pop
add
and
out
jno
or
or
sbb
adc
test
arpl
cltd
mov
shrb
sub
ret
mov
and
jg
imul
jae
lds
mov
jle
pop
or
movsb
insb
add
pop
xchg
add
cmp
inc
lods
xchg
js
test
or
xor
jns
sbb
mov
jle
fbstp
icebp
clc
push
lret
cltd
dec
cmp
std
les
popf
in
or
divb
xchg
dec
cli
test
xor
inc
aam
jg
cli
push
adcl
scas
mov
sbbl
mov
inc
jo
pop
jmp
popl
or
xor
sbb
sbb
jecxz
in
adc
xchg
sub
or
dec
je
popf
cwtl
xchg
adc
cmpsl
fld
js
cmp
test
jmp
jne
jl
mov
nop
and
fisubrl
outsl
out
jmp
xchg
daa
jae
push
add
xor
cmp
icebp
fsubrl
lods
es
push
xor
lock
in
into
test
int3
or
inc
add
out
jbe
xchg
imul
in
mov
setae
xchg
or
jo
test
sub
and
or
inc
dec
add
enter
ret
add
jl
push
mov
lock
in
popa
xchg
add
inc
iret
rcll
imul
movsl
jnp
fcomp
cmpl
mov
jo
adc
clc
popa
mov
mov
daa
nopl
dec
stos
xchg
pop
adc
popf
jle
fcmovbe
out
shlb
sub
daa
std
mov
sub
loope
clc
cmp
jne
push
imul
addr16
aaa
jns
push
cmpsb
mov
movsl
cmpl
out
mov
jne
in
adc
mov
fucomi
int
loop
mov
cmpsl
mov
push
incb
xor
push
sbb
cmpsb
popf
outsb
mov
jecxz
movsb
bound
xchg
in
jo
mov
adc
ja
mov
nop
stc
rcrl
mov
pop
pop
arpl
push
arpl
mov
inc
mov
and
test
cltd
xor
loopne
mov
std
mov
int3
adc
insl
gs
push
adc
xlat
push
lds
sbb
xchg
xchg
push
lret
mov
aas
or
xchg
lcall
stc
add
mov
cltd
and
iret
sti
orl
add
mov
inc
cs
push
nop
push
and
leave
inc
aad
or
xor
or
mov
push
int3
mov
sub
pop
sbb
ss
es
shll
and
mov
stos
jmp
insl
mov
jp
mov
cmp
sub
loop
sub
cmp
adc
inc
loopne
xchg
sahf
fldt
inc
push
pushf
jo,pn
lret
xchg
mov
sarb
pushf
xchg
mov
scas
rorl
fcompl
ds
bound
push
ds
mov
stos
enter
and
insl
push
xchg
sahf
jns
in
cmp
add
sub
xchg
inc
and
pop
mov
xchg
xchg
in
xchg
js
repnz
pop
into
push
mov
add
sbb
cmp
aas
in
jl
adc
enter
xor
push
popf
ds
push
andl
jns
test
mov
cmp
aam
jb
adc
add
add
cmp
outsl
pushf
sbb
gs
scas
insl
cmp
jns
mov
mull
push
imul
sbb
sbb
adc
xchg
mov
cmp
add
cli
dec
test
scas
ljmp
xor
adc
das
xchg
pop
cwtl
ds
mov
int
movsb
out
mov
in
sub
inc
jno,pt
ret
jl
inc
adc
jge
pop
ret
lret
pop
lcall
add
jg
add
pop
loop
mov
pop
sbb
mov
sub
lods
repz
pop
push
and
and
mov
xchg
les
call
daa
mov
mov
ds
jl
popl
push
aam
xchg
cmc
pop
cmp
movsb
sti
mov
scas
xchg
bound
and
xor
jne
pop
divb
int
je
pop
rcrl
dec
cmp
dec
pop
jle
std
inc
lock
sub
lds
xor
mov
arpl
cwtl
dec
rolb
xor
mov
pusha
shll
xor
pop
add
lds
xchg
mov
mov
sbbb
fidivs
pop
adc
and
xchg
hlt
lea
fmull
insl
push
lods
out
out
xor
and
push
lock
push
lds
jae
dec
mov
add
and
jbe
jno
mov
xor
mov
enter
or
addl
lods
bound
jle
mov
into
push
ret
and
cmp
iret
mov
test
fcoml
mov
scas
mov
jle
sub
jg
loope
or
aas
jbe
mov
loop
adc
js
mov
pop
xlat
sub
xchg
rcrb
aad
adc
xchg
adc
rolb
mov
push
add
adc
addb
or
mov
mov
push
xchg
push
inc
std
popf
insl
jb
outsl
gs
ret
lods
jg
cmp
jmp
jbe
cmc
aad
test
sbb
addl
repnz
mov
inc
xchg
mov
sbb
adc
pop
sbb
and
jle
fs
dec
aas
out
or
xchg
loope
dec
dec
xor
and
xchg
pop
pop
pop
adc
push
lock
pop
inc
into
inc
add
jb
jle
xor
pop
pop
push
fwait
inc
xchg
jb
push
adc
sbb
ja
push
and
sbb
aas
cmp
in
xchg
lret
dec
push
inc
jb
push
loop
ret
pushl
not
sbb
mov
adcl
std
and
inc
dec
sbb
ficomps
cmp
dec
push
jmp
sbb
mov
xchg
data16
js
add
pop
sbb
xor
adc
cmpsb
enter
sbb
fs
sarl
cmc
mov
test
mov
mov
xchg
imul
scas
les
add
mov
mov
jge
cmpsb
sub
or
sahf
jge
sub
aaa
push
lahf
mov
jle
and
ret
movsb
clc
push
mov
das
jno
sub
es
sub
jns
lret
icebp
sub
js
lods
ret
jge
cs
pop
cmp
pusha
dec
dec
test
cmc
aam
and
dec
sbb
data16
xchg
rcll
leave
xchg
mov
pop
cmp
or
cmp
testb
cmp
stos
mov
data16
repnz
daa
incb
jae
mov
add
dec
clc
cmpsb
jmp
xchg
out
call
cs
add
in
test
jle
mov
cmp
gs
jno
and
stc
mov
pop
leave
hlt
fildll
add
rclb
add
lret
mov
push
shl
lcall
inc
xchg
inc
push
inc
pop
outsl
xchg
lahf
test
dec
les
pop
jae
pop
insl
out
dec
and
jne
bound
adc
lahf
imul
out
rorl
es
sub
std
inc
xor
test
mov
sub
inc
xchg
mov
and
sbb
jl
movsl
lahf
iret
sub
jmp
and
out
or
push
push
fwait
sub
incl
mov
leave
push
mov
sub
scas
faddl
fucomi
repnz
lahf
inc
ret
pop
fldln2
rorl
mov
fbld
xchg
out
xchg
in
xchg
cs
stos
es
push
std
je
add
popf
sbb
cmpsl
cli
repz
mov
ljmp
test
aad
mov
nop
int3
call
rcll
pop
cmp
in
xchg
mov
push
mov
data16
push
int3
push
mov
push
out
into
sub
cmp
sub
xchg
pop
mov
jbe
and
xlat
xlat
inc
push
in
out
jbe
pop
or
sbb
in
and
ds
into
in
cmp
loop
jnp
imul
sub
lret
aaa
sbb
aad
jle
fisubrl
cmpsl
xor
fisubrl
jns
push
cmp
mov
pop
pop
je
xchg
mov
lret
mov
add
jp
rcll
dec
xchg
aaa
pop
mov
jecxz
out
inc
and
dec
not
cwtl
jbe
inc
imul
mov
jnp
jo
add
xchg
out
and
mov
pop
cwtl
pop
jp
mov
jecxz
test
push
mov
les
adc
lcall
cmp
js
pop
loop
cld
pop
and
addb
int3
mov
lret
js
ret
jecxz
add
les
packsswb
fadds
std
mov
lds
out
pop
cltd
dec
enter
ds
lods
inc
les
sub
and
sbb
push
adcb
push
xchg
push
dec
pop
dec
cwtl
jp
popa
sbb
int
xor
jb
jae
jnp
call
mov
int3
add
mov
jp
xor
adc
inc
xchg
stos
or
cmc
xchg
jne
mov
adc
addr16
jmp
adc
or
cmpsb
sahf
sti
fs
rcrl
adcl
cmp
lods
pop
nop
xlat
inc
jae
or
cmp
ds
stos
in
push
lahf
sti
clc
daa
test
pusha
movsl
daa
enter
mov
adcb
fidivs
xchg
jo
add
cmpsb
xlat
dec
fidivrs
inc
cwtl
or
ja
push
xchg
jno
stos
pusha
fimuls
xor
sbb
cltd
arpl
cmp
xor
jl
out
xchg
lret
push
lahf
fwait
mov
inc
xchg
testl
jg
adc
cmpsb
fimull
shrl
int
out
push
jno
into
ret
mov
call
cs
inc
or
shrl
push
out
stos
inc
push
dec
sar
enter
inc
lods
xlat
popf
add
mov
mov
push
xor
sbbb
cmp
stc
loopne
or
aaa
ds
lret
add
inc
iret
xchg
inc
addl
mov
sahf
roll
cmp
les
push
add
lcall
leave
dec
subl
mov
sahf
movsl
jne
daa
hlt
and
pop
push
mov
mov
outsb
lock
push
push
lret
outsl
or
sub
int3
mov
mov
fcomps
sbb
pop
pop
cld
lahf
pop
test
inc
jmp
mov
pop
int3
and
test
icebp
xchg
ja
or
mov
mov
xchg
sub
inc
pop
inc
scas
mov
testl
or
and
push
fcmovnbe
cmp
mov
mov
lock
mov
loopne
mov
pushf
push
ficomps
push
xor
cmpsb
inc
movsb
movsb
push
inc
lods
dec
mov
call
int
insb
mov
out
push
scas
enter
das
sbb
mov
cmpsl
es
inc
adc
repnz
hlt
rep
pop
pop
mov
sarl
pop
scas
add
rclb
pop
mov
adc
fldt
xchg
sbb
mov
push
mov
jmp
clc
mov
lahf
out
xchg
sbb
cwtl
fdivrl
das
xor
push
sbbl
es
mov
sahf
imul
dec
icebp
jmp
out
out
arpl
adc
movsb
mov
lret
sub
xchg
stos
pop
movsb
mov
roll
sti
xchg
mov
mov
sarb
sub
xchg
arpl
xor
cmp
xor
aam
sbbb
and
inc
stos
nop
push
in
adc
xor
repnz
fucomi
ja
int
repnz
mov
pop
inc
sti
loop
aas
mov
xchg
insb
in
faddl
mov
dec
negb
xor
mov
cmp
insb
lahf
sub
sahf
cmp
cwtl
pop
sub
sub
sub
push
mov
and
or
lret
data16
lods
hlt
mov
push
adc
jo
sarb
xor
mov
and
out
xchg
pop
gs
in
repnz
insl
xor
repnz
mov
jbe
adc
sbb
out
inc
push
and
adc
inc
inc
stos
daa
adc
push
loope
iret
mov
fcoms
jnp
jecxz
enter
nop
xor
lcall
stos
sbb
cwtl
lods
mov
fmuls
jns
adc
pop
jo
mov
sti
fwait
je
imul
sbb
loope
lds
stos
fs
fldl
jp
cmp
adc
push
sub
in
or
add
popf
dec
test
outsl
imul
dec
mov
xchg
daa
popf
aam
imul
mov
ret
das
test
std
cmp
mov
dec
mov
sbb
mov
test
push
jecxz
iret
ja
iret
lahf
insb
fcmovnu
pop
pop
sub
or
add
cli
or
clc
pop
orb
xchg
push
mov
addr16
dec
cmp
aaa
fsubp
popf
outsb
repz
ljmp
stos
push
pop
sti
add
jge
mov
jne
nop
inc
pop
iret
and
inc
imul
adc
lcall
inc
add
repz
test
shr
xchg
in
rcl
adc
adc
ja
dec
leave
insl
lea
shlb
dec
push
mov
fsubp
out
icebp
call
add
add
cwtl
push
push
mov
test
pop
mov
cmpsl
in
lret
loop
sub
subb
xor
pop
paddsw
shrl
loopne
push
aad
pop
pushf
adc
push
hlt
outsb
mov
sub
pop
leave
js
push
dec
xor
pop
jnp
aad
push
jp
xor
loopne
jae
aaa
faddl
outsl
xchg
hlt
rorb
fwait
iret
dec
int3
bound
arpl
add
mov
jmp
mov
rcrl
dec
leave
dec
les
int3
psubq
mov
adc
ss
stos
stos
mov
pop
mov
int
or
inc
mov
ljmp
testb
pop
repnz
fsubr
mov
bsf
lahf
cmp
mov
jp
mov
mov
jns
dec
adc
sbb
push
dec
sub
inc
adc
loope
in
adcl
hlt
gs
add
xor
arpl
add
inc
adc
in
fnstcw
je
mov
fists
xchg
add
mov
and
cs
in
scas
jne
sbb
adc
sub
pop
scas
adc
cmp
fistps
add
xor
cltd
push
incl
outsb
nop
scas
pusha
xchg
enter
mov
outsl
dec
jecxz
push
int3
imul
es
xchg
mov
mov
psubsb
sarl
scas
fs
pop
mov
popf
mov
sarb
leave
pop
in
aam
stc
imul
insl
sub
lock
sbb
lds
push
inc
add
inc
adc
and
push
jo
xor
mov
cld
cmp
insb
xor
sub
pushf
out
lahf
aaa
cmp
aas
jbe
in
ret
inc
dec
or
add
rcll
cmp
stos
cmp
leave
jecxz
mov
mov
lds
repz
mov
mov
fldenv
xor
push
jp
jle
rcrl
cld
push
int3
cs
push
dec
mov
push
scas
mov
faddl
sbb
sbb
mov
adc
adc
xor
bndldx
jno
cs
rcl
lret
pop
jecxz
adc
scas
mov
repz
jge
sar
cmp
jbe
push
pop
xor
clc
loop
mov
dec
sub
add
push
push
cmpsb
sbb
aaa
jg
data16
jle
in
jg
jp
adcl
ret
push
mov
add
pop
mov
or
mov
push
lods
adc
mov
pop
inc
je
mov
xor
addl
or
and
cs
scas
xchg
loopne
jecxz
stos
jb
mov
negb
pop
data16
mov
push
mov
test
mov
outsb
into
push
test
test
mov
or
pop
sub
mov
jnp
fs
mov
fdivrs
xor
lods
dec
adc
jmp
xchg
insl
cmp
lret
xchg
leave
mov
mov
inc
scas
mov
pop
jp
sub
push
jmp
dec
cmp
test
sarb
ret
xor
pop
push
imul
cmpsb
test
call
or
outsb
ret
push
sbb
out
fisttps
push
xchg
lea
and
cltd
mov
pop
push
fbstp
fisttpl
sub
xchg
lods
pusha
and
dec
cmpsl
push
repnz
sub
adc
adc
xchg
add
add
lahf
testl
ret
rcll
in
fs
jae
into
sbb
std
xchg
stos
mov
pop
mov
ret
jo
inc
push
std
out
aaa
jbe
xchg
scas
jo
jno
cs
dec
cmp
jge
mov
inc
fs
aaa
or
ljmp
push
lret
das
nop
bound
outsl
int3
mov
cmpsb
daa
mov
scas
jae
push
jl
push
xchg
mov
pop
pop
bt
fcoms
loopne
dec
movsb
gs
int3
fxch
jb
cmc
aas
cmp
rcll
jno
pop
lahf
repnz
or
movsl
in
out
jo
or
sbbb
adc
sbb
imul
imul
iret
notb
dec
call
sbb
pop
inc
xchg
inc
in
sub
ja
push
mov
cmp
xchg
jl
mov
jo
adc
fisubrs
lock
sub
sahf
sub
add
ja
scas
adc
lcall
fcomps
adc
icebp
bound
repnz
jnp
mov
nop
aam
mov
dec
cmc
add
pop
or
fucomp
jle
push
stos
mov
jecxz
stos
cmp
mov
dec
fnsave
mov
push
rorl
or
rorb
aaa
lcall
pop
imul
sbb
push
mov
movsb
xor
out
mov
dec
pop
add
sub
sbb
into
mov
popf
push
testl
test
loope
pushf
loop
fisttps
dec
push
pop
jp
xchg
rorb
push
aam
and
inc
cmp
aam
fsubrl
lods
cmp
ja
push
pop
scas
aam
call
push
push
aad
sub
adc
mov
push
xchg
call
repz
les
mov
jmp
mov
pop
mov
dec
cmp
and
enter
push
outsb
cs
ds
or
movsb
aad
pop
in
cmpsb
adc
in
inc
aas
push
push
sub
mov
add
pop
jecxz
jecxz
fsts
xlat
cmpb
jne
mov
ds
push
je
sbb
icebp
jnp
mov
inc
cmpsb
fisttpll
repnz
pusha
int3
xchg
int3
adcl
pushf
test
dec
movb
repnz
test
mov
xchg
mov
lcall
scas
cmpsb
inc
testb
xchg
inc
jle
hlt
int
and
jno
mov
and
push
fsubs
sbb
aad
cmp
dec
lret
cli
sub
push
mov
enter
dec
add
lock
xchg
mov
or
push
nop
mov
pop
adc
push
outsl
jbe
add
mov
mov
mov
dec
aas
out
push
arpl
xchg
dec
in
das
pop
adc
mov
sbb
and
scas
lock
insl
mov
sbb
xor
push
mov
adc
aaa
outsl
imul
sti
cmp
dec
cmp
mov
mov
xor
mov
and
inc
mov
pop
mov
shll
push
gs
cld
jae
repz
mov
xchg
sahf
pop
sbb
sarl
movsl
movsb
jl
test
sub
xor
js
mov
jmp
repnz
pop
jmp
dec
outsb
call
jmp
push
ss
int3
ss
cmp
push
fdivl
sbb
dec
addr16
cmpsb
or
push
xchg
jne
inc
repnz
inc
add
lcall
es
push
lcall
inc
pop
std
insl
lcall
mov
pop
push
jl
and
sub
loope
pop
clc
out
test
push
cmp
pop
lea
push
vmovaps
sbb
sub
out
and
das
ficompl
orl
sub
pusha
pusha
or
ret
shlb
push
or
testb
mov
shr
sahf
scas
jb
imul
fs
imul
and
fisubl
fcomp
push
daa
jns
sub
scas
mov
mov
mov
cmp
mov
xchg
imulb
aam
call
aas
xorb
stos
cbtw
sti
cltd
dec
jg
stos
std
add
push
fdivr
fdivrl
shl
sub
lods
aas
sub
push
movsb
and
fnstsw
jmp
popl
dec
repz
cli
popf
ljmp
vmulpd
data16
xor
pop
aas
jno
mov
out
cmp
sahf
xor
iret
imul
dec
in
dec
sub
cmp
js
lods
fcompl
xor
cmp
mov
xchg
inc
inc
pop
popf
fidivs
dec
mov
pop
mov
cs
push
orb
rcll
loope
push
xchg
in
cmpsl
out
lods
add
rcrl
pop
sbb
out
adc
or
sub
xchg
jge
pop
mov
call
inc
adc
xchg
pushf
xchg
adc
push
jbe
lcall
jg
dec
js
lods
inc
loop
mov
stos
es
mov
ss
inc
dec
or
cli
xorl
shll
jns
jae
iret
lock
addr16
pop
mov
mov
mov
jg
xchg
mov
popf
add
test
mov
sbb
sub
test
push
lret
add
pop
icebp
dec
mov
imul
pop
mov
and
in
rep
mov
sub
outsb
mov
inc
xor
sub
mov
fisttps
jns
xchg
sub
imulb
mov
fs
xlat
inc
add
arpl
dec
loop
mov
jnp
arpl
push
and
xchg
nop
jo
out
lret
mov
lea
push
mov
or
and
jns
int
rolb
or
repz
out
mov
and
iret
cwtl
xor
gs
inc
adc
and
paddd
add
mov
sti
out
sub
pop
mov
negb
pop
add
push
popf
pop
rolb
or
ljmp
jmp
mov
mov
clc
clc
jnp
inc
dec
add
stos
inc
and
or
and
out
inc
insb
into
js
mov
icebp
pop
ret
rcll
or
mov
mov
aam
ds
mov
add
pop
sbb
out
lock
je
sub
xchg
pop
shlb
adc
and
cmp
repnz
and
int3
cmp
push
test
and
and
pop
mov
sar
rclb
add
mov
hlt
jbe
sub
data16
and
mov
and
es
leave
push
fwait
sti
push
pop
push
jmp
lret
nop
cmp
fldcw
into
cmp
adc
in
or
das
inc
aaa
in
lcall
std
test
jle
std
cld
push
or
inc
test
shlb
jns
jl
cmp
fldl
loopne
add
test
jl
cli
pop
dec
or
repz
or
and
push
mov
icebp
into
aaa
fadds
sub
cmpsb
add
cltd
rcrb
inc
adc
sub
mov
jno
call
lods
or
push
jb
les
lcall
out
jmp
mov
les
mov
loopne
es
xor
jmp
push
xorb
shl
cmpsl
sbb
rol
adc
pop
test
nop
stos
loopne
or
inc
push
cmp
movsl
ret
xor
loop
aam
sub
popl
inc
stos
int3
sbb
mov
push
or
pop
sub
ja
cld
sub
inc
fmul
jl
cmp
test
popa
cmpsb
sbb
jo
push
xchg
ret
xchg
insl
cmp
cmpsl
adc
rcrl
call
cld
out
push
lods
add
aad
dec
into
movsl
fildll
mov
cwtl
xchg
incl
lcall
scas
es
int3
je
mov
lock
jnp
inc
addb
xchg
imulb
dec
outsl
cwtl
repnz
clc
inc
sbb
data16
jp
mov
insl
loope
imul
iret
int
nop
mov
xor
ljmp
and
pop
sub
dec
out
add
outsl
fdivl
and
into
js
lods
ljmp
inc
aaa
stc
inc
adc
ljmp
sar
push
add
ss
xor
dec
fcoml
jo
cwtl
sbb
mov
jp
aad
cltd
dec
pop
xchg
pop
cmp
jo
mov
pop
insb
xchg
cs
and
stc
inc
sub
lret
scas
enter
imul
mov
xor
ret
add
stos
int
movsb
add
push
dec
lret
push
stos
ret
sub
cmp
inc
sbb
and
daa
jns
jl
cli
fcom
outsl
rcrl
insb
xchg
das
jnp
in
fcomps
ds
call
jmp
mov
xorl
adc
cmp
and
lahf
add
cmc
out
pop
mov
xlat
clc
and
shll
xchg
push
aam
or
sub
jmp
lods
xchg
jno
cmp
inc
and
negl
test
mov
fdivl
pop
fbstp
mov
mov
lods
repz
test
clc
jnp
push
dec
and
mov
push
lret
push
pop
push
hlt
loopne
movsb
sbbb
jmp
test
jl
xchg
xor
icebp
loope
or
aad
call
dec
mov
xor
sbb
hlt
mov
xlat
aam
mov
lea
push
add
push
adc
ja
sti
push
addr16
lahf
inc
sbb
inc
push
dec
pushf
sbb
rorb
cmpsb
sar
xchg
xchg
pop
in
cli
pop
sub
dec
and
ret
into
rorb
inc
scas
testl
nop
enter
arpl
sbb
lret
in
mov
or
cmpsl
pop
or
decl
sbb
imul
insb
mov
xorb
dec
sub
mov
adc
ljmp
clc
push
insl
or
mov
lods
daa
mov
out
dec
inc
jno
test
pop
daa
mov
pop
cld
mov
push
dec
sbb
cmpsl
shlb
xchg
pop
mov
inc
mov
fisubrs
lds
gs
jo
xchg
test
dec
sub
rcr
push
dec
push
addl
inc
cmp
sahf
arpl
adc
or
push
jns
push
mov
jne
pop
lret
fnstsw
js
aaa
pop
cmpsl
xor
push
sti
mul
mov
pop
jl
rcll
xor
push
mov
jbe
rcr
sbb
sub
jb
arpl
int
mov
jle
sub
sbb
filds
insl
sub
dec
mov
daa
addl
mov
stos
pop
xor
jne
sbb
loop
js
push
shll
and
jnp
mov
mov
rcrl
cwtl
add
sbb
cmp
add
subl
popf
add
cmp
movsb
adcb
sbb
pextrw
mov
cmp
lock
cli
addr16
cli
jl
ja
or
push
fwait
sti
jmp
bndstx
xor
movl
out
sbb
clc
mov
pop
mov
loop
mov
sbb
call
idiv
inc
dec
inc
xlat
jnp
sti
loopne
push
ja
add
or
push
mov
jo
fnstsw
xor
addr16
fdivrl
dec
loope
in
out
or
outsb
arpl
ja
fwait
xchg
lods
lock
int3
add
sub
sbb
add
std
sbb
push
cld
test
push
pop
je
sub
imul
fdivrs
or
les
mov
xchg
fldcw
inc
mov
cs
sub
sub
jecxz
mov
orb
aaa
sbb
dec
loop
pop
js
or
mov
stos
das
lock
dec
jne
je
push
jmp
add
mov
mov
outsb
mov
jge
loope
aam
mov
cmp
aam
jae
mov
ja
jae
sbb
mov
xchg
mov
hlt
adc
xor
sub
dec
or
inc
leave
jmpw
lock
scas
mov
push
add
cmpsl
int
pusha
out
stc
mov
xchg
imulb
pushf
pushf
adc
jns
lret
add
adc
lahf
clc
xchg
cs
or
aam
push
repz
aas
fmull
sbb
lgs
adc
movd
mov
jg
cmpsl
sub
mov
into
cmp
inc
sbb
fists
sub
mov
pop
in
lret
mov
repz
mov
jne
daa
xor
imul
mov
xchg
jmp
ret
not
insl
push
flds
das
mov
clc
dec
push
mov
jmp
in
jnp
addb
xor
push
leave
and
jo
cli
rcrl
or
pop
in
and
jb
xchg
loopne
xchg
mov
cltd
sbb
mov
in
out
shll
sub
dec
mov
or
xchg
fisubs
fnstsw
fdivrl
push
mov
arpl
mov
push
push
or
push
jae,pt
sub
and
nop
xlat
outsl
negl
pushf
jnp
mov
jmp
xor
pop
jno
push
test
outsb
fdivs
pop
andl
std
data16
xchg
lods
and
test
lods
bound
sub
adc
pop
lods
fldlg2
into
lods
jmp
push
pusha
andl
xchg
stos
push
dec
push
mov
inc
jg
data16
call
lods
xchg
and
and
je
movl
repz
rol
scas
xchg
daa
daa
nop
loopne
lahf
xchg
mov
mov
movsl
pop
sbb
popa
ss
mov
jmp
clc
push
pusha
push
fidivrl
push
lock
sbb
arpl
xchg
out
sub
lret
bound
or
pushf
pop
mov
les
push
and
bound
jns
jge
fisttpll
imul
mov
adc
mov
xor
mov
sbb
bound
jo
aam
movsb
cs
int3
mov
jbe
test
lods
xchg
shrl
lock
jecxz
mov
jl
test
cltd
sbb
in
mov
cli
out
outsl
pusha
jbe
mov
or
mov
or
popa
push
xor
aam
pop
insb
mov
stos
pop
in
cmp
popa
test
mov
add
out
mov
cmpl
mov
loop
or
stos
xor
pop
dec
adc
stos
pop
ljmp
pop
mov
sahf
push
xchg
adc
lods
leave
cmp
iret
das
out
xor
pop
and
scas
add
lods
movsb
sti
push
mov
cmp
rcr
pop
leave
mov
and
ds
lea
lods
divl
cwtl
imul
mov
mov
stos
mov
cli
sti
and
imull
loopne
add
rcrl
mov
mov
repz
divb
push
pusha
pop
lea
lret
mov
xor
adc
dec
push
dec
dec
ret
jl
shrl
jp
adc
cmp
mov
int3
sti
hlt
gs
insl
ds
out
dec
out
xlat
xor
xchg
or
or
test
sbb
mov
dec
mov
pushf
sbb
out
sub
mov
sub
inc
data16
test
cli
ret
and
inc
dec
test
shrl
cwtl
sbb
ret
out
fsubrs
clc
repnz
push
sbb
or
pop
pop
test
fmull
rcl
mov
pushf
test
shll
fdivrl
loopne
and
pushf
ficompl
sub
pop
jge
xchg
sbb
mov
pop
jl
add
push
jns
es
mov
scas
std
push
lock
cmpsl
push
fwait
aam
fldz
jnp
push
and
xchg
sbb
repnz
pop
mov
lret
or
sbb
pop
and
sub
insl
stos
inc
pop
add
mov
pop
testl
aam
repz
xchg
lods
in
in
xor
or
push
xor
jne
gs
cmpsb
and
mov
or
push
mov
pop
gs
mov
jo
mov
movsl
movzbl
ss
inc
ja
sbb
adc
shrb
mov
ds
icebp
dec
and
fwait
xor
out
jge
lahf
or
fbld
adc
pusha
dec
aaa
cmp
iret
cli
xchg
push
inc
loopne
addr16
mov
ds
lods
or
out
push
std
lods
or
mov
jbe
daa
int3
cmpsl
sbb
aas
and
outsl
arpl
shr
mov
aaa
stos
sarb
dec
les
push
push
sbb
xchg
and
adcl
lods
pop
sbb
add
xor
aaa
gs
js
negb
jae
ss
xor
scas
push
jle
mov
callw
shrl
xchg
mov
pop
adc
imul
jae
ds
das
dec
loop
in
loopne
xchg
sub
data16
jmp
in
push
jbe
sub
lret
out
cmc
add
cmp
mov
rorb
dec
or
mov
pop
sbb
ja
sub
pop
in
lret
repz
aad
push
inc
jge
pop
push
cmp
aaa
sbb
mov
sbb
mov
adc
or
cmp
cmc
mov
stos
add
pop
xor
nop
popf
cmpsb
xlat
mov
pop
icebp
cmpsl
xlat
jle
icebp
insb
hlt
or
addl
imul
subb
jbe
jb
pop
dec
push
cmp
dec
rcrl
in
push
hlt
add
outsl
mov
jo
dec
cmp
in
pop
dec
fs
dec
xchg
jns
cmp
or
fistpl
jne
xor
cmp
inc
aaa
jae
lcall
mulb
out
out
arpl
add
xchg
cmp
dec
imul
rcr
push
int3
inc
arpl
or
sub
insl
inc
cmp
jb
or
fs
cwtl
jmp
bnd
rdmsr
jne
push
cmp
sbb
xor
shrl
in
mov
sbb
xor
imulb
aam
mov
pop
cs
lock
push
jo
jne
out
lret
mov
add
sbb
mov
cmp
ret
sub
imul
ret
fdivr
arpl
ret
ljmp
sbb
mov
inc
ja
clc
pop
lahf
xchg
xchg
enter
inc
pop
xor
mov
sbb
in
jecxz
js
and
mov
cmp
cli
add
fdivp
xor
mov
or
scas
inc
xchg
outsb
add
das
fistpl
add
pop
data16
es
test
movsb
fwait
in
sub
aad
mov
xchg
push
xchg
movsb
les
scas
sbb
mov
scas
mov
and
jge
pop
xor
std
pop
adc
inc
incb
adc
cmp
inc
push
and
lcall
or
jo
mov
sub
sahf
push
negl
mov
pop
add
pushf
cmp
xchg
test
dec
mov
inc
xor
pop
cli
lds
pop
jp
dec
ss
jle
sub
gs
fimuls
stos
cmp
pop
or
mov
cmp
push
out
lcall
movsb
xor
pop
jb
divb
outsb
pop
cmp
shr
mov
in
cmpsl
jo
mov
in
cmpsl
pusha
movsb
mov
xor
leave
lea
mov
mov
mov
sahf
repz
cmp
stos
or
mov
pop
push
scas
jmp
imul
jg
mov
cmp
xor
sbb
imul
negb
int
cmpsb
push
test
pop
sarl
xchg
out
aam
xor
jge
js
out
jmp
je
xchg
je
sbb
fcomip
mov
jmp
mov
bound
jb
stc
pushf
xchg
fwait
mov
xor
xchg
mov
scas
add
jns
lds
into
jns
arpl
sub
mov
mov
xchg
loope
mov
repz
lret
out
inc
out
mov
fsubp
cmpsl
ja
push
cmc
or
dec
clc
pop
pushf
xorl
stc
add
cli
push
push
mov
pusha
lock
pop
es
sbb
inc
jle
test
data16
xlat
popa
mov
popa
and
push
sub
fwait
es
xchg
jo
pop
mov
frstor
xchg
iret
mov
pop
adcl
jbe
outsb
popa
fnstsw
add
fwait
stc
sbb
adc
popa
pop
push
popa
adc
sub
loopne
lahf
or
or
int
inc
mov
in
ret
mov
fnstcw
pushl
mov
lahf
data16
mov
cmovp
mov
es
movsl
out
icebp
insl
sti
stos
leave
add
mov
cmp
int3
xor
insl
mov
or
push
cld
gs
into
and
jle
pop
xchg
cltd
orl
idivl
sbb
addb
aam
cmc
enter
in
stos
ja
jb
jb
out
xchg
and
mov
lret
jp
push
inc
cmp
test
mov
scas
cmp
dec
test
adc
int3
cltd
push
lcall
in
dec
lahf
shlb
inc
mov
lds
and
mov
pop
ret
mov
dec
pop
movsl
daa
shl
fidivl
arpl
push
adc
lods
mov
jmp
cltd
push
enter
je
sti
in
jns
sti
pop
sbb
or
xor
dec
sub
lcall
add
adc
arpl
cld
pushf
fildll
mov
pop
dec
and
push
add
xor
add
cmp
int
loopne
mov
mov
imul
sbb
add
and
sbb
mov
test
mov
push
imul
and
nopl
lret
scas
shlb
imul
sarl
push
outsb
pop
add
ds
out
repz
xor
popf
mov
dec
cmpsb
pop
div
aas
into
rorl
push
icebp
mov
mov
daa
dec
out
jmp
lods
and
mov
push
daa
mov
cmp
daa
jle
jmp
testb
and
sub
and
movsb
out
mov
jle
aad
shl
jg
imul
imul
inc
ds
scas
sub
xchg
cli
movsb
ret
stos
add
cwtl
scas
dec
inc
data16
inc
jns
mov
pop
insb
jecxz
inc
scas
pop
sbb
ja
and
adc
inc
test
getsec
scas
xchg
xchg
fcomps
cmp
jbe
idivl
js
outsl
lods
or
cmp
jle
ret
mov
push
ja
xor
lds
sub
call
in
pop
clc
mov
mov
sbb
std
mov
in
call
cmp
negb
sbb
cltd
or
clc
dec
shrb
into
or
mov
mov
mov
cmp
sbb
mov
rcll
out
push
jmp
lods
pop
cli
mov
cmp
push
fwait
jmp
rcr
hlt
in
mov
out
xor
jno
xlat
jg
adc
lret
pop
out
imul
sbb
adc
sub
cmp
ljmp
out
mov
insb
test
mov
mov
test
bound
pop
xchg
mov
sub
cmp
xchg
fsubl
pop
push
roll
jmp
add
xor
mov
dec
cmp
call
lock
mov
mov
cmpsb
cli
loope
push
push
js
dec
mov
mov
pop
into
call
dec
movsl
aaa
lahf
push
test
vcomiss
dec
xor
xchg
lcall
inc
xor
hlt
jne
jg
mov
jle
sub
or
sti
rcl
mov
repnz
sub
xor
sub
ja
mov
xor
mov
dec
cmpsl
test
pop
sti
clc
movsl
and
dec
mov
adc
insl
imul
addr16
scas
insb
lret
push
fbstp
nop
into
sub
mov
into
ja
xchg
adc
mov
pop
lret
push
idivl
sub
icebp
ljmp
fsub
jno
cmpsl
xor
loopne
aam
lret
fisubrs
mov
and
jp
add
push
pop
mov
mov
iret
cltd
mov
mov
leave
cmp
mov
shll
outsl
ret
das
cmp
iret
sahf
dec
lock
add
mov
or
sub
push
pop
sub
adc
fsubl
push
in
lock
outsb
add
sub
pop
out
rcrl
int3
cmp
sub
cltd
inc
scas
adc
loopne
sbbl
out
push
negl
int3
push
leave
jo
out
pop
pop
in
lret
pop
and
pop
jmp
mov
out
test
jmp
loopne
mov
gs
and
fcoml
xchg
cmp
dec
imul
stos
and
push
mov
pop
movb
movsb
negb
xchg
icebp
or
add
add
cmp
std
loopne
xchg
scas
movb
pop
adc
mov
xchg
es
gs
call
je
lahf
sub
push
movsl
push
out
inc
cmc
dec
inc
xchg
das
add
shrb
in
xor
repz
push
lahf
int3
push
and
xor
mov
test
or
pushf
cmp
adc
pop
lret
dec
mov
repnz
sbb
inc
js
or
dec
insl
xor
push
xor
xchg
sahf
loope
aas
std
pushf
int
mov
fisubrl
xchg
gs
sbb
sbb
sbb
insl
xor
cmpl
rcr
push
xchg
leave
shl
cltd
add
cmp
jnp
in
int3
pop
stos
mov
inc
std
lcall
dec
daa
push
pop
int
mov
nop
sub
sbb
out
fdivrs
sub
mov
xchg
ja
sarb
inc
mov
dec
pop
sahf
test
mov
lods
mov
xchg
xchg
sti
je
jl
cmp
lea
fwait
dec
cmp
dec
dec
mov
ss
mov
or
dec
aad
sti
ljmp
decl
lcall
hlt
push
shlb
dec
fidivs
lret
fbld
shrb
cld
mov
inc
sbb
pop
jge
mov
jle
push
outsl
adc
lret
inc
lods
push
mov
imul
or
nop
add
mov
test
fmuls
mov
cs
and
adc
jne
mov
cmc
int
lret
cld
inc
xchg
mov
jg
dec
mov
push
les
int
inc
pop
in
outsb
data16
es
in
fistpll
pusha
fbld
mov
int3
cmp
fstpl
push
xchg
subb
mov
and
pop
stc
shlb
out
lods
mov
test
scas
test
mov
lds
sbb
dec
jecxz
mov
aas
jno
mov
neg
jmp
cwtl
jl
mov
mov
call
mov
loop
repz
pop
scas
repnz
data16
and
pop
fiadds
push
cmp
test
sub
cmp
add
jnp
call
cmpsl
movsl
insb
push
repnz
and
loopne
inc
sbb
xchg
sbb
lret
push
clc
push
fisubrl
movsl
and
in
sub
movsb
aas
and
dec
aam
jmp
test
je
rcll
xchg
mov
clc
std
push
ret
dec
rol
jno
int
dec
into
mov
jnp
out
push
clc
dec
push
xchg
push
mov
cwtl
inc
jg
push
clc
mov
jp
repnz
fdiv
std
mov
mov
jns
mov
xor
pop
xchg
push
jno
pop
ret
add
nop
mov
and
push
jmp
in
in
push
jmp
mov
mov
ss
cmp
lock
fisubrl
in
insl
loopne
xor
cs
adc
stos
jae
inc
mov
push
jle
cs
cmp
lds
testl
mov
inc
dec
test
add
aas
dec
push
inc
int
cmp
cmpl
aam
into
adc
in
fdiv
xchg
in
mov
aaa
sbb
mov
and
pop
sub
cmp
and
xchg
orl
inc
sbb
push
mov
inc
pop
leave
xchg
pop
sbb
pop
jg
push
mov
mov
mov
test
lock
cmpsb
movsb
mov
pop
cwtl
fbld
shr
negb
mov
mov
js
sub
add
jle
xchg
adc
adc
push
xchg
mov
push
push
mov
sbb
shl
jle
mov
sarl
inc
mov
xcrypt-ecb
cmpsl
mov
xlat
cld
add
mov
aam
mov
jle
lcall
lds
fs
stc
jns
push
jo
dec
xchg
mov
mov
inc
out
mov
jmp
sbbb
xchg
jp
inc
cmp
mov
test
push
dec
xchg
xor
loopne
divb
sbb
ss
mov
popa
loopne
ret
subb
cmp
lret
push
mov
xor
dec
dec
sbb
jmp
mov
movb
inc
mov
insl
sti
das
lea
sti
movl
jg
push
movsl
clc
adc
dec
in
filds
or
cmc
mov
scas
sbbl
inc
or
xchg
sbb
arpl
dec
and
ljmp
mulb
pushl
movsb
add
mov
cld
aad
cmp
pop
sti
pop
dec
inc
inc
sbb
mov
sar
iret
sahf
mov
arpl
or
cmc
xor
add
imul
pop
dec
gs
test
fsubs
roll
mov
out
mov
mov
ret
xor
arpl
mov
push
cmp
cmp
jno
iret
das
ja
mull
pop
nop
adc
and
into
push
inc
push
mov
push
sbb
and
dec
test
repnz
aas
push
or
test
dec
testb
jne
jne
cmp
jge
jb
ret
cwtl
loopne
adc
fldl
or
or
aam
repz
mov
mov
and
outsb
stos
mov
push
xchg
mov
ljmp
dec
dec
add
pusha
into
jle
add
or
jae
cmp
loope
and
jmp
lret
popa
xor
pushf
iret
sub
and
jns
aad
addb
jb
inc
rcrl
loope
out
jp
lret
dec
push
gs
bound
sub
xor
sub
data16
and
mov
inc
aad
fildll
mov
roll
aad
out
jge
or
arpl
adc
mov
lcall
mov
loopne
aam
xor
inc
loope
inc
addr16
jo
mov
adc
ds
xor
mov
sar
shll
jmp
and
imulb
loopne
ss
xor
jg
into
pop
mov
lock
ret
xorl
stos
lcall
xchg
ja
out
cmp
sbb
adc
fists
xor
add
in
cmp
mov
arpl
jns
imul
testb
jns
mov
shlb
jp
test
push
push
mov
add
pop
enter
xchg
in
lret
int
sub
sub
das
or
pop
fstpl
add
subl
pushf
cs
push
xor
sar
movsb
insl
aas
or
js
repz
dec
ja
pop
es
add
sbb
mov
pop
fucomp
mov
pop
pusha
into
xchg
shlb
sbb
add
mov
lea
and
fwait
pop
dec
adc
mov
adc
xor
loop
xlat
mov
cmp
cmp
cmpsb
sbb
ljmp
mov
mov
or
gs
sarl
and
fidivrl
or
dec
mov
xor
ds
stc
in
mov
inc
add
in
push
or
rorb
stc
xor
lea
push
jb
fildll
jmp
mov
hlt
push
nop
xor
jle
xor
push
ret
xchg
and
hlt
fiadds
movsl
fsubs
sub
or
lret
mov
pop
jae
lods
lahf
daa
pushf
mov
lret
mov
lea
jmp
ja
pop
xchg
jb
out
inc
jecxz
push
jo
sahf
insl
adc
push
xchg
push
pop
sbb
jo
jl
dec
mov
int3
mov
std
in
add
je
imul
fisttpll
xchg
addr16
gs
xchg
lods
push
lret
movsb
fsub
push
into
pop
push
sub
mov
lret
loop
hlt
fdivl
dec
ljmp
repz
in
lret
dec
push
notl
das
fisubs
mov
mov
adc
sbb
mov
jmp
xchg
imul
aas
mov
mov
xchg
aam
dec
clc
std
test
leave
repnz
in
mov
leave
or
jno
push
fistpll
lock
jno
fabs
fldenv
mov
lret
jecxz
insb
dec
jg
iret
paddsb
rclb
or
out
in
jb
mov
inc
or
dec
pop
insb
cltd
pusha
pushf
or
mov
test
xchg
insl
je
inc
loopne
out
lahf
sahf
fcmovb
push
in
add
pusha
sub
test
frstor
sub
ret
xchg
testb
inc
sub
inc
or
xchg
imulb
xor
cmp
ljmp
and
inc
sub
mov
sub
pop
shl
pop
sub
mov
mov
push
lcall
jae,pt
stos
xchg
in
mov
cltd
jg
in
sub
push
es
xor
aas
xchg
jo
pop
loopne
mov
mov
repz
push
outsb
xor
iret
mov
mov
sbb
lahf
sub
adcb
push
xchg
sbb
sbb
std
dec
add
fstpl
ret
outsb
cltd
mov
sbb
repz
adc
lds
sbb
cmpsl
ljmp
bound
mov
int
mov
mov
adc
stc
xor
ljmp
pop
push
ja
mov
mov
repnz
mov
xor
cmp
push
out
add
adc
ja
aaa
test
jg
arpl
pop
push
fcomip
mov
xor
rorl
sbb
rcll
shlb
pop
mov
push
dec
das
lcall
rcrl
scas
stc
xor
aaa
scas
daa
ror
inc
pop
rorb
and
pop
mul
xchg
xchg
adc
sbb
xchg
movsb
subl
mov
jl
mov
xor
jns
loopne
ja
mov
popf
cmp
jo
in
stos
dec
stos
cmp
sub
int
out
cs
pushf
stos
jecxz
cld
or
mov
jae
aad
scas
mov
and
fnstsw
int3
pop
push
bound
xor
mov
mov
or
lahf
or
in
add
push
punpckhbw
fcos
jle
out
out
jae
mov
bound
jo
adc
or
sbb
loope
or
out
test
mov
sti
jecxz
mov
out
aad
push
repnz
and
stos
sbb
fbstp
jo
jp
stos
mul
insl
add
lods
xchg
sbb
or
popa
ret
dec
mov
sbb
nop
dec
and
xchg
pusha
cwtl
xor
adcb
xchg
fucomi
mov
push
inc
lock
fcmovbe
lea
or
movsb
xor
sahf
lcall
int
sti
mov
sub
aaa
out
adc
jg
mov
cld
xor
push
add
nop
lret
mov
clc
lcall
push
cmpsl
mov
cmp
lock
jmp
js
int3
je,pt
inc
fmull
shrb
mov
mov
es
test
add
lods
push
insl
or
pop
mov
push
es
cmp
mov
inc
cli
stc
movsb
lea
mov
mov
xchg
repnz
stc
sbb
push
fsubl
mov
cld
cld
jmp
pushf
jg
aaa
cmp
add
cli
add
add
mov
inc
addl
pop
mov
xchg
xor
xchg
nop
pop
mov
mov
sbb
sbb
in
fcompl
inc
popa
bound
insb
rclb
xor
cmpb
xchg
pop
in
mov
xor
fistl
sbb
xor
shlb
and
add
addr16
cld
ljmp
test
mov
jb
jg
lret
push
notb
pop
in
mov
std
movsl
jecxz
arpl
jno
xor
cmp
int
jo
sbb
ficomps
inc
jge
cmp
inc
sahf
mov
pop
inc
mov
add
and
dec
mov
jl
sbb
test
jecxz
in
jl
insb
lret
sub
getsec
jecxz
rcr
into
sti
repnz
pusha
push
inc
lcall
lret
mov
lods
xor
iret
cmp
mov
adc
rcr
aam
jno
jo
push
clc
enter
and
mov
in
add
push
cmp
mov
jae
add
aad
jge
clc
add
jb
popa
mov
dec
repz
cwtl
lret
shrl
add
mov
adc
pusha
add
in
jl
inc
sub
jp
push
lret
pushf
nop
pop
movsb
inc
leave
fs
imul
fnstsw
inc
add
sti
scas
es
inc
shrl
sbb
or
pop
insb
mov
cmp
pushl
mov
scas
shll
mov
lock
test
insl
push
in
aaa
incl
mov
add
sbb
inc
pop
cmpsb
and
cltd
jnp
mov
lods
mov
in
sbb
mov
ucomiss
iret
cmp
inc
lret
xchg
inc
pop
sub
sub
pop
nop
mov
cmp
ljmp
or
jmp
mov
cmpsb
sub
mov
stos
and
mov
xchg
lahf
stc
mov
sbb
aas
mov
jns
stos
inc
add
dec
sub
cmp
repz
xchg
cmp
incb
fisubl
adc
xor
inc
push
jo
sub
xchg
mov
jmp
mov
jae
hlt
lods
nop
push
jnp
sbb
and
sbb
mov
jp
jge
mov
lods
lahf
pushf
jl
test
shr
push
int3
cli
xlat
aaa
inc
ret
fs
stos
repz
xlat
push
jno
jmp
and
cmpsl
adc
mov
add
add
decl
or
cwtl
adc
loop
cmp
adc
add
xchg
inc
ja
pop
and
dec
dec
sbb
ret
pop
and
iret
ficomps
shrl
mov
mov
dec
jl
push
pop
aas
in
inc
cmp
in
sbb
jmp
rol
mov
jp
jl
xor
dec
testb
outsb
je
nop
arpl
sbb
jae
pop
stos
mov
adc
or
or
or
and
mov
add
movsb
das
adc
enter
jns
sub
dec
outsb
pop
cwtl
mov
fisttpl
cmp
jae
sbb
out
scas
pop
xlat
insl
int3
dec
xchg
jecxz
xor
outsb
sahf
dec
je
fisttpl
popa
daa
idivl
fistpll
dec
or
rcr
sahf
nop
xchg
mov
adc
jge
arpl
sahf
sbb
inc
cmc
mov
mov
cmp
dec
int3
mov
fldenv
cmp
incb
pop
xchg
scas
lret
nop
aam
push
and
cmp
jno
dec
ja
mov
cmp
inc
hlt
xchg
repnz
lods
je
mov
dec
push
xchg
add
and
dec
sahf
fwait
sbb
add
aam
into
inc
leave
xchg
hlt
gs
add
mov
neg
jo
es
popf
pop
cwtl
cmp
xchg
paddusb
bound
or
gs
push
fidivl
cld
mov
mov
push
jae
mov
xor
add
push
leave
xor
es
inc
imul
xchg
dec
or
push
jmp
mov
or
dec
test
in
pushf
cwtl
inc
xor
xchg
pop
jne
dec
mov
fsub
jmp
add
out
out
fdivp
xor
jo
dec
loop
rcrl
push
push
ds
inc
ljmp
add
insb
cld
jnp
clc
xor
push
mov
sub
stos
add
adc
and
cs
fisttpl
push
cmp
xchg
lahf
pop
or
mov
push
xchg
push
sbb
sahf
fcoms
mov
fadd
push
jmp
sbb
mov
fcmovnb
or
cld
push
mov
sub
cmp
sbb
jns
xchg
mov
mov
sahf
movsl
xor
arpl
mov
jecxz
mov
lret
pop
inc
xchg
lock
stc
test
popf
fidivrl
pop
push
dec
jmp
fiadds
pop
and
jecxz
ret
pop
adc
add
data16
and
inc
inc
sbb
dec
xchg
mov
inc
pop
lock
pushl
add
ffree
mov
insl
add
push
in
fcoms
cmc
ret
fwait
push
enter
adc
hlt
inc
sub
ror
das
data16
xchg
stos
cmp
xor
dec
stos
cmp
push
repnz
std
inc
jnp
inc
and
rcll
test
fiaddl
adc
das
sbb
push
mov
push
rorl
insl
scas
jle
push
xchg
jb
xchg
inc
pusha
loopne
jbe
mov
jp
mov
stos
xor
adc
push
daa
hlt
outsb
into
shr
push
stc
insl
add
sub
mov
cmp
jge
pop
imul
repnz
sahf
sub
xlat
int
sub
in
popf
pop
jmp
and
or
sbb
jp
inc
insb
es
pop
imul
adc
and
cmpxchg
out
mov
jg
scas
mov
out
icebp
xchg
jle
stos
shl
dec
shl
and
je
mov
inc
push
jno
rorl
int
inc
sbb
jl
mov
loop
xor
scas
frstor
inc
aam
jnp
cmp
inc
or
jne
and
ljmp
dec
and
xchg
pop
lock
or
ret
je
or
xchg
ret
inc
mov
sbbb
mov
jmp
inc
inc
dec
sbb
cltd
mov
cltd
adc
orb
and
sub
imul
popf
fcmove
loop
orl
lods
sub
imul
pop
and
push
or
and
mov
sti
adc
push
sub
repnz
in
mov
mov
jns
sub
and
pop
sub
push
push
stos
fnstcw
dec
stos
mov
aad
xor
push
xorb
lret
dec
fcompl
mov
sub
pop
mov
mov
in
fiadds
icebp
push
push
adc
xchg
xlat
cmp
addl
jmp
lea
sub
mov
jae
das
xchg
aad
pusha
pusha
stos
mov
inc
loopne
loop
in
mov
mov
lods
push
mov
adc
out
or
mov
or
mov
imul
outsl
dec
pop
cmp
shlb
inc
cmp
cmpsl
xor
test
jge
jecxz
mov
xchg
aad
sub
loopne
in
inc
gs
and
shlb
imulb
pop
imul
inc
cmc
fstl
mov
test
cld
sub
jle
js
cmpsl
and
push
cwtl
and
push
scas
mov
sbb
je
daa
mov
add
faddp
ljmp
sbb
mov
arpl
repnz
mov
rolb
push
fdivrs
pop
and
jl
or
jo
scas
fcoms
or
and
mov
pop
lret
inc
jmp
pusha
mov
and
xor
jae
dec
insl
insb
dec
sbb
mulb
jge
add
popa
out
adc
scas
fistps
pop
sti
mov
jg
push
dec
or
pop
mov
mov
sbb
cmp
stc
jge
dec
pop
push
sahf
push
lcall
ret
lods
rolb
rcrl
lret
mov
cmpsb
fidivrs
xlat
das
mov
ret
jo
loop
jmp
rcrl
sub
pushf
ret
es
mov
cmp
imul
xor
jnp
adc
and
loopne
xchg
ret
test
test
test
jnp
xorl
jo
adc
jp
sbb
pop
push
fldl
and
dec
pop
fisttps
push
jl
dec
cmpsl
sbb
pop
orb
or
xchg
rorb
imul
shlb
jns
jle
pop
ffree
jb
js
pop
rorl
and
xchg
add
or
lret
xor
add
addl
fstps
add
mov
in
mov
dec
inc
imul
sub
scas
aam
mov
jo
std
jmp
es
sub
inc
fsub
pop
inc
in
insb
push
pop
test
or
test
dec
cs
xor
stc
mov
add
call
adc
or
aas
fs
jecxz
inc
into
mov
xor
das
nop
mov
push
xchg
pop
xchg
lcall
jge
add
pop
fcmovnbe
rep
dec
xchg
aad
jnp
add
cmp
push
sbb
cmp
sbb
mov
ja
sub
movsb
pop
jmp
cld
cmp
rorb
cmpb
jl
and
cltd
call
stos
sub
xchg
cs
hlt
cmp
add
insb
popf
lret
shlb
lahf
or
push
sub
outsb
jp
or
add
into
nop
push
or
aas
outsl
xor
dec
popf
scas
pop
push
mov
or
mov
negb
pop
push
insb
sbb
cmp
sbbb
clc
pop
pop
jle
pop
test
pop
lret
loopne
mov
xor
loope
outsl
pop
fmulp
test
xor
xor
mov
cld
and
enter
shrb
mov
ja
and
stos
pop
mull
imul
jne
inc
out
scas
pop
sub
pop
loop
neg
sub
stos
pop
mov
sahf
xor
loope
daa
lcall
aas
insl
xchg
mov
sahf
jmp
push
ret
cs
pop
sbb
ljmp
push
inc
xorb
fcomi
aad
outsl
add
popa
dec
movsb
or
mov
inc
sub
xor
cmp
incb
stos
rcrl
jge
aaa
mov
pmaddwd
and
mov
mov
loop
and
arpl
ret
cmp
mov
cmp
or
jae
fisttpll
imul
mov
sbb
into
aas
cmpsl
test
push
sti
loopne
xchg
cmp
mov
xchg
jbe
sub
adc
outsb
dec
pushf
mov
cs
jg
lret
jns
inc
jno
int
xchg
xchg
or
lock
fsubr
cmpsl
daa
test
hlt
push
mov
or
jno
test
scas
mov
inc
out
stos
jle
cmp
inc
leave
inc
inc
jle
dec
stos
mov
dec
mov
mov
incb
in
frstor
lods
mov
add
cmc
lret
mov
sub
fs
jne
pop
inc
mov
adc
in
push
jae,pn
dec
mov
loope
dec
into
mov
or
imul
cs
inc
lret
xorl
pop
sub
cmpsl
sti
xchg
outsl
sub
movsl
ret
pop
rcl
invd
lcall
jmp
scas
xchg
mov
test
mov
std
lock
cld
mov
pop
pop
adc
adc
adc
adc
xchg
sub
sub
dec
ja
push
call
add
push
pop
push
fcmovb
popa
xor
imul
adc
sub
into
sub
insb
shlb
pusha
mov
adc
rcll
pop
push
ret
jno
sbbl
mov
lods
push
repz
stc
jo
lock
adc
or
jne
scas
pop
cmc
pop
cmpsb
ds
lret
xor
pusha
push
or
jno
pop
or
imul
or
andps
les
dec
or
leave
in
push
ret
xchg
push
insl
cmp
sahf
loopne
dec
mov
js
imulb
test
pop
sbb
mov
inc
mov
push
out
in
js
leave
jns
push
lea
mov
add
and
hlt
inc
pop
stc
jns
fcos
fwait
sbb
out
lods
lea
mov
mov
aam
add
push
repnz
cmc
add
fildl
insl
dec
and
stos
sti
ja
inc
icebp
or
out
add
and
popf
xchg
es
cld
dec
jne
shl
ret
add
push
dec
pop
lcall
pop
scas
inc
js
imul
out
and
push
add
dec
cmc
pop
icebp
push
xlat
popa
in
fsubs
xchg
adc
stos
dec
pop
in
sub
sub
mov
sub
decl
shl
and
out
cli
xor
pushl
mov
and
mov
pop
ljmpw
js
vandnps
push
push
lea
mov
jecxz
add
push
sub
jbe
aaa
das
pusha
aas
je
ficompl
sbb
inc
fiadds
nop
push
and
mov
xor
push
lahf
scas
out
cmp
repnz
sub
sahf
pop
pop
sub
insb
daa
or
mov
ret
cld
push
inc
xchg
std
je
inc
scas
icebp
jecxz
sarl
mov
fwait
sub
mov
sub
mov
loope
pop
fbstp
inc
shr
es
scas
dec
stos
push
idivb
clc
jnp
cltd
ret
loope
stc
dec
lock
inc
bound
sbb
pop
xchg
xchg
add
stos
sbb
popf
sarb
jmp
gs
jae
arpl
jo
scas
daa
loopne
loopne
mov
lahf
cmp
les
sbb
ljmp
dec
out
or
incl
inc
test
loope
mov
scas
or
mov
adc
pop
repz
inc
cmp
pusha
mov
push
dec
movsl
fdivl
mov
leave
rcrl
xor
sbb
mov
push
lods
std
dec
cmpsl
testl
aad
fld
add
std
shrb
cmp
mov
jp
jecxz
mov
rcll
adcb
cmp
dec
popa
iret
dec
int3
les
cmpsl
inc
inc
js
jnp
push
cmp
lahf
pop
xor
arpl
into
repz
xadd
xchg
mov
fists
test
jno
pusha
pop
adc
mov
xor
sub
shlb
jo
sarl
pop
jle
fdivp
sub
add
adc
mov
or
ss
mov
fcoml
pop
repnz
icebp
mov
xlat
loop
imul
loope
pop
out
push
rcrb
mov
cltd
clc
pop
or
jecxz
xor
outsb
xor
mov
punpckhbw
movsb
or
out
xlat
add
adc
adc
adc
popf
push
cld
mov
lock
imul
aaa
pushf
push
jne
rorl
or
cld
test
ljmp
fldl
lret
dec
cmp
mov
mulb
leave
and
push
mov
in
adc
add
dec
jbe
test
fucom
int3
nop
aas
mov
xlat
cltd
and
mov
cmp
inc
outsb
stc
movsb
mov
adc
jb
inc
jl
pop
jnp
or
shrl
bnd
inc
cmpb
mov
aam
test
jno
add
incb
push
cmp
movsb
fldcw
aad
int
xchg
pop
cs
push
and
stc
fstpt
cmp
xlat
xchg
add
popa
push
fs
sbb
add
sub
paddusb
lds
rolb
mov
ds
loop
xchg
mov
sahf
movsl
pop
shll
cmp
sbb
out
mov
mov
je
dec
dec
test
lods
mov
pop
adc
aas
lahf
out
out
xchg
mov
adc
jb
jp
lods
sar
lock
adc
inc
out
cmpsl
mov
mov
popf
push
lahf
out
push
jo
pop
hlt
and
sbb
xor
or
lea
cs
lcall
jmp
xor
testb
and
push
insl
cli
dec
stos
imul
les
in
js
out
pushf
lcall
js
mov
test
popf
cmpsl
xor
mov
mov
insl
mov
add
pop
push
lods
dec
stos
xchg
cmpsl
lret
shl
push
dec
das
adc
dec
pop
add
dec
xchg
sbb
push
ljmp
je
push
hlt
lds
iret
insb
add
xor
xor
mov
les
fldt
rorl
in
test
xor
sbb
mov
ss
les
jmp
xor
mov
shll
push
xor
call
scas
adc
es
in
movsl
cmp
xor
fsubr
add
cmp
adcb
test
int
pop
in
arpl
fucomi
ja
xchg
sub
add
arpl
mov
mov
sti
adc
fucomip
nop
fdivrl
push
inc
ja
mov
rclb
divb
dec
xchg
jno
xchg
add
xchg
push
in
test
fiadds
jnp
data16
lret
loopne
jo
mov
pop
test
pop
mov
insl
test
data16
push
mov
dec
sub
rcrb
inc
push
mov
out
mov
lret
loope
scas
addr16
and
mov
dec
push
into
mov
sahf
xchg
out
cmpsb
xchg
xchg
push
lahf
mov
lss
subl
dec
test
loope
sub
lret
fisttpl
mov
ja
sbb
or
repnz
outsb
inc
sbb
in
jb
cs
cwtl
aad
jle
xor
jno
adc
stos
addr16
notb
aas
jecxz
inc
lock
fmul
icebp
fwait
adc
mov
add
mov
pop
ret
sbb
je
jnp
pop
aad
jns
jmp
cmp
pop
iret
dec
ss
and
inc
stc
sti
ja
outsl
or
cmp
mov
adc
jecxz
aam
js
add
ds
popf
icebp
ljmp
add
es
xor
mov
jae
xchg
jge
adc
repnz
and
xor
add
jnp
sub
cmpsl
mov
jp
stc
js
cmp
lret
sbb
stos
add
add
fiaddl
xlat
and
outsl
inc
mov
mov
cld
jns
or
and
and
mov
mov
outsb
inc
add
dec
mov
xchg
lcall
test
mov
add
je
enter
imul
testl
insb
jns
rolb
out
ficompl
pop
jge
push
dec
adc
push
push
arpl
mov
data16
push
cmpsb
bound
dec
adc
push
in
or
and
arpl
dec
into
shrl
sbb
cmp
icebp
and
sti
push
push
pusha
lock
test
shlb
je
mov
pop
mov
clc
mov
test
mov
lcall
out
cli
pop
test
fnstenv
aas
xor
add
dec
mov
scas
fisubl
repz
mov
daa
ja
inc
add
sbb
add
push
add
test
nop
lcall
sbb
nop
mov
add
jne
out
or
dec
dec
mov
imul
or
enter
and
inc
jmp
aam
lods
ret
lahf
cmp
loope
sti
mov
jae
push
add
xor
and
popa
js
lret
movsb
dec
jae
sbb
or
dec
mov
mov
fcompl
dec
push
mov
or
testl
pop
out
stos
inc
enter
jbe
mov
sub
mov
push
sbb
mov
adc
fnstcw
data16
outsl
sbb
test
arpl
jae
pop
inc
mov
std
cmpsb
sahf
gs
or
push
fadd
adc
rclb
ja
mov
mov
imul
xchg
push
repz
cmp
cmp
aam
add
or
test
fmuls
push
inc
outsl
xor
fstpt
in
repz
fstps
int3
adc
fsubs
pop
mov
fidivrs
push
or
jge
mov
loope
bound
cli
test
inc
in
sarl
lods
mov
push
roll
rolb
mov
rolb
mov
push
xchg
mov
dec
add
cmp
xor
add
int3
push
imul
jge
sub
icebp
das
addr16
dec
idivl
lea
xor
mov
adc
cwtl
lret
ficomps
in
cmpsl
ret
je
jg
data16
inc
fcom
js
das
mov
pusha
mov
mov
out
in
les
sub
fbld
icebp
inc
clc
lock
mov
sbb
mov
into
nop
incl
adc
or
movsl
leave
sub
push
mov
lcall
dec
jge
or
inc
sub
mov
in
test
xchg
pusha
dec
push
jmp
loopne
dec
ss
or
jae
push
push
sbb
jbe
movsl
popa
movsb
or
add
xorb
fdivr
lret
sub
out
add
insl
xorl
sub
mov
mov
cmpsl
xor
jno
sbb
addb
mov
sti
sub
sti
fisubl
dec
pusha
pop
mov
fwait
mov
loop
cmp
adc
insl
push
enter
je
popf
xor
lret
rcr
xor
pushw
jo
cs
repnz
sti
pop
sbb
mov
into
outsb
pop
xchg
sbb
add
popf
aad
sub
jb
cltd
mov
mov
rolb
jg
xchg
xor
xor
stos
fdiv
repz
jno
ljmp
loop
loop
push
xchg
popf
cmp
dec
pop
xlat
sub
lret
fsubs
pusha
sar
ret
lock
jge
mov
bound
int
in
cmp
sbb
sahf
std
dec
mov
lock
pop
out
fsubs
je
sub
sub
popa
sbb
push
cmp
xchg
cmpsb
insb
mov
fst
mov
imul
cmp
ret
mov
std
and
jl,pn
out
lret
cmpl
add
in
xchg
fisttpl
subb
repnz
rorl
jno
outsl
xlat
ret
push
arpl
xchg
inc
pop
or
sbb
stos
mov
out
jno
xchg
decb
dec
sbb
push
xchg
rolb
lock
pop
inc
popa
or
mov
cmp
movl
call
mov
mov
ljmp
add
mov
cmp
mov
pop
cmc
gs
mov
push
pop
push
iret
push
pushf
pop
push
add
inc
pop
inc
pop
clc
sub
sbb
push
xchg
les
enter
lock
stc
arpl
or
and
stos
add
arpl
clc
testb
mov
jg
shrl
sbb
notl
inc
lea
jl
daa
jno
sub
xchg
xchg
mov
aaa
sub
jno
pop
shlb
jmp
mov
cmpsb
jle
sub
xchg
andl
or
dec
xchg
in
inc
xor
lods
push
mov
cs
inc
push
out
push
or
stos
mov
insb
push
pop
out
inc
cltd
xchg
push
fdiv
jb
jne
sbb
cli
mov
push
mov
std
enter
xchg
xchg
out
pop
gs
cli
push
dec
inc
lea
hlt
je
fldl
orl
loop
pop
cmp
dec
stc
xor
and
insb
mov
pushf
mov
sub
sbb
jge
jae
mov
cltd
fldenv
aas
sub
cmp
mov
push
stc
cmp
dec
pop
lret
sub
test
pop
notb
pop
incl
ds
ja
and
addr16
insb
outsl
stc
and
xorl
sbb
movhps
mov
pop
adc
icebp
cmovge
call
add
push
addl
idivl
sub
ljmp
jo
fs
sahf
xor
test
je
adc
rcr
sarl
mov
sbbb
ss
mov
sbb
cmp
aad
sti
lahf
xchg
mov
cmp
nop
dec
mov
add
jnp
test
in
inc
add
int3
sub
and
push
pop
in
adc
jmp
movsb
ss
pop
cmp
dec
cld
xchg
mov
xchg
mov
jae
xor
loop
sti
imul
jl
nop
and
pop
push
sti
out
rorb
mov
xchg
xchg
and
xor
lds
mov
jns
lcall
cmp
and
enter
rclb
lea
inc
cwtl
lret
inc
roll
sub
push
mov
movsb
cmp
iret
lcall
dec
mov
fucom
das
pop
fistpl
pop
ret
fwait
hlt
xchg
jmp
push
adc
inc
repnz
lcall
fwait
testb
push
sbb
push
dec
in
mov
data16
push
sub
mov
xchg
sar
mov
mov
sbb
fsubs
je
mov
je
out
dec
jl
js
in
sub
jp
sarb
push
pop
sbb
stc
jns
cmp
cwtl
and
rcrb
dec
lods
mov
sbb
scas
push
imul
jne
adc
cmp
sub
xor
xchg
test
bound
mov
iret
mov
pop
jge
cmp
xor
or
jl
sub
xor
mov
out
repnz
and
jl
pop
dec
test
and
fadds
cltd
jnp
push
inc
notl
jecxz
mov
or
xchg
xchg
mov
jp
push
scas
aad
cmc
insb
or
in
cmpb
sbb
ret
stos
mov
cli
cltd
and
clc
cltd
xchg
or
test
xor
push
sbb
negb
push
loope
rolb
jmp
pusha
push
pop
es
sub
fs
xchg
adc
inc
icebp
fcoml
or
xchg
outsb
adc
enter
add
lods
cmp
xlat
inc
shr
sub
cld
xor
mov
lret
mov
cmp
stos
pop
repz
imul
or
sarl
std
clc
push
sahf
xchg
mov
dec
jle
mov
xor
gs
cmp
sub
jae
or
jbe
xor
push
insb
lahf
mov
push
out
mov
mov
dec
incl
lahf
outsb
mov
pop
pop
test
dec
fnsave
shlb
inc
adc
shll
cmpb
xchg
ljmp
mov
pop
repz
or
cmp
mov
push
and
mov
insl
inc
loope
and
xchg
jbe
out
dec
dec
xor
xor
pop
push
das
lahf
andl
loope
pop
adc
pop
cs
xchg
cmp
pushf
setne
test
lahf
and
leave
dec
jl
fdivl
pop
shlb
mov
push
push
test
test
mov
pop
subl
cmp
ret
pop
stc
cmc
pop
or
add
sbb
loope
sub
sbb
jo
xchg
pusha
mov
mov
ds
bound
stos
mov
cmp
scas
scas
ja
jl
test
dec
rorb
push
test
rolb
jl
or
mov
mov
leave
scas
lock
imul
insl
mov
stc
hlt
int
mov
pop
push
sub
xchg
cmp
insb
jno
add
add
cmp
adc
push
pop
jnp
jbe
outsb
sbb
aas
pusha
nop
jno
fdivl
push
std
pop
inc
js
xchg
inc
mov
shr
subb
popl
mov
pop
add
nop
outsb
inc
jb
ljmp
or
mov
int3
aad
xchg
jg
inc
jo
pop
sti
inc
test
lea
and
lea
movsb
adc
or
outsl
movsl
loope
sbb
add
rcrb
inc
nop
testb
fadd
mov
lods
cmp
lret
dec
adc
test
cmc
mov
push
nop
push
aas
scas
xchg
nop
xchg
dec
jbe
jae
jne
xchg
enter
fs
sarb
jg
in
test
stc
cwtl
dec
jne
jmp
push
pushf
rolb
hlt
xchg
xchg
mov
mov
push
jge
stc
dec
or
iret
jne
scas
lret
inc
gs
push
enter
stos
jge
lahf
xchg
aaa
pop
dec
xchg
test
mov
rcrl
pop
mov
xchg
inc
push
stos
pushf
dec
out
int
inc
adc
cmp
xor
xchg
jne
jle
mov
pop
cmp
ljmp
jbe
push
popa
scas
dec
adc
ljmp
mov
mov
repnz
cmp
cmp
cmp
lcall
sbb
mov
ffreep
pop
mov
xor
push
ret
mov
mov
out
iret
cmc
int3
push
inc
ror
inc
aaa
ret
leave
orb
push
lods
shrl
popf
pop
add
jg
stos
aad
js
mov
sbb
mov
cmp
and
nop
dec
sub
jne
inc
mulb
add
inc
dec
divl
sahf
rorb
jp
cmp
aas
cmp
divb
and
jno
cltd
mov
mov
stos
mov
loop
inc
imul
adc
push
jo
jns
je
xor
dec
sub
sub
and
inc
adc
adc
lods
stc
fadd
jbe
test
push
sbb
sbb
xor
push
xchg
bnd
cmp
add
in
gs
sub
add
xor
push
and
push
rclb
sub
pop
xchg
dec
lods
mov
mov
dec
push
cmp
in
sub
ret
shll
jl
push
cwtl
xlat
out
mov
sbb
sub
jnp
enter
incl
fisubl
push
orb
out
xlat
ss
mov
pop
cmp
dec
iret
cltd
or
or
rorl
mov
mov
insl
aas
mov
inc
add
adc
sub
jno
push
mov
xchg
xor
hlt
fdivr
testb
in
push
xchg
loop
cmp
hlt
je
xchg
stc
cmp
push
sbb
aad
das
and
mov
sbb
popa
and
and
or
mov
lea
mov
add
daa
repz
adc
push
push
push
sbb
das
xor
cmp
int
xchg
out
inc
mov
pushf
or
cmp
and
repnz
sub
lock
imul
jnp
cmp
pop
mov
xchg
popa
mov
repnz
pop
sbb
dec
addr16
inc
inc
jno
pop
mov
popf
and
cmpsb
test
or
cmpsl
test
xchg
jae
add
pop
xor
mov
movsb
pop
dec
sti
cs
js
ret
xchg
sahf
dec
mov
imul
xchg
xor
dec
mov
clc
lods
test
iret
inc
cmpsb
push
xor
jl
mov
movsl
fisttps
or
adc
add
sub
add
shlb
shrb
add
das
pop
and
or
xchg
xchg
inc
mov
sub
ficoml
scas
adc
loopne
ds
cmp
xor
iret
add
push
pop
push
es
adc
stos
cmp
ja
rcrl
and
xor
jns
call
fisttpll
push
xchg
std
cmp
xchg
mov
sbb
in
adc
cld
mov
cmp
and
xchg
ret
loop
sub
js
mov
aas
stc
hlt
cmp
std
inc
sub
int3
ret
or
movsl
loope
jo
pop
sub
jmp
add
jnp
sbb
std
add
cmp
lret
pop
mov
loop
cmc
sub
mov
sar
and
jge
xchg
sbb
out
ds
jecxz
add
sbb
mov
sarb
repz
repnz
in
mov
jne
outsl
sub
sahf
loopne
mov
xor
cmp
mov
repnz
data16
and
jl
aad
cmp
rorl
xchg
das
sub
stos
ret
jae
pop
push
add
mov
dec
roll
scas
pop
mov
pop
sub
jbe
mov
mov
jecxz
adc
ja
test
push
cmp
cmp
jg
repnz
scas
rclb
test
mov
ljmp
mov
push
dec
es
jp
rclb
cwtl
call
push
cmp
dec
push
cli
jl
pop
das
sub
pop
ljmp
mov
mov
or
adc
orb
in
lods
sahf
gs
fcoms
mov
in
xor
push
lcall
mov
ficoml
stc
test
in
jl
in
imul
pop
mov
adc
push
push
sbb
sub
sbb
inc
mov
xor
lods
push
aam
pop
cltd
xchg
cmp
adcl
push
sahf
out
int3
and
add
ljmp
rorl
aas
mov
repnz
sub
push
sti
inc
rorl
jo
push
jecxz
test
das
push
fdivrs
and
adc
loope
sbb
sbb
xchg
push
sub
cmpsb
rol
testb
sti
arpl
or
lret
sahf
jg
add
es
or
dec
ret
push
mov
mov
mov
sbb
xchg
pop
andb
cmp
cmpl
std
sbb
xor
leave
mov
in
ljmp
leave
outsb
orb
popa
iret
mov
mov
fs
jns
inc
sbbb
adc
xchg
add
pop
in
iret
lods
rcrb
xchg
xor
push
pop
jnp
and
xor
cmp
loope
das
fistpl
inc
sub
push
lods
adcl
xchg
mov
add
or
jp
dec
and
fsubr
mov
inc
xor
push
mov
sbb
cmp
dec
cmp
sub
popf
or
mov
aad
lods
lea
pop
dec
cmpxchg
jg
adc
jge
mov
loopne
fmull
mov
aad
arpl
imul
js
inc
sub
fidivl
sbb
call
add
outsb
push
call
das
lahf
aaa
lahf
mov
movsl
mov
dec
push
adc
test
sub
sbb
ror
lcall
fwait
movsb
das
inc
leave
fcoms
addr16
int3
cld
inc
sub
sbb
repz
inc
xchg
mov
aas
and
cmp
mov
and
sbb
cmpsb
movsl
popa
fadds
sub
cmp
scas
movsb
pop
daa
adc
mov
sbb
repnz
sbb
cmpsl
inc
xorl
pop
cmp
cmp
stc
cs
add
pop
add
xor
sub
mov
or
xchg
cmpsl
aam
jbe
lret
and
adc
dec
into
adc
jle
push
sub
add
mov
add
ret
or
hlt
stc
cld
lods
sahf
push
ret
dec
add
sub
mov
cwtl
jg
inc
adc
or
dec
call
xchg
xchg
jg
inc
xchg
sub
loop
loop
and
call
xlat
pmulhuw
lods
out
fs
cmp
les
shlb
pop
push
iret
cmpb
pop
add
in
xchg
leave
mov
iret
and
xchg
xor
aad
cld
jecxz
pop
pop
fnstenv
into
mov
mov
addb
jns
sub
out
hlt
jns
cmp
mov
fs
in
jl
js
arpl
inc
and
adc
xchg
xchg
arpl
mov
or
mov
fwait
mov
loope
mov
inc
negl
outsl
ja
dec
sub
test
imulb
pop
jnp
push
roll
ret
push
mov
gs
bound
push
shll
int
out
in
pop
or
and
jb
out
imul
dec
scas
lods
inc
and
mul
cmpsb
je
mov
inc
sti
inc
mov
sbb
add
ret
cmpsb
scas
int
movsb
inc
xchg
adc
push
push
mov
ja
popf
mov
js
add
xor
mov
mov
idivb
and
pop
mov
cmp
lahf
imul
mov
xchg
cli
arpl
dec
pop
push
scas
outsb
jne
sub
pop
rclb
lcall
push
mov
std
mov
xor
lods
fcmovnb
add
and
mov
jp
xchg
rorl
or
movsl
bound
orl
add
jle
bound
addr16
int
mov
jle
data16
int3
repz
imul
pop
mov
mov
sbb
inc
in
sub
and
mov
arpl
adc
clc
mov
popf
fisubrs
inc
shrb
jmp
movl
bound
lds
into
mov
test
cmc
adc
xor
imul
inc
and
call
and
sbb
cmp
enter
adc
in
pop
push
cmp
aaa
dec
sub
jge
adc
rol
ss
jle
loopne
ds
stc
fwait
add
jle
cmpsb
jg
pop
and
mov
addr16
sbb
sub
or
icebp
adc
cs
rcrl
es
dec
mov
adc
in
ja
xlat
ljmp
mov
and
sbb
mov
jns
iret
mov
mov
stc
nop
adc
push
orb
sbb
dec
pop
adc
fs
or
and
pop
lahf
jne
push
clc
mov
js
pop
mov
clc
std
lcall
dec
lahf
pop
and
xlat
outsl
jmp
int
movb
inc
movsl
in
imul
pop
cmp
push
hlt
mov
mov
fcmove
fdivs
dec
fmull
iret
xchg
jecxz
pop
fistl
sub
sub
hlt
xchg
push
addb
into
push
dec
mov
out
push
pop
out
sahf
fsubrp
jbe
ja
add
push
movntps
out
xor
mov
sbb
fstps
rcl
movsb
ja
cmp
push
push
pop
cli
outsl
cli
mov
cmp
pop
dec
test
xor
cmpsl
vcvttpd2dqy
into
std
les
stc
addr16
in
xlat
jg
adc
xchg
pop
or
adc
fdivrs
inc
dec
mov
hlt
fisubs
stos
push
repnz
repnz
jg
push
in
fisttps
pop
add
jmp
icebp
lret
jge
ss
mov
popf
test
out
aad
leave
out
cmp
dec
inc
outsl
adc
inc
lahf
jmp
cmp
clc
cmpsw
fcompl
ret
jbe
loope
and
cmp
jl
add
test
jne
fbstp
sbb
push
xchg
leave
jno
cmpl
adc
fists
push
cmp
and
ficomps
rcrb
outsl
dec
and
cli
pop
cmp
lahf
xchg
jg
inc
mov
pop
sbb
dec
std
inc
dec
pop
addr16
ds
shrl
das
int
inc
adc
xor
dec
ds
dec
test
add
popa
fs
cmp
jnp
sbb
addr16
pop
jmp
push
pop
dec
stos
lock
data16
ljmp
aas
xor
in
sti
mov
leave
dec
xlat
ds
push
sub
jno
cmpsb
dec
sub
clc
arpl
es
arpl
sti
inc
jg
fdivl
inc
nop
dec
cltd
push
inc
lahf
dec
or
xor
in
add
popf
dec
mov
xor
test
movsb
rcll
pusha
inc
sub
rclb
mov
xchg
sbb
dec
jae
mov
sbb
imul
lods
or
std
fs
dec
or
xchg
xlat
push
sbb
cmpsl
adc
pop
xchg
iret
jg
je
bswap
lods
jns
jne
js
lea
outsb
pop
push
popa
lds
mov
mov
xchg
dec
pop
aad
jg
fistpll
lret
in
mov
cmp
repz
insb
stc
in
and
inc
lahf
out
sahf
lcall
rcll
int3
push
lea
ss
icebp
addr16
adc
jl
adc
outsl
outsl
lds
sbb
jns
cmp
jecxz
inc
or
mov
call
pop
mov
mov
add
jle
sbb
jbe
imul
push
and
pop
jge
cmp
imul
scas
xchg
adc
and
daa
sbb
jg
or
scas
cwtl
add
adc
pop
push
aaa
stos
lds
jge
test
xchg
add
pop
jl
pop
push
xor
adc
mov
mov
jb
mov
lcall
test
mov
xchg
ret
insl
xchg
mov
sbb
fdivs
mov
aaa
outsl
mov
dec
push
mov
push
movsl
dec
xchg
or
mov
repnz
shlb
adcl
in
cmp
jb
sbb
stos
stos
mov
jecxz
hlt
sub
lret
mov
add
add
mov
xlat
mov
or
inc
inc
mov
data16
jne
sbb
mov
sahf
xor
jge
xchg
cmc
fcmovb
pop
roll
stc
adc
cmp
cmpsl
mov
aaa
sub
push
stc
stos
cltd
push
mov
add
mov
push
xor
cld
arpl
out
scas
lret
arpl
outsl
push
les
add
jge
dec
xor
sub
or
loop
jbe
jle
push
jp
inc
cmp
and
addr16
inc
lds
stc
fdivp
fs
sub
adc
mov
ret
dec
lahf
icebp
in
test
add
mov
push
sarl
scas
cmp
pop
mov
and
rolb
jne
mov
repz
xchg
inc
fcmovnbe
and
inc
xor
fisubl
inc
inc
dec
jge
loopne
xchg
pushf
loope
adc
sbb
jle
loope
and
xchg
ds
popa
in
call
mov
push
dec
or
mov
sbb
in
test
out
dec
scas
mov
or
ss
mov
pop
test
jnp
mov
aam
mov
pop
and
cmp
and
mov
fincstp
jmp
push
mov
lcall
daa
test
inc
mov
adc
lret
and
repz
testb
dec
sbb
dec
movsl
sub
test
pop
jmp
jnp
shlb
stos
inc
cmpsb
shl
shlb
cmp
jle
ljmp
push
pop
gs
xor
hlt
imul
aaa
stos
pop
enter
js
mov
adc
xchg
sbb
fidivrs
pop
jae
or
mov
movsb
nop
cmp
add
rolb
divb
test
mov
int3
andb
lcall
and
xor
lock
je
jne
inc
rcl
js
inc
fiaddl
into
sub
daa
fs
loop
inc
xchg
imul
push
imul
cmp
mov
mov
xor
inc
repnz
andl
cmp
xchg
fnsave
xchg
imul
mov
lcall
xchg
call
call
add
lret
jae
or
aad
push
pop
dec
mov
call
jne
xchg
std
sub
inc
aad
jp
outsb
lods
pop
cmp
dec
xchg
adc
hlt
and
or
push
iret
add
shll
leave
rcl
push
xchg
cltd
jg
add
fisttpl
sbb
dec
int3
push
jmp
add
cld
adc
test
repz
movsl
int3
mov
insb
rolb
mov
and
mov
mov
xor
ja
jno
cmp
add
pop
cli
inc
inc
test
mov
mov
cmp
loop
dec
mov
aad
push
cmp
dec
cmp
pop
jl
movl
mov
pop
pushf
icebp
jns
mov
add
pop
imul
iret
pop
js
nop
push
insl
fwait
sub
ljmp
sbb
test
mov
loope
lcall
mov
mov
aad
add
jae
sarl
inc
lret
xor
mov
lds
imul
jge
loop
ret
lock
sub
cmp
pop
xor
push
xchg
mov
dec
mov
mov
ret
mov
cltd
clc
xor
movsl
jo
sub
xor
jle
repz
gs
mov
icebp
jg
imul
jne
cs
les
add
lret
cmp
rcll
jmp
pop
pop
pop
push
xor
cli
jb
bnd
jp
adc
xchg
stc
fidivrl
inc
lcall
dec
je
pop
mov
mov
jae
mov
outsb
pop
sbb
adc
mov
hlt
or
stos
dec
mov
fsubrs
or
adc
fidivs
rorb
sub
insb
test
ret
mov
sbb
insl
or
aam
std
cmp
cmp
lahf
rorl
movsb
mov
xorl
mov
lock
inc
lods
adc
hlt
push
and
jns
adc
mov
dec
roll
jne
mov
dec
pop
insl
dec
dec
leave
jne
cltd
inc
adc
jo
cmp
dec
mov
rcr
sbb
sub
fimull
das
es
adc
out
inc
push
lret
es
and
sbb
pop
icebp
inc
or
insb
cld
iret
xor
pop
ja
inc
sub
mov
jne
sub
mov
or
leave
mov
or
sbb
lods
adc
insb
push
and
and
pushf
aaa
inc
in
repz
data16
sbb
fucomp
dec
mov
and
sti
mov
sub
out
aaa
ret
cmp
in
xchg
mov
cltd
dec
mov
je
clc
pop
ret
daa
and
mov
and
push
mov
or
dec
push
fidivrs
loope
xchg
and
sbbl
ffree
jo
sti
icebp
in
cld
stc
inc
push
leave
push
cmp
scas
into
lods
lea
in
xchg
movsb
int3
sbb
out
mov
ja
push
int3
jg
into
push
aam
mov
xor
stc
push
fstpl
je
add
dec
dec
cs
cmpsl
stos
xchg
rol
cld
add
sbb
xchg
jb
mov
icebp
sbb
jb
ss
addr16
jne
jbe
aam
repz
sbb
out
int
and
hlt
repz
mov
dec
clc
bound
jmp
in
loop
call
daa
faddl
push
cli
scas
adc
mov
mov
rolb
sub
ja
mov
sbb
scas
cltd
pop
in
sbb
jmp
or
jp
mov
ret
jo
lock
jns
lock
rcrl
dec
pop
orb
xchg
ftst
fnsave
repz
iret
or
push
mov
das
sarl
nop
lock
push
fwait
sub
aaa
adc
enter
lret
cmpsb
mov
push
push
mov
mov
mov
cmp
pop
mov
pop
cmpb
mov
mov
push
cmpb
ljmp
mov
jo
mov
push
arpl
repz
ftst
push
pop
sbb
xchg
xor
mov
iret
lahf
cmp
lret
xor
frstor
push
cwtl
add
int
push
loope
in
xchg
mov
mov
rcr
es
jno
mov
mov
mov
add
mov
addb
lds
pop
cmp
icebp
lret
xchg
mov
adc
into
ret
add
push
dec
imul
jge
icebp
mov
jge
mov
mov
adc
jmp
std
jns
iret
sti
stc
mov
dec
sbb
lea
xchg
imul
test
scas
arpl
lcall
inc
jnp
mov
repz
lds
leave
jae
or
sub
push
add
fdivrs
mov
repz
scas
lds
cmc
jbe
sbb
std
arpl
xchg
loope
cmp
dec
and
dec
shrb
xchg
push
push
leave
cmpsl
add
dec
xor
andl
inc
test
gs
pop
mov
rorl
push
xchg
movsb
xchg
lock
cmpb
cmpsl
dec
sub
push
frstor
xchg
or
rorl
popf
pop
scas
int3
dec
into
xlat
test
fldl
and
dec
in
test
mov
push
movsb
mov
pop
testl
shlb
cli
loope
mov
xor
mov
imul
push
pop
rcrb
adc
mov
repz
sarl
pop
xchg
fs
sub
testl
pop
push
pop
or
sbb
pminub
shlb
int3
push
and
ljmp
sbb
sbb
mov
mov
or
and
push
jnp
mov
sub
sarl
jbe
fwait
neg
xor
loop
or
sbb
xchg
xor
cmpsl
xchg
or
jle
jns
jno
xchg
lret
jmp
fwait
pop
negb
pop
and
cli
jge
dec
push
xchg
sub
mov
cmp
sbb
shll
sti
cwtl
ss
push
shrl
xor
inc
jge
and
cld
fldenv
stos
ja
mov
mov
pop
lea
es
cmp
xor
mov
add
jg
popl
push
or
pushf
fwait
inc
aad
aam
mov
xchg
push
popf
add
lret
push
mov
mov
aad
mov
es
mov
push
sti
pop
repz
inc
repnz
mov
push
lods
pushf
or
popa
aam
fldt
dec
in
call
enter
mov
cmpsb
fwait
or
cwtl
js
inc
sbb
leave
jb
sub
adc
mov
clc
lret
pop
inc
fisttpll
dec
xor
pop
rolb
pushf
and
sub
icebp
add
and
cmp
and
xchg
adc
orl
push
cmp
scas
xchg
sbb
int
loope
xor
lcall
pop
fisubrl
xlat
mov
or
dec
mov
xchg
fldcw
mov
xchg
je
sar
jecxz
fiaddl
xor
cmc
or
push
cmp
call
ljmp
pop
fdivl
ljmp
push
es
testl
inc
lahf
pop
or
adc
add
add
test
xchg
out
jbe
xchg
push
lock
xor
scas
add
or
jecxz
jnp
sbb
and
mov
fimull
pop
sub
int
jge
sbb
stc
push
jnp
neg
and
mov
ljmp
loop
sbb
or
pop
push
inc
mov
adc
xchg
sbb
mov
sarb
adc
out
scas
sbb
rcrl
dec
mov
add
loop
test
push
mov
into
or
mov
pop
xchg
push
or
push
sub
inc
rolb
push
andb
dec
and
outsl
rcrb
fdivrl
into
leave
mov
es
sub
inc
xor
xor
dec
rorl
in
push
repnz
lods
adc
lock
push
mov
or
xor
inc
jne
iret
mov
addr16
insl
cmp
out
clc
mov
jle
movsb
stos
fisttpll
mov
pushf
ljmp
adc
rorl
fcoms
in
jmp
xlat
push
xor
outsl
sbb
bound
mov
xor
cmp
jno
xchg
sub
xchg
aas
sub
gs
orl
loopne
imul
adc
lcall
jae
and
add
nop
adc
shlb
jae
les
outsl
sub
inc
test
adc
xor
mov
fs
dec
jae
sbb
push
jae
dec
addb
cmp
jbe
faddp
mov
xor
jmp
loope
and
rclb
lahf
inc
and
dec
enter
sbb
cmp
shll
test
mov
xor
cltd
xorb
aad
pusha
cmp
dec
add
test
jno
mov
out
xchg
inc
fadds
cmp
es
ljmp
inc
outsl
lret
push
mov
lods
and
xchg
dec
popa
data16
mov
pop
jno
dec
mov
movsl
xor
bound
dec
mov
fiaddl
nop
add
sbb
xor
aad
cmc
pop
in
lods
inc
mov
jmp
push
lret
fisubrl
xchg
shl
push
in
mov
xor
mov
and
xchg
mov
outsl
cmpsb
out
pop
xchg
test
push
or
cmp
lret
mov
xor
dec
jbe
outsb
scas
lret
and
pop
xchg
loopne
mov
out
mov
jbe
sbb
mov
shll
fsubrs
fucom
pushf
mov
mov
jmp
lods
adc
into
arpl
mov
sarl
xor
fdivrl
pop
aam
testb
xchg
and
pushf
adc
aad
push
test
sbb
or
dec
idivl
in
pusha
push
jb
inc
shll
mov
sbb
test
adc
test
add
fldenv
jo
xchg
fisttpl
es
lret
pop
ds
shll
add
inc
rep
cmp
sub
imul
or
fidivrl
xorb
inc
lea
pop
xor
sbb
sub
pushf
push
aaa
cmc
mov
mov
test
adc
int3
xor
ss
out
and
in
cmp
push
and
pop
inc
out
pop
fucomi
cmpsl
jp
push
repnz
out
call
mov
jb
repz
lahf
push
jae
and
sar
rclb
cli
dec
movsb
pop
lock
test
mov
add
jle
mov
fwait
lds
pop
cli
jl
adc
out
outsl
pop
pop
dec
dec
cmp
push
mov
xorb
xchg
dec
aam
push
and
stos
jmp
adc
xor
repnz
je
shlb
movsb
jg
jl
loope
into
scas
xlat
cwtl
ss
xor
addr16
std
mov
sbb
repnz
or
fnclex
in
in
pop
repz
xor
jl
jb
cmp
bound
sbb
xor
cmp
loope
cmp
push
stc
in
sub
fs
pop
inc
out
addr16
push
cmpsb
push
stos
mov
setb
push
xchg
jmp
addr16
stc
popf
push
fdivrl
and
les
xchg
lock
or
pushf
push
int3
pop
push
cmc
pop
jge
xchg
sub
xor
shll
movlps
add
cltd
xchg
xorb
call
adcb
or
pushl
test
xor
dec
sub
xchg
dec
pop
push
cs
imul
cmp
and
xchg
fcoml
adc
fildl
xor
mov
xchg
mov
pop
data16
inc
test
call
sub
jnp
mov
sub
rcr
jnp
addr16
dec
xchg
loope
test
and
mov
jb
lret
in
int
dec
xor
pop
push
fdivs
pop
call
or
or
aad
stos
sbb
test
adc
pushf
or
divb
cwtl
mov
sarw
mov
ficompl
mov
jo
scas
sbb
sbb
adc
pop
cld
je
inc
in
push
jl
dec
ror
dec
xchg
push
adc
push
fmuls
call
cmpsl
inc
pop
mov
inc
rorb
mov
mov
add
data16
std
push
push
and
ljmp
ret
fldt
pop
clc
add
jae
scas
mov
adc
adc
push
fs
cltd
push
xchg
je
cmpsb
fcompl
or
repz
mov
fisubrs
lea
xor
ficompl
cmp
out
sarl
mov
ja
incb
pop
fildll
adc
pop
je
in
xor
fisttps
repz
add
mov
push
or
inc
lock
dec
add
xor
push
jae
loopne
cmpsb
xor
pusha
notb
loopne
ret
in
jp
mov
adc
int3
pop
fadds
cmp
pop
sbb
das
sbbl
sub
push
xchg
push
push
and
in
mov
adc
mov
pop
movb
insb
xchg
jmp
xor
ret
neg
inc
dec
test
aam
adc
out
adc
mov
test
sbb
int3
push
daa
cld
inc
shlb
xchg
call
pop
lock
test
lods
xchg
fildl
inc
movsb
inc
xchg
js
movsb
test
pop
jns
cmc
cmp
aad
ret
stc
or
outsb
nop
clc
imul
mov
xor
adc
movsl
jp
out
int3
out
daa
sbb
and
dec
ficoms
xchg
and
ret
xor
or
jecxz
jo
dec
insl
adc
push
xchg
jmp
xchg
adc
inc
mov
in
push
aas
jae
inc
ret
ljmp
lcall
fwait
arpl
scas
lock
imul
mov
mov
push
repnz
es
xchg
shl
sub
call
sbb
pop
sti
test
mov
int3
pop
mov
cmp
fisubrl
or
mov
mov
in
pop
loope
push
int3
xor
push
mov
sub
inc
nop
into
mov
movsb
aam
mov
je
inc
insl
jno
mov
out
repz
push
adc
inc
or
pushf
je
shlb
push
add
idiv
sbb
jo
dec
sub
scas
push
jae
xor
loope
lods
cmp
das
mov
inc
ljmp
mov
imul
negb
push
sub
dec
test
fistps
pop
out
dec
es
mov
add
add
test
mov
test
pop
fstp
xor
adc
fmull
test
xchg
xchg
aad
scas
daa
cwtl
outsl
out
dec
pop
push
out
push
lret
cmp
cld
stos
sbb
dec
sbb
sahf
mov
dec
dec
cmp
push
xor
cmp
aaa
cmp
int
mov
fcmovb
cmp
push
pop
int
add
xchg
pop
das
jbe
push
iret
jl
jecxz
pop
or
js
cmp
xor
adc
xor
jne
and
add
cli
sbb
push
dec
clc
in
mov
scas
ds
dec
mov
jno
pop
pop
pop
loop
push
stc
push
inc
mov
nop
inc
push
cmp
mov
jne
clc
cmp
aam
ljmp
test
jmp
out
pop
mov
fwait
andb
outsb
jb
lea
sbb
and
inc
pop
jae
cmp
inc
add
arpl
pop
cli
fldt
lds
pusha
sbbl
sti
dec
pop
popa
or
xor
stos
pop
sub
sub
sbb
lss
call
dec
imul
push
jmp
mov
insb
push
aad
inc
mov
mov
cld
mov
daa
sub
xor
popf
jl
cmpb
xchg
jecxz
rorb
mov
aas
jge
inc
in
fildll
lods
pop
arpl
add
les
jg
pop
or
or
jl
push
test
push
add
xchg
lcall
orb
fdivrs
push
push
push
cmpl
leave
loop
push
add
or
and
das
mov
push
inc
mov
mov
xchg
sub
sbb
gs
xorl
sub
cmpsb
movsb
add
xchg
jns
jbe
mov
out
and
mov
out
dec
push
cmp
test
jb
adc
xor
xlat
inc
sub
mov
xor
mov
popa
dec
aad
adc
ss
sub
jne
jge
lret
push
arpl
test
jmp
cmp
mov
mov
jl
call
push
adc
adc
pop
fbstp
pop
adcb
pop
mov
cmpsb
fmulp
aad
decb
movsl
insb
mov
mul
cmp
or
aaa
cmp
xchg
mov
fildl
out
mov
push
imul
jae
xlat
loope
mov
or
fcoml
jno
cmp
cmpsb
push
lret
stos
clc
mov
sbb
icebp
inc
dec
xor
add
aam
sub
mov
fs
xchg
jge
sbb
loopne
lods
fnstenv
push
in
cmp
ret
mull
popa
cltd
mov
cmpsb
xor
cmp
ss
or
ljmp
push
loop
cmp
push
mov
lods
lock
cmp
inc
js
pop
pop
xchg
lods
and
addb
and
pop
pop
cmp
dec
sbb
lock
aaa
sarb
js
xor
sub
mov
mov
lea
xchg
push
mov
sbb
pop
mov
hlt
leave
lock
mov
ret
aas
icebp
push
pop
int
mov
sti
sbb
pop
dec
push
dec
lock
sub
insl
pop
cld
mov
mov
es
dec
and
xor
out
dec
pop
popf
xchg
mov
stos
les
test
shld
insl
mov
push
fucom
adc
sub
cmp
pop
lcall
xchg
cmp
mov
movsl
jno
push
repnz
call
into
stc
stc
sub
sub
jmp
jge
xor
push
into
psrld
sarl
iret
or
stc
cmp
add
mov
xchg
data16
outsl
cmpb
pop
push
mov
pop
aas
sbb
test
xchg
xor
shrl
scas
int3
jl
mov
add
and
xor
cli
shrb
pop
and
ss
lods
fists
adc
mov
loope
stos
test
mov
cltd
aas
push
add
sub
jno
add
push
aas
pop
insl
in
sub
cmpsl
sub
and
mov
xchg
jl
adc
out
ljmp
adc
scas
sub
xor
and
push
and
mov
push
shrl
bound
mov
cmc
movsb
fldl
cmp
lock
xor
mov
xor
lret
rolb
popa
adc
xorb
sub
inc
xor
dec
and
and
divl
rolb
insl
cmp
pop
push
mov
push
fidivrl
inc
je
mov
jecxz
adc
and
mov
dec
in
xor
fsin
or
xchg
dec
in
ret
push
pop
dec
pop
jb
enter
mov
sbb
xchg
clc
and
negb
pushf
dec
dec
aad
test
scas
scas
dec
lcall
pop
imul
std
mov
pop
daa
fdivs
xor
dec
inc
push
push
shr
test
fsubrl
fcomip
scas
shl
aad
lret
mov
ret
popa
push
adc
into
mov
cld
sbb
iret
mov
adc
dec
jle
lds
repnz
jl
pop
out
dec
push
pusha
enter
stos
dec
pop
and
das
sub
jae
and
add
inc
or
les
jmp
jmp
pop
pop
scas
push
cmpsl
and
cmpsb
and
dec
pushf
stos
pusha
or
xchg
mov
xor
mov
mov
add
add
pop
pushf
cmpsb
dec
sub
shrl
stc
or
mov
cmpsl
and
pop
inc
xorl
push
int
in
or
fistpll
mov
pop
jl
scas
push
daa
xor
mov
rclb
inc
add
push
jmp
stos
push
jg
popa
inc
xchg
xor
jg
ds
ds
mov
fiaddl
mov
rep
mov
in
sbb
mov
xor
xor
xlat
js
and
dec
push
lret
into
push
outsb
mov
nop
inc
lret
js
pop
cmp
push
loope,pt
addl
jp
push
pop
and
stc
mov
hlt
cltd
sbb
or
jae
dec
int
xchg
fstpt
xchg
ficoms
jae
rcrl
fwait
mov
pop
mov
xor
aad
jbe
test
ror
mov
pop
fadds
daa
inc
popf
les
out
jb
mov
loopne
xor
and
add
xchg
xchg
je
cmpsl
fsubs
loopne
stos
mov
sbb
nop
adc
and
das
cli
in
lret
andnps
ficoml
in
cmp
mov
test
js
xchg
mov
jns
xor
xchg
aam
xchg
subb
mul
add
rorb
adc
jmp
lods
in
adcb
sti
les
call
add
xchg
mov
xchg
fs
mov
inc
xchg
sub
mov
and
scas
aaa
sbb
pop
xchg
push
imul
push
div
lret
sahf
subb
loop
into
notb
cmp
push
mov
or
xorl
or
popl
aas
adc
adc
xor
jnp
enter
js
fs
mov
mov
lods
xlat
dec
jne
ret
push
addr16
arpl
dec
mov
and
pop
repz
outsl
add
ja
stos
add
nop
out
bnd
sahf
sbb
mov
mov
mov
cmc
cwtl
and
push
sti
mov
arpl
and
jle
rcr
adc
ret
ss
push
lock
add
push
rcl
sub
or
fwait
jmp
std
out
xchg
xlat
lods
add
dec
aad
ret
jo
aas
mov
sub
repz
ja
fistpl
jecxz
sub
sbb
movsb
and
jle
pop
es
inc
cmp
imul
aad
sbb
movsb
mov
jb
cltd
les
pop
mov
mov
pop
mov
out
rol
jbe
jl
out
test
and
jb
outsl
sub
repz
aam
inc
rolb
imul
xchg
repnz
mov
mov
xchg
dec
xchg
sahf
ret
mov
push
addr16
dec
shlb
push
test
mov
insl
shll
push
repnz
or
loopne
aas
adc
fucomip
ja
xor
mov
push
push
iret
mov
in
jns
jg
popa
mov
cli
inc
mov
inc
cmpsb
sub
push
clc
dec
rorl
ret
scas
xor
and
xchg
outsl
mov
les
dec
movsb
jae
dec
sbb
rorb
push
cld
ret
shl
cli
int
xchg
cmp
icebp
xchg
mov
sbb
dec
xchg
leave
fcomi
fidivrs
cmp
imul
mov
jns
xlat
adc
sub
repnz
push
ss
and
inc
xchg
imul
pop
jno
sbb
pop
mulb
inc
jmp
test
sub
fisubl
lret
dec
lret
in
leave
in
insw
out
addb
sbb
pop
ljmp
lds
movsl
add
not
sbb
call
fwait
dec
movsb
mov
insb
clc
int3
pop
jae
in
push
inc
adc
xlat
and
pop
pusha
cwtl
mov
pop
or
outsb
mov
cmp
cmp
clc
pop
xor
sbb
push
cmc
in
lods
inc
inc
fucomp
lock
into
or
sbbb
icebp
and
mov
lock
sbb
repnz
in
cmpsb
loope
and
fwait
xchg
mov
fisubs
pop
js
mov
jge
insb
push
arpl
arpl
repz
frstor
xor
jl
arpl
loop
sub
sub
cmc
cwtl
mov
out
roll
jle
cmpsb
jmp
lods
jbe
call
or
imul
pusha
hlt
xor
in
in
imul
jmp
packsswb
out
mov
pop
test
push
fsts
adc
mov
les
bnd
das
pop
in
jns
xor
add
push
outsb
sti
mov
add
inc
pop
sbb
icebp
mov
xchg
sub
jnp
andl
in
ja
cli
aas
dec
mov
sbb
push
popf
cs
shl
addr16
sahf
sub
in
test
xchg
xlat
or
adc
adc
jle
and
andl
inc
mov
cmpsb
outsl
fidivl
popa
lods
xchg
jno
jb
xchg
jmp
jns
aam
pop
and
fildll
nop
push
sbb
popa
adc
test
dec
jae
cld
shrl
pop
fsubrl
and
adc
mov
mov
add
jg
out
mov
shrb
and
pop
lock
loope
cld
push
nop
mov
xor
cmp
ds
push
push
pop
mov
cmp
xchg
mov
inc
push
xchg
dec
inc
fwait
sbb
mov
xchg
fs
data16
lods
mov
repz
outsb
dec
test
int3
adc
add
mov
sbb
lods
mov
push
scas
jae
push
in
rcll
loopne
lods
repz
cmp
mov
nop
scas
fwait
das
ret
insl
push
repz
mov
dec
movsb
mov
rorb
insl
push
inc
xchg
fmulp
call
or
enter
cwtl
jp
push
rol
mov
cld
clc
mov
dec
mov
bswap
aam
jge
add
sub
in
push
sbb
mov
jb
jnp
in
cltd
mov
inc
xchg
lods
push
push
add
pusha
push
mov
mov
cmpsl
loope
jns
mov
and
jo
enter
push
push
pop
lret
jle
jb
mov
in
or
mov
pop
dec
sub
in
mov
mov
push
mov
pop
enter
int3
pop
xchg
enter
jne
jecxz
push
push
add
push
cmpsb
int3
hlt
mov
mov
mov
js
cmpsl
loop
xchg
and
jp
pusha
bound
icebp
xchg
mov
inc
call
inc
dec
add
or
idiv
or
jns
pop
clc
xchg
cltd
inc
outsl
push
xchg
inc
xor
fildl
pop
dec
mov
in
test
sbb
mov
je
sarl
push
add
xchg
push
lea
dec
pop
fmuls
insl
sti
movsb
or
mov
ret
popf
ljmp
iret
aam
and
psubb
fwait
iret
add
mov
mov
jl
scas
mov
jo
hlt
adc
data16
xchg
adc
test
loop
in
inc
hlt
lock
arpl
mov
fwait
add
and
int3
shll
leave
dec
jge
fldt
pusha
jb
ljmp
add
mov
lret
cli
int
pusha
mov
mov
mov
lea
mov
insb
mov
mov
rolb
mov
pop
fimull
fisttpll
js
adc
pop
lret
out
sub
cmp
sbb
mov
lock
and
and
stos
fldenv
daa
mov
xchg
push
jmp
mov
pop
insl
xor
rol
das
test
cli
sub
sub
sub
xor
push
jg
pop
xchg
mov
popa
and
and
mov
mov
mov
out
call
aam
xor
sahf
gs
adcb
enter
xor
jae
jo
mov
mov
and
and
jg
insl
loope
int3
push
xor
enter
rclb
icebp
cmp
and
loope
xor
jo
rorb
test
pop
mov
and
fimull
or
dec
push
cltd
mov
xchg
std
repz
jne
inc
mov
enter
pop
pop
xchg
sbb
popf
mov
daa
ljmp
aam
sbb
mov
mov
out
add
ljmp
in
push
les
inc
mov
add
mov
in
imul
sbb
into
jmp
add
or
xchg
or
sbb
inc
or
pop
iret
call
ret
insb
popf
nop
call
mov
push
jle
xchg
jp
addr16
mov
cld
cmp
xor
push
negl
rclb
popa
pop
stos
jns
jle
adc
cmp
jb
mov
inc
aam
jmp
stos
jge
out
mov
pop
das
insl
mov
mov
lods
pusha
mov
lahf
sti
aad
sbb
cmpsl
inc
into
push
roll
aam
mov
arpl
adc
outsb
add
mov
out
sub
pop
loop
pop
add
int3
imul
ss
and
xor
pop
fs
mov
pop
pop
xchg
dec
inc
scas
outsl
aas
jns
cld
insb
pushw
and
sub
mov
sbb
das
cmp
arpl
lock
dec
inc
xchg
and
mul
stos
sbb
inc
pushf
cmp
mov
in
adc
adc
push
lods
sub
add
or
adc
stc
pop
fldcw
inc
mov
fistpl
xor
sbb
loopne
sti
ja
outsl
or
addr16
xchg
das
popf
shr
test
scas
ja
out
test
test
and
push
jge
mov
dec
dec
xlat
stos
pop
jp
daa
nop
bound
push
stos
cmp
push
mov
pop
pushf
push
jl
pusha
pop
sahf
sbb
mov
push
dec
pop
dec
push
lods
jle
pushf
jge
adc
sub
mov
mov
repnz
mov
dec
jg
outsb
cmp
push
pop
imull
xor
loop
xor
pushf
cmp
js
inc
arpl
dec
xchg
lret
add
fsubl
mov
xor
jb
sub
popa
hlt
aad
enter
push
pop
aad
and
push
addr16
gs
sub
nop
fmulp
add
adc
or
shlb
mov
pop
cli
jge
xchg
pop
faddl
das
fistps
in
into
into
jle
movsl
push
pop
add
or
jmp
adcb
scas
jno
mov
sahf
call
nopl
fdivs
cwtl
sbb
in
mov
lods
testb
push
push
mov
push
enter
mov
loopne
data16
or
mov
and
xchg
or
fnstsw
and
mov
add
pop
pop
jp
xchg
ja
xchg
mov
add
dec
xchg
lret
pop
mov
hlt
cmp
or
mov
add
or
pop
scas
xor
and
and
push
scas
cmp
sbb
fdivrs
inc
xchg
leave
fcmovbe
lods
cmp
pushf
push
and
inc
jl
lret
imul
in
lods
imul
daa
daa
sbb
pop
adc
rorl
in
arpl
aad
xchg
push
ret
mov
gs
out
or
fcmovnbe
add
scas
and
popa
mov
popa
mov
xchg
dec
popf
inc
clc
clc
mov
fnsave
fmuls
lea
cmp
mov
cmpsb
xlat
int
adc
xchg
sbb
cwtl
inc
dec
mov
clc
push
insl
in
sbb
and
xor
jl
jle
in
jecxz
ror
cld
or
popa
mov
mov
sbb
addr16
pop
bound
mov
xorl
add
popf
adc
data16
js
push
xchg
out
movsb
dec
loop
mov
ja
mov
cmp
div
dec
das
xchg
mov
xchg
test
outsl
stos
stos
push
stc
jae
aas
loopne,pn
jge
jo
cwtl
push
loopne
daa
fmuls
cltd
imul
mov
inc
test
scas
stos
nop
lock
loop
dec
clc
rorl
shr
jmp
movsb
push
aam
popa
fldl
clc
clc
dec
jno
rclb
adc
nop
push
jb
jg
jo
js
scas
xchg
xchg
push
add
mov
sbb
mov
lret
andb
sbb
and
popf
mov
std
gs
add
inc
cltd
std
push
xor
mov
lret
jb
sti
insb
testl
in
popa
push
add
and
push
sti
jno
faddp
fldenv
out
dec
push
aad
sbb
mov
cmp
std
in
jle
movsb
sti
push
clc
pop
je
lock
jb
aad
push
pop
lret
xor
inc
test
movsb
outsb
push
push
imulb
dec
mov
sub
add
test
ds
in
cli
loope
stc
movsl
and
aaa
cvtpi2ps
pop
push
fdivl
bound
adc
daa
scas
jle
je
rol
jne
inc
dec
scas
push
lret
in
jns
xchg
push
repz
cmp
jge
xchg
dec
pop
jns
mov
xlat
cmp
push
jecxz
push
pmulhuw
int
addr16
mov
cmp
add
stc
pop
mov
or
jmp
push
aad
mov
daa
ja
mov
loopne
in
pusha
push
andl
cmpsl
inc
inc
xor
jbe
aad
pusha
lods
mov
iret
loopne
xchg
mov
xor
xor
mov
xor
mov
lcall
or
or
outsl
adc
lahf
dec
sub
ret
xchg
cmp
cs
aaa
andb
jnp
fs
call
loopne
scas
push
mov
push
scas
cmp
add
cmp
es
insb
aad
out
adc
push
sbb
dec
popf
adc
adc
pop
test
lahf
dec
ss
pop
sbb
in
lret
out
xlat
mov
inc
insl
mov
cmp
call
inc
fisubrs
cmc
xchg
das
jge
jl
sbb
pop
enter
stos
or
shlb
pop
jb
addr16
pop
jle
adc
dec
les
and
sub
xchg
test
pop
aas
fs
test
inc
fsubl
ror
lcall
adc
out
inc
push
in
push
cmpsl
sub
jecxz
jg
sub
jns
mov
xchg
pop
enter
jl
insl
cmpsb
cmp
mov
rolb
pop
xchg
insl
push
mov
inc
jne
jb
aaa
loop
cmpsb
fucom
out
lcall
sbb
stos
pop
push
int
fwait
jecxz
pop
testb
push
jecxz
mov
mov
xchg
out
icebp
shl
icebp
js
xchg
sub
mov
rclb
cld
lods
or
cmp
out
mov
push
mov
shrb
xchg
clc
mov
insl
loopne
lcall
les
jge
and
call
mov
lret
xchg
fistl
dec
pop
pop
and
jmp
in
ret
pop
arpl
inc
or
jo
mov
cmp
cmpsb
pop
fcomip
imul
push
incb
shll
mov
inc
ja
pop
adc
pop
mov
iret
or
pop
push
adc
lods
mov
ljmp
ljmp
sub
xchg
bound
inc
popf
jno
sarl
fcomi
xor
xor
mov
mov
insb
aam
hlt
xor
shrl
cmp
xlat
stc
mov
add
fcoms
sbb
and
cltd
jno
daa
sub
jnp
js
sbb
js
jbe
xchg
lahf
xchg
adc
or
fcomi
out
fidivrs
das
add
aad
mov
fsubp
je
ljmp
lret
dec
mov
dec
cmp
call
xor
lret
add
cld
mov
out
inc
repz
cltd
std
xchg
fadds
fdivs
cld
cmpsl
outsl
cmpsb
ret
cmpsl
fdiv
es
out
popa
pop
and
mov
xlat
pop
jo
popf
jnp
or
pop
cmp
add
or
popf
enter
in
sbb
insb
xchg
xor
inc
test
ficoms
in
aad
ds
out
jmp
aas
xchg
jmp
pusha
jmp
in
cmpsb
cmp
sub
pop
add
cmp
lret
jno
or
roll
dec
flds
xor
negl
repz
aad
pop
xor
test
clc
fnstsw
cld
in
aas
sbb
xor
ret
jno
daa
mov
insl
shl
fistps
or
xchg
and
jge
sarl
movsb
in
icebp
out
pop
stos
mov
dec
pusha
cmp
es
push
lea
pop
or
sti
bnd
rorl
ljmp
in
sbb
mov
or
lds
cmp
cmp
dec
push
popf
lds
and
cmp
mov
add
mov
and
sub
push
decb
aas
mov
out
pextrw
sub
xchg
ss
jmp
mov
adc
int
sbb
negl
incb
mov
add
and
mov
push
push
aaa
xor
ljmp
imul
cli
stos
mov
std
mov
divl
lods
mov
jl
addr16
pop
push
mov
imul
add
sarl
jl
daa
popa
into
mov
or
test
lea
hlt
arpl
inc
ret
jno
mov
int
cmp
inc
cmp
inc
ret
and
xchg
stos
mov
xor
lret
dec
push
xor
mov
aas
shr
icebp
movsb
out
fisttpl
sub
test
push
in
mov
movsl
jecxz
insl
dec
fistps
sarl
dec
jb
imul
or
mov
pop
enter
xor
xlat
and
sub
outsb
xlat
push
mov
fadd
stos
mov
cwtl
shlb
ftst
fists
les
test
push
out
xchg
and
adc
iretw
sbb
pop
push
jmp
push
xor
popa
imul
jmp
sbb
and
xorl
xchg
sbb
adc
aad
daa
push
add
inc
or
pop
pop
ret
jmp
dec
mov
cmp
shlb
or
dec
push
scas
adc
jno
leave
lahf
adc
lea
fadds
jno
jb
rcrl
outsl
sub
lss
int
or
pop
pop
mov
sbb
mov
mov
push
xchg
xchg
mov
dec
imul
jmp
push
mov
repz
push
cmp
rol
lret
mov
xchg
mov
pop
mov
fbstp
mov
out
inc
imul
rcl
mov
pop
adc
lds
push
mov
pop
js
or
out
aad
imul
popf
pop
mov
jo
cmpsb
push
shlb
fldt
scas
xchg
inc
cmp
lahf
lods
insb
fsubr
adc
pushf
scas
push
xchg
jbe
sbb
mov
sub
aad
inc
cmp
sbb
insl
adc
and
or
dec
mov
imul
out
jle
jne
into
jne
dec
add
push
movsb
pushf
jg
loope
push
test
cmp
out
clc
movsb
mov
push
bound
loopne
test
jbe
and
es
and
jmp
sub
jl
jg
sbb
pop
ja
pop
or
sysret
sub
gs
ss
and
pop
ficompl
insl
add
jg
xchg
mov
pop
and
inc
sub
fstl
push
mov
push
pop
hlt
lahf
leave
aas
dec
in
icebp
lock
xchg
lcall
ja
xchg
push
inc
jl
push
adc
out
hlt
sbb
xchg
jb
aas
ret
lret
loop
inc
cmpsb
ljmp
lods
jg
jbe
mov
mov
push
xchg
add
mov
jns
cld
add
push
xor
add
add
sub
pop
mov
pop
sbb
add
dec
lds
push
cs
rcll
popa
insb
push
cld
inc
icebp
ds
mov
jae
or
cli
rcll
dec
scas
pop
leave
cmc
sub
mov
jns
pop
mov
repz
test
rcl
xchg
dec
es
adc
pusha
lret
hlt
hlt
fidivl
test
loopne
ficoms
adc
inc
or
cmp
imul
cmp
lea
data16
insb
inc
mov
jo
jb
mov
test
popf
cli
add
jbe
xchg
sarb
loopne
imul
in
out
mov
fiaddl
mov
mov
mov
daa
sub
sbb
lds
adc
das
and
mov
rclb
mov
decl
iret
mov
cmp
imul
sti
cli
in
sbb
and
mov
xor
hlt
lock
dec
pop
sbb
mov
imul
xor
pop
adc
incl
mov
and
in
mov
scas
pop
lods
and
xor
mov
lods
pop
push
stos
xchg
push
pushf
push
inc
mov
scas
outsb
insb
outsb
jecxz
rol
data16
mov
dec
jnp
jg
lea
sbb
call
loop
mov
je
push
decb
fsubrp
lahf
fs
repz
rcrl
lea
mov
add
and
mov
test
or
mov
cltd
stos
ja
mov
and
test
cmp
inc
lret
sarl
xor
xchg
cmc
push
mov
inc
jnp
ljmp
cmc
inc
pop
xor
fcompl
or
std
fisubrs
xchg
mov
or
jnp
in
jecxz
xchg
out
stos
push
xchg
sub
push
lds
into
sub
inc
dec
loope
sarl
or
popa
inc
nop
and
aad
sub
ljmp
add
or
arpl
xchg
cmp
mov
cwtl
stos
int3
push
repnz
push
sbb
xchg
dec
or
cmp
or
rorb
or
push
mov
ljmp
out
pop
ss
mov
inc
insb
jb
mov
sahf
scas
je
or
ljmp
and
cmpsb
fstl
sbb
inc
mov
xor
je
pop
scas
mov
bnd
les
mov
sub
jmp
popa
fistpll
jmp
test
add
xor
in
lret
leave
lcall
xchg
jg
stc
das
test
fists
in
push
in
or
or
xchg
std
mov
xor
pop
js
loopne
push
bound
int3
cmpsb
xor
mov
pop
mov
jae
jle
adc
xlat
inc
mov
clc
mov
jg
nop
adc
inc
ret
int
fnop
lret
xchg
lret
movups
lds
sub
pusha
lods
imul
divl
into
lods
and
movsl
mov
aam
jno
mov
cltd
pop
pushf
dec
pusha
mov
cmpsb
int3
pop
adc
scas
push
loopne
mov
pushf
add
pop
inc
push
sti
mov
mov
jo
test
dec
add
mov
add
jo
jo
or
sub
or
in
pop
sub
mov
mov
cmpsl
pop
mov
sbb
aad
out
into
sub
scas
pushf
xchg
cmp
cli
mov
loop
jp
hlt
xor
test
push
aad
fistps
add
jg
cmc
lds
invd
in
popa
ret
inc
outsb
test
data16
pop
lret
pop
adc
dec
scas
xor
lock
bound
jmp
lret
pop
cmpl
add
gs
sbb
fsubs
call
cltd
leave
pop
fbld
dec
xchg
push
jle
sub
out
jmp
jg
ljmp
insb
cld
int3
xorl
clc
sahf
repnz
jnp
pop
fwait
xchg
jle
out
scas
sub
jae
inc
test
mov
mov
xadd
data16
sti
std
fwait
into
insl
cmp
adc
aam
and
jmp
xchg
cmp
ret
jge
shlb
xor
fdiv
xchg
mov
loopne
ja
in
xchg
cli
out
add
pop
jne
enter
aad
mov
fcomps
mov
and
mov
stc
push
adc
in
push
inc
adc
dec
bound
push
popa
iret
push
adc
or
lret
dec
orl
lea
inc
adc
sub
sahf
push
aas
lgs
and
stos
ret
or
cmp
data16
subb
dec
sub
mov
insb
out
inc
cmp
sbb
loopne
sub
andl
inc
ret
scas
dec
setp
jecxz
dec
lahf
mov
adc
nop
imul
js
inc
jbe
int3
inc
out
sbb
adc
mov
dec
xor
xor
mull
pop
add
jb
sbb
pop
xchg
xor
enter
mov
scas
sahf
lods
test
lahf
pop
jbe
pop
mov
add
cmp
daa
adc
xor
inc
mov
movaps
imul
inc
xor
xchg
arpl
and
cmpsl
add
fisttps
in
loope
jmp
lret
or
cmp
or
cld
or
mov
pop
or
pop
loopne
cmp
xor
sub
dec
movsl
fisubrs
lds
mulb
std
stos
ja
clc
mov
push
xchg
push
outsl
ja
mov
incl
jae
jmp
cmp
adc
jp
push
std
int3
insb
test
ljmp
stc
cmpsl
aad
xchg
and
mov
fcoml
pusha
in
mov
insb
or
repz
dec
sbb
push
xchg
lods
addl
sub
cmpsb
mov
lock
stos
and
popa
fwait
into
push
mov
lcall
mov
mov
negl
mov
add
arpl
fxam
in
scas
sub
push
pop
cmp
je
test
sbbb
push
in
add
sub
pushf
scas
jl
loope
pop
jns
dec
cmpb
sub
ret
mov
nop
xor
xchg
mov
lahf
jns
outsl
or
lods
sub
xor
lock
in
mov
push
mov
pop
incb
add
pop
ja
pop
jns
std
jnp
xchg
loop
inc
xor
loop
mov
icebp
pop
insl
repz
inc
jns
push
outsl
test
and
push
push
sbb
xchg
pop
cmpsb
mov
out
rolb
lret
int3
sbb
xchg
lcall
push
jge
aam
sub
adc
mov
mov
or
iret
adc
or
cmp
mov
scas
imul
cmp
inc
inc
inc
adc
or
setbe
jns
loope
cmp
cld
fs
jbe
popa
mov
push
mov
adc
cmp
leave
mov
cmp
xchg
or
mov
mov
jo
mov
test
fs
popf
push
cltd
insb
stos
call
insb
lods
adc
push
bound
dec
imul
sbb
aad
sbb
cmp
pop
iret
jnp
pop
imul
jge
arpl
int
ret
cmp
push
xchg
cmp
jnp
jb
pop
and
lret
aas
adc
jmp
push
lcall
push
xor
fimuls
sub
inc
jge
mov
ror
dec
insl
enter
mov
sub
je
hlt
add
push
sub
es
ret
sbb
add
aad
in
mov
lods
mov
out
or
or
or
lods
inc
xor
jne
dec
pushf
xor
lods
aad
std
cwtl
xchg
mov
add
shrb
inc
push
test
std
or
xchg
dec
adc
aas
mov
cli
jnp
cltd
xchg
cmpsb
mov
pop
sarl
lods
in
xchg
int3
cmp
scas
je
xor
jne
fldcw
push
loope
inc
call
cmp
mov
movsb
jmp
pop
idivb
in
femms
pop
mov
push
das
lds
mov
push
into
nop
cmp
mov
mov
jbe
insl
cltd
call
adc
ret
test
cli
jecxz
push
fcomi
out
pop
ret
ljmp
xor
sbb
jle
cld
inc
mov
push
add
jne
pop
fdivs
data16
adc
pop
cwtl
orb
mov
lcall
subl
dec
jne
push
push
orps
jle
inc
iret
lret
inc
cmp
and
shrb
xchg
hlt
cmp
sahf
nop
negb
not
jle
or
and
xchg
jnp
mov
daa
push
inc
in
stos
mov
dec
into
flds
ss
lds
or
and
fiaddl
and
stos
fs
and
add
adc
lock
inc
inc
and
push
mov
or
xchg
mov
push
lret
xlat
sbb
out
sbb
enter
xor
xchg
lea
push
mov
adc
lods
stos
data16
mov
jns
xchg
orb
pushl
pop
mulb
jb
scas
in
push
loopne
add
outsl
xlat
dec
mov
scas
mov
fdivl
sub
mov
out
movsl
fcmovb
aad
stc
ds
call
mov
or
subl
xchg
ret
das
dec
notl
inc
std
ud0
pextrw
push
cmp
cwtl
arpl
inc
and
fiadds
pushf
inc
inc
xchg
stos
xor
xchg
cmc
mov
imul
dec
and
fists
inc
arpl
jno
test
into
es
sub
ljmp
out
mov
pop
mov
add
or
scas
cmpsb
xchg
mov
add
daa
xlat
insl
xchg
imul
push
mov
mov
or
in
outsl
xor
jo
or
outsl
or
inc
and
sbb
and
hlt
xorps
mov
mov
popa
bound
push
js
test
dec
dec
lret
mov
ss
sub
mov
scas
sbb
and
mov
lcall
jecxz
shrb
mov
mov
pusha
sub
xor
stc
push
arpl
call
repz
adc
xor
push
adcl
add
sbb
mov
test
mov
ja
mov
lock
js
push
cmp
pop
mov
push
inc
xchg
xchg
adc
cmp
add
ret
mov
xor
push
fdivr
dec
imulb
inc
pushf
mov
push
fildll
rolb
addb
and
stos
dec
dec
pop
je
stc
test
mull
shl
or
push
lret
cmp
lods
cwtl
gs
dec
push
xor
imul
cmp
popa
inc
push
jmp
cltd
mov
and
je
inc
sub
mov
ficompl
mov
cmp
jbe
icebp
popf
notl
lds
inc
fs
test
cmc
mov
decb
jnp
shrb
mov
lods
lea
xlat
lcall
hlt
xchg
rol
mov
call
cmpsb
fucomi
xchg
and
pop
les
subl
loop
cmp
aas
test
xchg
push
xor
pusha
mov
sbb
cmc
jns
movsb
cmpsl
pop
shrl
aas
xor
dec
je
loop
push
inc
lods
pop
das
jbe
aam
cmc
enter
fstpl
out
and
push
jbe
test
aam
lcall
xchg
jae
mov
adc
mov
shlb
and
xchg
decb
fiadds
lds
fisubrs
add
xchg
mov
push
sbb
aaa
add
lods
pop
or
xor
pop
clc
push
add
smsw
loopne
lret
stos
scas
mov
shl
pop
xchg
xchg
test
loop
leave
sub
dec
mov
iret
mov
shl
mov
jo
mov
xchg
inc
test
push
in
sub
adc
cltd
xchg
dec
push
cmp
xor
int
int
mov
popf
sbb
lret
sbb
sbb
loopne
in
mov
sub
pop
inc
jmp
adc
mov
adc
xchg
xor
sub
fldln2
pop
addb
dec
cs
pusha
jnp
insb
movsb
pop
add
cmp
push
mov
push
push
aam
pop
icebp
popf
mov
ljmp
cwtl
test
mov
hlt
loopne
push
scas
mov
addps
fiaddl
int
popf
pushf
les
cmp
ljmp
mov
ret
lcall
push
jo
loopne
mov
loop
nop
in
cs
xor
cld
dec
outsb
daa
sahf
jge
pusha
cmp
fists
or
popf
out
arpl
pop
ret
xchg
cmpsl
or
cmpsb
pop
sub
cmp
cld
pop
and
dec
lahf
dec
cli
rcll
xchg
movsb
pusha
jb
addl
pop
xchg
ja
sbb
and
loope
cmpsl
mov
aam
push
das
loop
stos
pushf
or
aad
mov
in
push
and
push
xchg
add
sarl
scas
pop
rclb
cld
loope
xchg
mov
push
pop
mov
fdivr
pop
lret
sbb
inc
adc
ds
mov
push
pushl
cmpsl
sub
mov
ffreep
mov
mov
lock
mov
pop
arpl
adc
addb
test
sub
inc
pop
dec
loopne
xchg
stc
jns
ljmp
push
dec
out
cs
ja
scas
sbb
mov
out
int3
mov
loopne
jp
sub
mov
cmp
lock
xor
fistps
andl
shlb
push
mov
xchg
mov
jne
out
cmp
dec
push
fnstcw
cmpsl
ficoms
shll
cmp
cmpsb
add
sub
repz
cs
das
pop
lds
add
in
mov
ljmp
inc
icebp
mov
xor
bnd
popa
mov
sbb
pop
movsl
push
fldl
sbb
jg
push
cmp
loope
fmul
add
iret
and
call
pusha
dec
mov
sub
push
enter
add
add
lcall
and
leave
movsl
out
call
shll
push
sbb
imul
mov
mov
cs
mov
fnstenv
lret
xor
lods
add
mov
imul
int3
xchg
out
push
sbbb
es
cmc
push
jne
fwait
xor
push
jno
sarl
dec
fisttpl
icebp
jge
or
mov
flds
sbb
pop
shll
sbb
or
or
mov
inc
lods
jno
loop
jo
outsb
xchg
mov
xor
cli
pop
push
insb
inc
js
sub
dec
jmp
data16
lea
stos
sub
fnstsw
sub
cmpsl
rcrl
or
adc
add
inc
and
cmpsl
dec
lea
cld
cmp
push
adc
sahf
xchg
jb
mov
add
call
mov
push
imul
test
ljmp
inc
lods
fbstp
mov
popa
dec
push
loop
out
cli
loope
mov
mov
xchg
mov
sbb
test
jns
inc
scas
shl
mov
fwait
ret
mov
pop
enter
xor
pop
lods
fidivrs
xor
mov
xchg
sub
or
mov
adc
aam
jae
xchg
lahf
or
pop
jae
cmp
xor
push
outsl
add
cld
xorb
dec
imulb
idivb
jge
push
fists
pop
lock
mov
and
imul
fidivrl
lods
lods
push
push
jne
das
pop
popa
mov
pop
rcrb
fisttps
inc
aaa
movl
sub
and
xchg
mov
aas
popf
jmp
pop
outsb
cmp
lahf
dec
dec
scas
lea
fs
sub
scas
and
or
mov
clc
pop
xchg
aad
out
push
data16
outsb
pop
out
imul
repnz
inc
movsb
faddl
les
xor
test
or
xchg
addr16
and
xor
push
dec
insl
push
mov
jo
stc
cs
jmp
mov
lret
fisttpll
ret
xlat
fwait
dec
or
dec
test
xor
jo
cmpsl
add
fisubl
stos
and
fisubrl
adc
in
fsubr
xor
jae
je
imul
cmp
cmc
mov
push
scas
aad
sahf
jae
mov
mov
inc
inc
rcll
cmp
test
aaa
je
shrl
mov
mov
fcompl
ja
inc
mov
je
in
les
xchg
add
clc
lock
orl
lock
mov
aad
xchg
stc
cmp
cmpsl
add
push
sub
inc
fst
bound
and
lock
push
pushf
xchg
arpl
mov
daa
sbb
je
outsl
mov
iret
inc
add
aas
in
clc
clc
xlat
sub
or
in
push
inc
outsl
hlt
imull
ss
lret
movsb
out
aam
mov
loop
dec
mov
adc
adc
jbe
mov
icebp
cmp
pop
in
decb
adc
xchg
shr
test
push
rcrl
jae
push
pop
mov
imul
fcomps
movb
inc
lods
mov
outsl
pop
mov
repnz
int3
imul
ss
and
cmp
adc
fwait
enter
je
fdivl
icebp
or
xorl
push
mov
dec
sbb
cmp
pop
mov
mov
or
ret
stos
out
lcall
dec
scas
sub
aam
in
testb
aaa
mov
mov
cmp
dec
lock
fsubrs
iret
cwtl
ret
jo
faddl
outsb
incl
adc
fdivl
addr16
sbb
xor
cmp
push
repnz
pop
fwait
cmp
mov
pop
lock
call
lret
dec
mov
mov
inc
sub
call
jle
sub
push
fists
test
cmp
xor
test
mov
xorl
pop
daa
scas
jne
add
jno
icebp
aaa
cmp
insb
push
rcrb
out
rcll
pushf
push
push
dec
nop
xchg
cmc
shll
or
lret
cmp
fucomp
xchg
iret
jns
mov
lahf
xor
inc
lock
xor
push
mov
and
jo
push
icebp
inc
inc
rclb
jne
dec
fcomps
fdivrs
stos
xor
mov
lcall
enter
jae
mov
cmc
sbb
xchg
jecxz
lcall
and
into
adc
gs
mov
dec
cmpsl
das
lods
xor
cltd
pop
mov
in
das
les
adc
inc
rolb
mov
out
pusha
mov
mov
cmp
dec
sbb
int
and
mov
sub
sbb
leave
ja
sbb
mov
jmp
xor
and
test
cmp
shll
scas
aas
jno
or
addb
push
sub
lcall
jge
add
pop
push
hlt
aaa
dec
sar
dec
xor
fdivrs
les
les
xchg
mov
or
hlt
xchg
jge
icebp
nop
or
cli
and
cmp
mov
or
int3
jae
neg
jo
mov
mov
push
adc
sahf
mov
icebp
sub
les
shlb
jns
or
jmp
jl
push
sbb
and
xchg
mov
dec
adcb
imul
sbb
repz
xchg
insl
push
mov
ficoml
push
mov
pop
fcmovnb
sbb
test
cmp
adc
xchg
mov
push
in
xchg
iret
lahf
leave
or
out
fbld
out
jle
jns
filds
lret
ja
dec
xchg
pop
fiaddl
insl
mov
pop
cmp
cmp
repz
mov
pop
push
add
inc
out
nop
fidivrs
add
jbe
jp
jbe
add
lret
cltd
adc
or
and
fisubl
sub
xchg
hlt
out
fcoms
xchg
push
lods
imul
lods
xlat
popf
in
push
cs
add
add
mov
or
out
xor
das
jp
sub
xlat
sbb
dec
adc
and
inc
mov
scas
dec
mov
lcall
cli
fwait
xchg
jnp
lret
push
inc
pop
push
cmp
jbe
or
aad
push
add
mov
sahf
mov
or
test
mov
mov
push
push
mov
cmpsl
push
jb
add
inc
dec
ret
fst
adc
pop
add
add
sbbl
ret
dec
rolb
imul
sub
push
jno
sbb
sbb
pop
fnsave
push
fildll
adc
out
and
mov
es
adc
cmp
cmp
adc
add
jl
lret
fadds
mov
xor
gs
pusha
pop
in
int3
call
push
stos
daa
jle
out
pushf
adc
inc
jle
mov
and
sub
sbb
lcall
stc
jno
and
or
arpl
idivb
push
in
cld
push
js
and
ljmp
mov
shrb
mov
inc
or
push
pop
bnd
sbb
scas
mov
hlt
jnp
in
pop
add
out
xchg
add
sbb
icebp
in
sbb
cmp
iret
pop
cli
dec
out
jns
mov
inc
lock
push
ja
cs
mov
xchg
jg
ja
sub
out
out
cmpsb
inc
cwtl
loop
cmpsl
push
mov
push
cmp
repnz
divb
movsl
adc
jno
popf
orb
pop
xor
inc
mov
jmp
ljmp
insb
xlat
cmp
cmp
inc
ljmp
xlat
addr16
pushf
mov
mov
mov
mov
sub
andb
scas
cwtl
jecxz
mov
cmp
mov
andb
sub
iret
aaa
cmp
adc
mov
jns
push
xchg
mov
sub
jle
icebp
mov
mov
mulb
pop
and
cmp
lods
cmp
test
add
mov
xor
xchg
adc
xor
add
jno
mov
mov
dec
mov
push
mov
dec
in
cli
cmp
mov
sub
xor
sub
and
mull
jecxz
orb
mov
test
pop
stos
add
cli
xchg
mov
int
and
daa
gs
mov
push
popf
or
bound
out
outsb
xchg
out
je
clc
jo
decb
mov
adc
imul
mov
jnp
xchg
push
xchg
jle
cmc
adc
shrb
stos
sub
and
flds
mov
jmp
mov
pop
lret
sbbb
mov
mov
dec
mov
arpl
dec
xor
mov
mov
sbb
mov
call
rcl
bound
mov
mov
sbb
jg
cmc
test
xor
lds
loop
pop
mov
add
pop
xchg
test
xchg
cmp
cli
cmp
mov
mov
cmpsl
stc
cmp
pop
add
xchg
and
jmp
cmc
es
icebp
int3
dec
cmp
subl
inc
xor
inc
lahf
cmpsl
pushf
fiadds
out
pop
sbb
push
aam
lea
jp
das
sbb
sti
xlat
push
inc
les
in
dec
jns
call
loop
out
in
or
in
movsb
dec
xchg
dec
subl
mov
int
xchg
stos
popa
mov
xchg
fistpl
sar
lahf
sub
aad
cs
inc
pop
inc
jnp
jnp
xchg
aas
in
imul
push
or
shll
cld
sahf
lea
dec
lods
out
sub
mov
out
mov
sbb
dec
hlt
imul
subl
mov
push
insl
jmp
lock
flds
add
inc
sbb
xchg
test
dec
cli
popf
inc
dec
xchg
mov
call
mov
stos
pop
cmp
ss
and
push
int3
jp
mov
inc
es
js
mov
call
pop
push
push
mov
fcmovnu
jbe
imul
insl
mov
cs
mov
popf
cmp
cltd
add
ss
int3
call
jecxz
scas
lds
add
addb
aaa
popf
mov
dec
adc
lcall
inc
mov
pop
pop
mov
xchg
subl
jmp
cmp
xchg
insb
jo
aam
test
lahf
mov
pop
int
popa
push
jne
test
mov
icebp
ret
add
in
mov
inc
cmp
push
fimuls
subl
pop
es
clc
jle
adcl
stos
sub
fadd
int3
jns
dec
test
std
sbb
pop
imul
nop
clc
lret
lcall
mov
push
xor
imul
nop
pusha
cmp
cwtl
mov
sar
popa
or
ret
add
iret
out
orb
inc
stc
cmpsl
xor
das
jl
pop
scas
mov
aad
out
jecxz
daa
add
sub
inc
mov
pop
outsb
and
in
setl
lret
pushf
or
dec
fistl
or
bound
jle
inc
int3
jmp
add
mov
inc
jb
ss
mov
jns
mov
push
mov
fs
pop
xor
cltd
in
out
xor
jp
sub
addr16
std
std
add
ret
cmp
popa
dec
std
jo
mov
sub
xor
inc
xor
xchg
add
test
cs
lods
mov
aam
je
negb
imul
imul
inc
mov
adc
popf
cmp
das
xlat
adc
fldt
je
stos
stos
pop
das
rolb
lds
add
jmp
jmp
mov
or
ja
mov
or
ja
addl
divb
cmpsl
mov
mov
jp
mov
add
cmp
mov
ljmp
icebp
loopne
pop
insl
jecxz
adc
in
jmp
dec
cmpsb
int3
sbb
mov
ljmp
dec
mov
xchg
fst
aad
fwait
mov
pop
int3
popf
and
sbb
in
mov
cmp
lock
mov
sti
mov
adc
push
fmull
mov
mov
jae
cmp
icebp
arpl
pop
jno
aaa
xlat
dec
add
xor
sbb
and
jecxz
dec
or
int3
pop
sub
loopne
pop
addb
in
pop
test
popf
sbb
cltd
mov
cs
add
xor
cpuid
add
shr
lea
dec
and
dec
push
jnp
adc
push
adc
add
xchg
dec
mov
cli
push
lods
gs
into
call
xchg
inc
imul
in
test
shrl
hlt
test
or
adc
jp
je
jecxz
ljmp
or
jge
loop
cltd
or
mov
jbe
cs
out
sub
out
cmp
das
shl
scas
stc
dec
cmpsb
ljmp
cli
imulb
test
lret
pop
out
mov
movsl
clc
xor
jb
cld
insl
fnstcw
aam
push
loope
aas
je
scas
xor
sub
xchg
mov
xor
sbb
mov
sbb
add
pusha
fsubs
mov
cmpsb
pop
jg
je
and
fstps
dec
scas
jp
outsb
in
dec
push
mov
sub
jo
mov
add
sar
inc
rcr
xchg
jle
sub
sahf
repz
adcb
lret
ret
data16
pop
pop
fidivrs
sbb
inc
dec
movl
fsubrl
das
sub
setbe
enter
mov
xchg
mov
int3
mov
add
push
in
in
enter
jae
sbbb
xchg
mov
and
fwait
mov
std
fiadds
mov
gs
hlt
sti
dec
xchg
add
stos
pop
dec
adc
in
push
aaa
cmp
mov
pusha
es
addl
shll
adc
lds
xchg
imul
imul
add
popf
orl
mov
stc
mov
cmp
pop
cmp
sub
js
sbb
shlb
insb
jg
dec
jge
fnstsw
push
push
imul
push
pop
leave
inc
dec
xchg
jbe
mov
nop
mov
push
jge
sub
das
adc
push
jbe
mov
mov
ljmp
mov
jg
clc
in
and
and
mov
push
data16
aas
adc
mov
outsb
dec
push
jnp
ds
call
pop
fnstenv
jno
pushf
sbb
mov
push
adc
xchg
jno
jae
iret
xchg
xor
fcompl
add
and
test
andl
repz
cmpb
adc
hlt
pusha
jg
stc
xchg
jmp
xlat
mov
xchg
inc
or
inc
xchg
in
aas
test
in
push
add
lods
insl
sub
jb
adc
sti
xor
cmpsb
push
pop
sub
sub
clc
ss
cmpsb
cmp
sbb
or
jnp
push
mov
mov
stos
push
lock
xchg
sbb
jl
push
inc
jecxz
or
addl
sub
loopne
movsb
aam
dec
push
mov
iret
inc
int3
icebp
cmp
pop
out
popa
dec
sub
cs
xor
dec
pop
or
fadds
mov
and
dec
pop
and
aad
cmp
stos
jmp
jo
ret
cmp
push
inc
cmp
and
imul
adc
adc
dec
pop
rcrl
adcb
aad
js
xchg
in
mov
add
shlb
jp
bound
mov
lret
xor
ret
inc
cmp
adc
or
lods
or
xor
dec
and
push
repnz
loope
test
xlat
pop
iret
xor
ss
lods
loop
lock
fbld
add
jl
add
and
mov
jl
loopne
adc
sub
pop
add
push
dec
adc
ss
mov
sub
sbb
dec
insb
push
push
js
adc
xor
cmp
fwait
les
fsts
or
or
xor
jmp
out
and
mov
mov
push
push
cs
sub
fisttpl
mov
add
inc
jo
push
lds
negb
xchg
and
stos
out
inc
jle
repnz
sbb
xchg
addr16
sub
shrl
push
cmpsl
add
and
call
dec
xor
mov
xchg
nop
xchg
into
xor
inc
cmpsl
sbb
dec
movsl
pusha
pop
and
inc
pop
and
das
out
iret
mov
insl
xor
je
test
cmp
fsubrp
mov
scas
inc
sbb
cltd
and
sub
xchg
lds
inc
xor
dec
gs
pop
sub
stc
sti
push
adc
xor
mov
std
push
int3
fsub
jnp
rcl
mov
in
xorb
pop
sub
in
push
push
lret
push
jecxz
popa
lret
mov
mov
xchg
mov
or
add
mov
or
sub
xor
jb
mov
test
sbb
lods
sub
or
jmp
push
adc
fdivp
lret
test
push
stos
scas
sub
mov
cli
and
adc
adc
data16
out
jp
cmpsb
leave
cmpsb
mov
push
adc
cld
cmp
lods
jmp
les
in
nop
xlat
scas
shll
std
sahf
xor
xchg
mov
out
in
aad
and
and
dec
movsb
or
or
and
pop
dec
fcomps
pop
or
mov
sub
cwtl
xor
sarl
xor
push
es
add
mov
aas
xchg
repz
inc
pop
or
cs
xlat
xchg
bound
dec
cmp
mov
loop
mov
push
cwtl
imulb
lret
or
scas
dec
out
dec
ja
mov
arpl
add
adc
shrl
stc
andb
cmc
dec
rcrb
jbe
xor
call
mov
pushf
loop
mov
repz
movsb
inc
out
in
mov
mov
adc
into
in
adc
lret
in
cld
stos
add
mov
mov
adc
dec
imul
mov
std
xchg
shlb
mov
mov
test
js
fnstenv
aam
add
push
pop
sub
push
mov
lret
stos
push
je
mov
dec
mov
popf
data16
mov
mov
repnz
xorb
arpl
xor
pop
comiss
and
out
bound
test
dec
jmp
pusha
sti
inc
movsl
nop
lret
and
adc
pop
inc
sahf
adc
and
mov
ds
mov
daa
inc
mov
jbe
and
es
test
jg
xchg
adc
ljmp
jecxz
jno
or
pcmpgtd
adc
mov
enter
in
push
mov
lods
pop
mov
mov
mov
stos
sbbb
cld
mov
sub
test
int3
xchg
pop
mov
out
push
xchg
xor
mov
das
jl
dec
or
daa
adcb
cmp
pop
push
inc
push
adc
int
jg
mov
or
fisubrl
jmp
dec
scas
push
test
sub
jne
cmc
push
test
dec
or
pop
and
mull
xchg
jmp
inc
dec
fcmove
sbb
pop
cmp
push
mov
inc
and
add
adc
lods
and
pop
fs
out
in
mov
xor
cmpl
mov
loopne
ret
mov
inc
pop
push
push
push
outsb
pushf
xchg
cwtl
sete
cmp
testb
pop
aam
xor
mov
jecxz
loopne
stos
mov
aaa
push
pop
push
push
mov
push
jbe
cmc
pop
inc
mov
adc
or
jnp,pn
lods
mov
test
fwait
std
sbb
sbb
pop
xor
ret
xchg
add
or
adc
negl
mov
dec
shll
jge
xlat
sub
dec
mov
mov
lea
jnp
int3
test
adc
arpl
mov
sbb
and
mulps
add
std
xor
stos
mov
insl
sub
or
pop
aaa
xor
cmp
push
adc
push
repz
movb
roll
in
or
dec
mov
push
mov
out
push
insb
das
xor
inc
dec
add
sahf
mov
jne
lret
jp
cli
outsl
in
mov
daa
jnp
jnp
dec
imull
jmp
mov
fimull
sbb
push
test
sbbb
jge
enter
aam
call
stos
repnz
ficompl
popa
inc
sub
popf
outsb
in
xor
aam
jp
push
jecxz
adc
add
insl
adc
sbb
mov
lods
insb
shll
fsubrs
or
push
imul
mov
inc
pop
cltd
inc
clc
mov
pop
dec
aaa
push
repnz
out
cltd
cwtl
hlt
xor
push
cmpsb
hlt
leave
icebp
jo
in
mov
in
mov
jo
sub
dec
scas
popl
pop
call
jl
mov
mov
out
mov
sub
into
push
addr16
mov
dec
mov
rol
ffreep
pusha
xchg
sti
fdivs
test
add
pop
pop
int
shl
dec
mov
and
sahf
inc
loopne
adc
faddl
stc
rorb
mov
xchg
fsubrl
insl
mov
pop
test
push
aas
cmp
test
jl
test
xchg
sub
sbb
or
pop
dec
scas
or
mov
icebp
ret
ficoms
movl
cmpsb
dec
outsl
xchg
xor
inc
sub
xchg
data16
test
aad
repnz
push
adc
hlt
flds
adc
mov
icebp
shlb
sub
push
sub
ds
inc
loope
leave
lea
xchg
fcoml
int
clc
jle
ds
les
dec
lret
cmp
pop
orl
mov
lret
test
aam
jmp
push
loope
and
push
pop
lods
cmp
scas
repnz
or
sub
xorl
dec
pop
cwtl
aad
xchg
aaa
lea
mov
aaa
add
pop
dec
pop
das
inc
ljmp
xor
pop
stc
push
orl
or
lods
popa
push
cwtl
je
add
leave
shrb
mov
dec
fwait
imul
add
jp
and
pop
loope
cmp
jmpw
insb
push
mov
jbe
popf
in
dec
jp
les
sbb
roll
ret
ss
mov
fnstcw
or
or
stc
adc
mov
inc
pop
andl
nop
mov
outsl
aas
rclb
sub
mov
adcb
lods
cwtl
imul
sub
xor
xchg
stc
or
je
dec
cmpsb
lret
daa
push
lods
mov
or
and
imul
ss
add
push
cmp
sbbb
cmp
sbbl
mov
out
repnz
mov
jmp
shr
mov
xlat
pop
and
int
mov
mov
aas
and
insb
in
mov
sub
pop
dec
movsl
test
add
sbb
arpl
push
lods
addr16
repnz
dec
cmc
mov
sbb
jae
pusha
jecxz
mov
xchg
mov
sarb
mov
xchg
adcb
pop
ss
push
jle
aaa
mov
push
push
leave
adcl
sub
jo
ret
mull
dec
adc
lds
jae
inc
pop
jno
pop
loop
jae
push
mov
pop
leave
lods
mov
out
add
push
rcl
iret
mov
sub
mov
test
and
mov
nop
push
push
pop
aaa
sub
popa
xchg
xor
inc
pop
mov
fcomp
jbe
in
and
outsb
repz
movsl
leave
shrl
cmpl
jmp
js
aas
test
jl
mov
xorl
push
jg
les
mov
mov
shlb
sbb
add
mov
pop
in
jl
xor
je
xchg
mov
sbb
test
cs
jecxz
push
mov
mov
mov
jbe
add
incl
add
mov
or
cld
loop
lret
xchg
inc
rolb
or
xchg
inc
mov
mov
dec
mov
scas
cwtl
lret
out
test
cmp
ss
test
enter
stos
pushf
jmp
fstpl
mov
cmp
shl
clts
and
add
icebp
fsts
push
and
leave
add
fmull
outsb
pop
ds
mov
scas
jae
mov
movsb
sub
pop
add
mov
sahf
mov
lret
sbb
shl
pop
xchg
add
iret
test
cmp
das
mov
add
cmp
push
ss
into
or
jge
sub
push
push
inc
in
repz
pop
scas
ret
or
dec
scas
fidivrs
divb
repnz
mov
jge
jmp
sahf
jge
aaa
jmp
push
out
ret
ltr
sbb
push
testl
test
and
stos
pop
leave
xor
xor
call
push
cmp
ds
xchg
pop
dec
outsl
sbb
cmp
adc
testl
lea
movsb
sub
shll
popf
rep
loop
pop
add
inc
mov
sub
mov
and
push
mov
daa
push
push
and
mov
cmpsb
stos
fdivrs
aaa
dec
dec
mov
pop
push
test
adc
rcr
bound
int3
and
jp
xor
mov
mov
cmp
into
or
inc
push
ret
push
sub
jecxz
push
out
scas
stos
jae
jne
adc
pop
in
lods
sti
movsl
pop
pop
fs
xor
xchg
cli
pop
mov
loopne
in
inc
ljmp
je
cmp
xchg
cld
cmp
in
sub
icebp
filds
fidivs
mov
pop
add
mov
dec
pop
add
pushf
sub
add
imull
cs
xlat
mov
adc
bound
pop
dec
pushf
adc
std
shll
adc
and
xchg
push
cmp
ljmp
orl
lahf
add
mov
sub
popf
and
cmp
pop
sti
xor
gs
or
loop
sbb
cwtl
mov
call
cmc
das
ja
pop
cmpb
jae
pop
jecxz
mov
cmp
push
call
stos
cmpsb
xchg
adc
mov
in
jg
mov
shll
cmp
xor
fiaddl
sub
push
and
repnz
cmc
xchg
ss
icebp
mov
loopne
mov
sbb
js
xchg
fidivl
xor
orb
mov
pop
cltd
xchg
push
addr16
xor
mov
out
adc
or
sbb
add
in
jmp
jmp
into
inc
insl
jecxz
mov
mov
insb
lods
xchg
add
ss
ja
shll
mov
loopne
enter
jns
out
pop
and
cltd
mov
and
jbe
gs
in
loope
leave
jecxz
mov
cmp
add
fidivrs
shll
adc
outsl
pushf
sub
and
add
sub
push
ljmp
out
push
adc
xor
push
push
repz
xor
clc
jg
cld
lds
fs
mov
sbb
jno
mov
mov
xchg
lcall
mov
insb
mov
pop
mull
jb
lcall
pop
adc
sbb
mov
icebp
dec
incb
sbb
and
cmp
sbb
push
xchg
xchg
push
popf
cmp
cmp
sub
adc
mov
stc
and
hlt
xchg
add
mov
jl
sti
repz
cmp
inc
xlat
adc
cmp
mov
add
sbb
fs
lret
loop
testb
scas
xor
loope,pn
xchg
jns
lock
mov
sub
push
xor
xor
sbb
ss
lods
lcall
test
es
inc
orb
in
or
repnz
repz
cmpl
rcll
push
add
mov
imul
cmc
scas
mov
sbb
add
pop
fsub
sub
pop
mov
out
daa
adc
es
fdivp
mov
outsb
cld
incb
xor
mov
push
cwtl
jno
inc
imul
aad
mov
fbstp
and
jl
push
fwait
subb
and
subl
sbb
call
lahf
pop
sbb
jb
repnz
jle
jb
adc
repnz
shl
inc
stc
pop
dec
cmp
lahf
lock
sub
or
push
lods
loopne
out
aaa
pop
pop
adc
push
mov
jecxz
mov
xchg
lret
mov
xchg
sbb
mov
pop
dec
test
fs
xor
or
mov
rcrb
sbb
cs
jnp
imull
int3
push
ja
xor
xchg
xchg
adc
mov
daa
lea
sahf
decb
fwait
lcall
repz
pop
and
or
enter
fcmovu
jne
mov
pop
pop
aad
xchg
and
cmp
into
and
sbb
xlat
fwait
push
testl
sub
sahf
add
fldt
mov
cmp
mov
pusha
inc
rolb
pop
mov
lds
test
dec
pusha
mov
pop
in
mov
shl
lock
sub
fildl
sub
xchg
imul
and
jecxz
shr
ret
push
les
cmp
push
nop
and
arpl
pop
fs
aaa
pushf
test
sub
push
loope
addr16
mov
rorl
daa
in
ljmp
pop
pop
xbegin
push
mov
popa
movsb
shl
cmp
jmp
addb
adc
xor
loopne
dec
mov
dec
shl
das
add
adc
movsl
cmp
aad
int
xlat
cmp
je
mov
add
test
jae
outsb
cmpl
imul
test
add
popf
enter
shrb
push
test
jp
sahf
in
in
xchg
rclb
or
addb
lcall
loopne
daa
dec
and
cwtl
outsb
paddsb
lret
loope
mov
gs
jo
jnp
movsl
jp
movsb
call
dec
adc
in
xchg
adc
mov
mov
aam
loopne
dec
add
or
data16
push
loopne
nop
cmp
in
sbb
push
jl
lea
inc
sbbb
lds
inc
std
cli
fcmovnu
mov
imul
jno
pop
adc
mov
mov
jg
push
mov
fs
popa
ja
push
lods
adc
cmp
out
adc
jge
pop
fwait
xor
xor
movsb
mov
sbb
xchg
nop
xchg
lea
fisubrs
js
insb
ljmp
fnstcw
xchg
fdivrs
fidivs
mov
ljmp
cltd
ja
outsb
aad
xchg
mov
leave
cli
sbb
daa
clc
mov
ja
stos
mov
jno
dec
cmc
ja
fs
hlt
leave
lahf
push
mov
aad
mov
xchg
jne
sub
dec
mov
xchg
test
adc
data16
lcall
pusha
aad
inc
inc
imul
and
dec
leave
cmp
mov
fiadds
and
sbb
adc
imul
stc
addr16
add
sarl
sbb
pushf
mov
pop
shlb
icebp
mov
stc
movsl
aad
data16
shrb
xlat
push
ret
xchg
mov
ja
cmpsl
lcall
notb
jmp
cld
mov
inc
lahf
or
jecxz
stos
lods
pop
jp
mov
enter
push
lret
shlb
mov
push
sarb
cmpsb
int
mov
xchg
bound
lcall
push
add
gs
ficoml
pop
dec
jns
std
adc
ret
hlt
stc
mov
sbb
repz
jl
pushf
jne
jle
mov
imul
mov
fs
outsl
mov
sub
sbb
jmp
testb
popf
insb
ljmp
scas
xor
xor
cmp
cwtl
jmp
loopne
gs
enter
insl
mov
mov
movsb
sub
sub
sub
mul
lcall
pop
mov
adc
jno
cmp
mov
xchg
ret
mov
hlt
rorl
xchg
mov
sub
push
mov
nop
outsl
dec
jmp
stos
dec
pop
pop
xchg
push
jnp
insb
ja
sub
lods
dec
xchg
sbb
in
or
jle
and
mov
stos
jno
mov
xor
xlat
push
mov
inc
ficoms
shrb
out
or
or
add
dec
bnd
or
jl
push
or
call
mov
jg
fisttpl
and
rorw
xchg
clc
loop
inc
lock
mov
sub
ja
lcall
mov
dec
mov
push
icebp
xor
sti
arpl
mov
jns
jmp
xchg
or
mov
pop
stos
jmp
sahf
push
in
cmc
xchg
lret
cmpsb
es
fwait
cmp
add
add
sub
mov
add
mov
lods
xchg
inc
mov
jb
addl
jnp
test
pop
popf
push
xor
sub
daa
xchg
and
push
movsl
add
sbb
push
std
push
aaa
arpl
insl
lahf
pop
adc
call
hlt
xchg
push
xor
push
movsl
cmpsl
lret
fisubrl
xchg
push
cmp
in
inc
aas
adc
or
mov
dec
add
insl
xor
jbe
add
les
arpl
pop
iret
orl
nop
xorl
and
xchg
mov
cmp
sub
repnz
or
ficomps
std
mov
or
das
cmp
push
lret
mov
push
xor
loopne
dec
adc
or
sti
les
bound
in
xor
dec
pop
data16
test
mov
aas
inc
sub
ficoms
test
adcb
jg
adc
dec
jbe
adc
icebp
loop
xor
aam
and
jecxz
cmpw
push
mov
pop
ja
push
cli
xchg
mov
dec
test
add
lods
movsl
inc
jmp
jne
scas
and
into
inc
fadd
fstl
cmp
cmpsl
ficoms
fmul
cmp
andl
rcll
adc
aam
or
pop
xlat
out
addr16
cli
jp
pop
subl
inc
bound
aam
jge
iret
out
jno
sub
ja
mov
mov
push
in
inc
lret
cs
cmpsl
pop
popf
mov
cmp
jo
mov
sbb
sbb
addr16
int
repz
mov
push
std
cmp
lret
into
sub
inc
mov
and
xlat
push
rcll
cmp
cmpsl
push
mov
fcmovnb
push
aaa
addl
pop
cs
add
xchg
mov
int
mov
cltd
or
dec
jge
adc
mov
cmc
inc
xchg
jge
pusha
repnz
lea
aas
jo
push
es
adc
popf
push
cmp
xor
mov
inc
cmp
mov
push
cmc
lret
mov
jmp
push
cld
imul
adc
push
cmp
adc
ret
mov
loopne
test
lcall
pop
dec
in
pusha
lret
aas
aad
hlt
push
push
pop
or
mov
sar
ljmp
sbb
lahf
jae
rorl
inc
inc
xor
nop
movsl
cmp
imul
fisttps
and
shlb
xchg
xchg
jg
inc
dec
jo
jmp
jmp
cmp
daa
and
push
arpl
daa
push
mov
xchg
add
out
sub
movsl
sbb
push
cwtl
fists
repz
inc
sbb
jle
arpl
aas
push
iret
cmp
pop
es
pop
icebp
rcrl
xor
mov
loopne
out
xchg
out
adc
push
outsb
pushf
dec
adc
push
add
add
mov
inc
pop
jmp
jle
loopne
js
dec
popa
iret
test
pop
ss
rcl
cmp
add
cmp
mov
add
cs
ljmp
lock
mov
ret
mov
mov
mov
ss
add
std
movsl
and
out
int3
jno
jo
fmuls
cmp
xor
iret
add
cmpsb
enter
sub
mull
stc
cld
xlat
dec
test
dec
lods
jae
push
adc
sbb
pop
mov
mov
and
sar
in
jp
sub
xchg
or
inc
cmp
les
imul
mov
bound
fcompl
pop
out
shll
repnz
into
dec
jae
stc
add
mov
movsb
mov
pusha
outsl
and
pop
pop
sar
adc
mov
mov
jmp
lock
push
pop
add
sbb
repz
cmpsb
xor
xchg
insb
mov
in
jb
loope
int
movsb
adc
adc
faddp
xor
lcall
cs
scas
sbb
scas
mov
mov
or
rorb
cmpl
adc
inc
fwait
xor
pop
imul
pop
push
daa
scas
pop
jnp
test
dec
test
jmp
pop
test
inc
lret
mov
sbb
cmp
mov
sbb
mov
inc
mov
push
sub
jo
sti
dec
mov
dec
jnp
sbb
dec
pop
mov
jmp
pop
mov
jno
jnp
or
addr16
mov
lahf
jb
aad
stos
mov
lret
inc
gs
jp
fsubs
adc
aaa
jg
cltd
or
xor
cmp
inc
xor
add
int
movsl
adc
jle
cmp
xchg
push
rcr
adc
mov
xor
sarl
mov
ja
aad
jmp
jne
xor
jo
insb
or
scas
pushw
shrb
inc
mov
pushf
cmp
repz
pop
aam
data16
insl
push
or
mov
popf
xor
or
pop
pop
std
mov
or
je
test
sbb
inc
add
mov
loop
sbb
outsb
shrl
inc
fs
xchg
pop
adc
adc
sbb
mov
and
shll
adc
cmc
xchg
xor
xor
dec
jmp
popa
xchg
montmul
cmpsb
inc
mov
mov
xlat
sahf
ficoml
adc
dec
aam
and
sub
jnp
pushf
inc
mov
push
movsb
sbb
sar
dec
xor
inc
sbb
pop
ret
sahf
dec
inc
insl
mov
mov
adc
jne
fwait
mov
addb
mov
andb
inc
dec
xchg
or
inc
divl
pop
ds
adc
ss
mov
insb
fwait
test
lahf
mov
je
sbb
sahf
dec
inc
imul
rcl
jns
fsubrl
insl
loope
push
xorb
lahf
js
lock
mov
jp
into
sbb
loopne
mov
cs
out
and
ja
int
dec
pusha
insl
cmpb
call
fwait
mov
sbb
adc
dec
mov
jge
out
cld
jae
lret
adc
xor
dec
xor
test
push
mov
mov
fnstcw
hlt
push
mov
push
xlat
sub
aad
aaa
and
fists
jns
rol
aad
fisttpll
mov
and
or
stc
adc
scas
xchg
push
pop
nop
sbb
fs
jp
movsl
out
cltd
push
mov
movsl
fstpl
jmp
lods
mov
sub
pop
nop
add
scas
div
jno
mov
and
mov
loopne
sti
cmpsl
mov
or
xchg
mov
jmp
jecxz
push
add
and
out
sub
shlb
pop
bound
stc
sub
sarb
nop
mov
hlt
scas
setns
jo
lea
jo
or
nop
lock
cmp
fisubs
cmp
ds
fmuls
xchg
stc
or
cmp
add
in
xor
sub
fnstsw
jae
add
and
int3
jge
mov
xchg
mov
adcl
sahf
shrl
pop
mov
add
push
adc
xchg
test
cltd
cmpsl
js
xor
lea
push
mov
into
inc
jge
lock
xchg
xchg
leave
popa
push
xchg
mov
das
mov
sti
movsb
push
xchg
jb
sub
xchg
xor
icebp
fldt
pop
jns
jbe
fdiv
fldl
popa
or
xchg
mov
mov
pushf
ret
cltd
call
pop
push
fcmovb
push
xchg
push
movups
cmp
pusha
cmpl
inc
cmp
dec
test
cli
stc
pop
jno
or
imul
shll
cltd
cmp
or
hlt
mov
mov
sahf
jmp
cltd
pop
scas
sbb
sub
sbb
and
push
push
add
mov
push
mov
outsl
push
xor
jb
fabs
idiv
cld
pop
mov
dec
insl
sbb
adc
scas
xor
gs
mov
or
jmp
imul
lods
cli
and
cmpsl
inc
nop
je
mov
mov
sbb
mov
mov
jge
jecxz
or
or
sbb
mov
push
sub
or
cltd
xchg
jno
dec
pop
sub
inc
sbb
push
aas
std
inc
insl
push
ret
adc
mov
icebp
sub
loope
stc
pop
mov
repz
sbb
mov
pop
sub
aam
mov
int
mov
in
es
rorb
out
mov
decb
imul
cmp
adc
push
jnp
incl
fnstcw
sti
add
sbb
dec
inc
aas
fwait
add
mov
nop
push
sub
pusha
andb
lods
lret
xchg
or
push
aad
xor
js
and
inc
sbb
das
dec
or
orl
jle
mov
insl
rol
push
add
in
jae
cmpsl
mov
inc
push
push
xchg
int3
gs
addr16
push
or
aas
dec
pusha
push
xchg
or
sub
sbb
cltd
dec
ret
add
mov
cmp
lret
ficoml
out
ljmp
mov
ret
fs
xchg
push
iret
and
push
xor
push
adc
lret
hlt
inc
movsl
mov
lea
adc
jl
xchg
std
cs
sti
mov
pop
enter
sbb
push
pop
dec
insl
and
mov
aad
test
push
jbe
mov
cwtl
mov
lds
adc
outsl
lcall
jmp
and
lods
imul
or
push
inc
mov
sub
mov
stos
das
inc
lea
sub
icebp
adc
aam
or
lods
and
mov
fildll
mov
xor
loopne
xchg
fistl
dec
stos
es
adc
movsl
xchg
pusha
out
xchg
int3
mov
jnp
shr
pop
mov
in
clc
add
cwtl
fstpt
lahf
mov
cmp
mov
aam
sub
sub
cmpb
popf
bound
fists
sti
je
aas
push
pop
insl
mov
xor
xor
mul
dec
fistpll
stos
push
roll
jg
sub
add
xchg
adc
loope
fs
push
fimuls
xor
outsl
pop
or
ret
andl
fistpl
test
cwtl
dec
enter
ss
nop
inc
pop
sub
lret
push
in
push
test
aad
mov
push
add
std
dec
mov
sub
dec
inc
inc
es
jb
fwait
cltd
lret
inc
sub
jmp
or
adc
les
adc
repnz
popa
xchg
and
out
inc
xchg
nop
xor
stos
in
fsubrl
cmp
outsl
lods
fildl
movsl
or
bound
aaa
shll
pop
icebp
ret
js
lea
decl
aaa
xor
cld
out
xchg
js
xrelease
sahf
fwait
sbb
cltd
fwait
xor
pop
xor
or
sarl
hlt
pop
mov
insb
loopne
cmp
out
icebp
and
addl
lods
mov
add
sub
sub
dec
fidivs
push
addb
mov
mov
cmc
jne
cmp
xor
lock
xor
fidivl
sti
mov
mov
and
xchg
subl
jb
mov
mov
jne
cwtl
or
add
cltd
cld
fwait
je
int
das
in
fs
xor
ss
and
iret
das
sahf
sbb
xlat
es
push
xchg
add
pop
cmp
jno
jne
adcl
filds
or
iret
jl
cmp
cmpsb
pop
int3
fisubl
rclb
sbb
std
add
out
and
aas
mov
xchg
adc
js
popf
mov
jl
sti
xchg
les
mov
movsb
shl
in
in
pop
jl
aad
jge
mov
jg
cmp
xlat
bound
ljmp
cmpsb
push
js
or
and
cmp
idivl
push
pop
jbe
inc
fidivrl
pop
cmc
sub
enter
or
xchg
dec
ss
popa
and
xchg
mov
or
dec
scas
dec
and
dec
push
dec
lea
sbb
leave
cmp
adc
jecxz
and
mov
ret
in
sbb
mov
cwtl
inc
mov
mov
sub
fndisi(8087
pop
lret
xchg
repnz
and
push
push
adc
push
dec
or
or
mov
jne
add
add
std
movsl
loop
jo
pop
in
sub
jl
push
in
xchg
xor
add
mov
pop
std
inc
add
dec
pop
dec
mov
push
lret
mul
or
inc
add
out
mov
pop
mov
ret
xchg
or
add
rclb
sbb
lret
pop
and
xor
dec
int3
outsl
xor
push
mov
jae
fdivrs
loop
mov
mov
and
pusha
sarb
push
es
xchg
pop
lods
out
das
adc
hlt
jp
mov
out
movsl
pop
test
mov
xchg
sub
cmp
ds
mov
aaa
adc
scas
add
lahf
mov
pop
ret
inc
jmp
fstps
or
cli
adcl
dec
repnz
xor
fisubs
and
ds
sbb
xor
mov
xchg
lahf
dec
shlb
cwtl
stos
outsb
adc
fnstsw
xlat
adc
aas
adc
and
cmc
mov
sub
lods
push
mov
pop
inc
xchg
xchg
sbb
xchg
sarb
push
fimull
sub
inc
fcmove
push
je
or
cmp
pop
jp
mov
addl
adc
fistps
pop
or
lcall
sub
dec
imul
adc
orb
and
dec
mov
shll
xchg
pop
je
sbb
add
dec
add
xchg
or
or
xchg
orb
add
dec
fldcw
xor
mov
jmp
test
fsubrs
aad
inc
lock
xchg
cmp
ror
das
xor
adc
cmpsb
ja
fcmovnu
test
and
or
iret
je
sub
xchg
mov
ljmp
push
xor
adc
stos
ja
lock
xchg
cmpsb
and
pop
push
sbb
dec
icebp
jb
jmp
pop
add
xchg
call
cmp
pop
ret
adc
loop
inc
lea
out
cmc
popf
cli
xor
mov
aam
xchg
ret
push
dec
bound
cmp
dec
add
xchg
mov
push
jp
jl
outsb
cltd
lea
jecxz
push
subl
mov
adc
hlt
call
and
xor
xchg
fwait
aas
inc
ror
and
push
sti
repnz
adc
inc
cmp
repz
cmc
int3
sarb
mov
add
test
pop
sbb
mov
nop
jae
into
clc
mov
clc
std
xchg
cli
xchg
in
sub
aas
adc
xchg
pop
out
adc
js
xor
loope
inc
in
iret
mov
in
movsb
xchg
insb
xchg
mov
or
ds
out
push
adc
sbb
sbb
loopne
aaa
orb
adc
bound
test
and
pop
and
mov
xor
bound
adc
js
mov
push
adc
fldt
sbb
mov
pop
rorb
or
push
repz
xchg
orb
push
ljmp
out
fcmovne
push
push
jno
and
fmul
fcmovnb
mov
dec
or
dec
inc
lahf
xchg
arpl
std
jbe
js
jmp
lcall
sbb
sub
insl
pop
add
jnp
sbb
cmp
mov
lret
add
loopne
dec
ret
jne
ret
dec
cmp
xchg
and
dec
mov
add
jb
cmp
mov
sub
inc
inc
mov
stos
or
mov
loop
aad
sub
mov
push
mov
mov
leave
or
dec
lods
mov
sarl
and
sbb
cs
inc
cld
sub
sarl
test
mov
pop
scas
stc
aaa
mov
in
pop
adc
dec
out
push
insl
inc
cmp
mov
mov
fsubl
das
add
or
jmp
ror
add
hlt
movsb
mov
mov
loope
or
sub
add
sub
inc
adc
push
add
data16
les
inc
pop
xchg
orb
pop
xor
add
push
loop
dec
clc
ficompl
xor
sub
nop
sub
movsl
loop
int3
sbb
mov
es
out
mov
jle
rcl
fsts
or
stos
and
or
inc
lret
or
mov
jns
mov
andb
adc
pop
insb
mov
in
xor
dec
pop
je
sarb
leave
mov
cmp
or
es
mov
xor
push
mov
test
inc
fnstenv
js
call
mov
pop
negl
sbb
mov
pop
cmpsb
mov
mov
ja
xchg
mov
int
lea
inc
outsb
add
jp
mov
outsb
inc
js
inc
stos
mov
pop
lock
jmp
les
dec
mov
cmp
fsts
mov
scas
shl
cltd
mov
int3
cmp
jp
ficoml
mov
lods
add
cli
test
movsl
xchg
ret
dec
cmp
cmp
sbb
outsl
lahf
push
popf
dec
jnp
fdivrs
adc
sbb
pop
sbbb
adc
hlt
xor
pop
inc
pop
repnz
push
fcom
filds
in
or
push
xor
stos
ret
fincstp
pop
sbb
and
bound
filds
push
xchg
and
xor
jae
ret
mov
sub
or
int
ja
out
or
clc
lahf
ja
mov
sbb
cwtl
cmpsb
repz
aas
mov
jl
les
push
into
xchg
add
and
adc
jno
sub
and
adc
addr16
xchg
sbb
push
mov
fldl
and
cs
jno
cmp
lods
dec
mov
adc
and
lods
xchg
cmp
xor
dec
pop
cmp
data16
icebp
mov
test
adc
out
js
push
lds
xor
test
add
out
mov
adc
pop
loop,pt
mov
int
push
ljmp
fs
outsl
dec
sahf
jns
push
adc
xor
adc
lods
mov
lds
adcl
jl
lea
push
inc
jae
xorl
popw
mov
pop
hlt
fcompl
xor
pop
inc
jnp
jle
lds
ret
int3
jp
mov
mov
loopne
addr16
xlat
ljmp
leave
push
js
stos
pop
xchg
rorl
xchg
push
scas
fnstenv
and
jg
pop
cmp
and
pop
mov
mov
lret
and
jmp
addr16
ss
push
xchg
adc
testb
mov
or
es
sbb
sbb
rorl
fisubrs
scas
int3
cmp
and
pcmpeqd
inc
mov
pop
std
mov
pop
sbb
dec
jne
cmc
pop
xchg
shld
push
mov
in
xchg
test
push
xchg
scas
stos
imul
out
mov
notl
add
cmp
fisubs
dec
mov
cwtd
pushf
cmp
cmp
subl
sbb
push
lock
mov
pusha
je
pop
xor
aad
lea
jp
clc
arpl
mov
ficoms
das
and
xchg
insb
mov
mov
outsb
cmp
pop
adc
mov
daa
inc
sbb
ljmp
jbe
add
ret
add
xor
mov
add
sub
imul
jge
jns
repnz
fs
out
cmpl
icebp
das
pop
es
mul
sub
jns
lock
push
xchg
bound
repnz
push
inc
sub
in
or
mov
and
and
je
mov
imul
stc
cmp
sarl
fisubl
cltd
adc
dec
and
mov
scas
or
stc
or
jmp
lcall
xorb
fwait
inc
out
mov
mov
or
shll
adc
mov
lret
jmp
leave
sbb
xor
and
test
mov
insl
adc
cmpsl
andb
lods
insb
stc
push
ficompl
out
test
or
in
stos
addl
add
dec
xchg
loopne
pop
jl
mov
xchg
incb
push
push
cli
aad
lock
insb
les
fldt
mov
aad
jo
adc
fwait
lret
mov
jo
ds
jmp
mov
rolb
mov
dec
sbb
dec
fs
push
lea
lods
adc
jno
sarb
out
sbb
shr
cmpsb
jae
pop
mov
pop
pushf
aas
rolb
stos
cmp
popf
adc
pop
mov
jne
into
xchg
jae
shlb
add
sbb
mov
ret
inc
push
push
stos
dec
loopne
jmp
jo
sbb
inc
push
sub
pop
add
outsb
pop
add
ja
clc
xchg
mov
lahf
sbb
sub
adc
fsubr
push
dec
shl
add
xchg
dec
ficompl
scas
cwtl
lahf
stc
mov
cmp
lret
test
not
jge
in
lret
lds
cmpsl
subl
or
pop
mov
sub
mov
jmp
popf
push
adc
sbb
dec
xor
pop
push
xchg
pop
dec
and
push
sub
push
shlb
xor
pushl
jns
aaa
in
rcl
pop
rcrb
xchg
adc
ss
rcrb
mov
fldcw
mov
dec
lahf
push
xlat
add
lods
outsl
movsl
std
fidivrs
xchg
mov
ret
bound
out
xor
cli
push
lods
in
and
mov
xlat
adc
clc
mov
xor
imul
scas
xor
push
and
and
test
adc
and
push
call
repz
clc
inc
outsb
arpl
pop
mov
sub
jle
in
jmp
int3
pop
pop
dec
sub
inc
add
cltd
outsb
cmpb
test
ss
clc
and
cmp
das
mov
pop
xchg
add
popf
dec
mov
dec
xlat
xchg
test
mov
xor
dec
mov
iret
pop
scas
js
adcl
cmp
lods
mov
in
fnsave
push
out
mov
inc
nop
sbb
popa
jno
dec
mov
add
jnp
xor
push
and
inc
pop
popa
popf
daa
mov
pop
jmp
adc
jg
cmp
adc
popa
dec
jne
xor
int3
add
loope
xchg
insl
insb
mov
push
mov
sub
jbe
movsb
mov
ljmp
or
mov
rcll
popa
cld
mov
cmpsb
pop
fimuls
add
jmp
mov
lret
mov
pop
sub
jb
xor
inc
xor
negb
cmpsb
fnstcw
leave
mov
sub
mov
xor
sbb
pop
adc
fcmovbe
test
or
add
sbb
jne
dec
in
add
lret
mov
cmpsb
fdivrs
pop
push
lret
mov
mov
mov
push
pop
popa
ret
push
rorl
sbb
add
popa
gs
add
and
sub
loop
gs
sarb
mov
or
xchg
adc
test
int
inc
and
sbb
lahf
fsubs
xchg
out
subb
jne
sbb
or
mov
inc
fmul
jecxz
scas
in
lods
mov
xchg
push
scas
push
mov
adc
pop
jnp
test
lods
inc
add
sahf
int
ds
rcl
push
xchg
lods
ret
xor
les
stos
sub
adc
cmpsl
addr16
xor
dec
or
add
sub
xor
jg
aaa
imul
out
bound
sti
pushf
mov
iret
mov
scas
aas
xor
jns
clc
lahf
stos
jge
push
aam
cmc
out
ss
add
mov
lea
xor
fmuls
xor
xlat
push
push
cltd
xchg
fbld
adc
xor
adc
add
icebp
stc
out
cltd
outsb
jecxz
push
stos
jae
ret
xorb
jge
pop
lds
ret
dec
jno
xor
mov
jae
sbb
push
pop
adc
and
pop
icebp
cmpsb
int3
rcl
xchg
in
push
adc
push
fstpl
aaa
inc
bound
dec
add
fdivr
test
mov
out
imul
loop
jae
mov
mov
adc
test
or
xor
inc
mov
pop
insl
fcoms
xor
sbb
lock
pop
jge
push
jecxz
add
or
pop
xchg
bound
push
pop
inc
mov
pop
cltd
push
loop
arpl
es
cmp
inc
cmpsb
ds
in
mov
mov
or
push
shll
cs
loop
xchg
cmc
repz
lods
loope
movsl
pushf
mov
fldl
mov
xchg
test
pushf
enter
inc
rcll
iret
adc
inc
jl
mov
pop
mov
jle
dec
xor
stos
mov
sbb
movsb
sbb
enter
cmp
mov
xchg
fidivs
in
or
push
pop
cmp
test
push
pop
cmp
jg
out
in
xor
jg
mov
sub
orb
stos
jnp
pop
jo
dec
push
xlat
cmp
mov
add
test
or
stc
fsubr
mov
mov
das
call
iret
add
daa
sub
jno
roll
dec
into
jo
fnstcw
mov
pop
clc
scas
jg
inc
mov
arpl
clc
aaa
inc
add
es
shlb
mov
push
fnop
jbe
xor
jns
cli
bound
shll
and
jb
push
loope
das
test
mov
je
fistpll
dec
aaa
ja
out
sarb
cmp
cmc
lret
mov
insb
inc
xor
loop
mov
inc
xor
jmp
aaa
push
lods
sbb
and
mov
or
pop
cmp
loop
sub
pop
fnsave
jle
sub
call
mov
inc
jecxz
add
sbb
mov
jb
jbe
jne
aaa
lret
pop
aad
dec
test
in
xchg
cmc
mov
out
dec
mov
arpl
dec
mov
inc
add
xorb
push
dec
add
sbb
sbb
cmc
xchg
cld
xchg
loope
fcoms
xchg
jo
jmp
shrl
adc
jecxz
bound
mov
pop
pop
push
daa
dec
mov
pop
jg
mov
xchg
daa
mov
xor
mov
inc
das
ror
dec
xor
lret
inc
jmp
mov
les
xchg
add
adc
imul
push
aaa
inc
mov
mov
jns
and
sub
cmp
stos
sub
sub
lods
inc
cltd
xchg
and
jno
fnsave
add
add
das
jns
xorl
sarl
aas
mov
mov
mov
xchg
jecxz
imul
xchg
aad
lock
jns
clc
aam
xchg
fdivr
sbb
sub
mov
fiadds
test
cmp
sbb
xchg
sbb
push
fsubrs
outsl
out
imul
scas
pusha
test
add
out
inc
adc
es
cltd
pop
aad
or
fsubl
outsb
pop
ret
mov
and
dec
in
pop
cmp
pop
negl
jg
imull
or
je
enter
sbb
jle
pop
inc
mov
mov
jnp
xor
pop
xor
fldcw
idivl
and
or
inc
push
loopne
cmp
and
xchg
jp
mov
mov
jns
in
mov
mov
push
pop
cmpsl
cwtl
push
outsb
scas
cli
outsb
pusha
int
ret
push
adc
in
mov
mov
or
subl
sub
outsl
fildl
mov
push
push
loop
ret
repz
es
popa
mov
xchg
lret
jp
mov
repz
pop
in
sti
sti
jg
sub
hlt
push
movsb
popa
sbb
add
sti
ret
scas
nop
jle
cld
mov
addr16
sbb
inc
xchg
nop
xchg
lds
cmp
push
push
mov
xchg
fstpt
iret
push
xor
rcrb
push
sbbl
lea
jo
rcrl
sub
add
sbb
flds
or
movsb
call
add
testl
jae
loop
or
imul
cs
mov
and
test
jae
fidivs
mov
sbb
cmp
cwtl
cmp
xor
inc
cmpsb
jg
and
cmp
sub
xor
mov
jecxz
jno
push
out
cwtl
lcall
and
je
push
pop
add
jae
xor
dec
add
xchg
jle
push
pop
repz
inc
add
adc
lahf
cmp
or
mov
shll
popf
jmp
add
xor
push
jl
pushf
lods
scas
ja
int3
pop
jl
popa
jae
cmp
lahf
jmp
test
inc
data16
cmp
popf
mov
mov
sbb
add
mov
movb
aas
loope
sbb
pop
mov
xor
cli
repnz
jne
xchg
sub
push
mov
pushf
in
mov
jae
outsb
mov
mov
mov
ss
sarl
das
mulb
adc
xor
mov
cmp
dec
xchg
pop
rclb
add
push
cmp
xor
mov
icebp
jmp
jns
dec
fnstcw
mov
adc
pop
or
jbe
mov
popa
pop
add
rclb
fmuls
call
cmp
xchg
sahf
cld
fiadds
scas
xor
cmp
clc
popl
int3
xchg
test
fdivl
sub
adc
xchg
push
xchg
fmull
or
jmp
inc
cld
imul
jnp
lods
pop
push
xchg
aas
test
jle
mov
pop
ljmp
mov
lahf
in
and
jo
movsb
les
mov
and
mov
iret
xchg
xchg
aaa
cmp
adc
mov
adc
call
jno
enter
test
inc
lock
xchg
xchg
mov
or
lcall
mov
add
xchg
in
mov
pop
jp
ds
shlb
fmull
mov
adcb
or
adc
aad
cld
aaa
and
dec
mov
push
push
imul
iret
pop
xor
or
mov
push
stos
push
sub
imul
out
roll
int
push
xorb
cmp
xor
scas
popf
and
orb
outsl
sbb
or
dec
scas
xchg
into
dec
push
loopne
daa
sub
repnz
stos
pop
mov
rorl
adc
jnp
mov
dec
ret
cmp
enter
lcall
test
xchg
gs
mov
lret
in
mov
sti
sub
cltd
ds
outsb
mov
mov
jecxz
mov
cli
lds
push
aad
xchg
shrl
sti
outsb
int3
push
xchg
push
or
push
adc
ficoml
cs
jecxz
mov
mov
es
in
lods
adc
dec
dec
mov
mov
shrb
stos
pop
xor
adc
in
xchg
push
jg
cmpsl
test
push
sub
or
mov
enter
pop
mov
lock
stos
pop
fcomp
add
mov
push
jb
jecxz
aaa
scas
inc
dec
and
dec
pop
lods
xchg
lods
cmp
clc
and
lea
add
ds
jns
int
xorl
xchg
cltd
cmpl
xchg
popf
pop
cmpsb
ljmp
jns
sahf
push
cld
cmp
xor
movsl
jne
fldenv
jns
jo
adc
push
jle
and
and
push
inc
pop
js
insl
es
dec
xorb
mov
fwait
mov
test
fstl
xor
jle
daa
cmp
xchg
mov
test
jne
repnz
jg
jo
data16
jl
and
sub
jne
aaa
in
outsb
sub
lret
jge
fimull
lock
pop
fs
cmp
cmc
push
add
cmc
jp
or
lret
inc
out
jne
jo
mov
push
aaa
stc
dec
dec
leave
mov
jmp
les
add
dec
ss
jae
out
js
mov
popa
test
mov
cli
or
dec
xor
gs
sub
xor
xchg
jg
js
sbb
inc
arpl
into
sbb
and
inc
aam
lret
inc
sbb
mov
into
lcall
xlat
das
imul
adc
in
clc
shl
das
bound
xorl
mov
ret
repnz
lret
mov
and
insb
dec
rcrl
imul
cmpsb
gs
lcall
mov
imul
subb
inc
pop
sbb
imul
xchg
mov
mov
mov
ficomps
mov
xor
xchg
xchg
jo
mov
out
jecxz
scas
test
xor
sub
sahf
repz
aaa
mov
pushf
mov
fldt
ret
mov
or
notl
push
jg
outsb
cmp
gs
mov
sbb
popf
lret
insl
lcall
push
xchg
pop
mov
mov
addb
arpl
add
mov
add
lea
sahf
jg
inc
icebp
jbe
adc
aaa
shr
nopl
popa
idivb
xor
inc
mov
pop
xor
repnz
rclb
aad
bound
push
mov
pop
fisubl
dec
mov
xor
dec
cmpsl
pop
push
stos
loop
scas
add
std
inc
in
faddl
xlat
stos
adc
adc
movsb
or
cmp
and
push
jp
cmc
mov
movsl
mov
jno
adc
cld
in
pushf
sub
aad
xor
xchg
xor
or
test
iret
xchg
int3
or
data16
push
loop
mov
xchg
popa
sbb
aaa
aam
outsl
movsb
xor
add
test
ja
iret
outsb
aad
pop
icebp
xor
add
dec
add
faddl
idivb
pop
mov
adc
mov
stc
sub
cmpsl
mov
int3
xor
lock
les
inc
shlb
sub
mov
shrb
pop
cwtl
adc
xchg
or
fnsave
jp
xchg
sub
mov
out
jmp
add
dec
pop
cmpsb
in
int3
sti
xchg
int
push
mov
cmpl
fwait
sbb
jne
aas
mov
push
nop
movsl
sbb
lret
popf
dec
push
fsubrp
in
dec
adc
dec
imul
es
arpl
push
dec
xchg
stos
xlat
adc
mov
mov
test
test
scas
sbb
pop
xor
mov
jp
mov
sub
jae
out
or
mov
jo
cwtl
scas
jo
shll
std
and
xorps
jno
fsubr
pop
test
pop
jle
push
icebp
movsl
test
pop
sbb
aam
cmp
pop
xchg
pusha
push
rcr
addr16
ret
test
daa
pop
mov
mov
mov
add
pop
je
movsl
out
cli
jne
xchg
jns
sbb
mov
xchg
mov
mov
shlb
movsl
mov
sbb
sub
adc
and
addr16
fisubs
dec
ja
and
push
push
test
jle
outsl
ss
cltd
or
pop
add
xor
in
lea
sub
rorl
inc
push
int3
adc
mov
imul
lcall
ficoml
aas
out
icebp
cmp
sbb
mov
cld
push
dec
divb
mov
cmp
divl
in
mov
icebp
aam
pop
in
add
xor
pusha
push
arpl
ljmp
mov
call
add
lds
movsl
ss
lea
test
fcmovnu
sub
dec
add
pop
ja
add
insb
pop
dec
jle
addr16
jno
mov
fstp
or
stos
jo
dec
or
faddl
lcall
xlat
sub
addr16
fucom
inc
inc
es
push
leave
shl
xchg
addr16
pop
jl
popa
mov
lock
sub
mov
lods
push
test
mov
iret
into
xchg
sbb
xor
out
lahf
xchg
cmpsb
or
sub
lcall
sbbl
add
cmp
inc
ret
dec
cmc
out
xchg
mov
push
sub
bound
inc
into
xchg
lods
xor
outsb
lea
jl
test
in
outsl
in
dec
out
dec
test
push
add
cmpsl
dec
pop
push
mov
cmpsb
cmp
mov
cmp
cs
mov
and
je
inc
mov
dec
cmp
push
les
jne
jo
push
adc
dec
xor
push
rcll
scas
lds
xlat
pusha
add
cwtl
inc
jecxz
dec
test
inc
call
popa
cs
outsl
pop
sbb
ror
lods
jne
or
xchg
or
loopne
dec
or
nop
sbb
sub
sbb
push
cmp
mov
push
movsl
push
add
insb
sub
pop
pop
push
repz
pushf
bound
cltd
div
shlb
cmp
sub
sbb
jmp
sub
lahf
and
jns
loopne
add
fcomps
shlb
sub
cld
nop
xchg
jo
mov
dec
xor
fadds
sbb
pop
pop
mov
sti
lret
pop
sahf
leave
sbb
mov
push
push
outsw
int3
clc
nop
ja
cwtl
and
and
jmp
mov
ficoml
imull
cwtl
call
push
dec
into
cwtl
mulb
mov
xchg
pop
inc
js
les
cmpsl
pop
dec
jmp
in
or
dec
sbb
or
cmp
dec
mov
add
add
out
pusha
sti
lock
ja
cmp
loopne
jmp
pop
xchg
lock
int
lock
mov
cmp
add
and
lcall
sti
jg
mov
inc
out
rorb
push
mov
lcall
gs
push
lret
dec
dec
and
pop
les
in
xorb
and
out
es
mov
adc
sahf
arpl
or
mov
inc
fiaddl
fdiv
mov
fnstsw
dec
sbb
mov
pusha
jae
mov
stos
loop
pushf
mov
addb
xchg
sbb
cmp
adcb
data16
mov
cmp
mov
andl
dec
jae
push
lcall
dec
movhlps
ds
loopne
xor
fldcw
sahf
pop
pop
pusha
inc
mov
jb
in
stc
in
xchg
lcall
jmp
repnz
gs
movb
loop
xchg
scas
cwtd
xor
sub
or
out
jge
cmp
inc
sbb
mov
pusha
jno
jae
inc
scas
cli
jo
sti
cmp
or
subb
push
mov
sub
call
inc
mov
outsl
ss
fwait
xchg
std
movsb
jbe
mov
dec
xlat
in
das
jb
sarb
xor
inc
xchg
in
fwait
and
xorl
cld
int3
inc
cwtl
les
jg
sbb
adc
pcmpgtb
inc
inc
and
popf
orb
cli
add
out
sbb
and
sbb
adc
inc
pop
cmpsb
inc
pop
pusha
cld
push
jmp
pop
pop
lret
push
hlt
mov
outsl
lahf
xchg
dec
out
aaa
mov
push
cmp
dec
clc
aas
fimull
aaa
test
jns
mov
hlt
out
stos
lcall
cmp
xchg
dec
pop
loope
xor
loop
movsb
fmuls
jbe
loopne
mov
mov
daa
jns
or
cmp
add
sub
leave
mov
add
inc
lds
pusha
iret
and
sbb
jo
sub
fnstcw
mov
dec
xchg
insb
xchg
add
xor
inc
and
mov
icebp
pop
mov
inc
std
cmp
popf
mov
movsb
aam
ret
inc
outsl
jb
cmpsl
inc
mov
and
aaa
or
xchg
test
xchg
push
jae
xchg
sbb
les
lret
sub
jne
dec
sbb
adc
mov
sbb
mov
sub
ret
adc
xchg
popf
pop
or
outsl
pop
gs
xchg
or
bound
divl
inc
pop
popf
out
dec
daa
cmpsl
pop
das
jno
mov
mov
mov
cld
aam
push
in
jno
and
mov
and
jns
mov
dec
icebp
sbb
jecxz
lcall
jno
mov
mov
inc
dec
dec
out
pop
call
inc
xchg
mov
pushf
sbb
jecxz
cmp
in
je
mov
adc
sub
xchg
pop
popa
movsb
mov
xor
push
inc
sbb
addb
adc
and
dec
xchg
fld
sahf
jge
aas
ja
out
out
pop
mov
lds
pusha
js
xor
ss
out
mov
and
js
outsl
lret
inc
enter
shll
jecxz
das
enter
push
js
roll
or
std
sub
cmp
cmp
mov
push
arpl
jle
mov
lock
mov
jns
add
and
mov
push
dec
sti
dec
and
adc
iret
nopl
movsb
xchg
add
sbb
mov
outsl
adc
fcompl
adcb
jnp
and
rorl
out
in
ds
cmp
pop
or
mov
out
movsl
pop
cld
test
pop
dec
jo
mov
cmp
inc
dec
cmc
and
add
and
shr
xor
sub
inc
lods
inc
sub
test
xchg
pop
push
push
in
add
repnz
into
cld
cld
rorl
lods
test
jnp
data16
fldcw
xor
xor
dec
cmpsl
js
repnz
add
dec
out
pop
pop
sbb
jne
push
or
aad
fcmovnu
xor
inc
les
in
inc
sub
daa
or
test
jmp
addr16
test
adc
push
cmpsl
xchg
and
push
les
mov
inc
mov
adc
xchg
mov
pop
js
into
test
mov
or
inc
mov
pushf
inc
sub
push
sub
pop
jp
icebp
push
dec
je
mov
nop
pop
jb
in
xchg
add
ficompl
adc
testb
xchg
cmc
in
cwtl
and
scas
es
incb
xchg
movsb
and
adc
negl
shll
je
mov
imul
xor
cmpsb
ja
adc
outsl
clc
aas
imul
mov
pop
dec
xor
and
js
add
push
jbe
pusha
scas
inc
pop
xor
testb
dec
sar
dec
movb
lcall
jle
push
in
and
cli
shld
pop
xor
adc
xor
pop
out
push
aad
pop
push
int3
xchg
ret
push
aas
mov
out
aaa
inc
pop
imul
inc
dec
stc
adc
out
jg
xchg
add
imul
aas
loopne
pop
imul
inc
cmpsb
mov
mov
sbb
cli
mov
mov
aaa
pop
jns
push
mov
push
dec
xchg
cmp
push
mov
loop
sbb
sub
insl
push
sub
fisttpll
andl
aam
rcr
xor
loop
out
sbb
adc
dec
add
data16
insl
xor
mov
pop
mov
stc
nop
and
sahf
popa
mov
aad
mov
mov
rcr
mov
push
into
loop
cs
movsl
jmp
les
adc
nop
std
mov
or
out
rep
jge
lea
lahf
popf
inc
cmp
sbb
movsb
movsb
cmp
shlb
lret
adc
dec
pop
sub
push
cmpb
mov
pop
mov
popa
in
leave
test
adc
divb
sbb
mov
dec
mov
push
xchg
sbb
jae
mov
loope
push
lret
pop
mov
sbb
pcmpeqw
fsubr
or
xor
in
adc
adc
push
loope
inc
adc
xchg
sti
mov
lods
jns
xchg
jp
pop
xchg
dec
push
xchg
xor
popa
xor
ss
cmp
cmp
into
jnp
sub
jle
xor
cmp
cmp
into
pushf
imul
das
pop
or
repz
add
orl
xchg
in
xchg
mov
pop
and
cmp
jbe
inc
fdivrp
sub
xchg
shl
mov
fs
jb
stos
dec
ficompl
jns
int3
loope
stc
pop
lea
adc
imulb
enter
sbb
sbb
test
or
lahf
mov
stos
sub
fiaddl
aam
mov
in
gs
mov
cmp
xchg
movsl
sbb
repz
out
je
jnp
sbb
enter
nop
aaa
aad
mov
ret
popf
jo
fisubrl
in
enter
mov
push
or
push
inc
enter
adc
sub
xchg
int
call
fldcw
into
inc
lret
mov
or
mov
jge
imul
test
push
pop
jl
ds
fneni(8087
jl
push
cmp
mov
jo
mov
icebp
push
popa
xchg
dec
cli
lods
jno
popf
and
shlb
ftst
movsb
scas
int
pop
fistpl
aam
lret
lret
stc
mov
int
lods
ret
dec
fcompl
sub
xchg
mov
adc
test
pop
xor
add
mov
cmc
in
hlt
or
test
int
jne
fcmovbe
shlb
call
js
ret
pop
pop
xchg
cmp
add
call
sub
fistps
out
mov
out
popf
insl
notb
int3
popf
jae
cld
mov
xor
test
popa
adc
aam
xor
es
mov
pop
insb
cmpsl
cmp
sbb
and
loopne
mov
fdivrs
fildll
dec
sub
mov
cmc
mov
dec
iret
sahf
push
jnp
add
adcb
or
clc
adc
sub
pop
mov
ja
aas
mov
fwait
xchg
jge
xchg
pop
lret
fmuls
or
add
test
xlat
cwtl
cmp
stos
sbb
stos
jb
bnd
fs
or
outsl
out
or
js
adc
mov
mov
cwtl
mov
sahf
movsb
or
scas
pusha
dec
nopl
test
and
add
xor
mov
ret
in
cwtl
mov
leave
xor
sub
stos
push
leave
sti
inc
jbe
push
scas
lods
push
lods
and
fdivr
mov
lret
cmc
mov
lods
sbb
dec
sbb
push
or
aaa
push
push
ret
mov
xchg
dec
mov
iret
push
stc
ljmp
fwait
in
outsl
int3
jecxz
rolb
mov
cwtl
outsb
push
pop
mov
pop
ljmp
or
lret
iret
dec
push
int3
pop
pop
pop
mov
daa
add
sahf
push
xlat
pop
push
sbb
inc
xchg
inc
test
shl
cmpsl
sbb
cmpb
push
ljmp
jno
sub
repnz
or
test
and
scas
arpl
or
movsl
xor
and
xchg
repz
sbbl
cs
in
sahf
fistl
ret
mov
mov
xor
mov
pop
mov
mov
call
lods
xor
xor
jle
push
and
subl
dec
sbb
aaa
xchg
mov
add
xchg
mov
xchg
or
pushf
and
lods
iret
iret
sahf
push
jae
lret
xchg
push
push
xchg
bound
xchg
mov
stos
jecxz
cmpsb
sarl
inc
movsb
ss
mov
sub
dec
mov
xchg
push
dec
xor
call
fimuls
jno
add
jae
jmp
or
cmp
xchg
mov
cld
cmpb
aam
dec
ja
push
fnsave
xchg
mov
mov
jnp
adc
test
and
xchg
xor
xor
leave
jecxz
sbb
jb
rorl
ret
and
xor
stos
hlt
mov
cmp
push
sub
dec
inc
adc
cmp
fcmovb
shl
mov
jb
es
dec
fisttpll
fisubl
pushf
movsb
packuswb
and
mov
mov
and
or
popa
cmp
dec
aaa
fld
push
fcmovb
scas
jns
test
stc
mov
push
test
fnstenv
add
or
outsl
push
push
pop
fs
lock
pop
loop
xor
loopw
push
fisttpl
xchg
ret
imul
outsl
xchg
push
pop
in
sbb
in
push
in
shr
jne
push
mov
or
jge
mov
or
adc
es
xlat
jmp
mov
mov
ljmp
push
cmp
push
pop
shlb
fcmovnu
out
push
in
pop
ja
cmc
adc
scas
or
push
fstpt
outsl
push
add
jb
imulb
mov
mov
out
xor
pop
lret
mov
lahf
fisubrs
into
lahf
and
mov
lahf
xchg
xacquire
xor
or
aas
mov
mov
mov
jne
sti
mov
pop
lret
sbb
int
addb
inc
sbb
fidivs
xchg
jne
stos
mov
sub
les
dec
sub
scas
add
inc
sub
sti
out
pop
mov
xchg
fwait
jb
cmp
repnz
push
lahf
ja
scas
add
sub
mov
xlat
pop
xchg
push
mov
push
and
lahf
repnz
ljmp
xchg
repz
setno
or
sub
push
jbe
fildl
jno
or
cli
pop
pop
push
pop
fcomip
aad
test
mov
xor
jg
jno
mov
add
pop
xorb
jmp
in
sbb
cli
out
and
jle
mov
cli
mov
les
xchg
movsl
inc
and
cmp
add
mov
sbb
pop
stc
shlb
test
jl
js
add
add
jae
imul
mov
gs
addr16
inc
add
ds
and
xchg
dec
fistpll
pop
inc
push
sbb
pop
pop
pop
mov
addl
pushf
mov
nop
push
add
repnz
fistl
pop
xor
sub
adc
push
insl
lods
lret
push
hlt
lret
cmp
popf
dec
aas
enter
lret
adc
mov
xchg
sbb
fstpl
inc
cmp
ret
and
enter
xchg
jmp
push
leave
sub
shrb
fsubrs
leave
cmpsb
sub
jl
aad
scas
pop
pushf
mov
pusha
cltd
insb
sti
rorl
leave
ja
pusha
add
cmc
adcl
cmp
test
dec
clc
adc
orl
dec
jae
push
xchg
pop
dec
sbb
sub
or
xor
cmp
fnstcw
fidivs
roll
je
pop
pop
xchg
push
ss
inc
xchg
push
mov
or
and
faddl
and
scas
in
jmp
cmp
lcall
loop
mov
inc
test
add
test
mov
pushf
pop
mov
arpl
shll
xchg
mov
decl
shrb
gs
sbb
vcvtsd2ss
add
dec
sahf
cmp
into
pop
stos
aad
push
fimull
aam
stos
cmp
pop
mov
mov
lods
cltd
mov
ljmp
pop
xchg
mov
or
xchg
addl
test
arpl
decl
inc
in
adc
mov
and
dec
xor
mov
jae
xor
and
pop
add
jecxz
xor
mov
cmpsb
push
jle
cmp
testl
ret
clc
insl
fbstp
insb
xor
push
test
push
jmp
scas
or
or
jp
fcomps
push
cltd
fldl
rcr
loop
mov
jle
and
cmp
movsb
fst
dec
inc
jecxz
push
and
cmp
leave
push
cmp
cmp
pop
repnz
and
hlt
lret
mul
bound
sub
adc
dec
das
popf
xor
lahf
mov
loopne,pt
inc
push
and
dec
adc
test
adc
daa
shll
sbb
js
ret
mov
out
adc
cmp
pop
ds
pop
or
arpl
dec
ds
xchg
daa
mov
hlt
lock
pop
notb
aam
jg
cmp
stc
sub
out
push
lds
push
fistl
add
sbb
imul
cwtl
sbbl
xchg
dec
xchg
add
aam
loopne
addr16
push
and
sub
fildll
cmp
icebp
inc
faddp
mov
sub
push
sub
mov
xlat
dec
pop
popa
leave
pusha
in
jmp
lods
mov
ret
mov
scas
test
jb
jbe
ljmp
inc
ret
fucomip
mov
aam
inc
ret
es
int3
cld
sarb
mov
pop
dec
pop
inc
cs
dec
pop
adc
mov
shll
aaa
pop
lret
inc
mov
xor
rcl
or
sbb
movsl
pusha
adc
mov
pop
jne
or
out
in
jno
mov
adc
cmp
test
mov
ret
mov
inc
mov
data16
pop
addr16
xor
and
ret
ret
shll
or
jge
repz
push
lea
mov
sbb
inc
pop
das
inc
stc
test
or
idivl
lds
gs
fmul
mov
sub
dec
lahf
pop
fcompl
sub
mov
rolb
mov
daa
aas
pop
fsubr
sti
sbb
push
cmp
imul
bound
lock
add
test
jo
pop
imul
dec
outsb
stc
mov
mov
shr
mov
or
mov
fists
sti
mov
inc
pop
dec
dec
xchg
mov
mov
daa
scas
or
outsl
insl
ficoml
icebp
mov
cmp
jl
dec
lret
or
sub
daa
sar
xchg
add
test
push
shll
imull
sbb
pop
call
clc
cmp
mov
addb
mov
jb
xlat
cmp
and
cmp
inc
aad
repnz
stos
and
xchg
push
cld
pop
lahf
push
push
hlt
cmp
push
es
rcrl
pop
xchg
fldt
cmc
lock
jnp
mov
mov
cmp
arpl
out
mov
ret
mov
adc
dec
test
aad
pop
push
popf
push
lcall
jmp
sbb
pop
fsts
push
ffreep
xor
pop
fdivp
test
jo
jg
test
in
fidivs
subl
jb
and
cmp
in
mov
mov
or
inc
adcb
jecxz
xor
gs
fwait
sub
add
xor
fwait
rclb
jae
dec
jne
mov
xor
jmp
mov
les
call
stc
dec
repnz
push
sbb
stos
imul
pop
pop
shlb
out
add
fwait
adc
lock
mov
xchg
mov
shrb
notl
sahf
jge
adcl
shlb
rcll
push
in
call
fdivp
sarb
mov
adc
or
inc
cmp
xlat
pusha
jnp
sub
and
std
mov
xchg
cmp
or
loope
adc
in
shrl
sub
push
daa
or
and
sar
jno
pushf
dec
jns
jg
gs
arpl
dec
mov
test
sub
std
pop
pop
inc
mov
cmp
jmp
cmpsb
xchg
push
clc
test
hlt
jo
jnp
mov
sub
xor
sub
sub
cmp
xchg
xor
cmp
rol
in
js
lods
popf
sbb
adc
ja
out
lock
cmp
and
lds
clc
sbb
jns
hlt
cltd
sbb
lock
mov
mov
cmp
scas
ret
popf
add
loope
push
gs
jle
lea
and
sti
test
loop
xor
add
and
add
fdivr
pop
fstpl
shl
fiaddl
xlat
fidivrs
movsb
pop
iret
cmc
push
sbb
fiadds
loop
push
imul
out
scas
dec
call
cli
ret
addr16
lods
xchg
addl
nop
addr16
xor
aam
or
andb
repnz
lret
sbb
lcall
pop
add
add
push
pop
mov
mov
cmp
test
push
push
imul
sbb
or
xlat
js
pusha
sub
repz
pushf
push
scas
mov
jbe
or
xchg
cmp
cmc
dec
cli
mov
leave
dec
sub
or
dec
stos
aad
cld
andb
lds
xchg
sahf
adc
notl
inc
add
sub
repz
pop
mov
mov
dec
inc
mov
fpatan
lock
popf
testl
mov
add
inc
jg
jo
sbb
scas
xor
mov
xor
xchg
cli
pop
dec
movsl
jne
cmp
test
daa
testl
test
push
out
test
call
xchg
out
pop
sbb
faddl
adc
leave
sbb
daa
sqrtps
push
in
or
popf
and
aam
shll
add
add
dec
add
fwait
or
aam
pop
out
inc
fcompl
cltd
stos
repnz
inc
aas
adc
stc
xor
popa
insl
push
pushf
test
lret
sub
push
clc
fcomps
insb
ja
mov
dec
jmp
gs
inc
cmp
lahf
lds
testb
add
in
sub
movsb
xchg
inc
pop
and
daa
jae
xor
fistpl
imul
mov
seta
add
pop
frstor
add
in
adc
iret
cs
scas
push
js
leave
in
jne
or
jp
in
add
mov
lock
mov
xchg
push
pop
inc
ds
jb
int
push
mov
shrl
test
xor
jge
push
sarl
and
fcoms
add
loop
out
fucomp
xchg
arpl
popf
dec
xchg
lcall
lret
fwait
cmp
xchg
add
stos
cmpb
adc
fs
or
dec
ljmp
mov
leave
sub
sub
cmp
mov
std
lods
xor
test
add
ljmp
cmpsl
scas
rcrb
rorb
mov
mov
pop
mov
mov
xlat
iret
stos
push
sbb
dec
inc
xchg
mov
dec
jl
xchg
xchg
pop
sbb
jp
std
jbe
jmp
rcll
or
hlt
and
and
xor
int
xchg
bound
into
mov
mov
jmp
cld
jp
mov
andl
push
int
push
fsubs
clc
sub
adc
loopne
and
movsl
push
inc
push
dec
test
sub
or
aam
iret
ja
cmp
lods
xchg
inc
xor
loope
ds
jp
mov
mov
dec
fildl
movsl
xlat
int3
sub
jmp
std
or
rclb
sub
dec
movsb
xor
dec
pop
xchg
xor
loopne
lret
mov
scas
mov
pop
sub
push
je
push
jbe
dec
iret
mov
lds
or
jecxz
or
scas
and
or
scas
pop
addr16
shl
clc
test
fistps
jmp
dec
stos
xor
clc
xor
leave
sub
add
jl
aam
inc
and
cld
xchg
mov
pushf
dec
pop
cltd
test
add
jns
nop
imulb
lea
jns
addr16
mov
in
pushl
jne
add
sahf
dec
je
sub
fstpl
and
rclb
stos
outsb
sbb
stc
cld
inc
sbb
mov
out
lds
loope
fidivs
add
vpsraw
dec
icebp
leave
stos
jnp
pop
arpl
stc
mov
mov
loop
xchg
popa
pushf
loopne
fildl
ljmp
sbb
cmp
and
aaa
mov
adc
jle
fcoml
fsubs
lcall
push
sbb
rcrb
cltd
jle
jp
cld
mov
leave
mov
jecxz
adc
pop
ja
and
lods
sub
push
inc
push
bound
hlt
dec
sbb
add
mov
push
popf
xor
rol
sti
xchg
jnp
push
xchg
mov
xchg
popf
icebp
stc
xchg
mov
fimull
dec
mov
push
ret
mov
inc
pop
lret
sub
mov
hlt
push
je
jp
in
xor
pop
jge
jbe
xchg
enter
pop
cmp
push
mov
inc
mov
inc
in
xchg
ret
repnz
testl
lods
mov
pop
add
fwait
adc
stos
cwtl
cmp
mov
jne
insl
dec
jo
leave
dec
sbb
cwtl
dec
scas
inc
sbb
push
in
clc
call
fs
add
mov
add
bound
mov
adc
xchg
out
mov
scas
enter
sbb
xchg
xchg
mov
inc
jns
jp
dec
lea
enter
lret
cmp
jg
sarl
lds
xchg
idiv
addb
sub
rcl
ds
jne
dec
add
insl
xor
xchg
xchg
fcoml
xchg
adc
sarb
xchg
repz
test
in
js
adc
shrl
xor
pop
jmp
loope
add
mov
dec
jg
or
in
dec
stos
in
dec
fcompl
push
xchg
sarl
test
sub
clc
dec
push
lock
iret
mov
test
mov
push
dec
shl
popa
adc
jge
xor
into
test
mov
cmp
clc
ss
inc
sub
mov
mov
xchg
cmp
mov
xchg
test
call
inc
enter
sub
jnp
int3
cmp
gs
scas
pushf
test
pop
out
sbbb
enter
out
or
adc
filds
sbb
aaa
fimull
into
mov
jo
mov
pop
int
or
es
xlat
pop
jl
jge
sbb
stos
xchg
add
or
sar
jns
rcr
jne
jle
xchg
adc
pop
mov
sub
shlb
arpl
loope
mov
xchg
push
mov
scas
push
and
push
sbb
les
or
ljmp
roll
scas
mov
dec
jbe
mov
dec
es
add
pop
shrb
mov
sub
test
aas
popf
pop
sub
push
rorb
xlat
mov
mov
push
ljmp
push
fdivl
movsl
cmp
xchg
inc
out
xchg
sub
push
mov
inc
and
lret
sub
mov
mov
loop
imul
hlt
iret
sbb
test
fsubrl
push
mov
push
mov
cltd
jne
jle
popf
sub
sbb
cmp
mov
or
in
jp
subb
faddl
int3
push
inc
adc
lahf
sub
test
and
pop
mov
daa
pop
xor
lret
clc
int3
sub
jo
jmp
cmp
aaa
jl
mov
in
adc
pop
and
pop
mov
dec
push
test
gs
lods
iret
mov
dec
daa
push
inc
stos
int
ret
rolb
pop
add
mov
es
xor
inc
stc
sarb
in
mov
imul
inc
xor
aam
iret
cld
mov
cmp
and
int
out
xchg
sub
sub
jmp
lret
mov
mov
shll
and
adc
loopne
lret
push
dec
mov
fs
jmp
std
dec
jo
mov
xor
shll
addr16
cmc
inc
sub
mov
sub
stos
fcomp
popa
inc
dec
mov
cmp
outsb
xchg
dec
and
out
decb
or
push
repz
sahf
ret
mov
dec
mov
mov
jbe
fcompl
inc
pop
cmp
cmpsl
jns
inc
mov
xchg
ss
sbb
jno
jl
pop
bound
enter
sub
scas
mov
cmpsb
inc
notl
push
filds
in
push
pop
add
or
cmp
fistps
xor
movsb
cltd
aam
and
nop
inc
hlt
loope
pop
sbb
test
push
in
cmpsb
add
sti
pop
pop
mov
call
jp
xchg
fistps
or
fimull
ret
pop
rorb
scas
xor
mov
adc
into
jle
add
jp
sbb
stos
adc
mov
dec
push
cs
shlb
fidivrl
test
xor
popl
xchg
insl
jmp
or
out
adc
movsb
and
push
cmc
inc
xchg
pop
mov
push
mov
adc
add
adcl
pop
adc
rorb
mov
mov
jns
les
mov
inc
pop
imul
into
mov
push
loop
jge
xor
or
jmp
loop
or
test
sbb
xchg
iret
or
gs
fwait
sub
dec
push
xor
push
call
jo
pushf
and
adc
inc
jge
xor
xchg
mov
es
lea
add
cmc
scas
in
mov
or
jmp
loope
mov
mov
jne
dec
sub
and
ret
cmp
mov
leave
xor
push
outsb
test
mov
stos
mov
mov
push
ljmp
insl
cmp
scas
adc
xchg
jg
nop
int
dec
xchg
sub
xor
pop
sbb
sub
or
pushl
mov
outsb
insl
jae
cs
int3
cmpsl
mov
cmp
movsb
and
dec
lret
adc
sub
xor
lods
ret
mulb
in
cmp
xchg
idivl
add
outsb
enter
jg
movsl
adc
mov
ljmp
aas
mov
pushf
pop
lods
das
mov
repnz
daa
rclb
inc
mov
xchg
push
mov
cmpsb
shr
ds
xchg
push
jge
inc
push
xor
inc
jb
cmp
cs
pusha
and
lods
xchg
arpl
add
incb
push
mov
push
in
repnz
out
fldcw
dec
fists
and
mov
out
xchg
jo
jne
cmp
subb
pop
xchg
xchg
pop
mov
cmp
dec
lods
sahf
mov
movsl
sbb
mulb
and
movsw
xor
xchg
xchg
push
aad
data16
leave
data16
mov
or
bnd
lret
push
mov
inc
lock
adc
dec
lods
sub
add
jo
in
jg
push
popl
jecxz
pop
jne
cld
bound
push
jmp
rol
out
filds
pusha
mov
in
xor
push
and
push
and
push
jne
imul
loopne
pop
stos
cmc
jge
push
mov
shl
sbb
xchg
lock
sub
jp
addr16
out
sub
pop
and
mov
jnp
inc
mov
ss
cmp
cmpl
xor
shll
fildl
mov
add
xchg
icebp
mov
sub
xchg
xchg
adcb
push
cwtl
xor
sub
es
pop
loop
jg
inc
popa
aam
and
and
mov
cmpsb
dec
or
inc
xor
push
and
addr16
push
dec
subl
subb
xlat
dec
or
fdivrs
je
nop
inc
xchg
mov
gs
and
mov
or
sbb
hlt
aam
pop
dec
inc
into
daa
mov
fldenv
imul
mov
out
and
sbb
jns
int3
lock
mov
pop
test
xorb
cmp
sub
fidivrl
insb
dec
sub
inc
mov
sbb
and
sar
jo
jp
cmc
mov
insl
xlat
inc
fcoml
lock
jmp
shrb
pop
int
lods
mov
xor
mov
dec
pop
push
cmp
divb
rcl
xorl
mov
stos
in
test
and
mov
inc
ss
call
jge
mov
jl
jae
sub
mov
cmp
or
cmp
adc
and
or
imul
add
jne
mov
out
cmp
jecxz
jge
jns
shrb
pop
pop
sbb
xchg
cmp
add
sbb
inc
adc
jle
cld
std
loope
ror
or
jmp
xorb
and
rorb
push
mov
pop
aaa
inc
mov
mov
and
inc
into
push
mov
cs
movsb
mov
mov
cld
dec
lcall
loope
xchg
inc
xor
dec
push
cmpsl
aaa
das
pusha
fs
cmpsb
enter
mov
mov
or
sub
inc
test
push
and
mov
lahf
pop
test
rclb
ss
inc
push
or
push
jge
add
int
mov
jmp
jecxz
cmp
loop
jge
ret
idivl
mov
xlat
rorb
popf
ljmp
push
add
adc
imul
jo
into
test
stos
in
dec
lods
cmp
inc
ret
mov
jle
cld
push
int
cld
adc
sbb
shl
jo
call
inc
jge
mov
cs
ret
outsb
jb
pushf
jnp
movl
jmp
xlat
in
mov
fdivr
push
inc
stos
test
or
push
jo
imul
dec
xor
stos
dec
inc
scas
sarl
mul
pop
popa
sub
push
pop
add
ficoms
ret
mov
inc
sub
fsubl
xor
mov
push
inc
jnp
add
mov
adc
popl
inc
mov
dec
cmc
iret
push
clc
aaa
adc
outsb
pop
ljmp
add
out
mov
sub
lock
and
add
push
dec
and
mov
sub
rcrb
arpl
dec
outsl
stc
testb
idivb
mov
inc
iret
call
adc
mov
xchg
das
adc
mov
movsl
aas
aam
mov
push
out
addr16
sbb
adc
popa
sbb
cli
jle
dec
pop
and
mul
aaa
jle
outsl
pop
daa
xchg
loopew
hlt
int
rep
fidivl
mov
dec
and
mov
sbb
mov
or
bound
pop
inc
inc
push
js
ret
pop
test
cmp
std
data16
in
movsb
inc
pop
jnp
add
repnz
test
into
sbb
jp
dec
ror
faddl
sub
inc
push
sub
add
push
mov
rclb
leave
add
int3
fiadds
test
mov
xchg
sub
pop
jns
ficompl
clc
adc
fstpt
mov
fnstenv
mov
ljmp
cmpl
jecxz
lcall
sub
pop
mov
xchg
mov
leave
mov
imul
daa
vcvttss2si
scas
aam
push
sub
imul
out
arpl
lcall
pop
insb
std
mov
fidivs
test
mov
cmp
sbb
mul
dec
fbld
mov
ljmp
sti
cmc
fistps
mov
dec
je
push
xor
push
sbb
xor
testb
hlt
aad
lea
lcall
lods
xchg
mov
pusha
std
fmuls
repnz
cmp
pop
dec
mov
aas
jnp
stos
sbb
dec
inc
add
dec
orl
test
clc
lahf
insl
and
jp
sahf
mov
pusha
dec
loope
adc
inc
ss
mov
xchg
adc
push
dec
dec
jne
push
pop
cmp
xor
cltd
xchg
or
mov
push
subb
lods
pop
cmp
mov
push
mov
xchg
cwtl
xchg
jge
push
cmp
in
jne
js
repnz
sbb
stos
mov
mov
sbb
arpl
sbb
js
ds
push
sbbl
mov
enter
pop
jnp
andb
xchg
cmp
ja
mov
fs
mov
icebp
cltd
out
insb
divl
data16
lock
sbb
imul
scas
mov
mov
cmp
inc
pop
and
or
shl
cmp
push
fs
das
divl
cltd
mov
jne
int3
movsl
lret
or
jne
fidivrs
test
push
out
out
lret
push
inc
xchg
arpl
fsubrs
jne
std
inc
mov
fsubrs
cwtl
out
or
jg
ficomps
xchg
negb
dec
pop
and
leave
xor
adc
dec
pop
inc
fidivrl
xor
orb
icebp
lds
adc
or
in
ja
gs
jo
adc
std
xor
scas
into
cwtl
aad
xor
dec
mov
mov
sub
push
flds
cmp
jmp
cld
mov
add
fisttpll
call
and
clc
out
sub
loopne
fs
inc
push
and
mov
test
rcll
icebp
je
ljmp
testb
dec
stos
push
outsl
ja
mov
mov
add
jmp
pop
div
fisubrs
mov
es
mov
cmp
hlt
pop
scas
mov
mov
mov
mov
sub
ror
cli
and
test
ja
mov
adc
lret
or
jmp
xor
adc
shrl
das
mov
mov
es
sete
outsb
loop
cmp
dec
add
fldt
ds
idivl
cli
jl
inc
scas
xor
je
sahf
popa
pop
fadds
hlt
jns
xor
movsb
xor
out
xor
mov
flds
mov
sub
xor
sahf
xor
ds
subb
shrl
rcll
les
and
movsl
rcrb
nop
adc
jge
out
sub
fldl
movsb
add
nop
call
into
add
adc
testl
adc
imul
mov
push
push
jns
or
pop
jae
mov
dec
jb
andb
mov
notl
cli
push
int3
das
mov
push
push
aaa
lcall
mov
cwtl
fsub
call
sub
adc
aad
insl
punpcklwd
stc
push
test
sbb
scas
cmp
pop
leave
bound
stos
jge
lods
push
and
xor
arpl
dec
sbb
xchg
hlt
xchg
sbb
adc
ds
repz
inc
int
cld
jp
push
mov
lahf
sub
lods
sub
icebp
aam
push
jns
shl
mov
adcb
fsubs
cmpsl
mov
fsts
push
lahf
div
inc
ds
imul
push
jnp
out
hlt
outsl
cmp
dec
push
xlat
mov
jg
sbbb
mov
call
ds
lahf
pop
push
ss
mov
xchg
mov
adc
or
adc
xchg
add
test
jle
xchg
xor
mov
push
das
dec
or
dec
sbb
adc
lods
scas
nop
iret
fwait
clc
sbb
mov
movb
lods
pop
cmp
sub
rorl
mov
insl
jne
sbb
into
cld
in
sub
stc
and
popa
sbb
pop
nop
push
dec
mov
das
push
xor
inc
roll
cli
pop
lock
pop
cmp
add
subl
lahf
js
jp
js
xor
pop
adc
inc
aaa
jnp
jmp
sbb
mov
icebp
lods
inc
pop
adc
inc
sbb
outsl
jl
mov
fldl
fdivr
aas
lahf
xor
lahf
or
insb
add
fnsave
out
mov
mov
adc
mov
mov
push
push
in
push
loop
insl
cld
mov
shll
mull
dec
sti
cmc
enter
stos
gs
sub
add
inc
mov
insl
sbb
mov
adcl
hlt
inc
scas
ja
sbb
pop
mov
adc
or
adcl
int
push
pushf
js
mov
nop
fcomps
repz
popa
xor
test
lret
fildll
outsb
ss
popf
out
push
loopne
xchg
jne
pop
mov
cmpsb
cmpsl
loopne
popa
pushf
movsb
popf
jae
add
jp
fnstenv
adc
outsl
xchg
sbb
inc
and
sbb
inc
popa
ret
pop
in
adc
xorb
mov
gs
xor
sbb
sbb
stc
mov
pop
rep
add
mov
add
fadds
loope
push
dec
cmpsl
lods
mov
inc
sbb
in
cltd
daa
cmp
adc
mov
add
sub
stos
pop
cld
inc
out
cmpl
cmp
lea
pop
dec
aad
mov
outsl
xor
popf
sub
fldl
push
and
cld
iret
xchg
sbb
jne
or
aam
adc
xor
lcall
and
stc
icebp
fdiv
push
inc
push
jne
xor
loope
leave
add
movsb
mov
je
stos
inc
or
add
lcall
pop
test
sub
push
lahf
call
xchg
dec
repz
pop
loope
ljmp
in
xor
das
roll
jg
jo
or
ror
xchg
fdivp
and
mov
dec
fists
mov
stos
addl
mov
dec
stos
adc
clc
js
mov
shlb
rolb
aaa
and
adc
xor
lret
pop
adc
push
sub
dec
mov
xchg
mov
pop
push
cmc
inc
imul
dec
mov
dec
cmc
push
mov
push
mov
nop
add
sbb
data16
add
pushf
push
pop
pop
or
lock
inc
add
sub
push
pop
in
shll
nop
xor
mov
dec
out
jbe
push
xor
pop
adc
jns
out
lahf
push
sahf
jp
mov
mov
int3
fstp
psllq
scas
nop
stos
out
in
negb
sarl
dec
gs
fcoml
adc
cmp
jl
dec
repnz
ss
and
cmp
dec
mov
or
testl
pushf
sbb
out
imul
xor
sarl
or
sarb
and
jno
test
idivl
andl
sbbb
dec
jns
jp
aad
dec
mov
jnp
push
gs
aam
add
popa
mov
xchg
push
jl
insb
and
mov
and
cmp
dec
cli
fldz
shr
mov
divl
into
and
pop
arpl
test
pop
dec
in
sbb
or
mov
inc
adc
lcall
in
pop
test
cmpsb
test
les
add
insb
mov
lds
inc
dec
xlat
lret
pop
in
sbb
dec
sub
jg
push
mov
pushf
and
mov
test
push
jbe
fidivs
pop
sbb
adc
in
sbb
dec
xor
add
insb
les
sub
ja
lret
fs
xchg
loopne
repnz
push
aad
pusha
mov
cld
arpl
jge
fstpt
inc
repz
or
aam
xchg
sbb
outsl
ret
push
pop
pop
rcrb
lahf
test
sub
pop
sbb
inc
pushf
dec
aam
cmp
xchg
pop
xchg
dec
cmp
inc
rcrl
sub
xor
inc
daa
push
adc
cmp
decb
sarl
test
xchg
loop
cmp
iret
add
rol
push
push
jo
sub
mov
xchg
xor
imul
inc
push
mov
dec
sahf
in
sub
lods
in
dec
pop
adc
out
notb
pop
adc
insb
jns
xor
pop
or
mov
popa
or
fsubrp
sbb
inc
and
sbb
in
cmpsl
stos
jb
jbe
pop
test
ss
idivl
outsl
gs
push
inc
xorl
and
xor
ja
sbb
mov
repz
push
xor
push
mov
loopne
pop
xchg
negl
jae
leave
pop
or
test
test
out
push
adc
clc
xor
jl
jmp
mov
xchg
iret
lcall
fiadds
ret
aad
pop
lcall
daa
or
inc
movsb
int
subl
cmp
push
sub
hlt
adc
sbb
mov
ret
xor
add
jecxz
lea
es
xorb
out
cmp
adc
stos
fcoms
lods
mov
push
cmpsl
xchg
adc
sub
push
jg
jmp
add
push
das
add
inc
dec
jno
sub
push
idivb
fsubrl
rorl
adc
clc
daa
inc
das
mov
in
fptan
outsl
or
lcall
inc
mov
and
add
cltd
sbb
sbb
adc
mov
push
dec
cmp
sub
test
test
cwtl
sarb
sbb
xchg
adc
sbb
std
fiadds
and
cltd
and
lret
mov
add
bound
xor
jns
movsl
icebp
mov
in
mov
imul
shll
add
out
jp
push
push
sbb
inc
clc
push
cwtl
inc
cld
sahf
jmp
xor
test
cltd
inc
push
movsb
xchg
mov
in
jae
inc
or
mov
cmp
adcb
or
pop
mov
in
mov
aam
xchg
sub
push
cltd
dec
insb
mov
jp
fsubr
in
and
sbb
pop
sbb
adc
mov
push
stc
add
xlat
rcll
jle
sarl
cmpsl
push
imul
sarb
ss
xor
sub
ljmp
aas
repz
ljmp
fwait
aad
iret
faddl
jmp
in
cld
and
pusha
andnps
mov
aam
in
or
mov
xchg
and
push
aaa
pop
out
pop
lret
dec
mov
std
and
cmp
sbb
dec
sub
adc
mov
cmc
scas
cmp
mov
pop
inc
loopne
bound
push
into
sbb
movsl
dec
lock
in
cmpsl
pop
jecxz
mov
dec
mov
cmp
xchg
movl
pop
cs
sub
clc
sub
sbb
into
pusha
sub
lods
nop
and
in
sbb
lret
push
dec
dec
cmp
out
mov
add
xor
xor
push
mov
mov
insl
fstl
out
or
bound
pop
sbb
in
cmp
addr16
mov
dec
sub
inc
inc
jae
fcom
lock
add
sub
andl
out
or
shlb
daa
jecxz
std
mov
test
dec
jp
in
rorb
sub
xor
or
xor
adc
loope
xchg
jne
dec
stc
xlat
rorl
jmp
dec
fistpll
and
fldcw
push
fadd
fwait
push
cs
bound
icebp
ret
and
xchg
and
leave
stc
arpl
xchg
in
push
or
icebp
push
dec
adc
xchg
push
data16
jmp
xlat
pop
cli
jl
arpl
and
jno
daa
lahf
cmp
mov
cs
pop
cmpsb
mov
call
std
data16
xor
sbb
int3
inc
sub
stc
dec
lock
mov
inc
cs
push
and
lods
dec
and
sbb
inc
add
loopne
mov
and
lret
cmc
push
push
xchg
sub
mov
cld
push
rcrb
lods
call
ret
cmp
jb
or
or
pop
clc
mov
scas
inc
popf
mov
stos
negl
jae
pop
sbb
adc
xor
inc
or
push
inc
aas
incb
push
mov
ljmp
adc
pop
ret
dec
mov
sbb
or
push
mov
enter
mov
cmp
jmp
stc
repz
xor
iret
or
shll
stc
jbe
pop
lea
add
inc
repnz
lcall
sub
pop
xor
push
movsl
inc
xchg
pop
mov
int3
pop
fcomp
sub
xchg
sub
jmp
repnz
das
adc
xchg
icebp
mov
mov
icebp
add
adc
mov
fdivs
cmp
push
hlt
iret
xchg
inc
jp
sarl
pushf
mov
aaa
or
pop
xchg
cmp
dec
cld
add
lret
pop
mov
pop
mov
cmpsb
daa
xor
gs
mov
mov
fisttpll
aaa
loop
test
pop
rcll
popf
inc
or
loopne
lahf
mov
shr
push
adc
repnz
out
mov
fistpll
addr16
js
dec
cmp
mov
test
pop
out
push
outsb
jge
mov
in
mov
push
movsb
mov
nop
inc
pop
pop
jno
lcall
xchg
or
stos
jle
gs
adc
and
inc
repnz
cmp
mov
lock
pop
daa
shll
out
adc
sbb
sahf
insb
mov
xchg
movsb
add
pop
loopne
std
das
jmp
idiv
dec
pop
push
dec
adc
sub
jnp
mov
addr16
jge
push
xor
out
and
or
dec
stc
stc
daa
jno
push
cmp
cmp
aaa
mov
js
push
insb
data16
jmp
dec
arpl
out
pushf
insl
rcll
or
out
jae
mov
lahf
test
mov
push
stos
xor
outsb
inc
push
adc
or
push
cld
in
or
jns
dec
mov
jae
cli
lods
pop
sti
push
mov
cmp
ja
inc
lea
or
faddl
jg
insb
xchg
xor
out
sub
jmp
cmp
mov
xor
mov
mov
push
mov
mov
cmpsb
call
lret
add
mov
incl
clc
movsb
sarl
dec
bound
das
xor
mov
fsubrs
inc
loope
push
xlat
lea
mov
or
mov
insl
cmp
data16
movsl
fs
push
jl
mov
pop
or
jne
mov
mov
addb
outsl
lret
sub
into
cmpsb
ss
jae
pop
pop
adc
cmp
shr
imul
das
sbb
cmpl
adc
repnz
sub
ljmp
adc
lock
xchg
xor
push
add
scas
arpl
lcall
sub
clc
or
xor
pop
xor
jecxz
mov
notl
hlt
pop
xor
fistpl
adc
jne
pop
mov
cmp
sarb
mov
push
xchg
mov
jg
jno
cmp
in
cmc
in
adc
in
dec
fnsave
xchg
lahf
xchg
mov
lcall
test
mov
jbe
xchg
xor
cmpb
hlt
xor
xchg
or
mov
mov
cmpsb
dec
mov
cmp
lea
mov
or
fwait
xor
inc
ds
repz
jge
cmpsb
mov
xor
cli
xchg
imull
bnd
mov
aad
mov
je
dec
push
lret
xor
iret
cwtl
adc
xor
das
xlat
cwtl
shr
into
jg
movsb
mov
popa
jae
pop
lahf
in
test
push
jb
mov
jge
stc
and
xor
cli
push
mov
dec
fwait
out
mov
mov
scas
lahf
cmc
push
lds
add
lcall
setbe
dec
mov
inc
nop
fiadds
or
lods
add
cmp
sahf
pop
push
fwait
cwtl
cmp
adc
gs
popa
cmp
jmp
aad
mov
jns
lahf
cmp
leave
cmp
lret
xor
or
or
sti
add
frstpm(287
fisubl
sbbl
idivb
or
testb
fwait
mov
stc
push
or
into
jecxz
mov
sub
test
in
arpl
and
xor
ffreep
dec
aad
aad
mov
call
test
not
pushf
repz
inc
je
repnz
sbb
push
arpl
dec
cmp
cmp
mov
and
push
rcl
aam
sub
jecxz
pop
jne
cmpsl
pusha
mov
fcmovu
adc
cli
pop
cmp
cli
jg
repz
xor
enter
repz
mov
lcall
cltd
pushf
ror
cmp
dec
shrb
in
repz
outsb
in
mov
rcrl
inc
iret
stos
cmpsb
scas
popf
jbe
outsb
adc
pop
test
imul
jne
out
push
xor
or
mov
gs
in
out
adc
inc
ja
jmp
in
stos
push
mov
bound
push
xchg
adc
sbb
rcl
in
jno
push
daa
pop
xlat
push
adcb
jp
gs
and
jle
mov
sti
lcall
das
cmp
sahf
call
and
cmp
lahf
xchg
xchg
cmp
rcll
push
daa
stc
add
pop
icebp
lea
repz
xchg
or
push
push
divb
mov
mov
rcrb
rcll
int
lock
data16
andl
test
lret
or
daa
add
add
pusha
in
lds
lods
sbb
fistps
dec
enter
xchg
pop
or
cld
fcomps
mov
imul
cwtl
dec
andl
push
xchg
xchg
sbb
inc
inc
daa
repnz
out
scas
pop
repz
xchg
hlt
jae
sbbb
pop
cmp
int3
push
jle
out
js
clc
pushf
pop
outsb
insb
pop
and
fwait
cli
jecxz
mov
cmc
stos
mov
jmp
lea
xchg
in
repnz
addr16
pop
adc
mov
xchg
pop
loope
adc
dec
aas
or
ss
push
sub
push
add
outsl
cli
incl
pop
insb
cmc
into
add
shl
pop
pop
es
pop
pop
mull
dec
push
das
mov
mov
ret
jbe
jns
jns
subb
aam
xor
lret
outsl
mov
push
xchg
cmp
jecxz
add
pop
mov
setl
mov
and
lods
lret
fs
popa
std
lret
push
mov
push
fiadds
popf
mov
popa
call
push
sub
subb
inc
push
outsb
mov
mov
lods
fs
mov
int
dec
and
and
andb
sbb
movsl
dec
dec
popa
xchg
int3
aam
loopne
lods
push
xchg
inc
int
mov
test
js
xchg
xor
push
pop
loop
icebp
stos
or
out
ret
rclb
das
jle
lret
int
lahf
dec
and
xor
lods
dec
mov
inc
mov
adc
roll
mov
loop
and
jbe
fstps
add
xchg
pop
mov
jo
xlat
sbb
mov
push
mov
sub
mov
and
sub
sbb
push
incl
stos
mov
sbb
mov
scas
jne
into
inc
sub
sbb
cmp
notl
push
push
sub
jp
sbb
mov
in
sbb
test
sbb
fsubrp
mov
adc
add
stos
adcl
mov
scas
popf
add
pop
aam
iret
out
dec
push
inc
lods
add
js
fiaddl
and
mov
into
xchg
xchg
jae
jmp
shrb
xor
dec
ror
insb
inc
xchg
jecxz
xchg
add
cltd
fsubrs
and
lock
test
adc
sti
sub
push
icebp
fsubl
mov
mov
mov
jno
jno
inc
mov
sti
jnp
mov
stc
fcomps
stc
cli
mov
stos
jle
push
clc
std
inc
test
mov
dec
out
das
xchg
je
hlt
and
sub
lods
sbb
pop
in
aam
dec
dec
xchg
jo
das
stos
xchg
pop
jmp
test
xchg
mov
sbb
xchg
dec
mov
and
aaa
xchg
dec
scas
int
test
jg
jb
sbb
rol
inc
mov
jnp
xor
movsl
shlb
xchg
cwtl
sbb
xor
or
sub
and
pushf
testb
fstps
ds
sarl
out
in
sub
mov
pushf
adc
mov
lds
in
push
dec
stc
mov
lret
push
movsb
mov
adc
push
sar
insl
cltd
mov
xor
scas
cmp
pop
cli
es
imul
xchg
popf
pop
push
iret
inc
mov
dec
sub
fcompl
ret
je
push
and
xor
jl
out
pop
ja
iret
pushf
clc
or
add
push
xor
cli
jl
ja
xor
out
daa
ljmp
xor
pop
and
and
mov
or
xchg
je
shrb
xchg
jae
mov
data16
or
mov
push
xlat
incb
xor
xor
cmp
aas
xchg
dec
sub
ret
or
push
outsb
mov
mov
sub
add
or
push
pop
and
add
dec
imul
sbb
mov
popf
mov
mov
fisttps
scas
orl
xor
jo
aam
mov
call
mov
out
in
inc
mov
mov
int
jbe
pop
lahf
xor
and
fisttps
or
mov
int
xchg
jp
mov
jg
push
icebp
add
fwait
add
out
jl
push
mov
iret
pop
push
cwtl
aaa
jnp
jmp
pop
and
jp
mov
xlat
push
fimuls
popf
lock
jp
ret
push
push
or
push
into
adc
gs
or
cmp
adc
mov
ja
sub
lcall
fistpl
or
popa
imul
dec
cmpb
cs
mov
lock
stos
jle
pop
push
mov
scas
push
mov
xchg
add
push
or
xlat
test
aas
xchg
inc
pop
sub
add
insl
pop
pop
ret
sub
pop
scas
fidivrs
push
sbb
adcb
or
js
out
mov
rolb
nop
and
cmp
es
adc
test
mov
sar
scas
fdivl
es
cs
arpl
mov
outsl
icebp
arpl
jl
cmpsb
mov
call
out
jge
jb
sbb
add
fdivl
inc
lret
rolb
push
sbb
ss
push
sbb
add
jmp
repz
or
pop
je
movsb
test
xchg
mov
push
ret
jg
test
sbbb
cmp
test
and
dec
mov
sbb
or
cld
aam
scas
add
fbstp
aam
add
inc
jbe
cmpsl
pop
xlat
or
cmpsb
pop
in
pusha
les
out
hlt
add
push
mov
or
mov
and
test
sub
stos
jns
xchg
daa
jbe
xlat
data16
pop
repz
lock
mov
pop
and
sbb
xor
push
jno
dec
ja
sub
imul
sbb
mov
xchg
mov
and
in
test
lods
mov
cwtl
es
or
push
pop
inc
scas
outsl
imul
mov
js
xchg
add
loope
dec
imul
ljmp
sahf
shlb
enter
push
adc
fimuls
fwait
jae
and
xor
mov
mov
or
jno
mov
cmp
fwait
dec
mov
add
xor
push
push
add
jns
call
mov
mov
cmc
mov
outsl
push
testl
add
bound
jecxz
mov
inc
sub
popf
ret
jl
cmp
int3
sub
mov
dec
and
mov
rcr
orl
add
fwait
shl
ud1
mov
repz
push
mov
inc
cwtl
push
stc
xchg
test
inc
mov
and
lret
adcl
and
mov
push
sti
jb
loope
dec
adc
ds
dec
sbb
mov
repnz
fbstp
fs
add
sbb
lock
testl
sbbb
or
flds
jmp
dec
test
mov
nop
xlat
push
cmp
fcoml
divb
mov
jo
sahf
in
cmp
pop
adc
pop
dec
loopne
into
leave
lahf
cld
mov
inc
das
sbb
jp
inc
mov
sti
addr16
mov
or
pop
negl
popf
loope
bound
xchg
js
or
mov
cld
inc
loopne
or
jmp
inc
xchg
sbbb
cwtl
out
sub
xor
cmp
jns
pop
xchg
cmpsl
gs
pushf
adc
aaa
push
lods
pop
jecxz
jecxz
scas
nop
sbb
and
inc
mov
sub
and
push
dec
xor
pop
orb
insb
testb
jo
imul
scas
xlat
movsb
sti
xchg
mov
lahf
dec
mov
jno
push
sub
loopne
jnp
xchg
or
das
add
push
mov
pop
enter
pop
pop
sbb
shll
repnz
sub
cmc
cli
sub
test
loope
rorb
cmp
xor
and
xchg
test
in
out
or
jl
stos
push
push
lods
scas
aaa
add
mov
jo
cmp
shr
shll
or
fnstcw
jg
arpl
add
repnz
ja
mov
cmpsl
cs
jnp
mov
and
xchg
and
and
push
pop
push
nop
push
out
inc
icebp
das
lahf
popa
dec
loop
pop
cli
cmpsb
lock
adc
mov
leave
out
push
mov
xchg
jl
and
fwait
jg
xlat
clc
repnz
jns
int3
test
mov
mov
or
jno
repz
cmp
push
outsb
sbb
lock
out
loopne
pop
rcll
insb
sub
in
pusha
std
lcall
pusha
cli
or
add
insl
hlt
mov
lret
rorl
daa
ds
push
cmp
scas
mov
cmpsb
aam
into
arpl
push
shlb
add
pop
pushw
sub
out
xor
js
lahf
shll
test
notl
imul
dec
xchg
inc
push
lods
dec
jne
mov
aaa
cmpsl
mov
or
push
ror
xor
mov
xchg
cmpsb
pop
jbe
xchg
push
js
and
adc
nop
mov
test
mov
rorl
cmpsb
fs
loopne
es
mov
xchg
out
arpl
mov
pop
and
pushf
add
jl
cwtl
mov
fldt
loopne
loope
jmp
fmuls
push
xor
dec
mov
sub
movsb
xor
inc
enter
jmp
leave
push
push
mov
in
push
jb
sub
mov
mulb
aas
push
scas
dec
jbe
add
mov
jge
jcxz
stos
sub
fists
cltd
call
mov
push
ret
stos
mov
loop
repz
xor
inc
add
popa
mov
test
stos
test
sbb
xchg
fstpt
popf
sbb
scas
stc
loop
sub
daa
cmp
scas
mov
push
jmp
push
lods
mov
loopne
cmp
or
add
shll
popf
ljmp
jae
loope
inc
add
rcrl
lds
pop
sbb
sahf
push
ja
lcall
pop
ja
mov
ss
or
xchg
aad
in
jl
fidivrs
push
das
cmp
icebp
stc
sub
adc
repz
and
mov
adc
insl
sub
cmp
mov
sbb
dec
cli
adc
sbb
xchg
sbb
mov
pop
or
adc
addr16
movsb
mov
mov
jl
and
int3
rcll
rdtsc
mov
pushf
lahf
adc
and
rclb
pop
mov
fadd
jg
pop
cmp
int3
push
and
fwait
adc
ret
notb
push
jne
add
ja
repz
cmpsb
cltd
and
mov
fcomps
jmp
scas
je
icebp
mov
imul
push
lcall
es
mov
add
insl
jle
and
push
icebp
mov
sbb
dec
fidivl
ja
fidivs
and
fcomip
cli
jb
in
call
jno
sbb
int
pop
add
xor
loope
sub
mov
xchg
insb
ss
dec
push
push
scas
inc
jnp
std
icebp
dec
ljmp
and
push
in
jnp
jp
mov
jle
add
or
in
jbe
ret
pop
push
pop
sub
pop
jno
xchg
mov
pop
or
faddl
adc
or
fsubrs
and
mov
out
inc
stc
call
jae
xor
sub
insl
iret
sbb
lcall
adc
dec
enter
mov
sbb
inc
jo
dec
fmull
insl
or
jns
xchg
jbe
fdivr
sub
mov
mov
jns
mov
int3
mov
je
pop
insb
mov
repz
cwtl
inc
sbb
inc
fsub
xor
mov
addr16
lods
sub
iret
dec
mov
icebp
cmp
jno
sub
inc
mov
jge
je
ljmp
cmp
cmp
push
and
xchg
jl
push
mov
sub
pop
inc
ljmp
mov
cmp
js
sahf
subb
adc
cs
add
add
or
adc
loop
movsb
out
test
int3
push
sub
out
adc
xchg
cmpsl
notl
cli
and
test
rcrb
inc
inc
pop
jp
push
or
jmp
inc
cmp
sub
sub
loope
push
in
mov
dec
testb
dec
pop
xor
push
sahf
sarl
fbstp
imul
ficompl
sub
icebp
mov
inc
add
sahf
fmul
rorl
mov
cwtl
push
dec
insb
xor
lods
cmp
jbe
iret
cmp
shll
add
adc
or
push
stos
sub
xchg
lret
xchg
or
sub
xchg
sub
jns
sbb
sti
inc
arpl
test
dec
inc
push
insb
fisubl
mov
sbb
fiadds
inc
xchg
push
xchg
loop
sbb
inc
pop
xchg
mov
addr16
inc
insb
rorb
ljmp
data16
pop
lahf
push
push
pop
jmp
sub
add
stos
es
stos
enter
movsl
pop
inc
sub
sub
mov
sub
cld
adc
mov
enter
ds
mov
or
data16
aam
pop
xchg
jle
push
mov
dec
xchg
pop
cltd
jb
add
adc
mov
test
outsl
in
out
mov
push
add
and
test
adc
jge
mov
cmp
xor
movsl
inc
jecxz
outsl
out
ss
push
call
add
add
loope
stos
mov
add
adc
clc
repnz
xor
daa
jmp
xchg
push
lock
fldt
loope
movsb
push
loop
mov
lcall
sbb
or
dec
loopne
out
jne
scas
test
fwait
movsb
pop
popf
in
dec
pusha
inc
xchg
mov
cvttps2pi
mov
xchg
xlat
xchg
lretw
jge
jl
in
push
xor
inc
push
cmpl
das
das
push
aam
rcr
pop
xor
jle
sbb
test
mov
leave
and
ja
rorl
popf
dec
ss
imul
sub
cmp
jae
sub
ds
mov
jmp
pop
mov
aas
stos
or
cld
test
sahf
inc
jecxz
fwait
push
in
js
popa
stc
xor
int3
gs
and
loopne
pop
repnz
loop
test
mov
ds
in
jge
xchg
lock
mov
aam
enter
lods
bound
ror
or
mov
dec
adc
jle
daa
sub
cmc
jne
jmp
and
stc
dec
or
mov
and
push
sub
loopne
repz
pop
push
popa
pop
pop
daa
ja
movsb
xchg
clc
ret
scas
mov
inc
lods
aad
test
add
xchg
push
dec
std
xchg
mov
sbb
je
stos
stos
lea
cmc
popf
pop
inc
ljmp
jmp
or
mov
jb
fidivrs
pop
mov
fdivrp
jo
sbb
negb
xchg
int
lock
xchg
cmp
ret
ret
or
aaa
out
insb
enter
jl
testb
inc
xor
aas
hlt
cli
jecxz
xlat
mov
mov
mov
cmp
jnp
jl
pop
mov
and
in
rclb
dec
clc
pop
or
in
jae
in
adc
or
mov
push
dec
arpl
test
adc
inc
add
jae
imul
cmp
mov
stc
inc
or
icebp
gs
adc
ss
gs
pushf
cld
cmpsl
mov
testl
mov
push
rcrb
test
out
stc
or
jne
addb
cmpsb
mov
mov
push
or
adc
mov
sub
aad
or
test
cmp
sahf
ret
and
sti
inc
and
cmpsb
adc
xchg
iret
xor
sub
int
repnz
inc
out
lea
psubsw
pop
sub
sahf
or
adc
push
lea
test
rclb
imul
jl
mov
xchg
pop
in
pop
pusha
mov
call
mov
stos
sbb
shl
jmp
push
mov
popf
adc
push
stos
pushf
push
out
pop
lds
subb
add
push
cltd
movq
lret
mov
sub
and
pop
and
imul
hlt
mov
pop
cltd
mov
or
test
jecxz
test
insb
pop
addr16
push
fbld
repnz
ljmp
aas
xor
in
inc
loope
xchg
xor
pop
outsl
dec
call
xchg
cmpsb
inc
jle
repnz
sbb
dec
and
push
mov
loopne
or
movsl
je
and
pop
jmp
or
popa
add
mov
mov
cmc
mov
sub
fsubrs
xchg
je
pop
and
pop
fwait
sub
scas
jnp
fdivr
cvtps2pd
inc
inc
push
inc
and
in
add
mov
lds
pop
pop
test
adc
aad
daa
or
outsb
hlt
push
inc
imul
lds
cmpsb
pop
or
pop
sub
xchg
dec
add
and
inc
shll
dec
push
or
in
mul
push
mov
adc
stos
xor
popf
push
add
cmp
pop
sub
and
loop
fimuls
movsl
jnp
sbb
mov
ret
in
rol
aam
sbb
cmp
cmc
adcl
add
aaa
scas
rclb
or
inc
aaa
adc
push
imul
xchg
xchg
xor
sbb
dec
mov
pushf
xchg
leave
pop
adc
sub
mov
out
jns
cmp
sbb
inc
loop
popf
xor
lret
jp
sub
mov
out
lcall
mov
dec
sub
jne
cltd
mov
ret
gs
sbb
daa
mov
xchg
lahf
mov
jo
js
adc
xor
fnstcw
sbb
stos
int3
inc
pushf
das
inc
cmp
lods
mov
fbld
cmp
and
jb
sahf
cld
adc
mov
fists
and
lret
mov
ds
and
ficoms
ljmp
shll
lcall
shrl
xlat
das
test
daa
jne
dec
xchg
sti
pop
iret
xor
cs
ljmp
repz
stos
inc
fcoms
cmp
cmpsl
shl
or
mov
sbbl
cli
jb
pop
loop
inc
imul
or
pop
mov
insb
ljmp
mov
rcrb
jns
insl
mov
fcompp
scas
xchg
loope
out
fisttpll
lods
fnstcw
adc
sub
mov
popf
testb
sub
daa
or
adc
adc
mov
pop
jmp
loope
loope
popf
push
outsb
pop
test
ret
xor
pop
sahf
and
cli
push
sbb
aas
rcll
xor
mov
add
add
sbb
lret
mov
push
bnd
shll
andl
test
cmp
jl
icebp
mov
add
pusha
out
incb
adc
sub
in
xchg
mov
xor
sbb
fnstsw
shll
mov
xor
cmpl
cmpsb
cmp
or
lret
pop
cmp
das
push
enter
xchg
push
mov
mov
adc
mov
cmp
pop
inc
sahf
or
sbb
jno
xlat
sbb
adc
popa
andl
mov
cmp
push
xchg
inc
dec
mov
push
ljmp
jae
in
jb
push
testl
sub
cmp
pop
jle
xchg
lods
lahf
and
jns
mov
xchg
flds
pop
mov
add
scas
push
lret
mov
or
insb
gs
ret
jno
pushw
or
inc
adc
int
jp
shrl
mov
adc
in
lock
cs
int3
push
in
jp
jp
jge
cwtl
fld
lahf
xlat
lahf
mov
jmp
cmpb
fldt
stc
adc
mov
or
jo
xor
stos
insl
cs
mov
int
or
lret
xchg
mov
jecxz
add
and
pop
or
dec
shll
cwtl
faddl
mov
adc
data16
xchg
mov
int
pop
popa
mov
hlt
cwtl
pop
sbb
xlat
in
mov
std
test
jno
cmp
out
sahf
sub
sarl
push
loop
jle
mov
out
mov
ret
in
pop
je
insl
into
mov
int
xrelease
or
lea
cmpsb
pop
mov
test
pop
stos
lret
lods
in
push
arpl
insb
jge
sarb
fisttpl
or
sti
out
and
fwait
mov
sub
add
loope
jno
add
xchg
out
pop
dec
mov
jg
test
dec
dec
xchg
mov
pop
aaa
daa
pop
push
insb
cmp
dec
sarl
stos
add
test
pusha
arpl
clc
xor
mov
fistps
ds
pop
inc
sti
or
int3
jo
testl
mov
test
xor
insl
cli
or
in
test
aad
loope
test
inc
inc
jg
je
repz
rcr
pop
mov
mov
add
cmpsb
sbb
dec
push
pop
cmp
ds
insl
rorb
add
cmpsl
dec
cmp
fs
mov
test
pop
pop
movsl
lods
adc
jle
cli
pop
push
inc
popa
sbb
push
sbb
dec
xor
xlat
mov
cwtl
scas
pop
inc
loopne
fcmovnbe
in
mov
fisubl
loope
decl
adc
cs
inc
gs
rorl
adc
call
mov
fbstp
fstpt
test
pop
adc
dec
es
push
jg
xchg
lahf
push
clc
pop
xchg
mov
mov
mov
insl
cmp
addr16
enter
mov
ret
lahf
xchg
in
cmp
mov
and
mov
out
ficomps
pop
lds
adc
xor
sub
jmp
mov
jne
xor
and
mov
xchg
repnz
inc
aas
in
and
cwtl
push
in
dec
mov
mov
xchg
aad
dec
lods
xlat
ja
nop
popa
decl
ss
dec
sub
dec
or
lods
test
in
push
and
mov
and
fs
mov
sti
or
mov
aam
xor
sahf
jp
test
add
jle
adc
fwait
cs
jmp
or
arpl
sbb
fxch
lods
rol
mov
cmp
and
pop
xchg
sub
ret
fmull
adc
ret
enter
popa
or
mov
sbb
shlb
cmp
add
and
fcoms
and
mov
cmp
pop
xchg
cmp
sbb
jp
loopne
xor
cmp
aas
mov
aaa
or
push
test
cs
mov
pop
mov
daa
inc
pusha
jmp
sub
stos
bound
add
repnz
mov
push
cmp
cmp
test
call
and
imul
hlt
pop
pusha
ss
js
mov
std
sarb
cld
shlb
dec
and
lock
push
push
inc
jbe
rcrb
mov
icebp
adc
ds
test
arpl
jnp
addl
addr16
sbb
and
cs
xlat
in
xor
push
push
mov
add
mov
jmp
jp
popf
sub
push
enter
iret
mov
int
xor
int
sub
and
idiv
inc
sbb
mov
and
bound
mov
and
push
inc
or
daa
fisttpll
and
leave
adcl
push
sti
dec
xchg
jae
fsubl
hlt
xor
adc
jl
push
mov
das
mov
addr16
cmp
or
shlb
pop
mov
les
and
pop
cmp
pop
pop
inc
mov
int
cmpsb
push
dec
pop
outsb
jbe
inc
arpl
mov
pop
popf
adc
xchg
lock
dec
mov
sbb
dec
incb
es
add
movl
pop
int
inc
lods
cli
es
push
mov
into
mov
pop
aam
incb
cmp
sub
std
xchg
lahf
add
imul
rol
push
loope
inc
mov
dec
insb
int3
imul
lods
mov
inc
cmc
jl
scas
jno
std
fnstsw
rorl
dec
mov
scas
mov
jecxz
cmp
icebp
jle
xor
jo
inc
dec
loop
adc
sti
add
xchg
adc
int3
or
xor
lcall
leave
xor
fisubrl
jge
int
out
jne
xor
stc
cld
xchg
jbe
adc
es
or
lea
push
jle
rcll
enter
mov
xor
repz
xchg
loope
in
xchg
xchg
fsubs
andl
and
and
dec
or
jne
cld
dec
sbb
call
xchg
fxam
xchg
mov
add
adc
nop
js
fidivrl
ftst
nop
mov
fldcw
xchg
data16
cwtl
or
cmpsb
jae
sub
dec
ror
and
das
jns
fwait
dec
aaa
test
into
insl
insb
sti
and
outsb
pop
push
adc
adc
and
mov
cli
pop
sbb
xor
and
jge
mov
stc
xchg
fsubrp
xchg
dec
xor
insl
jecxz
inc
xchg
inc
and
jp
pushf
push
add
mov
rcrl
or
sbb
xchg
add
in
cmp
sbb
and
dec
inc
or
xchg
jecxz
xor
xor
pop
mov
lcall
add
pop
xchg
dec
pusha
mov
inc
ds
jbe
pop
aam
push
mov
xchg
fiaddl
xor
cmp
bnd
jno
mov
mov
out
dec
jg
fcmovnu
in
pop
mov
fldenv
fsubr
in
cli
sbb
jno
mov
testb
inc
into
xor
jbe
into
out
lahf
cmc
lcall
jo
mov
cwtl
imul
pop
cmp
inc
insb
sub
sbb
mov
arpl
imul
pop
sub
mov
sub
mov
cmpsb
xchg
jp
add
jne
or
nop
divl
mov
lahf
aas
xchg
xchg
scas
mov
jb
xor
push
sahf
inc
mov
sub
push
js
pop
sbb
mov
into
xchg
ljmp
sub
mov
in
jae
test
jne
scas
rclb
jecxz
pop
cmc
add
mov
mov
inc
mov
movsl
fisubrs
add
mov
pop
clc
mov
and
mov
adc
mov
iret
xor
cli
mov
jne
adc
arpl
sub
insb
frstor
fisttpll
jecxz
sbb
mov
or
lods
bnd
mov
or
dec
out
cmp
out
dec
jle
sbb
pop
xlat
cmpsl
adc
add
jnp
mov
pop
ss
adc
aad
inc
ds
mov
jmp
out
add
add
add
pop
test
ret
sbb
dec
xor
shrl
mov
xlat
ret
add
loopne
mov
pusha
sub
and
or
lret
sbb
mov
push
push
scas
mov
pop
rolb
fstpt
in
enter
push
inc
xchg
push
popf
cmpsl
adc
inc
pop
xor
cmp
push
lds
icebp
fs
mov
mov
fistpl
clc
loopne
xchg
dec
in
js
ljmp
cld
mov
adc
sub
push
cmp
scas
loop
push
fcomp
mov
jnp
sub
and
push
push
sahf
cmp
fwait
shrl
or
push
inc
pop
gs
jae
repnz
and
out
sahf
cmp
stc
or
cmpsb
int3
sbb
cmc
xor
jle
pop
hlt
mov
cmp
adc
add
testl
inc
or
push
or
daa
jge
jp
xchg
lods
pop
adc
mov
jp
or
je
lcall
lcall
jle
pop
pop
imul
jbe
repz
push
pusha
sahf
xchg
push
imul
gs
lret
cltd
cmpsl
cmp
test
loope
sbb
push
out
mov
scas
mov
mov
jnp
fs
loop
and
in
sbb
and
or
leave
jb
mov
push
mov
add
dec
in
pop
test
repz
and
insl
or
aas
jmp
pop
and
pop
add
mov
jmp
clc
ds
sub
imul
sbb
sahf
fsubr
mov
frstor
mov
adc
stc
out
cwtl
jmp
xchg
je
enter
xor
mov
and
lods
xchg
loope
pop
test
mov
add
add
dec
adcl
or
loop
in
ja
jecxz
mov
lcall
std
mov
ss
out
shlb
inc
pop
jno
outsb
cmpsl
aam
les
dec
mov
ljmp
xchg
aaa
xor
jae
loopne
hlt
add
imul
lds
in
sbb
jp
and
jle
js
sbb
inc
mov
xchg
rcrb
mov
jb
xchg
rcrb
mov
sbb
lea
and
push
jle
je
fcompl
mov
or
push
xlat
js
outsl
lock
inc
test
mov
in
sub
mov
out
mov
dec
dec
shl
cmp
test
cmc
mov
int
scas
testb
pop
jge
dec
xchg
aad
or
cmc
add
cltd
and
xor
cmp
loop
mov
push
jg
fistps
sbb
inc
adc
imul
jmp
sub
mov
mov
je
jno
jmp
sbb
mov
mov
push
push
js
je
jno,pt
scas
pop
fldt
inc
push
sub
cmpsb
sbb
adc
aad
and
insb
inc
test
adc
sub
pop
loopne
fldcw
inc
addb
in
sbb
mov
aaa
seto
inc
mov
and
and
mov
inc
ffreep
xchg
mov
popa
mov
push
inc
fnstcw
movsb
xor
xchg
xchg
jne
scas
sbb
sbb
push
adc
pop
mov
in
dec
insl
or
mov
add
mov
loop,pn
jbe
mov
nop
mov
aad
movsl
inc
iret
sbb
mov
inc
icebp
in
fs
js
int3
or
adc
popa
dec
pop
sbb
loopne
rclb
cmp
fadd
ljmp
frstor
mov
mov
imul
or
jle
cmp
cmp
addr16
stos
inc
jecxz
shrl
imul
lcall
push
mov
jns
xor
sbb
sarl
jo
ss
insb
mov
lahf
cld
aas
cwtl
and
addr16
push
movsb
orl
add
xor
xchg
pop
test
call
sbb
inc
inc
xchg
pop
jle
pop
sbb
shll
imul
cmp
mov
sub
aad
cmpl
pop
xchg
xor
mov
jg
dec
stos
loope
daa
sbb
dec
enter
sub
dec
jge
loop
rorl
push
or
add
enter
dec
sbb
cmpsb
inc
push
push
clc
cmp
out
xor
or
add
imul
cmp
xlat
pop
repnz
xchg
ss
iret
and
jge
cmp
sbb
gs
incb
js
in
mov
add
fidivl
dec
test
sbb
lods
dec
mov
mov
aas
add
xchg
inc
out
outsb
jne
dec
xchg
clc
outsl
test
shr
xlat
and
lock
fsts
fldt
punpckhdq
jae
pop
ja
sbb
push
psubusw
pop
pop
mov
ljmp
sbb
negb
jmp
jmp
test
xchg
call
call
movsl
popf
cmc
pop
mov
or
loope
out
adc
popf
fcmovnb
mov
lret
cmp
push
push
sub
cli
adc
popa
repnz
dec
test
mov
call
jp
cmp
inc
add
xchg
xchg
lea
mov
mov
cmc
adc
cmp
ret
rorb
in
ja
mov
mov
cmp
jns
rclb
shrb
sub
inc
ss
sbb
cmp
add
loope
jbe
mov
mov
loopne
mov
sbb
mov
inc
outsl
xor
inc
insb
pushf
imulb
and
mov
std
push
mov
inc
outsb
cmp
int3
mov
fidivl
jb
std
cltd
cmpsb
sub
arpl
sbb
movsl
push
rolb
xor
in
dec
push
push
stc
xchg
xor
outsb
ss
pop
das
les
xchg
or
inc
cs
sub
sbb
cmc
ja
mov
and
fsubrp
clc
add
xchg
push
shlb
xchg
call
outsb
adcl
cmc
test
addr16
rcrb
jb
aad
fistpll
mov
or
inc
mov
imul
pop
popf
pop
xchg
outsl
dec
roll
jmp
dec
test
and
mov
jl
iret
sub
jno
std
xchg
add
xor
leave
test
popa
xorb
dec
movsb
sbb
mov
mov
in
popa
pop
fcompl
xor
mov
xchg
lods
test
inc
xchg
fisubrl
cmp
aaa
push
cwtl
mov
jae
dec
jecxz
call
in
test
insb
movsb
fisubl
test
jmp
jo
push
fidivs
cmp
outsb
mov
mov
jo
sbb
jnp
loopne
pop
dec
sbb
xor
test
add
cmc
ret
pop
lsl
adc
jp
in
roll
sarb
xor
sub
adc
jge
cmp
rol
repz
cld
sub
andb
push
push
xor
dec
jo
les
cmp
jge
pop
rclb
js
xor
test
inc
shlb
shl
cmp
arpl
data16
sub
xor
cmp
xchg
sbb
leave
add
scas
mov
jne
in
sub
mov
icebp
pop
leave
sbb
lss
lods
inc
cltd
cld
lds
xchg
lods
outsb
insl
std
add
stos
and
sbb
fs
dec
aam
lods
push
out
lcall
and
dec
xchg
enter
out
xor
pop
xor
push
in
mov
dec
and
jne
sub
ret
inc
cmp
sbbb
int3
push
ljmp
out
orb
int3
movsl
and
sahf
mov
rolb
lock
lcall
popf
xchg
in
jo,pt
cmpsb
arpl
jp
mov
pop
or
jb
push
adc
xchg
jns
loopne
and
imul
push
fdiv
scas
mov
pop
inc
aas
icebp
dec
arpl
ds
fadds
or
sbb
push
dec
jb
adc
push
sbb
mov
out
xchg
aas
lock
stos
cwtl
push
and
jge
lahf
test
or
insb
scas
sahf
ljmp
push
shrb
ficoml
clc
dec
aas
outsl
lret
xchg
adc
xor
push
fwait
cmp
ss
pop
pop
leave
lods
pop
outsb
nop
sbb
mov
xor
jbe
mov
arpl
adc
jnp
add
gs
testl
push
imul
push
mov
sbbb
inc
add
and
xchg
xchg
jl
in
in
fsubrl
into
jmp
adc
mov
out
jbe
inc
xor
xchg
sbb
cs
push
sbb
sub
xchg
outsl
inc
mov
pop
dec
xchg
shll
dec
out
mov
test
mov
out
out
cwtl
push
rorl
mov
mov
sbb
jle
adc
xchg
or
js
sarl
add
push
xchg
int
inc
pop
cmp
das
icebp
push
mov
mov
in
inc
flds
jo
ss
mov
in
cbtw
sub
push
dec
mov
out
mov
jnp
or
aas
and
or
loop
fsubs
dec
sahf
xchg
jo
xor
jns
ja
push
pop
andl
mov
insb
mov
xchg
scas
dec
jb
fisubrs
dec
inc
jnp
adc
push
or
jp
mov
sti
fstl
fs
jbe
cmpl
pop
loop
sub
int
mov
imul
insb
mov
clc
loopne
xor
inc
or
mov
iret
mov
jmp
pushf
lds
mov
popa
push
cmp
add
std
mov
adc
push
and
sti
insb
inc
mov
ficoms
nop
cli
xor
pop
nop
jnp
int
push
and
dec
movsl
pop
cmp
popa
jp
push
mov
mov
xchg
xchg
out
push
push
out
mov
inc
mov
mov
push
mov
mov
xchg
jmp
mov
cmpsb
and
xchg
push
pop
mov
add
adc
xchg
cmpsb
xor
jp
pop
push
in
sub
repz
cmp
in
pop
pop
xor
loopne
push
add
jne
daa
clc
lahf
sbb
add
enter
push
mov
mov
push
lds
adcb
outsb
gs
loop
cwtl
add
jecxz
enter
xor
mov
fs
dec
xchg
push
mov
pop
xor
fmul
ss
and
fs
mov
dec
cld
jno
mov
cmp
jne
loop
pushfw
repz
int
and
sub
push
or
adc
subb
icebp
or
jae
je
pusha
ja
jle
pop
jns
jp
outsb
xchg
in
cltd
pop
xor
pushf
mov
aas
xchg
cmpb
cmp
test
xchg
in
mov
fsubl
call
jnp
add
andl
bound
roll
xlat
or
mov
adc
dec
sbb
jnp
sbb
inc
lcall
inc
out
mov
or
imul
sbb
dec
insl
lcall
push
ja
and
out
fwait
out
lahf
push
jle
mov
push
loopne
rcr
push
fwait
push
cwtl
add
sahf
shll
mov
mov
cmp
movsb
in
shll
hlt
vldmxcsr
dec
sbb
fsubs
outsl
sbb
mov
mov
mov
subb
sahf
inc
data16
mov
movsb
mov
into
pop
cmp
xchg
sbb
cmp
or
mov
jmp
lods
xor
adc
push
inc
lahf
mov
push
cwtl
xchg
mov
cmp
ficoms
push
insb
mov
push
sahf
fidivrs
es
jp
fcmove
jno
adc
jg
data16
mov
sub
in
inc
or
dec
xchg
dec
sub
jg
jae
ret
push
push
xor
cmp
mov
dec
mov
or
je
add
insl
mov
ret
fisubrs
movsb
mov
sub
mov
dec
idivl
imul
shrb
adc
push
xor
add
push
call
fsubs
dec
scas
rcrl
dec
mov
sbbb
cltd
and
jbe
fld1
mov
xchg
js
cltd
dec
icebp
jg
push
adc
fbstp
in
pop
idivb
mov
fnsave
and
pop
div
lds
lods
out
les
leave
jecxz
sub
je
scas
out
xor
or
pop
push
xor
loope
xchg
cmp
dec
or
pop
and
jno
and
xchg
and
push
sbb
sbb
add
push
jae
xchg
ss
jae
and
lahf
inc
dec
lahf
xchg
add
mov
mov
adc
repnz
add
stos
es
clc
stos
mov
pop
inc
push
dec
jmp
popa
dec
fisubl
inc
divl
add
in
cltd
jb
cli
dec
jmp
jno
into
loope
imul
sub
add
push
leave
outsb
add
mov
aaa
cmpl
dec
mov
dec
inc
rolb
and
lret
and
hlt
push
mov
adc
mov
insl
jno
lahf
mov
hlt
pop
push
test
rcrl
inc
push
movsb
add
push
orb
or
subb
push
inc
jge
shl
dec
add
lods
idivl
stos
xchg
data16
call
cmp
mov
and
dec
lcall
lea
movsl
out
mov
push
push
jae
js
ud1
add
shlb
rcl
sub
xor
cmc
sahf
dec
jno
mov
stos
sbb
out
shrl
jb
adc
inc
aam
fnstcw
push
mov
test
sbb
or
imul
ret
sbb
sbb
aaa
mov
out
out
add
and
dec
imul
int
sub
and
sub
pop
push
iret
ss
lret
imul
fcoml
jbe
mov
mov
fisubrs
mov
add
cmp
out
in
xchg
fwait
mov
arpl
sub
scas
cwtl
sbb
test
and
jmp
loop
adc
jecxz
fisttpl
aas
loop
test
ficompl
inc
push
loope
aas
adcb
cmp
jl
push
mov
push
mov
push
xchg
dec
pop
lock
pusha
cmp
call
push
jno
xchg
cmpsl
aas
stos
mov
sub
aaa
hlt
sub
into
gs
dec
pop
pop
lods
lea
scas
mov
mov
test
icebp
push
sbb
inc
pop
mov
mov
mov
mov
cmp
adcb
out
inc
pop
in
shlb
inc
stos
mov
cmp
insl
push
pop
mov
sub
loop
cmp
inc
sub
out
or
mov
sub
pusha
cmpsl
mov
pushf
and
das
add
xor
or
jecxz
ret
sub
push
pop
ljmp
outsl
jge
mov
mov
stos
idivb
sahf
lcall
or
add
cmp
mov
mov
xor
popa
pop
cld
sbb
mov
jb
cltd
jno
jmp
pop
pop
push
adc
addr16
imul
es
push
add
cmp
ret
jge
fwait
sub
xor
sbb
and
inc
sub
or
cmp
dec
or
adc
push
xchg
jl
sahf
out
xor
lret
jmp
cs
les
test
call
jae
mov
stos
aaa
pusha
or
fistps
cld
mov
jbe
inc
add
sub
or
push
mov
cmpsb
mov
mov
mov
cmp
neg
out
outsb
loop
mov
pop
xor
dec
js
xor
fldenv
and
lds
jp
xor
cmp
mov
or
push
in
push
adc
daa
mov
stos
stos
dec
test
pop
hlt
test
leave
push
mov
call
xor
mov
xor
pop
fldl
outsl
xchg
movsb
mov
sbb
ljmp
cli
cld
scas
cs
and
inc
jle
and
aas
sahf
ljmp
pop
mov
pop
or
pop
insb
jb
fwait
sbb
pop
jmp
pop
xor
mov
icebp
sub
push
in
mov
mov
cld
aad
in
pop
insb
inc
in
sub
test
nop
js
jl
cli
movsb
mov
adc
pop
movsb
pop
gs
push
mulb
push
outsb
mov
dec
xchg
stc
xor
sarl
iret
loop
ret
cld
stos
lods
mov
out
xchg
loopne
pop
shl
push
mov
push
out
test
cmpsl
push
ljmp
mov
and
enter
addr16
inc
repz
push
sbb
jb
adc
mov
cs
ret
test
pop
xchg
cmpsb
xor
insb
insl
dec
mov
xor
mov
cs
pop
xor
or
out
decl
test
pop
std
sub
mov
cmc
jnp
xchg
rcrb
ret
dec
adc
fmul
test
adc
pop
rclb
xchg
aad
jp
pusha
fnstcw
sub
ja
jmp
mov
in
xlat
int3
rorl
mov
lret
adc
lock
push
sbb
push
xor
jl
inc
and
sub
cmp
icebp
or
adc
hlt
fildll
and
lds
mov
pop
cmp
xor
das
and
jle
or
sbb
mov
xor
ljmp
pop
mov
ja
xor
shlb
jle
fisttpl
data16
xchg
pushf
movsb
jno
mov
sbb
int
in
aam
mov
fidivrs
add
dec
mov
andl
sbb
and
pushf
push
rcrl
xor
sub
sbb
sub
sbb
imul
rolb
push
jge
in
sub
or
popf
jg
dec
iret
les
xchg
mov
mov
vsubsd
adc
call
movsb
filds
mov
sub
sbb
aaa
pop
and
fucomp
sbb
and
mov
and
cmpsl
scas
xchg
cld
dec
push
movsl
inc
adc
stos
mov
adc
mov
pop
xchg
xchg
lods
out
mov
lea
dec
mov
jno
out
xor
cmp
lock
xchg
mov
les
jp
adc
adc
xor
movb
xchg
jmp
or
xchg
or
sub
jmp
rcl
and
push
mov
xor
int3
push
cmp
movl
lea
mov
loopne
lock
andb
cs
repnz
mov
inc
inc
xchg
push
dec
push
mov
adc
jge
jbe
sub
inc
rorb
aaa
frstor
add
iret
aaa
es
mull
data16
or
or
inc
cmpsl
movsb
lret
dec
and
sub
imulb
lahf
cmpsl
cmp
xchg
scas
sub
test
dec
xchg
inc
and
sbb
mov
movsl
xchg
dec
popa
ss
test
cli
das
push
pop
sub
push
outsl
dec
xchg
rcrl
pop
rorl
call
jbe
push
mulb
jge
popa
xor
test
pop
mov
aam
or
inc
inc
out
into
mov
mov
cs
xor
inc
daa
movsl
xor
rcrb
xchg
gs
cli
inc
ja
jne
movsb
jecxz
sub
dec
inc
mov
and
mov
popf
and
sbb
jno
and
movsb
pop
nop
lahf
imul
repz
loope
adc
dec
scas
xor
movsb
sti
mov
movsb
insb
enter
out
jae
inc
lods
test
push
scas
push
fistpl
in
hlt
aad
jl
mov
stos
sahf
fldt
stos
mov
jns
hlt
shr
lds
pusha
fidivl
fcmovnbe
xchg
inc
loope
addr16
icebp
test
pop
call
lret
pop
mov
jae
ret
cmc
mov
data16
mov
inc
rcrb
mov
lret
cmpsb
call
jl
adc
jb
movsb
insb
vmread
xchg
xor
or
pusha
sbb
xchg
dec
sahf
mov
in
lret
jo
mov
sti
sbb
scas
insb
mov
call
fstpl
clc
cmp
mov
mov
cli
repnz
adc
xchg
push
and
add
mov
mov
adc
in
in
rcrb
push
xchg
cmp
int3
sub
or
adc
mov
dec
push
outsb
push
inc
repnz
pop
cmp
dec
adc
negb
stos
xchg
jle
push
cmovs
loope
imul
movsl
push
push
mov
aam
stc
int
adc
cmc
popa
push
push
mov
shr
push
stos
mov
iret
ja
or
push
push
jb
in
ds
jbe
in
push
test
fiadds
pop
jecxz
aad
fcoms
mov
lock
lret
test
pop
sbb
scas
cli
xor
or
scas
jg
in
orl
sbb
daa
mov
mov
popf
sub
repnz
outsb
mulb
mull
xor
sub
aam
pop
dec
xor
xchg
and
or
arpl
add
jmp
push
mov
xchg
xchg
sbb
int
xlat
jecxz
sarb
mov
xchg
repnz
sahf
cmp
mov
xlat
sahf
adc
xor
lds
lret
push
addl
inc
adc
pop
loope
cmp
sarl
insb
rep
inc
imul
fadds
lds
inc
stos
mov
jp
or
out
xor
les
xchg
sbb
push
ss
data16
push
pushf
dec
js
in
insb
xchg
inc
sub
test
icebp
movl
cli
js
pop
lock
cmp
xor
mov
sbb
xchg
es
dec
scas
es
roll
jecxz
cmpsl
push
mov
sti
loope
push
in
popl
leave
in
push
add
and
jae
leave
jnp
xor
negl
sbb
mov
mov
shll
ret
fbstp
or
not
cmpl
loop
mov
jb
ret
dec
inc
test
stos
or
push
or
add
mov
inc
es
shl
cmpsl
mov
ret
mov
lds
aas
inc
add
daa
or
mov
push
mov
subb
pop
rcrb
stos
into
cmp
lret
ficoml
jp
lods
xchg
jbe
or
lcall
in
mov
pop
xchg
push
enter
out
rcll
inc
xor
sahf
call
mov
seta
sub
mov
push
add
add
xchg
ja
fdivrp
push
loopne
pop
insb
jp
cwtl
add
lret
jmp
sbb
iret
jge
jns
mov
mov
sarl
test
push
push
push
imul
arpl
call
sbbb
test
es
pop
xor
or
cltd
popf
shrb
and
and
lds
movsb
pop
arpl
adc
imul
insl
mov
push
aad
filds
jl
jle,pt
cmp
fnstcw
stos
cmc
scas
inc
sub
roll
and
lret
push
mov
in
das
push
and
test
adc
ficompl
pop
and
add
ret
or
js
mov
dec
mov
push
cmp
js
pop
cmpsl
pop
xchg
aaa
insl
pop
sbb
inc
fimull
rol
imul
mov
mov
fwait
aad
ret
dec
push
xor
fcomip
xor
rcl
les
xor
adc
xchg
dec
popf
in
cmpb
notl
inc
mov
and
je
pop
xor
fistpl
jne
popa
cmpsl
xor
jnp
sub
cli
test
add
pop
out
out
rcrb
jecxz
iret
fmuls
push
mov
inc
add
pushf
in
jp
sub
dec
enter
jecxz
dec
fdivrs
fbld
xor
jmp
xor
inc
sbb
xchg
and
popa
insb
adc
lret
dec
gs
icebp
cmp
inc
cmpl
pushf
push
int
xchg
cmp
in
cltd
push
ret
sub
xchg
or
lea
jg
sbbl
push
nop
or
xchg
inc
je
std
xchg
dec
pop
and
mov
aas
call
adc
aaa
test
jo
sahf
lods
add
aam
lea
and
icebp
dec
mov
ss
push
and
xchg
push
xor
movsb
inc
cmp
sbb
pop
jge
jb
leave
inc
sahf
cmp
sub
stos
push
pusha
sahf
leave
sarl
jns
push
and
adc
mov
ss
dec
into
jge
ss
sub
and
xor
pop
sarl
xor
mov
jmp
clc
adcl
lret
push
and
or
cmp
lock
ds
mov
fisubl
leave
stos
movsl
ret
aad
mov
mov
andl
test
cmpsb
jns
pop
jl
loope
in
dec
dec
imul
or
add
rol
mov
push
sbb
mov
adc
lock
xor
xor
and
jl
add
sbb
lock
pop
mov
push
pop
pushf
mov
cmpb
out
jg
push
xor
jmp
and
icebp
incl
js
xchg
cmpsl
adc
and
hlt
mov
dec
inc
jnp
daa
jge
and
cmp
jp
hlt
mov
xor
inc
testl
jge
xchg
cmp
pushfw
test
mov
cli
cmc
ljmp
cmp
call
fldl2t
add
adc
mov
adc
stos
icebp
out
lea
lret
push
mov
lods
sbb
mov
push
jge
sar
inc
pop
dec
out
ud0
mov
shlb
xchg
sar
xor
cmp
mov
dec
jnp
mov
and
dec
dec
into
sbb
mov
repz
sub
aaa
dec
iret
loop
adc
rol
aam
mov
pushf
in
nop
je
or
pop
aaa
sub
movsl
mov
imul
arpl
mov
mov
mov
xor
or
stos
ljmp
mov
js
mov
push
dec
ret
pop
pop
jge
rorb
ja
mov
test
add
and
not
rolb
fildl
es
jns
cmpsb
add
cmp
pusha
fisubrs
sub
mov
push
push
push
popf
stos
idivl
mov
add
pop
jbe
ret
fiadds
cs
outsl
mov
sbb
inc
lahf
sbb
dec
in
pop
dec
cmp
fcmovnb
jno
fwait
cmpsl
pop
jecxz
nop
cmc
cs
cmp
sarb
test
jno
stos
and
into
xlat
arpl
xchg
mov
imul
lds
gs
sbb
inc
xor
jecxz
pop
mov
pushl
dec
mov
jecxz
fiadds
in
shll
das
fcoms
ja
jbe
and
jne
outsb
sarb
movsl
sub
hlt
mov
cmp
in
in
and
scas
pop
add
mov
add
sub
mov
mov
push
dec
cmp
sbb
popa
sub
and
jmp
out
ja
jle
or
mov
in
add
cld
pop
mov
lret
sbb
daa
jo
es
jg
dec
gs
or
ret
test
out
jle
push
xchg
leave
ds
jl
iret
popf
and
xor
fisttpl
out
and
outsl
jo
stc
jg
adc
xlat
push
push
in
dec
dec
and
insb
sbb
clc
xchg
dec
add
ja
push
jmp
sbb
adc
and
fisttpll
mov
fildll
fildll
inc
lret
imul
dec
ss
addr16
stc
out
add
adc
lods
jno
mov
aas
inc
testb
das
out
xor
push
faddp
xchg
aaa
push
pop
sbb
add
imul
sahf
aam
outsb
outsb
sbb
sahf
sub
movsl
movsb
pop
cmp
inc
repnz
enter
mov
ljmp
cli
fistpl
xchg
jg
bound
fcomp
mov
incb
pop
sbb
cmp
push
in
mov
mov
sub
mov
les
mov
pop
xor
cmp
and
xchg
dec
fdivs
xchg
mov
inc
sbb
inc
cmp
aad
inc
ljmp
mov
lret
popa
pop
mov
and
outsb
lock
fists
mov
outsl
popf
inc
pop
inc
jg
and
lcall
xchg
mov
sbb
xor
adc
or
test
dec
or
dec
loop
push
mov
mov
fsub
mov
dec
stos
xchg
jnp
lods
sbb
xlat
mov
jecxz
sbb
jne
cmp
xor
inc
push
push
pushf
pushf
icebp
clc
cmp
jns
push
loope
push
add
mov
inc
pop
popa
mov
push
orl
es
mov
push
jb
xor
pop
or
and
mov
scas
pop
daa
aad
pop
adc
loopw
inc
aam
mov
mov
ficoms
hlt
loop
pop
stos
mov
repz
orl
test
xchg
imul
inc
std
or
inc
or
mov
inc
das
pushf
mov
push
and
mov
fs
shl
and
je
xor
adc
sub
and
mov
dec
and
dec
dec
dec
dec
inc
lock
jnp
mov
imul
stos
fs
je
lock
nop
scas
pop
sti
mov
jle
das
add
jo
jbe
pop
add
sbb
leave
or
or
adc
pop
cmp
lret
pop
addb
xor
popa
jb
ss
cmp
vmread
fadd
push
xchg
xchg
idiv
filds
lods
fsubr
rorb
jmp
mov
lock
addr16
cmpsb
pushf
ljmp
jmp
or
adc
sbb
in
int3
mov
call
inc
or
fildl
add
mov
push
andb
push
xchg
push
out
mov
cmc
into
sbb
addr16
int
dec
inc
xchg
cmp
test
xchg
xchg
add
loop
sbb
and
jp
jp
sub
aaa
sub
arpl
and
push
test
enter
xlat
int3
in
fcmovne
jns
inc
and
jb
icebp
xchg
mov
mov
sub
pop
insl
inc
aas
push
push
push
loop
je
into
jmp
jp
movsb
loope
sub
inc
cmp
sub
ja
cld
adc
sub
xchg
in
pop
pop
adc
add
add
loop
repnz
mov
cmp
xchg
popf
and
jno
mov
jle
adc
dec
xchg
pushl
dec
pusha
std
dec
jnp
lcall
xorb
mov
xchg
popf
ret
xchg
fwait
lock
adc
bound
movb
mov
faddp
jnp
add
cmp
fcmovnb
add
push
or
push
inc
psubw
fiadds
xchg
add
or
scas
lcall
ljmp
ja
test
iret
cld
add
inc
adc
pop
loopne
xor
js
dec
scas
add
lret
sbb
cmpsl
adc
mov
xchg
inc
je
ljmp
outsb
jne
mov
adc
enter
xor
push
adc
lahf
lock
aam
add
jns
cmp
lret
sarb
and
adc
movsl
add
outsb
cmpsl
outsl
sti
push
fbstp
lea
out
loope
lods
fnstcw
dec
mov
clc
js
adc
sub
rcl
add
xchg
sarl
jecxz
push
jbe
stc
stos
mov
jg
push
jmp
mov
cmp
xchg
or
jno
pop
xchg
pop
pop
or
movsl
aas
das
test
into
sbb
mov
icebp
lcall
iret
in
sub
mov
in
sbb
sbb
push
cmp
jnp
inc
into
push
test
pop
and
lock
mov
je
in
adc
lock
je
repz
mov
mov
fdivr
cmp
add
lods
in
lret
fnsave
ljmp
cmp
cmp
daa
jle
fs
xchg
ud0
sbb
icebp
pop
out
push
sub
daa
push
lds
shll
mov
bound
outsl
out
call
loope
rcrl
bound
xor
loope
dec
ror
stc
ja
ljmp
outsb
sbb
pop
cltd
cld
jb
xchg
dec
inc
es
xor
pop
dec
out
mov
cmp
fcoml
mov
hlt
lret
out
dec
in
cld
movsl
xor
test
add
push
std
test
or
test
mov
jmp
mov
jae
dec
adc
aas
rcr
sbb
push
jg
in
test
cs
ror
add
cmp
shrl
sub
mov
stos
idivl
push
fucomp
subl
pushf
fsubr
mov
jbe
rorl
or
loopne
inc
js
jle
jns
sbb
movsl
cmp
sbb
test
push
cmp
dec
jecxz
sub
fcmovnbe
fwait
jmp
popa
sti
inc
or
je
xchg
movsl
ds
sbb
mov
sbb
cmp
sahf
xor
jp
je
es
mov
and
mov
loope
sub
jne
inc
push
out
icebp
lcall
incl
xchg
xchg
imul
xchg
xchg
sbb
dec
addb
iret
pop
cld
mov
cmc
mov
hlt
outsl
out
aam
adc
mov
inc
out
inc
lods
int
ret
jmp
aaa
mov
les
imul
add
inc
and
jne
pop
pop
popa
scas
cltd
fs
dec
mov
out
xchg
xor
ds
ja
iret
test
popa
pop
inc
mov
push
cmpsl
mov
aad
mov
push
ljmp
and
xor
icebp
incl
scas
cmp
in
fcmovnu
cltd
and
mov
or
das
stos
addr16
mov
in
mov
ljmp
pop
jp
leave
lock
lods
mov
cwtl
add
repnz
repnz
jp
add
cli
or
aaa
fimuls
sbb
icebp
xchg
fisubs
movsb
push
scas
sub
loop
jp
scas
fcmove
fs
dec
push
cmpsl
fnsave
push
jle
hlt
add
out
ffreep
lods
or
sahf
add
mov
data16
fwait
rorb
dec
addr16
test
mov
and
and
ds
jb
mov
fsts
sub
subb
insb
aas
faddp
or
add
daa
dec
leave
pushf
sub
popa
pop
jg
inc
mov
and
and
inc
imul
mov
xor
push
inc
leave
inc
das
cmp
add
movsl
add
out
push
jecxz
ret
out
xor
lods
inc
rcrl
or
xchg
mov
jne
adc
pop
sbb
and
mov
cmpsb
flds
mov
mov
pop
sbb
clc
jecxz
fwait
aad
and
pushl
xlat
aaa
pop
sub
cmp
xchg
dec
out
cmp
rolb
jb
ljmp
adc
xchg
decb
punpckhbw
fwait
sub
jo
xchg
pop
add
pop
add
aaa
popf
push
push
insb
loope
shrl
sbb
imul
outsb
sbb
fisubrl
movsl
jne
sbb
add
loopne
movsb
jae
aam
pop
repnz
push
jg
popa
mov
enter
shlb
stos
lret
mov
cmp
std
push
inc
hlt
sbb
out
out
xchg
push
xchg
mov
in
pop
jno
ljmp
arpl
rcrl
or
pop
and
rol
cmpsl
or
fisubl
insl
leave
out
lea
jne
pop
mov
es
sbb
adc
xchg
jne
jle
stc
popa
dec
mov
test
ficomps
into
add
pusha
mov
push
mov
sbb
hlt
shll
cmpsb
adc
xor
mov
test
fdivs
jecxz
lds
xchg
negb
aas
out
dec
mov
pop
xor
bound
mulb
sbb
push
loopne
cltd
xchg
mov
inc
jns
mov
ss
pop
orb
jl
stc
lock
fwait
cld
lea
sbb
xor
sarl
lahf
mov
xchg
dec
mov
mov
push
or
insl
jmp
push
cwtl
jp
pushf
roll
aad
xorb
leave
mov
sti
or
pop
imul
jo
rorb
sub
xchg
dec
push
mov
jnp
cwtl
mov
add
xor
xor
xchg
leave
les
mov
push
push
pop
jp
hlt
and
sbb
and
cld
mov
ror
out
sub
ds
movsl
les
enter
cmpsl
sub
bound
lret
int
pusha
fsts
sbb
xor
pop
xchg
loopne
mov
in
or
cmpsl
std
jg
cli
push
push
jg
icebp
mov
daa
jno
test
nop
sub
sbb
ljmp
xchg
ss
cmp
xchg
sub
mov
ret
adc
jp
push
fs
inc
add
sbb
xchg
repz
filds
jg
fcmove
cmp
xchg
dec
or
xchg
ds
jns
rcll
pop
sbb
fsubrs
dec
adc
andl
or
rol
insb
movb
sub
mov
xor
and
stos
sub
mov
sbb
mov
lcall
popf
cs
and
or
fabs
mov
dec
pop
push
hlt
mov
leave
iret
fsubr
sub
bswap
or
call
push
sarb
mov
jl
jno
xchg
push
and
push
mov
cld
in
lds
cwtl
or
xchg
shrl
aaa
push
mov
pop
iret
movsl
outsl
mov
adc
add
and
negb
mov
jmp
sbb
rcrl
push
orb
pop
fwait
lahf
add
jo
ds
test
and
push
je
test
push
jmp
push
pushl
cmp
stos
xchg
nop
mov
cwtl
add
ss
adc
jno
arpl
andps
pop
add
and
ret
fidivrl
mov
into
popf
fists
jns
cmc
fcompl
arpl
stos
out
imul
mov
std
loopne
xor
xor
mov
or
fimull
fs
inc
arpl
jae
mov
aaa
mov
push
adc
inc
mov
sti
and
ljmp
sahf
psubq
es
pop
mov
push
sub
dec
xlat
dec
xchg
pop
lock
iret
sbb
lahf
shl
push
and
maxps
jnp
and
and
mov
cmpsl
pop
ret
dec
xchg
fisttpl
loope,pn
cmp
int3
sbb
in
jecxz
out
in
test
pop
sub
ret
mov
dec
arpl
sub
xor
mov
sub
das
nop
out
add
dec
lods
popf
push
mov
inc
js
cmpsl
push
sbb
es
lods
xchg
adc
ja
lock
cltd
jmp
push
lahf
push
loopne
jnp
stos
out
adc
jg
sbb
ljmp
cmp
sbb
lret
lret
addr16
jb
pop
lds
lahf
push
sub
mov
aam
push
mov
lret
jmp
out
outsl
call
mov
mov
adc
pop
jno
sbb
addl
stos
jbe
aam
sbb
enter
cmp
and
pop
std
popl
mov
gs
add
hlt
pop
jb
clc
adc
xchg
in
fwait
popa
outsb
fwait
jo
xchg
int3
arpl
and
or
push
pusha
jge
push
add
lahf
call
fwait
push
jne
stos
xor
pop
xchg
es
jne
insb
push
fbstp
inc
inc
out
stos
push
iret
sbb
adc
xor
mov
out
adc
addr16
xchg
data16
popa
mov
sub
bt
inc
xor
mov
sub
aaa
repz
mov
xor
cmp
cltd
jne
cli
jne
jge
jecxz
add
push
out
push
pop
add
arpl
loope
ljmp
les
sbbb
fidivrs
outsb
aam
push
cmp
adc
out
jae
sbb
push
in
outsl
fdivr
int3
push
aad
ljmp
adc
out
add
rol
jmp
stos
sahf
sub
int
push
call
inc
adc
out
jmp
mov
adc
cwtl
loope
scas
bound
movsb
jnp
cmp
mov
sub
xchg
test
and
pop
loop
imulb
jecxz
sub
cmp
mov
test
cmp
imul
pop
jae
test
sub
push
cmp
xor
and
xchg
icebp
data16
xchg
jle
es
stos
mov
call
lods
jne
popa
into
cmp
mov
loope
jg
lret
xor
popf
jno
mov
bound
xor
sub
dec
fs
ret
sbbb
jo
add
pusha
aaa
jge
arpl
cmp
adc
add
sub
loopne
test
pop
or
cmpsl
cltd
shlb
xchg
jno
stc
out
fwait
xchg
imul
inc
mov
mov
loopne
repnz
je
lret
add
sub
rorl
adc
push
mov
leave
ret
inc
sti
push
outsl
mov
sub
push
adc
sub
xchg
adc
repnz
cltd
add
in
mov
xor
stos
or
mov
fisttpl
pop
mov
dec
jge
jl
jo
aas
cli
and
mov
pop
subl
pop
pushl
pop
enter
out
fnstcw
push
enter
jb
insb
and
lret
mov
adc
xchg
ffree
jae
cmp
div
sbbb
cltd
inc
inc
inc
sub
mov
ja
cli
sti
or
dec
or
dec
lahf
sbb
test
push
jne
xor
xorb
xchg
lcall
test
mov
cmpsl
mov
fcompl
sub
out
jns
lcall
in
push
and
pop
inc
stos
out
not
push
repnz
mov
inc
pop
nop
imul
test
xchg
dec
subl
sbb
bound
pop
loop
ss
into
jecxz
rorb
and
repnz
imul
adc
pop
xchg
fcomps
addr16
or
sub
mov
cld
dec
mov
jno
adc
test
outsb
sub
mov
cmpsb
insl
or
test
cmp
jp
adc
mov
jmp
cmp
add
sbb
in
pushf
std
lods
xor
add
xor
sbb
jae
jmp
push
insb
pop
pop
mov
scas
cmpsl
xchg
popf
inc
das
aad
pop
sub
dec
dec
fisubl
cltd
dec
test
pusha
sbb
xchg
sbb
dec
pop
std
adc
clc
stos
hlt
in
cmp
adc
push
je
sbb
mov
mov
sbb
jo
fs
arpl
sbb
cmpsb
push
clc
test
xchg
cwtl
jbe
cmp
mov
and
into
mov
push
pop
pop
test
negl
cli
xlat
pop
cmp
sbb
push
test
inc
cmp
mov
jge
adc
mov
or
push
mov
inc
aam
xor
lds
push
outsl
mov
popf
lret
repz
pushf
ja
std
stos
adc
add
imul
push
cld
pop
sti
xchg
sub
cmpsl
and
icebp
ja
lcall
mov
fs
mov
insb
sbb
in
jbe
mov
mov
cmp
sub
or
cltd
out
out
pop
lea
roll
add
daa
adc
push
mov
mov
orl
test
lods
add
adc
xchg
aaa
mov
call
out
xchg
inc
in
cmp
rorb
outsl
mov
loop
pushf
pop
addr16
lock
fiaddl
out
jnp
pusha
mov
fsubrs
adc
push
and
jne
sub
pop
call
das
sarb
call
inc
jecxz
sub
push
mov
in
scas
mov
sti
or
out
pusha
adc
addl
add
lea
filds
or
jp
fsubrl
fsub
cmp
fcmovb
sub
aaa
stc
into
cmc
pop
mov
add
ficomps
sarl
xchg
or
inc
mov
add
aam
jne
mov
dec
sub
fwait
punpcklbw
sbb
pop
fnstenv
jo
ja
jo
pop
mov
mov
in
clc
sbb
lcall
lahf
negb
dec
mov
out
mov
and
pop
shl
dec
out
dec
lret
stc
xacquire
lds
ja
mov
hlt
jp
cli
sahf
outsl
jns
pop
ret
in
out
mov
fstpl
insb
std
cmp
and
jmp
and
repnz
mov
int
mov
lret
cmp
add
repnz
push
nop
push
sub
dec
mov
pop
push
lcall
enter
and
mov
cltd
dec
mov
dec
sbb
data16
add
lds
adc
xchg
insb
int3
or
dec
sub
ja
push
outsb
loopne
push
xlat
out
or
in
mov
cmp
pop
cld
sbb
fcmovnu
xorl
incb
xchg
pop
fadds
stos
test
pop
adc
xchg
shrb
xor
insl
dec
add
into
dec
les
or
imul
testb
mov
mov
repz
loopne
mov
xchg
xchg
je
sub
push
push
xchg
jb
or
in
xchg
pop
aad
push
shll
sbb
mov
sub
cmp
shll
inc
insl
sub
or
cmp
fwait
in
packuswb
ss
ds
sbb
lods
lcall
ja
mul
xchg
or
insl
aad
cmp
and
cs
inc
or
xchg
sub
jo
test
lods
sub
mov
jg
cmp
pop
or
inc
ss
jo
loope
adc
mov
sbb
hlt
ficoms
jmp
xchg
pushf
mov
xchg
inc
fwait
popa
inc
sahf
xchg
mov
bound
loopne
lcall
pushf
mov
mov
pusha
call
dec
or
sarl
push
push
js
aaa
fs
nop
pop
aad
pushf
inc
out
xchg
and
mov
dec
sbb
ror
fs
fidivrs
adc
push
jbe
arpl
add
or
xlat
fsts
push
repz
push
mov
sbb
jl
xchg
fnstcw
daa
and
or
outsb
scas
stos
out
aad
cmp
pop
adc
pop
xchg
adc
mov
cwtl
sbb
adcb
xchg
stc
push
imul
mov
out
int
sub
sarb
shlb
addr16
cwtl
pop
jg
inc
ficoms
es
mov
xchg
call
jo
xor
pop
scas
test
nop
and
cmp
jno
jmp
xchg
dec
stc
hlt
stc
pop
sbb
mov
lahf
insl
mov
cmpb
jo
lea
pop
cmp
or
dec
push
lret
fildll
dec
mov
inc
mov
inc
daa
rol
adc
mov
cmp
test
sti
jl
lea
pop
in
inc
xlat
enter
enter
sbb
mov
xchg
mov
clc
pop
in
pop
cld
cmp
lea
outsb
push
adc
rorl
pop
fidivl
outsl
cli
push
negb
out
or
push
xchg
dec
dec
cs
popl
aam
test
sbb
in
mov
imul
fisubs
dec
adcl
jae
das
jnp
stc
jecxz
jl
xchg
int
mov
xchg
and
lods
push
bswap
ds
repnz
gs
sbb
and
insb
xchg
adc
inc
xchg
dec
pop
fidivrl
sbb
pop
add
push
dec
pushf
aaa
push
imul
pop
xchg
lock
std
ja
insl
inc
jecxz
sbb
or
loopne
sahf
mov
push
push
cwtl
mov
aam
fimuls
mov
mov
xchg
adc
push
pusha
dec
push
xchg
mov
xor
mov
test
lea
jmp
add
push
xor
ljmp
daa
out
pop
std
add
outsl
sub
ret
ja
clc
das
cmp
sub
lahf
pushf
xchg
in
mov
lret
fdivl
gs
scas
cmpsb
and
jbe
mov
inc
scas
xchg
mov
xchg
jge
or
pop
or
sub
fsubl
outsb
sub
inc
idiv
xor
lock
int3
pop
insl
dec
popa
sbb
outsl
subl
insb
dec
in
mov
dec
mov
mov
pusha
dec
addr16
pop
mov
lods
cmp
fsubrp
sub
mov
std
and
lcall
sub
xor
and
sbb
sbb
xorb
xchg
adc
mov
jmp
and
lret
push
jno
pop
enter
div
cmp
inc
jecxz
mov
lcall
lret
xor
xor
std
js
push
in
es
not
jmp
mov
add
cmc
jmp
mov
cmc
dec
pushf
mov
xor
shlb
div
std
cs
mov
sbb
mov
push
jne
dec
loopne
fsubs
sbb
mov
sbb
into
and
sti
pop
lahf
fs
mov
popf
jg
pop
aaa
in
fwait
out
cs
das
in
nop
push
outsl
pop
movsl
sub
mov
sub
enter
fmuls
mov
pop
lahf
sti
test
jle
imul
cmp
adc
int3
pusha
mov
js
fsubrl
out
das
or
mov
pop
or
cmc
jmp
mov
fidivl
aad
push
out
test
mov
shll
push
enter
xorl
scas
sbb
decb
stc
stos
xor
pop
imul
xcrypt-cbc
cmpsl
pop
stos
flds
fidivl
std
mov
xchg
outsl
js
pop
jl
decb
mov
jnp
inc
mov
sbb
dec
cmp
push
cmc
in
cld
lds
loopne
sbb
xchg
sbb
cmp
outsl
aad
aaa
xor
ljmp
mov
mov
or
pop
ss
xchg
mov
loop
mov
bound
subl
lret
lock
inc
jb
jp
sbb
subb
lret
xchg
imul
test
mov
scas
movsb
dec
cmp
xchg
pop
inc
call
fwait
bound
cmpsb
xor
leave
adc
and
sub
jb
pop
cmp
leave
divb
xlat
pop
mov
adc
loop
push
dec
shlb
mov
mov
je
pop
popf
ljmp
push
scas
jmp
jnp
jnp
mov
data16
repnz
enter
adc
movsb
aad
out
push
jecxz
jmp
dec
push
shll
pop
or
jns
sub
insl
mov
push
call
jp
mov
and
sub
mov
movsb
ljmp
vmovaps
cs
push
lods
cmp
hlt
fs
mov
ja
push
add
adcl
xchg
push
into
aam
pushf
and
jmp
or
push
push
adc
aam
out
rcrl
inc
aaa
xor
negl
sbb
rcl
xlat
mov
ja
mov
mov
adc
cmp
repnz
pop
in
ffreep
daa
xor
inc
push
xchg
call
shlb
jnp
xor
fnop
call
jbe
fs
loope
pop
adc
mov
cmpsb
jae
cmp
lock
pop
int
pusha
pop
lret
enter
loop
xor
gs
aas
xchg
pop
mov
cmp
xchg
mov
dec
addr16
je
sahf
outsl
mov
sbb
xchg
lods
jl
mov
push
das
int3
jge
sub
fisubs
jo
or
pop
movsl
jb
lods
stos
xchg
aad
mov
push
dec
insb
mov
mov
in
loop
sub
jae
adc
in
and
pop
loopne
push
pop
mov
add
call
loopne
cli
or
ret
bound
imul
push
pop
fistpll
out
mov
mov
std
or
and
fiaddl
mov
or
xchg
sub
arpl
adc
icebp
mov
push
push
dec
shlb
das
xchg
jb
cmpb
lret
or
pop
outsl
xor
lods
xor
es
fadd
mov
add
std
movsl
nop
cmp
mov
cmp
pushf
jmp
sbb
xor
and
lods
fsts
stc
fdiv
loope
adc
jmpw
das
inc
outsl
sub
cmp
mov
and
sub
jg
ja
xchg
jbe
jle
loope
enter
mov
out
ret
xor
mov
inc
and
cmpb
mov
or
and
dec
les
jl
jb
or
enter
push
ja
insb
mov
xchg
fnstenv
inc
xchg
pop
xchg
jns
outsb
xor
iret
xchg
aas
cmp
not
jle
popa
xor
in
mov
mov
ds
in
out
data16
xchg
xchg
jae
adc
aas
call
imul
shl
outsb
cmpsl
mov
aam
mov
xor
inc
push
inc
popf
cmpsb
aas
aad
lcall
nop
jne
mov
cmc
mov
adc
std
ss
mov
js
aas
std
sbb
jbe
cmp
pop
leave
outsl
gs
and
or
dec
push
stc
movsl
cmp
xor
push
test
mov
mov
mov
inc
jle
idiv
mov
push
pop
cmpsb
inc
in
xchg
test
jecxz
bound
testl
popf
inc
out
out
fcoml
sbb
xchg
cs
test
fwait
fwait
sub
xchg
aaa
test
adc
mov
fildl
repnz
dec
inc
addl
pop
aaa
aam
lret
adc
add
adc
pushl
pop
rolb
push
scas
add
cmpb
or
cli
or
mov
cld
pushl
sub
adc
bound
adcl
into
cli
mov
call
popf
inc
mov
lds
out
lcall
jge
cmc
and
test
stos
ds
rol
jo
roll
ds
mov
add
mov
xchg
jg
sbb
fnsave
push
add
mov
daa
mov
dec
leave
shrl
cs
mov
fisttpll
insl
jb
lcall
jge
aam
dec
jg
sub
cmp
je,pn
and
push
xchg
jmp
dec
mov
pop
and
sub
loopne
sub
xor
mov
and
and
xor
pusha
pop
dec
fwait
in
into
jle
jne
aaa
jo
mov
dec
jmp
repz
mov
sahf
adc
test
roll
test
and
adc
sub
cmp
mov
inc
cli
xchg
punpckhbw
cmp
rorb
das
orl
fsubl
das
xlat
inc
and
cmp
mov
cmp
imul
int
call
jge
std
add
and
aas
les
sbb
fsub
cmp
mov
scas
clc
push
mov
in
mov
dec
or
pop
inc
shrb
pop
loope
mov
jmp
pop
imull
cs
int
out
std
sub
sarl
push
popf
sahf
mov
insb
in
mov
xchg
js
xchg
loopne,pn
cmp
cltd
sbb
lods
add
adc
aam
lods
rorl
icebp
sub
xor
and
ret
out
cmp
jno
pop
jno
add
xor
push
lcall
shll
out
mov
sbb
lahf
arpl
mov
aas
inc
xor
sbb
push
imul
sbb
push
aas
cmp
inc
imul
loopne
and
xchg
into
cmp
lock
shll
aas
cmp
mov
psubsb
lods
ja
xchg
aaa
cmpl
jmp
sbb
xchg
pop
insl
inc
push
int
in
cmpb
inc
xchg
mov
iret
psubsb
jb
sub
jp
dec
lock
mov
adc
divl
push
cmp
add
ljmp
xchg
sti
dec
lods
push
fidivl
or
ljmp
xor
sub
cmp
loope
xchg
mov
std
jle
js
in
push
fldcw
mov
insl
fildl
scas
xchg
adc
aad
lods
push
push
inc
jecxz
and
repnz
in
xchg
cli
xchg
movsl
fbstp
bound
hlt
stos
cmpsb
jp
sub
pop
mov
cmp
ret
scas
and
xchg
sub
clc
adc
roll
or
and
xchg
data16
movb
pop
cmp
push
and
jecxz
xlat
outsb
push
cmp
and
and
out
sti
popa
lret
and
popa
dec
push
imul
dec
test
and
enter
or
push
sti
in
imul
push
fiaddl
adcb
lods
roll
popl
push
jne
in
loop
or
mov
pop
icebp
test
movb
cmp
dec
fucom
cmc
dec
jnp
daa
leave
cmp
adc
mov
test
insl
cmp
fildl
sbb
cmc
ss
or
or
cmpsb
adc
push
sbb
xorb
int
mov
adc
daa
aas
inc
lds
adc
mov
jge
lea
gs
pop
neg
mov
ret
loop
add
inc
add
loope
xor
or
push
xchg
mov
repnz
push
adc
adc
movsb
push
cmp
int3
std
mov
testb
push
add
inc
ret
flds
push
push
lcall
aam
dec
push
call
xor
xchg
ficomps
mov
and
cwtl
mov
je
jne
cwtl
inc
aas
test
popf
jl
dec
shll
pop
inc
adc
sbb
xchg
adc
mov
lahf
dec
mov
int3
fwait
mov
jnp
xchg
into
jg
inc
into
jo
pop
es
add
cwtl
loopne
ja
enter
das
nop
xchg
scas
inc
out
mov
add
sbb
mov
test
lds
pusha
mov
jbe
jmp
fildll
aad
mov
cmp
add
stos
fsubrs
mov
data16
jns
insb
jl
xchg
or
ja
inc
mov
fwait
cmp
aaa
jnp
arpl
fisttps
inc
push
cmp
inc
sub
out
adc
ss
inc
or
push
and
mov
jle
pop
xor
lcall
push
pushf
in
and
add
imul
lret
mov
push
mov
or
cmp
xor
pop
lret
pop
test
add
mov
sbbb
fistpl
sub
mov
lahf
mov
clc
sbb
or
cmp
cmp
mov
mov
push
push
sub
fmul
call
sbb
mov
mov
int
negb
idivl
mov
das
jg
push
mov
out
or
ss
mov
rclb
mov
xchg
in
jnp
test
push
ss
outsl
xchg
test
ja
stos
mov
mov
mov
push
stos
xlat
xlat
cmp
daa
sti
nop
addb
test
add
leave
xchg
divl
jns
stos
mov
scas
pop
jmp
pushf
cmp
ret
mov
pop
add
push
push
pop
inc
adc
add
frstor
popf
lds
movups
jb
mov
test
ret
test
aas
and
popf
std
ds
les
and
jo
shlb
je
call
push
mov
icebp
mov
cmp
fwait
dec
inc
add
jge
push
xchg
outsb
pop
sbb
inc
xchg
std
lahf
dec
sub
xchg
adc
pop
pop
aam
lods
lods
enter
ss
lds
mov
inc
stos
popf
mov
lea
jl
pop
mov
xchg
and
pop
icebp
push
dec
jle
mov
push
inc
cwtl
stos
jne
movsb
in
or
or
out
jnp
std
xchg
cmp
aas
test
sub
test
jmp
add
lds
in
shl
dec
pop
mov
insb
sbb
pusha
cmp
movsl
cld
es
mov
or
inc
push
loop
adc
sbb
or
lods
repz
cld
push
add
ss
in
jbe
or
push
mov
mov
and
push
push
loopne
dec
aad
test
cmp
jmp
xchg
mov
arpl
fdivs
out
pop
iret
mov
in
in
push
mov
loopne
icebp
or
dec
into
sbb
mov
mov
pop
mov
lods
dec
in
lods
mov
push
sub
cwtl
loopne
jle
lea
js
das
cmp
sti
movsl
ds
sbb
movsb
mov
cltd
mov
and
mov
sbb
mov
imul
ret
std
sbb
pop
fucomi
inc
xchg
sub
nop
rol
mov
inc
movsl
mov
push
aaa
aad
jmp
jecxz
rcl
and
fwait
clc
decl
xor
enter
ret
mov
push
movsb
dec
lcall
xchg
mov
ret
into
aas
in
xchg
out
cmpsl
jno
dec
add
push
push
xor
add
lcall
bound
adc
cld
cmp
dec
dec
pushf
push
imull
sti
loop
jbe
jo
clc
add
aaa
dec
inc
inc
ret
push
adc
mov
std
les
jne
push
popa
cmc
into
mov
inc
enter
sub
unpcklps
std
xchg
nop
jg
stos
sbb
pop
mov
fs
and
jl
aas
mov
mov
inc
jg
mov
fsub
or
lret
les
decb
and
cmp
dec
stc
xorb
adc
lret
test
mov
lods
mov
cld
js
sbb
popf
adcb
cmp
out
push
inc
jbe
xchg
pop
mov
and
mov
xor
call
daa
outsb
sub
mov
aas
int3
std
cs
js
mov
mov
nop
lock
in
aam
mov
aas
hlt
leave
inc
loope
hlt
cmc
sub
imul
dec
cli
sbb
sub
sub
mov
fbld
inc
mov
mov
or
rcrb
cltd
xchg
push
and
out
ret
push
aam
stos
or
sub
add
sub
mov
push
pop
lahf
pop
pop
jae
mov
cmp
add
and
popa
cmpsl
mov
jmp
std
leave
stos
xchg
jae
popa
shll
repnz
test
jne
outsb
imul
pusha
or
scas
xorl
sbb
pop
inc
push
rclb
add
or
pop
pop
jbe
lret
push
cli
lods
add
rcll
stos
sahf
xor
shll
push
mov
sbb
mov
sub
scas
lcall
repnz
int3
loope
dec
ror
adc
jno
aam
in
or
mov
mov
lds
add
push
sbb
sub
mov
fsub
out
sub
in
aad
insb
aam
psubw
js
push
push
mov
adc
fsubl
lcall
push
adc
sbb
sub
aam
hlt
cmp
mov
cmpsl
ret
pop
jnp
pop
ss
pop
outsl
jb
pop
jae
scas
rcr
inc
shrl
stos
cmc
in
loope
pop
test
push
cwtl
and
popf
jecxz
mov
jecxz
cmp
cmpxchg8b
fisubrl
mov
es
dec
call
in
fldt
rcll
mov
xchg
sub
xor
es
cltd
inc
daa
cmp
adc
add
pop
fldcw
enter
loopne
aas
data16
outsl
les
mov
cmpsl
add
cmpsl
push
mov
in
pusha
leave
insb
outsl
lods
subl
or
lret
or
dec
cwtl
fisttps
jne
dec
jns
mov
pop
je
icebp
inc
add
or
or
xlat
bound
adc
pop
cltd
inc
arpl
pop
jo
fisubrs
mov
test
insb
inc
les
fidivrs
sub
out
pop
adc
arpl
inc
cmc
mov
mov
jne
and
popf
inc
cmp
scas
decb
mov
sahf
pop
mov
pop
stc
add
enter
ja
xlat
dec
xchg
xchg
cmp
loop
xor
enter
int3
lret
ss
mov
movsb
in
add
idivb
push
sub
iret
sub
mov
popf
sbb
out
sub
fistps
ficompl
aad
insb
out
insb
adc
js
cs
jmp
jmp
loop
inc
mov
ja
dec
dec
dec
stc
idivl
jecxz
pop
dec
dec
sbb
lret
pop
enter
xor
jge
pusha
dec
add
insb
xlat
xor
push
fstpl
mov
xchg
les
or
insl
aam
loop
cmp
xchg
lea
cld
jmp
leave
add
or
jns
into
in
subl
jmp
push
mov
pop
pop
adc
mov
jno
xchg
das
out
fiaddl
into
in
mov
lret
dec
mov
outsb
ljmp
sub
adc
or
sbb
push
lret
nop
mov
imul
mov
outsl
jp
lcall
daa
ret
inc
and
test
sub
jnp
icebp
xchg
xor
rorl
out
insl
adc
and
adc
rcl
addr16
fucomp
mov
push
jae,pt
lods
scas
in
sbb
outsl
jnp
xor
ljmp
lret
lods
fnsave
mov
outsl
lock
inc
adc
cs
sti
add
pop
sub
addr16
js
add
mov
mov
mov
daa
cltd
add
cld
enter
lret
arpl
dec
test
shrb
or
popf
dec
xor
mov
fstl
lea
out
ja
add
test
push
call
loopne
aaa
mov
es
mov
xchg
pop
inc
lcall
mov
mov
shlb
push
cltd
test
xor
pop
bound
push
pushf
int
fists
dec
roll
dec
mov
aaa
pop
mov
xchg
pop
sub
int
cwtl
adc
movsl
jle
mov
mov
cmp
mov
push
push
xor
fisttpl
jno
stos
pop
push
ficoms
inc
into
mov
cwtl
mov
divl
and
jp
in
inc
pop
sbb
and
out
mov
out
cmpsl
mov
repz
loop
std
repnz
mov
leave
add
fldcw
lcall
or
dec
aas
test
xor
icebp
or
out
movsl
inc
std
mov
dec
outsb
cmp
clc
mov
ret
sbb
scas
fmuls
add
xlat
test
mov
xlat
outsb
pop
or
clc
clc
pop
lock
stc
xlat
xchg
dec
mov
pop
orl
sub
add
jl
in
adc
out
lahf
sub
pop
jg
mov
aaa
jmp
aad
jne
inc
mov
int
popf
dec
lret
pop
xchg
or
aad
in
dec
sub
imul
ficomps
dec
stc
push
sub
cmp
push
pusha
jecxz
add
popl
mov
ss
mov
or
and
pop
sub
pusha
outsb
movsl
fisubs
jmp
xchg
int
push
sti
pusha
jmp
xchg
outsb
jb
add
jecxz
sub
in
or
push
xchg
mov
out
rcrb
fcomip
pop
jbe
xchg
dec
mov
sub
stc
je
leave
and
or
inc
stc
mov
pop
push
loopne
adc
loopne
gs
data16
mov
pop
imulb
hlt
stos
jns
or
movb
into
push
daa
ja
fnstsw
rol
xchg
jge
jmp
pop
negb
jae
in
shrl
rcl
scas
std
or
daa
repnz
outsb
jmp
mov
mov
nop
dec
sub
divl
cmp
shrl
adc
leave
xchg
in
aaa
sahf
jns
sub
inc
and
lcall
inc
imul
jp
test
mov
mov
pop
inc
dec
mov
clc
mov
popf
rcl
push
outsl
jmp
icebp
push
add
pop
dec
push
mov
sbb
rol
decb
addr16
fnsave
mov
shrl
stos
and
shrl
cltd
mov
or
test
std
jp
test
pop
lods
frstor
fdivr
mov
cmp
int
movsb
repnz
add
xor
mov
fs
in
lcall
mov
adc
cmp
lahf
pop
xchg
idivl
mov
mov
ret
jecxz
loope
xchg
inc
mov
mov
pop
vpsubusw
push
out
push
es
add
xor
xchg
ret
inc
or
arpl
sbb
enter
call
xlat
mov
fwait
unpcklps
pop
xchg
cli
mull
fisubrl
lods
jbe
shll
cmpsl
out
mov
jb
mov
xor
in
xor
jb
jp
pop
xchg
sbbl
lods
add
inc
sbb
cmp
sarb
sbb
add
daa
dec
and
pop
ss
scas
sbbb
jno
mov
test
mov
pop
or
js
les
outsl
xor
das
sbb
xor
and
stos
int3
cwtl
mov
or
pop
lds
cmp
ljmp
jp
sbb
mov
test
inc
xchg
test
jecxz
ja
aad
adc
add
mov
jg
mov
jae
sbb
mov
inc
addb
in
insb
cmc
lea
add
and
xor
push
or
mov
cltd
fidivrl
xchg
addr16
fists
inc
movb
pop
mov
xchg
sbbb
movsl
mov
sbb
loop
inc
test
aad
push
xchg
out
js
push
jmp
outsb
pop
add
clc
dec
nop
sbb
inc
ja
lret
pop
push
or
pop
cmpl
jo
fs
mov
loope
aad
pop
pop
xchg
sub
sub
xor
outsl
test
lahf
fwait
mov
psrld
dec
mov
mov
mov
lds
jnp
inc
and
neg
sub
jl
iret
lcall
dec
push
mov
add
adcl
mov
sub
lods
cmpsl
jp
pop
aas
popf
test
cmpb
sti
jbe
movsl
dec
mov
pusha
fmuls
bnd
mov
jmp
adc
jbe
sbb
add
mov
cmp
cmp
jnp
insl
add
cmpb
pop
in
dec
addr16
xchg
fcoml
ret
lahf
mov
lahf
ret
xchg
in
adc
in
mov
and
add
add
mov
jp
push
jp
xchg
loop
cmpsl
add
cmp
stos
xlat
shrb
repz
lret
fwait
addr16
ss
mov
clc
jge
out
cmpsb
sbb
in
push
xchg
icebp
sub
xor
insb
popa
shr
into
cmp
jne
jle
out
mov
sbb
addl
sub
pop
ljmp
adc
call
sub
lea
loopne
mov
fwait
insl
paddw
in
aam
adc
cmp
lea
xchg
mov
in
arpl
or
lods
add
add
std
dec
or
cmpsb
iret
cltd
jb
sub
test
inc
insb
test
iret
fsubl
rorb
xor
aas
movsl
inc
test
scas
mov
scas
sbb
sbb
les
clc
std
scas
je
dec
sahf
insb
popa
cmp
into
mov
cmc
loop
shll
jbe
xlat
repz
fbstp
inc
adc
sbbl
roll
mov
xchg
fdivrl
scas
sbb
sbb
test
nop
xchg
fs
mov
mov
sub
mov
arpl
and
xchg
pop
out
out
pushf
sahf
xchg
subl
mov
mov
adc
mov
cmp
dec
pop
inc
imul
inc
and
shr
lods
jo
mov
hlt
int
aam
sbb
cmp
call
mov
pop
enter
sub
adcb
sahf
add
sbb
aad
push
or
dec
mov
push
stos
mov
test
cmpb
movsb
ljmp
lret
inc
push
cmp
repz
dec
xchg
push
push
inc
leave
fwait
imul
sbb
aam
scas
rcrl
jbe
or
or
out
jle
cmp
mov
lds
cmpsb
jge
repnz
sub
lcall
adcb
mov
push
out
jmp
call
imul
and
imul
cs
rol
cwtl
rcrb
push
stos
setp
lea
push
pop
push
jnp
subb
xor
or
and
add
nop
inc
cwtl
sbb
mov
adc
out
jp
sub
mov
mov
and
xlat
leave
xor
mov
or
mov
pop
xchg
adc
add
or
jno
mov
push
fsts
cmovl
xchg
mov
stos
sbb
stos
cmpsl
and
add
sbb
iret
fdivrl
and
outsl
cli
je
movsb
jg
cmp
adc
cmp
lea
sbb
jmp
cmp
sub
js
adc
xchg
jp
cmc
loopne
popf
xchg
stos
test
pop
inc
leave
outsl
and
mov
fdivs
stc
pop
std
mov
popa
int
sbb
cwtl
sti
and
rolb
xchg
pop
fldcw
sub
cmc
scas
fidivl
sti
test
iret
enter
push
fst
add
sub
mov
insl
add
cmp
das
xchg
xchg
sub
sub
decb
fbstp
sub
or
imul
and
fiaddl
mov
push
sub
cmp
cmp
jmp
arpl
jbe
push
cmpsl
out
pop
daa
fwait
rcrl
aam
xchg
lret
pop
jp
fcomi
movsl
fiaddl
pop
dec
push
mov
and
jle
mul
push
mov
sbb
fdivs
out
lret
lods
stos
fsubr
lahf
iret
repz
mov
test
or
inc
repnz
cmc
pop
insl
rorl
adc
inc
test
fisubl
imulb
xor
fs
lcall
stos
mov
mov
pop
outsb
jmp
lret
xchg
cltd
mov
add
push
inc
mov
testl
data16
mov
or
inc
dec
cmp
adc
sbb
jg
popf
xor
xor
rcrb
add
popf
nop
or
and
jge
into
cwtl
pop
lods
loope
xchg
mov
insl
andb
imul
mov
sbb
fcmovb
xchg
fiadds
push
shll
daa
push
sbb
adc
dec
and
xchg
ja
ja
leave
xor
jns
cwtl
jnp
divl
pop
jns
mov
sub
xor
sti
sub
and
or
lret
sbb
push
in
or
repz
jo
cs
popf
dec
cmp
gs
icebp
shl
roll
mov
inc
std
jg
adc
hlt
cs
adc
shrl
and
insl
adc
or
adc
inc
xor
daa
loop
push
adc
aas
je
sub
xchg
inc
dec
cmp
mov
or
mov
adc
push
test
cmp
jg
js
pop
xor
cltd
enter
das
push
rclb
mov
movsl
outsl
fldenv
cmp
push
add
push
test
xchg
sbb
sub
out
pop
sub
mov
xor
or
pop
add
inc
pop
pop
fstpt
xchg
inc
je
mov
fmuls
pop
js
fadds
add
push
mov
sbbl
xor
in
lahf
dec
jae
dec
mov
outsb
fsubs
rcll
mov
fldcw
int
pop
cltd
cmp
mov
jnp
pop
pop
shll
sbb
xor
jp
push
repnz
into
mov
xlat
test
clc
pop
cmpsb
or
in
jnp
mov
shrb
dec
jecxz
mov
sub
nop
cli
cs
mov
lods
stos
adc
fsubrl
cmpsb
mov
mov
dec
mov
scas
adc
ret
lret
ja
mov
mov
fimuls
push
push
stc
push
or
push
je
test
arpl
pop
inc
jmp
jb
bound
sbb
lods
aad
test
dec
cmp
or
repnz
inc
pop
in
xorb
les
jo
mov
push
push
push
test
jp
push
push
into
jo
dec
cmp
in
popa
fimuls
scas
call
fcompl
or
call
aas
mov
ja
xchg
mov
lahf
pop
sub
cmp
int
negl
dec
or
dec
scas
sub
jb
xor
movl
test
pop
ror
in
stos
fwait
test
outsb
mov
dec
ret
fistl
cmpsl
inc
test
push
sbb
xor
in
adc
or
mov
adc
imul
mov
fbld
fists
rorb
nop
mov
inc
aam
fcomps
out
movsb
mov
push
adc
dec
adc
xor
pusha
iret
dec
mov
inc
inc
scas
scas
out
ja
neg
push
stos
pusha
push
aad
or
sbb
jp
add
ss
loope
inc
adc
inc
sub
xchg
enter
ljmp
subl
imul
sahf
sub
fldcw
hlt
mov
lcall
pop
xchg
sub
rorl
sarl
jmp
cmpsl
push
adc
clc
push
jbe
fs
outsl
pop
and
push
std
or
fs
js
mov
xchg
movsl
and
mov
push
loopne
jp
std
sub
push
sbb
shlb
in
and
inc
sub
add
sbb
test
pushf
pop
sbb
aaa
sub
arpl
mov
xor
sbb
lock
jnp
in
sbb
cs
ret
ds
mov
dec
bound
sbb
btc
dec
mov
push
insl
push
lahf
mov
mov
hlt
cmp
shl
fst
in
sbb
fnsave
repnz
pop
sub
mov
fs
jl
dec
sbb
cld
pop
mov
aad
jne
lds
out
iret
imul
mov
push
cmp
movsb
test
imul
xor
mov
push
dec
push
and
loope
aas
jo
xorb
mov
jmp
cld
cmpl
sar
outsb
ffree
xchg
sahf
fcmove
sub
rcrl
xor
xchg
subb
inc
sub
bound
sbb
mov
xor
test
aam
lods
inc
leave
mov
js
mulb
jecxz
ss
jnp
loop
enter
ret
rcrl
enter
xchg
jnp
cmc
ret
popf
mov
ficomps
test
popf
in
fsubl
jne
dec
pop
imul
pop
xor
jmp
sbb
clc
jno
in
cmp
push
jae
inc
mov
mov
and
les
xor
xorl
or
adc
in
inc
dec
mov
jno
add
mov
or
mov
loop
cmp
cltd
ret
mov
les
icebp
cmpsb
adc
add
movsl
push
call
div
jecxz
sarl
dec
addl
popa
cmpsl
mov
xor
stos
xchg
and
jo
xor
adc
push
cmpsl
push
adc
inc
xor
fcmovne
add
xchg
lret
pop
mov
jl
bound
jg
mov
pop
rcrb
outsb
stc
sahf
les
jle
jge
xchg
pop
pop
gs
mov
icebp
std
data16
pop
aad
data16
cli
int3
sbb
xlat
xchg
inc
shlb
mov
mov
push
mov
and
xor
adc
rcrb
bound
xorl
cld
repz
adc
adcb
dec
je
jne
xchg
lods
adc
xchg
cmc
sub
mov
push
insl
dec
xchg
dec
sub
gs
cli
and
mov
mov
jg
inc
mov
stc
push
lcall
jnp
fistl
mov
cmp
xor
hlt
subl
xor
aaa
adc
or
shlb
test
jnp
pusha
xchg
leave
adc
loope
push
ss
test
ljmp
push
push
shll
and
es
out
adc
push
clc
mov
or
cmp
inc
fdivrl
aas
dec
xchg
add
pop
push
or
push
lods
leave
inc
mov
movsb
sub
addb
cld
lcall
mov
cmp
enter
sub
fstpl
mov
out
sub
sub
pop
movsb
std
jo
xchg
xchg
mov
jmp
cmpsl
adc
into
xor
or
out
insb
sbb
out
xchg
jns,pn
xor
xchg
cs
in
lds
xchg
fsubr
fsubrs
xchg
cli
sbb
xchg
mov
jmp
push
in
pop
in
cld
inc
movsl
mov
inc
sbb
pop
in
shrl
xchg
dec
pop
mov
cmp
jo
cwtl
cltd
adc
mov
jne
leave
cmp
bound
push
leave
xchg
mov
andb
out
cmpsb
dec
fistps
sti
loop
add
adc
ss
xor
mov
cmp
mov
out
divb
mov
jg
mov
shll
cs
xchg
aaa
lods
xor
mov
inc
loopne
aam
test
xor
xchg
xlat
inc
dec
cld
leave
add
test
rol
test
rorb
mov
pop
cmpsb
sbb
cmp
cwtl
jge
mov
dec
fsub
adc
jo
mov
sbb
mov
sahf
mov
and
jmp
int
adc
stc
pop
and
xor
cmpsl
sti
add
mov
mov
mov
add
or
xchg
fidivrs
in
in
xor
pop
mov
pop
ljmp
fcomps
test
aas
jge
cmovno
xchg
leave
adcl
js
shrb
aaa
xchg
jg
or
or
inc
fisttps
mov
push
je
pop
stos
inc
out
fwait
bound
andb
shlb
popf
stos
xor
xor
xchg
fnstsw
push
push
repz
scas
add
sub
add
cmp
cmp
int
ljmp
and
andl
in
jne
dec
adc
shll
iret
pop
push
pop
inc
xchg
cltd
out
pushw
test
enter
test
inc
ror
inc
jb
mov
rorl
test
rorb
mov
xchg
push
dec
inc
cmp
jle
dec
pop
icebp
call
and
in
pop
les
int3
in
ljmp
sti
cmp
mov
mov
adc
push
xchg
jno
push
cmp
cmp
mov
xchg
fwait
decb
inc
sbb
fwait
jne
mov
push
fidivrl
sbb
push
inc
out
shrl
xor
ja
pop
cs
push
or
xchg
rclb
das
nop
mov
cmp
flds
imul
xchg
jno
or
or
inc
loop
shlb
ljmp
neg
add
add
les
push
lods
mov
mov
call
fcoml
xchg
mov
jge
pop
loopne
in
loop
test
cmp
out
cltd
jmp
adc
or
mov
repnz
mov
inc
push
mov
lret
inc
shll
icebp
cmp
arpl
test
jnp
ret
add
jecxz
loopne
push
mov
xchg
in
movsl
xchg
stos
mov
and
xor
rol
pushl
ffree
ret
imul
je
movsl
insb
mov
cmp
add
enter
out
sbb
xlat
shrb
insb
and
mov
lock
outsb
pusha
out
ret
push
popf
sub
adc
xchg
stos
add
in
add
mov
ds
xor
jmp
sbbb
cmp
out
addl
lods
pop
or
mull
mov
jno
mov
scas
out
setns
fwait
je
std
orps
mov
sbb
stos
xchg
imul
cmp
test
into
test
and
dec
inc
mov
jecxz
push
hlt
mov
lea
and
dec
mov
or
in
cld
loope,pn
sub
sbb
hlt
push
in
cmp
gs
test
out
hlt
cmp
decb
mov
jo
fimull
sbb
or
and
fiaddl
jg
imul
lahf
lods
adc
push
sbb
xchg
je
test
inc
cmp
imul
adc
adc
or
scas
dec
ror
sti
movsb
mov
sub
aas
pushl
lret
inc
add
inc
xchg
fcmove
ficomps
and
ds
jae
div
stc
jo
adc
fcmovnu
jle
jmp
test
or
aad
inc
cld
cmp
stos
in
jb
jge
lret
mov
cmp
and
insb
lock
daa
aas
add
adc
loope
add
add
lods
xchg
shlb
xor
and
jecxz
pop
jecxz
adc
jg
mov
xchg
cmp
pop
pop
sbb
stc
mov
mov
into
fisubl
aaa
lock
add
sub
mov
cmc
pop
push
test
sub
mov
mov
mov
xchg
push
jo
add
xor
scas
std
pop
out
add
and
or
or
repz
push
xor
sub
pop
or
mov
test
add
push
push
and
in
and
xor
or
jmp
shll
in
mov
enter
adc
inc
fnstcw
rolb
add
int
loopne
cs
cmp
mov
stc
lods
into
sbb
sub
mov
in
cmp
ljmp
dec
frstor
sub
cmpsb
aas
cwtl
fdivp
imul
lret
push
outsl
pop
xor
mov
or
cld
loopne
std
test
sub
lret
xor
lods
sbb
jno
mov
cmp
and
dec
jbe
shrb
enter
or
outsl
inc
shlb
fimuls
adc
xor
jns
adc
fwait
adc
test
test
shll
mov
stos
nop
jbe
fistpl
iret
adc
or
mov
lods
dec
cltd
in
jg
push
jb
mov
shl
mov
loop
not
dec
data16
or
jl
rolb
or
or
mov
xor
pop
fmuls
sbb
xchg
hlt
cmp
clc
scas
imul
cmp
jnp
push
dec
insl
push
test
rclb
inc
les
xchg
push
pop
fnsave
push
test
test
imul
addr16
faddl
and
xor
sbb
pop
jmp
and
sub
xchg
jno
cwtl
sub
push
out
push
sti
sbb
add
fsubs
scas
jns
into
outsl
test
inc
add
jp
lret
jo
clc
mov
pop
cmp
and
into
mov
ffree
sub
shlb
mov
xchg
xor
or
call
dec
je
sub
scas
mov
push
fdivrs
and
sub
or
fimuls
pop
cmp
andl
sub
and
ret
aaa
out
cli
inc
inc
lret
rcrl
int3
int3
or
int
push
adc
jae
outsb
mov
in
pusha
movsl
lretw
push
stc
lahf
dec
add
lahf
xchg
or
cmpsb
ret
cmc
xor
insb
imul
in
pop
xor
push
stos
or
adc
dec
pusha
inc
inc
or
mov
pop
xchg
cmp
rcr
adc
int
inc
jo
push
cmp
cmpsl
push
daa
out
sbbl
xchg
inc
and
out
and
and
adc
dec
dec
lock
fsubrl
movsl
jnp
xor
stc
in
mov
add
and
leave
test
dec
pop
stos
jne
dec
pop
std
adc
xchg
cmpsl
sbb
mov
adc
mov
daa
cld
jle
jge
jno
push
sbb
fistpl
adc
aas
inc
pop
sbb
add
or
pop
hlt
loope
push
dec
inc
rol
pusha
push
mov
nop
adc
sbb
adc
cwtl
into
bound
adc
repz
ljmp
or
push
or
pop
push
sbb
push
mov
jmp
imul
fnstenv
xor
mov
xchg
cmc
cmp
lock
sub
fldl
js
cmpsb
mov
popf
and
mov
or
adc
xchg
icebp
mov
out
mov
jo
jbe
jno
pop
stc
aaa
mov
lahf
lea
daa
jmp
lcall
in
pop
jnp
mov
xchg
mov
sub
add
loopne
ja
sbb
dec
jl
xor
cmp
shlb
mov
adc
cmc
add
sbb
into
xchg
jge
xchg
push
mov
pop
nop
xor
xchg
dec
ret
lret
jge
add
imul
cmc
xor
push
xchg
cld
repz
fdivr
inc
mov
sub
cs
movl
sub
jbe
sub
jle
shll
pop
push
ja
imul
cmp
ljmp
mov
dec
jmp
mov
test
pop
push
mov
arpl
outsb
dec
xlat
inc
sarl
add
punpckhbw
leave
dec
pop
pop
mov
fsubrl
cmp
sahf
nop
inc
xor
inc
jno
shll
ss
in
xor
insl
mov
fucomi
test
repz
dec
xchg
loope
popf
out
pop
push
cltd
jno
push
popa
loop
push
pusha
outsl
dec
xor
imul
sbb
imul
insl
xchg
fldl
jmp
les
test
nop
xor
addl
icebp
mov
das
mov
aad
test
imul
mov
fcomp
mov
jno
dec
inc
add
sub
jb
jae
mov
fmuls
lcall
mov
lcall
sarl
fwait
xor
jmp
iret
js
xor
popa
lahf
mov
aad
xor
or
cwtl
xlat
das
sahf
add
pop
push
mov
cs
pop
cltd
mov
cmc
fs
scas
sbb
ja
outsb
stos
test
jns
add
push
mov
sbb
push
push
cld
icebp
cmp
in
push
mov
xor
dec
mov
dec
jne
xchg
test
ss
cmc
mov
lds
mov
aaa
nop
sti
or
sub
pop
sub
cmp
push
lock
dec
push
mov
int
int3
lock
xchg
push
mov
jge
fwait
cmp
stc
rcl
fcomps
incl
mov
test
lret
jae
mov
out
rorb
cmpsl
shll
add
sub
or
xor
into
clc
pop
push
xor
xor
sub
add
into
mov
cmpl
push
xlat
or
jns
shlb
je
lret
outsb
or
pop
mov
dec
dec
iret
mov
mov
jbe
loopne
mov
mov
xchg
pop
into
jmp
sahf
mov
cmp
or
mov
into
test
incl
lock
add
xchg
mulb
push
cmp
rolb
pop
xor
notb
enter
pop
sbb
ljmp
ret
and
fidivs
add
movsl
sbb
push
movsb
pop
movsl
dec
movsl
cli
xchg
mov
mov
rol
jmp
sbb
shrb
cmp
jb
sub
jne
bound
push
push
in
lods
icebp
add
or
daa
mov
pushf
pop
xchg
pop
icebp
add
pop
adc
int3
mov
and
mov
xchg
and
pop
flds
in
shll
xchg
addr16
and
out
inc
add
dec
out
add
cmp
pop
imul
sbb
xchg
fwait
pop
push
push
out
cmp
out
mov
adc
inc
enter
pop
dec
int3
mov
loopne
mov
fistps
push
and
xor
jl
aas
xchg
jl
fsubl
pop
mov
push
jno
cld
dec
lret
push
cmp
xchg
or
cmpsb
inc
aam
shlb
pop
cwtl
in
in
mov
out
jp
fisubs
dec
cmpsl
push
and
out
mov
fisttpl
add
mov
push
push
sub
jmp
mov
mov
js
and
xchg
inc
xchg
data16
xchg
jbe
sub
add
pop
add
imul
adc
scas
sbb
int3
les
xchg
jg
inc
rol
push
sub
rcrl
cmpsb
mov
mov
jo
mov
sub
mov
setle
sub
or
inc
adc
push
test
hlt
or
jmp
bound
and
xchg
lock
xor
test
push
sub
leave
stos
adcb
rcll
push
pop
scas
adc
pop
stos
or
xchg
outsl
shr
scas
in
dec
test
jae
repz
out
or
sahf
xlat
push
call
js
outsb
mov
xchg
int3
data16
xchg
jo
subl
movsl
inc
movsl
std
adc
or
mov
aad
icebp
out
cmp
inc
mov
ret
mov
inc
jge
sbb
mov
cmp
push
fcomps
mov
xchg
aam
cmp
psubb
adc
push
ss
adc
mulb
andb
addr16
mov
adc
repnz
pop
mov
jp
inc
je
push
cmp
fdivrs
push
mov
lcall
mov
inc
shrb
movsl
cmp
mov
mov
leave
push
jge
mov
jl
inc
xchg
add
ss
icebp
enter
rcll
sbb
faddl
add
sub
in
jae
inc
roll
mov
out
cmp
cmp
xor
fcom
push
sbb
enter
add
lods
inc
dec
insl
inc
dec
pusha
testb
jle
sbb
int
clc
xchg
ror
ds
leave
push
inc
jg
pop
fildll
dec
jg
lods
scas
dec
sarb
and
and
mov
out
cmp
daa
cmp
roll
sbb
push
aad
lea
pop
mov
nop
out
stos
xor
lcall
inc
or
cmpsl
mov
fisubrs
sub
jle
leave
int
jl
pop
cli
xchg
mulb
in
jge
adcl
fisubrl
js
dec
js
shl
icebp
loopne
xor
repnz
mov
xchg
dec
fstps
mov
pop
push
cli
xor
fistps
xchg
fnstcw
stos
fwait
inc
xlat
mov
mov
test
xor
repnz
jg
call
cs
add
or
in
mov
loopne
adc
or
testb
lods
dec
popl
mov
inc
pop
add
cwtl
sub
movsl
cmp
mov
loope
sub
rolb
or
clc
lahf
xor
mov
fadds
and
xlat
xor
mov
lahf
cmpsb
push
shrb
movl
and
inc
popa
out
stc
scas
push
ja
xor
xchg
je
mov
lods
sub
loopne
or
xchg
pop
into
push
jne
nop
leave
mov
xchg
mov
push
push
pop
jl
and
xchg
ljmp
cmp
or
cmpsl
xchg
ret
push
fcoms
mov
adc
push
rorb
pusha
push
and
xorb
push
daa
inc
sbb
ret
cs
je
sub
ds
dec
jl
mov
mov
inc
cld
mov
pop
xlat
test
pop
push
mov
push
jp
ss
iret
pop
or
sub
pop
out
mov
enter
in
push
cmp
ds
xor
mov
pcmpgtd
adc
arpl
rolb
pop
sub
mov
sbb
mov
xor
fmull
xchg
jo,pn
add
dec
mov
mov
scas
jmp
cmp
popf
xchg
dec
mov
sbb
stos
mov
in
fwait
jl
sbb
outsb
push
inc
sahf
aaa
push
dec
cltd
outsl
test
pop
sti
push
sar
inc
sbb
mov
stc
mov
leave
out
jo
call
insb
cs
jnp
or
dec
jg
xchg
adc
sub
pop
fcomp
inc
sbb
test
loop
and
sub
sbb
xor
stos
or
iret
xchg
out
or
push
aas
stc
mov
pop
inc
push
mov
mov
push
aas
adc
or
sti
sbb
pop
sub
mov
xlat
js
xchg
pusha
insb
jns
jno
mov
sbb
outsl
and
scas
mov
and
hlt
sub
cmp
push
and
jb
xor
push
fnstenv
pop
outsb
xchg
in
push
mov
in
insl
outsl
fsts
ljmp
dec
mov
mov
jns
sub
fs
mov
inc
cmp
or
xor
jp
lock
sub
addr16
add
and
mov
ffreep
adc
call
mov
into
dec
inc
insl
roll
mov
or
mov
repnz
dec
mov
bound
inc
mov
mov
adc
ret
jne
and
loopne
int
dec
das
push
push
or
push
add
adc
aaa
xor
insb
insb
arpl
out
stos
es
cmp
sub
push
rorl
les
and
mov
scas
rolb
stc
jno
jl
inc
in
lret
cmc
mov
cmp
add
add
push
sub
das
mov
push
push
mov
stc
inc
cmp
sahf
stc
fs
add
mov
data16
adcl
insb
mov
lret
ss
dec
adc
push
vpaddsw
or
pop
dec
cmp
sbb
sti
adc
stos
xchg
les
fdivs
shl
adcb
fwait
bound
aad
or
jle
mov
inc
mov
push
add
lods
negl
lahf
scas
cmp
aad
inc
mov
test
repz
mov
lcall
std
aas
out
mov
lea
repz
pop
ds
push
jg
sahf
in
mov
xlat
pusha
adc
push
out
ss
xchg
pop
das
out
movsb
inc
movsb
test
mov
dec
int3
loop
mov
pop
cmp
and
adc
out
xlat
rolb
adc
jne
ja
mov
sub
adc
sub
aad
inc
outsl
fwait
or
jnp
mov
and
pop
xchg
sti
enter
lods
adc
cmp
outsl
in
fs
fs
shrl
fadds
push
sub
fwait
jne
and
cmp
call
adc
arpl
es
int3
adc
pop
cmc
imul
or
push
out
lcall
dec
daa
iret
movsb
cli
cmp
xchg
push
push
cmpsl
and
ret
insb
rcrb
push
jns
imul
mov
enter
adc
hlt
push
mov
mov
push
inc
lds
xor
ss
out
pusha
outsl
adc
cmpsb
dec
cltd
lret
insb
mov
push
repz
mov
inc
or
push
imul
cmc
into
arpl
jbe
jno
imul
jb
jle
push
jmp
adc
fildl
repnz
cmpb
adc
aas
sub
jbe
push
and
or
or
adc
xchg
and
mov
dec
push
and
fcoms
mov
jae
fidivrs
and
das
jmp
xchg
arpl
xlat
outsb
pop
sub
ljmp
xor
cli
sbb
aam
hlt
aaa
dec
clc
cmc
push
imul
mov
cld
push
mov
cmc
cmp
inc
test
leave
cmove
in
idivb
movsb
pop
insb
mov
mov
jge
ficoml
imul
dec
xchg
adc
cs
mov
dec
xor
stc
int
push
test
fsubs
nop
or
sub
dec
repnz
test
inc
outsb
ds
mov
mov
mov
loope
jp
jns
imul
mov
adc
push
roll
imul
inc
jle
pusha
rol
and
cld
icebp
div
push
addr16
xor
mov
into
repnz
int
in
mov
sbb
fildl
pop
and
jno
lahf
fcomps
xchg
dec
rorl
pop
mov
inc
add
popa
or
loope
push
sbb
rcrl
jmp
test
cld
loope
stos
cmpsl
cmp
subb
add
and
xchg
jmp
push
rcrb
adc
and
lret
mov
fyl2xp1
scas
push
jmp
pop
iret
jle
idivb
adc
mov
outsb
fscale
int3
out
scas
jno
pop
mov
sub
add
js
cmp
outsl
inc
pop
lahf
inc
pop
xor
sub
test
pop
mov
cmp
dec
add
pop
push
out
gs
jecxz
ljmp
xchg
or
cmpsl
xchg
fsubl
out
sub
mov
das
loope
jbe
cmp
push
pop
shrb
cs
fmull
bswap
push
sbb
xor
clc
pop
mov
sti
mov
cmc
ljmp
pop
mov
push
mov
lcall
mov
xchg
pop
lahf
mov
cs
and
hlt
test
adc
rcrb
outsb
shl
jne
dec
stos
rclb
add
add
and
jle
xchg
mov
int
lds
push
add
xchg
insb
mov
sub
lcall
lods
mov
fstl
fnstcw
inc
in
push
movsb
daa
jae
cwtl
dec
call
test
dec
and
fs
aas
popf
rcrb
insl
adc
enter
push
or
and
daa
bound
sub
insb
mov
jge
inc
mov
repz
add
pop
int
aam
push
in
xchg
clc
imul
pop
int3
and
sbb
incb
addb
inc
hlt
stos
data16
dec
dec
dec
jo
fcoms
scas
xor
jne
in
dec
or
pop
in
sub
dec
xor
push
cmpsl
mov
cmc
les
mov
inc
mov
call
shlb
push
jmp
pusha
sbb
dec
cmp
dec
pop
or
mov
dec
xlat
aam
sbb
xor
jge
add
mov
in
pop
jmp
push
ljmp
cwtl
add
aam
incl
dec
mov
imul
dec
cmc
cmp
mov
push
xchg
xor
xchg
in
mov
xchg
sti
sbb
push
cmpsl
and
mov
movsl
xchg
rorb
movsb
enter
mov
lods
add
pushf
imul
rcrb
pop
jl
es
gs
in
outsl
iret
imul
push
imul
nop
xchg
mov
or
insb
add
and
jle
add
imul
jle
popf
cmc
test
mov
lods
add
cmpsl
mov
push
popa
pop
or
stos
mov
adc
sarl
cltd
cmp
int3
clc
xor
cmpsl
cli
stos
xor
jl
pusha
mov
cmpl
mov
or
test
xor
or
popa
adc
cwtl
mov
fnstcw
addr16
int
cmc
xor
fdivl
mov
enter
gs
lods
add
inc
push
pop
pop
mov
test
scas
push
jg
test
mov
mov
sub
adc
xlat
lret
int3
pop
or
ror
repnz
or
in
clc
lret
sbbl
push
pushf
adc
jle
dec
sahf
loop
inc
icebp
enter
aas
lods
pop
addr16
pop
xchg
mov
enter
cmp
push
imul
or
add
call
xchg
or
mov
or
sbb
inc
add
std
pop
cmp
xor
ja
dec
and
popa
sbb
xchg
ss
and
insl
inc
in
sub
mov
and
leave
gs
jp
std
cmp
or
pop
jge
cmp
push
incb
nop
lods
mov
rcll
gs
test
push
xchg
xchg
cmp
pop
sbb
push
iret
lock
xor
pop
jg
jne
ficompl
cmp
fdivs
loop
packsswb
repz
jae
loope
imul
test
cmp
lea
pop
pop
jl
cmp
mov
je
or
rcrl
mov
pop
pop
lock
pop
add
inc
jp
mov
fldcw
out
mov
adc
mov
popf
xchg
push
ljmp
mov
jae
mov
pop
gs
mov
clc
mov
mov
sbb
cmpsb
pop
or
mov
or
pop
testb
addr16
out
andb
push
iret
fmulp
mov
bound
cmpsb
fucomp
int
pop
lahf
add
mov
ficoml
and
jno
sti
sbb
repnz
mov
mov
dec
test
mov
pop
test
xchg
and
inc
xor
dec
outsl
jmp
test
mov
cmc
xchg
das
imul
ret
lds
xor
fadds
adc
xor
fidivl
mov
movsb
adc
addr16
cmp
mov
and
push
lods
sbb
mov
sub
adc
adc
sub
shlb
or
fbld
icebp
inc
jp
push
dec
scas
push
mov
in
in
xchg
mov
mov
test
pop
cmpsb
mov
dec
sub
dec
stos
in
imul
mov
movsb
lahf
mov
outsb
outsl
mov
scas
test
out
sub
ret
stos
mov
mov
pop
call
and
jl
rcrb
or
sbb
sbb
fdivrl
dec
and
data16
sbb
mov
push
mov
add
and
xor
push
sahf
push
sbb
dec
jae
std
lea
cmp
push
push
push
test
sbb
lcall
pop
mov
and
je
mov
lods
sub
fildl
jb
cwtl
cmp
pushf
andb
stos
cltd
inc
es
movsb
and
pop
out
imul
cltd
dec
push
xchg
loope
lcall
in
jns
xchg
add
cmp
sub
test
lcall
sub
in
pop
and
jmp
in
out
hlt
xchg
cmpsl
repz
cli
int3
xchg
xchg
lods
jnp
xor
jns
dec
xor
cltd
gs
jl
movl
sub
lahf
int3
repz
lock
movntq
mov
int
xor
mov
jl
inc
lahf
cmpl
flds
mov
and
xchg
clc
stos
in
bnd
xchg
pop
pusha
icebp
dec
xchg
stos
jp
adc
jmp
add
xlat
pop
fwait
jo
mov
adc
cli
add
sub
ds
ljmpw
xor
lea
inc
and
inc
inc
mov
push
insl
xor
mov
icebp
adc
jo
sub
rcll
jns
int3
sub
ficompl
xchg
lds
mov
es
inc
pop
sub
les
pop
sbb
movsl
testl
loop
pusha
xor
pop
push
pushf
xor
fildl
in
bound
and
pop
stc
mov
shr
ja
adc
jno
add
icebp
dec
cmp
and
jl
test
xchg
mov
cli
pop
jmp
inc
or
push
lea
pop
xchg
sbb
or
addl
push
es
push
jne
js
pop
out
add
sbb
xchg
ffreep
push
mov
ret
xchg
mov
sbb
sti
test
stc
xchg
ljmp
aaa
hlt
rcrl
jmp
nop
add
xchg
test
in
icebp
xchg
xor
call
mov
cwtl
xor
cmpsb
pop
movsl
call
daa
fstpl
and
jl
out
inc
addr16
push
dec
jns
fwait
test
mov
and
jno
cmpsb
fistpl
xchg
inc
in
aam
mov
sar
sub
out
sahf
cmc
mov
adc
inc
and
pop
out
cwtl
addr16
sbbl
mov
xor
mov
sahf
ja
mov
clc
ds
sti
jmp
lret
loopne
in
test
pushf
decl
lahf
and
arpl
jge
sbb
pop
xor
and
cmp
xchg
pop
in
ret
pop
fcomi
cwtl
pop
sbb
dec
and
push
dec
out
xchg
insl
mov
jmp
mov
pop
mov
xchg
js
out
mov
cmpsb
hlt
and
jae
ja
out
inc
push
ror
fiadds
pop
sbb
shrb
lret
add
lahf
inc
dec
or
mov
scas
ljmp
push
in
ja
xor
ja
xchg
sub
and
add
push
ja
int3
lret
adcb
cmpsl
insb
ss
cmp
ret
dec
ljmp
test
inc
in
adc
xlat
adc
push
or
jbe
adc
test
negb
mov
fdivr
dec
sbb
jge
sti
add
push
ljmp
jne
test
mull
pop
vpshrdd
mov
in
mov
iret
inc
xchg
push
out
push
cmp
sub
pop
daa
je
add
cmpb
test
sub
sub
lea
mov
fdiv
adc
fisttps
leave
and
cli
mov
sbb
icebp
cmp
sub
add
bound
nop
dec
cmpsb
xchg
cmp
test
jo
dec
push
xchg
mov
fadds
cwtl
std
scas
sbb
stc
or
fldl
jle
cmpsl
xor
test
and
les
cmpb
out
into
sub
shrb
cmp
rcr
xchg
adc
push
cli
ja
nop
mov
pop
mov
pop
cmp
mov
mov
inc
aas
or
out
xor
inc
ret
mov
jnp
rcr
clc
cltd
sbb
cmp
inc
jbe
mov
push
call
jmp
jnp
repnz
xchg
into
add
je
pushf
aas
hlt
ja
std
add
data16
int3
pop
jge
jge
sbb
fdivrl
xor
dec
sub
in
xchg
int3
or
cmc
xchg
xchg
cmp
xchg
cmpsl
inc
push
jmp
pop
imul
adc
xor
dec
test
lods
jno
out
mov
cmc
jmp
test
outsb
inc
enter
mov
lahf
mov
mov
outsl
movb
cs
dec
out
push
jle
rclb
jae
bswap
add
adc
xchg
icebp
pop
mov
mov
gs
cltd
ss
test
push
test
jge
mov
loope
in
xor
out
pop
iret
movsl
cs
push
mov
xor
addr16
xchg
push
pop
call
jle
cmp
mov
fsts
ja
pushf
andl
fstl
fidivs
xchg
sti
jo
fwait
xchg
icebp
mov
pop
adc
inc
subb
stos
rcl
xchg
mov
lock
rcrl
xchg
and
xchg
mov
icebp
pop
leave
add
sahf
adc
cmp
adc
call
mov
mov
push
and
lock
push
xchg
sti
insb
cmp
jno
mov
cmp
push
xor
test
xchg
xor
aad
lods
sub
add
sub
add
loopne
test
mov
ja
dec
stos
mov
jb
xor
in
cmp
and
add
jo
push
aaa
pop
or
jae
sub
xchg
push
mov
bound
addr16
pop
fistl
pop
ret
in
outsl
dec
inc
dec
loope
stc
inc
idivl
ret
push
dec
mov
popa
mov
cmp
adc
jne
idivb
call
out
les
push
stc
enter
push
movsl
xchg
and
scas
sti
cmp
ja
in
lret
pop
roll
ds
in
xchg
add
lahf
xchg
add
leave
jmp
out
and
imul
adc
clc
and
fucomip
push
and
push
sub
popf
mov
jecxz
sub
out
mov
fsubl
jnp
mov
lret
xchg
jo
in
mov
xor
mov
xor
bound
jmp
push
test
aaa
and
inc
in
add
leave
or
cmc
loope
sbb
rclb
and
mov
lcall
fs
movsb
lret
mov
ss
mov
xor
mov
imul
arpl
xchg
int3
cmpsb
enter
or
dec
sahf
rcr
mov
xchg
cwtl
jne
add
iret
ljmp
fmuls
iret
adc
jp
fadds
sbb
mov
fisubrs
mov
std
jb
shll
rorb
testl
mov
sbb
and
shl
test
cmp
mov
jae
push
ljmp
xchg
or
adc
dec
sub
sbbb
arpl
sub
jp
inc
sub
nop
and
into
and
dec
in
mov
mov
fildl
cmpsb
cmpsl
cld
cs
and
in
sub
mull
sub
mov
fadds
jmp
je
xchg
xor
rcrb
jb
aad
dec
out
sbb
cmpsb
fildll
cs
test
movsl
test
jnp
adc
out
inc
rol
in
mov
push
mov
fadd
or
je
loop
mov
in
mov
jb
cmpsb
mov
sbbb
push
fwait
mov
pop
pushf
cmp
clc
push
fidivrl
mov
jae
js
dec
jl
xchg
mov
xchg
fucomi
pop
rorl
adc
pop
fs
push
cmp
sbbl
push
jne
fildl
outsb
roll
scas
xchg
dec
mov
sub
jecxz
test
pop
jo
sub
lret
mov
sub
call
pop
test
mov
sar
lret
mov
mov
inc
mov
pop
jl,pt
pop
jns
xor
adcl
push
add
lock
sub
jg
lcall
test
ret
cmp
insl
push
daa
sub
xchg
mov
ljmp
mov
dec
and
add
xor
imul
mov
push
mov
pop
mov
es
fstl
repnz
inc
mov
mov
insl
fwait
rcll
sub
fs
mov
push
cld
mov
fstpt
scas
daa
and
sbbl
add
imul
mov
mov
ja
shlb
jno
sbb
adc
daa
movsb
lock
pop
and
adc
leave
out
rcll
xchg
popa
mov
dec
sub
and
js
fmul
out
es
pop
dec
in
inc
inc
sub
jae
cld
mov
mov
arpl
sti
adc
mov
add
cmc
mov
mov
jle
fadd
xchg
mov
in
sub
and
fldl
mov
outsb
mov
jecxz
or
cmc
add
test
and
icebp
shlb
jbe
mov
add
insb
lahf
in
inc
mov
ret
neg
icebp
jecxz
iret
sbb
xchg
jmp
lds
jns
push
fs
jnp
jecxz
divb
cltd
push
fsubs
jg
cmpl
cmp
pop
and
sbb
test
stc
leave
negb
lock
sti
or
pop
int3
jmp
xchg
push
jo
sub
mov
fucomip
push
pusha
jnp
and
mov
sarl
mov
or
je
loop
xchg
iret
mov
jbe
adc
int3
out
fdiv
mov
dec
jo
mov
xlat
or
popf
push
stos
loope
sub
jmp
mov
leave
xchg
lods
out
repnz
or
mov
xchg
scas
call
je
jl
das
mov
lods
into
aam
loop
pop
xchg
iret
sub
das
insb
lret
push
outsb
adc
mov
shll
shrb
aad
mov
sub
dec
xchg
cmp
stos
jae
xor
outsb
call
jne
adc
sahf
mov
fwait
xlat
xor
out
or
outsl
push
adc
xor
sti
clc
cmc
cmpsb
popf
fdivrl
cmp
xor
pop
pushf
push
push
dec
push
stos
fcompl
jb
and
or
movb
sub
mov
cs
shl
adc
in
js
adc
cmpsl
sbb
adc
jae
in
cwtl
addb
stc
je
mov
iret
add
outsl
pushf
pop
mov
das
jle
pushf
test
in
add
dec
mov
int3
out
push
add
adc
sahf
jp
cltd
movsb
xchg
sahf
xor
mov
out
inc
mov
leave
xchg
xor
xor
mov
fsts
insb
cmpsb
cmp
cmp
aaa
pop
sub
rclb
jg
jns
inc
dec
xlat
mov
mov
sbb
push
inc
repnz
mov
addr16
lock
movsb
fcmovbe
addr16
mov
js
mov
loop
xlat
loop
arpl
fistps
in
pop
add
cmp
iret
pop
clc
mov
push
aas
push
xor
lahf
cli
sub
adc
push
arpl
nop
and
inc
bound
lahf
xchg
jmp
or
or
ljmp
jmp
fdivs
test
inc
outsl
or
pop
pop
add
dec
jns
pusha
push
dec
cmpsl
fwait
ret
imul
mov
jmp
xchg
pop
jle
cmp
adc
sub
jnp
mov
jnp
push
jo
mov
imul
mov
cli
rcll
call
jl
mov
push
jmp
push
cli
shrl
in
ret
shll
pcmpeqw
sbb
lea
sub
pop
sahf
dec
test
adc
xor
cmp
adc
orb
sahf
cmp
add
fwait
lea
lret
insb
sbb
push
js
mov
cmpsb
aad
int
pop
jmp
xor
imul
pushf
out
cmpsl
push
push
mov
ror
or
cmpsb
mov
loope
pop
sarl
mov
inc
popa
je
inc
sbb
jno
xor
outsl
mov
ret
lods
mov
xor
icebp
ja
sub
mov
sbb
add
subb
cwtl
mov
pop
inc
inc
cmp
sbbb
xor
idiv
push
cwtl
mov
adc
cmpsl
push
insb
pushl
idivb
ret
lcall
ja
and
mov
rorl
xor
jo
push
xor
xlat
mov
jbe
xchg
pop
aas
sub
adc
xchg
jo
fadd
rcll
xor
inc
push
subb
movaps
add
fnsave
inc
or
pop
pusha
add
sub
mov
popa
ret
xchg
pop
lret
pop
je
fcmovbe
aaa
cmp
cli
xchg
jl
sbb
lock
lock
xor
leave
mov
pop
sbb
mov
sbb
ficompl
cmp
cltd
je
lahf
sub
test
add
and
jb
pop
mov
aaa
and
shll
push
push
pushf
pop
cmp
stc
dec
mov
jp
mov
sbb
fiaddl
movsb
nop
xchg
fisttps
outsb
imull
xchg
pop
jo
out
sub
jle
lret
or
cmpsb
test
in
inc
outsb
mov
inc
and
or
add
mov
outsw
lcall
aam
out
stos
xor
enter
lahf
ja
jns
xchg
cmp
jno
push
cld
gs
xor
ljmp
int3
ret
dec
scas
dec
push
mov
push
xchg
xor
push
scas
cmp
mov
xchg
or
and
or
fwait
sarl
in
push
test
xchg
add
or
in
cmp
xchg
cli
jge
mov
dec
mov
push
push
inc
std
je
mov
pop
das
stos
mov
jne
ss
push
rol
sbb
lret
mov
mov
jno
jge
sub
fwait
sbb
ret
xor
in
lret
jecxz
ja
stc
ja
jg
clc
xchg
inc
out
push
ss
adc
aad
test
movsl
mov
push
outsb
mov
jno
push
iret
out
xchg
cmpsl
popf
mov
mov
inc
hlt
jg
arpl
xchg
xchg
mov
leave
pop
sub
mov
xchg
test
movsb
dec
mov
sub
xor
inc
bound
ljmp
cmp
subb
add
test
shl
sbb
popa
push
lods
mov
and
cmp
mov
fisttps
iret
jno
jge
data16
inc
leave
fmull
push
dec
lock
push
mov
sbb
xor
lret
scas
xlat
mov
leave
push
in
fs
fiadds
addb
pop
lea
popa
sti
outsl
add
aad
sbb
arpl
sbb
je
loope
mov
cld
scas
es
insb
mov
inc
adc
shrb
mov
dec
mov
scas
arpl
stos
pop
mov
into
movsb
xor
test
and
aas
sbb
lods
xchg
mov
pop
pusha
scas
bound
stos
int3
ds
pushf
mov
and
xor
jno
xchg
shrl
or
add
xchg
xchg
dec
ja
jns
sub
ljmp
mov
and
cld
nop
pop
fdivrs
ficomps
or
mov
push
cmpsb
inc
sahf
add
mov
push
cmp
add
pop
mov
xor
add
xchg
loopne
aam
jnp
inc
rol
stos
mov
inc
pushf
loopne
int3
ja
daa
mov
jp
nop
push
dec
fstpt
mov
jae
sarb
fstpl
das
xchg
pop
push
jno
sub
aaa
out
test
or
cli
and
les
daa
cmpsb
loopne
xor
push
test
push
pop
adc
loop
mov
cmpsb
in
pop
pop
mov
aaa
mov
xor
fs
pop
pop
mov
shr
cs
jp
mov
mov
lret
fwait
test
ja
lods
cmpsb
sbb
lcall
inc
shll
cmp
stos
jno
pop
stos
sbb
xor
outsl
outsb
stos
fdivr
fcoms
stos
ret
mov
adc
popa
cmc
popa
insb
cli
xchg
or
xchg
push
inc
mov
in
lea
add
fmull
in
lods
xchg
pop
es
call
popa
stc
dec
cmc
mov
icebp
cmc
sub
xchg
dec
das
inc
push
dec
jb
cmp
outsl
cwtd
and
out
mov
insl
in
xor
ja
vmovntps
add
jg
cmp
and
inc
mov
insl
ja
lret
and
lahf
pop
inc
jne
test
cli
dec
and
mov
and
push
dec
jg
sti
out
repnz
in
mov
push
je
test
ds
aas
jae
push
insb
pop
jns
test
lds
test
cltd
adcb
jb
cli
out
adc
adc
add
stc
leave
xchg
pop
sub
sub
lea
mov
jecxz
cmp
test
icebp
sbb
or
fwait
add
test
push
inc
repnz
dec
dec
mov
shlb
cltd
and
push
out
shlb
add
shrl
or
pop
sbb
lods
in
xchg
mov
movsl
test
add
test
insb
or
pop
sbb
add
aaa
sbb
clc
mov
aam
sub
xor
push
ret
push
popf
and
push
xchg
jecxz
cmpsb
jb
stos
repnz
pop
pop
mov
ds
js
inc
aad
sbb
shll
pop
cmp
das
lds
repnz
dec
push
daa
sti
fucomip
pop
je
adc
push
push
and
jbe
jp
mov
in
movsl
xor
insl
fbld
subb
adc
cld
push
pop
pop
lods
divb
subb
push
sbb
mov
popa
mov
and
xor
xor
lahf
pop
fdivl
es
jns
enter
sbb
cmp
ja
sub
jno
cmp
repnz
fsub
hlt
stc
push
jno
pop
mov
dec
ret
push
cmp
xlat
push
sbb
fsts
loope
pop
pop
jge
mov
inc
test
test
les
and
add
push
repnz
fsts
loop
jg
xchg
mov
push
mov
mov
pop
repnz
xchg
or
add
icebp
lret
dec
mov
in
cmpsb
mov
insb
add
add
cmp
rcl
cmpl
jmp
scas
xlat
daa
xor
xor
call
mov
dec
cs
mov
mov
je
and
stc
call
movsl
mov
loop
or
inc
cltd
and
daa
mov
dec
add
loope
loope
cmp
cmc
mov
push
mov
sbb
sub
pushf
addl
in
addr16
pop
cmp
movsl
mov
jmp
cmc
or
xchg
fnstcw
xadd
dec
lret
clc
adc
stc
xor
cmp
leave
xchg
sbb
mov
ja
inc
ljmp
icebp
into
in
test
fsubl
jne
out
and
inc
mov
aam
enter
movsb
insl
and
sbb
sub
cltd
int3
jnp
cli
pavgw
ret
hlt
sbb
pop
pop
xor
and
jmp
outsl
xlat
jp
mov
jne
jl
mov
mov
cwtl
pop
sub
in
add
scas
jo
mov
or
mov
popa
cli
cmp
sbb
out
mov
pop
and
xchg
jbe
jg
add
or
into
cltd
mov
mov
call
leave
sub
icebp
add
inc
adc
repnz
jg
mov
mov
into
repnz
jb
adc
mov
xor
popa
jae
adc
cmpsl
orl
imul
push
sub
leave
push
rclb
xchg
leave
out
enter
mov
iret
jmp
xor
xchg
or
pop
pop
rcll
xor
inc
icebp
push
int
jle
inc
andl
sub
mov
lcall
movl
or
mov
clc
mov
sub
and
push
out
xchg
sbb
sti
sub
cmpsb
adc
xor
pop
inc
andps
dec
iret
test
and
mov
les
or
cmp
pop
int3
outsb
ret
xor
mov
mov
push
jg
mov
and
jae
jecxz
movsl
std
and
add
sbb
test
out
jae
mov
cmp
mov
sahf
ret
push
jno
push
jo
mov
orb
out
out
push
lods
jp
inc
adc
pop
ror
imul
repz
in
stc
mov
adcl
lock
insb
sbb
mov
addl
xor
pop
mov
pop
adc
sbb
adc
cwtl
or
push
arpl
mov
daa
dec
pop
mov
test
or
jns
mov
push
sahf
jmp
jmp
ret
aas
ficoms
sti
popf
movsb
inc
std
stos
call
add
enter
inc
mov
movsl
mov
dec
mov
mov
movsb
das
stc
mov
sub
xchg
pop
scas
pop
lret
mul
mov
mov
aaa
pop
fiadds
iret
jmp
xchg
xor
cltd
lahf
fmul
push
add
lock
xor
add
sub
enter
out
xor
jmp
jbe
jnp
push
aas
loope
out
xor
cwtl
mov
mov
xchg
cmc
sbb
jp
mov
mov
inc
and
dec
bound
mov
call
xchg
inc
xor
fsubp
popf
jle
cmp
or
cmp
jmp
roll
scas
ja
popa
push
mov
dec
sbb
jecxz
xor
mov
sbb
in
daa
sbb
ds
jmp
insl
jg
push
xor
pop
sbb
lods
pop
push
dec
mov
sub
dec
incl
ret
dec
and
js
mov
fistps
rep
push
mov
stc
jbe
pop
jmp
push
add
sbb
add
jae
mov
mov
pop
xor
xchg
pop
shl
std
xlat
fidivl
aad
stos
fdivs
hlt
sbb
fdivs
repnz
les
jns
ficompl
std
test
popf
out
ja
cli
push
push
ror
addb
pushf
in
jp
mov
ret
xchg
fwait
pop
test
ds
push
xchg
jle
psubb
insl
pop
inc
push
and
xlat
jns
jbe
fcomi
inc
fnstsw
sbb
and
stc
cmpsb
in
cli
xchg
jb
les
mov
iret
cmp
mov
stos
jno
adc
push
mov
outsb
out
in
std
nop
jb
xor
xchg
cli
fadd
inc
jno
scas
jbe
and
call
sbbl
adc
sti
lods
sbb
aas
iret
and
mov
mov
push
sbb
faddp
mov
rcll
cmp
js
or
adc
test
shrl
icebp
push
sub
inc
jns
stos
out
testl
cs
loop
stos
and
pushf
mov
xor
push
fs
insb
call
sbb
sbb
push
sub
fldt
xor
cs
pop
jno
outsb
das
and
mov
xchg
xchg
mov
fwait
dec
lahf
stc
jo
jne
stos
jo
push
loopne
ret
add
or
mov
cmp
inc
jno
sub
xchg
mov
jnp
popa
mov
cltd
loopne
loope
lock
inc
shrb
aam
mov
push
loope
sub
mov
fidivs
rcr
aas
dec
pop
call
das
sti
sbb
mov
aaa
mov
sub
dec
inc
and
mov
test
dec
std
lock
test
inc
sbb
mov
jb
pushf
jle
insl
cmp
cmp
or
mov
int3
ds
dec
es
cmp
mov
push
sub
test
mov
cmp
mov
cltd
cmpsl
in
or
sub
xchg
sbb
outsb
ds
shlb
in
mov
xchg
mov
sbb
fistl
push
cld
dec
mov
xchg
jle
mov
pop
add
push
inc
ljmp
adc
sub
je
test
sbb
lods
sbb
or
fxch
into
xchg
cmp
cmp
mov
aaa
push
loop
pusha
or
sahf
or
hlt
rcrb
mov
in
cwtl
xchg
shlb
lock
xchg
inc
lahf
orl
xchg
iret
ss
inc
das
adc
inc
xor
mov
fildll
jbe
fidivs
neg
leave
mov
loopne
add
test
out
add
pop
out
add
shrb
push
jp
pop
dec
pop
sbb
inc
ds
movsb
xor
and
incb
es
into
loop
pop
sbb
bound
pop
repz
clc
lret
clc
fwait
push
inc
add
loop
outsl
jo
dec
sub
mov
push
adc
aad
mov
call
and
in
aam
popa
pop
push
lock
add
mov
and
pop
mov
addl
and
xor
sub
xor
mov
mov
shrl
cmp
xor
dec
stc
lahf
xor
aaa
test
dec
jmp
inc
add
lea
in
push
inc
out
push
jbe
int
in
or
mov
lds
adc
or
and
and
jae
mov
lret
xor
sub
pop
push
adc
aad
mov
mov
fldt
fcompl
mov
pop
pop
mov
rorb
inc
jge
jne
cmpsb
aas
add
icebp
adc
mov
mov
mov
lods
ljmp
dec
scas
sbb
insl
lahf
push
mov
add
adc
addr16
shrb
aam
ret
mov
paddq
sarl
or
mov
fcoms
pusha
fsubrs
out
imul
pop
imul
adc
es
mov
into
shll
dec
fs
ret
push
call
cmc
add
dec
jns
test
lcall
jo
mov
mov
repnz
inc
adc
adc
rcr
push
mov
testb
jo
fsubrl
ja
enter
cmp
test
test
inc
roll
sub
push
mov
or
aam
repz
and
and
xchg
and
dec
jmp
sbb
xchg
push
iret
jg
into
fsts
ret
jae
or
cld
fwait
and
jnp
jl
sbbl
nop
je
mov
mov
mov
dec
jne
xor
xchg
fnsave
sub
fadds
orb
stos
lret
je
jnp
call
jge
mov
stos
adc
push
jns
shlb
pop
test
imul
mov
ss
insb
call
and
movsb
add
mov
mov
sbbb
lret
push
neg
cmp
andb
test
mov
popf
mov
test
xor
mov
dec
cmp
je
test
push
in
mov
test
in
movsb
cmc
sub
ret
into
push
leave
insl
inc
sub
mov
movsl
sbb
jmp
outsl
ds
in
jno
mov
adc
stc
xor
push
aas
xchg
scas
xchg
jmp
inc
enter
ja
aas
les
jmp
inc
lret
xor
stos
shlb
lea
cltd
aaa
bound
jb
xor
loopne
pop
rcrb
or
pop
sbb
mov
xlat
sbb
xor
loope
adc
ret
jns
int3
out
pop
jmp
ret
imul
arpl
mov
in
out
mov
adc
push
pop
loopne
dec
arpl
sub
cli
scas
lods
out
pop
dec
mov
jno
leave
xor
out
mov
scas
jge
lds
cmp
jb
orb
push
fsubp
movsb
mov
mov
lahf
mov
mov
or
push
stos
enter
imul
and
leave
sbb
push
add
leave
iret
je
cld
dec
jecxz
inc
dec
pop
or
cmp
addr16
jne
pop
rorb
sub
mov
idivb
sbb
fcompl
push
movsb
subb
inc
jle
filds
jl
in
repz
or
push
addr16
inc
xor
and
add
fs
mov
sub
outsl
lock
jl
ret
mov
mov
into
subb
mov
lock
push
push
lcall
jb
inc
sub
in
nop
push
jb
loopne
arpl
fnstcw
fadds
xor
sbb
loop
fcmovne
pop
pop
sub
mov
out
cmp
arpl
out
jbe
inc
out
jns
popa
and
and
mov
jge
int3
lret
aaa
mov
pop
jg
lock
push
lods
or
adc
call
pop
sub
mov
cltd
xchg
outsl
daa
sub
enter
imul
sub
jo
sub
std
add
adc
mov
je
ljmp
imull
shll
push
out
push
gs
inc
xchg
subl
or
jno
jae
repz
je
xor
outsb
mov
imul
sti
ja
lret
subl
inc
cmpsl
lods
incl
leave
and
push
daa
jnp
or
jnp
scas
dec
fwait
outsb
xchg
xchg
xchg
shrb
stos
fcomp
repz
in
xchg
imul
or
sbb
ficoms
ja
aam
mov
or
mov
imull
clc
test
mov
test
out
jle
cwtl
subl
pusha
addb
pop
je
sbb
aaa
add
and
lahf
add
or
mov
push
add
in
jmp
xor
and
lods
sub
jp
mov
in
sbb
incl
mov
mov
and
jne
out
pop
out
xor
jp
dec
pop
fisttpl
dec
push
daa
xchg
jl
hlt
adc
and
or
stc
jg
push
inc
sahf
and
in
mov
lcall
lods
dec
xor
call
cli
fcompl
jle
mov
add
imul
scas
aas
pusha
xchg
inc
jbe
repnz
lcall
ds
stos
mov
or
roll
out
xor
jne
fldenv
ret
and
pop
fldcw
sbb
mov
xor
mov
scas
ret
std
jecxz
xchg
push
cvtps2pi
adc
add
das
in
fldcw
sti
iret
xor
out
jo
or
xorb
mov
sbb
mov
push
imul
dec
jne
xchg
jnp
int
and
xor
pop
inc
mov
filds
sti
xor
iret
mov
jp
add
add
aaa
test
pop
vmovntpd
sub
lret
adc
in
or
loop
dec
xor
xchg
mov
jb
sub
in
mov
fcomi
dec
sbb
icebp
cmp
cmp
push
mov
mov
xchg
jg
mov
into
or
dec
xchg
xchg
push
or
loopne
test
push
sbb
test
jp
cmpsb
and
and
mov
cmp
add
popa
xchg
dec
cmp
icebp
imul
inc
out
push
pop
sar
add
int3
outsl
dec
aad
mov
nop
idiv
rolb
jge
cld
outsl
xchg
data16
xor
ljmp
push
orb
pop
pop
movsl
sbb
mov
loope
mov
dec
push
fdivrl
push
add
inc
xchg
or
push
pop
cmpsl
mov
inc
rolb
push
lock
lret
push
out
js
out
push
and
mov
inc
shrb
stc
out
ret
or
aam
shlb
mov
push
lret
push
or
xorb
addr16
xlat
js
adc
es
mov
jmp
shlb
sub
lret
jle
js
sbb
jg
sub
sbb
stos
inc
push
push
test
ds
jne
push
pop
sbb
scas
dec
lock
push
call
mov
jg
push
pushl
and
xchg
outsb
jo
adc
jl
imul
push
jge
into
fistl
aaa
iret
insb
pop
mov
push
and
mov
xor
in
rcll
adc
outsl
in
into
mov
pop
inc
pop
aad
adc
lods
mov
std
loop
sub
test
cmp
adc
or
shll
enter
ja
aad
ljmp
jne
cmpsl
iret
xor
xor
stc
out
push
shrb
stos
les
mov
lds
jge
adc
mov
push
pop
int
mov
aaa
frstpm(287
inc
mov
nop
out
ret
scas
inc
push
aas
push
mov
ret
cmp
fisubrl
cmp
push
loopne
xchg
lea
je
lds
pusha
cmpb
adc
ret
sbb
mov
cmpsb
icebp
gs
pop
das
jnp
jecxz
das
or
imul
nop
movsl
jp
jle
xchg
adc
adc
vpminsw
inc
jo
fists
jmp
subb
xor
cmc
cmc
into
pop
and
daa
lret
out
cmp
lods
fdivrl
in
popa
in
push
lret
ret
xor
adc
mov
xchg
and
ja
addl
sahf
nop
sti
popf
clc
std
sbb
lea
dec
clc
cld
subl
imul
sbb
gs
insb
mov
mov
mov
jp
iret
stos
xchg
adcl
jnp
repnz
pushf
add
xchg
sub
imul
loop
rol
insl
adcb
pop
insb
and
in
cmpsb
ds
push
sub
aad
and
enter
mov
mov
ja
rcl
pop
pop
stc
aaa
cmpsb
mov
inc
cltd
cmp
inc
or
add
dec
or
cmp
cmp
loopne
or
divl
popf
mov
pop
dec
mov
pop
xchg
cmpsb
mov
sarl
ret
xchg
ljmp
jp
dec
push
cmp
push
cmp
imul
aas
movsb
pop
fcmovnbe
add
test
dec
sbb
test
fwait
dec
jns
pushf
xchg
fadds
cltd
repz
sbb
into
outsb
insb
popa
xlat
std
pop
mov
dec
adc
cmp
stc
sbb
lock
or
out
cmp
mov
ret
movlhps
cmp
mov
add
inc
sbb
stos
cwtl
les
push
sbb
lock
push
jbe
mov
jb
aas
and
mov
or
and
xor
out
lret
out
sub
lds
xchg
stc
dec
jns
lcall
dec
scas
and
call
mov
pop
push
pop
aad
mov
inc
jb
jmp
pop
loope
out
sbb
lock
fdiv
call
sbb
pop
das
xor
inc
out
ja
out
sub
or
cld
or
std
dec
test
push
sti
cli
push
cli
dec
xor
lods
jns
mov
mov
andl
or
call
pop
or
aaa
inc
andl
xchg
fadds
stos
adc
cmp
mov
or
lahf
mov
or
xchg
imul
iret
cmp
push
call
enter
mov
xchg
mov
mov
in
popf
pop
loope
cli
push
repz
aas
jno
int
loope
inc
cwtl
push
and
shll
lahf
aad
fisttps
sbb
mov
lcall
sbb
pop
mov
inc
xchg
scas
xor
jbe
lds
js
cli
xor
out
fstl
or
test
arpl
outsb
jne
test
ffreep
adc
mov
add
pop
add
and
or
mov
sarl
mov
seta
popf
sahf
pop
in
lcall
iret
ret
hlt
cmp
push
jno
je
mov
push
push
sbb
lahf
stos
cmc
xor
lods
sar
repz
jne
and
push
lods
and
adc
lahf
cmpsb
rorl
sub
sbb
inc
loopne
xor
out
or
outsb
add
mov
iret
jns
jmp
sub
mov
imul
ss
xor
cmpsb
pop
xor
lret
imul
test
loop
adc
shrb
movsl
mov
cmp
popf
push
mov
xchg
test
inc
in
sbb
outsl
daa
andb
mov
inc
mov
push
mov
xchg
jo
ss
pop
ret
cli
jle
pop
fcoms
insl
scas
mov
repz
fcoml
sub
inc
or
xor
or
cmpsl
insl
and
add
loope
mov
loope
push
dec
leave
scas
cs
out
mov
lcall
pop
jnp
inc
cmpsb
mov
or
fwait
dec
mov
mov
les
jae
clc
xchg
add
xchg
repz
pushf
mov
std
adc
cmc
hlt
sbb
adc
stc
das
mov
sbb
fwait
sub
push
jecxz
in
in
mov
sub
cwtl
fdivs
or
frstor
and
or
mov
pop
iret
mov
add
int
insb
outsb
sbb
adc
orb
xor
rolb
dec
xor
mov
jne
into
and
in
ss
cmpb
dec
movsl
jb
leave
mov
popf
jo
sub
aaa
pop
sbb
arpl
out
nop
loope
lds
or
pop
inc
rolb
jb
cmp
sbb
stos
jns
mov
out
in
cwtl
xchg
pop
sub
xlat
mov
xor
pop
sbb
jb
out
scas
mov
jl
jmp
imul
inc
ss
adc
ret
cmp
dec
pushl
cmp
push
push
stos
cmp
sahf
cmpsb
aaa
mov
sub
outsl
cmpsb
xor
das
xchg
pop
movl
test
aam
aaa
and
xchg
xorb
lds
rorb
cwtl
mov
push
sub
jmp
mov
ss
xchg
sti
mov
loopne
add
loope
sub
or
call
adc
mov
imul
insb
ud1
data16
bound
cltd
pop
xchg
sbb
in
orl
pop
sbb
dec
sub
mov
pop
insb
movsl
jl
xorb
clc
inc
push
jle
sahf
repz
mov
js
arpl
stos
xchg
mov
hlt
jle
push
sbb
test
into
pop
fidivs
sahf
mov
adc
mov
or
sbb
mov
sbb
mov
lods
popf
and
lcall
jg
decl
jno
dec
popa
dec
cmp
ficomps
dec
aad
stos
adc
rorl
add
cmpsl
stos
cmpsb
int3
das
mov
movsl
mov
out
or
jne
sarl
mov
mov
xchg
lods
divl
rolb
mov
mov
and
aas
or
mov
xchg
sarb
adc
xchg
xchg
mov
add
inc
ja
push
enter
in
jnp
xor
inc
jnp
lcall
insl
and
test
xchg
mov
into
jg
mov
lea
sbb
imul
push
sbb
orb
ficoms
fnstcw
movsl
sub
inc
subl
mov
in
jle
repnz
lea
cmp
setne
xchg
fldcw
mov
imul
jp
cmp
cmp
or
scas
imul
dec
sbb
ret
mov
jge
pop
ds
jo
loopne
and
adc
and
aam
mov
mov
int
xchg
lret
fldt
loop
addr16
fildll
push
jmp
push
pop
imul
dec
push
and
jbe
pusha
fldt
xchg
add
cltd
out
hlt
adc
repz
in
and
and
lock
xor
popa
jae
or
mov
ret
pop
shrb
fnstcw
pop
js
fdivrs
scas
in
es
into
repnz
popf
cs
xchg
inc
sbb
mov
insl
pushf
or
pop
mov
add
sbb
aas
in
fdiv
into
pop
sub
dec
shrl
add
enter
pop
dec
in
add
pop
sub
mov
pop
jns
push
stos
ret
cltd
sbb
cmpsl
adc
shr
or
loope
call
sub
scas
pusha
movsb
or
test
dec
iret
fnstcw
daa
xchg
sbb
prefetcht0
cmpsl
jmp
cmp
insb
xor
mov
or
cmp
jns
jmp
inc
xchg
and
jnp
fdivrl
pop
loopne
test
mov
lods
mov
sarl
push
lcall
iret
scas
jo
cmp
inc
insl
mov
push
gs
dec
incb
lds
mov
sbb
xchg
mov
je
into
lods
mull
call
mov
sbb
or
mov
sti
sub
jp
inc
je
stos
adcl
jp
js
cmp
jne
sbb
ds
pusha
outsb
jge
jbe
repnz
daa
dec
mov
jns
adc
fmul
pop
movl
test
call
lcall
mov
fcompl
in
inc
loope
mov
rcrl
xor
mov
out
sbb
inc
lods
cmp
dec
jge
push
add
sahf
sub
push
jno
xchg
mov
jle
std
sbb
sbb
jmp
jge
ss
or
jle
xchg
cmpsb
xlat
dec
add
fnsave
or
scas
sti
test
adc
lods
pop
rolb
fsubr
outsb
sarb
mov
jo
fdivl
xor
xorb
pop
fisubrl
sbb
jle
sub
push
jb
and
in
adc
rcrl
jmp
cmp
call
dec
lods
push
xchg
xchg
mov
mov
out
lret
xchg
xchg
xor
jne
sub
and
in
popl
xchg
hlt
mov
test
mov
gs
cmpsb
jbe
out
aas
inc
push
fxtract
loopne
inc
mov
ja
sti
sub
mov
bound
push
std
idivb
adc
push
repnz
mov
cmp
mov
out
ret
adc
jbe
stos
daa
jmp
sbb
dec
pop
and
add
xchg
xor
rolb
xchg
add
xchg
jnp
jmp
push
mov
iret
outsb
arpl
int
movsb
xchg
popa
in
add
jecxz
repz
xchg
sub
and
mov
sti
mov
lea
stos
jle
cli
mov
xchg
fimuls
xor
inc
ret
sbb
sbb
lock
cmc
test
pop
stc
ficomps
inc
xchg
insb
rorl
pusha
pop
loopne
test
or
adc
inc
push
inc
dec
imul
in
pop
mov
sub
dec
popf
subb
ljmp
scas
mov
scas
clc
clc
insb
pop
or
int3
pop
mov
int
stos
les
clc
mov
je
xchg
in
and
jmp
inc
mov
xchg
lahf
push
jnp
push
inc
in
gs
arpl
stc
rolb
add
cltd
scas
xchg
xor
call
pusha
cli
dec
repnz
and
jne
dec
sbb
ja
loope
iret
adc
mov
xchg
mov
jl
adc
adc
iret
push
ficoml
fidivrl
nop
leave
notb
and
int
popf
and
in
lret
push
iret
xchg
lock
jo
mov
dec
adc
xchg
mov
push
das
and
cmp
imul
and
iret
jno
adc
jb
inc
lret
daa
sbb
lcall
or
jmp
cltd
out
out
pop
push
mov
inc
call
cmp
jle
subb
in
shlb
stos
pop
cmpsb
ret
fucom
cmp
call
jae
dec
ljmp
sub
loop
add
jbe
das
out
int3
dec
daa
jmp
sub
sti
mov
push
push
fidivrs
xor
insb
mov
jge
setle
test
sub
sub
mov
dec
bound
movaps
pop
jb
fnsave
jne
and
leave
into
out
push
inc
and
xor
rcll
sub
insb
out
push
js
sub
push
push
cltd
dec
lods
call
adc
and
xchg
call
fwait
xchg
adc
adc
out
pop
in
dec
dec
movsb
sub
jnp
jl
sar
out
dec
push
adc
rclb
sbb
cmp
out
add
ficompl
and
push
pusha
repz
xchg
sub
xchg
fimull
repz
pop
inc
dec
cmp
pop
loopne
mov
lret
or
pop
sbb
clc
aas
and
jle
inc
test
and
dec
jecxz
sub
cmpsb
mov
call
cld
mov
dec
icebp
xchg
push
hlt
jnp
pop
js
mov
dec
cmpsl
xchg
mov
ret
mov
and
cmp
mov
push
nop
pop
iret
fldl
lret
pop
add
mulb
icebp
dec
dec
rolb
xchg
inc
stos
sbbb
push
mov
pop
cmp
leave
movsb
in
jge
inc
inc
xchg
stc
mov
mov
hlt
fs
sub
loop
jle
push
jns
xchg
jg
or
push
xchg
push
in
pusha
lret
jl
ds
push
push
out
idivl
fbstp
icebp
cmp
in
jb
aaa
pop
mov
stc
mov
fisubrl
int3
push
jl
insl
xchg
mov
icebp
push
or
enter
shrb
xchg
icebp
adc
pop
xor
movsb
and
cwtl
mov
scas
insl
aaa
adc
sub
and
push
cltd
aaa
orl
inc
sbbl
add
xor
outsb
add
mov
push
and
xchg
dec
dec
jp
sahf
mull
inc
mov
movsl
pop
bnd
je
xchg
cmp
lods
mov
or
and
rolb
bound
cmp
popf
push
dec
bound
cmpsl
insl
dec
mov
add
notl
add
nop
mov
inc
pop
jg
outsl
rolb
mov
adc
mov
mov
lods
jne
gs
andl
into
pop
mov
and
ror
clc
pop
les
jno
mov
imul
scas
add
clc
jnp
cmp
sub
in
xor
dec
popa
popa
sti
jae
aas
push
xorb
test
jmp
cmc
xlat
repz
or
push
dec
pop
and
dec
xor
sub
jno
aad
enter
outsb
jo
adc
lods
lcall
and
popa
lea
jb
loopne
stos
mov
test
stos
or
xor
sub
sahf
lds
adc
fprem1
mov
pop
sarb
mov
stos
loope
subb
pop
outsb
pop
popf
sbb
pushf
mov
jmp
subb
or
push
sti
mov
pop
mov
repz
xchg
fists
aas
adc
lcall
std
pushf
dec
iret
jecxz
jnp
or
ds
and
inc
inc
aam
lret
movsb
cmpsl
aam
jae
adc
cs
mov
ret
fmul
xor
mov
nop
add
sbb
sub
fsubrl
mov
sub
dec
je
cs
into
xchg
xor
test
out
dec
add
lods
xor
xchg
mov
add
xlat
xchg
pop
jecxz
lahf
and
int
out
sahf
fs
aad
divb
scas
arpl
mov
cltd
ja
push
adcb
dec
lret
negl
sbbb
jmp
xchg
xor
jnp
pop
lods
into
add
mov
mov
or
mov
lcall
add
pop
sbb
lahf
cld
in
outsl
pop
adc
add
inc
jge
in
lea
fsubrs
mov
xor
call
mov
daa
fstps
mov
sbb
push
sbb
or
mov
sarb
in
faddl
in
and
loop
cmpsb
lret
inc
outsb
xor
xchg
out
push
pop
ret
outsl
idivb
sbbb
lods
mov
xchg
lods
inc
aas
ss
sahf
stc
jecxz
dec
fcmovnu
add
mov
adc
aas
or
pop
enter
mov
mov
sbb
lods
inc
push
test
adc
add
cwtl
int
pop
int
iret
mov
mov
pop
pextrw
pop
adc
loope
gs
daa
test
je
add
ja
lret
cmp
dec
mov
out
pop
addr16
notl
jle
sbb
imul
cmpsl
loopne
pop
call
mov
and
mov
ret
dec
cmp
xor
int3
out
nop
and
mov
out
out
lea
jle
lods
and
or
xchg
mov
add
sub
cmp
push
jns
jne
sub
add
inc
nop
push
mov
mov
shl
cmpb
cld
mov
mov
or
cmp
push
jge
ret
sub
es
cmp
clc
aas
scas
ljmp
xor
popa
stc
cmpb
or
add
test
xchg
adc
es
add
jae
sbb
xlat
test
pop
jl
divl
popf
scas
jo
cltd
push
data16
xor
or
js
andl
jno
fwait
jbe
stc
enter
arpl
push
xor
inc
push
clc
imul
adc
add
cmc
dec
push
fstl
xor
mov
sbb
push
push
loop
jmp
sub
mov
rorl
pop
iret
jns
fs
xor
xchg
jle
int
and
mov
mov
pusha
cs
adc
call
mov
daa
shll
ja
jno
sti
rcrb
sbb
jle
mov
dec
or
xor
inc
and
pusha
sub
roll
mov
xchg
les
aaa
pop
rcrb
ja
lods
xchg
bound
and
shr
inc
or
negb
ss
adc
out
pop
fstl
in
inc
sahf
loopne
mov
pop
xor
xchg
jecxz
jp
test
les
jle
enter
movsb
enter
pop
scas
stos
jl
sub
fcompl
mov
sbb
push
bswap
add
pop
push
gs
pop
fiaddl
pop
or
imul
push
xchg
pop
xchg
cmp
mov
push
pop
or
inc
loop
dec
pop
sbb
mov
push
sti
cli
loop
cmpsl
mov
movhps
movsl
aas
adc
out
inc
scas
inc
dec
inc
int3
xor
jp
jge
lds
popl
jbe
inc
dec
sahf
loopne
out
mov
lods
push
rolb
aaa
lds
mov
jnp
fisttps
add
inc
divb
test
movsl
mov
and
mov
mov
add
cmpsb
pop
or
testl
popf
adc
cli
loop
ss
mov
out
and
mov
pop
push
bound
push
leave
xchg
cmpsl
mov
insb
or
pop
pop
pop
iret
push
pop
jp
rclb
xor
and
cwtl
fisubrl
jo
mov
add
mov
test
ror
adc
ja
jmp
jg
or
mov
mov
cmp
push
xchg
mov
in
jg
xor
sti
aaa
pop
push
mov
pop
notb
in
adc
lcall
xor
add
or
int3
jmp
lahf
pop
cli
xor
aad
cmp
cmpsl
jno
inc
in
ficompl
shlb
jl
insb
imul
adc
cmpsl
jb
hlt
test
shrb
xchg
or
ja
mov
jae
es
add
mov
stos
mov
or
xchg
mov
or
in
enter
lods
mov
sub
xchg
jmp
xchg
insl
hlt
and
mov
rcll
les
jmp
shlb
outsb
adc
mov
std
mov
pusha
icebp
inc
or
dec
iret
gs
push
lea
push
outsb
and
sub
sbb
jns
movsl
mov
jne
pop
xchg
and
xchg
outsl
sahf
cmc
imul
cmc
sti
adc
je
movsb
lods
std
repz
push
xor
sub
pop
add
lahf
mov
leave
jb
add
or
testb
add
icebp
and
push
insb
xchg
mov
gs
xor
repz
inc
mov
xlat
mov
mov
adc
xlat
dec
stos
in
gs
leave
ficoml
pop
insb
idivb
push
xchg
xor
push
sub
jnp
and
push
push
xor
xor
stos
push
add
pushf
adc
dec
mov
add
jb
xchg
inc
test
cmp
sti
sti
xlat
call
pop
mov
mov
adc
subl
cs
or
xchg
pop
sbb
lea
xchg
adc
inc
out
movsb
sub
outsl
cmp
arpl
push
mov
sar
mov
subb
fcmove
notl
mov
shll
mov
xchg
shll
mov
and
xchg
pushl
sub
pop
mov
iret
and
mov
call
int
add
add
lcall
add
arpl
adc
popf
stos
fwait
sbb
dec
cltd
jp
cld
sarb
or
cmpsb
sbbl
test
sbb
out
repnz
data16
and
pop
mov
cmp
cmc
les
iret
pop
mov
test
lahf
es
pushf
ljmp
movsl
ficompl
jne
popa
dec
lret
xor
jge
mov
sbb
test
mov
mov
inc
cmp
sub
pop
push
movb
outsl
sbb
call
stc
clc
loopne
push
cmp
mov
dec
sub
jg
xchg
inc
outsb
in
popa
mov
das
dec
iret
and
stos
push
or
nop
insl
icebp
inc
sbb
push
pop
arpl
icebp
add
inc
out
mov
or
das
arpl
push
fidivl
dec
inc
clc
push
adc
jmp
or
inc
mov
les
aaa
or
ret
shll
mov
xor
insb
shrd
pop
lcall
arpl
frstor
into
push
push
mov
jmp
je
xchg
mov
pop
sti
lds
pop
and
pop
adcl
mov
lret
into
lods
mov
enter
pop
adc
mov
int3
fnstenv
je
mov
fs
outsb
cmp
insb
push
mov
stos
dec
arpl
stc
jle
icebp
aas
jp
fwait
lcall
shrb
fisubl
ja
pusha
add
lods
les
adc
jo
inc
push
pushf
cmp
add
loopw
xor
mov
sub
xor
lods
lahf
shlb
nop
push
pop
rclb
out
lods
sar
inc
andl
fucomi
into
and
pop
fiaddl
fwait
pop
in
cmp
mov
int
jae
pop
movsb
sarl
pop
adc
clc
lcall
inc
mov
xlat
into
testb
scas
cmp
popa
popf
push
mov
sahf
adc
ss
test
add
add
add
sub
inc
sub
xchg
cmpsl
popw
push
and
and
xor
push
inc
push
push
sub
and
sbb
cmovle
pop
ss
sub
movsl
pop
test
jno
mov
pushl
push
fwait
enter
out
mov
and
or
ja
cmp
lcall
cld
lahf
xchg
andl
icebp
popa
call
xor
in
movsl
inc
sarl
add
cltd
mov
sub
or
hlt
xor
fadds
int
loopne
push
and
pop
das
cmp
out
sbb
ja
sbb
adc
repz
enter
pushf
test
pusha
jno
mov
or
andl
addr16
and
cmp
es
sarb
mov
mov
leave
xchg
js
pop
mov
mov
mov
jg
inc
add
inc
clc
stc
mov
mov
push
and
notb
cwtl
cmpsl
xchg
sbb
pop
fnsave
fisttpl
or
cmp
enter
fmull
mov
rorl
ds
cltd
pop
stos
bound
or
sbb
sbb
xchg
jmp
xchg
or
pop
mov
push
iret
sbb
in
ret
push
mov
adc
repz
stos
dec
int3
popf
xor
dec
aad
jb
mov
xor
sti
pop
push
cwtl
cmpsl
int
bound
xchg
insb
sub
mov
mov
push
enter
or
xchg
test
sub
jo
aaa
imul
adc
sbb
je
aad
popf
and
ljmp
inc
shr
or
enter
movsl
or
dec
leave
dec
lcall
cmpsb
mov
sub
and
mov
jno
jge
xchg
sub
sub
xchg
xor
sbb
cmp
cmp
and
sub
mov
scas
adc
xor
lahf
xchg
jnp
mov
sub
inc
jns
scas
fisubrl
mov
int
dec
cmp
push
or
lods
sbb
jmp
out
shlb
rol
gs
sarl
xchg
rclb
sbb
sbb
mov
sub
in
jns
sbb
ret
lods
test
lds
loopne
es
add
test
push
mov
cmp
mov
je
ds
mov
call
xor
ds
mov
or
cmpsb
loopne
xlat
ljmp
daa
leave
dec
push
pop
fiaddl
aaa
mov
cld
jmp
cmpb
sti
imul
addr16
loopne
xor
xchg
xchg
je
fadds
cmp
icebp
pushf
mov
jne
dec
loop
pop
popf
add
out
nop
add
push
gs
stos
xor
xor
mov
sbb
mov
xor
rcrb
cs
jae
inc
xchg
jg
repnz
add
mov
rcr
fimull
push
cmp
dec
sbb
dec
ja
mov
cmp
cmp
xor
xor
push
fimuls
popf
and
iret
fsubl
aaa
scas
push
outsb
sarl
mov
jo
insl
mov
lcall
fists
outsb
lods
and
push
iret
aas
fisttps
lods
cld
push
in
xor
out
add
lahf
faddl
xchg
popf
in
daa
mov
push
lahf
add
sub
dec
sub
or
aad
push
shl
jle
outsl
add
lods
add
outsb
adc
add
jg
pusha
push
jecxz
xchg
add
xor
lds
or
lcall
xor
sti
add
inc
push
decb
lret
inc
fwait
bound
into
or
mov
xlat
xchg
sbb
popa
dec
loope
or
lock
mov
adc
pop
and
sbb
repnz
add
fcomi
cmpsl
mov
dec
dec
std
imull
mov
outsl
scas
cmp
dec
rcr
cld
loop
leave
addr16
gs
dec
inc
xchg
nop
into
xor
mov
or
int
cmp
sub
mov
fisttps
ret
pop
cld
mov
jnp
scas
rolb
mov
pusha
shrb
inc
dec
jbe
fcomip
arpl
mul
add
adc
std
or
xor
cmp
ret
cmc
cltd
repnz
sbb
dec
push
push
jne
push
sub
and
xor
mov
sarl
or
lods
xchg
out
test
sbb
enter
movsb
push
movsl
or
xchg
pop
test
lock
jne
adc
outsl
add
cmp
xor
lcall
lret
lock
xchg
inc
das
in
sub
pop
add
sub
mov
outsl
lock
insb
add
icebp
test
call
push
push
jl
cmp
mov
mov
mov
inc
jecxz
cmp
dec
push
dec
shl
sub
outsl
or
mov
dec
mov
and
jnp
andl
push
fistps
pushf
inc
cmp
inc
push
jg
jle
mov
in
add
add
cmc
sti
into
mov
sbb
scas
dec
push
mov
push
test
fsubp
sub
xchg
xchg
mov
xor
dec
and
pop
aaa
aam
jg
out
movsl
xor
aam
icebp
mov
fisttpll
jns
lods
cld
outsb
pop
inc
cmp
push
sti
mov
sub
ss
jne
dec
in
adcl
add
loope
fs
xchg
lock
les
sti
mov
lock
or
cmp
leave
adc
xchg
push
pop
mov
sub
xchg
or
out
out
mov
outsb
call
aam
mov
mov
lds
out
aad
shll
and
int
mov
lret
andl
push
adc
aam
mov
jno
xchg
lods
hlt
ficoms
or
enter
dec
mov
pop
inc
fstpt
loop
iret
jnp
scas
gs
iret
fimull
push
andb
push
faddl
sbb
adc
add
xchg
push
cmpsb
dec
lods
out
adc
adc
ljmp
sub
aam
jge
cmpsl
cmpsb
movsl
fsubrl
aaa
rolb
pop
xor
insl
sbb
jne
aaa
pop
pop
sahf
fwait
daa
jo
das
lret
mov
push
lret
xor
jbe
lret
inc
test
cltd
in
mov
add
es
ss
and
push
xor
icebp
sub
xor
pop
xchg
and
sti
mov
in
mov
aad
out
in
imul
shll
jnp
pushf
pusha
repz
int
arpl
jle
mov
adc
call
lahf
jb
cltd
xor
xchg
jle
int3
xor
ss
popa
push
aaa
or
fxch
xchg
sbb
xchg
mov
pop
mov
dec
push
inc
cmp
ss
sbb
out
ret
push
pop
testl
xlat
mov
in
push
rolb
inc
frstor
pusha
add
in
lock
cmp
adc
sub
xchg
dec
inc
scas
clc
icebp
addr16
scas
negb
mov
cmp
jle
dec
push
jno
jo
out
pusha
inc
enter
jo
int
mov
lea
mov
repnz
and
cmp
shll
fcomps
sarl
and
push
hlt
push
sbb
loopne
jne
push
test
mov
into
lock
xchg
enter
cmp
mov
mov
pop
jno
in
push
or
mov
js
insb
xor
pop
jno
imul
test
mov
xchg
inc
lock
popa
or
fisubrl
push
mov
cmpsl
add
or
and
mov
inc
stos
cmp
icebp
sbb
jns
jno
fwait
add
por
jno
cwtl
std
es
lret
or
ljmp
out
cmc
faddl
mov
scas
je
mov
and
jns
shll
push
cwtl
test
test
and
dec
test
and
xchg
mov
xchg
in
outsl
mov
subl
ja
repz
add
xchg
or
dec
pushf
notl
inc
mov
cmpsb
dec
stos
test
popa
mov
ret
pusha
out
sbb
jb
ljmp
sub
push
mov
fndisi(8087
gs
incl
mov
or
adc
nop
pop
popf
push
stc
mov
fsub
adc
sahf
jp
aam
add
add
in
lea
fcoms
xorb
jp
jl
push
hlt
ret
cmpsb
test
jae
daa
xor
cmp
faddl
iret
call
enter
iret
sbb
loop
enter
lods
mov
add
iret
adc
mov
and
sub
orl
mov
mov
ret
push
xor
imul
add
dec
sti
pop
andl
loopne
inc
adc
ret
dec
dec
mov
test
or
pop
and
lar
or
loopne
shrb
mov
popf
and
aam
xchg
je
dec
jge
lods
xor
inc
les
lods
sbb
cltd
add
dec
push
test
xchg
push
addr16
ds
adc
jge
enter
les
idivb
scas
mov
repz
test
inc
mov
push
je
mov
xchg
in
push
sub
xchg
cltd
mov
scas
out
pop
sub
sbbb
divb
dec
add
xor
scas
push
adc
mov
popf
sbb
push
fwait
add
mov
xor
insb
push
add
stos
push
sarl
add
sbb
outsb
or
mov
fwait
jae
addr16
cli
push
ljmp
mov
inc
mov
xchg
fs
testl
aaa
es
jmp
popf
pop
addl
lock
nop
mov
leave
mov
repz
or
mov
pop
icebp
add
xlat
das
lds
jge
mov
add
mov
test
movsl
cmpsl
xchg
pop
sub
mov
jle
icebp
adc
and
gs
cwtl
mov
pop
sbb
sbb
cmp
movsb
or
lret
sub
jle
and
popa
stc
sbb
dec
sub
scas
cmpsl
jo
cwtl
iret
jns
cli
in
mov
xchg
sub
push
jno
xor
es
shlb
and
loop
pop
outsb
mov
mov
jo
rcll
add
mov
cld
aaa
mov
cmpsl
jp
push
push
scas
pushf
out
mov
inc
in
cmpsl
dec
addl
dec
jnp
pop
xor
int3
popf
pop
inc
dec
lods
cmpb
cwtl
sar
push
jl
jns
cmc
add
sub
jo
jno
pop
lret
sahf
pop
aas
pop
shlb
or
xchg
int
jo
inc
in
stos
or
test
pop
cmp
dec
roll
dec
or
inc
call
mov
sbbb
pop
mov
js
jne
jo
pop
push
ds
cwtl
pop
imul
add
sbb
cmp
mov
mov
xor
xorb
push
ds
jmp
push
mov
push
inc
xchg
cmpsl
xchg
sar
call
mov
fmul
imul
sbb
inc
cmpb
fsubs
clc
jmp
mov
popa
dec
xor
xchg
das
adc
mov
and
jbe
aad
push
movsl
std
cmp
mov
jns
xchg
pop
sub
lds
pop
jge
shll
pop
push
out
popa
sub
aaa
popa
lret
out
into
fldenv
sbb
dec
test
repnz
dec
ljmp
jno
sahf
scas
aad
jg
adc
xchg
xchg
popa
call
inc
loopne
xchg
push
xchg
jg,pn
stc
mov
les
ret
test
in
mov
mov
rorb
test
shr
test
and
or
ljmp
push
mov
jmp
fwait
jno
jl
sbb
cmpsb
push
rcrb
xchg
adc
sub
imul
mov
dec
sub
outsb
pop
call
pop
sbb
test
or
mov
push
mov
xlat
inc
push
pop
mov
push
or
rcrl
push
add
in
adc
adc
mov
imul
adc
fstl
add
mov
cs
jae
sub
sub
clc
dec
jb
outsb
in
or
mov
pop
jo
test
sbb
push
push
hlt
loop
frstor
aad
add
mov
dec
sbb
cmpsb
mov
push
sahf
pop
adc
fcmovbe
mov
xor
test
jmp
mov
aad
jb
loopne
cmp
js
adc
mov
push
sbb
test
xchg
mov
xorl
pop
xor
xchg
xchg
pop
dec
imul
in
cld
dec
pop
adc
mov
xchg
imul
hlt
pop
fwait
sti
insb
push
mov
movsl
jg
loopne
add
out
xchg
push
mov
std
xor
push
enter
inc
or
loopne
push
aam
inc
mov
lods
cmp
cmp
xchg
leave
aaa
push
ja
inc
iret
and
inc
nop
and
pop
scas
adc
adc
mov
mov
cmp
jmp
es
xor
xor
jb
add
sbb
mov
shrb
js
shr
xchg
stc
dec
cmp
add
rcrl
rorl
or
mov
add
jl
push
lea
xor
add
add
xor
ja
stos
sbb
int3
pop
mov
cmp
mov
or
mov
fadds
add
icebp
dec
xchg
inc
push
and
andb
cwtl
call
or
or
cld
xor
cmp
ss
cmpsb
jle
sub
std
xchg
pop
imull
aaa
js
ljmp
mov
jp
jo
aas
or
call
movsb
sbb
sahf
ljmp
dec
inc
lcall
push
sbbl
add
icebp
mov
push
pop
cs
leave
mov
push
adc
rcl
test
sub
push
stos
xchg
ror
ret
jmp
cmp
aad
mov
shr
pop
cmp
pop
or
lahf
pop
rcll
add
jno
jae
inc
js
push
xchg
xadd
dec
sbb
add
cmpsb
inc
rcrl
loope
dec
mov
push
fidivrs
xor
insl
jnp
sub
mov
xchg
imulb
mov
les
popf
out
pop
push
and
mov
push
cli
cwtl
fidivrl
mov
push
fs
cmpsb
mov
jmp
and
fadd
and
or
dec
jle
jmp
stos
loop
addr16
xor
out
and
adc
aas
movsb
insb
xchg
dec
pop
les
inc
push
xchg
push
jg
imul
lods
xchg
or
cmc
out
xlat
call
mov
fildll
push
pop
int
and
arpl
outsl
aas
arpl
cmpsb
popa
add
ds
in
lock
mov
inc
push
rcrb
mov
aam
xchg
shrb
test
jne
aad
fwait
out
movb
adc
ljmp
cli
pop
xor
movsl
mov
ficompl
rcrl
frstpm(287
jecxz
out
sub
loopne
add
lock
jb
pop
test
sub
add
push
decb
sub
out
mov
movsb
mov
cmp
inc
mov
mov
push
sbb
sbb
or
pushf
pusha
or
pop
outsb
fnstcw
rorl
out
mov
mov
cmpl
lcall
icebp
mov
jl
ss
jo
dec
mov
dec
and
xchg
in
fcoml
outsl
fs
mov
adc
sub
setne
adc
push
mov
fucom
dec
test
loope
and
jmp
fnstcw
popa
lahf
lahf
mov
xchg
or
aam
imul
or
mov
inc
or
mov
xchg
add
or
leave
mov
pop
int3
aam
pop
ds
pop
adc
mov
fsubr
push
daa
lcall
dec
sbb
add
cltd
mov
cmpsl
or
psubusw
cmp
in
ret
jne
insb
sub
inc
push
mov
mov
sbb
fldl
add
test
mov
mov
jecxz
mov
or
es
and
outsb
adc
mov
pop
in
rcrl
jns
fidivs
cli
cwtl
js
xchg
or
sbb
lods
mov
ficompl
rcrl
xor
mov
cmc
int3
mov
shrl
push
dec
pushf
lds
lret
dec
fs
test
add
mov
push
inc
imul
sub
sbb
xor
insl
inc
cmovbe
mov
sbb
rcl
cli
pop
cmp
mov
js
cltd
push
test
sub
neg
lods
ret
cwtl
cmp
addb
in
push
mov
fcoml
jl
jbe
popf
imul
outsl
bound
fdivl
xchg
sti
fisttps
dec
mov
cmp
out
or
frstor
jo
xchg
pop
scas
cld
repz
or
insb
sahf
lahf
or
test
lods
jg
mov
cmp
adc
fdivl
jnp
mov
push
fstl
rcr
fs
or
adc
xchg
out
ljmp
mov
mov
xlat
into
xchg
cmpsb
jne
push
add
pop
ja
ficoms
and
mov
add
mov
push
enter
push
aam
fdiv
pop
loope
ljmp
aad
stos
out
test
repz
cwtl
in
adc
ljmp
lcall
mov
xor
jns
or
iret
xchg
inc
test
mov
jmp
test
push
movsb
inc
out
test
cli
leave
movsb
adc
dec
rclb
mov
sti
fisttpl
lret
dec
and
mov
test
inc
cwtl
mov
movsl
loope
jb
icebp
loope
rorl
push
add
jecxz
imul
xor
and
xchg
outsb
push
jo
and
loopne
push
loop
icebp
xor
movsb
mov
pop
popf
test
andl
hlt
cltd
cmp
pop
cltd
cmc
imul
push
push
xchg
xchg
mov
aam
push
lds
pop
stos
push
dec
cli
scas
jb
ljmp
in
fs
inc
jns
push
shll
pop
cmpsl
xchg
mov
scas
sbb
out
test
out
std
mov
add
dec
lret
push
or
cwtl
or
aas
pop
cmp
adc
mov
push
pop
nop
and
icebp
ja
sarb
sbb
test
or
lahf
fstl
cwtl
addr16
cwtl
iret
bound
insb
mov
scas
sub
jmp
mov
hlt
jl
mov
cmpsl
add
dec
test
shlb
xor
sbb
push
sar
adc
mov
pop
adc
pop
cltd
jno
movsl
faddl
xlat
std
inc
lea
les
rcrl
xor
cld
idiv
insb
movsb
cs
das
and
sbb
iret
sahf
int
cli
push
sub
sbb
ficoml
mov
push
mov
push
jg
or
cmp
sub
lods
ret
adc
mov
xor
adc
ror
or
push
rcl
mov
into
jo
popa
pop
mov
mov
xchg
push
out
add
clc
outsl
dec
cmp
and
test
jecxz
xchg
rorl
les
lret
sub
and
lods
and
dec
mov
insl
dec
xchg
cs
ret
shll
pop
mov
push
xor
jl
pop
outsb
inc
pusha
inc
add
gs
add
inc
shl
in
push
adc
jb
jbe
dec
mov
and
roll
ljmp
popa
iret
xor
pop
push
mov
aas
push
jge
pop
mov
test
fiaddl
xor
cld
pop
ret
popa
hlt
add
inc
clc
cli
sub
add
dec
jle
enter
push
push
mov
ss
rorb
dec
shll
lret
stos
push
in
dec
pop
mov
xor
aaa
scas
sbb
rorl
add
mov
aaa
lahf
test
mov
clc
cmc
lods
add
repz
leave
jl
cmpsl
ss
aad
mov
lcall
jnp
jl
dec
arpl
dec
cmp
mov
mov
loope
rorb
pushl
fisttps
pop
and
push
mov
mov
es
inc
add
popf
or
mov
loopne
sub
mov
push
out
divl
and
or
imul
or
jne
fcmovne
and
and
gs
push
push
decb
pop
ret
mov
sbb
insl
and
adc
aas
jae
pop
outsb
jb
jge
add
stos
dec
cld
insl
test
aad
movsb
shrb
mov
add
or
fdivrl
repnz
lret
adc
into
inc
cwtl
shrl
fucom
in
iret
imul
sahf
sub
pop
dec
fcomi
cli
and
cltd
xor
pop
stc
cmc
mul
or
mov
cwtl
adc
sub
in
shl
jp
enter
mov
add
sub
cmp
fsubrs
or
sub
jecxz
dec
mov
hlt
test
cwtl
xchg
cltd
mov
jns
dec
test
jl
iret
ja
stos
sub
dec
addr16
sbb
popa
bound
xchg
fdivs
outsl
cmpsl
les
cmp
pop
in
sbb
in
out
sub
cmp
insb
xchg
iret
std
movsl
lods
mov
pop
mov
fnstsw
push
popa
movsb
mov
dec
fstpt
adc
mov
fsubp
sub
dec
into
push
pushf
out
inc
int
pop
push
mov
dec
outsl
mov
mov
mov
adc
push
push
inc
fidivl
cmc
jle
pop
sbb
lret
sub
xchg
xchg
lahf
cmp
or
dec
mov
sub
inc
imul
inc
mov
or
cmp
shrb
jecxz
orb
lock
mov
test
pushf
jo
int
mov
dec
fldl
ss
test
inc
cwtl
ret
ds
cmovge
aaa
mov
jae
outsl
xchg
jl
xor
xor
xchg
es
sub
cld
adc
cmpsb
test
mov
cmp
mov
add
dec
rcpps
lock
hlt
outsb
add
inc
dec
mov
inc
add
pop
aam
add
and
fcom
fstps
cli
aaa
ret
push
movl
pop
bound
cmp
dec
sbb
sbb
imul
xchg
sbb
lcall
mov
dec
stos
scas
lret
inc
inc
es
xchg
mov
pushf
sbb
cmp
add
lods
xchg
scas
fwait
es
fists
xchg
scas
sub
push
sub
sub
int
or
sbb
outsl
sub
mov
dec
scas
wbinvd
xor
enter
std
lret
bound
jo
jns
sub
mov
inc
mov
mov
ja
inc
test
testb
add
mov
cmp
test
loopne
jecxz
dec
jbe
sbb
lods
adc
lahf
jmp
popf
push
add
addr16
dec
pop
xor
mov
push
mov
cwtl
shll
xchg
sbb
xor
hlt
daa
ficomps
sti
ljmp
dec
xchg
subb
dec
outsb
ds
mov
mov
adc
xchg
loopne
lds
sahf
fcompl
jnp
fwait
sbb
out
pop
sub
imul
jmp
dec
mov
mov
aaa
mov
in
xchg
sbb
fs
push
sub
pop
lret
movsl
lret
stc
outsb
nop
dec
lret
lock
in
fistps
popf
xchg
leave
push
roll
jg
dec
mov
xor
repz
xor
and
mov
rclb
lock
xor
adc
mov
addr16
imul
xchg
cmc
ret
dec
cmp
mov
iret
pop
js
add
mov
sbb
adcl
xor
and
icebp
les
push
mov
movsb
add
sbb
sbb
xor
sub
xchg
xchg
lds
js
je
cmp
cmpsl
add
sbb
pusha
js
arpl
and
outsl
mov
mov
pop
popa
sub
test
repz
pop
movsl
or
mov
lahf
jbe
inc
adc
lret
xor
inc
pop
stos
jne
imul
ljmp
and
xchg
inc
out
or
cmpb
ficompl
cmp
test
mov
jl
iret
pop
out
mov
and
xor
mov
prefetch
jge
sub
ret
jo
add
into
pop
js
scas
aad
stos
mov
mov
adc
dec
sub
xchg
adc
xchg
jns,pn
sbb
jo
pushf
fisttps
vdivss
mov
and
lock
xchg
aas
rcrb
sbb
imul
mov
cmp
sub
movsb
add
mov
adc
roll
loop
arpl
movsb
pop
shrb
int3
mov
jbe
cmp
and
int
ja
insl
sub
mov
cs
loope
aad
addr16
sub
js
gs
mov
and
mov
outsb
sub
loop
insb
adc
js
frstor
lods
push
push
inc
jno
mov
in
hlt
mov
pop
hlt
inc
les
call
js
pop
scas
adc
pop
pop
push
out
cmp
sbb
enter
add
scas
pop
stos
push
mov
clc
negl
jge
or
out
and
mov
ret
adc
inc
sbb
mov
lahf
dec
push
jp
pop
mov
aas
sti
outsl
ret
mov
int
sahf
dec
jge
nop
jno
test
inc
cmpsl
je
mov
jge
jb
cmp
pop
jnp
sub
hlt
stos
adc
xor
insb
sbb
rcll
insl
xor
xchg
mov
clc
push
sbb
fs
js
push
sub
sbb
fadd
stos
pop
mov
sahf
dec
in
loop
jg
mov
add
sub
dec
or
jae
cmp
sbb
push
pop
dec
jg
mov
fstps
sbb
xchg
fcompl
pop
sbb
fldt
sbb
cmpsl
pusha
enter
pop
std
in
dec
sub
mov
sarb
stos
mov
addr16
ds
lahf
pop
jge
jno
or
sbb
es
sbb
fiadds
xlat
push
lretw
add
push
cli
jp
sti
sbb
sbb
jp
pushf
in
pop
test
jbe
mov
fdivr
mov
int3
mov
pop
in
sbb
imul
dec
dec
rcl
bound
mov
push
cli
insb
icebp
mov
adc
mov
sarl
repz
stos
mov
jae
jp
ljmp
int
mov
xchg
cmp
fsubs
sub
dec
inc
cmc
xchg
mov
pop
jg
xchg
adc
pushf
mov
push
lret
dec
lods
add
inc
lret
cmp
jle
in
cmpsb
xchg
xchg
popa
sti
int3
test
out
pop
pop
rol
in
adc
je
xchg
into
jno
inc
es
mov
repz
jl
sar
pop
addl
bound
pop
xor
jb
movsl
pusha
lock
xchg
ss
mov
lret
insb
add
inc
icebp
xchg
jmp
jle
into
mov
cltd
xchg
adc
nop
loope
inc
inc
dec
mov
jno
insb
xor
gs
loop
mov
pop
arpl
imul
xor
mov
icebp
fnsave
bound
dec
mov
mov
loopne
xor
sub
dec
inc
mov
pop
mov
mov
lods
mov
ja
and
mov
imul
xchg
xchg
into
lahf
hlt
dec
dec
mov
in
pop
jg
pusha
test
faddp
adc
or
addb
jnp
rcr
and
and
rcll
fadd
cmp
push
or
das
fwait
adc
ret
in
and
shll
lea
addl
call
inc
fwait
and
cmp
in
adc
je
shll
jne
pusha
shrd
jno
sbb
or
lret
jge
pop
xlat
movsb
and
fiadds
and
adcb
and
inc
das
push
mov
pop
lods
cld
in
adc
cmp
pop
ffree
fdivr
or
insb
lds
xlat
mov
adc
mov
mov
sbb
loop
cld
cmp
sub
mov
add
into
jbe
lahf
mov
je
sub
and
push
popa
xchg
dec
xchg
jne
adc
mov
js
mov
outsb
push
out
nop
mov
and
add
lcall
xchg
rcrb
push
cmc
nop
mov
lods
pop
mov
test
ficomps
inc
lods
cld
mov
and
mov
jl
cli
loopne
dec
movsb
lret
jnp
push
shl
in
sbb
aam
in
or
aaa
xor
cltd
popl
lret
mov
push
into
cmp
sub
rcrb
fstps
fnstcw
jp
jns
stos
cmp
les
fs
xlat
stos
loope
mov
xor
outsl
dec
pop
xchg
shr
push
in
sub
adc
aam
xchg
push
in
sub
popa
lcall
add
iret
cltd
sbb
pushf
and
outsb
int
cs
pop
and
jb
les
sti
cmpsl
fiadds
data16
mov
push
inc
lret
lret
adc
push
imul
push
jae
ja
sub
add
push
adc
mov
inc
lcall
out
mov
jmp
jmp
jno
jnp
lahf
inc
pop
popa
mov
int
or
out
jbe
mov
add
xorb
movsl
daa
mov
rclb
lods
cli
push
pop
ret
test
jne
sub
cltd
repz
xor
arpl
adc
inc
jns
dec
inc
jg
xchg
mov
mov
insb
ret
stos
adc
in
in
sahf
pop
stc
jmp
lcall
stc
cmp
cmp
pop
ds
cmpl
or
popl
push
pop
out
cmc
mov
cli
int3
adc
sub
sub
popf
fcmovne
nop
stos
sub
xchg
mov
jge
int
lret
fdivrl
pop
cs
imul
cld
pop
dec
mov
lods
in
pushf
icebp
xchg
adc
jle
mov
jnp
inc
sarb
mov
lods
push
push
sub
jle
sub
sub
jnp
aam
lods
scas
out
call
dec
xlat
mov
sub
popf
mov
mov
fwait
inc
xlat
jbe
test
push
mov
cld
test
data16
push
mov
ss
jg
jae
dec
cwtl
cmc
add
xchg
mov
sbb
pop
sub
loopne
fiaddl
movsb
ret
mov
pusha
mov
pushf
sub
mov
lea
lods
sub
imul
loop
xchg
fdivrp
test
sarb
adcb
adc
rorb
push
arpl
test
mov
outsb
mov
pop
or
push
mov
out
push
cmp
cmpsl
mov
lods
mov
mov
cmp
mov
out
mov
sti
iret
inc
dec
lret
pop
scas
cmpsl
jns
fsubrl
nop
jno
sub
and
gs
sbb
ds
call
sub
pop
neg
pop
sti
inc
push
aad
and
sbb
addr16
ljmp
jo
lahf
and
scas
mov
lret
sarb
mov
pop
pop
sub
xor
push
out
fldl
leave
sub
into
cmp
sub
test
in
in
in
sub
adc
scas
jno
incl
scas
subl
cmp
add
jns
mov
mov
push
sbb
dec
shrb
xor
mov
popf
push
es
repnz
or
rol
jo
cmp
jecxz
mov
lea
fdivs
int3
pop
xchg
jp
push
mov
cmc
push
imul
lds
int
shr
pop
repnz
sbb
fwait
mov
jle
scas
sub
sub
lods
jge
test
adc
in
cmpsl
mov
xor
cmp
insl
call
xor
inc
mov
xchg
aas
add
adc
push
ret
inc
lods
and
sbb
enter
add
xchg
popf
into
mov
xchg
into
stos
fwait
inc
cli
leave
cmp
fidivl
shl
cmp
rclb
jne
lret
push
pusha
insl
mov
xor
fmulp
pop
ficomps
lods
lret
and
push
add
shr
negl
shrb
or
dec
gs
cmpsl
popf
imul
xorb
cmc
shrl
jnp
ret
out
dec
cwtl
bound
lods
mov
mov
clc
iret
add
inc
cs
scas
cltd
dec
imul
lahf
inc
dec
icebp
lods
test
dec
insb
dec
jle
mov
fidivrs
lods
dec
jl
lahf
mov
mov
out
hlt
mov
and
pop
insl
insl
lahf
dec
lahf
aaa
in
mov
mov
cltd
cmpl
sbb
cmp
ljmp
fs
nop
dec
cmp
pop
test
cmp
int3
or
mov
or
pop
push
add
jmp
jge
ret
add
jae
xchg
xor
lea
es
call
notl
fdivrl
dec
jbe
in
sub
stc
fstpl
mov
xor
or
insl
divb
xor
add
jmp
outsb
and
cs
addr16
jge
inc
addr16
xchg
in
stos
outsb
and
aam
jg
xchg
imul
shll
sbb
test
js
xorb
pushf
cmp
pop
mov
inc
sbb
add
push
xchg
push
xchg
pushf
cs
ficoml
inc
repnz
movsb
cld
in
daa
cs
rcrb
test
sub
in
cmp
ss
shll
aad
sub
xchg
test
push
inc
lret
notb
ljmp
sub
xchg
aad
push
push
roll
pop
mov
jle
sub
ret
jbe
xchg
or
sahf
ret
dec
push
cmp
fistps
in
cs
inc
out
dec
icebp
inc
lcall
sbb
mov
inc
hlt
ja
sbb
jp
repz
mov
jbe
ds
pop
insl
pusha
dec
ljmp
popa
push
iret
push
das
cmp
in
rcll
cmp
inc
test
mov
mov
cli
xchg
imul
mov
sub
mov
mov
ret
dec
xchg
adc
repnz
ss
in
mov
or
ret
mov
jmp
push
push
fs
mov
pushf
jb
or
sbb
cmp
mov
adc
mov
loope
xchg
pop
add
push
imulb
mov
es
pop
rorb
adc
test
xchg
mov
insb
into
in
or
dec
mov
in
sbb
xor
clc
mov
bound
loop
in
movsb
cltd
insb
sub
xlat
xchg
cmp
cmpsb
scas
repnz
sub
sbb
in
test
fcomps
or
mov
xchg
jnp
ds
aas
aam
cmpsb
nop
adc
add
xchg
dec
push
cmp
mov
mov
add
jb
or
scas
cmc
push
mov
jb
pusha
and
cmc
sbb
mov
ret
pop
dec
cmc
pop
popf
pop
mov
out
imul
or
lods
and
mov
outsb
cmpsb
inc
std
sbb
movsl
mov
mov
add
inc
stc
adc
sub
jg
inc
pop
push
fimuls
lods
enter
cmp
shlb
jnp
iret
jl
or
fildl
or
lahf
repz
dec
pop
dec
xor
loope
ret
es
andb
xor
lret
cmpsb
sub
mov
mov
inc
lahf
jnp
aad
imul
mov
dec
pop
ret
pusha
sub
out
xor
xchg
jae
pushf
aad
sbb
arpl
xchg
mov
imull
nop
add
pop
sahf
push
repz
xchg
cwtl
jp
popa
ss
mov
lret
jmp
fcmovnbe
cmpb
dec
je
jl
ljmp
dec
adc
pop
jbe
loopne
loop
dec
lahf
movsl
jb
mov
sbb
pop
lcall
or
add
ret
decb
andps
mov
adc
stos
and
minps
inc
div
test
mov
out
sub
sbbl
push
pop
stos
fildll
jnp
or
ficompl
cs
mov
loope
shll
mov
sub
pushw
pop
fidivl
mov
jecxz
jecxz
test
or
leave
xchg
xchg
sbb
jmp
and
xchg
push
dec
mov
or
mov
roll
aas
andl
popa
ret
je
lock
or
scas
mov
cmp
sbb
pusha
lea
jmp
aaa
loope
out
fcoml
pop
jnp
imul
imul
pop
jmp
negb
sbb
aam
push
je
les
and
je
scas
fwait
lods
dec
scas
stc
sub
mov
pop
movsb
inc
loope
push
xchg
aaa
mov
mov
push
test
jae
std
dec
add
test
cmp
xor
and
cli
cmc
mov
dec
shrb
xchg
clc
lret
or
sub
ja
icebp
and
xor
sbb
mov
movsl
jne
jecxz
rcrl
jl
push
jno
insl
cli
fdivr
push
aam
cmpsl
imul
sbb
stos
imull
sub
push
inc
add
adc
push
lret
outsb
cmc
dec
jecxz
ss
sbb
inc
sub
adc
pop
aaa
dec
scas
push
ss
andl
mov
xor
xchg
fdivrs
inc
cli
int3
mov
jg
sbb
add
lret
mov
adc
pop
push
outsb
in
sbb
or
shl
xchg
push
mov
shrl
lock
add
push
push
ret
add
cmp
sub
into
test
mov
stc
gs
out
in
loope
scas
cltd
push
js
push
mov
dec
stc
xor
insb
cmp
out
movsb
jle
inc
or
mov
stc
aas
xchg
loopne
arpl
adc
aad
or
and
fsubl
repnz
inc
inc
or
hlt
cs
and
outsb
mov
mov
sbb
dec
adc
inc
or
xchg
popf
mov
xor
sahf
xor
inc
inc
pusha
mov
lods
out
imul
lahf
sub
dec
addr16
add
clc
xor
data16
negb
ja
jo
in
ss
leave
scas
pop
dec
inc
lea
std
std
push
pop
xor
icebp
cwtl
fdivrl
mov
push
cmpsl
shlb
xor
lret
das
cmp
xor
mov
sbb
bound
cltd
jecxz
cmp
out
mov
outsb
ja
clc
jne
outsl
sub
popa
cld
xchg
int3
outsb
inc
jp
in
iret
pop
or
stos
jae
add
mov
fcompl
mov
cmpsb
gs
lcall
inc
bound
pop
lds
jle
mov
mov
mov
pop
imul
aas
and
data16
lret
rclb
mov
subb
dec
es
cld
bound
pop
or
fldenv
sub
test
cmp
add
popf
mov
jmp
shlb
xchg
movsb
push
inc
scas
jno
or
ja
sub
mov
adc
icebp
mov
adc
in
add
push
inc
rcrl
iret
pop
or
xchg
adcb
or
adc
insb
mov
inc
pop
lahf
test
cli
push
dec
loope
inc
movsb
nop
xchg
or
add
dec
or
mov
stos
adc
xor
in
les
push
je
into
mov
push
jmp
repnz
imul
int3
aad
dec
bound
lret
ljmp
add
fisttpll
or
dec
xor
mov
mov
ljmp
pop
cli
pop
test
shlb
data16
mov
out
dec
sub
mov
es
inc
in
pushf
xchg
push
loopne
adc
mov
xor
fcompl
cmp
sub
fstpl
ret
jp
xor
sub
push
pop
add
ret
popa
aam
jmp
mov
ds
xchg
push
in
test
test
cmpsl
inc
test
stos
or
jmp
push
stos
add
aas
jno
add
dec
repz
or
inc
xor
movsb
fwait
rcr
cmc
sub
mov
jb
xchg
push
repz
inc
icebp
push
fistpll
add
adc
sbbb
push
jp
add
stc
into
in
movb
in
pop
adc
stc
xor
shlb
inc
sbb
dec
push
cmp
pop
mov
xchg
flds
dec
arpl
or
push
lds
and
imul
es
std
es
test
inc
mov
push
push
inc
in
xchg
stos
adc
jae
test
popf
sbb
call
mov
sbb
jecxz
push
lcall
push
inc
cwtl
mov
sbb
into
fsubr
outsl
aas
outsb
mov
jns
fnstcw
cltd
ljmpw
notb
lcall
jbe
aaa
sub
xchg
lea
fdivl
cmpsl
lret
add
lahf
jmp
fldt
and
addl
adc
dec
std
mov
fsubrp
loope
sub
and
or
aam
cli
mov
mov
dec
mov
pop
dec
mov
mov
sbb
rcl
rorb
test
out
mov
fadds
mov
in
out
aad
fdivs
fdivrs
fwait
mov
ret
bound
mov
add
mov
fwait
out
mov
frstor
mov
pop
ja
sub
loop
cmp
icebp
push
push
nop
cld
jle
insl
lds
sbb
push
mov
lcall
jg
mov
sub
sub
and
es
lods
mov
orl
aam
popl
inc
dec
push
sbbb
jge
cli
jo
xchg
sbb
jo
enter
jmp
add
sar
xor
jmp
movsb
push
fldpi
inc
push
fnstsw
loopne
xchg
pop
dec
repnz
icebp
push
sub
outsb
lret
xor
inc
sub
mov
xlat
xchg
pop
and
jno
out
cmp
mov
mov
fs
push
mov
push
and
inc
xor
and
leave
les
nop
mov
xchg
int3
cs
xchg
scas
cmpsl
push
sarl
mov
mov
xor
jnp
gs
lds
add
aaa
mov
lcall
bound
out
and
xor
imul
sbb
test
loope
jb
cmp
into
pop
xor
sbb
and
xchg
inc
movsl
mov
xor
lret
xchg
testb
out
inc
jb
jo
lods
aaa
pop
loop
ret
popa
add
movsb
and
int
xchg
ja
fisubs
rorb
or
lods
push
pop
shll
lcall
imul
inc
lret
cmp
or
ja
push
lds
and
and
fs
pop
int
add
das
cmpsl
and
cs
mov
xlat
and
fwait
imulb
mov
shrb
mov
mov
mov
rorb
pusha
loop
aad
test
test
je
cld
mov
add
in
mov
cmp
sub
xchg
sbb
iret
dec
leave
lahf
movsb
pop
mov
fisttps
mov
sbb
and
cmc
push
xor
insb
out
mov
stos
pop
inc
sbb
xor
cmpl
in
xchg
ss
les
mov
and
xor
fs
mov
dec
loopne
jmp
sbb
mov
jb
add
mov
nop
shrb
movsl
test
mov
push
test
aad
xor
jb
pop
cmpb
mov
out
aad
inc
loopne
test
fs
iret
ret
inc
xchg
das
and
jmp
push
leave
xchg
pushf
imul
loopne
push
mov
andl
jns
rcrb
data16
xchg
data16
cmpsb
xor
xor
adc
push
adc
repnz
lods
stos
xor
mov
and
fldenv
push
fsub
cmp
shl
fcomps
and
gs
or
arpl
arpl
out
adc
loope
scas
xor
dec
jmp
das
pop
or
jno
sbb
cltd
pop
lret
push
jo
xor
sahf
ret
rol
shlb
push
sbb
divl
xor
push
popa
rorl
gs
add
gs
fdivs
and
sbb
dec
in
les
cmp
cltd
faddl
adc
fbstp
inc
jl
xchg
push
lds
cli
rcll
add
scas
imul
test
push
rcl
pop
push
sub
mov
out
or
stc
and
adc
rorb
mov
xorl
fisubrl
jmp
enter
xchg
fmull
push
add
shl
fwait
sbbb
pusha
mov
pushf
outsl
out
enter
inc
les
incb
jne
movsl
push
fpatan
and
xchg
mov
cmp
cmpb
lods
sbb
xor
dec
jmp
push
gs
jp
push
and
push
add
jle
adc
adc
loopne
jnp
test
scas
data16
cmp
ds
xlat
xor
std
ja
int
in
in
fdivrs
popf
shrb
mov
push
cmc
pop
out
sbb
mov
stos
or
in
mov
sbb
dec
aad
jbe
nop
mov
adc
mov
roll
roll
mov
fwait
repz
outsl
arpl
mov
outsl
mov
push
xchg
jne
pop
iret
cmpb
ss
je
movsb
jo
sbb
mov
dec
sti
insl
cmp
cli
pop
subb
test
daa
push
and
int3
xchg
cmp
ret
sub
clc
pop
add
lcall
dec
ret
jns
add
xchg
pop
and
xchg
mov
mull
push
mov
and
movsl
icebp
mov
push
not
clc
and
push
icebp
or
lods
xor
jo
in
loop
addl
in
cvtpi2ps
pop
xchg
jmp
jo
mov
loopne
lods
popf
xchg
xchg
sub
push
adc
movzbl
lds
lcall
outsb
jb
cmp
adc
or
xor
push
or
mov
xchg
inc
adc
jae
cmp
or
adc
pop
push
inc
jmp
insb
xor
jnp
ds
xchg
hlt
cmpl
add
dec
cmc
loope
push
pushf
out
mov
adc
sub
fwait
lcall
data16
sbb
test
insb
adc
nop
outsb
lahf
xchg
inc
out
dec
inc
aas
xchg
negb
jbe
stc
pop
cmp
rcrb
sub
lahf
lods
fstl
mov
push
pop
loopne
roll
ljmp
sbb
mov
test
push
sub
sbb
dec
pop
jb
idiv
movsl
push
ljmp
cs
inc
movsl
daa
stc
sbb
pop
divb
insb
and
mov
mov
push
divb
mov
jne
or
pushf
inc
rolb
xchg
out
loope
mov
ljmp
jp
xchg
lock
aad
sti
push
enter
into
mov
loopne
gs
ja
loop
cmp
insl
dec
xor
shl
std
leave
lret
push
mov
add
xor
test
pop
sub
out
repnz
fbstp
sub
inc
lahf
xchg
into
pop
dec
dec
lea
jp
jbe
push
das
add
jae
popf
dec
mov
daa
xchg
repz
ljmp
mov
lea
xchg
loope
mov
xlat
push
mov
mov
lea
ljmp
adcb
and
outsb
int
popa
pop
jns
pop
pop
dec
test
add
sbb
aam
js
dec
inc
stos
and
add
nop
rcrb
sub
negb
fs
cmpsl
aaa
cmp
cmp
lea
inc
imul
jg
hlt
lcall
ret
lds
cmpsl
xor
mov
cli
add
inc
jno
lcall
mov
in
pop
mov
inc
pop
xor
xchg
mov
les
call
pop
insl
rclb
sub
inc
fsubl
popa
push
or
pushf
or
add
mov
jmp
int
arpl
stos
jecxz
jo
scas
lcall
xchg
frstor
xor
push
js
nop
xor
adc
out
push
cmpsl
js
ljmp
stos
loop
xchg
cmp
sub
enter
test
mov
cmp
cmp
push
lods
fnstsw
es
pop
nop
push
nop
or
sub
and
push
xchg
stc
dec
imul
int3
mov
xor
repz
popa
fwait
test
roll
pop
adc
lds
inc
test
inc
lods
push
sub
std
es
sub
xchg
adc
add
fwait
mov
fisubrs
lock
mov
mov
pop
movsl
push
pop
add
lods
or
pushf
fwait
lahf
std
jnp
ss
mov
push
jle
adc
into
fs
icebp
or
mov
fcompl
adc
gs
repnz
sarl
push
or
fisttpl
xchg
aad
push
vpaddd
stos
sarl
add
sahf
fs
adc
ret
imul
jb
sub
fisttpl
aam
ret
push
or
aas
or
xchg
sub
clc
out
sub
or
in
mov
je
test
mov
shll
lods
mov
add
mov
pop
xlat
cmp
aam
icebp
test
aam
add
repnz
insl
cmp
mov
and
mov
into
mov
mov
js
push
imulb
lds
push
arpl
adc
ja
out
xor
xchg
sbb
adc
enter
stos
aaa
xor
mov
push
test
pop
loop
imul
test
outsl
adc
nop
xor
movsl
iret
aas
movsl
jno
outsb
sub
fsubs
into
je
sub
add
loop
push
and
bswap
cmp
add
sbb
icebp
push
scas
mov
adc
xor
lea
das
insl
pop
xor
add
int
es
ds
sub
popl
pop
ficomps
pop
orb
imul
push
fcmovb
test
push
push
xor
mov
sbb
mov
or
and
es
mov
push
jl
out
adc
push
cmp
addb
pop
filds
fxch
sbb
out
leave
fs
push
sbb
jno
cwtl
add
inc
jecxz
scas
aaa
jns
js
add
aad
push
push
and
stc
sbb
pop
mov
out
shl
jmp
in
lahf
sub
sub
sbb
int
push
jecxz
dec
or
xchg
in
cmc
xchg
xorb
out
test
bound
dec
inc
ja
jmp
out
and
cmpsl
xor
xor
popa
int3
jp
xchg
fs
stos
imul
jns
mov
std
and
pop
mov
sbb
xchg
ja
fstps
sar
and
jmp
es
xchg
imul
fists
add
pop
fwait
pop
es
loope
out
sub
pop
movsl
jae
lcall
cmp
iret
jl
or
pushf
mov
aas
nop
push
xchg
sahf
pushf
aam
mov
fwait
jno
mov
in
shlb
cmp
dec
ss
in
ja
rol
sbbb
daa
cmc
gs
inc
enter
xchg
xchg
xchg
dec
adc
xchg
inc
jo
or
mov
cmp
scas
rcrl
sbb
out
bound
pop
mov
loopne
pop
testb
pop
cltd
enter
cmp
sbb
mov
outsl
dec
adc
pop
cmc
pop
lret
push
dec
cmp
ret
sub
cmp
lahf
pop
pushf
std
xchg
shlb
adc
sbb
adc
sub
insl
adc
adc
mov
std
inc
jns
movsb
test
push
divb
xlat
inc
jmp
xchg
and
cmp
push
mov
xchg
jb
repnz
lock
pop
outsb
inc
and
in
shl
xor
shrb
mov
mov
shl
out
pusha
mov
sbb
inc
fwait
scas
inc
pushf
pop
mov
mov
pop
inc
push
in
imul
pop
jnp
les
out
in
in
xlat
push
xlat
push
je
inc
and
psubsw
in
aad
and
sub
xchg
xor
pop
mov
in
rcrl
pop
xchg
sarb
inc
pop
cli
pop
cwtl
and
pop
andl
pop
mov
aaa
xor
testl
sub
xchg
lcall
movsl
cmp
cmp
in
imul
stos
jno
add
pop
mov
sbb
push
inc
jae
or
and
dec
test
mov
sbb
xchg
outsb
inc
fimuls
dec
push
loope
push
add
repz
js
loop
or
sbb
adc
xchg
nop
jl
mov
ficoml
push
in
insb
rcl
and
test
jne
jnp
out
xchg
or
xchg
cmp
mov
out
fbstp
loope
bound
mov
cmpsb
dec
imul
adc
into
shll
jl
mov
xchg
jb
mov
lods
fimuls
push
adc
pop
jno
cwtl
jae
lds
test
fcmovb
cwtl
mov
push
ret
jge
data16
inc
cmpsb
jno
or
popf
xchg
es
lock
push
adc
cmp
les
mov
adc
imul
pushf
dec
push
fisttpll
ret
push
or
hlt
jb
fmuls
dec
sbb
repz
push
mov
push
xor
cli
cli
les
jo
gs
std
fnstsw
das
cmp
lods
xchg
ja
lret
xchg
mov
mov
add
cmpb
fstpt
sbb
cli
or
mov
jp
pop
imulb
ss
xor
call
jae
jg
mov
jno,pt
inc
push
ffreep
mov
xchg
jnp
in
adc
mov
dec
push
test
mov
fistl
mov
or
stc
pop
std
sbb
mov
call
xor
outsl
mov
sbb
mov
test
pushf
loop
xor
and
out
leave
clc
inc
hlt
hlt
or
repnz
lds
les
loope
gs
movsl
mov
call
out
enter
mov
test
push
lods
pushf
movsl
arpl
mov
and
sbb
mov
int
cmc
pop
lea
lods
aam
nop
inc
stc
jge
pop
nop
data16
adc
mov
outsb
jo
in
mull
sub
and
pop
pop
mov
pop
test
inc
stos
loopnew
imul
stc
jb
insb
aad
iret
popa
push
xor
mov
push
call
jae
fs
push
ss
test
mov
mov
inc
jb
scas
js
ds
dec
pop
and
xor
lea
add
xchg
push
lret
in
addr16
stos
sbb
xor
loopne
pop
es
sub
inc
hlt
jmp
jae
mov
inc
sbb
push
popa
dec
sub
dec
add
push
cmpb
and
inc
cmp
mov
mov
push
jb
call
lcall
stc
mov
cmp
cmpsl
jnp
jnp
mov
pop
sub
popa
jl
outsb
mov
out
shlb
and
dec
mov
mov
int3
in
fadds
add
mov
clc
or
lahf
icebp
pusha
push
fldl
dec
data16
jg
or
ficoml
cld
aas
test
adc
aaa
push
add
lods
sbb
adc
pusha
pop
push
mov
mov
inc
fcmovu
dec
into
arpl
and
cmp
add
cmpsb
adc
inc
stos
xchg
adc
xor
push
push
ret
lahf
xchg
cmpsb
cmp
adc
push
mov
xor
cmp
mov
xchg
sarl
sarb
test
into
shrb
mov
clc
fwait
das
inc
adc
dec
adc
cmp
insb
push
and
sub
arpl
and
xor
es
adc
push
fs
mov
ds
jle
lock
shl
xchg
xchg
jo
mov
and
lds
sbb
fwait
in
adc
and
jge
mov
cli
cmp
cli
sub
cltd
shl
lahf
add
xchg
sbb
mov
dec
imul
xchg
test
or
xor
lea
and
fcom
popa
nop
jge
lods
xchg
lcall
xor
loopne
ss
lret
xor
mull
push
hlt
jae
xchg
sbbb
je
mov
lcall
and
push
inc
lcall
sub
out
addr16
inc
dec
add
rcr
mov
popa
cs
xor
xor
notl
or
mov
cmp
mov
fwait
mov
stos
rol
enter
ljmp
xor
into
push
xlat
pop
pop
add
push
ss
repz
orl
or
mov
mov
repz
pop
lds
fnstcw
sub
or
dec
lahf
scas
pop
xchg
mov
aas
imul
or
nop
sub
popf
data16
aam
or
xor
insl
ret
cmovp
add
cs
sub
pusha
mov
jl
aas
push
xchg
inc
jnp
xor
je
pop
insb
mov
or
jnp
dec
cmp
dec
popa
daa
insb
lahf
push
or
ja
cmpsb
sarl
jns
scas
and
ljmp
cmpsb
insl
cmp
mov
js
mov
cld
mov
adc
lea
inc
test
cmpsb
inc
push
or
pop
rcrb
dec
jo
negb
repnz
orb
fsubl
and
sbb
test
mov
jecxz
sub
aas
pop
lods
inc
pop
mov
sub
call
mov
pop
add
lret
adc
subl
test
mov
mov
adc
jno
dec
push
cmp
mov
xlat
sub
add
and
sub
in
lahf
shll
fstpl
pusha
sahf
shll
xor
mov
cmpsb
sub
loope
pushf
push
xchg
aam
cmp
inc
cld
xchg
push
ds
scas
dec
lea
dec
aam
inc
xchg
aaa
inc
insl
or
dec
psubusw
repz
enter
mov
ss
adc
imul
and
dec
andb
pop
mov
sub
and
mov
hlt
stos
push
cltd
cmpsb
mov
mov
or
ss
lahf
movsl
pop
fmul
mov
sti
jmp
adc
sbb
rol
mov
cmp
push
xchg
cli
mov
sub
and
daa
push
mov
movsb
sar
xlat
mov
jae
fcompl
mov
ficoms
mov
push
imul
mov
gs
adc
dec
or
inc
xorl
iret
inc
sub
jns
xor
or
pop
jae
xchg
jo
mov
push
xchg
dec
mov
xor
ja
repnz
inc
mov
fistps
daa
adc
es
sbb
sahf
push
icebp
out
stc
jbe
jg
mov
fsubl
repz
jb
addb
sub
cmp
jl
jbe
dec
int3
or
and
sub
out
ficoms
mov
xor
or
outsb
cmp
dec
push
fadds
pop
int3
out
cmp
mov
popa
cwtl
lret
mov
dec
and
in
sbb
movsb
or
mov
add
push
xor
cld
ds
mov
cmp
xor
movsb
mov
movsb
cwtl
sbb
sub
dec
ret
adc
or
mov
pushf
into
aad
adc
inc
cmp
dec
or
push
sub
icebp
xchg
data16
jns
xor
push
je
mov
xchg
cld
popa
andb
lds
jmp
sbb
jns
leave
push
test
inc
push
shl
lods
add
leave
sbb
mov
xor
shlb
or
shlb
sub
gs
push
mov
scas
xor
gs
mov
or
mov
add
gs
rolb
add
and
xchg
push
mov
fisttpl
icebp
xor
or
scas
xchg
scas
push
call
loope
cmp
in
ret
cmp
in
mov
sub
outsl
inc
shlb
mov
xor
in
mov
test
inc
out
xor
sbb
in
xchg
and
daa
es
jae
imul
addr16
scas
js
jmp
cmp
notl
sub
popf
cmp
movsl
test
xchg
imul
jmp
xchg
jg
xchg
pushf
subl
jge
icebp
sub
loope
xor
test
lret
add
out
inc
dec
into
adc
ds
dec
cltd
mov
jl
push
xor
adc
mov
out
jle
test
in
ret
nop
jg
cld
mov
mov
ljmp
mov
push
inc
pop
popa
nop
jge
add
fisubrl
dec
inc
out
jg
out
stos
jns
xchg
push
jb
lahf
jo
daa
scas
in
mov
fidivl
nop
pop
dec
add
xor
sbb
cwtl
jl
inc
loop
mov
clc
mov
cld
cmc
popa
sarb
or
mov
push
sbb
or
adc
or
mov
pop
and
cli
mov
lret
mov
xchg
pop
mov
push
cmp
dec
cltd
pushf
rcll
imul
shlb
fidivrs
pop
mov
and
dec
out
mov
aam
aad
clc
xor
dec
inc
push
in
outsl
or
sbb
xor
lret
loope
jae
xor
jae
movsl
test
insl
inc
out
xor
sbb
les
icebp
and
mov
insb
cltd
call
jl
mov
popa
xor
inc
dec
push
jbe
out
dec
cli
mov
jle
jg
adc
icebp
dec
push
sub
punpcklbw
adc
and
add
push
inc
mov
jbe
mov
sub
shrl
daa
outsl
push
rcl
xor
rorb
push
rolb
mov
or
bound
cli
cmpsl
les
mov
add
daa
push
add
xchg
cmp
call
lods
xchg
imul
or
sbb
push
xor
mov
sahf
dec
mov
mov
jp
push
sbb
pop
test
push
insl
add
push
push
lods
sbb
orl
jne
popf
mov
into
insl
fxch
aas
addr16
movsl
aas
addr16
mov
sbb
inc
push
jno
pop
jmp
cmp
cs
loop
and
sub
inc
sub
sub
push
dec
pusha
sub
mov
test
xchg
test
lcall
loope
xor
fwait
insl
pop
and
mov
cwtl
out
cmp
daa
mov
dec
mov
inc
pop
lret
xchg
rcll
and
nop
mov
fisubrl
hlt
outsb
mov
pop
shlb
mov
push
outsl
mov
idivb
push
dec
outsb
fwait
test
lahf
cmp
pop
adc
mov
jle
fisubs
repz
ja
pop
cmp
movsb
xchg
dec
addr16
scas
sbb
jbe
cmp
ljmp
test
rol
in
mov
int
mov
out
mov
sub
mov
mov
lret
lahf
xchg
pop
int
cs
inc
loope
push
xchg
daa
hlt
pushf
jp
sub
or
xor
push
data16
in
and
mov
jo
fisubs
xor
test
into
movsl
dec
pop
xor
xchg
pop
testl
xchg
rorl
pusha
orl
dec
sbb
iret
dec
fwait
lret
scas
rcrb
aad
mov
push
inc
data16
sti
cmc
or
pop
fbld
pop
pop
pop
sbb
mov
ja
add
stos
xabort
es
jmp
jge
movsl
lret
push
mov
jecxz
add
decl
or
push
push
aad
jnp
and
push
jle
sub
stc
and
fildl
xchg
clc
jmp
and
mov
icebp
enter
test
mov
ret
dec
andb
outsl
inc
sbb
ja
cmp
fnstenv
arpl
xchg
xlat
xchg
in
loop
imul
pop
cld
push
cltd
ret
dec
lods
mov
xchg
int3
in
pop
mov
add
fildl
xchg
ret
sbb
lret
mov
mov
jae
stc
into
shll
addr16
aam
push
xchg
push
pusha
push
loope
ret
fstl
loope
stos
std
xchg
ret
fidivs
jae
lock
mov
mov
int3
andb
loopne
dec
jecxz
aad
xor
and
or
mov
sub
icebp
ss
das
push
jmp
adc
int3
xlat
push
jg
mov
mov
fistpll
sbb
or
cvttsd2si
into
pop
or
cli
xor
jmp
loopne
lds
sbb
sub
push
imul
into
mov
add
mov
cltd
cmp
test
and
inc
dec
into
mov
les
jns
xor
loope
test
dec
in
negl
mov
pop
int
inc
sbb
ss
out
xchg
arpl
jns
clc
incb
hlt
or
rorb
popa
lock
js
cmp
inc
movsl
pop
jg
add
js
insl
cmpsl
xchg
jns
jae
loope
ret
sar
or
in
add
jmp
sbb
movsl
cld
jb
insb
cmp
cmp
mov
adc
mov
shlb
frstor
lods
sbb
enter
test
sar
lock
lock
decb
sbb
sub
test
add
enter
aam
jge
and
scas
mov
jbe
xlat
jg
shrb
mov
cmp
push
inc
xchg
js
inc
out
xchg
jle
sub
insb
mov
mov
sti
push
add
push
push
lret
jp
fwait
dec
scas
jne
adc
sub
dec
mov
cmp
rclb
inc
or
dec
es
mov
test
lods
xlat
movsb
and
pushf
testl
test
fcmovbe
cmp
pop
inc
xor
push
lret
jno
jg
hlt
in
out
int
inc
stos
or
std
adc
dec
jp
cmp
lcall
adc
inc
ret
cmp
sub
aam
push
test
adc
sub
xor
xor
push
sub
pop
addl
aam
out
ds
loope
cld
leave
push
add
gs
xchg
lods
gs
callw
nop
mov
mov
test
insl
mov
cmp
das
sbb
jns
repnz
shrb
adc
js
sub
mov
lock
sarb
in
movsb
aad
loop
adcb
jae
dec
push
xchg
pop
mov
xor
mov
pusha
xor
and
or
xchg
pop
addb
cltd
mov
push
insb
test
stos
scas
gs
in
mov
movsb
cmp
cwtl
pop
mov
fldenv
fwait
lods
fsub
int3
test
popa
push
mov
pop
nop
cmp
pop
das
push
icebp
ret
daa
out
out
test
daa
inc
jle
sub
into
mov
pop
pop
outsb
push
sbb
mov
cmp
mov
cmpsb
in
mov
jecxz
dec
xlat
in
dec
mov
or
inc
mov
ret
ret
or
fmul
nop
je
in
cmp
insl
cs
adc
jl
xchg
mov
scas
call
push
punpcklwd
mov
data16
cmp
cltd
icebp
or
imul
sarb
sub
jecxz
or
popl
cmp
aam
sub
shll
lcallw
mov
vpsubb
dec
push
arpl
mov
jecxz
fistl
andl
movsb
sbb
mov
ljmp
sahf
das
mov
sbb
mov
mov
mov
sbb
inc
clc
adc
sbb
pop
add
xor
shl
inc
adc
sub
jnp
mov
mov
push
lds
fstps
dec
lret
mov
ret
xlat
and
inc
test
push
cmp
or
sub
call
mov
mov
and
ljmp
fdiv
push
cmp
and
xor
xor
push
or
call
jle
and
shrl
sbb
fidivrl
xlat
mov
ret
jl
rcll
dec
xchg
das
sti
in
aas
ret
repnz
iret
call
xor
add
aaa
sub
adc
cmpl
testb
xor
pop
cmpl
mov
in
mov
cmp
xchg
rcrl
mov
mov
push
mov
int
xchg
sbb
pushf
push
jae
xor
aas
inc
sub
xchg
imul
sub
sbbl
sub
movsl
mov
sub
ss
mov
pushf
adc
jno
lods
jbe
fs
arpl
sarl
into
out
xor
addr16
push
neg
xor
fadds
leave
aad
lea
std
xchg
mov
lahf
ror
iret
inc
lea
popa
pop
mov
cmp
outsl
jg
push
push
cmp
fsts
jb
and
sbb
xchg
adc
loop
dec
pop
mov
loop
popf
setp
out
ja
jae
and
cmp
mov
xor
add
movsl
lock
out
hlt
dec
in
sbb
fsubl
inc
bound
xor
mov
add
insl
sbb
mov
pop
andl
imul
insb
and
jb
fadds
mov
jb
pop
xchg
and
push
loope
jno
dec
mov
sbb
xchg
mov
xlat
xorb
sahf
lcall
bound
lock
rcrb
repnz
push
aam
pop
lcall
cmpsl
enter
les
ret
pusha
les
sbb
jne
mov
mov
stos
ja
ds
pop
pop
sti
das
in
mov
sub
test
sbb
sub
pop
test
mov
pop
mov
and
das
in
imulb
aam
dec
imul
xchg
xchg
push
clc
mov
dec
ds
packsswb
cmp
dec
jecxz
push
sbb
adc
sub
leave
sbb
mov
adc
test
gs
stos
out
push
andb
mov
scas
test
icebp
imul
cmp
pop
adc
sbb
test
cltd
pop
push
rclb
iret
sbb
cld
jecxz
sahf
dec
scas
pop
orb
stc
sbb
inc
mov
imul
push
inc
cwtl
test
ja
outsl
mov
pusha
lods
sbb
mov
mov
inc
jne
cmp
add
sbb
xor
and
leave
sbbb
jb
sub
and
leave
cld
jb
sbb
xchg
data16
imul
jmp
cmc
jno
lret
sbb
inc
movsb
scas
icebp
lds
in
movsb
stos
ljmp
mov
or
fdivrl
pop
fwait
shr
pop
fimuls
adc
mov
xor
push
addr16
xor
loope
dec
daa
sarb
jle
jbe
sbb
inc
inc
sbb
xor
ret
adc
addr16
mov
xchg
adc
loopne
lret
out
ja
push
and
sarb
lods
ds
pause
out
imul
mov
push
inc
cltd
push
imul
inc
or
pop
inc
mov
dec
and
in
adc
lock
xor
mov
testl
push
movsl
fiaddl
or
lret
dec
fcmove
dec
fbld
mov
sti
push
lfs
clc
xor
push
mov
xchg
jmp
sbb
filds
pop
sbb
pop
inc
clc
cmpsb
in
lahf
add
jmp
pop
adc
notb
mov
and
stc
pop
inc
out
sub
fists
jecxz
testb
push
sub
into
add
push
test
fisttpl
jp
mov
jp
and
adc
mov
adc
xor
xor
jo
into
mov
xchg
and
lret
inc
rolb
jno
mov
lahf
popa
lcall
pop
or
pop
shl
and
je
daa
dec
add
inc
mov
or
add
sub
arpl
sahf
bnd
or
cld
mov
add
ret
fists
shl
aad
fidivrl
and
in
sub
adc
lds
imul
jb
aas
xor
in
jbe
or
mov
push
in
add
or
pop
cmpsb
dec
and
dec
mov
mov
hlt
mov
rorl
push
clc
fnstsw
fbld
movsb
das
and
mov
pop
adc
nop
in
xchg
adc
lret
lods
icebp
out
xchg
out
das
and
sub
adc
inc
sbb
int3
clc
ret
add
inc
pop
mov
scas
scas
fldt
push
add
jmp
negb
pop
add
inc
inc
push
fwait
add
xor
xchg
rol
mov
ds
js
mov
mov
adc
pop
push
ficomps
scas
xor
mov
and
loop
mov
ljmp
mov
test
cmp
and
inc
setp
mov
push
add
aam
rcrb
push
enter
and
movsb
cmp
sti
pop
cmp
xor
fistpl
cmpsb
lods
adc
mov
cmpsb
fnstcw
push
push
xor
jmp
sbb
xor
xor
push
sub
cltd
and
stc
stos
js
movsl
aas
fwait
dec
mov
loopne
sub
clc
lods
es
cmpb
mov
and
icebp
ljmpw
sbb
pop
jge
cli
in
xor
mov
adc
cli
push
lret
repz
loope
popa
xor
insl
sahf
and
xchg
pop
cmp
cli
fisttps
add
mov
cmp
mov
mov
adc
xchg
dec
xchg
adc
nop
test
aad
test
pop
push
dec
loope
sbb
lret
aam
adc
mov
mov
jne
mov
aas
xor
icebp
dec
mov
xor
sub
add
and
jns
test
test
xor
js
pop
cmp
cld
outsb
inc
push
shlb
xchg
jg
out
pop
mov
pop
and
insl
clc
jae
xchg
mov
int
je
popf
out
lret
fnstenv
mov
pop
lods
pop
hlt
mov
adc
dec
and
shll
mov
movsl
cmpsl
leave
mov
and
pop
inc
and
xchg
dec
insl
inc
inc
ret
mov
rclb
leave
xchg
cmpsb
into
das
in
insl
iret
pop
ficompl
push
push
jmp
pushf
into
arpl
push
ficompl
lret
fwait
insl
pop
jg
dec
sbb
and
shl
push
xchg
jno
shr
js
loopne
xor
add
xor
std
adc
inc
dec
call
pop
mov
div
mov
addr16
dec
sub
xchg
add
addr16
ja
mov
push
lods
lret
test
int3
ficoms
lcall
sbb
mov
mov
jno
gs
lret
ret
add
cmpsl
call
dec
jno
andb
vrcpss
std
jp
xor
mov
movsb
sbb
inc
je
lret
cmp
jae
aam
rclb
add
cmpsl
and
xor
pop
and
enter
dec
cs
add
ljmp
jb
std
or
mov
mov
mov
pop
cmp
xchg
mov
enter
das
sbb
and
jp,pt
and
push
sahf
out
aaa
push
cmp
in
or
nop
xor
es
xchg
in
jne
xor
mov
cld
imul
dec
cld
xchg
inc
insl
stos
dec
jmp
repz
mov
pop
lahf
mov
sub
outsb
pop
add
mov
cli
lret
cmpsb
xor
push
gs
xor
dec
shr
fwait
inc
sub
push
push
test
inc
repnz
xlat
hlt
lods
jbe
call
cmp
filds
jl
add
mov
ficompl
mov
jge
cmpsl
out
js
pop
ret
out
inc
aam
jl
and
cmpsb
lcall
dec
push
or
mov
cs
jb
add
cwtl
das
pushf
jnp
cs
movsb
or
mov
popa
and
std
fnsave
push
test
loope
mov
push
ljmp
cmp
outsb
push
jno
cmpl
mov
jp
pop
mov
dec
mov
cmp
jg
add
pop
cld
in
test
in
in
or
sarl
xchg
loopne
mov
enter
xlat
lea
jne
mov
sub
shrb
adc
mov
jo
sbb
lds
mov
push
rcll
adc
pop
push
sbb
or
cmc
mov
jg
jae
mov
mov
arpl
sbb
outsl
cwtl
adc
cmp
xchg
inc
das
iret
sbb
aaa
ljmp
shrb
sbb
fistps
rcl
or
pop
fldl2t
test
leave
fdivrl
inc
enter
push
or
jnp
jne
sbb
scas
aad
out
ret
das
cs
inc
jmp
mov
enter
dec
inc
out
jge
js
push
je
mov
roll
adc
sbb
psubusw
gs
cmpsl
ds
mov
mov
in
jne
xchg
sub
bound
fcomps
push
subl
pop
data16
pop
sti
push
pop
scas
jle
adc
mov
mov
xchg
lcall
add
out
jp
out
js
xchg
mov
jae
stos
sbb
sub
inc
popl
adc
inc
aaa
and
arpl
push
hlt
lods
stos
xor
aad
jno
pop
ret
push
push
aas
movsl
lret
xor
cltd
sbb
lock
pop
adc
loopne
pop
push
cmp
jo
out
pop
sbb
pop
push
cli
fadds
adc
fdivs
cltd
add
sahf
jo
shrl
pusha
int
test
xchg
bound
mov
xlat
dec
mov
sti
shll
ds
loopne
push
xor
pop
enter
mov
bound
pop
mov
inc
push
mov
nop
rclb
mov
movsl
cld
sbb
push
xor
xor
prefetcht0
jl
mov
push
inc
jbe
and
outsl
jae
xor
dec
cmp
and
jmp
pop
mov
imul
xchg
xchg
fldcw
pop
adc
mov
sub
bound
scas
add
sub
mov
das
pop
sub
jg
scas
out
ret
pop
jg
mov
and
ror
and
lods
fstpt
in
aam
stos
hlt
stos
insl
clc
out
mov
adc
movsb
mov
ret
xchg
mov
aas
jo
push
lds
adc
pop
or
gs
icebp
inc
imul
lds
repnz
mov
out
dec
xchg
pushf
mov
mov
sbb
insl
fsts
adc
add
sub
xchg
mov
push
pop
into
leave
repz
or
sbb
mov
mov
push
leave
repz
popf
inc
fcmovnu
inc
bnd
sub
repz
xchg
lock
cmp
and
stos
xor
into
mov
or
jp
mov
out
or
aad
xchg
insl
movsb
push
push
jecxz
pop
pushf
xorb
ss
sub
sbb
in
es
pop
mov
shll
pop
mov
or
sbb
inc
mov
in
icebp
jl
xchg
aad
push
icebp
mov
lret
cmp
testb
bound
jne
push
push
shl
adc
cmp
sub
xchg
out
mov
mov
dec
testb
ss
das
lds
test
fbld
jno
sub
xlat
repz
fwait
ljmp
inc
je
or
cmpsb
jmp
add
jb
jno
ss
incb
pop
sbb
jne
inc
fprem1
mov
sti
out
dec
jmp
add
inc
daa
push
xor
call
dec
fnstcw
or
pop
icebp
mov
push
in
repz
shll
push
push
push
cmp
or
push
inc
fistpl
inc
push
cmpsl
jnp
outsb
and
cmc
push
pusha
loop
aam
out
push
pop
pushf
xor
pushf
xor
cmp
or
inc
mov
pop
pop
jge
lcall
repz
fadds
mov
inc
mov
push
gs
and
xor
sbb
add
cmp
jne
dec
add
or
mov
xchg
pop
popa
ss
or
add
sbb
and
test
lcall
xchg
out
push
or
scas
or
add
or
cmc
out
cld
ds
mov
push
adc
aas
fnstenv
dec
or
dec
or
pop
jno
cmpsl
loop
or
xor
lahf
xlat
jns
inc
pop
sub
fiadds
shll
sahf
jmp
mov
out
xor
pop
mov
dec
or
cmp
mov
push
xor
or
jle
or
add
mov
lcall
or
xchg
and
mov
dec
addr16
mov
xor
icebp
cmp
mov
std
mov
adcb
add
hlt
push
mov
jb
xor
mov
add
jb
outsb
dec
xchg
dec
mov
or
dec
add
daa
or
mov
shld
clc
inc
mov
in
in
mov
sarl
addl
stc
lret
and
imul
out
adc
rol
mov
and
pop
xchg
cmp
lods
xor
or
push
and
pushf
insb
pop
jb
xchg
mov
notl
mov
popa
shll
in
or
sbb
pop
mov
clc
cmp
sbb
arpl
push
xor
orb
popf
lret
divl
shlb
pop
fidivl
add
roll
mov
inc
mov
out
pop
xchg
ss
fld
into
mov
xchg
sbb
adc
adcb
xchg
lods
add
inc
aad
ss
ja
fucom
sub
mov
sub
test
mov
dec
mov
mov
int3
xchg
dec
test
mov
sarb
dec
mov
add
push
scas
jb
mov
or
sbb
iret
jnp
cmp
mov
sub
push
pop
stos
inc
jbe
incl
pop
rclb
popa
in
and
xorb
mov
inc
inc
movsl
test
mov
push
jns
jo
aad
fstpt
hlt
and
fisubl
sub
push
pushf
repz
in
fwait
daa
adc
inc
jecxz
enter
fld
inc
inc
aaa
sbb
rol
mov
dec
pop
pop
loopne
cs
push
add
cmpsl
mov
cmp
js
cmp
dec
enter
inc
psraw
divb
test
int
mov
lods
push
mov
sub
and
add
cltd
dec
and
pop
xor
test
subb
and
add
and
sbb
mov
shlb
lret
add
push
push
mov
add
ss
ljmp
ljmp
stc
rcl
jnp
xor
dec
cli
add
and
popa
inc
clc
ret
mov
jmp
cmp
sub
cmpsb
addl
jno
pop
xchg
xchg
dec
sub
shll
pusha
inc
xor
pop
rcrl
fcoms
and
push
pop
mov
sarl
push
xor
vunpckhps
arpl
mov
fcmovbe
neg
in
inc
add
cmp
scas
iret
mov
adcb
mov
xor
sbb
imul
mov
fcomps
adc
movsb
and
insb
mov
xchg
jmp
incb
stos
les
out
sub
add
pop
pop
xor
jno
pop
fnsave
xchg
or
je
mov
pop
cli
jnp
mov
decb
popa
sbb
xor
insb
pop
fmul
lods
or
lods
out
fwait
in
insb
cmp
xchg
jnp
shrb
loope
pop
dec
cmpsb
out
push
fildl
and
push
scas
arpl
xchg
addr16
add
pop
mov
sbb
popf
jge
int
test
cmp
movsl
push
mov
dec
push
fsubl
insb
cmc
inc
push
adc
pop
cmp
movsb
push
push
pop
fs
push
cmpsb
cmpsl
push
outsb
cld
inc
imul
adcl
cmp
fcomp
xor
xchg
adc
fwait
mov
gs
xchg
sub
jp
incb
adc
cmpsb
xor
into
pop
push
in
roll
dec
pusha
jo
inc
inc
rcrb
insl
xchg
mov
insl
xor
inc
fstps
and
mov
clc
imul
rol
jne
jp
push
mov
push
icebp
mov
in
dec
cmpsl
stos
push
mov
add
movsb
stc
lock
lret
sub
mov
imul
dec
rclb
mov
or
push
mov
jmp
cmpsb
les
inc
mov
lds
fldl
rcrb
push
add
popf
scas
pop
xchg
iret
sbb
mov
and
mov
inc
fsubrl
sub
ret
mov
psubsb
mov
imul
ljmp
sbb
pop
sbb
jp
and
bound
xchg
pusha
or
pop
sbb
fsubrs
inc
test
cwtl
pop
lods
fsubp
sub
shlb
movsb
test
pop
mov
das
inc
cs
inc
leave
xchg
push
ret
adcb
jp
cli
imul
shrb
sbb
ds
je
xchg
clc
gs
jo
sahf
out
fdivrl
inc
mov
dec
insb
add
mov
clc
pop
dec
xchg
jb
cmc
pop
loope
push
pop
scas
sbb
test
test
jns
pushf
pop
ret
add
jecxz
and
xchg
iret
mov
fwait
xchg
jmp
jmp
push
neg
addr16
cld
stos
cs
pop
dec
popl
aam
mov
cs
ja
mov
je
sub
fisubs
jl
inc
cmp
pushf
stos
stos
movb
mov
adc
rcl
icebp
popf
scas
repnz
fldt
mov
push
stos
fcmovbe
jbe
loopne
ds
cmp
mov
cmp
scas
mov
mov
or
pusha
subb
push
sbb
cmpsl
in
lea
jo
std
ja
idiv
pop
cmc
cmp
push
scas
push
lret
inc
push
insl
pop
gs
test
pop
lods
mov
push
xchg
repnz
int3
xor
xchg
and
outsb
mov
stc
add
and
fsubr
sub
call
xchg
xchg
adc
sbb
repnz
inc
fidivrl
stos
mov
mov
ljmp
inc
fnsave
imul
aaa
notb
fbstp
inc
sbb
and
inc
lods
out
xor
imulb
push
clc
lret
cltd
shll
adc
repz
aam
mov
iret
std
mov
pop
in
testb
xorb
sbb
and
and
stos
or
lea
push
outsb
in
mov
xchg
mov
fwait
push
mov
mov
repz
jbe
in
test
jge
xchg
add
jge
in
aas
test
imul
dec
lods
call
inc
adc
lcall
fdivs
repz
inc
movl
int
xor
mov
xchg
aaa
cmp
daa
fnstenv
xchg
jo
roll
nop
jns
xor
or
add
dec
popa
test
push
icebp
and
dec
xchg
shll
in
lea
or
pop
dec
stc
popf
sub
xor
movsl
movsb
rorb
xor
fsubl
push
int3
pusha
stos
ss
sbb
cld
lock
push
pushf
xchg
push
insl
xor
sbb
xchg
out
lock
pop
ss
nop
fs
push
adc
xchg
in
lock
jl
pop
cmp
jge
mov
lock
or
jae
add
jg
push
jle
andl
gs
jle
les
jecxz
pop
and
xor
pop
lods
in
adc
call
leave
and
fiadds
inc
ret
fiadds
cmpsb
push
cmpsb
xchg
adc
jecxz
push
inc
mov
loopne
fists
daa
jb
ljmp
mov
sti
cmp
test
mov
addr16
dec
mov
mov
iret
mov
notl
mov
rcll
pop
fstl
pop
and
mov
aaa
sub
repnz
jno
inc
mov
adc
fidivs
and
inc
cwtl
das
mov
cmp
orb
insb
dec
nop
inc
jo
jnp
push
orl
pop
mov
jo
in
and
hlt
mov
pop
dec
dec
mov
sbb
mov
js
out
or
jp
mov
and
outsb
outsl
in
jne
cmp
out
sub
out
imul
lcall
int3
lahf
gs
shrb
data16
push
fsubs
pop
pop
dec
sarb
jno
ja
pop
push
cmp
pop
rorl
stos
in
ja
shrl
xchg
aas
xchg
adc
popa
ljmp
scas
leave
pushf
mov
adc
inc
xchg
push
mov
jmp
movsb
iret
adc
dec
mov
mov
fdivs
jae
in
inc
outsb
out
mov
loop
icebp
test
popa
xor
sbb
inc
mov
sbb
std
stc
xor
in
movsl
sbb
movsl
sub
aad
and
jge
std
push
mov
sub
mov
cmp
and
pop
gs
or
or
leave
xor
fnstenv
dec
lcall
push
inc
mov
aam
loopne
xor
adc
push
jbe
psadbw
cmpl
es
imul
push
sahf
in
xor
cmp
pusha
cli
sbb
pop
mov
xlat
mov
xchg
mov
sti
aas
stos
sbb
xor
inc
cltd
out
xchg
lret
add
cmp
xor
lods
je
data16
and
pop
ljmp
mov
fcomip
push
adcb
test
repnz
decl
xchg
adc
imul
cmp
xchg
dec
inc
xor
inc
adc
popf
test
dec
cmp
cmp
jge
int3
cmp
mov
mov
pop
push
fnstsw
repnz
int
cmp
loop
shrb
repz
jecxz
popa
cmp
ret
sbb
mov
sbbb
adc
cld
adc
out
bound
ljmp
in
dec
popa
out
lods
xchg
addr16
popa
mov
and
dec
pop
inc
or
and
cmc
enter
lcall
addr16
leave
dec
fdivr
aas
fdivl
inc
call
pop
mov
call
xrelease
push
shlb
mov
andl
pop
int3
inc
push
xchg
inc
mov
in
adc
out
daa
lcall
jg
scas
sahf
in
jo
test
sar
test
sarl
rolb
clc
insl
mov
pop
cwtl
outsl
push
mov
mov
xchg
sbb
add
cmpsl
shll
cli
loop
addr16
into
clc
out
fmuls
add
pop
pushf
push
pop
std
popf
adc
js
mov
push
dec
mov
mov
movsl
repz
mov
add
incb
dec
or
dec
mov
fwait
mov
clc
push
sbb
movd
out
mov
scas
xchg
les
imul
clc
sub
in
aas
cmp
outsl
pop
fldt
cmp
jns
mov
and
push
imul
xchg
cwtl
movsb
out
movsl
ret
rorb
xchg
mov
stc
push
jmp
dec
add
jae
int3
fildll
testl
mov
dec
mov
out
or
movsb
dec
lfence
pushf
gs
pop
add
pushf
mov
sbb
aad
jb
inc
gs
daa
pop
jle
bound
stos
daa
xchg
adc
mov
mov
jle
sbb
mov
pop
jl
aad
jae
dec
xor
pop
cmp
push
sub
xor
or
push
pop
jl
and
push
cmc
sahf
dec
push
sub
pop
mov
je
mov
aas
xor
mov
mov
cli
notb
jp
sbb
add
aaa
mov
xchg
push
sub
mov
outsl
inc
sbb
jmp
lea
loope
mov
mov
imul
neg
jmp
jbe
jecxz
aad
cli
mov
cmc
or
into
data16
ja
ficoms
popf
lds
adc
jb
mov
adc
sbb
mov
mov
out
cmp
test
sub
adc
loop
in
repnz
sub
and
fwait
push
xchg
xor
call
push
dec
dec
xor
sbbl
lods
cmp
rclb
inc
dec
pop
pop
or
cmp
stos
scas
push
dec
scas
adc
shl
dec
jne
fdivr
popf
out
lods
push
sub
inc
testb
adc
xchg
in
push
js
lods
bound
cmc
imulb
pop
mov
sub
adc
jl
jge
mov
pop
pop
outsb
or
cs
or
mov
pop
sbb
aam
inc
dec
inc
ss
aam
mov
pushf
fcmovu
pop
mov
sub
aam
dec
pop
jnp
rorb
pop
inc
loopne
jnp
mov
std
add
cmpsl
outsb
sbb
push
sub
movsl
stos
mov
outsb
leave
into
mov
scas
stos
stc
mov
clc
sbb
sti
dec
scas
mov
aaa
in
or
call
out
inc
push
jmp
xor
stos
stc
sahf
xorl
in
pusha
mov
iret
or
icebp
jb
stos
mov
js
mov
pop
or
push
pusha
stos
adc
adc
jo
cmp
rorb
in
loope
cld
or
fs
inc
xor
cmp
sub
mov
pop
sbb
movsb
mov
test
out
or
cmp
ja
pop
bound
xlat
mov
insb
cmpsl
pushf
sbb
jle
iret
ret
iret
pop
pop
adc
fidivs
inc
add
dec
and
push
xchg
push
cli
jo
mov
push
decl
inc
adc
lods
das
imul
fmull
dec
cmp
xchg
xlat
rclb
cs
inc
sbb
jle
sub
mov
out
repnz
jns
cwtl
mov
sub
sbb
xchg
ret
js
cli
rcrl
imul
cmpsl
lds
shll
scas
insl
dec
shll
mov
add
inc
jmp
inc
movsl
cmp
lock
pop
icebp
fmull
sbb
stos
dec
and
ds
cs
jnp
dec
sahf
outsb
popf
add
pop
je
popf
pop
mov
push
cmp
xlat
mov
mov
mov
ret
mov
jae
cmp
hlt
sti
test
xchg
icebp
gs
dec
fisubrs
lret
outsb
ficoms
or
pushf
fisttps
mov
enter
and
pop
mov
test
in
mov
or
js
dec
dec
jecxz
shll
pop
outsl
mov
push
cmpb
sbb
sarl
inc
and
push
push
dec
js
pop
or
aas
lea
cmpsl
inc
sbb
fwait
inc
xchg
dec
cmp
stc
mov
or
adc
and
sbb
and
fstp
lahf
jge
insl
xor
in
inc
pcmpeqb
inc
sti
mov
adc
cmp
mov
stc
dec
pop
test
pop
xchg
imul
iret
xchg
outsb
mov
ret
popf
sahf
pop
jae
xlat
stos
outsl
mov
ret
adc
xor
and
sbb
pop
push
xchg
fbstp
cmp
insl
sub
mov
pop
in
pop
add
xor
lds
jmp
nop
jnp
movsl
inc
and
loopne
sbb
pop
loopne
js
jno
hlt
jecxz
clc
lret
stos
cmc
in
cmpsl
add
pop
sub
pop
jge
push
sub
mov
dec
pop
imul
dec
or
test
xorl
repz
orb
subb
or
in
movsb
imul
test
xchg
xor
jbe
pop
fadds
cmp
faddl
jg
mov
dec
dec
cmp
jnp
xchg
or
cmp
jo
cwtl
lods
xchg
xchg
mov
push
jns
push
or
mov
lds
aaa
add
fdivs
mov
aam
outsb
shll
mov
leave
outsb
lret
inc
pop
inc
ret
loopne
ds
faddl
pushf
out
aas
or
dec
sub
aas
dec
inc
hlt
dec
sub
jne
dec
pop
add
fdivl
leavew
inc
adc
cmp
xchg
fisubrs
jp
and
ret
add
inc
in
mov
push
cld
insb
sub
test
mov
sbb
repz
lahf
fnsave
scas
mov
nop
pop
ror
push
mov
jbe
psrlw
jae
dec
inc
fwait
sub
pop
das
or
and
js
les
or
inc
jo
xchg
cmp
fsts
xchg
mov
inc
mov
lret
jg
cmpsl
or
inc
push
enter
add
push
loope
cli
bound
xchg
lods
mov
or
movsl
int
xchg
loop
mov
loop
inc
add
sub
push
in
hlt
xor
and
int3
lret
sbb
cwtl
push
mov
cli
loope
cmpsb
cmpsb
xor
cli
sbb
mov
pop
out
sbb
pop
lcall
ret
clc
inc
subb
iret
cmp
into
xchg
repnz
test
jne
repz
jae
ljmp
cmpsl
insb
sub
fsubr
or
jp
and
lods
dec
pop
iret
arpl
icebp
add
out
mov
hlt
xor
push
mov
or
ret
push
ficomps
push
cs
mov
in
cmp
add
lret
hlt
les
imul
lahf
mov
mov
pop
int3
jns
test
pushf
lods
jae
fwait
clc
imull
cmc
es
or
test
in
sahf
test
lods
mov
les
enter
mov
das
mov
add
lcall
jne
cld
xchg
ja
popf
cmp
xchg
pop
insl
loop
jle
add
sub
sbb
mov
mov
in
inc
inc
mov
xor
xchg
lcall
mov
pop
outsl
call
stos
mov
ja
and
adc
push
push
loope
jecxz
push
shll
mov
cmpsl
mov
cmp
pop
inc
sbb
mov
stos
and
jns
xor
lock
cmp
out
rcrb
mov
mov
mov
mov
mov
int3
cmpsb
jno
imul
mov
sbbl
movd
add
inc
push
lds
adc
sub
pusha
pop
inc
push
dec
movq
jo
jge
inc
and
into
dec
jg
xor
or
aad
push
jbe
fmuls
aam
out
push
xor
sub
sbb
xor
mov
add
and
pop
xchg
popa
push
loope
aad
repz
addb
stc
cmp
push
mov
add
repz
sub
pop
push
sub
pop
push
fbld
iret
loope
outsb
dec
loop
pop
or
mov
stos
incb
popa
dec
scas
lds
adc
cs
jo
mov
and
out
adc
jo
cs
insl
add
or
push
fistpll
fnstcw
cld
lret
sbb
adc
cs
dec
sbb
outsb
mov
mov
xor
mov
sub
dec
sub
pop
dec
repz
cwtl
mov
add
inc
sahf
pop
imul
lock
jae
sbb
das
cmp
adc
sbb
call
icebp
push
push
xchg
testl
push
dec
outsl
sub
mov
out
push
loope
pop
jb
xor
dec
ss
dec
fstl
jb
mov
and
fmulp
sub
out
stc
fs
jg
lea
or
sahf
mov
xor
sbbl
ds
movsb
pushf
mov
xchg
fnstenv
pusha
jae
dec
mov
xor
arpl
mov
pop
fstps
enter
fcoms
push
or
cmp
sbb
out
xor
scas
hlt
xor
stos
into
xor
cmp
or
push
lea
inc
cs
inc
mov
out
push
lods
aam
mov
cmp
lea
movsl
adc
xchg
or
xchg
loope
rorb
push
daa
rcrl
mov
fildl
mov
es
ja
jle
testb
dec
jecxz
mov
and
lret
dec
jnp
mov
iret
mov
add
and
scas
in
imul
dec
in
pop
or
sbb
into
mov
fldenv
push
jge
gs
jnp
mov
mov
movsb
call
pop
movsl
xor
mov
or
imul
bnd
mov
sahf
pop
xchg
nop
je
in
jge
cmpsl
mov
mov
popl
lds
mov
bswap
or
aam
shrb
xchg
fstpl
push
jns
fnstcw
arpl
mov
lcall
push
popf
ja
xor
movsb
push
mov
fisttps
adc
xchg
push
aas
lret
test
sbb
adc
gs
cmp
jl
cmc
or
imul
test
lock
loopne
mov
xor
adc
xchg
idivb
out
clc
int
stos
sarb
hlt
add
and
nop
add
int
scas
push
lcall
iret
pusha
arpl
push
adc
pop
xchg
inc
push
pop
xor
xchg
mov
dec
or
xchg
mov
jmp
jmp
inc
mov
push
prefetch
jnp
lcall
clc
insb
pop
fisubl
jbe
gs
fidivs
enter
lea
cmpb
sbbb
aas
lock
xor
ss
fsts
jmp
ret
test
rorl
ds
inc
rorb
adc
test
dec
push
loope
add
mov
push
es
jne
popf
nop
lcall
xchg
add
repnz
std
add
insl
cmc
test
inc
pop
stc
out
mov
mov
or
xor
mov
ret
stos
xor
in
test
inc
leave
inc
cmp
mov
push
gs
lods
call
sbb
push
or
gs
repnz
out
pop
loopne
sub
push
lock
lret
emms
add
mov
dec
into
orl
jo
mov
ss
adc
cmp
movsl
push
mov
aas
jne
dec
xchg
jmp
pop
xor
iret
arpl
add
insl
leave
sub
lret
push
sub
sub
mov
ja
leave
inc
add
mov
into
jnp
push
mov
mov
out
pop
stos
xchg
repz
mov
inc
lods
out
jmp
sbb
test
pop
pop
ss
mov
mov
pop
push
cmpsl
xchg
xor
pop
sbb
mov
mov
rcr
int
test
pushf
test
arpl
pop
xchg
xchg
push
jle
mov
loop
fisttpl
leave
ret
cmpsb
lret
inc
jno
cmpsl
push
adcl
lods
lods
xchg
mov
repnz
mov
adc
push
xor
jp
aad
xor
lret
mov
or
cmp
sub
dec
mov
sar
add
push
insb
and
testl
iret
imul
inc
aad
sbb
add
outsb
test
repz
lea
dec
adc
out
jecxz
bound
jnp
sti
test
pop
ss
push
pop
pop
pop
mov
dec
jbe
and
mov
sub
adc
test
insl
adcb
pop
lahf
test
inc
in
sub
mov
mov
mov
and
rclb
pusha
jecxz
rcr
jg
inc
das
add
rclb
out
xor
test
push
test
rcrb
divb
xchg
jno
rolb
mov
popw
mov
adc
cmp
pop
or
adc
pop
jp
sbb
push
push
and
push
adc
fidivrs
popa
stos
test
pop
mov
adcl
stc
movsb
jne
dec
rcrb
aam
bound
add
dec
popf
mov
cmp
mov
dec
mov
arpl
in
dec
call
popa
aad
pop
jp
les
nop
adc
xchg
sbb
pop
xchg
dec
shlb
and
cmp
orb
cwtl
in
fisubrl
or
mov
sbb
scas
cmp
pop
dec
negl
xchg
int3
jb
pop
mov
pop
add
push
out
pop
jne
xor
cltd
jmp
dec
inc
push
mov
addl
xchg
insb
mov
pusha
cmpsl
sbb
pop
faddp
cmp
jae
xor
fadd
sarb
add
subl
fsub
push
adc
fs
push
pop
das
push
pop
hlt
jnp
xor
in
out
ret
mov
imul
repz
lahf
adc
out
cmp
mov
cwtl
xchg
nop
fwait
jecxz
sbb
je
mov
data16
testb
sahf
cmc
sarl
mov
mov
shll
inc
xlat
add
lods
xor
negl
push
arpl
pop
subb
sar
ja
jno
xchg
pop
rorl
ds
fisubrl
pop
dec
sbbl
jge
mov
nop
inc
out
push
mov
jle
movsb
sub
daa
cmp
fdivs
adcb
cmp
dec
pop
lock
jl
pop
mov
arpl
into
cmc
xor
xchg
rclb
dec
fsubrp
icebp
jmp
shll
xor
dec
data16
cmp
decw
cmpsb
pop
mov
adc
mov
mov
in
mov
lods
enter
add
lret
jo
mov
fsts
or
std
jmp
xor
std
test
dec
fucomi
idivb
dec
mov
jmp
aam
ljmp
xor
jno
test
xor
push
mov
outsl
daa
mov
add
sbbb
xor
fadds
xchg
insl
push
push
jp
add
and
xlat
imul
gs
mov
sbb
aad
sbb
inc
xchg
lcall
push
idivl
fldl
shlb
fwait
inc
inc
and
mov
xor
cmpsl
nop
mov
repnz
pop
dec
sub
push
inc
test
and
mov
fldenv
inc
insb
popf
es
and
adc
and
popf
repnz
mov
inc
sbb
jns
add
js
fstl
or
incl
mulb
outsb
push
aam
mov
push
call
pop
dec
mov
sbb
idivb
mov
jne
mov
dec
lods
sbb
je
clc
push
dec
rcll
inc
int
ljmp
add
push
and
xchg
jb
ljmp
xorl
iret
imul
mov
call
pop
mov
mov
sub
test
lods
fsubp
pop
mov
dec
add
inc
fidivs
jne
and
pushf
mov
cmp
cmp
push
mov
icebp
mov
push
aas
or
sbb
adc
fucomp
xor
jo
fldcw
jmp
imull
sti
mov
cmp
mov
mov
pushl
xchg
inc
in
push
js
movsb
mov
fsubl
jno
pop
iret
hlt
or
jns
iret
clc
arpl
and
outsb
pop
loop
sub
mov
ja
pop
dec
mov
or
loopne
mov
sbb
mov
int
fldenv
or
sub
lret
lock
cs
xchg
cmp
cmp
push
jnp
dec
js
mov
xchg
out
fdivr
push
imul
sub
pushf
scas
push
into
and
fsubp
int
xlat
or
pushf
cmp
push
xchg
repz
jle
cld
or
inc
dec
jne
adc
pop
aaa
push
fistpl
aas
jl
cvtps2pi
mov
mov
ja
and
shlb
fwait
adc
icebp
mov
mov
jge
cmp
pop
pop
hlt
and
ret
das
nop
sbb
lret
test
adc
frstor
mov
lods
es
mov
adc
sub
hlt
lds
clc
into
mov
adc
mov
jge
inc
cld
rcr
sub
imul
jmp
rcrb
test
xor
in
icebp
ds
dec
xlat
inc
pop
dec
stc
sbb
into
push
add
cltd
pop
or
inc
xor
mov
inc
je
push
in
inc
lret
xchg
test
fldenv
sbb
sti
adc
es
fldcw
stos
sbb
mov
xchg
pushf
jecxz
push
scas
test
jbe
call
out
cltd
call
or
xor
test
inc
or
mov
adc
cmp
or
dec
js
add
mov
bound
sarl
in
data16
push
adc
add
lret
scas
mov
add
test
dec
in
add
jb
repnz
cmp
dec
add
cmpsb
xor
or
outsb
insb
add
es
mov
add
mov
test
loope
inc
mov
icebp
faddl
out
and
in
sarl
das
out
test
shl
lcall
icebp
dec
jb
sub
push
jecxz
cs
sbb
jg
popf
jge
testl
jmp
iret
and
pop
mov
jbe
mov
and
add
lea
insl
test
jmp
mov
imul
inc
inc
mov
insb
sub
mov
cmp
popf
lret
xchg
jb
cltd
add
pop
mov
pop
adc
stc
fwait
mov
push
mov
popa
cli
cmpsb
arpl
je
mov
adc
and
pop
sbb
cmpsb
add
popf
jle
in
push
jno
pop
mov
addr16
mov
pop
add
test
lret
ja
cld
xor
loope
xor
xchg
adc
nop
cltd
jl
xlat
mov
test
adc
cld
out
lds
stos
pop
xor
sbb
mov
pop
std
xchg
rorl
stos
fnsave
mov
test
mov
sahf
push
icebp
aas
sbb
and
add
xor
outsl
sahf
inc
cmp
add
icebp
stos
xor
and
into
imul
inc
push
mov
cmp
dec
popf
bound
pop
push
push
and
or
in
push
jns
stos
inc
loopne
mov
add
jp
in
loopne
jns
jo
jb
mov
dec
pop
dec
xorl
jge
sarw
mul
rcll
sub
test
fs
cmp
mov
push
rcll
mov
dec
test
popa
mov
gs
ss
jmp
ss
inc
mov
rclb
jae
daa
cmp
mov
int
movb
xlat
cmpl
outsb
outsl
jb
in
cmc
or
fs
jno
cwtl
inc
pop
xchg
ja
xor
cmp
pop
gs
adc
loopne
mov
pop
xchg
mov
ds
sar
test
iret
and
push
popa
and
sub
and
imul
pop
sbb
stos
dec
push
inc
push
mov
dec
lods
pop
push
in
cmp
ja
sub
push
xor
push
shrb
stos
gs
shrb
repnz
in
daa
iret
adc
stos
pop
push
ret
mov
cmp
and
dec
sub
mov
addr16
fmuls
and
mov
mov
dec
jmp
inc
aam
movsb
push
dec
sbb
adc
pusha
mov
cli
add
fscale
ds
clc
mov
aad
clc
dec
xor
aad
dec
cs
sub
push
cltd
orb
pop
clc
in
jle
in
loopne
or
inc
mov
jmp
mov
je,pn
mov
mov
fwait
mov
push
call
cwtl
mov
subl
std
cmp
sbb
lcall
stos
jbe
nop
pop
stos
outsb
ret
lret
rcrb
pop
dec
insb
outsl
popa
pop
pushf
xor
add
mov
rolb
popa
enter
xor
mov
cld
pop
inc
xor
push
mov
lods
sbb
pop
iret
sahf
xor
sbb
and
movsl
pop
jns
jecxz
or
pop
fisttps
add
lret
xor
shlb
arpl
sub
mov
push
stos
jns
dec
jge
lret
fisttpll
adc
and
jmp
mov
ficoml
xor
imul
sbb
stc
pop
inc
int
cmc
js
movsb
pop
add
or
or
cmpl
out
fwait
ds
pop
test
and
dec
movb
mov
sub
stos
lret
adc
inc
xor
lret
pop
add
data16
sti
jg
rclb
movl
leave
insl
jecxz
leave
mov
and
repnz
jae
inc
in
enter
cld
stos
insl
pushl
add
mov
or
push
fimuls
push
adc
sbb
sub
stos
add
popf
loope
adc
ja
and
mov
sbb
outsl
adc
and
lds
test
xor
loope
jns
add
cmpsb
dec
mov
jae
cmpsl
arpl
fdivrl
mov
inc
aaa
push
cltd
imul
jns
fldenv
jb
in
leave
rclb
enter
insb
decb
pusha
fistpll
inc
inc
and
pop
outsb
sti
pop
cmp
cmpsb
rclb
or
xor
jmp
or
std
imul
mov
adc
stos
xchg
testl
xor
lret
mov
xor
add
aad
stc
int
lock
je
iret
outsb
test
div
iret
movsb
rolb
outsb
inc
bound
xchg
mov
movsb
xor
push
xchg
inc
testb
call
and
cmpsb
add
mov
jo
cltd
ja
rclb
jb
test
in
xchg
mov
xor
cwtl
outsl
sbbl
push
in
mov
std
xchg
inc
mov
adc
pop
js
cmp
jmp
fcoms
popf
and
test
and
psubsw
out
push
mov
outsl
out
fsubrl
dec
aas
add
js
jno
test
pop
and
pusha
lds
daa
xchg
dec
mov
lods
aad
or
in
xorb
pop
test
cmp
xchg
ds
rorb
aam
daa
push
loopne
pop
lock
pop
aas
out
mov
adc
mulb
xchg
xor
loop
sbb
cs
aad
jecxz
test
add
mov
jnp
lret
mov
in
add
jl
aas
inc
notl
push
adc
outsb
sub
or
cmpsl
add
xor
andl
pushf
jp
gs
in
and
xlat
bound
push
sbb
xchg
cmpsb
shl
inc
ficoml
mov
loope
fs
stos
mov
cltd
pop
shlb
jmp
adc
stos
iret
bound
xchg
lods
jnp
in
push
sbb
adc
sub
aas
js
cmp
jecxz
inc
idivb
and
mov
imul
pushf
inc
push
xor
push
loopne
dec
jecxz
shl
add
fidivrs
dec
cmc
mov
cmc
addr16
xchg
lods
fisttps
cld
mov
into
and
or
mov
movsl
mov
add
pop
pop
or
test
movsl
out
enter
cwtl
dec
sbb
adc
pop
or
cmpsb
mulb
inc
mov
pop
pushf
mov
pop
dec
adc
mov
jns
adc
icebp
cmp
jmp
out
mov
pop
clc
icebp
xor
mov
and
sub
mov
inc
lods
insl
aas
sbb
lcall
xchg
or
inc
mov
mov
andps
inc
xor
mov
adc
movsl
mov
mov
pushf
fbstp
and
mov
push
xor
add
jae
push
leave
ret
xchg
pop
fnstsw
rorl
adc
psubusw
xchg
subb
add
xchg
mov
cmp
add
addr16
cmp
sbb
dec
jns
cmp
jecxz
popf
hlt
push
ds
in
fistpl
test
lret
push
jo
and
add
dec
movsb
cmp
aas
sbb
mov
outsl
inc
mov
sub
and
hlt
out
hlt
call
cmp
xchg
sarb
jle
pop
enter
sub
dec
popf
es
dec
movsl
push
int
xor
inc
mov
sbb
push
mov
cwtl
cmp
pop
sub
movsb
data16
sub
sub
ret
js
pop
cs
push
cld
shlb
push
rol
and
sbbl
bound
and
add
push
cmp
roll
fdiv
mov
jnp
pop
mov
stos
je
std
inc
or
inc
add
adc
les
fldcw
and
cwtl
mov
mov
out
xchg
inc
adc
sub
jmp
jbe
xchg
js
jge
data16
mov
dec
dec
jg
xor
fisubrs
push
scas
and
add
cli
daa
add
out
push
pop
cmpl
pop
push
int3
sub
and
scas
jnp
das
xchg
push
sbb
mov
or
inc
decb
or
xor
and
loope
outsl
das
adc
jmp
scas
data16
fcomps
mov
or
inc
jo
add
or
pop
jmp
or
call
and
nop
out
jle
pusha
fnstsw
pop
and
je
popa
mov
push
jecxz
sbb
mov
cmp
sub
insb
aaa
cmp
faddp
jbe
jns
test
push
rclb
inc
std
jo
cld
pop
lods
mov
loop
mov
push
push
dec
xchg
mov
mov
aad
hlt
jnp,pt
ret
inc
lret
iret
sub
dec
lahf
jge
iret
aad
stos
mov
not
xchg
push
xchg
cs
and
lods
xchg
in
nop
aam
adc
popa
fsts
push
add
cli
outsb
sbb
ret
das
dec
sbb
push
cmpsb
inc
lret
sub
inc
and
les
ret
loopne
push
mov
add
cs
jae
inc
outsl
dec
test
xchg
in
sbb
lock
push
pop
les
das
and
das
lods
sbb
lret
jge
inc
and
xchg
add
xchg
dec
dec
lret
aam
ret
mov
addl
or
push
mov
cmpsl
xchg
mov
jno
fwait
pop
fdivrs
insb
aaa
aas
movsb
lea
stc
jae
adc
and
jne
sbb
mov
int3
sbb
lahf
cmpsl
flds
xchg
jg
adcl
jo
add
scas
xchg
jecxz
pop
punpckhwd
jbe
inc
lcall
repz
test
xchg
inc
fcompl
and
cmc
add
dec
mov
into
movsb
sbb
dec
mov
test
fdivs
mov
xchg
inc
mov
cmp
dec
scas
in
inc
fisttps
xchg
lods
arpl
jno
sbb
sbb
inc
jns
icebp
movsl
enter
in
and
jmp
and
mov
cmc
inc
adc
mov
in
int3
imul
stos
push
addr16
dec
ds
cmp
mov
loopne
add
cmc
mov
dec
cli
push
mov
jae
test
loop
daa
or
pusha
fs
xchg
mov
dec
jle
sbb
fsts
fucomip
adc
pusha
andb
fdivl
lahf
imul
dec
pop
add
xchg
stos
lret
inc
shll
cmp
pop
push
scas
mov
out
sahf
xchg
jg
adc
lret
and
pop
repz
test
add
jg
cmpsl
mov
push
sarb
xchg
xchg
cmpsl
in
sahf
jnp
mov
into
add
and
jo
xchg
rclb
pop
push
lods
pop
dec
sub
test
sbb
arpl
mov
or
stc
mov
lea
hlt
jb
enter
mov
fwait
lods
fnstcw
imul
orb
fsubrp
push
hlt
xlat
sub
sub
and
or
xchg
push
imul
imul
dec
inc
push
mov
les
cmc
repnz
ljmp
imul
jp
sti
xchg
je
scas
sub
fdivrs
xchg
mov
stc
sub
dec
ja
mov
push
in
pop
andl
xchg
popa
daa
or
or
push
mov
jae
pop
xor
cmp
mov
test
pop
inc
mov
out
insb
lcall
loopne
xor
addl
xor
jle
adc
sarl
mov
add
lahf
and
inc
sarl
lods
mov
cwtl
pop
sub
inc
xlat
jbe
icebp
in
sbb
cmp
xchg
xor
adc
rcll
sbb
cmp
mov
xchg
or
cwtl
xchg
orb
sub
jo
or
xor
cmpsl
pop
mov
mov
out
sub
pop
por
pop
jmp
test
outsl
notb
xchg
ret
mov
sti
ss
int3
xchg
loop
dec
movsl
repz
xchg
aad
arpl
test
push
fisttps
bound
lahf
les
fdivrs
pop
into
aad
and
mov
pop
inc
jge
js
and
test
sub
fidivl
inc
jbe
movsb
dec
jmp
and
or
and
mov
jle
pop
scas
jne
int3
add
loope
sbbl
popf
ficompl
dec
inc
ljmp
jb
xchg
repnz
xchg
push
dec
outsl
mov
push
sbb
mov
popl
stc
lret
sub
fimuls
xor
cld
dec
and
ss
dec
gs
pop
mov
cs
test
jbe
dec
stos
jbe
lods
jl
std
jo
push
push
mov
scas
adc
jnp
jns
dec
lock
stc
cld
push
loopne
iret
lods
pop
insb
jl
inc
and
cs
mov
mov
add
cbtw
iret
jns
or
xchg
xchg
xor
sbb
in
ds
test
push
inc
pushf
sbbl
decl
stos
xchg
sbbl
cmp
pop
adc
push
inc
or
push
xchg
cmp
xchg
push
les
or
xor
jmp
xchg
clc
outsb
mov
test
xchg
pop
mov
sbb
add
in
sbb
pop
adc
orb
xor
scas
adc
pop
pop
push
sbb
daa
out
out
sbb
cmp
add
mov
jns
and
data16
add
fists
cmc
js
out
dec
js
rolb
adc
push
or
push
in
testb
in
mov
inc
inc
cld
push
xchg
jle
xor
xchg
lret
inc
cmp
mov
pop
decb
add
adc
adc
cmp
xchg
mov
iret
mov
mov
mov
out
inc
lods
or
xlat
cmp
ljmp
es
inc
sbb
rol
rorl
shll
jg
jnp
lods
inc
jg
dec
dec
cld
push
stos
or
mov
sub
icebp
rcl
or
clc
stos
imul
ret
mov
mov
pop
mov
jecxz
cmpsb
sbb
add
pop
in
lock
stc
add
inc
daa
popf
arpl
fdivrl
jne
aam
loopne
out
push
pop
and
lcall
pop
pop
mov
cs
xor
out
mov
div
mov
pop
jmp
insb
and
xchg
daa
mov
ss
xchg
rcrl
iret
push
out
xchg
enter
push
sti
jbe
call
jmp
cld
pop
adc
jns
mov
stos
dec
sub
mov
cs
sbb
or
js
and
sub
icebp
mov
jbe
pop
pop
ljmp
clc
or
inc
dec
cmpsl
sub
or
mov
dec
inc
daa
jns
mov
rorl
pop
fucomip
movsl
gs
clc
addr16
jb
inc
jbe
lahf
rcrl
inc
insl
test
in
in
adc
cmp
fs
jne
cwtl
icebp
popf
cmp
int3
stos
dec
cltd
rolb
incb
test
push
pop
icebp
add
je
test
sbb
or
loopne
push
and
adc
xor
mov
and
movsb
sbb
sbb
popf
fsubr
ds
shrl
mov
or
or
in
addb
mov
loope
shrb
enter
pop
mov
mov
lret
push
push
dec
sub
xor
iret
int
out
pop
mov
mov
mov
dec
dec
xchg
xchg
je
jnp
notb
fnstcw
sbb
jns
xchg
insb
scas
or
pop
jns
or
and
pop
cltd
and
popa
fnsave
test
inc
or
add
dec
ljmp
dec
mov
clc
insb
and
sbb
ss
mov
div
cmpsl
in
or
aas
aad
or
ror
insb
daa
sbb
dec
shr
ror
dec
xchg
fidivrs
push
cmpsl
xor
xor
cltd
sbbb
xor
add
sub
test
into
pop
aaa
sbb
loopne
mov
call
aam
push
lods
hlt
or
dec
cmp
mov
mov
jmp
stc
ds
cmc
push
outsl
in
ret
push
call
fsubs
xor
push
lahf
cmc
dec
out
loopne
or
lea
imul
xchg
icebp
jns
sbb
nop
insb
mov
movsb
cld
cmp
cld
clc
int
xlat
aas
mov
mov
cltd
jnp
xchg
orl
sbbl
imul
xor
pop
and
mov
test
lcall
cmp
dec
idivl
popa
xchg
cmp
cmc
nop
adc
sbb
sub
pop
daa
scas
cwtl
push
xchg
push
or
mov
scas
pop
push
fxtract
jl
insb
dec
out
inc
test
dec
push
das
test
xor
fsubrl
orl
inc
pop
xor
mov
sub
sbb
ret
mov
lock
push
or
pop
jecxz
inc
mov
pop
pop
mov
xchg
sbb
in
out
xlat
cmc
push
cmp
xchg
jle
jb
inc
into
lret
into
sahf
mov
mov
popa
pop
or
scas
jl
sub
jo
jecxz
lods
daa
mov
push
or
sub
sub
imul
clc
sbb
cmpsb
test
adc
or
mov
aad
jno
fsubp
sub
pop
ss
push
xchg
pop
or
rcrl
jge
arpl
cmp
imul
faddl
mov
outsl
cltd
movl
push
mov
iret
inc
lds
lret
adc
fs
cmp
andb
inc
cwtl
fidivl
mov
pop
stc
out
filds
jne
ror
pop
inc
add
roll
imul
or
shl
roll
stc
ljmp
xchg
lods
scas
mov
xchg
sbb
cmpsl
push
sbb
sbb
adc
pusha
into
fists
sbb
cld
and
ss
in
mov
mov
stos
pop
out
mov
ljmp
xchg
imul
or
sbb
cs
arpl
xchg
lods
fstl
wrmsr
dec
test
dec
and
frstor
mov
cmp
lret
lock
xchg
shrb
push
fs
xchg
xor
jb
js
jbe
jns
sbb
out
xchg
pop
es
sub
cmp
test
enter
in
loop
jmp
movnti
je
es
dec
xchg
jge
mulb
inc
inc
jno
push
dec
xchg
dec
pop
pop
popa
std
repz
int
jns
mov
xor
cld
loop
pusha
xchg
push
es
sti
mov
sti
and
or
mul
pusha
leave
jp
sbb
jno
mov
push
dec
dec
xchg
clc
mov
push
cld
sbb
cmp
adc
xchg
xor
dec
cmpsl
sahf
add
mov
cwtl
add
adc
mov
rcr
xchg
sar
push
jns
jno
mov
fs
push
push
push
cmp
pop
leave
push
lcall
mov
addr16
icebp
loop
out
fsubrs
loopne
mov
aas
adc
inc
test
cmp
cmpsl
push
out
xor
xchg
mov
jecxz
out
sub
pop
ret
les
stos
notl
stos
jne
out
in
ret
outsl
pop
insl
pop
js
clc
xchg
add
sub
jge
mov
bound
jp
fs
hlt
mov
shlb
outsl
xchg
mov
pop
or
pusha
gs
mov
add
adc
or
xorl
push
sbb
mov
jns
sub
pusha
xchg
cli
sub
lea
scas
mov
xchg
int3
push
add
push
call
cmc
in
out
js
mov
xchg
insl
push
mov
stos
scas
xchg
out
mov
lods
push
loop
pop
ret
jmp
sti
cwtl
dec
adc
lcall
js
orl
arpl
fwait
push
cmp
inc
sbb
cmc
aas
push
jl
cmp
xchg
popf
rcl
jmp
sub
ja
push
dec
cs
pop
in
fdivs
cwtl
push
hlt
push
sbb
dec
rcl
xchg
mov
push
mov
sbb
sti
xor
and
sbb
fninit
andb
lock
sbb
jae
ljmp
movsb
sahf
xchg
in
outsl
or
shl
sub
xchg
adc
prefetch
inc
mov
mov
faddl
jg
int
xchg
jle
adc
pop
adc
lock
insl
mov
xlat
xchg
cmp
sbbb
mov
jg
dec
dec
outsl
dec
mov
xchg
cmc
movsb
mov
enter
inc
xchg
and
sub
gs
int3
mull
addr16
icebp
nop
add
imul
or
fidivrs
inc
mov
aam
cs
and
imulb
add
pop
xor
test
lcall
pop
ret
outsb
aam
mov
pusha
xchg
xchg
fldenv
test
cwtl
enter
in
mov
test
out
xchg
and
mov
mov
mov
notrack
scas
mov
xor
cmp
mov
xchg
dec
or
push
pusha
test
mov
jle
dec
jge
insl
ret
aam
fsubl
lret
rcrl
das
or
adc
jmp
mov
mov
mov
test
sbb
test
jae
jne
xchg
fidivrl
sbb
nop
sbb
dec
add
add
es
adc
or
in
push
aaa
dec
pusha
shr
gs
in
and
xor
mov
and
fidivl
pop
stos
xor
aam
in
jnp
in
imul
movsb
sub
es
xor
jbe
fiaddl
push
sub
ss
or
inc
ljmp
mov
call
mov
dec
cli
jbe
mov
pcmpeqw
sti
stos
sub
pop
cmp
outsb
dec
mov
mov
mov
adc
fwait
aaa
xchg
jmp
push
sbb
adc
push
xor
int
and
mov
gs
mov
dec
jno
cld
or
cmp
std
out
dec
or
add
pushf
push
fistpl
mov
push
cmp
imul
mov
ret
js
rol
pop
push
mov
dec
inc
dec
popf
stos
dec
dec
xchg
xor
mov
lods
and
test
movsl
insl
adc
or
sub
outsl
insl
cld
jg
leave
add
xchg
and
clc
and
adc
shrb
add
push
rcl
movl
orl
inc
ficoms
popf
cmpsb
or
sub
shlb
repz
incb
sub
xchg
mov
adc
movsl
shrb
arpl
loopne
pop
lds
out
mov
lcall
sub
sub
rcll
addl
enterw
lods
pop
fs
sub
popf
popl
icebp
inc
aaa
not
mov
mov
mov
pop
mov
push
cmp
or
xchg
inc
mov
xchg
pusha
pushf
xor
and
pop
decb
loop
mov
fcomp
xchg
loop
jp
int
icebp
pop
xor
sub
jmp
or
cmp
arpl
mov
jl
jl
push
push
daa
out
jp
adc
and
jnp
cmp
repz
fiadds
mov
jle
jle
cmp
jne
cmpl
stc
or
ret
adc
or
xorb
jnp
or
jno
mov
pushf
pop
and
sbb
mov
jns
outsb
fldenv
lds
push
mov
jmp
cmp
and
sbb
jbe
add
cmpsl
xchg
mov
sub
inc
aam
fucomp
cwtl
out
sub
pop
negb
les
in
mov
dec
jns
clc
ret
aad
ffree
outsb
xchg
mov
int
sbbb
insb
into
dec
fcmovu
mov
sub
insb
insl
mov
pop
outsl
call
pop
aad
fistl
xchg
add
insl
lcall
and
enter
insl
out
mov
mov
mov
out
hlt
clc
dec
and
mov
sahf
jbe
ficompl
das
es
das
cs
scas
ja
inc
mov
mov
jo
loopne
repnz
sbb
cli
xlat
sub
jp
gs
stos
mov
jne
adc
sbb
andl
lret
xchg
vcvtps2dq
repz
xchg
mov
lcall
jg
mov
sub
sub
stos
lods
mov
mov
mov
mov
add
lea
mov
xlat
or
mov
push
icebp
fstp
and
insl
hlt
nop
sub
inc
inc
pop
lods
dec
popf
out
dec
dec
rcr
xchg
mov
and
popa
pushf
outsl
js
arpl
sub
into
in
aad
xchg
out
mov
xchg
enter
rorb
sub
pop
enter
bound
aaa
push
mov
dec
test
out
mov
out
and
ret
ss
arpl
imul
testl
lock
icebp
std
cmpsb
in
loopne
push
test
in
xchg
xchg
xor
or
lret
mov
fldl
lcall
lods
divl
roll
in
lcall
push
mov
add
mov
outsb
jecxz
clc
adc
stc
inc
fistps
aad
push
add
mov
xor
xor
cmp
in
sbb
jl
sbb
inc
das
mov
insb
xchg
out
xchg
aad
in
das
ja
test
in
dec
pop
jne
mov
dec
loope
fadd
and
pop
or
pusha
add
jae
imul
jae
lods
imul
xor
sqrtps
or
jns
cld
cmc
clc
jb
popa
push
inc
or
push
sbb
cmp
lods
loop
xchg
pop
mov
popa
test
sahf
fcomi
sahf
dec
inc
push
and
push
inc
adc
xchg
dec
xchg
out
hlt
xlat
cmp
pop
push
js
pop
xchg
fnstcw
cltd
icebp
cmp
or
mov
fisttpll
fbld
fwait
lock
test
into
les
sbb
mov
push
lcall
xchg
sbb
adc
int3
dec
insb
fdivrs
xor
and
cmpsb
xor
leave
scas
pusha
aaa
lds
mov
mov
pop
push
cmp
jae
push
add
xchg
fisubrl
jp
inc
hlt
sub
push
fwait
pushf
add
add
inc
fsubr
pop
dec
fwait
jbe
nop
inc
pop
mov
sub
sub
roll
push
test
ja
dec
pop
sub
cmpsl
popa
xchg
or
inc
push
jmp
test
cmp
out
pop
sahf
mov
fwait
adc
mov
mov
lds
ss
movsl
hlt
out
jge
inc
call
mov
dec
xor
xchg
ret
inc
push
cmp
lret
sub
inc
mov
movsl
iret
sbb
test
push
lods
aad
loope
mov
cmpsb
jle
mov
mov
pop
mov
stc
push
jecxz
pushf
addr16
loopne
je
rolb
jecxz
int3
shr
xor
aaa
je
cmp
mov
inc
ficomps
lds
fiadds
and
mov
push
sub
mov
cmp
push
push
inc
in
popa
jno
cld
adc
and
sarb
adc
outsl
in
pop
movsl
movsb
sbb
es
js
mov
cli
data16
xchg
lret
ljmp
fisubrl
cmp
mov
shll
push
lds
insb
jb
stos
mov
popa
cmp
push
rorb
mov
outsb
sub
fisubrs
test
sbb
scas
dec
pop
incb
push
sub
push
pop
mov
ds
nop
movsl
mov
fldl
daa
cwtl
insb
dec
adc
push
popf
subl
xor
push
ds
mov
shrl
and
rcll
adc
lcall
iret
cmpsl
xorb
or
push
pop
push
push
pop
add
clc
xor
jle,pt
int
and
or
loop
jp
imul
jmp
xor
mov
orb
jecxz
ret
push
mov
lock
push
pop
mov
mov
jmp
popf
aad
js
in
imul
ja
xchg
mov
hlt
sbb
xchg
add
pop
fiadds
mov
push
mov
add
sub
mov
pushf
xlat
add
clc
mov
add
sbb
xchg
ficomps
shrb
scas
out
mov
repz
lock
sbb
notb
pop
add
xor
orb
jp
in
rorl
icebp
push
sbb
and
arpl
push
push
push
xchg
xchg
stos
add
push
jge
inc
out
pop
popf
pop
jnp
pusha
and
out
pop
inc
dec
aam
xchg
js
ret
mov
cmp
daa
mov
nop
popf
imul
add
daa
enter
xor
jno
lods
adc
scas
cli
xchg
fwait
pop
arpl
lret
scas
aad
in
out
add
lcall
cmp
mov
pusha
jle
hlt
sbb
dec
push
outsb
lods
inc
cs
lahf
in
add
movb
les
mov
push
outsl
inc
test
and
test
add
push
bound
cli
ds
jmp
sti
mov
insl
push
test
sub
fucomi
sarl
insb
leave
repnz
dec
addl
xor
xchg
subl
in
push
mov
lret
sbb
jl
insl
pop
scas
icebp
and
xchg
mov
iret
add
pop
jno
into
dec
sbb
push
mov
scas
mov
jne
hlt
pop
rcrb
dec
sbb
mov
add
out
sbb
xorb
fs
lahf
jp
enter
mov
jns
sbb
popa
pushfw
hlt
adc
xor
lea
jns
ret
push
and
insb
mov
aas
movsl
mov
fucomi
jno
or
pop
adc
das
fildl
std
pop
iret
adc
pop
jae
xor
stc
mov
lea
in
cli
sbb
cmp
lahf
pusha
sub
mov
sbb
in
jge
in
testb
sbb
sub
js
mov
in
ja
pop
cld
jmp
scas
fiaddl
inc
or
mov
add
leave
jp
int3
iret
pusha
gs
dec
cwtl
cltd
inc
filds
mov
loopne
pop
cmp
add
in
cld
push
loop
mov
fsubs
inc
xchg
andb
push
adc
cmpsb
adc
cmpsb
dec
mov
dec
adc
cmc
mov
lea
pop
cmpsb
xor
movsb
jb
cltd
lods
jo
sbb
add
sub
nop
es
lahf
xchg
pop
fildl
es
xor
jmp
data16
jb
jmp
lret
lods
mov
sub
inc
lods
in
lods
push
lock
jne
sbb
subl
inc
rcll
mov
xlat
out
fwait
inc
arpl
adc
pop
and
dec
or
xchg
xchg
jp
aas
out
outsl
mov
push
lods
out
pop
sub
arpl
or
cmc
aad
rcrl
adc
loope
popa
jecxz
inc
dec
xor
insb
jno
testb
mov
lahf
out
cmp
push
movsb
mov
pop
adc
adc
cmp
insl
rorl
add
xchg
cltd
cmp
jb
mov
pop
adc
fdivl
out
mov
pop
data16
sbb
lret
ror
mov
orb
mov
mov
std
jle
ret
mov
mov
jae
into
fidivs
call
movsl
inc
pop
sbb
mov
lock
lret
or
xor
adc
fs
sub
mov
inc
mov
fs
xchg
cmp
mov
js
nop
out
sub
test
mov
dec
sub
loope
in
loope
call
je
push
es
sbb
shll
lret
ss
pop
inc
xor
call
mov
jne
aad
outsl
les
mov
add
inc
cld
ja
aas
pop
jae
clc
or
cltd
std
enter
jo
and
popa
xorl
push
loop
pop
pop
mov
movb
inc
cmp
outsl
cmc
adc
pop
arpl
mov
out
ret
mov
aas
cmpsl
fildl
xor
int
sub
mov
popf
fiadds
bound
sbb
shll
inc
xchg
jno,pn
sbb
jle
jg
cmp
xchg
sub
lret
and
lahf
inc
jecxz
pop
stc
xchg
push
fwait
test
add
repz
sbb
inc
mov
scas
push
xchg
adc
dec
pop
mov
sbb
mov
loope
inc
test
inc
int
hlt
mov
mov
loope
sbb
mov
xor
xchg
xchg
and
ss
mov
insb
dec
dec
pop
pavgb
test
lock
scas
shrl
out
add
cld
leave
xlat
xor
fcompl
sbb
ds
jg
inc
inc
leave
dec
movsl
inc
pushfw
jmp
mov
sub
sub
fwait
in
add
sub
subb
je
inc
jmp
dec
mov
and
aad
add
xchg
sarb
push
mov
or
and
repz
test
add
sub
dec
mov
and
jecxz
sbb
idivl
sub
fnstcw
cld
addr16
or
bound
push
xchg
aad
lahf
xchg
dec
mov
cmc
lahf
push
xchg
in
jo
lret
xchg
jge
pop
call
add
mov
pop
lods
popa
aam
or
lea
jle
xor
lds
inc
adc
mov
xor
sbb
jnp
jmp
pop
loopne
shrb
push
fs
test
fstl
pusha
outsb
pop
adc
js
cmpsb
lock
fs
dec
xchg
sahf
fs
ret
inc
or
or
sub
out
xor
mov
adc
xor
add
imul
ret
adc
les
pusha
mov
pusha
loope
popa
sub
cmpsl
arpl
sbb
adc
or
out
imul
mov
test
mov
lahf
insl
sbb
dec
outsb
push
and
imul
or
inc
inc
lds
shll
jp
insb
xchg
movsb
sub
inc
sbb
dec
fisttpl
cmp
push
popf
es
sbb
pusha
jns
aaa
jmp
scas
fldenv
pushf
rcrl
jl
cmp
data16
cmp
cmc
pop
jns
mov
lea
iret
jecxz
js
sbb
xchg
icebp
ret
xchg
dec
out
mov
int3
loope
mov
aam
jns
int3
cmp
cmc
push
sbb
arpl
mov
gs
xchg
xchg
fstpt
xor
jg
cmp
fxam
jmp
fsubr
sbb
sbb
sbb
adc
jae
fwait
shrl
jns
out
dec
fidivrs
cmpsb
mov
shll
and
rolb
stos
js
adc
push
pusha
jo
push
loopne
out
es
fs
jb
pop
pop
xchg
popf
mov
in
sub
xor
and
or
or
repnz
adcb
xor
aas
fidivs
jle
and
mov
in
and
repz
paddusb
pop
push
and
hlt
or
and
adc
or
cmp
test
repnz
lahf
dec
push
xor
sbb
adc
cwtl
mov
push
push
jne
cmp
test
bound
aam
or
dec
cmpsl
push
or
pushf
jl
jmp
sbb
pop
adc
adc
add
lods
aas
aam
mov
inc
lret
dec
pop
xchg
push
ficoml
adc
push
in
rcr
jne
ret
mov
ret
rcll
cmp
adc
in
mov
lret
ss
sar
ljmp
mov
sub
loope
jbe
movsl
scas
aad
cltd
push
xlat
cli
or
fwait
inc
jb
push
out
jns
jge
cmp
cmp
cmc
xchg
xor
sub
aaa
or
fdivr
cmp
imul
jae
test
cmp
sub
clc
cmpsl
sti
lret
repnz
incl
mov
mov
push
mov
inc
sarl
enter
in
xorl
dec
arpl
cmpsb
jbe
lahf
rclb
fwait
das
push
xchg
mov
cs
sbb
test
push
xchg
xor
fdivrp
inc
pop
or
xor
repnz
lahf
stos
xor
mov
int
lret
fnsave
pop
cli
adc
arpl
test
mov
idivb
jne
pop
or
int3
not
fmull
mov
sub
cltd
ret
popf
data16
push
sub
cmpsb
xchg
in
push
mov
outsl
sub
repz
jnp
movsb
mov
lea
sub
lcall
les
sbb
pop
cmp
jbe
pop
pop
ljmp
std
les
negb
mov
adc
scas
inc
inc
xchg
bound
add
add
faddp
mov
cmp
xor
imul
xor
cmp
mov
mov
pop
jl
cmp
lahf
hlt
jb
inc
and
hlt
xchg
into
je
out
jae
dec
sbb
dec
or
fistpll
sub
inc
adc
jmp
push
addl
or
mov
shlb
sahf
ds
and
mov
inc
sub
push
rclb
dec
aaa
inc
cmc
aad
test
mov
sbb
push
xor
push
test
mov
aad
repz
scas
jo
shlb
outsb
aam
cmp
lahf
inc
stos
ja
sbb
or
insl
cmp
leave
mov
out
fs
inc
cli
imul
xor
push
adc
mov
inc
inc
xlat
dec
nop
test
mov
sahf
mov
std
idivl
sbb
or
jnp
orb
imul
adc
cmp
nop
in
int
jl
arpl
adc
dec
jecxz
add
mov
bound
decl
dec
pop
test
sbb
and
and
or
add
movsb
faddp
dec
mov
adc
ds
jge
insb
outsb
lea
bound
mov
scas
xor
dec
mov
ljmp
movsb
movsl
xchg
rolb
repnz
xchg
xacquire
jp,pt
pushf
leave
in
dec
jmp
test
lret
sub
jmp
adc
and
mov
test
shlb
mov
jno
arpl
call
loopne
pusha
mov
or
lods
ret
push
jae
mov
adc
ja
outsl
pushf
mov
js
adc
cmp
jb
lock
stos
xchg
push
les
push
push
shrb
add
dec
and
pop
dec
inc
ja
xchg
in
jge
push
daa
mov
ss
pop
fcompl
push
psubsw
cmpsb
sub
mov
into
ret
mov
rcrl
lods
lahf
in
pop
sbb
or
je
aam
je
or
cmpsb
cmp
dec
lea
cmpsb
adc
test
shrb
shl
lods
xchg
mov
das
orb
test
icebp
sub
cmp
rclb
clc
xchg
enter
loopne
sbb
repnz
cmpsb
or
test
or
jl
mov
adc
push
enter
xor
mov
out
ret
arpl
mov
or
inc
lcall
icebp
int
add
add
hlt
fdivrs
lahf
or
movsl
loop
pushf
adcb
neg
and
repnz
jl
clc
loope
inc
ss
ljmp
mov
add
sti
cmc
data16
inc
popf
mov
jbe
nop
lahf
or
out
mov
das
sbb
add
lock
mov
in
mov
fbld
or
inc
sbbl
adc
std
xchg
add
pop
mov
or
jno
cmp
dec
cld
nop
ror
mov
mov
loope
scas
jno
jecxz
cwtl
mov
fdiv
pop
jae
nop
xchg
mov
nop
int3
jne
xor
test
rcr
cld
dec
fnclex
ret
pushf
add
mov
sub
rcrb
bound
popf
sbb
mov
or
std
lods
sarl
cmp
xchg
push
shll
movsl
ljmp
pop
insb
push
jmp
imul
lods
fnsave
cmp
outsb
jg
dec
ljmp
cmc
js
mov
pusha
jge
and
iret
add
psadbw
mov
mov
xor
xchg
fbstp
xchg
outsb
in
jge
lods
in
xchg
loope
mov
pushl
add
pop
sub
xor
and
test
inc
dec
pushl
xchg
push
cmc
pop
adc
pop
sahf
jne
push
xorb
xor
xor
pushf
push
gs
fwait
add
aad
lcall
xchg
inc
pop
ja
xor
jmp
filds
out
push
clc
adc
xchg
out
or
cmc
xor
pop
mov
xor
and
int3
sbb
call
int
mov
cmp
das
xchg
test
mov
or
add
and
scas
mov
mov
mov
push
out
lret
pop
or
lds
jp
xor
out
dec
ret
pop
inc
adc
xor
scas
aaa
hlt
and
sbb
jecxz
pop
lahf
pop
insl
clc
aam
in
stos
or
jmp
jle
jecxz
fbld
fisttps
stos
dec
cmpb
lock
sbb
ss
xchg
subb
adc
rcrl
addr16
rcrb
out
cmp
mov
mov
adc
mulb
outsl
dec
sbb
push
mov
sbb
sbb
loope
fcomps
repnz
adc
fisttpll
repz
ljmp
mov
xor
dec
sahf
rcr
ret
insl
movsb
test
loop
jns
clc
popa
sti
mov
mov
out
das
xabort
ret
xchg
add
fistps
mov
mov
mov
inc
pop
mov
xchg
pop
loopne
xchg
and
cltd
dec
inc
out
lods
clc
sub
xor
les
stos
repnz
loopne
push
inc
push
mov
sahf
pop
sahf
xlat
add
outsb
int
fs
divl
lret
sub
push
or
fcoml
push
lock
jp
pop
lds
outsl
popa
mov
mov
sti
cs
jp
pop
ret
push
and
das
inc
mov
shll
andb
inc
pop
mov
inc
cs
repz
xor
fnstcw
and
shlb
cli
mov
dec
jg
xchg
mov
jge
leave
mov
js
dec
ljmp
cs
jbe
sbb
mov
int3
inc
mov
popf
sbb
popf
xchg
imul
mov
aam
push
jecxz
pop
mov
call
call
adc
push
xchg
jle
mov
popa
es
addr16
dec
xchg
or
ds
xchg
frstor
dec
nop
rcrb
sub
fidivs
xchg
ss
sarb
add
icebp
adc
cmp
and
ret
aas
cmpsl
or
add
loop
in
fs
add
arpl
js
and
adc
mov
pop
pop
movsb
push
into
add
jnp
mov
sub
xor
sarl
mov
jecxz
aaa
ret
dec
inc
or
jnp
aas
insb
jbe
orl
mov
ss
pop
dec
xchg
xor
cld
or
fildl
add
imul
test
cli
mov
fwait
inc
push
repnz
int3
imul
mov
arpl
and
repz
cmp
mov
scas
fsubrl
rcrl
mov
or
push
inc
daa
movsl
das
sub
xchg
pusha
jecxz
adc
dec
lahf
ljmp
js
mov
outsl
movsl
aas
and
movsb
mov
ret
shl
imul
fdivrp
xorl
cld
cld
and
pushf
psllq
imul
push
scas
addr16
nop
loopne
or
xor
dec
in
push
inc
xchg
mov
int3
xor
shll
xor
lret
pop
sub
enter
into
ret
rclb
sub
mov
inc
cmpb
aad
jle
data16
sbb
dec
outsl
cltd
mov
xchg
mov
in
and
ss
mov
out
into
cmp
insl
jmp
push
cmp
push
fstp
or
push
aad
aas
push
cmpsb
rorl
pop
popf
jnp
js
cmp
in
and
mov
mov
movsb
cwtl
xchg
dec
inc
mov
ficoml
xchg
cmpsb
popa
pop
push
mov
js
xlat
loop
adc
in
lret
syscall
adc
xchg
int3
sub
mov
dec
sbb
das
lret
jbe
push
and
das
jbe
decl
rcrl
mov
jmp
call
adc
lahf
jns
adc
mov
or
iret
jns
inc
mov
fidivs
call
nop
jmp
mov
and
test
js
add
icebp
sbb
xchg
inc
push
push
mull
lods
testl
lods
pop
push
cmp
cmp
adc
das
lods
push
out
outsb
daa
sbb
gs
ret
mov
push
push
in
ja
hlt
and
sahf
or
mov
cmpsb
push
jo
loop
inc
scas
xchg
addr16
or
inc
mov
sub
push
xchg
daa
dec
jb
cmpsb
and
fidivrs
and
mov
add
lahf
int3
cmp
sub
call
dec
sub
sub
xchg
lahf
stos
scas
testl
fs
pop
push
ljmp
mov
mov
cmp
in
in
jl
adcb
mov
in
jbe
stc
mov
mov
pop
jecxz
sub
mov
sub
jl
sbb
js
mov
daa
xchg
push
in
repz
or
sbb
aaa
lock
inc
push
sbb
inc
std
shrb
aas
adcl
fstpl
dec
into
push
push
jmp
icebp
not
pop
scas
cmpps
hlt
cmp
inc
dec
insb
pusha
in
es
sti
mov
das
sahf
movsb
adc
hlt
cmp
ss
mov
push
push
aad
or
and
flds
test
cld
dec
mov
or
cwtl
popa
fdivrp
loope
arpl
cmp
push
fnstenv
adc
jmp
jmp
enter
in
aad
subl
cmpsl
push
ror
inc
lea
repnz
loopne
sbb
rcl
cmp
lods
data16
pop
fmuls
and
ret
xchg
lea
es
jns
out
inc
jge
lret
jae
outsb
lcall
cmp
mov
bound
enter
sub
sbb
test
movsb
or
repz
imul
mov
ficoms
mov
jge
cltd
imul
scas
sub
mov
inc
dec
push
fwait
cmc
nop
scas
xchg
aas
or
mov
lret
pop
mov
fs
repz
cld
arpl
push
aam
ret
jno
test
dec
xchg
and
cmp
out
jmp
xchg
jae
adc
mov
pop
jne
xchg
jp
mov
ret
pop
mov
daa
or
push
adc
xorl
jno
scas
cmc
call
fs
sub
push
int3
mov
push
xchg
mov
insl
adc
aad
fdiv
aas
gs
shlb
xor
inc
push
int3
leave
push
shrb
cmp
out
sub
add
jns
pop
les
xchg
xor
insl
xor
jp
stos
push
mov
int
and
scas
add
sahf
inc
and
ds
push
jg
aad
aas
rcpps
test
adc
fldenv
test
cmp
mov
push
jno
cmp
xor
add
or
jnp
popf
jbe
daa
mov
adc
cs
fsubp
rorl
repnz
sarl
inc
jb
cli
rorb
push
stos
int3
pop
push
in
mov
inc
sti
inc
out
adc
mov
add
stos
fs
xor
jmp
js
and
out
ss
add
mov
lahf
fwait
pop
jge
mov
mov
mov
shlw
pop
enter
dec
add
cmp
divb
lods
test
push
sbb
push
bound
xorl
ss
into
or
nop
sub
pop
xor
filds
push
addr16
jno
bound
std
sti
repz
mov
pop
xlat
push
fwait
cmp
ja
add
mov
cld
roll
aad
jle
je
lcall
in
js
in
push
xchg
movsl
cmp
add
mov
cld
aam
add
rorb
add
ss
iret
jmp
out
sub
loop
imul
mov
out
out
rcrl
xor
sub
push
insl
scas
push
cmp
pushf
aam
lret
push
bound
repnz
jmp
lds
loope
push
inc
int
les
fisttpl
push
mov
xchg
add
jle
and
xorb
shlb
mov
sarb
inc
ret
lret
lea
pop
stos
sti
pop
cmp
ret
cmpsl
push
in
sbb
cmc
or
sti
cmp
and
cli
in
loop
push
pop
fimull
xchg
add
sub
and
xchg
mov
repnz
mov
cltd
out
fstpl
filds
int
mov
sbb
and
add
imul
data16
adc
adc
jno
popf
xchg
stos
adc
outsb
int
mov
jg
add
xchg
mov
stc
xor
cld
adc
or
ret
mov
in
and
notb
jbe
mov
mov
dec
leave
adc
cmp
mov
pop
jae
fcoms
loop
out
shlb
leave
ja
ljmp
roll
je
lods
mov
les
mov
add
dec
stos
ret
cld
in
fnstsw
xchg
in
and
push
aad
dec
and
jne
adc
hlt
insb
test
pop
insb
call
mov
and
mov
rolb
sbb
pop
mov
xchg
fdivs
cs
dec
in
pop
or
scas
hlt
outsb
push
and
addb
rclb
sbb
mov
es
enter
arpl
mov
adc
shlb
aad
gs
cmpsl
jbe
and
mov
and
xor
test
jmp
aad
iret
aaa
push
push
fnsave
movsb
popa
xor
aas
mov
jne
adc
add
pop
ja
xor
and
sub
std
outsl
jno
push
fucom
inc
shlb
psubusb
lock
fmuls
mulb
lret
cmp
es
ret
push
enter
negb
mov
stos
cmp
xchg
mov
fisubrs
xor
outsb
sub
jnp
pop
mov
out
stc
sbb
push
hlt
pop
xchg
mov
mov
je
pop
lock
enter
cmc
inc
jge
icebp
test
adc
inc
arpl
push
push
mov
cmp
int
and
mov
jmp
and
sub
test
repz
jle
aad
ds
neg
out
and
fldcw
or
sbb
cld
jne
pop
dec
into
pusha
jl
lahf
jnp
mov
mov
and
mov
mov
pop
mov
cltd
xchg
es
mov
pop
lods
rclb
cmc
or
shlb
inc
sub
jge
scas
pusha
out
push
insl
pop
cmp
fstpt
loope
aad
sub
cmpsb
jno
sbb
mov
nop
lea
pop
jne
inc
popa
pop
in
add
jge
push
lods
mov
clc
stc
ficoms
clc
fmull
outsl
lret
sub
frstor
out
dec
lock
mov
fsubrp
in
fsubrl
xor
outsb
push
repz
aas
mov
popf
aam
hlt
shrl
mov
or
cli
mov
iret
dec
mov
xor
lock
xchg
movsb
or
cmpsl
stos
push
xor
filds
outsl
adc
fists
lods
jl
mov
shl
popa
scas
imul
mov
popf
and
pop
repz
das
adc
adc
mov
aam
into
pop
mov
nop
xor
xor
pop
and
inc
icebp
pop
push
or
push
add
push
dec
push
inc
lcall
xor
xchg
xor
movl
sub
pop
pop
lds
sub
xor
and
xlat
popf
push
pop
fldt
mov
incb
call
lea
add
lahf
pop
lret
cltd
cli
jecxz
xor
pop
push
ret
stc
cli
aam
adc
jne
shll
insb
xchg
push
mov
arpl
lahf
shlb
mov
cs
mov
lds
pop
mov
ret
das
add
mov
xlat
data16
lods
loop
push
or
mov
outsb
or
xorl
xchg
push
fwait
js
or
inc
mov
insb
mov
mov
dec
fs
data16
mov
sub
mov
or
xchg
imul
imul
shlb
inc
pop
lahf
repnz
dec
cwtl
cwtl
push
jle
fistpl
pop
mov
repz
data16
sbb
jg
push
mov
lea
sub
enter
cld
call
pop
out
inc
cmp
dec
ss
push
and
inc
xor
paddq
es
mov
jmp
iret
cmpsl
dec
push
mov
adc
jb,pn
push
and
clc
sub
adc
jg
mov
stc
add
test
loop
or
out
add
push
or
sarl
cmp
or
mov
cmpl
add
cmp
mov
mov
xchg
test
or
push
cld
mov
cltd
fistpl
push
outsl
fwait
xorl
pop
sub
clc
inc
inc
shrb
sub
jmp
movsl
mov
dec
cmp
mov
cmpsl
adc
fwait
outsl
fistpl
mov
mov
popa
scas
in
jns
pusha
and
xchg
push
scas
dec
xchg
mov
xor
ss
std
imul
sub
jecxz
push
fisubrl
xchg
out
ja
jl
movsb
stos
cmp
lods
out
dec
mov
xor
push
fildl
call
xchg
lret
adc
mov
std
or
fnstcw
cmp
popa
inc
push
insl
jecxz
cmp
pop
cmp
clc
mov
ljmp
dec
xorl
orb
sub
dec
test
dec
fcompl
dec
stos
sahf
or
inc
mov
test
pop
mov
int
outsl
sub
dec
inc
ds
jp
fists
out
stos
cwtl
inc
cli
push
xchg
xor
push
push
lret
mov
cltd
cmp
inc
sub
enter
das
rol
mov
les
xor
pop
jbe
mov
sbb
std
ret
dec
rcrb
pop
xchg
adc
push
mov
insl
dec
add
jmp
cmp
test
sbb
sub
pop
jl
pop
mov
or
shll
aad
sub
mov
rcl
in
lcall
xchg
push
ljmp
cmp
push
mov
orb
jb
mov
dec
push
cmpb
leave
pop
pop
sbb
movsl
pusha
xchg
xchg
int
popa
insl
lcall
push
pop
mov
rorl
mov
gs
lret
incl
sub
in
js
adc
out
push
shll
push
inc
loope
les
xchg
test
xchg
loopne
mov
mov
jl
adc
push
loopne
sbbb
dec
movsl
add
rorb
jne
stc
jne
inc
dec
mov
and
sub
test
push
inc
jle
cwtl
inc
fs
addb
xchg
mov
ljmpw
and
jae
adc
cmp
sub
jo
enter
insl
mov
testb
pop
loop
rorl
mov
sti
pop
cmp
pop
mov
jle
cmp
int
xchg
xchg
jo
xchg
cmp
loopne
int3
mov
sub
cmpsl
xchg
mov
loopne
jmp
ret
xor
and
sti
push
arpl
scas
imulb
mov
cmpsb
adc
sub
and
shll
fcomip
jle
std
jno
fdivrs
fs
mov
inc
adc
fs
popa
inc
jecxz
repnz
mov
daa
repnz
icebp
or
jp
cld
inc
jb
sahf
outsb
mov
push
addr16
pop
jne
pop
dec
adc
lods
push
sti
mov
dec
data16
sub
movb
enter
insb
lret
xor
cmpb
jge
mov
out
sub
incl
sbb
jno
imulb
push
mov
cs
pop
add
fdivrs
and
push
sbb
or
push
leave
xchg
repz
cld
inc
out
add
mov
jne
loop
fld
sbb
outsb
sar
cmp
xlat
jno
xchg
mov
jmp
mov
lret
and
jae
pop
ja
sub
adc
push
sahf
dec
mov
int3
mov
pop
xchg
push
sbb
es
enter
cltd
xchg
lock
or
hlt
mov
jnp
sbb
rcll
jl
pop
pop
jb
mov
jecxz
ret
loopne
jmp
shl
sub
dec
sbb
sub
jnp
test
addb
or
jg
sbb
push
pop
into
jnp
xchg
xchg
jl
out
mov
js
negl
hlt
out
pop
adc
cmp
pop
ljmp
mov
cmp
subl
mov
sbb
sbb
inc
push
mov
rclb
jecxz
clc
pop
mov
inc
cmc
and
stc
pop
loope
movl
js
int3
aam
jp
pop
lret
fwait
popl
sbb
jbe
into
xchg
loop
inc
in
fstpt
and
lea
mov
xchg
mov
sub
xor
xchg
push
jo
xchg
insb
sbb
int3
cwtl
cs
dec
cwtl
add
mov
cli
push
test
mov
pop
and
fimuls
dec
push
jae
je
sbb
int3
adc
sbb
sbb
jle
cld
ret
cmp
xchg
xchg
out
pinsrw
xor
outsb
xchg
mov
popf
xor
fsubs
cmp
jecxz
sbb
xor
and
mov
sub
dec
or
rcrl
imul
imul
mov
mov
xor
sbb
mov
jecxz
in
mov
or
dec
push
clc
mov
fldl
adc
ja
push
push
inc
mov
loop
lods
mov
pop
loopne
xchg
in
or
je
add
inc
adc
lods
clc
and
mov
lds
push
ficoml
rorb
pop
and
sbb
cld
mov
sahf
and
cmp
or
and
mov
sub
mov
sub
xor
stos
cmp
add
dec
scas
test
sbb
push
notb
add
xorl
jmp
lcall
dec
sbb
jae
xchg
adc
cs
mov
outsb
inc
aad
cmp
ficomps
dec
xor
lock
jg
xchg
cs
lods
imul
add
push
cltd
cmc
xor
je
xchg
movsb
dec
jae
cmp
leave
push
dec
xchg
repz
cmp
jns
sbb
lods
push
pop
mov
mov
add
cwtl
inc
rcrl
imul
xlat
push
in
mov
xchg
stos
inc
int
push
cmp
mov
inc
out
movb
aaa
sub
loope
and
mov
xchg
fcmovne
mull
adc
mov
movsb
bound
dec
pop
into
or
and
sub
testl
pop
fidivrs
addr16
repz
sarl
add
aaa
xchg
pop
jae
nop
shlb
fldcw
xor
aam
sarl
mov
push
xor
addr16
inc
cmc
or
jecxz
mov
iret
push
inc
mov
pop
xor
outsb
into
cmc
bound
dec
mov
push
loope
pop
rorl
or
jb
pop
sahf
lcall
in
inc
push
mov
xchg
aas
out
jb
int
xchg
testb
pop
mov
mov
and
out
cs
push
stos
aam
and
mov
shll
mov
jge
fstpt
bound
push
fisubrl
iret
imul
add
and
xor
xchg
loope
mov
lods
fidivs
inc
or
addr16
out
in
pop
cmp
jge
mov
imul
daa
jl
test
mulb
mov
pop
or
cs
inc
scas
loope
add
inc
adc
popa
mov
das
jmp
cmp
sub
cltd
fsub
cmp
fadds
loop
add
aaa
mov
lds
push
t1mskc
xor
pusha
cmp
dec
push
lret
sub
fisubs
mov
jnp
or
cmpsl
cmp
cwtl
mov
mov
mov
insb
mov
fadds
xor
outsl
jmp
cld
mov
adc
and
popf
or
sub
mov
push
adc
inc
dec
ret
lods
jmp
in
or
dec
stos
push
adc
sub
hlt
mov
movsb
xchg
jb
mov
adc
inc
adc
int
scas
imul
sub
jb
int
ja
clc
in
loop
pop
and
add
pop
pop
aas
cmc
adc
or
sub
adc
fiadds
add
jl
xor
xchg
test
xor
jnp
test
pushf
or
mov
js
subb
out
mov
addl
test
ret
push
xchg
nop
outsb
pushf
imul
jl
sbb
shrl
mov
cmpsl
pop
inc
add
add
jg
pop
cmpsl
lods
and
mov
lds
mov
inc
inc
lcall
mov
sbb
jns
pop
mov
lret
inc
xchg
ds
jge
mov
push
mov
in
xor
or
cld
stos
jp
mov
imul
jecxz
xchg
pop
mov
enter
dec
addl
mov
js
cli
jl
sbbl
test
add
hlt
and
sub
and
mov
inc
movsb
dec
and
leave
jle
and
jnp
and
dec
sti
out
test
xchg
pop
into
or
mov
out
cmpsl
dec
cmpsl
sbb
insb
stos
testl
and
into
sbb
stos
dec
xlat
scas
fdivrs
jnp
mov
insl
sub
inc
push
mov
pop
mov
testl
sbb
mov
xlat
dec
or
ret
mov
clc
xor
jp
xor
dec
mov
sub
in
cli
mov
dec
out
test
movsb
hlt
xlat
sti
fldenv
imul
out
shlb
out
push
add
out
arpl
loope
mov
cmp
cmp
jle
adc
mov
mov
gs
pop
mov
dec
in
dec
dec
adc
test
pop
pusha
add
inc
arpl
fdivrs
rorb
inc
jns
lea
sbb
orl
into
sti
aam
pushf
rep
mov
adc
xchg
sub
daa
push
and
outsl
filds
negl
aad
fidivrs
push
icebp
adc
in
inc
fnstenv
mov
push
cmp
sub
xlat
xchg
mov
shll
pop
jb
cmpsb
rol
jo
mov
daa
nop
sti
adc
add
rol
mov
jo
rolb
xor
jl
jecxz
add
ds
test
xlat
fwait
out
or
xchg
repnz
repnz
inc
ss
sbbb
pushf
rorb
sub
dec
ljmp
xchg
pop
lods
ljmp
sbb
stos
ljmp
nop
mov
mov
mov
xor
adc
cmp
inc
data16
pusha
pop
dec
inc
aas
and
test
repnz
push
loope
or
or
push
xlat
xchg
out
loop
lods
sti
loopne
jp
pushf
jb
mov
adc
pop
xchg
test
lahf
pop
mov
daa
repz
jo
fldenv
push
mov
sub
dec
fnsave
jmp
xor
ja
jl
dec
ret
add
sbb
and
shrl
mov
jne
sbb
xchg
std
pop
xchg
pop
insl
popa
fs
clc
test
js
idiv
xchg
imul
in
movsl
sub
addr16
pop
aad
xchg
mov
push
xlat
mov
sub
push
push
rsm
jecxz
xor
lahf
mov
lret
stos
rcrl
adc
aad
xchg
int3
dec
leave
mov
push
pushf
lret
push
les
xchg
mov
aad
cmpsl
stos
adc
add
jo
pop
sub
or
mov
rcll
sub
mov
adc
inc
or
int3
popa
mov
sbb
xor
adc
into
jecxz
out
push
ret
shrl
and
sti
rcrb
fcomps
pop
cmp
cmc
jge
push
dec
xor
ljmp
jb
jmp
inc
push
loope
cli
fcompl
addl
mov
mov
jle
mov
clc
mov
movsl
dec
fs
jb
jp
out
mov
inc
pusha
popl
sbb
add
es
adc
sub
jbe
pusha
push
addr16
or
push
into
xor
incb
sbb
mov
inc
jge
out
jge
daa
fisttps
and
inc
or
mov
and
popa
jae
xchg
popl
test
sub
fidivs
out
jae
mov
fs
mov
bound
orb
sub
jb
int3
aaa
ret
mov
arpl
add
xor
movsl
sbb
xchg
dec
imul
dec
add
roll
fwait
movsb
frstor
mov
sub
arpl
dec
fsubl
push
cmpsb
int3
daa
js
fcompl
test
inc
xchg
out
and
fwait
dec
jle
cltd
ficoms
cltd
push
jle
rcll
push
in
push
xchg
dec
out
fnsave
daa
insl
scas
dec
jmp
or
jmp
mov
xchg
out
mov
inc
cmc
xchg
pop
fnstcw
cld
push
jl
insb
repnz
outsb
cmp
aas
dec
pop
out
insb
popf
test
mov
fsubrl
or
out
sub
dec
mov
mov
fdivs
sarl
das
ja
xor
hlt
inc
sbbl
xchg
lea
pop
inc
addr16
pusha
incl
shlb
jl
mov
mov
push
lret
lods
dec
sahf
fwait
mov
out
sbb
jge
dec
aam
xchg
mov
inc
lcall
mov
xchg
add
inc
jp
test
cld
scas
sbb
mov
cmp
ret
int
sarl
jle
roll
adc
fildll
dec
fwait
jnp
and
imul
jae
cmp
xchg
outsl
mov
pop
mov
aaa
cmp
stos
fmull
sub
addr16
and
sarb
cwtl
mov
ret
add
cltd
add
mov
pusha
push
pop
inc
jne
es
xchg
cmp
mov
inc
mov
rcrl
xor
inc
leave
xchg
mov
ret
inc
sahf
push
cmp
cltd
and
xchg
mov
xchg
pop
xor
add
and
jge
mov
mov
inc
ficompl
fnstcw
inc
jmp
inc
out
fwait
cmp
jnp
adc
enter
sbb
aas
shrb
xor
es
mov
pop
in
and
inc
dec
mov
mov
insl
inc
jbe
mov
jne
je
jb
xlat
push
jp
enter
pop
pop
loopne
adcb
bound
cli
fldl
jb
xchg
mov
xor
adc
xor
jbe
sub
int3
std
sub
jnp
dec
and
xor
pop
add
pop
mov
bound
jl
fstps
pusha
ret
shlb
adc
sbb
in
mov
mov
aad
imul
sub
xor
in
jle
imul
or
lret
test
xor
cltd
ds
cmc
out
stos
popf
and
push
and
xchg
dec
cwtl
rclb
lds
loope
movsb
xor
or
add
mov
mov
pop
loope
loope
shll
sub
loopne
cmp
mov
mov
dec
outsl
mov
ja
test
stos
mov
jle
loopne
insl
push
js
push
enter
fdivr
sbb
pushf
imul
lds
pushf
inc
mov
sar
mov
cld
inc
xlat
inc
gs
xor
stos
repnz
jmp
cmpsb
fstpt
subl
inc
daa
stos
mov
xchg
push
movsb
xor
xor
push
push
xchg
jbe
push
ljmp
enter
into
fldenv
lahf
cmpl
sbb
mov
dec
mov
std
or
out
add
sub
shrl
inc
movsb
dec
dec
cmp
lock
dec
mov
pop
cmp
ljmp
mov
jae
ret
pop
jae
cmp
cld
cmp
dec
mov
or
mov
sti
subb
inc
test
test
jns
subl
inc
dec
iret
fists
cmpsl
dec
mov
jae
inc
cs
cmp
xchg
pop
jne
mov
shlb
sbb
adc
ficoml
lcall
jb
push
jae
mov
add
imul
daa
sub
jb
sub
xor
jmp
test
clc
xor
loopne
stos
sub
sbb
mov
and
mov
mov
loop
or
sbb
aad
fimuls
push
icebp
int
iret
cmp
mov
and
std
dec
mov
faddl
out
clc
mov
lea
inc
add
xchg
pushf
dec
call
sbb
mov
pusha
pop
mov
pop
cmp
mov
in
shl
lods
mov
outsl
xor
dec
inc
divb
dec
sub
adc
insl
jge
in
mov
xchg
pop
je
pushf
sahf
mov
in
jp
push
insb
roll
rep
mov
xor
jmp
pop
hlt
mov
enter
subb
mov
stos
addr16
push
dec
mov
jns
xor
iret
bound
fucomp
cmpsl
sar
std
mov
sub
pop
dec
pop
push
test
pop
jb
outsl
mov
add
and
out
xchg
movsl
maskmovq
inc
or
adc
and
mov
cmp
push
pop
lcall
into
test
ss
and
mov
xchg
pop
or
les
test
add
loop
cmpb
add
divl
insl
popf
cmp
xor
or
int
adc
and
test
imul
fsubs
sub
or
push
xlat
repnz
push
push
xor
dec
out
inc
and
jb
or
inc
jo
jnp
push
cmp
xlat
popf
xor
push
scas
mov
aad
add
push
lahf
xlat
repnz
int3
fisttps
jo
xchg
rorb
and
out
sub
jmp
test
clc
out
push
aad
push
mov
xor
jno
mov
pop
cmp
mov
xchg
roll
out
adc
movsb
enter
cli
sti
xchg
shrb
and
out
ret
cmp
adc
pushf
data16
shrb
mov
sbb
ljmp
test
lea
push
int
xchg
das
lret
loope
shl
stos
shlb
data16
cmp
xchg
sbb
fisttpl
cmp
movsb
fsubrl
ficomps
inc
jnp
jecxz
cmp
mov
roll
inc
mov
lds
or
test
mov
cmpb
aas
dec
xor
loope
lds
mov
sarb
fcoml
les
mov
loop
xor
loopne
sub
jle
hlt
dec
xchg
arpl
aad
jns
es
push
mov
mov
or
mov
icebp
push
rclb
inc
push
xor
or
or
pop
ljmp
sub
jnp
pop
divl
mov
dec
push
out
sbb
lret
mov
push
testl
iret
xchg
or
incl
mov
ja
inc
lea
xchg
pop
ret
bound
std
jge
outsl
cltd
pop
jmp
and
jge
sbb
mov
jmp
add
jl
push
xor
incl
fidivrl
mov
mov
loope
jge
out
cmp
inc
pop
clc
jecxz
cwtl
popf
loope
mov
sbb
push
lcall
cmp
push
push
mov
mov
out
cmp
xchg
lods
je
cmp
andl
imul
lret
cmc
mov
je
lock
lods
xor
add
cmp
dec
jmp
test
imul
mov
cmpsb
jmp
inc
ret
cmc
cld
dec
pop
push
test
xchg
lret
xchg
stos
sbb
js
fstl
jns
and
xor
repnz
loopne
adc
inc
xchg
mov
aam
xor
out
jae
enter
iret
ds
js
leave
cltd
clc
sub
push
fildll
jns
mov
ljmp
stos
sbb
shll
lods
xchg
or
pusha
inc
dec
es
pop
and
sbb
cmp
cmp
inc
lcall
lock
out
popa
lea
iret
negl
and
aaa
les
or
push
lret
out
jl
into
adcl
dec
lods
cs
dec
fiaddl
sbb
cltd
mov
popf
or
jge
in
sbb
out
dec
and
xor
ss
pop
pop
call
jnp
in
push
mov
lcall
sti
call
push
jl
subl
and
cltd
rcrl
scas
pop
in
sub
jns
cmpsl
stos
pop
imul
int
aaa
enter
cmpsb
cmp
out
jnp
push
sub
push
mov
mov
mov
sti
push
fdivrl
cld
imul
xor
jnp
xor
out
xchg
or
out
xlat
mov
imul
cmpsl
aad
insl
fsubr
push
mov
out
stos
leave
jae
push
fmuls
mov
mov
stos
jno
addr16
dec
ljmp
mov
pop
jp
lahf
mov
jge
adc
cmp
popf
pop
bound
aad
and
inc
and
xchg
jmp
fldt
and
test
aaa
push
sub
inc
out
jns
cmpsb
mov
movsl
xor
pop
test
rorb
adc
mov
js
sub
adc
adcl
das
inc
filds
inc
adc
inc
aam
mov
mov
outsl
ja
mov
cmpsb
fistps
mov
jbe
push
push
cltd
or
sub
jmp
push
mov
outsl
ret
leave
sti
or
cltd
jns
repnz
mov
push
mov
mov
pop
or
jns
cmp
test
jbe
lds
jno
test
and
pop
inc
orl
daa
adc
and
fistps
rcrl
lret
scas
addr16
cmc
movsl
cmp
pop
aam
int
mov
das
and
jmp
int3
lret
dec
fsincos
fdivs
jmp
mov
std
cmpsb
imul
pop
cmpsb
fisubrs
lahf
dec
adc
bound
out
mov
daa
loop
cmp
scas
imul
in
and
lea
push
fistps
xchg
fcoms
and
aad
in
mov
fistpll
cmp
add
mov
enter
pop
flds
es
mov
fidivl
sub
aad
push
mov
fcomp
push
or
fnsave
sbb
jp
scas
dec
mov
and
jl
push
fstps
push
mov
out
xorb
mov
cmpl
sbb
mov
jno
stos
sub
imul
fcoml
sti
fwait
mov
xchg
mov
xchg
xchg
int
jp
lock
or
pop
sub
and
insl
adc
xor
scas
add
dec
dec
sub
pop
in
jns
test
lahf
mov
ret
push
inc
leave
into
fsubs
repnz
out
das
xlat
cmp
push
sbbl
call
fdivl
imul
popa
xor
enter
out
push
mov
mov
jge
mov
mov
icebp
add
mov
or
jg
sti
push
std
push
push
pop
push
ror
jns
lods
sahf
mov
imull
sub
adc
cs
push
pusha
data16
dec
icebp
mov
or
mov
sti
jl
outsb
jmp
push
push
repnz
fbstp
test
jge
gs
out
jae
inc
mov
repnz
cmpb
ds
jb
test
cmp
out
mov
or
ja
mov
scas
lret
push
adc
lock
orl
inc
add
fcmovnu
mov
ret
mov
cmpsl
pop
push
stos
and
cltd
mov
insb
cmp
insb
inc
sar
ret
jb
pop
daa
stc
add
arpl
gs
mov
mov
test
int
rcll
cmpsb
movb
xlat
imul
dec
sar
mov
xor
mov
pop
test
sbb
cmp
add
loopne
cmpsl
fstpl
push
shl
inc
add
test
jne
scas
bound
aas
inc
sbb
xchg
and
out
push
push
shrb
jle
pop
ja
cli
les
add
add
cltd
in
mov
popf
adc
cmpl
into
inc
push
xchg
enter
sub
mov
mov
daa
ljmp
aam
loop
bound
cmp
mov
xchg
add
ss
test
fiadds
xchg
pop
outsb
push
lcall
stc
loope
adc
or
mov
rol
mov
lret
pop
mov
into
repnz
mov
sbb
push
out
jbe
divl
outsb
mov
dec
cmp
fldenv
shrb
dec
sub
dec
or
fstps
movl
sahf
fadd
loop
fs
pop
and
add
sub
ret
outsb
fcmovu
loopne
xor
jge
sti
test
out
hlt
imul
iret
es
jecxz
sti
push
popf
cli
jb
jmp
in
sbb
xorl
cmpsb
nop
idivb
sub
inc
dec
pop
xchg
notl
adc
in
or
loop
dec
aam
ret
mov
dec
ljmp
in
mov
jnp
negb
gs
xor
xor
mov
pop
js
subb
and
jl
jno
xor
inc
jnp
enter
or
call
adc
fldcw
je
mov
lods
cmpsb
lods
pop
push
js
pop
sarl
aad
pop
shr
cmpsl
imul
fildll
pop
popf
es
insl
movsl
push
fs
push
rolb
ss
xlat
push
inc
lret
stos
icebp
mov
push
mov
cmp
test
mov
push
inc
fs
push
mov
push
and
arpl
pop
insb
jp
ja
sub
pop
inc
out
insl
mov
cld
aaa
fcmove
in
in
stos
call
popf
dec
in
xchg
test
push
fildl
jbe
pop
sub
xor
jecxz
sub
push
mov
imul
fisubl
inc
push
sti
dec
pop
jge
add
stos
filds
in
cmc
cmp
push
fucomip
jg
jl
or
and
shlb
pop
fwait
stos
mov
push
xchg
mov
xchg
and
cmpsb
imul
jne
js
cli
inc
or
inc
pop
bound
inc
fcomps
jg
lret
push
xchg
mov
sbb
push
fndisi(8087
mov
jne
and
mov
lods
movsb
fstps
inc
outsb
andl
jl
jmp
push
mov
jge
cwtl
add
dec
mov
pop
andl
int
mov
mov
and
movsl
lcall
add
insl
sbb
inc
xchg
in
dec
xlat
ss
leave
jle
arpl
inc
fnstcw
in
push
idivl
imul
xchg
cld
fwait
jge
shll
fsubrl
sub
divb
or
push
cwtl
test
scas
cwtl
or
sub
jg
dec
mov
jmp
ds
push
sbb
cltd
add
or
clc
cmovs
mov
fs
xchg
jle
rorb
mov
pushf
into
inc
roll
mov
push
in
jo
sarl
sbb
ja
jecxz
sub
jb
push
bound
outsl
or
test
cli
pop
subb
xchg
outsb
pop
shrb
xlat
int
rorl
lret
dec
ret
cmc
adc
mov
cwtl
sub
push
mov
dec
mov
out
repz
xchg
mov
fsubrp
push
lods
sub
cmp
cmp
fsubrl
orb
push
cs
rorb
call
popf
xor
pop
xchg
outsb
mov
and
inc
lock
jp
xchg
or
sub
es
xor
and
push
sbb
pop
or
pop
mov
movsb
jbe
mov
ret
push
test
fwait
xchg
frstor
push
xor
adc
rcrl
pop
push
repz
scas
jl
icebp
mov
adc
push
arpl
cmp
add
inc
sbb
sbb
ficoml
sub
xchg
mov
test
mov
mov
adc
pop
jge
scas
lods
out
adc
dec
cmp
mov
aad
pusha
cmp
xor
lret
cli
mov
and
adc
and
push
fistl
movsl
lret
inc
repz
pop
ljmp
out
xchg
test
call
ds
jmp
lret
mov
pop
push
leave
push
sub
and
in
add
or
mov
adc
ja
dec
cld
pop
data16
adc
jge
push
mov
xchg
mov
xchg
or
adc
jecxz
cmp
dec
push
jmp
lret
lds
fisubrl
out
cmpsb
mov
in
js
pushf
aam
cmpsb
dec
pop
or
imul
adc
jnp
adc
lret
adc
dec
ljmp
adc
xchg
fstl
and
cmp
les
and
push
lahf
dec
fidivrs
push
in
push
rclb
xchg
cld
add
in
icebp
sbbl
cmp
scas
in
out
fisubs
cmp
jl
mov
lock
into
xor
sub
dec
cmp
mov
jae
and
sbb
popf
cmpl
dec
add
and
out
fiaddl
iret
sub
mov
bound
adc
shll
cwtl
movsl
and
and
loop
and
cld
fldt
stos
pop
inc
dec
mov
xor
ret
push
sbb
xchg
bswap
add
lock
pop
fsubrl
test
arpl
icebp
cmp
mov
xchg
loope
sar
bound
jl
das
rorl
lods
cmp
lea
leave
dec
test
inc
cmp
loopne
xor
adc
or
popa
repnz
and
vmwrite
insl
imul
js
mov
jmp
sub
dec
mov
dec
lods
pop
insb
iret
cmp
jno
rorl
ds
push
movsb
and
stos
add
sbb
ret
mov
lcall
mov
hlt
and
mov
inc
shlb
in
mov
mov
adc
push
hlt
mov
pop
leave
jo
or
lahf
into
jl
and
add
sbb
inc
sbb
xchg
add
test
decb
add
into
and
mov
notb
das
add
loopne
repz
lahf
add
add
sbb
iret
test
sti
sbb
adc
imull
push
js
lcall
inc
and
pop
leave
shlb
jne
enter
repnz
insb
jo
fstpl
sbb
repnz
jns
mov
lahf
adc
xor
loope
je
dec
scas
int3
sub
jg
or
pop
aaa
push
icebp
clc
push
sti
imul
fists
dec
sbb
outsl
cmc
inc
sbb
je
inc
pop
scas
mov
add
cmp
cmp
mov
push
dec
mov
push
enter
fidivrl
ljmp
mov
adc
fwait
mov
xor
dec
test
lods
std
jae
jb
inc
lds
mov
sub
xchg
in
in
mov
add
sbb
pop
fstpt
jle
inc
stc
in
mov
xchg
lds
fcomi
ss
ljmp
mov
roll
inc
nop
pushf
and
push
bnd
in
adcb
sbb
fwait
imul
add
adc
mov
aaa
mov
xchg
add
enter
gs
add
and
xchg
xchg
movups
cmpsb
das
adc
sbb
mov
push
or
test
js
fnstsw
in
cmp
dec
addr16
or
dec
cmp
lods
mov
fnstenv
dec
dec
pop
mov
imul
aaa
adc
and
jl
cmpsl
adc
addr16
xchg
mov
cmp
in
ds
pop
repnz
stos
outsb
or
xor
and
pop
and
stos
popa
xor
xor
pop
rcll
add
std
leave
mov
and
in
xor
cwtl
lock
movsb
dec
add
dec
adc
adc
adcl
in
cmpsl
and
fdivrs
xchg
adc
dec
adc
mov
rcrl
xchg
insb
xchg
push
test
xchg
leave
fstpl
int3
movsb
movl
dec
xchg
call
sbb
pop
add
mov
into
js
dec
into
in
ret
in
adc
mov
push
jle
push
aam
xchg
mov
ja
mov
outsl
sbb
push
adc
xchg
aas
test
pop
xlat
xor
push
pop
cmp
outsb
cmp
sub
ljmp
mov
add
lods
adc
sub
pop
pop
movsl
jae
movsb
jmp
xchg
call
cmc
or
stos
sbb
pop
mov
imul
mov
jg
push
mov
or
lret
das
cs
add
push
push
mov
xor
jb
mov
sbb
xchg
push
subb
mov
in
cltd
mov
mov
mov
jns
pop
cmp
sahf
dec
fsubrl
add
iret
mov
dec
push
int
mov
nop
mov
cmp
push
sarl
mov
cld
scas
jmp
std
nop
cmp
cmp
xchg
sbb
into
es
fdiv
es
xchg
mov
mov
mov
mov
sbb
shlb
push
arpl
or
movsb
lret
inc
js
sub
popa
es
add
leave
fdivl
test
pushf
ljmp
mov
push
or
int3
sub
or
daa
lock
jg
xchg
movb
mov
pop
dec
mov
push
and
fiaddl
or
mov
clc
repnz
je
mov
subl
sub
adc
rcrb
and
pop
sahf
rorl
loop
xor
out
ret
fisubrs
mov
sub
cmc
ss
sub
mov
push
shl
sbb
neg
sbb
roll
nop
scas
sti
bound
xchg
sti
push
test
lds
lods
xchg
das
js
pusha
fsubl
push
out
push
orl
cld
or
cwtl
adc
add
scas
data16
int
mov
pop
jb
mov
stos
add
mov
add
jno
cmpsl
inc
sub
sub
loope
lds
and
fistl
js
add
nop
mov
xchg
leave
inc
mov
mov
adc
das
xor
subb
repnz
test
push
cmp
icebp
sti
or
pop
push
mov
add
mov
andl
inc
pop
data16
movsb
mov
sub
or
movsb
xlat
cmp
jg
ret
jg
cli
xchg
iret
push
cld
sbb
in
mov
push
adc
scas
cmpb
push
cltd
aad
pop
outsb
jbe
stos
push
jo
push
or
mov
mov
aam
inc
fistl
js
dec
or
mov
sbb
and
mov
pop
dec
ss
mov
lret
testl
pop
scas
adc
push
adc
into
pop
rcl
and
jnp
fmul
je
xchg
mov
jl
sub
aam
push
orb
dec
aaa
or
dec
and
sbb
inc
mov
lds
mov
mov
addb
jno
jmp
inc
hlt
sbb
sub
and
xchg
jge
lret
xchg
inc
mov
out
sub
sbb
mov
bound
push
dec
loope
mov
nop
outsb
arpl
movsb
add
insl
test
fbstp
mov
pusha
pop
mov
imul
mov
pop
push
and
push
mov
pop
sub
popa
rcrb
push
in
adc
xor
pop
ret
stos
jl
inc
pop
inc
jp
cmp
add
call
out
push
push
push
jne
xchg
or
pop
fstl
pop
incb
ljmp
lods
shlb
add
mov
in
mov
loop
fcmovu
shl
enter
stos
mov
push
fsubs
ret
pusha
jnp
dec
mov
inc
rcrb
xchg
ja
add
insb
push
ss
cmp
xor
clc
adcb
das
mov
push
inc
xor
les
push
pop
dec
xchg
adc
out
pusha
add
mov
cwtl
dec
stc
pop
mov
mov
xchg
mov
daa
xchg
ljmp
xchg
sbb
sqrtps
mov
dec
jge
stos
roll
hlt
shr
push
cmp
test
sbb
and
cmpsb
lock
testl
call
push
adc
sbb
jg
lcall
pop
lret
fimuls
inc
jp
push
lcall
popf
les
pop
in
pushf
pushf
jb
jbe
and
xchg
mov
loope
mov
mov
xor
jecxz
mov
mov
into
push
cmp
cwtl
and
hlt
fbstp
sbb
fdivrs
dec
scas
je
push
fsubrl
dec
lods
cmp
aam
dec
scas
mov
pop
popa
cmc
and
mov
dec
mov
or
scas
push
jae
push
push
lock
ficomps
mov
xor
stos
jns
out
add
pop
lock
sub
adc
and
mov
push
push
fsubr
jg
out
iret
add
cmpl
insl
bnd
loope
xchg
or
outsb
mov
or
pop
pop
mov
out
mov
mov
fistl
idivb
mov
dec
and
sub
inc
mov
mov
and
jb
mov
push
mov
ret
icebp
in
dec
pop
jecxz
cs
cmp
popf
pop
cmpsl
jo
icebp
cmc
mov
xchg
push
pushf
imull
in
xchg
mov
xchg
lret
xor
xor
xchg
test
out
mov
mov
jmp
add
nop
les
push
in
add
jmp
jae
cltd
and
cwtl
cmp
xchg
pop
adc
stos
arpl
jmp
xchg
mov
mov
mov
shll
adc
jecxz
mov
or
movl
mov
mov
push
mov
mov
sbb
sub
pop
outsb
mov
pop
popf
sbb
and
add
sahf
sub
and
jnp
pop
rcrl
push
pop
inc
aas
aas
in
push
inc
loopne
and
sub
jne
cld
xchg
inc
sub
cwtl
das
scas
clc
push
aad
mov
sbb
sub
cmpsl
inc
sub
out
jns
cmc
lahf
cmp
cmp
jns
fstpl
xor
js
test
add
xor
xchg
into
jo
jne
cmp
sbb
xor
mov
jge
orl
dec
cmpsb
cmp
or
push
xchg
jb
repnz
rolb
pushf
pop
or
rorl
lret
fbstp
ja
popf
add
push
daa
mov
mov
aaa
xchg
mov
push
jbe
les
je
int3
and
jmp
ret
lahf
inc
addr16
testb
sub
xlat
arpl
mov
shlb
xor
enter
xor
icebp
iret
lret
xchg
sti
test
xlat
movsl
sub
shr
adc
sarb
std
vdivpd
sbb
loopne
loopne
jns
mov
mov
mov
pop
sbb
push
sahf
mov
lods
daa
hlt
xor
sub
lahf
xor
mov
dec
cmpb
dec
es
mov
out
icebp
sbb
mov
lock
push
push
or
js
loope
es
jmp
es
dec
not
das
adc
cmp
jae
mov
and
mov
mov
cmc
ss
loopne
ficompl
adc
and
and
outsb
outsl
lods
adc
jp
xor
dec
mov
aaa
dec
pop
in
stos
pop
sbb
rcl
fisttpll
xchg
repz
jnp
add
outsb
xchg
mov
std
add
add
jl
out
rol
pop
push
loop
lods
add
pop
jmp
mov
fxch
mov
inc
push
jo
fnstcw
cmpsb
xchg
scas
popf
mov
into
movsb
cwtl
outsl
or
mov
cld
xchg
mov
lahf
push
xlat
inc
inc
into
call
or
adc
adc
mov
push
jne
sub
jle
mov
into
test
jg
test
push
mov
pop
loopne
mov
xlat
mov
adc
out
les
idivl
sub
fs
nop
push
mov
jne
xchg
xor
mov
cmpsl
add
les
in
rcll
arpl
xor
pop
adc
cs
or
dec
ficomps
int
aad
loope
and
jg
jbe
gs
aad
sti
jg
adc
jmp
push
cltd
loopne
jb
mov
inc
lods
sub
mov
lds
clc
subw
jle
jp
jecxz
loopne
out
mov
pop
repz
xor
bound
inc
pop
out
cmp
sub
xchg
dec
pop
hlt
mov
mov
jo
push
sarl
ss
mov
stos
nop
jbe
xor
fwait
stos
pop
shrb
shr
std
shrl
push
jp
leave
inc
cmp
bnd
lcall
push
dec
xlat
or
hlt
sub
dec
add
push
aaa
adc
or
mov
mov
sub
cmp
pop
xchg
enter
cmp
lods
andl
sbb
jle
pop
pop
popf
shr
lret
jnp
inc
js
mov
stos
pop
pop
xor
test
lcall
add
lds
mov
loope
push
xchg
adc
jno
fsubrs
lock
jns
int
mov
jb
mov
cltd
xchg
and
mov
push
or
and
fiadds
sti
xor
add
call
mov
mov
je
cmp
test
mov
inc
lret
and
shll
rclb
dec
inc
push
shrb
inc
clc
jne
cmp
pop
pop
push
pcmpgtd
lret
cmp
jmp
ficomps
adc
ja
push
addr16
push
push
std
jle
mov
cld
cmc
mov
xchg
test
fs
pop
xchg
mov
dec
nop
mov
or
add
nop
pusha
mulb
cmp
popf
aad
add
daa
mov
sub
ds
mov
push
cwtl
in
cmp
into
popf
jp
cli
lcall
enter
out
lret
sub
push
aad
mov
clc
sub
and
xor
notl
imul
std
les
cli
in
jg
into
add
ss
rorb
data16
sbb
push
and
push
bnd
mov
pop
push
fimuls
int
xlat
cmpsl
sub
and
mov
xor
mov
or
cld
inc
lret
add
xor
aas
xchg
pop
dec
imul
sbb
rol
jle
push
scas
aam
gs
xlat
js
into
stos
mov
scas
pop
pop
fnstcw
push
test
pop
adc
xchg
loope
ret
and
out
jae
lret
mov
mov
cli
pop
xchg
jbe
addr16
adc
out
dec
jbe
int
cld
pop
fldl
stc
pop
fstpt
jae
push
cwtl
aad
fstpl
jmp
gs
or
dec
aas
outsl
js
lods
dec
jecxz
mov
clc
cmp
mov
sbb
outsl
push
mov
add
js
or
outsl
or
out
adc
cwtl
pop
jno
jae
sbb
js
out
mov
pop
dec
sub
xor
loop
sbb
push
mov
cmp
adc
ficoml
fidivrs
popa
in
dec
ljmp
idiv
cltd
pop
nop
dec
adc
add
aas
dec
cwtl
pop
add
sub
sbb
mov
inc
push
push
aaa
dec
sbb
scas
in
sub
jae
loope
xchg
and
pop
push
out
sbb
mov
adc
ss
push
inc
adc
call
pop
jmp
fisubs
popa
fnstenv
xchg
ja
mov
jle
inc
push
cmpsb
lahf
out
ficoms
hlt
mov
mov
sti
repnz
add
push
inc
xor
pop
jge
je
dec
sbb
mov
add
adc
fists
ret
rcrl
sub
shrb
pop
inc
in
cmp
dec
pop
rorb
push
out
das
pop
test
lcall
push
xchg
test
es
ret
mov
icebp
gs
sete
dec
jl
data16
mov
pop
outsl
jl
imul
mov
mov
mov
xchg
mov
cli
test
mov
add
cwtl
into
and
scas
ja
fildll
push
incl
fists
cltd
add
adc
sub
push
inc
scas
dec
and
fxtract
sbb
lret
push
fistpl
jle
int
push
push
cwtl
cs
call
mov
cmp
lods
mov
imul
push
dec
es
fwait
cmp
ja
dec
add
sbb
mov
adc
sub
xchg
push
lea
and
mov
jno
and
int
and
ss
sbb
pop
imul
ret
push
fwait
mov
out
pop
pop
dec
xor
cwtl
dec
mov
jecxz
in
sub
push
lds
out
jbe
call
adc
outsl
dec
add
cmp
enter
lret
xchg
adc
push
test
or
or
div
mov
xor
pop
jp
push
fsubs
lods
xchg
cmp
cmp
aaa
in
xor
lcall
jl,pn
jbe
in
sarl
test
in
mov
inc
call
subl
sbb
cmc
addb
push
sub
xchg
cld
int3
les
imul
js
dec
das
and
arpl
ret
or
fimuls
mov
not
fisubrl
add
idiv
sub
maskmovq
negl
enter
repz
and
xchg
sbb
sarl
and
cmp
sbbl
jae
xor
lds
push
mov
in
and
stos
sub
mov
add
push
fsubrs
pop
xchg
lcall
inc
int
popf
pop
fstpt
sub
push
dec
mov
adc
stos
jg
xor
mov
sti
mov
pop
jmp
dec
push
jnp
push
cmp
jmp
mov
lods
leave
cwtl
push
adc
out
jge
or
or
push
les
clc
xor
push
cli
scas
int
xor
adc
or
arpl
cmp
aam
jns
mov
add
gs
out
jmp
lods
neg
mov
push
stos
adc
ja
lcall
into
xchg
jns
idivl
out
push
adc
cmp
jne
push
test
shlb
nop
fwait
sahf
dec
daa
out
std
insb
repnz
inc
push
lock
mov
aaa
mov
mov
mov
xchg
stos
jns
lea
loope
or
arpl
fbld
in
mov
mov
test
jnp
stc
xor
ss
push
ret
ss
push
pop
outsl
cltd
or
ds
mov
and
mov
popa
push
inc
mov
das
mov
pop
jmp
jne
sbb
icebp
in
jge
xor
or
les
dec
jl
iret
addl
test
cmp
jnp
and
pop
lods
sbb
add
pop
sbb
add
nop
test
idivl
int
in
ss
or
nop
mov
gs
cmp
jo
or
jp
lcall
sbb
xor
pop
cmp
imull
pop
data16
insl
pusha
bound
lahf
mov
inc
hlt
movsb
pop
adc
mov
fwait
adc
popf
xchg
sahf
cmpsl
sub
in
clc
loop
mov
insl
xorb
add
rcrl
adc
popa
shl
arpl
add
jecxz
and
cmc
push
or
push
xchg
adc
xchg
rcl
mov
inc
mov
aaa
fiaddl
push
inc
cmpsb
sub
rorb
xchg
and
das
mov
jb
int3
or
xchg
mov
in
out
pop
add
lret
dec
inc
mov
je
adc
insl
fadds
rcrl
fwait
mov
xor
xor
cld
sti
shrl
fsts
movsl
mov
cwtl
cwtl
out
frstor
call
lods
out
dec
sub
jg
sbb
outsl
inc
into
gs
shll
fisubrl
pop
mov
sbb
xchg
fistpl
mov
push
out
jle
iret
mov
sub
hlt
je
ss
lds
add
enter
push
pop
loope
xchg
jnp
ret
repz
sub
aad
out
fabs
jge
mov
jle
jo
mov
push
mov
or
lock
pop
cmp
sub
pop
sbb
movsb
testl
adc
dec
test
mov
clc
adc
lods
pop
push
lret
pusha
les
cmp
das
addl
hlt
xchg
dec
leave
push
push
out
sbb
inc
repnz
adc
ret
pop
movsl
aas
push
mov
jne
mov
inc
dec
xor
jmp
movl
adc
xor
fbld
stos
xor
lods
sar
dec
add
call
mov
sbb
cmpsb
js
add
outsl
out
sub
xchg
or
mov
or
in
scas
inc
roll
out
mov
repz
dec
outsb
idivl
ss
mov
cltd
jle
ljmp
and
sbb
mov
sub
xor
shl
nop
sqrtps
jg
cli
lods
leave
add
mov
mov
ds
ja
cmp
xchg
cmp
cs
ljmp
mov
push
popa
push
cmp
stos
xlat
dec
mov
enter
push
push
das
int
mov
or
int3
movsl
je
addr16
lods
xor
outsb
jp
lret
das
stos
sbbl
daa
mov
pusha
loope
in
addr16
not
sarl
xor
pushf
es
push
add
aaa
dec
jle
movsb
mov
mov
sub
jae
scas
in
add
shll
mov
hlt
push
pop
inc
movsl
call
data16
dec
xchg
jne
inc
sbb
loopne
xor
pushf
mov
pop
cs
mov
mov
rcrb
stos
fldenv
rep
sub
sbb
lds
pop
adc
pshufw
aad
ds
pop
repnz
imul
aam
rclb
xor
lcall
out
icebp
clc
xchg
push
lods
push
mov
out
iret
add
mov
or
out
data16
sub
jbe
sub
xor
and
mov
call
push
repz
gs
mov
sub
pusha
jmp
aas
cmp
es
push
sahf
push
loope
shll
mov
and
push
hlt
repnz
mov
cmpsb
stos
fildl
lahf
add
fimuls
inc
or
cmp
inc
push
movsl
or
sbb
cmp
sahf
lea
pop
jle
fcmovnbe
fmul
cmpsl
jns
add
test
enter
push
les
mov
clc
addb
cld
stos
push
lock
sbbb
cmpsb
fdivrs
aas
cmp
testb
scas
xchg
or
inc
dec
mov
jg
mov
pop
xchg
call
push
roll
imul
stos
xchg
addr16
sbb
mov
testb
inc
cld
addr16
lods
loop
dec
aaa
cmp
bswap
jae
adc
in
jl
jnp
bnd
cmp
jmp
movsb
xor
cmp
jmp
jae
adc
dec
sbb
loope
loopne
movsb
in
or
fcmovu
pop
faddl
gs
jae
bound
mov
jnp
enter
mov
pushf
mov
stos
jo
pop
pop
in
es
pusha
dec
jle
pop
mul
cmpsb
jp
scas
sub
xor
inc
dec
lea
add
out
mov
and
push
mov
pop
pop
push
fdivrl
test
test
dec
push
repnz
popf
out
scas
adc
das
test
cmp
ret
insl
jbe
sub
lahf
and
mov
nopl
jb
adc
enter
arpl
fwait
inc
sbb
or
cmpl
pop
inc
jecxz
std
mov
movsl
lods
ss
xlat
ss
sbb
mov
cmp
sub
push
shl
loopne
dec
int
or
loop
fbld
dec
loopne
fimull
outsl
inc
xlat
mov
xchg
sbb
or
adc
push
pop
or
and
in
pop
xorb
shrl
movsb
sbb
mov
pop
pop
fnstsw
cmp
xor
cmpsl
sub
dec
fildll
repz
in
or
and
shlw
cs
aas
arpl
sti
mov
lea
sub
lea
clc
cmp
aam
or
daa
xchg
sarl
addr16
adc
lahf
add
sar
inc
in
fstps
scas
fbld
jae
rcll
pop
int
jns
jb
jecxz
mov
push
cs
cmc
repnz
int
mov
into
cmp
sub
xor
aaa
and
jl
push
shll
hlt
rcll
dec
jmp
mov
pop
mov
jge
dec
or
scas
ret
xchg
divb
push
xchg
adc
pop
movsl
imul
mov
jnp
pushf
mov
cwtl
popa
xor
in
lods
mov
call
dec
dec
outsl
outsl
pop
les
leave
popf
or
in
fmull
aas
jns
cmp
and
sbb
jmp
insl
ljmp
and
mov
daa
out
popf
popa
push
inc
std
in
sub
pop
push
int
jns
dec
cmpsb
jp
cmp
push
sbb
and
je
jg
out
in
rorb
arpl
mov
scas
loop
test
inc
jns
or
sbb
cmp
sahf
movsb
or
add
movsb
rorl
test
jo
sbb
and
insb
nop
fs
sub
add
xchg
cld
jnp
ljmp
and
in
mul
neg
ror
sbb
fistpll
add
push
pop
push
mov
es
fildl
sti
jg
out
push
sar
loope
push
and
shrl
mov
cmpsb
and
test
jp
push
lock
movsl
test
int
lea
inc
in
jg
fidivl
xor
inc
je
mov
rolb
pushf
mov
adc
fisubl
and
mov
aas
inc
add
cmpsl
inc
test
addb
inc
loope
push
cmpsl
imul
add
rcll
mov
inc
sbb
and
jo
xchg
and
movsb
mov
jbe
pop
cmp
push
nop
orb
inc
jne
imul
mov
inc
nop
shl
dec
mov
ljmp
pop
sub
xchg
aaa
jle
int
lods
imul
jl
cmp
xchg
sbb
lea
pop
sahf
test
dec
jecxz
ss
sbb
loop
xor
or
rcrb
nop
jne
imul
push
mov
jl
mov
ret
add
sub
xchg
or
mov
xor
mov
jnp
call
repnz
rorl
stc
push
mov
aaa
lcall
and
pop
leave
test
std
mov
pusha
pushf
loope
or
scas
les
out
subl
pop
mov
das
call
or
movsb
push
std
fcoml
lcall
xchg
add
jae
dec
cmp
ss
mov
xchg
sub
lods
fdivp
pop
push
leave
leave
or
sub
lcall
add
int
aad
in
daa
xor
xorl
push
stos
arpl
into
inc
inc
iret
sub
and
scas
jo
cs
mov
ljmp
push
dec
imul
mov
test
xchg
mov
push
dec
xchg
jnp
cmp
push
movsl
fldcw
faddp
xchg
loop
jnp
nop
cwtl
decl
sahf
daa
mov
pop
iret
dec
cmp
and
lods
imulb
add
xchg
jmp
dec
js
aad
enter
loope
xchg
mov
add
cmp
push
mov
mov
leave
andb
in
lret
inc
aam
mov
inc
or
sar
inc
and
test
call
inc
lret
shlb
int3
jmp
lods
sub
dec
mov
mov
mov
or
pop
sar
push
xchg
movsb
sub
push
scas
pop
push
sub
hlt
iret
cmpsb
gs
push
mov
movsb
js
dec
jg
push
mov
mov
ret
cli
and
xchg
push
loope
push
fbld
scas
add
push
xor
cltd
add
xchg
mov
imull
mov
clc
inc
das
repz
jnp
xchg
fisubl
hlt
mov
icebp
add
jo
fbld
out
dec
xchg
push
jle
ja
inc
sbb
lret
dec
cmp
imul
filds
cli
add
push
push
and
pop
xor
dec
sbb
test
pop
cmp
cmp
mov
xchg
hlt
xor
inc
rcll
pop
and
fcmovne
into
jmp
xchg
ret
fwait
sbb
int
aad
orb
call
push
cld
imul
test
sbb
pushf
cld
dec
jge
fbstp
add
je
xchg
fisttps
lret
js
mov
push
lods
pop
mov
jo
iret
push
push
and
and
dec
insl
ret
mov
test
and
add
sbb
mov
jg
and
andb
inc
cmpsb
lea
inc
jl
mov
mulb
mov
leave
inc
mov
lea
rorb
sbb
insb
ljmp
lret
call
lea
inc
add
jp
or
icebp
push
aam
outsl
les
xlat
call
jbe
popa
add
jle
and
pushf
mov
negl
mov
sbb
mov
jp
clc
shlb
push
rcrl
loopne
arpl
cltd
jecxz
test
push
cmpsb
jg
jecxz
mov
pop
mov
mov
mov
cmp
mov
and
jp
ret
sub
rcll
mov
sbbb
sahf
xor
stc
lret
sub
xchg
movsb
in
adc
sbb
loopne
pop
jecxz
xor
das
xor
mov
and
cmp
out
mov
imul
and
sti
dec
gs
add
repz
int
sarl
push
push
mov
repnz
fbstp
and
cmc
ds
test
fwait
xor
dec
popf
push
mov
inc
outsl
or
inc
test
pop
pop
adc
stos
cmpsb
daa
out
sarb
xchg
imul
in
xchg
mov
xor
test
imul
pop
repz
adc
and
out
stos
and
sub
cs
jbe
ret
es
add
fs
jno
dec
pop
cmp
jmp
fcmovnb
pop
mov
or
outsb
jl
es
mov
out
in
stc
je
cmp
ss
push
popa
push
iret
and
ret
adc
lcall
es
mov
adc
int
or
jecxz
lcall
jnp
test
loop
cmp
push
adc
sub
inc
ds
stc
xor
mov
push
sti
popa
push
mov
mov
adc
lret
xor
ret
mov
or
mov
ds
adc
dec
fnstsw
cwtl
cmp
ret
popf
pop
aad
stos
jbe
je
mov
jp,pt
sbb
mov
sbb
jecxz
mov
pxor
and
movsb
cmp
pop
cmp
data16
push
sbb
ret
add
push
sbb
sub
push
push
push
mov
sbb
sbb
sti
sarb
aaa
mov
xorl
push
stc
jne
repnz
mov
or
fisttpl
pushl
in
sub
adc
adc
popf
cmp
aas
dec
repz
mov
test
push
add
dec
pop
es
pop
mov
enter
fsubrs
imul
push
int3
adc
clc
loop
je
mov
mov
xchg
mov
aad
sub
repz
icebp
push
pop
aas
inc
pop
fsubr
fists
pop
jns
aam
mov
mov
inc
ds
sub
sub
dec
inc
in
mov
or
fstpt
jbe
xchg
ffree
jl
repnz
lahf
insb
add
sbb
fiaddl
das
clc
dec
and
sbb
icebp
mov
push
stc
adc
lock
xchg
fcomps
push
push
sbb
cs
push
fwait
cmc
sub
mov
mov
adc
jb
push
jge
lds
je
pop
cmpsl
aaa
in
pop
xor
test
jl
jne
adc
daa
into
mov
add
cmpb
mov
fsubs
clc
dec
mov
lods
jne
inc
call
inc
fisubrs
incl
and
test
push
stos
pop
flds
mov
inc
cmc
lret
xchg
mov
or
lret
nop
pop
and
filds
or
xchg
js
fisttpl
mov
test
mov
into
pushw
movsl
imul
ficompl
jbe
or
push
movl
popf
fcomps
pop
mov
inc
xorb
pop
jbe
mov
jecxz
add
and
shrl
inc
daa
sub
cmp
mov
inc
xchg
pop
mov
dec
shl
push
jns
mov
fistps
xor
ds
xchg
add
mov
bound
decb
mov
sub
popf
add
and
cmp
push
and
push
xchg
push
inc
sub
xchg
stos
push
pcmpeqb
cld
sbb
es
fadds
adc
test
fdivrs
cmpsb
lret
mov
add
inc
push
inc
std
mov
outsb
jbe
cmpl
mov
xchg
popf
imul
aad
fldt
xor
add
xchg
fistpll
in
dec
int
imul
sub
ret
pop
and
sbb
and
popl
dec
clc
xchg
iret
leave
jmp
iret
ret
inc
sbb
xchg
lret
rcrb
and
enter
iret
cmp
outsb
push
in
pop
add
and
cmc
loop
or
lods
jo
in
sbb
fcoms
adc
jecxz
jecxz
and
cwtl
repz
lods
xor
lea
xchg
ja
das
shll
hlt
adc
aam
inc
mov
pop
xchg
adc
jge
inc
clc
fucom
adc
mov
pop
dec
mov
or
out
inc
ds
inc
jge
dec
sbb
les
mov
pop
sbb
fisttpll
and
lea
jge
pop
mov
mov
sarl
mov
xchg
dec
adc
repz
mov
imul
iret
cmc
sbb
push
and
stc
and
test
cltd
dec
ja
sbb
out
rcr
xor
xor
xor
ret
lods
push
dec
int3
nop
cmp
adc
xlat
test
dec
les
push
xchg
ror
dec
inc
stos
cmp
nop
sahf
adc
daa
lods
xor
ja
xor
into
mov
fdivr
sbb
adc
xor
sahf
fstl
rcrb
xchg
cli
pop
loopne
mov
ret
ja
dec
cmpsl
cmp
jo
mov
loop
push
hlt
clc
add
lcall
pop
aas
mov
sbb
lcall
cmc
mov
xchg
icebp
popf
jne
aam
cmp
mov
and
mov
icebp
jmp
enter
sbb
or
jmp
dec
xchg
inc
into
cmpsb
int3
movzbl
xor
push
stos
jae
dec
add
add
and
stc
xchg
cmpsl
pop
ret
lret
loop
lds
cmp
pop
repz
inc
in
lods
lds
test
ja
xor
into
mov
mov
mov
nop
fwait
bnd
imulb
pusha
dec
inc
mov
shl
push
inc
and
cmpsl
jae
xchg
int3
inc
jge
sbb
es
data16
xchg
enter
insl
lahf
fisubl
mov
test
xlat
movl
xchg
pop
inc
push
loopne
in
inc
inc
incb
push
cli
fnsave
cmp
sti
test
push
mov
and
mov
jle
in
xchg
in
jg
sbb
jno
adc
push
fbstp
mov
enter
pop
xchg
into
push
dec
push
imul
stc
push
xchg
or
fisttpl
mov
iret
mov
aad
push
ret
lods
inc
inc
mov
xchg
fcomps
andl
iret
dec
sub
vpand
nop
add
jl
dec
pop
inc
sub
decl
psubb
test
inc
push
push
in
xor
or
jl
repnz
sub
mov
pusha
mov
aad
mov
xchg
outsl
roll
mov
pop
jae
mov
pop
dec
xchg
adc
loopne
mov
fisttpl
mov
adc
xor
out
jecxz
xchg
lahf
push
aad
jo
xor
cmp
mov
add
pop
xchg
sub
es
subb
mov
dec
mov
sbb
scas
xor
test
mov
dec
bound
scas
mov
stos
subb
xlat
mov
stc
ficomps
push
pop
and
dec
mov
ss
xor
dec
jecxz
inc
xor
divl
ret
out
pop
cmp
add
scas
dec
cmp
ret
jne
mov
inc
das
shll
mov
inc
rorb
xor
push
pop
gs
movsb
stos
push
xor
ficoms
nop
push
pop
adc
in
xor
std
push
fwait
mov
jge
jmp
scas
jns
ja
xchg
or
inc
add
adc
inc
decb
jle
pusha
mov
test
pop
out
mulb
in
add
pop
rcll
push
rolb
pop
add
dec
mov
insb
mov
ja
inc
add
xor
enter
pop
push
add
clc
cmp
jae
mov
out
xor
xchg
push
jp
dec
nop
lret
sbb
repz
inc
fisubrs
pop
and
sbb
movsb
ret
rorl
sub
fcomps
push
lret
dec
imul
push
in
sub
sti
pcmpeqw
psrad
and
sbb
lds
mov
iret
sarb
shl
rorb
scas
push
lods
sub
sbb
mov
add
jg
jb
xlat
repnz
jns
push
sahf
pop
clc
out
hlt
lods
sahf
add
pop
in
out
sbb
loop
mov
sar
xlat
mov
popf
jg
cld
aad
popa
dec
pop
push
inc
inc
fsubr
nop
dec
xor
mov
cmc
jle
mov
call
leave
bound
dec
sbb
pop
fcomip
xchg
and
leave
pop
push
shl
rol
lock
jl
push
stos
cli
or
adc
arpl
jae
sub
jno
mov
lock
push
inc
cmp
inc
outsl
sti
push
or
add
and
scas
mov
sarl
iret
and
pop
or
shll
push
push
iret
xor
repz
jg
xchg
aad
pusha
push
pop
mov
pop
sub
mov
ljmp
fsubrl
mov
adc
push
pusha
gs
scas
bt
sub
rcr
dec
xchg
jl
dec
cmp
addr16
xchg
xlat
ljmp
cmpsl
mov
add
cmp
jo
push
fs
jnp
xor
jno
push
fs
clc
xchg
push
call
cli
or
mov
adc
ja
push
clc
fldcw
push
bound
in
xchg
negl
in
jmp
jb
xchg
adcb
fsubrl
dec
sub
mov
pop
add
jns
imul
imulb
fmull
and
insl
adc
mov
mov
aam
jne
mov
mov
xor
negb
outsb
sbb
pusha
xchg
lcall
adc
mov
mov
or
cmp
das
push
call
ret
push
jp
andl
cmpb
out
xchg
call
dec
dec
out
adc
lahf
adc
orl
mov
out
cmp
or
sbb
lcall
js
pop
dec
in
pop
push
pop
push
cli
jbe
ja
and
in
addl
daa
cmp
mov
mov
and
push
xchg
sti
icebp
dec
sbb
adc
mov
out
out
xchg
mov
icebp
cmc
mov
push
inc
repz
pop
mov
mov
fwait
dec
aaa
gs
cmp
out
cmp
mov
clc
sub
mov
lods
les
outsb
xchg
sbb
fcomip
data16
cmp
daa
cmc
mov
mov
push
pop
or
add
sub
xchg
xchg
or
adc
jecxz
sbb
pop
lret
dec
pop
scas
pop
pop
jne
pop
mov
and
pop
sub
adc
icebp
cli
imul
mov
mov
adc
xchg
shlb
out
or
inc
push
xchg
mov
xlat
mov
lret
xor
inc
cmp
leave
ds
pop
cmp
fistpll
je
pop
mov
out
in
or
pushf
mov
pop
pop
or
repz
sub
clc
in
sbb
in
decl
mov
into
adc
shl
lret
dec
pop
dec
ret
add
jmp
dec
das
std
dec
xlat
inc
mov
mov
ret
stos
icebp
jne
mov
mov
out
jae
bound
xchg
stos
sub
and
adc
inc
fidivrs
mov
dec
scas
loop
add
xor
jl
mov
push
mov
mov
sbb
pop
popa
fwait
addr16
and
adc
call
sub
js
lahf
arpl
jae
sub
xor
sbb
xorb
mov
into
aaa
insb
lods
in
pusha
dec
push
mov
les
lret
inc
js
mov
sub
dec
in
xor
inc
dec
jnp
dec
dec
mov
loope
lds
mov
pop
push
in
popf
jo
and
in
decb
in
frstor
add
dec
jbe
xchg
push
adc
stc
gs
push
aam
push
mov
inc
xor
ret
sbb
inc
sub
shl
inc
xchg
leave
shld
shl
or
ss
dec
sti
mov
out
daa
inc
dec
mov
push
ds
sub
shlb
je
not
dec
pminsw
cmp
test
clc
sbb
mov
xchg
test
push
pop
push
xor
mov
scas
or
in
inc
lcall
jbe
mov
nop
jg
or
sub
mov
inc
ret
fnstcw
xlat
sti
mov
dec
stos
mov
shl
in
cmp
test
jp
jns
cli
fisubl
or
jne
in
push
jae
inc
div
mov
xchg
ret
mov
mov
dec
sbb
jl
les
push
pop
add
in
sarb
adc
popa
cmpsl
push
sbb
jnp
fs
cmc
xchg
notl
inc
adc
push
shl
dec
and
sahf
bound
jne
imull
test
subb
mov
int3
mulb
sbb
pusha
data16
ficoms
icebp
popa
lods
repnz
fadd
push
pop
adc
jl
inc
sub
dec
xchg
pop
cmpsl
push
dec
push
test
add
pop
jb
lahf
xchg
mov
cld
decb
xchg
ds
xor
jmp
dec
cwtl
jae
pop
cld
xor
cwtl
mov
sar
js
lods
push
jne
mov
push
icebp
adc
add
xorb
outsb
popf
fnstcw
in
std
pushl
push
mov
xor
lret
mov
pushf
inc
mov
pop
scas
xchg
and
cmp
push
jnp
xlat
and
push
in
or
push
push
inc
inc
sub
xchg
add
movsl
sbb
mov
add
mov
mov
jne
daa
and
jg
mov
sbb
in
push
mov
lods
lods
sub
in
pusha
scas
mov
mov
icebp
mov
jge
repz
mov
xor
cmpsb
mov
sbb
fiadds
fdivrp
jb
mov
clc
into
jnp
cmp
insb
addl
mov
ljmp
mov
lcall
cmpsl
incl
iret
movsl
data16
cmpsl
and
push
jb
dec
je
leave
sub
jno
ljmp
scas
sub
shrd
jbe
mov
jns
inc
cmpsb
xchg
lahf
jge
imul
imul
fsubrs
mov
mov
fiadds
xchg
jle
or
or
js
les
or
cmc
lods
dec
push
sbb
js
popa
jo
pushf
mov
data16
aam
imul
popa
mov
clc
pop
addb
imul
cmpsl
aas
pop
sbb
or
mov
insl
mov
flds
sub
les
faddl
ss
pop
ret
jmp
stos
push
push
sub
and
mov
adc
dec
dec
push
sbb
rcrb
mov
mov
out
idivb
ss
jg
dec
ds
dec
lock
mov
jo
or
push
cmp
hlt
xlat
jmp
sbb
icebp
jno
jne
cmpsl
addr16
test
mov
adc
jl
xchg
hlt
fcmovnbe
negl
in
push
adc
sar
iret
jbe
xchg
dec
dec
incb
fldenv
xor
stos
adc
in
sub
adc
das
dec
mov
lods
jmp
add
mov
je
popa
and
out
aas
test
jo
mov
push
mov
cmpsl
int
push
in
jbe
xchg
stc
mov
insb
adc
mov
das
bound
xchg
add
cltd
add
pop
stc
add
jecxz
sbb
rorl
mov
int3
addr16
scas
jmp
in
popa
fisubs
shrb
add
dec
ret
xchg
and
inc
cmp
pop
mov
aaa
jno
loopne
inc
dec
jno
push
insb
sub
or
adc
ret
jmp
sbb
sub
ret
cmpsl
cmp
or
pop
es
arpl
ss
jo
aas
mov
stos
mov
adc
stos
sahf
cmp
jno
push
mov
inc
push
xor
fcom
div
sub
cmp
jp
cld
mov
lret
xchg
imulb
hlt
das
into
mov
ja
sbb
out
jo
mov
inc
sti
inc
xchg
mov
daa
hlt
outsb
mov
pop
mov
jle
lock
or
jae
rorb
dec
pop
pop
jne
xor
and
movsb
xchg
and
cmp
mov
int
push
rclb
mov
jmp
pop
mov
and
in
in
pusha
add
sahf
clc
std
dec
insb
xor
loop
lock
loop
stc
cli
push
and
inc
js
push
repnz
js
lea
xchg
push
shrb
aam
insl
pop
sub
pop
xor
mov
jecxz
clc
add
ds
movsl
iret
jle
xor
fwait
pop
loop
je
sbb
mov
sub
daa
add
sbb
lahf
test
mov
jnp
add
inc
push
or
push
ret
jecxz
call
xor
dec
xor
and
stos
xchg
fwait
mov
jecxz
popa
xlat
out
inc
inc
nop
mov
cmp
inc
bound
jno
inc
mov
jge
push
int
push
ja
adc
out
push
dec
cwtl
add
fmuls
push
mov
adc
movsl
iret
adc
add
jbe
fstpl
add
in
cmp
push
mov
in
mov
lret
sbb
xchg
aad
push
std
into
pusha
into
loop
pop
sub
arpl
cld
push
sub
leave
js
push
mov
inc
insl
cmp
cmp
sahf
mov
push
push
inc
fcoms
insl
dec
shrb
mov
cmp
dec
mov
push
addl
inc
imul
mov
push
imul
sahf
cmp
ljmp
imul
jge
or
add
js
xchg
xor
inc
mov
mov
and
xor
ret
je
dec
out
incl
jne
pop
jmp
push
adc
and
imul
popf
sub
loope
sub
icebp
push
lcall
pop
fdivs
dec
lahf
adc
mov
lcall
mov
mov
mov
orb
cli
setno
jmp
out
sbb
enter
xorl
xchg
out
lahf
stc
adc
cld
imul
lods
xchg
ljmp
pop
loope
sbb
popf
stos
bound
ljmp
icebp
repz
xchg
lcall
aam
jle
cltd
in
imul
addl
xchg
fstps
xlat
vcvttpd2dq
imul
mov
mov
mov
sub
jle
mov
xlat
cld
dec
add
lds
sbb
or
xchg
jg
mov
out
jmp
mov
jp
mov
test
cmpl
cltd
and
gs
dec
adc
adc
jae
shl
jnp
mov
push
mov
nop
cmp
out
mov
in
cmp
mov
outsl
mov
out
cmp
jecxz
dec
push
sahf
in
js
add
push
or
sbb
and
rorl
idiv
in
leave
je
sbb
int
repnz
and
sbb
xchg
stc
out
mov
mov
inc
and
cmp
outsb
push
jns
aaa
subl
xchg
imul
mov
pop
loop
jmp
cmpsl
cmpsb
mov
addr16
jmp
jmp
xchg
mov
pop
test
in
mov
shlb
mov
jno
cltd
gs
movsl
mov
pusha
dec
ret
jo
inc
pop
pop
fbstp
cwtl
cld
in
pop
dec
mov
shl
imul
push
jl
dec
fwait
loopne
jmp
inc
mov
sub
call
or
subl
or
jg
xchg
jae
xchg
jle
pop
rorl
cmp
lahf
orl
ret
xor
imul
mov
gs
xchg
push
adc
push
sti
push
je
push
les
test
ja
mov
mov
roll
push
test
cli
add
inc
jge
sti
xchg
adc
icebp
push
inc
dec
fmull
and
std
imul
bound
fists
push
daa
fsts
and
fsubrs
or
pushf
sbb
mov
inc
pop
inc
in
xchg
push
cmp
insl
sbb
mov
xchg
push
das
sbb
out
cltd
dec
aad
pop
iret
iret
loop
pushf
jecxz
sti
mov
dec
ja
push
mov
enter
or
mov
or
fiaddl
mov
xor
insl
scas
movsl
mov
cmpsl
push
mov
xor
push
jb
mov
adc
cmp
push
rorb
inc
mov
dec
loope
std
xchg
xlat
ret
loop
add
dec
in
add
movsb
cli
jno
add
jb
negl
push
xor
cmp
test
outsb
movsl
data16
sbbb
dec
addr16
testb
mov
fstps
inc
insl
or
xor
and
dec
sahf
lods
cs
and
test
xchg
shll
test
rolb
push
pop
in
push
shlb
jb
xor
fdivl
hlt
popf
cwtl
imul
jecxz
push
shll
add
adc
mov
subb
dec
mov
aas
mov
lahf
cmp
dec
push
mov
ljmp
mov
xchg
cltd
and
je
pop
movsb
sbb
mov
jns
cwtl
jecxz
pusha
icebp
loop,pt
aad
ret
into
mov
std
jo
popf
lods
sbb
roll
cmp
mov
dec
add
and
mov
and
and
cmp
std
cli
stos
test
or
xorb
sbb
and
stc
mov
adc
mov
gs
xor
or
mov
aaa
mov
les
iret
sbb
sbb
cs
sub
fsubl
lret
test
and
mov
mov
mov
setb
lock
insl
clc
xor
addr16
cmp
mov
sub
sbb
pop
js
stos
push
adc
fnstenv
dec
dec
hlt
das
aaa
pop
test
mov
das
inc
mov
aas
xor
push
xchg
pop
in
iret
popl
fsubrl
test
sahf
roll
lret
in
je
push
mov
sbb
jp
sub
sar
mov
cmp
fnstsw
jno
lret
test
repz
andl
les
mov
in
lock
xchg
sbb
sbbl
stc
ret
clc
hlt
cmp
lods
paddsw
inc
mov
inc
cmp
pop
int
in
or
ljmp
sbb
jns
jg
xor
sti
inc
xchg
adc
fwait
bound
xchg
cmp
lcall
or
or
cmp
or
add
fs
fimuls
outsb
nop
push
mov
bound
mov
xor
dec
pop
push
add
or
add
push
xchg
jb
pop
xchg
adc
push
addr16
in
mov
ljmp
add
dec
sub
sahf
or
fsubrs
in
sbb
aam
sub
mov
xor
fwait
mov
xchg
js
rorb
xchg
sbb
pusha
stc
push
mov
aam
and
dec
and
lret
out
pop
jl
jmp
popl
out
dec
inc
fstpl
stos
xadd
pop
add
sub
xor
jg
les
insl
repnz
mov
lahf
ret
cmp
inc
insl
sbb
sbb
into
imul
aam
mov
mov
mov
xchg
jle
rol
ss
add
and
cli
push
pusha
cli
dec
jne
mov
add
sub
push
jle
testl
add
and
mov
data16
ret
in
cmpsl
mov
iret
jns
cwtl
xchg
xor
cmpsb
or
pop
cmpsl
repz
pop
or
fdivs
insb
adc
int3
scas
or
push
in
pop
data16
cmp
insb
stos
ret
jno
sbb
mov
fcmovnbe
repz
mov
adc
cmp
push
pop
stos
lods
xor
test
push
inc
jo
ror
mov
or
sbb
daa
lcall
add
in
dec
jno
test
outsl
shlb
pop
ss
shlb
sarb
jecxz
xlat
js
or
fnstenv
lods
cld
inc
push
in
lret
add
ljmp
mov
into
and
inc
inc
fisubl
pop
sbb
sarl
xorl
lret
mov
sub
inc
sub
xchg
fimuls
aad
js
sbb
in
data16
mov
sub
push
enter
mov
xor
mov
jae
inc
popf
movsb
pop
mov
subb
cwtl
stos
fmuls
xchg
add
mov
sahf
adcl
ja
pushf
out
fistpll
movsl
add
jo
jg
daa
xchg
frstor
repnz
jmp
cs
cwtl
cmp
and
aam
mov
mov
fnstsw
js
aas
jecxz
jne
notb
and
xchg
jns
mov
pop
xor
out
and
mov
jne
cmp
jb
std
mov
jmp
adc
cmc
inc
mov
sbb
cmp
out
mov
jl
inc
inc
outsb
inc
dec
jo
and
bound
cmp
mov
push
xchg
sbb
pop
aas
inc
iret
dec
nop
in
cwtl
dec
ja
cwtl
inc
pop
mov
cmp
mov
inc
inc
cli
fsubrs
lcall
push
mov
add
mov
inc
in
ss
lcall
add
mov
xor
rorl
loope
pusha
mov
dec
cmpsb
add
nop
test
subb
nop
sub
mov
cmp
lock
lock
push
cmp
mov
jbe
ljmp
outsb
or
pop
cmp
sbb
adc
and
jno
shr
dec
pop
int3
std
inc
mov
or
rcrb
les
fnsave
shlb
test
lret
jbe
ret
in
sub
test
sub
rorb
mov
ret
daa
ss
and
dec
xchg
je
lcall
ret
jae
push
jecxz
push
mov
mov
lret
outsl
pop
xchg
jno
add
inc
stos
mov
mov
pushf
adc
or
in
fdivrl
mov
bound
and
dec
loopne
ret
push
pop
cwtl
std
pop
divl
ss
clc
int
outsb
daa
out
js
std
fildll
fwait
int3
fwait
xchg
rcl
jo
mov
push
dec
mov
bound
cmp
xchg
mov
mov
jecxz
je
fwait
hlt
xchg
xlat
pusha
push
xor
jo
jb
cbtw
mov
lods
xchg
jmp
mov
out
xchg
addr16
xchg
arpl
int3
mov
jmp
shl
lcall
subb
mov
xor
xor
orl
push
minps
movsb
stos
and
pop
dec
sbb
or
movsl
add
in
icebp
xor
aaa
push
add
mov
pop
pop
int3
mov
mov
adc
or
pop
fwait
repz
mov
subb
add
jge
mov
add
das
push
out
aad
jbe
ljmp
mov
out
outsb
jg
mov
cmpsl
push
add
sub
sbb
add
sahf
fwait
loop
out
jo
fadd
pusha
stos
sub
vpandn
ret
pop
pop
mov
or
lret
imul
cltd
add
inc
push
mov
and
cmpsb
adc
cmpsl
imul
sahf
inc
clc
mov
xor
dec
sarl
test
mov
fdivs
int
shrb
adc
pop
fwait
add
dec
sub
aad
mov
outsb
mov
xor
mov
push
xchg
fwait
in
push
and
iret
add
jb
sub
rcll
cs
cmpl
mov
sub
xchg
in
jbe
repnz
int
dec
xchg
mov
rcrl
sbb
mov
int3
and
and
xchg
daa
lds
inc
mov
or
out
dec
or
mov
xchg
xchg
scas
pop
out
outsl
arpl
hlt
std
xor
mov
aaa
ret
jge
ds
stos
jo
dec
iret
cmp
lock
sub
outsb
iret
mov
jb
or
sub
data16
mov
jne
xor
out
jecxz
in
loopne
shlb
push
jge
in
push
pop
sub
inc
and
pushf
outsl
mov
cltd
mov
mov
fnstsw
stc
add
pop
addl
leave
xor
pop
cmp
cwtl
lock
lock
out
jae
lret
and
mov
loope
push
adc
inc
sub
mov
pusha
xchg
lds
testl
sahf
xor
test
pop
mov
ficompl
xchg
add
popa
gs
dec
push
lea
add
lea
das
inc
leave
xor
mov
or
stos
repz
aad
subb
xchg
xchg
popa
pop
pop
cmpl
or
stc
mov
pop
jecxz
or
add
push
imul
pop
mov
dec
sar
or
jo
adc
arpl
cld
mul
xchg
jbe
aad
and
movsb
cmpsb
jae
lahf
mov
into
and
dec
lcall
add
sbb
pop
ficoml
xchg
xchg
outsl
or
mov
push
push
push
inc
push
adc
inc
xchg
mov
iret
je
and
jo
loope
movsb
xchg
mov
inc
sbb
cmp
sbb
cwtl
mov
popa
shrb
sti
mov
adc
scas
xor
add
push
and
dec
sub
or
out
or
xchg
rcrb
or
cltd
fldenv
pusha
adc
push
sbb
push
fcomp
adc
stos
ljmp
xchg
popa
cmp
xchg
push
cmp
cmpsb
add
cmp
mov
adc
jmp
sub
and
out
inc
add
dec
cltd
jmp
mov
push
jae
dec
dec
cmpsb
adc
cmpsb
sbb
adc
push
add
push
push
insl
xlat
mov
xchg
pop
jbe
mov
sub
xchg
in
and
dec
push
ret
sub
and
adc
adc
and
mov
pop
fidivs
jecxz
stc
loopne
xchg
pop
mov
cmp
push
cld
push
jle
dec
jmp
in
jbe
cmp
in
rolb
js
inc
pop
xchg
testb
jae
mov
mov
and
inc
mov
in
ljmp
adc
xlat
push
maskmovq
push
sub
push
dec
mov
outsb
fsubrl
imul
cmpsl
xchg
stos
mov
dec
or
cwtl
scas
into
cmp
in
fmuls
les
or
adc
mov
cmpsl
xorb
out
push
pop
rorl
add
add
push
lock
in
jns
daa
fwait
inc
sub
add
adcb
cmp
xor
gs
cld
push
imul
jnp
xchg
loopne
imul
lods
or
je
xor
sbb
xchg
xchg
lods
ljmp
imul
dec
and
pop
xchg
mov
push
push
pop
xlat
test
movb
lea
fisubrs
lret
in
mov
lret
jmp
cld
mov
in
push
mov
pop
fstpt
dec
mov
xchg
or
psllw
sub
sub
sbb
testb
lahf
mov
add
psubusb
push
movsl
xchg
test
call
cld
ret
add
loop
es
jbe
add
fbstp
aad
pusha
push
push
xor
sbb
cmp
js
std
mov
jl
repz
sbb
cmp
test
jne
push
fdivs
insb
daa
movsl
push
push
shrb
mov
movsl
cmp
cmp
cmp
movsb
mov
idivl
mov
loope
outsl
pushf
add
jae
std
test
aas
mov
mov
adc
jno
imul
and
jb
xor
jno
dec
dec
adc
out
cmc
outsb
fs
cld
adcb
sbb
mov
dec
aaa
mov
lea
outsb
sub
imul
or
mov
loop
inc
mov
mov
inc
test
mov
mov
stc
arpl
jp
dec
lret
testl
cltd
xor
pop
sti
rcrl
push
jae
test
and
ja
mov
jb
addb
out
lds
dec
mov
scas
shll
push
lea
nop
mov
aaa
lret
add
mov
jae
fisttps
fs
jp
cld
push
loope
mov
cmp
bnd
out
dec
jo
mov
push
or
jbe
mov
mov
and
jb
dec
sbb
pop
ja
test
icebp
std
pop
adc
daa
ror
jmp
fs
loop
in
push
aad
ljmp
or
lods
jmp
mov
mov
cmp
push
dec
stos
cmc
addl
inc
aaa
mov
mull
iret
lea
data16
cmpsb
adc
adc
mov
cli
pop
xor
lods
fbld
push
push
ja
xchg
xchg
mov
scas
adc
adc
sbb
xchg
pop
jo
dec
clc
gs
xchg
pop
adc
xchg
aaa
pusha
das
pusha
mov
subl
in
sub
movl
xchg
mov
fsubrl
mov
ljmp
aaa
sub
mov
dec
dec
xor
lock
dec
sub
notl
popa
pusha
inc
sbb
rorb
pop
int
jl
mov
mov
and
lock
es
pop
cmp
and
sub
push
insb
sbb
imulb
sti
sub
push
xchg
mov
loop
ret
inc
in
cmp
cmpsl
jne
and
xor
pop
pushf
insb
data16
fadds
mov
pop
rorl
push
lahf
push
pop
pop
fadds
push
jns
sub
xchg
mov
cvtps2pi
fs
mov
ds
push
sbb
sarl
and
jl
in
sbb
sbb
outsb
fstl
jmp
addr16
inc
inc
call
in
and
js
les
stc
mov
or
add
mov
in
xor
sbb
ljmp
cmp
xor
jnp
xor
xchg
test
lret
sub
jmp
daa
mov
and
jmp
sub
xchg
fsubl
fucomp
loope
sub
dec
push
pop
std
das
roll
mov
mov
pop
or
dec
rorl
leave
out
std
mov
xchg
imul
xchg
das
icebp
popa
cmp
mov
xchg
out
mov
icebp
cmp
mov
mov
jmp
dec
fbstp
cmpsb
andb
mov
mov
sbb
push
int3
lcall
pop
pushf
test
das
mov
jae
sbbb
and
cmp
push
iret
mov
daa
xchg
out
mov
mov
cmpsl
push
pop
loope
addb
pop
sbb
cmp
jg
push
orl
sti
sub
sub
mov
xchg
cli
out
les
int
loope
stc
sbb
add
adc
pusha
call
cmp
loope
cmc
shl
adc
inc
lcall
pop
cltd
push
lods
pop
jae
faddl
cmp
xchg
pop
cmp
mov
jmp
addr16
lahf
je
stc
mov
sub
xchg
push
out
jne
xchg
test
mov
dec
jmp
pop
js
or
dec
popf
jl
xchg
data16
xchg
hlt
mov
fdivs
xor
xor
cltd
pop
out
mov
fcomip
cmp
dec
push
xor
xchg
sbb
or
addr16
aad
lahf
stos
dec
xor
sbb
add
pushf
jnp
daa
fistps
pushf
pop
fsubrl
cmpsl
enter
xchg
dec
mov
or
movb
jb
out
fwait
cmpsb
pop
and
jp
push
pop
int3
ror
fbstp
lods
mov
popa
out
push
in
xchg
pop
add
movsl
sub
scas
sbb
push
cs
ret
ret
add
dec
or
mov
es
mov
and
xor
stos
add
jg
dec
daa
je
xor
push
or
add
stos
adc
shlb
and
lcall
mov
hlt
in
xchg
mov
and
jmp
jo
ljmpw
shrl
push
push
sbb
inc
cltd
jge
adc
sub
test
add
xchg
ret
dec
repz
fmuls
sbb
mov
xchg
adc
pop
mov
cmp
ret
add
cld
pop
jle
scas
sub
in
mov
cs
mov
sub
cmpsb
mov
and
mov
into
shrb
mov
shl
sbb
ljmp
sbb
hlt
inc
jne
xchg
jb
scas
out
mov
mov
iret
cli
sub
dec
jns
xor
testl
mov
sbb
pop
lods
mov
dec
repnz
fwait
pop
test
sbb
xchg
xchg
push
ret
cmc
xchg
into
test
rcl
sbb
jmp
xchg
stc
sarb
mov
test
xlat
or
ss
stos
pusha
jae
movsb
fwait
popf
stc
mov
out
adc
sub
jae
push
mov
icebp
xchg
into
pop
xor
cmp
xor
mov
sbb
pop
js
repz
clc
xlat
fdivr
push
or
pop
addb
out
addr16
outsb
fistps
pop
xchg
loop
and
sub
stos
test
leave
lret
lods
cmp
fdiv
loopne
xlat
test
mov
movsb
ret
stc
pop
pop
into
fldenv
dec
jae
fidivs
shl
mov
mov
cltd
lods
and
cmp
mov
aaa
iret
fstpt
aam
xchg
out
into
push
mov
imul
push
mov
in
mov
sub
dec
pop
lods
les
loop,pt
pop
out
cs
arpl
fninit
fiadds
xor
ja
xchg
lds
inc
xorb
cmp
push
cmp
test
and
push
lods
jns
test
and
lods
xchg
pushf
cmp
lds
insb
je
jns
xor
daa
cltd
mov
sub
and
lret
jnp
dec
mov
out
mov
arpl
mov
lret
sbb
cmp
aam
enter
jmp
cmpsw
mov
popf
mov
and
xor
or
pop
loop
xor
adc
outsl
ret
clc
or
fwait
xor
popa
pop
out
adc
mov
inc
xor
add
or
jno
and
in
data16
mov
scas
divb
mov
lcall
jmp
shl
in
stos
or
xchg
addr16
jnp
inc
pop
insb
add
jg
nop
xor
andb
add
mov
jp
fwait
mov
add
aad
mov
adc
inc
and
jns
add
cli
popf
scas
ljmp
pushf
cmp
adc
movsl
bnd
into
fcomp
imul
and
lods
mov
mov
xchg
sub
sbb
repz
test
fs
xchg
imul
mov
cmpsl
mov
sbb
cltd
test
imul
idivb
add
ret
insb
cwtl
push
adc
push
pop
adc
pop
aas
jl
inc
xor
adc
cmp
mov
pop
inc
in
pop
or
daa
mov
inc
or
xor
push
jp
add
add
imul
pop
insl
stos
fdivr
xor
iret
int3
xor
lea
repnz
xchg
aam
test
mov
adc
mov
and
xor
divb
xchg
in
xor
movsb
mov
lds
xor
adc
push
mov
movsl
or
xor
xchg
mov
adc
cmpsb
jg
das
sbb
aaa
call
xchg
jp
arpl
jno
ss
out
int3
inc
sbb
cmp
jne
sbb
jno
inc
lcall
mov
imul
test
inc
iret
ret
imul
leave
cmpsl
mov
and
leave
mov
dec
inc
scas
xchg
sub
mov
jle
nop
les
sub
mov
cmc
xchg
adc
mov
rol
add
push
cmp
xchg
sub
lods
sub
push
xchg
mov
sub
sbb
clc
inc
cmp
jns
and
test
and
dec
mov
adc
ja
mov
ja
cli
aas
push
pusha
adc
mov
sub
dec
cli
push
aaa
push
dec
pop
sub
dec
cmp
xchg
clc
sub
dec
or
fwait
add
es
sub
insb
mov
jno
out
jne
sbb
fdivr
sub
cmp
icebp
dec
je
mov
pop
xlat
insb
imul
mov
push
sarb
int3
ficompl
dec
jmp
arpl
mov
ret
nop
cwtl
or
cmp
mov
xchg
leave
sub
lahf
sub
dec
std
insb
js
jg
mov
add
pop
pushf
in
or
mov
add
dec
fbstp
repnz
lea
imul
dec
jg
push
cmp
xchg
xlat
test
scas
xchg
dec
xchg
dec
inc
mov
jo
repnz
out
mov
fcompl
aad
cmp
repnz
das
jg
adc
lods
mov
cltd
js
daa
aaa
xlat
sub
pop
jg
push
incb
loope
or
pusha
sbb
mov
xchg
hlt
ret
sub
xchg
fidivrl
repz
mov
push
jae
mov
cmpsl
push
xor
cmp
es
add
sub
negb
sti
pop
test
xchg
ss
push
pop
sub
and
add
fdivs
rcr
into
aas
insl
mov
mov
out
xchg
jb
int
mov
pop
pop
aas
fcmovnbe
pop
push
add
stc
pop
out
stos
mov
icebp
rorl
adc
adc
mov
nop
repz
in
cli
ja
jne
lret
and
mov
stos
and
push
cs
loop,pn
or
sub
xor
jmp
fwait
cmp
imul
stos
in
push
inc
or
mov
inc
mov
dec
lods
xor
mov
xor
sbbl
inc
nop
int3
sbb
out
mov
ret
aad
or
xor
fistpl
or
fsubs
pop
push
sub
push
scas
mov
xchg
test
fs
sbb
test
je
pop
push
mov
test
rcrl
int3
mov
cmc
add
aaa
pop
scas
in
lock
and
stos
je
loope
into
sbb
ffreep
gs
xchg
sbb
outsb
pop
stc
fldcw
push
cmp
insl
fdivs
icebp
call
jecxz
mov
or
scas
fwait
lea
xor
imul
mov
adc
cltd
xor
mov
ss
jno
pushf
jp
lods
jge
pushf
pop
js
xchg
or
xor
pop
imul
fs
repz
ret
sub
ljmp
inc
add
xchg
mov
mov
loopne
insl
jns
ds
mov
mov
mov
and
pop
jl
lods
pop
cs
bound
push
daa
in
push
fstpt
push
push
out
sub
enter
inc
mov
js
jne
ljmp
add
add
sub
mov
mov
scas
push
xor
jae
popf
aas
jl
xchg
in
add
in
in
adc
rcrb
sub
sbb
jmp
pop
data16
inc
sbb
adc
int
push
jbe
cmp
cmp
cmp
mov
mov
lods
sbb
jnp
dec
adc
cmp
cmpb
scas
clc
push
jne
mov
popl
mov
in
jae
outsl
or
call
repz
and
mov
negl
mov
outsb
insb
or
mov
inc
mov
xchg
adc
lods
cs
mov
sub
push
mov
and
inc
cmpsl
or
mov
inc
pop
inc
push
push
ret
nop
fisubl
xchg
sbb
ja
or
add
fsubrs
testl
adc
mov
mov
cltd
mov
outsl
movsl
sub
out
divb
ret
je
mov
scas
pop
stc
lcall
inc
scas
mov
mov
call
out
aad
rclb
mov
xchg
test
int3
stc
adc
mov
das
ja
push
mov
iret
fcoml
adc
inc
lods
push
cmpsl
dec
leave
jnp
dec
mov
repnz
dec
mov
add
mov
fcmovnu
and
shl
mov
cwtl
mov
out
sub
push
fcompl
add
cwtl
fs
sbb
pop
pop
xrelease
lahf
movsb
filds
cmp
sub
or
pop
or
das
add
addr16
mov
mov
fsts
xchg
sbb
jge
jecxz
rcr
and
sbb
bound
clc
dec
adcl
in
stos
inc
sub
dec
jo
fcmovu
out
jp
mov
inc
sti
pop
and
dec
xchg
shl
jl
mov
call
std
lods
mov
push
test
je
sbb
arpl
adc
sahf
mov
aas
popa
or
pop
or
ljmp
cld
dec
and
push
popa
sub
scas
inc
out
jmp
aad
jns
xchg
dec
imul
push
and
adc
xor
xor
stc
cmc
mov
data16
cwtl
out
xor
lock
aas
fistpl
fsubs
push
arpl
cld
mov
push
cli
sub
out
gs
repnz
dec
out
lret
inc
clc
mov
or
push
sub
mov
adc
mov
jle
sbb
popf
in
mov
aaa
pop
mov
loope
mov
stc
lods
add
gs
cwtl
repnz
sub
sti
cmp
leave
push
inc
out
stos
adc
cwtl
repz
xor
cmc
test
subb
adc
sarl
push
imul
pop
call
addr16
movsl
mov
and
cmp
idiv
sti
or
rcl
cwtl
into
clc
hlt
xchg
add
dec
jl
getsec
or
mov
mov
pusha
and
ficomps
push
xchg
mov
sub
mov
xor
sahf
sub
jns
cmp
push
pop
jl
pop
mov
inc
jecxz
jne
dec
cld
pop
adc
test
or
cmpsb
adc
lret
sbb
mov
sti
test
pop
scas
cmp
fstpt
push
cs
xor
adc
xchg
push
dec
cmp
mov
mov
lock
scas
cmp
movsl
ficoml
and
xchg
inc
or
js
call
mov
bound
sub
push
push
scas
cmp
xchg
dec
pusha
mov
ds
inc
addr16
jnp
adc
inc
lcall
lods
scas
inc
rclb
adc
or
push
mov
fmuls
dec
cli
push
test
orl
adc
jg
repnz
ja
dec
adc
out
in
insl
mov
jmp
stc
or
cmp
push
push
scas
add
testb
push
jle
push
dec
pushf
pop
imul
push
mov
mov
pop
aas
dec
sbb
ds
xor
in
sub
repnz
push
xor
lret
xchg
ja
or
vphaddbd
cwtl
sub
testl
inc
pop
dec
xor
test
jl
cmp
out
xlat
imul
scas
dec
cmp
repnz
out
sahf
xchg
push
scas
jg
sub
adc
popa
in
add
lods
scas
jne
cld
fwait
mov
ret
jno
stos
inc
or
xor
xchg
push
push
test
mov
cs
or
add
xor
mov
mov
lret
xor
scas
jecxz
roll
lahf
jmp
shll
push
sbb
lods
push
mov
sbb
mov
inc
lds
inc
mov
dec
xor
inc
outsb
lcall
aaa
aam
imul
cwtl
cmpsl
push
sahf
rorb
test
aaa
add
xlat
or
mov
inc
cmc
in
or
dec
or
clc
lds
pop
aaa
add
pushf
pop
int
cltd
lock
clc
sti
out
jmp
push
out
ret
insl
adc
mov
cld
jno
pop
cmp
divb
lahf
lcall
adc
je
mov
test
cltd
mov
stc
loope
aas
jb
or
xchg
pop
call
inc
cli
add
xchg
popa
mov
jmp
aaa
and
mov
xchg
mov
sub
aaa
mov
sahf
cli
pop
push
ret
xchg
ja
mov
mov
shrl
xchg
push
xor
sbb
push
sbb
pop
pop
call
and
unpckhps
sahf
ds
jae
xchg
fldenv
ds
cmpsl
sbb
rcrl
call
nop
in
mov
pop
aam
xchg
std
mov
or
ss
mov
fwait
mov
mov
test
loop
cld
add
push
enter
clc
push
inc
jl
mov
jle
popa
push
lcall
out
cmp
andb
out
add
jge
inc
pop
adc
xlat
stos
xchg
xor
xor
shrb
dec
push
in
aas
shlb
push
loope
or
movsb
push
xor
pop
push
xor
arpl
shrl
jnp
stos
out
lods
dec
test
inc
mov
bound
aam
loopne
or
daa
lret
xor
mov
sbb
cmp
pop
rorl
xor
mov
andb
enter
xchg
cmp
shrl
jle
fwait
or
pop
clc
lret
xor
xor
lahf
rolb
aad
mov
sbb
and
in
xchg
out
and
adc
mov
mov
xor
repnz
mov
pop
je
test
fadd
lret
hlt
and
ds
inc
call
xchg
push
scas
xchg
lret
imul
mov
pop
adc
dec
xorl
stos
enter
cmp
cmp
shll
aad
sbbb
pop
mov
popf
xor
jbe
test
imul
icebp
or
lds
negl
scas
inc
dec
rclb
and
push
mov
ud0
cmc
fdivs
lea
loope
ds
pop
out
dec
lret
mull
or
xchg
mov
jmp
mov
xor
jbe
imul
rcr
repz
jb
push
sti
pop
jmp
adc
pop
outsb
pop
out
fildll
gs
pushf
clc
sbb
imul
or
loop
jne
add
or
ret
lods
mov
mov
dec
push
ret
push
les
in
jge
fwait
sbb
aaa
das
jp
jg
mov
pop
sub
jne
xor
lods
cmpsb
push
lds
inc
pop
sarl
push
inc
ds
cmc
mov
loop
fcmovnb
movsb
dec
cltd
leavew
js
sub
jmp
push
inc
push
sti
mov
or
fidivl
adc
xor
push
mov
cmpsb
rorl
inc
inc
mov
jle
ja
add
cmp
fdivs
inc
adc
ljmp
jg
add
push
fdivrs
imul
fildll
xchg
dec
cwtl
and
mov
sub
jbe
lret
mov
xor
inc
imul
sbb
rclb
jno
dec
push
mov
push
jle
mov
fdiv
out
xchg
cmp
scas
and
dec
or
movsl
sar
stos
cltd
rorb
ljmp
xor
xchg
inc
jnp
aad
cwtl
test
push
cmpsl
xchg
xor
stc
stos
jg
icebp
dec
add
hlt
testb
aas
mov
leave
sbbl
pop
out
aad
dec
fwait
inc
fs
or
mov
je
pushf
in
dec
xchg
hlt
sub
fisttpll
cmpl
out
imul
mov
jle
or
rorl
movb
lcall
inc
idiv
jo
ret
xchg
fucomi
sahf
push
mov
push
cmp
int
and
mov
and
fdivrl
lods
pusha
or
and
arpl
add
jae
mov
push
inc
cs
inc
cmpsb
mov
or
cmp
loop
fbstp
pop
cmp
inc
sub
xchg
mov
cmp
fbld
cmp
dec
mov
pop
arpl
sbb
and
push
test
aad
add
mov
aas
sbb
movsl
jne
fimull
arpl
imul
dec
in
push
outsl
pop
ret
jge
sarl
sbb
push
mov
xor
sub
arpl
xchg
loope
xchg
xchg
xchg
aaa
ljmp
cmp
aas
inc
push
outsb
repnz
insl
add
subb
and
cmp
movsb
pop
mov
pop
or
pop
shll
notl
jmp
outsl
pusha
add
sub
or
aad
scas
lock
xor
mov
xchg
cmp
lret
popf
adc
cmp
pushf
jne
adc
in
cmpsl
and
outsl
or
es
dec
aaa
fidivrl
mov
loopne
sub
out
sub
jl
movsb
or
lods
add
sbb
lock
fistpll
adcl
push
and
pop
out
in
into
fisubs
test
push
cltd
mov
aam
and
mov
pop
pop
je
pop
ret
jne
dec
pop
sub
push
mov
ficompl
lods
mov
inc
sbb
cmp
aaa
bound
and
stos
cmpsb
or
add
rcr
or
scas
push
sub
inc
dec
sub
imul
cs
inc
imul
mov
add
push
dec
dec
inc
mov
ret
fiaddl
ffreep
dec
jl
mov
jmp
push
aad
or
mov
and
and
in
cli
or
int3
loopne
out
leave
and
rorl
movsl
inc
xchg
push
jb
jle
imul
adc
test
lret
push
hlt
cmp
test
loopne
jbe
sbb
lods
aad
fisubl
dec
inc
jl
test
mov
push
add
jne
dec
mov
test
stc
xlat
sbb
popf
adc
in
in
aaa
imul
and
aaa
cmp
adc
insb
ds
or
testb
jp
xor
insb
inc
and
jge
fsubp
sti
or
lds
push
sbb
or
mov
jmp
pop
std
cmp
dec
add
loop
shlb
xchg
inc
mov
xchg
or
outsb
dec
cmovp
mov
pop
stos
fdivs
xchg
xor
imul
in
pop
dec
ss
mov
sub
ljmp
jp
repnz
sbb
mov
jns
jns
sbb
cmp
in
scas
cs
inc
mov
cli
dec
adc
pop
mov
push
inc
cmpsl
outsb
iret
cltd
repnz
ss
shlb
cmpl
jecxz
repz
pop
add
in
lret
sub
sbb
shlb
testb
imul
mov
or
subb
push
outsb
mov
rorb
mov
shrl
mov
pop
add
jp
jge
add
sbb
cmpsb
insl
jle
dec
mov
andb
fidivrs
jp
xchg
sar
aad
cmpsl
ds
dec
shlb
mov
ljmp
adc
loop
and
or
gs
mov
add
xorl
loope
jp
xchg
loop
adc
adc
adc
ja
inc
lea
fchs
popa
inc
mov
cltd
cmp
movsb
mov
insb
add
int3
popf
fimuls
xchg
pusha
cmp
insl
aas
sbb
mov
xchg
fldl
add
mov
pop
in
fnsave
out
xlat
mov
test
xchg
ds
jl
movsb
xlat
adc
leave
adc
decl
sbb
adc
popf
insl
mov
jmp
shrl
in
idiv
jle
mov
xor
mov
mov
mov
out
dec
scas
stc
cwtl
xor
loope
mov
jae
inc
mov
mov
pop
dec
add
and
mov
dec
adc
out
lea
loop
jae
xor
xor
sti
push
adc
sub
shlb
mov
sub
scas
cmp
clc
sahf
inc
xchg
into
push
daa
push
ss
fisubs
orl
jnp
repz
sbb
or
mov
adc
in
lods
into
xlat
out
pushf
fdivr
iret
cltd
mov
test
inc
ja
loop
in
fstps
xchg
xchg
push
test
popf
and
out
push
jmp
add
xchg
mov
test
imul
daa
iret
enter
sahf
outsb
cmpsl
add
xor
jnp
cltd
repz
fistps
orb
nop
jnp
aas
pop
dec
lahf
movsb
pop
mov
cltd
popa
pop
jno
lcall
pop
inc
adc
arpl
je
stc
pop
addr16
inc
mov
jae
gs
stos
dec
outsb
sub
leave
mov
inc
in
out
test
arpl
arpl
mov
test
mov
ja
pop
xor
scas
ficompl
pushf
cli
cmp
sub
jne
jl
cmp
dec
mov
out
pop
and
pop
cmp
stos
popf
mov
xor
pop
sub
lahf
sbb
mov
cmpsl
popf
cmpsl
das
ss
repnz
dec
mov
out
adc
jno
pop
add
test
push
xor
sbb
cli
or
repnz
cmp
xchg
mov
rcrb
and
and
mov
cmc
jge
ss
dec
add
pop
xor
gs
loope
test
lret
jge
jo
sbb
pop
xchg
jge
sub
mov
inc
test
orb
ljmp
out
mov
push
mov
push
and
push
jbe
int
and
divl
pop
inc
add
xor
sbb
sbb
test
mov
sbb
jne
and
aad
xor
mov
imul
test
add
movsl
mov
mov
jo
add
sub
in
das
pop
sbb
pop
cmp
mov
stos
or
imulb
mov
sub
aas
cmp
cmp
push
sti
js
push
aam
sar
or
je
hlt
scas
mov
jbe
daa
push
dec
mov
js
jmp
jae
cmpsl
lea
jne
lds
scas
fidivs
and
add
push
test
push
xor
mov
inc
lods
sub
fcoml
jp
mov
jne
xchg
xchg
mov
jns
sub
sub
xor
nop
add
test
jmp
ror
mov
pushf
repz
pop
insb
jl
cs
adc
jb
pop
inc
loope
sub
sbb
adc
sub
cmp
pop
loopne
add
xchg
mov
pop
dec
xlat
insl
out
lret
dec
mov
xchg
ss
push
sub
roll
jp
lock
lcall
aaa
dec
fildll
push
jae
int3
mov
add
pop
mov
outsb
xchg
cli
ljmp
sarl
jo
xor
mov
pushf
cmp
fimull
cltd
mov
push
cmp
push
stos
lds
popf
aam
leave
push
mov
and
sbb
mov
aam
outsl
popa
or
cmpl
out
mov
sbb
dec
mov
jl
stc
scas
xor
outsl
inc
aad
nop
sbb
push
scas
sbb
inc
jp
xor
mov
sub
jne
xchg
sub
xchg
jo
pop
sti
fcmovne
movsb
lods
cmp
pop
int
add
repnz
repnz
adc
pop
xchg
pop
push
add
cmpsl
iret
test
loopne
push
cmpsl
leave
xor
pop
lahf
mov
insl
in
iret
data16
cwtl
lods
xor
pop
dec
and
pop
pop
addr16
jno
jmp
mov
ss
push
push
add
xlat
cmp
jl
cmp
or
aaa
out
mov
dec
icebp
outsb
xor
mov
aam
fwait
shrl
out
pop
add
adc
test
movsl
sub
lcall
orb
push
imul
xor
xchg
aas
inc
sub
repnz
pop
lock
mov
inc
lcall
sbb
adc
dec
pop
loop
fmull
test
mov
sahf
rcrb
scas
loope
ret
cmp
leave
mull
dec
xchg
loop
addr16
into
jns
out
fadds
stc
pop
sbb
jne
mov
outsb
mov
dec
addr16
pop
jle
das
test
xor
out
daa
push
dec
sub
fwait
xchg
xlat
ljmp
and
movsb
movsl
cmpsb
jge
movsl
call
inc
fs
or
mov
pop
and
jp
push
xchg
jmp
xchg
jl
ljmp
and
inc
push
aam
sub
into
mov
callw
insb
jnp
push
cmp
push
sbb
lcall
adc
lahf
loop
loope
or
arpl
push
ds
out
push
in
mov
cwtl
jnp
aas
out
sahf
negb
push
sbb
cmpsb
dec
pop
mov
outsl
fcoml
jnp
pop
mov
adc
inc
pop
jle
jmp
insb
loopne
shll
mov
movsl
lock
push
mov
insl
shrl
mov
xchg
add
mov
inc
insb
jo
bound
mov
or
fs
iret
stos
les
sahf
pusha
mov
scas
in
loope
adc
cmc
repz
mov
sub
inc
int3
mov
add
cmp
sub
or
jno
fnstenv
jmp
repz
jmp
aad
cmp
ds
jb
aaa
adc
xchg
pop
push
pop
jecxz
sub
movsl
test
decl
dec
ss
xchg
insb
or
pushf
adc
sbb
stc
lret
or
or
mov
cmp
sti
fidivrs
add
cmpsl
out
test
dec
out
and
or
lcall
dec
lahf
jle
cmpsl
pop
xor
xchg
lock
mov
es
sub
fs
jle
movsb
mov
push
lods
mov
xlat
gs
jg
cmc
aaa
pop
push
jle
in
lds
inc
ret
shl
flds
push
dec
sbb
enter
rcll
mov
mov
mov
lret
pop
cmp
sub
sub
aaa
lahf
scas
push
pop
jns
pop
inc
mov
xchg
mov
in
push
mov
pop
int
fucomip
inc
cld
cmp
inc
movsb
movsl
push
push
fstp
mov
cli
loop
andl
jnp
adc
incb
mov
push
jge
pop
or
lods
repz
or
shl
inc
cmp
mov
stc
es
cmp
jno
pusha
push
cmp
test
add
pop
mov
mov
je
dec
das
or
mov
sbb
insb
jae
xor
arpl
shl
xchg
add
xchg
hlt
mov
push
insl
jg
mov
sbb
xor
dec
cmc
daa
jno
cltd
lods
push
shll
pop
enter
sub
pusha
inc
sub
fistl
cmp
clc
jns
sbb
ljmp
loop
push
sbb
rorl
fimuls
das
pop
popf
in
xor
mov
add
cmp
cmp
sbb
sarb
adc
ss
push
mov
outsb
push
mov
mov
dec
rol
inc
lods
cmpsl
xchg
jbe
jle
push
fisubrl
push
mov
jmp
icebp
inc
iret
ficoml
xor
push
out
sbb
inc
subl
in
movsb
dec
xor
pop
jno
data16
mov
test
cmp
pop
sub
es
add
ret
xchg
adc
pop
push
fiadds
sbbb
push
pop
cwtl
jp
fsubrp
mov
xor
scas
scas
clc
jns
and
xchg
js
inc
pop
cmpsb
dec
xchg
lret
int
outsb
mov
popl
testl
in
aam
adc
pop
push
inc
pushl
dec
lds
lods
lods
fistps
add
xchg
xchg
and
sbb
test
xor
leave
sub
or
xor
test
fmull
in
pop
sbb
sub
mov
xchg
inc
add
jmp
mov
rcl
dec
test
mov
insb
mov
je
stos
fldcw
sbb
imul
popa
lret
in
push
mov
mov
popa
inc
mov
xor
push
fisttpl
clc
pop
or
xchg
mov
dec
and
push
lods
lcall
vpermi2d
adc
cmp
mov
fistl
xor
sbbb
fdivr
mov
pop
iret
in
mov
arpl
xor
add
mov
jecxz
xchg
cltd
aam
popf
ret
sbb
ror
outsb
call
add
push
lds
aaa
dec
add
mov
les
loopne
mov
rcr
aam
or
pusha
int
adc
lock
xor
leave
int3
xlat
jg
arpl
dec
imul
cld
jnp
aas
sub
push
imul
fidivrs
cmpsl
and
mov
mov
sub
push
mov
cmp
dec
fdivrs
fmuls
and
aaa
xchg
add
sbb
cmp
mov
pushf
stos
pop
or
sbb
and
inc
mov
icebp
std
int
scas
popa
add
and
push
iret
cld
jp
lods
test
je
cmp
inc
shl
xchg
adc
xchg
mov
push
daa
mov
jne
gs
fwait
leave
fstp
loope
pop
or
xor
shrb
or
ds
movsb
into
cmp
add
xchg
sti
hlt
pop
iret
out
xchg
jl
fistps
iret
outsb
inc
cmpsl
mov
push
push
out
cmp
int
testl
or
cmp
mov
fcom
and
sbb
xchg
adc
js
js
cwtl
es
roll
je
mov
inc
jno
push
or
cmp
push
and
jmp
sti
imul
leave
lahf
dec
sbb
outsb
adc
sub
jo
ret
pop
je
cwtl
adc
mov
cmpsb
dec
popa
insl
sub
lods
cli
xchg
stc
sbb
dec
test
jle
stc
negl
dec
loope
add
loopne
mov
jl
jg
jne
ss
pop
mov
jmp
xchg
dec
mov
pop
popa
das
aad
cltd
sbbl
out
mov
pop
adc
enter
adc
es
out
ficomps
xor
add
divl
lds
fs
cmp
xchg
sub
inc
flds
push
xor
add
add
add
pop
arpl
bound
push
push
mov
pop
mov
adc
mov
dec
div
lock
jb
fisubl
adc
icebp
adc
dec
cmp
or
pusha
push
pop
fcomi
lcall
adc
inc
lret
faddl
loop
inc
les
push
xor
push
mov
rcl
xchg
xchg
es
xor
ret
iret
jg
mov
jmp
into
scas
int
ret
adc
mov
cmp
or
out
testb
ds
mov
and
es
insl
es
fwait
ret
push
jnp
lea
mov
mov
xor
pop
ja
push
aaa
xchg
dec
stos
add
mov
and
std
jo
ret
icebp
mov
xchg
lock
push
sahf
out
mov
in
jnp
sub
inc
cmp
in
dec
add
stos
fcomps
push
fnsave
mov
pop
jae
shll
xor
out
dec
lea
ljmp
cmpsb
xchg
mov
or
jnp
stos
roll
add
in
shr
xor
addr16
cltd
daa
adc
push
fs
cmp
enter
fucomip
in
test
sub
xor
sbb
and
cmp
sub
cld
cmpsl
sub
int
jb
clc
jbe
arpl
ljmp
and
adc
scas
push
rclb
enter
into
sub
shr
ss
push
fs
rolb
dec
repz
pusha
push
es
adc
jne
dec
dec
adc
xchg
cmp
aaa
shlb
and
lds
jnp
adcl
outsb
xchg
pushf
mov
lret
pop
mov
or
shll
sub
push
out
sub
sub
mov
pop
jns
bound
ds
inc
xor
outsb
outsl
and
lods
lods
xchg
mov
sub
std
pop
lahf
and
inc
popa
or
dec
pusha
dec
cmpb
or
insl
mov
clc
inc
jle
jmp
push
fs
iret
mov
addl
popf
fcompl
xor
pop
fnsave
popf
fiaddl
push
cwtl
mov
hlt
fwait
jmp
xor
dec
or
enter
add
ficoml
and
repnz
cmp
dec
mov
sub
cmp
mov
adc
xor
scas
pop
ror
push
push
lods
or
dec
leave
cmp
in
adc
dec
mov
cli
dec
outsl
addb
rcrl
clc
mov
popa
mov
add
out
add
fcoml
lahf
xor
sub
idiv
mulb
cmpsl
jmp
sub
imul
les
cmp
ficoms
mov
cmp
loopne
add
lcall
aad
push
xor
popa
mov
jmp
outsb
xor
inc
xchg
or
inc
push
sub
and
xor
in
lcall
sbb
cs
sub
and
fdivrp
jecxz
aas
xchg
jmp
pop
stos
test
lea
jbe
stos
dec
movsb
outsl
push
lahf
hlt
sbb
cmp
pop
sub
lock
push
push
test
adc
fstpt
pushf
inc
xchg
pop
fcompl
out
inc
cwtl
mov
sub
scas
sub
jmp
sbb
loope
push
mov
or
add
sbb
dec
jbe
ljmp
sub
mov
and
adc
pop
out
adc
cwtl
jge
push
inc
gs
sahf
call
lea
aad
or
cmpsl
add
imul
fimuls
test
lods
shll
xor
repz
inc
mov
pop
jne
mov
jle
cltd
and
ds
or
negb
pop
xor
jecxz
clc
aaa
lea
sar
inc
add
sub
dec
fisttpll
scas
and
dec
sti
xor
shrl
mov
aaa
pop
mov
cmp
ret
xor
adcl
mov
adc
outsb
cmp
stos
loop
inc
lahf
sbb
scas
pop
pusha
inc
std
fsts
xchg
cltd
dec
repz
mov
xchg
mov
mov
aas
pop
lea
es
outsl
ss
arpl
jg
lea
dec
dec
dec
popa
rclb
lret
mov
jecxz
jg
dec
mov
push
lea
push
xor
inc
jle
ja
xlat
in
mov
pop
sbb
sub
push
add
mov
popa
ds
inc
xor
loop
out
cmp
lock
inc
and
outsb
notb
loope
mov
fstl
mov
ficomps
jmp
add
pop
and
jnp
jno
sub
add
mov
movsb
mov
test
pop
cld
test
ljmp
adc
lods
pushf
and
push
and
jne
adc
fisubrs
imul
dec
pop
pop
rorb
test
and
stos
std
outsl
inc
sub
inc
or
cmp
xchg
mov
push
pop
inc
sub
adc
aas
inc
inc
pop
leave
mov
enter
add
fstpt
sub
into
mov
sub
cmpsl
cmp
xor
pop
and
in
xor
jmp
xor
insl
add
call
daa
lcall
sbb
in
mov
popa
fistps
leave
adc
xor
or
jg
add
outsb
shll
fwait
pusha
mov
mov
jbe
leave
add
bound
add
inc
ret
rorl
ljmp
push
cli
int3
rorl
insb
jmp
pop
negb
out
iret
sbb
cld
scas
sub
mov
lret
loope
roll
je
dec
lods
pop
lret
cmp
jns
xchg
xor
call
cltd
in
sti
mov
pop
test
xor
cwtl
mov
adc
in
xor
gs
das
push
fcmovnb
mov
mov
push
roll
mov
sar
mov
xchg
or
xlat
clc
mov
int3
and
push
mov
adc
repz
lret
mov
arpl
out
xlat
jns
xchg
inc
imul
mov
orl
inc
lods
les
test
mov
fimuls
sbb
aaa
test
adc
ficoms
outsb
mov
ror
lds
cmp
xor
xchg
nop
repz
jnp
roll
and
cmpsb
inc
popa
js
jle
insl
in
cmp
daa
jbe
lret
pop
in
pop
sbb
xchg
push
mov
ret
cmp
xor
cmpsb
call
orb
inc
add
ror
mov
femms
xorb
sub
jae
or
mov
scas
xor
ret
push
dec
mov
inc
push
add
sahf
repnz
push
xor
aaa
lock
dec
jmp
mov
fmuls
ss
inc
repnz
shll
mov
xchg
and
fsubl
sub
pop
add
leave
sbb
icebp
outsl
sbb
addb
sub
out
dec
call
mov
test
pop
push
dec
bound
or
inc
cltd
xor
fxch
mov
das
lahf
mov
imul
xor
adc
jg
lock
outsb
andb
xchg
mov
js
std
adc
push
add
je
repnz
inc
jnp
scas
movsl
mov
lods
sahf
pushf
jl
and
in
xchg
mov
std
dec
lock
xor
add
sub
mov
mov
idivl
add
jmp
cmpsb
inc
loope
lods
sbb
fwait
aaa
in
cmpsb
jmp
jmp
cmc
dec
push
in
fistl
jo
xchg
gs
loopne
clc
push
clc
cltd
mov
stos
and
outsl
sahf
push
and
repz
mov
or
xor
push
cmp
repz
add
subb
jl
mov
shl
adc
xlat
test
and
rcr
ja
and
jae
inc
mov
pop
leave
mov
loop
popf
outsl
or
int
daa
iret
test
addr16
cmp
mov
or
ljmp
jl
sub
icebp
mov
iret
hlt
inc
mov
ss
dec
insb
inc
or
sarb
push
ljmp
sub
std
cld
dec
std
cmp
fstpl
leave
cmpsl
xor
movsb
cmc
mov
clc
adc
add
adc
jo
cmc
xlat
add
jl
in
fildll
cltd
popl
dec
mov
stc
adc
lods
adc
mov
sbb
cld
sar
mov
cld
pop
dec
aaa
mov
ja
add
mov
insl
stc
cli
or
cmpsb
xchg
sbb
fidivrl
call
xor
insb
loopne
push
std
sub
cmp
imul
push
insl
cmpsl
xchg
popf
or
pop
fsubl
xchg
popa
xor
scas
add
add
pushf
or
and
xor
pop
mov
test
push
adc
btc
and
inc
mov
insw
dec
loope
sub
mov
mov
lret
faddl
lcall
xchg
cmc
jmp
loop
sbb
popa
shlb
leave
add
mov
hlt
fwait
pop
jns
test
mov
lock
mov
xchg
jnp
dec
orl
mov
mov
les
lock
cs
fisubl
int
movsl
test
mov
xor
mov
fcompl
push
ja
jno
sti
dec
popa
jb
mov
clc
sarl
cltd
out
sahf
xchg
xchg
mov
adc
sbb
test
fucomi
loopne
add
xor
inc
jmp
pop
ds
aad
icebp
xor
fnstcw
mov
pop
sahf
leave
mov
pop
lret
enter
mov
mov
out
in
xor
sub
cmc
in
mov
aaa
stc
sub
sbb
push
mulb
outsl
iret
daa
stc
mov
cmpsl
mov
clc
shrb
push
xor
mov
cmp
xor
or
fimuls
jbe,pt
adc
pusha
sbb
inc
repz
jnp
movsl
es
adc
insb
mov
sbbb
jp
shll
bound
ds
sahf
adc
sub
sbb
xchg
out
adc
ljmp
lods
sub
jnp
xor
mov
sub
pop
mov
enter
add
hlt
mov
idiv
xchg
mov
sbb
sbb
in
and
cmp
push
mov
loopne
inc
ret
jp
test
movsb
ficoms
pop
adc
mov
fidivrl
pop
sbb
cltd
push
mov
mov
jns
fnstenv
cld
mov
pop
test
cmp
jnp
cmp
cmp
jmp
es
pop
test
shl
adc
cmpsl
add
xor
imul
fst
pop
cmpsl
aad
xor
mov
xchg
inc
fwait
mov
mov
adc
in
push
daa
push
cld
fwait
mov
cmp
mov
adc
pop
ss
fiaddl
dec
push
repnz
jne
adc
add
test
jmp
test
sub
mov
lahf
loop
les
js
test
xchg
pop
cli
pop
test
inc
cwtl
mov
adc
imul
idivb
jge
addr16
xor
xchg
inc
pop
pop
mov
sub
imul
jecxz
or
xor
and
xchg
xor
insl
push
mov
mov
lock
cmp
popa
and
orl
in
fstps
or
xor
jo
xlat
into
ret
pop
cmp
add
adc
mov
adc
sbb
ja
loope
sbb
mov
mov
les
inc
ja
add
add
or
leave
ja
fwait
lods
pop
fsts
mov
stc
add
fisubl
push
mov
lcall
cmp
inc
mov
xchg
lods
stos
in
insb
mov
outsl
sti
out
lods
jb
lea
cmp
clc
das
sbb
pop
mov
inc
xchg
cmp
stos
add
mov
mov
pop
nop
ret
movsl
je
outsl
cmpsb
cmc
add
push
jge
test
mov
into
lcall
imul
das
js
inc
add
mov
dec
dec
push
sub
jmp
xchg
sub
addr16
cmpsl
add
dec
xchg
pop
dec
lods
adc
fdivl
push
jb
push
shrl
jae
or
mov
jo
pop
mov
jns
and
jb
and
xchg
in
cmpsb
xchg
insb
mov
mov
adc
ds
in
jo
hlt
and
mov
scas
add
xor
ret
push
push
push
adc
jo
sbb
or
mov
push
out
int
popa
pop
rclb
mov
hlt
stos
vpmuludq
dec
push
cmp
mov
xlat
jle
in
std
jmp
std
xor
idivb
loopne
hlt
iret
sub
dec
inc
xlat
inc
daa
adc
arpl
sub
pop
xchg
ss
arpl
add
sarb
cld
bound
mov
push
pop
push
ja
mov
inc
mov
xchg
lock
lods
mov
xchg
pop
mov
inc
data16
push
mov
cs
push
addr16
pop
mov
pop
and
addb
push
ret
in
inc
lcall
inc
popf
int
xor
push
cld
xchg
dec
or
cmp
dec
repz
icebp
lods
push
lcall
dec
sbb
sub
mov
mov
push
xchg
pop
clc
sbb
push
imul
insb
fwait
pop
imul
fistps
cmp
push
stos
nop
sub
rcr
rcrb
or
mov
jmp
mov
sbbb
out
push
ds
mov
lea
xchg
mov
inc
or
mov
and
dec
mov
mov
xchg
inc
lcall
btc
lods
mov
das
and
daa
jmp
fs
sbb
imul
add
adc
add
adc
jl
rcll
push
addr16
mov
ret
jg
sbb
xor
jns
jecxz
jl
push
pop
xor
enter
and
pushf
lret
sub
repz
mov
lcall
pop
mov
dec
jge,pn
repz
mov
adc
ja
aaa
aas
push
mov
addr16
lret
push
out
test
jg,pn
test
jl
jae
notb
xor
xor
push
sub
sbb
clc
xor
mov
mov
pop
mov
mov
lds
aas
pop
xor
jo
lock
pusha
or
mov
fbstp
or
dec
movsl
dec
jno
inc
int
add
pop
cmp
iret
data16
xchg
outsb
mov
ja
cltd
adc
pop
mov
xchg
loop
add
push
popf
cmpsb
js
cmpsb
inc
jp
mov
jecxz
inc
jns
cmpsb
cs
dec
jnp
addr16
pop
nop
ficoms
xorl
repz
rorb
mov
jp
push
dec
das
sarl
ret
dec
lods
dec
out
xor
fnsave
clc
mov
movsb
bound
sbb
xchg
lods
out
mov
jne
loope
lret
lea
xchg
add
adc
aam
push
add
pusha
inc
pop
ret
mov
icebp
jno
pusha
xchg
mov
push
scas
aam
add
inc
addr16
dec
enter
add
mov
dec
push
bound
cli
iret
in
push
pop
mov
xor
ds
outsl
jae
mov
daa
lds
cmp
rcrl
hlt
leave
mov
gs
outsl
push
xor
in
lods
pop
js
adc
ja
std
sub
fs
mov
mov
dec
cld
ja
jecxz
add
pop
mov
fdivrs
out
push
clc
mov
mulb
addb
stc
cmp
mov
mov
mov
mov
daa
adc
mov
into
push
jle
mov
inc
stc
loopne
xchg
loope
jmp
mov
fldt
enter
frstor
cmp
sbb
pop
mov
sub
jb
pop
dec
insb
xor
shll
mov
imul
repnz
stos
sbb
movsl
push
or
inc
xor
clc
push
imul
fldl
push
xorl
leave
imul
mov
jbe
mov
inc
pushl
mov
ds
mov
call
and
push
cld
mov
jno
xor
dec
lahf
push
lds
dec
inc
mov
fwait
roll
sbb
cli
adc
mov
pop
jns
push
aas
shlb
ss
jg
enter
hlt
jbe
push
lock
hlt
inc
sub
cmp
iret
clc
cwtl
xor
jnp
cld
mov
mov
cltd
cmp
cwtl
test
sub
add
mov
sub
xchg
movsb
stos
mov
pop
jp
mov
sbb
js
je
ss
jb
enter
push
pushf
sub
jmp
imul
outsb
iret
in
pop
aaa
mov
mov
xchg
push
push
jle
xor
push
push
jae
push
pusha
push
arpl
rol
fs
fdivl
sbb
add
cmp
inc
adc
fistps
fucom
es
xchg
lds
push
xchg
jp
inc
xor
inc
cld
in
jmp
mov
into
data16
pop
icebp
jecxz
fs
fisubl
push
outsl
xor
movl
pop
push
push
jmp
mov
xchg
adc
mov
addr16
mov
inc
sbb
xchg
push
sbb
jmp
out
mov
test
imul
les
mov
ljmp
pushf
mov
or
movsb
cwtl
pusha
ljmp
pushf
imul
sub
call
cmp
jnp
ret
jmp
int3
subl
and
mov
inc
inc
cmp
xor
mov
pop
aaa
cmp
aam
hlt
cmp
push
outsl
sub
fisubrs
cwtl
movsl
mov
mov
mov
fnstenv
jp
jo
or
mov
add
scas
outsb
sbb
push
mov
aam
dec
idivl
mov
mov
hlt
cmp
xlat
jmp
out
or
mov
pushf
pushf
leave
xchg
xorl
dec
cld
lret
in
sarb
mov
mov
ret
test
dec
mov
stc
mov
mov
mov
test
bound
adcl
mov
cld
mov
or
lods
fxch
fsubrl
test
js
mov
bound
dec
aad
ds
shrb
mov
mov
fs
shll
and
lret
lods
jns
add
jp
pop
mov
cmp
cld
and
xor
xchg
ja
imul
xchg
inc
mov
and
push
mov
push
dec
sbb
lock
cld
sbb
mov
pushf
pop
add
bound
mov
shl
fstp
imul
leave
mov
jbe
pusha
lods
rcrl
push
push
rcll
inc
ret
lods
sub
lods
les
mov
sarb
cmp
ret
mov
mov
ret
addr16
rol
js
push
pop
dec
cmpsl
mov
ret
fidivrl
xor
sbb
xchg
and
cs
jbe
test
or
cs
les
cmp
test
je
aad
adc
lret
jle
mov
clc
movl
sbb
push
mov
into
adc
movsl
inc
jae
ja
adc
test
clc
mov
cmp
cltd
lock
std
lret
roll
xchg
sbb
stc
or
rolb
insl
clc
pop
ficompl
adc
cs
xchg
xchg
fsubrs
inc
inc
dec
xchg
add
mov
stos
mov
shrl
lock
negl
test
xor
jno
rcr
pop
or
pop
iret
jmp
push
xor
test
jne
enter
adc
mov
sub
fwait
loope
cs
xchg
mov
sti
sbbl
pop
pushf
dec
je
pop
xlat
xor
xor
cmc
sbb
jg
xor
xchg
jp
call
shrb
inc
xchg
mov
xchg
add
bound
js
jne
sbb
cmp
cmpsl
pop
sbb
push
sbb
and
push
pop
insl
jns
in
cmp
sub
aad
jne
test
cmp
jl
vdivsd
fadd
xchg
cmp
inc
out
fdivl
int
or
out
shrb
mov
or
inc
pop
inc
xchg
mov
jo
aam
and
idivl
push
lret
hlt
jno
sbb
and
cmc
movsb
jecxz
mov
test
cmpsl
cmp
jmp
jbe,pt
sub
xchg
mov
push
mull
int
outsb
adc
bound
in
sub
lcall
test
adc
push
dec
fisubrl
push
jb
or
ja
mov
adc
imul
jb
cmp
scas
outsl
jns
test
cli
cmp
mov
into
jecxz
in
dec
scas
inc
xchg
stos
dec
sbb
push
movsb
mov
mov
and
lahf
in
push
sbb
pop
mov
es
push
jae
inc
repnz
hlt
cli
add
adc
and
movsl
dec
pop
or
mov
jg
stos
iret
inc
mov
lds
rolb
imul
dec
sarl
movsl
rcll
dec
mov
mov
roll
fidivrs
mov
mov
jmp
inc
mov
testl
fmuls
testb
mov
push
cmp
cmp
pop
mov
fadds
xor
push
scas
loop
movsl
add
enter
aam
mov
pop
xchg
mov
pop
push
sbb
xor
sub
test
fucom
aaa
mov
incl
pop
jmp
es
push
gs
das
or
push
scas
adc
cli
jo
xor
jae
test
mov
mov
outsl
sub
cmp
push
mov
roll
fsubp
jo
add
xchg
or
adc
mov
mov
sbb
xchg
outsl
andb
jns
lods
pop
aam
or
sub
in
addl
dec
hlt
fs
xchg
fsubl
ret
rcl
sub
jge
addb
enter
je
pop
push
sti
adc
data16
push
test
mov
add
dec
aas
test
movsl
and
and
mov
pop
dec
cwtl
add
sahf
pop
mov
xchg
xchg
pushf
mov
xlat
sbb
cmp
pop
mov
testb
jecxz
xchg
rep
jnp
ret
mov
mov
xchg
jbe
scas
jecxz
insb
sub
push
mov
mov
or
orl
shlb
out
fs
adc
lds
push
jae
lret
push
inc
add
lahf
jae
lods
les
arpl
fcmovnb
cmp
into
sbb
and
arpl
addr16
in
cmp
push
dec
sub
sbb
and
xor
add
jae
test
cmp
pop
das
pop
ss
rcll
shlb
mov
ja
mov
fldt
cli
leave
mov
cmpsb
fdivr
out
stc
mov
push
xchg
xor
push
or
lds
in
mov
xor
je
mov
fnsave
je
adc
cmp
nop
and
movsl
xchg
rolb
lret
sbb
adc
mov
ds
stos
inc
rolb
not
rolb
outsl
pop
push
orl
dec
jge
mulb
xor
fucom
push
jg
fwait
int3
loop
add
loopne
mov
jp
and
sub
fsts
pop
inc
mov
jae
dec
or
inc
sarb
dec
cld
or
leave
add
and
mov
sub
stos
into
jae
nop
or
aaa
addr16
fwait
inc
sub
test
xchg
jne
push
rcpps
cmp
insl
cmpsb
in
and
shr
mov
addr16
js
sbb
aad
jno
mov
jne
mov
push
sti
adc
jecxz
sub
pop
sbb
int
fbld
jmp
insb
fwait
inc
inc
pusha
shld
xor
rcrl
adc
ret
jle
js
je,pn
push
and
inc
leave
push
sti
pusha
mov
aam
cmp
daa
mov
jp
adc
cld
rorl
pop
push
mov
jns
mov
mov
xor
in
mov
ja
outsb
shlb
popa
lea
andl
stos
dec
cmp
std
mov
call
xchg
repnz
dec
jecxz
test
les
pushf
ret
rcl
jge
mov
or
adc
bound
push
les
ret
mov
xor
fsubs
sub
imul
out
pop
fsubl
adc
inc
xchg
in
pop
ret
in
jnp
rorb
lods
test
clc
mov
adc
cld
jns
scas
mov
and
dec
cmpsl
stos
lahf
adc
add
mov
xor
sahf
add
push
icebp
sbb
leave
popf
and
adc
inc
xlat
jge
push
ss
scas
ret
push
je
stos
lds
fwait
xchg
mov
aaa
jno
mov
gs
mov
imul
imul
mov
push
mov
mov
test
xchg
jno
push
popa
or
pop
xchg
and
mov
out
xchg
push
loopne
outsl
cmpl
add
lea
inc
pop
repnz
in
jl
jno
or
xchg
mov
and
dec
daa
sbb
fisttpl
sbb
repz
das
lds
xchg
aad
inc
out
rclb
pop
xor
clc
out
push
loop
aas
and
lea
addr16
mov
sbb
inc
repz
inc
push
cmpb
xor
ljmp
or
pop
mov
pushf
mov
bound
out
lock
add
xlat
sbb
mov
es
xchg
mov
inc
pop
adcl
ljmp
hlt
in
rolb
mov
int3
jl
add
cmp
aas
push
push
out
pop
test
adc
sbb
in
or
lahf
add
pop
sub
cmp
cltd
mov
or
jae
dec
mov
cmp
dec
sbb
std
ret
clc
stos
push
aaa
xchg
ss
sti
insl
enter
jo
ljmp
lds
repnz
out
outsb
fsubl
bt
insl
or
mov
inc
sti
push
test
dec
cli
ss
or
add
mov
inc
sar
scas
mov
pop
mov
sti
je
in
xor
or
xchg
or
pop
sahf
mov
sahf
out
pop
test
xor
jecxz
adc
inc
aaa
cwtl
jp
scas
decb
in
in
add
or
call
js
mov
cli
in
out
test
test
out
dec
push
aas
push
push
push
je
jae
or
data16
movsb
ret
hlt
cmp
repz
inc
movsl
stc
loope
mulb
pop
sbb
popf
insl
mov
in
pop
pop
xor
mov
sbb
dec
mov
xor
mov
push
mov
jns
jne
mov
jb
jmp
jle
mov
cmpsb
loope
xchg
adc
out
mov
dec
notb
push
xchg
push
push
jbe
mov
ret
es
insb
push
out
mov
jno
adc
mov
stos
dec
imul
and
inc
pop
and
mov
repnz
rcll
shrb
cs
rcll
mov
out
rorl
sti
mov
loopne
ret
and
xchg
lock
movsl
xchg
inc
xchg
push
cli
std
jo
sub
daa
mov
pop
sbb
sub
insb
idiv
roll
xlat
cli
nop
fisttpl
loopne
and
mov
jmp
loope
or
xor
adc
jne
xchg
pop
jbe
test
push
sub
iret
movb
pop
xor
ljmp
cmp
xchg
hlt
jb
cmpsb
stos
and
pop
in
jecxz
outsb
stos
js
add
insb
out
scas
pop
sub
dec
fwait
aam
loopne
jmp
scas
into
sbb
sahf
aam
shrl
xchg
pusha
push
jb
xchg
or
iret
inc
and
mov
js
jp
fcoml
jle
xorb
dec
push
dec
mov
jae
ret
inc
mov
mov
mov
push
cmpl
push
ficomps
pop
xor
aad
pop
std
seto
xlat
adc
and
xchg
rolb
pop
and
mov
jns
cmc
cmpsl
lcall
add
jnp
arpl
sub
into
mov
jge
das
stc
add
push
popf
scas
jnp
mov
sub
nop
jns
arpl
xchg
sub
mov
inc
lock
jno
add
push
mov
sub
out
xchg
push
cmp
rcl
jecxz
les
jnp
stos
rcrb
and
sbbb
lods
jne
xor
outsl
out
nop
mov
inc
mov
loope
ljmp
push
cmc
loopne
std
push
cmp
add
jmp
xchg
jle
mov
movsl
sar
xlat
loope
pop
sbb
mov
push
cmp
fldt
pop
lods
pop
xor
inc
push
push
fmul
mov
mov
lret
mov
inc
fldl
loop
jecxz
mov
mov
ror
mov
mov
lock
mov
add
push
rcll
scas
push
xchg
call
in
aad
adc
jge
sbb
int3
push
sbb
sbb
lods
sub
or
das
cltd
ljmp
push
cmpsl
mov
les
push
jnp
sub
and
or
stos
icebp
rcrl
jo
rorl
push
mov
adc
jbe
jecxz
cwtl
andb
mov
or
xchg
outsb
pop
jns
cmp
sub
xchg
or
out
or
aad
ret
sub
sub
cmc
mov
mov
sbb
fisubrs
sub
outsl
jb
test
sbb
adc
loop
sub
repz
and
push
scas
clc
out
imul
in
xchg
aad
dec
xorb
mov
inc
aaa
pop
call
mov
mov
repz
imul
test
cmp
cmp
cmp
xchg
xchg
mov
jo
push
sub
and
int
jmp
lahf
xchg
xor
push
adc
ljmp
mov
add
mov
js
mulb
jae
into
adc
inc
lcall
or
icebp
and
add
out
stc
in
cmp
sbb
scas
mov
dec
push
cmp
xlat
clc
int
ss
mov
mov
movsb
xor
movsb
jno
cs
mov
cmpsb
mov
or
and
pushf
lret
and
pop
push
scas
fcmovnb
xchg
sub
push
mov
into
jne
or
push
inc
test
push
ret
mov
mov
jnp
sub
push
arpl
jecxz
out
movsb
int
cmp
mov
dec
mov
in
add
iret
repnz
inc
and
xlat
mov
push
stos
lods
rcr
mov
adc
add
adc
jb
push
dec
in
adc
mov
add
pop
mov
xor
xor
pop
mov
sub
and
cmpsl
pop
xchg
nop
inc
xor
push
jo
sbb
inc
adc
decb
mov
andl
jp
pushf
sbbb
in
xor
pop
mov
in
inc
xor
sbb
arpl
mov
insb
daa
push
aaa
les
mov
pushf
pop
fmul
and
test
jmp
je
and
pusha
cmpsb
jnp
ljmp
pusha
cli
cmp
mov
xchg
mov
pushf
dec
jmp
adc
es
or
mov
mov
xchg
jl
jmp
jbe
add
cmp
loop
adc
adcl
out
lea
sbb
imul
shr
mov
out
pop
pop
shrl
imul
in
scas
and
mov
gs
mov
in
mov
pop
gs
add
je
sub
loopne
pop
iret
aam
ret
push
mov
sahf
in
dec
inc
outsl
fidivrs
lcall
mov
mov
xchg
xchg
mov
enter
mov
inc
jl
push
adc
out
mov
out
ja
and
sub
rcr
cmp
lock
pop
mov
sbbb
cmp
pusha
insl
pusha
push
inc
dec
es
inc
insl
fs
lods
mov
sbb
xchg
test
jge
adc
or
hlt
push
cmc
fsubs
lea
mov
xor
cmc
test
fwait
aaa
es
xor
cmp
rolb
mull
stos
mov
aaa
inc
aaa
add
rcrl
sbb
mov
fidivrl
jmp
outsb
int3
push
pop
mov
jb
dec
sarl
dec
pop
sbb
test
mov
gs
inc
out
mov
out
lea
jmp
es
xor
cli
pop
sbb
mov
ret
cmp
inc
pop
ret
jnp
sub
bound
insl
dec
add
inc
cmp
dec
bound
cmp
jo
call
call
sub
pop
mov
pushf
out
jo
push
inc
sbb
scas
cld
pop
loopne
or
xor
dec
push
imul
adcb
push
cwtl
mov
pop
or
pop
fidivs
mov
outsl
push
es
or
push
jl
adc
lods
pop
push
js
cmpsl
cmp
mov
push
sub
orb
pcmpeqb
int
dec
test
jecxz
xchg
les
fwait
mov
xchg
in
inc
jp
sub
lea
stos
adc
mov
cs
jp
pop
loopne
ljmp
push
and
mov
das
adc
bound
scas
sbb
sti
leave
stos
pop
popa
out
mov
mov
imul
icebp
cld
lds
das
idiv
in
sbb
push
mov
dec
stos
jge
mov
es
mov
push
movsl
adc
mov
push
inc
aaa
mov
xchg
push
pop
lahf
in
test
out
cmpb
mov
jnp
xchg
outsb
lahf
subb
call
cmp
adc
add
add
dec
push
mov
mov
jecxz
aam
jnp
lcall
dec
addr16
or
pop
mov
or
xor
lds
xchg
stos
lcall
mov
lret
aaa
test
rcrb
loop
testl
xor
xor
jno
mov
jno
pop
out
sahf
les
push
inc
ficomps
mov
in
ja
inc
ljmp
and
iret
lret
push
sub
xchg
push
scas
imul
out
dec
popf
ljmp
loope
fdivrs
out
sub
ret
mov
int3
add
mov
in
idivb
jb
pop
jb
push
fadds
xchg
ja
inc
mov
iret
sub
out
std
mov
sbb
lods
xchg
inc
mov
dec
xor
cmc
jl
xchg
dec
insl
mov
xor
mov
add
ds
ret
icebp
dec
xchg
lcall
dec
jnp
mov
mov
dec
popf
fs
jmp
repz
or
out
stc
mov
jnp
ret
push
pop
fcomps
cld
jnp
jge
mov
mov
xchg
stos
dec
cwtl
push
cli
ljmp
pop
mov
int
andl
pop
and
rclb
ja
pop
or
or
mov
cmp
mov
stos
int3
sbb
test
addr16
jb
sub
add
imul
das
add
xchg
and
pop
xchg
push
loop
pop
mov
sbb
cli
test
push
xchg
movsb
mov
xchg
test
jge
nop
aad
dec
mov
mov
mov
sahf
adc
sbb
aas
pop
jmp
loopne
fists
xchg
jno
int3
out
xorl
movsl
sbb
mov
stos
scas
mov
mov
xchg
or
hlt
outsb
cmpsl
ret
mov
mov
mov
gs
cmc
jae
int3
ljmp
addl
rcr
sbb
lret
and
in
push
ja
mov
rcrb
mov
jno
inc
int
lods
jo
loope
and
adc
xor
push
cwtl
push
sbb
sbbl
push
jns,pt
std
lcall
mov
cmp
pop
addb
adc
mov
push
push
inc
fdivs
scas
cmpsb
push
mov
mov
adc
mov
jo
push
dec
fs
inc
inc
inc
inc
xchg
jnp
adc
jae
sar
adc
jno
rolb
push
sbb
js
rclb
fcoms
lds
sti
movsl
xor
mov
sub
mov
cld
cmpsb
mov
mov
hlt
mov
ss
iret
mov
xchg
outsb
in
es
lret
push
inc
cmp
dec
xchg
js
fwait
dec
xchg
loopne
sub
mov
mov
cli
mov
jecxz,pn
sub
pop
dec
stc
cli
addr16
std
sbb
jne
jle
jecxz
adc
rcl
popw
lret
sbb
pop
pop
pop
icebp
mov
inc
aaa
mov
mov
xor
dec
fwait
lret
push
repnz
int3
lds
jge
add
and
leave
cmp
call
push
push
imul
fdivrp
cmp
js
ss
shl
rclb
test
jmp
pop
mov
mov
adc
mov
push
mov
popf
mov
or
dec
ljmp
out
cmp
xchg
xchg
loop
jl
loop
xlat
dec
js
cmp
xchg
xchg
xor
arpl
cmp
inc
les
xor
push
gs
je
xchg
or
jg
mov
adc
cwtl
pop
pop
les
out
or
imull
inc
sub
cmp
pop
mov
jle
adc
sbb
fmull
adc
cmp
jp
cmp
andl
xchg
lock
inc
pop
cltd
sub
int3
ret
pop
sbb
test
cmp
cmp
adc
dec
cmpsl
icebp
inc
sarb
out
dec
jecxz
hlt
and
cli
add
mov
pop
fucomip
pop
les
mov
in
jnp
adc
inc
or
gs
pop
rcr
xchg
cltd
xchg
dec
push
hlt
leave
jecxz
insl
push
xor
daa
loopne
cwtl
mov
cld
cli
lods
ds
movsl
pop
stos
mov
mov
pop
pushf
int3
dec
and
mov
sti
lock
add
add
mov
sbb
pop
xchg
in
je
insl
sbb
mov
cs
sub
push
out
movsl
xlat
ja
sub
inc
push
mov
jne
adc
mov
or
mov
xor
pop
pop
call
dec
push
das
mov
inc
leave
mov
lods
stos
arpl
cld
mov
ja
xchg
aas
adc
cmp
or
mov
sbb
xchg
push
adc
xchg
divb
and
or
aad
decb
pop
scas
pop
mov
cwtl
xlat
int3
lods
pop
jae
cld
sub
mov
aaa
push
fst
push
lds
lret
flds
fmull
pop
mov
out
loop
pop
cltd
into
push
cmp
jg
jbe
pop
push
pop
add
mov
add
mov
mov
jo
mov
fwait
push
fldenv
popa
or
pop
jae
push
movsb
cmpsb
in
jl
lret
insl
push
or
jno
call
add
pop
xchg
loope
push
add
xchg
insb
jbe
sub
fsubs
add
add
loop
sbb
sub
jbe
pop
mov
orb
sbb
jo
mov
and
add
or
out
jecxz
test
out
nop
and
mov
dec
pop
sbb
dec
push
inc
scas
mov
cmp
sbb
push
popa
mov
inc
mov
icebp
outsb
aad
cmp
das
lret
push
rcrb
dec
sar
adc
xchg
push
sub
out
xor
ret
jl
xchg
push
mov
jb
cmp
jge
es
movsb
cmpsb
ja
jbe
mov
adc
in
or
push
movsb
xchg
out
cmp
test
movsb
jae
setp
mov
mov
mov
int3
push
push
ret
out
pop
stc
or
adc
pop
cmc
daa
cmpsl
dec
pop
sub
jne
xor
push
push
stos
mov
push
inc
das
adc
scas
jg
mov
gs
aaa
das
fldcw
bound
lds
fisttps
mov
sub
pop
xor
xchg
mov
xor
scas
xchg
pop
mov
aas
subb
repnz
sub
cwtl
xor
pop
mov
rorl
popa
inc
divl
aaa
pop
into
xchg
arpl
jns
inc
cld
and
xchg
and
or
int3
xor
jge
xor
int3
test
sahf
sub
jp
ret
and
pop
nop
lret
lds
lret
pop
mov
inc
mov
mov
out
xchg
jge
ja
in
sbb
xor
push
cmpsl
testb
pop
ret
jb
aad
fs
fsubrs
or
nop
xor
nop
outsl
push
xor
gs
sub
or
inc
outsl
inc
repnz
sub
shlb
sbb
lret
or
xchg
sets
cmp
xchg
in
adc
call
pop
dec
lret
add
lahf
lret
inc
push
fldcw
loopne
ret
leave
insb
pusha
mov
mov
inc
and
jne
xchg
xchg
sarl
outsb
adc
adc
ret
fldenv
sbb
xchg
aam
jb
dec
cmp
ja
jmp
add
cli
shrl
in
gs
lods
mov
stos
daa
repz
ss
cld
lods
mov
push
cmp
jmp
push
in
jb
xchg
mov
xor
jecxz
jns
fcomi
push
jl
inc
push
dec
inc
sub
cmp
int
xor
xor
pusha
in
inc
gs
rorb
rorl
cmp
ficomps
test
nop
imul
jne
or
repnz
jmp
push
andb
jnp
aas
push
xor
mov
sbb
lods
cld
cld
sub
sbb
add
out
pop
int3
ror
lds
je
inc
add
xchg
mov
iret
movsl
aam
cmp
fistpll
rolb
lahf
jne
shrb
test
mov
shlb
add
ret
js
cmpsl
sbb
nop
inc
aam
jmp
xor
or
xor
jg
or
cmp
inc
xchg
cmc
push
dec
stc
cmp
push
mov
sub
adc
int3
aaa
or
inc
bnd
push
or
aas
sti
rolb
in
iret
fidivrl
mov
aam
mov
aam
fwait
es
mov
mov
and
dec
fmull
movsb
pop
imul
loope
popf
loope
fsubl
xchg
sbb
jl
std
pop
fs
bound
sub
mov
add
add
dec
jle
int3
pop
jle
jnp
into
mov
lds
pop
in
mov
xchg
cwtl
push
cmp
mov
repnz
jmp
out
popa
fbstp
sub
sbb
add
mov
mov
mov
es
out
xor
cmpsb
cmp
neg
sbb
fwait
je
or
lret
mov
ret
into
filds
xchg
jno
push
jge
scas
loopne
in
mov
xor
mov
or
outsl
xor
or
pusha
aas
xor
into
push
stos
jb
mov
cmpsl
mov
loop
fadds
or
icebp
cli
xlat
or
inc
inc
mov
dec
ja
stos
dec
push
pusha
cwtl
aam
scas
inc
mov
test
scas
outsl
jl
jnp
fwait
ds
and
fstps
mov
jnp
ret
stos
call
ds
xchg
push
orl
adc
std
gs
addr16
sar
mov
cmc
mov
std
pop
loop
rorl
mov
sub
fnsave
or
std
daa
loope
in
cmp
icebp
lahf
add
xchg
xchg
pushf
xchg
xchg
cwtl
outsb
ret
idivb
adc
and
inc
gs
fs
push
inc
push
pop
add
and
repz
jbe
pop
jg
mov
jp
stc
mov
pop
and
add
and
mov
cmp
iret
leave
ljmp
jno
decl
mov
mov
dec
jg
mov
and
mov
fstl
les
stos
cmc
jecxz
aam
dec
dec
cmc
sub
fmulp
popf
jno
das
sbb
push
fs
add
pushf
lds
xor
push
sarl
pop
addl
push
cmp
lret
adc
ret
xor
lock
mov
in
repz
es
pop
mov
cmp
outsl
sbb
xor
addl
je
stc
xor
ss
cmp
lds
stos
jle
cli
sub
repnz
icebp
xchg
dec
sbb
jmp
in
mov
push
out
js
es
in
popf
clc
xor
xchg
addr16
inc
gs
or
cli
cmp
addl
icebp
fimull
inc
pop
jp
pusha
outsl
xchg
pop
insl
mov
push
dec
mov
pop
out
movsb
repnz
jbe
cs
das
xor
mov
cltd
cmp
mov
pop
sub
ja
mov
xchg
fs
sub
push
add
mov
test
jo
adc
and
popa
insl
mov
out
adc
dec
fdiv
cmpsl
stc
jb
je
test
xchg
mov
movsb
xchg
arpl
xor
daa
imul
jle
outsl
clc
mov
idivl
scas
cmp
sbb
cmpsl
sbb
rcl
mov
adc
jbe
cmp
xchg
mov
or
cmp
nop
out
sbb
and
jbe
sub
ret
mov
xchg
into
fidivs
lahf
xor
fs
mov
loop
imul
jne
roll
aam
mov
jno
and
leave
fstpl
cmp
test
loopne
es
jecxz
xchg
xchg
add
xchg
pop
fisttpl
xchg
call
lcall
cld
cmpsb
jno
xlat
push
aaa
jge
repz
adc
mov
into
hlt
or
cld
or
mov
out
jl
dec
mov
aas
mov
or
fildl
sbb
adc
cld
and
filds
cs
mov
stos
jo
push
bound
lods
lods
sti
add
sub
or
je
mov
sbb
imul
out
leave
add
xor
dec
push
mov
andb
lret
aad
and
xchg
jne
lret
lock
lcall
pop
or
mov
ret
dec
push
mov
nop
adc
push
fstpt
lock
lods
fwait
xor
jbe
jecxz
int
ljmp
test
push
adc
jbe
xchg
inc
jno
pop
pushf
clc
fnstcw
push
pop
push
es
jmp
mov
mov
mov
sub
pop
mov
jge
pop
scas
xbegin
lcall
fistps
das
jmp
jg
xchg
push
push
inc
jle
enter
jle
stc
scas
std
call
cmp
pusha
cmp
cwtl
push
jns
sub
push
mov
sbb
add
enter
imul
jb
mov
adc
test
jp
movsb
mov
adc
lock
push
mov
xor
pop
sahf
pop
jb
mov
sbb
std
xchg
mov
rcrl
pusha
pushf
outsl
mov
xchg
pop
js
mull
clc
dec
call
repz
inc
xorb
vunpckhps
pop
dec
mov
pop
movsb
cltd
and
mov
stc
fsubr
aaa
fcomps
xlat
mov
addr16
cmp
xlat
sbb
pop
loop
add
jp
rorb
test
xlat
je
outsl
adcl
jns
adc
dec
adc
cmc
jnp
js
mov
dec
in
xor
or
jle
jp
fstpt
mov
or
mov
inc
sub
adc
negb
xchg
sahf
pop
and
jge
jge
sahf
or
enter
fisttps
movsl
ljmp
xchg
imul
sub
lcall
sbb
sub
es
call
and
push
mov
adc
ret
add
js
stos
fildl
cwtl
xlat
pushf
rcll
mov
cld
mov
add
jle
in
les
cld
out
in
pushf
mov
xor
push
iret
clc
fwait
and
inc
xor
jle
sbb
lret
call
dec
adc
and
popa
call
or
and
dec
dec
fbld
xchg
roll
sub
jl
or
aam
icebp
push
cmpsl
daa
adc
sub
js
pop
sbb
cmpsb
mov
mov
adc
add
test
lret
popf
push
dec
and
cmpsl
lea
push
push
and
push
orb
jns
jns
pop
orb
dec
cmp
das
jae
push
rcrl
arpl
mov
sahf
stc
sbb
dec
dec
inc
sti
sahf
sahf
xchg
pop
sahf
push
dec
ret
xor
cmp
sbb
mov
inc
call
mov
mov
mov
fnstsw
sarl
mov
dec
xchg
inc
dec
repz
xchg
cli
add
mov
test
or
dec
jmp
std
pop
sahf
and
inc
insl
cmp
arpl
enter
sub
lods
jnp
mov
jb
pop
movsb
lret
mov
fs
mov
pop
or
adc
testl
fsubrl
lods
cli
pop
xchg
pop
adc
pop
test
js
cmpsl
imul
pop
aam
fidivs
shrl
popa
fmull
dec
loope
push
in
and
mov
pop
negl
adc
insb
push
adc
cmp
es
fstpt
jo
sub
sbb
test
out
mov
mov
xchg
cmc
adc
xorl
adc
aad
jns
dec
test
into
mov
iret
xor
dec
add
cmp
mov
lcall
xor
inc
pop
jae
or
pop
push
push
cmp
and
out
cli
popa
jle
ljmp
lahf
and
push
andl
in
insb
xchg
add
or
cmc
cmp
arpl
out
movsb
or
add
mov
sub
aad
das
aas
nop
xor
and
incb
cmpsl
pop
cmp
lret
cmp
xor
fisttpll
mov
out
and
lods
out
sbb
fistps
dec
and
push
ljmp
enter
and
popf
cmp
incl
fwait
push
and
inc
jl
test
popf
jns
xlat
inc
in
mov
mov
int3
stos
inc
cmpsb
test
lret
ds
cmp
clc
int3
mov
mov
insb
rcrl
fidivrs
xor
inc
push
testl
ds
xor
std
jecxz
popf
mov
jbe
inc
in
lcall
loopne
fisubrs
and
shll
jae
inc
cmp
add
fwait
stos
mov
xor
pop
outsl
insl
push
sbb
inc
aad
mov
popa
fisubs
arpl
jl
stos
mov
inc
push
and
mov
mov
subb
inc
xor
mov
mov
cltd
add
into
test
popf
pushl
insl
js
imul
xchg
dec
adc
mov
mov
mov
lods
cli
aaa
sarb
jecxz
mov
mov
dec
ds
dec
int
in
pushf
inc
inc
mov
xchg
mov
test
lods
add
sbb
adc
mov
xchg
movsb
sub
jl
outsb
push
mov
xor
ret
jle
push
hlt
mull
fwait
outsb
pop
imul
lea
mov
loope
jns
adc
sub
jbe
test
in
shr
das
ds
sti
inc
fldenv
bound
dec
sbb
add
pop
mov
jg
aad
mov
addl
jecxz
mov
push
in
insl
xchg
shrl
cld
mov
inc
mov
out
in
add
sub
rolb
add
push
lock
out
push
outsl
fcomps
sub
roll
pop
insb
sub
into
ret
mov
mov
movsb
xchg
js
inc
cmp
xor
jo
pop
cs
jge
xor
std
std
ds
adc
add
sahf
in
or
cltd
call
or
aam
dec
adc
jecxz
push
and
and
sti
fstl
repz
jbe
push
push
mov
data16
push
pop
lret
ds
xchg
outsl
insb
sub
mov
cmp
sub
add
hlt
ljmp
xchg
xchg
daa
mov
in
xor
lcall
pop
xor
popf
or
adc
inc
arpl
aad
fidivrl
and
subb
and
lret
test
jg
jmp
inc
push
jecxz
inc
imul
mov
fistl
inc
push
mov
ja
aaa
shl
fldl
nop
sub
fdivrl
nop
divb
mov
movnti
push
inc
lcall
addb
sub
add
and
jl
push
dec
out
adcb
add
push
loope
lock
sub
lds
cmp
add
jl
mov
leave
das
es
lgs
sub
sbb
movsb
inc
mov
repnz
repnz
push
data16
cmpsb
lret
push
int
test
mov
jl
pop
pop
movsl
ficoms
mov
or
rcr
add
sti
pop
add
ljmp
jo
icebp
xchg
insb
jne
shlb
mov
cltd
ljmp
js
adc
call
fnsave
out
fcmovnu
ss
cmp
adc
enter
cld
xchg
dec
inc
cmp
lds
aam
ret
xchg
cli
sub
mov
xlat
sub
xlat
inc
or
repz
inc
jns
lret
call
mov
sarl
das
lock
xchg
enter
ljmp
sarl
push
fmulp
adc
negb
xchg
js
cmpsb
sub
xor
and
icebp
iret
data16
daa
jno
pushf
adc
out
lods
mov
es
dec
scas
lods
push
push
sbb
push
fdivr
dec
pop
or
mov
fildll
pop
push
cmp
xchg
pop
je
lahf
cmp
lock
stc
sub
sbb
xchg
xor
cmp
aas
movl
xor
ret
ljmp
inc
inc
in
out
jmp
ja
and
test
aam
jnp
aam
mov
data16
testb
inc
adc
mov
test
jge
push
xchg
mov
mov
ds
clc
out
fcompl
lcall
lret
loop
push
jg
xor
adcl
adc
adc
stos
cmp
lods
ja
adc
into
lret
mov
mov
mov
ljmp
push
int3
rcl
mov
ds
mov
movsl
pop
scas
cli
push
int
add
jp
add
sbb
popa
add
jl
aaa
leave
enter
jle
pop
push
fwait
es
xor
jmp
mov
leave
and
testl
xor
sub
inc
mov
xchg
ja
ficompl
mov
nop
insb
das
in
jl
cmp
and
xchg
lock
mov
aad
cs
lret
mov
and
repz
mov
sbb
scas
mov
lcall
mov
and
adc
lahf
popa
adcl
lods
add
sub
lods
repnz
scas
sbb
jg
and
iret
orl
out
push
rcr
pushf
lret
shr
sub
cli
popa
add
les
xchg
loope
ljmp
pusha
shrl
fcoms
ret
push
jb
push
aaa
pusha
lock
mov
jb
pop
scas
or
jmp
push
fs
jns
add
in
mov
ret
fistps
sub
leave
xor
popa
lret
jns
lret
mov
idiv
and
or
call
mov
call
cs
xor
mov
int
paddb
insl
jbe
push
pusha
adc
loopne
fsubs
in
xchg
stc
and
sti
orl
scas
notl
add
iretw
imul
xchg
imul
sub
xchg
cmp
pushf
pop
jnp
orl
insb
pop
cld
lahf
dec
push
dec
in
nop
sub
cltd
jno
fsubrl
pop
adc
out
mov
mov
mov
xchg
adc
imul
add
sub
push
adc
jge
andb
incl
mov
cli
imul
add
push
loop
insl
fsub
cmpsl
mov
pusha
mov
fwait
adc
inc
ja
sahf
test
mov
filds
pushw
push
push
jecxz
add
mov
jnp
aas
ds
push
mov
pusha
xor
pop
mov
inc
push
ljmp
sbbl
pop
fwait
les
sbb
hlt
in
jb
jbe
fwait
xor
jo
sar
stos
iret
jl
mov
or
mov
in
jb
inc
or
stc
enter
jnp
scas
and
xor
cmpl
pop
add
xchg
jae
jge
test
push
arpl
movsl
inc
sbb
outsl
jno
xor
mov
xchg
gs
xor
ja
cmp
jnp
out
in
or
rcll
out
adc
mov
mov
loop
pop
dec
push
mov
push
addb
int3
xchg
js
xchg
aad
sbb
push
ficompl
jno
shll
dec
repnz
pushf
cmp
xchg
inc
adc
aam
clc
ficomps
jo
jmp
add
xchg
insb
scas
bnd
sbb
bound
cmpsb
xchg
jmp
push
ds
mov
lret
push
imul
inc
aas
sub
in
mov
pusha
xor
mov
mov
out
lret
notb
push
lcall
adc
push
xor
add
dec
push
in
mov
mov
es
fidivs
jne
scas
popf
lcall
mov
stos
xor
add
jo
mov
js
sub
jmp
orl
jns
jo
dec
fildl
lock
or
jg
dec
movsl
fadds
ret
decb
jle
fimuls
ficompl
lods
in
fldcw
int
or
inc
fildll
push
xchg
dec
pop
mov
and
je
iret
enter
push
mov
ljmp
cmpsb
mov
inc
mov
push
sub
xchg
xchg
decl
adc
mov
jo
dec
aad
int
dec
fldl
imul
mov
jae
loopne
lret
xor
aad
dec
imul
popf
in
xchg
daa
mov
lret
jg
push
sub
mov
sbb
mov
sub
lods
xchg
mov
mov
call
mov
les
bound
mov
into
adc
pop
xchg
cmp
shlb
inc
in
or
lds
mov
pop
cmp
out
xchg
sub
les
xchg
imul
mov
sbb
out
cltd
lea
sub
inc
inc
push
pop
and
call
scas
daa
inc
ljmp
mov
sub
cmp
xor
stc
and
js
mov
icebp
and
popf
fmull
dec
fsubs
xchg
mov
out
iret
cwtl
lcall
andl
mov
jecxz
out
pop
jecxz
push
rolb
cwtl
jne
cmp
cmp
cmpsb
icebp
pusha
mov
xor
pop
mov
pop
sub
pop
dec
data16
ror
push
dec
sub
mov
rcr
int
cmpsb
xor
flds
fmull
cmp
push
xchg
movsl
nop
mov
fdivl
scas
movsl
pop
es
mov
out
sbb
mov
adc
mov
enter
mov
xor
pop
cmp
popa
sbb
lahf
push
xchg
stc
xchg
jb
dec
fwait
mov
pop
je
dec
inc
jns
test
pop
cmpsb
sub
clc
faddl
lock
into
mov
push
stos
mov
iret
gs
add
sub
pusha
dec
sbb
lea
stc
xor
push
or
push
int3
test
xchg
ds
stos
out
sti
jp
int
cmc
pusha
mov
dec
insl
lret
and
or
inc
dec
adc
mov
ja
es
cmp
xchg
cmpsl
popf
gs
loop
mov
out
dec
sub
pop
or
daa
repnz
shl
sbb
fstpl
fwait
fs
and
inc
cmp
rcrl
mov
and
cs
xchg
push
stos
in
filds
dec
mov
xchg
mulb
out
xchg
xchg
mov
das
fmuls
out
mov
in
adc
mov
fs
daa
mov
das
rol
test
mov
insb
in
jnp,pt
int3
std
fwait
cwtl
cmp
xor
in
idivl
pop
sub
lods
rcrb
fcmovnu
adc
xor
shlb
mov
or
call
inc
xor
mov
lds
mov
lcall
in
jle
mov
cmpsl
pushl
push
adc
repz
in
inc
icebp
test
sbb
aaa
outsb
test
or
aas
ret
add
or
out
mov
rol
xor
je
mov
jp
adc
lea
mov
xchg
dec
inc
dec
pop
aaa
mul
push
and
addr16
iret
xchg
dec
out
or
push
test
or
je
pop
jg
adc
xchg
pop
hlt
movsl
or
cmp
mov
ja
dec
cmp
push
in
cltd
add
xor
enter
jnp
push
outsl
xchg
mov
into
lret
popa
lods
add
roll
jecxz
rclb
in
ja
mov
int3
add
push
mov
xor
mov
inc
ffree
popf
and
dec
or
divl
divl
xchg
out
sti
in
leave
mov
hlt
fnstenv
cmc
push
test
sub
addr16
cmp
mov
push
jge
call
lret
adc
lods
sub
and
push
ret
xchg
xchg
sti
das
ds
lock
fstpt
in
test
imul
sub
inc
inc
or
int
out
lahf
inc
insb
shlb
sub
repz
sbb
ss
or
mov
xchg
or
lret
or
xchg
push
adc
dec
jo
and
add
addr16
pop
leave
fs
jmp
inc
or
sahf
cmp
pop
leave
and
cs
sbbl
pop
jns
loopne
cmpsl
sti
sbb
adcl
pushf
add
xchg
sub
mov
lock
adc
xchg
inc
fidivs
test
arpl
and
stc
add
sarl
cmp
stos
gs
sahf
mov
loop
ja
and
int3
mov
pop
sahf
pushf
cmp
mov
fmull
inc
inc
inc
sbb
mov
adc
enter
in
push
mov
fdivs
add
xor
outsl
cmp
dec
lods
shrl
and
iret
cmp
add
push
mov
pop
jmp
dec
lcall
push
dec
add
sarb
pop
sbb
push
xchg
add
mov
and
mov
pop
mov
movsb
in
aas
cmp
fldcw
stos
pop
adc
cwtl
sub
shll
sbb
or
cld
cmpsl
rcrb
out
gs
insb
leave
fisttpl
push
jb
push
stc
or
cmp
sarl
sub
stos
cmp
jl
sub
xor
js
xchg
push
bound
jle
jp
mov
add
pop
add
aam
mov
adc
sbb
mov
push
mov
cltd
and
cwtl
es
jb
sarb
push
imul
neg
loop
sbb
test
out
repz
inc
fcmovnu
sub
inc
mulb
jne
aaa
pop
xchg
loopne
sub
and
cmp
sub
lret
jns
mov
aaa
or
movl
jnp
std
hlt
inc
jno
pop
dec
iret
negb
std
mov
outsl
rclb
das
lock
push
ja
xchg
ss
testl
lea
cmp
xchg
mov
and
jnp
loop
push
inc
movsl
cmp
xlat
inc
lahf
jl
push
rolb
repz
adc
mov
jmp
mov
imul
mov
xor
push
cmp
inc
xchg
cmp
scas
rclb
sub
mov
add
inc
cmp
je
push
adc
popf
movsb
mov
pop
cmp
or
fisttpll
mov
jmp
scas
sbb
push
jecxz
jle
nop
cmpsl
adc
ficompl
sbb
mov
mov
popf
sub
in
cli
sbb
lea
fsubl
cwtl
sbb
out
xor
in
dec
pop
pop
ret
and
ds
xor
xorb
mov
cld
jmp
andb
aad
jo
mov
stc
pop
in
mov
push
std
push
stos
inc
sub
test
xor
xor
xchg
mov
cmpsl
lock
clc
notb
jl
popl
and
setae
es
popa
mov
fcmovb
xchg
mov
mov
les
cmp
add
outsb
xchg
xor
les
stc
mov
mov
cmp
jle
push
xor
push
iret
xor
pop
pop
fsubs
lret
add
lcall
cmp
ficoms
adc
mov
lods
mov
scas
inc
das
ss
arpl
into
cmp
sbb
mov
decl
ficoml
inc
mov
repnz
mov
xor
add
jg
inc
scas
vmovaps
arpl
rcr
out
push
xchg
lds
mov
fwait
xchg
imul
cwtl
jmp
loopne
and
cmc
into
shrl
fcompl
cmpsb
sbb
xchg
outsl
popa
inc
mov
mov
faddl
mov
gs
pop
and
in
aam
xor
adc
cld
adc
dec
and
addr16
out
or
mov
loopne
dec
jbe
cwtl
test
sti
test
adc
dec
cmpb
fisttpl
cmpsl
hlt
add
sub
cmp
sbb
dec
fs
inc
out
jae
xor
lahf
popa
ds
mov
es
cltd
mov
jl
jp
fmuls
mov
jno
xchg
icebp
add
rol
cmp
ss
sbb
sar
and
loopne
mov
lock
inc
gs
es
sar
imul
sub
sbb
xor
pushf
jno
mov
xchg
pop
or
cmc
sbb
and
out
gs
test
pop
mov
add
mov
test
sub
leave
icebp
mov
popf
adc
adc
loop
xor
int3
mov
test
pop
xor
xchg
push
dec
pop
fldt
jnp
lcall
dec
mov
jmp
mov
aam
push
std
ljmp
jae
das
mov
out
adcb
fsubrs
cld
hlt
insl
cwtl
scas
test
push
sub
xchg
daa
inc
push
adc
pop
xchg
sbb
insb
push
clc
xchg
in
por
jp
and
sub
jne
notb
dec
std
sub
xor
js
xor
cli
jmp
outsb
popf
dec
sub
xlat
xlat
sub
jbe
push
push
roll
push
add
cs
int
and
push
push
sub
subb
mov
ret
data16
fs
fstpl
std
and
xchg
movsl
or
fisttpll
fbstp
scas
imul
inc
adc
sub
sub
popa
and
xchg
cmp
mov
aam
push
xchg
mov
pop
push
vpmacsdql
sub
cmp
fisubl
aas
jle
mov
jl
cwtl
and
lcall
cmc
rolb
push
xchg
icebp
test
mov
sbb
fimuls
mov
stc
cld
lea
inc
inc
and
cs
lret
sub
xchg
loope
cld
lods
aad
dec
xrelease
mov
cs
xchg
sub
pop
cmp
cmpsl
outsl
xor
add
cmc
je
dec
xchg
push
stos
popa
fwait
out
cmp
cmp
lock
fnstsw
stos
mov
movsb
pop
and
or
scas
mov
cmc
mov
mov
js
cmp
xor
scas
insb
les
lcall
pop
push
rorb
test
jns
fnstcw
inc
pop
in
fistl
mov
shl
loope
push
rorb
arpl
or
mov
push
repz
int3
cmp
ss
test
dec
pop
mov
inc
stc
cld
mov
dec
orl
inc
stos
cs
orb
or
pop
xchg
cli
test
xchg
imull
nop
xchg
push
aad
inc
nop
xchg
mov
js
mov
cli
adc
cmp
inc
mov
outsl
outsl
adc
loopne
dec
fdivrl
les
jecxz
imul
stc
mov
inc
sub
dec
jbe
cmp
push
clc
div
in
push
in
outsl
mov
sub
pushf
xor
cmp
add
gs
into
sbb
movsl
popa
cmc
popf
aad
repnz
out
and
push
dec
int
dec
rorb
out
jmp
scas
jp
lret
test
je
lock
add
lret
push
mov
cmp
push
sub
test
xchg
fs
sti
sbb
lods
mov
mov
clc
or
or
lock
jnp
lret
pop
pop
in
jmp
sbb
jno
je
mov
fsts
clc
push
int
adc
mov
push
iret
xchg
sub
adc
and
push
adc
out
and
iret
jnp
sbb
mov
and
cmpsl
push
jge
lret
sub
mov
lcall
lock
jno
stos
adcl
cmc
inc
inc
aaa
imul
fisubl
inc
lds
outsb
xor
clc
or
shr
addb
xchg
fnstcw
test
incl
leave
adc
sub
dec
insl
movsb
jl
mov
mov
pop
or
and
mov
or
sbb
arpl
out
add
das
popa
push
cli
cmp
jp
aam
rorb
sub
and
jns
sub
and
lcall
mov
pop
cmpsl
dec
das
pop
adc
mov
dec
mov
scas
adc
mov
jnp
insb
vcvtps2dq
and
repz
mov
push
pop
jns
jo
mov
pushf
test
nop
ss
cmpsb
inc
mov
dec
xchg
ja
test
adc
cmp
or
xor
sub
ficoms
mov
push
inc
aad
ret
jg
push
sub
xchg
or
mov
or
in
scas
xchg
pusha
aas
fsubrs
sti
inc
in
mov
pop
repz
imul
dec
sti
adc
sub
sbb
test
hlt
outsl
cmp
xor
and
mov
outsb
xor
push
dec
xorl
pusha
push
ret
mov
es
int3
mov
cmc
adc
xchg
lods
dec
mov
adc
xchg
mov
je
xor
mov
and
or
ds
repz
pop
shll
fildl
jmp
jo
xor
call
jge
mov
aam
mov
call
lods
jb
jg
cmp
mov
mov
xor
xor
jno
mov
lret
out
jl
pop
in
adc
push
sub
sub
mov
xor
inc
aam
sbb
pop
fucomi
lods
jae
cmp
lcall
fsubl
sahf
push
mov
pop
int3
popf
mov
stc
mov
imul
jp
pop
addr16
icebp
dec
and
outsb
ret
sbb
stc
cmp
dec
mov
jne
add
inc
or
fwait
mov
inc
jge
daa
or
ds
dec
push
nop
aas
cmp
shlw
adc
mov
into
mov
aam
xchg
cld
fistpl
call
sar
mov
sbb
test
xor
jbe
adc
jle
push
aad
pop
add
and
inc
sarb
push
mov
mov
or
add
std
mov
lret
cmp
hlt
sbb
xor
lcall
cld
xor
sbb
sub
stos
or
dec
mov
inc
fnstsw
pop
je
mov
rol
sbb
xchg
xchg
or
movsl
add
subl
es
pop
sbb
add
mov
ret
cwtl
xchg
cmpsb
outsb
rcl
int
scas
fists
sub
pop
adcl
testl
lds
mov
jns
sbb
fwait
fs
mov
aam
test
cmp
jl
pop
mov
jmp
lock
jne
in
xor
pop
jns
xor
push
pop
mov
or
or
inc
dec
and
jns
ds
inc
dec
cmp
jbe
jnp
or
cwtl
cwtl
out
xchg
fisubrs
fists
push
cld
outsl
sub
mov
shrl
sub
adc
mov
insb
mov
stos
dec
adc
mov
dec
sub
loop
in
add
add
add
mov
mov
div
cmp
push
push
je
mov
pusha
sub
test
mov
outsb
mov
push
sub
sbb
cmp
dec
lock
addr16
cmp
int3
data16
js
es
and
xchg
add
scas
lock
cmp
mov
fs
in
js
sbb
stos
rorl
dec
mov
push
mov
mov
mov
sahf
movsl
icebp
xor
mov
xor
and
xor
jne
mov
inc
inc
loop
mov
mov
bound
js
push
sbb
loope
cs
sbb
imul
ss
lds
adc
cmp
and
jne
xchg
lea
ret
xchg
in
insl
pusha
mov
ja
push
xchg
insl
xchg
mov
jne
pop
movsb
gs
movsl
mov
insb
jne
xchg
mov
shr
xorb
daa
push
mov
pop
out
orl
push
sub
gs
xchg
popa
xchg
mov
inc
adc
dec
jbe
jb
inc
mov
call
pop
mov
mov
pop
xchg
loop
xchg
xlat
shll
cmpsl
push
int3
hlt
daa
scas
mov
ficoms
icebp
lcall
jle
hlt
push
dec
xor
sbb
add
sbb
sbb
add
dec
dec
mov
aaa
mov
js
mov
adc
mov
daa
sahf
aas
int3
dec
mov
add
mov
dec
fldenv
sbb
pop
dec
hlt
subl
and
repz
cmp
fcoms
sbb
dec
into
cmp
pop
shl
adc
mov
or
mov
lock
scas
and
movsl
push
inc
fsubl
jp
jge
lds
mov
inc
jmp
or
inc
ficomps
loopne
cmp
inc
adc
movl
inc
or
clc
jo
andb
jmp
pop
nop
divl
cmp
sub
repnz
push
push
fs
xlat
push
aad
sub
repz
lods
movsb
test
adc
scas
sbb
stc
imul
sahf
add
sub
dec
push
mov
add
add
lods
decb
mov
mov
add
mov
outsl
aam
out
mov
dec
lods
and
adc
pop
sar
cmp
sti
mov
adc
ljmp
jmp
xor
packuswb
pop
mov
imul
sbbb
sbbb
push
jnp
cli
iret
adc
adc
mov
imul
fldl2e
mov
daa
pop
xchg
xchg
jns
mov
test
push
mov
aaa
and
cmp
adcl
push
mov
data16
out
cltd
dec
jb
fs
mov
movb
roll
mov
pop
add
push
push
jmp
mov
xor
mov
adc
loopne
cmp
jecxz
jae
add
push
shlb
fildll
cld
clc
xor
lods
sub
push
sbb
lea
pop
inc
and
pop
cmpsb
sub
push
ja
adc
and
pop
sbb
dec
or
into
out
test
jl
jae
and
mov
test
cmpsb
jp
icebp
cld
movsl
das
inc
adc
ficoms
insl
pop
je
fimuls
lret
aam
adc
out
mov
mov
cmp
outsb
popf
push
mov
rorb
lods
inc
leave
pop
int
cmp
loope
lcall
xor
push
inc
inc
daa
jb
lods
test
and
xchg
jne
jnp
xchg
add
mov
cmpsl
sub
shlb
xor
jns
cli
test
dec
fistpl
pusha
push
and
cmp
cmp
dec
enter
pop
lds
rol
and
mov
clc
pop
shlb
adc
mov
in
jle
cmp
arpl
cs
pop
jno
mov
mov
and
and
mov
dec
shll
add
mov
rcll
cmpsl
mov
cmpsl
mov
test
inc
insl
xor
jo
cld
dec
push
ljmp
testl
pop
roll
xor
stos
fidivrs
and
into
jne
mov
mov
dec
adc
fsubs
cmp
mov
int
mov
lret
push
adc
insl
dec
inc
inc
imul
and
aas
mov
mov
shll
push
push
imul
into
ss
jmp
fs
inc
outsl
or
xchg
aam
stc
sarl
xlat
pop
and
daa
lcall
aas
aas
jmp
shrl
dec
xor
orb
mov
cmp
in
push
ret
pop
in
lahf
mov
movsb
pusha
dec
add
jo
jmp
adc
jo
pop
xchg
repnz
dec
outsb
sbb
aas
test
adc
cmp
lods
lods
xor
pusha
scas
test
mov
pop
mov
or
cmp
test
inc
mov
add
cmpb
pop
repz
inc
push
xchg
jecxz
cltd
mov
aaa
jne
ret
call
cli
fs
mov
xchg
jmp
out
or
lcall
pusha
mov
jb
jl
xchg
inc
in
jne
insl
hlt
push
cltd
add
mov
sahf
add
and
pop
int
pandn
mov
daa
push
pop
adc
arpl
fadds
cmp
mov
push
jg
jp
cmp
in
mov
pop
jg
scas
sti
lock
lahf
in
and
sahf
xor
jge
ljmp
hlt
test
push
and
std
inc
int3
xchg
jnp
mov
sub
dec
lret
repz
sub
neg
clc
or
scas
sbb
add
adc
ds
dec
lods
jb
xchg
rcr
sub
out
xchg
xchg
ficoml
jl
and
cmp
aam
and
shll
pop
test
pop
clc
stc
mov
lahf
in
push
or
xlat
movsl
clc
js
cmpsb
in
ljmp
inc
insb
adcb
idivl
jl
jae
imul
cmp
jno
lret
aas
sub
pop
ja
movsl
jl
and
aad
insl
xlat
adc
imul
add
stos
sub
xchg
or
in
orb
pushf
lret
push
xchg
pop
inc
fists
movsl
shlb
daa
add
pop
cwtl
divb
cmp
popf
out
shl
xchg
adc
mov
inc
jne
mov
aaa
push
cmc
jmp
pop
out
push
xchg
arpl
test
in
sub
fidivrs
mov
dec
aas
jns
jp
in
mov
aad
adc
into
sti
ret
fwait
dec
into
fdivs
sub
lret
or
test
cs
adc
jno
sub
jbe
aad
enter
ljmp
cmp
push
mov
xor
mov
adc
cmp
loop
push
pusha
push
cmpsb
aad
out
call
dec
push
jno
push
outsl
mov
adc
aaa
xor
or
push
sti
mov
push
mov
sar
cmpsl
lock
adcb
jl
xchg
enter
in
imul
jmp
pop
jb
and
fld
fdiv
xchg
fwait
les
push
mov
adc
pop
aad
pusha
push
ss
sub
sbb
int
lret
pusha
cmp
add
mov
movsl
mov
sti
cmc
mov
ljmp
jns
mov
xchg
std
es
repnz
aam
cmpb
jae
lret
out
mov
inc
loopne
frstor
dec
daa
push
inc
in
jmp
mov
xchg
fldt
lret
sub
gs
scas
mov
jmp
add
lret
stos
push
test
icebp
outsb
sub
push
xchg
out
jp
mov
cli
aam
wbinvd
xor
lock
cmp
stos
int3
mov
inc
sub
pusha
jmp
dec
jp
inc
jno
add
inc
inc
jge
fsts
testl
dec
daa
lock
jmp
leave
mov
cmp
loopne
or
ret
ds
dec
pop
data16
imul
push
xchg
add
sti
xor
insb
leave
lea
aad
out
xchg
loop
adc
sub
cmp
out
je
lods
sub
mov
iret
test
test
push
push
lock
outsl
cmp
outsl
xchg
xor
sub
movsb
adc
jle
inc
jge
push
inc
push
mov
popf
add
mov
jle
sub
dec
icebp
nop
xchg
sub
cmp
int
push
adcl
loope
repz
cmp
mov
add
jp
dec
js
sbb
sbb
cmp
daa
mov
dec
mov
and
repz
das
push
testl
call
iret
dec
dec
test
and
or
fbld
adc
ds
inc
mov
sbb
add
dec
push
pop
sbb
cmp
sbb
mov
adc
notb
test
std
std
sbb
sub
movsl
movb
aad
or
in
iret
dec
gs
stc
ret
jb
in
adc
mov
jno
push
stos
pop
sahf
mov
pop
pop
sub
push
sub
addr16
push
xor
jne
adc
sahf
cs
push
jp
or
jecxz
or
fwait
pushf
inc
movsl
push
or
cmp
sahf
orl
jae
les
mov
and
outsb
xchg
jmp
cmpsb
lcall
and
andl
xchg
xlat
sub
xchg
jno
push
cmc
mov
mov
ds
fstpt
or
dec
mov
mov
mov
and
mov
nop
lds
inc
lret
arpl
fs
inc
mov
or
and
inc
pop
push
cmpsb
dec
add
add
pop
mov
test
push
cmp
rcrl
imul
fucomi
mov
pop
cmp
mov
push
and
into
xor
pop
shlb
adc
lods
inc
sub
mov
es
fwait
rcll
out
int
push
icebp
xorb
mov
jl
jne
mov
scas
stc
das
push
dec
xchg
mov
jle
mov
lcall
flds
sub
into
push
flds
sti
push
cmpsb
sarb
add
shr
cmc
sub
nop
inc
lds
loop
subb
stos
dec
or
cmpsb
loope
xlat
imull
xchg
dec
adc
xchg
jno
push
lahf
adc
mov
mov
movsb
pop
movsb
sbb
bnd
push
into
daa
inc
daa
imul
stos
or
push
sub
inc
lea
lods
in
xchg
mov
jg
cld
ret
inc
roll
in
or
shrb
lods
fs
std
mov
addr16
mov
adc
aas
jl
repnz
push
jno
mov
and
jae
pop
mov
xor
pusha
pop
xchg
and
call
mov
pop
lret
pop
popf
mov
imul
mov
je
enter
sub
scas
insl
iret
test
or
rcll
jno
mov
aas
jecxz
pop
push
sbb
aad
or
jecxz
push
fdivs
dec
push
out
rcl
jge
ret
xchg
push
mov
pushf
aas
jecxz
hlt
dec
jp
lea
mov
imul
and
ret
popf
out
add
sbb
rcr
xchg
sbb
pop
mov
xor
das
mov
cmp
sbb
mov
xlat
out
lea
or
sbb
mov
rorb
lea
je
and
movl
mov
jge
xlat
or
push
mov
shll
cwtl
xor
in
cmp
jne
jbe
aaa
push
push
fstl
jo
idivb
iret
fildl
es
in
adc
push
fwait
add
xchg
jle
popf
xorl
xor
add
pop
cmpsl
sub
push
jno
push
stos
adc
and
data16
jg
cmp
pop
sbb
pop
inc
adc
dec
scas
pusha
lahf
idiv
nop
adc
or
lds
cmpsl
inc
testl
jecxz
and
xor
xchg
jl
pop
dec
mov
pop
fsubrp
test
fistpl
lock
jnp
rcl
sahf
mov
dec
bound
inc
mov
cmp
add
and
and
xlat
push
ret
mov
jns
add
cltd
orl
call
fcomps
shr
pop
sahf
jmp
out
and
daa
dec
aaa
cld
inc
leave
sbb
dec
sub
cmp
xor
pop
sarb
sahf
sbb
xchg
fwait
pop
les
lods
dec
push
sar
rcl
popf
dec
sub
testb
lret
mov
jmp
adc
call
push
and
inc
mov
sub
lahf
mov
mov
jbe
jmp
leave
daa
lock
stc
jno
push
icebp
push
inc
or
fildl
cmp
xlat
jl
dec
lret
pop
xor
inc
adc
sti
adc
movaps
popf
rol
mov
dec
test
rcrl
dec
mov
subl
lea
repz
dec
pop
rorl
cltd
sahf
in
inc
xlat
and
test
pop
out
inc
mov
xchg
push
fidivrl
sbb
dec
pop
shrb
mov
lock
inc
pop
sub
mov
mov
and
cmp
subb
inc
mov
pop
out
das
fnstcw
lret
out
add
fcompl
push
cltd
vmread
clc
jne
push
jb
cmp
cld
test
stos
pop
pop
adc
int3
or
sti
mov
mov
xchg
in
xchg
push
es
pop
push
adc
jmp
adcb
or
inc
in
push
fmul
ljmp
add
inc
pop
andb
adc
push
es
pushf
lahf
and
mov
in
sbb
insb
mov
xlat
or
gs
mov
mov
test
jns,pn
sbb
add
int
cmp
inc
imul
mov
mov
sub
cmpl
or
mov
push
shrl
xlat
mov
jmp
xor
xor
pop
nop
add
add
std
jle
fdivrs
xchg
ret
movsb
pop
xor
mov
sub
ds
pop
mov
dec
fisubrs
adc
push
mov
mov
add
fnop
add
fldl
sbbb
sub
dec
dec
xor
popf
mov
rcrl
pop
outsb
aam
data16
out
mov
arpl
sub
daa
pop
push
xchg
js
xchg
iret
int3
dec
jecxz
mov
test
and
mov
mov
inc
test
sahf
mov
jbe
repnz
mov
fisttps
jb
pop
jne
mov
pusha
popa
xchg
test
sbb
out
dec
push
dec
sub
cmp
or
aam
inc
fidivl
mov
mov
add
scas
icebp
adc
jbe
inc
in
pop
inc
sub
insb
iret
jnp
in
insb
mov
movsb
push
xchg
filds
or
test
mov
stc
popa
in
lret
push
inc
push
mov
out
xchg
cs
mov
inc
fs
aas
mov
scas
imul
out
rcrb
sub
cwtl
mov
ds
push
sub
in
pop
jmp
pop
or
jl
or
outsb
popa
inc
in
popa
or
clc
neg
jb
lcall
pop
cltd
cmpsb
cli
add
xchg
adc
push
dec
negl
adc
movsl
ds
mov
pusha
fs
pop
arpl
jne
dec
icebp
push
rorb
lock
arpl
fwait
jne
pop
add
jp
push
jle
les
inc
stos
sarb
andb
arpl
aam
outsb
je
hlt
out
xor
mov
cmp
lods
inc
popf
clc
push
je
add
dec
xchg
into
int
dec
adc
imul
sub
add
pop
xchg
ret
inc
add
dec
iret
mov
lahf
adc
lcall
pop
pop
fnstsw
mov
mov
repz
ret
enter
dec
xor
test
out
or
js
iret
inc
dec
pop
sbb
into
sahf
xchg
jae
insl
jge
pop
push
xor
sub
mov
inc
pop
xor
xchg
and
jl
sbb
sarb
pop
scas
and
sbb
jb
and
mov
mov
enter
addr16
jmp
add
aaa
and
rcr
fstps
dec
sahf
insl
mov
insl
or
jg
outsb
pop
stos
lcall
add
pushf
mov
loopne
out
push
pop
stc
int3
iret
sub
scas
and
mov
adc
cmpsl
in
cmpsb
incl
adc
xorb
shr
ss
dec
rep
mov
in
jbe
jg
sub
in
movsb
jmp
add
push
inc
lret
testb
fsubrs
push
xchg
pushf
iret
dec
out
lahf
mov
out
fdivs
xor
scas
dec
insb
mov
inc
sub
xor
or
les
mov
ret
in
lahf
jp
or
int3
rclb
inc
outsl
jno
lods
repnz
iret
mov
sub
and
cmp
inc
mov
cmpsl
adc
fsubl
jmp
or
shl
xor
test
inc
jmp
mov
pop
gs
test
cli
cmpb
sub
jge
mov
es
scas
fldcw
jmp
jecxz
mov
pop
push
scas
sbb
ss
aas
mov
leave
jo
mov
jp
testl
push
lret
sub
movsl
hlt
scas
lret
out
in
fsub
out
es
dec
mov
mov
ljmp
mov
addr16
aas
bound
xchg
cmpsl
push
prefetchw
push
cmp
daa
cmpsb
pop
xchg
push
push
mov
imul
mov
add
cmc
cmp
stos
xchg
jo
sub
jae
mov
jo
into
cmp
stos
or
in
outsl
cmpsl
xor
cli
jg
mov
push
sbb
lcall
je
lods
popa
popa
in
movsl
push
les
inc
dec
xchg
frstor
imulb
test
mov
push
mov
mov
movsl
iret
in
js
and
test
inc
pop
push
clc
xor
iret
mov
sbb
cmp
sub
ljmp
push
sbb
xor
xor
cmp
ret
add
loopne
lds
jmp
mov
ds
stos
mov
pop
jns
pop
dec
dec
dec
pop
jecxz
in
sbb
sub
repz
fs
mov
sbb
repz
ds
mov
adc
in
mov
jp
cltd
sub
sbb
inc
lock
addl
inc
fists
scas
in
xchg
adc
fisubs
mov
lods
jnp
test
cld
mov
in
fs
mov
iret
sahf
adc
dec
sbb
aaa
cld
lret
jmp
dec
xor
rorl
dec
pop
aam
bound
jmp
leave
pop
aaa
fcmovb
adc
clc
icebp
sub
test
xlat
pop
cs
add
movsb
mov
xchg
cmpb
out
mov
and
xchg
ret
data16
or
outsb
pop
mov
clc
mov
in
jge
clc
or
sub
mov
sub
nop
pop
insb
mov
ret
pop
mov
cmp
dec
dec
fildll
out
sub
sbb
jo
pop
sub
jecxz
gs
add
je
aam
mov
bswap
mov
pop
mov
sub
push
sahf
and
cld
lahf
xchg
setle
mov
or
push
lret
rcrb
negb
lret
aaa
mov
mov
in
sub
sbb
sbb
out
pusha
repnz
cs
imul
rol
adcl
movsb
test
shll
dec
cltd
in
test
adc
mov
inc
mov
or
loop
loope
pop
lahf
test
insb
mov
adc
movsl
test
loop
mov
adc
out
insl
jl
fs
rolb
aaa
int
popf
cwtl
push
jnp
xorb
clc
adc
pop
or
cltd
aas
pop
mov
outsl
dec
nop
cmp
notb
clc
mov
lods
adc
cwtl
and
repz
into
sahf
cmc
jmp
scas
lret
rcrl
xor
pop
test
dec
or
push
sar
aaa
hlt
or
les
ret
out
add
les
push
lahf
ss
xlat
out
mov
sbb
arpl
adc
and
stos
shlb
xlat
cmpsb
popa
and
push
xchg
cld
inc
test
sub
pop
xchg
rol
xor
sub
cmp
xlat
jb
mov
fwait
ret
jge
or
sbb
dec
mov
jns
in
xchg
lds
xchg
inc
aaa
mov
ljmp
orb
mov
pop
inc
mov
hlt
pop
pop
aad
sti
decb
cmp
ja
xor
movsl
popa
sbb
dec
jle
adc
xchg
mov
out
insb
mov
sub
sarl
xlat
push
pop
pop
xor
call
xchg
add
push
lds
sbb
jb
jb
in
leave
jecxz
add
shrb
mov
mov
in
std
inc
sbb
jae
xchg
das
aas
mov
cwtl
nop
push
testb
mov
fwait
ljmp
mov
sbb
dec
stos
mov
scas
int3
in
mov
mov
cmp
jne
sub
inc
cmp
lods
fiaddl
cwtl
test
sbb
icebp
and
pop
mov
in
jo
ret
cs
jne
cmc
mov
push
inc
aas
rorb
adcb
pop
or
ss
mov
imul
jmp
inc
sbbb
cli
sub
int
data16
fs
into
fisttpll
cmpsb
sub
cmpsl
lea
ds
xlat
pop
push
cmp
jmp
mov
add
in
into
dec
push
out
pop
mov
sbb
cmp
idivl
mov
dec
mov
sbb
popa
inc
out
sub
jno
inc
ja
mov
imul
filds
rcrl
xchg
je
mov
push
inc
mov
push
es
cwtl
cmp
inc
aad
inc
fs
adc
jge
xor
das
cmp
pop
xchg
test
push
mov
push
pop
roll
jnp
fldenv
push
js
adc
and
cwtl
cwtl
pop
imul
outsl
fmull
jmp
mov
jmp
push
push
push
daa
arpl
pop
sbb
xchg
data16
loopne
jecxz
cwtl
sbb
inc
jg
dec
mov
xor
orb
xor
aad
aas
stos
scas
jae
sub
popa
xchg
jg
or
cmpsb
pop
fs
repz
leave
stos
loop
mov
or
pop
add
jecxz
out
test
js
sbb
fiaddl
and
dec
mov
adc
xlat
testl
jle
into
and
out
xchg
add
pop
mov
ret
cmpsl
sbb
fisubl
cltd
dec
clc
ret
or
push
mov
mov
mov
or
enter
sbb
loopne
lods
push
adc
dec
int
mov
add
mov
icebp
nop
sbb
icebp
fsubrp
xchg
pushf
enter
adc
jno
push
aam
shrb
push
xchg
out
insl
cmp
cmp
jg
mov
mov
aaa
daa
inc
leave
mov
iret
ja
xchg
imul
mov
cmpsl
push
daa
cmpsl
in
lcall
sbb
in
sbb
xor
arpl
cmpsl
rclb
jbe
xor
dec
lds
outsb
das
mov
ret
cmp
pop
lret
movsl
add
mov
test
xor
jle
in
or
cli
cmp
sub
les
frstpm(287
pop
cmpsb
mov
xchg
and
inc
or
inc
sti
hlt
lods
jbe
ljmp
data16
jno
clc
adc
add
jge
inc
fdivs
lock
lods
dec
add
sub
lea
or
cmp
jl
cmp
iret
test
xchg
stos
daa
fmull
xchg
fwait
icebp
mov
mov
add
pop
mov
dec
fstpl
rclb
push
fcomp
movsl
mov
inc
or
inc
adc
pop
std
mov
add
mov
js
pop
insb
into
push
shll
bnd
jae
sub
fcoml
ret
pop
mov
sbb
pushf
xchg
out
ret
ret
out
push
xchg
jecxz
addr16
sub
jb
jno
cmp
clc
xor
ds
int3
das
repnz
cltd
sub
fisubs
outsb
xchg
insb
push
adc
push
xor
fsubs
lret
into
push
cli
test
sub
mov
iret
das
ja
ljmp
hlt
and
mov
add
sarb
cli
fmuls
pop
or
dec
push
mov
int3
outsb
icebp
xor
push
mov
leave
mov
mov
call
fcmovb
loopne
aaa
aaa
scas
test
cmp
jb
mov
sub
add
mov
sbb
mov
sub
mov
loope
pushf
outsl
popf
popl
sub
in
clc
and
pop
mov
dec
add
mov
mov
jge
daa
gs
ret
jns
add
sub
bound
sti
test
pop
pop
sbb
xor
test
xor
mov
adc
fs
mov
in
sbb
push
sbb
or
int
setl
xchg
and
pop
in
sti
and
insb
xor
imul
xor
data16
outsb
jecxz
addr16
jge
dec
mov
or
lcall
adcl
cmp
jbe
sbb
mov
xchg
leave
xchg
pop
mov
or
cs
xchg
test
mov
imul
addr16
aad
notb
cmp
scas
test
int
adc
cwtl
lcall
in
sbb
sub
fcomps
mov
adc
movsb
xor
push
inc
test
sbb
push
jno
jne
xor
sub
jbe
roll
out
fstl
pop
mov
std
add
hlt
mov
fs
idivl
push
mov
loop
je
inc
fiadds
std
mov
inc
out
in
xlat
test
push
and
mov
and
and
xchg
xor
jbe
inc
das
fstl
shl
loopne
test
cmp
or
enter
inc
out
add
dec
sbb
movsl
mov
add
mov
ja
inc
and
outsl
pop
xor
aas
call
xor
inc
cld
decb
dec
sub
and
adc
jl
push
mov
enter
bound
inc
addb
push
dec
or
cli
fiadds
inc
adc
fidivs
btc
sub
out
xchg
pushl
sbb
inc
out
sbb
jae
test
pop
sbb
inc
daa
enter
push
es
xchg
imull
sbb
push
pop
imul
mov
fdivrs
mov
inc
out
iret
dec
test
jo
es
inc
fisubs
mov
sub
or
stos
mov
mov
lret
ja
sub
fs
mov
addr16
out
pop
cs
jecxz
mov
xor
in
jns
jbe
xchg
outsb
mov
xor
mov
mov
inc
sbb
inc
fwait
hlt
mov
stc
fdivrl
fnstenv
cmp
add
pop
lret
mov
ret
jl
and
sbb
clc
mov
inc
jecxz
add
dec
mov
adc
mov
in
ds
push
ret
mov
ret
lahf
push
sub
mov
sbb
popf
mov
fdivrl
dec
ds
out
sti
lahf
mov
xchg
cmp
mov
sarb
je
or
rcrb
int
call
movsb
pop
and
shlb
cwtl
packssdw
notl
dec
cmp
ljmp
movsl
add
jg
push
stos
out
and
mov
add
jecxz
hlt
push
xchg
push
push
pushf
fwait
xor
add
in
pushf
shr
dec
imul
or
cltd
sbb
xor
add
ss
lcall
out
lret
sahf
stc
popa
dec
jle
repz
mov
cmp
adc
jle
scas
fistl
fistl
bnd
jae
insl
fistpl
xchg
adc
notb
cmpsl
ret
bound
inc
mov
sarl
cwtl
lock
lcall
ret
pusha
hlt
aam
or
sub
loopne
or
outsb
xorl
mov
mov
sub
lods
clc
pusha
pop
mov
ret
jle
pop
dec
stos
mov
xor
xor
repnz
fwait
pop
adc
jmp
mov
jmp
adcl
popa
push
scas
aad
ljmp
sub
pop
inc
or
jne
mov
pop
ja
dec
call
and
mov
xlat
and
rolb
test
jmp
jne
mov
repz
xor
fisttpll
jb
stc
dec
movsl
mov
das
dec
ret
cltd
sub
mov
test
lods
and
stos
mov
push
xchg
loopne
push
inc
dec
push
roll
faddp
dec
cmp
xchg
mov
mov
pusha
xchg
cmp
pop
sbb
imul
aas
jge
popa
mov
test
gs
cmp
ss
cmpsl
insb
mov
dec
in
inc
inc
scas
mov
add
add
pushf
jnp
or
mov
cltd
sub
mov
inc
and
ss
jne
push
stos
pusha
xor
lret
pop
sub
in
sub
pusha
xor
dec
mov
jl
inc
scas
mov
xor
mov
ljmp
sub
test
sub
lods
ficompl
mov
mov
jg
adc
add
pop
lods
fnstcw
xchg
xchg
xchg
aad
jne
fsubrp
ds
push
fsubl
cs
push
and
sti
jle
ljmp
stos
leave
xchg
mov
add
mov
mov
jno
xchg
or
push
jle
enter
in
jns
stos
mov
test
xor
test
cmp
cmpl
lock
mov
in
jge
enter
arpl
lock
sbb
cli
xor
and
sbbb
lods
cwtl
aaa
jbe
jns
mov
and
jl
leave
test
push
inc
jge
int3
inc
sub
xchg
lret
xchg
jno
adc
enter
add
mov
push
in
cmp
sbb
xchg
repz
out
mov
test
hlt
stc
xchg
jl
cmpsb
mov
fwait
out
xchg
loope
dec
jecxz
pop
in
dec
orl
mov
xchg
cltd
dec
scas
cs
shll
inc
ret
adc
scas
add
cwtl
cmp
push
mov
test
xor
ljmp
je
inc
incb
movsb
aad
int
imul
push
pop
jb
rorl
mov
add
push
loopne
mov
adc
es
inc
stos
sbb
xchg
in
cmc
push
xchg
push
add
sub
lock
lods
pushf
sub
bound
cmp
dec
mov
mov
jp
clc
js
cmp
push
push
fldl
inc
js
orl
mov
mov
and
xor
sbb
adc
out
les
fsubrs
das
into
dec
adc
or
das
popa
pop
vsqrtps
jecxz
push
das
adc
popaw
or
outsb
inc
or
and
cmpsb
sub
scas
xchg
mov
xor
dec
push
inc
xor
lods
xor
push
je
notb
inc
or
pop
cltd
xchg
insb
xor
cmovg
sub
mov
xchg
lea
pop
cmc
pushf
gs
imul
push
loopne
mov
mov
dec
xchg
lods
jbe
mov
aas
pushf
fnstcw
fildl
adcb
into
lods
jae
pop
jbe
es
jb
es
push
push
pop
xchg
mov
push
or
adc
xor
imul
xchg
popf
int
lods
outsb
aam
jp
std
mov
and
cmp
clc
insl
popa
sbb
xchg
dec
ja
sahf
ljmp
mov
sub
dec
insb
mov
cld
aas
in
jle
lret
mov
inc
mov
stc
rcll
out
xor
sbb
orb
movsb
mov
push
add
mov
cmp
subl
sub
pop
add
xor
jo
lret
cmp
cmp
out
xchg
push
mov
inc
mov
mov
dec
sub
push
out
mov
ja
insb
subb
sub
cmpsl
sub
insl
aam
adc
xor
dec
and
jbe
aad
stc
sub
bound
or
inc
cltd
movsb
lea
pop
decl
mov
fdiv
inc
fwait
mov
push
int3
repnz
pop
xlat
mov
ljmp
mov
dec
pop
js
pushf
mov
push
prefetch
xchg
loopne
in
loopne
ss
mov
or
cmp
sbb
pusha
ljmp
int
call
out
mov
jno
mov
xchg
add
sarb
xchg
mov
pop
cmp
mov
inc
pop
rcrb
call
out
test
push
dec
add
xchg
and
stos
mov
cmp
add
and
loopne
add
adc
pop
cmp
decb
cmc
pop
add
xchg
pusha
pop
cmpl
cmpsb
push
mov
add
or
dec
fstl
stc
ja
cli
fisttpll
ds
stos
mov
jnp
sub
dec
aam
push
push
xchg
sub
cmp
pop
ret
mov
cmp
les
jno
shll
stos
push
out
or
lea
jmp
inc
lret
lds
add
ja
xlat
ret
push
push
mov
cltd
mov
mov
stos
out
mov
gs
aaa
mov
push
xor
xchg
jae
add
or
out
push
push
or
jo
cmp
cld
mov
ret
out
cmc
sub
xchg
or
std
pop
xor
das
cmpsl
xchg
cld
aam
jmp
inc
mov
data16
sub
sbb
iret
pop
push
xor
pop
aad
xchg
aaa
jbe
mov
and
jg
dec
pop
pop
sub
daa
loopne
icebp
jg
push
out
cwtl
push
mov
cmp
or
into
mov
cmp
and
mov
in
sub
xor
pusha
insb
xchg
mov
or
jmp
enter
shll
adc
jo
push
scas
adc
scas
test
insb
mov
inc
imul
ds
ss
test
mov
fists
sub
push
mov
dec
jp
dec
cmp
pushf
nop
mov
sbb
decl
add
push
and
xor
mov
cmpsl
aad
arpl
jecxz
push
sbb
dec
pop
sahf
pop
cmp
xor
add
dec
out
cmp
in
mov
push
push
cmpsl
and
jbe
dec
add
mov
adc
ljmp
and
xchg
cwtl
and
adc
and
add
jo
je
cmc
jbe
adcb
stos
movsb
xorl
outsb
pop
push
daa
mov
adc
popf
or
test
sarl
inc
lret
push
nop
add
fcompl
in
out
or
ret
push
cmp
mov
cmpl
into
fstpt
fstpt
or
or
push
or
filds
add
mov
cli
sub
outsl
inc
pop
dec
jns
enter
fstpt
adc
test
pop
pop
push
mov
scas
pop
jno
imulb
sub
mov
fsubl
int3
pop
sub
test
cmp
xor
mov
es
movsb
sti
inc
xchg
push
xor
cli
es
pop
push
fcoml
xlat
insb
jnp
adc
mov
cmp
jne
xchg
mov
fisubrs
loope
xor
es
jbe
inc
movsl
and
fbld
inc
mov
out
cli
test
imul
mov
dec
mov
push
add
out
mov
insl
sub
sahf
cld
xor
or
mov
stos
adc
push
iret
xchg
adc
push
xor
cltd
sub
jae
sbb
add
adc
dec
pop
xor
cmp
mov
cmp
push
dec
shlb
ret
insl
add
out
cmc
jbe
push
mov
inc
or
ret
cmp
sub
nop
sub
add
imul
cmp
jae
mov
adcb
fs
fsub
out
dec
sbb
repnz
xchg
mov
imul
sbb
pop
sti
fstp
mov
add
fnsave
subb
icebp
cmp
xor
jne
xchg
jecxz
and
es
push
mov
inc
sbb
jnp
lods
mov
popf
out
nop
adc
sub
pop
popf
int3
movl
and
push
pop
jecxz
movsl
fistpl
inc
lods
inc
jle
dec
xor
aam
mov
push
dec
dec
xchg
push
out
xchg
dec
ja
out
jns
jo
mov
xor
je
mov
popf
pop
xor
addr16
mov
xlat
mov
fnstcw
adc
imul
jge
dec
lcall
and
sti
cli
enter
sti
mov
cld
dec
popf
test
stos
lods
cli
pop
aam
test
in
mov
xor
pop
mov
mov
scas
dec
movsl
fcomps
xor
je
sahf
pop
test
sti
aaa
jecxz
loopne
cmp
addr16
rclb
decb
lahf
stos
hlt
cmpsl
adc
js
cmp
inc
adc
cmp
stos
mov
sub
test
sbb
mov
punpckldq
jge
dec
cmp
pop
sbbb
xchg
xor
mov
xchg
mov
data16
mov
call
in
es
int3
pop
andl
arpl
aam
xor
lea
push
punpckldq
fwait
jns
hlt
sahf
push
pop
push
add
inc
out
push
cli
sbb
or
xchg
lret
fldenv
add
jle
in
jecxz
mov
pop
sub
xorl
stc
or
mov
pop
xchg
pusha
mov
jp
inc
scas
cmp
je
imul
imul
insl
imul
or
fbstp
clc
cmpsl
imul
movsl
xchg
out
mov
mov
jae
jecxz
lods
jnp
add
add
xor
xchg
lods
or
mov
cmp
je
or
lods
test
subb
cld
mov
sahf
add
lcall
pop
pop
push
pushf
loopne
das
sahf
adc
mov
bound
cmp
pop
dec
xchg
lds
push
les
mov
daa
mov
inc
mov
lods
cmpsl
test
inc
mov
pop
inc
test
lods
stos
jmp
xchg
jecxz
xchg
rcrl
pop
rcr
jl
popf
push
fisttpll
xchg
mov
mov
in
pushf
lahf
fisttpl
push
add
add
popl
pop
xor
cmc
sub
pop
rclb
cmp
adc
push
inc
lods
ljmp
jne
inc
push
lahf
jg
push
push
inc
jmp
mov
jo
arpl
stos
repz
repnz
mov
out
inc
mov
sub
inc
popf
mov
cmpsl
rorb
cmc
and
loopne
movsl
mov
scas
orb
scas
and
dec
icebp
fists
aad
rcrl
loope
xchg
xchg
sub
dec
imul
and
ret
sub
leave
testl
xor
js
cld
xor
fwait
lahf
mov
lret
in
push
xchg
pop
mov
push
repnz
les
out
xor
jmp
sub
jmp
xchg
push
xor
pop
pop
pslld
hlt
and
cmp
sbb
xor
popf
sbb
mov
xchg
xor
dec
lods
ficomps
cmp
les
push
call
push
xchg
mov
test
xchg
addr16
cs
sbb
les
in
test
sarl
je
jge
ds
pop
xor
sub
xor
cs
sub
lahf
loope
mov
dec
pop
into
adc
rolb
xchg
cmpsl
mov
imul
sbb
pop
cmp
jo
xor
js
imul
sbb
jbe
aas
enter
cmp
dec
ss
fucomip
mov
int
mov
or
lods
fisttpl
das
cmpsb
mov
xor
push
dec
dec
cmp
adc
test
jno
arpl
imul
ja
aam
dec
jge
icebp
imul
and
loope
arpl
mov
sub
and
rcrl
arpl
fcmove
arpl
push
movsl
add
jbe
loopne
or
push
dec
and
cmp
pop
sub
inc
into
daa
add
xchg
sbb
divb
adc
and
in
push
and
inc
lret
cmp
ss
jp
movsl
loope
or
mov
bound
repz
jns
mov
adc
pop
imul
in
pop
gs
cwtl
popf
subb
ja
cltd
ss
fimull
outsb
shlb
mov
or
jge
jge
inc
push
sti
or
test
lret
xor
jne
xor
mov
shl
push
xlat
inc
out
and
or
jae
adc
int3
sbb
movsb
or
insl
sub
push
shr
je
sti
dec
push
lcall
icebp
pop
xchg
sarl
ljmp
inc
popf
ljmp
xchg
test
pushf
pop
lea
into
fdivrl
sbb
or
pop
adc
jbe
loope
int3
iret
fcoms
push
jle
mov
aad
in
pushl
push
sub
inc
sti
int3
ds
cmp
or
stc
push
jecxz
inc
cmp
cmpsl
sahf
dec
adc
inc
and
dec
lods
sahf
aas
cli
add
lock
xchg
adc
dec
xchg
sub
mov
cwtl
scas
or
decb
mov
stos
or
and
jge
adc
and
rorb
inc
pop
add
sub
sub
cmp
insb
fwait
and
clc
iret
jns
mov
dec
xor
scas
pop
pop
in
pop
int
lea
xchg
push
lret
test
sub
daa
repnz
rdpmc
cmpsb
jns
push
xchg
test
addr16
dec
jo
pop
test
int
call
test
cmp
jp
jge
push
aad
mov
fldl
push
pop
les
dec
mov
cltd
mov
aad
adc
test
cmc
cmp
inc
shrb
cmp
sub
push
xchg
dec
scas
jecxz
cmc
jmp
xor
lahf
insb
lea
aaa
repnz
in
jb
cmp
dec
dec
xchg
call
mov
pop
inc
movsl
dec
sbb
or
cs
mov
test
add
jp
adcb
dec
jmp
mov
dec
ret
and
lahf
scas
mov
push
mov
pop
inc
lret
mov
nop
into
imulb
adc
sbb
imul
imul
sub
out
imul
stc
out
inc
mov
icebp
adc
imul
outsl
lahf
pop
push
hlt
jg
adc
add
insl
jo
xor
out
dec
stos
out
jbe
mov
pop
daa
cmp
adc
cmpsb
pmaxub
and
imul
rcrb
mov
fstpt
xlat
add
pop
xor
mov
pop
sbb
xlat
addr16
sti
adc
in
int
push
cmp
cs
and
mov
dec
insb
in
jecxz
ret
popf
xchg
lea
leave
cwtl
int3
mov
sub
lcall
cmp
mov
mov
hlt
dec
fmul
or
and
xor
iret
or
int3
pusha
mov
add
xor
int3
xchg
pop
fs
xorl
sub
or
mov
sbb
mov
sbb
rorb
das
mov
or
fwait
xchg
lcall
mov
adc
das
mov
pop
popf
out
out
xchg
mov
mov
and
xchg
add
inc
outsl
xor
push
cltd
pop
aam
jmp
mov
sbb
and
fwait
loope
ret
fld
mov
sbb
sbb
sub
sub
sbb
divl
pop
jmp
test
daa
ret
in
mov
inc
pop
ret
mov
loop
cmpsb
fmul
testb
cs
push
es
mov
pusha
call
shrl
loopne
sub
stos
sbb
fwait
lds
dec
and
mov
jg
mov
sbb
sub
loop
xlat
out
xchg
cmpsl
lock
mov
mov
mov
arpl
fisttpll
cmp
loopne
aad
push
rolb
jecxz
pop
push
ljmp
mov
cmp
jmp
cmp
pop
adc
popf
mov
xor
fwait
ss
push
mov
bound
mov
dec
shll
aad
add
mov
ret
sahf
aad
sbb
and
popa
xchg
sub
outsl
scas
mov
stc
push
outsb
out
leave
sahf
imul
jno
or
mov
and
sub
pop
mov
push
sub
push
or
andb
aas
subb
or
lods
cmp
repnz
ds
mov
sarl
and
pop
pusha
add
pushf
xchg
xor
lds
je
roll
adc
and
push
xchg
cs
jmp
inc
mov
inc
sub
add
test
and
addl
bound
out
dec
in
and
xchg
jbe
pushf
push
xor
fdivrp
dec
das
cmp
cmc
mov
push
mov
movsb
test
call
lea
jp
dec
aad
adc
dec
xchg
roll
mov
add
mov
cld
pop
mov
xchg
fists
loopne
sti
incb
stos
daa
repz
mov
inc
js
test
fistps
ljmp
fcomps
or
push
ret
dec
std
ficoms
add
cwtl
or
inc
pop
mov
cmp
xlat
roll
jmp
jg
pop
int3
lcall
and
and
repz
cwtl
mov
inc
rcll
xchg
or
cmpsb
lret
enter
pop
pushf
repz
sub
ja
and
imul
cmc
fsubr
imull
int
mov
xchg
xchg
pop
push
cmpsb
or
fldt
hlt
add
das
sbb
xor
dec
adc
pop
xor
repnz
add
lock
ret
mov
inc
add
jmp
push
cmp
subl
clc
outsl
xchg
ja
jp
mov
xor
insl
xchg
mov
mov
jge
aas
sbb
mov
cmp
adc
ds
gs
add
mov
lea
mov
out
ret
nop
ja
out
testb
adc
rcrb
scas
push
es
leave
movsl
xlat
and
out
pop
push
cmp
jle
cli
fwait
add
ret
push
jg
xchg
mov
jbe
movl
popf
les
sti
pop
movsl
mov
pop
shrb
cmpsb
xchg
loop
sbb
cmc
imul
imul
xchg
cltd
subl
addr16
out
adc
sbb
mull
mov
leave
adc
shrb
mov
adc
jns
loopnew
push
jnp
out
push
addr16
mov
xchg
neg
push
stc
sub
lods
cli
inc
xchg
aas
push
in
cmpsl
not
pop
xchg
test
mov
jmp
cmpsb
lock
mov
aad
cmpsl
cmpl
cli
sbb
loop
cld
fcmovnb
pop
fildll
cltd
inc
aam
roll
sbb
xchg
orl
pop
pop
or
loope
and
inc
clc
rclb
pusha
pop
jno
xlat
outsb
mov
ret
push
jg
and
pop
pop
lock
fwait
push
pop
sub
pop
sbb
jle
out
in
ds
mov
je
movsb
pop
jae
hlt
cmp
sub
add
fsubs
inc
pop
fldenv
mov
fisubl
jno
stc
in
ljmp
sbb
addr16
pop
stos
in
pop
shl
arpl
fstpt
fs
push
sub
mov
cmpsb
nop
cmp
xchg
fmuls
pop
loopew
mov
les
js
add
pop
data16
dec
add
les
xor
insb
idivb
cmp
lea
fbld
sbb
nop
jp
repz
pop
bound
rclb
outsl
movsb
imul
inc
jmp
mov
jae
xchg
fdivl
data16
mov
cmp
rorb
mov
adc
xchg
cmp
fcompl
sbb
aaa
jb
inc
jp
pop
add
in
cmp
insl
lock
sti
adc
mov
arpl
and
loope
iret
mov
stos
jmp
fs
dec
sub
sub
or
jl
mov
sub
inc
mov
cmpsb
sbb
loopne
ss
stos
enter
imul
sarl
cmp
mov
ficoms
daa
mov
outsb
or
lret
insl
inc
xor
push
test
mov
mov
jl
dec
mov
imulb
xor
repnz
daa
testl
sub
mov
es
loop
loopne
sub
outsl
inc
jp
fs
mov
icebp
pop
ja
notl
sahf
mov
sbb
or
sub
lahf
push
mov
shll
aaa
push
fcmovbe
clc
mov
dec
ja
pop
int3
sarl
lret
out
inc
sub
dec
sahf
xchg
xor
enter
jp
das
xor
dec
int3
push
lret
pop
jmp
test
adc
repnz
sub
xchg
xchg
stos
shlb
push
jo
sub
push
fadds
jno
jne
mov
decb
jg
dec
mov
aaa
out
int
xor
int3
add
fwait
out
xlat
cwtl
mov
outsl
mov
cmp
pushf
xlat
mov
cmpsl
adc
icebp
xlat
mov
and
pop
cmp
cs
mov
xchg
xchg
push
inc
in
testl
cmpl
into
fwait
push
mov
or
jecxz
adc
adc
jmp
cmp
imul
inc
test
daa
cmp
or
inc
jg
in
push
or
popf
inc
gs
rolb
loop
fidivrs
pusha
data16
xchg
xorb
pop
stos
dec
scas
push
and
mov
mov
pop
scas
mov
mov
ja
sbb
or
push
pop
push
and
lret
outsl
jge
mov
cmc
push
pop
sti
inc
adc
sbb
pop
jae
pop
xlat
cli
jae
mov
ds
scas
enter
xor
pop
subb
cmp
in
dec
loop
adc
adc
js
or
rolb
push
or
aas
subl
lea
loope
jnp
stc
push
sub
movsl
mov
loop
aad
cmpsl
sub
stos
or
aad
ret
add
mov
xchg
jae
stos
lods
hlt
mov
lret
mov
jbe
cmpsb
loopne
push
mov
mov
adc
orb
or
jecxz
cmp
daa
push
pop
add
aaa
scas
lret
add
mov
lock
in
pop
mov
mov
and
adc
fmull
pushf
jne
je
in
push
cmp
mov
cmpb
mov
gs
stos
shrb
std
pop
jnp,pt
push
sbb
shlb
inc
inc
mov
test
mov
push
mov
sarl
imul
inc
push
lds
jns
and
or
inc
stc
jne
push
popf
dec
or
jl
jecxz
lods
pop
fs
test
inc
or
pop
mov
jns
jno
inc
stos
fwait
sub
mov
sbb
ret
xchg
and
psrlw
cltd
pop
rcrb
add
dec
xor
jo
push
add
fucomi
scas
scas
add
push
dec
nop
or
sbb
mov
rcrl
cmp
scas
add
ret
nop
fwait
insb
mov
in
rcll
pop
mov
cmpsb
mov
mull
sbb
pop
popa
mov
lods
loopne
inc
fistpl
sub
sub
lds
jge
pop
mov
inc
or
bound
ret
in
pop
lret
std
mov
jecxz
daa
jle
and
cmp
lret
xchg
cli
in
ja
mov
or
push
mov
inc
mov
dec
jae
mov
mov
in
js
or
in
frstor
push
les
in
int3
cmpsl
fisubrs
mov
cmp
and
push
clc
jecxz
xchg
xchg
and
cmp
mov
mov
ret
and
push
sahf
xchg
push
mov
push
mov
repz
push
pushf
add
inc
pop
push
icebp
cmp
fbstp
push
cmpsb
in
rcr
faddl
pop
ret
sti
add
stc
fistpl
test
and
adc
ret
xchg
mov
mov
pop
push
jge
call
leave
pop
push
ljmp
imul
jge
les
jae
cmc
enter
in
mov
ret
mov
lahf
fisubs
imul
fcoml
outsb
aas
add
pop
push
roll
jle
lods
repz
notl
pop
push
and
aas
pusha
inc
hlt
lret
aad
aas
add
jmp
cmp
dec
aad
stos
test
in
daa
test
pop
pop
mov
push
repz
mov
test
mov
mov
test
cmp
push
jne
mov
adc
outsl
imull
push
test
push
and
repz
es
jb
xor
sbb
arpl
leave
scas
dec
push
enter
insl
fsubs
pop
inc
in
cmpsb
sahf
aam
or
mov
push
sub
sub
push
add
into
or
cmp
jmp
icebp
jl
inc
mov
inc
push
test
rorb
mov
inc
sub
xchg
idivb
xor
jne
sbb
push
ljmp
mov
mov
outsb
mov
jno
repz
das
cltd
sbb
loop
xchg
aam
jb
aaa
add
push
lcall
adc
in
sbb
jmp
xchg
pusha
pop
sub
fwait
cmpsl
imul
mov
stc
mov
inc
fidivrs
and
pop
xor
ljmp
sub
jne
mov
xlat
icebp
cmovo
in
and
jae
faddl
jae
stos
inc
hlt
inc
jmp
ret
mov
int
and
mov
push
add
lcall
mov
loope
push
les
xchg
imul
sbb
cmp
loop
divb
pushf
ret
mov
xchg
mov
xchg
loope
into
mov
pop
jge
testl
jecxz
sahf
lret
push
and
jns
jmp
jno
adcb
test
mov
loope
scas
jl
mov
lahf
ds
push
cmp
dec
push
andl
into
cmp
aaa
jne
cmp
idivb
mov
out
or
push
aad
ret
clc
xor
xchg
mov
test
mov
adc
mov
jb
es
pop
jo
dec
push
shlb
ret
or
add
pop
jns
cmpsb
cmpsb
cmp
data16
js
pop
jbe
and
jnp
pop
xchg
or
mov
leave
mov
mov
out
ror
out
adc
jmp
insb
shlb
loope
add
add
jae
in
aas
sub
cltd
mov
aam
jp
jmp
lods
fs
pusha
mov
ss
movsl
repnz
sub
jge
sbb
or
push
sbb
add
mov
call
sub
pop
mov
dec
sub
pop
mov
lcall
lds
fistpl
mov
nop
pusha
jbe
pop
and
mov
hlt
pop
add
sub
mov
jo
sbb
fwait
loop
push
loop
aaa
xchg
mov
mov
adc
pushf
jge
add
mov
fucom
cmp
sub
in
aad
mov
mov
mov
insb
iret
lea
test
mov
jns
mov
inc
lcall
cmp
int
pop
ficoml
jbe
add
sub
aam
aam
mov
inc
fidivs
cld
sti
mov
in
cmp
test
ds
lea
sub
mov
push
push
mov
sub
dec
negb
sub
movsb
push
addb
lcall
mov
xchg
dec
sti
movsb
cmp
mov
sbb
xor
scas
das
shlb
ficoms
jmp
mov
push
das
stc
sbb
das
jnp
and
cmp
mov
ret
lret
jo
outsl
lds
popl
cmpl
inc
xor
stos
movsl
leave
fxch
push
repz
jae
lss
ficomps
jb
hlt
jmp
cmc
sub
xchg
push
mov
call
lods
out
push
lret
add
jo
and
scas
gs
leave
call
jecxz
ja
mov
dec
les
pop
cmp
or
pop
cmp
and
mov
inc
lahf
xchg
push
cmpsb
dec
adc
and
xor
js
popf
pop
jns
scas
xchg
insb
dec
insl
xchg
test
movsl
push
packssdw
stos
fisubrl
mov
jle
sub
push
cmp
pop
lds
adc
lret
sbb
cmp
xchg
cmp
add
insb
in
add
jg
jae
jns
aaa
xchg
mov
hlt
hlt
mov
adc
enter
mov
fstpl
pop
movb
sbb
dec
es
xor
or
or
gs
sbb
insb
jecxz
repz
jbe
ja
mov
sbb
test
enter
mov
cmp
inc
adc
cli
cli
rorb
cltd
adc
or
es
es
iret
mov
cmc
sbb
mov
loope
fsubrs
jne
mov
call
xchg
xchg
and
movsl
sbb
adc
lock
push
icebp
ret
ficoms
in
or
ljmp
adc
cs
pop
cli
call
imul
popa
xlat
add
cltd
js
out
adc
pop
int
in
insb
in
ret
push
test
outsl
push
les
push
mov
scas
sbbl
fcmovne
jns
out
dec
inc
dec
or
xchg
in
xor
push
outsl
shll
pop
bswap
out
cmp
cmp
pop
inc
mov
mov
ljmp
aam
scas
scas
loope
push
lods
push
jnp
xchg
pop
xchg
xchg
and
gs
inc
sbb
test
push
xor
mov
and
cmp
aas
inc
lcall
xchg
test
popa
push
neg
outsb
sbb
jnp
gs
add
dec
repz
sub
ret
das
mov
xchg
iret
mov
add
and
dec
sbb
xchg
stos
jb
push
mov
push
std
cmc
lret
ds
ss
jns
lret
add
cld
ja
mov
sbb
sbb
icebp
sub
pop
pop
imul
push
xor
adc
mov
out
dec
pop
sahf
add
xchg
or
xchg
imul
jb
shlb
pop
and
pusha
stos
scas
int3
sub
pop
cmp
insl
mov
jge
push
aam
filds
cmp
xorl
add
insb
pop
push
insb
or
pusha
notl
test
das
jno
xor
or
shrb
call
xor
xor
ficoms
or
popa
xchg
jg
jnp
cmc
insl
push
cmp
mov
addr16
xor
movsb
mov
lret
test
or
out
push
or
or
and
je
rorb
mov
js
cmp
and
cwtl
mov
jnp
dec
jno
mov
pop
movsl
push
pop
xor
jb
stc
or
fdivrl
and
and
enter
cld
fisubl
dec
add
je
or
sub
es
imul
and
daa
sbb
pop
push
in
enter
repnz
xor
fsubrs
lods
sbb
dec
sbb
add
mov
addb
int
xchg
lods
mov
cli
imul
mov
ret
inc
fidivs
mov
cmpsl
sarb
out
mov
inc
mov
mov
mov
nop
sbb
aad
int
addr16
imul
cltd
pusha
cmc
push
mov
sti
in
ficomps
mov
jmp
or
int3
mov
loop
lret
ret
imul
psadbw
notb
or
fnstenv
das
xchg
xchg
sbb
sub
inc
mov
mov
pop
jp
jl
jnp
ret
outsb
dec
jns
or
out
sbb
xor
jns
mov
cld
or
cli
adcb
push
mov
ret
push
ljmp
test
gs
mov
mov
pop
inc
sbb
shlb
xchg
shlb
dec
push
dec
lods
lods
dec
sbb
andb
xchg
inc
mov
std
push
xchg
ss
push
jb
pop
adc
popa
aam
mov
lods
out
pop
in
pop
pop
cs
ret
mov
fdiv
test
and
es
in
aaa
mov
subl
jmp
test
push
push
dec
xlat
push
pop
push
stos
repnz
fcoms
and
cld
push
popf
pop
mov
pop
jnp
pop
scas
pop
and
xor
and
test
arpl
imul
sbb
out
in
mov
daa
fs
out
aam
decl
adc
cmp
lea
outsl
shr
pop
xchg
push
nop
dec
lods
jne
cmp
jbe
divl
add
cmp
mov
rol
sarb
and
pop
pop
aam
aas
add
lea
jl
pop
inc
pop
inc
shll
xlat
movsb
mov
cmc
adc
cmc
xchg
xchg
fwait
popa
push
inc
inc
adc
imul
movsl
ja
xchg
cmp
shrb
jo
loop
lret
loop
mov
jne
out
jne
cmp
lods
jecxz
repnz
mov
push
mov
outsl
in
mov
loop
push
test
inc
and
into
scas
lahf
cmp
sbb
push
inc
das
mov
mov
pop
jmp
movb
jp
mov
inc
mov
in
je
xchg
shrl
aam
cmp
adc
ss
mov
lea
push
pop
dec
enter
loopne
dec
jo
push
ret
gs
push
mov
mov
inc
or
pop
mov
sbb
cmp
ror
sbb
fisttps
stos
loopne
pop
mov
adc
nop
jl
mov
lods
pop
and
and
fisttpll
cmpsl
pop
adc
rorb
xor
jecxz
lret
mov
leave
mov
stos
fcmovnu
pop
cmpsb
mov
jl
pop
xchg
dec
outsl
xor
cmc
cld
add
dec
mov
dec
scas
scas
jb
enter
cmp
mov
push
into
or
mov
xchg
xchg
xor
in
repnz
push
mov
sbb
ljmp
leave
outsb
and
sbb
pop
into
mov
je
push
mov
jnp
or
pushf
std
sub
xchg
arpl
outsb
pop
adc
leave
stc
xor
jne
mov
mov
cmpsb
int
xchg
jns
and
and
or
and
jnp
xchg
out
and
jecxz
adc
pusha
jge
xchg
and
jnp
jo
xchg
data16
subb
pushf
xchg
cld
cld
clc
push
outsl
mov
stc
call
ret
push
insb
icebp
fdivr
test
xchg
ret
xchg
cvtps2pd
xor
dec
cmpl
xchg
jnp
cmp
sbb
jae
fmull
stos
push
push
push
mov
jl
out
lcall
or
scas
adc
ret
push
test
adc
into
pop
and
test
icebp
jp
or
and
and
ljmp
rcr
push
push
hlt
mov
stos
mov
adc
cmp
or
xor
clc
sbb
cltd
inc
das
push
mov
in
and
add
jno
sub
test
je
iret
lods
pusha
pusha
jmp
cli
sbb
std
mov
and
add
rcl
jns
lcall
shrb
and
mov
mov
mov
add
mov
mov
sub
push
push
nop
or
lret
xor
push
sub
pop
divb
add
or
bound
fdivrs
mov
mov
icebp
ljmp
shrb
xchg
popa
jmp
dec
sar
test
mov
and
loopne
lahf
pop
shrl
sub
fcmovbe
inc
mov
and
fs
pusha
and
cmp
sbbb
or
jno
mov
and
lods
inc
add
dec
mov
loopne
sub
sbb
nop
insb
add
std
pusha
dec
test
mov
leave
leave
insl
mov
or
repz
fsubl
loope
push
es
sbb
ss
leave
sbb
xor
lds
push
add
adc
push
xchg
test
hlt
call
lret
xor
add
in
jno
dec
pop
outsb
pop
test
stos
pusha
inc
movd
and
rcrl
hlt
insb
icebp
add
mov
bound
jb
fxch
addr16
push
push
mov
dec
mov
out
in
aaa
dec
add
rcrb
cld
add
and
fisttpll
fnstsw
out
out
dec
lock
rclb
or
movsb
pop
inc
loop
xchg
mov
inc
push
pop
jbe
rcrb
pusha
jl
out
push
rorb
pop
subl
pop
fwait
pop
sub
dec
dec
arpl
jbe
repz
and
pop
mov
sbb
ljmp
cltd
std
lcall
sub
mov
negb
xchg
stc
out
push
push
out
sub
jno
jle
mov
mov
xchg
pop
sar
mov
movsb
mov
out
dec
lcall
insl
sti
clc
cs
es
faddp
jmp
and
bound
sti
push
xchg
or
sbb
jne
bound
cmp
and
pushf
cli
int3
adc
push
ja
pop
jl
sub
mov
outsb
outsl
xor
lds
arpl
jp
out
push
jbe
push
jae
mov
push
lods
lahf
adc
jecxz
sub
sub
dec
call
push
sbb
mov
icebp
cld
dec
inc
push
ja
in
aam
pop
add
lods
mov
sbb
jne
movsl
and
mov
adc
in
mov
push
mov
pop
fdiv
jl
mov
jbe
xchg
and
inc
mov
pop
pop
leave
iret
and
in
xchg
and
sub
and
xchg
add
sub
cmpsb
pop
aam
mov
call
or
lea
dec
mov
in
das
and
mov
clc
jbe
mov
dec
xchg
lcall
push
xchg
shll
xor
sahf
push
push
hlt
add
jnp
mov
popa
add
call
insl
les
dec
adcl
and
mov
notb
dec
jbe
int3
sub
faddl
xchg
or
inc
xor
bound
cld
es
lods
hlt
jl
cmpb
icebp
adc
xor
test
filds
lds
adc
mov
ss
push
mov
and
push
mov
ss
test
leave
loop
add
xchg
loopne
push
pusha
in
add
sbb
and
out
les
imul
and
cmpsl
pop
mov
fdivs
ret
repnz
ret
adc
inc
adc
or
lds
sub
and
lahf
loope
mov
je
movsl
test
cs
gs
jl
movsb
mov
stos
lret
arpl
or
pop
imul
jbe
mov
icebp
fisubrl
in
dec
mov
arpl
push
jns
ret
sub
leave
push
mov
sub
js
pop
mov
decl
out
xchg
fildl
aas
hlt
jl
push
cmp
pushf
pop
stc
jmp
leave
jmp
leave
hlt
push
push
sbb
lcall
stos
lds
stos
imul
fs
xor
xor
outsl
mov
stos
aaa
jo
jmp
and
out
inc
xchg
enter
aad
or
push
addr16
jo
xchg
insb
movsb
das
ret
out
ret
sbb
imul
loope
mov
or
ja
mov
dec
pop
in
mov
or
test
xor
pop
fistps
cmp
push
lcall
push
xor
mov
xchg
js
jb
inc
pushf
je
data16
xchg
sub
mov
je
aas
daa
movsl
iret
mov
mov
dec
mov
pop
mov
cmp
push
pop
sub
and
imul
push
sbb
sub
dec
sbb
out
push
scas
or
mov
cmpl
mov
stos
adc
cltd
mov
loop
mov
js
fcomi
add
out
test
mov
in
jmp
and
imul
inc
orl
js
out
test
es
arpl
or
mov
sub
lcall
sub
mov
outsb
leave
ss
pop
fdivr
dec
adcl
add
lea
daa
das
xor
stc
cltd
or
scas
shl
enter
cmp
xlat
js
push
inc
les
pop
and
or
xor
cmpsb
popf
rolb
inc
sbb
mov
es
repz
popa
mov
sbb
inc
add
or
hlt
pop
jno
push
into
sbb
cwtl
lret
and
or
sbb
xlat
or
andl
pop
and
cmpsb
clc
push
push
cmp
cli
sbb
dec
gs
lcall
movsb
dec
fsubl
outsl
mov
cmp
sbb
int
insb
addr16
ret
or
insb
pop
xor
movsb
inc
sub
sub
jae
add
fidivl
out
testb
test
add
cmp
mov
cld
sub
mov
shlb
xor
mov
faddl
out
leave
subb
cmc
lahf
es
loop
dec
daa
les
call
pop
push
in
mov
and
int3
jb
xchg
cmpsb
fcompl
cmpl
js
or
and
mov
push
mov
pop
xchg
sbb
adc
pop
push
sub
cld
in
insb
pop
inc
pop
mov
inc
jns
repz
sbb
aad
add
mov
sub
add
mov
mov
mov
leave
hlt
and
or
les
jbe
shll
nop
es
xchg
mov
mov
xchg
insl
cld
mov
sub
jmp
bt
loop,pn
not
sti
or
lcall
or
lods
aaa
fstpt
test
fwait
es
add
fwait
nop
jg
xorl
cld
inc
mov
cwtl
jbe
push
mov
lods
mov
or
mov
sbb
sub
or
dec
and
fwait
cmp
std
push
jno
mov
jbe
jg
mov
inc
out
adc
enter
sti
dec
aas
jmp
xlat
jp
cmpsb
sbb
mov
xchg
nop
jmp
arpl
clc
loopne
dec
pop
lcall
push
leave
inc
inc
inc
sti
cmc
add
and
ret
repnz
loop
movsb
sbb
jnp
les
mov
fnop
cmp
jmp
adc
or
aas
inc
mov
push
sbb
sbb
push
outsl
mov
pusha
cmpsw
stos
popf
sbb
iret
in
lds
sbbl
lds
mov
add
jb
dec
push
pop
js
into
jo
test
scas
js
fsubrp
push
mov
xchg
jle
jae
insb
data16
mov
mov
pop
mov
call
les
stos
adc
test
mov
out
mov
test
push
inc
mov
jmp
lock
data16
mov
mov
repnz
xchg
mov
shrb
daa
push
jno
clc
cs
xor
sbb
inc
cmpsl
xor
mov
jp
inc
sub
imul
sbb
out
sub
inc
lret
xlat
lea
push
scas
leave
bound
xchg
leave
jb
das
adc
lea
jne
popa
xchg
or
jne
add
insb
enter
sub
xor
dec
inc
lret
mov
dec
push
mov
adc
sub
sbbb
fiaddl
mov
std
sar
inc
sbb
cwtl
and
sub
add
mov
fildl
add
out
pop
mov
mov
mov
dec
jo
sbb
ds
jmp
or
jns
lods
je
pop
mov
mov
xor
xchg
xchg
jg
mov
movsb
sub
mov
scas
cmc
jbe
adc
clc
mov
xlat
xor
push
cltd
pop
mov
in
ficoml
push
mov
pop
ror
and
mov
sub
movsb
xchg
flds
loope
pop
xchg
notb
pop
jp
sub
cltd
mov
int
pop
push
xchg
mov
rorb
dec
insb
mov
rorb
popf
cltd
stos
cmp
push
jg
mov
add
mov
pop
cmp
cmp
rolb
xlat
inc
scas
or
test
push
xor
shll
mov
or
cmp
jne
xor
aam
sarl
and
scas
sub
xor
dec
jno
xor
cmp
hlt
add
scas
mov
xlat
xchg
or
ret
fildl
ss
fcmovu
xchg
jle
cmp
movsb
sbb
jnp
out
and
cld
vprotq
ljmp
les
lds
iret
xchg
mov
scas
test
pop
adcb
xchg
cmp
xor
out
lds
xchg
in
jle
fucomip
push
test
cmpl
cs
jge
ret
stos
mov
sbb
push
pop
or
fdivrl
scas
sbb
inc
xchg
imul
cmp
fstl
jnp
gs
sbb
adc
fistpll
and
test
out
cld
push
popf
leave
mov
cmpsl
jle
inc
mov
or
push
xchg
ficoms
into
decb
sbb
push
inc
subl
add
cmp
pop
sub
adc
scas
cmc
popf
cmp
mov
mov
fmuls
sub
int3
xchg
das
xchg
aaa
outsl
dec
inc
xchg
hlt
mov
inc
or
clc
or
pop
dec
mov
xchg
aas
dec
push
stc
ds
inc
mov
pop
jnp
inc
xor
mov
ds
mov
movsbl
dec
nop
add
xchg
pop
notb
cmp
add
in
jecxz
cli
or
xchg
cld
pushf
mov
mov
push
dec
in
xchg
sub
sbb
mov
repz
cmpsl
push
popa
das
xchg
sub
leave
pop
dec
pop
cmpsb
mov
js
gs
popa
cmpsl
mov
pop
cmpl
loopne
movb
addr16
cmp
jo
sub
jnp
or
scas
addl
das
jno
mov
leave
js
pusha
dec
aad
mov
pop
les
cmp
xor
inc
into
sbb
mov
dec
imull
clc
insl
xchg
xchg
add
push
test
cltd
or
jnp
pop
jecxz
daa
lret
mov
pop
dec
leave
arpl
xor
mov
push
inc
mov
scas
push
inc
jnp
mov
jno
sbb
lret
test
push
add
jnp
das
ret
fadds
je
imul
adc
incl
mov
dec
andl
or
sub
in
xor
mov
test
cld
and
fwait
jge
pusha
mov
pop
jp
xor
sbb
xchg
lods
rcr
test
or
jae
lods
mov
and
mov
lret
jo
lahf
cmp
sti
cli
pop
push
das
jp
je
xchg
cmp
push
dec
mov
repnz
scas
rorl
lret
jg
icebp
lret
sbb
mov
mov
daa
or
iret
and
stos
mov
ret
push
jp
jnp
mov
in
into
lds
pop
icebp
shll
dec
or
push
mov
imul
adcb
push
mov
mov
xor
aas
mov
or
aam
add
and
adc
inc
filds
push
jns
cmp
ljmp
push
fisubl
aam
xor
xchg
dec
int
stc
leave
bound
or
jp
and
jne
scas
mov
jge
clc
sbb
push
stos
out
in
pop
repnz
out
xor
divl
je
mov
test
idiv
sub
movq
sub
inc
out
mov
int3
test
jae
shrb
out
mov
mov
push
sbb
mov
sub
fs
push
adc
hlt
pop
loopne
cltd
shl
pop
iret
mov
mov
daa
sar
pushf
mov
out
jb
cmc
bound
int3
scas
in
jnp
inc
mov
inc
inc
cmp
loopne
mov
inc
jl
or
dec
jp
pop
or
mov
xchg
push
inc
xchg
pop
scas
movsb
push
adc
jge
and
sub
in
xchg
mov
or
dec
lea
cltd
add
pop
mov
xchg
xchg
lea
mov
cltd
xor
xchg
in
nop
leave
sub
xchg
or
or
lret
lea
dec
int3
jns
test
adc
nop
sbb
dec
mov
test
lods
mov
gs
xchg
divb
fistl
add
js
xor
adc
sbbb
pop
mov
aas
and
cmp
sahf
les
ror
xor
nop
push
cmp
idivb
pop
push
push
outsl
subb
cmp
lea
mov
pop
cmp
icebp
icebp
cld
ret
inc
mov
fidivrs
lret
je
sbb
push
xor
scas
ret
adc
xor
push
jno
ljmp
jnp
sub
neg
xchg
lahf
js
or
sub
rclb
cltd
pop
stos
pop
pusha
lods
sarb
mov
jbe
jle
aaa
pusha
jecxz
into
rcrl
and
or
cli
rol
mov
hlt
shlb
gs
mov
mov
cmp
mov
aam
mov
mov
xchg
cmp
xorl
and
outsl
or
shlb
sub
push
inc
call
or
sub
cwtl
sbb
das
enter
xor
pop
pop
in
xor
adc
aad
adc
scas
scas
ret
fs
and
aaa
xor
mov
call
scas
push
and
adc
repz
mov
mov
xor
mov
and
les
add
push
pushf
adc
or
into
in
and
inc
out
push
int3
pusha
sbb
jnp
lret
lock
in
mov
push
movsb
and
or
outsl
or
xchg
aaa
xor
popa
cmpsb
test
lcall
mov
jmp
pushl
movsb
ret
loopne
pusha
push
pop
fsubl
or
addr16
xlat
call
lea
jnp
mov
inc
sub
mov
sub
out
test
or
mov
mov
in
aas
xor
mov
adc
xchg
jmp
cmp
xor
lret
imul
pop
add
call
cmc
sub
mov
mov
xchg
xchg
pushf
lds
lret
clc
add
lcall
fwait
aas
imul
jge
fistps
xor
sarl
lcall
lahf
dec
or
fbld
popf
stos
jne
ret
movsb
mov
lock
dec
mov
clc
mov
aad
mov
les
pusha
dec
clc
jmp
in
idivb
inc
jns
int3
adc
or
lret
or
jb
subl
or
cmc
mov
add
mov
mov
sub
mov
call
pop
inc
in
mov
or
fcomip
lahf
inc
sub
inc
loop
mov
int
fiadds
gs
xor
neg
mov
mov
pop
shlb
cmp
addb
nop
jge
jecxz
push
cmp
adc
push
imul
xor
in
dec
cltd
mov
pop
je
int
jo
pushf
push
jns
mov
addb
icebp
mov
sti
inc
cmovo
push
pusha
add
test
and
mov
movsb
dec
and
daa
xchg
jb
mov
mov
enter
je
adc
jb
into
ret
sub
fldt
adc
pushf
inc
jmp
sahf
add
push
cmp
cmp
and
mov
leave
jmp
pushl
xlat
xorl
sbb
and
pop
sub
jae
jle
jmp
je
cmp
push
imul
or
std
bswap
adc
pop
test
lret
inc
addr16
test
outsl
cmp
mov
fisttpll
imul
adc
imul
or
xor
pop
pop
mov
pusha
ja
aaa
out
fsts
js
pop
jecxz
xchg
mov
movsl
movsb
push
or
jb
aaa
sub
dec
clc
popf
or
cmc
ljmp
icebp
jb
xchg
or
roll
push
push
lods
ss
jg
es
fnstcw
and
ficoml
out
xchg
in
mov
and
jmp
fisttpl
mov
mov
push
push
sbb
inc
jne
aam
insl
inc
adc
jo
xchg
cmpsl
jno
push
jno
aaa
pop
dec
movsb
push
mov
test
mov
dec
mov
pop
fcoms
push
into
fdiv
jle
fidivl
mov
mov
popf
xor
sbb
cmp
out
sti
sahf
adc
movsb
add
test
push
and
cmp
xor
scas
xor
test
mov
mov
leave
push
ljmp
imul
fildl
inc
sbb
mov
stc
add
test
std
xchg
icebp
push
stc
loopne
sar
and
cmp
lea
sti
scas
push
insb
daa
jecxz
into
aam
jmp
cwtl
push
int3
xchg
daa
daa
jo
mov
test
in
in
les
out
addr16
ljmp
test
enter
das
add
jecxz
mov
lock
cmpsl
in
jecxz
adc
out
jl
mov
add
dec
jmp
int3
lods
jne
inc
jmp
repnz
mov
movsb
or
xor
dec
lea
sets
pop
icebp
or
dec
das
rolb
push
xor
into
adc
mov
push
out
sti
lret
rcll
mov
jo
fcoml
or
fs
jge
test
xchg
cmp
lods
or
cmp
add
dec
sub
ficoms
outsl
mov
std
xchg
push
popf
xchg
addl
pop
pop
adc
push
pop
jb
shrb
sbb
fnstcw
rcll
cltd
loopne
sub
stos
fldcw
xchg
jp
push
shl
scas
lret
imul
loopne
lret
xor
fnstsw
and
test
jle
xchg
mov
pop
lcall
pop
fistl
out
leave
nop
pop
aam
cltd
sbb
xchg
mov
sbb
enter
out
stos
push
adc
fidivrs
lods
out
sub
mov
or
push
int
jle
mov
aam
fprem1
xchg
out
add
xor
add
sub
loop
sahf
shrl
outsl
sbb
xor
cmp
xchg
sub
cmpl
cmp
pop
lcall
mov
add
xor
mov
js
test
addb
push
mov
mov
dec
cmp
dec
cmp
xor
repz
int
jge
pushf
ret
fisubrs
pop
daa
adc
fldenv
testl
pop
insl
xor
push
adc
mov
jmp
or
jl,pn
pop
pop
out
in
add
xlat
sahf
jmp
in
outsl
dec
stc
popf
gs
repz
hlt
mov
loopne
push
stos
lods
dec
ds
jle
insl
fbld
jns
xor
push
mov
jle
lahf
jne
xchg
adc
mov
pop
enter
push
mov
pop
repz
rorl
pop
cmp
mov
and
add
test
xchg
into
pop
adc
and
push
jmp
xchg
test
mov
mov
mov
inc
push
lock
loope
iret
add
sub
cmp
imul
lock
insl
stos
mov
dec
mov
sub
dec
int3
pmulhw
stc
pop
daa
pop
ljmp
mov
test
jo
pop
iret
stos
mov
cmpsl
jg
popa
dec
mov
push
cmp
test
es
loope
rcrl
add
xor
sti
rcrl
shl
jmp
icebp
xchg
movsb
data16
jecxz
lahf
out
fcmovnb
inc
inc
ljmp
test
in
movsl
mov
dec
inc
cmp
push
mov
scas
sbbl
sbb
or
jge
out
mov
xchg
push
iret
push
loope
es
or
sbbb
sbb
and
imul
fdivr
call
adcl
pushf
xchg
cmpl
xchg
cmp
adc
adc
sub
popf
mov
mov
xchg
sub
pop
clc
pop
lcall
jecxz
sahf
push
repz
adc
jmp
mov
repz
ljmp
test
ja
cmc
push
and
add
mov
shl
jp
jg
lods
add
call
push
stc
xor
aaa
add
add
nop
imul
sbb
pop
cs
sti
sbb
adc
dec
xchg
pop
rol
push
xchg
push
lock
mov
rcrb
lods
mov
clc
xchg
mov
loope
les
push
aas
push
je
jmp
or
hlt
sahf
inc
inc
imul
pusha
popf
pop
cli
outsb
in
popf
subl
jg
add
jae
stc
cli
rclb
lret
jne
out
ret
std
std
movsb
outsb
pusha
jae
ljmp
lea
int
aaa
dec
adc
cmp
adc
push
xlat
cltd
hlt
sbb
adc
mov
sbb
call
mov
lret
lods
sahf
or
lea
sub
lret
mov
cmp
jns
and
or
bound
inc
stos
mov
int3
test
push
mov
mov
jmp
inc
push
data16
sbb
leave
xor
xchg
les
adc
pop
xor
push
jmp
pop
jp
xchg
pop
imull
xor
nop
sub
cmp
scas
into
inc
jg
ds
lahf
push
add
xorl
imul
inc
outsl
out
mov
dec
loope
out
pop
mov
repz
mov
lret
push
inc
sbb
sti
stc
shl
and
shlb
jl
jno
rol
fdiv
push
iret
mov
cmpsb
dec
push
xchg
mov
push
sub
push
ds
cs
mov
leave
push
fnstsw
out
cmp
js
jae
mov
fwait
call
aad
into
loop
js
inc
pop
and
loope
xchg
mov
es
push
push
ja
enter
adc
jmp
les
ds
mov
cmpsl
aad
xchg
mul
or
mov
pop
mov
mov
fcompl
insb
xor
pop
fucom
push
scas
pop
cmp
repz
test
fs
cmpsb
les
jb
scas
mov
add
inc
mov
cmc
sub
loope
notb
in
pop
cmp
iret
mov
adc
sbb
hlt
enter
xchg
mov
inc
call
xchg
fmull
xchg
popf
movsb
fcomp
out
rol
inc
daa
fnstcw
loope
mov
xor
pop
pop
xchg
dec
icebp
sysret
adc
cmp
or
insb
outsb
movsb
popa
adc
pop
pop
mov
adc
bswap
ja
std
stos
dec
in
jle
mov
sarl
fnsave
cmp
push
test
arpl
xor
mov
sbb
adc
rorb
into
and
jnp
rcrb
es
pop
pop
jp
mov
fidivrl
add
adc
adc
inc
mov
jl
pop
std
sbb
sti
dec
lds
mov
call
and
in
ret
mov
jno
out
hlt
pop
ja
sbb
adc
jl
push
stos
push
mov
rclb
lds
scas
sub
fbstp
mov
mov
cld
fmull
cmp
cltd
cli
push
stc
lods
dec
push
mov
sub
cs
loop
xchg
loop
es
xabort
jecxz
pop
out
dec
test
roll
bound
into
ss
inc
mov
aad
cmp
mov
push
stos
sub
and
fdivrl
push
ret
xchg
xchg
mov
jmp
out
xor
adc
and
stos
inc
xor
xor
sbb
ss
push
pop
lods
pop
notb
std
enter
jge
arpl
bound
mov
ljmp
inc
ret
mov
jmp
int
stos
fcomps
dec
cmpsl
out
lock
or
jge
or
lahf
hlt
xchg
inc
add
pop
mov
loopne
xlat
adcb
aam
loopne
out
jns
ret
inc
or
xchg
and
cmp
dec
lahf
push
stc
jae
pushf
push
call
das
fld
push
pop
outsl
xlat
add
testl
fldt
mov
pop
fcmovne
cmpsb
dec
cmp
scas
mov
mov
mov
mov
cli
insl
rcrl
cltd
mov
aaa
scas
fnstenv
push
out
mov
or
rcrb
xor
mov
movsb
or
fidivrl
mov
xor
aas
inc
pusha
and
inc
in
jns
push
aaa
jno
inc
pop
in
adc
nop
sbb
fidivrl
add
jae
imul
and
lahf
sub
test
mov
xchg
mov
jnp
aaa
inc
ds
dec
das
push
mov
and
arpl
int
arpl
repz
jecxz
sbb
repz
cwtl
icebp
movb
push
mov
icebp
mov
pop
cltd
cmpb
pushf
push
int
stc
testb
lds
sti
mov
xchg
data16
cmp
mov
lahf
and
push
push
adc
test
xchg
clc
xchg
and
pop
push
inc
or
or
mov
push
xchg
rcrl
test
repnz
mov
in
mov
lahf
pop
jnp
adc
push
test
mov
mov
aad
int
js
fwait
push
xor
inc
mov
inc
mov
gs
push
ficoms
fildll
push
jl
mov
jb
pop
mov
sub
push
stos
testl
sbbl
sbb
outsb
mov
ljmp
pop
mov
arpl
cmp
mov
xchg
mov
adc
cmp
xor
xor
or
cmc
sahf
dec
add
sub
mov
rcll
in
sbb
jmp
inc
repz
cmp
pop
test
stos
out
sub
jbe
leave
dec
cmp
jno
ret
dec
mov
inc
cltd
jmp
pop
leave
xor
jmp
pop
in
xchg
shl
jecxz
add
jo
add
pop
ret
ljmp
mov
leave
jg
daa
iret
xchg
dec
movsl
jae
pop
sub
mov
aaa
jg
adc
jns
xor
mov
xchg
inc
dec
ret
cmpsl
sub
mov
fidivl
pop
rol
inc
jb
mov
cmpb
and
dec
inc
adc
jle
mov
mov
scas
pop
int
push
fdivrl
cmpsb
sbb
xor
roll
cmp
scas
fdivr
es
dec
insb
ljmp
dec
sbb
xor
jb
das
pop
ficompl
and
push
faddl
scas
adc
xchg
loop
enter
ficoml
push
gs
sbb
push
mov
sbb
fdivr
mov
xor
mov
push
xor
lods
sub
scas
shrb
data16
jns
data16
test
mov
xchg
pusha
int
sbb
and
out
and
inc
and
cltd
and
xor
ds
cmpb
mov
sub
repz
xor
cmp
xor
mov
call
gs
inc
cmpsb
sbb
dec
lods
popf
lods
mov
push
cmp
jbe
insb
dec
iret
sbb
mov
lret
or
lods
sti
sub
xchg
dec
popf
cmp
fs
fistpll
pop
das
lock
sub
mov
jp
std
test
imul
and
imul
enter
fisttps
sub
xchg
xor
xchg
cmp
scas
adc
aam
ss
dec
cmp
call
fsubrs
es
mov
das
sub
push
test
hlt
sbb
and
outsb
jns
xchg
mov
xchg
sbb
jecxz
xchg
insl
lock
testb
mov
pop
push
lea
mov
and
xchg
fs
adc
data16
sbbb
mov
divb
push
sarb
xchg
int
xchg
sbb
mov
push
adc
test
arpl
jp
dec
shlb
cmpl
stc
movsb
push
mov
inc
add
lahf
xchg
inc
sub
mov
aam
cmp
sub
icebp
movntq
or
jns
push
inc
dec
fs
subb
add
dec
scas
insl
xchg
mov
jg
mov
inc
in
rcrl
scas
sbb
mov
mov
imul
sbb
dec
pop
fs
mov
mov
movsb
sbb
mov
imul
adc
dec
adc
int
xchg
or
cmc
mov
jle
imul
xlat
jg
inc
push
inc
jns
mov
adc
sbb
inc
xchg
push
cmp
xchg
pop
sbb
out
in
inc
pop
mov
lods
rol
ret
jge
xchg
mov
pop
mov
js
pop
cmc
insl
jbe
roll
cs
imull
cmp
es
iret
pop
cmpsl
cmp
cmp
insb
xor
push
mov
popf
stos
dec
lret
cmp
pop
stos
pop
out
xor
enter
lea
fadd
dec
ficompl
dec
dec
into
ret
push
cmp
and
imul
add
add
jg
sahf
push
pop
cltd
mov
jg
leave
mov
jnp
lds
and
sbb
rcl
pop
ficomps
sbb
mov
mull
xor
lahf
outsl
insl
enter
ret
adc
clc
cmp
xor
jbe
lret
and
and
fistpl
cs
sarb
scas
sbb
cltd
psubw
mov
jnp
inc
jecxz
hlt
xor
cmc
insb
movsb
fs
scas
jo
xchg
mov
je
sub
push
enter
mov
pop
inc
push
jne
and
mov
dec
add
sub
mov
mov
pop
mov
lds
hlt
dec
sbb
and
cmp
dec
sub
pop
test
aaa
push
add
std
fcoms
repz
mov
aam
and
inc
addr16
aaa
mov
in
adc
jae
sub
dec
cmp
rolb
out
pop
lcall
popf
fwait
pop
mov
mov
ja
jg
push
std
mov
sub
mov
outsb
stc
xchg
push
dec
jg
ds
iret
sbb
repnz
mov
xchg
xor
rcrl
lret
bound
add
mov
cmp
test
popa
inc
call
or
out
enter
pop
inc
cmp
dec
pop
hlt
stos
enter
xchg
cmp
es
sbb
adc
push
clc
add
int3
xlat
sub
add
out
xor
scas
es
sub
dec
out
inc
lcall
cmp
adc
mov
mov
add
dec
in
mov
xchg
test
stc
sub
in
adc
jle
cltd
shrb
push
mov
jbe
insb
and
pop
lret
ja
leave
ja
mov
mov
leave
bound
lcall
dec
insl
shl
add
lock
sar
inc
mov
jmp
and
pop
inc
inc
mov
fimull
adc
push
rcll
mov
pushl
push
mov
push
fidivrl
ss
and
stos
jne
inc
notl
lds
and
adc
daa
xchg
jo
cli
mov
jns
pop
addr16
adc
fld
inc
lods
sub
or
orb
jo
push
mov
ffreep
loopne
pop
adc
cmc
ja
xchg
test
pop
imulb
std
addr16
and
cmp
mov
and
jl
adc
stc
imul
jle
fidivs
lahf
jl
xchg
and
jge
loope
lcall
xor
adc
pop
jbe
inc
xchg
mov
mov
dec
idivl
ss
pop
push
push
mov
sbb
outsl
hlt
jns
psubusw
jne
and
das
lsl
push
xchg
sub
arpl
push
push
pushf
lret
mov
movsb
sbb
fsubrs
push
xor
adc
gs
dec
cmc
and
push
add
inc
jle
insl
ja
dec
jge
ja
cmpsl
loope
stos
xor
clc
scas
out
lods
xchg
jecxz
into
jns
mov
mov
pop
rcl
dec
mov
cltd
cmpsb
cmp
ret
jno
inc
stc
lahf
out
decl
jmp
xchg
pop
xchg
inc
adc
mov
into
push
inc
or
loopne
pop
pushf
mov
mov
aad
mov
outsb
pop
sti
sbb
ds
outsb
jg
jmp
je
or
push
cli
movsb
mov
xor
clc
push
les
mov
xor
hlt
cmp
push
sub
dec
sbb
insl
icebp
scas
repnz
js
dec
dec
cwtl
sti
int3
insb
adc
mov
jp
test
pop
inc
mov
fstl
in
inc
cs
test
push
push
and
cli
mov
mov
inc
ljmp
jecxz
add
insb
mov
jbe
add
mov
shlb
lcall
ret
insl
xor
leave
aaa
jecxz
in
jo
lock
sbb
mov
jae
test
les
cmc
cmc
dec
loop
adc
mov
mov
and
push
sub
clc
outsb
fimull
jo
sub
xchg
inc
cltd
push
pop
bound
add
loopne
jnp
cli
xor
outsl
outsb
sub
fchs
rolb
scas
scas
leave
inc
imul
int3
pop
mov
xor
pusha
pushf
arpl
inc
cmc
jp
dec
cmp
int
and
push
aas
jmp
mov
mov
pushl
push
adc
pop
dec
lds
test
gs
push
outsl
into
clc
jbe
sub
fcoms
jnp
stc
clc
ret
mov
scas
pop
les
lock
cmp
sarl
jbe
xlat
subl
cmpsl
sub
jecxz
xchg
mov
fdiv
cs
xor
repnz
roll
int3
push
outsb
push
xor
xchg
stc
mov
data16
shrb
das
ret
test
or
inc
sub
fiadds
imul
in
cmp
out
fnstcw
inc
sbb
mov
xchg
or
testl
sbbl
pop
inc
scas
insl
sub
adc
inc
lret
ror
sub
mov
mov
push
xchg
pusha
cmp
sbb
jmp
pop
push
mov
test
push
push
jecxz
fimull
repz
sarb
outsl
std
into
mov
jnp
pop
pop
dec
stos
add
out
mov
or
popf
dec
insl
lock
mov
mov
mov
scas
sarb
mov
lea
mov
jmp
adc
jnp
xchg
stos
and
xchg
insb
std
sub
dec
xor
repnz
fisubl
enter
pop
push
dec
mov
into
movsb
ljmp
popf
jl
or
cmp
rclb
pop
sub
jle
jp
mov
xor
dec
jecxz
mov
lds
sbbl
insl
lock
xadd
jae
inc
mov
inc
xchg
dec
push
xor
aam
daa
dec
das
cmp
mov
je
push
pop
cmpsb
pop
inc
add
xor
pop
sbb
rcrb
add
mov
call
in
enter
and
in
cmpsb
in
divb
pop
xchg
inc
xor
sbbb
dec
sbb
mov
icebp
adc
addl
or
mov
pop
pop
and
jnp
push
mov
and
daa
add
pop
scas
mov
sti
pusha
inc
or
test
sub
sti
and
paddsb
aas
mov
xchg
dec
gs
shll
lea
mov
js
lods
jne
mov
push
ja
bound
dec
add
add
and
push
mov
push
xchg
imul
xchg
jno
mov
jo
fst
stos
js
rclb
jecxz
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sbb
call
pop
xor
shlb
int3
adc
jb
add
mov
xor
jle
movzwl
mov
mov
sub
mov
xor
add
xor
mov
mov
mov
sub
xor
dec
dec
dec
call
push
nop
mov
inc
pop
dec
jne
jmp
stc
ds
in
mov
xor
fdivs
push
xchg
test
xor
imul
or
movb
fstps
jle
lcall
in
add
push
dec
dec
outsl
jl
std
cltd
inc
inc
push
je
mov
inc
in
add
cmp
jp
out
aas
dec
out
fisttps
mov
pop
push
lret
lods
in
xchg
in
dec
sbb
insl
std
mov
push
add
pop
stos
mov
mov
rolb
je
enter
inc
in
lea
mov
jb
movsb
cltd
out
pop
push
repz
aas
mov
jbe
push
xlat
ret
pop
shr
movsl
push
sub
pop
mov
push
add
js
imul
mov
insb
jge
pop
std
movb
sub
outsl
cmp
ficompl
int3
lret
jl
mov
leave
inc
jle
int
test
mov
aad
jle
pusha
jae
rcrb
mov
je
enter
test
add
mov
mov
arpl
cwtl
adcl
out
cmp
or
pop
in
cld
and
jmp
cmp
xlat
in
mov
push
nop
sub
out
cmp
pop
imul
scas
pushf
lds
in
fiadds
jb
movsl
jp
and
scas
add
cmpsl
arpl
test
push
mov
rcl
lock
mov
in
mov
mov
out
xor
mov
arpl
dec
jae
push
or
xchg
xchg
sti
loop
adc
imul
lret
add
and
xchg
push
cltd
cs
pop
lods
jb
pop
fistps
dec
imul
jo
or
and
stc
add
inc
push
and
fisubs
sahf
iret
pushf
daa
js
xor
scas
xchg
and
cmpsb
inc
popf
in
popa
nop
xor
adc
imul
jns
push
lret
fsubs
push
into
movsl
or
lea
out
clc
add
cmp
stos
xchg
in
out
and
push
fimull
icebp
insl
mov
push
adc
xchg
mov
outsb
inc
push
cld
nop
jmp
aad
xor
fiaddl
xchg
ret
lret
repnz
push
aaa
lret
dec
or
popf
or
es
inc
aad
test
xchg
mov
incl
mov
adc
int3
cmpsb
cltd
jg
jmp
push
or
xchg
pushf
jl
adc
jle
cmp
rclb
mov
sbb
mov
mov
inc
sahf
adc
orl
mov
fwait
mov
push
dec
pusha
sbb
pop
arpl
mov
jno
pop
fwait
jge
add
test
add
rorb
shll
outsl
push
add
popf
xchg
push
ja
mov
pushf
jb
add
inc
lods
xor
lret
push
add
lcall
cwtl
mov
xlat
pop
jno
add
jno
add
jno
push
lds
jle
mov
or
add
out
cmp
mov
nop
call
push
push
neg
add
jno
or
cmp
or
jns
mov
into
dec
sbb
adc
add
out
sbb
je
jno
add
jno
lea
test
add
xor
pop
pop
jns
repnz
lds
test
add
jo
add
jno
je
jno
add
sbb
ja
dec
xchg
je
jno
add
test
add
sub
sbb
int
mov
adc
add
sbb
repnz
xchg
das
daa
sbb
adc
jb
add
or
sub
fiaddl
icebp
sbb
test
jmp
dec
or
xchg
je
jno
add
pop
mov
jno
pusha
nop
mov
out
sbb
out
popl
xchg
cs
sbb
jns
cltd
test
out
jecxz
mov
adc
dec
xchg
je
jno
add
insl
adc
sbb
add
sbb
ljmp
or
lods
jno
sti
cmpsb
add
add
jns
add
jno
add
jno
add
jno
gs
fsubrl
ja
insl
sub
lcall
lock
vmread
fnstsw
fmull
loopne
test
jg
rorb
xchg
vmread
fnstsw
sbb
and
sbb
loopne
test
pop
fldt
test
pop
jecxz
and
fistpll
mov
dec
lock
vmread
fnstsw
daa
mov
lock
add
add
mov
adc
mov
dec
lock
vmread
fnstsw
testl
add
mov
push
lock
vmread
fnstsw
mull
imulb
pop
dec
or
sub
rclb
leave
std
jno
add
outsl
and
and
fistpll
mov
cmp
enter
and
sbbb
mov
imulb
sbb
outsl
inc
mov
xor
add
rolb
lret
leave
pop
or
sti
lea
aas
into
mov
icebp
lahf
mov
adc
xor
rolb
lret
leave
inc
or
sti
pop
mov
sub
scas
adc
add
jno
sti
dec
xchg
add
jno
add
jb
fs
test
push
mov
sbb
sbb
imul
jno
popf
or
or
sbb
mov
add
stc
adc
sbb
outsl
fdivs
sbb
xchg
mov
jo
add
pop
inc
stc
testl
mov
filds
test
outsl
je
fldcw
in
pop
int
xor
dec
movsl
or
sbb
xor
jo
ja
jo
jns
movsl
jmp
insb
ja
imul
in
jnp
xchg
incw
mov
stos
xchg
xor
movsb
inc
dec
mov
jg
jo
adc
fildl
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
je
dec
mov
outsl
push
add
push
add
jno
add
jno
icebp
sbb
add
jno
add
jno
add
sbb
push
add
jno
add
jno
add
jno
add
cmpsb
mov
mov
testb
cmp
aas
std
xchg
pushf
jno
out
cmpsb
add
fwait
aaa
shl
push
idivb
outsl
xchg
out
pop
push
enter
xchg
adc
add
cmp
push
icebp
outsl
add
sbb
xor
add
cld
mov
ror
push
std
popa
cli
xor
xor
pop
dec
cmpsl
pop
mov
or
push
pop
rcrb
xchg
ss
mov
cmp
test
adc
pop
xchg
pushf
cmp
and
popf
movsl
cmp
outsl
mov
fwait
jns
aaa
mov
mov
mov
dec
dec
clc
pop
xchg
inc
and
sbbl
jl
clc
push
dec
rcrb
mov
in
inc
aad
or
mov
adc
std
add
lea
jl
sub
xchg
jns
and
or
jmp
or
gs
stos
repz
mov
push
repnz
and
ror
roll
add
push
shlb
pop
add
ds
movsb
push
jae
jno
sbb
or
bound
mov
inc
xchg
js
xor
xchg
pop
aaa
shlb
fs
outsl
sarb
in
mov
js
mov
test
mov
sarl
and
dec
mov
sahf
dec
cmp
fldl
push
aas
shrb
mov
mov
ss
movsb
sub
std
ret
jnp
mov
lcall
loop
fwait
push
das
sbb
movsb
xchg
cwtl
and
jg
cmp
rcrb
stc
mov
inc
mov
add
sub
in
aad
cld
addr16
cmpsl
fidivrs
push
rclb
dec
fwait
or
jg
jns
mov
mov
in
insb
mov
insl
or
sbb
mov
xchg
aaa
pop
cmp
sbb
or
test
out
sub
xchg
dec
pop
pop
pop
mov
jmp
stc
dec
lret
loop
gs
fisttpl
mov
int
daa
das
jmp
aad
popf
sahf
sbb
mov
in
xor
icebp
lret
pop
test
addr16
or
sbb
jb
push
jns
into
jle
pop
in
bound
push
mov
pop
scas
jbe
loop
mov
xchg
and
sub
rorl
adc
mov
loop
int
sub
lret
rclb
cmpsl
mov
test
pop
push
pop
sbb
push
dec
mov
cld
jae
iret
aaa
or
mov
or
pop
roll
movsb
mov
and
inc
shll
out
repnz
fiadds
add
mov
add
add
or
add
adc
jl
add
jl
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
jl
add
jnp
add
jl
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
add
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
jge
add
add
add
jge
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
mov
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
les
add
imul
add
sbb
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
sti
jle
fbld
cmp
div
push
sub
cmpsl
movsl
mov
sub
cld
rcll
pop
mov
add
jno
xor
cmpsb
jno
adcb
js
into
or
out
push
or
xor
aad
mov
xchg
dec
push
test
cwtl
mov
jg
dec
shlb
pop
sbb
mov
adcb
shrb
push
icebp
roll
mov
pop
adc
inc
or
ss
push
pop
inc
in
xchg
lods
lcall
cmp
xor
mov
das
shlb
pushf
push
or
aad
inc
cwtl
jb
inc
push
push
inc
mov
push
sbbl
push
inc
subb
adc
ret
fcmovu
les
pop
push
in
mov
ret
xchg
and
jl
cmp
or
lcall
mov
xchg
lea
push
sub
pop
in
xor
mov
and
xor
dec
es
sbb
movb
inc
xchg
stc
jg
in
cmp
pop
arpl
insb
repz
mov
scas
je
icebp
stc
cmp
inc
cmp
out
idivb
pop
mov
pop
loope
das
inc
sub
jne
dec
out
jp
movsl
push
dec
rcrb
push
aas
jle
sbb
lock
aas
adc
inc
inc
inc
cmp
xchg
aad
xlat
lret
nop
or
test
or
js
pop
stos
cmpsl
out
dec
iret
ss
push
sbb
and
cmp
fs
xchg
jmp
jp
mov
das
into
out
xchg
cmpsb
jne
in
pop
sbbb
rcll
jmp
shll
lcall
add
sbbb
jns
push
and
pop
out
shrl
lods
add
push
push
xor
xchg
adc
xor
es
subl
mov
cld
adc
fisttpll
jge
adc
cmp
sahf
movl
rorl
es
push
ret
mov
popa
mov
ret
dec
out
mov
fidivs
pop
cld
pop
int
mov
adc
movl
jmp
jb
sbb
xor
or
aam
stos
bound
or
fldenv
dec
xchg
lea
add
stos
pop
sub
out
jge
or
push
int3
jno
push
sbb
mov
xchg
mov
repnz
fldl
lret
out
faddl
inc
xor
mov
aad
stc
imul
cld
push
inc
mov
xorps
pop
cli
mov
mov
movsb
ja
inc
lcall
ja
push
int3
faddl
jecxz
ss
stos
movsl
jns
adc
push
fisubl
idivb
sub
mov
lret
mov
in
into
cmp
push
jl
push
mov
adc
and
dec
dec
je
inc
daa
scas
inc
and
mov
prefetch
rclb
lea
rcrl
movsb
xchg
in
dec
sbb
mov
xchg
jle
mov
gs
jnp
jnp
inc
jp
inc
sub
addr16
sarl
addr16
pop
adc
into
jg
sub
and
movsb
fdivrs
cli
xor
jb
push
jmp
adc
ss
xchg
mov
mov
popa
enter
fdivs
rorl
mov
pmulhuw
in
mov
rorb
js
cmp
dec
jl
jae
dec
outsb
sbbb
push
xor
ljmp
ljmp
aas
lock
in
in
lods
xor
sub
cmpsl
dec
or
cld
lods
sarb
xorb
fstl
mov
shr
lds
lea
pusha
inc
push
test
sub
mov
nop
pushl
and
cmp
fwait
xlat
and
adc
push
xchg
and
js
push
cmc
dec
roll
pushf
inc
push
mov
sub
ret
mov
inc
aaa
stc
mov
push
inc
sarb
in
xchg
rolb
xor
out
faddl
ss
jge
push
push
cwtl
mov
sub
sbb
cmp
xchg
fs
in
mov
sbb
and
jno
xchg
jbe
out
popa
test
pusha
into
dec
push
rcl
fwait
out
xchg
xor
or
pusha
xchg
jp
je
sbb
notb
push
outsb
out
mov
ret
jg
push
dec
mov
int3
sbb
mov
std
push
shll
fucomp
js
cwtl
sbb
jecxz
sbb
jmp
arpl
test
jns
jl
pop
repnz
scas
cltd
adc
pop
pop
xor
and
nop
sbb
push
repz
dec
shrb
fnsetpm(287
adc
in
cmp
repz
cwtl
cmpsb
cli
cld
mov
sahf
push
cmpsb
pushf
lahf
mov
xor
push
outsl
jg
inc
mov
pushf
ret
rcrl
cmpsl
inc
mov
ret
mov
stc
insl
or
mov
lods
aam
lds
adc
jo
mov
repnz
xchg
aad
iret
stos
dec
sbb
fsubp
adc
add
adc
lcall
popf
inc
or
mov
test
pop
adc
mov
insb
stos
jle
test
shlb
int3
cmp
std
mov
cld
mov
fldcw
xor
push
stc
in
jmp
je
cmp
fadd
mov
jne
jo
xor
ds
aas
or
jbe
bound
stos
mov
ljmp
mov
or
pop
jp
add
lds
call
jle
dec
push
ds
mov
mov
loopne
xor
fmull
and
xor
lea
in
icebp
and
lock
sbb
pushf
dec
in
sub
jge
test
pop
mov
out
pop
pop
mov
dec
inc
shlb
mov
push
fisttps
out
in
lcall
or
mov
icebp
lahf
push
jg
jmp
test
mov
mov
sub
fldl2e
cmpsl
lods
dec
and
mov
push
test
fmuls
adc
ss
pop
jb
xor
pop
dec
cmpsb
push
sub
roll
sbb
loope
sbbb
sbb
lods
addr16
or
shlb
or
pop
rol
cli
mov
pusha
adc
xchg
ffree
insl
add
inc
notb
ljmp
and
inc
mov
scas
inc
push
jg
clc
adc
sub
add
int3
add
xchg
btc
jp
push
mov
pop
int3
and
xchg
or
sub
sti
mov
aam
dec
xlat
push
xor
shll
lock
aam
or
adc
xor
sarl
mov
xorl
daa
inc
int
dec
ret
movsb
mov
sbb
popf
sub
pop
inc
in
mov
js
pop
pop
gs
stos
popa
popf
es
dec
int
in
adc
adc
scas
and
pop
movsb
mov
jecxz
fdivr
leave
cmpsl
imul
mov
or
jmp
lea
pop
push
in
stos
dec
mov
incl
movsl
insb
jne
movsl
fs
gs
lods
sub
ljmp
fbstp
cmp
push
cli
mov
cmp
out
cmp
stos
and
int
cmp
mov
jle
div
sbb
lcall
mov
aam
fidivs
inc
scas
and
leave
mov
mov
dec
ficompl
jmp
jge
push
pop
jns
and
xchg
jmp
loopne
push
enter
cli
ja
inc
sarl
dec
loope
repnz
enter
subl
cmpsl
lea
add
cwtl
jae
dec
out
stc
sahf
sbb
jle
lods
in
mov
out
inc
xchg
out
mov
orl
adc
rorl
xor
test
mov
popf
mov
enter
leave
fnstenv
push
ja
testl
cld
popf
inc
inc
jne
test
xchg
test
xchg
cmp
inc
mov
dec
push
pushl
das
loopne
rorl
fwait
xchg
popf
sbb
repnz
push
push
sbb
add
sti
xchg
in
es
xor
push
push
xlat
push
add
cmpb
dec
int3
jmp
int3
inc
loope
fcompl
pushf
inc
sti
testb
jns
adc
dec
pop
lods
in
jnp
stc
sbb
fdivrl
jmp
pop
sub
dec
mov
cmc
es
or
jl
inc
fistl
mov
enter
jo
jne
xlat
sub
or
xchg
incl
jno
jno
dec
icebp
pop
pop
adc
mov
dec
insb
repz
xchg
sub
sub
pop
lods
jmp
mov
mov
dec
xor
mov
jbe
or
pusha
std
sarl
aad
inc
insb
mov
pop
add
cmpsb
jae
jbe
fs
push
push
jg
ret
loop
cld
jmp
xchg
cmp
or
es
ja
dec
push
push
cmp
rclb
int
cs
xchg
gs
cmp
dec
insl
mov
stos
mov
pop
pop
push
in
cmc
fwait
hlt
or
repnz
sub
mov
inc
neg
cmpb
scas
in
inc
je
mov
dec
fs
jns
lock
iret
xchg
lods
and
hlt
sbb
fnstcw
sub
addb
into
cli
ds
repz
out
sbbl
push
mov
pop
push
or
pop
adc
xchg
je
pxor
and
adc
add
xchg
pushf
insb
jae
mov
scas
xchg
pop
rcll
repz
fucom
xor
xchg
xchg
popa
push
outsb
sbb
push
adc
out
outsl
addr16
test
add
add
fwait
std
xor
or
lea
sub
sub
and
ljmp
shrb
mov
and
scas
add
mov
daa
lock
icebp
inc
mov
sub
scas
adc
adc
pop
pop
sbb
cld
out
jno
daa
ja
inc
in
enter
mov
mov
loopne
mov
jg
xchg
mov
cmp
jb
call
popa
sub
mov
inc
inc
mov
gs
test
inc
cmc
lock
mov
out
pushf
mov
xor
loopne
push
arpl
push
test
ret
jmp
jbe
jne
js
fsubs
push
adc
xchg
fwait
cli
clc
roll
and
push
sbb
xchg
mov
divb
adc
icebp
stos
cmp
add
xchg
ljmp
inc
mov
sbb
bound
mov
fisttpl
dec
std
pusha
mov
mov
shr
adcb
sub
scas
fiaddl
fimuls
test
add
mov
repz
je
pop
adc
popa
ror
mov
xchg
mov
cmovbe
sbb
insl
cmp
pop
jbe
pusha
sbb
push
add
out
sub
mov
fisubrl
icebp
xlat
cmp
sub
push
ljmp
das
mov
imul
call
sbb
cmc
adc
popa
mov
push
stc
and
inc
sub
jae
sub
pushf
dec
mov
mov
xchg
jg
mov
outsb
sub
scas
movsb
out
fisubl
add
ds
mov
jne
fldenv
mov
cmp
jle
push
outsl
pop
loopne
ljmp
mov
fidivrs
or
mov
jle
in
dec
dec
or
rcrl
div
lea
push
mov
mov
in
adc
mov
lods
add
clc
xor
sbb
or
xor
popa
push
mov
jg
push
push
cmp
jo
cld
enter
xchg
xor
divb
cmp
push
sahf
sbb
imul
jl
pusha
bound
jmp
pop
nop
mov
jg,pn
gs
inc
sbb
or
pop
lock
sub
and
call
inc
push
bound
insb
cmp
rcr
mov
imul
lds
push
lods
xchg
cmp
outsl
jo
test
clc
adc
mov
cmp
out
lods
daa
push
stos
add
mov
out
mov
aaa
sub
adc
cmp
in
cmpsb
sbb
inc
and
idivb
xlat
mov
adc
jns
cmp
jmp
lret
test
test
jl
xchg
inc
in
pop
lods
out
lods
mov
faddl
inc
mov
jl
pop
ret
fdivrp
push
sbb
js
xchg
fdivr
push
lret
jo
inc
sub
movsl
adc
jge
pop
in
cltd
popf
stc
nop
cmpsb
sub
stos
add
inc
mov
inc
idivl
imul
jnp
in
mov
inc
mov
pushf
cltd
push
loope
fnstenv
mov
cmp
icebp
add
test
outsl
xchg
je
sbbl
pop
mov
lea
sub
jne
xor
xor
dec
fistl
mov
in
cmc
mov
call
mov
add
out
add
clc
fisttps
cmp
adc
adc
push
bound
test
jns
pop
jle
dec
push
mov
jge
dec
or
xlat
iret
pop
and
xor
cmp
push
jl
mov
mov
fcomps
pop
pop
in
clc
xchg
mov
int3
mov
adc
pop
stos
jne
lahf
inc
daa
jge
je
jo
es
and
jnp
push
ret
mov
push
in
lea
jbe
sub
jle
pop
add
not
push
mov
mov
sub
jo
in
push
jle
mov
xlat
js
and
or
lods
adc
xchg
push
test
pop
adcb
mov
push
cli
jne
adc
add
stos
pop
fisubrs
mov
mov
in
dec
test
movsl
mov
add
aad
shrl
es
es
nop
sub
lds
xchg
imul
sti
inc
push
fisttps
sub
pop
test
mov
int
mov
dec
or
imul
sub
mov
xor
in
sahf
pop
cmc
sub
vpmacssdqh
ret
popf
pop
inc
cmp
dec
and
cli
out
pop
popa
dec
int3
mov
shlb
cli
push
imul
jmp
ret
pop
xchg
or
mov
cmpsb
inc
negb
es
cmp
int
test
and
mov
out
rcr
xor
jo
sarb
xchg
sub
cmp
popf
sbb
jae
xchg
xchg
cs
or
mov
or
ljmp
push
or
push
in
mov
je
sbb
mov
rcrl
cmp
mov
cs
rolb
jle
fs
cmp
dec
mov
dec
dec
adc
cs
add
cmpsb
and
sarb
int
and
cmc
cmp
movsl
mov
out
std
popa
mov
popf
clc
cwtl
movsb
insb
je
call
push
mov
int3
cs
jmp
sti
xchg
push
std
adc
insl
pop
addb
push
sti
dec
mov
mov
sub
pop
inc
popa
adc
loop
sbb
stos
roll
lcall
in
adc
mov
cmp
fmuls
pop
push
mov
aad
sub
imul
ss
or
adc
mov
data16
enter
push
je,pt
mov
mull
add
ret
lret
mov
loopne
push
jno
pushl
jp
xor
imul
mov
and
les
pop
sbb
or
mov
sub
cltd
je
fwait
mov
pop
mov
xchg
mov
adc
ja
je
ljmp
xchg
aad
cltd
ret
dec
xchg
cmpsl
cld
sub
or
rcrb
pop
dec
xlat
out
fxam
filds
inc
mov
loop
xlat
dec
jecxz
add
add
or
outsb
icebp
sub
sub
xchg
mov
and
xchg
arpl
sti
or
xchg
mov
cs
add
lds
jl
xchg
int3
cld
mov
xor
scas
lret
outsb
ss
add
data16
pop
icebp
dec
jns
xchg
push
mov
stos
scas
inc
push
sti
cmpsb
bound
mov
sub
popa
sub
insb
ja
mov
es
inc
push
incb
or
call
pop
movsb
sub
popa
negb
pop
jecxz
jae
int
stos
mov
inc
repnz
mov
test
idiv
aas
dec
mov
imull
movsb
gs
int
xchg
push
insb
sbb
push
add
xchg
test
addb
clc
addr16
cmp
aam
test
in
shll
outsl
cs
and
je
jo
lret
and
jmp
push
ja
fnsave
mov
jno
imulb
and
or
inc
inc
rolb
mov
jae
lock
test
inc
orb
lret
fsubrp
popa
lds
sahf
mulb
add
cli
adc
andb
je
clc
aam
adc
and
xor
cmp
jp
test
frstor
daa
shlb
xchg
ret
mov
mov
out
outsl
sarb
dec
xchg
decb
aaa
cld
sbb
je
mov
push
push
mov
jle
add
nop
fidivrs
iret
dec
dec
out
lea
cmp
fcomps
idivb
pusha
cs
mov
pop
sbb
jns
push
dec
std
and
and
push
popa
pop
push
push
ds
addr16
dec
imul
sub
imul
push
push
setne
pushf
or
clc
adc
xchg
pop
cmc
imul
ror
idivb
jmp
inc
jecxz
leave
sbb
into
xchg
cmc
daa
lds
sahf
repz
add
ret
jbe
addb
mov
lods
push
lea
xchg
add
xchg
stos
xchg
insb
int3
and
imul
pop
loop
jbe
das
iret
xchg
mov
adc
mov
xchg
mov
mov
mov
inc
mov
mov
pop
xchg
cmpsl
sub
push
shll
out
pop
xchg
insb
adc
mov
shrl
loope
push
jbe
sbbl
mov
xor
dec
add
leave
adc
movsl
sti
fldenv
sub
fdivl
mov
testl
dec
js
jp
rclb
push
mov
sub
inc
xchg
jne
movsl
xchg
ds
movsb
push
cmc
mov
adc
xchg
inc
divb
adc
add
xchg
das
pop
fwait
test
jne
fstpt
orl
jo
mov
pop
sbb
xor
inc
js
or
aam
in
sbb
jae
int
lods
push
sbb
sbb
jbe
inc
ret
mov
repnz
roll
cmp
lods
push
xchg
pushf
xchg
sub
lret
dec
xor
outsb
jo
movsb
addr16
dec
imul
repz
or
xchg
ret
clc
mov
popl
dec
popf
add
xor
test
pop
or
or
xchg
rorl
enter
add
add
push
movsl
mov
scas
pop
add
ja
and
fisubl
cli
push
xor
mov
mov
mov
mov
test
cmp
ljmp
xchg
mov
clc
or
jge
bt
sub
xlat
dec
es
cmpsb
xchg
adc
jle
gs
xchg
xchg
or
xchg
ss
fwait
mov
pop
cmp
mov
or
mov
sub
jb
and
scas
cwtl
pushf
or
and
dec
outsl
xchg
bound
cltd
adc
pop
and
jbe
xchg
cmp
stos
cmpsb
push
or
cwtl
clc
mov
nop
loop
rcl
adc
out
cmp
movsb
js
ret
scas
je
mov
inc
enter
mov
iret
jne
xchg
add
jecxz
jl
bnd
shld
adc
push
xchg
and
ss
pop
imul
or
les
cmc
das
loopne
and
icebp
mov
stc
jmp
ret
sub
lret
xor
cmp
jle
push
cmc
jp
cmpsl
adc
lods
pop
xor
inc
and
stos
jnp
xchg
in
add
aas
push
in
jb
fcompl
in
data16
xor
cwtl
mov
push
sub
scas
mov
decb
mov
pushf
push
push
xchg
sub
imull
xorl
les
cli
insl
add
nop
mov
shll
add
xor
pop
ss
loope
ljmp
mov
loop
xchg
lock
xchg
push
jmp
cld
mov
fdivs
daa
jge
pop
jo
xor
sbb
xchg
adc
jmp
adc
sbb
roll
jle
int
jns
mov
rcr
in
aam
pop
clc
cmp
mov
xchg
and
and
push
and
adc
inc
loope
sbb
mov
lock
cld
gs
gs
mov
and
test
mov
add
pusha
stos
mov
xor
out
dec
and
or
stos
mov
mov
aas
addl
fsubrl
mov
xchg
sbb
xchg
lds
pop
dec
and
mov
sub
call
mov
test
dec
push
xchg
pusha
dec
mov
mov
cwtl
int
int3
scas
and
inc
add
subl
sub
mov
lcall
jge
sub
cltd
xchg
sbb
adc
ja
lods
push
push
xrelease
test
fwait
pop
pop
cs
cmp
mov
dec
add
nop
push
sub
xchg
js
pop
mov
add
dec
sub
add
push
lret
loopne
inc
jo
lock
mov
xchg
shl
push
jge
pop
cmp
ds
iret
and
pop
mov
fwait
adc
gs
in
movhps
push
dec
fst
cmp
push
daa
decb
and
mov
icebp
inc
pop
sub
cmp
fninit
adcl
ds
icebp
or
es
adcb
or
stos
movsl
inc
aam
arpl
roll
xchg
fcmovnbe
push
or
inc
das
xorb
gs
popf
push
or
mov
clc
lret
adc
inc
lods
scas
dec
jnp
lea
mov
push
pop
int
mov
out
les
adc
push
jmp
push
stc
mov
sub
fdivr
stos
insb
ds
mov
loop
pop
sub
inc
push
aad
mov
jle
mov
or
pop
leave
ljmp
mov
mov
je
pusha
fnstenv
mov
mov
mov
std
rclb
fwait
outsb
mov
lret
pushf
sub
mov
push
out
push
cmp
clc
xchg
lret
push
mov
insl
xchg
test
lahf
push
cmp
imul
fadd
sub
dec
xchg
je
push
mov
rcr
mov
cmp
mov
sbb
pop
mov
xchg
add
jl
fcomps
and
push
cmc
mov
xor
insb
jnp
aas
or
cltd
xchg
rcl
scas
mov
fistl
jb
pop
sbb
sbb
int3
std
out
inc
fldenv
in
iret
scas
outsl
mov
movsl
dec
pop
dec
hlt
xchg
fistps
mov
gs
das
sub
nop
add
ret
mov
push
push
xlat
add
add
sbb
das
xor
add
xchg
cltd
cltd
pushf
xlat
lods
aaa
movsb
jge
cwtl
pop
mov
or
insl
call
push
fs
dec
lahf
jecxz
xlat
push
pusha
mov
sbb
imul
push
gs
scas
call
insl
sub
push
nop
pop
pop
jo
pop
gs
ds
int
in
psrlq
scas
xchg
cmp
mov
sbb
rol
mov
fxch
out
or
outsw
pop
jae
sti
imul
arpl
insb
cmp
sub
xchg
in
mov
aam
sahf
xor
or
pop
jbe
aas
or
sti
sub
cmp
popf
add
or
scas
mov
ror
loope
movsb
idivb
mov
dec
adc
arpl
lods
popa
nop
jno
out
out
js
scas
fldt
xchg
test
sub
arpl
push
adc
imul
imul
movsb
lret
add
lock
or
pushw
nop
test
pop
cmp
cwtl
mov
dec
push
adcb
push
or
cmpsb
mov
mov
stc
pop
adc
xchg
not
test
daa
mov
pop
sub
sbb
xorl
adc
lods
dec
push
lds
movsl
ret
push
mov
imul
push
pop
mov
popa
les
jnp
mov
jp
add
mov
push
and
outsl
ret
movsl
and
sub
mov
pop
or
cmp
mov
testb
das
fs
mov
sahf
sub
add
add
xchg
lods
push
ret
cmpb
out
in
mov
mov
mov
xchg
movl
push
jno
addr16
push
sub
aad
lret
aas
lods
dec
pop
jmp
in
push
add
pop
pop
mov
jmp
mov
and
pop
or
or
ljmp
inc
out
add
test
shll
pop
movsb
imul
mov
aad
pushf
arpl
pop
lods
repz
and
dec
cmc
clc
ja
sbb
das
das
test
or
jnp
lods
inc
movb
push
test
xor
cmp
daa
je
jle
or
mov
mov
ljmp
adc
lock
lahf
or
or
or
enter
aam
repnz
jecxz
orl
lock
in
push
mov
outsb
shll
mov
clc
inc
push
jae
out
ja
ret
fucomi
pusha
push
xor
out
adc
mov
push
mov
rcll
lods
scas
mov
push
sub
inc
in
and
loopne
hlt
adc
mov
cmp
sub
in
mov
mov
cli
push
test
mov
mov
cmp
in
dec
mov
sub
outsl
sub
notl
mov
cltd
lods
push
sub
sbbb
repz
sub
jo
scas
dec
xchg
xor
mov
flds
gs
icebp
jne
push
out
pop
orl
xchg
faddl
loope
bound
cltd
jecxz
movsb
adcb
mov
mov
mov
lock
jae
push
nop
mov
dec
in
xor
das
mov
and
imul
in
roll
enter
sbb
mov
adc
jge
or
or
or
push
gs
mov
ja
icebp
push
cli
cld
test
xorl
lds
fabs
inc
adc
fyl2x
pop
add
shl
test
sbb
es
int
mov
repz
sub
pop
neg
arpl
rcrb
fisttpl
lret
in
mov
jbe
adc
jno
sbb
lds
inc
pop
mov
mov
fdivr
arpl
push
jmp
cmp
jge
and
fidivrl
in
int
dec
lods
shufps
into
repnz
mov
int3
adc
dec
loopne
xor
inc
jne
ds
mov
and
out
arpl
lcall
add
and
inc
mov
push
cmp
add
mov
popl
sbb
out
ret
sub
stos
in
not
mov
and
pop
nop
mov
es
imul
xchg
push
fldenv
outsb
adc
ljmp
dec
in
nop
sub
mov
lea
scas
out
jns
in
mov
and
call
iret
scas
divl
and
inc
int3
dec
and
mov
jl
outsl
mov
cli
jmp
test
add
mov
sub
cmp
jl
dec
add
mov
sahf
push
inc
push
scas
dec
adc
mov
adc
roll
das
decb
mov
push
rorb
xor
mov
fisubs
mov
jp
pusha
enter
sbb
mov
imul
push
and
mov
push
xor
pop
stos
sub
pop
inc
hlt
cmp
cmpsb
sbbl
xchg
pop
dec
leave
mov
orb
cmp
cmp
push
dec
jle
stos
xor
pushf
or
outsl
or
das
fs
stos
call
inc
stos
movsb
arpl
loop
mov
das
or
adc
enter
pop
xor
pop
ficoms
cld
popf
mov
shrb
rcrb
pop
inc
fcomps
imul
dec
pop
fsubrs
mov
sub
clc
int3
call
lock
fisubrs
push
test
sbb
iret
les
insb
dec
mov
xor
scas
ljmp
cwtl
ja
cli
lods
mov
mov
sub
push
btc
inc
in
dec
fst
ja
and
nop
inc
mov
mov
add
das
stos
cmpsl
pop
jae
mov
cmc
sub
fnstenv
ficoml
stc
clc
jae
repnz
ror
xor
or
loopne
clc
ret
push
cmp
cmp
or
cmp
jno
pushf
pop
rcl
mov
jle
jmp
mov
das
ret
inc
cmpsl
aas
mov
mov
push
push
push
sbb
push
sti
xor
xchg
cmp
or
leave
loopne
mull
mov
fpatan
mov
sti
fwait
loope
aad
jno
xorb
hlt
int
xchg
fimuls
out
movsb
adcl
fildl
sbb
xor
pop
testb
outsb
sbb
andb
adcl
bound
aam
ficoms
xchg
dec
je
dec
fisttps
pop
jne
fistps
mov
ljmp
mov
lods
fs
mov
cmp
fdivs
xchg
xor
pop
lahf
das
inc
xor
and
push
mov
cmpsl
fsubrs
mov
push
lds
and
jmp
mov
sub
sbb
xor
bound
jno
dec
divl
iret
lods
or
sarl
les
mov
xchg
sbb
push
aaa
dec
or
aam
rolb
mov
jl
fldcw
dec
sub
mov
cs
push
push
push
sti
lea
or
xor
scas
and
xchg
mov
enter
lods
js
jge
add
jmp
rcll
mov
jno
mov
loope
stos
push
xchg
test
xchg
cli
sbb
movaps
roll
xor
jns
sub
lods
adc
pusha
jmp
es
fcoms
stos
xor
scas
jmp
add
push
popf
outsb
or
es
mov
mov
loop
addr16
fsubrl
in
es
sbb
je
push
adc
subl
call
inc
add
xor
popf
jp
adc
outsb
in
inc
lret
dec
in
or
lea
roll
pushf
sub
jle
or
push
repnz
or
push
pusha
jecxz
js
dec
stos
repnz
xor
mov
dec
adc
adc
scas
mov
and
inc
jmp
cld
loopne
jnp
mov
movsb
jnp
and
push
cmp
int
xchg
bound
and
push
mov
cmpsl
mov
cvttps2pi
mov
loopne,pn
pop
xor
in
ret
bound
inc
push
mov
or
sub
outsl
fbstp
fld
push
rcr
add
cmpsb
incb
sub
and
sub
xor
les
jmp
arpl
push
inc
rorl
cmp
repz
mov
loop
fldt
dec
pop
sbb
mov
lea
daa
pop
lock
divb
shll
insl
in
cmpsl
aam
xor
adc
adc
mov
icebp
pop
pop
cli
stc
stos
mov
fstpt
enter
enter
xchg
mov
sti
mov
push
lcall
xlat
js
push
shrl
and
mov
and
addb
lret
loopne
sub
xor
mov
xchg
push
test
ja
inc
in
mov
sbb
jle
mov
mov
push
sbb
data16
imulb
std
pusha
xor
sbb
cld
scas
xor
sub
gs
in
xchg
in
adc
pop
and
cmp
nop
xchg
mov
adc
adc
mov
movsb
out
inc
xchg
in
sub
cmp
mov
dec
roll
pop
adc
aas
adc
adc
orb
adc
test
ret
fs
xchg
lock
aad
inc
pop
andl
and
test
in
lods
mov
cltd
arpl
push
in
cmp
xchg
add
test
cltd
jne
dec
movsb
mov
or
mov
push
dec
cmc
vmovups
sub
sub
push
gs
xchg
cltd
push
jne
pushf
fidivrl
loope
fmuls
mov
pop
xchg
mov
lds
jge
xchg
mov
lods
push
outsb
jp
ret
fiaddl
das
repz
shlb
std
rcr
jl
and
cmp
xchg
stos
in
pop
mov
mov
aad
inc
mov
movsb
mov
pop
jl
subl
int3
inc
mov
adc
cmp
loop
push
fs
xchg
inc
or
sub
call
add
push
xchg
mov
inc
push
dec
sub
jmp
xlat
or
mov
fstps
jecxz
andb
in
movsl
mov
mov
adc
xchg
hlt
dec
jb
dec
aas
mov
mov
xchg
clc
loop
xor
inc
mov
imul
mov
icebp
mov
mov
push
lds
test
cmpsl
mov
mov
in
cmp
pop
lods
clc
or
push
add
jge
stc
jbe
xchg
add
add
mov
cli
dec
leave
test
jo
lods
data16
dec
cmp
add
mov
nop
lods
and
jne
scas
mov
sbb
loopne
jae
or
mov
jae
inc
mov
notl
xchg
xlat
cmp
fldl
aas
xlat
mov
pusha
or
sub
xor
xchg
push
sarl
stos
cmp
push
push
outsb
stos
fsts
dec
out
xchg
add
mov
dec
gs
shlb
xchg
jecxz
cmp
fidivs
mov
js
ss
add
imul
push
call
pop
or
addr16
jmp
push
je
loop
shl
inc
mov
push
lret
dec
mov
or
mov
shll
mov
fwait
loope
in
rolb
dec
call
dec
and
out
push
ds
int3
mov
mov
mov
pop
xor
mov
and
test
add
push
test
lcall
dec
cs
mov
int3
stos
mov
add
in
xorl
nop
jno
or
ds
and
fisubrl
dec
and
xor
or
out
mov
or
arpl
xchg
jge
mov
dec
or
int3
imul
loop
pop
jo
mov
gs
ret
xor
sub
xchg
dec
inc
mov
loopne
insl
add
insl
shlb
cwtl
int
in
adc
add
add
push
or
cmpsl
mov
cwtl
ret
ret
jl
add
int3
rcrl
insl
mov
out
loope
pop
icebp
mov
das
pop
into
xchg
jno
xor
and
inc
pop
negl
sub
cmp
ret
pushl
push
or
movsl
jecxz,pn
adc
jmp
jl
add
dec
int
inc
xlat
cwtl
in
inc
pinsrw
dec
dec
sub
or
loopne
cld
push
daa
lods
pusha
xchg
jbe
jle
mov
cmp
in
xchg
les
cmp
sbbl
push
loop
sti
nop
pushf
or
pop
pop
and
inc
add
fs
test
stc
adcl
cmp
incb
mov
scas
in
psubsw
jnp
mov
fs
jb
fwait
insl
sbb
mov
ret
dec
xor
jmp
sbb
sbb
pop
sbb
adc
cmp
fs
or
and
fbld
mov
xchg
inc
xchg
sbb
dec
push
rorb
push
insb
pop
cmp
leave
dec
sbbl
inc
sub
jne
sbb
test
clc
xor
insl
xchg
push
lock
stc
cmp
out
adc
setns
imul
cmc
add
xor
sbb
push
ljmp
dec
rep
fs
sbb
rorl
mov
into
mov
movsl
ffree
movsl
negb
lea
ror
mov
cmpsb
dec
add
xor
rcrb
sub
test
cmpsl
lcall
mov
or
test
cmp
push
xchg
sahf
dec
inc
sar
inc
mov
aam
sbb
push
sub
sub
jnp
or
test
mov
int3
jnp
js
in
lds
popa
fxtract
add
fdivrl
or
pop
ficompl
pop
test
repz
push
es
adc
mov
aas
push
pop
add
test
cmp
pop
mov
cwtl
pop
stos
out
testl
jge
xor
or
pop
out
cmp
and
mov
gs
pop
bound
testb
xor
push
fistps
cltd
in
clc
stos
mov
sub
enter
fwait
sbb
mov
push
call
jmp
jne
stos
mov
mov
stos
lret
jl
shrl
mov
std
mov
cli
hlt
es
fisttps
sbb
jg
inc
mov
daa
shll
insl
adc
repnz
or
mov
lods
push
dec
mov
xlat
or
sbb
stc
mov
mov
pop
ljmp
jne
xor
cmpsb
jne
xor
or
mov
pop
jmp
mov
mov
lcall
pop
test
loopne
mov
push
mov
lcall
clc
test
sbb
mov
js
mull
mov
arpl
xor
arpl
mov
xor
scas
lock
test
inc
cmp
outsl
mov
stc
add
mov
sub
loopne
cmp
es
sbb
mov
jecxz
test
adc
mov
jne
out
dec
dec
xchg
xchg
lcall
or
pop
add
mov
jae
lahf
jp
xchg
fimull
add
cli
mov
mov
push
iret
cmp
lds
adc
sti
nop
push
test
inc
int3
aam
jo
rclb
das
jp
push
xor
fnsave
pusha
fs
jmp
testl
or
jo
and
xchg
out
pop
xchg
es
fidivrs
shll
inc
mov
jg
aaa
sbbl
leave
jae
jb
adc
jecxz
out
int
cmp
in
xchg
popl
cld
mov
push
out
in
sbb
cmp
fldcw
sahf
fwait
sbb
subb
icebp
hlt
shlb
push
sub
mov
adc
jne
neg
inc
or
xchg
push
or
cli
sbb
push
push
lods
push
ljmp
cltd
sub
rcll
and
dec
push
inc
and
daa
sarl
and
pop
xlat
dec
sbb
bound
loopne
in
outsb
dec
mov
fld
enter
js
push
mov
sbb
pop
mov
cmp
addr16
fwait
test
movsl
or
xchg
cwtl
dec
fs
mov
ret
jns
repnz
dec
push
movsb
enter
fidivrs
lock
icebp
pop
pop
push
shl
pop
cmc
or
pop
jnp
cmp
ja
movsb
xlat
pop
and
icebp
lahf
adc
popf
std
lods
cli
insl
jp
mov
ss
and
outsl
sub
pop
lock
and
repz
sub
dec
mov
jp
sbb
es
fmul
jp
pop
in
outsl
push
enter
int3
or
cmpsb
ficompl
xorl
lea
mov
inc
xchg
add
test
jl
xor
sarl
notb
fsubrs
jecxz
iret
push
vpgatherdd
pop
adc
addr16
xor
sub
rclb
xor
xchg
xchg
movsb
xor
cmp
lahf
icebp
lods
cmp
sbb
xor
jb
mov
mov
decl
mov
mov
stos
out
cmc
out
icebp
push
das
fsubrl
stc
and
aas
xchg
and
mov
push
sub
sbb
cmpsb
call
sbb
lods
ja
cmp
push
lods
add
loopne
jl
lret
or
sbb
aad
out
out
mov
pushf
lret
jmp
in
jb
push
cmp
lock
lret
mov
inc
cwtl
dec
or
dec
mov
xchg
xor
ljmp
sarb
add
ret
cli
fwait
lea
adc
mov
js
push
mov
addr16
adc
sti
ret
mov
and
cwtl
sarl
cwtl
out
ret
test
mov
xor
movsb
cli
fsubrs
loop
pop
cmp
mov
jns
int3
inc
or
aas
sub
in
mov
cs
lcall
and
push
jb
push
sub
add
mov
gs
imul
enter
sub
pop
in
sbb
popf
cmpsl
jne
jle
lret
pop
sub
rcrl
in
lret
xchg
pop
outsb
mov
mov
sbb
xchg
imul
push
and
push
das
test
sbb
cmp
lods
jns
leave
bound
adc
rol
popf
testl
jne
imul
mov
arpl
negb
neg
mov
addb
and
cmp
mov
xorb
cmp
xor
scas
mov
mov
xchg
add
shll
adc
data16
or
test
xor
fldt
and
pop
xchg
stc
mov
verw
in
aad
clc
fs
xchg
mov
rorl
add
out
pop
movsb
imul
cmpsl
fdivr
cmpsb
xchg
jo
es
movsl
sti
pop
push
and
loop
pop
cmp
mov
je
xchg
pop
mov
ret
icebp
cmp
mov
pop
pop
rclb
sbb
mov
dec
push
xor
xchg
and
xchg
ljmp
es
sarl
jle
pop
jne
aam
mov
cli
mov
fdivrs
out
cwtl
push
push
jo
aad
pop
xor
add
add
in
sub
cmp
mov
cld
stc
xchg
ss
sahf
sti
push
or
in
sbb
lahf
sbb
jae
fwait
and
data16
inc
stc
push
pop
jg
aam
out
rclb
enter
cmp
pusha
mov
enter
jle
xor
mov
mov
js
pop
adc
or
clc
inc
push
adc
sub
sbb
jbe
pushf
subb
cmp
sbb
gs
mov
pop
jae
gs
xchg
mov
pop
or
push
fsts
lahf
jecxz
jmp
sbb
xor
pop
cli
pop
lea
roll
mov
xor
add
or
loop
sbb
dec
sahf
mov
push
xchg
xchg
sub
fimull
jnp
aad
adc
stc
add
aaa
aad
push
jo
and
sub
mov
aaa
jmp
cld
out
cli
mov
test
lods
inc
test
inc
fwait
and
cld
push
fcmovnb
out
jp
repnz
adc
str
dec
imul
sub
mov
std
xor
arpl
push
cwtl
pusha
mov
pop
mov
push
in
or
add
je
imul
rorb
out
mov
sahf
add
or
xchg
shlb
enter
int
inc
aas
addb
sti
shlb
sbb
outsl
sarl
cmp
xlat
in
adc
add
mov
pop
dec
daa
test
ret
popf
or
frstor
in
and
ja
mov
mov
rol
pop
mov
cli
and
jne
jb
dec
test
push
push
jns
push
into
ret
push
stc
call
sbb
xchg
xchg
mov
std
or
sub
mov
or
cmc
push
mov
iret
or
mov
jb
fldcw
cmp
xchg
xchg
int3
cmp
lods
int3
sub
out
push
fs
fsubr
fnstsw
jbe
stc
test
mov
and
xchg
repz
std
cmpsl
jmp
push
mov
test
int
push
js
enter
sbb
mov
mov
mov
in
arpl
push
test
and
pop
mov
in
pop
in
sub
add
test
and
jb
lea
inc
dec
test
rcrl
aaa
aaa
gs
cmp
insl
xchg
xor
je
mov
xor
test
xchg
cmpsl
icebp
ss
outsb
rcll
dec
je
cmp
daa
xchg
in
in
mov
fisubrs
push
lret
fsincos
pop
inc
xchg
add
push
and
lock
mov
cli
jecxz
ljmp
test
cmp
aas
mov
push
or
inc
sbb
in
lea
fisubrl
fstps
out
xchg
in
aad
inc
xchg
hlt
adc
mov
test
pop
outsl
push
cmp
lahf
xor
dec
mov
lea
xor
xlat
and
sbb
and
inc
sbb
addr16
cwtl
movsl
sbb
cmp
cmp
addr16
cmp
cmpsb
icebp
adc
out
fsubrl
xchg
cmpsb
gs
rcl
push
pop
icebp
xchg
jae
xor
cwtl
or
imul
lahf
cmc
shr
xchg
inc
test
jns
daa
lcall
inc
push
inc
mov
fsubr
fst
mov
test
cmp
cld
cmp
ss
enter
imul
loope
out
rcrb
sub
test
iret
aam
call
pushf
imul
std
jae
pushf
or
fs
fwait
outsb
add
movsl
out
enter
repnz
lret
scas
ja
mov
insb
imul
fstpt
scas
fnclex
mov
xchg
cmp
push
enter
decb
inc
xor
pop
mov
mov
bound
pop
adc
fwait
sub
fptan
push
dec
or
sub
shll
fs
ds
imul
cmpsl
ret
mov
into
outsb
mov
fidivrl
out
fildll
pushf
in
sbb
mov
or
movsl
mov
sub
push
pushf
stos
arpl
stos
iret
test
mov
dec
popa
in
test
mov
mov
xlat
enter
cmp
jno
div
sub
sti
fcmovb
sbb
sbb
mov
adc
cmp
mov
repnz
test
mov
lds
cltd
bound
cmc
jmp
lret
movsl
loop
mov
jecxz
add
mov
icebp
adc
dec
cmp
pop
mov
pop
iret
dec
inc
jbe
scas
xchg
dec
and
xor
outsb
add
mov
mov
aad
adc
dec
add
or
push
test
mov
and
pop
out
loopne
cmp
mov
jge
add
mov
cmp
mov
iret
adc
sbb
inc
xchg
sbb
push
arpl
dec
mov
and
enter
cmp
or
data16
xchg
push
lock
jmp
inc
mov
add
jae
push
sti
push
cmp
cmpsl
je
das
and
xlat
add
mov
leave
sbb
mov
in
cmpsl
xchg
cld
jb
cmp
pop
test
cmp
ja
mov
adc
jp
shll
arpl
enter
shlb
add
int3
rcr
popf
inc
xor
fnstenv
aam
pop
pop
jno
bound
adc
loope
or
mov
or
imul
stos
pusha
rolb
dec
inc
cmp
ljmp
popa
scas
cmp
mov
ret
add
in
pop
or
in
mov
cmpsb
xchg
add
outsb
and
mov
idivb
aas
call
fwait
xor
push
fidivrs
movsb
dec
mov
push
cmp
das
imul
je
jg
insb
negl
jecxz
sub
insb
dec
push
push
lock
and
in
fldenv
mov
sbb
pop
in
js
into
out
mov
sub
mov
fs
idiv
push
inc
dec
in
jb
xor
push
fnstenv
or
hlt
fdivrp
out
testb
or
adc
aaa
add
pop
cmp
xor
push
clc
jge
push
js
dec
and
lret
jmp
xor
in
incb
and
cltd
shrb
ss
adc
insb
pop
inc
dec
imul
mov
adc
mov
lahf
dec
sub
lods
loopne
mov
push
in
lods
jne
push
add
mov
scas
aad
aad
out
cmc
in
mov
arpl
pop
int
lahf
data16
adc
mov
cmp
repz
outsb
cltd
mov
or
loopne
or
jo
popf
or
inc
sbb
test
outsb
inc
mov
dec
loopne
call
lahf
xlat
fwait
cmp
fdivrl
lahf
push
movsb
shrb
in
fildll
dec
lea
sbb
add
dec
dec
lret
test
fldl
add
int3
je
icebp
scas
fs
fisubs
add
test
bnd
das
mov
or
sbb
inc
cmc
pusha
mov
cmp
addr16
sub
aas
or
adc
adc
in
scas
or
movsb
cld
adc
js
add
je
add
lret
lods
xchg
mov
cmc
test
cmp
push
add
inc
mov
clc
mov
push
insb
sahf
sub
fidivs
mov
lret
ror
loop
mov
xchg
and
mov
xchg
fsqrt
imul
xor
inc
pop
xlat
pop
and
cmpsl
ljmp
mov
xchg
mov
loop
mov
push
xchg
or
xor
lahf
mov
fisttpl
sti
out
pop
pop
xchg
push
xchg
mov
cmp
inc
arpl
mov
fcmovne
xlat
dec
fistpl
inc
and
jno
outsb
gs
aam
fdivs
add
call
stos
incb
sub
dec
iret
cmpsb
pop
pop
nop
xor
stos
std
mov
iret
inc
lods
js
sbb
jg
pushf
sub
psubsb
push
mov
aam
push
sub
sub
cld
and
add
xchg
adc
lret
leave
xchg
mov
push
data16
jno
mov
pop
cmpsb
lcall
pop
scas
and
sub
fcmovnu
repz
mov
inc
insl
sarl
popa
pop
mov
xor
loop
adcb
adc
xchg
sub
lock
pop
push
mov
andl
sub
or
adcl
mov
xchg
mov
pop
jge
mov
jb
sub
dec
je
xor
push
insl
shl
inc
inc
test
adc
inc
ss
lret
adc
mov
mov
mov
cmp
jb
cmp
lea
out
xchg
mov
sti
lahf
sbb
cmp
idivb
les
or
lods
xchg
and
pop
push
jmp
and
xor
in
pushf
mov
mov
dec
pop
and
dec
jle
xor
xchg
cmpsl
mov
cmc
test
pop
xor
push
mov
pop
and
movsb
xchg
sbb
dec
sub
outsl
popf
arpl
js
dec
pop
dec
sub
xchg
paddw
in
mov
mov
mov
mov
adc
fs
into
aam
push
sahf
cmp
test
cmc
jle
fiadds
pop
into
mov
inc
or
psrld
pop
xor
jecxz
js
sub
cmp
sub
or
ds
push
pop
addb
push
cmp
fisubs
pop
dec
bound
pop
popa
orw
cmc
scas
pop
ss
in
mov
mov
dec
or
adc
push
je
mov
adc
push
sarl
mov
push
cmp
hlt
std
nop
fst
test
dec
inc
inc
add
flds
lahf
in
cmpsl
mov
mov
ljmp
and
cltd
xchg
jg
jecxz
xor
pop
test
sub
dec
addr16
mov
mov
jnp
out
data16
sti
jmp
in
add
out
cmpsl
mov
into
xor
enter
jno
add
std
outsl
aas
scas
inc
sbb
lahf
out
mov
jmp
imul
imul
call
push
push
sub
push
push
in
sub
inc
aaa
mov
fwait
pop
jne
nop
orl
push
mov
popa
nop
push
sub
add
xchg
in
repnz
pop
fdivrs
push
sub
mov
inc
movsb
call
jp
ret
and
mov
cld
sti
sbb
jns
pop
stos
mov
in
push
xlat
ljmp
hlt
mov
push
sbb
incl
cmp
sub
pop
sar
cmpsb
jne
scas
mov
inc
inc
cmpl
fidivrs
xor
or
xchg
xchg
mov
jo
xchg
mov
popf
adc
out
or
xchg
fwait
jle
mov
mov
loopne
add
inc
mov
sub
ret
int
xor
pusha
in
and
add
or
insl
aad
cwtl
outsl
test
outsl
cmpsl
sub
aas
dec
push
out
stos
arpl
das
or
jecxz
sub
mov
fidivl
mov
push
ficoml
xchg
lret
pop
out
sbb
jmp
imul
nop
mov
cmp
cmc
and
jg
cmpsl
out
pop
loopne
jbe
inc
cmc
fs
cmpsb
xchg
add
adc
jne
fisttpl
inc
repz
push
cmp
lahf
mov
mov
ds
mov
fs
pop
sbb
testl
insl
and
movsl
cmp
pop
js
sub
sbb
cmp
fcomp
xchg
sub
mov
stos
jns
dec
mov
push
and
pop
xchg
cltd
scas
cmp
mov
scas
mov
sub
mov
adc
daa
repz
stc
add
in
xor
std
in
inc
scas
mov
mov
rol
add
rclb
mov
xchg
lcall
xchg
inc
pop
inc
pop
ljmp
xchg
pop
les
daa
in
sub
fs
pop
testl
inc
cmpsl
fists
cld
std
cmpsl
sti
xor
test
inc
jp
outsb
mov
ret
cmp
aaa
push
sub
notl
lea
not
daa
xor
jnp
adc
sbb
aas
ds
punpcklwd
lods
sbb
or
test
imul
and
lcall
out
pop
and
and
sub
sub
adc
call
insl
repz
fcmove
and
fidivl
repnz
test
mov
adc
mov
mov
loop
inc
jae
add
cmp
jecxz
cmp
sub
popa
imul
lcall
mov
adc
cmp
cmp
scas
mul
and
jnp
scas
mov
inc
sub
fldt
inc
jae
je
maskmovq
negl
call
inc
inc
mov
andb
mov
mov
push
sub
xlat
dec
shr
ret
nop
inc
mov
fsubrs
loope
icebp
stos
rol
jecxz
mov
cmp
jne
cmc
adc
lods
jns
fwait
or
in
ret
mov
mov
jo
repz
dec
xchg
icebp
ja
push
pop
les
xchg
or
movsl
sbb
pop
outsb
pop
xchg
cmpsb
push
xchg
or
xor
sub
mov
rcl
push
ror
int3
nop
inc
xor
fdivrl
daa
jg
xlat
lds
in
push
mov
jle
cmp
ds
xchg
cltd
das
in
ret
test
cmc
imul
lahf
or
pop
xor
xchg
out
scas
dec
sub
pop
jne
pop
leave
repz
xor
ja
lahf
shl
or
outsl
cmp
or
addb
or
xchg
inc
xchg
cli
scas
mov
xchg
jnp
xchg
rclb
outsl
shlb
jmp
or
dec
mov
es
sub
mov
mov
add
and
pop
push
mov
enter
inc
outsb
push
js
add
loope
icebp
or
in
cmp
repz
insl
or
push
mov
add
fistl
es
push
push
fcmovb
shll
mov
adc
jo
pop
xor
sub
xchg
pop
sub
repnz
cmpl
lods
aas
pop
rcll
mov
sbb
sub
lods
cmpsb
out
in
fwait
push
rcl
dec
verw
sub
lea
mov
out
test
fldl
add
insb
in
pop
add
jbe
xor
mov
add
sub
notl
cmp
mov
clc
xor
repnz
jne
stos
repnz
movsb
movsl
test
xchg
lock
lret
xchg
mov
dec
and
popa
mov
dec
cmpsl
out
or
jecxz
push
into
dec
lock
ret
es
mov
aad
stos
lahf
xchg
mov
xor
les
xchg
std
int
and
push
mov
jbe
outsb
movsl
dec
adc
fdivp
cmp
pop
and
repz
pop
sbb
add
pusha
and
loop
mov
dec
add
jno
xchg
mov
movsl
mov
test
or
mov
xchg
faddp
.byte
.byte
.byte
